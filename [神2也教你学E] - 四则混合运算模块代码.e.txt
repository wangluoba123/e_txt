 ' 文件类型：未知类型

 ' 程序名称：四则混合运算
 ' 程序描述：[神2也教你学E] - 四则混合运算
 ' 程序作者：神2 - BoyChong谢栋
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：boychong2@eyou.com
 ' 主页地址：http://www.zzhx.bak.cn
 ' 版权声明：
 ' 版本号：1.1
 ' 创建号：0.0





 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 3 7 系统核心支持库





.程序集 程序集1, , , 

.子程序 _启动子程序, 整数型, , 请在本子程序中放置易模块初始化代码

_临时子程序 () ' 在初始化代码执行完毕后调用测试代码
返回 (0) ' 可以根据您的需要返回任意数值

.子程序 _临时子程序, 空白型, , 
 ' 本名称子程序用作测试程序用，仅在开发及调试环境中有效，编译发布程序前将被系统自动清空，请将所有用作测试的临时代码放在本子程序中。 ***注意不要修改本子程序的名称、参数及返回值类型。

.子程序 开始运算, 文本型, , 
.参数 表达式, 文本型, , 

.局部变量 a, 整数型, , "0", 
.局部变量 b, 整数型, , , 
.局部变量 c, 整数型, , "2", 
.局部变量 d, 文本型, , "2", 
.局部变量 e, 文本型, , "2", 
.局部变量 f, 整数型, , , 
.局部变量 g, 整数型, , , 

.判断循环首 (大于 (寻找文本 (表达式, “*”, 1, 假), 0))
    赋值 (b, 寻找文本 (表达式, “*”, 1, 假))
    初始位置数组 (a, 表达式)
    赋值 (f, 取指定数组 (a, b))
    .如果 (等于 (f, 取数组成员数 (a)))
        赋值 (c [2], 相加 (取文本长度 (表达式), 1))
        .如果 (大于 (取数组成员数 (a), 1))
            赋值 (c [1], a [相减 (取数组成员数 (a), 1)])
        .否则
            赋值 (c [1], 0)
        .如果结束
        删除成员 (a, 取数组成员数 (a), 1)
    .否则
        .如果 (大于 (f, 1))
            赋值 (c [1], a [相减 (f, 1)])
        .否则
            赋值 (c [1], 0)
        .如果结束
        赋值 (c [2], a [相加 (f, 1)])
        删除成员 (a, f, 1)
    .如果结束
    赋值 (e [1], 取文本中间 (表达式, 相加 (c [1], 1), 相减 (b, c [1])))
    赋值 (e [2], 取文本中间 (表达式, 相加 (b, 1), 相减 (c [2], b)))
    赋值 (d [1], 取文本左边 (表达式, c [1]))
    赋值 (d [2], 取文本右边 (表达式, 相减 (相加 (取文本长度 (表达式), 1), c [2])))
    赋值 (表达式, 相加 (d [1], 到文本 (相乘 (到数值 (e [1]), 到数值 (e [2]))), d [2]))
.判断循环尾 ()
.判断循环首 (大于 (寻找文本 (表达式, “/”, 1, 假), 0))
    赋值 (b, 寻找文本 (表达式, “/”, 1, 假))
    初始位置数组 (a, 表达式)
    赋值 (f, 取指定数组 (a, b))
    .如果 (等于 (f, 取数组成员数 (a)))
        赋值 (c [2], 相加 (取文本长度 (表达式), 1))
        .如果 (大于 (取数组成员数 (a), 1))
            赋值 (c [1], a [相减 (取数组成员数 (a), 1)])
        .否则
            赋值 (c [1], 0)
        .如果结束
        删除成员 (a, 取数组成员数 (a), 1)
    .否则
        .如果 (大于 (f, 1))
            赋值 (c [1], a [相减 (f, 1)])
        .否则
            赋值 (c [1], 0)
        .如果结束
        赋值 (c [2], a [相加 (f, 1)])
        删除成员 (a, f, 1)
    .如果结束
    赋值 (e [1], 取文本中间 (表达式, 相加 (c [1], 1), 相减 (b, c [1])))
    赋值 (e [2], 取文本中间 (表达式, 相加 (b, 1), 相减 (c [2], b)))
    赋值 (d [1], 取文本左边 (表达式, c [1]))
    赋值 (d [2], 取文本右边 (表达式, 相减 (相加 (取文本长度 (表达式), 1), c [2])))
    赋值 (表达式, 相加 (d [1], 到文本 (相除 (到数值 (e [1]), 到数值 (e [2]))), d [2]))
.判断循环尾 ()
.判断循环首 (大于 (寻找文本 (表达式, “-”, 1, 假), 0))
    赋值 (b, 寻找文本 (表达式, “-”, 1, 假))
    初始位置数组 (a, 表达式)
    赋值 (f, 取指定数组 (a, b))
    .如果 (等于 (f, 取数组成员数 (a)))
        赋值 (c [2], 相加 (取文本长度 (表达式), 1))
        .如果 (大于 (取数组成员数 (a), 1))
            赋值 (c [1], a [相减 (取数组成员数 (a), 1)])
        .否则
            赋值 (c [1], 0)
        .如果结束
        删除成员 (a, 取数组成员数 (a), 1)
    .否则
        .如果 (大于 (f, 1))
            赋值 (c [1], a [相减 (f, 1)])
        .否则
            赋值 (c [1], 0)
        .如果结束
        赋值 (c [2], a [相加 (f, 1)])
        删除成员 (a, f, 1)
    .如果结束
    赋值 (e [1], 取文本中间 (表达式, 相加 (c [1], 1), 相减 (b, c [1])))
    赋值 (e [2], 取文本中间 (表达式, 相加 (b, 1), 相减 (c [2], b)))
    赋值 (d [1], 取文本左边 (表达式, c [1]))
    赋值 (d [2], 取文本右边 (表达式, 相减 (相加 (取文本长度 (表达式), 1), c [2])))
    赋值 (表达式, 相加 (d [1], 到文本 (相减 (到数值 (e [1]), 到数值 (e [2]))), d [2]))
.判断循环尾 ()
.判断循环首 (大于 (寻找文本 (表达式, “+”, 1, 假), 0))
    赋值 (b, 寻找文本 (表达式, “+”, 1, 假))
    初始位置数组 (a, 表达式)
    赋值 (f, 取指定数组 (a, b))
    .如果 (等于 (f, 取数组成员数 (a)))
        赋值 (c [2], 相加 (取文本长度 (表达式), 1))
        .如果 (大于 (取数组成员数 (a), 1))
            赋值 (c [1], a [相减 (取数组成员数 (a), 1)])
        .否则
            赋值 (c [1], 0)
        .如果结束
        删除成员 (a, 取数组成员数 (a), 1)
    .否则
        .如果 (大于 (f, 1))
            赋值 (c [1], a [相减 (f, 1)])
        .否则
            赋值 (c [1], 0)
        .如果结束
        赋值 (c [2], a [相加 (f, 1)])
        删除成员 (a, f, 1)
    .如果结束
    赋值 (e [1], 取文本中间 (表达式, 相加 (c [1], 1), 相减 (b, c [1])))
    赋值 (e [2], 取文本中间 (表达式, 相加 (b, 1), 相减 (c [2], b)))
    赋值 (d [1], 取文本左边 (表达式, c [1]))
    赋值 (d [2], 取文本右边 (表达式, 相减 (相加 (取文本长度 (表达式), 1), c [2])))
    赋值 (表达式, 相加 (d [1], 到文本 (相加 (到数值 (e [1]), 到数值 (e [2]))), d [2]))
.判断循环尾 ()
返回 (表达式)

.子程序 四则运算, 文本型, 公开, 
.参数 表达式, 文本型, , 

.局部变量 式子变量, 文本型, , "2", 

.判断循环首 (并且 (大于 (倒找文本 (表达式, “(”, , 假), 0), 大于 (寻找文本 (表达式, “)”, , 假), 0)))
    .如果 (大于 (倒找文本 (表达式, “(”, , 假), 寻找文本 (表达式, “)”, , 假)))
        赋值 (式子变量 [1], 取文本左边 (表达式, 相减 (倒找文本 (表达式, “(”, , 假), 1)))
        赋值 (式子变量 [2], 取文本右边 (表达式, 相减 (取文本长度 (表达式), 寻找文本 (表达式, “)”, 相加 (倒找文本 (表达式, “(”, , 假), 1), 假))))
        赋值 (表达式, 相加 (式子变量 [1], 开始运算 (取文本中间 (表达式, 相加 (取文本长度 (式子变量 [1]), 2), 相减 (取文本长度 (表达式), 取文本长度 (式子变量 [1]), 取文本长度 (式子变量 [2]), 2))), 式子变量 [2]))
    .否则
        赋值 (式子变量 [1], 取文本左边 (表达式, 相减 (倒找文本 (表达式, “(”, , 假), 1)))
        赋值 (式子变量 [2], 取文本右边 (表达式, 相减 (取文本长度 (表达式), 寻找文本 (表达式, “)”, , 假))))
        赋值 (表达式, 相加 (式子变量 [1], 开始运算 (取文本中间 (表达式, 相加 (取文本长度 (式子变量 [1]), 2), 相减 (取文本长度 (表达式), 取文本长度 (式子变量 [1]), 取文本长度 (式子变量 [2]), 2))), 式子变量 [2]))
    .如果结束
    
.判断循环尾 ()
开始运算 (表达式)
返回 (表达式)

.子程序 取指定数组, 整数型, , 
.参数 数组, 整数型, 数组, 
.参数 值, 整数型, , 

.局部变量 a, 整数型, , , 
.局部变量 b, 整数型, , , 

.变量循环首 (1, 取数组成员数 (数组), 1, a)
    .如果真 (等于 (数组 [a], 值))
        赋值 (b, a)
        跳出循环 ()
    .如果真结束
    
.变量循环尾 ()
返回 (b)

.子程序 寻找插入数组, 空白型, , 
.参数 具体文本, 文本型, , 
.参数 寻找的文本, 文本型, , 
.参数 加入的数组, 整数型, 数组, 

.局部变量 a, 文本型, , , 
.局部变量 b, 整数型, , , 

赋值 ()
.判断循环首 (大于 (寻找文本 (a, 寻找的文本, b, 真), -1))
    赋值 (b, 寻找文本 (a, 寻找的文本, b, 真))
    加入成员 (加入的数组, b)
    赋值 (b, 相加 (b, 取文本长度 (寻找的文本)))
.判断循环尾 ()

.子程序 初始位置数组, 空白型, , 
.参数 数组, 整数型, 数组, 
.参数 表达式, 文本型, , 

重定义数组 (数组, 假, 0)
寻找插入数组 (表达式, “*”, 数组)
寻找插入数组 (表达式, “/”, 数组)
寻找插入数组 (表达式, “+”, 数组)
寻找插入数组 (表达式, “-”, 数组)
数组排序 (数组, 真)


 ' 不属于任何一个程序集、类模块的函数：
