 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：本源码来自易语言资源网(www.wodesoft.com)
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：             易语言资源网注意事项
--============   www.wodesoft.com  =============--
* 易语言资源网为易语言官方站、易语言官方论坛提供辅助资源站；本易语言资源网( www.wodesoft.com)所有软件和资料均为软件作者提供和网友推荐发布而来，其版权归该软件和程序源码的合法拥有者所有，本站易语言资源网整理收集仅供易语言用户学习和易语言技术研究探讨使用，不得用于任何商业用途。如果由于以上原因造成的版权纠纷本站概不负责！
* 本站资源未经许可,任何网站不得非法盗链及抄袭本站资源；如引用，请注明来自易语言资源网，谢谢合作！
--============   www.wodesoft.com  =============--
 ' 版本号：1.0
 ' 创建号：0.0



.常量 窗口初始最大化, "16777216", 隐藏, 
.常量 窗口单线边框, "8388608", 隐藏, 
.常量 窗口对话框类型边框, "4194304", 隐藏, 
.常量 窗口带垂直滚动条, "2097152", 隐藏, 
.常量 窗口带水平滚动条, "1048576", 隐藏, 
.常量 窗口初始可见, "268435456", 隐藏, 
.常量 窗口初始禁止, "134217728", 隐藏, 
.常量 窗口初始最小化, "536870912", 隐藏, 
.常量 窗口有最大化按钮, "65536", 隐藏, 
.常量 窗口有最小化按钮, "131072", 隐藏, 
.常量 窗口普通折叠式窗口, "0", 隐藏, 
.常量 窗口带系统菜单, "524288", 隐藏, 
.常量 窗口可以拖动调大小, "262144", 隐藏, 
.常量 窗口子窗口, "1073741824", 隐藏, 
.常量 窗口扩展_总在顶层, "8", 隐藏, 
.常量 菜单_浅灰禁止, "1", 隐藏, MF_GRAYED
.常量 菜单_分隔线, "2048", 隐藏, MF_SEPARATOR
.常量 菜单_文本, "0", 隐藏, MF_STRING
.常量 菜单_子菜单, "16", 隐藏, MF_POPUP
.常量 菜单_位图, "4", 隐藏, MF_BITMAP
.常量 工具条_标准按钮, "0", 隐藏, TBSTYLE_BUTTON
.常量 工具条_复选按钮, "2", 隐藏, TBSTYLE_CHECK
.常量 工具条_分隔线, "1", 隐藏, TBSTYLE_SEP
.常量 工具条_按钮允许, "4", 隐藏, TBSTATE_ENABLED
.常量 工具条_按下状态, "2", 隐藏, TBSTATE_PRESSED
.常量 工具条_下拉按钮, "128", 隐藏, TBSTYLE_EX_DOUBLEBUFFER
.常量 常用_普通按钮, "0", 隐藏, 
.常量 常用_默认按钮, "1", 隐藏, 
.常量 常用_自动复选框, "3", 隐藏, 
.常量 常用_自动3态复选框, "5", 隐藏, 
.常量 常用_自动单选钮, "7", 隐藏, 
.常量 常用_分组框, "8", 隐藏, 
.常量 大图标列表, "0", 隐藏, 
.常量 小图标列表, "1", 隐藏, 
.常量 普通列表框, "2", 隐藏, 
.常量 报表列表框, "3", 隐藏, 
.常量 普通列表框2, "4", 隐藏, 
.常量 静态_居中文本, "20", 隐藏, 
.常量 静态_左对齐文本, "21", 隐藏, 
.常量 静态_右对齐文本, "22", 隐藏, 
.常量 静态_图片框, "23", 隐藏, 
.常量 静态_横线, "24", 隐藏, 
.常量 静态_坚线, "25", 隐藏, 
.常量 类型_单行编辑框, "32", 隐藏, 
.常量 类型_多行编辑框, "33", 隐藏, 
.常量 类型_可编辑组合框, "36", 隐藏, 
.常量 类型_不可编辑组合框, "37", 隐藏, 
.常量 IMAGE_BITMAP, "0", 隐藏, 位图
.常量 IMAGE_ICON, "1", 隐藏, 图标
.常量 IMAGE_CURSOR, "2", 隐藏, 指针
.常量 HKEY_CLASSES_ROOT, "-2147483648", 隐藏, 
.常量 HKEY_CURRENT_USER, "-2147483647", 隐藏, 
.常量 HKEY_LOCAL_MACHINE, "-2147483646", 隐藏, 
.常量 HKEY_USERS, "-2147483645", 隐藏, 
.常量 HKEY_PERFORMANCE_DATA, "-2147483644", 隐藏, 
.常量 HKEY_CURRENT_CONFIG, "-2147483643", 隐藏, 
.常量 HKEY_DYN_DATA, "-2147483642", 隐藏, 
.常量 编辑文档, "1", 隐藏, 
.常量 浏览文件夹, "2", 隐藏, 
.常量 寻找文件, "3", 隐藏, 
.常量 打开文件, "4", 隐藏, 
.常量 打印文档, "5", 隐藏, 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 5 0 系统核心支持库



 ' 所需要的模块
 ' 黑月控件类库1.01 E:\programs\计算机编程\易语言资源区\黑月专区\黑月控件类库.ec


数据类型 POINTAPI, 公开, 坐标
    .成员 横向位置, 整数型, , , x，横向位置
    .成员 纵向位置, 整数型, , , y，纵向位置

数据类型 SYSTEMTIME, 公开, 
    .成员 wYear, 短整数型, , , 
    .成员 wMonth, 短整数型, , , 
    .成员 wDayOfWeek, 短整数型, , , 
    .成员 wDay, 短整数型, , , 
    .成员 wHour, 短整数型, , , 
    .成员 wMinute, 短整数型, , , 
    .成员 wSecond, 短整数型, , , 
    .成员 wMilliseconds, 短整数型, , , 

数据类型 RECT, 公开, 
    .成员 左, 整数型, , , 
    .成员 顶, 整数型, , , 
    .成员 右, 整数型, , , 
    .成员 底, 整数型, , , 

数据类型 进程结构, 公开, 
    .成员 结构长度, 整数型, , , 296字节
    .成员 引用计数, 整数型, , , 
    .成员 进程ID, 整数型, , , 
    .成员 默认堆ID, 整数型, , , 
    .成员 模块ID, 整数型, , , 
    .成员 线程数, 整数型, , , 
    .成员 父进程ID, 整数型, , , 
    .成员 线程优先级, 整数型, , , 
    .成员 保留, 整数型, , , 
    .成员 进程名, 字节型, , "256", 

数据类型 模块_字体信息, 公开, 
    .成员 字体名称, 文本型, , , 
    .成员 字体大小, 整数型, , , 
    .成员 字体颜色, 整数型, , , 
    .成员 字体类型, 整数型, , , 
    .成员 是否斜体, 整数型, , , 1为真,0为假
    .成员 是否下划线, 整数型, , , 1为真,0为假

.全局变量 窗口_主窗口, 类_窗口, , , 
.全局变量 超级列表框_主, 类_超级列表框, , , 
.全局变量 选择框_更新, 类_选择框, , , 
.全局变量 按钮_刷新, 类_按钮, , , 
.全局变量 按钮_卸载, 类_按钮, , , 

.DLL命令 CallWindowProc, 整数型, "user32.dll", "CallWindowProcA", 公开, 执行窗口过程
    .参数 前一窗口函数地址, 整数型, , 
    .参数 窗口句柄, 整数型, , 
    .参数 消息值, 整数型, , 
    .参数 附加参数1, 整数型, , 
    .参数 附加参数2, 整数型, , 

.DLL命令 CallWindowProc_98, 整数型, "user32.dll", "CallWindowProcA", 公开, 执行子程序
    .参数 事件程序, 整数型, , 

.DLL命令 PostQuitMessage, 空白型, "user32", "PostQuitMessage", 公开, 通知WINDOWS线索将中断　
    .参数 nExitCode, 整数型, , 

.DLL命令 SetFocus, 整数型, "user32.dll", "SetFocus", 公开, SetFocus，设置得拥有输入焦点的窗口的句柄
    .参数 hwnd, 整数型, , 

.DLL命令 GetWindowLong, 整数型, "user32", "GetWindowLongA", 公开, 从指定窗口的结构中取得信息  由nIndex决定。零表示出错。会设置GetLastError
    .参数 窗口句柄, 整数型, , 欲为其获取信息的窗口的句柄
    .参数 属性, 整数型, , 欲取回的信息，可以是下述任何一个常数：;GWL_EXSTYLE：扩展窗口样式;GWL_STYLE：窗口样式;GWL_WNDPROC：该窗口的窗口函数的地址;GWL_HINSTANCE：拥有窗口的实例的句柄;GWL_HWNDPARENT：该窗口之父的句柄。不要用SetWindowWord来改变这个值;GWL_ID：对话框中一个子窗口的标识符;GWL_USERDATA：含义由应用程序规定;DWL_DLGPROC：这个窗口的对话框函数地址;DWL_MSGRESULT：在对话框函数中处理的一条消息返回的值;DWL_USER：含义由应用程序规定;

.DLL命令 SetWindowLong, 整数型, "user32", "SetWindowLongA", 公开, 在窗口结构中为指定的窗口设置信息  指定数据的前一个值
    .参数 窗口句柄, 整数型, , hwnd，欲为其取得信息的窗口的句柄
    .参数 窗口信息值, 整数型, , nIndex，请参考GetWindowLong函数的nIndex参数的说明
    .参数 窗口信息新值, 子程序指针, , dwNewLong，由nIndex指定的窗口信息的新值

.DLL命令 SetWindowLong_style, 整数型, "user32", "SetWindowLongA", 公开, 在窗口结构中为指定的窗口设置信息  指定数据的前一个值
    .参数 窗口句柄, 整数型, , hwnd，欲为其取得信息的窗口的句柄
    .参数 窗口信息值, 整数型, , nIndex，请参考GetWindowLong函数的nIndex参数的说明
    .参数 窗口信息新值, 整数型, , dwNewLong，由nIndex指定的窗口信息的新值

.DLL命令 ShowWindow, 整数型, "user32", "ShowWindow", 公开, 控制窗口的可见性（在vb里使用：针对vb窗体及控件，请使用对应的vb属性）　如窗口之前是可见的，则返回TRUE（非零），否则返回FALSE（零）
    .参数 hwnd, 整数型, , 窗口句柄，要向这个窗口应用由nCmdShow指定的命令
    .参数 nCmdShow, 整数型, , 为窗口指定可视性方面的一个命令。请用下述任何一个常数;SW_HIDE：隐藏窗口，活动状态给令一个窗口;SW_MINIMIZE：最小化窗口，活动状态给令一个窗口;SW_RESTORE：用原来的大小和位置显示一个窗口，同时令其进入活动状态;SW_SHOW：用当前的大小和位置显示一个窗口，同时令其进入活动状态;SW_SHOWMAXIMIZED：最大化窗口，并将其激活;SW_SHOWMINIMIZED：最小化窗口，并将其激活;SW_SHOWMINNOACTIVE：最小化一个窗口，同时不改变活动窗口;SW_SHOWNA：用当前的大小和位置显示一个窗口，不改变活动窗口;SW_SHOWNOACTIVATE：用最近的大小和位置显示一个窗口，同时不改变活动窗口;SW_SHOWNORMAL：与SW_RESTORE相同;

.DLL命令 UpdateWindow, 整数型, "user32", "UpdateWindow", 公开, 强制立即更新窗口，窗口中以前屏蔽的所有区域都会重画（在vb里使用：如vb窗体或控件的任何部分需要更新，可考虑直接使用refresh方法　非零表示成功，零表示失败
    .参数 hwnd, 整数型, , 欲更新窗口的句柄;

.DLL命令 GetWindowText, 整数型, "user32.dll", "GetWindowTextA", 公开, 取得一个窗体的标题（caption）文字，或者一个控件的内容（在vb里使用：使用vb窗体或控件的caption或text属性）  复制到lpString的字串长度；不包括空中止字符。会设置GetLastError
    .参数 窗口句柄, 整数型, , 欲获取文字的那个窗口的句柄
    .参数 缓冲区, 整数型, , 预定义的一个缓冲区，至少有cch+1个字符大小；随同窗口文字载入
    .参数 缓冲尺寸, 整数型, , lp缓冲区的长度;

.DLL命令 GetWindowTextLength, 整数型, "", "GetWindowTextLengthA", 公开, 取窗口标题长度_
    .参数 窗口句柄, 整数型, , 欲获取文字长度的那个窗口的句柄

.DLL命令 SetWindowTextA, 整数型, "user32", "SetWindowTextA", 公开, 设置窗口标题_
    .参数 窗口句柄, 整数型, , 
    .参数 窗口标题, 文本型, , 

.DLL命令 MoveWindow, 整数型, "user32.dll", "MoveWindow", 公开, 改变窗口_
    .参数 窗口句柄, 整数型, , hwnd，欲移动窗口的句柄
    .参数 左侧位置, 整数型, , x，窗口新的左侧位置
    .参数 顶部位置, 整数型, , y，窗口新的顶部位置
    .参数 新宽度, 整数型, , nWidth，窗口的新宽度
    .参数 高宽度, 整数型, , nHeight，窗口的高宽度
    .参数 是否重画, 整数型, , bRepaint，如窗口此时应重画，则设为TRUE（非零）

.DLL命令 CreateWindowEx, 整数型, "user32.dll", "CreateWindowExA", 公开, 
    .参数 dwExStyle, 整数型, , 
    .参数 lpClassName, 文本型, , 窗口实例的类的名字
    .参数 lpWindowName, 文本型, , 窗口标题名
    .参数 dwStyle, 整数型, , 新创建的窗口的样式
    .参数 X, 整数型, , 窗口左上角的横坐标
    .参数 Y, 整数型, , 窗口左上角的纵坐标
    .参数 nWidth, 整数型, , 窗口的宽度
    .参数 nHeight, 整数型, , 窗口的高度
    .参数 hWndParent, 整数型, , 该窗口的父窗口的句柄
    .参数 hMenu, 整数型, , 窗口主菜单句柄
    .参数 hInstance, 整数型, , 创建窗口的应用程序当前句柄
    .参数 lpParam, 整数型, , 指向一个传递给窗口的参数值的指针

.DLL命令 SetWindowPos, 整数型, "", "SetWindowPos", 公开, 
    .参数 窗口句柄, 整数型, , 
    .参数 最最前端, 整数型, , WND_TOPMOST=-1
    .参数 窗口新的x坐标, 整数型, , 0
    .参数 窗口新的y坐标, 整数型, , 0
    .参数 新的窗口宽度, 整数型, , 0
    .参数 新的窗口高度, 整数型, , 0
    .参数 保持大小, 整数型, , SWP_NOSIZE=1

.DLL命令 IsWindow, 整数型, "user32", "IsWindow", 公开, 判断窗口是否可见  如窗口可见则返回TRUE（非零）
    .参数 窗口句柄, 整数型, , 要测试的那个窗口的句柄;

.DLL命令 IsWindowVisible, 整数型, "user32", "IsWindowVisible", 公开, 判断窗口是否可见  如窗口可见则返回TRUE（非零）
    .参数 窗口句柄, 整数型, , 要测试的那个窗口的句柄;

.DLL命令 CreateMenu, 整数型, "user32.dll", "CreateMenu", 公开, 菜单_创建

.DLL命令 InsertMenu, 整数型, "user32.dll", "InsertMenuA", 公开, 菜单_插入条目
    .参数 菜单句柄, 整数型, , hMenu,菜单的句柄
    .参数 插入点标志符, 整数型, , nPosition,参见相关帮助
    .参数 常数标志, 整数型, , wFlags,常数标志的组合,参考ModifyMenu
    .参数 新条目ID, 整数型, , wIDNewItem,指定菜单条目的新菜单ID
    .参数 条目内容, 整数型, , lpNewItem,由wFlags参数决定

.DLL命令 InsertMenuItem, 整数型, "user32.dll", "InsertMenuItemA", 公开, 菜单_插入指定条目
    .参数 菜单句柄, 整数型, , hMenu,菜单的句柄
    .参数 菜单条目, 整数型, , un,菜单条目的菜单ID
    .参数 菜单条目标志, 逻辑型, , bool,参见相关帮助
    .参数 指定菜单条目结构, 未知类型0x41010533, , lpcMenuItemInfo,用于设置指定菜单条目的特征

.DLL命令 SetMenuItemInfo, 整数型, "user32.dll", "SetMenuItemInfoA", 公开, 为一个菜单条目设置指定的信息，具体信息保存于MENUITEMINFO结构中  TRUE（非零）表示成功，否则返回零。会设置GetLastError
    .参数 菜单句柄, 整数型, , hMenu
    .参数 菜单标识符或位置, 整数型, , un
    .参数 标识符或位置, 逻辑型, , bool，如un指定了条目的位置，就为TRUE；如指定的是菜单ID，就为FALSE
    .参数 菜单条目信息结构, 未知类型0x41010533, , lpcMenuItemInfo

.DLL命令 TrackPopupMenu, 整数型, "user32.dll", "TrackPopupMenu", 公开, 在屏幕的任意地方显示一个弹出式菜单
    .参数 菜单句柄, 整数型, , 弹出式菜单的句柄
    .参数 标志, 整数型, , 位置标志和鼠标追踪标志的组合，见下表
    .参数 横坐标, 整数型, , 这个点指定了弹出式菜单在屏幕坐标系统中的位置
    .参数 纵坐标, 整数型, , 这个点指定了弹出式菜单在屏幕坐标系统中的位置
    .参数 保留参数, 整数型, , 未使用，设为零
    .参数 窗口句柄, 整数型, , 用于接收弹出式菜单命令的窗口的句柄。应该使用窗体的窗口句柄――窗体中有一个菜单能象弹出式菜单那样接收相同的命令ID集
    .参数 矩形结构, 整数型, , 用屏幕坐标定义的一个矩形，如用户在这个矩形的范围内单击，则弹出式菜单不会关闭。如单击弹出式菜单之外的任何一个地方，则会关闭菜单。可以设为NULL

.DLL命令 AppendMenu, 整数型, "user32.dll", "AppendMenuA", 公开, 菜单_添加项非零表示成功，零表示失败
    .参数 菜单句柄, 整数型, , hMenu,菜单句柄
    .参数 菜单常数标志, 整数型, , wFlags,参见相关帮助
    .参数 新菜单条目ID, 整数型, , wIDNewItem,指定菜单条目的新命令ID
    .参数 标志值, 文本型, , lpNewItem,参见相关帮助

.DLL命令 DrawMenuBar, 整数型, "user32.dll", "DrawMenuBar", 公开, 为指定的窗口重画菜单
    .参数 窗口句柄, 整数型, , hwnd,要重画菜单栏的窗口的句柄 

.DLL命令 CreatePopupMenu, 整数型, "user32.dll", "CreatePopupMenu", 公开, 菜单_创建空白弹出式

.DLL命令 SetMenu, 整数型, "user32.dll", "SetMenu", 公开, 菜单_设置父
    .参数 窗口句柄, 整数型, , 
    .参数 菜单句柄, 整数型, , 

.DLL命令 CreateToolbarEx, 整数型, "Comctl32.dll", "CreateToolbarEx", 公开, 创建工具栏_
    .参数 hwnd, 整数型, , 
    .参数 ws, 整数型, , 风格
    .参数 wID, 整数型, , 
    .参数 nBitmaps, 整数型, , 位图数量
    .参数 hBMInst, 整数型, , 位置模块句柄或NULL
    .参数 wBMID, 整数型, , 位图标识或位图句柄
    .参数 lpButtons, 未知类型0x41010534, 数组, TB结构
    .参数 iNumButtons, 整数型, , 按钮数量
    .参数 dxButton, 整数型, , 按钮宽度
    .参数 dyButton, 整数型, , 按钮高度
    .参数 dxBitmap, 整数型, , 位图宽度
    .参数 dyBitmap, 整数型, , 位图高度
    .参数 uStructSize, 整数型, , TB结构长度

.DLL命令 ImageList_Create, 整数型, "comctl32.dll", "ImageList_Create", 公开, 创建图标列表_
    .参数 宽度, 整数型, , 
    .参数 高度, 整数型, , 
    .参数 颜色深度, 整数型, , 
    .参数 初始图标数目, 整数型, , 
    .参数 最大图标数目, 整数型, , 

.DLL命令 ImageList_Add, 整数型, "comctl32.dll", "ImageList_Add", 公开, 加入图标_
    .参数 图标列表句柄, 整数型, , 
    .参数 位图句柄, 整数型, , 
    .参数 掩码位位图句柄, 整数型, , 

.DLL命令 LoadBitmap, 整数型, "user32.dll", "LoadBitmapA", 公开, 从指定的模块或应用程序实例中载入一幅位图
    .参数 实例句柄, 整数型, , hInstance,参见相关帮助
    .参数 位图标识, 整数型, , lpBitmapName,参见相关帮助

.DLL命令 SendMessage_树形添加结构, 整数型, "user32", "SendMessageA", 公开, 调用一个窗口的窗口函数，将一条消息发给那个窗口。除非消息处理完毕，否则该函数不会返回。SendMessageBynum， ;    SendMessageByString是该函数的“类型安全”声明形式  由具体的消息决定
    .参数 窗口句柄, 整数型, , 要接收消息的那个窗口的句柄
    .参数 信息值, 整数型, , 消息的标识符
    .参数 参数一, 整数型, , 具体取决于消息
    .参数 参数二, 未知类型0x41010535, , 具体取决于消息;

.DLL命令 SendMessage_树形项目信息, 整数型, "user32", "SendMessageA", 公开, 调用一个窗口的窗口函数，将一条消息发给那个窗口。除非消息处理完毕，否则该函数不会返回。SendMessageBynum， ;    SendMessageByString是该函数的“类型安全”声明形式  由具体的消息决定
    .参数 窗口句柄, 整数型, , 要接收消息的那个窗口的句柄
    .参数 信息值, 整数型, , 消息的标识符
    .参数 参数一, 整数型, , 具体取决于消息
    .参数 参数二, 未知类型0x41010536, , 具体取决于消息;

.DLL命令 _取对象指针, 整数型, "", "lstrcpyn", 公开, 
    .参数 目的指针, 对象, 传址, 
    .参数 源指针, 对象, 传址, 
    .参数 复制长度, 整数型, , 0

.DLL命令 GetModuleFileName, 整数型, "", "GetModuleFileNameA", 公开, 
    .参数 hModule, 整数型, , 
    .参数 lpFileName, 文本型, , 
    .参数 nSize, 整数型, , 

.DLL命令 _取整型指针, 整数型, "", "lstrcpyn", 公开, 
    .参数 目的指针, 整数型, 传址, 
    .参数 源指针, 整数型, 传址, 
    .参数 复制长度, 整数型, , 0

.DLL命令 _取短整型指针, 整数型, "", "lstrcpyn", 公开, 
    .参数 目的指针, 短整数型, 传址, 
    .参数 源指针, 短整数型, 传址, 
    .参数 复制长度, 整数型, , 0

.DLL命令 _取字节指针, 整数型, "", "lstrcpyn", 公开, 
    .参数 目的指针, 字节型, 传址, 
    .参数 源指针, 字节型, 传址, 
    .参数 复制长度, 整数型, , 0

.DLL命令 _取双精度指针, 整数型, "", "lstrcpyn", 公开, 
    .参数 目的指针, 字节型, 传址, 
    .参数 源指针, 字节型, 传址, 
    .参数 复制长度, 整数型, , 0

.DLL命令 _取子程序指针, 整数型, "", "lstrcpyn", 公开, 返回整型子程序
    .参数 目的指针, 子程序指针, , 
    .参数 源指针, 子程序指针, , 
    .参数 复制长度, 整数型, , 0

.DLL命令 _取字节集指针, 整数型, "", "lstrcpyn", 公开, 
    .参数 目的指针, 字节集, 传址, 
    .参数 源指针, 字节集, 传址, 
    .参数 复制长度, 整数型, , 0

.DLL命令 _取文本指针, 整数型, "", "lstrcpyn", 公开, 
    .参数 目的指针, 文本型, 传址, 
    .参数 源指针, 文本型, 传址, 
    .参数 复制长度, 整数型, , 0

.DLL命令 lstrcpy, 整数型, "", "lstrcpy", 公开, _复制文本
    .参数 目的指针, 文本型, 传址, 
    .参数 源指针, 字节集, 传址, 

.DLL命令 GetCommandLine, 文本型, "", "GetCommandLineA", 公开, 

.DLL命令 HeapAlloc, 整数型, "", "HeapAlloc", 公开, 
    .参数 hHeap, 整数型, , 
    .参数 dwFlags, 整数型, , 
    .参数 dwBytes, 整数型, , 

.DLL命令 GetProcessHeap, 整数型, "", "GetProcessHeap", 公开, 

.DLL命令 HeapFree, 逻辑型, "", "HeapFree", 公开, 
    .参数 hHeap, 整数型, , 
    .参数 dwFlags, 整数型, , 
    .参数 lpMem, 整数型, , 

.DLL命令 ReadProcessMemory, 整数型, "", "ReadProcessMemory", 公开, 读内存指针整型内容
    .参数 hProcess, 整数型, , 
    .参数 lpBaseAddress, 整数型, , 
    .参数 lpBuffer, 整数型, , 
    .参数 nSize, 整数型, , 
    .参数 lpNumberOfBytesRead, 整数型, , 

.DLL命令 GetCurrentProcess, 整数型, "", "GetCurrentProcess", 公开, API_取当前进程句柄

.DLL命令 MoveMemory, 整数型, "", "RtlMoveMemory", 公开, API_复制内存
    .参数 Destination, 整数型, , 
    .参数 Source, 整数型, , 
    .参数 Length, 整数型, , 

.DLL命令 StrToInt64Ex, 整数型, "shlwapi.dll", "StrToInt64ExA", 公开, 进制文本转整数_64-bit integer
    .参数 pszString, 文本型, , 
    .参数 dwFlags, 整数型, , 
    .参数 piRet, 整数型, 传址, 

.DLL命令 GetComputerName, 整数型, "kernel32.dll", "GetComputerNameA", 公开, 取计算机名_TRUE（非零）表示成功，否则返回零。
    .参数 字串缓冲区, 文本型, , lpBuffer，随同计算机名载入的字串缓冲区
    .参数 缓冲区长度, 整数型, 传址, nSize，缓冲区的长度。这个变量随同返回计算机名的实际长度载入

.DLL命令 GetUserName, 整数型, "advapi32.dll", "GetUserNameA", 公开, 取用户名,TRUE（非零）表示成功，否则返回零。
    .参数 字串缓冲区, 文本型, , lpBuffer，随同用户名载入的字串缓冲区
    .参数 缓冲区长度, 整数型, 传址, nSize，缓冲区的长度。这个变量随同返回用户名的实际长度载入

.DLL命令 MessageBox, 整数型, "user32.dll", "MessageBoxA", 公开, 
    .参数 hwnd, 整数型, , 
    .参数 lpText, 文本型, , 
    .参数 lpCaption, 文本型, , 
    .参数 wType, 整数型, , 

.DLL命令 ShellExecuteA, 空白型, "", "ShellExecuteA", 公开, 
    .参数 窗口句柄, 整数型, , 父窗口句柄,可为0
    .参数 操作方式, 文本型, , "open" 或者 "print"
    .参数 链接地址, 文本型, , "Http://www.163.com"，"mailto:sst95@21cn.com",文件合路径
    .参数 命令行参数, 文本型, , 
    .参数 完整路径, 文本型, , 
    .参数 窗口显示方式, 整数型, , 

.DLL命令 GetCursorPos, 整数型, "user32", "GetCursorPos", 公开, 取鼠标位置_
    .参数 位置, POINTAPI, , 

.DLL命令 GetOpenFileName, 整数型, "comdlg32.dll", "GetOpenFileNameA", 公开, 打开多文件对话框
    .参数 OpenFile, 未知类型0x41010537, , 

.DLL命令 GetSaveFileName, 整数型, "comdlg32.dll", "GetSaveFileNameA", 公开, 打开保存对话框
    .参数 OpenFile, 未知类型0x41010537, , 

.DLL命令 LoadImage, 整数型, "user32.dll", "LoadImageA", 公开, 载入一个位图、图标或指针
    .参数 实例句柄, 整数型, , hInst,要从其中载入图象的DLL或应用程序模块或实例句柄
    .参数 图象标志符, 文本型, , lpsz,欲载入图象的名字
    .参数 图象类型, 整数型, , un1,指定了欲载入的图象类型
    .参数 图象宽度, 整数型, , n1,要求的图象宽度
    .参数 图象高度, 整数型, , n2,要求的图象高度
    .参数 常数组合, 整数型, , un2,常数的任意组合

.DLL命令 GetModuleHandle, 整数型, "kernel32", "GetModuleHandleA", 公开, 获取一个应用程序或动态链接库的模块句柄　如执行成功成功，则返回模块句柄。零表示失败。会设置GetLastError
    .参数 lpModuleName, 整数型, , 指定模块名，这通常是与模块的文件名相同的一个名字。例如，NOTEPAD.EXE程序的模块文件名就叫作NOTEPAD;  

.DLL命令 SendMessage, 整数型, "user32", "SendMessageA", 公开, 调用一个窗口的窗口函数，将一条消息发给那个窗口。除非消息处理完毕，否则该函数不会返回。SendMessageBynum， ;    SendMessageByString是该函数的“类型安全”声明形式  由具体的消息决定
    .参数 窗口句柄, 整数型, , 要接收消息的那个窗口的句柄
    .参数 信息值, 整数型, , 消息的标识符
    .参数 参数一, 整数型, , 具体取决于消息
    .参数 参数二, 整数型, , 具体取决于消息;

.DLL命令 CreateFont, 整数型, "gdi32", "CreateFontA", 公开, 用指定的属性创建一种逻辑字体　执行成功则返回逻辑字体的句柄，零表示失败。会设置GetLastError
    .参数 nHeight, 整数型, , IfHeight
    .参数 nWidth, 整数型, , IfWidth
    .参数 nEscapement, 整数型, , IfEscapement
    .参数 nOrientation, 整数型, , IfOrientation
    .参数 fnWeight, 整数型, , IfWeight
    .参数 fdwItalic, 整数型, , IfItalic
    .参数 fdwUnderline, 整数型, , IfUnderline
    .参数 fdwStrikeOut, 整数型, , IfStrikeOut
    .参数 fdwCharSet, 整数型, , IfCharSet
    .参数 OutputPrecision, 整数型, , IfOutputPrecision
    .参数 ClipPrecision, 整数型, , IfClipPrecision
    .参数 Quality, 整数型, , IfQuality
    .参数 PitchAndFamily, 整数型, , IfPitchAndFamily
    .参数 lpszFace, 文本型, , IfFaceName;  

.DLL命令 DeleteObject, 整数型, "gdi32", "DeleteObject", 公开, 用这个函数删除GDI对象，比如画笔、刷子、字体、位图、区域以及调色板等等。对象使用的所有系统资源都会被释放　非零表示成功，零表示失败
    .参数 对象句柄, 整数型, , 一个GDI对象的句柄;  

.DLL命令 FillMemory, 空白型, "kernel32.dll", "RtlFillMemory", 公开, 填充内存_
    .参数 目的内存, 整数型, , Destination
    .参数 长度, 整数型, , Length
    .参数 填充内容, 整数型, , Fill

.DLL命令 lstrlen, 整数型, "kernel32.dll", "lstrlenA", 公开, 取文本内容长度_
    .参数 文本, 文本型, , Ptr

.DLL命令 StrTrim, 整数型, "shlwapi.dll", "StrTrimA", 公开, 替换首尾文本
    .参数 psz, 文本型, , 
    .参数 pszTrimChars, 文本型, , 

.DLL命令 CharLower, 文本型, "", "CharLowerA", 公开, 到小写_
    .参数 str, 文本型, , 

.DLL命令 CharUpper, 文本型, "", "CharUpperA", 公开, 到大写_
    .参数 str, 文本型, , 

.DLL命令 GetCurrentDirectory, 整数型, "", "GetCurrentDirectoryA", 公开, 
    .参数 nBufferLength, 整数型, , 
    .参数 lpBuffer, 文本型, , 

.DLL命令 GetLastError, 整数型, "", "GetLastError", 公开, 取系统最后错误代码

.DLL命令 GetWindowRect, 空白型, "", "GetWindowRect", 公开, 取窗口非客户区范围_
    .参数 hwnd, 整数型, , 
    .参数 rect, RECT, , 

.DLL命令 GetDesktopWindow, 整数型, "", "GetDesktopWindow", 公开, 

.DLL命令 RegCloseKey, 整数型, "", "RegCloseKey", 公开, 关闭注册项
    .参数 hkey, 整数型, , 

.DLL命令 RegQueryValueExA, 整数型, "", "RegQueryValueExA", 公开, 取注册表项
    .参数 hKey, 整数型, , 
    .参数 lpValueName, 文本型, , 
    .参数 lpReserved, 整数型, , 
    .参数 lpType, 整数型, 传址, 
    .参数 lpData, 文本型, 传址, 
    .参数 lpcbData, 整数型, 传址, 

.DLL命令 RegOpenKeyExA, 整数型, "", "RegOpenKeyExA", 公开, 打开注册表项
    .参数 hKey, 整数型, , 
    .参数 lpSubKey, 文本型, , 
    .参数 ulOptions, 整数型, , 
    .参数 samDesired, 整数型, , 
    .参数 phkResult, 整数型, 传址, 

.DLL命令 RegSetValueExA, 整数型, "", "RegSetValueExA", 公开, 写注册表项
    .参数 hKey, 整数型, , 
    .参数 lpValueName, 文本型, , 
    .参数 Reserved, 整数型, , 
    .参数 dwType, 整数型, , 
    .参数 lpData, 文本型, 传址, 
    .参数 cbData, 整数型, , 

.DLL命令 RegDeleteKeyA, 整数型, "", "RegDeleteKeyA", 公开, 
    .参数 hKey, 整数型, , 
    .参数 lpSubKey, 文本型, , 

.DLL命令 RegDeleteValueA, 整数型, "", "RegDeleteValueA", 公开, 
    .参数 hKey, 整数型, , 
    .参数 lpValueKey, 文本型, , 

.DLL命令 RegCreateKeyA, 整数型, "", "RegCreateKeyA", 公开, 
    .参数 hKey, 整数型, , 一个打开项的句柄，或者一个标准项名
    .参数 lpSubKey, 文本型, , 欲创建的新子项的名字
    .参数 phkResult, 整数型, 传址, 

.DLL命令 Sleep, 整数型, "kernel32.dll", "Sleep", 公开, 
    .参数 延时时间, 整数型, , 毫秒

.DLL命令 GetInputState, 整数型, "user32", "GetInputState", 公开, 

.DLL命令 GetProcAddress, 整数型, "", "GetProcAddress", 公开, 根据加载DLL模块返回的句柄，取模块内部函数的指针地址
    .参数 hModule, 整数型, , 为HMODULE结构，是所调用DLL模块的句柄
    .参数 lpProcName, 文本型, , 为LPCSTR结构，是函数名称

.DLL命令 LoadLibrary, 整数型, "", "LoadLibraryA", 公开, 加载一个DLL，返回模块句柄
    .参数 name, 文本型, , 

.DLL命令 FreeLibrary, 整数型, "", "FreeLibrary", 公开, 释放一个DLL
    .参数 hddl, 整数型, , 

.DLL命令 WriteProcessMemory_Bin, 整数型, "kernel32", "WriteProcessMemory", 公开, 在指定进程中写内存
    .参数 hProcess, 整数型, , 使用函数 OpenProcess() 返回。
    .参数 起始写入地址, 整数型, , 
    .参数 要写入的内容, 字节集, , 本参数的类型也能是“字节”型。
    .参数 写入长度, 整数型, , 写入的数据长度。
    .参数 实际写入长度, 整数型, , 实际写入的数据长度，为0则忽略。

.DLL命令 WaitForSingleObject, 整数型, "kernel32", "WaitForSingleObject", 公开, 监测一个对象
    .参数 hHandle, 整数型, , 
    .参数 dwMilliseconds, 整数型, , 

.DLL命令 CloseHandle, 整数型, "kernel32.dll", "CloseHandle", 公开, 
    .参数 对象句柄, 整数型, , 

.DLL命令 CreateToolhelp32Snapshot, 整数型, "kernel32.dll", "CreateToolhelp32Snapshot", 公开, 创建系统快照TH32CS_INHERIT=2147483648  TH32CS_SNAPALL=位或(1,2,4,8)
    .参数 快照标志, 整数型, , 进程＝15，线程=4，DLL＝8，堆=1
    .参数 参数, 整数型, , TH32CS_SNAPHEAPLIST=1 TH32CS_SNAPPROCESS=2 TH32CS_SNAPTHREAD=4 TH32CS_SNAPMODULE=8

.DLL命令 Process32Next, 逻辑型, "kernel32.dll", "Process32Next", 公开, 下个进程结构
    .参数 快照句柄, 整数型, , 
    .参数 进程结构, 进程结构, 传址, 

.DLL命令 Process32First, 逻辑型, "kernel32.dll", "Process32First", 公开, 取进程快照第一个进程信息返回内存指针
    .参数 快照句柄, 整数型, , 
    .参数 进程结构, 进程结构, 传址, 

.DLL命令 OpenProcess, 整数型, "kernel32", "OpenProcess", 公开, 将句柄返回给过程对象
    .参数 操作方式, 整数型, , 操作方式，PROCESS_CREATE_THREAD（允许远程创建线程）；PROCESS_VM_OPERATION （允许远程VM操作）；PROCESS_VM_WRITE（允许远程VM写）；2035711 完全访问。
    .参数 bInheritHandle, 整数型, , 
    .参数 进程ID, 整数型, , 使用一个变量装载进程ID。

.DLL命令 PostThreadMessageA, 整数型, "user32.dll", "PostThreadMessageA", 公开, 发送线程消息_
    .参数 线程ID, 整数型, , 
    .参数 消息标识, 整数型, , 
    .参数 消息1, 整数型, , 
    .参数 消息2, 整数型, , 

.DLL命令 RegOpenKey, 整数型, "advapi32.dll", "RegOpenKeyA", , 
    .参数 hKey, 整数型, , 
    .参数 lpSubKey, 文本型, , 
    .参数 phkResult, 整数型, 传址, 

.DLL命令 RegEnumKey, 整数型, "advapi32.dll", "RegEnumKeyA", , 
    .参数 hKey, 整数型, , 
    .参数 dwIndex, 整数型, , 
    .参数 lpName, 文本型, , 
    .参数 cbName, 整数型, , 

.DLL命令 RegCloseKey, 整数型, "advapi32.dll", "RegCloseKey", , 
    .参数 hKey, 整数型, , 

.DLL命令 API_ShellExecute, 整数型, "shell32.dll", "ShellExecuteA", ,  ;    查找与指定文件关联在一起的程序的文件名　非零表示成功，零表示失败。会设置GetLastError
    .参数 hwnd, 整数型, , 指定一个窗口的句柄，有时候，windows程序有必要在创建自己的主窗口前显示一个消息框
    .参数 lpOperation, 文本型, , 指定字串“open”来打开lpFlie文档，或指定“Print”来打印它
    .参数 lpFile, 文本型, , 想用关联程序打印或打开一个程序名或文件名
    .参数 lpParameters, 文本型, , 如lpszFlie是可执行文件，则这个字串包含传递给执行程序的参数
    .参数 lpDirectory, 文本型, , 想使用的完整路径
    .参数 nShowCmd, 整数型, , 定义了如何显示启动程序的常数值。参考ShowWindow函数的nCmdShow参数;

.DLL命令 API_发送消息, 整数型, "user32", "SendMessageA", , 调用一个窗口的窗口函数，将一条消息发给那个窗口。除非消息处理完毕，否则该函数不会返回。SendMessageBynum， ;    SendMessageByString是该函数的“类型安全”声明形式　由具体的消息决定
    .参数 窗口句柄, 整数型, , 要接收消息的那个窗口的句柄
    .参数 信息值, 整数型, , 消息的标识符
    .参数 参数一, 整数型, , 具体取决于消息
    .参数 参数二, 整数型, , 具体取决于消息;

.程序集 程序集1, , , 

.子程序 _启动子程序, 整数型, , 本子程序在程序启动后最先执行
 ' --========  易语言资源网  (www.wodesoft.com)  ======--
 ' 努力创建完善、持续更新的易语言学习例程源码资源站
 ' --================   www.wodesoft.com  ===========--
 ' --==================   易语言资源网注意事项  ================--
 ' * 易语言资源网为易语言官方站、易语言官方论坛提供辅助资源站；
 ' 本易语言资源网( www.wodesoft.com)所有软件和资料均为软件作者提
 ' 供和网友推荐发布而来，其版权归该软件和程序源码的合法拥有者所
 ' 有，本站易语言资源网整理收集仅供易语言用户学习和易语言技术研
 ' 究探讨使用，不得用于任何商业用途。如果由于以上原因造成的版权
 ' 纠纷本站概不负责！
 ' * 本站资源未经许可，任何网站不得非法盗链及抄袭本站资源；如引用
 ' 页面，请注明来自易语言资源网，谢谢合作！
 ' --=====================   www.wodesoft.com  ================--

窗口_主窗口.方法_创建 (0, “MY UNINSTALL 黑月版 1.0”, , , 500, 400, , )
超级列表框_主.方法_创建 (窗口_主窗口.方法_取句柄 (), “My Uninstall”, 0, 0, 相减 (窗口_主窗口.方法_取宽度 (), 10), 相减 (窗口_主窗口.方法_取高度 (), 80), 3)
选择框_更新.方法_创建 (窗口_主窗口.方法_取句柄 (), “显示Windows更新”, 10, 相加 (超级列表框_主.方法_取顶边 (), 超级列表框_主.方法_取高度 (), 20), 130)
选择框_更新.事件_被单击 (&事件_选择框被单击)
超级列表框_主.方法_插入列 (250, “程序名称”, 0)
超级列表框_主.方法_插入列 (80, “版本”, 1)
超级列表框_主.方法_插入列 (100, “发行商”, 2)
超级列表框_主.方法_插入列 (200, “卸载接口”, 3)
超级列表框_主.方法_设置风格 (33)
超级列表框_主.事件_被双击 (&事件_表项被双击)
超级列表框_主.方法_自动选择 (真)
按钮_刷新.方法_创建 (窗口_主窗口.方法_取句柄 (), “刷新列表”, 相减 (窗口_主窗口.方法_取宽度 (), 300), 相加 (超级列表框_主.方法_取顶边 (), 超级列表框_主.方法_取高度 (), 5))
 ' 本源码来自易语言资源网(www.wodesoft.com)
按钮_刷新.事件_被单击 (&事件_按钮_刷新被单击)
按钮_卸载.方法_创建 (窗口_主窗口.方法_取句柄 (), “双击项目进行卸载”, 相减 (窗口_主窗口.方法_取宽度 (), 200), 相加 (超级列表框_主.方法_取顶边 (), 超级列表框_主.方法_取高度 (), 5), 150)
按钮_卸载.方法_禁止 (真)
窗口_主窗口.事件_尺寸被改变 (&事件_窗口尺寸被改变)
_刷新卸载列表 ()
模块_消息循环 ()
返回 (0) ' 可以根据您的需要返回任意数值

.子程序 事件_窗口尺寸被改变, 空白型, , 
超级列表框_主.方法_移动 (0, 0, 相减 (窗口_主窗口.方法_取宽度 (), 10), 相减 (窗口_主窗口.方法_取高度 (), 80))
选择框_更新.方法_移动 (10, 相加 (超级列表框_主.方法_取顶边 (), 超级列表框_主.方法_取高度 (), 20))
按钮_刷新.方法_移动 (相减 (窗口_主窗口.方法_取宽度 (), 300), 相加 (超级列表框_主.方法_取顶边 (), 超级列表框_主.方法_取高度 (), 5))
按钮_卸载.方法_移动 (相减 (窗口_主窗口.方法_取宽度 (), 200), 相加 (超级列表框_主.方法_取顶边 (), 超级列表框_主.方法_取高度 (), 5))
API_发送消息 (超级列表框_主.方法_取句柄 (), 4126, 3, -2)
 ' 本源码来自易语言资源网(www.wodesoft.com)

.子程序 事件_按钮_刷新被单击, 空白型, , 
_刷新卸载列表 ()

.子程序 事件_表项被双击, 空白型, , 
.如果真 (等于 (超级列表框_主.方法_现行选中项 (), -1))
    返回 ()
.如果真结束
运行 (超级列表框_主.方法_取标题 (超级列表框_主.方法_现行选中项 (), 3), 假, )

.子程序 事件_选择框被单击, 空白型, , 
_刷新卸载列表 ()

.子程序 _刷新卸载列表, 空白型, , 
超级列表框_主.方法_全部删除 ()
 ' 超级列表框_主.方法_插入列 (1, “图标”, 4)
枚举注册表 ()

.子程序 枚举注册表, 空白型, , 
.局部变量 Index, 整数型, , , 
.局部变量 lpName, 文本型, , , 
.局部变量 ret, 整数型, , , 
.局部变量 hKey, 整数型, , , 

赋值 (lpName, 取空白文本 (260))
RegOpenKey (2147483650, “SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\”, hKey)
.如果真 (不等于 (hKey, 0))
    赋值 (ret, RegEnumKey (hKey, Index, lpName, 261))
.如果真结束
.判断循环首 (等于 (ret, 0))
    读入卸载信息 (lpName)
    赋值 (Index, 相加 (Index, 1))
    赋值 (ret, RegEnumKey (hKey, Index, lpName, 261))
     ' 本源码来自易语言资源网(www.wodesoft.com)
.判断循环尾 ()
RegCloseKey (hKey)

.子程序 读入卸载信息, 空白型, , 
.参数 参_注册项, 文本型, , 

.局部变量 局_插入位置, 整数型, , , 
.局部变量 局_显示标题, 文本型, , , 

.如果真 (并且 (等于 (到大写 (取文本左边 (参_注册项, 2)), “KB”), 等于 (选择框_更新.方法_选中 (), 0)))
    返回 ()
.如果真结束
赋值 (局_显示标题, 取文本注册项 (#本地机器, 相加 (“SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\”, 参_注册项, “\DisplayName”), “”))
.如果真 (或者 (等于 (局_显示标题, “[空]”), 等于 (局_显示标题, “”)))
    返回 ()
.如果真结束
赋值 (局_插入位置, 超级列表框_主.方法_插入表项 ())
超级列表框_主.方法_置标题 (局_插入位置, 0, 局_显示标题)
超级列表框_主.方法_置标题 (局_插入位置, 1, 取文本注册项 (#本地机器, 相加 (“SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\”, 参_注册项, “\DisplayVersion”), “”))
' 本源码来自易语言资源网(www.wodesoft.com)
超级列表框_主.方法_置标题 (局_插入位置, 2, 取文本注册项 (#本地机器, 相加 (“SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\”, 参_注册项, “\Publisher”), “”))
超级列表框_主.方法_置标题 (局_插入位置, 3, 取文本注册项 (#本地机器, 相加 (“SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\”, 参_注册项, “\UninstallString”), “”))
 ' 超级列表框_主.方法_置标题 (局_插入位置, 4, 取文本注册项 (#本地机器, “SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\” ＋ 参_注册项 ＋ “\DisplayIcon”, “”))

.类模块 类_窗口, , , 

.子程序 方法_可视, 逻辑型, , 
.参数 是否可视, 逻辑型, 可空, 



.子程序 方法_是否已创建, 逻辑型, , 


.子程序 方法_标题, 文本型, , 
.参数 文本内容, 文本型, 可空, 



.子程序 方法_取句柄, 整数型, , 


.子程序 方法_移动, 空白型, , 
.参数 左边, 整数型, 可空, 
.参数 顶边, 整数型, 可空, 
.参数 宽度, 整数型, 可空, 
.参数 高度, 整数型, 可空, 



.子程序 方法_取宽度, 整数型, , 


.子程序 方法_取高度, 整数型, , 


.子程序 方法_取左边, 整数型, , 


.子程序 方法_取顶边, 整数型, , 


.子程序 方法_禁止, 逻辑型, , 
.参数 禁止, 逻辑型, 可空, 



.子程序 事件_鼠标左键被按下, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标左键被放开, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_被双击, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标右键被按下, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标右键被放开, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标位置被移动, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_获取焦点, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_失去焦点, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_按下某键, 空白型, , 
.参数 事件程序, 子程序指针, , 子程序必须有4个整型参数,第一个参数为键代码,每二个参数为功能键状态,其余两个参数备用



.子程序 事件_放开某键, 空白型, , 
.参数 事件程序, 子程序指针, , 子程序必须有4个整型参数,第一个参数为键代码,每二个参数为功能键状态,其余两个参数备用



.子程序 方法_创建, 整数型, , 
.参数 父窗口句柄, 整数型, 可空, 传入一个非ZCL创建的窗口作为父时，请在窗口句柄前面加个“-”,即为负整数，类库将会根据此值判断是否为ZCL创建的窗口还是外窗口的，为0表示桌面窗口为父
.参数 标题, 文本型, 可空, 窗口的标题
.参数 左边, 整数型, 可空, 
.参数 顶边, 整数型, 可空, 
.参数 宽度, 整数型, 可空, 窗口高度
.参数 高度, 整数型, 可空, 窗口宽度
.参数 菜单句柄, 整数型, 可空, 窗口上要出现的菜单句柄
.参数 窗口风格, 整数型, 可空, 为空默认带最大化\最小化按钮\普通可调边框\带系统菜单\可拖动大小
.参数 可视, 逻辑型, 可空, 窗口创建完比立即显示,默认为真
.参数 窗口创建完毕子程序, 子程序指针, 可空, 



.子程序 方法_总在最前, 逻辑型, , 
.参数 是否总在最前, 逻辑型, 可空, 



.子程序 方法_位置, 空白型, , 
.参数 位置, 整数型, 可空, 0为通常,1为居中,2为最小化,3为最大化



.子程序 事件_尺寸被改变, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_将被消毁, 空白型, , 
.参数 事件程序, 子程序指针, , 



.类模块 类_菜单, , , 

.子程序 方法_创建, 空白型, , 
.参数 菜单名称, 文本型, , 



.子程序 方法_添加菜单项, 整数型, , 返回菜单项的标识数字
.参数 菜单名称, 文本型, , 
.参数 项目属性, 整数型, , 
.参数 子菜单句柄, 整数型, , 
.参数 菜单项文本, 文本型, , 



.子程序 方法_取句柄, 整数型, , 


.子程序 事件_被选择, 整数型, , 
.参数 菜单项标识, 整数型, , 
.参数 事件子程序, 子程序指针, , 



.子程序 方法_弹出菜单, 空白型, , 
.参数 句柄, 整数型, , 



.子程序 方法_置窗口, 空白型, , 
.参数 窗口句柄, 整数型, , 



.类模块 类_工具条, , , 

.子程序 方法_可视, 逻辑型, , 
.参数 是否可视, 逻辑型, 可空, 



.子程序 方法_是否已创建, 逻辑型, , 


.子程序 方法_标题, 文本型, , 
.参数 文本内容, 文本型, 可空, 



.子程序 方法_取句柄, 整数型, , 


.子程序 方法_移动, 空白型, , 
.参数 左边, 整数型, 可空, 
.参数 顶边, 整数型, 可空, 
.参数 宽度, 整数型, 可空, 
.参数 高度, 整数型, 可空, 



.子程序 方法_取宽度, 整数型, , 


.子程序 方法_取高度, 整数型, , 


.子程序 方法_取左边, 整数型, , 


.子程序 方法_取顶边, 整数型, , 


.子程序 方法_禁止, 逻辑型, , 
.参数 禁止, 逻辑型, 可空, 



.子程序 事件_鼠标左键被按下, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标左键被放开, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_被双击, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标右键被按下, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标右键被放开, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标位置被移动, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_获取焦点, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_失去焦点, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_按下某键, 空白型, , 
.参数 事件程序, 子程序指针, , 子程序必须有4个整型参数,第一个参数为键代码,每二个参数为功能键状态,其余两个参数备用



.子程序 事件_放开某键, 空白型, , 
.参数 事件程序, 子程序指针, , 子程序必须有4个整型参数,第一个参数为键代码,每二个参数为功能键状态,其余两个参数备用



.子程序 方法_创建, 整数型, , 
.参数 父窗口句柄, 整数型, , 传入一个非ZCL创建的窗口作为父时，请在窗口句柄前面加个“-”,即为负整数，类库将会根据此值判断是否为ZCL创建的窗口还是外窗口的，为0表示桌面窗口为父
.参数 位图模块句柄, 整数型, 可空, 
.参数 位图标识或位图句柄, 整数型, 可空, 
.参数 宽度, 整数型, 可空, 
.参数 高度, 整数型, 可空, 



.子程序 方法_添置按钮, 整数型, , 返回索引号,此方法放在"创建"之前
.参数 位图编号, 整数型, , 
.参数 类型, 整数型, , 
.参数 提示文本, 文本型, , 



.子程序 方法_复选钮选中, 空白型, , 
.参数 索引号, 整数型, , 索引从0开始



.子程序 方法_复选钮取消, 空白型, , 
.参数 索引号, 整数型, , 索引从0开始



.子程序 方法_按钮允许, 空白型, , 
.参数 索引号, 整数型, , 索引从0开始



.子程序 方法_按钮禁止, 空白型, , 
.参数 索引号, 整数型, , 索引从0开始



.子程序 方法_复选钮是否按下, 逻辑型, , 
.参数 索引号, 整数型, , 索引从0开始



.子程序 方法_是否允许, 逻辑型, , 
.参数 索引号, 整数型, , 索引从0开始



.子程序 方法_连接位图列表, 逻辑型, , 此方法放在"创建"之后
.参数 位图列表句柄, 整数型, , 



.子程序 事件_被单击, 空白型, , 
.参数 按钮索引, 整数型, , 
.参数 事件程序, 子程序指针, , 



.类模块 类_位图, , , 

.子程序 方法_创建, 整数型, , 
.参数 位图宽度, 整数型, , 
.参数 位图高度, 整数型, , 



.子程序 方法_加入位图, 整数型, , 加入指定BMP文件,返回位图索引
.参数 位图名称, 文本型, , 
.参数 宽度, 整数型, , 
.参数 高度, 整数型, , 



.子程序 方法_从模块加入位图, 整数型, , 从指定模块文件资源中加入位图
.参数 模块名称, 文本型, , 
.参数 位图标识, 整数型, , 可以用资源编辑软件查看标识号



.子程序 方法_取句柄, 整数型, , 


.类模块 类_按钮, , , 

.子程序 方法_可视, 逻辑型, , 
.参数 是否可视, 逻辑型, 可空, 



.子程序 方法_是否已创建, 逻辑型, , 


.子程序 方法_标题, 文本型, , 
.参数 文本内容, 文本型, 可空, 



.子程序 方法_取句柄, 整数型, , 


.子程序 方法_移动, 空白型, , 
.参数 左边, 整数型, 可空, 
.参数 顶边, 整数型, 可空, 
.参数 宽度, 整数型, 可空, 
.参数 高度, 整数型, 可空, 



.子程序 方法_取宽度, 整数型, , 


.子程序 方法_取高度, 整数型, , 


.子程序 方法_取左边, 整数型, , 


.子程序 方法_取顶边, 整数型, , 


.子程序 方法_禁止, 逻辑型, , 
.参数 禁止, 逻辑型, 可空, 



.子程序 事件_鼠标左键被按下, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标左键被放开, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_被双击, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标右键被按下, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标右键被放开, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标位置被移动, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_获取焦点, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_失去焦点, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_按下某键, 空白型, , 
.参数 事件程序, 子程序指针, , 子程序必须有4个整型参数,第一个参数为键代码,每二个参数为功能键状态,其余两个参数备用



.子程序 事件_放开某键, 空白型, , 
.参数 事件程序, 子程序指针, , 子程序必须有4个整型参数,第一个参数为键代码,每二个参数为功能键状态,其余两个参数备用



.子程序 方法_创建, 整数型, , 
.参数 父窗口句柄, 整数型, , 传入一个非ZCL创建的窗口作为父时，请在窗口句柄前面加个“-”,即为负整数，类库将会根据此值判断是否为ZCL创建的窗口还是外窗口的，为0表示桌面窗口为父
.参数 标题, 文本型, 可空, 
.参数 左边, 整数型, 可空, 
.参数 顶边, 整数型, 可空, 
.参数 宽度, 整数型, 可空, 
.参数 高度, 整数型, 可空, 
.参数 类型, 整数型, 可空, 类型常量:#常用_普通按钮,#常用_默认按钮



.子程序 事件_被单击, 空白型, , 
.参数 事件程序, 子程序指针, , 



.类模块 类_单选框, , , 

.子程序 方法_可视, 逻辑型, , 
.参数 是否可视, 逻辑型, 可空, 



.子程序 方法_是否已创建, 逻辑型, , 


.子程序 方法_标题, 文本型, , 
.参数 文本内容, 文本型, 可空, 



.子程序 方法_取句柄, 整数型, , 


.子程序 方法_移动, 空白型, , 
.参数 左边, 整数型, 可空, 
.参数 顶边, 整数型, 可空, 
.参数 宽度, 整数型, 可空, 
.参数 高度, 整数型, 可空, 



.子程序 方法_取宽度, 整数型, , 


.子程序 方法_取高度, 整数型, , 


.子程序 方法_取左边, 整数型, , 


.子程序 方法_取顶边, 整数型, , 


.子程序 方法_禁止, 逻辑型, , 
.参数 禁止, 逻辑型, 可空, 



.子程序 事件_鼠标左键被按下, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标左键被放开, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_被双击, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标右键被按下, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标右键被放开, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标位置被移动, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_获取焦点, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_失去焦点, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_按下某键, 空白型, , 
.参数 事件程序, 子程序指针, , 子程序必须有4个整型参数,第一个参数为键代码,每二个参数为功能键状态,其余两个参数备用



.子程序 事件_放开某键, 空白型, , 
.参数 事件程序, 子程序指针, , 子程序必须有4个整型参数,第一个参数为键代码,每二个参数为功能键状态,其余两个参数备用



.子程序 方法_创建, 整数型, , 
.参数 父窗口句柄, 整数型, , 传入一个非ZCL创建的窗口作为父时，请在窗口句柄前面加个“-”,即为负整数，类库将会根据此值判断是否为ZCL创建的窗口还是外窗口的，为0表示桌面窗口为父
.参数 标题, 文本型, 可空, 
.参数 左边, 整数型, 可空, 
.参数 顶边, 整数型, 可空, 
.参数 宽度, 整数型, 可空, 
.参数 高度, 整数型, 可空, 



.子程序 方法_选中, 逻辑型, , 
.参数 选中, 逻辑型, 可空, 



.子程序 事件_被单击, 空白型, , 
.参数 事件程序, 子程序指针, , 



.类模块 类_选择框, , , 

.子程序 方法_可视, 逻辑型, , 
.参数 是否可视, 逻辑型, 可空, 



.子程序 方法_是否已创建, 逻辑型, , 


.子程序 方法_标题, 文本型, , 
.参数 文本内容, 文本型, 可空, 



.子程序 方法_取句柄, 整数型, , 


.子程序 方法_移动, 空白型, , 
.参数 左边, 整数型, 可空, 
.参数 顶边, 整数型, 可空, 
.参数 宽度, 整数型, 可空, 
.参数 高度, 整数型, 可空, 



.子程序 方法_取宽度, 整数型, , 


.子程序 方法_取高度, 整数型, , 


.子程序 方法_取左边, 整数型, , 


.子程序 方法_取顶边, 整数型, , 


.子程序 方法_禁止, 逻辑型, , 
.参数 禁止, 逻辑型, 可空, 



.子程序 事件_鼠标左键被按下, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标左键被放开, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_被双击, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标右键被按下, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标右键被放开, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标位置被移动, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_获取焦点, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_失去焦点, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_按下某键, 空白型, , 
.参数 事件程序, 子程序指针, , 子程序必须有4个整型参数,第一个参数为键代码,每二个参数为功能键状态,其余两个参数备用



.子程序 事件_放开某键, 空白型, , 
.参数 事件程序, 子程序指针, , 子程序必须有4个整型参数,第一个参数为键代码,每二个参数为功能键状态,其余两个参数备用



.子程序 方法_创建, 整数型, , 
.参数 父窗口句柄, 整数型, , 传入一个非ZCL创建的窗口作为父时，请在窗口句柄前面加个“-”,即为负整数，类库将会根据此值判断是否为ZCL创建的窗口还是外窗口的，为0表示桌面窗口为父
.参数 标题, 文本型, 可空, 
.参数 左边, 整数型, 可空, 
.参数 顶边, 整数型, 可空, 
.参数 宽度, 整数型, 可空, 
.参数 高度, 整数型, 可空, 
.参数 类型, 整数型, 可空, 



.子程序 方法_选中, 整数型, , 0为不选中,1为选中,>2为预选中
.参数 选中, 整数型, 可空, 0为不选中,1为选中,>2为预选中



.子程序 事件_被单击, 空白型, , 
.参数 事件程序, 子程序指针, , 



.类模块 类_分组框, , , 

.子程序 方法_可视, 逻辑型, , 
.参数 是否可视, 逻辑型, 可空, 



.子程序 方法_是否已创建, 逻辑型, , 


.子程序 方法_标题, 文本型, , 
.参数 文本内容, 文本型, 可空, 



.子程序 方法_取句柄, 整数型, , 


.子程序 方法_移动, 空白型, , 
.参数 左边, 整数型, 可空, 
.参数 顶边, 整数型, 可空, 
.参数 宽度, 整数型, 可空, 
.参数 高度, 整数型, 可空, 



.子程序 方法_取宽度, 整数型, , 


.子程序 方法_取高度, 整数型, , 


.子程序 方法_取左边, 整数型, , 


.子程序 方法_取顶边, 整数型, , 


.子程序 方法_禁止, 逻辑型, , 
.参数 禁止, 逻辑型, 可空, 



.子程序 事件_鼠标左键被按下, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标左键被放开, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_被双击, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标右键被按下, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标右键被放开, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标位置被移动, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_获取焦点, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_失去焦点, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_按下某键, 空白型, , 
.参数 事件程序, 子程序指针, , 子程序必须有4个整型参数,第一个参数为键代码,每二个参数为功能键状态,其余两个参数备用



.子程序 事件_放开某键, 空白型, , 
.参数 事件程序, 子程序指针, , 子程序必须有4个整型参数,第一个参数为键代码,每二个参数为功能键状态,其余两个参数备用



.子程序 方法_创建, 整数型, , 
.参数 父窗口句柄, 整数型, , 传入一个非ZCL创建的窗口作为父时，请在窗口句柄前面加个“-”,即为负整数，类库将会根据此值判断是否为ZCL创建的窗口还是外窗口的，为0表示桌面窗口为父
.参数 标题, 文本型, 可空, 
.参数 左边, 整数型, 可空, 
.参数 顶边, 整数型, 可空, 
.参数 宽度, 整数型, 可空, 
.参数 高度, 整数型, 可空, 



.类模块 类_超级列表框, , , 

.子程序 方法_可视, 逻辑型, , 
.参数 是否可视, 逻辑型, 可空, 



.子程序 方法_是否已创建, 逻辑型, , 


.子程序 方法_标题, 文本型, , 
.参数 文本内容, 文本型, 可空, 



.子程序 方法_取句柄, 整数型, , 


.子程序 方法_移动, 空白型, , 
.参数 左边, 整数型, 可空, 
.参数 顶边, 整数型, 可空, 
.参数 宽度, 整数型, 可空, 
.参数 高度, 整数型, 可空, 



.子程序 方法_取宽度, 整数型, , 


.子程序 方法_取高度, 整数型, , 


.子程序 方法_取左边, 整数型, , 


.子程序 方法_取顶边, 整数型, , 


.子程序 方法_禁止, 逻辑型, , 
.参数 禁止, 逻辑型, 可空, 



.子程序 事件_鼠标左键被按下, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标左键被放开, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_被双击, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标右键被按下, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标右键被放开, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标位置被移动, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_获取焦点, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_失去焦点, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_按下某键, 空白型, , 
.参数 事件程序, 子程序指针, , 子程序必须有4个整型参数,第一个参数为键代码,每二个参数为功能键状态,其余两个参数备用



.子程序 事件_放开某键, 空白型, , 
.参数 事件程序, 子程序指针, , 子程序必须有4个整型参数,第一个参数为键代码,每二个参数为功能键状态,其余两个参数备用



.子程序 方法_创建, 整数型, , 
.参数 父窗口句柄, 整数型, , 传入一个非ZCL创建的窗口作为父时，请在窗口句柄前面加个“-”,即为负整数，类库将会根据此值判断是否为ZCL创建的窗口还是外窗口的，为0表示桌面窗口为父
.参数 标题, 文本型, 可空, 
.参数 左边, 整数型, 可空, 
.参数 顶边, 整数型, 可空, 
.参数 宽度, 整数型, 可空, 
.参数 高度, 整数型, 可空, 
.参数 类型, 整数型, 可空, 0、大图标列表框，1、小图标列表框，2、普通列表框，3、报表列表框



.子程序 方法_插入列, 空白型, , 
.参数 列宽度, 整数型, , 
.参数 标题文本, 文本型, , 
.参数 插入位置, 整数型, , 



.子程序 方法_插入表项, 整数型, , 
.参数 插入位置, 整数型, 可空, 可以被省略。指定新表项插入时的位置索引，索引值从 0 开始。如果提供 -1 ，则插入到列表框的尾部。如果本参数被省略，默认值为 -1 。
.参数 标题, 文本型, 可空, 可以被省略。本参数指定表项的标题文本。如果被省略，默认值为空文本。
.参数 图片索引, 整数型, 可空, 可以被省略。图片索引用于指定“图片组”属性中的某张图片。索引值从 0 开始，-1 表示无图片。如果本参数被省略，默认值为 -1 。
.参数 状态图片索引, 整数型, 可空, 可以被省略。状态图片索引用于指定“状态图片组”属性中的某张图片。索引值从 0 开始，-1 表示无图片。如果本参数被省略，默认值为 -1 。
.参数 缩进数目, 整数型, 可空, 可以被省略。“缩进数目”仅在报表型列表框才有效，用作指定显示时在表项首部增加的空白数。如果本参数被省略，默认值为 0 。
.参数 表项数值, 整数型, 可空, 可以被省略。该数值与指定表项相关联。如果本参数被省略，默认值为 0 。



.子程序 方法_置标题, 空白型, , 
.参数 项, 整数型, , 
.参数 列, 整数型, , 
.参数 文本, 文本型, , 



.子程序 方法_取表项数, 整数型, , 


.子程序 方法_现行选中项, 整数型, , 
.参数 位置索引, 整数型, 可空, 



.子程序 方法_取标题, 文本型, , 
.参数 行号, 整数型, , 
.参数 列号, 整数型, , 



.子程序 方法_自动选择, 整数型, , 
.参数 参数, 逻辑型, 可空, 



.子程序 方法_设置前景色, 整数型, , 
.参数 颜色值, 整数型, , 



.子程序 方法_设置背景色, 整数型, , 
.参数 颜色值, 整数型, , 



.子程序 方法_自动跟随, 整数型, , 
.参数 参数, 逻辑型, 可空, 



.子程序 方法_置类型, 空白型, , 
.参数 类型, 整数型, , 



.子程序 方法_整行选择, 整数型, , 
.参数 参数, 逻辑型, 可空, 



.子程序 方法_删除列, 整数型, , 
.参数 列索引, 整数型, 可空, 整数型，从0开始；可空，默认为0



.子程序 方法_删除表项, 逻辑型, , 
.参数 表项索引, 整数型, 可空, 整数型，从0开始；可空，默认为0



.子程序 方法_全部删除, 逻辑型, , 


.子程序 方法_连接位图列表, 逻辑型, , 
.参数 位图列表句柄, 整数型, , 



.子程序 方法_设置风格, 整数型, , 运行一次为设置,再以相同参数运行一次为取消
.参数 风格, 整数型, , 1、显示网格，2、允许在子项中显示image，4、带检查框，8、当鼠标指到某一项时便自动选择该项，32、整行选择,或他们的组合



.子程序 事件_被单击, 空白型, , 
.参数 事件程序, 子程序指针, , 



.类模块 类_树型框, , , 

.子程序 方法_可视, 逻辑型, , 
.参数 是否可视, 逻辑型, 可空, 



.子程序 方法_是否已创建, 逻辑型, , 


.子程序 方法_标题, 文本型, , 
.参数 文本内容, 文本型, 可空, 



.子程序 方法_取句柄, 整数型, , 


.子程序 方法_移动, 空白型, , 
.参数 左边, 整数型, 可空, 
.参数 顶边, 整数型, 可空, 
.参数 宽度, 整数型, 可空, 
.参数 高度, 整数型, 可空, 



.子程序 方法_取宽度, 整数型, , 


.子程序 方法_取高度, 整数型, , 


.子程序 方法_取左边, 整数型, , 


.子程序 方法_取顶边, 整数型, , 


.子程序 方法_禁止, 逻辑型, , 
.参数 禁止, 逻辑型, 可空, 



.子程序 事件_鼠标左键被按下, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标左键被放开, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_被双击, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标右键被按下, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标右键被放开, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标位置被移动, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_获取焦点, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_失去焦点, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_按下某键, 空白型, , 
.参数 事件程序, 子程序指针, , 子程序必须有4个整型参数,第一个参数为键代码,每二个参数为功能键状态,其余两个参数备用



.子程序 事件_放开某键, 空白型, , 
.参数 事件程序, 子程序指针, , 子程序必须有4个整型参数,第一个参数为键代码,每二个参数为功能键状态,其余两个参数备用



.子程序 方法_创建, 整数型, , 
.参数 父窗口句柄, 整数型, , 传入一个非ZCL创建的窗口作为父时，请在窗口句柄前面加个“-”,即为负整数，类库将会根据此值判断是否为ZCL创建的窗口还是外窗口的，为0表示桌面窗口为父
.参数 标题, 文本型, 可空, 
.参数 左边, 整数型, 可空, 
.参数 顶边, 整数型, 可空, 
.参数 宽度, 整数型, 可空, 
.参数 高度, 整数型, 可空, 
.参数 类型, 整数型, 可空, 



.子程序 方法_插入根项目, 整数型, , 返回项目句柄
.参数 插入位置, 整数型, , 指定一个索引,从1开始
.参数 标题, 文本型, , 
.参数 图标索引, 整数型, , 



.子程序 方法_插入子项目, 整数型, , 返回项目句柄
.参数 父项目句柄, 整数型, , 
.参数 插入位置, 整数型, , 索引
.参数 标题, 文本型, , 
.参数 图标索引, 整数型, , 



.子程序 方法_取当前项目句柄, 整数型, , 


.子程序 方法_取当前索引, 整数型, , 


.子程序 方法_取项目句柄, 整数型, , 
.参数 项目索引号, 整数型, , 索引号从1开始



.子程序 方法_取父项目句柄, 整数型, , 
.参数 项目句柄, 整数型, , 



.子程序 方法_取项目总数, 整数型, , 


.子程序 方法_取项目文本, 文本型, , 
.参数 项目索引号, 整数型, , 索引号从1开始



.子程序 方法_置项目文本, 空白型, , 
.参数 索引号, 整数型, , 索引号从1开始
.参数 项目文本, 文本型, , 



.子程序 方法_连接位图列表, 逻辑型, , 
.参数 位图列表句柄, 整数型, , 



.子程序 事件_项目被选择, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_右键单击, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_被展开, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_将被展开, 空白型, , 
.参数 事件程序, 子程序指针, , 



.类模块 类_静态控件, , , 

.子程序 方法_可视, 逻辑型, , 
.参数 是否可视, 逻辑型, 可空, 



.子程序 方法_是否已创建, 逻辑型, , 


.子程序 方法_标题, 文本型, , 
.参数 文本内容, 文本型, 可空, 



.子程序 方法_取句柄, 整数型, , 


.子程序 方法_移动, 空白型, , 
.参数 左边, 整数型, 可空, 
.参数 顶边, 整数型, 可空, 
.参数 宽度, 整数型, 可空, 
.参数 高度, 整数型, 可空, 



.子程序 方法_取宽度, 整数型, , 


.子程序 方法_取高度, 整数型, , 


.子程序 方法_取左边, 整数型, , 


.子程序 方法_取顶边, 整数型, , 


.子程序 方法_禁止, 逻辑型, , 
.参数 禁止, 逻辑型, 可空, 



.子程序 事件_鼠标左键被按下, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标左键被放开, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_被双击, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标右键被按下, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标右键被放开, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标位置被移动, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_获取焦点, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_失去焦点, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_按下某键, 空白型, , 
.参数 事件程序, 子程序指针, , 子程序必须有4个整型参数,第一个参数为键代码,每二个参数为功能键状态,其余两个参数备用



.子程序 事件_放开某键, 空白型, , 
.参数 事件程序, 子程序指针, , 子程序必须有4个整型参数,第一个参数为键代码,每二个参数为功能键状态,其余两个参数备用



.子程序 方法_创建, 整数型, , 
.参数 父窗口句柄, 整数型, , 传入一个非ZCL创建的窗口作为父时，请在窗口句柄前面加个“-”,即为负整数，类库将会根据此值判断是否为ZCL创建的窗口还是外窗口的，为0表示桌面窗口为父
.参数 标题, 文本型, 可空, 
.参数 左边, 整数型, 可空, 
.参数 顶边, 整数型, 可空, 
.参数 宽度, 整数型, 可空, 
.参数 高度, 整数型, 可空, 
.参数 类型, 整数型, 可空, 



.子程序 方法_设置位图, 空白型, , 设置图片框的图片,必须为位图.
.参数 位图句柄, 整数型, , 



.类模块 类_编辑框, , , 

.子程序 方法_可视, 逻辑型, , 
.参数 是否可视, 逻辑型, 可空, 



.子程序 方法_是否已创建, 逻辑型, , 


.子程序 方法_标题, 文本型, , 
.参数 文本内容, 文本型, 可空, 



.子程序 方法_取句柄, 整数型, , 


.子程序 方法_移动, 空白型, , 
.参数 左边, 整数型, 可空, 
.参数 顶边, 整数型, 可空, 
.参数 宽度, 整数型, 可空, 
.参数 高度, 整数型, 可空, 



.子程序 方法_取宽度, 整数型, , 


.子程序 方法_取高度, 整数型, , 


.子程序 方法_取左边, 整数型, , 


.子程序 方法_取顶边, 整数型, , 


.子程序 方法_禁止, 逻辑型, , 
.参数 禁止, 逻辑型, 可空, 



.子程序 事件_鼠标左键被按下, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标左键被放开, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_被双击, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标右键被按下, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标右键被放开, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标位置被移动, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_获取焦点, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_失去焦点, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_按下某键, 空白型, , 
.参数 事件程序, 子程序指针, , 子程序必须有4个整型参数,第一个参数为键代码,每二个参数为功能键状态,其余两个参数备用



.子程序 事件_放开某键, 空白型, , 
.参数 事件程序, 子程序指针, , 子程序必须有4个整型参数,第一个参数为键代码,每二个参数为功能键状态,其余两个参数备用



.子程序 方法_创建, 整数型, , 
.参数 父窗口句柄, 整数型, , 传入一个非ZCL创建的窗口作为父时，请在窗口句柄前面加个“-”,即为负整数，类库将会根据此值判断是否为ZCL创建的窗口还是外窗口的，为0表示桌面窗口为父
.参数 内容, 文本型, 可空, 
.参数 左边, 整数型, 可空, 
.参数 顶边, 整数型, 可空, 
.参数 宽度, 整数型, 可空, 
.参数 高度, 整数型, 可空, 
.参数 类型, 整数型, 可空, 



.子程序 方法_内容, 文本型, , 
.参数 文本内容, 文本型, 可空, 



.子程序 方法_加入文本, 空白型, , 
.参数 文本内容, 文本型, , 



.子程序 方法_置读写状态, 空白型, , 
.参数 读写状态, 整数型, , 1为只读,0为取消只读



.子程序 方法_置密码输入, 空白型, , 
.参数 密码状态, 整数型, , 1为密码输入,0为取消密码输入



.子程序 事件_内容被改变, 空白型, , 
.参数 事件程序, 子程序指针, , 



.类模块 类_组合框, , , 

.子程序 方法_可视, 逻辑型, , 
.参数 是否可视, 逻辑型, 可空, 



.子程序 方法_是否已创建, 逻辑型, , 


.子程序 方法_标题, 文本型, , 
.参数 文本内容, 文本型, 可空, 



.子程序 方法_取句柄, 整数型, , 


.子程序 方法_移动, 空白型, , 
.参数 左边, 整数型, 可空, 
.参数 顶边, 整数型, 可空, 
.参数 宽度, 整数型, 可空, 
.参数 高度, 整数型, 可空, 



.子程序 方法_取宽度, 整数型, , 


.子程序 方法_取高度, 整数型, , 


.子程序 方法_取左边, 整数型, , 


.子程序 方法_取顶边, 整数型, , 


.子程序 方法_禁止, 逻辑型, , 
.参数 禁止, 逻辑型, 可空, 



.子程序 事件_鼠标左键被按下, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标左键被放开, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_被双击, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标右键被按下, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标右键被放开, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标位置被移动, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_获取焦点, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_失去焦点, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_按下某键, 空白型, , 
.参数 事件程序, 子程序指针, , 子程序必须有4个整型参数,第一个参数为键代码,每二个参数为功能键状态,其余两个参数备用



.子程序 事件_放开某键, 空白型, , 
.参数 事件程序, 子程序指针, , 子程序必须有4个整型参数,第一个参数为键代码,每二个参数为功能键状态,其余两个参数备用



.子程序 方法_创建, 整数型, , 
.参数 父窗口句柄, 整数型, , 传入一个非ZCL创建的窗口作为父时，请在窗口句柄前面加个“-”,即为负整数，类库将会根据此值判断是否为ZCL创建的窗口还是外窗口的，为0表示桌面窗口为父
.参数 标题, 文本型, 可空, 
.参数 左边, 整数型, 可空, 
.参数 顶边, 整数型, 可空, 
.参数 宽度, 整数型, 可空, 
.参数 高度, 整数型, 可空, 
.参数 类型, 整数型, 可空, 



.子程序 事件_项目被选择, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 方法_内容, 文本型, , 
.参数 文本内容, 文本型, 可空, 



.子程序 方法_加入项目, 整数型, , 成功返回插入项目的当前位置
.参数 项目文本, 文本型, , 
.参数 项目数值, 整数型, 可空, 
.参数 位置索引, 整数型, 可空, 默认为-1,即加入到最后，如果>0则加到该项后面



.子程序 方法_现行选中项, 整数型, , 
.参数 位置索引, 整数型, 可空, 



.子程序 方法_删除项目, 空白型, , 
.参数 位置索引, 整数型, , 



.子程序 方法_清空, 空白型, , 


.子程序 方法_取项目文本, 文本型, , 
.参数 位置索引, 整数型, , 



.子程序 方法_取项目数, 整数型, , 


.子程序 方法_取项目数值, 整数型, , 
.参数 位置索引, 整数型, , 



.子程序 方法_置项目数值, 整数型, , 
.参数 位置索引, 整数型, , 
.参数 项目数值, 整数型, , 



.类模块 类_列表框, , , 

.子程序 方法_可视, 逻辑型, , 
.参数 是否可视, 逻辑型, 可空, 



.子程序 方法_是否已创建, 逻辑型, , 


.子程序 方法_标题, 文本型, , 
.参数 文本内容, 文本型, 可空, 



.子程序 方法_取句柄, 整数型, , 


.子程序 方法_移动, 空白型, , 
.参数 左边, 整数型, 可空, 
.参数 顶边, 整数型, 可空, 
.参数 宽度, 整数型, 可空, 
.参数 高度, 整数型, 可空, 



.子程序 方法_取宽度, 整数型, , 


.子程序 方法_取高度, 整数型, , 


.子程序 方法_取左边, 整数型, , 


.子程序 方法_取顶边, 整数型, , 


.子程序 方法_禁止, 逻辑型, , 
.参数 禁止, 逻辑型, 可空, 



.子程序 事件_鼠标左键被按下, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标左键被放开, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_被双击, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标右键被按下, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标右键被放开, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标位置被移动, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_获取焦点, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_失去焦点, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_按下某键, 空白型, , 
.参数 事件程序, 子程序指针, , 子程序必须有4个整型参数,第一个参数为键代码,每二个参数为功能键状态,其余两个参数备用



.子程序 事件_放开某键, 空白型, , 
.参数 事件程序, 子程序指针, , 子程序必须有4个整型参数,第一个参数为键代码,每二个参数为功能键状态,其余两个参数备用



.子程序 方法_创建, 整数型, , 
.参数 父窗口句柄, 整数型, , 传入一个非ZCL创建的窗口作为父时，请在窗口句柄前面加个“-”,即为负整数，类库将会根据此值判断是否为ZCL创建的窗口还是外窗口的，为0表示桌面窗口为父
.参数 标题, 文本型, 可空, 
.参数 左边, 整数型, 可空, 
.参数 顶边, 整数型, 可空, 
.参数 宽度, 整数型, 可空, 
.参数 高度, 整数型, 可空, 
.参数 类型, 整数型, 可空, 



.子程序 方法_取项目数值, 整数型, , 
.参数 位置索引, 整数型, , 
.参数 项目数值, 整数型, , 



.子程序 方法_置项目数值, 整数型, , 
.参数 位置索引, 整数型, , 
.参数 项目数值, 整数型, , 



.子程序 方法_删除项目, 空白型, , 
.参数 项目索引, 整数型, , 



.子程序 方法_取项目数, 整数型, , 


.子程序 方法_现行选中项, 整数型, , 
.参数 位置索引, 整数型, 可空, 



.子程序 方法_取项目文本, 文本型, , 
.参数 位置索引, 整数型, , 



.子程序 方法_加入项目, 整数型, , 成功返回插入项目的当前位置
.参数 项目文本, 文本型, , 
.参数 项目数值, 整数型, 可空, 
.参数 位置索引, 整数型, 可空, 默认为-1,即加入到最后，如果>0则加到该项后面



.子程序 方法_清空, 空白型, , 


.子程序 事件_项目被选择, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_项目被双击, 空白型, , 
.参数 事件程序, 子程序指针, , 



.类模块 类_状态条, , , 

.子程序 方法_可视, 逻辑型, , 
.参数 是否可视, 逻辑型, 可空, 



.子程序 方法_是否已创建, 逻辑型, , 


.子程序 方法_标题, 文本型, , 
.参数 文本内容, 文本型, 可空, 



.子程序 方法_取句柄, 整数型, , 


.子程序 方法_移动, 空白型, , 
.参数 左边, 整数型, 可空, 
.参数 顶边, 整数型, 可空, 
.参数 宽度, 整数型, 可空, 
.参数 高度, 整数型, 可空, 



.子程序 方法_取宽度, 整数型, , 


.子程序 方法_取高度, 整数型, , 


.子程序 方法_取左边, 整数型, , 


.子程序 方法_取顶边, 整数型, , 


.子程序 方法_禁止, 逻辑型, , 
.参数 禁止, 逻辑型, 可空, 



.子程序 事件_鼠标左键被按下, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标左键被放开, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_被双击, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标右键被按下, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标右键被放开, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标位置被移动, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_获取焦点, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_失去焦点, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_按下某键, 空白型, , 
.参数 事件程序, 子程序指针, , 子程序必须有4个整型参数,第一个参数为键代码,每二个参数为功能键状态,其余两个参数备用



.子程序 事件_放开某键, 空白型, , 
.参数 事件程序, 子程序指针, , 子程序必须有4个整型参数,第一个参数为键代码,每二个参数为功能键状态,其余两个参数备用



.子程序 方法_创建, 整数型, , 
.参数 父窗口句柄, 整数型, , 传入一个非ZCL创建的窗口作为父时，请在窗口句柄前面加个“-”,即为负整数，类库将会根据此值判断是否为ZCL创建的窗口还是外窗口的，为0表示桌面窗口为父
.参数 栏目, 文本型, 可空, 各栏目坐标值,默认为空,即1栏,如果有多栏,请填充栏目横坐标值位置,从0开始,并用","隔开,最后一栏如果到最后请填-1,如"60,160,210,310,-1"



.子程序 方法_状态标题, 文本型, , 
.参数 栏目索引, 整数型, , 位置从0开始
.参数 文本内容, 文本型, 可空, 为空时取标题，不为空时设置标题



.子程序 方法_分栏目, 逻辑型, , 
.参数 栏目, 文本型, , 各栏目坐标值,默认为空,即1栏,如果有多栏,请填充栏目横坐标值位置,从0开始,并用","隔开,最后一栏如果到最后请填-1,如"60,160,210,310,-1"



.类模块 类_进度条, , , 

.子程序 方法_可视, 逻辑型, , 
.参数 是否可视, 逻辑型, 可空, 



.子程序 方法_是否已创建, 逻辑型, , 


.子程序 方法_标题, 文本型, , 
.参数 文本内容, 文本型, 可空, 



.子程序 方法_取句柄, 整数型, , 


.子程序 方法_移动, 空白型, , 
.参数 左边, 整数型, 可空, 
.参数 顶边, 整数型, 可空, 
.参数 宽度, 整数型, 可空, 
.参数 高度, 整数型, 可空, 



.子程序 方法_取宽度, 整数型, , 


.子程序 方法_取高度, 整数型, , 


.子程序 方法_取左边, 整数型, , 


.子程序 方法_取顶边, 整数型, , 


.子程序 方法_禁止, 逻辑型, , 
.参数 禁止, 逻辑型, 可空, 



.子程序 事件_鼠标左键被按下, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标左键被放开, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_被双击, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标右键被按下, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标右键被放开, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标位置被移动, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_获取焦点, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_失去焦点, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_按下某键, 空白型, , 
.参数 事件程序, 子程序指针, , 子程序必须有4个整型参数,第一个参数为键代码,每二个参数为功能键状态,其余两个参数备用



.子程序 事件_放开某键, 空白型, , 
.参数 事件程序, 子程序指针, , 子程序必须有4个整型参数,第一个参数为键代码,每二个参数为功能键状态,其余两个参数备用



.子程序 方法_创建, 整数型, , 
.参数 父窗口句柄, 整数型, , 传入一个非ZCL创建的窗口作为父时，请在窗口句柄前面加个“-”,即为负整数，类库将会根据此值判断是否为ZCL创建的窗口还是外窗口的，为0表示桌面窗口为父
.参数 左边, 整数型, 可空, 
.参数 顶边, 整数型, 可空, 
.参数 宽度, 整数型, 可空, 
.参数 高度, 整数型, 可空, 
.参数 方向, 逻辑型, 可空, 横向为真,纵身为假,默认为横向
.参数 显示方式, 逻辑型, 可空, 分块显示为真，平滑显示为假，默认为分块
.参数 最大位置, 整数型, 可空, 默认100
.参数 最小位置, 整数型, 可空, 默认0
.参数 位置, 整数型, 可空, 默认0



.子程序 方法_最大位置, 整数型, , 
.参数 最大位置, 整数型, 可空, 



.子程序 方法_最小位置, 整数型, , 
.参数 最小位置, 整数型, 可空, 



.子程序 方法_位置, 整数型, , 
.参数 位置, 整数型, 可空, 



.程序集 __HIDDEN_TEMP_MOD__, , , 

.子程序 模块_消息循环, 整数型, , 放在启动子程序最后一行,即在返回命令前


.子程序 系统_注册窗口类, 整数型, , 可以在程序启动后注册一个窗口类名,只有第一次注册有用,也可以不用注册,系统默认类名为MyWindow
.参数 AppName, 文本型, 可空, 



.子程序 控件_取宽度, 整数型, , 
.参数 窗口句柄, 整数型, , 



.子程序 控件_取高度, 整数型, , 
.参数 窗口句柄, 整数型, , 



.子程序 控件_取左边, 整数型, , 
.参数 窗口句柄, 整数型, , 



.子程序 方法_取顶边, 整数型, , 
.参数 窗口句柄, 整数型, , 



.子程序 数值_求次方, 双精度小数型, , 
.参数 欲求次方数值, 双精度小数型, , 
.参数 次方数, 整数型, , 



.子程序 数值_求余, 整数型, , 
.参数 被除数, 双精度小数型, , 
.参数 除数, 双精度小数型, , 



.子程序 数值_取低字, 整数型, , LOWORD
.参数 参数, 整数型, , 



.子程序 数值_取高字, 整数型, , HIWORD
.参数 参数, 整数型, , 



.子程序 整型_取指针, 整数型, , 
.参数 欲取指针的整数, 整数型, 参考, 



.子程序 文本_取指针, 整数型, , 
.参数 欲取指针的文本, 文本型, , 



.子程序 系统_设置字体, 空白型, , 给指定的窗口设置字体
.参数 参窗口句柄, 整数型, , 
.参数 参字体名, 文本型, , 
.参数 参字号大小, 整数型, 可空, 




 ' 不属于任何一个程序集、类模块的函数：
