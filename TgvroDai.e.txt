 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 457
    高度 = 399
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “”
    帮助文件名 = “”



.常量 SBM_GETPOS, "225", , 
.常量 SBM_GETRANGE, "227", , 
.常量 SBM_GETSCROLLINFO, "234", , 
.常量 SBM_SETPOS, "224", , 
.常量 SBM_SETRANGE, "226", , 
.常量 SBM_SETRANGEREDRAW, "230", , 
.常量 SBM_SETSCROLLINFO, "233", , 
.常量 RDW_INTERNALPAINT, "2", , 
.常量 RDW_ERASE, "4", , 
.常量 RDW_UPDATENOW, "256", , 
.常量 RDW_INVALIDATE, "1", , 
.常量 RDW_ALLCHILDREN, "128", , 
.常量 SB_PAGEDOWN, "3", , 
.常量 SB_PAGEUP, "2", , 
.常量 EM_SCROLL, "181", , 
.常量 WM_HSCROLL, "276", , 
.常量 SIF_RANGE, "1", , 
.常量 SIF_PAGE, "2", , 
.常量 SIF_POS, "4", , 
.常量 SIF_ALL, "7", , 
.常量 WM_VSCROLL, "277", , 
.常量 WS_VSCROLL, "2097152", , 
.常量 WS_HSCROLL, "1048576", , 
.常量 GWL_STYLE, "-16", , 
.常量 WM_KEYDOWN, "256", , 
.常量 SBS_VERT, "1", , 
.常量 SBS_HORZ, "0", , 
.常量 BIF_RETURNONLYFSDIRS, "1", , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 5 系统核心支持库
 ' BmpOperate 42305932-06E6-47a5-AC79-8BDCDC58DF61 1 0 位图操作支持库




数据类型 滚动信息_, , SCROLLINFO
    .成员 结构大小, 整数型, , , cbSize
    .成员 掩码, 整数型, , , fMask
    .成员 最小值, 整数型, , , nMin
    .成员 最大值, 整数型, , , nMax
    .成员 页改变值, 整数型, , , nPage
    .成员 位置, 整数型, , , nPos
    .成员 当前位置, 整数型, , , nTrackPos

数据类型 矩形_, , RECT
    .成员 左边, 整数型, , , Left
    .成员 顶边, 整数型, , , Top
    .成员 右边, 整数型, , , Right
    .成员 底边, 整数型, , , Bottom

数据类型 位图结构_, , BITMAP
    .成员 bmType, 整数型, , , 一定是0
    .成员 位图宽度, 整数型, , , bmWidth
    .成员 位图高度, 整数型, , , bmHeight
    .成员 bmWidthBytes, 整数型, , , 
    .成员 bmPlanes, 整数型, , , 
    .成员 bmBitsPixel, 整数型, , , 
    .成员 bmBits, 整数型, , , 

数据类型 BITMAP, , 
    .成员 bmType, 空白型, , , 
    .成员 bmWidth, 空白型, , , 
    .成员 bmHeight, 空白型, , , 
    .成员 bmWidthBytes, 空白型, , , 
    .成员 bmPlanes, 短整数型, , , 
    .成员 bmBitsPixel, 短整数型, , , 
    .成员 bmBits, 空白型, 传址, , 

数据类型 BITMAPINFO, , 
    .成员 BITMAPINFOHEADER, BITMAPINFOHEADER, , , 
    .成员 bmiColors, 空白型, , , RGBQUAD          bmiColors[1]; 

数据类型 BITMAPINFOHEADER, , 
    .成员 biSize, 空白型, , , 
    .成员 biWidth, 空白型, , , 
    .成员 biHeight, 空白型, , , 
    .成员 biPlanes, 短整数型, , , 
    .成员 biBitCount, 短整数型, , , 
    .成员 biCompression, 空白型, , , 
    .成员 biSizeImage, 空白型, , , 
    .成员 biXPelsPerMeter, 空白型, , , 
    .成员 biYPelsPerMeter, 空白型, , , 
    .成员 biClrUsed, 空白型, , , 
    .成员 biClrImportant, 空白型, , , 

数据类型 BITMAPFILEHEADER, , 
    .成员 bfType, 短整数型, , , 
    .成员 bfSize, 空白型, , , 
    .成员 bfReserved1, 短整数型, , , 
    .成员 bfReserved2, 短整数型, , , 
    .成员 bfOffBits, 空白型, , , 

数据类型 RECT, , 
    .成员 left, 整数型, , , 
    .成员 top, 整数型, , , 
    .成员 right, 整数型, , , 
    .成员 bottom, 整数型, , , 

数据类型 文件夹信息_, , BROWSEINFO
    .成员 窗口句柄, 整数型, , , hOwner
    .成员 根目录, 整数型, , , pidlRoot
    .成员 显示名称, 文本型, , , pszDisplayName
    .成员 标题, 文本型, , , lpszTitle
    .成员 标志, 整数型, , , ulFlags
    .成员 回调函数地址, 整数型, , , lpfn
    .成员 回调函数参数, 整数型, , , lParam
    .成员 图像索引, 整数型, , , iImage


.DLL命令 FindWindowEx, 整数型, "user32", "FindWindowExA", , 在窗口列表中寻找与指定条件相符的第一个子窗口  找到的窗口的句柄。如未找到相符窗口，则返回零。会设置GetLastError
    .参数 hWnd1, 整数型, , 在其中查找子的父窗口。如设为零，表示使用桌面窗口（通常说的顶级窗口都被认为是桌面的子窗口，所以也会对它们进行查找）
    .参数 hWnd2, 整数型, , 从这个窗口后开始查找。这样便可利用对FindWindowEx的多次调用找到符合条件的所有子窗口。如设为零，表示从第一个子窗口开始搜索
    .参数 lpsz1, 文本型, , 欲搜索的类名。零表示忽略
    .参数 lpsz2, 文本型, , 欲搜索的类名。零表示忽略;

.DLL命令 取得类名称_, 整数型, "user32", "GetClassNameA", , 
    .参数 窗口句柄, 整数型, , 
    .参数 缓冲区, 文本型, 传址, 
    .参数 缓冲区长度, 整数型, , 

.DLL命令 取窗口矩形_, 整数型, "user32", "GetWindowRect", , 
    .参数 窗口句柄, 整数型, , 
    .参数 矩形区域, 矩形_, , 

.DLL命令 取窗口标题_, 整数型, "user32", "GetWindowTextA", , 取得一个窗体的标题（caption）文字，或者一个控件的内容（在vb里使用：使用vb窗体或控件的caption或text属性）  复制到lpString的字串长度；不包括空中止字符。会设置GetLastError
    .参数 窗口句柄, 整数型, , 欲获取文字的那个窗口的句柄
    .参数 缓冲区, 文本型, , 预定义的一个缓冲区，至少有cch+1个字符大小；随同窗口文字载入
    .参数 缓冲尺寸, 整数型, , lp缓冲区的长度;

.DLL命令 发送消息1_, 整数型, "user32", "SendMessageA", , 调用一个窗口的窗口函数，将一条消息发给那个窗口。除非消息处理完毕，否则该函数不会返回。SendMessageBynum， ;    SendMessageByString是该函数的“类型安全”声明形式  由具体的消息决定
    .参数 窗口句柄, 整数型, , 要接收消息的那个窗口的句柄
    .参数 信息值, 整数型, , 消息的标识符
    .参数 参数一, 整数型, 传址, 具体取决于消息
    .参数 参数二, 整数型, 传址, 具体取决于消息;

.DLL命令 发送消息2_, 整数型, "user32", "SendMessageA", , 调用一个窗口的窗口函数，将一条消息发给那个窗口。除非消息处理完毕，否则该函数不会返回。SendMessageBynum， ;    SendMessageByString是该函数的“类型安全”声明形式  由具体的消息决定
    .参数 窗口句柄, 整数型, , 要接收消息的那个窗口的句柄
    .参数 信息值, 整数型, , 消息的标识符
    .参数 参数一, 整数型, , 具体取决于消息
    .参数 参数二, 整数型, , 具体取决于消息;

.DLL命令 发送消息3_, 整数型, "user32", "SendMessageA", , 调用一个窗口的窗口函数，将一条消息发给那个窗口。除非消息处理完毕，否则该函数不会返回。SendMessageBynum， ;    SendMessageByString是该函数的“类型安全”声明形式  由具体的消息决定
    .参数 窗口句柄, 整数型, , 要接收消息的那个窗口的句柄
    .参数 信息值, 整数型, , 消息的标识符
    .参数 参数一, 整数型, , 具体取决于消息
    .参数 参数二, 滚动信息_, 传址, 具体取决于消息;

.DLL命令 取平坦滚动条信息_, 逻辑型, "comctl32", "FlatSB_GetScrollInfo", , 执行成功返回非0
    .参数 窗口句柄, 整数型, , hWnd
    .参数 平坦滚动条类型, 整数型, , fnBar
    .参数 平坦滚动条结构, 滚动信息_, , lpsi

.DLL命令 重画窗口_, 整数型, "user32", "RedrawWindow", , 
    .参数 窗口句柄, 整数型, , 
    .参数 矩形, 矩形_, , 
    .参数 区域, 整数型, , 
    .参数 清楚模式, 整数型, , 

.DLL命令 打印窗口_, 整数型, "user32.dll", "PrintWindow", , PrintWindow可以实现不会被其他窗口遮挡的抓图
    .参数 窗口句柄, 整数型, , hWnd，要打印窗口的窗口句柄
    .参数 设备场景句柄, 整数型, , hdcBlt，在其中显示的设备场景
    .参数 标识符, 整数型, , nFlags，给0即可

.DLL命令 取设备场景_, 整数型, "user32", "GetDC", , 获取指定窗口的设备场景  指定窗口的设备场景句柄，出错则为0
    .参数 窗口句柄, 整数型, , hwnd，将获取其设备场景的窗口的句柄。若为0，则要获取整个屏幕的DC;

.DLL命令 释放设备场景_, 整数型, "user32", "ReleaseDC", , 释放由调用GetDC或GetWindowDC函数获取的指定设备场景。它对类或私有设备场景无效（但这样的调用不会造成损害）  执行成功为1，否则为0
    .参数 窗口句柄, 整数型, , hwnd，要释放的设备场景相关的窗口句柄
    .参数 设备场景, 整数型, , hdc，要释放的设备场景句柄;

.DLL命令 寻找子窗口_, 整数型, "user32", "FindWindowExA", , 在窗口列表中寻找与指定条件相符的第一个子窗口  找到的窗口的句柄。如未找到相符窗口，则返回零。会设置GetLastError
    .参数 窗口句柄1, 整数型, , 在其中查找子的父窗口。如设为零，表示使用桌面窗口（通常说的顶级窗口都被认为是桌面的子窗口，所以也会对它们进行查找）
    .参数 窗口句柄2, 整数型, , 从这个窗口后开始查找。这样便可利用对FindWindowEx的多次调用找到符合条件的所有子窗口。如设为零，表示从第一个子窗口开始搜索
    .参数 欲搜索的类名1, 文本型, , 欲搜索的类名。零表示忽略
    .参数 欲搜索的类名2, 文本型, , 欲搜索的类名。零表示忽略;

.DLL命令 复制场景位图_, 整数型, "gdi32.dll", "BitBlt", , 
    .参数 目标设备场景, 整数型, , hDestDC,目标设备场景
    .参数 目标横坐标, 整数型, , x,对目标设备场景中目标矩形左上角位置进行描述的那个点
    .参数 目标纵坐标, 整数型, , y,对目标设备场景中目标矩形左上角位置进行描述的那个点
    .参数 传输图像宽度, 整数型, , nWidth,欲传输图象的宽度
    .参数 传输图像高度, 整数型, , nHeight,欲传输图象的高度
    .参数 源设备场景, 整数型, , hSrcDC,源设备场景。如光栅运算未指定源，则应设为0
    .参数 源横坐标, 整数型, , xSrc,对源设备场景中源矩形左上角位置进行描述的那个点
    .参数 源纵坐标, 整数型, , ySrc,对源设备场景中源矩形左上角位置进行描述的那个点
    .参数 光栅运算方式, 整数型, , dwRop,传输过程要执行的光栅运算

.DLL命令 删除设备场景_, 整数型, "gdi32.dll", "DeleteDC", , 
    .参数 设备场景句柄, 整数型, , hdc，将要删除的设备场景

.DLL命令 删除对象_, 整数型, "gdi32.dll", "DeleteObject", , DeleteObject
    .参数 对象句柄, 整数型, , hObject,一个GDI对象的句柄

.DLL命令 取对象属性_, 整数型, "gdi32", "GetObjectA", , 
    .参数 对象句柄, 整数型, , 
    .参数 数据尺寸, 整数型, , 
    .参数 属性, 位图结构_, , 

.DLL命令 GetObjectA, 整数型, "", "GetObjectA", , 
    .参数 hgdiobj, 空白型, , 
    .参数 cbBuffer, 空白型, , 
    .参数 lpvObject, BITMAP, , 

.DLL命令 CreateCompatibleDC, 整数型, "", "CreateCompatibleDC", , 
    .参数 hdc, 整数型, , 

.DLL命令 GetDIBits_BimapInfo, 整数型, "", "GetDIBits", , 
    .参数 HDC, 空白型, , 
    .参数 hBitmap, 空白型, , 
    .参数 nStartScan, 空白型, , 
    .参数 nNumScans, 空白型, , 
    .参数 lpBits, 空白型, , 
    .参数 lpBI, BITMAPINFO, , 
    .参数 wUsage, 空白型, , 

.DLL命令 GetDIBits, 整数型, "", "GetDIBits", , 
    .参数 HDC, 空白型, , 
    .参数 hBitmap, 空白型, , 
    .参数 nStartScan, 空白型, , 
    .参数 nNumScans, 空白型, , 
    .参数 lpBits, 字节集, , 
    .参数 lpBI, BITMAPINFO, , 
    .参数 wUsage, 空白型, , 

.DLL命令 CopyMemory_BITMAPINFO, 整数型, "", "RtlMoveMemory", , 
    .参数 Destination, 字节集, , 
    .参数 Source, BITMAPINFO, , 
    .参数 Length, 空白型, , 

.DLL命令 CopyMemory_BITMAPFILEHEADER, 整数型, "", "RtlMoveMemory", , 
    .参数 Destination, 字节集, , 
    .参数 Source, BITMAPFILEHEADER, , 
    .参数 Length, 空白型, , 

.DLL命令 DeleteDC, 整数型, "", "DeleteDC", , 
    .参数 hdc, 空白型, , 

.DLL命令 GetWindowRect, 逻辑型, "", "", , 
    .参数 hWnd, 整数型, , 
    .参数 lpRect, RECT, , 

.DLL命令 IsWindow, 逻辑型, "", "", , 
    .参数 hWnd, 整数型, , 

.DLL命令 SelectObject, 整数型, "", "SelectObject", , 
    .参数 hdc, 空白型, , 
    .参数 hgdiobj, 空白型, , 

.DLL命令 PrintWindow, 逻辑型, "", "", , 
    .参数 hwnd, 整数型, , 
    .参数 hdcBlt, 整数型, , 
    .参数 nFlags, 整数型, , 

.DLL命令 CreateCompatibleBitmap, 整数型, "", "CreateCompatibleBitmap", , 
    .参数 hdc, 空白型, , 
    .参数 nWidth, 空白型, , 
    .参数 nHeight, 空白型, , 

.DLL命令 DeleteObject, 逻辑型, "", "DeleteObject", , 
    .参数 hObject, 整数型, , 

.DLL命令 GetDC, 整数型, "", "", , 
    .参数 hWnd, 整数型, , 

.DLL命令 ReleaseDC, 整数型, "", "", , 
    .参数 hWnd, 整数型, , 
    .参数 hDC, 整数型, , 

.DLL命令 IsWindowVisible, 逻辑型, "", "", , 
    .参数 hWnd, 整数型, , 

.DLL命令 GetWindowTextLengthA, 整数型, "", "", , 
    .参数 hWnd, 整数型, , 

.DLL命令 GetWindowTextA, 整数型, "", "", , 
    .参数 hWnd, 整数型, , 
    .参数 lpString, 文本型, , 
    .参数 nMaxCount, 整数型, , 

.DLL命令 BitBlt, 逻辑型, "", "", , 
    .参数 hdcDest, 整数型, , 
    .参数 nXDest, 整数型, , 
    .参数 nYDest, 整数型, , 
    .参数 nWidth, 整数型, , 
    .参数 nHeight, 整数型, , 
    .参数 hdcSrc, 整数型, , 
    .参数 nXSrc, 整数型, , 
    .参数 nYSrc, 整数型, , 
    .参数 dwRop, 整数型, , 

.DLL命令 创建内存场景_, 整数型, "Gdi32", "CreateCompatibleDC", , 
    .参数 设备场景句柄, 整数型, , 

.DLL命令 创建设备位图_, 整数型, "gdi32", "CreateCompatibleBitmap", , 
    .参数 设备场景句柄, 整数型, , 
    .参数 宽度, 整数型, , 
    .参数 高度, 整数型, , 

.DLL命令 选入设备场景_, 整数型, "gdi32.dll", "SelectObject", , SelectObject
    .参数 场景句柄, 整数型, , hdc
    .参数 对象句柄, 整数型, , hobject

.DLL命令 取得窗口信息_, 整数型, "user32", "GetWindowLongA", , 从指定窗口的结构中取得信息  由nIndex决定。零表示出错。会设置GetLastError
    .参数 窗口句柄, 整数型, , 欲为其获取信息的窗口的句柄
    .参数 属性, 整数型, , 欲取回的信息，可以是下述任何一个常数：;GWL_EXSTYLE：扩展窗口样式;GWL_STYLE：窗口样式;GWL_WNDPROC：该窗口的窗口函数的地址;GWL_HINSTANCE：拥有窗口的实例的句柄;GWL_HWNDPARENT：该窗口之父的句柄。不要用SetWindowWord来改变这个值;GWL_ID：对话框中一个子窗口的标识符;GWL_USERDATA：含义由应用程序规定;DWL_DLGPROC：这个窗口的对话框函数地址;DWL_MSGRESULT：在对话框函数中处理的一条消息返回的值;DWL_USER：含义由应用程序规定;

.DLL命令 浏览文件夹对话框_, 整数型, "shell32.dll", "SHBrowseForFolderA", , 
    .参数 浏览文件夹结构, 文件夹信息_, , 

.DLL命令 从列表id取路径_, 整数型, "shell32.dll", "SHGetPathFromIDListA", , 
    .参数 结构指针, 整数型, , pIdl
    .参数 路径, 文本型, 传址, pszPath

.DLL命令 释放分配内容_, 空白型, "ole32.dll", "CoTaskMemFree", , 
    .参数 内存块指针, 整数型, , pv

.窗口程序集 窗口程序集1, , , 

.程序集变量 NULL, 文本型, , , 
.程序集变量 易语言句柄数组, 整数型, , "0", 
.程序集变量 代码编辑框句柄数组, 整数型, , "0", 
.程序集变量 代码编辑框名称数组, 文本型, , "0", 
.程序集变量 滚动条句柄数组, 整数型, , "0", 
.程序集变量 代码编辑框句柄, 整数型, , , 
.程序集变量 滚动条句柄, 整数型, , , 
.程序集变量 图片号, 整数型, , , 
.程序集变量 图片号2, 整数型, , , 
.子程序 __启动窗口_创建完毕, 空白型, , 
_按钮1_被单击 ()
 ' 取代码编辑区和滚动条句柄 (易语言句柄数组 [1])
 ' 临时整数 ＝ 0
 ' 输出调试文本 (FindWindowEx (易语言句柄数组 [1], 0, “CCustomTabCtrl”, NULL))

.子程序 取代码编辑区和滚动条句柄, 空白型, , 
.参数 易语言句柄, 整数型, , 

.局部变量 hwnd_MDIClient, 整数型, , , 
.局部变量 hwnd1, 整数型, , , 
.局部变量 hwnd2, 整数型, , , 
.局部变量 hwnd3, 整数型, , , 

清除数组 (代码编辑框句柄数组)
清除数组 (滚动条句柄数组)
赋值 (hwnd_MDIClient, FindWindowEx (易语言句柄, 0, “MDIClient”, NULL))
赋值 (hwnd1, FindWindowEx (hwnd_MDIClient, 0, NULL, NULL))
.判断循环首 (不等于 (hwnd1, 0))
    赋值 (hwnd2, FindWindowEx (hwnd1, 0, “AfxMDIFrame42s”, NULL))
    .如果真 (大于 (hwnd2, 0))
         ' 输出调试文本 (取窗口标题 (hwnd1))
        赋值 (hwnd3, FindWindowEx (hwnd2, 0, NULL, NULL))
        .判断循环首 (不等于 (hwnd3, 0))
            .如果 (等于 (取窗口类名 (hwnd3), “ScrollBar”))
                .如果真 (等于 (位与 (取得窗口信息_ (hwnd3, #GWL_STYLE), 1), 1))
                    加入成员 (滚动条句柄数组, hwnd3)
                .如果真结束
                
            .否则
                加入成员 (代码编辑框名称数组, 取窗口标题 (hwnd1))
                加入成员 (代码编辑框句柄数组, FindWindowEx (hwnd3, 0, NULL, NULL))
            .如果结束
             ' 输出调试文本 (hwnd3, 取窗口类名 (hwnd3))
            赋值 (hwnd3, FindWindowEx (hwnd2, hwnd3, NULL, NULL))
        .判断循环尾 ()
    .如果真结束
    赋值 (hwnd1, FindWindowEx (hwnd_MDIClient, hwnd1, NULL, NULL))
.判断循环尾 ()
 ' 输出调试文本 (代码编辑框句柄数组)

.子程序 取易语言句柄, 空白型, , 
.局部变量 hwnd, 整数型, , , 

清除数组 (易语言句柄数组)
赋值 (hwnd, FindWindowEx (0, 0, “ENewFrame”, NULL))
.判断循环首 (不等于 (hwnd, 0))
    加入成员 (易语言句柄数组, hwnd)
    赋值 (hwnd, FindWindowEx (0, hwnd, “ENewFrame”, NULL))
.判断循环尾 ()

.子程序 取窗口类名, 文本型, , 
.参数 窗口句柄, 整数型, , 

.局部变量 类名称文本, 文本型, , , 

赋值 (类名称文本, 取空白文本 (30))
取得类名称_ (窗口句柄, 类名称文本, 30)
返回 (类名称文本)

.子程序 取窗口标题, 文本型, , 
.参数 窗口句柄, 整数型, , 

.局部变量 空白文本, 文本型, , , 

赋值 (空白文本, 取空白文本 (255))
取窗口标题_ (窗口句柄, 空白文本, 255)
返回 (空白文本)

.子程序 取滚动条最大值, 整数型, , 
.参数 窗口句柄, 整数型, , 

.局部变量 最小值, 整数型, , , 
.局部变量 最大值, 整数型, , , 

发送消息1_ (窗口句柄, #SBM_GETRANGE, 最小值, 最大值)
 ' 输出调试文本 (最小值, 最大值)
返回 (最大值)


.子程序 取滚动条位置, 整数型, , 
.参数 窗口句柄, 整数型, , 

输出调试文本 (发送消息1_ (窗口句柄, #SBM_GETPOS, 0, 0))
返回 (发送消息1_ (窗口句柄, #SBM_GETPOS, 0, 0))

.子程序 置滚动条位置, 空白型, , 
.参数 窗口句柄, 整数型, , 
.参数 数值, 整数型, , 

发送消息2_ (窗口句柄, #SBM_SETPOS, 数值, 1)


.子程序 刷新窗口显示, 空白型, , 
.参数 窗口句柄, 整数型, , 

.局部变量 窗口矩形, 矩形_, , , 

取窗口矩形_ (窗口句柄, 窗口矩形)

赋值 (窗口矩形.右边, 相减 (窗口矩形.右边, 窗口矩形.左边))
赋值 (窗口矩形.底边, 相减 (窗口矩形.底边, 窗口矩形.顶边))
赋值 (窗口矩形.左边, 0)
赋值 (窗口矩形.顶边, 0)
重画窗口_ (窗口句柄, 窗口矩形, 0, #RDW_INVALIDATE)


.子程序 _按钮1_被单击, 空白型, , 
.局部变量 循环变量, 整数型, , , 

取易语言句柄 ()
清空 ()
.计次循环首 (取数组成员数 (易语言句柄数组), 循环变量)
    取窗口标题 (易语言句柄数组 [循环变量]).加入项目 (易语言句柄数组 [循环变量])
.计次循环尾 ()
 ' 发送消息2_ (1836968, #WM_KEYDOWN, #PageDown键, 0)

.子程序 _按钮2_被单击, 空白型, , 
.局部变量 文件夹名, 文本型, , , 
.局部变量 循环变量, 整数型, , , 
.局部变量 局部_返回值, 整数型, , , 
.局部变量 局部_文本, 文本型, , , 
.局部变量 局部_浏览文件夹结构, 文件夹信息_, , , 

赋值 (局部_浏览文件夹结构.窗口句柄, _启动窗口.取窗口句柄 ())
赋值 (局部_浏览文件夹结构.标题, “请您选择要打开的目录”)
赋值 (局部_浏览文件夹结构.标志, #BIF_RETURNONLYFSDIRS)
赋值 (局部_返回值, 浏览文件夹对话框_ (局部_浏览文件夹结构))
.如果真 (不等于 (局部_返回值, 0))
    赋值 (局部_文本, 取空白文本 (260))
    从列表id取路径_ (局部_返回值, 局部_文本)
    释放分配内容_ (局部_返回值)
    赋值 (文件夹名, 局部_文本)
.如果真结束
.如果真 (不等于 (文件夹名, “”))
    赋值 (文件夹名, 选择 (等于 (取文本右边 (文件夹名, 1), “\”), 文件夹名, 相加 (文件夹名, “\”)))
    赋值 (.内容, 文件夹名)
.如果真结束


.子程序 截取窗口位图, 字节集, , 
.参数 窗口句柄, 整数型, , 
.参数 rc, RECT, 可空, 

.局部变量 矩形区域, RECT, , , 
.局部变量 屏幕设备上下文句柄, 整数型, , , 
.局部变量 内存设备上下文句柄, 整数型, , , 
.局部变量 位图句柄, 整数型, , , 
.局部变量 旧位图句柄, 整数型, , , 
.局部变量 位图, BITMAP, , , 
.局部变量 位图像素点阵, 字节集, , , 
.局部变量 位图文件头, BITMAPFILEHEADER, , , 
.局部变量 位图文件头字节集, 字节集, , , 
.局部变量 位图信息, BITMAPINFO, , , 
.局部变量 位图信息字节集, 字节集, , , 
.局部变量 匿名局部变量_351, 空白型, , , 
.局部变量 hmemdc, 整数型, , , 
.局部变量 hbitmap, 整数型, , , 
.局部变量 holdbitmap, 整数型, , , 

GetWindowRect (窗口句柄, 矩形区域)
赋值 (屏幕设备上下文句柄, GetDC (0))
赋值 (内存设备上下文句柄, CreateCompatibleDC (屏幕设备上下文句柄))
赋值 (位图句柄, CreateCompatibleBitmap (屏幕设备上下文句柄, 相减 (矩形区域.right, 矩形区域.left), 相减 (矩形区域.bottom, 矩形区域.top)))
赋值 (旧位图句柄, SelectObject (内存设备上下文句柄, 位图句柄))
.如果真 (取反 (PrintWindow (窗口句柄, 内存设备上下文句柄, 0)))
    SelectObject (内存设备上下文句柄, 旧位图句柄)
    DeleteObject (位图句柄)
    DeleteDC (内存设备上下文句柄)
    ReleaseDC (0, 屏幕设备上下文句柄)
    返回 ({  })
.如果真结束

.如果真 (等于 (是否为空 (rc), 假))
    赋值 (hmemdc, CreateCompatibleDC (屏幕设备上下文句柄))
    赋值 (hbitmap, CreateCompatibleBitmap (屏幕设备上下文句柄, 相减 (rc.right, rc.left), 相减 (rc.bottom, rc.top)))
    赋值 (holdbitmap, SelectObject (hmemdc, hbitmap))
    BitBlt (hmemdc, 0, 0, 相减 (rc.right, rc.left), 相减 (rc.bottom, rc.top), 内存设备上下文句柄, rc.left, rc.top, 13369376)
    
    SelectObject (内存设备上下文句柄, 旧位图句柄)
    DeleteObject (位图句柄)
    DeleteDC (内存设备上下文句柄)
    
    赋值 (内存设备上下文句柄, hmemdc)
    赋值 (位图句柄, hbitmap)
    赋值 (旧位图句柄, holdbitmap)
.如果真结束

GetObjectA (位图句柄, 相加 (相乘 (5, 4), 2, 2), 位图)
赋值 (位图信息.BITMAPINFOHEADER.biSize, 相乘 (4, 11))
GetDIBits_BimapInfo (内存设备上下文句柄, 位图句柄, 0, 0, 0, 位图信息, 0)
赋值 (位图像素点阵, 取空白字节集 (位图信息.BITMAPINFOHEADER.biSizeImage))
赋值 (位图信息.BITMAPINFOHEADER.biCompression, 0)
GetDIBits (内存设备上下文句柄, 位图句柄, 0, 位图.bmHeight, 位图像素点阵, 位图信息, 0)
 ' 构造位图信息
赋值 (位图信息字节集, 取空白字节集 (位图信息.BITMAPINFOHEADER.biSize))
CopyMemory_BITMAPINFO (位图信息字节集, 位图信息, 位图信息.BITMAPINFOHEADER.biSize)
 ' 构造位图文件头
赋值 (位图文件头.bfType, 19778)
赋值 (位图文件头.bfOffBits, 相加 (相乘 (2, 4), 相乘 (3, 2), 位图信息.BITMAPINFOHEADER.biSize))
赋值 (位图文件头.bfSize, 相加 (位图文件头.bfOffBits, 位图信息.BITMAPINFOHEADER.biSizeImage))
赋值 (位图文件头.bfReserved1, 0)
赋值 (位图文件头.bfReserved2, 0)
赋值 (位图文件头字节集, 取空白字节集 (14))
CopyMemory_BITMAPFILEHEADER (位图文件头字节集, 位图文件头, 14)
SelectObject (内存设备上下文句柄, 旧位图句柄)
DeleteObject (位图句柄)
DeleteDC (内存设备上下文句柄)
ReleaseDC (0, 屏幕设备上下文句柄)
返回 (相加 (位图文件头字节集, 位图信息字节集, 位图像素点阵))

.子程序 _按钮3_被单击, 空白型, , 
.局部变量 当前滚动条位置, 整数型, , , 
.局部变量 整数, 整数型, , , 

赋值 (当前滚动条位置, -1)
赋值 (整数, 0)
置滚动条位置 (滚动条句柄, 0)
刷新窗口显示 (代码编辑框句柄)
.判断循环首 (不等于 (取滚动条位置 (滚动条句柄), 当前滚动条位置))
    赋值 (整数, 相加 (整数, 1))
    赋值 (当前滚动条位置, 取滚动条位置 (滚动条句柄))
    刷新窗口显示 (代码编辑框句柄)
    写到文件 (相加 (“C:\Documents and Settings\Administrator\桌面\测试文件夹\jt”, 到文本 (整数), “.bmp”), 截取窗口位图 (代码编辑框句柄))
    发送消息2_ (滚动条句柄, #WM_KEYDOWN, #PageDown键, 0)
.判断循环尾 ()

赋值 (.禁止, 假)
赋值 (.最大位置, 整数)
_滑块条1_位置被改变 ()


.子程序 _列表框1_列表项被选择, 空白型, , 
.局部变量 循环变量, 整数型, , , 

清空 ()
取代码编辑区和滚动条句柄 (.取项目数值 (.现行选中项))
.计次循环首 (取数组成员数 (代码编辑框句柄数组), 循环变量)
    代码编辑框名称数组.加入项目 ( [循环变量], 代码编辑框句柄数组 [循环变量])
.计次循环尾 ()

.子程序 _列表框2_列表项被选择, 空白型, , 
赋值 (.内容, 到文本 (代码编辑框句柄数组 [相加 (.现行选中项, 1)]))
赋值 (.内容, 到文本 (滚动条句柄数组 [相加 (.现行选中项, 1)]))
赋值 (_启动窗口., 相加 (“共”, 到文本 (取滚动条最大值 (滚动条句柄数组 [相加 (.现行选中项, 1)])), “行代码”))
 ' 刷新窗口显示 (代码编辑框句柄数组 [列表框2.现行选中项 ＋ 1])
赋值 (.底图, 截取窗口位图 (代码编辑框句柄数组 [相加 (.现行选中项, 1)]))

.子程序 _编辑框2_内容被改变, 空白型, , 
赋值 (滚动条句柄, 到数值 (.内容))

.子程序 _编辑框1_内容被改变, 空白型, , 
赋值 (代码编辑框句柄, 到数值 (.内容))

.子程序 _滑块条1_位置被改变, 空白型, , 
赋值 (图片号, 载入图片 (相加 (“C:\Documents and Settings\Administrator\桌面\测试文件夹\jt”, 到文本 (.位置), “.bmp”)))
图片号.画图片 (0, 0, , , )

赋值 (.位置, 1)
赋值 (.位置, 1)

赋值 (.最大位置, 相减 (图片号.取图片宽度 (), .宽度))
赋值 (.最大位置, 相减 (图片号.取图片高度 (), .高度))

.子程序 _纵向滚动条1_位置被改变, 空白型, , 
图片号.画图片 (相加 (负 (.位置), 1), 相加 (负 (.位置), 1), , , )


.子程序 __启动窗口_将被销毁, 空白型, , 
卸载图片 (图片号)
卸载图片 (图片号2)

.子程序 _横向滚动条1_位置被改变, 空白型, , 
图片号.画图片 (相加 (负 (.位置), 1), 相加 (负 (.位置), 1), , , )

.子程序 _按钮4_被单击, 空白型, , 
.局部变量 位图2, 位图, , , 
.局部变量 临时位图, 位图, , , 
.局部变量 比对位图, 位图, , , 
.局部变量 结果位图, 位图, , , 
.局部变量 文件名数组, 文本型, , "0", 
.局部变量 循环变量1, 整数型, , , 
.局部变量 循环变量2, 整数型, , , 
.局部变量 偏移量, 整数型, , , 
.局部变量 位图宽度, 整数型, , , 
.局部变量 比对数据, 字节集, , , 
.局部变量 结果宽度, 整数型, , , 
.局部变量 空数据字节集, 字节集, , , 
.局部变量 临时整数, 整数型, , , 
.局部变量 开始时间, 日期时间型, , , 
.局部变量 结束时间, 日期时间型, , , 

赋值 (开始时间, 取现行时间 ())
取要拼接图片文件名数组 (文件名数组)
赋值 (.可视, 真)
赋值 (.最大位置, 相减 (取数组成员数 (文件名数组), 1))
结果位图.载入文件 (文件名数组 [1])
赋值 (位图宽度, 结果位图.取宽度 ())
赋值 (结果宽度, 位图宽度)
.如果 (大于 (位图宽度, 240))
    赋值 (位图宽度, 200)
.否则
    赋值 (位图宽度, 相减 (位图宽度, 40))
.如果结束
比对位图.创建 (位图宽度, 1, 32, )
结果位图.复制到 (40, 0, 位图宽度, 1, 比对位图, 0, 0, )
赋值 (空数据字节集, 比对位图.取位图数据 ())
临时位图.创建 (位图宽度, 1, 32, )
.计次循环首 (相减 (取数组成员数 (文件名数组), 1), 循环变量1)
    赋值 (.位置, 循环变量1)
    位图2.载入文件 (文件名数组 [相加 (循环变量1, 1)])
    比对位图.创建 (位图宽度, 1, 32, )
    结果位图.复制到 (40, 相减 (结果位图.取高度 (), 1), 位图宽度, 1, 比对位图, 0, 0, )
    赋值 (比对数据, 比对位图.取位图数据 ())
    .如果 (不等于 (比对数据, 空数据字节集))
        .计次循环首 (21, 循环变量2)
            临时位图.创建 (位图宽度, 1, 32, )
            位图2.复制到 (40, 相减 (循环变量2, 1), 位图宽度, 1, 临时位图, 0, 0, )
            .如果真 (等于 (临时位图.取位图数据 (), 比对数据))
                输出调试文本 (循环变量2)
                赋值 (偏移量, 相加 (循环变量2, 1))
                跳出循环 ()
            .如果真结束
            
        .计次循环尾 ()
        处理事件 ()
        .如果真 (等于 (循环变量2, 22))
            输出调试文本 (0)
            赋值 (偏移量, 0)
        .如果真结束
        
    .否则
        赋值 (偏移量, 0)
        输出调试文本 (“0!”)
    .如果结束
    赋值 (临时整数, 结果位图.取高度 ())
    临时位图.创建 (结果宽度, 相减 (相加 (临时整数, 位图2.取高度 ()), 偏移量), 32, )
    结果位图.复制到 (0, 0, , , 临时位图, 0, 0, )
    位图2.复制到 (0, 0, , , 临时位图, 0, 相减 (临时整数, 偏移量), )
    赋值 (结果位图, 临时位图)
.计次循环尾 ()
写到文件 (相加 (.内容, “dm.bmp”), 结果位图.取位图数据 ())
赋值 (图片号2, 载入图片 (结果位图.取位图数据 ()))
赋值 (.可视, 假)
图片号2.画图片 (0, 0, , , )
赋值 (.位置, 1)
赋值 (.位置, 1)
赋值 (.最大位置, 相减 (图片号2.取图片宽度 (), .宽度))
赋值 (.最大位置, 相减 (图片号2.取图片高度 (), .高度))
赋值 (结束时间, 取现行时间 ())
赋值 (.标题, 相加 (“用时：”, 到文本 (取时间间隔 (结束时间, 开始时间, #秒)), “秒”))

.子程序 取要拼接图片文件名数组, 空白型, , 
.参数 文件名数组, 文本型, 参考 数组, 

.局部变量 循环变量, 整数型, , , 

清除数组 (文件名数组)
.计次循环首 (取项目数 (), 循环变量)
    .如果真 (相减 (循环变量, 1).是否被选中 ())
        加入成员 (文件名数组, 相加 (.内容, 相减 (循环变量, 1).取项目文本 ()))
    .如果真结束
    
.计次循环尾 ()

.子程序 _选择夹1_子夹被改变, 空白型, , 
.如果真 (等于 (.现行子夹, 2))
    _按钮5_被单击 ()
.如果真结束


.子程序 _按钮5_被单击, 空白型, , 
.局部变量 文件名, 文本型, , , 

清空 ()
赋值 (文件名, 寻找文件 (相加 (.内容, “jt*.bmp”), ))
.判断循环首 (不等于 (文件名, “”))
    文件名.加入项目 ()
    相减 (取项目数 (), 1).选中项目 (真)
    赋值 (文件名, 寻找文件 ())
.判断循环尾 ()


.子程序 _纵向滚动条2_位置被改变, 空白型, , 
图片号2.画图片 (相加 (负 (.位置), 1), 相加 (负 (.位置), 1), , , )

.子程序 _横向滚动条2_位置被改变, 空白型, , 
图片号2.画图片 (相加 (负 (.位置), 1), 相加 (负 (.位置), 1), , , )

.子程序 _按钮7_被单击, 空白型, , 
 ' 输出调试文本 (转换到JPG (编辑框3.内容 ＋ “dm.bmp”, 编辑框3.内容 ＋ “dm_JPG.jpg”, 假, 到数值 (编辑框4.内容), 真, 0))



 ' 不属于任何一个程序集、类模块的函数：
