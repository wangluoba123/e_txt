 ' 文件类型：Windows窗口程序

 ' 程序名称：IP切换器
 ' 程序描述：就玩玩
 ' 程序作者：苏衡
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 297
    高度 = 141
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 假
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 已保存到：D:\易语言学习\Data\bYbTa7Ao.e\_启动窗口_图标.ico
    背景音乐 =  ' 空
    标题 = “”
    帮助文件名 = “”

窗口 说明窗口
    左边 = 50
    顶边 = 50
    宽度 = 233
    高度 = 141
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “说明”
    帮助文件名 = “”



.常量 恢复窗口, "9", , 
.常量 最小化窗口, "6", , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 4 系统核心支持库
 ' shellEx DA19AC3ADD2F4121AAD84AC5FBCAFC71 2 0 扩展功能支持库一
 ' xplib 7F54B9CE8887428dBA9CEEB94CEF4C72 1 6 XP风格界面库
 ' shell 52F260023059454187AF826A3C07AF2A 1 0 操作系统界面功能支持库
 ' iext2 AF6AD80AA4244A59AFB3D83ECF5173CC 1 1 扩展界面支持库二
 ' iext 27bb20fdd3e145e4bee3db39ddd6e64c 1 2 扩展界面支持库一
 ' sock A6B983789F624b2cBDFD7D671249C097 1 0 网络通讯支持库





.DLL命令 创建事件同步对象, 空白型, "", "CreateEventA", , 
    .参数 lpEventAttributes, 整数型, , 
    .参数 bManualReset, 逻辑型, , 
    .参数 bInitialState, 逻辑型, , 
    .参数 lpName, 文本型, , 

.DLL命令 置为活动窗口, 空白型, "", "SetForegroundWindow", , 
    .参数 窗口句柄, 整数型, , 

.DLL命令 显示窗口, 空白型, "", "ShowWindow", , 
    .参数 窗口句柄, 整数型, , 
    .参数 显示状态, 整数型, , 

.DLL命令 打开事件同步对象, 整数型, "", "OpenEventA", , 
    .参数 dwDesiredAccess, 整数型, , 
    .参数 bInheritHandle, 逻辑型, , 
    .参数 lpName, 文本型, , 

.窗口程序集 窗口程序集1, , , 

.程序集变量 热键表示, 整数型, , , 
.程序集变量 热键表示1, 整数型, , , 
.程序集变量 热键表示2, 整数型, , , 
.程序集变量 热键表示3, 整数型, , , 
.程序集变量 热键表示4, 整数型, , , 
.程序集变量 热键表示5, 整数型, , , 
.程序集变量 匿名程序集变量_599, 空白型, , , 
.程序集变量 配置文件名, 文本型, , , 
.程序集变量 IP判断, 文本型, , , 
.程序集变量 时间变量, 整数型, , , 
.程序集变量 IP1, 文本型, , , 
.程序集变量 IP2, 文本型, , , 
.程序集变量 总时间, 整数型, , , 
.程序集变量 剩余时间, 整数型, , , 
.程序集变量 秒1, 整数型, , , 
.程序集变量 提示IP, 文本型, , , 
.程序集变量 定时1, 文本型, , , 
.程序集变量 定时2, 文本型, , , 
.程序集变量 光标位置, 文本型, , , 
.程序集变量 光标位置1, 文本型, , , 
.子程序 __启动窗口_创建完毕, 空白型, , 
.局部变量 节名数组, 文本型, , "0", 
.局部变量 局部计次变量, 整数型, , , 
.局部变量 本机IP组, 文本型, , "0", 

赋值 (本机IP组, 未知支持库函数_17 ())
赋值 (IP判断, 本机IP组 [1])
赋值 (提示IP, “No-IP”)
输出调试文本 (IP判断)
.如果真 (不等于 (打开事件同步对象 (2031619, 假, “vcsdfsdfsdsf245fsdfdsf”), 0)) ' "vcsdfsdfsdsf245fsdfdsf"可以是任何文本，但是最好要长一点以保证和系统中已有其他事件对象的名称不相冲突。
    信息框 (“老兄:你想要运行多少个呀?你已经运行一个还不行?,如果你还行在运行一个的话你就说嘛,不说我怎么知道你还想运行呢,按St+Cl+At+Z让它出来吧,~_~”, 0, “不是我说你”)
    销毁 ()
    返回 ()
.如果真结束
创建事件同步对象 (0, 假, 假, “vcsdfsdfsdsf245fsdfdsf”)
未知支持库函数_0 (1)
赋值 (热键表示, 未知支持库函数_10 (取窗口句柄 (), 取窗口句柄 (), 相加 (#Ctrl键状态, #Shift键状态, #Alt键状态), #Z键))
 ' 热键表示 ＝ 注册热键 (取窗口句柄 (), 标签1.取窗口句柄 (), #Ctrl键状态 ＋ #Shift键状态 ＋ #Alt键状态, #O键)
赋值 (热键表示1, 未知支持库函数_10 (取窗口句柄 (), 取窗口句柄 (), 相加 (#Ctrl键状态, #Shift键状态, #Alt键状态), #M键))
赋值 (热键表示2, 未知支持库函数_10 (取窗口句柄 (), 取窗口句柄 (), 相加 (#Ctrl键状态, #Shift键状态, #Alt键状态), #J键))
赋值 (热键表示3, 未知支持库函数_10 (取窗口句柄 (), 取窗口句柄 (), 相加 (#Ctrl键状态, #Shift键状态, #Alt键状态), #K键))
赋值 (热键表示4, 未知支持库函数_10 (取窗口句柄 (), 取窗口句柄 (), 相加 (#Ctrl键状态, #Shift键状态, #Alt键状态), #L键))
赋值 (热键表示5, 未知支持库函数_10 (取窗口句柄 (), 取窗口句柄 (), 相加 (#Ctrl键状态, #Shift键状态, #Alt键状态), #R键))
赋值 (配置文件名, 相加 (未知支持库函数_7 (#), “\配置文件.ini”))
.如果真 (等于 (文件是否存在 (配置文件名), 真))
    赋值 (节名数组, 取配置节名 (配置文件名))
    .计次循环首 (取数组成员数 (节名数组), 局部计次变量)
        .如果真 (等于 (节名数组 [局部计次变量], “IP配置”))
            赋值 (IP1, 读配置项 (配置文件名, 节名数组 [局部计次变量], “IP1”, ))
            赋值 (IP2, 读配置项 (配置文件名, 节名数组 [局部计次变量], “IP2”, ))
        .如果真结束
        .如果真 (等于 (节名数组 [局部计次变量], “定时1配置”))
            赋值 (.内容, 读配置项 (配置文件名, 节名数组 [局部计次变量], “H”, ))
            赋值 (.内容, 读配置项 (配置文件名, 节名数组 [局部计次变量], “M”, ))
            赋值 (.内容, 读配置项 (配置文件名, 节名数组 [局部计次变量], “N”, ))
            .如果 (等于 (读配置项 (配置文件名, 节名数组 [局部计次变量], “是否IP1”, ), “真”))
                赋值 (.选中, 真)
            .否则
                赋值 (.选中, 假)
            .如果结束
            
        .如果真结束
        .如果真 (等于 (节名数组 [局部计次变量], “定时2配置”))
            赋值 (.内容, 读配置项 (配置文件名, 节名数组 [局部计次变量], “H”, ))
            赋值 (.内容, 读配置项 (配置文件名, 节名数组 [局部计次变量], “M”, ))
            赋值 (.内容, 读配置项 (配置文件名, 节名数组 [局部计次变量], “N”, ))
            .如果 (等于 (读配置项 (配置文件名, 节名数组 [局部计次变量], “是否IP1”, ), “真”))
                赋值 (.选中, 真)
            .否则
                赋值 (.选中, 假)
            .如果结束
            
        .如果真结束
        .如果真 (等于 (节名数组 [局部计次变量], “切换时间配置”))
            赋值 (.内容, 读配置项 (配置文件名, 节名数组 [局部计次变量], “切换时间”, ))
        .如果真结束
        .如果真 (等于 (节名数组 [局部计次变量], “定时3配置”))
            赋值 (.内容, 读配置项 (配置文件名, 节名数组 [局部计次变量], “H”, ))
            赋值 (.内容, 读配置项 (配置文件名, 节名数组 [局部计次变量], “M”, ))
            赋值 (.内容, 读配置项 (配置文件名, 节名数组 [局部计次变量], “N”, ))
            .如果 (等于 (读配置项 (配置文件名, 节名数组 [局部计次变量], “是否OK”, ), “真”))
                赋值 (.选中, 真)
            .否则
                赋值 (.选中, 假)
            .如果结束
            
        .如果真结束
        .如果真 (等于 (节名数组 [局部计次变量], “是否定时配置”))
            .如果 (等于 (读配置项 (配置文件名, 节名数组 [局部计次变量], “是否定时”, ), “真”))
                赋值 (.选中, 真)
            .否则
                赋值 (.选中, 假)
            .如果结束
            跳出循环 ()
        .如果真结束
        
    .计次循环尾 ()
    .如果 (不等于 (IP1, “”))
        赋值 (., 转换为IP地址 (IP1))
    .否则
        赋值 (., 转换为IP地址 (“192.168.1.106”))
    .如果结束
    .如果 (不等于 (IP2, “”))
        赋值 (., 转换为IP地址 (IP2))
    .否则
        赋值 (., 转换为IP地址 (“192.168.1.111”))
    .如果结束
    
.如果真结束
输出调试文本 (未知支持库函数_7 (#))
赋值 (.内容, 现在时间 (取现行时间 ()))
“[1]剩余时间:***”.加入栏目 (142, , , )
“[2]剩余时间:***”.加入栏目 (148, , , )
.如果真 (等于 (.选中, 真))
    _IP2按钮_被单击 ()
.如果真结束


.子程序 _标签1_反馈事件, 整数型, , 
.参数 参数一, 整数型, , 
.参数 参数二, 整数型, , 

.判断开始 (并且 (等于 (参数一, 热键表示), 等于 (_启动窗口., 假)))
    激活主窗口 ()
    赋值 (.时钟周期, 1000)
.判断 (并且 (等于 (参数一, 热键表示), 等于 (_启动窗口., 真)))
    赋值 (_启动窗口., 假)
    赋值 (.时钟周期, 0)
.判断 (等于 (参数一, 热键表示1))
    .如果 (等于 (.选中, 假))
        赋值 (.选中, 真)
    .否则
        赋值 (.选中, 假)
    .如果结束
    _选择框1_被单击 ()
.判断 (等于 (参数一, 热键表示2))
    _Go按钮_被单击 ()
.判断 (等于 (参数一, 热键表示3))
    _Go按钮1_被单击 ()
.判断 (等于 (参数一, 热键表示4))
    赋值 (.选中, 真)
    _Go按钮2_被单击 ()
.判断 (等于 (参数一, 热键表示5))
    .如果 (等于 (.选中, 假))
        赋值 (.选中, 真)
    .否则
        赋值 (.选中, 假)
    .如果结束
    
.默认
    
.判断结束


.子程序 _自动按钮_被单击, 空白型, , 
.局部变量 文件名, 文本型, , , 
.局部变量 临时文件名, 文本型, , , 
.局部变量 脚本, 文本型, , , 

赋值 (文件名, 相加 (#引号, 取运行目录 (), “\”, 取执行文件名 (), #引号))
赋值 (临时文件名, 相加 (未知支持库函数_7 (#), “GIP.Bat”))
输出调试文本 (临时文件名)
赋值 (脚本, 相加 (“NETSH INTERFACE IP SET ADDRESS 本地连接 DHCP”, #换行符))
 ' 脚本 ＝ 脚本 ＋ “NETSH INTERFACE IP SET DNS 本地连接 DHCP” ＋ #换行符
赋值 (脚本, 相加 (脚本, “:Repeat”, #换行符))
赋值 (脚本, 相加 (脚本, “del ”, #引号, 临时文件名, #引号, #换行符))
赋值 (脚本, 相加 (脚本, “if exist ”, 临时文件名, “ goto Repeat”, #换行符))
输出调试文本 (脚本)
.如果真 (写到文件 (临时文件名, 到字节集 (脚本)))
    运行 (临时文件名, 假, #隐藏窗口)
    0.置文本 (“手动方式:自动IP已切换”)
.如果真结束


.子程序 _IP1按钮_被单击, 空白型, , 
.局部变量 文件名, 文本型, , , 
.局部变量 临时文件名, 文本型, , , 
.局部变量 脚本, 文本型, , , 

赋值 (文件名, 相加 (#引号, 取运行目录 (), “\”, 取执行文件名 (), #引号))
赋值 (临时文件名, 相加 (未知支持库函数_7 (#), “GIP.Bat”))
输出调试文本 (临时文件名)
.判断开始 (不等于 (., “”))
    赋值 (脚本, 相加 (“netsh interface ip set address 本地连接 static ”, ., “ 255.255.255.0 192.168.1.1 1”, #换行符))
.默认
    赋值 (脚本, 相加 (“netsh interface ip set address 本地连接 static 192.168.1.106 255.255.255.0 192.168.1.1 1”, #换行符))
.判断结束
赋值 (脚本, 相加 (脚本, “:Repeat”, #换行符))
赋值 (脚本, 相加 (脚本, “del ”, #引号, 临时文件名, #引号, #换行符))
赋值 (脚本, 相加 (脚本, “if exist ”, 临时文件名, “ goto Repeat”, #换行符))
写配置项 (配置文件名, “IP配置”, “IP1”, 到文本 (.))
输出调试文本 (脚本)
.如果真 (写到文件 (临时文件名, 到字节集 (脚本)))
    运行 (临时文件名, 假, #隐藏窗口)
    0.置文本 (“手动方式:IP1已切换”)
.如果真结束


.子程序 _IP2按钮_被单击, 空白型, , 
.局部变量 文件名, 文本型, , , 
.局部变量 临时文件名, 文本型, , , 
.局部变量 脚本, 文本型, , , 

赋值 (文件名, 相加 (#引号, 取运行目录 (), “\”, 取执行文件名 (), #引号))
赋值 (临时文件名, 相加 (未知支持库函数_7 (#), “GIP.Bat”))
输出调试文本 (临时文件名)
.判断开始 (不等于 (., “”))
    赋值 (脚本, 相加 (“netsh interface ip set address 本地连接 static ”, ., “ 255.255.255.0 192.168.1.1 1”, #换行符))
.默认
    赋值 (脚本, 相加 (“netsh interface ip set address 本地连接 static 192.168.1.111 255.255.255.0 192.168.1.1 1”, #换行符))
.判断结束
赋值 (脚本, 相加 (脚本, “:Repeat”, #换行符))
赋值 (脚本, 相加 (脚本, “del ”, #引号, 临时文件名, #引号, #换行符))
赋值 (脚本, 相加 (脚本, “if exist ”, 临时文件名, “ goto Repeat”, #换行符))
输出调试文本 (脚本)
写配置项 (配置文件名, “IP配置”, “IP2”, 到文本 (.))
.如果真 (写到文件 (临时文件名, 到字节集 (脚本)))
    运行 (临时文件名, 假, #隐藏窗口)
    0.置文本 (“手动方式:IP2已切换”)
.如果真结束


.子程序 __启动窗口_尺寸被改变, 空白型, , 
.如果 (等于 (., 2))
    显示窗口 (_启动窗口.取窗口句柄 (), #最小化窗口)
    赋值 (_启动窗口., 假)
.否则
    
.如果结束


.子程序 激活主窗口, 空白型, , 
显示窗口 (_启动窗口.取窗口句柄 (), #恢复窗口)
置为活动窗口 (_启动窗口.取窗口句柄 ())

.子程序 __启动窗口_将被销毁, 空白型, , 
写配置项 (配置文件名, “IP配置”, “IP1”, 到文本 (.))
写配置项 (配置文件名, “IP配置”, “IP2”, 到文本 (.))


写配置项 (配置文件名, “定时1配置”, “H”, 到文本 (.内容))
写配置项 (配置文件名, “定时1配置”, “M”, 到文本 (.内容))
写配置项 (配置文件名, “定时1配置”, “N”, 到文本 (.内容))
.判断开始 (.选中)
    写配置项 (配置文件名, “定时1配置”, “是否IP1”, 到文本 (.选中))
.默认
    写配置项 (配置文件名, “定时1配置”, “是否IP1”, 到文本 (假))
.判断结束


写配置项 (配置文件名, “定时2配置”, “H”, 到文本 (.内容))
写配置项 (配置文件名, “定时2配置”, “M”, 到文本 (.内容))
写配置项 (配置文件名, “定时2配置”, “N”, 到文本 (.内容))
.判断开始 (.选中)
    写配置项 (配置文件名, “定时2配置”, “是否IP1”, 到文本 (.选中))
.默认
    写配置项 (配置文件名, “定时2配置”, “是否IP1”, 到文本 (假))
.判断结束

写配置项 (配置文件名, “定时3配置”, “H”, 到文本 (.内容))
写配置项 (配置文件名, “定时3配置”, “M”, 到文本 (.内容))
写配置项 (配置文件名, “定时3配置”, “N”, 到文本 (.内容))
.判断开始 (.选中)
    写配置项 (配置文件名, “定时3配置”, “是否OK”, 到文本 (.选中))
.默认
    写配置项 (配置文件名, “定时3配置”, “是否OK”, 到文本 (假))
.判断结束

写配置项 (配置文件名, “切换时间配置”, “切换时间”, 到文本 (.内容))
.判断开始 (.选中)
    写配置项 (配置文件名, “是否定时配置”, “是否定时”, 到文本 (.选中))
.默认
    写配置项 (配置文件名, “是否定时配置”, “是否定时”, 到文本 (假))
.判断结束


.子程序 _时钟1_周期事件, 空白型, , 
.局部变量 局部计次变量, 整数型, , , 

.如果真 (小于 (到数值 (.内容), 0.1))
    赋值 (.时钟周期, 0)
    赋值 (., “设定要大于1”)
    赋值 (.选中, 假)
    信息框 (“不用设定切换时间那么短吧?想自杀呀?”, 0, )
    返回 ()
.如果真结束
.如果 (等于 (.选中, 真))
    .如果 (小于或等于 (秒1, 总时间))
        赋值 (剩余时间, 相减 (总时间, 秒1))
        赋值 (秒1, 相加 (秒1, 1))
        赋值 (., 相加 (到文本 (剩余时间), “秒 IP:[”, 到文本 (IP判断), “]”))
    .否则
        赋值 (.时钟周期, 0)
        赋值 (., “”)
        .如果 (不等于 (IP判断, IP1))
            输出调试文本 (“IP判断 ＝ IP1,切换到IP2”)
            _IP1按钮_被单击 ()
            赋值 (IP判断, IP1)
            赋值 (提示IP, “IP1”)
        .否则
            .如果 (不等于 (IP判断, IP2))
                输出调试文本 (“IP判断 ＝ IP2,切换到IP1”)
                _IP2按钮_被单击 ()
                赋值 (IP判断, IP2)
                赋值 (提示IP, “IP2”)
            .否则
                 ' 输出调试文本 (“IP判断 ≠ IP2  IP判断 ≠ IP1”)
                赋值 (IP1, IP判断)
                赋值 (提示IP, “No-IP”)
            .如果结束
            
        .如果结束
        赋值 (总时间, 相乘 (到数值 (.内容), 60))
        赋值 (秒1, 0)
        赋值 (.时钟周期, 1000)
    .如果结束
    
.否则
    赋值 (.时钟周期, 0)
    赋值 (., “”)
.如果结束


.子程序 _选择框1_被单击, 空白型, , 
赋值 (总时间, 相乘 (到数值 (.内容), 60))
赋值 (秒1, 0)
赋值 (.时钟周期, 1000)

.子程序 _编辑框1_获得焦点, 空白型, , 
赋值 (光标位置, “1”)

.子程序 _编辑框2_获得焦点, 空白型, , 
赋值 (光标位置, “2”)

.子程序 _编辑框3_获得焦点, 空白型, , 
赋值 (光标位置, “3”)

.子程序 _编辑框4_获得焦点, 空白型, , 
赋值 (光标位置, “4”)

.子程序 _编辑框5_获得焦点, 空白型, , 
赋值 (光标位置, “5”)

.子程序 _编辑框6_获得焦点, 空白型, , 
赋值 (光标位置, “6”)


.子程序 _编辑框7_获得焦点, 空白型, , 
赋值 (光标位置, “7”)

.子程序 _编辑框8_获得焦点, 空白型, , 
赋值 (光标位置, “8”)

.子程序 _编辑框9_获得焦点, 空白型, , 
赋值 (光标位置, “9”)

.子程序 _调节器1_调节钮被按下, 空白型, , 
.参数 按钮值, 整数型, , 

.判断开始 (等于 (光标位置, “1”))
    赋值 (.内容, 到文本 (相加 (到数值 (.内容), 按钮值)))
    .如果真 (等于 (.内容, “24”))
        赋值 (.内容, “0”)
    .如果真结束
    .如果真 (等于 (.内容, “-1”))
        赋值 (.内容, “23”)
    .如果真结束
    
.判断 (等于 (光标位置, “2”))
    赋值 (.内容, 到文本 (相加 (到数值 (.内容), 按钮值)))
    .如果真 (等于 (.内容, “60”))
        赋值 (.内容, “0”)
    .如果真结束
    .如果真 (等于 (.内容, “-1”))
        赋值 (.内容, “59”)
    .如果真结束
    
.判断 (等于 (光标位置, “3”))
    赋值 (.内容, 到文本 (相加 (到数值 (.内容), 按钮值)))
    .如果真 (等于 (.内容, “60”))
        赋值 (.内容, “0”)
    .如果真结束
    .如果真 (等于 (.内容, “-1”))
        赋值 (.内容, “59”)
    .如果真结束
    
.判断 (等于 (光标位置, “4”))
    赋值 (.内容, 到文本 (相加 (到数值 (.内容), 按钮值)))
    .如果真 (等于 (.内容, “24”))
        赋值 (.内容, “0”)
    .如果真结束
    .如果真 (等于 (.内容, “-1”))
        赋值 (.内容, “23”)
    .如果真结束
    
.判断 (等于 (光标位置, “5”))
    赋值 (.内容, 到文本 (相加 (到数值 (.内容), 按钮值)))
    .如果真 (等于 (.内容, “60”))
        赋值 (.内容, “0”)
    .如果真结束
    .如果真 (等于 (.内容, “-1”))
        赋值 (.内容, “59”)
    .如果真结束
    
.判断 (等于 (光标位置, “6”))
    赋值 (.内容, 到文本 (相加 (到数值 (.内容), 按钮值)))
    .如果真 (等于 (.内容, “60”))
        赋值 (.内容, “0”)
    .如果真结束
    .如果真 (等于 (.内容, “-1”))
        赋值 (.内容, “59”)
    .如果真结束
    
.判断 (等于 (光标位置, “7”))
    赋值 (.内容, 到文本 (相加 (到数值 (.内容), 按钮值)))
    .如果真 (等于 (.内容, “24”))
        赋值 (.内容, “0”)
    .如果真结束
    .如果真 (等于 (.内容, “-1”))
        赋值 (.内容, “23”)
    .如果真结束
    
.判断 (等于 (光标位置, “8”))
    赋值 (.内容, 到文本 (相加 (到数值 (.内容), 按钮值)))
    .如果真 (等于 (.内容, “60”))
        赋值 (.内容, “0”)
    .如果真结束
    .如果真 (等于 (.内容, “-1”))
        赋值 (.内容, “59”)
    .如果真结束
    
.判断 (等于 (光标位置, “9”))
    赋值 (.内容, 到文本 (相加 (到数值 (.内容), 按钮值)))
    .如果真 (等于 (.内容, “60”))
        赋值 (.内容, “0”)
    .如果真结束
    .如果真 (等于 (.内容, “-1”))
        赋值 (.内容, “59”)
    .如果真结束
    
.默认
    
.判断结束


.子程序 _时钟2_周期事件, 空白型, , 
赋值 (.内容, 现在时间 (取现行时间 ()))


.子程序 现在时间, 文本型, , 
.参数 时间, 日期时间型, , 

.局部变量 时1, 文本型, , , 
.局部变量 分1, 文本型, , , 
.局部变量 秒1, 文本型, , , 
.局部变量 年1, 文本型, , , 
.局部变量 月1, 文本型, , , 
.局部变量 日1, 文本型, , , 
.局部变量 星期1, 文本型, , , 

赋值 (年1, 到文本 (取年份 (时间)))
赋值 (月1, 到文本 (取月份 (时间)))
赋值 (日1, 到文本 (取日 (时间)))
赋值 (时1, 到文本 (取小时 (时间)))
赋值 (分1, 到文本 (取分钟 (时间)))
赋值 (秒1, 到文本 (取秒 (时间)))
赋值 (时1, 选择 (等于 (取文本长度 (时1), 2), 时1, 相加 (“0”, 时1)))
赋值 (分1, 选择 (等于 (取文本长度 (分1), 2), 分1, 相加 (“0”, 分1)))
赋值 (秒1, 选择 (等于 (取文本长度 (秒1), 2), 秒1, 相加 (“0”, 秒1)))
赋值 (星期1, 多项选择 (取星期几 (时间), “星期日”, “星期一”, “星期二”, “星期三”, “星期四”, “星期五”, “星期六”))
 ' 返回 (年1 ＋ “-” ＋ 月1 ＋ “-” ＋ 日1 ＋ “ ” ＋ 星期1 ＋ “ ” ＋ 时1 ＋ “:” ＋ 分1 ＋ “:” ＋ 秒1)
 ' 返回 (时1 ＋ “:” ＋ 分1 ＋ “:” ＋ 秒1 ＋ “ ” ＋ 年1 ＋ “-” ＋ 月1 ＋ “-” ＋ 日1 ＋ “ ” ＋ 星期1)
返回 (相加 (时1, “:”, 分1, “:”, 秒1, “ ”, 月1, “月”, 日1, “日”, “ ”, 星期1))

.子程序 _定时1时钟_周期事件, 空白型, , 
.局部变量 现在时间变量1, 日期时间型, , , 
.局部变量 设定时间变量1, 日期时间型, , , 

赋值 (现在时间变量1, 取现行时间 ())
赋值 (设定时间变量1, 到时间 (相加 (到文本 (取年份 (现在时间变量1)), “年”, 到文本 (取月份 (现在时间变量1)), “月”, 到文本 (取日 (现在时间变量1)), “日”, .内容, “时”, .内容, “分”, .内容, “秒”)))
 ' 状态条1.置文本 (0, “显示” ＋ 到文本 (取现行时间 () － 设定时间变量1))

.如果 (大于或等于 (现在时间变量1, 设定时间变量1))
    .如果 (.选中)
         ' 输出调试文本 (“_IP1按钮_被单击 ()”)
        _IP1按钮_被单击 ()
    .否则
         ' 输出调试文本 (“_IP2按钮_被单击 ()”)
        _IP2按钮_被单击 ()
    .如果结束
    
    0.置文本 (“[1]剩余时间:IP已切换”)
    赋值 (.时钟周期, 0)
    赋值 (., “开始”)
.否则
    0.置文本 (相加 (“[1]剩余时间:”, 到文本 (取时间间隔 (设定时间变量1, 现在时间变量1, #秒))))
.如果结束
 ' 状态条1.置文本 (0, “显示” ＋ 到文本 (取时间间隔 (现在时间变量1, 设定时间变量1, #小时)) ＋ “:” ＋ 到文本 (取时间间隔 (现在时间变量1, 设定时间变量1, #分钟)) ＋ “:” ＋ 到文本 (取时间间隔 (现在时间变量1, 设定时间变量1, #秒)))




.子程序 _定时2时钟_周期事件, 空白型, , 
.局部变量 现在时间变量2, 日期时间型, , , 
.局部变量 设定时间变量2, 日期时间型, , , 

赋值 (现在时间变量2, 取现行时间 ())
赋值 (设定时间变量2, 到时间 (相加 (到文本 (取年份 (现在时间变量2)), “年”, 到文本 (取月份 (现在时间变量2)), “月”, 到文本 (取日 (现在时间变量2)), “日”, .内容, “时”, .内容, “分”, .内容, “秒”)))
.如果 (大于或等于 (现在时间变量2, 设定时间变量2))
    .如果 (.选中)
         ' 输出调试文本 (“_IP1按钮_被单击 ()”)
        _IP1按钮_被单击 ()
    .否则
         ' 输出调试文本 (“_IP2按钮_被单击 ()”)
        _IP2按钮_被单击 ()
    .如果结束
    
    1.置文本 (“[2]剩余时间:IP已切换”)
    赋值 (.时钟周期, 0)
    赋值 (., “开始”)
.否则
    1.置文本 (相加 (“[2]剩余时间:”, 到文本 (取时间间隔 (设定时间变量2, 现在时间变量2, #秒))))
    
.如果结束


.子程序 _Go按钮_被单击, 空白型, , 
.局部变量 设定时间变量1, 日期时间型, , , 
.局部变量 现在时间变量1, 日期时间型, , , 

赋值 (现在时间变量1, 取现行时间 ())
赋值 (设定时间变量1, 到时间 (相加 (到文本 (取年份 (现在时间变量1)), “年”, 到文本 (取月份 (现在时间变量1)), “月”, 到文本 (取日 (现在时间变量1)), “日”, .内容, “时”, .内容, “分”, .内容, “秒”)))
.如果 (大于或等于 (现在时间变量1, 设定时间变量1))
    信息框 (“设定的时间过期了”, 0, )
    返回 ()
.否则
    赋值 (., “停止”)
    .如果 (等于 (.时钟周期, 0))
        赋值 (.时钟周期, 1000)
        赋值 (., “停止”)
    .否则
        赋值 (.时钟周期, 0)
        赋值 (., “开始”)
    .如果结束
    
.如果结束
显示IP子程序 ()
 ' 状态条1.置文本 (0, “显示” ＋ 定时1)

.子程序 _Go按钮1_被单击, 空白型, , 
.局部变量 设定时间变量2, 日期时间型, , , 
.局部变量 现在时间变量2, 日期时间型, , , 

赋值 (现在时间变量2, 取现行时间 ())
赋值 (设定时间变量2, 到时间 (相加 (到文本 (取年份 (现在时间变量2)), “年”, 到文本 (取月份 (现在时间变量2)), “月”, 到文本 (取日 (现在时间变量2)), “日”, .内容, “时”, .内容, “分”, .内容, “秒”)))
.如果 (大于或等于 (现在时间变量2, 设定时间变量2))
    信息框 (“设定的时间过期了”, 0, )
    返回 ()
    
.否则
    赋值 (., “停止”)
    .如果 (等于 (.时钟周期, 0))
        赋值 (.时钟周期, 1000)
        赋值 (., “停止”)
    .否则
        赋值 (.时钟周期, 0)
        赋值 (., “开始”)
    .如果结束
    
.如果结束
显示IP子程序 ()
 ' 状态条1.置文本 (1, “显示” ＋ 定时2)

.子程序 显示IP子程序, 空白型, , 
.局部变量 局部计次变量, 整数型, , , 
.局部变量 本机IP组, 文本型, , "0", 

赋值 (本机IP组, 未知支持库函数_17 ())
赋值 (IP判断, 本机IP组 [1])
赋值 (提示IP, “No-IP”)
赋值 (., 相加 (到文本 (剩余时间), “秒 IP:[”, 到文本 (IP判断), “]”))


.子程序 _定时3时钟_周期事件, 空白型, , 
.局部变量 现在时间变量3, 日期时间型, , , 
.局部变量 设定时间变量3, 日期时间型, , , 

赋值 (现在时间变量3, 取现行时间 ())
赋值 (设定时间变量3, 到时间 (相加 (到文本 (取年份 (现在时间变量3)), “年”, 到文本 (取月份 (现在时间变量3)), “月”, 到文本 (取日 (现在时间变量3)), “日”, .内容, “时”, .内容, “分”, .内容, “秒”)))
.如果 (大于或等于 (现在时间变量3, 设定时间变量3))
     ' 输出调试文本 (“_IP1按钮_被单击 ()”)
    赋值 (.选中, 真)
    _选择框1_被单击 ()
     ' 输出调试文本 (“_IP2按钮_被单击 ()”)
    1.置文本 (“[3]剩余时间:定时已切换”)
    赋值 (.时钟周期, 0)
    赋值 (., “开始”)
.否则
    1.置文本 (相加 (“[3]剩余时间:”, 到文本 (取时间间隔 (设定时间变量3, 现在时间变量3, #秒))))
.如果结束


.子程序 _Go按钮2_被单击, 空白型, , 
.局部变量 设定时间变量3, 日期时间型, , , 
.局部变量 现在时间变量3, 日期时间型, , , 

赋值 (现在时间变量3, 取现行时间 ())
赋值 (设定时间变量3, 到时间 (相加 (到文本 (取年份 (现在时间变量3)), “年”, 到文本 (取月份 (现在时间变量3)), “月”, 到文本 (取日 (现在时间变量3)), “日”, .内容, “时”, .内容, “分”, .内容, “秒”)))
.如果 (并且 (等于 (.禁止, 假), 等于 (., “开始”), 等于 (.选中, 真)))
    赋值 (.禁止, 真)
.否则
    赋值 (.禁止, 假)
.如果结束

.如果 (.选中)
    .如果 (大于或等于 (现在时间变量3, 设定时间变量3))
        信息框 (“设定的时间过期了”, 0, )
        返回 ()
        
    .否则
        赋值 (., “停止”)
        .如果 (等于 (.时钟周期, 0))
            赋值 (.时钟周期, 1000)
            赋值 (., “停止”)
        .否则
            赋值 (.时钟周期, 0)
            赋值 (., “开始”)
        .如果结束
        
    .如果结束
    显示IP子程序 ()
.否则
    信息框 (相加 (“要选择[OK]才能定时切换到[定时自动切换功能]”, #换行符, “比如:设定12:30:20而(切换时间[10]),时间到后自动切换到10分钟切换一次功能,”), 0, )
.如果结束


.子程序 _说明按钮_被单击, 空白型, , 
载入 (说明窗口, , 真)


 ' 不属于任何一个程序集、类模块的函数：
