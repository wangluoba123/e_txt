 ' 文件类型：Windows窗口程序

 ' 程序名称：易语言经典算法 - 背包问题(递归法)
 ' 程序描述：    随机出现十种物品，每个重量100千克以内。设定一个背包的载重上限，计算出一种装物品的方法使物品重量正好等于背包载重上限。
 ' 程序作者：大有吴涛易语言软件公司
 ' 邮政编码：116001
 ' 联系地址：辽宁省大连市中山区人民路55号亚太国际金融中心
 ' 联系电话：+86(0411)88995831
 ' 传真号码：+86(0411)88995834
 ' 电子信箱：service@dywt.com.cn
 ' 主页地址：http://www.dywt.com.cn
 ' 版权声明：祝您一帆风顺，心想事成！
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 400
    高度 = 281
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “易语言经典算法 - 背包问题(递归法)”
    帮助文件名 = “”





 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 4 系统核心支持库
 ' iext 27bb20fdd3e145e4bee3db39ddd6e64c 1 2 扩展界面支持库一
 ' iext3 {B6F7542F-B8FE-46a8-9605-98856A687097} 2 0 扩展界面支持库三





.窗口程序集 启动窗口程序集, , , 

.程序集变量 存储重量数组, 整数型, , "0", 存储物品重量
.程序集变量 背包总重量, 整数型, , , 背包最大载重量
.程序集变量 物品数量, 整数型, , , 共有多少种物品
.子程序 __启动窗口_创建完毕, 空白型, , 
.局部变量 随机数, 整数型, , , 产生随机重量
.局部变量 局部计次变量, 整数型, , , 计次循环中记录循环次数
.局部变量 项目索引, 整数型, , , 

 ' 使用算法：递归法
 ' 问题：背包问题
 ' 问题描述：
 ' 随机出现十种物品，每个重量100千克以内。设定一个背包的载重上限，计算出一种装物品的方法使物品重量正好等于背包载重上限
 ' 问题分析：
 ' 对每个物品考虑选择放入和不放入背包两种情况
 ' 首先，考查物品被放入的情况，这种可能性当且仅当包含它不会超出背包上限时才是可行的。继续考查下一个物品。
 ' 其次，还要考查物品不被放入背包的情况，这种可能性当且仅当不包含物品其它物品也能找到合理的组合。
 ' 考查完物品后，继续考查下一个物品
 ' 依次类推，最终找到一个合理组合或没有合理组合
 ' 备注：

置随机数种子 ()
 ' 得到随机的物品重量
.计次循环首 (10, 局部计次变量)
    赋值 (随机数, 取随机数 (1, 100))
    赋值 (项目索引, .插入表项 (到文本 (局部计次变量), , , , ))
     ' 把重量在超级列表框中显示出来
    项目索引.置标题 (1, 相加 (到文本 (随机数), “千克”))
     ' 把重量加入到数组中
    加入成员 (存储重量数组, 随机数)
.计次循环尾 ()
赋值 (物品数量, 10)

.子程序 _计算图形按钮_被单击, 空白型, , 
.局部变量 返回值, 整数型, , , 
.局部变量 局部计次变量, 整数型, , , 

 ' 获得输入的背包载重最大值
赋值 (背包总重量, 到数值 (.内容))
 ' 清空上一次得到的结果
.计次循环首 (取表项数 (), 局部计次变量)
    0.删除表项 ()
.计次循环尾 ()
 ' 返回值为1找到了一组结果
赋值 (返回值, 背包子程序 (背包总重量, 10))
.判断开始 (等于 (返回值, 1))
    赋值 (.标题, “找到结果”)
.默认
    赋值 (.标题, “没有解”)
.判断结束


.子程序 背包子程序, 整数型, , 
.参数 背包剩余重量, 整数型, , 背包还能装的重量
.参数 剩余物品个数, 整数型, , 还省多少种物品

.局部变量 返回值, 整数型, , , 返回1表示有一组解
.局部变量 表项位置, 整数型, , , 定位插入表项的位置
.局部变量 物品重量, 文本型, , , 要显示的物品的重量

.如果真 (等于 (背包剩余重量, 0))
    返回 (1)
.如果真结束
.如果真 (或者 (小于 (背包剩余重量, 0), 小于 (剩余物品个数, 1)))
    返回 (0)
.如果真结束
 ' 如果物品可以放入背包，背包剩余重量-物品重量，向前比较此次排列是否合理
赋值 (返回值, 背包子程序 (相减 (背包剩余重量, 存储重量数组 [剩余物品个数]), 相减 (剩余物品个数, 1)))
.如果真 (等于 (返回值, 1))
     ' 如果获得了一组合理组合在超级列表框中显示出来
    赋值 (表项位置, .插入表项 (相加 (“第”, 到文本 (剩余物品个数), “个物品”), , , , ))
    赋值 (物品重量, 相减 (剩余物品个数, 1).取标题 (1))
    表项位置.置标题 (1, 物品重量)
    返回 (1) ' 返回一表示有一组合理的组合
.如果真结束
 ' 物品不放在背包中，向前比较是否有合理的组合
返回 (背包子程序 (背包剩余重量, 相减 (剩余物品个数, 1)))

.子程序 _刷新图形按钮_被单击, 空白型, , 清空全部内容
.局部变量 局部计次变量, 整数型, , , 
.局部变量 随机数, 整数型, , , 

赋值 (.内容, “100”) ' 背包最大载重默认为100千克
置随机数种子 ()
清除数组 (存储重量数组) ' 把数组内容清空
.计次循环首 (取表项数 (), 局部计次变量)
    0.删除表项 () ' 清空超级列表框
.计次循环尾 ()
.计次循环首 (取表项数 (), 局部计次变量)
    0.删除表项 () ' 清空超级列表框
.计次循环尾 ()
.计次循环首 (10, 局部计次变量)
    赋值 (随机数, 取随机数 (1, 100)) ' 重新获得物品的重量
    .插入表项 (到文本 (局部计次变量), , , , )
    相减 (局部计次变量, 1).置标题 (1, 相加 (到文本 (随机数), “千克”))
    加入成员 (存储重量数组, 随机数) ' 把重量重新加入数组
.计次循环尾 ()



 ' 不属于任何一个程序集、类模块的函数：
