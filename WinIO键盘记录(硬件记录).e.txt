 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 窗口1
    左边 = 50
    顶边 = 50
    宽度 = 476
    高度 = 396
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “”
    帮助文件名 = “”





 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 4 系统核心支持库





.DLL命令 InstallWinIoDriver, 逻辑型, "WinIo.dll", "InstallWinIoDriver", , 安装WinIo驱动(忽略)
    .参数 DriverPath, 文本型, , 
    .参数 Mode, 短整数型, , 

.DLL命令 RemoveWinIoDriver, 逻辑型, "WinIo.dll", "RemoveWinIoDriver", , 卸载WinIo驱动(忽略)

.DLL命令 开启winio, 逻辑型, "WinIo.dll", "InitializeWinIo", , 初始化WioIO库。调用成功，返回非零值

.DLL命令 关闭winio, 逻辑型, "WinIo.dll", "ShutdownWinIo", , 在内存中关闭清除WinIO库

.DLL命令 读端口, 逻辑型, "WinIo.dll", "GetPortVal", , 从一个输入或输出端口读取一个字节/字/双字数据。调用成功，返回非零值
    .参数 PortAddr, 短整数型, , 输入输出端口地址
    .参数 PortVal, 整数型, 传址, 指向双字变量的指针，接收从端口得到的数据。
    .参数 bSize, 字节型, , 需要读的字节数，可以是1 (BYTE)、2 (WORD)、4 (DWORD)

.DLL命令 写端口, 逻辑型, "WinIo.dll", "SetPortVal", , 将一个字节/字/双字的数据写入输入或输出接口。调用成功，返回非零值
    .参数 PortAddr, 短整数型, , 输入输出端口地址
    .参数 PortVal, 整数型, , 要写入的数据
    .参数 bSize, 字节型, , 需要写入的字节数，可以是1 (BYTE)、2 (WORD)、4 (DWORD)

.DLL命令 开始内存映射, 整数型, "WinIo.dll", "MapPhysToLin", , 将物理内存的一部分映射到一个32位程序的线性地址空间。成功返回一个与物理地址相关的线性地址，错误返回NULL
    .参数 PhysAddr, 整数型, , 指向物理地址的指针
    .参数 PhysSize, 整数型, , 需要映射的字节数
    .参数 PhysMemHandle, 整数型, 传址, 变量指针，如果调用成功，负责接收物理内存句柄。(any)

.DLL命令 解除内存映射, 逻辑型, "WinIo.dll", "UnmapPhysicalMemory", , 解除使用MapPhysToLin映射的一段线性物理内存区域
    .参数 PhysMemHandle, 整数型, , 物理内存句柄(any)
    .参数 LinAddr, 整数型, , MapPhysToLin函数调用返回的线性地址

.DLL命令 读内存双字数据, 逻辑型, "WinIo.dll", "GetPhysLong", , 从指定的物理地址读取一个双字数据。调用成功，返回非零值。
    .参数 PhysAddr, 整数型, , 指向物理地址的指针
    .参数 PhysVal, 整数型, 传址, 指向一个双字变量的指针，接收从物理内存中传来的数据。

.DLL命令 写内存双字数据, 逻辑型, "WinIo.dll", "SetPhysLong", , 将一个双字型数据写入指定的物理地址。调用成功，返回非零值。
    .参数 PhysAddr, 整数型, , 指向物理地址的指针
    .参数 PhysVal, 整数型, , 指定待写入物理内存地址出的双字型数据。

.DLL命令 键码转换, 整数型, "", "MapVirtualKeyA", , 返回转换后的代码
    .参数 wCode, 整数型, , 代码值
    .参数 wMapType, 整数型, , 0--虚拟键码->扫描码；1--扫描码->虚拟键码；2-虚拟键码->ASCII值（未加Shift组合键）。

.程序集 程序集1, , , 

.子程序 _启动子程序, 整数型, , 本子程序在程序启动后最先执行
载入 (窗口1, , 假)
返回 (0) ' 可以根据您的需要返回任意数值

.窗口程序集 窗口程序集1, , , 

.子程序 _窗口1_创建完毕, 空白型, , 
.如果真 (等于 (开启winio (), 假))
    信息框 (“Winio开启失败”, 0, )
.如果真结束


.子程序 _窗口1_将被销毁, 空白型, , 
关闭winio ()


.子程序 _时钟1_周期事件, 空白型, , 
Winio键盘记录 ().加入文本 ()

.子程序 Winio键盘记录, 文本型, , 
.局部变量 临时变量, 整数型, , , 
.局部变量 键盘返回数值, 文本型, , , 

读端口 (96, 临时变量, 1)
赋值 (键盘返回数值, 到大写 (取十六进制文本 (位与 (临时变量, 255))))

.判断开始 (等于 (键盘返回数值, “1”))
    返回 (“ESC键”)
.判断 (等于 (键盘返回数值, “2”))
    返回 (“1”)
.判断 (等于 (键盘返回数值, “3”))
    返回 (“2”)
.判断 (等于 (键盘返回数值, “4”))
    返回 (“3”)
.判断 (等于 (键盘返回数值, “5”))
    返回 (“4”)
.判断 (等于 (键盘返回数值, “6”))
    返回 (“5”)
.判断 (等于 (键盘返回数值, “7”))
    返回 (“6”)
.判断 (等于 (键盘返回数值, “8”))
    返回 (“7”)
.判断 (等于 (键盘返回数值, “9”))
    返回 (“8”)
.判断 (等于 (键盘返回数值, “A”))
    返回 (“9”)
.判断 (等于 (键盘返回数值, “B”))
    返回 (“0”)
.判断 (等于 (键盘返回数值, “C”))
    返回 (“-”)
.判断 (等于 (键盘返回数值, “D”))
    返回 (“=”)
.判断 (等于 (键盘返回数值, “E”))
    返回 (“BackSpace”)
.判断 (等于 (键盘返回数值, “F”))
    返回 (“Tab”)
.判断 (等于 (键盘返回数值, “10”))
    返回 (“Q”)
.判断 (等于 (键盘返回数值, “11”))
    返回 (“W”)
.判断 (等于 (键盘返回数值, “12”))
    返回 (“E”)
.判断 (等于 (键盘返回数值, “13”))
    返回 (“R”)
.判断 (等于 (键盘返回数值, “14”))
    返回 (“T”)
.判断 (等于 (键盘返回数值, “15”))
    返回 (“Y”)
.判断 (等于 (键盘返回数值, “16”))
    返回 (“U”)
.判断 (等于 (键盘返回数值, “17”))
    返回 (“I”)
.判断 (等于 (键盘返回数值, “18”))
    返回 (“O”)
.判断 (等于 (键盘返回数值, “19”))
    返回 (“P”)
.判断 (等于 (键盘返回数值, “1A”))
    返回 (“[”)
.判断 (等于 (键盘返回数值, “1B”))
    返回 (“]”)
.判断 (等于 (键盘返回数值, “1C”))
    返回 (“Enter”)
.判断 (等于 (键盘返回数值, “1D”))
    返回 (“Ctrl”)
.判断 (等于 (键盘返回数值, “1E”))
    返回 (“A”)
.判断 (等于 (键盘返回数值, “1F”))
    返回 (“S”)
.判断 (等于 (键盘返回数值, “20”))
    返回 (“D”)
.判断 (等于 (键盘返回数值, “21”))
    返回 (“F”)
.判断 (等于 (键盘返回数值, “22”))
    返回 (“G”)
.判断 (等于 (键盘返回数值, “23”))
    返回 (“H”)
.判断 (等于 (键盘返回数值, “24”))
    返回 (“J”)
.判断 (等于 (键盘返回数值, “25”))
    返回 (“K”)
.判断 (等于 (键盘返回数值, “26”))
    返回 (“L”)
.判断 (等于 (键盘返回数值, “27”))
    返回 (“;”)
.判断 (等于 (键盘返回数值, “28”))
    返回 (“,”)
.判断 (等于 (键盘返回数值, “29”))
    返回 (“、”)
.判断 (等于 (键盘返回数值, “2A”))
    返回 (“Shift(左)”)
.判断 (等于 (键盘返回数值, “2B”))
    返回 (“\”)
.判断 (等于 (键盘返回数值, “2C”))
    返回 (“Z”)
.判断 (等于 (键盘返回数值, “2D”))
    返回 (“X”)
.判断 (等于 (键盘返回数值, “2E”))
    返回 (“C”)
.判断 (等于 (键盘返回数值, “2F”))
    返回 (“V”)
.判断 (等于 (键盘返回数值, “30”))
    返回 (“B”)
.判断 (等于 (键盘返回数值, “31”))
    返回 (“N”)
.判断 (等于 (键盘返回数值, “32”))
    返回 (“M”)
.判断 (等于 (键盘返回数值, “33”))
    返回 (“,”)
.判断 (等于 (键盘返回数值, “34”))
    返回 (“.”)
.判断 (等于 (键盘返回数值, “35”))
    返回 (“/”)
.判断 (等于 (键盘返回数值, “36”))
    返回 (“Shift(右)”)
.判断 (等于 (键盘返回数值, “37”))
    返回 (“PrintScreen”)
.判断 (等于 (键盘返回数值, “38”))
    返回 (“Alt”)
.判断 (等于 (键盘返回数值, “39”))
    返回 (“Space”)
.判断 (等于 (键盘返回数值, “3A”))
    返回 (“CapLock”)
.判断 (等于 (键盘返回数值, “3B”))
    返回 (“F1”)
.判断 (等于 (键盘返回数值, “3C”))
    返回 (“F2”)
.判断 (等于 (键盘返回数值, “3D”))
    返回 (“F3”)
.判断 (等于 (键盘返回数值, “3E”))
    返回 (“F4”)
.判断 (等于 (键盘返回数值, “3F”))
    返回 (“F5”)
.判断 (等于 (键盘返回数值, “40”))
    返回 (“F6”)
.判断 (等于 (键盘返回数值, “41”))
    返回 (“F7”)
.判断 (等于 (键盘返回数值, “42”))
    返回 (“F8”)
.判断 (等于 (键盘返回数值, “43”))
    返回 (“F9”)
.判断 (等于 (键盘返回数值, “44”))
    返回 (“F0”)
.判断 (等于 (键盘返回数值, “45”))
    返回 (“NumLock”)
.判断 (等于 (键盘返回数值, “46”))
    返回 (“ScrollLock”)
.判断 (等于 (键盘返回数值, “47”))
    返回 (“K”)
.判断 (等于 (键盘返回数值, “48”))
    返回 (“↑”)
.判断 (等于 (键盘返回数值, “49”))
    返回 (“↑”)
.判断 (等于 (键盘返回数值, “4A”))
    返回 (“PgUp”)
.判断 (等于 (键盘返回数值, “4B”))
    返回 (“←”)
.判断 (等于 (键盘返回数值, “4C”))
    返回 (“←”)
.判断 (等于 (键盘返回数值, “4D”))
    返回 (“→”)
.判断 (等于 (键盘返回数值, “4E”))
    返回 (“→”)
.判断 (等于 (键盘返回数值, “4F”))
    返回 (“+”)
.判断 (等于 (键盘返回数值, “50”))
    返回 (“↓”)
.判断 (等于 (键盘返回数值, “51”))
    返回 (“↓”)
.判断 (等于 (键盘返回数值, “52”))
    返回 (“PgDn”)
.判断 (等于 (键盘返回数值, “53”))
    返回 (“Ins”)
.判断 (等于 (键盘返回数值, “54”))
    返回 (“Del”)
.默认
    输出调试文本 (键盘返回数值)
    返回 (“”)
.判断结束



 ' 不属于任何一个程序集、类模块的函数：
