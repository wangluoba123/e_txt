 ' 文件类型：Windows窗口程序

 ' 程序名称：mysql管理器
 ' 程序描述：
 ' 程序作者：mysql
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.6
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 489
    高度 = 339
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 真
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 已保存到：D:\易语言学习\Data\Mysql.e\_启动窗口_图标.ico
    背景音乐 =  ' 空
    标题 = “”
    帮助文件名 = “”

窗口 主窗口
    左边 = 50
    顶边 = 50
    宽度 = 648
    高度 = 445
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 1
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 真
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 3
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 真
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “”
    帮助文件名 = “help”

窗口 用户窗口
    左边 = 50
    顶边 = 50
    宽度 = 466
    高度 = 433
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “新增用户”
    帮助文件名 = “”

窗口 关于窗口
    左边 = 50
    顶边 = 50
    宽度 = 452
    高度 = 336
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 4
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “关于本软件”
    帮助文件名 = “”

窗口 表编辑窗口
    左边 = 50
    顶边 = 50
    宽度 = 680
    高度 = 453
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “编辑表”
    帮助文件名 = “”

窗口 导出脚本窗口
    左边 = 50
    顶边 = 50
    宽度 = 285
    高度 = 274
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “导出为创建库脚本”
    帮助文件名 = “”

窗口 命令窗口
    左边 = 50
    顶边 = 50
    宽度 = 380
    高度 = 250
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “命令大全”
    帮助文件名 = “”



.常量 软件名称, "“MYSQL企业管理器”", , 
.常量 软件版本, "“0.6 测试版”", , 
.常量 作者, "“MYSQL”", , 
.常量 , , , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 2 系统核心支持库
 ' iext2 AF6AD80AA4244A59AFB3D83ECF5173CC 1 1 扩展界面支持库二
 ' iext 27bb20fdd3e145e4bee3db39ddd6e64c 1 2 扩展界面支持库一
 ' iext3 {B6F7542F-B8FE-46a8-9605-98856A687097} 1 7 扩展界面支持库三
 ' eGrid 0B4337DA651B4b619ACF61334A7E8B47 1 1 高级表格支持库
 ' ExtMenu 9909FBB013704cfa8FE7E739DB7172DE 1 4 超级菜单支持库
 ' mysql 7F54B9CE8887428dBA9CEEB94CEF4C72 2 1 MySql支持库
 ' shell 52F260023059454187AF826A3C07AF2A 1 0 操作系统界面功能支持库




数据类型 编辑行, , 被编辑的行
    .成员 编辑前行, 文本型, , , 
    .成员 编辑后行, 文本型, , , 

.全局变量 数据库句柄, 整数型, , , 
.全局变量 记录集, 整数型, , , 
.全局变量 表格显示, 表格显示数据, , , 
.全局变量 被编辑用户, 文本型, , , 
.全局变量 被编辑表, 文本型, , , 

.窗口程序集 窗口程序集1, , , 

.程序集变量 服务器列表, 文本型, , "0", 
.子程序 __启动窗口_创建完毕, 空白型, , 
 ' 载入 (窗口1, , 假)
读取服务器列表 ()
读配置项 (相加 (取运行目录 (), “\config.ini”), “列表”, “默认服务器”, ).选择 ()
_组合框1_列表项被选择 () ' 读取服务器信息
连续赋值 (“”, 被编辑用户, 被编辑表)
 ' _超级按钮5_被单击 ()


.子程序 读取服务器列表, 空白型, , 
.局部变量 个数, 整数型, , , 

赋值 (服务器列表, 分割文本 (读配置项 (相加 (取运行目录 (), “\config.ini”), “列表”, “列表”, ), “|”, ))
清空 ()
.计次循环首 (取数组成员数 (服务器列表), 个数)
    服务器列表.加入项目 ( [个数], )
.计次循环尾 ()

.子程序 _超级按钮5_被单击, 空白型, , 
写配置项 (相加 (取运行目录 (), “\config.ini”), “列表”, “默认服务器”, .内容) ' 记住最后登陆的服务器,便于下次读取
赋值 (数据库句柄, 未知支持库函数_1 (., .内容, .内容, “”, 到数值 (.内容)))
.如果 (小于或等于 (数据库句柄, 0))
    信息框 (相加 (“连接服务器错误!”, #换行符, “请确认该服务器运行中并且你有连接该服务器的权限!”), 16, “连接服务器失败!”)
.否则
    载入 (主窗口, , 假)
    _启动窗口.销毁 ()
.如果结束


.子程序 _超级按钮3_被单击, 空白型, , 
.局部变量 成员序号, 整数型, , , 
.局部变量 是否存在, 逻辑型, , , 

.如果真 (等于 (删全部空 (.内容), “”))
    信息框 (“请输入服务器名称.”, 0, )
    返回 ()
.如果真结束
.如果真 (等于 (., “”))
    信息框 (“请输入服务器IP!”, 0, )
    返回 ()
.如果真结束
.如果真 (等于 (.内容, “”))
    赋值 (.内容, “3306”)
.如果真结束
.如果真 (等于 (删全部空 (.内容), “”))
    信息框 (“请输入用户名”, 0, )
    返回 ()
.如果真结束
赋值 (服务器列表, 分割文本 (读配置项 (相加 (取运行目录 (), “\config.ini”), “列表”, “列表”, ), “|”, ))

.计次循环首 (取数组成员数 (服务器列表), 成员序号)
    .如果真 (等于 (服务器列表 [成员序号], 删全部空 (.内容)))
        赋值 (是否存在, 真)
        跳出循环 ()
    .如果真结束
    
.计次循环尾 ()
 ' 如果该服务器名称已经存在就没必要再次加入到服务器列表中了
.如果真 (取反 (是否存在))
    写配置项 (相加 (取运行目录 (), “\config.ini”), “列表”, “列表”, 相加 (读配置项 (相加 (取运行目录 (), “\config.ini”), “列表”, “列表”, ), .内容, “|”))
.如果真结束

写配置项 (相加 (取运行目录 (), “\config.ini”), .内容, “IP”, .)
写配置项 (相加 (取运行目录 (), “\config.ini”), .内容, “端口”, .内容)
写配置项 (相加 (取运行目录 (), “\config.ini”), .内容, “用户名”, .内容)
写配置项 (相加 (取运行目录 (), “\config.ini”), .内容, “密码”, .内容)


.子程序 _超级按钮1_被单击, 空白型, , 
赋值 (.内容, “新服务器”)
赋值 (., “127.0.0.1”)
赋值 (.内容, “3306”)
赋值 (.内容, “root”)


.子程序 _超级按钮2_被单击, 空白型, , 
.如果真 (等于 (信息框 (“你要删除该服务器?”, 36, ), 5))
    写配置项 (相加 (取运行目录 (), “\config.ini”), .内容, , )
    
.如果真结束


.子程序 _组合框1_列表项被选择, 空白型, , 
赋值 (.内容, 读配置项 (相加 (取运行目录 (), “\config.ini”), .取项目文本 (.现行选中项), “密码”, ))
赋值 (., 读配置项 (相加 (取运行目录 (), “\config.ini”), .取项目文本 (.现行选中项), “IP”, “127.0.0.1”))
赋值 (.内容, 读配置项 (相加 (取运行目录 (), “\config.ini”), .取项目文本 (.现行选中项), “端口”, “3306”))
赋值 (.内容, 读配置项 (相加 (取运行目录 (), “\config.ini”), .取项目文本 (.现行选中项), “用户名”, “root”))


.子程序 _超级按钮4_被单击, 空白型, , 
结束 ()


.窗口程序集 窗口程序集2, , , 

.子程序 _主窗口_创建完毕, 空白型, , 
 ' 通过读取预设的常量来设定窗口的标题,这里的常量是设定的软件名+服务器地址+登录用户名.
 ' PS:用常量标示软件名有一个好处,就是软件到处可以引用,修改软件名的的时候只需要改一个地方.
赋值 (主窗口., 相加 (#软件名称, “--”, #软件版本))
 ' 取用户组 ()
库名列表 ()
取存储过程列表 ()
取自定义函数列表 ()
取数据库版本 ()
获取当前用户 ()
显示服务器信息 ()
3.置文本 (相加 (“欢迎使用”, #软件名称, “.”))

.子程序 _主窗口_尺寸被改变, 空白型, , 
 ' 每次启动软件后系统会自动调整窗口大小以适合桌面,此时进行分隔条位置的移动,并触发其他可视控件的位置的移动.
调整分隔条位置 ()

.子程序 调整分隔条位置, 空白型, , 
.局部变量 位置, 空白型, , , 

 ' 读取配置文件中的分隔条的位置,如果没有调整过分隔条的位置,则返回默认值,默认值为125
赋值 (位置, 到数值 (读配置项 (相加 (取运行目录 (), “\config.ini”), “界面”, “分隔条位置”, “125”)))
_分隔条1_被拖动 (位置, 位置)

.子程序 _分隔条1_被拖动, 空白型, , 
.参数 原位置, 整数型, , 
.参数 目的位置, 整数型, , 

 ' 调整界面中的几个可视控件的位置
2.移动 (相加 (.可视, 2), 相减 (目的位置, .), 相减 (取用户区高度 (), ., .可视, 4))
相加 (.宽度, .左边).移动 (相加 (.可视, 2), , 相减 (取用户区高度 (), ., .可视, 4))
相加 (.宽度, .左边, .).移动 (相加 (.可视, 2), 相减 (取用户区宽度 (), .宽度, .左边, ., 4), .高度)
0.移动 (2, 相减 (., 2), .)
2.移动 (2, 相减 (., 4), 相减 (相除 (., 2), 2))
2.移动 (2, 相减 (., 4), 相减 (相除 (., 2), 2))
2.移动 (相加 (.加粗, .删除线, 2), ., 相减 (相除 (., 2), 2))
2.移动 (20, 相减 (., 4), 相减 (., 22))
2.移动 (相加 (.加粗, .删除线, 2), .倾斜, 相减 (., 6, .删除线))
.移动 (., ., ., .)
.移动 (., ., ., .)
.移动 (., ., ., .)
2.移动 (2, 相减 (., 4), 相乘 (相除 (., 3), 1))
2.移动 (相加 (., 3), ., 相减 (., ., 5))
 ' 把分隔条现在位置写入配置文件，在下次启动时读取。
写配置项 (相加 (取运行目录 (), “\config.ini”), “界面”, “分隔条位置”, 到文本 (目的位置))


.子程序 库名列表, 空白型, , 获取并显示服务器库名列表
.局部变量 库名, 文本型, , , 

2.加入项目 (“用户”, 2, , )
2.收缩 ()
.如果 (未知支持库函数_28 (数据库句柄))
    赋值 (记录集, 未知支持库函数_4 (数据库句柄))
    .计次循环首 (未知支持库函数_7 (记录集), )
        未知支持库函数_6 (记录集, 0, 库名)
        1.加入项目 (库名, 1, 1, )
        未知支持库函数_10 (记录集)
    .计次循环尾 ()
    未知支持库函数_5 (记录集)
.否则
    显示错误信息 ()
.如果结束


.子程序 取存储过程列表, 空白型, , 
.局部变量 名称, 文本型, , , 
.局部变量 循环次数, 空白型, , , 
.局部变量 父项目, 空白型, , , 

.如果真 (未知支持库函数_3 (数据库句柄, “SHOW PROCEDURE STATUS”))
    赋值 (记录集, 未知支持库函数_4 (数据库句柄))
    赋值 (父项目, 相减 (取项目数 (), 2)) ' 得到当前存储过程项的索引值
    .计次循环首 (未知支持库函数_7 (记录集), 循环次数)
        .如果真 (未知支持库函数_6 (记录集, 1, 名称))
            父项目.加入项目 (名称, , , )
        .如果真结束
        未知支持库函数_10 (记录集)
    .计次循环尾 ()
    未知支持库函数_5 (记录集)
    父项目.收缩 ()
.如果真结束


.子程序 取自定义函数列表, 空白型, , 
.局部变量 名称, 文本型, , , 
.局部变量 循环次数, 空白型, , , 
.局部变量 父项目, 空白型, , , 

.如果真 (未知支持库函数_3 (数据库句柄, “SHOW FUNCTION STATUS”))
    赋值 (记录集, 未知支持库函数_4 (数据库句柄))
    赋值 (父项目, 相减 (取项目数 (), 1)) ' 得到当前自定义函数项的索引值
    .计次循环首 (未知支持库函数_7 (记录集), 循环次数)
        .如果真 (未知支持库函数_6 (记录集, 1, 名称))
            父项目.加入项目 (名称, , , )
        .如果真结束
        未知支持库函数_10 (记录集)
    .计次循环尾 ()
    未知支持库函数_5 (记录集)
    父项目.收缩 ()
.如果真结束


.子程序 取数据库版本, 空白型, , 取服务器和客户端版本，请在连接数据库成功后执行
.局部变量 内容, 文本型, , , 

.如果真 (未知支持库函数_23 (数据库句柄, 内容))
    0.置文本 (相加 (“服务器版本：”, 内容))
.如果真结束
.如果真 (取反 (未知支持库函数_24 (内容)))
    1.置文本 (相加 (“客户端版本：”, 内容))
.如果真结束


.子程序 _主窗口_将被销毁, 空白型, , 
未知支持库函数_2 (数据库句柄)

.子程序 获取当前用户, 空白型, , 
.局部变量 内容, 文本型, , , 

未知支持库函数_3 (数据库句柄, “select user()”)
赋值 (记录集, 未知支持库函数_4 (数据库句柄))
未知支持库函数_12 (记录集)
未知支持库函数_6 (记录集, 0, 内容)
0.置项目文本 (内容)
未知支持库函数_5 (记录集)

.子程序 _表列表框_左键单击表项, 空白型, , 
.局部变量 创建表文本, 文本型, , , 

.如果真 (不等于 (., -1))
    表格显示.执行查询 (相加 (“show index from `”, .取项目文本 (.最大化按钮), “`.`”, .取标题 (., ), “`”), )
    .如果真 (等于 (.取图片 (., ), 0))
        表格显示.执行查询 (相加 (“show columns from `”, .取项目文本 (.最大化按钮), “`.`”, .取标题 (., ), “`”), )
    .如果真结束
    
    .如果真 (未知支持库函数_3 (数据库句柄, 相加 (“show create table `”, .取项目文本 (.最大化按钮), “`.`”, .取标题 (., ), “`”)))
        赋值 (记录集, 未知支持库函数_4 (数据库句柄))
        .如果真 (未知支持库函数_6 (记录集, 1, 创建表文本))
            赋值 (., 相加 (#换行符, 创建表文本))
        .如果真结束
        未知支持库函数_5 (记录集)
    .如果真结束
    
.如果真结束
赋值 (., 1)
赋值 (., 0)
2.置文本 (“共有记录0条”)

.子程序 _SQL文本编辑框_放开某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (并且 (不等于 (删全部空 (.), “”), 等于 (键代码, #回车键), 不等于 (位与 (功能键状态, #Ctrl键状态), 0)))
    表格显示.置句柄及记录集 (数据库句柄, 记录集)
    表格显示.执行查询 (删首尾空 (.), )
.如果真结束


.子程序 _执行SQL_被选择, 空白型, , 
.如果真 (不等于 (删全部空 (.), “”))
    表格显示.置句柄及记录集 (数据库句柄, 记录集)
    表格显示.执行查询 (删首尾空 (.), )
    2.置文本 (相加 (“共有记录”, 到文本 (相减 (., 1)), “条”))
.如果真结束


.子程序 _SQL窗口_被选择, 空白型, , 
赋值 (., 1)

.子程序 _新建库_被选择, 空白型, , 
.局部变量 库名, 文本型, , , 

.如果真 (输入框 (“请输入新建数据库名称！”, , “newdb”, 库名, ))
    .如果 (未知支持库函数_25 (数据库句柄, 库名))
        库名.未知支持库函数_2 (0, , 0, )
        信息框 (相加 (“创建新数据库”, 库名, “成功！”), 64, )
    .否则
        显示错误信息 ()
    .如果结束
    
.如果真结束


.子程序 _新增用户_被选择, 空白型, , 
载入 (用户窗口, , 真)

.子程序 _服务器信息_项目被选择, 空白型, , 
.参数 选择方式, 整数型, , 

.局部变量 表名, 文本型, , , 

全部删除 ()
未知支持库函数_57 ()
全部删除 ()
未知支持库函数_57 ()
.如果真 (等于 (.取缩进层次 (.最大化按钮), 3))
    .判断开始 (等于 (.取父项目 (.最大化按钮).取项目文本 (), “数据库”))
        未知支持库函数_48 (数据库句柄, .取父项目 (.最大化按钮).取项目文本 ())
        未知支持库函数_3 (数据库句柄, 相加 (“SHOW TABLE STATUS FROM ”, .取项目文本 (.最大化按钮), “ where comment<>'view'”))
        赋值 (记录集, 未知支持库函数_4 (数据库句柄))
        未知支持库函数_12 (记录集)
        全部删除 ()
        .计次循环首 (未知支持库函数_7 (记录集), )
            未知支持库函数_6 (记录集, 0, 表名)
            .插入表项 (表名, 0, , , )
            未知支持库函数_10 (记录集)
        .计次循环尾 ()
        未知支持库函数_5 (记录集)
        未知支持库函数_3 (数据库句柄, 相加 (“SHOW TABLE STATUS FROM ”, .取项目文本 (.最大化按钮), “ where comment='view'”))
        赋值 (记录集, 未知支持库函数_4 (数据库句柄))
        未知支持库函数_12 (记录集)
        .计次循环首 (未知支持库函数_7 (记录集), )
            未知支持库函数_6 (记录集, 0, 表名)
            .插入表项 (表名, 1, , , )
            未知支持库函数_10 (记录集)
        .计次循环尾 ()
        未知支持库函数_5 (记录集)
        表格显示.执行查询 (相加 (“SHOW TABLE STATUS FROM `”, .取项目文本 (.最大化按钮)), )
        赋值 (., 相加 (“CREATE DATABASE `”, .取项目文本 (.最大化按钮), “`”))
        .如果真 (不等于 (., 0))
            赋值 (., 0)
            赋值 (., 0)
        .如果真结束
        
    .判断 (等于 (.取项目文本 (.最大化按钮), “用户”))
        取用户组 ()
        赋值 (., 3)
    .默认
        
    .判断结束
    
    
.如果真结束


.子程序 取用户组, 空白型, , 
.局部变量 用户名, 文本型, , , 
.局部变量 主机, 文本型, , , 

未知支持库函数_37 (数据库句柄)
赋值 (记录集, 未知支持库函数_4 (数据库句柄))
全部删除 ()
.计次循环首 (未知支持库函数_7 (记录集), )
    未知支持库函数_6 (记录集, 0, 主机)
    未知支持库函数_6 (记录集, 1, 用户名)
    .插入表项 (相加 (用户名, “@”, 主机), 2, , , )
    未知支持库函数_10 (记录集)
.计次循环尾 ()
未知支持库函数_5 (记录集)


.子程序 _运行信息_被选择, 空白型, , 
显示服务器信息 ()

.子程序 _系统变量_被选择, 空白型, , 
显示系统变量 ()

.子程序 _新建表_被选择, 空白型, , 

载入 (表编辑窗口, 主窗口, 假)
赋值 (表编辑窗口., “新建表”)

.子程序 _表列表框_右键单击表项, 空白型, , 
.如果真 (不等于 (., -1))
    弹出菜单 ()
.如果真结束


.子程序 _关于_被选择, 空白型, , 
载入 (关于窗口, , 真)


.子程序 _服务器信息_鼠标右键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (不等于 (.最大化按钮, -1))
    .如果真 (等于 (.取缩进层次 (.最大化按钮), 3))
        .判断开始 (等于 (.取父项目 (.最大化按钮).取项目文本 (), “数据库”))
            弹出菜单 ()
        .判断 (等于 (.取父项目 (.最大化按钮).取项目文本 (), “存储过程”))
            
        .默认
            
        .判断结束
        
    .如果真结束
    
.如果真结束


.子程序 _全部显示_被选择, 空白型, , 
赋值 (., 1)
赋值 (., 相加 (“select * from `”, .取项目文本 (.最大化按钮), “`.`”, .取标题 (., ), “`”))
_执行SQL_被选择 ()


.子程序 _显示部分_被选择, 空白型, , 
.局部变量 显示数, 文本型, , , 

.如果真 (输入框 (“请输入你要显示的数据行!”, , “100”, 显示数, #输入整数))
    赋值 (., 1)
    赋值 (., 相加 (“select * from `”, .取项目文本 (.最大化按钮), “`.`”, .取标题 (., ), “` limit ”, 显示数))
    _执行SQL_被选择 ()
.如果真结束



.子程序 _查询表_被选择, 空白型, , 
赋值 (., 1)
赋值 (., 相加 (“select * from `”, .取项目文本 (.最大化按钮), “`.`”, .取标题 (., ), “`”))


.子程序 _复制表_被选择, 空白型, , 
.局部变量 新表名, 文本型, , , 

.如果真 (输入框 (“请输入你要复制到的目标表的名称!”, , 相加 (.取标题 (., ), “1”), 新表名, #输入文本))
    .如果 (未知支持库函数_3 (数据库句柄, 相加 (“create table `”, .取项目文本 (.最大化按钮), “`.`”, 新表名, “` select * from `”, .取项目文本 (.最大化按钮), “`.`”, .取标题 (., ), “`”)))
        .插入表项 (新表名, 0, 0, , )
    .否则
        显示错误信息 ()
    .如果结束
    
.如果真结束


.子程序 _删除表_被选择, 空白型, , 
.如果真 (等于 (信息框 (“你确定要删除该表?这将不可恢复!”, 36, ), 5))
    .如果 (未知支持库函数_3 (数据库句柄, 相加 (“drop table `”, .取项目文本 (.最大化按钮), “`.`”, .取标题 (., ), “`”)))
        .删除表项 (.)
    .否则
        显示错误信息 ()
    .如果结束
    
.如果真结束


.子程序 _表列表框_被双击, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (不等于 (., -1))
    _全部显示_被选择 ()
.如果真结束


.子程序 _新建视图_被选择, 空白型, , 
赋值 (., 1)
赋值 (., 相加 (“CREATE VIEW <视图名>”, #换行符, “         AS <查询语句>”))

.子程序 _删除库_被选择, 空白型, , 
.如果真 (等于 (信息框 (“你确定要删除该库?这将不可恢复!”, 36, ), 5))
    .如果 (未知支持库函数_26 (数据库句柄, 相加 (“`”, .取项目文本 (.最大化按钮), “`”)))
        .删除项目 (.最大化按钮)
    .否则
        显示错误信息 ()
    .如果结束
    
.如果真结束


.子程序 _新建表右键_被选择, 空白型, , 
_新建表_被选择 ()


.子程序 _编辑用户_被选择, 空白型, , 
赋值 (被编辑用户, .取标题 (., ))
载入 (用户窗口, 主窗口, 假)
赋值 (用户窗口., “编辑用户”)

.子程序 _导出数据_被选择, 空白型, , 
.局部变量 导出名, 文本型, , , 

赋值 (.文件名, .取标题 (., ))
.如果真 (打开 ())
    赋值 (导出名, 子文本替换 (.文件名, “\”, “/”, 1, , 真))
    .如果 (未知支持库函数_3 (数据库句柄, 相加 (“select * from `”, .取项目文本 (.最大化按钮), “`.`”, .取标题 (., ), “` into outfile '”, 导出名, “'”)))
        信息框 (“导出表数据成功！”, 0, )
    .否则
        信息框 (“导出表数据失败！”, 0, )
    .如果结束
    
    
.如果真结束


.子程序 _编辑表_被选择, 空白型, , 
.局部变量 创建文本, 文本型, , , 

.如果 (等于 (.取图片 (., ), 0)) ' 分辨是视图还是表,0为表
    赋值 (被编辑表, 相加 (“`”, .取项目文本 (.最大化按钮), “`.`”, .取标题 (., ), “`”))
    载入 (表编辑窗口, 主窗口, 假)
    赋值 (表编辑窗口., 相加 (“编辑表-”, 被编辑表))
.否则
    未知支持库函数_3 (数据库句柄, 相加 (“show create view `”, .取项目文本 (.最大化按钮), “`.`”, .取标题 (., ), “`”))
    赋值 (记录集, 未知支持库函数_4 (数据库句柄))
    未知支持库函数_6 (记录集, 1, 创建文本)
    赋值 (., 创建文本)
    未知支持库函数_57 ()
    赋值 (., 1)
.如果结束


.子程序 _新增用户右键_被选择, 空白型, , 
_新增用户_被选择 ()


.子程序 _导出为脚本库_被选择, 空白型, , 
载入 (导出脚本窗口, , 假)
赋值 (导出脚本窗口., 相加 (导出脚本窗口., “-”, .取项目文本 (.最大化按钮)))


.子程序 _用户列表框_左键单击表项, 空白型, , 
.如果 (不等于 (., -1))
    表格显示.执行查询 (相加 (“select * from `mysql`.`user` where user='”, 取文本左边 (.取标题 (., ), 相减 (寻找文本 (.取标题 (., ), “@”, , 假), 1)), “' and host='”, 取文本右边 (.取标题 (., ), 相减 (取文本长度 (.取标题 (., )), 倒找文本 (.取标题 (., ), “@”, , 假))), “'”), )
.否则
    未知支持库函数_57 ()
.如果结束


.子程序 _用户列表框_右键单击表项, 空白型, , 
.如果真 (不等于 (., -1))
     ' 弹出菜单 ()
 ' .如果真结束


.子程序 _删除用户_被选择, 空白型, , 
.如果真 (等于 (信息框 (“你确定要删除该用户？这将不可恢复！”, 36, ), 5))
    .如果 (未知支持库函数_35 (数据库句柄, 取文本左边 (.取标题 (., ), 相减 (寻找文本 (.取标题 (., ), “@”, , 假), 1)), 取文本右边 (.取标题 (., ), 相减 (取文本长度 (.取标题 (., )), 寻找文本 (.取标题 (., ), “@”, , 假)))))
        .删除表项 (.)
        未知支持库函数_57 ()
    .否则
        显示错误信息 ()
    .如果结束
    
.如果真结束


.子程序 _导出为SQL表_被选择, 空白型, , 
.局部变量 脚本, 文本型, , , 
.局部变量 文件号, 空白型, , , 

.如果真 (打开 ())
    未知支持库函数_3 (数据库句柄, 相加 (“show create table `”, .取项目文本 (.最大化按钮), “`.`”, .取标题 (., ), “`”))
    赋值 (记录集, 未知支持库函数_4 (数据库句柄))
    未知支持库函数_6 (记录集, 1, 脚本)
    赋值 (脚本, 文本替换 (脚本, 1, 12, “CREATE TABLE IF NOT EXISTS”))
    赋值 (文件号, 打开文件 (.文件名, #重写, ))
    .如果 (写出文本 (文件号, 相加 (“USE `”, .取项目文本 (.最大化按钮), “`;”, #换行符, 脚本, “;”)))
        信息框 (“导出创建表脚本成功！”, 0, )
    .否则
        信息框 (“导出创建表脚本失败！”, 0, )
    .如果结束
    关闭文件 (文件号)
.如果真结束


.子程序 _导入数据_被选择, 空白型, , 
.如果真 (打开 ())
    .如果 (未知支持库函数_3 (数据库句柄, 相加 (“load data local infile '”, .文件名, “' into table `”, .取项目文本 (.最大化按钮), “`.`”, .取标题 (., ), “`”)))
        信息框 (“导入数据成功！”, 0, )
    .否则
        显示错误信息 ()
    .如果结束
    
.如果真结束


.子程序 _重命名用户_被选择, 空白型, , 
.局部变量 新用户名, 文本型, , , 

.如果真 (输入框 (“请输入新的用户名！”, , , 新用户名, ))
    .如果 (未知支持库函数_3 (数据库句柄, 相加 (“RENAME USER ”, 取文本左边 (.取标题 (., ), 相减 (寻找文本 (.取标题 (., ), “@”, , 假), 1)), “ TO ”, 新用户名)))
        信息框 (“修改用户名成功！”, 0, )
    .否则
        显示错误信息 ()
    .如果结束
    
.如果真结束


.子程序 _修改密码_被选择, 空白型, , 
.局部变量 新密码, 文本型, , , 
.局部变量 用户主机, 文本型, , "0", 

.如果真 (输入框 (“请输入新的密码”, , , 新密码, ))
    赋值 (用户主机, 分割文本 (.取标题 (., ), “@”, ))
    .如果 (未知支持库函数_3 (数据库句柄, 相加 (“SET PASSWORD FOR '”, 用户主机 [1], “'@'”, 用户主机 [2], “' = PASSWORD('”, 新密码, “')”)))
        信息框 (“修改密码成功！”, 0, )
    .否则
        显示错误信息 ()
    .如果结束
    
.如果真结束


.子程序 _设置_被选择, 空白型, , 


.子程序 _新建存储过程_被选择, 空白型, , 
未知支持库函数_57 ()
赋值 (., 相加 (“CREATE PROCEDURE sp_name ([parameter[,...]])”, #换行符, “       [characteristic ...] routine_body”))
赋值 (., 1)


.子程序 _新建自定义函数_被选择, 空白型, , 
未知支持库函数_57 ()
赋值 (., 相加 (“CREATE FUNCTION sp_name ([parameter[,...]])”, #换行符, “      RETURNS type”, #换行符, “      [characteristic ...] routine_body”))
赋值 (., 1)


.子程序 _真帮助_被选择, 空白型, , 
未知支持库函数_6 (#, 相加 (取运行目录 (), “\help.chm”), , )

.子程序 _SQL文本编辑框_内容被改变, 空白型, , 
.局部变量 名称, 文本型, , , 

.如果真 (未知支持库函数_3 (数据库句柄, “select name from `mysql`.`help_keyword”))
    赋值 (记录集, 未知支持库函数_4 (数据库句柄))
    .计次循环首 (未知支持库函数_7 (记录集), )
        未知支持库函数_6 (记录集, 0, 名称)
        子文本替换 (., 相加 (“ ”, 名称, “ ”), 相加 (“ ”, 到大写 (名称), “ ”), , , 真)
        未知支持库函数_10 (记录集)
    .计次循环尾 ()
    未知支持库函数_5 (记录集)
.如果真结束



.子程序 _SQL文本编辑框_字符输入, 整数型, , 
.参数 字符代码, 整数型, , 

.局部变量 名称, 文本型, , , 

.如果真 (未知支持库函数_3 (数据库句柄, “select name from `mysql`.`help_keyword”))
    赋值 (记录集, 未知支持库函数_4 (数据库句柄))
    .计次循环首 (未知支持库函数_7 (记录集), )
        未知支持库函数_6 (记录集, 0, 名称)
        子文本替换 (., 相加 (“ ”, 名称, “ ”), 相加 (“ ”, 到大写 (名称), “ ”), , , 真)
        未知支持库函数_10 (记录集)
    .计次循环尾 ()
    未知支持库函数_5 (记录集)
.如果真结束



.子程序 _命令大全_被选择, 空白型, , 
载入 (命令窗口, 主窗口, 真)



.子程序 _工具条1_被单击, 空白型, , 
.参数 按钮索引, 整数型, , 

.判断开始 (等于 (按钮索引, 0))
    _新建库_被选择 ()
.判断 (等于 (按钮索引, 1))
    .如果真 (并且 (不等于 (.最大化按钮, -1), 等于 (.取父项目 (.最大化按钮).取项目文本 (), “数据库”)))
        _删除库_被选择 ()
    .如果真结束
    
.判断 (等于 (按钮索引, 3))
    _新建表_被选择 ()
.判断 (等于 (按钮索引, 4))
    .如果真 (不等于 (., -1))
        赋值 (., 0)
        _编辑表_被选择 ()
    .如果真结束
    
.判断 (等于 (按钮索引, 5))
    .如果真 (不等于 (., -1))
        赋值 (., 0)
        _删除表_被选择 ()
    .如果真结束
    
.判断 (等于 (按钮索引, 7))
    赋值 (., 3)
    _新增用户_被选择 ()
.判断 (等于 (按钮索引, 8))
    .如果真 (不等于 (., -1))
        赋值 (., 3)
        _编辑用户_被选择 ()
    .如果真结束
    
.判断 (等于 (按钮索引, 9))
    .如果真 (不等于 (., -1))
        赋值 (., 3)
        _删除用户_被选择 ()
    .如果真结束
    
.判断 (等于 (按钮索引, 11))
    _SQL窗口_被选择 ()
.判断 (等于 (按钮索引, 12))
    赋值 (., 1)
    _执行SQL_被选择 ()
.判断 (等于 (按钮索引, 14))
    .如果真 (不等于 (., -1))
        赋值 (., 0)
        _导出数据_被选择 ()
    .如果真结束
    
.判断 (等于 (按钮索引, 15))
    .如果真 (不等于 (., -1))
        赋值 (., 0)
        _导入数据_被选择 ()
    .如果真结束
    
.判断 (等于 (按钮索引, 17))
    _关于_被选择 ()
.默认
    
.判断结束


.子程序 _重命名表_被选择, 空白型, , 
.局部变量 新表名, 文本型, , , 

.如果真 (输入框 (“请输入新的表名！”, , .取标题 (., ), 新表名, ))
    .如果真 (并且 (不等于 (新表名, “”), 不等于 (.取标题 (., ), 新表名)))
        .如果 (未知支持库函数_3 (数据库句柄, 相加 (“RENAME TABLE ”, .取项目文本 (.最大化按钮), “.”, .取标题 (., ), “ TO ”, .取项目文本 (.最大化按钮), “.”, 新表名)))
            .置标题 (., , 新表名)
        .否则
            显示错误信息 ()
        .如果结束
        
    .如果真结束
    
.如果真结束


.程序集 常用程序集, , , 

.子程序 显示错误信息, 空白型, , 
.局部变量 错误文本, 文本型, , , 

.如果真 (未知支持库函数_41 (数据库句柄, 错误文本))
    信息框 (错误文本, 16, “错误”)
.如果真结束


.子程序 显示服务器信息, 空白型, , 
.如果 (未知支持库函数_3 (数据库句柄, “SHOW VARIABLES”))
    表格显示.置句柄及记录集 (数据库句柄, 记录集)
    表格显示.显示 (主窗口.)
    赋值 (主窗口.., 2)
.否则
    显示错误信息 ()
.如果结束


.子程序 显示系统变量, 空白型, , 
.如果 (未知支持库函数_3 (数据库句柄, “show status”))
    表格显示.置句柄及记录集 (数据库句柄, 记录集)
    表格显示.显示 (主窗口.)
    赋值 (主窗口.., 2)
.否则
    显示错误信息 ()
.如果结束



.类模块 显示数据, , , 

.程序集变量 句柄, 整数型, , , 
.程序集变量 类记录集, 整数型, , , 
.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 置句柄及记录集, 空白型, 公开, 
.参数 类数据库句柄, 整数型, , 
.参数 类数据库记录集, 整数型, , 

赋值 (句柄, 类数据库句柄)
赋值 (类记录集, 类数据库记录集)

.子程序 取回记录集, 整数型, , 
赋值 (类记录集, 未知支持库函数_4 (句柄))
返回 (类记录集)

.子程序 取回句柄, 整数型, , 
返回 (句柄)

.类模块 表格显示数据, 显示数据, , 

.程序集变量 显示表格, 未知类型0x50001, , , 
.程序集变量 当前记录集, 整数型, , , 
.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 显示, 空白型, 公开, 
.参数 表格, 未知类型0x50001, , 

赋值 (显示表格, 表格)
赋值 (当前记录集, 取回记录集 ())
初始化表格 ()

.子程序 初始化表格, 空白型, , 
.局部变量 列号, 整数型, , , 
.局部变量 列名, 文本型, , , 
.局部变量 列宽度, 整数型, , , 

.如果真 (大于 (未知支持库函数_7 (当前记录集), 600))
    赋值 (显示表格., 假)
    显示表格.禁止重画 ()
.如果真结束
赋值 (显示表格., 1)
显示表格.未知支持库函数_57 ()
赋值 (显示表格., 未知支持库函数_14 (当前记录集))
.计次循环首 (显示表格., 列号)
    未知支持库函数_15 (当前记录集, 相减 (列号, 1), 列名)
     ' 列宽度 ＝ 取字段宽度 (当前记录集, 列号 － 1)
    显示表格.未知支持库函数_9 (0, 相减 (列号, 1), #., 列名)
     ' 如果真 (列宽度 ＞ 0)
     ' 显示表格.置列宽 (列号 － 1, 列宽度)
.计次循环尾 ()
赋值 (显示表格., 相加 (未知支持库函数_7 (当前记录集), 1))
数据到表格 ()
.如果真 (等于 (显示表格., 假))
    赋值 (显示表格., 真)
    显示表格.允许重画 ()
.如果真结束


.子程序 数据到表格, 空白型, , 
.局部变量 行号, 整数型, , , 
.局部变量 列号, 整数型, , , 
.局部变量 列内容, 文本型, , , 
.局部变量 bl, 空白型, , , 

未知支持库函数_12 (记录集)
.计次循环首 (相减 (显示表格., 1), 行号)
    .计次循环首 (显示表格., bl)
        赋值 (列号, 相减 (bl, 1))
        未知支持库函数_6 (当前记录集, 列号, 列内容)
        显示表格.未知支持库函数_9 (行号, 列号, #., 列内容)
    .计次循环尾 ()
    未知支持库函数_10 (当前记录集)
.计次循环尾 ()
未知支持库函数_5 (当前记录集)

.子程序 执行查询, 空白型, 公开, 
.参数 查询语句, 文本型, , 
.参数 表格, 未知类型0x50001, , 

.局部变量 错误文本, 文本型, , , 

.如果 (未知支持库函数_3 (取回句柄 (), 查询语句))
    显示 (表格)
.否则
    .如果真 (未知支持库函数_41 (取回句柄 (), 错误文本))
        信息框 (错误文本, 16, “错误”)
    .如果真结束
    
.如果结束



.窗口程序集 窗口程序集3, , , 

.子程序 _关于窗口_创建完毕, 空白型, , 


.窗口程序集 窗口程序集4, , , 

.子程序 _关于窗口_创建完毕, 空白型, , 
赋值 (.标题, #软件名称)
赋值 (.标题, #软件版本)
赋值 (.标题, #作者)
赋值 (.标题, 相加 (“    本软件使用全中文编程工具<易语言>编写!”, #换行符, “    为方便编辑MYSQL数据库而编写的一个全中文的图形界面管理工具!”, #换行符, “    感谢你的使用,有问题和建议请发邮件给我.我的邮箱:mpshun@gmail.com”))

.子程序 _确定按钮_被单击, 空白型, , 
销毁 ()


.子程序 _系统信息按钮_被单击, 空白型, , 
跳转 ()


.窗口程序集 窗口程序集5, , , 

.程序集变量 编辑列组, 编辑行, , "0", 
.程序集变量 编辑列, 文本型, , , 
.子程序 _表编辑窗口_创建完毕, 空白型, , 
 ' 2.移动 (.可视, 相减 (取用户区宽度 (), 4), 相减 (取用户区高度 (), 2, .可视))
编辑表列初始化 ()
.如果真 (不等于 (被编辑表, “”))
    填充表格 ()
.如果真结束


.子程序 编辑表列初始化, 空白型, , 将表列
0.未知支持库函数_9 (0, #., “主键”)
0.未知支持库函数_32 (35)
1.未知支持库函数_53 (0, 1, 0, 真)
0.未知支持库函数_30 (#.)
0.未知支持库函数_9 (1, #., “字段名”)
1.未知支持库函数_32 (115)
0.未知支持库函数_9 (2, #., “字段类型”)
2.未知支持库函数_32 (100)
“未压缩浮点数”.未知支持库函数_29 ()
“字节型”.未知支持库函数_29 ()
“逻辑型”.未知支持库函数_29 ()
“短整型”.未知支持库函数_29 ()
“整型”.未知支持库函数_29 ()
“浮点型”.未知支持库函数_29 ()
“双精度浮点型”.未知支持库函数_29 ()
“时间戳记型”.未知支持库函数_29 ()
“长整型”.未知支持库函数_29 ()
“24位整型”.未知支持库函数_29 ()
“日期型”.未知支持库函数_29 ()
“时间型”.未知支持库函数_29 ()
“日期与时间型”.未知支持库函数_29 ()
“年份型”.未知支持库函数_29 ()
“短字节型”.未知支持库函数_29 ()
“短备注型”.未知支持库函数_29 ()
“备注型”.未知支持库函数_29 ()
“字节集型”.未知支持库函数_29 ()
“长字节集型”.未知支持库函数_29 ()
“长备注型”.未知支持库函数_29 ()
“巨字节集型”.未知支持库函数_29 ()
“巨备注型”.未知支持库函数_29 ()
“变长文本型”.未知支持库函数_29 ()
“文本型”.未知支持库函数_29 ()
2.未知支持库函数_30 (#.)
0.未知支持库函数_9 (3, #., “可空”)
3.未知支持库函数_32 (36)
3.未知支持库函数_30 (#.)
0.未知支持库函数_9 (4, #., “默认值”)
0.未知支持库函数_9 (5, #., “自增量”)
5.未知支持库函数_30 (#.)
5.未知支持库函数_32 (50)
0.未知支持库函数_9 (6, #., “最大长度”)
0.未知支持库函数_9 (7, #., “无符号”)
7.未知支持库函数_30 (#.)
7.未知支持库函数_32 (50)
0.未知支持库函数_9 (8, #., “以0填充”)
8.未知支持库函数_30 (#.)
0.未知支持库函数_9 (9, #., “二进制”)
9.未知支持库函数_30 (#.)
9.未知支持库函数_32 (50)
0.未知支持库函数_9 (10, #., “索引”)
10.未知支持库函数_30 (#.)
10.未知支持库函数_32 (35)
1.未知支持库函数_0 (1)

.子程序 _工具条1_被单击, 空白型, , 
.参数 按钮索引, 整数型, , 

.局部变量 行号, 空白型, , , 

.判断开始 (等于 (按钮索引, 1))
    .如果 (不等于 (被编辑表, “”))
        修改表信息 ()
    .否则
        保存表信息 ()
    .如果结束
    
.判断 (等于 (按钮索引, 3))
    赋值 (., 相加 (., 1))
    1.未知支持库函数_53 (0, 相减 (., 1), 0, 真)
.判断 (等于 (按钮索引, 5))
    .如果真 (不等于 (未知支持库函数_3 (), -1))
        .如果 (未知支持库函数_3 ().未知支持库函数_10 (0))
            未知支持库函数_3 ().未知支持库函数_9 (0, #., 假)
        .否则
            .计次循环首 (相减 (., 1), 行号)
                行号.未知支持库函数_9 (0, #., 假)
            .计次循环尾 ()
            未知支持库函数_3 ().未知支持库函数_9 (0, #., 真)
            未知支持库函数_3 ().未知支持库函数_9 (5, #., 假)
            
        .如果结束
        
    .如果真结束
    
.默认
    
.判断结束


.子程序 修改表信息, 空白型, , 保存修改后的表信息
.局部变量 字段信息, 未知类型0x70001, , , 
.局部变量 字段信息组, 未知类型0x70001, , "0", 
.局部变量 更改字段信息, 未知类型0x70002, , , 
.局部变量 循环次数, 空白型, , , 
.局部变量 循环次数1, 空白型, , , 
.局部变量 存在, 逻辑型, , , 
.局部变量 要删除列, 空白型, , "0", 
.局部变量 附加字段类型, 空白型, , , 
.局部变量 主键, 文本型, , , 

.计次循环首 (取数组成员数 (编辑列组), 循环次数) ' 先查找被删除的列，删除它
    赋值 (存在, 假)
    连续赋值 (“”, 更改字段信息., 更改字段信息., 更改字段信息., 更改字段信息.)
    .计次循环首 (相减 (., 1), 循环次数1)
        
        .如果真 (等于 (编辑列组 [循环次数], 编辑后行, 循环次数1.未知支持库函数_10 (1)))
            赋值 (存在, 真)
            
            跳出循环 ()
        .如果真结束
        
    .计次循环尾 ()
    .如果真 (取反 (存在))
        加入成员 (要删除列, 循环次数)
        赋值 (更改字段信息., 编辑列组 [循环次数], 编辑后行)
        未知支持库函数_30 (数据库句柄, 被编辑表, 更改字段信息, 字段信息, #)
    .如果真结束
    
.计次循环尾 ()
.计次循环首 (取数组成员数 (要删除列), 循环次数)
    删除成员 (编辑列组, 要删除列 [循环次数], )
.计次循环尾 ()
.计次循环首 (取数组成员数 (编辑列组), 循环次数) ' 查找列名被修改的列，修改它
    .如果真 (不等于 (编辑列组 [循环次数], 编辑前行, 编辑列组 [循环次数], 编辑后行))
        .计次循环首 (相减 (., 1), 循环次数1)
            .如果真 (等于 (循环次数1.未知支持库函数_10 (1), 编辑列组 [循环次数], 编辑后行))
                赋值 (更改字段信息., 编辑列组 [循环次数], 编辑前行)
                赋值 (字段信息., #)
                赋值 (字段信息., 编辑列组 [循环次数], 编辑后行)
                赋值 (字段信息., 字段类型 (循环次数1.未知支持库函数_10 (2)))
                赋值 (字段信息., 循环次数1.未知支持库函数_10 (3))
                赋值 (字段信息., 循环次数1.未知支持库函数_10 (5))
                赋值 (字段信息., 循环次数1.未知支持库函数_10 (4))
                赋值 (附加字段类型, 0)
                .如果真 (大于 (到数值 (循环次数1.未知支持库函数_10 (6)), 0))
                    赋值 (附加字段类型, 相加 (附加字段类型, 1))
                .如果真结束
                .如果真 (循环次数1.未知支持库函数_10 (7))
                    赋值 (附加字段类型, 相加 (附加字段类型, 2))
                .如果真结束
                .如果真 (循环次数1.未知支持库函数_10 (8))
                    赋值 (附加字段类型, 相加 (附加字段类型, 4))
                .如果真结束
                .如果真 (循环次数1.未知支持库函数_10 (9))
                    赋值 (附加字段类型, 相加 (附加字段类型, 8))
                .如果真结束
                赋值 (字段信息., 附加字段类型)
                赋值 (字段信息., 循环次数1.未知支持库函数_10 (6))
                未知支持库函数_30 (数据库句柄, 被编辑表, 更改字段信息, 字段信息, #)
                跳出循环 ()
            .如果真结束
            
        .计次循环尾 ()
    .如果真结束
    
.计次循环尾 ()
.计次循环首 (相减 (., 1), 循环次数) ' 查找新增的列，添加
    赋值 (存在, 假)
    .计次循环首 (取数组成员数 (编辑列组), 循环次数1)
        .如果真 (等于 (循环次数.未知支持库函数_10 (2), 编辑列组 [循环次数1], 编辑后行))
            赋值 (存在, 真)
            跳出循环 ()
        .如果真结束
        
    .计次循环尾 ()
    .如果真 (等于 (存在, 假))
        赋值 (字段信息., #)
        赋值 (字段信息., 循环次数.未知支持库函数_10 (1))
        赋值 (字段信息., 字段类型 (循环次数.未知支持库函数_10 (2)))
        赋值 (字段信息., 循环次数.未知支持库函数_10 (3))
        赋值 (字段信息., 循环次数.未知支持库函数_10 (5))
        赋值 (字段信息., 循环次数.未知支持库函数_10 (4))
        赋值 (附加字段类型, 0)
        .如果真 (大于 (到数值 (循环次数.未知支持库函数_10 (6)), 0))
            赋值 (附加字段类型, 相加 (附加字段类型, 1))
        .如果真结束
        .如果真 (循环次数.未知支持库函数_10 (7))
            赋值 (附加字段类型, 相加 (附加字段类型, 2))
        .如果真结束
        .如果真 (循环次数.未知支持库函数_10 (8))
            赋值 (附加字段类型, 相加 (附加字段类型, 4))
        .如果真结束
        .如果真 (循环次数.未知支持库函数_10 (9))
            赋值 (附加字段类型, 相加 (附加字段类型, 8))
        .如果真结束
        赋值 (字段信息., 附加字段类型)
        赋值 (字段信息., 循环次数.未知支持库函数_10 (6))
        
        未知支持库函数_30 (数据库句柄, 被编辑表, 更改字段信息, 字段信息, #)
    .如果真结束
    
.计次循环尾 ()

赋值 (主键, “”) ' 如果有主见并且不同就修改，否则增加
赋值 (存在, 假)
未知支持库函数_3 (数据库句柄, 相加 (“show columns from ”, 被编辑表))
赋值 (记录集, 未知支持库函数_4 (数据库句柄))
未知支持库函数_6 (记录集, 3, 主键)
未知支持库函数_5 (记录集)
.计次循环首 (相减 (., 1), 循环次数)
    .如果真 (等于 (循环次数.未知支持库函数_10 (0), 真))
        赋值 (存在, 真)
        .如果真 (不等于 (主键, “”))
            赋值 (更改字段信息., 主键)
            未知支持库函数_30 (数据库句柄, 被编辑表, 更改字段信息, 字段信息, #)
        .如果真结束
        赋值 (更改字段信息., 循环次数.未知支持库函数_10 (1))
        未知支持库函数_30 (数据库句柄, 被编辑表, 更改字段信息, 字段信息, #)
        
    .如果真结束
    
.计次循环尾 ()
.如果真 (并且 (取反 (存在), 不等于 (主键, “”))) ' 原本有主键，现在没有了就删除
    赋值 (更改字段信息., 主键)
    未知支持库函数_30 (数据库句柄, 被编辑表, 更改字段信息, 字段信息, #)
.如果真结束


.子程序 保存表信息, 空白型, , 新建表的时候保存
.局部变量 表名, 文本型, , , 
.局部变量 字段信息, 未知类型0x70001, , , 
.局部变量 字段信息组, 未知类型0x70001, , "0", 
.局部变量 行号, 空白型, , , 
.局部变量 循环次数, 空白型, , , 
.局部变量 总行数, 空白型, , , 

.如果真 (输入框 (“请输入表名！”, , “newtable1”, 表名, ))
    赋值 (总行数, .)
    .计次循环首 (相减 (., 1), 循环次数)
        赋值 (行号, 相减 (总行数, 循环次数))
        .如果 (等于 (删全部空 (行号.未知支持库函数_10 (1)), “”))
            行号.未知支持库函数_36 ()
        .否则
            .如果 (等于 (删全部空 (行号.未知支持库函数_10 (2)), “”))
                行号.未知支持库函数_9 (2, #., “文本型”)
                .如果真 (等于 (到数值 (行号.未知支持库函数_10 (6)), 0))
                    行号.未知支持库函数_9 (6, #., 2)
                .如果真结束
                
            .否则
                
            .如果结束
            
        .如果结束
        
    .计次循环尾 ()
    清除数组 (字段信息组)
    .计次循环首 (相减 (., 1), 行号)
        赋值 (字段信息., #)
        赋值 (字段信息., 行号.未知支持库函数_10 (1))
        赋值 (字段信息., 字段类型 (行号.未知支持库函数_10 (2)))
        
        赋值 (字段信息., 行号.未知支持库函数_10 (3))
        赋值 (字段信息., 行号.未知支持库函数_10 (5))
        赋值 (字段信息., 行号.未知支持库函数_10 (4))
        赋值 (总行数, 0)
        .如果真 (大于 (到数值 (行号.未知支持库函数_10 (6)), 0))
            赋值 (总行数, 相加 (总行数, 1))
        .如果真结束
        .如果真 (行号.未知支持库函数_10 (7))
            赋值 (总行数, 相加 (总行数, 2))
        .如果真结束
        .如果真 (行号.未知支持库函数_10 (8))
            赋值 (总行数, 相加 (总行数, 4))
        .如果真结束
        .如果真 (行号.未知支持库函数_10 (9))
            赋值 (总行数, 相加 (总行数, 8))
        .如果真结束
        赋值 (字段信息., 总行数)
        赋值 (字段信息., 到文本 (到数值 (行号.未知支持库函数_10 (6))))
        加入成员 (字段信息组, 字段信息)
    .计次循环尾 ()
    赋值 (字段信息., #)
    连续赋值 (“”, 字段信息., 字段信息., 字段信息.)
    .计次循环首 (相减 (., 1), 行号)
        .如果真 (行号.未知支持库函数_10 (0))
            赋值 (字段信息., 行号.未知支持库函数_10 (1))
        .如果真结束
        .如果真 (行号.未知支持库函数_10 (10))
            赋值 (字段信息., 相加 (字段信息., 行号.未知支持库函数_10 (1), “,”))
        .如果真结束
        
    .计次循环尾 ()
    .如果真 (等于 (取文本右边 (字段信息., 1), “,”))
        赋值 (字段信息., 文本替换 (字段信息., 取文本长度 (字段信息.), 1, ))
    .如果真结束
    .如果真 (并且 (不等于 (删全部空 (字段信息.), “”), 不等于 (删全部空 (字段信息.), “”)))
        加入成员 (字段信息组, 字段信息)
    .如果真结束
    
    .如果 (未知支持库函数_29 (数据库句柄, 相加 (“`”, 主窗口.取项目文本 (., 主窗口..最大化按钮), “`.`”, 表名, “`”), 字段信息组))
        主窗口.插入表项 (., , 表名, 0, , , )
        表编辑窗口.销毁 ()
    .否则
        显示错误信息 ()
    .如果结束
    
.如果真结束




.子程序 字段类型, 整数型, , 返回字段类型的整数值
.参数 字段类型名, 文本型, , 


.判断开始 (等于 (字段类型名, “未压缩浮点数型”))
    返回 (#)
.判断 (等于 (字段类型名, “字节型”))
    返回 (#)
.判断 (等于 (字段类型名, “逻辑型”))
    返回 (#)
.判断 (等于 (字段类型名, “短整型”))
    返回 (#)
.判断 (等于 (字段类型名, “整型”))
    返回 (#)
.判断 (等于 (字段类型名, “浮点型”))
    返回 (#)
.判断 (等于 (字段类型名, “双精度浮点型”))
    返回 (#)
.判断 (等于 (字段类型名, “时间戳记型”))
    返回 (#)
.判断 (等于 (字段类型名, “长整型型”))
    返回 (#)
.判断 (等于 (字段类型名, “24位整型”))
    返回 (#)
.判断 (等于 (字段类型名, “日期型”))
    返回 (#)
.判断 (等于 (字段类型名, “时间型”))
    返回 (#)
.判断 (等于 (字段类型名, “日期与时间型”))
    返回 (#)
.判断 (等于 (字段类型名, “年份型”))
    返回 (#)
.判断 (等于 (字段类型名, “短字节集”))
    返回 (#)
.判断 (等于 (字段类型名, “短备注型”))
    返回 (#)
.判断 (等于 (字段类型名, “备注型”))
    返回 (#)
.判断 (等于 (字段类型名, “字节集型”))
    返回 (#)
.判断 (等于 (字段类型名, “长字节集型”))
    返回 (#)
.判断 (等于 (字段类型名, “长备注型”))
    返回 (#)
.判断 (等于 (字段类型名, “巨字节集型”))
    返回 (#)
.判断 (等于 (字段类型名, “巨备注型”))
    返回 (#)
.判断 (等于 (字段类型名, “变长文本型”))
    返回 (#)
.默认
    返回 (#)
.判断结束


.子程序 判断字段类型, 文本型, , 返回字段类型对应的中文名
.参数 字段类型名, 文本型, , 


.判断开始 (等于 (字段类型名, “decimal”))
    返回 (“未压缩浮点数型”)
.判断 (等于 (字段类型名, “tinyint”))
    返回 (“字节型”)
.判断 (等于 (字段类型名, “bool”))
    返回 (“逻辑型”)
.判断 (等于 (字段类型名, “smallint”))
    返回 (“短整型”)
.判断 (等于 (字段类型名, “int”))
    返回 (“整型”)
.判断 (等于 (字段类型名, “float”))
    返回 (“浮点型”)
.判断 (等于 (字段类型名, “double”))
    返回 (“双精度浮点型”)
.判断 (等于 (字段类型名, “timestamp”))
    返回 (“时间戳记型”)
.判断 (等于 (字段类型名, “bigint”))
    返回 (“长整型”)
.判断 (等于 (字段类型名, “mediumint”))
    返回 (“24位整型”)
.判断 (等于 (字段类型名, “date”))
    返回 (“日期型”)
.判断 (等于 (字段类型名, “time”))
    返回 (“时间型”)
.判断 (等于 (字段类型名, “datetime”))
    返回 (“日期与时间型”)
.判断 (等于 (字段类型名, “year”))
    返回 (“年份型”)
.判断 (等于 (字段类型名, “tinyblob”))
    返回 (“短字节集”)
.判断 (等于 (字段类型名, “tinytext”))
    返回 (“短备注型”)
.判断 (等于 (字段类型名, “text”))
    返回 (“备注型”)
.判断 (等于 (字段类型名, “blob”))
    返回 (“字节集型”)
.判断 (等于 (字段类型名, “mediumblob”))
    返回 (“长字节集型”)
.判断 (等于 (字段类型名, “mediumtext”))
    返回 (“长备注型”)
.判断 (等于 (字段类型名, “longblob”))
    返回 (“巨字节集型”)
.判断 (等于 (字段类型名, “longtext”))
    返回 (“巨备注型”)
.判断 (等于 (字段类型名, “varchar”))
    返回 (“变长文本型”)
.默认
    返回 (“文本型”)
.判断结束


.子程序 填充表格, 空白型, , 通过获取的列信息填充表格
.局部变量 行号, 空白型, , , 
.局部变量 内容, 文本型, , , 
.局部变量 类型数组, 文本型, , "0", 
.局部变量 位置, 空白型, , , 
.局部变量 循环次数, 空白型, , , 

未知支持库函数_3 (数据库句柄, 相加 (“show columns from ”, 被编辑表))
赋值 (记录集, 未知支持库函数_4 (数据库句柄))
赋值 (., 相加 (未知支持库函数_7 (记录集), 1))
重定义数组 (编辑列组, 假, 相减 (., 1))
.计次循环首 (未知支持库函数_7 (记录集), 行号)
    赋值 (内容, “”)
    未知支持库函数_6 (记录集, 0, 内容)
    行号.未知支持库函数_9 (1, #., 内容) ' 填充字段名
    连续赋值 (内容, 编辑列组 [行号], 编辑前行, 编辑列组 [行号], 编辑后行)
    赋值 (内容, “”)
    未知支持库函数_6 (记录集, 1, 内容)
    清除数组 (类型数组) ' 先清空了保险
    赋值 (类型数组, 分割文本 (内容, “ ”, ))
    赋值 (位置, 寻找文本 (类型数组 [1], “(”, , 假)) ' 判断类型中是否有最大限制
    .如果 (等于 (位置, -1))
        行号.未知支持库函数_9 (2, #., 判断字段类型 (类型数组 [1]))
    .否则
        行号.未知支持库函数_9 (2, #., 判断字段类型 (取文本左边 (类型数组 [1], 相减 (位置, 1))))
        行号.未知支持库函数_9 (6, #., 取文本中间 (类型数组 [1], 相加 (位置, 1), 相减 (倒找文本 (类型数组 [1], “)”, , 假), 位置, 1)))
    .如果结束
    赋值 (内容, “”)
    未知支持库函数_6 (记录集, 2, 内容)
    .如果 (等于 (内容, “YES”)) ' 判断字段是否可空
        行号.未知支持库函数_9 (3, #., 真)
    .否则
        行号.未知支持库函数_9 (3, #., 假)
    .如果结束
    .如果真 (大于 (取数组成员数 (类型数组), 1)) ' 成员大于1说明还有其他附加属性
        .计次循环首 (相减 (取数组成员数 (类型数组), 1), 循环次数)
            .判断开始 (等于 (类型数组 [相加 (循环次数, 1)], “zerofill”))
                行号.未知支持库函数_9 (8, #., 真)
            .判断 (等于 (类型数组 [相加 (循环次数, 1)], “unsigned”))
                行号.未知支持库函数_9 (7, #., 真)
            .判断 (等于 (类型数组 [相加 (循环次数, 1)], “BINARY”))
                行号.未知支持库函数_9 (9, #., 真)
            .默认
                
            .判断结束
            
        .计次循环尾 ()
    .如果真结束
    赋值 (内容, “”)
    未知支持库函数_6 (记录集, 3, 内容)
    .判断开始 (等于 (内容, “PRI”))
        行号.未知支持库函数_9 (0, #., 真)
    .判断 (等于 (内容, “MUL”))
        行号.未知支持库函数_9 (10, #., 真)
    .默认
        
    .判断结束
    赋值 (内容, “”)
    未知支持库函数_6 (记录集, 4, 内容)
    行号.未知支持库函数_9 (4, #., 内容) ' 填充默认值
    赋值 (内容, “”)
    未知支持库函数_6 (记录集, 5, 内容)
    .如果真 (不等于 (内容, “”)) ' 不空就是自增量
        行号.未知支持库函数_9 (5, #., 真)
    .如果真结束
    未知支持库函数_10 (记录集)
.计次循环尾 ()


.子程序 _表编辑窗口_将被销毁, 空白型, , 
赋值 (被编辑表, “”)


.子程序 _编辑表列表格_将被编辑, 空白型, , 
.如果真 (并且 (等于 (未知支持库函数_4 (), 2), 不等于 (被编辑表, “”)))
    
    赋值 (编辑列, 未知支持库函数_3 ().未知支持库函数_10 (未知支持库函数_4 ()))
.如果真结束


.子程序 _编辑表列表格_结束编辑, 空白型, , 
.局部变量 循环次数, 空白型, , , 
.局部变量 列名是否重复, 逻辑型, , , 

.如果真 (等于 (未知支持库函数_4 (), 2))
    .如果真 (列名是否重复)
        信息框 (“该列名已经存在！”, 0, )
        返回 ()
    .如果真结束
    .如果真 (不等于 (被编辑表, “”))
        .计次循环首 (取数组成员数 (编辑列组), 循环次数)
            .如果真 (等于 (编辑列组 [循环次数], 编辑后行, 编辑列))
                赋值 (编辑列组 [循环次数], 编辑后行, 未知支持库函数_3 ().未知支持库函数_10 (2))
                跳出循环 ()
            .如果真结束
            
        .计次循环尾 ()
    .如果真结束
    
.如果真结束


.子程序 列名是否重复, 逻辑型, , 
.局部变量 被检查名, 文本型, , , 
.局部变量 行号, 空白型, , , 

赋值 (被检查名, 未知支持库函数_3 ().未知支持库函数_10 (2))
.计次循环首 (., 行号)
    .如果真 (并且 (等于 (行号.未知支持库函数_10 (2), 被检查名), 不等于 (行号, 未知支持库函数_3 ())))
        返回 (真)
        跳出循环 ()
    .如果真结束
    
.计次循环尾 ()


.窗口程序集 窗口程序集6, , , 

.子程序 _用户窗口_创建完毕, 空白型, , 
.局部变量 库名, 文本型, , , 
.局部变量 用户主机, 文本型, , "0", 

.如果真 (未知支持库函数_28 (数据库句柄))
    赋值 (记录集, 未知支持库函数_4 (数据库句柄))
    .计次循环首 (未知支持库函数_7 (记录集), )
        未知支持库函数_6 (记录集, 0, 库名)
        库名.加入项目 ()
        未知支持库函数_10 (记录集)
    .计次循环尾 ()
    未知支持库函数_5 (记录集)
     ' 库列表框.选中项目 (0, 真)
     ' 权限列表框.选中项目 (0, 真)
.如果真结束
.如果真 (不等于 (被编辑用户, “”))
    赋值 (用户主机, 分割文本 (被编辑用户, “@”, 2))
    赋值 (.内容, 用户主机 [1])
    赋值 (.内容, “******”)
    赋值 (.内容, 用户主机 [2])
    连续赋值 (真, .禁止, .禁止, .禁止)
    获取用户权限 ()
    取授权库 ()
.如果真结束


.子程序 获取用户权限, 空白型, , 
.局部变量 循环次数, 空白型, , , 
.局部变量 权限, 文本型, , , 
.局部变量 所有权限, 逻辑型, , , 

.如果 (未知支持库函数_3 (数据库句柄, 相加 (“select * from `mysql`.`user` where user='”, .内容, “' and host='”, .内容, “'”)))
    赋值 (记录集, 未知支持库函数_4 (数据库句柄))
    赋值 (所有权限, 真)
    .如果 (是否有权限 (“Select_priv”))
        1.选中项目 (真)
    .否则
        赋值 (所有权限, 假)
    .如果结束
    .如果 (是否有权限 (“Insert_priv”))
        2.选中项目 (真)
    .否则
        赋值 (所有权限, 假)
    .如果结束
    .如果 (是否有权限 (“Update_priv”))
        3.选中项目 (真)
    .否则
        赋值 (所有权限, 假)
    .如果结束
    .如果 (是否有权限 (“Delete_priv”))
        4.选中项目 (真)
    .否则
        赋值 (所有权限, 假)
    .如果结束
    .如果 (是否有权限 (“Create_priv”))
        7.选中项目 (真)
    .否则
        赋值 (所有权限, 假)
    .如果结束
    .如果 (是否有权限 (“Drop_priv”))
        8.选中项目 (真)
    .否则
        赋值 (所有权限, 假)
    .如果结束
    .如果 (是否有权限 (“Reload_priv”))
        10.选中项目 (真)
    .否则
        赋值 (所有权限, 假)
    .如果结束
    .如果 (是否有权限 (“Shutdown_priv”))
        11.选中项目 (真)
    .否则
        赋值 (所有权限, 假)
    .如果结束
    .如果 (是否有权限 (“File_priv”))
        13.选中项目 (真)
    .否则
        赋值 (所有权限, 假)
    .如果结束
    .如果 (是否有权限 (“Alter_priv”))
        6.选中项目 (真)
    .否则
        赋值 (所有权限, 假)
    .如果结束
    .如果 (是否有权限 (“Index_priv”))
        5.选中项目 (真)
    .否则
        赋值 (所有权限, 假)
    .如果结束
    .如果 (是否有权限 (“Process_priv”))
        12.选中项目 (真)
    .否则
        赋值 (所有权限, 假)
    .如果结束
    
    .如果真 (所有权限)
        0.选中项目 ()
        .计次循环首 (13, 循环次数)
            循环次数.选中项目 (假)
        .计次循环尾 ()
        0.选中项目 ()
    .如果真结束
    未知支持库函数_5 (记录集)
.否则
    信息框 (“获取用户信息失败！”, 16, )
    用户窗口.销毁 ()
.如果结束


.子程序 是否有权限, 逻辑型, , 为真就是有权限
.参数 字段, 文本型, , 

.局部变量 是否, 文本型, , , 

未知支持库函数_6 (记录集, 字段, 是否)
.如果 (等于 (是否, “Y”))
    返回 (真)
.否则
    返回 (假)
.如果结束


.子程序 取授权库, 空白型, , 
.局部变量 库名, 文本型, , , 

未知支持库函数_3 (数据库句柄, 相加 (“select Db from `mysql`.`db` where user='”, .内容, “' and host='”, .内容, “'”))
赋值 (记录集, 未知支持库函数_4 (数据库句柄))
.如果真 (等于 (未知支持库函数_7 (记录集), 0))
    0.选中项目 (真)
    未知支持库函数_5 (记录集)
    返回 ()
.如果真结束
.计次循环首 (未知支持库函数_7 (记录集), )
    未知支持库函数_6 (记录集, 0, 库名)
    库名.选择 ().选中项目 ()
    未知支持库函数_10 (记录集)
.计次循环尾 ()
未知支持库函数_5 (记录集)


.子程序 _库列表框_选中状态被改变, 空白型, , 
.局部变量 行号, 空白型, , , 

.如果 (等于 (.现行选中项, 0))
    .如果 (0.是否被选中 ())
        .计次循环首 (取项目数 (), 行号)
            行号.选中项目 (假)
        .计次循环尾 ()
    .否则
        .计次循环首 (取项目数 (), 行号)
            行号.允许 (真)
        .计次循环尾 ()
    .如果结束
    
.否则
    0.选中项目 (假)
    
.如果结束


.子程序 _权限列表框_选中状态被改变, 空白型, , 
.局部变量 行号, 空白型, , , 

.如果 (等于 (.现行选中项, 0))
    .如果 (0.是否被选中 ())
        .计次循环首 (取项目数 (), 行号)
            行号.选中项目 (假)
        .计次循环尾 ()
    .否则
        .计次循环首 (取项目数 (), 行号)
            行号.允许 (真)
        .计次循环尾 ()
    .如果结束
    
.否则
    0.选中项目 (假)
    
.如果结束


.子程序 _超级按钮1_被单击, 空白型, , 
销毁 ()

.子程序 _超级按钮2_被单击, 空白型, , 
.如果 (等于 (被编辑用户, “”))
    .如果真 (等于 (删全部空 (.内容), “”))
        信息框 (“请输入用户名！”, 0, )
        返回 ()
    .如果真结束
    .如果真 (等于 (删全部空 (.内容), “”))
        赋值 (.内容, “%”)
    .如果真结束
    .如果 (未知支持库函数_34 (数据库句柄, 删全部空 (.内容), 删全部空 (.内容), 删全部空 (.内容), 判断库 (), “”, 判断权限 ()))
        取用户组 ()
        用户窗口.销毁 ()
    .否则
        显示错误信息 ()
    .如果结束
    
.否则
    .如果 (未知支持库函数_38 (数据库句柄, .内容, .内容, 判断库 (), “”, 判断权限 ()))
        用户窗口.销毁 ()
    .否则
        显示错误信息 ()
    .如果结束
    
.如果结束


.子程序 判断库, 文本型, , 取得可操作库名列表
.局部变量 行号, 空白型, , , 
.局部变量 库名列表, 文本型, , , 

赋值 (库名列表, “”)
.如果 (0.是否被选中 ())
    返回 (“*”)
.否则
    .计次循环首 (相减 (取项目数 (), 1), 行号)
        .如果真 (行号.是否被选中 ())
            赋值 (库名列表, 相加 (库名列表, 行号.取项目文本 (), “,”))
        .如果真结束
        
    .计次循环尾 ()
.如果结束
.如果真 (不等于 (库名列表, “”))
    .如果真 (等于 (取文本右边 (库名列表, 1), “,”))
        赋值 (库名列表, 文本替换 (库名列表, 取文本长度 (库名列表), 1, ))
    .如果真结束
    
.如果真结束
返回 (库名列表)

.子程序 判断权限, 整数型, , 取得权限值
.局部变量 行号, 空白型, , , 
.局部变量 权限值, 空白型, , , 

赋值 (权限值, 0)
.如果真 (0.是否被选中 ())
    返回 (0.取项目数值 ())
.如果真结束
.计次循环首 (相减 (取项目数 (), 1), 行号)
    .如果真 (行号.是否被选中 ())
        赋值 (权限值, 相加 (权限值, 行号.取项目数值 ()))
    .如果真结束
    
.计次循环尾 ()
返回 (权限值)


.子程序 _用户窗口_将被销毁, 空白型, , 
赋值 (被编辑用户, “”)


.窗口程序集 窗口程序集7, , , 

.子程序 _按钮1_被单击, 空白型, , 
.如果真 (打开 ())
    赋值 (.内容, .文件名)
    
.如果真结束


.子程序 _按钮3_被单击, 空白型, , 
导出脚本窗口.销毁 ()

.子程序 _按钮2_被单击, 空白型, , 
.局部变量 保存文件, 空白型, , , 
.局部变量 表定义语句, 文本型, , , 
.局部变量 表数据语句, 文本型, , , 

.如果真 (等于 (删全部空 (.内容), “”))
    信息框 (“请输入你要保存的脚本文件名！”, 0, )
    返回 ()
.如果真结束
组合创建语句 (表定义语句, 表数据语句)
.如果真 (不等于 (删全部空 (表定义语句), “”))
    赋值 (保存文件, 打开文件 (删首尾空 (.内容), #重写, ))
    .如果 (写出文本 (保存文件, 表定义语句))
         ' 子文本替换 (通用对话框1.文件名, “.sql”, “.dat”, 取文本长度 (通用对话框1.文件名 － 4), 1, 假)
        信息框 (“导出创建库脚本成功”, 64, )
        导出脚本窗口.销毁 ()
    .否则
        信息框 (“保存文件失败，请确定你选定的磁盘是可写的！”, 0, )
    .如果结束
    关闭文件 (保存文件)
    
.如果真结束


.子程序 组合创建语句, 空白型, , 
.参数 表定义文本, 文本型, 参考, 
.参数 表数据文本, 文本型, 参考, 

.局部变量 库, 文本型, , , 
.局部变量 表, 文本型, , "0", 
.局部变量 循环次数, 空白型, , , 
.局部变量 临时内容, 文本型, , , 
.局部变量 文件名, 空白型, , , 

赋值 (库, 取文本右边 (., 相减 (取文本长度 (.), 倒找文本 (., “-”, , 假))))
赋值 (表定义文本, “”)
.如果真 (.选中)
    赋值 (表定义文本, 相加 (“DROP DATABASE IF EXISTS `”, 库, “`;”, #换行符)) ' 如果存在该库就删除
.如果真结束
赋值 (表定义文本, 相加 (表定义文本, “CREATE DATABASE IF NOT EXISTS `”, 库, “`;”, #换行符, “USE `”, 库, “`;”, #换行符)) ' 创建数据库并选定库
.如果真 (取反 (未知支持库函数_48 (数据库句柄, 库)))
    信息框 (“打开库出错！创建脚本终止！”, 0, “致命错误”)
    返回 ()
    
.如果真结束
.如果真 (取反 (未知支持库函数_33 (数据库句柄)))
    信息框 (“未能取得表名列表！创建脚本终止！”, 0, “致命错误”)
    返回 ()
    
.如果真结束
赋值 (记录集, 未知支持库函数_4 (数据库句柄))
重定义数组 (表, 假, 未知支持库函数_7 (记录集))
.计次循环首 (未知支持库函数_7 (记录集), 循环次数)
    未知支持库函数_6 (记录集, 0, 表 [循环次数])
    未知支持库函数_10 (记录集)
.计次循环尾 ()
未知支持库函数_5 (记录集)
.计次循环首 (取数组成员数 (表), 循环次数)
    未知支持库函数_3 (数据库句柄, 相加 (“show create table `”, 库, “`.`”, 表 [循环次数], “`”))
    赋值 (记录集, 未知支持库函数_4 (数据库句柄))
    未知支持库函数_6 (记录集, 1, 临时内容)
    赋值 (临时内容, 文本替换 (临时内容, 1, 12, “CREATE TABLE IF NOT EXISTS”))
    赋值 (表定义文本, 相加 (表定义文本, 临时内容, “;”, #换行符))
    未知支持库函数_5 (记录集)
.计次循环尾 ()
未知函数_565 () ' *** 缩略程序块 ***
 ' .如果真 (.选中)
     ' 赋值 (表数据文本, “”)
     ' .计次循环首 (取数组成员数 (表), 循环次数)
         ' 赋值 (临时内容, 取临时文件名 ())
         ' 未知支持库函数_3 (数据库句柄, 相加 (“select * into outfile '”, 临时内容, “' from `”, 库, “`.`”, 表 [循环次数], “`”))
         ' 赋值 (文件名, 打开文件 (临时内容, #重写, ))
         ' 赋值 (表数据文本, 相加 (表数据文本, 读入文本 (文件名, )))
         ' 关闭文件 (文件名)
         ' 未知支持库函数_5 (记录集)
     ' .计次循环尾 ()
     ' 
     ' 
 ' .如果真结束
 ' 


.窗口程序集 窗口程序集8, , , 

.子程序 _命令窗口_创建完毕, 空白型, , 
命令窗口.移动 (主窗口., 主窗口., 主窗口., 主窗口.)

2.移动 (2, 150, 取用户区高度 ())
154.移动 (2, 180, )
342.移动 (2, , )
154.移动 (30, 相减 (取用户区宽度 (), 156), 相除 (取用户区高度 (), 2))
154.移动 (相加 (.高度, ., 8), 相减 (取用户区宽度 (), 156), 相减 (取用户区高度 (), ., .高度, 8))
命令名列表 ()

.子程序 命令名列表, 空白型, , 列出所有命令
.局部变量 命令名, 文本型, , , 

.如果真 (未知支持库函数_3 (数据库句柄, “select name from `mysql`.`help_topic`”))
    赋值 (记录集, 未知支持库函数_4 (数据库句柄))
    .计次循环首 (未知支持库函数_7 (记录集), )
        未知支持库函数_6 (记录集, 0, 命令名)
        命令名.加入项目 ()
        未知支持库函数_10 (记录集)
    .计次循环尾 ()
    未知支持库函数_5 (记录集)
.如果真结束


.子程序 _列表框1_列表项被选择, 空白型, , 
.局部变量 内容, 文本型, , , 

.如果真 (未知支持库函数_3 (数据库句柄, 相加 (“select description,example from `mysql`.`help_topic` where name='”, .取项目文本 (.现行选中项), “'”)))
    赋值 (记录集, 未知支持库函数_4 (数据库句柄))
    未知支持库函数_6 (记录集, 0, 内容)
    赋值 (., 内容)
    未知支持库函数_6 (记录集, 1, 内容)
    赋值 (., 内容)
    未知支持库函数_5 (记录集)
    
.如果真结束


.子程序 _按钮1_被单击, 空白型, , 
.如果真 (不等于 (.选择 (.内容), -1))
    _列表框1_列表项被选择 ()
.如果真结束


.子程序 _编辑框1_字符输入, 整数型, , 
.参数 字符代码, 整数型, , 

.如果真 (等于 (字符代码, #回车键))
    _按钮1_被单击 ()
    
.如果真结束



 ' 不属于任何一个程序集、类模块的函数：
