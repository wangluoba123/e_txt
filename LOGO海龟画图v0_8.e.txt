 ' 文件类型：Windows窗口程序

 ' 程序名称：LOGO海龟画图
 ' 程序描述：用LOGO语言指挥小海龟画图
@备注:
梁远海软件 E-mail：nplyh@163.com
 ' 程序作者：Liang YuanHai
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：nplyh@163.com
 ' 主页地址：
 ' 版权声明：版权所有(C) Liang YuanHai 2009-2011  
 ' 版本号：1.8
 ' 创建号：0.0

窗口 Logo窗口
    左边 = 50
    顶边 = 50
    宽度 = 605
    高度 = 579
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    窗口类名 = “”
    底图 =  ' 空
    图标 =  ' 已保存到：D:\易语言学习\Data\LOGO海龟画图v0_8.e\Logo窗口_图标.ico
    背景音乐 =  ' 空
    标题 = “”
    帮助文件名 = “”



.图片 资源_海龟图片, " ' 已保存到：D:\易语言学习\Data\LOGO海龟画图v0_8.e\资源_海龟图片", , 
.常量 常量_软件名称, "“Logo海龟画图”", , 
.常量 常量_版本号, "“2011版”", , 
.常量 常量_Logo单参可用命令, "“fd bk lt rt wait”", , 
.常量 常量_Logo无参可用命令, "“pu pd st ht home draw cs clean fill”", , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 5 0 系统核心支持库
 ' spec A512548E76954B6E92C21055517615B0 3 0 特殊功能支持库




数据类型 自定义_单个命令, , 
    .成员 名称, 文本型, , , 
    .成员 参数, 文本型, , , 

数据类型 自定义_坐标, , 
    .成员 X, 整数型, , , 
    .成员 Y, 整数型, , , 


.程序集 启动程序集, , , 

.子程序 _启动子程序, 整数型, , 
载入 (Logo窗口, , 假)
返回 (0)

.窗口程序集 Logo窗口程序集, , , 

.程序集变量 集_角度, 整数型, , , 
.程序集变量 集_落笔, 逻辑型, , , 
.程序集变量 集_中心坐标, 自定义_坐标, , , 
.程序集变量 集_当前坐标, 自定义_坐标, , , 
.程序集变量 集_Logo命令操作, 类_Logo命令, , , 
.子程序 _Logo窗口_创建完毕, 空白型, , 
.局部变量 图片号, 整数型, , , 

赋值 (Logo窗口., “Logo海龟画图”)

赋值 (图片号, 载入图片 (#资源_海龟图片))
图片号.画图片 (0, 0, , , 负 (取颜色值 (255, 0, 0)))
卸载图片 (图片号)

赋值 (集_中心坐标.X, 整除 (.宽度, 2))
赋值 (集_中心坐标.Y, 整除 (.高度, 2))
移动海龟 (集_中心坐标, 假)
赋值 (集_角度, 90)
赋值 (集_落笔, 真)


.子程序 _按钮_默认_被单击, 空白型, , 
.如果真 (等于 (分析和执行命令行 (.内容), 真))
    赋值 (.内容, 相加 (.内容, #换行符, .内容))
    赋值 (.被选择字符数, -1)
.如果真结束


.子程序 分析和执行命令行, 逻辑型, , 
.参数 参_命令行文本, 文本型, , 

.局部变量 逻辑值, 逻辑型, , , 
.局部变量 i, 整数型, , , 
.局部变量 命令集, 自定义_单个命令, , "0", 

赋值 (逻辑值, 假)
.如果真 (等于 (集_Logo命令操作.分析命令行 (参_命令行文本, 命令集), 真))
    .变量循环首 (1, 取数组成员数 (命令集), 1, i)
        执行单个命令 (命令集 [i], 名称, 命令集 [i], 参数)
    .变量循环尾 ()
    赋值 (逻辑值, 真)
.如果真结束
返回 (逻辑值)


.子程序 执行单个命令, 逻辑型, , 
.参数 参_命令名称, 文本型, , 
.参数 参_命令参数, 文本型, , 

.局部变量 逻辑值, 逻辑型, , , 
.局部变量 参数值, 整数型, , , 
.局部变量 新坐标, 自定义_坐标, , , 
.局部变量 海龟可视, 逻辑型, , , 
.局部变量 图片号, 整数型, , , 
.局部变量 位图数据, 字节集, , , 

赋值 (逻辑值, 真)
.判断开始 (大于 (取文本长度 (参_命令参数), 0))
     ' 单参命令
    
    赋值 (参数值, 到整数 (参_命令参数))
    .判断开始 (等于 (参_命令名称, “fd”))
        赋值 (新坐标.Y, 相减 (集_当前坐标.Y, 到整数 (相乘 (参数值, 求正弦 (相除 (相乘 (集_角度, #pi), 180))))))
        赋值 (新坐标.X, 相加 (集_当前坐标.X, 到整数 (相乘 (参数值, 求余弦 (相除 (相乘 (集_角度, #pi), 180))))))
        移动海龟 (新坐标, 真)
        
    .判断 (等于 (参_命令名称, “bk”))
        赋值 (新坐标.Y, 相加 (集_当前坐标.Y, 到整数 (相乘 (参数值, 求正弦 (相除 (相乘 (集_角度, #pi), 180))))))
        赋值 (新坐标.X, 相减 (集_当前坐标.X, 到整数 (相乘 (参数值, 求余弦 (相除 (相乘 (集_角度, #pi), 180))))))
        移动海龟 (新坐标, 真)
        
    .判断 (等于 (参_命令名称, “rt”))
        赋值 (集_角度, 相减 (集_角度, 参数值))
        
    .判断 (等于 (参_命令名称, “lt”))
        赋值 (集_角度, 相加 (集_角度, 参数值))
        
    .判断 (等于 (参_命令名称, “wait”))
        延迟 (相乘 (参数值, 10))
        
    .默认
        暂停 ()
        赋值 (逻辑值, 假)
    .判断结束
    
.默认
     ' 无参命令
    .判断开始 (等于 (参_命令名称, “pu”))
        赋值 (集_落笔, 假)
        
    .判断 (等于 (参_命令名称, “pd”))
        赋值 (集_落笔, 真)
        
    .判断 (等于 (参_命令名称, “ht”))
        赋值 (.可视, 假)
        
    .判断 (等于 (参_命令名称, “st”))
        赋值 (.可视, 真)
        
    .判断 (等于 (参_命令名称, “home”))
        移动海龟 (集_中心坐标, 真)
        赋值 (集_角度, 90)
        
    .判断 (等于 (参_命令名称, “draw”))
        .清除 ()
        移动海龟 (集_中心坐标, 假)
        赋值 (.可视, 真)
        赋值 (集_角度, 90)
        赋值 (集_落笔, 真)
        
    .判断 (等于 (参_命令名称, “cs”))
        .清除 ()
        移动海龟 (集_中心坐标, 假)
        赋值 (集_角度, 90)
        
    .判断 (等于 (参_命令名称, “clean”))
        .清除 ()
        重画 ()
        
    .判断 (等于 (参_命令名称, “fill”))
        .如果真 (等于 (集_落笔, 真))
            置等待鼠标 ()
            赋值 (海龟可视, .可视)
            
            .如果真 (等于 (海龟可视, 真))
                赋值 (.可视, 假)
                处理事件 ()
            .如果真结束
            集_Logo命令操作.填充画板区域 (集_当前坐标.X, 集_当前坐标.Y, )
            赋值 (.可视, 海龟可视)
            
            .如果真 (等于 (海龟可视, 真))
                重画 ()
            .如果真结束
            
            恢复鼠标 ()
        .如果真结束
        
    .默认
        暂停 ()
        赋值 (逻辑值, 假)
    .判断结束
    
.判断结束
返回 (逻辑值)


.子程序 移动海龟, 空白型, , 
.参数 参_新坐标, 自定义_坐标, , 
.参数 是否画线, 逻辑型, , 

相减 (参_新坐标.X, 整除 (.宽度, 2)).移动 (相减 (参_新坐标.Y, 整除 (.高度, 2)), , )
重画 ()
.如果真 (并且 (是否画线, 集_落笔))
    集_当前坐标.画直线 (.X, 集_当前坐标.Y, 参_新坐标.X, 参_新坐标.Y)
.如果真结束
赋值 (集_当前坐标, 参_新坐标)


.类模块 类_Logo命令, , , 

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 分析命令行, 逻辑型, 公开, 
.参数 参_命令行文本, 文本型, , 
.参数 参_命令集, 自定义_单个命令, 参考 数组, 

.局部变量 逻辑值, 逻辑型, , , 
.局部变量 i, 整数型, , , 
.局部变量 j, 整数型, , , 
.局部变量 是否参数, 逻辑型, , , 
.局部变量 单个代码, 整数型, , , 
.局部变量 单个字符, 文本型, , , 
.局部变量 命令节点, 自定义_单个命令, , , 

赋值 (逻辑值, 真)

赋值 (参_命令行文本, 到小写 (参_命令行文本))
赋值 (参_命令行文本, 删首空 (参_命令行文本))
.判断循环首 (不等于 (寻找文本 (参_命令行文本, “  ”, 1, 真), -1)) ' 寻找两个空格
    赋值 (参_命令行文本, 子文本替换 (参_命令行文本, “  ”, “ ”, 1, , 真)) ' 把文本中的两个空格替换成一个空格
.判断循环尾 ()
.如果真 (不等于 (取代码 (取文本右边 (参_命令行文本, 1), ), 64))
    赋值 (参_命令行文本, 相加 (删尾空 (参_命令行文本), “@”))
.如果真结束

赋值 (是否参数, 假)
赋值 (命令节点.名称, “”)
赋值 (命令节点.参数, “”)

.变量循环首 (1, 取文本长度 (参_命令行文本), 1, i)
    
    赋值 (单个字符, 取文本中间 (参_命令行文本, i, 1))
    赋值 (单个代码, 取代码 (单个字符, ))
    .判断开始 (并且 (大于或等于 (单个代码, 97), 小于或等于 (单个代码, 122))) ' a-z
        .判断开始 (等于 (是否参数, 真))
            检查 (大于 (取文本长度 (命令节点.名称), 0))
            加入成员 (参_命令集, 命令节点)
            赋值 (是否参数, 假)
            赋值 (命令节点.名称, 单个字符)
            赋值 (命令节点.参数, “”)
            
        .默认
            赋值 (命令节点.名称, 相加 (命令节点.名称, 单个字符))
        .判断结束
        
    .判断 (等于 (单个代码, 45)) ' -
        检查 (等于 (是否参数, 真))
        检查 (等于 (取文本长度 (命令节点.参数), 0))
        赋值 (命令节点.参数, 相加 (命令节点.参数, 单个字符))
        
    .判断 (并且 (大于或等于 (单个代码, 48), 小于或等于 (单个代码, 57))) ' 0-9
        检查 (等于 (是否参数, 真))
        赋值 (命令节点.参数, 相加 (命令节点.参数, 单个字符))
        
    .判断 (等于 (单个代码, 32)) ' 空格
        .判断开始 (等于 (是否参数, 真))
            检查 (大于 (取文本长度 (命令节点.名称), 0))
            加入成员 (参_命令集, 命令节点)
            赋值 (是否参数, 假)
            赋值 (命令节点.名称, “”)
            赋值 (命令节点.参数, “”)
            
        .默认
            检查 (大于 (取文本长度 (命令节点.名称), 0))
            赋值 (是否参数, 真)
        .判断结束
        
    .判断 (等于 (单个代码, 64)) ' @
        检查 (等于 (i, 取文本长度 (参_命令行文本)))
        .如果真 (大于 (取文本长度 (命令节点.名称), 0))
            加入成员 (参_命令集, 命令节点)
        .如果真结束
        跳出循环 ()
        
    .默认
        暂停 ()
        赋值 (逻辑值, 假)
        跳出循环 ()
    .判断结束
    
    
.变量循环尾 ()

.如果真 (等于 (逻辑值, 真))
    赋值 (逻辑值, 校验命令集 (参_命令集))
.如果真结束

返回 (逻辑值)


.子程序 校验命令集, 逻辑型, 公开, 
.参数 参_命令集, 自定义_单个命令, 参考 数组, 

.局部变量 逻辑值, 逻辑型, , , 
.局部变量 i, 整数型, , , 

赋值 (逻辑值, 真)
.变量循环首 (1, 取数组成员数 (参_命令集), 1, i)
    .判断开始 (等于 (寻找文本 (#常量_Logo单参可用命令, 参_命令集 [i], 名称, 1, 真), -1))
        
        .判断开始 (等于 (寻找文本 (#常量_Logo无参可用命令, 参_命令集 [i], 名称, 1, 真), -1))
            调试输出 (“错误命令”, 参_命令集 [i], 名称, 参_命令集 [i], 参数)
            赋值 (逻辑值, 假)
            跳出循环 ()
            
        .默认
             ' 必须无参数
            .如果真 (大于 (取文本长度 (参_命令集 [i], 参数), 0))
                调试输出 (“错误命令”, 参_命令集 [i], 名称, 参_命令集 [i], 参数)
                赋值 (逻辑值, 假)
                跳出循环 ()
            .如果真结束
            
        .判断结束
        
    .默认
         ' 必须有参数
        .如果真 (等于 (取文本长度 (参_命令集 [i], 参数), 0))
            调试输出 (“错误命令”, 参_命令集 [i], 名称, 参_命令集 [i], 参数)
            赋值 (逻辑值, 假)
            跳出循环 ()
        .如果真结束
        
    .判断结束
    
.变量循环尾 ()

返回 (逻辑值)


.子程序 填充画板区域, 逻辑型, 公开, 
.参数 参x, 整数型, , 
.参数 参y, 整数型, , 
.参数 参_画板, 画板, , 

.局部变量 原色, 整数型, , , 
.局部变量 填充定位, 整数型, , , 
.局部变量 填充区域, 自定义_坐标, , "0", 


.如果真 (小于 (参x, 0))
    赋值 (参x, 0)
.如果真结束
.如果真 (大于或等于 (参x, 参_画板.宽度))
    赋值 (参x, 相减 (参_画板.宽度, 1))
.如果真结束
.如果真 (小于 (参y, 0))
    赋值 (参y, 0)
.如果真结束
.如果真 (大于或等于 (参y, 参_画板.高度))
    赋值 (参y, 相减 (参_画板.高度, 1))
.如果真结束

赋值 (原色, 参_画板.取点 (参x, 参y))
.如果真 (等于 (原色, 参_画板.刷子颜色))
    暂停 ()
    返回 (假)
.如果真结束

重定义数组 (填充区域, 假, 相加 (参_画板.宽度, 参_画板.高度, 整除 (相乘 (参_画板.宽度, 参_画板.高度), 2)))
调试输出 (取数组成员数 (填充区域))

赋值 (填充定位, 1)
.判断循环首 (真)
    .如果真 (大于 (参x, 0))
        填涂画板小点 (相减 (参x, 1), 参y, 参_画板, 原色, 填充定位, 填充区域)
    .如果真结束
    .如果真 (小于 (参x, 相减 (参_画板.宽度, 1)))
        填涂画板小点 (相加 (参x, 1), 参y, 参_画板, 原色, 填充定位, 填充区域)
    .如果真结束
    .如果真 (大于 (参y, 0))
        填涂画板小点 (参x, 相减 (参y, 1), 参_画板, 原色, 填充定位, 填充区域)
    .如果真结束
    .如果真 (小于 (参y, 相减 (参_画板.高度, 1)))
        填涂画板小点 (参x, 相加 (参y, 1), 参_画板, 原色, 填充定位, 填充区域)
    .如果真结束
    
    .如果真 (等于 (填充定位, 1))
        参_画板.画点 (参x, 参y, 参_画板.刷子颜色)
        跳出循环 ()
    .如果真结束
    
    赋值 (填充定位, 相减 (填充定位, 1))
    赋值 (参x, 填充区域 [填充定位], X)
    赋值 (参y, 填充区域 [填充定位], Y)
.判断循环尾 ()

返回 (真)


.子程序 填涂画板小点, 空白型, , 
.参数 参x, 整数型, , 
.参数 参y, 整数型, , 
.参数 参_画板, 画板, , 
.参数 参_原色, 整数型, , 
.参数 参_填充定位, 整数型, 参考, 
.参数 参_填充区域, 自定义_坐标, 参考 数组, 

.局部变量 当前色, 整数型, , , 

赋值 (当前色, 参_画板.取点 (参x, 参y))
.如果真 (等于 (当前色, 参_原色))
    参_画板.画点 (参x, 参y, 参_画板.刷子颜色)
    赋值 (参_填充区域 [参_填充定位], X, 参x)
    赋值 (参_填充区域 [参_填充定位], Y, 参y)
    赋值 (参_填充定位, 相加 (参_填充定位, 1))
.如果真结束



 ' 不属于任何一个程序集、类模块的函数：
