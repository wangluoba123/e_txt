 ' 文件类型：Windows模块源码

 ' 程序名称：数据库操作模块
 ' 程序描述：
 ' 程序作者：本源码来自易语言资源网(www.5A5X.com)
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：             易语言资源网注意事项
--============   www.5A5X.com  =============--
* 易语言资源网为易语言官方站、易语言官方论坛提供辅助资源站；本易语言资源网( www.5A5X.com)所有软件和资料均为软件作者提供和网友推荐发布而来，其版权归该软件和程序源码的合法拥有者所有，本站易语言资源网整理收集仅供易语言用户学习和易语言技术研究探讨使用，不得用于任何商业用途。如果由于以上原因造成的版权纠纷本站概不负责！
* 本站资源未经许可,任何网站不得非法盗链及抄袭本站资源；如引用，请注明来自易语言资源网，谢谢合作！
--============   www.5A5X.com  =============--
 ' 版本号：1.0
 ' 创建号：0.0

窗口 窗口1
    左边 = 50
    顶边 = 50
    宽度 = 709
    高度 = 473
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假





 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 5 0 系统核心支持库
 ' sqlite3 {E5D631FE-E3C9-4eb3-A687-C89598FE6691} 2 0 Sqlite3数据库支持库
 ' iext5 {E5000198-4471-40e2-92BC-D0BA075BDBB2} 2 0 扩展界面支持库五
 ' spec A512548E76954B6E92C21055517615B0 3 0 特殊功能支持库
 ' RegEx 684944CB04624eb7BD5412A519421D34 2 0 正则表达式支持库
 ' iext 27bb20fdd3e145e4bee3db39ddd6e64c 2 0 扩展界面支持库一
 ' Figures {A00037C3-C1F8-4ae7-A724-475B2314045E} 2 0 自定义图形支持库
 ' eGrid 0B4337DA651B4b619ACF61334A7E8B47 2 0 高级表格支持库




数据类型 数据类型_配对字段值, , 
    .成员 字段名, 文本型, , , 
    .成员 字段值, 变体型, , , 


.程序集 程序集1, , , 

.子程序 _启动子程序, 整数型, , 请在本子程序中放置易模块初始化代码

_临时子程序 () ' 在初始化代码执行完毕后调用测试代码
返回 (0) ' 可以根据您的需要返回任意数值

.子程序 _临时子程序, 空白型, , 
 ' 本名称子程序用作测试程序用，仅在开发及调试环境中有效，编译发布程序前将被系统自动清空，请将所有用作测试的临时代码放在本子程序中。 ***注意不要修改本子程序的名称、参数及返回值类型。
载入 (窗口1, , 真)


.类模块 类_SQLITE操作, 类_数据库, , 

.程序集变量 _ite数据库, 未知类型0x20001, , , 
.程序集变量 _ite表, 未知类型0x20002, , , 
.程序集变量 _ite记录集, 未知类型0x20003, , , 
.程序集变量 匿名程序集变量_36, 空白型, , , 
.程序集变量 _分页_总记录数, 空白型, , , 
.程序集变量 _分页_当前操作页号, 空白型, , , 
.程序集变量 _分页_每页显示数量, 空白型, , , 
.程序集变量 _分页_总页数, 空白型, , , 
.程序集变量 _分页_显示分页情况组件, 未知类型0x30002, , , 用一个＂简单超文本框＂来显示分页情况，可以设置多彩颜色；
.程序集变量 _分页_SQL语句, 文本型, , , 一个查询类SQL语句，用在初始化时获取总记录数和生成分页SQL语句
.程序集变量 _分页_分页情况显示内容, 文本型, , , 供简单超文本组件用
.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用
 ' --========  易语言资源网  (www.5A5X.com)  ======--
 ' 努力创建完善、持续更新的易语言学习例程源码资源站
 ' --================   www.5A5X.com  ===========--
 ' --==================   易语言资源网注意事项  ================--
 ' * 易语言资源网为易语言官方站、易语言官方论坛提供辅助资源站；
 ' 本易语言资源网( www.5A5X.com)所有软件和资料均为软件作者提
 ' 供和网友推荐发布而来，其版权归该软件和程序源码的合法拥有者所
 ' 有，本站易语言资源网整理收集仅供易语言用户学习和易语言技术研
 ' 究探讨使用，不得用于任何商业用途。如果由于以上原因造成的版权
 ' 纠纷本站概不负责！
 ' * 本站资源未经许可，任何网站不得非法盗链及抄袭本站资源；如引用
 ' 页面，请注明来自易语言资源网，谢谢合作！
 ' --=====================   www.5A5X.com  ================--


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用
调试输出 (“子类被销毁了”)

.子程序 初始化_SQLITE, 逻辑型, 公开, 
.参数 参数据库路径, 文本型, , 

.如果真 (等于 (_ite数据库.未知支持库函数_30 (参数据库路径, ), 假))
    返回 (假)
.如果真结束
返回 (真)


.子程序 销毁_SQLITE, 空白型, 公开, 销毁数据库相关变量
_ite表.未知支持库函数_106 ()
_ite数据库.未知支持库函数_31 ()
调试输出 (“数据库销毁了”)
 ' 本源码来自易语言资源网(www.5A5X.com)

.子程序 添加纪录_批量, 整数型, 公开, 为指定表添加新纪录，返回值_已经存在此记录 ＝ 1 返回值_添加记录成功 ＝ 2 返回值_添加记录失败 ＝ 3
.参数 参表名, 文本型, , 
.参数 参操作数据, 数据类型_配对字段值, 数组, 一个2维数组

.局部变量 数量, 整数型, , , 
.局部变量 i, 整数型, , , 
.局部变量 成功执行, 逻辑型, , , 
.局部变量 匿名局部变量_50, 空白型, , , 
.局部变量 返回值_添加记录失败, 整数型, , , 
.局部变量 返回值_已经存在此记录, 整数型, , , 
.局部变量 返回值_添加记录成功, 整数型, , , 
.局部变量 匿名局部变量_54, 空白型, , , 
.局部变量 添加行数, 空白型, , , 
.局部变量 添加列数, 空白型, , , 
.局部变量 h, 整数型, , , 
.局部变量 l, 整数型, , , 

赋值 (返回值_已经存在此记录, 1)
赋值 (返回值_添加记录成功, 2)
赋值 (返回值_添加记录失败, 3)

赋值 (成功执行, 真)
赋值 (添加行数, 取数组下标 (参操作数据, 1))
赋值 (添加列数, 取数组下标 (参操作数据, 2))
.如果真 (等于 (_ite表.未知支持库函数_105 (参表名, _ite数据库), 假))
    返回 (返回值_添加记录失败)
.如果真结束


.计次循环首 (添加行数, h)
    _ite表.未知支持库函数_121 ()
    .计次循环首 (添加列数, l)
        .如果真 (等于 (参操作数据.取类型 ( [h] [l], 字段值), #变体类型.数值型))
            调试输出 (i, 参操作数据 [h] [l], 字段名, “数值型”, 参操作数据.取数值 ( [h] [l], 字段值, ))
            赋值 (成功执行, 并且 (成功执行, _ite表.未知支持库函数_136 (参操作数据 [h] [l], 字段名, 参操作数据.取数值 ( [h] [l], 字段值, ))))
        .如果真结束
        
        .如果真 (等于 (参操作数据.取类型 ( [h] [l], 字段值), #变体类型.文本型))
            调试输出 (i, 参操作数据 [h] [l], 字段名, “文本型”, 参操作数据.取文本 ( [h] [l], 字段值, ))
            赋值 (成功执行, 并且 (成功执行, _ite表.未知支持库函数_136 (参操作数据 [h] [l], 字段名, 参操作数据.取文本 ( [h] [l], 字段值, ))))
        .如果真结束
        
        .如果真 (等于 (参操作数据.取类型 ( [h] [l], 字段值), #变体类型.逻辑型))
            调试输出 (i, 参操作数据 [h] [l], 字段名, “逻辑型”, 参操作数据.取逻辑值 ( [h] [l], 字段值, ))
            赋值 (成功执行, 并且 (成功执行, _ite表.未知支持库函数_136 (参操作数据 [h] [l], 字段名, 参操作数据.取逻辑值 ( [h] [l], 字段值, ))))
        .如果真结束
        
        .如果真 (等于 (参操作数据.取类型 ( [h] [l], 字段值), #变体类型.日期型))
            调试输出 (i, 参操作数据 [h] [l], 字段名, “日期型”, 参操作数据.取日期 ( [h] [l], 字段值, ))
            赋值 (成功执行, 并且 (成功执行, _ite表.未知支持库函数_136 (参操作数据 [h] [l], 字段名, 参操作数据.取日期 ( [h] [l], 字段值, )))) ' TODO 此处可能需要修改为SQLITE支持的日期格式
        .如果真结束
        
        .如果真 (等于 (参操作数据.取类型 ( [h] [l], 字段值), #变体类型.数值型数组)) ' 字节集字段为变体型的＂数值型数组＂
            调试输出 (i, 参操作数据 [h] [l], 字段名, “字节集型”, 参操作数据.取字节集 ( [h] [l], 字段值, ))
            赋值 (成功执行, 并且 (成功执行, _ite表.未知支持库函数_136 (参操作数据 [h] [l], 字段名, 参操作数据.取字节集 ( [h] [l], 字段值, ))))
        .如果真结束
        
        
    .计次循环尾 ()
    _ite表.未知支持库函数_123 ()
.计次循环尾 ()
 ' .如果 (_ite表.未知支持库函数_123 ())
     ' _ite表.关闭 ()
     ' 返回 (返回值_添加记录成功)
.否则
     ' _ite表.关闭 ()
     ' 返回 (返回值_添加记录失败)
.如果结束
返回 (0)


.子程序 添加纪录, 整数型, , 为指定表添加新纪录，返回值_已经存在此记录 ＝ 1 返回值_添加记录成功 ＝ 2 返回值_添加记录失败 ＝ 3
.参数 参表名, 文本型, , 
.参数 参操作数据, 数据类型_配对字段值, 数组, 
.参数 参判断是否重复_SQL查询语句where部分, 文本型, 可空, 可空，如空则不进行重复判断；添加记录前先执行该语句判断是否存在欲添加记录的某个值如果存在查询记录值将返回固定标记值＂1＂。

.局部变量 数量, 整数型, , , 
.局部变量 i, 整数型, , , 
.局部变量 成功执行, 逻辑型, , , 
.局部变量 匿名局部变量_65, 空白型, , , 
.局部变量 返回值_添加记录失败, 整数型, , , 
.局部变量 返回值_已经存在此记录, 整数型, , , 
.局部变量 返回值_添加记录成功, 整数型, , , 

赋值 (返回值_已经存在此记录, 1)
赋值 (返回值_添加记录成功, 2)
赋值 (返回值_添加记录失败, 3)

赋值 (成功执行, 真)
赋值 (数量, 取数组成员数 (参操作数据))
.如果真 (等于 (_ite表.未知支持库函数_105 (参表名, _ite数据库), 假))
    返回 (返回值_添加记录失败)
.如果真结束

 ' 查找欲添加记录是否已经存在
.如果真 (等于 (是否为空 (参判断是否重复_SQL查询语句where部分), 假))
    .如果真 (_ite表.未知支持库函数_126 (参判断是否重复_SQL查询语句where部分))
        _ite表.未知支持库函数_106 ()
        返回 (返回值_已经存在此记录)
    .如果真结束
    
.如果真结束

_ite表.未知支持库函数_121 ()
.计次循环首 (数量, i)
    .如果真 (等于 (参操作数据.取类型 ( [i], 字段值), #变体类型.数值型))
        调试输出 (i, 参操作数据 [i], 字段名, “数值型”, 参操作数据.取数值 ( [i], 字段值, ))
        赋值 (成功执行, 并且 (成功执行, _ite表.未知支持库函数_136 (参操作数据 [i], 字段名, 参操作数据.取数值 ( [i], 字段值, ))))
    .如果真结束
    
    .如果真 (等于 (参操作数据.取类型 ( [i], 字段值), #变体类型.文本型))
        调试输出 (i, 参操作数据 [i], 字段名, “文本型”, 参操作数据.取文本 ( [i], 字段值, ))
        赋值 (成功执行, 并且 (成功执行, _ite表.未知支持库函数_136 (参操作数据 [i], 字段名, 参操作数据.取文本 ( [i], 字段值, ))))
    .如果真结束
    
    .如果真 (等于 (参操作数据.取类型 ( [i], 字段值), #变体类型.逻辑型))
        调试输出 (i, 参操作数据 [i], 字段名, “逻辑型”, 参操作数据.取逻辑值 ( [i], 字段值, ))
        赋值 (成功执行, 并且 (成功执行, _ite表.未知支持库函数_136 (参操作数据 [i], 字段名, 参操作数据.取逻辑值 ( [i], 字段值, ))))
    .如果真结束
    
    .如果真 (等于 (参操作数据.取类型 ( [i], 字段值), #变体类型.日期型))
        调试输出 (i, 参操作数据 [i], 字段名, “日期型”, 参操作数据.取日期 ( [i], 字段值, ))
        赋值 (成功执行, 并且 (成功执行, _ite表.未知支持库函数_136 (参操作数据 [i], 字段名, 参操作数据.取日期 ( [i], 字段值, )))) ' TODO 此处可能需要修改为SQLITE支持的日期格式
    .如果真结束
    
    .如果真 (等于 (参操作数据.取类型 ( [i], 字段值), #变体类型.数值型数组)) ' 字节集字段为变体型的＂数值型数组＂
        调试输出 (i, 参操作数据 [i], 字段名, “字节集型”, 参操作数据.取字节集 ( [i], 字段值, ))
        赋值 (成功执行, 并且 (成功执行, _ite表.未知支持库函数_136 (参操作数据 [i], 字段名, 参操作数据.取字节集 ( [i], 字段值, ))))
    .如果真结束
    
.计次循环尾 ()
.如果真 (成功执行)
    .如果 (_ite表.未知支持库函数_123 ())
        _ite表.未知支持库函数_106 ()
        返回 (返回值_添加记录成功)
    .否则
        _ite表.未知支持库函数_106 ()
        返回 (返回值_添加记录失败)
    .如果结束
    
.如果真结束
返回 (返回值_添加记录失败)


.子程序 读取记录_单个字段_文本值, 文本型, , 
.参数 参表名, 文本型, , 
.参数 参字段名称, 文本型, , 
.参数 参查询条件, 文本型, , 
.参数 参字段值, 文本型, , 

.如果真 (_ite数据库.未知支持库函数_54 (参表名, 参字段名称, 参查询条件, 参字段值))
    返回 (参字段值)
.如果真结束
返回 (“”)

.子程序 读取记录_多个字段, 逻辑型, 公开, 
.参数 参表名, 文本型, , 
.参数 参查找条件, 文本型, , select语句中where子句的一部分
.参数 参操作数据, 数据类型_配对字段值, 数组, 即提供字段名同时提供保存读取到的值，调用时需给字段值成员指定一个相同类型的值用作区分该字段的类型

.局部变量 成功执行, 逻辑型, , , 
.局部变量 数量, 整数型, , , 
.局部变量 i, 整数型, , , 

赋值 (成功执行, _ite表.未知支持库函数_105 (参表名, _ite数据库))
赋值 (成功执行, 并且 (成功执行, _ite表.未知支持库函数_126 (参查找条件)))
.如果真 (等于 (成功执行, 假))
    返回 (假)
.如果真结束

赋值 (数量, 取数组成员数 (参操作数据))
.计次循环首 (数量, i)
    .如果真 (等于 (参操作数据.取类型 ( [i], 字段值), #变体类型.数值型))
        调试输出 (i, 参操作数据 [i], 字段名, “数值型”, 参操作数据.取数值 ( [i], 字段值, ))
        参操作数据.赋值 ( [i], 字段值, _ite表.未知支持库函数_138 (参操作数据 [i], 字段名, 成功执行), )
        .如果真 (等于 (成功执行, 假))
            返回 (假)
        .如果真结束
        
    .如果真结束
    
    .如果真 (等于 (参操作数据.取类型 ( [i], 字段值), #变体类型.文本型))
        调试输出 (i, 参操作数据 [i], 字段名, “文本型”, 参操作数据.取文本 ( [i], 字段值, ))
        参操作数据.赋值 ( [i], 字段值, _ite表.未知支持库函数_137 (参操作数据 [i], 字段名, 成功执行), )
        .如果真 (等于 (成功执行, 假))
            返回 (假)
        .如果真结束
        
    .如果真结束
    
    .如果真 (等于 (参操作数据.取类型 ( [i], 字段值), #变体类型.逻辑型))
        调试输出 (i, 参操作数据 [i], 字段名, “逻辑型”, 参操作数据.取逻辑值 ( [i], 字段值, ))
        参操作数据.赋值 ( [i], 字段值, _ite表.未知支持库函数_142 (参操作数据 [i], 字段名, 成功执行), )
        .如果真 (等于 (成功执行, 假))
            返回 (假)
        .如果真结束
        
    .如果真结束
    
    .如果真 (等于 (参操作数据.取类型 ( [i], 字段值), #变体类型.日期型))
        调试输出 (i, 参操作数据 [i], 字段名, “日期型”, 参操作数据.取日期 ( [i], 字段值, ))
        参操作数据.赋值 ( [i], 字段值, _ite表.未知支持库函数_143 (参操作数据 [i], 字段名, 成功执行), ) ' TODO 此处可能需要修改为SQLITE支持的日期格式
        .如果真 (等于 (成功执行, 假))
            返回 (假)
        .如果真结束
        
    .如果真结束
    
    .如果真 (等于 (参操作数据.取类型 ( [i], 字段值), #变体类型.数值型数组)) ' 字节集字段为变体型的＂数值型数组＂
        调试输出 (i, 参操作数据 [i], 字段名, “字节集型”, 参操作数据.取字节集 ( [i], 字段值, ))
        参操作数据.赋值 ( [i], 字段值, _ite表.未知支持库函数_141 (参操作数据 [i], 字段名, 成功执行), )
        .如果真 (等于 (成功执行, 假))
            返回 (假)
        .如果真结束
        
    .如果真结束
    
.计次循环尾 ()
_ite表.未知支持库函数_106 ()
返回 (成功执行)

.子程序 修改记录, 整数型, , 返回值_已经存在此记录 ＝ 1 返回值_修改记录成功 ＝ 2 返回值_修改记录失败 ＝ 3
.参数 参表名, 文本型, , 
.参数 参查找条件定位语句, 文本型, , select语句中where子句的一部分，修改记录前使用该语句定位到欲修改记录位置。
.参数 参操作数据, 数据类型_配对字段值, 数组, 
.参数 参判断是否重复_SQL查询语句where部分, 文本型, 可空, 可空，如空则不进行重复判断；修改记录前先执行该语句判断是否存在欲添加记录的某个值如果存在查询记录值将返回固定标记值＂1＂。

.局部变量 成功执行, 逻辑型, , , 
.局部变量 数量, 整数型, , , 
.局部变量 i, 整数型, , , 
.局部变量 返回值_修改记录失败, 整数型, , , 
.局部变量 返回值_已经存在此记录, 整数型, , , 
.局部变量 返回值_修改记录成功, 整数型, , , 

赋值 (返回值_已经存在此记录, 1)
赋值 (返回值_修改记录成功, 2)
赋值 (返回值_修改记录失败, 3)

赋值 (成功执行, _ite表.未知支持库函数_105 (参表名, _ite数据库))
.如果真 (等于 (成功执行, 假))
    返回 (返回值_修改记录失败)
.如果真结束

 ' 查找搜索看看是否添加的记录已经存在了
.如果真 (等于 (是否为空 (参判断是否重复_SQL查询语句where部分), 假))
    .如果真 (_ite表.未知支持库函数_126 (参判断是否重复_SQL查询语句where部分))
        _ite表.未知支持库函数_106 ()
        返回 (返回值_已经存在此记录)
    .如果真结束
    
.如果真结束


赋值 (成功执行, _ite表.未知支持库函数_126 (参查找条件定位语句))
.如果真 (等于 (成功执行, 假))
    返回 (返回值_修改记录失败)
.如果真结束



赋值 (成功执行, 并且 (成功执行, _ite表.未知支持库函数_120 ()))
赋值 (数量, 取数组成员数 (参操作数据))
.计次循环首 (数量, i)
    .如果真 (等于 (参操作数据.取类型 ( [i], 字段值), #变体类型.数值型))
        调试输出 (i, 参操作数据 [i], 字段名, “数值型”, 参操作数据.取数值 ( [i], 字段值, ))
        赋值 (成功执行, 并且 (成功执行, _ite表.未知支持库函数_136 (参操作数据 [i], 字段名, 参操作数据.取数值 ( [i], 字段值, ))))
    .如果真结束
    
    .如果真 (等于 (参操作数据.取类型 ( [i], 字段值), #变体类型.文本型))
        调试输出 (i, 参操作数据 [i], 字段名, “文本型”, 参操作数据.取文本 ( [i], 字段值, ))
        赋值 (成功执行, 并且 (成功执行, _ite表.未知支持库函数_136 (参操作数据 [i], 字段名, 参操作数据.取文本 ( [i], 字段值, ))))
    .如果真结束
    
    .如果真 (等于 (参操作数据.取类型 ( [i], 字段值), #变体类型.逻辑型))
        调试输出 (i, 参操作数据 [i], 字段名, “逻辑型”, 参操作数据.取逻辑值 ( [i], 字段值, ))
        赋值 (成功执行, 并且 (成功执行, _ite表.未知支持库函数_136 (参操作数据 [i], 字段名, 参操作数据.取逻辑值 ( [i], 字段值, ))))
    .如果真结束
    
    .如果真 (等于 (参操作数据.取类型 ( [i], 字段值), #变体类型.日期型))
        调试输出 (i, 参操作数据 [i], 字段名, “日期型”, 参操作数据.取日期 ( [i], 字段值, ))
        赋值 (成功执行, 并且 (成功执行, _ite表.未知支持库函数_136 (参操作数据 [i], 字段名, 参操作数据.取日期 ( [i], 字段值, )))) ' TODO 此处可能需要修改为SQLITE支持的日期格式
    .如果真结束
    
    .如果真 (等于 (参操作数据.取类型 ( [i], 字段值), #变体类型.数值型数组)) ' 字节集字段为变体型的＂数值型数组＂
        调试输出 (i, 参操作数据 [i], 字段名, “字节集型”, 参操作数据.取字节集 ( [i], 字段值, ))
        赋值 (成功执行, 并且 (成功执行, _ite表.未知支持库函数_136 (参操作数据 [i], 字段名, 参操作数据.取字节集 ( [i], 字段值, ))))
    .如果真结束
    
.计次循环尾 ()
.如果真 (成功执行)
    .如果 (_ite表.未知支持库函数_123 ())
        _ite表.未知支持库函数_106 ()
        返回 (返回值_修改记录成功)
    .否则
        _ite表.未知支持库函数_106 ()
        返回 (返回值_修改记录失败)
    .如果结束
    
.如果真结束
返回 (返回值_修改记录失败)

.子程序 删除记录, 逻辑型, 公开, 
.参数 参表名, 文本型, , 
.参数 参条件, 文本型, , SQL语句的WHERE语句部分

.局部变量 SQL语句, 文本型, , , 

 ' DELETE FROM [%s] WHERE [%s] = %s
赋值 (SQL语句, 取文本 (“DELETE FROM [%s] WHERE %s”, 参表名, 参条件))
返回 (_ite数据库.未知支持库函数_32 (SQL语句))


.子程序 取记录集, 整数型, , 获取指定sql语句的记录集，返回获取到的数量如果找不到数据返回0同时关闭记录集，如果找到需要外部调用时关闭记录集。
.参数 参SQL语句, 文本型, , 
.参数 参记录集, 未知类型0x20003, 参考, 

.局部变量 记录数, 整数型, , , 

赋值 (参记录集, _ite数据库.未知支持库函数_33 (参SQL语句))
参记录集.未知支持库函数_190 ()
参记录集.未知支持库函数_198 ()
赋值 (记录数, 参记录集.未知支持库函数_208 ())
.如果真 (等于 (记录数, 0))
    参记录集.未知支持库函数_191 ()
    返回 (0)
.如果真结束
返回 (记录数)

.子程序 填充记录们to超级列表框, 空白型, 公开, 填充指定SQL语句获取的数据到表格，可以通过指定第三个参数设置是否在第一列显示序号，可以为表项设置表项数值(使用第四个参数)。
.参数 参SQL语句, 文本型, , 获取数据的SQL语句，格式如＂select [真实字段] AS 文本_列宽_显示名称．．．＂其中AS 后面为 ＂类型_列宽_显示名称＂类型具体为：＂文本，数值，小数，货币，逻辑，日期，图片＂不带型字；
.参数 参超级列表框, 超级列表框, , 
.参数 参显示顺序号, 文本型, 可空, 可空。设置序号列的名称格式为：数值_30_序号，如果该参数为空省略则不设置序号列，如果是分页类产生的sql语句将自动获取连续的序号值，如果是普通sql语句将从1开始生成；
.参数 参欲添加到表项数值的字段位置, 整数型, 可空, 可空。该值为参数SQL语句中的欲操作字段位置，只能为数字型字段。该位置指向的字段在SQL语句中可以只是一个字段名如＂id＂不必带列宽和类型，必须位于最好一个位置。

.局部变量 字段名称数组, 文本型, , "0", 
.局部变量 字段数量, 整数型, , , 
.局部变量 列数, 整数型, , , 
.局部变量 记录总数, 长整数型, , , 
.局部变量 i, 整数型, , , 
.局部变量 正则, 未知类型0x50001, , , 
.局部变量 搜索结果, 未知类型0x50002, , , 
.局部变量 字段名称, 文本型, , , 示例：文本_列宽_显示名称
.局部变量 字段名称_类型, 文本型, , , 示例：文本_列宽_显示名称，的前部分
.局部变量 字段名称_列宽, 整数型, , , 示例：文本_列宽_显示名称，的中间部分
.局部变量 字段名称_显示名, 文本型, , , 示例：文本_列宽_显示名称，的后部分
.局部变量 n, 整数型, , , 
.局部变量 文本值, 文本型, , , 
.局部变量 逻辑值, 逻辑型, , , 
.局部变量 数值值, 整数型, , , 
.局部变量 日期值, 日期时间型, , , 
.局部变量 图片值, 字节集, , , 
.局部变量 小数值, 双精度小数型, , , 
.局部变量 货币值, 双精度小数型, , , 
.局部变量 变体, 变体型, , , 
.局部变量 日期, 文本型, , , 
.局部变量 序号, 整数型, , , 设置了 显示序号后的序号设置变量
.局部变量 新表项位置, 整数型, , , 
.局部变量 欲添加表项数值内容, 整数型, , , 

参超级列表框.全部删除 ()

 ' 删除所有列
.判断循环首 (大于 (参超级列表框.取列数 (), 0))
    参超级列表框.删除列 (相减 (参超级列表框.取列数 (), 1))
.判断循环尾 ()
调试输出 (参超级列表框.取列数 (), 参超级列表框.取表项数 ())

赋值 (_ite记录集, _ite数据库.未知支持库函数_33 (参SQL语句))
_ite记录集.未知支持库函数_190 ()
_ite记录集.未知支持库函数_198 ()
赋值 (字段名称数组, _ite记录集.未知支持库函数_211 ())
赋值 (字段数量, 取数组成员数 (字段名称数组))
.如果 (是否为空 (参显示顺序号))
    赋值 (列数, 字段数量)
    
.否则
    赋值 (列数, 相加 (字段数量, 1)) ' 如果设置了显示序号参数列数加一
    插入成员 (字段名称数组, 1, 参显示顺序号) ' 在获取到的记录集的字段名数组中的最前面增加一个成员供下面循环填充表格用
.如果结束
赋值 (记录总数, _ite记录集.未知支持库函数_208 ())
正则.未知支持库函数_3 (“(.*)_(.*)_(.*)”, )

 ' 如果设置了获取某个值的字段在SQL语句参数中循环时总列数减去这个不显示的字段
赋值 (列数, 选择 (是否为空 (参欲添加到表项数值的字段位置), 列数, 相减 (列数, 1)))

 ' 设置表头
.计次循环首 (列数, i) ' 这个列数是上面某一行代码处理过的了，即有表项值字段的话去掉了这一列的数量
    赋值 (字段名称, 字段名称数组 [i])
    赋值 (搜索结果, 正则.未知支持库函数_7 (字段名称, 1, ))
    赋值 (字段名称_类型, 搜索结果.未知支持库函数_12 (字段名称, 1, ))
    赋值 (字段名称_列宽, 到数值 (搜索结果.未知支持库函数_12 (字段名称, 2, )))
    赋值 (字段名称_显示名, 搜索结果.未知支持库函数_12 (字段名称, 3, ))
    
    参超级列表框.插入列 (-1, 字段名称_显示名, 字段名称_列宽, #, , )
.计次循环尾 ()

 ' 根据SQL分页语句中的开始页设置序号，如果不是分页的语句将搜索不到从而从0开始填充序号；
正则.未知支持库函数_3 (“Limit(.*),”, )
赋值 (搜索结果, 正则.未知支持库函数_7 (参SQL语句, 1, ))
赋值 (序号, 到数值 (删全部空 (搜索结果.未知支持库函数_12 (参SQL语句, 1, ))))
正则.未知支持库函数_3 (“(.*)_(.*)_(.*)”, )

.计次循环首 (记录总数, n) ' 读取数据填充到表格
     ' 插入一个新行
    赋值 (欲添加表项数值内容, _ite记录集.未知支持库函数_216 (参欲添加到表项数值的字段位置, ))
    
     ' 插入一个新行(新表项)同时设置一个表项数值
    赋值 (新表项位置, 参超级列表框.插入表项 (-1, , , , , 欲添加表项数值内容))
    
     ' 循环设置当前行各个列的值
    .计次循环首 (列数, i) ' 这个列数是上面某一行代码处理过的了，即有表项值字段的话去掉了这一列的数量
        赋值 (字段名称, 字段名称数组 [i])
        赋值 (搜索结果, 正则.未知支持库函数_7 (字段名称, 1, ))
        赋值 (字段名称_类型, 搜索结果.未知支持库函数_12 (字段名称, 1, ))
        ' 本源码来自易语言资源网(www.5A5X.com)
        .如果真 (等于 (i, 1)) ' 如果当前列是插入的序号部分执行序号的插入
            .如果真 (等于 (是否为空 (参显示顺序号), 假))
                赋值 (序号, 相加 (序号, 1))
                参超级列表框.置标题 (新表项位置, 相减 (i, 1), 到文本 (序号))
                到循环尾 ()
            .如果真结束
            
        .如果真结束
        
        .判断开始 (等于 (字段名称_类型, “文本”))
            _ite记录集.未知支持库函数_192 (字段名称, 文本值)
            参超级列表框.置标题 (新表项位置, 相减 (i, 1), 文本值)
            
        .判断 (等于 (字段名称_类型, “数值”)) ' 数值型的也按文本型显示
            _ite记录集.未知支持库函数_192 (字段名称, 数值值)
            参超级列表框.置标题 (新表项位置, 相减 (i, 1), 到文本 (数值值))
            
        .判断 (等于 (字段名称_类型, “逻辑”))
            _ite记录集.未知支持库函数_192 (字段名称, 逻辑值)
            参超级列表框.置标题 (新表项位置, 相减 (i, 1), 到文本 (逻辑值))
            
        .判断 (等于 (字段名称_类型, “小数”)) ' 数值型的也按文本型显示
            _ite记录集.未知支持库函数_192 (字段名称, 小数值)
            参超级列表框.置标题 (新表项位置, 相减 (i, 1), 到文本 (小数值))
            
        .判断 (等于 (字段名称_类型, “货币”)) ' 这个用做显示货币
            _ite记录集.未知支持库函数_192 (字段名称, 货币值)
            参超级列表框.置标题 (新表项位置, 相减 (i, 1), 到文本 (货币值))
            
        .判断 (等于 (字段名称_类型, “日期”))
            _ite记录集.未知支持库函数_192 (字段名称, 日期值)
            .如果 ()

.子程序 分页_初始化, 空白型, 公开, 初始化分页操作
.参数 参每页显示数量, 整数型, , 
.参数 参显示分页情况组件, 未知类型0x30002, , 
.参数 参SQL语句, 文本型, , 用做获取总记录数和生成获取分页记录的SQL语句如：＂select * from [权限表]＂可以采用例如＂[id] as 数值_40_id＂的格式指定字段类型、显示宽度、显示名称。
.参数 参分页情况显示内容, 文本型, 可空, 分页的各个数据用以下3个模板代替：#总数#，#总页#，#当前页#；默认为：＂<b>共 #总数# 条记录 共 #总页# 页 当前第 <h5>#当前页#</h5> 页</b>＂；

赋值 (_分页_每页显示数量, 参每页显示数量)
赋值 (_分页_显示分页情况组件, 参显示分页情况组件)
赋值 (_分页_SQL语句, 参SQL语句)
.判断开始 (是否为空 (参分页情况显示内容))
    赋值 (_分页_分页情况显示内容, “<b>共 #总数# 条记录 共 #总页# 页 当前第 <h5>#当前页#</h5> 页</b>”)
.默认
    赋值 (_分页_分页情况显示内容, 参分页情况显示内容)
.判断结束

赋值 (_分页_当前操作页号, 1)
 ' 取总记录数和总页数并赋值成员变量
赋值 (_分页_总记录数, 分页_取分页_总记录数 (_分页_SQL语句))
赋值 (_分页_总页数, 分页_取分页_总页数 (_分页_总记录数))


.子程序 分页_取分页_总记录数, 整数型, , 
.参数 参SQL语句, 文本型, , 

.局部变量 分页总记录数, 整数型, , , 

赋值 (_ite记录集, _ite数据库.未知支持库函数_33 (参SQL语句))
_ite记录集.未知支持库函数_190 ()
赋值 (分页总记录数, _ite记录集.未知支持库函数_208 ())
_ite记录集.未知支持库函数_191 ()
返回 (分页总记录数)

.子程序 分页_取分页_总页数, 整数型, , 
.参数 参分页总记录数, 整数型, , 

.局部变量 分页总页数, 整数型, , , 

赋值 (分页总页数, 取整 (相除 (参分页总记录数, _分页_每页显示数量)))
.如果真 (不等于 (求余数 (参分页总记录数, _分页_每页显示数量), 0))
    赋值 (分页总页数, 相加 (分页总页数, 1))
.如果真结束
返回 (分页总页数)

.子程序 分页_取最新分页情况, 空白型, , 
.参数 参总记录数, 空白型, 参考 可空, 
.参数 参总页数, 空白型, 参考 可空, 
.参数 参当前操作页, 空白型, 参考 可空, 

赋值 (参总记录数, _分页_总记录数)
赋值 (参总页数, _分页_总页数)
赋值 (参当前操作页, _分页_当前操作页号)

.子程序 分页_取当前操作页号, 整数型, 公开, 
返回 (_分页_当前操作页号)

.子程序 分页_取每页显示行数, 整数型, 公开, 
返回 (_分页_每页显示数量)

.子程序 分页_重新设置最新总记录数和总页数, 空白型, , 在进行了删除、添加、修改、后使用重新获取到页数等...使用该方法后调用"取最新分页情况()"获取
 ' 取总记录数和总页数并赋值成员变量
赋值 (_分页_总记录数, 分页_取分页_总记录数 (_分页_SQL语句))
赋值 (_分页_总页数, 分页_取分页_总页数 (_分页_总记录数))


.子程序 分页_到首页, 文本型, , 操作成功返回SQL语句,已到达操作页返回空文本
.局部变量 SQL语句, 文本型, , , 

.如果真 (等于 (_分页_当前操作页号, 1))
     ' 信息框 (“当前已是首页”, 0, )
    返回 (“”)
.如果真结束
赋值 (_分页_当前操作页号, 1)
赋值 (SQL语句, 分页_生成分页SQL语句 ())
分页_刷新显示组件 ()
返回 (SQL语句)

.子程序 分页_到上一页, 文本型, , 操作成功返回SQL语句,已到达操作页返回空文本
.局部变量 SQL语句, 文本型, , , 

赋值 (_分页_当前操作页号, 相减 (_分页_当前操作页号, 1))
.如果真 (小于或等于 (_分页_当前操作页号, 0))
    赋值 (_分页_当前操作页号, 1)
     ' 信息框 (“当前已是首页”, 0, )
    返回 (“”)
.如果真结束
赋值 (SQL语句, 分页_生成分页SQL语句 ())
分页_刷新显示组件 ()
返回 (SQL语句)


.子程序 分页_到下一页, 文本型, , 操作成功返回SQL语句,已到达操作页返回空文本
.局部变量 SQL语句, 文本型, , , 

赋值 (_分页_当前操作页号, 相加 (_分页_当前操作页号, 1))
.如果真 (大于 (_分页_当前操作页号, _分页_总页数))
    赋值 (_分页_当前操作页号, _分页_总页数)
     ' 信息框 (“当前已是尾页”, 0, )
    返回 (“”)
.如果真结束
赋值 (SQL语句, 分页_生成分页SQL语句 ())
分页_刷新显示组件 ()
返回 (SQL语句)


.子程序 分页_到尾页, 文本型, , 操作成功返回SQL语句,已到达操作页返回空文本
.局部变量 SQL语句, 文本型, , , 

.如果真 (等于 (_分页_当前操作页号, _分页_总页数))
     ' 信息框 (“当前已是尾页”, 0, )
    返回 (“”)
.如果真结束
赋值 (_分页_当前操作页号, _分页_总页数)
赋值 (SQL语句, 分页_生成分页SQL语句 ())
分页_刷新显示组件 ()
返回 (SQL语句)


.子程序 分页_跳到某页, 文本型, , 返回SQL语句,如果指定SQL没有查找到任何数据也返回SQL语句供表格显示字段名称用
.参数 参欲跳到页号, 整数型, , 

.局部变量 SQL语句, 文本型, , , 

.如果真 (或者 (大于 (参欲跳到页号, _分页_总页数), 小于 (参欲跳到页号, 0)))
    赋值 (SQL语句, 分页_生成分页SQL语句 ())
    分页_刷新显示组件 ()
    返回 (SQL语句)
.如果真结束
.如果真 (等于 (参欲跳到页号, 0))
    赋值 (_分页_当前操作页号, 1)
    赋值 (SQL语句, 分页_生成分页SQL语句 ())
    分页_刷新显示组件 ()
    返回 (SQL语句)
.如果真结束
赋值 (_分页_当前操作页号, 参欲跳到页号)
赋值 (SQL语句, 分页_生成分页SQL语句 ())
分页_刷新显示组件 ()
返回 (SQL语句)

.子程序 分页_刷新显示组件, 空白型, , 
.局部变量 分页显示内容, 文本型, , , 

赋值 (分页显示内容, _分页_分页情况显示内容)
赋值 (分页显示内容, 子文本替换 (分页显示内容, “#总数#”, 到文本 (_分页_总记录数), , , 真))
赋值 (分页显示内容, 子文本替换 (分页显示内容, “#总页#”, 到文本 (_分页_总页数), , , 真))
赋值 (分页显示内容, 子文本替换 (分页显示内容, “#当前页#”, 到文本 (_分页_当前操作页号), , , 真))
 ' <b>共 #总数# 条记录 共 #总页# 页 当前第 <h5>#当前页#</h5> 页</b>
赋值 (_分页_显示分页情况组件., 到字节集 (分页显示内容))



.子程序 分页_生成分页SQL语句, 文本型, , 
.局部变量 开始记录号, 整数型, , , 

赋值 (开始记录号, 相乘 (_分页_每页显示数量, 相减 (_分页_当前操作页号, 1)))
返回 (相加 (_分页_SQL语句, “ Limit ”, 到文本 (开始记录号), “,”, 到文本 (_分页_每页显示数量)))


.类模块 类_数据库, , , 数据库操作基类

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用
 ' 测试发现
 ' 1.基类不用添加子类的成员
 ' 2.子类的销毁部分父类也会执行
 ' 3.子类里面的方法如果调用了内部不公开类，被覆盖的父类对应方法可能会正常执行

.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 初始化_SQLITE, 逻辑型, 公开, 
.参数 参数据库路径, 文本型, , 

返回 (真)


.子程序 销毁_SQLITE, 空白型, 公开, 销毁数据库相关变量


.子程序 添加纪录, 整数型, 公开, 为指定表添加新纪录，返回值_已经存在此记录 ＝ 1 返回值_添加记录成功 ＝ 2 返回值_添加记录失败 ＝ 3
.参数 参表名, 文本型, , 
.参数 参操作数据, 数据类型_配对字段值, 数组, 
.参数 参判断是否重复_SQL查询语句where部分, 文本型, 可空, 可空，如空则不进行重复判断；添加记录前先执行该语句判断是否存在欲添加记录的某个值如果存在查询记录值将返回固定标记值＂1＂。

返回 (0)
 ' 本源码来自易语言资源网(www.5A5X.com)

.子程序 添加纪录_批量, 整数型, 公开, 为指定表添加新纪录，返回值_已经存在此记录 ＝ 1 返回值_添加记录成功 ＝ 2 返回值_添加记录失败 ＝ 3
.参数 参表名, 文本型, , 
.参数 参操作数据, 数据类型_配对字段值, 数组, 一个2维数组

返回 (0)

.子程序 读取记录_单个字段_文本值, 文本型, 公开, 
.参数 参表名, 文本型, , 
.参数 参字段名称, 文本型, , 
.参数 参查询条件, 文本型, , 
.参数 参字段值, 文本型, , 

返回 (“”)

.子程序 读取记录_多个字段, 逻辑型, 公开, 
.参数 参表名, 文本型, , 
.参数 参查找条件, 文本型, , select语句中where子句的一部分
.参数 参操作数据, 数据类型_配对字段值, 数组, 即提供字段名同时提供保存读取到的值，调用时需给字段值成员指定一个相同类型的值用作区分该字段的类型

返回 (真)

.子程序 修改记录, 整数型, 公开, 返回值_已经存在此记录 ＝ 1 返回值_修改记录成功 ＝ 2 返回值_修改记录失败 ＝ 3
.参数 参表名, 文本型, , 
.参数 参查找条件定位语句, 文本型, , select语句中where子句的一部分，修改记录前使用该语句定位到欲修改记录位置。
.参数 参操作数据, 数据类型_配对字段值, 数组, 
.参数 参判断是否重复_SQL查询语句where部分, 文本型, 可空, 可空，如空则不进行重复判断；修改记录前先执行该语句判断是否存在欲添加记录的某个值如果存在查询记录值将返回固定标记值＂1＂。

返回 (0)

.子程序 删除记录, 逻辑型, 公开, 
.参数 参表名, 文本型, , 
.参数 参条件, 文本型, , SQL语句的WHERE语句部分

.局部变量 SQL语句, 文本型, , , 

返回 (真)


.子程序 取记录集, 整数型, 公开, 获取指定sql语句的记录集，返回获取到的数量如果找不到数据返回0同时关闭记录集，如果找到需要外部调用时关闭记录集。
.参数 参SQL语句, 文本型, , 
.参数 参记录集, 未知类型0x20003, 参考, 

返回 (0)

.子程序 填充记录们to超级列表框, 空白型, 公开, 填充指定SQL语句获取的数据到表格，可以通过指定第三个参数设置是否在第一列显示序号，可以为表项设置表项数值(使用第四个参数)。
.参数 参SQL语句, 文本型, , 获取数据的SQL语句，格式如＂select [真实字段] AS 文本_列宽_显示名称．．．＂其中AS 后面为 ＂类型_列宽_显示名称＂类型具体为：＂文本，数值，小数，货币，逻辑，日期，图片＂不带型字；
.参数 参超级列表框, 超级列表框, , 
.参数 参显示顺序号, 文本型, 可空, 可空。设置序号列的名称格式为：数值_30_序号，如果该参数为空省略则不设置序号列，如果是分页类产生的sql语句将自动获取连续的序号值，如果是普通sql语句将从1开始生成；
.参数 参欲添加到表项数值的字段位置, 整数型, 可空, 可空。该值为参数SQL语句中的欲操作字段位置，只能为数字型字段。该位置指向的字段在SQL语句中可以只是一个字段名如＂id＂不必带列宽和类型，必须位于最好一个位置。



.子程序 填充记录们to高级表格, 空白型, 公开, 填充指定SQL语句获取的数据到表格，可以通过指定第三个参数设置是否在第一列显示序号。
.参数 参SQL语句, 文本型, , 获取数据的SQL语句，格式如＂select [真实字段] AS 文本_列宽_显示名称．．．＂其中AS 后面为 ＂类型_列宽_显示名称＂类型具体为：＂文本，数值，小数，货币，逻辑，日期，图片＂不带型字；
.参数 参高级表格, 未知类型0x80001, , 
.参数 参显示顺序号, 文本型, 可空, 设置序号列的名称格式为：数值_30_序号，如果该参数为空省略则不设置序号列，如果是带有Limit的分页类产生的sql语句将自动获取连续的序号值，如果是普通sql语句将从1开始生成；



.子程序 分页_初始化, 空白型, 公开, 初始化分页操作
.参数 参每页显示数量, 整数型, , 
.参数 参显示分页情况组件, 未知类型0x30002, , 
.参数 参SQL语句, 文本型, , 用做获取总记录数和生成获取分页记录的SQL语句如：＂select * from [权限表]＂可以采用例如＂[id] as 数值_40_id＂的格式指定字段类型、显示宽度、显示名称。
.参数 参分页情况显示内容, 文本型, 可空, 分页的各个数据用以下3个模板代替：#总数#，#总页#，#当前页#；默认为：＂<b>共 #总数# 条记录 共 #总页# 页 当前第 <h5>#当前页#</h5> 页</b>＂；



.子程序 分页_取分页_总记录数, 整数型, , 
.参数 参SQL语句, 文本型, , 

返回 (0)

.子程序 分页_取分页_总页数, 整数型, , 
.参数 参分页总记录数, 整数型, , 

返回 (0)

.子程序 分页_取最新分页情况, 空白型, 公开, 
.参数 参总记录数, 空白型, 参考 可空, 
.参数 参总页数, 空白型, 参考 可空, 
.参数 参当前操作页, 空白型, 参考 可空, 

' 本源码来自易语言资源网(www.5A5X.com)

.子程序 分页_取当前操作页号, 整数型, 公开, 
返回 (0)

.子程序 分页_取每页显示行数, 整数型, 公开, 
返回 (0)

.子程序 分页_重新设置最新总记录数和总页数, 空白型, 公开, 在进行了删除、添加、修改、后使用重新获取到页数等...使用该方法后调用"取最新分页情况()"获取


.子程序 分页_到首页, 文本型, 公开, 操作成功返回SQL语句,已到达操作页返回空文本
返回 (“”)

.子程序 分页_到上一页, 文本型, 公开, 操作成功返回SQL语句,已到达操作页返回空文本
返回 (“”)


.子程序 分页_到下一页, 文本型, 公开, 操作成功返回SQL语句,已到达操作页返回空文本
返回 (“”)


.子程序 分页_到尾页, 文本型, 公开, 操作成功返回SQL语句,已到达操作页返回空文本
返回 (“”)


.子程序 分页_跳到某页, 文本型, 公开, 返回SQL语句,如果指定SQL没有查找到任何数据也返回SQL语句供表格显示字段名称用
.参数 参欲跳到页号, 整数型, , 

返回 (“”)

.子程序 分页_刷新显示组件, 空白型, 公开, 


.子程序 分页_生成分页SQL语句_________这个是子类不公开的试试能否运行, 文本型, , 
返回 (“”)


.窗口程序集 窗口程序集1, , , 

.程序集变量 集数据库操作, 类_数据库, , , 
.子程序 _窗口1_创建完毕, 空白型, , 
.局部变量 sqlite, 类_SQLITE操作, , , 

赋值 (集数据库操作, sqlite)
 ' 集数据库操作.初始化_SQLITE ()



.子程序 _窗口1_将被销毁, 空白型, , 
集数据库操作.销毁_SQLITE ()



 ' 不属于任何一个程序集、类模块的函数：
