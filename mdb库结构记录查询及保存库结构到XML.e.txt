 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 821
    高度 = 574
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假





 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 5 0 系统核心支持库
 ' iext 27bb20fdd3e145e4bee3db39ddd6e64c 2 0 扩展界面支持库一
 ' eDB 46E94341933A462383A4DE26B146322C 2 0 数据库操作支持库
 ' EXMLParser BE2297B7415349c8A55BC9DFEB6DD11A 2 0 XML解析支持库




数据类型 字段, , 
    .成员 字段长度, 整数型, , , 
    .成员 字段类型, 整数型, , , 
    .成员 字段属性, 整数型, , , 
    .成员 字段名, 文本型, , , 


.DLL命令 目录是否存在, 逻辑型, "shlwapi.dll", "PathIsDirectoryA", , 判断目录是否存在
    .参数 pszPath, 文本型, , 

.窗口程序集 窗口程序集1, , , 

.程序集变量 库结构xml, 未知类型0x40001, , , 
.程序集变量 库文件路径, 文本型, , , 
.程序集变量 数据库密码, 文本型, , , 
.子程序 __启动窗口_创建完毕, 空白型, , 
赋值 (.类型, 0)
赋值 (.标题, “请选择 ACCESS 数据库文件：”)
赋值 (.过滤器, “ACCESS 文件（*.mdb）|*.mdb”)
赋值 (.初始目录, 相加 (取运行目录 (), “\data”))
.如果真 (等于 (库结构xml.未知支持库函数_0 (“库结构”), 假)) ' 该方法将在系统内存中按要求添加一个指定根节点的且只包含一个节点的XML树，并且该XML树只抽象存在于内存中，并没有生成对应的物理实现
    信息框 (“库结构.xml 文件建立出错”, 0, )
.如果真结束


.子程序 取mdb表名, 逻辑型, 公开, 取得mdb的所有表名。
.参数 mdb数据库, 文本型, , 要取表名的access数据库
.参数 数据库密码, 文本型, , 
.参数 表名, 文本型, 参考 数组, 文本数组，存储返回的表名

.局部变量 ADODB连接, 对象, , , 
.局部变量 连接文本, 文本型, , , 
.局部变量 表名列记录集, 对象, , , 
.局部变量 a, 整数型, , , 
.局部变量 对象型, 对象, , , 
.局部变量 变体型, 变体型, , , 
.局部变量 对象型1, 对象, , , 
.局部变量 数据库名, 文本型, , , 

清除数组 (表名)
赋值 (数据库名, 取文本右边 (mdb数据库, 相减 (取文本长度 (mdb数据库), 倒找文本 (mdb数据库, “\”, , 假))))
.如果真 (ADODB连接.创建 (“ADODB.Connection”, ))
    赋值 (连接文本, 相加 (“Provider=Microsoft.Jet.OLEDB.4.0”, “; Jet OLEDB:Database Password=”, 数据库密码, “ ;Data Source=”, mdb数据库)) ' 后面是数据库路径,密码的书写方式要正确
    ADODB连接.写属性 (“connectionstring”, 连接文本)
    ADODB连接.方法 (“open”, )
     ' 连接错误信息
    赋值 (对象型1, ADODB连接.读对象型属性 (“Errors”, ))
    .如果真 (等于 (对象型1.是否为空 (), 假))
        变体型.赋值 (0, )
        赋值 (对象型, 对象型1.读对象型属性 (“Item”, 变体型))
        .如果真 (等于 (对象型.是否为空 (), 假))
            返回 (假)
        .如果真结束
        
    .如果真结束
    赋值 (表名列记录集, ADODB连接.对象型方法 (“OpenSchema”, 20))
    .判断循环首 (等于 (表名列记录集.读逻辑属性 (“eof”, ), 假)) ' 循环取表名列表
        赋值 (对象型1, 表名列记录集.读对象型属性 (“Fields”, ))
        变体型.赋值 (“TABLE_TYPE”, ) ' 取表类型
        赋值 (对象型, 对象型1.读对象型属性 (“Item”, 变体型))
        赋值 (变体型, 对象型.读属性 (“Value”, ))
        .如果真 (等于 (变体型.取文本 (), “TABLE”))
             ' 取表名
            变体型.赋值 (“TABLE_NAME”, )
            赋值 (对象型, 对象型1.读对象型属性 (“Item”, 变体型))
            赋值 (变体型, 对象型.读属性 (“Value”, ))
            
            加入成员 (表名, 变体型.取文本 ())
            
             ' 0.加入项目 (变体型.取文本 (), 1, , )
         ' .如果真结束
        表名列记录集.方法 (“MoveNext”, )
    .判断循环尾 ()
.如果真结束
表名列记录集.方法 (“Close”, )
ADODB连接.方法 (“Close”, )
返回 (真)

.子程序 _按钮1_被单击, 空白型, , 
.局部变量 表名, 文本型, , "0", 

赋值 (数据库密码, .内容)
.如果真 (等于 (打开 (), 假))
    返回 ()
.如果真结束
赋值 (库文件路径, .文件名)
输出调试文本 (库文件路径)
.如果真 (等于 (取mdb表名 (.文件名, 数据库密码, 表名), 假))
    输出调试文本 (“取表名失败！”)
    返回 ()
.如果真结束
mdb库结构到xml (.文件名, 库结构xml) ' 读表结构到内存中的XML变量中
 ' 库结构xml.导出到文件 (取运行目录 () ＋ “\data\库xml.xml”, , , )

.如果真 (等于 (xml表名到组合框 (库结构xml, ), 假))
    输出调试文本 (“数据库表名到组合框失败！”)
    返回 ()
.如果真结束


.子程序 xml表名到组合框, 逻辑型, , 
.参数 库xml, 未知类型0x40001, , 
.参数 组合框, 组合框, , 

.局部变量 计次, 整数型, , , 
.局部变量 表名, 文本型, , , 
.局部变量 表数量, 整数型, , , 

组合框.清空 ()
.如果真 (等于 (库xml.未知支持库函数_5 (“@1”, 表数量), 假))
    返回 (假)
.如果真结束
赋值 (计次, 0)
.计次循环首 (表数量, 计次)
    赋值 (表名, 库xml.未知支持库函数_33 (相加 (“@1/@”, 到文本 (计次)), ))
    组合框.加入项目 (表名, )
.计次循环尾 ()
赋值 (组合框.现行选中项, 0)
_组合框1_列表项被选择 ()
返回 (真)

.子程序 _组合框1_列表项被选择, 空白型, , 
.局部变量 被选项, 整数型, , , 
.局部变量 字段文本, 字段, , , 
.局部变量 记录文本, 文本型, , , 
.局部变量 记录数值, 整数型, , , 
.局部变量 记录双精度, 双精度小数型, , , 
.局部变量 字段数组, 字段, , "0", 
.局部变量 字段计次, 整数型, , , 
.局部变量 n, 整数型, , , 
.局部变量 索引, 整数型, , , 
.局部变量 字段数, 整数型, , , 
.局部变量 记录内容数组, 文本型, , "0", 
.局部变量 sql, 文本型, , , 

清除数组 (字段数组)
全部删除 ()
.判断循环首 (大于 (取列数 (), 0)) ' 清空表列
    0.删除列 ()
.判断循环尾 ()
.如果真 (取反 (.未知支持库函数_1 (.文件名, 数据库密码)))
    信息框 (“打开数据库失败，请重新查看access 文件名，及路径！”, 0, )
    结束 ()
.如果真结束
.未知支持库函数_12 ()
 ' 记录集.打开 (组合框1.取项目文本 (组合框1.现行选中项), #数据表名)
库结构xml.未知支持库函数_33 (相加 (“@1/@”, 到文本 (相加 (.现行选中项, 1))), ).未知支持库函数_14 (#)
未知支持库函数_34 ()
赋值 (.最小位置, 0)
赋值 (.最大位置, .)
赋值 (.位置, 0)
赋值 (.内容, 相加 (“总共”, 到文本 (.), “条记录”))
库结构xml.未知支持库函数_5 (相加 (“@1/@”, 到文本 (相加 (.现行选中项, 1))), 字段数)
赋值 (字段计次, 0)
.计次循环首 (字段数, 字段计次) ' 取选中表各字段到字段数组中
    赋值 (字段文本.字段名, 库结构xml.未知支持库函数_33 (相加 (“@1/@”, 到文本 (相加 (.现行选中项, 1)), “/@”, 到文本 (字段计次)), ))
     ' 字段文本.字段名 ＝ 记录集.取字段名 (字段计次 － 1)
     ' XML树．取属性值文本 （节点全路径， 属性名， ［执行结果］）
    
     ' 字段文本.字段长度 ＝ 记录集.取字段定义长度 (字段计次 － 1)
    赋值 (字段文本.字段长度, 到整数 (库结构xml.未知支持库函数_37 (相加 (“@1/@”, 到文本 (相加 (.现行选中项, 1)), “/@”, 到文本 (字段计次)), “字段定义长度”, )))
    赋值 (字段文本.字段类型, 到整数 (库结构xml.未知支持库函数_37 (相加 (“@1/@”, 到文本 (相加 (.现行选中项, 1)), “/@”, 到文本 (字段计次)), “字段类型”, )))
    赋值 (字段文本.字段属性, 到整数 (库结构xml.未知支持库函数_37 (相加 (“@1/@”, 到文本 (相加 (.现行选中项, 1)), “/@”, 到文本 (字段计次)), “字段属性”, )))
    加入成员 (字段数组, 字段文本)
    输出调试文本 (相加 (“字段名:”, 字段文本.字段名, “  字段长度:”, 到文本 (字段文本.字段长度), “  字段类型:”, 到文本 (字段文本.字段类型), “  字段属性:”, 到文本 (字段文本.字段属性)))
    .如果真 (大于 (取列数 (), 相减 (字段计次, 1)))
        相减 (字段计次, 1).置列标题 (字段文本.字段名) ' 把字段名写入超级列表框1
    .如果真结束
    相减 (字段计次, 1).插入列 (字段文本.字段名, , , , )
    相减 (字段计次, 1).置列宽 (120)
.计次循环尾 ()

赋值 (字段计次, 0)
.计次循环首 (., 字段计次)
    清除数组 (记录内容数组)
    赋值 (n, 0)
    .计次循环首 (字段数, n)
        .判断开始 (等于 (字段数组 [n], 字段类型, #)) ' 整数型 3
            字段数组.未知支持库函数_29 ( [n], 字段名, 记录数值)
            加入成员 (记录内容数组, 到文本 (记录数值))
        .判断 (等于 (字段数组 [n], 字段类型, #)) ' 文本型 202
            字段数组.未知支持库函数_26 ( [n], 字段名, 记录文本)
            加入成员 (记录内容数组, 记录文本)
        .判断 (等于 (字段数组 [n], 字段类型, #)) ' 备注型 203
            字段数组.未知支持库函数_26 ( [n], 字段名, 记录文本)
            加入成员 (记录内容数组, 记录文本)
        .判断 (等于 (字段数组 [n], 字段类型, #)) ' 日期/时间 7
            字段数组.未知支持库函数_26 ( [n], 字段名, 记录文本)
            加入成员 (记录内容数组, 记录文本)
        .判断 (等于 (字段数组 [n], 字段类型, #)) ' 双精度字段 5
            字段数组.未知支持库函数_27 ( [n], 字段名, 记录双精度)
            加入成员 (记录内容数组, 到文本 (记录双精度))
        .判断 (等于 (字段数组 [n], 字段类型, #)) ' 记录集 205
            加入成员 (记录内容数组, “”)
        .判断 (等于 (字段数组 [n], 字段类型, #)) ' 货币号 6
            字段数组.未知支持库函数_26 ( [n], 字段名, 记录文本)
            加入成员 (记录内容数组, 到文本 (记录双精度))
        .判断 (等于 (字段数组 [n], 字段类型, #)) ' 逻辑型 11
            字段数组.未知支持库函数_26 ( [n], 字段名, 记录文本)
            加入成员 (记录内容数组, 记录文本)
        .默认
            
        .判断结束
        
         ' 输出调试文本 (记录文本)、#超变长二进制字段
    .计次循环尾 ()
    赋值 (n, 0)
    .计次循环首 (取数组成员数 (记录内容数组), n)
        .如果真 (等于 (n, 1))
            赋值 (索引, -1.插入表项 (记录内容数组 [n], , , , ))
        .如果真结束
        索引.置标题 (相减 (n, 1), 记录内容数组 [n])
    .计次循环尾 ()
    赋值 (.位置, 字段计次)
    赋值 (.内容, 到文本 (字段计次))
    未知支持库函数_36 ()
.计次循环尾 ()



.子程序 mdb库结构到xml, 逻辑型, , '需先建立根节点名，如果没有建立，返回假
.参数 数据库全路径及全名, 文本型, , 
.参数 库xml, 未知类型0x40001, , 

.局部变量 表名, 文本型, , "0", 
.局部变量 计次, 整数型, , , 
.局部变量 字段计次, 整数型, , , 
.局部变量 字段数, 整数型, , , 
.局部变量 根节点名, 文本型, , , 

清除数组 (表名)

.如果真 (等于 (库xml.未知支持库函数_4 (根节点名), 假)) ' 该方法将在系统内存中按要求添加一个指定根节点的且只包含一个节点的XML树，并且该XML树只抽象存在于内存中，并没有生成对应的物理实现
    返回 (假)
.如果真结束

.如果真 (等于 (取mdb表名 (数据库全路径及全名, 数据库密码, 表名), 假))
    输出调试文本 (“取表名失败！”)
    返回 (假)
.如果真结束

.如果真 (取反 (.未知支持库函数_1 (.文件名, 数据库密码)))
    信息框 (“打开数据库失败，请重新查看access 文件名，及路径！”, 0, )
    返回 (假)
    结束 ()
.如果真结束
.未知支持库函数_12 ()


.计次循环首 (取数组成员数 (表名), 计次)
    .如果真 (等于 (库xml.未知支持库函数_11 (“@1/”, 相加 (“表”, 到文本 (计次)), 表名 [计次], ), 假)) ' 全路径为：@1/...
        信息框 (“增加子节点名称失败”, 0, )
    .如果真结束
    
    表名.未知支持库函数_14 ( [计次], #)
    
    赋值 (字段数, .)
    .计次循环首 (字段数, 字段计次)
        .如果真 (等于 (库xml.未知支持库函数_11 (相加 (“@1/@”, 到文本 (计次)), 相加 (“字段”, 到文本 (字段计次)), 相减 (字段计次, 1).未知支持库函数_39 (), ), 假)) ' 全路径为：@1/@1...
            信息框 (“增加子节点名称失败”, 0, )
        .如果真结束
        .如果真 (等于 (库xml.未知支持库函数_12 (相加 (“@1/@”, 到文本 (计次), “/@”, 到文本 (字段计次)), “字段定义长度”, 到文本 (相减 (字段计次, 1).未知支持库函数_41 ())), 假)) ' 全路径为：@1/@1/01...
            信息框 (“增加子节点属性失败”, 0, )
        .如果真结束
        .如果真 (等于 (库xml.未知支持库函数_12 (相加 (“@1/@”, 到文本 (计次), “/@”, 到文本 (字段计次)), “字段类型”, 到文本 (相减 (字段计次, 1).未知支持库函数_43 ())), 假)) ' 全路径为：@1/@1/01...
            信息框 (“增加子节点属性失败”, 0, )
        .如果真结束
        .如果真 (等于 (库xml.未知支持库函数_12 (相加 (“@1/@”, 到文本 (计次), “/@”, 到文本 (字段计次)), “字段属性”, 到文本 (相减 (字段计次, 1).未知支持库函数_40 ())), 假)) ' 全路径为：@1/@1/01...
            信息框 (“增加子节点属性失败”, 0, )
        .如果真结束
        
    .计次循环尾 ()
.计次循环尾 ()
未知支持库函数_16 ()
未知支持库函数_3 ()
 ' 库xml.导出到文件 (取运行目录 () ＋ “\data\库xml1.xml”, , , )

返回 (真)

 ' 输出调试文本 (到文本 (库xml.取子节点个数 (“@1/”, )))


.子程序 _按钮3_被单击, 空白型, , 
.如果 (库结构xml.未知支持库函数_2 (相加 (取运行目录 (), “\原库结构.xml”), , , ))
    信息框 (“库结构xml导出成功”, 0, )
.否则
    信息框 (“库结构xml导出失败”, 0, )
.如果结束




 ' 不属于任何一个程序集、类模块的函数：
