 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 768
    高度 = 434
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    窗口类名 = “#$%#$%”
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “易文件管理器”
    帮助文件名 = “”



.图片 图片1, " ' 已保存到：D:\易语言学习\Data\易文件管理器.e\图片1", , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 5 0 系统核心支持库
 ' eGrid 0B4337DA651B4b619ACF61334A7E8B47 2 0 高级表格支持库
 ' shell 52F260023059454187AF826A3C07AF2A 3 0 操作系统界面功能支持库
 ' spec A512548E76954B6E92C21055517615B0 3 0 特殊功能支持库
 ' EThread 5F99C1642A2F4e03850721B4F5D7C3F8 2 0 多线程支持库





.DLL命令 创建事件同步对象, 空白型, "", "CreateEventA", , 
    .参数 lpEventAttributes, 整数型, , 
    .参数 bManualReset, 逻辑型, , 
    .参数 bInitialState, 逻辑型, , 
    .参数 lpName, 文本型, , 

.DLL命令 打开事件同步对象, 整数型, "", "OpenEventA", , 
    .参数 dwDesiredAccess, 整数型, , 
    .参数 bInheritHandle, 逻辑型, , 
    .参数 lpName, 文本型, , 

.DLL命令 SendMessage, 空白型, "", "SendMessageA", , 
    .参数 a, 整数型, , 
    .参数 b, 整数型, , 
    .参数 c, 整数型, , 
    .参数 d, 整数型, , 

.DLL命令 取句柄, 整数型, "", "FindWindowExA", , 
    .参数 a, 整数型, , 
    .参数 b, 整数型, , 
    .参数 c, 文本型, , 
    .参数 d, 文本型, , 

.DLL命令 可视窗口, 整数型, "", "ShowWindow", , 
    .参数 a, 整数型, , 
    .参数 b, 整数型, , 

.窗口程序集 窗口程序集1, , , 

.程序集变量 路径, 文本型, , , 
.程序集变量 找到组, 文本型, , "0", 
.程序集变量 找到组数, 整数型, , "0", 
.程序集变量 创建时间, 日期时间型, , "0", 
.程序集变量 修改时间, 日期时间型, , "0", 
.程序集变量 大小, 整数型, , "0", 
.程序集变量 显示类型, 整数型, , , 
.子程序 __启动窗口_创建完毕, 空白型, , 
.局部变量 i, 整数型, , , 
.局部变量 x, 整数型, , , 
.局部变量 y, 整数型, , , 
.局部变量 标签2, 按钮, , , 

 ' '高级表格2.从文件读 (取运行目录 () ＋ “\帮帮管理器数据库2.cf”)
.如果真 (不等于 (打开事件同步对象 (2031619, 假, “%^&%^&%^&%&%”), 0)) ' "myappname"可以是任何文本，但是最好要长一点以保证和系统中已有其他事件对象的名称不相冲突。
    调试输出 (可视窗口 (取句柄 (0, 0, “#$%#$%”, “易文件管理器”), 9))
    结束 ()
.如果真结束
未知支持库函数_0 (&初始, , )
.计次循环首 (25, i)
    .如果真 (等于 (x, 480))
        赋值 (x, -40)
        赋值 (y, 32)
    .如果真结束
    赋值 (x, 相加 (x, 40))
    复制窗口组件 (标签2)
    赋值 (标签2.标题, 字符 (相加 (65, i)))
    赋值 (标签2.左边, x)
    赋值 (标签2.顶边, y)
    赋值 (标签2.可视, 真)
.计次循环尾 ()
_按钮1_被单击 ()

.子程序 _按钮1_被单击, 空白型, , 
赋值 (., 1)
赋值 (路径, “”)
刷新文件 (相加 (取运行目录 (), “\”))
 ' '高级表格2.存到文件 (取运行目录 () ＋ “\帮帮管理器数据库2.cf”)

.子程序 刷新文件, 空白型, , 
.参数 父目录, 文本型, , 

.局部变量 K, 整数型, , , 
.局部变量 目录名, 文本型, , , 
.局部变量 fos, 对象, , , 
.局部变量 time, 对象, , , 
.局部变量 成员数, 整数型, , , 
.局部变量 首拼, 文本型, , , 
.局部变量 拼音, 整数型, , , 

清除数组 (找到组)
清除数组 (创建时间)
清除数组 (修改时间)
清除数组 (大小)
.如果真 (不等于 (取文本右边 (父目录, 1), “\”))
    赋值 (父目录, 相加 (父目录, “\”))
.如果真结束
赋值 (目录名, 寻找文件 (相加 (父目录, “*.e”), ))
fos.创建 (“Scripting.FileSystemObject”, )
.判断循环首 (不等于 (目录名, “”))
    .如果真 (并且 (不等于 (目录名, “.”), 不等于 (目录名, “..”)))
        加入成员 (找到组, 目录名)
        赋值 (time, fos.对象型方法 (“GetFile”, 相加 (父目录, 目录名)))
        加入成员 (创建时间, time.读日期属性 (“DateCreated”, ))
        加入成员 (修改时间, time.读日期属性 (“DateLastModified”, ))
        加入成员 (大小, 取文件尺寸 (相加 (父目录, “\”, 目录名)))
    .如果真结束
    赋值 (目录名, 寻找文件 ())
.判断循环尾 ()
赋值 (成员数, 取数组成员数 (找到组))
重定义数组 (找到组数, 假, 成员数)
.计次循环首 (成员数, K)
    .如果 (大于 (取代码 (找到组 [K], 1), -1))
        赋值 (首拼, 取文本左边 (找到组 [K], 1))
        赋值 (拼音, 取键码 (到大写 (首拼)))
    .否则
        赋值 (首拼, 取文本左边 (找到组 [K], 2))
        赋值 (拼音, 取键码 (到大写 (取文本左边 (取拼音 (首拼, 1), 1))))
    .如果结束
    赋值 (找到组数 [K], 拼音)
.计次循环尾 ()
.如果真 (等于 (显示类型, 0))
    按拼音排序 ()
.如果真结束
.如果真 (等于 (显示类型, 1))
    按创建时间排序 ()
.如果真结束
.如果真 (等于 (显示类型, 2))
    按修改时间排序 ()
.如果真结束
.如果真 (等于 (显示类型, 3))
    按大小排序 ()
.如果真结束
赋值 (., 相加 (成员数, 1))
.计次循环首 (成员数, K)
    K.未知支持库函数_9 (0, 1, 字符 (找到组数 [K]))
    K.未知支持库函数_9 (1, 1, 找到组 [K])
    K.未知支持库函数_9 (2, 1, 格式时间 (到文本 (创建时间 [K])))
    K.未知支持库函数_9 (3, 1, 格式时间 (到文本 (修改时间 [K])))
    K.未知支持库函数_9 (4, 1, 大小 [K])
.计次循环尾 ()

.子程序 _编辑框1_内容被改变, 空白型, , 
刷新文件2 (.目录, .内容)

.子程序 刷新文件2, 空白型, , 
.参数 父目录, 文本型, , 
.参数 参数, 文本型, , 

.局部变量 K, 整数型, , , 
.局部变量 目录名, 文本型, , , 

赋值 (., 1)
赋值 (K, 1)
.如果真 (不等于 (取文本右边 (父目录, 1), “\”))
    赋值 (父目录, 相加 (父目录, “\”))
.如果真结束
赋值 (目录名, 寻找文件 (相加 (父目录, “*.e”), ))
.判断循环首 (不等于 (目录名, “”))
    .如果真 (并且 (不等于 (目录名, “.”), 不等于 (目录名, “..”)))
        .如果真 (大于 (寻找文本 (目录名, 参数, , 真), -1))
            赋值 (., 相加 (K, 1))
            K.未知支持库函数_9 (0, 1, 到文本 (K))
            K.未知支持库函数_9 (1, 1, 目录名)
            赋值 (K, 相加 (K, 1))
            
        .如果真结束
        
    .如果真结束
    赋值 (目录名, 寻找文件 ())
.判断循环尾 ()

.子程序 _高级表格2_被双击, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 K, 整数型, , , 

赋值 (K, 未知支持库函数_3 ())

.如果真 (大于 (K, -1))
    未知支持库函数_6 (4, 相加 (.目录, “\”, 到文本 (K.未知支持库函数_10 (1))), , , )
.如果真结束



.子程序 __启动窗口_托盘事件, 空白型, , 
.参数 操作类型, 整数型, , 

.如果真 (等于 (操作类型, 1))
    赋值 (_启动窗口., 真)
    返回 ()
.如果真结束
.如果 (等于 (操作类型, 3))
    弹出菜单 ()
    
.否则
    
.如果结束


.子程序 取键码, 整数型, , 
.参数 键名, 文本型, , 

.如果真 (等于 (键名, “1”))
    赋值 (键名, “Y”)
.如果真结束
.如果真 (等于 (键名, “2”))
    赋值 (键名, “E”)
.如果真结束
.如果真 (等于 (键名, “3”))
    赋值 (键名, “S”)
.如果真结束
.如果真 (等于 (键名, “4”))
    赋值 (键名, “S”)
.如果真结束
.如果真 (等于 (键名, “5”))
    赋值 (键名, “W”)
.如果真结束
.如果真 (等于 (键名, “6”))
    赋值 (键名, “L”)
.如果真结束
.如果真 (等于 (键名, “7”))
    赋值 (键名, “Q”)
.如果真结束
.如果真 (等于 (键名, “8”))
    赋值 (键名, “B”)
.如果真结束
.如果真 (等于 (键名, “9”))
    赋值 (键名, “J”)
.如果真结束
.如果真 (等于 (键名, “0”))
    赋值 (键名, “S”)
.如果真结束
.如果真 (等于 (键名, “A”))
    返回 (65)
.如果真结束
.如果真 (等于 (键名, “B”))
    返回 (66)
.如果真结束
.如果真 (等于 (键名, “C”))
    返回 (67)
.如果真结束
.如果真 (等于 (键名, “D”))
    返回 (68)
.如果真结束
.如果真 (等于 (键名, “E”))
    返回 (69)
.如果真结束
.如果真 (等于 (键名, “F”))
    返回 (70)
.如果真结束
.如果真 (等于 (键名, “G”))
    返回 (71)
.如果真结束
.如果真 (等于 (键名, “H”))
    返回 (72)
.如果真结束
.如果真 (等于 (键名, “I”))
    返回 (73)
.如果真结束
.如果真 (等于 (键名, “J”))
    返回 (74)
.如果真结束
.如果真 (等于 (键名, “K”))
    返回 (75)
.如果真结束
.如果真 (等于 (键名, “L”))
    返回 (76)
.如果真结束
.如果真 (等于 (键名, “M”))
    返回 (77)
.如果真结束
.如果真 (等于 (键名, “N”))
    返回 (78)
.如果真结束
.如果真 (等于 (键名, “O”))
    返回 (79)
.如果真结束
.如果真 (等于 (键名, “P”))
    返回 (80)
.如果真结束
.如果真 (等于 (键名, “Q”))
    返回 (81)
.如果真结束
.如果真 (等于 (键名, “R”))
    返回 (82)
.如果真结束
.如果真 (等于 (键名, “S”))
    返回 (83)
.如果真结束
.如果真 (等于 (键名, “T”))
    返回 (84)
.如果真结束
.如果真 (等于 (键名, “U”))
    返回 (85)
.如果真结束
.如果真 (等于 (键名, “V”))
    返回 (86)
.如果真结束
.如果真 (等于 (键名, “W”))
    返回 (87)
.如果真结束
.如果真 (等于 (键名, “X”))
    返回 (88)
.如果真结束
.如果真 (等于 (键名, “Y”))
    返回 (89)
.如果真结束
.如果真 (等于 (键名, “Z”))
    返回 (90)
.如果真结束
返回 (0)

.子程序 _按钮2_被单击, 空白型, , 
.局部变量 i, 整数型, , , 
.局部变量 字符码, 整数型, , , 
.局部变量 lsan, 按钮, , , 

赋值 (lsan, 取事件组件 ())
赋值 (字符码, 取键码 (lsan.标题))
.如果真 (大于 (显示类型, 0))
    _按钮6_被单击 ()
.如果真结束

.计次循环首 (取数组成员数 (找到组), i)
    .如果真 (等于 (找到组数 [i], 字符码))
        i.未知支持库函数_0 (1)
        获取焦点 ()
        返回 ()
    .如果真结束
    
.计次循环尾 ()

.子程序 _目录框1_目录被改变, 空白型, , 
刷新文件 (.目录)

.子程序 __启动窗口_可否被关闭, 逻辑型, , 
赋值 (_启动窗口., 假)
置托盘图标 (#图片1, )
返回 (假)


.子程序 _高级表格2_鼠标右键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

未知支持库函数_3 ().未知支持库函数_0 (1)
调试输出 (未知支持库函数_3 ())


.子程序 _关闭_被选择, 空白型, , 
置托盘图标 ()
结束 ()

.子程序 _按钮4_被单击, 空白型, , 
赋值 (显示类型, 1)
刷新文件 (相加 (.目录, “\”))


.子程序 按拼音排序, 空白型, , 
.局部变量 成员数, 整数型, , , 
.局部变量 K, 整数型, , , 
.局部变量 首拼, 文本型, , , 
.局部变量 拼音, 整数型, , , 
.局部变量 z1, 整数型, , , 
.局部变量 s, 整数型, , , 
.局部变量 z, 文本型, , , 
.局部变量 z2, 日期时间型, , , 

赋值 (成员数, 取数组成员数 (找到组))
.计次循环首 (相减 (成员数, 1), K)
    赋值 (s, K)
    .判断循环首 (并且 (大于 (s, 0), 大于 (找到组数 [s], 找到组数 [相加 (s, 1)])))
        赋值 (z1, 找到组数 [s])
        赋值 (找到组数 [s], 找到组数 [相加 (s, 1)])
        赋值 (找到组数 [相加 (s, 1)], z1)
        赋值 (z1, 大小 [s])
        赋值 (大小 [s], 大小 [相加 (s, 1)])
        赋值 (大小 [相加 (s, 1)], z1)
        赋值 (z2, 创建时间 [s])
        赋值 (创建时间 [s], 创建时间 [相加 (s, 1)])
        赋值 (创建时间 [相加 (s, 1)], z2)
        赋值 (z2, 修改时间 [s])
        赋值 (修改时间 [s], 修改时间 [相加 (s, 1)])
        赋值 (修改时间 [相加 (s, 1)], z2)
        赋值 (z, 找到组 [s])
        赋值 (找到组 [s], 找到组 [相加 (s, 1)])
        赋值 (找到组 [相加 (s, 1)], z)
        赋值 (s, 相减 (s, 1))
    .判断循环尾 ()
.计次循环尾 ()

.子程序 _按钮3_被单击, 空白型, , 
赋值 (显示类型, 2)
刷新文件 (相加 (.目录, “\”))


.子程序 _按钮5_被单击, 空白型, , 
赋值 (显示类型, 3)
刷新文件 (相加 (.目录, “\”))

.子程序 按创建时间排序, 空白型, , 
.局部变量 成员数, 整数型, , , 
.局部变量 K, 整数型, , , 
.局部变量 z1, 整数型, , , 
.局部变量 s, 整数型, , , 
.局部变量 z, 文本型, , , 
.局部变量 z2, 日期时间型, , , 

赋值 (成员数, 取数组成员数 (找到组))
.计次循环首 (相减 (成员数, 1), K)
    赋值 (s, K)
    .判断循环首 (并且 (大于 (s, 0), 大于 (创建时间 [s], 创建时间 [相加 (s, 1)])))
        赋值 (z1, 找到组数 [s])
        赋值 (找到组数 [s], 找到组数 [相加 (s, 1)])
        赋值 (找到组数 [相加 (s, 1)], z1)
        赋值 (z1, 大小 [s])
        赋值 (大小 [s], 大小 [相加 (s, 1)])
        赋值 (大小 [相加 (s, 1)], z1)
        赋值 (z2, 创建时间 [s])
        赋值 (创建时间 [s], 创建时间 [相加 (s, 1)])
        赋值 (创建时间 [相加 (s, 1)], z2)
        赋值 (z2, 修改时间 [s])
        赋值 (修改时间 [s], 修改时间 [相加 (s, 1)])
        赋值 (修改时间 [相加 (s, 1)], z2)
        赋值 (z, 找到组 [s])
        赋值 (找到组 [s], 找到组 [相加 (s, 1)])
        赋值 (找到组 [相加 (s, 1)], z)
        赋值 (s, 相减 (s, 1))
    .判断循环尾 ()
.计次循环尾 ()

.子程序 按修改时间排序, 空白型, , 
.局部变量 成员数, 整数型, , , 
.局部变量 K, 整数型, , , 
.局部变量 首拼, 文本型, , , 
.局部变量 拼音, 整数型, , , 
.局部变量 z1, 整数型, , , 
.局部变量 s, 整数型, , , 
.局部变量 z, 文本型, , , 
.局部变量 z2, 日期时间型, , , 

赋值 (成员数, 取数组成员数 (找到组))
.计次循环首 (相减 (成员数, 1), K)
    赋值 (s, K)
    .判断循环首 (并且 (大于 (s, 0), 大于 (修改时间 [s], 修改时间 [相加 (s, 1)])))
        赋值 (z1, 找到组数 [s])
        赋值 (找到组数 [s], 找到组数 [相加 (s, 1)])
        赋值 (找到组数 [相加 (s, 1)], z1)
        赋值 (z1, 大小 [s])
        赋值 (大小 [s], 大小 [相加 (s, 1)])
        赋值 (大小 [相加 (s, 1)], z1)
        赋值 (z2, 创建时间 [s])
        赋值 (创建时间 [s], 创建时间 [相加 (s, 1)])
        赋值 (创建时间 [相加 (s, 1)], z2)
        赋值 (z2, 修改时间 [s])
        赋值 (修改时间 [s], 修改时间 [相加 (s, 1)])
        赋值 (修改时间 [相加 (s, 1)], z2)
        赋值 (z, 找到组 [s])
        赋值 (找到组 [s], 找到组 [相加 (s, 1)])
        赋值 (找到组 [相加 (s, 1)], z)
        赋值 (s, 相减 (s, 1))
    .判断循环尾 ()
.计次循环尾 ()


.子程序 按大小排序, 空白型, , 
.局部变量 成员数, 整数型, , , 
.局部变量 K, 整数型, , , 
.局部变量 首拼, 文本型, , , 
.局部变量 拼音, 整数型, , , 
.局部变量 z1, 整数型, , , 
.局部变量 s, 整数型, , , 
.局部变量 z, 文本型, , , 
.局部变量 z2, 日期时间型, , , 


赋值 (成员数, 取数组成员数 (找到组))
.计次循环首 (相减 (成员数, 1), K)
    赋值 (s, K)
    .判断循环首 (并且 (大于 (s, 0), 大于 (大小 [s], 大小 [相加 (s, 1)])))
        赋值 (z1, 找到组数 [s])
        赋值 (找到组数 [s], 找到组数 [相加 (s, 1)])
        赋值 (找到组数 [相加 (s, 1)], z1)
        赋值 (z1, 大小 [s])
        赋值 (大小 [s], 大小 [相加 (s, 1)])
        赋值 (大小 [相加 (s, 1)], z1)
        赋值 (z2, 创建时间 [s])
        赋值 (创建时间 [s], 创建时间 [相加 (s, 1)])
        赋值 (创建时间 [相加 (s, 1)], z2)
        赋值 (z2, 修改时间 [s])
        赋值 (修改时间 [s], 修改时间 [相加 (s, 1)])
        赋值 (修改时间 [相加 (s, 1)], z2)
        赋值 (z, 找到组 [s])
        赋值 (找到组 [s], 找到组 [相加 (s, 1)])
        赋值 (找到组 [相加 (s, 1)], z)
        赋值 (s, 相减 (s, 1))
    .判断循环尾 ()
.计次循环尾 ()


.子程序 格式时间, 文本型, , 
.参数 参数, 文本型, , 

赋值 (参数, 子文本替换 (参数, “年”, “-”, , 1, 真))
赋值 (参数, 子文本替换 (参数, “月”, “-”, , 1, 真))
赋值 (参数, 子文本替换 (参数, “日”, “-”, , 1, 真))
赋值 (参数, 子文本替换 (参数, “时”, “:”, , 1, 真))
赋值 (参数, 子文本替换 (参数, “分”, “:”, , 1, 真))
赋值 (参数, 子文本替换 (参数, “秒”, “”, , 1, 真))
返回 (参数)

.子程序 __启动窗口_将被销毁, 空白型, , 
置托盘图标 ()

.子程序 _按钮6_被单击, 空白型, , 
赋值 (显示类型, 0)
刷新文件 (相加 (.目录, “\”))

.子程序 初始, 空白型, , 
.局部变量 i, 整数型, , , 
.局部变量 x, 整数型, , , 
.局部变量 y, 整数型, , , 

创建事件同步对象 (0, 假, 假, “%^&%^&%^&%&%”)
0.未知支持库函数_9 (1, 1, “文件名”)
0.未知支持库函数_9 (2, 1, “创建时间”)
0.未知支持库函数_9 (3, 1, “修改时间”)
0.未知支持库函数_9 (4, 1, “大小”)
0.未知支持库函数_32 (20)
1.未知支持库函数_32 (200)
2.未知支持库函数_32 (125)
3.未知支持库函数_32 (125)
4.未知支持库函数_32 (60)
赋值 (.目录, 取运行目录 ())




 ' 不属于任何一个程序集、类模块的函数：
