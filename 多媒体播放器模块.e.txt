 ' 文件类型：Windows窗口程序

 ' 程序名称：冰川的多媒体播放器模块1.1
 ' 程序描述：目前支持CD和MP3
本模块调用winmm.dll动态链接库，一般windows会自带，请确保请确保该程序没有被删除。
 ' 程序作者：冰川
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：www.i702.com
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0





 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 6 系统核心支持库





.DLL命令 mciSendString, 整数型, "winmm.dll", "mciSendStringA", , 
    .参数 lpstrCommand, 文本型, , 
    .参数 lpstrReturnString, 文本型, , 
    .参数 uRetutnlength, 整数型, , 
    .参数 hwndCallback, 整数型, , 

.程序集 程序集1, , , 

.子程序 _启动子程序, 整数型, , 请在本子程序中放置易模块初始化代码


_临时子程序 () ' 在模块初始化代码执行完毕后调用模块测试代码
返回 (0)

.子程序 _临时子程序, 空白型, , 
 ' 本名称子程序用作测试程序用，仅在开发及调试环境中有效，编译发布程序前将被系统自动清空，请将所有用作测试的临时代码放在本子程序中。 ***注意不要修改本子程序的参数及返回值类型。


.程序集 _接口程序集, , , 在本程序集中定义的子程序可被模块外部程序访问，注意如果不存在本程序集就不能作为易模块编译。

.程序集变量 lRet, 整数型, , , 
.程序集变量 设备名, 文本型, , , 
.程序集变量 第几曲, 整数型, , , 
.子程序 设备名称, 空白型, , 欲设置设备名称
.参数 设备名称, 文本型, , 播放设备，如：CD

赋值 (设备名, 设备名称)

.子程序 光驱开关, 整数型, , 
.参数 开关, 逻辑型, , 打开光驱为真，关闭光驱为假

.如果 (等于 (开关, 真))
    赋值 (lRet, mciSendString (“set CDAudio door open”, “”, 0, 0))
.否则
    赋值 (lRet, mciSendString (“set CDAudio door closed”, “”, 0, 0))
.如果结束
返回 (lRet)

.子程序 初始化设备, 整数型, , 设置设备为使用状态，并设置时间格式
.参数 时间格式, 文本型, , 时间格式，请设为“毫秒”

.如果真 (或者 (等于 (设备名, “CD”), 等于 (设备名, “cd”)))
    赋值 (lRet, mciSendString (“open cdaudio alias cd wait”, “”, 0, 0))
.如果真结束
.如果真 (或者 (等于 (设备名, “MP3”), 等于 (设备名, “mp3”)))
    赋值 (lRet, mciSendString (“open mp3file Alias sonido”, “”, 0, 0))
.如果真结束
.如果真 (等于 (时间格式, “毫秒”))
    赋值 (lRet, mciSendString (“set cd time format tmsf wait”, “”, 0, 0))
.如果真结束

返回 (lRet)


.子程序 显示时间, 文本型, , 返回当前时间位置
.局部变量 播放位置, 文本型, , , 
.局部变量 秒, 文本型, , , 
.局部变量 分, 文本型, , , 
.局部变量 毫秒, 文本型, , , 
.局部变量 g, 整数型, , , 

赋值 (播放位置, 取空白文本 (129))
.如果真 (或者 (等于 (设备名, “CD”), 等于 (设备名, “cd”)))
    mciSendString (“status cd position”, 播放位置, 128, 0)
.如果真结束
.如果真 (或者 (等于 (设备名, “MP3”), 等于 (设备名, “mp3”)))
    mciSendString (“status MM position”, 播放位置, 128, 0)
    赋值 (g, 取整 (相除 (到数值 (播放位置), 10)))
    赋值 (秒, 到文本 (取整 (相除 (求余数 (g, 6000), 100))))
    赋值 (分, 到文本 (取整 (相除 (g, 6000))))
    赋值 (毫秒, 到文本 (求余数 (g, 6000, 100)))
    .如果真 (等于 (取文本长度 (毫秒), 1))
        赋值 (毫秒, 相加 (“0”, 毫秒))
    .如果真结束
    .如果真 (等于 (取文本长度 (秒), 1))
        赋值 (秒, 相加 (“0”, 秒))
    .如果真结束
    .如果真 (等于 (取文本长度 (分), 1))
        赋值 (分, 相加 (“0”, 分))
    .如果真结束
    赋值 (播放位置, 相加 (分, “:”, 秒, “:”, 毫秒))
.如果真结束
赋值 (第几曲, 到数值 (取文本左边 (播放位置, 2)))
返回 (播放位置)

.子程序 播放, 整数型, , 播放设备命令
.参数 文件名, 文本型, , 

.如果真 (或者 (等于 (设备名, “CD”), 等于 (设备名, “cd”)))
    赋值 (lRet, mciSendString (“play cd”, “”, 0, 0)) ' 播放命令
.如果真结束
.如果真 (或者 (等于 (设备名, “MP3”), 等于 (设备名, “mp3”)))
    
    赋值 (lRet, mciSendString (相加 (“Open ”, 文件名, “ Alias MM”), “”, 0, 0)) ' 播放命令
    赋值 (lRet, mciSendString (“play MM”, “”, 0, 0)) ' 播放命令
    
.如果真结束

返回 (lRet)

.子程序 停止, 整数型, , 设备停止或暂停
.参数 停止, 逻辑型, , 停止为真，暂停为假

.如果真 (或者 (等于 (设备名, “CD”), 等于 (设备名, “cd”)))
    赋值 (lRet, mciSendString (“stop cd wait”, “”, 0, 0)) ' 暂停命令
    .如果真 (等于 (停止, 真))
        赋值 (lRet, mciSendString (“close cd”, “”, 0, 0)) ' 停止命令
    .如果真结束
    
.如果真结束
.如果真 (或者 (等于 (设备名, “MP3”), 等于 (设备名, “mp3”)))
    .如果 (等于 (停止, 真))
        赋值 (lRet, mciSendString (“Stop MM”, “”, 0, 0)) ' 播放命令
        赋值 (lRet, mciSendString (“close MM”, “”, 0, 0)) ' 播放命令
    .否则
        赋值 (lRet, mciSendString (“Pause MM”, “”, 0, 0)) ' 播放命令
    .如果结束
    
.如果真结束

返回 (lRet)

.子程序 快进快退, 空白型, , 
.参数 毫秒1, 整数型, , 一般取500，快进为500,快退为-500
.参数 定义位置, 整数型, , 设置当前播放位置，一般与滑块条配合使用

.局部变量 秒, 文本型, , , 
.局部变量 分, 文本型, , , 
.局部变量 毫秒, 文本型, , , 
.局部变量 播放位置, 文本型, , , 
.局部变量 g, 整数型, , , 

.如果真 (或者 (等于 (设备名, “CD”), 等于 (设备名, “cd”)))
    赋值 (播放位置, 取空白文本 (129))
    mciSendString (“status cd position”, 播放位置, 128, 0) ' 获取已播放时间
    赋值 (g, 相加 (到数值 (取文本右边 (播放位置, 2)), 相乘 (到数值 (取文本左边 (取文本右边 (播放位置, 5), 2)), 100), 相乘 (到数值 (取文本左边 (取文本右边 (播放位置, 8), 2)), 6000), 毫秒1))
    .如果真 (不等于 (定义位置, 0))
        赋值 (g, 定义位置)
    .如果真结束
    赋值 (秒, 到文本 (取整 (相除 (求余数 (g, 6000), 100))))
    赋值 (分, 到文本 (取整 (相除 (g, 6000))))
    赋值 (毫秒, 到文本 (求余数 (g, 6000, 100)))
    
    .如果真 (等于 (取文本长度 (毫秒), 1))
        赋值 (毫秒, 相加 (“0”, 毫秒))
    .如果真结束
    .如果真 (等于 (取文本长度 (秒), 1))
        赋值 (秒, 相加 (“0”, 秒))
    .如果真结束
    .如果真 (等于 (取文本长度 (分), 1))
        赋值 (分, 相加 (“0”, 分))
    .如果真结束
    赋值 (lRet, mciSendString (相加 (“play cd from ”, 取文本左边 (播放位置, 2), “:”, 分, “:”, 秒, “:”, 毫秒), “”, 0, 0)) ' 置播放位置
    
.如果真结束
.如果真 (或者 (等于 (设备名, “mp3”), 等于 (设备名, “MP3”)))
    赋值 (播放位置, 取空白文本 (129))
    mciSendString (“status MM position”, 播放位置, 128, 0) ' 获取已播放时间
    赋值 (g, 相加 (到数值 (播放位置), 相乘 (毫秒1, 10)))
    .如果真 (不等于 (定义位置, 0))
        赋值 (g, 相乘 (定义位置, 10))
    .如果真结束
    
    赋值 (lRet, mciSendString (相加 (“play MM from ”, 到文本 (g)), “”, 0, 0)) ' 置播放位置
    
.如果真结束


.子程序 跳过曲目, 空白型, , 
.参数 跳过几曲, 整数型, , 为1时，向前跳一曲；为-1时，向后跳一曲
.参数 播放, 逻辑型, , 为真时，跳到下一曲目，并播放该曲，为假时，只跳到下一曲目，但不播放

.如果真 (或者 (等于 (设备名, “CD”), 等于 (设备名, “cd”)))
    .如果 (等于 (播放, 假))
        赋值 (lRet, mciSendString (相加 (“seek cd to ”, 到文本 (相加 (第几曲, 跳过几曲))), “”, 0, 0)) ' 跳过曲目，但不播放
    .否则
        赋值 (lRet, mciSendString (相加 (“play cd from ”, 到文本 (相加 (第几曲, 跳过几曲))), “”, 0, 0)) ' 跳过曲目，并播放
    .如果结束
    
.如果真结束


.子程序 CD状态, 文本型, , 返回当前CD处于播放状态或停止状态
.局部变量 播放位置, 文本型, , , 

赋值 (播放位置, 取空白文本 (129))
.如果真 (或者 (等于 (设备名, “CD”), 等于 (设备名, “cd”)))
    mciSendString (“status cd mode”, 播放位置, 128, 0) ' CD状态
    
.如果真结束
返回 (播放位置)

.子程序 有无CD, 文本型, , 判断光驱里是否有CD
.局部变量 播放位置, 文本型, , , 

赋值 (播放位置, 取空白文本 (129))
.如果真 (或者 (等于 (设备名, “CD”), 等于 (设备名, “cd”)))
    mciSendString (“status cd media present”, 播放位置, 128, 0) ' 有无CD
    
.如果真结束
返回 (播放位置)


.子程序 总曲目, 文本型, , 返回CD的总曲目数
.局部变量 播放位置, 文本型, , , 

赋值 (播放位置, 取空白文本 (129))
.如果真 (或者 (等于 (设备名, “CD”), 等于 (设备名, “cd”)))
    mciSendString (“status cd number of tracks wait”, 播放位置, 128, 0) ' 检查轨道
    
.如果真结束
返回 (播放位置)


.子程序 CD总长度, 文本型, , 返回CD的总时间长度
.局部变量 播放位置, 文本型, , , 
.局部变量 秒, 文本型, , , 
.局部变量 分, 文本型, , , 
.局部变量 毫秒, 文本型, , , 
.局部变量 g, 整数型, , , 

赋值 (播放位置, 取空白文本 (129))
.如果真 (或者 (等于 (设备名, “CD”), 等于 (设备名, “cd”)))
    mciSendString (“status cd length wait”, 播放位置, 128, 0) ' CD长度
.如果真结束
.如果真 (或者 (等于 (设备名, “MP3”), 等于 (设备名, “mp3”)))
    mciSendString (“status MM length wait”, 播放位置, 128, 0) ' CD长度
    赋值 (g, 取整 (相除 (到数值 (播放位置), 10)))
    赋值 (秒, 到文本 (取整 (相除 (求余数 (g, 6000), 100))))
    赋值 (分, 到文本 (取整 (相除 (g, 6000))))
    赋值 (毫秒, 到文本 (求余数 (g, 6000, 100)))
    .如果真 (等于 (取文本长度 (毫秒), 1))
        赋值 (毫秒, 相加 (“0”, 毫秒))
    .如果真结束
    .如果真 (等于 (取文本长度 (秒), 1))
        赋值 (秒, 相加 (“0”, 秒))
    .如果真结束
    .如果真 (等于 (取文本长度 (分), 1))
        赋值 (分, 相加 (“0”, 分))
    .如果真结束
    赋值 (播放位置, 相加 (分, “:”, 秒, “:”, 毫秒))
    
.如果真结束
返回 (播放位置)


.子程序 当曲长度, 文本型, , 返回当前曲目的时间长度
.局部变量 播放位置, 文本型, , , 

赋值 (播放位置, 取空白文本 (129))
.如果真 (或者 (等于 (设备名, “CD”), 等于 (设备名, “cd”)))
    mciSendString (相加 (“status cd length track ”, 到文本 (第几曲)), 播放位置, 128, 0) ' CD单曲长度
.如果真结束
.如果真 (或者 (等于 (设备名, “MP3”), 等于 (设备名, “mp3”)))
.如果真结束
返回 (播放位置)


.子程序 当前曲目, 整数型, , 返回当前播放的曲目
.局部变量 播放位置, 文本型, , , 

赋值 (播放位置, 取空白文本 (129))
.如果真 (或者 (等于 (设备名, “CD”), 等于 (设备名, “cd”)))
    mciSendString (“status cd position”, 播放位置, 128, 0)
    赋值 (第几曲, 到数值 (取文本左边 (播放位置, 2)))
    
.如果真结束
返回 (第几曲)



 ' 不属于任何一个程序集、类模块的函数：
