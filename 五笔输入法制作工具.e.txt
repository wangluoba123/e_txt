 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 554
    高度 = 427
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “易语言五笔输入法制作工具 V1.0”
    帮助文件名 = “”



.常量 文件头行数, "9", , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 5 系统核心支持库
 ' iext 27bb20fdd3e145e4bee3db39ddd6e64c 1 3 扩展界面支持库一
 ' iconv {A0005538-9391-4dd9-B4D6-8EB7B9360F08} 1 0 编码转换支持库




数据类型 字编码, , 
    .成员 字, 文本型, , , 
    .成员 编码, 文本型, , , 
    .成员 匿名成员111, 空白型, , , 

数据类型 列表项型, , 
    .成员 字, 文本型, , , 
    .成员 编码, 文本型, , , 
    .成员 重复项, 文本型, , , 

.全局变量 代码组, 文本型, , "0", 
.全局变量 命令组, 文本型, , "0", 
.全局变量 单字组, 字编码, , "0", 
.全局变量 词组, 字编码, , "0", 其实是新加词组,以前的
.全局变量 旧词组, 字编码, , "0", 以前码表中有的词组。
.全局变量 匿名全局变量_760, 空白型, , , 
.全局变量 新加词组, 字编码, , "0", 
.全局变量 原码表字节集, 字节集, , , ansi

.窗口程序集 窗口程序集1, , , 

.子程序 _按钮_读入码表_被单击, 空白型, , 
.局部变量 文件号, 空白型, , , 
.局部变量 文件内容, 文本型, , , 
.局部变量 行内容, 文本型, , , 
.局部变量 a, 字节集, , , 
.局部变量 c, 字节集, , , 
.局部变量 bb, 逻辑型, , , 


赋值 (.类型, 1) ' #无法载入的常量  ' <!!!>
打开 ()
赋值 (.内容, .文件名)
子程序_打开读入文件 (.内容)
 ' 返回 ()
 ' 子程序_打开读入文件 (“E:\易语言五笔\aaa.txt”)


 ' 返回 ()
 ' 文件号 ＝ 打开文件 (“E:\易语言五笔\WBx1.TXT”, , )  ' ‘’‘’‘’ansi
 ' ' 文件号 ＝ 打开文件 (“E:\易语言五笔\WBx.txt”, , )'''''''''''''''unicode
 ' 移到文件首 (文件号)
未知函数_451 () ' *** 缩略程序块 ***
 ' 文件内容 ＝ 读入一行 (文件号)
 ' .判断循环首 (等于 (是否在文件尾 (文件号, ), 假))
     ' 行内容 ＝ 读入一行 (文件号)
     ' ' a ＝ 到字节集 (行内容)
     ' ' c ＝ 编码转换 (a, #编码_UTF_16, #编码_GB2312, bb)
     ' 文件内容 ＝ 文件内容 ＋ #换行符 ＋ 行内容  ' 取字节集数据 (c, #文本型, )
     ' 处理事件 ()
     ' ' 暂停 ()
 ' .判断循环尾 ()

 ' 文件内容 ＝ 读入文本 (文件号, )
 ' 编辑框1.内容 ＝ 文件内容
 ' 代码组 ＝ 分割文本 (文件内容, #换行符, )
 ' ' 信息框 (取数组成员数 (代码组), 0, )

 ' 子程序_判断字数 ()
 ' 关闭所有文件 ()

 ' 返回 ()
 ' ' ''''''''''''''''''''''''''
 ' ' a ＝ 读入文件 (“E:\易语言五笔\WBx.txt”)
 ' ' ' 文件内容 ＝ 到文本 (字节集)
 ' ' c ＝ 编码转换 (a, #编码_UTF_16, #编码_GB2312, bb)
 ' ' 信息框 (bb, 0, )
 ' ' 文件内容 ＝ 取字节集数据 (c, #文本型, )
 ' ' ' 输出调试文本 (文件内容)
 ' ' 暂停 ()

 ' ' b ＝ 取字节集数据 (c, #文本型, )

 ' ' 关闭所有文件 ()
 ' ' 文件号 ＝ 打开文件 (“E:\易语言五笔\WBx.txt”, , )
 ' ' 移到文件首 (文件号)
 ' ' ' 文件内容 ＝ 读入文本 (文件号, )
 ' ' ' 信息框 (读入数据 (文件号, 文件内容), 0, )
 ' ' ' 信息框 (取文件长度 (文件号), 0, )
 ' ' 字节集 ＝ 读入字节集 (文件号, 取文件长度 (文件号))
 ' ' 文件内容 ＝ 取字节集数据 (字节集, #文本型, )
 ' ' 暂停 ()

.子程序 子程序_总数, 整数型, , 
返回 (相减 (取数组成员数 (代码组), #文件头行数))

.子程序 子程序_判断是汉字, 逻辑型, , 
.参数 文本, 文本型, , 
.参数 开始位数, 整数型, 可空, 

.如果真 (等于 (开始位数, 0))
    赋值 (开始位数, 1)
.如果真结束
 ' 信息框 (取代码 (文本, 开始位数), 0, )
.如果真 (小于 (取代码 (文本, 开始位数), 0))
    返回 (真)
.如果真结束
返回 (假)


.子程序 子程序_判断字, 整数型, , 
.参数 文本, 文本型, , 

.如果真 (等于 (子程序_判断是汉字 (文本, ), 假))
    返回 (0)
.如果真结束


.判断开始 (并且 (子程序_判断是汉字 (文本, ), 等于 (子程序_判断是汉字 (文本, 3), 假)))
    返回 (1)
.判断 (并且 (子程序_判断是汉字 (文本, ), 子程序_判断是汉字 (文本, 3), 等于 (子程序_判断是汉字 (文本, 5), 假)))
    
    返回 (2)
.判断 (并且 (子程序_判断是汉字 (文本, ), 子程序_判断是汉字 (文本, 3), 子程序_判断是汉字 (文本, 5), 等于 (子程序_判断是汉字 (文本, 7), 假)))
    返回 (3)
.判断 (并且 (子程序_判断是汉字 (文本, ), 子程序_判断是汉字 (文本, 3), 子程序_判断是汉字 (文本, 5), 子程序_判断是汉字 (文本, 7), 等于 (子程序_判断是汉字 (文本, 9), 假)))
    返回 (4)
.默认
    返回 (5)
.判断结束


.子程序 子程序_判断字数, 空白型, , 
.局部变量 单字, 空白型, , , 
.局部变量 双字, 空白型, , , 
.局部变量 三字, 空白型, , , 
.局部变量 四字, 空白型, , , 
.局部变量 多字, 空白型, , , 
.局部变量 匿名局部变量_73, 空白型, , , 
.局部变量 i, 整数型, , , 

.计次循环首 (取数组成员数 (代码组), i)
    .判断开始 (等于 (子程序_判断字 (代码组 [i]), 1))
        赋值 (单字, 相加 (单字, 1))
        子程序_加单字组 (代码组 [i])
    .判断 (等于 (子程序_判断字 (代码组 [i]), 2))
        子程序_加旧词组 (代码组 [i])
        赋值 (双字, 相加 (双字, 1))
    .判断 (等于 (子程序_判断字 (代码组 [i]), 3))
        子程序_加旧词组 (代码组 [i])
        赋值 (三字, 相加 (三字, 1))
    .判断 (等于 (子程序_判断字 (代码组 [i]), 4))
        子程序_加旧词组 (代码组 [i])
        赋值 (四字, 相加 (四字, 1))
    .判断 (等于 (子程序_判断字 (代码组 [i]), 5))
        子程序_加旧词组 (代码组 [i])
        赋值 (多字, 相加 (多字, 1))
    .默认
        
    .判断结束
    处理事件 ()
.计次循环尾 ()
赋值 (.内容, 到文本 (子程序_总数 ()))
赋值 (.内容, 到文本 (单字))
赋值 (.内容, 到文本 (双字))
赋值 (.内容, 到文本 (三字))
赋值 (.内容, 到文本 (四字))
赋值 (.内容, 到文本 (多字))


.子程序 子程序_加单字组, 空白型, , 
.参数 文本, 文本型, , 

.局部变量 单字, 字编码, , , 

赋值 (单字.字, 取文本左边 (文本, 2))
赋值 (单字.编码, 取文本中间 (文本, 3, 相减 (取文本长度 (文本), 2)))
加入成员 (单字组, 单字)

.子程序 子程序_加旧词组, 空白型, , 
.参数 文本, 文本型, , 

.局部变量 词码, 字编码, , , 
.局部变量 汉字长, 整数型, , , 

赋值 (汉字长, 子程序_取几个汉字 (文本))
赋值 (词码.字, 取文本左边 (文本, 汉字长))
赋值 (词码.编码, 取文本中间 (文本, 相加 (汉字长, 1), 相减 (取文本长度 (文本), 汉字长)))
加入成员 (旧词组, 词码)

.子程序 子程序_取几个汉字, 整数型, , 
.参数 文本, 文本型, , 

.局部变量 i, 整数型, , , 

.计次循环首 (取文本长度 (文本), i)
    .如果真 (大于 (取代码 (文本, i), 0))
        跳出循环 ()
    .如果真结束
    
.计次循环尾 ()
返回 (相减 (i, 1))

.子程序 _按钮_提取易语言核心库关键字_被单击, 空白型, , 
.局部变量 文件号, 整数型, , , 
.局部变量 文件内容, 文本型, , , 
.局部变量 i, 整数型, , , 
.局部变量 数组总数, 空白型, , , 
.局部变量 命令起始位, 空白型, , , 
.局部变量 命令终止位, 空白型, , , 

赋值 (文件号, 打开文件 (“E:\易语言五笔\复件 命令.txt”, , ))
赋值 (文件内容, 读入文本 (文件号, ))
赋值 (命令组, 分割文本 (文件内容, #换行符, ))
关闭所有文件 ()

 ' 文件号 ＝ 打开文件 (“E:\易语言五笔\345.txt”, , )

 ' 移到文件首 (文件号)

 ' 文件内容 ＝ 读入文本 (文件号, )

 ' 命令组 ＝ 分割文本 (文件内容, #换行符, )
 ' 数组总数 ＝ 取数组成员数 (命令组)
 ' ' 信息框 (取数组成员数 (命令组), 0, )
 ' .变量循环首 (数组总数, 1, -1, i)
     ' .如果真 (或者 (等于 (寻找文本 (命令组 [i], “调用格式：”, , 假), -1), 不等于 (寻找文本 (命令组 [i], “对象．”, , 假), -1)))
         ' 删除成员 (命令组, i, )
    .如果真结束
    
 ' .变量循环尾 ()
 ' ' 信息框 (取数组成员数 (命令组), 0, )
 ' 文件号 ＝ 打开文件 (“E:\易语言五笔\命令.txt”, 4, )
 ' .计次循环首 (取数组成员数 (命令组), i)
     ' 命令组 [i] ＝ 删全部空 (命令组 [i])
     ' 命令起始位 ＝ 寻找文本 (命令组 [i], “〉”, , 假) ＋ 2
     ' 命令终止位 ＝ 寻找文本 (命令组 [i], “（”, , 假)
     ' 命令组 [i] ＝ 取文本中间 (命令组 [i], 命令起始位, 命令终止位 － 命令起始位)
     ' ' 调试输出 (命令组 [i])
     ' .如果真 (等于 (写文本行 (文件号, 命令组 [i]), 假))
         ' 信息框 (“写失败”, 0, )
    .如果真结束
     ' 处理事件 ()
 ' .计次循环尾 ()
 ' ' 翔
 ' 信息框 (取数组成员数 (命令组), 0, )



.子程序 子程序_生成二字, 空白型, , 
.参数 文本, 文本型, , 

.局部变量 字编码1, 字编码, , , 
.局部变量 前字, 文本型, , , 
.局部变量 后字, 文本型, , , 
.局部变量 i, 整数型, , , 

赋值 (前字, 取文本左边 (文本, 2))
赋值 (后字, 取文本右边 (文本, 2))
赋值 (字编码1.字, 文本)
.计次循环首 (取数组成员数 (单字组), i)
    .如果真 (等于 (单字组 [i], 字, 前字))
        赋值 (字编码1.编码, 取文本左边 (单字组 [i], 编码, 2))
        跳出循环 ()
    .如果真结束
    
.计次循环尾 ()
.计次循环首 (取数组成员数 (单字组), i)
    .如果真 (等于 (单字组 [i], 字, 后字))
        赋值 (字编码1.编码, 相加 (字编码1.编码, 取文本左边 (单字组 [i], 编码, 2)))
        跳出循环 ()
    .如果真结束
    
.计次循环尾 ()
加入成员 (词组, 字编码1)


.子程序 子程序_生成三字, 空白型, , 
.参数 文本, 文本型, , 

.局部变量 字编码1, 字编码, , , 
.局部变量 前字, 文本型, , , 
.局部变量 中字, 文本型, , , 
.局部变量 后字, 文本型, , , 
.局部变量 i, 整数型, , , 

赋值 (前字, 取文本左边 (文本, 2))
赋值 (中字, 取文本中间 (文本, 3, 2))
赋值 (后字, 取文本右边 (文本, 2))
赋值 (字编码1.字, 文本)
.计次循环首 (取数组成员数 (单字组), i)
    .如果真 (等于 (单字组 [i], 字, 前字))
        赋值 (字编码1.编码, 取文本左边 (单字组 [i], 编码, 1))
        跳出循环 ()
    .如果真结束
    
.计次循环尾 ()
.计次循环首 (取数组成员数 (单字组), i)
    .如果真 (等于 (单字组 [i], 字, 中字))
        赋值 (字编码1.编码, 相加 (字编码1.编码, 取文本左边 (单字组 [i], 编码, 1)))
        跳出循环 ()
    .如果真结束
    
.计次循环尾 ()

.计次循环首 (取数组成员数 (单字组), i)
    .如果真 (等于 (单字组 [i], 字, 后字))
        赋值 (字编码1.编码, 相加 (字编码1.编码, 取文本左边 (单字组 [i], 编码, 2)))
        跳出循环 ()
    .如果真结束
    
.计次循环尾 ()
加入成员 (词组, 字编码1)


.子程序 子程序_生成四字, 空白型, , 
.参数 文本, 文本型, , 

.局部变量 字编码1, 字编码, , , 
.局部变量 前字, 文本型, , , 
.局部变量 中字, 文本型, , , 
.局部变量 中后, 文本型, , , 
.局部变量 后字, 文本型, , , 
.局部变量 i, 整数型, , , 

赋值 (前字, 取文本左边 (文本, 2))
赋值 (中字, 取文本中间 (文本, 3, 2))
赋值 (中后, 取文本中间 (文本, 5, 2))
赋值 (后字, 取文本右边 (文本, 2))
赋值 (字编码1.字, 文本)
.计次循环首 (取数组成员数 (单字组), i)
    .如果真 (等于 (单字组 [i], 字, 前字))
        赋值 (字编码1.编码, 取文本左边 (单字组 [i], 编码, 1))
        跳出循环 ()
    .如果真结束
    
.计次循环尾 ()
.计次循环首 (取数组成员数 (单字组), i)
    .如果真 (等于 (单字组 [i], 字, 中字))
        赋值 (字编码1.编码, 相加 (字编码1.编码, 取文本左边 (单字组 [i], 编码, 1)))
        跳出循环 ()
    .如果真结束
    
.计次循环尾 ()
.计次循环首 (取数组成员数 (单字组), i)
    .如果真 (等于 (单字组 [i], 字, 中后))
        赋值 (字编码1.编码, 相加 (字编码1.编码, 取文本左边 (单字组 [i], 编码, 1)))
        跳出循环 ()
    .如果真结束
    
.计次循环尾 ()

.计次循环首 (取数组成员数 (单字组), i)
    .如果真 (等于 (单字组 [i], 字, 后字))
        赋值 (字编码1.编码, 相加 (字编码1.编码, 取文本左边 (单字组 [i], 编码, 1)))
        跳出循环 ()
    .如果真结束
    
.计次循环尾 ()
加入成员 (词组, 字编码1)


.子程序 子程序_生成多字, 空白型, , 多字与四字相同。
.参数 文本, 文本型, , 

.局部变量 字编码1, 字编码, , , 
.局部变量 前字, 文本型, , , 
.局部变量 中字, 文本型, , , 
.局部变量 中后, 文本型, , , 
.局部变量 后字, 文本型, , , 
.局部变量 i, 整数型, , , 

赋值 (前字, 取文本左边 (文本, 2))
赋值 (中字, 取文本中间 (文本, 3, 2))
赋值 (中后, 取文本中间 (文本, 5, 2))
赋值 (后字, 取文本右边 (文本, 2))
赋值 (字编码1.字, 文本)
.计次循环首 (取数组成员数 (单字组), i)
    .如果真 (等于 (单字组 [i], 字, 前字))
        赋值 (字编码1.编码, 取文本左边 (单字组 [i], 编码, 1))
        跳出循环 ()
    .如果真结束
    
.计次循环尾 ()
.计次循环首 (取数组成员数 (单字组), i)
    .如果真 (等于 (单字组 [i], 字, 中字))
        赋值 (字编码1.编码, 相加 (字编码1.编码, 取文本左边 (单字组 [i], 编码, 1)))
        跳出循环 ()
    .如果真结束
    
.计次循环尾 ()
.计次循环首 (取数组成员数 (单字组), i)
    .如果真 (等于 (单字组 [i], 字, 中后))
        赋值 (字编码1.编码, 相加 (字编码1.编码, 取文本左边 (单字组 [i], 编码, 1)))
        跳出循环 ()
    .如果真结束
    
.计次循环尾 ()

.计次循环首 (取数组成员数 (单字组), i)
    .如果真 (等于 (单字组 [i], 字, 后字))
        赋值 (字编码1.编码, 相加 (字编码1.编码, 取文本左边 (单字组 [i], 编码, 1)))
        跳出循环 ()
    .如果真结束
    
.计次循环尾 ()
加入成员 (词组, 字编码1)

.子程序 子程序_对照原码表, 逻辑型, , 
.参数 文本, 文本型, , 

.局部变量 i, 整数型, , , 

.计次循环首 (取数组成员数 (代码组), i)
    .如果真 (等于 (文本, 代码组 [i]))
        返回 (假)
    .如果真结束
    
.计次循环尾 ()
返回 (真)

.子程序 子程序_生成首拼码, 空白型, , 
.局部变量 i, 整数型, , , 
.局部变量 文件号, 整数型, , , 

.计次循环首 (取数组成员数 (命令组), i)
    .判断开始 (等于 (取文本长度 (删全部空 (命令组 [i])), 4))
        子程序_二字音 (命令组 [i])
    .判断 (等于 (取文本长度 (删全部空 (命令组 [i])), 6))
        子程序_三字音 (命令组 [i])
    .判断 (等于 (取文本长度 (删全部空 (命令组 [i])), 8))
        子程序_四字音 (命令组 [i])
    .判断 (大于 (取文本长度 (删全部空 (命令组 [i])), 8))
        子程序_四字音 (命令组 [i])
    .默认
        
    .判断结束
    
.计次循环尾 ()
 ' 信息框 (取数组成员数 (词组), 0, )
赋值 (文件号, 打开文件 (“E:\易语言五笔\新词组.txt”, 4, ))

.计次循环首 (取数组成员数 (词组), i)
    写文本行 (文件号, 相加 (词组 [i], 字, 词组 [i], 编码))
.计次循环尾 ()



.子程序 子程序_二字音, 空白型, , 
.参数 文本, 文本型, , 

.局部变量 字编码1, 字编码, , , 
.局部变量 前字, 文本型, , , 
.局部变量 后字, 文本型, , , 
.局部变量 i, 整数型, , , 

赋值 (前字, 取文本左边 (文本, 2))
赋值 (后字, 取文本右边 (文本, 2))
赋值 (字编码1.字, 文本)
赋值 (字编码1.编码, 取文本左边 (取拼音 (前字, 1), 1))
赋值 (字编码1.编码, 相加 (字编码1.编码, 取文本左边 (取拼音 (后字, 1), 1)))
加入成员 (词组, 字编码1)


.子程序 子程序_三字音, 空白型, , 
.参数 文本, 文本型, , 

.局部变量 字编码1, 字编码, , , 
.局部变量 前字, 文本型, , , 
.局部变量 中字, 文本型, , , 
.局部变量 后字, 文本型, , , 
.局部变量 i, 整数型, , , 

赋值 (前字, 取文本左边 (文本, 2))
赋值 (中字, 取文本中间 (文本, 3, 2))
赋值 (后字, 取文本右边 (文本, 2))
赋值 (字编码1.字, 文本)
赋值 (字编码1.编码, 取文本左边 (取拼音 (前字, 1), 1))
赋值 (字编码1.编码, 相加 (字编码1.编码, 取文本左边 (取拼音 (中字, 1), 1)))
赋值 (字编码1.编码, 相加 (字编码1.编码, 取文本左边 (取拼音 (后字, 1), 1)))

加入成员 (词组, 字编码1)


.子程序 子程序_四字音, 空白型, , 
.参数 文本, 文本型, , 

.局部变量 字编码1, 字编码, , , 
.局部变量 前字, 文本型, , , 
.局部变量 中字, 文本型, , , 
.局部变量 中后, 文本型, , , 
.局部变量 后字, 文本型, , , 
.局部变量 i, 整数型, , , 

赋值 (前字, 取文本左边 (文本, 2))
赋值 (中字, 取文本中间 (文本, 3, 2))
赋值 (中后, 取文本中间 (文本, 5, 2))
赋值 (后字, 取文本中间 (文本, 7, 5))
赋值 (字编码1.字, 文本)
赋值 (字编码1.编码, 取文本左边 (取拼音 (前字, 1), 1))
赋值 (字编码1.编码, 相加 (字编码1.编码, 取文本左边 (取拼音 (中字, 1), 1)))
赋值 (字编码1.编码, 相加 (字编码1.编码, 取文本左边 (取拼音 (中后, 1), 1)))
赋值 (字编码1.编码, 相加 (字编码1.编码, 取文本左边 (取拼音 (后字, 1), 1)))

加入成员 (词组, 字编码1)


.子程序 子程序_判断文件格式, 逻辑型, , unicode
.参数 文件路径, 文本型, , 

.局部变量 读入的字节集1, 字节集, , , ansi
.局部变量 读入的字节集2, 字节集, , , unicode

 ' 读入的字节集1 ＝ 读入文件 (“E:\易语言五笔\temp\ansi.txt”)
 ' 读入的字节集2 ＝ 读入文件 (“E:\易语言五笔\原件 WBx.txt”)
 ' 暂停 ()
赋值 (读入的字节集1, 读入文件 (文件路径))
.如果真 (不等于 (取字节集左边 (读入的字节集1, 2), { 255, 254 }))
    信息框 (“码表必须是Unicode编码格式！”, #错误图标, )
    返回 (假)
.如果真结束
返回 (真)

.子程序 _按钮6_被单击, 空白型, , 

子程序_插列表 (.内容)

.子程序 子程序_打开读入文件, 逻辑型, , 取出所有码表
.参数 文件名, 文本型, , 

.局部变量 文件号, 空白型, , , 
.局部变量 文件内容, 文本型, , , 
.局部变量 行内容, 文本型, , , 
.局部变量 a, 字节集, , , 
.局部变量 c, 字节集, , , 
.局部变量 bb, 逻辑型, , , 

.如果真 (等于 (子程序_判断文件格式 (文件名), 假))
     ' 结束 ()
    返回 (假)
.如果真结束
赋值 (a, 读入文件 (文件名))
 ' c ＝ 编码转换 (a, #编码_UTF_16, #编码_GB2312, bb)
赋值 (c, 未知支持库函数_0 (a, #, #, bb))

 ' 信息框 (bb, 0, )
.如果真 (等于 (bb, 假))
    信息框 (“读入码表失败！”, #错误图标, )
    返回 (假)
.如果真结束
赋值 (原码表字节集, c)
赋值 (文件内容, 取字节集数据 (c, #文本型, ))
赋值 (.内容, 文件内容)
赋值 (代码组, 分割文本 (文件内容, #换行符, ))
子程序_判断字数 ()
关闭所有文件 ()


返回 (真)

 ' 文件号 ＝ 打开文件 (“E:\易语言五笔\WBx.txt”, , )
 ' 移到文件首 (文件号)

 ' 文件内容 ＝ 读入文本 (文件号, )
 ' 编辑框1.内容 ＝ 文件内容
 ' 代码组 ＝ 分割文本 (文件内容, #换行符, )
 ' 子程序_判断字数 ()
 ' 关闭所有文件 ()


.子程序 子程序_生成五笔码通用, 文本型, , 
.参数 文本, 文本型, , 

.局部变量 i, 整数型, , , 
.局部变量 文件号, 空白型, , , 
.局部变量 字编码1, 字编码, , , 


.判断开始 (等于 (取文本长度 (删全部空 (文本)), 4))
    赋值 (字编码1, 子程序_生成二字通用 (文本))
.判断 (等于 (取文本长度 (删全部空 (文本)), 6))
    赋值 (字编码1, 子程序_生成三字通用 (文本))
.判断 (等于 (取文本长度 (删全部空 (文本)), 8))
    赋值 (字编码1, 子程序_生成四字通用 (文本))
.判断 (大于 (取文本长度 (删全部空 (文本)), 8))
    赋值 (字编码1, 子程序_生成多字通用 (文本))
.默认
    
.判断结束

返回 (字编码1.编码)


.子程序 子程序_生成二字通用, 字编码, , 
.参数 文本, 文本型, , 

.局部变量 字编码1, 字编码, , , 
.局部变量 前字, 文本型, , , 
.局部变量 后字, 文本型, , , 
.局部变量 i, 整数型, , , 
.局部变量 临时编码, 文本型, , , 为一级简码准备的。

赋值 (前字, 取文本左边 (文本, 2))
赋值 (后字, 取文本右边 (文本, 2))
赋值 (字编码1.字, 文本)
赋值 (临时编码, 子程序_一级简码扩词 (前字)) ' 如果是一级简码，反回两位码，
.如果 (等于 (临时编码, “”))
    .计次循环首 (取数组成员数 (单字组), i)
        .如果真 (等于 (单字组 [i], 字, 前字))
            赋值 (字编码1.编码, 取文本左边 (单字组 [i], 编码, 2))
            跳出循环 ()
        .如果真结束
        
    .计次循环尾 ()
    
.否则
    赋值 (字编码1.编码, 临时编码)
.如果结束


 ' 临时编码 ＝ “”
赋值 (临时编码, 子程序_一级简码扩词 (后字))
.如果 (等于 (临时编码, “”))
    .计次循环首 (取数组成员数 (单字组), i)
        .如果真 (等于 (单字组 [i], 字, 后字))
            赋值 (字编码1.编码, 相加 (字编码1.编码, 取文本左边 (单字组 [i], 编码, 2)))
            跳出循环 ()
        .如果真结束
        
    .计次循环尾 ()
    
.否则
    赋值 (字编码1.编码, 相加 (字编码1.编码, 临时编码))
.如果结束

 ' 加入成员 (词组, 字编码1)
返回 (字编码1)

.子程序 子程序_生成三字通用, 字编码, , 
.参数 文本, 文本型, , 

.局部变量 字编码1, 字编码, , , 
.局部变量 前字, 文本型, , , 
.局部变量 中字, 文本型, , , 
.局部变量 后字, 文本型, , , 
.局部变量 i, 整数型, , , 
.局部变量 临时编码, 文本型, , , 

赋值 (前字, 取文本左边 (文本, 2))
赋值 (中字, 取文本中间 (文本, 3, 2))
赋值 (后字, 取文本右边 (文本, 2))
赋值 (字编码1.字, 文本)
赋值 (临时编码, 子程序_一级简码扩词 (前字))
.如果 (等于 (临时编码, “”))
    .计次循环首 (取数组成员数 (单字组), i)
        .如果真 (等于 (单字组 [i], 字, 前字))
            赋值 (字编码1.编码, 取文本左边 (单字组 [i], 编码, 1))
            跳出循环 ()
        .如果真结束
        
    .计次循环尾 ()
    
.否则
    赋值 (字编码1.编码, 取文本左边 (临时编码, 1))
.如果结束

赋值 (临时编码, 子程序_一级简码扩词 (中字))
.如果 (等于 (临时编码, “”))
    
    .计次循环首 (取数组成员数 (单字组), i)
        .如果真 (等于 (单字组 [i], 字, 中字))
            赋值 (字编码1.编码, 相加 (字编码1.编码, 取文本左边 (单字组 [i], 编码, 1)))
            跳出循环 ()
        .如果真结束
        
    .计次循环尾 ()
    
.否则
    赋值 (字编码1.编码, 相加 (字编码1.编码, 取文本左边 (临时编码, 1)))
.如果结束

赋值 (临时编码, 子程序_一级简码扩词 (后字))
.如果 (等于 (临时编码, “”))
    .计次循环首 (取数组成员数 (单字组), i)
        .如果真 (等于 (单字组 [i], 字, 后字))
            赋值 (字编码1.编码, 相加 (字编码1.编码, 取文本左边 (单字组 [i], 编码, 2)))
            跳出循环 ()
        .如果真结束
        
    .计次循环尾 ()
    
.否则
    赋值 (字编码1.编码, 相加 (字编码1.编码, 临时编码))
.如果结束

 ' 加入成员 (词组, 字编码1)
返回 (字编码1)

.子程序 子程序_生成四字通用, 字编码, , 
.参数 文本, 文本型, , 

.局部变量 字编码1, 字编码, , , 
.局部变量 前字, 文本型, , , 
.局部变量 中字, 文本型, , , 
.局部变量 中后, 文本型, , , 
.局部变量 后字, 文本型, , , 
.局部变量 i, 整数型, , , 
.局部变量 临时编码, 文本型, , , 

赋值 (前字, 取文本左边 (文本, 2))
赋值 (中字, 取文本中间 (文本, 3, 2))
赋值 (中后, 取文本中间 (文本, 5, 2))
赋值 (后字, 取文本右边 (文本, 2))
赋值 (字编码1.字, 文本)
赋值 (临时编码, 子程序_一级简码扩词 (前字))
.如果 (等于 (临时编码, “”))
    .计次循环首 (取数组成员数 (单字组), i)
        .如果真 (等于 (单字组 [i], 字, 前字))
            赋值 (字编码1.编码, 取文本左边 (单字组 [i], 编码, 1))
            跳出循环 ()
        .如果真结束
        
    .计次循环尾 ()
    
.否则
    赋值 (字编码1.编码, 取文本左边 (临时编码, 1))
.如果结束

赋值 (临时编码, 子程序_一级简码扩词 (中字))
.如果 (等于 (临时编码, “”))
    .计次循环首 (取数组成员数 (单字组), i)
        .如果真 (等于 (单字组 [i], 字, 中字))
            赋值 (字编码1.编码, 相加 (字编码1.编码, 取文本左边 (单字组 [i], 编码, 1)))
            跳出循环 ()
        .如果真结束
        
    .计次循环尾 ()
    
.否则
    赋值 (字编码1.编码, 相加 (字编码1.编码, 取文本左边 (临时编码, 1)))
.如果结束

赋值 (临时编码, 子程序_一级简码扩词 (中后))
.如果 (等于 (临时编码, “”))
    .计次循环首 (取数组成员数 (单字组), i)
        .如果真 (等于 (单字组 [i], 字, 中后))
            赋值 (字编码1.编码, 相加 (字编码1.编码, 取文本左边 (单字组 [i], 编码, 1)))
            跳出循环 ()
        .如果真结束
        
    .计次循环尾 ()
    
.否则
    赋值 (字编码1.编码, 相加 (字编码1.编码, 取文本左边 (临时编码, 1)))
.如果结束

赋值 (临时编码, 子程序_一级简码扩词 (后字))
.如果 (等于 (临时编码, “”))
    .计次循环首 (取数组成员数 (单字组), i)
        .如果真 (等于 (单字组 [i], 字, 后字))
            赋值 (字编码1.编码, 相加 (字编码1.编码, 取文本左边 (单字组 [i], 编码, 1)))
            跳出循环 ()
        .如果真结束
        
    .计次循环尾 ()
    
.否则
    赋值 (字编码1.编码, 相加 (字编码1.编码, 取文本左边 (临时编码, 1)))
.如果结束

 ' 加入成员 (词组, 字编码1)
返回 (字编码1)

.子程序 子程序_生成多字通用, 字编码, , 多字与四字相同。
.参数 文本, 文本型, , 

.局部变量 字编码1, 字编码, , , 
.局部变量 前字, 文本型, , , 
.局部变量 中字, 文本型, , , 
.局部变量 中后, 文本型, , , 
.局部变量 后字, 文本型, , , 
.局部变量 i, 整数型, , , 
.局部变量 临时编码, 文本型, , , 

赋值 (前字, 取文本左边 (文本, 2))
赋值 (中字, 取文本中间 (文本, 3, 2))
赋值 (中后, 取文本中间 (文本, 5, 2))
赋值 (后字, 取文本右边 (文本, 2))
赋值 (字编码1.字, 文本)
赋值 (临时编码, 子程序_一级简码扩词 (前字))

.如果 (等于 (临时编码, “”))
    .计次循环首 (取数组成员数 (单字组), i)
        .如果真 (等于 (单字组 [i], 字, 前字))
            赋值 (字编码1.编码, 取文本左边 (单字组 [i], 编码, 1))
            跳出循环 ()
        .如果真结束
        
    .计次循环尾 ()
    
.否则
    赋值 (字编码1.编码, 取文本左边 (临时编码, 1))
.如果结束
赋值 (临时编码, 子程序_一级简码扩词 (中字))

.如果 (等于 (临时编码, “”))
    .计次循环首 (取数组成员数 (单字组), i)
        .如果真 (等于 (单字组 [i], 字, 中字))
            赋值 (字编码1.编码, 相加 (字编码1.编码, 取文本左边 (单字组 [i], 编码, 1)))
            跳出循环 ()
        .如果真结束
        
    .计次循环尾 ()
    
.否则
    赋值 (字编码1.编码, 相加 (字编码1.编码, 取文本左边 (临时编码, 1)))
.如果结束
赋值 (临时编码, 子程序_一级简码扩词 (中后))

.如果 (等于 (临时编码, “”))
    .计次循环首 (取数组成员数 (单字组), i)
        .如果真 (等于 (单字组 [i], 字, 中后))
            赋值 (字编码1.编码, 相加 (字编码1.编码, 取文本左边 (单字组 [i], 编码, 1)))
            跳出循环 ()
        .如果真结束
        
    .计次循环尾 ()
    
.否则
    赋值 (字编码1.编码, 相加 (字编码1.编码, 取文本左边 (临时编码, 1)))
.如果结束
赋值 (临时编码, 子程序_一级简码扩词 (后字))

.如果 (等于 (临时编码, “”))
    .计次循环首 (取数组成员数 (单字组), i)
        .如果真 (等于 (单字组 [i], 字, 后字))
            赋值 (字编码1.编码, 相加 (字编码1.编码, 取文本左边 (单字组 [i], 编码, 1)))
            跳出循环 ()
        .如果真结束
        
    .计次循环尾 ()
    
.否则
    赋值 (字编码1.编码, 相加 (字编码1.编码, 取文本左边 (临时编码, 1)))
.如果结束


 ' 加入成员 (词组, 字编码1)
返回 (字编码1)

.子程序 子程序_刷列表框列, 空白型, , 
.判断开始 (.选中)
    全部删除 ()
    .计次循环首 (取列数 (), )
        0.删除列 ()
    .计次循环尾 ()
    .插入列 (“新增词”, 100, , , )
    .插入列 (“五笔码”, , , , )
    .插入列 (“有无重复”, 80, , , )
     ' 超级列表框1.插入列 (, “首拼码”, , , , )
     ' 超级列表框1.插入列 (, “有无重复”, 80, , , )
    
    
    全部删除 ()
    .计次循环首 (取列数 (), )
        0.删除列 ()
    .计次循环尾 ()
    .插入列 (“新增词”, 100, , , )
    .插入列 (“编码”, , , , )
    .插入列 (“有无重复”, 80, , , )
    
.默认
    全部删除 ()
    .计次循环首 (取列数 (), )
        0.删除列 ()
    .计次循环尾 ()
    .插入列 (“新增词”, 100, , , )
    .插入列 (“首拼码”, , , , )
    .插入列 (“有无重复”, 80, , , )
     ' 超级列表框1.插入列 (, “首拼码”, , , , )
     ' 超级列表框1.插入列 (, “有无重复”, 80, , , )
    
    
    全部删除 ()
    .计次循环首 (取列数 (), )
        0.删除列 ()
    .计次循环尾 ()
    .插入列 (“新增词”, 100, , , )
    .插入列 (“编码”, , , , )
    .插入列 (“有无重复”, 80, , , )
    
.判断结束



.子程序 子程序_插列表, 空白型, , 
.参数 新词, 文本型, , 

.局部变量 表项索引, 空白型, , , 
.局部变量 五笔码, 文本型, , , 
.局部变量 拼音码, 文本型, , , 

.如果真 (小于 (取文本长度 (删全部空 (新词)), 4))
    返回 ()
.如果真结束

.判断开始 (.选中)
    赋值 (五笔码, 子程序_生成五笔码通用 (新词))
     ' 拼音码 ＝ 子程序_生成首拼码通用 (新词)
    赋值 (表项索引, .插入表项 ())
    表项索引.置标题 (0, 新词)
    表项索引.置标题 (1, 五笔码)
    表项索引.置标题 (2, 子程序_查五笔重码 (五笔码))
     ' 超级列表框1.置标题 (表项索引, 3, 拼音码)
     ' 超级列表框1.置标题 (表项索引, 4, 子程序_查五笔重码 (拼音码))
    
.默认
    赋值 (拼音码, 子程序_生成首拼码通用 (新词))
    赋值 (表项索引, .插入表项 ())
    表项索引.置标题 (0, 新词)
    表项索引.置标题 (1, 拼音码)
    表项索引.置标题 (2, 子程序_查五笔重码 (拼音码))
    
.判断结束


.子程序 子程序_一级简码扩词, 文本型, , 一级简码组成词时。不能只用一个码。
.参数 文本, 文本型, , 

.判断开始 (等于 (文本, “一”))
    返回 (“gg”)
.判断 (等于 (文本, “地”))
    返回 (“fb”)
.判断 (等于 (文本, “在”))
    返回 (“dh”)
.判断 (等于 (文本, “要”))
    返回 (“sv”)
.判断 (等于 (文本, “工”))
    返回 (“aa”)
.判断 (等于 (文本, “上”))
    返回 (“hh”)
.判断 (等于 (文本, “是”))
    返回 (“jg”)
.判断 (等于 (文本, “中”))
    返回 (“kh”)
.判断 (等于 (文本, “国”))
    返回 (“lg”)
.判断 (等于 (文本, “同”))
    返回 (“mg”)
.判断 (等于 (文本, “和”))
    返回 (“tk”)
.判断 (等于 (文本, “的”))
    返回 (“rq”)
.判断 (等于 (文本, “有”))
    返回 (“de”)
.判断 (等于 (文本, “人”))
    返回 (“ww”)
.判断 (等于 (文本, “我”))
    返回 (“tr”)
.判断 (等于 (文本, “主”))
    返回 (“yg”)
.判断 (等于 (文本, “产”))
    返回 (“ut”)
.判断 (等于 (文本, “不”))
    返回 (“gi”)
.判断 (等于 (文本, “为”))
    返回 (“yl”)
.判断 (等于 (文本, “这”))
    返回 (“yp”)
.判断 (等于 (文本, “民”))
    返回 (“na”)
.判断 (等于 (文本, “了”))
    返回 (“bn”)
.判断 (等于 (文本, “发”))
    返回 (“nt”)
.判断 (等于 (文本, “以”))
    返回 (“ny”)
.判断 (等于 (文本, “经”))
    返回 (“xc”)
.默认
    返回 (“”)
.判断结束


.子程序 __启动窗口_创建完毕, 空白型, , 
赋值 (_启动窗口.可视, 真)

置等待鼠标 ()
子程序_刷列表框列 () ' 追加设置里的列表框
赋值 (.内容, 相加 (取运行目录 (), “\wbx.txt”))
.如果真 (等于 (子程序_打开读入文件 (.内容), 假))
    赋值 (.禁止, 假)
.如果真结束
恢复鼠标 ()

.子程序 子程序_生成首拼码通用, 文本型, , 
.参数 文本, 文本型, , 

.局部变量 字编码1, 字编码, , , 


.判断开始 (等于 (取文本长度 (删全部空 (文本)), 4))
    赋值 (字编码1, 子程序_二字音通用 (文本))
.判断 (等于 (取文本长度 (删全部空 (文本)), 6))
    赋值 (字编码1, 子程序_三字音通用 (文本))
.判断 (等于 (取文本长度 (删全部空 (文本)), 8))
    赋值 (字编码1, 子程序_四字音通用 (文本))
.判断 (大于 (取文本长度 (删全部空 (文本)), 8))
    赋值 (字编码1, 子程序_四字音通用 (文本))
.默认
    
.判断结束


返回 (字编码1.编码)


.子程序 子程序_二字音通用, 字编码, , 
.参数 文本, 文本型, , 

.局部变量 字编码1, 字编码, , , 
.局部变量 前字, 文本型, , , 
.局部变量 后字, 文本型, , , 
.局部变量 i, 整数型, , , 

赋值 (前字, 取文本左边 (文本, 2))
赋值 (后字, 取文本右边 (文本, 2))
赋值 (字编码1.字, 文本)
赋值 (字编码1.编码, 取文本左边 (取拼音 (前字, 1), 1))
赋值 (字编码1.编码, 相加 (字编码1.编码, 取文本左边 (取拼音 (后字, 1), 1)))
返回 (字编码1)

.子程序 子程序_三字音通用, 字编码, , 
.参数 文本, 文本型, , 

.局部变量 字编码1, 字编码, , , 
.局部变量 前字, 文本型, , , 
.局部变量 中字, 文本型, , , 
.局部变量 后字, 文本型, , , 
.局部变量 i, 整数型, , , 

赋值 (前字, 取文本左边 (文本, 2))
赋值 (中字, 取文本中间 (文本, 3, 2))
赋值 (后字, 取文本右边 (文本, 2))
赋值 (字编码1.字, 文本)
赋值 (字编码1.编码, 取文本左边 (取拼音 (前字, 1), 1))
赋值 (字编码1.编码, 相加 (字编码1.编码, 取文本左边 (取拼音 (中字, 1), 1)))
赋值 (字编码1.编码, 相加 (字编码1.编码, 取文本左边 (取拼音 (后字, 1), 1)))
返回 (字编码1)
 ' 加入成员 (词组, 字编码1)

.子程序 子程序_四字音通用, 字编码, , 
.参数 文本, 文本型, , 

.局部变量 字编码1, 字编码, , , 
.局部变量 前字, 文本型, , , 
.局部变量 中字, 文本型, , , 
.局部变量 中后, 文本型, , , 
.局部变量 后字, 文本型, , , 
.局部变量 i, 整数型, , , 

赋值 (前字, 取文本左边 (文本, 2))
赋值 (中字, 取文本中间 (文本, 3, 2))
赋值 (中后, 取文本中间 (文本, 5, 2))
赋值 (后字, 取文本中间 (文本, 7, 5))
赋值 (字编码1.字, 文本)
赋值 (字编码1.编码, 取文本左边 (取拼音 (前字, 1), 1))
赋值 (字编码1.编码, 相加 (字编码1.编码, 取文本左边 (取拼音 (中字, 1), 1)))
赋值 (字编码1.编码, 相加 (字编码1.编码, 取文本左边 (取拼音 (中后, 1), 1)))
赋值 (字编码1.编码, 相加 (字编码1.编码, 取文本左边 (取拼音 (后字, 1), 1)))
返回 (字编码1)
 ' 加入成员 (词组, 字编码1)


.子程序 子程序_查五笔重码, 文本型, , 从码表中读已有的编码五笔和拼音重码共用
.参数 文本, 文本型, , 

.局部变量 重码组, 文本型, 静态, "0", 
.局部变量 i, 整数型, , , 
.局部变量 返回文本, 文本型, , , 

 ' 清除数组 (重码组)
 ' .计次循环首 (取数组成员数 (代码组), i)
     ' .如果真 (不等于 (寻找文本 (代码组 [i], 文本, , 假), -1))
         ' 加入成员 (重码组, 文本)
    .如果真结束
    
 ' .计次循环尾 ()


.计次循环首 (取数组成员数 (单字组), i)
    .如果真 (等于 (文本, 单字组 [i], 编码))
        加入成员 (重码组, 单字组 [i], 字)
    .如果真结束
    
.计次循环尾 ()
.计次循环首 (取数组成员数 (旧词组), i)
    .如果真 (等于 (文本, 旧词组 [i], 编码))
        加入成员 (重码组, 旧词组 [i], 字)
    .如果真结束
    
.计次循环尾 ()
.计次循环首 (取数组成员数 (重码组), i)
    赋值 (返回文本, 相加 (返回文本, 重码组 [i], “ ”))
.计次循环尾 ()
返回 (返回文本)

.子程序 _按钮2_被单击, 空白型, , 调式用。
.局部变量 i, 整数型, , , 
.局部变量 选中组, 列表项型, , "0", 
.局部变量 表项索引, 空白型, , , 
.局部变量 加数组用, 列表项型, , , 

 ' 刷选中表项 (选中组, 超级列表框1)
 ' 调试输出 (取数组成员数 (选中组))

 ' 刷选中表项 (选中组, 前列表框)

赋值 (加数组用.字, “中国人”)
赋值 (加数组用.编码, “sdff”)
加入成员 (选中组, 加数组用)
赋值 (加数组用.字, “中国我”)
赋值 (加数组用.编码, “sdfs”)
加入成员 (选中组, 加数组用)
赋值 (加数组用.字, “中人人”)
赋值 (加数组用.编码, “sdfa”)
加入成员 (选中组, 加数组用)


.计次循环首 (取数组成员数 (选中组), i)
    赋值 (表项索引, .插入表项 ())
    表项索引.置标题 (0, 选中组 [i], 字)
    表项索引.置标题 (1, 选中组 [i], 编码)
    表项索引.置标题 (2, 选中组 [i], 重复项)
.计次循环尾 ()
子程序_转unicode ({ 255, 0, 255, 0, 255, 0 })

.子程序 刷选中表项, 空白型, , 将选中项转到数组里删掉选中项
.参数 数组, 列表项型, 参考 数组, 
.参数 列表框, 超级列表框, , 

.局部变量 i, 整数型, , , 
.局部变量 选中数, 空白型, , , 
.局部变量 列表项, 列表项型, , , 

清除数组 (数组)
 ' 调试输出 (列表框.取表项数 () － 1)
.变量循环首 (相减 (列表框.取表项数 (), 1), 0, -1, i)
    
    .如果真 (等于 (列表框.取当前状态图片 (i), 1))
        赋值 (列表项.字, 列表框.取标题 (i, 0))
        赋值 (列表项.编码, 列表框.取标题 (i, 1))
        赋值 (列表项.重复项, 列表框.取标题 (i, 2))
        加入成员 (数组, 列表项)
        列表框.删除表项 (i)
    .如果真结束
    
.变量循环尾 ()
 ' .计次循环首 (取表项数 (), i)
     ' .如果真 (等于 (相减 (i, 1).取当前状态图片 (), 1))
         ' 列表项.字 ＝ 超级列表框1.取标题 (i － 1, 0)
         ' 列表项.编码 ＝ 超级列表框1.取标题 (i － 1, 1)
         ' 列表项.重复项 ＝ 超级列表框1.取标题 (i － 1, 2)
         ' 加入成员 (数组, 列表项)
    .如果真结束
    
 ' .计次循环尾 ()


.子程序 _按钮4_被单击, 空白型, , 
子程序_转移 ()

.子程序 子程序_转移, 空白型, , 
.参数 前列表框, 超级列表框, , 
.参数 移到列表框, 超级列表框, , 

.局部变量 选中组, 列表项型, , "0", 
.局部变量 i, 整数型, , , 
.局部变量 表项索引, 空白型, , , 

刷选中表项 (选中组, 前列表框)
.计次循环首 (取数组成员数 (选中组), i)
    赋值 (表项索引, 移到列表框.插入表项 ())
    移到列表框.置标题 (表项索引, 0, 选中组 [i], 字)
    移到列表框.置标题 (表项索引, 1, 选中组 [i], 编码)
    移到列表框.置标题 (表项索引, 2, 选中组 [i], 重复项)
.计次循环尾 ()


.子程序 _按钮7_被单击, 空白型, , 
子程序_转移 ()

.子程序 _按钮9_被单击, 空白型, , 
.局部变量 文件号, 整数型, , , 
.局部变量 文件内容, 文本型, , , 
.局部变量 文本组, 文本型, , "0", 
.局部变量 i, 整数型, , , 

赋值 (.初始目录, 取运行目录 ())
赋值 (.类型, 0)
.如果真 (等于 (打开 (), 假))
    返回 ()
.如果真结束
.如果真 (等于 (.文件名, “”))
    返回 ()
.如果真结束
赋值 (文件号, 打开文件 (.文件名, , ))
移到文件首 (文件号)
赋值 (文件内容, 读入文本 (文件号, ))
 ' 调试输出 (文件内容)'
赋值 (文本组, 分割文本 (文件内容, #换行符, ))
.计次循环首 (取数组成员数 (文本组), i)
    子程序_插列表 (删全部空 (文本组 [i]))
.计次循环尾 ()

.子程序 _按钮8_被单击, 空白型, , 
.局部变量 i, 整数型, , , 

.计次循环首 (取表项数 (), i)
    .如果真 (等于 (删全部空 (相减 (i, 1).取标题 (2)), “”))
        相减 (i, 1).置状态图片 (1)
    .如果真结束
    
.计次循环尾 ()

.子程序 _按钮5_被单击, 空白型, , 
.局部变量 i, 整数型, , , 
.局部变量 文本, 文本型, , , 
.局部变量 字节集转前, 字节集, , , 
.局部变量 字节集转后, 字节集, , , 
.局部变量 成功, 逻辑型, , , 
.局部变量 保存文件名, 文本型, , , 


赋值 (.类型, 1)
赋值 (.初始目录, 取运行目录 ())
.如果真 (等于 (打开 (), 假))
    返回 ()
.如果真结束
赋值 (保存文件名, .文件名)
.如果真 (不等于 (取文本右边 (保存文件名, 4), “.txt”))
    赋值 (保存文件名, 相加 (保存文件名, “.txt”))
.如果真结束

.计次循环首 (取表项数 (), i)
    赋值 (文本, 相加 (文本, 相减 (i, 1).取标题 (0), 相减 (i, 1).取标题 (1), #换行符))
.计次循环尾 ()
 ' 调试输出 (文本)
赋值 (字节集转前, 到字节集 (文本))

 ' 字节集转后 ＝ 编码转换 (字节集转前, #编码_GB2312, #编码_UTF_16, 成功)'utf_8,utf_7,utf_32,16be,16le
 ' 字节集转后 ＝ 编码转换 (字节集转前, #编码_GB2312, #编码_UTF_16, 成功)  ' 转换完的编码还不是原来码表的编码。要把字节集里的字节两两换位。
 ' #编码_GB18030
赋值 (字节集转后, 未知支持库函数_0 (字节集转前, #, #, 成功))
.如果真 (等于 (成功, 假))
    信息框 (“编码转换失败!”, #错误图标, )
    返回 ()
.如果真结束
赋值 (字节集转后, 子程序_转unicode (字节集转后))
.如果 (写到文件 (保存文件名, 字节集转后))
    信息框 (“成功”, 0, )
.否则
    信息框 (“失败”, 0, )
.如果结束

 ' 编码转换 (, , , )

.子程序 子程序_转unicode, 字节集, , #编码_UTF_16,不是unicode码，要转一下,并去掉最后的换行
.参数 字节集1, 字节集, , 

.局部变量 临时字节集, 字节集, , , 
.局部变量 字节数组, 字节型, , "0", 
.局部变量 i, 整数型, , , 
.局部变量 字节, 字节型, , , 

.计次循环首 (取字节集长度 (字节集1), i)
    加入成员 (字节数组, 取字节集数据 (字节集1, #字节型, i))
.计次循环尾 ()
.变量循环首 (1, 取数组成员数 (字节数组), 2, i)
    赋值 (字节, 字节数组 [i])
    赋值 (字节数组 [i], 字节数组 [相加 (i, 1)])
    赋值 (字节数组 [相加 (i, 1)], 字节)
.变量循环尾 ()
赋值 (临时字节集, 到字节集 (字节数组))
.如果真 (等于 (取字节集右边 (临时字节集, 4), { 13, 0, 10, 0 }))
    赋值 (临时字节集, 取字节集左边 (临时字节集, 相减 (取字节集长度 (临时字节集), 4)))
.如果真结束
 ' 暂停 ()
返回 (临时字节集)

.子程序 _单选框_五笔码_被单击, 空白型, , 
子程序_刷列表框列 ()

.子程序 _单选框_首拼码_被单击, 空白型, , 
子程序_刷列表框列 ()

.子程序 _按钮10_被单击, 空白型, , 
.局部变量 i, 整数型, , , 
.局部变量 文本, 文本型, , , 
.局部变量 字节集转前, 字节集, , , 
.局部变量 字节集转后, 字节集, , , 
.局部变量 成功, 逻辑型, , , 
.局部变量 保存文件名, 文本型, , , 

赋值 (.类型, 1)

.如果真 (等于 (打开 (), 假))
    返回 ()
.如果真结束
赋值 (保存文件名, .文件名)
.如果真 (不等于 (取文本右边 (保存文件名, 4), “.txt”))
    赋值 (保存文件名, 相加 (保存文件名, “.txt”))
.如果真结束

.计次循环首 (取表项数 (), i)
    赋值 (文本, 相加 (文本, 相减 (i, 1).取标题 (0), 相减 (i, 1).取标题 (1), #换行符))
.计次循环尾 ()
 ' 调试输出 (文本)
赋值 (字节集转前, 到字节集 (文本))
 ' 如果真 (取字节集右边 (字节集转前, 2) ＝ { 13, 10 })
 ' 取字节集左边 (字节集转前, 取字节集长度 (字节集转前) － 2)
.如果 (不等于 (取字节集右边 (原码表字节集, 2), { 13, 10 }))
    赋值 (字节集转前, 相加 (原码表字节集, { 13, 10 }, 字节集转前))
.否则
    赋值 (字节集转前, 相加 (原码表字节集, 字节集转前))
.如果结束


 ' 字节集转后 ＝ 编码转换 (字节集转前, #编码_GB2312, #编码_UTF_16, 成功)'utf_8,utf_7,utf_32,16be,16le
 ' 字节集转后 ＝ 编码转换 (字节集转前, #编码_GB2312, #编码_UTF_16, 成功)  ' 转换完的编码还不是原来码表的编码。要把字节集里的字节两两换位。
 ' #编码_GB18030
赋值 (字节集转后, 未知支持库函数_0 (字节集转前, #, #, 成功))
.如果真 (等于 (成功, 假))
    信息框 (“编码转换失败!”, #错误图标, )
    返回 ()
.如果真结束
赋值 (字节集转后, 子程序_转unicode (字节集转后))

.如果 (写到文件 (保存文件名, 字节集转后))
    
    信息框 (“成功”, 0, )
    
    
.否则
    信息框 (“失败”, 0, )
.如果结束



 ' 不属于任何一个程序集、类模块的函数：
