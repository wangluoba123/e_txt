 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 246
    高度 = 443
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “易用键盘鼠标大师”
    帮助文件名 = “”



.常量 鼠标移动, "1", , 
.常量 左键按下, "2", , 
.常量 左键抬起, "4", , 
.常量 中键按下, "32", , 
.常量 中键抬起, "64", , 
.常量 右键按下, "8", , 
.常量 右键抬起, "16", , 
.常量 绝对坐标, "-32768", , 
.常量 键抬起, "2", , 
.常量 键按下, "0", , 
.常量 扩展键, "1", , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 4 系统核心支持库




数据类型 鼠标位置, , 
    .成员 横向坐标, 整数型, , , 
    .成员 纵向坐标, 整数型, , , 

数据类型 按键记录, , 记录长度13个字节.
    .成员 时间间隔, 整数型, , , 
    .成员 键值, 字节型, , , 0，鼠标移动；其他为键盘键值
    .成员 键盘动作, 整数型, , , 或者是 鼠标水平位置
    .成员 垂直位置, 整数型, , , 鼠标垂直位置


.DLL命令 取按键状态, 短整数型, "user32.dll", "GetAsyncKeyState", , 
    .参数 鼠标键, 整数型, , 

.DLL命令 取鼠标位置, 整数型, "user32.dll", "GetCursorPos", , 
    .参数 当前鼠标位置, 鼠标位置, 传址, 

.DLL命令 模拟鼠标按键, 空白型, "", "mouse_event", , 
    .参数 鼠标动作, 整数型, , 
    .参数 水平位置, 整数型, , 
    .参数 垂直位置, 整数型, , 
    .参数 鼠标按键, 整数型, , 
    .参数 扩展信息, 整数型, , 

.DLL命令 模拟键盘按键, 空白型, "", "keybd_event", , 
    .参数 bVk, 字节型, , 
    .参数 bScan, 字节型, , 
    .参数 dwFlags, 整数型, , 
    .参数 dwExtraInfo, 整数型, , 

.窗口程序集 程序集_主窗口, , , 

.程序集变量 按键状态, 整数型, , "256", 
.程序集变量 时间线, 整数型, , , 
.程序集变量 鼠标前次位置, 鼠标位置, , , 
.程序集变量 操作记录, 按键记录, , "92000", 
.程序集变量 缓冲区记录数, 文本型, , , 
.程序集变量 当前记录, 整数型, , , 
.程序集变量 可否中断, 逻辑型, , , 
.程序集变量 屏幕宽度, 整数型, , , 
.程序集变量 屏幕高度, 整数型, , , 
.程序集变量 停止回放, 逻辑型, , , 
.子程序 判断按键, 空白型, , 
.参数 键值, 字节型, , 
.参数 当前状态, 整数型, , 

.判断开始 (等于 (当前状态, 0))
    .如果真 (不等于 (按键状态 [相加 (键值, 1)], 0))
        添加记录 (键值, #键抬起, 0)
    .如果真结束
    
.判断 (不等于 (当前状态, 0))
    .如果 (等于 (键值, #F3键))
        赋值 (可否中断, 真)
        返回 ()
    .否则
        
    .如果结束
    
    .如果真 (等于 (按键状态 [相加 (键值, 1)], 0))
        添加记录 (键值, #键按下, 0)
    .如果真结束
    
.默认
    
.判断结束
赋值 (按键状态 [相加 (键值, 1)], 当前状态)

.子程序 添加记录, 空白型, , 
.参数 键值, 字节型, , 为0表示鼠标移动，其他表示按键
.参数 键盘动作, 整数型, , 或 “水平位置”，传入的双精度数
.参数 垂直位置, 整数型, , 

赋值 (当前记录, 相加 (当前记录, 1))
.如果 (大于 (当前记录, 取数组成员数 (操作记录)))
    赋值 (可否中断, 真)
    信息框 (“缓冲区已满，录制被迫中止。”, #错误图标, “录制出错”)
    返回 ()
.否则
    
.如果结束
赋值 (操作记录 [当前记录], 时间间隔, 相减 (取启动时间 (), 时间线))
赋值 (操作记录 [当前记录], 键值, 键值)
赋值 (操作记录 [当前记录], 键盘动作, 键盘动作)
赋值 (操作记录 [当前记录], 垂直位置, 垂直位置)

赋值 (., 相加 (到文本 (当前记录), “ / ”, 缓冲区记录数))

.子程序 _按钮_记录_被单击, 空白型, , 
.局部变量 键值, 整数型, , , 
.局部变量 鼠标当前位置, 鼠标位置, , , 
.局部变量 鼠标动作, 整数型, , , 
.局部变量 脚本文件号, 整数型, , , 
.局部变量 记录数, 整数型, , , 
.局部变量 脚本文件名, 文本型, , , 

赋值 (., 真)
赋值 (., 真)
赋值 (., 假)
.如果真 (.)
    赋值 (., 2)
.如果真结束
赋值 (., 0) ' 关闭 “记录” 热键

.计次循环首 (256, 键值) ' 初始化按键状态
    取按键状态 (相减 (键值, 1))
    赋值 (按键状态 [键值], 0)
.计次循环尾 ()

赋值 (屏幕宽度, 取屏幕宽度 ()) ' 为获取鼠标坐标作准备
赋值 (屏幕高度, 取屏幕高度 ())
赋值 (当前记录, 0)
赋值 (时间线, 取启动时间 ())

赋值 (可否中断, 假) ' 开始记录
.判断循环首 (等于 (可否中断, 假))
    取鼠标位置 (鼠标当前位置)
    .如果真 (或者 (不等于 (鼠标前次位置.横向坐标, 鼠标当前位置.横向坐标), 不等于 (鼠标前次位置.纵向坐标, 鼠标当前位置.纵向坐标)))
        赋值 (鼠标前次位置, 鼠标当前位置)
        添加记录 (0, 整除 (相乘 (鼠标当前位置.横向坐标, 65535), 屏幕宽度), 整除 (相乘 (鼠标当前位置.纵向坐标, 65535), 屏幕高度))
    .如果真结束
    
    .变量循环首 (146, 255, 1, 键值) ' 先检查额外按键信息。OEM扫描码 处理，扩展键 信息
        判断按键 (键值, 取按键状态 (键值))
    .变量循环尾 ()
    .变量循环首 (0, 145, 1, 键值)
        判断按键 (键值, 取按键状态 (键值))
    .变量循环尾 ()
    
    处理事件 ()
    延时 (10) ' 取启动时间（） 最少间隔是 15ms
.判断循环尾 ()

.如果 (输入框 (“请输入脚本文件名：”, “保存脚本”, 到文本 (取现行时间 ()), 脚本文件名, ))
    创建目录 (相加 (取运行目录 (), “\scripts”))
    赋值 (脚本文件号, 打开文件 (相加 (取运行目录 (), “\scripts\”, 脚本文件名, “.mrc”), #重写, #禁止写))
    .计次循环首 (当前记录, 记录数)
        写出数据 (脚本文件号, 操作记录 [记录数], 时间间隔, 操作记录 [记录数], 键值, 操作记录 [记录数], 键盘动作, 操作记录 [记录数], 垂直位置)
    .计次循环尾 ()
    关闭文件 (脚本文件号)
.否则
    
.如果结束
现存脚本 ()

赋值 (., 100) ' 打开 “记录”热键
赋值 (., 假)
赋值 (., 真)
赋值 (., 0)

.子程序 _按钮_停止_被单击, 空白型, , 
赋值 (可否中断, 真)

.子程序 现存脚本, 空白型, , 
.局部变量 脚本文件名, 文本型, , , 

赋值 (., 真)
赋值 (., 真)
清空 ()
赋值 (脚本文件名, 寻找文件 (相加 (取运行目录 (), “\scripts\*.mrc”), ))
.判断循环首 (不等于 (脚本文件名, “”))
    脚本文件名.加入项目 ()
    赋值 (脚本文件名, 寻找文件 ())
.判断循环尾 ()

.子程序 读取脚本, 空白型, , 
.参数 脚本文件名, 文本型, , 

.局部变量 脚本文件号, 整数型, , , 

赋值 (脚本文件号, 打开文件 (脚本文件名, #读入, #禁止写))
赋值 (当前记录, 0)
.判断循环首 (等于 (是否在文件尾 (脚本文件号, ), 假))
    赋值 (当前记录, 相加 (当前记录, 1))
    读入数据 (脚本文件号, 操作记录 [当前记录], 时间间隔, 操作记录 [当前记录], 键值, 操作记录 [当前记录], 键盘动作, 操作记录 [当前记录], 垂直位置)
.判断循环尾 ()
关闭文件 (脚本文件号)
赋值 (., 假)

.子程序 _按钮_回放_被单击, 空白型, , 
.局部变量 记录数, 整数型, , , 
.局部变量 执行次数, 整数型, , , 

读取脚本 (相加 (取运行目录 (), “\scripts\”, .取项目文本 (.)))

.如果真 (等于 (., 真))
    赋值 (., 2)
.如果真结束
赋值 (., 真)
赋值 (., 真)

赋值 (停止回放, 假)
.计次循环首 (到数值 (.), 执行次数)
    赋值 (., 相加 (到文本 (执行次数), “ / ”, .))
    
    赋值 (时间线, 取启动时间 ())
    .计次循环首 (当前记录, 记录数)
        .判断循环首 (并且 (大于或等于 (取启动时间 (), 时间线), 小于或等于 (相减 (取启动时间 (), 时间线), 操作记录 [记录数], 时间间隔))) ' 解决 取启动时间（） 往复的问题
            处理事件 ()
            延时 (3) ' 1/3
        .判断循环尾 ()
        
        .判断开始 (等于 (操作记录 [记录数], 键值, 0)) ' 鼠标移动
            模拟鼠标按键 (位或 (#鼠标移动, #绝对坐标), 操作记录 [记录数], 键盘动作, 操作记录 [记录数], 垂直位置, 0, 0)
        .判断 (等于 (操作记录 [记录数], 键值, 1)) ' 鼠标左键
            .如果 (等于 (操作记录 [记录数], 键盘动作, #键按下))
                模拟鼠标按键 (#左键按下, 0, 0, 0, 0)
            .否则
                模拟鼠标按键 (#左键抬起, 0, 0, 0, 0)
            .如果结束
            
        .判断 (等于 (操作记录 [记录数], 键值, 2)) ' 鼠标右键
            .如果 (等于 (操作记录 [记录数], 键盘动作, #键按下))
                模拟鼠标按键 (#右键按下, 0, 0, 0, 0)
            .否则
                模拟鼠标按键 (#右键抬起, 0, 0, 0, 0)
            .如果结束
            
        .判断 (等于 (操作记录 [记录数], 键值, 4)) ' 鼠标中键
            .如果 (等于 (操作记录 [记录数], 键盘动作, #键按下))
                模拟鼠标按键 (#中键按下, 0, 0, 0, 0)
            .否则
                模拟鼠标按键 (#中键抬起, 0, 0, 0, 0)
            .如果结束
            
        .判断 (大于 (操作记录 [记录数], 键值, 4)) ' 键盘键
            模拟键盘按键 (操作记录 [记录数], 键值, 0, 操作记录 [记录数], 键盘动作, 0)
        .默认
            
        .判断结束
        赋值 (., 相加 (到文本 (记录数), “ / ”, 缓冲区记录数))
        处理事件 ()
        .如果真 (停止回放)
            跳出循环 ()
        .如果真结束
        
    .计次循环尾 ()
    .如果真 (停止回放)
        跳出循环 ()
    .如果真结束
    
    延时 (相乘 (到数值 (.), 1000))
.计次循环尾 ()
赋值 (., “执行完毕”)
赋值 (., 假)
赋值 (., 假)
 ' 按钮_停止.禁止 ＝ 真
赋值 (., 0)

.子程序 __启动窗口_创建完毕, 空白型, , 
.局部变量 键值, 整数型, , , 

赋值 (缓冲区记录数, 到文本 (取数组成员数 (操作记录)))

取按键状态 (#F2键)
取按键状态 (#F3键)
取按键状态 (#F4键)
赋值 (., 100)
现存脚本 ()

.子程序 加密机器码, 文本型, , 
.参数 机器码, 文本型, , 

.局部变量 字符位置, 整数型, , , 
.局部变量 加密后文本, 文本型, , , 
.局部变量 二次加密文本, 文本型, , , 

.变量循环首 (取文本长度 (机器码), 1, -1, 字符位置)
    赋值 (加密后文本, 相加 (加密后文本, 字符 (相加 (到数值 (取文本中间 (机器码, 字符位置, 1)), 取代码 (“p”, )))))
.变量循环尾 ()
.计次循环首 (取文本长度 (机器码), 字符位置)
    赋值 (二次加密文本, 相加 (二次加密文本, 字符 (相减 (取代码 (加密后文本, 字符位置), 到数值 (取文本中间 (机器码, 字符位置, 1))))))
.计次循环尾 ()
返回 (二次加密文本)

.子程序 _时钟_热键_周期事件, 空白型, , 
.如果 (不等于 (取按键状态 (#F2键), 0))
    _按钮_记录_被单击 ()
.否则
    
.如果结束
.如果 (不等于 (取按键状态 (#F4键), 0))
    赋值 (停止回放, 真)
.否则
    
.如果结束


.子程序 _列表框_脚本_列表项被选择, 空白型, , 
赋值 (., 假)
赋值 (., 假)

.子程序 _按钮_删除_被单击, 空白型, , 
删除文件 (相加 (取运行目录 (), “\scripts\”, .取项目文本 (.)))
现存脚本 ()

.子程序 __启动窗口_将被销毁, 空白型, , 
结束 ()

.子程序 _调节器_间隔时间_调节钮被按下, 空白型, , 
.参数 按钮值, 整数型, , 

.如果 (等于 (按钮值, 1))
    赋值 (., 到文本 (相加 (到数值 (.), 1)))
.否则
    
    .如果真 (大于 (到数值 (.), 0))
        赋值 (., 到文本 (相减 (到数值 (.), 1)))
    .如果真结束
    
.如果结束


.子程序 _调节器_回放次数_调节钮被按下, 空白型, , 
.参数 按钮值, 整数型, , 

.如果 (等于 (按钮值, 1))
    赋值 (., 到文本 (相加 (到数值 (.), 1)))
.否则
    
    .如果真 (大于 (到数值 (.), 1))
        赋值 (., 到文本 (相减 (到数值 (.), 1)))
    .如果真结束
    
.如果结束



 ' 不属于任何一个程序集、类模块的函数：
