 ' 文件类型：Windows控制台程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 380
    高度 = 250
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假



.常量 DM_前台, "“normal”", 隐藏, 正常模式,平常我们用的前台截屏模式
.常量 DM_DX, "“dx”", 隐藏, dx模式
.常量 DM_DX2, "“dx2”", 隐藏, dx2模式
.常量 DM_DX3, "“dx3”", 隐藏, dx3模式
.常量 DM_GDI, "“gdi”", 隐藏, gdi模式
.常量 DM_GDI2, "“gdi2”", 隐藏, gdi2模式
.常量 DM_windows, "“windows”", 隐藏, Windows模式
.常量 DM_windows2, "“windows2”", 隐藏, Windows2模式
.常量 DM_windows3, "“windows3”", 隐藏, Windows3模式
.常量 DM_0, "0", 隐藏, 推荐模式此模式比较通用，而且后台效果是最好的.
.常量 DM_1_VIP, "1", 隐藏, 和模式0效果一样，如果模式0会失败时，可以尝试此模式.
.常量 DM_2, "2", 隐藏, 同模式0,此模式为老的模式0,尽量不要用此模式，除非有兼容性问题.
.常量 DM_3_VIP, "3", 隐藏, 同模式1,此模式为老的模式1,尽量不要用此模式，除非有兼容性问题.
.常量 DM_4, "4", 隐藏, 同模式0,如果模式0有崩溃问题，可以尝试此模式.
.常量 DM_5_VIP, "5", 隐藏, 同模式1, 如果模式0有崩溃问题，可以尝试此模式.
.常量 DM_6_VIP, "6", 隐藏, 同模式0，如果模式0有崩溃问题，可以尝试此模式.
.常量 DM_7_VIP, "7", 隐藏, 同模式1，如果模式1有崩溃问题，可以尝试此模式.
.常量 DM_101_VIP, "101", 隐藏, 超级绑定模式. 可隐藏目标进程中的dm.dll.避免被恶意检测.效果要比dx.public.hide.dll好. 推荐使用.
.常量 DM_103_VIP, "103", 隐藏, 同模式101，如果模式101有崩溃问题，可以尝试此模式.
.常量 DMex_图色_2d_dx, "“dx.graphic.2d”", 隐藏, 2d窗口的dx图色模式 
.常量 DMex_图色_2d_dx_2_VIP, "“dx.graphic.2d.2”", 隐藏, 2d窗口的dx图色模式  是dx.graphic.2d的增强模式.兼容性更好.
.常量 DMex_图色_3d_dx, "“dx.graphic.3d”", 隐藏, 3d窗口的dx图色模式,注意采用这个模式，必须关闭窗口3D视频设置的全屏抗锯齿选项.
.常量 DMex_图色_3d_dx_8_VIP, "“dx.graphic.3d.8”", 隐藏, 3d窗口的dx8图色模式,注意采用这个模式，必须关闭窗口3D视频设置的全屏抗锯齿选项. 这个模式支持某些老的引擎
.常量 DMex_鼠标_锁位置_api, "“dx.mouse.position.lock.api”", 隐藏, 此模式表示通过封锁系统API，来锁定鼠标位置.
.常量 DMex_鼠标_锁位置_msg, "“dx.mouse.position.lock.message”", 隐藏, 此模式表示通过封锁系统消息，来锁定鼠标位置.
.常量 DMex_鼠标_锁输入焦点_api, "“dx.mouse.focus.input.api”", 隐藏, 此模式表示通过封锁系统API来锁定鼠标输入焦点.
.常量 DMex_鼠标_锁输入焦点_msg, "“dx.mouse.focus.input.message”", 隐藏, 此模式表示通过封锁系统消息来锁定鼠标输入焦点.
.常量 DMex_鼠标_锁刷新区域_api, "“dx.mouse.clip.lock.api”", 隐藏, 此模式表示通过封锁系统API来锁定刷新区域。注意，使用这个模式，在绑定前，必须要让窗口完全显示出来.
.常量 DMex_鼠标_锁输入接口_api, "“dx.mouse.input.lock.api”", 隐藏, 此模式表示通过封锁系统API来锁定鼠标输入接口.
.常量 DMex_鼠标_锁输入状态_api, "“dx.mouse.state.api”", 隐藏, 此模式表示通过封锁系统API来锁定鼠标输入状态.
.常量 DMex_鼠标_锁输入状态_msg, "“dx.mouse.state.message”", 隐藏, 此模式表示通过封锁系统消息来锁定鼠标输入状态.
.常量 DMex_鼠标_模拟dx输入_api, "“dx.mouse.api”", 隐藏, 此模式表示通过封锁系统API来模拟dx鼠标输入.
.常量 DMex_鼠标_后台特征码_VIP, "“dx.mouse.cursor”", 隐藏, 开启此模式，可以后台获取鼠标特征码.
.常量 DMex_鼠标_突破封锁_VIP, "“dx.mouse.raw.input”", 隐藏, 有些窗口需要这个才可以正常操作鼠标
.常量 DMex_鼠标_补充_VIP, "“dx.mouse.input.lock.api2”", 隐藏, 部分窗口在后台操作时，前台鼠标会移动,需要这个属性
.常量 DMex_鼠标_补充2_VIP, "“dx.mouse.input.lock.api3”", 隐藏, 部分窗口在后台操作时，前台鼠标会移动,需要这个属性.
.常量 DMex_键盘_锁输入接口_api, "“dx.keypad.input.lock.api”", 隐藏, 此模式表示通过封锁系统API来锁定键盘输入接口
.常量 DMex_键盘_锁输入状态_api, "“dx.keypad.state.api”", 隐藏, 此模式表示通过封锁系统API来锁定键盘输入状态.
.常量 DMex_键盘_模拟dx输入_api, "“dx.keypad.api”", 隐藏, 
.常量 DMex_键盘_突破封锁_VIP, "“dx.keypad.raw.input”", 隐藏, 有些窗口需要这个才可以正常操作键盘
.常量 DMex_公共_窗口锁激活_api, "“dx.public.active.api”", 隐藏, ★此模式表示通过封锁系统API来锁定窗口激活状态.  注意，部分窗口在此模式下会耗费大量资源 慎用
.常量 DMex_公共_窗口锁激活_msg, "“dx.public.active.message”", 隐藏, ★此模式表示通过封锁系统消息来锁定窗口激活状态.  注意，部分窗口在此模式下会耗费大量资源慎用. 另外如果要让此模式生效，必须在绑定前，让绑定窗口处于激活状态,否则此模式将失效. 比如dm.SetWindowState hwnd,1 然后再绑定.
.常量 DMex_公共_窗口锁绑定位置, "“dx.public.disable.window.position”", 隐藏, 此模式将锁定绑定窗口位置.不可与"dx.public.fake.window.min"共用
.常量 DMex_公共_窗口锁大小, "“dx.public.disable.window.size”", 隐藏, 此模式将锁定绑定窗口,禁止改变大小. 不可与"dx.public.fake.window.min"共用
.常量 DMex_公共_窗口_禁止, "“dx.public.disable.window.minmax”", 隐藏, 此模式将禁止窗口最大化和最小化,但是付出的代价是窗口同时也会被置顶. 不可与"dx.public.fake.window.min"共用
.常量 DMex_公共_窗口_假最小化_VIP, "“dx.public.fake.window.min”", 隐藏, 此模式将允许目标窗口在最小化状态时，仍然能够像非最小化一样操作.. 另注意，此模式会导致任务栏顺序重排，所以如果是多开模式下，会看起来比较混乱，建议单开使用，多开不建议使用
.常量 DMex_公共_大漠_隐藏_VIP, "“dx.public.hide.dll”", 隐藏, 此模式将会隐藏目标进程的大漠插件，避免被检测..另外使用此模式前，请仔细做过测试，此模式可能会造成目标进程不稳定，出现崩溃
.常量 DMex_公共_窗口_突破遮挡_VIP, "“dx.public.active.api2”", 隐藏, 此模式表示通过封锁系统API来锁定窗口激活状态. 部分窗口遮挡无法后台,需要这个属性
.常量 DMex_公共_Ime_辅助_VIP, "“dx.public.input.ime”", 隐藏, 此模式是配合SendStringIme使用. 具体可以查看SendStringIme接口
.常量 DMex_公共_DX保护_VIP, "“dx.public.graphic.protect”", 隐藏, 此模式可以保护dx图色不被恶意检测.同时对dx.keypad.api和dx.mouse.api也有保护效果
.常量 DMex_公共_窗口_禁显_VIP, "“dx.public.disable.window.show”", 隐藏, 禁止目标窗口显示,这个一般用来配合dx.public.fake.window.min来使用
.常量 DMex_公共_后台_突破保护_VIP, "“dx.public.anti.api”", 隐藏, 此模式可以突破部分窗口对后台的保护
.常量 DMex_公共_内存_突破保护_VIP, "“dx.public.memory”", 隐藏, 此模式可以让内存读写函数突破保护.只要绑定成功即可操作内存函数
.常量 DMex_公共_dx键鼠保护_VIP, "“dx.public.km.protect”", 隐藏, 此模式可以保护dx键鼠不被恶意检测.最好配合dx.public.anti.api一起使用. 此属性可能会导致部分后台功能失效
.常量 DMex_公共_避免假死, "“dx.public.prevent.block”", 隐藏, 绑定模式1 3 5 7 101 103下，可能会导致部分窗口卡死. 这个属性可以避免卡死
.图片 Goto_标签1, " ' 已保存到：D:\易语言学习\Data\QQ轻聊登录.e\Goto_标签1", 隐藏, 如果觉得标签不够用，也可以自定义标签，但定义的标签必须为一组花指令或有效汇编代码，否则程序崩溃。
.图片 Goto_标签2, " ' 已保存到：D:\易语言学习\Data\QQ轻聊登录.e\Goto_标签2", 隐藏, 如果觉得标签不够用，也可以自定义标签，但定义的标签必须为一组花指令或有效汇编代码，否则程序崩溃。
.图片 Goto_标签3, " ' 已保存到：D:\易语言学习\Data\QQ轻聊登录.e\Goto_标签3", 隐藏, 如果觉得标签不够用，也可以自定义标签，但定义的标签必须为一组花指令或有效汇编代码，否则程序崩溃。
.图片 Goto_标签4, " ' 已保存到：D:\易语言学习\Data\QQ轻聊登录.e\Goto_标签4", 隐藏, 如果觉得标签不够用，也可以自定义标签，但定义的标签必须为一组花指令或有效汇编代码，否则程序崩溃。
.图片 Goto_标签5, " ' 已保存到：D:\易语言学习\Data\QQ轻聊登录.e\Goto_标签5", 隐藏, 如果觉得标签不够用，也可以自定义标签，但定义的标签必须为一组花指令或有效汇编代码，否则程序崩溃。
.图片 Goto_标签6, " ' 已保存到：D:\易语言学习\Data\QQ轻聊登录.e\Goto_标签6", 隐藏, 如果觉得标签不够用，也可以自定义标签，但定义的标签必须为一组花指令或有效汇编代码，否则程序崩溃。
.图片 Goto_标签7, " ' 已保存到：D:\易语言学习\Data\QQ轻聊登录.e\Goto_标签7", 隐藏, 如果觉得标签不够用，也可以自定义标签，但定义的标签必须为一组花指令或有效汇编代码，否则程序崩溃。
.图片 Goto_标签8, " ' 已保存到：D:\易语言学习\Data\QQ轻聊登录.e\Goto_标签8", 隐藏, 如果觉得标签不够用，也可以自定义标签，但定义的标签必须为一组花指令或有效汇编代码，否则程序崩溃。
.图片 Goto_标签9, " ' 已保存到：D:\易语言学习\Data\QQ轻聊登录.e\Goto_标签9", 隐藏, 如果觉得标签不够用，也可以自定义标签，但定义的标签必须为一组花指令或有效汇编代码，否则程序崩溃。
.图片 Goto_标签10, " ' 已保存到：D:\易语言学习\Data\QQ轻聊登录.e\Goto_标签10", 隐藏, 如果觉得标签不够用，也可以自定义标签，但定义的标签必须为一组花指令或有效汇编代码，否则程序崩溃。
.图片 皮肤_01, " ' 已保存到：D:\易语言学习\Data\QQ轻聊登录.e\皮肤_01", 隐藏, 
.图片 皮肤_02, " ' 已保存到：D:\易语言学习\Data\QQ轻聊登录.e\皮肤_02", 隐藏, 
.图片 皮肤_03, " ' 已保存到：D:\易语言学习\Data\QQ轻聊登录.e\皮肤_03", 隐藏, 
.图片 皮肤_04, " ' 已保存到：D:\易语言学习\Data\QQ轻聊登录.e\皮肤_04", 隐藏, 
.图片 皮肤_05, " ' 已保存到：D:\易语言学习\Data\QQ轻聊登录.e\皮肤_05", 隐藏, 
.图片 皮肤_MSN, " ' 已保存到：D:\易语言学习\Data\QQ轻聊登录.e\皮肤_MSN", 隐藏, 
.图片 皮肤_QQ2009_宽_底边, " ' 已保存到：D:\易语言学习\Data\QQ轻聊登录.e\皮肤_QQ2009_宽_底边", 隐藏, 
.图片 皮肤_QQ2009_窄_底边, " ' 已保存到：D:\易语言学习\Data\QQ轻聊登录.e\皮肤_QQ2009_窄_底边", 隐藏, 
.图片 皮肤_QQ影音, " ' 已保存到：D:\易语言学习\Data\QQ轻聊登录.e\皮肤_QQ影音", 隐藏, 
.图片 皮肤_REAL, " ' 已保存到：D:\易语言学习\Data\QQ轻聊登录.e\皮肤_REAL", 隐藏, 
.图片 皮肤_积木, " ' 已保存到：D:\易语言学习\Data\QQ轻聊登录.e\皮肤_积木", 隐藏, 
.图片 皮肤_炫绿, " ' 已保存到：D:\易语言学习\Data\QQ轻聊登录.e\皮肤_炫绿", 隐藏, 
.图片 皮肤_中国红, " ' 已保存到：D:\易语言学习\Data\QQ轻聊登录.e\皮肤_中国红", 隐藏, 
.图片 皮肤_透明, " ' 已保存到：D:\易语言学习\Data\QQ轻聊登录.e\皮肤_透明", 隐藏, 
.图片 皮肤_蓝色, " ' 已保存到：D:\易语言学习\Data\QQ轻聊登录.e\皮肤_蓝色", 隐藏, 
.图片 皮肤_漂流瓶, " ' 已保存到：D:\易语言学习\Data\QQ轻聊登录.e\皮肤_漂流瓶", 隐藏, 
.图片 皮肤_office2007, " ' 已保存到：D:\易语言学习\Data\QQ轻聊登录.e\皮肤_office2007", 隐藏, 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 5 3 系统核心支持库



 ' 所需要的模块
 ' 脚本吧 E:\模块\jb8.ec


数据类型 多线程信息, 公开, 
    .成员 线程句柄, 整数型, , , 本线程的句柄信息
    .成员 大漠中文版, 大漠中文版, , , 主线程创建好的dm对象
    .成员 大漠英文版, 大漠英文版, , , 主线程创建好的dm对象
    .成员 窗口句柄, 整数型, , , 窗口句柄
    .成员 大漠版本类型, 整数型, , , 
    .成员 整数1, 整数型, , , 
    .成员 整数2, 整数型, , , 
    .成员 整数3, 整数型, , , 
    .成员 整数4, 整数型, , , 
    .成员 整数5, 整数型, , , 
    .成员 文本1, 文本型, , , 
    .成员 文本2, 文本型, , , 
    .成员 文本3, 文本型, , , 
    .成员 文本4, 文本型, , , 
    .成员 文本5, 文本型, , , 
    .成员 逻辑1, 逻辑型, , , 
    .成员 逻辑2, 逻辑型, , , 
    .成员 逻辑3, 逻辑型, , , 
    .成员 逻辑4, 逻辑型, , , 
    .成员 逻辑5, 逻辑型, , , 
    .成员 时间1, 日期时间型, , , 
    .成员 时间2, 日期时间型, , , 

数据类型 多线程许可证, 公开, 多线程许可证特定类型
    .成员 DebugInfo, 整数型, , , 
    .成员 LockCount, 整数型, , , 
    .成员 RecursionCount, 整数型, , , 
    .成员 OwningThread, 整数型, , , 
    .成员 LockSemaphore, 整数型, , , 
    .成员 SpinCount, 整数型, , , 

.全局变量 许可证, 多线程许可证, 公开, , 

.DLL命令 初始化COM, 空白型, "ole32.dll", "CoInitialize", 公开, ‘多线程时初始化COM
    .参数 pvReserved, 整数型, , 默认： 0

.DLL命令 卸载COM, 空白型, "ole32.dll", "CoUninitialize", 公开, ‘多线程结束时卸载COM

.窗口程序集 窗口程序集_启动窗口, , , 

.程序集变量 大漠操作模块, 大漠中文版, , , 
.子程序 __启动窗口_创建完毕, 空白型, , 
.如果真 (等于 (大漠插件注册 (相加 (取运行目录 (), “\dm.dll”)), 假))
    信息框 (“大漠注册失败”, 0, , )
.如果真结束
.如果真 (等于 (大漠操作模块.创建对象 (), 假))
    信息框 (“大漠创建失败”, 0, , )
.如果真结束
大漠操作模块.错误提示开关 (0)
大漠操作模块.置全局路径 (相加 (取运行目录 (), “\Data\”))
大漠操作模块.鼠标_置间隔 (“windows”, 20)
大漠操作模块.字库_置文件 (相加 (取运行目录 (), “\Data\QQ轻聊版字库.txt”))

.子程序 子程序1, 空白型, , 
.局部变量 Ex, 整数型, , , 
.局部变量 Ey, 整数型, , , 

大漠操作模块.找字 (279, 244, 322, 262, “看|不|清”, “2685e3-666666”, 0.95, Ex, Ey) ' 验证码
大漠操作模块.找字 (351, 175, 411, 198, “找|回|密|码”, “2685e3-666666”, 0.95, Ex, Ey) ' 密码错误
大漠操作模块.找字 (352, 268, 411, 284, “找|回|密|码”, “2685e3-666666”, 0.95, Ex, Ey) ' 密码错误


.类模块 大漠英文版, , , 

.子程序 创建对象, 逻辑型, , 创建大漠,成功返回真，失败返回假


.子程序 销毁对象, 空白型, , 销毁大漠


.子程序 技能释放_jb8, 空白型, , 智能释放技能，支持多技能和多间隔，具体看参数说明（脚本吧首创）
.参数 技能列表, 文本型, , 格式：“F1|F2|F3|F4”，无限扩展支持，但必须用“|”隔开
.参数 间隔列表, 文本型, , 格式：“5|6|7|10”，和技能列表对应，单位：秒，用“|”隔开
.参数 每次按键延时, 整数型, , 单位是毫秒



.子程序 逐字输入_jb8, 空白型, , 模拟手打的方式逐字输入，可以是数字和字符串，需传递大漠对象
.参数 字符, 文本型, , 需要输入的字符串，数字需要用双引号，例如：“1234”
.参数 延时, 整数型, , 每次输入的延时，单位：毫秒



.子程序 圆形渐开线_jb8, 逻辑型, , 找到特征码返回真，否则返回假
.参数 鼠标特征码, 文本型, , 找到此特征码后会直接返回子程序
.参数 中心点x坐标, 整数型, , 
.参数 中心点y坐标, 整数型, , 
.参数 两点间距离, 整数型, , 
.参数 递增半径, 整数型, , 每次移动的递增距离
.参数 圈数, 整数型, , 共移动多少圈
.参数 移动延时, 整数型, , 



.子程序 鼠标移动_梦幻_jb8, 空白型, , 移动鼠标，梦幻西游偏移专用_找色型
.参数 x, 整数型, , 
.参数 y, 整数型, , 



.子程序 鼠标移动_梦幻2_jb8, 空白型, , 移动鼠标，梦幻西游偏移专用_找图型
.参数 参_X, 整数型, , 
.参数 参_Y, 整数型, , 
.参数 参_X偏移, 整数型, 可空, X坐标允许的偏移值
.参数 参_Y偏移, 整数型, 可空, Y坐标允许的偏移值



.子程序 Ver, 文本型, , 获取DLL版本号


.子程序 SetPath, 整数型, , 设置全局路径,设置了此路径后,所有接口调用中,相关的文件都相对于此路径. 比如图片,字库等.
.参数 path, 文本型, , 路径,可以是相对路径,也可以是绝对路径



.子程序 Ocr, 文本型, , 识别屏幕范围(x1,y1,x2,y2)内符合color_format的字符串,并且相似度为sim,sim取值范围(0.1-1.0),这个值越大越精确,越大速度越快,越小速度越慢,请斟酌使用!
.参数 x1, 整数型, , 区域的左上X坐标
.参数 y1, 整数型, , 区域的左上Y坐标
.参数 x2, 整数型, , 区域的右上X坐标
.参数 y2, 整数型, , 区域的右下Y坐标
.参数 color, 文本型, , 颜色格式串，示例："ffffff-000000"
.参数 sim, 双精度小数型, , 相似度，取值范围 0.1-1.0



.子程序 FindStr, 整数型, , 在屏幕范围(x1,y1,x2,y2)内,查找string(可以是任意个字符串的组合),并返回符合color_format的坐标位置,相似度sim同Ocr接口描述,(多色,差色查找类似于Ocr接口,不再重述)
.参数 x1, 整数型, , 区域的左上X坐标
.参数 y1, 整数型, , 区域的左上Y坐标
.参数 x2, 整数型, , 区域的右上X坐标
.参数 y2, 整数型, , 区域的右下Y坐标
.参数 str, 文本型, , 待查找的字符串,可以是字符串组合，比如"长安|洛阳|大雁塔",中间用"|"来分割字符串
.参数 color, 文本型, , 颜色格式串，示例："ffffff-000000"
.参数 sim, 双精度小数型, , 相似度，取值范围 0.1-1.0
.参数 x, 整数型, 参考, 返回X坐标 没找到返回-1
.参数 y, 整数型, 参考, 返回Y坐标 没找到返回-1



.子程序 GetResultCount, 整数型, , 对插件部分接口的返回值进行解析,并返回ret中的坐标个数
.参数 str, 文本型, , 部分接口的返回串



.子程序 GetResultPos, 整数型, , 对插件部分接口的返回值进行解析,并根据指定的第index个坐标,返回具体的值
.参数 str, 文本型, , 部分接口的返回串
.参数 index, 整数型, , 第几个坐标
.参数 x, 整数型, 参考, 返回X坐标
.参数 y, 整数型, 参考, 返回Y坐标



.子程序 UseDict, 整数型, , 表示使用哪个字库文件进行识别(index范围:0-9)
.参数 index, 整数型, , 字库编号(0-9)



.子程序 GetBasePath, 文本型, , 获取注册在系统中的dm.dll的路径


.子程序 SetDictPwd, 整数型, , 设置字库的密码,在SetDict前调用,目前的设计是,所有字库通用一个密码
.参数 pwd, 文本型, , 字库密码



.子程序 OcrInFile, 文本型, , 识别位图中区域(x1,y1,x2,y2)的文字
.参数 x1, 整数型, , 区域的左上X坐标
.参数 y1, 整数型, , 区域的左上Y坐标
.参数 x2, 整数型, , 区域的右上X坐标
.参数 y2, 整数型, , 区域的右下Y坐标
.参数 pic_name, 文本型, , 图片文件名
.参数 color, 文本型, , 颜色格式串，示例："ffffff-000000"
.参数 sim, 双精度小数型, , 相似度,取值范围0.1-1.0



.子程序 Capture, 整数型, , 抓取指定区域(x1, y1, x2, y2)的图像,保存为file(24位位图)
.参数 x1, 整数型, , 区域的左上X坐标
.参数 y1, 整数型, , 区域的左上Y坐标
.参数 x2, 整数型, , 区域的右上X坐标
.参数 y2, 整数型, , 区域的右下Y坐标
.参数 file, 文本型, , 保存的文件名,保存的地方一般为SetPath中设置的目录，当然这里也可以指定全路径名



.子程序 KeyPress, 整数型, , 按下指定的虚拟键码
.参数 vk, 整数型, , 虚拟按键码



.子程序 KeyDown, 整数型, , 按住指定的虚拟键码
.参数 vk, 整数型, , 虚拟按键码



.子程序 KeyUp, 整数型, , 弹起指定的虚拟键码
.参数 vk, 整数型, , 虚拟按键码



.子程序 LeftClick, 整数型, , 按下鼠标左键


.子程序 RightClick, 整数型, , 按下鼠标右键


.子程序 MiddleClick, 整数型, , 按下鼠标中键


.子程序 LeftDoubleClick, 整数型, , 双击鼠标左键


.子程序 LeftDown, 整数型, , 按住鼠标左键


.子程序 LeftUp, 整数型, , 弹起鼠标左键


.子程序 RightDown, 整数型, , 按住鼠标右键


.子程序 RightUp, 整数型, , 弹起鼠标右键


.子程序 MoveTo, 整数型, , 把鼠标移动到目的点(x,y)
.参数 x, 整数型, , X坐标
.参数 y, 整数型, , Y坐标



.子程序 MoveR, 整数型, , 鼠标相对于上次的位置移动rx,ry
.参数 rx, 整数型, , 相对于上次的X偏移
.参数 ry, 整数型, , 相对于上次的Y偏移



.子程序 GetColor, 文本型, , 获取(x,y)的颜色,颜色返回格式"RRGGBB",注意,和按键的颜色格式相反
.参数 x, 整数型, , X坐标
.参数 y, 整数型, , Y坐标



.子程序 GetColorBGR, 文本型, , 获取(x,y)的颜色,颜色返回格式"BBGGRR"
.参数 x, 整数型, , X坐标
.参数 y, 整数型, , Y坐标



.子程序 RGB2BGR, 文本型, , 把RGB的颜色格式转换为BGR(按键格式)
.参数 rgb_color, 文本型, , rgb格式的颜色字符串



.子程序 BGR2RGB, 文本型, , 把BGR(按键格式)的颜色格式转换为RGB
.参数 bgr_color, 文本型, , bgr格式的颜色字符串



.子程序 UnBindWindow, 整数型, , 解除绑定窗口,并释放系统资源


.子程序 CmpColor, 整数型, , 比较指定坐标点(x,y)的颜色
.参数 x, 整数型, , X坐标
.参数 y, 整数型, , Y坐标
.参数 color, 文本型, , 颜色格式串，示例："ffffff-000000"
.参数 sim, 双精度小数型, , 相似度,取值范围0.1-1.0



.子程序 ClientToScreen, 整数型, , 把窗口坐标转换为屏幕坐标
.参数 hwnd, 整数型, , 指定的窗口句柄
.参数 x, 整数型, 参考, 窗口X坐标
.参数 y, 整数型, 参考, 窗口Y坐标



.子程序 ScreenToClient, 整数型, , 把屏幕坐标转换为窗口坐标
.参数 hwnd, 整数型, , 指定的窗口句柄
.参数 x, 整数型, 参考, 窗口X坐标
.参数 y, 整数型, 参考, 窗口Y坐标



.子程序 SetMinRowGap, 整数型, , 高级用户使用,在识别前,如果待识别区域有多行文字,可以设定行间距,默认的行间距是1,如果根据情况设定,可以提高识别精度。一般不用设定
.参数 row_gap, 整数型, , 最小行间距



.子程序 SetMinColGap, 整数型, , 高级用户使用,在识别前,如果待识别区域有多行文字,可以设定列间距,默认的列间距是1,如果根据情况设定,可以提高识别精度。一般不用设定
.参数 col_gap, 整数型, , 最小列间距



.子程序 FindColor, 整数型, , 查找指定区域内的颜色,颜色格式"RRGGBB-DRDGDB",注意,和按键的颜色格式相反
.参数 x1, 整数型, , 区域的左上X坐标
.参数 y1, 整数型, , 区域的左上Y坐标
.参数 x2, 整数型, , 区域的右上X坐标
.参数 y2, 整数型, , 区域的右下Y坐标
.参数 color, 文本型, , 颜色 格式为"RRGGBB-DRDGDB",比如"123456-000000|aabbcc-202020"
.参数 sim, 双精度小数型, , 相似度,取值范围0.1-1.0
.参数 dir, 整数型, , 查找方向 0: 从左到右,从上到下 1: 从左到右,从下到上 2: 从右到左,从上到下 3: 从右到左,从下到上  4：从中心往外查找  5: 从上到下,从左到右  6: 从上到下,从右到左 7: 从下到上,从左到右 8: 从下到上,从右到左
.参数 x, 整数型, 参考, 返回X坐标
.参数 y, 整数型, 参考, 返回Y坐标



.子程序 FindColorEx, 文本型, , 查找指定区域内的所有颜色,颜色格式"RRGGBB-DRDGDB",注意,和按键的颜色格式相反
.参数 x1, 整数型, , 区域的左上X坐标
.参数 y1, 整数型, , 区域的左上Y坐标
.参数 x2, 整数型, , 区域的右下X坐标
.参数 y2, 整数型, , 区域的右下Y坐标
.参数 color, 文本型, , 颜色 格式为"RRGGBB-DRDGDB" 比如"aabbcc-000000|123456-202020"
.参数 sim, 双精度小数型, , 相似度,取值范围0.1-1.0
.参数 dir, 整数型, , 查找方向 0: 从左到右,从上到下  1: 从左到右,从下到上 2: 从右到左,从上到下 3: 从右到左,从下到上 5: 从上到下,从左到右 6: 从上到下,从右到左 7: 从下到上,从左到右 8: 从下到上,从右到左



.子程序 SetWordLineHeight, 整数型, , 高级用户使用,在识别词组前,可设定文字的平均行高,默认的词组行高是10
.参数 line_height, 整数型, , 行高



.子程序 SetWordGap, 整数型, , 高级用户使用,在识别词组前,可设定词组间的间隔,默认的词组间隔是5
.参数 word_gap, 整数型, , 单词间距



.子程序 SetRowGapNoDict, 整数型, , 高级用户使用,在不使用字库进行词组识别前,可设定文字的行距,默认行距是1
.参数 row_gap, 整数型, , 文字行距



.子程序 SetColGapNoDict, 整数型, , 高级用户使用,在不使用字库进行词组识别前,可设定文字的列距,默认列距是1
.参数 col_gap, 整数型, , 文字列距



.子程序 SetWordLineHeightNoDict, 整数型, , 高级用户使用,在不使用字库进行词组识别前,可设定文字的平均行高,默认的词组行高是10
.参数 line_height, 整数型, , 行高



.子程序 SetWordGapNoDict, 整数型, , 高级用户使用,在不使用字库进行词组识别前,可设定词组间的间隔,默认的词组间隔是5
.参数 word_gap, 整数型, , 单词间距



.子程序 GetWordResultCount, 整数型, , 在使用GetWords进行词组识别以后,可以用此接口进行识别词组数量的计算
.参数 str, 文本型, , GetWords接口调用以后的返回值



.子程序 GetWordResultPos, 整数型, , 在使用GetWords进行词组识别以后,可以用此接口进行识别各个词组的坐标
.参数 str, 文本型, , GetWords的返回值
.参数 index, 整数型, , 表示第几个词组
.参数 x, 整数型, 参考, 返回的X坐标
.参数 y, 整数型, 参考, 返回的Y坐标



.子程序 GetWordResultStr, 文本型, , 在使用GetWords进行词组识别以后,可以用此接口进行识别各个词组的内容
.参数 str, 文本型, , GetWords的返回值
.参数 index, 整数型, , 表示第几个词组



.子程序 GetWords, 文本型, , 根据指定的范围,以及设定好的词组识别参数。识别这个范围内所有满足条件的词组. 比较适合用在未知文字的情况下,进行不定识别.
.参数 x1, 整数型, , 左上角X坐标
.参数 y1, 整数型, , 左上角Y坐标
.参数 x2, 整数型, , 右下角X坐标
.参数 y2, 整数型, , 右下角Y坐标
.参数 color, 文本型, , 颜色格式串，示例：“ffffff-000000”
.参数 sim, 双精度小数型, , 相似度 0.1-1.0



.子程序 GetWordsNoDict, 文本型, , 根据指定的范围,以及设定好的词组识别参数,识别这个范围内所有满足条件的词组. 这个识别函数不会用到字库。只是识别大概形状的位置 
.参数 x1, 整数型, , 左上角X坐标
.参数 y1, 整数型, , 左上角Y坐标
.参数 x2, 整数型, , 右下角X坐标
.参数 y2, 整数型, , 右下角Y坐标
.参数 color, 文本型, , 颜色格式串，示例：“ffffff-000000”



.子程序 SetShowErrorMsg, 整数型, , 设置是否弹出错误信息,默认是打开
.参数 show, 整数型, ,  0表示不打开,1表示打开



.子程序 GetClientSize, 整数型, , 获取窗口客户区域的宽度和高度
.参数 hwnd, 整数型, , 指定的窗口句柄
.参数 width, 整数型, 参考, 宽度
.参数 height, 整数型, 参考, 高度



.子程序 MoveWindow, 整数型, , 移动指定窗口到指定位置
.参数 hwnd, 整数型, , 指定的窗口句柄
.参数 x, 整数型, , X坐标
.参数 y, 整数型, , Y坐标



.子程序 GetColorHSV, 文本型, , 获取(x,y)的HSV颜色,颜色返回格式"H.S.V"
.参数 x, 整数型, , X坐标
.参数 y, 整数型, , Y坐标



.子程序 GetAveRGB, 文本型, , 获取范围(x1,y1,x2,y2)颜色的均值,返回格式"RRGGBB"
.参数 x1, 整数型, , 左上角X
.参数 y1, 整数型, , 左上角Y
.参数 x2, 整数型, , 右下角X
.参数 y2, 整数型, , 右下角Y



.子程序 GetAveHSV, 文本型, , 获取范围(x1,y1,x2,y2)颜色的均值,返回格式"H.S.V"
.参数 x1, 整数型, , 左上角X
.参数 y1, 整数型, , 左上角Y
.参数 x2, 整数型, , 右下角X
.参数 y2, 整数型, , 右下角Y



.子程序 GetForegroundWindow, 整数型, , 获取顶层活动窗口,可以获取到按键自带插件无法获取到的句柄


.子程序 GetForegroundFocus, 整数型, , 获取顶层活动窗口中具有输入焦点的窗口句柄


.子程序 GetMousePointWindow, 整数型, , 获取鼠标指向的窗口句柄,可以获取到按键自带的插件无法获取到的句柄


.子程序 GetPointWindow, 整数型, , 获取给定坐标的窗口句柄,可以获取到按键自带的插件无法获取到的句柄
.参数 x, 整数型, , 屏幕X坐标
.参数 y, 整数型, , 屏幕Y坐标



.子程序 EnumWindow, 文本型, , 根据指定条件,枚举系统中符合条件的窗口,可以枚举到按键自带的无法枚举到的窗口
.参数 parent, 整数型, , 获得的窗口句柄是该窗口的子窗口的窗口句柄,取0时为获得桌面句柄
.参数 title, 文本型, , 窗口标题
.参数 class_name, 文本型, , 窗口类名
.参数 filter, 整数型, , 1 : 匹配窗口标题,参数title有效 2 : 匹配窗口类名,参数class_name有效 4 : 只匹配指定父窗口的第一层孩子窗口 8 : 匹配所有者窗口为0的窗口,即顶级窗口 16 : 匹配可见的窗口 32 : 匹配出的窗口按照窗口打开顺序依次排列 <收费功能>



.子程序 GetWindowState, 整数型, , 获取指定窗口的一些属性
.参数 hwnd, 整数型, , 指定的窗口句柄
.参数 flag, 整数型, , 0 : 判断窗口是否存在 1 : 判断窗口是否处于激活 2 : 判断窗口是否可见 3 : 判断窗口是否最小化 4 : 判断窗口是否最大化 5 : 判断窗口是否置顶



.子程序 GetWindow, 整数型, , 获取给定窗口相关的窗口句柄
.参数 hwnd, 整数型, , 窗口句柄
.参数 flag, 整数型, , 0 : 获取父窗口 1 : 获取第一个儿子窗口 2 : 获取First 窗口 3 : 获取Last窗口 4 : 获取下一个窗口 5 : 获取上一个窗口 6 : 获取拥有者窗口 7 : 获取顶层窗口



.子程序 GetSpecialWindow, 整数型, , 获取特殊窗口
.参数 flag, 整数型, , 0 : 获取桌面窗口 1 : 获取任务栏窗口



.子程序 SetWindowText, 整数型, , 设置窗口的标题
.参数 hwnd, 整数型, , 指定的窗口句柄
.参数 text, 文本型, , 标题



.子程序 SetWindowSize, 整数型, , 设置窗口的大小
.参数 hwnd, 整数型, , 指定的窗口句柄
.参数 width, 整数型, , 宽度
.参数 height, 整数型, , 高度



.子程序 GetWindowRect, 整数型, , 获取窗口在屏幕上的位置
.参数 hwnd, 整数型, , 指定的窗口句柄
.参数 x1, 整数型, 参考, 返回窗口左上角X坐标
.参数 y1, 整数型, 参考, 返回窗口左上角Y坐标
.参数 x2, 整数型, 参考, 返回窗口右下角X坐标
.参数 y2, 整数型, 参考, 返回窗口右下角Y坐标



.子程序 GetWindowTitle, 文本型, , 获取窗口的标题
.参数 hwnd, 整数型, , 指定的窗口句柄



.子程序 GetWindowClass, 文本型, , 获取窗口的类名
.参数 hwnd, 整数型, , 指定的窗口句柄



.子程序 SetWindowState, 整数型, , 设置窗口的状态
.参数 hwnd, 整数型, , 指定的窗口句柄
.参数 flag, 整数型, , 0 : 关闭指定窗口 1 : 激活指定窗口 2 : 最小化指定窗口,但不激活 3 : 最小化指定窗口,并释放内存,但同时也会激活窗口.4 : 最大化指定窗口,同时激活窗口.5 : 恢复指定窗口 ,但不激活 6 : 隐藏指定窗口 7 : 显示指定窗口 8 : 置顶指定窗口 9 : 取消置顶指定窗口 10 : 禁止指定窗口 11 : 取消禁止指定窗口 12 : 恢复并激活指定窗口 13 : 强制结束窗口所在进程.



.子程序 CreateFoobarRect, 整数型, , 创建一个矩形窗口
.参数 hwnd, 整数型, , 指定的窗口句柄,如果此值为0,那么就在桌面创建此窗口
.参数 x, 整数型, , 左上角X坐标(相对于hwnd客户区坐标)
.参数 y, 整数型, , 左上角Y坐标(相对于hwnd客户区坐标)
.参数 w, 整数型, , 矩形区域的宽度
.参数 h, 整数型, , 矩形区域的高度



.子程序 CreateFoobarRoundRect, 整数型, , 创建一个圆角矩形窗口
.参数 hwnd, 整数型, , 指定的窗口句柄,如果此值为0,那么就在桌面创建此窗口
.参数 x, 整数型, , 左上角X坐标(相对于hwnd客户区坐标)
.参数 y, 整数型, , 左上角Y坐标(相对于hwnd客户区坐标)
.参数 w, 整数型, , 矩形区域的宽度
.参数 h, 整数型, , 矩形区域的高度
.参数 rw, 整数型, , 圆角的宽度
.参数 rh, 整数型, , 圆角的高度



.子程序 CreateFoobarEllipse, 整数型, , 创建一个椭圆窗口
.参数 hwnd, 整数型, , 指定的窗口句柄,如果此值为0,那么就在桌面创建此窗口
.参数 x, 整数型, , 左上角X坐标(相对于hwnd客户区坐标)
.参数 y, 整数型, , 左上角Y坐标(相对于hwnd客户区坐标)
.参数 w, 整数型, , 矩形区域的宽度
.参数 h, 整数型, , 矩形区域的高度



.子程序 CreateFoobarCustom, 整数型, , 根据指定的位图创建一个自定义形状的窗口
.参数 hwnd, 整数型, , 指定的窗口句柄,如果此值为0,那么就在桌面创建此窗口
.参数 x, 整数型, , 左上角X坐标(相对于hwnd客户区坐标)
.参数 y, 整数型, , 左上角Y坐标(相对于hwnd客户区坐标)
.参数 pic, 文本型, , 位图名字
.参数 trans_color, 文本型, , 透明色(RRGGBB)
.参数 sim, 双精度小数型, , 透明色的相似值 0.1-1.0



.子程序 FoobarFillRect, 整数型, , 在指定的Foobar窗口内部填充矩形
.参数 hwnd, 整数型, , 指定的Foobar窗口,注意,此句柄必须是通过CreateFoobarxxxx系列函数创建出来的
.参数 x1, 整数型, , 左上角X坐标(相对于hwnd客户区坐标)
.参数 y1, 整数型, , 左上角Y坐标(相对于hwnd客户区坐标)
.参数 x2, 整数型, , 右下角X坐标(相对于hwnd客户区坐标)
.参数 y2, 整数型, , 右下角Y坐标(相对于hwnd客户区坐标)
.参数 color, 文本型, , 填充的颜色值



.子程序 FoobarDrawText, 整数型, , 在指定的Foobar窗口绘制文字
.参数 hwnd, 整数型, , 指定的Foobar窗口,注意,此句柄必须是通过CreateFoobarxxxx系列函数创建出来的
.参数 x, 整数型, , 左上角X坐标(相对于hwnd客户区坐标)
.参数 y, 整数型, , 左上角Y坐标(相对于hwnd客户区坐标)
.参数 w, 整数型, , 矩形区域的宽度
.参数 h, 整数型, , 矩形区域的高度
.参数 text, 文本型, , 字符串
.参数 color, 文本型, , 文字颜色值
.参数 align, 整数型, , 1 : 左对齐 2 : 中间对齐 4 : 右对齐



.子程序 FoobarDrawPic, 整数型, , 在指定的Foobar窗口绘制图像 此图片不能是加密的图片
.参数 hwnd, 整数型, , 指定的Foobar窗口,注意,此句柄必须是通过CreateFoobarxxxx系列函数创建出来的
.参数 x, 整数型, , 左上角X坐标(相对于hwnd客户区坐标)
.参数 y, 整数型, , 左上角Y坐标(相对于hwnd客户区坐标)
.参数 pic, 文本型, , 图像文件名
.参数 trans_color, 文本型, , 图像透明色



.子程序 FoobarUpdate, 整数型, , 刷新指定的Foobar窗口
.参数 hwnd, 整数型, , 指定的Foobar窗口,注意,此句柄必须是通过CreateFoobarxxxx系列函数创建出来的



.子程序 FoobarLock, 整数型, , 锁定指定的Foobar窗口,不能通过鼠标来移动
.参数 hwnd, 整数型, , 指定的Foobar窗口句柄,此句柄必须是通过CreateFoobarxxx创建而来



.子程序 FoobarUnlock, 整数型, , 解锁指定的Foobar窗口,可以通过鼠标来移动
.参数 hwnd, 整数型, , 指定的Foobar窗口句柄,此句柄必须是通过CreateFoobarxxx创建而来



.子程序 FoobarSetFont, 整数型, , 设置指定Foobar窗口的字体
.参数 hwnd, 整数型, , 指定的Foobar窗口句柄,此句柄必须是通过CreateFoobarxxx创建而来
.参数 font_name, 文本型, , 系统字体名,注意,必须保证系统中有此字体
.参数 size, 整数型, , 字体大小
.参数 flag, 整数型, , 0 : 正常字体 1 : 粗体 2 : 斜体 4 : 下划线 | 文字可以是以上的组合 比如粗斜体就是1+2,斜体带下划线就是:2+4等.



.子程序 FoobarTextRect, 整数型, , 设置指定Foobar窗口的滚动文本框范围,默认的文本框范围是窗口区域
.参数 hwnd, 整数型, , 指定的Foobar窗口句柄,此句柄必须是通过CreateFoobarxxx创建而来
.参数 x, 整数型, , x坐标
.参数 y, 整数型, , y坐标
.参数 w, 整数型, , 宽度
.参数 h, 整数型, , 高度



.子程序 FoobarPrintText, 整数型, , 向指定的Foobar窗口区域内输出滚动文字
.参数 hwnd, 整数型, , 指定的Foobar窗口句柄,此句柄必须是通过CreateFoobarxxx创建而来
.参数 text, 文本型, , 文本内容
.参数 color, 文本型, , 文本颜色



.子程序 FoobarClearText, 整数型, , 清除指定的Foobar滚动文本区
.参数 hwnd, 整数型, , 指定的Foobar窗口句柄,此句柄必须是通过CreateFoobarxxx创建而来



.子程序 FoobarTextLineGap, 整数型, , 设置滚动文本区的文字行间距,默认是3
.参数 hwnd, 整数型, , 指定的Foobar窗口句柄,此句柄必须是通过CreateFoobarxxx创建而来
.参数 gap, 整数型, , 文本行间距



.子程序 Play, 整数型, , 播放指定的MP3或者wav文件
.参数 file, 文本型, ,  指定的音乐文件，可以采用文件名或者绝对路径的形式.



.子程序 FaqCapture, 整数型, , 截取指定范围内的动画或者图像,并返回此句柄
.参数 x1, 整数型, , 左上角X坐标
.参数 y1, 整数型, , 左上角Y坐标
.参数 x2, 整数型, , 右下角X坐标
.参数 y2, 整数型, , 右下角Y坐标
.参数 quality, 整数型, , 图像或动画品质,或者叫压缩率,此值越大图像质量越好 取值范围（1-100）
.参数 delay, 整数型, , 截取动画时用,表示相隔两帧间的时间间隔,单位毫秒 （如果只是截取静态图像,这个参数必须是0）
.参数 time, 整数型, , 表示总共截取多久的动画,单位毫秒 （如果只是截取静态图像,这个参数必须是0）



.子程序 FaqSend, 文本型, , 发送指定的图像句柄到指定的服务器,并等待返回结果(同步等待)
.参数 server, 文本型, , 服务器地址以及端口,格式为(ip:port),例如 "192.168.1.100:12345" 多个地址可以用"|"符号连接。比如"192.168.1.100:12345|192.168.1.101:12345"。
.参数 handle, 整数型, , 由FaqCapture获取到的句柄
.参数 request_type, 整数型, , 0 : 要求获取坐标 1 : 要求获取选项,比如(ABCDE) 2 : 要求获取文字答案3:要求获取两个坐标.此功能要求答题器必须是v15之后的版本. <收费功能>
.参数 time_out, 整数型, , 等待答案的时间，单位是毫秒，建议1000*60



.子程序 Beep, 整数型, , 蜂鸣器
.参数 fre, 整数型, , 频率
.参数 delay, 整数型, , 时长(ms)



.子程序 FoobarClose, 整数型, , 关闭一个Foobar,注意,必须调用此函数来关闭窗口,用SetWindowState也可以关闭,但会造成内存泄漏
.参数 hwnd, 整数型, , 指定的Foobar窗口句柄



.子程序 FaqGetSize, 整数型, , 获取句柄所对应的数据包的大小,单位是字节
.参数 handle, 整数型, , 由FaqCapture返回的句柄



.子程序 LoadPic, 整数型, , 预先加载指定的图片,这样在操作任何和图片相关的函数时,将省去了加载图片的时间。调用此函数后,没必要一定要调用FreePic,插件自己会自动释放
.参数 pic_name, 文本型, , 文件名比如"1.bmp|2.bmp|3.bmp" 等,可以使用通配符,比如 "*.bmp" 这个对应了所有的bmp文件 |"a?c*.bmp" 这个代表了所有第一个字母是a 第三个字母是c 第二个字母任意的所有bmp文件|"abc???.bmp|1.bmp|aa??.bmp" 可以这样任意组合



.子程序 FreePic, 整数型, , 释放指定的图片,此函数不必要调用,除非你想节省内存
.参数 pic_name, 文本型, , 文件名比如"1.bmp|2.bmp|3.bmp" 等,可以使用通配符,比如 "*.bmp" 这个对应了所有的bmp文件 |"a?c*.bmp" 这个代表了所有第一个字母是a 第三个字母是c 第二个字母任意的所有bmp文件|"abc???.bmp|1.bmp|aa??.bmp" 可以这样任意组合



.子程序 GetScreenData, 整数型, , 获取指定区域的图像,用二进制数据的方式返回,（不适合按键使用）方便二次开发
.参数 x1, 整数型, , 区域的左上X坐标
.参数 y1, 整数型, , 区域的左上Y坐标
.参数 x2, 整数型, , 区域的右下X坐标
.参数 y2, 整数型, , 区域的右下Y坐标



.子程序 WheelUp, 整数型, , 滚轮向上滚


.子程序 WheelDown, 整数型, , 滚轮向下滚


.子程序 SetMouseDelay, 整数型, , 设置鼠标单击或者双击时,鼠标按下和弹起的时间间隔。高级用户使用。某些窗口可能需要调整这个参数才可以正常点击。
.参数 type, 文本型, , 鼠标类型,取值有以下 "normal" : 对应normal鼠标 默认内部延时为 30ms |"windows": 对应windows 鼠标 默认内部延时为 10ms |"windows": 对应windows 鼠标 默认内部延时为 10ms
.参数 delay, 整数型, , 延时,单位是毫秒



.子程序 SetKeypadDelay, 整数型, , 设置按键时,键盘按下和弹起的时间间隔。高级用户使用。某些窗口可能需要调整这个参数才可以正常按键。
.参数 type, 文本型, , 键盘类型,取值有以下 | "normal" : 对应normal键盘  默认内部延时为30ms | "windows": 对应windows 键盘 默认内部延时为10ms | "dx" :对应dx 键盘 默认内部延时为50ms
.参数 delay, 整数型, , 延时,单位是毫秒



.子程序 SendString, 整数型, , 向指定窗口发送文本数据
.参数 hwnd, 整数型, , 指定的窗口句柄
.参数 str, 文本型, , 发送的文本数据



.子程序 GetPath, 文本型, , 获取全局路径.(可用于调试)


.子程序 SetDict, 整数型, , 设置字库文件
.参数 index, 整数型, , 字库的序号,取值为0-9,目前最多支持10个字库
.参数 dict_name, 文本型, , 字库文件名



.子程序 FindPic, 整数型, , 查找指定区域内的图片,位图必须是24位色格式,支持透明色,当图像上下左右4个顶点的颜色一样时,则这个颜色将作为透明色处理.
.参数 x1, 整数型, , 区域的左上X坐标
.参数 y1, 整数型, , 区域的左上Y坐标
.参数 x2, 整数型, , 区域的右下X坐标
.参数 y2, 整数型, , 区域的右下Y坐标
.参数 pic_name, 文本型, , 图片名,可以是多个图片,比如"test.bmp|test2.bmp|test3.bmp"
.参数 delta_color, 文本型, , 颜色色偏比如"203040" 表示RGB的色偏分别是20 30 40 (这里是16进制表示)
.参数 sim, 双精度小数型, , 相似度,取值范围0.1-1.0
.参数 dir, 整数型, , 查找方向 0: 从左到右,从上到下 1: 从左到右,从下到上 2: 从右到左,从上到下 3: 从右到左, 从下到上
.参数 x, 整数型, 参考, 返回图片左上角的X坐标
.参数 y, 整数型, 参考, 返回图片左上角的Y坐标



.子程序 FindPicEx, 文本型, , 查找指定区域内的图片,位图必须是24位色格式,支持透明色,当图像上下左右4个顶点的颜色一样时,则这个颜色将作为透明色处理
.参数 x1, 整数型, , 区域的左上X坐标
.参数 y1, 整数型, , 区域的左上Y坐标
.参数 x2, 整数型, , 区域的右下X坐标
.参数 y2, 整数型, , 区域的右下Y坐标
.参数 pic_name, 文本型, , 图片名,可以是多个图片,比如"test.bmp|test2.bmp|test3.bmp"
.参数 delta_color, 文本型, , 颜色色偏比如"203040" 表示RGB的色偏分别是20 30 40 (这里是16进制表示)
.参数 sim, 双精度小数型, , 相似度,取值范围0.1-1.0
.参数 dir, 整数型, , 查找方向 0: 从左到右,从上到下 1: 从左到右,从下到上 2: 从右到左,从上到下 3: 从右到左, 从下到上



.子程序 SetClientSize, 整数型, , 设置窗口客户区域的宽度和高度
.参数 hwnd, 整数型, , 指定的窗口句柄
.参数 width, 整数型, , 宽度
.参数 height, 整数型, , 高度



.子程序 ReadInt, 整数型, , 读取指定地址的整数数值，类型可以是8位，16位 或者 32位
.参数 hwnd, 整数型, , 指定搜索的窗口句柄或者进程ID.  默认是窗口句柄. 如果要指定为进程ID,需要调用SetMemoryHwndAsProcessId
.参数 addr, 文本型, , 用字符串来描述地址，类似于CE的地址描述，数值必须是16进制,里面可以用[ ] + -这些符号来描述一个地址。+表示地址加，-表示地址减 模块名必须用<>符号来圈起来
.参数 type, 整数型, , 0 : 32位 1 : 16 位 2 : 8位



.子程序 ReadFloat, 小数型, , 读取指定地址的单精度浮点数
.参数 hwnd, 整数型, , 指定搜索的窗口句柄或者进程ID.  默认是窗口句柄. 如果要指定为进程ID,需要调用SetMemoryHwndAsProcessId.
.参数 addr, 文本型, , 用字符串来描述地址，类似于CE的地址描述，数值必须是16进制,里面可以用[ ] + -这些符号来描述一个地址。+表示地址加，-表示地址减 模块名必须用<>符号来圈起来



.子程序 ReadDouble, 双精度小数型, , 读取指定地址的双精度浮点数
.参数 hwnd, 整数型, , 指定搜索的窗口句柄或者进程ID.  默认是窗口句柄. 如果要指定为进程ID,需要调用SetMemoryHwndAsProcessId.
.参数 addr, 文本型, , 用字符串来描述地址，类似于CE的地址描述，数值必须是16进制,里面可以用[ ] + -这些符号来描述一个地址。+表示地址加，-表示地址减 模块名必须用<>符号来圈起来



.子程序 FindInt, 文本型, , 搜索指定的整数,默认步长是1.如果要定制步长，请用FindIntEx
.参数 hwnd, 整数型, , 指定搜索的窗口句柄或者进程ID.  默认是窗口句柄. 如果要指定为进程ID,需要调用SetMemoryHwndAsProcessId.
.参数 addr_range, 文本型, , 指定搜索的地址集合，字符串类型，这个地方可以是上次FindXXX的返回地址集合,可以进行二次搜索.(类似CE的再次扫描)
.参数 int_value_min, 整数型, , 搜索的整数数值最小值
.参数 int_value_max, 整数型, , 搜索的整数数值最大值 最终搜索的数值大与等于int_value_min,并且小于等于int_value_max
.参数 type, 整数型, , 搜索的整数类型,取值如下  0 : 32位 1 : 16 位  2 : 8位



.子程序 FindFloat, 文本型, , 搜索指定的单精度浮点数,默认步长是1.如果要定制步长，请用FindFloatEx
.参数 hwnd, 整数型, , 指定搜索的窗口句柄或者进程ID.  默认是窗口句柄. 如果要指定为进程ID,需要调用SetMemoryHwndAsProcessId.
.参数 addr_range, 文本型, , 指定搜索的地址集合，字符串类型，这个地方可以是上次FindXXX的返回地址集合,可以进行二次搜索.(类似CE的再次扫描)
.参数 float_value_min, 小数型, , 单精度浮点数: 搜索的单精度数值最小值
.参数 float_value_max, 小数型, , 单精度浮点数: 搜索的单精度数值最大值  最终搜索的数值大与等于float_value_min,并且小于等于float_value_max



.子程序 FindDouble, 文本型, , 搜索指定的双精度浮点数,默认步长是1.如果要定制步长，请用FindDoubleEx
.参数 hwnd, 整数型, , 指定搜索的窗口句柄或者进程ID.  默认是窗口句柄. 如果要指定为进程ID,需要调用SetMemoryHwndAsProcessId.
.参数 addr_range, 文本型, , 指定搜索的地址集合，字符串类型，这个地方可以是上次FindXXX的返回地址集合,可以进行二次搜索.(类似CE的再次扫描)
.参数 double_value_min, 双精度小数型, , 双精度浮点数: 搜索的双精度数值最小值
.参数 double_value_max, 双精度小数型, , 双精度浮点数: 搜索的双精度数值最大值  最终搜索的数值大与等于double_value_min,并且小于等于double_value_max



.子程序 FindString, 文本型, , 搜索指定的字符串,默认步长是1.如果要定制步长，请用FindStringEx
.参数 hwnd, 整数型, , 指定搜索的窗口句柄或者进程ID.  默认是窗口句柄. 如果要指定为进程ID,需要调用SetMemoryHwndAsProcessId.
.参数 addr_range, 文本型, , 指定搜索的地址集合，字符串类型，这个地方可以是上次FindXXX的返回地址集合,可以进行二次搜索.(类似CE的再次扫描)
.参数 string_value, 文本型, , 搜索的字符串
.参数 type, 整数型, , 搜索的字符串类型,取值如下  0 : Ascii字符串  1 : Unicode字符串



.子程序 GetModuleBaseAddr, 整数型, , 根据指定的窗口句柄，来获取对应窗口句柄进程下的指定模块的基址
.参数 hwnd, 整数型, , 指定搜索的窗口句柄或者进程ID.  默认是窗口句柄. 如果要指定为进程ID,需要调用SetMemoryHwndAsProcessId.
.参数 module_name, 文本型, , 模块名



.子程序 MoveToEx, 整数型, , 把鼠标移动到目的范围内的任意一点
.参数 x, 整数型, , X坐标
.参数 y, 整数型, , Y坐标
.参数 w, 整数型, , 宽度(从x计算起)
.参数 h, 整数型, , 高度(从y计算起)



.子程序 MatchPicName, 文本型, , 根据通配符获取文件集合. 方便用于FindPic和FindPicEx
.参数 pic_name, 文本型, , 文件名比如"1.bmp|2.bmp|3.bmp" 等,可以使用通配符,比如 "*.bmp" 这个对应了所有的bmp文件 | "a?c*.bmp" 这个代表了所有第一个字母是a 第三个字母是c 第二个字母任意的所有bmp文件 | "abc???.bmp|1.bmp|aa??.bmp" 可以这样任意组合



.子程序 AddDict, 整数型, , 给指定的字库中添加一条字库信息
.参数 index, 整数型, , 字库的序号,取值为0-9,目前最多支持10个字库
.参数 dict_info, 文本型, , 字库描述串，具体参考大漠综合工具中的字符定义



.子程序 WriteInt, 整数型, , 对指定地址写入整数数值，类型可以是8位，16位 或者 32位
.参数 hwnd, 整数型, , 指定搜索的窗口句柄或者进程ID.  默认是窗口句柄. 如果要指定为进程ID,需要调用SetMemoryHwndAsProcessId.
.参数 addr, 文本型, , 用字符串来描述地址，类似于CE的地址描述，数值必须是16进制,里面可以用[ ] + -这些符号来描述一个地址。+表示地址加，-表示地址减， 模块名必须用<>符号来圈起来
.参数 type, 整数型, , 整数类型,取值如下  0 : 32位  1 : 16 位  2 : 8位
.参数 v, 整数型, , 整形数值



.子程序 WriteFloat, 整数型, , 对指定地址写入单精度浮点数
.参数 hwnd, 整数型, , 指定搜索的窗口句柄或者进程ID.  默认是窗口句柄. 如果要指定为进程ID,需要调用SetMemoryHwndAsProcessId.
.参数 addr, 文本型, , 用字符串来描述地址，类似于CE的地址描述，数值必须是16进制,里面可以用[ ] + -这些符号来描述一个地址。+表示地址加，-表示地址减 模块名必须用<>符号来圈起来
.参数 v, 小数型, , 单精度浮点数



.子程序 WriteDouble, 整数型, , 对指定地址写入双精度浮点数
.参数 hwnd, 整数型, , 指定搜索的窗口句柄或者进程ID.  默认是窗口句柄. 如果要指定为进程ID,需要调用SetMemoryHwndAsProcessId.
.参数 addr, 文本型, , 用字符串来描述地址，类似于CE的地址描述，数值必须是16进制,里面可以用[ ] + -这些符号来描述一个地址。+表示地址加，-表示地址减  模块名必须用<>符号来圈起来
.参数 v, 双精度小数型, , 双精度浮点数



.子程序 WriteString, 整数型, , 对指定地址写入字符串，可以是Ascii字符串或者是Unicode字符串
.参数 hwnd, 整数型, , 指定搜索的窗口句柄或者进程ID.  默认是窗口句柄. 如果要指定为进程ID,需要调用SetMemoryHwndAsProcessId.
.参数 addr, 文本型, , 用字符串来描述地址，类似于CE的地址描述，数值必须是16进制,里面可以用[ ] + -这些符号来描述一个地址。+表示地址加，-表示地址减  模块名必须用<>符号来圈起来
.参数 type, 整数型, , 字符串类型,取值如下 0 : Ascii字符串  1 : Unicode字符串
.参数 v, 文本型, , 字符串



.子程序 AsmAdd, 整数型, , 添加指定的MASM汇编指令
.参数 asm_ins, 文本型, , MASM汇编指令,大小写均可以  比如 "mov eax,1"



.子程序 AsmClear, 整数型, , 清除汇编指令缓冲区 用AsmAdd添加到缓冲的指令全部清除


.子程序 AsmCall, 整数型, , 执行用AsmAdd加到缓冲中的指令. 多线程下是收费功能, 免费版本多线程会异常.
.参数 hwnd, 整数型, , 窗口句柄
.参数 mode, 整数型, , 模式，取值如下  0 : 在本进程中进行执行，这时hwnd无效   1 : 对hwnd指定的进程内执行,注入模式为创建远程线程



.子程序 FindMultiColor, 整数型, , 根据指定的多点查找颜色坐标
.参数 x1, 整数型, , 区域的左上X坐标
.参数 y1, 整数型, , 区域的左上Y坐标
.参数 x2, 整数型, , 区域的右下X坐标
.参数 y2, 整数型, , 区域的右下Y坐标
.参数 first_color, 文本型, , 颜色格式为"RRGGBB-DRDGDB",比如"123456-000000" 这里的含义和按键自带Color插件的意义相同，只不过我的可以支持偏色 所有的偏移色坐标都相对于此颜色
.参数 offset_color, 文本型, , 偏移颜色可以支持任意多个点 格式和按键自带的Color插件意义相同  格式为"x1|y1|RRGGBB-DRDGDB,……xn|yn|RRGGBB-DRDGDB" 比如"1|3|aabbcc,-5|-3|123456-000000"等任意组合都可以，支持偏色 还可以支持反色模式，比如"1|3|-aabbcc,-5|-3|-123456-000000","-"表示除了指定颜色之外的颜色.
.参数 sim, 双精度小数型, , 相似度,取值范围0.1-1.0
.参数 dir, 整数型, , 查找方向 0: 从左到右,从上到下 1: 从左到右,从下到上 2: 从右到左,从上到下 3: 从右到左, 从下到上
.参数 x, 整数型, 参考, 返回X坐标(坐标为first_color所在坐标)
.参数 y, 整数型, 参考, 返回Y坐标(坐标为first_color所在坐标)



.子程序 FindMultiColorEx, 文本型, , 根据指定的多点查找所有颜色坐标
.参数 x1, 整数型, , 区域的左上X坐标
.参数 y1, 整数型, , 区域的左上Y坐标
.参数 x2, 整数型, , 区域的右下X坐标
.参数 y2, 整数型, , 区域的右下Y坐标
.参数 first_color, 文本型, , 颜色格式为"RRGGBB-DRDGDB",比如"123456-000000" | 这里的含义和按键自带Color插件的意义相同，只不过我的可以支持偏色 所有的偏移色坐标都相对于此颜色
.参数 offset_color, 文本型, , 偏移颜色可以支持任意多个点 格式和按键自带的Color插件意义相同 格式为"x1|y1|RRGGBB-DRDGDB,……xn|yn|RRGGBB-DRDGDB" 比如"1|3|aabbcc,-5|-3|123456-000000"等任意组合都可以，支持偏色 还可以支持反色模式，比如"1|3|-aabbcc,-5|-3|-123456-000000","-"表示除了指定颜色之外的颜色
.参数 sim, 双精度小数型, , 相似度,取值范围0.1-1.0
.参数 dir, 整数型, , 查找方向 0: 从左到右,从上到下 1: 从左到右,从下到上 2: 从右到左,从上到下 3: 从右到左, 从下到上



.子程序 AsmCode, 文本型, , 把汇编缓冲区的指令转换为机器码 并用16进制字符串的形式输出
.参数 base_addr, 整数型, , 用AsmAdd添加到缓冲区的第一条指令所在的地址



.子程序 Assemble, 文本型, , 把指定的机器码转换为汇编语言输出
.参数 asm_code, 文本型, , 机器码，形式如 "aa bb cc"这样的16进制表示的字符串(空格无所谓)
.参数 base_addr, 整数型, , 指令所在的地址
.参数 is_upper, 整数型, , 表示转换的汇编语言是否以大写输出



.子程序 SetWindowTransparent, 整数型, , 设置窗口的透明度
.参数 hwnd, 整数型, , 指定的窗口句柄
.参数 v, 整数型, , 透明度取值(0-255) 越小透明度越大 0为完全透明(不可见) 255为完全显示(不透明)



.子程序 ReadData, 文本型, , 读取指定地址的二进制数据
.参数 hwnd, 整数型, , 指定搜索的窗口句柄或者进程ID.  默认是窗口句柄. 如果要指定为进程ID,需要调用SetMemoryHwndAsProcessId.
.参数 addr, 文本型, , 用字符串来描述地址，类似于CE的地址描述，数值必须是16进制,里面可以用[ ] + -这些符号来描述一个地址。+表示地址加，-表示地址减  模块名必须用<>符号来圈起来
.参数 len, 整数型, , 二进制数据的长度



.子程序 WriteData, 整数型, , 对指定地址写入二进制数据
.参数 hwnd, 整数型, , 指定搜索的窗口句柄或者进程ID.  默认是窗口句柄. 如果要指定为进程ID,需要调用SetMemoryHwndAsProcessId.
.参数 addr, 文本型, , 用字符串来描述地址，类似于CE的地址描述，数值必须是16进制,里面可以用[ ] + -这些符号来描述一个地址。+表示地址加，-表示地址减  模块名必须用<>符号来圈起来
.参数 data, 文本型, , 二进制数据，以字符串形式描述，比如"12 34 56 78 90 ab cd"



.子程序 FindData, 文本型, , 搜索指定的二进制数据,默认步长是1.如果要定制步长，请用FindDataEx
.参数 hwnd, 整数型, , 指定搜索的窗口句柄或者进程ID.  默认是窗口句柄. 如果要指定为进程ID,需要调用SetMemoryHwndAsProcessId.
.参数 addr_range, 文本型, , 指定搜索的地址集合，字符串类型，这个地方可以是上次FindXXX的返回地址集合,可以进行二次搜索.(类似CE的再次扫描)
.参数 data, 文本型, , 要搜索的二进制数据 以字符串的形式描述比如"00 01 23 45 67 86 ab ce f1"等这里也可以支持模糊查找,用??来代替单个字节. 比如"00 01 ?? ?? 67 86 ?? ce f1"等. 模糊查找是收费功能



.子程序 SetPicPwd, 整数型, , 设置图片密码，如果图片本身没有加密，那么此设置不影响不加密的图片，一样正常使用.
.参数 pwd, 文本型, , 图片密码



.子程序 FindStrE, 文本型, , 在屏幕范围(x1,y1,x2,y2)内,查找string(可以是任意个字符串的组合),并返回符合color_format的坐标位置,相似度sim同Ocr接口描述. (多色,差色查找类似于Ocr接口,不再重述)  易语言用不了FindStr可以用此接口来代替
.参数 x1, 整数型, , 区域的左上X坐标
.参数 y1, 整数型, , 区域的左上Y坐标
.参数 x2, 整数型, , 区域的右下X坐标
.参数 y2, 整数型, , 区域的右下Y坐标
.参数 str, 文本型, , 待查找的字符串, 可以是字符串组合，比如"长安|洛阳|大雁塔",中间用"|"来分割字符串
.参数 color, 文本型, , 颜色格式串, 可以包含换行分隔符,语法是","后加分割字符串. 具体可以查看下面的示例
.参数 sim, 双精度小数型, , 相似度,取值范围0.1-1.0



.子程序 FindColorE, 文本型, , 查找指定区域内的颜色,颜色格式"RRGGBB-DRDGDB",注意,和按键的颜色格式相反 易语言用不了FindColor可以用此接口来代替
.参数 x1, 整数型, , 区域的左上X坐标
.参数 y1, 整数型, , 区域的左上Y坐标
.参数 x2, 整数型, , 区域的右下X坐标
.参数 y2, 整数型, , 区域的右下Y坐标
.参数 color, 文本型, , 颜色 格式为"RRGGBB-DRDGDB",比如"123456-000000|aabbcc-202020"
.参数 sim, 双精度小数型, , 相似度,取值范围0.1-1.0
.参数 dir, 整数型, , 查找方向 0: 从左到右,从上到下 1: 从左到右,从下到上  2: 从右到左,从上到下  3: 从右到左,从下到上  4：从中心往外查找  5: 从上到下,从左到右  6: 从上到下,从右到左 7: 从下到上,从左到右 8: 从下到上,从右到左



.子程序 FindPicE, 文本型, , 查找指定区域内的图片,位图必须是24位色格式,支持透明色,当图像上下左右4个顶点的颜色一样时,则这个颜色将作为透明色处理 这个函数可以查找多个图片,只返回第一个找到的X Y坐标 | 易语言用不了FindPic可以用此接口来代替
.参数 x1, 整数型, , 区域的左上X坐标
.参数 y1, 整数型, , 区域的左上Y坐标
.参数 x2, 整数型, , 区域的右下X坐标
.参数 y2, 整数型, , 区域的右下Y坐标
.参数 pic_name, 文本型, , 图片名,可以是多个图片,比如"test.bmp|test2.bmp|test3.bmp"
.参数 delta_color, 文本型, , 颜色色偏比如"203040" 表示RGB的色偏分别是20 30 40 (这里是16进制表示)
.参数 sim, 双精度小数型, , 相似度,取值范围0.1-1.0
.参数 dir, 整数型, , 查找方向 0: 从左到右,从上到下 1: 从左到右,从下到上 2: 从右到左,从上到下 3: 从右到左, 从下到上



.子程序 FindMultiColorE, 文本型, , 根据指定的多点查找颜色坐标  易语言用不了FindMultiColor可以用此接口来代替
.参数 x1, 整数型, , 区域的左上X坐标
.参数 y1, 整数型, , 区域的左上Y坐标
.参数 x2, 整数型, , 区域的右下X坐标
.参数 y2, 整数型, , 区域的右下Y坐标
.参数 first_color, 文本型, , 颜色格式为"RRGGBB-DRDGDB",比如"123456-000000" 这里的含义和按键自带Color插件的意义相同，只不过我的可以支持偏色  所有的偏移色坐标都相对于此颜色
.参数 offset_color, 文本型, , 偏移颜色可以支持任意多个点 格式和按键自带的Color插件意义相同 格式为"x1|y1|RRGGBB-DRDGDB,……xn|yn|RRGGBB-DRDGDB" 比如"1|3|aabbcc,-5|-3|123456-000000"等任意组合都可以，支持偏色 还可以支持反色模式，比如"1|3|-aabbcc,-5|-3|-123456-000000","-"表示除了指定颜色之外的颜色
.参数 sim, 双精度小数型, , 相似度,取值范围0.1-1.0
.参数 dir, 整数型, , 查找方向 0: 从左到右,从上到下 1: 从左到右,从下到上 2: 从右到左,从上到下 3: 从右到左, 从下到上



.子程序 SetExactOcr, 整数型, , 高级用户使用,在使用文字识别功能前，设定是否开启精准识别.
.参数 exact_ocr, 整数型, , 0 表示关闭精准识别  1 开启精准识别



.子程序 ReadString, 文本型, , 读取指定地址的字符串，可以是GBK字符串或者是Unicode字符串.(必须事先知道内存区的字符串编码方式)
.参数 hwnd, 整数型, , 指定搜索的窗口句柄或者进程ID.  默认是窗口句柄. 如果要指定为进程ID,需要调用SetMemoryHwndAsProcessId.
.参数 addr, 文本型, , 用字符串来描述地址，类似于CE的地址描述，数值必须是16进制,里面可以用[ ] + -这些符号来描述一个地址。+表示地址加，-表示地址减  模块名必须用<>符号来圈起来
.参数 type, 整数型, , 字符串类型,取值如下 0 : GBK字符串 1 : Unicode字符串
.参数 len, 整数型, , 需要读取的字节数目



.子程序 FoobarTextPrintDir, 整数型, , 设置滚动文本区的文字输出方向,默认是0
.参数 hwnd, 整数型, , 指定的Foobar窗口句柄,此句柄必须是通过CreateFoobarxxx创建而来
.参数 dir, 整数型, , 0 表示向下输出 : 1 表示向上输出



.子程序 OcrEx, 文本型, , 识别屏幕范围(x1,y1,x2,y2)内符合color_format的字符串,并且相似度为sim,sim取值范围(0.1-1.0), 这个值越大越精确,越大速度越快,越小速度越慢,请斟酌使用!这个函数可以返回识别到的字符串，以及每个字符的坐标.
.参数 x1, 整数型, , 区域的左上X坐标
.参数 y1, 整数型, , 区域的左上Y坐标
.参数 x2, 整数型, , 区域的右下X坐标
.参数 y2, 整数型, , 区域的右下Y坐标
.参数 color, 文本型, , 颜色格式串
.参数 sim, 双精度小数型, , 相似度,取值范围0.1-1.0



.子程序 SetDisplayInput, 整数型, , 设定图色的获取方式，默认是显示器或者后台窗口(具体参考BindWindow)
.参数 mode, 文本型, , 图色输入模式取值有以下几种  1."screen" 这个是默认的模式，表示使用显示器或者后台窗口  2."pic:file" 指定输入模式为指定的图片,如果使用了这个模式，则所有和图色相关的函数



.子程序 GetTime, 整数型, , 获取当前系统从开机到现在所经历过的时间，单位是毫秒


.子程序 GetScreenWidth, 整数型, , 获取屏幕的宽度


.子程序 GetScreenHeight, 整数型, , 获取屏幕的高度


.子程序 BindWindowEx, 整数型, , 绑定指定的窗口,并指定这个窗口的屏幕颜色获取方式,鼠标仿真模式,键盘仿真模式 高级用户使用
.参数 hwnd, 整数型, , 指定的窗口句柄
.参数 display, 文本型, , 屏幕颜色获取方式 取值有以下： "normal" : 前台模式 ，"gdi" : gdi模式 "gdi2" : gdi2模式 ，"dx" : dx模式（参照接口说明），"dx2" : dx2模式(必须窗口小部分移到窗外)，"dx3" : dx3模式
.参数 mouse, 文本型, , 鼠标仿真模式 取值有以下几种 "normal" : 前台模式，"windows": Windows模式,"windows3": Windows3模式，dx模式,取值可以是以下任意组合. 组合采用"|"符号（参照接口说明）
.参数 keypad, 文本型, , 键盘仿真模式 取值有以下几种 "normal" : 正常模式,平常我们用的前台键盘模式 "windows": Windows模式,采取模拟windows消息方式 同按键的后台插件.
.参数 public_desc, 文本型, , public 字符串: 公共属性（具体参照接口说明）
.参数 mode, 整数型, , 模式（参照接口说明）默认： 0 



.子程序 GetDiskSerial, 文本型, , 获取本机的硬盘序列号.支持ide scsi硬盘. 要求调用进程必须有管理员权限. 否则返回空串


.子程序 ActiveInputMethod, 整数型, , 激活指定窗口所在进程的输入法
.参数 hwnd, 整数型, , 窗口句柄
.参数 id, 文本型, , 输入法名字（具体参照接口说明）



.子程序 CheckInputMethod, 整数型, , 检测指定窗口所在线程输入法是否开启
.参数 hwnd, 整数型, , 窗口句柄
.参数 id, 文本型, , 输入法名字（具体参照接口说明）



.子程序 FindInputMethod, 整数型, , 检测系统中是否安装了指定输入法
.参数 id, 文本型, , 输入法名字（具体参照接口说明）



.子程序 GetCursorPos, 整数型, , 获取系统鼠标在屏幕上的位置
.参数 x, 整数型, 参考, 返回X坐标
.参数 y, 整数型, 参考, 返回Y坐标



.子程序 BindWindow, 整数型, , 绑定指定的窗口,并指定这个窗口的屏幕颜色获取方式,鼠标仿真模式,键盘仿真模式,以及模式设定,高级用户可以参考BindWindowEx更加灵活强大
.参数 hwnd, 整数型, , 指定的窗口句柄
.参数 display, 文本型, , 屏幕颜色获取方式 取值有以下： "normal" : 前台模式 ，"gdi" : gdi模式 "gdi2" : gdi2模式 ，"dx" : dx模式（参照接口说明），"dx2" : dx2模式(必须窗口小部分移到窗外)，"dx3" : dx3模式
.参数 mouse, 文本型, , 鼠标仿真模式 取值有以下几种 "normal" : 前台模式，"windows": Windows模式,"windows3": Windows3模式，dx模式,取值可以是以下任意组合. 组合采用"|"符号（参照接口说明）
.参数 keypad, 文本型, , 键盘仿真模式 取值有以下几种 "normal" : 正常模式,平常我们用的前台键盘模式 "windows": Windows模式,采取模拟windows消息方式 同按键的后台插件.
.参数 mode, 整数型, , 模式（参照接口说明）默认： 0



.子程序 FindWindow, 整数型, , 查找符合类名或者标题名的顶层可见窗口
.参数 class_name, 文本型, , 窗口类名，如果为空，则匹配所有. 这里的匹配是模糊匹配，不是精确匹配
.参数 title_name, 文本型, , 窗口标题,如果为空，则匹配所有.这里的匹配是模糊匹配，不是精确匹配



.子程序 GetScreenDepth, 整数型, , 获取屏幕的色深


.子程序 SetScreen, 整数型, , 设置系统的分辨率 系统色深
.参数 width, 整数型, , 屏幕宽度
.参数 height, 整数型, , 屏幕高度
.参数 depth, 整数型, , 系统色深



.子程序 ExitOs, 整数型, , 退出系统(注销 重启 关机) 
.参数 type, 整数型, , 0 : 注销系统 1 : 关机 2 : 重新启动



.子程序 GetDir, 文本型, , 得到系统的路径 
.参数 type, 整数型, , 0 : 获取当前路径  1 : 获取系统路径(system32路径)  2 : 获取windows路径(windows所在路径) 3 : 获取临时目录路径(temp) 4 : 获取当前进程(exe)所在的路径



.子程序 GetOsType, 整数型, , 得到操作系统的类型 返回值：0 : win95/98/me/nt4.0 | 1 : xp/2000 2 : 2003 | 3 : win7/vista/2008


.子程序 FindWindowEx, 整数型, , 查找符合类名或者标题名的顶层可见窗口,如果指定了parent,则在parent的第一层子窗口中查找
.参数 parent, 整数型, , 父窗口句柄，如果为空，则匹配所有顶层窗口
.参数 class_name, 文本型, , 窗口类名，如果为空，则匹配所有. 这里的匹配是模糊匹配，不是精确匹配
.参数 title_name, 文本型, , 窗口标题,如果为空，则匹配所有. 这里的匹配是模糊匹配，不是精确匹配



.子程序 GetCursorShape, 文本型, , 获取鼠标特征码. 当BindWindow或者BindWindowEx中的mouse参数含有dx.mouse.cursor时，获取到的是后台鼠标特征，否则是前台鼠标特征.（后台特征码是收费功能）


.子程序 DownCpu, 整数型, , 降低目标窗口所在进程的CPU占用
.参数 rate, 整数型, , 取值范围0到100   取值为0 表示关闭CPU优化. 这个值越大表示降低CPU效果越好



.子程序 GetCursorSpot, 文本型, , 获取鼠标热点位置.(参考工具中抓取鼠标后，那个闪动的点就是热点坐标,不是鼠标坐标)，当BindWindow或者BindWindowEx中的mouse参数含有dx.mouse.cursor时，获取到的是后台鼠标热点位置，否则是前台鼠标热点位置.  后台热点位置是<收费功能>


.子程序 SendString2, 整数型, , 向指定窗口发送文本数据
.参数 hwnd, 整数型, , 指定的窗口句柄
.参数 str, 文本型, , 发送的文本数据



.子程序 FaqPost, 整数型, , 发送指定的图像句柄到指定的服务器,并立即返回(异步操作)
.参数 server, 文本型, , 服务器地址以及端口,格式为(ip:port),例如 "192.168.1.100:12345"
.参数 handle, 整数型, , 由FaqCapture获取到的句柄
.参数 request_type, 整数型, , 取值定义如下   0 : 要求获取坐标  1 : 要求获取选项,比如(ABCDE)  2 : 要求获取文字答案  3 : 要求获取两个坐标.此功能要求答题器必须是v15之后的版本.<收费功能>
.参数 time_out, 整数型, , 表示等待多久,单位是毫秒



.子程序 FaqFetch, 文本型, , 获取由FaqPost发送后，由服务器返回的答案


.子程序 FetchWord, 文本型, , 根据指定的范围,以及指定的颜色描述，提取点阵信息，类似于大漠工具里的单独提取
.参数 x1, 整数型, , 左上角X坐标
.参数 y1, 整数型, , 左上角Y坐标
.参数 x2, 整数型, , 右下角X坐标
.参数 y2, 整数型, , 右下角Y坐标
.参数 color, 文本型, , 颜色格式串
.参数 word, 文本型, , 待定义的文字,不能为空，且不能为关键符号"$"



.子程序 CaptureJpg, 整数型, , 抓取指定区域(x1, y1, x2, y2)的图像,保存为file(JPG压缩格式)
.参数 x1, 整数型, , 区域的左上X坐标
.参数 y1, 整数型, , 区域的左上Y坐标
.参数 x2, 整数型, , 区域的右下X坐标
.参数 y2, 整数型, , 区域的右下Y坐标
.参数 file, 文本型, , 保存的文件名,保存的地方一般为SetPath中设置的目录_当然这里也可以指定全路径名
.参数 quality, 整数型, , jpg压缩比率(1-100) 越大图片质量越好



.子程序 FindStrWithFont, 整数型, , 同FindStr，但是不使用SetDict设置的字库，而利用系统自带的字库，速度比FindStr稍慢
.参数 x1, 整数型, , 区域的左上X坐标
.参数 y1, 整数型, , 区域的左上Y坐标
.参数 x2, 整数型, , 区域的右下X坐标
.参数 y2, 整数型, , 区域的右下Y坐标
.参数 str, 文本型, , 待查找的字符串,可以是字符串组合，比如"长安|洛阳|大雁塔",中间用"|"来分割字符串
.参数 color, 文本型, , 颜色格式串, 可以包含换行分隔符,语法是","后加分割字符串. 具体可以查看下面的示例
.参数 sim, 双精度小数型, , 相似度,取值范围0.1-1.0
.参数 font_name, 文本型, , 系统字体名,比如"宋体"
.参数 font_size, 整数型, , 系统字体尺寸，这个尺寸一定要以大漠综合工具获取的为准.如果获取尺寸看视频教程
.参数 flag, 整数型, , 字体类别 取值可以是以下值的组合,比如1+2+4+8,2+4. 0表示正常字体  1 : 粗体 2 : 斜体 4 : 下划线 8 : 删除线
.参数 x, 整数型, 参考, 返回X坐标没找到返回-1
.参数 y, 整数型, 参考, 返回Y坐标没找到返回-1



.子程序 FindStrWithFontE, 文本型, , 同FindStrE，但是不使用SetDict设置的字库，而利用系统自带的字库，速度比FindStrE稍慢
.参数 x1, 整数型, , 区域的左上X坐标
.参数 y1, 整数型, , 区域的左上Y坐标
.参数 x2, 整数型, , 区域的右下X坐标
.参数 y2, 整数型, , 区域的右下Y坐标
.参数 str, 文本型, , 待查找的字符串, 可以是字符串组合，比如"长安|洛阳|大雁塔",中间用"|"来分割字符串
.参数 color, 文本型, , 颜色格式串, 可以包含换行分隔符,语法是","后加分割字符串. 具体可以查看下面的示例
.参数 sim, 双精度小数型, , 相似度,取值范围0.1-1.0
.参数 font_name, 文本型, , 系统字体名,比如"宋体"
.参数 font_size, 整数型, , 系统字体尺寸，这个尺寸一定要以大漠综合工具获取的为准.如果获取尺寸看视频教程
.参数 flag, 整数型, , 字体类别 取值可以是以下值的组合,比如1+2+4+8,2+4. 0表示正常字体 1 : 粗体 2 : 斜体 4 : 下划线 8 : 删除线



.子程序 FindStrWithFontEx, 文本型, , 同FindStrEx，但是不使用SetDict设置的字库，而利用系统自带的字库，速度比FindStrEx稍慢
.参数 x1, 整数型, , 区域的左上X坐标
.参数 y1, 整数型, , 区域的左上Y坐标
.参数 x2, 整数型, , 区域的右下X坐标
.参数 y2, 整数型, , 区域的右下Y坐标
.参数 str, 文本型, , 待查找的字符串, 可以是字符串组合，比如"长安|洛阳|大雁塔",中间用"|"来分割字符串
.参数 color, 文本型, , 颜色格式串, 可以包含换行分隔符,语法是","后加分割字符串. 具体可以查看下面的示例
.参数 sim, 双精度小数型, , 相似度,取值范围0.1-1.0
.参数 font_name, 文本型, , 系统字体名,比如"宋体"
.参数 font_size, 整数型, , 系统字体尺寸，这个尺寸一定要以大漠综合工具获取的为准.如果获取尺寸看视频教程
.参数 flag, 整数型, , 字体类别 取值可以是以下值的组合,比如1+2+4+8,2+4. 0表示正常字体 1 : 粗体 2 : 斜体 4 : 下划线 8 : 删除线



.子程序 GetDictInfo, 文本型, , 根据指定的文字，以及指定的系统字库信息，获取字库描述信息
.参数 str, 文本型, , 需要获取的字符串
.参数 font_name, 文本型, , 系统字体名,比如"宋体"
.参数 font_size, 整数型, , 系统字体尺寸，这个尺寸一定要以大漠综合工具获取的为准.如果获取尺寸看视频教程
.参数 flag, 整数型, , 字体类别 取值可以是以下值的组合,比如1+2+4+8,2+4. 0表示正常字体  1 : 粗体 2 : 斜体 4 : 下划线 8 : 删除线



.子程序 SaveDict, 整数型, , 保存指定的字库到指定的文件中
.参数 index, 整数型, , 字库索引序号 取值为0-9对应10个字库
.参数 file, 文本型, , 文件名



.子程序 GetWindowProcessId, 整数型, , 获取指定窗口所在的进程ID
.参数 hwnd, 整数型, , 窗口句柄



.子程序 GetWindowProcessPath, 文本型, , 获取指定窗口所在的进程的exe文件全路径
.参数 hwnd, 整数型, , 窗口句柄



.子程序 LockInput, 整数型, , 禁止外部输入到指定窗口
.参数 lock, 整数型, , 0关闭锁定 1开启锁定



.子程序 GetPicSize, 文本型, , 获取指定图片的尺寸，如果指定的图片已经被加入缓存，则从缓存中获取信息  此接口也会把此图片加入缓存
.参数 pic_name, 文本型, , 文件名比如"1.bmp"



.子程序 GetID, 整数型, , 返回当前大漠的ID值，这个值对于每个对象是唯一存在的。可以用来判定两个大漠是否一致


.子程序 CapturePng, 整数型, , 同Capture函数，只是保存的格式为PNG
.参数 x1, 整数型, , 区域的左上X坐标
.参数 y1, 整数型, , 区域的左上Y坐标
.参数 x2, 整数型, , 区域的右下X坐标
.参数 y2, 整数型, , 区域的右下Y坐标
.参数 file, 文本型, , 保存的文件名,保存的地方一般为SetPath中设置的目录,当然这里也可以指定全路径名



.子程序 CaptureGif, 整数型, , 抓取指定区域(x1, y1, x2, y2)的动画，保存为gif格式
.参数 x1, 整数型, , 区域的左上X坐标
.参数 y1, 整数型, , 区域的左上Y坐标
.参数 x2, 整数型, , 区域的右下X坐标
.参数 y2, 整数型, , 区域的右下Y坐标
.参数 file, 文本型, , 保存的文件名,保存的地方一般为SetPath中设置的目录,当然这里也可以指定全路径名
.参数 delay, 整数型, , 动画间隔，单位毫秒。如果为0，表示只截取静态图片
.参数 time, 整数型, , 总共截取多久的动画，单位毫秒



.子程序 ImageToBmp, 整数型, , 转换图片格式为24位BMP格式
.参数 pic_name, 文本型, , 要转换的图片名
.参数 bmp_name, 文本型, , 要保存的BMP图片名



.子程序 FindStrFast, 整数型, , 同FindStr,比FindStr要快很多
.参数 x1, 整数型, , 区域的左上X坐标
.参数 y1, 整数型, , 区域的左上Y坐标
.参数 x2, 整数型, , 区域的右下X坐标
.参数 y2, 整数型, , 区域的右下Y坐标
.参数 str, 文本型, , 待查找的字符串,可以是字符串组合，比如"长安|洛阳|大雁塔",中间用"|"来分割字符串
.参数 color, 文本型, , 颜色格式串, 可以包含换行分隔符,语法是","后加分割字符串. 具体可以查看下面的示例
.参数 sim, 双精度小数型, , 相似度,取值范围0.1-1.0
.参数 x, 整数型, 参考, 返回X坐标 没找到返回-1
.参数 y, 整数型, 参考, 返回Y坐标 没找到返回-1



.子程序 FindStrFastEx, 文本型, , 同FindStrEx,比FindStrEx快很多
.参数 x1, 整数型, , 区域的左上X坐标
.参数 y1, 整数型, , 区域的左上Y坐标
.参数 x2, 整数型, , 区域的右下X坐标
.参数 y2, 整数型, , 区域的右下Y坐标
.参数 str, 文本型, , 待查找的字符串, 可以是字符串组合，比如"长安|洛阳|大雁塔",中间用"|"来分割字符串
.参数 color, 文本型, , 颜色格式串, 可以包含换行分隔符,语法是","后加分割字符串. 具体可以查看下面的示例
.参数 sim, 双精度小数型, , 相似度,取值范围0.1-1.0



.子程序 FindStrFastE, 文本型, , 同FindStrE，比FindStrE快很多，易语言用不了FindStrFast可以用此接口来代替
.参数 x1, 整数型, , 区域的左上X坐标
.参数 y1, 整数型, , 区域的左上Y坐标
.参数 x2, 整数型, , 区域的右下X坐标
.参数 y2, 整数型, , 区域的右下Y坐标
.参数 str, 文本型, , 待查找的字符串, 可以是字符串组合，比如"长安|洛阳|大雁塔",中间用"|"来分割字符串
.参数 color, 文本型, , 颜色格式串, 可以包含换行分隔符,语法是","后加分割字符串. 具体可以查看下面的示例
.参数 sim, 双精度小数型, , 相似度,取值范围0.1-1.0



.子程序 EnableDisplayDebug, 整数型, , 开启图色调试模式，此模式会稍许降低图色和文字识别的速度.默认不开启
.参数 enable_debug, 整数型, , 0 为关闭，1 为开启



.子程序 CapturePre, 整数型, , 抓取上次操作的图色区域，保存为file(24位位图)
.参数 file, 文本型, , 保存的文件名,保存的地方一般为SetPath中设置的目录，当然这里也可以指定全路径名.



.子程序 Reg, 整数型, , 非简单游平台使用，调用此函数来注册，从而使用插件的高级功能. 推荐使用RegEx函数
.参数 reg_code, 文本型, , 注册码. (从大漠插件后台获取)
.参数 ver_info, 文本型, , 版本附加信息. 可以在后台详细信息查看. 可以任意填写. 可留空. 长度不能超过10. 并且只能包含数字和字母以及小数点. 这个版本信息不是插件版本



.子程序 GetMachineCode, 文本型, , 获取本机的机器码.(带网卡). 此机器码用于插件网站后台. 要求调用进程必须有管理员权限. 否则返回空串


.子程序 SetClipboard, 整数型, , 设置剪贴板的内容
.参数 data, 文本型, , 以字符串表示的剪贴板内容



.子程序 GetClipboard, 文本型, , 获取剪贴板的内容


.子程序 GetNowDict, 整数型, , 获取当前使用的字库序号(0-9)


.子程序 Is64Bit, 整数型, , 判断当前系统是否是64位操作系统


.子程序 GetColorNum, 整数型, , 获取指定区域的颜色数量,颜色格式"RRGGBB-DRDGDB",注意,和按键的颜色格式相反
.参数 x1, 整数型, , 区域的左上X坐标
.参数 y1, 整数型, , 区域的左上Y坐标
.参数 x2, 整数型, , 区域的右下X坐标
.参数 y2, 整数型, , 区域的右下Y坐标
.参数 color, 文本型, , 颜色 格式为"RRGGBB-DRDGDB",比如"123456-000000|aabbcc-202020"
.参数 sim, 双精度小数型, , 相似度,取值范围0.1-1.0



.子程序 EnumWindowByProcess, 文本型, , 根据指定进程以及其它条件,枚举系统中符合条件的窗口,可以枚举到按键自带的无法枚举到的窗口
.参数 process_name, 文本型, , 进程映像名.比如(svchost.exe)
.参数 title, 文本型, , 窗口标题
.参数 class_name, 文本型, , 窗口类名
.参数 filter, 整数型, , 取值定义如下：1 : 匹配窗口标题,参数title有效 | 2 : 匹配窗口类名,参数class_name有效 | 4 : 只匹配指定映像的所对应的第一个进程. 可能有很多同映像名的进程，只匹配第一个进程的 | 8 : 匹配所有者窗口为0的窗口,即顶级窗口 | 16 : 匹配可见的窗口 | 32 : 匹配出的窗口按照窗口打开顺序依次排列<收费功能，具体详情点击查看>



.子程序 GetDictCount, 整数型, , 获取指定的字库中的字符数量
.参数 index, 整数型, , 字库序号(0-9)



.子程序 GetLastError, 整数型, , 获取插件命令的最后错误（返回值：参照接口说明）


.子程序 GetNetTime, 文本型, , 从网络获取当前北京时间，返回类型"2001-11-01 23:14:08"


.子程序 EnableGetColorByCapture, 整数型, , 允许调用GetColor GetColorBGR GetColorHSV 以及 CmpColor时，以截图的方式来获取颜色
.参数 en, 整数型, , 0 关闭  1 打开



.子程序 CheckUAC, 整数型, , 检测当前系统是否有开启UAC(用户账户控制)，返回值 0: 没开启UAC，1: 开启了UAC


.子程序 SetUAC, 整数型, , 设置当前系统的UAC(用户账户控制)
.参数 uac, 整数型, ,  0 : 关闭UAC  1 : 开启UAC



.子程序 DisableFontSmooth, 整数型, , 关闭当前系统屏幕字体平滑,同时关闭系统的ClearType功能 <收费功能>


.子程序 CheckFontSmooth, 整数型, , 检测当前系统是否有开启屏幕字体平滑<收费功能>


.子程序 SetDisplayAcceler, 整数型, , 设置当前系统的硬件加速级别<收费功能>
.参数 level, 整数型, , 



.子程序 FindWindowByProcess, 整数型, , 根据指定的进程名字，来查找可见窗口<收费功能>
.参数 process_name, 文本型, , 进程名. 比如(notepad.exe)
.参数 class_name, 文本型, , 窗口类名，如果为空，则匹配所有. 这里的匹配是模糊匹配，不是精确匹配
.参数 title_name, 文本型, , 窗口标题,如果为空，则匹配所有.这里的匹配是模糊匹配，不是精确匹配



.子程序 FindWindowByProcessId, 整数型, , 根据指定的进程Id，来查找可见窗口<收费功能>
.参数 process_id, 整数型, , 进程id
.参数 class_name, 文本型, , 窗口类名，如果为空，则匹配所有. 这里的匹配是模糊匹配，不是精确匹配
.参数 title_name, 文本型, , 窗口标题,如果为空，则匹配所有.这里的匹配是模糊匹配，不是精确匹配



.子程序 ReadIni, 文本型, , 从Ini中读取指定信息
.参数 section, 文本型, , 小节名
.参数 key, 文本型, , 变量名
.参数 file, 文本型, , ini文件名



.子程序 WriteIni, 整数型, , 向指定的Ini写入信息
.参数 section, 文本型, , 小节名
.参数 key, 文本型, , 变量名
.参数 v, 文本型, , 变量内容
.参数 file, 文本型, , ini文件名



.子程序 RunApp, 整数型, , 运行指定的应用程序<收费功能>
.参数 path, 文本型, , 指定的可执行程序全路径
.参数 mode, 整数型, , 0 : 普通模式  1 : 加强模式



.子程序 Delay, 整数型, , 延时指定的毫秒,过程中不阻塞UI操作. 高级语言使用<收费功能>
.参数 mis, 整数型, , 毫秒数



.子程序 FindWindowSuper, 整数型, , 根据两组设定条件来查找指定窗口<收费功能>
.参数 spec1, 文本型, , 查找串1. (内容取决于flag1的值)
.参数 flag1, 整数型, , spec1的类型，0：标题 1：程序名字 2：类名 3：程序路径 4：父句柄 5：父窗口标题 6：父窗口类名 7：顶级窗口句柄 8：顶级窗口标题 9：顶级窗口类名
.参数 type1, 整数型, , 0精确判断， 1模糊判断
.参数 spec2, 文本型, , 查找串2. (内容取决于flag2的值)
.参数 flag2, 整数型, , spec2的类型，0：标题 1：程序名字 2：类名 3：程序路径 4：父句柄 5：父窗口标题 6：父窗口类名 7：顶级窗口句柄 8：顶级窗口标题 9：顶级窗口类名
.参数 type2, 整数型, , 0精确判断，1模糊判断



.子程序 ExcludePos, 文本型, , 根据部分Ex接口的返回值，排除指定范围区域内的坐标
.参数 all_pos, 文本型, , 坐标描述串。  一般是FindStrEx,FindStrFastEx,FindStrWithFontEx，FindColorEx, FindMultiColorEx,和FindPicEx的返回值
.参数 type, 整数型, , 取值为0或者1
.参数 x1, 整数型, , 左上角横坐标
.参数 y1, 整数型, , 左上角纵坐标
.参数 x2, 整数型, , 右下角横坐标
.参数 y2, 整数型, , 右下角纵坐标



.子程序 FindNearestPos, 文本型, , 根据部分Ex接口的返回值，然后在所有坐标里找出距离指定坐标最近的那个坐标
.参数 all_pos, 文本型, , 坐标描述串。  一般是FindStrEx,FindStrFastEx,FindStrWithFontEx，FindColorEx, FindMultiColorEx,和FindPicEx的返回值
.参数 type, 整数型, , 取值为0或者1
.参数 x, 整数型, , 横坐标
.参数 y, 整数型, , 纵坐标



.子程序 SortPosDistance, 文本型, , 根据部分Ex接口的返回值，然后对所有坐标根据对指定坐标的距离进行从小到大的排序
.参数 all_pos, 文本型, , 坐标描述串。  一般是FindStrEx,FindStrFastEx,FindStrWithFontEx,FindColorEx, FindMultiColorEx,和FindPicEx的返回值.
.参数 type, 整数型, , 取值为0或者1
.参数 x, 整数型, , 横坐标
.参数 y, 整数型, , 纵坐标



.子程序 FindPicMem, 整数型, , 查找指定区域内的图片,位图必须是24位色格式,支持透明色,当图像上下左右4个顶点的颜色一样时,则这个颜色将作为透明色处理，这个函数可以查找多个图片,只返回第一个找到的X Y坐标. 这个函数要求图片是数据地址<收费功能>
.参数 x1, 整数型, , 区域的左上X坐标
.参数 y1, 整数型, , 区域的左上Y坐标
.参数 x2, 整数型, , 区域的右下X坐标
.参数 y2, 整数型, , 区域的右下Y坐标
.参数 pic_info, 文本型, , 图片数据地址集合. 格式为"地址1,长度1|地址2,长度2.....|地址n,长度n". 可以用AppendPicAddr来组合
.参数 delta_color, 文本型, , 颜色色偏比如"203040" 表示RGB的色偏分别是20 30 40 (这里是16进制表示)
.参数 sim, 双精度小数型, , 相似度,取值范围0.1-1.0
.参数 dir, 整数型, , 查找方向 0: 从左到右,从上到下 1: 从左到右,从下到上 2: 从右到左,从上到下 3: 从右到左, 从下到上
.参数 x, 整数型, 参考, 返回图片左上角的X坐标
.参数 y, 整数型, 参考, 返回图片左上角的Y坐标



.子程序 FindPicMemEx, 文本型, , 查找指定区域内的图片,位图必须是24位色格式,支持透明色,当图像上下左右4个顶点的颜色一样时,则这个颜色将作为透明色处理,这个函数可以查找多个图片,并且返回所有找到的图像的坐标. 这个函数要求图片是数据地址<收费功能>
.参数 x1, 整数型, , 区域的左上X坐标
.参数 y1, 整数型, , 区域的左上Y坐标
.参数 x2, 整数型, , 区域的右下X坐标
.参数 y2, 整数型, , 区域的右下Y坐标
.参数 pic_info, 文本型, , 图片数据地址集合. 格式为"地址1,长度1|地址2,长度2.....|地址n,长度n". 可以用AppendPicAddr来组合
.参数 delta_color, 文本型, , 颜色色偏比如"203040" 表示RGB的色偏分别是20 30 40 (这里是16进制表示)
.参数 sim, 双精度小数型, , 相似度,取值范围0.1-1.0
.参数 dir, 整数型, , 查找方向 0: 从左到右,从上到下 1: 从左到右,从下到上 2: 从右到左,从上到下 3: 从右到左, 从下到上



.子程序 FindPicMemE, 文本型, , 查找指定区域内的图片,位图必须是24位色格式,支持透明色,当图像上下左右4个顶点的颜色一样时,则这个颜色将作为透明色处理,这个函数可以查找多个图片,只返回第一个找到的X Y坐标. 这个函数要求图片是数据地址.<收费功能>易接口
.参数 x1, 整数型, , 区域的左上X坐标
.参数 y1, 整数型, , 区域的左上Y坐标
.参数 x2, 整数型, , 区域的右下X坐标
.参数 y2, 整数型, , 区域的右下Y坐标
.参数 pic_info, 文本型, , 图片数据地址集合. 格式为"地址1,长度1|地址2,长度2.....|地址n,长度n". 可以用AppendPicAddr来组合
.参数 delta_color, 文本型, , 颜色色偏比如"203040" 表示RGB的色偏分别是20 30 40 (这里是16进制表示)
.参数 sim, 双精度小数型, , 相似度,取值范围0.1-1.0
.参数 dir, 整数型, , 查找方向 0: 从左到右,从上到下 1: 从左到右,从下到上 2: 从右到左,从上到下 3: 从右到左, 从下到上



.子程序 AppendPicAddr, 文本型, , 对指定的数据地址和长度，组合成新的参数. FindPicMem FindPicMemE 以及FindPicMemEx专用
.参数 pic_info, 文本型, , 老的地址描述串
.参数 addr, 整数型, , 数据地址
.参数 size, 整数型, , 数据长度



.子程序 Stop, 整数型, , 停止指定的音乐
.参数 id, 整数型, , Play返回的播放id



.子程序 SetDictMem, 整数型, , 从内存中设置字库<收费功能>
.参数 index, 整数型, , 字库的序号,取值为0-9,目前最多支持10个字库
.参数 addr, 整数型, , 数据地址
.参数 size, 整数型, , 字库长度



.子程序 GetNetTimeSafe, 文本型, , 从网络获取当前北京时间. 同GetNetTime. 但此接口数据是加密传送,以免被人破解<收费功能>


.子程序 ForceUnBindWindow, 整数型, , 强制解除绑定窗口,并释放系统资源<收费功能>
.参数 hwnd, 整数型, , 需要强制解除绑定的窗口句柄



.子程序 ReadIniPwd, 文本型, , 从Ini中读取指定信息.可支持加密文件<收费功能>
.参数 section, 文本型, , 小节名
.参数 key, 文本型, , 变量名
.参数 file, 文本型, , ini文件名
.参数 pwd, 文本型, , 密码



.子程序 WriteIniPwd, 整数型, , 向指定的Ini写入信息.支持加密文件<收费功能>
.参数 section, 文本型, , 小节名
.参数 key, 文本型, , 变量名
.参数 v, 文本型, , 变量内容
.参数 file, 文本型, , ini文件名
.参数 pwd, 文本型, , 密码



.子程序 DecodeIni, 整数型, , 解密指定的文件<收费功能>
.参数 file, 文本型, , 文件名
.参数 pwd, 文本型, , 密码



.子程序 KeyDownChar, 整数型, , 按住指定的key_str
.参数 key_str, 文本型, , 字符串描述的键码. 大小写无所谓



.子程序 KeyUpChar, 整数型, , 弹起来虚拟键key_str
.参数 key_str, 文本型, , 字符串描述的键码. 大小写无所谓. 



.子程序 KeyPressChar, 整数型, , 按下指定的key_str
.参数 key_str, 文本型, , 字符串描述的键码. 大小写无所谓. 



.子程序 KeyPressStr, 整数型, , 根据指定的字符串序列，依次按顺序按下其中的字符 <收费功能>
.参数 key_str, 文本型, , 需要按下的字符串序列. 比如"1234","abcd","7389,1462"等
.参数 delay, 整数型, , 每按下一个按键，需要延时多久. 单位毫秒.这个值越大，按的速度越慢



.子程序 EnableKeypadPatch, 整数型, , 键盘消息发送补丁. 默认是关闭<收费功能> 注: 此接口必须在绑定之后才能调用
.参数 en, 整数型, , 0 禁止  1 开启



.子程序 EnableKeypadSync, 整数型, , 键盘消息采用同步发送模式.默认异步<收费功能>
.参数 en, 整数型, , 0 禁止同步 1 开启同步
.参数 time_out, 整数型, , 单位是毫秒,表示同步等待的最大时间



.子程序 EnableMouseSync, 整数型, , 鼠标消息采用同步发送模式.默认异步<收费功能>
.参数 en, 整数型, , 0 禁止同步 1 开启同步
.参数 time_out, 整数型, , 单位是毫秒,表示同步等待的最大时间.



.子程序 DmGuard, 整数型, , 针对部分检测措施的保护盾<收费功能>
.参数 en, 整数型, , 0表示关闭保护盾,1表示打开保护盾
.参数 type, 文本型, , 参数具体内容可以是以下任意一个,"np" : 这个是防止NP检测,"np2" : 在NP下保护后台可以正常运行. (此模式需要加载驱动,目前仅支持32位系统)"memory" : 这个保护内存系列接口和汇编接口可以正常运行.(不用带dx.public.memory的情况下)



.子程序 FaqCaptureFromFile, 整数型, , 截取指定图片中的图像,并返回此句柄<收费功能>
.参数 x1, 整数型, , 左上角X坐标
.参数 y1, 整数型, , 左上角Y坐标
.参数 x2, 整数型, , 右下角X坐标
.参数 y2, 整数型, , 右下角Y坐标
.参数 file, 文本型, , 图片文件名,图像格式基本都支持
.参数 quality, 整数型, , 图像或动画品质,或者叫压缩率,此值越大图像质量越好 取值范围（1-100）



.子程序 FindIntEx, 文本型, , 搜索指定的整数 <收费功能>
.参数 hwnd, 整数型, , 指定搜索的窗口句柄或者进程ID.  默认是窗口句柄. 如果要指定为进程ID,需要调用SetMemoryHwndAsProcessId
.参数 addr_range, 文本型, , 指定搜索的地址集合，字符串类型，这个地方可以是上次FindXXX的返回地址集合,可以进行二次搜索.(类似CE的再次扫描)
.参数 int_value_min, 整数型, , 搜索的整数数值最小值
.参数 int_value_max, 整数型, , 搜索的整数数值最大值
.参数 type, 整数型, , 搜索的整数类型,取值如下 0 : 32位 1 : 16 位   2 : 8位
.参数 step, 整数型, , 搜索步长
.参数 multi_thread, 整数型, , 表示是否开启多线程查找.  0不开启，1开启 | 开启多线程查找速度较快，但会耗费较多CPU资源. 不开启速度较慢，但节省CPU
.参数 mode, 整数型, , 1 表示开启快速扫描(略过只读内存)  0表示所有内存类型全部扫描



.子程序 FindFloatEx, 文本型, , 搜索指定的单精度浮点数 <收费功能>
.参数 hwnd, 整数型, , 指定搜索的窗口句柄或者进程ID.  默认是窗口句柄. 如果要指定为进程ID,需要调用SetMemoryHwndAsProcessId
.参数 addr_range, 文本型, , 指定搜索的地址集合，字符串类型，这个地方可以是上次FindXXX的返回地址集合,可以进行二次搜索.(类似CE的再次扫描)
.参数 float_value_min, 小数型, , 搜索的单精度数值最小值
.参数 float_value_max, 小数型, , 搜索的单精度数值最大值
.参数 step, 整数型, , 搜索步长
.参数 multi_thread, 整数型, , 表示是否开启多线程查找.  0不开启，1开启 | 开启多线程查找速度较快，但会耗费较多CPU资源. 不开启速度较慢，但节省CPU
.参数 mode, 整数型, , 1 表示开启快速扫描(略过只读内存)  0表示所有内存类型全部扫描



.子程序 FindDoubleEx, 文本型, , 搜索指定的双精度浮点数.<收费功能>
.参数 hwnd, 整数型, , 指定搜索的窗口句柄或者进程ID.  默认是窗口句柄. 如果要指定为进程ID,需要调用SetMemoryHwndAsProcessId
.参数 addr_range, 文本型, , 指定搜索的地址集合，字符串类型，这个地方可以是上次FindXXX的返回地址集合,可以进行二次搜索.(类似CE的再次扫描)
.参数 double_value_min, 双精度小数型, , 搜索的双精度数值最小值
.参数 double_value_max, 双精度小数型, , 搜索的双精度数值最大值 
.参数 step, 整数型, , 搜索步长
.参数 multi_thread, 整数型, , 表示是否开启多线程查找.  0不开启，1开启 | 开启多线程查找速度较快，但会耗费较多CPU资源. 不开启速度较慢，但节省CPU
.参数 mode, 整数型, , 1 表示开启快速扫描(略过只读内存)  0表示所有内存类型全部扫描



.子程序 FindStringEx, 文本型, , 搜索指定的字符串.<收费功能>
.参数 hwnd, 整数型, , 指定搜索的窗口句柄或者进程ID.  默认是窗口句柄. 如果要指定为进程ID,需要调用SetMemoryHwndAsProcessId
.参数 addr_range, 文本型, , 指定搜索的地址集合，字符串类型，这个地方可以是上次FindXXX的返回地址集合,可以进行二次搜索.(类似CE的再次扫描)
.参数 string_value, 文本型, , 搜索的字符串
.参数 type, 整数型, , 搜索的字符串类型,取值如下：0 : Ascii字符串 1 : Unicode字符串
.参数 step, 整数型, , 搜索步长
.参数 multi_thread, 整数型, , 表示是否开启多线程查找.  0不开启，1开启 | 开启多线程查找速度较快，但会耗费较多CPU资源. 不开启速度较慢，但节省CPU
.参数 mode, 整数型, ,  1 表示开启快速扫描(略过只读内存)  0表示所有内存类型全部扫描



.子程序 FindDataEx, 文本型, , 搜索指定的二进制数据. <收费功能>
.参数 hwnd, 整数型, , 指定搜索的窗口句柄或者进程ID.  默认是窗口句柄. 如果要指定为进程ID,需要调用SetMemoryHwndAsProcessId
.参数 addr_range, 文本型, , 指定搜索的地址集合，字符串类型，这个地方可以是上次FindXXX的返回地址集合,可以进行二次搜索.(类似CE的再次扫描)
.参数 data, 文本型, , 要搜索的二进制数据 以字符串的形式描述比如"00 01 23 45 67 86 ab ce f1"等这里也可以支持模糊查找,用??来代替单个字节. 比如"00 01 ?? ?? 67 86 ?? ce f1"等
.参数 step, 整数型, , 搜索步长
.参数 multi_thread, 整数型, , 表示是否开启多线程查找.  0不开启，1开启 | 开启多线程查找速度较快，但会耗费较多CPU资源. 不开启速度较慢，但节省CPU
.参数 mode, 整数型, , 1 表示开启快速扫描(略过只读内存)  0表示所有内存类型全部扫描



.子程序 EnableRealMouse, 整数型, , 鼠标动作模拟真实操作,带移动轨迹,以及点击延时随机 <收费功能>
.参数 en, 整数型, , 0 关闭模拟  1 开启模拟
.参数 mousedelay, 整数型, , 单位是毫秒. 表示在模拟鼠标移动轨迹时,每移动一次的时间间隔.这个值越大,鼠标移动越慢
.参数 mousestep, 整数型, , 表示在模拟鼠标移动轨迹时,每移动一次的距离. 这个值越大，鼠标移动越快速



.子程序 EnableRealKeypad, 整数型, , 键盘动作模拟真实操作,点击延时随机 <收费功能>
.参数 en, 整数型, ,  0 关闭模拟  1 开启模拟



.子程序 SendStringIme, 整数型, , 向绑定的窗口发送文本数据.必须配合dx.public.input.ime属性 <收费功能>
.参数 str, 文本型, , 发送的文本数据



.子程序 FoobarDrawLine, 整数型, , 在指定的Foobar窗口内部画线条 <收费功能>
.参数 hwnd, 整数型, , 指定的Foobar窗口,注意,此句柄必须是通过CreateFoobarxxxx系列函数创建出来的
.参数 x1, 整数型, , 左上角X坐标(相对于hwnd客户区坐标)
.参数 y1, 整数型, , 左上角Y坐标(相对于hwnd客户区坐标)
.参数 x2, 整数型, , 右下角X坐标(相对于hwnd客户区坐标)
.参数 y2, 整数型, , 右下角Y坐标(相对于hwnd客户区坐标)
.参数 color, 文本型, , 填充的颜色值
.参数 style, 整数型, , 画笔类型. 0为实线. 1为虚线
.参数 width, 整数型, , 线条宽度



.子程序 FindStrEx, 文本型, , 在屏幕范围(x1,y1,x2,y2)内,查找string(可以是任意字符串的组合),并返回符合color_format的所有坐标位置,相似度sim同Ocr接口描述
.参数 x1, 整数型, , 区域的左上X坐标
.参数 y1, 整数型, , 区域的左上Y坐标
.参数 x2, 整数型, , 区域的右下X坐标
.参数 y2, 整数型, , 区域的右下Y坐标
.参数 str, 文本型, , 待查找的字符串, 可以是字符串组合，比如"长安|洛阳|大雁塔",中间用"|"来分割字符串
.参数 color, 文本型, , 颜色格式串, 可以包含换行分隔符,语法是","后加分割字符串. 具体可以查看下面的示例.
.参数 sim, 双精度小数型, , 相似度,取值范围0.1-1.0



.子程序 GetClientRect, 整数型, , 获取窗口区域坐标
.参数 hwnd, 整数型, , 
.参数 x1, 整数型, 参考, 
.参数 y1, 整数型, 参考, 
.参数 x2, 整数型, 参考, 
.参数 y2, 整数型, 参考, 



.子程序 IsBind, 整数型, , 
.参数 hwnd, 整数型, , 



.子程序 RegEx, 整数型, , 
.参数 reg_code, 文本型, , 注册码. (从大漠插件后台获取)
.参数 ver_info, 文本型, , 版本附加信息. 可以在后台详细信息查看.可留空. 长度不能超过10. 并且只能包含数字和字母以及小数点. 这个版本信息不是插件版本
.参数 ip, 文本型, , 插件注册的ip地址.可以用|来组合,依次对ip中的地址进行注册，直到成功. ip地址列表在VIP群中获取



.子程序 GetDmCount, 整数型, , 


.子程序 DisableScreenSave, 整数型, , 


.子程序 DisablePowerSave, 整数型, , 


.子程序 SetMemoryHwndAsProcessId, 整数型, , 
.参数 en, 整数型, , 



.子程序 FindShape, 整数型, , 
.参数 x1, 整数型, , 
.参数 y1, 整数型, , 
.参数 x2, 整数型, , 
.参数 y2, 整数型, , 
.参数 offset_color, 文本型, , 
.参数 sim, 双精度小数型, , 
.参数 dir, 整数型, , 
.参数 x, 整数型, 参考, 
.参数 y, 整数型, 参考, 



.子程序 FindShapeE, 文本型, , 
.参数 x1, 整数型, , 
.参数 y1, 整数型, , 
.参数 x2, 整数型, , 
.参数 y2, 整数型, , 
.参数 offset_color, 文本型, , 
.参数 sim, 双精度小数型, , 
.参数 dir, 整数型, , 



.子程序 FindShapeEx, 文本型, , 
.参数 x1, 整数型, , 
.参数 y1, 整数型, , 
.参数 x2, 整数型, , 
.参数 y2, 整数型, , 
.参数 offset_color, 文本型, , 
.参数 sim, 双精度小数型, , 
.参数 dir, 整数型, , 



.子程序 FindStrS, 文本型, , 
.参数 x1, 整数型, , 
.参数 y1, 整数型, , 
.参数 x2, 整数型, , 
.参数 y2, 整数型, , 
.参数 str, 文本型, , 
.参数 color, 文本型, , 
.参数 sim, 双精度小数型, , 
.参数 x, 整数型, 参考, 
.参数 y, 整数型, 参考, 



.子程序 FindStrExS, 文本型, , 
.参数 x1, 整数型, , 
.参数 y1, 整数型, , 
.参数 x2, 整数型, , 
.参数 y2, 整数型, , 
.参数 str, 文本型, , 
.参数 color, 文本型, , 
.参数 sim, 双精度小数型, , 



.子程序 FindStrFastS, 文本型, , 
.参数 x1, 整数型, , 
.参数 y1, 整数型, , 
.参数 x2, 整数型, , 
.参数 y2, 整数型, , 
.参数 str, 文本型, , 
.参数 color, 文本型, , 
.参数 sim, 双精度小数型, , 
.参数 x, 整数型, 参考, 
.参数 y, 整数型, 参考, 



.子程序 FindStrFastExS, 文本型, , 
.参数 x1, 整数型, , 
.参数 y1, 整数型, , 
.参数 x2, 整数型, , 
.参数 y2, 整数型, , 
.参数 str, 文本型, , 
.参数 color, 文本型, , 
.参数 sim, 双精度小数型, , 



.子程序 FindPicS, 文本型, , 
.参数 x1, 整数型, , 
.参数 y1, 整数型, , 
.参数 x2, 整数型, , 
.参数 y2, 整数型, , 
.参数 pic_name, 文本型, , 
.参数 delta_color, 文本型, , 
.参数 sim, 双精度小数型, , 
.参数 dir, 整数型, , 
.参数 x, 整数型, 参考, 
.参数 y, 整数型, 参考, 



.子程序 FindPicExS, 文本型, , 
.参数 x1, 整数型, , 
.参数 y1, 整数型, , 
.参数 x2, 整数型, , 
.参数 y2, 整数型, , 
.参数 pic_name, 文本型, , 
.参数 delta_color, 文本型, , 
.参数 sim, 双精度小数型, , 
.参数 dir, 整数型, , 



.子程序 ClearDict, 整数型, , 
.参数 index, 整数型, , 



.子程序 GetMachineCodeNoMac, 文本型, , 


.子程序 EnableFakeActive, 整数型, , 
.参数 en, 整数型, , 



.子程序 GetScreenDataBmp, 整数型, , 
.参数 x1, 整数型, , 
.参数 y1, 整数型, , 
.参数 x2, 整数型, , 
.参数 y2, 整数型, , 
.参数 data, 整数型, 参考, 
.参数 size, 整数型, 参考, 



.子程序 EncodeFile, 整数型, , 
.参数 file, 文本型, , 
.参数 pwd, 文本型, , 



.子程序 GetCursorShapeEx, 文本型, , 
.参数 type, 整数型, , 



.子程序 FaqCancel, 整数型, , 


.子程序 IntToData, 文本型, , 
.参数 int_value, 整数型, , 
.参数 type, 整数型, , 



.子程序 FloatToData, 文本型, , 
.参数 float_value, 小数型, , 



.子程序 DoubleToData, 文本型, , 
.参数 double_value, 双精度小数型, , 



.子程序 StringToData, 文本型, , 
.参数 string_value, 文本型, , 
.参数 type, 整数型, , 



.子程序 SetMemoryFindResultToFile, 整数型, , 
.参数 file, 文本型, , 



.子程序 EnableBind, 整数型, , 
.参数 en, 整数型, , 



.子程序 SetSimMode, 整数型, , 
.参数 mode, 整数型, , 



.子程序 SendPaste, 整数型, , 向指定窗口发送粘贴命令. 把剪贴板的内容发送到目标窗口
.参数 hwnd, 整数型, , 指定的窗口句柄



.子程序 IsDisplayDead, 整数型, , 判断是否卡屏,返回值：0=没卡屏，1=卡屏
.参数 x1, 整数型, , 区域的左上X坐标
.参数 y1, 整数型, , 区域的左上Y坐标
.参数 x2, 整数型, , 区域的右下X坐标
.参数 y2, 整数型, , 区域的右下Y坐标
.参数 t, 整数型, , 需要等待的时间,单位是秒



.子程序 GetKeyState, 整数型, , 获取指定的按键状态.(前台信息,不是后台)
.参数 vk_code, 整数型, , 虚拟按键码



.子程序 WaitKey, 整数型, , 等待指定的按键按下 (前台,不是后台)0:超时1:指定的按键按下
.参数 vk_code, 整数型, , 虚拟按键码
.参数 time_out, 整数型, , 等待多久,单位毫秒. 如果是0，表示一直等待



.子程序 DeleteIni, 整数型, , 删除指定的ini小节
.参数 section, 文本型, , 小节名
.参数 key, 文本型, , 变量名. 如果这个变量为空串，则删除整个section小节
.参数 file, 文本型, , ini文件名



.子程序 DeleteIniPwd, 整数型, , 删除指定的ini小节.支持加密文件
.参数 section, 文本型, , 小节名
.参数 key, 文本型, , 变量名. 如果这个变量为空串，则删除整个section小节
.参数 file, 文本型, , ini文件名
.参数 pwd, 文本型, , 密码



.子程序 LockDisplay, 整数型, , 锁定指定窗口的图色数据(不刷新) <收费功能>
.参数 lock, 整数型, , 0关闭锁定  1 开启锁定



.子程序 SelectDirectory, 文本型, , 弹出选择文件夹对话框，并返回选择的文件夹


.子程序 SelectFile, 文本型, , 弹出选择文件对话框，并返回选择的文件


.子程序 EnableIme, 整数型, , 设置是否关闭绑定窗口所在进程的输入法
.参数 enable, 整数型, , 0关闭  1 开启



.子程序 EnableSpeedDx, 整数型, , 设置是否开启高速dx键鼠模式。 默认是关闭
.参数 enable, 整数型, , 0关闭  1 开启



.子程序 FoobarSetSave, 整数型, , 设置保存指定的Foobar滚动文本区信息到文件
.参数 hwnd, 整数型, , 指定的Foobar窗口句柄,此句柄必须是通过CreateFoobarxxx创建而来
.参数 file, 文本型, , 保存的文件名
.参数 enable, 整数型, , 取值如下0 : 关闭向文件输出 (默认是0) 1 : 开启向文件输出
.参数 header, 文本型, , 输出的附加头信息. 具体请参照接口说明



.子程序 DownloadFile, 整数型, , 从internet上下载一个文件,返回值1 : 成功-1 : 网络连接失败-2 : 写入文件失败
.参数 url, 文本型, , 下载的url地址
.参数 save_file, 文本型, , 要保存的文件名
.参数 timeout, 整数型, , 连接超时时间，单位是毫秒



.子程序 EnumWindowSuper, 文本型, , 根据两组设定条件来枚举指定窗口. <收费功能
.参数 spec1, 文本型, , 查找串1. (内容取决于flag1的值)
.参数 flag1, 整数型, , 取值如下: 0表示spec1的内容是标题1表示spec1的内容是程序名字. (比如notepad)2表示spec1的内容是类名3表示spec1的内容是程序路径.(不包含盘符,比如\windows\system32)4表示spec1的内容是父句柄.(十进制表达的串)5表示spec1的内容是父窗口标题6表示spec1的内容是父窗口类名7表示spec1的内容是顶级窗口句柄.(十进制表达的串) 8表示spec1的内容是顶级窗口标题 9表示spec1的内容是顶级窗口类名
.参数 type1, 整数型, , 取值如下0精确判断1模糊判断
.参数 spec2, 文本型, , 查找串2. (内容取决于flag2的值)
.参数 flag2, 整数型, , 取值如下: 0表示spec2的内容是标题1表示spec2的内容是程序名字. (比如notepad)2表示spec2的内容是类名3表示spec2的内容是程序路径.(不包含盘符,比如\windows\system32)4表示spec2的内容是父句柄.(十进制表达的串)5表示spec2的内容是父窗口标题6表示spec2的内容是父窗口类名7表示spec2的内容是顶级窗口句柄.(十进制表达的串) 8表示spec2的内容是顶级窗口标题 9表示spec2的内容是顶级窗口类名
.参数 type2, 整数型, , 取值如下0精确判断1模糊判断
.参数 sort, 整数型, , 0不排序1对枚举出的窗口进行排序,按照窗口打开顺序



.类模块 大漠中文版, , , 

.子程序 创建对象, 逻辑型, , 创建大漠对象,成功返回真，失败返回假


.子程序 销毁对象, 空白型, , 销毁大漠对象


.子程序 逐字输入_jb8, 空白型, , 模拟手打的方式逐字输入，可以是数字和字符串，需传递大漠对象（脚本吧首创）
.参数 字符, 文本型, , 需要输入的字符串，数字需要用双引号，例如：“1234”
.参数 延时, 整数型, , 每次输入的延时，单位：毫秒



.子程序 技能释放_jb8, 空白型, , 智能释放技能，支持多技能和多间隔，具体看参数说明（脚本吧首创）
.参数 技能列表, 文本型, , 格式：“F1|F2|F3|F4”，无限扩展支持，但必须用“|”隔开
.参数 间隔列表, 文本型, , 格式：“5|6|7|10”，和技能列表对应，单位：秒，用“|”隔开
.参数 每次按键延时, 整数型, , 单位是毫秒



.子程序 圆形渐开线_jb8, 逻辑型, , 找到特征码返回真，否则返回假（脚本吧首创）
.参数 鼠标特征码, 文本型, , 找到此特征码后会直接返回子程序
.参数 中心点x坐标, 整数型, , 
.参数 中心点y坐标, 整数型, , 
.参数 两点间距离, 整数型, , 
.参数 递增半径, 整数型, , 每次移动的递增距离
.参数 圈数, 整数型, , 共移动多少圈
.参数 移动延时, 整数型, , 



.子程序 鼠标移动_梦幻_jb8, 空白型, , 移动鼠标，梦幻西游偏移专用_找色型（脚本吧首创）
.参数 x, 整数型, , 
.参数 y, 整数型, , 



.子程序 鼠标移动_梦幻2_jb8, 空白型, , 移动鼠标，梦幻西游偏移专用_找图型（脚本吧首创）
.参数 参_X, 整数型, , 
.参数 参_Y, 整数型, , 
.参数 参_X偏移, 整数型, 可空, X坐标允许的偏移值
.参数 参_Y偏移, 整数型, 可空, Y坐标允许的偏移值



.子程序 取插件版本, 文本型, , 获取DLL版本号


.子程序 置全局路径, 整数型, , 设置全局路径,设置了此路径后,所有接口调用中,相关的文件都相对于此路径. 比如图片,字库等.
.参数 path, 文本型, , 路径,可以是相对路径,也可以是绝对路径



.子程序 识字, 文本型, , OCR,识别屏幕范围(x1,y1,x2,y2)内符合color_format的字符串,并且相似度为sim,sim取值范围(0.1-1.0),这个值越大越精确,越大速度越快,越小速度越慢,请斟酌使用!
.参数 x1, 整数型, , 区域的左上X坐标
.参数 y1, 整数型, , 区域的左上Y坐标
.参数 x2, 整数型, , 区域的右上X坐标
.参数 y2, 整数型, , 区域的右下Y坐标
.参数 color, 文本型, , 颜色格式串，示例："ffffff-000000"
.参数 sim, 双精度小数型, , 相似度，取值范围 0.1-1.0



.子程序 找字, 整数型, , 在屏幕范围(x1,y1,x2,y2)内,查找string(可以是任意个字符串的组合),并返回符合color_format的坐标位置,相似度sim同Ocr接口描述,(多色,差色查找类似于Ocr接口,不再重述)
.参数 x1, 整数型, , 区域的左上X坐标
.参数 y1, 整数型, , 区域的左上Y坐标
.参数 x2, 整数型, , 区域的右上X坐标
.参数 y2, 整数型, , 区域的右下Y坐标
.参数 str, 文本型, , 待查找的字符串,可以是字符串组合，比如"长安|洛阳|大雁塔",中间用"|"来分割字符串
.参数 color, 文本型, , 颜色格式串，示例："ffffff-000000"
.参数 sim, 双精度小数型, , 相似度，取值范围 0.1-1.0
.参数 x, 整数型, 参考, 返回X坐标 没找到返回-1
.参数 y, 整数型, 参考, 返回Y坐标 没找到返回-1



.子程序 返回值解析1, 整数型, , GetResultCount，对插件部分接口的返回值进行解析,并返回ret中的坐标个数
.参数 str, 文本型, , 部分接口的返回串



.子程序 窗口_取窗口区域坐标, 整数型, , 获取窗口区域坐标
.参数 hwnd, 整数型, , 
.参数 x1, 整数型, 参考, 
.参数 y1, 整数型, 参考, 
.参数 x2, 整数型, 参考, 
.参数 y2, 整数型, 参考, 



.子程序 返回值解析2, 整数型, , GetResultPos，对插件部分接口的返回值进行解析,并根据指定的第index个坐标,返回具体的值
.参数 str, 文本型, , 部分接口的返回串
.参数 index, 整数型, , 第几个坐标
.参数 x, 整数型, 参考, 返回X坐标
.参数 y, 整数型, 参考, 返回Y坐标



.子程序 字库_置序号, 整数型, , UseDict，表示使用哪个字库文件进行识别(index范围:0-9)
.参数 index, 整数型, , 字库编号(0-9)



.子程序 取DLL路径, 文本型, , GetBasePath，获取注册在系统中的dm.dll的路径


.子程序 字库_置密码, 整数型, , SetDictPwd，设置字库的密码,在SetDict前调用,目前的设计是,所有字库通用一个密码
.参数 pwd, 文本型, , 字库密码



.子程序 识字InFile, 文本型, , OcrInFile,识别位图中区域(x1,y1,x2,y2)的文字
.参数 x1, 整数型, , 区域的左上X坐标
.参数 y1, 整数型, , 区域的左上Y坐标
.参数 x2, 整数型, , 区域的右上X坐标
.参数 y2, 整数型, , 区域的右下Y坐标
.参数 pic_name, 文本型, , 图片文件名
.参数 color, 文本型, , 颜色格式串，示例："ffffff-000000"
.参数 sim, 双精度小数型, , 相似度,取值范围0.1-1.0



.子程序 截图, 整数型, , Capture，抓取指定区域(x1, y1, x2, y2)的图像,保存为file(24位位图)
.参数 x1, 整数型, , 区域的左上X坐标
.参数 y1, 整数型, , 区域的左上Y坐标
.参数 x2, 整数型, , 区域的右上X坐标
.参数 y2, 整数型, , 区域的右下Y坐标
.参数 file, 文本型, , 保存的文件名,保存的地方一般为SetPath中设置的目录，当然这里也可以指定全路径名



.子程序 键盘_按键, 整数型, , KeyPress，按下指定的虚拟键码
.参数 vk, 整数型, , 虚拟按键码



.子程序 键盘_按住, 整数型, , KeyDown，按住指定的虚拟键码
.参数 vk, 整数型, , 虚拟按键码



.子程序 键盘_弹起, 整数型, , KeyUp，弹起指定的虚拟键码
.参数 vk, 整数型, , 虚拟按键码



.子程序 鼠标_左键单击, 整数型, , LeftClick，按下鼠标左键


.子程序 鼠标_右键单击, 整数型, , RightClick，按下鼠标右键


.子程序 鼠标_中键单击, 整数型, , MiddleClick，按下鼠标中键


.子程序 鼠标_左键双击, 整数型, , LeftDoubleClick，双击鼠标左键


.子程序 鼠标_按住左键, 整数型, , LeftDown，按住鼠标左键


.子程序 鼠标_弹起左键, 整数型, , LeftUp，弹起鼠标左键


.子程序 鼠标_按住右键, 整数型, , RightDown，按住鼠标右键


.子程序 鼠标_弹起右键, 整数型, , RightUp，弹起鼠标右键


.子程序 鼠标移动, 整数型, , MoveTo，把鼠标移动到目的点(x,y)
.参数 x, 整数型, , X坐标
.参数 y, 整数型, , Y坐标



.子程序 鼠标_相对移动, 整数型, , MoveR，鼠标相对于上次的位置移动rx,ry
.参数 rx, 整数型, , 相对于上次的X偏移
.参数 ry, 整数型, , 相对于上次的Y偏移



.子程序 取色RGB, 文本型, , GetColor，获取(x,y)的颜色,颜色返回格式"RRGGBB",注意,和按键的颜色格式相反
.参数 x, 整数型, , X坐标
.参数 y, 整数型, , Y坐标



.子程序 取色BGR, 文本型, , GetColorBGR，获取(x,y)的颜色,颜色返回格式"BBGGRR"
.参数 x, 整数型, , X坐标
.参数 y, 整数型, , Y坐标



.子程序 颜色转换RGB_BGR, 文本型, , RGB2BGR,把RGB的颜色格式转换为BGR(按键格式)
.参数 rgb_color, 文本型, , rgb格式的颜色字符串



.子程序 颜色转换BGR_RGB, 文本型, , BGR2RGB，把BGR(按键格式)的颜色格式转换为RGB
.参数 bgr_color, 文本型, , bgr格式的颜色字符串



.子程序 解绑, 整数型, , UnBindWindow，解除绑定窗口,并释放系统资源


.子程序 颜色比较, 整数型, , CmpColor，比较指定坐标点(x,y)的颜色
.参数 x, 整数型, , X坐标
.参数 y, 整数型, , Y坐标
.参数 color, 文本型, , 颜色格式串，示例："ffffff-000000"
.参数 sim, 双精度小数型, , 相似度,取值范围0.1-1.0



.子程序 窗口_换坐标_窗口_屏幕, 整数型, , ClientToScreen，把窗口坐标转换为屏幕坐标
.参数 hwnd, 整数型, , 指定的窗口句柄
.参数 x, 整数型, 参考, 窗口X坐标
.参数 y, 整数型, 参考, 窗口Y坐标



.子程序 窗口_换坐标_屏幕_窗口, 整数型, , ScreenToClient，把屏幕坐标转换为窗口坐标
.参数 hwnd, 整数型, , 指定的窗口句柄
.参数 x, 整数型, 参考, 窗口X坐标
.参数 y, 整数型, 参考, 窗口Y坐标



.子程序 识字_行间距, 整数型, , SetMinRowGap，高级用户使用,在识别前,如果待识别区域有多行文字,可以设定行间距,默认的行间距是1,如果根据情况设定,可以提高识别精度。一般不用设定
.参数 row_gap, 整数型, , 最小行间距



.子程序 识字_列间距, 整数型, , SetMinColGap，高级用户使用,在识别前,如果待识别区域有多行文字,可以设定列间距,默认的列间距是1,如果根据情况设定,可以提高识别精度。一般不用设定
.参数 col_gap, 整数型, , 最小列间距



.子程序 找色, 整数型, , FindColor,查找指定区域内的颜色,颜色格式"RRGGBB-DRDGDB",注意,和按键的颜色格式相反
.参数 x1, 整数型, , 区域的左上X坐标
.参数 y1, 整数型, , 区域的左上Y坐标
.参数 x2, 整数型, , 区域的右上X坐标
.参数 y2, 整数型, , 区域的右下Y坐标
.参数 color, 文本型, , 颜色 格式为"RRGGBB-DRDGDB",比如"123456-000000|aabbcc-202020"
.参数 sim, 双精度小数型, , 相似度,取值范围0.1-1.0
.参数 dir, 整数型, , 查找方向 0: 从左到右,从上到下 1: 从左到右,从下到上 2: 从右到左,从上到下 3: 从右到左,从下到上  4：从中心往外查找  5: 从上到下,从左到右  6: 从上到下,从右到左 7: 从下到上,从左到右 8: 从下到上,从右到左
.参数 x, 整数型, 参考, 返回X坐标
.参数 y, 整数型, 参考, 返回Y坐标



.子程序 找色EX, 文本型, , FindColorEx，查找指定区域内的所有颜色,颜色格式"RRGGBB-DRDGDB",注意,和按键的颜色格式相反
.参数 x1, 整数型, , 区域的左上X坐标
.参数 y1, 整数型, , 区域的左上Y坐标
.参数 x2, 整数型, , 区域的右下X坐标
.参数 y2, 整数型, , 区域的右下Y坐标
.参数 color, 文本型, , 颜色 格式为"RRGGBB-DRDGDB" 比如"aabbcc-000000|123456-202020"
.参数 sim, 双精度小数型, , 相似度,取值范围0.1-1.0
.参数 dir, 整数型, , 查找方向 0: 从左到右,从上到下  1: 从左到右,从下到上 2: 从右到左,从上到下 3: 从右到左,从下到上 5: 从上到下,从左到右 6: 从上到下,从右到左 7: 从下到上,从左到右 8: 从下到上,从右到左



.子程序 识字_行高, 整数型, , SetWordLineHeight，高级用户使用,在识别词组前,可设定文字的平均行高,默认的词组行高是10
.参数 line_height, 整数型, , 行高



.子程序 识字_词组间隔, 整数型, , SetWordGap，高级用户使用,在识别词组前,可设定词组间的间隔,默认的词组间隔是5
.参数 word_gap, 整数型, , 单词间距



.子程序 文字_行距, 整数型, , SetRowGapNoDict，高级用户使用,在不使用字库进行词组识别前,可设定文字的行距,默认行距是1
.参数 row_gap, 整数型, , 文字行距



.子程序 文字_列距, 整数型, , SetColGapNoDict，高级用户使用,在不使用字库进行词组识别前,可设定文字的列距,默认列距是1
.参数 col_gap, 整数型, , 文字列距



.子程序 文字_行高, 整数型, , SetWordLineHeightNoDict，高级用户使用,在不使用字库进行词组识别前,可设定文字的平均行高,默认的词组行高是10
.参数 line_height, 整数型, , 行高



.子程序 文字_词组间隔, 整数型, , SetWordGapNoDict高级用户使用,在不使用字库进行词组识别前,可设定词组间的间隔,默认的词组间隔是5
.参数 word_gap, 整数型, , 单词间距



.子程序 识字_识词组数量, 整数型, , GetWordResultCount在使用GetWords进行词组识别以后,可以用此接口进行识别词组数量的计算
.参数 str, 文本型, , GetWords接口调用以后的返回值



.子程序 识字_识词组坐标, 整数型, , GetWordResultPos在使用GetWords进行词组识别以后,可以用此接口进行识别各个词组的坐标
.参数 str, 文本型, , GetWords的返回值
.参数 index, 整数型, , 表示第几个词组
.参数 x, 整数型, 参考, 返回的X坐标
.参数 y, 整数型, 参考, 返回的Y坐标



.子程序 识字_识词组内容, 文本型, , GetWordResultStr在使用GetWords进行词组识别以后,可以用此接口进行识别各个词组的内容
.参数 str, 文本型, , GetWords的返回值
.参数 index, 整数型, , 表示第几个词组



.子程序 识字_识词组, 文本型, , GetWords根据指定的范围,以及设定好的词组识别参数。识别这个范围内所有满足条件的词组. 比较适合用在未知文字的情况下,进行不定识别.
.参数 x1, 整数型, , 左上角X坐标
.参数 y1, 整数型, , 左上角Y坐标
.参数 x2, 整数型, , 右下角X坐标
.参数 y2, 整数型, , 右下角Y坐标
.参数 color, 文本型, , 颜色格式串，示例：“ffffff-000000”
.参数 sim, 双精度小数型, , 相似度 0.1-1.0



.子程序 识字_识词组NoDict, 文本型, , GetWordsNoDict根据指定的范围,以及设定好的词组识别参数,识别这个范围内所有满足条件的词组. 这个识别函数不会用到字库。只是识别大概形状的位置 
.参数 x1, 整数型, , 左上角X坐标
.参数 y1, 整数型, , 左上角Y坐标
.参数 x2, 整数型, , 右下角X坐标
.参数 y2, 整数型, , 右下角Y坐标
.参数 color, 文本型, , 颜色格式串，示例：“ffffff-000000”



.子程序 错误提示开关, 整数型, , SetShowErrorMsg设置是否弹出错误信息,默认是打开
.参数 show, 整数型, ,  0表示不打开,1表示打开



.子程序 窗口_取窗口坐标, 整数型, , GetClientSize获取窗口客户区域的宽度和高度
.参数 hwnd, 整数型, , 指定的窗口句柄
.参数 width, 整数型, 参考, 宽度
.参数 height, 整数型, 参考, 高度



.子程序 窗口_移动, 整数型, , MoveWindow移动指定窗口到指定位置
.参数 hwnd, 整数型, , 指定的窗口句柄
.参数 x, 整数型, , X坐标
.参数 y, 整数型, , Y坐标



.子程序 颜色_取HSV, 文本型, , GetColorHSV获取(x,y)的HSV颜色,颜色返回格式"H.S.V"
.参数 x, 整数型, , X坐标
.参数 y, 整数型, , Y坐标



.子程序 颜色_取RGB均值, 文本型, , GetAveRGB获取范围(x1,y1,x2,y2)颜色的均值,返回格式"RRGGBB"
.参数 x1, 整数型, , 左上角X
.参数 y1, 整数型, , 左上角Y
.参数 x2, 整数型, , 右下角X
.参数 y2, 整数型, , 右下角Y



.子程序 颜色_取HSV均值, 文本型, , GetAveHSV获取范围(x1,y1,x2,y2)颜色的均值,返回格式"H.S.V"
.参数 x1, 整数型, , 左上角X
.参数 y1, 整数型, , 左上角Y
.参数 x2, 整数型, , 右下角X
.参数 y2, 整数型, , 右下角Y



.子程序 窗口_取顶层句柄, 整数型, , GetForegroundWindow获取顶层活动窗口,可以获取到按键自带插件无法获取到的句柄


.子程序 窗口_取顶层焦点句柄, 整数型, , GetForegroundFocus获取顶层活动窗口中具有输入焦点的窗口句柄


.子程序 窗口_取鼠标指向句柄, 整数型, , GetMousePointWindow获取鼠标指向的窗口句柄,可以获取到按键自带的插件无法获取到的句柄


.子程序 窗口_取给定坐标句柄, 整数型, , GetPointWindow获取给定坐标的窗口句柄,可以获取到按键自带的插件无法获取到的句柄
.参数 x, 整数型, , 屏幕X坐标
.参数 y, 整数型, , 屏幕Y坐标



.子程序 窗口_枚举句柄, 文本型, , EnumWindow根据指定条件,枚举系统中符合条件的窗口,可以枚举到按键自带的无法枚举到的窗口
.参数 parent, 整数型, , 获得的窗口句柄是该窗口的子窗口的窗口句柄,取0时为获得桌面句柄
.参数 title, 文本型, , 窗口标题
.参数 class_name, 文本型, , 窗口类名
.参数 filter, 整数型, , 1 : 匹配窗口标题,参数title有效 2 : 匹配窗口类名,参数class_name有效 4 : 只匹配指定父窗口的第一层孩子窗口 8 : 匹配所有者窗口为0的窗口,即顶级窗口 16 : 匹配可见的窗口 32 : 匹配出的窗口按照窗口打开顺序依次排列 <收费功能>



.子程序 窗口_取属性, 整数型, , GetWindowState获取指定窗口的一些属性
.参数 hwnd, 整数型, , 指定的窗口句柄
.参数 flag, 整数型, , 0 : 判断窗口是否存在 1 : 判断窗口是否处于激活 2 : 判断窗口是否可见 3 : 判断窗口是否最小化 4 : 判断窗口是否最大化 5 : 判断窗口是否置顶



.子程序 窗口_取子句柄, 整数型, , GetWindow获取给定窗口相关的窗口句柄
.参数 hwnd, 整数型, , 窗口句柄
.参数 flag, 整数型, , 0 : 获取父窗口 1 : 获取第一个儿子窗口 2 : 获取First 窗口 3 : 获取Last窗口 4 : 获取下一个窗口 5 : 获取上一个窗口 6 : 获取拥有者窗口 7 : 获取顶层窗口



.子程序 窗口_取特殊句柄, 整数型, , GetSpecialWindow获取特殊窗口
.参数 flag, 整数型, , 0 : 获取桌面窗口 1 : 获取任务栏窗口



.子程序 窗口_置标题, 整数型, , SetWindowText设置窗口的标题
.参数 hwnd, 整数型, , 指定的窗口句柄
.参数 text, 文本型, , 标题



.子程序 窗口_置大小, 整数型, , SetWindowSize设置窗口的大小
.参数 hwnd, 整数型, , 指定的窗口句柄
.参数 width, 整数型, , 宽度
.参数 height, 整数型, , 高度



.子程序 窗口_取屏幕位置, 整数型, , GetWindowRect获取窗口在屏幕上的位置
.参数 hwnd, 整数型, , 指定的窗口句柄
.参数 x1, 整数型, 参考, 返回窗口左上角X坐标
.参数 y1, 整数型, 参考, 返回窗口左上角Y坐标
.参数 x2, 整数型, 参考, 返回窗口右下角X坐标
.参数 y2, 整数型, 参考, 返回窗口右下角Y坐标



.子程序 窗口_取标题, 文本型, , GetWindowTitle获取窗口的标题
.参数 hwnd, 整数型, , 指定的窗口句柄



.子程序 窗口_取类名, 文本型, , GetWindowClass获取窗口的类名
.参数 hwnd, 整数型, , 指定的窗口句柄



.子程序 窗口_置状态, 整数型, , SetWindowState设置窗口的状态
.参数 hwnd, 整数型, , 指定的窗口句柄
.参数 flag, 整数型, , 0 : 关闭指定窗口 1 : 激活指定窗口 2 : 最小化指定窗口,但不激活 3 : 最小化指定窗口,并释放内存,但同时也会激活窗口.4 : 最大化指定窗口,同时激活窗口.5 : 恢复指定窗口 ,但不激活 6 : 隐藏指定窗口 7 : 显示指定窗口 8 : 置顶指定窗口 9 : 取消置顶指定窗口 10 : 禁止指定窗口 11 : 取消禁止指定窗口 12 : 恢复并激活指定窗口 13 : 强制结束窗口所在进程.



.子程序 信息_创建矩形窗口, 整数型, , CreateFoobarRect创建一个矩形窗口
.参数 hwnd, 整数型, , 指定的窗口句柄,如果此值为0,那么就在桌面创建此窗口
.参数 x, 整数型, , 左上角X坐标(相对于hwnd客户区坐标)
.参数 y, 整数型, , 左上角Y坐标(相对于hwnd客户区坐标)
.参数 w, 整数型, , 矩形区域的宽度
.参数 h, 整数型, , 矩形区域的高度



.子程序 信息_创建圆角矩形窗口, 整数型, , CreateFoobarRoundRect创建一个圆角矩形窗口
.参数 hwnd, 整数型, , 指定的窗口句柄,如果此值为0,那么就在桌面创建此窗口
.参数 x, 整数型, , 左上角X坐标(相对于hwnd客户区坐标)
.参数 y, 整数型, , 左上角Y坐标(相对于hwnd客户区坐标)
.参数 w, 整数型, , 矩形区域的宽度
.参数 h, 整数型, , 矩形区域的高度
.参数 rw, 整数型, , 圆角的宽度
.参数 rh, 整数型, , 圆角的高度



.子程序 信息_创建椭圆窗口, 整数型, , CreateFoobarEllipse创建一个椭圆窗口
.参数 hwnd, 整数型, , 指定的窗口句柄,如果此值为0,那么就在桌面创建此窗口
.参数 x, 整数型, , 左上角X坐标(相对于hwnd客户区坐标)
.参数 y, 整数型, , 左上角Y坐标(相对于hwnd客户区坐标)
.参数 w, 整数型, , 矩形区域的宽度
.参数 h, 整数型, , 矩形区域的高度



.子程序 信息_位图创建自定义窗口, 整数型, , CreateFoobarCustom根据指定的位图创建一个自定义形状的窗口
.参数 hwnd, 整数型, , 指定的窗口句柄,如果此值为0,那么就在桌面创建此窗口
.参数 x, 整数型, , 左上角X坐标(相对于hwnd客户区坐标)
.参数 y, 整数型, , 左上角Y坐标(相对于hwnd客户区坐标)
.参数 pic, 文本型, , 位图名字
.参数 trans_color, 文本型, , 透明色(RRGGBB)
.参数 sim, 双精度小数型, , 透明色的相似值 0.1-1.0



.子程序 信息_填充矩形, 整数型, , FoobarFillRect在指定的Foobar窗口内部填充矩形
.参数 hwnd, 整数型, , 指定的Foobar窗口,注意,此句柄必须是通过CreateFoobarxxxx系列函数创建出来的
.参数 x1, 整数型, , 左上角X坐标(相对于hwnd客户区坐标)
.参数 y1, 整数型, , 左上角Y坐标(相对于hwnd客户区坐标)
.参数 x2, 整数型, , 右下角X坐标(相对于hwnd客户区坐标)
.参数 y2, 整数型, , 右下角Y坐标(相对于hwnd客户区坐标)
.参数 color, 文本型, , 填充的颜色值



.子程序 信息_绘制文字, 整数型, , FoobarDrawText在指定的Foobar窗口绘制文字
.参数 hwnd, 整数型, , 指定的Foobar窗口,注意,此句柄必须是通过CreateFoobarxxxx系列函数创建出来的
.参数 x, 整数型, , 左上角X坐标(相对于hwnd客户区坐标)
.参数 y, 整数型, , 左上角Y坐标(相对于hwnd客户区坐标)
.参数 w, 整数型, , 矩形区域的宽度
.参数 h, 整数型, , 矩形区域的高度
.参数 text, 文本型, , 字符串
.参数 color, 文本型, , 文字颜色值
.参数 align, 整数型, , 1 : 左对齐 2 : 中间对齐 4 : 右对齐



.子程序 信息_绘制图像, 整数型, , FoobarDrawPic在指定的Foobar窗口绘制图像 此图片不能是加密的图片
.参数 hwnd, 整数型, , 指定的Foobar窗口,注意,此句柄必须是通过CreateFoobarxxxx系列函数创建出来的
.参数 x, 整数型, , 左上角X坐标(相对于hwnd客户区坐标)
.参数 y, 整数型, , 左上角Y坐标(相对于hwnd客户区坐标)
.参数 pic, 文本型, , 图像文件名
.参数 trans_color, 文本型, , 图像透明色



.子程序 信息_刷新窗口, 整数型, , FoobarUpdate刷新指定的Foobar窗口
.参数 hwnd, 整数型, , 指定的Foobar窗口,注意,此句柄必须是通过CreateFoobarxxxx系列函数创建出来的



.子程序 信息_锁定窗口, 整数型, , FoobarLock锁定指定的Foobar窗口,不能通过鼠标来移动
.参数 hwnd, 整数型, , 指定的Foobar窗口句柄,此句柄必须是通过CreateFoobarxxx创建而来



.子程序 信息_解锁窗口, 整数型, , FoobarUnlock解锁指定的Foobar窗口,可以通过鼠标来移动
.参数 hwnd, 整数型, , 指定的Foobar窗口句柄,此句柄必须是通过CreateFoobarxxx创建而来



.子程序 信息_置字体, 整数型, , FoobarSetFont设置指定Foobar窗口的字体
.参数 hwnd, 整数型, , 指定的Foobar窗口句柄,此句柄必须是通过CreateFoobarxxx创建而来
.参数 font_name, 文本型, , 系统字体名,注意,必须保证系统中有此字体
.参数 size, 整数型, , 字体大小
.参数 flag, 整数型, , 0 : 正常字体 1 : 粗体 2 : 斜体 4 : 下划线 | 文字可以是以上的组合 比如粗斜体就是1+2,斜体带下划线就是:2+4等.



.子程序 信息_置文本范围, 整数型, , FoobarTextRect设置指定Foobar窗口的滚动文本框范围,默认的文本框范围是窗口区域
.参数 hwnd, 整数型, , 指定的Foobar窗口句柄,此句柄必须是通过CreateFoobarxxx创建而来
.参数 x, 整数型, , x坐标
.参数 y, 整数型, , y坐标
.参数 w, 整数型, , 宽度
.参数 h, 整数型, , 高度



.子程序 信息_输出滚动文字, 整数型, , FoobarPrintText向指定的Foobar窗口区域内输出滚动文字
.参数 hwnd, 整数型, , 指定的Foobar窗口句柄,此句柄必须是通过CreateFoobarxxx创建而来
.参数 text, 文本型, , 文本内容
.参数 color, 文本型, , 文本颜色



.子程序 信息_清除滚动文本, 整数型, , FoobarClearText清除指定的Foobar滚动文本区
.参数 hwnd, 整数型, , 指定的Foobar窗口句柄,此句柄必须是通过CreateFoobarxxx创建而来



.子程序 信息_置行间距, 整数型, , FoobarTextLineGap设置滚动文本区的文字行间距,默认是3
.参数 hwnd, 整数型, , 指定的Foobar窗口句柄,此句柄必须是通过CreateFoobarxxx创建而来
.参数 gap, 整数型, , 文本行间距



.子程序 播放音乐, 整数型, , Play播放指定的MP3或者wav文件
.参数 file, 文本型, ,  指定的音乐文件，可以采用文件名或者绝对路径的形式.



.子程序 答题_截图, 整数型, , FaqCapture截取指定范围内的动画或者图像,并返回此句柄
.参数 x1, 整数型, , 左上角X坐标
.参数 y1, 整数型, , 左上角Y坐标
.参数 x2, 整数型, , 右下角X坐标
.参数 y2, 整数型, , 右下角Y坐标
.参数 quality, 整数型, , 图像或动画品质,或者叫压缩率,此值越大图像质量越好 取值范围（1-100）
.参数 delay, 整数型, , 截取动画时用,表示相隔两帧间的时间间隔,单位毫秒 （如果只是截取静态图像,这个参数必须是0）
.参数 time, 整数型, , 表示总共截取多久的动画,单位毫秒 （如果只是截取静态图像,这个参数必须是0）



.子程序 答题_同步发题, 文本型, , FaqSend发送指定的图像句柄到指定的服务器,并等待返回结果(同步等待)
.参数 server, 文本型, , 服务器地址以及端口,格式为(ip:port),例如 "192.168.1.100:12345" 多个地址可以用"|"符号连接。比如"192.168.1.100:12345|192.168.1.101:12345"。
.参数 handle, 整数型, , 由FaqCapture获取到的句柄
.参数 request_type, 整数型, , 0 : 要求获取坐标 1 : 要求获取选项,比如(ABCDE) 2 : 要求获取文字答案3:要求获取两个坐标.此功能要求答题器必须是v15之后的版本. <收费功能>
.参数 time_out, 整数型, , 表示等待多久,单位是毫秒



.子程序 报警, 整数型, , Beep蜂鸣器
.参数 fre, 整数型, , 频率
.参数 delay, 整数型, , 时长(ms)



.子程序 信息_关闭窗口, 整数型, , FoobarClose关闭一个Foobar,注意,必须调用此函数来关闭窗口,用SetWindowState也可以关闭,但会造成内存泄漏
.参数 hwnd, 整数型, , 指定的Foobar窗口句柄



.子程序 答题_取大小, 整数型, , FaqGetSize获取句柄所对应的数据包的大小,单位是字节
.参数 handle, 整数型, , 由FaqCapture返回的句柄



.子程序 加载图片, 整数型, , LoadPic预先加载指定的图片,这样在操作任何和图片相关的函数时,将省去了加载图片的时间。调用此函数后,没必要一定要调用FreePic,插件自己会自动释放
.参数 pic_name, 文本型, , 文件名比如"1.bmp|2.bmp|3.bmp" 等,可以使用通配符,比如 "*.bmp" 这个对应了所有的bmp文件 |"a?c*.bmp" 这个代表了所有第一个字母是a 第三个字母是c 第二个字母任意的所有bmp文件|"abc???.bmp|1.bmp|aa??.bmp" 可以这样任意组合



.子程序 释放图片, 整数型, , FreePic释放指定的图片,此函数不必要调用,除非你想节省内存
.参数 pic_name, 文本型, , 文件名比如"1.bmp|2.bmp|3.bmp" 等,可以使用通配符,比如 "*.bmp" 这个对应了所有的bmp文件 |"a?c*.bmp" 这个代表了所有第一个字母是a 第三个字母是c 第二个字母任意的所有bmp文件|"abc???.bmp|1.bmp|aa??.bmp" 可以这样任意组合



.子程序 截图_二进制, 整数型, , GetScreenData获取指定区域的图像,用二进制数据的方式返回,（不适合按键使用）方便二次开发
.参数 x1, 整数型, , 区域的左上X坐标
.参数 y1, 整数型, , 区域的左上Y坐标
.参数 x2, 整数型, , 区域的右下X坐标
.参数 y2, 整数型, , 区域的右下Y坐标



.子程序 滚轮上滚, 整数型, , WheelUp滚轮向上滚


.子程序 滚轮下滚, 整数型, , WheelDown滚轮向下滚


.子程序 鼠标_置间隔, 整数型, , SetMouseDelay设置鼠标单击或者双击时,鼠标按下和弹起的时间间隔。高级用户使用。某些窗口可能需要调整这个参数才可以正常点击。
.参数 type, 文本型, , 鼠标类型,取值有以下 "normal" : 对应normal鼠标 默认内部延时为 30ms |"windows": 对应windows 鼠标 默认内部延时为 10ms |"windows": 对应windows 鼠标 默认内部延时为 10ms
.参数 delay, 整数型, , 延时,单位是毫秒



.子程序 键盘_置间隔, 整数型, , SetKeypadDelay设置按键时,键盘按下和弹起的时间间隔。高级用户使用。某些窗口可能需要调整这个参数才可以正常按键。
.参数 type, 文本型, , 键盘类型,取值有以下 | "normal" : 对应normal键盘  默认内部延时为30ms | "windows": 对应windows 键盘 默认内部延时为10ms | "dx" :对应dx 键盘 默认内部延时为50ms
.参数 delay, 整数型, , 延时,单位是毫秒



.子程序 窗口_发送文本, 整数型, , SendString向指定窗口发送文本数据
.参数 hwnd, 整数型, , 指定的窗口句柄
.参数 str, 文本型, , 发送的文本数据



.子程序 取全局路径, 文本型, , GetPath获取全局路径.(可用于调试)


.子程序 字库_置文件, 整数型, , SetDict设置字库文件
.参数 index, 整数型, , 字库的序号,取值为0-9,目前最多支持10个字库
.参数 dict_name, 文本型, , 字库文件名



.子程序 找图, 整数型, , FindPic查找指定区域内的图片,位图必须是24位色格式,支持透明色,当图像上下左右4个顶点的颜色一样时,则这个颜色将作为透明色处理.
.参数 x1, 整数型, , 区域的左上X坐标
.参数 y1, 整数型, , 区域的左上Y坐标
.参数 x2, 整数型, , 区域的右下X坐标
.参数 y2, 整数型, , 区域的右下Y坐标
.参数 pic_name, 文本型, , 图片名,可以是多个图片,比如"test.bmp|test2.bmp|test3.bmp"
.参数 delta_color, 文本型, , 颜色色偏比如"203040" 表示RGB的色偏分别是20 30 40 (这里是16进制表示)
.参数 sim, 双精度小数型, , 相似度,取值范围0.1-1.0
.参数 dir, 整数型, , 查找方向 0: 从左到右,从上到下 1: 从左到右,从下到上 2: 从右到左,从上到下 3: 从右到左, 从下到上
.参数 x, 整数型, 参考, 返回图片左上角的X坐标
.参数 y, 整数型, 参考, 返回图片左上角的Y坐标



.子程序 找图Ex, 文本型, , FindPicEx查找指定区域内的图片,位图必须是24位色格式,支持透明色,当图像上下左右4个顶点的颜色一样时,则这个颜色将作为透明色处理
.参数 x1, 整数型, , 区域的左上X坐标
.参数 y1, 整数型, , 区域的左上Y坐标
.参数 x2, 整数型, , 区域的右下X坐标
.参数 y2, 整数型, , 区域的右下Y坐标
.参数 pic_name, 文本型, , 图片名,可以是多个图片,比如"test.bmp|test2.bmp|test3.bmp"
.参数 delta_color, 文本型, , 颜色色偏比如"203040" 表示RGB的色偏分别是20 30 40 (这里是16进制表示)
.参数 sim, 双精度小数型, , 相似度,取值范围0.1-1.0
.参数 dir, 整数型, , 查找方向 0: 从左到右,从上到下 1: 从左到右,从下到上 2: 从右到左,从上到下 3: 从右到左, 从下到上



.子程序 窗口_置客户区域大小, 整数型, , SetClientSize设置窗口客户区域的宽度和高度
.参数 hwnd, 整数型, , 指定的窗口句柄
.参数 width, 整数型, , 宽度
.参数 height, 整数型, , 高度



.子程序 内存_读整数, 整数型, , ReadInt读取指定地址的整数数值，类型可以是8位，16位 或者 32位
.参数 hwnd, 整数型, , 指定搜索的窗口句柄或者进程ID.  默认是窗口句柄. 如果要指定为进程ID,需要调用SetMemoryHwndAsProcessId
.参数 addr, 文本型, , 用字符串来描述地址，类似于CE的地址描述，数值必须是16进制,里面可以用[ ] + -这些符号来描述一个地址。+表示地址加，-表示地址减 模块名必须用<>符号来圈起来
.参数 type, 整数型, , 0 : 32位 1 : 16 位 2 : 8位



.子程序 内存_读单精度浮点数, 小数型, , ReadFloat读取指定地址的单精度浮点数
.参数 hwnd, 整数型, , 指定搜索的窗口句柄或者进程ID.  默认是窗口句柄. 如果要指定为进程ID,需要调用SetMemoryHwndAsProcessId.
.参数 addr, 文本型, , 用字符串来描述地址，类似于CE的地址描述，数值必须是16进制,里面可以用[ ] + -这些符号来描述一个地址。+表示地址加，-表示地址减 模块名必须用<>符号来圈起来



.子程序 内存_读双精度浮点数, 双精度小数型, , ReadDouble读取指定地址的双精度浮点数
.参数 hwnd, 整数型, , 指定搜索的窗口句柄或者进程ID.  默认是窗口句柄. 如果要指定为进程ID,需要调用SetMemoryHwndAsProcessId.
.参数 addr, 文本型, , 用字符串来描述地址，类似于CE的地址描述，数值必须是16进制,里面可以用[ ] + -这些符号来描述一个地址。+表示地址加，-表示地址减 模块名必须用<>符号来圈起来



.子程序 内存_搜索整数, 文本型, , FindInt搜索指定的整数,默认步长是1.如果要定制步长，请用FindIntEx
.参数 hwnd, 整数型, , 指定搜索的窗口句柄或者进程ID.  默认是窗口句柄. 如果要指定为进程ID,需要调用SetMemoryHwndAsProcessId.
.参数 addr_range, 文本型, , 指定搜索的地址集合，字符串类型，这个地方可以是上次FindXXX的返回地址集合,可以进行二次搜索.(类似CE的再次扫描)
.参数 int_value_min, 整数型, , 搜索的整数数值最小值
.参数 int_value_max, 整数型, , 搜索的整数数值最大值 最终搜索的数值大与等于int_value_min,并且小于等于int_value_max
.参数 type, 整数型, , 搜索的整数类型,取值如下  0 : 32位 1 : 16 位  2 : 8位



.子程序 内存_搜索单精度浮点数, 文本型, , FindFloat搜索指定的单精度浮点数,默认步长是1.如果要定制步长，请用FindFloatEx
.参数 hwnd, 整数型, , 指定搜索的窗口句柄或者进程ID.  默认是窗口句柄. 如果要指定为进程ID,需要调用SetMemoryHwndAsProcessId.
.参数 addr_range, 文本型, , 指定搜索的地址集合，字符串类型，这个地方可以是上次FindXXX的返回地址集合,可以进行二次搜索.(类似CE的再次扫描)
.参数 float_value_min, 小数型, , 单精度浮点数: 搜索的单精度数值最小值
.参数 float_value_max, 小数型, , 单精度浮点数: 搜索的单精度数值最大值  最终搜索的数值大与等于float_value_min,并且小于等于float_value_max



.子程序 内存_搜索双精度浮点数, 文本型, , FindDouble搜索指定的双精度浮点数,默认步长是1.如果要定制步长，请用FindDoubleEx
.参数 hwnd, 整数型, , 指定搜索的窗口句柄或者进程ID.  默认是窗口句柄. 如果要指定为进程ID,需要调用SetMemoryHwndAsProcessId.
.参数 addr_range, 文本型, , 指定搜索的地址集合，字符串类型，这个地方可以是上次FindXXX的返回地址集合,可以进行二次搜索.(类似CE的再次扫描)
.参数 double_value_min, 双精度小数型, , 双精度浮点数: 搜索的双精度数值最小值
.参数 double_value_max, 双精度小数型, , 双精度浮点数: 搜索的双精度数值最大值  最终搜索的数值大与等于double_value_min,并且小于等于double_value_max



.子程序 内存_搜索字符串, 文本型, , FindString搜索指定的字符串,默认步长是1.如果要定制步长，请用FindStringEx
.参数 hwnd, 整数型, , 指定搜索的窗口句柄或者进程ID.  默认是窗口句柄. 如果要指定为进程ID,需要调用SetMemoryHwndAsProcessId.
.参数 addr_range, 文本型, , 指定搜索的地址集合，字符串类型，这个地方可以是上次FindXXX的返回地址集合,可以进行二次搜索.(类似CE的再次扫描)
.参数 string_value, 文本型, , 搜索的字符串
.参数 type, 整数型, , 搜索的字符串类型,取值如下  0 : Ascii字符串  1 : Unicode字符串



.子程序 内存_取窗口模块基址, 整数型, , GetModuleBaseAddr根据指定的窗口句柄，来获取对应窗口句柄进程下的指定模块的基址
.参数 hwnd, 整数型, , 指定搜索的窗口句柄或者进程ID.  默认是窗口句柄. 如果要指定为进程ID,需要调用SetMemoryHwndAsProcessId.
.参数 module_name, 文本型, , 模块名



.子程序 鼠标_范围移动, 整数型, , MoveToEx把鼠标移动到目的范围内的任意一点
.参数 x, 整数型, , X坐标
.参数 y, 整数型, , Y坐标
.参数 w, 整数型, , 宽度(从x计算起)
.参数 h, 整数型, , 高度(从y计算起)



.子程序 取文件集合, 文本型, , MatchPicName根据通配符获取文件集合. 方便用于FindPic和FindPicEx
.参数 pic_name, 文本型, , 文件名比如"1.bmp|2.bmp|3.bmp" 等,可以使用通配符,比如 "*.bmp" 这个对应了所有的bmp文件 | "a?c*.bmp" 这个代表了所有第一个字母是a 第三个字母是c 第二个字母任意的所有bmp文件 | "abc???.bmp|1.bmp|aa??.bmp" 可以这样任意组合



.子程序 字库_添加信息, 整数型, , AddDict给指定的字库中添加一条字库信息
.参数 index, 整数型, , 字库的序号,取值为0-9,目前最多支持10个字库
.参数 dict_info, 文本型, , 字库描述串，具体参考大漠综合工具中的字符定义



.子程序 内存_写整数, 整数型, , WriteInt对指定地址写入整数数值，类型可以是8位，16位 或者 32位
.参数 hwnd, 整数型, , 指定搜索的窗口句柄或者进程ID.  默认是窗口句柄. 如果要指定为进程ID,需要调用SetMemoryHwndAsProcessId.
.参数 addr, 文本型, , 用字符串来描述地址，类似于CE的地址描述，数值必须是16进制,里面可以用[ ] + -这些符号来描述一个地址。+表示地址加，-表示地址减， 模块名必须用<>符号来圈起来
.参数 type, 整数型, , 整数类型,取值如下  0 : 32位  1 : 16 位  2 : 8位
.参数 v, 整数型, , 整形数值



.子程序 内存_写单精度浮点数, 整数型, , WriteFloat对指定地址写入单精度浮点数
.参数 hwnd, 整数型, , 指定搜索的窗口句柄或者进程ID.  默认是窗口句柄. 如果要指定为进程ID,需要调用SetMemoryHwndAsProcessId.
.参数 addr, 文本型, , 用字符串来描述地址，类似于CE的地址描述，数值必须是16进制,里面可以用[ ] + -这些符号来描述一个地址。+表示地址加，-表示地址减 模块名必须用<>符号来圈起来
.参数 v, 小数型, , 单精度浮点数



.子程序 内存_写双精度浮点数, 整数型, , WriteDouble对指定地址写入双精度浮点数
.参数 hwnd, 整数型, , 指定搜索的窗口句柄或者进程ID.  默认是窗口句柄. 如果要指定为进程ID,需要调用SetMemoryHwndAsProcessId.
.参数 addr, 文本型, , 用字符串来描述地址，类似于CE的地址描述，数值必须是16进制,里面可以用[ ] + -这些符号来描述一个地址。+表示地址加，-表示地址减  模块名必须用<>符号来圈起来
.参数 v, 双精度小数型, , 双精度浮点数



.子程序 内存_写字符串, 整数型, , WriteString对指定地址写入字符串，可以是Ascii字符串或者是Unicode字符串
.参数 hwnd, 整数型, , 指定搜索的窗口句柄或者进程ID.  默认是窗口句柄. 如果要指定为进程ID,需要调用SetMemoryHwndAsProcessId.
.参数 addr, 文本型, , 用字符串来描述地址，类似于CE的地址描述，数值必须是16进制,里面可以用[ ] + -这些符号来描述一个地址。+表示地址加，-表示地址减  模块名必须用<>符号来圈起来
.参数 type, 整数型, , 字符串类型,取值如下 0 : Ascii字符串  1 : Unicode字符串
.参数 v, 文本型, , 字符串



.子程序 汇编_添加MASM指令, 整数型, , AsmAdd添加指定的MASM汇编指令
.参数 asm_ins, 文本型, , MASM汇编指令,大小写均可以  比如 "mov eax,1"



.子程序 汇编_清除指令, 整数型, , AsmClear清除汇编指令缓冲区 用AsmAdd添加到缓冲的指令全部清除


.子程序 汇编_执行指令, 整数型, , AsmCall执行用AsmAdd加到缓冲中的指令. 多线程下是收费功能, 免费版本多线程会异常
.参数 hwnd, 整数型, , 窗口句柄
.参数 mode, 整数型, , 模式，取值如下  0 : 在本进程中进行执行，这时hwnd无效   1 : 对hwnd指定的进程内执行,注入模式为创建远程线程



.子程序 多点找色, 整数型, , FindMultiColor根据指定的多点查找颜色坐标
.参数 x1, 整数型, , 区域的左上X坐标
.参数 y1, 整数型, , 区域的左上Y坐标
.参数 x2, 整数型, , 区域的右下X坐标
.参数 y2, 整数型, , 区域的右下Y坐标
.参数 first_color, 文本型, , 颜色格式为"RRGGBB-DRDGDB",比如"123456-000000" 这里的含义和按键自带Color插件的意义相同，只不过我的可以支持偏色 所有的偏移色坐标都相对于此颜色
.参数 offset_color, 文本型, , 偏移颜色可以支持任意多个点 格式和按键自带的Color插件意义相同  格式为"x1|y1|RRGGBB-DRDGDB,……xn|yn|RRGGBB-DRDGDB" 比如"1|3|aabbcc,-5|-3|123456-000000"等任意组合都可以，支持偏色 还可以支持反色模式，比如"1|3|-aabbcc,-5|-3|-123456-000000","-"表示除了指定颜色之外的颜色.
.参数 sim, 双精度小数型, , 相似度,取值范围0.1-1.0
.参数 dir, 整数型, , 查找方向 0: 从左到右,从上到下 1: 从左到右,从下到上 2: 从右到左,从上到下 3: 从右到左, 从下到上
.参数 x, 整数型, 参考, 返回X坐标(坐标为first_color所在坐标)
.参数 y, 整数型, 参考, 返回Y坐标(坐标为first_color所在坐标)



.子程序 多点找色Ex, 文本型, , FindMultiColorEx根据指定的多点查找所有颜色坐标
.参数 x1, 整数型, , 区域的左上X坐标
.参数 y1, 整数型, , 区域的左上Y坐标
.参数 x2, 整数型, , 区域的右下X坐标
.参数 y2, 整数型, , 区域的右下Y坐标
.参数 first_color, 文本型, , 颜色格式为"RRGGBB-DRDGDB",比如"123456-000000" | 这里的含义和按键自带Color插件的意义相同，只不过我的可以支持偏色 所有的偏移色坐标都相对于此颜色
.参数 offset_color, 文本型, , 偏移颜色可以支持任意多个点 格式和按键自带的Color插件意义相同 格式为"x1|y1|RRGGBB-DRDGDB,……xn|yn|RRGGBB-DRDGDB" 比如"1|3|aabbcc,-5|-3|123456-000000"等任意组合都可以，支持偏色 还可以支持反色模式，比如"1|3|-aabbcc,-5|-3|-123456-000000","-"表示除了指定颜色之外的颜色
.参数 sim, 双精度小数型, , 相似度,取值范围0.1-1.0
.参数 dir, 整数型, , 查找方向 0: 从左到右,从上到下 1: 从左到右,从下到上 2: 从右到左,从上到下 3: 从右到左, 从下到上



.子程序 汇编_指令转化机器码, 文本型, , AsmCode把汇编缓冲区的指令转换为机器码 并用16进制字符串的形式输出
.参数 base_addr, 整数型, , 用AsmAdd添加到缓冲区的第一条指令所在的地址



.子程序 汇编_机器码转化指令, 文本型, , Assemble把指定的机器码转换为汇编语言输出
.参数 asm_code, 文本型, , 机器码，形式如 "aa bb cc"这样的16进制表示的字符串(空格无所谓)
.参数 base_addr, 整数型, , 指令所在的地址
.参数 is_upper, 整数型, , 表示转换的汇编语言是否以大写输出



.子程序 窗口_置透明度, 整数型, , SetWindowTransparent设置窗口的透明度
.参数 hwnd, 整数型, , 指定的窗口句柄
.参数 v, 整数型, , 透明度取值(0-255) 越小透明度越大 0为完全透明(不可见) 255为完全显示(不透明)



.子程序 内存_读二进制, 文本型, , ReadData读取指定地址的二进制数据
.参数 hwnd, 整数型, , 指定搜索的窗口句柄或者进程ID.  默认是窗口句柄. 如果要指定为进程ID,需要调用SetMemoryHwndAsProcessId.
.参数 addr, 文本型, , 用字符串来描述地址，类似于CE的地址描述，数值必须是16进制,里面可以用[ ] + -这些符号来描述一个地址。+表示地址加，-表示地址减  模块名必须用<>符号来圈起来
.参数 len, 整数型, , 二进制数据的长度



.子程序 内存_写二进制, 整数型, , WriteData对指定地址写入二进制数据
.参数 hwnd, 整数型, , 指定搜索的窗口句柄或者进程ID.  默认是窗口句柄. 如果要指定为进程ID,需要调用SetMemoryHwndAsProcessId.
.参数 addr, 文本型, , 用字符串来描述地址，类似于CE的地址描述，数值必须是16进制,里面可以用[ ] + -这些符号来描述一个地址。+表示地址加，-表示地址减  模块名必须用<>符号来圈起来
.参数 data, 文本型, , 二进制数据，以字符串形式描述，比如"12 34 56 78 90 ab cd"



.子程序 内存_搜索二进制, 文本型, , FindData搜索指定的二进制数据,默认步长是1.如果要定制步长，请用FindDataEx
.参数 hwnd, 整数型, , 指定搜索的窗口句柄或者进程ID.  默认是窗口句柄. 如果要指定为进程ID,需要调用SetMemoryHwndAsProcessId.
.参数 addr_range, 文本型, , 指定搜索的地址集合，字符串类型，这个地方可以是上次FindXXX的返回地址集合,可以进行二次搜索.(类似CE的再次扫描)
.参数 data, 文本型, , 要搜索的二进制数据 以字符串的形式描述比如"00 01 23 45 67 86 ab ce f1"等



.子程序 置图片密码, 整数型, , SetPicPwd设置图片密码，如果图片本身没有加密，那么此设置不影响不加密的图片，一样正常使用.
.参数 pwd, 文本型, , 图片密码



.子程序 找字E, 文本型, , FindStrE在屏幕范围(x1,y1,x2,y2)内,查找string(可以是任意个字符串的组合),并返回符合color_format的坐标位置,相似度sim同Ocr接口描述. (多色,差色查找类似于Ocr接口,不再重述)  易语言用不了FindStr可以用此接口来代替
.参数 x1, 整数型, , 区域的左上X坐标
.参数 y1, 整数型, , 区域的左上Y坐标
.参数 x2, 整数型, , 区域的右下X坐标
.参数 y2, 整数型, , 区域的右下Y坐标
.参数 str, 文本型, , 待查找的字符串, 可以是字符串组合，比如"长安|洛阳|大雁塔",中间用"|"来分割字符串
.参数 color, 文本型, , 颜色格式串, 可以包含换行分隔符,语法是","后加分割字符串. 具体可以查看下面的示例
.参数 sim, 双精度小数型, , 相似度,取值范围0.1-1.0



.子程序 找色E, 文本型, , FindColorE查找指定区域内的颜色,颜色格式"RRGGBB-DRDGDB",注意,和按键的颜色格式相反 易语言用不了FindColor可以用此接口来代替
.参数 x1, 整数型, , 区域的左上X坐标
.参数 y1, 整数型, , 区域的左上Y坐标
.参数 x2, 整数型, , 区域的右下X坐标
.参数 y2, 整数型, , 区域的右下Y坐标
.参数 color, 文本型, , 颜色 格式为"RRGGBB-DRDGDB",比如"123456-000000|aabbcc-202020"
.参数 sim, 双精度小数型, , 相似度,取值范围0.1-1.0
.参数 dir, 整数型, , 查找方向 0: 从左到右,从上到下 1: 从左到右,从下到上  2: 从右到左,从上到下  3: 从右到左,从下到上  4：从中心往外查找  5: 从上到下,从左到右  6: 从上到下,从右到左 7: 从下到上,从左到右 8: 从下到上,从右到左



.子程序 找图E, 文本型, , FindPicE查找指定区域内的图片,位图必须是24位色格式,支持透明色,当图像上下左右4个顶点的颜色一样时,则这个颜色将作为透明色处理 这个函数可以查找多个图片,只返回第一个找到的X Y坐标 | 易语言用不了FindPic可以用此接口来代替
.参数 x1, 整数型, , 区域的左上X坐标
.参数 y1, 整数型, , 区域的左上Y坐标
.参数 x2, 整数型, , 区域的右下X坐标
.参数 y2, 整数型, , 区域的右下Y坐标
.参数 pic_name, 文本型, , 图片名,可以是多个图片,比如"test.bmp|test2.bmp|test3.bmp"
.参数 delta_color, 文本型, , 颜色色偏比如"203040" 表示RGB的色偏分别是20 30 40 (这里是16进制表示)
.参数 sim, 双精度小数型, , 相似度,取值范围0.1-1.0
.参数 dir, 整数型, , 查找方向 0: 从左到右,从上到下 1: 从左到右,从下到上 2: 从右到左,从上到下 3: 从右到左, 从下到上



.子程序 多点找色E, 文本型, , FindMultiColorE根据指定的多点查找颜色坐标  易语言用不了FindMultiColor可以用此接口来代替
.参数 x1, 整数型, , 区域的左上X坐标
.参数 y1, 整数型, , 区域的左上Y坐标
.参数 x2, 整数型, , 区域的右下X坐标
.参数 y2, 整数型, , 区域的右下Y坐标
.参数 first_color, 文本型, , 颜色格式为"RRGGBB-DRDGDB",比如"123456-000000" 这里的含义和按键自带Color插件的意义相同，只不过我的可以支持偏色  所有的偏移色坐标都相对于此颜色
.参数 offset_color, 文本型, , 偏移颜色可以支持任意多个点 格式和按键自带的Color插件意义相同 格式为"x1|y1|RRGGBB-DRDGDB,……xn|yn|RRGGBB-DRDGDB" 比如"1|3|aabbcc,-5|-3|123456-000000"等任意组合都可以，支持偏色 还可以支持反色模式，比如"1|3|-aabbcc,-5|-3|-123456-000000","-"表示除了指定颜色之外的颜色
.参数 sim, 双精度小数型, , 相似度,取值范围0.1-1.0
.参数 dir, 整数型, , 查找方向 0: 从左到右,从上到下 1: 从左到右,从下到上 2: 从右到左,从上到下 3: 从右到左, 从下到上



.子程序 文字_精准识别, 整数型, , SetExactOcr高级用户使用,在使用文字识别功能前，设定是否开启精准识别.
.参数 exact_ocr, 整数型, , 0 表示关闭精准识别  1 开启精准识别



.子程序 内存_读字符串, 文本型, , ReadString读取指定地址的字符串，可以是GBK字符串或者是Unicode字符串.(必须事先知道内存区的字符串编码方式)
.参数 hwnd, 整数型, , 指定搜索的窗口句柄或者进程ID.  默认是窗口句柄. 如果要指定为进程ID,需要调用SetMemoryHwndAsProcessId.
.参数 addr, 文本型, , 用字符串来描述地址，类似于CE的地址描述，数值必须是16进制,里面可以用[ ] + -这些符号来描述一个地址。+表示地址加，-表示地址减  模块名必须用<>符号来圈起来
.参数 type, 整数型, , 字符串类型,取值如下 0 : GBK字符串 1 : Unicode字符串
.参数 len, 整数型, , 需要读取的字节数目



.子程序 信息_置滚动方向, 整数型, , FoobarTextPrintDir设置滚动文本区的文字输出方向,默认是0
.参数 hwnd, 整数型, , 指定的Foobar窗口句柄,此句柄必须是通过CreateFoobarxxx创建而来
.参数 dir, 整数型, , 0 表示向下输出 : 1 表示向上输出



.子程序 识字Ex, 文本型, , OcrEx识别屏幕范围(x1,y1,x2,y2)内符合color_format的字符串,并且相似度为sim,sim取值范围(0.1-1.0), 这个值越大越精确,越大速度越快,越小速度越慢,请斟酌使用!这个函数可以返回识别到的字符串，以及每个字符的坐标.
.参数 x1, 整数型, , 区域的左上X坐标
.参数 y1, 整数型, , 区域的左上Y坐标
.参数 x2, 整数型, , 区域的右下X坐标
.参数 y2, 整数型, , 区域的右下Y坐标
.参数 color, 文本型, , 颜色格式串
.参数 sim, 双精度小数型, , 相似度,取值范围0.1-1.0



.子程序 置图色方式, 整数型, , SetDisplayInput设定图色的获取方式，默认是显示器或者后台窗口(具体参考BindWindow)
.参数 mode, 文本型, , 图色输入模式取值有以下几种  1."screen" 这个是默认的模式，表示使用显示器或者后台窗口  2."pic:file" 指定输入模式为指定的图片,如果使用了这个模式，则所有和图色相关的函数



.子程序 取系统已运行毫秒, 整数型, , GetTime获取当前系统从开机到现在所经历过的时间，单位是毫秒


.子程序 取屏幕宽度, 整数型, , GetScreenWidth获取屏幕的宽度


.子程序 取屏幕高度, 整数型, , GetScreenHeight获取屏幕的高度


.子程序 绑定Ex, 整数型, , BindWindowEx绑定指定的窗口,并指定这个窗口的屏幕颜色获取方式,鼠标仿真模式,键盘仿真模式 高级用户使用
.参数 hwnd, 整数型, , 指定的窗口句柄
.参数 display, 文本型, , 屏幕颜色获取方式 取值有以下： "normal" : 前台模式 ，"gdi" : gdi模式 "gdi2" : gdi2模式 ，"dx" : dx模式（参照接口说明），"dx2" : dx2模式(必须窗口小部分移到窗外)，"dx3" : dx3模式
.参数 mouse, 文本型, , 鼠标仿真模式 取值有以下几种 "normal" : 前台模式，"windows": Windows模式,"windows3": Windows3模式，dx模式,取值可以是以下任意组合. 组合采用"|"符号（参照接口说明）
.参数 keypad, 文本型, , 键盘仿真模式 取值有以下几种 "normal" : 正常模式,平常我们用的前台键盘模式 "windows": Windows模式,采取模拟windows消息方式 同按键的后台插件.
.参数 public_desc, 文本型, , public 字符串: 公共属性（具体参照接口说明）
.参数 mode, 整数型, , 模式（参照接口说明）默认： 0 



.子程序 取硬盘序列号, 文本型, , GetDiskSerial获取本机的硬盘序列号.支持ide scsi硬盘. 要求调用进程必须有管理员权限. 否则返回空串


.子程序 输入法_激活, 整数型, , ActiveInputMethod激活指定窗口所在进程的输入法
.参数 hwnd, 整数型, , 窗口句柄
.参数 id, 文本型, , 输入法名字（具体参照接口说明）



.子程序 输入法_是否开启, 整数型, , CheckInputMethod检测指定窗口所在线程输入法是否开启
.参数 hwnd, 整数型, , 窗口句柄
.参数 id, 文本型, , 输入法名字（具体参照接口说明）



.子程序 输入法_是否安装, 整数型, , FindInputMethod检测系统中是否安装了指定输入法
.参数 id, 文本型, , 输入法名字（具体参照接口说明）



.子程序 鼠标_取位置, 整数型, , GetCursorPos获取系统鼠标在屏幕上的位置
.参数 x, 整数型, 参考, 返回X坐标
.参数 y, 整数型, 参考, 返回Y坐标



.子程序 绑定, 整数型, , BindWindow绑定指定的窗口,并指定这个窗口的屏幕颜色获取方式,鼠标仿真模式,键盘仿真模式,以及模式设定,高级用户可以参考BindWindowEx更加灵活强大
.参数 hwnd, 整数型, , 指定的窗口句柄
.参数 display, 文本型, , 屏幕颜色获取方式 取值有以下： "normal" : 前台模式 ，"gdi" : gdi模式 "gdi2" : gdi2模式 ，"dx" : dx模式（参照接口说明），"dx2" : dx2模式(必须窗口小部分移到窗外)，"dx3" : dx3模式
.参数 mouse, 文本型, , 鼠标仿真模式 取值有以下几种 "normal" : 前台模式，"windows": Windows模式,"windows3": Windows3模式，dx模式,取值可以是以下任意组合. 组合采用"|"符号（参照接口说明）
.参数 keypad, 文本型, , 键盘仿真模式 取值有以下几种 "normal" : 正常模式,平常我们用的前台键盘模式 "windows": Windows模式,采取模拟windows消息方式 同按键的后台插件.
.参数 mode, 整数型, , 模式（参照接口说明）默认： 0



.子程序 窗口_查找, 整数型, , FindWindow查找符合类名或者标题名的顶层可见窗口
.参数 class_name, 文本型, , 窗口类名，如果为空，则匹配所有. 这里的匹配是模糊匹配，不是精确匹配
.参数 title_name, 文本型, , 窗口标题,如果为空，则匹配所有.这里的匹配是模糊匹配，不是精确匹配



.子程序 取屏幕色深, 整数型, , GetScreenDepth获取屏幕的色深


.子程序 系统_置分辨率, 整数型, , SetScreen设置系统的分辨率 系统色深
.参数 width, 整数型, , 屏幕宽度
.参数 height, 整数型, , 屏幕高度
.参数 depth, 整数型, , 系统色深



.子程序 系统_关机退出, 整数型, , ExitOs退出系统(注销 重启 关机) 
.参数 type, 整数型, , 0 : 注销系统 1 : 关机 2 : 重新启动



.子程序 取系统路径, 文本型, , GetDir得到系统的路径 
.参数 type, 整数型, , 0 : 获取当前路径  1 : 获取系统路径(system32路径)  2 : 获取windows路径(windows所在路径) 3 : 获取临时目录路径(temp) 4 : 获取当前进程(exe)所在的路径



.子程序 取系统类型, 整数型, , GetOsType得到操作系统的类型 返回值：0 : win95/98/me/nt4.0 | 1 : xp/2000 2 : 2003 | 3 : win7/vista/2008


.子程序 窗口_查找Ex, 整数型, , FindWindowEx查找符合类名或者标题名的顶层可见窗口,如果指定了parent,则在parent的第一层子窗口中查找
.参数 parent, 整数型, , 父窗口句柄，如果为空，则匹配所有顶层窗口
.参数 class_name, 文本型, , 窗口类名，如果为空，则匹配所有. 这里的匹配是模糊匹配，不是精确匹配
.参数 title_name, 文本型, , 窗口标题,如果为空，则匹配所有. 这里的匹配是模糊匹配，不是精确匹配



.子程序 鼠标_取特征码_半VIP, 文本型, , GetCursorShape获取鼠标特征码. 当BindWindow或者BindWindowEx中的mouse参数含有dx.mouse.cursor时，获取到的是后台鼠标特征，否则是前台鼠标特征.（后台特征码是收费功能）


.子程序 降CPU, 整数型, , DownCpu降低目标窗口所在进程的CPU占用
.参数 rate, 整数型, , 取值范围0到100   取值为0 表示关闭CPU优化. 这个值越大表示降低CPU效果越好



.子程序 鼠标_取热点_半VIP, 文本型, , GetCursorSpot获取鼠标热点位置.(参考工具中抓取鼠标后，那个闪动的点就是热点坐标,不是鼠标坐标)，当BindWindow或者BindWindowEx中的mouse参数含有dx.mouse.cursor时，获取到的是后台鼠标热点位置，否则是前台鼠标热点位置.  后台热点位置是<收费功能>


.子程序 窗口_发送文本2, 整数型, , SendString2向指定窗口发送文本数据
.参数 hwnd, 整数型, , 指定的窗口句柄
.参数 str, 文本型, , 发送的文本数据



.子程序 答题_异步发题, 整数型, , FaqPost发送指定的图像句柄到指定的服务器,并立即返回(异步操作)
.参数 server, 文本型, , 服务器地址以及端口,格式为(ip:port),例如 "192.168.1.100:12345"
.参数 handle, 整数型, , 由FaqCapture获取到的句柄
.参数 request_type, 整数型, , 取值定义如下   0 : 要求获取坐标  1 : 要求获取选项,比如(ABCDE)  2 : 要求获取文字答案  3 : 要求获取两个坐标.此功能要求答题器必须是v15之后的版本.<收费功能>
.参数 time_out, 整数型, , 表示等待多久,单位是毫秒



.子程序 答题_取答案, 文本型, , FaqFetch获取由FaqPost发送后，由服务器返回的答案


.子程序 点阵_提取, 文本型, , FetchWord根据指定的范围,以及指定的颜色描述，提取点阵信息，类似于大漠工具里的单独提取
.参数 x1, 整数型, , 左上角X坐标
.参数 y1, 整数型, , 左上角Y坐标
.参数 x2, 整数型, , 右下角X坐标
.参数 y2, 整数型, , 右下角Y坐标
.参数 color, 文本型, , 颜色格式串
.参数 word, 文本型, , 待定义的文字,不能为空，且不能为关键符号"$"



.子程序 截图_保存JPG, 整数型, , CaptureJpg抓取指定区域(x1, y1, x2, y2)的图像,保存为file(JPG压缩格式)
.参数 x1, 整数型, , 区域的左上X坐标
.参数 y1, 整数型, , 区域的左上Y坐标
.参数 x2, 整数型, , 区域的右下X坐标
.参数 y2, 整数型, , 区域的右下Y坐标
.参数 file, 文本型, , 保存的文件名,保存的地方一般为SetPath中设置的目录_当然这里也可以指定全路径名
.参数 quality, 整数型, , jpg压缩比率(1-100) 越大图片质量越好



.子程序 找字WithFont, 整数型, , FindStrWithFont同FindStr，但是不使用SetDict设置的字库，而利用系统自带的字库，速度比FindStr稍慢
.参数 x1, 整数型, , 区域的左上X坐标
.参数 y1, 整数型, , 区域的左上Y坐标
.参数 x2, 整数型, , 区域的右下X坐标
.参数 y2, 整数型, , 区域的右下Y坐标
.参数 str, 文本型, , 待查找的字符串,可以是字符串组合，比如"长安|洛阳|大雁塔",中间用"|"来分割字符串
.参数 color, 文本型, , 颜色格式串, 可以包含换行分隔符,语法是","后加分割字符串. 具体可以查看下面的示例
.参数 sim, 双精度小数型, , 相似度,取值范围0.1-1.0
.参数 font_name, 文本型, , 系统字体名,比如"宋体"
.参数 font_size, 整数型, , 系统字体尺寸，这个尺寸一定要以大漠综合工具获取的为准.如果获取尺寸看视频教程
.参数 flag, 整数型, , 字体类别 取值可以是以下值的组合,比如1+2+4+8,2+4. 0表示正常字体  1 : 粗体 2 : 斜体 4 : 下划线 8 : 删除线
.参数 x, 整数型, 参考, 返回X坐标没找到返回-1
.参数 y, 整数型, 参考, 返回Y坐标没找到返回-1



.子程序 找字WithFontE, 文本型, , FindStrWithFontE同FindStrE，但是不使用SetDict设置的字库，而利用系统自带的字库，速度比FindStrE稍慢
.参数 x1, 整数型, , 区域的左上X坐标
.参数 y1, 整数型, , 区域的左上Y坐标
.参数 x2, 整数型, , 区域的右下X坐标
.参数 y2, 整数型, , 区域的右下Y坐标
.参数 str, 文本型, , 待查找的字符串, 可以是字符串组合，比如"长安|洛阳|大雁塔",中间用"|"来分割字符串
.参数 color, 文本型, , 颜色格式串, 可以包含换行分隔符,语法是","后加分割字符串. 具体可以查看下面的示例
.参数 sim, 双精度小数型, , 相似度,取值范围0.1-1.0
.参数 font_name, 文本型, , 系统字体名,比如"宋体"
.参数 font_size, 整数型, , 系统字体尺寸，这个尺寸一定要以大漠综合工具获取的为准.如果获取尺寸看视频教程
.参数 flag, 整数型, , 字体类别 取值可以是以下值的组合,比如1+2+4+8,2+4. 0表示正常字体 1 : 粗体 2 : 斜体 4 : 下划线 8 : 删除线



.子程序 找字WithFontEx, 文本型, , FindStrWithFontEx同FindStrEx，但是不使用SetDict设置的字库，而利用系统自带的字库，速度比FindStrEx稍慢
.参数 x1, 整数型, , 区域的左上X坐标
.参数 y1, 整数型, , 区域的左上Y坐标
.参数 x2, 整数型, , 区域的右下X坐标
.参数 y2, 整数型, , 区域的右下Y坐标
.参数 str, 文本型, , 待查找的字符串, 可以是字符串组合，比如"长安|洛阳|大雁塔",中间用"|"来分割字符串
.参数 color, 文本型, , 颜色格式串, 可以包含换行分隔符,语法是","后加分割字符串. 具体可以查看下面的示例
.参数 sim, 双精度小数型, , 相似度,取值范围0.1-1.0
.参数 font_name, 文本型, , 系统字体名,比如"宋体"
.参数 font_size, 整数型, , 系统字体尺寸，这个尺寸一定要以大漠综合工具获取的为准.如果获取尺寸看视频教程
.参数 flag, 整数型, , 字体类别 取值可以是以下值的组合,比如1+2+4+8,2+4. 0表示正常字体 1 : 粗体 2 : 斜体 4 : 下划线 8 : 删除线



.子程序 字库_取相关信息, 文本型, , GetDictInfo根据指定的文字，以及指定的系统字库信息，获取字库描述信息
.参数 str, 文本型, , 需要获取的字符串
.参数 font_name, 文本型, , 系统字体名,比如"宋体"
.参数 font_size, 整数型, , 系统字体尺寸，这个尺寸一定要以大漠综合工具获取的为准.如果获取尺寸看视频教程
.参数 flag, 整数型, , 字体类别 取值可以是以下值的组合,比如1+2+4+8,2+4. 0表示正常字体  1 : 粗体 2 : 斜体 4 : 下划线 8 : 删除线



.子程序 字库_保存到文件, 整数型, , SaveDict保存指定的字库到指定的文件中
.参数 index, 整数型, , 字库索引序号 取值为0-9对应10个字库
.参数 file, 文本型, , 文件名



.子程序 窗口_取进程ID, 整数型, , GetWindowProcessId获取指定窗口所在的进程ID
.参数 hwnd, 整数型, , 窗口句柄



.子程序 窗口_取进程EXE路径, 文本型, , GetWindowProcessPath获取指定窗口所在的进程的exe文件全路径
.参数 hwnd, 整数型, , 窗口句柄



.子程序 窗口_禁止输入, 整数型, , LockInput禁止外部输入到指定窗口
.参数 lock, 整数型, , 0关闭锁定 1开启锁定



.子程序 取图片尺寸, 文本型, , GetPicSize获取指定图片的尺寸，如果指定的图片已经被加入缓存，则从缓存中获取信息  此接口也会把此图片加入缓存
.参数 pic_name, 文本型, , 文件名比如"1.bmp"



.子程序 取大漠对象ID, 整数型, , GetID返回当前大漠对象的ID值，这个值对于每个对象是唯一存在的。可以用来判定两个大漠对象是否一致


.子程序 截图_保存PNG, 整数型, , CapturePng同Capture函数，只是保存的格式为PNG
.参数 x1, 整数型, , 区域的左上X坐标
.参数 y1, 整数型, , 区域的左上Y坐标
.参数 x2, 整数型, , 区域的右下X坐标
.参数 y2, 整数型, , 区域的右下Y坐标
.参数 file, 文本型, , 保存的文件名,保存的地方一般为SetPath中设置的目录,当然这里也可以指定全路径名



.子程序 截图_保存GIF, 整数型, , CaptureGif抓取指定区域(x1, y1, x2, y2)的动画，保存为gif格式
.参数 x1, 整数型, , 区域的左上X坐标
.参数 y1, 整数型, , 区域的左上Y坐标
.参数 x2, 整数型, , 区域的右下X坐标
.参数 y2, 整数型, , 区域的右下Y坐标
.参数 file, 文本型, , 保存的文件名,保存的地方一般为SetPath中设置的目录,当然这里也可以指定全路径名
.参数 delay, 整数型, , 动画间隔，单位毫秒。如果为0，表示只截取静态图片
.参数 time, 整数型, , 总共截取多久的动画，单位毫秒



.子程序 图片转换到BMP, 整数型, , ImageToBmp转换图片格式为24位BMP格式
.参数 pic_name, 文本型, , 要转换的图片名
.参数 bmp_name, 文本型, , 要保存的BMP图片名



.子程序 找字Fast, 整数型, , FindStrFast同FindStr,比FindStr要快很多
.参数 x1, 整数型, , 区域的左上X坐标
.参数 y1, 整数型, , 区域的左上Y坐标
.参数 x2, 整数型, , 区域的右下X坐标
.参数 y2, 整数型, , 区域的右下Y坐标
.参数 str, 文本型, , 待查找的字符串,可以是字符串组合，比如"长安|洛阳|大雁塔",中间用"|"来分割字符串
.参数 color, 文本型, , 颜色格式串, 可以包含换行分隔符,语法是","后加分割字符串. 具体可以查看下面的示例
.参数 sim, 双精度小数型, , 相似度,取值范围0.1-1.0
.参数 x, 整数型, 参考, 返回X坐标 没找到返回-1
.参数 y, 整数型, 参考, 返回Y坐标 没找到返回-1



.子程序 找字FastEx, 文本型, , FindStrFastEx同FindStrEx,比FindStrEx快很多
.参数 x1, 整数型, , 区域的左上X坐标
.参数 y1, 整数型, , 区域的左上Y坐标
.参数 x2, 整数型, , 区域的右下X坐标
.参数 y2, 整数型, , 区域的右下Y坐标
.参数 str, 文本型, , 待查找的字符串, 可以是字符串组合，比如"长安|洛阳|大雁塔",中间用"|"来分割字符串
.参数 color, 文本型, , 颜色格式串, 可以包含换行分隔符,语法是","后加分割字符串. 具体可以查看下面的示例
.参数 sim, 双精度小数型, , 相似度,取值范围0.1-1.0



.子程序 找字_FastE, 文本型, , FindStrFastE同FindStrE，比FindStrE快很多，易语言用不了FindStrFast可以用此接口来代替
.参数 x1, 整数型, , 区域的左上X坐标
.参数 y1, 整数型, , 区域的左上Y坐标
.参数 x2, 整数型, , 区域的右下X坐标
.参数 y2, 整数型, , 区域的右下Y坐标
.参数 str, 文本型, , 待查找的字符串, 可以是字符串组合，比如"长安|洛阳|大雁塔",中间用"|"来分割字符串
.参数 color, 文本型, , 颜色格式串, 可以包含换行分隔符,语法是","后加分割字符串. 具体可以查看下面的示例
.参数 sim, 双精度小数型, , 相似度,取值范围0.1-1.0



.子程序 后台_图色调试模式, 整数型, , EnableDisplayDebug开启图色调试模式，此模式会稍许降低图色和文字识别的速度.默认不开启
.参数 enable_debug, 整数型, , 0 为关闭，1 为开启



.子程序 截图_保存BMP, 整数型, , CapturePre抓取上次操作的图色区域，保存为file(24位位图)
.参数 file, 文本型, , 保存的文件名,保存的地方一般为SetPath中设置的目录，当然这里也可以指定全路径名.



.子程序 注册VIP, 整数型, , Reg非简单游平台使用，调用此函数来注册，从而使用插件的高级功能. 推荐使用RegEx函数
.参数 reg_code, 文本型, , 注册码. (从大漠插件后台获取)
.参数 ver_info, 文本型, , 版本附加信息. 可以在后台详细信息查看. 可以任意填写. 可留空. 长度不能超过10. 并且只能包含数字和字母以及小数点. 这个版本信息不是插件版本



.子程序 取机器码, 文本型, , GetMachineCode获取本机的机器码.(带网卡). 此机器码用于插件网站后台. 要求调用进程必须有管理员权限. 否则返回空串


.子程序 置剪贴板, 整数型, , SetClipboard设置剪贴板的内容
.参数 data, 文本型, , 以字符串表示的剪板内容



.子程序 取剪贴板, 文本型, , GetClipboard获取剪贴板的内容


.子程序 字库_取序号, 整数型, , GetNowDict获取当前使用的字库序号(0-9)


.子程序 判断是否64位系统, 整数型, , Is64Bit判断当前系统是否是64位操作系统


.子程序 取颜色数量, 整数型, , GetColorNum获取指定区域的颜色数量,颜色格式"RRGGBB-DRDGDB",注意,和按键的颜色格式相反
.参数 x1, 整数型, , 区域的左上X坐标
.参数 y1, 整数型, , 区域的左上Y坐标
.参数 x2, 整数型, , 区域的右下X坐标
.参数 y2, 整数型, , 区域的右下Y坐标
.参数 color, 文本型, , 颜色 格式为"RRGGBB-DRDGDB",比如"123456-000000|aabbcc-202020"
.参数 sim, 双精度小数型, , 相似度,取值范围0.1-1.0



.子程序 窗口_枚举进程, 文本型, , EnumWindowByProcess根据指定进程以及其它条件,枚举系统中符合条件的窗口,可以枚举到按键自带的无法枚举到的窗口
.参数 process_name, 文本型, , 进程映像名.比如(svchost.exe)
.参数 title, 文本型, , 窗口标题
.参数 class_name, 文本型, , 窗口类名
.参数 filter, 整数型, , 取值定义如下：1 : 匹配窗口标题,参数title有效 | 2 : 匹配窗口类名,参数class_name有效 | 4 : 只匹配指定映像的所对应的第一个进程. 可能有很多同映像名的进程，只匹配第一个进程的 | 8 : 匹配所有者窗口为0的窗口,即顶级窗口 | 16 : 匹配可见的窗口 | 32 : 匹配出的窗口按照窗口打开顺序依次排列<收费功能，具体详情点击查看>



.子程序 字库_取字符数量, 整数型, , GetDictCount获取指定的字库中的字符数量
.参数 index, 整数型, , 字库序号(0-9)



.子程序 取插件错误, 整数型, , GetLastError获取插件命令的最后错误（返回值：参照接口说明）


.子程序 取网络时间, 文本型, , GetNetTime从网络获取当前北京时间，返回类型"2001-11-01 23:14:08"


.子程序 置截图取色, 整数型, , EnableGetColorByCapture允许调用GetColor GetColorBGR GetColorHSV 以及 CmpColor时，以截图的方式来获取颜色
.参数 en, 整数型, , 0 关闭  1 打开



.子程序 检测是否UAC, 整数型, , CheckUAC检测当前系统是否有开启UAC(用户账户控制)，返回值 0: 没开启UAC，1: 开启了UAC


.子程序 置UAC, 整数型, , SetUAC设置当前系统的UAC(用户账户控制)
.参数 uac, 整数型, ,  0 : 关闭UAC  1 : 开启UAC



.子程序 系统_关闭屏幕字体平滑_VIP, 整数型, , DisableFontSmooth关闭当前系统屏幕字体平滑,同时关闭系统的ClearType功能 <收费功能>


.子程序 系统_检测是否开启字体平滑_VIP, 整数型, , CheckFontSmooth检测当前系统是否有开启屏幕字体平滑<收费功能>


.子程序 系统_置硬件加速_VIP, 整数型, , SetDisplayAcceler设置当前系统的硬件加速级别<收费功能>
.参数 level, 整数型, , 



.子程序 窗口_进程查找_VIP, 整数型, , FindWindowByProcess根据指定的进程名字，来查找可见窗口<收费功能>
.参数 process_name, 文本型, , 进程名. 比如(notepad.exe)
.参数 class_name, 文本型, , 窗口类名，如果为空，则匹配所有. 这里的匹配是模糊匹配，不是精确匹配
.参数 title_name, 文本型, , 窗口标题,如果为空，则匹配所有.这里的匹配是模糊匹配，不是精确匹配



.子程序 窗口_PID查找_VIP, 整数型, , FindWindowByProcessId根据指定的进程Id，来查找可见窗口<收费功能>
.参数 process_id, 整数型, , 进程id
.参数 class_name, 文本型, , 窗口类名，如果为空，则匹配所有. 这里的匹配是模糊匹配，不是精确匹配
.参数 title_name, 文本型, , 窗口标题,如果为空，则匹配所有.这里的匹配是模糊匹配，不是精确匹配



.子程序 INI_读配置, 文本型, , ReadIni从Ini中读取指定信息
.参数 section, 文本型, , 小节名
.参数 key, 文本型, , 变量名
.参数 file, 文本型, , ini文件名



.子程序 INI_写配置, 整数型, , WriteIni向指定的Ini写入信息
.参数 section, 文本型, , 小节名
.参数 key, 文本型, , 变量名
.参数 v, 文本型, , 变量内容
.参数 file, 文本型, , ini文件名



.子程序 运行_VIP, 整数型, , RunApp运行指定的应用程序<收费功能>
.参数 path, 文本型, , 指定的可执行程序全路径
.参数 mode, 整数型, , 0 : 普通模式  1 : 加强模式



.子程序 延时_VIP, 整数型, , Delay延时指定的毫秒,过程中不阻塞UI操作. 高级语言使用<收费功能>
.参数 mis, 整数型, , 毫秒数



.子程序 窗口_条件查找_VIP, 整数型, , FindWindowSuper根据两组设定条件来查找指定窗口<收费功能>
.参数 spec1, 文本型, , 查找串1. (内容取决于flag1的值)
.参数 flag1, 整数型, , spec1的类型，0：标题 1：程序名字 2：类名 3：程序路径 4：父句柄 5：父窗口标题 6：父窗口类名 7：顶级窗口句柄 8：顶级窗口标题 9：顶级窗口类名
.参数 type1, 整数型, , 0精确判断， 1模糊判断
.参数 spec2, 文本型, , 查找串2. (内容取决于flag2的值)
.参数 flag2, 整数型, , spec2的类型，0：标题 1：程序名字 2：类名 3：程序路径 4：父句柄 5：父窗口标题 6：父窗口类名 7：顶级窗口句柄 8：顶级窗口标题 9：顶级窗口类名
.参数 type2, 整数型, , 0精确判断，1模糊判断



.子程序 Ex排除坐标, 文本型, , ExcludePos根据部分Ex接口的返回值，排除指定范围区域内的坐标
.参数 all_pos, 文本型, , 坐标描述串。  一般是FindStrEx,FindStrFastEx,FindStrWithFontEx，FindColorEx, FindMultiColorEx,和FindPicEx的返回值
.参数 type, 整数型, , 取值为0或者1
.参数 x1, 整数型, , 左上角横坐标
.参数 y1, 整数型, , 左上角纵坐标
.参数 x2, 整数型, , 右下角横坐标
.参数 y2, 整数型, , 右下角纵坐标



.子程序 Ex找最近坐标, 文本型, , FindNearestPos根据部分Ex接口的返回值，然后在所有坐标里找出距离指定坐标最近的那个坐标
.参数 all_pos, 文本型, , 坐标描述串。  一般是FindStrEx,FindStrFastEx,FindStrWithFontEx，FindColorEx, FindMultiColorEx,和FindPicEx的返回值
.参数 type, 整数型, , 取值为0或者1
.参数 x, 整数型, , 横坐标
.参数 y, 整数型, , 纵坐标



.子程序 Ex坐标距离排序, 文本型, , SortPosDistance根据部分Ex接口的返回值，然后对所有坐标根据对指定坐标的距离进行从小到大的排序
.参数 all_pos, 文本型, , 坐标描述串。  一般是FindStrEx,FindStrFastEx,FindStrWithFontEx,FindColorEx, FindMultiColorEx,和FindPicEx的返回值.
.参数 type, 整数型, , 取值为0或者1
.参数 x, 整数型, , 横坐标
.参数 y, 整数型, , 纵坐标



.子程序 找图Mem_VIP, 整数型, , FindPicMem查找指定区域内的图片,位图必须是24位色格式,支持透明色,当图像上下左右4个顶点的颜色一样时,则这个颜色将作为透明色处理，这个函数可以查找多个图片,只返回第一个找到的X Y坐标. 这个函数要求图片是数据地址<收费功能>
.参数 x1, 整数型, , 区域的左上X坐标
.参数 y1, 整数型, , 区域的左上Y坐标
.参数 x2, 整数型, , 区域的右下X坐标
.参数 y2, 整数型, , 区域的右下Y坐标
.参数 pic_info, 文本型, , 图片数据地址集合. 格式为"地址1,长度1|地址2,长度2.....|地址n,长度n". 可以用AppendPicAddr来组合
.参数 delta_color, 文本型, , 颜色色偏比如"203040" 表示RGB的色偏分别是20 30 40 (这里是16进制表示)
.参数 sim, 双精度小数型, , 相似度,取值范围0.1-1.0
.参数 dir, 整数型, , 查找方向 0: 从左到右,从上到下 1: 从左到右,从下到上 2: 从右到左,从上到下 3: 从右到左, 从下到上
.参数 x, 整数型, 参考, 返回图片左上角的X坐标
.参数 y, 整数型, 参考, 返回图片左上角的Y坐标



.子程序 找图MemEx_VIP, 文本型, , FindPicMemEx查找指定区域内的图片,位图必须是24位色格式,支持透明色,当图像上下左右4个顶点的颜色一样时,则这个颜色将作为透明色处理,这个函数可以查找多个图片,并且返回所有找到的图像的坐标. 这个函数要求图片是数据地址<收费功能>
.参数 x1, 整数型, , 区域的左上X坐标
.参数 y1, 整数型, , 区域的左上Y坐标
.参数 x2, 整数型, , 区域的右下X坐标
.参数 y2, 整数型, , 区域的右下Y坐标
.参数 pic_info, 文本型, , 图片数据地址集合. 格式为"地址1,长度1|地址2,长度2.....|地址n,长度n". 可以用AppendPicAddr来组合
.参数 delta_color, 文本型, , 颜色色偏比如"203040" 表示RGB的色偏分别是20 30 40 (这里是16进制表示)
.参数 sim, 双精度小数型, , 相似度,取值范围0.1-1.0
.参数 dir, 整数型, , 查找方向 0: 从左到右,从上到下 1: 从左到右,从下到上 2: 从右到左,从上到下 3: 从右到左, 从下到上



.子程序 找图MemE_VIP, 文本型, , FindPicMemE查找指定区域内的图片,位图必须是24位色格式,支持透明色,当图像上下左右4个顶点的颜色一样时,则这个颜色将作为透明色处理,这个函数可以查找多个图片,只返回第一个找到的X Y坐标. 这个函数要求图片是数据地址.<收费功能>易接口
.参数 x1, 整数型, , 区域的左上X坐标
.参数 y1, 整数型, , 区域的左上Y坐标
.参数 x2, 整数型, , 区域的右下X坐标
.参数 y2, 整数型, , 区域的右下Y坐标
.参数 pic_info, 文本型, , 图片数据地址集合. 格式为"地址1,长度1|地址2,长度2.....|地址n,长度n". 可以用AppendPicAddr来组合
.参数 delta_color, 文本型, , 颜色色偏比如"203040" 表示RGB的色偏分别是20 30 40 (这里是16进制表示)
.参数 sim, 双精度小数型, , 相似度,取值范围0.1-1.0
.参数 dir, 整数型, , 查找方向 0: 从左到右,从上到下 1: 从左到右,从下到上 2: 从右到左,从上到下 3: 从右到左, 从下到上



.子程序 Mem组合新参, 文本型, , AppendPicAddr对指定的数据地址和长度，组合成新的参数. FindPicMem FindPicMemE 以及FindPicMemEx专用
.参数 pic_info, 文本型, , 老的地址描述串
.参数 addr, 整数型, , 数据地址
.参数 size, 整数型, , 数据长度



.子程序 停止播放, 整数型, , Stop停止指定的音乐
.参数 id, 整数型, , Play返回的播放id



.子程序 字库_置内存_VIP, 整数型, , SetDictMem从内存中设置字库<收费功能>
.参数 index, 整数型, , 字库的序号,取值为0-9,目前最多支持10个字库
.参数 addr, 整数型, , 数据地址
.参数 size, 整数型, , 字库长度



.子程序 取网络时间_加密_VIP, 文本型, , GetNetTimeSafe从网络获取当前北京时间. 同GetNetTime. 但此接口数据是加密传送,以免被人破解<收费功能>


.子程序 强制解绑_VIP, 整数型, , ForceUnBindWindow强制解除绑定窗口,并释放系统资源<收费功能>
.参数 hwnd, 整数型, , 需要强制解除绑定的窗口句柄



.子程序 INI读_VIP, 文本型, , ReadIniPwd从Ini中读取指定信息.可支持加密文件<收费功能>
.参数 section, 文本型, , 小节名
.参数 key, 文本型, , 变量名
.参数 file, 文本型, , ini文件名
.参数 pwd, 文本型, , 密码



.子程序 INI写_VIP, 整数型, , WriteIniPwd向指定的Ini写入信息.支持加密文件<收费功能>
.参数 section, 文本型, , 小节名
.参数 key, 文本型, , 变量名
.参数 v, 文本型, , 变量内容
.参数 file, 文本型, , ini文件名
.参数 pwd, 文本型, , 密码



.子程序 文件解密_VIP, 整数型, , DecodeIni解密指定的文件<收费功能>
.参数 file, 文本型, , 文件名
.参数 pwd, 文本型, , 密码



.子程序 键盘_按住_字符, 整数型, , KeyDownChar按住指定的key_str
.参数 key_str, 文本型, , 字符串描述的键码. 大小写无所谓



.子程序 键盘_弹起_字符, 整数型, , KeyUpChar弹起来虚拟键key_str
.参数 key_str, 文本型, , 字符串描述的键码. 大小写无所谓. 



.子程序 键盘_按键_字符, 整数型, , KeyPressChar按下指定的key_str
.参数 key_str, 文本型, , 字符串描述的键码. 大小写无所谓. 



.子程序 键盘_按键Str_VIP, 整数型, , KeyPressStr根据指定的字符串序列，依次按顺序按下其中的字符 <收费功能>
.参数 key_str, 文本型, , 需要按下的字符串序列. 比如"1234","abcd","7389,1462"等
.参数 delay, 整数型, , 每按下一个按键，需要延时多久. 单位毫秒.这个值越大，按的速度越慢



.子程序 键盘补丁_VIP, 整数型, , EnableKeypadPatch键盘消息发送补丁. 默认是关闭<收费功能> 注: 此接口必须在绑定之后才能调用
.参数 en, 整数型, , 0 禁止  1 开启



.子程序 键盘_置同步发送_VIP, 整数型, , EnableKeypadSync键盘消息采用同步发送模式.默认异步<收费功能>
.参数 en, 整数型, , 0 禁止同步 1 开启同步
.参数 time_out, 整数型, , 单位是毫秒,表示同步等待的最大时间



.子程序 鼠标_置同步发送_VIP, 整数型, , EnableMouseSync鼠标消息采用同步发送模式.默认异步<收费功能>
.参数 en, 整数型, , 0 禁止同步 1 开启同步
.参数 time_out, 整数型, , 单位是毫秒,表示同步等待的最大时间.



.子程序 保护盾_VIP, 整数型, , DmGuard针对部分检测措施的保护盾<收费功能>
.参数 en, 整数型, , 0表示关闭保护盾,1表示打开保护盾
.参数 type, 文本型, , 参数具体内容可以是以下任意一个,"np" : 这个是防止NP检测,"np2" : 在NP下保护后台可以正常运行. (此模式需要加载驱动,目前仅支持32位系统)



.子程序 截图_VIP, 整数型, , FaqCaptureFromFile截取指定图片中的图像,并返回此句柄<收费功能>
.参数 x1, 整数型, , 左上角X坐标
.参数 y1, 整数型, , 左上角Y坐标
.参数 x2, 整数型, , 右下角X坐标
.参数 y2, 整数型, , 右下角Y坐标
.参数 file, 文本型, , 图片文件名,图像格式基本都支持
.参数 quality, 整数型, , 图像或动画品质,或者叫压缩率,此值越大图像质量越好 取值范围（1-100）



.子程序 内存_搜索整数_VIP, 文本型, , FindIntEx搜索指定的整数 <收费功能>
.参数 hwnd, 整数型, , 指定搜索的窗口句柄或者进程ID.  默认是窗口句柄. 如果要指定为进程ID,需要调用SetMemoryHwndAsProcessId
.参数 addr_range, 文本型, , 指定搜索的地址集合，字符串类型，这个地方可以是上次FindXXX的返回地址集合,可以进行二次搜索.(类似CE的再次扫描)
.参数 int_value_min, 整数型, , 搜索的整数数值最小值
.参数 int_value_max, 整数型, , 搜索的整数数值最大值
.参数 type, 整数型, , 搜索的整数类型,取值如下 0 : 32位 1 : 16 位   2 : 8位
.参数 step, 整数型, , 搜索步长
.参数 multi_thread, 整数型, , 表示是否开启多线程查找.  0不开启，1开启 | 开启多线程查找速度较快，但会耗费较多CPU资源. 不开启速度较慢，但节省CPU
.参数 mode, 整数型, , 1 表示开启快速扫描(略过只读内存)  0表示所有内存类型全部扫描



.子程序 内存_搜索单精度浮点数_VIP, 文本型, , FindFloatEx搜索指定的单精度浮点数 <收费功能>
.参数 hwnd, 整数型, , 指定搜索的窗口句柄或者进程ID.  默认是窗口句柄. 如果要指定为进程ID,需要调用SetMemoryHwndAsProcessId
.参数 addr_range, 文本型, , 指定搜索的地址集合，字符串类型，这个地方可以是上次FindXXX的返回地址集合,可以进行二次搜索.(类似CE的再次扫描)
.参数 float_value_min, 小数型, , 搜索的单精度数值最小值
.参数 float_value_max, 小数型, , 搜索的单精度数值最大值
.参数 step, 整数型, , 搜索步长
.参数 multi_thread, 整数型, , 表示是否开启多线程查找.  0不开启，1开启 | 开启多线程查找速度较快，但会耗费较多CPU资源. 不开启速度较慢，但节省CPU
.参数 mode, 整数型, , 1 表示开启快速扫描(略过只读内存)  0表示所有内存类型全部扫描



.子程序 内存_搜索双精度浮点数_VIP, 文本型, , FindDoubleEx搜索指定的双精度浮点数.<收费功能>
.参数 hwnd, 整数型, , 指定搜索的窗口句柄或者进程ID.  默认是窗口句柄. 如果要指定为进程ID,需要调用SetMemoryHwndAsProcessId
.参数 addr_range, 文本型, , 指定搜索的地址集合，字符串类型，这个地方可以是上次FindXXX的返回地址集合,可以进行二次搜索.(类似CE的再次扫描)
.参数 double_value_min, 双精度小数型, , 搜索的双精度数值最小值
.参数 double_value_max, 双精度小数型, , 搜索的双精度数值最大值 
.参数 step, 整数型, , 搜索步长
.参数 multi_thread, 整数型, , 表示是否开启多线程查找.  0不开启，1开启 | 开启多线程查找速度较快，但会耗费较多CPU资源. 不开启速度较慢，但节省CPU
.参数 mode, 整数型, , 1 表示开启快速扫描(略过只读内存)  0表示所有内存类型全部扫描



.子程序 内存_搜索字符串_VIP, 文本型, , FindStringEx搜索指定的字符串.<收费功能>
.参数 hwnd, 整数型, , 指定搜索的窗口句柄或者进程ID.  默认是窗口句柄. 如果要指定为进程ID,需要调用SetMemoryHwndAsProcessId
.参数 addr_range, 文本型, , 指定搜索的地址集合，字符串类型，这个地方可以是上次FindXXX的返回地址集合,可以进行二次搜索.(类似CE的再次扫描)
.参数 string_value, 文本型, , 搜索的字符串
.参数 type, 整数型, , 搜索的字符串类型,取值如下：0 : Ascii字符串 1 : Unicode字符串
.参数 step, 整数型, , 搜索步长
.参数 multi_thread, 整数型, , 表示是否开启多线程查找.  0不开启，1开启 | 开启多线程查找速度较快，但会耗费较多CPU资源. 不开启速度较慢，但节省CPU
.参数 mode, 整数型, ,  1 表示开启快速扫描(略过只读内存)  0表示所有内存类型全部扫描



.子程序 内存_搜索二进制_VIP, 文本型, , FindDataEx搜索指定的二进制数据. <收费功能>
.参数 hwnd, 整数型, , 指定搜索的窗口句柄或者进程ID.  默认是窗口句柄. 如果要指定为进程ID,需要调用SetMemoryHwndAsProcessId
.参数 addr_range, 文本型, , 指定搜索的地址集合，字符串类型，这个地方可以是上次FindXXX的返回地址集合,可以进行二次搜索.(类似CE的再次扫描)
.参数 data, 文本型, , 要搜索的二进制数据 以字符串的形式描述比如"00 01 23 45 67 86 ab ce f1"等
.参数 step, 整数型, , 搜索步长
.参数 multi_thread, 整数型, , 表示是否开启多线程查找.  0不开启，1开启 | 开启多线程查找速度较快，但会耗费较多CPU资源. 不开启速度较慢，但节省CPU
.参数 mode, 整数型, , 1 表示开启快速扫描(略过只读内存)  0表示所有内存类型全部扫描



.子程序 鼠标_模拟真实_VIP, 整数型, , EnableRealMouse鼠标动作模拟真实操作,带移动轨迹,以及点击延时随机 <收费功能>
.参数 en, 整数型, , 0 关闭模拟  1 开启模拟
.参数 mousedelay, 整数型, , 单位是毫秒. 表示在模拟鼠标移动轨迹时,每移动一次的时间间隔.这个值越大,鼠标移动越慢
.参数 mousestep, 整数型, , 表示在模拟鼠标移动轨迹时,每移动一次的距离. 这个值越大，鼠标移动越快速



.子程序 键盘_模拟真实_VIP, 整数型, , EnableRealKeypad键盘动作模拟真实操作,点击延时随机 <收费功能>
.参数 en, 整数型, ,  0 关闭模拟  1 开启模拟



.子程序 发送文本_VIP, 整数型, , SendStringIme向绑定的窗口发送文本数据.必须配合dx.public.input.ime属性 <收费功能>
.参数 str, 文本型, , 发送的文本数据



.子程序 信息_画线条_VIP, 整数型, , FoobarDrawLine在指定的Foobar窗口内部画线条 <收费功能>
.参数 hwnd, 整数型, , 指定的Foobar窗口,注意,此句柄必须是通过CreateFoobarxxxx系列函数创建出来的
.参数 x1, 整数型, , 左上角X坐标(相对于hwnd客户区坐标)
.参数 y1, 整数型, , 左上角Y坐标(相对于hwnd客户区坐标)
.参数 x2, 整数型, , 右下角X坐标(相对于hwnd客户区坐标)
.参数 y2, 整数型, , 右下角Y坐标(相对于hwnd客户区坐标)
.参数 color, 文本型, , 填充的颜色值
.参数 style, 整数型, , 画笔类型. 0为实线. 1为虚线
.参数 width, 整数型, , 线条宽度



.子程序 找字Ex, 文本型, , FindStrEx在屏幕范围(x1,y1,x2,y2)内,查找string(可以是任意字符串的组合),并返回符合color_format的所有坐标位置,相似度sim同Ocr接口描述
.参数 x1, 整数型, , 区域的左上X坐标
.参数 y1, 整数型, , 区域的左上Y坐标
.参数 x2, 整数型, , 区域的右下X坐标
.参数 y2, 整数型, , 区域的右下Y坐标
.参数 str, 文本型, , 待查找的字符串, 可以是字符串组合，比如"长安|洛阳|大雁塔",中间用"|"来分割字符串
.参数 color, 文本型, , 颜色格式串, 可以包含换行分隔符,语法是","后加分割字符串. 具体可以查看下面的示例.
.参数 sim, 双精度小数型, , 相似度,取值范围0.1-1.0



.子程序 绑定_判断, 整数型, , IsBind判定指定窗口是否已经被后台绑定. (前台无法判定)
.参数 hwnd, 整数型, , 



.子程序 注册VIP_Ex, 整数型, , RegEx调用此函数来注册，从而使用插件的高级功能.
.参数 reg_code, 文本型, , 注册码. (从大漠插件后台获取)
.参数 ver_info, 文本型, , 版本附加信息. 可以在后台详细信息查看.可留空. 长度不能超过10. 并且只能包含数字和字母以及小数点. 这个版本信息不是插件版本
.参数 ip, 文本型, , 插件注册的ip地址.可以用|来组合,依次对ip中的地址进行注册，直到成功. ip地址列表在VIP群中获取



.子程序 对象_取数量_VIP, 整数型, , GetDmCount返回当前进程已经创建的dm对象个数


.子程序 关闭屏幕保护, 整数型, , DisableScreenSave


.子程序 关闭电源管理, 整数型, , DisablePowerSave


.子程序 进程ID用内存接口_VIP, 整数型, , SetMemoryHwndAsProcessId设置是否把所有内存接口函数中的窗口句柄当作进程ID,以支持直接以进程ID来使用内存接口
.参数 en, 整数型, , 



.子程序 鼠标_取特征码_VIP, 整数型, , FindShape查找指定的形状. 形状的描述同按键的抓抓. 具体可以参考按键的抓抓
.参数 x1, 整数型, , 
.参数 y1, 整数型, , 
.参数 x2, 整数型, , 
.参数 y2, 整数型, , 
.参数 offset_color, 文本型, , 
.参数 sim, 双精度小数型, , 
.参数 dir, 整数型, , 
.参数 x, 整数型, 参考, 
.参数 y, 整数型, 参考, 



.子程序 鼠标_取特征码E_VIP, 文本型, , FindShapeE查找指定的形状. 形状的描述同按键的抓抓. 具体可以参考按键的抓抓
.参数 x1, 整数型, , 
.参数 y1, 整数型, , 
.参数 x2, 整数型, , 
.参数 y2, 整数型, , 
.参数 offset_color, 文本型, , 
.参数 sim, 双精度小数型, , 
.参数 dir, 整数型, , 



.子程序 鼠标_取特征码EX_VIP, 文本型, , FindShapeEx查找所有指定的形状的坐标. 形状的描述同按键的抓抓. 具体可以参考按键的抓抓
.参数 x1, 整数型, , 
.参数 y1, 整数型, , 
.参数 x2, 整数型, , 
.参数 y2, 整数型, , 
.参数 offset_color, 文本型, , 
.参数 sim, 双精度小数型, , 
.参数 dir, 整数型, , 



.子程序 找字S, 文本型, , FindStrS在屏幕范围(x1,y1,x2,y2)内,查找string(可以是任意个字符串的组合),并返回符合color_format的坐标位置,相似度sim同Ocr接口描述
.参数 x1, 整数型, , 
.参数 y1, 整数型, , 
.参数 x2, 整数型, , 
.参数 y2, 整数型, , 
.参数 str, 文本型, , 
.参数 color, 文本型, , 
.参数 sim, 双精度小数型, , 
.参数 x, 整数型, 参考, 
.参数 y, 整数型, 参考, 



.子程序 找字ExS, 文本型, , FindStrExS在屏幕范围(x1,y1,x2,y2)内,查找string(可以是任意字符串的组合),并返回符合color_format的所有坐标位置,相似度sim同Ocr接口描述
.参数 x1, 整数型, , 
.参数 y1, 整数型, , 
.参数 x2, 整数型, , 
.参数 y2, 整数型, , 
.参数 str, 文本型, , 
.参数 color, 文本型, , 
.参数 sim, 双精度小数型, , 



.子程序 找字FastS_VIP, 文本型, , FindStrFastS同找字StrS
.参数 x1, 整数型, , 
.参数 y1, 整数型, , 
.参数 x2, 整数型, , 
.参数 y2, 整数型, , 
.参数 str, 文本型, , 
.参数 color, 文本型, , 
.参数 sim, 双精度小数型, , 
.参数 x, 整数型, 参考, 
.参数 y, 整数型, 参考, 



.子程序 找字FastExS_VIP, 文本型, , FindStrFastExS同FindStrExS
.参数 x1, 整数型, , 
.参数 y1, 整数型, , 
.参数 x2, 整数型, , 
.参数 y2, 整数型, , 
.参数 str, 文本型, , 
.参数 color, 文本型, , 
.参数 sim, 双精度小数型, , 



.子程序 找图S_VIP, 文本型, , FindPicS查找指定区域内的图片,位图必须是24位色格式,支持透明色,当图像上下左右4个顶点的颜色一样时,则这个颜色将作为透明色处理
.参数 x1, 整数型, , 
.参数 y1, 整数型, , 
.参数 x2, 整数型, , 
.参数 y2, 整数型, , 
.参数 pic_name, 文本型, , 
.参数 delta_color, 文本型, , 
.参数 sim, 双精度小数型, , 
.参数 dir, 整数型, , 
.参数 x, 整数型, 参考, 
.参数 y, 整数型, 参考, 



.子程序 找图ExS_VIP, 文本型, , FindPicExS查找指定区域内的图片,位图必须是24位色格式,支持透明色,当图像上下左右4个顶点的颜色一样时,则这个颜色将作为透明色处理
.参数 x1, 整数型, , 
.参数 y1, 整数型, , 
.参数 x2, 整数型, , 
.参数 y2, 整数型, , 
.参数 pic_name, 文本型, , 
.参数 delta_color, 文本型, , 
.参数 sim, 双精度小数型, , 
.参数 dir, 整数型, , 



.子程序 字库_清空指定, 整数型, , ClearDict清空指定的字库
.参数 index, 整数型, , 



.子程序 取机器码_无MAC, 文本型, , GetMachineCodeNoMac获取本机的机器码.(不带网卡) 要求调用进程必须有管理员权限. 否则返回空串


.子程序 后台_假激活置开关_VIP, 整数型, , EnableFakeActive设置是否开启后台假激活功能. 默认是关闭. 一般用不到. 除非有人有特殊需求
.参数 en, 整数型, , 



.子程序 图像取数据_VIP, 整数型, , GetScreenDataBmp获取指定区域的图像,用24位位图的数据格式返回,（不适合按键使用）方便二次开发
.参数 x1, 整数型, , 
.参数 y1, 整数型, , 
.参数 x2, 整数型, , 
.参数 y2, 整数型, , 
.参数 data, 整数型, 参考, 
.参数 size, 整数型, 参考, 



.子程序 文件加密_VIP, 整数型, , EncodeFile加密指定的文件
.参数 file, 文本型, , 
.参数 pwd, 文本型, , 



.子程序 鼠标_取特征码Ex_VIP, 文本型, , GetCursorShapeEx获取鼠标特征码. 当BindWindow或者BindWindowEx中的mouse参数含有dx.mouse.cursor时，获取到的是后台鼠标特征，否则是前台鼠标特征.   后台特征码是收费功能
.参数 type, 整数型, , 



.子程序 答题_取消发送_异步, 整数型, , FaqCancel可以把上次FaqPost的发送取消,接着下一次FaqPost


.子程序 整数转二进制, 文本型, , IntToData把整数转换成二进制形式
.参数 int_value, 整数型, , 
.参数 type, 整数型, , 



.子程序 单精度浮点数转二进制, 文本型, , FloatToData把单精度浮点数转换成二进制形式
.参数 float_value, 小数型, , 



.子程序 双精度浮点数转二进制, 文本型, , DoubleToData把双精度浮点数转换成二进制形式
.参数 double_value, 双精度小数型, , 



.子程序 字符转二进制, 文本型, , StringToData把字符串转换成二进制形式
.参数 string_value, 文本型, , 
.参数 type, 整数型, , 



.子程序 内存_置查找结果到文件_VIP, 整数型, , SetMemoryFindResultToFile设置是否把所有内存查找接口的结果保存入指定文件
.参数 file, 文本型, , 



.子程序 后台_置开关_VIP, 整数型, , EnableBind设置是否暂时关闭或者开启后台功能. 默认是开启
.参数 en, 整数型, , 



.子程序 键鼠_置前台模拟方式_VIP, 整数型, , SetSimMode设置前台键鼠的模拟方式
.参数 mode, 整数型, , 



.子程序 键鼠_置前台活动范围_VIP, 整数型, , LockMouseRect设置前台鼠标在屏幕上的活动范围
.参数 mode, 整数型, , 



.子程序 剪切板发送, 整数型, , SendPaste向指定窗口发送粘贴命令. 把剪贴板的内容发送到目标窗口
.参数 hwnd, 整数型, , 指定的窗口句柄



.子程序 卡屏检测, 整数型, , IsDisplayDead判断是否卡屏,返回值：0=没卡屏，1=卡屏
.参数 x1, 整数型, , 区域的左上X坐标
.参数 y1, 整数型, , 区域的左上Y坐标
.参数 x2, 整数型, , 区域的右下X坐标
.参数 y2, 整数型, , 区域的右下Y坐标
.参数 t, 整数型, , 需要等待的时间,单位是秒



.子程序 键盘_取状态, 整数型, , GetKeyState获取指定的按键状态.(前台信息,不是后台)
.参数 vk_code, 整数型, , 虚拟按键码



.子程序 键盘_等待, 整数型, , WaitKey等待指定的按键按下 (前台,不是后台)0:超时1:指定的按键按下
.参数 vk_code, 整数型, , 虚拟按键码
.参数 time_out, 整数型, , 等待多久,单位毫秒. 如果是0，表示一直等待



.子程序 INI_节点删除, 整数型, , DeleteIni删除指定的ini小节
.参数 section, 文本型, , 小节名
.参数 key, 文本型, , 变量名. 如果这个变量为空串，则删除整个section小节
.参数 file, 文本型, , ini文件名



.子程序 INI_节点删除_VIP, 整数型, , DeleteIniPwd删除指定的ini小节.支持加密文件
.参数 section, 文本型, , 小节名
.参数 key, 文本型, , 变量名. 如果这个变量为空串，则删除整个section小节
.参数 file, 文本型, , ini文件名
.参数 pwd, 文本型, , 密码



.子程序 后台_图色锁定_VIP, 整数型, , LockDisplay锁定指定窗口的图色数据(不刷新) <收费功能>
.参数 lock, 整数型, , 0关闭锁定  1 开启锁定



.子程序 对话框_选择文件夹, 文本型, , SelectDirectory弹出选择文件夹对话框，并返回选择的文件夹


.子程序 对话框_选择文件, 文本型, , SelectFile弹出选择文件对话框，并返回选择的文件


.子程序 输入法_置窗口开关, 整数型, , EnableIme设置是否关闭绑定窗口所在进程的输入法
.参数 enable, 整数型, , 0关闭  1 开启



.子程序 置高速DX开关, 整数型, , EnableSpeedDx设置是否开启高速dx键鼠模式。 默认是关闭
.参数 enable, 整数型, , 0关闭  1 开启



.子程序 信息_置文本到文件, 整数型, , FoobarSetSave设置保存指定的Foobar滚动文本区信息到文件
.参数 hwnd, 整数型, , 指定的Foobar窗口句柄,此句柄必须是通过CreateFoobarxxx创建而来
.参数 file, 文本型, , 保存的文件名
.参数 enable, 整数型, , 取值如下0 : 关闭向文件输出 (默认是0) 1 : 开启向文件输出
.参数 header, 文本型, , 输出的附加头信息. 具体请参照接口说明



.子程序 文件_下载, 整数型, , DownloadFile从internet上下载一个文件,返回值1 : 成功-1 : 网络连接失败-2 : 写入文件失败
.参数 url, 文本型, , 下载的url地址
.参数 save_file, 文本型, , 要保存的文件名
.参数 timeout, 整数型, , 连接超时时间，单位是毫秒



.子程序 窗口_枚举句柄_VIP, 文本型, , EnumWindowSuper根据两组设定条件来枚举指定窗口. <收费功能
.参数 spec1, 文本型, , 查找串1. (内容取决于flag1的值)
.参数 flag1, 整数型, , 取值如下: 0表示spec1的内容是标题1表示spec1的内容是程序名字. (比如notepad)2表示spec1的内容是类名3表示spec1的内容是程序路径.(不包含盘符,比如\windows\system32)4表示spec1的内容是父句柄.(十进制表达的串)5表示spec1的内容是父窗口标题6表示spec1的内容是父窗口类名7表示spec1的内容是顶级窗口句柄.(十进制表达的串) 8表示spec1的内容是顶级窗口标题 9表示spec1的内容是顶级窗口类名
.参数 type1, 整数型, , 取值如下0精确判断1模糊判断
.参数 spec2, 文本型, , 查找串2. (内容取决于flag2的值)
.参数 flag2, 整数型, , 取值如下: 0表示spec2的内容是标题1表示spec2的内容是程序名字. (比如notepad)2表示spec2的内容是类名3表示spec2的内容是程序路径.(不包含盘符,比如\windows\system32)4表示spec2的内容是父句柄.(十进制表达的串)5表示spec2的内容是父窗口标题6表示spec2的内容是父窗口类名7表示spec2的内容是顶级窗口句柄.(十进制表达的串) 8表示spec2的内容是顶级窗口标题 9表示spec2的内容是顶级窗口类名
.参数 type2, 整数型, , 取值如下0精确判断1模糊判断
.参数 sort, 整数型, , 0不排序1对枚举出的窗口进行排序,按照窗口打开顺序



.类模块 微锐答题, , , 

.子程序 创建对象, 逻辑型, , 创建微锐对象,成功返回真，失败返回假


.子程序 截图并发送, 文本型, , SendImage返回题号ID
.参数 上传密码串, 文本型, , 
.参数 游戏ID, 整数型, , 
.参数 起点x, 整数型, , 
.参数 起点y, 整数型, , 
.参数 截图宽, 整数型, , 
.参数 截图高, 整数型, , 
.参数 超时设定, 整数型, , 



.子程序 发送文件, 文本型, , SendFile返回题号ID
.参数 上传密码串, 文本型, , 
.参数 游戏ID, 整数型, , 
.参数 图片路径, 文本型, , 
.参数 超时设定, 整数型, , 



.子程序 特殊发送, 文本型, , SendGif直接发送Gif或无压缩发送
.参数 上传密码串, 文本型, , 
.参数 游戏ID, 整数型, , 
.参数 图片路径, 文本型, , 
.参数 超时设定, 整数型, , 



.子程序 获取答案, 文本型, , GetAnswer
.参数 题目ID, 文本型, , 



.子程序 发送错误报告, 空白型, , Report
.参数 题目ID, 文本型, , 
.参数 上传密码串, 文本型, , 



.子程序 置图片压缩质量, 空白型, , Setquality
.参数 压缩质量, 整数型, , 



.子程序 置异步超时时间, 空白型, , Setasync
.参数 超时时间, 整数型, , 



.子程序 注册用户, 文本型, , RegUser
.参数 用户名, 文本型, , 
.参数 密码, 文本型, , 



.子程序 用户登陆, 文本型, , LogIn成功返回验证串
.参数 用户名, 文本型, , 
.参数 密码, 文本型, , 



.子程序 冲值, 文本型, , Pay
.参数 用户名, 文本型, , 
.参数 充值卡号, 文本型, , 



.子程序 查询, 文本型, , Check
.参数 用户名, 文本型, , 
.参数 密码, 文本型, , 



.子程序 注册子号, 文本型, , RegUserEx
.参数 用户名, 文本型, , 
.参数 密码, 文本型, , 
.参数 上传密码串, 整数型, , 



.子程序 子号登陆, 文本型, , LogInEx成功返回验证串
.参数 用户名, 文本型, , 
.参数 密码, 文本型, , 
.参数 上传密码串, 文本型, , 



.类模块 写屏类, , , 

.子程序 写字, 空白型, , DrawText;ID:201
.参数 ix, 整数型, , 起点X
.参数 iy, 整数型, , 起点Y
.参数 fh, 整数型, , 高度
.参数 fcolor, 文本型, , 颜色
.参数 astr, 文本型, , 内容



.子程序 贴图, 空白型, , DrawBMP;ID:202
.参数 ix, 整数型, , 起点X
.参数 iy, 整数型, , 起点Y
.参数 transcolor, 文本型, , 透明色，取值范围：0-255
.参数 abmp, 文本型, , 图片路径



.子程序 屏幕中间打字, 空白型, , CenterText;ID:203
.参数 fh, 整数型, , 高度
.参数 fcolor, 文本型, , 颜色
.参数 astr, 文本型, , 内容



.子程序 屏幕中间蒙板, 空白型, , CenterMask;ID:204
.参数 fillcolor, 文本型, , 填充色
.参数 bdcolor, 文本型, , 边框色
.参数 bdwidth, 整数型, , 边框宽度
.参数 width, 整数型, , 宽度
.参数 height, 整数型, , 高度
.参数 alpha, 整数型, , 透明度，取值范围：0-255



.子程序 清除所有, 空白型, , ClearAll;ID:206


.子程序 清除区域, 空白型, , ClearRect;ID:207
.参数 x1, 整数型, , 起点X
.参数 y1, 整数型, , 起点Y
.参数 x2, 整数型, , 终点X
.参数 y2, 整数型, , 终点Y



.子程序 创建或修改蒙板, 空白型, , MaskRect;ID:208
.参数 maskname, 文本型, , 名字
.参数 fillcolor, 文本型, , 填充色
.参数 bdcolor, 文本型, , 边框色
.参数 bdwidth, 整数型, , 边框宽度
.参数 x1, 整数型, , 起点X
.参数 y1, 整数型, , 起点Y
.参数 x2, 整数型, , 终点X
.参数 y2, 整数型, , 终点Y
.参数 alpha, 整数型, , 透明度，取值范围：0-255



.子程序 删除蒙板, 空白型, , DelMask;ID:205
.参数 maskname, 文本型, , 名字



.类模块 多线程类, , , 

.子程序 线程_启动, 逻辑型, , 新建并启动一个线程，返回真表示成功，假表示失败。
.参数 欲执行的子程序, 子程序指针, , 
.参数 参数数据, 整数型, 可空, 
.参数 线程句柄, 整数型, 参考 可空, 



.子程序 创建进入许可证, 多线程许可证, , 


.子程序 删除进入许可证, 空白型, , 
.参数 进入许可证, 多线程许可证, , 



.子程序 进入许可区, 空白型, , 
.参数 进入许可证, 多线程许可证, , 



.子程序 退出许可区, 空白型, , 
.参数 进入许可证, 多线程许可证, , 



.子程序 线程_等待, 逻辑型, , 
.参数 线程句柄, 整数型, , 
.参数 等待时间, 整数型, 可空, 单位为毫秒，0和-1表示无限等待



.子程序 线程_挂起, 逻辑型, , 
.参数 线程句柄, 整数型, , 



.子程序 线程_继续, 逻辑型, , 继续运行被挂起的线程
.参数 线程句柄, 整数型, , 



.子程序 线程_取返回值, 整数型, , 使用前请保证线程已经运行完毕，如线程尚未中断将返回STILL_ACTIVE(值为259)。子程序返回值为其他数据类型将返回指针。
.参数 线程句柄, 整数型, , 



.子程序 线程_取状态, 整数型, , 返回0表示该线程不存在(或句柄已被关闭)，返回1为运行完毕，2为正在运行。
.参数 线程句柄, 整数型, , 



.子程序 线程_强制结束, 逻辑型, , 
.参数 线程句柄, 整数型, , 



.子程序 线程_关闭句柄, 逻辑型, , 
.参数 线程句柄, 整数型, , 



.子程序 线程_取当前句柄, 整数型, , 


.类模块 大漠多线程, , , 暂时只支持大漠中文版

.子程序 启动, 整数型, , 启动一个线程(脚本),成功返回0以上线程ID|并把线程ID传递到线程子程序内，失败返回0以下的负数，例如-1
.参数 子程序, 子程序指针, , 要启动线程的子程序
.参数 大漠版本, 整数型, , 要创建的大漠版本，0：大漠中文版，1：大漠英文版



.子程序 取状态, 整数型, ,  0:线程不存在(或句柄已被关闭)，1:运行完毕，2:正在运行
.参数 i, 整数型, , 线程ID



.子程序 暂停, 逻辑型, , 暂停一个脚本线程
.参数 i, 整数型, , 线程ID



.子程序 继续, 逻辑型, , 继续暂停的脚本线程
.参数 i, 整数型, , 线程ID



.子程序 等待, 逻辑型, , 指定时间内等待线程
.参数 i, 整数型, , 线程ID
.参数 等待时间, 整数型, 可空, 单位为毫秒，0和-1表示无限等待



.子程序 停止, 空白型, , 关闭指定线程(脚本)
.参数 i, 整数型, , 线程ID



.子程序 停止全部, 空白型, , 关闭所有线程(脚本)


.子程序 取回大漠_中文版, 大漠中文版, , 在线程内取回启动后创建的大漠对象
.参数 i, 整数型, , 线程ID



.子程序 取回大漠_英文版, 大漠英文版, , 在线程内取回启动后创建的大漠对象
.参数 i, 整数型, , 线程ID



.子程序 置信息_基本, 空白型, , 线程外使用
.参数 i, 整数型, , 线程ID
.参数 hwnd, 整数型, 参考 可空, 窗口句柄



.子程序 置信息_整数型, 空白型, , 线程外使用
.参数 i, 整数型, , 线程ID
.参数 整数1, 整数型, 参考 可空, 
.参数 整数2, 整数型, 参考 可空, 
.参数 整数3, 整数型, 参考 可空, 
.参数 整数4, 整数型, 参考 可空, 
.参数 整数5, 整数型, 参考 可空, 



.子程序 置信息_文本型, 空白型, , 线程外使用
.参数 i, 整数型, , 线程ID
.参数 文本1, 文本型, 参考 可空, 
.参数 文本2, 文本型, 参考 可空, 
.参数 文本3, 文本型, 参考 可空, 
.参数 文本4, 文本型, 参考 可空, 
.参数 文本5, 文本型, 参考 可空, 



.子程序 置信息_逻辑型, 空白型, , 线程外使用
.参数 i, 整数型, , 线程ID
.参数 逻辑1, 逻辑型, 参考 可空, 
.参数 逻辑2, 逻辑型, 参考 可空, 
.参数 逻辑3, 逻辑型, 参考 可空, 
.参数 逻辑4, 逻辑型, 参考 可空, 
.参数 逻辑5, 逻辑型, 参考 可空, 



.子程序 取信息_基本, 空白型, , 线程内使用
.参数 i, 整数型, , 线程ID
.参数 窗口句柄, 整数型, 参考 可空, 窗口句柄
.参数 线程句柄, 整数型, 参考 可空, 已创建的线程句柄
.参数 当前线程大漠类型, 整数型, 参考 可空, 0：大漠中文版，1：大漠英文版



.子程序 取信息_整数型, 空白型, , 线程内使用
.参数 i, 整数型, , 线程ID
.参数 整数1, 整数型, 参考 可空, 
.参数 整数2, 整数型, 参考 可空, 
.参数 整数3, 整数型, 参考 可空, 
.参数 整数4, 整数型, 参考 可空, 
.参数 整数5, 整数型, 参考 可空, 



.子程序 取信息_文本型, 空白型, , 线程内使用
.参数 i, 整数型, , 线程ID
.参数 文本1, 文本型, 参考 可空, 
.参数 文本2, 文本型, 参考 可空, 
.参数 文本3, 文本型, 参考 可空, 
.参数 文本4, 文本型, 参考 可空, 
.参数 文本5, 文本型, 参考 可空, 



.子程序 取信息_逻辑型, 空白型, , 线程内使用
.参数 i, 整数型, , 线程ID
.参数 逻辑1, 逻辑型, 参考 可空, 
.参数 逻辑2, 逻辑型, 参考 可空, 
.参数 逻辑3, 逻辑型, 参考 可空, 
.参数 逻辑4, 逻辑型, 参考 可空, 
.参数 逻辑5, 逻辑型, 参考 可空, 



.子程序 取当前线程句柄, 整数型, , 必须在线程内调用


.子程序 保护区_创建, 多线程许可证, , __启动窗口_创建完毕 事件下调用（必须）


.子程序 保护区_删除, 空白型, , __启动窗口_将被销毁 事件下调用（必须）
.参数 进入许可证, 多线程许可证, , 



.子程序 保护区_进入, 空白型, , 线程内访问全局或程序集变量，窗口组件必须调用此命令进入保护区
.参数 进入许可证, 多线程许可证, , 



.子程序 保护区_退出, 空白型, , 无需访问全局和窗口组件后调用此命令退出保护区
.参数 进入许可证, 多线程许可证, , 



.类模块 ADO数据库类, , , 

.子程序 创建Access数据库, 逻辑型, , 
.参数 数据库路径, 文本型, , 



.子程序 连接, 逻辑型, , 以SQL文本的方式连接数据库
.参数 连接语句, 文本型, , 



.子程序 连接Access, 逻辑型, , 
.参数 数据库路径, 文本型, , 
.参数 密码, 文本型, 可空, 



.子程序 连接SqlServer, 逻辑型, , 
.参数 MySQL服务器, 文本型, , 
.参数 MySQL数据库名, 文本型, , 
.参数 MySQL用户名, 文本型, 可空, 
.参数 MySQL密码, 文本型, 可空, 



.子程序 断开, 空白型, , 


.子程序 建表, 逻辑型, , 使用ADOX建表，方便，快捷，可能出错，I don't know why
.参数 数据表名, 文本型, , 
.参数 字段结构, 未知类型0x41010AB9, 数组, 



.子程序 建表_SQL方式, 逻辑型, , 使用SQL语句新建数据表，方便，快捷，成功率高，I don't know why
.参数 表名, 文本型, , 
.参数 字段结构, 未知类型0x41010ABA, 数组, 



.子程序 执行SQL, 对象, , 返回记录集对象
.参数 SQL, 文本型, , 



.子程序 是否已连接, 逻辑型, , 


.子程序 开始事务, 逻辑型, , 


.子程序 提交事务, 逻辑型, , 


.子程序 回滚事务, 逻辑型, , 


.类模块 ADO记录集类, , , 

.子程序 打开, 逻辑型, , 打开一个表或者执行SQL，返回记录集
.参数 连接语句, 文本型, , 可以是数据表名，也可以是SQL语句
.参数 数据库, ADO数据库类, , 
.参数 是否SQL, 逻辑型, 可空, 如果为真，则把第一个参数当做SQL语句来处理，否则当做数据表名



.子程序 关闭, 空白型, , 关闭一个记录集，必须调用


.子程序 是否已打开, 逻辑型, , 


.子程序 取记录数量, 整数型, , 


.子程序 添加记录, 逻辑型, , 


.子程序 删除记录, 逻辑型, , 
.参数 删除类型, 整数型, 可空, 默认为当前记录



.子程序 读记录_字段名, 变体型, , 
.参数 字段名, 文本型, , 



.子程序 读记录_字段序号, 变体型, , 
.参数 字段序号, 整数型, , 



.子程序 写记录_字段名, 逻辑型, , 
.参数 字段名, 文本型, , 
.参数 记录, 变体型, , 



.子程序 写记录_字段序号, 逻辑型, , 
.参数 字段序号, 整数型, , 
.参数 记录, 变体型, , 



.子程序 跳到记录, 逻辑型, , 
.参数 距离, 整数型, , 
.参数 起始位置, 整数型, 可空, 默认为0~



.子程序 下一条, 逻辑型, , 


.子程序 上一条, 逻辑型, , 


.子程序 到首记录, 逻辑型, , 


.子程序 到尾记录, 逻辑型, , 


.子程序 首记录前, 逻辑型, , 在首记录前，返回真


.子程序 尾记录后, 逻辑型, , 在尾记录后，返回真


.子程序 更新, 逻辑型, , 对记录进行任何操作后务必调用本方法


.子程序 撤销, 逻辑型, , 


.子程序 批量更新, 逻辑型, , 


.子程序 批量撤销, 逻辑型, , 


.类模块 皮肤类, , , 

.子程序 载入默认, 空白型, , 加载当前目录下的SHE皮肤文件（不推荐）


.子程序 载入文件, 空白型, , 加载一个SHE皮肤文件
.参数 皮肤路径, 文本型, , 
.参数 皮肤密码, 文本型, 可空, 



.子程序 载入资源, 空白型, , 加载图片组资源的皮肤，字节集SHE
.参数 资源, 字节集, , 
.参数 密码, 文本型, 可空, 
.参数 色度, 整数型, 可空, 
.参数 饱和度, 整数型, 可空, 
.参数 亮度, 整数型, 可空, 



.子程序 卸载皮肤, 空白型, ,  (注意:在换肤或者程序退出时换肤库会自动卸载当前皮肤,无需再调用此接口进行卸载)


.子程序 卸载指定, 空白型, , 卸载指定句柄的窗体或者控件的皮肤
.参数 句柄, 整数型, , 



.子程序 置透明度, 空白型, , 设置指定句柄的窗体的透明度
.参数 窗口句柄, 整数型, , 
.参数 透明度, 整数型, , 



.子程序 取指定颜色, 空白型, , 
.参数 窗口句柄, 整数型, , 
.参数 横坐标, 整数型, , 
.参数 纵坐标, 整数型, , 



.子程序 置皮肤参数, 空白型, , 
.参数 色调, 整数型, , 
.参数 饱和度, 整数型, , 
.参数 亮度, 整数型, , 



.子程序 置换肤类型, 空白型, , 指定窗体和控件的换肤类型
.参数 句柄, 整数型, , 
.参数 换肤类型, 整数型, , 



.子程序 置填充绘制锁定, 空白型, , 用于填充表格或者列表控件数据时，重复绘制滚动条影响执行效率问题
.参数 句柄, 整数型, , 
.参数 锁定, 整数型, , 是否锁定。1为锁定，0为解锁



.子程序 置透明特效, 空白型, , 设置Vista特效
.参数 有效位, 整数型, , Vista特效是否有效,1为开启特效,0为关闭特效



.子程序 置控件背景色, 空白型, , 设置控件的背景色(目前仅对单选框,复选框,分组框有效)
.参数 句柄, 整数型, , 
.参数 红色分量, 整数型, , 取值范围0-255
.参数 绿色分量, 整数型, , 取值范围0-255
.参数 蓝色分量, 整数型, , 取值范围0-255



.子程序 置控件文本色, 空白型, , 
.参数 句柄, 整数型, , 
.参数 红色分量, 整数型, , 取值范围0-255
.参数 绿色分量, 整数型, , 取值范围0-255
.参数 蓝色分量, 整数型, , 取值范围0-255



.子程序 置窗体移动锁定, 空白型, , 设置窗体是否可以移动
.参数 句柄, 整数型, , 
.参数 可否移动, 整数型, , 0为不可移动,1为可移动



.子程序 置透明参数, 空白型, , 设置透明窗体参数
.参数 透明度, 整数型, , 0－255, 默认值0
.参数 亮度, 整数型, , 0－255, 默认值0
.参数 锐度, 整数型, , 0－12, 默认值0
.参数 阴影大小, 整数型, , 0－18, 默认值0
.参数 水平偏移, 整数型, , 0-25,默认值0
.参数 垂直偏移, 整数型, , 0-25,默认值0
.参数 红色分量, 整数型, , 0－255, 默认值0
.参数 绿色分量, 整数型, , 0－255, 默认值0
.参数 蓝色分量, 整数型, , 0－255, 默认值0



.子程序 绘制元素, 空白型, , 绘制指定设备上下文的元素
.参数 hDtDC, 整数型, , 目标设备上下文
.参数 left, 整数型, , 左上角水平坐标
.参数 top, 整数型, , 左上角垂直坐标
.参数 right, 整数型, , 右下角水平坐标
.参数 bottom, 整数型, , 右下角垂直坐标
.参数 nMRect, 整数型, , 元素id



.子程序 返回签名结果, 空白型, , 返回签名结果,已签名返回1，未签名返回0


.程序集 __HIDDEN_TEMP_MOD__, , , 

.子程序 大漠插件注册, 逻辑型, , 注册插件，成功返回真，失败返回假
.参数 插件路径, 文本型, , 插件路径,例如：E:\插件包\dm.dll



.子程序 延时脚本, 空白型, , 多线程延时
.参数 毫秒, 整数型, , 1秒=1000毫秒



.子程序 右下角弹窗, 空白型, , 
.参数 公告标题, 文本型, 可空, 
.参数 公告内容, 文本型, , 
.参数 文本颜色, 文本型, , 颜色字符串，例：FFFFFF
.参数 自动销毁时间, 整数型, 可空, 如果省略，则默认为10秒,单位为毫秒



.子程序 延迟脚本, 空白型, , 单线程API延时，可替代延时脚本
.参数 毫秒, 整数型, , 1000毫秒 = 1秒



.子程序 内存优化, 空白型, , 整理内存并释放


.子程序 删除自身_重启后, 空白型, , 利用MoveFileEx函数的MOVEFILE_DELAY_UNTIL_REBOOT常数，让系统在下次重启时自动删除文件，此方法多用于在线升级、程序卸载等方面


.子程序 删除自身_ping, 空白型, , 利用Ping的-n参数延迟后续删除自身命令，延时多长可根据个人需要而定


.子程序 取网络时间_百度, 日期时间型, , open.baidu.com


.子程序 取网络时间_科学院, 文本型, , www.time.ac.cn/stime.asp


.子程序 微锐插件注册, 逻辑型, , 注册插件，成功返回真，失败返回假
.参数 插件路径, 文本型, , 插件路径,例如：E:\插件包\Microrui.dll



.子程序 取百分比计算, 整数型, , 计算百分比X坐标值，返回一个整数型坐标
.参数 左X, 整数型, , 左X坐标值
.参数 右X, 整数型, , 右X坐标值
.参数 百分比, 整数型, , 要加血的百分比下限



.子程序 取技能间隔计算, 逻辑型, , 计算技能的释放时间，可释放返回真，不可释放返回假
.参数 上次释放时间, 日期时间型, , 上次释放技能的时间，可用取现行时间（）记录
.参数 技能冷却时间, 整数型, , 技能冷却时间，整数型。单位：秒



.子程序 初始化技能时间, 日期时间型, , 初始化上次释放技能的时间，返回一个时间。脚本开头使用一次即可


.子程序 颜色分解RGB, 空白型, , 分解一个16进制的颜色，分别得到R.G.B三色，同按键精灵的ColorToRGB 颜色转RGB
.参数 颜色, 文本型, , 16进制的颜色值，例如：FFFFFF
.参数 R, 整数型, 参考, 返回的R变量
.参数 G, 整数型, 参考, 返回的G变量
.参数 B, 整数型, 参考, 返回的B变量



.子程序 热键_注册, 整数型, , 注册一个全局热键. (成功返回热键ID,失败返回0)
.参数 窗口句柄, 整数型, , 通常为    取窗口句柄()
.参数 功能键, 整数型, 可空, 1 Alt  2 Ctrl  4 Shitf  8 Win 若要两个或以上的状态键按则把它们的值相加.
.参数 键代码, 整数型, , 
.参数 子程序指针, 子程序指针, , 响应热键事件的子程序指针,四个参数(窗口句柄,消息786,热键ID,参数)



.子程序 热键_撤销, 整数型, , 撤销指定热键 (成功返回非0,失败返回0)
.参数 窗口句柄, 整数型, , 同热键_注册（）
.参数 热键ID, 整数型, , 注册成功的热键ID



.子程序 热键_卸载, 空白型, , 撤销所有热键并卸载,该命令会在本类销毁时自动被调用


.子程序 取随机姓名, 文本型, , 随机生成姓名


.子程序 取随机字母, 文本型, , 随机生成字母
.参数 欲取出个数, 整数型, , 欲随机取出字母个数
.参数 字母大小写, 逻辑型, 可空, 真=大写 假=小写 留空=随机大小写



.子程序 Goto, 空白型, , 跳转到指定标签后执行代码（可跳至程序中任何位置）,不可跳转到循环体内，建议不要乱跳，少用
.参数 首地址, 子程序指针, , 子程序的首地址，这个首地址可以使用“&子程序名”得到的指针，注意，如果子程序内有参数，则必须用Goto_取地址()得到的指针
.参数 标签, 字节集, , 要跳到的标签，请使用“置入代码（）”来定义 标签，详见例程。



.子程序 Goto_取首地址, 子程序指针, , 取得用于Goto()函数第一个参数的子程序地址，一定要放在标签定义代码之前。一个子程序内添加一个即可！


.子程序 Goto_创建标签, 空白型, , 生成一组标签写到GOTO文件夹内（运行目录），可用于添加到图片资源内，以便GOTO调用
.参数 标签数量, 整数型, , 需要生成的标签数量




 ' 不属于任何一个程序集、类模块的函数：
