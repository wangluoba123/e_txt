 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 505
    高度 = 556
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 1
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 真
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    窗口类名 = “”
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “扫雷-情情情情何以堪版”
    帮助文件名 = “”



.图片 图片1, " ' 已保存到：D:\易语言学习\Data\MyMineSweeper.e\图片1", , 1
.图片 图片2, " ' 已保存到：D:\易语言学习\Data\MyMineSweeper.e\图片2", , 2
.图片 图片3, " ' 已保存到：D:\易语言学习\Data\MyMineSweeper.e\图片3", , 3
.图片 图片4, " ' 已保存到：D:\易语言学习\Data\MyMineSweeper.e\图片4", , 4
.图片 图片5, " ' 已保存到：D:\易语言学习\Data\MyMineSweeper.e\图片5", , 5
.图片 图片6, " ' 已保存到：D:\易语言学习\Data\MyMineSweeper.e\图片6", , 6
.图片 图片7, " ' 已保存到：D:\易语言学习\Data\MyMineSweeper.e\图片7", , 7
.图片 图片8, " ' 已保存到：D:\易语言学习\Data\MyMineSweeper.e\图片8", , 8
.图片 图片9, " ' 已保存到：D:\易语言学习\Data\MyMineSweeper.e\图片9", , 空白
.图片 图片10, " ' 已保存到：D:\易语言学习\Data\MyMineSweeper.e\图片10", , 雷
.图片 图片11, " ' 已保存到：D:\易语言学习\Data\MyMineSweeper.e\图片11", , 正常
.图片 图片12, " ' 已保存到：D:\易语言学习\Data\MyMineSweeper.e\图片12", , 悬浮
.图片 图片13, " ' 已保存到：D:\易语言学习\Data\MyMineSweeper.e\图片13", , 按下
.图片 图片14, " ' 已保存到：D:\易语言学习\Data\MyMineSweeper.e\图片14", , 旗帜
.图片 图片15, " ' 已保存到：D:\易语言学习\Data\MyMineSweeper.e\图片15", , 问号


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 5 0 系统核心支持库




数据类型 块信息, , 
    .成员 横向, 整数型, , , 
    .成员 纵向, 整数型, , , 
    .成员 宽度, 整数型, , , 
    .成员 高度, 整数型, , , 
    .成员 状态, 整数型, , , 
    .成员 实质, 整数型, , , 

数据类型 检查信息, , 
    .成员 序号, 整数型, , , 
    .成员 检查, 逻辑型, , , 

.全局变量 状态, 整数型, , "15", 
.全局变量 块数组, 块信息, , "0", 
.全局变量 总宽, 整数型, , , 
.全局变量 总高, 整数型, , , 
.全局变量 行数, 整数型, , , 
.全局变量 列数, 整数型, , , 
.全局变量 待解数组, 整数型, , "0", 
.全局变量 已处理数组, 整数型, , "0", 

.窗口程序集 窗口程序集1, , , 

.子程序 __启动窗口_创建完毕, 空白型, , 
加载状态图片 ()
置随机数种子 ()
处理事件 ()

.子程序 __启动窗口_首次激活, 空白型, , 
_按钮1_被单击 ()

.子程序 _按钮1_被单击, 空白型, , 
.判断开始 (.)
    赋值 (总宽, 450)
    赋值 (总高, 450)
    赋值 (行数, 10)
    赋值 (列数, 10)
    布置地雷 (10)
.判断 (.)
    赋值 (总宽, 450)
    赋值 (总高, 450)
    赋值 (行数, 15)
    赋值 (列数, 15)
    布置地雷 (60)
.判断 (.)
    赋值 (总宽, 450)
    赋值 (总高, 450)
    赋值 (行数, 15)
    赋值 (列数, 15)
    布置地雷 (224)
.默认
    
.判断结束


.子程序 加载状态图片, 空白型, , 
赋值 (状态 [1], 载入图片 (#图片1))
赋值 (状态 [2], 载入图片 (#图片2))
赋值 (状态 [3], 载入图片 (#图片3))
赋值 (状态 [4], 载入图片 (#图片4))
赋值 (状态 [5], 载入图片 (#图片5))
赋值 (状态 [6], 载入图片 (#图片6))
赋值 (状态 [7], 载入图片 (#图片7))
赋值 (状态 [8], 载入图片 (#图片8))
赋值 (状态 [9], 载入图片 (#图片9))
赋值 (状态 [10], 载入图片 (#图片10))
赋值 (状态 [11], 载入图片 (#图片11))
赋值 (状态 [12], 载入图片 (#图片12))
赋值 (状态 [13], 载入图片 (#图片13))
赋值 (状态 [14], 载入图片 (#图片14))
赋值 (状态 [15], 载入图片 (#图片15))

.子程序 布置地雷, 空白型, , 
.参数 雷个数, 整数型, , 

.局部变量 n, 整数型, , , 
.局部变量 块总数, 整数型, , , 
.局部变量 雷数组, 整数型, , "0", 
.局部变量 临时数据, 整数型, , , 
.局部变量 临时逻辑值, 逻辑型, , , 

赋值 (块总数, 相乘 (行数, 列数))
重定义数组 (块数组, 假, 块总数)
清除数组 (雷数组)
.判断循环首 (小于 (取数组成员数 (雷数组), 雷个数))
    赋值 (临时数据, 取随机数 (1, 块总数))
    赋值 (临时逻辑值, 假)
    .计次循环首 (取数组成员数 (雷数组), n)
        .如果真 (等于 (雷数组 [n], 临时数据))
            赋值 (临时逻辑值, 真)
            跳出循环 ()
        .如果真结束
        
    .计次循环尾 ()
    .如果真 (等于 (临时逻辑值, 假))
        加入成员 (雷数组, 临时数据)
    .如果真结束
    
.判断循环尾 ()

.计次循环首 (雷个数, n)
    赋值 (块数组 [雷数组] [n], 实质, 10)
.计次循环尾 ()

.计次循环首 (块总数, n)
    赋值 (块数组 [n], 宽度, 相除 (总宽, 列数))
    赋值 (块数组 [n], 高度, 相除 (总高, 行数))
    .如果 (等于 (求余数 (n, 列数), 0))
        赋值 (块数组 [n], 横向, 相乘 (相减 (列数, 1), 块数组 [n], 宽度))
    .否则
        赋值 (块数组 [n], 横向, 相乘 (相减 (求余数 (n, 列数), 1), 块数组 [n], 宽度))
    .如果结束
    赋值 (块数组 [n], 纵向, 相乘 (取整 (相除 (相减 (n, 1), 行数)), 块数组 [n], 高度))
    赋值 (块数组 [n], 状态, 11)
.计次循环尾 ()

.计次循环首 (块总数, n)
    状态.画图片 ( [块数组] [n], 状态, 块数组 [n], 横向, 块数组 [n], 纵向, 相除 (总宽, 列数), 相除 (总高, 行数), )
    .如果真 (不等于 (块数组 [n], 实质, 10))
        赋值 (块数组 [n], 实质, 检查周围数组实质 (n, 10))
    .如果真结束
    
.计次循环尾 ()




.子程序 检查周围数组实质, 整数型, , 
.参数 指定序号, 整数型, , 
.参数 指定实质, 整数型, , 
.参数 周围数组, 整数型, 可空 数组, 
.参数 指定实质数组, 整数型, 可空 数组, 

.局部变量 块总数, 整数型, , , 
.局部变量 那个, 检查信息, , "8", 
.局部变量 n, 整数型, , , 
.局部变量 m, 整数型, , , 
.局部变量 临时数据, 整数型, , , 

赋值 (块总数, 相乘 (行数, 列数))
赋值 (那个 [1].序号, 相减 (指定序号, 列数, 1))
赋值 (那个 [2].序号, 相减 (指定序号, 列数))
赋值 (那个 [3].序号, 相加 (相减 (指定序号, 列数), 1))
赋值 (那个 [4].序号, 相减 (指定序号, 1))
赋值 (那个 [5].序号, 相加 (指定序号, 1))
赋值 (那个 [6].序号, 相减 (相加 (指定序号, 列数), 1))
赋值 (那个 [7].序号, 相加 (指定序号, 列数))
赋值 (那个 [8].序号, 相加 (指定序号, 列数, 1))
.判断开始 (等于 (指定序号, 1)) ' 左上角
    连续赋值 (真, 那个 [5].检查, 那个 [7].检查, 那个 [8].检查)
.判断 (等于 (指定序号, 列数)) ' 右上角
    连续赋值 (真, 那个 [4].检查, 那个 [6].检查, 那个 [7].检查)
.判断 (等于 (相减 (块总数, 指定序号), 相减 (列数, 1))) ' 左下角
    连续赋值 (真, 那个 [2].检查, 那个 [3].检查, 那个 [5].检查)
.判断 (等于 (指定序号, 块总数)) ' 右下角
    连续赋值 (真, 那个 [1].检查, 那个 [2].检查, 那个 [4].检查)
.判断 (小于 (指定序号, 列数)) ' 最上行
    连续赋值 (真, 那个 [4].检查, 那个 [5].检查, 那个 [6].检查, 那个 [7].检查, 那个 [8].检查)
.判断 (等于 (求余数 (指定序号, 列数), 1)) ' 最左列
    连续赋值 (真, 那个 [2].检查, 那个 [3].检查, 那个 [5].检查, 那个 [7].检查, 那个 [8].检查)
.判断 (等于 (求余数 (指定序号, 列数), 0)) ' 最右列
    连续赋值 (真, 那个 [1].检查, 那个 [2].检查, 那个 [4].检查, 那个 [6].检查, 那个 [7].检查)
.判断 (小于 (相减 (块总数, 指定序号), 列数)) ' 最下行
    连续赋值 (真, 那个 [1].检查, 那个 [2].检查, 那个 [3].检查, 那个 [4].检查, 那个 [5].检查)
.默认
    连续赋值 (真, 那个 [1].检查, 那个 [2].检查, 那个 [3].检查, 那个 [4].检查, 那个 [5].检查, 那个 [6].检查, 那个 [7].检查, 那个 [8].检查)
.判断结束

赋值 (临时数据, 0)
.如果真 (等于 (是否为空 (周围数组), 假))
    清除数组 (周围数组)
.如果真结束
.如果真 (等于 (是否为空 (指定实质数组), 假))
    清除数组 (指定实质数组)
.如果真结束

.计次循环首 (8, n)
    .如果真 (等于 (那个 [n], 检查, 真))
        .如果真 (等于 (是否为空 (周围数组), 假))
            加入成员 (周围数组, 那个 [n], 序号)
        .如果真结束
        .如果真 (等于 (块数组 [那个] [n], 序号, 实质, 指定实质))
            赋值 (临时数据, 相加 (临时数据, 1))
            .如果真 (等于 (是否为空 (指定实质数组), 假))
                加入成员 (指定实质数组, 那个 [n], 序号)
            .如果真结束
            
        .如果真结束
        
    .如果真结束
    
.计次循环尾 ()
返回 (临时数据)

.子程序 _画板_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 余数, 整数型, , , 
.局部变量 倍数, 整数型, , , 
.局部变量 序号, 整数型, , , 
.局部变量 n, 整数型, , , 

 ' 输出调试文本 (“横向位置为：” ＋ 到文本 (横向位置) ＋ “；纵向位置为：” ＋ 到文本 (纵向位置))
赋值 (余数, 相加 (相除 (横向位置, 块数组 [1].宽度), 1))
赋值 (倍数, 相除 (纵向位置, 块数组 [1].高度))
赋值 (序号, 相加 (相乘 (倍数, 列数), 余数))

.计次循环首 (取数组成员数 (块数组), n)
    .如果 (并且 (等于 (n, 序号), 等于 (块数组 [n], 状态, 11)))
        状态.画图片 ( [13], 块数组 [n], 横向, 块数组 [n], 纵向, 块数组 [n], 宽度, 块数组 [n], 高度, )
    .否则
        状态.画图片 ( [块数组] [n], 状态, 块数组 [n], 横向, 块数组 [n], 纵向, 块数组 [n], 宽度, 块数组 [n], 高度, )
    .如果结束
    
.计次循环尾 ()


.子程序 _画板_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 余数, 整数型, , , 
.局部变量 倍数, 整数型, , , 
.局部变量 序号, 整数型, , , 
.局部变量 n, 整数型, , , 
.局部变量 周围数组, 整数型, , , 

 ' 输出调试文本 (“横向位置为：” ＋ 到文本 (横向位置) ＋ “；纵向位置为：” ＋ 到文本 (纵向位置))
赋值 (余数, 相加 (相除 (横向位置, 块数组 [1].宽度), 1))
赋值 (倍数, 相除 (纵向位置, 块数组 [1].高度))
赋值 (序号, 相加 (相乘 (倍数, 列数), 余数))
.如果 (或者 (等于 (块数组 [序号], 状态, 14), 等于 (块数组 [序号], 状态, 15)))
    
.否则
    .如果 (等于 (块数组 [序号], 实质, 10))
        解所有方块 ()
    .否则
        .如果 (等于 (块数组 [序号], 实质, 0))
            加入成员 (待解数组, 序号)
            解空白方块 ()
        .否则
            .如果真 (小于 (块数组 [序号], 实质, 255))
                赋值 (块数组 [序号], 状态, 块数组 [序号], 实质)
                赋值 (块数组 [序号], 实质, 255)
            .如果真结束
            
        .如果结束
        
        
    .如果结束
    
.如果结束




状态.画图片 ( [块数组] [序号], 状态, 块数组 [序号], 横向, 块数组 [序号], 纵向, 块数组 [序号], 宽度, 块数组 [序号], 高度, )



.子程序 _画板_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 余数, 整数型, , , 
.局部变量 倍数, 整数型, , , 
.局部变量 序号, 整数型, , , 
.局部变量 n, 整数型, , , 
.局部变量 周围数组, 整数型, , , 

 ' 输出调试文本 (“横向位置为：” ＋ 到文本 (横向位置) ＋ “；纵向位置为：” ＋ 到文本 (纵向位置))
赋值 (余数, 相加 (相除 (横向位置, 块数组 [1].宽度), 1))
赋值 (倍数, 相除 (纵向位置, 块数组 [1].高度))
赋值 (序号, 相加 (相乘 (倍数, 列数), 余数))
.如果 (等于 (块数组 [序号], 实质, 255))
    
.否则
    .如果 (等于 (块数组 [序号], 状态, 14))
        赋值 (块数组 [序号], 状态, 15)
    .否则
        .如果 (等于 (块数组 [序号], 状态, 15))
            赋值 (块数组 [序号], 状态, 11)
        .否则
            赋值 (块数组 [序号], 状态, 14)
        .如果结束
        
    .如果结束
    
.如果结束

状态.画图片 ( [块数组] [序号], 状态, 块数组 [序号], 横向, 块数组 [序号], 纵向, 块数组 [序号], 宽度, 块数组 [序号], 高度, )

.子程序 解空白方块, 空白型, , 
.局部变量 周围数组, 整数型, , "0", 
.局部变量 周围空白块数, 整数型, , , 
.局部变量 周围空白数组, 整数型, , "0", 
.局部变量 n, 整数型, , , 
.局部变量 m, 整数型, , , 
.局部变量 包含, 逻辑型, , , 
.局部变量 匿名局部变量_350, 空白型, , , 

.判断循环首 (大于 (取数组成员数 (待解数组), 0))
    .如果 (等于 (块数组 [待解数组] [1], 实质, 0))
        赋值 (块数组 [待解数组] [1], 状态, 9)
        赋值 (块数组 [待解数组] [1], 实质, 255)
        赋值 (周围空白块数, 检查周围数组实质 (待解数组 [1], 0, 周围数组, 周围空白数组))
        删除成员 (待解数组, 1, 1)
        .计次循环首 (取数组成员数 (周围数组), n)
            .如果 (等于 (块数组 [周围数组] [n], 实质, 0))
                赋值 (块数组 [周围数组] [n], 状态, 9)
            .否则
                .如果真 (小于 (块数组 [周围数组] [n], 实质, 255))
                    赋值 (块数组 [周围数组] [n], 状态, 块数组 [周围数组] [n], 实质)
                .如果真结束
                
            .如果结束
            
        .计次循环尾 ()
        .计次循环首 (取数组成员数 (周围空白数组), n)
            .如果真 (等于 (块数组 [周围空白数组] [n], 实质, 0))
                赋值 (包含, 假)
                .计次循环首 (取数组成员数 (待解数组), m)
                    .如果真 (等于 (待解数组 [m], 周围空白数组 [n]))
                        赋值 (包含, 真)
                        跳出循环 ()
                    .如果真结束
                    
                .计次循环尾 ()
                .如果真 (等于 (包含, 假))
                    加入成员 (待解数组, 周围空白数组 [n])
                .如果真结束
                
            .如果真结束
            
        .计次循环尾 ()
    .否则
        删除成员 (待解数组, 1, 1)
    .如果结束
    
.判断循环尾 ()
.计次循环首 (取数组成员数 (块数组), n)
    状态.画图片 ( [块数组] [n], 状态, 块数组 [n], 横向, 块数组 [n], 纵向, 块数组 [n], 宽度, 块数组 [n], 高度, )
.计次循环尾 ()



.子程序 解所有方块, 空白型, , 
.局部变量 n, 整数型, , , 

.计次循环首 (取数组成员数 (块数组), n)
    .如果 (等于 (块数组 [n], 实质, 0))
        赋值 (块数组 [n], 状态, 9)
        赋值 (块数组 [n], 实质, 255)
    .否则
        .如果真 (小于 (块数组 [n], 实质, 255))
            赋值 (块数组 [n], 状态, 块数组 [n], 实质)
            赋值 (块数组 [n], 实质, 255)
        .如果真结束
        
    .如果结束
    状态.画图片 ( [块数组] [n], 状态, 块数组 [n], 横向, 块数组 [n], 纵向, 块数组 [n], 宽度, 块数组 [n], 高度, )
.计次循环尾 ()
信息框 (“杯具无处不在”, 0, “游戏是个茶几”)


 ' 不属于任何一个程序集、类模块的函数：
