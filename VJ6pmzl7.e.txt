 ' 文件类型：Windows模块源码

 ' 程序名称：斩月_磁盘-文件-目录-回收站_操作模块
 ' 程序描述：   本模块内的命令如果未特别说明则大部分命令的使用方法与原支持库
命令的使用方法相同。
   祝大家斩月顺利！如果发现有BUG欢迎指出！
                                                    易语言我吃了
                                                         09.4.9
 ' 程序作者：本源码来自易语言资源网(www.5A5X.com)
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：             易语言资源网注意事项
--============   www.5A5X.com  =============--
* 易语言资源网为易语言官方站、易语言官方论坛提供辅助资源站；本易语言资源网( www.5A5X.com)所有软件和资料均为软件作者提供和网友推荐发布而来，其版权归该软件和程序源码的合法拥有者所有，本站易语言资源网整理收集仅供易语言用户学习和易语言技术研究探讨使用，不得用于任何商业用途。如果由于以上原因造成的版权纠纷本站概不负责！
* 本站资源未经许可,任何网站不得非法盗链及抄袭本站资源；如引用，请注明来自易语言资源网，谢谢合作！
--============   www.5A5X.com  =============--
 ' 版本号：1.0
 ' 创建号：0.0



.常量 驱动器类型_可移动磁盘, "2", 公开, 
.常量 驱动器类型_本地磁盘, "3", 公开, 
.常量 驱动器类型_网络驱动器, "4", 公开, 
.常量 驱动器类型_光盘驱动器, "5", 公开, 
.常量 驱动器类型_虚拟磁盘, "6", 公开, 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 5 0 系统核心支持库
 ' spec A512548E76954B6E92C21055517615B0 3 0 特殊功能支持库




数据类型 SHFILEOPSTRUCT, , 
    .成员 句柄, 整数型, , , 
    .成员 wFunc, 整数型, , , 
    .成员 pFrom, 字节集, , , 
    .成员 pTo, 字节集, , , 
    .成员 fFlags, 短整数型, , , 
    .成员 fAnyOperationsAborted, 整数型, , , 
    .成员 hNameMappings, 整数型, , , 
    .成员 lpszProgressTitle, 文本型, , , 

数据类型 SHQUERYRBINFO, , 
    .成员 结构大小, 整数型, , , 
    .成员 文件长度, 长整数型, , , 
    .成员 文件数, 长整数型, , , 

数据类型 磁盘信息_, 公开, 
    .成员 盘符, 文本型, , , 
    .成员 卷标, 文本型, , , 
    .成员 序列号, 整数型, , , 
    .成员 文件系统名称, 文本型, , , 如FAT，NTFS等。
    .成员 驱动器类型, 整数型, , , 
    .成员 磁盘总空间, 长整数型, , , 单位为字节。
    .成员 磁盘已用空间, 长整数型, , , 单位为字节。
    .成员 磁盘剩余空间, 长整数型, , , 单位为字节。

数据类型 SHITEMID, , 
    .成员 cb, 整数型, , , 
    .成员 abID, 字节型, , , 

数据类型 ITEMIDLIST, , 
    .成员 mkid, SHITEMID, , , 

数据类型 BROWSEINFO, , 
    .成员 hOwner, 整数型, , , 
    .成员 pidlRoot, 整数型, , , 
    .成员 pszDisplayName, 文本型, , , 
    .成员 lpszTitle, 文本型, , , 
    .成员 ulFlags, 整数型, , , 
    .成员 lpfn, 整数型, , , 
    .成员 lParam, 整数型, , , 
    .成员 iImage, 整数型, , , 

数据类型 系统时间, , 
    .成员 年, 短整数型, , , 
    .成员 月, 短整数型, , , 
    .成员 星期, 短整数型, , , 
    .成员 日, 短整数型, , , 
    .成员 时, 短整数型, , , 
    .成员 分, 短整数型, , , 
    .成员 秒, 短整数型, , , 
    .成员 毫秒, 短整数型, , , 

数据类型 FILETIME, , 
    .成员 dwLowDateTime, 整数型, , , 
    .成员 dwHighDateTime, 整数型, , , 


.DLL命令 GetTempFileName, 整数型, "kernel32", "GetTempFileNameA", , 
    .参数 lpszPath, 文本型, , 
    .参数 lpPrefixString, 整数型, , 
    .参数 wUnique, 整数型, , 
    .参数 lpTempFileName, 文本型, , 

.DLL命令 GetTempPath, 整数型, "kernel32", "GetTempPathA", , 
    .参数 nBufferLength, 整数型, , 
    .参数 lpBuffer, 文本型, , 

.DLL命令 GetDiskFreeSpaceEx, 整数型, "kernel32.dll", "GetDiskFreeSpaceExA", , 
    .参数 lpDirectoryName, 文本型, , 
    .参数 lpFreeBytesAvailableToCaller, 长整数型, 传址, 
    .参数 lpTotalNumberOfBytes, 长整数型, 传址, 
    .参数 lpTotalNumberOfFreeBytes, 长整数型, 传址, 

.DLL命令 GetLogicalDriveStrings, 整数型, "kernel32", "GetLogicalDriveStringsA", , 
    .参数 nBufferLength, 整数型, , 
    .参数 lpBuffer, 字节集, , 

.DLL命令 SetVolumeLabel, 逻辑型, "kernel32", "SetVolumeLabelA", , 
    .参数 lpRootPathName, 文本型, , 
    .参数 lpVolumeName, 文本型, , 

.DLL命令 GetVolumeInformation, 整数型, "kernel32", "GetVolumeInformationA", , 
    .参数 lpRootPathName, 文本型, , 
    .参数 lpVolumeNameBuffer, 文本型, , 
    .参数 nVolumeNameSize, 整数型, , 
    .参数 lpVolumeSerialNumber, 整数型, 传址, 
    .参数 lpMaximumComponentLength, 整数型, 传址, 
    .参数 lpFileSystemFlags, 整数型, 传址, 
    .参数 lpFileSystemNameBuffer, 文本型, , 
    .参数 nFileSystemNameSize, 整数型, , 

.DLL命令 GetDriveType, 整数型, "kernel32", "GetDriveTypeA", , 
    .参数 nDrive, 文本型, , 

.DLL命令 SetCurrentDirectory, 逻辑型, "kernel32", "SetCurrentDirectoryA", , 
    .参数 lpPathName, 文本型, , 

.DLL命令 CreateDirectory, 逻辑型, "kernel32", "CreateDirectoryA", , 
    .参数 lpPathName, 文本型, , 
    .参数 lpSecurityAttributes, 整数型, , 

.DLL命令 MoveFileEx, 逻辑型, "kernel32", "MoveFileExA", , 
    .参数 lpExistingFileName, 文本型, , 
    .参数 lpNewFileName, 文本型, , 
    .参数 dwFlags, 整数型, , 

.DLL命令 SHFileExists, 逻辑型, "shell32", "#45", , 
    .参数 szPath, 文本型, , 

.DLL命令 PathIsDirectory, 逻辑型, "shlwapi.dll", "PathIsDirectoryA", , 
    .参数 lpszPath, 文本型, , 

.DLL命令 PathIsDirectoryEmpty, 逻辑型, "shlwapi.dll", "PathIsDirectoryEmptyA", , 
    .参数 pszPath, 文本型, , 

.DLL命令 SHFileOperation, 整数型, "Shell32.dll", "SHFileOperationA", , 
    .参数 文件参数, SHFILEOPSTRUCT, , 

.DLL命令 SHEmptyRecycleBin, 空白型, "shell32.dll", "SHEmptyRecycleBinA", , 
    .参数 句柄, 整数型, , 
    .参数 pszRootPath, 文本型, , 
    .参数 dwFlags, 整数型, , 

.DLL命令 SHQueryRecycleBin, 整数型, "shell32.dll", "SHQueryRecycleBinA", , 
    .参数 根路径, 文本型, , 
    .参数 回收站询问信息, SHQUERYRBINFO, 传址, 

.DLL命令 CoTaskMemFree, 空白型, "ole32", "", , 
    .参数 pv, 整数型, , 

.DLL命令 SHGetPathFromIDList, 整数型, "shell32", "SHGetPathFromIDListA", , 
    .参数 pidl, 整数型, , 
    .参数 pszPath, 文本型, , 

.DLL命令 SHBrowseForFolder, 整数型, "shell32", "SHBrowseForFolderA", , 
    .参数 lpBrowseInfo, BROWSEINFO, 传址, 

.DLL命令 SHGetSpecialFolderLocation, 整数型, "shell32", "", , 
    .参数 hwndOwner, 整数型, , 
    .参数 nFolder, 整数型, , 
    .参数 pidl, ITEMIDLIST, 传址, 

.DLL命令 SHGetFolderPath, 整数型, "shell32", "SHGetFolderPathA", , 
    .参数 hwndOwner, 整数型, , 
    .参数 nFolder, 整数型, , 
    .参数 hToken, 整数型, , 
    .参数 dwReserved, 整数型, , 
    .参数 lpszPath, 文本型, , 

.DLL命令 SHGetFolderLocation, 整数型, "shell32", "", , 
    .参数 hwndOwner, 整数型, , 
    .参数 nFolder, 整数型, , 
    .参数 hToken, 整数型, , 
    .参数 dwReserved, 整数型, , 
    .参数 pidl, ITEMIDLIST, 传址, 

.DLL命令 ILCreateFromPathW, 整数型, "", "ILCreateFromPathW", , 
    .参数 pwszPath, 字节集, , 

.DLL命令 MultiByteToWideChar, 整数型, "", "MultiByteToWideChar", , 
    .参数 CodePage, 整数型, , 
    .参数 dwFlags, 整数型, , 
    .参数 lpMultiByteStr, 文本型, , 
    .参数 cchMultiByte, 整数型, , 
    .参数 lpWideCharStr, 字节集, , 
    .参数 cchWideChar, 整数型, , 

.DLL命令 WideCharToMultiByte, 整数型, "", "WideCharToMultiByte", , 
    .参数 CodePage, 整数型, , 
    .参数 dwFlags, 整数型, , 
    .参数 lpWideCharStr, 整数型, , 
    .参数 cchWideChar, 整数型, , 
    .参数 lpMultiByteStr, 文本型, , 
    .参数 cchMultiByte, 整数型, , 
    .参数 unknow, 整数型, , 
    .参数 unknow, 整数型, , 

.DLL命令 DeleteFile, 整数型, "kernel32", "DeleteFileA", , 
    .参数 lpFileName, 文本型, , 

.DLL命令 CopyFile, 整数型, "kernel32", "CopyFileA", , 
    .参数 lpExistingFileName, 文本型, , 
    .参数 lpNewFileName, 文本型, , 
    .参数 bFailIfExists, 整数型, , 

.DLL命令 VariantTimeToSystemTime, 整数型, "oleaut32.dll", "VariantTimeToSystemTime", , 
    .参数 double, 日期时间型, , 
    .参数 LPSYSTEMTIME, 系统时间, 传址, 

.DLL命令 SystemTimeToVariantTime, 整数型, "oleaut32.dll", "SystemTimeToVariantTime", , 
    .参数 LPSYSTEMTIME, 系统时间, 传址, 
    .参数 double, 日期时间型, 传址, 

.DLL命令 GetFileTime, 整数型, "kernel32", "GetFileTime", , 
    .参数 hFile, 整数型, , 
    .参数 lpCreationTime, FILETIME, 传址, 
    .参数 lpLastAccessTime, FILETIME, 传址, 
    .参数 lpLastWriteTime, FILETIME, 传址, 

.DLL命令 lopen, 整数型, "kernel32", "_lopen", , 
    .参数 lpPathName, 文本型, , 
    .参数 iReadWrite, 整数型, , 

.DLL命令 FileTimeToSystemTime, 整数型, "kernel32", "FileTimeToSystemTime", , 
    .参数 lpFileTime, FILETIME, 传址, 
    .参数 lpSystemTime, 系统时间, 传址, 

.DLL命令 SystemTimeToFileTime, 整数型, "kernel32", "SystemTimeToFileTime", , 
    .参数 lpSystemTime, 系统时间, 传址, 
    .参数 lpFileTime, FILETIME, 传址, 

.DLL命令 SetFileTime, 逻辑型, "kernel32", "SetFileTime", , 
    .参数 hFile, 整数型, , 
    .参数 lpCreationTime, FILETIME, 传址, 
    .参数 lpLastAccessTime, FILETIME, 传址, 
    .参数 lpLastWriteTime, FILETIME, 传址, 

.DLL命令 FileTimeToLocalFileTime, 整数型, "kernel32", "FileTimeToLocalFileTime", , 
    .参数 lpFileTime, FILETIME, 传址, 
    .参数 lpLocalFileTime, FILETIME, 传址, 

.DLL命令 LocalFileTimeToFileTime, 整数型, "kernel32", "LocalFileTimeToFileTime", , 
    .参数 lpLocalFileTime, FILETIME, 传址, 
    .参数 lpFileTime, FILETIME, 传址, 

.DLL命令 GetFileSize, 整数型, "kernel32", "GetFileSize", , 
    .参数 hFile, 整数型, , 
    .参数 lpFileSizeHigh, 整数型, , 

.DLL命令 lread, 整数型, "kernel32", "_lread", , 
    .参数 hFile, 整数型, , 
    .参数 lpBuffer, 字节集, , 
    .参数 wBytes, 整数型, , 

.DLL命令 lcreat, 整数型, "kernel32", "_lcreat", , 
    .参数 lpPathName, 文本型, , 
    .参数 iAttribute, 整数型, , 

.DLL命令 lwrite, 整数型, "kernel32", "_lwrite", , 
    .参数 hFile, 整数型, , 
    .参数 lpBuffer, 字节集, , 
    .参数 wBytes, 整数型, , 

.DLL命令 GetFileAttributes, 整数型, "kernel32", "GetFileAttributesA", , 
    .参数 lpFileName, 文本型, , 

.DLL命令 SetFileAttributes, 逻辑型, "kernel32", "SetFileAttributesA", , 
    .参数 lpFileName, 文本型, , 
    .参数 dwFileAttributes, 整数型, , 

.DLL命令 CloseHandle, 整数型, "kernel32", "CloseHandle", , 
    .参数 hObject, 整数型, , 

.DLL命令 lstrcpyn, 文本型, "kernel32", "lstrcpynA", , 
    .参数 lpString1, 字节型, 数组, 
    .参数 lpString2, 字节型, , 
    .参数 iMaxLength, 整数型, , 

.DLL命令 StrToInt64Ex, 整数型, "shlwapi.dll", "StrToInt64ExA", , 
    .参数 pszString, 文本型, , 
    .参数 dwFlags, 整数型, , 
    .参数 piRet, 整数型, 传址, 

.DLL命令 LocalAlloc, 整数型, "", "", , 
    .参数 uFlags, 整数型, , 
    .参数 uBytes, 整数型, , 

.DLL命令 LocalFree, 整数型, "", "", , 
    .参数 hMem, 整数型, , 

.DLL命令 lstrcpyn_字节集, 整数型, "", "lstrcpyn", , 
    .参数 欲取其指针, 字节集, 传址, 
    .参数 欲取其指针, 字节集, 传址, 
    .参数 保留, 整数型, , 

.DLL命令 RtlMoveMemory, 整数型, "", "RtlMoveMemory", , 
    .参数 lpvDest, 整数型, 传址, 
    .参数 lpvSource, 整数型, , 
    .参数 cbCopy, 整数型, , 

.DLL命令 文本_取长度, 整数型, "kernel32.dll", "lstrlenA", , 
    .参数 文本, 文本型, , 

.DLL命令 lstrcpyn_文本型, 整数型, "", "lstrcpyn", , 
    .参数 欲取其指针, 文本型, 传址, 
    .参数 欲取其指针, 文本型, 传址, 
    .参数 保留, 整数型, , 

.DLL命令 FillMemory, 空白型, "", "RtlFillMemory", , 
    .参数 Destination, 整数型, , 
    .参数 Length, 整数型, , 
    .参数 Fill, 字节型, , 

.DLL命令 GetCurrentDirectory, 整数型, "kernel32", "GetCurrentDirectoryA", , 
    .参数 nBufferLength, 整数型, , 
    .参数 lpBuffer, 文本型, , 

.DLL命令 StrTrim, 整数型, "shlwapi.dll", "StrTrimA", , 
    .参数 psz, 文本型, , 
    .参数 pszTrimChars, 文本型, , 

.程序集 程序集1, , , 易语言我吃了 制作 09.4.9 斩月_磁盘-文件-目录-回收站_操作模块V1.0.ec

.子程序 _启动子程序, 整数型, , 请在本子程序中放置易模块初始化代码
 ' --========  易语言资源网  (www.5A5X.com)  ======--
 ' 努力创建完善、持续更新的易语言学习例程源码资源站
 ' --================   www.5A5X.com  ===========--
 ' --==================   易语言资源网注意事项  ================--
 ' * 易语言资源网为易语言官方站、易语言官方论坛提供辅助资源站；
 ' 本易语言资源网( www.5A5X.com)所有软件和资料均为软件作者提
 ' 供和网友推荐发布而来，其版权归该软件和程序源码的合法拥有者所
 ' 有，本站易语言资源网整理收集仅供易语言用户学习和易语言技术研
 ' 究探讨使用，不得用于任何商业用途。如果由于以上原因造成的版权
 ' 纠纷本站概不负责！
 ' * 本站资源未经许可，任何网站不得非法盗链及抄袭本站资源；如引用
 ' 页面，请注明来自易语言资源网，谢谢合作！
 ' --=====================   www.5A5X.com  ================--

_临时子程序 () ' 在初始化代码执行完毕后调用测试代码
返回 (0) ' 可以根据您的需要返回任意数值

.子程序 _临时子程序, 空白型, , 
 ' 本名称子程序用作测试程序用，仅在开发及调试环境中有效，编译发布程序前将被系统自动清空，请将所有用作测试的临时代码放在本子程序中。 ***注意不要修改本子程序的名称、参数及返回值类型。



.子程序 磁盘_取剩余空间, 长整数型, , 失败返回-1。如果磁盘剩余空间数目大于长整数范围则得到的结果是错误的。
.参数 磁盘驱动器字符, 文本型, , 
.参数 单位, 逻辑型, 可空, 真为以字节为单位，假为以KB为单位，留空默认为假。

.局部变量 数值, 长整数型, , , 
.局部变量 总大小, 长整数型, , , 
.局部变量 剩余空间, 长整数型, , , 

返回 (选择 (等于 (GetDiskFreeSpaceEx (相加 (文本_取左边 (磁盘驱动器字符, 1), “:\”), 数值, 总大小, 剩余空间), 0), -1, 选择 (单位, 剩余空间, 相除 (剩余空间, 1024))))

.子程序 磁盘_取总空间, 长整数型, , 失败返回-1。如果磁盘总空间数目大于长整数范围则得到的结果是错误的。
.参数 磁盘驱动器字符, 文本型, , 
.参数 单位, 逻辑型, 可空, 真为以字节为单位，假为以KB为单位，留空默认为假。

.局部变量 数值, 长整数型, , , 
.局部变量 总大小, 长整数型, , , 
.局部变量 剩余空间, 长整数型, , , 

返回 (选择 (等于 (GetDiskFreeSpaceEx (相加 (文本_取左边 (磁盘驱动器字符, 1), “:\”), 数值, 总大小, 剩余空间), 0), -1, 选择 (单位, 总大小, 相除 (总大小, 1024))))

.子程序 磁盘_取已用空间, 长整数型, 公开, 失败返回-1。如果磁盘已用空间数目大于长整数范围则得到的结果是错误的。
.参数 磁盘驱动器字符, 文本型, , 
.参数 单位, 逻辑型, 可空, 真为以字节为单位，假为以KB为单位，留空默认为假。

.局部变量 总大小, 长整数型, , , 
.局部变量 剩余空间, 长整数型, , , 

赋值 (总大小, 磁盘_取总空间 (磁盘驱动器字符, 单位))
赋值 (剩余空间, 磁盘_取剩余空间 (磁盘驱动器字符, 单位))
返回 (选择 (或者 (等于 (总大小, -1), 等于 (剩余空间, -1)), -1, 相减 (总大小, 剩余空间)))
 ' 本源码来自易语言资源网(www.5A5X.com)

.子程序 磁盘_取驱动器列表, 整数型, , 成功返回驱动器数目，失败返回0。
.参数 列表数组, 文本型, 参考 可空 数组, 驱动器列表以参考数组形式传回，请提供一个变量接收。留空则只返回驱动器数目。数组一个成员含一个驱动器盘符。

.局部变量 字节集, 字节集, , , 
.局部变量 长度, 整数型, , , 
.局部变量 临时, 字节集, , , 
.局部变量 计次, 整数型, , , 

清除数组 (列表数组)
赋值 (长度, GetLogicalDriveStrings (0, 字节集))
.如果真 (等于 (长度, 0))
    返回 (0)
.如果真结束
赋值 (字节集, 字节集_取空白 (长度))
.如果真 (等于 (GetLogicalDriveStrings (长度, 字节集), 0))
    返回 (0)
.如果真结束
.变量循环首 (1, 相减 (长度, 2), 4, 计次)
    加入成员 (列表数组, 字节集_到文本 (字节集_取中间 (字节集, 计次, 3)))
.变量循环尾 ()
返回 (取数组成员数 (列表数组))

.子程序 磁盘_置卷标, 逻辑型, , 
.参数 磁盘驱动器字符, 文本型, , 
.参数 欲置入的卷标文本, 文本型, 可空, 留空默认为删除当前卷标。

返回 (SetVolumeLabel (相加 (文本_取左边 (磁盘驱动器字符, 1), “:\”), 欲置入的卷标文本))

.子程序 磁盘_取卷标, 文本型, , 指定磁盘不存在卷标或发生错误返回空文本。
.参数 磁盘驱动器字符, 文本型, , 

.局部变量 卷标, 文本型, , , 
.局部变量 数组, 整数型, , "3", 
.局部变量 NULL, 文本型, , , 

赋值 (卷标, 文本_取空白 (256))
返回 (选择 (不等于 (GetVolumeInformation (相加 (文本_取左边 (磁盘驱动器字符, 1), “:\”), 卷标, 256, 数组 [1], 数组 [2], 数组 [3], NULL, 0), 0), 卷标, “”))

.子程序 磁盘_取信息, 磁盘信息_, , 出错返回空信息。
.参数 欲取其信息的驱动器盘符, 文本型, , 

.局部变量 数值, 整数型, , "3", 
.局部变量 文本, 文本型, , "2", 
.局部变量 信息, 磁盘信息_, , , 
.局部变量 NULL, 磁盘信息_, , , 

赋值 (信息.盘符, 相加 (文本_取左边 (欲取其信息的驱动器盘符, 1), “:\”))
赋值 (信息.驱动器类型, GetDriveType (信息.盘符))
.如果真 (或者 (等于 (信息.驱动器类型, 0), 等于 (信息.驱动器类型, 1)))
    返回 (NULL)
.如果真结束
赋值 (信息.磁盘总空间, 磁盘_取总空间 (信息.盘符, 真))
赋值 (信息.磁盘剩余空间, 磁盘_取剩余空间 (信息.盘符, 真))
赋值 (信息.磁盘已用空间, 相减 (信息.磁盘总空间, 信息.磁盘剩余空间))
.如果真 (或者 (等于 (信息.磁盘总空间, -1), 等于 (信息.磁盘剩余空间, -1)))
    .如果真 (等于 (信息.驱动器类型, #驱动器类型_光盘驱动器))
        连续赋值 (0, 信息.磁盘总空间, 信息.磁盘剩余空间, 信息.磁盘已用空间)
        返回 (信息)
    .如果真结束
    返回 (NULL)
.如果真结束
连续赋值 (文本_取空白 (256), 文本 [1], 文本 [2])
.如果真 (等于 (GetVolumeInformation (信息.盘符, 文本 [1], 256, 数值 [1], 数值 [2], 数值 [3], 文本 [2], 256), 0))
    返回 (NULL)
.如果真结束
赋值 (信息.卷标, 文本 [1])
赋值 (信息.序列号, 数值 [1])
赋值 (信息.文件系统名称, 文本 [2])
返回 (信息)

.子程序 目录_改变目录, 逻辑型, , 
.参数 欲改变到的目录, 文本型, , 

返回 (SetCurrentDirectory (欲改变到的目录))

.子程序 目录_取当前目录, 文本型, , 
.局部变量 长度, 整数型, , , 
.局部变量 路径, 文本型, , , 

赋值 (长度, GetCurrentDirectory (长度, 路径))
赋值 (路径, 文本_取空白 (长度))
返回 (选择 (不等于 (GetCurrentDirectory (长度, 路径), 0), 路径, “”))

.子程序 目录_创建目录, 逻辑型, , 
.参数 欲创建的目录名称, 文本型, , 

返回 (CreateDirectory (欲创建的目录名称, 0))

.子程序 目录_文件夹是否存在, 逻辑型, , 
.参数 欲测试的文件夹名称, 文本型, , 

返回 (PathIsDirectory (欲测试的文件夹名称))

.子程序 目录_文件夹是否为空, 逻辑型, , 为空则返回真，反之假。如果文件夹不存在也会返回假。
.参数 欲测试的文件夹名称, 文本型, , 

返回 (PathIsDirectoryEmpty (欲测试的文件夹名称))

.子程序 目录_移动目录, 逻辑型, , 
.参数 欲移动的目录, 文本型, , 
.参数 移动到的位置, 文本型, , 

返回 (文件_目录_进度移动 (欲移动的目录, 移动到的位置))

.子程序 目录_复制目录, 逻辑型, , 
.参数 欲复制的目录, 文本型, , 
.参数 复制到的位置, 文本型, , 

返回 (文件_目录_进度复制 (欲复制的目录, 复制到的位置))

.子程序 目录_删除目录, 逻辑型, , 
.参数 欲删除的目录, 文本型, , 

返回 (文件_目录_进度删除 (欲删除的目录))

.子程序 目录_浏览文件夹, 文本型, , 打开一个对话框，浏览系统中存在的所有文件夹，返回被选定文件夹的路径名，如果未选中任何文件夹，则返回空文本。本命令为初级命令。参考了“泪闯天涯”的源码。
.参数 标题, 文本型, 可空, 本参数提供显示在对话框上部的标题文本。
.参数 初始目录, 文本型, 可空, 默认为桌面。
.参数 列出文件, 逻辑型, 可空, 是否显示文件列表，默认为假。
.参数 父窗口句柄, 整数型, 可空, 本参数提供需要打开浏览文件夹父窗口的句柄。可空。

.局部变量 BI, BROWSEINFO, , , 
.局部变量 lPid, 整数型, , , 
.局部变量 sPath, 文本型, , , 
.局部变量 iPos, 整数型, , , 
.局部变量 lPidlRoot, ITEMIDLIST, , , 
.局部变量 flName, 文本型, , , 
.局部变量 缓冲区, 字节集, , , 
.局部变量 字符数目, 整数型, , , 

SHGetFolderLocation (父窗口句柄, 0, 0, 0, lPidlRoot)
.如果真 (是否为空 (标题))
    赋值 (标题, “请选择文件夹路径”)
.如果真结束
赋值 (BI.hOwner, 父窗口句柄)
赋值 (BI.pidlRoot, lPidlRoot.mkid.cb)
.如果真 (等于 (是否为空 (初始目录), 假))
    赋值 (字符数目, MultiByteToWideChar (0, 0, 初始目录, -1, {  }, 0))
    赋值 (缓冲区, 字节集_取空白 (相乘 (字符数目, 2)))
    MultiByteToWideChar (0, 0, 初始目录, -1, 缓冲区, 字符数目)
    赋值 (BI.pidlRoot, ILCreateFromPathW (缓冲区))
.如果真结束
赋值 (BI.pszDisplayName, 文本_取空白 (260))
赋值 (BI.lpszTitle, 标题)
赋值 (BI.ulFlags, 119)
.如果真 (列出文件)
    赋值 (BI.ulFlags, 91127)
.如果真结束
赋值 (lPid, SHBrowseForFolder (BI))
.如果 (不等于 (文本_寻找 (文本_删首尾空 (BI.pszDisplayName), “?”, 1, 假), -1))
    赋值 (flName, “”)
.否则
    .如果 (不等于 (lPid, 0))
        赋值 (sPath, 文本_取空白 (260))
        .如果真 (不等于 (SHGetPathFromIDList (lPid, sPath), 0))
            赋值 (flName, sPath)
            .如果真 (等于 (文本_取长度 (flName), 3))
                赋值 (flName, 文本_取左边 (flName, 2))
            .如果真结束
            
        .如果真结束
        
    .否则
        赋值 (flName, 相加 (“\\”, 文本_删首尾空 (BI.pszDisplayName)))
        .如果真 (等于 (flName, “\\”))
            赋值 (flName, “”)
        .如果真结束
        
    .如果结束
    
.如果结束
CoTaskMemFree (lPid)
.如果真 (等于 (文本_取长度 (flName), 2))
    赋值 (flName, 相加 (flName, “\”))
.如果真结束
返回 (flName)

.子程序 回收站_删除到回收站, 逻辑型, , 可将文件或目录删除至回收站。参考了“美女勿进”的代码。成功返回真，失败返回假。
.参数 文件或目录名, 文本型, , 
.参数 删除选项, 整数型, 可空, 0.#无任何显示；4.#不显示进度；16.#不询问删除；1024.#不提示错误。如果被省略，默认值为0。如果要选择两项，就用“位或”将两个选项连接，例如：既不询问删除，也不提示错误则就提供参数：位或(16,1024)。

.局部变量 类型, SHFILEOPSTRUCT, , , 

赋值 (类型.wFunc, 3)
赋值 (类型.pFrom, 相加 (文本_到字节集 (文件或目录名), { 0, 0 }))
.如果 (等于 (删除选项, 0))
    赋值 (类型.fFlags, 1108) ' 位或 (64, 4, 1024, 16)
.否则
    赋值 (类型.fFlags, 位或 (64, 删除选项))
.如果结束
返回 (等于 (SHFileOperation (类型), 0))

.子程序 回收站_清空回收站, 空白型, , 
.参数 选项, 整数型, 可空, 0.既询问删除，也播放提示音乐；1.不询问删除；4.不播放提示音乐；5.既不询问删除，也不播放提示音乐。默认为5。
.参数 根目录, 文本型, 可空, 比如要清空D盘下的回收站就提供参数：“D:\”，如果被省略，默认为空文本，即清空所有回收站。

SHEmptyRecycleBin (0, 根目录, 选择 (是否为空 (选项), 5, 选项))

.子程序 回收站_是否有文件, 逻辑型, , 有返回真，无返回假。
.参数 回收站位置, 文本型, 参考 可空 数组, 可提供变量接收存在文件的回收站的位置，例如如果C盘的回收站有文件则返回“C:\RECYCLER\”，数组每一个成员为一个位置。

.局部变量 结构, SHQUERYRBINFO, , , 
.局部变量 计次, 整数型, , , 
.局部变量 盘符, 文本型, , "0", 

.如果真 (等于 (是否为空 (回收站位置), 假))
    清除数组 (回收站位置)
.如果真结束
磁盘_取驱动器列表 (盘符)
赋值 (结构.结构大小, 20)
.计次循环首 (取数组成员数 (盘符), 计次)
    SHQueryRecycleBin (相加 (盘符 [计次], “RECYCLER\”), 结构)
    .如果真 (大于 (结构.文件数, 0))
        .如果真 (是否为空 (回收站位置))
            返回 (真)
        .如果真结束
        加入成员 (回收站位置, 相加 (盘符 [计次], “RECYCLER\”))
        
    .如果真结束
    
.计次循环尾 ()
返回 (不等于 (取数组成员数 (回收站位置), 0))

.子程序 文件_目录_进度移动, 逻辑型, , 可移动文件，也可移动目录。成功返回真，失败返回假。参考了“美女勿进”的代码。
.参数 被移动的文件或目录, 文本型, , 
.参数 移动到的位置, 文本型, , 
.参数 复制选项, 整数型, 可空, 1.#既不提示错误，也不显示进度；2.#不提示错误，显示进度；3.#不显示进度；4.#既提示错误，又显示进度。如果被省略，默认值为 1 。

.局部变量 类型, SHFILEOPSTRUCT, , , 

赋值 (类型.wFunc, 1)
赋值 (类型.pFrom, 相加 (文本_到字节集 (被移动的文件或目录), { 0, 0 }))
赋值 (类型.pTo, 相加 (文本_到字节集 (移动到的位置), { 0, 0 }))
.如果 (并且 (大于 (复制选项, 0), 小于或等于 (复制选项, 4)))
    赋值 (类型.fFlags, 多项选择 (复制选项, 1021, 1024, 4, 0))
.否则
    赋值 (类型.fFlags, 1021)
.如果结束
返回 (等于 (SHFileOperation (类型), 0))

.子程序 文件_目录_进度复制, 逻辑型, , 可复制文件，也可复制目录。成功返回真，失败返回假。参考了“美女勿进”的代码。
.参数 被复制的文件或目录, 文本型, , 
.参数 复制到的位置, 文本型, , 
.参数 复制选项, 整数型, 可空, 1.#既不提示错误，也不显示进度；2.#不提示错误，显示进度；3.#不显示进度；4.#既提示错误，又显示进度。如果被省略，默认值为 1 。

.局部变量 类型, SHFILEOPSTRUCT, , , 

赋值 (类型.wFunc, 2)
赋值 (类型.pFrom, 相加 (文本_到字节集 (被复制的文件或目录), { 0, 0 }))
赋值 (类型.pTo, 相加 (文本_到字节集 (复制到的位置), { 0, 0 }))
.如果 (并且 (大于 (复制选项, 0), 小于或等于 (复制选项, 4)))
    赋值 (类型.fFlags, 多项选择 (复制选项, 1021, 1024, 4, 0))
.否则
    赋值 (类型.fFlags, 1021)
.如果结束
返回 (等于 (SHFileOperation (类型), 0))

.子程序 文件_目录_进度删除, 逻辑型, , 可删除文件，也可删除目录。成功返回真，失败返回假。
.参数 欲删除的文件或目录, 文本型, , 
.参数 复制选项, 整数型, 可空, 1.#既不提示错误，也不显示进度；2.#不提示错误，显示进度；3.#不显示进度；4.#既提示错误，又显示进度。如果被省略，默认值为 1 。

.局部变量 类型, SHFILEOPSTRUCT, , , 

赋值 (类型.wFunc, 3)
赋值 (类型.pFrom, 相加 (文本_到字节集 (欲删除的文件或目录), { 0, 0 }))
.如果 (并且 (大于 (复制选项, 0), 小于或等于 (复制选项, 4)))
    赋值 (类型.fFlags, 多项选择 (复制选项, 55, 1040, 20, 16)) ' , 位或 (16, 1024) ', 位或 (4, 16),
.否则
    赋值 (类型.fFlags, 55)
.如果结束
返回 (等于 (SHFileOperation (类型), 0))

.子程序 文件_移动文件, 逻辑型, , 
.参数 被移动的文件, 文本型, , 
.参数 移动到的位置, 文本型, , 

返回 (不等于 (MoveFileEx (被移动的文件, 移动到的位置, 2), 0))

.子程序 文件_复制文件, 逻辑型, , 
.参数 被复制的文件名, 文本型, , 
.参数 复制到的文件名, 文本型, , 

返回 (不等于 (CopyFile (被复制的文件名, 复制到的文件名, 0), 0))

.子程序 文件_删除文件, 逻辑型, , 
.参数 欲删除的文件, 文本型, 可空, 

返回 (不等于 (DeleteFile (欲删除的文件), 0))

.子程序 文件_取临时文件名, 文本型, , 
.参数 指定目录, 文本型, 可空, 留空为默认为系统临时目录。

.局部变量 长度, 整数型, , , 
.局部变量 路径, 文本型, , , 
.局部变量 文件名, 文本型, , , 

.如果 (是否为空 (指定目录))
    赋值 (长度, GetTempPath (长度, 路径))
    赋值 (路径, 文本_取空白 (300))
    GetTempPath (长度, 路径)
    赋值 (文件名, 文本_取空白 (300))
    GetTempFileName (路径, 0, 0, 文件名)
    DeleteFile (文件名)
.否则
    赋值 (文件名, 文本_取空白 (300))
    GetTempFileName (指定目录, 0, 0, 文件名)
    DeleteFile (文件名)
.如果结束
返回 (文件名)

.子程序 文件_文件更名, 逻辑型, , 
.参数 欲更名的原文件或目录名, 文本型, , 
.参数 欲更改为的现文件或目录名, 文本型, , 

返回 (MoveFileEx (欲更名的原文件或目录名, 欲更改为的现文件或目录名, 0))

.子程序 文件_文件是否存在, 逻辑型, , 
.参数 欲测试的文件名称, 文本型, , 

返回 (SHFileExists (欲测试的文件名称))

.子程序 文件_取文件尺寸, 整数型, 公开, 失败返回-1。
.参数 文件名, 文本型, , 

.局部变量 大小, 整数型, , , 
.局部变量 句柄, 整数型, , , 

赋值 (句柄, lopen (文件名, 0))
.如果真 (等于 (句柄, -1))
    返回 (-1)
.如果真结束
赋值 (大小, GetFileSize (句柄, 0))
 ' 本源码来自易语言资源网(www.5A5X.com)
CloseHandle (句柄)
返回 (选择 (等于 (大小, 429496729), -1, 大小))

.子程序 文件_读入文件, 字节集, , 
.参数 文件名, 文本型, , 

.局部变量 大小, 整数型, , , 
.局部变量 字节集, 字节集, , , 
.局部变量 句柄, 整数型, , , 

赋值 (句柄, lopen (文件名, 0))
.如果真 (等于 (句柄, -1))
    返回 ({  })
.如果真结束
赋值 (大小, GetFileSize (句柄, 0))
.如果真 (等于 (大小, 4294967295))
    CloseHandle (句柄)
    返回 ({  })
.如果真结束
赋值 (字节集, 字节集_取空白 (大小))
lread (句柄, 字节集, 大小)
CloseHandle (句柄)
返回 (字节集)

.子程序 文件_写到文件, 逻辑型, , 
.参数 文件名, 文本型, , 
.参数 欲写入数据, 字节集, , 

.局部变量 句柄, 整数型, , , 
.局部变量 返回值, 整数型, , , 

赋值 (句柄, lcreat (文件名, 0))
.如果真 (等于 (句柄, -1))
    返回 (假)
.如果真结束
赋值 (返回值, lwrite (句柄, 欲写入数据, 字节集_取长度 (欲写入数据)))
CloseHandle (句柄)
返回 (不等于 (返回值, -1))

.子程序 文件_取文件属性, 整数型, , 与支持库原命令使用方法一样，请参考支持库原命令的说明。
.参数 文件名或目录名, 文本型, , 

返回 (GetFileAttributes (文件名或目录名))

.子程序 文件_置文件属性, 逻辑型, , 与支持库原命令使用方法一样，请参考支持库原命令的说明。
.参数 文件或目录名, 文本型, , 
.参数 欲设置为的属性值, 整数型, , 

返回 (SetFileAttributes (文件或目录名, 欲设置为的属性值))

.子程序 文件_置文件时间, 逻辑型, , 成功返回真，失败返回假。
.参数 文件名, 文本型, , 
.参数 新的创建时间, 日期时间型, 可空, 至少选择一项修改。
.参数 新的修改时间, 日期时间型, 可空, 
.参数 新的上次访问时间, 日期时间型, 可空, 

.局部变量 返回值, 逻辑型, , , 
.局部变量 句柄, 整数型, , , 
.局部变量 FileTime, FILETIME, , "3", 
.局部变量 计次, 整数型, , , 

.如果真 (并且 (是否为空 (新的创建时间), 是否为空 (新的修改时间), 是否为空 (新的上次访问时间)))
    返回 (假)
.如果真结束
赋值 (句柄, lopen (文件名, 2))
.如果真 (等于 (句柄, -1))
    返回 (假)
.如果真结束
赋值 (FileTime [1], VariantTimeToFileTime (新的创建时间))
赋值 (FileTime [2], VariantTimeToFileTime (新的上次访问时间))
赋值 (FileTime [3], VariantTimeToFileTime (新的修改时间))
.计次循环首 (3, 计次)
    LocalFileTimeToFileTime (FileTime [计次], FileTime [计次])
.计次循环尾 ()
赋值 (返回值, SetFileTime (句柄, FileTime [1], FileTime [2], FileTime [3]))
CloseHandle (句柄)
返回 (返回值)

.子程序 文件_取文件时间, 日期时间型, , 返回文件上一次修改的时间。
.参数 文件名, 文本型, , 
.参数 文件的创建时间, 日期时间型, 参考 可空, 可提供变量接收此文件的该额外信息，不需要可不填。
.参数 文件上次访问时间, 日期时间型, 参考 可空, 可提供变量接收此文件的该额外信息，不需要可不填。（FAT文件系统不支持这一特性）

.局部变量 句柄, 整数型, , , 
.局部变量 时间, 日期时间型, , "3", 
.局部变量 FILETIME, FILETIME, , "3", 
.局部变量 计次, 整数型, , , 

连续赋值 (其他_文本到时间 (“”), 时间 [3], 文件的创建时间, 文件上次访问时间)
赋值 (句柄, lopen (文件名, 0))
.如果真 (不等于 (句柄, -1))
    GetFileTime (句柄, FILETIME [1], FILETIME [2], FILETIME [3])
    CloseHandle (句柄)
    .计次循环首 (3, 计次)
        FileTimeToLocalFileTime (FILETIME [计次], FILETIME [计次])
        赋值 (时间 [计次], FileTimeToVariantTime (FILETIME [计次]))
    .计次循环尾 ()
    赋值 (文件的创建时间, 时间 [1])
    赋值 (文件上次访问时间, 时间 [2])
.如果真结束
返回 (时间 [3])

.子程序 其他_时间到文本, 文本型, , 将指定时间转换为文本并返回。参考了“888888”的源码。推荐使用他斩月日期模块进行其他日期操作。
.参数 欲转换到文本的时间, 日期时间型, , .

.局部变量 系统时间, 系统时间, , , 

VariantTimeToSystemTime (欲转换到文本的时间, 系统时间)
返回 (相加 (整数_到文本 (系统时间.年), “年”, 整数_到文本 (系统时间.月), “月”, 整数_到文本 (系统时间.日), “日”, 整数_到文本 (系统时间.时), “时”, 整数_到文本 (系统时间.分), “分”, 整数_到文本 (系统时间.秒), “秒”))

.子程序 其他_文本到时间, 日期时间型, , 将指定文本转换到时间日期型，如果格式不符合将出错，将返回100年1月1日。
.参数 文本, 文本型, , 目前只支持“1973年11月15日12时30分25秒”此种格式的文本。年月日后的时间部分可以省略，★请在调用本子程序前!!一定要!!确认文本符合格式，否则会发生未知的错误★。

.局部变量 位置, 整数型, , , 
.局部变量 时间, 日期时间型, , , 
.局部变量 系统时间, 系统时间, , , 

赋值 (系统时间.年, 100)
连续赋值 (1, 系统时间.月, 系统时间.日)
SystemTimeToVariantTime (系统时间, 时间)
.如果真 (不等于 (文本_寻找 (文本, “年”, , ), -1))
    赋值 (系统时间.年, 文本_到整数 (文本_取左边 (文本, 相减 (文本_寻找 (文本, “年”, , ), 1))))
    赋值 (位置, 文本_寻找 (文本, “月”, , ))
    .如果 (不等于 (位置, -1))
        赋值 (系统时间.月, 文本_到整数 (文本_取中间 (文本, 相加 (文本_寻找 (文本, “年”, , ), 2), 相减 (位置, 1))))
    .否则
        返回 (时间)
    .如果结束
    赋值 (位置, 文本_寻找 (文本, “日”, , ))
    .如果 (不等于 (位置, -1))
        赋值 (系统时间.日, 文本_到整数 (文本_取中间 (文本, 相加 (文本_寻找 (文本, “月”, , ), 2), 相减 (位置, 1))))
    .否则
        返回 (时间)
    .如果结束
    赋值 (文本, 文本_取右边 (文本, 相减 (文本_取长度 (文本), 位置, 1)))
    赋值 (位置, 文本_寻找 (文本, “时”, , ))
    .如果真 (不等于 (位置, -1))
        赋值 (系统时间.时, 文本_到整数 (文本_取左边 (文本, 相减 (位置, 1))))
        赋值 (位置, 文本_寻找 (文本, “分”, , ))
        .如果真 (不等于 (位置, -1))
            赋值 (系统时间.分, 文本_到整数 (文本_取中间 (文本, 相加 (文本_寻找 (文本, “时”, , ), 2), 相减 (位置, 1))))
            赋值 (位置, 文本_寻找 (文本, “秒”, , ))
            .如果真 (不等于 (位置, -1))
                赋值 (系统时间.秒, 文本_到整数 (文本_取中间 (文本, 相加 (文本_寻找 (文本, “分”, , ), 2), 相减 (位置, 1))))
            .如果真结束
            
        .如果真结束
        
    .如果真结束
    
.如果真结束
SystemTimeToVariantTime (系统时间, 时间)
返回 (时间)

.子程序 FileTimeToVariantTime, 日期时间型, , 
.参数 FileTime, FILETIME, , 

.局部变量 系统时间, 系统时间, , , 
.局部变量 时间, 日期时间型, , , 

FileTimeToSystemTime (FileTime, 系统时间)
 ' 本源码来自易语言资源网(www.5A5X.com)
SystemTimeToVariantTime (系统时间, 时间)
返回 (时间)

.子程序 VariantTimeToFileTime, FILETIME, , 
.参数 时间, 日期时间型, , 

.局部变量 FileTime, FILETIME, , , 
.局部变量 系统时间, 系统时间, , , 

VariantTimeToSystemTime (时间, 系统时间)
SystemTimeToFileTime (系统时间, FileTime)
返回 (FileTime)

.程序集 功能集, , , 

.子程序 _取指针_字节集, 整数型, , 
.参数 字节集, 字节集, , 

返回 (lstrcpyn_字节集 (字节集, 字节集, 0))

.子程序 字节集_取长度, 整数型, , 
.参数 字节集, 字节集, , 

.局部变量 ret, 整数型, , , 

.如果真 (等于 (字节集, {  }))
    返回 (0)
.如果真结束
RtlMoveMemory (ret, 相减 (_取指针_字节集 (字节集), 4), 4)
返回 (ret)

.子程序 字节集_取空白, 字节集, , 
.参数 len, 整数型, , 

.局部变量 address, 整数型, , , 
.局部变量 ret, 字节集, , , 

.如果真 (小于 (len, 1))
    返回 ({  })
.如果真结束
赋值 (address, LocalAlloc (64, len))
.如果真 (等于 (address, 0))
    返回 ({  })
.如果真结束
赋值 (ret, 指针到字节集 (address, len))
LocalFree (address)
返回 (ret)

.子程序 字节集_到文本, 文本型, , 
.参数 字节集, 字节集, , 

.局部变量 temp, 字节集, , , 

赋值 (temp, 相加 (字节集, { 0 }))
返回 (指针到文本 (_取指针_字节集 (temp)))

.子程序 字节集_取中间, 字节集, , 
.参数 字节集, 字节集, , 
.参数 起始取出位置, 整数型, , 
.参数 欲取出字节的数目, 整数型, , 

.局部变量 len, 整数型, , , 

赋值 (len, 字节集_取长度 (字节集))
.如果真 (小于 (len, 1))
    返回 ({  })
.如果真结束
.如果真 (小于 (起始取出位置, 1))
    赋值 (起始取出位置, 1)
.如果真结束
.如果真 (或者 (大于 (起始取出位置, len), 小于 (欲取出字节的数目, 1)))
    返回 ({  })
.如果真结束
.如果真 (大于 (相减 (相加 (欲取出字节的数目, 起始取出位置), 1), len))
    赋值 (欲取出字节的数目, 相加 (相减 (len, 起始取出位置), 1))
.如果真结束
返回 (指针到字节集 (相减 (相加 (_取指针_字节集 (字节集), 起始取出位置), 1), 欲取出字节的数目))

.子程序 _取指针_文本型, 整数型, , 
.参数 文本, 文本型, , 

返回 (lstrcpyn_文本型 (文本, 文本, 0))

.子程序 整数_到文本, 文本型, , 
.参数 整数型, 短整数型, , 

.局部变量 i, 整数型, , , 
.局部变量 g, 字节型, , "0", 

.循环判断首 ()
    赋值 (i, 相加 (求余数 (整数型, 10), 48))
    插入成员 (g, 1, i)
    赋值 (整数型, 相除 (整数型, 10))
.循环判断尾 (不等于 (整数型, 0))
加入成员 (g, 0)
返回 (lstrcpyn (g, 0, 0))

.子程序 文本_到整数, 整数型, , 
.参数 文本, 文本型, , 

.局部变量 ret, 长整数型, , , 

StrToInt64Ex (文本, 0, ret)
返回 (ret)

.子程序 文本_寻找, 整数型, , 
.参数 被搜寻的文本, 文本型, , 
.参数 欲寻找的文本, 文本型, , 
.参数 起始搜寻位置, 整数型, 可空, 
.参数 是否不区分大小写, 逻辑型, 可空, 

置入代码 ({ 83, 82, 86, 87, 49, 192, 139, 117, 8, 232, 204, 0, 0, 0, 131, 249, 0, 126, 111, 139, 85, 244, 137, 203, 139, 117, 12, 232, 186, 0, 0, 0, 131, 249, 0, 126, 93, 139, 69, 16, 72, 131, 248, 0, 125, 2, 49, 192, 137, 69, 16, 41, 195, 57, 217, 127, 73, 73, 137, 77, 248, 41, 203, 137, 93, 252, 137, 93, 240, 1, 194, 139, 93, 24, 139, 117, 244, 139, 77, 252, 137, 215, 138, 38, 70, 227, 43, 138, 7, 71, 73, 232, 143, 0, 0, 0, 132, 228, 117, 241, 137, 250, 137, 77, 252, 139, 77, 248, 227, 25, 138, 38, 138, 7, 70, 71, 232, 118, 0, 0, 0, 132, 228, 117, 205, 73, 227, 7, 235, 236, 131, 200, 255, 235, 70, 139, 69, 16, 3, 69, 240, 43, 69, 252, 139, 125, 8, 139, 63, 137, 193, 73, 227, 15, 138, 63, 71, 73, 128, 255, 128, 118, 245, 227, 165, 71, 73, 235, 239, 132, 219, 116, 32, 139, 117, 244, 139, 77, 248, 65, 227, 23, 138, 62, 70, 71, 73, 128, 255, 128, 118, 244, 227, 11, 138, 62, 56, 63, 117, 130, 70, 71, 73, 235, 231, 95, 94, 90, 91, 131, 196, 16, 137, 236, 93, 194, 24, 0, 49, 201, 139, 54, 133, 246, 116, 12, 137, 117, 244, 138, 6, 70, 65, 132, 192, 117, 248, 73, 195, 56, 224, 116, 30, 168, 128, 117, 28, 132, 219, 116, 24, 52, 32, 56, 224, 117, 18, 60, 65, 114, 14, 60, 90, 118, 8, 60, 97, 114, 6, 60, 122, 119, 2, 48, 228, 195 })
返回 (0)

.子程序 文本_取左边, 文本型, , 
.参数 文本, 文本型, , 
.参数 欲取出的数目, 整数型, , 

.局部变量 len, 整数型, , , 
.局部变量 字节集, 字节集, , , 

赋值 (len, 文本_取长度 (文本))
.如果真 (或者 (小于 (len, 1), 小于 (欲取出的数目, 1)))
    返回 (“”)
.如果真结束
.如果真 (大于 (欲取出的数目, len))
    返回 (文本)
.如果真结束
赋值 (字节集, 相加 (指针到字节集 (_取指针_文本型 (文本), 欲取出的数目), { 0 }))
返回 (指针到文本 (_取指针_字节集 (字节集)))

.子程序 文本_取中间, 文本型, , 
.参数 文本, 文本型, , 
.参数 起始取出位置, 整数型, , 
.参数 欲取出的数目, 整数型, , 

.局部变量 字节集, 字节集, , , 
.局部变量 len, 整数型, , , 

赋值 (len, 文本_取长度 (文本))
.如果真 (小于 (len, 1))
    返回 (“”)
.如果真结束
.如果真 (小于 (起始取出位置, 1))
    赋值 (起始取出位置, 1)
.如果真结束
.如果真 (或者 (大于 (起始取出位置, len), 小于 (欲取出的数目, 1)))
    返回 (“”)
.如果真结束
.如果真 (大于 (相减 (相加 (欲取出的数目, 起始取出位置), 1), len))
    赋值 (欲取出的数目, 相加 (相减 (len, 起始取出位置), 1))
.如果真结束
赋值 (字节集, 相加 (指针到字节集 (相减 (相加 (_取指针_文本型 (文本), 起始取出位置), 1), 欲取出的数目), { 0 }))
返回 (指针到文本 (_取指针_字节集 (字节集)))

.子程序 文本_取右边, 文本型, , 
.参数 文本, 文本型, , 
.参数 欲取出字节的数目, 整数型, , 

.局部变量 len, 整数型, , , 
.局部变量 字节集, 字节集, , , 

赋值 (len, 文本_取长度 (文本))
.如果真 (或者 (小于 (len, 1), 小于 (欲取出字节的数目, 1)))
    返回 (“”)
.如果真结束
.如果真 (大于 (欲取出字节的数目, len))
    返回 (文本)
.如果真结束
赋值 (字节集, 相加 (指针到字节集 (相减 (相加 (_取指针_文本型 (文本), len), 欲取出字节的数目), 欲取出字节的数目), { 0 }))
返回 (指针到文本 (_取指针_字节集 (字节集)))

.子程序 文本_取空白, 文本型, , 
.参数 len, 整数型, , 

.局部变量 address, 整数型, , , 
.局部变量 ret, 文本型, , , 

.如果真 (小于 (len, 1))
    返回 (“”)
.如果真结束
赋值 (address, LocalAlloc (64, 相加 (len, 1)))
.如果真 (等于 (address, 0))
    返回 (“”)
.如果真结束
FillMemory (address, len, 32)
赋值 (ret, 指针到文本 (address))
LocalFree (address)
返回 (ret)

.子程序 文本_到字节集, 字节集, , 
.参数 文本, 文本型, , 

返回 (指针到字节集 (_取指针_文本型 (文本), 文本_取长度 (文本)))

.子程序 文本_删首尾空, 文本型, , 
.参数 文本, 文本型, , 

.局部变量 长度, 整数型, , , 

.循环判断首 ()
    赋值 (长度, 文本_取长度 (文本))
    StrTrim (文本, “ ”)
    StrTrim (文本, “　”)
.循环判断尾 (不等于 (文本_取长度 (文本), 长度))
返回 (文本)


 ' 不属于任何一个程序集、类模块的函数：
