 ' 文件类型：Windows模块源码

 ' 程序名称：检测断点
 ' 程序描述：检测CC断点
@备注:
检测CC断点
 ' 程序作者：李光
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：李光
 ' 版本号：1.0
 ' 创建号：0.0



.常量 GENERIC_READ, "2147483648", , 
.常量 GENERIC_WRITE, "1073741824", , 
.常量 FILE_SHARE_READ, "1", , 
.常量 FILE_SHARE_WRITE, "2", , 
.常量 OPEN_EXISTING, "3", , 
.常量 FILE_ATTRIBUTE_NORMAL, "128", , 
.常量 CC, "204", , 
.常量 SICE, "“\\.\SICE”", , 
.常量 NTICE, "“\\.\NTICE”", , 
.常量 SIWDEBUG, "“\\.\SIWDEBUG”", , 
.常量 SIWVID, "“\\.\SIWVID”", , 
.常量 FILEMON, "“\\.\FILEMON”", , 
.常量 REGMON, "“\\.\REGMON”", , 
.常量 Trw, "“\\.\Trw”", , 
.常量 TRWDEBUG, "“\\.\TRWDEBUG”", , 
.常量 ICEDUMP, "“\\.\ICEDUMP”", , 
.常量 VKEYPROD, "“\\.\VKEYPROD”", , 
.常量 SUPERBPM, "“\\.\SUPERBPM”", , 
.常量 BW2K, "“\\.\BW2K”", , 
.常量 FILEVXD, "“\\.\FILEVXD”", , 
.常量 REGVXD, "“\\.\REGVXD”", , 
.常量 TRW2000, "“\\.\TRW2000”", , 
.常量 NTICED052, "“\\.\NTICED052”", , 
.图片 user32, " ' 已保存到：D:\易语言学习\Data\检测断点.e\user32", , 
.图片 kernel32, " ' 已保存到：D:\易语言学习\Data\检测断点.e\kernel32", , 
.图片 ntdll, " ' 已保存到：D:\易语言学习\Data\检测断点.e\ntdll", , 
.图片 gdi32, " ' 已保存到：D:\易语言学习\Data\检测断点.e\gdi32", , 
.图片 advapi32, " ' 已保存到：D:\易语言学习\Data\检测断点.e\advapi32", , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 5 0 系统核心支持库





.DLL命令 CreateFile, 整数型, "", "CreateFileA", , 
    .参数 lpFileName, 文本型, , 
    .参数 dwDesiredAccess, 整数型, , 
    .参数 dwShareMode, 整数型, , 
    .参数 lpSecurityAttributes, 整数型, , 
    .参数 dwCreationDisposition, 整数型, , 
    .参数 dwFlagsAndAttributes, 整数型, , 
    .参数 hTemplateFile, 整数型, , 

.DLL命令 IsDebuggerPresent, 整数型, "", "", , 

.DLL命令 GetModuleHandle, 整数型, "", "GetModuleHandleA", , 
    .参数 lpModuleName, 文本型, , 

.DLL命令 GetProcAddress, 整数型, "", "", , 
    .参数 hModule, 整数型, , 
    .参数 lpProcName, 文本型, , 

.DLL命令 LoadLibrary, 整数型, "", "LoadLibraryA", , 
    .参数 lpLibFileName, 文本型, , 

.DLL命令 CreateThread, 整数型, "", "", , 
    .参数 lpThreadAttributes, 整数型, , 
    .参数 dwStackSize, 整数型, , 
    .参数 lpStartAddress, 子程序指针, , 
    .参数 lpParameter, 整数型, , 
    .参数 dwCreationFlags, 整数型, , 
    .参数 lpThreadId, 整数型, 传址, 

.DLL命令 CloseHandle, 整数型, "", "", , 
    .参数 hObject, 整数型, , 

.程序集 程序集1, , , 

.子程序 _启动子程序, 整数型, , 请在本子程序中放置易模块初始化代码
_临时子程序 () ' 在初始化代码执行完毕后调用测试代码
返回 (0) ' 可以根据您的需要返回任意数值

.子程序 _临时子程序, 空白型, , 
 ' 本名称子程序用作测试程序用，仅在开发及调试环境中有效，编译发布程序前将被系统自动清空，请将所有用作测试的临时代码放在本子程序中。 ***注意不要修改本子程序的名称、参数及返回值类型。

.程序集 检测断点, , , 

.程序集变量 断点, 文本型, , , 
.子程序 检测断点, 逻辑型, 公开, 检测CC断点
.局部变量 函数名, 字节集, 静态, "0", 
.局部变量 索引, 整数型, 静态, , 
.局部变量 模块句柄, 整数型, 静态, , 
.局部变量 函数指针, 整数型, 静态, , 
.局部变量 x, 文本型, 静态, , 

 ' --========  易语言资源网  (www.wodesoft.com)  ======--
 ' 努力创建完善、持续更新的易语言学习例程源码资源站
 ' --================   www.wodesoft.com  ===========--
 ' --==================   易语言资源网注意事项  ================--
 ' * 易语言资源网为易语言官方站、易语言官方论坛提供辅助资源站；
 ' 本易语言资源网( www.wodesoft.com)所有软件和资料均为软件作者提
 ' 供和网友推荐发布而来，其版权归该软件和程序源码的合法拥有者所
 ' 有，本站易语言资源网整理收集仅供易语言用户学习和易语言技术研
 ' 究探讨使用，不得用于任何商业用途。如果由于以上原因造成的版权
 ' 纠纷本站概不负责！
 ' * 本站资源未经许可，任何网站不得非法盗链及抄袭本站资源；如引用
 ' 页面，请注明来自易语言资源网，谢谢合作！
 ' --=====================   www.wodesoft.com  ================--

 ' ===========================================
 ' User32.dll
赋值 (函数名, 分割字节集 (#user32, { 0 }, ))
赋值 (模块句柄, LoadLibrary (“user32”))
.计次循环首 (取数组成员数 (函数名), 索引)
    赋值 (函数指针, GetProcAddress (模块句柄, 到文本 (函数名 [索引])))
    .如果真 (不等于 (函数指针, 0))
        .如果真 (等于 (指针到字节集 (函数指针, 1), { 204 }))
            赋值 (断点, 到文本 (函数名 [索引]))
            返回 (真)
        .如果真结束
         ' 本源码来自易语言资源网(www.wodesoft.com)
    .如果真结束
    
.计次循环尾 ()

 ' ===========================================
 ' kernel32.dll
赋值 (函数名, 分割字节集 (#kernel32, { 0 }, ))
赋值 (模块句柄, LoadLibrary (“kernel32”))
.计次循环首 (取数组成员数 (函数名), 索引)
    赋值 (函数指针, GetProcAddress (模块句柄, 到文本 (函数名 [索引])))
    .如果真 (不等于 (函数指针, 0))
        .如果真 (等于 (指针到字节集 (函数指针, 1), { 204 }))
            赋值 (断点, 到文本 (函数名 [索引]))
            返回 (真)
        .如果真结束
        
    .如果真结束
    
.计次循环尾 ()

 ' ===========================================
 ' ntdll.dll
赋值 (函数名, 分割字节集 (#ntdll, { 0 }, ))
赋值 (模块句柄, LoadLibrary (“ntdll”))
.计次循环首 (取数组成员数 (函数名), 索引)
    赋值 (x, 到文本 (函数名 [索引]))
    .如果真 (或者 (等于 (x, “DbgBreakPoint”), 等于 (x, “DbgUserBreakPoint”)))
        到循环尾 ()
    .如果真结束
    赋值 (函数指针, GetProcAddress (模块句柄, 到文本 (函数名 [索引])))
    .如果真 (不等于 (函数指针, 0))
        .如果真 (等于 (指针到字节集 (函数指针, 1), { 204 }))
            赋值 (断点, 到文本 (函数名 [索引]))
            返回 (真)
        .如果真结束
        
    .如果真结束
    
.计次循环尾 ()

 ' ===========================================
 ' gdi32.dll
赋值 (函数名, 分割字节集 (#gdi32, { 0 }, ))
赋值 (模块句柄, LoadLibrary (“gdi32”))
.计次循环首 (取数组成员数 (函数名), 索引)
    赋值 (函数指针, GetProcAddress (模块句柄, 到文本 (函数名 [索引])))
    .如果真 (不等于 (函数指针, 0))
        .如果真 (等于 (指针到字节集 (函数指针, 1), { 204 }))
            赋值 (断点, 到文本 (函数名 [索引]))
            返回 (真)
        .如果真结束
         ' 本源码来自易语言资源网(www.wodesoft.com)
    .如果真结束
    
.计次循环尾 ()

 ' ===========================================
 ' advapi32.dll
赋值 (函数名, 分割字节集 (#advapi32, { 0 }, ))
赋值 (模块句柄, LoadLibrary (“advapi32”))
.计次循环首 (取数组成员数 (函数名), 索引)
    赋值 (函数指针, GetProcAddress (模块句柄, 到文本 (函数名 [索引])))
    .如果真 (不等于 (函数指针, 0))
        .如果真 (等于 (指针到字节集 (函数指针, 1), { 204 }))
            赋值 (断点, 到文本 (函数名 [索引]))
            返回 (真)
        .如果真结束
        
    .如果真结束
    ' 本源码来自易语言资源网(www.wodesoft.com)
.计次循环尾 ()
返回 (假)

.子程序 取断点函数, 文本型, 公开, 取最后检测到的断点函数
返回 (断点)


 ' 不属于任何一个程序集、类模块的函数：
