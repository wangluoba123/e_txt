 ' 文件类型：未知类型

 ' 程序名称：模块分析
 ' 程序描述：
 ' 程序作者：超级用户
 ' 邮政编码：超级用户
 ' 联系地址：超级用户
 ' 联系电话：超级用户
 ' 传真号码：超级用户
 ' 电子信箱：超级用户
 ' 主页地址：超级用户
 ' 版权声明：
 ' 版本号：1.1
 ' 创建号：1.1



.常量 核心支持库, "“窗口|报表|菜单|字体|编辑框|图片框|外形框|画板|分组框|标签|按钮|选择框|单选框|组合框|列表框|选择列表框|横向滚动条|纵向滚动条|进度条|滑块条|选择夹|影像框|日期框|月历|驱动器框|目录框|文件框|颜色选择器|超级链接框|调节器|通用对话框|时钟|打印机|字段信息|数据报|数据报|客户|服务器|端口|打印设置信息|表格|数据源|通用提供者|数据库提供者|图形按钮|外部数据库|外部数据提供者|对象|变体型|变体类型|无法载入的窗口组件”", , 
.常量 数据类型_窗口, "65537", , 0x10001
.常量 数据类型_菜单, "65539", , 0x10003
.常量 数据类型_字体, "65540", , 0x10004
.常量 数据类型_编辑框, "65541", , 0x10005
.常量 数据类型_图片框, "65542", , 0x10006
.常量 数据类型_外形框, "65543", , 0x10007
.常量 数据类型_画板, "65544", , 0x10008
.常量 数据类型_分组框, "65545", , 0x10009
.常量 数据类型_标签, "65546", , 0x1000A
.常量 数据类型_按钮, "65547", , 0x1000B
.常量 数据类型_选择框, "65548", , 0x1000C
.常量 数据类型_单选框, "65549", , 0x1000D
.常量 数据类型_组合框, "65550", , 0x1000E
.常量 数据类型_列表框, "65551", , 0x1000F
.常量 数据类型_选择列表框, "65552", , 0x10010
.常量 数据类型_横向滚动条, "65553", , 0x10011
.常量 数据类型_纵向滚动条, "65554", , 0x10012
.常量 数据类型_进度条, "65555", , 0x10013
.常量 数据类型_滑块条, "65556", , 0x10014
.常量 数据类型_选择夹, "65557", , 0x10015
.常量 数据类型_影像框, "65558", , 0x10016
.常量 数据类型_日期框, "65559", , 0x10017
.常量 数据类型_月历, "65560", , 0x10018
.常量 数据类型_驱动器框, "65561", , 0x10019
.常量 数据类型_目录框, "65562", , 0x1001A
.常量 数据类型_文件框, "65563", , 0x1001B
.常量 数据类型_颜色选择器, "65564", , 0x1001C
.常量 数据类型_超级链接框, "65565", , 0x1001D
.常量 数据类型_调节器, "65566", , 0x1001E
.常量 数据类型_通用对话框, "65567", , 0x1001F
.常量 数据类型_时钟, "65568", , 0x10020
.常量 数据类型_打印机, "65569", , 0x10021
.常量 数据类型_字段信息, "65570", , 0x10022
.常量 数据类型_数据报, "65572", , 0x10024
.常量 数据类型_客户, "65573", , 0x10025
.常量 数据类型_服务器, "65574", , 0x10026
.常量 数据类型_端口, "65575", , 0x10027
.常量 数据类型_打印设置信息, "65576", , 0x10028
.常量 数据类型_表格, "65577", , 0x10029
.常量 数据类型_数据源, "65578", , 0x1002A
.常量 数据类型_通用提供者, "65579", , 0x1002B
.常量 数据类型_数据库提供者, "65580", , 0x1002C
.常量 数据类型_图形按钮, "65581", , 0x1002D
.常量 数据类型_外部数据库, "65582", , 0x1002E
.常量 数据类型_外部数据提供者, "65583", , 0x1002F
.常量 数据类型_对象, "65584", , 0x10030
.常量 数据类型_变体型, "65585", , 0x10031
.常量 数据类型_变体类型, "65586", , 0x10032
.常量 , , , 
.常量 数据类型_工具条, "196611", , 0x30003
.常量 数据类型_超级列表框, "196612", , 0x30004
.常量 数据类型_高级表格, "262145", , 0x40001
.常量 , , , 
.常量 换行, "“
”", , 
.常量 文件类型_源代码, "1", 隐藏, 
.常量 文件类型_模块, "3", 隐藏, 
.常量 编译类型_Windows窗口程序, "0", 隐藏, 
.常量 编译类型_Windows控制台程序, "1", 隐藏, 
.常量 编译类型_Windows动态链接库, "2", 隐藏, 
.常量 编译类型_Windows易语言模块, "1000", 隐藏, 
.常量 编译类型_Linux控制台程序, "10000", 隐藏, 
.常量 编译类型_Linux易语言模块, "11000", 隐藏, 
.常量 程序段_变量_属性_静态, "1", 隐藏, 
.常量 程序段_变量_属性_参考, "2", 隐藏, 
.常量 程序段_变量_属性_传址, "2", 隐藏, 
.常量 程序段_变量_属性_可空, "4", 隐藏, 
.常量 程序段_变量_属性_数组, "8", 隐藏, 
.常量 程序段_变量_属性_公开, "256", 隐藏, 
.常量 程序段_函数_属性_公开, "8", 隐藏, 
.常量 程序段_数据类型_属性_公开, "1", 隐藏, 
.常量 程序段_DLL_属性_公开, "2", 隐藏, 
.常量 资源段_常量_属性_未检查, "1", 隐藏, 
.常量 资源段_常量_属性_公开, "2", 隐藏, 
.常量 资源段_常量_属性_长文本常量, "16", 隐藏, 
.常量 数据类型_空白型, "0", 隐藏, 0x00000000
.常量 数据类型_字节型, "-2147483391", 隐藏, 0x80000101
.常量 数据类型_短整数, "-2147483135", 隐藏, 0x80000201
.常量 数据类型_整数型, "-2147482879", 隐藏, 0x80000301
.常量 数据类型_长整数型, "-2147482623", 隐藏, 0x80000401
.常量 数据类型_小数型, "-2147482367", 隐藏, 0x80000501
.常量 数据类型_双精度小数, "-2147482111", 隐藏, 0x80000601
.常量 数据类型_逻辑型, "-2147483646", 隐藏, 0x80000002
.常量 数据类型_日期时间型, "-2147483645", 隐藏, 0x80000003
.常量 数据类型_文本型, "-2147483644", 隐藏, 0x80000004
.常量 数据类型_字节集, "-2147483643", 隐藏, 0x80000005
.常量 数据类型_子程序指针, "-2147483642", 隐藏, 0x80000006


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 5 3 系统核心支持库



 ' 所需要的模块
 ' 易文件分析 E:\编程成功软件\模块处理\易文件分析.ec


数据类型 用户信息, 公开, 
    .成员 程序名称, 文本型, , , 
    .成员 程序备注, 文本型, , , 
    .成员 匿名成员551, 空白型, , , 
    .成员 作者, 文本型, , , 
    .成员 邮政编码, 文本型, , , 
    .成员 联系地址, 文本型, , , 
    .成员 电话, 文本型, , , 
    .成员 传真, 文本型, , , 
    .成员 电子信箱, 文本型, , , 
    .成员 主页, 文本型, , , 
    .成员 其他, 文本型, , , 
    .成员 匿名成员560, 空白型, , , 
    .成员 版本号1, 空白型, , , 
    .成员 版本号2, 空白型, , , 

数据类型 公开程序集, 公开, 
    .成员 函数组, 公开函数, , "1", 
    .成员 名称, 文本型, , , 
    .成员 备注, 文本型, , , 
    .成员 变量, 函数参数, , "1", 
    .成员 全部代码, 文本型, , , 

数据类型 公开函数, 公开, 
    .成员 名称, 文本型, , , 
    .成员 备注, 文本型, , , 
    .成员 返回类型, 文本型, , , 
    .成员 参数组, 函数参数, , "1", 
    .成员 变量, 函数参数, , "1", 
    .成员 代码, 字节集, , , 

数据类型 公开类型, 公开, 
    .成员 名称, 文本型, , , 
    .成员 备注, 文本型, , , 
    .成员 dwID, 整数型, , , 
    .成员 参数组, 函数参数, , "1", 
    .成员 全部代码, 文本型, , , 
    .成员 匿名成员11731, 空白型, , , 

数据类型 公开DLL, 公开, 
    .成员 名称, 文本型, , , 
    .成员 备注, 文本型, , , 
    .成员 返回类型, 文本型, , , 
    .成员 文件名, 文本型, , , 
    .成员 命令名, 文本型, , , 
    .成员 参数组, 函数参数, , "1", 
    .成员 全部代码, 文本型, , , 
    .成员 匿名成员11733, 空白型, , , 

数据类型 公开类, 公开, 
    .成员 名称, 文本型, , , 
    .成员 备注, 文本型, , , 
    .成员 变量, 函数参数, , "1", 
    .成员 基类, 文本型, , , 
    .成员 dwID, 整数型, , , 
    .成员 函数组, 公开函数, , "1", 
    .成员 全部代码, 文本型, , , 
    .成员 匿名成员11735, 空白型, , , 

数据类型 公开常量, 公开, 
    .成员 名称, 文本型, , , 
    .成员 备注, 文本型, , , 
    .成员 数据, 变体型, , , 
    .成员 是否为长文本, 逻辑型, , , 
    .成员 结果, 文本型, , , 
    .成员 全部代码, 文本型, , , 
    .成员 匿名成员11737, 空白型, , , 

数据类型 库信息, , 36*4=144
    .成员 库格式号, 整数型, , , m_dwLibFormatVer
    .成员 标识符, 文本型, , , m_szGuid
    .成员 本库主版本号, 整数型, , , m_nMajorVersion，必须大于0
    .成员 本库次版本号, 整数型, , , m_nMinorVersion
    .成员 构建版本号, 整数型, , , m_nBuildNumber
    .成员 系统主版本号, 整数型, , , m_nRqSysMajorVer,目前应该为 3
    .成员 系统次版本号, 整数型, , , m_nRqSysMinorVer,目前应该为 0
    .成员 核心支持库主版本号, 整数型, , , m_nRqSysKrnlLibMajorVer,目前应该为 3
    .成员 核心支持库次版本号, 整数型, , , m_nRqSysKrnlLibMinorVer,目前应该为 0
    .成员 库名, 文本型, , , m_szName，不能为NULL或空。
    .成员 支持语言, 整数型, , , m_nLanguage,1为中文,2为英文
    .成员 库说明, 文本型, , , m_szExplain
    .成员 库状态, 整数型, , , m_dwState
    .成员 作者姓名, 文本型, , , m_szAuthor
    .成员 邮政编码, 文本型, , , m_szZipCode
    .成员 通信地址, 文本型, , , m_szAddress
    .成员 电话号码, 文本型, , , m_szPhoto
    .成员 传真号码, 文本型, , , m_szFax
    .成员 电子信箱, 文本型, , , m_szEmail
    .成员 主页地址, 文本型, , , m_szHomePage
    .成员 其它信息, 文本型, , , m_szOther
    .成员 自定义数据类型数目, 整数型, , , m_nDataTypeCount
    .成员 自定义数据指针, 整数型, , , m_pDataType
    .成员 全局命令类别数目, 整数型, , , m_nCategoryCount
    .成员 全局命令类别说明表, 整数型, , , m_szzCategory
    .成员 命令数目, 整数型, , , m_nCmdCount
    .成员 命令说明, 整数型, , , m_pBeginCmdInfo
    .成员 命令入口址表, 整数型, , , m_pCmdsFunc
    .成员 附加功能子程序, 子程序指针, , , m_pfnRunAddInFn
    .成员 附加功能说明, 整数型, , , m_szzAddInFnInfo
    .成员 通知信息函数, 子程序指针, , , m_pfnNotify
    .成员 超级模板, 整数型, , , m_pfnSuperTemplate
    .成员 模板说明, 整数型, , , m_szzSuperTemplateInfo
    .成员 常量数目, 整数型, , , m_nLibConstCount
    .成员 常量定义, 整数型, , , m_pLibConst
    .成员 附带文件, 整数型, , , m_szzDependFiles

数据类型 公开全局变量, 公开, 
    .成员 名称, 文本型, , , 
    .成员 备注, 文本型, , , 
    .成员 数据类型, 文本型, , , 
    .成员 数组下标, 整数型, , "1", 
    .成员 全部代码, 文本型, , , 
    .成员 匿名成员11739, 空白型, , , 

数据类型 公开窗口, 公开, 
    .成员 名称, 文本型, , , 
    .成员 备注, 文本型, , , 

数据类型 函数参数, 公开, 
    .成员 名称, 文本型, , , 
    .成员 备注, 文本型, , , 
    .成员 数据类型, 文本型, , , 
    .成员 传址, 逻辑型, , , 
    .成员 可空, 逻辑型, , , 
    .成员 数组, 逻辑型, , , 
    .成员 dwID, 整数型, , , 
    .成员 数组下标值, 整数型, , "1", 

数据类型 系统信息, 公开, 
    .成员 编译版本, 文本型, , , 
    .成员 支持库列表, 文本型, , "1", 

数据类型 支持库数据类型, , 
    .成员 数据类型, 文本型, , "1", 
    .成员 已读取, 逻辑型, , , 

数据类型 支持库, , 
    .成员 文件名, 文本型, , , 

数据类型 LIB_DATA_TYPE_INFO, , 大小:56 库定义数据类型信息
    .成员 m_szName, 文本型, , , 中文名称
    .成员 m_szEgName, 文本型, , , 英文名称
    .成员 m_szExplain, 文本型, , , 详细解释
    .成员 m_nCmdCount, 整数型, , , 命令数目
    .成员 m_pnCmdsIndex, 整数型, , , 命令表索引数组
    .成员 m_dwState, 整数型, , , 类型属性
    .成员 m_dwUnitBmpID, 整数型, , , 图像资源ID
    .成员 m_nEventCount, 整数型, , , 事件数目
    .成员 m_pEventBegin, 整数型, , , 事件定义数组
    .成员 m_nPropertyCount, 整数型, , , 属性数目
    .成员 m_pPropertyBegin, 整数型, , , 属性定义数组
    .成员 m_pfnGetInterface, 子程序指针, , , 窗口单元接口函数
    .成员 m_nElementCount, 整数型, , , 成员个数
    .成员 m_pElementBegin, 整数型, , , 成员定义数组

数据类型 系统信息段, 公开, 
    .成员 编译版本1, 短整数型, , , 
    .成员 编译版本2, 短整数型, , , 
    .成员 Unknow_1, 整数型, , , 
    .成员 Unknow_2, 整数型, , , 
    .成员 未知类型, 整数型, , , 
    .成员 文件类型, 整数型, , , #文件类型_xx
    .成员 Unknow_3, 整数型, , , 
    .成员 编译类型, 整数型, , , #编译类型_xx
    .成员 Unknow_9, 整数型, , "8", 

数据类型 用户信息段, 公开, 
    .成员 程序名称, 文本型, , , 
    .成员 程序备注, 文本型, , , 
    .成员 作者, 文本型, , , 
    .成员 邮政编码, 文本型, , , 
    .成员 联系地址, 文本型, , , 
    .成员 电话, 文本型, , , 
    .成员 传真, 文本型, , , 
    .成员 电子信箱, 文本型, , , 
    .成员 主页, 文本型, , , 
    .成员 其他, 文本型, , , 
    .成员 版本号1, 整数型, , , 
    .成员 版本号2, 整数型, , , 

数据类型 资源段, 公开, 
    .成员 窗体, 资源段_窗体, , "1", 
    .成员 常量, 资源段_常量, , "1", 
    .成员 reserve, 整数型, , , 

数据类型 资源段_窗体, 公开, 
    .成员 段头, 块段头, , , 
    .成员 未知1, 整数型, , , 
    .成员 未知2, 整数型, , , 
    .成员 左边, 整数型, , , 
    .成员 名称, 文本型, , , 
    .成员 备注, 文本型, , , 
    .成员 元素, 资源段_窗体_元素, , "1", 

数据类型 资源段_窗体_元素, 公开, 
    .成员 保留, 整数型, , , 

数据类型 资源段_常量, 公开, 
    .成员 标志符, 整数型, , , 
    .成员 Offset, 整数型, , , 
    .成员 dwLength, 整数型, , , 
    .成员 属性, 短整数型, , , 
    .成员 名称, 文本型, , , 
    .成员 备注, 文本型, , , 
    .成员 数据, 变体型, , , 
    .成员 是否为长文本, 逻辑型, , , 
    .成员 结果, 文本型, , , 

数据类型 程序段, 公开, 
    .成员 头信息, 程序段_头信息, , , 
    .成员 代码页, 程序段_代码页, , "1", 
    .成员 函数组, 程序段_函数, , "1", 
    .成员 全局变量, 程序段_变量, , "1", 
    .成员 数据类型, 程序段_数据类型, , "1", 
    .成员 Dll, 程序段_Dll, , "1", 

数据类型 程序段_数据类型, 公开, 
    .成员 段头, 块段头, , , 
    .成员 属性, 整数型, , , 
    .成员 名称, 文本型, , , 
    .成员 备注, 文本型, , , 
    .成员 成员组, 程序段_变量, , "1", 

数据类型 程序段_Dll, 公开, 
    .成员 段头, 块段头, , , 
    .成员 属性, 整数型, , , 
    .成员 返回类型, 整数型, , , 
    .成员 名称, 文本型, , , 
    .成员 备注, 文本型, , , 
    .成员 文件名, 文本型, , , 
    .成员 命令名, 文本型, , , 
    .成员 参数组, 程序段_变量, , "1", 

数据类型 程序段_头信息, 公开, 
    .成员 VerFlag1, 整数型, , , 
    .成员 Unk1, 整数型, , , 
    .成员 Unk2_1, 字节集, , , 
    .成员 Unk2_2, 字节集, , , 
    .成员 Unk2_3, 字节集, , , 
    .成员 支持库信息, 文本型, , "1", 
    .成员 Flag1, 整数型, , , 
    .成员 Flag2, 整数型, , , 
    .成员 Unk3_Op, 字节集, , , 
    .成员 调试命令行, 文本型, , , 
    .成员 ICO图标, 字节集, , , 

数据类型 块段头, 公开, 
    .成员 dwID, 整数型, , , 
    .成员 dwUnk, 整数型, , , 

数据类型 程序段_代码页, 公开, 
    .成员 段头, 块段头, , , 
    .成员 Unk1, 整数型, , , 
    .成员 基类, 整数型, , , 
    .成员 名称, 文本型, , , 
    .成员 备注, 文本型, , , 
    .成员 函数组标志, 整数型, , "1", 
    .成员 页面变量, 程序段_变量, , "1", 

数据类型 程序段_函数, 公开, 
    .成员 段头, 块段头, , , 
    .成员 类型, 整数型, , , 
    .成员 属性, 整数型, , , 
    .成员 返回类型, 整数型, , , 
    .成员 名称, 文本型, , , 
    .成员 备注, 文本型, , , 
    .成员 变量, 程序段_变量, , "1", 
    .成员 参数, 程序段_变量, , "1", 
    .成员 数据1, 字节集, , , 
    .成员 数据2, 字节集, , , 
    .成员 数据3, 字节集, , , 
    .成员 数据4, 字节集, , , 
    .成员 数据5, 字节集, , , 
    .成员 代码, 字节集, , , 

数据类型 程序段_变量, 公开, 
    .成员 标志符, 整数型, , , 
    .成员 Offset, 整数型, , , 
    .成员 dwLength, 整数型, , , 
    .成员 数据类型, 整数型, , , 
    .成员 属性, 短整数型, , , 
    .成员 数组维数, 字节型, , , 
    .成员 数组下标值, 整数型, , "1", 
    .成员 名称, 文本型, , , 
    .成员 备注, 文本型, , , 

数据类型 初始模块段, 公开, 
    .成员 保留, 整数型, , , 

数据类型 可丢失程序段, 公开, 
    .成员 保留, 整数型, , , 

数据类型 编辑信息段1, 公开, 
    .成员 保留, 整数型, , , 

数据类型 编辑信息段2, 公开, 
    .成员 保留, 整数型, , , 

数据类型 辅助信息段1, 公开, 
    .成员 保留, 整数型, , , 

数据类型 辅助信息段2, 公开, 
    .成员 保留, 整数型, , , 

数据类型 易模块记录段, 公开, 
    .成员 保留, 整数型, , , 

数据类型 分析选项, 公开, 
    .成员 禁读_主要页面, 逻辑型, , , 
    .成员 禁读_程序代码, 逻辑型, , , 
    .成员 禁读_资源数据, 逻辑型, , , 


.DLL命令 RtlMoveMemory_库信息, 空白型, "", "RtlMoveMemory", , 
    .参数 Destination, 库信息, , 
    .参数 Source, 整数型, , 
    .参数 Length, 整数型, , 

.DLL命令 CopyMemory_TYPE_INFO, 空白型, "", "RtlMoveMemory", , 
    .参数 lpvDest, LIB_DATA_TYPE_INFO, , 
    .参数 lpvSource, 整数型, , 
    .参数 cbCopy, 整数型, , 

.DLL命令 LoadLibraryA, 整数型, "kernel32.dll", "LoadLibraryA", , 载入指定的动态链接库，并将它映射到当前进程使用的地址空间。成功则返回库模块的句柄，零表示失败。
    .参数 动态链接库路径, 文本型, , 指定要载入的动态链接库的名称(全路径)

.DLL命令 GetProcAddress, 整数型, "kernel32.dll", "GetProcAddress", , 
    .参数 模块句柄, 整数型, , 通过LoadLibraryA命令取得
    .参数 接口名称, 文本型, , 

.DLL命令 CallWindowProc, 整数型, "user32.dll", "CallWindowProcA", , 
    .参数 程序指针, 整数型, , 
    .参数 任务ID, 整数型, , 
    .参数 状态消息号, 整数型, , 
    .参数 本地文件名, 整数型, , 
    .参数 状态提示, 整数型, , 

.DLL命令 FreeLibrary, 逻辑型, "kernel32", "FreeLibrary", , 释放动态链接库
    .参数 动态链接库句柄, 整数型, , 使用LoadLibraryA命令返回的

.程序集 EC, , , 

.子程序 _启动子程序, 整数型, , 请在本子程序中放置易模块初始化代码
.局部变量 用户信息段, 用户信息, , , 
.局部变量 系统信息段, 系统信息, , , 
.局部变量 用户信息, 用户信息, 静态, , 
.局部变量 系统信息, 系统信息, 静态, , 
.局部变量 公开程序集, 公开程序集, 静态, "0", 
.局部变量 公开类, 公开类, 静态, "0", 
.局部变量 公开类型, 公开类型, 静态, "0", 
.局部变量 公开DLL, 公开DLL, 静态, "0", 
.局部变量 公开常量, 公开常量, 静态, "0", 
.局部变量 公开全局变量, 公开全局变量, 静态, "0", 
.局部变量 公开窗口, 公开窗口, , "0", 

输出调试文本 (取易语言安装目录 ())
返回 (0) ' 可以根据您的需要返回任意数值

.程序集 程序集1, , , 

.程序集变量 支持库数据类型, 支持库数据类型, , "100", 
.程序集变量 支持库, 支持库, , "0", 
.程序集变量 支持库2, 支持库, , , 
.程序集变量 库信息, 库信息, , , 
.程序集变量 第一次, 逻辑型, , , 
.子程序 Error, 空白型, , 
.参数 text, 文本型, , 

输出调试文本 (text)

.子程序 模块_分析文件, 逻辑型, 公开, 
.参数 文件路径, 文本型, , 
.参数 用户信息, 用户信息, 可空, 
.参数 系统信息, 系统信息, 可空, 
.参数 公开程序集, 公开程序集, 可空 数组, 
.参数 公开类, 公开类, 可空 数组, 
.参数 公开类型, 公开类型, 可空 数组, 
.参数 公开DLL, 公开DLL, 可空 数组, 
.参数 公开常量, 公开常量, 可空 数组, 
.参数 公开全局变量, 公开全局变量, 可空 数组, 
.参数 公开窗口, 公开窗口, 可空 数组, 

.局部变量 分析选项, 分析选项, , , 
.局部变量 匿名局部变量_3987, 空白型, , , 
.局部变量 用户信息段, 用户信息段, , , 
.局部变量 资源段, 资源段, , , 
.局部变量 程序段, 程序段, , , 
.局部变量 系统信息段, 系统信息段, , , 
.局部变量 iRight, 空白型, , , 
.局部变量 iLeft, 空白型, , , 
.局部变量 nil_用户信息, 用户信息, , , 
.局部变量 nil_系统信息, 系统信息, , , 
.局部变量 匿名局部变量_1686, 空白型, , , 
.局部变量 iChildLeft, 空白型, , , 
.局部变量 iChildRight, 空白型, , , 
.局部变量 是否存在, 逻辑型, , , 
.局部变量 count, 空白型, , , 
.局部变量 X, 空白型, , , 
.局部变量 分割文本, 字节集, , "0", 

赋值 (第一次, 真)
赋值 (分析选项.禁读_程序代码, 真)
.如果真 (是否为空 (公开常量))
    赋值 (分析选项.禁读_资源数据, 真)
.如果真结束
.如果真 (并且 (是否为空 (公开程序集), 是否为空 (公开类), 是否为空 (公开类型), 是否为空 (公开DLL), 是否为空 (公开常量), 是否为空 (公开全局变量)))
    赋值 (分析选项.禁读_主要页面, 真)
.如果真结束
重定义数组 (nil_系统信息.支持库列表, 假, 0)

赋值 (用户信息, nil_用户信息)
赋值 (系统信息, nil_系统信息)
重定义数组 (公开程序集, 假, 0)
重定义数组 (公开类型, 假, 0)
重定义数组 (公开DLL, 假, 0)
重定义数组 (公开类, 假, 0)
重定义数组 (公开常量, 假, 0)
重定义数组 (公开全局变量, 假, 0)
.如果真 (等于 (模块_分析易文件 (文件路径, , , 分析选项, 系统信息段, 用户信息段, 资源段, 程序段, , , , , , , ), 假))
    返回 (假)
.如果真结束
.如果真 (等于 (是否为空 (用户信息), 假))
    赋值 (用户信息.作者, 用户信息段.作者)
    赋值 (用户信息.电话, 用户信息段.电话)
    赋值 (用户信息.传真, 用户信息段.传真)
    赋值 (用户信息.主页, 用户信息段.主页)
    赋值 (用户信息.其他, 用户信息段.其他)
    赋值 (用户信息.版本号1, 用户信息段.版本号1)
    赋值 (用户信息.版本号2, 用户信息段.版本号2)
    赋值 (用户信息.程序名称, 用户信息段.程序名称)
    赋值 (用户信息.程序备注, 用户信息段.程序备注)
    赋值 (用户信息.邮政编码, 用户信息段.邮政编码)
    赋值 (用户信息.联系地址, 用户信息段.联系地址)
    赋值 (用户信息.电子信箱, 用户信息段.联系地址)
.如果真结束
.如果真 (等于 (是否为空 (系统信息), 假))
    赋值 (系统信息.编译版本, 相加 (到文本 (系统信息段.编译版本1), “.”, 到文本 (系统信息段.编译版本2)))
    赋值 (系统信息.支持库列表, 程序段.头信息.支持库信息)
    .计次循环首 (取数组成员数 (系统信息.支持库列表), X)
        加入成员 (支持库, 支持库2)
        赋值 (分割文本, 分割字节集 (到字节集 (系统信息.支持库列表 [X]), { 13 }, ))
        赋值 (支持库 [X], 文件名, 到文本 (分割文本 [1]))
    .计次循环尾 ()
.如果真结束

 ' .计次循环首 (取数组成员数 (程序段.), iRight)
     ' .如果真 (等于 (取数组成员数 (程序段. [iRight], ), 0))
         ' 到循环尾 ()
    .如果真结束
     ' .判断开始 (等于 (程序段. [iRight], , 0))
        
     ' .判断 (不等于 (程序段. [iRight], , 0))
         ' .如果真 (等于 (程序段. [iRight], , “”))
             ' 到循环尾 ()
        .如果真结束
        
    .默认
        
    .判断结束
    
     ' 是否已添加 ＝ 假
     ' .计次循环首 (取数组成员数 (程序段. [iRight], ), iChildRight)
         ' 是否存在 ＝ 假
         ' .计次循环首 (取数组成员数 (程序段.函数组), )
             ' .如果真 (等于 (程序段. [iRight],  [iChildRight], 程序段.函数组 [段头].))
                 ' 是否存在 ＝ 真
                 ' 跳出循环 ()
            .如果真结束
            
         ' .计次循环尾 ()
         ' .如果 (是否存在)
             ' .如果真 (等于 (程序段.函数组 [名称], “”))
                 ' 到循环尾 ()
            .如果真结束
             ' .如果真 (等于 (假))
                 ' .判断开始 (等于 (程序段. [iRight], , 0))
                     ' iLeft ＝ 取数组成员数 (公开程序集) ＋ 1
                     ' 重定义数组 (公开程序集, 真, iLeft)
                     ' 重定义数组 (公开程序集 [iLeft].函数组, 假, 0)
                 ' .判断 (不等于 (程序段. [iRight], , 0))
                     ' iLeft ＝ 取数组成员数 (公开类) ＋ 1
                     ' 重定义数组 (公开类, 真, iLeft)
                     ' 重定义数组 (公开类 [iLeft].函数组, 假, 0)
                     ' 公开类 [iLeft].名称 ＝ 程序段.程序集 [iRight].名称
                     ' 公开类 [iLeft].备注 ＝ 程序段.程序集 [iRight].备注
                     ' 公开类 [iLeft].基类 ＝ 取数据类型名称 (程序段.程序集 [iRight].基类, 程序段)
                .默认
                     ' Error (“[分析异常]未知错误1”)
                .判断结束
                 ' 是否已添加 ＝ 真
            .如果真结束
            
             ' .判断开始 (等于 (程序段. [iRight], , 0))
                 ' iChildLeft ＝ 取数组成员数 (公开程序集 [iLeft].函数组) ＋ 1
                 ' 重定义数组 (公开程序集 [iLeft].函数组, 真, iChildLeft)
                 ' 公开程序集 [iLeft].函数组 [iChildLeft].名称 ＝ 程序段.函数组 [iSearch].名称
                 ' 公开程序集 [iLeft].函数组 [iChildLeft].备注 ＝ 程序段.函数组 [iSearch].备注
                 ' 公开程序集 [iLeft].函数组 [iChildLeft].返回类型 ＝ 取数据类型名称 (程序段.函数组 [iSearch].返回类型, 程序段)
                 ' 转换参数信息 (公开程序集 [iLeft].函数组 [iChildLeft].参数组, 程序段.函数组 [iSearch].参数, 程序段)
             ' .判断 (不等于 (程序段. [iRight], , 0))
                 ' iChildLeft ＝ 取数组成员数 (公开类 [iLeft].函数组) ＋ 1
                 ' 重定义数组 (公开类 [iLeft].函数组, 真, iChildLeft)
                 ' 公开类 [iLeft].函数组 [iChildLeft].名称 ＝ 程序段.函数组 [iSearch].名称
                 ' 公开类 [iLeft].函数组 [iChildLeft].备注 ＝ 程序段.函数组 [iSearch].备注
                 ' 公开类 [iLeft].函数组 [iChildLeft].返回类型 ＝ 取数据类型名称 (程序段.函数组 [iSearch].返回类型, 程序段)
                 ' 转换参数信息 (公开类 [iLeft].函数组 [iChildLeft].参数组, 程序段.函数组 [iSearch].参数, 程序段)
            .默认
                 ' Error (“[分析异常]未知错误2”)
            .判断结束
            
        .否则
             ' Error (“[分析异常]函数组标记不存在”)
        .如果结束
        
     ' .计次循环尾 ()
 ' .计次循环尾 ()
.如果真 (或者 (等于 (是否为空 (公开程序集), 假), 等于 (是否为空 (公开类), 假)))
    赋值 (count, 取数组成员数 (程序段.代码页))
    赋值 (count, 相加 (count, 1)) ' 无主程序集
    重定义数组 (公开程序集, 假, count)
    重定义数组 (公开类, 假, count)
    .计次循环首 (count, iLeft)
        重定义数组 (公开程序集 [iLeft], 函数组, 假, 0)
        重定义数组 (公开类 [iLeft], 函数组, 假, 0)
        .如果真 (不等于 (iLeft, count))
            .判断开始 (等于 (程序段.代码页 [iLeft], 基类, 0))
                
            .判断 (不等于 (程序段.代码页 [iLeft], 基类, 0))
                赋值 (公开类 [iLeft], 名称, 程序段.代码页 [iLeft], 名称)
                赋值 (公开类 [iLeft], 备注, 程序段.代码页 [iLeft], 备注)
                赋值 (公开类 [iLeft], 基类, 取数据类型名称 (程序段.代码页 [iLeft], 基类, 程序段))
            .默认
                Error (“[分析异常]未知错误1”)
            .判断结束
            
        .如果真结束
        
    .计次循环尾 ()
    .计次循环首 (取数组成员数 (程序段.函数组), iRight)
        .如果真 (等于 (程序段.函数组 [iRight], 名称, “”))
            到循环尾 ()
        .如果真结束
        赋值 (是否存在, 假)
        .如果真 (等于 (是否存在, 假))
            .计次循环首 (取数组成员数 (程序段.代码页), iLeft)
                .计次循环首 (取数组成员数 (程序段.代码页 [iLeft], 函数组标志), iChildLeft)
                    .如果真 (等于 (程序段.代码页 [iLeft], 函数组标志 [iChildLeft], 程序段.函数组 [iRight], 段头.dwID))
                        赋值 (是否存在, 真)
                        跳出循环 ()
                    .如果真结束
                    
                .计次循环尾 ()
                .如果真 (是否存在)
                    .判断开始 (等于 (程序段.代码页 [iLeft], 基类, 0))
                        赋值 (iChildLeft, 相加 (取数组成员数 (公开程序集 [iLeft], 函数组), 1))
                        重定义数组 (公开程序集 [iLeft], 函数组, 真, iChildLeft)
                        赋值 (公开程序集 [iLeft], 函数组 [iChildLeft], 名称, 程序段.函数组 [iRight], 名称)
                        赋值 (公开程序集 [iLeft], 函数组 [iChildLeft], 备注, 程序段.函数组 [iRight], 备注)
                        赋值 (公开程序集 [iLeft], 函数组 [iChildLeft], 返回类型, 取数据类型名称 (程序段.函数组 [iRight], 返回类型, 程序段))
                        赋值 (公开程序集 [iLeft], 函数组 [iChildLeft], 代码, 程序段.函数组 [iRight], 代码)
                        转换参数信息 (公开程序集 [iLeft], 函数组 [iChildLeft], 参数组, 程序段.函数组 [iRight], 参数, 程序段)
                    .判断 (不等于 (程序段.代码页 [iLeft], 基类, 0))
                        .如果真 (不等于 (程序段.代码页 [iLeft], 名称, “”)) ' 检查是否私有类的公开函数
                            .如果真 (不等于 (位与 (程序段.函数组 [iRight], 属性, #程序段_函数_属性_公开), 0)) ' 检查类方法是否公开
                                赋值 (iChildLeft, 相加 (取数组成员数 (公开类 [iLeft], 函数组), 1))
                                重定义数组 (公开类 [iLeft], 函数组, 真, iChildLeft)
                                赋值 (公开类 [iLeft], 函数组 [iChildLeft], 名称, 程序段.函数组 [iRight], 名称)
                                赋值 (公开类 [iLeft], 函数组 [iChildLeft], 备注, 程序段.函数组 [iRight], 备注)
                                赋值 (公开类 [iLeft], 函数组 [iChildLeft], 返回类型, 取数据类型名称 (程序段.函数组 [iRight], 返回类型, 程序段))
                                赋值 (公开类 [iLeft], dwID, 程序段.函数组 [iRight], 段头.dwID)
                                转换参数信息 (公开类 [iLeft], 函数组 [iChildLeft], 参数组, 程序段.函数组 [iRight], 参数, 程序段)
                            .如果真结束
                            
                        .如果真结束
                        
                    .默认
                        Error (“[分析异常]未知错误2”)
                    .判断结束
                    跳出循环 ()
                .如果真结束
                
            .计次循环尾 ()
        .如果真结束
        .如果真 (等于 (是否存在, 假))
             ' 无主函数
            赋值 (iLeft, 取数组成员数 (公开程序集))
            
            赋值 (iChildLeft, 相加 (取数组成员数 (公开程序集 [iLeft], 函数组), 1))
            重定义数组 (公开程序集 [iLeft], 函数组, 真, iChildLeft)
            赋值 (公开程序集 [iLeft], 函数组 [iChildLeft], 名称, 程序段.函数组 [iRight], 名称)
            赋值 (公开程序集 [iLeft], 函数组 [iChildLeft], 备注, 程序段.函数组 [iRight], 备注)
            赋值 (公开程序集 [iLeft], 函数组 [iChildLeft], 返回类型, 取数据类型名称 (程序段.函数组 [iRight], 返回类型, 程序段))
            赋值 (公开程序集 [iLeft], 函数组 [iChildLeft], 代码, 程序段.函数组 [iRight], 代码)
            转换参数信息 (公开程序集 [iLeft], 函数组 [iChildLeft], 参数组, 程序段.函数组 [iRight], 参数, 程序段)
            
        .如果真结束
        
    .计次循环尾 ()
    赋值 (iLeft, 1)
    .判断循环首 (小于或等于 (iLeft, 取数组成员数 (公开程序集)))
        .如果 (等于 (取数组成员数 (公开程序集 [iLeft], 函数组), 0))
            删除成员 (公开程序集, iLeft, )
        .否则
            赋值 (iLeft, 相加 (iLeft, 1))
        .如果结束
        
    .判断循环尾 ()
    赋值 (iLeft, 1)
    .判断循环首 (小于或等于 (iLeft, 取数组成员数 (公开类)))
        .如果 (等于 (取数组成员数 (公开类 [iLeft], 函数组), 0))
            删除成员 (公开类, iLeft, )
        .否则
            赋值 (iLeft, 相加 (iLeft, 1))
        .如果结束
        
    .判断循环尾 ()
    
.如果真结束

.如果真 (等于 (是否为空 (公开类型), 假))
    .计次循环首 (取数组成员数 (程序段.数据类型), iRight)
        .如果真 (等于 (程序段.数据类型 [iRight], 名称, “”))
            到循环尾 ()
        .如果真结束
        赋值 (iLeft, 相加 (取数组成员数 (公开类型), 1))
        重定义数组 (公开类型, 真, iLeft)
        赋值 (公开类型 [iLeft], 名称, 程序段.数据类型 [iRight], 名称)
        赋值 (公开类型 [iLeft], 备注, 程序段.数据类型 [iRight], 备注)
        赋值 (公开类型 [iLeft], dwID, 程序段.数据类型 [iRight], 段头.dwID)
        转换参数信息 (公开类型 [iLeft], 参数组, 程序段.数据类型 [iRight], 成员组, 程序段)
    .计次循环尾 ()
.如果真结束
赋值 (库信息.自定义数据类型数目, 取数组成员数 (公开类型))
.如果真 (等于 (是否为空 (公开DLL), 假))
    .计次循环首 (取数组成员数 (程序段.Dll), iRight)
        .如果真 (等于 (程序段.Dll [iRight], 名称, “”))
            到循环尾 ()
        .如果真结束
        赋值 (iLeft, 相加 (取数组成员数 (公开DLL), 1))
        重定义数组 (公开DLL, 真, iLeft)
        赋值 (公开DLL [iLeft], 名称, 程序段.Dll [iRight], 名称)
        赋值 (公开DLL [iLeft], 备注, 程序段.Dll [iRight], 备注)
        赋值 (公开DLL [iLeft], 返回类型, 取数据类型名称 (程序段.Dll [iRight], 返回类型, 程序段))
        赋值 (公开DLL [iLeft], 文件名, 程序段.Dll [iRight], 文件名)
        赋值 (公开DLL [iLeft], 命令名, 程序段.Dll [iRight], 命令名)
        转换参数信息 (公开DLL [iLeft], 参数组, 程序段.Dll [iRight], 参数组, 程序段)
    .计次循环尾 ()
.如果真结束

.如果真 (等于 (是否为空 (公开常量), 假))
    .计次循环首 (取数组成员数 (资源段.常量), iRight)
        .如果真 (等于 (资源段.常量 [iRight], 名称, “”))
            到循环尾 ()
        .如果真结束
        赋值 (iLeft, 相加 (取数组成员数 (公开常量), 1))
        重定义数组 (公开常量, 真, iLeft)
        赋值 (公开常量 [iLeft], 名称, 资源段.常量 [iRight], 名称)
        赋值 (公开常量 [iLeft], 备注, 资源段.常量 [iRight], 备注)
        赋值 (公开常量 [iLeft], 数据, 资源段.常量 [iRight], 数据)
        赋值 (公开常量 [iLeft], 是否为长文本, 资源段.常量 [iRight], 是否为长文本)
        赋值 (公开常量 [iLeft], 结果, 资源段.常量 [iRight], 结果)
    .计次循环尾 ()
.如果真结束

.如果真 (等于 (是否为空 (公开窗口), 假))
    .计次循环首 (取数组成员数 (资源段.窗体), iRight)
        赋值 (iLeft, 相加 (取数组成员数 (公开窗口), 1))
        重定义数组 (公开窗口, 真, iLeft)
        赋值 (公开窗口 [iLeft], 名称, 资源段.窗体 [iRight], 名称)
        赋值 (公开窗口 [iLeft], 备注, 资源段.窗体 [iRight], 备注)
    .计次循环尾 ()
.如果真结束

.如果真 (等于 (是否为空 (公开全局变量), 假))
    .计次循环首 (取数组成员数 (程序段.全局变量), iRight)
        .如果真 (等于 (程序段.全局变量 [iRight], 名称, “”))
            到循环尾 ()
        .如果真结束
        赋值 (iLeft, 相加 (取数组成员数 (公开全局变量), 1))
        重定义数组 (公开全局变量, 真, iLeft)
        赋值 (公开全局变量 [iLeft], 名称, 程序段.全局变量 [iRight], 名称)
        赋值 (公开全局变量 [iLeft], 备注, 程序段.全局变量 [iRight], 备注)
        赋值 (公开全局变量 [iLeft], 数据类型, 取数据类型名称 (程序段.全局变量 [iRight], 数据类型, 程序段))
        赋值 (公开全局变量 [iLeft], 数组下标, 程序段.全局变量 [iRight], 数组下标值)
    .计次循环尾 ()
.如果真结束
返回 (真)

.子程序 转换参数信息, 空白型, , 
.参数 结果, 函数参数, 数组, 
.参数 来源, 程序段_变量, 数组, 
.参数 程序段, 程序段, , 

.局部变量 i, 空白型, , , 

重定义数组 (结果, 假, 取数组成员数 (来源))
.计次循环首 (取数组成员数 (结果), i)
    赋值 (结果 [i], 名称, 来源 [i], 名称)
    赋值 (结果 [i], 备注, 来源 [i], 备注)
    赋值 (结果 [i], 数据类型, 取数据类型名称 (来源 [i], 数据类型, 程序段))
    赋值 (结果 [i], dwID, 来源 [i], 数据类型)
    赋值 (结果 [i], 传址, 不等于 (位与 (来源 [i], 属性, #程序段_变量_属性_传址), 0))
    赋值 (结果 [i], 可空, 不等于 (位与 (来源 [i], 属性, #程序段_变量_属性_可空), 0))
    赋值 (结果 [i], 数组, 不等于 (位与 (来源 [i], 属性, #程序段_变量_属性_数组), 0))
    赋值 (结果 [i], 数组下标值, 来源 [i], 数组下标值)
.计次循环尾 ()

.子程序 取数据类型名称, 文本型, , 
.参数 数据类型值, 整数型, , 
.参数 程序段, 程序段, , 

.局部变量 i, 整数型, , , 

.计次循环首 (取数组成员数 (程序段.数据类型), i)
    .如果真 (或者 (等于 (程序段.数据类型 [i], 段头.dwID, 数据类型值), 等于 (程序段.数据类型 [i], 段头.dwUnk, 数据类型值)))
        返回 (程序段.数据类型 [i], 名称)
    .如果真结束
    
.计次循环尾 ()
.计次循环首 (取数组成员数 (程序段.代码页), i)
    .如果真 (或者 (等于 (程序段.代码页 [i], 段头.dwID, 数据类型值), 等于 (程序段.代码页 [i], 段头.dwUnk, 数据类型值)))
        返回 (程序段.代码页 [i], 名称)
    .如果真结束
    
.计次循环尾 ()
.判断开始 (等于 (数据类型值, #数据类型_空白型))
    返回 (“”)
.判断 (等于 (数据类型值, #数据类型_字节型))
    返回 (“字节型”)
.判断 (等于 (数据类型值, #数据类型_短整数))
    返回 (“短整数”)
.判断 (等于 (数据类型值, #数据类型_整数型))
    返回 (“整数型”)
.判断 (等于 (数据类型值, #数据类型_长整数型))
    返回 (“长整数型”)
.判断 (等于 (数据类型值, #数据类型_小数型))
    返回 (“小数型”)
.判断 (等于 (数据类型值, #数据类型_双精度小数))
    返回 (“双精度小数”)
.判断 (等于 (数据类型值, #数据类型_逻辑型))
    返回 (“逻辑型”)
.判断 (等于 (数据类型值, #数据类型_日期时间型))
    返回 (“日期时间型”)
.判断 (等于 (数据类型值, #数据类型_文本型))
    返回 (“文本型”)
.判断 (等于 (数据类型值, #数据类型_字节集))
    返回 (“字节集”)
.判断 (等于 (数据类型值, #数据类型_子程序指针))
    返回 (“子程序指针”)
.判断 (等于 (数据类型值, #数据类型_窗口))
    返回 (“窗口”)
.判断 (等于 (数据类型值, #数据类型_菜单))
    返回 (“菜单”)
.判断 (等于 (数据类型值, #数据类型_字体))
    返回 (“字体”)
.判断 (等于 (数据类型值, #数据类型_编辑框))
    返回 (“编辑框”)
.判断 (等于 (数据类型值, #数据类型_图片框))
    返回 (“图片框”)
.判断 (等于 (数据类型值, #数据类型_外形框))
    返回 (“外形框”)
.判断 (等于 (数据类型值, #数据类型_画板))
    返回 (“画板”)
.判断 (等于 (数据类型值, #数据类型_分组框))
    返回 (“分组框”)
.判断 (等于 (数据类型值, #数据类型_标签))
    返回 (“标签”)
.判断 (等于 (数据类型值, #数据类型_按钮))
    返回 (“按钮”)
.判断 (等于 (数据类型值, #数据类型_选择框))
    返回 (“选择框”)
.判断 (等于 (数据类型值, #数据类型_单选框))
    返回 (“单选框”)
.判断 (等于 (数据类型值, #数据类型_组合框))
    返回 (“组合框”)
.判断 (等于 (数据类型值, #数据类型_列表框))
    返回 (“列表框”)
.判断 (等于 (数据类型值, #数据类型_选择列表框))
    返回 (“选择列表框”)
.判断 (等于 (数据类型值, #数据类型_横向滚动条))
    返回 (“横向滚动条”)
.判断 (等于 (数据类型值, #数据类型_纵向滚动条))
    返回 (“纵向滚动条”)
.判断 (等于 (数据类型值, #数据类型_进度条))
    返回 (“进度条”)
.判断 (等于 (数据类型值, #数据类型_滑块条))
    返回 (“滑块条”)
.判断 (等于 (数据类型值, #数据类型_选择夹))
    返回 (“选择夹”)
.判断 (等于 (数据类型值, #数据类型_影像框))
    返回 (“影像框”)
.判断 (等于 (数据类型值, #数据类型_日期框))
    返回 (“日期框”)
.判断 (等于 (数据类型值, #数据类型_月历))
    返回 (“月历”)
.判断 (等于 (数据类型值, #数据类型_驱动器框))
    返回 (“驱动器框”)
.判断 (等于 (数据类型值, #数据类型_目录框))
    返回 (“目录框”)
.判断 (等于 (数据类型值, #数据类型_文件框))
    返回 (“文件框”)
.判断 (等于 (数据类型值, #数据类型_颜色选择器))
    返回 (“颜色选择器”)
.判断 (等于 (数据类型值, #数据类型_超级链接框))
    返回 (“超级链接框”)
.判断 (等于 (数据类型值, #数据类型_调节器))
    返回 (“调节器”)
.判断 (等于 (数据类型值, #数据类型_通用对话框))
    返回 (“通用对话框”)
.判断 (等于 (数据类型值, #数据类型_时钟))
    返回 (“时钟”)
.判断 (等于 (数据类型值, #数据类型_打印机))
    返回 (“打印机”)
.判断 (等于 (数据类型值, #数据类型_字段信息))
    返回 (“字段信息”)
.判断 (等于 (数据类型值, #数据类型_数据报))
    返回 (“数据报”)
.判断 (等于 (数据类型值, #数据类型_客户))
    返回 (“客户”)
.判断 (等于 (数据类型值, #数据类型_服务器))
    返回 (“服务器”)
.判断 (等于 (数据类型值, #数据类型_端口))
    返回 (“端口”)
.判断 (等于 (数据类型值, #数据类型_打印设置信息))
    返回 (“打印设置信息”)
.判断 (等于 (数据类型值, #数据类型_表格))
    返回 (“表格”)
.判断 (等于 (数据类型值, #数据类型_数据源))
    返回 (“数据源”)
.判断 (等于 (数据类型值, #数据类型_通用提供者))
    返回 (“通用提供者”)
.判断 (等于 (数据类型值, #数据类型_数据库提供者))
    返回 (“数据库提供者”)
.判断 (等于 (数据类型值, #数据类型_图形按钮))
    返回 (“图形按钮”)
.判断 (等于 (数据类型值, #数据类型_外部数据库))
    返回 (“外部数据库”)
.判断 (等于 (数据类型值, #数据类型_外部数据提供者))
    返回 (“外部数据提供者”)
.判断 (等于 (数据类型值, #数据类型_对象))
    返回 (“对象”)
.判断 (等于 (数据类型值, #数据类型_变体型))
    返回 (“变体型”)
.判断 (等于 (数据类型值, #数据类型_变体类型))
    返回 (“变体类型”)
.判断 (等于 (数据类型值, #数据类型_工具条))
    返回 (“工具条”)
.判断 (等于 (数据类型值, #数据类型_超级列表框))
    返回 (“超级列表框”)
.判断 (等于 (数据类型值, #数据类型_高级表格))
    返回 (“高级表格”)
.判断 (等于 (数据类型值, -1)) ' 空基类
    返回 (“”)
.默认
    返回 (取支持库数据类型 (数据类型值))
.判断结束
返回 (“”)

.子程序 取支持库数据类型, 文本型, , 
.参数 类型值, 整数型, , 

.局部变量 支持库序号, 整数型, , , 
.局部变量 数据类型序号, 整数型, , , 


赋值 (支持库序号, 右移 (类型值, 16))
.如果真 (或者 (小于 (支持库序号, 1), 大于 (支持库序号, 取数组成员数 (支持库))))
    Error (相加 (“未知的数据类型：”, 到文本 (类型值), “[”, 取十六进制文本 (类型值), “]”))
    返回 (“”)
.如果真结束
.如果真 (等于 (支持库数据类型 [支持库序号], 已读取, 假))
    读取支持库数据类型 (支持库序号)
.如果真结束
赋值 (数据类型序号, 位与 (类型值, 65535))
.如果真 (大于 (数据类型序号, 取数组成员数 (支持库数据类型 [支持库序号], 数据类型)))
    Error (相加 (“数据类型序号越界：”, 到文本 (类型值), “[”, 取十六进制文本 (类型值), “] => ”, 支持库 [支持库序号], 文件名))
    返回 (“”)
.如果真结束
返回 (支持库数据类型 [支持库序号], 数据类型 [数据类型序号])

.子程序 读取支持库数据类型, 空白型, , 
.参数 序号, 整数型, , 

.局部变量 库信息指针, 整数型, , , 
.局部变量 i, 整数型, , , 
.局部变量 字节集指针, 整数型, , , 
.局部变量 info, LIB_DATA_TYPE_INFO, , , 
.局部变量 易语言目录, 文本型, 静态, , 

.如果真 (等于 (序号, 1))
    返回 ()
.如果真结束
.判断开始 (等于 (易语言目录, “”))
    赋值 (易语言目录, 相加 (取易语言安装目录 (), “lib\”))
    .如果真 (等于 (易语言目录, “”))
        Error (“未找到易语言安装目录！”)
        赋值 (易语言目录, “\”)
    .如果真结束
    输出调试文本 (易语言目录)
.默认
    .如果真 (等于 (易语言目录, “\”))
        赋值 (支持库数据类型 [序号], 已读取, 真)
        返回 ()
    .如果真结束
    
.判断结束
赋值 (库信息指针, 取支持库信息指针 (相加 (易语言目录, 支持库 [序号], 文件名, “.fne”)))
.如果真 (等于 (库信息指针, -1))
    赋值 (支持库数据类型 [序号], 已读取, 真)
    返回 ()
.如果真结束
RtlMoveMemory_库信息 (库信息, 库信息指针, 144)
清除数组 (支持库数据类型 [序号], 数据类型)
.如果真 (大于 (库信息.自定义数据类型数目, 0))
    .变量循环首 (0, 相减 (库信息.自定义数据类型数目, 1), 1, i)
        CopyMemory_TYPE_INFO (info, 相加 (库信息.自定义数据指针, 相乘 (i, 56)), 56)
        加入成员 (支持库数据类型 [序号], 数据类型, info.m_szName)
    .变量循环尾 ()
.如果真结束
赋值 (支持库数据类型 [序号], 已读取, 真)

.子程序 取易语言安装目录, 文本型, , 
.局部变量 文本变量, 文本型, , , 

赋值 (文本变量, 取文本注册项 (#现行用户, “Software\FlySky\E\Install\Path”, ))
赋值 (文本变量, 取文本左边 (文本变量, 相减 (取文本长度 (文本变量), 5)))
返回 (相加 (文本变量, “\”))

.子程序 取支持库信息指针, 整数型, , 
.参数 文件路径, 文本型, , 

.局部变量 模块句柄, 整数型, , , 
.局部变量 函数地址, 整数型, , , 

.如果真 (等于 (文件是否存在 (文件路径), 假))
    Error (相加 (“支持库文件”, 文件路径, “不存在！”))
    返回 (-1)
.如果真结束
赋值 (模块句柄, LoadLibraryA (文件路径))
.如果真 (等于 (模块句柄, 0))
    返回 (-1)
.如果真结束
赋值 (函数地址, GetProcAddress (模块句柄, “GetNewInf”))
.判断开始 (不等于 (函数地址, 0))
    返回 (CallWindowProc (函数地址, 0, 0, 0, 0))
.默认
    FreeLibrary (模块句柄)
    返回 (-1)
.判断结束


.子程序 取核心支持库数据类型, 空白型, , 
.局部变量 a, 文本型, , "0", 
.局部变量 i, 整数型, , , 

赋值 (a, 分割文本 (#核心支持库, “|”, ))
重定义数组 (支持库数据类型 [1].数据类型, 假, 取数组成员数 (a))
.计次循环首 (取数组成员数 (a), i)
    赋值 (支持库数据类型 [1].数据类型 [i], a [i])
.计次循环尾 ()
赋值 (支持库数据类型 [1].已读取, 真)

.子程序 取数据类型名称2, 文本型, 公开, 
.参数 数据类型值, 整数型, , 
.参数 公开类型, 公开类型, 可空 数组, 
.参数 公开类, 公开类, 可空 数组, 

.局部变量 i, 整数型, , , 
.局部变量 Y, 整数型, , , 

.计次循环首 (取数组成员数 (公开类型), i)
    .如果真 (等于 (公开类型 [i], dwID, 数据类型值))
        返回 (公开类型 [i], 名称)
    .如果真结束
    
.计次循环尾 ()
.计次循环首 (取数组成员数 (公开类), i)
    .如果真 (等于 (公开类 [i], dwID, 数据类型值))
        返回 (公开类 [i], 名称)
    .如果真结束
    
.计次循环尾 ()
.判断开始 (等于 (数据类型值, #数据类型_空白型))
    返回 (“”)
.判断 (等于 (数据类型值, #数据类型_字节型))
    返回 (“字节型”)
.判断 (等于 (数据类型值, #数据类型_短整数))
    返回 (“短整数”)
.判断 (等于 (数据类型值, #数据类型_整数型))
    返回 (“整数型”)
.判断 (等于 (数据类型值, #数据类型_长整数型))
    返回 (“长整数型”)
.判断 (等于 (数据类型值, #数据类型_小数型))
    返回 (“小数型”)
.判断 (等于 (数据类型值, #数据类型_双精度小数))
    返回 (“双精度小数”)
.判断 (等于 (数据类型值, #数据类型_逻辑型))
    返回 (“逻辑型”)
.判断 (等于 (数据类型值, #数据类型_日期时间型))
    返回 (“日期时间型”)
.判断 (等于 (数据类型值, #数据类型_文本型))
    返回 (“文本型”)
.判断 (等于 (数据类型值, #数据类型_字节集))
    返回 (“字节集”)
.判断 (等于 (数据类型值, #数据类型_子程序指针))
    返回 (“子程序指针”)
.判断 (等于 (数据类型值, #数据类型_窗口))
    返回 (“窗口”)
.判断 (等于 (数据类型值, #数据类型_菜单))
    返回 (“菜单”)
.判断 (等于 (数据类型值, #数据类型_字体))
    返回 (“字体”)
.判断 (等于 (数据类型值, #数据类型_编辑框))
    返回 (“编辑框”)
.判断 (等于 (数据类型值, #数据类型_图片框))
    返回 (“图片框”)
.判断 (等于 (数据类型值, #数据类型_外形框))
    返回 (“外形框”)
.判断 (等于 (数据类型值, #数据类型_画板))
    返回 (“画板”)
.判断 (等于 (数据类型值, #数据类型_分组框))
    返回 (“分组框”)
.判断 (等于 (数据类型值, #数据类型_标签))
    返回 (“标签”)
.判断 (等于 (数据类型值, #数据类型_按钮))
    返回 (“按钮”)
.判断 (等于 (数据类型值, #数据类型_选择框))
    返回 (“选择框”)
.判断 (等于 (数据类型值, #数据类型_单选框))
    返回 (“单选框”)
.判断 (等于 (数据类型值, #数据类型_组合框))
    返回 (“组合框”)
.判断 (等于 (数据类型值, #数据类型_列表框))
    返回 (“列表框”)
.判断 (等于 (数据类型值, #数据类型_选择列表框))
    返回 (“选择列表框”)
.判断 (等于 (数据类型值, #数据类型_横向滚动条))
    返回 (“横向滚动条”)
.判断 (等于 (数据类型值, #数据类型_纵向滚动条))
    返回 (“纵向滚动条”)
.判断 (等于 (数据类型值, #数据类型_进度条))
    返回 (“进度条”)
.判断 (等于 (数据类型值, #数据类型_滑块条))
    返回 (“滑块条”)
.判断 (等于 (数据类型值, #数据类型_选择夹))
    返回 (“选择夹”)
.判断 (等于 (数据类型值, #数据类型_影像框))
    返回 (“影像框”)
.判断 (等于 (数据类型值, #数据类型_日期框))
    返回 (“日期框”)
.判断 (等于 (数据类型值, #数据类型_月历))
    返回 (“月历”)
.判断 (等于 (数据类型值, #数据类型_驱动器框))
    返回 (“驱动器框”)
.判断 (等于 (数据类型值, #数据类型_目录框))
    返回 (“目录框”)
.判断 (等于 (数据类型值, #数据类型_文件框))
    返回 (“文件框”)
.判断 (等于 (数据类型值, #数据类型_颜色选择器))
    返回 (“颜色选择器”)
.判断 (等于 (数据类型值, #数据类型_超级链接框))
    返回 (“超级链接框”)
.判断 (等于 (数据类型值, #数据类型_调节器))
    返回 (“调节器”)
.判断 (等于 (数据类型值, #数据类型_通用对话框))
    返回 (“通用对话框”)
.判断 (等于 (数据类型值, #数据类型_时钟))
    返回 (“时钟”)
.判断 (等于 (数据类型值, #数据类型_打印机))
    返回 (“打印机”)
.判断 (等于 (数据类型值, #数据类型_字段信息))
    返回 (“字段信息”)
.判断 (等于 (数据类型值, #数据类型_数据报))
    返回 (“数据报”)
.判断 (等于 (数据类型值, #数据类型_客户))
    返回 (“客户”)
.判断 (等于 (数据类型值, #数据类型_服务器))
    返回 (“服务器”)
.判断 (等于 (数据类型值, #数据类型_端口))
    返回 (“端口”)
.判断 (等于 (数据类型值, #数据类型_打印设置信息))
    返回 (“打印设置信息”)
.判断 (等于 (数据类型值, #数据类型_表格))
    返回 (“表格”)
.判断 (等于 (数据类型值, #数据类型_数据源))
    返回 (“数据源”)
.判断 (等于 (数据类型值, #数据类型_通用提供者))
    返回 (“通用提供者”)
.判断 (等于 (数据类型值, #数据类型_数据库提供者))
    返回 (“数据库提供者”)
.判断 (等于 (数据类型值, #数据类型_图形按钮))
    返回 (“图形按钮”)
.判断 (等于 (数据类型值, #数据类型_外部数据库))
    返回 (“外部数据库”)
.判断 (等于 (数据类型值, #数据类型_外部数据提供者))
    返回 (“外部数据提供者”)
.判断 (等于 (数据类型值, #数据类型_对象))
    返回 (“对象”)
.判断 (等于 (数据类型值, #数据类型_变体型))
    返回 (“变体型”)
.判断 (等于 (数据类型值, #数据类型_变体类型))
    返回 (“变体类型”)
.判断 (等于 (数据类型值, #数据类型_工具条))
    返回 (“工具条”)
.判断 (等于 (数据类型值, #数据类型_超级列表框))
    返回 (“超级列表框”)
.判断 (等于 (数据类型值, #数据类型_高级表格))
    返回 (“高级表格”)
.判断 (等于 (数据类型值, -1)) ' 空基类
    返回 (“”)
.默认
    返回 (取支持库数据类型 (数据类型值))
.判断结束
返回 (“”)

.程序集 __HIDDEN_TEMP_MOD__, , , 

.子程序 模块_分析易文件, 逻辑型, , 
.参数 文件路径, 文本型, , 
.参数 文件密码, 文本型, 可空, 
.参数 __修复文件, 逻辑型, 可空, 
.参数 分析选项, 分析选项, 可空, 
.参数 系统信息段, 系统信息段, 可空, 
.参数 用户信息段, 用户信息段, 可空, 
.参数 程序资源段, 资源段, 可空, 
.参数 程序段, 程序段, 可空, 
.参数 初始模块段, 初始模块段, 可空, 
.参数 可丢失程序段, 可丢失程序段, 可空, 
.参数 编辑信息段1, 编辑信息段1, 可空, 
.参数 编辑信息段2, 编辑信息段2, 可空, 
.参数 辅助信息段1, 辅助信息段1, 可空, 
.参数 辅助信息段2, 辅助信息段2, 可空, 
.参数 易模块记录段, 易模块记录段, 可空, 



.子程序 分析_取最后错误文本, 文本型, , 


.子程序 分析_设置错误文本, 空白型, , 
.参数 text, 文本型, , 



.子程序 readBytes, 字节集, , 
.参数 length, 整数型, , 
.参数 data, 字节集, , 
.参数 offset, 整数型, 参考, 




 ' 不属于任何一个程序集、类模块的函数：
