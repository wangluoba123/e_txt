 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：本源码来自易语言资源网(www.wodesoft.com)
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：             易语言资源网注意事项
--============   www.wodesoft.com  =============--
* 易语言资源网为易语言官方站、易语言官方论坛提供辅助资源站；本易语言资源网( www.wodesoft.com)所有软件和资料均为软件作者提供和网友推荐发布而来，其版权归该软件和程序源码的合法拥有者所有，本站易语言资源网整理收集仅供易语言用户学习和易语言技术研究探讨使用，不得用于任何商业用途。如果由于以上原因造成的版权纠纷本站概不负责！
* 本站资源未经许可,任何网站不得非法盗链及抄袭本站资源；如引用，请注明来自易语言资源网，谢谢合作！
--============   www.wodesoft.com  =============--
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 380
    高度 = 165
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    窗口类名 = “”
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “短信控制”
    帮助文件名 = “”



.常量 位置_顶边, "0", 隐藏, 
.常量 位置_底边, "1", 隐藏, 
.常量 位置_自由, "2", 隐藏, 
.常量 图片组_通常, "0", 隐藏, 
.常量 图片组_热点, "1", 隐藏, 
.常量 图片组_禁止, "2", 隐藏, 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 5 0 系统核心支持库
 ' eAPI F7FC1AE45C5C4758AF03EF19F18A395D 3 0 应用接口支持库
 ' sock A6B983789F624b2cBDFD7D671249C097 2 0 网络通讯支持库
 ' spec A512548E76954B6E92C21055517615B0 3 0 特殊功能支持库



 ' 所需要的模块
 ' 工具栏操作类 C:\Documents and Settings\Administrator\桌面\工具栏操作类\工具栏操作类.ec



.DLL命令 寻找顶级窗口, 整数型, "user32", "FindWindowA", 公开, 寻找窗口列表中第一个符合指定条件的顶级窗口（在vb里使用：FindWindow最常见的一个用途是获得ThunderRTMain类的隐藏窗口的句柄；该类是所有运行中vb执行程序的一部分。获得句柄后，可用api函数GetWindowText取得这个窗口的名称；该名也是应用程序的标题）　找到窗口的句柄。如未找到相符窗口，则返回零。会设置GetLastError
    .参数 窗口类名, 整数型, , 指向包含了窗口类名的空中止（C语言）字串的指针；或设为零，表示接收任何类
    .参数 窗口文本, 文本型, , 指向包含了窗口文本（或标签）的空中止（C语言）字串的指针；或设为零，表示接收任何窗口标题  示例Dim hw&, cnt&Dim rttitle As  * 256hw& = FindWindow("ThunderRT5Main", vbNullString) ' ThunderRTMain under VB4cnt = GetWindowText(hw&, rttitle, 255)MsgBox Left, 0, "RTMain title";

.DLL命令 A寻找顶级窗口, 整数型, "user32", "FindWindowA", 公开, 寻找窗口列表中第一个符合指定条件的顶级窗口（在vb里使用：FindWindow最常见的一个用途是获得ThunderRTMain类的隐藏窗口的句柄；该类是所有运行中vb执行程序的一部分。获得句柄后，可用api函数GetWindowText取得这个窗口的名称；该名也是应用程序的标题）　找到窗口的句柄。如未找到相符窗口，则返回零。会设置GetLastError
    .参数 窗口类名, 文本型, , 指向包含了窗口类名的空中止（C语言）字串的指针；或设为零，表示接收任何类
    .参数 窗口文本, 文本型, , 指向包含了窗口文本（或标签）的空中止（C语言）字串的指针；或设为零，表示接收任何窗口标题  示例Dim hw&, cnt&Dim rttitle As  * 256hw& = FindWindow("ThunderRT5Main", vbNullString) ' ThunderRTMain under VB4cnt = GetWindowText(hw&, rttitle, 255)MsgBox Left, 0, "RTMain title";

.DLL命令 A寻找子窗口, 整数型, "user32", "FindWindowExA", 公开, 在窗口列表中寻找与指定条件相符的第一个子窗口　找到的窗口的句柄。如未找到相符窗口，则返回零。会设置GetLastError
    .参数 窗口句柄1, 整数型, , 在其中查找子的父窗口。如设为零，表示使用桌面窗口（通常说的顶级窗口都被认为是桌面的子窗口，所以也会对它们进行查找）
    .参数 窗口句柄2, 整数型, , 从这个窗口后开始查找。这样便可利用对FindWindowEx的多次调用找到符合条件的所有子窗口。如设为零，表示从第一个子窗口开始搜索
    .参数 欲搜索的类名1, 文本型, , 欲搜索的类名。零表示忽略
    .参数 欲搜索的类名2, 文本型, , 欲搜索的类名。零表示忽略;

.DLL命令 PostMessage, 整数型, "user32", "PostMessageA", , 
    .参数 hwnd, 整数型, , 
    .参数 wMsg, 整数型, , 
    .参数 wParam, 字节型, , 
    .参数 lParam, 整数型, , 

.DLL命令 PostMessageA, 整数型, "user32", "PostMessageA", , 
    .参数 hwnd, 整数型, , 
    .参数 wMsg, 整数型, , 
    .参数 wParam, 整数型, , 
    .参数 lParam, 整数型, , 

.DLL命令 枚举所有子窗体, 整数型, "user32", "EnumChildWindows", , 
    .参数 父窗口句柄, 整数型, , 
    .参数 子窗口调用指针, 子程序指针, , 
    .参数 枚举期间传递的操作值, 整数型, 传址, 

.DLL命令 ShowWindow, 整数型, "user32", "ShowWindow", , 
    .参数 hwnd, 整数型, , 窗口句柄，要向这个窗口应用由nCmdShow指定的命令
    .参数 nCmdShow, 整数型, , 为窗口指定可视性方面的一个命令。

.DLL命令 发送消息_, 整数型, "user32", "SendMessageA", , 调用一个窗口的窗口函数，将一条消息发给那个窗口。除非消息处理完毕，否则该函数不会返回。SendMessageBynum， ;    SendMessageByString是该函数的“类型安全”声明形式  由具体的消息决定
    .参数 窗口句柄, 整数型, , 要接收消息的那个窗口的句柄
    .参数 信息值, 整数型, , 消息的标识符
    .参数 参数一, 整数型, , 具体取决于消息
    .参数 参数二, 文本型, , 具体取决于消息;

.窗口程序集 窗口程序集1, , , 

.程序集变量 信息组件句柄, 整数型, , , 
.程序集变量 发送信息组件句柄, 整数型, , , 
.程序集变量 操作人名称, 文本型, , , 
.程序集变量 监控窗口组件句柄数组, 整数型, , "0", 
.程序集变量 图标位, 整数型, , , 
.程序集变量 主窗口组件句柄数组, 整数型, , "0", 
.程序集变量 工具栏, 工具栏操作类, , , 
.程序集变量 旧信息, 文本型, , , 
.程序集变量 信息, 文本型, , , 
.程序集变量 监控窗口句柄, 整数型, , , 
.程序集变量 主窗口句柄, 整数型, , , 
.子程序 _按钮1_被单击, 空白型, , 
.局部变量 i, 整数型, , , 
.局部变量 进程列表, 未知类型0x20009, , "0", 
.局部变量 id输入框句柄, 整数型, , , 
.局部变量 数据, 文本型, , , 

 ' --========  易语言资源网  (www.wodesoft.com)  ======--
 ' 努力创建完善、持续更新的易语言学习例程源码资源站
 ' --================   www.wodesoft.com  ===========--
 ' --==================   易语言资源网注意事项  ================--
 ' * 易语言资源网为易语言官方站、易语言官方论坛提供辅助资源站；
 ' 本易语言资源网( www.wodesoft.com)所有软件和资料均为软件作者提
 ' 供和网友推荐发布而来，其版权归该软件和程序源码的合法拥有者所
 ' 有，本站易语言资源网整理收集仅供易语言用户学习和易语言技术研
 ' 究探讨使用，不得用于任何商业用途。如果由于以上原因造成的版权
 ' 纠纷本站概不负责！
 ' * 本站资源未经许可，任何网站不得非法盗链及抄袭本站资源；如引用
 ' 页面，请注明来自易语言资源网，谢谢合作！
 ' --=====================   www.wodesoft.com  ================--

.如果真 (或者 (等于 (.内容, “”), 等于 (.内容, “”)))
    信息框 (“请填完所有内容！”, 0, )
    返回 ()
.如果真结束
赋值 (.禁止, 真)
赋值 (.禁止, 真)
赋值 (.禁止, 真)
赋值 (进程列表, 未知支持库函数_10 ())
.计次循环首 (取数组成员数 (进程列表), i)
    .如果真 (不等于 (寻找文本 (进程列表 [i], , “FetionVM”, , 假), -1))
        赋值 (主窗口句柄, 寻找顶级窗口 (0, “Fetion 2008”)) ' 根据进程取 飞信主窗口 句柄
        ShowWindow (主窗口句柄, 0) ' 隐藏主窗口
        跳出循环 ()
    .如果真结束
    .如果真 (等于 (i, 取数组成员数 (进程列表)))
        信息框 (“错误：未找到飞信程序，请确定已执行。”, #错误图标, “错误”)
        初始化程序 (监控窗口句柄, 主窗口句柄) ' 返回程序最初状态，取消对 飞信 的隐藏
        返回 ()
    .如果真结束
    
.计次循环尾 ()
工具栏.初始化类 (取托盘区句柄_ (真), 真) ' 工具栏类初始化
.计次循环首 (工具栏.取按钮数 (), i)
    .如果真 (不等于 (寻找文本 (工具栏.取标题 (相减 (i, 1)), “Fetion”, , 假), -1)) ' 寻找飞信任务栏图标位置
        .如果 (不等于 (寻找文本 (工具栏.取标题 (相减 (i, 1)), “(在线)”, , 真), -1)) ' 确定飞信是否登陆
            工具栏.加入状态 (相减 (i, 1), 8) ' 隐藏任务栏图标
            赋值 (图标位, 相减 (i, 1)) ' 记录图标位置，以便退出时进行显示操作
            跳出循环 ()
        .否则
            信息框 (“错误：飞信未登陆，请登陆！”, #错误图标, “错误”)
            初始化程序 (监控窗口句柄, 主窗口句柄)
            返回 ()
        .如果结束
        
    .如果真结束
    
.计次循环尾 ()
枚举所有子窗体 (主窗口句柄, &枚举1, 0) ' 枚举主窗口中组件
赋值 (id输入框句柄, 主窗口组件句柄数组 [6]) ' 设置搜索好友组件的句柄
ShowWindow (主窗口句柄, 1) ' 设置窗口可视，不知为啥，隐藏时投递数据都是乱码，请高手看下
发送消息_ (id输入框句柄, 12, 0, “”) ' 投递清空编辑框
投递数据 (id输入框句柄, .内容) ' 投递好友昵称
延迟 (10)
' 本源码来自易语言资源网(www.wodesoft.com)
ShowWindow (主窗口句柄, 0) ' 隐藏主窗口
PostMessageA (id输入框句柄, 256, #回车键, 0) ' 发送回车键，等待飞信打开对话窗口，如果打不开说明无此好友
延迟 (100)
.如果 (等于 (未知支持库函数_76 (id输入框句柄), “”)) ' 判断是否打开了对话窗口，这是判断搜索好友编辑框中是否有信息，如果没则证明打开了
    赋值 (监控窗口句柄, 寻找顶级窗口 (0, .内容)) ' 设置对话窗口句柄
    ShowWindow (监控窗口句柄, 0) ' 隐藏对话窗口
    枚举所有子窗体 (监控窗口句柄, &枚举, 0) ' 枚举内组件
.否则
    信息框 (“错误：您输入的飞信用户不存在，可能您未加他（她）为好友。”, #错误图标, “错误”)
    发送消息_ (id输入框句柄, 12, 0, “”)
    初始化程序 (监控窗口句柄, 主窗口句柄)
    返回 ()
.如果结束
赋值 (信息组件句柄, 监控窗口组件句柄数组 [8])
赋值 (发送信息组件句柄, 监控窗口组件句柄数组 [15])
赋值 (操作人名称, 未知支持库函数_76 (监控窗口组件句柄数组 [23]))
 ' 进行相关组件句柄的记录↑
发送消息_ (发送信息组件句柄, 12, 0, “”)
投递数据 (发送信息组件句柄, 相加 (“亲爱的飞信用户”, #引号, 操作人名称, #引号, “您好。您已获得”, #引号, 未知支持库函数_16 (), #引号, “的控制权。”, #换行符, “回复以下参数进行操作：1.关机――进行关机操作”))
PostMessageA (发送信息组件句柄, 256, #回车键, 0)
信息框 (“飞信已隐藏，控制信息已发送到你手机。请确认，监控开始！”, #信息图标, “完成操作”)
 ' 对对话窗口投递数据，以发送短信
赋值 (_启动窗口., 2)
赋值 (.时钟周期, 1000)
赋值 (旧信息, 未知支持库函数_76 (信息组件句柄))

.子程序 取托盘区句柄_, 整数型, 公开, 非0表示返回句柄，0表示失败。
.参数 是否托盘, 逻辑型, 可空, 可空为真.托盘区句柄，假.任务栏区句柄。

.局部变量 系统句柄, 整数型, , , SysPager
.局部变量 句柄, 整数型, , , 
.局部变量 托盘句柄, 整数型, , , 

.如果真 (是否为空 (是否托盘))
    赋值 (是否托盘, 真)
.如果真结束
.如果真 (等于 (是否托盘, 假))
    赋值 (句柄, A寻找顶级窗口 (“Shell_TrayWnd”, 字符 (0)))
    赋值 (句柄, A寻找子窗口 (句柄, 0, “ReBarWindow32”, 字符 (0)))
    赋值 (句柄, A寻找子窗口 (句柄, 0, “MSTaskSwWClass”, 字符 (0)))
    赋值 (系统句柄, A寻找子窗口 (句柄, 0, “ToolbarWindow32”, 字符 (0)))
.如果真结束
.如果真 (是否托盘)
    赋值 (句柄, A寻找顶级窗口 (“Shell_TrayWnd”, 字符 (0)))
    赋值 (句柄, A寻找子窗口 (句柄, 0, “TrayNotifyWnd”, 字符 (0)))
    赋值 (系统句柄, A寻找子窗口 (句柄, 0, “SysPager”, 字符 (0)))
.如果真结束
.如果真 (不等于 (系统句柄, 0))
    赋值 (句柄, 系统句柄)
.如果真结束
赋值 (托盘句柄, A寻找子窗口 (句柄, 0, “ToolbarWindow32”, 字符 (0)))
.如果真 (等于 (托盘句柄, 0))
    赋值 (托盘句柄, 句柄)
.如果真结束
返回 (托盘句柄)
 ' 以上出自 工具栏操作类

.子程序 枚举, 空白型, , 
.参数 hand, 整数型, , 

.如果真 (不等于 (hand, 0))
    加入成员 (监控窗口组件句柄数组, hand)
.如果真结束
 ' 本源码来自易语言资源网(www.wodesoft.com)

.子程序 枚举1, 空白型, , 
.参数 hand, 整数型, , 

.如果真 (不等于 (hand, 0))
    加入成员 (主窗口组件句柄数组, hand)
.如果真结束


.子程序 投递数据, 空白型, , 
.参数 目标句柄, 整数型, , 
.参数 数据, 文本型, , 

.局部变量 字节, 字节集, , , 
.局部变量 i, 整数型, , , 

赋值 (字节, 到字节集 (数据))
.计次循环首 (取字节集长度 (字节), i)
    PostMessage (目标句柄, 258, 字节 [i], 0)
.计次循环尾 ()
’以上出自 近在眼前 解决投递信息 乱码的代码

.子程序 初始化程序, 空白型, , 
.参数 监控窗口句柄, 整数型, , 
.参数 主窗口句柄, 整数型, , 

重定义数组 (监控窗口组件句柄数组, 假, 0)
重定义数组 (主窗口组件句柄数组, 假, 0)
赋值 (信息组件句柄, 0)
赋值 (发送信息组件句柄, 0)
赋值 (操作人名称, “”)
ShowWindow (监控窗口句柄, 1)
ShowWindow (主窗口句柄, 1)
工具栏.去除状态 (图标位, 8)
赋值 (.禁止, 假)
赋值 (.禁止, 假)
赋值 (.禁止, 假)
 ' 对程序进行初始化

.子程序 _时钟1_周期事件, 空白型, , 
.局部变量 新信息, 文本型, , , 

赋值 (信息, 未知支持库函数_76 (信息组件句柄))
.如果 (不等于 (信息, 旧信息))
    赋值 (新信息, 取文本右边 (信息, 相减 (取文本长度 (信息), 取文本长度 (旧信息))))
    赋值 (信息, 旧信息)
    .如果真 (不等于 (寻找文本 (新信息, .内容, , 假), -1))
        赋值 (.时钟周期, 0)
        信息框 (“即将关机！”, 0, )
    .如果真结束
    返回 ()
.否则
    返回 ()
.如果结束
 ' 判断是否有命令短信到达，本来想用截获编辑框事件的，结果没找到相关例程。请会的补充下吧。

.子程序 __启动窗口_可否被关闭, 逻辑型, , 
初始化程序 (监控窗口句柄, 主窗口句柄)
 ' 本源码来自易语言资源网(www.wodesoft.com)

.类模块 工具栏操作类, , , ToolbarWindow32

.子程序 初始化类, 逻辑型, , 
.参数 参数_工具栏句柄, 整数型, , 
.参数 参数_是否外部控件, 逻辑型, 可空, 



.子程序 取按钮数, 整数型, , 取工具栏按钮总数


.子程序 取按钮ID, 整数型, , 根据按钮索引取按钮的idCommand
.参数 参数_按钮索引, 整数型, , 索引从0开始。0 为按钮一，1 为按钮二，如此类推。



.子程序 加入状态, 空白型, , 将指定状态值加入到按钮的存在状态中。
.参数 参数_按钮索引, 整数型, , 索引从0开始。0 为按钮一，1 为按钮二，如此类推。
.参数 参数_按钮状态, 整数型, 可空, 可以下常量值任意组合(相加)： 1: #选中； 2: #按下； 4: #禁止； 8: #隐藏； 16: #变灰。 其中“选中”状态在类型为多选按钮或单选按钮时有效，“按下”状态在类型为普通按钮时有效。默认值为0。



.子程序 去除状态, 空白型, , 从按钮的存在状态中去除指定状态值。
.参数 参数_按钮索引, 整数型, , 索引从0开始。0 为按钮一，1 为按钮二，如此类推。
.参数 参数_按钮状态, 整数型, 可空, 可以下常量值任意组合(相加)： 1: #选中； 2: #按下； 4: #禁止； 8: #隐藏； 16: #变灰。 其中“选中”状态在类型为多选按钮或单选按钮时有效，“按下”状态在类型为普通按钮时有效。默认值为0。



.子程序 取状态, 整数型, , 取回指定按钮的状态，状态值为 0 或者以下常量值任意组合(相加)： 1: #选中； 2: #按下； 4: #禁止； 8: #隐藏； 16: #变灰。 可以用“位与”命令来判断指定的状态值是否被置位，如：“如果真 (位与 (工具条1.取状态 (0)，#禁止) = #禁止)”语句即可判断工具条1的第一个按钮是否已被禁止。
.参数 参数_按钮索引, 整数型, , 索引从0开始。0 为按钮一，1 为按钮二，如此类推。



.子程序 判断状态, 逻辑型, , 判断按钮是否有某状态。
.参数 参数_按钮索引, 整数型, , 索引从0开始。0 为按钮一，1 为按钮二，如此类推。
.参数 参数_状态类型, 整数型, , 只能为下列常量的其中一个。 1: #选中； 2: #按下； 4: #禁止； 8: #隐藏； 16: #变灰。



.子程序 删除按钮, 空白型, , 删除工具栏上的一个按钮
.参数 参数_按钮索引, 整数型, , 索引从0开始。0 为按钮一，1 为按钮二，如此类推。



.子程序 取标题, 文本型, ,  取回指定按钮的标题文本。
.参数 参数_按钮索引, 整数型, , 索引从0开始。0 为按钮一，1 为按钮二，如此类推。



.子程序 置标题, 逻辑型, , 设置指定按钮的标题文本。
.参数 参数_按钮索引, 整数型, , 索引从0开始。0 为按钮一，1 为按钮二，如此类推。
.参数 参数_标题, 文本型, 可空, 默认为空文本。



.子程序 取类型, 整数型, , 取回指定按钮的类型，返回值为以下常量值之一： 0: #普通按钮； 1: #多选按钮； 2: #单选按钮； 3: #下拉按钮； 4: #分隔条。
.参数 参数_按钮索引, 整数型, , 索引从0开始。0 为按钮一，1 为按钮二，如此类推。



.子程序 置类型, 逻辑型, , 设置按钮类型。
.参数 参数_按钮索引, 整数型, , 索引从0开始。0 为按钮一，1 为按钮二，如此类推。
.参数 参数_类型, 整数型, , 可以下常量值之一： 0: #普通按钮； 1: #多选按钮； 2: #单选按钮； 3: #下拉按钮； 4: #分隔条。



.子程序 取图片, 整数型, , 取回指定按钮的图片索引，图片索引指向图片组属性中的某一图片，从 0 开始，-1 表示本按钮无图片标志。如果按钮是一个分割条则返回其宽度。
.参数 参数_按钮索引, 整数型, , 索引从0开始。0 为按钮一，1 为按钮二，如此类推。



.子程序 置图片, 逻辑型, , 设置指定按钮的图片索引，图片索引指向图片组属性中的某一图片，从 0 开始，-1 表示本按钮无图片标志。如果按钮是一个分割条则设置其宽度。
.参数 参数_按钮索引, 整数型, , 索引从0开始。0 为按钮一，1 为按钮二，如此类推。
.参数 参数_图片索引, 整数型, , 索引从0开始。-1表示无图片。如按钮为分割条则此参数为分割条宽度。



.子程序 取托盘区图标, 整数型, , 返回图标句柄。
.参数 参数_按钮索引, 整数型, , 索引从0开始。0 为按钮一，1 为按钮二，如此类推。



.子程序 取按钮大小, 空白型, , 取得按钮的宽度和高度。
.参数 参数_宽度, 整数型, 参考 可空, 
.参数 参数_高度, 整数型, 参考 可空, 



.子程序 置按钮大小, 逻辑型, , 设置按钮的宽度和高度。
.参数 参数_宽度, 整数型, , 
.参数 参数_高度, 整数型, , 



.子程序 取按钮矩形, 空白型, , 取按钮在工具条里的矩形位置。，
.参数 参数_按钮索引, 整数型, , 索引从0开始。0 为按钮一，1 为按钮二，如此类推。
.参数 参数_左上横, 整数型, 参考 可空, 左边
.参数 参数_左上纵, 整数型, 参考 可空, 顶边
.参数 参数_右下横, 整数型, 参考 可空, 右边
.参数 参数_右下纵, 整数型, 参考 可空, 底边



.子程序 置标题为提示文本, 空白型, , 使标题不可见，标题成为提示文本


.子程序 插入按钮, 整数型, , 将指定按钮插入到工具条中，返回插入后该按钮所处的位置。失败返回-1。
.参数 参数_插入位置, 整数型, 可空, 指定新按钮插入的位置索引，0 为栏目一，1 为栏目二，如此类推。如果提供 -1 ，则插入到工具条的尾部。如果本参数被省略，默认值为 -1 。
.参数 参数_类型, 整数型, 可空, 按钮的类型可以为以下常量值之一： 0: #普通按钮； 1: #多选按钮； 2: #单选按钮； 3: #下拉按钮； 4: #分隔条。 如果本参数被省略，默认值为“#普通按钮”。
.参数 参数_图片索引, 整数型, 可空, 图片索引用于指定图片组属性中的某张图片，该图片将被显示在按钮表面。索引值从 0 开始，-1 表示无图片。如果本参数被省略，默认值为 -1 。如果按钮是一个分割条则设置其宽度。
.参数 参数_标题, 文本型, 可空, 本参数指定显示在按钮下的标题文本。如果被省略，默认值为空文本。
.参数 参数_按钮状态, 整数型, 可空, 本参数指定按钮的存在状态。状态值为 0 或者以下常量值任意组合(相加)： 1: #选中； 2: #按下； 4: #禁止； 8: #隐藏； 16: #变灰。 其中“选中”状态在类型为多选按钮或单选按钮时有效，“按下”状态在类型为普通按钮时有效。如果本参数被省略，默认值为 0 。



.子程序 取图片组句柄, 整数型, , 返回图片组句柄。
.参数 参数_图片组类型, 整数型, 可空, 0.#图片组_通常，1.#图片组_热点，2.图片组_禁止。默认为0.#图片组_通常



.子程序 置图片组句柄, 整数型, , 返回之前的图片组句柄。
.参数 参数_图片组句柄, 整数型, , 
.参数 参数_图片组类型, 整数型, 可空, 0.#图片组_通常，1.#图片组_热点，2.图片组_禁止。默认为0.#图片组_通常



.子程序 属性_位置, 整数型, , 如果未提供参数则为取位置，提供了参数则为置位置。#位置_ 开头常量
.参数 参数_位置, 整数型, 可空, 0.#位置_顶边，1.#位置_底边，2.#位置_自由



.子程序 属性_平面, 逻辑型, , 如果未提供参数则为返回是否平面，提供了参数则为置是否平面。
.参数 参数_平面, 逻辑型, 可空, 真为平面按钮，假为突起按钮。



.子程序 属性_上边线, 逻辑型, , 如果未提供参数则为返回是否上边线，提供了参数则为置是否上边线
.参数 参数_上边线, 逻辑型, 可空, 真为显示上边线，假为不显示



.子程序 属性_允许多行, 逻辑型, , 如果未提供参数则为返回是否允许多行，提供了参数则为置是否允许多行
.参数 参数_允许多行, 逻辑型, 可空, 真为允许多行，假为不允许。




 ' 不属于任何一个程序集、类模块的函数：
