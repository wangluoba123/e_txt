 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：Change
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 561
    高度 = 390
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 1
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 真
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    窗口类名 = “”
    底图 =  ' 空
    图标 =  ' 已保存到：D:\易语言学习\Data\EDB.e\_启动窗口_图标.ico
    背景音乐 =  ' 空
    标题 = “”
    帮助文件名 = “”

窗口 窗口新建
    左边 = 50
    顶边 = 50
    宽度 = 380
    高度 = 409
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    窗口类名 = “”
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “新建”
    帮助文件名 = “”





 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 6 系统核心支持库
 ' eGrid 0B4337DA651B4b619ACF61334A7E8B47 1 6 高级表格支持库




.全局变量 能否退出, 逻辑型, , , 
.全局变量 全局文件名, 文本型, , , 
.全局变量 全局标题, 文本型, , , 

.DLL命令 GetShortPathNameA, 整数型, "kernel32.dll", "GetShortPathNameA", , 返回装载到lpszShortPath缓冲区的字符数量。如lpszShortPath的长度不足，不能容下文件名，就返回需要的缓冲区长度
    .参数 lpszLongPath, 文本型, , 指定欲获取短路径名的那个文件的名字。可以是个完整路径，或者由当前目录决定
    .参数 lpszShortPath, 文本型, , 指定一个缓冲区，用于装载文件的短路径和文件名，需先分配空间。
    .参数 cchBuffer, 整数型, , lpszShortPath缓冲区长度，请设置为260。

.窗口程序集 窗口程序集1, , , 

.程序集变量 删除行号, 整数型, , , 
.子程序 __启动窗口_创建完毕, 空白型, , 
赋值 (.禁止, 真)
赋值 (.禁止, 真)
赋值 (.禁止, 真)
赋值 (., .选中)
赋值 (能否退出, 真)
.如果真 (不等于 (取关联文件文件名 (), “”))
    赋值 (全局文件名, 取关联文件文件名 ())
    打开数据库 (全局文件名)
.如果真结束


.子程序 _打开_被选择, 空白型, , 
赋值 (.类型, 0)
.如果真 (打开 ())
    赋值 (全局文件名, .文件名)
    打开数据库 (.文件名)
.如果真结束


.子程序 _保存_被选择, 空白型, , 


.子程序 _另存为_被选择, 空白型, , 


.子程序 关闭数据库, 空白型, , 


.子程序 _新建_被选择, 空白型, , 
载入 (窗口新建, , 真)


.子程序 _重建EDB关联_被选择, 空白型, , 
文件关联 (相加 (取运行目录 (), “\EDB.exe”), “edb”)


.子程序 __启动窗口_尺寸被改变, 空白型, , 
0.移动 (0, 相减 (_启动窗口., 8), 相减 (_启动窗口., 50))


.子程序 _自动列宽_被选择, 空白型, , 
高级表格自动列宽 ()


.子程序 _退出_被选择, 空白型, , 
.如果 (能否退出)
    销毁 ()
.否则
    
.如果结束


.子程序 _向后插入多行_被选择, 空白型, , 
.局部变量 z, 整数型, , , 
.局部变量 行号, 整数型, , , 
.局部变量 l, 逻辑型, , , 


输入框 (“插入行数：”, , “1”, z, #输入整数)
赋值 (行号, 相减 (未知支持库函数_3 (), 1))
.如果 (大于 (z, 0))
    .计次循环首 (z, )
        .未知支持库函数_38 (相加 (未知支持库函数_3 (), 1))
        赋值 (l, 加空记录 ())
        输出调试文本 (l)
    .计次循环尾 ()
    置高级表格序号 ()
.否则
    信息框 (“不能小于1！”, 0, )
    返回 ()
.如果结束
.如果真 (或者 (不等于 (_启动窗口.未知支持库函数_3 (.), 相减 (_启动窗口.., 1)), 不等于 (_启动窗口.未知支持库函数_3 (.), -1)))
    插入处理 (行号, z, 1)
.如果真结束


.子程序 _向前插入多行_被选择, 空白型, , 
.局部变量 z, 整数型, , , 
.局部变量 行号, 整数型, , , 
.局部变量 l, 逻辑型, , , 

.如果真 (等于 (全局文件名, “”))
    信息框 (“文件没有打开！”, 0, )
    返回 ()
.如果真结束
输入框 (“插入行数：”, , “1”, z, #输入整数)
赋值 (行号, 相减 (未知支持库函数_3 (), 1))
.如果 (大于 (z, 0))
    .计次循环首 (z, )
        .未知支持库函数_38 (未知支持库函数_3 ())
        赋值 (l, 加空记录 ())
        输出调试文本 (l)
    .计次循环尾 ()
    置高级表格序号 ()
.否则
    信息框 (“不能小于1！”, 0, )
    返回 ()
.如果结束
.如果真 (或者 (不等于 (_启动窗口.未知支持库函数_3 (.), 相减 (_启动窗口.., 1)), 不等于 (_启动窗口.未知支持库函数_3 (.), -1)))
    插入处理 (行号, z, -1)
.如果真结束


.子程序 _修改_被选择, 空白型, , 
.如果真 (等于 (全局文件名, “”))
    信息框 (“文件没有打开！”, 0, )
    返回 ()
.如果真结束

.如果 (等于 (.选中, 真))
    赋值 (.禁止, 真)
    赋值 (.禁止, 真)
    赋值 (.禁止, 真)
    赋值 (.选中, 假)
.否则
    赋值 (.选中, 真)
    赋值 (.禁止, 假)
    赋值 (.禁止, 假)
    赋值 (.禁止, 假)
.如果结束

赋值 (., .选中)


.子程序 _高级表格1_结束编辑, 空白型, , 
.局部变量 类型数字, 整数型, , , 
.局部变量 l, 逻辑型, , , 


.如果真 (并且 (大于 (未知支持库函数_3 (), 1), 大于 (未知支持库函数_4 (), 0)))
    跳到 (相减 (未知支持库函数_3 (), 1))
    赋值 (类型数字, 取字段类型 (未知支持库函数_4 ()))
     ' 1、#字节型； 2、#短整数型； 3、#整数型； 4、#长整数型； 5、#小数型； 6、#双精度小数型； 7、#逻辑型； 8、#日期时间型； 10、#文本型； 11、#字节集型； 12、#备注型
    .如果真 (等于 (类型数字, 1))
         ' 返回 (“字节型”)
        赋值 (l, 写 (未知支持库函数_4 (), 到文本 (未知支持库函数_3 ().未知支持库函数_10 (未知支持库函数_4 ()))))
    .如果真结束
    .如果真 (等于 (类型数字, 2))
         ' 返回 (“短整数型”)
        赋值 (l, 写 (未知支持库函数_4 (), 到整数 (未知支持库函数_3 ().未知支持库函数_10 (未知支持库函数_4 ()))))
    .如果真结束
    .如果真 (等于 (类型数字, 3))
         ' 返回 (“整数型”)
        赋值 (l, 写 (未知支持库函数_4 (), 到整数 (未知支持库函数_3 ().未知支持库函数_10 (未知支持库函数_4 ()))))
    .如果真结束
    .如果真 (等于 (类型数字, 4))
         ' 返回 (“长整数型”)
        赋值 (l, 写 (未知支持库函数_4 (), 到整数 (未知支持库函数_3 ().未知支持库函数_10 (未知支持库函数_4 ()))))
    .如果真结束
    .如果真 (等于 (类型数字, 5))
         ' 返回 (“小数型”)
        赋值 (l, 写 (未知支持库函数_4 (), 到小数 (未知支持库函数_3 ().未知支持库函数_10 (未知支持库函数_4 ()))))
    .如果真结束
    .如果真 (等于 (类型数字, 6))
         ' 返回 (“双精度小数型”)
        赋值 (l, 写 (未知支持库函数_4 (), 到小数 (未知支持库函数_3 ().未知支持库函数_10 (未知支持库函数_4 ()))))
    .如果真结束
    .如果真 (等于 (类型数字, 7))
         ' 返回 (“逻辑型”)
        赋值 (l, 写 (未知支持库函数_4 (), 未知支持库函数_3 ().未知支持库函数_10 (未知支持库函数_4 ())))
        
    .如果真结束
    .如果真 (等于 (类型数字, 8))
         ' 返回 (“日期时间型”)
        赋值 (l, 写 (未知支持库函数_4 (), 到时间 (未知支持库函数_3 ().未知支持库函数_10 (未知支持库函数_4 ()))))
        输出调试文本 (l)
    .如果真结束
    .如果真 (等于 (类型数字, 10))
         ' 返回 (“文本型”)
        赋值 (l, 写 (未知支持库函数_4 (), 到文本 (未知支持库函数_3 ().未知支持库函数_10 (未知支持库函数_4 ()))))
    .如果真结束
    .如果真 (等于 (类型数字, 11))
         ' 返回 (“字节集型”)
        赋值 (l, 写 (未知支持库函数_4 (), 到字节集 (未知支持库函数_3 ().未知支持库函数_10 (未知支持库函数_4 ()))))
    .如果真结束
    .如果真 (等于 (类型数字, 12))
         ' 返回 (“备注型”)
        赋值 (l, 写 (未知支持库函数_4 (), 到文本 (未知支持库函数_3 ().未知支持库函数_10 (未知支持库函数_4 ()))))
    .如果真结束
    
    .如果真 (等于 (l, 假))
        打开数据库 (全局文件名)
    .如果真结束
    
.如果真结束


.子程序 _高级表格1_被单击, 空白型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 



.子程序 _删除行_被选择, 空白型, , 
.如果真 (并且 (等于 (.选中, 真), 大于 (未知支持库函数_3 (), 1)))
    赋值 (删除行号, 未知支持库函数_3 ())
    赋值 (.时钟周期, 200)
.如果真结束


.子程序 _高级表格1_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (并且 (等于 (功能键状态, 2), 等于 (键代码, #Del键)))
    .如果真 (并且 (等于 (.选中, 真), 大于 (未知支持库函数_3 (), 1)))
        赋值 (删除行号, 未知支持库函数_3 ())
        赋值 (.时钟周期, 200)
    .如果真结束
    
.如果真结束


.子程序 _时钟删除_周期事件, 空白型, , 
跳到 (相减 (删除行号, 1))
删除行号.未知支持库函数_36 ()
删除 ()
彻底删除 ()
赋值 (.时钟周期, 0)

.子程序 _刷新_被选择, 空白型, , 
关闭 ()
打开数据库 (全局文件名)

.子程序 __启动窗口_将被销毁, 空白型, , 
输出调试文本 (“启动窗口_将被销毁”)
关闭 ()

.子程序 _设置密码_被选择, 空白型, , 
.局部变量 s, 文本型, , , 
.局部变量 ss, 文本型, , , 

 ' 输入框 (“输入密码：”, , , s, )
 ' 输入框 (“再次输入密码：”, , , ss, )
密码输入框 (s, )
密码输入框 (ss, )
.如果 (并且 (等于 (ss, s), 不等于 (s, “”)))
    .如果真 (等于 (置数据库密码 (s), 假))
        信息框 (“设置密码失败！”, 0, )
    .如果真结束
    
.否则
    信息框 (“密码不相同或密码为空！”, 0, )
.如果结束


.子程序 _以文本类型读入_被选择, 空白型, , 
.局部变量 n, 整数型, , , 
.局部变量 l, 逻辑型, , , 

未知支持库函数_4 ().未知支持库函数_30 (#)

.计次循环首 (取记录数 (), n)
    跳到 (n)
    赋值 (l, 相加 (n, 1).未知支持库函数_9 (未知支持库函数_4 (), #, 到文本 (读 (未知支持库函数_4 ()))))
    输出调试文本 (l)
.计次循环尾 ()
赋值 (., 假)
赋值 (.禁止, 真)
赋值 (.禁止, 真)
赋值 (.禁止, 真)
赋值 (.禁止, 真)

.程序集 功能集, , , 

.子程序 打开数据库, 逻辑型, 公开, 
.参数 文件名, 文本型, , 

.局部变量 l, 逻辑型, , , 
.局部变量 s, 文本型, , , 

赋值 (l, 打开 (文件名, , , , , , ))
赋值 (全局文件名, 取短路径 (文件名))

输出调试文本 (“打开数据库”)
.如果 (等于 (l, 假))
    .如果真 (等于 (取错误信息 (), “指定文件不是数据库文件”))
        信息框 (取错误信息 (), 0, )
        返回 (假)
    .如果真结束
    .如果 (是否已加密 (文件名))
        密码输入框 (s, )
        赋值 (l, 打开 (文件名, , , , , s, ))
        读数据 ()
        返回 (l)
    .否则
        信息框 (“打开失败！”, 0, )
        返回 (假)
    .如果结束
    
.否则
    读数据 ()
    返回 (真)
    
    
.如果结束


.子程序 读数据, 空白型, , 
.局部变量 n, 整数型, , , 
.局部变量 m, 整数型, , , 
.局部变量 字段类型, 整数型, , , 

输出调试文本 (“读数据”)
赋值 (全局标题, 相加 (“EDB - ”, 全局文件名))
赋值 (_启动窗口.., 相加 (取字段数 (), 1))
赋值 (_启动窗口.., 相加 (取记录数 (), 2))
.计次循环首 (取字段数 (), n)
    _启动窗口.未知支持库函数_9 (., 0, n, #, 数字到文字类型 (取字段类型 (n)))
.计次循环尾 ()
_启动窗口.未知支持库函数_9 (., 1, 0, #, “序号”)
.计次循环首 (取字段数 (), n)
    _启动窗口.未知支持库函数_9 (., 1, n, #, 取字段名 (n))
.计次循环尾 ()
.计次循环首 (取字段数 (), n)
    _启动窗口.未知支持库函数_30 (., n, 设置高级表格类型 (取字段类型 (n)))
    .如果真 (或者 (等于 (取字段类型 (n), #小数型), 等于 (取字段类型 (n), #双精度小数型)))
        _启动窗口.未知支持库函数_41 (., n, 2)
    .如果真结束
    
.计次循环尾 ()

置高级表格序号 (_启动窗口.)
.计次循环首 (取字段数 (), n)
    赋值 (字段类型, 设置高级表格类型 (取字段类型 (n)))
    输出调试文本 (字段类型)
    .计次循环首 (取记录数 (), m)
        跳到 (m)
        .如果 (或者 (等于 (字段类型, #), 等于 (字段类型, #)))
            _启动窗口.未知支持库函数_9 (., 相加 (m, 1), n, #, 到文本 (读 (n)))
        .否则
            _启动窗口.未知支持库函数_9 (., 相加 (m, 1), n, 字段类型, 读 (n))
            
            
            
        .如果结束
        
        
        
    .计次循环尾 ()
.计次循环尾 ()
高级表格自动列宽 (_启动窗口.)

赋值 (_启动窗口., 全局标题)

.子程序 退出数据库, 空白型, , 


.子程序 文字到数字类型, 整数型, 公开, 
.参数 类型名称, 文本型, , 

 ' 1、#字节型； 2、#短整数型； 3、#整数型； 4、#长整数型； 5、#小数型； 6、#双精度小数型； 7、#逻辑型； 8、#日期时间型； 10、#文本型； 11、#字节集型； 12、#备注型
.如果真 (等于 (类型名称, “字节型”))
    返回 (1)
.如果真结束
.如果真 (等于 (类型名称, “短整数型”))
    返回 (2)
.如果真结束
.如果真 (等于 (类型名称, “整数型”))
    返回 (3)
.如果真结束
.如果真 (等于 (类型名称, “长整数型”))
    返回 (4)
.如果真结束
.如果真 (等于 (类型名称, “小数型”))
    返回 (5)
.如果真结束
.如果真 (等于 (类型名称, “双精度小数型”))
    返回 (6)
.如果真结束
.如果真 (等于 (类型名称, “逻辑型”))
    返回 (7)
.如果真结束
.如果真 (等于 (类型名称, “日期时间型”))
    返回 (8)
.如果真结束
.如果真 (等于 (类型名称, “文本型”))
    返回 (10)
.如果真结束
.如果真 (等于 (类型名称, “字节集型”))
    返回 (11)
.如果真结束
.如果真 (等于 (类型名称, “备注型”))
    返回 (12)
.如果真结束
返回 (0)

.子程序 数字到文字类型, 文本型, 公开, 
.参数 类型数字, 整数型, , 

 ' 1、#字节型； 2、#短整数型； 3、#整数型； 4、#长整数型； 5、#小数型； 6、#双精度小数型； 7、#逻辑型； 8、#日期时间型； 10、#文本型； 11、#字节集型； 12、#备注型
.如果真 (等于 (类型数字, 1))
    返回 (“字节型”)
.如果真结束
.如果真 (等于 (类型数字, 2))
    返回 (“短整数型”)
.如果真结束
.如果真 (等于 (类型数字, 3))
    返回 (“整数型”)
.如果真结束
.如果真 (等于 (类型数字, 4))
    返回 (“长整数型”)
.如果真结束
.如果真 (等于 (类型数字, 5))
    返回 (“小数型”)
.如果真结束
.如果真 (等于 (类型数字, 6))
    返回 (“双精度小数型”)
.如果真结束
.如果真 (等于 (类型数字, 7))
    返回 (“逻辑型”)
.如果真结束
.如果真 (等于 (类型数字, 8))
    返回 (“日期时间型”)
.如果真结束
.如果真 (等于 (类型数字, 10))
    返回 (“文本型”)
.如果真结束
.如果真 (等于 (类型数字, 11))
    返回 (“字节集型”)
.如果真结束
.如果真 (等于 (类型数字, 12))
    返回 (“备注型”)
.如果真结束
返回 (“”)

.子程序 置高级表格表头, 空白型, 公开, 
.参数 高级表格类型, 未知类型0x20001, , 
.参数 表头标题数组, 文本型, 参考 数组, {"编号","名称","数量"}
.参数 列宽数组, 整数型, 可空 数组, {30,200,50}

.局部变量 n, 整数型, , , 

赋值 (高级表格类型., 取数组下标 (表头标题数组, ))
.计次循环首 (取数组下标 (表头标题数组, ), n)
    高级表格类型.未知支持库函数_9 (0, 相减 (n, 1), #, 表头标题数组 [n])
.计次循环尾 ()
.如果真 (等于 (是否为空 (列宽数组), 假))
    .计次循环首 (取数组下标 (列宽数组, ), n)
        高级表格类型.未知支持库函数_32 (相减 (n, 1), 列宽数组 [n])
    .计次循环尾 ()
    
.如果真结束


.子程序 置高级表格序号, 空白型, 公开, 
.参数 高级表格类型, 未知类型0x20001, 参考, 

.局部变量 n, 整数型, , , 

.计次循环首 (相减 (高级表格类型., 2), n)
    高级表格类型.未知支持库函数_9 (n, 0, #, 到文本 (n))
.计次循环尾 ()

.子程序 EDB到高级表格, 逻辑型, 公开, 打开失败返回假，打开失败有可能是没有写密码或者密码不对,全部都是文本类型，因为考虑到数值型不能显示小数
.参数 高级表格名称, 未知类型0x20001, 参考, 要显示的高组列表组件名称
.参数 文件名, 文本型, , 要打开的文本路径
.参数 密码, 文本型, 可空, 如果没有密码时不需真本参数
.参数 自动列宽, 逻辑型, 可空, 如果为空则转为为真，为真是将自动调列宽，为假时列宽为60

.局部变量 n, 整数型, , , 
.局部变量 m, 整数型, , , 
.局部变量 列宽, 整数型, , , 
.局部变量 l, 整数型, , , 

.如果 (是否为空 (密码))
    .如果真 (等于 (打开 (文件名, “名是随便起的”, , , , , ), 假))
        返回 (假)
    .如果真结束
    
.否则
    .如果真 (等于 (打开 (文件名, “名是随便起的”, , , , 密码, ), 假))
        返回 (假)
    .如果真结束
    
.如果结束


赋值 (高级表格名称., 相加 (取记录数 (), 1))
赋值 (高级表格名称., 相加 (取字段数 (), 1))
高级表格名称.未知支持库函数_9 (0, n, #, “序号”)
高级表格名称.未知支持库函数_32 (0, 30)
.计次循环首 (取字段数 (), n)
    高级表格名称.未知支持库函数_9 (0, n, #, 取字段名 (n))
    高级表格名称.未知支持库函数_32 (n, 取字段类型 (n))
.计次循环尾 ()
.计次循环首 (取记录数 (), n)
    跳到 (n)
    高级表格名称.未知支持库函数_9 (n, 0, #, 到文本 (n))
    .计次循环首 (取字段数 (), m)
        .如果 (小于 (取字段类型 (m), 11))
            高级表格名称.未知支持库函数_9 (n, m, #, 到文本 (读 (m)))
        .否则
            
        .如果结束
        
    .计次循环尾 ()
.计次循环尾 ()
.如果 (或者 (是否为空 (自动列宽), 等于 (自动列宽, 真)))
    .计次循环首 (取字段数 (), n)
        赋值 (列宽, 0)
        .计次循环首 (取记录数 (), m)
            跳到 (m)
            .如果 (小于 (取字段类型 (n), 11))
                赋值 (l, 相加 (相乘 (取文本长度 (到文本 (读 (n))), 6), 8))
                .如果真 (大于 (l, 列宽))
                    赋值 (列宽, l)
                .如果真结束
                
                
            .否则
                赋值 (列宽, 60)
            .如果结束
            
        .计次循环尾 ()
        赋值 (l, 相加 (相乘 (取文本长度 (取字段名 (n)), 6), 8))
        .如果真 (大于 (l, 列宽))
            赋值 (列宽, l)
        .如果真结束
        
        高级表格名称.未知支持库函数_32 (n, 列宽)
    .计次循环尾 ()
.否则
    .计次循环首 (取字段数 (), n)
        高级表格名称.未知支持库函数_32 (n, 60)
    .计次循环尾 ()
.如果结束

关闭 (“名是随便起的”)
返回 (真)

.子程序 高级表格自动列宽, 空白型, 公开, 
.参数 高级表格类型, 未知类型0x20001, 参考, 

.局部变量 n, 整数型, , , 
.局部变量 m, 整数型, , , 
.局部变量 列宽, 整数型, , , 
.局部变量 长度, 整数型, , , 

.计次循环首 (高级表格类型., n)
    赋值 (列宽, 0)
    .计次循环首 (高级表格类型., m)
        赋值 (长度, 相加 (相乘 (取文本长度 (到文本 (高级表格类型.未知支持库函数_10 (相减 (m, 1), 相减 (n, 1)))), 6), 8))
        .如果真 (大于 (长度, 列宽))
            赋值 (列宽, 长度)
        .如果真结束
        
    .计次循环尾 ()
    高级表格类型.未知支持库函数_32 (相减 (n, 1), 列宽)
.计次循环尾 ()

.子程序 文件关联, 逻辑型, 公开, 成功返回真，失败返回假
.参数 关联应用程序路径, 文本型, , 当双击对应的文件时就运行该应用程序
.参数 关联文件后缀, 文本型, , 欲关联的文件后缀，如txt
.参数 关联文件图标, 文本型, 可空, ico文件路径或exe文件路径，注销后才有效,空则为程序本身

.如果真 (是否为空 (关联文件图标))
    赋值 (关联文件图标, 关联应用程序路径)
.如果真结束
返回 (并且 (写注册项 (#根类, 相加 (“.”, 关联文件后缀, “\”), 相加 (关联文件后缀, “file”)), 写注册项 (#根类, 相加 (关联文件后缀, “file\”), 关联文件后缀), 写注册项 (#根类, 相加 (关联文件后缀, “file\DefaultIcon\”), 相加 (关联文件图标, “,0”)), 写注册项 (#根类, 相加 (关联文件后缀, “file\shell\open\command\”), 相加 (关联应用程序路径, “ %1”))))

.子程序 取关联文件文件名, 文本型, 公开, 返回关联文件的文件名，方便用程序打开关联文件，如果不是用关联文件打开而是直接打开程序，则返回空文本
.局部变量 参数, 文本型, , "0", 
.局部变量 准备返回, 文本型, , , 
.局部变量 计次, 整数型, , , 

取命令行 (参数)
.如果真 (大于 (取数组成员数 (参数), 0))
    .计次循环首 (取数组成员数 (参数), 计次)
        赋值 (准备返回, 相加 (准备返回, 参数 [计次]))
        .如果真 (不等于 (计次, 取数组成员数 (参数)))
            赋值 (准备返回, 相加 (准备返回, “ ”))
        .如果真结束
        
    .计次循环尾 ()
    返回 (准备返回)
.如果真结束
返回 (“”)



.子程序 设置高级表格类型, 整数型, , 
.参数 类型, 整数型, , 

 ' 1、#表格常量.文本型； 2、#表格常量.数值型； 3、#表格常量.日期型；4、#表格常量.列表型； 5、#表格常量.选择型； 6、#表格常量.图片型；7、#表格常量.货币型。
 ' 1、#字节型； 2、#短整数型； 3、#整数型； 4、#长整数型； 5、#小数型； 6、#双精度小数型； 7、#逻辑型； 8、#日期时间型； 10、#文本型； 11、#字节集型； 12、#备注型
.如果真 (或者 (等于 (类型, 1), 等于 (类型, 10), 等于 (类型, 12)))
    返回 (1)
.如果真结束
.如果真 (或者 (等于 (类型, 2), 等于 (类型, 3), 等于 (类型, 4), 等于 (类型, 5), 等于 (类型, 6)))
    返回 (2)
.如果真结束
.如果真 (等于 (类型, 8))
    返回 (3)
.如果真结束
.如果真 (等于 (类型, 7))
    返回 (5)
.如果真结束
.如果真 (等于 (类型, 11))
    返回 (6)
.如果真结束
返回 (1)

.子程序 插入处理, 空白型, , 
.参数 记录位置, 整数型, , 
.参数 插入行数, 整数型, , 
.参数 插入位置, 整数型, , -1表示前，1表示后

.局部变量 n, 整数型, , , 
.局部变量 字节型, 字节型, , , 
.局部变量 短整数型, 短整数型, , , 
.局部变量 整数型, 整数型, , , 
.局部变量 长整数型, 长整数型, , , 
.局部变量 小数型, 小数型, , , 
.局部变量 双精度小数型, 双精度小数型, , , 
.局部变量 逻辑型, 逻辑型, , , 
.局部变量 日期时间型, 日期时间型, , , 
.局部变量 文本型, 文本型, , , 
.局部变量 字节集型, 字节集, , , 
.局部变量 备注型, 文本型, , , 
.局部变量 类型数字, 整数型, , , 
.局部变量 m, 整数型, , , 
.局部变量 z, 整数型, , , 
.局部变量 l, 逻辑型, , , 
.局部变量 i, 整数型, , , 

.如果 (等于 (插入位置, -1))
    赋值 (z, 1)
.否则
    赋值 (z, 0)
.如果结束
.变量循环首 (取记录数 (), 相减 (插入位置, z), -1, n)
    .计次循环首 (取字段数 (), m)
        赋值 (类型数字, 取字段类型 (m))
        跳到 (相减 (n, 插入行数))
        .如果真 (等于 (类型数字, 1))
             ' 返回 (“字节型”)
            赋值 (字节型, 读 (m))
        .如果真结束
        .如果真 (等于 (类型数字, 2))
             ' 返回 (“短整数型”)
            赋值 (短整数型, 读 (m))
        .如果真结束
        .如果真 (等于 (类型数字, 3))
             ' 返回 (“整数型”)
            赋值 (整数型, 读 (m))
        .如果真结束
        .如果真 (等于 (类型数字, 4))
             ' 返回 (“长整数型”)
            赋值 (长整数型, 读 (m))
        .如果真结束
        .如果真 (等于 (类型数字, 5))
             ' 返回 (“小数型”)
            赋值 (小数型, 读 (m))
        .如果真结束
        .如果真 (等于 (类型数字, 6))
             ' 返回 (“双精度小数型”)
            赋值 (双精度小数型, 读 (m))
        .如果真结束
        .如果真 (等于 (类型数字, 7))
             ' 返回 (“逻辑型”)
            赋值 (逻辑型, 读 (m))
        .如果真结束
        .如果真 (等于 (类型数字, 8))
             ' 返回 (“日期时间型”)
            赋值 (日期时间型, 读 (m))
        .如果真结束
        .如果真 (等于 (类型数字, 10))
             ' 返回 (“文本型”)
            赋值 (文本型, 读 (m))
        .如果真结束
        .如果真 (等于 (类型数字, 11))
             ' 返回 (“字节集型”)
            赋值 (字节集型, 读 (m))
        .如果真结束
        .如果真 (等于 (类型数字, 12))
             ' 返回 (“备注型”)
            赋值 (备注型, 读 (m))
        .如果真结束
        跳到 (n)
        .如果真 (等于 (类型数字, 1))
             ' 返回 (“字节型”)
            赋值 (l, 写 (m, 字节型))
        .如果真结束
        .如果真 (等于 (类型数字, 2))
             ' 返回 (“短整数型”)
            赋值 (l, 写 (m, 短整数型))
        .如果真结束
        .如果真 (等于 (类型数字, 3))
             ' 返回 (“整数型”)
            赋值 (l, 写 (m, 整数型))
        .如果真结束
        .如果真 (等于 (类型数字, 4))
             ' 返回 (“长整数型”)
            赋值 (l, 写 (m, 长整数型))
        .如果真结束
        .如果真 (等于 (类型数字, 5))
             ' 返回 (“小数型”)
            赋值 (l, 写 (m, 小数型))
        .如果真结束
        .如果真 (等于 (类型数字, 6))
             ' 返回 (“双精度小数型”)
            赋值 (l, 写 (m, 双精度小数型))
        .如果真结束
        .如果真 (等于 (类型数字, 7))
             ' 返回 (“逻辑型”)
            赋值 (l, 写 (m, 逻辑型))
        .如果真结束
        .如果真 (等于 (类型数字, 8))
             ' 返回 (“日期时间型”)
            赋值 (l, 写 (m, 日期时间型))
        .如果真结束
        .如果真 (等于 (类型数字, 10))
             ' 返回 (“文本型”)
            赋值 (l, 写 (m, 文本型))
        .如果真结束
        .如果真 (等于 (类型数字, 11))
             ' 返回 (“字节集型”)
            赋值 (l, 写 (m, 字节集型))
        .如果真结束
        .如果真 (等于 (类型数字, 12))
             ' 返回 (“备注型”)
            赋值 (l, 写 (m, 备注型))
        .如果真结束
        .如果真 (等于 (l, 假))
            赋值 (i, 相加 (i, 1))
            赋值 (_启动窗口., 相加 (全局标题, “ - 错误：”, 到文本 (n)))
        .如果真结束
        
    .计次循环尾 ()
    
.变量循环尾 ()
清空记录 (记录位置, 插入行数, 插入位置)

.子程序 清空记录, 空白型, , 
.参数 记录位置, 整数型, , 
.参数 插入行数, 整数型, , 
.参数 插入位置, 整数型, , -1表示前，1表示后

.局部变量 n, 整数型, , , 
.局部变量 字节型, 字节型, , , 
.局部变量 短整数型, 短整数型, , , 
.局部变量 整数型, 整数型, , , 
.局部变量 长整数型, 长整数型, , , 
.局部变量 小数型, 小数型, , , 
.局部变量 双精度小数型, 双精度小数型, , , 
.局部变量 逻辑型, 逻辑型, , , 
.局部变量 日期时间型, 日期时间型, , , 
.局部变量 文本型, 文本型, , , 
.局部变量 字节集型, 字节集, , , 
.局部变量 备注型, 文本型, , , 
.局部变量 类型数字, 整数型, , , 
.局部变量 m, 整数型, , , 
.局部变量 z, 整数型, , , 

.计次循环首 (插入行数, n)
    跳到 (相加 (n, 插入位置))
    .计次循环首 (取字段数 (), m)
        赋值 (类型数字, 取字段类型 (m))
        .如果真 (等于 (类型数字, 1))
             ' 返回 (“字节型”)
            写 (m, 字节型)
        .如果真结束
        .如果真 (等于 (类型数字, 2))
             ' 返回 (“短整数型”)
            写 (m, 短整数型)
        .如果真结束
        .如果真 (等于 (类型数字, 3))
             ' 返回 (“整数型”)
            写 (m, 整数型)
        .如果真结束
        .如果真 (等于 (类型数字, 4))
             ' 返回 (“长整数型”)
            写 (m, 长整数型)
        .如果真结束
        .如果真 (等于 (类型数字, 5))
             ' 返回 (“小数型”)
            写 (m, 小数型)
        .如果真结束
        .如果真 (等于 (类型数字, 6))
             ' 返回 (“双精度小数型”)
            写 (m, 双精度小数型)
        .如果真结束
        .如果真 (等于 (类型数字, 7))
             ' 返回 (“逻辑型”)
            写 (m, 逻辑型)
        .如果真结束
        .如果真 (等于 (类型数字, 8))
             ' 返回 (“日期时间型”)
            写 (m, 日期时间型)
        .如果真结束
        .如果真 (等于 (类型数字, 10))
             ' 返回 (“文本型”)
            写 (m, 文本型)
        .如果真结束
        .如果真 (等于 (类型数字, 11))
             ' 返回 (“字节集型”)
            写 (m, 字节集型)
        .如果真结束
        .如果真 (等于 (类型数字, 12))
             ' 返回 (“备注型”)
            写 (m, 备注型)
        .如果真结束
        
        
    .计次循环尾 ()
    
    
    
.计次循环尾 ()


.子程序 取短路径, 文本型, 公开, 收缩路径，返回短路径。例如C:\Program Files\ 收缩后为 C:\PROGRA~1\
.参数 文件名, 文本型, , 指定欲获取短路径名的那个文件的名字。可以是个完整路径，或者由当前目录决定

.局部变量 缓存, 文本型, , , 
.局部变量 实际长度, 整数型, , , 

赋值 (缓存, 取空白文本 (260))
赋值 (实际长度, GetShortPathNameA (文件名, 缓存, 260))
返回 (取文本左边 (缓存, 实际长度))

.窗口程序集 窗口程序新建, , , 

.子程序 _窗口新建_创建完毕, 空白型, , 
置高级表格表头 ({ “序号”, “字段名称”, “字段类型”, “文本长度” }, { 30, 150, 100, 80 })
置高级表格序号 ()
置文本长度 ()
3.未知支持库函数_30 (#)
 ' 1、#字节型； 2、#短整数型； 3、#整数型； 4、#长整数型； 5、#小数型； 6、#双精度小数型； 7、#逻辑型； 8、#日期时间型； 10、#文本型； 11、#字节集型； 12、#备注型
“字节型”.未知支持库函数_29 ()
“短整数型”.未知支持库函数_29 ()
“整数型”.未知支持库函数_29 ()
“长整数型”.未知支持库函数_29 ()
“小数型”.未知支持库函数_29 ()
“双精度小数型”.未知支持库函数_29 ()
“逻辑型”.未知支持库函数_29 ()
“日期时间型”.未知支持库函数_29 ()
“文本型”.未知支持库函数_29 ()
“字节集型”.未知支持库函数_29 ()
“备注型”.未知支持库函数_29 ()
2.未知支持库函数_30 (#)

.子程序 置文本长度, 空白型, , 
.局部变量 n, 整数型, , , 

.计次循环首 (相减 (., 1), n)
    n.未知支持库函数_9 (3, #, “50”)
.计次循环尾 ()

.子程序 _高级表格1_结束编辑, 空白型, , 
输出调试文本 (“结束编辑”)
.如果真 (等于 (未知支持库函数_4 (), 2))
    .如果真 (等于 (文字到数字类型 (未知支持库函数_3 ().未知支持库函数_10 (未知支持库函数_4 ())), 0))
        未知支持库函数_3 ().未知支持库函数_9 (未知支持库函数_4 (), #, “文本型”)
    .如果真结束
    
.如果真结束
.如果真 (并且 (不等于 (相减 (., 1).未知支持库函数_10 (1), “”), 不等于 (相减 (., 1).未知支持库函数_10 (2), “”)))
    赋值 (., 相加 (., 1))
    置高级表格序号 ()
    置文本长度 ()
.如果真结束


.子程序 _按钮创建_被单击, 空白型, , 
.局部变量 字段数量, 整数型, , , 
.局部变量 n, 整数型, , , 
.局部变量 字段, 字段信息, , "0", 

.计次循环首 (相减 (., 1), n)
    .如果真 (并且 (不等于 (n.未知支持库函数_10 (1), “”), 不等于 (n.未知支持库函数_10 (2), “”)))
        赋值 (字段数量, n)
    .如果真结束
    
.计次循环尾 ()

输出调试文本 (字段数量)
重定义数组 (字段, 假, 字段数量)
.计次循环首 (字段数量, n)
    赋值 (字段 [n], 名称, n.未知支持库函数_10 (1))
.计次循环尾 ()
.计次循环首 (字段数量, n)
    .如果 (等于 (文字到数字类型 (n.未知支持库函数_10 (2)), 0))
        赋值 (字段 [n], 类型, 10)
    .否则
        赋值 (字段 [n], 类型, 文字到数字类型 (n.未知支持库函数_10 (2)))
    .如果结束
    
    
.计次循环尾 ()
.计次循环首 (字段数量, n)
    .如果真 (等于 (n.未知支持库函数_10 (2), “文本型”))
        .如果 (等于 (到整数 (.未知支持库函数_10 (3)), 0))
            赋值 ( [最大文本长度], 50)
        .否则
            .如果 (大于 (到整数 (n.未知支持库函数_10 (3)), 512))
                赋值 (字段 [n], 最大文本长度, 512)
            .否则
                赋值 (字段 [n], 最大文本长度, 到整数 (n.未知支持库函数_10 (3)))
            .如果结束
            
        .如果结束
        
    .如果真结束
    
.计次循环尾 ()
赋值 (_启动窗口..类型, 1)
.如果 (_启动窗口.打开 (.))
    .如果 (创建 (_启动窗口..文件名, 字段))
        赋值 (全局文件名, _启动窗口..文件名)
        打开数据库 (全局文件名)
        销毁 ()
    .否则
        信息框 (“创建失败！”, 0, )
    .如果结束
    
    
.否则
    信息框 (“创建失败！”, 0, )
.如果结束



.子程序 生成代码, 空白型, , 
.局部变量 s, 文本型, , , 
.局部变量 n, 整数型, , , 
.局部变量 字段数量, 整数型, , , 

.计次循环首 (相减 (., 1), n)
    .如果真 (并且 (不等于 (.未知支持库函数_10 (1), “”), 不等于 (.未知支持库函数_10 (2), “”)))
        赋值 (字段数量, n)
        
    .如果真结束
    
.计次循环尾 ()

赋值 (s, 相加 (“.版本 2”, #换行符, #换行符, “.子程序 创建数据库, 逻辑型”, #换行符, “.参数 保存路径, 文本型”, #换行符, “.局部变量 字段, 字段信息, , ”, #引号, 到文本 (字段数量), #引号, #换行符, #换行符))
.计次循环首 ()
    赋值 (s, 相加 (s, “字段 [”, 到文本 (n), “].名称 ＝”, #引号, n.未知支持库函数_10 (1), #引号, #换行符))
.计次循环尾 ()
赋值 (s, 相加 (s, #换行符))
.计次循环首 ()
    .如果 (等于 (未知函数_67174826 (.未知支持库函数_10 (2)), 0))
        赋值 (s, 相加 (s, “字段 [”, 到文本 (n), “].类型 ＝ #文本型”, #换行符))
    .否则
        赋值 (s, 相加 (s, “字段 [”, 到文本 (n), “].类型 ＝#”, n.未知支持库函数_10 (2), #换行符))
    .如果结束
    
    
.计次循环尾 ()
赋值 (s, 相加 (s, #换行符))
.计次循环首 (字段数量, n)
    .如果真 (等于 (n.未知支持库函数_10 (2), “文本型”))
        .如果 (等于 (到整数 (.未知支持库函数_10 (3)), 0))
            赋值 (相加 (“字段 [”, 到文本 (), “].最大文本长度 ＝ 50”, #换行符))
        .否则
            .如果 (大于 (到整数 (n.未知支持库函数_10 (3)), 512))
                赋值 (s, 相加 (s, “字段 [”, 到文本 (n), “].最大文本长度 ＝512 ”, #换行符))
            .否则
                赋值 (s, 相加 (s, “字段 [”, 到文本 (n), “].最大文本长度 ＝ ”, 到文本 (到整数 (n.未知支持库函数_10 (3))), #换行符))
            .如果结束
            
        .如果结束
        
        
    .如果真结束
    
.计次循环尾 ()
赋值 (s, 相加 (s, #换行符, “返回 (创建 (保存路径, 字段))”))
赋值 (.内容, s)
置剪辑板文本 (s)

.子程序 _按钮1_被单击, 空白型, , 
生成代码 ()



 ' 不属于任何一个程序集、类模块的函数：
