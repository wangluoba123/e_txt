 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 394
    高度 = 301
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 5
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “”
    帮助文件名 = “”



.常量 GWL_STYLE, "-16", , 
.常量 WS_VSCROLL, "2097152", , 
.常量 WS_HSCROLL, "1048576", , 
.常量 SB_BOTH, "3", , 
.常量 SB_HORZ, "0", , 
.常量 SB_VERT, "1", , 
.常量 SM_CXHSCROLL, "21", , 
.常量 , , , 
.常量 SB_LINEDOWN, "1", , 
.常量 SB_LINELEFT, "0", , 
.常量 SB_LINERIGHT, "1", , 
.常量 SB_LINEUP, "0", , 
.常量 SB_PAGERIGHT, "3", , 
.常量 SB_PAGELEFT, "2", , 
.常量 SB_PAGEDOWN, "3", , 
.常量 SB_PAGEUP, "2", , 
.常量 SB_ENDSCROLL, "8", , 
.常量 SB_THUMBPOSITION, "4", , 
.常量 SB_THUMBTRACK, "5", , 
.常量 WM_HSCROLL, "276", , 
.常量 WM_VSCROLL, "277", , 
.常量 滚轮消息, "522", , 
.常量 , , , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 3 7 系统核心支持库
 ' HYExtLib D9AC553783EC11d88D5EAEB57D821B1C 1 4 海洋扩展支持库
 ' eLIBpp ECFB3D10541A422b8B73779AF00B4D0C 1 2 ｅＬＩＢ＋＋




.全局变量 Q_垂直滚动最小值, 整数型, , , 
.全局变量 Q_垂直滚动最大值, 整数型, , , 
.全局变量 Q_水平滚动最小值, 整数型, , , 
.全局变量 Q_水平滚动最大值, 整数型, , , 

.DLL命令 设置窗口结构, 整数型, "", "SetWindowLongA", , 
    .参数 窗口的句柄, 整数型, , 欲为其取得信息的窗口的句柄
    .参数 欲取回的信息, 整数型, , 可以是下述任何一个常数：
  GWL_EXSTYLE
  扩展窗口样式
  GWL_STYLE
  窗口样式
  GWL_WNDPROC
  该窗口的窗口函数的地址
  GWL_HINSTANCE
  拥有窗口的实例的句柄
  GWL_HWNDPARENT
  该窗口之父的句柄。不要用SetWindowWord来改变这个值
  GWL_ID
  对话框中一个子窗口的标识符
  GWL_USERDATA
  含义由应用程序规定
  DWL_DLGPROC
  这个窗口的对话框函数地址
  DWL_MSGRESULT
  在对话框函数中处理的一条消息返回的值
  DWL_USER
  含义由应用程序规定
    .参数 新值, 整数型, , 由"欲取回的信息"指定的窗口信息的新值

.DLL命令 设置滚动条, 整数型, "", "SetScrollRange", , 如果函数运行成功，返回值为非零；如果函数运行失败，返回值为零。若想获得更多的错误信息，请调用GetLastError函数。
注意：可以使用setScrollRange函数把nMinPos和nMaxPos设置为一样的值从而隐藏起滚动条。在处理滚动条消息时，应用程序可以不用调用函数SetScrollRange来隐藏滚动条。新的应用程序使用函数ShowScrollBar来隐藏滚动条。
    如果调用函数SetScrollPos之后马上调用函数SetScrollRange，则SetScrollPos中的bRedraw参数一定为零，以防止滚动条被画两次。
    标准滚动条的缺省范围时0到100。滚动条控制的缺省值为NULL（参数nMinPos和nMaxPos的值均为零）。两个范围值之间的不同之处在于由参数nMinPos和nMaxPos指定的值不能超过MAXLONG的值。
    因为说明滚动条位置的消息WM_HSCROLL和 WM_VSCROLL只能为16位数据，那些只依赖于说明位置数据消息的应用程序在函数SetScrollRange的参数nMaxPos中有一个实际最大值65，535。但是，因为函数SetScrolllnfo，SetScrollPos， SetScrollRange，GetScrolllnfo，GetScrollPos，和GetScrollRange都支持32位的滚动条位置数据，所以有一个解决16位WM_HSCROLL和WM_VSCROLL消息阻碍的途径，请参见函数GetScrolllnfo的有关技术说明
    .参数 hWnd, 整数型, , hWnd：滚动条控制或带有标准滚动条窗体的句柄，由nBar参数值确定。
    .参数 nBar, 整数型, , nBar：指定滚动条将被设置。这个参数可以是下面值，含义如下：
SB_CTL：设置滚动条控制的范围。而参数hwnd必须是滚动条控制的句柄。
SB_HORZ：设置窗体上标准水平滚动翻页盒的范围。
SB_VERT：设置窗体上标准垂直滚动翻页盒的范围。
    .参数 最小值, 整数型, , nMinPos：指定滚动位置的最小值。
    .参数 最大值, 整数型, , nMaxPos：指定滚动位置的最大值
    .参数 重画, 整数型, , bRedraw：指定滚动条是否被重画以反映变化。如果这个参数为TRUE，滚动条将被重化；如果为FALSE则不被重画。

.DLL命令 设置滚动按钮位置, 整数型, "", "SetScrollPos", , 设置所指定滚动条中的滚动按钮的位置，如要求重画滚动条以反映出滚动按钮的新位置。该函数提供了向后兼容性，新的应用程序应使用SetScrollinfo函数。
    .参数 hWnd, 整数型, , hWnd：滚动条控制或带有标准滚动条窗体的句柄，由nBar参数值确定。
    .参数 nBar, 整数型, , 指定滚动条将被设置。这个参数可以是下面值，含义如下：
SB_CTL：设置滚动条控制中滚动翻页盒的位置。而参数hwnd必须是滚动条控制的句柄。
SB_HORZ：设置窗体上标准水平滚动翻页盒的位置。
SB_VERT：设置窗体上标准垂直滚动翻页盒的位置。
    .参数 新位置, 整数型, , 指定滚动翻页盒的新位置。这个位置必须在滚动范围之内。若要了解更多有关滚动范围的信息，请参见SetScrollRange函数。
    .参数 重画, 整数型, , bRedraw：指定滚动条是否被重画以反映出新的滚动翻页盒的位置。如果这个参数为TRUE，则滚动条将被重画；为FALSE则滚动条不被重画。

.DLL命令 显示滚动条, 整数型, "", "ShowScrollBar", , 该函数显示或隐藏所指定的滚动条，如果函数运行成功，返回值为非零；如果函数运行失败，返回值为零。若想获得更多的错误信息，请调用GetLastError函数。
注意：当处理滚动条消息时，不能调用这个函数隐藏滚动条。

    .参数 hWnd, 整数型, , hWnd：根据参数wBar值，处理滚动条控制或带有标准滚动条窗体。
    .参数 滚动条, 整数型, , wBar：指定滚动条是被显示还是隐藏。这个参数讲师下面值之一，具体含义如下：
SB_SOTH：显示或隐藏窗体的标准的水平或垂直滚动条。
SB_CTL：显示或隐藏滚动条控制。参数hWnd必须是指向滚动条控制的句柄。
SB_HORZ：显示或隐藏窗体的标准的水平滚动条。
SB_VERT：显示或隐藏官体的标准的垂直滚动条。
    .参数 显示, 整数型, , bShow：指定滚动条是被显示还是隐藏。此参数为TRUE，滚动条将被显示，否则被隐藏。

.窗口程序集 窗口程序集1, , , 

.子程序 __启动窗口_创建完毕, 空白型, , 
.局部变量 旧风格, 空白型, , , 

赋值 (旧风格, 设置窗口结构 (取窗口句柄 (), #GWL_STYLE, 0))
赋值 (Q_垂直滚动最大值, 100) ' 标准滚动条的缺省范围时0到100。
赋值 (Q_垂直滚动最小值, 0)
赋值 (Q_水平滚动最大值, 100)
赋值 (Q_水平滚动最小值, 0)
赋值 (.内容, 到文本 (100))
赋值 (.内容, 到文本 (0))
赋值 (.内容, 到文本 (100))
赋值 (.内容, 到文本 (0))
设置窗口结构 (取窗口句柄 (), #GWL_STYLE, 位或 (旧风格, #WS_VSCROLL, #WS_HSCROLL))
显示滚动条 (取窗口句柄 (), #SB_HORZ, 0)
显示滚动条 (取窗口句柄 (), #SB_VERT, 0)
显示滚动条 (取窗口句柄 (), #SB_BOTH, 1)
未知支持库函数_0 (_启动窗口.取窗口句柄 (), #滚轮消息, &处理滚轮消息)
 显示滚动条 (画板1.取窗口句柄 (), #SB_VERT, 0)


.子程序 处理滚轮消息, 逻辑型, , 消息处理子程序，该子程序的指针可以作为“截获消息”和“撤销消息截获”命令的参数使用。可以更名，但请不要修改返回值及参数定义。
.参数 窗口句柄, 整数型, 参考, 接收该消息的窗口句柄。*请不要修改本参数的类型和其他属性！
.参数 消息号, 整数型, 参考, 消息标识。*请不要修改本参数的类型和其他属性！
.参数 消息参数1, 整数型, 参考, 消息的参数，其含义取决于一定的消息。下同。*请不要修改本参数的类型和其他属性！
.参数 消息参数2, 整数型, 参考, 消息的参数，其含义取决于一定的消息。*请不要修改本参数的类型和其他属性！

.局部变量 滚动方向值, 短整数型, , , 

 ' ★★请在此加入相应的消息处理代码：
赋值 (滚动方向值, 未知支持库函数_4 (消息参数1)) ' wParam高16位为滚动方向值
 输出调试文本 (“滚动方向值 ＝” ＋ 到文本 (滚动方向值))
 wKeys ＝ LOWORD (wParam) ' wParam低16位为按键值
 ptx ＝ LOWORD (lParam) ' wParam低16位为屏幕X
 pty ＝ HIWORD (lParam) ' wParam高116位为屏幕Y
.判断开始 (大于 (滚动方向值, 0))
    未知支持库函数_8 (取窗口句柄 (), #WM_VSCROLL, #SB_PAGEUP, 0)
.判断 (小于 (滚动方向值, 0))
    未知支持库函数_8 (取窗口句柄 (), #WM_VSCROLL, #SB_PAGEDOWN, 0)
.默认
    
.判断结束


 ' 由于本子程序的所有参数均具有“参考”属性，所以可以在程序代码中改变这些参数的值，然后返回真，把改变后的消息信息传递给指定的窗口处理。**如果改变了参数的值，请确信这些改变不会影响窗口的正常响应！！
返回 (真) ' 返回“真”代表把该消息传递给窗口，让窗口继续处理。返回“假”则不传递。**如果返回“假”请确信这样不会影响窗口的正常响应！！

.子程序 _按钮3_被单击, 空白型, , 
.局部变量 n, 整数型, , , 
.局部变量 n1, 整数型, , , 
.局部变量 Y最大值, 整数型, , , 
.局部变量 Y最小值, 整数型, , , 
.局部变量 X最大值, 整数型, , , 
.局部变量 X最小值, 整数型, , , 

赋值 (Y最大值, 到数值 (删全部空 (.内容)))
赋值 (Y最小值, 到数值 (删全部空 (.内容)))
赋值 (X最大值, 到数值 (删全部空 (.内容)))
赋值 (X最小值, 到数值 (删全部空 (.内容)))
.如果真 (或者 (小于 (Y最大值, Y最小值), 小于 (X最大值, X最小值), 小于 (Y最小值, 0), 小于 (X最小值, 0)))
    信息框 (“设置值出错！！”, 0, )
    返回 ()
.如果真结束
赋值 (n, 设置滚动条 (取窗口句柄 (), #SB_HORZ, X最小值, X最大值, 1))
赋值 (n1, 设置滚动条 (取窗口句柄 (), #SB_VERT, Y最小值, Y最大值, 1))
.如果 (或者 (等于 (n, 0), 等于 (n1, 0)))
    信息框 (“设置滚动条失败！！”, 0, )
.否则
    赋值 (Q_垂直滚动最大值, Y最大值)
    赋值 (Q_垂直滚动最小值, Y最小值)
    赋值 (Q_水平滚动最大值, X最大值)
    赋值 (Q_水平滚动最小值, X最小值)
    
.如果结束
 显示滚动条 (_启动窗口.取窗口句柄 (), #SB_VERT, 0)

.子程序 _按钮1_被单击, 空白型, , 
.局部变量 隐藏, 逻辑型, 静态, , 

.如果 (隐藏)
    显示滚动条 (取窗口句柄 (), #SB_VERT, 1)
    赋值 (.标题, “隐藏垂直滚动条”)
.否则
    显示滚动条 (取窗口句柄 (), #SB_VERT, 0)
    赋值 (.标题, “显示垂直滚动条”)
.如果结束
赋值 (隐藏, 取反 (隐藏))


.子程序 _按钮2_被单击, 空白型, , 
.局部变量 隐藏, 逻辑型, 静态, , 

.如果 (隐藏)
    显示滚动条 (取窗口句柄 (), #SB_HORZ, 1)
    赋值 (.标题, “隐藏水平滚动条”)
.否则
    显示滚动条 (取窗口句柄 (), #SB_HORZ, 0)
    赋值 (.标题, “显示水平滚动条”)
.如果结束
赋值 (隐藏, 取反 (隐藏))


.子程序 _消息代理1_收到消息, 整数型, , 
.参数 消息号, 整数型, , 
.参数 消息参数1, 整数型, , 
.参数 消息参数2, 整数型, , 

.局部变量 X位置, 整数型, 静态, , 
.局部变量 Y位置, 整数型, 静态, , 
.局部变量 X滚动量, 整数型, , , 
.局部变量 Y滚动量, 整数型, , , 
.局部变量 滚动消息, 整数型, , , 

赋值 (滚动消息, 未知支持库函数_5 (消息参数1))
.判断开始 (等于 (消息号, #WM_VSCROLL)) ' 垂直滚动条消息
    .判断开始 (等于 (滚动消息, #SB_LINEDOWN))
        赋值 (Y滚动量, 1)
    .判断 (等于 (滚动消息, #SB_LINEUP))
        赋值 (Y滚动量, -1)
    .判断 (等于 (滚动消息, #SB_PAGEDOWN))
        赋值 (Y滚动量, 10)
    .判断 (等于 (滚动消息, #SB_PAGEUP))
        赋值 (Y滚动量, -10)
    .判断 (等于 (滚动消息, #SB_THUMBTRACK))
        赋值 (Y滚动量, 相减 (未知支持库函数_4 (消息参数1), Y位置))
    .默认
        
    .判断结束
    赋值 (Y位置, 相加 (Y位置, Y滚动量))
    .如果真 (小于 (Y位置, Q_垂直滚动最小值))
        赋值 (Y位置, Q_垂直滚动最小值)
    .如果真结束
    .如果真 (大于 (Y位置, Q_垂直滚动最大值))
        赋值 (Y位置, Q_垂直滚动最大值)
    .如果真结束
    设置滚动按钮位置 (取窗口句柄 (), #SB_VERT, Y位置, 1)
    赋值 (.顶边, 负 (Y位置))
    赋值 (.内容, 到文本 (Y位置))
    返回 (1)
.判断 (等于 (消息号, #WM_HSCROLL)) ' 水平滚动条消息
    .判断开始 (等于 (滚动消息, #SB_LINERIGHT))
        赋值 (X滚动量, 1)
    .判断 (等于 (滚动消息, #SB_LINELEFT))
        赋值 (X滚动量, -1)
    .判断 (等于 (滚动消息, #SB_PAGERIGHT))
        赋值 (X滚动量, 10)
    .判断 (等于 (滚动消息, #SB_PAGELEFT))
        赋值 (X滚动量, -10)
    .判断 (等于 (滚动消息, #SB_THUMBTRACK))
        赋值 (X滚动量, 相减 (未知支持库函数_4 (消息参数1), X位置))
    .默认
        
    .判断结束
    赋值 (X位置, 相加 (X位置, X滚动量))
    .如果真 (小于 (X位置, Q_水平滚动最小值))
        赋值 (X位置, Q_水平滚动最小值)
    .如果真结束
    .如果真 (大于 (X位置, Q_水平滚动最大值))
        赋值 (X位置, Q_水平滚动最大值)
    .如果真结束
    设置滚动按钮位置 (取窗口句柄 (), #SB_HORZ, X位置, 1)
    赋值 (.左边, 负 (X位置))
    赋值 (.内容, 到文本 (X位置))
    返回 (1)
.默认
    
.判断结束


.子程序 __启动窗口_获得焦点, 空白型, , 
.未知支持库函数_0 ()


.子程序 __启动窗口_首次激活, 空白型, , 



 ' 不属于任何一个程序集、类模块的函数：
