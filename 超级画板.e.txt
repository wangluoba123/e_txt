 ' 文件类型：Windows窗口程序

 ' 程序名称：超级画板
 ' 程序描述：超级画板 自动画随机图形

@备注:
超级画板 自动画随机图形
可用作屏幕保护
 ' 程序作者：李翰聪
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：李翰聪 版权所有
 ' 版本号：1.2
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 800
    高度 = 500
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 0
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 真
    外形 = 0
    总在最前 = 真
    保持标题栏激活 = 真
    窗口类名 = “”
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “超级图形”
    帮助文件名 = “”



.常量 SYSTEM_PERFORMANCE_INFORMATION, "2", 隐藏, 
.常量 PROCESS_TERMINATE, "1", 隐藏, 
.常量 SYSTEM_TIME_INFORMATION, "3", 隐藏, 
.常量 SC_MANAGER_CREATE_SERVICE, "2", 隐藏, 
.常量 SERVICE_START, "16", 隐藏, 
.常量 SERVICE_ERROR_IGNORE, "0", 隐藏, 
.常量 GENERIC_READ, "2147483648", 隐藏, 
.常量 GENERIC_WRITE, "1073741824", 隐藏, 
.常量 OPEN_EXISTING, "3", 隐藏, 
.常量 DELETE, "65536", 隐藏, 
.常量 SERVICE_STOP, "32", 隐藏, 
.常量 SERVICE_CONTROL_STOP, "1", 隐藏, 
.常量 SERVICE_KERNEL_DRIVER, "1", 隐藏, 
.常量 SERVICE_DEMAND_START, "3", 隐藏, 
.常量 标准, "32", 隐藏, 标准
.常量 低, "64", 隐藏, 系统空闲时才运行
.常量 高, "128", 隐藏, 高
.常量 实时, "256", 隐藏, 进程拥有很高优先级，应尽量避免采用此优先级


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 5 0 系统核心支持库
 ' eCalc 306AA9E31B5940399723021A0D782077 2 0 数值计算支持库
 ' iext 27bb20fdd3e145e4bee3db39ddd6e64c 2 0 扩展界面支持库一



 ' 所需要的模块
 ' 实用模块 d:\我的文档\E源码\实用的模块.ec


数据类型 SERVICE_STATUS, 公开, 
    .成员 dwServiceType, 整数型, , , 
    .成员 dwCurrentState, 整数型, , , 
    .成员 dwControlsAccepted, 整数型, , , 
    .成员 dwWin32ExitCode, 整数型, , , 
    .成员 dwServiceSpecificExitCode, 整数型, , , 
    .成员 dwCheckPoint, 整数型, , , 
    .成员 dwWaitHint, 整数型, , , 

数据类型 重叠操作, 公开, OVERLAPPED
    .成员 内部保留参数, 整数型, , , Internal
    .成员 内部高位保留参数, 整数型, , , InternalHigh
    .成员 低32位, 整数型, , , offset
    .成员 高32位, 整数型, , , offsethigh
    .成员 事件句柄, 整数型, , , hevent

数据类型 SYSTEM_TIME_INFORMATION, 公开, 
    .成员 liKeBootTime, 长整数型, , , 
    .成员 liKeSystemTime, 长整数型, , , 
    .成员 liExpTimeZoneBias, 长整数型, , , 
    .成员 uCurrentTimeZoneId, 整数型, , , 
    .成员 dwReserved, 整数型, , , 

数据类型 系统状态栏信息_, 公开, APPBARDATA
    .成员 结构大小, 整数型, , , cbSize
    .成员 窗口句柄, 整数型, , , hwnd
    .成员 回调信息值, 整数型, , , uCallbackMessage
    .成员 边框位置, 整数型, , , uEdge
    .成员 左边, 整数型, , , Left
    .成员 顶边, 整数型, , , Top
    .成员 右边, 整数型, , , Right
    .成员 底边, 整数型, , , Bottom
    .成员 参数值, 整数型, , , lParam

数据类型 文件时间_, 公开, FILETIME,size = 8
    .成员 底部时间数据, 整数型, , , dwLowDateTime,
    .成员 顶部时间数据, 整数型, , , dwHighDateTime,

数据类型 系统时间_, 公开, SYSTEMTIME
    .成员 年, 短整数型, , , wYear
    .成员 月, 短整数型, , , wMonth
    .成员 星期, 短整数型, , , wDayOfWeek
    .成员 日, 短整数型, , , wDay
    .成员 小时, 短整数型, , , wHour
    .成员 分, 短整数型, , , wMinute
    .成员 秒, 短整数型, , , wSecond
    .成员 毫秒, 短整数型, , , wMilliseconds

数据类型 设定执行文件信息_, 公开, SHELLEXECUTEINFO
    .成员 结构大小, 整数型, , , cbSize
    .成员 标志, 整数型, , , fMask
    .成员 窗口句柄, 整数型, , , hwnd
    .成员 操作命令, 文本型, , , lpVerb
    .成员 文件名, 文本型, , , lpFile
    .成员 应用程序参数, 文本型, , , lpParameters
    .成员 目录, 文本型, , , lpDirectory
    .成员 显示标志, 整数型, , , nShow
    .成员 实例句柄, 整数型, , , hInstApp
    .成员 项目标识符列表结构指针, 整数型, , , lpIDList
    .成员 文件类别, 文本型, , , lpClass
    .成员 热键句柄, 整数型, , , hkeyClass
    .成员 热键, 整数型, , , dwHotKey
    .成员 图标句柄, 整数型, , , hIcon
    .成员 进程句柄, 整数型, , , hProcess

数据类型 MP3标签, 公开, Mp3的信息
    .成员 ID3, 文本型, , , 
    .成员 TAG, 文本型, , , 
    .成员 歌曲名, 文本型, , , 
    .成员 艺术家, 文本型, , , 
    .成员 专辑, 文本型, , , 
    .成员 音轨, 文本型, , , 
    .成员 年代, 文本型, , , 
    .成员 流派, 文本型, , , 
    .成员 注释, 文本型, , , 
    .成员 作曲家, 文本型, , , 
    .成员 原创者, 文本型, , , 
    .成员 版权, 文本型, , , 
    .成员 URL, 文本型, , , 
    .成员 编码者, 文本型, , , 

数据类型 进程内存统计_, 公开, , PROCESS_MEMORY_COUNTERS
    .成员 结构大小, 整数型, , , cb
    .成员 页错误数量, 整数型, , , PageFaultCount 页面错误
    .成员 最高工作设置大小, 整数型, , , PeakWorkingSetSize 高峰内存使用
    .成员 当前工作设置大小, 整数型, , , WorkingSetSize 内存使用
    .成员 最高页使用, 整数型, , , QuotaPeakPagedPoolUsage 高峰页面缓冲池
    .成员 当前页使用, 整数型, , , QuotaPagedPoolUsage 页面缓冲池
    .成员 最高非页使用, 整数型, , , QuotaPeakNonPagedPoolUsage 高峰非页面缓冲池
    .成员 当前非页使用, 整数型, , , QuotaNonPagedPoolUsage 非页面缓冲池
    .成员 页文件使用, 整数型, , , PagefileUsage 虚拟内存使用
    .成员 最高页文件使用, 整数型, , , PeakPagefileUsage 高峰虚拟内存使用

数据类型 矩形坐标, 公开, 
    .成员 矩形左边, 整数型, , , 
    .成员 矩形顶边, 整数型, , , 
    .成员 矩形右边, 整数型, , , 
    .成员 矩形底边, 整数型, , , 

数据类型 坐标型, 公开, 
    .成员 x, 整数型, , , X轴坐标
    .成员 y, 整数型, , , Y轴坐标

数据类型 MSG, 公开, 
    .成员 message, 整数型, , , 
    .成员 paramL, 整数型, , , 
    .成员 paramH, 整数型, , , 
    .成员 time, 整数型, , , 
    .成员 hwnd, 整数型, , , 

数据类型 SECURITY_ATTRIBUTES, 公开, dos
    .成员 nLength, 整数型, , , 
    .成员 lpSecurityDescriptor, 整数型, , , 
    .成员 bInheritHandle, 整数型, , , 

.全局变量 是否画图, 逻辑型, , , 
.全局变量 驱动操作, 驱动操作类, 公开, , 驱动操作
.全局变量 MP3信息读取, MP3信息读取类, 公开, , MP3信息读取
.全局变量 禁止多次运行, 禁止多次运行类, 公开, , 禁止多次运行
.全局变量 高精度运算, 高精度运算类, 公开, , 本类满足高精度的计算需要,其它算法正在开发
.全局变量 热键, 热键类, 公开, , 热键
.全局变量 超级列表框背景图片设置, 超级列表框背景图片设置类, 公开, , 

.DLL命令 NtQuerySystemInformation_spi, 整数型, "ntdll", "NtQuerySystemInformation", 公开, 
    .参数 dwInfoType, 整数型, , 
    .参数 lpStructure, 未知类型0x410113AB, , 
    .参数 dwSize, 整数型, , 
    .参数 dwReserved, 整数型, , 

.DLL命令 画图标_, 整数型, "user32", "DrawIcon", 公开, $(b)在指定的位置画一个图标  非零表示成功，零表示失败。会设置GetLastError
    .参数 设备场景句柄, 整数型, , 设备场景
    .参数 横坐标, 整数型, , 想描绘图标的位置（逻辑坐标）
    .参数 纵坐标, 整数型, , 同上
    .参数 图标句柄, 整数型, , 欲描绘图标的句柄;

.DLL命令 取设备场景_, 整数型, "user32", "GetDC", 公开, $(b)获取指定窗口的设备场景  指定窗口的设备场景句柄，出错则为0
    .参数 窗口句柄, 整数型, , 将获取其设备场景的窗口的句柄。若为0，则要获取整个屏幕的DC;

.DLL命令 打开SC管理服务_, 整数型, "advapi32.dll", "OpenSCManagerA", 公开, 打开SC管理服务_,建立服务首先应用此函数打开然后再用OpenServiceA打开服务获得服务控制管理器数据库的句柄
    .参数 机器名称, 文本型, , lpMachineName用取本机名取得就是本机的名称指向需要打开的计算机名字符串，字符串以NULL结尾，如果参数指定为NULL，表示连接到本机上的SCM
    .参数 数据库名, 文本型, , lpDatabaseName指向以NULL结尾的包含SCM数据库名称的字符串，字符串应该指定为"ServicesActive"，如果参数指定为NULL，则默认打开"ServicesActive"
    .参数 数据库, 整数型, , dwDesiredAccess指定访问SCM的权限，这个参数告诉SCM我们需要进行什么样的操作，常用的取值有三个：SC_MANAGER_CREATE_SERVICESC_MANAGER_CREATE_SERVICESC_MANAGER_ALL_ACCESS

.DLL命令 删除服务_, 整数型, "advapi32.dll", "DeleteService", 公开, 删除服务,成功返回0失败返回非0
    .参数 hService, 整数型, , OpenSCManager的数据库句柄

.DLL命令 创建服务_, 整数型, "advapi32.dll", "CreateServiceA", 公开, 创建服务
    .参数 hSCManager, 整数型, , SCM句柄OpenSCManager返回值
    .参数 lpServiceName, 文本型, , 指向一个以0字符结尾的表示服务名称的字符串，字符串的最大长度是256个字符字符串的最大长度是256个字符，名称中不允许使用/或者\字符（因为这些字符会和注册表的路径表示方式冲突），这个值和注册表中的键名是相对应的
    .参数 lpDisplayName, 文本型, , 指向一个以0字符结尾表示服务名称的字符串，这个名称是供用户界面程序识别函数时使用的，同样，它的最大长度也是256个字符。这个值和注册表中的DisplayName键的值是相对应的
    .参数 dwDesiredAccess, 整数型, , 指定需要访问服务的操作可以有以下取值：SERVICE_ALL_ACCESS--可以进行所有操作SERVICE_START--允许调用StartService函数来启动服SERVICE_STOP--允许调用ControlService函数来停止服务DELETE--允许调用DeleteService函数来删除服务
    .参数 dwServiceType, 整数型, , 服务的类型我们的教程中只用得到SERVICE_KERNEL_DRIVER，这个值和注册表中的Type键的值是相对应的
    .参数 dwStartType, 整数型, , 表示在什么时候启动服务，如果我们需要手动启动驱动的话，那么使用SERVICE_DEMAND_START参数，如果驱动程序需要在系统启动的时候就被启动，那么使用SERVICE_AUTO_START参数，这个取值和注册表中的Start键的取值是相对应的
    .参数 dwErrorControl, 整数型, , 表示当驱动初始化的时候出错该如何处理，取值SERVICE_ERROR_IGNORE表示忽略错误，取值SERVICE_ERROR_NORMAL表示将错误记录到系统日志中去，这个取值和注册表中的ErrorControl键值是相对应的
    .参数 lpBinaryPathName, 文本型, , 指向以0结尾的表示驱动程序文件名的字符串，这个值和注册表中的ImagePath的键值是相对应的
    .参数 lpLoadOrderGroup, 整数型, , 指向以0结尾的表示组名称的字符串，表示该驱动属于哪个组，既然我们的例子程序不属于任何组，那么这里就用NULL好了
    .参数 lpdwTagId, 整数型, , 指向一个32位的缓冲区，用来接收驱动在lpLoadOrderGroup参数指定的组中的唯一的标识，我们的例子中不需要用到这个表示，所以参数指定为NULL
    .参数 lpDependencies, 整数型, , 对于驱动程序来说，这个参数没什么用途，设置为NULL好了
    .参数 lpServiceStartName, 整数型, , 指向一个以0结尾的表示帐号名称的字符串，用于指定服务允许在哪个帐号下运行，如果服务类型是SERVICE_KERNEL_DRIVER的话，该帐号就是系统装入服务的模块名称，我们在这里使用NULL，表示由默认的模块装入
    .参数 lpPassword, 整数型, , 对于驱动程序来说，这个参数没什么用途，设置为NULL好了

.DLL命令 设备操作_, 整数型, "kernel32.dll", "DeviceIoControl", 公开, 设备操作_,对设备执行指定的操作
    .参数 设备句柄, 整数型, , hDevice设备句柄
    .参数 控制参数, 整数型, , dwIoControlCode带有 FSCTL_ 前缀的常数.参考设备控制选项的部分列表设备控制选项的部分列表――参考DeviceIoControl函数
    .参数 参数一, 整数型, , lpInBuffer具体取决于dwIoControlCode参数.参考设备控制选项的部分列表
    .参数 参数二, 整数型, , nInBufferSize输入缓冲区的长度
    .参数 参数三, 整数型, , lpOutBuffer Anyany型根据实际需要修改 具体取决于dwIoControlCode参数.参考设备控制选项的部分列表
    .参数 参数四, 整数型, , nOutBufferSize输出缓冲区的长度
    .参数 缓冲区字节数, 整数型, , lpBytesReturned实际装载到输出缓冲区的字节数量
    .参数 OVERLAPPED结构地址, 重叠操作, , lpOverlappedOVERLAPPED这个结构用于重叠操作.针对同步操作请用ByVal As Long传递零值

.DLL命令 创建文件_, 整数型, "kernel32.dll", "CreateFileA", 公开, 创建文件_,这是一个全功能的例程可打开和创建文件、管道、邮槽、通信服务、设备以及控制台 ――返回值:如执行成功则返回文件句柄.INVALID_HANDLE_VALUE表示出错会设置GetLastError.即使函数成功但若文件存在且指定了CREATE_ALWAYS 或 OPEN_ALWAYSGetLastError也会设为ERROR_ALREADY_EXISTS 例子：查看例程API程序自杀
    .参数 打开文件名, 文本型, , lpFileName要打开的文件的名字
    .参数 访问权限, 整数型, , dwDesiredAccess如果为 GENERIC_READ 表示允许对设备进行读访问;如果为 GENERIC_WRITE 表示允许对设备进行写访问（可组合使用）;如果为零表示只允许获取与一个设备有关的信息
    .参数 共享方式, 整数型, , dwShareMode
    .参数 安全特性, 整数型, , lpSecurityAttributes是指向SECURITY_ATTRIBUTES结构的指针，指定了目录的安全属性，但要求文件系统支持如NTFS的格式。Windows 98不支持此属性，在函数调用时应设置为NULL
    .参数 创建方式, 整数型, , dwCreationDispositiondwCreationDisposition Long下述常数之一:
    .参数 文件属性, 整数型, , dwFlagsAndAttributesdwFlagsAndAttributes Long一个或多个下述常数
    .参数 从文件复制文件属性, 整数型, , hTemplateFile如果不为零则指定一个文件句柄.新文件将从这个文件中复制扩展属性

.DLL命令 开始启动系统服务_, 整数型, "advapi32.dll", "StartServiceA", 公开, 开始启动系统服务,开始运行服务
    .参数 服务句柄, 整数型, , CreateService返回的驱动的句柄
    .参数 dwNumServiceArgs, 整数型, , 0
    .参数 lpServiceArgVectors, 整数型, , 0

.DLL命令 停止系统服务_, 整数型, "advapi32.dll", "ControlService", 公开, 停止系统服务_,用来停止系统服务
    .参数 hService, 整数型, , 用 OpenService 返回的句柄
    .参数 dwControl, 整数型, , 用于驱动程序的时候，这个参数总是设置为NULL
    .参数 lpServiceStatus, SERVICE_STATUS, 传址, 同上，也为NULL

.DLL命令 退出线程_, 整数型, "kernel32", "ExitThread", 公开, 
    .参数 线程句柄, 整数型, , 

.DLL命令 关闭SC服务管理句柄_, 整数型, "advapi32.dll", "CloseServiceHandle", 公开, 关闭SC服务管理句柄_,
    .参数 SC对象句柄, 整数型, , 由OpenSCManagerA和CreateServiceA返回的句柄关闭时应关闭两个

.DLL命令 打开服务_, 整数型, "advapi32.dll", "OpenServiceA", 公开, 打开服务,
    .参数 hSCManager, 整数型, , 由CreateServiceA返回的句柄
    .参数 lpServiceName, 文本型, , 服务名称
    .参数 dwDesiredAccess, 整数型, , 983551指定需要访问服务的操作

.DLL命令 取父窗口_, 整数型, "user32.dll", "GetParent", 公开, user32.dll判断指定窗口的父窗口  父窗口的句柄。如窗口没有父，或遇到错误，则返回零。会设置GetLastError
    .参数 窗口句柄, 整数型, , 欲测试的窗口的句柄;

.DLL命令 新父窗口_, 整数型, "user32", "SetParent", 公开, 指定一个窗口的新父（在vb里使用：利用这个函数，vb可以多种形式支持子窗口。例如，可将控件从一个容器移至窗体中的另一个。用这个函数在窗体间移动控件是相当冒险的，但却不失为一个有效的办法。如真的这样做，请在关闭任何一个窗体之前，注意用SetParent将控件的父设回原来的那个）  前一个父窗口的句柄
    .参数 hWndChild, 整数型, , 子窗口的句柄
    .参数 hWndNewParent, 整数型, , hWndChild的新父;

.DLL命令 寻找顶级窗口_, 整数型, "user32", "FindWindowA", 公开, 寻找窗口列表中第一个符合指定条件的顶级窗口（在vb里使用：FindWindow最常见的一个用途是获得ThunderRTMain类的隐藏窗口的句柄；该类是所有运行中vb执行程序的一部分。获得句柄后，可用api函数GetWindowText取得这个窗口的名称；该名也是应用程序的标题）  找到窗口的句柄。如未找到相符窗口，则返回零。会设置GetLastError
    .参数 窗口类名, 文本型, , 指向包含了窗口类名的空中止（C语言）字串的指针；或设为零，表示接收任何类
    .参数 窗口文本, 文本型, , 指向包含了窗口文本（或标签）的空中止（C语言）字串的指针；或设为零，表示接收任何窗口标题  示例Dim hw&

.DLL命令 取进程内存信息_, 整数型, "psapi.dll", "GetProcessMemoryInfo", 公开, 取得进程的详细内存信息（失败返回 0）
    .参数 进程句柄, 整数型, , Process 用本模块的【打开进程()】命令取得
    .参数 进程内存结构, 进程内存统计_, , ppsmemCounters
    .参数 结构大小, 整数型, , cb  40

.DLL命令 超级延迟_, 整数型, "kernel32.dll", "Sleep", 公开, 超级延迟,CPU占用低
    .参数 时间, 整数型, , 毫秒

.DLL命令 生成声音_, 整数型, "kernel32.dll", "Beep", 公开, Beep,用于生成简单的声音
    .参数 声音频率, 整数型, , dwFreq,声音频率（从37Hz到32767Hz）
    .参数 声音持续时间, 整数型, , dwDuration,参见相关帮助

.DLL命令 窗口改变_, 整数型, "user32.dll", "MoveWindow", 公开, 
    .参数 窗口句柄, 整数型, , hwnd，欲移动窗口的句柄
    .参数 左侧位置, 整数型, , x，窗口新的左侧位置
    .参数 顶部位置, 整数型, , y，窗口新的顶部位置
    .参数 新宽度, 整数型, , nWidth，窗口的新宽度
    .参数 高宽度, 整数型, , nHeight，窗口的高宽度
    .参数 是否重画, 整数型, , bRepaint，如窗口此时应重画，则设为TRUE（非零）

.DLL命令 窗口锁定_, 整数型, "user32.dll", "LockWindowUpdate", 公开, 锁定指定窗口，禁止它更新。同时只能有一个窗口处于锁定状态
    .参数 窗口句柄, 整数型, , hwndLock,欲锁定窗口的句柄。如设为零，则对窗口解锁

.DLL命令 窗口是否可见_, 整数型, "user32.dll", "IsWindowVisible", 公开, 判断窗口是否可见
    .参数 窗口句柄, 整数型, , hwnd,要测试的那个窗口的句柄

.DLL命令 窗口置标题_, 整数型, "user32", "SetWindowTextA", 公开, 
    .参数 窗口句柄, 整数型, , 
    .参数 窗口标题, 文本型, , 

.DLL命令 窗口最小化_, 整数型, "user32.dll", "CloseWindow", 公开, 非0表示成功，0表示失败
    .参数 窗口句柄, 整数型, , hwnd，欲最小化窗口的窗口句柄

.DLL命令 窗口句柄是否有效_, 整数型, "user32.dll", "IsWindow", 公开, 判断一个窗口句柄是否有效
    .参数 窗口句柄, 整数型, , hwnd,待检查窗口的句柄

.DLL命令 窗口状态判断_, 整数型, "user32.dll", "IsWindowEnabled", 公开, 判断窗口是否处于活动状态
    .参数 窗口句柄, 整数型, , hwnd,待检测窗口的句柄

.DLL命令 窗口是否最大化_, 整数型, "user32.dll", "IsZoomed", 公开, 判断窗口是否最大化
    .参数 窗口句柄, 整数型, , hwnd,欲测试的窗口的句柄

.DLL命令 窗口禁止_, 整数型, "user32.dll", "EnableWindow", 公开, 在指定的窗口里允许或禁止所有鼠标及键盘输入
    .参数 窗口句柄, 整数型, , hwnd，窗口句柄
    .参数 标识符, 整数型, , fEnable，非零允许，零禁止

.DLL命令 锁定窗口_, 整数型, "user32.dll", "LockWindowUpdate", 公开, 锁定指定窗口，禁止它更新。同时只能有一个窗口处于锁定状态
    .参数 窗口句柄, 整数型, , hwndLock,欲锁定窗口的句柄。如设为零，则对窗口解锁

.DLL命令 释放动态链接库_, 整数型, "kernel32", "FreeLibrary", 公开, $(b)释放指定的动态链接库，它们早先是用LoadLibrary ;    API函数装载的  非零表示成功，零表示失败。会设置GetLastError
    .参数 库句柄, 整数型, , $(b)要释放的一个库句柄在VB里使用只能用这个函数释放那些由应用程序明确装载的DLL。对LoadLibrary的每一次调用都应该有一个对应的FreeLibrary调用;

.DLL命令 载入动态链接库_, 整数型, "kernel32.dll", "LoadLibraryA", 公开, 载入指定的动态链接库，并将它映射到当前进程使用的地址空间
    .参数 动态链接库名称, 文本型, , lpLibFileName,指定要载入的动态链接库的名称

.DLL命令 获取进程经过时间_, 整数型, "kernel32", "GetProcessTimes", 公开, 
    .参数 进程句柄, 整数型, , 
    .参数 创建时间, 文件时间_, , 
    .参数 中止时间, 文件时间_, , 
    .参数 系统经过时间, 文件时间_, , 
    .参数 用户经过时间, 文件时间_, , 

.DLL命令 置线程优先级_, 整数型, "kernel32", "SetThreadPriority", 公开, 设定线程的优先级别  非零表示成功，零表示失败。会设置GetLastError
    .参数 线程句柄, 整数型, , hThread
    .参数 优先权, 整数型, , nPriority

.DLL命令 置系统时间_, 整数型, "kernel32.dll", "SetSystemTime", 公开, 设置当前系统时间
    .参数 系统时间结构, 系统时间_, , 这个结构指定了新的地方时间。其中的wDayOfWeek条目会被忽略

.DLL命令 取焦点窗口句柄_, 整数型, "user32.dll", "GetFocus", 公开, GetFocus，获得拥有输入焦点的窗口的句柄

.DLL命令 建立模板目录_, 整数型, "kernel32", "CreateDirectoryExA", 公开, CreateDirectoryEx
    .参数 模板目录路径, 文本型, , lpTemplateDirectory
    .参数 新目录路径, 文本型, , lpNewDirectory
    .参数 安全属性, 整数型, , lpSecurityAttributes

.DLL命令 删除指定目录_, 整数型, "kernel32.dll", "RemoveDirectoryA", 公开, RemoveDirectory，删除指定目录，在调用这个函数前，目录必须为空
    .参数 目录的名字, 文本型, , lppatename，String，要删除的那个目录的名字

.DLL命令 文件是否存在_, 整数型, "shell32.dll", "#45", 公开, 返回0则不存在
    .参数 路径, 文本型, , szPath

.DLL命令 置进程优先级_, 整数型, "kernel32", "SetPriorityClass", 公开, $(b)设置一个进程的优先级别  进程的优先级，零表示失败。会设置GetLastError
    .参数 进程句柄, 整数型, , 
    .参数 级别, 整数型, , 

.DLL命令 取特定进程优先级_, 整数型, "kernel32", "GetPriorityClass", 公开, $(b)获取特定进程的优先级别  进程的优先级，零表示失败。会设置GetLastError
    .参数 进程句柄, 整数型, , 进程句柄;(用 打开进程() 取得.)

.DLL命令 取当前进程伪句柄_, 整数型, "kernel32", "GetCurrentProcess", 公开, $(b)获取当前进程的一个伪句柄  当前进程的伪句柄

.DLL命令 关闭内核对象_, 整数型, "kernel32.dll", "CloseHandle", 公开, $(b)非零表示成功，零表示失败
    .参数 对象句柄, 整数型, , hObject，欲关闭的一个对象的句柄

.DLL命令 滚动窗口_, 整数型, "user32", "ScrollWindow", 公开, ScrollWindow，非零表示成功，零表示失败。会设置GetLastError
    .参数 窗口句柄, 整数型, , hwnd，待滚动窗口的句柄
    .参数 水平滚动距离, 整数型, , XAmount，水平滚动的距离。正值向右滚动，负值向左滚动
    .参数 垂直滚动距离, 整数型, , YAmount，垂直滚动的距离。正值向下滚动，负值向上滚动
    .参数 客户区矩形, 整数型, , lpRect，用客户区坐标表示的一个矩形，它定义了客户区要滚动的一个部分。如设为NULL，则滚动整个客户区。在NULL的情况下，子窗口和控件的位置也会随同任何无效区域移动。否则，子窗口和无效区域不会一起移动。因此，在滚动之前，如指定了lpRect，一个明智的做法是先调用UpdateWindow函数
    .参数 剪切区域, 整数型, , lpClipRect，指定剪切区域。只有这个矩形的区域才可能滚动。该矩形优先于lpRect。可设为NULL

.DLL命令 设定执行文件_, 整数型, "shell32.dll", "ShellExecuteEx", 公开, 
    .参数 设定执行文件信息结构, 设定执行文件信息_, , 

.DLL命令 激活控件_, 逻辑型, "user32.dll", "EnableWindow", 公开, 
    .参数 句柄, 整数型, , 要激活的控件句柄
    .参数 激活, 逻辑型, , 是否激活

.DLL命令 取窗口菜单_, 整数型, "user32.dll", "GetMenu", 公开, 公开, 成功返回菜单句柄，失败返回0
    .参数 窗口句柄, 整数型, , 

.DLL命令 取指定点窗口句柄_, 整数型, "user32.dll", "WindowFromPoint", 公开, 取指定点窗口句柄
    .参数 纵坐标, 整数型, , yPoint，y点值

.DLL命令 寻找子窗口_, 整数型, "user32", "FindWindowExA", 公开, 在窗口列表中寻找与指定条件相符的第一个子窗口  找到的窗口的句柄。如未找到相符窗口，则返回零。
    .参数 窗口句柄1, 整数型, , 在其中查找子的父窗口。如设为零，表示使用桌面窗口（通常说的顶级窗口都被认为是桌面的子窗口，所以也会对它们进行查找）
    .参数 窗口句柄2, 整数型, , 从这个窗口后开始查找。这样便可利用对FindWindowEx的多次调用找到符合条件的所有子窗口。如设为零，表示从第一个子窗口开始搜索
    .参数 欲搜索的类名1, 文本型, , 欲搜索的类名。零表示忽略
    .参数 欲搜索的类名2, 文本型, , 欲搜索的类名。零表示忽略;

.DLL命令 取客户区坐标_, 逻辑型, "user32.dll", "ScreenToClient", 公开, 判断屏幕上一个指定点的客户区坐标.非零表示成功，零表示失败
    .参数 窗口句柄, 整数型, , 一个窗口的句柄，该窗口定义了要使用的客户区坐标系统
    .参数 坐标, 未知类型0x410113AC, 传址, 逻辑坐标

.DLL命令 移动文件_, 整数型, "kernel32.dll", "MoveFileA", 公开, MoveFileA,移动文件
    .参数 文件名, 文本型, , lpExistingFileName，欲移动的文件名
    .参数 新文件名, 文本型, , lpNewFileName，新文件名

.DLL命令 清除窗口_, 整数型, "user32.dll", "DestroyWindow", 公开, $(b)
    .参数 窗口句柄, 整数型, , hwnd,预清除的窗口的句柄

.DLL命令 显示鼠标_, 空白型, "user32.dll", "ShowCursor", 公开, 显示/隐藏鼠标指针
    .参数 bShow, 整数型, ,  windows维持着一个内部显示计数；倘若bShow为TRUE，那么每调用一次这个函数，计数就会递增1；反之，如bShow为FALSE，则计数递减1。只有在这个计数大于或等于0的情况下，指针才会显示出来

.DLL命令 取当前进程标识符_, 整数型, "kernel32.dll", "GetCurrentProcessId", 公开, 获取当前进程一个唯一的标识符

.DLL命令 ZwClose, 整数型, "ntdll.dll", "ZwClose", 公开, 关闭进程句柄
    .参数 handle, 整数型, , 

.DLL命令 恢复进程_, 空白型, "ntdll.dll", "ZwResumeProcess", 公开, 恢复进程
    .参数 hProcess, 整数型, , 

.DLL命令 暂停进程_, 空白型, "ntdll.dll", "ZwSuspendProcess", 公开, 暂停进程
    .参数 hProcess, 整数型, , 

.DLL命令 呼叫下一钩子_, 整数型, "user32.dll", "CallNextHookEx", 公开, CallNextHookEx
    .参数 钩子句柄, 整数型, , hHook
    .参数 代码值, 整数型, , ncode
    .参数 附加参数1, 整数型, , wParam
    .参数 附加参数2, 整数型, 传址, lParam

.DLL命令 最近的输入虚拟键状态_, 整数型, "user32.dll", "GetKeyState", 公开, GetKeyState，针对已处理过的按键，在最近一次输入信息时，判断指定虚拟键的状态
    .参数 键代码, 整数型, , nVirtKey，欲测试的虚拟键键码。对字母、数字字符（A-Z、a-z、0-9），用它们实际的ASCII值

.DLL命令 设置系统钩子_, 整数型, "user32.dll", "SetWindowsHookExA", 公开, SetWindowsHookEx
    .参数 钩子类型, 整数型, , idHook
    .参数 回调函数地址, 整数型, , lpfn
    .参数 实例句柄, 整数型, , hmod
    .参数 线程ID, 整数型, , dwThreadId

.DLL命令 释放系统钩子_, 整数型, "user32.dll", "UnhookWindowsHookEx", 公开, UnhookWindowsHookEx
    .参数 钩子句柄, 整数型, , hHook

.DLL命令 取进程线程标识符_, 整数型, "user32.dll", "GetWindowThreadProcessId", 公开, GetWindowThreadProcessId，获取与指定窗口关联在一起的一个线程和进程标识符
    .参数 窗口句柄, 整数型, , hwnd，指定窗口句柄
    .参数 进程标识符, 整数型, , lpdwProcessId，指定一个变量，用于装载拥有那个窗口的一个进程的标识符

.DLL命令 打开进程_, 整数型, "kernel32.dll", "OpenProcess", 公开, 将句柄返回给过程对象
    .参数 进程对象, 整数型, , dwDesiredAccess 2035711 
    .参数 继承句柄, 整数型, , bInheritHandle   
    .参数 进程标识符, 整数型, , dwProcessId

.DLL命令 设置窗口特征_, 子程序指针, "", "SetWindowLongA", 公开, 
    .参数 窗口句柄, 整数型, , 
    .参数 特征索引, 整数型, , 
    .参数 新特征, 子程序指针, , 

.DLL命令 _回调钩子, 整数型, "", "CallWindowProcA", 公开, 
    .参数 窗口程序程序指针, 子程序指针, , 
    .参数 窗口句柄, 整数型, , 
    .参数 消息, 整数型, , 
    .参数 参数1, 整数型, , 
    .参数 参数2, 整数型, , 

.DLL命令 窗口取外边框_, 逻辑型, "user32.dll", "GetWindowRect", 公开, user32.dll获得整个窗口的范围矩形，窗口的边框、标题栏、滚动条及菜单等都在这个矩形内
    .参数 句柄, 整数型, , Long，想获得范围矩形的那个窗口的句柄
    .参数 大小, 矩形坐标, 传址, RECT，屏幕坐标中随同窗口装载的矩形(左边,顶边,右边,底边)

.DLL命令 取窗口矩形_, 整数型, "user32", "GetWindowRect", 公开, 
    .参数 窗口句柄, 整数型, , 
    .参数 矩形区域, 矩形坐标, , 

.DLL命令 取系统菜单句柄_, 整数型, "user32", "GetSystemMenu", 公开, 取得指定窗口的系统菜单的句柄。在vb环境，“系统菜单”的正式名称为“控制菜单”，即单击窗口左上角的控制框时出现的菜单  如执行成功，返回系统菜单的句柄；零意味着出错。如bRevert设为TRUE，也会返回零（简单的恢复原始的系统菜单）
    .参数 窗口句柄, 整数型, , 窗口的句柄
    .参数 回复, 整数型, , 如设为TRUE(非0)，表示接收原始的系统菜单;

.DLL命令 添加菜单项_, 整数型, "user32.dll", "AppendMenuA", 公开, 非零表示成功，零表示失败
    .参数 菜单句柄, 整数型, , hMenu,菜单句柄
    .参数 菜单常数标志, 整数型, , wFlags,参见相关帮助
    .参数 新菜单条目ID, 整数型, , wIDNewItem,指定菜单条目的新命令ID
    .参数 标志值, 文本型, , lpNewItem,参见相关帮助

.DLL命令 执行窗口程序_, 整数型, "", "CallWindowProcA", 公开, 
    .参数 窗口程序程序指针, 子程序指针, , 
    .参数 窗口句柄, 整数型, , 
    .参数 消息, 整数型, , 
    .参数 参数1, 整数型, , 
    .参数 参数2, 整数型, , 

.窗口程序集 启动窗口程序集, , ,  李翰聪 制作

.子程序 _绘画时钟_周期事件, 空白型, , 
.局部变量 矩形左边, 整数型, , , 
.局部变量 矩形顶边, 整数型, , , 
.局部变量 矩形右边, 整数型, , , 
.局部变量 矩形底边, 整数型, , , 
.局部变量 画出形状, 整数型, , , 


置随机数种子 () ' 设置不同的随机数系列
 '  --- 计算随机矩形的位置及尺寸
赋值 (矩形左边, 取随机数 (0, .画板宽度))
赋值 (矩形顶边, 取随机数 (0, .画板高度))
赋值 (矩形右边, 取随机数 (0, .画板宽度))
赋值 (矩形底边, 取随机数 (0, .画板高度))
 '  --- 设置不同的绘画风格及颜色
赋值 (.画笔类型, 取随机数 (0, 6))
赋值 (.画笔粗细, 取随机数 (1, 20))
赋值 (.画笔颜色, 取颜色值 (取随机数 (0, 255), 取随机数 (0, 255), 取随机数 (0, 255)))
赋值 (.刷子类型, 取随机数 (0, 55))
赋值 (.刷子颜色, 取颜色值 (取随机数 (0, 255), 取随机数 (0, 255), 取随机数 (0, 255)))
 '  --- 开始绘画
赋值 (画出形状, 取随机数 (1, 4))
.判断开始 (等于 (画出形状, 1))
    矩形左边.画椭圆 (矩形顶边, 矩形右边, 矩形底边)
.判断 (等于 (画出形状, 2))
    矩形左边.画矩形 (矩形顶边, 矩形右边, 矩形底边)
.默认
    矩形左边.画圆角矩形 (矩形顶边, 矩形右边, 矩形底边, 取随机数 (5, 20), )
.判断结束
.判断开始 (等于 (画出形状, 3))
    取随机数 (0, .画板宽度).画直线 (取随机数 (0, .画板高度), 取随机数 (0, .画板宽度), 取随机数 (0, .画板高度))
.默认
    
.判断结束



.子程序 _开始_被选择, 空白型, , 
.如果 (等于 (是否画图, 真))
    赋值 (.时钟周期, 100)
.否则
    赋值 (.时钟周期, 100)
.如果结束



.子程序 _停止_被选择, 空白型, , 
赋值 (.时钟周期, 0)
赋值 (.时钟周期, 0)

.子程序 _画板1_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

弹出菜单 ()

.子程序 _结束_被选择, 空白型, , 
销毁 ()


.子程序 __启动窗口_尺寸被改变, 空白型, , 
赋值 (.高度, _启动窗口.)
赋值 (.宽度, _启动窗口.)

.子程序 __启动窗口_首次激活, 空白型, , 
赋值 (_启动窗口., 0)
赋值 (_启动窗口., 0)
赋值 (_启动窗口., 取屏幕高度 ())
赋值 (_启动窗口., 取屏幕宽度 ())

.子程序 _关于_被选择, 空白型, , 
.局部变量 字体, 字体, , , 
.局部变量 是否, 逻辑型, , , 

.如果 (等于 (.时钟周期, 100))
    赋值 (是否, 真)
.否则
    赋值 (是否, 假)
.如果结束

赋值 (字体.加粗, 真)
赋值 (字体.字体大小, 72)

赋值 (.字体, 字体)
“  制作：  梦中的挂恋”.写出 ()

赋值 (.时钟周期, 0)
赋值 (.时钟周期, 0)

赋值 (.禁止, 真)

处理事件 ()

超级延迟_ (3000)

.如果 (等于 (是否, 真))
    赋值 (.时钟周期, 100)
.否则
    赋值 (.时钟周期, 100)
.如果结束

.清除 ()

赋值 (.禁止, 假)

.子程序 _全屏显示_被选择, 空白型, , 

.如果 (等于 (.选中, 假))
    赋值 (_启动窗口., 0)
    赋值 (_启动窗口., 0)
    赋值 (_启动窗口., 取屏幕高度 ())
    赋值 (_启动窗口., 取屏幕宽度 ())
    赋值 (_启动窗口., 0)
    
.否则
    赋值 (_启动窗口., 800)
    赋值 (_启动窗口., 500)
    赋值 (_启动窗口., 1)
.如果结束

赋值 (.选中, 取反 (.选中))

.子程序 _画线_被选择, 空白型, , 
赋值 (.时钟周期, 100)
赋值 (.时钟周期, 0)
赋值 (是否画图, 假)
.清除 ()

.子程序 _画线时钟_周期事件, 空白型, , 
.局部变量 矩形左边, 整数型, , , 
.局部变量 矩形顶边, 整数型, , , 
.局部变量 矩形右边, 整数型, , , 
.局部变量 矩形底边, 整数型, , , 

置随机数种子 ()

赋值 (矩形左边, 取随机数 (0, .画板宽度))
赋值 (矩形顶边, 取随机数 (0, .画板高度))
赋值 (矩形右边, 取随机数 (0, .画板宽度))
赋值 (矩形底边, 取随机数 (0, .画板高度))

赋值 (.画笔类型, 取随机数 (0, 6))
赋值 (.画笔粗细, 取随机数 (1, 20))
赋值 (.画笔颜色, 取颜色值 (取随机数 (0, 255), 取随机数 (0, 255), 取随机数 (0, 255)))
赋值 (.刷子类型, 取随机数 (0, 55))
赋值 (.刷子颜色, 取颜色值 (取随机数 (0, 255), 取随机数 (0, 255), 取随机数 (0, 255)))

取随机数 (0, .画板宽度).画直线 (取随机数 (0, .画板高度), 取随机数 (0, .画板宽度), 取随机数 (0, .画板高度))


.子程序 _画图形_被选择, 空白型, , 
赋值 (.时钟周期, 0)
赋值 (.时钟周期, 100)
赋值 (是否画图, 真)
.清除 ()

.子程序 __启动窗口_创建完毕, 空白型, , 
赋值 (.时钟周期, 0)
信息框 (“点击右键弹出菜单”, 0, )
赋值 (.时钟周期, 100)
显示鼠标_ (0)



.类模块 驱动操作类, , , 

.子程序 加载驱动, 整数型, , 成功返回驱动句柄,失败返回-1
.参数 驱动路径, 文本型, , sys驱动程序完整路径
.参数 服务名, 文本型, , 表示服务名称的字符串,名称中不允许使用"/"或"\"字符
.参数 显示名, 文本型, , 表示服务名称的字符串,这个名称是供用户界面程序识别函数时使用的
.参数 驱动名, 文本型, , 欲创建的驱动名,文本"\\.\"加上驱动名



.子程序 卸载驱动, 逻辑型, , 卸载驱动并删除服务,成功返回真,失败返回假
.参数 服务名, 文本型, , 表示服务名称的字符串,名称中不允许使用"/"或"\"字符
.参数 是否删除服务, 逻辑型, 可空, 为真表示删除服务



.子程序 与驱动程序通信, 整数型, , 操作驱动程序,成功返回1
.参数 驱动句柄, 整数型, , 加载驱动返回的句柄
.参数 驱动控制码, 整数型, , 与驱动程序通信的控制码,十进制
.参数 输入指针, 整数型, , 欲输入数据的指针,无用请写将此参数设置为0
.参数 输入指针长度, 整数型, , 无用请写将此参数设置为0
.参数 输出指针, 整数型, , 欲输出数据的指针,无用请写将此参数设置为0
.参数 输出指针长度, 整数型, , 无用请写将此参数设置为0



.类模块 MP3信息读取类, , , 

.子程序 取MP3歌曲信息, 逻辑型, , 取MP3文件信息(成功返回真，失败假)
.参数 文件号, 整数型, , 由[打开文件 ()]返回 提示：应及时在调用后【关闭文件 ()】以关闭文件句柄，这样才能支持别的程序读写文件(下同)
.参数 MP3数据, MP3标签, , 取得其信息的变量



.子程序 读MP3标签V1, 逻辑型, , 读取ID3v1标签(成功返回真，失败假)
.参数 文件号, 整数型, , 由[打开文件 ()]返回
.参数 mp3标签数据, MP3标签, 参考, 接收mp3标签数据



.子程序 是否有V1标签, 逻辑型, , 
.参数 文件号, 整数型, , 



.子程序 读MP3标签V2, 逻辑型, , 读MP3标签V2 信息(成功返回真，失败假)
.参数 文件号, 整数型, , 由[打开文件 ()]返回
.参数 mp3标签数据, MP3标签, 参考, 



.子程序 是否有V2标签, 逻辑型, , 判断是否有ID3V2标签(成功返回真，失败假)
.参数 文件号, 整数型, , 由[打开文件 ()]返回



.类模块 禁止多次运行类, , , 禁止多次运行

.子程序 程序是否已运行, 逻辑型, , 真表示已经运行，假表示还未运行
.参数 标志文本, 文本型, , 可以是任何文本，但是最好要长一点以保证和系统中已有其他事件对象的名称不相冲突。



.子程序 关闭事件同步对象, 空白型, , 窗口销毁时务必调用


.子程序 创建内存映射, 逻辑型, , 成功返回真失败假
.参数 标志文本, 文本型, , 可以是任何文本，但是最好要长一点以保证和系统中已有其他事件对象的名称不相冲突。



.类模块 高精度运算类, , , 本类满足高精度的计算需要

.子程序 求平方, 文本型, , 
.参数 运算值, 文本型, , 可以是任何长度和精度的合法数字格式文本



.子程序 求立方, 文本型, , 
.参数 运算值, 文本型, , 可以是任何长度和精度的合法数字格式文本



.子程序 求n次方, 文本型, , 
.参数 运算值, 文本型, , 可以是任何长度和精度的合法数字格式文本
.参数 运算次数, 整数型, , n为正整数



.类模块 热键类, , , 提供注册多个热键的支持

.子程序 注册, 整数型, , 注册一个全局热键，如使成功注册多个热键，务必注册功能键(成功返回热键ID,失败返回0)
.参数 窗口句柄, 整数型, , 通常为    取窗口句柄()
.参数 功能键, 整数型, 可空, 1 Alt  2 Ctrl  4 Shitf  8 Win 若要两个或以上的状态键按则把它们的值相加，如使成功注册多个热键，务必注册功能键(不要请留空).
.参数 键代码, 整数型, , 易语言键常量
.参数 子程序指针, 子程序指针, , 响应热键事件的子程序指针,四个参数(窗口句柄,消息786,热键ID,参数)



.子程序 撤销, 整数型, , 撤销指定热键 (成功返回非0,失败返回0)
.参数 窗口句柄, 整数型, , 
.参数 HotKeyID, 整数型, , 



.子程序 卸载, 空白型, , 撤销所有热键并卸载,该命令会在本类销毁时自动被调用


.类模块 超级列表框背景图片设置类, , , 本类可以设置超级列表框背景图片(暂时只支持一个超级列表框)

.子程序 设置背景, 空白型, , 为超级列表框指定地址的图片
.参数 超级列表框, 超级列表框, , 要添加背景的超级列表框
.参数 图片, 文本型, 可空, 要添加的背景图片，为空时清除背景
.参数 平铺, 逻辑型, 可空, 是否平铺，为空则为真



.子程序 清除背景, 空白型, , 清除超级列表框的背景
.参数 超级列表框, 超级列表框, , 



.子程序 设置背景2, 空白型, , 直接用图片字节集添加超级列表框的背景
.参数 超级列表框, 超级列表框, , 要添加背景的超级列表框
.参数 图片, 字节集, 可空, 要添加的背景图片，为空时清除背景，方便调用字节集图片
.参数 平铺, 逻辑型, 可空, 是否平铺，为空则为真



.程序集 __HIDDEN_TEMP_MOD__, , , 

.子程序 取CPU使用率, 整数型, , 取得当前CPU使用率百分比,比支持库的来得快.（失败返回-1）


.子程序 提取文件图标, 文本型, , 提取文件图标，并将其显示在窗口的某个组件上
.参数 文件名, 文本型, , 含路径的要提取图标的文件名,支持exe；dll
.参数 横坐标, 整数型, , 想描绘图标的位置（逻辑坐标）
.参数 纵坐标, 整数型, , 同上
.参数 图标索引, 整数型, , 图标索引从0开始
.参数 设备场景句柄, 整数型, , 设备场景句柄,如窗口或组件(用本模块的【取设备场景句柄_()】命令取得)



.子程序 窗口嵌入桌面, 空白型, , 将指定窗口嵌入桌面
.参数 窗口句柄, 整数型, , 要嵌入桌面的那个窗口句柄



.子程序 任务管理器禁用, 逻辑型, , 用镜像劫持的方法禁用Windows任务管理器,建议用后用命令“任务管理器启用 ()”恢复(成功返回真，失败返回假)


.子程序 任务管理器启用, 逻辑型, , 取消对Windows任务管理器的禁用(成功返回真，失败返回假)


.子程序 系统关于对话框, 空白型, , Windows系统关于对话框
.参数 标题, 文本型, , 标题
.参数 其它信息, 文本型, 可空, 其它信息



.子程序 打开进程, 整数型, , 将句柄返回给过程对象(失败返回 0)
.参数 PID, 整数型, , 进程标识符



.子程序 取任务栏信息, 整数型, , 取得系统任务栏的信息(失败返回 0)
.参数 系统状态栏信息, 系统状态栏信息_, , 



.子程序 Unicode转Ansi, 文本型, , 返回Ansi
.参数 Unicode, 字节集, , 



.子程序 Ansi转Unicode, 字节集, , 返回Unicode
.参数 Ansi, 文本型, , 



.子程序 文件关联, 逻辑型, , 成功返回真，失败假 (任意参数为空则取消文件关联)
.参数 关联应用程序, 文本型, 可空, 当双击对应的文件时就运行该应用程序打开
.参数 关联文件类型, 文本型, 可空, 欲关联的文件类型，如“ABC”
.参数 关联文件图标, 文本型, 可空, ICQ文件路径或EXE文件路径，注销后才有效



.子程序 去文件名后缀, 文本型, , 去文件名后缀 返回取出的文件名
.参数 文件名, 文本型, , 带有标准后缀的文件名



.子程序 关机对话框, 整数型, , 显示关机对话框


.子程序 置进程优先级, 逻辑型, , 设置进程的优先级(失败返回 假)
.参数 PID, 整数型, , 进程标识符(0则代表“本进程”)
.参数 优先级, 整数型, , 请用这些常量：#标准 #低 #高 #实时



.子程序 取用户名, 文本型, , 取正在使用的用户名


.子程序 切换用户, 空白型, , 切换用户


.子程序 文件属性对话框, 整数型, , 打开文件属性对话框
.参数 文件名, 文本型, , 含路径



.子程序 分配ADs内存, 文本型, , 返回分配的内存地址
.参数 原始数据地址, 文本型, , 



.子程序 鼠标左右键交换, 整数型, , 返回非零表示鼠标按钮的功能在调用这个子程序之前已经互换；否则返回零
.参数 是否执行, 逻辑型, , 真则互换两个鼠标按钮的功能。假则恢复正常状态



.子程序 取根窗口, 整数型, , 取窗口爷爷的爷爷的窗口句柄
.参数 窗口句柄, 整数型, , 



.子程序 取窗口标题, 文本型, , 返回一个窗体的标题文字，或者一个控件的内容
.参数 窗口句柄, 整数型, , 要取的窗口句柄



.子程序 取当前目录, 文本型, , 取程序运行时的路径，在调试时为e源码的路径


.子程序 创建目录1, 逻辑型, , 创建一个目录(失败返回 假)
.参数 路径, 文本型, , 



.子程序 任意进制转换, 文本型, , 将任意的一个正整数进行2-36进制之间的转换(成功返回转换结果，失败返回错误信息)
.参数 被转换文本, 文本型, , 要转换进制的整数
.参数 被转换进制, 整数型, , 转换前的进制
.参数 转换的进制, 整数型, , 转换后的进制



.子程序 是否为管理员, 整数型, , 判断当前用户是否为计算机管理员（是管理员返回非 0）


.子程序 播放声音文件, 整数型, , 播放声音文件(*.wav)
.参数 文件名, 文本型, , 全路径文件名（wav文件）



.子程序 启动线程, 整数型, , 启动一个新的线程来执行子程序(因此可以同时执行多个子程序)
.参数 子程序指针, 子程序指针, , 语法为：&+子程序名



.子程序 创建多重目录, 整数型, , 返回值: 1：创建失败 2：目录已经存在 0：创建成功
.参数 目录完整路径, 文本型, , 



.子程序 十六进制文本到整数, 整数型, , 长度不得大于八位，也不得有非法字符，否则返回-1
.参数 欲转换十六进制文本, 文本型, , 十六进制文本



.子程序 进程权限提升, 逻辑型, , 提升进程权限默认调试级别
.参数 目标进程, 整数型, 可空, 目标进程句柄，为空提升则“本”进程



.子程序 文本自动换行, 文本型, , 把一段长文本按指定方式分行(在打印编辑框中的内容时,经常遇到文本太长太大,打印显示不全的情况)
.参数 要处理的文本, 文本型, , 
.参数 每行字数, 整数型, 可空, 半角字数，如果为空，将不进行分行操作，直接返回文本内容。
.参数 是否强行分行, 逻辑型, 可空, 为真则强行按设定长度分行。为假则保留连续半角数字或字母为一行。默认为假。
.参数 是否全角, 逻辑型, 可空, 是否将半角转换为全角,如果为空即不转换
.参数 首空字节数, 整数型, 可空, 在每行前面加入空格,如果为空,为0,即不加空格



.子程序 进程暂停, 空白型, , 进程暂停
.参数 PID, 整数型, , 
.参数 是否暂停, 逻辑型, , 是暂停，否恢复已经暂停的进程



.子程序 求精确平方根, 未知类型0x2000A, , 求得高精度要求的平方根(如果计算要求高，可能会很长时间无法响应)
.参数 欲求的数, 未知类型0x2000A, , 支持无限长度和精度的大数
.参数 欲求的精度, 整数型, 可空, 精确到小数点后几位,默认为保留整数（精度的高要求代表对资源的高要求）



.子程序 窗口名取句柄, 整数型, , 寻找窗口列表中第一个符合指定条件的顶级窗口(没有返回 0)
.参数 窗口标题, 文本型, , 



.子程序 窗口销毁, 逻辑型, , 销毁窗口
.参数 窗口句柄, 整数型, , 



.子程序 进程名取PID, 整数型, , 失败或没有返回0，不区分大小写，若有多个相同进程名的进程则会返回其中一个的PID
.参数 进程名, 文本型, , 



.子程序 删除自身, 空白型, , 结束程序并自杀(把程序自己删除 编译后使用)


.子程序 取api函数地址, 整数型, , 
.参数 dll文件名, 文本型, , 
.参数 dll命令名, 文本型, , 



.子程序 写屏幕, 逻辑型, , 写指定内容到屏幕 （成功返回真 失败假）
.参数 窗口句柄, 整数型, , 
.参数 始位置x, 整数型, , 
.参数 始位置y, 整数型, , 
.参数 内容, 文本型, , 
.参数 字体名称, 文本型, 可空, 
.参数 字体大小, 整数型, 可空, 
.参数 颜色, 整数型, 可空, 
.参数 加粗, 逻辑型, 可空, 
.参数 倾斜, 逻辑型, 可空, 
.参数 下划线, 逻辑型, 可空, 



.子程序 窗口透过鼠标, 逻辑型, , 窗口透过鼠标点击，不要在某窗口创建完毕的子程序下用！（成功返回真 失败假）
.参数 窗口句柄, 整数型, , 目标窗口句柄
.参数 是否透过, 逻辑型, 可空, 默认真



.子程序 进程是否存在, 逻辑型, , 判断指定进程是否存在(此判断与进程其它信息无关联,不区分大小写)(存在返回真,不存在或失败返回假)
.参数 进程名, 文本型, , 欲检测的进程名



.子程序 窗口关闭按钮禁止, 逻辑型, , 控制窗口关闭按钮,(允许/禁止)关闭窗口 (成功返回真,失败返回假)
.参数 窗口句柄, 整数型, , 欲禁止或解除禁止的窗口句柄
.参数 禁止关闭, 逻辑型, 可空, 可空为禁止关闭, 假:允许关闭, 真:禁止关闭



.子程序 窗口透明_去色, 逻辑型, , 透明色部分将透明(成功返回真 失败假)
.参数 窗口句柄, 整数型, , 
.参数 透明色, 整数型, , 



.子程序 进程结束, 逻辑型, , 终止一个进程(成功返回真,失败返回假)
.参数 进程ID, 整数型, , 欲结束的进程ID



.子程序 结束自身进程, 逻辑型, , (失败假 成功不返回)


.子程序 屏幕刷新, 逻辑型, , 使整个屏幕刷新显示(成功返回真,失败返回假)


.子程序 取点颜色, 整数型, , 取屏幕中或窗口区域某点颜色值或颜色属性(失败返回-1)
.参数 窗口句柄, 整数型, 可空, 默认为屏幕
.参数 X, 整数型, , 
.参数 Y, 整数型, , 
.参数 类型, 整数型, 可空, 默认为0颜色值  1 #R色  2 #G色  3 #B色  6 #色彩度



.子程序 窗口状态控制, 逻辑型, , 控制窗口状态(成功返回真,失败返回假)
.参数 临时句柄, 整数型, , 窗口句柄
.参数 状态, 整数型, , 0 隐藏取消激活 1 还原激活 2 最小化激活 3 最大化激活 4 还原 6 最小化取消激活 7 最小化 9 还原激活




 ' 不属于任何一个程序集、类模块的函数：
