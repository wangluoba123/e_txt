 ' 文件类型：Windows模块源码

 ' 程序名称：表达式计算
 ' 程序描述：   表达式计算器可以直接输入计算表达式进行计算，直观方便，而且还支持函数计算、函数嵌套计算和省略乘号输入方式，功能强大，操作简单，尤其对于长表达式来说，可避免由输入失误而造成计算结果错误。目前函数支持三角函数的正弦、余弦、正切和余切及对数、自然对数和自然数计算，基本满足了工程的计算，今后将不断增加其他函数的计算；函数输入可直接点击函数按钮进行输入，在表达式中，函数必须带有括号，否则计算结果将产生错误；为方便输入，点击函数按钮时括号已经自动输入，你只将函数的表达式输入就可以了。三角函数分别为正弦：sin()、余弦：cos()、正切：tan()和余切ctg()。” ＋ #换行符 ＋ “    再使用过程中，你有什么好的建议和意见请你告诉我，谢谢！
 ' 程序作者：孙现峰
 ' 邮政编码：450000
 ' 联系地址：郑州市公路勘察设计院
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：zzsglkcsjy@yahoo.com.cn
 ' 主页地址：http:\\www.lanm.com.cn
 ' 版权声明：QQ:37869347
 ' 版本号：1.0
 ' 创建号：0.0





 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 4 系统核心支持库
 ' eCalc 306AA9E31B5940399723021A0D782077 1 0 数值计算支持库





.程序集 程序集1, , , 

.子程序 _启动子程序, 整数型, , 
返回 (1)

.子程序 四则运算, 文本型, , 不包含括号计算
.参数 表达式, 文本型, , 

.局部变量 计算式, 文本型, , , 
.局部变量 单文本, 文本型, , , 
.局部变量 加减数, 文本型, , "0", 
.局部变量 加减符, 文本型, , "0", 
.局部变量 循环, 整数型, , , 
.局部变量 内循环, 整数型, , , 
.局部变量 前数, 文本型, , , 
.局部变量 后数, 文本型, , , 
.局部变量 前留下计算式, 文本型, , , 
.局部变量 后留下计算式, 文本型, , , 
.局部变量 内结果, 文本型, , , 

赋值 (计算式, 表达式)
.如果真 (等于 (取文本左边 (计算式, 1), “-”))
    赋值 (计算式, 相加 (“0”, 计算式))
.如果真结束
.如果真 (等于 (取文本左边 (计算式, 1), “+”))
    赋值 (计算式, 相加 (“0”, 计算式))
.如果真结束

.判断循环首 (不等于 (寻找文本 (计算式, “^”, 1, 假), -1))
    .计次循环首 (取文本长度 (计算式), 循环)
        赋值 (单文本, 取文本中间 (计算式, 循环, 1))
        .如果真 (等于 (单文本, “^”))
            赋值 (前数, 取文本左边 (计算式, 相减 (循环, 1)))
            赋值 (后数, 取文本右边 (计算式, 相减 (取文本长度 (计算式), 循环)))
             ' 输出调试文本 (后数)
            .计次循环首 (相减 (循环, 1), 内循环)
                赋值 (单文本, 取文本中间 (前数, 相加 (相减 (循环, 1, 内循环), 1), 1))
                .如果真 (或者 (等于 (单文本, “+”), 等于 (单文本, “-”), 等于 (单文本, “*”), 等于 (单文本, “/”)))
                    赋值 (前留下计算式, 取文本左边 (前数, 相加 (相减 (循环, 1, 内循环), 1)))
                    赋值 (前数, 取文本右边 (前数, 相减 (内循环, 1)))
                     ' 输出调试文本 (前数)
                    跳出循环 ()
                .如果真结束
                
            .计次循环尾 ()
            .计次循环首 (取文本长度 (后数), 内循环)
                赋值 (单文本, 取文本中间 (后数, 内循环, 1))
                .如果真 (或者 (等于 (单文本, “+”), 等于 (单文本, “-”), 等于 (单文本, “*”), 等于 (单文本, “/”)))
                    赋值 (后留下计算式, 取文本右边 (后数, 相加 (相减 (取文本长度 (后数), 内循环), 1)))
                    
                    赋值 (后数, 取文本左边 (后数, 相减 (内循环, 1)))
                    跳出循环 ()
                .如果真结束
                
            .计次循环尾 ()
             ' 输出调试文本 (前数)
             ' 输出调试文本 (后数)
            赋值 (内结果, 到文本 (求次方 (到数值 (前数), 到数值 (后数))))
            赋值 (计算式, 相加 (前留下计算式, 内结果, 后留下计算式))
             ' 输出调试文本 (计算式)
            跳出循环 ()
        .如果真结束
         ' 1+sin(30*2^3)-56/(1+3)
    .计次循环尾 ()
    赋值 (后留下计算式, “”)
     ' 输出调试文本 (计算式)
.判断循环尾 ()
.判断循环首 (或者 (不等于 (寻找文本 (计算式, “+”, 1, 假), -1), 不等于 (寻找文本 (计算式, “-”, 1, 假), -1), 不等于 (寻找文本 (计算式, “*”, 1, 假), -1), 不等于 (寻找文本 (计算式, “/”, 1, 假), -1)))
    
    .如果真 (等于 (取文本左边 (计算式, 1), “-”))
        赋值 (计算式, 相加 (“0”, 计算式))
    .如果真结束
    .如果真 (等于 (取文本左边 (计算式, 1), “+”))
        赋值 (计算式, 相加 (“0”, 计算式))
    .如果真结束
    输出调试文本 (计算式)
    .计次循环首 (取文本长度 (计算式), 循环)
        赋值 (单文本, 取文本中间 (计算式, 循环, 1))
        .如果真 (或者 (等于 (单文本, “+”), 等于 (单文本, “-”)))
            加入成员 (加减数, 取文本左边 (计算式, 相减 (循环, 1)))
            加入成员 (加减符, 单文本)
            赋值 (计算式, 取文本右边 (计算式, 相减 (取文本长度 (计算式), 循环)))
            跳出循环 ()
        .如果真结束
        .如果真 (等于 (单文本, “*”))
            赋值 (前数, 取文本左边 (计算式, 相减 (循环, 1)))
            
            赋值 (后数, 取文本右边 (计算式, 相减 (取文本长度 (计算式), 循环)))
            .计次循环首 (相减 (取文本长度 (计算式), 循环), 内循环)
                赋值 (单文本, 取文本中间 (后数, 内循环, 1))
                .如果真 (或者 (等于 (单文本, “+”), 等于 (单文本, “-”), 等于 (单文本, “*”), 等于 (单文本, “/”)))
                    赋值 (后留下计算式, 取文本右边 (后数, 相加 (相减 (取文本长度 (后数), 内循环), 1)))
                    
                    赋值 (后数, 取文本左边 (后数, 相减 (内循环, 1)))
                    跳出循环 ()
                .如果真结束
                
            .计次循环尾 ()
            赋值 (内结果, 到文本 (相乘 (到数值 (前数), 到数值 (后数))))
            赋值 (计算式, 相加 (内结果, 后留下计算式))
            
            跳出循环 ()
        .如果真结束
        .如果真 (等于 (单文本, “/”))
            赋值 (前数, 取文本左边 (计算式, 相减 (循环, 1)))
            赋值 (后数, 取文本右边 (计算式, 相减 (取文本长度 (计算式), 循环)))
            .计次循环首 (相减 (取文本长度 (计算式), 循环), 内循环)
                赋值 (单文本, 取文本中间 (后数, 内循环, 1))
                .如果真 (或者 (等于 (单文本, “+”), 等于 (单文本, “-”), 等于 (单文本, “*”), 等于 (单文本, “/”)))
                    赋值 (后留下计算式, 取文本右边 (后数, 相加 (相减 (取文本长度 (后数), 内循环), 1)))
                    赋值 (后数, 取文本左边 (后数, 相减 (内循环, 1)))
                    
                    跳出循环 ()
                .如果真结束
                
            .计次循环尾 ()
            .如果真 (等于 (到数值 (后数), 0))
                信息框 (“计算式中有被除数为0的情况，计算不能继续，请检查数据！”, 相加 (0, 16), “错误！”)
                返回 (“”)
            .如果真结束
            赋值 (内结果, 到文本 (相除 (到数值 (前数), 到数值 (后数))))
            赋值 (计算式, 相加 (内结果, 后留下计算式))
            赋值 (后留下计算式, “”)
            跳出循环 ()
        .如果真结束
        
    .计次循环尾 ()
    赋值 (后留下计算式, “”)
.判断循环尾 ()
加入成员 (加减数, 计算式)
赋值 (内结果, 加减数 [1])
.计次循环首 (相减 (取数组成员数 (加减数), 1), 循环)
     ' 输出调试文本 (加减数 [循环])
    .如果真 (等于 (加减符 [循环], “+”))
        赋值 (内结果, 到文本 (相加 (到数值 (内结果), 到数值 (加减数 [相加 (循环, 1)]))))
    .如果真结束
    .如果真 (等于 (加减符 [循环], “-”))
        赋值 (内结果, 到文本 (相减 (到数值 (内结果), 到数值 (加减数 [相加 (循环, 1)]))))
    .如果真结束
    
.计次循环尾 ()
返回 (内结果)

.子程序 括号运算, 文本型, , 
.参数 表达式, 文本型, , 

.局部变量 计算式, 文本型, , , 
.局部变量 左括号位置, 整数型, , , 
.局部变量 右括号位置, 整数型, , , 
.局部变量 单文本, 文本型, , , 
.局部变量 循环, 整数型, , , 
.局部变量 左计算式, 文本型, , , 
.局部变量 右计算式, 文本型, , , 
.局部变量 中间计算式, 文本型, , , 
.局部变量 中间结果, 文本型, , , 

赋值 (计算式, 表达式)
赋值 (左括号位置, 寻找文本 (计算式, “(”, , 假))
.判断循环首 (不等于 (左括号位置, -1))
    .计次循环首 (取文本长度 (计算式), 循环)
        赋值 (单文本, 取文本中间 (计算式, 循环, 1))
        .如果真 (等于 (单文本, “(”))
            赋值 (左括号位置, 循环)
        .如果真结束
        .如果真 (等于 (单文本, “)”))
            赋值 (右括号位置, 循环)
            跳出循环 ()
        .如果真结束
        
    .计次循环尾 ()
    赋值 (右括号位置, 寻找文本 (计算式, “)”, , 假))
    赋值 (左计算式, 取文本左边 (计算式, 相减 (左括号位置, 1)))
    赋值 (右计算式, 取文本右边 (计算式, 相减 (取文本长度 (计算式), 右括号位置)))
    赋值 (中间计算式, 取文本中间 (计算式, 相加 (左括号位置, 1), 相减 (右括号位置, 左括号位置, 1)))
    赋值 (中间结果, 四则运算 (中间计算式))
    .如果真 (等于 (中间结果, “”))
        返回 (“”)
    .如果真结束
    赋值 (计算式, 相加 (左计算式, 中间结果, 右计算式))
     ' 输出调试文本 (计算式)
    赋值 (左括号位置, 倒找文本 (计算式, “(”, , 假))
.判断循环尾 ()
返回 (四则运算 (计算式))


.子程序 函数运算, 文本型, 公开, 
.参数 表达式, 文本型, , 

.局部变量 计算式, 文本型, , , 
.局部变量 左括号数, 整数型, , , 
.局部变量 右括号数, 整数型, , , 
.局部变量 循环, 整数型, , , 
.局部变量 单文本, 文本型, , , 
.局部变量 函数位置, 整数型, , , 
.局部变量 前计算式, 文本型, , , 
.局部变量 后计算式, 文本型, , , 
.局部变量 中间计算式, 文本型, , , 
.局部变量 内结果, 文本型, , , 
.局部变量 三角大数, 未知类型0x2000A, , , 
.局部变量 代码1, 整数型, , , 
.局部变量 代码2, 整数型, , , 

赋值 (计算式, 表达式)
赋值 (左括号数, 0)
赋值 (右括号数, 0)
赋值 (计算式, 删全部空 (到半角 (到小写 (计算式))))
.计次循环首 (取文本长度 (计算式), 循环)
    赋值 (单文本, 取文本中间 (计算式, 循环, 1))
    .如果真 (等于 (单文本, “(”))
        赋值 (左括号数, 相加 (左括号数, 1))
    .如果真结束
    .如果真 (等于 (单文本, “)”))
        赋值 (右括号数, 相加 (右括号数, 1))
    .如果真结束
    
.计次循环尾 ()
.如果真 (大于 (左括号数, 右括号数))
    信息框 (相加 (“括号不匹配，缺少”, #左引号, “)”, #右引号, “！”), 相加 (0, 48), “错误”)
    返回 (“”)
    
.如果真结束
.如果真 (小于 (左括号数, 右括号数))
    信息框 (相加 (“括号不匹配，缺少”, #左引号, “(”, #右引号, “！”), 相加 (0, 48), “错误”)
    返回 (“”)
.如果真结束
赋值 (循环, 0)
.判断循环首 (小于或等于 (循环, 取文本长度 (计算式)))
    赋值 (循环, 相加 (循环, 1))
    赋值 (单文本, 取文本中间 (计算式, 循环, 1))
     ' 输出调试文本 (单文本)
    赋值 (代码1, 取代码 (单文本, ))
    
    .如果真 (并且 (大于或等于 (代码1, 48), 小于或等于 (代码1, 57)))
        赋值 (后计算式, 取文本中间 (计算式, 相加 (循环, 1), 1))
        赋值 (代码2, 取代码 (后计算式, ))
         ' 输出调试文本 (到文本 (代码2))
        .如果真 (并且 (或者 (小于 (代码2, 48), 大于 (代码2, 57)), 不等于 (后计算式, “)”), 不等于 (后计算式, “.”), 不等于 (后计算式, “+”), 不等于 (后计算式, “-”), 不等于 (后计算式, “*”), 不等于 (后计算式, “/”), 不等于 (后计算式, “^”), 不等于 (后计算式, “”)))
            赋值 (计算式, 相加 (取文本左边 (计算式, 循环), “*”, 取文本右边 (计算式, 相减 (取文本长度 (计算式), 循环))))
             ' 循环 ＝ 循环 ＋ 1
            
             ' 返回 (“”)
        .如果真结束
        
    .如果真结束
    .如果真 (等于 (单文本, “)”))
        赋值 (后计算式, 取文本中间 (计算式, 相加 (循环, 1), 1))
        .如果真 (并且 (不等于 (后计算式, “)”), 不等于 (后计算式, “.”), 不等于 (后计算式, “+”), 不等于 (后计算式, “-”), 不等于 (后计算式, “*”), 不等于 (后计算式, “/”), 不等于 (后计算式, “^”), 不等于 (后计算式, “”)))
            赋值 (计算式, 相加 (取文本左边 (计算式, 循环), “*”, 取文本右边 (计算式, 相减 (取文本长度 (计算式), 循环))))
            输出调试文本 (计算式)
        .如果真结束
        
    .如果真结束
    
.判断循环尾 ()

 ' 求正弦值
赋值 (函数位置, 寻找文本 (计算式, “sin(”, , 假))
.判断循环首 (不等于 (函数位置, -1))
    赋值 (前计算式, 取文本左边 (计算式, 相减 (函数位置, 1)))
    赋值 (后计算式, 取文本右边 (计算式, 相减 (取文本长度 (计算式), 函数位置, 3)))
    赋值 (左括号数, 0)
    赋值 (右括号数, 0)
    .计次循环首 (取文本长度 (后计算式), 循环)
        赋值 (单文本, 取文本中间 (后计算式, 循环, 1))
        .如果真 (等于 (单文本, “(”))
            赋值 (左括号数, 相加 (左括号数, 1))
        .如果真结束
        .如果真 (等于 (单文本, “)”))
            赋值 (右括号数, 相加 (右括号数, 1))
        .如果真结束
        .如果真 (小于 (左括号数, 右括号数))
            跳出循环 ()
        .如果真结束
        
    .计次循环尾 ()
    赋值 (后计算式, 取文本右边 (后计算式, 相减 (取文本长度 (后计算式), 循环)))
    赋值 (中间计算式, 取文本中间 (计算式, 相加 (函数位置, 4), 相减 (循环, 1)))
    赋值 (内结果, 函数运算 (中间计算式))
     ' 三角大数.导入文本 (内结果)
     ' 三角大数.求正弦 (15)
     ' 内结果 ＝ 三角大数.导出文本 ()
     ' 计算式 ＝ 前计算式 ＋ 内结果 ＋ 后计算式
     ' 输出调试文本 (内结果)
    赋值 (计算式, 相加 (前计算式, 到文本 (求正弦 (相除 (相乘 (到数值 (内结果), 3.14159265359), 180))), 后计算式))
     ' 输出调试文本 (到文本 (求正弦 (到数值 (内结果) × #pi ÷ 180)))
    赋值 (函数位置, 寻找文本 (计算式, “sin(”, , 假))
.判断循环尾 ()
 ' 求余弦值
赋值 (函数位置, 寻找文本 (计算式, “cos(”, , 假))
.判断循环首 (不等于 (函数位置, -1))
    赋值 (前计算式, 取文本左边 (计算式, 相减 (函数位置, 1)))
    赋值 (后计算式, 取文本右边 (计算式, 相减 (取文本长度 (计算式), 函数位置, 3)))
    赋值 (左括号数, 0)
    赋值 (右括号数, 0)
    .计次循环首 (取文本长度 (后计算式), 循环)
        赋值 (单文本, 取文本中间 (后计算式, 循环, 1))
        .如果真 (等于 (单文本, “(”))
            赋值 (左括号数, 相加 (左括号数, 1))
        .如果真结束
        .如果真 (等于 (单文本, “)”))
            赋值 (右括号数, 相加 (右括号数, 1))
        .如果真结束
        .如果真 (小于 (左括号数, 右括号数))
            跳出循环 ()
        .如果真结束
        
    .计次循环尾 ()
    赋值 (后计算式, 取文本右边 (后计算式, 相减 (取文本长度 (后计算式), 循环)))
    赋值 (中间计算式, 取文本中间 (计算式, 相加 (函数位置, 4), 相减 (循环, 1)))
    赋值 (内结果, 函数运算 (中间计算式))
    赋值 (计算式, 相加 (前计算式, 到文本 (求余弦 (相除 (相乘 (到数值 (内结果), 3.14159265359), 180))), 后计算式))
    赋值 (函数位置, 寻找文本 (计算式, “cos(”, , 假))
.判断循环尾 ()
 ' 求正切值
赋值 (函数位置, 寻找文本 (计算式, “tan(”, , 假))
.判断循环首 (不等于 (函数位置, -1))
    赋值 (前计算式, 取文本左边 (计算式, 相减 (函数位置, 1)))
    赋值 (后计算式, 取文本右边 (计算式, 相减 (取文本长度 (计算式), 函数位置, 3)))
    赋值 (左括号数, 0)
    赋值 (右括号数, 0)
    .计次循环首 (取文本长度 (后计算式), 循环)
        赋值 (单文本, 取文本中间 (后计算式, 循环, 1))
        .如果真 (等于 (单文本, “(”))
            赋值 (左括号数, 相加 (左括号数, 1))
        .如果真结束
        .如果真 (等于 (单文本, “)”))
            赋值 (右括号数, 相加 (右括号数, 1))
        .如果真结束
        .如果真 (小于 (左括号数, 右括号数))
            跳出循环 ()
        .如果真结束
        
    .计次循环尾 ()
    赋值 (后计算式, 取文本右边 (后计算式, 相减 (取文本长度 (后计算式), 循环)))
    赋值 (中间计算式, 取文本中间 (计算式, 相加 (函数位置, 4), 相减 (循环, 1)))
    赋值 (内结果, 函数运算 (中间计算式))
    .如果真 (等于 (内结果, 到文本 (90)))
        信息框 (“正切函数中值为90度，计算失败！”, 相加 (0, 48), “警告”)
        返回 (“”)
    .如果真结束
    .如果真 (等于 (内结果, “”))
        返回 (“”)
    .如果真结束
    赋值 (计算式, 相加 (前计算式, 到文本 (求正切 (相除 (相乘 (到数值 (内结果), 3.14159265359), 180))), 后计算式))
    赋值 (函数位置, 寻找文本 (计算式, “tan(”, , 假))
.判断循环尾 ()
 ' 求余切值
赋值 (函数位置, 寻找文本 (计算式, “ctg(”, , 假))
.判断循环首 (不等于 (函数位置, -1))
    赋值 (前计算式, 取文本左边 (计算式, 相减 (函数位置, 1)))
    赋值 (后计算式, 取文本右边 (计算式, 相减 (取文本长度 (计算式), 函数位置, 3)))
    赋值 (左括号数, 0)
    赋值 (右括号数, 0)
    .计次循环首 (取文本长度 (后计算式), 循环)
        赋值 (单文本, 取文本中间 (后计算式, 循环, 1))
        .如果真 (等于 (单文本, “(”))
            赋值 (左括号数, 相加 (左括号数, 1))
        .如果真结束
        .如果真 (等于 (单文本, “)”))
            赋值 (右括号数, 相加 (右括号数, 1))
        .如果真结束
        .如果真 (小于 (左括号数, 右括号数))
            跳出循环 ()
        .如果真结束
        
    .计次循环尾 ()
    赋值 (后计算式, 取文本右边 (后计算式, 相减 (取文本长度 (后计算式), 循环)))
    赋值 (中间计算式, 取文本中间 (计算式, 相加 (函数位置, 4), 相减 (循环, 1)))
    赋值 (内结果, 函数运算 (中间计算式))
    .如果真 (等于 (内结果, 到文本 (0)))
        信息框 (“余切函数中值为0度，计算失败！”, 相加 (0, 48), “警告”)
        返回 (“”)
    .如果真结束
    .如果真 (等于 (内结果, “”))
        返回 (“”)
    .如果真结束
     ' 余切大数.导入文本 (内结果)
     ' 余切大数.求余切 (15)
    赋值 (内结果, 到文本 (求正切 (相除 (相乘 (到数值 (内结果), 3.14159265359), 180))))
    赋值 (内结果, 到文本 (相除 (1, 到数值 (内结果))))
    输出调试文本 (内结果)
    赋值 (计算式, 相加 (前计算式, 到文本 (内结果), 后计算式))
    赋值 (函数位置, 寻找文本 (计算式, “ctg(”, , 假))
.判断循环尾 ()
 ' 求log值
赋值 (函数位置, 寻找文本 (计算式, “log(”, , 假))
.判断循环首 (不等于 (函数位置, -1))
    赋值 (前计算式, 取文本左边 (计算式, 相减 (函数位置, 1)))
    赋值 (后计算式, 取文本右边 (计算式, 相减 (取文本长度 (计算式), 函数位置, 3)))
    赋值 (左括号数, 0)
    赋值 (右括号数, 0)
    .计次循环首 (取文本长度 (后计算式), 循环)
        赋值 (单文本, 取文本中间 (后计算式, 循环, 1))
        .如果真 (等于 (单文本, “(”))
            赋值 (左括号数, 相加 (左括号数, 1))
        .如果真结束
        .如果真 (等于 (单文本, “)”))
            赋值 (右括号数, 相加 (右括号数, 1))
        .如果真结束
        .如果真 (小于 (左括号数, 右括号数))
            跳出循环 ()
        .如果真结束
        
    .计次循环尾 ()
    赋值 (后计算式, 取文本右边 (后计算式, 相减 (取文本长度 (后计算式), 循环)))
    赋值 (中间计算式, 取文本中间 (计算式, 相加 (函数位置, 4), 相减 (循环, 1)))
    赋值 (内结果, 函数运算 (中间计算式))
    .如果真 (等于 (内结果, “”))
        返回 (“”)
    .如果真结束
    赋值 (计算式, 相加 (前计算式, 到文本 (相除 (求自然对数 (到数值 (内结果)), 求自然对数 (10))), 后计算式))
    赋值 (函数位置, 寻找文本 (计算式, “log(”, , 假))
.判断循环尾 ()
 ' 求ln值
赋值 (函数位置, 寻找文本 (计算式, “ln(”, , 假))
.判断循环首 (不等于 (函数位置, -1))
    赋值 (前计算式, 取文本左边 (计算式, 相减 (函数位置, 1)))
    赋值 (后计算式, 取文本右边 (计算式, 相减 (取文本长度 (计算式), 函数位置, 2)))
    赋值 (左括号数, 0)
    赋值 (右括号数, 0)
    .计次循环首 (取文本长度 (后计算式), 循环)
        赋值 (单文本, 取文本中间 (后计算式, 循环, 1))
        .如果真 (等于 (单文本, “(”))
            赋值 (左括号数, 相加 (左括号数, 1))
        .如果真结束
        .如果真 (等于 (单文本, “)”))
            赋值 (右括号数, 相加 (右括号数, 1))
        .如果真结束
        .如果真 (小于 (左括号数, 右括号数))
            跳出循环 ()
        .如果真结束
        
    .计次循环尾 ()
    赋值 (后计算式, 取文本右边 (后计算式, 相减 (取文本长度 (后计算式), 循环)))
    赋值 (中间计算式, 取文本中间 (计算式, 相加 (函数位置, 3), 相减 (循环, 1)))
    赋值 (内结果, 函数运算 (中间计算式))
    .如果真 (等于 (内结果, “”))
        返回 (“”)
    .如果真结束
    赋值 (计算式, 相加 (前计算式, 到文本 (求自然对数 (到数值 (内结果))), 后计算式))
    赋值 (函数位置, 寻找文本 (计算式, “ln(”, , 假))
.判断循环尾 ()
 ' 求ex值
赋值 (函数位置, 寻找文本 (计算式, “e(”, , 假))
.判断循环首 (不等于 (函数位置, -1))
    赋值 (前计算式, 取文本左边 (计算式, 相减 (函数位置, 1)))
    赋值 (后计算式, 取文本右边 (计算式, 相减 (取文本长度 (计算式), 函数位置, 1)))
    赋值 (左括号数, 0)
    赋值 (右括号数, 0)
    .计次循环首 (取文本长度 (后计算式), 循环)
        赋值 (单文本, 取文本中间 (后计算式, 循环, 1))
        .如果真 (等于 (单文本, “(”))
            赋值 (左括号数, 相加 (左括号数, 1))
        .如果真结束
        .如果真 (等于 (单文本, “)”))
            赋值 (右括号数, 相加 (右括号数, 1))
        .如果真结束
        .如果真 (小于 (左括号数, 右括号数))
            跳出循环 ()
        .如果真结束
        
    .计次循环尾 ()
    赋值 (后计算式, 取文本右边 (后计算式, 相减 (取文本长度 (后计算式), 循环)))
    赋值 (中间计算式, 取文本中间 (计算式, 相加 (函数位置, 2), 相减 (循环, 1)))
    赋值 (内结果, 函数运算 (中间计算式))
    .如果真 (等于 (内结果, “”))
        返回 (“”)
    .如果真结束
    赋值 (计算式, 相加 (前计算式, 到文本 (求反对数 (到数值 (内结果))), 后计算式))
    赋值 (函数位置, 寻找文本 (计算式, “e(”, , 假))
.判断循环尾 ()


返回 (括号运算 (计算式))


 ' 不属于任何一个程序集、类模块的函数：
