 ' 文件类型：Windows窗口程序

 ' 程序名称：系统资源检测模块
 ' 程序描述：检测CPU占用率、系统资源占用率、用户资源占用率、GDI资源占用率
 ' 程序作者：Mr X
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：kingofdemon@sohu.com
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0



.图片 RSRC32, " ' 已保存到：D:\易语言学习\Data\系统资源检测模块.e\RSRC32", , 
.图片 RSRC16, " ' 已保存到：D:\易语言学习\Data\系统资源检测模块.e\RSRC16", , 
.常量 SystemBasicInformation, "0", , 
.常量 SystemPerformanceInformation, "2", , 
.常量 SystemTimeInformation, "3", , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 3 3 系统核心支持库




数据类型 SYSTEM_PERFORMACE_INFORMATION, , 312
    .成员 liIdleTime, 长整数型, , , 
    .成员 dwSpare, 整数型, , "76", 

数据类型 SYSTEM_INFO, , 
    .成员 dwOemID, 整数型, , , 
    .成员 dwPageSize, 整数型, , , 
    .成员 lpMinimumApplicationAddress, 整数型, , , 
    .成员 lpMaximumApplicationAddress, 整数型, , , 
    .成员 dwActiveProcessorMask, 整数型, , , 
    .成员 dwNumberOrfProcessors, 整数型, , , 
    .成员 dwProcessorType, 整数型, , , 
    .成员 dwAllocationGranularity, 整数型, , , 
    .成员 wProcessorLevel, 短整数型, , , 
    .成员 wProcessorRevision, 短整数型, , , 

数据类型 SYSTEM_TIME_INFORMATION, , 32
    .成员 liKeBootTime, 长整数型, , , 
    .成员 liKeSystemTime, 长整数型, , , 
    .成员 liExpTimeZoneBias, 长整数型, , , 
    .成员 uCurrentTimeZoneId, 整数型, , , 
    .成员 dwReserved, 整数型, , , 

.全局变量 status, 整数型, , , 
.全局变量 SysPerfInfo, SYSTEM_PERFORMACE_INFORMATION, , , 
.全局变量 SysTimeInfo, SYSTEM_TIME_INFORMATION, , , 
.全局变量 dbIdleTime, 双精度小数型, , , 
.全局变量 dbSystemTime, 双精度小数型, , , 
.全局变量 liOldIdleTime, 双精度小数型, , , 
.全局变量 liOldSystemTime, 双精度小数型, , , 
.全局变量 CPUNum, 整数型, , , 
.全局变量 New, 逻辑型, , , 

.DLL命令 NtQuerySystemInformation1, 整数型, "ntdll.dll", "NtQuerySystemInformation", , 
    .参数 a, 整数型, , 
    .参数 b, SYSTEM_TIME_INFORMATION, , 
    .参数 c, 整数型, , 
    .参数 d, 整数型, , 

.DLL命令 NtQuerySystemInformation, 整数型, "ntdll.dll", "NtQuerySystemInformation", , 
    .参数 a, 整数型, , 
    .参数 b, SYSTEM_PERFORMACE_INFORMATION, , 
    .参数 c, 整数型, , 
    .参数 d, 整数型, , 

.DLL命令 GetSystemInfo, 整数型, "", "", , 
    .参数 lpSystemInfo, SYSTEM_INFO, , 

.DLL命令 GetFreeSystemResources, 整数型, "RSRC32.DLL", "_MyGetFreeSystemResources32@4", , 
    .参数 fuSysResource, 整数型, , 

.DLL命令 GetSystemDirectory, 整数型, "", "GetSystemDirectoryA", , 
    .参数 a, 文本型, , 
    .参数 b, 整数型, , 

.程序集 程序集1, , , 

.子程序 _启动子程序, 整数型, , 请在本子程序中放置易模块初始化代码
.局部变量 a, SYSTEM_INFO, , , 
.局部变量 T, 文本型, , , 
.局部变量 K, 文本型, , "2", 
.局部变量 n, 整数型, , , 

赋值 (New, 真)
GetSystemInfo (a)
赋值 (CPUNum, a.dwNumberOrfProcessors)
.判断开始 (等于 (取操作系统类别 (), 2))
    赋值 (T, 取空白文本 (260))
    GetSystemDirectory (T, 260)
    .如果真 (不等于 (取文本右边 (T, 1), “\”))
        赋值 (T, 相加 (T, “\”))
    .如果真结束
    赋值 (K [1], 相加 (T, “RSRC32.DLL”))
    赋值 (K [2], 相加 (T, “RSRC16.DLL”))
    .如果真 (或者 (等于 (文件是否存在 (K [1]), 假), 不等于 (取文件尺寸 (K [1]), 24576)))
        赋值 (n, 打开文件 (K [1], 4, ))
        写出字节集 (n, #RSRC32)
        关闭文件 (n)
    .如果真结束
    .如果真 (或者 (等于 (文件是否存在 (K [2]), 假), 不等于 (取文件尺寸 (K [2]), 1312)))
        赋值 (n, 打开文件 (K [2], 4, ))
        写出字节集 (n, #RSRC16)
        关闭文件 (n)
    .如果真结束
    
.判断 (等于 (取操作系统类别 (), 3))
    赋值 (status, NtQuerySystemInformation1 (#SystemTimeInformation, SysTimeInfo, 32, 0))
    .如果真 (不等于 (status, 0))
        赋值 (New, 假)
        返回 (0)
    .如果真结束
    赋值 (status, NtQuerySystemInformation (#SystemPerformanceInformation, SysPerfInfo, 312, 0))
    .如果真 (不等于 (status, 0))
        赋值 (New, 假)
        返回 (0)
    .如果真结束
    赋值 (liOldIdleTime, SysPerfInfo.liIdleTime)
    赋值 (liOldSystemTime, SysTimeInfo.liKeSystemTime)
    
.默认
    
.判断结束


_临时子程序 () ' 在模块初始化代码执行完毕后调用模块测试代码
返回 (0) ' 可以根据您的需要返回任意数值

.子程序 _临时子程序, 空白型, , 
 ' 本名称子程序用作测试程序用，仅在开发及调试环境中有效，编译发布程序前将被系统自动清空，请将所有用作测试的临时代码放在本子程序中。 ***注意不要修改本子程序的参数及返回值类型。
取CPU占用率 ()

.子程序 Li2Double, 双精度小数型, , 
.参数 x, 长整数型, , 

.局部变量 h, 整数型, , , 
.局部变量 l, 整数型, , , 
.局部变量 k, 文本型, , , 

赋值 (k, 取十六进制文本 (x))
赋值 (k, 相加 (取重复文本 (相减 (16, 取文本长度 (k)), “0”), k))
赋值 (h, 十六进制文本到整数 (取文本左边 (k, 8)))
赋值 (l, 十六进制文本到整数 (取文本右边 (k, 8)))
返回 (相加 (相乘 (h, 4294967296), l))

.子程序 十六进制文本到整数, 整数型, , 
.参数 欲转换十六进制文本, 文本型, , 长度不得大于八位，也不得有非法字符，否则返回-1

.局部变量 大写文本, 文本型, , , 
.局部变量 文本长度, 整数型, , , 
.局部变量 循环次数, 整数型, , , 
.局部变量 代码, 整数型, , , 
.局部变量 n, 整数型, , , 

赋值 (文本长度, 取文本长度 (欲转换十六进制文本))
.如果真 (大于 (文本长度, 8))
    返回 (-1)
.如果真结束
赋值 (大写文本, 到大写 (欲转换十六进制文本))
赋值 (n, 0)
.计次循环首 (文本长度, 循环次数)
    赋值 (代码, 取代码 (大写文本, 相加 (相减 (文本长度, 循环次数), 1)))
    .如果 (并且 (大于或等于 (代码, 65), 小于或等于 (代码, 70)))
        赋值 (n, 相加 (n, 相乘 (相减 (代码, 55), 求次方 (16, 相减 (循环次数, 1)))))
    .否则
        .如果 (并且 (大于或等于 (代码, 48), 小于或等于 (代码, 57)))
            赋值 (n, 相加 (n, 相乘 (相减 (代码, 48), 求次方 (16, 相减 (循环次数, 1)))))
        .否则
            返回 (-1)
        .如果结束
        
    .如果结束
    
.计次循环尾 ()
返回 (n)

.程序集 _接口程序集, , , 在本程序集中定义的子程序可被模块外部程序访问，注意如果不存在本程序集就不能作为易模块编译。

.子程序 取CPU占用率, 整数型, , 
.局部变量 Y, 整数型, , , 
.局部变量 A, 整数型, , , 
.局部变量 B, 字节集, , , 
.局部变量 C, 整数型, , , 

.如果 (等于 (取操作系统类别 (), 3))
    赋值 (status, NtQuerySystemInformation1 (#SystemTimeInformation, SysTimeInfo, 32, 0))
    .如果真 (不等于 (status, 0))
        返回 (0)
    .如果真结束
    赋值 (status, NtQuerySystemInformation (#SystemPerformanceInformation, SysPerfInfo, 312, 0))
    .如果真 (不等于 (status, 0))
        返回 (0)
    .如果真结束
    赋值 (dbIdleTime, 相减 (Li2Double (SysPerfInfo.liIdleTime), Li2Double (liOldIdleTime)))
    赋值 (dbSystemTime, 相减 (Li2Double (SysTimeInfo.liKeSystemTime), Li2Double (liOldSystemTime)))
    赋值 (dbIdleTime, 相除 (dbIdleTime, dbSystemTime))
    赋值 (dbIdleTime, 相减 (100, 相除 (相乘 (dbIdleTime, 100), CPUNum)))
    赋值 (liOldIdleTime, SysPerfInfo.liIdleTime)
    赋值 (liOldSystemTime, SysTimeInfo.liKeSystemTime)
.否则
    .如果真 (打开子键 (取根键句柄 (7), “PerfStats\StatData”, 1, 假, Y))
        赋值 (B, 取空白字节集 (4))
        .如果真 (读键值项 (Y, “KERNEL\CPUUsage”, A, B, C))
            赋值 (dbIdleTime, 取字节集数据 (B, 3))
        .如果真结束
        关闭键句柄 (Y)
    .如果真结束
    
.如果结束
返回 (dbIdleTime)

.子程序 取系统资源, 整数型, , 仅适用于Win95/98/Me
.如果真 (等于 (取操作系统类别 (), 2))
    返回 (GetFreeSystemResources (0))
.如果真结束
返回 (0)

.子程序 取用户资源, 整数型, , 仅适用于Win95/98/Me
.如果真 (等于 (取操作系统类别 (), 2))
    返回 (GetFreeSystemResources (2))
.如果真结束
返回 (0)

.子程序 取GDI资源, 整数型, , 仅适用于Win95/98/Me
.如果真 (等于 (取操作系统类别 (), 2))
    返回 (GetFreeSystemResources (1))
.如果真结束
返回 (0)

.程序集 _模块_注册表操作增强模块, , , ** 不要更改此处 RegEx.ec

.子程序 取根键句柄, 整数型, , 失败返回0。此句柄不必关闭
.参数 根键, 字节型, , 1、HKEY_CLASSES_ROOT； 2、HKEY_CURRENT_USER； 3、HKEY_LOCAL_MACHINE； 4、HKEY_USERS； 5、HKEY_PERFORMANCE_DATA（仅在WinNT）； 6、HKEY_CURRENT_CONFIG； 7、HKEY_DYN_DATA（仅在Win95/98/ME）

 ' ** 本子程序功能由系统自动转交对应模块实现，可以删除但不能修改。

.子程序 打开子键, 逻辑型, , 
.参数 根键句柄, 整数型, , 
.参数 子键, 文本型, , 如果子键不存在将被创建
.参数 打开方式, 整数型, , 0：允许全部操作  1：只读  2：只写
.参数 易失性, 逻辑型, 可空, 注册项被保存在内存中，重启后消失（仅适用于WinNT）。默认为假
.参数 子键句柄, 整数型, 参考, 设置一个整数型容器，用来接收返回的子键句柄。不再使用时，应调用 关闭键句柄() 来关闭子键句柄

 ' ** 本子程序功能由系统自动转交对应模块实现，可以删除但不能修改。

.子程序 读键值项, 逻辑型, , 
.参数 父键句柄, 整数型, , 
.参数 键值项, 文本型, , 
.参数 键值类型, 整数型, 参考, 设置一整数型容器，用来接收返回的键值类型。1、字符串； 2、扩展字符串； 3、二进制数据； 4、小尾DWORD值； 5、大尾（高位排在低字节）DWORD值；  6、Unicode符号链接； 7、多字符串（格式为 "字符串1,0,字符串2,0,0"）； 8、设备驱动程序资源表
.参数 键值数据, 字节集, , 设置一字节集缓冲区，用来接收返回的键值
.参数 键值长度, 整数型, 参考, 设置一整数性容器，返回实际键长，如果缓冲区太小，将返回需要的长度

 ' ** 本子程序功能由系统自动转交对应模块实现，可以删除但不能修改。

.子程序 关闭键句柄, 逻辑型, , 
.参数 句柄, 整数型, , 

 ' ** 本子程序功能由系统自动转交对应模块实现，可以删除但不能修改。


 ' 不属于任何一个程序集、类模块的函数：
