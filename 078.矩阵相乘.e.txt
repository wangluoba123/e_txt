 ' 文件类型：Windows窗口程序

 ' 程序名称：易语言经典算法 - 矩阵相乘
 ' 程序描述：　　计算两个矩阵A、B的乘积矩阵C。

　　矩阵A＝{1,2,3,4,5,6}；

　　矩阵B＝{7,8,9,10,11,12}。
 ' 程序作者：大有吴涛易语言软件公司
 ' 邮政编码：116001
 ' 联系地址：辽宁省大连市中山区人民路55号亚太国际金融中心
 ' 联系电话：+86(0411)88995831
 ' 传真号码：+86(0411)88995834
 ' 电子信箱：service@dywt.com.cn
 ' 主页地址：http://www.dywt.com.cn
 ' 版权声明：祝您一帆风顺，心想事成！
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 400
    高度 = 282
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “易语言经典算法 - 矩阵相乘”
    帮助文件名 = “”





 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 4 系统核心支持库
 ' iext3 {B6F7542F-B8FE-46a8-9605-98856A687097} 2 0 扩展界面支持库三





.窗口程序集 启动窗口程序集, , , 

.子程序 __启动窗口_创建完毕, 空白型, , 
 ' 使用算法：循环
 ' 问题：矩阵相乘
 ' 问题描述：
 ' 计算两个矩阵A、B的乘积矩阵C。矩阵A＝{1,2,3,4,5,6},矩阵B＝{7,8,9,10,11,12}
 ' 问题分析：
 ' 两个矩阵的乘积仍然是矩阵。若A矩阵有m行p列，B矩阵有p行n列,则它们的乘积C矩阵有m行n列。C=A*B的算法：
 ' Cij= (i=0,1,……,m-1;j=0,1,……,n-1)
 ' 设A、B、C矩阵用3个2维数组表示：a数组有3行2列，b数组有2行3列，则c数组有3行3列。如：
 ' c[0][0]= a[0][0]*b[0][0]+a[0][1]*b[1][0];
 ' c[1][0]= a[1][0]*b[0][1]+a[1][1]*b[1][1];
 ' 从以上算法可以看出，需要3重循环（i、j、k）才能计算C矩阵的各元素。
 ' 通过上面规律可以推导出结果。
 ' 备注：

.子程序 _计算图形按钮_被单击, 空白型, , 
.局部变量 循环变量1, 整数型, , , 
.局部变量 循环变量2, 整数型, , , 
.局部变量 循环变量3, 整数型, , , 
.局部变量 变量1, 整数型, , , 存放相乘之后的数据
.局部变量 矩阵A, 整数型, , "3,2", 存放矩阵A数据的数组
.局部变量 矩阵B, 整数型, , "2,3", 存放矩阵B数据的数组
.局部变量 矩阵C, 整数型, , "3,3", 存放矩阵C数据的数组
.局部变量 变量2, 整数型, , , 用来设置矩阵内的数据

赋值 (.内容, “”)
赋值 (.内容, “”)
赋值 (.内容, “”)
赋值 (变量2, 0)
 ' 设置第一个矩阵A的数据
.变量循环首 (1, 3, 1, 循环变量1)
    .变量循环首 (1, 2, 1, 循环变量2)
        赋值 (变量2, 相加 (变量2, 1))
        赋值 (矩阵A [循环变量1] [循环变量2], 变量2)
         ' 将矩阵A的数据添加到编辑框
        “ ”.加入文本 ()
        到文本 (矩阵A [循环变量1] [循环变量2]).加入文本 (“ ”)
    .变量循环尾 ()
    #换行符.加入文本 ()
.变量循环尾 ()
 ' 设置第一个矩阵A的数据
.变量循环首 (1, 2, 1, 循环变量1)
    .变量循环首 (1, 3, 1, 循环变量2)
        赋值 (变量2, 相加 (变量2, 1))
        赋值 (矩阵B [循环变量1] [循环变量2], 变量2)
         ' 将矩阵A的数据添加到编辑框
        “ ”.加入文本 ()
        到文本 (矩阵B [循环变量1] [循环变量2]).加入文本 (“ ”)
    .变量循环尾 ()
    #换行符.加入文本 ()
.变量循环尾 ()
 ' 得出矩阵A×矩阵B的结果矩阵C
.变量循环首 (1, 3, 1, 循环变量1)
    .变量循环首 (1, 3, 1, 循环变量2)
        赋值 (变量1, 0)
         ' 得出矩阵A与对就的矩阵B的数据相乘，得出对应矩阵C的数据
        .变量循环首 (1, 2, 1, 循环变量3)
            赋值 (变量1, 相加 (变量1, 相乘 (矩阵A [循环变量1] [循环变量3], 矩阵B [循环变量3] [循环变量2])))
             ' 相乘得出矩阵C的数据
            赋值 (矩阵C [循环变量1] [循环变量2], 变量1)
        .变量循环尾 ()
    .变量循环尾 ()
.变量循环尾 ()
 ' 显示最后的结果矩阵C
.变量循环首 (1, 3, 1, 循环变量1)
    .变量循环首 (1, 3, 1, 循环变量2)
        到文本 (矩阵C [循环变量1] [循环变量2]).加入文本 (“ ”)
    .变量循环尾 ()
    #换行符.加入文本 ()
.变量循环尾 ()


 ' 不属于任何一个程序集、类模块的函数：
