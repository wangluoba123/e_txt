 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：本源码来自易语言资源网(www.5A5X.com)
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：             易语言资源网注意事项
--============   www.5A5X.com  =============--
* 易语言资源网为易语言官方站、易语言官方论坛提供辅助资源站；本易语言资源网( www.5A5X.com)所有软件和资料均为软件作者提供和网友推荐发布而来，其版权归该软件和程序源码的合法拥有者所有，本站易语言资源网整理收集仅供易语言用户学习和易语言技术研究探讨使用，不得用于任何商业用途。如果由于以上原因造成的版权纠纷本站概不负责！
* 本站资源未经许可,任何网站不得非法盗链及抄袭本站资源；如引用，请注明来自易语言资源网，谢谢合作！
--============   www.5A5X.com  =============--
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 715
    高度 = 284
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 真
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    窗口类名 = “”
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “进程管理”
    帮助文件名 = “”

窗口 窗口1
    左边 = 50
    顶边 = 50
    宽度 = 392
    高度 = 234
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 0
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 真
    外形 = 0
    总在最前 = 真
    保持标题栏激活 = 假
    窗口类名 = “”
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “”
    帮助文件名 = “”





 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 5 0 系统核心支持库
 ' iext 27bb20fdd3e145e4bee3db39ddd6e64c 2 0 扩展界面支持库一




数据类型 SHFILEINFO, , 文件信息
    .成员 hIcon, 空白型, , , 
    .成员 iIcon, 空白型, , , 
    .成员 dwAttributes, 空白型, , , 
    .成员 szDisplayName, 字节型, , "256", 
    .成员 szTypeName, 字节型, , "80", 

数据类型 模块信息_, 公开, 进程模块信息
    .成员 size, 整数型, , , 
    .成员 mid, 整数型, , , 
    .成员 pid, 整数型, , , 
    .成员 gusage, 整数型, , , 
    .成员 pusage, 整数型, , , 
    .成员 base, 整数型, , , 
    .成员 大小, 整数型, , , 
    .成员 模块句柄, 整数型, , , 
    .成员 模块文件名, 字节型, , "256", 
    .成员 模块完整路径, 字节型, , "256", 

数据类型 LuID_, , 进程令牌
    .成员 lowpart, 整数型, , , 
    .成员 highpart, 整数型, , , 

数据类型 进程信息_, , 进程信息
    .成员 dwSize, 整数型, , , 
    .成员 cntUsage, 整数型, , , 引用计数
    .成员 进程ID, 整数型, , , 
    .成员 th32DefaultHeapID, 整数型, , , 进程的堆号，只对Toolhelp函数有意义，并不是一个有效句柄
    .成员 th32ModuleID, 整数型, , , 进程的模块号，只对Toolhelp函数有意义，并不是一个有效句柄
    .成员 cntThreads, 整数型, , , 进程中包括的线程数
    .成员 th32ParentProcessID, 整数型, , , 进程的母进程
    .成员 pcPriClassBase, 整数型, , , 进程的线程的基优先级，所有此进程创建的线程将基于此优先级
    .成员 dwFlags, 整数型, , , 
    .成员 进程名称, 字节型, , "256", 

数据类型 进程权限_, , From:AdjustTokenPrivileges
    .成员 PrivilegeCount, 整数型, , , 
    .成员 lowpart, 整数型, , , 
    .成员 highpart, 整数型, , , 
    .成员 Attributes, 整数型, , , 

数据类型 文件时间_, , , FILETIME,size = 8
    .成员 底部时间数据, 整数型, , , dwLowDateTime,
    .成员 顶部时间数据, 整数型, , , dwHighDateTime,

数据类型 OBJECT_ATTRIBUTES, , 
    .成员 Length, 整数型, , , 
    .成员 RootDirectory, 整数型, , , 
    .成员 ObjectName, 整数型, , , 
    .成员 Attributes, 整数型, , , 
    .成员 SecurityDescriptor, 整数型, , , 
    .成员 SecurityQualityOfService, 整数型, , , 

数据类型 SYSTEMTIME, , 系统时间;
    .成员 年, 短整数型, , , 
    .成员 月, 短整数型, , , 
    .成员 星期, 短整数型, , , 
    .成员 天, 短整数型, , , 
    .成员 时, 短整数型, , , 
    .成员 分, 短整数型, , , 
    .成员 秒, 短整数型, , , 
    .成员 毫秒, 短整数型, , , 

数据类型 CLIENT_ID, , 
    .成员 UniqueProcess, 整数型, , , 
    .成员 UniqueThread, 整数型, , , 

数据类型 PROCESS_BASIC_INFORMATION, , 
    .成员 ExitStatus, 整数型, , , 
    .成员 PebBaseAddress, 整数型, , , 
    .成员 AffinityMask, 整数型, , , 
    .成员 BasePriority, 整数型, , , 
    .成员 UniqueProcessId, 整数型, , , 
    .成员 InheritedFromUniqueProcessId, 整数型, , , 

数据类型 SYSTEM_HANDLE_TABLE_ENTRY_INFO, , 
    .成员 UniqueProcessId, 短整数型, , , ""
    .成员 CreatorBackTraceIndex, 短整数型, , , ""
    .成员 ObjectTypeIndex, 字节型, , , ""
    .成员 HandleAttributes, 字节型, , , ""
    .成员 HandleValue, 短整数型, , , ""
    .成员 pObject, 整数型, , , ""
    .成员 GrantedAccess, 整数型, , , ""


.DLL命令 _内存读文本, 逻辑型, "", "ReadProcessMemory", 公开, 
    .参数 hProcess, 整数型, , 
    .参数 lpBaseAddress, 整数型, , 
    .参数 lpBuffer, 文本型, , 
    .参数 nSize, 整数型, , 
    .参数 lpNumberOfBytesRead, 整数型, 传址, 

.DLL命令 GetModuleHandleA, 整数型, "kernel32", "GetModuleHandleA", , 获取一个应用程序或动态链接库的模块句柄  如执行成功成功，则返回模块句柄。零表示失败。会设置GetLastError
    .参数 lpModuleName, 文本型, , 指定模块名，这通常是与模块的文件名相同的一个名字。例如，NOTEPAD.EXE程序的模块文件名就叫作NOTEPAD;

.DLL命令 GetProcAddress, 整数型, "kernel32.dll", "GetProcAddress", , 
    .参数 hModule, 整数型, , 
    .参数 lpProcName, 文本型, , 

.DLL命令 WaitForSingleObject, 整数型, "kernel32", "WaitForSingleObject", , 
    .参数 hHandle, 整数型, , 
    .参数 dwMilliseconds, 整数型, , 

.DLL命令 _第一个, 整数型, "", "Process32First", , 
    .参数 h, 整数型, , 
    .参数 p, 进程信息_, , 

.DLL命令 _下一个, 整数型, "", "Process32Next", , 
    .参数 h, 整数型, , 
    .参数 p, 进程信息_, , 

.DLL命令 CreateRemoteThread, 整数型, "", "", , 
    .参数 hProcess, 整数型, , 
    .参数 lpThreadAttributes, 整数型, , 
    .参数 dwStackSize, 整数型, , 
    .参数 lpStartAddress, 整数型, , 
    .参数 lpParameter, 整数型, , 
    .参数 dwCreationFlags, 整数型, , 
    .参数 lpThreadId, 整数型, , 

.DLL命令 CloseHandle, 整数型, "kernel32", "CloseHandle", , 关闭内核对象_,关闭一个内核对象.其中包括文件、文件映射、进程、线程、安全和同步对象等..
    .参数 对象句柄, 整数型, , 欲关闭的一个对象的句柄;

.DLL命令 GetExitCodeThread, 逻辑型, "", "GetExitCodeThread", , 
    .参数 hThread, 空白型, , 
    .参数 lpExitCode, 空白型, 传址, 

.DLL命令 OpenProcess, 整数型, "", "OpenProcess", , 
    .参数 dwDesiredAccess, 整数型, , 
    .参数 bInheritHandle, 逻辑型, , 
    .参数 dwProcessId, 整数型, , 

.DLL命令 _创建快照, 整数型, "", "CreateToolhelp32Snapshot", 公开, 
    .参数 falg, 整数型, , 
    .参数 id, 整数型, , 

.DLL命令 ImageList_Destroy, 整数型, "comctl32.dll", "ImageList_Destroy", , 取文件图标
    .参数 himl, 空白型, , 

.DLL命令 ImageList_Create, 整数型, "comctl32.dll", "ImageList_Create", , 取文件图标
    .参数 cx, 空白型, , 
    .参数 cy, 空白型, , 
    .参数 flags, 空白型, , 
    .参数 cInitial, 空白型, , 
    .参数 cGrow, 空白型, , 

.DLL命令 ImageList_SetBkColor, 整数型, "comctl32.dll", "ImageList_SetBkColor", , 取文件图标
    .参数 himl, 整数型, , 
    .参数 clrBk, 整数型, , 

.DLL命令 ImageList_AddIcon, 整数型, "comctl32.dll", "ImageList_AddIcon", , 取文件图标
    .参数 himl, 空白型, , 
    .参数 hicon, 空白型, , 

.DLL命令 _下一个模块, 整数型, "kernel32.dll", "Module32Next", , 下一个模块
    .参数 快照句柄, 整数型, , 
    .参数 模块信息, 模块信息_, , 

.DLL命令 SHGetFileInfo, 整数型, "", "SHGetFileInfo", , 
    .参数 pszPath, 文本型, , 
    .参数 dwFileAttributes, 整数型, , 
    .参数 psfi, SHFILEINFO, , 
    .参数 cbFileInfo, 整数型, , 
    .参数 uFlags, 整数型, , 

.DLL命令 GetModuleFileNameExA, 整数型, "psapi.dll", "", , 
    .参数 hModule, 整数型, , 备注1无法读取，请您提供该API名报易BBS中ID号klasp完善。
    .参数 dd, 整数型, , 
    .参数 lpFileName, 文本型, , 备注2无法读取，请您提供该API名报易BBS中ID号klasp完善。
    .参数 nSize, 整数型, , 备注3无法读取，请您提供该API名报易BBS中ID号klasp完善。

.DLL命令 OpenProcess2, 整数型, "", "OpenProcess", 公开, 打开进程 获得进程句柄
    .参数 dwDesiredAccess, 整数型, , 
    .参数 bInheritHandle, 整数型, , 
    .参数 dwProcessId, 整数型, , 

.DLL命令 GetSystemDirectoryA, 整数型, "kernel32", "GetSystemDirectoryA", , 这个函数能取得Windows系统目录（System目录）的完整路径名。
    .参数 lpBuffer, 文本型, , 备注1无法读取，请您提供该API名报易BBS中ID号klasp完善。
    .参数 nSize, 整数型, , 备注2无法读取，请您提供该API名报易BBS中ID号klasp完善。

.DLL命令 _进程暂停, 空白型, "NTDLL.DLL", "ZwSuspendProcess", , 暂停
    .参数 进程句柄, 空白型, , 

.DLL命令 _进程恢复, 空白型, "NTDLL.DLL", "ZwResumeProcess", , 恢复
    .参数 进程句柄, 空白型, , 

.DLL命令 _取自进程ID, 整数型, "kernel32.dll", "GetCurrentProcessId", 公开, 

.DLL命令 _打开令牌对象, 逻辑型, "advapi32.dll", "OpenProcessToken", , 打开过程令牌对象
    .参数 进程句柄, 整数型, , 
    .参数 权限, 整数型, , 
    .参数 令牌句柄, 整数型, 传址, 

.DLL命令 _取权限令牌, 整数型, "advapi32.dll", "LookupPrivilegeValueA", , 返回特权名LUID
    .参数 系统服务名, 整数型, , lpSystemName
    .参数 权限名, 文本型, 传址, 
    .参数 权限结构, LuID_, 传址, 

.DLL命令 获取进程经过时间_, 整数型, "kernel32", "GetProcessTimes", , ,
    .参数 进程句柄, 整数型, , 
    .参数 创建时间, 文件时间_, , 
    .参数 中止时间, 文件时间_, , 
    .参数 系统经过时间, 文件时间_, , 
    .参数 用户经过时间, 文件时间_, , 

.DLL命令 _置进程权限, 逻辑型, "advapi32.dll", "AdjustTokenPrivileges", , 使能/取消令牌特权
    .参数 令牌句柄, 整数型, , 
    .参数 DisableAllPrivileges, 逻辑型, , 
    .参数 NewState, 进程权限_, 传址, 
    .参数 BufferLength, 整数型, , 
    .参数 PreviousState, 整数型, , 
    .参数 ReturnLength, 整数型, , 

.DLL命令 API_时间结构转换, 整数型, "kernel32", "FileTimeToSystemTime", , 根据一个FILETIME结构的内容，装载一个SYSTEMTIME结构  非零表示成功，零表示失败。会设置GetLastError
    .参数 文件时间结构, 文件时间_, 传址, FILETIME，包含了文件时间的一个结构
    .参数 系统时间结构, SYSTEMTIME, 传址, SYSTEMTIME，用于装载系统时间信息的一个结构;

.DLL命令 API_GetDateFormat, 整数型, "kernel32", "GetDateFormatA", , 针对指定的“当地”格式，对一个系统日期进行格式化  格式化过后的字串的长度。零表示出错，会将GetLastError设置为下述值之一：ERROR_INSUFFICIENT_BUFFER，ERROR_INVALID_FLAGS，ERROR_INVALID_PARAMETER
    .参数 Locale, 整数型, , 用于决定格式的地方ID。lpFormat参数中指定的任何信息（倘若不是NULL）都优先于特定于地方的信息
    .参数 dwFlags, 整数型, , 如指定了lpFormat，那么该参数应该为零。否则，可设为LOCALE_NOUSEROVERRIDE，强制使用系统地方参数――即使它们已由用户取代。用DATE_SHORTDATE 或 DATE_LONGDATE选择不同的日期格式
    .参数 lpDate, SYSTEMTIME, , SYSTEMTIME，包含了一个系统日期的结构
    .参数 lpFormat, 文本型, , 可设为NULL，使用特定于不同地方的值（用vbNull传递一个NULL）。否则包含一个日期格式字串。对d,dd,ddd,dddd,m,mm,mmm,mmmm,y,yy,yyyy这样的代码，它们的用法与在vb格式命令中的用法是相同的。注意用gg指定一个“纪元”
    .参数 lpDateStr, 文本型, , 指定一个缓冲区，用于容纳格式化过后的字串。注意事先对字串进行初始化
    .参数 cchDate, 整数型, , lpDateStr缓冲区的长度。如为零，表示函数会返回需要缓冲区的大小;

.DLL命令 API_GetTimeFormat, 整数型, "kernel32.dll", "GetTimeFormatA", , 针对指定的“当地”格式，对一个系统时间进行格式化。
    .参数 地方ID, 整数型, , Locale，用于决定格式的地方ID。lpFormat参数中指定的任何信息（倘若不是NULL）都优先于特定于地方的信息
    .参数 标志, 整数型, , dwFlags，如指定了lpFormat，那么该参数应该为零。否则，可设为LOCALE_NOUSEROVERRIDE，强制使用系统地方参数
    .参数 时间结构, SYSTEMTIME, 传址, lpDate，SYSTEMTIME，用于包容系统时间的一个结构
    .参数 格式化, 文本型, 传址, lpFormat，String，可设为NULL，使用特定于不同地方的值（用vbNullString传递一个NULL）。
    .参数 缓冲区文本, 文本型, , lpDateStr，指定一个缓冲区，用于容纳格式化过后的字串。注意事先对字串进行初始化
    .参数 缓冲区文本长度, 整数型, , cchDate，缓冲区的长度。如为零，表示函数会返回需要缓冲区的大小;

.DLL命令 结束进程, 整数型, "", "TerminateProcess", , 
    .参数 指定进程, 整数型, , 
    .参数 退出标记, 整数型, , 

.DLL命令 _枚举窗口, 逻辑型, "", "EnumWindows", , 
    .参数 枚举过程, 子程序指针, , 
    .参数 参数, 整数型, , 

.DLL命令 _取窗口进程ID, 整数型, "user32.dll", "GetWindowThreadProcessId", , GetWindowThreadProcessId，获取与指定窗口关联在一起的一个线程和进程标识符
    .参数 窗口句柄, 整数型, , hwnd，指定窗口句柄
    .参数 进程标识符, 整数型, 传址, lpdwProcessId，指定一个变量，用于装载拥有那个窗口的一个进程的标识符

.DLL命令 _投递消息, 空白型, "", "PostMessageA", 公开, 向指定窗口句柄发送消息
    .参数 h, 空白型, , 
    .参数 m, 空白型, , 
    .参数 p, 空白型, , 
    .参数 p, 空白型, , 

.DLL命令 _判断句柄是否有效, 整数型, "user32", "IsWindow", , 判断一个窗口句柄是否有效(非零表示成功，零表示失败)
    .参数 hwnd, 整数型, , 待检查窗口的句柄

.DLL命令 ZwCreateJobObject, 整数型, "ntdll.dll", "", , 
    .参数 JobHandle, 整数型, 传址, 
    .参数 DesiredAccess, 整数型, , 
    .参数 ObjectAttributes, OBJECT_ATTRIBUTES, , 

.DLL命令 ZwAssignProcessToJobObject, 整数型, "ntdll.dll", "", , 
    .参数 JobHandle, 整数型, , 
    .参数 ProcessHandle, 整数型, , 

.DLL命令 ZwClose, 整数型, "ntdll.dll", "ZwClose", , 
    .参数 hnd, 空白型, , 

.DLL命令 ZwTerminateJobObject, 整数型, "ntdll.dll", "", , 
    .参数 JobHandle, 整数型, , 
    .参数 ExitStatus, 整数型, , 

.DLL命令 ZwTerminateProcess, 整数型, "ntdll.dll", "", , 
    .参数 ProcessHandle, 整数型, , 
    .参数 ExitStatus, 整数型, , 

.DLL命令 RtlMoveMemory1, 整数型, "", "RtlMoveMemory", , 常规API
    .参数 dest, SYSTEM_HANDLE_TABLE_ENTRY_INFO, , 
    .参数 Source, 整数型, , 
    .参数 len, 空白型, , 284

.DLL命令 RtlMoveMemory3, 整数型, "", "RtlMoveMemory", 公开, 常规API,从地址读一个整数
    .参数 dest, 整数型, 传址, 
    .参数 Source, 整数型, , 
    .参数 len, 空白型, , 4

.DLL命令 取指针_字节集, 整数型, "", "lstrcpyn", , 
    .参数 欲取其指针, 字节集, 传址, 
    .参数 欲取其指针, 字节集, 传址, 
    .参数 保留, 整数型, , 0

.DLL命令 ZwQuerySystemInformation, 整数型, "ntdll.dll", "ZwQuerySystemInformation", , 
    .参数 SystemInformationClass, 整数型, , 未知类型：SYSTEM_INFORMATION_CLASS。
    .参数 SystemInformation, 字节集, , any
    .参数 SystemInformationLength, 整数型, , 
    .参数 ReturnLength, 整数型, 传址, 

.DLL命令 ZwOpenProcess, 整数型, "ntdll.dll", "ZwOpenProcess", , 
    .参数 hProcess, 整数型, 传址, 
    .参数 DesiredAccess, 整数型, , 
    .参数 ObjectAttributes, OBJECT_ATTRIBUTES, , 
    .参数 ClientId, CLIENT_ID, , 

.DLL命令 _第一个模块, 整数型, "", "Module32First", , 第一个模块，查找模块
    .参数 快照句柄, 整数型, , 
    .参数 模块信息, 模块信息_, , 

.DLL命令 ZwDuplicateObject, 整数型, "ntdll.dll", "", , 
    .参数 SourceProcessHandle, 整数型, , 
    .参数 SourceHandle, 整数型, , 
    .参数 TargetProcessHandle, 整数型, , 
    .参数 TargetHandle, 整数型, 传址, 
    .参数 DesiredAccess, 整数型, , 
    .参数 HandleAttributes, 整数型, , 
    .参数 Options, 整数型, , 

.DLL命令 ZwQueryInformationProcess, 整数型, "ntdll.dll", "ZwQueryInformationProcess", , 
    .参数 SystemInformationClass, 整数型, , 未知类型：SYSTEM_INFORMATION_CLASS。
    .参数 dd, 整数型, , 
    .参数 SystemInformation, PROCESS_BASIC_INFORMATION, , any
    .参数 SystemInformationLength, 整数型, , 
    .参数 ReturnLength, 整数型, 传址, 

.窗口程序集 窗口程序集1, , , 

.程序集变量 当前窗口列表, 整数型, , "0", 枚举出来的窗口句柄列表
.子程序 取命令行参数及创建时间, 文本型, , 
.参数 进程ID, 整数型, , 

.局部变量 GetCommandLineA_addr, 整数型, , , GetCommandLineA的地址
.局部变量 hRemoteThread, 整数型, , , 远程线程句柄
.局部变量 lptstr, 整数型, , , 远程进程的映像路径及命令行参数的基址
.局部变量 lstrlenA_addr, 整数型, , , lstrlenA的地址
.局部变量 strlen, 整数型, , , 长度
.局部变量 m_hProcess, 整数型, , , 
.局部变量 lpstrImagePathAndCommandLine, 文本型, , , 

 ' --========  易语言资源网  (www.5A5X.com)  ======--
 ' 努力创建完善、持续更新的易语言学习例程源码资源站
 ' --================   www.5A5X.com  ===========--
 ' --==================   易语言资源网注意事项  ================--
 ' * 易语言资源网为易语言官方站、易语言官方论坛提供辅助资源站；
 ' 本易语言资源网( www.5A5X.com)所有软件和资料均为软件作者提
 ' 供和网友推荐发布而来，其版权归该软件和程序源码的合法拥有者所
 ' 有，本站易语言资源网整理收集仅供易语言用户学习和易语言技术研
 ' 究探讨使用，不得用于任何商业用途。如果由于以上原因造成的版权
 ' 纠纷本站概不负责！
 ' * 本站资源未经许可，任何网站不得非法盗链及抄袭本站资源；如引用
 ' 页面，请注明来自易语言资源网，谢谢合作！
 ' --=====================   www.5A5X.com  ================--

赋值 (m_hProcess, OpenProcess (位或 (16, 64, 8, 2, 1024), 假, 进程ID)) ' 打开目标进程
赋值 (GetCommandLineA_addr, GetProcAddress (GetModuleHandleA (“Kernel32.dll”), “GetCommandLineA”)) ' 获取 GetCommandLineA 的地址
赋值 (hRemoteThread, CreateRemoteThread (m_hProcess, 0, 0, GetCommandLineA_addr, 0, 0, 0)) ' 创建远程线程执行 GetCommandLineA 函数，并获取该线程的线程句柄
.如果 (不等于 (hRemoteThread, 0))
    WaitForSingleObject (hRemoteThread, -1) ' 等待线程结束
    GetExitCodeThread (hRemoteThread, lptstr) ' 获取线程退出代码
    CloseHandle (hRemoteThread) ' 关闭线程句柄
.否则
    返回 (“”)
.如果结束
赋值 (lstrlenA_addr, GetProcAddress (GetModuleHandleA (“Kernel32.dll”), “lstrlenA”)) ' 获取 lstrlenA 的地址
赋值 (hRemoteThread, CreateRemoteThread (m_hProcess, 0, 0, lstrlenA_addr, lptstr, 0, 0)) ' 创建远程线程执行 lstrlenA 函数，并获取该线程的线程句柄
.如果 (不等于 (hRemoteThread, 0))
    WaitForSingleObject (hRemoteThread, -1) ' 等待线程结束
    GetExitCodeThread (hRemoteThread, strlen) ' 获取线程退出代码
    CloseHandle (hRemoteThread) ' 关闭线程句柄
.否则
    返回 (“”)
.如果结束
赋值 (lpstrImagePathAndCommandLine, 取空白文本 (strlen)) ' 申请内存空间，用于保存远程进程的映像路径及命令行参数的基址
.如果真 (_内存读文本 (m_hProcess, lptstr, lpstrImagePathAndCommandLine, strlen, 0)) ' 读取远程进程的映像路径及命令行参数
    返回 (lpstrImagePathAndCommandLine)
.如果真结束
返回 (“”)
 ' 本源码来自易语言资源网(www.5A5X.com)



.子程序 进程枚举, 空白型, , 
.局部变量 信息, 进程信息_, , , 
.局部变量 进程快照, 整数型, , , 
.局部变量 文件信息, SHFILEINFO, , , 
.局部变量 hImageList, 整数型, , , 
.局部变量 进程句柄, 整数型, , , 
.局部变量 进程路径, 文本型, , , 
.局部变量 计次, 整数型, , , 
.局部变量 命令行参数, 文本型, , , 

赋值 (., 真)
赋值 (., 真)
全部删除 ()
ImageList_Destroy (hImageList)
赋值 (hImageList, ImageList_Create (16, 16, 24, 0, 0)) ' 定义每张图片大小为16*16的图片组,色彩为24位真彩色
4099.发送信息 (1, hImageList) ' 为超级列表框设置图片组
ImageList_SetBkColor (hImageList, .)
赋值 (进程快照, _创建快照 (15, 0))
.如果真 (等于 (进程快照, 0))
    返回 ()
.如果真结束
赋值 (信息.dwSize, 1024)
赋值 (进程句柄, _第一个 (进程快照, 信息))
赋值 (计次, 0)
.判断循环首 (不等于 (进程句柄, 0))
    处理事件 ()
    赋值 (计次, 相加 (计次, 1))
    赋值 (进程路径, 进程ID取路径 (信息.进程ID))
    SHGetFileInfo (进程路径, 128, 文件信息, 348, 257)
    相减 (计次, 1).插入表项 (到文本 (信息.进程名称), ImageList_AddIcon (hImageList, 文件信息.hIcon), , , )
    相减 (计次, 1).置标题 (1, 到文本 (信息.进程ID))
    赋值 (命令行参数, 取命令行参数及创建时间 (信息.进程ID))
    .如果 (等于 (命令行参数, “”))
        相减 (计次, 1).置标题 (2, 进程路径)
    .否则
        相减 (计次, 1).置标题 (2, 命令行参数)
    .如果结束
    相减 (计次, 1).置标题 (3, 取创建时间 (信息.进程ID))
    相减 (计次, 1).置标题 (4, 到文本 (信息.pcPriClassBase))
    相减 (计次, 1).置标题 (5, 到文本 (信息.cntThreads))
    相减 (计次, 1).置标题 (6, 到文本 (信息.th32ParentProcessID))
    相减 (计次, 1).置标题 (7, 到文本 (信息.cntUsage))
    赋值 (进程句柄, _下一个 (进程快照, 信息))
.判断循环尾 ()
赋值 (_启动窗口., 相加 (“一共有”, 到文本 (相减 (计次, 1)), “个进程”))
赋值 (., 假)
赋值 (., 假)


.子程序 进程ID取路径, 文本型, , 
.参数 进程号, 整数型, , 

.局部变量 系统目录, 文本型, , , 
.局部变量 全路径名, 文本型, , , 
.局部变量 进程句柄, 整数型, , , 

赋值 (系统目录, 取空白文本 (255))
GetSystemDirectoryA (系统目录, 255)
赋值 (进程句柄, OpenProcess2 (1040, 0, 进程号))
赋值 (全路径名, 取空白文本 (255))
.如果真 (不等于 (GetModuleFileNameExA (进程句柄, 0, 全路径名, 255), 0))
    赋值 (全路径名, 子文本替换 (全路径名, “\??\”, “”, , , 真))
    .如果真 (等于 (到小写 (取文本左边 (全路径名, 12)), “\systemroot\”))
        赋值 (全路径名, 子文本替换 (全路径名, “\systemroot\”, 系统目录, , , 假))
    .如果真结束
    返回 (全路径名)
.如果真结束
返回 (“”)


.子程序 _按钮1_被单击, 空白型, , 
进程枚举 ()

.子程序 _超级列表框_进程_左键单击表项, 空白型, , 
.局部变量 模块信息, 模块信息_, , "0", 
.局部变量 模块数, 整数型, , , 
.局部变量 文件信息, SHFILEINFO, , , 
.局部变量 hImageList, 整数型, , , 
.局部变量 a, 整数型, , , 

.如果真 (等于 (.标题, “√显示模块”))
    赋值 (., 真)
    全部删除 ()
    ImageList_Destroy (hImageList)
    赋值 (hImageList, ImageList_Create (16, 16, 24, 0, 0)) ' 定义每张图片大小为16*16的图片组,色彩为24位真彩色
    4099.发送信息 (1, hImageList) ' 为超级列表框设置图片组
    ImageList_SetBkColor (hImageList, .)
     ' 本源码来自易语言资源网(www.5A5X.com)
    赋值 (模块数, 进程ID取模块 (到数值 (.取标题 (., 1)), 模块信息))
    .计次循环首 (模块数, a)
        SHGetFileInfo (到文本 (模块信息 [a], 模块完整路径), 128, 文件信息, 348, 257)
        .插入表项 (到文本 (模块信息 [a], 模块句柄), ImageList_AddIcon (hImageList, 文件信息.hIcon), , , )
        相减 (a, 1).置标题 (1, 到文本 (模块信息 [a], 模块文件名))
        相减 (a, 1).置标题 (2, 到文本 (模块信息 [a], 模块完整路径))
    .计次循环尾 ()
    
    .如果 (大于 (模块数, 0))
        赋值 (_启动窗口., 相加 (“一共有”, 到文本 (模块数), “个模块”))
        .如果 (等于 (是否已创建 (窗口1), 假))
            载入 (窗口1, , 假)
            赋值 (., 真)
            窗口1.置父窗口 ()
            赋值 (., 0)
            赋值 (., 0)
            赋值 (窗口1., 真)
        .否则
            赋值 (窗口1., 真)
        .如果结束
        
        赋值 (窗口1., 取鼠标水平位置 ())
        赋值 (窗口1., 相减 (取鼠标垂直位置 (), 234))
        
    .否则
        赋值 (窗口1., 假)
        赋值 (_启动窗口., “无法读取模块”)
    .如果结束
    
    赋值 (., 假)
.如果真结束


.子程序 进程ID取模块, 整数型, 公开, 
.参数 进程ID, 整数型, 可空, 为空 则取当前进程模块
.参数 模块信息数组, 模块信息_, 参考 可空 数组, 返回的模块信息 数组

.局部变量 快照句柄, 整数型, , , 
.局部变量 模块信息, 模块信息_, , , 
.局部变量 进程句柄, 整数型, , , 


赋值 (快照句柄, _创建快照 (8, 进程ID))
.如果真 (等于 (快照句柄, 0))
    返回 (0)
.如果真结束
赋值 (模块信息.size, 1024)
赋值 (进程句柄, _第一个模块 (快照句柄, 模块信息))
.判断循环首 (不等于 (进程句柄, 0))
    加入成员 (模块信息数组, 模块信息)
    赋值 (进程句柄, _下一个模块 (快照句柄, 模块信息))
.判断循环尾 ()
返回 (取数组成员数 (模块信息数组))

.子程序 _超级列表框_进程_右键单击表项, 空白型, , 
弹出菜单 (取鼠标水平位置 (), 取鼠标垂直位置 ())

.子程序 _结束进程_被选择, 空白型, , 


.子程序 _定位文件_被选择, 空白型, , 
.局部变量 文件路径, 文本型, , , 

赋值 (文件路径, 进程ID取路径 (到整数 (.取标题 (., 1))))
运行 (相加 (“Explorer /select, ”, 文件路径), 假, )


.子程序 _超级列表框_模块_右键单击表项, 空白型, , 
弹出菜单 (取鼠标水平位置 (), 取鼠标垂直位置 ())

.子程序 _定位此模块_被选择, 空白型, , 
运行 (相加 (“Explorer /select, ”, .取标题 (., 2)), 假, )

.子程序 _挂起进程_被选择, 空白型, , 
进程暂停 (到整数 (.取标题 (., 1)), 真)

.子程序 _恢复进程_被选择, 空白型, , 
进程暂停 (到整数 (.取标题 (., 1)))

.子程序 进程暂停, 空白型, 公开, 将指定进程暂停(无返回值) 
.参数 进程ID, 整数型, , 欲被暂停进程的进程ID
.参数 状态, 逻辑型, 可空, 可空为假:恢复进程   真:暂停进程

.局部变量 进程句柄, 整数型, , , 

赋值 (进程句柄, OpenProcess2 (2035711, 0, 进程ID))
.如果 (状态)
    _进程暂停 (进程句柄)
.否则
    _进程恢复 (进程句柄)
.如果结束
CloseHandle (进程句柄)

.子程序 __启动窗口_创建完毕, 空白型, , 
.局部变量 进程句柄, 整数型, , , 
.局部变量 令牌句柄, 整数型, , , 
.局部变量 destLuid, LuID_, , , 
.局部变量 进程权限, 进程权限_, , , 
.局部变量 返回值, 逻辑型, , , 

赋值 (进程句柄, OpenProcess2 (2035711, 0, _取自进程ID ()))
_打开令牌对象 (进程句柄, 983551, 令牌句柄)
_取权限令牌 (0, “SeDebugPrivilege”, destLuid)
赋值 (进程权限.PrivilegeCount, 1)
赋值 (进程权限.Attributes, 2)
赋值 (进程权限.lowpart, destLuid.lowpart)
赋值 (进程权限.highpart, destLuid.highpart)
赋值 (返回值, _置进程权限 (令牌句柄, 假, 进程权限, 0, 0, 0))
.如果真 (等于 (返回值, 假))
    信息框 (“权限提升失败，可能影响某些操作”, 0, )
.如果真结束


.子程序 _到父进程_被选择, 空白型, , 
.局部变量 i, 整数型, , , 
.局部变量 父ID, 文本型, , , 

赋值 (父ID, .取标题 (., 6))
.计次循环首 (取表项数 (), i)
    .如果真 (等于 (相减 (i, 1).取标题 (1), 父ID))
        赋值 (., 相减 (i, 1))
        返回 ()
    .如果真结束
    
.计次循环尾 ()

.子程序 取创建时间, 文本型, , 
.参数 进程ID, 空白型, , 

.局部变量 创建时间, 文件时间_, , , 
.局部变量 中止时间, 文件时间_, , , 
.局部变量 系统经过时间, 文件时间_, , , 
.局部变量 用户经过时间, 文件时间_, , , 
.局部变量 日期, 文本型, , , 
.局部变量 时间, 文本型, , , 
.局部变量 小时, 文本型, , , 
.局部变量 SYSTEMTIME, SYSTEMTIME, , , 
.局部变量 进程句柄, 整数型, , , 
.局部变量 返回, 文本型, , , 

.如果真 (或者 (等于 (进程ID, 0), 等于 (进程ID, 4)))
    返回 (“”)
.如果真结束
赋值 (进程句柄, OpenProcess2 (1024, 0, 进程ID))
获取进程经过时间_ (进程句柄, 创建时间, 中止时间, 系统经过时间, 用户经过时间)
API_时间结构转换 (创建时间, SYSTEMTIME)
赋值 (日期, 取空白文本 (255))
赋值 (时间, 取空白文本 (255))
赋值 (小时, 取空白文本 (255))
API_GetTimeFormat (0, 0, SYSTEMTIME, “HH”, 小时, 取文本长度 (小时))
API_GetTimeFormat (0, 0, SYSTEMTIME, “:mm:ss”, 时间, 取文本长度 (时间))
API_GetDateFormat (0, 0, SYSTEMTIME, “dd/MM/yyyy”, 日期, 取文本长度 (日期))
赋值 (小时, 到文本 (相加 (到整数 (小时), 8)))
赋值 (返回, 到文本 (相加 (日期, “ ※ ”, 小时, 时间)))
CloseHandle (进程句柄)
返回 (返回)
 ' 本源码来自易语言资源网(www.5A5X.com)

.子程序 _方式一_被选择, 空白型, , 
结束进程 (OpenProcess (1, 假, 到整数 (.取标题 (., 1))), 0)
CloseHandle (OpenProcess (1, 假, 到整数 (.取标题 (., 1))))
_按钮1_被单击 ()

.子程序 _方式二_被选择, 空白型, , 
.局部变量 循环变量, 整数型, , , 
.局部变量 临时窗口列表, 整数型, , "0", 
.局部变量 窗口线程ID, 整数型, , , 
.局部变量 窗口进程ID, 整数型, , , 

枚举窗口 (临时窗口列表)
.计次循环首 (取数组成员数 (临时窗口列表), 循环变量) ' 从所有窗口句柄中找到窗口进程ID与进程ID相同的
    赋值 (窗口线程ID, _取窗口进程ID (临时窗口列表 [循环变量], 窗口进程ID))
     ' 输出调试文本 (窗口进程ID)
    .如果真 (等于 (窗口进程ID, 到整数 (.取标题 (., 1))))
        .如果真 (不等于 (_判断句柄是否有效 (临时窗口列表 [循环变量]), 0)) ' 判断窗口句柄是否为有效
            _投递消息 (临时窗口列表 [循环变量], 18, 0, 0)
            _投递消息 (临时窗口列表 [循环变量], 16, 0, 0)
        .如果真结束
        
    .如果真结束
    
.计次循环尾 ()
_按钮1_被单击 ()

.子程序 枚举窗口, 整数型, 公开, 枚举所有窗口,返回窗口句柄数目,失败返回0 作者:无限复活
.参数 句柄数组, 整数型, 参考 可空 数组, 返回的所有窗口句柄数组

清除数组 (当前窗口列表)
_枚举窗口 (&枚举窗口过程, 0)
赋值 (句柄数组, 当前窗口列表)
返回 (取数组下标 (当前窗口列表, ))

.子程序 枚举窗口过程, 逻辑型, , 
.参数 hwnd, 整数型, , 

.如果真 (不等于 (hwnd, 0))
    加入成员 (当前窗口列表, hwnd)
    返回 (真)
.如果真结束
返回 (假)

.子程序 _强力结束_被选择, 空白型, , 
.局部变量 st, 整数型, , , 
.局部变量 hJob, 整数型, , , 
.局部变量 oa, OBJECT_ATTRIBUTES, , , 
.局部变量 ret, 逻辑型, , , 
.局部变量 hProcess, 整数型, , , 

赋值 (hProcess, 强力打开进程 (2035711, 假, 到整数 (.取标题 (., 1))))


赋值 (ret, 假)
赋值 (oa.Length, 24)
赋值 (st, ZwCreateJobObject (hJob, 203164, oa))
.如果真 (大于或等于 (st, 0))
    赋值 (st, ZwAssignProcessToJobObject (hJob, hProcess))
    .如果真 (大于或等于 (st, 0))
        赋值 (st, ZwTerminateJobObject (hJob, 0))
        .如果真 (大于或等于 (st, 0))
            赋值 (ret, 真)
        .如果真结束
        
    .如果真结束
    ZwClose (hJob)
.如果真结束
.如果真 (等于 (ret, 假))
    赋值 (st, ZwTerminateProcess (hProcess, 0))
    .如果真 (大于或等于 (st, 0))
        赋值 (ret, 真)
    .如果真结束
    ' 本源码来自易语言资源网(www.5A5X.com)
.如果真结束

_按钮1_被单击 ()


.子程序 强力打开进程, 整数型, , 
.参数 dwDesiredAccess, 整数型, , 访问权限，2035711为完全访问
.参数 bInhert, 逻辑型, , 
.参数 ProcessId, 整数型, , 

.局部变量 st, 整数型, , , 
.局部变量 cid, CLIENT_ID, , , 
.局部变量 oa, OBJECT_ATTRIBUTES, , , 
.局部变量 NumOfHandle, 整数型, , , 
.局部变量 pbi, PROCESS_BASIC_INFORMATION, , , 
.局部变量 i, 整数型, , , 
.局部变量 hProcessToDup, 整数型, , , 
.局部变量 hProcessCur, 整数型, , , 
.局部变量 hProcessToRet, 整数型, , , 
.局部变量 h_info, SYSTEM_HANDLE_TABLE_ENTRY_INFO, , , 
.局部变量 retlen, 整数型, , , 
.局部变量 a, 字节集, , , 
.局部变量 b, 整数型, , , 
.局部变量 c, 字节集, , , 
.局部变量 ret, 整数型, , , 

赋值 (oa.Length, 24)
.如果真 (bInhert)
    赋值 (oa.Attributes, 位或 (oa.Attributes, 2))
.如果真结束
赋值 (cid.UniqueProcess, 相加 (ProcessId, 1))
赋值 (st, ZwOpenProcess (hProcessToRet, dwDesiredAccess, oa, cid))
.如果真 (大于或等于 (st, 0))
    赋值 (ret, hProcessToRet)
    返回 (ret)
.如果真结束
赋值 (retlen, 1)
.循环判断首 ()
    赋值 (a, 取空白字节集 (retlen))
    赋值 (ret, ZwQuerySystemInformation (16, a, retlen, 0))
    .如果 (等于 (ret, -1073741820))
        赋值 (retlen, 相乘 (retlen, 2))
        赋值 (a, 取空白字节集 (retlen))
    .否则
        跳出循环 ()
    .如果结束
    
.循环判断尾 (等于 (ret, -1073741820))
赋值 (b, 取指针_字节集 (a, a, 0))
RtlMoveMemory3 (NumOfHandle, b, 4)
赋值 (b, 相加 (b, 4))
.计次循环首 (NumOfHandle, i)
    RtlMoveMemory1 (h_info, b, 16)
    .如果真 (等于 (h_info.ObjectTypeIndex, 5))
        赋值 (cid.UniqueProcess, h_info.UniqueProcessId)
        赋值 (st, ZwOpenProcess (hProcessToDup, 64, oa, cid))
        .如果真 (大于或等于 (st, 0))
            赋值 (st, ZwDuplicateObject (hProcessToDup, h_info.HandleValue, -1, hProcessCur, 2035711, 0, 4))
            .如果真 (大于或等于 (st, 0))
                赋值 (st, ZwQueryInformationProcess (hProcessCur, 0, pbi, 24, 0))
                .如果真 (大于或等于 (st, 0))
                    .如果真 (等于 (pbi.UniqueProcessId, ProcessId))
                        赋值 (st, ZwDuplicateObject (hProcessToDup, h_info.HandleValue, -1, hProcessToRet, dwDesiredAccess, 2, 4))
                        .如果真 (大于或等于 (st, 0))
                            赋值 (ret, hProcessToRet)
                        .如果真结束
                        
                    .如果真结束
                    
                .如果真结束
                
            .如果真结束
            赋值 (st, ZwClose (hProcessCur))
        .如果真结束
        赋值 (st, ZwClose (hProcessToDup))
    .如果真结束
    赋值 (b, 相加 (b, 16))
.计次循环尾 ()
返回 (ret)

.子程序 __启动窗口_将被销毁, 空白型, , 
结束 ()

.子程序 _刷新_被选择, 空白型, , 
_按钮1_被单击 ()

.子程序 _显示模块_被选择, 空白型, , 
.如果 (等于 (.标题, “显示模块”))
    赋值 (.标题, “√显示模块”)
.否则
    赋值 (.标题, “显示模块”)
    赋值 (窗口1., 假)
    赋值 (_启动窗口., “进程管理”)
.如果结束



.窗口程序集 窗口程序集2, , , 

.子程序 _窗口1_可否被关闭, 逻辑型, , 
赋值 (窗口1., 假)
返回 (假)


 ' 不属于任何一个程序集、类模块的函数：
