 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：本源码来自易语言资源网(www.wodesoft.com)
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：             易语言资源网注意事项
--============   www.wodesoft.com  =============--
* 易语言资源网为易语言官方站、易语言官方论坛提供辅助资源站；本易语言资源网( www.wodesoft.com)所有软件和资料均为软件作者提供和网友推荐发布而来，其版权归该软件和程序源码的合法拥有者所有，本站易语言资源网整理收集仅供易语言用户学习和易语言技术研究探讨使用，不得用于任何商业用途。如果由于以上原因造成的版权纠纷本站概不负责！
* 本站资源未经许可,任何网站不得非法盗链及抄袭本站资源；如引用，请注明来自易语言资源网，谢谢合作！
--============   www.wodesoft.com  =============--
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 380
    高度 = 250
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假





 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 5 0 系统核心支持库
 ' spec A512548E76954B6E92C21055517615B0 3 0 特殊功能支持库
 ' internet 707ca37322474f6ca841f0e224f4b620 2 0 互联网支持库




数据类型 匹配信息, , 
    .成员 匹配文本, 文本型, , , 
    .成员 匹配数据, 文本型, , "1", 
    .成员 完成地址, 整数型, , "1", 
    .成员 匹配过程, 整数型, , , 
    .成员 调用地址, 整数型, , "1", 


.DLL命令 CharNextExA, 整数型, "user32.dll", "CharNextExA", , 
    .参数 ByVal, 整数型, , 
    .参数 lpCurrentChar, 文本型, , 
    .参数 dwFlags, 整数型, , must be zero

.DLL命令 指针到文本_, 文本型, "", "SetHandleCount", 公开, 
    .参数 指针数据, 整数型, , 

.DLL命令 取整数栈址, 整数型, "", "SetHandleCount", 公开, 
    .参数 数据, 字节型, 传址, 

.DLL命令 crt_strpbrk, 整数型, "msvcrt", "strpbrk", , 

.DLL命令 拷贝内存_, 整数型, "kernel32.dll", "RtlMoveMemory", , 
    .参数 目标数据地址, 整数型, , lpvDest
    .参数 源数据, 整数型, , lpvSource
    .参数 尺寸, 整数型, , cbCopy

.类模块 匹配符类, , , 

.程序集变量 调用地址, 整数型, , "63", 
.程序集变量 匹配数据, 匹配信息, , , 
.程序集变量 匹配文本, 文本型, , , 
.程序集变量 匹配字母, 逻辑型, , , 
.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用
.局部变量 proc, 整数型, , , 
.局部变量 alen, 整数型, , , 
.局部变量 i, 整数型, , , 
.局部变量 a, 整数型, , , 
.局部变量 n, 空白型, , , 

 ' --========  易语言资源网  (www.wodesoft.com)  ======--
 ' 努力创建完善、持续更新的易语言学习例程源码资源站
 ' --================   www.wodesoft.com  ===========--
 ' --==================   易语言资源网注意事项  ================--
 ' * 易语言资源网为易语言官方站、易语言官方论坛提供辅助资源站；
 ' 本易语言资源网( www.wodesoft.com)所有软件和资料均为软件作者提
 ' 供和网友推荐发布而来，其版权归该软件和程序源码的合法拥有者所
 ' 有，本站易语言资源网整理收集仅供易语言用户学习和易语言技术研
 ' 究探讨使用，不得用于任何商业用途。如果由于以上原因造成的版权
 ' 纠纷本站概不负责！
 ' * 本站资源未经许可，任何网站不得非法盗链及抄袭本站资源；如引用
 ' 页面，请注明来自易语言资源网，谢谢合作！
 ' --=====================   www.wodesoft.com  ================--

赋值 (proc, 读地址_4 (读地址_4 (取参数栈数据 (2), 0), 0))
赋值 (i, 8)
赋值 (a, 读地址_4 (proc, i))
赋值 (i, 相加 (i, 4))
.计次循环首 (63, n)
    赋值 (调用地址 [n], a)
.计次循环尾 ()
赋值 (调用地址 [42], 读地址_4 (proc, i))
赋值 (i, 相加 (i, 4))
赋值 (调用地址 [63], 读地址_4 (proc, i))

.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用
置文本栈数据 (匹配文本, 0)

.子程序 查找文本_1, 整数型, , 
.参数 Max, 空白型, , 
.参数 Cur, 空白型, , 

.局部变量 ret, 空白型, , , 
.局部变量 len, 空白型, , , 
.局部变量 n, 空白型, , , 

赋值 (ret, 寻找文本 (匹配文本, 匹配数据.匹配数据 [Cur], , 匹配字母))
.判断开始 (等于 (ret, -1))
    赋值 (ret, 0)
.默认
    .如果真 (不等于 (ret, 1))
        .如果真 (不等于 (匹配数据., -1))
            赋值 (ret, 0)
        .如果真结束
        赋值 (匹配数据., 0)
    .如果真结束
    .如果真 (不等于 (ret, 0))
        赋值 (ret, 相减 (相加 (ret, 取文本栈数据 (匹配文本)), 1))
        加入成员 (匹配数据., ret)
        赋值 (ret, 相加 (取文本长度 (匹配数据.匹配数据 [Cur]), ret))
        置文本栈数据 (匹配文本, ret)
        .如果真 (并且 (等于 (Cur, Max), 不等于 (读地址_1 (ret, 0), 0)))
            赋值 (ret, 0)
        .如果真结束
         ' 本源码来自易语言资源网(www.wodesoft.com)
    .如果真结束
    
.判断结束
返回 (ret)

.子程序 查找文本_42, 整数型, , *
.参数 Max, 空白型, , 
.参数 Cur, 空白型, , 

赋值 (匹配数据., -1)
加入成员 (匹配数据., 取文本栈数据 (匹配文本))
返回 (1)

.子程序 查找文本_63, 整数型, , ?
.参数 Max, 空白型, , 
.参数 Cur, 空白型, , 

.局部变量 ret, 空白型, , , 

 ' 本源码来自易语言资源网(www.wodesoft.com)
加入成员 (匹配数据., 取文本栈数据 (匹配文本))
赋值 (ret, CharNextExA (0, 匹配文本, 0))
.如果真 (并且 (等于 (Max, Cur), 不等于 (读地址_1 (ret, 0), 0), 不等于 (匹配数据., -1)))
    赋值 (ret, 0)
.如果真结束
置文本栈数据 (匹配文本, ret)
返回 (ret)

.子程序 搜索, 逻辑型, , 
.局部变量 max, 空白型, , , 
.局部变量 i, 空白型, , , 
.局部变量 旧值, 空白型, , , 

.如果真 (等于 (匹配文本, “”))
    返回 (假)
.如果真结束
赋值 (max, 取数组成员数 (匹配数据.))
赋值 (旧值, 取数组成员数 (匹配数据.))
.计次循环首 (旧值, i)
    .如果真 (不等于 (匹配数据. [i], 调用地址 [42]))
        赋值 (i, 相加 (i, 1))
        .如果真 (小于 (i, 旧值))
            置文本栈数据 (匹配文本, 匹配数据. [i])
        .如果真结束
        跳出循环 ()
    .如果真结束
     ' 本源码来自易语言资源网(www.wodesoft.com)
.计次循环尾 ()
删除成员 (匹配数据., 1, 旧值)
赋值 (旧值, 取文本栈数据 (匹配文本))
.计次循环首 (max, i)
    赋值 (i, 调用子程序3 (匹配数据. [i], 取参数栈数据 (2), max, i))
    .如果真 (等于 (i, 0))
        .如果真 (不等于 (旧值, 取文本栈数据 (匹配文本)))
            返回 (搜索 ())
        .如果真结束
        返回 (假)
    .如果真结束
    
.计次循环尾 ()
返回 (真)

.子程序 置解析文本, 逻辑型, 公开, 
.参数 通配符文本, 文本型, , 
.参数 是否匹配字母, 逻辑型, 可空, 

.局部变量 a, 空白型, , , 
.局部变量 b, 空白型, , , 
.局部变量 i, 空白型, , , 
.局部变量 x, 空白型, , , 
.局部变量 y, 空白型, , , 

.如果真 (等于 (通配符文本, “”))
    返回 (假)
.如果真结束
赋值 (匹配字母, 是否匹配字母)
删除成员 (匹配数据., 1, 取数组成员数 (匹配数据.))
删除成员 (匹配数据., 1, 取数组成员数 (匹配数据.))
赋值 (i, 取文本栈数据 (通配符文本))
赋值 (a, _crt_strpbrk_ (i, “*?”))
.判断循环首 (不等于 (a, 0))
    赋值 (x, 置地址_1 (a, 0, 0))
    .如果真 (不等于 (读地址_1 (i, 0), 0))
        加入成员 (匹配数据., 指针到文本_ (i))
        加入成员 (匹配数据., 调用地址 [1])
    .如果真结束
    置地址_1 (a, 0, x)
    加入成员 (匹配数据.匹配数据, 字符 (x))
    加入成员 (匹配数据., 调用地址 [x])
    赋值 (i, 相加 (a, 1))
    赋值 (a, _crt_strpbrk_ (i, “*?”))
.判断循环尾 ()
.如果真 (不等于 (读地址_1 (i, 0), 0))
    加入成员 (匹配数据., 指针到文本_ (i))
    加入成员 (匹配数据., 调用地址 [1])
.如果真结束
返回 (真)

.子程序 置搜索文本, 空白型, 公开, 
.参数 被匹配文本, 文本型, , 

赋值 (匹配数据., 被匹配文本)
删除成员 (匹配数据., 1, 取数组成员数 (匹配数据.))
置文本栈数据 (匹配文本, 取文本栈数据 (匹配数据.))

.子程序 是否匹配, 逻辑型, 公开, 
.参数 被匹配文本, 文本型, 可空, 

.局部变量 a, 空白型, , , 
.局部变量 i, 空白型, , , 

.如果真 (不等于 (是否为空 (被匹配文本), 真))
    置搜索文本 (被匹配文本)
.如果真结束
赋值 (a, 取数组成员数 (匹配数据.))
.如果真 (不等于 (a, 0))
    赋值 (i, 匹配数据. [1])
.如果真结束
.如果真 (并且 (搜索 (), 不等于 (匹配数据. [1], i)))
    返回 (真)
.如果真结束
返回 (假)

.子程序 取出文本, 文本型, 公开, 
.参数 位置1, 空白型, , 
.参数 位置2, 空白型, 可空, 

.局部变量 成员, 空白型, , , 
.局部变量 a, 空白型, , , 
.局部变量 b, 空白型, , , 
.局部变量 文本, 文本型, , , 

赋值 (成员, 取数组成员数 (匹配数据.))
.如果真 (并且 (大于 (位置1, 0), 小于或等于 (位置1, 成员), 小于或等于 (位置2, 成员)))
    .如果真 (大于 (位置1, 位置2))
        赋值 (位置2, 位置1)
    .如果真结束
    赋值 (a, 匹配数据. [位置1])
    .如果真 (小于或等于 (位置2, 成员))
        .如果 (等于 (匹配数据. [位置2], 调用地址 [42]))
            .变量循环首 (位置2, 成员, 1, 位置2)
                .如果真 (等于 (匹配数据. [位置2], 调用地址 [1]))
                    赋值 (b, 匹配数据. [位置2])
                    跳出循环 ()
                .如果真结束
                 ' 本源码来自易语言资源网(www.wodesoft.com)
            .变量循环尾 ()
        .否则
            赋值 (位置2, 相加 (位置2, 1))
            .如果真 (大于 (位置2, 成员))
                赋值 (位置2, 成员)
            .如果真结束
            赋值 (b, 匹配数据. [位置2])
        .如果结束
        
    .如果真结束
    .如果 (等于 (b, 0))
        赋值 (b, 取文本长度 (指针到文本_ (a)))
    .否则
        赋值 (b, 相减 (b, a))
    .如果结束
    .如果真 (大于 (b, 0))
        赋值 (文本, 取空白文本 (b))
        拷贝内存_ (取文本栈数据 (文本), a, b)
    .如果真结束
    ' 本源码来自易语言资源网(www.wodesoft.com)
.如果真结束
返回 (文本)

.程序集 应用程序集, , , 

.子程序 读地址_4, 整数型, 公开, 
.参数 地址指针, 整数型, , 
.参数 地址偏移, 整数型, , 

置入代码 ({ 93, 89, 88, 90, 139, 4, 16, 255, 225 })
 ' 本源码来自易语言资源网(www.wodesoft.com)
返回 (0)

.子程序 读地址_1, 整数型, 公开, 
.参数 地址指针, 整数型, , 
.参数 地址偏移, 整数型, , 

置入代码 ({ 93, 89, 91, 90, 51, 192, 138, 4, 26, 255, 225 })
返回 (0)

.子程序 置地址_1, 整数型, 公开, 
.参数 地址指针, 整数型, , 
.参数 地址偏移, 整数型, , 
.参数 地址数值, 整数型, , 

置入代码 ({ 93, 89, 88, 90, 91, 134, 28, 16, 15, 182, 195, 255, 225 })
返回 (0)

.子程序 取参数栈数据, 整数型, 公开, 1为返回地址、2为第一个参数位置
.参数 参数位置, 整数型, , 

置入代码 (相加 ({ 201, 88, 141, 64, 251, 198, 0 }, { 88 }, { 199, 64, 1 }, { 139, 68, 133, 0 }, { 255, 224 }))
 ' 本源码来自易语言资源网(www.wodesoft.com)
返回 (0)

.子程序 取文本栈数据, 整数型, 公开, 变量
.参数 文本变量, 文本型, 参考, 

置入代码 (相加 ({ 201, 88, 141, 64, 251, 198, 0 }, { 88 }, { 199, 64, 1 }, { 139, 0, 139, 255 }, { 255, 224 }))
返回 (0)

.子程序 置文本栈数据, 整数型, 公开, 返回旧值
.参数 文本变量, 文本型, 参考, 
.参数 栈数据, 整数型, , 

置入代码 (相加 ({ 201, 88, 141, 64, 251, 198, 0 }, { 90 }, { 199, 64, 1 }, { 139, 2, 143, 2 }, { 255, 224 }))
返回 (0)

.子程序 _crt_strpbrk_, 整数型, , 
.参数 lpstr, 整数型, , 
.参数 chars, 文本型, , 

置入代码 (相加 ({ 139, 69, 12, 255, 48 }, { 255, 117, 8 }))
返回 (crt_strpbrk ())

.子程序 调用子程序3, 整数型, , 
.参数 子程序, 整数型, , 
.参数 参数1, 空白型, , 
.参数 参数2, 空白型, , 
.参数 参数3, 空白型, , 

置入代码 ({ 201, 88, 135, 4, 36, 255, 224 })
' 本源码来自易语言资源网(www.wodesoft.com)
返回 (0)

.窗口程序集 窗口程序集1, , , 

.子程序 __启动窗口_创建完毕, 空白型, , 
.局部变量 匹配符类, 匹配符类, , , 

匹配符类.置解析文本 (“*title=?《*>*</a>*<td class=?list3*>*<a href*>*</a><br />*”, 真)
匹配符类.置搜索文本 (到文本 (未知支持库函数_7 (“http://bbs.eyuyan.com/index.asp?boardid=124”)))
.判断循环首 (匹配符类.是否匹配 ())
    调试输出 (匹配符类.取出文本 (7), 匹配符类.取出文本 (19))
    ' 本源码来自易语言资源网(www.wodesoft.com)
.判断循环尾 ()


 ' 不属于任何一个程序集、类模块的函数：
