 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：本源码来自易语言资源网(www.5A5X.com)
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：             易语言资源网注意事项
--============   www.5A5X.com  =============--
* 易语言资源网为易语言官方站、易语言官方论坛提供辅助资源站；本易语言资源网( www.5A5X.com)所有软件和资料均为软件作者提供和网友推荐发布而来，其版权归该软件和程序源码的合法拥有者所有，本站易语言资源网整理收集仅供易语言用户学习和易语言技术研究探讨使用，不得用于任何商业用途。如果由于以上原因造成的版权纠纷本站概不负责！
* 本站资源未经许可,任何网站不得非法盗链及抄袭本站资源；如引用，请注明来自易语言资源网，谢谢合作！
--============   www.5A5X.com  =============--
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 866
    高度 = 669
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 0
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 真
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    窗口类名 = “”
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “斗牛      思娇屠虎  出品   Q群：137307746   说明:先下注发牌,再选三张牌凑成十的倍数,如果无牛点击"无牛"按钮快速结束此局。花牌为10，A为1”
    帮助文件名 = “”



.常量 说明, "“说明:
    先下注发牌,再选三张
牌凑成十的倍数,如果无牛
点击"无牛"按钮快速结束
此局。花牌为十，A为一
”", , 
.常量 常量_牌, "“,01,02,03,04,05,06,07,08,09,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52”", , 
.图片 牌图集, " ' 已保存到：D:\易语言学习\Data\扑克－斗牛.e\牌图集", , 70*96
.图片 牛_0, " ' 已保存到：D:\易语言学习\Data\扑克－斗牛.e\牛_0", , 
.图片 牛_1, " ' 已保存到：D:\易语言学习\Data\扑克－斗牛.e\牛_1", , 
.图片 牛_2, " ' 已保存到：D:\易语言学习\Data\扑克－斗牛.e\牛_2", , 
.图片 牛_3, " ' 已保存到：D:\易语言学习\Data\扑克－斗牛.e\牛_3", , 
.图片 牛_4, " ' 已保存到：D:\易语言学习\Data\扑克－斗牛.e\牛_4", , 
.图片 牛_5, " ' 已保存到：D:\易语言学习\Data\扑克－斗牛.e\牛_5", , 
.图片 牛_6, " ' 已保存到：D:\易语言学习\Data\扑克－斗牛.e\牛_6", , 
.图片 牛_7, " ' 已保存到：D:\易语言学习\Data\扑克－斗牛.e\牛_7", , 
.图片 牛_8, " ' 已保存到：D:\易语言学习\Data\扑克－斗牛.e\牛_8", , 
.图片 牛_9, " ' 已保存到：D:\易语言学习\Data\扑克－斗牛.e\牛_9", , 
.图片 牛_牛, " ' 已保存到：D:\易语言学习\Data\扑克－斗牛.e\牛_牛", , 
.图片 牛_银, "", , 
.图片 牛_金, "", , 
.图片 牛_花, "", , 
.图片 牛_小, "", , 
.图片 牛_炸, "", , 
.图片 庄_, " ' 已保存到：D:\易语言学习\Data\扑克－斗牛.e\庄_", , 
.图片 , , , 
.图片 底图_1, " ' 已保存到：D:\易语言学习\Data\扑克－斗牛.e\底图_1", , 
.图片 底图_2, " ' 已保存到：D:\易语言学习\Data\扑克－斗牛.e\底图_2", , 
.图片 底图_3, " ' 已保存到：D:\易语言学习\Data\扑克－斗牛.e\底图_3", , 
.图片 底图_4, " ' 已保存到：D:\易语言学习\Data\扑克－斗牛.e\底图_4", , 
.图片 , , , 
.图片 选取_0, " ' 已保存到：D:\易语言学习\Data\扑克－斗牛.e\选取_0", , 
.图片 选取_1, " ' 已保存到：D:\易语言学习\Data\扑克－斗牛.e\选取_1", , 
.图片 , , , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 5 0 系统核心支持库
 ' EDataStructure 0AFF5F28B2CB42ce906AA27D6E485457 2 0 数据结构支持库




数据类型 BITMAPINFOHEADER, , 
    .成员 biSize, 整数型, , , 
    .成员 biWidth, 整数型, , , 
    .成员 biHeight, 整数型, , , 
    .成员 biPlanes, 短整数型, , , 
    .成员 biBitCount, 短整数型, , , 
    .成员 biCompression, 整数型, , , 
    .成员 biSizeImage, 整数型, , , 
    .成员 biXPelsPerMeter, 整数型, , , 
    .成员 biYPelsPerMeter, 整数型, , , 
    .成员 biClrUsed, 整数型, , , 
    .成员 biClrImportant, 整数型, , , 

数据类型 文件头信息_, , 
    .成员 文件类型, 短整数型, , , bfType
    .成员 结果大小, 整数型, , , bfSize
    .成员 保留1, 短整数型, , , bfReserved1保留，必须设置为0
    .成员 保留2, 短整数型, , , bfReserved2保留，必须设置为0
    .成员 偏移量, 空白型, , , bfOffBits从文件头开始到实际的图象数据之间的字节的偏移量

数据类型 牌集, , 
    .成员 牌1, 空白型, , , 
    .成员 牌2, 空白型, , , 
    .成员 牌3, 空白型, , , 
    .成员 牌4, 空白型, , , 
    .成员 牌5, 空白型, , , 


.DLL命令 复制内存_复制位图信息头到字节集, 空白型, "", "RtlMoveMemory", , 
    .参数 Dest, 字节型, 传址, 
    .参数 Src, BITMAPINFOHEADER, , 
    .参数 len, 整数型, , 

.DLL命令 复制内存_复制位图文件头到字节集, 空白型, "", "RtlMoveMemory", , 
    .参数 Dest, 字节型, 传址, 
    .参数 Src, 文件头信息_, , 
    .参数 len, 整数型, , 

.DLL命令 复制内存_字节集到字节集, 空白型, "", "RtlMoveMemory", , 
    .参数 Dest, 字节型, 传址, 
    .参数 Src, 字节型, 传址, 
    .参数 len, 整数型, , 

.窗口程序集 窗口程序集1, , , 

.程序集变量 牌, 字节集, , "56", 
.程序集变量 庄_图片号, 整数型, , , 
.程序集变量 牌_数值, 整数型, , "20", 
.程序集变量 玩家牌值, 整数型, , "5", 
.程序集变量 总注, 整数型, , , 
.程序集变量 财富, 整数型, , "4", 1,2,3,4，右，上，左，下
.程序集变量 下注, 整数型, , "4", 1,2,3,4，右，上，左，下
.程序集变量 牛集, 字节集, , "16", 
.程序集变量 已发牌, 逻辑型, , , 
.程序集变量 已选牌, 逻辑型, , "5", 
.程序集变量 选中张数, 整数型, , , 
.程序集变量 庄, 逻辑型, , "4", 1,2,3,4，右，上，左，下
.程序集变量 玩家结果, 牌集, , "4", 
.程序集变量 匿名程序集变量_859, 空白型, , , 
.程序集变量 已置手形, 逻辑型, , , 
.程序集变量 匿名程序集变量_870, 空白型, , , 
.程序集变量 底图_选取, 逻辑型, , "4", 
.程序集变量 底图_, 字节集, , , 
.程序集变量 匿名程序集变量_1143, 空白型, , , 
.程序集变量 开关, 逻辑型, , "9", 
.子程序 __启动窗口_创建完毕, 空白型, , 
.局部变量 字体, 字体, , , 
.局部变量 a, 空白型, , , 
.局部变量 x, 空白型, , , 
.局部变量 y, 空白型, , , 

 ' --========  易语言资源网  (www.5A5X.com)  ======--
 ' 努力创建完善、持续更新的易语言学习例程源码资源站
 ' --================   www.5A5X.com  ===========--
 ' --==================   易语言资源网注意事项  ================--
 ' * 易语言资源网为易语言官方站、易语言官方论坛提供辅助资源站；
 ' 本易语言资源网( www.5A5X.com)所有软件和资料均为软件作者提
 ' 供和网友推荐发布而来，其版权归该软件和程序源码的合法拥有者所
 ' 有，本站易语言资源网整理收集仅供易语言用户学习和易语言技术研
 ' 究探讨使用，不得用于任何商业用途。如果由于以上原因造成的版权
 ' 纠纷本站概不负责！
 ' * 本站资源未经许可，任何网站不得非法盗链及抄袭本站资源；如引用
 ' 页面，请注明来自易语言资源网，谢谢合作！
 ' --=====================   www.5A5X.com  ================--

 ' 分割牌
.计次循环首 (14, x)
    .计次循环首 (4, y)
        赋值 (a, 相加 (a, 1))
        赋值 (牌 [a], 分割位图 (#牌图集, 相减 (相乘 (x, 71), 71), 相减 (相乘 (y, 96), 96), 71, 96))
    .计次循环尾 ()
.计次循环尾 ()
 ' 本源码来自易语言资源网(www.5A5X.com)
赋值 (底图_, 牌 [55])

载入图片 (#选取_1).画图片 (9, 9, , , )
赋值 (底图_选取 [1], 真)
赋值 (底图_, #底图_1)

 ' 写四面玩家名字
赋值 (.文本颜色, #红色)
赋值 (字体.字体名称, “黑体”)
赋值 (字体.加粗, 真)
赋值 (字体.字体大小, 20)
赋值 (.字体, 字体)
350.定位写出 (2, “北”) ' 上
350.定位写出 (610, “南”) ' 下
5.定位写出 (310, “西”) ' 左
820.定位写出 (310, “东”) ' 右
 ' 画板_介面.定位写出 (5, 550, #说明)
 ' 本源码来自易语言资源网(www.5A5X.com)
 ' 写总注
赋值 (.文本颜色, #粉红)
赋值 (.字体, 字体)
400.定位写出 (335, “5000”) ' 右

赋值 (牛集 [1], #牛_1)
赋值 (牛集 [2], #牛_2)
赋值 (牛集 [3], #牛_3)
赋值 (牛集 [4], #牛_4)
赋值 (牛集 [5], #牛_5)
赋值 (牛集 [6], #牛_6)
赋值 (牛集 [7], #牛_7)
赋值 (牛集 [8], #牛_8)
赋值 (牛集 [9], #牛_9)
赋值 (牛集 [10], #牛_牛)
赋值 (牛集 [11], #牛_银)
赋值 (牛集 [12], #牛_金)
赋值 (牛集 [13], #牛_炸)
赋值 (牛集 [14], #牛_花)
赋值 (牛集 [15], #牛_小)
赋值 (牛集 [16], #牛_0)

赋值 (庄_图片号, 载入图片 (#庄_))
连续赋值 (1000000, 财富 [1], 财富 [2], 财富 [3], 财富 [4])
赋值 (庄 [4], 真)
.如果真 (庄 [4])
    庄_图片号.画图片 (286, 595, , , ) ' 下
    赋值 (财富 [4], 相减 (财富 [4], 5000))
    赋值 (总注, 5000)
.如果真结束
.如果真 (庄 [1])
    庄_图片号.画图片 (816, 224, , , ) ' 右
    赋值 (财富 [1], 相减 (财富 [1], 5000))
    赋值 (总注, 5000)
.如果真结束
.如果真 (庄 [2])
    庄_图片号.画图片 (294, 11, , , ) ' 上
    赋值 (财富 [2], 相减 (财富 [2], 5000))
    赋值 (总注, 5000)
.如果真结束
.如果真 (庄 [3])
    庄_图片号.画图片 (14, 227, , , ) ' 左
    赋值 (财富 [3], 相减 (财富 [3], 5000))
    赋值 (总注, 5000)
.如果真结束
 ' 本源码来自易语言资源网(www.5A5X.com)
赋值 (.文本颜色, #黄色)
赋值 (字体.字体名称, “宋体”)
赋值 (字体.字体大小, 12)
赋值 (.字体, 字体)

80.定位写出 (390, 相加 (“财富: ”, 到文本 (财富 [3]))) ' 左
390.定位写出 (10, 相加 (“ 财富: ”, 到文本 (财富 [2]))) ' 上
660.定位写出 (390, 相加 (“财富: ”, 到文本 (财富 [1]))) ' 右
400.定位写出 (615, 相加 (“财富: ”, 到文本 (财富 [4]))) ' 下


.如果真 (等于 (庄 [4], 真))
    显示操作按钮 (0)
.如果真结束


.子程序 初始化牌局, 空白型, , 
.局部变量 字体, 字体, , , 
.局部变量 牌_数, 空白型, , , 
.局部变量 牌_位置, 整数型, , , 
.局部变量 数据, 文本型, , , 
.局部变量 结果, 文本型, , , 
.局部变量 变量, 空白型, , , 
.局部变量 a, 整数型, , , 
.局部变量 x, 空白型, , , 
.局部变量 图片, 字节集, , , 
.局部变量 b, 整数型, , , 
.局部变量 匿名局部变量_667, 空白型, , , 
.局部变量 过滤, 未知类型0x20001, , , 

处理事件 ()
赋值 (.禁止, 真)
 ' 本源码来自易语言资源网(www.5A5X.com)
0.清除 (47, , )
100.清除 (0, 766, 47)
处理事件 ()
连续赋值 (0, 下注 [1], 下注 [2], 下注 [3])
 ' 写玩家名字
赋值 (.文本颜色, #红色)
赋值 (字体.字体名称, “黑体”)
赋值 (字体.加粗, 真)
赋值 (字体.字体大小, 20)
赋值 (.字体, 字体)
350.定位写出 (2, “北”) ' 上
350.定位写出 (610, “南”) ' 下
5.定位写出 (310, “西”) ' 左
820.定位写出 (310, “东”) ' 右

重定义数组 (玩家牌值, 假, 5)
重定义数组 (玩家结果, 假, 4)

 ' 画庄，做庄下注
 ' 本源码来自易语言资源网(www.5A5X.com)
.如果真 (并且 (庄 [4], 等于 (总注, 0)))
    庄_图片号.画图片 (286, 595, , , ) ' 下
    赋值 (财富 [4], 相减 (财富 [4], 5000))
    赋值 (总注, 5000)
.如果真结束
.如果真 (并且 (庄 [1], 等于 (总注, 0)))
    庄_图片号.画图片 (816, 224, , , ) ' 右
    赋值 (财富 [1], 相减 (财富 [1], 5000))
    赋值 (总注, 5000)
.如果真结束
.如果真 (并且 (庄 [2], 等于 (总注, 0)))
    庄_图片号.画图片 (294, 11, , , ) ' 上
    赋值 (财富 [2], 相减 (财富 [2], 5000))
    赋值 (总注, 5000)
.如果真结束
.如果真 (并且 (庄 [3], 等于 (总注, 0)))
    庄_图片号.画图片 (14, 227, , , ) ' 左
    赋值 (财富 [3], 相减 (财富 [3], 5000))
    赋值 (总注, 5000)
.如果真结束

 ' 画庄
.如果真 (庄 [4])
    庄_图片号.画图片 (286, 595, , , ) ' 下
.如果真结束
.如果真 (庄 [1])
    庄_图片号.画图片 (816, 224, , , ) ' 右
.如果真结束
.如果真 (庄 [2])
    庄_图片号.画图片 (294, 11, , , ) ' 上
.如果真结束
.如果真 (庄 [3])
    庄_图片号.画图片 (14, 227, , , ) ' 左
.如果真结束

 ' 下注
赋值 (.文本颜色, #黄色)
赋值 (字体.字体名称, “黑体”)
赋值 (字体.加粗, 真)
赋值 (字体.字体大小, 12)
赋值 (.字体, 字体)
 ' 本源码来自易语言资源网(www.5A5X.com)
 ' 写注码,,中间
置随机数种子 ()
.如果真 (等于 (庄 [4], 假))
    520.清除 (472, 50, 20)
    590.清除 (460, , )
    赋值 (财富 [4], 相减 (财富 [4], 下注 [4]))
    410.定位写出 (420, 到文本 (下注 [4])) ' 下
    处理事件 ()
.如果真结束
.如果真 (等于 (庄 [1], 假))
    赋值 (下注 [1], 相乘 (取随机数 (1, 5), 100))
    赋值 (财富 [1], 相减 (财富 [1], 下注 [1]))
    495.定位写出 (345, 到文本 (下注 [1])) ' 右
.如果真结束
.如果真 (等于 (庄 [2], 假))
    赋值 (下注 [2], 相乘 (取随机数 (1, 5), 100))
    赋值 (财富 [2], 相减 (财富 [2], 下注 [2]))
    410.定位写出 (255, 到文本 (下注 [2])) ' 上
.如果真结束
.如果真 (等于 (庄 [3], 假))
    赋值 (下注 [3], 相乘 (取随机数 (1, 5), 100))
    赋值 (财富 [3], 相减 (财富 [3], 下注 [3]))
    325.定位写出 (345, 到文本 (下注 [3])) ' 左
.如果真结束

 ' 写下注后各剩财富值
660.定位写出 (390, 相加 (“财富: ”, 到文本 (财富 [1]))) ' 右
390.定位写出 (10, 相加 (“ 财富: ”, 到文本 (财富 [2]))) ' 上
80.定位写出 (390, 相加 (“财富: ”, 到文本 (财富 [3]))) ' 左
400.定位写出 (615, 相加 (“财富: ”, 到文本 (财富 [4]))) ' 下

 ' 写总注
赋值 (.文本颜色, #粉红)
赋值 (字体.字体名称, “黑体”)
赋值 (字体.字体大小, 20)
赋值 (.字体, 字体)
400.定位写出 (335, 到文本 (总注)) ' 右


 ' 连续赋值 (0, 牌_数值 [1], 牌_数值 [2], 牌_数值 [3], 牌_数值 [4])
 ' 发牌
赋值 (数据, #常量_牌)
.计次循环首 (20, a)
    
    赋值 (变量, 取随机数 (0, 相减 (相除 (取文本长度 (数据), 3), 1)))
    赋值 (结果, 取文本中间 (数据, 相加 (相乘 (变量, 3), 1), 3))
    赋值 (数据, 文本替换 (数据, 相加 (相乘 (变量, 3), 1), 3, “”))
    赋值 (结果, 取文本右边 (结果, 2))
    
    赋值 (牌_数值 [a], 到整数 (结果))
    .如果真 (等于 (牌_位置, 0))
        载入图片 (底图_).画图片 (相加 (相乘 (x, 20), 642), 278, , , ) ' 右
    .如果真结束
    .如果真 (等于 (牌_位置, 1))
        载入图片 (底图_).画图片 (相加 (相乘 (x, 20), 348), 38, , , ) ' 上
    .如果真结束
    .如果真 (等于 (牌_位置, 2))
        载入图片 (底图_).画图片 (相加 (相乘 (x, 20), 58), 278, , , ) ' 左
    .如果真结束
    .如果真 (等于 (牌_位置, 3))
        载入图片 (牌 [牌_数值] [a]).画图片 (相加 (相乘 (x, 20), 349), 505, , , ) ' 下
        赋值 (b, 相加 (b, 1))
        赋值 (玩家牌值 [b], 牌_数值 [a])
        
    .如果真结束
    赋值 (牌_位置, 相加 (牌_位置, 1))
    .如果真 (大于 (牌_位置, 3))
        赋值 (牌_位置, 0)
        赋值 (x, 相加 (x, 1))
    .如果真结束
    延时 (50) ' 发牌效果
.计次循环尾 ()
显示操作按钮 (1)

赋值 (已发牌, 真)
连续赋值 (假, 已选牌 [1], 已选牌 [2], 已选牌 [3], 已选牌 [4], 已选牌 [5])
赋值 (选中张数, 0)
赋值 (.禁止, 假)


.子程序 显示操作按钮, 空白型, , 
.参数 画板_, 画板, , 
.参数 类, 整数型, , 

.局部变量 字体, 字体, , , 

画板_.清除 (520, 450, , )

赋值 (字体.加粗, 真)
赋值 (字体.字体大小, 16)
赋值 (字体.字体名称, “宋体”)
赋值 (画板_.文本颜色, #白色)
赋值 (画板_.字体, 字体)
赋值 (画板_.画笔颜色, #黑色)
赋值 (画板_.刷子类型, 0)
.如果真 (等于 (类, 0)) ' 画“开始”按钮
    画板_.画渐变矩形 (520, 470, 50, 25, 1, #粉红, #紫红)
    画板_.定位写出 (522, 472, “发牌”)
    画板_.画矩形 (520, 470, 570, 497)
.如果真结束
.如果真 (等于 (类, 1))
    580.画渐变矩形 (470, 50, 25, 1, #粉红, #紫红)
    582.定位写出 (472, “结束”) ' 画无牛
    画板_.画矩形 (580, 470, 630, 495)
.如果真结束
.如果真 (等于 (类, 2)) ' 画“收庄”+“发牌”
    画板_.画渐变矩形 (520, 470, 50, 25, 1, #粉红, #紫红)
    画板_.定位写出 (522, 472, “发牌”)
    画板_.画矩形 (520, 470, 570, 497)
    
    640.画渐变矩形 (470, 50, 25, 1, #粉红, #紫红)
    642.定位写出 (472, “收庄”) ' 画无牛
    画板_.画矩形 (640, 470, 690, 495)
.如果真结束
.如果真 (等于 (类, 3)) ' 画“下注”按钮
    画板_.定位写出 (540, 472, “请下注：”)
    画板_.画渐变矩形 (580, 510, 40, 25, 1, #粉红, #紫红)
    画板_.画渐变矩形 (640, 510, 40, 25, 1, #粉红, #紫红)
    画板_.画渐变矩形 (700, 510, 40, 25, 1, #粉红, #紫红)
    画板_.画渐变矩形 (580, 570, 40, 25, 1, #粉红, #紫红)
    画板_.画渐变矩形 (640, 570, 40, 25, 1, #粉红, #紫红)
    画板_.画渐变矩形 (700, 570, 40, 25, 1, #粉红, #紫红)
    
    画板_.定位写出 (582, 512, “100”)
    画板_.定位写出 (642, 512, “200”)
    画板_.定位写出 (702, 512, “300”)
    画板_.定位写出 (582, 572, “400”)
    画板_.定位写出 (642, 572, “500”)
    画板_.定位写出 (702, 572, “600”)
    
    画板_.画矩形 (580, 510, 620, 535)
    画板_.画矩形 (640, 510, 680, 535)
    画板_.画矩形 (700, 510, 740, 535)
    画板_.画矩形 (580, 570, 620, 595)
    画板_.画矩形 (640, 570, 680, 595)
    画板_.画矩形 (700, 570, 740, 595)
.如果真结束


.子程序 判断牌, 牌集, , 
.参数 牌值, 牌集, , 

.局部变量 牌_, 整数型, , "5", 
.局部变量 返回值, 牌集, , , 
.局部变量 结果, 逻辑型, , , 

 ' 说明:
 ' 返回值.牌1记录牛，0表示无牛，1－9表示牛1 到牛9
 ' 返回值.牌2，记录着特殊，牛0－牛八1，牛九2，牛年3，银牛4，五花5，炸弹6，五小牛7
 ' 返回值.牌3，记录着倍率;牛0－牛八1倍，牛九2倍，牛年4倍，银牛5倍，五花7倍，炸弹9倍,五小牛10倍：
 ' 返回值.牌4，记录着
 ' 返回值.牌5，记录着一手牌中最大的一张牌的值，
赋值 (返回值.牌3, 1)

 ' 牌点数
未知函数_1389 () ' *** 缩略程序块 ***
.如果 (大于 (求余数 (牌值.牌1, 4), 0))
    赋值 (牌_ [1], 相加 (整除 (牌值.牌1, 4), 1))
.否则
    赋值 (牌_ [1], 整除 (牌值.牌1, 4))
.如果结束
.如果 (大于 (求余数 (牌值.牌2, 4), 0))
    赋值 (牌_ [2], 相加 (整除 (牌值.牌2, 4), 1))
.否则
    赋值 (牌_ [2], 整除 (牌值.牌2, 4))
.如果结束
.如果 (大于 (求余数 (牌值.牌3, 4), 0))
    赋值 (牌_ [3], 相加 (整除 (牌值.牌3, 4), 1))
.否则
    赋值 (牌_ [3], 整除 (牌值.牌3, 4))
.如果结束
.如果 (大于 (求余数 (牌值.牌4, 4), 0))
    赋值 (牌_ [4], 相加 (整除 (牌值.牌4, 4), 1))
.否则
    赋值 (牌_ [4], 整除 (牌值.牌4, 4))
.如果结束
.如果 (大于 (求余数 (牌值.牌5, 4), 0))
    赋值 (牌_ [5], 相加 (整除 (牌值.牌5, 4), 1))
.否则
    赋值 (牌_ [5], 整除 (牌值.牌5, 4))
.如果结束

 ' 判定牛
未知函数_12260 () ' *** 缩略程序块 ***
 ' 判断是否有牛，这样写看得清些
.如果真 (等于 (结果, 假))
    .如果 (大于 (牌_ [1], 10)) ' 第一种情况 1,2,3--4,5
        赋值 (返回值.牌1, 10)
    .否则
        赋值 (返回值.牌1, 牌_ [1])
    .如果结束
    .如果 (大于 (牌_ [2], 10))
        赋值 (返回值.牌1, 相加 (返回值.牌1, 10))
    .否则
        赋值 (返回值.牌1, 相加 (返回值.牌1, 牌_ [2]))
    .如果结束
    .如果 (大于 (牌_ [3], 10))
        赋值 (返回值.牌1, 相加 (返回值.牌1, 10))
    .否则
        赋值 (返回值.牌1, 相加 (返回值.牌1, 牌_ [3]))
    .如果结束
    .如果真 (等于 (求余数 (返回值.牌1, 10), 0)) ' 如果前三张牌相加为10的倍数，表示有牛
        赋值 (结果, 真)
        .如果 (大于 (牌_ [4], 10))
            赋值 (返回值.牌1, 10)
        .否则
            赋值 (返回值.牌1, 牌_ [4])
        .如果结束
        .如果 (大于 (牌_ [5], 10))
            赋值 (返回值.牌1, 相加 (返回值.牌1, 10))
        .否则
            赋值 (返回值.牌1, 相加 (返回值.牌1, 牌_ [5]))
        .如果结束
        
    .如果真结束
    
.如果真结束
.如果真 (等于 (结果, 假))
    .如果 (大于 (牌_ [1], 10)) ' 第二种情况,1,2,4-3,5
        赋值 (返回值.牌1, 10)
    .否则
        赋值 (返回值.牌1, 牌_ [1])
    .如果结束
    .如果 (大于 (牌_ [2], 10))
        赋值 (返回值.牌1, 相加 (返回值.牌1, 10))
    .否则
        赋值 (返回值.牌1, 相加 (返回值.牌1, 牌_ [2]))
    .如果结束
    .如果 (大于 (牌_ [4], 10))
        赋值 (返回值.牌1, 相加 (返回值.牌1, 10))
    .否则
        赋值 (返回值.牌1, 相加 (返回值.牌1, 牌_ [4]))
    .如果结束
    .如果真 (等于 (求余数 (返回值.牌1, 10), 0))
        赋值 (结果, 真)
        .如果 (大于 (牌_ [3], 10))
            赋值 (返回值.牌1, 10)
        .否则
            赋值 (返回值.牌1, 牌_ [3])
        .如果结束
        .如果 (大于 (牌_ [5], 10))
            赋值 (返回值.牌1, 相加 (返回值.牌1, 10))
        .否则
            赋值 (返回值.牌1, 相加 (返回值.牌1, 牌_ [5]))
        .如果结束
        
    .如果真结束
    
.如果真结束
.如果真 (等于 (结果, 假))
    .如果 (大于 (牌_ [1], 10)) ' 第三种情况,,1,2,5,--3,4
        赋值 (返回值.牌1, 10)
    .否则
        赋值 (返回值.牌1, 牌_ [1])
    .如果结束
    .如果 (大于 (牌_ [2], 10))
        赋值 (返回值.牌1, 相加 (返回值.牌1, 10))
    .否则
        赋值 (返回值.牌1, 相加 (返回值.牌1, 牌_ [2]))
    .如果结束
    .如果 (大于 (牌_ [5], 10))
        赋值 (返回值.牌1, 相加 (返回值.牌1, 10))
    .否则
        赋值 (返回值.牌1, 相加 (返回值.牌1, 牌_ [5]))
    .如果结束
    .如果真 (等于 (求余数 (返回值.牌1, 10), 0))
        赋值 (结果, 真)
        .如果 (大于 (牌_ [3], 10))
            赋值 (返回值.牌1, 10)
        .否则
            赋值 (返回值.牌1, 牌_ [3])
        .如果结束
        .如果 (大于 (牌_ [4], 10))
            赋值 (返回值.牌1, 相加 (返回值.牌1, 10))
        .否则
            赋值 (返回值.牌1, 相加 (返回值.牌1, 牌_ [4]))
        .如果结束
        
    .如果真结束
    
.如果真结束
.如果真 (等于 (结果, 假))
    .如果 (大于 (牌_ [2], 10)) ' 第四种情况,2,3,4--1,5
        赋值 (返回值.牌1, 10)
    .否则
        赋值 (返回值.牌1, 牌_ [2])
    .如果结束
    .如果 (大于 (牌_ [3], 10))
        赋值 (返回值.牌1, 相加 (返回值.牌1, 10))
    .否则
        赋值 (返回值.牌1, 相加 (返回值.牌1, 牌_ [3]))
    .如果结束
    .如果 (大于 (牌_ [4], 10))
        赋值 (返回值.牌1, 相加 (返回值.牌1, 10))
    .否则
        赋值 (返回值.牌1, 相加 (返回值.牌1, 牌_ [4]))
    .如果结束
    .如果真 (等于 (求余数 (返回值.牌1, 10), 0))
        赋值 (结果, 真)
        .如果 (大于 (牌_ [1], 10))
            赋值 (返回值.牌1, 10)
        .否则
            赋值 (返回值.牌1, 牌_ [1])
        .如果结束
        .如果 (大于 (牌_ [5], 10))
            赋值 (返回值.牌1, 相加 (返回值.牌1, 10))
        .否则
            赋值 (返回值.牌1, 相加 (返回值.牌1, 牌_ [5]))
        .如果结束
        
    .如果真结束
    
.如果真结束
.如果真 (等于 (结果, 假))
    .如果 (大于 (牌_ [2], 10)) ' 情况,2,3,5--1,4
        赋值 (返回值.牌1, 10)
    .否则
        赋值 (返回值.牌1, 牌_ [2])
    .如果结束
    .如果 (大于 (牌_ [3], 10))
        赋值 (返回值.牌1, 相加 (返回值.牌1, 10))
    .否则
        赋值 (返回值.牌1, 相加 (返回值.牌1, 牌_ [3]))
    .如果结束
    .如果 (大于 (牌_ [5], 10))
        赋值 (返回值.牌1, 相加 (返回值.牌1, 10))
    .否则
        赋值 (返回值.牌1, 相加 (返回值.牌1, 牌_ [5]))
    .如果结束
    .如果真 (等于 (求余数 (返回值.牌1, 10), 0))
        赋值 (结果, 真)
        .如果 (大于 (牌_ [1], 10))
            赋值 (返回值.牌1, 10)
        .否则
            赋值 (返回值.牌1, 牌_ [1])
        .如果结束
        .如果 (大于 (牌_ [4], 10))
            赋值 (返回值.牌1, 相加 (返回值.牌1, 10))
        .否则
            赋值 (返回值.牌1, 相加 (返回值.牌1, 牌_ [4]))
        .如果结束
        
    .如果真结束
    
.如果真结束
.如果真 (等于 (结果, 假)) ' 情况：1，3，4－－2，5
    .如果 (大于 (牌_ [1], 10))
        赋值 (返回值.牌1, 10)
    .否则
        赋值 (返回值.牌1, 牌_ [1])
    .如果结束
    .如果 (大于 (牌_ [3], 10))
        赋值 (返回值.牌1, 相加 (返回值.牌1, 10))
    .否则
        赋值 (返回值.牌1, 相加 (返回值.牌1, 牌_ [3]))
    .如果结束
    .如果 (大于 (牌_ [4], 10))
        赋值 (返回值.牌1, 相加 (返回值.牌1, 10))
    .否则
        赋值 (返回值.牌1, 相加 (返回值.牌1, 牌_ [4]))
    .如果结束
    .如果真 (等于 (求余数 (返回值.牌1, 10), 0))
        赋值 (结果, 真)
        .如果 (大于 (牌_ [2], 10))
            赋值 (返回值.牌1, 10)
        .否则
            赋值 (返回值.牌1, 牌_ [2])
        .如果结束
        .如果 (大于 (牌_ [5], 10))
            赋值 (返回值.牌1, 相加 (返回值.牌1, 10))
        .否则
            赋值 (返回值.牌1, 相加 (返回值.牌1, 牌_ [5]))
        .如果结束
        
    .如果真结束
    
.如果真结束
.如果真 (等于 (结果, 假)) ' 种情况：1，3，5－－2，4
    .如果 (大于 (牌_ [1], 10))
        赋值 (返回值.牌1, 10)
    .否则
        赋值 (返回值.牌1, 牌_ [1])
    .如果结束
    .如果 (大于 (牌_ [3], 10))
        赋值 (返回值.牌1, 相加 (返回值.牌1, 10))
    .否则
        赋值 (返回值.牌1, 相加 (返回值.牌1, 牌_ [3]))
    .如果结束
    .如果 (大于 (牌_ [5], 10))
        赋值 (返回值.牌1, 相加 (返回值.牌1, 10))
    .否则
        赋值 (返回值.牌1, 相加 (返回值.牌1, 牌_ [5]))
    .如果结束
    .如果真 (等于 (求余数 (返回值.牌1, 10), 0))
        赋值 (结果, 真)
        .如果 (大于 (牌_ [2], 10))
            赋值 (返回值.牌1, 10)
        .否则
            赋值 (返回值.牌1, 牌_ [2])
        .如果结束
        .如果 (大于 (牌_ [4], 10))
            赋值 (返回值.牌1, 相加 (返回值.牌1, 10))
        .否则
            赋值 (返回值.牌1, 相加 (返回值.牌1, 牌_ [4]))
        .如果结束
        
    .如果真结束
    
.如果真结束
.如果真 (等于 (结果, 假)) ' 情况：1，4，5－－2，3
    .如果 (大于 (牌_ [1], 10))
        赋值 (返回值.牌1, 10)
    .否则
        赋值 (返回值.牌1, 牌_ [1])
    .如果结束
    .如果 (大于 (牌_ [4], 10))
        赋值 (返回值.牌1, 相加 (返回值.牌1, 10))
    .否则
        赋值 (返回值.牌1, 相加 (返回值.牌1, 牌_ [4]))
    .如果结束
    .如果 (大于 (牌_ [5], 10))
        赋值 (返回值.牌1, 相加 (返回值.牌1, 10))
    .否则
        赋值 (返回值.牌1, 相加 (返回值.牌1, 牌_ [5]))
    .如果结束
    .如果真 (等于 (求余数 (返回值.牌1, 10), 0))
        赋值 (结果, 真)
        .如果 (大于 (牌_ [2], 10))
            赋值 (返回值.牌1, 10)
        .否则
            赋值 (返回值.牌1, 牌_ [2])
        .如果结束
        .如果 (大于 (牌_ [3], 10))
            赋值 (返回值.牌1, 相加 (返回值.牌1, 10))
        .否则
            赋值 (返回值.牌1, 相加 (返回值.牌1, 牌_ [3]))
        .如果结束
        
    .如果真结束
    
.如果真结束
.如果真 (等于 (结果, 假))
    .如果 (大于 (牌_ [2], 10)) ' 情况;,2,4,5,-1,3
        赋值 (返回值.牌1, 10)
    .否则
        赋值 (返回值.牌1, 牌_ [2])
    .如果结束
    .如果 (大于 (牌_ [4], 10))
        赋值 (返回值.牌1, 相加 (返回值.牌1, 10))
    .否则
        赋值 (返回值.牌1, 相加 (返回值.牌1, 牌_ [4]))
    .如果结束
    .如果 (大于 (牌_ [5], 10))
        赋值 (返回值.牌1, 相加 (返回值.牌1, 10))
    .否则
        赋值 (返回值.牌1, 相加 (返回值.牌1, 牌_ [5]))
    .如果结束
    .如果真 (等于 (求余数 (返回值.牌1, 10), 0))
        赋值 (结果, 真)
        .如果 (大于 (牌_ [1], 10))
            赋值 (返回值.牌1, 10)
        .否则
            赋值 (返回值.牌1, 牌_ [1])
        .如果结束
        .如果 (大于 (牌_ [3], 10))
            赋值 (返回值.牌1, 相加 (返回值.牌1, 10))
        .否则
            赋值 (返回值.牌1, 相加 (返回值.牌1, 牌_ [3]))
        .如果结束
        
    .如果真结束
    
.如果真结束
.如果真 (等于 (结果, 假))
    .如果 (大于 (牌_ [3], 10)) ' 情况,3,4,5,-1,2
        赋值 (返回值.牌1, 10)
    .否则
        赋值 (返回值.牌1, 牌_ [3])
    .如果结束
    .如果 (大于 (牌_ [4], 10))
        赋值 (返回值.牌1, 相加 (返回值.牌1, 10))
    .否则
        赋值 (返回值.牌1, 相加 (返回值.牌1, 牌_ [4]))
    .如果结束
    .如果 (大于 (牌_ [5], 10))
        赋值 (返回值.牌1, 相加 (返回值.牌1, 10))
    .否则
        赋值 (返回值.牌1, 相加 (返回值.牌1, 牌_ [5]))
    .如果结束
    .如果真 (等于 (求余数 (返回值.牌1, 10), 0))
        赋值 (结果, 真)
        .如果 (大于 (牌_ [1], 10))
            赋值 (返回值.牌1, 10)
        .否则
            赋值 (返回值.牌1, 牌_ [1])
        .如果结束
        .如果 (大于 (牌_ [2], 10))
            赋值 (返回值.牌1, 相加 (返回值.牌1, 10))
        .否则
            赋值 (返回值.牌1, 相加 (返回值.牌1, 牌_ [2]))
        .如果结束
        
    .如果真结束
    
.如果真结束


 ' 判断一些特殊牌,1银牛,2五花,3炸弹，4五小
 ' 银牛，4张花牌，一张10
.如果真 (并且 (大于 (牌_ [1], 10), 大于 (牌_ [2], 10), 大于 (牌_ [3], 10), 大于 (牌_ [4], 10), 等于 (牌_ [5], 10)))
    赋值 (返回值.牌2, 1)
    赋值 (返回值.牌3, 5)
.如果真结束
.如果真 (并且 (大于 (牌_ [1], 10), 大于 (牌_ [2], 10), 大于 (牌_ [3], 10), 大于 (牌_ [5], 10), 等于 (牌_ [4], 10)))
    赋值 (返回值.牌2, 1)
    赋值 (返回值.牌3, 5)
.如果真结束
.如果真 (并且 (大于 (牌_ [1], 10), 大于 (牌_ [2], 10), 大于 (牌_ [4], 10), 大于 (牌_ [5], 10), 等于 (牌_ [3], 10)))
    赋值 (返回值.牌2, 1)
    赋值 (返回值.牌3, 5)
.如果真结束
.如果真 (并且 (大于 (牌_ [2], 10), 大于 (牌_ [3], 10), 大于 (牌_ [4], 10), 大于 (牌_ [5], 10), 等于 (牌_ [1], 10)))
    赋值 (返回值.牌2, 1)
    赋值 (返回值.牌3, 5)
.如果真结束
 ' 五花，返回值用，2表示
.如果真 (并且 (大于 (牌_ [1], 10), 大于 (牌_ [2], 10), 大于 (牌_ [3], 10), 大于 (牌_ [4], 10), 大于 (牌_ [5], 10)))
    赋值 (返回值.牌2, 2)
    赋值 (返回值.牌3, 7)
.如果真结束
 ' 炸弹,,返回值用，3表示
.如果真 (并且 (等于 (牌_ [1], 牌_ [2]), 等于 (牌_ [1], 牌_ [3]), 等于 (牌_ [1], 牌_ [4])))
    赋值 (返回值.牌2, 3)
    赋值 (返回值.牌3, 9)
.如果真结束
.如果真 (并且 (等于 (牌_ [1], 牌_ [2]), 等于 (牌_ [1], 牌_ [3]), 等于 (牌_ [1], 牌_ [5])))
    赋值 (返回值.牌2, 3)
    赋值 (返回值.牌3, 9)
.如果真结束
.如果真 (并且 (等于 (牌_ [1], 牌_ [2]), 等于 (牌_ [1], 牌_ [4]), 等于 (牌_ [1], 牌_ [5])))
    赋值 (返回值.牌2, 3)
    赋值 (返回值.牌3, 9)
.如果真结束
.如果真 (并且 (等于 (牌_ [2], 牌_ [3]), 等于 (牌_ [2], 牌_ [4]), 等于 (牌_ [2], 牌_ [5])))
    赋值 (返回值.牌2, 3)
    赋值 (返回值.牌3, 9)
.如果真结束
 ' 五小’返回值用，4表示
.如果真 (并且 (小于 (牌_ [1], 5), 小于 (牌_ [2], 5), 小于 (牌_ [3], 5), 小于 (牌_ [4], 5), 小于 (牌_ [5], 5), 小于 (相加 (牌_ [1], 牌_ [2], 牌_ [3], 牌_ [4], 牌_ [5]), 11)))
    赋值 (返回值.牌2, 10)
.如果真结束

 ' 判定一手牌中最大的一张；，记录在：返回值.牌5
.如果 (大于 (牌值.牌1, 牌值.牌2))
    赋值 (返回值.牌5, 牌值.牌1)
.否则
    赋值 (返回值.牌5, 牌值.牌2)
.如果结束
.如果 (大于 (牌值.牌3, 牌值.牌4))
    .如果 (大于 (牌值.牌3, 牌值.牌5))
        .如果真 (大于 (牌值.牌3, 返回值.牌5))
            赋值 (返回值.牌5, 牌值.牌3)
        .如果真结束
        
    .否则
        .如果真 (小于 (返回值.牌5, 牌值.牌5))
            赋值 (返回值.牌5, 牌值.牌5)
        .如果真结束
        
    .如果结束
    
.否则
    .如果 (大于 (牌值.牌4, 牌值.牌5))
        .如果真 (大于 (牌值.牌4, 返回值.牌5))
            赋值 (返回值.牌5, 牌值.牌4)
        .如果真结束
        
    .否则
        .如果真 (大于 (牌值.牌5, 返回值.牌5))
            赋值 (返回值.牌5, 牌值.牌5)
        .如果真结束
        
    .如果结束
    
.如果结束
.如果真 (并且 (等于 (求余数 (返回值.牌1, 10), 9), 小于 (返回值.牌3, 2))) ' 牛9，2倍
    赋值 (返回值.牌3, 2)
.如果真结束
.如果 (等于 (结果, 假)) ' 到最后，无牛
    赋值 (返回值.牌1, 0)
.否则
    赋值 (返回值.牌1, 求余数 (返回值.牌1, 10))
    .如果真 (等于 (返回值.牌1, 0)) ' 牛牛4倍
        赋值 (返回值.牌1, 10)
        .如果真 (小于 (返回值.牌3, 4))
            赋值 (返回值.牌3, 4)
        .如果真结束
        
    .如果真结束
    
.如果结束

返回 (返回值)

.子程序 _画板_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 选中, 逻辑型, , , 
.局部变量 a, 整数型, , , 
.局部变量 结果, 空白型, , "3", 
.局部变量 匿名局部变量_1014, 空白型, , , 
.局部变量 点中, 逻辑型, , , 
.局部变量 背景图, 整数型, , , 

 ' 判定鼠标位置，选取与取消选取
 ' 判定“发牌”
.如果真 (并且 (等于 (庄 [4], 真), 等于 (已发牌, 假), 大于 (横向位置, 520), 大于 (纵向位置, 470), 小于 (横向位置, 570), 小于 (纵向位置, 497))) ' 520, 470, 570, 497
    赋值 (已发牌, 真)
    520.清除 (470, 50, 25)
    处理事件 ()
    初始化牌局 ()
.如果真结束
.如果真 (并且 (等于 (已发牌, 假), 大于 (横向位置, 640), 大于 (纵向位置, 470), 小于 (横向位置, 690), 小于 (纵向位置, 495), 大于 (总注, 10000))) ' 玩家收庄 640, 470, 50, 25
    赋值 (财富 [4], 相加 (财富 [4], 总注))
    赋值 (总注, 0)
    赋值 (庄 [4], 假)
    赋值 (庄 [1], 真)
    庄_图片号.画图片 (816, 224, , , ) ' 右
    显示操作按钮 (3)
.如果真结束
 ' 选择牌背景图案
未知函数_3845 () ' *** 缩略程序块 ***
 ' 选取牌背景图案
.如果真 (并且 (大于 (横向位置, 9), 大于 (纵向位置, 9), 小于 (横向位置, 21), 小于 (纵向位置, 21)))
    .如果 (等于 (底图_选取 [1], 假))
        载入图片 (#选取_1).画图片 (9, 9, , , )
        赋值 (底图_选取 [1], 真)
        赋值 (底图_, #底图_1)
    .否则
        载入图片 (#选取_0).画图片 (9, 9, , , )
        赋值 (底图_选取 [1], 假)
        赋值 (底图_, 牌 [55])
    .如果结束
    .如果真 (底图_选取 [2])
        载入图片 (#选取_0).画图片 (75, 9, , , )
        赋值 (底图_选取 [2], 假)
    .如果真结束
    .如果真 (底图_选取 [3])
        载入图片 (#选取_0).画图片 (9, 29, , , )
        赋值 (底图_选取 [3], 假)
    .如果真结束
    .如果真 (底图_选取 [4])
        赋值 (底图_选取 [4], 假)
        载入图片 (#选取_0).画图片 (75, 30, , , )
    .如果真结束
    
.如果真结束
.如果真 (并且 (大于 (横向位置, 75), 大于 (纵向位置, 9), 小于 (横向位置, 87), 小于 (纵向位置, 21)))
    .如果 (等于 (底图_选取 [2], 假))
        载入图片 (#选取_1).画图片 (75, 9, , , )
        赋值 (底图_选取 [2], 真)
        赋值 (底图_, #底图_2)
    .否则
        载入图片 (#选取_0).画图片 (75, 9, , , )
        赋值 (底图_选取 [2], 假)
        赋值 (底图_, 牌 [55])
    .如果结束
    .如果真 (底图_选取 [1])
        赋值 (底图_选取 [1], 假)
        载入图片 (#选取_0).画图片 (9, 9, , , )
    .如果真结束
    .如果真 (底图_选取 [3])
        赋值 (底图_选取 [3], 假)
        载入图片 (#选取_0).画图片 (9, 29, , , )
    .如果真结束
    .如果真 (底图_选取 [4])
        赋值 (底图_选取 [4], 假)
        载入图片 (#选取_0).画图片 (75, 30, , , )
    .如果真结束
    
.如果真结束
.如果真 (并且 (大于 (横向位置, 9), 大于 (纵向位置, 29), 小于 (横向位置, 21), 小于 (纵向位置, 42)))
    .如果 (等于 (底图_选取 [3], 假))
        载入图片 (#选取_1).画图片 (9, 29, , , )
        赋值 (底图_选取 [3], 真)
        赋值 (底图_, #底图_3)
    .否则
        载入图片 (#选取_0).画图片 (9, 29, , , )
        赋值 (底图_选取 [3], 假)
        赋值 (底图_, 牌 [55])
    .如果结束
    .如果真 (底图_选取 [1])
        赋值 (底图_选取 [1], 假)
        载入图片 (#选取_0).画图片 (9, 9, , , )
    .如果真结束
    .如果真 (底图_选取 [2])
        赋值 (底图_选取 [2], 假)
        载入图片 (#选取_0).画图片 (75, 9, , , )
    .如果真结束
    .如果真 (底图_选取 [4])
        赋值 (底图_选取 [4], 假)
        载入图片 (#选取_0).画图片 (75, 30, , , )
    .如果真结束
    
.如果真结束
.如果真 (并且 (大于 (横向位置, 75), 大于 (纵向位置, 30), 小于 (横向位置, 87), 小于 (纵向位置, 42)))
    .如果 (等于 (底图_选取 [4], 假))
        载入图片 (#选取_1).画图片 (75, 30, , , )
        赋值 (底图_选取 [4], 真)
        赋值 (底图_, #底图_4)
    .否则
        载入图片 (#选取_0).画图片 (75, 30, , , )
        赋值 (底图_选取 [4], 假)
        赋值 (底图_, 牌 [55])
    .如果结束
    .如果真 (底图_选取 [1])
        赋值 (底图_选取 [1], 假)
        载入图片 (#选取_0).画图片 (9, 9, , , )
    .如果真结束
    .如果真 (底图_选取 [2])
        赋值 (底图_选取 [2], 假)
        载入图片 (#选取_0).画图片 (75, 9, , , )
    .如果真结束
    .如果真 (底图_选取 [3])
        赋值 (底图_选取 [3], 假)
        载入图片 (#选取_0).画图片 (9, 29, , , )
    .如果真结束
    
.如果真结束

 ' 判断玩家牌选牌
未知函数_2885 () ' *** 缩略程序块 ***
.如果真 (并且 (等于 (已发牌, 真), 小于 (选中张数, 3), 大于 (横向位置, 350), 大于 (纵向位置, 505), 小于 (横向位置, 369), 小于 (纵向位置, 600)))
    .如果 (等于 (已选牌 [1], 假)) ' 选中牌
        赋值 (已选牌 [1], 真)
        赋值 (选中, 真)
        赋值 (选中张数, 相加 (选中张数, 1))
    .否则
        赋值 (已选牌 [1], 假) ' 取消选中
        赋值 (选中, 真)
        赋值 (选中张数, 相减 (选中张数, 1))
    .如果结束
    
.如果真结束
.如果真 (并且 (等于 (已发牌, 真), 小于 (选中张数, 3), 大于 (横向位置, 369), 大于 (纵向位置, 505), 小于 (横向位置, 388), 小于 (纵向位置, 600)))
    .如果 (等于 (已选牌 [2], 假))
        赋值 (已选牌 [2], 真)
        赋值 (选中, 真)
        赋值 (选中张数, 相加 (选中张数, 1))
    .否则
        赋值 (已选牌 [2], 假)
        赋值 (选中, 真)
        赋值 (选中张数, 相减 (选中张数, 1))
    .如果结束
    
.如果真结束
.如果真 (并且 (等于 (已发牌, 真), 小于 (选中张数, 3), 大于 (横向位置, 388), 大于 (纵向位置, 505), 小于 (横向位置, 407), 小于 (纵向位置, 600)))
    .如果 (等于 (已选牌 [3], 假))
        赋值 (已选牌 [3], 真)
        赋值 (选中, 真)
        赋值 (选中张数, 相加 (选中张数, 1))
    .否则
        赋值 (已选牌 [3], 假)
        赋值 (选中, 真)
        赋值 (选中张数, 相减 (选中张数, 1))
    .如果结束
    
.如果真结束
.如果真 (并且 (等于 (已发牌, 真), 小于 (选中张数, 3), 大于 (横向位置, 407), 大于 (纵向位置, 505), 小于 (横向位置, 426), 小于 (纵向位置, 600)))
    .如果 (等于 (已选牌 [4], 假))
        赋值 (已选牌 [4], 真)
        赋值 (选中, 真)
        赋值 (选中张数, 相加 (选中张数, 1))
    .否则
        赋值 (已选牌 [4], 假)
        赋值 (选中, 真)
        赋值 (选中张数, 相减 (选中张数, 1))
    .如果结束
    
.如果真结束
.如果真 (并且 (等于 (已发牌, 真), 小于 (选中张数, 3), 大于 (横向位置, 426), 大于 (纵向位置, 505), 小于 (横向位置, 497), 小于 (纵向位置, 600)))
    .如果 (等于 (已选牌 [5], 假))
        赋值 (已选牌 [5], 真)
        赋值 (选中, 真)
        赋值 (选中张数, 相加 (选中张数, 1))
    .否则
        赋值 (已选牌 [5], 假)
        赋值 (选中, 真)
        赋值 (选中张数, 相减 (选中张数, 1))
    .如果结束
    
.如果真结束

 ' 判断下注位置
未知函数_2234 () ' *** 缩略程序块 ***
.如果真 (并且 (等于 (庄 [4], 假), 等于 (已发牌, 假), 大于 (横向位置, 580), 大于 (纵向位置, 510), 小于 (横向位置, 620), 小于 (纵向位置, 535))) ' 100 画板.画矩形 (580, 510, 620, 535)
    赋值 (已发牌, 真)
    赋值 (下注 [4], 100)
    初始化牌局 ()
.如果真结束
.如果真 (并且 (等于 (庄 [4], 假), 等于 (已发牌, 假), 大于 (横向位置, 640), 大于 (纵向位置, 510), 小于 (横向位置, 680), 小于 (纵向位置, 535))) ' 200画板.画矩形 (640, 510, 680, 535)
    赋值 (已发牌, 真)
    赋值 (下注 [4], 200)
    初始化牌局 ()
.如果真结束
.如果真 (并且 (等于 (庄 [4], 假), 等于 (已发牌, 假), 大于 (横向位置, 700), 大于 (纵向位置, 510), 小于 (横向位置, 740), 小于 (纵向位置, 535))) ' 300画板.画矩形 (700, 510, 740, 535)
    赋值 (已发牌, 真)
    赋值 (下注 [4], 300)
    初始化牌局 ()
.如果真结束
.如果真 (并且 (等于 (庄 [4], 假), 等于 (已发牌, 假), 大于 (横向位置, 580), 大于 (纵向位置, 570), 小于 (横向位置, 620), 小于 (纵向位置, 595))) ' 400画板.画矩形 (580, 570, 620, 595)
    赋值 (已发牌, 真)
    赋值 (下注 [4], 400)
    初始化牌局 ()
.如果真结束
.如果真 (并且 (等于 (庄 [4], 假), 等于 (已发牌, 假), 大于 (横向位置, 640), 大于 (纵向位置, 570), 小于 (横向位置, 680), 小于 (纵向位置, 595))) ' 500画板.画矩形 (640, 570, 680, 595)
    赋值 (已发牌, 真)
    赋值 (下注 [4], 500)
    初始化牌局 ()
.如果真结束
.如果真 (并且 (等于 (庄 [4], 假), 等于 (已发牌, 假), 大于 (横向位置, 700), 大于 (纵向位置, 570), 小于 (横向位置, 740), 小于 (纵向位置, 595))) ' 600画板.画矩形 (700, 570, 740, 595)
    赋值 (已发牌, 真)
    赋值 (下注 [4], 600)
    初始化牌局 ()
.如果真结束

.如果真 (并且 (等于 (已发牌, 真), 大于 (横向位置, 580), 大于 (纵向位置, 470), 小于 (横向位置, 630), 小于 (纵向位置, 497))) ' 580, 470, 630, 497
    赋值 (已发牌, 假)
    载入图片 (#牛_0).画图片 (388, 450, , , ) ' 无牛
    580.清除 (470, 50, 25)
    处理事件 ()
    判断其它牌 ()
.如果真结束

.如果真 (选中) ' 玩家选牌
    340.清除 (480, 170, 126) ' 下
    .如果 (等于 (已选牌 [1], 真)) ' 点一下选中牌，再点一下，取消选中
        载入图片 (牌 [玩家牌值] [1]).画图片 (349, 485, , , ) ' 选中
    .否则
        载入图片 (牌 [玩家牌值] [1]).画图片 (349, 505, , , ) ' 未选中
    .如果结束
    .如果 (等于 (已选牌 [2], 真))
        载入图片 (牌 [玩家牌值] [2]).画图片 (369, 485, , , ) ' X+20
    .否则
        载入图片 (牌 [玩家牌值] [2]).画图片 (369, 505, , , ) ' X+20
    .如果结束
    .如果 (等于 (已选牌 [3], 真))
        载入图片 (牌 [玩家牌值] [3]).画图片 (389, 485, , , )
    .否则
        载入图片 (牌 [玩家牌值] [3]).画图片 (389, 505, , , )
    .如果结束
    .如果 (等于 (已选牌 [4], 真))
        载入图片 (牌 [玩家牌值] [4]).画图片 (409, 485, , , )
    .否则
        载入图片 (牌 [玩家牌值] [4]).画图片 (409, 505, , , )
    .如果结束
    .如果 (等于 (已选牌 [5], 真))
        载入图片 (牌 [玩家牌值] [5]).画图片 (429, 485, , , )
    .否则
        载入图片 (牌 [玩家牌值] [5]).画图片 (429, 505, , , )
    .如果结束
    
.如果真结束
.如果真 (等于 (选中张数, 3)) ' 选中牌已为三张时，开始判定牌大小
    580.清除 (470, 50, 25)
    赋值 (已发牌, 假)
     ' 判定玩家牌
    .计次循环首 (5, a)
        .如果 (等于 (已选牌 [a], 真)) ' 如果这张是选中的牌
            .如果 (大于 (求余数 (玩家牌值 [a], 4), 0))
                赋值 (结果 [3], 相加 (整除 (玩家牌值 [a], 4), 1))
            .否则
                赋值 (结果 [3], 整除 (玩家牌值 [a], 4))
            .如果结束
            .如果 (大于 (结果 [3], 10))
                赋值 (结果 [1], 相加 (结果 [1], 10))
            .否则
                赋值 (结果 [1], 相加 (结果 [1], 结果 [3]))
            .如果结束
            
        .否则
            .如果 (大于 (求余数 (玩家牌值 [a], 4), 0)) ' 此张为没选中的牌
                赋值 (结果 [3], 相加 (整除 (玩家牌值 [a], 4), 1))
            .否则
                赋值 (结果 [3], 整除 (玩家牌值 [a], 4))
            .如果结束
            .如果 (大于 (结果 [3], 10))
                赋值 (结果 [2], 相加 (结果 [2], 10))
            .否则
                赋值 (结果 [2], 相加 (结果 [2], 结果 [3]))
            .如果结束
            
        .如果结束
        
    .计次循环尾 ()
    赋值 (玩家结果 [4].牌3, 1)
    .如果 (大于 (求余数 (结果 [1], 10), 0)) ' 不为10的倍数，表示无牛
        载入图片 (#牛_0).画图片 (388, 440, , , ) ' 无牛
        赋值 (玩家结果 [4].牌1, 0) ' 无牛
    .否则
         ' 如果为0，表示是10的倍数，表示有牛
         ' 判定一手牌中最大的一张；，记录在：返回值.牌5
        .如果 (大于 (玩家牌值 [1], 玩家牌值 [2]))
            赋值 (a, 玩家牌值 [1])
        .否则
            赋值 (a, 玩家牌值 [2])
        .如果结束
        .如果 (大于 (玩家牌值 [3], 玩家牌值 [4]))
            .如果 (大于 (玩家牌值 [3], 玩家牌值 [5]))
                .如果真 (大于 (玩家牌值 [3], a))
                    赋值 (a, 玩家牌值 [3])
                .如果真结束
                
            .否则
                .如果真 (小于 (a, 玩家牌值 [5]))
                    赋值 (a, 玩家牌值 [5])
                .如果真结束
                
            .如果结束
            
        .否则
            .如果 (大于 (玩家牌值 [4], 玩家牌值 [5]))
                .如果真 (大于 (玩家牌值 [4], 玩家牌值 [5]))
                    赋值 (a, 玩家牌值 [4])
                .如果真结束
                
            .否则
                .如果真 (大于 (玩家牌值 [5], a))
                    赋值 (a, 玩家牌值 [5])
                .如果真结束
                
            .如果结束
            
        .如果结束
        
        赋值 (玩家结果 [4].牌5, a)
        
        
         ' 倍率;牛0－牛八1倍，牛九2倍，牛年4倍，银牛5倍，五花7倍，炸弹9倍,五小牛10倍：
        赋值 (玩家结果 [4].牌1, 求余数 (结果 [2], 10))
        .如果真 (等于 (玩家结果 [4].牌1, 9)) ' 牛9赢2倍
            .如果真 (小于 (玩家结果 [4].牌3, 2))
                赋值 (玩家结果 [4].牌3, 2)
            .如果真结束
            
        .如果真结束
        .如果真 (等于 (玩家结果 [4].牌1, 0)) ' 牛牛
            赋值 (玩家结果 [4].牌1, 10)
            .如果真 (小于 (玩家结果 [4].牌3, 4)) ' 牛牛赢4倍
                赋值 (玩家结果 [4].牌3, 4)
            .如果真结束
            
        .如果真结束
         ' 银牛，4张花牌，一张10,
        .如果真 (并且 (大于 (玩家牌值 [1], 10), 大于 (玩家牌值 [2], 10), 大于 (玩家牌值 [3], 10), 大于 (玩家牌值 [4], 10), 等于 (玩家牌值 [5], 10)))
            赋值 (玩家结果 [4].牌3, 5)
        .如果真结束
        .如果真 (并且 (大于 (玩家牌值 [1], 10), 大于 (玩家牌值 [2], 10), 大于 (玩家牌值 [3], 10), 大于 (玩家牌值 [5], 10), 等于 (玩家牌值 [4], 10)))
            赋值 (玩家结果 [4].牌3, 5)
        .如果真结束
        .如果真 (并且 (大于 (玩家牌值 [1], 10), 大于 (玩家牌值 [2], 10), 大于 (玩家牌值 [4], 10), 大于 (玩家牌值 [5], 10), 等于 (玩家牌值 [3], 10)))
            赋值 (玩家结果 [4].牌3, 5)
        .如果真结束
        .如果真 (并且 (大于 (玩家牌值 [2], 10), 大于 (玩家牌值 [3], 10), 大于 (玩家牌值 [4], 10), 大于 (玩家牌值 [5], 10), 等于 (玩家牌值 [1], 10)))
            赋值 (玩家结果 [4].牌3, 5)
        .如果真结束
         ' 五花，返回值用，2表示
        .如果真 (并且 (大于 (玩家牌值 [1], 10), 大于 (玩家牌值 [2], 10), 大于 (玩家牌值 [3], 10), 大于 (玩家牌值 [4], 10), 大于 (玩家牌值 [5], 10)))
            赋值 (玩家结果 [4].牌3, 7)
        .如果真结束
         ' 炸弹,,返回值用，3表示
        .如果真 (并且 (等于 (玩家牌值 [1], 玩家牌值 [2]), 等于 (玩家牌值 [1], 玩家牌值 [3]), 等于 (玩家牌值 [1], 玩家牌值 [4])))
            赋值 (玩家结果 [4].牌3, 9)
        .如果真结束
        .如果真 (并且 (等于 (玩家牌值 [1], 玩家牌值 [2]), 等于 (玩家牌值 [1], 玩家牌值 [3]), 等于 (玩家牌值 [1], 玩家牌值 [5])))
            赋值 (玩家结果 [4].牌3, 9)
        .如果真结束
        .如果真 (并且 (等于 (玩家牌值 [1], 玩家牌值 [2]), 等于 (玩家牌值 [1], 玩家牌值 [4]), 等于 (玩家牌值 [1], 玩家牌值 [5])))
            赋值 (玩家结果 [4].牌3, 9)
        .如果真结束
        .如果真 (并且 (等于 (玩家牌值 [2], 玩家牌值 [3]), 等于 (玩家牌值 [2], 玩家牌值 [4]), 等于 (玩家牌值 [2], 玩家牌值 [5])))
            赋值 (玩家结果 [4].牌3, 9)
        .如果真结束
         ' 五小’返回值用，4表示
        .如果真 (并且 (小于 (玩家牌值 [1], 5), 小于 (玩家牌值 [2], 5), 小于 (玩家牌值 [3], 5), 小于 (玩家牌值 [4], 5), 小于 (玩家牌值 [5], 5), 小于 (相加 (玩家牌值 [1], 玩家牌值 [2], 玩家牌值 [3], 玩家牌值 [4], 玩家牌值 [5]), 11)))
            赋值 (玩家结果 [4].牌3, 10)
        .如果真结束
        .如果 (大于 (玩家结果 [4].牌1, 0))
            载入图片 (牛集 [玩家结果] [4].牌1).画图片 (388, 440, , , ) ' 剩于二张牌相加除10取余数
        .否则
            载入图片 (牛集 [10]).画图片 (388, 440, , , ) ' 剩于二张牌相加除10取余数
        .如果结束
        
    .如果结束
    赋值 (选中张数, 0)
    判断其它牌 ()
     ' 画板_面.重画 ()
.如果真结束


.子程序 _画板_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

未知函数_5236 () ' *** 缩略程序块 ***
 ' .如果真 (并且 (等于 (开关 [7], 假), 等于 (庄 [4], 真), 等于 (已发牌, 假), 大于 (横向位置, 520), 大于 (纵向位置, 470), 小于 (横向位置, 570), 小于 (纵向位置, 497))) ' 520, 470, 570, 497 发牌
     ' 画板.画渐变矩形 (520, 470, 50, 25, 1, #紫红, #粉红)
     ' 画板.定位写出 (522, 472, “发牌”)
     ' 画板.画矩形 (520, 470, 570, 497)
     ' 开关 [7] ＝ 真
     ' 画板.鼠标指针 ＝ { 14 }
.如果真结束
 ' .如果真 (并且 (开关 [7], 等于 (已发牌, 假)))
     ' .如果真 (或者 (小于 (横向位置, 520), 小于 (纵向位置, 470), 大于 (横向位置, 570), 大于 (纵向位置, 497)))
         ' 开关 [7] ＝ 假
         ' 画板.画渐变矩形 (520, 470, 50, 25, 1, #粉红, #紫红)
         ' 画板.定位写出 (522, 472, “发牌”)
         ' 画板.画矩形 (520, 470, 570, 497)
         ' 画板.鼠标指针 ＝ { 0 }
    .如果真结束
    
.如果真结束
 ' .如果真 (并且 (等于 (开关 [2], 假), 等于 (已发牌, 假), 大于 (横向位置, 640), 大于 (纵向位置, 470), 小于 (横向位置, 690), 小于 (纵向位置, 495), 大于 (总注, 10000))) ' 玩家收庄 640, 470, 50, 25
    
.如果真结束
 ' ' 判断下注位置
 ' .如果真 (并且 (等于 (开关 [1], 假), 等于 (庄 [4], 假), 等于 (已发牌, 假), 大于 (横向位置, 580), 大于 (纵向位置, 510), 小于 (横向位置, 620), 小于 (纵向位置, 535))) ' 100 画板.画矩形 (580, 510, 620, 535)
     ' 画板.画渐变矩形 (580, 510, 40, 25, 1, #紫红, #粉红)
     ' 画板.定位写出 (582, 512, “100”)
     ' 画板.画矩形 (580, 510, 620, 535)
     ' 开关 [1] ＝ 真
     ' 画板.鼠标指针 ＝ { 14 }
.如果真结束
 ' .如果真 (并且 (等于 (开关 [1], 真), 等于 (已发牌, 假)))
     ' .如果真 (或者 (小于 (横向位置, 580), 小于 (纵向位置, 510), 大于 (横向位置, 620), 大于 (纵向位置, 535)))
         ' 开关 [1] ＝ 假
         ' 画板.鼠标指针 ＝ { 0 }
         ' 画板.画渐变矩形 (580, 510, 40, 25, 1, #粉红, #紫红)
         ' 画板.定位写出 (582, 512, “100”)
         ' 画板.画矩形 (580, 510, 620, 535)
        
    .如果真结束
    
.如果真结束
 ' .如果真 (并且 (等于 (开关 [2], 假), 等于 (庄 [4], 假), 等于 (已发牌, 假), 大于 (横向位置, 640), 大于 (纵向位置, 510), 小于 (横向位置, 680), 小于 (纵向位置, 535))) ' 200画板.画矩形 (640, 510, 680, 535)
     ' 画板.画渐变矩形 (640, 510, 40, 25, 1, #紫红, #粉红)
     ' 画板.定位写出 (642, 512, “200”)
     ' 画板.画矩形 (640, 510, 680, 535)
     ' 开关 [2] ＝ 真
.如果真结束
 ' .如果真 (并且 (等于 (开关 [3], 假), 等于 (庄 [4], 假), 等于 (已发牌, 假), 大于 (横向位置, 700), 大于 (纵向位置, 510), 小于 (横向位置, 740), 小于 (纵向位置, 535))) ' 300画板.画矩形 (700, 510, 740, 535)
     ' 画板.画渐变矩形 (700, 510, 40, 25, 1, #紫红, #粉红)
     ' 画板.定位写出 (702, 512, “300”)
     ' 画板.画矩形 (700, 510, 740, 535)
     ' 开关 [3] ＝ 真
.如果真结束
 ' .如果真 (并且 (等于 (开关 [4], 假), 等于 (庄 [4], 假), 等于 (已发牌, 假), 大于 (横向位置, 580), 大于 (纵向位置, 570), 小于 (横向位置, 620), 小于 (纵向位置, 595))) ' 400画板.画矩形 (580, 570, 620, 595)
     ' 画板.画渐变矩形 (580, 570, 40, 25, 1, #紫红, #粉红)
     ' 画板.定位写出 (582, 572, “400”)
     ' 画板.画矩形 (580, 570, 620, 595)
     ' 开关 [4] ＝ 真
.如果真结束
 ' .如果真 (并且 (等于 (开关 [5], 假), 等于 (庄 [4], 假), 等于 (已发牌, 假), 大于 (横向位置, 640), 大于 (纵向位置, 570), 小于 (横向位置, 680), 小于 (纵向位置, 595))) ' 500画板.画矩形 (640, 570, 680, 595)
     ' 画板.画渐变矩形 (640, 570, 40, 25, 1, #紫红, #粉红)
     ' 画板.定位写出 (642, 572, “500”)
     ' 画板.画矩形 (640, 570, 680, 595)
     ' 开关 [5] ＝ 真
.如果真结束
 ' .如果真 (并且 (等于 (开关 [6], 假), 等于 (庄 [4], 假), 等于 (已发牌, 假), 大于 (横向位置, 700), 大于 (纵向位置, 570), 小于 (横向位置, 740), 小于 (纵向位置, 595))) ' 600画板.画矩形 (700, 570, 740, 595)
     ' 画板.画渐变矩形 (700, 570, 40, 25, 1, #紫红, #粉红)
     ' 画板.定位写出 (702, 572, “600”)
     ' 画板.画矩形 (700, 570, 740, 595)
     ' 开关 [6] ＝ 真
.如果真结束

 ' 本源码来自易语言资源网(www.5A5X.com)

.子程序 判断其它牌, 空白型, , 
.局部变量 牌_位置, 空白型, , , 
.局部变量 a, 整数型, , , 
.局部变量 x, 整数型, , , 
.局部变量 牌_值, 整数型, , "20", 
.局部变量 牌_分组值, 牌集, , , 
.局部变量 牛, 空白型, , "3", 
.局部变量 输赢, 逻辑型, , , 
.局部变量 匿名局部变量_793, 空白型, , , 
.局部变量 字体, 字体, , , 
.局部变量 结果, 逻辑型, , , 
.局部变量 图片号, 整数型, , , 

 ' 判断其它牌
.计次循环首 (20, a) ' 画正面牌
    .如果 (大于 (求余数 (牌_数值 [a], 4), 0))
        赋值 (牌_值 [a], 相加 (整除 (牌_数值 [a], 4), 1))
    .否则
        赋值 (牌_值 [a], 整除 (牌_数值 [a], 4))
    .如果结束
    .如果真 (等于 (牌_位置, 0))
        载入图片 (牌 [牌_数值] [a]).画图片 (相加 (相乘 (x, 20), 642), 278, , , ) ' 右
    .如果真结束
    .如果真 (等于 (牌_位置, 1))
        载入图片 (牌 [牌_数值] [a]).画图片 (相加 (相乘 (x, 20), 348), 38, , , ) ' 上
    .如果真结束
    .如果真 (等于 (牌_位置, 2))
        载入图片 (牌 [牌_数值] [a]).画图片 (相加 (相乘 (x, 20), 58), 278, , , ) ' 左
    .如果真结束
    赋值 (牌_位置, 相加 (牌_位置, 1))
    .如果真 (大于 (牌_位置, 3))
        赋值 (牌_位置, 0)
        赋值 (x, 相加 (x, 1))
    .如果真结束
     ' 延迟 (50)
.计次循环尾 ()
' 本源码来自易语言资源网(www.5A5X.com)
.计次循环首 (3, a) ' 判定是否有牛
    赋值 (牌_分组值.牌1, 牌_数值 [a])
    赋值 (牌_分组值.牌2, 牌_数值 [相加 (a, 4)])
    赋值 (牌_分组值.牌3, 牌_数值 [相加 (a, 8)])
    赋值 (牌_分组值.牌4, 牌_数值 [相加 (a, 12)])
    赋值 (牌_分组值.牌5, 牌_数值 [相加 (a, 16)])
    赋值 (玩家结果 [a], 判断牌 (牌_分组值))
    .如果 (等于 (玩家结果 [a], 牌1, 0))
        赋值 (牛 [a], 载入图片 (#牛_0))
    .否则
        赋值 (牛 [a], 载入图片 (牛集 [玩家结果] [a], 牌1))
    .如果结束
    
.计次循环尾 ()
牛.画图片 ( [1], 560, 305, , , ) ' 右
牛.画图片 ( [2], 390, 142, , , ) ' 上
牛.画图片 ( [3], 230, 305, , , ) ' 左
 ' 画板_介面.画图片 (x, 390, 450, , , )  ' 下

赋值 (.文本颜色, #黄色)
赋值 (字体.字体名称, “黑体”)
赋值 (字体.加粗, 真)
赋值 (字体.字体大小, 12)
赋值 (.字体, 字体)
 ' 闲家按大小排序,进钱按大先进钱规则

 ' 略

 ' 判断输赢
 ' 庄 1,2,3,4，右，上，左，下,
 ' 下注 1,2,3,4，右，上，左，下,
.如果真 (并且 (庄 [1], 等于 (结果, 假))) ' 右
    .如果 (大于 (玩家结果 [4].牌1, 玩家结果 [1].牌1))
        赋值 (输赢, 假) ' 庄输
    .否则
        .如果 (等于 (玩家结果 [4].牌1, 玩家结果 [1].牌1))
            .如果 (大于 (玩家结果 [4].牌5, 玩家结果 [1].牌5))
                赋值 (输赢, 假)
            .否则
                赋值 (输赢, 真)
            .如果结束
            
        .否则
            赋值 (输赢, 真)
        .如果结束
        
    .如果结束
    .如果 (等于 (输赢, 真)) ' 庄赢
        判定输赢 (真, 4, 1)
    .否则
        判定输赢 (假, 4, 1)
    .如果结束
     ' 和上面玩家比
    .如果 (大于 (玩家结果 [2].牌1, 玩家结果 [1].牌1))
        赋值 (输赢, 假) ' 庄输
    .否则
        .如果 (等于 (玩家结果 [2].牌1, 玩家结果 [1].牌1)) ' 如果牛相同，就比花色
            .如果 (大于 (玩家结果 [2].牌5, 玩家结果 [1].牌5))
                赋值 (输赢, 假)
            .否则
                赋值 (输赢, 真)
            .如果结束
            
        .否则
            赋值 (输赢, 真)
        .如果结束
        
    .如果结束
    .如果 (等于 (输赢, 真)) ' 庄赢
        判定输赢 (真, 2, 1)
    .否则
        判定输赢 (假, 2, 1)
    .如果结束
     ' 和左边玩家比
    .如果 (大于 (玩家结果 [3].牌1, 玩家结果 [1].牌1))
        赋值 (输赢, 假) ' 庄输
    .否则
        .如果 (等于 (玩家结果 [3].牌1, 玩家结果 [1].牌1)) ' 如果牛相同，就比花色
            .如果 (大于 (玩家结果 [3].牌5, 玩家结果 [1].牌5))
                赋值 (输赢, 假)
            .否则
                赋值 (输赢, 真)
            .如果结束
            
        .否则
            赋值 (输赢, 真)
        .如果结束
        
    .如果结束
    .如果 (等于 (输赢, 真)) ' 庄赢
        判定输赢 (真, 3, 1)
    .否则
        判定输赢 (假, 3, 1)
    .如果结束
     ' 判断总注是否还有
    .如果真 (小于或等于 (总注, 0))
        赋值 (庄 [1], 假)
        赋值 (庄 [2], 真)
        赋值 (结果, 真)
        赋值 (总注, 0)
    .如果真结束
     ' 是否收庄
    .如果真 (大于 (总注, 10000))
        赋值 (输赢, 多项选择 (取随机数 (1, 5), 真, 假, 真, 真, 假))
        .如果真 (输赢)
            赋值 (财富 [1], 相加 (财富 [1], 总注))
            赋值 (庄 [1], 假)
            赋值 (庄 [2], 真)
            赋值 (结果, 真)
            赋值 (总注, 0)
        .如果真结束
        
    .如果真结束
    
    
.如果真结束
.如果真 (并且 (庄 [2], 等于 (结果, 假)))
    .如果 (大于 (玩家结果 [1].牌1, 玩家结果 [2].牌1))
        赋值 (输赢, 假) ' 庄输
    .否则
        .如果 (等于 (玩家结果 [1].牌1, 玩家结果 [2].牌1)) ' 如果牛相同，就比花色
            .如果 (大于 (玩家结果 [1].牌5, 玩家结果 [2].牌5))
                赋值 (输赢, 假)
            .否则
                赋值 (输赢, 真)
            .如果结束
            
        .否则
            赋值 (输赢, 真)
        .如果结束
        
    .如果结束
    .如果 (等于 (输赢, 真)) ' 庄赢
        判定输赢 (真, 1, 2)
    .否则
        判定输赢 (假, 1, 2)
    .如果结束
     ' 和上面玩家比
    .如果 (大于 (玩家结果 [4].牌1, 玩家结果 [2].牌1))
        赋值 (输赢, 假) ' 庄输
    .否则
        .如果 (等于 (玩家结果 [4].牌1, 玩家结果 [2].牌1)) ' 如果牛相同，就比花色
            .如果 (大于 (玩家结果 [4].牌5, 玩家结果 [2].牌5))
                赋值 (输赢, 假)
            .否则
                赋值 (输赢, 真)
            .如果结束
            
        .否则
            赋值 (输赢, 真)
        .如果结束
        
    .如果结束
    .如果 (等于 (输赢, 真)) ' 庄赢
        判定输赢 (真, 4, 2)
    .否则
        判定输赢 (假, 4, 2)
    .如果结束
     ' 和左边玩家比
    .如果 (大于 (玩家结果 [3].牌1, 玩家结果 [2].牌1))
        赋值 (输赢, 假) ' 庄输
    .否则
        .如果 (等于 (玩家结果 [3].牌1, 玩家结果 [2].牌1)) ' 如果牛相同，就比花色
            .如果 (大于 (玩家结果 [3].牌5, 玩家结果 [2].牌5))
                赋值 (输赢, 假)
            .否则
                赋值 (输赢, 真)
            .如果结束
            
        .否则
            赋值 (输赢, 真)
        .如果结束
        
    .如果结束
    .如果 (等于 (输赢, 真)) ' 庄赢
        判定输赢 (真, 3, 2)
    .否则
        判定输赢 (假, 3, 2)
    .如果结束
     ' 判断总注是否还有
    .如果真 (小于或等于 (总注, 0))
        赋值 (庄 [2], 假)
        赋值 (庄 [3], 真)
        赋值 (结果, 真)
        赋值 (总注, 0)
    .如果真结束
     ' 是否收庄
    .如果真 (大于 (总注, 10000))
        赋值 (输赢, 多项选择 (取随机数 (1, 5), 真, 假, 真, 真, 假))
        .如果真 (输赢)
             ' 画板_面.清除 (816, 224, 35, 35)  ' 右
            赋值 (财富 [2], 相加 (财富 [2], 总注))
            赋值 (庄 [2], 假)
            赋值 (庄 [3], 真)
            赋值 (结果, 真)
            赋值 (总注, 0)
        .如果真结束
        
    .如果真结束
    
    
.如果真结束
.如果真 (并且 (庄 [3], 等于 (结果, 假)))
    .如果 (大于 (玩家结果 [1].牌1, 玩家结果 [3].牌1))
        赋值 (输赢, 假) ' 庄输
    .否则
        .如果 (等于 (玩家结果 [1].牌1, 玩家结果 [3].牌1)) ' 如果牛相同，就比花色
            .如果 (大于 (玩家结果 [1].牌5, 玩家结果 [3].牌5))
                赋值 (输赢, 假)
            .否则
                赋值 (输赢, 真)
            .如果结束
            
        .否则
            赋值 (输赢, 真)
        .如果结束
        
    .如果结束
    .如果 (等于 (输赢, 真)) ' 庄赢
        判定输赢 (真, 1, 3)
    .否则
        判定输赢 (假, 1, 3)
    .如果结束
     ' 和上面玩家比
    .如果 (大于 (玩家结果 [2].牌1, 玩家结果 [3].牌1))
        赋值 (输赢, 假) ' 庄输
    .否则
        .如果 (等于 (玩家结果 [2].牌1, 玩家结果 [3].牌1)) ' 如果牛相同，就比花色
            .如果 (大于 (玩家结果 [2].牌5, 玩家结果 [3].牌5))
                赋值 (输赢, 假)
            .否则
                赋值 (输赢, 真)
            .如果结束
            
        .否则
            赋值 (输赢, 真)
        .如果结束
        
    .如果结束
    .如果 (等于 (输赢, 真)) ' 庄赢
        判定输赢 (真, 2, 3)
    .否则
        判定输赢 (假, 2, 3)
    .如果结束
     ' 和左边玩家比
    .如果 (大于 (玩家结果 [4].牌1, 玩家结果 [3].牌1))
        赋值 (输赢, 假) ' 庄输
    .否则
        .如果 (等于 (玩家结果 [4].牌1, 玩家结果 [3].牌1)) ' 如果牛相同，就比花色
            .如果 (大于 (玩家结果 [4].牌5, 玩家结果 [3].牌5))
                赋值 (输赢, 假)
            .否则
                赋值 (输赢, 真)
            .如果结束
            
        .否则
            赋值 (输赢, 真)
        .如果结束
        
    .如果结束
    .如果 (等于 (输赢, 真)) ' 庄赢
        判定输赢 (真, 4, 3)
    .否则
        判定输赢 (假, 4, 3)
    .如果结束
     ' 判断总注是否还有
    .如果真 (小于或等于 (总注, 0))
        赋值 (庄 [3], 假)
        赋值 (庄 [4], 真)
        赋值 (结果, 真)
        赋值 (总注, 0)
    .如果真结束
    
     ' 是否收庄
    .如果真 (大于 (总注, 10000))
        赋值 (输赢, 多项选择 (取随机数 (1, 5), 真, 假, 真, 真, 假))
        .如果真 (输赢)
            赋值 (财富 [3], 相加 (财富 [3], 总注))
            赋值 (庄 [3], 假)
            赋值 (庄 [4], 真)
            赋值 (结果, 真)
            赋值 (总注, 0)
        .如果真结束
        
    .如果真结束
    
    
.如果真结束
.如果真 (并且 (庄 [4], 等于 (结果, 假))) ' 下，玩家
    .如果 (大于 (玩家结果 [1].牌1, 玩家结果 [4].牌1)) ' 右边与庄家比,右边赢
        赋值 (输赢, 假) ' 庄输
    .否则
        .如果 (等于 (玩家结果 [1].牌1, 玩家结果 [4].牌1)) ' 如果牛相同，就比花色
            .如果 (大于 (玩家结果 [1].牌5, 玩家结果 [4].牌5))
                赋值 (输赢, 假)
            .否则
                赋值 (输赢, 真)
            .如果结束
            
        .否则
            赋值 (输赢, 真)
        .如果结束
        
    .如果结束
    .如果 (等于 (输赢, 真)) ' 庄赢
        判定输赢 (真, 1, 4)
    .否则
        判定输赢 (假, 1, 4)
    .如果结束
     ' 和上面玩家比
    .如果 (大于 (玩家结果 [2].牌1, 玩家结果 [4].牌1)) ' 右边与庄家比,右边赢
        赋值 (输赢, 假) ' 庄输
    .否则
        .如果 (等于 (玩家结果 [2].牌1, 玩家结果 [4].牌1)) ' 如果牛相同，就比花色
            .如果 (大于 (玩家结果 [2].牌5, 玩家结果 [4].牌5))
                赋值 (输赢, 假)
            .否则
                赋值 (输赢, 真)
            .如果结束
            
        .否则
            赋值 (输赢, 真)
        .如果结束
        
    .如果结束
    .如果 (等于 (输赢, 真)) ' 庄赢
        判定输赢 (真, 2, 4)
    .否则
        判定输赢 (假, 2, 4)
    .如果结束
     ' 和左边玩家比
    .如果 (大于 (玩家结果 [3].牌1, 玩家结果 [4].牌1)) ' 右边与庄家比,右边赢
        赋值 (输赢, 假) ' 庄输
    .否则
        .如果 (等于 (玩家结果 [3].牌1, 玩家结果 [4].牌1)) ' 如果牛相同，就比花色
            .如果 (大于 (玩家结果 [3].牌5, 玩家结果 [4].牌5))
                赋值 (输赢, 假)
            .否则
                赋值 (输赢, 真)
            .如果结束
            
        .否则
            赋值 (输赢, 真)
        .如果结束
        
    .如果结束
    .如果 (等于 (输赢, 真)) ' 庄赢
        判定输赢 (真, 3, 4)
    .否则
        判定输赢 (假, 3, 4)
    .如果结束
     ' 判断总注是否还有
    .如果真 (小于或等于 (总注, 0))
        赋值 (庄 [4], 假)
        赋值 (庄 [1], 真)
        赋值 (总注, 0)
    .如果真结束
    .如果真 (大于 (总注, 10000)) ' 显示收庄钮
        
    .如果真结束
    
.如果真结束


 ' 写各剩财富值
79.清除 (389, 120, 20) ' 左
80.定位写出 (390, 相加 (“财富: ”, 到文本 (财富 [3]))) ' 左
395.清除 (10, 120, 20) ' 上
390.定位写出 (10, 相加 (“ 财富: ”, 到文本 (财富 [2]))) ' 上
659.清除 (389, 120, 20) ' 右
660.定位写出 (390, 相加 (“财富: ”, 到文本 (财富 [1]))) ' 右
399.清除 (614, 120, 20) ' 下
400.定位写出 (615, 相加 (“财富: ”, 到文本 (财富 [4]))) ' 下

 ' 写总注
赋值 (.文本颜色, #粉红)
赋值 (字体.字体名称, “黑体”)
赋值 (字体.字体大小, 20)
赋值 (.字体, 字体)
400.清除 (335, 80, 30)
400.定位写出 (335, 到文本 (总注)) ' 右

.如果真 (并且 (庄 [4], 等于 (总注, 0)))
    庄_图片号.画图片 (286, 595, , , ) ' 下
    14.清除 (227, 35, 35) ' 左
.如果真结束
.如果真 (并且 (庄 [1], 等于 (总注, 0)))
    286.清除 (595, 35, 35)
    庄_图片号.画图片 (816, 224, , , ) ' 右
.如果真结束
.如果真 (并且 (庄 [2], 等于 (总注, 0)))
    816.清除 (224, 35, 35)
    庄_图片号.画图片 (294, 11, , , ) ' 上
.如果真结束
.如果真 (并且 (庄 [3], 等于 (总注, 0)))
    294.清除 (11, 35, 35)
    庄_图片号.画图片 (14, 227, , , ) ' 左
.如果真结束

 ' 动画画结果，
赋值 (图片号, 载入图片 (.取图片 ())) ' 保存画板当前画面

赋值 (.文本颜色, #绿色)
赋值 (字体.字体大小, 40)
赋值 (字体.加粗, 真)
赋值 (.字体, 字体)

.计次循环首 (15, a)
    赋值 (字体.字体大小, 相减 (40, 相乘 (a, 2)))
    赋值 (.字体, 字体)
    .如果真 (等于 (庄 [1], 假))
        .如果 (大于 (玩家结果 [1].牌4, 0)) ' 右
            相减 (720, a).定位写出 (390, 相加 (“+”, 到文本 (玩家结果 [1].牌4)))
        .否则
            相减 (720, a).定位写出 (390, 到文本 (玩家结果 [1].牌4))
        .如果结束
        
    .如果真结束
    .如果真 (等于 (庄 [2], 假))
        .如果 (大于 (玩家结果 [2].牌4, 0)) ' 上
            相减 (500, a).定位写出 (10, 相加 (“+”, 到文本 (玩家结果 [2].牌4)))
        .否则
            相减 (500, a).定位写出 (10, 到文本 (玩家结果 [2].牌4))
        .如果结束
        
    .如果真结束
    .如果真 (等于 (庄 [3], 假))
        .如果 (大于 (玩家结果 [4].牌4, 0)) ' 左
            相减 (180, a).定位写出 (390, 相加 (“+”, 到文本 (玩家结果 [3].牌4)))
        .否则
            相减 (180, a).定位写出 (390, 到文本 (玩家结果 [3].牌4))
        .如果结束
        
    .如果真结束
    .如果真 (等于 (庄 [4], 假))
        .如果 (大于 (玩家结果 [4].牌4, 0))
            
        .否则
            
        .如果结束
        
    .如果真结束
    处理事件 ()
    图片号.画图片 (0, 0, , , )
.计次循环尾 ()

.如果 (等于 (庄 [4], 真))
    显示操作按钮 (0)
    .如果真 (大于 (总注, 10000))
        显示操作按钮 (2)
    .如果真结束
    
.否则
    
    显示操作按钮 (3)
.如果结束


.子程序 判定输赢, 空白型, , 
.参数 输赢, 逻辑型, , 
.参数 判定对象, 整数型, , 
.参数 庄方, 整数型, , 1,2,3,4:右，上，左，下

.局部变量 结果, 空白型, , , 

.如果 (等于 (输赢, 真)) ' 庄赢
    赋值 (总注, 相加 (总注, 相乘 (下注 [判定对象], 玩家结果 [庄方], 牌3))) ' ＋ 下注 [判定对象]
    赋值 (财富 [判定对象], 相加 (相减 (财富 [判定对象], 相乘 (下注 [判定对象], 玩家结果 [庄方], 牌3)), 下注 [判定对象]))
    赋值 (结果, 相乘 (负 (下注 [判定对象]), 玩家结果 [庄方], 牌3))
.否则
    
    赋值 (结果, 相乘 (下注 [判定对象], 玩家结果 [判定对象], 牌3))
    赋值 (总注, 相减 (总注, 相乘 (下注 [判定对象], 玩家结果 [判定对象], 牌3)))
    赋值 (财富 [判定对象], 相加 (财富 [判定对象], 结果, 下注 [判定对象]))
    
.如果结束
赋值 (玩家结果 [判定对象], 牌4, 结果)
 ' 写倍率
.如果真 (等于 (判定对象, 1))
    580.定位写出 (355, 相加 (“×”, 到文本 (玩家结果 [1].牌3)))
.如果真结束
.如果真 (等于 (判定对象, 2))
    460.定位写出 (160, 相加 (“×”, 到文本 (玩家结果 [2].牌3)))
.如果真结束
.如果真 (等于 (判定对象, 3))
    250.定位写出 (350, 相加 (“×”, 到文本 (玩家结果 [3].牌3)))
.如果真结束


.子程序 分割位图, 字节集, 公开, 只能是0压缩,并且是8位或8位以上的位图！
.参数 原位图, 字节集, , 
.参数 取出图像左边, 整数型, , 
.参数 取出图像顶边, 整数型, , 
.参数 取出宽度, 整数型, , 
.参数 取出高度, 整数型, , 

.局部变量 图像宽度, 整数型, , , 
.局部变量 图像高度, 整数型, , , 
.局部变量 图像位数, 整数型, , , 
.局部变量 图像压缩, 整数型, , , 
.局部变量 新位图, 字节集, , , 
.局部变量 新位图信息头, BITMAPINFOHEADER, , , 
.局部变量 新位图文件头, 文件头信息_, , , 
.局部变量 文件长度, 整数型, , , 
.局部变量 i, 整数型, , , 
.局部变量 颜色点阵偏移量, 整数型, , , 
.局部变量 点的大小, 整数型, , , 
.局部变量 颜色表, 字节集, , , 
.局部变量 总数据偏移, 整数型, , , 
.局部变量 新行宽, 整数型, , , 
.局部变量 原行宽, 整数型, , , 
.局部变量 时间, 整数型, , , 

赋值 (图像宽度, 取字节集数据 (取字节集中间 (原位图, 19, 4), #整数型, ))
赋值 (图像高度, 取字节集数据 (取字节集中间 (原位图, 23, 4), #整数型, ))
赋值 (图像位数, 取字节集数据 (取字节集中间 (原位图, 29, 2), #短整数型, ))
赋值 (图像压缩, 取字节集数据 (取字节集中间 (原位图, 31, 4), #整数型, ))
.如果真 (不等于 (图像压缩, 0))
    返回 ({  })
.如果真结束
.如果真 (等于 (图像位数, 32))
    赋值 (颜色点阵偏移量, 54)
    赋值 (点的大小, 4)
.如果真结束
.如果真 (等于 (图像位数, 24))
    赋值 (颜色点阵偏移量, 54)
    赋值 (点的大小, 3)
.如果真结束
.如果真 (等于 (图像位数, 16))
    赋值 (颜色点阵偏移量, 54)
    赋值 (点的大小, 2)
.如果真结束
.如果真 (等于 (图像位数, 8))
    赋值 (颜色点阵偏移量, 1078)
    赋值 (点的大小, 1)
    赋值 (颜色表, 取字节集中间 (原位图, 55, 1024))
.如果真结束
.如果真 (小于 (图像位数, 8))
    输出调试文本 (“错误！ 图像位深小于8！”)
    返回 ({  })
.如果真结束
.如果真 (或者 (大于 (相加 (取出图像左边, 取出宽度), 图像宽度), 大于 (相加 (取出图像顶边, 取出高度), 图像高度), 小于 (取出图像左边, 0), 小于 (取出图像顶边, 0), 小于或等于 (取出宽度, 0), 小于或等于 (取出高度, 0)))
    输出调试文本 (“参数错误！请检查输入的参数！”)
    返回 ({  })
.如果真结束
赋值 (原行宽, 左移 (右移 (相加 (相乘 (图像宽度, 图像位数), 31), 5), 2))
赋值 (新行宽, 左移 (右移 (相加 (相乘 (取出宽度, 图像位数), 31), 5), 2))
赋值 (文件长度, 相乘 (新行宽, 取出高度))
赋值 (新位图, 取空白字节集 (相加 (文件长度, 54, 取字节集长度 (颜色表))))
赋值 (新位图文件头.文件类型, 19778)
赋值 (新位图文件头.偏移量, 颜色点阵偏移量)
赋值 (新位图文件头.结果大小, 相加 (颜色点阵偏移量, 文件长度))
复制内存_复制位图文件头到字节集 (新位图 [1], 新位图文件头, 14)
赋值 (新位图信息头.biSize, 40)
赋值 (新位图信息头.biWidth, 取出宽度)
赋值 (新位图信息头.biHeight, 取出高度)
赋值 (新位图信息头.biPlanes, 1)
赋值 (新位图信息头.biBitCount, 图像位数)
复制内存_复制位图信息头到字节集 (新位图 [15], 新位图信息头, 40)
.如果真 (等于 (图像位数, 8))
    复制内存_字节集到字节集 (新位图 [55], 颜色表 [1], 1024)
.如果真结束
 ' 高偏移 ＝ 原行宽 × (图像高度 － 取出高度 － 取出图像顶边)
 ' 宽偏移 ＝ 取出图像左边 × 点的大小
赋值 (总数据偏移, 相加 (相乘 (原行宽, 相减 (图像高度, 取出高度, 取出图像顶边)), 相乘 (取出图像左边, 点的大小))) ' 总偏移=高偏移+宽偏移
.计次循环首 (取出高度, i)
    复制内存_字节集到字节集 (新位图 [相加 (相乘 (相减 (i, 1), 新行宽), 颜色点阵偏移量, 1)], 原位图 [相加 (颜色点阵偏移量, 总数据偏移, 相乘 (相减 (i, 1), 原行宽), 1)], 新行宽)
.计次循环尾 ()
返回 (新位图)


 ' 不属于任何一个程序集、类模块的函数：
