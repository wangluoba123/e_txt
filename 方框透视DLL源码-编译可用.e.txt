 ' 文件类型：Windows动态链接库

 ' 程序名称：
 ' 程序描述：个人版数据
@备注:
请勿调试或破解(否则系统自动崩溃)
 ' 程序作者：七夜的许愿星
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0



.常量 人物基址, "17231536", , 
.常量 坐标一级, "260", , 
.常量 鼠标Y偏移, "272", , 
.常量 鼠标X偏移, "276", , 
.常量 枪击Y偏移, "284", , 
.常量 枪击X偏移, "288", , 
.常量 是否死亡偏移, "516", , 
.常量 本人死亡基址, "17231528", , 
.常量 阵营基址, "17288060", , 
.常量 坐标基址规律, "448", , 
.常量 敌人基址, "17293304", , 
.常量 模式基址, "17331236", , 
.常量 模式一级, "12", , 
.常量 模式二级, "288", , 
.常量 本人位置, "17293280", , 
.常量 坐标X偏移, "320", , 
.常量 坐标Z偏移, "324", , 
.常量 坐标Y偏移, "328", , 
.常量 是否在游戏基址, "17196442", , 
.常量 视角基址, "17331248", , 
.常量 视角偏移, "44", , 
.常量 是否为生化, "11556", , 
.常量 , , , 
.常量 团队模式, "0", , 
.常量 爆破模式, "1", , 
.常量 幽灵模式, "2", , 
.常量 歼灭模式, "3", , 
.常量 个人竞技, "4", , 
.常量 特殊站, "5", , 
.常量 突围模式, "6", , 
.常量 挑战, "7", , 
.常量 终结者模式, "8", , 
.常量 生化, "9", , 
.常量 救世主, "10", , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 5 0 系统核心支持库
 ' eAPI F7FC1AE45C5C4758AF03EF19F18A395D 3 0 应用接口支持库




数据类型 方框设置参数, 公开, 
    .成员 方框热键, 整数型, , , 例如：#F1键
    .成员 方框周期, 整数型, , , 推荐：在30～500周期
    .成员 显示效率, 逻辑型, , , 每次进图方框显示速度,真为瞬显丨假为慢显
    .成员 方框超频, 逻辑型, , , 加快方框内核频率,电脑配置低谨慎选择
    .成员 左边偏移, 整数型, , , 不解释
    .成员 顶边偏移, 整数型, , , 不解释
    .成员 宽度偏移, 整数型, , , 不解释
    .成员 高度偏移, 整数型, , , 不解释
    .成员 视角偏移, 整数型, , , 不解释
    .成员 精确坐标, 逻辑型, , , 不解释
    .成员 敌人颜色, 整数型, , , 例如：#红色
    .成员 生化敌人颜色, 整数型, , , 例如：#品红
    .成员 方框线宽, 整数型, , , 推荐：填1或2

数据类型 自瞄设置参数, 公开, 
    .成员 自瞄热键, 整数型, , , 例如：#F2键
    .成员 自瞄周期, 整数型, , , 推荐：在15～200周期

数据类型 DevMode, , 
    .成员 dmDeviceName, 字节型, , "32", 
    .成员 dmSpecVersion, 短整数型, , , 
    .成员 dmDriverVersion, 短整数型, , , 
    .成员 dmSize, 短整数型, , , 
    .成员 dmDriverExtra, 短整数型, , , 
    .成员 dmFields, 整数型, , , 
    .成员 dmOrientation, 短整数型, , , 
    .成员 dmPaperSize, 短整数型, , , 
    .成员 dmPaperLength, 短整数型, , , 
    .成员 dmPaperWidth, 短整数型, , , 
    .成员 dmScale, 短整数型, , , 
    .成员 dmCopies, 短整数型, , , 
    .成员 dmDefaultSource, 短整数型, , , 
    .成员 dmPrintQuality, 短整数型, , , 
    .成员 dmColor, 短整数型, , , 
    .成员 dmDuplex, 短整数型, , , 
    .成员 dmYResolution, 短整数型, , , 
    .成员 dmTTOption, 短整数型, , , 
    .成员 dmCollate, 短整数型, , , 
    .成员 dmFormName, 字节型, , "32", 
    .成员 dmLogPixels, 短整数型, , , 
    .成员 dmBitsPerPel, 整数型, , , 
    .成员 dmPelsWidth, 整数型, , , 
    .成员 dmPelsHeight, 整数型, , , 
    .成员 dmDisplayFlags, 整数型, , , 
    .成员 dmDisplayFrequency, 整数型, , , 
    .成员 dmICMMethod, 整数型, , , 
    .成员 dmICMIntent, 整数型, , , 
    .成员 dmMediaType, 整数型, , , 
    .成员 dmDitherType, 整数型, , , 
    .成员 dmReserved1, 整数型, , , 
    .成员 dmReserved2, 整数型, , , 

数据类型 D3D坐标, , 
    .成员 X, 双精度小数型, , , 
    .成员 Z, 双精度小数型, , , 
    .成员 Y, 双精度小数型, , , 


.DLL命令 获取场景, 整数型, "user32.dll", "GetDC", , 
    .参数 hwnd, 整数型, , 

.DLL命令 释放场景, 整数型, "user32.dll", "ReleaseDC", , 
    .参数 hwnd, 整数型, , 
    .参数 hdc, 整数型, , 

.DLL命令 _取当前窗口, 整数型, "user32.dll", "GetForegroundWindow", , 返回前台窗口句柄

.DLL命令 EnumDisplaySettingsA, 整数型, "user32.dll", "EnumDisplaySettingsA", , 
    .参数 lpszDeviceName, 整数型, , 
    .参数 iModeNum, 整数型, , 
    .参数 lpDevMode, DevMode, 传址, 

.DLL命令 测试虚拟键_, 整数型, "user32.dll", "GetAsyncKeyState", , 
    .参数 键代码, 整数型, , vKey Long，欲测试的虚拟键的键码

.DLL命令 创建时钟1, 整数型, "winmm.dll", "timeSetEvent", , 开启时钟事件,成功返回时钟句柄
    .参数 时钟周期, 整数型, , 
    .参数 uResolution, 整数型, , 
    .参数 周期事件, 子程序指针, , 
    .参数 dwUser, 整数型, , 
    .参数 uFlags, 整数型, , 

.DLL命令 关闭时钟1, 整数型, "winmm.dll", "timeKillEvent", , 停止时钟事件,返回0表示成功
    .参数 时钟事件句柄, 整数型, , 

.DLL命令 CreatePen, 整数型, "gdi32.dll", "CreatePen", , 用指定的样式、宽度和颜色创建一个画笔  如函数执行成功，就返回指向新画笔的一个句柄；否则返回零
    .参数 风格, 整数型, , 指定画笔样式，可以是下述常数之一;PS_SOLID：画笔画出的是实线;PS_DASH：画笔画出的是虚线（nWidth必须是1）;PS_DOT：画笔画出的是点线（nWidth必须是1）;PS_DASHDOT：画笔画出的是点划线（nWidth必须是1）;PS_DASHDOTDOT：画笔画出的是点-点-划线（nWidth必须是1）;PS_NULL：画笔不能画图;PS_INSIDEFRAME：画笔在由椭圆、矩形、圆角矩形、饼图以及弦等生成的封闭对象框中画图。如指定的准确RGB颜色不存在，就进行抖动处理
    .参数 宽度, 整数型, , 以逻辑单位表示的画笔的宽度
    .参数 颜色, 整数型, , 画笔的RGB颜色;

.DLL命令 CreateSolidBrush, 整数型, "gdi32.dll", "CreateSolidBrush", , 用纯色创建一个刷子  如执行成功，返回新刷子的一个句柄；否则返回零
    .参数 颜色值, 整数型, , 数字的RGB彩色;

.DLL命令 SelectObject, 整数型, "gdi32.dll", "SelectObject", , 每个设备场景都可能有选入其中的图形对象。其中包括位图、刷子、字体、画笔以及区域等等。一次选入设备场景的只能有一个对象。选定的对象会在设备场景的绘图操作中使用。例如，当前选定的画笔决定了在设备场景中描绘的线段颜色及样式  与以前选入设备场景的相同hObject类型的一个对象的句柄，零表示出错。如选定的对象是一个区域（Region），结果就是下列常数之一：SIMPLEREGION， ;    COMPLEXREGION 或 NULLREGION 对区域进行描述， GDI_ERROR 表示出错
    .参数 设备场景句柄, 整数型, , 一个设备场景的句柄
    .参数 对象句柄, 整数型, , 一个画笔、位图、刷子、字体或区域的句柄;

.DLL命令 GetStockObject, 整数型, "gdi32.dll", "GetStockObject", , 取得一个固有对象（Stock）。这是可由任何应用程序使用的windows标准对象之一  指向指定对象的一个句柄。零表示出错
    .参数 类型, 整数型, , 下述表格中定义的任何常数之一BLACK_BRUSH黑色刷子DKGRAY_BRUSH黑灰色刷子GRAY_BRUSH灰色刷子HOLLOW_BRUSH凹刷子LTGRAY_BRUSH浅灰色刷子NULL_BRUSH空刷子WHITE_BRUSH白色刷子BLACK_PEN黑色画笔NULL_PEN空画笔WHITE_PEN白色画笔ANSI_FIXED_FONT采用windows（ANSI）字符集的等宽字体ANSI_VAR_FONT采用windows（ANSI）字符集的不等宽字体DEVICE_DEFAULT_FONT设备使用的默认字体（NT）DEFAULT_GUI_FONT用户界面的默认字体，包括菜单和对话框字体（Windows 95）OEM_FIXED_FONTOEM字符集的固有字体SYSTEM_FONT屏幕系统字体。这是用于菜单、对话框等等的默认不等宽字体SYSTEM_FIXED_FONT屏幕系统字体。这是用于菜单、对话框等等的默认等宽字体（在windows 3.0之前使用）DEFAULT_PALETTE默认调色板;

.DLL命令 DeleteObject, 整数型, "gdi32.dll", "DeleteObject", , 删除刷子
    .参数 hObject, 整数型, , 

.DLL命令 Rectangle, 整数型, "gdi32.dll", "Rectangle", , 用当前选定的画笔描绘矩形，并用当前选定的刷子进行填充  非零表示成功，零表示失败。会设置GetLastError
    .参数 设备场景句柄, 整数型, , 设备场景的句柄
    .参数 左上角横坐标, 整数型, , 指定矩形左上角位置
    .参数 左上角纵坐标, 整数型, , 同上
    .参数 右下角横坐标, 整数型, , 指定矩形右下角位置
    .参数 右下角纵坐标, 整数型, , 同上;

.DLL命令 _内存读字节集, 整数型, "", "ReadProcessMemory", , 
    .参数 hProcess, 整数型, , 
    .参数 lpBaseAddress, 整数型, , 
    .参数 lpBuffer, 字节集, 传址, 
    .参数 nSize, 整数型, , 
    .参数 lpNumberOfBytesWritten, 整数型, , 

.DLL命令 _内存写整数型, 整数型, "", "WriteProcessMemory", , kernel32.dll
    .参数 hProcess, 整数型, , 
    .参数 pBaseAddress, 整数型, , 内存地址
    .参数 lpBuffer, 整数型, 传址, 数据指针
    .参数 nSize, 整数型, , 长度
    .参数 lpNumberOfBytesWritten, 整数型, , 实际写出长度

.DLL命令 _内存写小数型, 整数型, "", "WriteProcessMemory", , kernel32.dll
    .参数 hProcess, 整数型, , 
    .参数 pBaseAddress, 整数型, , 内存地址
    .参数 lpBuffer, 小数型, 传址, 数据指针
    .参数 nSize, 整数型, , 长度
    .参数 lpNumberOfBytesWritten, 整数型, , 实际写出长度

.DLL命令 GetClassName, 整数型, "user32.dll", "GetClassNameA", , 
    .参数 句柄, 整数型, , 
    .参数 文本, 文本型, , 
    .参数 文本长度, 整数型, , 

.DLL命令 GetWindowRect, 整数型, "user32.dll", "GetWindowRect", , 获取指定窗口大小
    .参数 hwnd, 整数型, , 
    .参数 lpRect, 未知类型0x20002, 传址, 

.DLL命令 SetProcessWorkingSetSize, 整数型, "kernel32.dll", "SetProcessWorkingSetSize", , 
    .参数 hProcess, 整数型, , 
    .参数 lpMinimumWorkingSetSize, 整数型, , 
    .参数 lpMaximumWorkingSetSize, 整数型, , 

.程序集 方框透视子程序, , , 

.程序集变量 方框设置参数, 方框设置参数, , , 
.程序集变量 自瞄设置参数, 自瞄设置参数, , , 
.程序集变量 匿名程序集变量_30569, 空白型, , , 
.程序集变量 热键周期, 整数型, , , 
.程序集变量 热键周期1, 整数型, , , 
.程序集变量 匿名程序集变量_30764, 空白型, , , 
.程序集变量 是否开启, 逻辑型, , , 
.程序集变量 是否开启1, 逻辑型, , , 
.程序集变量 匿名程序集变量_30763, 空白型, , , 
.程序集变量 方框周期, 整数型, , , 
.程序集变量 优化周期, 整数型, , , 
.程序集变量 自瞄周期, 整数型, , , 
.程序集变量 匿名程序集变量_16, 空白型, , , 
.程序集变量 开启方框周期, 整数型, , , 
.程序集变量 读取本人周期, 整数型, , , 
.程序集变量 画出数据周期, 整数型, , , 
.程序集变量 画出数据1周期, 整数型, , , 
.程序集变量 综合时钟周期, 整数型, , , 
.程序集变量 匿名程序集变量_30493, 空白型, , , 
.程序集变量 鼠标竖坐标, 双精度小数型, , , 
.程序集变量 鼠标横坐标, 双精度小数型, , , 
.程序集变量 枪击竖坐标, 双精度小数型, , , 
.程序集变量 枪击横坐标, 双精度小数型, , , 
.程序集变量 视角大小, 双精度小数型, , , 
.程序集变量 本人坐标数据, D3D坐标, , , 
.程序集变量 匿名程序集变量_23, 空白型, , , 
.程序集变量 敌人坐标数据, D3D坐标, , "16", 
.程序集变量 匿名程序集变量_25, 空白型, , , 
.程序集变量 X差距, 双精度小数型, , "16", 
.程序集变量 Y差距, 双精度小数型, , "16", 
.程序集变量 Z差距, 双精度小数型, , "16", 
.程序集变量 匿名程序集变量_29, 空白型, , , 
.程序集变量 X角度, 双精度小数型, , "16", 
.程序集变量 Y角度, 双精度小数型, , "16", 
.程序集变量 匿名程序集变量_32, 空白型, , , 
.程序集变量 X角度结果, 双精度小数型, , "16", 
.程序集变量 Y角度结果, 双精度小数型, , "16", 
.程序集变量 匿名程序集变量_37, 空白型, , , 
.程序集变量 画出横坐标, 双精度小数型, , "16", 
.程序集变量 画出竖坐标, 双精度小数型, , "16", 
.程序集变量 是否死亡, 整数型, , "16", 
.程序集变量 距离, 双精度小数型, , "16", 
.程序集变量 倍数, 双精度小数型, , "16", 
.程序集变量 匿名程序集变量_44, 空白型, , , 
.程序集变量 读取本人, 整数型, , , 
.程序集变量 画出数据, 整数型, , , 
.程序集变量 画出数据1, 整数型, , , 
.程序集变量 匿名程序集变量_16515, 空白型, , , 
.程序集变量 敌人是否画出, 逻辑型, , "16", 
.程序集变量 匿名程序集变量_50, 空白型, , , 
.程序集变量 是否为警察, 整数型, , , 
.程序集变量 是否已经初始化, 逻辑型, , , 
.程序集变量 本人是否死亡, 整数型, , , 
.程序集变量 匿名程序集变量_55, 空白型, , , 
.程序集变量 本人位置, 整数型, , , 
.程序集变量 敌人画出数量, 整数型, , , 
.子程序 _启动子程序, 整数型, 公开, 请在本子程序中放置动态链接库初始化代码
 ' 本178易资源网(www.qk178.com)所有软件和资料均为软件作者提供和网友推荐发布而来
 ' 其版权归该软件和程序源码的合法拥有者所有
 ' 本站易语言资源网整理收集仅供易语言用户学习和易语言技术研究探讨使用
 ' 不得用于任何商业用途。如果由于以上原因造成的版权纠纷本站概不负责！
 ' 如果您发现该软件不能下载，请联系管理员（QQ：1262785454）方便我们问题的解决与处理，谢谢！
设置功能参数 ()
返回 (0) ' 返回值被忽略。

.子程序 设置功能参数, 空白型, , 全局配置
.局部变量 参数, 方框设置参数, , , 
.局部变量 参数1, 自瞄设置参数, , , 
.局部变量 DevMode, DevMode, , , 

赋值 (参数.方框热键, #F9键)
赋值 (参数.方框周期, 30)
赋值 (参数.显示效率, 真)
赋值 (参数.方框超频, 选择 (不等于 (EnumDisplaySettingsA (0, -1, DevMode), 0), 选择 (大于或等于 (DevMode.dmDisplayFrequency, 75), 真, 假), 假))
赋值 (参数.左边偏移, 60)
赋值 (参数.顶边偏移, 98)
赋值 (参数.宽度偏移, 60)
赋值 (参数.高度偏移, 110)
赋值 (参数.视角偏移, 100)
赋值 (参数.精确坐标, 真)
赋值 (参数.敌人颜色, #青绿)
赋值 (参数.生化敌人颜色, #品红)
赋值 (参数.方框线宽, 2)
初始化方框透视 (参数) ' 所有参数都在这里执行！
赋值 (参数1.自瞄热键, #F10键)
赋值 (参数1.自瞄周期, 15)
初始化自动瞄准 (参数1) ' 所有参数都在这里执行！

.子程序 初始化方框透视, 空白型, , 无需热键,调用一次直接激活内部热键!
.参数 初始化参数, 方框设置参数, , 详情调试:设置参数

赋值 (方框设置参数.方框热键, 初始化参数.方框热键)
赋值 (方框设置参数.方框周期, 初始化参数.方框周期)
赋值 (方框设置参数.显示效率, 初始化参数.显示效率)
赋值 (方框设置参数.方框超频, 初始化参数.方框超频)
赋值 (方框设置参数.左边偏移, 初始化参数.左边偏移)
赋值 (方框设置参数.顶边偏移, 初始化参数.顶边偏移)
赋值 (方框设置参数.宽度偏移, 初始化参数.宽度偏移)
赋值 (方框设置参数.高度偏移, 初始化参数.高度偏移)
赋值 (方框设置参数.视角偏移, 初始化参数.视角偏移)
赋值 (方框设置参数.精确坐标, 初始化参数.精确坐标)
赋值 (方框设置参数.敌人颜色, 初始化参数.敌人颜色)
赋值 (方框设置参数.生化敌人颜色, 初始化参数.生化敌人颜色)
赋值 (方框设置参数.方框线宽, 初始化参数.方框线宽)
.如果真 (并且 (不等于 (初始化参数.方框热键, 0), 不等于 (初始化参数.方框周期, 0), 不等于 (初始化参数.左边偏移, 0), 不等于 (初始化参数.顶边偏移, 0), 不等于 (初始化参数.宽度偏移, 0), 不等于 (初始化参数.高度偏移, 0), 不等于 (初始化参数.视角偏移, 0), 不等于 (初始化参数.敌人颜色, 0), 不等于 (初始化参数.生化敌人颜色, 0), 不等于 (初始化参数.方框线宽, 0)))
    .如果真 (等于 (热键周期, 0))
        赋值 (热键周期, 创建时钟1 (150, 0, &热键, 1, 1))
    .如果真结束
    
.如果真结束


.子程序 初始化自动瞄准, 空白型, , 无需热键,调用一次直接激活内部热键!
.参数 初始化参数, 自瞄设置参数, , 详情调试:设置参数

赋值 (自瞄设置参数.自瞄热键, 初始化参数.自瞄热键)
赋值 (自瞄设置参数.自瞄周期, 初始化参数.自瞄周期)
.如果真 (并且 (不等于 (初始化参数.自瞄热键, 0), 不等于 (初始化参数.自瞄周期, 0)))
    .如果真 (等于 (热键周期1, 0))
        赋值 (热键周期1, 创建时钟1 (150, 0, &热键1, 1, 1))
    .如果真结束
    
.如果真结束


.子程序 热键, 空白型, , 
.参数 HOOK1, 整数型, , 
.参数 HOOK2, 整数型, , 
.参数 HOOK3, 整数型, , 
.参数 HOOK4, 整数型, , 
.参数 HOOK5, 整数型, , 

.如果真 (不等于 (测试虚拟键_ (方框设置参数.方框热键), 0))
    赋值 (开启方框周期, 选择 (大于或等于 (方框设置参数.方框周期, 11), 相减 (方框设置参数.方框周期, 10), 方框设置参数.方框周期))
    赋值 (读取本人周期, 选择 (方框设置参数.方框超频, 2, 2))
    赋值 (画出数据周期, 选择 (方框设置参数.方框超频, 2, 3))
    赋值 (画出数据1周期, 选择 (方框设置参数.方框超频, 2, 5))
    赋值 (综合时钟周期, 相乘 (相加 (读取本人周期, 画出数据周期, 画出数据1周期), 开启方框周期))
    .如果真 (不等于 (综合时钟周期, 0))
        透视开关 ()
    .如果真结束
    
.如果真结束


.子程序 热键1, 空白型, , 
.参数 HOOK1, 整数型, , 
.参数 HOOK2, 整数型, , 
.参数 HOOK3, 整数型, , 
.参数 HOOK4, 整数型, , 
.参数 HOOK5, 整数型, , 

.如果真 (不等于 (测试虚拟键_ (自瞄设置参数.自瞄热键), 0))
    自瞄开关 ()
.如果真结束


.子程序 自瞄开关, 空白型, , 
.如果 (等于 (是否开启1, 假))
    赋值 (是否开启1, 真)
    赋值 (自瞄周期, 创建时钟1 (自瞄设置参数.自瞄周期, 0, &自动瞄准, 1, 1))
    鸣叫 () ' 这是习惯开的声音
.否则
    赋值 (是否开启1, 假)
    关闭时钟1 (自瞄周期)
    赋值 (自瞄周期, 0)
    鸣叫 () ' 这是习惯开的声音
.如果结束


.子程序 透视开关, 空白型, , 
.如果 (等于 (是否开启, 假))
    赋值 (是否开启, 真)
    赋值 (是否已经初始化, 假)
    赋值 (优化周期, 创建时钟1 (综合时钟周期, 0, &游戏优化, 1, 1))
    赋值 (方框周期, 创建时钟1 (开启方框周期, 0, &每次进图初始化, 1, 1))
    鸣叫 () ' 这是习惯开的声音
.否则
    赋值 (是否开启, 假)
    关闭时钟1 (优化周期)
    关闭时钟1 (方框周期)
    关闭时钟1 (读取本人)
    关闭时钟1 (画出数据)
    关闭时钟1 (画出数据1)
    赋值 (优化周期, 0)
    赋值 (方框周期, 0)
    赋值 (读取本人, 0)
    赋值 (画出数据, 0)
    赋值 (画出数据1, 0)
    鸣叫 () ' 这是习惯开的声音
.如果结束


.子程序 求X角度, 双精度小数型, , 
.参数 X距离, 双精度小数型, , 
.参数 Y距离, 双精度小数型, , 

.局部变量 对边, 双精度小数型, , , 
.局部变量 邻边, 双精度小数型, , , 

.如果真 (并且 (等于 (X距离, 0), 小于 (Y距离, 0)))
    返回 (0)
.如果真结束
.如果真 (并且 (等于 (X距离, 0), 大于 (Y距离, 0)))
    返回 (180)
.如果真结束
.如果真 (并且 (大于 (X距离, 0), 等于 (Y距离, 90)))
    返回 (90)
.如果真结束
.如果真 (并且 (小于 (X距离, 0), 等于 (Y距离, 0)))
    返回 (270)
.如果真结束
.如果真 (并且 (大于 (X距离, 0), 小于 (Y距离, 0)))
    赋值 (对边, Y距离)
    赋值 (邻边, X距离)
    返回 (相加 (相除 (相乘 (求反正切 (相除 (对边, 邻边)), 180), #pi), 90))
.如果真结束
.如果真 (并且 (小于 (X距离, 0), 小于 (Y距离, 0)))
    赋值 (对边, X距离)
    赋值 (邻边, Y距离)
    返回 (相减 (360, 相除 (相乘 (求反正切 (相除 (对边, 邻边)), 180), #pi)))
.如果真结束
.如果真 (并且 (大于 (X距离, 0), 大于 (Y距离, 0)))
    赋值 (对边, Y距离)
    赋值 (邻边, X距离)
    返回 (相加 (相除 (相乘 (求反正切 (相除 (对边, 邻边)), 180), #pi), 90))
.如果真结束
.如果真 (并且 (小于 (X距离, 0), 大于 (Y距离, 0)))
    赋值 (对边, X距离)
    赋值 (邻边, Y距离)
    返回 (相减 (180, 相除 (相乘 (求反正切 (相除 (对边, 邻边)), 180), #pi)))
.如果真结束
返回 (0)

.子程序 求Y角度, 双精度小数型, , 
.参数 X距离, 双精度小数型, , 
.参数 Y距离, 双精度小数型, , 
.参数 Z距离, 双精度小数型, , 

.局部变量 对边, 双精度小数型, , , 
.局部变量 邻边, 双精度小数型, , , 

赋值 (对边, Z距离)
赋值 (邻边, 求平方根 (相加 (相乘 (Y距离, Y距离), 相乘 (X距离, X距离))))
返回 (相除 (相乘 (求反正切 (相除 (对边, 邻边)), 180), #pi))

.子程序 每次进图初始化, 空白型, , 
.参数 HOOK1, 整数型, , 
.参数 HOOK2, 整数型, , 
.参数 HOOK3, 整数型, , 
.参数 HOOK4, 整数型, , 
.参数 HOOK5, 整数型, , 

.局部变量 i, 整数型, , , 
.局部变量 临时地址, 整数型, , , 

.如果 (等于 (汇编_读整数型 (#是否在游戏基址), 1))
    .如果真 (等于 (是否已经初始化, 假))
        赋值 (是否已经初始化, 真)
        .如果真 (等于 (方框设置参数.显示效率, 真))
            .计次循环首 (16, i)
                赋值 (临时地址, 汇编_读整数型 (相加 (#敌人基址, 相乘 (相减 (i, 1), 448))))
                汇编_写整数型 (相加 (临时地址, #是否死亡偏移), 1)
            .计次循环尾 ()
        .如果真结束
        
    .如果真结束
    .如果真 (等于 (读取本人, 0))
        赋值 (本人位置, 取本人位置 ())
        赋值 (敌人画出数量, 取显示人物数量 ())
        赋值 (读取本人, 创建时钟1 (读取本人周期, 0, &读取本人1周期, 1, 1))
        赋值 (画出数据, 创建时钟1 (画出数据周期, 0, &画出敌人, 1, 1))
        赋值 (画出数据1, 创建时钟1 (画出数据1周期, 0, &画出敌人1, 1, 1))
    .如果真结束
    
.否则
    .如果真 (等于 (是否已经初始化, 真))
        赋值 (是否已经初始化, 假)
        关闭时钟1 (读取本人)
        关闭时钟1 (画出数据)
        关闭时钟1 (画出数据1)
        赋值 (读取本人, 0)
        赋值 (画出数据, 0)
        赋值 (画出数据1, 0)
    .如果真结束
    
.如果结束


.子程序 画出敌人, 空白型, , 
.参数 HOOK1, 整数型, , 
.参数 HOOK2, 整数型, , 
.参数 HOOK3, 整数型, , 
.参数 HOOK4, 整数型, , 
.参数 HOOK5, 整数型, , 

.局部变量 hDC, 整数型, , , 
.局部变量 a, 整数型, , , 

.如果真 (不等于 (敌人画出数量, 8))
    返回 ()
.如果真结束
.如果真 (等于 (本人是否死亡, 0))
    返回 ()
.如果真结束
赋值 (hDC, 获取场景 (_取当前窗口 ()))
.计次循环首 (8, a)
    读取敌人1周期 (相加 (a, 相乘 (相减 (1, 是否为警察), 8)))
    计算敌人1周期 (相加 (a, 相乘 (相减 (1, 是否为警察), 8)))
    .如果真 (敌人是否画出 [相加 (a, 相乘 (相减 (1, 是否为警察), 8))])
        绘制矩形 (hDC, 相减 (画出横坐标 [相加 (a, 相乘 (相减 (1, 是否为警察), 8))], 相除 (相乘 (相除 (相乘 (方框设置参数.左边偏移, 倍数 [相加 (a, 相乘 (相减 (1, 是否为警察), 8))]), 2), 方框设置参数.视角偏移), 视角大小)), 相减 (画出竖坐标 [相加 (a, 相乘 (相减 (1, 是否为警察), 8))], 相除 (相乘 (相除 (相乘 (方框设置参数.顶边偏移, 倍数 [相加 (a, 相乘 (相减 (1, 是否为警察), 8))]), 2), 方框设置参数.视角偏移), 视角大小)), 相乘 (相除 (相乘 (相除 (相乘 (方框设置参数.宽度偏移, 倍数 [相加 (a, 相乘 (相减 (1, 是否为警察), 8))]), 2), 方框设置参数.视角偏移), 视角大小), 2), 相乘 (相除 (相乘 (相除 (相乘 (方框设置参数.高度偏移, 倍数 [相加 (a, 相乘 (相减 (1, 是否为警察), 8))]), 2), 方框设置参数.视角偏移), 视角大小), 2), 方框设置参数.敌人颜色, 方框设置参数.方框线宽)
    .如果真结束
    
.计次循环尾 ()
释放场景 (_取当前窗口 (), hDC)

.子程序 画出敌人1, 空白型, , 
.参数 HOOK1, 整数型, , 
.参数 HOOK2, 整数型, , 
.参数 HOOK3, 整数型, , 
.参数 HOOK4, 整数型, , 
.参数 HOOK5, 整数型, , 

.局部变量 hDC, 整数型, , , 
.局部变量 a, 整数型, , , 
.局部变量 敌人基址, 整数型, , , 
.局部变量 自己为生化, 整数型, , , 

.如果真 (并且 (不等于 (敌人画出数量, 16), 不等于 (敌人画出数量, 15)))
    返回 ()
.如果真结束
.如果真 (等于 (本人是否死亡, 0))
    返回 ()
.如果真结束
赋值 (hDC, 获取场景 (_取当前窗口 ()))
.判断开始 (等于 (敌人画出数量, 16))
    .计次循环首 (16, a)
        .如果真 (不等于 (a, 本人位置))
            读取敌人1周期 (a)
            计算敌人1周期 (a)
            .如果真 (小于 (距离 [a], 500))
                到循环尾 ()
            .如果真结束
            .如果真 (敌人是否画出 [a])
                绘制矩形 (hDC, 相减 (画出横坐标 [a], 相除 (相乘 (相除 (相乘 (方框设置参数.左边偏移, 倍数 [a]), 2), 方框设置参数.视角偏移), 视角大小)), 相减 (画出竖坐标 [a], 相除 (相乘 (相除 (相乘 (方框设置参数.顶边偏移, 倍数 [a]), 2), 方框设置参数.视角偏移), 视角大小)), 相乘 (相除 (相乘 (相除 (相乘 (方框设置参数.宽度偏移, 倍数 [a]), 2), 方框设置参数.视角偏移), 视角大小), 2), 相乘 (相除 (相乘 (相除 (相乘 (方框设置参数.高度偏移, 倍数 [a]), 2), 方框设置参数.视角偏移), 视角大小), 2), 方框设置参数.敌人颜色, 方框设置参数.方框线宽)
            .如果真结束
            
        .如果真结束
        
    .计次循环尾 ()
.判断 (等于 (敌人画出数量, 15))
    赋值 (敌人基址, 汇编_读整数型 (相加 (#敌人基址, 相乘 (相减 (本人位置, 1), 448))))
    赋值 (自己为生化, 汇编_读整数型 (相加 (敌人基址, #是否为生化)))
    .计次循环首 (16, a)
        .如果真 (不等于 (a, 本人位置))
            赋值 (敌人基址, 汇编_读整数型 (相加 (#敌人基址, 相乘 (相减 (a, 1), 448))))
            读取敌人1周期 (a)
            计算敌人1周期 (a)
            .如果真 (小于 (距离 [a], 100))
                到循环尾 ()
            .如果真结束
            .如果真 (不等于 (相减 (自己为生化, 汇编_读整数型 (相加 (敌人基址, #是否为生化))), 0))
                .如果真 (敌人是否画出 [a])
                    绘制矩形 (hDC, 相减 (画出横坐标 [a], 相除 (相乘 (相除 (相乘 (方框设置参数.左边偏移, 倍数 [a]), 2), 方框设置参数.视角偏移), 视角大小)), 相减 (画出竖坐标 [a], 相除 (相乘 (相除 (相乘 (方框设置参数.顶边偏移, 倍数 [a]), 2), 方框设置参数.视角偏移), 视角大小)), 相乘 (相除 (相乘 (相除 (相乘 (方框设置参数.宽度偏移, 倍数 [a]), 2), 方框设置参数.视角偏移), 视角大小), 2), 相乘 (相除 (相乘 (相除 (相乘 (方框设置参数.高度偏移, 倍数 [a]), 2), 方框设置参数.视角偏移), 视角大小), 2), 方框设置参数.生化敌人颜色, 方框设置参数.方框线宽)
                .如果真结束
                
            .如果真结束
            
        .如果真结束
        
    .计次循环尾 ()
.默认
    
.判断结束
释放场景 (_取当前窗口 (), hDC)

.子程序 读取本人1周期, 空白型, , 
.参数 HOOK1, 整数型, , 
.参数 HOOK2, 整数型, , 
.参数 HOOK3, 整数型, , 
.参数 HOOK4, 整数型, , 
.参数 HOOK5, 整数型, , 

.局部变量 临时人物, 整数型, , , 
.局部变量 人物一级, 整数型, , , 
.局部变量 临时本人视角, 整数型, , , 
.局部变量 临时人物1, 整数型, , , 

赋值 (临时人物, 汇编_读整数型 (#人物基址)) ' 人物地址17154880
 ' --------------
赋值 (鼠标竖坐标, 相除 (汇编_读小数型 (相加 (临时人物, #鼠标Y偏移)), 0.01745329300563))
赋值 (鼠标横坐标, 相除 (汇编_读小数型 (相加 (临时人物, #鼠标X偏移)), 0.01745329300563))
 ' --------------1
.如果真 (等于 (方框设置参数.精确坐标, 真))
    赋值 (枪击竖坐标, 相除 (汇编_读小数型 (相加 (临时人物, #枪击Y偏移)), 0.01745329300563))
    赋值 (枪击横坐标, 相除 (汇编_读小数型 (相加 (临时人物, #枪击X偏移)), 0.01745329300563))
.如果真结束
 ' --------------2
赋值 (人物一级, 汇编_读整数型 (相加 (临时人物, 260)))
赋值 (临时本人视角, 汇编_读整数型 (#视角基址)) ' 免费角色地址01074494
赋值 (视角大小, 相除 (汇编_读小数型 (相加 (临时本人视角, #视角偏移)), 0.01745329300563)) ' 没开镜：1070141403 第一次：1055246586 第二次： 1040583314
.判断循环首 (大于 (鼠标横坐标, 360))
    赋值 (鼠标横坐标, 相减 (鼠标横坐标, 360))
.判断循环尾 ()
.判断循环首 (小于 (鼠标横坐标, 0))
    赋值 (鼠标横坐标, 相加 (鼠标横坐标, 360))
.判断循环尾 ()
赋值 (本人坐标数据.X, 汇编_读小数型 (相加 (人物一级, 220)))
赋值 (本人坐标数据.Z, 汇编_读小数型 (相加 (人物一级, 224)))
赋值 (本人坐标数据.Y, 汇编_读小数型 (相加 (人物一级, 228)))
赋值 (本人坐标数据.X, 相乘 (本人坐标数据.X, -1))
赋值 (是否为警察, 汇编_读整数型 (#阵营基址))
赋值 (本人是否死亡, 汇编_读整数型 (#本人死亡基址))

.子程序 读取敌人1周期, 空白型, , 
.参数 人物, 整数型, , 

.局部变量 临时敌人基址, 整数型, , , 

 ' --------------------------------------------
赋值 (临时敌人基址, 汇编_读整数型 (相加 (#敌人基址, 相乘 (相减 (人物, 1), 448)))) ' 匪1 活着1  死了 0
赋值 (敌人坐标数据 [人物], X, 汇编_读小数型 (相加 (临时敌人基址, #坐标X偏移)))
赋值 (敌人坐标数据 [人物], Z, 相减 (汇编_读小数型 (相加 (临时敌人基址, #坐标Z偏移)), 70))
赋值 (敌人坐标数据 [人物], Y, 汇编_读小数型 (相加 (临时敌人基址, #坐标Y偏移)))
赋值 (敌人坐标数据 [人物], X, 相乘 (敌人坐标数据 [人物], X, -1))
 ' -----------------------------------
赋值 (是否死亡 [人物], 汇编_读整数型 (相加 (临时敌人基址, #是否死亡偏移)))
 ' -----------------------------------
赋值 (X差距 [人物], 相减 (本人坐标数据.X, 敌人坐标数据 [人物], X))
赋值 (Y差距 [人物], 相减 (本人坐标数据.Y, 敌人坐标数据 [人物], Y))
赋值 (Z差距 [人物], 相减 (本人坐标数据.Z, 敌人坐标数据 [人物], Z))
 ' ------------------------------------------------
赋值 (X角度 [人物], 求X角度 (X差距 [人物], Y差距 [人物]))
赋值 (Y角度 [人物], 求Y角度 (X差距 [人物], Y差距 [人物], Z差距 [人物]))

.子程序 计算敌人1周期, 空白型, , 
.参数 人物, 整数型, , 

.局部变量 a, 整数型, , , 
.局部变量 总距离, 双精度小数型, , , 
.局部变量 X距离1, 双精度小数型, , , 
.局部变量 X距离2, 双精度小数型, , , 
.局部变量 Y距离1, 双精度小数型, , , 
.局部变量 大小, 未知类型0x20002, , , 

.如果真 (不等于 (取类名 (_取当前窗口 ()), “CrossFire”))
    赋值 (敌人是否画出 [人物], 假)
    返回 ()
.如果真结束
.如果真 (等于 (是否死亡 [人物], 0))
    赋值 (敌人是否画出 [人物], 假)
    返回 ()
.如果真结束
.如果真 (或者 (等于 (敌人坐标数据 [人物], Z, -70), 等于 (敌人坐标数据 [人物], Z, -71)))
    赋值 (敌人是否画出 [人物], 假)
    返回 ()
.如果真结束
.如果真 (不等于 (GetWindowRect (_取当前窗口 (), 大小), 0))
    赋值 (距离 [人物], 求平方根 (相加 (相乘 (X差距 [人物], X差距 [人物]), 相乘 (Y差距 [人物], Y差距 [人物]), 相乘 (Z差距 [人物], Z差距 [人物]))))
    赋值 (倍数 [人物], 相除 (1000, 距离 [人物]))
    .如果真 (等于 (方框设置参数.精确坐标, 真))
        赋值 (X角度 [人物], 相减 (X角度 [人物], 相除 (枪击横坐标, 1.5))) ' 精确坐标
        赋值 (Y角度 [人物], 相减 (Y角度 [人物], 相除 (枪击竖坐标, 1.8))) ' 精确坐标
    .如果真结束
    .如果真 (小于 (倍数 [人物], 0.15))
        赋值 (倍数 [人物], 0.15)
    .如果真结束
    .如果真 (并且 (大于 (X角度 [人物], 270), 小于 (鼠标横坐标, 90)))
        赋值 (X角度结果 [人物], 相减 (X角度 [人物], 鼠标横坐标, 360))
        赋值 (a, 1)
    .如果真结束
    .如果真 (并且 (小于 (X角度 [人物], 90), 大于 (鼠标横坐标, 270)))
        赋值 (X角度结果 [人物], 相乘 (相减 (鼠标横坐标, X角度 [人物], 360), -1))
        赋值 (a, 1)
    .如果真结束
    .如果真 (不等于 (a, 1))
        赋值 (X角度结果 [人物], 相减 (X角度 [人物], 鼠标横坐标))
    .如果真结束
    赋值 (Y角度结果 [人物], 相减 (鼠标竖坐标, Y角度 [人物]))
    .如果真 (或者 (大于 (X角度结果 [人物], 相除 (视角大小, 2)), 小于 (X角度结果 [人物], 相除 (负 (视角大小), 2))))
        赋值 (敌人是否画出 [人物], 假)
        返回 ()
    .如果真结束
    赋值 (总距离, 求平方根 (相加 (相乘 (X差距 [人物], X差距 [人物]), 相乘 (Y差距 [人物], Y差距 [人物]))))
    赋值 (X距离1, 相乘 (总距离, 求正弦 (相除 (相乘 (X角度结果 [人物], #pi), 180))))
    赋值 (X距离2, 相除 (X距离1, 求正切 (相除 (相乘 (X角度结果 [人物], #pi), 180))))
    赋值 (画出横坐标 [人物], 相加 (相除 (相减 (大小., 大小.), 2), 相除 (相乘 (相加 (相除 (相乘 (相除 (相减 (大小., 大小.), 2), X距离1), X距离2), X角度结果 [人物]), 方框设置参数.视角偏移), 视角大小))) ' － 角度结果
    赋值 (Y距离1, 相乘 (总距离, 求正切 (相除 (相乘 (Y角度结果 [人物], #pi), 180))))
    赋值 (画出竖坐标 [人物], 相减 (相除 (相减 (大小., 大小.), 2), 相除 (相乘 (相加 (相除 (相乘 (相除 (相减 (大小., 大小.), 2), Y距离1), 总距离), Y角度结果 [人物]), 方框设置参数.视角偏移), 视角大小))) ' － (鼠标竖坐标 － Y角度)
    .如果真 (或者 (大于 (画出横坐标 [人物], 相减 (大小., 大小.)), 小于 (画出横坐标 [人物], 0), 大于 (画出竖坐标 [人物], 相减 (大小., 大小.)), 小于 (画出竖坐标 [人物], 0)))
        赋值 (敌人是否画出 [人物], 假)
        返回 ()
    .如果真结束
    赋值 (敌人是否画出 [人物], 真)
.如果真结束


.子程序 取显示人物数量, 整数型, , 
.局部变量 模式, 整数型, , , 
.局部变量 模式1, 整数型, , , 

赋值 (模式, 汇编_读整数型 (#模式基址)) ' 17253512
赋值 (模式1, 汇编_读整数型 (相加 (模式, #模式一级)))
赋值 (模式, 汇编_读整数型 (相加 (模式1, #模式二级)))
.如果 (或者 (等于 (模式, #团队模式), 等于 (模式, #突围模式), 等于 (模式, #爆破模式), 等于 (模式, #幽灵模式), 等于 (模式, #特殊站), 等于 (模式, #歼灭模式)))
    返回 (8)
.否则
    .如果真 (等于 (模式, #个人竞技))
        返回 (16)
    .如果真结束
    .如果真 (或者 (等于 (模式, #终结者模式), 等于 (模式, #生化), 等于 (模式, #救世主)))
        返回 (15)
    .如果真结束
    
.如果结束
返回 (0)

.子程序 取本人位置, 整数型, , 
返回 (相加 (汇编_读整数型 (#本人位置), 1))

.子程序 绘制矩形, 逻辑型, , 
.参数 场景句柄, 整数型, , 
.参数 左边, 整数型, , 
.参数 顶边, 整数型, , 
.参数 宽度, 整数型, , 
.参数 高度, 整数型, , 
.参数 边框颜色, 整数型, 可空, 默认黑色。
.参数 线宽, 整数型, 可空, 默认宽度为2。
.参数 是否填充, 逻辑型, 可空, 默认不填充。
.参数 填充颜色, 整数型, 可空, 默认为白色。

.局部变量 hBrush, 整数型, , , 
.局部变量 Penhandle, 整数型, , , 
.局部变量 Penhandle1, 整数型, , , 
.局部变量 矩形, 未知类型0x20002, , , 
.局部变量 变量, 整数型, , , 

.如果真 (等于 (是否为空 (边框颜色), 真))
    赋值 (边框颜色, #黑色)
.如果真结束
.如果真 (等于 (是否为空 (线宽), 真))
    赋值 (线宽, 2)
.如果真结束
赋值 (Penhandle, CreatePen (0, 线宽, 边框颜色)) ' 创建画笔，宽度为2，类型（PS_SOLID）为实线，颜色为紫色
.如果真 (不等于 (Penhandle, 0))
    SelectObject (场景句柄, Penhandle) ' 把画笔载入HDC（设备场景）
    DeleteObject (Penhandle)
.如果真结束
.如果 (不等于 (是否为空 (是否填充), 真))
    .如果 (等于 (是否填充, 真))
        .如果 (等于 (是否为空 (填充颜色), 真))
            赋值 (Penhandle1, CreateSolidBrush (#白色)) ' 创建画刷
            SelectObject (场景句柄, Penhandle1) ' 把画笔载入HDC（设备场景）
            DeleteObject (Penhandle1)
        .否则
            赋值 (Penhandle1, CreateSolidBrush (填充颜色)) ' 创建画刷
            SelectObject (场景句柄, Penhandle1) ' 把画笔载入HDC（设备场景）
            DeleteObject (Penhandle1)
        .如果结束
        
    .否则
        赋值 (hBrush, GetStockObject (5)) ' 创建画刷
        SelectObject (场景句柄, hBrush) ' 把画笔载入HDC（设备场景）
        DeleteObject (hBrush)
    .如果结束
    
.否则
    赋值 (hBrush, GetStockObject (5)) ' 创建画刷
    SelectObject (场景句柄, hBrush) ' 把画笔载入HDC（设备场景）
    DeleteObject (hBrush)
.如果结束
赋值 (矩形., 左边)
赋值 (矩形., 顶边)
赋值 (矩形., 相加 (左边, 宽度))
赋值 (矩形., 相加 (顶边, 高度))
赋值 (变量, Rectangle (场景句柄, 矩形., 矩形., 矩形., 矩形.))
.如果真 (不等于 (Penhandle, 0))
    DeleteObject (Penhandle)
.如果真结束
.如果真 (不等于 (Penhandle1, 0))
    DeleteObject (Penhandle1)
.如果真结束
.如果真 (不等于 (hBrush, 0))
    DeleteObject (hBrush)
.如果真结束
返回 (不等于 (变量, 0))

.子程序 游戏优化, 空白型, , 
.参数 HOOK1, 整数型, , 
.参数 HOOK2, 整数型, , 
.参数 HOOK3, 整数型, , 
.参数 HOOK4, 整数型, , 
.参数 HOOK5, 整数型, , 

SetProcessWorkingSetSize (-1, -1, -1)

.程序集 自动瞄准子程序, , , 

.程序集变量 人物位置, 整数型, , , 
.程序集变量 当前选中, 整数型, , , 
.子程序 自动瞄准, 空白型, , 
.参数 HOOK1, 整数型, , 
.参数 HOOK2, 整数型, , 
.参数 HOOK3, 整数型, , 
.参数 HOOK4, 整数型, , 
.参数 HOOK5, 整数型, , 

.局部变量 i, 整数型, , , 
.局部变量 敌人坐标数据x, 双精度小数型, , , 
.局部变量 敌人坐标数据y, 双精度小数型, , , 
.局部变量 敌人坐标数据z, 双精度小数型, , , 
.局部变量 本人坐标数据x, 双精度小数型, , , 
.局部变量 本人坐标数据y, 双精度小数型, , , 
.局部变量 本人坐标数据z, 双精度小数型, , , 
.局部变量 D3D距离, 小数型, , , 
.局部变量 最近距离, 小数型, , , 
.局部变量 X角度, 双精度小数型, , , 
.局部变量 Y角度, 双精度小数型, , , 
.局部变量 人物地址, 整数型, , , 
.局部变量 人物一级, 整数型, , , 
.局部变量 敌人基址, 整数型, , , 
.局部变量 X差距, 双精度小数型, , , 
.局部变量 Y差距, 双精度小数型, , , 
.局部变量 Z差距, 双精度小数型, , , 
.局部变量 敌人阵营, 整数型, , , 
.局部变量 敌人视角, 小数型, , , 
.局部变量 临时位置, 整数型, , , 
.局部变量 敌人数量, 整数型, , , 

赋值 (人物地址, 汇编_读整数型 (#人物基址))
.如果真 (大于 (人物地址, 0))
    .如果真 (等于 (汇编_读整数型 (#本人死亡基址), 1))
        赋值 (敌人数量, 取显示人物数量 ())
        .判断开始 (等于 (敌人数量, 8))
            赋值 (人物一级, 汇编_读整数型 (相加 (人物地址, #坐标一级)))
            赋值 (本人坐标数据x, 汇编_读小数型 (相加 (人物一级, 220)))
            赋值 (本人坐标数据z, 汇编_读小数型 (相加 (人物一级, 224)))
            赋值 (本人坐标数据y, 汇编_读小数型 (相加 (人物一级, 228)))
            赋值 (敌人阵营, 相减 (1, 汇编_读整数型 (#阵营基址)))
            .如果真 (并且 (小于 (当前选中, 8), 小于 (汇编_读整数型 (#本人位置), 8)))
                赋值 (当前选中, 255)
            .如果真结束
            .如果真 (并且 (大于 (当前选中, 7), 大于 (汇编_读整数型 (#本人位置), 7)))
                赋值 (当前选中, 255)
            .如果真结束
            .如果真 (等于 (当前选中, 255))
                赋值 (最近距离, 0)
                赋值 (临时位置, 255)
                .计次循环首 (8, i)
                    赋值 (人物位置, 相加 (相减 (i, 1), 相乘 (敌人阵营, 8)))
                    赋值 (敌人基址, 汇编_读整数型 (相加 (#敌人基址, 相乘 (人物位置, #坐标基址规律))))
                    .如果真 (等于 (汇编_读整数型 (相加 (敌人基址, #是否死亡偏移)), 1))
                        赋值 (敌人坐标数据x, 汇编_读小数型 (相加 (敌人基址, #坐标X偏移)))
                        赋值 (敌人坐标数据z, 汇编_读小数型 (相加 (敌人基址, #坐标Z偏移)))
                        赋值 (敌人坐标数据y, 汇编_读小数型 (相加 (敌人基址, #坐标Y偏移)))
                        赋值 (D3D距离, 取3D坐标距离 (本人坐标数据x, 本人坐标数据y, 敌人坐标数据x, 敌人坐标数据y))
                        .如果真 (等于 (最近距离, 0))
                            赋值 (最近距离, D3D距离)
                            赋值 (临时位置, 人物位置)
                        .如果真结束
                        .如果 (小于 (D3D距离, 最近距离))
                            赋值 (最近距离, D3D距离)
                            赋值 (临时位置, 人物位置)
                        .否则
                            .如果真 (等于 (i, 8))
                                赋值 (临时位置, 人物位置)
                            .如果真结束
                            
                        .如果结束
                        
                    .如果真结束
                    
                .计次循环尾 ()
                赋值 (当前选中, 临时位置)
            .如果真结束
            
        .判断 (等于 (敌人数量, 16))
            赋值 (人物一级, 汇编_读整数型 (相加 (人物地址, #坐标一级)))
            赋值 (本人坐标数据x, 汇编_读小数型 (相加 (人物一级, 220)))
            赋值 (本人坐标数据z, 汇编_读小数型 (相加 (人物一级, 224)))
            赋值 (本人坐标数据y, 汇编_读小数型 (相加 (人物一级, 228)))
            .如果真 (等于 (当前选中, 255))
                赋值 (最近距离, 0)
                赋值 (临时位置, 255)
                .计次循环首 (16, i)
                    .如果 (不等于 (汇编_读整数型 (#本人位置), 相减 (i, 1)))
                        赋值 (人物位置, 相减 (i, 1))
                    .否则
                        到循环尾 ()
                    .如果结束
                    赋值 (敌人基址, 汇编_读整数型 (相加 (#敌人基址, 相乘 (人物位置, #坐标基址规律))))
                    .如果真 (等于 (汇编_读整数型 (相加 (敌人基址, #是否死亡偏移)), 1))
                        赋值 (敌人坐标数据x, 汇编_读小数型 (相加 (敌人基址, #坐标X偏移)))
                        赋值 (敌人坐标数据z, 汇编_读小数型 (相加 (敌人基址, #坐标Z偏移)))
                        赋值 (敌人坐标数据y, 汇编_读小数型 (相加 (敌人基址, #坐标Y偏移)))
                        赋值 (D3D距离, 取3D坐标距离 (本人坐标数据x, 本人坐标数据y, 敌人坐标数据x, 敌人坐标数据y))
                        .如果真 (等于 (最近距离, 0))
                            赋值 (最近距离, D3D距离)
                            赋值 (临时位置, 人物位置)
                        .如果真结束
                        .如果 (小于 (D3D距离, 最近距离))
                            赋值 (最近距离, D3D距离)
                            赋值 (临时位置, 人物位置)
                        .否则
                            .如果真 (等于 (i, 16))
                                赋值 (临时位置, 人物位置)
                            .如果真结束
                            
                        .如果结束
                        
                    .如果真结束
                    
                .计次循环尾 ()
                赋值 (当前选中, 临时位置)
            .如果真结束
            
        .判断 (等于 (敌人数量, 15))
            赋值 (人物一级, 汇编_读整数型 (相加 (人物地址, #坐标一级)))
            赋值 (本人坐标数据x, 汇编_读小数型 (相加 (人物一级, 220)))
            赋值 (本人坐标数据z, 汇编_读小数型 (相加 (人物一级, 224)))
            赋值 (本人坐标数据y, 汇编_读小数型 (相加 (人物一级, 228)))
            .如果真 (等于 (当前选中, 255))
                赋值 (最近距离, 0)
                赋值 (临时位置, 255)
                .计次循环首 (16, i)
                    .如果 (不等于 (汇编_读整数型 (#本人位置), 相减 (i, 1)))
                        赋值 (人物位置, 相减 (i, 1))
                    .否则
                        到循环尾 ()
                    .如果结束
                    赋值 (敌人基址, 汇编_读整数型 (相加 (#敌人基址, 相乘 (人物位置, #坐标基址规律))))
                    .如果真 (等于 (汇编_读整数型 (相加 (敌人基址, #是否死亡偏移)), 1))
                        .如果真 (等于 (汇编_读整数型 (相加 (敌人基址, #是否为生化)), 1))
                            赋值 (敌人坐标数据x, 汇编_读小数型 (相加 (敌人基址, #坐标X偏移)))
                            赋值 (敌人坐标数据z, 汇编_读小数型 (相加 (敌人基址, #坐标Z偏移)))
                            赋值 (敌人坐标数据y, 汇编_读小数型 (相加 (敌人基址, #坐标Y偏移)))
                            赋值 (D3D距离, 取3D坐标距离 (本人坐标数据x, 本人坐标数据y, 敌人坐标数据x, 敌人坐标数据y))
                            .如果真 (等于 (最近距离, 0))
                                赋值 (最近距离, D3D距离)
                                赋值 (临时位置, 人物位置)
                            .如果真结束
                            .如果 (小于 (D3D距离, 最近距离))
                                赋值 (最近距离, D3D距离)
                                赋值 (临时位置, 人物位置)
                            .否则
                                .如果真 (等于 (i, 16))
                                    赋值 (临时位置, 人物位置)
                                .如果真结束
                                
                            .如果结束
                            
                        .如果真结束
                        
                        
                    .如果真结束
                    
                .计次循环尾 ()
                赋值 (当前选中, 临时位置)
            .如果真结束
            
        .默认
            
        .判断结束
        赋值 (敌人基址, 汇编_读整数型 (相加 (#敌人基址, 相乘 (当前选中, #坐标基址规律))))
        .如果 (等于 (汇编_读整数型 (相加 (敌人基址, #是否死亡偏移)), 1))
            赋值 (本人坐标数据x, 相乘 (本人坐标数据x, -1))
            赋值 (敌人坐标数据x, 汇编_读小数型 (相加 (敌人基址, #坐标X偏移)))
            赋值 (敌人坐标数据z, 相减 (汇编_读小数型 (相加 (敌人基址, #坐标Z偏移)), 35))
            赋值 (敌人坐标数据y, 汇编_读小数型 (相加 (敌人基址, #坐标Y偏移)))
            赋值 (敌人视角, 取鼠标横角度 (敌人基址))
            .判断开始 (并且 (大于或等于 (敌人视角, 0), 小于 (敌人视角, 91)))
                赋值 (敌人坐标数据x, 相加 (敌人坐标数据x, 相乘 (取绝对视角 (敌人视角), 0.5111111111111)))
                赋值 (敌人坐标数据y, 相减 (相加 (敌人坐标数据y, 55), 相乘 (取绝对视角 (敌人视角), 0.5111111111111)))
            .判断 (并且 (大于 (敌人视角, 90), 小于 (敌人视角, 181)))
                赋值 (敌人坐标数据x, 相减 (相加 (敌人坐标数据x, 55), 相乘 (取绝对视角 (敌人视角), 0.5111111111111)))
                赋值 (敌人坐标数据y, 相减 (敌人坐标数据y, 相乘 (取绝对视角 (敌人视角), 0.5111111111111)))
            .判断 (并且 (大于 (敌人视角, 180), 小于 (敌人视角, 271)))
                赋值 (敌人坐标数据x, 相减 (敌人坐标数据x, 相乘 (取绝对视角 (敌人视角), 0.5111111111111)))
                赋值 (敌人坐标数据y, 相减 (敌人坐标数据y, 相减 (55, 相乘 (取绝对视角 (敌人视角), 0.5111111111111))))
            .判断 (并且 (大于 (敌人视角, 270), 小于 (敌人视角, 361)))
                赋值 (敌人坐标数据x, 相减 (敌人坐标数据x, 相减 (55, 相乘 (取绝对视角 (敌人视角), 0.5111111111111))))
                赋值 (敌人坐标数据y, 相加 (敌人坐标数据y, 相乘 (取绝对视角 (敌人视角), 0.5111111111111)))
            .默认
                
            .判断结束
            赋值 (敌人坐标数据x, 相乘 (敌人坐标数据x, -1))
            赋值 (X差距, 相减 (本人坐标数据x, 敌人坐标数据x))
            赋值 (Y差距, 相减 (本人坐标数据y, 敌人坐标数据y))
            赋值 (Z差距, 相减 (本人坐标数据z, 敌人坐标数据z))
            赋值 (X角度, 求X角度 (X差距, Y差距))
            赋值 (Y角度, 求Y角度 (X差距, Y差距, Z差距))
            .如果 (等于 (汇编_读整数型 (相加 (敌人基址, #是否死亡偏移)), 1))
                汇编_写小数型 (相加 (人物地址, #鼠标Y偏移), 相乘 (Y角度, 0.01745329300563))
                汇编_写小数型 (相加 (人物地址, #鼠标X偏移), 相乘 (X角度, 0.01745329300563))
            .否则
                
            .如果结束
            
        .否则
            赋值 (当前选中, 255)
        .如果结束
        
    .如果真结束
    
.如果真结束


.子程序 切换选定人物, 空白型, , 
.局部变量 敌人基址, 整数型, , , 
.局部变量 i, 整数型, , , 
.局部变量 敌人坐标数据x, 小数型, , , 
.局部变量 敌人坐标数据y, 小数型, , , 
.局部变量 敌人坐标数据z, 小数型, , , 
.局部变量 本人坐标数据x, 小数型, , , 
.局部变量 本人坐标数据y, 小数型, , , 
.局部变量 本人坐标数据z, 小数型, , , 
.局部变量 匿名局部变量_30700, 空白型, , , 
.局部变量 D3D距离, 小数型, , , 
.局部变量 最近距离, 小数型, , , 
.局部变量 临时位置, 整数型, , , 

赋值 (最近距离, 0)
赋值 (临时位置, 255)
.计次循环首 (16, i)
    赋值 (敌人基址, 汇编_读整数型 (相加 (#敌人基址, 相乘 (相减 (i, 1), #坐标基址规律))))
    .如果真 (等于 (汇编_读整数型 (相加 (敌人基址, #是否死亡偏移)), 1))
        .如果真 (等于 (汇编_读整数型 (相加 (敌人基址, 6128)), 1))
            赋值 (敌人坐标数据x, 汇编_读小数型 (相加 (敌人基址, #坐标X偏移)))
            赋值 (敌人坐标数据z, 汇编_读小数型 (相加 (敌人基址, #坐标Z偏移)))
            赋值 (敌人坐标数据y, 汇编_读小数型 (相加 (敌人基址, #坐标Y偏移)))
            赋值 (D3D距离, 取3D坐标距离 (本人坐标数据x, 本人坐标数据y, 敌人坐标数据x, 敌人坐标数据y))
            .如果真 (等于 (最近距离, 0))
                赋值 (最近距离, D3D距离)
                赋值 (临时位置, 人物位置)
            .如果真结束
            .如果 (小于 (D3D距离, 最近距离))
                赋值 (最近距离, D3D距离)
                赋值 (临时位置, 人物位置)
            .否则
                .如果真 (等于 (i, 16))
                    赋值 (临时位置, 人物位置)
                .如果真结束
                
            .如果结束
            
        .如果真结束
        
    .如果真结束
    
.计次循环尾 ()
赋值 (当前选中, 临时位置)
.如果真 (等于 (当前选中, 255))
    赋值 (当前选中, 0)
    返回 ()
.如果真结束
.如果真 (大于或等于 (当前选中, 15))
    赋值 (当前选中, 0)
    返回 ()
.如果真结束
赋值 (当前选中, 相加 (当前选中, 1))

.子程序 取3D坐标距离, 小数型, , 
.参数 本人x, 小数型, , 
.参数 本人y, 小数型, , 
.参数 敌人x, 小数型, , 
.参数 敌人y, 小数型, , 

.局部变量 距离, 双精度小数型, , , 

赋值 (本人x, 相减 (本人x, 敌人x))
赋值 (本人y, 相减 (本人y, 敌人y))
赋值 (距离, 求平方根 (相加 (相乘 (本人x, 本人x), 相乘 (本人y, 本人y))))
返回 (距离)

.子程序 取鼠标横角度, 小数型, , 
.参数 基址, 整数型, , 

.局部变量 鼠标横坐标, 双精度小数型, , , 

赋值 (鼠标横坐标, 相除 (汇编_读小数型 (相加 (基址, 128)), 0.01745329300563))
.判断循环首 (大于 (鼠标横坐标, 360))
    赋值 (鼠标横坐标, 相减 (鼠标横坐标, 360))
.判断循环尾 ()
.判断循环首 (小于 (鼠标横坐标, 0))
    赋值 (鼠标横坐标, 相加 (鼠标横坐标, 360))
.判断循环尾 ()
返回 (鼠标横坐标)

.子程序 取绝对视角, 小数型, , 
.参数 视角, 小数型, , 

.判断循环首 (大于 (视角, 100))
    赋值 (视角, 相减 (视角, 100))
.判断循环尾 ()
返回 (视角)

.程序集 其他函数子程序, , , 

.子程序 汇编_读整数型, 整数型, , 从内存中读取整数型数据,失败返回失败内容
.参数 地址, 整数型, , 内存地址
.参数 失败内容, 整数型, 可空, 读内存失败后返回值的内容 默认为-1

.局部变量 变量, 字节集, , , 保存读取数据的变量
.局部变量 长度, 整数型, , , 

赋值 (长度, 4)
赋值 (变量, 取空白字节集 (长度))
.如果真 (不等于 (_内存读字节集 (-1, 地址, 变量, 长度, 0), 0))
    返回 (取字节集数据 (变量, #整数型, ))
.如果真结束
返回 (选择 (是否为空 (失败内容), -1, 失败内容))

.子程序 汇编_读小数型, 双精度小数型, , 从内存中读取小数型数据,失败返回失败内容
.参数 地址, 整数型, , 内存地址
.参数 失败内容, 小数型, 可空, 读内存失败后返回值的内容 默认为-1

.局部变量 变量, 字节集, , , 保存读取数据的变量
.局部变量 长度, 整数型, , , 

赋值 (长度, 4)
赋值 (变量, 取空白字节集 (长度))
.如果真 (不等于 (_内存读字节集 (-1, 地址, 变量, 长度, 0), 0))
    返回 (取字节集数据 (变量, #小数型, ))
.如果真结束
返回 (选择 (是否为空 (失败内容), -1, 失败内容))

.子程序 汇编_写整数型, 逻辑型, , 往内存中写入四字节数据(成功返回真,失败返回假)
.参数 地址, 整数型, , 内存地址
.参数 变量, 整数型, , 写入数据

.局部变量 长度, 整数型, , , 

赋值 (长度, 4)
返回 (不等于 (_内存写整数型 (-1, 地址, 变量, 长度, 0), 0))

.子程序 汇编_写小数型, 逻辑型, , 往内存中写入四字节数据(成功返回真,失败返回假)
.参数 地址, 整数型, , 内存地址
.参数 变量, 小数型, , 写入数据

.局部变量 长度, 整数型, , , 

赋值 (长度, 4)
返回 (不等于 (_内存写小数型 (-1, 地址, 变量, 长度, 0), 0))

.子程序 取类名, 文本型, , 取指定窗口句柄的窗口类名(返回窗口类名,失败返回空)
.参数 窗口句柄, 整数型, , 指定的窗口句柄

.局部变量 类名, 文本型, , , 

赋值 (类名, 取空白文本 (255))
GetClassName (窗口句柄, 类名, 255)
返回 (类名)


 ' 不属于任何一个程序集、类模块的函数：
