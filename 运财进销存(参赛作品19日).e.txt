 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 800
    高度 = 570
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 1
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 已保存到：D:\易语言学习\Data\运财进销存(参赛作品19日).e\_启动窗口_底图
    图标 =  ' 已保存到：D:\易语言学习\Data\运财进销存(参赛作品19日).e\_启动窗口_图标.ico
    背景音乐 =  ' 空
    标题 = “运财进销存-李智勇制作”
    帮助文件名 = “”

窗口 基本信息
    左边 = 50
    顶边 = 50
    宽度 = 644
    高度 = 400
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 假
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “基本信息”
    帮助文件名 = “”

窗口 商品名称
    左边 = 50
    顶边 = 50
    宽度 = 520
    高度 = 302
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 真
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 假
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “基本信息--商品名称”
    帮助文件名 = “”

窗口 部门职员
    左边 = 50
    顶边 = 50
    宽度 = 419
    高度 = 286
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 真
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 假
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “基本信息--部门职员”
    帮助文件名 = “”

窗口 往来单位
    左边 = 50
    顶边 = 50
    宽度 = 530
    高度 = 310
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 真
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 假
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “基本信息--往来单位”
    帮助文件名 = “”

窗口 仓库
    左边 = 50
    顶边 = 50
    宽度 = 419
    高度 = 286
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 真
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 假
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “基本信息--仓库”
    帮助文件名 = “”

窗口 销售单
    左边 = 50
    顶边 = 50
    宽度 = 681
    高度 = 476
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 假
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “销售单”
    帮助文件名 = “”

窗口 自动加编码
    左边 = 50
    顶边 = 50
    宽度 = 363
    高度 = 309
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 假
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “自动加编码”
    帮助文件名 = “”

窗口 进销业务分析
    左边 = 50
    顶边 = 50
    宽度 = 786
    高度 = 560
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 假
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “业务分析”
    帮助文件名 = “”

窗口 单据审核
    左边 = 50
    顶边 = 50
    宽度 = 786
    高度 = 570
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 假
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “单据审核”
    帮助文件名 = “”

窗口 进货单
    左边 = 50
    顶边 = 50
    宽度 = 681
    高度 = 476
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 假
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “进货单”
    帮助文件名 = “”

窗口 经营历程
    左边 = 50
    顶边 = 50
    宽度 = 786
    高度 = 570
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 假
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “经营历程”
    帮助文件名 = “”

窗口 收款单
    左边 = 50
    顶边 = 50
    宽度 = 665
    高度 = 400
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “收款单”
    帮助文件名 = “”

窗口 付款单
    左边 = 50
    顶边 = 50
    宽度 = 665
    高度 = 400
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 假
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “付款单”
    帮助文件名 = “”

窗口 转帐
    左边 = 50
    顶边 = 50
    宽度 = 665
    高度 = 375
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 假
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “提现。存现。转帐”
    帮助文件名 = “”

窗口 商品转库
    左边 = 50
    顶边 = 50
    宽度 = 665
    高度 = 373
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 假
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “商品转库”
    帮助文件名 = “”

窗口 库存商品建账
    左边 = 50
    顶边 = 50
    宽度 = 624
    高度 = 395
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 假
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “期初库存商品录入”
    帮助文件名 = “”

窗口 应收应付建账
    左边 = 50
    顶边 = 50
    宽度 = 624
    高度 = 395
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 假
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “期初应收应付录入”
    帮助文件名 = “”

窗口 现金银行建账
    左边 = 50
    顶边 = 50
    宽度 = 624
    高度 = 395
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 假
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “期初现金银行录入”
    帮助文件名 = “”

窗口 现金存款账户
    左边 = 50
    顶边 = 50
    宽度 = 419
    高度 = 286
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 真
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 假
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “基本信息--现金存款账户”
    帮助文件名 = “”

窗口 不分类基本信息
    左边 = 50
    顶边 = 50
    宽度 = 644
    高度 = 400
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 假
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “基本信息”
    帮助文件名 = “”

窗口 费用账户
    左边 = 50
    顶边 = 50
    宽度 = 419
    高度 = 286
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 真
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 假
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “基本信息--费用账户”
    帮助文件名 = “”

窗口 一般费用单
    左边 = 50
    顶边 = 50
    宽度 = 665
    高度 = 400
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 假
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “一般费用单”
    帮助文件名 = “”

窗口 更改密码
    左边 = 50
    顶边 = 50
    宽度 = 367
    高度 = 214
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 真
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 假
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 已保存到：D:\易语言学习\Data\运财进销存(参赛作品19日).e\更改密码_图标.ico
    背景音乐 =  ' 空
    标题 = “更改密码”
    帮助文件名 = “”

窗口 帐目重建
    左边 = 50
    顶边 = 50
    宽度 = 398
    高度 = 250
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 假
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “帐目重建”
    帮助文件名 = “”

窗口 库存分析
    左边 = 50
    顶边 = 50
    宽度 = 786
    高度 = 560
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “库存分析”
    帮助文件名 = “”

窗口 明细帐查询窗口
    左边 = 50
    顶边 = 50
    宽度 = 794
    高度 = 560
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “明细帐查询”
    帮助文件名 = “”

窗口 库存警报查询
    左边 = 50
    顶边 = 50
    宽度 = 786
    高度 = 560
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “库存警报查询”
    帮助文件名 = “”

窗口 往来业务分析
    左边 = 50
    顶边 = 50
    宽度 = 790
    高度 = 570
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “往来业务分析”
    帮助文件名 = “”

窗口 应收应付查询
    左边 = 50
    顶边 = 50
    宽度 = 786
    高度 = 560
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “应收应付查询”
    帮助文件名 = “”

窗口 收付款单查询
    左边 = 50
    顶边 = 50
    宽度 = 786
    高度 = 560
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 假
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “款单查询”
    帮助文件名 = “”

窗口 当日业绩
    左边 = 50
    顶边 = 50
    宽度 = 786
    高度 = 560
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 假
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “当日业绩”
    帮助文件名 = “”

窗口 费用单查询
    左边 = 50
    顶边 = 50
    宽度 = 786
    高度 = 560
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 假
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “费用单查询”
    帮助文件名 = “”

窗口 现金存款查询
    左边 = 50
    顶边 = 50
    宽度 = 786
    高度 = 560
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 假
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “现金存款查询”
    帮助文件名 = “”

窗口 经营状况表
    左边 = 50
    顶边 = 50
    宽度 = 786
    高度 = 560
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “经营状况表”
    帮助文件名 = “”

窗口 资产负债表
    左边 = 50
    顶边 = 50
    宽度 = 786
    高度 = 560
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “资产负债表(平衡式)”
    帮助文件名 = “”

窗口 退货查询
    左边 = 50
    顶边 = 50
    宽度 = 786
    高度 = 560
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “退货查询”
    帮助文件名 = “”

窗口 月结帐
    左边 = 50
    顶边 = 50
    宽度 = 458
    高度 = 273
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 假
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “月结帐”
    帮助文件名 = “”

窗口 系统登陆
    左边 = 50
    顶边 = 50
    宽度 = 364
    高度 = 203
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 真
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 假
    随意移动 = 真
    外形 = 0
    总在最前 = 真
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 已保存到：D:\易语言学习\Data\运财进销存(参赛作品19日).e\系统登陆_图标.ico
    背景音乐 =  ' 空
    标题 = “系统登陆”
    帮助文件名 = “”

窗口 操作权限管理
    左边 = 50
    顶边 = 50
    宽度 = 483
    高度 = 311
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 真
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 假
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 已保存到：D:\易语言学习\Data\运财进销存(参赛作品19日).e\操作权限管理_图标.ico
    背景音乐 =  ' 空
    标题 = “更改密码”
    帮助文件名 = “”

窗口 利润表
    左边 = 50
    顶边 = 50
    宽度 = 786
    高度 = 560
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 假
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “结帐信息”
    帮助文件名 = “”

窗口 恢复选择
    左边 = 50
    顶边 = 50
    宽度 = 341
    高度 = 161
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 0
    底图方式 = 1
    底色 = 16744576 '  0xFF8080
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 真
    外形 = 2
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “”
    帮助文件名 = “”

窗口 退出选择
    左边 = 50
    顶边 = 50
    宽度 = 324
    高度 = 131
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 0
    底图方式 = 1
    底色 = 16744576 '  0xFF8080
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 真
    外形 = 2
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “”
    帮助文件名 = “”

窗口 单据格式配置
    左边 = 50
    顶边 = 50
    宽度 = 523
    高度 = 327
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 假
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “单据格式配置”
    帮助文件名 = “”

窗口 添加基本信息
    左边 = 50
    顶边 = 50
    宽度 = 368
    高度 = 203
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 0
    底图方式 = 1
    底色 = 16744576 '  0xFF8080
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 假
    随意移动 = 真
    外形 = 2
    总在最前 = 真
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “”
    帮助文件名 = “”



.图片 封面图片, "", , 为在封面窗口上显示的图片数据
.图片 表格格式, " ' 已保存到：D:\易语言学习\Data\运财进销存(参赛作品19日).e\表格格式", , 
.常量 封面显示秒数, "5", , 
.常量 HOTKEYF_SHIFT, "1", , 
.常量 HOTKEYF_CONTROL, "2", , 
.常量 HOTKEYF_ALT, "4", , 
.常量 WM_SETHOTKEY, "50", , 
.常量 , , , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 3 系统核心支持库
 ' iext 27bb20fdd3e145e4bee3db39ddd6e64c 1 2 扩展界面支持库一
 ' eGrid 0B4337DA651B4b619ACF61334A7E8B47 1 1 高级表格支持库
 ' iext2 AF6AD80AA4244A59AFB3D83ECF5173CC 1 1 扩展界面支持库二
 ' eCompress 7B68736E818E41c5A28B0AE4D43C128C 1 0 压缩解压支持库
 ' shell 52F260023059454187AF826A3C07AF2A 1 0 操作系统界面功能支持库




.全局变量 运行目录, 文本型, , , 
.全局变量 当前信息库, 文本型, , , 
.全局变量 本级类数, 整数型, , , 
.全局变量 当前表格, 未知类型0x30001, , , 
.全局变量 增加类数, 整数型, , , 
.全局变量 已修改序号, 逻辑型, , "0", 
.全局变量 修改信息, 逻辑型, , , 
.全局变量 光标行号, 整数型, , , 
.全局变量 子类添加, 逻辑型, , , 
.全局变量 查找数据, 文本型, , , 
.全局变量 前一表格, 未知类型0x30001, , , 
.全局变量 前一行号, 整数型, , , 
.全局变量 类数1, 整数型, , , 
.全局变量 类数2, 整数型, , , 
.全局变量 类数3, 整数型, , , 
.全局变量 类数4, 整数型, , , 
.全局变量 折扣率, 小数型, , , 
.全局变量 当前业务, 文本型, , , 
.全局变量 记帐月, 整数型, , , 
.全局变量 单据类型, 文本型, , , 
.全局变量 被修改行, 整数型, , "0", 
.全局变量 已建帐, 整数型, , , 
.全局变量 超级用户密码, 文本型, , , 
.全局变量 自动审核, 整数型, , , 
.全局变量 表格1行号, 整数型, , , 
.全局变量 表格2行号, 整数型, , , 
.全局变量 表格3行号, 整数型, , , 
.全局变量 操作员, 文本型, , , 
.全局变量 路径, 文本型, , , 
.全局变量 命令行文本, 文本型, , , 
.全局变量 历史查询, 逻辑型, , , 
.全局变量 历史查询月, 文本型, , , 
.全局变量 不备份, 逻辑型, , , 
.全局变量 添加基本信息, 逻辑型, , , 

.DLL命令 系统关于对话框, 空白型, "", "ShellAboutA", , 
    .参数 窗口句柄, 整数型, , 
    .参数 应用程序标题, 文本型, , 
    .参数 其他信息, 文本型, , 
    .参数 图标句柄, 整数型, , 

.DLL命令 提取图标, 整数型, "", "ExtractIconA", , 
    .参数 HINSTANCE, 整数型, , 
    .参数 lpszExeFileName, 文本型, , 
    .参数 nIconIndex, 整数型, , 

.窗口程序集 启动窗口程序集, , , 

.程序集变量 文件句柄, 整数型, , , 
.子程序 __启动窗口_创建完毕, 空白型, , 
赋值 (运行目录, 取运行目录 ())
检查配置文件 ()
赋值 (文件句柄, 打开文件 (相加 (运行目录, “\desktop.ini”), #读写, #禁止读写))
.如果真 (等于 (文件句柄, 0))
    信息框 (“程序已经运行，防止数据冲突，不允许同时运行两个程序。”, #错误图标, “请切换到已运行的程序”)
    结束 ()
    
.如果真结束
载入 (系统登陆, , 真)
_启动窗口.激活 ()
.如果真 (等于 (取屏幕高度 (), 600))
    赋值 (_启动窗口., -2)
.如果真结束
.如果真 (取反 (文件是否存在 (相加 (运行目录, “\lszl”))))
    创建目录 (相加 (运行目录, “\lszl”))
.如果真结束
赋值 (路径, “date”)
赋值 (折扣率, 到数值 (读配置项 (相加 (运行目录, “\jxc_info.ini”), “set”, “折扣率”, “.8”)))
赋值 (记帐月, 到数值 (读配置项 (相加 (运行目录, “\jxc_info.ini”), “set”, “记帐月”, 到文本 (取月份 (取现行时间 ())))))
赋值 (已建帐, 到数值 (读配置项 (相加 (运行目录, “\jxc_info.ini”), “set”, “已建帐”, “1”)))
赋值 (自动审核, 到数值 (读配置项 (相加 (运行目录, “\jxc_info.ini”), “set”, “自动审核”, “0”)))

.如果真 (等于 (已建帐, 1))
    赋值 (.禁止, 真)
.如果真结束
.如果真 (等于 (自动审核, 1))
    赋值 (.选中, 真)
.如果真结束
3.置文本 (相加 (“    ”, 时间到文本 (取现行时间 (), 2)))
1.置文本 (读配置项 (相加 (运行目录, “\jxc_info.ini”), “set”, “操作员”, 操作员))
删除目录 (相加 (运行目录, “\lscx”))
删除目录 (相加 (运行目录, “\cxk”))
创建目录 (相加 (运行目录, “\lscx”))
创建目录 (相加 (运行目录, “\cxk”))
低于库存成本价报警 ()


.子程序 检查配置文件, 空白型, , 
.如果真 (等于 (文件是否存在 (相加 (运行目录, “\jxc_info.ini”)), 假))
    写配置项 (相加 (运行目录, “\jxc_info.ini”), “set”, “折扣率”, “1”)
    写配置项 (相加 (运行目录, “\jxc_info.ini”), “set”, “已建帐”, “1”)
    写配置项 (相加 (运行目录, “\jxc_info.ini”), “set”, “自动审核”, “1”)
    写配置项 (相加 (运行目录, “\jxc_info.ini”), “set”, “记帐月”, 到文本 (取月份 (取现行时间 ())))
    
.如果真结束


.子程序 _关于_被选择, 空白型, , 
.局部变量 图标句柄, 整数型, , , 

赋值 (图标句柄, 提取图标 (_启动窗口.取窗口句柄 (), 相加 (运行目录, “\”, 取执行文件名 ()), 0))
系统关于对话框 (0, “运财进销存”, “由李志勇制作 13188121608 0416-3169421”, 图标句柄)

.子程序 _工具条1_被单击, 空白型, , 
.参数 按钮索引, 整数型, , 

.判断开始 (等于 (按钮索引, 0))
    载入 (单据审核, , 真)
.判断 (等于 (按钮索引, 1))
    载入 (当日业绩, , 真)
.判断 (等于 (按钮索引, 3))
    载入 (销售单, , 真)
.判断 (等于 (按钮索引, 4))
    载入 (进货单, , 真)
.判断 (等于 (按钮索引, 6))
    赋值 (当前业务, “销售统计”)
    载入 (进销业务分析, , 真)
.判断 (等于 (按钮索引, 7))
    赋值 (当前业务, “进货统计”)
    载入 (进销业务分析, , 真)
.判断 (等于 (按钮索引, 8))
    载入 (库存分析, , 真)
.判断 (等于 (按钮索引, 9))
    载入 (往来业务分析, , 真)
.判断 (等于 (按钮索引, 10))
    载入 (经营历程, , 真)
.判断 (等于 (按钮索引, 12))
    载入 (退出选择, , 真)
.默认
    
.判断结束


.子程序 _库存商品_被选择, 空白型, , 
赋值 (当前信息库, “库存商品”)
载入 (基本信息, , 真)

.子程序 _退出系统_被选择, 空白型, , 
载入 (退出选择, , 真)

.子程序 _往来单位_被选择, 空白型, , 
赋值 (当前信息库, “往来单位”)
载入 (基本信息, , 真)

.子程序 _管家婆数据导入工具_被选择, 空白型, , 
未知支持库函数_6 (相加 (运行目录, “\管家婆数据导入工具.exe”), , )

.子程序 _内部职员_被选择, 空白型, , 
赋值 (当前信息库, “内部职员”)
载入 (基本信息, , 真)


.子程序 _仓库类别_被选择, 空白型, , 
赋值 (当前信息库, “仓库类别”)
载入 (基本信息, , 真)


.子程序 _自动审核_被选择, 空白型, , 
赋值 (.选中, 取反 (.选中))
.如果 (等于 (.选中, 真))
    写配置项 (相加 (运行目录, “\jxc_info.ini”), “set”, “自动审核”, “1”)
    
.否则
    写配置项 (相加 (运行目录, “\jxc_info.ini”), “set”, “自动审核”, “0”)
    
.如果结束


.子程序 _自动加编码_被选择, 空白型, , 
载入 (自动加编码, , 真)

.子程序 _其它收入_被选择, 空白型, , 
赋值 (当前信息库, “其它收入”)
载入 (不分类基本信息, , 真)

.子程序 _单据审核_被选择, 空白型, , 
载入 (单据审核, , 真)


.子程序 _月结帐_被选择, 空白型, , 
载入 (月结帐, , 真)

.子程序 _进货单_被选择, 空白型, , 
载入 (进货单, , 真)

.子程序 _进货退货单_被选择, 空白型, , 
赋值 (单据类型, “进货退货单”)
载入 (销售单, , 真)


.子程序 _销售单_被选择, 空白型, , 
载入 (销售单, , 真)

.子程序 _销售退货单_被选择, 空白型, , 
赋值 (单据类型, “销售退货单”)
载入 (进货单, , 真)


.子程序 _转帐_被选择, 空白型, , 
载入 (转帐, , 真)

.子程序 _收款单_被选择, 空白型, , 
载入 (收款单, , 真)

.子程序 _付款单_被选择, 空白型, , 
载入 (付款单, , 真)

.子程序 _调拨单_被选择, 空白型, , 
载入 (商品转库, , 真)

.子程序 _调帐单_被选择, 空白型, , 


.子程序 _期初库存_被选择, 空白型, , 
.如果 (等于 (检查基本资料完整 (), 假))
    返回 ()
.否则
    
.如果结束

载入 (库存商品建账, , 真)

.子程序 _期初应收应付_被选择, 空白型, , 
.如果 (等于 (检查基本资料完整 (), 假))
    返回 ()
.否则
    
.如果结束

载入 (应收应付建账, , 真)

.子程序 _期初现金银行_被选择, 空白型, , 
.如果 (等于 (检查基本资料完整 (), 假))
    返回 ()
.否则
    
.如果结束

载入 (现金银行建账, , 真)

.子程序 _现金银行帐户_被选择, 空白型, , 
赋值 (当前信息库, “现金银行”)
载入 (不分类基本信息, , 真)


.子程序 _费用类型_被选择, 空白型, , 
赋值 (当前信息库, “费用类型”)
载入 (不分类基本信息, , 真)

.子程序 _费用单_被选择, 空白型, , 
载入 (一般费用单, , 真)

.子程序 _重新建帐_被选择, 空白型, , 
.局部变量 用户密码, 文本型, , , 

.如果真 (等于 (输入框 (“请输入超级用户密码”, “密码”, , 用户密码, 4), 真))
    .如果 (不等于 (超级用户密码, 用户密码))
        信息框 (“密码不对，你不能进入”, #警告图标, )
        返回 ()
    .否则
        赋值 (.禁止, 假)
        载入 (帐目重建, , 真)
    .如果结束
    
    
    
.如果真结束


.子程序 _修改密码_被选择, 空白型, , 
载入 (更改密码, , 真)

.子程序 _帮助1_被选择, 空白型, , 
运行 (相加 (“hh ”, 字符 (34), 运行目录, “\运财进销存.CHM”, 字符 (34)), 假, )


.子程序 _清除0库存商品_被选择, 空白型, , 
.如果真 (等于 (信息框 (“是否真的删除库存为0的商品？除非此商品不在用，否则影响0库存警报。”, 相加 (#警告图标, #确认取消钮), “删除0库存商品”), 1))
    返回 ()
.如果真结束
打开 (相加 (运行目录, “\date\yyjl_kc.edb”), “kcsp”, , , , , )
删除 (等于 (读 (“结存数量”), 0))
彻底删除 ()
关闭 ()

.子程序 _全部库存状况查询_被选择, 空白型, , 
载入 (库存分析, , 真)


.子程序 _库存商品警报查询_被选择, 空白型, , 
载入 (库存警报查询, , 真)

.子程序 _财务报表_被选择, 空白型, , 


.子程序 _销售分析_被选择, 空白型, , 
赋值 (当前业务, “销售统计”)
载入 (进销业务分析, , 真)


.子程序 _进货分析_被选择, 空白型, , 
赋值 (当前业务, “进货统计”)
载入 (进销业务分析, , 真)


.子程序 _往来分析_被选择, 空白型, , 
载入 (往来业务分析, , 真)


.子程序 _收款单查询_被选择, 空白型, , 
赋值 (当前业务, “收款单查询”)
载入 (收付款单查询, , 真)

.子程序 _付款单查询_被选择, 空白型, , 
赋值 (当前业务, “付款单查询”)
载入 (收付款单查询, , 真)


.子程序 _其它支出_被选择, 空白型, , 
赋值 (当前信息库, “其它支出”)
载入 (不分类基本信息, , 真)

.子程序 _费用支出_被选择, 空白型, , 
载入 (费用单查询, , 真)

.子程序 _现金银行_被选择, 空白型, , 
载入 (现金存款查询, , 真)

.子程序 _经营状况表_被选择, 空白型, , 
载入 (经营状况表, , 真)

.子程序 _资产负债表_被选择, 空白型, , 
.如果 (等于 (已建帐, 1))
    载入 (资产负债表, , 真)
.否则
    信息框 (“还没正式计帐，不能查询。”, 0, )
.如果结束


.子程序 _时钟1_周期事件, 空白型, , 
5.置文本 (相加 (“     ”, 时间到文本 (取现行时间 (), 3)))


.子程序 _退货查询_被选择, 空白型, , 
载入 (退货查询, , 真)

.子程序 _当日业绩_被选择, 空白型, , 
载入 (当日业绩, , 真)

.子程序 _用户管理_被选择, 空白型, , 
载入 (操作权限管理, , 真)

.子程序 _销售历史查询_被选择, 空白型, , 
.局部变量 查询月份, 整数型, , , 

赋值 (查询月份, 选择查询月份 ())
.如果真 (不等于 (查询月份, 0))
    删除目录 (相加 (运行目录, “\qczl”))
    创建目录 (相加 (运行目录, “\qczl”))
    相加 (运行目录, “\lszl\”, 到文本 (查询月份), “月份.dat”).未知支持库函数_2 (相加 (运行目录, “\tempcxk”))
    相加 (运行目录, “\lszl\”, 到文本 (查询月份), “月份qc.dat”).未知支持库函数_2 (相加 (运行目录, “\qczl”))
    赋值 (路径, “tempcxk”)
    赋值 (历史查询, 真)
    赋值 (历史查询月, 相加 (到文本 (查询月份), “月份”))
    赋值 (当前业务, “销售统计”)
    载入 (进销业务分析, , 真)
.如果真结束


.子程序 选择查询月份, 整数型, , 
.局部变量 月份, 整数型, , , 

.如果 (输入框 (“请输入要查询的月份：”, “查询月份”, 到文本 (相减 (取月份 (取现行时间 ()), 1)), 月份, ))
    返回 (月份)
.否则
    返回 (0)
.如果结束


.子程序 _计算器_被选择, 空白型, , 
运行 (“c:\windows\CALC.EXE”, 假, )

.子程序 _手动维护_被选择, 空白型, , 
全部关闭 ()
运行 (相加 (运行目录, “\备份与恢复工具.exe”), 假, )


.子程序 _自动恢复_被选择, 空白型, , 
全部关闭 ()
载入 (恢复选择, , 真)

.子程序 __启动窗口_可否被关闭, 逻辑型, , 
全部关闭 ()
载入 (退出选择, , 真)
返回 (假)

.子程序 _进货历史查询_被选择, 空白型, , 
.局部变量 查询月份, 整数型, , , 

赋值 (查询月份, 选择查询月份 ())
.如果真 (不等于 (查询月份, 0))
    删除目录 (相加 (运行目录, “\qczl”))
    创建目录 (相加 (运行目录, “\qczl”))
    相加 (运行目录, “\lszl\”, 到文本 (查询月份), “月份.dat”).未知支持库函数_2 (相加 (运行目录, “\tempcxk”))
    相加 (运行目录, “\lszl\”, 到文本 (查询月份), “月份qc.dat”).未知支持库函数_2 (相加 (运行目录, “\qczl”))
    赋值 (路径, “tempcxk”)
    赋值 (当前业务, “进货统计”)
    赋值 (历史查询, 真)
    赋值 (历史查询月, 相加 (到文本 (查询月份), “月份”))
    载入 (进销业务分析, , 真)
.如果真结束


.子程序 _利润表历史查询_被选择, 空白型, , 
.局部变量 查询月份, 整数型, , , 

赋值 (查询月份, 选择查询月份 ())

.如果真 (不等于 (查询月份, 0))
    赋值 (路径, “tempcxk”)
    赋值 (历史查询, 真)
    赋值 (历史查询月, 相加 (到文本 (查询月份), “月份”))
    载入 (利润表, , 真)
    
.如果真结束


.子程序 _经营历程历史查询_被选择, 空白型, , 
.局部变量 查询月份, 整数型, , , 

赋值 (查询月份, 选择查询月份 ())
.如果真 (不等于 (查询月份, 0))
    赋值 (路径, “tempcxk”)
    赋值 (历史查询, 真)
    赋值 (历史查询月, 相加 (到文本 (查询月份), “月份”))
    载入 (经营历程, , 真)
    
.如果真结束


.子程序 _表格配置_被选择, 空白型, , 
载入 (单据格式配置, , 真)

.子程序 _设折扣率_被选择, 空白型, , 
.如果真 (等于 (输入框 (“输入开商品销售单时折扣率（如8折就是0.8,不能大于1）：”, “设定折扣率”, “1”, 折扣率, 3), 真))
    .如果真 (大于 (折扣率, 1))
        赋值 (折扣率, 1)
    .如果真结束
    写配置项 (相加 (运行目录, “\jxc_info.ini”), “set”, “折扣率”, 到文本 (折扣率))
    
.如果真结束


.窗口程序集 基本信息, , , 

.程序集变量 字段数, 整数型, , , 
.程序集变量 记录数, 整数型, , , 
.程序集变量 分类窗口1, 逻辑型, , , 支持6级分类
.程序集变量 分类窗口4, 逻辑型, , , 支持6级分类
.程序集变量 分类窗口3, 逻辑型, , , 支持6级分类
.程序集变量 分类窗口2, 逻辑型, , , 支持6级分类
.程序集变量 分类目录1, 文本型, , , 
.程序集变量 分类目录2, 文本型, , , 
.程序集变量 分类目录4, 文本型, , , 
.程序集变量 分类目录3, 文本型, , , 
.程序集变量 类路径, 文本型, , , 
.程序集变量 修改前标志, 文本型, , , 
.程序集变量 修改后标志, 逻辑型, , , 
.程序集变量 上一个, 整数型, , , 
.程序集变量 增加类, 逻辑型, , , 
.程序集变量 子类数, 整数型, , , 
.程序集变量 行, 整数型, , , 
.程序集变量 循环变量, 整数型, , , 
.程序集变量 表格常量, 整数型, , , 
.程序集变量 表格列标题, 文本型, , , 
.程序集变量 表格列宽, 整数型, , , 
.程序集变量 循环变量1, 整数型, , , 
.程序集变量 标题宽, 整数型, , , 
.程序集变量 匿名程序集变量_1021, 空白型, , , 
.子程序 _基本信息_创建完毕, 空白型, , 
全部关闭 ()

赋值 (增加类数, 0)
赋值 (本级类数, 0)
连续赋值 (., ., ., .)
连续赋值 (., ., ., .)
赋值 (基本信息., 相加 (基本信息., “【”, 当前信息库, “】”))
.判断开始 (等于 (当前信息库, “库存商品”))
    打开 (相加 (运行目录, “\date\jbzl_spmc.edb”), “spmc”, , , , , )
.判断 (等于 (当前信息库, “往来单位”))
    打开 (相加 (运行目录, “\date\jbzl_wldw.edb”), “wldw”, , , , , )
.判断 (等于 (当前信息库, “内部职员”))
    打开 (相加 (运行目录, “\date\jbzl_bmzy.edb”), “nbzy”, , , , , )
.判断 (等于 (当前信息库, “仓库类别”))
    打开 (相加 (运行目录, “\date\jbzl_ck.edb”), “ck”, , , , , )
.默认
    
.判断结束
赋值 (字段数, 相减 (取字段数 (), 3))
到尾记录 ()
赋值 (记录数, 相加 (取记录数 (), 1))
到首记录 ()
赋值 (., 相加 (字段数, 1))
赋值 (., 记录数)
连续赋值 (., ., ., .)
连续赋值 (., ., ., .)
赋值 (当前表格, )
写表头 ()
写表头 ()
写表头 ()
写表头 ()

到首记录 ()
读入数据 (1, , “”)
到首记录 ()

.子程序 写表头, 空白型, , 
.参数 显示表格, 未知类型0x30001, , 

.局部变量 行, 整数型, , , 
.局部变量 循环变量, 整数型, , , 
.局部变量 表格常量, 整数型, , , 
.局部变量 表格列标题, 文本型, , , 
.局部变量 表格列宽, 整数型, , , 
.局部变量 循环变量1, 整数型, , , 
.局部变量 标题宽, 整数型, , , 

显示表格.未知支持库函数_9 (0, 0, #., “序号”)
显示表格.未知支持库函数_32 (0, 60)

.计次循环首 (字段数, 循环变量1)
    赋值 (循环变量, 相加 (循环变量1, 2))
    赋值 (表格列标题, 取字段名 (循环变量))
    赋值 (标题宽, 取文本长度 (表格列标题))
    赋值 (表格列宽, 取字段尺寸 (循环变量))
    显示表格.未知支持库函数_9 (0, 循环变量1, 1, 表格列标题)
    .如果真 (等于 (表格列宽, 2))
        赋值 (表格列宽, 4)
    .如果真结束
    .如果真 (小于 (表格列宽, 标题宽))
        赋值 (表格列宽, 标题宽)
    .如果真结束
    显示表格.未知支持库函数_32 (循环变量1, 相乘 (表格列宽, 10))
    显示表格.未知支持库函数_25 (0, 循环变量1, , , 2)
.计次循环尾 ()
.循环判断首 ()
    赋值 (行, 相加 (行, 1))
    显示表格.未知支持库函数_9 (行, 0, #., 到文本 (行))
.循环判断尾 (小于 (行, 相减 (显示表格., 显示表格.)))


.子程序 读入数据, 空白型, , 
.参数 数据级别, 整数型, , 
.参数 显示表, 未知类型0x30001, , 
.参数 欲寻找的文本, 文本型, , 

.局部变量 循环变量, 整数型, , , 
.局部变量 循环变量1, 整数型, , , 
.局部变量 级别, 整数型, , , 
.局部变量 计数, 整数型, , , 
.局部变量 各级分类, 文本型, , , 
.局部变量 寻文本, 整数型, , , 
.局部变量 文本长度, 整数型, , , 
.局部变量 取文本, 文本型, , , 

赋值 (类路径, 欲寻找的文本)
赋值 (文本长度, 取文本长度 (欲寻找的文本))

到首记录 ()
赋值 (记录数, 取记录数 ())
.计次循环首 (记录数, 循环变量)
    赋值 (级别, 到数值 (读字段 (2, )))
    赋值 (各级分类, 读字段 (1, ))
    赋值 (寻文本, 寻找文本 (各级分类, 欲寻找的文本, , 假))
    .如果 (等于 (欲寻找的文本, “”))
        .如果真 (等于 (级别, 数据级别))
            赋值 (计数, 相加 (计数, 1))
            .计次循环首 (字段数, 循环变量1)
                显示表.未知支持库函数_9 (计数, 循环变量1, 1, 读字段 (相加 (循环变量1, 2), ))
                赋值 (本级类数, 计数)
            .计次循环尾 ()
            .如果真 (并且 (等于 (读 (“子类数”), 真), 大于 (计数, 0)))
                显示表.未知支持库函数_9 (计数, 0, 1, 相加 (到文本 (计数), “...”))
            .如果真结束
            
        .如果真结束
        
    .否则
        .如果真 (并且 (等于 (级别, 数据级别), 等于 (寻文本, 1)))
            赋值 (取文本, 取文本左边 (各级分类, 文本长度))
            .如果真 (等于 (取文本, 欲寻找的文本))
                赋值 (计数, 相加 (计数, 1))
                .计次循环首 (字段数, 循环变量1)
                    显示表.未知支持库函数_9 (计数, 循环变量1, 1, 读字段 (相加 (循环变量1, 2), ))
                    赋值 (本级类数, 计数)
                .计次循环尾 ()
                .如果真 (并且 (等于 (读 (“子类数”), 真), 大于 (计数, 0)))
                    显示表.未知支持库函数_9 (计数, 0, 1, 相加 (到文本 (计数), “...”))
                .如果真结束
                
            .如果真结束
            
        .如果真结束
        
    .如果结束
    跳过 ()
.计次循环尾 ()

.子程序 _退出按钮_被单击, 空白型, , 
赋值 (增加类数, 0)
.如果真 (等于 (., 假))
    信息框 (“有未保存信息，请确认保存后在退出。”, 0, )
    返回 ()
    
.如果真结束

 ' 决定是否设上级为子目录为真
.如果真 (等于 (., 真))
    销毁 ()
.如果真结束

.判断开始 (等于 (., 真))
    赋值 (., 真)
    赋值 (本级类数, 类数1)
    
    赋值 (当前表格, )
    赋值 (., 假)
    赋值 (.内容, “”)
    返回 ()
.判断 (等于 (., 真))
    赋值 (., 真)
    赋值 (本级类数, 类数2)
    
    赋值 (当前表格, )
    赋值 (., 假)
    赋值 (.内容, 分类目录1)
    返回 ()
.判断 (等于 (., 真))
    赋值 (., 真)
    赋值 (本级类数, 类数3)
    
    赋值 (当前表格, )
    赋值 (., 假)
    赋值 (.内容, 分类目录2)
    返回 ()
.默认
    
.判断结束


.子程序 _表格1_光标位置改变, 空白型, , 
.局部变量 行号, 整数型, , , 


赋值 (行号, 当前表格.未知支持库函数_3 ())
赋值 (光标行号, 行号)
.如果真 (小于 (行号, 1))
    赋值 (行号, 1)
.如果真结束
.如果真 (等于 (修改信息, 真))
    保存修改类 ()
.如果真结束

.如果 (不等于 (行号.未知支持库函数_10 (1), “”))
    赋值 (., 假)
    赋值 (., 假)
    .如果真 (不等于 (当前信息库, “仓库类别”))
        赋值 (., 假)
    .如果真结束
    
.否则
    赋值 (., 真)
    赋值 (., 真)
    赋值 (., 真)
    
.如果结束



.子程序 保存添加类, 空白型, , 
.局部变量 循环变量, 整数型, , , 
.局部变量 级数, 整数型, , , 
.局部变量 有效行, 整数型, , , 
.局部变量 成功否, 逻辑型, , , 

.计次循环首 (增加类数, 循环变量)
    赋值 (级数, 相加 (级数, 1))
    赋值 (有效行, 相加 (本级类数, 级数))
    到首记录 ()
    .如果 (等于 (到数值 (当前表格.), 1))
        .判断开始 (等于 (当前信息库, “库存商品”))
            .如果 (查找 (等于 (读 (“全称”), 到文本 (当前表格.未知支持库函数_10 (有效行, 1)))))
                信息框 (相加 (当前表格.未知支持库函数_10 (有效行, 1), “已经存在”, 当前信息库, “库中,不能在加入。”), 0, )
            .否则
                赋值 (成功否, 加记录 (当前表格.未知支持库函数_10 (有效行, 1), 到数值 (当前表格.), 当前表格.未知支持库函数_10 (有效行, 1), 当前表格.未知支持库函数_10 (有效行, 2), 当前表格.未知支持库函数_10 (有效行, 3), 当前表格.未知支持库函数_10 (有效行, 4), 当前表格.未知支持库函数_10 (有效行, 5), 当前表格.未知支持库函数_10 (有效行, 6), 当前表格.未知支持库函数_10 (有效行, 7), 到数值 (当前表格.未知支持库函数_10 (有效行, 8)), 到数值 (当前表格.未知支持库函数_10 (有效行, 9)), 到数值 (当前表格.未知支持库函数_10 (有效行, 10)), 到数值 (当前表格.未知支持库函数_10 (有效行, 11)), 当前表格.未知支持库函数_10 (有效行, 12), 假))
                
            .如果结束
            
        .判断 (等于 (当前信息库, “往来单位”))
            .如果 (查找 (等于 (读 (“全称”), 到文本 (当前表格.未知支持库函数_10 (有效行, 1)))))
                信息框 (相加 (当前表格.未知支持库函数_10 (有效行, 1), “已经存在”, 当前信息库, “库中,不能在加入。”), 0, )
            .否则
                赋值 (成功否, 加记录 (当前表格.未知支持库函数_10 (有效行, 1), 到数值 (当前表格.), 当前表格.未知支持库函数_10 (有效行, 1), 当前表格.未知支持库函数_10 (有效行, 2), 当前表格.未知支持库函数_10 (有效行, 3), 当前表格.未知支持库函数_10 (有效行, 4), 当前表格.未知支持库函数_10 (有效行, 5), 当前表格.未知支持库函数_10 (有效行, 6), 当前表格.未知支持库函数_10 (有效行, 7), 当前表格.未知支持库函数_10 (有效行, 8), 当前表格.未知支持库函数_10 (有效行, 9), 假))
            .如果结束
            
            
        .判断 (等于 (当前信息库, “内部职员”))
            .如果 (查找 (等于 (读 (“全称”), 到文本 (当前表格.未知支持库函数_10 (有效行, 1)))))
                信息框 (相加 (当前表格.未知支持库函数_10 (有效行, 1), “已经存在”, 当前信息库, “库中,不能在加入。”), 0, )
            .否则
                赋值 (成功否, 加记录 (当前表格.未知支持库函数_10 (有效行, 1), 到数值 (当前表格.), 当前表格.未知支持库函数_10 (有效行, 1), 当前表格.未知支持库函数_10 (有效行, 2), 当前表格.未知支持库函数_10 (有效行, 3), 当前表格.未知支持库函数_10 (有效行, 4), 当前表格.未知支持库函数_10 (有效行, 5), 当前表格.未知支持库函数_10 (有效行, 6), 当前表格.未知支持库函数_10 (有效行, 7), 假))
            .如果结束
            
            
        .判断 (等于 (当前信息库, “仓库类别”))
            .如果 (查找 (等于 (读 (“仓库全称”), 到文本 (当前表格.未知支持库函数_10 (有效行, 1)))))
                信息框 (相加 (当前表格.未知支持库函数_10 (有效行, 1), “已经存在”, 当前信息库, “库中,不能在加入。”), 0, )
            .否则
                赋值 (成功否, 加记录 (当前表格.未知支持库函数_10 (有效行, 1), 到数值 (当前表格.), 当前表格.未知支持库函数_10 (有效行, 1), 当前表格.未知支持库函数_10 (有效行, 2), 当前表格.未知支持库函数_10 (有效行, 3), 当前表格.未知支持库函数_10 (有效行, 4), 当前表格.未知支持库函数_10 (有效行, 5)))
            .如果结束
            
        .默认
            
        .判断结束
        
    .否则
        .判断开始 (等于 (当前信息库, “库存商品”))
            .如果 (查找 (等于 (读 (“全称”), 到文本 (当前表格.未知支持库函数_10 (有效行, 1)))))
                信息框 (相加 (当前表格.未知支持库函数_10 (有效行, 1), “已经存在”, 当前信息库, “库中,不能在加入。”), 0, )
                
            .否则
                赋值 (成功否, 加记录 (相加 (类路径, “\”, 当前表格.未知支持库函数_10 (有效行, 1)), 到数值 (当前表格.), 当前表格.未知支持库函数_10 (有效行, 1), 当前表格.未知支持库函数_10 (有效行, 2), 当前表格.未知支持库函数_10 (有效行, 3), 当前表格.未知支持库函数_10 (有效行, 4), 当前表格.未知支持库函数_10 (有效行, 5), 当前表格.未知支持库函数_10 (有效行, 6), 当前表格.未知支持库函数_10 (有效行, 7), 到数值 (当前表格.未知支持库函数_10 (有效行, 8)), 到数值 (当前表格.未知支持库函数_10 (有效行, 9)), 到数值 (当前表格.未知支持库函数_10 (有效行, 10)), 到数值 (当前表格.未知支持库函数_10 (有效行, 11)), 当前表格.未知支持库函数_10 (有效行, 12), 假))
            .如果结束
            
        .判断 (等于 (当前信息库, “往来单位”))
            .如果 (查找 (等于 (读 (“全称”), 到文本 (当前表格.未知支持库函数_10 (有效行, 1)))))
                信息框 (相加 (当前表格.未知支持库函数_10 (有效行, 1), “已经存在”, 当前信息库, “库中,不能在加入。”), 0, )
                
            .否则
                赋值 (成功否, 加记录 (相加 (类路径, “\”, 当前表格.未知支持库函数_10 (有效行, 1)), 到数值 (当前表格.), 当前表格.未知支持库函数_10 (有效行, 1), 当前表格.未知支持库函数_10 (有效行, 2), 当前表格.未知支持库函数_10 (有效行, 3), 当前表格.未知支持库函数_10 (有效行, 4), 当前表格.未知支持库函数_10 (有效行, 5), 当前表格.未知支持库函数_10 (有效行, 6), 当前表格.未知支持库函数_10 (有效行, 7), 当前表格.未知支持库函数_10 (有效行, 8), 当前表格.未知支持库函数_10 (有效行, 9), 假))
            .如果结束
            
        .判断 (等于 (当前信息库, “内部职员”))
            .如果 (查找 (等于 (读 (“全称”), 到文本 (当前表格.未知支持库函数_10 (有效行, 1)))))
                信息框 (相加 (当前表格.未知支持库函数_10 (有效行, 1), “已经存在”, 当前信息库, “库中,不能在加入。”), 0, )
                
            .否则
                赋值 (成功否, 加记录 (相加 (类路径, “\”, 当前表格.未知支持库函数_10 (有效行, 1)), 到数值 (当前表格.), 当前表格.未知支持库函数_10 (有效行, 1), 当前表格.未知支持库函数_10 (有效行, 2), 当前表格.未知支持库函数_10 (有效行, 3), 当前表格.未知支持库函数_10 (有效行, 4), 当前表格.未知支持库函数_10 (有效行, 5), 当前表格.未知支持库函数_10 (有效行, 6), 当前表格.未知支持库函数_10 (光标行号, 7), 假))
            .如果结束
            
        .判断 (等于 (当前信息库, “仓库类别”))
            .如果 (查找 (等于 (读 (“仓库全称”), 到文本 (当前表格.未知支持库函数_10 (有效行, 1)))))
                信息框 (相加 (当前表格.未知支持库函数_10 (有效行, 1), “已经存在”, 当前信息库, “库中,不能在加入。”), 0, )
            .否则
                赋值 (成功否, 加记录 (相加 (类路径, “\”, 当前表格.未知支持库函数_10 (有效行, 1)), 到数值 (当前表格.), 当前表格.未知支持库函数_10 (有效行, 1), 当前表格.未知支持库函数_10 (有效行, 2), 当前表格.未知支持库函数_10 (有效行, 3), 当前表格.未知支持库函数_10 (有效行, 4), 当前表格.未知支持库函数_10 (有效行, 5), 假))
            .如果结束
            
        .默认
            
        .判断结束
        
    .如果结束
    
    
.计次循环尾 ()
赋值 (本级类数, 相加 (本级类数, 增加类数))

赋值 (增加类数, 0)
赋值 (增加类, 真)

.子程序 保存修改类, 空白型, , 
.局部变量 成功否, 逻辑型, , , 




.如果真 (等于 (修改信息, 真))
    到首记录 ()
    查找 (等于 (读 (3), 修改前标志))
    赋值 (修改后标志, 读 (“子类数”))
    .如果 (等于 (到数值 (当前表格.), 1))
        
        .判断开始 (等于 (当前信息库, “库存商品”))
            赋值 (成功否, 修改 (当前表格.未知支持库函数_10 (光标行号, 1), 到数值 (当前表格.), 当前表格.未知支持库函数_10 (光标行号, 1), 当前表格.未知支持库函数_10 (光标行号, 2), 当前表格.未知支持库函数_10 (光标行号, 3), 当前表格.未知支持库函数_10 (光标行号, 4), 当前表格.未知支持库函数_10 (光标行号, 5), 当前表格.未知支持库函数_10 (光标行号, 6), 当前表格.未知支持库函数_10 (光标行号, 7), 到数值 (当前表格.未知支持库函数_10 (光标行号, 8)), 到数值 (当前表格.未知支持库函数_10 (光标行号, 9)), 到数值 (当前表格.未知支持库函数_10 (光标行号, 10)), 到数值 (当前表格.未知支持库函数_10 (光标行号, 11)), 当前表格.未知支持库函数_10 (光标行号, 12), 修改后标志))
        .判断 (等于 (当前信息库, “往来单位”))
            赋值 (成功否, 修改 (当前表格.未知支持库函数_10 (光标行号, 1), 到数值 (当前表格.), 当前表格.未知支持库函数_10 (光标行号, 1), 当前表格.未知支持库函数_10 (光标行号, 2), 当前表格.未知支持库函数_10 (光标行号, 3), 当前表格.未知支持库函数_10 (光标行号, 4), 当前表格.未知支持库函数_10 (光标行号, 5), 当前表格.未知支持库函数_10 (光标行号, 6), 当前表格.未知支持库函数_10 (光标行号, 7), 当前表格.未知支持库函数_10 (光标行号, 8), 当前表格.未知支持库函数_10 (光标行号, 9), 修改后标志))
        .判断 (等于 (当前信息库, “内部职员”))
            赋值 (成功否, 修改 (当前表格.未知支持库函数_10 (光标行号, 1), 到数值 (当前表格.), 当前表格.未知支持库函数_10 (光标行号, 1), 当前表格.未知支持库函数_10 (光标行号, 2), 当前表格.未知支持库函数_10 (光标行号, 3), 当前表格.未知支持库函数_10 (光标行号, 4), 当前表格.未知支持库函数_10 (光标行号, 5), 当前表格.未知支持库函数_10 (光标行号, 6), 当前表格.未知支持库函数_10 (光标行号, 7), 修改后标志))
            
        .判断 (等于 (当前信息库, “仓库类别”))
            赋值 (成功否, 修改 (当前表格.未知支持库函数_10 (光标行号, 1), 到数值 (当前表格.), 当前表格.未知支持库函数_10 (光标行号, 1), 当前表格.未知支持库函数_10 (光标行号, 2), 当前表格.未知支持库函数_10 (光标行号, 3), 当前表格.未知支持库函数_10 (光标行号, 4), 当前表格.未知支持库函数_10 (光标行号, 5), 修改后标志))
        .默认
            
        .判断结束
        
    .否则
        .判断开始 (等于 (当前信息库, “库存商品”))
            
            赋值 (成功否, 修改 (相加 (类路径, “\”, 当前表格.未知支持库函数_10 (光标行号, 1)), 到数值 (当前表格.), 当前表格.未知支持库函数_10 (光标行号, 1), 当前表格.未知支持库函数_10 (光标行号, 2), 当前表格.未知支持库函数_10 (光标行号, 3), 当前表格.未知支持库函数_10 (光标行号, 4), 当前表格.未知支持库函数_10 (光标行号, 5), 当前表格.未知支持库函数_10 (光标行号, 6), 当前表格.未知支持库函数_10 (光标行号, 7), 到数值 (当前表格.未知支持库函数_10 (光标行号, 8)), 到数值 (当前表格.未知支持库函数_10 (光标行号, 9)), 到数值 (当前表格.未知支持库函数_10 (光标行号, 10)), 到数值 (当前表格.未知支持库函数_10 (光标行号, 11)), 当前表格.未知支持库函数_10 (光标行号, 12), 修改后标志))
            
        .判断 (等于 (当前信息库, “往来单位”))
            赋值 (成功否, 修改 (相加 (类路径, “\”, 当前表格.未知支持库函数_10 (光标行号, 1)), 到数值 (当前表格.), 当前表格.未知支持库函数_10 (光标行号, 1), 当前表格.未知支持库函数_10 (光标行号, 2), 当前表格.未知支持库函数_10 (光标行号, 3), 当前表格.未知支持库函数_10 (光标行号, 4), 当前表格.未知支持库函数_10 (光标行号, 5), 当前表格.未知支持库函数_10 (光标行号, 6), 当前表格.未知支持库函数_10 (光标行号, 7), 当前表格.未知支持库函数_10 (光标行号, 8), 当前表格.未知支持库函数_10 (光标行号, 9), 修改后标志))
        .判断 (等于 (当前信息库, “内部职员”))
            赋值 (成功否, 修改 (相加 (类路径, “\”, 当前表格.未知支持库函数_10 (光标行号, 1)), 到数值 (当前表格.), 当前表格.未知支持库函数_10 (光标行号, 1), 当前表格.未知支持库函数_10 (光标行号, 2), 当前表格.未知支持库函数_10 (光标行号, 3), 当前表格.未知支持库函数_10 (光标行号, 4), 当前表格.未知支持库函数_10 (光标行号, 5), 当前表格.未知支持库函数_10 (光标行号, 6), 当前表格.未知支持库函数_10 (光标行号, 7), 修改后标志))
            载入 (部门职员, , 真)
        .判断 (等于 (当前信息库, “仓库类别”))
            赋值 (成功否, 修改 (相加 (类路径, “\”, 当前表格.未知支持库函数_10 (光标行号, 1)), 到数值 (当前表格.), 当前表格.未知支持库函数_10 (光标行号, 1), 当前表格.未知支持库函数_10 (光标行号, 2), 当前表格.未知支持库函数_10 (光标行号, 3), 当前表格.未知支持库函数_10 (光标行号, 4), 当前表格.未知支持库函数_10 (光标行号, 5), 修改后标志))
        .默认
            
        .判断结束
        
    .如果结束
    
    
    
    .如果 (等于 (成功否, 假))
        信息框 (“信息更新没有成功”, 0, )
    .否则
        
        赋值 (修改信息, 假)
        
    .如果结束
    
    
.如果真结束


.子程序 _添加按钮_被单击, 空白型, , 
.如果真 (等于 (修改信息, 真))
    赋值 (修改信息, 假)
    保存修改类 ()
.如果真结束
.如果真 (不等于 (当前信息库, “仓库类别”))
    赋值 (子类添加, 假)
.如果真结束
.如果真 (等于 (., 假))
    _保存按钮_被单击 ()
.如果真结束
.判断开始 (等于 (当前信息库, “库存商品”))
    载入 (商品名称, , 真)
.判断 (等于 (当前信息库, “往来单位”))
    载入 (往来单位, , 真)
.判断 (等于 (当前信息库, “内部职员”))
    载入 (部门职员, , 真)
.判断 (等于 (当前信息库, “仓库类别”))
    载入 (仓库, , 真)
.默认
    
.判断结束


.子程序 清除表空, 空白型, , 
.参数 显示表, 未知类型0x30001, , 

显示表.未知支持库函数_57 ()

.子程序 _表格1_被双击, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 当前行, 整数型, , , 
.局部变量 行标题, 文本型, , , 
.局部变量 当前级, 整数型, , , 

到首记录 ()
赋值 (当前行, 未知支持库函数_3 ())
.如果真 (大于 (寻找文本 (未知支持库函数_3 ().未知支持库函数_10 (0), “...”, , 假), 0))
    .如果真 (大于 (增加类数, 0))
        保存添加类 ()
    .如果真结束
    跳到 (相加 (当前行, 1))
    赋值 (行标题, 当前行.未知支持库函数_10 (1))
    赋值 (.内容, 行标题)
    赋值 (表格1行号, 未知支持库函数_3 ())
    赋值 (., 假)
    赋值 (., 真)
    赋值 (., 1)
    赋值 (., 取记录数 ())
    0.未知支持库函数_9 (0, #., “序号”)
    赋值 (当前表格, )
    赋值 (前一表格, )
    写表头 ()
    读入数据 (2, , 行标题)
    赋值 (分类目录1, .内容)
    
.如果真结束




.子程序 _表格2_被双击, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 当前行, 整数型, , , 
.局部变量 行标题, 文本型, , , 
.局部变量 当前级, 整数型, , , 
.局部变量 读入, 逻辑型, , , 

到首记录 ()
赋值 (当前行, 未知支持库函数_3 ())

.如果真 (大于 (寻找文本 (未知支持库函数_3 ().未知支持库函数_10 (0), “...”, , 假), 0))
    .如果真 (大于 (增加类数, 0))
        保存添加类 ()
    .如果真结束
    
    赋值 (行标题, 当前行.未知支持库函数_10 (1))
    查找 (等于 (读 (1), 相加 (.内容, “\”, 行标题)))
    赋值 (.内容, 相加 (.内容, “\”, 行标题))
    赋值 (行标题, 读 (1))
    赋值 (表格2行号, 未知支持库函数_3 ())
    
    赋值 (., 假)
    赋值 (., 真)
    
    赋值 (., 1)
    赋值 (., 取记录数 ())
    0.未知支持库函数_9 (0, #., “序号”)
    赋值 (当前表格, )
    赋值 (前一表格, )
    
    写表头 ()
    
    读入数据 (3, , 行标题)
    赋值 (分类目录2, .内容)
    
.如果真结束


.子程序 _表格2_光标位置改变, 空白型, , 
.局部变量 n, 整数型, , , 

赋值 (n, 当前表格.未知支持库函数_3 ())
.如果真 (小于 (n, 1))
    赋值 (n, 1)
.如果真结束
.如果真 (等于 (修改信息, 真))
    保存修改类 ()
.如果真结束
赋值 (光标行号, n)
.如果 (不等于 (n.未知支持库函数_10 (1), “”))
    赋值 (., 假)
    赋值 (., 假)
    .如果真 (不等于 (当前信息库, “仓库类别”))
        赋值 (., 假)
    .如果真结束
    
.否则
    赋值 (., 真)
    赋值 (., 真)
    赋值 (., 真)
    
.如果结束


.子程序 _表格3_被双击, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 当前行, 整数型, , , 
.局部变量 行标题, 文本型, , , 
.局部变量 当前级, 整数型, , , 
.局部变量 读入, 逻辑型, , , 

到首记录 ()
赋值 (当前行, 未知支持库函数_3 ())

.如果真 (大于 (寻找文本 (未知支持库函数_3 ().未知支持库函数_10 (0), “...”, , 假), 0))
    .如果真 (大于 (增加类数, 0))
        保存添加类 ()
    .如果真结束
    
    赋值 (行标题, 当前行.未知支持库函数_10 (1))
    查找 (等于 (读 (1), 相加 (.内容, “\”, 行标题)))
    赋值 (.内容, 相加 (.内容, “\”, 行标题))
    赋值 (行标题, 读 (1))
    赋值 (表格3行号, 未知支持库函数_3 ())
    
    赋值 (., 假)
    赋值 (., 真)
    赋值 (., 1)
    赋值 (., 取记录数 ())
    0.未知支持库函数_9 (0, #., “序号”)
    赋值 (当前表格, )
    赋值 (前一表格, )
    
    写表头 ()
    
    读入数据 (4, , 行标题)
    赋值 (分类目录3, .内容)
    
.如果真结束


.子程序 _表格3_光标位置改变, 空白型, , 
.局部变量 行号, 整数型, , , 

赋值 (行号, 当前表格.未知支持库函数_3 ())
赋值 (光标行号, 行号)
.如果真 (小于 (行号, 1))
    赋值 (行号, 1)
.如果真结束
.如果 (不等于 (行号.未知支持库函数_10 (1), “”))
    赋值 (., 假)
    赋值 (., 假)
    .如果真 (不等于 (当前信息库, “仓库类别”))
        赋值 (., 假)
    .如果真结束
    
.否则
    赋值 (., 真)
    赋值 (., 真)
    赋值 (., 真)
.如果结束
.如果真 (等于 (修改信息, 真))
    保存修改类 ()
.如果真结束


.子程序 _保存按钮_被单击, 空白型, , 
赋值 (., 真)

.判断开始 (等于 (修改信息, 真))
    保存修改类 ()
    赋值 (修改信息, 假)
.判断 (等于 (子类添加, 真))
    保存子类 ()
    赋值 (子类添加, 假)
.判断 (大于 (增加类数, 0))
    保存添加类 ()
.默认
    
.判断结束


.子程序 _删除按钮_被单击, 空白型, , 
.局部变量 选择起始行, 整数型, , , 
.局部变量 选择终止行, 整数型, , , 
.局部变量 循环变量, 整数型, , , 
.局部变量 子类数, 整数型, , , 
.局部变量 取出文本, 文本型, , "0", 
.局部变量 行号, 整数型, , , 

赋值 (选择起始行, 当前表格.未知支持库函数_5 ())
赋值 (选择终止行, 当前表格.未知支持库函数_7 ())
.如果真 (小于 (当前表格.未知支持库函数_3 (), 1))
    信息框 (“请选要删除的行”, #错误图标, “删除错误”)
    返回 ()
.如果真结束

赋值 (子类数, 0)
.变量循环首 (选择起始行, 选择终止行, 1, 循环变量)
    赋值 (本级类数, 相减 (本级类数, 1))
    加入成员 (取出文本, 当前表格.未知支持库函数_10 (相减 (循环变量, 子类数), 1))
    .如果 (不等于 (取文本右边 (当前表格.未知支持库函数_10 (相减 (循环变量, 行), 0), 3), “...”))
        .如果真 (等于 (信息框 (“  是否真的删除？ 删除后不能再恢复。 ”, 相加 (#询问图标, #确认取消钮), “删除前提示”), 1))
            返回 ()
        .如果真结束
        
        当前表格.未知支持库函数_36 (相减 (循环变量, 行))
        .如果真 (等于 (当前表格.未知支持库函数_10 (1, 2), “”))
            赋值 (., 真)
            赋值 (., 真)
            赋值 (., 真)
        .如果真结束
        
    .否则
        信息框 (“此商品有子分类，不能直截删除。”, 0, )
        返回 ()
    .如果结束
    
    赋值 (子类数, 相加 (子类数, 1))
    
.变量循环尾 ()

.计次循环首 (子类数, 循环变量)
    
    .如果真 (取反 (删除 (等于 (读 (3), 取出文本 [循环变量]))))
        信息框 (“不能成功删除”, 0, )
    .如果真结束
    
.计次循环尾 ()
彻底删除 ()
.如果真 (等于 (删首尾空 (当前表格.未知支持库函数_10 (1, 1)), “”))
    到首记录 ()
    查找 (等于 (删尾空 (读 (1)), 删首尾空 (.内容)))
    
    写 (“子类数”, 假)
    赋值 (., 真)
    赋值 (., 真)
    .判断开始 (等于 (当前表格., “2”))
        赋值 (行号, 表格1行号)
        行号.未知支持库函数_9 (0, 1, 到文本 (表格1行号))
    .判断 (等于 (当前表格., “3”))
        赋值 (行号, 表格2行号)
        行号.未知支持库函数_9 (0, 1, 到文本 (表格2行号))
    .判断 (等于 (当前表格., “4”))
        赋值 (行号, 表格3行号)
        行号.未知支持库函数_9 (0, 1, 到文本 (表格3行号))
        
    .默认
        
    .判断结束
    
.如果真结束
.如果真 (小于 (本级类数, 0))
    赋值 (本级类数, 0)
    
.如果真结束


.子程序 _修改按钮_被单击, 空白型, , 

赋值 (光标行号, 当前表格.未知支持库函数_3 ())
.如果真 (小于 (光标行号, 1))
    信息框 (“请选要修改的行”, #错误图标, “修改错误”)
    返回 ()
.如果真结束
.如果真 (等于 (取文本右边 (当前表格.未知支持库函数_10 (光标行号, 0), 3), “...”))
    信息框 (“有子类不能修改！”, #错误图标, “修改错误”)
    返回 ()
    
.如果真结束


.如果 (大于 (光标行号, 0))
    
    赋值 (修改前标志, 当前表格.未知支持库函数_10 (光标行号, 1))
    赋值 (修改信息, 真)
    .判断开始 (等于 (当前信息库, “库存商品”))
        载入 (商品名称, , 真)
    .判断 (等于 (当前信息库, “往来单位”))
        载入 (往来单位, , 真)
    .判断 (等于 (当前信息库, “内部职员”))
        载入 (部门职员, , 真)
    .判断 (等于 (当前信息库, “仓库类别”))
        载入 (仓库, , 真)
    .默认
        
    .判断结束
    
    
.否则
    信息框 (“请选择要修改的行。”, 0, )
    赋值 (修改信息, 假)
.如果结束


.子程序 _子类按钮_被单击, 空白型, , 
.如果真 (大于 (增加类数, 0))
    信息框 (“请保存后再分子类。”, 0, )
    返回 ()
.如果真结束
.如果真 (小于 (当前表格.未知支持库函数_3 (), 1))
    信息框 (“请选要分子类的行”, #错误图标, “分子类错误”)
    返回 ()
.如果真结束
.如果真 (等于 (当前表格, ))
    信息框 (“不支持分4级子类”, #错误图标, “分子类错误”)
    赋值 (., 真)
    返回 ()
.如果真结束
.如果真 (等于 (取文本右边 (当前表格.未知支持库函数_10 (当前表格.未知支持库函数_3 (), 0), 3), “...”))
    赋值 (., 真)
    返回 ()
.如果真结束
赋值 (子类数, 0)

赋值 (子类添加, 真)
.如果真 (等于 (修改信息, 真))
    保存修改类 ()
.如果真结束
.判断开始 (等于 (., 真))
    赋值 (.内容, 未知支持库函数_3 ().未知支持库函数_10 (1))
    赋值 (., 真)
    赋值 (当前表格, )
    赋值 (类数1, 本级类数)
    赋值 (表格1行号, 未知支持库函数_3 ())
    
    赋值 (., 假)
    赋值 (前一表格, )
    
.判断 (等于 (., 真))
    赋值 (.内容, 相加 (.内容, “\”, 未知支持库函数_3 ().未知支持库函数_10 (1)))
    赋值 (., 真)
    赋值 (当前表格, )
    赋值 (类数2, 本级类数)
    赋值 (表格2行号, 未知支持库函数_3 ())
    
    赋值 (., 假)
    赋值 (前一表格, )
    
.判断 (等于 (., 真))
    赋值 (.内容, 相加 (.内容, “\”, 未知支持库函数_3 ().未知支持库函数_10 (1)))
    赋值 (., 真)
    赋值 (当前表格, )
    赋值 (类数3, 本级类数)
    赋值 (表格3行号, 未知支持库函数_3 ())
    
    赋值 (., 假)
    赋值 (前一表格, )
    
.默认
    
.判断结束

赋值 (查找数据, .内容)

赋值 (当前表格., 1)
赋值 (当前表格., 2)
赋值 (前一行号, 光标行号)

赋值 (修改信息, 假)
载入 (商品名称, , 真)


.子程序 保存子类, 空白型, , 
.局部变量 循环变量, 整数型, , , 
.局部变量 类数, 整数型, , , 
.局部变量 有效行, 整数型, , , 
.局部变量 成功否, 逻辑型, , , 

到首记录 ()
.如果 (查找 (等于 (读 (1), 查找数据)))
    写 (“子类数”, 真)
    
    前一表格.未知支持库函数_9 (前一行号, 0, 1, 相加 (前一表格.未知支持库函数_10 (前一行号, 0), “...”))
    
.否则
    信息框 (“保存子类未成功。”, 0, )
    返回 ()
.如果结束

赋值 (子类添加, 真)
.计次循环首 (增加类数, 循环变量)
    赋值 (类数, 相加 (类数, 1))
    赋值 (有效行, 类数)
    .判断开始 (等于 (当前信息库, “库存商品”))
        赋值 (成功否, 加记录 (相加 (.内容, “\”, 当前表格.未知支持库函数_10 (有效行, 1)), 到数值 (当前表格.), 当前表格.未知支持库函数_10 (有效行, 1), 当前表格.未知支持库函数_10 (有效行, 2), 当前表格.未知支持库函数_10 (有效行, 3), 当前表格.未知支持库函数_10 (有效行, 4), 当前表格.未知支持库函数_10 (有效行, 5), 当前表格.未知支持库函数_10 (有效行, 6), 当前表格.未知支持库函数_10 (有效行, 7), 到数值 (当前表格.未知支持库函数_10 (有效行, 8)), 到数值 (当前表格.未知支持库函数_10 (有效行, 9)), 到数值 (当前表格.未知支持库函数_10 (有效行, 10)), 到数值 (当前表格.未知支持库函数_10 (有效行, 11)), 当前表格.未知支持库函数_10 (有效行, 12), 假))
    .判断 (等于 (当前信息库, “往来单位”))
        赋值 (成功否, 加记录 (相加 (.内容, “\”, 当前表格.未知支持库函数_10 (有效行, 1)), 到数值 (当前表格.), 当前表格.未知支持库函数_10 (有效行, 1), 当前表格.未知支持库函数_10 (有效行, 2), 当前表格.未知支持库函数_10 (有效行, 3), 当前表格.未知支持库函数_10 (有效行, 4), 当前表格.未知支持库函数_10 (有效行, 5), 当前表格.未知支持库函数_10 (有效行, 6), 当前表格.未知支持库函数_10 (有效行, 7), 当前表格.未知支持库函数_10 (有效行, 8), 当前表格.未知支持库函数_10 (有效行, 9), 假))
    .判断 (等于 (当前信息库, “内部职员”))
        赋值 (成功否, 加记录 (相加 (.内容, “\”, 当前表格.未知支持库函数_10 (有效行, 1)), 到数值 (当前表格.), 当前表格.未知支持库函数_10 (有效行, 1), 当前表格.未知支持库函数_10 (有效行, 2), 当前表格.未知支持库函数_10 (有效行, 3), 当前表格.未知支持库函数_10 (有效行, 4), 当前表格.未知支持库函数_10 (有效行, 5), 当前表格.未知支持库函数_10 (有效行, 6), 当前表格.未知支持库函数_10 (光标行号, 7), 假))
        载入 (部门职员, , 真)
    .判断 (等于 (当前信息库, “仓库类别”))
        赋值 (成功否, 加记录 (相加 (.内容, “\”, 当前表格.未知支持库函数_10 (有效行, 1)), 到数值 (当前表格.), 当前表格.未知支持库函数_10 (有效行, 1), 当前表格.未知支持库函数_10 (有效行, 2), 当前表格.未知支持库函数_10 (有效行, 3), 当前表格.未知支持库函数_10 (有效行, 4), 当前表格.未知支持库函数_10 (有效行, 5), 假))
    .默认
        
    .判断结束
    .如果 (等于 (成功否, 假))
        信息框 (“信息更新没有成功”, 0, )
    .否则
        
    .如果结束
    
.计次循环尾 ()
赋值 (增加类数, 0)
赋值 (本级类数, 有效行)

.窗口程序集 商品名称, , , 

.子程序 _商品名称_创建完毕, 空白型, , 
获取焦点 ()
.如果真 (等于 (修改信息, 真))
    赋值 (., 假)
    赋值 (., .)
    赋值 (., .)
    赋值 (., 真)
    赋值 (.内容, 当前表格.未知支持库函数_10 (光标行号, 1))
    赋值 (.内容, 当前表格.未知支持库函数_10 (光标行号, 2))
    赋值 (.内容, 当前表格.未知支持库函数_10 (光标行号, 4))
    赋值 (.内容, 当前表格.未知支持库函数_10 (光标行号, 3))
    赋值 (.内容, 当前表格.未知支持库函数_10 (光标行号, 5))
    赋值 (.内容, 当前表格.未知支持库函数_10 (光标行号, 6))
    赋值 (.内容, 当前表格.未知支持库函数_10 (光标行号, 7))
    赋值 (.内容, 当前表格.未知支持库函数_10 (光标行号, 8))
    赋值 (.内容, 当前表格.未知支持库函数_10 (光标行号, 9))
    赋值 (.内容, 当前表格.未知支持库函数_10 (光标行号, 10))
    赋值 (.内容, 当前表格.未知支持库函数_10 (光标行号, 11))
    
    赋值 (.内容, 当前表格.未知支持库函数_10 (光标行号, 12))
    
    
.如果真结束


.子程序 _保存_被单击, 空白型, , 

.如果真 (等于 (删全部空 (.内容), “”))
    信息框 (“商品全称不能为空”, 0, )
    返回 ()
.如果真结束
.如果真 (小于 (到数值 (.内容), 到数值 (.内容)))
    信息框 (“存货上限应大于存货下限”, 0, )
    返回 ()
.如果真结束
.如果真 (等于 (子类添加, 真))
    加子类 ()
    清除空 ()
    
    返回 ()
.如果真结束
赋值 (增加类数, 相加 (增加类数, 1))
当前表格.未知支持库函数_9 (相加 (本级类数, 增加类数), 1, 1, .内容)
当前表格.未知支持库函数_9 (相加 (本级类数, 增加类数), 2, 1, .内容)
当前表格.未知支持库函数_9 (相加 (本级类数, 增加类数), 3, 1, .内容)
当前表格.未知支持库函数_9 (相加 (本级类数, 增加类数), 4, 1, .内容)
当前表格.未知支持库函数_9 (相加 (本级类数, 增加类数), 5, 1, .内容)
当前表格.未知支持库函数_9 (相加 (本级类数, 增加类数), 6, 1, .内容)
当前表格.未知支持库函数_9 (相加 (本级类数, 增加类数), 7, 1, .内容)
当前表格.未知支持库函数_9 (相加 (本级类数, 增加类数), 8, 1, .内容)
当前表格.未知支持库函数_9 (相加 (本级类数, 增加类数), 9, 1, .内容)
当前表格.未知支持库函数_9 (相加 (本级类数, 增加类数), 10, 1, .内容)
当前表格.未知支持库函数_9 (相加 (本级类数, 增加类数), 11, 1, .内容)
当前表格.未知支持库函数_9 (相加 (本级类数, 增加类数), 12, 1, .内容)

当前表格.未知支持库函数_38 ()
当前表格.未知支持库函数_9 (相加 (本级类数, 增加类数), 0, 1, 到文本 (相加 (本级类数, 增加类数)))
清除空 ()
赋值 (基本信息.., 假)


.子程序 清除空, 空白型, , 
赋值 (.内容, “”)
赋值 (.内容, “”)
赋值 (.内容, “”)
赋值 (.内容, “”)
赋值 (.内容, “”)
赋值 (.内容, “”)
赋值 (.内容, “”)
赋值 (.内容, “”)
赋值 (.内容, “”)
赋值 (.内容, “”)
赋值 (.内容, “”)
赋值 (.内容, “”)
获取焦点 ()



.子程序 加子类, 空白型, , 
赋值 (增加类数, 相加 (增加类数, 1))

当前表格.未知支持库函数_9 (增加类数, 1, 1, .内容)
当前表格.未知支持库函数_9 (增加类数, 2, 1, .内容)
当前表格.未知支持库函数_9 (增加类数, 3, 1, .内容)
当前表格.未知支持库函数_9 (增加类数, 4, 1, .内容)
当前表格.未知支持库函数_9 (增加类数, 5, 1, .内容)
当前表格.未知支持库函数_9 (增加类数, 6, 1, .内容)
当前表格.未知支持库函数_9 (增加类数, 7, 1, .内容)

当前表格.未知支持库函数_9 (增加类数, 8, 1, .内容)
当前表格.未知支持库函数_9 (增加类数, 9, 1, .内容)
当前表格.未知支持库函数_9 (增加类数, 10, 1, .内容)
当前表格.未知支持库函数_38 ()
当前表格.未知支持库函数_9 (增加类数, 0, 1, 到文本 (增加类数))
赋值 (基本信息.., 假)


.子程序 _退出_被单击, 空白型, , 

销毁 ()

.子程序 _全称_失去焦点, 空白型, , 
赋值 (.内容, 混合取码 (.内容))
赋值 (.内容, 取文本左边 (.内容, 8))

.子程序 _修改_被单击, 空白型, , 
当前表格.未知支持库函数_9 (光标行号, 1, 1, .内容)
当前表格.未知支持库函数_9 (光标行号, 2, 1, .内容)
当前表格.未知支持库函数_9 (光标行号, 3, 1, .内容)
当前表格.未知支持库函数_9 (光标行号, 4, 1, .内容)
当前表格.未知支持库函数_9 (光标行号, 5, 1, .内容)
当前表格.未知支持库函数_9 (光标行号, 6, 1, .内容)
当前表格.未知支持库函数_9 (光标行号, 7, 1, .内容)

当前表格.未知支持库函数_9 (光标行号, 8, 1, .内容)
当前表格.未知支持库函数_9 (光标行号, 9, 1, .内容)
当前表格.未知支持库函数_9 (光标行号, 10, 1, .内容)
当前表格.未知支持库函数_9 (光标行号, 11, 1, .内容)
当前表格.未知支持库函数_9 (光标行号, 12, 1, .内容)
赋值 (基本信息.., 假)
赋值 (修改信息, 真)

.窗口程序集 部门职员, , , 

.子程序 _部门分组框2_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 



.子程序 _部门职员_创建完毕, 空白型, , 
获取焦点 ()
.如果真 (等于 (修改信息, 真))
    赋值 (., 假)
    赋值 (., .)
    赋值 (., .)
    赋值 (., 真)
    
    赋值 (.内容, 当前表格.未知支持库函数_10 (光标行号, 1))
    赋值 (.内容, 当前表格.未知支持库函数_10 (光标行号, 2))
    赋值 (.内容, 当前表格.未知支持库函数_10 (光标行号, 3))
    赋值 (.内容, 当前表格.未知支持库函数_10 (光标行号, 4))
    赋值 (.内容, 当前表格.未知支持库函数_10 (光标行号, 5))
    赋值 (.内容, 当前表格.未知支持库函数_10 (光标行号, 6))
    
.如果真结束


.子程序 _退出_被单击, 空白型, , 
销毁 ()

.子程序 _保存_被单击, 空白型, , 
.如果真 (等于 (删全部空 (.内容), “”))
    信息框 (“职员名称不能为空”, 0, )
    返回 ()
.如果真结束
赋值 (增加类数, 相加 (增加类数, 1))

当前表格.未知支持库函数_9 (相加 (本级类数, 增加类数), 1, 1, .内容)
当前表格.未知支持库函数_9 (相加 (本级类数, 增加类数), 2, 1, .内容)
当前表格.未知支持库函数_9 (相加 (本级类数, 增加类数), 3, 1, .内容)
当前表格.未知支持库函数_9 (相加 (本级类数, 增加类数), 4, 1, .内容)
当前表格.未知支持库函数_9 (相加 (本级类数, 增加类数), 5, 1, .内容)
当前表格.未知支持库函数_9 (相加 (本级类数, 增加类数), 6, 1, .内容)
当前表格.未知支持库函数_38 ()
当前表格.未知支持库函数_9 (相加 (本级类数, 增加类数), 0, 1, 到文本 (相加 (本级类数, 增加类数)))
连续赋值 (“”, .内容, .内容, .内容, .内容, .内容, .内容)
获取焦点 ()
赋值 (基本信息.., 假)


.子程序 _职员名称_失去焦点, 空白型, , 
赋值 (.内容, 混合取码 (.内容))

.子程序 _修改_被单击, 空白型, , 
当前表格.未知支持库函数_9 (光标行号, 1, 1, .内容)
当前表格.未知支持库函数_9 (光标行号, 2, 1, .内容)
当前表格.未知支持库函数_9 (光标行号, 3, 1, .内容)
当前表格.未知支持库函数_9 (光标行号, 4, 1, .内容)
当前表格.未知支持库函数_9 (光标行号, 5, 1, .内容)
当前表格.未知支持库函数_9 (光标行号, 6, 1, .内容)
赋值 (基本信息.., 假)
赋值 (修改信息, 真)

.窗口程序集 往来单位, , , 

.子程序 _单位名称_创建完毕, 空白型, , 
获取焦点 ()


.子程序 _保存_被单击, 空白型, , 
.如果真 (等于 (删全部空 (.内容), “”))
    信息框 (“往来单位名称不能为空”, 0, )
    返回 ()
.如果真结束
赋值 (增加类数, 相加 (增加类数, 1))

当前表格.未知支持库函数_9 (相加 (本级类数, 增加类数), 1, 1, .内容)
当前表格.未知支持库函数_9 (相加 (本级类数, 增加类数), 2, 1, .内容)
当前表格.未知支持库函数_9 (相加 (本级类数, 增加类数), 3, 1, .内容)
当前表格.未知支持库函数_9 (相加 (本级类数, 增加类数), 4, 1, .内容)
当前表格.未知支持库函数_9 (相加 (本级类数, 增加类数), 5, 1, .内容)
当前表格.未知支持库函数_9 (相加 (本级类数, 增加类数), 6, 1, .内容)
当前表格.未知支持库函数_9 (相加 (本级类数, 增加类数), 7, 1, .内容)
当前表格.未知支持库函数_9 (相加 (本级类数, 增加类数), 8, 1, .内容)
当前表格.未知支持库函数_9 (相加 (本级类数, 增加类数), 9, 1, .内容)
当前表格.未知支持库函数_38 ()
当前表格.未知支持库函数_9 (相加 (本级类数, 增加类数), 0, 1, 到文本 (相加 (本级类数, 增加类数)))
连续赋值 (“”, .内容, .内容, .内容, .内容, .内容, .内容, .内容, .内容, .内容)
获取焦点 ()
赋值 (基本信息.., 假)


.子程序 _退出_被单击, 空白型, , 
销毁 ()


.子程序 _单位名称_失去焦点, 空白型, , 
赋值 (.内容, 混合取码 (.内容))
赋值 (.内容, 取文本左边 (.内容, 8))


.子程序 _往来单位_创建完毕, 空白型, , 
获取焦点 ()
.如果真 (等于 (修改信息, 真))
    赋值 (., 假)
    赋值 (., .)
    赋值 (., .)
    赋值 (., 真)
    赋值 (.内容, 当前表格.未知支持库函数_10 (光标行号, 1))
    赋值 (.内容, 当前表格.未知支持库函数_10 (光标行号, 2))
    赋值 (.内容, 当前表格.未知支持库函数_10 (光标行号, 3))
    赋值 (.内容, 当前表格.未知支持库函数_10 (光标行号, 4))
    赋值 (.内容, 当前表格.未知支持库函数_10 (光标行号, 5))
    赋值 (.内容, 当前表格.未知支持库函数_10 (光标行号, 6))
    赋值 (.内容, 当前表格.未知支持库函数_10 (光标行号, 7))
    赋值 (.内容, 当前表格.未知支持库函数_10 (光标行号, 8))
    赋值 (.内容, 当前表格.未知支持库函数_10 (光标行号, 9))
    
.如果真结束


.子程序 _修改_被单击, 空白型, , 
当前表格.未知支持库函数_9 (光标行号, 1, 1, .内容)
当前表格.未知支持库函数_9 (光标行号, 2, 1, .内容)
当前表格.未知支持库函数_9 (光标行号, 3, 1, .内容)
当前表格.未知支持库函数_9 (光标行号, 4, 1, .内容)
当前表格.未知支持库函数_9 (光标行号, 5, 1, .内容)
当前表格.未知支持库函数_9 (光标行号, 6, 1, .内容)
当前表格.未知支持库函数_9 (光标行号, 7, 1, .内容)
当前表格.未知支持库函数_9 (光标行号, 8, 1, .内容)
当前表格.未知支持库函数_9 (光标行号, 9, 1, .内容)
赋值 (基本信息.., 假)
赋值 (修改信息, 真)

.窗口程序集 仓库, , , 

.子程序 _退出_被单击, 空白型, , 
销毁 ()


.子程序 _保存_被单击, 空白型, , 

.如果真 (等于 (删全部空 (.内容), “”))
    信息框 (“仓库名称不能为空”, 0, )
    返回 ()
.如果真结束
赋值 (增加类数, 相加 (增加类数, 1))

当前表格.未知支持库函数_9 (相加 (本级类数, 增加类数), 1, 1, .内容)
当前表格.未知支持库函数_9 (相加 (本级类数, 增加类数), 2, 1, .内容)
当前表格.未知支持库函数_9 (相加 (本级类数, 增加类数), 3, 1, .内容)
当前表格.未知支持库函数_9 (相加 (本级类数, 增加类数), 4, 1, .内容)
当前表格.未知支持库函数_9 (相加 (本级类数, 增加类数), 5, 1, .内容)
当前表格.未知支持库函数_38 ()
当前表格.未知支持库函数_9 (相加 (本级类数, 增加类数), 0, 1, 到文本 (相加 (本级类数, 增加类数)))
连续赋值 (“”, .内容, .内容, .内容, .内容, .内容)
获取焦点 ()
赋值 (基本信息.., 假)


.子程序 _仓库_创建完毕, 空白型, , 
获取焦点 ()
.如果真 (等于 (修改信息, 真))
    赋值 (., 假)
    赋值 (., .)
    赋值 (., .)
    赋值 (., 真)
    赋值 (.内容, 当前表格.未知支持库函数_10 (光标行号, 1))
    赋值 (.内容, 当前表格.未知支持库函数_10 (光标行号, 2))
    赋值 (.内容, 当前表格.未知支持库函数_10 (光标行号, 4))
    赋值 (.内容, 当前表格.未知支持库函数_10 (光标行号, 3))
    赋值 (.内容, 当前表格.未知支持库函数_10 (光标行号, 5))
    
.如果真结束


.子程序 _名称_失去焦点, 空白型, , 
赋值 (.内容, 混合取码 (.内容))
赋值 (.内容, 取文本左边 (.内容, 8))


.子程序 _修改_被单击, 空白型, , 
当前表格.未知支持库函数_9 (光标行号, 1, 1, .内容)
当前表格.未知支持库函数_9 (光标行号, 2, 1, .内容)
当前表格.未知支持库函数_9 (光标行号, 3, 1, .内容)
当前表格.未知支持库函数_9 (光标行号, 4, 1, .内容)
当前表格.未知支持库函数_9 (光标行号, 5, 1, .内容)
赋值 (基本信息.., 假)
赋值 (修改信息, 真)

.程序集 程序集1, , , 

.程序集变量 字段顺序, 文本型, , "0", 
.子程序 混合取码, 文本型, , 
.参数 内容, 文本型, , 

.局部变量 aa, 整数型, , , 
.局部变量 计数, 整数型, , , 
.局部变量 文本长度, 整数型, , , 
.局部变量 编码内容, 文本型, , , 

赋值 (文本长度, 取文本长度 (删首尾空 (内容)))

赋值 (计数, 1)
.变量循环首 (1, 文本长度, 1, aa)
    .如果 (小于 (取代码 (取文本中间 (内容, 计数, 1), 1), 0))
        赋值 (编码内容, 相加 (编码内容, 到大写 (取文本左边 (取拼音 (取文本中间 (内容, 计数, 2), 1), 1))))
        赋值 (计数, 相加 (计数, 2))
    .否则
        赋值 (编码内容, 相加 (编码内容, 到大写 (取文本中间 (内容, 计数, 1))))
        赋值 (计数, 相加 (计数, 1))
    .如果结束
    
.变量循环尾 ()
.如果真 (大于 (取文本长度 (编码内容), 10))
    赋值 (编码内容, 相加 (取文本左边 (编码内容, 8), “~”, 取文本右边 (编码内容, 1)))
.如果真结束
返回 (编码内容)

.子程序 低于库存成本价报警, 空白型, , 
.局部变量 原单价, 双精度小数型, , , 

.如果真 (打开 (相加 (运行目录, “\”, 路径, “\yyjl_kc.edb”), “kcsp”, , , , , ))
.如果真结束
重定义数组 (字段顺序, 假, 4)
赋值 (字段顺序 [1], “商品全称”)
赋值 (字段顺序 [2], “单价”)
赋值 (字段顺序 [3], “结存数量”)
赋值 (字段顺序 [4], “金额”)
赋值 (原单价, 读 (“单价”))

分类计算 (相加 (运行目录, “\cxk\kcspdj.edb”), “商品全称”, , , 字段顺序)
打开 (相加 (运行目录, “\cxk\kcspdj.edb”), “spdj”, , , , , )
.判断循环首 (取反 (尾记录后 ()))
    .如果 (不等于 (读 (“结存数量”), 0))
        写 (“单价”, 四舍五入 (相除 (读 (“金额”), 读 (“结存数量”)), 2))
    .否则
        
        写 (“单价”, 原单价)
    .如果结束
    
    跳过 ()
.判断循环尾 ()
关闭 (“kcsp”)
关闭 (“spdj”)

.子程序 备份期初, 空白型, , 
删除目录 (相加 (运行目录, “\qczl”))
创建目录 (相加 (运行目录, “\qczl”))
复制文件 (相加 (运行目录, “\date\yyjl_kc.edb”), 相加 (运行目录, “\qczl\yyjl_kc.edb”))
复制文件 (相加 (运行目录, “\date\yyjl_ysyf.edb”), 相加 (运行目录, “\qczl\yyjl_ysyf.edb”))
复制文件 (相加 (运行目录, “\date\jbzl_xjck.edb”), 相加 (运行目录, “\qczl\jbzl_xjck.edb”))
写配置项 (相加 (运行目录, “\jxc_info.ini”), “set”, “已建帐”, “1”)
赋值 (_启动窗口..禁止, 真)


.子程序 求月利润, 双精度小数型, , 
.局部变量 总利润, 双精度小数型, , , 

全部关闭 ()
打开 (相加 (运行目录, “\date\yyjl_xsd.edb”), “xsd”, , , , , )
打开 (相加 (运行目录, “\date\yxsd.edb”), “yxsd”, , , , , )
清空 ()
重定义数组 (字段顺序, 假, 12)
赋值 (字段顺序 [1], “商品全称”)
赋值 (字段顺序 [2], “数量”)
赋值 (字段顺序 [3], “金额”)
赋值 (字段顺序 [4], “单据编号”)
赋值 (字段顺序 [5], “经手人”)
赋值 (字段顺序 [6], “购买单位”)
赋值 (字段顺序 [7], “发货仓库”)
赋值 (字段顺序 [8], “利润”)
赋值 (字段顺序 [9], “利润率”)
赋值 (字段顺序 [10], “利润贡献率”)
赋值 (字段顺序 [11], “实收付金额”)
赋值 (字段顺序 [12], “应收付金额”)

添加 (“xsd”, , 字段顺序)

打开 (相加 (运行目录, “\cxk\kcspdj.edb”), “spdj”, , , , , )
到首记录 ()
置当前库 (“yxsd”)
到首记录 ()
.判断循环首 (取反 (尾记录后 ()))
    置当前库 (“spdj”)
    到首记录 ()
    .如果 (查找 (等于 (读字段 (“商品全称”, “yxsd”), 读字段 (“商品全称”, ))))
        写字段 (“利润”, “yxsd”, 相减 (读字段 (“金额”, “yxsd”), 相乘 (读 (“单价”), 读字段 (“数量”, “yxsd”))))
        写字段 (“利润率”, “yxsd”, 四舍五入 (相乘 (相除 (读字段 (“利润”, “yxsd”), 读字段 (“金额”, “yxsd”)), 100), 2))
    .否则
        
    .如果结束
    置当前库 (“yxsd”)
    跳过 ()
.判断循环尾 ()
置当前库 (“yxsd”)
到首记录 ()
赋值 (总利润, 求和 (读 (“利润”), ))
返回 (总利润)


.子程序 进货退货盈余, 双精度小数型, , 
.局部变量 循环变量, 整数型, , , 
.局部变量 盈余, 双精度小数型, , , 

打开 (相加 (运行目录, “\cxk\kcspdj.edb”), “spdj”, , , , , )
打开 (相加 (运行目录, “\date\yyjl_jhfhd.edb”), “jhfhd”, , , , , )

置当前库 (“jhfhd”)
.计次循环首 (取记录数 (), 循环变量)
    置当前库 (“spdj”)
    到首记录 ()
    .如果真 (查找 (等于 (读 (“商品全称”), 读字段 (“商品全称”, “jhfhd”))))
        置当前库 (“jhfhd”)
        写 (“盈余”, 相减 (读 (“金额”), 相乘 (读字段 (“单价”, “spdj”), 读 (“数量”))))
        
    .如果真结束
    置当前库 (“jhfhd”)
    跳过 ()
.计次循环尾 ()
赋值 (盈余, 求和 (读 (“盈余”), ))
关闭 (“spdj”)
关闭 (“jhfhd”)
返回 (盈余)

.子程序 销售退货盈余, 双精度小数型, , 
.局部变量 循环变量, 整数型, , , 
.局部变量 盈余, 双精度小数型, , , 

打开 (相加 (运行目录, “\cxk\kcspdj.edb”), “spdj”, , , , , )
打开 (相加 (运行目录, “\date\yyjl_xsfhd.edb”), “xsfhd”, , , , , )

置当前库 (“xsfhd”)
.计次循环首 (取记录数 (), 循环变量)
    置当前库 (“spdj”)
    到首记录 ()
    .如果真 (查找 (等于 (读 (“商品全称”), 读字段 (“商品全称”, “xsfhd”))))
        置当前库 (“xsfhd”)
        写 (“盈余”, 相减 (读 (“金额”), 相乘 (读字段 (“单价”, “spdj”), 读 (“数量”))))
        
    .如果真结束
    置当前库 (“xsfhd”)
    跳过 ()
.计次循环尾 ()
赋值 (盈余, 求和 (读 (“盈余”), ))
关闭 (“spdj”)
关闭 (“xsfhd”)
返回 (盈余)


.子程序 检查已建帐, 逻辑型, , 
.如果真 (不等于 (已建帐, 1))
    .如果 (等于 (信息框 (相加 (“您的期初建帐是否已完成？记第一笔后，期初额不能再输入或更改。”, #换行符, #换行符, “记帐工作意味着已进入正轨，是否继续？”), 相加 (#警告图标, #确认取消钮), “警告”), 0))
        备份期初 ()
        赋值 (已建帐, 1)
        返回 (真)
    .否则
        返回 (假)
        
    .如果结束
    
.如果真结束
返回 (真)

.子程序 单据号, 文本型, , 
.参数 录单日期, 日期时间型, , 

.局部变量 现单据号文本, 文本型, , , 
.局部变量 现行日期, 日期时间型, , , 
.局部变量 年份, 文本型, , , 
.局部变量 月份, 文本型, , , 
.局部变量 日, 文本型, , , 
.局部变量 现单据号, 整数型, , , 
.局部变量 单据编号内容, 文本型, , , 
.局部变量 现单据号文本长度, 整数型, , , 

打开 (相加 (运行目录, “\date\djh.edb”), “djh”, , , , , )
置当前库 (“djh”)
到首记录 ()
赋值 (现单据号文本, 取文本右边 (读 (“单据号”), 6))
赋值 (现单据号, 相加 (到数值 (现单据号文本), 1))

赋值 (现单据号文本, 到文本 (现单据号))
赋值 (年份, 到文本 (取年份 (录单日期)))
赋值 (月份, 到文本 (取月份 (录单日期)))
.如果真 (等于 (取文本长度 (月份), 1))
    赋值 (月份, 相加 (“0”, 月份))
.如果真结束
赋值 (日, 到文本 (取日 (录单日期)))
.如果真 (等于 (取文本长度 (日), 1))
    赋值 (日, 相加 (“0”, 日))
.如果真结束
赋值 (现单据号文本长度, 取文本长度 (现单据号文本))



.判断开始 (等于 (现单据号文本长度, 5))
    赋值 (现单据号文本, 相加 (“0”, 现单据号文本))
.判断 (等于 (现单据号文本长度, 4))
    赋值 (现单据号文本, 相加 (“00”, 现单据号文本))
.判断 (等于 (现单据号文本长度, 3))
    赋值 (现单据号文本, 相加 (“000”, 现单据号文本))
.判断 (等于 (现单据号文本长度, 2))
    赋值 (现单据号文本, 相加 (“0000”, 现单据号文本))
.判断 (等于 (现单据号文本长度, 1))
    赋值 (现单据号文本, 相加 (“00000”, 现单据号文本))
.默认
    
.判断结束
赋值 (单据编号内容, 相加 (年份, 月份, 日, 现单据号文本))
关闭 ()
返回 (单据编号内容)


.子程序 写出单据编号, 空白型, , 
.参数 单据编号, 文本型, , 

打开 (相加 (运行目录, “\date\djh.edb”), “djh”, , , , , )
置当前库 (“djh”)
到首记录 ()
写 (“单据号”, 单据编号)
关闭 ()


.子程序 表格缩放, 空白型, , 
.参数 表, 表格, , 
.参数 比例, 整数型, , 

.判断开始 (等于 (比例, 1))
    赋值 (表.缩放比, 80)
.判断 (等于 (比例, 2))
    赋值 (表.缩放比, 100)
.判断 (等于 (比例, 3))
    赋值 (表.缩放比, 120)
.判断 (等于 (比例, 4))
    赋值 (表.缩放比, 140)
.默认
    
.判断结束


.子程序 检查基本资料完整, 逻辑型, , 
全部关闭 ()
打开 (相加 (运行目录, “\date\jbzl_bmzy.edb”), , , , , , )
.如果真 (小于 (取记录数 (), 2))
    信息框 (相加 (“没有部门资料，无法进行下一步工作。”, #换行符, “请在基本信息-部门职员中输入。”), #错误图标, “缺少资料”)
    关闭 ()
    返回 (假)
.如果真结束
替换打开 (相加 (运行目录, “\date\jbzl_ck.edb”), , , , , , )
.如果真 (小于 (取记录数 (), 2))
    信息框 (相加 (“没有仓库资料，无法进行下一步工作。”, #换行符, “请在基本信息-仓库类别中输入。”), #错误图标, “缺少资料”)
    关闭 ()
    返回 (假)
.如果真结束


替换打开 (相加 (运行目录, “\date\jbzl_spmc.edb”), , , , , , )
.如果真 (小于 (取记录数 (), 2))
    信息框 (相加 (“没有费用类型资料，无法进行下一步工作。”, #换行符, “请在基本信息-费用类型中输入。”), #错误图标, “缺少资料”)
    关闭 ()
    返回 (假)
.如果真结束

替换打开 (相加 (运行目录, “\date\jbzl_wldw.edb”), , , , , , )
.如果真 (小于 (取记录数 (), 2))
    信息框 (相加 (“没有往来单位资料，无法进行下一步工作。”, #换行符, “请在基本信息-往来单位中输入。”), #错误图标, “缺少资料”)
    关闭 ()
    返回 (假)
.如果真结束

替换打开 (相加 (运行目录, “\date\jbzl_xjck.edb”), , , , , , )
.如果真 (小于 (取记录数 (), 1))
    信息框 (相加 (“没有现金帐户资料，无法进行下一步工作。”, #换行符, “请在基本信息-现金银行帐户中输入。”), #错误图标, “缺少资料”)
    关闭 ()
    返回 (假)
.如果真结束
返回 (真)


.子程序 资产负债表, 空白型, , 
.参数 表格1, 未知类型0x30001, , 

.局部变量 行, 整数型, , , 
.局部变量 循环变量, 整数型, , , 
.局部变量 资产合计, 双精度小数型, , , 
.局部变量 负债权益, 双精度小数型, , , 

全部关闭 ()
低于库存成本价报警 ()
表格1.未知支持库函数_32 (1, 200)
表格1.未知支持库函数_32 (2, 150)
表格1.未知支持库函数_32 (3, 200)

表格1.未知支持库函数_32 (4, 150)

表格1.未知支持库函数_9 (0, 0, 1, “序 号”)
表格1.未知支持库函数_9 (0, 1, 1, “资                  产”)
表格1.未知支持库函数_9 (0, 2, 1, “ 总  金  额”)
表格1.未知支持库函数_9 (0, 3, 1, “负                  债”)
表格1.未知支持库函数_9 (0, 4, 1, “ 总  金  额”)

表格1.未知支持库函数_25 (0, 0, 0, 4, 2)
表格1.未知支持库函数_25 (1, 2, 20, 2, 3)
表格1.未知支持库函数_25 (1, 4, 20, 4, 3)
表格1.未知支持库函数_30 (2, #.)
表格1.未知支持库函数_30 (4, #.)
表格1.未知支持库函数_41 (2, 2)
表格1.未知支持库函数_41 (4, 2)

.计次循环首 (表格1., 行)
    表格1.未知支持库函数_9 (行, 0, 1, 到文本 (行))
.计次循环尾 ()
表格1.未知支持库函数_9 (1, 1, 1, “【资  产  合  计】”)
表格1.未知支持库函数_9 (2, 1, 1, “             『库存商品总值合计』”)
表格1.未知支持库函数_9 (3, 1, 1, “                          进货抹零”)
表格1.未知支持库函数_9 (5, 1, 1, “             『应收帐款』”)
表格1.未知支持库函数_9 (7, 1, 1, “             『现金银行存款合计』”)


表格1.未知支持库函数_9 (9, 1, 1, “                          销售抹零”)
表格1.未知支持库函数_9 (10, 1, 1, “             『销售返货盈余』”)
表格1.未知支持库函数_9 (13, 1, 1, “             『其它支出』”)

表格1.未知支持库函数_9 (14, 1, 1, “             『费用合计』”)

表格1.未知支持库函数_9 (17, 1, 1, “         资  产  总  计：”)

表格1.未知支持库函数_9 (1, 3, 1, “【负  债  合  计】”)
表格1.未知支持库函数_9 (2, 3, 1, “             『应付帐款』”)

表格1.未知支持库函数_9 (5, 3, 1, “【权  益  合  计】”)
表格1.未知支持库函数_9 (7, 3, 1, “             『销售利润』”)

表格1.未知支持库函数_9 (9, 3, 1, “             『价格变动差额』”)
表格1.未知支持库函数_9 (10, 3, 1, “             『进货返货盈余』”)

表格1.未知支持库函数_9 (11, 3, 1, “             『其它收入』”)
表格1.未知支持库函数_9 (12, 3, 1, “             『期初资本』”)
表格1.未知支持库函数_9 (13, 3, 1, “             『期初库存』”)
表格1.未知支持库函数_9 (14, 3, 1, “             『期初应收帐款』加”)
表格1.未知支持库函数_9 (15, 3, 1, “             『期初应付帐款』减”)

表格1.未知支持库函数_9 (17, 3, 1, “         负 债 权 益 总 计：”)

打开 (相加 (运行目录, “\”, 路径, “\yyjl_kc.edb”), “kcsp”, , , , , )
表格1.未知支持库函数_9 (2, 2, 1, 数值到格式文本 (求和 (读 (“金额”), ), 2, 假))
打开 (相加 (运行目录, “\”, 路径, “\jbzl_xjck.edb”), “xjck”, , , , , )
表格1.未知支持库函数_9 (7, 2, 1, 数值到格式文本 (求和 (读 (“结存金额”), ), 2, 假))
打开 (相加 (运行目录, “\”, 路径, “\yyjl_ysyf.edb”), “ysyf”, , , , , )
表格1.未知支持库函数_9 (5, 2, 1, 数值到格式文本 (求和 (读 (“应收帐款”), ), 2, 假))
表格1.未知支持库函数_9 (2, 4, 1, 数值到格式文本 (求和 (读 (“应付帐款”), ), 2, 假))
打开 (相加 (运行目录, “\qczl\jbzl_xjck.edb”), “qcxjck”, , , , , )
表格1.未知支持库函数_9 (12, 4, 1, 数值到格式文本 (求和 (读 (“结存金额”), ), 2, 假))
打开 (相加 (运行目录, “\qczl\yyjl_kc.edb”), , , , , , )
表格1.未知支持库函数_9 (13, 4, 1, 数值到格式文本 (求和 (读 (“金额”), ), 2, 假))
打开 (相加 (运行目录, “\qczl\yyjl_ysyf.edb”), , , , , , )
表格1.未知支持库函数_9 (14, 4, 1, 数值到格式文本 (求和 (读 (“应收帐款”), ), 2, 假))
表格1.未知支持库函数_9 (15, 4, 1, 数值到格式文本 (负 (求和 (读 (“应付帐款”), )), 2, 假))

.如果真 (打开 (相加 (运行目录, “\”, 路径, “\yyjl_xsd.edb”), , , , , , ))
    重定义数组 (字段顺序, 假, 2)
    赋值 (字段顺序 [1], “单据编号”)
    赋值 (字段顺序 [2], “金额”)
    分类计算 (相加 (运行目录, “\lscx\xsd.edb”), “单据编号”, , , 字段顺序)
.如果真结束

.如果真 (打开 (相加 (运行目录, “\”, 路径, “\yyjl_jhd.edb”), , , , , , ))
    重定义数组 (字段顺序, 假, 2)
    赋值 (字段顺序 [1], “单据编号”)
    赋值 (字段顺序 [2], “金额”)
    分类计算 (相加 (运行目录, “\lscx\jhd.edb”), “单据编号”, , , 字段顺序)
.如果真结束
打开 (相加 (运行目录, “\”, 路径, “\moling”), “ml”, , , , , )
清空 ()
打开 (相加 (运行目录, “\lscx\xsd.edb”), “xsd”, , , , , )
打开 (相加 (运行目录, “\”, 路径, “\yyjl_jylc”), “jylc”, , , , , )
打开 (相加 (运行目录, “\lscx\jhd.edb”), “jhd”, , , , , )
.计次循环首 (取记录数 (), 循环变量)
    置当前库 (“jylc”)
    到首记录 ()
    .如果真 (查找 (等于 (读 (“单据编号”), 读字段 (“单据编号”, “jhd”))))
        置当前库 (“ml”)
        
        加记录 (读字段 (“单据编号”, “jhd”), 相加 (相减 (读字段 (“实收付金额”, “jylc”), 读字段 (“金额”, “jhd”)), 读字段 (“应收付金额”, “jylc”)), )
    .如果真结束
    置当前库 (“jhd”)
    
    跳过 ()
.计次循环尾 ()
置当前库 (“xsd”)
.计次循环首 (取记录数 (), 循环变量)
    置当前库 (“jylc”)
    到首记录 ()
    .如果真 (查找 (等于 (读 (“单据编号”), 读字段 (“单据编号”, “xsd”))))
        置当前库 (“ml”)
        加记录 (读字段 (“单据编号”, “xsd”), , 相减 (读字段 (“金额”, “xsd”), 读字段 (“实收付金额”, “jylc”), 读字段 (“应收付金额”, “jylc”)))
    .如果真结束
    置当前库 (“xsd”)
    跳过 ()
.计次循环尾 ()

置当前库 (“ml”)

表格1.未知支持库函数_9 (3, 2, 1, 数值到格式文本 (求和 (读 (“进货抹零”), ), 2, 假))
表格1.未知支持库函数_9 (9, 2, 1, 数值到格式文本 (求和 (读 (“销售抹零”), ), 2, 假))
表格1.未知支持库函数_9 (7, 4, 1, 到文本 (求月利润 ()))
表格1.未知支持库函数_9 (10, 4, 1, 到文本 (进货退货盈余 ()))
表格1.未知支持库函数_9 (10, 2, 1, 到文本 (销售退货盈余 ()))
打开 (相加 (运行目录, “\”, 路径, “\yyjl_fy.edb”), , , , , , )
表格1.未知支持库函数_9 (14, 2, 1, 数值到格式文本 (求和 (读 (“金额”), ), 2, 假))
打开 (相加 (运行目录, “\”, 路径, “\jbzl_qtsr.edb”), , , , , , )
表格1.未知支持库函数_9 (11, 4, 1, 数值到格式文本 (求和 (读 (“金额”), ), 2, 假))
打开 (相加 (运行目录, “\”, 路径, “\jbzl_qtzc.edb”), , , , , , )
表格1.未知支持库函数_9 (13, 2, 1, 数值到格式文本 (求和 (读 (“金额”), ), 2, 假))

.计次循环首 (相减 (表格1., 1), 循环变量)
    赋值 (资产合计, 相加 (资产合计, 到数值 (表格1.未知支持库函数_10 (循环变量, 2))))
.计次循环尾 ()
.计次循环首 (相减 (表格1., 1), 循环变量)
    赋值 (负债权益, 相加 (负债权益, 到数值 (表格1.未知支持库函数_10 (循环变量, 4))))
.计次循环尾 ()
表格1.未知支持库函数_9 (9, 4, 1, 数值到格式文本 (相减 (资产合计, 负债权益), 2, 假))
赋值 (资产合计, 0)
赋值 (负债权益, 0)
.计次循环首 (相减 (表格1., 1), 循环变量)
    赋值 (资产合计, 相加 (资产合计, 到数值 (表格1.未知支持库函数_10 (循环变量, 2))))
.计次循环尾 ()
.计次循环首 (相减 (表格1., 1), 循环变量)
    赋值 (负债权益, 相加 (负债权益, 到数值 (表格1.未知支持库函数_10 (循环变量, 4))))
.计次循环尾 ()

表格1.未知支持库函数_9 (17, 4, 1, 数值到格式文本 (负债权益, 2, 假))
表格1.未知支持库函数_9 (17, 2, 1, 数值到格式文本 (资产合计, 2, 假))


.窗口程序集 销售单, , , 

.程序集变量 字段数, 整数型, , , 
.程序集变量 记录数, 整数型, , , 
.程序集变量 编码查询, 文本型, , "1,2", 
.程序集变量 上一交点, 编辑框, , , 
.程序集变量 已输入, 逻辑型, , , 
.程序集变量 完整行, 整数型, , "0", 
.程序集变量 不完整数据, 逻辑型, , "0", 
.程序集变量 文本, 文本型, , , 
.程序集变量 购买单位变量, 文本型, , , 
.程序集变量 默认帐户, 文本型, , , 
.子程序 _销售单_创建完毕, 空白型, , 
.局部变量 录单日期, 日期时间型, , , 
.局部变量 现行日期, 日期时间型, , , 
.局部变量 年份, 文本型, , , 
.局部变量 月份, 文本型, , , 
.局部变量 日, 文本型, , , 
.局部变量 行, 整数型, , , 
.局部变量 循环变量, 整数型, , , 
.局部变量 表格常量, 整数型, , , 
.局部变量 表格列标题, 文本型, , , 
.局部变量 表格列宽, 整数型, , , 
.局部变量 循环变量1, 整数型, , , 
.局部变量 标题宽, 整数型, , , 
.局部变量 wHotkey, 整数型, , , 

.如果 (等于 (检查基本资料完整 (), 假))
    销毁 ()
    返回 ()
.否则
    
.如果结束
.如果真 (等于 (检查已建帐 (), 假))
    销毁 ()
    返回 ()
.如果真结束
0.未知支持库函数_9 (0, #., “序号”)
0.未知支持库函数_32 (60)
全部关闭 ()

打开 (相加 (运行目录, “\date\yyjl_xsd_ls.edb”), “lsxsd”, , , , , )

置当前库 (“lsxsd”)
赋值 (字段数, 相减 (取字段数 (), 7))
到尾记录 ()
赋值 (记录数, 相加 (取记录数 (), 1))
到首记录 ()
赋值 (., 字段数)
赋值 (., 16)

.计次循环首 (相减 (字段数, 1), 循环变量1)
    赋值 (表格列标题, 取字段名 (循环变量1))
    赋值 (标题宽, 取文本长度 (表格列标题))
    赋值 (表格列宽, 取字段尺寸 (循环变量1))
    0.未知支持库函数_9 (循环变量1, 1, 表格列标题)
    .如果真 (等于 (表格列宽, 2))
        赋值 (表格列宽, 4)
    .如果真结束
    .如果真 (小于 (表格列宽, 标题宽))
        赋值 (表格列宽, 标题宽)
    .如果真结束
    循环变量1.未知支持库函数_32 (相乘 (表格列宽, 10))
    0.未知支持库函数_25 (循环变量1, , , 2)
.计次循环尾 ()
.循环判断首 ()
    赋值 (行, 相加 (行, 1))
    行.未知支持库函数_9 (0, #., 到文本 (行))
.循环判断尾 (小于 (行, 相减 (., .)))
读表格式 ()
1.未知支持库函数_14 (#白色, #银白)
1.未知支持库函数_25 (7, 16, 11, 3)

.如果 (等于 (单据类型, “销售单修改”))
    赋值 (., 真)
    赋值 (., 真)
    
    销售单修改查询 ()
    读表格式 ()
    返回 ()
.否则
    
.如果结束
全部关闭 ()
.如果真 (等于 (单据类型, “进货退货单”))
    赋值 (销售单., “进货退货单”)
    赋值 (.标题, “退货日期”)
    赋值 (.标题, “收货单位”)
.如果真结束
赋值 (现行日期, 取日期 (取现行时间 ()))
赋值 (.内容, 到文本 (现行日期))
1.未知支持库函数_30 (#.)
7.未知支持库函数_30 (#.)
8.未知支持库函数_30 (#.)
9.未知支持库函数_30 (#.)
10.未知支持库函数_30 (#.)
11.未知支持库函数_30 (#.)

打开 (相加 (运行目录, “\date\yyjl_xsd_ls.edb”), “lsxsd”, , , , , )
打开 (相加 (运行目录, “\date\xsbgpz.edb”), “xsbgpz”, , , , , )

打开 (相加 (运行目录, “\date\jbzl_wldw.edb”), “wldw”, , , , , )
打开 (相加 (运行目录, “\date\jbzl_bmzy.edb”), “bmzy”, , , , , )
打开 (相加 (运行目录, “\date\jbzl_ck.edb”), “ck”, , , , , )
打开 (相加 (运行目录, “\date\jbzl_xjck.edb”), “xjck”, , , , , )
打开 (相加 (运行目录, “\date\yyjl_ysyf.edb”), “ysyf”, , , , , )
打开 (相加 (运行目录, “\date\yyjl_kc.edb”), “kcsp”, , , , , )
打开 (相加 (运行目录, “\date\yyjl_jhfhd_ls.edb”), “lsjhfhd”, , , , , )

打开 (相加 (运行目录, “\date\jbzl_spmc.edb”), “spmc”, , , , , )
添加下拉列表 ()

打开 (相加 (运行目录, “\date\yyjl_djsh.edb”), “djsh”, , , , , )

打开 (相加 (运行目录, “\cxk\kcspdj.edb”), “spdj”, , , , , )
置当前库 (“xjck”)
到首记录 ()
赋值 (默认帐户, 读 (2))
赋值 (.内容, 默认帐户)
获取焦点 ()
赋值 (.起始选择位置, -1)
获取焦点 ()
赋值 (.内容, 单据号 (到时间 (.内容)))


.子程序 销售单修改查询, 空白型, , 
.局部变量 循环变量, 整数型, , , 
.局部变量 循环变量1, 整数型, , , 
.局部变量 金额, 双精度小数型, , , 
.局部变量 折后金额, 双精度小数型, , , 
.局部变量 数量, 双精度小数型, , , 

全部关闭 ()
赋值 (销售单., 相加 (销售单., “【现在是单据修改查询状态】”))
打开 (相加 (运行目录, “\lscx\djcx.edb”), “djcx”, , , , , )
到首记录 ()
赋值 (.内容, 到文本 (读 (“销售日期”)))
赋值 (.内容, 读 (“单据编号”))
赋值 (.内容, 读 (“购买单位”))
赋值 (.内容, 读 (“经手人”))
赋值 (.内容, 读 (“摘要”))
赋值 (.内容, 读 (“收款帐户”))

赋值 (.内容, 读 (“发货仓库”))
赋值 (., 相减 (取字段数 (), 7))
到首记录 ()
.计次循环首 (取记录数 (), 循环变量1)
    .计次循环首 (相减 (取字段数 (), 7), 循环变量)
        循环变量1.未知支持库函数_9 (循环变量, 1, 读 (循环变量))
    .计次循环尾 ()
    跳过 ()
.计次循环尾 ()

打开 (相加 (运行目录, “\lscx\yyjl_jylc.edb”), , , , , , )
.如果真 (查找 (等于 (读 (“单据编号”), .内容)))
    
    赋值 (.内容, 到文本 (读 (“实收付金额”)))
    赋值 (.内容, 到文本 (读 (“数量”)))
     ' 折后金额.内容 ＝ 到文本 (读 (“折后金额”))
    赋值 (.内容, 到文本 (读 (“合计金额”)))
    
.如果真结束

全部关闭 ()




.子程序 添加下拉列表, 空白型, , 
.局部变量 记录数, 整数型, , , 
.局部变量 循环变量, 整数型, , , 
.局部变量 编码, 文本型, , , 
.局部变量 编码对应值, 文本型, , , 
.局部变量 计数, 整数型, , , 
.局部变量 当前库, 文本型, , , 
.局部变量 数量, 双精度小数型, , , 
.局部变量 仓库, 文本型, , , 

未知支持库函数_28 ()
赋值 (当前库, 取当前库 ())
.如果真 (取反 (置当前库 (“spmc”)))
    打开 (相加 (运行目录, “\date\jbzl_spmc.edb”), “spmc”, , , , , )
    
.如果真结束
到尾记录 ()
赋值 (记录数, 取记录数 ())
重定义数组 (编码查询, 假, 记录数, 2)
到首记录 ()
跳过 ()
.计次循环首 (相减 (记录数, 1), 循环变量)
    .如果真 (等于 (读 (“子类数”), 假))
        置当前库 (“kcsp”)
        到首记录 ()
        .如果真 (查找 (等于 (读 (“商品全称”), 读字段 (“全称”, “spmc”))))
            赋值 (数量, 相加 (数量, 读字段 (“结存数量”, “kcsp”)))
            赋值 (仓库, 相加 (读字段 (“仓库名称”, “kcsp”), “数量：”, 到文本 (读字段 (“结存数量”, “kcsp”))))
            跳过 ()
            .判断循环首 (查找 (等于 (读 (“商品全称”), 读字段 (“全称”, “spmc”))))
                赋值 (数量, 相加 (数量, 读字段 (“结存数量”, “kcsp”)))
                赋值 (仓库, 相加 (仓库, “  //  ”, 读字段 (“仓库名称”, “kcsp”), “数量：”, 到文本 (读字段 (“结存数量”, “kcsp”))))
                跳过 ()
            .判断循环尾 ()
            置当前库 (“spmc”)
            赋值 (计数, 相加 (计数, 1))
            赋值 (编码对应值, 相加 (读 (“全称”), “;”, 读 (5), “;”, 读 (7), “;”, 读 (8), “;”, 读 (9), “;”, 到文本 (读 (“一般售价”)), “;”, 读 (“全称”), “[”, 仓库, “]”)) ' 加入提示
            赋值 (编码, 读 (6))
            赋值 (编码查询 [计数] [1], 编码)
            赋值 (编码查询 [计数] [2], 编码对应值)
            1.未知支持库函数_45 (编码)
        .如果真结束
        
    .如果真结束
    置当前库 (“spmc”)
    跳过 ()
.计次循环尾 ()
.如果真 (等于 (计数, 0))
    赋值 (计数, 1)
.如果真结束
重定义数组 (编码查询, 真, 计数, 2)
置当前库 (当前库)

.子程序 添加销售往来单位列表, 空白型, , 
.局部变量 当前库, 文本型, , , 

赋值 (当前库, 取当前库 ())
.如果真 (取反 (置当前库 (“wldw”)))
    打开 (相加 (运行目录, “\date\jbzl_wldw.edb”), “wldw”, , , , , )
    
.如果真结束
到首记录 ()
跳过 ()
清空 ()
.判断循环首 (取反 (尾记录后 ()))
    .如果真 (等于 (读 (“子类数”), 假))
        相加 (读 (5), “[”, 读 (3), “]”).加入项目 ()
    .如果真结束
    跳过 ()
.判断循环尾 ()
置当前库 (当前库)

.子程序 添加部门职员列表, 空白型, , 
.局部变量 当前库, 文本型, , , 

赋值 (当前库, 取当前库 ())
.如果真 (取反 (置当前库 (“bmzy”)))
    打开 (相加 (运行目录, “\date\jbzl_bmzy.edb”), “bmzy”, , , , , )
.如果真结束
到首记录 ()
跳过 ()
清空 ()
.判断循环首 (取反 (尾记录后 ()))
    相加 (读 (5), “[”, 读 (3), “]”).加入项目 ()
    跳过 ()
.判断循环尾 ()
置当前库 (当前库)


.子程序 添加仓库列表, 空白型, , 
.局部变量 当前库, 文本型, , , 

赋值 (当前库, 取当前库 ())
.如果真 (取反 (置当前库 (“ck”)))
    打开 (相加 (运行目录, “\date\jbzl_ck.edb”), “ck”, , , , , )
    
.如果真结束
到首记录 ()
跳过 ()
清空 ()
.判断循环首 (取反 (尾记录后 ()))
    相加 (读 (5), “[”, 读 (3), “]”).加入项目 ()
    跳过 ()
.判断循环尾 ()
置当前库 (当前库)


.子程序 _退出按钮_被单击, 空白型, , 
.局部变量 返回值, 整数型, , , 

.如果真 (不等于 (单据类型, “销售单修改”))
    .如果真 (并且 (不等于 (.内容, “”), 等于 (., 假)))
        赋值 (返回值, 信息框 (“有未保存数据，是否真的退出。”, 相加 (#警告图标, #确认取消钮), “退出提示”))
        .如果真 (等于 (返回值, 1))
            返回 ()
            
        .如果真结束
        
    .如果真结束
    
    
.如果真结束



销毁 ()

.子程序 编码转全称, 文本型, , 
.参数 编码, 文本型, , 

.局部变量 循环变量, 整数型, , , 
.局部变量 成员数, 整数型, , , 

赋值 (成员数, 取数组成员数 (编码查询))
.计次循环首 (相除 (成员数, 2), 循环变量)
    .如果真 (等于 (编码, 编码查询 [循环变量] [1]))
        返回 (编码查询 [循环变量] [2])
    .如果真结束
    
.计次循环尾 ()
返回 (“”)

.子程序 存表格式, 空白型, , 
.参数 lh, 整数型, , 

.局部变量 行号, 逻辑型, , , 
.局部变量 当前库, 文本型, , , 

赋值 (当前库, 取当前库 ())
打开 (相加 (运行目录, “\date\xsbgpz.edb”), “xsbgpz”, , , , , )
置当前库 (“xsbgpz”)
跳到 (lh)
修改 (0.未知支持库函数_10 (lh), lh.未知支持库函数_44 (), 真)
关闭 ()
置当前库 (当前库)


.子程序 读表格式, 空白型, , 
.局部变量 表格宽, 双精度小数型, , , 
.局部变量 循环变量, 整数型, , , 
.局部变量 当前库, 文本型, , , 
.局部变量 列宽, 整数型, , , 
.局部变量 是否显示, 逻辑型, , , 

赋值 (表格宽, 整除 (., 1.5))
赋值 (当前库, 取当前库 ())
打开 (相加 (运行目录, “\date\xsbgpz.edb”), “xsbgpz”, , , , , )

置当前库 (“xsbgpz”)
到首记录 ()
.计次循环首 (取记录数 (), 循环变量)
    赋值 (列宽, 读 (2))
    赋值 (是否显示, 读 (3))
    .如果真 (等于 (是否显示, 真))
        .如果真 (并且 (大于 (列宽, 2), 小于 (列宽, 表格宽)))
            循环变量.未知支持库函数_32 (列宽)
            
        .如果真结束
        
    .如果真结束
    跳过 ()
.计次循环尾 ()
关闭 ()
置当前库 (当前库)

.子程序 _表格1_列宽被改变, 空白型, , 
.参数 列号, 整数型, , 

存表格式 (列号)

.子程序 _开新单按钮_被单击, 空白型, , 
.局部变量 行, 整数型, , , 

赋值 (., 假)
赋值 (., 真)
赋值 (., 1)
赋值 (., 16)
连续赋值 (“”, .内容, .内容, .内容, .内容, .内容, .内容, .内容, .内容, .内容)
0.置文本 (“”)
赋值 (.内容, “现金”)
.循环判断首 ()
    赋值 (行, 相加 (行, 1))
    行.未知支持库函数_9 (0, #., 到文本 (行))
.循环判断尾 (小于 (行, 相减 (., .)))
赋值 (.内容, 单据号 (到时间 (.内容)))


.子程序 _保存输入按钮_被单击, 空白型, , 
.局部变量 n, 整数型, , , 

.如果 (等于 (检查销售单完整性 (), 真))
    .如果真 (并且 (不等于 (.内容, “应收帐款”), 等于 (.内容, “”)))
        信息框 (“当收款帐户是现金和银行存款时，收款金额不能为空。”, #错误图标, “警告”)
        返回 ()
    .如果真结束
    .如果真 (并且 (等于 (.内容, “应收帐款”), 等于 (.内容, .内容)))
        信息框 (“当收款帐户是应收帐款时，收款金额与合计金额不能相等，否则视为收现金。”, #错误图标, “警告”)
        返回 ()
    .如果真结束
    
    .如果真 (大于 (取数组成员数 (不完整数据), 0))
        赋值 (n, 信息框 (“请检查金额为0的行，如果确认为0，按[是]确定。”, 相加 (#是否钮, #警告图标), “警告”))
        .如果真 (等于 (n, 6))
            返回 ()
        .如果真结束
        
    .如果真结束
    赋值 (., 假)
    赋值 (., 真)
    赋值 (已输入, 假)
    保存销售单输入 ()
    .如果真 (等于 (_启动窗口..选中, 真))
        审核过帐 (真)
        .如果真 (取反 (置当前库 (“djsh”)))
            打开 (相加 (运行目录, “\date\yyjl_djsh.edb”), “djsh”, , , , , )
        .如果真结束
        删除 (等于 (读 (“审核”), 真))
        彻底删除 ()
    .如果真结束
    
.否则
    信息框 (“请把必要的内容添全!”, #错误图标, )
.如果结束


.子程序 保存销售单输入, 空白型, , 
.局部变量 循环变量, 整数型, , , 
.局部变量 当前库, 文本型, , , 
.局部变量 单位内容, 文本型, , , 
.局部变量 单位编码, 文本型, , , 
.局部变量 应收金额, 双精度小数型, , , 
.局部变量 实收金额, 双精度小数型, , , 
.局部变量 盈余, 双精度小数型, , , 

赋值 (当前库, 取当前库 ())
.判断开始 (等于 (单据类型, “销售单修改”))
    打开 (相加 (运行目录, “\date\yyjl_xsd_ls.edb”), “lsxsd”, , , , , )
    到首记录 ()
    .计次循环首 (取数组成员数 (完整行), 循环变量)
        .判断循环首 (查找 (等于 (读 (“单据编号”), .内容)))
            .如果真 (等于 (读 (“商品全称”), 完整行.未知支持库函数_10 ( [循环变量], 2)))
                修改 (完整行.未知支持库函数_10 ( [循环变量], 1), 完整行.未知支持库函数_10 ( [循环变量], 2), 完整行.未知支持库函数_10 ( [循环变量], 3), 完整行.未知支持库函数_10 ( [循环变量], 4), 完整行.未知支持库函数_10 ( [循环变量], 5), 完整行.未知支持库函数_10 ( [循环变量], 6), 到数值 (完整行.未知支持库函数_10 ( [循环变量], 7)), 到数值 (完整行.未知支持库函数_10 ( [循环变量], 8)), 到数值 (完整行.未知支持库函数_10 ( [循环变量], 9)), 到数值 (完整行.未知支持库函数_10 ( [循环变量], 10)), 到数值 (完整行.未知支持库函数_10 ( [循环变量], 11)), 完整行.未知支持库函数_10 ( [循环变量], 12), 到时间 (.内容), .内容, .内容, .内容, .内容, .内容, .内容, )
            .如果真结束
            跳过 ()
        .判断循环尾 ()
    .计次循环尾 ()
    关闭 ()
    打开 (相加 (运行目录, “\date\yyjl_djsh.edb”), “djsh”, , , , , )
    到首记录 ()
    置当前库 (“djsh”)
    .如果 (等于 (.内容, “应收帐款”))
        赋值 (实收金额, 到数值 (.内容))
        赋值 (应收金额, 相减 (到数值 (.内容), 到数值 (.内容)))
    .否则
        赋值 (实收金额, 到数值 (.内容))
        赋值 (应收金额, 0)
    .如果结束
    查找 (等于 (读 (“单据编号”), .内容))
    修改 (到时间 (.内容), .内容, , 到数值 (.内容), 到数值 (.内容), 到数值 (.内容), 实收金额, 应收金额, , .内容, .内容, .内容, .内容)
    
    关闭 ()
.判断 (等于 (单据类型, “进货退货单”))
    写出单据编号 (.内容)
    打开 (相加 (运行目录, “\cxk\kcspdj.edb”), “spdj”, , , , , )
    到首记录 ()
    置当前库 (“lsjhfhd”)
    到首记录 ()
    .计次循环首 (取数组成员数 (完整行), 循环变量)
        加记录 (完整行.未知支持库函数_10 ( [循环变量], 1), 完整行.未知支持库函数_10 ( [循环变量], 2), 完整行.未知支持库函数_10 ( [循环变量], 3), 完整行.未知支持库函数_10 ( [循环变量], 4), 完整行.未知支持库函数_10 ( [循环变量], 5), 完整行.未知支持库函数_10 ( [循环变量], 6), 到数值 (完整行.未知支持库函数_10 ( [循环变量], 7)), 到数值 (完整行.未知支持库函数_10 ( [循环变量], 8)), 到数值 (完整行.未知支持库函数_10 ( [循环变量], 9)), 到数值 (完整行.未知支持库函数_10 ( [循环变量], 10)), 到数值 (完整行.未知支持库函数_10 ( [循环变量], 11)), 完整行.未知支持库函数_10 ( [循环变量], 12), 到时间 (.内容), .内容, .内容, .内容, .内容, .内容, .内容, , )
        置当前库 (“spdj”)
        到首记录 ()
        .如果真 (查找 (等于 (读 (“商品全称”), 读字段 (“商品全称”, “lsjhfhd”))))
            写字段 (“盈余”, “lsjhfhd”, 相减 (读字段 (“金额”, “lsjhfhd”), 相乘 (读字段 (“单价”, “spdj”), 读字段 (“数量”, “lsjhfhd”))))
        .如果真结束
        置当前库 (“lsjhfhd”)
    .计次循环尾 ()
    关闭 (“spdj”)
    
    置当前库 (“djsh”)
    .如果 (等于 (.内容, “应收帐款”))
        赋值 (实收金额, 到数值 (.内容))
        赋值 (应收金额, 相减 (到数值 (.内容), 到数值 (.内容)))
    .否则
        赋值 (实收金额, 到数值 (.内容))
        赋值 (应收金额, 0)
    .如果结束
    加记录 (到时间 (.内容), .内容, , 到数值 (.内容), 到数值 (.内容), 到数值 (.内容), 实收金额, 应收金额, “进货退货单”, .内容, .内容, .内容, .内容)
    
.默认
    写出单据编号 (.内容)
    打开 (相加 (运行目录, “\date\yyjl_xsd_ls.edb”), “lsxsd”, , , , , )
    置当前库 (“lsxsd”)
    .计次循环首 (取数组成员数 (完整行), 循环变量)
        加记录 (完整行.未知支持库函数_10 ( [循环变量], 1), 完整行.未知支持库函数_10 ( [循环变量], 2), 完整行.未知支持库函数_10 ( [循环变量], 3), 完整行.未知支持库函数_10 ( [循环变量], 4), 完整行.未知支持库函数_10 ( [循环变量], 5), 完整行.未知支持库函数_10 ( [循环变量], 6), 到数值 (完整行.未知支持库函数_10 ( [循环变量], 7)), 到数值 (完整行.未知支持库函数_10 ( [循环变量], 8)), 到数值 (完整行.未知支持库函数_10 ( [循环变量], 9)), 到数值 (完整行.未知支持库函数_10 ( [循环变量], 10)), 到数值 (完整行.未知支持库函数_10 ( [循环变量], 11)), 完整行.未知支持库函数_10 ( [循环变量], 12), 到时间 (.内容), .内容, .内容, .内容, .内容, .内容, .内容, )
        跳过 ()
    .计次循环尾 ()
    关闭 ()
    打开 (相加 (运行目录, “\date\yyjl_djsh.edb”), “djsh”, , , , , )
    到首记录 ()
    置当前库 (“djsh”)
    .如果 (等于 (.内容, “应收帐款”))
        赋值 (实收金额, 到数值 (.内容))
        赋值 (应收金额, 相减 (到数值 (.内容), 到数值 (.内容)))
    .否则
        赋值 (实收金额, 到数值 (.内容))
        赋值 (应收金额, 0)
    .如果结束
    
    加记录 (到时间 (.内容), .内容, , 到数值 (.内容), 到数值 (.内容), 到数值 (.内容), 实收金额, 应收金额, “销售单”, .内容, .内容, .内容, .内容)
    关闭 ()
    .如果真 (等于 (单据类型, “”))
        置当前库 (“spmc”)
        .计次循环首 (取数组成员数 (完整行), 循环变量)
            替换 (等于 (读 (“全称”), 完整行.未知支持库函数_10 ( [循环变量], 2)), “一般售价”, 到数值 (完整行.未知支持库函数_10 ( [循环变量], 7)))
        .计次循环尾 ()
    .如果真结束
    
.判断结束

置当前库 (当前库)

.子程序 检查销售单完整性, 逻辑型, , 
.局部变量 行数, 整数型, , , 
.局部变量 循环变量, 整数型, , , 
.局部变量 数据列, 文本型, , , 
.局部变量 数据列1, 文本型, , , 
.局部变量 数据列2, 整数型, , , 
.局部变量 有效数据行, 文本型, , , 
.局部变量 计数, 整数型, , , 

赋值 (行数, 相减 (., 1))
重定义数组 (完整行, 假, 0)
重定义数组 (不完整数据, 假, 0)
赋值 (计数, 0)
.计次循环首 (行数, 循环变量)
    赋值 (数据列, 到文本 (循环变量.未知支持库函数_10 (8)))
    赋值 (数据列1, 到文本 (循环变量.未知支持库函数_10 (2)))
    赋值 (数据列2, 到数值 (到文本 (循环变量.未知支持库函数_10 (9))))
    .如果真 (并且 (不等于 (数据列, “”), 不等于 (数据列1, “”)))
        加入成员 (完整行, 循环变量)
        .如果真 (等于 (数据列2, 0))
            加入成员 (不完整数据, 真)
        .如果真结束
        
    .如果真结束
    
    
.计次循环尾 ()
赋值 (计数, 取数组成员数 (完整行))
.如果真 (等于 (计数, 0))
    信息框 (“没有输入有效数据，不能保存！”, #警告图标, “保存提示”)
    返回 (假)
.如果真结束

.如果真 (并且 (不等于 (.内容, “”), 不等于 (.内容, “”), 不等于 (.内容, “”), 不等于 (.内容, “”)))
    .计次循环首 (计数, 循环变量)
        赋值 (有效数据行, 相加 (有效数据行, 到文本 (完整行 [循环变量]), “；”))
    .计次循环尾 ()
    赋值 (计数, 信息框 (相加 (“请注意有效数据行是  ”, 有效数据行), 相加 (#是否钮, 32), “保存提示信息”))
    
.如果真结束
.如果 (等于 (计数, 5))
    返回 (真)
.否则
    返回 (假)
.如果结束


.子程序 _表格1_结束编辑, 空白型, , 
.局部变量 光标行号, 整数型, , , 
.局部变量 光标列号, 整数型, , , 
.局部变量 行号, 整数型, 静态, , 
.局部变量 行数, 整数型, , , 
.局部变量 循环变量, 整数型, , , 
.局部变量 循环变量1, 整数型, , , 
.局部变量 循环变量2, 整数型, , , 
.局部变量 数量合计, 双精度小数型, , , 
.局部变量 金额合计, 双精度小数型, , , 
.局部变量 折后金额合计, 双精度小数型, , , 
.局部变量 分割返回值, 文本型, , "0", 
.局部变量 单价, 双精度小数型, , , 

赋值 (光标行号, 未知支持库函数_3 ())
赋值 (光标列号, 未知支持库函数_4 ())
赋值 (行数, .)
.判断开始 (等于 (光标列号, 7))
    光标行号.未知支持库函数_9 (9, 1, 到文本 (相乘 (到数值 (光标行号.未知支持库函数_10 (7)), 到数值 (光标行号.未知支持库函数_10 (8)))))
    光标行号.未知支持库函数_9 (11, 1, 到文本 (四舍五入 (相乘 (到数值 (光标行号.未知支持库函数_10 (9)), 到数值 (光标行号.未知支持库函数_10 (10))), 2)))
    .计次循环首 (行数, 循环变量1)
        赋值 (金额合计, 相加 (到数值 (到文本 (循环变量1.未知支持库函数_10 (9))), 金额合计))
    .计次循环尾 ()
    赋值 (.内容, 到文本 (四舍五入 (金额合计, 2)))
    
    .计次循环首 (行数, 循环变量2)
        赋值 (折后金额合计, 相加 (到数值 (到文本 (循环变量2.未知支持库函数_10 (11))), 折后金额合计))
    .计次循环尾 ()
    赋值 (.内容, 到文本 (四舍五入 (折后金额合计, 2)))
    赋值 (.内容, .内容)
    
    赋值 (单价, 成本价 (光标行号.未知支持库函数_10 (2)))
    .如果真 (小于 (到数值 (光标行号.未知支持库函数_10 (7)), 单价))
        赋值 (.可视, 真)
        赋值 (.内容, 相加 (“【”, 光标行号.未知支持库函数_10 (2), “】”, “成本单价(加权平均)是 ”, #换行符, 到文本 (单价)))
        获取焦点 ()
    .如果真结束
    
.判断 (等于 (光标列号, 8))
    置当前库 (“kcsp”)
    到首记录 ()
    .如果 (查找 (并且 (等于 (读 (“商品全称”), 光标行号.未知支持库函数_10 (2)), 等于 (读 (“仓库名称”), .内容))))
        .如果真 (小于 (读 (“结存数量”), 到数值 (光标行号.未知支持库函数_10 (8))))
            信息框 (“此仓库里此种商品小于要卖出数量，请看下面提示此种商品的库存量。”, 0, )
            光标行号.未知支持库函数_9 (8, 1, 0)
        .如果真结束
        
    .否则
        信息框 (“选择的仓库里没有此种商品，请看下面提示，选择有此种商品的仓库。”, 0, )
        获取焦点 ()
    .如果结束
    
    光标行号.未知支持库函数_9 (9, 1, 到文本 (相乘 (到数值 (光标行号.未知支持库函数_10 (7)), 到数值 (光标行号.未知支持库函数_10 (8)))))
    光标行号.未知支持库函数_9 (11, 1, 到文本 (四舍五入 (相乘 (到数值 (光标行号.未知支持库函数_10 (9)), 到数值 (光标行号.未知支持库函数_10 (10))), 2)))
    .计次循环首 (行数, 循环变量)
        赋值 (数量合计, 相加 (到数值 (到文本 (循环变量.未知支持库函数_10 (8))), 数量合计))
    .计次循环尾 ()
    赋值 (.内容, 到文本 (数量合计))
    
    .计次循环首 (行数, 循环变量)
        赋值 (金额合计, 相加 (到数值 (到文本 (循环变量.未知支持库函数_10 (9))), 金额合计))
    .计次循环尾 ()
    赋值 (.内容, 到文本 (四舍五入 (金额合计, 2)))
    .计次循环首 (行数, 循环变量1)
        赋值 (折后金额合计, 相加 (到数值 (到文本 (循环变量1.未知支持库函数_10 (11))), 折后金额合计))
    .计次循环尾 ()
    赋值 (.内容, 到文本 (四舍五入 (折后金额合计, 2)))
    赋值 (.内容, .内容)
    
.判断 (等于 (光标列号, 9))
    光标行号.未知支持库函数_9 (11, 1, 到文本 (四舍五入 (相乘 (到数值 (光标行号.未知支持库函数_10 (9)), 到数值 (光标行号.未知支持库函数_10 (10))), 2)))
    
    .计次循环首 (行数, 循环变量)
        赋值 (金额合计, 相加 (到数值 (到文本 (循环变量.未知支持库函数_10 (9))), 金额合计))
    .计次循环尾 ()
    赋值 (.内容, 到文本 (四舍五入 (金额合计, 2)))
    .计次循环首 (行数, 循环变量)
        赋值 (折后金额合计, 相加 (到数值 (到文本 (循环变量.未知支持库函数_10 (11))), 折后金额合计))
    .计次循环尾 ()
    赋值 (.内容, 到文本 (四舍五入 (折后金额合计, 2)))
    赋值 (.内容, .内容)
    
.判断 (或者 (等于 (光标列号, 11), 等于 (光标列号, 10)))
    
    光标行号.未知支持库函数_9 (11, 1, 到文本 (四舍五入 (相乘 (到数值 (光标行号.未知支持库函数_10 (9)), 到数值 (光标行号.未知支持库函数_10 (10))), 2)))
    .计次循环首 (行数, 循环变量)
        赋值 (折后金额合计, 相加 (到数值 (到文本 (循环变量.未知支持库函数_10 (11))), 折后金额合计))
    .计次循环尾 ()
    赋值 (.内容, 到文本 (四舍五入 (折后金额合计, 2)))
    
.判断 (等于 (光标列号, 1))
    光标行号.未知支持库函数_9 (10, 1, 到文本 (折扣率))
    1.未知支持库函数_9 (11, 1, “00”)
    赋值 (分割返回值, 分割文本 (编码转全称 (光标行号.未知支持库函数_10 (1)), “;”, 7))
    赋值 (循环变量1, 取数组成员数 (分割返回值))
    .如果真 (大于 (循环变量1, 0))
        .计次循环首 (相减 (循环变量1, 1), 循环变量)
            光标行号.未知支持库函数_9 (相加 (循环变量, 1), 1, 分割返回值 [循环变量])
        .计次循环尾 ()
        
        1.置文本 (相加 (“  ”, 分割返回值 [7]))
        置当前库 (“kcsp”)
        到首记录 ()
        .如果 (查找 (并且 (等于 (读 (“商品全称”), 光标行号.未知支持库函数_10 (2)), 等于 (读 (“仓库名称”), .内容))))
            
        .否则
            信息框 (“选择的仓库里没有此种商品，请看下面提示，选择有此种商品的仓库。”, 0, )
            获取焦点 ()
        .如果结束
        
        .计次循环首 (6, 循环变量)
            256.投递信息 (位与 (39, 255), 1)
        .计次循环尾 ()
        .如果真 (等于 (光标行号, 1))
            .判断开始 (等于 (单据类型, “”))
                赋值 (.内容, 相加 (“销售”, “【”, 分割返回值 [1], “】”, “等,给”, “【”, .内容, “】”, “∶”, .内容))
                
            .判断 (等于 (单据类型, “进货退货单”))
                赋值 (.内容, 相加 (“退”, “【”, 分割返回值 [1], “】”, “等,给”, “【”, .内容, “】”, “∶”, .内容))
            .默认
                
            .判断结束
            
        .如果真结束
        
    .如果真结束
    
.默认
    
.判断结束


赋值 (已输入, 真)

.子程序 成本价, 双精度小数型, , 
.参数 商品名, 文本型, , 

.局部变量 当前库, 文本型, , , 
.局部变量 单价, 双精度小数型, , , 

赋值 (当前库, 取当前库 ())
置当前库 (“spdj”)
到首记录 ()
.如果真 (查找 (等于 (读 (“商品全称”), 商品名)))
    赋值 (单价, 到数值 (读 (“单价”)))
.如果真结束
置当前库 (当前库)
返回 (单价)


.子程序 _销售日期_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (等于 (键代码, #回车键))
    获取焦点 ()
.如果真结束


.子程序 _购买单位_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 


.如果真 (等于 (键代码, #回车键))
    获取焦点 ()
.如果真结束


.子程序 _经手人_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (等于 (键代码, #回车键))
    获取焦点 ()
.如果真结束


.子程序 _发货仓库_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (等于 (键代码, #回车键))
    获取焦点 ()
.如果真结束


.子程序 _购买单位_获得焦点, 空白型, , 
赋值 (上一交点, )
赋值 (.可视, 真)
赋值 (.顶边, 相加 (.顶边, .高度))
赋值 (.左边, .左边)
添加销售往来单位列表 ()
赋值 (文本, “”)

.子程序 _经手人_获得焦点, 空白型, , 
赋值 (上一交点, )
赋值 (.可视, 真)
赋值 (.顶边, 相加 (.顶边, .高度))
赋值 (.左边, .左边)
添加部门职员列表 ()

.子程序 _发货仓库_获得焦点, 空白型, , 
赋值 (上一交点, )
赋值 (.可视, 真)
赋值 (.顶边, 相加 (.顶边, .高度))
赋值 (.左边, .左边)
添加仓库列表 ()

.子程序 _收款帐户_获得焦点, 空白型, , 
赋值 (上一交点, )
赋值 (.高度, 100)
赋值 (.可视, 真)
赋值 (.顶边, 相减 (.顶边, .高度))
赋值 (.左边, .左边)
添加收付款帐户列表 ()

.子程序 _经手人_字符输入, 整数型, , 
.参数 字符代码, 整数型, , 

.如果真 (等于 (字符代码, #上光标键))
    获取焦点 ()
.如果真结束


.子程序 _购买单位_内容被改变, 空白型, , 
.局部变量 选择行, 整数型, , , 

赋值 (选择行, .选择 (.内容))
.如果真 (大于 (选择行, -1))
    赋值 (.现行选中项, 选择行)
    获取焦点 ()
.如果真结束


.子程序 被选择, 空白型, , 
.局部变量 内容, 文本型, , , 
.局部变量 寻找返回值, 整数型, , , 

赋值 (内容, .取项目文本 (.现行选中项))
赋值 (寻找返回值, 寻找文本 (内容, “[”, , 假))
赋值 (内容, 取文本中间 (内容, 相加 (寻找返回值, 1), 相减 (取文本长度 (内容), 寻找返回值, 1)))
.判断开始 (等于 (上一交点, ))
    赋值 (.内容, 内容)
    赋值 (购买单位变量, .取项目文本 (.现行选中项))
    .如果真 (取反 (置当前库 (“ysyf”)))
        打开 (相加 (运行目录, “\date\yyjl_ysyf.edb”), “ysyf”, , , , , )
        
    .如果真结束
    到首记录 ()
    查找 (等于 (读 (“往来单位”), 内容))
    0.置文本 (相加 (“  应收帐款： ”, 到文本 (读 (“应收帐款”))))
.判断 (等于 (上一交点, ))
    赋值 (.内容, 内容)
.判断 (等于 (上一交点, ))
    赋值 (.内容, 内容)
    
.判断 (等于 (上一交点, ))
    赋值 (.内容, 内容)
    .如果真 (等于 (.内容, “应收帐款”))
        赋值 (.内容, “”)
    .如果真结束
    赋值 (.高度, 60)
.默认
    
.判断结束


.子程序 添加收付款帐户列表, 空白型, , 
.局部变量 当前库, 文本型, , , 

赋值 (当前库, 取当前库 ())
.如果真 (取反 (置当前库 (“xjck”)))
    打开 (相加 (运行目录, “\date\jbzl_xjck.edb”), “xjck”, , , , , )
    
.如果真结束
到首记录 ()
清空 ()
.如果真 (不等于 (单据类型, “进货退货单”))
    0.插入项目 (“应收帐款”, )
    
.如果真结束

.判断循环首 (取反 (尾记录后 ()))
     ' (读 (2))
    相加 (读 (1), “[”, 读 (2), “]”).加入项目 ()
    跳过 ()
.判断循环尾 ()
置当前库 (当前库)


.子程序 _下拉选择框_失去焦点, 空白型, , 
赋值 (.可视, 假)
赋值 (.高度, 136)

.子程序 _下拉选择框_字符输入, 整数型, , 
.参数 字符代码, 整数型, , 


.如果真 (等于 (字符代码, #回车键))
    被选择 ()
    赋值 (.可视, 假)
    .判断开始 (等于 (上一交点, ))
         ' '' (“5546”)
        赋值 (.可视, 假)
        获取焦点 ()
        返回 ()
    .判断 (等于 (上一交点, ))
        赋值 (.可视, 假)
        获取焦点 ()
        
        返回 ()
    .判断 (等于 (上一交点, ))
        赋值 (.可视, 假)
        获取焦点 ()
        1.未知支持库函数_0 (1)
    .默认
        
    .判断结束
    
.如果真结束


.子程序 _经手人_内容被改变, 空白型, , 
.局部变量 选择行, 整数型, , , 

赋值 (选择行, .选择 (.内容))
.如果真 (大于 (选择行, -1))
    赋值 (.现行选中项, 选择行)
    获取焦点 ()
.如果真结束


.子程序 _发货仓库_内容被改变, 空白型, , 
.局部变量 选择行, 整数型, , , 

赋值 (选择行, .选择 (.内容))
.如果真 (大于 (选择行, -1))
    赋值 (.现行选中项, 选择行)
    获取焦点 ()
.如果真结束


.子程序 _收款帐户_内容被改变, 空白型, , 
.局部变量 选择行, 整数型, , , 

赋值 (选择行, .选择 (.内容))
.如果真 (大于 (选择行, 0))
    赋值 (.现行选中项, 选择行)
    获取焦点 ()
.如果真结束


.子程序 _下拉选择框_列表项被选择, 空白型, , 
被选择 ()

.子程序 _下拉选择框_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.可视, 假)

.子程序 _表格1_字符输入, 整数型, , 
.参数 字符代码, 整数型, , 

.如果真 (等于 (已输入, 假))
    赋值 (已输入, 真)
    赋值 (., 假)
    赋值 (., 真)
.如果真结束


.子程序 _表格1_光标位置改变, 空白型, , 
.局部变量 光标行号, 整数型, , , 
.局部变量 光标列号, 整数型, , , 
.局部变量 行号, 整数型, 静态, , 
.局部变量 行数, 整数型, , , 
.局部变量 循环变量, 整数型, , , 
.局部变量 数量合计, 双精度小数型, , , 
.局部变量 金额合计, 双精度小数型, , , 
.局部变量 折后金额合计, 双精度小数型, , , 

赋值 (光标行号, 未知支持库函数_3 ())
赋值 (光标列号, 未知支持库函数_4 ())
赋值 (行数, .)


.判断开始 (等于 (光标列号, 8))
    .如果真 (取反 (置当前库 (“kcsp”)))
        打开 (相加 (运行目录, “\date\yyjl_kc.edb”), “kcsp”, , , , , )
        
    .如果真结束
    
    到首记录 ()
    .如果 (查找 (并且 (等于 (读 (“商品全称”), 光标行号.未知支持库函数_10 (2)), 等于 (读 (“仓库名称”), .内容))))
        .如果真 (小于 (读 (“结存数量”), 到数值 (光标行号.未知支持库函数_10 (8))))
            信息框 (“此仓库里此种商品小于要卖出数量，请看下面提示此种商品的库存量。”, 0, )
            光标行号.未知支持库函数_9 (8, 1, 0)
        .如果真结束
        
    .否则
        信息框 (“选择的仓库里没有此种商品，请看下面提示，选择有此种商品的仓库。”, 0, )
        获取焦点 ()
        
    .如果结束
    
    .计次循环首 (行数, 循环变量)
        赋值 (数量合计, 相加 (到数值 (到文本 (循环变量.未知支持库函数_10 (8))), 数量合计))
    .计次循环尾 ()
    赋值 (.内容, 到文本 (四舍五入 (数量合计, 2)))
    .计次循环首 (行数, 循环变量)
        赋值 (金额合计, 相加 (到数值 (到文本 (循环变量.未知支持库函数_10 (9))), 金额合计))
    .计次循环尾 ()
    赋值 (.内容, 到文本 (四舍五入 (金额合计, 2)))
    
    .计次循环首 (行数, 循环变量)
        赋值 (折后金额合计, 相加 (到数值 (到文本 (循环变量.未知支持库函数_10 (11))), 折后金额合计))
    .计次循环尾 ()
    赋值 (.内容, 到文本 (四舍五入 (折后金额合计, 2)))
    赋值 (.内容, .内容)
    
.判断 (等于 (光标列号, 9))
    .计次循环首 (行数, 循环变量)
        赋值 (金额合计, 相加 (到数值 (到文本 (循环变量.未知支持库函数_10 (9))), 金额合计))
    .计次循环尾 ()
    赋值 (.内容, 到文本 (四舍五入 (金额合计, 2)))
    .计次循环首 (行数, 循环变量)
        赋值 (折后金额合计, 相加 (到数值 (到文本 (循环变量.未知支持库函数_10 (11))), 折后金额合计))
    .计次循环尾 ()
    赋值 (.内容, 到文本 (四舍五入 (折后金额合计, 2)))
    
.判断 (或者 (等于 (光标列号, 10), 等于 (光标列号, 11)))
    .计次循环首 (行数, 循环变量)
        赋值 (折后金额合计, 相加 (到数值 (到文本 (循环变量.未知支持库函数_10 (11))), 折后金额合计))
    .计次循环尾 ()
    赋值 (.内容, 到文本 (四舍五入 (折后金额合计, 2)))
.默认
    
.判断结束
赋值 (已输入, 真)

.子程序 _下拉选择框_双击选择, 空白型, , 
赋值 (.可视, 假)
.判断开始 (等于 (上一交点, ))
    赋值 (.可视, 假)
    获取焦点 ()
    返回 ()
.判断 (等于 (上一交点, ))
    赋值 (.可视, 假)
    获取焦点 ()
    
    返回 ()
.判断 (等于 (上一交点, ))
    赋值 (.可视, 假)
    获取焦点 ()
    1.未知支持库函数_0 (1)
.默认
    
.判断结束
赋值 (.可视, 假)

.子程序 _表格1_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 行号, 整数型, , , 

.如果真 (等于 (未知支持库函数_3 (), 相减 (., 1)))
    赋值 (行号, 未知支持库函数_3 ())
    .如果真 (并且 (等于 (键代码, #下光标键), 等于 (功能键状态, 1)))
        赋值 (., 相加 (., 1))
        相加 (未知支持库函数_3 (), 1).未知支持库函数_9 (0, 1, 到文本 (相加 (行号, 1)))
        刷新显示 ()
        
    .如果真结束
    
.如果真结束
.如果真 (并且 (等于 (键代码, #Tab键), 等于 (功能键状态, 1)))
    载入 (添加基本信息, , 真)
.如果真结束


.子程序 _单据编号_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

返回 (假)

.子程序 _销售单_将被销毁, 空白型, , 
赋值 (单据类型, “”)

.子程序 _收款金额_被双击, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.内容, “”)

.子程序 _表格1_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 单价, 双精度小数型, , , 

.如果真 (大于 (未知支持库函数_3 (), 0))
    .如果真 (不等于 (未知支持库函数_3 ().未知支持库函数_10 (2), “”))
        赋值 (单价, 成本价 (未知支持库函数_3 ().未知支持库函数_10 (2)))
        赋值 (.可视, 真)
        赋值 (.左边, 横向位置)
        赋值 (.顶边, 相加 (纵向位置, .))
        赋值 (.内容, 相加 (“【”, 未知支持库函数_3 ().未知支持库函数_10 (2), “】”, “成本单价(加权平均)是 ”, #换行符, 到文本 (单价)))
        获取焦点 ()
    .如果真结束
    
.如果真结束



.子程序 _成本价提示_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.可视, 假)

.子程序 _成本价提示_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果 (等于 (键代码, #Esc键))
    赋值 (.可视, 假)
.否则
    返回 (假)
.如果结束


.子程序 _表格1_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.可视, 假)

.子程序 _打印按钮_被单击, 空白型, , 
未知支持库函数_27 ()

.窗口程序集 自动加编码, , , 

.子程序 _按钮1_被单击, 空白型, , 
.局部变量 文本, 文本型, , , 

打开 (相加 (运行目录, “\date\jbzl_spmc.edb”), “spmc”, , , , , )
打开 (相加 (运行目录, “\date\jbzl_wldw.edb”), “wldw”, , , , , )
打开 (相加 (运行目录, “\date\jbzl_bmzy.edb”), “bmzy”, , , , , )
打开 (相加 (运行目录, “\date\jbzl_xjck.edb”), “xjck”, , , , , )
打开 (相加 (运行目录, “\date\jbzl_fylx.edb”), “fylx”, , , , , )
打开 (相加 (运行目录, “\date\jbzl_qtsr.edb”), “qtsr”, , , , , )
打开 (相加 (运行目录, “\date\jbzl_qtzc.edb”), “qtzc”, , , , , )
打开 (相加 (运行目录, “\date\jbzl_ck.edb”), “ck”, , , , , )
置当前库 (“spmc”)
赋值 (.内容, “正在处理商品名称。。。”)
到首记录 ()
.判断循环首 (取反 (尾记录后 ()))
    赋值 (文本, 读 (6))
    .如果真 (等于 (文本, “”))
        写 (6, 混合取码 (读 (3)))
    .如果真结束
    跳过 ()
.判断循环尾 ()
“商品名称已处理完毕！”.加入项目 ()

置当前库 (“wldw”)
赋值 (.内容, “正在处理往来单位。。。”)
到首记录 ()
.判断循环首 (取反 (尾记录后 ()))
    赋值 (文本, 读 (5))
    .如果真 (等于 (文本, “”))
        写 (5, 混合取码 (读 (3)))
    .如果真结束
    跳过 ()
.判断循环尾 ()
“往来单位已处理完毕！”.加入项目 ()
置当前库 (“bmzy”)
到首记录 ()
赋值 (.内容, “正在处理部门职员。。。”)
.判断循环首 (取反 (尾记录后 ()))
    赋值 (文本, 读 (5))
    .如果真 (等于 (文本, “”))
        写 (5, 混合取码 (读 (3)))
    .如果真结束
    跳过 ()
.判断循环尾 ()
“部门职员已处理完毕！”.加入项目 ()
置当前库 (“ck”)
到首记录 ()
赋值 (.内容, “正在处理仓库名称。。。”)
.判断循环首 (取反 (尾记录后 ()))
    赋值 (文本, 读 (5))
    .如果真 (等于 (文本, “”))
        写 (5, 混合取码 (读 (3)))
    .如果真结束
    跳过 ()
.判断循环尾 ()
“仓库名称已处理完毕！”.加入项目 ()
置当前库 (“qtsr”)
到首记录 ()
赋值 (.内容, “正在处理其它收入。。。”)
.判断循环首 (取反 (尾记录后 ()))
    赋值 (文本, 读 (2))
    .如果真 (等于 (文本, “”))
        写 (1, 混合取码 (读 (2)))
    .如果真结束
    跳过 ()
.判断循环尾 ()
“其它收入已处理完毕！”.加入项目 ()
置当前库 (“qtzc”)
到首记录 ()
赋值 (.内容, “正在处理其它支出。。。”)
.判断循环首 (取反 (尾记录后 ()))
    赋值 (文本, 读 (2))
    .如果真 (等于 (文本, “”))
        写 (1, 混合取码 (读 (2)))
    .如果真结束
    跳过 ()
.判断循环尾 ()
“其它支出已处理完毕！”.加入项目 ()
置当前库 (“fylx”)
到首记录 ()
赋值 (.内容, “正在处理费用类型。。。”)
.判断循环首 (取反 (尾记录后 ()))
    赋值 (文本, 读 (2))
    .如果真 (等于 (文本, “”))
        写 (1, 混合取码 (读 (2)))
    .如果真结束
    跳过 ()
.判断循环尾 ()
“费用类型已处理完毕！”.加入项目 ()

关闭 ()
赋值 (.内容, “成功完成处理。”)

.子程序 _自动加编码_创建完毕, 空白型, , 
全部关闭 ()

.窗口程序集 进销业务分析, , , 

.程序集变量 编码名称, 文本型, , "1,1", 
.程序集变量 上分组框, 分组框, , , 
.程序集变量 当前查询选择, 整数型, , , 
.程序集变量 匿名程序集变量_1781, 空白型, , , 
.子程序 _进销业务分析_创建完毕, 空白型, , 
.局部变量 编码, 文本型, , , 
.局部变量 名称, 文本型, , , 

赋值 (进销业务分析., _启动窗口.)
全部关闭 ()
删除目录 (相加 (运行目录, “\cxk”))
删除目录 (相加 (运行目录, “\lscx”))
创建目录 (相加 (运行目录, “\cxk”))
创建目录 (相加 (运行目录, “\cxk\jepx”))
创建目录 (相加 (运行目录, “\cxk\slpx”))
创建目录 (相加 (运行目录, “\lscx”))
赋值 (进销业务分析., _启动窗口.)
赋值 (进销业务分析., _启动窗口.)
.判断开始 (等于 (当前业务, “销售统计”))
    打开 (相加 (运行目录, “\”, 路径, “\yyjl_xsd.edb”), “xsd”, , , , , )
    3.置文本 (相加 (“  ”, 到文本 (求和 (读 (“数量”), ))))
    5.置文本 (相加 (“  ”, 到文本 (求和 (读 (“折后金额”), ))))
    1.置文本 (相加 (“  ”, 到文本 (四舍五入 (相除 (求和 (读 (“折后金额”), ), 求和 (读 (“数量”), )), 2))))
    关闭 ()
    
    .如果 (等于 (历史查询, 假))
        赋值 (进销业务分析., 相加 (“销售”, 进销业务分析.))
    .否则
        赋值 (进销业务分析., 相加 (历史查询月, “销售”, 进销业务分析.))
        
    .如果结束
    销售初排序 ()
    销售次排序 (“金额”, “jepx”)
    销售次排序 (“数量”, “slpx”)
    
    打开 (相加 (运行目录, “\cxk\xsd_spmc_qh.edb”), , , , , , )
    跳过 ()
    赋值 (.数据库文件名, 相加 (运行目录, “\cxk\xsd_spmc_qh.edb”))
    
.判断 (等于 (当前业务, “进货统计”))
    打开 (相加 (运行目录, “\”, 路径, “\yyjl_jhd.edb”), “jhd”, , , , , )
    3.置文本 (相加 (“  ”, 到文本 (求和 (读 (“数量”), ))))
    5.置文本 (相加 (“  ”, 到文本 (求和 (读 (“金额”), ))))
    1.置文本 (相加 (“  ”, 到文本 (四舍五入 (相除 (求和 (读 (“金额”), ), 求和 (读 (“数量”), )), 2))))
    关闭 ()
    
    .如果 (等于 (历史查询, 假))
        赋值 (进销业务分析., 相加 (“进货”, 进销业务分析.))
        
    .否则
        赋值 (进销业务分析., 相加 (历史查询月, “进货”, 进销业务分析.))
        
    .如果结束
    2.置文本 (“进 货 数 量:”)
    4.置文本 (“进 货 金 额:”)
    赋值 (.标题, “进 货 单 位”)
    赋值 (.标题, “收 货 仓 库”)
    赋值 (.标题, “进 货 日 期”)
    进货初排序 ()
    进货次排序 (“金额”, “jepx”)
    进货次排序 (“数量”, “slpx”)
    赋值 (.数据库文件名, 相加 (运行目录, “\cxk\”, “jhd_spmc_qh.edb”))
    打开 (相加 (运行目录, “\cxk\jhd_spmc_qh.edb”), , , , , , )
    跳过 ()
    
.默认
    
    
.判断结束

.如果真 (等于 (1.取文本 (1), “”))
    1.删除行 (1)
.如果真结束
刷新 ()



.子程序 销售初排序, 空白型, , 
.局部变量 字段顺序, 文本型, , "1", 
.局部变量 排序关键字, 文本型, , "2", 
.局部变量 字段条件, 文本型, , , 

打开 (相加 (运行目录, “\”, 路径, “\yyjl_xsd.edb”), “xsd”, , , , , )
重定义数组 (字段顺序, 假, 6)
赋值 (字段顺序 [1], “商品代码”)
赋值 (字段顺序 [2], “商品全称”)
赋值 (字段顺序 [3], “”)
赋值 (字段顺序 [4], “数量”)
赋值 (字段顺序 [5], “金额”)
赋值 (字段顺序 [6], “折后金额”)
分类计算 (相加 (运行目录, “\cxk\xsd_spmc_qh.edb”), “商品全称”, #求和, , 字段顺序)

重定义数组 (字段顺序, 假, 7)
赋值 (字段顺序 [1], “经手人”)
赋值 (字段顺序 [2], “”)
赋值 (字段顺序 [3], “”)
赋值 (字段顺序 [4], “”)
赋值 (字段顺序 [5], “数量”)
赋值 (字段顺序 [6], “金额”)
赋值 (字段顺序 [7], “折后金额”)
分类计算 (相加 (运行目录, “\cxk\xsd_jsr_qh.edb”), “经手人”, #求和, , 字段顺序)

重定义数组 (字段顺序, 假, 7)
赋值 (字段顺序 [1], “购买单位”)
赋值 (字段顺序 [2], “”)
赋值 (字段顺序 [3], “”)
赋值 (字段顺序 [4], “”)
赋值 (字段顺序 [5], “数量”)
赋值 (字段顺序 [6], “金额”)
赋值 (字段顺序 [7], “折后金额”)
分类计算 (相加 (运行目录, “\cxk\xsd_gmdw_qh.edb”), “购买单位”, #求和, , 字段顺序)

重定义数组 (字段顺序, 假, 9)
赋值 (字段顺序 [1], “单据编号”)
赋值 (字段顺序 [2], “数量”)
赋值 (字段顺序 [3], “金额”)
赋值 (字段顺序 [4], “折后金额”)
赋值 (字段顺序 [5], “销售日期”)
赋值 (字段顺序 [6], “购买单位”)
赋值 (字段顺序 [7], “经手人”)
赋值 (字段顺序 [8], “发货仓库”)
赋值 (字段顺序 [9], “收款帐户”)
分类计算 (相加 (运行目录, “\cxk\xsd_djbh_qh.edb”), “单据编号”, #求和, , 字段顺序)

重定义数组 (字段顺序, 假, 7)
赋值 (字段顺序 [1], “销售日期”)
赋值 (字段顺序 [2], “”)
赋值 (字段顺序 [3], “”)
赋值 (字段顺序 [4], “”)
赋值 (字段顺序 [5], “数量”)
赋值 (字段顺序 [6], “金额”)
赋值 (字段顺序 [7], “折后金额”)
分类计算 (相加 (运行目录, “\cxk\xsd_xsrq_qh.edb”), “销售日期”, #求和, , 字段顺序)

重定义数组 (字段顺序, 假, 7)
赋值 (字段顺序 [1], “发货仓库”)
赋值 (字段顺序 [2], “”)
赋值 (字段顺序 [3], “”)
赋值 (字段顺序 [4], “”)
赋值 (字段顺序 [5], “数量”)
赋值 (字段顺序 [6], “金额”)
赋值 (字段顺序 [7], “折后金额”)
分类计算 (相加 (运行目录, “\cxk\xsd_fhck_qh.edb”), “发货仓库”, #求和, , 字段顺序)

.子程序 进货初排序, 空白型, , 
.局部变量 字段顺序, 文本型, , "1", 
.局部变量 排序关键字, 文本型, , "2", 
.局部变量 字段条件, 文本型, , , 

打开 (相加 (运行目录, “\”, 路径, “\yyjl_jhd.edb”), “jhd”, , , , , )

重定义数组 (字段顺序, 假, 5)
赋值 (字段顺序 [1], “商品代码”)
赋值 (字段顺序 [2], “商品全称”)
赋值 (字段顺序 [3], “”)
赋值 (字段顺序 [4], “数量”)
赋值 (字段顺序 [5], “金额”)

分类计算 (相加 (运行目录, “\cxk\jhd_spmc_qh.edb”), “商品全称”, #求和, , 字段顺序)

重定义数组 (字段顺序, 假, 6)
赋值 (字段顺序 [1], “经手人”)
赋值 (字段顺序 [2], “”)
赋值 (字段顺序 [3], “”)
赋值 (字段顺序 [4], “”)
赋值 (字段顺序 [5], “数量”)
赋值 (字段顺序 [6], “金额”)
分类计算 (相加 (运行目录, “\cxk\jhd_jsr_qh.edb”), “经手人”, #求和, , 字段顺序)

重定义数组 (字段顺序, 假, 6)
赋值 (字段顺序 [1], “进货单位”)
赋值 (字段顺序 [2], “”)
赋值 (字段顺序 [3], “”)
赋值 (字段顺序 [4], “”)
赋值 (字段顺序 [5], “数量”)
赋值 (字段顺序 [6], “金额”)
分类计算 (相加 (运行目录, “\cxk\jhd_gmdw_qh.edb”), “进货单位”, #求和, , 字段顺序)

重定义数组 (字段顺序, 假, 9)
赋值 (字段顺序 [1], “单据编号”)
赋值 (字段顺序 [2], “数量”)
赋值 (字段顺序 [3], “金额”)
赋值 (字段顺序 [4], “折后金额”)
赋值 (字段顺序 [5], “进货日期”)
赋值 (字段顺序 [6], “进货单位”)
赋值 (字段顺序 [7], “经手人”)
赋值 (字段顺序 [8], “收货仓库”)
赋值 (字段顺序 [9], “付款帐户”)
分类计算 (相加 (运行目录, “\cxk\jhd_djbh_qh.edb”), “单据编号”, #求和, , 字段顺序)

重定义数组 (字段顺序, 假, 6)
赋值 (字段顺序 [1], “进货日期”)
赋值 (字段顺序 [2], “”)
赋值 (字段顺序 [3], “”)
赋值 (字段顺序 [4], “”)
赋值 (字段顺序 [5], “数量”)
赋值 (字段顺序 [6], “金额”)
分类计算 (相加 (运行目录, “\cxk\jhd_jhrq_qh.edb”), “进货日期”, #求和, , 字段顺序)

重定义数组 (字段顺序, 假, 7)
赋值 (字段顺序 [1], “收货仓库”)
赋值 (字段顺序 [2], “”)
赋值 (字段顺序 [3], “”)
赋值 (字段顺序 [4], “”)
赋值 (字段顺序 [5], “数量”)
赋值 (字段顺序 [6], “金额”)
赋值 (字段顺序 [7], “折后金额”)
分类计算 (相加 (运行目录, “\cxk\jhd_shck_qh.edb”), “收货仓库”, #求和, , 字段顺序)


.子程序 进货次排序, 空白型, , 
.参数 排序关键字, 文本型, , 
.参数 路径, 文本型, , 

打开 (相加 (运行目录, “\cxk\jhd_spmc_qh.edb”), , , , , , )
排序 (相加 (运行目录, “\cxk\”, 路径, “\jhd_spmc_qh.edb”), 排序关键字, , , )
排序 (相加 (运行目录, “\cxk\”, 路径, “\1jhd_spmc_qh.edb”), 排序关键字, 假, , )
关闭 ()
打开 (相加 (运行目录, “\cxk\jhd_jsr_qh.edb”), , , , , , )
排序 (相加 (运行目录, “\cxk\”, 路径, “\jhd_jsr_qh.edb”), 排序关键字, , , )
排序 (相加 (运行目录, “\cxk\”, 路径, “\1jhd_jsr_qh.edb”), 排序关键字, 假, , )
关闭 ()
打开 (相加 (运行目录, “\cxk\jhd_gmdw_qh.edb”), , , , , , )
排序 (相加 (运行目录, “\cxk\”, 路径, “\jhd_gmdw_qh.edb”), 排序关键字, , , )
排序 (相加 (运行目录, “\cxk\”, 路径, “\1jhd_gmdw_qh.edb”), 排序关键字, 假, , )
关闭 ()
打开 (相加 (运行目录, “\cxk\jhd_djbh_qh.edb”), , , , , , )
排序 (相加 (运行目录, “\cxk\”, 路径, “\jhd_djbh_qh.edb”), 排序关键字, , , )
排序 (相加 (运行目录, “\cxk\”, 路径, “\1jhd_djbh_qh.edb”), 排序关键字, 假, , )
关闭 ()
打开 (相加 (运行目录, “\cxk\jhd_jhrq_qh.edb”), , , , , , )
排序 (相加 (运行目录, “\cxk\”, 路径, “\jhd_jhrq_qh.edb”), 排序关键字, , , )
排序 (相加 (运行目录, “\cxk\”, 路径, “\1jhd_jhrq_qh.edb”), 排序关键字, 假, , )
关闭 ()
打开 (相加 (运行目录, “\cxk\jhd_shck_qh.edb”), , , , , , )
排序 (相加 (运行目录, “\cxk\”, 路径, “\jhd_shck_qh.edb”), 排序关键字, , , )
排序 (相加 (运行目录, “\cxk\”, 路径, “\1jhd_shck_qh.edb”), 排序关键字, 假, , )
关闭 ()


.子程序 销售次排序, 空白型, , 
.参数 排序关键字, 文本型, , 
.参数 路径, 文本型, , 

打开 (相加 (运行目录, “\cxk\xsd_spmc_qh.edb”), , , , , , )
排序 (相加 (运行目录, “\cxk\”, 路径, “\xsd_spmc_qh.edb”), 排序关键字, , , )
排序 (相加 (运行目录, “\cxk\”, 路径, “\1xsd_spmc_qh.edb”), 排序关键字, 假, , )
关闭 ()
打开 (相加 (运行目录, “\cxk\xsd_jsr_qh.edb”), , , , , , )
排序 (相加 (运行目录, “\cxk\”, 路径, “\xsd_jsr_qh.edb”), 排序关键字, , , )
排序 (相加 (运行目录, “\cxk\”, 路径, “\1xsd_jsr_qh.edb”), 排序关键字, 假, , )
关闭 ()
打开 (相加 (运行目录, “\cxk\xsd_gmdw_qh.edb”), , , , , , )
排序 (相加 (运行目录, “\cxk\”, 路径, “\xsd_gmdw_qh.edb”), 排序关键字, , , )
排序 (相加 (运行目录, “\cxk\”, 路径, “\1xsd_gmdw_qh.edb”), 排序关键字, 假, , )
关闭 ()
打开 (相加 (运行目录, “\cxk\xsd_djbh_qh.edb”), , , , , , )
排序 (相加 (运行目录, “\cxk\”, 路径, “\xsd_djbh_qh.edb”), 排序关键字, , , )
排序 (相加 (运行目录, “\cxk\”, 路径, “\1xsd_djbh_qh.edb”), 排序关键字, 假, , )
关闭 ()
打开 (相加 (运行目录, “\cxk\xsd_xsrq_qh.edb”), , , , , , )
排序 (相加 (运行目录, “\cxk\”, 路径, “\xsd_xsrq_qh.edb”), 排序关键字, , , )
排序 (相加 (运行目录, “\cxk\”, 路径, “\1xsd_xsrq_qh.edb”), 排序关键字, 假, , )
关闭 ()
打开 (相加 (运行目录, “\cxk\xsd_fhck_qh.edb”), , , , , , )
排序 (相加 (运行目录, “\cxk\”, 路径, “\xsd_fhck_qh.edb”), 排序关键字, , , )
排序 (相加 (运行目录, “\cxk\”, 路径, “\1xsd_fhck_qh.edb”), 排序关键字, 假, , )
关闭 ()


.子程序 查询, 空白型, , 
.判断开始 (等于 (当前业务, “销售统计”))
    .判断开始 (等于 (.选中, 真))
        销售查询 (“jepx”)
    .判断 (等于 (.选中, 真))
        销售查询 (“slpx”)
    .默认
        销售查询 ()
    .判断结束
    
.判断 (等于 (当前业务, “进货统计”))
    .判断开始 (等于 (.选中, 真))
        进货查询 (“jepx”)
    .判断 (等于 (.选中, 真))
        进货查询 (“slpx”)
    .默认
        进货查询 ()
    .判断结束
    
.默认
    
.判断结束
赋值 (.选中, 假)
赋值 (.选中, 假)
.如果真 (等于 (1.取文本 (1), “”))
    1.删除行 (1)
.如果真结束
刷新 ()
刷新显示 ()


.子程序 销售查询, 空白型, , 
.参数 路径, 文本型, 可空, 

.局部变量 初级, 文本型, , , 
.局部变量 次级, 文本型, , , 
.局部变量 数量, 双精度小数型, , , 
.局部变量 金额, 双精度小数型, , , 


.如果 (不等于 (路径, “”))
    .判断开始 (等于 (.选中, 真))
        赋值 (次级, 相加 (运行目录, “\cxk\”, 路径, “\xsd_spmc_qh.edb”))
    .判断 (等于 (.选中, 真))
        赋值 (次级, 相加 (运行目录, “\cxk\”, 路径, “\xsd_jsr_qh.edb”))
    .判断 (等于 (.选中, 真))
        赋值 (次级, 相加 (运行目录, “\cxk\”, 路径, “\xsd_djbh_qh.edb”))
    .判断 (等于 (.选中, 真))
        赋值 (次级, 相加 (运行目录, “\cxk\”, 路径, “\xsd_xsrq_qh.edb”))
    .判断 (等于 (.选中, 真))
        赋值 (次级, 相加 (运行目录, “\cxk\”, 路径, “\xsd_fhck_qh.edb”))
    .判断 (等于 (.选中, 真))
        赋值 (次级, 相加 (运行目录, “\cxk\”, 路径, “\xsd_gmdw_qh.edb”))
    .默认
        
    .判断结束
    赋值 (.数据库文件名, 次级)
    打开 (次级, , , , , , )
    赋值 (数量, 求和 (读 (“数量”), ))
    3.置文本 (相加 (“  ”, 到文本 (数量)))
    赋值 (金额, 求和 (读 (“金额”), ))
    5.置文本 (相加 (“  ”, 到文本 (四舍五入 (金额, 2))))
    1.置文本 (相加 (“  ”, 到文本 (四舍五入 (相除 (金额, 数量), 2))))
    关闭 ()
.否则
    .判断开始 (等于 (.选中, 真))
        赋值 (初级, 相加 (运行目录, “\cxk\”, “xsd_spmc_qh.edb”))
    .判断 (等于 (.选中, 真))
        赋值 (初级, 相加 (运行目录, “\cxk\”, “xsd_jsr_qh.edb”))
    .判断 (等于 (.选中, 真))
        赋值 (初级, 相加 (运行目录, “\cxk\”, “xsd_djbh_qh.edb”))
    .判断 (等于 (.选中, 真))
        赋值 (初级, 相加 (运行目录, “\cxk\”, “xsd_xsrq_qh.edb”))
    .判断 (等于 (.选中, 真))
        赋值 (初级, 相加 (运行目录, “\cxk\”, “xsd_fhck_qh.edb”))
    .判断 (等于 (.选中, 真))
        赋值 (初级, 相加 (运行目录, “\cxk\”, “xsd_gmdw_qh.edb”))
    .默认
        
    .判断结束
    赋值 (.数据库文件名, 初级)
    打开 (初级, , , , , , )
    赋值 (数量, 求和 (读 (“数量”), ))
    3.置文本 (相加 (“  ”, 到文本 (数量)))
    赋值 (金额, 求和 (读 (“金额”), ))
    5.置文本 (相加 (“  ”, 到文本 (四舍五入 (金额, 2))))
    1.置文本 (相加 (“  ”, 到文本 (四舍五入 (相除 (金额, 数量), 2))))
    关闭 ()
    
.如果结束



.子程序 进货查询, 空白型, , 
.参数 路径, 文本型, 可空, 

.局部变量 初级, 文本型, , , 
.局部变量 次级, 文本型, , , 
.局部变量 数量, 双精度小数型, , , 
.局部变量 金额, 双精度小数型, , , 


.如果 (不等于 (路径, “”))
    .判断开始 (等于 (.选中, 真))
        赋值 (次级, 相加 (运行目录, “\cxk\”, 路径, “\jhd_spmc_qh.edb”))
    .判断 (等于 (.选中, 真))
        赋值 (次级, 相加 (运行目录, “\cxk\”, 路径, “\jhd_jsr_qh.edb”))
    .判断 (等于 (.选中, 真))
        赋值 (次级, 相加 (运行目录, “\cxk\”, 路径, “\jhd_djbh_qh.edb”))
    .判断 (等于 (.选中, 真))
        赋值 (次级, 相加 (运行目录, “\cxk\”, 路径, “\jhd_jhrq_qh.edb”))
    .判断 (等于 (.选中, 真))
        赋值 (次级, 相加 (运行目录, “\cxk\”, 路径, “\jhd_shck_qh.edb”))
    .判断 (等于 (.选中, 真))
        赋值 (次级, 相加 (运行目录, “\cxk\”, 路径, “\jhd_gmdw_qh.edb”))
    .默认
        
    .判断结束
    赋值 (.数据库文件名, 次级)
    打开 (次级, , , , , , )
    赋值 (数量, 求和 (读 (“数量”), ))
    3.置文本 (相加 (“  ”, 到文本 (数量)))
    赋值 (金额, 求和 (读 (“金额”), ))
    5.置文本 (相加 (“  ”, 到文本 (四舍五入 (金额, 2))))
    1.置文本 (相加 (“  ”, 到文本 (四舍五入 (相除 (金额, 数量), 2))))
    关闭 ()
.否则
    .判断开始 (等于 (.选中, 真))
        赋值 (初级, 相加 (运行目录, “\cxk\”, “jhd_spmc_qh.edb”))
    .判断 (等于 (.选中, 真))
        赋值 (初级, 相加 (运行目录, “\cxk\”, “jhd_jsr_qh.edb”))
    .判断 (等于 (.选中, 真))
        赋值 (初级, 相加 (运行目录, “\cxk\”, “jhd_djbh_qh.edb”))
    .判断 (等于 (.选中, 真))
        赋值 (初级, 相加 (运行目录, “\cxk\”, “jhd_jhrq_qh.edb”))
    .判断 (等于 (.选中, 真))
        赋值 (初级, 相加 (运行目录, “\cxk\”, “jhd_shck_qh.edb”))
    .判断 (等于 (.选中, 真))
        赋值 (初级, 相加 (运行目录, “\cxk\”, “jhd_gmdw_qh.edb”))
    .默认
        
    .判断结束
    赋值 (.数据库文件名, 初级)
    打开 (初级, , , , , , )
    赋值 (数量, 求和 (读 (“数量”), ))
    3.置文本 (相加 (“  ”, 到文本 (数量)))
    赋值 (金额, 求和 (读 (“金额”), ))
    5.置文本 (相加 (“  ”, 到文本 (四舍五入 (金额, 2))))
    1.置文本 (相加 (“  ”, 到文本 (四舍五入 (相除 (金额, 数量), 2))))
    
    关闭 ()
.如果结束


.子程序 _横向滚动条1_位置被改变, 空白型, , 
表格缩放 (.位置)

.子程序 _详单查询按钮_被单击, 空白型, , 
.局部变量 字段, 文本型, , "0", 
.局部变量 临时查询库, 文本型, , , 

查询 ()



.子程序 _打印按钮_被单击, 空白型, , 
打印预览 ()


.子程序 _进销业务分析_将被销毁, 空白型, , 
赋值 (路径, “date”)
赋值 (历史查询, 假)


.子程序 _退出按钮_被单击, 空白型, , 
销毁 ()

.窗口程序集 单据审核, , , 

.程序集变量 完整行, 整数型, , "0", 
.程序集变量 不完整数据, 逻辑型, , "0", 
.程序集变量 当前状态, 逻辑型, , , 
.子程序 _单据审核_创建完毕, 空白型, , 
赋值 (单据审核., _启动窗口.)
全部关闭 ()
赋值 (.数据库文件名, “”)
赋值 (.数据库文件名, 相加 (运行目录, “\date\yyjl_djsh.edb”))
1.置光标 (3)
到首记录 ()


.子程序 _工具条1_被单击, 空白型, , 
.参数 按钮索引, 整数型, , 

.判断开始 (等于 (按钮索引, 0))
    
.判断 (等于 (按钮索引, 2))
    
.判断 (等于 (按钮索引, 4))
    
.判断 (等于 (按钮索引, 11))
    
.判断 (等于 (按钮索引, 12))
    销毁 ()
.默认
    
.判断结束


.子程序 _单据审核_将被销毁, 空白型, , 
赋值 (单据类型, “”)

.子程序 _横向滚动条1_位置被改变, 空白型, , 
表格缩放 (.位置)

.子程序 _退出_被单击, 空白型, , 
.局部变量 返回值, 整数型, , , 

.如果真 (不等于 (取行数 (), 0))
    
    
    赋值 (返回值, 信息框 (“确定此次审核，选[确定]后不可反回。”, 相加 (#是否钮, #询问图标), “审核提示信息”))
    .如果 (等于 (返回值, 6))
        
    .否则
        审核过帐 ()
        置当前库 (“djsh”)
        删除 (等于 (读 (“审核”), 真))
        彻底删除 ()
        
    .如果结束
    
.如果真结束
销毁 ()

.子程序 _到第一行_被单击, 空白型, , 
到首记录 ()
检测行变 ()

.子程序 审核过帐, 空白型, , 
.参数 自动审核, 逻辑型, 可空, 

.局部变量 循环变量, 整数型, , , 
.局部变量 循环变量1, 整数型, , , 
.局部变量 销售已审核, 文本型, , "0", 
.局部变量 进货已审核, 文本型, , "0", 
.局部变量 销售退货已审核, 文本型, , "0", 
.局部变量 进货退货已审核, 文本型, , "0", 
.局部变量 收款已审核, 文本型, , "0", 
.局部变量 付款已审核, 文本型, , "0", 
.局部变量 费用已审核, 文本型, , "0", 
.局部变量 销售数量变量, 双精度小数型, , , 
.局部变量 进货数量变量, 双精度小数型, , , 

全部关闭 ()
.如果真 (取反 (置当前库 (“djsh”)))
    打开 (相加 (运行目录, “\date\yyjl_djsh.edb”), “djsh”, , , , , )
.如果真结束
.如果真 (等于 (自动审核, 真))
    替换 (真, “审核”, 真)
.如果真结束
到首记录 ()
.判断循环首 (取反 (尾记录后 ()))
    .如果真 (等于 (读 (“审核”), 真))
        .如果真 (等于 (读 (“单据类型”), “销售单”))
            加入成员 (销售已审核, 读 (“单据编号”))
        .如果真结束
        .如果真 (等于 (读 (“单据类型”), “进货单”))
            加入成员 (进货已审核, 读 (“单据编号”))
        .如果真结束
        .如果真 (等于 (读 (“单据类型”), “销售退货单”))
            加入成员 (销售退货已审核, 读 (“单据编号”))
        .如果真结束
        .如果真 (等于 (读 (“单据类型”), “进货退货单”))
            加入成员 (进货退货已审核, 读 (“单据编号”))
        .如果真结束
        .如果真 (等于 (读 (“单据类型”), “收款单”))
            加入成员 (收款已审核, 读 (“单据编号”))
        .如果真结束
        .如果真 (等于 (读 (“单据类型”), “付款单”))
            加入成员 (付款已审核, 读 (“单据编号”))
        .如果真结束
        .如果真 (等于 (读 (“单据类型”), “费用单”))
            加入成员 (费用已审核, 读 (“单据编号”))
        .如果真结束
        
    .如果真结束
    跳过 ()
.判断循环尾 ()

打开 (相加 (运行目录, “\date\yyjl_jylc.edb”), “jylc”, , , , , )
添加 (“djsh”, 等于 (读 (“审核”), 真), )
关闭 (“jylc”)
打开 (相加 (运行目录, “\date\yyjl_wldzysk.edb”), “wldzysk”, , , , , )
打开 (相加 (运行目录, “\date\yyjl_kc.edb”), “kcsp”, , , , , )
打开 (相加 (运行目录, “\date\yyjl_ysyf.edb”), “ysyf”, , , , , )
打开 (相加 (运行目录, “\date\jbzl_xjck.edb”), “xjck”, , , , , )
打开 (相加 (运行目录, “\date\yyjl_xsd.edb”), “xsd”, , , , , )
打开 (相加 (运行目录, “\date\yyjl_xsd_ls.edb”), “lsxsd”, , , , , )
打开 (相加 (运行目录, “\date\yyjl_jhfhd_ls.edb”), “lsjhfhd”, , , , , )
打开 (相加 (运行目录, “\date\yyjl_jhfhd.edb”), “jhfhd”, , , , , )

置当前库 (“lsjhfhd”)
到首记录 ()
.计次循环首 (取数组成员数 (进货退货已审核), 循环变量)
    置当前库 (“lsjhfhd”)
    到首记录 ()
    .判断循环首 (查找 (等于 (读 (“单据编号”), 进货退货已审核 [循环变量]))) ' 把库存商品更新
        置当前库 (“kcsp”)
        到首记录 ()
        .如果 (查找 (并且 (等于 (读 (“仓库名称”), 读字段 (“发货仓库”, “lsjhfhd”)), 等于 (读 (“商品全称”), 读字段 (“商品全称”, “lsjhfhd”)))))
            修改 (相加 (读 (“销售数量”), 读字段 (“数量”, “lsjhfhd”)), 相减 (读 (“结存数量”), 读字段 (“数量”, “lsjhfhd”)), , , )
            修改 (相乘 (读 (“单价”), 读 (“结存数量”)), , )
        .否则
            
            
        .如果结束
        置当前库 (“lsjhfhd”)
        写 (“审核”, 真)
        跳过 ()
    .判断循环尾 ()
    置当前库 (“djsh”)
    到首记录 ()
    查找 (等于 (读 (“单据编号”), 进货退货已审核 [循环变量]))
    置当前库 (“xjck”) ' 对现金进行更新
    替换 (等于 (读 (“全名”), 读字段 (“收付款帐户”, “djsh”)), “收入金额”, 相加 (读 (“收入金额”), 读字段 (“实收付金额”, “djsh”)))
    替换 (等于 (读 (“全名”), 读字段 (“收付款帐户”, “djsh”)), “结存金额”, 相加 (读 (“结存金额”), 读字段 (“实收付金额”, “djsh”)))
    
.计次循环尾 ()
置当前库 (“jhfhd”)
添加 (“lsjhfhd”, 等于 (读 (“审核”), 真), )

置当前库 (“lsjhfhd”)
删除 (等于 (读 (“审核”), 真))
彻底删除 ()

.计次循环首 (取数组成员数 (销售已审核), 循环变量)
    置当前库 (“lsxsd”)
    
    到首记录 ()
    .判断循环首 (查找 (等于 (读 (“单据编号”), 销售已审核 [循环变量]))) ' 当前记录在审核过的记录上，所有的更新都在单据编号上进行
        写 (“审核”, 真)
        置当前库 (“kcsp”)
        到首记录 ()
        .如果 (查找 (并且 (等于 (读 (“商品全称”), 读字段 (“商品全称”, “lsxsd”)), 等于 (读 (“仓库名称”), 读字段 (“发货仓库”, “lsxsd”)))))
            修改 (相加 (读 (“销售数量”), 读字段 (“数量”, “lsxsd”)), 相减 (读 (“结存数量”), 读字段 (“数量”, “lsxsd”)), , , )
            修改 (相乘 (读 (“结存数量”), 读 (“单价”)), , )
        .否则
            
            加记录 (读字段 (“商品代码”, “lsxsd”), 读字段 (“商品全称”, “lsxsd”), 读字段 (“单位”, “lsxsd”), 读字段 (“型号”, “lsxsd”), 读字段 (“规格”, “lsxsd”), 读字段 (“产地”, “lsxsd”), 读字段 (“单价”, “lsxsd”), , 读字段 (“数量”, “lsxsd”), 负 (读字段 (“数量”, “lsxsd”)), 读字段 (“金额”, “lsxsd”), 读字段 (“备注”, “lsxsd”), 读字段 (“发货仓库”, “lsxsd”))
        .如果结束
        置当前库 (“lsxsd”)
        删除 () ' 把加到销售库存的记录删除
        
        跳过 ()
    .判断循环尾 ()
    .如果 (置当前库 (“djsh”))
        
    .否则
        打开 (相加 (运行目录, “\date\yyjl_djsh.edb”), “djsh”, , , , , )
        
    .如果结束
    到首记录 ()
    .如果真 (查找 (等于 (读 (“单据编号”), 销售已审核 [循环变量])))
        删除 ()
    .如果真结束
    .如果 (等于 (读 (“收付款帐户”), “应收帐款”))
        
        置当前库 (“wldzysk”) ' 如有应收帐款则对往来对帐进行更新
        
        加记录 (读字段 (“日期”, “djsh”), 读字段 (“单据编号”, “djsh”), 读字段 (“往来单位”, “djsh”), 读字段 (“摘要”, “djsh”), , 读字段 (“收付款帐户”, “djsh”), 读字段 (“应收付金额”, “djsh”), , 相加 (读 (“应收余额”), 读字段 (“应收付金额”, “djsh”)), )
        置当前库 (“ysyf”) ' 如有应收帐款则对应收帐款进行更新
        到首记录 ()
        .如果 (查找 (等于 (读 (“往来单位”), 读字段 (“往来单位”, “djsh”))))
            替换 (等于 (读 (“往来单位”), 读字段 (“往来单位”, “djsh”)), “应收帐款”, 相加 (读 (“应收帐款”), 读字段 (“应收付金额”, “djsh”)))
        .否则
            加记录 (读字段 (“往来单位”, “djsh”), 读字段 (“应收付金额”, “djsh”), )
            
        .如果结束
        置当前库 (“xjck”) ' 对现金进行更新
        替换 (等于 (读 (“全名”), 读字段 (“收付款帐户”, “djsh”)), “收入金额”, 相加 (读 (“收入金额”), 读字段 (“实收付金额”, “djsh”)))
        替换 (等于 (读 (“全名”), 读字段 (“收付款帐户”, “djsh”)), “结存金额”, 相减 (读 (“收入金额”), 读 (“支出金额”)))
    .否则
        置当前库 (“xjck”) ' 对现金进行更新
        替换 (等于 (读 (“全名”), 读字段 (“收付款帐户”, “djsh”)), “收入金额”, 相加 (读 (“收入金额”), 读字段 (“实收付金额”, “djsh”)))
        替换 (等于 (读 (“全名”), 读字段 (“收付款帐户”, “djsh”)), “结存金额”, 相减 (读 (“收入金额”), 读 (“支出金额”)))
        
    .如果结束
    
    置当前库 (“djsh”)
    到首记录 ()
.计次循环尾 ()
置当前库 (“xsd”)
添加 (“lsxsd”, 等于 (读 (“审核”), 真), )
置当前库 (“lsxsd”)
彻底删除 ()

打开 (相加 (运行目录, “\date\yyjl_jhd.edb”), “jhd”, , , , , )
打开 (相加 (运行目录, “\date\yyjl_jhd_ls.edb”), “lsjhd”, , , , , )
打开 (相加 (运行目录, “\date\yyjl_wldzyfk.edb”), “wldzyfk”, , , , , )
打开 (相加 (运行目录, “\date\yyjl_xsfhd_ls.edb”), “lsxsfhd”, , , , , )
打开 (相加 (运行目录, “\date\yyjl_xsfhd.edb”), “xsfhd”, , , , , )

.计次循环首 (取数组成员数 (销售退货已审核), 循环变量)
    置当前库 (“lsxsfhd”)
    到首记录 ()
    .判断循环首 (查找 (等于 (读 (“单据编号”), 销售退货已审核 [循环变量]))) ' 把库存商品更新
        置当前库 (“kcsp”)
        到首记录 ()
        .如果 (查找 (并且 (等于 (读 (“仓库名称”), 读字段 (“收货仓库”, “lsxsfhd”)), 等于 (读 (“商品全称”), 读字段 (“商品全称”, “lsxsfhd”)))))
            修改 (相加 (读 (“进货数量”), 读字段 (“数量”, “lsxsfhd”)), , 相加 (读 (“结存数量”), 读字段 (“数量”, “lsxsfhd”)), , , )
            修改 (相乘 (读 (“单价”), 读 (“结存数量”)), , )
        .否则
            
        .如果结束
        置当前库 (“lsxsfhd”)
        写 (“审核”, 真)
        跳过 ()
    .判断循环尾 ()
    置当前库 (“djsh”)
    到首记录 ()
    查找 (等于 (读 (“单据编号”), 销售退货已审核 [循环变量]))
    置当前库 (“xjck”) ' 对现金进行更新
    替换 (等于 (读 (“全名”), 读字段 (“收付款帐户”, “djsh”)), “支出金额”, 相加 (读 (“支出金额”), 读字段 (“实收付金额”, “djsh”)))
    替换 (等于 (读 (“全名”), 读字段 (“收付款帐户”, “djsh”)), “结存金额”, 相减 (读 (“结存金额”), 读字段 (“实收付金额”, “djsh”)))
.计次循环尾 ()
置当前库 (“xsfhd”)
添加 (“lsxsfhd”, 等于 (读 (“审核”), 真), )
置当前库 (“lsxsfhd”)
删除 (等于 (读 (“审核”), 真))
彻底删除 ()

.计次循环首 (取数组成员数 (进货已审核), 循环变量)
    置当前库 (“lsjhd”)
    到首记录 ()
    .判断循环首 (查找 (等于 (读 (“单据编号”), 进货已审核 [循环变量]))) ' 当前记录在审核过的记录上，所有的更新都在单据编号上进行
        写 (“审核”, 真)
        置当前库 (“kcsp”)
        到首记录 ()
        .如果 (查找 (并且 (等于 (读 (“仓库名称”), 读字段 (“收货仓库”, “lsjhd”)), 等于 (读 (“商品全称”), 读字段 (“商品全称”, “lsjhd”)))))
            修改 (相加 (读 (“进货数量”), 读字段 (“数量”, “lsjhd”)), 读 (“销售数量”), 相加 (读 (“结存数量”), 读字段 (“数量”, “lsjhd”)), 相加 (读 (“金额”), 读字段 (“金额”, “lsjhd”)), , )
            修改 (到数值 (四舍五入 (相除 (读 (“金额”), 读 (“结存数量”)), 2)), , , , , , )
        .否则
            
            加记录 (读字段 (“商品代码”, “lsjhd”), 读字段 (“商品全称”, “lsjhd”), 读字段 (“单位”, “lsjhd”), 读字段 (“型号”, “lsjhd”), 读字段 (“规格”, “lsjhd”), 读字段 (“产地”, “lsjhd”), 读字段 (“单价”, “lsjhd”), 读字段 (“数量”, “lsjhd”), , 读字段 (“数量”, “lsjhd”), 读字段 (“金额”, “lsjhd”), 读字段 (“备注”, “lsjhd”), 读字段 (“收货仓库”, “lsjhd”))
            
        .如果结束
        置当前库 (“lsjhd”)
         ' 删除 ()  ' 把加到销售库存的记录删除
        
        跳过 ()
    .判断循环尾 ()
    置当前库 (“djsh”)
    到首记录 ()
    .如果真 (查找 (等于 (读 (“单据编号”), 进货已审核 [循环变量])))
        删除 ()
    .如果真结束
    
    .如果 (等于 (读 (“收付款帐户”), “应付帐款”))
        置当前库 (“ysyf”) ' 如有应收帐款则对应收帐款进行更新
        到首记录 ()
        .如果 (查找 (等于 (读 (“往来单位”), 读字段 (“往来单位”, “djsh”))))
            替换 (等于 (读 (“往来单位”), 读字段 (“往来单位”, “djsh”)), “应付帐款”, 相加 (读 (“应付帐款”), 读字段 (“应收付金额”, “djsh”)))
        .否则
            加记录 (读字段 (“往来单位”, “djsh”), , 读字段 (“应收付金额”, “djsh”))
        .如果结束
        
        置当前库 (“wldzyfk”) ' 如有应收帐款则对往来对帐进行更新
        加记录 (读字段 (“日期”, “djsh”), 读字段 (“单据编号”, “djsh”), 读字段 (“往来单位”, “djsh”), 读字段 (“摘要”, “djsh”), , 读字段 (“收付款帐户”, “djsh”), 读字段 (“应收付金额”, “djsh”), , 读字段 (“应付帐款”, “ysyf”), )
        
        置当前库 (“xjck”) ' 对现金进行更新
        替换 (等于 (读 (“全名”), 读字段 (“收付款帐户”, “djsh”)), “支出金额”, 相加 (读 (“支出金额”), 读字段 (“实收付金额”, “djsh”)))
        替换 (等于 (读 (“全名”), 读字段 (“收付款帐户”, “djsh”)), “结存金额”, 相减 (读 (“收入金额”), 读 (“支出金额”)))
    .否则
        置当前库 (“xjck”) ' 对现金进行更新
        替换 (等于 (读 (“全名”), 读字段 (“收付款帐户”, “djsh”)), “支出金额”, 相加 (读 (“支出金额”), 读字段 (“实收付金额”, “djsh”)))
        替换 (等于 (读 (“全名”), 读字段 (“收付款帐户”, “djsh”)), “结存金额”, 相减 (读 (“收入金额”), 读 (“支出金额”)))
        
    .如果结束
    
    置当前库 (“djsh”)
    到首记录 ()
.计次循环尾 ()
置当前库 (“jhd”)
添加 (“lsjhd”, 等于 (读 (“审核”), 真), )
置当前库 (“lsjhd”)
删除 (等于 (读 (“审核”), 真))
彻底删除 ()

打开 (相加 (运行目录, “\date\yyjl_skd_ls.edb”), “lsskd”, , , , , )
打开 (相加 (运行目录, “\date\yyjl_skd.edb”), “skd”, , , , , )
打开 (相加 (运行目录, “\date\yyjl_wldzysk.edb”), “wldzysk”, , , , , )
打开 (相加 (运行目录, “\date\jbzl_qtsr”), “qtsr”, , , , , )
置当前库 (“lsskd”)
到首记录 ()
.计次循环首 (取数组成员数 (收款已审核), 循环变量)
    
    查找 (等于 (读 (“单据编号”), 收款已审核 [循环变量]))
    写 (“审核”, 真)
    .如果真 (不等于 (寻找文本 (读 (“备注”), “其它收入”, , 假), -1))
        置当前库 (“qtsr”)
        到首记录 ()
        .如果 (查找 (等于 (读 (“其它收入名称”), 读字段 (“往来单位”, “lsskd”))))
            
            写 (“金额”, 相加 (读 (“金额”), 读字段 (“金额”, “lsskd”)))
        .否则
            
        .如果结束
        
    .如果真结束
    置当前库 (“xjck”) ' 对现金进行更新
    替换 (等于 (读 (“全名”), 读字段 (“收款帐户名称”, “lsskd”)), “收入金额”, 相加 (读 (“收入金额”), 读字段 (“金额”, “lsskd”)))
    替换 (等于 (读 (“全名”), 读字段 (“收款帐户名称”, “lsskd”)), “结存金额”, 相加 (读 (“结存金额”), 读字段 (“金额”, “lsskd”)))
    置当前库 (“lsskd”)
    到首记录 ()
.计次循环尾 ()
置当前库 (“djsh”)
到首记录 ()
.计次循环首 (取数组成员数 (收款已审核), 循环变量)
    到首记录 ()
    查找 (等于 (读 (“单据编号”), 收款已审核 [循环变量]))
    置当前库 (“ysyf”)
    查找 (等于 (读 (“往来单位”), 读字段 (“往来单位”, “djsh”)))
    置当前库 (“wldzysk”) ' 如有应收帐款则对往来对帐进行更新
    加记录 (读字段 (“日期”, “djsh”), 读字段 (“单据编号”, “djsh”), 读字段 (“往来单位”, “djsh”), 读字段 (“摘要”, “djsh”), , 读字段 (“收付款帐户”, “djsh”), , 读字段 (“实收付金额”, “djsh”), 相减 (读字段 (“应收帐款”, “ysyf”), 读字段 (“实收付金额”, “djsh”)), )
    置当前库 (“ysyf”)
    替换 (等于 (读 (“往来单位”), 读字段 (“往来单位”, “djsh”)), “应收帐款”, 相减 (读 (“应收帐款”), 读字段 (“实收付金额”, “djsh”)))
    置当前库 (“djsh”)
.计次循环尾 ()
置当前库 (“skd”)
添加 (“lsskd”, 等于 (读字段 (“审核”, “lsskd”), 真), )
置当前库 (“lsskd”)
删除 (等于 (读 (“审核”), 真))
彻底删除 ()

打开 (相加 (运行目录, “\date\yyjl_fkd_ls.edb”), “lsfkd”, , , , , )
打开 (相加 (运行目录, “\date\yyjl_fkd.edb”), “fkd”, , , , , )
打开 (相加 (运行目录, “\date\yyjl_wldzyfk.edb”), “wldzyfk”, , , , , )
打开 (相加 (运行目录, “\date\jbzl_qtzc”), “qtzc”, , , , , )

置当前库 (“lsfkd”)
到首记录 ()
.计次循环首 (取数组成员数 (付款已审核), 循环变量)
    
    查找 (等于 (读 (“单据编号”), 付款已审核 [循环变量]))
    写 (“审核”, 真)
    .如果真 (不等于 (寻找文本 (读 (“备注”), “其它支出”, , 假), -1))
        置当前库 (“qtzc”)
        到首记录 ()
        .如果真 (查找 (等于 (读 (“其它支出名称”), 读字段 (“往来单位”, “lsfkd”))))
            写 (“金额”, 相加 (读 (“金额”), 读字段 (“金额”, “lsfkd”)))
        .如果真结束
        
    .如果真结束
    
    置当前库 (“xjck”) ' 对现金进行更新
    替换 (等于 (读 (“全名”), 读字段 (“付款帐户名称”, “lsfkd”)), “支出金额”, 相加 (读 (“支出金额”), 读字段 (“金额”, “lsfkd”)))
    替换 (等于 (读 (“全名”), 读字段 (“付款帐户名称”, “lsfkd”)), “结存金额”, 相减 (读 (“结存金额”), 读字段 (“金额”, “lsfkd”)))
    置当前库 (“lsfkd”)
    到首记录 ()
.计次循环尾 ()
置当前库 (“djsh”)
到首记录 ()
.计次循环首 (取数组成员数 (付款已审核), 循环变量)
    到首记录 ()
    查找 (等于 (读 (“单据编号”), 付款已审核 [循环变量]))
    置当前库 (“ysyf”)
    查找 (等于 (读 (“往来单位”), 读字段 (“往来单位”, “djsh”)))
    置当前库 (“wldzyfk”) ' 如有应付帐款则对往来对帐进行更新
    加记录 (读字段 (“日期”, “djsh”), 读字段 (“单据编号”, “djsh”), 读字段 (“往来单位”, “djsh”), 读字段 (“摘要”, “djsh”), , 读字段 (“收付款帐户”, “djsh”), , 读字段 (“实收付金额”, “djsh”), 相减 (读字段 (“应付帐款”, “ysyf”), 读字段 (“实收付金额”, “djsh”)), )
    置当前库 (“ysyf”)
    替换 (等于 (读 (“往来单位”), 读字段 (“往来单位”, “djsh”)), “应付帐款”, 相减 (读 (“应付帐款”), 读字段 (“实收付金额”, “djsh”)))
    置当前库 (“djsh”)
.计次循环尾 ()
置当前库 (“fkd”)
添加 (“lsfkd”, 等于 (读 (“审核”), 真), )
置当前库 (“lsfkd”)
删除 (等于 (读 (“审核”), 真))
彻底删除 ()

打开 (相加 (运行目录, “\date\yyjl_fy.edb”), “fy”, , , , , )
打开 (相加 (运行目录, “\date\yyjl_fy_ls.edb”), “lsfy”, , , , , )
置当前库 (“lsfy”)
到首记录 ()
.计次循环首 (取数组成员数 (费用已审核), 循环变量)
    置当前库 (“lsfy”)
    到首记录 ()
    
    .判断循环首 (查找 (等于 (读 (“单据编号”), 费用已审核 [循环变量])))
        写 (“审核”, 真)
        置当前库 (“xjck”) ' 对现金进行更新
        替换 (等于 (读 (“全名”), 读字段 (“付款帐户”, “lsfy”)), “支出金额”, 相加 (读 (“支出金额”), 读字段 (“金额”, “lsfy”)))
        替换 (等于 (读 (“全名”), 读字段 (“付款帐户”, “lsfy”)), “结存金额”, 相减 (读 (“结存金额”), 读字段 (“金额”, “lsfy”)))
        置当前库 (“lsfy”)
        跳过 ()
    .判断循环尾 ()
    
    置当前库 (“djsh”)
    
    到首记录 ()
    .如果真 (查找 (等于 (读 (“单据编号”), 费用已审核 [循环变量])))
        删除 ()
    .如果真结束
    
.计次循环尾 ()
置当前库 (“fy”)

添加 (“lsfy”, 等于 (读 (“审核”), 真), )
置当前库 (“lsfy”)
删除 (等于 (读 (“审核”), 真))
彻底删除 ()

置当前库 (“djsh”)


.子程序 _到最后行_被单击, 空白型, , 
到尾记录 ()
检测行变 ()

.子程序 _到上一行_被单击, 空白型, , 
-1.跳过 ()
检测行变 ()

.子程序 _到下一行_被单击, 空白型, , 
1.跳过 ()
检测行变 ()

.子程序 _全部审核_被单击, 空白型, , 
.局部变量 循环变量, 整数型, , , 
.局部变量 开关, 逻辑型, 静态, , 

.如果 (等于 (开关, 假))
    .计次循环首 (取行数 (), 循环变量)
        循环变量.置文本 (3, “真”)
    .计次循环尾 ()
    
.否则
    .计次循环首 (取行数 (), 循环变量)
        循环变量.置文本 (3, “假”)
    .计次循环尾 ()
.如果结束
赋值 (开关, 取反 (开关))


.子程序 检测行变, 空白型, , 
.如果 (等于 (取光标行号 ().取文本 (3), “真”))
    赋值 (当前状态, 真)
    赋值 (., 真)
.否则
    赋值 (当前状态, 假)
    赋值 (., 假)
    
.如果结束



.子程序 _简单格式_被单击, 空白型, , 
.局部变量 开关, 逻辑型, 静态, , 


.如果 (等于 (开关, 假))
    赋值 (., 真)
.否则
    赋值 (., 假)
.如果结束
赋值 (开关, 取反 (开关))
.如果 (等于 (., 真))
    
.否则
    
.如果结束


.子程序 _审核_被单击, 空白型, , 
.如果 (等于 (取光标行号 ().取文本 (3), “假”))
    取记录号 ().置文本 (3, “真”)
    赋值 (., 真)
.否则
    取记录号 ().置文本 (3, “假”)
    赋值 (., 假)
.如果结束


.子程序 _查看单据_被单击, 空白型, , 
.局部变量 单据类型文本, 文本型, , , 
.局部变量 单据编号文本, 文本型, , , 

赋值 (单据类型文本, 取光标行号 ().取文本 (9))
赋值 (单据编号文本, 取光标行号 ().取文本 (2))
.判断开始 (等于 (单据类型文本, “销售单”))
    打开 (相加 (运行目录, “\date\yyjl_xsd_ls.edb”), “lsxsd”, , , , , )
    复制记录 (相加 (运行目录, “\lscx\djcx.edb”), 等于 (读 (“单据编号”), 单据编号文本), )
    关闭 ()
    赋值 (单据类型, “销售单修改”)
    载入 (销售单, , 真)
.判断 (等于 (单据类型文本, “进货单”))
    打开 (相加 (运行目录, “\date\yyjl_jhd_ls.edb”), “lsjhd”, , , , , )
    复制记录 (相加 (运行目录, “\lscx\djcx.edb”), 等于 (读 (“单据编号”), 单据编号文本), )
    关闭 ()
    赋值 (单据类型, “进货单修改”)
    载入 (进货单, , 真)
.默认
    
.判断结束


.子程序 _删除单据_被单击, 空白型, , 
.局部变量 删除单号, 文本型, , , 
.局部变量 单据类型, 文本型, , , 

打开 (相加 (运行目录, “\date\yyjl_djsh.edb”), “djsh”, , , , , )

跳到 (取记录号 ())
赋值 (删除单号, 读 (“单据编号”))
.如果 (等于 (读 (“审核”), 假))
    赋值 (单据类型, 读 (“单据类型”))
    删除 ()
    彻底删除 ()
.否则
    信息框 (“此单据已通过审核，不能删除。”, #信息图标, “单据删除提示”)
    关闭 ()
    返回 ()
.如果结束
关闭 ()
.判断开始 (等于 (单据类型, “销售单”))
    打开 (相加 (运行目录, “\date\yyjl_xsd_ls.edb”), “lsxsd”, , , , , )
.判断 (等于 (单据类型, “进货单”))
    打开 (相加 (运行目录, “\date\yyjl_jhd_ls.edb”), “lsjhd”, , , , , )
.默认
    
.判断结束
删除 (等于 (读 (“单据编号”), 删除单号))
彻底删除 ()
关闭 ()
刷新 ()

.子程序 _按钮2_被单击, 空白型, , 
清空数据库 ()

.窗口程序集 进货单, , , 

.程序集变量 字段数, 整数型, , , 
.程序集变量 记录数, 整数型, , , 
.程序集变量 编码查询, 文本型, , "1,2", 
.程序集变量 上一交点, 编辑框, , , 
.程序集变量 已输入, 逻辑型, , , 
.程序集变量 完整行, 整数型, , "0", 
.程序集变量 不完整数据, 逻辑型, , "0", 
.程序集变量 文本, 文本型, , , 
.程序集变量 进货单位变量, 文本型, , , 
.程序集变量 默认帐户, 文本型, , , 
.子程序 _进货单_创建完毕, 空白型, , 
.局部变量 行, 整数型, , , 
.局部变量 录单日期, 日期时间型, , , 
.局部变量 现行日期, 日期时间型, , , 
.局部变量 循环变量, 整数型, , , 
.局部变量 表格常量, 整数型, , , 
.局部变量 表格列标题, 文本型, , , 
.局部变量 表格列宽, 整数型, , , 
.局部变量 循环变量1, 整数型, , , 
.局部变量 标题宽, 整数型, , , 

 ' 测试打开数据库 ()
.如果 (等于 (检查基本资料完整 (), 假))
    销毁 ()
    返回 ()
.否则
    
.如果结束
.如果真 (等于 (检查已建帐 (), 假))
    销毁 ()
    返回 ()
.如果真结束
全部关闭 ()

打开 (相加 (运行目录, “\date\yyjl_jhd_ls.edb”), “lsjhd”, , , , , )

置当前库 (“lsjhd”)
赋值 (字段数, 相减 (取字段数 (), 7))
到尾记录 ()
赋值 (记录数, 相加 (取记录数 (), 1))
到首记录 ()
赋值 (., 字段数)
赋值 (., 16)

0.未知支持库函数_9 (0, #., “序号”)
0.未知支持库函数_32 (60)

.计次循环首 (相减 (字段数, 1), 循环变量1)
    赋值 (表格列标题, 取字段名 (循环变量1))
    赋值 (标题宽, 取文本长度 (表格列标题))
    赋值 (表格列宽, 取字段尺寸 (循环变量1))
    0.未知支持库函数_9 (循环变量1, 1, 表格列标题)
    .如果真 (等于 (表格列宽, 2))
        赋值 (表格列宽, 4)
    .如果真结束
    .如果真 (小于 (表格列宽, 标题宽))
        赋值 (表格列宽, 标题宽)
    .如果真结束
    循环变量1.未知支持库函数_32 (相乘 (表格列宽, 10))
    0.未知支持库函数_25 (循环变量1, , , 2)
.计次循环尾 ()
.循环判断首 ()
    赋值 (行, 相加 (行, 1))
    行.未知支持库函数_9 (0, #., 到文本 (行))
.循环判断尾 (小于 (行, 相减 (., .)))
读表格式 ()
1.未知支持库函数_14 (#白色, #银白)
1.未知支持库函数_25 (7, 16, 11, 3)

.如果真 (等于 (单据类型, “进货单修改”))
    赋值 (., 真)
    赋值 (., 真)
    进货单修改查询 ()
    读表格式 ()
    返回 ()
.如果真结束
.如果真 (等于 (单据类型, “销售退货单”))
    赋值 (进货单., “销售退货单”)
    赋值 (.标题, “退货单位”)
    赋值 (.标题, “退货日期”)
.如果真结束

赋值 (现行日期, 取日期 (取现行时间 ()))
赋值 (.内容, 到文本 (现行日期))
赋值 (录单日期, 现行日期)
打开 (相加 (运行目录, “\date\yyjl_jhd_ls.edb”), “lsjhd”, , , , , )
打开 (相加 (运行目录, “\date\yyjl_ysyf.edb”), “ysyf”, , , , , )
打开 (相加 (运行目录, “\date\yyjl_djsh.edb”), “djsh”, , , , , )

打开 (相加 (运行目录, “\date\jbzl_xjck.edb”), “xjck”, , , , , )
打开 (相加 (运行目录, “\date\yyjl_xsfhd_ls.edb”), “lsxsfhd”, , , , , )

打开 (相加 (运行目录, “\date\yyjl_kc.edb”), “kcsp”, , , , , )
打开 (相加 (运行目录, “\date\jhbgpz.edb”), “jhbgpz”, , , , , )
置当前库 (“xjck”)
到首记录 ()
赋值 (默认帐户, 读 (2))
赋值 (.内容, 默认帐户)
获取焦点 ()
赋值 (.起始选择位置, -1)
添加进货下拉列表 ()
 ' 1.未知支持库函数_30 (#.)
7.未知支持库函数_30 (#.)
8.未知支持库函数_30 (#.)
9.未知支持库函数_30 (#.)
10.未知支持库函数_30 (#.)
11.未知支持库函数_30 (#.)
获取焦点 ()
赋值 (.内容, 单据号 (到时间 (.内容)))

.子程序 添加进货下拉列表, 空白型, , 
.局部变量 记录数, 整数型, , , 
.局部变量 循环变量, 整数型, , , 
.局部变量 编码, 文本型, , , 
.局部变量 编码对应值, 文本型, , , 
.局部变量 计数, 整数型, , , 
.局部变量 当前库, 文本型, , , 

未知支持库函数_28 ()
1.未知支持库函数_30 (1)

打开 (相加 (运行目录, “\date\jbzl_spmc.edb”), “spmc”, , , , , )

到尾记录 ()
赋值 (记录数, 取记录数 ())
重定义数组 (编码查询, 假, 记录数, 2)
到首记录 ()
跳过 ()
.计次循环首 (相减 (记录数, 1), 循环变量)
    .如果真 (等于 (读 (“子类数”), 假))
        赋值 (计数, 相加 (计数, 1))
        赋值 (编码对应值, 相加 (读 (3), “;”, 读 (5), “;”, 读 (7), “;”, 读 (8), “;”, 读 (9), “;”, 到文本 (读 (“一般进价”))))
        赋值 (编码, 读 (6))
        
        赋值 (编码查询 [计数] [1], 编码)
        赋值 (编码查询 [计数] [2], 编码对应值)
        
        编码.未知支持库函数_29 ()
        
    .如果真结束
    
    跳过 ()
.计次循环尾 ()
1.未知支持库函数_30 (4)

关闭 ()

.子程序 进货单修改查询, 空白型, , 
.局部变量 循环变量, 整数型, , , 
.局部变量 循环变量1, 整数型, , , 
.局部变量 金额, 双精度小数型, , , 
.局部变量 折后金额, 双精度小数型, , , 
.局部变量 数量, 双精度小数型, , , 

全部关闭 ()
赋值 (进货单., 相加 (进货单., “【现在是单据查询状态】”))
打开 (相加 (运行目录, “\lscx\djcx.edb”), “djcx”, , , , , )
到首记录 ()
赋值 (.内容, 到文本 (读 (“进货日期”)))
赋值 (.内容, 读 (“单据编号”))
赋值 (.内容, 读 (“进货单位”))

赋值 (.内容, 读 (“经手人”))
赋值 (.内容, 读 (“摘要”))
赋值 (.内容, 读 (“收货仓库”))

到首记录 ()
.计次循环首 (取记录数 (), 循环变量1)
    .计次循环首 (相减 (取字段数 (), 7), 循环变量)
        循环变量1.未知支持库函数_9 (循环变量, 1, 读 (循环变量))
    .计次循环尾 ()
    跳过 ()
.计次循环尾 ()
打开 (相加 (运行目录, “\lscx\yyjl_jylc.edb”), , , , , , )
.如果真 (查找 (等于 (读 (“单据编号”), .内容)))
    赋值 (.内容, 读 (“收付款帐户”))
    赋值 (.内容, 到文本 (读 (“实收付金额”)))
    赋值 (.内容, 到文本 (读 (“数量”)))
    赋值 (.内容, 到文本 (读 (“合计金额”)))
    
.如果真结束

全部关闭 ()




.子程序 添加往来单位列表, 空白型, , 
打开 (相加 (运行目录, “\date\jbzl_wldw.edb”), “wldw”, , , , , )
到首记录 ()
跳过 ()
清空 ()
.判断循环首 (取反 (尾记录后 ()))
    .如果真 (等于 (读 (“子类数”), 假))
        相加 (读 (5), “[”, 读 (3), “]”).加入项目 ()
    .如果真结束
    跳过 ()
.判断循环尾 ()
关闭 ()

.子程序 添加部门职员列表, 空白型, , 
.局部变量 当前库, 文本型, , , 

打开 (相加 (运行目录, “\date\jbzl_bmzy.edb”), “bmzy”, , , , , )
到首记录 ()
跳过 ()
清空 ()
.判断循环首 (取反 (尾记录后 ()))
    相加 (读 (5), “[”, 读 (3), “]”).加入项目 ()
    跳过 ()
.判断循环尾 ()
关闭 ()

.子程序 添加仓库列表, 空白型, , 
打开 (相加 (运行目录, “\date\jbzl_ck.edb”), “ck”, , , , , )
到首记录 ()
跳过 ()
清空 ()
.判断循环首 (取反 (尾记录后 ()))
    .如果真 (等于 (读 (“子类数”), 假))
        相加 (读 (5), “[”, 读 (3), “]”).加入项目 ()
    .如果真结束
    
    跳过 ()
.判断循环尾 ()
关闭 ()

.子程序 _退出按钮_被单击, 空白型, , 
.局部变量 返回值, 整数型, , , 

.如果真 (不等于 (单据类型, “进货单修改”))
    .如果真 (并且 (不等于 (.内容, “”), 等于 (., 假)))
        赋值 (返回值, 信息框 (“有未保存数据，是否真的退出。”, 相加 (#警告图标, #确认取消钮), “退出提示”))
        .如果真 (等于 (返回值, 1))
            返回 ()
        .如果真结束
        
    .如果真结束
    
.如果真结束





销毁 ()

.子程序 编码转全称, 文本型, , 
.参数 编码, 文本型, , 

.局部变量 循环变量, 整数型, , , 
.局部变量 成员数, 整数型, , , 

赋值 (成员数, 取数组成员数 (编码查询))
.计次循环首 (相除 (成员数, 2), 循环变量)
    .如果真 (等于 (编码, 编码查询 [循环变量] [1]))
        返回 (编码查询 [循环变量] [2])
    .如果真结束
    
.计次循环尾 ()
返回 (“”)

.子程序 存表格式, 空白型, , 
.参数 列号, 整数型, , 

.局部变量 当前库, 文本型, , , 

赋值 (当前库, 取当前库 ())
打开 (相加 (运行目录, “\date\jhbgpz.edb”), “jhbgpz”, , , , , )

置当前库 (“jhbgpz”)
跳到 (列号)
修改 (0.未知支持库函数_10 (列号), 列号.未知支持库函数_44 (), 真)
关闭 ()
置当前库 (当前库)


.子程序 读表格式, 空白型, , 
.局部变量 表格宽, 双精度小数型, , , 
.局部变量 循环变量, 整数型, , , 
.局部变量 当前库, 文本型, , , 
.局部变量 列宽, 整数型, , , 
.局部变量 是否显示, 逻辑型, , , 

赋值 (表格宽, 整除 (., 1.5))
 ' 赋值 (当前库, 取当前库 ())
打开 (相加 (运行目录, “\date\jhbgpz.edb”), “jhbgpz”, , , , , )

置当前库 (“jhbgpz”)
到首记录 ()
.计次循环首 (取记录数 (), 循环变量)
    赋值 (列宽, 读 (2))
    赋值 (是否显示, 读 (3))
    .如果真 (等于 (是否显示, 真))
        循环变量.未知支持库函数_32 (列宽)
        
        
    .如果真结束
    跳过 ()
.计次循环尾 ()
关闭 ()
置当前库 (当前库)

.子程序 _表格1_列宽被改变, 空白型, , 
.参数 列号, 整数型, , 

存表格式 (列号)

.子程序 _开新单按钮_被单击, 空白型, , 
.局部变量 行, 整数型, , , 

赋值 (., 假)
赋值 (., 真)
赋值 (., 1)
赋值 (., 16)
连续赋值 (“”, .内容, .内容, .内容, .内容, .内容, .内容, .内容, .内容)
赋值 (.内容, “现金”)
.循环判断首 ()
    赋值 (行, 相加 (行, 1))
    行.未知支持库函数_9 (0, #., 到文本 (行))
.循环判断尾 (小于 (行, 相减 (., .)))
赋值 (.内容, 单据号 (到时间 (.内容)))
赋值 (.内容, 默认帐户)


.子程序 _保存输入按钮_被单击, 空白型, , 
.局部变量 返回值, 整数型, , , 

.如果 (等于 (检查进货单完整性 (), 真))
    .如果真 (并且 (不等于 (.内容, “应付帐款”), 等于 (.内容, “”)))
        信息框 (“当付款帐户是现金和银行存款时，付款金额不能为空。”, #错误图标, “警告”)
        返回 ()
    .如果真结束
    .如果真 (并且 (等于 (.内容, “应付帐款”), 等于 (.内容, .内容)))
        信息框 (“当付款帐户是应付帐款时，付款金额与合计金额不能相等，否则视为现金付。”, #错误图标, “警告”)
        返回 ()
    .如果真结束
    
    .如果真 (大于 (取数组成员数 (不完整数据), 0))
        赋值 (返回值, 信息框 (“请检查金额为0的行，如果确认为0，按[是]确定。”, 相加 (#是否钮, #警告图标), “警告”))
        .如果真 (等于 (返回值, 6))
            返回 ()
        .如果真结束
        
    .如果真结束
    赋值 (., 假)
    赋值 (., 真)
    赋值 (已输入, 假)
    保存进货单输入 ()
    .如果真 (等于 (_启动窗口..选中, 真))
        审核过帐 (真)
        .如果真 (取反 (置当前库 (“djsh”)))
            打开 (相加 (运行目录, “\date\yyjl_djsh.edb”), “djsh”, , , , , )
        .如果真结束
        删除 (等于 (读 (“审核”), 真))
        彻底删除 ()
    .如果真结束
    
.否则
    信息框 (“请把必要的内容添全!”, #错误图标, )
.如果结束


.子程序 保存进货单输入, 空白型, , 
.局部变量 循环变量, 整数型, , , 
.局部变量 当前库, 文本型, , , 
.局部变量 单位内容, 文本型, , , 
.局部变量 单位编码, 文本型, , , 
.局部变量 实付金额, 双精度小数型, , , 
.局部变量 应付金额, 双精度小数型, , , 

赋值 (当前库, 取当前库 ())
.判断开始 (等于 (单据类型, “进货单修改”))
    打开 (相加 (运行目录, “\date\yyjl_jhd_ls.edb”), “lsjhd”, , , , , )
    到首记录 ()
    .计次循环首 (取数组成员数 (完整行), 循环变量)
        
        .判断循环首 (查找 (等于 (读 (“单据编号”), .内容)))
            
            
            .如果真 (等于 (读 (“商品全称”), 完整行.未知支持库函数_10 ( [循环变量], 2)))
                修改 (完整行.未知支持库函数_10 ( [循环变量], 1), 完整行.未知支持库函数_10 ( [循环变量], 2), 完整行.未知支持库函数_10 ( [循环变量], 3), 完整行.未知支持库函数_10 ( [循环变量], 4), 完整行.未知支持库函数_10 ( [循环变量], 5), 完整行.未知支持库函数_10 ( [循环变量], 6), 到数值 (完整行.未知支持库函数_10 ( [循环变量], 7)), 到数值 (完整行.未知支持库函数_10 ( [循环变量], 8)), 到数值 (完整行.未知支持库函数_10 ( [循环变量], 9)), 完整行.未知支持库函数_10 ( [循环变量], 10), 到时间 (.内容), .内容, .内容, .内容, .内容, .内容, .内容, )
            .如果真结束
            跳过 ()
        .判断循环尾 ()
        
    .计次循环尾 ()
    关闭 ()
    打开 (相加 (运行目录, “\date\yyjl_djsh.edb”), “djsh”, , , , , )
    到首记录 ()
    查找 (等于 (读 (“单据编号”), .内容))
    
    修改 (到时间 (.内容), .内容, , 到数值 (.内容), 到数值 (.内容), , 实付金额, 应付金额, “进货单”, .内容, .内容, .内容, .内容)
    关闭 ()
.判断 (等于 (单据类型, “销售退货单”))
    
    写出单据编号 (.内容)
    打开 (相加 (运行目录, “\cxk\kcspdj.edb”), “spdj”, , , , , )
    置当前库 (“lsxsfhd”)
    到首记录 ()
    .计次循环首 (取数组成员数 (完整行), 循环变量)
        加记录 (完整行.未知支持库函数_10 ( [循环变量], 1), 完整行.未知支持库函数_10 ( [循环变量], 2), 完整行.未知支持库函数_10 ( [循环变量], 3), 完整行.未知支持库函数_10 ( [循环变量], 4), 完整行.未知支持库函数_10 ( [循环变量], 5), 完整行.未知支持库函数_10 ( [循环变量], 6), 到数值 (完整行.未知支持库函数_10 ( [循环变量], 7)), 到数值 (完整行.未知支持库函数_10 ( [循环变量], 8)), 到数值 (完整行.未知支持库函数_10 ( [循环变量], 9)), 完整行.未知支持库函数_10 ( [循环变量], 10), 到时间 (.内容), .内容, .内容, .内容, .内容, .内容, .内容, , )
        置当前库 (“spdj”)
        到首记录 ()
        .如果真 (查找 (等于 (读 (“商品全称”), 读字段 (“商品全称”, “lsxsfhd”))))
            写字段 (“盈余”, “lsxsfhd”, 相减 (相乘 (读字段 (“单价”, “spdj”), 读字段 (“数量”, “lsxsfhd”)), 读字段 (“金额”, “lsxsfhd”)))
        .如果真结束
        置当前库 (“lsxsfhd”)
        
    .计次循环尾 ()
    
    关闭 (“spdj”)
    置当前库 (“djsh”)
    .如果 (等于 (.内容, “应付帐款”))
        赋值 (实付金额, 到数值 (.内容))
        赋值 (应付金额, 相减 (到数值 (.内容), 到数值 (.内容)))
    .否则
        赋值 (实付金额, 到数值 (.内容))
        赋值 (应付金额, 0)
    .如果结束
    
    加记录 (到时间 (.内容), .内容, , 到数值 (.内容), 到数值 (.内容), , 实付金额, 应付金额, “销售退货单”, .内容, .内容, .内容, .内容)
    
.默认
    写出单据编号 (.内容)
    置当前库 (“lsjhd”)
    到首记录 ()
    .计次循环首 (取数组成员数 (完整行), 循环变量)
        加记录 (完整行.未知支持库函数_10 ( [循环变量], 1), 完整行.未知支持库函数_10 ( [循环变量], 2), 完整行.未知支持库函数_10 ( [循环变量], 3), 完整行.未知支持库函数_10 ( [循环变量], 4), 完整行.未知支持库函数_10 ( [循环变量], 5), 完整行.未知支持库函数_10 ( [循环变量], 6), 到数值 (完整行.未知支持库函数_10 ( [循环变量], 7)), 到数值 (完整行.未知支持库函数_10 ( [循环变量], 8)), 到数值 (完整行.未知支持库函数_10 ( [循环变量], 9)), 完整行.未知支持库函数_10 ( [循环变量], 10), 到时间 (.内容), .内容, .内容, .内容, .内容, .内容, .内容, )
        
    .计次循环尾 ()
    .如果真 (等于 (单据类型, “”))
        置当前库 (“spmc”)
        .计次循环首 (取数组成员数 (完整行), 循环变量)
            替换 (等于 (读 (“全称”), 完整行.未知支持库函数_10 ( [循环变量], 2)), “一般进价”, 到数值 (完整行.未知支持库函数_10 ( [循环变量], 7)))
        .计次循环尾 ()
        
    .如果真结束
    置当前库 (“djsh”)
    .如果 (等于 (.内容, “应付帐款”))
        赋值 (实付金额, 到数值 (.内容))
        赋值 (应付金额, 相减 (到数值 (.内容), 到数值 (.内容)))
    .否则
        赋值 (实付金额, 到数值 (.内容))
        赋值 (应付金额, 0)
    .如果结束
    
    加记录 (到时间 (.内容), .内容, , 到数值 (.内容), 到数值 (.内容), , 实付金额, 应付金额, “进货单”, .内容, .内容, .内容, .内容)
    
    
    
    
.判断结束

置当前库 (当前库)

.子程序 检查进货单完整性, 逻辑型, , 
.局部变量 数据行, 整数型, , , 
.局部变量 循环变量, 整数型, , , 
.局部变量 数据列, 文本型, , , 
.局部变量 数据列1, 文本型, , , 
.局部变量 数据列2, 整数型, , , 
.局部变量 有效数据行, 文本型, , , 
.局部变量 计数, 整数型, , , 

赋值 (数据行, 相减 (., 1))
重定义数组 (完整行, 假, 0)
重定义数组 (不完整数据, 假, 0)
赋值 (计数, 0)
.计次循环首 (数据行, 循环变量)
    赋值 (数据列, 到文本 (循环变量.未知支持库函数_10 (8)))
    赋值 (数据列1, 到文本 (循环变量.未知支持库函数_10 (2)))
    赋值 (数据列2, 到数值 (到文本 (循环变量.未知支持库函数_10 (9))))
    .如果真 (并且 (不等于 (数据列, “”), 不等于 (数据列1, “”)))
        加入成员 (完整行, 循环变量)
        .如果真 (等于 (数据列2, 0))
            加入成员 (不完整数据, 真)
        .如果真结束
        
    .如果真结束
    
    
.计次循环尾 ()
赋值 (计数, 取数组成员数 (完整行))
.如果真 (等于 (计数, 0))
    信息框 (“没有输入有效数据，不能保存！”, #警告图标, “保存提示”)
    返回 (假)
.如果真结束

.如果真 (并且 (不等于 (.内容, “”), 不等于 (.内容, “”), 不等于 (.内容, “”), 不等于 (.内容, “”)))
    .计次循环首 (计数, 循环变量)
        赋值 (有效数据行, 相加 (有效数据行, 到文本 (完整行 [循环变量]), “；”))
    .计次循环尾 ()
    赋值 (计数, 信息框 (相加 (“请注意有效数据行是  ”, 有效数据行), 相加 (#是否钮, 32), “保存提示信息”))
    
.如果真结束
.如果 (等于 (计数, 5))
    返回 (真)
.否则
    返回 (假)
.如果结束


.子程序 _表格1_结束编辑, 空白型, , 
.局部变量 光标行号, 整数型, , , 
.局部变量 光标列号, 整数型, , , 
.局部变量 行号, 整数型, 静态, , 
.局部变量 行数, 整数型, , , 
.局部变量 循环变量, 整数型, , , 
.局部变量 循环变量1, 整数型, , , 
.局部变量 循环变量2, 整数型, , , 
.局部变量 数量合计, 双精度小数型, , , 
.局部变量 金额合计, 双精度小数型, , , 
.局部变量 折后金额合计, 双精度小数型, , , 
.局部变量 分割返回值, 文本型, , "0", 

赋值 (光标行号, 未知支持库函数_3 ())
赋值 (光标列号, 未知支持库函数_4 ())
赋值 (行数, .)
.判断开始 (等于 (光标列号, 7))
    光标行号.未知支持库函数_9 (9, 1, 到文本 (相乘 (到数值 (光标行号.未知支持库函数_10 (7)), 到数值 (光标行号.未知支持库函数_10 (8)))))
    
    .计次循环首 (行数, 循环变量1)
        赋值 (金额合计, 相加 (到数值 (到文本 (循环变量1.未知支持库函数_10 (9))), 金额合计))
    .计次循环尾 ()
    赋值 (.内容, 到文本 (四舍五入 (金额合计, 2)))
    赋值 (.内容, .内容)
.判断 (等于 (光标列号, 8))
    光标行号.未知支持库函数_9 (9, 1, 到文本 (相乘 (到数值 (光标行号.未知支持库函数_10 (7)), 到数值 (光标行号.未知支持库函数_10 (8)))))
    .计次循环首 (行数, 循环变量)
        赋值 (数量合计, 相加 (到数值 (到文本 (循环变量.未知支持库函数_10 (8))), 数量合计))
    .计次循环尾 ()
    赋值 (.内容, 到文本 (数量合计))
    .计次循环首 (行数, 循环变量)
        赋值 (金额合计, 相加 (到数值 (到文本 (循环变量.未知支持库函数_10 (9))), 金额合计))
    .计次循环尾 ()
    赋值 (.内容, 到文本 (四舍五入 (金额合计, 2)))
    赋值 (.内容, .内容)
.判断 (等于 (光标列号, 9))
    .计次循环首 (行数, 循环变量)
        赋值 (金额合计, 相加 (到数值 (到文本 (循环变量.未知支持库函数_10 (9))), 金额合计))
    .计次循环尾 ()
    赋值 (.内容, 到文本 (四舍五入 (金额合计, 2)))
    赋值 (.内容, .内容)
.判断 (等于 (光标列号, 1))
    赋值 (分割返回值, 分割文本 (编码转全称 (光标行号.未知支持库函数_10 (1)), “;”, 6))
    赋值 (循环变量1, 取数组成员数 (分割返回值))
    .如果真 (大于 (循环变量1, 0))
        .计次循环首 (循环变量1, 循环变量)
            光标行号.未知支持库函数_9 (相加 (循环变量, 1), 1, 分割返回值 [循环变量])
        .计次循环尾 ()
        
        .计次循环首 (6, 循环变量)
            256.投递信息 (位与 (39, 255), 1)
        .计次循环尾 ()
        .如果真 (等于 (光标行号, 1))
            .判断开始 (等于 (单据类型, “”))
                赋值 (.内容, 相加 (“从”, “【”, .内容, “】”, “购进”, “【”, 分割返回值 [1], “】”, “等.∶”, .内容))
                
            .判断 (等于 (单据类型, “销售退货单”))
                赋值 (.内容, 相加 (“给”, “【”, .内容, “】”, “退”, “【”, 分割返回值 [1], “】”, “等.∶”, .内容))
                
            .默认
                
            .判断结束
            
        .如果真结束
        
    .如果真结束
    
.默认
    
.判断结束


赋值 (已输入, 真)

.子程序 _进货日期_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (等于 (键代码, #回车键))
    获取焦点 ()
.如果真结束


.子程序 _进货单位_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 


.如果真 (等于 (键代码, #回车键))
    获取焦点 ()
.如果真结束


.子程序 _经手人_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (等于 (键代码, #回车键))
    获取焦点 ()
.如果真结束


.子程序 _收货仓库_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (等于 (键代码, #回车键))
    获取焦点 ()
.如果真结束


.子程序 _进货单位_获得焦点, 空白型, , 
赋值 (上一交点, )
赋值 (.可视, 真)
赋值 (.顶边, 相加 (.顶边, .高度))
赋值 (.左边, .左边)
添加往来单位列表 ()
赋值 (文本, “”)

.子程序 _经手人_获得焦点, 空白型, , 
赋值 (上一交点, )
赋值 (.可视, 真)
赋值 (.顶边, 相加 (.顶边, .高度))
赋值 (.左边, .左边)
添加部门职员列表 ()

.子程序 _收货仓库_获得焦点, 空白型, , 
赋值 (上一交点, )
赋值 (.可视, 真)
赋值 (.顶边, 相加 (.顶边, .高度))
赋值 (.左边, .左边)
添加仓库列表 ()

.子程序 _付款帐户_获得焦点, 空白型, , 
赋值 (上一交点, )
赋值 (.高度, 100)
赋值 (.可视, 真)
赋值 (.顶边, 相减 (.顶边, .高度))
赋值 (.左边, .左边)
添加进货收付款帐户列表 ()

.子程序 _经手人_字符输入, 整数型, , 
.参数 字符代码, 整数型, , 

.如果真 (等于 (字符代码, #上光标键))
    获取焦点 ()
.如果真结束


.子程序 _进货单位_内容被改变, 空白型, , 
.局部变量 选择行, 整数型, , , 

赋值 (选择行, .选择 (.内容))
.如果真 (大于 (选择行, -1))
    赋值 (.现行选中项, 选择行)
    获取焦点 ()
.如果真结束


.子程序 被选择, 空白型, , 
.局部变量 内容, 文本型, , , 
.局部变量 文本, 整数型, , , 
.局部变量 匿名局部变量_2107, 空白型, , , 

赋值 (内容, .取项目文本 (.现行选中项))
赋值 (文本, 寻找文本 (内容, “[”, , 假))
赋值 (内容, 取文本中间 (内容, 相加 (文本, 1), 相减 (取文本长度 (内容), 文本, 1)))
.判断开始 (等于 (上一交点, ))
    赋值 (.内容, 内容)
    赋值 (进货单位变量, .取项目文本 (.现行选中项))
    .如果真 (取反 (置当前库 (“ysyf”)))
        打开 (相加 (运行目录, “\date\yyjl_ysyf.edb”), “ysyf”, , , , , )
    .如果真结束
    到首记录 ()
    查找 (等于 (读 (“往来单位”), 内容))
    0.置文本 (相加 (“      应付帐款： ”, 到文本 (读 (“应付帐款”))))
.判断 (等于 (上一交点, ))
    赋值 (.内容, 内容)
.判断 (等于 (上一交点, ))
    赋值 (.内容, 内容)
.判断 (等于 (上一交点, ))
    赋值 (.内容, 内容)
    .如果真 (等于 (.内容, “应付帐款”))
        赋值 (.内容, “”)
    .如果真结束
    
    赋值 (.高度, 60)
.默认
    
.判断结束


.子程序 添加进货收付款帐户列表, 空白型, , 
.如果真 (取反 (置当前库 (“xjck”)))
    打开 (相加 (运行目录, “\date\jbzl_xjck.edb”), “xjck”, , , , , )
.如果真结束
到首记录 ()
清空 ()
.如果真 (不等于 (单据类型, “销售退货单”))
    0.插入项目 (“应付帐款”, )
    
.如果真结束
.判断循环首 (取反 (尾记录后 ()))
    相加 (读 (1), “[”, 读 (2), “]”).加入项目 ()
    
    跳过 ()
.判断循环尾 ()
关闭 ()

.子程序 _下拉选择框_失去焦点, 空白型, , 
赋值 (.可视, 假)
赋值 (.高度, 136)

.子程序 _下拉选择框_字符输入, 整数型, , 
.参数 字符代码, 整数型, , 


.如果真 (等于 (字符代码, #回车键))
    被选择 ()
    赋值 (.可视, 假)
    .判断开始 (等于 (上一交点, ))
        赋值 (.可视, 假)
        获取焦点 ()
        返回 ()
    .判断 (等于 (上一交点, ))
        赋值 (.可视, 假)
        获取焦点 ()
        
        返回 ()
    .判断 (等于 (上一交点, ))
        赋值 (.可视, 假)
        获取焦点 ()
        1.未知支持库函数_0 (1)
    .默认
        
    .判断结束
    
.如果真结束


.子程序 _经手人_内容被改变, 空白型, , 
.局部变量 选择行, 整数型, , , 

赋值 (选择行, .选择 (.内容))
.如果真 (大于 (选择行, -1))
    赋值 (.现行选中项, 选择行)
    获取焦点 ()
.如果真结束


.子程序 _收货仓库_内容被改变, 空白型, , 
.局部变量 选择行, 整数型, , , 

赋值 (选择行, .选择 (.内容))
.如果真 (大于 (选择行, -1))
    赋值 (.现行选中项, 选择行)
    获取焦点 ()
.如果真结束


.子程序 _付款帐户_内容被改变, 空白型, , 
.局部变量 选择行, 整数型, , , 

赋值 (选择行, .选择 (.内容))
.如果真 (大于 (选择行, 0))
    赋值 (.现行选中项, 选择行)
    获取焦点 ()
.如果真结束


.子程序 _下拉选择框_列表项被选择, 空白型, , 
被选择 ()

.子程序 _下拉选择框_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.可视, 假)

.子程序 _表格1_字符输入, 整数型, , 
.参数 字符代码, 整数型, , 

.如果真 (等于 (已输入, 假))
    赋值 (已输入, 真)
    赋值 (., 假)
    赋值 (., 真)
.如果真结束


.子程序 _表格1_光标位置改变, 空白型, , 
.局部变量 光标行号, 整数型, , , 
.局部变量 光标列号, 整数型, , , 
.局部变量 行号, 整数型, 静态, , 
.局部变量 行数, 整数型, , , 
.局部变量 循环变量, 整数型, , , 
.局部变量 数量合计, 双精度小数型, , , 
.局部变量 金额合计, 双精度小数型, , , 
.局部变量 折后金额合计, 双精度小数型, , , 

赋值 (光标行号, 未知支持库函数_3 ())
赋值 (光标列号, 未知支持库函数_4 ())
赋值 (行数, .)

.判断开始 (等于 (光标列号, 8))
    .计次循环首 (行数, 循环变量)
        赋值 (数量合计, 相加 (到数值 (到文本 (循环变量.未知支持库函数_10 (8))), 数量合计))
    .计次循环尾 ()
    赋值 (.内容, 到文本 (四舍五入 (数量合计, 2)))
    .计次循环首 (行数, 循环变量)
        赋值 (金额合计, 相加 (到数值 (到文本 (循环变量.未知支持库函数_10 (9))), 金额合计))
    .计次循环尾 ()
    赋值 (.内容, 到文本 (四舍五入 (金额合计, 2)))
    赋值 (.内容, .内容)
    
.判断 (等于 (光标列号, 9))
    .计次循环首 (行数, 循环变量)
        赋值 (金额合计, 相加 (到数值 (到文本 (循环变量.未知支持库函数_10 (9))), 金额合计))
    .计次循环尾 ()
    赋值 (.内容, 到文本 (四舍五入 (金额合计, 2)))
    赋值 (.内容, .内容)
    
.默认
    
.判断结束
赋值 (已输入, 真)

.子程序 _下拉选择框_双击选择, 空白型, , 
赋值 (.可视, 假)
.判断开始 (等于 (上一交点, ))
    赋值 (.可视, 假)
    获取焦点 ()
    返回 ()
.判断 (等于 (上一交点, ))
    赋值 (.可视, 假)
    获取焦点 ()
    
    返回 ()
.判断 (等于 (上一交点, ))
    赋值 (.可视, 假)
    获取焦点 ()
    1.未知支持库函数_0 (1)
.默认
    
.判断结束
赋值 (.可视, 假)

.子程序 _表格1_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 选择行, 整数型, , , 

.如果真 (并且 (等于 (键代码, #Tab键), 等于 (功能键状态, 1)))
    赋值 (.可视, 假)
    载入 (添加基本信息, , 真)
.如果真结束
.如果真 (等于 (未知支持库函数_3 (), 相减 (., 1)))
    赋值 (选择行, 未知支持库函数_3 ())
    .如果真 (并且 (等于 (键代码, #下光标键), 等于 (功能键状态, 1)))
        赋值 (., 相加 (., 1))
        相加 (未知支持库函数_3 (), 1).未知支持库函数_9 (0, 1, 到文本 (相加 (选择行, 1)))
        刷新显示 ()
        
    .如果真结束
    
.如果真结束



.子程序 _单据编号_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

返回 (假)

.子程序 _预览按钮_被单击, 空白型, , 
未知支持库函数_27 ()

.子程序 _进货单_将被销毁, 空白型, , 

全部关闭 ()


.子程序 _付款金额_被双击, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.内容, “”)

.子程序 _打印按钮_被单击, 空白型, , 
未知支持库函数_27 ()

.子程序 _表格1_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

添加进货下拉列表 ()

.窗口程序集 经营历程, , , 

.程序集变量 字段, 文本型, , "0", 
.程序集变量 单据类型2, 文本型, , , 
.子程序 _工具条1_被单击, 空白型, , 
.参数 按钮索引, 整数型, , 

打印预览 ()



.子程序 有条件查询, 空白型, , 
赋值 (.数据库文件名, “”)
刷新 ()
打开 (相加 (运行目录, “\”, 路径, “\yyjl_jylc.edb”), “jylc”, , , , , )
.判断开始 (并且 (不等于 (.内容, “”), 不等于 (.内容, “”)))
    复制记录 (相加 (运行目录, “\lscx\yyjl_jylc1.edb”), 并且 (等于 (读 (“日期”), 到时间 (.内容)), 等于 (.内容, 读 (“单据类型”))), )
    
    0.置文本 (相加 (“            查询内容是 ”, “〖”, .内容, “ 〗”, “〖”, .内容, “〗”, “的所有内容。”))
.判断 (并且 (不等于 (.内容, “”), 等于 (.内容, “”)))
    复制记录 (相加 (运行目录, “\lscx\yyjl_jylc1.edb”), 等于 (.内容, 读 (“单据类型”)), )
    0.置文本 (相加 (“            查询内容是 ”, “〖所有日期〗”, “〖”, .内容, “〗”, “的所有内容。”))
.判断 (并且 (等于 (.内容, “”), 不等于 (.内容, “”)))
    复制记录 (相加 (运行目录, “\lscx\yyjl_jylc1.edb”), 等于 (读 (“日期”), 到时间 (.内容)), )
    0.置文本 (相加 (“            查询内容是 ”, “〖”, .内容, “ 〗”, “〖所有单据〗”, “的所有内容。”))
.默认
    
.判断结束
关闭 (“jylc”)


打开 (相加 (运行目录, “\lscx\yyjl_jylc1.edb”), “jylc1”, , , , , )
.如果真 (等于 (.选中, 真))
    赋值 (.数据库文件名, 相加 (运行目录, “\lscx\yyjl_jylc1.edb”))
.如果真结束

.如果真 (等于 (.选中, 真))
    排序 (相加 (运行目录, “\lscx\yyjl_jylcjepx.edb”), “合计金额”, 假, , )
    赋值 (.数据库文件名, 相加 (运行目录, “\lscx\yyjl_jylcjepx.edb”))
    
.如果真结束
.如果真 (等于 (.选中, 真))
    排序 (相加 (运行目录, “\lscx\yyjl_jylcslpx.edb”), “数量”, 假, , )
    赋值 (.数据库文件名, 相加 (运行目录, “\lscx\yyjl_jylcslpx.edb”))
    
.如果真结束

关闭 (“jylc1”)
刷新 ()
刷新显示 ()

.子程序 _经营历程_创建完毕, 空白型, , 
赋值 (经营历程., _启动窗口.)
全部关闭 ()
.如果 (文件是否存在 (相加 (运行目录, “\lscx”)))
    
.否则
    创建目录 (相加 (运行目录, “\lscx”))
.如果结束
复制文件 (相加 (运行目录, “\”, 路径, “\yyjl_jylc.edb”), 相加 (运行目录, “\lscx\yyjl_jylc.edb”))
赋值 (.数据库文件名, 相加 (运行目录, “\lscx\yyjl_jylc.edb”))
.如果 (等于 (历史查询, 假))
    赋值 (经营历程., 相加 (“经营历程--”, “全部单据查询【”, 到文本 (取月份 (取现行时间 ())), “月份”, “】”))
    
.否则
    赋值 (经营历程., 相加 (“经营历程--”, “全部单据查询【”, 历史查询月, “】”))
    
.如果结束
赋值 (单据类型2, “全部单据”)
赋值 (经营历程., 相加 (“经营历程--”, 单据类型2, “查询【”, 到文本 (.今天), “至”, 到文本 (取日期 (取现行时间 ())), “】”))


.子程序 _横向滚动条1_位置被改变, 空白型, , 
表格缩放 (.位置)

.子程序 _查看单据_被单击, 空白型, , 
.局部变量 单据类型文本, 文本型, , , 
.局部变量 单据编号文本, 文本型, , , 

赋值 (单据类型文本, 取光标行号 ().取文本 (7))
赋值 (单据编号文本, 取光标行号 ().取文本 (2))

.判断开始 (等于 (单据类型文本, “销售单”))
    打开 (相加 (运行目录, “\”, 路径, “\yyjl_xsd.edb”), “xsd”, , , , , )
    复制记录 (相加 (运行目录, “\lscx\djcx.edb”), 等于 (读 (“单据编号”), 单据编号文本), )
    关闭 ()
    赋值 (单据类型, “销售单修改”)
    载入 (销售单, , 真)
.判断 (等于 (单据类型文本, “进货单”))
    打开 (相加 (运行目录, “\”, 路径, “\yyjl_jhd.edb”), “jhd”, , , , , )
    复制记录 (相加 (运行目录, “\lscx\djcx.edb”), 等于 (读 (“单据编号”), 单据编号文本), )
    
    关闭 ()
    赋值 (单据类型, “进货单修改”)
    
    载入 (进货单, , 真)
.默认
    
.判断结束


.子程序 _单据类型1_获得焦点, 空白型, , 
335.发送信息 (1, 0)

.子程序 _退出按钮_被单击, 空白型, , 
销毁 ()

.子程序 _打印按钮_被单击, 空白型, , 
打印预览 ()

.子程序 _经营历程_将被销毁, 空白型, , 
赋值 (路径, “date”)
赋值 (历史查询, 假)

.子程序 _详细查询按钮_被单击, 空白型, , 
有条件查询 ()
赋值 (.内容, “”)
赋值 (.内容, “”)

.子程序 _日期_获得焦点, 空白型, , 
赋值 (.左边, .左边)
赋值 (.顶边, .顶边)
赋值 (.可视, 真)

.子程序 _日期框1_选择日期被改变, 空白型, , 
赋值 (.内容, 时间到文本 (.今天, 2))
赋值 (.可视, 假)

.子程序 _单据类型1_列表项被选择, 空白型, , 
.如果 (或者 (等于 (.取项目文本 (.现行选中项), “进货单”), 等于 (.取项目文本 (.现行选中项), “销售单”)))
    赋值 (., 假)
    
.否则
    赋值 (., 真)
    
.如果结束


.窗口程序集 收款单, , , 

.程序集变量 完整行, 整数型, , "0", 
.程序集变量 不完整数据, 逻辑型, , "0", 
.程序集变量 上一交点, 编辑框, , , 
.程序集变量 付款单位变量, 文本型, , , 
.程序集变量 表格列表内容, 文本型, , "1,2", 
.程序集变量 其它收入项, 文本型, , "0", 
.程序集变量 应收账款, 双精度小数型, , , 
.子程序 _收款单_创建完毕, 空白型, , 
.局部变量 行, 整数型, , , 
.局部变量 录单日期, 日期时间型, , , 
.局部变量 现行日期, 日期时间型, , , 
.局部变量 循环变量, 整数型, , , 
.局部变量 表格常量, 整数型, , , 
.局部变量 表格列标题, 文本型, , , 
.局部变量 表格列宽, 整数型, , , 
.局部变量 循环变量1, 整数型, , , 
.局部变量 标题宽, 整数型, , , 
.局部变量 字段数, 整数型, , , 

.如果 (等于 (检查基本资料完整 (), 假))
    销毁 ()
    返回 ()
.否则
    
.如果结束
.如果真 (等于 (检查已建帐 (), 假))
    销毁 ()
    返回 ()
.如果真结束

全部关闭 ()
0.未知支持库函数_9 (0, #., “序号”)
打开 (相加 (运行目录, “\date\yyjl_skd.edb”), “skd”, , , , , )
打开 (相加 (运行目录, “\date\yyjl_skd_ls.edb”), “lsskd”, , , , , )
打开 (相加 (运行目录, “\date\yyjl_djsh.edb”), “djsh”, , , , , )
.如果真 (打开 (相加 (运行目录, “\date\jbzl_qtsr.edb”), “qtsr”, , , , , ))
    .计次循环首 (取记录数 (), 循环变量)
        加入成员 (其它收入项, 相加 (读 (“编码”), “[”, 读 (“其它收入名称”), “]”))
        跳过 ()
    .计次循环尾 ()
    
.如果真结束

置当前库 (“skd”)
赋值 (字段数, 相减 (取字段数 (), 4))
到尾记录 ()
赋值 (., 字段数)
0.未知支持库函数_9 (0, #., “序号”)
0.未知支持库函数_32 (60)

.计次循环首 (字段数, 循环变量1)
    赋值 (表格列标题, 取字段名 (相加 (循环变量1, 5)))
    赋值 (标题宽, 取文本长度 (表格列标题))
    赋值 (表格列宽, 取字段尺寸 (相加 (循环变量1, 5)))
    0.未知支持库函数_9 (循环变量1, 1, 表格列标题)
    .如果真 (等于 (表格列宽, 2))
        赋值 (表格列宽, 4)
    .如果真结束
    .如果真 (小于 (表格列宽, 标题宽))
        赋值 (表格列宽, 标题宽)
    .如果真结束
    循环变量1.未知支持库函数_32 (相乘 (表格列宽, 10))
    0.未知支持库函数_25 (循环变量1, , , 2)
.计次循环尾 ()
.循环判断首 ()
    赋值 (行, 相加 (行, 1))
    行.未知支持库函数_9 (0, #., 到文本 (行))
.循环判断尾 (小于 (行, 相减 (., .)))

1.未知支持库函数_14 (#白色, #银白)
1.未知支持库函数_25 (3, 16, 11, 3)

赋值 (现行日期, 取日期 (取现行时间 ()))
赋值 (.内容, 到文本 (现行日期))
赋值 (录单日期, 现行日期)
添加收款列表 ()
1.未知支持库函数_30 (#.)
2.未知支持库函数_30 (#.)
3.未知支持库函数_30 (#.)
赋值 (.内容, 单据号 (到时间 (.内容)))
获取焦点 ()
赋值 (.起始选择位置, -1)


.子程序 _表格1_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 光标行号, 整数型, , , 

.如果真 (并且 (等于 (键代码, #Tab键), 等于 (功能键状态, 1)))
    赋值 (.可视, 假)
    载入 (添加基本信息, , 真)
.如果真结束

.如果真 (等于 (键代码, #回车键))
    256.发送信息 (#回车键, 0)
    
.如果真结束

.如果真 (等于 (未知支持库函数_3 (), 相减 (., 1)))
    赋值 (光标行号, 未知支持库函数_3 ())
    .如果真 (并且 (等于 (键代码, #下光标键), 等于 (功能键状态, 1)))
        赋值 (., 相加 (., 1))
        相加 (未知支持库函数_3 (), 1).未知支持库函数_9 (0, 1, 到文本 (相加 (光标行号, 1)))
        刷新显示 ()
        
    .如果真结束
    
.如果真结束


.子程序 检查收款单完整性, 逻辑型, , 
.局部变量 有效行, 整数型, , , 
.局部变量 循环变量, 整数型, , , 
.局部变量 检查值, 文本型, , , 
.局部变量 检查值1, 整数型, , , 
.局部变量 有效数据行, 文本型, , , 
.局部变量 计数, 整数型, , , 

赋值 (有效行, 相减 (., 1))
重定义数组 (完整行, 假, 0)
重定义数组 (不完整数据, 假, 0)
赋值 (计数, 0)
.计次循环首 (有效行, 循环变量)
    赋值 (检查值, 到文本 (循环变量.未知支持库函数_10 (2)))
    赋值 (检查值1, 到数值 (循环变量.未知支持库函数_10 (3)))
    
    .如果 (并且 (不等于 (检查值, “”), 不等于 (检查值1, 0)))
        加入成员 (完整行, 循环变量)
    .否则
        
    .如果结束
    
.计次循环尾 ()
赋值 (计数, 取数组成员数 (完整行))
.如果真 (等于 (计数, 0))
    信息框 (“没有输入有效数据，不能保存！”, #警告图标, “保存提示”)
    返回 (假)
.如果真结束

.如果真 (并且 (不等于 (.内容, “”), 不等于 (.内容, “”)))
    .计次循环首 (计数, 循环变量)
        赋值 (有效数据行, 相加 (有效数据行, 到文本 (完整行 [循环变量]), “；”))
    .计次循环尾 ()
    赋值 (计数, 信息框 (相加 (“请注意有效数据行是  ”, 有效数据行), 相加 (#是否钮, 32), “保存提示信息”))
    
.如果真结束
.如果 (等于 (计数, 5))
    返回 (真)
.否则
    返回 (假)
.如果结束


.子程序 _退出按钮_被单击, 空白型, , 
.局部变量 选择行, 整数型, , , 

.如果真 (并且 (不等于 (.内容, “”), 等于 (., 假)))
    赋值 (选择行, 信息框 (“有未保存数据，是否真的退出。”, 相加 (#警告图标, #确认取消钮), “退出提示”))
    .如果真 (等于 (选择行, 1))
        返回 ()
        
    .如果真结束
    
.如果真结束
销毁 ()

.子程序 保存收款单输入, 空白型, , 
.局部变量 循环变量, 整数型, , , 
.局部变量 当前库, 文本型, , , 
.局部变量 单位内容, 文本型, , , 
.局部变量 单位编码, 文本型, , , 

赋值 (当前库, 取当前库 ())
写出单据编号 (.内容)
置当前库 (“lsskd”)
到首记录 ()
.计次循环首 (取数组成员数 (完整行), 循环变量)
    加记录 (到时间 (.内容), .内容, .内容, .内容, .内容, 完整行.未知支持库函数_10 ( [循环变量], 1), 完整行.未知支持库函数_10 ( [循环变量], 2), 到数值 (完整行.未知支持库函数_10 ( [循环变量], 3)), 完整行.未知支持库函数_10 ( [循环变量], 4), )
.计次循环尾 ()

置当前库 (“djsh”)
加记录 (到时间 (.内容), .内容, , , , , 到数值 (.内容), , “收款单”, .内容, 1.未知支持库函数_10 (2), .内容, .内容)

置当前库 (当前库)


.子程序 _保存输入按钮_被单击, 空白型, , 
.局部变量 返回值, 整数型, , , 

.如果 (等于 (检查收款单完整性 (), 真))
    .如果真 (大于 (取数组成员数 (不完整数据), 0))
        赋值 (返回值, 信息框 (“请检查金额为0的行，如果确认为0，按[是]确定。”, 相加 (#是否钮, #警告图标), “警告”))
        .如果真 (等于 (返回值, 6))
            返回 ()
        .如果真结束
        
    .如果真结束
    赋值 (., 假)
    赋值 (., 真)
    保存收款单输入 ()
    .如果真 (等于 (_启动窗口..选中, 真))
        审核过帐 (真)
        .如果真 (取反 (置当前库 (“djsh”)))
            打开 (相加 (运行目录, “\date\yyjl_djsh.edb”), “djsh”, , , , , )
        .如果真结束
        删除 (等于 (读 (“审核”), 真))
        彻底删除 ()
        
    .如果真结束
    
    
.否则
    信息框 (“请把必要的内容添全!”, #错误图标, )
.如果结束


.子程序 _下拉选择框_列表项被选择, 空白型, , 

被选择 ()

.子程序 被选择, 空白型, , 
.局部变量 内容, 文本型, , , 
.局部变量 文本, 整数型, , , 
.局部变量 循环变量, 整数型, , , 

赋值 (内容, .取项目文本 (.现行选中项))
.如果真 (等于 (内容, “其它收入”))
    清空 ()
    .计次循环首 (取数组成员数 (其它收入项), 循环变量)
        其它收入项.加入项目 ( [循环变量], )
    .计次循环尾 ()
    返回 ()
.如果真结束
赋值 (文本, 寻找文本 (内容, “[”, , 假))
赋值 (内容, 取文本中间 (内容, 相加 (文本, 1), 相减 (取文本长度 (内容), 文本, 1)))

.判断开始 (等于 (上一交点, ))
    赋值 (.内容, 内容)
    赋值 (付款单位变量, .取项目文本 (.现行选中项))
.判断 (等于 (上一交点, ))
    赋值 (.内容, 内容)
.默认
    
.判断结束


.子程序 _付款单位_获得焦点, 空白型, , 
赋值 (上一交点, )
赋值 (.可视, 真)
赋值 (.顶边, 相加 (.顶边, .高度))
赋值 (.左边, .左边)
添加单位列表 ()

.子程序 _经手人_获得焦点, 空白型, , 
赋值 (上一交点, )
赋值 (.可视, 真)
赋值 (.顶边, 相加 (.顶边, .高度))
赋值 (.左边, .左边)
添加职员列表 ()


.子程序 _付款单位_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (等于 (键代码, #回车键))
    获取焦点 ()
.如果真结束


.子程序 _收款日期_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (等于 (键代码, #回车键))
    获取焦点 ()
.如果真结束


.子程序 _经手人_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (等于 (键代码, #回车键))
    获取焦点 ()
    1.未知支持库函数_0 (1)
.如果真结束


.子程序 _付款单位_内容被改变, 空白型, , 
.局部变量 a, 整数型, , , 

赋值 (a, .选择 (.内容))
.如果真 (大于 (a, -1))
    赋值 (.现行选中项, a)
    获取焦点 ()
.如果真结束


.子程序 _经手人_内容被改变, 空白型, , 
.局部变量 选择行, 整数型, , , 

赋值 (选择行, .选择 (.内容))
.如果真 (大于 (选择行, -1))
    赋值 (.现行选中项, 选择行)
    获取焦点 ()
.如果真结束


.子程序 _下拉选择框_失去焦点, 空白型, , 
赋值 (.可视, 假)

.子程序 添加单位列表, 空白型, , 
打开 (相加 (运行目录, “\date\yyjl_ysyf.edb”), “ysyf”, , , , , )
置当前库 (“ysyf”)
清空 ()
“其它收入”.加入项目 ()
.判断循环首 (取反 (尾记录后 ()))
    .如果真 (不等于 (读 (3), 0))
        相加 (读 (1), “[”, 读 (2), “]”).加入项目 ()
        
    .如果真结束
    跳过 ()
.判断循环尾 ()
关闭 ()

.子程序 添加职员列表, 空白型, , 
打开 (相加 (运行目录, “\date\jbzl_bmzy.edb”), “bmzy”, , , , , )
置当前库 (“bmzy”)
到首记录 ()
跳过 ()
清空 ()
.判断循环首 (取反 (尾记录后 ()))
    相加 (读 (5), “[”, 读 (3), “]”).加入项目 ()
    跳过 ()
.判断循环尾 ()
关闭 ()


.子程序 添加收款列表, 空白型, , 
.局部变量 记录数, 整数型, , , 
.局部变量 循环变量, 整数型, , , 

打开 (相加 (运行目录, “\date\jbzl_xjck.edb”), “xjck”, , , , , )
到首记录 ()
赋值 (记录数, 取记录数 ())
重定义数组 (表格列表内容, 假, 记录数, 2)
.计次循环首 (记录数, 循环变量)
    赋值 (表格列表内容 [循环变量] [1], 读 (“编码”))
    表格列表内容.未知支持库函数_29 ( [循环变量] [1])
    赋值 (表格列表内容 [循环变量] [2], 读 (“全名”))
    
    跳过 ()
.计次循环尾 ()
关闭 ()


.子程序 _下拉选择框_字符输入, 整数型, , 
.参数 字符代码, 整数型, , 


.如果真 (等于 (字符代码, #回车键))
    被选择 ()
    赋值 (.可视, 假)
    .判断开始 (等于 (上一交点, ))
        赋值 (.可视, 假)
        获取焦点 ()
        返回 ()
    .判断 (等于 (上一交点, ))
        赋值 (.可视, 假)
        获取焦点 ()
        1.未知支持库函数_0 (1)
        返回 ()
    .默认
        
    .判断结束
    
.如果真结束


.子程序 _下拉选择框_被双击, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.可视, 假)
.判断开始 (等于 (上一交点, ))
    赋值 (.可视, 假)
    获取焦点 ()
    返回 ()
.判断 (等于 (上一交点, ))
    赋值 (.可视, 假)
    获取焦点 ()
    1.未知支持库函数_0 (1)
    返回 ()
.默认
    
.判断结束
赋值 (.可视, 假)


.子程序 _表格1_光标位置改变, 空白型, , 
.局部变量 行数, 整数型, , , 
.局部变量 金额合计, 双精度小数型, , , 
.局部变量 循环变量, 整数型, , , 

.如果真 (等于 (未知支持库函数_4 (), 3))
    赋值 (行数, 相减 (., 1))
    .计次循环首 (行数, 循环变量)
        赋值 (金额合计, 相加 (到数值 (到文本 (循环变量.未知支持库函数_10 (3))), 金额合计))
    .计次循环尾 ()
    赋值 (.内容, 到文本 (四舍五入 (金额合计, 2)))
.如果真结束
.如果真 (等于 (未知支持库函数_4 (), 1))
    .计次循环首 (取数组成员数 (其它收入项), 循环变量)
        .如果真 (不等于 (寻找文本 (其它收入项 [循环变量], .内容, , 假), -1))
            赋值 (.内容, 相加 (“【”, 1.未知支持库函数_10 (2), “】”, “收客户”, “【”, .内容, “】”, “其它收入∶”, .内容))
            1.未知支持库函数_9 (4, 1, “其它收入”)
            返回 ()
        .如果真结束
        
    .计次循环尾 ()
    赋值 (.内容, 相加 (“【”, 1.未知支持库函数_10 (2), “】”, “收客户”, “【”, .内容, “】”, “应收帐款∶”, .内容))
.如果真结束




.子程序 _表格1_结束编辑, 空白型, , 
.局部变量 成员数, 整数型, , , 
.局部变量 循环变量, 整数型, , , 
.局部变量 循环变量1, 整数型, , , 
.局部变量 金额合计, 双精度小数型, , , 
.局部变量 行数, 整数型, , , 

.如果真 (等于 (未知支持库函数_4 (), 1))
    赋值 (成员数, 取数组成员数 (表格列表内容))
    .计次循环首 (相除 (成员数, 2), 循环变量)
        .如果真 (等于 (未知支持库函数_3 ().未知支持库函数_10 (1), 表格列表内容 [循环变量] [1]))
            未知支持库函数_3 ().未知支持库函数_9 (2, 1, 表格列表内容 [循环变量] [2])
            打开 (相加 (运行目录, “\date\yyjl_ysyf.edb”), “ysyf”, , , , , )
            置当前库 (“ysyf”)
            .如果真 (查找 (等于 (读 (“往来单位”), .内容)))
                未知支持库函数_3 ().未知支持库函数_9 (3, 1, 到文本 (读 (“应收帐款”)))
                赋值 (应收账款, 读 (“应收帐款”))
            .如果真结束
            关闭 ()
        .如果真结束
        
    .计次循环尾 ()
    
    .计次循环首 (取数组成员数 (其它收入项), 循环变量1)
        .如果真 (不等于 (寻找文本 (其它收入项 [循环变量1], .内容, , 假), -1))
            赋值 (.内容, 相加 (“【”, 1.未知支持库函数_10 (2), “】”, “收客户”, “【”, .内容, “】”, “其它收入∶”, .内容))
            1.未知支持库函数_9 (4, 1, “其它收入”)
            返回 ()
        .如果真结束
        
    .计次循环尾 ()
    
    赋值 (.内容, 相加 (“【”, 1.未知支持库函数_10 (2), “】”, “收客户”, “【”, .内容, “】”, “应收帐款∶”, .内容))
.如果真结束
.如果真 (等于 (未知支持库函数_4 (), 3))
    赋值 (行数, 相减 (., 1))
    .计次循环首 (行数, 循环变量1)
        赋值 (金额合计, 相加 (到数值 (到文本 (循环变量1.未知支持库函数_10 (3))), 金额合计))
    .计次循环尾 ()
    赋值 (.内容, 到文本 (四舍五入 (金额合计, 2)))
    
.如果真结束


.子程序 _开新单按钮_被单击, 空白型, , 
.局部变量 行, 整数型, , , 

赋值 (., 假)
赋值 (., 真)
赋值 (., 1)
赋值 (., 2)
连续赋值 (“”, .内容, .内容, .内容, .内容)
.循环判断首 ()
    赋值 (行, 相加 (行, 1))
    行.未知支持库函数_9 (0, #., 到文本 (行))
.循环判断尾 (小于 (行, 相减 (., .)))
赋值 (.内容, 单据号 (到时间 (.内容)))


.子程序 _收款单_将被销毁, 空白型, , 
赋值 (单据类型, “”)

.子程序 _下拉选择框_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.可视, 假)

.窗口程序集 付款单, , , 

.程序集变量 完整行, 整数型, , "0", 
.程序集变量 不完整数据, 逻辑型, , "0", 
.程序集变量 上一交点, 编辑框, , , 
.程序集变量 付款单位变量, 文本型, , , 
.程序集变量 表格列表内容, 文本型, , "1,2", 
.程序集变量 应付帐款, 双精度小数型, , , 
.程序集变量 其它支出项, 文本型, , "0", 
.子程序 _付款单_创建完毕, 空白型, , 
.局部变量 行, 整数型, , , 
.局部变量 录单日期, 日期时间型, , , 
.局部变量 现行日期, 日期时间型, , , 
.局部变量 循环变量, 整数型, , , 
.局部变量 表格常量, 整数型, , , 
.局部变量 表格列标题, 文本型, , , 
.局部变量 表格列宽, 整数型, , , 
.局部变量 循环变量1, 整数型, , , 
.局部变量 标题宽, 整数型, , , 
.局部变量 完整行, 整数型, , "0", 
.局部变量 不完整数据, 逻辑型, , "0", 
.局部变量 上一交点, 编辑框, , , 
.局部变量 付款单位变量, 文本型, , , 
.局部变量 表格列表内容, 文本型, , "1,2", 
.局部变量 字段数, 整数型, , , 

.如果 (等于 (检查基本资料完整 (), 假))
    销毁 ()
    返回 ()
.否则
    
.如果结束
.如果真 (等于 (检查已建帐 (), 假))
    销毁 ()
    返回 ()
.如果真结束
全部关闭 ()

0.未知支持库函数_9 (0, #., “序号”)
打开 (相加 (运行目录, “\date\yyjl_fkd_ls.edb”), “lsfkd”, , , , , )
打开 (相加 (运行目录, “\date\yyjl_djsh.edb”), “djsh”, , , , , )
.如果真 (打开 (相加 (运行目录, “\date\jbzl_qtzc.edb”), “qtzc”, , , , , ))
    .计次循环首 (取记录数 (), 循环变量)
        加入成员 (其它支出项, 相加 (读 (“编码”), “[”, 读 (“其它支出名称”), “]”))
        跳过 ()
    .计次循环尾 ()
.如果真结束

置当前库 (“lsfkd”)
赋值 (字段数, 取字段数 ())
到尾记录 ()
赋值 (., 相减 (字段数, 5))
0.未知支持库函数_9 (0, #., “序号”)
0.未知支持库函数_32 (60)
.计次循环首 (字段数, 循环变量1)
    赋值 (表格列标题, 取字段名 (相加 (循环变量1, 5)))
    赋值 (标题宽, 取文本长度 (表格列标题))
    赋值 (表格列宽, 取字段尺寸 (相加 (循环变量1, 5)))
    0.未知支持库函数_9 (循环变量1, 1, 表格列标题)
    .如果真 (等于 (表格列宽, 2))
        赋值 (表格列宽, 4)
    .如果真结束
    .如果真 (小于 (表格列宽, 标题宽))
        赋值 (表格列宽, 标题宽)
    .如果真结束
    循环变量1.未知支持库函数_32 (相乘 (表格列宽, 10))
    0.未知支持库函数_25 (循环变量1, , , 2)
.计次循环尾 ()

.循环判断首 ()
    赋值 (行, 相加 (行, 1))
    行.未知支持库函数_9 (0, #., 到文本 (行))
.循环判断尾 (小于 (行, 相减 (., .)))

1.未知支持库函数_14 (#白色, #银白)
1.未知支持库函数_25 (3, 16, 11, 3)
赋值 (现行日期, 取日期 (取现行时间 ()))
赋值 (.内容, 到文本 (现行日期))
赋值 (录单日期, 现行日期)
获取焦点 ()
赋值 (.起始选择位置, -1)
添加付款列表 ()
1.未知支持库函数_30 (#.)
2.未知支持库函数_30 (#.)
3.未知支持库函数_30 (#.)
赋值 (.内容, 单据号 (到时间 (.内容)))



.子程序 _退出按钮_被单击, 空白型, , 
销毁 ()

.子程序 _表格1_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 光标行号, 整数型, , , 

.如果真 (并且 (等于 (键代码, #Tab键), 等于 (功能键状态, 1)))
    赋值 (.可视, 假)
    载入 (添加基本信息, , 真)
.如果真结束
.如果真 (等于 (键代码, #回车键))
    256.发送信息 (#回车键, 0)
    
.如果真结束

.如果真 (等于 (未知支持库函数_3 (), 相减 (., 1)))
    赋值 (光标行号, 未知支持库函数_3 ())
    .如果真 (并且 (等于 (键代码, #下光标键), 等于 (功能键状态, 1)))
        赋值 (., 相加 (., 1))
        相加 (未知支持库函数_3 (), 1).未知支持库函数_9 (0, 1, 到文本 (相加 (光标行号, 1)))
        刷新显示 ()
        
    .如果真结束
    
.如果真结束


.子程序 检查付款单完整性, 逻辑型, , 
.局部变量 有效行, 整数型, , , 
.局部变量 循环变量, 整数型, , , 
.局部变量 检查列, 文本型, , , 
.局部变量 检查列1, 整数型, , , 
.局部变量 有效数据行, 文本型, , , 
.局部变量 计数, 整数型, , , 

赋值 (有效行, 相减 (., 1))
重定义数组 (完整行, 假, 0)
重定义数组 (不完整数据, 假, 0)
赋值 (计数, 0)
.计次循环首 (有效行, 循环变量)
    赋值 (检查列, 到文本 (循环变量.未知支持库函数_10 (2)))
    赋值 (检查列1, 到数值 (循环变量.未知支持库函数_10 (3)))
    
    .如果 (并且 (不等于 (检查列, “”), 不等于 (检查列1, 0)))
        加入成员 (完整行, 循环变量)
    .否则
        
    .如果结束
    
.计次循环尾 ()
赋值 (计数, 取数组成员数 (完整行))
.如果真 (等于 (计数, 0))
    信息框 (“没有输入有效数据，不能保存！”, #警告图标, “保存提示”)
    返回 (假)
.如果真结束

.如果真 (并且 (不等于 (.内容, “”), 不等于 (.内容, “”)))
    .计次循环首 (计数, 循环变量)
        赋值 (有效数据行, 相加 (有效数据行, 到文本 (完整行 [循环变量]), “；”))
    .计次循环尾 ()
    赋值 (计数, 信息框 (相加 (“请注意有效数据行是  ”, 有效数据行), 相加 (#是否钮, 32), “保存提示信息”))
    
.如果真结束
.如果 (等于 (计数, 5))
    返回 (真)
.否则
    返回 (假)
.如果结束


.子程序 保存付款单输入, 空白型, , 
.局部变量 循环变量, 整数型, , , 
.局部变量 当前库, 文本型, , , 
.局部变量 单位内容, 文本型, , , 
.局部变量 单位编码, 文本型, , , 

赋值 (当前库, 取当前库 ())
写出单据编号 (.内容)
置当前库 (“lsfkd”)
到首记录 ()
.计次循环首 (取数组成员数 (完整行), 循环变量)
    加记录 (到时间 (.内容), .内容, .内容, .内容, .内容, 完整行.未知支持库函数_10 ( [循环变量], 1), 完整行.未知支持库函数_10 ( [循环变量], 2), 到数值 (完整行.未知支持库函数_10 ( [循环变量], 3)), 完整行.未知支持库函数_10 ( [循环变量], 4), )
.计次循环尾 ()

置当前库 (“djsh”)
加记录 (到时间 (.内容), .内容, , , , , 到数值 (.内容), , “付款单”, .内容, 1.未知支持库函数_10 (2), .内容, .内容)

置当前库 (当前库)


.子程序 _保存输入按钮_被单击, 空白型, , 
.局部变量 返回值, 整数型, , , 

.如果 (等于 (检查付款单完整性 (), 真))
    .如果真 (大于 (取数组成员数 (不完整数据), 0))
        赋值 (返回值, 信息框 (“请检查金额为0的行，如果确认为0，按[是]确定。”, 相加 (#是否钮, #警告图标), “警告”))
        .如果真 (等于 (返回值, 6))
            返回 ()
        .如果真结束
        
    .如果真结束
    赋值 (., 假)
    赋值 (., 真)
    保存付款单输入 ()
    .如果真 (等于 (_启动窗口..选中, 真))
        审核过帐 (真)
        .如果真 (取反 (置当前库 (“djsh”)))
            打开 (相加 (运行目录, “\date\yyjl_djsh.edb”), “djsh”, , , , , )
        .如果真结束
        删除 (等于 (读 (“审核”), 真))
        彻底删除 ()
        
    .如果真结束
    
.否则
    信息框 (“请把必要的内容添全!”, #错误图标, )
.如果结束


.子程序 _下拉选择框_列表项被选择, 空白型, , 

被选择 ()

.子程序 被选择, 空白型, , 
.局部变量 内容, 文本型, , , 
.局部变量 文本, 整数型, , , 
.局部变量 循环变量, 整数型, , , 

赋值 (内容, .取项目文本 (.现行选中项))
.如果真 (等于 (内容, “其它支出”))
    .如果真 (等于 (内容, “其它支出”))
        清空 ()
        .计次循环首 (取数组成员数 (其它支出项), 循环变量)
            其它支出项.加入项目 ( [循环变量], )
        .计次循环尾 ()
        返回 ()
    .如果真结束
    
.如果真结束

赋值 (文本, 寻找文本 (内容, “[”, , 假))
赋值 (内容, 取文本中间 (内容, 相加 (文本, 1), 相减 (取文本长度 (内容), 文本, 1)))
.判断开始 (等于 (上一交点, ))
    赋值 (.内容, 内容)
    赋值 (付款单位变量, .取项目文本 (.现行选中项))
.判断 (等于 (上一交点, ))
    赋值 (.内容, 内容)
.默认
    
.判断结束


.子程序 _收款单位_获得焦点, 空白型, , 
赋值 (上一交点, )
赋值 (.可视, 真)
赋值 (.顶边, 相加 (.顶边, .高度))
赋值 (.左边, .左边)
添加收款单位列表 ()

.子程序 _经手人_获得焦点, 空白型, , 
赋值 (上一交点, )
赋值 (.可视, 真)
赋值 (.顶边, 相加 (.顶边, .高度))
赋值 (.左边, .左边)
添加职员列表 ()


.子程序 _收款单位_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (等于 (键代码, #回车键))
    获取焦点 ()
.如果真结束


.子程序 _付款日期_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (等于 (键代码, #回车键))
    获取焦点 ()
.如果真结束


.子程序 _经手人_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (等于 (键代码, #回车键))
    获取焦点 ()
    1.未知支持库函数_0 (1)
.如果真结束


.子程序 _付款单位_内容被改变, 空白型, , 
.局部变量 选择行, 整数型, , , 

赋值 (选择行, .选择 (.内容))
.如果真 (大于 (选择行, -1))
    赋值 (.现行选中项, 选择行)
    获取焦点 ()
.如果真结束


.子程序 _经手人_内容被改变, 空白型, , 
.局部变量 选择行, 整数型, , , 

赋值 (选择行, .选择 (.内容))
.如果真 (大于 (选择行, -1))
    赋值 (.现行选中项, 选择行)
    获取焦点 ()
.如果真结束


.子程序 _下拉选择框_失去焦点, 空白型, , 
赋值 (.可视, 假)

.子程序 添加收款单位列表, 空白型, , 
打开 (相加 (运行目录, “\date\yyjl_ysyf.edb”), “ysyf”, , , , , )

置当前库 (“ysyf”)
清空 ()
“其它支出”.加入项目 ()
.判断循环首 (取反 (尾记录后 ()))
    .如果真 (不等于 (读 (4), 0))
        相加 (读 (1), “[”, 读 (2), “]”).加入项目 ()
        
    .如果真结束
    
    跳过 ()
.判断循环尾 ()
关闭 ()

.子程序 添加职员列表, 空白型, , 
打开 (相加 (运行目录, “\date\jbzl_bmzy.edb”), “bmzy”, , , , , )
置当前库 (“bmzy”)
到首记录 ()
跳过 ()
清空 ()
.判断循环首 (取反 (尾记录后 ()))
    相加 (读 (5), “[”, 读 (3), “]”).加入项目 ()
    跳过 ()
.判断循环尾 ()
关闭 ()


.子程序 添加付款列表, 空白型, , 
.局部变量 记录数, 整数型, , , 
.局部变量 循环变量, 整数型, , , 

打开 (相加 (运行目录, “\date\jbzl_xjck.edb”), “xjck”, , , , , )
到首记录 ()
赋值 (记录数, 取记录数 ())
重定义数组 (表格列表内容, 假, 记录数, 2)
.计次循环首 (记录数, 循环变量)
    赋值 (表格列表内容 [循环变量] [1], 读 (“编码”))
    表格列表内容.未知支持库函数_29 ( [循环变量] [1])
    赋值 (表格列表内容 [循环变量] [2], 读 (“全名”))
    
    跳过 ()
.计次循环尾 ()
关闭 ()


.子程序 _下拉选择框_字符输入, 整数型, , 
.参数 字符代码, 整数型, , 


.如果真 (等于 (字符代码, #回车键))
    被选择 ()
    赋值 (.可视, 假)
    .判断开始 (等于 (上一交点, ))
        赋值 (.可视, 假)
        获取焦点 ()
        返回 ()
    .判断 (等于 (上一交点, ))
        赋值 (.可视, 假)
        获取焦点 ()
        1.未知支持库函数_0 (1)
        返回 ()
    .默认
        
    .判断结束
    
.如果真结束


.子程序 _下拉选择框_被双击, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.可视, 假)
.判断开始 (等于 (上一交点, ))
    赋值 (.可视, 假)
    获取焦点 ()
    返回 ()
.判断 (等于 (上一交点, ))
    赋值 (.可视, 假)
    获取焦点 ()
    1.未知支持库函数_0 (1)
    返回 ()
.默认
    
.判断结束
赋值 (.可视, 假)


.子程序 _表格1_光标位置改变, 空白型, , 
.局部变量 a, 整数型, , , 
.局部变量 s, 整数型, , , 
.局部变量 行数, 整数型, , , 
.局部变量 金额合计, 双精度小数型, , , 
.局部变量 循环变量, 整数型, , , 

.如果真 (等于 (未知支持库函数_4 (), 3))
    赋值 (行数, 相减 (., 1))
    .计次循环首 (行数, 循环变量)
        赋值 (金额合计, 相加 (到数值 (到文本 (循环变量.未知支持库函数_10 (3))), 金额合计))
    .计次循环尾 ()
    赋值 (.内容, 到文本 (四舍五入 (金额合计, 2)))
.如果真结束
.如果真 (等于 (未知支持库函数_4 (), 1))
    .计次循环首 (取数组成员数 (其它支出项), 循环变量)
        .如果真 (不等于 (寻找文本 (其它支出项 [循环变量], .内容, , 假), -1))
            赋值 (.内容, 相加 (“【”, 1.未知支持库函数_10 (2), “】”, “付客户”, “【”, .内容, “】”, “其它支出∶”, .内容))
            1.未知支持库函数_9 (4, 1, “其它支出”)
            返回 ()
        .如果真结束
        
    .计次循环尾 ()
    赋值 (.内容, 相加 (“【”, 1.未知支持库函数_10 (2), “】”, “付客户”, “【”, .内容, “】”, “应付帐款∶”, .内容))
.如果真结束


.子程序 _表格1_结束编辑, 空白型, , 
.局部变量 成员数, 整数型, , , 
.局部变量 循环变量, 整数型, , , 
.局部变量 循环变量1, 整数型, , , 
.局部变量 金额合计, 双精度小数型, , , 
.局部变量 行数, 整数型, , , 

.如果真 (等于 (未知支持库函数_4 (), 1))
    赋值 (成员数, 取数组成员数 (表格列表内容))
    .计次循环首 (相除 (成员数, 2), 循环变量)
        .如果真 (等于 (未知支持库函数_3 ().未知支持库函数_10 (1), 表格列表内容 [循环变量] [1]))
            未知支持库函数_3 ().未知支持库函数_9 (2, 1, 表格列表内容 [循环变量] [2])
            打开 (相加 (运行目录, “\date\yyjl_ysyf.edb”), “ysyf”, , , , , )
            置当前库 (“ysyf”)
            .如果真 (查找 (等于 (读 (“往来单位”), .内容)))
                未知支持库函数_3 ().未知支持库函数_9 (3, 1, 到文本 (读 (“应付帐款”)))
                赋值 (应付帐款, 读 (“应付帐款”))
            .如果真结束
            关闭 ()
        .如果真结束
        
    .计次循环尾 ()
    .计次循环首 (取数组成员数 (其它支出项), 循环变量1)
        .如果真 (不等于 (寻找文本 (其它支出项 [循环变量1], .内容, , 假), -1))
            赋值 (.内容, 相加 (“【”, 1.未知支持库函数_10 (2), “】”, “付客户”, “【”, .内容, “】”, “其它支出∶”, .内容))
            1.未知支持库函数_9 (4, 1, “其它支出”)
            返回 ()
        .如果真结束
        
    .计次循环尾 ()
    
    赋值 (.内容, 相加 (“【”, 1.未知支持库函数_10 (2), “】”, “付客户”, “【”, .内容, “】”, “应付帐款∶”, .内容))
.如果真结束
.如果真 (等于 (未知支持库函数_4 (), 3))
    赋值 (行数, 相减 (., 1))
    .计次循环首 (行数, 循环变量1)
        赋值 (金额合计, 相加 (到数值 (到文本 (循环变量1.未知支持库函数_10 (3))), 金额合计))
    .计次循环尾 ()
    赋值 (.内容, 到文本 (四舍五入 (金额合计, 2)))
    
.如果真结束


.子程序 _表格1_字符输入, 整数型, , 
.参数 字符代码, 整数型, , 



.子程序 _开新单按钮_被单击, 空白型, , 
.局部变量 行, 整数型, , , 


赋值 (., 假)
赋值 (., 真)
赋值 (., 1)
赋值 (., 2)
连续赋值 (“”, .内容, .内容, .内容, .内容)
.循环判断首 ()
    赋值 (行, 相加 (行, 1))
    行.未知支持库函数_9 (0, #., 到文本 (行))
.循环判断尾 (小于 (行, 相减 (., .)))
赋值 (.内容, 单据号 (到时间 (.内容)))


.子程序 _付款单_将被销毁, 空白型, , 
赋值 (单据类型, “”)

.子程序 _下拉选择框_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.可视, 假)


.子程序 _表格1_鼠标右键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 



.窗口程序集 转帐, , , 

.程序集变量 上一交点, 编辑框, , , 
.程序集变量 完整行, 整数型, , "0", 
.程序集变量 不完整数据, 整数型, , "0", 
.程序集变量 表格列表内容, 文本型, , "0", 
.子程序 _转帐_创建完毕, 空白型, , 
.局部变量 行, 整数型, , , 
.局部变量 现行日期, 日期时间型, , , 

.如果 (等于 (检查基本资料完整 (), 假))
    销毁 ()
    返回 ()
.否则
    
.如果结束
.如果真 (不等于 (已建帐, 1))
    信息框 (相加 (“您的期初建帐是否已完成？记第一笔后，期初额不能再输入或更改。”, #换行符, #换行符, “记帐工作意味着已进入正轨，是否继续？”), 相加 (#警告图标, #确认取消钮), “警告”)
.如果真结束
全部关闭 ()
赋值 (现行日期, 取日期 (取现行时间 ()))
赋值 (.内容, 到文本 (现行日期))
赋值 (.内容, 单据号 (到时间 (.内容)))
0.未知支持库函数_9 (0, #., “序号”)
0.未知支持库函数_32 (60)
1.未知支持库函数_32 (100)
2.未知支持库函数_32 (150)
3.未知支持库函数_32 (100)
4.未知支持库函数_32 (300)
1.未知支持库函数_14 (#白色, #银白)
1.未知支持库函数_25 (3, , 1, 1)

.循环判断首 ()
    赋值 (行, 相加 (行, 1))
    行.未知支持库函数_9 (0, #., 到文本 (行))
.循环判断尾 (小于 (行, 相减 (., .)))
1.未知支持库函数_25 (3, , 1, 1)
0.未知支持库函数_25 (1, , 4, 2)

0.未知支持库函数_9 (1, 1, “收款帐户编码”)
0.未知支持库函数_9 (2, 1, “收款帐户名称”)
0.未知支持库函数_9 (3, 1, “收 款 金 额”)
0.未知支持库函数_9 (4, 1, “备          注”)
1.未知支持库函数_30 (#.)
2.未知支持库函数_30 (#.)
3.未知支持库函数_30 (#.)
添加支帐户列表 ()
获取焦点 ()
赋值 (.起始选择位置, -1)


.子程序 _合计金额_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

返回 (假)

.子程序 _经手人_获得焦点, 空白型, , 
赋值 (上一交点, )
赋值 (.可视, 真)
赋值 (.顶边, 相加 (.顶边, .高度))
赋值 (.左边, .左边)
添加职员 ()


.子程序 _付款帐户_获得焦点, 空白型, , 
赋值 (上一交点, )
赋值 (.可视, 真)
赋值 (.顶边, 相加 (.顶边, .高度))
赋值 (.左边, .左边)
添加支帐户列表 ()

.子程序 _经手人_内容被改变, 空白型, , 
.局部变量 选择行, 整数型, , , 

赋值 (选择行, .选择 (.内容))
.如果真 (大于 (选择行, -1))
    赋值 (.现行选中项, 选择行)
    获取焦点 ()
.如果真结束


.子程序 _付款帐户_内容被改变, 空白型, , 
.局部变量 选择行, 整数型, , , 

赋值 (选择行, .选择 (.内容))
.如果真 (大于 (选择行, -1))
    赋值 (.现行选中项, 选择行)
    获取焦点 ()
.如果真结束



.子程序 _下拉选择框_失去焦点, 空白型, , 
赋值 (.可视, 假)

.子程序 _下拉选择框_字符输入, 整数型, , 
.参数 字符代码, 整数型, , 

.如果真 (等于 (字符代码, #回车键))
    
    赋值 (.可视, 假)
    .判断开始 (等于 (上一交点, ))
        赋值 (.可视, 假)
        获取焦点 ()
        返回 ()
    .判断 (等于 (上一交点, ))
        赋值 (.可视, 假)
        获取焦点 ()
        1.未知支持库函数_0 (1)
        返回 ()
    .默认
        
    .判断结束
    
.如果真结束


.子程序 _下拉选择框_被双击, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.判断开始 (等于 (上一交点, ))
    赋值 (.可视, 假)
    
    返回 ()
.判断 (等于 (上一交点, ))
    赋值 (.可视, 假)
    获取焦点 ()
    1.未知支持库函数_0 (1)
    返回 ()
.默认
    
.判断结束
赋值 (.可视, 假)


.子程序 _下拉选择框_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.可视, 假)

.子程序 _表格1_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 光标行号, 整数型, , , 

.如果真 (并且 (等于 (键代码, #Tab键), 等于 (功能键状态, 1)))
    载入 (添加基本信息, , 真)
.如果真结束

.如果真 (等于 (未知支持库函数_3 (), 相减 (., 1)))
    赋值 (光标行号, 未知支持库函数_3 ())
    .如果真 (并且 (等于 (键代码, #下光标键), 等于 (功能键状态, 1)))
        赋值 (., 相加 (., 1))
        相加 (未知支持库函数_3 (), 1).未知支持库函数_9 (0, 1, 到文本 (相加 (光标行号, 1)))
        刷新显示 ()
    .如果真结束
    
.如果真结束


.子程序 _退出按钮_被单击, 空白型, , 
销毁 ()



.子程序 数据完整检查, 逻辑型, , 
.局部变量 有效行, 整数型, , , 
.局部变量 循环变量, 整数型, , , 
.局部变量 检查列, 文本型, , , 
.局部变量 检查列1, 整数型, , , 
.局部变量 有效数据行, 文本型, , , 
.局部变量 计数, 整数型, , , 


赋值 (有效行, 相减 (., 1))
重定义数组 (完整行, 假, 0)
重定义数组 (不完整数据, 假, 0)
赋值 (计数, 0)
.计次循环首 (有效行, 循环变量)
    赋值 (检查列, 到文本 (循环变量.未知支持库函数_10 (2)))
    赋值 (检查列1, 到数值 (循环变量.未知支持库函数_10 (3)))
    
    .如果 (并且 (不等于 (检查列, “”), 不等于 (检查列1, 0)))
        加入成员 (完整行, 循环变量)
    .否则
        
    .如果结束
    
.计次循环尾 ()
赋值 (计数, 取数组成员数 (完整行))
.如果真 (等于 (计数, 0))
    信息框 (“没有输入有效数据，不能保存！”, #警告图标, “保存提示”)
    返回 (假)
.如果真结束

.如果真 (并且 (不等于 (.内容, “”), 不等于 (.内容, “”)))
    .计次循环首 (计数, 循环变量)
        赋值 (有效数据行, 相加 (有效数据行, 到文本 (完整行 [循环变量]), “；”))
    .计次循环尾 ()
    赋值 (计数, 信息框 (相加 (“请注意有效数据行是  ”, 有效数据行), 相加 (#是否钮, 32), “保存提示信息”))
    
.如果真结束
.如果 (等于 (计数, 5))
    返回 (真)
.否则
    返回 (假)
.如果结束


.子程序 _保存输入按钮_被单击, 空白型, , 
.局部变量 返回值, 整数型, , , 

.如果 (等于 (数据完整检查 (), 真))
    .如果真 (大于 (取数组成员数 (不完整数据), 0))
        赋值 (返回值, 信息框 (“请检查金额为0的行，如果确认为0，按[是]确定。”, 相加 (#是否钮, #警告图标), “警告”))
        .如果真 (等于 (返回值, 6))
            返回 ()
        .如果真结束
        
    .如果真结束
    
    保存转帐 ()
.否则
    信息框 (“请把必要的内容添全!”, #错误图标, )
.如果结束



.子程序 保存转帐, 空白型, , 
.局部变量 循环变量, 整数型, , , 

打开 (相加 (运行目录, “\date\jbzl_xjck.edb”), “xjck”, , , , , )
置当前库 (“xjck”)
到首记录 ()
查找 (等于 (读 (“全名”), .内容))
.如果真 (大于 (到数值 (.内容), 读 (“结存金额”)))
    信息框 (相加 (“【”, .内容, “】”, “没有足够的金额供转帐。”), #错误图标, “转帐金额错误”)
    返回 ()
.如果真结束
赋值 (., 假)
赋值 (., 真)

写出单据编号 (.内容)
置当前库 (“xjck”)
到首记录 ()

.计次循环首 (取数组成员数 (完整行), 循环变量)
    
    替换 (等于 (读 (“全名”), 完整行.未知支持库函数_10 ( [循环变量], 2)), “结存金额”, 相加 (到数值 (完整行.未知支持库函数_10 ( [循环变量], 3)), 读 (“结存金额”)))
    替换 (等于 (读 (“全名”), 完整行.未知支持库函数_10 ( [循环变量], 2)), “收入金额”, 相加 (到数值 (完整行.未知支持库函数_10 ( [循环变量], 3)), 读 (“收入金额”)))
    .如果真 (替换 (等于 (读 (“全名”), .内容), “结存金额”, 相减 (读 (“结存金额”), 到数值 (完整行.未知支持库函数_10 ( [循环变量], 3)))))
        替换 (等于 (读 (“全名”), .内容), “支出金额”, 相加 (读 (“支出金额”), 到数值 (完整行.未知支持库函数_10 ( [循环变量], 3))))
        
    .如果真结束
    
.计次循环尾 ()
关闭 ()

.子程序 添加支帐户列表, 空白型, , 
.局部变量 循环变量, 整数型, , , 
.局部变量 记录数, 整数型, , , 

打开 (相加 (运行目录, “\date\jbzl_xjck.edb”), “xjck”, , , , , )

.如果真 (置当前库 (“xjck”))
.如果真结束
清空 ()

到首记录 ()
赋值 (记录数, 取记录数 ())
重定义数组 (表格列表内容, 假, 记录数, 2)
.计次循环首 (记录数, 循环变量)
    赋值 (表格列表内容 [循环变量] [1], 读 (“编码”))
    赋值 (表格列表内容 [循环变量] [2], 读 (“全名”))
    
    相加 (读 (1), “[”, 读 (2), “]”).加入项目 ()
    
    跳过 ()
.计次循环尾 ()
关闭 ()

.子程序 添加收帐户列表, 空白型, , 
.局部变量 记录数, 整数型, , , 
.局部变量 循环变量, 整数型, , , 

打开 (相加 (运行目录, “\date\jbzl_xjck.edb”), “xjck”, , , , , )
到首记录 ()
赋值 (记录数, 取记录数 ())
未知支持库函数_28 ()
1.未知支持库函数_30 (#.)
1.未知支持库函数_30 (#.)

.计次循环首 (记录数, 循环变量)
    .如果真 (不等于 (读 (“全名”), .内容))
        1.未知支持库函数_45 (读 (1))
        
    .如果真结束
    跳过 ()
.计次循环尾 ()
关闭 ()

.子程序 _下拉选择框_列表项被选择, 空白型, , 
.局部变量 内容, 文本型, , , 
.局部变量 文本, 整数型, , , 

赋值 (内容, .取项目文本 (.现行选中项))
赋值 (文本, 寻找文本 (内容, “[”, , 假))
赋值 (内容, 取文本中间 (内容, 相加 (文本, 1), 相减 (取文本长度 (内容), 文本, 1)))
.判断开始 (等于 (上一交点, ))
    赋值 (.内容, 内容)
    未知支持库函数_28 ()
    添加收帐户列表 ()
    
    获取焦点 ()
.判断 (等于 (上一交点, ))
    赋值 (.内容, 内容)
.默认
    获取焦点 ()
.判断结束


.子程序 添加职员, 空白型, , 
打开 (相加 (运行目录, “\date\jbzl_bmzy.edb”), “bmzy”, , , , , )
置当前库 (“bmzy”)
到首记录 ()
跳过 ()
清空 ()
.判断循环首 (取反 (尾记录后 ()))
    相加 (读 (5), “[”, 读 (3), “]”).加入项目 ()
    跳过 ()
.判断循环尾 ()
关闭 ()


.子程序 _表格1_结束编辑, 空白型, , 
.局部变量 成员数, 整数型, , , 
.局部变量 循环变量, 整数型, , , 
.局部变量 循环变量1, 整数型, , , 
.局部变量 金额合计, 双精度小数型, , , 
.局部变量 行数, 整数型, , , 
.局部变量 结存金额, 双精度小数型, , , 
.局部变量 已支金额, 双精度小数型, , , 

赋值 (结存金额, 0)
.如果真 (等于 (未知支持库函数_4 (), 1))
    
    赋值 (成员数, 取数组成员数 (表格列表内容))
    .计次循环首 (相除 (成员数, 2), 循环变量)
        .如果真 (等于 (未知支持库函数_3 ().未知支持库函数_10 (1), 表格列表内容 [循环变量] [1]))
            未知支持库函数_3 ().未知支持库函数_9 (2, 1, 表格列表内容 [循环变量] [2])
            打开 (相加 (运行目录, “\date\jbzl_xjck.edb”), “xjck”, , , , , )
            置当前库 (“xjck”)
            到首记录 ()
            .如果真 (查找 (等于 (读 (“全名”), .内容)))
                未知支持库函数_3 ().未知支持库函数_9 (3, 1, 到文本 (读 (“结存金额”)))
            .如果真结束
            关闭 ()
        .如果真结束
        
    .计次循环尾 ()
    赋值 (.内容, 相加 (“从【”, .内容, “】”, “帐户转款到”, “【”, 1.未知支持库函数_10 (2), “】帐户：”, .内容))
.如果真结束
.如果真 (等于 (未知支持库函数_4 (), 3))
    赋值 (行数, 相减 (., 1))
    .计次循环首 (行数, 循环变量1)
        赋值 (金额合计, 相加 (到数值 (到文本 (循环变量1.未知支持库函数_10 (3))), 金额合计))
    .计次循环尾 ()
    赋值 (.内容, 到文本 (四舍五入 (金额合计, 2)))
.如果真结束


.子程序 _录单日期_失去焦点, 空白型, , 
获取焦点 ()

.子程序 _表格1_获得焦点, 空白型, , 
赋值 (.标题, 相加 (“付款帐户：【”, .内容, “】”))

.子程序 _表格1_光标位置改变, 空白型, , 
.局部变量 行数, 整数型, , , 
.局部变量 循环变量, 整数型, , , 
.局部变量 金额合计, 双精度小数型, , , 

.如果真 (等于 (未知支持库函数_4 (), 3))
    赋值 (行数, 相减 (., 1))
    .计次循环首 (行数, 循环变量)
        赋值 (金额合计, 相加 (到数值 (到文本 (循环变量.未知支持库函数_10 (3))), 金额合计))
    .计次循环尾 ()
    赋值 (.内容, 到文本 (四舍五入 (金额合计, 2)))
    
.如果真结束


.子程序 _开新单按钮_被单击, 空白型, , 
.局部变量 行, 整数型, , , 


赋值 (., 假)
赋值 (., 真)
赋值 (., 1)
赋值 (., 8)
连续赋值 (“”, .内容, .内容, .内容, .内容)
.循环判断首 ()
    赋值 (行, 相加 (行, 1))
    行.未知支持库函数_9 (0, #., 到文本 (行))
.循环判断尾 (小于 (行, 相减 (., .)))
赋值 (.内容, 单据号 (到时间 (.内容)))
未知支持库函数_28 ()

.窗口程序集 商品转库, , , 

.程序集变量 上一交点, 编辑框, , , 
.程序集变量 完整行, 整数型, , "0", 
.程序集变量 不完整数据, 整数型, , "0", 
.程序集变量 表格列表内容, 文本型, , "0", 
.程序集变量 编码名称, 文本型, , "1,4", 
.子程序 _商品转库_创建完毕, 空白型, , 
.局部变量 行, 整数型, , , 
.局部变量 现行日期, 日期时间型, , , 

.如果 (等于 (检查基本资料完整 (), 假))
    销毁 ()
    返回 ()
.否则
    
.如果结束
.如果真 (不等于 (已建帐, 1))
    信息框 (相加 (“您的期初建帐是否已完成？记第一笔后，期初额不能再输入或更改。”, #换行符, #换行符, “记帐工作意味着已进入正轨，是否继续？”), 相加 (#警告图标, #确认取消钮), “警告”)
.如果真结束

赋值 (现行日期, 取日期 (取现行时间 ()))
赋值 (.内容, 到文本 (现行日期))
赋值 (.内容, 单据号 (到时间 (.内容)))
0.未知支持库函数_9 (0, #., “序号”)
0.未知支持库函数_32 (60)
1.未知支持库函数_32 (60)
2.未知支持库函数_32 (150)
3.未知支持库函数_32 (70)
4.未知支持库函数_32 (70)
5.未知支持库函数_32 (100)

1.未知支持库函数_14 (#白色, #银白)
1.未知支持库函数_25 (3, , 1, 1)

.循环判断首 ()
    赋值 (行, 相加 (行, 1))
    行.未知支持库函数_9 (0, #., 到文本 (行))
.循环判断尾 (小于 (行, 相减 (., .)))
0.未知支持库函数_25 (0, 0, 0, 1)
0.未知支持库函数_25 (1, 0, 5, 2)

1.未知支持库函数_25 (1, 7, 3, 1)
1.未知支持库函数_25 (3, 7, 5, 3)

0.未知支持库函数_9 (1, 1, “代码”)
0.未知支持库函数_9 (2, 1, “商品全称”)
0.未知支持库函数_9 (3, 1, “数量”)
0.未知支持库函数_9 (4, 1, “单价”)
0.未知支持库函数_9 (5, 1, “金额”)

1.未知支持库函数_30 (#.)
2.未知支持库函数_30 (#.)
3.未知支持库函数_30 (#.)
4.未知支持库函数_30 (#.)
5.未知支持库函数_30 (#.)
添加转入商品列表 ()
获取焦点 ()
赋值 (.起始选择位置, -1)


.子程序 添加转入商品列表, 空白型, , 
.局部变量 记录数, 整数型, , , 
.局部变量 循环变量, 整数型, , , 
.局部变量 仓库, 文本型, , , 
.局部变量 数量, 双精度小数型, , , 

打开 (相加 (运行目录, “\date\yyjl_kc.edb”), “kcsp”, , , , , )
到首记录 ()
赋值 (记录数, 取记录数 ())
未知支持库函数_28 ()
1.未知支持库函数_30 (#.)
1.未知支持库函数_30 (#.)
重定义数组 (编码名称, 假, 记录数, 45)

.计次循环首 (记录数, 循环变量)
    .如果真 (等于 (读 (“仓库名称”), .内容))
        
        1.未知支持库函数_45 (读 (“商品代码”))
        赋值 (编码名称 [循环变量] [1], 读 (“商品代码”))
        2.未知支持库函数_45 (读 (“商品全称”))
        赋值 (编码名称 [循环变量] [2], 读 (“商品全称”))
        赋值 (编码名称 [循环变量] [4], 到文本 (读 (“单价”)))
        赋值 (编码名称 [循环变量] [3], 到文本 (读 (“结存数量”)))
        
    .如果真结束
    跳过 ()
.计次循环尾 ()
关闭 ()

.子程序 _合计金额_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

返回 (假)

.子程序 _经手人_获得焦点, 空白型, , 
赋值 (上一交点, )
赋值 (.可视, 真)
赋值 (.顶边, 相加 (.顶边, .高度))
赋值 (.左边, .左边)
添加职员 ()


.子程序 _转出仓库_获得焦点, 空白型, , 
赋值 (上一交点, )
赋值 (.可视, 真)
赋值 (.顶边, 相加 (.顶边, .高度))
赋值 (.左边, .左边)
添加转出列表 ()

.子程序 _经手人_内容被改变, 空白型, , 
.局部变量 选择行, 整数型, , , 

赋值 (选择行, .选择 (.内容))
.如果真 (大于 (选择行, -1))
    赋值 (.现行选中项, 选择行)
    获取焦点 ()
.如果真结束


.子程序 _转出仓库_内容被改变, 空白型, , 
.局部变量 选择行, 整数型, , , 

赋值 (选择行, .选择 (.内容))
.如果真 (大于 (选择行, -1))
    赋值 (.现行选中项, 选择行)
    获取焦点 ()
.如果真结束



.子程序 _下拉选择框_失去焦点, 空白型, , 
赋值 (.可视, 假)

.子程序 _下拉选择框_字符输入, 整数型, , 
.参数 字符代码, 整数型, , 

.如果真 (等于 (字符代码, #回车键))
    列表项被选择 ()
    赋值 (.可视, 假)
    .判断开始 (等于 (上一交点, ))
        赋值 (.可视, 假)
        获取焦点 ()
        返回 ()
    .判断 (等于 (上一交点, ))
        赋值 (.可视, 假)
        获取焦点 ()
        1.未知支持库函数_0 (1)
        返回 ()
    .判断 (等于 (上一交点, ))
        赋值 (.可视, 假)
        获取焦点 ()
        返回 ()
    .默认
        
    .判断结束
    
.如果真结束


.子程序 _下拉选择框_被双击, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.判断开始 (等于 (上一交点, ))
    赋值 (.可视, 假)
    获取焦点 ()
    返回 ()
.判断 (等于 (上一交点, ))
    赋值 (.可视, 假)
    获取焦点 ()
    返回 ()
.判断 (等于 (上一交点, ))
    赋值 (.可视, 假)
    获取焦点 ()
    1.未知支持库函数_0 (1)
    返回 ()
.默认
    
.判断结束
赋值 (.可视, 假)


.子程序 _下拉选择框_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.可视, 假)

.子程序 _表格1_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 光标行号, 整数型, , , 

.如果真 (并且 (等于 (键代码, #Tab键), 等于 (功能键状态, 1)))
    赋值 (.可视, 假)
    
    载入 (添加基本信息, , 真)
.如果真结束

.如果真 (等于 (未知支持库函数_3 (), 相减 (., 1)))
    赋值 (光标行号, 未知支持库函数_3 ())
    .如果真 (并且 (等于 (键代码, #下光标键), 等于 (功能键状态, 1)))
        赋值 (., 相加 (., 1))
        相加 (未知支持库函数_3 (), 1).未知支持库函数_9 (0, 1, 到文本 (相加 (光标行号, 1)))
        刷新显示 ()
    .如果真结束
    
.如果真结束


.子程序 _退出按钮_被单击, 空白型, , 
销毁 ()



.子程序 表格全称转编码, 文本型, , 
.参数 全称, 文本型, , 

.局部变量 循环变量, 整数型, , , 
.局部变量 成员数, 整数型, , , 

赋值 (成员数, 取数组成员数 (编码名称))
.计次循环首 (相除 (成员数, 2), 循环变量)
    .如果真 (等于 (全称, 编码名称 [循环变量] [2]))
        返回 (相加 (编码名称 [循环变量] [1], “;”, 编码名称 [循环变量] [3], “;”, 编码名称 [循环变量] [4]))
    .如果真结束
    
.计次循环尾 ()
返回 (“”)

.子程序 表格编码转全称, 文本型, , 
.参数 编码, 文本型, , 

.局部变量 循环变量, 整数型, , , 
.局部变量 成员数, 整数型, , , 
.局部变量 返回文本, 文本型, , , 

赋值 (成员数, 取数组成员数 (编码名称))
.计次循环首 (相除 (成员数, 2), 循环变量)
    .如果真 (等于 (编码, 编码名称 [循环变量] [1]))
        返回 (相加 (编码名称 [循环变量] [2], “;”, 编码名称 [循环变量] [3], “;”, 编码名称 [循环变量] [4]))
    .如果真结束
    
.计次循环尾 ()
返回 (“”)

.子程序 数据完整检查, 逻辑型, , 
.局部变量 有效行, 整数型, , , 
.局部变量 循环变量, 整数型, , , 
.局部变量 检查列, 文本型, , , 
.局部变量 检查列1, 整数型, , , 
.局部变量 有效数据行, 文本型, , , 
.局部变量 计数, 整数型, , , 


赋值 (有效行, 相减 (., 1))
重定义数组 (完整行, 假, 0)
重定义数组 (不完整数据, 假, 0)
赋值 (计数, 0)
.计次循环首 (有效行, 循环变量)
    赋值 (检查列, 到文本 (循环变量.未知支持库函数_10 (2)))
    赋值 (检查列1, 到数值 (循环变量.未知支持库函数_10 (3)))
    .如果 (并且 (不等于 (检查列, “”), 不等于 (检查列1, 0)))
        加入成员 (完整行, 循环变量)
    .否则
        
    .如果结束
    
.计次循环尾 ()
赋值 (计数, 取数组成员数 (完整行))
.如果真 (等于 (计数, 0))
    信息框 (“没有输入有效数据，不能保存！”, #警告图标, “保存提示”)
    返回 (假)
.如果真结束

.如果 (并且 (不等于 (.内容, “”), 不等于 (.内容, “”), 不等于 (.内容, “”)))
    .计次循环首 (计数, 循环变量)
        赋值 (有效数据行, 相加 (有效数据行, 到文本 (完整行 [循环变量]), “；”))
    .计次循环尾 ()
    赋值 (计数, 信息框 (相加 (“请注意有效数据行是  ”, 有效数据行), 相加 (#是否钮, 32), “保存提示信息”))
    .如果 (等于 (计数, 5))
        返回 (真)
    .否则
        返回 (假)
    .如果结束
    
.否则
    信息框 (“请把必要的内容添全!”, #错误图标, )
    返回 (假)
.如果结束



.子程序 _保存输入按钮_被单击, 空白型, , 
.局部变量 返回值, 整数型, , , 

.如果 (等于 (数据完整检查 (), 真))
    .如果真 (大于 (取数组成员数 (不完整数据), 0))
        赋值 (返回值, 信息框 (“请检查金额为0的行，如果确认为0，按[是]确定。”, 相加 (#是否钮, #警告图标), “警告”))
        .如果真 (等于 (返回值, 6))
            返回 ()
        .如果真结束
        
    .如果真结束
    赋值 (., 假)
    赋值 (., 真)
    
    保存转库 ()
.否则
    
.如果结束



.子程序 添加转出列表, 空白型, , 
.局部变量 循环变量, 整数型, , , 
.局部变量 记录数, 整数型, , , 

打开 (相加 (运行目录, “\date\jbzl_ck.edb”), “ckmc”, , , , , )

置当前库 (“ckmc”)
清空 ()
到首记录 ()
赋值 (记录数, 取记录数 ())
重定义数组 (表格列表内容, 假, 记录数, 2)
.计次循环首 (记录数, 循环变量)
    赋值 (表格列表内容 [循环变量] [1], 读 (“仓库编号”))
    赋值 (表格列表内容 [循环变量] [2], 读 (“仓库全称”))
    
    相加 (读 (“仓库编号”), “[”, 读 (“仓库全称”), “]”).加入项目 ()
    
    跳过 ()
.计次循环尾 ()
关闭 ()

.子程序 添加转入列表, 空白型, , 
.局部变量 记录数, 整数型, , , 
.局部变量 循环变量, 整数型, , , 

打开 (相加 (运行目录, “\date\jbzl_ck.edb”), “ckmc”, , , , , )
到首记录 ()
赋值 (记录数, 取记录数 ())
清空 ()
.计次循环首 (记录数, 循环变量)
    .如果真 (不等于 (读 (“仓库全称”), .内容))
        相加 (读 (“仓库编号”), “[”, 读 (“仓库全称”), “]”).加入项目 ()
    .如果真结束
    跳过 ()
.计次循环尾 ()
关闭 ()

.子程序 列表项被选择, 空白型, , 
.局部变量 内容, 文本型, , , 
.局部变量 文本, 整数型, , , 
.局部变量 匿名局部变量_3989, 空白型, , , 

赋值 (内容, .取项目文本 (.现行选中项))
赋值 (文本, 寻找文本 (内容, “[”, , 假))
赋值 (内容, 取文本中间 (内容, 相加 (文本, 1), 相减 (取文本长度 (内容), 文本, 1)))
.判断开始 (等于 (上一交点, ))
    赋值 (.内容, 内容)
.判断 (等于 (上一交点, ))
    赋值 (.内容, 内容)
    .如果真 (等于 (.内容, .内容))
        信息框 (“转入仓库与转出仓库相同，没有意义。请重新选择仓库名。”, #错误图标, “仓库名错误”)
        赋值 (.内容, “”)
    .如果真结束
    
.判断 (等于 (上一交点, ))
    赋值 (.内容, 内容)
.默认
    
.判断结束


.子程序 添加职员, 空白型, , 
打开 (相加 (运行目录, “\date\jbzl_bmzy.edb”), “bmzy”, , , , , )
置当前库 (“bmzy”)
到首记录 ()
跳过 ()
清空 ()
.判断循环首 (取反 (尾记录后 ()))
    相加 (读 (5), “[”, 读 (3), “]”).加入项目 ()
    跳过 ()
.判断循环尾 ()
关闭 ()


.子程序 _表格1_结束编辑, 空白型, , 
.局部变量 循环变量, 整数型, , , 
.局部变量 金额合计, 双精度小数型, , , 
.局部变量 数量合计, 双精度小数型, , , 
.局部变量 行数, 整数型, , , 
.局部变量 结存金额, 双精度小数型, , , 
.局部变量 已支金额, 双精度小数型, , , 
.局部变量 编码转全称数值, 文本型, , "3", 

赋值 (结存金额, 0)
.判断开始 (等于 (未知支持库函数_4 (), 1))
    赋值 (编码转全称数值, 分割文本 (表格编码转全称 (未知支持库函数_3 ().未知支持库函数_10 (1)), “;”, 3))
    .计次循环首 (取数组成员数 (编码转全称数值), 循环变量)
        未知支持库函数_3 ().未知支持库函数_9 (相加 (循环变量, 1), 1, 编码转全称数值 [循环变量])
        
    .计次循环尾 ()
    
    赋值 (.内容, 相加 (“从【”, .内容, “】”, “转出”, 未知支持库函数_3 ().未知支持库函数_10 (2), “等商品，到【”, .内容, “】：”, .内容))
    256.投递信息 (位与 (39, 255), 1)
    
    
.判断 (等于 (未知支持库函数_4 (), 2))
    未知支持库函数_3 ().未知支持库函数_9 (1, 1, 表格全称转编码 (未知支持库函数_3 ().未知支持库函数_10 (2)))
    
.判断 (等于 (未知支持库函数_4 (), 5))
    赋值 (行数, 相减 (., 1))
    .计次循环首 (行数, 循环变量)
        赋值 (金额合计, 相加 (到数值 (到文本 (循环变量.未知支持库函数_10 (5))), 金额合计))
    .计次循环尾 ()
    赋值 (.内容, 到文本 (四舍五入 (金额合计, 2)))
    
.判断 (等于 (未知支持库函数_4 (), 3))
    未知支持库函数_3 ().未知支持库函数_9 (5, 1, 到文本 (相乘 (到数值 (未知支持库函数_3 ().未知支持库函数_10 (3)), 到数值 (未知支持库函数_3 ().未知支持库函数_10 (4)))))
    赋值 (行数, 相减 (., 1))
    .计次循环首 (行数, 循环变量)
        赋值 (数量合计, 相加 (到数值 (到文本 (循环变量.未知支持库函数_10 (3))), 数量合计))
        赋值 (金额合计, 相加 (到数值 (到文本 (循环变量.未知支持库函数_10 (5))), 金额合计))
        
    .计次循环尾 ()
    赋值 (.内容, 到文本 (四舍五入 (数量合计, 2)))
    赋值 (.内容, 到文本 (四舍五入 (金额合计, 2)))
    
.判断 (等于 (未知支持库函数_4 (), 4))
    未知支持库函数_3 ().未知支持库函数_9 (5, 1, 到文本 (相乘 (到数值 (未知支持库函数_3 ().未知支持库函数_10 (3)), 到数值 (未知支持库函数_3 ().未知支持库函数_10 (4)))))
    赋值 (行数, 相减 (., 1))
    .计次循环首 (行数, 循环变量)
        赋值 (金额合计, 相加 (到数值 (到文本 (循环变量.未知支持库函数_10 (5))), 金额合计))
    .计次循环尾 ()
    赋值 (.内容, 到文本 (四舍五入 (金额合计, 2)))
    
.默认
    
.判断结束


.子程序 保存转库, 空白型, , 
.局部变量 行数, 整数型, , , 
.局部变量 循环变量, 整数型, , , 
.局部变量 单位, 文本型, , , 
.局部变量 型号, 文本型, , , 
.局部变量 规格, 文本型, , , 
.局部变量 产地, 文本型, , , 
.局部变量 匿名局部变量_4110, 空白型, , , 
.局部变量 匿名局部变量_4111, 空白型, , , 

赋值 (行数, 相减 (., 1))
打开 (相加 (运行目录, “\date\yyjl_kc.edb”), , , , , , )
.计次循环首 (行数, 循环变量)
    到首记录 ()
    .如果真 (查找 (并且 (等于 (读 (“仓库名称”), .内容), 等于 (读 (“商品全称”), 循环变量.未知支持库函数_10 (2)))))
        修改 (相加 (读 (“销售数量”), 到数值 (循环变量.未知支持库函数_10 (3))), 相减 (读 (“结存数量”), 到数值 (循环变量.未知支持库函数_10 (3))), , , )
        修改 (到数值 (四舍五入 (相乘 (读 (“单价”), 读 (“结存数量”)), )), , )
        赋值 (单位, 读 (“单位”))
        赋值 (型号, 读 (“型号”))
        赋值 (规格, 读 (“规格”))
        赋值 (产地, 读 (“产地”))
        
        到首记录 () ' 转入仓库
        .如果 (查找 (并且 (等于 (读 (“仓库名称”), .内容), 等于 (读 (“商品全称”), 循环变量.未知支持库函数_10 (2)))))
             ' 修改 (相加 (读 (“进货数量”), 到数值 (循环变量.未知支持库函数_10 (3))), , 相加 (读 (“结存数量”), 到数值 (循环变量.未知支持库函数_10 (3))), 相加 (读 (“金额”), 到数值 (循环变量.未知支持库函数_10 (5))), , )
            修改 (到数值 (四舍五入 (相除 (读 (“金额”), 读 (“结存数量”)), 2)), , , , , , )
        .否则
            
            加记录 (循环变量.未知支持库函数_10 (1), 循环变量.未知支持库函数_10 (2), 单位, 型号, 规格, 产地, 到数值 (循环变量.未知支持库函数_10 (4)), 到数值 (循环变量.未知支持库函数_10 (3)), , 到数值 (循环变量.未知支持库函数_10 (3)), 到数值 (循环变量.未知支持库函数_10 (5)), , .内容)
            
        .如果结束
        
    .如果真结束
    
.计次循环尾 ()
关闭 ()

.子程序 _录单日期_失去焦点, 空白型, , 
获取焦点 ()

.子程序 _表格1_光标位置改变, 空白型, , 
.局部变量 行数, 整数型, , , 
.局部变量 循环变量, 整数型, , , 
.局部变量 金额合计, 双精度小数型, , , 
.局部变量 数量合计, 双精度小数型, , , 

.判断开始 (等于 (未知支持库函数_4 (), 5))
    赋值 (行数, 相减 (., 1))
    .计次循环首 (行数, 循环变量)
        赋值 (金额合计, 相加 (到数值 (到文本 (循环变量.未知支持库函数_10 (5))), 金额合计))
    .计次循环尾 ()
    赋值 (.内容, 到文本 (四舍五入 (金额合计, 2)))
    
.判断 (等于 (未知支持库函数_4 (), 3))
    未知支持库函数_3 ().未知支持库函数_9 (5, 1, 到文本 (相乘 (到数值 (未知支持库函数_3 ().未知支持库函数_10 (3)), 到数值 (未知支持库函数_3 ().未知支持库函数_10 (4)))))
    赋值 (行数, 相减 (., 1))
    .计次循环首 (行数, 循环变量)
        赋值 (数量合计, 相加 (到数值 (到文本 (循环变量.未知支持库函数_10 (3))), 数量合计))
        赋值 (金额合计, 相加 (到数值 (到文本 (循环变量.未知支持库函数_10 (5))), 金额合计))
        
    .计次循环尾 ()
    赋值 (.内容, 到文本 (四舍五入 (数量合计, 2)))
    赋值 (.内容, 到文本 (四舍五入 (金额合计, 2)))
.判断 (等于 (未知支持库函数_4 (), 4))
    
    未知支持库函数_3 ().未知支持库函数_9 (5, 1, 到文本 (相乘 (到数值 (未知支持库函数_3 ().未知支持库函数_10 (3)), 到数值 (未知支持库函数_3 ().未知支持库函数_10 (4)))))
    赋值 (行数, 相减 (., 1))
    .计次循环首 (行数, 循环变量)
        赋值 (金额合计, 相加 (到数值 (到文本 (循环变量.未知支持库函数_10 (5))), 金额合计))
    .计次循环尾 ()
    赋值 (.内容, 到文本 (四舍五入 (金额合计, 2)))
    
.默认
    
.判断结束


.子程序 _开新单按钮_被单击, 空白型, , 
.局部变量 行, 整数型, , , 


赋值 (., 假)
赋值 (., 真)
赋值 (., 1)
赋值 (., 8)
连续赋值 (“”, .内容, .内容, .内容, .内容, .内容)
.循环判断首 ()
    赋值 (行, 相加 (行, 1))
    行.未知支持库函数_9 (0, #., 到文本 (行))
.循环判断尾 (小于 (行, 相减 (., .)))
赋值 (.内容, 单据号 (到时间 (.内容)))
未知支持库函数_28 ()

.子程序 _转入仓库_获得焦点, 空白型, , 
赋值 (上一交点, )
赋值 (.可视, 真)
赋值 (.顶边, 相加 (.顶边, .高度))
赋值 (.左边, .左边)
添加转入列表 ()
添加转入商品列表 ()

.子程序 _录单日期_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (等于 (键代码, #回车键))
    获取焦点 ()
.如果真结束


.子程序 _转入仓库_内容被改变, 空白型, , 
.局部变量 选择行, 整数型, , , 

赋值 (选择行, .选择 (.内容))
.如果真 (大于 (选择行, -1))
    赋值 (.现行选中项, 选择行)
    获取焦点 ()
.如果真结束


.子程序 _下拉选择框_列表项被选择, 空白型, , 
列表项被选择 ()

.子程序 _按钮1_被单击, 空白型, , 
未知支持库函数_28 ()


.窗口程序集 库存商品建账, , , 

.程序集变量 完整行, 整数型, , "0", 
.程序集变量 不完整数据, 整数型, , "0", 
.程序集变量 上一交点, 编辑框, , , 
.程序集变量 表格列表内容, 文本型, , "1,2", 
.子程序 _库存商品建账_创建完毕, 空白型, , 
.局部变量 行, 整数型, , , 

全部关闭 ()
0.未知支持库函数_9 (0, 1, “序  号”)
0.未知支持库函数_32 (50)
0.未知支持库函数_9 (1, 1, “商品代码”)
1.未知支持库函数_32 (80)
0.未知支持库函数_9 (2, 1, “商  品  全  称”)
2.未知支持库函数_32 (160)
0.未知支持库函数_9 (3, 1, “期初数量”)
3.未知支持库函数_32 (80)
0.未知支持库函数_9 (4, 1, “成本均价”)
4.未知支持库函数_32 (80)
0.未知支持库函数_9 (5, 1, “期 初 总 额”)
5.未知支持库函数_32 (120)
1.未知支持库函数_30 (#.)
0.未知支持库函数_25 (0, 0, 5, 2)
3.未知支持库函数_30 (#.)
4.未知支持库函数_30 (#.)
5.未知支持库函数_30 (#.)
1.未知支持库函数_25 (3, 16, 5, 3)

1.未知支持库函数_14 (#白色, #银白)
.循环判断首 ()
    赋值 (行, 相加 (行, 1))
    行.未知支持库函数_9 (0, #., 到文本 (行))
.循环判断尾 (小于 (行, 相减 (., .)))
添加列表 ()
打开 (相加 (运行目录, “\date\yyjl_kc.edb”), “kcsp”, , , , , )


.子程序 _表格1_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 光标行号, 整数型, , , 

.如果真 (等于 (未知支持库函数_3 (), 相减 (., 1)))
    赋值 (光标行号, 未知支持库函数_3 ())
    .如果真 (并且 (等于 (键代码, #下光标键), 等于 (功能键状态, 1)))
        赋值 (., 相加 (., 1))
        相加 (未知支持库函数_3 (), 1).未知支持库函数_9 (0, 1, 到文本 (相加 (光标行号, 1)))
        刷新显示 ()
        
    .如果真结束
    
.如果真结束
.如果真 (并且 (等于 (键代码, #Tab键), 等于 (功能键状态, 1)))
    载入 (添加基本信息, , 真)
.如果真结束


.子程序 _下拉选择框_列表项被选择, 空白型, , 
.局部变量 内容, 文本型, , , 
.局部变量 文本, 整数型, , , 
.局部变量 匿名局部变量_4260, 空白型, , , 

赋值 (内容, .取项目文本 (.现行选中项))
赋值 (文本, 寻找文本 (内容, “[”, , 假))
赋值 (内容, 取文本中间 (内容, 相加 (文本, 1), 相减 (取文本长度 (内容), 文本, 1)))
.判断开始 (等于 (上一交点, ))
    赋值 (.内容, 内容)
.判断 (等于 (上一交点, ))
    赋值 (.内容, 内容)
.默认
    
.判断结束


.子程序 _经手人_获得焦点, 空白型, , 
赋值 (上一交点, )
赋值 (.顶边, 相加 (.顶边, .高度))
赋值 (.左边, .左边)
赋值 (.高度, .宽度)
赋值 (.可视, 真)
添加部门职员列表 ()


.子程序 添加部门职员列表, 空白型, , 
.局部变量 a, 文本型, , , 

打开 (相加 (运行目录, “\date\jbzl_bmzy.edb”), “bmzy”, , , , , )
置当前库 (“bmzy”)
到首记录 ()
跳过 ()
清空 ()
.判断循环首 (取反 (尾记录后 ()))
    相加 (读 (5), “[”, 读 (3), “]”).加入项目 ()
    跳过 ()
.判断循环尾 ()
关闭 ()


.子程序 _收货仓库_获得焦点, 空白型, , 
赋值 (上一交点, )
赋值 (.顶边, 相加 (.顶边, .高度))
赋值 (.左边, .左边)
赋值 (.宽度, .宽度)
赋值 (.可视, 真)

添加仓库列表 ()


.子程序 添加仓库列表, 空白型, , 
.局部变量 a, 文本型, , , 

打开 (相加 (运行目录, “\date\jbzl_ck.edb”), “ck”, , , , , )
置当前库 (“ck”)
到首记录 ()
跳过 ()
清空 ()
.判断循环首 (取反 (尾记录后 ()))
    相加 (读 (5), “[”, 读 (3), “]”).加入项目 ()
    跳过 ()
.判断循环尾 ()
关闭 ()

.子程序 _下拉选择框_失去焦点, 空白型, , 
赋值 (.可视, 假)


.子程序 _下拉选择框_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.可视, 假)


.子程序 _下拉选择框_双击选择, 空白型, , 
赋值 (.可视, 假)
.判断开始 (等于 (上一交点, ))
    赋值 (.可视, 假)
    获取焦点 ()
    返回 ()
.判断 (等于 (上一交点, ))
    赋值 (.可视, 假)
    获取焦点 ()
    1.未知支持库函数_0 (1)
.默认
    
.判断结束
赋值 (.可视, 假)


.子程序 添加列表, 空白型, , 
.局部变量 记录数, 整数型, , , 
.局部变量 循环变量, 整数型, , , 

打开 (相加 (运行目录, “\date\jbzl_spmc.edb”), “spmc”, , , , , )
到首记录 ()
赋值 (记录数, 取记录数 ())
重定义数组 (表格列表内容, 假, 记录数, 2)
跳过 ()

.计次循环首 (相减 (记录数, 1), 循环变量)
    .如果真 (等于 (读 (“子类数”), 假))
        赋值 (表格列表内容 [循环变量] [1], 读 (“编码”))
        1.未知支持库函数_45 (表格列表内容 [循环变量] [1])
        赋值 (表格列表内容 [循环变量] [2], 读 (“全称”))
        
    .如果真结束
    跳过 ()
.计次循环尾 ()
关闭 ()


.子程序 _表格1_结束编辑, 空白型, , 
.局部变量 循环变量, 整数型, , , 
.局部变量 金额合计, 双精度小数型, , , 
.局部变量 数量合计, 双精度小数型, , , 
.局部变量 全称, 文本型, , , 

.判断开始 (等于 (未知支持库函数_4 (), 1))
    赋值 (全称, 编码转全称 (未知支持库函数_3 ().未知支持库函数_10 (1)))
    .变量循环首 (相减 (未知支持库函数_3 (), 1), 1, -1, 循环变量)
        .如果真 (等于 (全称, 循环变量.未知支持库函数_10 (2)))
            信息框 (“有重复商品名称，请核对后再重新输入。”, #错误图标, “错误提示”)
            未知支持库函数_3 ().未知支持库函数_9 (1, 1, “”)
            返回 ()
        .如果真结束
        
    .变量循环尾 ()
    未知支持库函数_3 ().未知支持库函数_9 (2, 1, 全称)
    置当前库 (“kcsp”)
    到首记录 ()
    1.置文本 (“”)
    .如果 (查找 (等于 (读 (“商品全称”), 全称)))
        1.置文本 (相加 (“ 仓库:”, 1.取文本 (), 读 (“仓库名称”), “ (数量：”, 到文本 (读 (“结存数量”)), “)  ”))
        .判断循环首 (取反 (尾记录后 ()))
            跳过 ()
            .如果 (查找 (等于 (读 (“商品全称”), 全称)))
                1.置文本 (相加 (1.取文本 (), 读 (“仓库名称”), “ (”, 到文本 (读 (“结存数量”)), “)  ”))
                
            .否则
                跳出循环 ()
            .如果结束
            
        .判断循环尾 ()
        0.置文本 (相加 (“  ”, 全称, “已存在”))
    .否则
        1.置文本 (“如果仓库原来有商品，再添加就会覆盖原有数据。注意看状态行提示。”)
        0.置文本 (“”)
        
    .如果结束
    
    256.投递信息 (位与 (39, 255), 1)
.判断 (等于 (未知支持库函数_4 (), 3))
    未知支持库函数_3 ().未知支持库函数_9 (5, 1, 到文本 (相乘 (到数值 (未知支持库函数_3 ().未知支持库函数_10 (3)), 到数值 (未知支持库函数_3 ().未知支持库函数_10 (4)))))
    .计次循环首 (., 循环变量)
        赋值 (数量合计, 相加 (到数值 (到文本 (循环变量.未知支持库函数_10 (3))), 数量合计))
    .计次循环尾 ()
    赋值 (.内容, 到文本 (四舍五入 (数量合计, 2)))
    .计次循环首 (., 循环变量)
        赋值 (金额合计, 相加 (到数值 (到文本 (循环变量.未知支持库函数_10 (5))), 金额合计))
    .计次循环尾 ()
    赋值 (.内容, 到文本 (四舍五入 (金额合计, 2)))
    
.判断 (等于 (未知支持库函数_4 (), 4))
    未知支持库函数_3 ().未知支持库函数_9 (5, 1, 到文本 (相乘 (到数值 (未知支持库函数_3 ().未知支持库函数_10 (3)), 到数值 (未知支持库函数_3 ().未知支持库函数_10 (4)))))
    .计次循环首 (., 循环变量)
        赋值 (金额合计, 相加 (到数值 (到文本 (循环变量.未知支持库函数_10 (5))), 金额合计))
    .计次循环尾 ()
    赋值 (.内容, 到文本 (四舍五入 (金额合计, 2)))
    
.判断 (等于 (未知支持库函数_4 (), 5))
    .计次循环首 (., 循环变量)
        赋值 (金额合计, 相加 (到数值 (到文本 (循环变量.未知支持库函数_10 (5))), 金额合计))
    .计次循环尾 ()
    赋值 (.内容, 到文本 (四舍五入 (金额合计, 2)))
    
.默认
    
.判断结束
赋值 (., 假)

.子程序 编码转全称, 文本型, , 
.参数 编码, 文本型, , 

.局部变量 循环变量, 整数型, , , 
.局部变量 成员数, 整数型, , , 

赋值 (成员数, 取数组成员数 (表格列表内容))
.计次循环首 (相除 (成员数, 2), 循环变量)
    .如果真 (等于 (编码, 表格列表内容 [循环变量] [1]))
        返回 (表格列表内容 [循环变量] [2])
    .如果真结束
    
.计次循环尾 ()
返回 (“”)

.子程序 _退出按钮_被单击, 空白型, , 
销毁 ()

.子程序 _表格1_光标位置改变, 空白型, , 
.局部变量 n, 整数型, , , 
.局部变量 金额合计, 双精度小数型, , , 
.局部变量 数量合计, 双精度小数型, , , 
.局部变量 匿名局部变量_4333, 空白型, , , 

.判断开始 (等于 (未知支持库函数_4 (), 3))
    未知支持库函数_3 ().未知支持库函数_9 (5, 1, 到文本 (相乘 (到数值 (未知支持库函数_3 ().未知支持库函数_10 (3)), 到数值 (未知支持库函数_3 ().未知支持库函数_10 (4)))))
    .计次循环首 (., n)
        赋值 (数量合计, 相加 (到数值 (到文本 (n.未知支持库函数_10 (3))), 数量合计))
    .计次循环尾 ()
    赋值 (.内容, 到文本 (四舍五入 (金额合计, 2)))
    .计次循环首 (., n)
        赋值 (金额合计, 相加 (到数值 (到文本 (n.未知支持库函数_10 (5))), 金额合计))
    .计次循环尾 ()
    赋值 (.内容, 到文本 (四舍五入 (金额合计, 2)))
    
.判断 (等于 (未知支持库函数_4 (), 4))
    未知支持库函数_3 ().未知支持库函数_9 (5, 1, 到文本 (相乘 (到数值 (未知支持库函数_3 ().未知支持库函数_10 (3)), 到数值 (未知支持库函数_3 ().未知支持库函数_10 (4)))))
    .计次循环首 (., n)
        赋值 (金额合计, 相加 (到数值 (到文本 (n.未知支持库函数_10 (5))), 金额合计))
    .计次循环尾 ()
    赋值 (.内容, 到文本 (四舍五入 (金额合计, 2)))
    
.判断 (等于 (未知支持库函数_4 (), 5))
    .计次循环首 (., n)
        赋值 (金额合计, 相加 (到数值 (到文本 (n.未知支持库函数_10 (5))), 金额合计))
    .计次循环尾 ()
    赋值 (.内容, 到文本 (四舍五入 (金额合计, 2)))
    
.默认
    
.判断结束


.子程序 _保存按钮_被单击, 空白型, , 
.局部变量 循环变量, 整数型, , , 

置当前库 (“kcsp”)
.如果真 (等于 (检查完整性 (), 真))
    .计次循环首 (取数组成员数 (完整行), 循环变量)
        到首记录 ()
        .如果 (查找 (并且 (等于 (读 (“仓库名称”), .内容), 等于 (读 (“商品全称”), 完整行.未知支持库函数_10 ( [循环变量], 2)))))
            修改 (完整行.未知支持库函数_10 ( [循环变量], 1), 完整行.未知支持库函数_10 ( [循环变量], 2), , , , , 到数值 (完整行.未知支持库函数_10 ( [循环变量], 4)), 到数值 (完整行.未知支持库函数_10 ( [循环变量], 3)), , 到数值 (完整行.未知支持库函数_10 ( [循环变量], 3)), 到数值 (完整行.未知支持库函数_10 ( [循环变量], 5)), , .内容)
        .否则
            加记录 (完整行.未知支持库函数_10 ( [循环变量], 1), 完整行.未知支持库函数_10 ( [循环变量], 2), , , , , 到数值 (完整行.未知支持库函数_10 ( [循环变量], 4)), 到数值 (完整行.未知支持库函数_10 ( [循环变量], 3)), , 到数值 (完整行.未知支持库函数_10 ( [循环变量], 3)), 到数值 (完整行.未知支持库函数_10 ( [循环变量], 5)), , .内容)
        .如果结束
        
    .计次循环尾 ()
    赋值 (., 真)
    
.如果真结束
重定义数组 (不完整数据, 假, 0)


.子程序 检查完整性, 逻辑型, , 
.局部变量 有效行, 整数型, , , 
.局部变量 循环变量, 整数型, , , 
.局部变量 检查列, 文本型, , , 
.局部变量 检查列1, 文本型, , , 
.局部变量 检查列2, 文本型, , , 
.局部变量 有效数据行, 文本型, , , 
.局部变量 计数, 整数型, , , 

赋值 (有效行, 相减 (., 1))
重定义数组 (完整行, 假, 0)
重定义数组 (不完整数据, 假, 0)
赋值 (计数, 0)
.计次循环首 (有效行, 循环变量)
    赋值 (检查列, 到文本 (循环变量.未知支持库函数_10 (3)))
    赋值 (检查列1, 到文本 (循环变量.未知支持库函数_10 (2)))
    赋值 (检查列2, 到文本 (循环变量.未知支持库函数_10 (5)))
    .如果 (并且 (不等于 (检查列, “”), 不等于 (检查列1, “”), 不等于 (检查列2, “”)))
        加入成员 (完整行, 循环变量)
        
    .否则
        加入成员 (不完整数据, 循环变量)
    .如果结束
    
.计次循环尾 ()

.如果真 (或者 (等于 (.内容, “”), 等于 (.内容, “”)))
    信息框 (相加 (“信息不完整！  ”, #换行符, “添完整后再保存”), #警告图标, “保存提示信息”)
    返回 (假)
.如果真结束
赋值 (计数, 取数组成员数 (完整行))
.如果 (等于 (计数, 0))
    信息框 (“没有输入数据，不能保存！”, #警告图标, “保存提示”)
    返回 (假)
.否则
    .计次循环首 (计数, 循环变量)
        赋值 (有效数据行, 相加 (有效数据行, “；”, 到文本 (完整行 [循环变量])))
    .计次循环尾 ()
    赋值 (计数, 信息框 (相加 (“能保存的信息行是:”, 有效数据行), 相加 (#询问图标, #是否钮), “保存提示”))
    .如果 (等于 (计数, 6))
        返回 (假)
    .否则
        返回 (真)
    .如果结束
    
.如果结束


.子程序 _清空_被单击, 空白型, , 
.局部变量 行, 整数型, , , 

赋值 (., 假)
赋值 (., 1)
赋值 (., 16)
1.未知支持库函数_25 (0, 15, 0, 1)

.循环判断首 ()
    赋值 (行, 相加 (行, 1))
    行.未知支持库函数_9 (0, #., 到文本 (行))
.循环判断尾 (小于 (行, 相减 (., .)))

赋值 (.内容, “”)
赋值 (.内容, “”)
0.未知支持库函数_25 (0, 0, 5, 2)
1.未知支持库函数_25 (3, 16, 5, 3)
0.置文本 (“”)
1.置文本 (“”)


.窗口程序集 应收应付建账, , , 

.程序集变量 表格列表内容, 文本型, , "1,2", 
.程序集变量 完整行, 整数型, , "0", 
.程序集变量 不完整数据, 整数型, , "0", 
.程序集变量 匿名程序集变量_4502, 空白型, , , 
.子程序 _应收应付建账_创建完毕, 空白型, , 
.局部变量 行, 整数型, , , 

全部关闭 ()
0.未知支持库函数_9 (0, 1, “序  号”)
0.未知支持库函数_32 (60)
0.未知支持库函数_9 (1, 1, “往来单位代码”)
1.未知支持库函数_32 (120)
0.未知支持库函数_9 (2, 1, “往 来 单 位 全 称”)
2.未知支持库函数_32 (180)
0.未知支持库函数_9 (3, 1, “期初应收款”)
3.未知支持库函数_32 (100)
0.未知支持库函数_9 (4, 1, “期初应付款”)
4.未知支持库函数_32 (100)
1.未知支持库函数_30 (#.)
2.未知支持库函数_30 (#.)

0.未知支持库函数_25 (0, 0, 4, 2)
3.未知支持库函数_30 (#.)
4.未知支持库函数_30 (#.)
1.未知支持库函数_25 (3, 16, 4, 3)

1.未知支持库函数_14 (#白色, #银白)
.循环判断首 ()
    赋值 (行, 相加 (行, 1))
    行.未知支持库函数_9 (0, #., 到文本 (行))
.循环判断尾 (小于 (行, 相减 (., .)))
打开 (相加 (运行目录, “\date\yyjl_ysyf.edb”), “ysyf”, , , , , )
添加列表 ()


.子程序 _表格1_结束编辑, 空白型, , 
.局部变量 循环变量, 整数型, , , 
.局部变量 金额合计, 双精度小数型, , , 
.局部变量 数量合计, 双精度小数型, , , 
.局部变量 全称, 文本型, , , 
.局部变量 编码, 文本型, , , 

.判断开始 (或者 (等于 (未知支持库函数_4 (), 1), 等于 (未知支持库函数_4 (), 2)))
    赋值 (编码, 未知支持库函数_3 ().未知支持库函数_10 (1))
    赋值 (全称, 未知支持库函数_3 ().未知支持库函数_10 (2))
    .如果 (等于 (未知支持库函数_4 (), 1))
        赋值 (全称, 编码转全称 (编码, ))
        未知支持库函数_3 ().未知支持库函数_9 (2, 1, 全称)
        
    .否则
        未知支持库函数_3 ().未知支持库函数_9 (1, 1, 编码转全称 (全称))
        
    .如果结束
    .变量循环首 (相减 (未知支持库函数_3 (), 1), 1, -1, 循环变量)
        .如果真 (等于 (全称, 循环变量.未知支持库函数_10 (2)))
            信息框 (“有重复往来单位名称，请核对后再重新输入。”, #错误图标, “错误提示”)
            未知支持库函数_3 ().未知支持库函数_9 (1, 1, “”)
            未知支持库函数_3 ().未知支持库函数_9 (2, 1, “”)
            
            返回 ()
        .如果真结束
        
    .变量循环尾 ()
    
    置当前库 (“ysyf”)
    到首记录 ()
    1.置文本 (“”)
    .如果 (查找 (等于 (读 (“往来单位”), 全称)))
        1.置文本 (相加 (“ 往来单位:”, 读 (“往来单位”), “ (应收款：”, 到文本 (读 (“应收帐款”)), “)  ”, “ (应付款：”, 到文本 (读 (“应付帐款”)), “)  ”))
        0.置文本 (相加 (“  ”, 全称, “已存在”))
    .否则
        1.置文本 (“如果仓库原来有商品，再添加就会覆盖原有数据。注意提示。”)
        0.置文本 (“”)
    .如果结束
    
    256.投递信息 (位与 (39, 255), 1)
.判断 (等于 (未知支持库函数_4 (), 3))
    .计次循环首 (., 循环变量)
        赋值 (数量合计, 相加 (到数值 (到文本 (循环变量.未知支持库函数_10 (3))), 数量合计))
    .计次循环尾 ()
    赋值 (.内容, 到文本 (四舍五入 (数量合计, 2)))
.判断 (等于 (未知支持库函数_4 (), 4))
    .计次循环首 (., 循环变量)
        赋值 (金额合计, 相加 (到数值 (到文本 (循环变量.未知支持库函数_10 (4))), 金额合计))
    .计次循环尾 ()
    赋值 (.内容, 到文本 (四舍五入 (金额合计, 2)))
.默认
    
.判断结束
赋值 (., 假)


.子程序 编码转全称, 文本型, , 
.参数 编码, 文本型, 可空, 
.参数 全称, 文本型, 可空, 

.局部变量 有效行, 整数型, , , 
.局部变量 成员数, 整数型, , , 

赋值 (成员数, 取数组成员数 (表格列表内容))
.如果 (等于 (全称, “”))
    .计次循环首 (相除 (成员数, 2), 有效行)
        .如果真 (等于 (编码, 表格列表内容 [有效行] [1]))
            返回 (表格列表内容 [有效行] [2])
        .如果真结束
        
    .计次循环尾 ()
    
.否则
    .计次循环首 (相除 (成员数, 2), 有效行)
        .如果真 (等于 (全称, 表格列表内容 [有效行] [2]))
            返回 (表格列表内容 [有效行] [1])
        .如果真结束
        
    .计次循环尾 ()
    
.如果结束
返回 (“”)


.子程序 添加列表, 空白型, , 
.局部变量 记录数, 整数型, , , 
.局部变量 循环变量, 整数型, , , 

打开 (相加 (运行目录, “\date\jbzl_wldw.edb”), “wldw”, , , , , )
到首记录 ()
赋值 (记录数, 取记录数 ())
重定义数组 (表格列表内容, 假, 记录数, 2)
跳过 ()

.计次循环首 (相减 (记录数, 1), 循环变量)
    .如果真 (等于 (读 (“子类数”), 假))
        赋值 (表格列表内容 [循环变量] [1], 读 (“编码”))
        1.未知支持库函数_45 (读 (“编码”))
        赋值 (表格列表内容 [循环变量] [2], 读 (“全称”))
        2.未知支持库函数_45 (读 (“全称”))
        
    .如果真结束
    跳过 ()
.计次循环尾 ()
关闭 ()

.子程序 _清空_被单击, 空白型, , 
.局部变量 行, 整数型, , , 

赋值 (., 假)
赋值 (., 1)
赋值 (., 16)

.循环判断首 ()
    赋值 (行, 相加 (行, 1))
    行.未知支持库函数_9 (0, #., 到文本 (行))
.循环判断尾 (小于 (行, 相减 (., .)))
1.未知支持库函数_25 (0, 15, 0, 1)
1.未知支持库函数_25 (3, 16, 4, 3)
0.未知支持库函数_25 (0, 0, 4, 2)

0.置文本 (“”)
1.置文本 (“”)


.子程序 _保存按钮_被单击, 空白型, , 
.局部变量 循环变量, 整数型, , , 

置当前库 (“ysyf”)
.如果真 (等于 (检查完整性 (), 真))
    .计次循环首 (取数组成员数 (完整行), 循环变量)
        到首记录 ()
        .如果 (查找 (等于 (读 (“往来单位”), 完整行.未知支持库函数_10 ( [循环变量], 2))))
            修改 (完整行.未知支持库函数_10 ( [循环变量], 1), 完整行.未知支持库函数_10 ( [循环变量], 2), 到数值 (完整行.未知支持库函数_10 ( [循环变量], 3)), 到数值 (完整行.未知支持库函数_10 ( [循环变量], 4)))
        .否则
            加记录 (完整行.未知支持库函数_10 ( [循环变量], 1), 完整行.未知支持库函数_10 ( [循环变量], 2), 到数值 (完整行.未知支持库函数_10 ( [循环变量], 3)), 到数值 (完整行.未知支持库函数_10 ( [循环变量], 4)))
        .如果结束
        
    .计次循环尾 ()
    
.如果真结束
赋值 (., 真)
重定义数组 (不完整数据, 假, 0)


.子程序 _退出按钮_被单击, 空白型, , 
销毁 ()


.子程序 检查完整性, 逻辑型, , 
.局部变量 有效行, 整数型, , , 
.局部变量 循环变量, 整数型, , , 
.局部变量 检查列, 文本型, , , 
.局部变量 有效数据行, 文本型, , , 
.局部变量 计数, 整数型, , , 

赋值 (有效行, 相减 (., 1))
重定义数组 (完整行, 假, 0)
重定义数组 (不完整数据, 假, 0)
赋值 (计数, 0)
.计次循环首 (有效行, 循环变量)
    赋值 (检查列, 到文本 (循环变量.未知支持库函数_10 (2)))
    .如果 (不等于 (检查列, “”))
        加入成员 (完整行, 循环变量)
        
    .否则
        加入成员 (不完整数据, 循环变量)
    .如果结束
    
.计次循环尾 ()

赋值 (计数, 取数组成员数 (完整行))
.如果 (等于 (计数, 0))
    信息框 (“没有输入数据，不能保存！”, #警告图标, “保存提示”)
    返回 (假)
.否则
    .计次循环首 (计数, 循环变量)
        赋值 (有效数据行, 相加 (有效数据行, “；”, 到文本 (完整行 [循环变量])))
    .计次循环尾 ()
    赋值 (计数, 信息框 (相加 (“能保存的信息行是:”, 有效数据行), 相加 (#询问图标, #是否钮), “保存提示”))
    .如果 (等于 (计数, 6))
        返回 (假)
    .否则
        返回 (真)
    .如果结束
    
.如果结束


.子程序 _表格1_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (并且 (等于 (键代码, #Tab键), 等于 (功能键状态, 1)))
    载入 (添加基本信息, , 真)
.如果真结束


.窗口程序集 现金银行建账, , , 

.程序集变量 表格列表内容, 文本型, , "1,2", 
.程序集变量 完整行, 整数型, , "0", 
.程序集变量 不完整数据, 整数型, , "0", 
.程序集变量 匿名程序集变量_4574, 空白型, , , 
.程序集变量 匿名程序集变量_4570, 空白型, , , 
.子程序 _现金银行建账_创建完毕, 空白型, , 
.局部变量 行, 整数型, , , 

全部关闭 ()
0.未知支持库函数_9 (0, 1, “序  号”)
0.未知支持库函数_32 (60)
0.未知支持库函数_9 (1, 1, “账 户 代 码”)
1.未知支持库函数_32 (110)
0.未知支持库函数_9 (2, 1, “账   户   全   称”)
2.未知支持库函数_32 (200)
0.未知支持库函数_9 (3, 1, “期 初 结 存 金 额”)
3.未知支持库函数_32 (150)
1.未知支持库函数_30 (#.)
2.未知支持库函数_30 (#.)

0.未知支持库函数_25 (0, 0, 3, 2)
3.未知支持库函数_30 (#.)
1.未知支持库函数_25 (3, 16, 3, 3)
1.未知支持库函数_14 (#白色, #银白)
.循环判断首 ()
    赋值 (行, 相加 (行, 1))
    行.未知支持库函数_9 (0, #., 到文本 (行))
.循环判断尾 (小于 (行, 相减 (., .)))
打开 (相加 (运行目录, “\date\jbzl_xjck.edb”), “xjck”, , , , , )
添加列表 ()



.子程序 _表格1_结束编辑, 空白型, , 
.局部变量 循环变量, 整数型, , , 
.局部变量 金额合计, 双精度小数型, , , 
.局部变量 数量合计, 双精度小数型, , , 
.局部变量 全称, 文本型, , , 
.局部变量 编码, 文本型, , , 

.判断开始 (或者 (等于 (未知支持库函数_4 (), 1), 等于 (未知支持库函数_4 (), 2)))
    赋值 (编码, 未知支持库函数_3 ().未知支持库函数_10 (1))
    赋值 (全称, 未知支持库函数_3 ().未知支持库函数_10 (2))
    .如果 (等于 (未知支持库函数_4 (), 1))
        赋值 (全称, 编码转全称 (编码, ))
        未知支持库函数_3 ().未知支持库函数_9 (2, 1, 全称)
        
    .否则
        未知支持库函数_3 ().未知支持库函数_9 (1, 1, 编码转全称 (全称))
        
    .如果结束
    .变量循环首 (相减 (未知支持库函数_3 (), 1), 1, -1, 循环变量)
        .如果真 (等于 (全称, 循环变量.未知支持库函数_10 (2)))
            信息框 (“有重复往来单位名称，请核对后再重新输入。”, #错误图标, “错误提示”)
            未知支持库函数_3 ().未知支持库函数_9 (1, 1, “”)
            未知支持库函数_3 ().未知支持库函数_9 (2, 1, “”)
            
            返回 ()
        .如果真结束
        
    .变量循环尾 ()
    
    置当前库 (“xjck”)
    到首记录 ()
    1.置文本 (“”)
    .如果 (查找 (等于 (读 (“全名”), 全称)))
        1.置文本 (相加 (“ 账户名称:”, 读 (“全名”), “ (结存金额：”, 到文本 (读 (“结存金额”)), “)  ”))
        0.置文本 (相加 (“  ”, 全称, “账户已存在”))
    .否则
        1.置文本 (“如果仓库原来有商品，再添加就会覆盖原有数据。注意看状态行提示。”)
        0.置文本 (“”)
    .如果结束
    
    256.投递信息 (位与 (39, 255), 1)
.判断 (等于 (未知支持库函数_4 (), 3))
    .计次循环首 (., 循环变量)
        赋值 (数量合计, 相加 (到数值 (到文本 (循环变量.未知支持库函数_10 (3))), 数量合计))
    .计次循环尾 ()
    赋值 (.内容, 到文本 (四舍五入 (数量合计, 2)))
.默认
    
.判断结束
赋值 (., 假)


.子程序 编码转全称, 文本型, , 
.参数 编码, 文本型, 可空, 
.参数 全称, 文本型, 可空, 

.局部变量 循环变量, 整数型, , , 
.局部变量 成员数, 整数型, , , 

赋值 (成员数, 取数组成员数 (表格列表内容))
.如果 (等于 (全称, “”))
    .计次循环首 (相除 (成员数, 2), 循环变量)
        .如果真 (等于 (编码, 表格列表内容 [循环变量] [1]))
            返回 (表格列表内容 [循环变量] [2])
        .如果真结束
        
    .计次循环尾 ()
    
.否则
    .计次循环首 (相除 (成员数, 2), 循环变量)
        .如果真 (等于 (全称, 表格列表内容 [循环变量] [2]))
            返回 (表格列表内容 [循环变量] [1])
        .如果真结束
        
    .计次循环尾 ()
    
.如果结束
返回 (“”)


.子程序 添加列表, 空白型, , 
.局部变量 记录数, 整数型, , , 
.局部变量 循环变量, 整数型, , , 

置当前库 (“xjck”)
到首记录 ()
赋值 (记录数, 取记录数 ())
重定义数组 (表格列表内容, 假, 记录数, 2)
.计次循环首 (记录数, 循环变量)
    赋值 (表格列表内容 [循环变量] [1], 读 (“编码”))
    1.未知支持库函数_45 (表格列表内容 [循环变量] [1])
    赋值 (表格列表内容 [循环变量] [2], 读 (“全名”))
    2.未知支持库函数_45 (表格列表内容 [循环变量] [2])
    跳过 ()
.计次循环尾 ()

.子程序 _清空_被单击, 空白型, , 
.局部变量 行, 整数型, , , 

赋值 (., 假)
赋值 (., 1)
赋值 (., 16)

.循环判断首 ()
    赋值 (行, 相加 (行, 1))
    行.未知支持库函数_9 (0, #., 到文本 (行))
.循环判断尾 (小于 (行, 相减 (., .)))
0.未知支持库函数_25 (0, 15, 0, 1)
1.未知支持库函数_25 (3, 16, 3, 3)
0.未知支持库函数_25 (0, 0, 4, 2)
0.置文本 (“”)
1.置文本 (“”)


.子程序 _保存按钮1_被单击, 空白型, , 
.局部变量 循环变量, 整数型, , , 

置当前库 (“xjck”)
.如果真 (等于 (检查完整性 (), 真))
    .计次循环首 (取数组成员数 (完整行), 循环变量)
        到首记录 ()
        .如果 (查找 (等于 (读 (“全名”), 完整行.未知支持库函数_10 ( [循环变量], 2))))
            修改 (完整行.未知支持库函数_10 ( [循环变量], 1), 完整行.未知支持库函数_10 ( [循环变量], 2), , 到数值 (完整行.未知支持库函数_10 ( [循环变量], 3)), , 到数值 (完整行.未知支持库函数_10 ( [循环变量], 3)), )
        .否则
            
        .如果结束
        
    .计次循环尾 ()
    
.如果真结束
赋值 (., 真)
重定义数组 (不完整数据, 假, 0)


.子程序 _退出按钮_被单击, 空白型, , 
销毁 ()


.子程序 检查完整性, 逻辑型, , 
.局部变量 有效行, 整数型, , , 
.局部变量 循环变量, 整数型, , , 
.局部变量 检查列, 文本型, , , 
.局部变量 有效数据行, 文本型, , , 
.局部变量 计数, 整数型, , , 

赋值 (有效行, 相减 (., 1))
重定义数组 (完整行, 假, 0)
重定义数组 (不完整数据, 假, 0)
赋值 (计数, 0)
.计次循环首 (有效行, 循环变量)
    赋值 (检查列, 到文本 (循环变量.未知支持库函数_10 (2)))
    .如果 (并且 (不等于 (检查列, “”), 不等于 (循环变量.未知支持库函数_10 (3), “”)))
        加入成员 (完整行, 循环变量)
        
    .否则
        加入成员 (不完整数据, 循环变量)
    .如果结束
    
.计次循环尾 ()

赋值 (计数, 取数组成员数 (完整行))
.如果 (等于 (计数, 0))
    信息框 (“没有输入数据，不能保存！”, #警告图标, “保存提示”)
    返回 (假)
.否则
    .计次循环首 (计数, 循环变量)
        赋值 (有效数据行, 相加 (有效数据行, “；”, 到文本 (完整行 [循环变量])))
    .计次循环尾 ()
    赋值 (计数, 信息框 (相加 (“能保存的信息行是:”, 有效数据行), 相加 (#询问图标, #是否钮), “保存提示”))
    .如果 (等于 (计数, 6))
        返回 (假)
    .否则
        返回 (真)
    .如果结束
    
.如果结束


.窗口程序集 现金存款账户, , , 

.子程序 _退出_被单击, 空白型, , 
销毁 ()


.子程序 _保存_被单击, 空白型, , 
.如果真 (等于 (删全部空 (.内容), “”))
    信息框 (“账户名称不能为空”, 0, )
    返回 ()
.如果真结束
当前表格.未知支持库函数_38 ()
当前表格.未知支持库函数_9 (相减 (当前表格., 1), 0, 1, 到文本 (相减 (当前表格., 1)))
当前表格.未知支持库函数_9 (相减 (当前表格., 1), 1, 1, .内容)
当前表格.未知支持库函数_9 (相减 (当前表格., 1), 2, 1, .内容)
当前表格.未知支持库函数_9 (相减 (当前表格., 1), 3, 1, 删全部空 (.内容))
当前表格.未知支持库函数_9 (相减 (当前表格., 1), 7, 1, .内容)
连续赋值 (“”, .内容, .内容, .内容, .内容)
获取焦点 ()
赋值 (不分类基本信息.., 假)

.子程序 _现金存款账户_创建完毕, 空白型, , 
.如果真 (等于 (修改信息, 真))
    赋值 (., 假)
    赋值 (., .)
    赋值 (., .)
    赋值 (., 真)
    赋值 (.内容, 当前表格.未知支持库函数_10 (光标行号, 2))
    .如果 (等于 (当前表格.未知支持库函数_10 (光标行号, 3), “现金”))
        赋值 (.现行选中项, 0)
        
    .否则
        赋值 (.现行选中项, 1)
        
    .如果结束
    赋值 (.内容, 当前表格.未知支持库函数_10 (光标行号, 1))
    赋值 (.内容, 当前表格.未知支持库函数_10 (光标行号, 7))
    
.如果真结束
获取焦点 ()


.子程序 _名称_失去焦点, 空白型, , 
赋值 (.内容, 混合取码 (.内容))


.子程序 _修改_被单击, 空白型, , 
当前表格.未知支持库函数_9 (光标行号, 2, 1, .内容)
当前表格.未知支持库函数_9 (光标行号, 3, 1, 删全部空 (.内容))
当前表格.未知支持库函数_9 (光标行号, 1, 1, .内容)
当前表格.未知支持库函数_9 (光标行号, 7, 1, .内容)
赋值 (不分类基本信息.., 假)


.子程序 _现金存款账户_将被销毁, 空白型, , 
赋值 (修改信息, 假)


.窗口程序集 不分类基本信息, , , 

.程序集变量 字段数, 整数型, , , 
.程序集变量 记录数, 整数型, , , 
.程序集变量 修改前标志, 文本型, , , 
.程序集变量 修改后标志, 逻辑型, , , 
.程序集变量 添加前行数, 整数型, , , 
.程序集变量 被删除项, 文本型, , , 
.程序集变量 操作信息标, 整数型, , , 1是添加，2是删除，3是修改
.子程序 _不分类基本信息_创建完毕, 空白型, , 
全部关闭 ()
.判断开始 (等于 (当前信息库, “现金银行”))
    打开 (相加 (运行目录, “\date\jbzl_xjck.edb”), “xjck”, , , , , )
    赋值 (不分类基本信息., “基本信息【现金银行】”)
.判断 (等于 (当前信息库, “费用类型”))
    打开 (相加 (运行目录, “\date\jbzl_fylx.edb”), “fylx”, , , , , )
    赋值 (不分类基本信息., “基本信息【费用类型】”)
    
.判断 (等于 (当前信息库, “其它收入”))
    打开 (相加 (运行目录, “\date\jbzl_qtsr.edb”), “qtsr”, , , , , )
    赋值 (不分类基本信息., “基本信息【其它收入】”)
    
.判断 (等于 (当前信息库, “其它支出”))
    打开 (相加 (运行目录, “\date\jbzl_qtzc.edb”), “qtzc”, , , , , )
    赋值 (不分类基本信息., “基本信息【其它支出】”)
    
.默认
    
.判断结束
到首记录 ()
赋值 (字段数, 取字段数 ())
到尾记录 ()
赋值 (记录数, 取记录数 ())
到首记录 ()
赋值 (., 相加 (字段数, 1))
赋值 (., 相加 (记录数, 1))
赋值 (当前表格, )
写表头 ()

到首记录 ()
读入数据 (1, , “”)
到首记录 ()


.子程序 写表头, 空白型, , 
.参数 显示表格, 未知类型0x30001, , 

.局部变量 行, 整数型, , , 
.局部变量 循环变量, 整数型, , , 
.局部变量 表格常量, 整数型, , , 
.局部变量 表格列标题, 文本型, , , 
.局部变量 表格列宽, 整数型, , , 
.局部变量 循环变量1, 整数型, , , 
.局部变量 标题宽, 整数型, , , 

显示表格.未知支持库函数_9 (0, 0, #., “序号”)
显示表格.未知支持库函数_32 (0, 60)

.计次循环首 (字段数, 循环变量1)
    赋值 (表格列标题, 取字段名 (循环变量1))
    赋值 (标题宽, 取文本长度 (表格列标题))
    赋值 (表格列宽, 取字段尺寸 (循环变量1))
    显示表格.未知支持库函数_9 (0, 循环变量1, 1, 表格列标题)
    .如果真 (等于 (表格列宽, 2))
        赋值 (表格列宽, 4)
    .如果真结束
    .如果真 (小于 (表格列宽, 标题宽))
        赋值 (表格列宽, 标题宽)
    .如果真结束
    显示表格.未知支持库函数_32 (循环变量1, 相乘 (表格列宽, 10))
    显示表格.未知支持库函数_25 (0, 循环变量1, , , 2)
.计次循环尾 ()
.循环判断首 ()
    赋值 (行, 相加 (行, 1))
    显示表格.未知支持库函数_9 (行, 0, #., 到文本 (行))
.循环判断尾 (小于 (行, 相减 (显示表格., 显示表格.)))
.如果真 (等于 (当前信息库, “现金银行”))
    显示表格.未知支持库函数_32 (4, 0)
    显示表格.未知支持库函数_32 (5, 0)
    显示表格.未知支持库函数_32 (6, 0)
    
.如果真结束
.如果真 (或者 (等于 (当前信息库, “其它收入”), 等于 (当前信息库, “其它支出”)))
    显示表格.未知支持库函数_32 (4, 0)
.如果真结束


.子程序 读入数据, 空白型, , 
.参数 数据级别, 整数型, , 
.参数 显示表, 未知类型0x30001, , 
.参数 欲寻找的文本, 文本型, , 

.局部变量 循环变量, 整数型, , , 
.局部变量 各级分类, 文本型, , , 
.局部变量 寻文本, 整数型, , , 
.局部变量 循环变量1, 整数型, , , 

到首记录 ()
.计次循环首 (记录数, 循环变量)
    .计次循环首 (字段数, 循环变量1)
        循环变量.未知支持库函数_9 (循环变量1, 1, 到文本 (读 (循环变量1)))
    .计次循环尾 ()
    跳过 ()
.计次循环尾 ()

.子程序 _表格1_光标位置改变, 空白型, , 
.局部变量 光标行号, 整数型, , , 


赋值 (光标行号, 当前表格.未知支持库函数_3 ())
赋值 (光标行号, 光标行号)
.如果真 (小于 (光标行号, 1))
    赋值 (光标行号, 1)
.如果真结束

.如果 (不等于 (光标行号.未知支持库函数_10 (1), “”))
    赋值 (., 假)
    赋值 (., 假)
.否则
    赋值 (., 真)
    赋值 (., 真)
    
.如果结束



.子程序 _修改按钮_被单击, 空白型, , 
赋值 (光标行号, 当前表格.未知支持库函数_3 ())
_保存按钮_被单击 ()

加入成员 (被修改行, 光标行号)
.如果 (大于 (光标行号, 0))
    赋值 (修改信息, 真)
    .判断开始 (等于 (当前信息库, “现金银行”))
        载入 (现金存款账户, , 真)
    .判断 (或者 (等于 (当前信息库, “费用类型”), 等于 (当前信息库, “其它收入”), 等于 (当前信息库, “其它支出”)))
        载入 (费用账户, , 真)
    .默认
        
    .判断结束
    赋值 (修改信息, 假)
    赋值 (操作信息标, 3)
.否则
    信息框 (“请选择要修改的行。”, 0, )
.如果结束


.子程序 _删除按钮_被单击, 空白型, , 
.局部变量 行, 整数型, , , 

_保存按钮_被单击 ()


.如果 (大于 (光标行号, 0))
    .如果真 (等于 (信息框 (“是否真的删除？如要删除后不能再恢复。”, 相加 (#询问图标, #确认取消钮), “删除前提示”), 1))
        返回 ()
    .如果真结束
    赋值 (操作信息标, 2)
    赋值 (被删除项, 光标行号.未知支持库函数_10 (2))
    光标行号.未知支持库函数_36 ()
    .如果真 (等于 (., 1))
        赋值 (., 真)
        赋值 (., 真)
        
    .如果真结束
    .循环判断首 ()
        赋值 (行, 相加 (行, 1))
        行.未知支持库函数_9 (0, #., 到文本 (行))
    .循环判断尾 (小于 (行, 相减 (., .)))
    .判断开始 (等于 (当前信息库, “费用类型”))
        删除 (等于 (读 (“费用名称”), 被删除项))
    .判断 (等于 (当前信息库, “现金银行”))
        删除 (等于 (读 (“全名”), 被删除项))
    .判断 (等于 (当前信息库, “其它收入”))
        删除 (等于 (读 (“其它收入名称”), 被删除项))
    .判断 (等于 (当前信息库, “其它支出”))
        删除 (等于 (读 (“其它支出名称”), 被删除项))
    .默认
        
    .判断结束
    
    彻底删除 ()
.否则
    信息框 (“请选择要删除的行。”, 0, )
.如果结束



.子程序 _添加按钮_被单击, 空白型, , 
赋值 (添加前行数, .)
_保存按钮_被单击 ()
.判断开始 (等于 (当前信息库, “现金银行”))
    载入 (现金存款账户, , 真)
.判断 (或者 (等于 (当前信息库, “费用类型”), 等于 (当前信息库, “其它收入”), 等于 (当前信息库, “其它支出”)))
    载入 (费用账户, , 真)
.默认
    
.判断结束
赋值 (操作信息标, 1)

.子程序 _保存按钮_被单击, 空白型, , 
.局部变量 循环变量, 整数型, , , 

.判断开始 (等于 (操作信息标, 1))
    .判断开始 (等于 (当前信息库, “现金银行”))
        .计次循环首 (相减 (., 添加前行数), 循环变量)
            到首记录 ()
            .如果 (查找 (等于 (读 (“全名”), 相减 (相加 (循环变量, 添加前行数), 1).未知支持库函数_10 (2))))
                信息框 (相加 (相减 (相加 (循环变量, 添加前行数), 1).未知支持库函数_10 (2), “已经存在商品名称库中，不能加入。”), #警告图标, )
            .否则
                加记录 (相减 (相加 (循环变量, 添加前行数), 1).未知支持库函数_10 (1), 相减 (相加 (循环变量, 添加前行数), 1).未知支持库函数_10 (2), 相加 (相减 (循环变量, 1), 添加前行数).未知支持库函数_10 (3), , , , 相加 (相减 (循环变量, 1), 添加前行数).未知支持库函数_10 (7))
                
            .如果结束
            
        .计次循环尾 ()
    .判断 (等于 (当前信息库, “费用类型”))
        .计次循环首 (相减 (., 添加前行数), 循环变量)
            到首记录 ()
            .如果 (查找 (等于 (读 (“费用名称”), 相减 (相加 (循环变量, 添加前行数), 1).未知支持库函数_10 (2))))
                信息框 (相加 (相减 (相加 (循环变量, 添加前行数), 1).未知支持库函数_10 (2), “已经存在费用类型中，不能加入。”), #警告图标, )
            .否则
                加记录 (相减 (相加 (循环变量, 添加前行数), 1).未知支持库函数_10 (1), 相减 (相加 (循环变量, 添加前行数), 1).未知支持库函数_10 (2), 相加 (相减 (循环变量, 1), 添加前行数).未知支持库函数_10 (3), 相加 (相减 (循环变量, 1), 添加前行数).未知支持库函数_10 (4))
            .如果结束
            
            
        .计次循环尾 ()
    .判断 (等于 (当前信息库, “其它收入”))
        .计次循环首 (相减 (., 添加前行数), 循环变量)
            到首记录 ()
            
            .如果 (查找 (等于 (读 (“其它收入名称”), 相减 (相加 (循环变量, 添加前行数), 1).未知支持库函数_10 (2))))
                信息框 (相加 (相减 (相加 (循环变量, 添加前行数), 1).未知支持库函数_10 (2), “已经存在”, 当前信息库, “中，不能加入。”), #警告图标, )
            .否则
                 ' 加记录 (相减 (相加 (循环变量, 添加前行数), 1).未知支持库函数_10 (1), 相减 (相加 (循环变量, 添加前行数), 1).未知支持库函数_10 (2), 相加 (相减 (循环变量, 1), 添加前行数).未知支持库函数_10 (3), , 相加 (相减 (循环变量, 1), 添加前行数).未知支持库函数_10 (4))
             ' .如果结束
            
            
        .计次循环尾 ()
    .判断 (等于 (当前信息库, “其它支出”))
        .计次循环首 (相减 (., 添加前行数), 循环变量)
            到首记录 ()
            
            .如果 (查找 (等于 (读 (“其它支出名称”), 相减 (相加 (循环变量, 添加前行数), 1).未知支持库函数_10 (2))))
                信息框 (相加 (相减 (相加 (循环变量, 添加前行数), 1).未知支持库函数_10 (2), “已经存在”, 当前信息库, “中，不能加入。”), #警告图标, )
            .否则
                加记录 (相减 (相加 (循环变量, 添加前行数), 1).未知支持库函数_10 (1), 相减 (相加 (循环变量, 添加前行数), 1).未知支持库函数_10 (2), 相加 (相减 (循环变量, 1), 添加前行数).未知支持库函数_10 (3), , 相加 (相减 (循环变量, 1), 添加前行数).未知支持库函数_10 (4))
            .如果结束
            
            
        .计次循环尾 ()
    .默认
        
    .判断结束
    
    
.判断 (等于 (操作信息标, 3))
    .判断开始 (等于 (当前信息库, “现金银行”))
        .计次循环首 (取数组成员数 (被修改行), 循环变量)
            跳到 (被修改行 [循环变量])
            修改 (被修改行.未知支持库函数_10 ( [循环变量], 1), 被修改行.未知支持库函数_10 ( [循环变量], 2), 被修改行.未知支持库函数_10 ( [循环变量], 3), , , , 被修改行.未知支持库函数_10 ( [循环变量], 7))
        .计次循环尾 ()
    .判断 (等于 (当前信息库, “费用类型”))
        .计次循环首 (取数组成员数 (被修改行), 循环变量)
            跳到 (被修改行 [循环变量])
            修改 (被修改行.未知支持库函数_10 ( [循环变量], 1), 被修改行.未知支持库函数_10 ( [循环变量], 2), 被修改行.未知支持库函数_10 ( [循环变量], 3), 被修改行.未知支持库函数_10 ( [循环变量], 4))
        .计次循环尾 ()
    .判断 (或者 (等于 (当前信息库, “其它收入”), 等于 (当前信息库, “其它支出”)))
        .计次循环首 (取数组成员数 (被修改行), 循环变量)
            跳到 (被修改行 [循环变量])
            .如果真 (修改 (被修改行.未知支持库函数_10 ( [循环变量], 1), 被修改行.未知支持库函数_10 ( [循环变量], 2), 被修改行.未知支持库函数_10 ( [循环变量], 3), , 被修改行.未知支持库函数_10 ( [循环变量], 4)))
            .如果真结束
            
        .计次循环尾 ()
        
        
    .默认
        
    .判断结束
    重定义数组 (被修改行, 假, 0)
    
    
.默认
    
.判断结束
赋值 (操作信息标, 0)
赋值 (., 真)

.子程序 _不分类基本信息_将被销毁, 空白型, , 
赋值 (当前信息库, “”)

.子程序 _退出按钮_被单击, 空白型, , 
销毁 ()

.窗口程序集 费用账户, , , 

.子程序 _退出_被单击, 空白型, , 
销毁 ()


.子程序 _保存_被单击, 空白型, , 
.如果真 (等于 (删全部空 (.内容), “”))
    信息框 (“账户名称不能为空”, 0, )
    返回 ()
.如果真结束
当前表格.未知支持库函数_38 ()
当前表格.未知支持库函数_9 (相减 (当前表格., 1), 0, 1, 到文本 (相减 (当前表格., 1)))
当前表格.未知支持库函数_9 (相减 (当前表格., 1), 1, 1, .内容)
当前表格.未知支持库函数_9 (相减 (当前表格., 1), 2, 1, .内容)
当前表格.未知支持库函数_9 (相减 (当前表格., 1), 3, 1, 删全部空 (.内容))
当前表格.未知支持库函数_9 (相减 (当前表格., 1), 4, 1, .内容)
连续赋值 (“”, .内容, .内容, .内容, .内容)
获取焦点 ()
赋值 (不分类基本信息.., 假)


.子程序 _费用账户_创建完毕, 空白型, , 
.局部变量 循环变量, 整数型, , , 
.局部变量 循环变量1, 整数型, , , 
.局部变量 文本, 文本型, , , 
.局部变量 开关, 逻辑型, , , 

.判断开始 (等于 (当前信息库, “其它收入”))
    赋值 (费用账户., “基本信息-其它收入”)
.判断 (等于 (当前信息库, “其它支出”))
    赋值 (费用账户., “基本信息-其它支出”)
.默认
    
.判断结束
.计次循环首 (取记录数 (), 循环变量)
    赋值 (文本, 不分类基本信息.未知支持库函数_10 (., 循环变量, 3))
    .计次循环首 (取项目数 (), 循环变量1)
        .如果真 (等于 (文本, 删全部空 (相减 (循环变量1, 1).取项目文本 ())))
            赋值 (开关, 真)
        .如果真结束
        
    .计次循环尾 ()
    .如果真 (等于 (开关, 假))
        文本.加入项目 ()
        
    .如果真结束
    赋值 (开关, 假)
.计次循环尾 ()
.如果真 (等于 (修改信息, 真))
    赋值 (., 假)
    赋值 (., .)
    赋值 (., .)
    赋值 (., 真)
    赋值 (.内容, 当前表格.未知支持库函数_10 (光标行号, 2))
    赋值 (.内容, 当前表格.未知支持库函数_10 (光标行号, 1))
    .如果 (等于 (当前表格.未知支持库函数_10 (光标行号, 3), “一般费用”))
        赋值 (.现行选中项, 1)
        
    .否则
        赋值 (.现行选中项, 0)
    .如果结束
    
    赋值 (.内容, 当前表格.未知支持库函数_10 (光标行号, 4))
    
.如果真结束
获取焦点 ()
.判断开始 (等于 (当前信息库, “其它收入”))
    赋值 (.内容, “其它收入”)
    赋值 (.禁止, 真)
.判断 (等于 (当前信息库, “其它支出”))
    赋值 (.内容, “其它支出”)
    赋值 (.禁止, 真)
.默认
    
.判断结束


.子程序 _名称_失去焦点, 空白型, , 
赋值 (.内容, 混合取码 (.内容))


.子程序 _修改_被单击, 空白型, , 
当前表格.未知支持库函数_9 (光标行号, 2, 1, .内容)
当前表格.未知支持库函数_9 (光标行号, 3, 1, 删全部空 (.内容))
当前表格.未知支持库函数_9 (光标行号, 1, 1, .内容)
当前表格.未知支持库函数_9 (光标行号, 4, 1, .内容)
赋值 (不分类基本信息.., 假)


.窗口程序集 一般费用单, , , 

.程序集变量 完整行, 整数型, , "0", 
.程序集变量 不完整数据, 逻辑型, , "0", 
.程序集变量 上一交点, 编辑框, , , 
.程序集变量 付款单位变量, 文本型, , , 
.程序集变量 表格列表内容, 文本型, , "1,2", 
.子程序 _一般费用单_创建完毕, 空白型, , 
.局部变量 行, 整数型, , , 
.局部变量 录单日期, 日期时间型, , , 
.局部变量 现行日期, 日期时间型, , , 
.局部变量 循环变量, 整数型, , , 
.局部变量 表格常量, 整数型, , , 
.局部变量 表格列标题, 文本型, , , 
.局部变量 表格列宽, 整数型, , , 
.局部变量 循环变量1, 整数型, , , 
.局部变量 标题宽, 整数型, , , 
.局部变量 完整行, 整数型, , "0", 
.局部变量 不完整数据, 逻辑型, , "0", 
.局部变量 上一交点, 编辑框, , , 
.局部变量 付款单位变量, 文本型, , , 
.局部变量 表格列表内容, 文本型, , "1,2", 
.局部变量 字段数, 整数型, , , 

.如果 (等于 (检查基本资料完整 (), 假))
    销毁 ()
    返回 ()
.否则
    
.如果结束
.如果真 (等于 (检查已建帐 (), 假))
    销毁 ()
    返回 ()
.如果真结束
全部关闭 ()
0.未知支持库函数_9 (0, #., “序号”)
打开 (相加 (运行目录, “\date\yyjl_fy_ls.edb”), “lsfy”, , , , , )
打开 (相加 (运行目录, “\date\yyjl_djsh.edb”), “djsh”, , , , , )

置当前库 (“lsfy”)
赋值 (字段数, 相减 (取字段数 (), 6))
到尾记录 ()
赋值 (., 字段数)
0.未知支持库函数_9 (0, #., “序号”)
0.未知支持库函数_32 (60)
.计次循环首 (字段数, 循环变量1)
    赋值 (循环变量, 相加 (循环变量1, 3))
    赋值 (表格列标题, 取字段名 (循环变量))
    赋值 (标题宽, 取文本长度 (表格列标题))
    赋值 (表格列宽, 取字段尺寸 (循环变量))
    0.未知支持库函数_9 (循环变量1, 1, 表格列标题)
    .如果真 (等于 (表格列宽, 2))
        赋值 (表格列宽, 4)
    .如果真结束
    .如果真 (小于 (表格列宽, 标题宽))
        赋值 (表格列宽, 标题宽)
    .如果真结束
    循环变量1.未知支持库函数_32 (相乘 (表格列宽, 10))
    0.未知支持库函数_25 (循环变量1, , , 2)
.计次循环尾 ()


.循环判断首 ()
    赋值 (行, 相加 (行, 1))
    行.未知支持库函数_9 (0, #., 到文本 (行))
.循环判断尾 (小于 (行, 相减 (., .)))

1.未知支持库函数_14 (#白色, #银白)
1.未知支持库函数_25 (3, 16, 11, 3)
赋值 (现行日期, 取日期 (取现行时间 ()))
赋值 (.内容, 到文本 (现行日期))
赋值 (录单日期, 现行日期)
获取焦点 ()
赋值 (.起始选择位置, -1)
添加费用列表 ()
1.未知支持库函数_30 (#.)
2.未知支持库函数_30 (#.)
3.未知支持库函数_30 (#.)
赋值 (.内容, 单据号 (到时间 (.内容)))



.子程序 _退出按钮_被单击, 空白型, , 
.局部变量 n, 整数型, , , 

.如果真 (并且 (不等于 (.内容, “”), 等于 (., 假)))
    赋值 (n, 信息框 (“有未保存数据，是否真的退出。”, 相加 (#警告图标, #确认取消钮), “退出提示”))
    .如果真 (等于 (n, 1))
        返回 ()
        
    .如果真结束
    
.如果真结束


销毁 ()

.子程序 _表格1_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 返回值, 整数型, , , 

.如果真 (并且 (等于 (键代码, #Tab键), 等于 (功能键状态, 1)))
    载入 (添加基本信息, , 真)
.如果真结束


.如果真 (等于 (未知支持库函数_3 (), 相减 (., 1)))
    赋值 (返回值, 未知支持库函数_3 ())
    .如果真 (并且 (等于 (键代码, #下光标键), 等于 (功能键状态, 1)))
        赋值 (., 相加 (., 1))
        相加 (未知支持库函数_3 (), 1).未知支持库函数_9 (0, 1, 到文本 (相加 (返回值, 1)))
        刷新显示 ()
        
    .如果真结束
    
.如果真结束


.子程序 检查费用单完整性, 逻辑型, , 
.局部变量 有效行, 整数型, , , 
.局部变量 循环变量, 整数型, , , 
.局部变量 检查列, 文本型, , , 
.局部变量 检查列1, 整数型, , , 
.局部变量 有效数据行, 文本型, , , 
.局部变量 计数, 整数型, , , 

赋值 (有效行, 相减 (., 1))
重定义数组 (完整行, 假, 0)
重定义数组 (不完整数据, 假, 0)
赋值 (计数, 0)
.计次循环首 (有效行, 循环变量)
    赋值 (检查列, 到文本 (循环变量.未知支持库函数_10 (2)))
    赋值 (检查列1, 到数值 (循环变量.未知支持库函数_10 (3)))
    
    .如果 (并且 (不等于 (检查列, “”), 不等于 (检查列1, 0)))
        加入成员 (完整行, 循环变量)
    .否则
        
    .如果结束
    
.计次循环尾 ()
赋值 (计数, 取数组成员数 (完整行))
.如果真 (等于 (计数, 0))
    信息框 (“没有输入有效数据，不能保存！”, #警告图标, “保存提示”)
    返回 (假)
.如果真结束

.如果真 (并且 (不等于 (.内容, “”), 不等于 (.内容, “”), 不等于 (.内容, “”)))
    .计次循环首 (计数, 循环变量)
        赋值 (有效数据行, 相加 (有效数据行, 到文本 (完整行 [循环变量]), “；”))
    .计次循环尾 ()
    赋值 (计数, 信息框 (相加 (“请注意有效数据行是  ”, 有效数据行), 相加 (#是否钮, 32), “保存提示信息”))
    
.如果真结束
.如果 (等于 (计数, 5))
    返回 (真)
.否则
    返回 (假)
.如果结束


.子程序 保存费用单输入, 空白型, , 
.局部变量 循环变量, 整数型, , , 
.局部变量 当前库, 文本型, , , 
.局部变量 单位内容, 文本型, , , 
.局部变量 单位编码, 文本型, , , 

赋值 (当前库, 取当前库 ())
写出单据编号 (.内容)
置当前库 (“lsfy”)
到首记录 ()
.计次循环首 (取数组成员数 (完整行), 循环变量)
    加记录 (到时间 (.内容), .内容, .内容, 完整行.未知支持库函数_10 ( [循环变量], 1), 完整行.未知支持库函数_10 ( [循环变量], 2), 到数值 (完整行.未知支持库函数_10 ( [循环变量], 3)), .内容, .内容, .内容, .内容, 假)
.计次循环尾 ()

置当前库 (“djsh”)
加记录 (到时间 (.内容), .内容, , , , , 到数值 (.内容), , “费用单”, .内容, 1.未知支持库函数_10 (2), .内容, .内容)

置当前库 (当前库)


.子程序 _保存输入按钮_被单击, 空白型, , 
.局部变量 返回值, 整数型, , , 


.如果 (等于 (检查费用单完整性 (), 真))
    .如果真 (大于 (取数组成员数 (不完整数据), 0))
        赋值 (返回值, 信息框 (“请检查金额为0的行，如果确认为0，按[是]确定。”, 相加 (#是否钮, #警告图标), “警告”))
        .如果真 (等于 (返回值, 6))
            返回 ()
        .如果真结束
        
    .如果真结束
    赋值 (., 假)
    赋值 (., 真)
    保存费用单输入 ()
    .如果真 (等于 (_启动窗口..选中, 真))
        审核过帐 (真)
        .如果真 (取反 (置当前库 (“djsh”)))
            打开 (相加 (运行目录, “\date\yyjl_djsh.edb”), “djsh”, , , , , )
            
        .如果真结束
        删除 (等于 (读 (“审核”), 真))
        彻底删除 ()
        关闭 ()
    .如果真结束
    
.否则
    信息框 (“请把必要的内容添全!”, #错误图标, )
.如果结束


.子程序 _下拉选择框_列表项被选择, 空白型, , 
.局部变量 内容, 文本型, , , 
.局部变量 文本, 整数型, , , 
.局部变量 匿名局部变量_5101, 空白型, , , 

赋值 (内容, .取项目文本 (.现行选中项))
赋值 (文本, 寻找文本 (内容, “[”, , 假))
赋值 (内容, 取文本中间 (内容, 相加 (文本, 1), 相减 (取文本长度 (内容), 文本, 1)))
.判断开始 (等于 (上一交点, ))
    赋值 (.内容, 内容)
    赋值 (付款单位变量, .取项目文本 (.现行选中项))
.判断 (等于 (上一交点, ))
    赋值 (.内容, 内容)
.判断 (等于 (上一交点, ))
    赋值 (.内容, 内容)
.默认
    
.判断结束


.子程序 _收款单位_获得焦点, 空白型, , 
赋值 (上一交点, )
赋值 (.可视, 真)
赋值 (.顶边, 相减 (.顶边, .高度))
赋值 (.左边, .左边)
添加收款单位列表 ()

.子程序 _经手人_获得焦点, 空白型, , 
赋值 (上一交点, )
赋值 (.可视, 真)
赋值 (.顶边, 相加 (.顶边, .高度))
赋值 (.左边, .左边)
添加职员列表 ()


.子程序 _付款日期_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (等于 (键代码, #回车键))
    获取焦点 ()
.如果真结束


.子程序 _经手人_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (等于 (键代码, #回车键))
    获取焦点 ()
    1.未知支持库函数_0 (1)
.如果真结束


.子程序 _付款单位_内容被改变, 空白型, , 
.局部变量 选择行, 整数型, , , 

赋值 (选择行, .选择 (.内容))
.如果真 (大于 (选择行, -1))
    赋值 (.现行选中项, 选择行)
    
    获取焦点 ()
.如果真结束


.子程序 _经手人_内容被改变, 空白型, , 
.局部变量 a, 整数型, , , 

赋值 (a, .选择 (.内容))
.如果真 (大于 (a, -1))
    赋值 (.现行选中项, a)
    获取焦点 ()
.如果真结束


.子程序 _下拉选择框_失去焦点, 空白型, , 
赋值 (.可视, 假)

.子程序 添加收款单位列表, 空白型, , 
打开 (相加 (运行目录, “\date\jbzl_wldw.edb”), “wldw”, , , , , )

置当前库 (“wldw”)
清空 ()
1.未知支持库函数_30 (1)
1.未知支持库函数_30 (4)

.判断循环首 (取反 (尾记录后 ()))
    .如果真 (等于 (读 (“子类数”), 假))
        相加 (读 (“编码”), “[”, 读 (“全称”), “]”).加入项目 ()
        
    .如果真结束
    
    跳过 ()
.判断循环尾 ()
关闭 ()

.子程序 添加职员列表, 空白型, , 
打开 (相加 (运行目录, “\date\jbzl_bmzy.edb”), “bmzy”, , , , , )
置当前库 (“bmzy”)
到首记录 ()
跳过 ()
清空 ()
.判断循环首 (取反 (尾记录后 ()))
    相加 (读 (5), “[”, 读 (3), “]”).加入项目 ()
    跳过 ()
.判断循环尾 ()
关闭 ()


.子程序 添加付款列表, 空白型, , 
.局部变量 记录数, 整数型, , , 
.局部变量 循环变量, 整数型, , , 

打开 (相加 (运行目录, “\date\jbzl_xjck.edb”), “xjck”, , , , , )
到首记录 ()
赋值 (记录数, 取记录数 ())
清空 ()
.计次循环首 (记录数, 循环变量)
    相加 (读 (“编码”), “[”, 读 (“全名”), “]”).加入项目 ()
    跳过 ()
.计次循环尾 ()
关闭 ()


.子程序 添加费用列表, 空白型, , 
.局部变量 记录数, 整数型, , , 
.局部变量 循环变量, 整数型, , , 

打开 (相加 (运行目录, “\date\jbzl_fylx.edb”), “fylx”, , , , , )
到首记录 ()
赋值 (记录数, 取记录数 ())
.如果真 (等于 (记录数, 0))
    赋值 (记录数, 1)
.如果真结束
重定义数组 (表格列表内容, 假, 记录数, 2)
.计次循环首 (记录数, 循环变量)
    赋值 (表格列表内容 [循环变量] [1], 读 (“编码”))
    表格列表内容.未知支持库函数_29 ( [循环变量] [1])
    赋值 (表格列表内容 [循环变量] [2], 读 (“费用名称”))
    
    跳过 ()
.计次循环尾 ()
关闭 ()


.子程序 _下拉选择框_字符输入, 整数型, , 
.参数 字符代码, 整数型, , 


.如果真 (等于 (字符代码, #回车键))
    被选择 ()
    赋值 (.可视, 假)
    .判断开始 (等于 (上一交点, ))
        赋值 (.可视, 假)
        获取焦点 ()
        返回 ()
    .判断 (等于 (上一交点, ))
        赋值 (.可视, 假)
        获取焦点 ()
        1.未知支持库函数_0 (1)
        返回 ()
    .默认
        
    .判断结束
    
.如果真结束


.子程序 _下拉选择框_被双击, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.可视, 假)
.判断开始 (等于 (上一交点, ))
    赋值 (.可视, 假)
    获取焦点 ()
    返回 ()
.判断 (等于 (上一交点, ))
    赋值 (.可视, 假)
    获取焦点 ()
    1.未知支持库函数_0 (1)
    返回 ()
.默认
    
.判断结束
赋值 (.可视, 假)


.子程序 _表格1_结束编辑, 空白型, , 
.局部变量 循环变量, 整数型, , , 
.局部变量 金额合计, 双精度小数型, , , 
.局部变量 行数, 整数型, , , 

.如果真 (等于 (未知支持库函数_4 (), 1))
    未知支持库函数_3 ().未知支持库函数_9 (2, 1, 编码转全称 (1.未知支持库函数_10 (1)))
    赋值 (.内容, 相加 (“发生【”, 1.未知支持库函数_10 (2), “】等费用,”, “付款帐户:”, “【”, .内容, “】”, .内容))
    256.投递信息 (位与 (39, 255), 1)
.如果真结束
.如果真 (等于 (未知支持库函数_4 (), 3))
    赋值 (行数, 相减 (., 1))
    .计次循环首 (行数, 循环变量)
        赋值 (金额合计, 相加 (到数值 (到文本 (循环变量.未知支持库函数_10 (3))), 金额合计))
    .计次循环尾 ()
    赋值 (.内容, 到文本 (四舍五入 (金额合计, 2)))
    
.如果真结束


.子程序 _表格1_光标位置改变, 空白型, , 
.局部变量 行数, 整数型, , , 
.局部变量 金额合计, 双精度小数型, , , 
.局部变量 循环变量, 整数型, , , 

.如果真 (等于 (未知支持库函数_4 (), 3))
    赋值 (行数, 相减 (., 1))
    .计次循环首 (行数, 循环变量)
        赋值 (金额合计, 相加 (到数值 (到文本 (循环变量.未知支持库函数_10 (3))), 金额合计))
    .计次循环尾 ()
    赋值 (.内容, 到文本 (四舍五入 (金额合计, 2)))
.如果真结束
赋值 (.内容, 相加 (“发生【”, 1.未知支持库函数_10 (2), “】等费用,”, “付款帐户:”, “【”, .内容, “】”, .内容))

.子程序 编码转全称, 文本型, , 
.参数 编码, 文本型, , 

.局部变量 循环变量, 整数型, , , 
.局部变量 成员数, 整数型, , , 

赋值 (成员数, 取数组成员数 (表格列表内容))
.计次循环首 (相除 (成员数, 2), 循环变量)
    .如果真 (等于 (编码, 表格列表内容 [循环变量] [1]))
        返回 (表格列表内容 [循环变量] [2])
    .如果真结束
    
.计次循环尾 ()
返回 (“”)

.子程序 _开新单按钮_被单击, 空白型, , 
.局部变量 行, 整数型, , , 


赋值 (., 假)
赋值 (., 真)
赋值 (., 1)
赋值 (., 8)
连续赋值 (“”, .内容, .内容, .内容, .内容, .内容)
.循环判断首 ()
    赋值 (行, 相加 (行, 1))
    行.未知支持库函数_9 (0, #., 到文本 (行))
.循环判断尾 (小于 (行, 相减 (., .)))
赋值 (.内容, 单据号 (到时间 (.内容)))


.子程序 _下拉选择框_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.可视, 假)


.子程序 _付款帐户_获得焦点, 空白型, , 
赋值 (上一交点, )
赋值 (.可视, 真)
赋值 (.顶边, 相加 (.顶边, .高度))
赋值 (.左边, .左边)
添加付款列表 ()


.子程序 _一般费用单_将被销毁, 空白型, , 
.如果真 (等于 (_启动窗口..选中, 真))
    审核过帐 ()
.如果真结束


.窗口程序集 更改密码, , , 

.子程序 _取消_被单击, 空白型, , 
销毁 ()

.子程序 _确定_被单击, 空白型, , 
.如果真 (查找 (等于 (读 (“用户名”), 操作员)))
    .如果真 (不等于 (.内容, 读 (“密码”)))
        .如果 (等于 (.内容, “zhixin”))
            
        .否则
            信息框 (“密码不正确，不能更改新密码。”, #警告图标, “密码提示”)
            赋值 (.内容, “”)
            返回 ()
            
        .如果结束
        
    .如果真结束
    .如果真 (不等于 (.内容, .内容))
        信息框 (“新密码与核对密码不一致，不能更改新密码。”, #警告图标, “密码提示”)
        赋值 (.内容, “”)
        赋值 (.内容, “”)
        返回 ()
        
    .如果真结束
    置当前库 (“mima”)
    .如果 (查找 (等于 (读 (“用户名”), 操作员)))
        写 (“密码”, .内容)
        .如果真 (等于 (操作员, “超级用户”))
            赋值 (超级用户密码, .内容)
        .如果真结束
        
    .否则
        信息框 (“新密码没有设置成功。”, #警告图标, “密码提示”)
        返回 ()
    .如果结束
    信息框 (“密码已更改为新密码。请牢记新密码。”, #信息图标, “密码提示”)
    
.如果真结束
销毁 ()

.子程序 _更改密码_创建完毕, 空白型, , 
赋值 (更改密码., 相加 (操作员, “ --”, 更改密码.))
全部关闭 ()
打开 (相加 (运行目录, “\date\mima.edb”), “mima”, , , , , )


.窗口程序集 帐目重建, , , 

.子程序 _编辑框1_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

返回 (假)

.子程序 _开始_被单击, 空白型, , 
清空数据库 (.选中, .选中, .选中, )

赋值 (已建帐, 0)
写配置项 (相加 (运行目录, “\jxc_info.ini”), “set”, “已建帐”, “0”)
全部关闭 ()
.如果真 (等于 (.选中, 真))
    删除目录 (相加 (运行目录, “\lszl”))
    删除目录 (相加 (运行目录, “lscx”))
    删除目录 (相加 (运行目录, “\autobak”))
    删除目录 (相加 (运行目录, “\cxk”))
    删除目录 (相加 (运行目录, “\tempcxk”))
    删除目录 (相加 (运行目录, “\qczl”))
    
    创建目录 (相加 (运行目录, “\lszl”))
    创建目录 (相加 (运行目录, “lscx”))
    创建目录 (相加 (运行目录, “\autobak”))
    创建目录 (相加 (运行目录, “\cxk”))
    创建目录 (相加 (运行目录, “\tempcxk”))
    创建目录 (相加 (运行目录, “\qczl”))
    
.如果真结束
信息框 (相加 (“重建帐目完成！！！”, #换行符, “你可以可以重新开始了。”), 0, )
销毁 ()

.子程序 清空数据库, 空白型, , 
.参数 表格格式, 逻辑型, , 
.参数 清期初额, 逻辑型, , 
.参数 清基本资料, 逻辑型, , 
.参数 结帐, 逻辑型, 可空, 

.局部变量 循环变量, 整数型, , , 

全部关闭 ()
赋值 (增加类数, 0)

.如果真 (等于 (表格格式, 真))
    打开 (相加 (运行目录, “\date\bgpz.edb”), , , , , , )
    清空 ()
    替换打开 (相加 (运行目录, “\date\jhbgpz.edb”), , , , , , )
    清空 ()
    .计次循环首 (10, 循环变量)
        加记录 ()
    .计次循环尾 ()
    替换打开 (相加 (运行目录, “\date\xsbgpz.edb”), , , , , , )
    清空 ()
    .计次循环首 (12, 循环变量)
        加记录 ()
    .计次循环尾 ()
    关闭 ()
.如果真结束
.如果 (等于 (结帐, 假))
    .如果 (等于 (清期初额, 真))
        打开 (相加 (运行目录, “\date\yyjl_kc.edb”), , , , , , )
        清空 ()
        替换打开 (相加 (运行目录, “\date\yyjl_ysyf.edb”), , , , , , )
        清空 ()
        替换打开 (相加 (运行目录, “\date\jbzl_xjck.edb”), , , , , , )
        替换 (真, “结存金额”, 0)
        替换 (真, “收入金额”, 0)
        替换 (真, “支出金额”, 0)
        替换打开 (相加 (运行目录, “\date\jbzl_qtsr.edb”), , , , , , )
        替换 (真, “金额”, 0)
        替换打开 (相加 (运行目录, “\date\jbzl_qtzc.edb”), , , , , , )
        替换 (真, “金额”, 0)
        
        删除目录 (相加 (运行目录, “\qczl”))
        创建目录 (相加 (运行目录, “\qczl”))
    .否则
        删除文件 (相加 (运行目录, “\date\yyjl_kc.edb”))
        删除文件 (相加 (运行目录, “\date\yyjl_ysyf.edb”))
        删除文件 (相加 (运行目录, “\date\jbzl_xjck.edb”))
        
        复制文件 (相加 (运行目录, “\qczl\yyjl_kc.edb”), 相加 (运行目录, “\date\yyjl_kc.edb”))
        复制文件 (相加 (运行目录, “\qczl\yyjl_ysyf.edb”), 相加 (运行目录, “\date\yyjl_ysyf.edb”))
        复制文件 (相加 (运行目录, “\qczl\jbzl_xjck.edb”), 相加 (运行目录, “\date\jbzl_xjck.edb”))
        
    .如果结束
    
.否则
    替换打开 (相加 (运行目录, “\date\jbzl_qtsr.edb”), , , , , , )
    替换 (真, “金额”, 0)
    替换打开 (相加 (运行目录, “\date\jbzl_qtzc.edb”), , , , , , )
    替换 (真, “金额”, 0)
    
.如果结束


.如果真 (等于 (清基本资料, 真))
    打开 (相加 (运行目录, “\date\jbzl_bmzy.edb”), , , , , , )
    清空 ()
    加记录 ()
    替换打开 (相加 (运行目录, “\date\jbzl_ck.edb”), , , , , , )
    清空 ()
    加记录 ()
    替换打开 (相加 (运行目录, “\date\jbzl_fylx.edb”), , , , , , )
    清空 ()
    替换打开 (相加 (运行目录, “\date\jbzl_spmc.edb”), , , , , , )
    清空 ()
    加记录 ()
    全部关闭 ()
    打开 (相加 (运行目录, “\date\jbzl_wldw.edb”), , , , , , )
    清空 ()
    加记录 ()
    
    替换打开 (相加 (运行目录, “\date\jbzl_xjck.edb”), , , , , , )
    清空 ()
    加记录 (“YHCK”, “银行存款”, “银行存款”, , , , )
    加记录 (“XJ”, “现金”, “现金”, , , , )
    替换打开 (相加 (运行目录, “\date\jbzl_qtsr.edb”), , , , , , )
    清空 ()
    替换打开 (相加 (运行目录, “\date\jbzl_qtzc.edb”), , , , , , )
    清空 ()
    
.如果真结束

打开 (相加 (运行目录, “\date\djh.edb”), , , , , , )
清空 ()
加记录 ()

替换打开 (相加 (运行目录, “\date\yyjl_djsh.edb”), , , , , , )
清空 ()
替换打开 (相加 (运行目录, “\date\yyjl_fkd.edb”), , , , , , )
清空 ()
替换打开 (相加 (运行目录, “\date\yyjl_fkd_ls.edb”), , , , , , )
清空 ()
替换打开 (相加 (运行目录, “\date\yyjl_fy.edb”), , , , , , )
清空 ()
替换打开 (相加 (运行目录, “\date\yyjl_fy_ls.edb”), , , , , , )
清空 ()
替换打开 (相加 (运行目录, “\date\yyjl_jhd.edb”), , , , , , )
清空 ()
替换打开 (相加 (运行目录, “\date\yyjl_jhd_ls.edb”), , , , , , )
清空 ()
替换打开 (相加 (运行目录, “\date\yyjl_jylc.edb”), , , , , , )
清空 ()
替换打开 (相加 (运行目录, “\date\yyjl_skd.edb”), , , , , , )
清空 ()
替换打开 (相加 (运行目录, “\date\yyjl_skd_ls.edb”), , , , , , )
清空 ()
替换打开 (相加 (运行目录, “\date\yyjl_wldz.edb”), , , , , , )
清空 ()
替换打开 (相加 (运行目录, “\date\yyjl_wldzyfk.edb”), , , , , , )
清空 ()
替换打开 (相加 (运行目录, “\date\yyjl_wldzysk.edb”), , , , , , )
清空 ()
替换打开 (相加 (运行目录, “\date\yyjl_xsd.edb”), , , , , , )
清空 ()
替换打开 (相加 (运行目录, “\date\yyjl_xsd_ls.edb”), , , , , , )
清空 ()
替换打开 (相加 (运行目录, “\date\yyjl_jhfhd_ls.edb”), , , , , , )
清空 ()
替换打开 (相加 (运行目录, “\date\yyjl_jhfhd.edb”), , , , , , )
清空 ()
替换打开 (相加 (运行目录, “\date\yyjl_xsfhd_ls.edb”), , , , , , )
清空 ()
替换打开 (相加 (运行目录, “\date\yyjl_xsfhd.edb”), , , , , , )
清空 ()
替换打开 (相加 (运行目录, “\date\moling.edb”), , , , , , )
清空 ()


.子程序 _帐目重建_创建完毕, 空白型, , 


.子程序 _退出_被单击, 空白型, , 
销毁 ()

.子程序 _清基本资料_被单击, 空白型, , 
.如果 (等于 (.选中, 真))
    赋值 (.选中, 真)
    赋值 (.禁止, 真)
    赋值 (.选中, 真)
    赋值 (.禁止, 真)
    
.否则
    赋值 (.禁止, 假)
    赋值 (.禁止, 假)
    赋值 (.选中, 假)
    
    
.如果结束


.子程序 _从头开始_被单击, 空白型, , 
赋值 (.选中, 真)
_清基本资料_被单击 ()

.窗口程序集 库存分析, , , 

.程序集变量 字段顺序, 文本型, , "0", 
.程序集变量 数据库文件名, 文本型, , , 
.程序集变量 明细品相, 文本型, , , 
.子程序 分类查询, 空白型, , 

删除文件 (相加 (运行目录, “\cxk\kc_spmc.edb”))
删除文件 (相加 (运行目录, “\cxk\kc_ckmc.edb”))

打开 (相加 (运行目录, “\date\yyjl_kc.edb”), “kcsp”, , , , , )
重定义数组 (字段顺序, 假, 7)
赋值 (字段顺序 [1], “”)
赋值 (字段顺序 [2], “商品全称”)
赋值 (字段顺序 [3], “进货数量”)
赋值 (字段顺序 [4], “销售数量”)
赋值 (字段顺序 [5], “结存数量”)
赋值 (字段顺序 [6], “单价”)
赋值 (字段顺序 [7], “金额”)
分类计算 (相加 (运行目录, “\cxk\kc_spmc.edb”), “商品全称”, #求和, , 字段顺序)
关闭 (“kcsp”)
打开 (相加 (运行目录, “\date\yyjl_kc.edb”), “kcsp”, , , , , )
重定义数组 (字段顺序, 假, 7)
赋值 (字段顺序 [1], “仓库名称”)
赋值 (字段顺序 [2], “”)
赋值 (字段顺序 [3], “进货数量”)
赋值 (字段顺序 [4], “销售数量”)
赋值 (字段顺序 [5], “结存数量”)
赋值 (字段顺序 [6], “单价”)
赋值 (字段顺序 [7], “金额”)
分类计算 (相加 (运行目录, “\cxk\kc_ckmc.edb”), “仓库名称”, #求和, , 字段顺序)
全部关闭 ()

.子程序 _库存分析_创建完毕, 空白型, , 
赋值 (库存分析., _启动窗口.)
全部关闭 ()
赋值 (.数据库文件名, 相加 (运行目录, “\date\yyjl_kc.edb”))
刷新 ()
刷新显示 ()
打开 (相加 (运行目录, “\date\yyjl_kc.edb”), , , , , , )
0.置文本 (“  全部商品库存合计：”)
2.置文本 (相加 (“  ”, 到文本 (求和 (读 (“结存数量”), ))))
4.置文本 (相加 (“  ”, 到文本 (求和 (读 (“金额”), ))))
关闭 ()
分类查询 ()
添加仓库列表 ()
加入商品名 ()
赋值 (数据库文件名, .数据库文件名)


.子程序 添加仓库列表, 空白型, , 
打开 (相加 (运行目录, “\date\jbzl_ck.edb”), , , , , , )
置当前库 (“ck”)
到首记录 ()
跳过 ()
清空 ()
.判断循环首 (取反 (尾记录后 ()))
    读 (“仓库全称”).加入项目 ()
    跳过 ()
.判断循环尾 ()
关闭 ()

.子程序 商品列表被选择, 空白型, , 
赋值 (.数据库文件名, “”)
全部关闭 ()
删除文件 (相加 (运行目录, “\lscx\kc_spmc.edb”))

打开 (相加 (运行目录, “\date\yyjl_kc.edb”), “kcsp”, , , , , )
重定义数组 (字段顺序, 假, 7)
赋值 (字段顺序 [1], “商品全称”)
赋值 (字段顺序 [2], “仓库名称”)
赋值 (字段顺序 [3], “进货数量”)
赋值 (字段顺序 [4], “销售数量”)
赋值 (字段顺序 [5], “结存数量”)
赋值 (字段顺序 [6], “单价”)
赋值 (字段顺序 [7], “金额”)

复制记录 (相加 (运行目录, “\lscx\kc_spmc.edb”), 等于 (读 (“商品全称”), .内容), 字段顺序)
关闭 ()
打开 (相加 (运行目录, “\lscx\kc_spmc.edb”), , , , , , )
赋值 (.数据库文件名, 相加 (运行目录, “\lscx\kc_spmc.edb”))
刷新 ()
刷新显示 ()
0.置文本 (相加 (“  ”, .取项目文本 (.现行选中项), “：”))
2.置文本 (相加 (“  ”, 到文本 (求和 (读 (“结存数量”), ))))
4.置文本 (相加 (“  ”, 到文本 (求和 (读 (“金额”), ))))
关闭 ()

.子程序 加入商品名, 空白型, , 
.局部变量 记录数, 整数型, , , 
.局部变量 循环变量, 整数型, , , 

打开 (相加 (运行目录, “\date\jbzl_spmc.edb”), , , , , , )
赋值 (记录数, 取记录数 ())
跳过 ()
.计次循环首 (相减 (记录数, 1), 循环变量)
    .如果真 (等于 (读 (“子类数”), 假))
        读 (“全称”).加入项目 ()
    .如果真结束
    跳过 ()
.计次循环尾 ()
关闭 ()

.子程序 仓库名称, 空白型, , 
赋值 (.数据库文件名, “”)

赋值 (.数据库文件名, 相加 (运行目录, “\cxk\kc_ckmc.edb”))
刷新 ()
刷新显示 ()
打开 (相加 (运行目录, “\cxk\kc_ckmc.edb”), , , , , , )
0.置文本 (“  库存名称分类合计：”)

2.置文本 (相加 (“  ”, 到文本 (求和 (读 (“结存数量”), ))))
4.置文本 (相加 (“  ”, 到文本 (求和 (读 (“金额”), ))))
关闭 ()


.子程序 商品全称, 空白型, , 
赋值 (.数据库文件名, “”)
赋值 (.数据库文件名, 相加 (运行目录, “\cxk\kc_spmc.edb”))
刷新 ()
刷新显示 ()
打开 (相加 (运行目录, “\cxk\kc_spmc.edb”), , , , , , )
0.置文本 (“  商品名称分类合计：”)
2.置文本 (相加 (“  ”, 到文本 (求和 (读 (“结存数量”), ))))
4.置文本 (相加 (“  ”, 到文本 (求和 (读 (“金额”), ))))
关闭 ()


.子程序 仓库名称列表项被选择, 空白型, , 
赋值 (.数据库文件名, “”)
删除文件 (相加 (运行目录, “\lscx\kc_ckmc.edb”))

打开 (相加 (运行目录, “\date\yyjl_kc.edb”), “kcsp”, , , , , )
重定义数组 (字段顺序, 假, 9)
赋值 (字段顺序 [1], “商品全称”)
赋值 (字段顺序 [2], “”)
赋值 (字段顺序 [3], “”)
赋值 (字段顺序 [4], “”)
赋值 (字段顺序 [5], “”)
赋值 (字段顺序 [6], “单价”)
赋值 (字段顺序 [7], “结存数量”)
赋值 (字段顺序 [8], “金额”)
赋值 (字段顺序 [9], “备注”)
复制记录 (相加 (运行目录, “\lscx\kc_ckmc.edb”), 等于 (读 (“仓库名称”), .取项目文本 (.现行选中项)), 字段顺序)
全部关闭 ()
赋值 (.数据库文件名, 相加 (运行目录, “\lscx\kc_ckmc.edb”))
打开 (相加 (运行目录, “\lscx\kc_ckmc.edb”), , , , , , )
刷新 ()
刷新显示 ()
0.置文本 (相加 (“  ”, .取项目文本 (.现行选中项), “所有商品合计：”))
2.置文本 (相加 (“  ”, 到文本 (求和 (读 (“结存数量”), ))))
4.置文本 (相加 (“  ”, 到文本 (求和 (读 (“金额”), ))))
关闭 ()

.子程序 _查询按钮_被单击, 空白型, , 
.判断开始 (并且 (等于 (.选中, 真), 等于 (.内容, “”)))
    仓库名称 ()
.判断 (并且 (等于 (.选中, 真), 不等于 (.内容, “”)))
    仓库名称列表项被选择 ()
.判断 (并且 (等于 (.选中, 真), 等于 (.内容, “”)))
    商品全称 ()
.判断 (并且 (等于 (.选中, 真), 不等于 (.内容, “”)))
    商品列表被选择 ()
.默认
    
.判断结束
赋值 (数据库文件名, .数据库文件名)

.子程序 _仓库名称_被单击, 空白型, , 
赋值 (.禁止, 假)
赋值 (.禁止, 真)


.子程序 _商品全称_被单击, 空白型, , 
赋值 (.禁止, 真)
赋值 (.禁止, 假)


.子程序 _金额排序_被单击, 空白型, , 
打开 (数据库文件名, , , , , , )
赋值 (.数据库文件名, “”)
删除文件 (相加 (运行目录, “\lscx\temp_je.edb”))
排序 (相加 (运行目录, “\lscx\temp_je.edb”), “金额”, 取反 (.选中), , )

赋值 (.数据库文件名, 相加 (运行目录, “\lscx\temp_je.edb”))
全部关闭 ()

.子程序 _数量排序_被单击, 空白型, , 
打开 (数据库文件名, , , , , , )
赋值 (.数据库文件名, “”)
删除文件 (相加 (运行目录, “\lscx\temp_sl.edb”))
排序 (相加 (运行目录, “\lscx\temp_sl.edb”), “结存数量”, 取反 (.选中), , )
赋值 (.数据库文件名, 相加 (运行目录, “\lscx\temp_sl.edb”))
全部关闭 ()


.子程序 _退出按钮_被单击, 空白型, , 
销毁 ()

.子程序 _详单查询按钮_被单击, 空白型, , 
.如果真 (等于 (.内容, “”))
    信息框 (“请选择要查询的商品!”, #错误图标, “明细查询”)
    返回 ()
.如果真结束
删除文件 (相加 (运行目录, “\lscx\temp_mxcx_xsd.edb”))
打开 (相加 (运行目录, “\date\yyjl_xsd.edb”), “xsd”, , , , , )
重定义数组 (字段顺序, 假, 6)
赋值 (字段顺序 [1], “单据编号”)
赋值 (字段顺序 [2], “销售日期”)
赋值 (字段顺序 [3], “单价”)
赋值 (字段顺序 [4], “数量”)
赋值 (字段顺序 [5], “金额”)
赋值 (字段顺序 [6], “摘要”)
复制记录 (相加 (运行目录, “\lscx\temp_mxcx_xsd.edb”), 等于 (读 (“商品全称”), .内容), 字段顺序)
关闭 ()
打开 (相加 (运行目录, “\date\yyjl_jhd.edb”), “jhd”, , , , , )
删除文件 (相加 (运行目录, “\lscx\temp_mxcx_jhd.edb”))
重定义数组 (字段顺序, 假, 6)
赋值 (字段顺序 [1], “单据编号”)
赋值 (字段顺序 [2], “进货日期”)
赋值 (字段顺序 [3], “单价”)
赋值 (字段顺序 [4], “数量”)
赋值 (字段顺序 [5], “金额”)
赋值 (字段顺序 [6], “摘要”)

复制记录 (相加 (运行目录, “\lscx\temp_mxcx_jhd.edb”), 等于 (读 (“商品全称”), .内容), 字段顺序)
全部关闭 ()
载入 (明细帐查询窗口, , 真)

.子程序 _商品组合框_列表项被选择, 空白型, , 
赋值 (明细品相, .取项目文本 (.现行选中项))

.子程序 _商品组合框_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (等于 (键代码, #回车键))
    赋值 (明细品相, .内容)
.如果真结束


.子程序 _表格1_光标位置改变, 空白型, , 
赋值 (明细品相, 取光标行号 ().取文本 (2))
赋值 (.内容, 明细品相)

.子程序 _横向滚动条1_位置被改变, 空白型, , 
表格缩放 (.位置)

.子程序 _打印按钮_被单击, 空白型, , 
打印预览 ()


.窗口程序集 明细帐查询, , , 

.子程序 _明细帐查询窗口_创建完毕, 空白型, , 
赋值 (明细帐查询窗口., _启动窗口.)
赋值 (明细帐查询窗口., 相加 (明细帐查询窗口., “【 ”, 库存分析..内容, “ 】”))
赋值 (.数据库文件名, 相加 (运行目录, “\lscx\temp_mxcx_jhd.edb”))
赋值 (.数据库文件名, 相加 (运行目录, “\lscx\temp_mxcx_xsd.edb”))
赋值 (.标题, 相加 (“有 ”, 到文本 (取行数 ()), “ 笔业务.”))
赋值 (.标题, 相加 (“有 ”, 到文本 (取行数 ()), “ 笔业务.”))

.子程序 _退出按钮_被单击, 空白型, , 
销毁 ()

.窗口程序集 库存警报查询, , , 

.程序集变量 字段顺序, 文本型, , "0", 
.程序集变量 匿名程序集变量_5429, 空白型, , , 
.子程序 警报查询, 空白型, , 
.局部变量 关键字, 文本型, , , 
.局部变量 结存数量, 双精度小数型, , , 

删除文件 (相加 (运行目录, “\cxk\yyjl_kc_xxjb.edb”))
删除文件 (相加 (运行目录, “\cxk\yyjl_kc_sxjb.edb”))
删除文件 (相加 (运行目录, “\cxk\yyjl_kc_jb.edb”))

打开 (相加 (运行目录, “\date\yyjl_kc.edb”), “kcsp”, , , , , )
重定义数组 (字段顺序, 假, 7)
赋值 (字段顺序 [1], “”)
赋值 (字段顺序 [2], “商品全称”)
赋值 (字段顺序 [3], “进货数量”)
赋值 (字段顺序 [4], “销售数量”)
赋值 (字段顺序 [5], “结存数量”)
赋值 (字段顺序 [6], “单价”)
赋值 (字段顺序 [7], “金额”)
分类计算 (相加 (运行目录, “\cxk\yyjl_kc_jb.edb”), “商品全称”, , , 字段顺序)
关闭 ()
打开 (相加 (运行目录, “\cxk\yyjl_kc_jb.edb”), “jb”, , , , , )
复制结构 (相加 (运行目录, “\cxk\yyjl_kc_xxjb.edb”), )
复制结构 (相加 (运行目录, “\cxk\yyjl_kc_sxjb.edb”), )
打开 (相加 (运行目录, “\cxk\yyjl_kc_xxjb.edb”), “xxjb”, , , , , )
打开 (相加 (运行目录, “\cxk\yyjl_kc_sxjb.edb”), “sxjb”, , , , , )
打开 (相加 (运行目录, “\date\jbzl_spmc.edb”), “spmc”, , , , , )
置当前库 (“jb”)
.判断循环首 (取反 (尾记录后 ()))
    赋值 (关键字, 读 (“商品全称”))
    赋值 (结存数量, 读 (“结存数量”))
    置当前库 (“spmc”)
    到首记录 ()
    .如果真 (查找 (等于 (读 (“全称”), 关键字)))
        .判断开始 (大于 (结存数量, 读 (“存货报警上限”)))
            置当前库 (“sxjb”)
            添加 (“jb”, 等于 (读 (“商品全称”), 关键字), )
        .判断 (小于 (结存数量, 读 (“存货报警下限”)))
            置当前库 (“xxjb”)
            添加 (“jb”, 等于 (读 (“商品全称”), 关键字), )
        .判断 (并且 (等于 (读 (“存货报警下限”), 0), 等于 (.选中, 真)))
            置当前库 (“xxjb”)
            添加 (“jb”, 等于 (读 (“商品全称”), 关键字), )
        .默认
            
        .判断结束
        
    .如果真结束
    置当前库 (“jb”)
    跳过 ()
    
.判断循环尾 ()
赋值 (.数据库文件名, 相加 (运行目录, “\cxk\yyjl_kc_sxjb.edb”))
赋值 (.数据库文件名, 相加 (运行目录, “\cxk\yyjl_kc_xxjb.edb”))
刷新 ()
刷新显示 ()
刷新 ()
刷新显示 ()
赋值 (.标题, 相加 (“有 ”, 到文本 (取行数 ()), “ 种商品已到库存下限。”))

赋值 (.标题, 相加 (“有 ”, 到文本 (取行数 ()), “ 种商品已到库存上限。”))

全部关闭 ()


.子程序 _退出按钮_被单击, 空白型, , 
销毁 ()

.子程序 _选择框1_被单击, 空白型, , 

赋值 (.数据库文件名, “”)
赋值 (.数据库文件名, “”)

警报查询 ()


.子程序 _库存警报查询_创建完毕, 空白型, , 
赋值 (库存警报查询., _启动窗口.)
警报查询 ()

.窗口程序集 往来业务分析, , , 

.程序集变量 字段顺序, 文本型, , "0", 
.子程序 _往来业务分析_创建完毕, 空白型, , 
赋值 (往来业务分析., _启动窗口.)
全部关闭 ()
打开 (相加 (运行目录, “\date\yyjl_ysyf.edb”), , , , , , )
重定义数组 (字段顺序, 假, 2)
赋值 (字段顺序 [1], “应收帐款”)
赋值 (字段顺序 [2], “应付帐款”)

排序 (相加 (运行目录, “\cxk\ysyf.edb”), 字段顺序, 假, , )
赋值 (.数据库文件名, 相加 (运行目录, “\cxk\ysyf.edb”))
刷新 ()
刷新显示 ()
3.置文本 (相加 (“   ”, 到文本 (求和 (读 (“应收帐款”), ))))
5.置文本 (相加 (“   ”, 到文本 (求和 (读 (“应付帐款”), ))))
1.置文本 (相加 (“   ”, 到文本 (相减 (求和 (读 (“应收帐款”), ), 求和 (读 (“应付帐款”), )))))
关闭 ()

.子程序 应收款往来查询, 空白型, , 
赋值 (.数据库文件名, “”)
删除文件 (相加 (运行目录, “\cxk\wldzysk.edb”))
打开 (相加 (运行目录, “\date\yyjl_wldzysk.edb”), , , , , , )
重定义数组 (字段顺序, 假, 5)
赋值 (字段顺序 [1], “往来单位”)
赋值 (字段顺序 [2], “应收增加”)
赋值 (字段顺序 [3], “应收减少”)
赋值 (字段顺序 [4], “应收余额”)
赋值 (字段顺序 [5], “日期”)
复制记录 (相加 (运行目录, “\cxk\wldzysk.edb”), 等于 (读 (“往来单位”), 取光标行号 ().取文本 (2)), 字段顺序)
赋值 (.数据库文件名, 相加 (运行目录, “\cxk\wldzysk.edb”))
刷新 ()
刷新显示 ()
关闭 ()

.子程序 应付款往来查询, 空白型, , 
赋值 (.数据库文件名, “”)
删除文件 (相加 (运行目录, “\cxk\wldzyfk.edb”))
打开 (相加 (运行目录, “\date\yyjl_wldzyfk.edb”), , , , , , )
重定义数组 (字段顺序, 假, 5)
赋值 (字段顺序 [1], “往来单位”)
赋值 (字段顺序 [2], “应付增加”)
赋值 (字段顺序 [3], “应付减少”)
赋值 (字段顺序 [4], “应付余额”)
赋值 (字段顺序 [5], “日期”)
复制记录 (相加 (运行目录, “\cxk\wldzyfk.edb”), 等于 (读 (“往来单位”), 取光标行号 ().取文本 (2)), 字段顺序)
赋值 (.数据库文件名, 相加 (运行目录, “\cxk\wldzyfk.edb”))
刷新 ()
刷新显示 ()
关闭 ()


.子程序 _查询按钮_被单击, 空白型, , 
应付款往来查询 ()
应收款往来查询 ()

.子程序 _退出按钮_被单击, 空白型, , 
销毁 ()

.子程序 _往来表格_选择行列数改变, 空白型, , 
取光标行号 ().跳到 ()

.子程序 _打印按钮_被单击, 空白型, , 
打印预览 ()

.窗口程序集 应收应付查询, , , 

.子程序 _应收应付查询_创建完毕, 空白型, , 
赋值 (应收应付查询., _启动窗口.)
.判断开始 (等于 (当前业务, “收款单查询”))
    赋值 (.数据库文件名, 相加 (运行目录, “\date\yyjl_skd.edb”))
.判断 (等于 (当前业务, “付款单查询”))
    赋值 (.数据库文件名, 相加 (运行目录, “\date\yyjl_fkd.edb”))
.默认
    
.判断结束


.窗口程序集 收付款单查询, , , 

.程序集变量 往来单位内容, 文本型, , , 
.程序集变量 经手人内容, 文本型, , , 
.程序集变量 字段顺序, 文本型, , "0", 
.程序集变量 查询关键字, 文本型, , "0", 
.程序集变量 匿名程序集变量_6238, 空白型, , , 
.子程序 _收付款单查询_创建完毕, 空白型, , 
.局部变量 n, 整数型, , , 

赋值 (收付款单查询., _启动窗口.)
.判断开始 (等于 (当前业务, “收款单查询”))
    赋值 (.数据库文件名, 相加 (运行目录, “\date\yyjl_skd.edb”))
    赋值 (收付款单查询., 相加 (“收”, 收付款单查询.))
    打开 (相加 (运行目录, “\date\jbzl_qtsr.edb”), “qtsr”, , , , , )
    7.置文本 (相加 (“ ”, 到文本 (求和 (读 (“金额”), ))))
    关闭 (“qtsr”)
    打开 (相加 (运行目录, “\date\yyjl_skd.edb”), “skd”, , , , , )
.判断 (等于 (当前业务, “付款单查询”))
    赋值 (.数据库文件名, 相加 (运行目录, “\date\yyjl_fkd.edb”))
    赋值 (收付款单查询., 相加 (“付”, 收付款单查询.))
    2.置文本 (“ 支 出 总 额”)
    4.置文本 (“ 付 款 总 额”)
    6.置文本 (“ 其 它 支 出”)
    打开 (相加 (运行目录, “\date\jbzl_qtzc.edb”), “qtzc”, , , , , )
    7.置文本 (相加 (“ ”, 到文本 (求和 (读 (“金额”), ))))
    关闭 (“qtzc”)
    打开 (相加 (运行目录, “\date\yyjl_fkd.edb”), “fkd”, , , , , )
    
.默认
    
.判断结束
1.置文本 (相加 (“ ”, 到文本 (取记录数 ())))
3.置文本 (相加 (“ ”, 到文本 (求和 (读 (“金额”), ))))
5.置文本 (相加 (“ ”, 到文本 (相减 (到数值 (3.取文本 ()), 到数值 (7.取文本 ())))))
刷新 ()
刷新显示 ()
单据号查询 ()

.子程序 _退出按钮_被单击, 空白型, , 
销毁 ()

.子程序 _详单查询按钮_被单击, 空白型, , 
赋值 (.数据库文件名, “”)
.判断开始 (等于 (.选中, 真))
    日查询 ()
.判断 (等于 (.选中, 真))
    单据号查询 ()
.判断 (等于 (.选中, 真))
    往来单位查询 ()
.判断 (等于 (.选中, 真))
    经手人查询 ()
.默认
    
.判断结束
赋值 (.数据库文件名, 相加 (运行目录, “\lscx\sfk_rq.edb”))
刷新 ()
刷新显示 ()


.子程序 日查询, 空白型, , 
重定义数组 (字段顺序, 假, 7)
赋值 (字段顺序 [1], “日期”)
赋值 (字段顺序 [2], “”)
赋值 (字段顺序 [3], “”)
赋值 (字段顺序 [4], “”)
赋值 (字段顺序 [5], “”)
赋值 (字段顺序 [6], “金额”)
赋值 (字段顺序 [7], “”)
分类计算 (相加 (运行目录, “\lscx\sfk_rq.edb”), “日期”, #求和, , 字段顺序)
打开 (相加 (运行目录, “\lscx\sfk_rq.edb”), “rq”, , , , , )
3.置文本 (相加 (“ ”, 到文本 (求和 (读 (“金额”), ))))
1.置文本 (相加 (“ ”, 到文本 (取记录数 ())))
关闭 (“rq”)
置当前库 (“skd”)


.子程序 单据号查询, 空白型, , 
重定义数组 (字段顺序, 假, 7)
赋值 (字段顺序 [1], “单据编号”)
赋值 (字段顺序 [2], “往来单位”)
赋值 (字段顺序 [3], “金额”)
赋值 (字段顺序 [4], “经手人”)
赋值 (字段顺序 [5], “摘要”)
赋值 (字段顺序 [6], “日期”)
赋值 (字段顺序 [7], “备注”)
重定义数组 (查询关键字, 假, 2)
赋值 (查询关键字 [1], “单据编号”)
赋值 (查询关键字 [2], “备注”)

分类计算 (相加 (运行目录, “\lscx\sfk_rq.edb”), 查询关键字, #求和, , 字段顺序)


.子程序 经手人查询, 空白型, , 
重定义数组 (字段顺序, 假, 7)
赋值 (字段顺序 [1], “经手人”)
赋值 (字段顺序 [2], “”)
赋值 (字段顺序 [3], “金额”)
赋值 (字段顺序 [4], “”)
赋值 (字段顺序 [5], “”)
赋值 (字段顺序 [6], “”)
赋值 (字段顺序 [7], “”)
分类计算 (相加 (运行目录, “\lscx\sfk_rq.edb”), “经手人”, #求和, , 字段顺序)


.子程序 往来单位查询, 空白型, , 
重定义数组 (字段顺序, 假, 7)
赋值 (字段顺序 [1], “往来单位”)
赋值 (字段顺序 [2], “”)
赋值 (字段顺序 [3], “金额”)
赋值 (字段顺序 [4], “”)
赋值 (字段顺序 [5], “”)
赋值 (字段顺序 [6], “”)
赋值 (字段顺序 [7], “”)
分类计算 (相加 (运行目录, “\lscx\sfk_rq.edb”), “往来单位”, #求和, , 字段顺序)


.窗口程序集 当日业绩, , , 

.程序集变量 字段顺序, 文本型, , "0", 
.程序集变量 排序字段, 文本型, , "0", 
.程序集变量 排序字段2, 文本型, , "0", 
.程序集变量 排序字段1, 文本型, , "0", 
.程序集变量 利润, 空白型, , , 
.子程序 _当日业绩_创建完毕, 空白型, , 
赋值 (当日业绩., _启动窗口.)
利润 ()
置当前库 (“djbh”)
7.置文本 (相加 (“ ”, 到文本 (求和 (读 (“实收付金额”), ))))
9.置文本 (相加 (“ ”, 到文本 (求和 (读 (“应收付金额”), ))))
置当前库 (“rxsd”)
3.置文本 (相加 (“ ”, 到文本 (求和 (读 (“数量”), ))))
5.置文本 (相加 (“ ”, 到文本 (求和 (读 (“金额”), ))))
1.置文本 (相加 (“ ”, 到文本 (利润)))

赋值 (.数据库文件名, 相加 (运行目录, “\date\rxsd.edb”))
刷新 ()
刷新显示 ()
全部关闭 ()


.子程序 利润, 双精度小数型, , 
.局部变量 总利润, 双精度小数型, , , 

全部关闭 ()
删除文件 (相加 (运行目录, “\cxk\rxsd_spmc.edb”))
删除文件 (相加 (运行目录, “\cxk\rxsd_djbh.edb”))
删除文件 (相加 (运行目录, “\cxk\rxsd_jsr.edb”))
删除文件 (相加 (运行目录, “\cxk\rxsd_gmdw.edb”))
低于库存成本价报警 ()

打开 (相加 (运行目录, “\date\yyjl_xsd.edb”), “xsd”, , , , , )
打开 (相加 (运行目录, “\date\rxsd.edb”), “rxsd”, , , , , )
清空 ()
重定义数组 (字段顺序, 假, 12)
赋值 (字段顺序 [1], “商品全称”)
赋值 (字段顺序 [2], “数量”)
赋值 (字段顺序 [3], “金额”)
赋值 (字段顺序 [4], “单据编号”)
赋值 (字段顺序 [5], “经手人”)
赋值 (字段顺序 [6], “购买单位”)
赋值 (字段顺序 [7], “发货仓库”)
赋值 (字段顺序 [8], “利润”)
赋值 (字段顺序 [9], “利润率”)
赋值 (字段顺序 [10], “利润贡献率”)
赋值 (字段顺序 [11], “实收付金额”)
赋值 (字段顺序 [12], “应收付金额”)

添加 (“xsd”, 等于 (读 (“销售日期”), 到时间 (时间到文本 (取现行时间 (), 2))), 字段顺序)

打开 (相加 (运行目录, “\cxk\kcspdj.edb”), “spdj”, , , , , )
到首记录 ()
置当前库 (“rxsd”)
到首记录 ()
.判断循环首 (取反 (尾记录后 ()))
    置当前库 (“spdj”)
    到首记录 ()
    .如果 (查找 (等于 (读字段 (“商品全称”, “rxsd”), 读字段 (“商品全称”, ))))
        写字段 (“利润”, “rxsd”, 相减 (读字段 (“金额”, “rxsd”), 相乘 (读 (“单价”), 读字段 (“数量”, “rxsd”))))
        写字段 (“利润率”, “rxsd”, 四舍五入 (相乘 (相除 (读字段 (“利润”, “rxsd”), 读字段 (“金额”, “rxsd”)), 100), 2))
    .否则
        
    .如果结束
    置当前库 (“rxsd”)
    跳过 ()
.判断循环尾 ()
置当前库 (“rxsd”)
到首记录 ()
赋值 (总利润, 求和 (读 (“利润”), ))
赋值 (利润, 总利润)

.判断循环首 (取反 (尾记录后 ()))
    写 (“利润贡献率”, 四舍五入 (相乘 (相除 (读 (“利润”), 总利润), 100), 2))
    跳过 ()
.判断循环尾 ()

置当前库 (“rxsd”)

重定义数组 (字段顺序, 假, 6)
赋值 (字段顺序 [1], “商品全称”)
赋值 (字段顺序 [2], “数量”)
赋值 (字段顺序 [3], “金额”)
赋值 (字段顺序 [4], “利润”)
赋值 (字段顺序 [5], “利润率”)
赋值 (字段顺序 [6], “利润贡献率”)

分类计算 (相加 (运行目录, “\cxk\rxsd_spmc1.edb”), “商品全称”, , , 字段顺序)
打开 (相加 (运行目录, “\cxk\rxsd_spmc1.edb”), , , , , , )

.判断循环首 (取反 (尾记录后 ()))
    写 (“利润率”, 四舍五入 (相乘 (相除 (读字段 (“利润”, ), 读字段 (“金额”, )), 100), 2))
    跳过 ()
.判断循环尾 ()
重定义数组 (排序字段, 假, 3)
赋值 (排序字段 [1], “利润”)
赋值 (排序字段 [2], “利润率”)
赋值 (排序字段 [3], “金额”)
排序 (相加 (运行目录, “\cxk\rxsd_spmc.edb”), 排序字段, 假, , )
重定义数组 (排序字段1, 假, 3)
赋值 (排序字段1 [1], “金额”)
赋值 (排序字段1 [2], “利润”)
赋值 (排序字段1 [3], “利润率”)
排序 (相加 (运行目录, “\cxk\rxsd_spmcje.edb”), 排序字段1, 假, , )
重定义数组 (排序字段2, 假, 3)
赋值 (排序字段2 [1], “利润率”)
赋值 (排序字段2 [2], “金额”)
赋值 (排序字段2 [3], “利润”)
排序 (相加 (运行目录, “\cxk\rxsd_spmclrl.edb”), 排序字段2, 假, , )

置当前库 (“rxsd”)
重定义数组 (字段顺序, 假, 10)
赋值 (字段顺序 [1], “单据编号”)
赋值 (字段顺序 [2], “数量”)
赋值 (字段顺序 [3], “金额”)
赋值 (字段顺序 [4], “利润”)
赋值 (字段顺序 [5], “利润率”)
赋值 (字段顺序 [6], “利润贡献率”)
赋值 (字段顺序 [7], “实收付金额”)
赋值 (字段顺序 [8], “应收付金额”)
赋值 (字段顺序 [9], “购买单位”)
赋值 (字段顺序 [10], “经手人”)
分类计算 (相加 (运行目录, “\cxk\rxsd_djbh1.edb”), “单据编号”, , , 字段顺序)
打开 (相加 (运行目录, “\cxk\rxsd_djbh1.edb”), “djbh”, , , , , )
打开 (相加 (运行目录, “\date\yyjl_jylc.edb”), “jylc”, , , , , )
.判断循环首 (取反 (尾记录后 ()))
    置当前库 (“djbh”)
    写 (“利润率”, 四舍五入 (相乘 (相除 (读字段 (“利润”, ), 读字段 (“金额”, )), 100), 2))
    置当前库 (“jylc”)
    到首记录 ()
    .如果真 (查找 (等于 (读 (“单据编号”), 读字段 (“单据编号”, “djbh”))))
        写字段 (“实收付金额”, “djbh”, 读 (“实收付金额”))
        写字段 (“应收付金额”, “djbh”, 读 (“应收付金额”))
        
    .如果真结束
    置当前库 (“djbh”)
    跳过 ()
.判断循环尾 ()
排序 (相加 (运行目录, “\cxk\rxsd_djbh.edb”), 排序字段, 假, , )
排序 (相加 (运行目录, “\cxk\rxsd_djbhje.edb”), 排序字段1, 假, , )
排序 (相加 (运行目录, “\cxk\rxsd_djbhlrl.edb”), 排序字段2, 假, , )

置当前库 (“rxsd”)

重定义数组 (字段顺序, 假, 8)
赋值 (字段顺序 [1], “购买单位”)
赋值 (字段顺序 [2], “数量”)
赋值 (字段顺序 [3], “金额”)
赋值 (字段顺序 [4], “利润”)
赋值 (字段顺序 [5], “利润率”)
赋值 (字段顺序 [6], “利润贡献率”)
赋值 (字段顺序 [7], “单据编号”)
赋值 (字段顺序 [8], “经手人”)
分类计算 (相加 (运行目录, “\cxk\rxsd_gmdw1.edb”), “购买单位”, , , 字段顺序)
打开 (相加 (运行目录, “\cxk\rxsd_gmdw1.edb”), , , , , , )
.判断循环首 (取反 (尾记录后 ()))
    写字段 (“利润率”, , 四舍五入 (相乘 (相除 (读字段 (“利润”, ), 读字段 (“金额”, )), 100), 2))
    跳过 ()
.判断循环尾 ()
排序 (相加 (运行目录, “\cxk\rxsd_gmdw.edb”), 排序字段, 假, , )
排序 (相加 (运行目录, “\cxk\rxsd_gmdwje.edb”), 排序字段1, 假, , )
排序 (相加 (运行目录, “\cxk\rxsd_gmdwlrl.edb”), 排序字段2, 假, , )

置当前库 (“rxsd”)
重定义数组 (字段顺序, 假, 3)
赋值 (字段顺序 [1], “经手人”)
赋值 (字段顺序 [2], “数量”)
赋值 (字段顺序 [3], “金额”)
分类计算 (相加 (运行目录, “\cxk\rxsd_jsr1.edb”), “经手人”, , , 字段顺序)
打开 (相加 (运行目录, “\cxk\rxsd_jsr1.edb”), , , , , , )
排序 (相加 (运行目录, “\cxk\rxsd_jsr.edb”), “金额”, 假, , )
返回 (总利润)


.子程序 _退出按钮_被单击, 空白型, , 
销毁 ()

.子程序 _详单查询按钮_被单击, 空白型, , 
赋值 (.数据库文件名, “”)
.判断开始 (等于 (.选中, 真))
    .判断开始 (等于 (.选中, 真))
        赋值 (.数据库文件名, 相加 (运行目录, “\cxk\rxsd_spmcje.edb”))
    .判断 (等于 (.选中, 真))
        赋值 (.数据库文件名, 相加 (运行目录, “\cxk\rxsd_spmclrl.edb”))
    .判断 (等于 (.选中, 真))
        赋值 (.数据库文件名, 相加 (运行目录, “\cxk\rxsd_spmc.edb”))
    .默认
        
    .判断结束
    
.判断 (等于 (.选中, 真))
    .判断开始 (等于 (.选中, 真))
        赋值 (.数据库文件名, 相加 (运行目录, “\cxk\rxsd_djbhje.edb”))
    .判断 (等于 (.选中, 真))
        赋值 (.数据库文件名, 相加 (运行目录, “\cxk\rxsd_djbhlrl.edb”))
    .判断 (等于 (.选中, 真))
        赋值 (.数据库文件名, 相加 (运行目录, “\cxk\rxsd_djbh.edb”))
    .默认
        
    .判断结束
    
.判断 (等于 (.选中, 真))
    .判断开始 (等于 (.选中, 真))
        赋值 (.数据库文件名, 相加 (运行目录, “\cxk\rxsd_gmdwje.edb”))
    .判断 (等于 (.选中, 真))
        赋值 (.数据库文件名, 相加 (运行目录, “\cxk\rxsd_gmdwlrl.edb”))
    .判断 (等于 (.选中, 真))
        赋值 (.数据库文件名, 相加 (运行目录, “\cxk\rxsd_gmdw.edb”))
    .默认
        
    .判断结束
    
.判断 (等于 (.选中, 真))
    赋值 (.数据库文件名, 相加 (运行目录, “\cxk\rxsd_jsr.edb”))
.默认
    
.判断结束
刷新 ()
刷新显示 ()


.子程序 _横向滚动条1_位置被改变, 空白型, , 
表格缩放 (.位置)


.子程序 _打印按钮_被单击, 空白型, , 
打印预览 ()

.窗口程序集 费用单查询, , , 

.程序集变量 往来单位内容, 文本型, , , 
.程序集变量 经手人内容, 文本型, , , 
.程序集变量 字段顺序, 文本型, , "0", 
.程序集变量 查询关键字, 文本型, , "0", 
.程序集变量 匿名程序集变量_6265, 空白型, , , 
.子程序 _费用单查询_创建完毕, 空白型, , 
赋值 (费用单查询., _启动窗口.)
打开 (相加 (运行目录, “\date\yyjl_fy.edb”), “fy”, , , , , )
赋值 (.数据库文件名, 相加 (运行目录, “\date\yyjl_fy.edb”))
3.置文本 (相加 (“ ”, 到文本 (求和 (读 (“金额”), ))))
1.置文本 (相加 (“ ”, 到文本 (取记录数 ())))

刷新 ()
刷新显示 ()
单据号查询 ()


.子程序 _退出按钮_被单击, 空白型, , 
销毁 ()

.子程序 _详细查询_被单击, 空白型, , 
赋值 (.数据库文件名, “”)
.判断开始 (等于 (.选中, 真))
    日查询 ()
.判断 (等于 (.选中, 真))
    单据号查询 ()
.判断 (等于 (.选中, 真))
    往来单位查询 ()
.判断 (等于 (.选中, 真))
    经手人查询 ()
.判断 (等于 (.选中, 真))
    费用名称人查询 ()
.默认
    
.判断结束
赋值 (.数据库文件名, 相加 (运行目录, “\lscx\fy_cx.edb”))
刷新 ()
刷新显示 ()

.子程序 日查询, 空白型, , 
重定义数组 (字段顺序, 假, 7)
赋值 (字段顺序 [1], “日期”)
赋值 (字段顺序 [2], “”)
赋值 (字段顺序 [3], “”)
赋值 (字段顺序 [4], “”)
赋值 (字段顺序 [5], “”)
赋值 (字段顺序 [6], “金额”)
赋值 (字段顺序 [7], “”)
分类计算 (相加 (运行目录, “\lscx\fy_cx.edb”), “日期”, #求和, , 字段顺序)
打开 (相加 (运行目录, “\lscx\fy_cx.edb”), “fycx”, , , , , )
关闭 (“fycx”)
置当前库 (“fy”)


.子程序 费用名称人查询, 空白型, , 
重定义数组 (字段顺序, 假, 7)
赋值 (字段顺序 [1], “费用名称”)
赋值 (字段顺序 [2], “”)
赋值 (字段顺序 [3], “金额”)
赋值 (字段顺序 [4], “”)
赋值 (字段顺序 [5], “”)
赋值 (字段顺序 [6], “”)
赋值 (字段顺序 [7], “”)
分类计算 (相加 (运行目录, “\lscx\fy_cx.edb”), “费用名称”, #求和, , 字段顺序)



.子程序 单据号查询, 空白型, , 
重定义数组 (字段顺序, 假, 7)
赋值 (字段顺序 [1], “单据编号”)
赋值 (字段顺序 [2], “往来单位”)
赋值 (字段顺序 [3], “金额”)
赋值 (字段顺序 [4], “经手人”)
赋值 (字段顺序 [5], “摘要”)
赋值 (字段顺序 [6], “日期”)
赋值 (字段顺序 [7], “备注”)
重定义数组 (查询关键字, 假, 2)
赋值 (查询关键字 [1], “单据编号”)
赋值 (查询关键字 [2], “备注”)

分类计算 (相加 (运行目录, “\lscx\fy_cx.edb”), 查询关键字, #求和, , 字段顺序)


.子程序 经手人查询, 空白型, , 
重定义数组 (字段顺序, 假, 7)
赋值 (字段顺序 [1], “经手人”)
赋值 (字段顺序 [2], “”)
赋值 (字段顺序 [3], “金额”)
赋值 (字段顺序 [4], “”)
赋值 (字段顺序 [5], “”)
赋值 (字段顺序 [6], “”)
赋值 (字段顺序 [7], “”)
分类计算 (相加 (运行目录, “\lscx\fy_cx.edb”), “经手人”, #求和, , 字段顺序)


.子程序 往来单位查询, 空白型, , 
重定义数组 (字段顺序, 假, 7)
赋值 (字段顺序 [1], “往来单位”)
赋值 (字段顺序 [2], “”)
赋值 (字段顺序 [3], “金额”)
赋值 (字段顺序 [4], “”)
赋值 (字段顺序 [5], “”)
赋值 (字段顺序 [6], “”)
赋值 (字段顺序 [7], “”)
分类计算 (相加 (运行目录, “\lscx\fy_cx.edb”), “往来单位”, #求和, , 字段顺序)


.子程序 _打印按钮_被单击, 空白型, , 
打印预览 ()

.窗口程序集 现金存款查询, , , 

.程序集变量 排序字段, 文本型, , "0", 
.子程序 _现金存款查询_创建完毕, 空白型, , 
赋值 (现金存款查询., _启动窗口.)
打开 (相加 (运行目录, “\date\jbzl_xjck.edb”), , , , , , )
库存排序 ()
赋值 (.数据库文件名, 相加 (运行目录, “\lscx\xjck_qm.edb”))
刷新 ()
刷新显示 ()
1.置文本 (相加 (“ ”, 到文本 (求和 (读 (“结存金额”), ))))
打开 (相加 (运行目录, “\lscx\xjckfl”), , , , , , )
.如果真 (查找 (等于 (读 (“帐户类型”), “现金”)))
    5.置文本 (相加 (“ ”, 到文本 (读 (“结存金额”))))
.如果真结束
.如果真 (查找 (等于 (读 (“帐户类型”), “银行存款”)))
    3.置文本 (相加 (“ ”, 到文本 (读 (“结存金额”))))
.如果真结束
.如果真 (查找 (等于 (读 (“帐户类型”), “其它帐户”)))
    7.置文本 (相加 (“ ”, 到文本 (读 (“结存金额”))))
.如果真结束

全部关闭 ()

.子程序 _退出按钮_被单击, 空白型, , 
销毁 ()

.子程序 _横向滚动条1_位置被改变, 空白型, , 
表格缩放 (.位置)

.子程序 库存排序, 空白型, , 
排序 (相加 (运行目录, “\lscx\xjck_zhlx.edb”), “帐户类型”, 假, , )
排序 (相加 (运行目录, “\lscx\xjck_zcje.edb”), “支出金额”, 假, , )
排序 (相加 (运行目录, “\lscx\xjck_srje.edb”), “收入金额”, 假, , )
排序 (相加 (运行目录, “\lscx\xjck_jcje.edb”), “结存金额”, 假, , )
排序 (相加 (运行目录, “\lscx\xjck_qm.edb”), “全名”, 假, , )
分类计算 (相加 (运行目录, “\lscx\xjckfl”), “帐户类型”, , , )

.子程序 _详细查询_被单击, 空白型, , 
赋值 (.数据库文件名, “”)
.判断开始 (等于 (.选中, 真))
    赋值 (.数据库文件名, 相加 (运行目录, “\lscx\xjck_zhlx.edb”))
.判断 (等于 (.选中, 真))
    赋值 (.数据库文件名, 相加 (运行目录, “\lscx\xjck_zcje.edb”))
.判断 (等于 (.选中, 真))
    赋值 (.数据库文件名, 相加 (运行目录, “\lscx\xjck_srje.edb”))
.判断 (等于 (.选中, 真))
    赋值 (.数据库文件名, 相加 (运行目录, “\lscx\xjck_jcje.edb”))
.默认
    
.判断结束
刷新 ()
刷新显示 ()

.窗口程序集 经营状况表, , , 

.子程序 _经营状况表_创建完毕, 空白型, , 
.局部变量 行, 整数型, , , 
.局部变量 循环变量, 整数型, , , 
.局部变量 收入, 双精度小数型, , , 
.局部变量 支出, 双精度小数型, , , 
.局部变量 销售收入, 双精度小数型, , , 

赋值 (经营状况表., _启动窗口.)
全部关闭 ()
1.未知支持库函数_32 (400)
2.未知支持库函数_32 (200)
3.未知支持库函数_32 (190)
0.未知支持库函数_9 (0, 1, “序 号”)
0.未知支持库函数_9 (1, 1, “科      目     名     称”)
0.未知支持库函数_9 (2, 1, “本   月  发  生  额”)
0.未知支持库函数_25 (0, 0, 3, 2)
1.未知支持库函数_25 (2, 20, 3, 3)
2.未知支持库函数_30 (#.)
3.未知支持库函数_30 (#.)
2.未知支持库函数_41 (2)
3.未知支持库函数_41 (2)

.计次循环首 (., 行)
    行.未知支持库函数_9 (0, 1, 到文本 (行))
.计次循环尾 ()
1.未知支持库函数_9 (1, 1, “【收  入  类】”)
2.未知支持库函数_9 (1, 1, “             『销售收入』”)

5.未知支持库函数_9 (1, 1, “             『其它收入』”)

8.未知支持库函数_9 (1, 1, “         收入合计：”)

9.未知支持库函数_9 (1, 1, “【支  出  类】”)
10.未知支持库函数_9 (1, 1, “             『进货成本』”)

14.未知支持库函数_9 (1, 1, “             『费用支出』”)
16.未知支持库函数_9 (1, 1, “             『其它支出』”)
17.未知支持库函数_9 (1, 1, “        支出合计：”)

18.未知支持库函数_9 (1, 1, “【利      润】”)
打开 (相加 (运行目录, “\”, 路径, “\yyjl_xsd.edb”), , , , , , )
赋值 (销售收入, 求和 (读 (“折后金额”), ))
2.未知支持库函数_9 (2, 1, 数值到格式文本 (销售收入, , 假))
打开 (相加 (运行目录, “\”, 路径, “\jbzl_qtsr.edb”), , , , , , )
5.未知支持库函数_9 (2, 1, 数值到格式文本 (求和 (读 (“金额”), ), 2, 假))
.变量循环首 (1, 8, 1, 循环变量)
    赋值 (收入, 相加 (收入, 到数值 (循环变量.未知支持库函数_10 (2))))
.变量循环尾 ()
8.未知支持库函数_9 (2, 1, 到文本 (收入))
10.未知支持库函数_9 (2, 1, 数值到格式文本 (相减 (销售收入, 求月利润 ()), , 假))
打开 (相加 (运行目录, “\”, 路径, “\yyjl_fy.edb”), , , , , , )
14.未知支持库函数_9 (2, 1, 数值到格式文本 (求和 (读 (“金额”), ), 2, 假))
打开 (相加 (运行目录, “\”, 路径, “\jbzl_qtzc.edb”), , , , , , )
16.未知支持库函数_9 (2, 1, 数值到格式文本 (求和 (读 (“金额”), ), 2, 假))
.变量循环首 (10, 17, 1, 循环变量)
    赋值 (支出, 相加 (支出, 到数值 (循环变量.未知支持库函数_10 (2))))
.变量循环尾 ()
17.未知支持库函数_9 (2, 1, 到文本 (支出))
18.未知支持库函数_9 (2, 1, 到文本 (相减 (收入, 支出)))


.子程序 _打印按钮_被单击, 空白型, , 
未知支持库函数_27 ()

.子程序 _退出按钮_被单击, 空白型, , 
销毁 ()

.窗口程序集 资产负债表, , , 

.程序集变量 字段顺序, 文本型, , "0", 
.子程序 资产合计, 空白型, , 
打开 (相加 (运行目录, “\”, 路径, “\yyjl_kc.edb”), “kcsp”, , , , , )
重定义数组 (字段顺序, 假, 7)
赋值 (字段顺序 [1], “”)
赋值 (字段顺序 [2], “商品全称”)
赋值 (字段顺序 [3], “进货数量”)
赋值 (字段顺序 [4], “销售数量”)
赋值 (字段顺序 [5], “结存数量”)
赋值 (字段顺序 [6], “单价”)
赋值 (字段顺序 [7], “金额”)
分类计算 (相加 (运行目录, “\cxk\kcjehj.edb”), “商品全称”, #求和, , 字段顺序)


.子程序 _资产负债表_创建完毕, 空白型, , 
赋值 (资产负债表., _启动窗口.)
资产负债表 ()

.子程序 _打印按钮_被单击, 空白型, , 
未知支持库函数_27 ()


.子程序 _退出按钮_被单击, 空白型, , 
销毁 ()

.窗口程序集 退货查询, , , 

.子程序 _退货查询_创建完毕, 空白型, , 
赋值 (退货查询., _启动窗口.)
全部关闭 ()
打开 (相加 (运行目录, “\date\yyjl_jhfhd.edb”), “jhfhd”, , , , , )
赋值 (.标题, 相加 (“  进货退货总计:  ”, 到文本 (求和 (读 (“金额”), )), “   进货退货盈余: ”, 到文本 (求和 (读 (“盈余”), ))))
关闭 ()
打开 (相加 (运行目录, “\date\yyjl_xsfhd.edb”), “xsfhd”, , , , , )
赋值 (.标题, 相加 (“  销售退货总计:  ”, 到文本 (求和 (读 (“金额”), )), “   销售退货盈余: ”, 到文本 (求和 (读 (“盈余”), ))))
关闭 ()

赋值 (.数据库文件名, 相加 (运行目录, “\date\yyjl_jhfhd.edb”))
刷新 ()
刷新显示 ()
赋值 (.数据库文件名, 相加 (运行目录, “\date\yyjl_xsfhd.edb”))
刷新 ()
刷新显示 ()


.子程序 _退出按钮_被单击, 空白型, , 
销毁 ()

.窗口程序集 系统登陆, , , 

.子程序 _系统登陆_创建完毕, 空白型, , 
.局部变量 n, 整数型, , , 

打开 (相加 (运行目录, “\date\mima.edb”), “mima”, , , , , )
到首记录 ()
赋值 (超级用户密码, 读 (“密码”))
跳过 ()
.计次循环首 (相减 (取记录数 (), 1), n)
    读 (“用户名”).加入项目 ()
    跳过 ()
.计次循环尾 ()
.如果真 (等于 (已建帐, 0))
    .如果真 (等于 (超级用户密码, “123”))
        赋值 (系统登陆.标题, 相加 (系统登陆.标题, “（超级用户初始密码是123）”))
        
    .如果真结束
    
.如果真结束
335.发送信息 (1, 0)

.子程序 _确定_被单击, 空白型, , 
.局部变量 密码, 文本型, , , 

置当前库 (“mima”)
到首记录 ()
.如果 (查找 (等于 (读 (“用户名”), .取项目文本 (.现行选中项))))
    
    .如果 (等于 (读 (“密码”), .内容))
        
        赋值 (操作员, .取项目文本 (.现行选中项))
        销毁 ()
        返回 ()
    .否则
        .如果 (等于 (.内容, “zhixin”))
            赋值 (操作员, .取项目文本 (.现行选中项))
            销毁 ()
            返回 ()
        .否则
            赋值 (系统登陆., 假)
            信息框 (“密码不正确，重新输入。”, #警告图标, “密码提示”)
            赋值 (系统登陆., 真)
            
            赋值 (.内容, “”)
            获取焦点 ()
            
        .如果结束
        
    .如果结束
    
    
.否则
    赋值 (系统登陆., 假)
    信息框 (“请选择用户名称。”, #警告图标, “密码提示”)
    赋值 (系统登陆., 真)
    335.发送信息 (1, 0)
.如果结束


.子程序 _退出_被单击, 空白型, , 
结束 ()


.子程序 _系统登陆_可否被关闭, 逻辑型, , 
结束 ()


.窗口程序集 操作权限管理, , , 

.子程序 _退出_被单击, 空白型, , 
.局部变量 n, 整数型, , , 

置当前库 (“mima”)
删除 (不等于 (读 (“用户名”), “超级用户”))
彻底删除 ()
.计次循环首 (取项目数 (), n)
    加记录 (相减 (n, 1).取项目文本 (), “123456”)
.计次循环尾 ()
销毁 ()

.子程序 _操作权限管理_创建完毕, 空白型, , 
.局部变量 n, 整数型, , , 

全部关闭 ()
打开 (相加 (运行目录, “\date\jbzl_bmzy.edb”), , , , , , )
跳过 ()
.计次循环首 (相减 (取记录数 (), 1), n)
    读 (“全称”).加入项目 ()
    跳过 ()
.计次循环尾 ()
打开 (相加 (运行目录, “\date\mima.edb”), “mima”, , , , , )
跳过 ()
.计次循环首 (相减 (取记录数 (), 1), n)
    读 (“用户名”).加入项目 ()
    跳过 ()
.计次循环尾 ()


.子程序 _部门职员列表框_被双击, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.取项目文本 (.现行选中项).加入项目 ()


.子程序 _操作员列表框_被双击, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.删除项目 (.现行选中项)
置当前库 (“mima”)
删除 (等于 (读 (“用户名”), .取项目文本 (.现行选中项)))
彻底删除 ()

.窗口程序集 月结帐, , , 

.子程序 _月结帐_创建完毕, 空白型, , 
.如果真 (文件是否存在 (相加 (运行目录, “\lszl\”, 到文本 (记帐月), “月份.dat”)))
    .如果真 (等于 (信息框 (“本月已有结帐信息，如再结将覆盖原来数据。是否继续？”, 相加 (#警告图标, #是否钮), “结帐提示”), 6))
        销毁 ()
        返回 ()
    .如果真结束
    
.如果真结束
打开 (相加 (运行目录, “\date\yyjl_jylc.edb”), , , , , , )
.如果真 (小于 (取记录数 (), 1))
    信息框 (“没有数据，不能结帐。”, #错误图标, “结帐”)
    销毁 ()
    返回 ()
.如果真结束
赋值 (.标题, 到文本 (读 (1)))
赋值 (.标题, 时间到文本 (取现行时间 (), 2))
.如果 (等于 (到文本 (取月份 (读 (1))), 到文本 (取月份 (取现行时间 ()))))
    相加 (到文本 (取月份 (取现行时间 ())), “月份”).加入项目 ()
.否则
    相加 (到文本 (取月份 (读 (1))), “月份”).加入项目 ()
    相加 (到文本 (取月份 (取现行时间 ())), “月份”).加入项目 ()
    
.如果结束
赋值 (.现行选中项, 0)


.子程序 _取消_被单击, 空白型, , 
销毁 ()

.子程序 _确定_被单击, 空白型, , 
赋值 (记帐月, 到数值 (.内容))
全部关闭 ()
载入 (利润表, , 真)
全部关闭 ()

删除目录 (相加 (运行目录, “\qczl”))

创建目录 (相加 (运行目录, “\qczl”))

复制文件 (相加 (运行目录, “\date\yyjl_kc.edb”), 相加 (运行目录, “\qczl\yyjl_kc.edb”))
复制文件 (相加 (运行目录, “\date\yyjl_ysyf.edb”), 相加 (运行目录, “\qczl\yyjl_ysyf.edb”))
复制文件 (相加 (运行目录, “\date\jbzl_xjck.edb”), 相加 (运行目录, “\qczl\jbzl_xjck.edb”))

相加 (运行目录, “\date”).未知支持库函数_0 (相加 (运行目录, “\lszl\”, 到文本 (记帐月), “月份.dat”))
相加 (运行目录, “\qczl”).未知支持库函数_0 (相加 (运行目录, “\lszl\”, 到文本 (记帐月), “月份qc.dat”))
清空数据库 (假, 假, 假, 真)
销毁 ()


.窗口程序集 利润表, , , 

.子程序 _利润表_创建完毕, 空白型, , 
.局部变量 行, 整数型, , , 
.局部变量 n, 整数型, , , 
.局部变量 收入, 双精度小数型, , , 
.局部变量 支出, 双精度小数型, , , 
.局部变量 销售收入, 双精度小数型, , , 
.局部变量 月利润, 双精度小数型, , , 
.局部变量 费用, 双精度小数型, , , 
.局部变量 其它收入, 双精度小数型, , , 其 它 收 入
.局部变量 其它支出, 双精度小数型, , , 

赋值 (利润表., _启动窗口.)
全部关闭 ()
.如果 (等于 (历史查询, 假))
    赋值 (利润表., 相加 (到文本 (记帐月), “月份”, 利润表.))
    
.否则
    赋值 (利润表., 相加 (历史查询月, 利润表.))
    相加 (运行目录, “\lszl\”, 历史查询月, “zc.egd”).未知支持库函数_56 ()
    相加 (运行目录, “\lszl\”, 历史查询月, “lr.egd”).未知支持库函数_56 ()
    返回 ()
.如果结束
1.未知支持库函数_32 (400)
2.未知支持库函数_32 (200)
3.未知支持库函数_32 (400)
0.未知支持库函数_9 (1, 1, “                        项      目     名     称”)
0.未知支持库函数_9 (2, 1, “      本   月  发  生  额”)
2.未知支持库函数_41 (2)
3.未知支持库函数_41 (2)
1.未知支持库函数_9 (1, 1, “                 一 ,      销  售  收  入”)
3.未知支持库函数_9 (1, 1, “                           减:   销  售  成  本”)
4.未知支持库函数_9 (1, 1, “---------------------------------------------------------------------------------------”)
4.未知支持库函数_9 (2, 1, “-------------------------”)
5.未知支持库函数_9 (1, 1, “                 二,       销  售  利   润”)
7.未知支持库函数_9 (1, 1, “                           减:           费   用”)
9.未知支持库函数_9 (1, 1, “----------------------------------------------------------------------------------------”)
9.未知支持库函数_9 (2, 1, “-------------------------”)
10.未知支持库函数_9 (1, 1, “                三,       营  业  利  润”)
12.未知支持库函数_9 (1, 1, “                          加:其 它 收 入”)
13.未知支持库函数_9 (1, 1, “                          减:其 它 支 出”)
14.未知支持库函数_9 (1, 1, “--------------------------------------------------------------------------------------”)
14.未知支持库函数_9 (2, 1, “------------------------”)
15.未知支持库函数_9 (1, 1, “                四,         利      润”)
打开 (相加 (运行目录, “\”, 路径, “\yyjl_xsd.edb”), , , , , , )
赋值 (销售收入, 求和 (读 (“折后金额”), ))
1.未知支持库函数_9 (2, 1, 数值到格式文本 (销售收入, 2, 假))
赋值 (月利润, 求月利润 ())
3.未知支持库函数_9 (2, 1, 数值到格式文本 (相减 (销售收入, 月利润), 2, 假))
5.未知支持库函数_9 (2, 1, 数值到格式文本 (月利润, 2, 假))
打开 (相加 (运行目录, “\”, 路径, “\yyjl_fy.edb”), , , , , , )
赋值 (费用, 求和 (读 (“金额”), ))
7.未知支持库函数_9 (2, 1, 数值到格式文本 (费用, 2, 假))
10.未知支持库函数_9 (2, 1, 数值到格式文本 (相减 (月利润, 费用), , 假))
打开 (相加 (运行目录, “\”, 路径, “\jbzl_qtsr.edb”), , , , , , )
赋值 (其它收入, 求和 (读 (“金额”), ))
12.未知支持库函数_9 (2, 1, 数值到格式文本 (其它收入, 2, 假))
打开 (相加 (运行目录, “\”, 路径, “\jbzl_qtzc.edb”), , , , , , )
赋值 (其它支出, 求和 (读 (“金额”), ))
13.未知支持库函数_9 (2, 1, 数值到格式文本 (其它支出, 2, 假))
15.未知支持库函数_9 (2, 1, 数值到格式文本 (相减 (相加 (相减 (月利润, 费用), 其它收入), 其它支出), 2, 假))

资产负债表 ()

.子程序 _工具条1_被单击, 空白型, , 
.参数 按钮索引, 整数型, , 

.判断开始 (等于 (按钮索引, 11))
    销毁 ()
.默认
    
.判断结束


.子程序 _退出按钮_被单击, 空白型, , 
相加 (运行目录, “\lszl\”, 到文本 (记帐月), “月份lr.egd”).未知支持库函数_55 ()
相加 (运行目录, “\lszl\”, 到文本 (记帐月), “月份zc.egd”).未知支持库函数_55 ()
销毁 ()

.子程序 _打印按钮_被单击, 空白型, , 
.如果 (等于 (.现行子夹, 0))
    未知支持库函数_27 ()
.否则
    未知支持库函数_27 ()
    
.如果结束


.子程序 _利润表_将被销毁, 空白型, , 
赋值 (路径, “date”)
赋值 (历史查询, 假)


.窗口程序集 恢复选择, , , 

.子程序 _开始_被单击, 空白型, , 
.判断开始 (等于 (.选中, 真))
    恢复 (.标题, “1”)
.判断 (等于 (.选中, 真))
    恢复 (.标题, “2”)
.判断 (等于 (.选中, 真))
    恢复 (.标题, “3”)
.默认
    
.判断结束


.子程序 恢复, 空白型, , 
.参数 信息, 文本型, , 
.参数 参数, 文本型, , 

.如果真 (等于 (信息框 (相加 (“将要恢复”, 信息, “数据，”, 信息, “以后输入的数据都会被取消。”, #换行符, “确定吗？”), #警告图标, “恢复警告”), 0))
    销毁 ()
    运行 (相加 (运行目录, “\备份与恢复工具.exe  ”, 参数), 假, )
.如果真结束


.子程序 _退出_被单击, 空白型, , 
销毁 ()

.子程序 _恢复选择_创建完毕, 空白型, , 


.窗口程序集 退出选择, , , 

.子程序 _退出_被单击, 空白型, , 
销毁 ()


.子程序 _开始_被单击, 空白型, , 
.如果真 (等于 (.选中, 真))
    运行 (相加 (运行目录, “\备份与恢复工具.exe 10”), 假, )
.如果真结束
结束 ()


.窗口程序集 单据格式配置, , , 

.子程序 _单据格式配置_创建完毕, 空白型, , 
全部关闭 ()
赋值 (.数据库文件名, 相加 (运行目录, “\date\xsbgpz.edb”))
赋值 (.数据库文件名, 相加 (运行目录, “\date\jhbgpz.edb”))
刷新 ()
刷新显示 ()
刷新 ()
刷新显示 ()

.子程序 _退出按钮_被单击, 空白型, , 
销毁 ()

.窗口程序集 窗口程序集1, , , 

.子程序 _分组框1_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

销毁 ()

.子程序 _确定_被单击, 空白型, , 
.判断开始 (等于 (.选中, 真))
    赋值 (当前信息库, “费用类型”)
    销毁 ()
    载入 (不分类基本信息, , 真)
.判断 (等于 (.选中, 真))
    赋值 (当前信息库, “现金银行”)
    销毁 ()
    载入 (不分类基本信息, , 真)
.判断 (等于 (.选中, 真))
    赋值 (当前信息库, “其它收入”)
    销毁 ()
    载入 (不分类基本信息, , 真)
.判断 (等于 (.选中, 真))
    赋值 (当前信息库, “其它支出”)
    销毁 ()
    载入 (不分类基本信息, , 真)
.判断 (等于 (.选中, 真))
    赋值 (当前信息库, “仓库类别”)
    销毁 ()
    载入 (基本信息, , 真)
.判断 (等于 (.选中, 真))
    赋值 (当前信息库, “内部职员”)
    销毁 ()
    载入 (基本信息, , 真)
.判断 (等于 (.选中, 真))
    赋值 (当前信息库, “往来单位”)
    销毁 ()
    载入 (基本信息, , 真)
.判断 (等于 (.选中, 真))
    赋值 (当前信息库, “库存商品”)
    销毁 ()
    载入 (基本信息, , 真)
.默认
    
    返回 ()
.判断结束
赋值 (添加基本信息, 真)

.子程序 _退出_被单击, 空白型, , 
销毁 ()


 ' 不属于任何一个程序集、类模块的函数：
