 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 535
    高度 = 260
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “自动抠图”
    帮助文件名 = “”





 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 4 系统核心支持库
 ' BmpOperate 42305932-06E6-47a5-AC79-8BDCDC58DF61 1 0 位图操作支持库




.全局变量 内存文件1, 整数型, , , 
.全局变量 内存文件2, 整数型, , , 
.全局变量 内存文件3, 整数型, , , 
.全局变量 内存文件4, 整数型, , , 
.全局变量 文件头, 字节集, , , 

.DLL命令 复制内存, 空白型, "", "RtlMoveMemory", , 
    .参数 目的指针, 字节集, , 
    .参数 源指针, 字节集, , 
    .参数 复制长度, 整数型, , 

.窗口程序集 窗口程序集1, , , 

.程序集变量 位图, 位图, , , 
.子程序 __启动窗口_创建完毕, 空白型, , 
 ' 画板3.画渐变矩形 (0, 0, 画板3.宽度, 画板3.高度, #从上到下, #黑色, #白色)

.子程序 _按钮1_被单击, 空白型, , 
赋值 (.底图, 制作蒙板 (.取图片 ()))
赋值 (.底图, 透明叠加图像 (.取图片 (), .取图片 (), .取图片 ()))
 ' 信息框 (“完成！”, 0, )

.子程序 透明叠加图像, 字节集, , 返回叠加后的bmp字节集
.参数 源图像一, 字节集, , 底图,三个参数都是bmp格式的位图数据，注意：它们的长宽要相等
.参数 源图像二, 字节集, , 需要叠加的图片,
.参数 黑白图像, 字节集, , 黑色透明，白色不透明

.局部变量 结果图像, 字节集, , , 
.局部变量 百分比, 字节型, , , 
.局部变量 颜色分量1, 字节型, , , 
.局部变量 颜色分量2, 字节型, , , 
.局部变量 数据位置, 整数型, , , 当前r.g.b值的位置
.局部变量 目标颜色分量, 字节型, , , 
.局部变量 图像长度, 整数型, , , 

赋值 (图像长度, 取字节集长度 (源图像一))
赋值 (结果图像, 取空白字节集 (图像长度))
 ' bmp文件头为字节集的前54个字节
复制内存 (结果图像, 源图像一, 54)
赋值 (数据位置, 55)
 ' 进度条1.最大位置 ＝ Len
.循环判断首 ()
    处理事件 ()
    赋值 (百分比, 黑白图像 [数据位置])
     ' 输出调试文本 (百分比)
    赋值 (颜色分量1, 源图像一 [数据位置])
    赋值 (颜色分量2, 源图像二 [数据位置])
    .如果 (小于或等于 (百分比, 0))
        赋值 (目标颜色分量, 颜色分量1)
    .否则
        赋值 (目标颜色分量, 相加 (相除 (相乘 (颜色分量1, 相减 (255, 百分比)), 255), 相除 (相乘 (颜色分量2, 百分比), 255)))
        赋值 (目标颜色分量, 相加 (相除 (相乘 (目标颜色分量, 相减 (255, 百分比)), 255), 相除 (相乘 (颜色分量2, 百分比), 255))) ' 王军加
        赋值 (目标颜色分量, 相加 (相除 (相乘 (目标颜色分量, 相减 (255, 百分比)), 255), 相除 (相乘 (颜色分量2, 百分比), 255))) ' 王军加
    .如果结束
    赋值 (结果图像 [数据位置], 目标颜色分量)
    赋值 (数据位置, 相加 (数据位置, 1))
     ' 进度条1.位置 ＝ 颜色分量位置
.循环判断尾 (小于或等于 (数据位置, 图像长度))
返回 (结果图像)

.子程序 制作蒙板, 字节集, 公开, 
.参数 源图像, 字节集, 参考, 

.局部变量 新图像, 字节集, , , 
.局部变量 实际数宽, 整数型, , , 
.局部变量 数据大小, 整数型, , , 
.局部变量 当前行, 整数型, , , 
.局部变量 当前列, 整数型, , , 
.局部变量 行首点, 整数型, , , 
.局部变量 宽度1, 整数型, , , 
.局部变量 高度1, 整数型, , , 
.局部变量 r红, 整数型, , , 原图字集中的红色部分
.局部变量 g绿, 整数型, , , 原图字集中的绿色部分
.局部变量 b兰, 整数型, , , 原图字集中的蓝色部分
.局部变量 x, 整数型, , , 绿颜色处于文件图像的第56位之后,这样从56位开始进行操作,每间隔3位都是处理绿色
.局部变量 y, 整数型, , , 兰颜色处于文件图像的第55位之后,这样从55位开始进行操作,每间隔3位都是处理兰色
.局部变量 z, 整数型, , , 红颜色处于文件图像的第57位之后,这样从57位开始进行操作,每间隔3位都是处理红色
.局部变量 原图字集, 字节集, , , 将原图片作为字节集读入内容中处理
.局部变量 比照字集, 字节集, , , 将比照图片作为字节集读入内容中处理
.局部变量 新图字集, 字节集, , , 将对比后的内容生成到这个内容字节集中,以后再一次性显示
.局部变量 r红1, 整数型, , , 比照图字集中的红色部分
.局部变量 g绿1, 整数型, , , 比照图字集中的绿色部分
.局部变量 b兰1, 整数型, , , 比照图字集中的蓝色部分
.局部变量 纠正位, 整数型, , , 因为图象数据中的每一个扫描行字节数必须为4的倍数，所以对图象宽度进行修正
.局部变量 容错率, 整数型, , , 容错率正值-用于容错率计算,这样对于JPEG类的图片来说可以去除干扰.
.局部变量 负容错率, 整数型, , , 容错率负值-用于容错率计算,范围在0-255之间较好!
.局部变量 计算值, 整数型, , , 将原图三原色数值相加后减去比照图的三原色数值-用于容错率计算

赋值 ()
赋值 (宽度1, 取字节集数据 (取字节集中间 (源图像, 19, 4), #整数型, ))
赋值 (高度1, 取字节集数据 (取字节集中间 (源图像, 23, 4), #整数型, ))
赋值 (实际数宽, 相除 (数据大小, 高度1))
赋值 (到数值 (.内容)) ' 从编辑框中取得容错率,这样对于JPEG类的图片来说,有一定的容错较好.
赋值 (56) ' 绿颜色处于文件图像的第56位之后,这样从56位开始进行操作,每间隔3位都是处理绿色
赋值 (55) ' 兰颜色处于文件图像的第55位之后,这样从55位开始进行操作,每间隔3位都是处理兰色
赋值 (57) ' 红颜色处于文件图像的第57位之后,这样从57位开始进行操作,每间隔3位都是处理红色
赋值 (r红1, 到数值 (还原三原色 (.颜色, 1)))
赋值 (g绿1, 到数值 (还原三原色 (.颜色, 2)))
赋值 (b兰1, 到数值 (还原三原色 (.颜色, 3)))

赋值 (选择 (等于 (求余数 (相乘 (.宽度, 3), 4), 0), 0, 相减 (4, 求余数 (相乘 (.宽度, 3), 4)))) ' 利用图像宽度计算纠正位为几个字节
.计次循环首 (.高度, ) ' 字节集的55位后是各扫描行的数据,用图片的高可以得到扫描行的总数
    .计次循环首 (.宽度, ) ' 每一个扫描行是由各像素点（三个字节）数据组成，可以用图片的宽度得像素的数目
         ' 输出调试文本 (z)
        赋值 (r红, 源图像 [z]) ' 在原图中,从第57位开始,每三位读一次,读出的是红色的数据
        赋值 (g绿, 源图像 [x]) ' 在原图中,从第56位开始,每三位读一次,读出的是绿色的数据
        赋值 (b兰, 源图像 [y]) ' 在原图中,从第55位开始,每三位读一次,读出的是兰色的数据
        
        .如果 (并且 (大于 (r红, 相减 (r红1, 容错率)), 小于 (r红, 相加 (r红1, 容错率)), 大于 (g绿, 相减 (g绿1, 容错率)), 小于 (g绿, 相加 (g绿1, 容错率)), 大于 (b兰, 相减 (b兰1, 容错率)), 小于 (b兰, 相加 (b兰1, 容错率)))) ' 比较两张图-原图片与比照图片的三原色各有什么不同,如果不同就显示不同的地方,否则用白颜色填充
            赋值 (新图像 [z], 0) ' 新图片取到以上两图不同的地方就取值,以便于显示不同处.这里取的是其中之一颜色
            赋值 (新图像 [x], 0) ' 新图片取到以上两图不同的地方就取值,以便于显示不同处.这里取的是其中之一颜色
            赋值 (新图像 [y], 0) ' 新图片取到以上两图不同的地方就取值,以便于显示不同处.这里取的是其中之一颜色
            
        .否则
            赋值 (新图像 [z], 255)
            赋值 (新图像 [x], 255)
            赋值 (新图像 [y], 255)
        .如果结束
        
        赋值 (相加 (3)) ' 前面已经说了,每间隔三位是一种颜色,现在就是其中一种颜色的位置进3位
        赋值 (相加 (3)) ' 前面已经说了,每间隔三位是一种颜色,现在就是其中一种颜色的位置进3位
        赋值 (相加 (3)) ' 前面已经说了,每间隔三位是一种颜色,现在就是其中一种颜色的位置进3位
        
    .计次循环尾 ()
    赋值 (相加 ()) ' 因为每一扫描行的字节数必须是4的整数倍，所以加入纠正位
    赋值 (相加 ()) ' 因为每一扫描行的字节数必须是4的整数倍，所以加入纠正位
    赋值 (相加 ()) ' 因为每一扫描行的字节数必须是4的整数倍，所以加入纠正位
.计次循环尾 ()


返回 (新图像)


.子程序 _按钮2_被单击, 空白型, , 
赋值 (.底图, 透明叠加图像 (.取图片 (), .取图片 (), .取图片 ()))


.子程序 还原三原色, 文本型, 公开, 返回易语言中颜色数值所对应的某一个RGB单色数,-1表示失败
.参数 颜色值, 整数型, , 易语言的颜色数
.参数 需取的色, 整数型, , 1=R,2=G,3=B,4=H,5=HTML

.局部变量 返回值, 文本型, , , 

.判断开始 (等于 (需取的色, 1))
    赋值 (返回值, 到文本 (位与 (颜色值, 255))) ' 返回R值
.判断 (等于 (需取的色, 2))
    赋值 (返回值, 到文本 (整除 (位与 (颜色值, 65280), 256))) ' 返回G值
.判断 (等于 (需取的色, 3))
    赋值 (返回值, 到文本 (整除 (位与 (颜色值, 16711680), 65536))) ' 返回B值
.判断 (等于 (需取的色, 4))
    赋值 (返回值, 相加 (“0x”, 取十六进制文本 (颜色值)))
.判断 (等于 (需取的色, 5))
    赋值 (返回值, 相加 (“#”, 取十六进制文本 (颜色值)))
.默认
    赋值 (返回值, “-1”)
.判断结束
返回 (返回值)



 ' 不属于任何一个程序集、类模块的函数：
