 ' 文件类型：Windows模块源码

 ' 程序名称：文本操作模块
 ' 程序描述：    注意：本模块设置的“是否区分大小写”默认皆为“真”，
即区分大小写，“假”不区分大小写！
    本模块返回的文本尾行皆不含空行(即换行符)，如果需要，请
在调用时自行添加。
（如果文本尾行原本就有空行，则不受影响，空行可以正常返回。）

 ' 程序作者：易语言我吃了
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：             易语言资源网注意事项
--============   www.wodesoft.com  =============--
* 易语言资源网为易语言官方站、易语言官方论坛提供辅助资源站；本易语言资源网( www.wodesoft.com)所有软件和资料均为软件作者提供和网友推荐发布而来，其版权归该软件和程序源码的合法拥有者所有，本站易语言资源网整理收集仅供易语言用户学习和易语言技术研究探讨使用，不得用于任何商业用途。如果由于以上原因造成的版权纠纷本站概不负责！
* 本站资源未经许可,任何网站不得非法盗链及抄袭本站资源；如引用，请注明来自易语言资源网，谢谢合作！
--============   www.wodesoft.com  =============--
 ' 版本号：1.5
 ' 创建号：0.0





 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 5 0 系统核心支持库





.程序集 程序集1, , , (易语言我吃了) 原创

.子程序 _启动子程序, 整数型, , 请在本子程序中放置易模块初始化代码
 ' --========  易语言资源网  (www.wodesoft.com)  ======--
 ' 努力创建完善、持续更新的易语言学习例程源码资源站
 ' --================   www.wodesoft.com  ===========--
 ' --==================   易语言资源网注意事项  ================--
 ' * 易语言资源网为易语言官方站、易语言官方论坛提供辅助资源站；
 ' 本易语言资源网( www.wodesoft.com)所有软件和资料均为软件作者提
 ' 供和网友推荐发布而来，其版权归该软件和程序源码的合法拥有者所
 ' 有，本站易语言资源网整理收集仅供易语言用户学习和易语言技术研
 ' 究探讨使用，不得用于任何商业用途。如果由于以上原因造成的版权
 ' 纠纷本站概不负责！
 ' * 本站资源未经许可，任何网站不得非法盗链及抄袭本站资源；如引用
 ' 页面，请注明来自易语言资源网，谢谢合作！
 ' --=====================   www.wodesoft.com  ================--

_临时子程序 () ' 在初始化代码执行完毕后调用测试代码
返回 (0) ' 可以根据您的需要返回任意数值

.子程序 _临时子程序, 空白型, , 
 ' 本名称子程序用作测试程序用，仅在开发及调试环境中有效，编译发布程序前将被系统自动清空，请将所有用作测试的临时代码放在本子程序中。 ***注意不要修改本子程序的名称、参数及返回值类型。


 ' ******注意：本模块设置的“是否区分大小写”默认皆为“真”，即区分大小写，“假”不区分大小写！******
 ' 本模块的返回的文本尾行皆不含空行(即换行符)，如果需要，请在调用时自行添加。（如果文本尾行原本就有空行，则不受影响，空行可以正常返回。）******

.子程序 取指定文件文本行, 文本型, , 成功返回指定的文本行文本，失败返回空文本。
.参数 文本, 文本型, , 文件路径。
.参数 行数, 整数型, , 

.局部变量 文本数组, 文本型, , "0", 

赋值 (文本数组, 分割文本 (到文本 (读入文件 (文本)), #换行符, ))
.如果真 (或者 (小于或等于 (行数, 0), 大于 (行数, 取数组成员数 (文本数组))))
    返回 (“”) ' 本源码来自易语言资源网(www.wodesoft.com)
.如果真结束
返回 (文本数组 [行数])

.子程序 取指定变量文本行, 文本型, , 成功返回指定的文本行文本，失败返回空文本。
.参数 文本, 文本型, , 文本变量。
.参数 行数, 整数型, , 

.局部变量 文本数组, 文本型, , "0", 

赋值 (文本数组, 分割文本 (文本, #换行符, ))
.如果真 (或者 (小于或等于 (行数, 0), 大于 (行数, 取数组成员数 (文本数组))))
    返回 (“”) ' 本源码来自易语言资源网(www.wodesoft.com)
.如果真结束
返回 (文本数组 [行数])

.子程序 取文本行数, 整数型, , 取一个文本共有多少行。
.参数 文本, 文本型, , 

.局部变量 文本数组, 文本型, , "0", 
.局部变量 行数, 整数型, , , 

赋值 (文本数组, 分割文本 (文本, #换行符, ))
赋值 (行数, 取数组成员数 (文本数组))
清除数组 (文本数组)
返回 (行数)' 本源码来自易语言资源网(www.wodesoft.com)

.子程序 替换行内容, 文本型, , 替换指定行整行内容，返回替换后的文本，行数错误返回空文本、
.参数 原文本, 文本型, , 
.参数 替换内容, 文本型, , 
.参数 行数, 整数型, 可空, 如果此参数不填，则必需填下一参数“文本行文本”，用来指定替换的行数，两个参数只能填其中一个，一个不填返回空文本。
.参数 文本行文本, 文本型, 可空, 如果此参数不填，则必需填上一参数“行数”，用来指定替换的行文本，如果有多行匹配，将会全部替换匹配的文本行，两个参数只能填其中一个，一个不填返回空文本。
.参数 是否区分大小写, 逻辑型, 可空, 仅在填写了“文本行文本”时有效，使用“行数”参数时，该参数没有作用。此参数可空，默认为“真”，为真区分大小写，为假不区分。

.局部变量 输出文本, 文本型, , , 
.局部变量 计次, 整数型, , , 
.局部变量 文本数组, 文本型, , "0", 
.局部变量 行数数组, 整数型, , "0", 

.如果真 (是否为空 (是否区分大小写))
    赋值 (是否区分大小写, 真)
.如果真结束
赋值 (文本数组, 分割文本 (原文本, #换行符, ))
.如果真 (或者 (小于或等于 (行数, 0), 大于 (行数, 取数组成员数 (文本数组))))
    清除数组 (文本数组)
    返回 (“”)
.如果真结束
.如果 (是否为空 (行数))
    .如果真 (是否为空 (文本行文本))
        返回 (“”)
    .如果真结束
    .如果真 (等于 (文本行文本, “”))
        返回 (“”)
    .如果真结束
    .如果真 (等于 (寻找文本 (原文本, 文本行文本, , 取反 (是否区分大小写)), -1))
        返回 (“”) ' 本源码来自易语言资源网(www.wodesoft.com)
    .如果真结束
    查找文本行在第几行 (原文本, , 文本行文本, 是否区分大小写, 行数数组)
    .计次循环首 (取数组成员数 (行数数组), 计次)
        赋值 (文本数组 [行数数组] [计次], 替换内容)
    .计次循环尾 ()
.否则
    赋值 (文本数组 [行数], 替换内容)
.如果结束
.计次循环首 (取数组成员数 (文本数组), 计次)
    .如果真 (不等于 (取数组成员数 (文本数组), 计次))
        赋值 (输出文本, 相加 (输出文本, 文本数组 [计次], #换行符))
        到循环尾 ()
    .如果真结束
    赋值 (输出文本, 相加 (输出文本, 文本数组 [计次]))
.计次循环尾 ()
清除数组 (文本数组)
返回 (输出文本)

.子程序 取文本行出现次数, 整数型, , 取某行文本共出现了多少次，不存在返回 0，错误返回-1。
.参数 文本, 文本型, , 
.参数 行数, 整数型, 可空, 如果此参数不填，则必需填下一参数“文本行文本”，用来指定搜寻的行文本。
.参数 文本行文本, 文本型, 可空, 如果此参数不填，则必需填上一参数“行数”，用来指定行文本行数，两个参数只能填其中一个，一个不填返回-1。
.参数 是否区分大小写, 逻辑型, 可空, 默认为“真”，为真区分大小写，为假不区分。

.局部变量 临时文本, 文本型, , , 
.局部变量 计次, 整数型, , , 
.局部变量 文本数组, 文本型, , "0", 
.局部变量 出现次数, 整数型, 静态, , 
.局部变量 文本行长, 整数型, , , 

.如果真 (是否为空 (是否区分大小写))
    赋值 (是否区分大小写, 真)
.如果真结束
.如果 (是否为空 (行数))
    .如果真 (是否为空 (文本行文本))
        返回 (-1) ' 本源码来自易语言资源网(www.wodesoft.com)
    .如果真结束
    赋值 (临时文本, 文本行文本)
.否则
    赋值 (临时文本, 取指定变量文本行 (文本, 行数))
.如果结束
.如果真 (等于 (临时文本, “”))
    返回 (-1)
.如果真结束
.如果真 (等于 (寻找文本 (文本, 临时文本, , 取反 (是否区分大小写)), -1))
    返回 (0)
.如果真结束
赋值 (文本行长, 取文本长度 (临时文本))
赋值 (文本数组, 分割文本 (文本, #换行符, ))
.计次循环首 (取数组成员数 (文本数组), 计次)
    .如果真 (不等于 (寻找文本 (文本数组 [计次], 临时文本, , 取反 (是否区分大小写)), -1))
        .如果真 (等于 (取文本长度 (文本数组 [计次]), 文本行长))
            赋值 (出现次数, 相加 (出现次数, 1))
        .如果真结束
        
    .如果真结束
    
.计次循环尾 ()
清除数组 (文本数组)
返回 (出现次数)

.子程序 取文本出现次数, 整数型, , 取某个字符共出现了多少次，不存在返回0。
.参数 文本, 文本型, , 
.参数 被搜寻文本, 文本型, , 
.参数 是否区分大小写, 逻辑型, 可空, 默认为“真”，为真区分大小写，为假不区分。

.局部变量 临时文本, 文本型, , , 
.局部变量 原文本长度, 整数型, , , 
.局部变量 欲搜文本长, 整数型, , , 
.局部变量 替换后文本, 文本型, , , 
.局部变量 出现的次数, 整数型, , , 

.如果真 (是否为空 (是否区分大小写))
    赋值 (是否区分大小写, 真)
.如果真结束
.如果真 (等于 (寻找文本 (文本, 被搜寻文本, , 取反 (是否区分大小写)), -1))
    返回 (0)
.如果真结束
赋值 (临时文本, 文本)
赋值 (原文本长度, 取文本长度 (到全角 (临时文本)))
赋值 (欲搜文本长, 取文本长度 (到全角 (被搜寻文本)))
.如果 (等于 (是否区分大小写, 假))
    赋值 (替换后文本, 子文本替换 (到全角 (到大写 (到半角 (临时文本))), 到全角 (到大写 (到半角 (被搜寻文本))), , , , 是否区分大小写))
.否则
    赋值 (替换后文本, 子文本替换 (到全角 (临时文本), 到全角 (被搜寻文本), , , , 是否区分大小写))
.如果结束
赋值 (出现的次数, 相除 (相减 (原文本长度, 取文本长度 (替换后文本)), 欲搜文本长))
赋值 (临时文本, “”)
返回 (出现的次数)

.子程序 取文本行出现位置, 逻辑型, , 得到某行在整个文本中出现的位置数组，数组第一个成员是第一次出现的位置。成功返回真，没有找到或参数输入错误返回假。
.参数 文本, 文本型, , 
.参数 行数, 整数型, 可空, 如果此参数不填，则必需填下一参数“文本行文本”，用来指定搜寻的行文本。
.参数 文本行文本, 文本型, 可空, 如果此参数不填，则必需填上一参数“行数”，用来指定行文本行数，两个参数只能填其中一个，一个不填返回假。
.参数 是否区分大小写, 逻辑型, 可空, 默认为“真”，为真区分大小写，为假不区分。
.参数 匿名参数_283, 整数型, 参考 数组, 

.局部变量 起始位置数值, 整数型, , , 
.局部变量 起始位置数值2, 整数型, , , 
.局部变量 文本行, 文本型, , , 
.局部变量 文本长度, 整数型, , , 
.局部变量 计次, 整数型, , , 

.如果真 (是否为空 (是否区分大小写))
    赋值 (是否区分大小写, 真)
.如果真结束
.如果 (是否为空 (行数))
    .如果真 (是否为空 (文本行文本))
        返回 (假)
    .如果真结束
    赋值 (文本行, 文本行文本)
.否则
    赋值 (文本行, 取指定变量文本行 (文本, 行数))
.如果结束
.如果真 (等于 (文本行, “”))
    返回 (假)
.如果真结束
.如果真 (等于 (寻找文本 (文本, 文本行, , 取反 (是否区分大小写)), -1))
    返回 (假)
.如果真结束
赋值 (文本长度, 取文本长度 (文本行))
.计次循环首 (取文本行出现次数 (文本, 行数, 是否区分大小写), 计次)
    .如果 (等于 (计次, 1))
        赋值 (起始位置数值, 寻找文本 (文本, 文本行, , 取反 (是否区分大小写)))
        赋值 (起始位置数值2, 相加 (起始位置数值, 文本长度, 1))
        加入成员 (匿名参数_283, 起始位置数值)
    .否则
        赋值 (起始位置数值2, 寻找文本 (文本, 文本行, 起始位置数值2, 取反 (是否区分大小写)))
        加入成员 (匿名参数_283, 起始位置数值2)
        赋值 (起始位置数值2, 相加 (起始位置数值2, 文本长度))
    .如果结束
    
.计次循环尾 ()
返回 (真)

.子程序 取文本出现位置, 逻辑型, , 得到某个文本的在整个文本中出现的位置数组，数组第一个成员是第一次出现的位置。成功返回真，没有找到返回假。
.参数 文本, 文本型, , 
.参数 被搜寻的文本, 文本型, , 
.参数 是否区分大小写, 逻辑型, 可空, 默认为“真”，为真区分大小写，为假不区分。
.参数 匿名参数_316, 整数型, 参考 数组, 

.局部变量 起始位置数值, 整数型, , , 
.局部变量 起始位置数值2, 整数型, , , 
.局部变量 文本长度, 整数型, , , 
.局部变量 计次, 整数型, , , 

.如果真 (是否为空 (是否区分大小写))
    赋值 (是否区分大小写, 真)
.如果真结束
.如果真 (等于 (寻找文本 (文本, 被搜寻的文本, , 取反 (是否区分大小写)), -1))
    返回 (假)
.如果真结束
赋值 (文本长度, 取文本长度 (被搜寻的文本))
.计次循环首 (取文本出现次数 (文本, 被搜寻的文本, 是否区分大小写), 计次)
    .如果 (等于 (计次, 1))
        赋值 (起始位置数值, 寻找文本 (文本, 被搜寻的文本, , 取反 (是否区分大小写)))
        赋值 (起始位置数值2, 相加 (起始位置数值, 文本长度, 1))
        加入成员 (匿名参数_316, 起始位置数值)
    .否则
        赋值 (起始位置数值2, 寻找文本 (文本, 被搜寻的文本, 起始位置数值2, 取反 (是否区分大小写)))
        加入成员 (匿名参数_316, 起始位置数值2)
        赋值 (起始位置数值2, 相加 (起始位置数值2, 文本长度))
    .如果结束
    
.计次循环尾 ()
返回 (真)

.子程序 取文本位置行数, 整数型, , 返回文本中某位置在第几行，不存在返回0。
.参数 文本, 文本型, , 
.参数 欲查找的位置, 整数型, , 

.局部变量 临时文本, 文本型, , , 
.局部变量 文本数组, 文本型, , "0", 
.局部变量 行数, 整数型, , , 

.如果真 (或者 (大于 (欲查找的位置, 取文本长度 (文本)), 小于或等于 (欲查找的位置, 0)))
    返回 (0)
.如果真结束
赋值 (临时文本, 取文本左边 (文本, 欲查找的位置))
赋值 (文本数组, 分割文本 (临时文本, #换行符, ))
赋值 (行数, 取数组成员数 (文本数组))
清除数组 (文本数组)
返回 (行数)

.子程序 取某位置文本, 文本型, , 取某位置下的文本，如果指定位置超出文本长度，返回空文本。
.参数 文本, 文本型, , 
.参数 位置, 整数型, , 
.参数 取出文本类型, 逻辑型, 参考 可空, 得到指定位置的文本类型，全角为真，半角为假。

.局部变量 输出文本, 文本型, , , 

.如果真 (或者 (大于 (位置, 取文本长度 (文本)), 小于或等于 (位置, 0)))
    返回 (“”)
.如果真结束
赋值 (输出文本, 取文本中间 (文本, 位置, 2))
.如果真 (小于 (取代码 (输出文本, ), 0))
    赋值 (输出文本, 取文本中间 (文本, 相减 (位置, 1), 2))
    .如果真 (小于 (取代码 (输出文本, ), 0))
        赋值 (取出文本类型, 真)
        返回 (输出文本)
    .如果真结束
    赋值 (取出文本类型, 真)
    返回 (取文本中间 (文本, 位置, 2))
.如果真结束
赋值 (取出文本类型, 假)
返回 (取文本中间 (文本, 位置, 1))

.子程序 文本是否为全角, 逻辑型, , 检查某一字符是否为全角，一次只能检查一个字，即“文本字符”参数中的只能是一个半角或全角字符，否则返回假。是全角返回真，不是返回假。
.参数 文本字符, 文本型, , 

.如果真 (大于 (取文本长度 (文本字符), 2))
    返回 (假)
.如果真结束
.如果真 (小于 (取代码 (文本字符, ), 0))
    返回 (真)
.如果真结束
返回 (假)

.子程序 查找文本行在第几行, 逻辑型, 公开, 查找某行在文本中出现的行数，得到行数数组，数组第一个成员是第一次出现的行数。成功返回真，没有找到或参数错误返回假。
.参数 文本, 文本型, , 
.参数 欲搜寻的文本行数, 整数型, 可空, 如果此参数不填，则必需填下一参数“欲搜寻的文本行文本”，用来指定搜寻的行文本。
.参数 欲搜寻的文本行文本, 文本型, 可空, 如果此参数不填，则必需填上一参数“欲搜寻的文本行数”，用来指定行文本行数，两个参数只能填其中一个，一个不填返回假。
.参数 是否区分大小写, 逻辑型, 可空, 默认为“真”，为真区分大小写，为假不区分。
.参数 行数, 整数型, 参考 数组, 

.局部变量 文本数组, 文本型, , "0", 
.局部变量 欲查文本, 文本型, , , 
.局部变量 行长度, 整数型, , , 
.局部变量 计次, 整数型, , , 

.如果真 (是否为空 (是否区分大小写))
    赋值 (是否区分大小写, 真)
.如果真结束
.如果 (是否为空 (欲搜寻的文本行数))
    .如果真 (是否为空 (欲搜寻的文本行文本))
        返回 (假)
    .如果真结束
    赋值 (欲查文本, 欲搜寻的文本行文本)
.否则
    赋值 (欲查文本, 取指定变量文本行 (文本, 欲搜寻的文本行数))
.如果结束
.如果真 (等于 (欲查文本, “”))
    返回 (假)
.如果真结束
.如果真 (等于 (寻找文本 (文本, 欲搜寻的文本行数, , 取反 (是否区分大小写)), -1))
    返回 (假)
.如果真结束
赋值 (文本数组, 分割文本 (文本, #换行符, ))
赋值 (行长度, 取文本长度 (欲查文本))
.计次循环首 (取数组成员数 (文本数组), 计次)
    .如果真 (不等于 (寻找文本 (文本数组 [计次], 欲查文本, , 取反 (是否区分大小写)), -1))
        .如果真 (等于 (取文本长度 (文本数组 [计次]), 行长度))
            加入成员 (行数, 计次)
        .如果真结束
        
    .如果真结束
     ' 本源码来自易语言资源网(www.wodesoft.com)
.计次循环尾 ()
返回 (真)

.子程序 查找文本在第几行, 逻辑型, , 查找某个字符在文本中出现的行数，得到行数数组，数组第一个成员是第一次出现的行数。成功返回真，没有找到返回假。
.参数 文本, 文本型, , 
.参数 欲搜寻的文本, 文本型, , 
.参数 是否区分大小写, 逻辑型, 可空, 默认为“真”，为真区分大小写，为假不区分。
.参数 行数, 整数型, 参考 数组, 

.局部变量 文本数组, 文本型, , "0", 
.局部变量 计次, 整数型, , , 

.如果真 (是否为空 (是否区分大小写))
    赋值 (是否区分大小写, 真)
.如果真结束
.如果真 (等于 (寻找文本 (文本, 欲搜寻的文本, , 取反 (是否区分大小写)), -1))
    返回 (假)
.如果真结束
赋值 (文本数组, 分割文本 (文本, #换行符, ))
.计次循环首 (取数组成员数 (文本数组), 计次)
    .如果真 (不等于 (寻找文本 (文本数组 [计次], 欲搜寻的文本, , 取反 (是否区分大小写)), -1))
        加入成员 (行数, 计次)
    .如果真结束
    
.计次循环尾 ()
返回 (真)

.子程序 删除文本文件一行, 逻辑型, , 删除指定文件内的一行文本，成功打开文件返回真，打开文件失败返回假。
.参数 原文本, 文本型, , 填写文件路径。
.参数 行数, 整数型, , 欲删除的行数。 （这个子程序代码是从网上搜的，不懂是哪位大虾写的，借来用，呵呵。。）

.局部变量 文件号, 整数型, , , 
.局部变量 标号, 整数型, , , 
.局部变量 位置1, 整数型, , , 
.局部变量 位置2, 整数型, , , 
.局部变量 内容, 文本型, , , 
.局部变量 文本变量, 文本型, , , 

赋值 (文件号, 打开文件 (原文本, #改读, ))
.如果真 (等于 (文件号, 0))
    返回 (假)
.如果真结束
移到文件首 (文件号)
.判断循环首 (等于 (是否在文件尾 (文件号, 真), 假))
    赋值 (标号, 相加 (标号, 1))
    赋值 (位置1, 取读写位置 (文件号))
    赋值 (内容, 读入一行 (文件号))
    赋值 (位置2, 取读写位置 (文件号))
    .如果真 (等于 (标号, 行数))
        移动读写位置 (文件号, #现行位置, 负 (相减 (位置2, 位置1)))
        删除数据 (文件号, 相减 (位置2, 位置1))
    .如果真结束
    
.判断循环尾 ()
关闭文件 (文件号)
返回 (真)

.子程序 删除文本变量一行, 文本型, , 删除指定文本变量内的一行文本，返回删行后的文本，行数错误返回空文本。
.参数 原文本, 文本型, , 
.参数 行数, 整数型, , 行数超出范围返回空文本。

.局部变量 文本数组, 文本型, , "0", 
.局部变量 计次, 整数型, , , 
.局部变量 输出文本, 文本型, , , 

赋值 (文本数组, 分割文本 (原文本, #换行符, ))
.如果真 (或者 (小于或等于 (行数, 0), 大于 (行数, 取数组成员数 (文本数组))))
    返回 (“”)
.如果真结束
删除成员 (文本数组, 行数, )
.计次循环首 (取数组成员数 (文本数组), 计次)
    .如果真 (等于 (取数组成员数 (文本数组), 计次))
        赋值 (输出文本, 相加 (输出文本, 文本数组 [计次]))
        到循环尾 ()
    .如果真结束
    赋值 (输出文本, 相加 (输出文本, 文本数组 [计次], #换行符))
.计次循环尾 ()
清除数组 (文本数组)
返回 (输出文本)

.子程序 删除含关键字行, 文本型, , 将所有含有关键字的整行删除，返回删除完毕后的文本，找不到返回空文本。
.参数 原文本, 文本型, , 
.参数 关键字, 文本型, , 
.参数 含有关键字的行数, 整数型, 参考 可空 数组, 如果不需要，可不填。
.参数 是否区分大小写, 逻辑型, 可空, 默认为“真”，为真区分大小写，为假不区分。

.局部变量 文本数组, 文本型, , "0", 
.局部变量 输出文本, 文本型, , , 
.局部变量 数组数, 整数型, , , 
.局部变量 计次, 整数型, , , 

.如果真 (是否为空 (是否区分大小写))
    赋值 (是否区分大小写, 真)
.如果真结束
.如果真 (等于 (寻找文本 (原文本, 关键字, , 取反 (是否区分大小写)), -1))
    返回 (“”)
.如果真结束
查找文本在第几行 (原文本, 关键字, 是否区分大小写, 含有关键字的行数)
赋值 (文本数组, 分割文本 (原文本, #换行符, ))
.计次循环首 (取数组成员数 (含有关键字的行数), 计次)
    删除成员 (文本数组, 含有关键字的行数 [计次], )
    插入成员 (文本数组, 含有关键字的行数 [计次], 字符 (13))
.计次循环尾 ()
赋值 (数组数, 取数组成员数 (文本数组))
.计次循环首 (数组数, 计次)
    .如果真 (等于 (文本数组 [计次], 字符 (13)))
        到循环尾 ()
    .如果真结束
    .如果真 (等于 (数组数, 计次))
        赋值 (输出文本, 相加 (输出文本, 文本数组 [计次]))
        到循环尾 ()
    .如果真结束
    赋值 (输出文本, 相加 (输出文本, 文本数组 [计次], #换行符))
.计次循环尾 ()
.如果真 (是否为空 (含有关键字的行数))
    清除数组 (含有关键字的行数)
.如果真结束
清除数组 (文本数组)
返回 (输出文本)

.子程序 删除重复文本行, 文本型, 公开, 删除文本中所有重复的文本行（如果指定的重复文本为空则无效，将返回空文本），返回删除后得到的文本，行数错误返回空文本。
.参数 原文本, 文本型, , 
.参数 行数, 整数型, 可空, 如果此参数不填，则必需填下一参数“文本行文本”，用来指定重复的行文本。
.参数 文本行文本, 文本型, 可空, 如果此参数不填，则必需填上一参数“行数”，用来指定重复的行文本行数，两个参数只能填其中一个，一个不填返回空文本。
.参数 出现次数, 整数型, 参考 可空, 如果不需要，可不填。
.参数 是否区分大小写, 逻辑型, 可空, 默认为“真”，为真区分大小写，为假不区分。

.局部变量 临时文本, 文本型, , , 
.局部变量 计次, 整数型, , , 
.局部变量 文本数组, 文本型, , "0", 
.局部变量 输出文本, 文本型, , , 
.局部变量 文本行长, 整数型, , , 
.局部变量 数组数, 整数型, , , 

.如果真 (是否为空 (是否区分大小写))
    赋值 (是否区分大小写, 真)
.如果真结束
.如果 (是否为空 (行数))
    .如果真 (是否为空 (文本行文本))
        返回 (“”)
    .如果真结束
    赋值 (临时文本, 文本行文本)
.否则
    赋值 (临时文本, 取指定变量文本行 (原文本, 行数))
.如果结束
.如果真 (等于 (临时文本, “”))
    返回 (“”)
.如果真结束
.如果真 (等于 (寻找文本 (原文本, 临时文本, , 取反 (是否区分大小写)), -1))
    返回 (“”)
.如果真结束
赋值 (文本行长, 取文本长度 (临时文本))
赋值 (文本数组, 分割文本 (原文本, #换行符, ))
赋值 (数组数, 取数组成员数 (文本数组))
.计次循环首 (数组数, 计次)
    .如果真 (不等于 (寻找文本 (文本数组 [计次], 临时文本, , 取反 (是否区分大小写)), -1))
        .如果真 (等于 (取文本长度 (文本数组 [计次]), 文本行长))
            赋值 (出现次数, 相加 (出现次数, 1))
            到循环尾 ()
        .如果真结束
         ' 本源码来自易语言资源网(www.wodesoft.com)
    .如果真结束
    .如果真 (等于 (计次, 数组数))
        赋值 (输出文本, 相加 (输出文本, 文本数组 [计次]))
        到循环尾 ()
    .如果真结束
    赋值 (输出文本, 相加 (输出文本, 文本数组 [计次], #换行符))
.计次循环尾 ()
清除数组 (文本数组)
.如果真 (是否为空 (出现次数))
    赋值 (出现次数, 0)
.如果真结束
返回 (输出文本)

.子程序 删除重复文本, 文本型, , 删除文本中所有重复的文本，返回删除后得到的文本。
.参数 原文本, 文本型, , 
.参数 重复的文本, 文本型, , 
.参数 是否区分大小写, 逻辑型, 可空, 默认为“真”，为真区分大小写，为假不区分。

.如果真 (是否为空 (是否区分大小写))
    返回 (子文本替换 (原文本, 重复的文本, , , , 真))
.如果真结束
返回 (子文本替换 (原文本, 重复的文本, , , , 是否区分大小写))

.子程序 删除空行, 文本型, , 删除文本中所有的空行，返回删除空行后的文本。
.参数 原文本, 文本型, , 

返回 (子文本替换 (原文本, 相加 (#换行符, #换行符), , , , 真))

.子程序 连接文本至一行, 文本型, , 将文本内所有换行符删除，将每行连接至一起，返回连接后的文本。
.参数 原文本, 文本型, , 

返回 (子文本替换 (删除空行 (原文本), #换行符, , , , 真))

.子程序 插入文本到首行, 文本型, , 插入指定文本到首行，原首行后移至下一行，返回插入得到的文本。
.参数 原文本, 文本型, , 
.参数 欲插入文本, 文本型, , 

赋值 (原文本, 相加 (欲插入文本, #换行符, 原文本))
返回 (原文本)

.子程序 插入文本到尾行, 文本型, , 加入指定文本到尾行，返回插入得到的文本。
.参数 原文本, 文本型, , 
.参数 欲插入文本, 文本型, , 

赋值 (原文本, 相加 (原文本, #换行符, 欲插入文本))
返回 (原文本)

.子程序 插入文本到某行前, 文本型, , 将文本加入到某行之前，返回加入后的文本，行数错误返回空文本。
.参数 原文本, 文本型, , 
.参数 行数, 整数型, , 
.参数 欲插入内容, 文本型, , 

.局部变量 文本数组, 文本型, , "0", 
.局部变量 输出文本, 文本型, , , 
.局部变量 计次, 整数型, , , 

赋值 (文本数组, 分割文本 (原文本, #换行符, ))
.如果真 (或者 (小于或等于 (行数, 0), 大于 (行数, 取数组成员数 (文本数组))))
    清除数组 (文本数组)
    返回 (“”)
.如果真结束
赋值 (文本数组 [行数], 相加 (欲插入内容, 文本数组 [行数]))
.计次循环首 (取数组成员数 (文本数组), 计次)
    .如果真 (等于 (取数组成员数 (文本数组), 计次))
        赋值 (输出文本, 相加 (输出文本, 文本数组 [计次]))
        跳出循环 ()
    .如果真结束
    赋值 (输出文本, 相加 (输出文本, 文本数组 [计次], #换行符))
.计次循环尾 ()
清除数组 (文本数组)
返回 (输出文本)

.子程序 插入文本到某行后, 文本型, 公开, 将文本加入到某行之后，返回加入后的文本，行数错误返回空文本。
.参数 原文本, 文本型, , 
.参数 行数, 整数型, , 
.参数 欲插入内容, 文本型, , 

.局部变量 文本数组, 文本型, , "0", 
.局部变量 输出文本, 文本型, , , 
.局部变量 计次, 整数型, , , 

赋值 (文本数组, 分割文本 (原文本, #换行符, ))
.如果真 (或者 (小于或等于 (行数, 0), 大于 (行数, 取数组成员数 (文本数组))))
    清除数组 (文本数组)
    返回 (“”)
.如果真结束
赋值 (文本数组 [行数], 相加 (文本数组 [行数], 欲插入内容))
.计次循环首 (取数组成员数 (文本数组), 计次)
    .如果真 (等于 (取数组成员数 (文本数组), 计次))
        赋值 (输出文本, 相加 (输出文本, 文本数组 [计次]))
        跳出循环 ()
    .如果真结束
    赋值 (输出文本, 相加 (输出文本, 文本数组 [计次], #换行符))
.计次循环尾 ()
清除数组 (文本数组)
返回 (输出文本) ' 本源码来自易语言资源网(www.wodesoft.com)

.子程序 插入新一行, 文本型, , 在指定行插入文本，原文本后移，返回插入后的文本。如果指定行不存在，中间的空行将用换行符填充。
.参数 原文本, 文本型, , 
.参数 行数, 整数型, , 行数小于等于0返回空文本。
.参数 新一文本行内容, 文本型, , 

.局部变量 文本数组, 文本型, , "0", 
.局部变量 输出文本, 文本型, , , 
.局部变量 计次, 整数型, , , 

.如果真 (小于或等于 (行数, 0))
    返回 (“”)
.如果真结束
赋值 (文本数组, 分割文本 (原文本, #换行符, ))
.如果真 (大于 (行数, 取数组成员数 (文本数组)))
    赋值 (输出文本, 相加 (原文本, 取重复文本 (相减 (行数, 取数组成员数 (文本数组)), #换行符), 新一文本行内容))
    清除数组 (文本数组)
    返回 (输出文本)
.如果真结束
插入成员 (文本数组, 行数, 新一文本行内容)
.计次循环首 (取数组成员数 (文本数组), 计次)
    .如果真 (等于 (取数组成员数 (文本数组), 计次))
        赋值 (输出文本, 相加 (输出文本, 文本数组 [计次]))
        跳出循环 ()
    .如果真结束
    赋值 (输出文本, 相加 (输出文本, 文本数组 [计次], #换行符))
.计次循环尾 ()
清除数组 (文本数组)
返回 (输出文本)

.子程序 插入文本到某位置, 文本型, , 插入某文本到左起某一位置，原文本后移，返回插入后的文本。
.参数 原文本, 文本型, , 
.参数 欲插入的文本, 文本型, , 
.参数 位置, 整数型, , 位置超出范围返回空文本。

.局部变量 临时文本, 文本型, , , 
.局部变量 原文本2, 文本型, , , 
.局部变量 起始文本, 文本型, , , 

.如果真 (或者 (大于 (位置, 取文本长度 (原文本)), 小于或等于 (位置, 0)))
    返回 (“”)
.如果真结束
赋值 (原文本2, 相加 (字符 (13), 原文本))
赋值 (起始文本, 取文本左边 (原文本, 相减 (位置, 1)))
赋值 (临时文本, 起始文本)
赋值 (起始文本, 相加 (字符 (13), 起始文本))
赋值 (临时文本, 相加 (临时文本, 欲插入的文本))
返回 (子文本替换 (原文本2, 起始文本, 临时文本, , 1, 真))

.子程序 插入文本到某字前, 文本型, , 插入文本到某字前，返回插入后的文本。
.参数 原文本, 文本型, , 
.参数 某字, 文本型, , 文本中如果这个字不存在，则返回空文本。
.参数 被插在某字前的文本, 文本型, , 
.参数 是否区分大小写, 逻辑型, 可空, 默认为“真”，为真区分大小写，为假不区分。
.参数 插入次数, 整数型, 可空, 如果省略，默认进行所有可能的插入。

.如果真 (是否为空 (是否区分大小写))
    赋值 (是否区分大小写, 真)
.如果真结束
.如果真 (等于 (寻找文本 (原文本, 某字, , 取反 (是否区分大小写)), -1))
    返回 (“”)
.如果真结束
.如果真 (是否为空 (插入次数))
    返回 (子文本替换 (原文本, 某字, 相加 (被插在某字前的文本, 某字), , , 是否区分大小写))
.如果真结束
返回 (子文本替换 (原文本, 某字, 相加 (被插在某字前的文本, 某字), , 插入次数, 是否区分大小写))

.子程序 插入文本到某字后, 文本型, 公开, 插入文本到某字后，返回插入后的文本。
.参数 原文本, 文本型, , 
.参数 某字, 文本型, , 文本中如果这个字不存在，则返回空文本。
.参数 被插在某字后的文本, 文本型, , 
.参数 是否区分大小写, 逻辑型, 可空, 默认为“真”，为真区分大小写，为假不区分。
.参数 插入次数, 整数型, 可空, 如果省略，默认进行所有可能的插入

.如果真 (是否为空 (是否区分大小写))
    赋值 (是否区分大小写, 真)
.如果真结束
.如果真 (等于 (寻找文本 (原文本, 某字, , 取反 (是否区分大小写)), -1))
    返回 (“”) ' 本源码来自易语言资源网(www.wodesoft.com)
.如果真结束
.如果真 (是否为空 (插入次数))
    返回 (子文本替换 (原文本, 某字, 相加 (某字, 被插在某字后的文本), , , 是否区分大小写))
.如果真结束
返回 (子文本替换 (原文本, 某字, 相加 (某字, 被插在某字后的文本), , 插入次数, 是否区分大小写))


 ' 不属于任何一个程序集、类模块的函数：
