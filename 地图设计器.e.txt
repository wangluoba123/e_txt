 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：说明：
frontgroudX.edb为每关的场景数据库。X为正整数，对应关数。（frontgroud1.edb既为第一关）
每个场景大小为：800X600
图片的类型在“类型”菜单中设定。如果该类型有动画效果，在编辑器中将不显示动画效果，动画效果将在游戏中体现。



按键：
连续画图   按住CTRL
多项选中   按住SHIFT


 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 518
    高度 = 460
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 1
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 真
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 3
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “超级玛利地图编辑器”
    帮助文件名 = “”

窗口 进度窗口
    左边 = 50
    顶边 = 50
    宽度 = 499
    高度 = 106
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “清除完全相同内容...”
    帮助文件名 = “”



.图片 说明, " ' 已保存到：D:\易语言学习\Data\地图设计器.e\说明", , 
.常量 类别数据库, "“database\something.edb”", , 
.常量 临时数据库, "“database\temp.edb”", , 
.常量 数据库路径, "“database\”", , 
.常量 数据路径, "“data\”", , 
.常量 图片路径, "“gfx\”", , 
.常量 WM_COMMAND, "273", , 被单击消息
.常量 MF_CHECKED, "8", , 菜单选中
.常量 VK_LBUTTON, "1", , 鼠标左键
.常量 VK_RBUTTON, "2", , 鼠标右键
.常量 VK_CONTROL, "17", , Ctrl键
.常量 VK_SHIFT, "16", , Shift键
.常量 WM_PAINT, "15", , 重画消息
.常量 SRCCOPY, "13369376", , 拷贝方式
.常量 IMAGE_BITMAP, "0", , 位图资源
.常量 LR_LOADFROMFILE, "16", , 载入适当类型
.常量 DST_BITMAP, "4", , 图象类型
.常量 SW_SHOWMAXIMIZED, "3", , 最大化显示窗口


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 2 系统核心支持库
 ' iext 27bb20fdd3e145e4bee3db39ddd6e64c 1 2 扩展界面支持库一
 ' EThread 5F99C1642A2F4e03850721B4F5D7C3F8 1 1 多线程支持库
 ' iext2 AF6AD80AA4244A59AFB3D83ECF5173CC 1 1 扩展界面支持库二




数据类型 RECT, , 区域
    .成员 Left, 整数型, , , 
    .成员 Top, 整数型, , , 
    .成员 Right, 整数型, , , 
    .成员 Bottom, 整数型, , , 

数据类型 POINT, , 坐标
    .成员 x, 整数型, , , 
    .成员 y, 整数型, , , 

数据类型 BITMAPINFOHEADER, , 位图信息头
    .成员 biSize, 整数型, , , 
    .成员 biWidth, 整数型, , , 宽
    .成员 biHeight, 整数型, , , 高
    .成员 biPlanes, 短整数型, , , 
    .成员 biBitCount, 短整数型, , , 
    .成员 biCompression, 整数型, , , 
    .成员 biSizeImage, 整数型, , , 
    .成员 biXPelsPerMeter, 整数型, , , 
    .成员 biYPelsPerMeter, 整数型, , , 
    .成员 biClrUsed, 整数型, , , 
    .成员 biClrImportant, 整数型, , , 

数据类型 BITMAPFILEHEADER, , 位图文件头
    .成员 bfType, 短整数型, , , 
    .成员 bfSize, 整数型, , , 文件大小
    .成员 bfReserved1, 短整数型, , , 
    .成员 bfReserved2, 短整数型, , , 
    .成员 bfOffBits, 整数型, , , 

数据类型 BITMAPINFO, , 位图宽高
    .成员 Width, 整数型, , , 宽
    .成员 Height, 整数型, , , 高

数据类型 选中图片信息, , 记录当前
    .成员 左边, 整数型, , , 被选中图片在画板中的左边
    .成员 顶边, 整数型, , , 被选中图片在画板中的顶边
    .成员 宽度, 整数型, , , 被选中图片宽度
    .成员 高度, 整数型, , , 被选中图片高度
    .成员 标签, 整数型, , , 被选中图片在临时库中标签号

.全局变量 运行目录, 文本型, , , 
.全局变量 原数据库路径, 文本型, , , 

.DLL命令 DrawFocusRect, 整数型, "user32.dll", "DrawFocusRect", , 画虚线框
    .参数 hdc, 整数型, , DC
    .参数 lpRect, RECT, 传址, 矩形区域

.DLL命令 GetDC, 整数型, "user32.dll", "GetDC", , 取DC
    .参数 hwnd, 整数型, , 窗口句柄

.DLL命令 GetWindowRect, 整数型, "user32.dll", "GetWindowRect", , 取窗口区域
    .参数 hwnd, 整数型, , 窗口句柄
    .参数 lpRect, RECT, 传址, 返回的矩形区域

.DLL命令 GetClientRect, 整数型, "user32.dll", "GetClientRect", , 取客户区区域(反映为大小，不是实际坐标)
    .参数 hwnd, 整数型, , 窗口句柄
    .参数 lpRect, RECT, 传址, 返回的矩形区域

.DLL命令 OffsetRect, 整数型, "user32.dll", "OffsetRect", , 移动区域
    .参数 lpRect, RECT, 传址, 欲移动的矩形
    .参数 x, 整数型, , 横向偏移量
    .参数 y, 整数型, , 纵向偏移量

.DLL命令 ClipCursor锁, 整数型, "user32.dll", "ClipCursor", , 锁定鼠标区域
    .参数 lpRect, RECT, , 指定锁定区域

.DLL命令 ClipCursor解, 整数型, "user32.dll", "ClipCursor", , 解锁鼠标区域
    .参数 lpRect, 整数型, , 直接给0解锁

.DLL命令 ClientToScreen, 整数型, "user32.dll", "ClientToScreen", , 取客户区起始点坐标
    .参数 hWnd, 整数型, , 窗口句柄
    .参数 lpPoint, POINT, 传址, 返回坐标（X，Y）

.DLL命令 GetMenu, 整数型, "user32.dll", "GetMenu", , 获取窗口主菜单句柄
    .参数 hwnd, 整数型, , 窗口句柄

.DLL命令 GetSubMenu, 整数型, "user32.dll", "GetSubMenu", , 取得一个弹出式菜单的句柄，它位于菜单中指定的位置
    .参数 hMenu, 整数型, , 菜单的句柄
    .参数 nPos, 整数型, , 条目在菜单中的位置。第一个条目的编号为0

.DLL命令 InsertMenu, 整数型, "user32.dll", "InsertMenuA", , 在菜单的指定位置处插入一个菜单条目，并根据需要将其他条目向下移动
    .参数 hmenu, 整数型, , 菜单句柄
    .参数 nposition, 整数型, , 定义了新条目插入点的一个现有菜单条目的标志符。
    .参数 wflags, 整数型, , 属性
    .参数 widnewitem, 整数型, , 菜单ID
    .参数 lpnewitem, 文本型, , 如果在wFlags参数中设置了MF_STRING标志，就代表要设置到菜单中的字串（String）。如设置的是MF_BITMAP标志，就代表一个Long型变量，其中包含了一个位图句柄

.DLL命令 TrackPopupMenu, 整数型, "user32.dll", "TrackPopupMenu", , 在屏幕的任意地方显示一个弹出式菜
    .参数 hMenu, 整数型, , 菜单句柄
    .参数 wFlags, 整数型, , 
    .参数 x, 整数型, , 
    .参数 y, 整数型, , 
    .参数 nReserved, 整数型, , 
    .参数 hwnd, 整数型, , 
    .参数 lprc, 整数型, , 

.DLL命令 GetMenuItemID, 整数型, "user32.dll", "GetMenuItemID", , 返回位于菜单中指定位置处的条目的菜单ID
    .参数 hMenu, 整数型, , 菜单的句柄
    .参数 nPos, 整数型, , 条目在菜单中的位置。第一个条目的编号是0

.DLL命令 DeleteMenu, 整数型, "user32.dll", "DeleteMenu", , 删除菜单
    .参数 hMenu, 整数型, , 菜单句柄
    .参数 nPosition, 整数型, , 欲删除菜单条目的标识符。
    .参数 wFlags, 整数型, , 

.DLL命令 GetKeyboardState, 整数型, "user32.dll", "GetKeyboardState", , 取得键盘上每个虚拟键当前的状态
    .参数 pbKeyState, 字节型, 传址 数组, 总共含256个条目的字节数组中的第一个项目。每个字节都会附带载入与虚拟键对应的状态。如开关键打开，则位0设为1（开关键包括CapsLock， NumLock， ScrollLock）；如某个键当时按下，则位7为1；如已经抬起，则为0

.DLL命令 GetMenuState, 整数型, "user32.dll", "GetMenuState", , 取得与指定菜单条目状态有关的信息
    .参数 hmenu, 整数型, , 菜单句柄
    .参数 wid, 整数型, , 欲检查的菜单条目的标识符。
    .参数 wflags, 整数型, , 常数MF_BYCOMMAND或MF_BYPOSITION，取决于wID参数的设置

.DLL命令 GetAsyncKeyState, 整数型, "user32.dll", "GetAsyncKeyState", , 判断函数调用时指定虚拟键的状态
    .参数 vKey, 整数型, , 欲测试的虚拟键的键码

.DLL命令 CallWindowProc, 整数型, "user32.dll", "CallWindowProcA", , 调用缺省的窗口过程来为应用程序没有处理的任何窗口消息提供缺省的处理
    .参数 lpPrevWndFunc, 子程序指针, , 函数指针
    .参数 hWnd, 整数型, , 窗口句柄
    .参数 Msg, 整数型, , 消息值
    .参数 wParam, 整数型, , 参数
    .参数 lParam, 整数型, , 参数

.DLL命令 SetWindowLong, 整数型, "user32.dll", "SetWindowLongA", , 在窗口结构中为指定的窗口设置信息
    .参数 hwnd, 整数型, , 窗口句柄
    .参数 nIndex, 整数型, , 欲设置的信息,GWL_WNDPROC(该窗口的窗口函数的地址,常数值-4)
    .参数 dwNewLong, 子程序指针, , 由nIndex指定的窗口信息的新值

.DLL命令 GetWindowLong, 子程序指针, "user32.dll", "GetWindowLongA", , 从指定窗口的结构中取得信息
    .参数 hwnd, 整数型, , 窗口句柄
    .参数 nIndex, 整数型, , 欲取回的信息,GWL_WNDPROC(该窗口的窗口函数的地址,常数值-4)

.DLL命令 _以符号选中, 整数型, "user32.dll", "CheckMenuRadioItem", , 成功返回非0，失败返回0
    .参数 菜单ID, 整数型, , 菜单ID
    .参数 开始菜单, 整数型, , 确定单选组的起始位置
    .参数 结束菜单, 整数型, , 确定单选组的结束位置
    .参数 选中菜单, 整数型, , 要以符号选中的菜单ID或位置
    .参数 方式, 整数型, , MF_BYPOSITION为开始菜单、结束菜单、选中菜单3个参数按位置计算，MF_BYCOMMAND是以ID计算

.DLL命令 GetMenuItemCount, 整数型, "user32.dll", "GetMenuItemCount", , 取子菜单数
    .参数 hMenu, 整数型, , 

.DLL命令 _创建一幅与设备场景兼容的位图, 整数型, "gdi32.dll", "CreateCompatibleBitmap", , 执行成功返回位图句柄，零表示失败
    .参数 设备场景句柄, 整数型, , hdc，设备场景句柄
    .参数 位图宽度, 整数型, , nWidth，位图宽度
    .参数 位图高度, 整数型, , nHeight，位图高度

.DLL命令 _创建与特定设备场景一致的内存设备场景, 整数型, "gdi32.dll", "CreateCompatibleDC", , 新设备场景句柄，若出错则为零
    .参数 源设备场景句柄, 整数型, , hdc，源设备场景句柄

.DLL命令 SelectObject, 整数型, "gdi32.dll", "SelectObject", , 选定对象
    .参数 hdc, 整数型, , DC句柄
    .参数 hObject, 整数型, , 对象句柄,一个画笔、位图、刷子、字体或区域的句柄

.DLL命令 BitBlt, 整数型, "gdi32.dll", "BitBlt", , 拷贝DC
    .参数 hDestDC, 整数型, , 目标DC
    .参数 x, 整数型, , 横坐标
    .参数 y, 整数型, , 纵坐标
    .参数 nWidth, 整数型, , 宽
    .参数 nHeight, 整数型, , 高
    .参数 hSrcDC, 整数型, , 源DC
    .参数 xSrc, 整数型, , 源宽
    .参数 ySrc, 整数型, , 源高
    .参数 dwRop, 整数型, , 光栅运算

.DLL命令 GetSysColorBrush, 整数型, "user32.dll", "GetSysColorBrush", , 为任何一种标准系统颜色取得一个刷子
    .参数 nIndex, 整数型, , 系统颜色索引，也即带有COLOR_前缀的某个常数。

.DLL命令 DeleteDC, 整数型, "gdi32.dll", "DeleteDC", , 删除专用设备场景或信息场景，释放所有相关窗口资源。
    .参数 hdc, 整数型, , 将要删除的设备场景

.DLL命令 DeleteObject, 整数型, "gdi32.dll", "DeleteObject", , 用这个函数删除GDI对象，比如画笔、刷子、字体、位图、区域以及调色板等等。对象使用的所有系统资源都会被释放
    .参数 hObject, 整数型, , 一个GDI对象的句柄

.DLL命令 ReleaseDC, 整数型, "user32.dll", "ReleaseDC", , 释放DC句柄
    .参数 hwnd, 整数型, , 要释放的设备场景相关的窗口句柄
    .参数 hdc, 整数型, , 要释放的设备场景句柄

.DLL命令 FillRect, 整数型, "user32.dll", "FillRect", , 填充矩形
    .参数 hdc, 整数型, , DC
    .参数 lpRect, RECT, , 区域
    .参数 hBrush, 整数型, , 刷子句柄

.DLL命令 CreateSolidBrush, 整数型, "gdi32.dll", "CreateSolidBrush", , 用纯色创建一个刷子
    .参数 crColor, 整数型, , 颜色值

.DLL命令 LoadImage, 整数型, "user32.dll", "LoadImageA", , 载入资源
    .参数 hInst, 整数型, , DLL或程序的实例句柄,0表示载入固有图片
    .参数 lpsz, 文本型, , 资源路径
    .参数 un1, 整数型, , 资源类型
    .参数 n1, 整数型, , 缩放宽高.0为默认宽高
    .参数 n2, 整数型, , 同上
    .参数 un2, 整数型, , 载入方式

.DLL命令 DrawState, 整数型, "user32.dll", "DrawStateA", , 这个函数可为一幅图象或绘图操作应用各式各样的效果
    .参数 hDC, 整数型, , 要在其中绘图的设备场景
    .参数 hBrush, 整数型, , 如状态为DSS_MONO（在un参数中设定），则指定一个刷子句柄
    .参数 lpDrawStateProc, 整数型, , 指向一个函数地址的指针。如图象类型为DST_COMPLEX，必须设置这个参数。对于DST_TEXT，则可设可不设
    .参数 lParam, 整数型, , 由图象的类型决定(如果为位图则提供位图句柄)
    .参数 wParam, 整数型, , 由图象的类型决定
    .参数 n1, 整数型, , 图象的水平位置
    .参数 n2, 整数型, , 图象的垂直位置
    .参数 n3, 整数型, , 图象的宽度。如图象类型为DST_COMPLEX，必须设置这个参数。而对于其他类型，则可以设为零。如为零，表示该参数在图象的基础上计算
    .参数 n4, 整数型, , 图象的高度。如图象类型为DST_COMPLEX，必须设置这个参数。而对于其他类型，则可以设为零。如为零，表示该参数在图象的基础上计算
    .参数 un, 整数型, , 图象类型和状态的一个组合。

.DLL命令 TransparentBlt, 逻辑型, "msimg32.dll", "TransparentBlt", , 透明背景
    .参数 hdc, 整数型, , 目标hDC
    .参数 x, 整数型, , 图像在目标DC中的位置及宽、高。
    .参数 y, 整数型, , 
    .参数 nWidth, 整数型, , 
    .参数 nHeight, 整数型, , 
    .参数 hSrcDC, 整数型, , 图像在源DC中的位置及宽、高。
    .参数 xSrc, 整数型, , 
    .参数 ySrc, 整数型, , 
    .参数 nSrcWidth, 整数型, , 
    .参数 nSrcHeight, 整数型, , 
    .参数 crTransparent, 整数型, , 指定的透明色

.DLL命令 ShellExecute, 整数型, "shell32.dll", "ShellExecuteA", , 用默认程序打开一个文件
    .参数 hwnd, 整数型, , 指定一个窗口的句柄
    .参数 lpOperation, 文本型, , 指定字串“Open”来打开lpFlie文档；或指定“Print”来打印它。
    .参数 lpFile, 文本型, , 想用关联的程序打印或打开的一个程序名或文件名
    .参数 lpParameters, 文本型, , 如lpFile是一个可执行文件，则这个字串包含了传递给执行程序的参数。如lpFile引用的是一个文档文件，或者不需要使用参数，设为“”
    .参数 lpDirectory, 文本型, , 想使用的默认路径完整路径
    .参数 nShowCmd, 整数型, , 定义了如何显示启动程序的常数值。

.DLL命令 GetLastError, 整数型, "kernel32.dll", "GetLastError", , 取错误号

.DLL命令 FormatMessage, 整数型, "kernel32.dll", "FormatMessageA", , 格式化消息
    .参数 dwFlags, 整数型, , 
    .参数 lpSource, 整数型, , 
    .参数 dwMessageId, 整数型, , 
    .参数 dwLanguageId, 整数型, , 
    .参数 lpBuffer, 文本型, , 
    .参数 nSize, 整数型, , 
    .参数 Arguments, 整数型, , 

.窗口程序集 启动窗口程序集, , , 

.程序集变量 窗口DC, 整数型, , , 
.程序集变量 窗口句柄, 整数型, , , 
.程序集变量 画板句柄, 整数型, , , 
.程序集变量 图形按钮句柄, 整数型, , , 
.程序集变量 图片路径组, 文本型, , "0", 图片目录及子目录的图片路径组
.程序集变量 项目ID组, 整数型, , "0", 树型框项目ID组
.程序集变量 目录路径组, 文本型, , "0", 图片目录所有子目录路径组
.程序集变量 图片号, 整数型, , , 
.程序集变量 当前图片路径, 文本型, , , 写入数据库时的相对路径
.程序集变量 启动窗口返回值, 子程序指针, , , 
.程序集变量 画板返回值, 子程序指针, , , 
.程序集变量 启动时间, 整数型, , , 
.程序集变量 当前场景序号, 整数型, , , 
.程序集变量 是否已保存, 逻辑型, , , 记录当前场景修改后是否保存
.程序集变量 内存DC, 整数型, , , 用于处理重画事件
.程序集变量 内存DC2, 整数型, , , 用于处理透明背景
.程序集变量 画板DC, 整数型, , , 
.程序集变量 图形按钮DC, 整数型, , , 
.程序集变量 选中图片信息组, 选中图片信息, , "0", 
.程序集变量 被复制图片信息组, 选中图片信息, , "0", 
.程序集变量 画板按下横位置, 整数型, , , 
.程序集变量 画板按下纵位置, 整数型, , , 
.程序集变量 移动区域组, RECT, , "0", 欲移动图片的位置信息
.子程序 __启动窗口_创建完毕, 空白型, , 
.局部变量 位图句柄, 整数型, , , 

赋值 (启动时间, 32767)
赋值 (运行目录, 取运行目录 ())
.如果真 (不等于 (取文本右边 (运行目录, 1), “\”))
    赋值 (运行目录, 相加 (运行目录, “\”))
.如果真结束
写到文件 (相加 (运行目录, “编辑器说明.txt”), #说明)
赋值 (.初始目录, 相加 (运行目录, #数据路径, #数据库路径))
赋值 (.初始目录, 相加 (运行目录, #数据路径, #数据库路径))
赋值 (画板句柄, 取窗口句柄 ())
赋值 (窗口句柄, _启动窗口.取窗口句柄 ())
赋值 (窗口DC, GetDC (窗口句柄))
赋值 (画板DC, GetDC (画板句柄))
赋值 (图形按钮句柄, 取窗口句柄 ())
赋值 (图形按钮DC, GetDC (图形按钮句柄))
赋值 (图形按钮句柄, 取窗口句柄 ())

初始化临时库 ()

刷新类型 ()

初始树型框 ()

赋值 (当前场景序号, 1)
赋值 (_启动窗口., 相加 (“超级玛利地图编辑器 - ”, 到文本 (原数据库路径), “[场景：”, 到文本 (当前场景序号), “]”))


赋值 (内存DC, _创建与特定设备场景一致的内存设备场景 (画板DC))
赋值 (内存DC2, _创建与特定设备场景一致的内存设备场景 (画板DC))
赋值 (位图句柄, _创建一幅与设备场景兼容的位图 (画板DC, 800, 600))
SelectObject (内存DC, 位图句柄)
DeleteObject (位图句柄)
赋值 (位图句柄, _创建一幅与设备场景兼容的位图 (画板DC, 800, 600))
SelectObject (内存DC2, 位图句柄)
DeleteObject (位图句柄)

赋值 (启动窗口返回值, GetWindowLong (窗口句柄, -4))
SetWindowLong (窗口句柄, -4, &启动窗口回调子程序)
赋值 (画板返回值, GetWindowLong (画板句柄, -4))
SetWindowLong (画板句柄, -4, &画板回调子程序)

读临时数据库 ()
赋值 (是否已保存, 真)

.子程序 初始化临时库, 空白型, , 
.局部变量 字段信息, 字段信息, , "9", 

.如果真 (等于 (是否已打开 (相加 (运行目录, #数据路径, #临时数据库)), 真))
    关闭 (相加 (运行目录, #数据路径, #临时数据库))
    .如果真 (等于 (文件是否存在 (相加 (运行目录, #数据路径, #临时数据库)), 真))
        删除文件 (相加 (运行目录, #数据路径, #临时数据库))
    .如果真结束
    
.如果真结束
赋值 (字段信息 [1].名称, “前景序号”)
赋值 (字段信息 [1].类型, #整数型)
赋值 (字段信息 [2].名称, “文件名”)
赋值 (字段信息 [2].类型, #文本型)
赋值 (字段信息 [2].最大文本长度, 50)
赋值 (字段信息 [3].名称, “类型”)
赋值 (字段信息 [3].类型, #整数型)
赋值 (字段信息 [4].名称, “横向位置”)
赋值 (字段信息 [4].类型, #整数型)
赋值 (字段信息 [5].名称, “纵向位置”)
赋值 (字段信息 [5].类型, #整数型)
赋值 (字段信息 [6].名称, “块宽”)
赋值 (字段信息 [6].类型, #整数型)
赋值 (字段信息 [7].名称, “块长”)
赋值 (字段信息 [7].类型, #整数型)
赋值 (字段信息 [8].名称, “块数”)
赋值 (字段信息 [8].类型, #整数型)
赋值 (字段信息 [9].名称, “物品序号”)
赋值 (字段信息 [9].类型, #整数型)
.如果 (等于 (创建 (相加 (运行目录, #数据路径, #临时数据库), 字段信息), 真))
    打开 (相加 (运行目录, #数据路径, #临时数据库), , , #无限制, , , )
.否则
    信息框 (“创建数据库时出错。”, #错误图标, “Error”)
.如果结束


.子程序 _图形按钮_被单击, 空白型, , 
.局部变量 主菜单句柄, 整数型, , , 
.局部变量 子菜单句柄, 整数型, , , 
.局部变量 图形按钮区域, RECT, , , 
.局部变量 按键状态, 整数型, , , 按下时Ctrl键状态
.局部变量 记次变量, 整数型, , , 

赋值 (是否已保存, 假)
赋值 (主菜单句柄, GetMenu (窗口句柄))
赋值 (子菜单句柄, GetSubMenu (主菜单句柄, 3))
GetWindowRect (取窗口句柄 (), 图形按钮区域)
赋值 (按键状态, GetAsyncKeyState (#VK_CONTROL))
置当前库 (相加 (运行目录, #数据路径, #临时数据库))
到尾记录 ()
加空记录 ()

.如果 (等于 (位与 (GetMenuState (子菜单句柄, 2, 1024), #MF_CHECKED), #MF_CHECKED))
    TransparentBlt (内存DC, 取画板鼠标水平位置 (), 取画板鼠标垂直位置 (), .宽度, .高度, 图形按钮DC, 0, 0, .宽度, .高度, #品红)
    写 (“横向位置”, 取画板鼠标水平位置 ())
    写 (“类型”, 2)
.否则
    写 (“横向位置”, 0)
    写 (“类型”, 1)
    .计次循环首 (相加 (整除 (800, .宽度), 1), 记次变量)
        TransparentBlt (内存DC, 相乘 (.宽度, 相减 (记次变量, 1)), 取画板鼠标垂直位置 (), .宽度, .高度, 图形按钮DC, 0, 0, .宽度, .高度, #品红)
        
    .计次循环尾 ()
    
.如果结束

写 (“前景序号”, 当前场景序号)
写 (“文件名”, 当前图片路径)

写 (“纵向位置”, 取画板鼠标垂直位置 ())
写 (“块宽”, .宽度)
写 (“块长”, .高度)
.计次循环首 (相减 (GetMenuItemCount (子菜单句柄), 5), 记次变量)
    .如果真 (等于 (位与 (GetMenuState (子菜单句柄, 相加 (4, 记次变量), 1024), #MF_CHECKED), #MF_CHECKED))
        写 (“物品序号”, 相减 (GetMenuItemID (子菜单句柄, 相加 (4, 记次变量)), 启动时间))
        跳出循环 ()
    .如果真结束
    
.计次循环尾 ()
BitBlt (画板DC, 0, 0, 800, 600, 内存DC, 0, 0, #SRCCOPY)
.如果真 (不等于 (按键状态, -32767))
    赋值 (.可视, 假)
    DeleteObject (图片号)
.如果真结束




.子程序 __启动窗口_尺寸被改变, 空白型, , 
.局部变量 舞台宽度, 整数型, , , 
.局部变量 舞台高度, 整数型, , , 

赋值 (.高度, 相加 (_启动窗口.取用户区高度 (), 3))
赋值 (.宽度, .)
赋值 (.左边, 相加 (., .))
赋值 (.宽度, 相减 (_启动窗口.取用户区宽度 (), .左边))
赋值 (.顶边, 相减 (_启动窗口.取用户区高度 (), .高度))
赋值 (.高度, .顶边)
赋值 (.左边, 相减 (_启动窗口.取用户区宽度 (), .宽度))
赋值 (., _启动窗口.取用户区高度 ())
赋值 (舞台宽度, 取舞台宽度 ())
赋值 (舞台高度, 取舞台高度 ())
.如果 (大于 (.宽度, 舞台宽度))
    赋值 (.最大位置, 相减 (.宽度, 舞台宽度))
.否则
    赋值 (.最大位置, 1)
    赋值 (.位置, 1)
.如果结束
.如果 (大于 (.高度, 舞台高度))
    赋值 (.最大位置, 相减 (.高度, 舞台高度))
.否则
    赋值 (.最大位置, 1)
    赋值 (.位置, 1)
.如果结束
赋值 (.位置, 0)
赋值 (.位置, 0)
_横向滚动条_位置被改变 ()
_纵向滚动条_位置被改变 ()

.子程序 取舞台左边, 整数型, , 窗口坐标
返回 (相加 (.左边, .宽度))

.子程序 取舞台顶边, 整数型, , 窗口坐标
返回 (0)

.子程序 取舞台宽度, 整数型, , 返回宽度
返回 (相减 (_启动窗口.取用户区宽度 (), .宽度, .宽度))

.子程序 取舞台高度, 整数型, , 返回高度
返回 (相减 (_启动窗口.取用户区高度 (), .高度))

.子程序 _横向滚动条_位置被改变, 空白型, , 
赋值 (.左边, 相减 (相加 (., .), .位置))


.子程序 _纵向滚动条_位置被改变, 空白型, , 
赋值 (.顶边, 负 (.位置))


.子程序 移动图形按钮, 空白型, , 
.局部变量 图形按钮左边, 整数型, , , 
.局部变量 图形按钮顶边, 整数型, , , 

赋值 (.可视, 真)
.判断循环首 (等于 (.可视, 真))
    赋值 (图形按钮左边, 相减 (取窗口鼠标水平位置 (), 整除 (.宽度, 2)))
    赋值 (图形按钮顶边, 相减 (取窗口鼠标垂直位置 (), 整除 (.高度, 2)))
    
    .如果真 (小于 (图形按钮左边, .左边)) ' 判断左边是否超出
        赋值 (图形按钮左边, .左边)
    .如果真结束
    
    .如果真 (小于 (图形按钮顶边, .顶边)) ' 判断顶边是否超出
        赋值 (图形按钮顶边, .顶边)
    .如果真结束
    
    .如果真 (大于 (相加 (图形按钮左边, .宽度), 相加 (.左边, .宽度))) ' 判断右边是否超出
        赋值 (图形按钮左边, 相减 (相加 (.左边, .宽度), .宽度))
    .如果真结束
    
    .如果真 (大于 (相加 (图形按钮顶边, .高度), 相加 (.顶边, .高度))) ' 判断下边是否超出
        赋值 (图形按钮顶边, 相减 (相加 (.顶边, .高度), .高度))
    .如果真结束
    
    图形按钮左边.移动 (图形按钮顶边, , )
    延时 (1)
.判断循环尾 ()


.子程序 取画板鼠标水平位置, 整数型, , 返回在画板内鼠标的位置(位置相对与画板)
.局部变量 画板区域, RECT, , , 
.局部变量 图形按钮区域, RECT, , , 

GetWindowRect (画板句柄, 画板区域)
GetWindowRect (图形按钮句柄, 图形按钮区域)
返回 (相减 (图形按钮区域.Left, 画板区域.Left))

.子程序 取画板鼠标垂直位置, 整数型, , 返回在画板内鼠标的位置(位置相对与画板)
.局部变量 画板区域, RECT, , , 
.局部变量 图形按钮区域, RECT, , , 

GetWindowRect (画板句柄, 画板区域)
GetWindowRect (图形按钮句柄, 图形按钮区域)
返回 (相减 (图形按钮区域.Top, 画板区域.Top))

.子程序 取窗口鼠标水平位置, 整数型, , 返回启动窗口内鼠标的位置(位置相对与窗口)
.局部变量 点坐标, POINT, , , 

ClientToScreen (窗口句柄, 点坐标)
返回 (相减 (取鼠标水平位置 (), 点坐标.x))

.子程序 取窗口鼠标垂直位置, 整数型, , 返回启动窗口内鼠标的位置(位置相对与窗口)
.局部变量 点坐标, POINT, , , 

ClientToScreen (窗口句柄, 点坐标)
返回 (相减 (取鼠标垂直位置 (), 点坐标.y))

.子程序 __启动窗口_可否被关闭, 逻辑型, , 
.局部变量 操作, 整数型, , , 信息框操作

.如果真 (等于 (是否已保存, 假))
    赋值 (操作, 信息框 (“是否要保存更改？”, 相加 (#询问图标, #取消是否钮), “是否保存”))
    .如果真 (等于 (操作, #取消钮))
        返回 (假)
    .如果真结束
    .如果真 (等于 (操作, #是钮))
        _保存_被选择 ()
    .如果真结束
    
.如果真结束
全部关闭 ()
.如果真 (等于 (文件是否存在 (相加 (运行目录, #数据路径, #临时数据库)), 真))
    删除文件 (相加 (运行目录, #数据路径, #临时数据库))
.如果真结束
赋值 (.可视, 假)
卸载图片 (图片号)
ReleaseDC (窗口句柄, 窗口DC)
ReleaseDC (画板句柄, 画板DC)
DeleteDC (内存DC)
DeleteDC (内存DC2)

.子程序 _图形按钮_鼠标右键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

DeleteObject (图片号)
赋值 (.可视, 假)

.子程序 GetBMPInfo, BITMAPINFO, , 获取位图文件信息
.参数 psPath, 文本型, , 

.局部变量 文件头, BITMAPFILEHEADER, , , 文件信息
.局部变量 信息头, BITMAPINFOHEADER, , , BMP信息
.局部变量 图片宽高, BITMAPINFO, , , 
.局部变量 文件句柄, 整数型, , , 
.局部变量 图片文件头, 字节集, , , 包含文件头和BMP头信息

赋值 (文件句柄, 打开文件 (psPath, #读入, #无限制))
赋值 (图片文件头, 读入字节集 (文件句柄, 56))
关闭文件 (文件句柄)
 ' 读取文件头信息
赋值 (文件头.bfType, 取字节集数据 (取字节集左边 (图片文件头, 2), #短整数型))
赋值 (文件头.bfSize, 取字节集数据 (取字节集中间 (图片文件头, 3, 4), #整数型))
赋值 (文件头.bfReserved1, 取字节集数据 (取字节集中间 (图片文件头, 7, 2), #短整数型))
赋值 (文件头.bfReserved2, 取字节集数据 (取字节集中间 (图片文件头, 9, 2), #短整数型))
赋值 (文件头.bfOffBits, 取字节集数据 (取字节集中间 (图片文件头, 11, 4), #整数型))

 ' 读取图片信息
赋值 (信息头.biSize, 取字节集数据 (取字节集中间 (图片文件头, 15, 4), #整数型))
赋值 (信息头.biWidth, 取字节集数据 (取字节集中间 (图片文件头, 19, 4), #整数型))
赋值 (信息头.biHeight, 取字节集数据 (取字节集中间 (图片文件头, 23, 4), #整数型))
赋值 (信息头.biPlanes, 取字节集数据 (取字节集中间 (图片文件头, 27, 2), #整数型))
赋值 (信息头.biBitCount, 取字节集数据 (取字节集中间 (图片文件头, 29, 2), #整数型))
赋值 (信息头.biCompression, 取字节集数据 (取字节集中间 (图片文件头, 33, 4), #整数型))
赋值 (信息头.biSizeImage, 取字节集数据 (取字节集中间 (图片文件头, 37, 4), #整数型))
赋值 (信息头.biXPelsPerMeter, 取字节集数据 (取字节集中间 (图片文件头, 41, 4), #整数型))
赋值 (信息头.biYPelsPerMeter, 取字节集数据 (取字节集中间 (图片文件头, 45, 4), #整数型))
赋值 (信息头.biClrUsed, 取字节集数据 (取字节集中间 (图片文件头, 49, 4), #整数型))
赋值 (信息头.biClrImportant, 取字节集数据 (取字节集中间 (图片文件头, 53, 4), #整数型))

 ' 返回宽高
赋值 (图片宽高.Width, 信息头.biWidth)
赋值 (图片宽高.Height, 信息头.biHeight)
返回 (图片宽高)

.子程序 初始树型框, 空白型, , 
.局部变量 目录名称, 文本型, , , 
.局部变量 上次目录数, 整数型, , , 
.局部变量 记次变量, 整数型, , , 
.局部变量 是否继续循环, 逻辑型, , , 
.局部变量 记录器, 整数型, , , 
.局部变量 项目文本, 文本型, , "0", 
.局部变量 树型框项目, 字节集, , , 树型框项目数据
.局部变量 项目组, 字节集, , "0", 每个成员对应一个项目
.局部变量 项目索引, 整数型, , , 
.局部变量 项目数, 整数型, , , 
.局部变量 记次变量2, 整数型, , , 
.局部变量 最后项目, 字节集, , , 


清除数组 (项目ID组)
清除数组 (目录路径组)
清除数组 (图片路径组)
加入成员 (目录路径组, #图片路径)
 ' 枚举子目录
.循环判断首 ()
    赋值 (记录器, 取数组成员数 (目录路径组))
    .计次循环首 (相减 (取数组成员数 (目录路径组), 上次目录数), 记次变量)
        赋值 (目录名称, 寻找文件 (相加 (运行目录, #数据路径, 目录路径组 [相加 (上次目录数, 记次变量)], “*.*”), #子目录))
        .判断循环首 (不等于 (目录名称, “”))
            .如果真 (并且 (不等于 (目录名称, “.”), 不等于 (目录名称, “..”), 不等于 (目录名称, “”)))
                加入成员 (目录路径组, 相加 (目录路径组 [相加 (上次目录数, 记次变量)], 目录名称, “\”))
                加入成员 (项目ID组, 相加 (取数组成员数 (项目ID组), 1))
            .如果真结束
            
            赋值 (目录名称, 寻找文件 (#子目录))
        .判断循环尾 ()
    .计次循环尾 ()
    .如果 (大于 (取数组成员数 (目录路径组), 上次目录数))
        赋值 (是否继续循环, 真)
        赋值 (上次目录数, 记录器)
    .否则
        赋值 (是否继续循环, 假)
    .如果结束
    
.循环判断尾 (是否继续循环)
 ' 枚举BMP图片
.计次循环首 (取数组成员数 (目录路径组), 记次变量)
    赋值 (目录名称, 寻找文件 (相加 (运行目录, #数据路径, 目录路径组 [记次变量], “*.bmp”), 相加 (#只读文件, #隐藏文件, #系统文件, #存档文件)))
    .判断循环首 (不等于 (目录名称, “”))
        .如果真 (并且 (不等于 (目录名称, “.”), 不等于 (目录名称, “..”), 不等于 (目录名称, “”)))
            加入成员 (图片路径组, 相加 (目录路径组 [记次变量], 目录名称))
            加入成员 (项目ID组, 相加 (取数组成员数 (项目ID组), 1))
        .如果真结束
        
        赋值 (目录名称, 寻找文件 (相加 (#只读文件, #隐藏文件, #系统文件, #存档文件)))
    .判断循环尾 ()
.计次循环尾 ()


 ' 树型框项目属性格式：
 ' 第一个字节到第一个{0}为项目文本
 ' 然后是4个字节(整数型)的正常图片索引值
 ' 4个字节(整数型)选中图片索引值
 ' 4个字节(整数型)项目数值
 ' 4个字节(整数型)的项目展开状态 0、缩进,1、加粗缩进,2、展开,3、加粗展开
 ' 4个字节(整数型)项目缩进层次,从0开始


 ' 将目录加入树型框数据
.计次循环首 (取数组成员数 (目录路径组), 记次变量)
    赋值 (项目文本, 分割文本 (目录路径组 [记次变量], “\”, ))
    赋值 (项目索引, 取索引 (目录路径组 [记次变量], 项目组))
    .如果 (或者 (等于 (项目索引, 1), 等于 (项目索引, 取数组成员数 (项目组)))) ' 根目录
        加入成员 (项目组, 到字节集 ({  }))
        赋值 (项目索引, 取数组成员数 (项目组))
    .否则
        插入成员 (项目组, 相加 (项目索引, 1), 到字节集 ({  }))
        赋值 (项目索引, 相加 (项目索引, 1))
        
    .如果结束
    赋值 (项目组 [项目索引], 相加 (到字节集 (项目文本 [取数组成员数 (项目文本)]), { 0 })) ' 项目文本和结束标记
    赋值 (项目组 [项目索引], 相加 (项目组 [项目索引], 到字节集 (2), 到字节集 (0))) ' 正常图片和选中图片索引
    赋值 (项目组 [项目索引], 相加 (项目组 [项目索引], 到字节集 (项目ID组 [记次变量]))) ' 项目数值
    赋值 (项目组 [项目索引], 相加 (项目组 [项目索引], 到字节集 (0))) ' 项目状态
    赋值 (项目组 [项目索引], 相加 (项目组 [项目索引], 到字节集 (取整 (取数组成员数 (项目文本))))) ' 缩进层次
    
.计次循环尾 ()


 ' 将图片加入树型框数据

.计次循环首 (取数组成员数 (图片路径组), 记次变量)
    赋值 (项目文本, 分割文本 (图片路径组 [记次变量], “\”, ))
    赋值 (项目索引, 取索引 (图片路径组 [记次变量], 项目组))
    .如果 (或者 (等于 (项目索引, 1), 等于 (项目索引, 取数组成员数 (项目组)))) ' 根目录
        加入成员 (项目组, 到字节集 ({  }))
        赋值 (项目索引, 取数组成员数 (项目组))
    .否则
        插入成员 (项目组, 相加 (项目索引, 1), 到字节集 ({  }))
        赋值 (项目索引, 相加 (项目索引, 1))
    .如果结束
    赋值 (项目组 [项目索引], 相加 (到字节集 (项目文本 [取数组成员数 (项目文本)]), { 0 })) ' 项目文本和结束标记
    赋值 (项目组 [项目索引], 相加 (项目组 [项目索引], 到字节集 (1), 到字节集 (1))) ' 正常图片和选中图片索引
    赋值 (项目组 [项目索引], 相加 (项目组 [项目索引], 到字节集 (项目ID组 [相减 (相加 (取数组成员数 (目录路径组), 记次变量), 1)]))) ' 项目数值
    赋值 (项目组 [项目索引], 相加 (项目组 [项目索引], 到字节集 (0))) ' 项目状态
    赋值 (项目组 [项目索引], 相加 (项目组 [项目索引], 到字节集 (取整 (取数组成员数 (项目文本))))) ' 缩进层次
    
.计次循环尾 ()
赋值 (项目数, 取数组成员数 (项目组))
.计次循环首 (取数组成员数 (项目组), 记次变量)
    赋值 (树型框项目, 相加 (树型框项目, 项目组 [记次变量]))
.计次循环尾 ()
赋值 (.图标, 树型框项目)
0.扩展 ()
赋值 (.最大化按钮, 0)

.子程序 取索引, 整数型, , 返回新项目索引
.参数 路径名, 文本型, , 
.参数 项目组, 字节集, 数组, 

.局部变量 记次变量, 整数型, , , 
.局部变量 目录ID, 整数型, , , 
.局部变量 父路径组, 文本型, , "0", 
.局部变量 父路径, 文本型, , , 
.局部变量 项目ID, 整数型, , , 


.如果真 (等于 (到小写 (路径名), #图片路径))
    返回 (1)
.如果真结束
赋值 (父路径组, 分割文本 (路径名, “\”, ))
.计次循环首 (相减 (取数组成员数 (父路径组), 1), 记次变量)
    赋值 (父路径, 相加 (父路径, 父路径组 [记次变量], “\”))
.计次循环尾 ()

.计次循环首 (取数组成员数 (项目组), 记次变量)
    赋值 (项目ID, 取字节集数据 (取字节集中间 (项目组 [记次变量], 相减 (取字节集长度 (项目组 [记次变量]), 11), 4), #整数型))
    .如果真 (小于或等于 (项目ID, 取数组成员数 (目录路径组)))
        .如果真 (等于 (到大写 (目录路径组 [项目ID]), 到大写 (父路径)))
            返回 (记次变量)
        .如果真结束
        
    .如果真结束
    
.计次循环尾 ()
返回 (1)


.子程序 _复制_被选择, 空白型, , 
复制数组 (被复制图片信息组, 选中图片信息组)
.如果 (大于 (取数组成员数 (被复制图片信息组), 0))
    赋值 (.禁止, 假)
.否则
    赋值 (.禁止, 真)
.如果结束
_刷新类型_被选择 ()

.子程序 _资源树型框_项目被选择, 空白型, , 
.参数 选择方式, 整数型, , 

.局部变量 图片路径, 文本型, , , 
.局部变量 图片宽高, BITMAPINFO, , , 

清除数组 (选中图片信息组)
.如果真 (等于 (到小写 (取文本右边 (.取项目文本 (.最大化按钮), 4)), “.bmp”))
    赋值 (.禁止, 真)
     ' 图片框1.可视 ＝ 假
    DeleteObject (图片号)
    赋值 (图片路径, 相加 (运行目录, #数据路径, 图片路径组 [相加 (相减 (.取项目数值 (.最大化按钮), 取数组成员数 (目录路径组)), 1)]))
    赋值 (当前图片路径, 图片路径组 [相加 (相减 (.取项目数值 (.最大化按钮), 取数组成员数 (目录路径组)), 1)])
    赋值 (图片号, LoadImage (0, 图片路径, #IMAGE_BITMAP, 0, 0, #LR_LOADFROMFILE))
    赋值 (图片宽高, GetBMPInfo (图片路径))
    赋值 (.宽度, 图片宽高.Width)
    赋值 (.高度, 图片宽高.Height)
    赋值 (.正常图片, 读入文件 (图片路径))
    _刷新类型_被选择 ()
    未知支持库函数_0 (&移动图形按钮, )
    
.如果真结束


.子程序 读临时数据库, 空白型, , 一个场景的数据
.局部变量 记次变量, 整数型, , , 
.局部变量 图片句柄, 整数型, , , 
.局部变量 刷子句柄, 整数型, , , 
.局部变量 矩形区域, RECT, , , 
.局部变量 图片宽高, BITMAPINFO, , , 
.局部变量 现行图片路径, 文本型, , , 

置当前库 (相加 (运行目录, #数据路径, #临时数据库))
到首记录 ()
赋值 (刷子句柄, CreateSolidBrush (#品红))
赋值 (矩形区域.Top, 0)
赋值 (矩形区域.Left, 0)
赋值 (矩形区域.Right, 800)
赋值 (矩形区域.Bottom, 600)
FillRect (内存DC2, 矩形区域, 刷子句柄)
赋值 (刷子句柄, CreateSolidBrush (#黑色))
赋值 (矩形区域.Top, 0)
赋值 (矩形区域.Left, 0)
赋值 (矩形区域.Right, 800)
赋值 (矩形区域.Bottom, 600)
FillRect (内存DC, 矩形区域, 刷子句柄)

DeleteObject (刷子句柄)
.计次循环首 (取记录数 (), 记次变量)
    赋值 (现行图片路径, 相加 (运行目录, #数据路径, 读 (“文件名”)))
    赋值 (图片句柄, LoadImage (0, 现行图片路径, #IMAGE_BITMAP, 0, 0, #LR_LOADFROMFILE))
    赋值 (图片宽高, GetBMPInfo (现行图片路径))
    .判断开始 (等于 (读 (“类型”), 2))
        DrawState (内存DC2, 0, 0, 图片句柄, 0, 读 (“横向位置”), 读 (“纵向位置”), 0, 0, 4)
    .判断 (等于 (读 (“类型”), 1))
        .计次循环首 (相加 (整除 (800, 图片宽高.Width), 1), 记次变量)
            DrawState (内存DC2, 0, 0, 图片句柄, 0, 相乘 (图片宽高.Width, 相减 (记次变量, 1)), 读 (“纵向位置”), 0, 0, 4)
        .计次循环尾 ()
    .默认
        .如果真 (等于 (读 (“类型”), 3))
            .计次循环首 (读 (“块数”), 记次变量)
                DrawState (内存DC2, 0, 0, 图片句柄, 0, 相加 (读 (“横向位置”), 相乘 (图片宽高.Width, 相减 (记次变量, 1))), 读 (“纵向位置”), 0, 0, 4)
            .计次循环尾 ()
            
        .如果真结束
        
    .判断结束
    
    TransparentBlt (内存DC, 0, 0, 800, 600, 内存DC2, 0, 0, 800, 600, #品红)
    DeleteObject (图片句柄)
    跳过 ()
.计次循环尾 ()


.子程序 读取原库, 空白型, , 
.参数 场景序号, 整数型, , 

.局部变量 记次变量, 整数型, , , 

初始化临时库 ()
.如果真 (等于 (是否已打开 (原数据库路径), 假))
    打开 (原数据库路径, , , #无限制, , , )
.如果真结束
置当前库 (原数据库路径)
到首记录 ()
.判断循环首 (等于 (查找 (等于 (读 (“前景序号”), 场景序号)), 真))
    置当前库 (相加 (运行目录, #数据路径, #临时数据库))
    到尾记录 ()
    加空记录 ()
    置当前库 (原数据库路径)
    .计次循环首 (取字段数 (), 记次变量)
        写字段 (记次变量, 相加 (运行目录, #数据路径, #临时数据库), 读 (记次变量))
    .计次循环尾 ()
    跳过 ()
.判断循环尾 ()


.子程序 _退出_被选择, 空白型, , 
__启动窗口_可否被关闭 ()
结束 ()

.子程序 _刷新类型_被选择, 空白型, , 
刷新类型 ()

.子程序 刷新类型, 空白型, , 
.局部变量 主菜单句柄, 整数型, , , 
.局部变量 子菜单句柄, 整数型, , , 
.局部变量 记次变量, 整数型, , , 
.局部变量 错误文本, 文本型, , , 

赋值 (主菜单句柄, GetMenu (窗口句柄))
赋值 (子菜单句柄, GetSubMenu (主菜单句柄, 3))

.计次循环首 (相减 (GetMenuItemCount (子菜单句柄), 5), )
    DeleteMenu (子菜单句柄, 5, 1024)
    
.计次循环尾 ()
.如果真 (等于 (是否已打开 (相加 (运行目录, #数据路径, #类别数据库)), 假))
    打开 (相加 (运行目录, #数据路径, #类别数据库), , , #无限制, , , )
.如果真结束
置当前库 (相加 (运行目录, #数据路径, #类别数据库))
到首记录 ()
.计次循环首 (取记录数 (), 记次变量)
    InsertMenu (子菜单句柄, -1, 1024, 相加 (启动时间, 读 (“序号”)), 读 (“名称”))
    跳过 ()
.计次循环尾 ()
_以符号选中 (子菜单句柄, 2, 3, 2, 1024)
.如果真 (大于 (记次变量, 1))
    _以符号选中 (子菜单句柄, 5, 相减 (记次变量, 1), 5, 1024)
    
.如果真结束
关闭 (相加 (运行目录, #数据路径, #类别数据库))

.子程序 启动窗口回调子程序, 整数型, , 
.参数 hwnd, 整数型, , 
.参数 message, 整数型, , 
.参数 wParam, 整数型, , 
.参数 lParam, 整数型, , 

.局部变量 主菜单句柄, 整数型, , , 
.局部变量 子菜单句柄, 整数型, , , 
.局部变量 记次变量, 整数型, , , 


.如果真 (并且 (等于 (message, #WM_COMMAND), 大于或等于 (wParam, 启动时间)))
    CallWindowProc (启动窗口返回值, hwnd, message, wParam, lParam)
    赋值 (主菜单句柄, GetMenu (窗口句柄))
    赋值 (子菜单句柄, GetSubMenu (主菜单句柄, 3))
    
    .计次循环首 (相减 (GetMenuItemCount (子菜单句柄), 5), 记次变量)
        .如果真 (等于 (GetMenuItemID (子菜单句柄, 相加 (4, 记次变量)), wParam))
            _以符号选中 (子菜单句柄, 5, 相减 (GetMenuItemCount (子菜单句柄), 1), 相加 (4, 记次变量), 1024)
            跳出循环 ()
            返回 (0)
        .如果真结束
        
    .计次循环尾 ()
.如果真结束
返回 (CallWindowProc (启动窗口返回值, hwnd, message, wParam, lParam))


.子程序 _保存_被选择, 空白型, , 
.局部变量 记次变量, 整数型, , , 
.局部变量 记次变量2, 整数型, , , 

.如果真 (等于 (原数据库路径, “”))
    赋值 (.文件名, “frontgroud”)
    赋值 (.标题, “保存...”)
    .如果 (等于 (打开 (), 真))
        复制文件 (相加 (运行目录, #数据路径, #临时数据库), .文件名)
        赋值 (原数据库路径, .文件名)
        打开 (原数据库路径, , , #无限制, , , )
    .否则
        返回 ()
    .如果结束
    
    
.如果真结束
置当前库 (原数据库路径)
到首记录 ()
删除 (等于 (读 (“前景序号”), 当前场景序号))
彻底删除 ()

置当前库 (相加 (运行目录, #数据路径, #临时数据库))
.计次循环首 (取记录数 (), 记次变量)
    置当前库 (原数据库路径)
    到尾记录 ()
    加空记录 ()
    置当前库 (相加 (运行目录, #数据路径, #临时数据库))
    跳到 (记次变量)
    .计次循环首 (取字段数 (), 记次变量2)
        写字段 (记次变量2, 原数据库路径, 读 (记次变量2))
    .计次循环尾 ()
.计次循环尾 ()
赋值 (是否已保存, 真)
赋值 (_启动窗口., 相加 (“超级玛利地图编辑器 - ”, 到文本 (原数据库路径), “[场景：”, 到文本 (当前场景序号), “]”))

.子程序 _单一_被选择, 空白型, , 
.局部变量 主菜单句柄, 整数型, , , 
.局部变量 子菜单句柄, 整数型, , , 

赋值 (主菜单句柄, GetMenu (窗口句柄))
赋值 (子菜单句柄, GetSubMenu (主菜单句柄, 3))

_以符号选中 (子菜单句柄, 2, 3, 2, 1024)



.子程序 _全屏_被选择, 空白型, , 
.局部变量 主菜单句柄, 整数型, , , 
.局部变量 子菜单句柄, 整数型, , , 

赋值 (主菜单句柄, GetMenu (窗口句柄))
赋值 (子菜单句柄, GetSubMenu (主菜单句柄, 3))

_以符号选中 (子菜单句柄, 2, 3, 3, 1024)

.子程序 _第一场景_被选择, 空白型, , 
.如果真 (不等于 (当前场景序号, 1))
    .如果真 (等于 (是否已保存, 假))
        _保存_被选择 ()
    .如果真结束
    赋值 (当前场景序号, 1)
    赋值 (_启动窗口., 相加 (“超级玛利地图编辑器 - ”, 到文本 (原数据库路径), “[场景：”, 到文本 (当前场景序号), “]”))
    _清空当前场景_被选择 ()
    读取原库 (当前场景序号)
    读临时数据库 ()
    BitBlt (画板DC, 0, 0, 800, 600, 内存DC, 0, 0, #SRCCOPY)
.如果真结束


.子程序 _最后场景_被选择, 空白型, , 
.局部变量 最后场景序号, 整数型, , , 
.局部变量 记次变量, 整数型, , , 

赋值 (最后场景序号, 1)
置当前库 (原数据库路径)
到首记录 ()
.计次循环首 (取记录数 (), 记次变量)
    .如果真 (大于 (读 (“前景序号”), 最后场景序号))
        赋值 (最后场景序号, 读 (“前景序号”))
    .如果真结束
    跳过 ()
.计次循环尾 ()
.如果真 (不等于 (当前场景序号, 最后场景序号))
    .如果真 (等于 (是否已保存, 假))
        _保存_被选择 ()
    .如果真结束
    赋值 (当前场景序号, 最后场景序号)
    赋值 (_启动窗口., 相加 (“超级玛利地图编辑器 - ”, 到文本 (原数据库路径), “[场景：”, 到文本 (当前场景序号), “]”))
    _清空当前场景_被选择 ()
    读取原库 (当前场景序号)
    读临时数据库 ()
    BitBlt (画板DC, 0, 0, 800, 600, 内存DC, 0, 0, #SRCCOPY)
.如果真结束


.子程序 _上一场景_被选择, 空白型, , 
.如果真 (大于 (当前场景序号, 1))
    .如果真 (等于 (是否已保存, 假))
        _保存_被选择 ()
    .如果真结束
    赋值 (当前场景序号, 相减 (当前场景序号, 1))
    赋值 (_启动窗口., 相加 (“超级玛利地图编辑器 - ”, 到文本 (原数据库路径), “[场景：”, 到文本 (当前场景序号), “]”))
    _清空当前场景_被选择 ()
    读取原库 (当前场景序号)
    读临时数据库 ()
    BitBlt (画板DC, 0, 0, 800, 600, 内存DC, 0, 0, #SRCCOPY)
.如果真结束


.子程序 _下一场景_被选择, 空白型, , 
.局部变量 最后场景序号, 整数型, , , 
.局部变量 记次变量, 整数型, , , 

赋值 (最后场景序号, 1)
置当前库 (原数据库路径)
到首记录 ()
.计次循环首 (取记录数 (), 记次变量)
    .如果真 (大于 (读 (“前景序号”), 最后场景序号))
        赋值 (最后场景序号, 读 (“前景序号”))
    .如果真结束
    跳过 ()
.计次循环尾 ()
.如果真 (小于 (当前场景序号, 最后场景序号))
    .如果真 (等于 (是否已保存, 假))
        _保存_被选择 ()
    .如果真结束
    赋值 (当前场景序号, 相加 (当前场景序号, 1))
    赋值 (_启动窗口., 相加 (“超级玛利地图编辑器 - ”, 到文本 (原数据库路径), “[场景：”, 到文本 (当前场景序号), “]”))
    _清空当前场景_被选择 ()
    读取原库 (当前场景序号)
    读临时数据库 ()
    BitBlt (画板DC, 0, 0, 800, 600, 内存DC, 0, 0, #SRCCOPY)
.如果真结束


.子程序 _删除当前场景_被选择, 空白型, , 
.如果真 (等于 (信息框 (“您确定要删除当前场景吗？此操作将不可恢复。”, 相加 (#警告图标, #是否钮), “删除场景”), #是钮))
    置当前库 (原数据库路径)
    到首记录 ()
    删除 (等于 (读 (“前景序号”), 当前场景序号))
    彻底删除 ()
    赋值 (当前场景序号, 相减 (当前场景序号, 1))
    .如果 (小于 (当前场景序号, 1))
        赋值 (当前场景序号, 1)
        _清空当前场景_被选择 ()
    .否则
        读取原库 (当前场景序号)
        读临时数据库 ()
    .如果结束
    BitBlt (画板DC, 0, 0, 800, 600, 内存DC, 0, 0, #SRCCOPY)
    
.如果真结束
赋值 (_启动窗口., 相加 (“超级玛利地图编辑器 - ”, 到文本 (原数据库路径), “[场景：”, 到文本 (当前场景序号), “]”))

.子程序 _清空当前场景_被选择, 空白型, , 
赋值 (.刷子颜色, #黑色)
赋值 (.画笔类型, 1)
0.画矩形 (0, .宽度, .高度)
初始化临时库 ()
读临时数据库 ()
赋值 (是否已保存, 假)

.子程序 _批量删除场景_被选择, 空白型, , 
.局部变量 删除范围, 文本型, , "0", 
.局部变量 输入内容, 文本型, , , 
.局部变量 记次变量, 整数型, , , 

.如果真 (等于 (输入框 (“输入欲删除范围，使用＂-＂分隔。此操作将不可恢复。”, “批量删除”, “”, 输入内容, #输入文本), 真))
    赋值 (删除范围, 分割文本 (输入内容, “-”, 2))
    .如果真 (大于 (到数值 (删除范围 [1]), 到数值 (删除范围 [2])))
        返回 ()
    .如果真结束
    置当前库 (原数据库路径)
    
    删除 (并且 (大于或等于 (读 (“前景序号”), 到数值 (删除范围 [1])), 小于或等于 (读 (“前景序号”), 到数值 (删除范围 [2]))))
    彻底删除 ()
    
    
    赋值 (当前场景序号, 1)
    .如果 (小于 (取记录数 (), 1))
        _清空当前场景_被选择 ()
    .否则
        读取原库 (当前场景序号)
        读临时数据库 ()
    .如果结束
    BitBlt (画板DC, 0, 0, 800, 600, 内存DC, 0, 0, #SRCCOPY)
    赋值 (_启动窗口., 相加 (“超级玛利地图编辑器 - ”, 到文本 (原数据库路径), “[场景：”, 到文本 (当前场景序号), “]”))
    
.如果真结束


.子程序 _添加场景_被选择, 空白型, , 
赋值 (当前场景序号, 相加 (当前场景序号, 1))
_清空当前场景_被选择 ()
赋值 (_启动窗口., 相加 (“超级玛利地图编辑器 - ”, 到文本 (原数据库路径), “[场景：”, 到文本 (当前场景序号), “]”))

.子程序 _跳到指定场景_被选择, 空白型, , 
.局部变量 场景序号, 整数型, , , 
.局部变量 最后场景序号, 整数型, , , 
.局部变量 记次变量, 整数型, , , 

置当前库 (原数据库路径)
到首记录 ()
.计次循环首 (取记录数 (), 记次变量)
    .如果真 (大于 (读 (“前景序号”), 最后场景序号))
        赋值 (最后场景序号, 读 (“前景序号”))
    .如果真结束
    跳过 ()
.计次循环尾 ()

.如果真 (等于 (输入框 (相加 (“数据库中当前有 ”, 到文本 (最后场景序号), “ 个场景。请输入欲打开的场景。”), “条到”, “”, 场景序号, #输入整数), 真))
    .如果真 (等于 (是否已保存, 假))
        _保存_被选择 ()
    .如果真结束
    赋值 (当前场景序号, 场景序号)
    _清空当前场景_被选择 ()
    读取原库 (当前场景序号)
    读临时数据库 ()
    BitBlt (画板DC, 0, 0, 800, 600, 内存DC, 0, 0, #SRCCOPY)
.如果真结束
赋值 (_启动窗口., 相加 (“超级玛利地图编辑器 - ”, 到文本 (原数据库路径), “[场景：”, 到文本 (当前场景序号), “]”))

.子程序 _刷新当前场景_被选择, 空白型, , 
读临时数据库 ()
BitBlt (画板DC, 0, 0, 800, 600, 内存DC, 0, 0, #SRCCOPY)

.子程序 _粘贴_被选择, 空白型, , 
.局部变量 记次变量, 整数型, , , 
.局部变量 前景序号, 整数型, , , 
.局部变量 文件名, 文本型, , , 
.局部变量 类型, 整数型, , , 
.局部变量 块宽, 整数型, , , 
.局部变量 块长, 整数型, , , 
.局部变量 块数, 整数型, , , 
.局部变量 物品序号, 整数型, , , 

赋值 (是否已保存, 假)
置当前库 (相加 (运行目录, #数据路径, #临时数据库))
到首记录 ()
.计次循环首 (取数组成员数 (被复制图片信息组), 记次变量)
    到首记录 ()
    查找 (等于 (取标签 (), 被复制图片信息组 [记次变量], 标签))
    赋值 (前景序号, 读 (“前景序号”))
    赋值 (文件名, 读 (“文件名”))
    赋值 (类型, 读 (“类型”))
    赋值 (块宽, 读 (“块宽”))
    赋值 (块长, 读 (“块长”))
    赋值 (块数, 读 (“块数”))
    赋值 (物品序号, 读 (“物品序号”))
    加空记录 ()
    写 (“横向位置”, 0)
    写 (“纵向位置”, 0)
    写 (“前景序号”, 前景序号)
    写 (“文件名”, 文件名)
    写 (“类型”, 类型)
    写 (“块宽”, 块宽)
    写 (“块长”, 块长)
    写 (“块数”, 块数)
    写 (“物品序号”, 物品序号)
    
.计次循环尾 ()
_刷新当前场景_被选择 ()


.子程序 _删除_被选择, 空白型, , 
.局部变量 记次变量, 整数型, , , 

赋值 (是否已保存, 假)
置当前库 (相加 (运行目录, #数据路径, #临时数据库))
到首记录 ()
.计次循环首 (取数组成员数 (选中图片信息组), 记次变量)
    删除 (等于 (取标签 (), 选中图片信息组 [记次变量], 标签))
.计次循环尾 ()
彻底删除 ()
清除数组 (选中图片信息组)
赋值 (.禁止, 真)
赋值 (.禁止, 真)
_刷新当前场景_被选择 ()
_刷新类型_被选择 ()

.子程序 画板回调子程序, 整数型, , 
.参数 hwnd, 整数型, , 
.参数 message, 整数型, , 
.参数 wParam, 整数型, , 
.参数 lParam, 整数型, , 


.如果真 (等于 (message, #WM_PAINT)) ' 处理重画消息
    CallWindowProc (画板返回值, hwnd, message, wParam, lParam)
    BitBlt (画板DC, 0, 0, 800, 600, 内存DC, 0, 0, #SRCCOPY)
    画焦点框 ()
    返回 (0)
.如果真结束
返回 (CallWindowProc (画板返回值, hwnd, message, wParam, lParam))

.子程序 _画板_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 记次变量, 整数型, , , 
.局部变量 记次变量2, 整数型, , , 
.局部变量 记录数, 整数型, , , 
.局部变量 图片左边, 整数型, , , 
.局部变量 图片顶边, 整数型, , , 
.局部变量 图片高度, 整数型, , , 
.局部变量 图片宽度, 整数型, , , 

.如果真 (等于 (位与 (功能键状态, #Shift键状态), #Shift键状态))
    返回 ()
.如果真结束

赋值 (画板按下横位置, 横向位置)
赋值 (画板按下纵位置, 纵向位置)
置当前库 (相加 (运行目录, #数据路径, #临时数据库))
赋值 (记录数, 取记录数 ())
到首记录 ()
.计次循环首 (记录数, 记次变量) ' 倒找满足条件的记录
    跳到 (相加 (相减 (记录数, 记次变量), 1))
    赋值 (图片左边, 读 (“横向位置”))
    赋值 (图片顶边, 读 (“纵向位置”))
    赋值 (图片宽度, 读 (“块宽”))
    赋值 (图片高度, 读 (“块长”))
    .如果真 (并且 (大于或等于 (横向位置, 图片左边), 大于或等于 (纵向位置, 图片顶边), 小于或等于 (横向位置, 相加 (图片左边, 图片宽度)), 小于或等于 (纵向位置, 相加 (图片顶边, 图片高度))))
        .如果 (大于 (取数组成员数 (选中图片信息组), 1))
            .计次循环首 (取数组成员数 (选中图片信息组), 记次变量2)
                .如果真 (等于 (选中图片信息组 [记次变量2], 标签, 取标签 ())) ' 判断是否已经选中
                    跳出循环 ()
                .如果真结束
                .如果真 (并且 (等于 (取数组成员数 (选中图片信息组), 记次变量2), 不等于 (选中图片信息组 [记次变量2], 标签, 取标签 ())))
                    重定义数组 (选中图片信息组, 假, 1)
                    赋值 (选中图片信息组 [1].左边, 图片左边)
                    赋值 (选中图片信息组 [1].顶边, 图片顶边)
                    赋值 (选中图片信息组 [1].高度, 图片高度)
                    .如果 (等于 (读 (“类型”), 3))
                        赋值 (选中图片信息组 [1].宽度, 相乘 (图片宽度, 读 (“块数”)))
                    .否则
                        赋值 (选中图片信息组 [1].宽度, 图片宽度)
                    .如果结束
                    赋值 (选中图片信息组 [1].标签, 取标签 ())
                    
                .如果真结束
                
            .计次循环尾 ()
            
        .否则
            重定义数组 (选中图片信息组, 真, 1)
            赋值 (选中图片信息组 [1].左边, 图片左边)
            赋值 (选中图片信息组 [1].顶边, 图片顶边)
            赋值 (选中图片信息组 [1].高度, 图片高度)
            .如果 (等于 (读 (“类型”), 3))
                赋值 (选中图片信息组 [1].宽度, 相乘 (图片宽度, 读 (“块数”)))
            .否则
                赋值 (选中图片信息组 [1].宽度, 图片宽度)
            .如果结束
            赋值 (选中图片信息组 [1].标签, 取标签 ())
            
        .如果结束
        BitBlt (画板DC, 0, 0, 800, 600, 内存DC, 0, 0, #SRCCOPY) ' 重画
        画焦点框 ()
        
        跳出循环 ()
    .如果真结束
    
.计次循环尾 ()
.如果 (大于 (取数组成员数 (选中图片信息组), 0))
    赋值 (.禁止, 假)
    赋值 (.禁止, 假)
.否则
    赋值 (.禁止, 真)
    赋值 (.禁止, 真)
.如果结束
_刷新类型_被选择 ()

.子程序 画焦点框, 空白型, , 
.局部变量 记次变量, 整数型, , , 

赋值 (.刷子颜色, 8388608)
赋值 (.画笔颜色, #白色)
赋值 (.画笔类型, 1)

.计次循环首 (取数组成员数 (选中图片信息组), 记次变量)
    相减 (选中图片信息组 [记次变量], 左边, 7).画矩形 (相减 (选中图片信息组 [记次变量], 顶边, 7), 选中图片信息组 [记次变量], 左边, 选中图片信息组 [记次变量], 顶边) ' 左上
    相加 (选中图片信息组 [记次变量], 左边, 相除 (相减 (选中图片信息组 [记次变量], 宽度, 7), 2)).画矩形 (相减 (选中图片信息组 [记次变量], 顶边, 7), 相加 (选中图片信息组 [记次变量], 左边, 相除 (相加 (选中图片信息组 [记次变量], 宽度, 7), 2)), 选中图片信息组 [记次变量], 顶边) ' 中上
    相加 (选中图片信息组 [记次变量], 左边, 选中图片信息组 [记次变量], 宽度, 7).画矩形 (相减 (选中图片信息组 [记次变量], 顶边, 7), 相加 (选中图片信息组 [记次变量], 左边, 选中图片信息组 [记次变量], 宽度), 选中图片信息组 [记次变量], 顶边) ' 右上
    相减 (选中图片信息组 [记次变量], 左边, 7).画矩形 (相加 (选中图片信息组 [记次变量], 顶边, 相除 (相减 (选中图片信息组 [记次变量], 高度, 7), 2)), 选中图片信息组 [记次变量], 左边, 相加 (选中图片信息组 [记次变量], 顶边, 相除 (相加 (选中图片信息组 [记次变量], 高度, 7), 2))) ' 左中
    相加 (选中图片信息组 [记次变量], 左边, 选中图片信息组 [记次变量], 宽度, 7).画矩形 (相加 (选中图片信息组 [记次变量], 顶边, 相除 (相减 (选中图片信息组 [记次变量], 高度, 7), 2)), 相加 (选中图片信息组 [记次变量], 左边, 选中图片信息组 [记次变量], 宽度), 相加 (选中图片信息组 [记次变量], 顶边, 相除 (相加 (选中图片信息组 [记次变量], 高度, 7), 2))) ' 右中
    相减 (选中图片信息组 [记次变量], 左边, 7).画矩形 (相加 (选中图片信息组 [记次变量], 顶边, 选中图片信息组 [记次变量], 高度), 选中图片信息组 [记次变量], 左边, 相加 (选中图片信息组 [记次变量], 顶边, 选中图片信息组 [记次变量], 高度, 7)) ' 左下
    相加 (选中图片信息组 [记次变量], 左边, 相除 (相减 (选中图片信息组 [记次变量], 宽度, 7), 2)).画矩形 (相加 (选中图片信息组 [记次变量], 顶边, 选中图片信息组 [记次变量], 高度), 相加 (选中图片信息组 [记次变量], 左边, 相除 (相加 (选中图片信息组 [记次变量], 宽度, 7), 2)), 相加 (选中图片信息组 [记次变量], 顶边, 选中图片信息组 [记次变量], 高度, 7)) ' 中下
    相加 (选中图片信息组 [记次变量], 左边, 选中图片信息组 [记次变量], 宽度, 7).画矩形 (相加 (选中图片信息组 [记次变量], 顶边, 选中图片信息组 [记次变量], 高度), 相加 (选中图片信息组 [记次变量], 左边, 选中图片信息组 [记次变量], 宽度), 相加 (选中图片信息组 [记次变量], 顶边, 选中图片信息组 [记次变量], 高度, 7)) ' 右下
    
.计次循环尾 ()



.子程序 _左对齐_被选择, 空白型, , 
.局部变量 记次变量, 整数型, , , 
.局部变量 选中图片数, 整数型, , , 

赋值 (选中图片数, 取数组成员数 (选中图片信息组))
置当前库 (相加 (运行目录, #数据路径, #临时数据库))
到首记录 ()
.计次循环首 (相减 (选中图片数, 1), 记次变量)
    赋值 (选中图片信息组 [记次变量], 左边, 选中图片信息组 [选中图片数], 左边)
    到首记录 ()
    查找 (等于 (取标签 (), 选中图片信息组 [记次变量], 标签))
    写 (“横向位置”, 选中图片信息组 [选中图片数], 左边)
.计次循环尾 ()
读临时数据库 ()
BitBlt (画板DC, 0, 0, 800, 600, 内存DC, 0, 0, #SRCCOPY)
画焦点框 ()

.子程序 _画板_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 刷子句柄, 整数型, , , 
.局部变量 记次变量, 整数型, , , 
.局部变量 记次变量2, 整数型, , , 
.局部变量 循环次数, 整数型, , , 

.如果真 (或者 (等于 (GetAsyncKeyState (#VK_LBUTTON), -32767), 等于 (GetAsyncKeyState (#VK_LBUTTON), 32768))) ' 左键是否被按下
    赋值 (循环次数, 取数组成员数 (选中图片信息组))
    .计次循环首 (取数组成员数 (移动区域组), 记次变量)
        DrawFocusRect (画板DC, 移动区域组 [记次变量])
    .计次循环尾 ()
    清除数组 (移动区域组)
    .如果真 (大于 (循环次数, 0))
        .计次循环首 (循环次数, 记次变量)
            
            .如果真 (并且 (大于或等于 (画板按下横位置, 选中图片信息组 [记次变量], 左边), 大于或等于 (画板按下纵位置, 选中图片信息组 [记次变量], 顶边), 小于或等于 (画板按下横位置, 相加 (选中图片信息组 [记次变量], 左边, 选中图片信息组 [记次变量], 宽度)), 小于或等于 (画板按下纵位置, 相加 (选中图片信息组 [记次变量], 顶边, 选中图片信息组 [记次变量], 高度))))
                重定义数组 (移动区域组, 假, 取数组成员数 (选中图片信息组))
                .计次循环首 (循环次数, 记次变量2)
                    赋值 (移动区域组 [记次变量2], Top, 相减 (相加 (选中图片信息组 [记次变量2], 顶边, 纵向位置), 画板按下纵位置))
                    赋值 (移动区域组 [记次变量2], Left, 相减 (相加 (选中图片信息组 [记次变量2], 左边, 横向位置), 画板按下横位置))
                    赋值 (移动区域组 [记次变量2], Right, 相减 (相加 (选中图片信息组 [记次变量2], 左边, 选中图片信息组 [记次变量2], 宽度, 横向位置), 画板按下横位置))
                    赋值 (移动区域组 [记次变量2], Bottom, 相减 (相加 (选中图片信息组 [记次变量2], 顶边, 选中图片信息组 [记次变量2], 高度, 纵向位置), 画板按下纵位置))
                .计次循环尾 ()
                .计次循环首 (取数组成员数 (移动区域组), 记次变量)
                    DrawFocusRect (画板DC, 移动区域组 [记次变量])
                .计次循环尾 ()
                跳出循环 ()
            .如果真结束
            
        .计次循环尾 ()
    .如果真结束
    
.如果真结束


.子程序 _清除相同记录_被选择, 空白型, , 
.如果真 (等于 (原数据库路径, “”))
    返回 ()
.如果真结束
载入 (进度窗口, , 真)
读取原库 (当前场景序号)
_刷新当前场景_被选择 ()

.子程序 _画板_滚轮被滚动, 逻辑型, , 
.参数 滚动距离, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.位置, 相减 (.位置, 相乘 (滚动距离, 5)))
.如果真 (大于 (.位置, .最大位置))
    赋值 (.位置, .最大位置)
.如果真结束
_纵向滚动条_位置被改变 ()


.子程序 _画板_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 记次变量, 整数型, , , 
.局部变量 记次变量2, 整数型, , , 
.局部变量 记录数, 整数型, , , 
.局部变量 图片左边, 整数型, , , 
.局部变量 图片顶边, 整数型, , , 
.局部变量 图片高度, 整数型, , , 
.局部变量 图片宽度, 整数型, , , 
.局部变量 移动区域数, 整数型, , , 
.局部变量 刷子句柄, 整数型, , , 
.局部变量 矩形区域, RECT, , , 
.局部变量 是否移动后放开, 逻辑型, , , 

赋值 (画板按下横位置, -1)
赋值 (画板按下纵位置, -1)
 ' 处理移动状态
赋值 (移动区域数, 取数组成员数 (移动区域组))
.如果真 (大于 (移动区域数, 0))
    置当前库 (相加 (运行目录, #数据路径, #临时数据库))
    .计次循环首 (移动区域数, 记次变量)
        DrawFocusRect (画板DC, 移动区域组 [记次变量]) ' 清除虚线框
         ' 判断图片位置是否符合要求
        .如果真 (小于 (移动区域组 [记次变量], Top, 0)) ' 顶边
            赋值 (移动区域组 [记次变量], Top, 0)
        .如果真结束
        .如果真 (小于 (移动区域组 [记次变量], Left, 0)) ' 左边
            赋值 (移动区域组 [记次变量], Left, 0)
        .如果真结束
        .如果真 (大于 (移动区域组 [记次变量], Bottom, 600))
            赋值 (移动区域组 [记次变量], Top, 相减 (600, 选中图片信息组 [记次变量], 高度))
        .如果真结束
        .如果真 (大于 (移动区域组 [记次变量], Right, 800))
            赋值 (移动区域组 [记次变量], Left, 相减 (800, 选中图片信息组 [记次变量], 宽度))
        .如果真结束
        赋值 (选中图片信息组 [记次变量], 左边, 移动区域组 [记次变量], Left)
        赋值 (选中图片信息组 [记次变量], 顶边, 移动区域组 [记次变量], Top)
        到首记录 ()
        查找 (等于 (取标签 (), 选中图片信息组 [记次变量], 标签))
        写 (“横向位置”, 移动区域组 [记次变量], Left)
        写 (“纵向位置”, 移动区域组 [记次变量], Top)
    .计次循环尾 ()
    读临时数据库 ()
    BitBlt (画板DC, 0, 0, 800, 600, 内存DC, 0, 0, #SRCCOPY)
    清除数组 (移动区域组)
    画焦点框 ()
    赋值 (是否移动后放开, 真)
.如果真结束

 ' 处理选中状态
.如果真 (小于 (取数组成员数 (选中图片信息组), 1))
    返回 ()
.如果真结束
置当前库 (相加 (运行目录, #数据路径, #临时数据库))
赋值 (记录数, 取记录数 ())
到首记录 ()
.计次循环首 (记录数, 记次变量) ' 倒找满足条件的记录
    跳到 (相加 (相减 (记录数, 记次变量), 1))
    赋值 (图片左边, 读 (“横向位置”))
    赋值 (图片顶边, 读 (“纵向位置”))
    赋值 (图片宽度, 读 (“块宽”))
    赋值 (图片高度, 读 (“块长”))
    .如果真 (并且 (大于或等于 (横向位置, 图片左边), 大于或等于 (纵向位置, 图片顶边), 小于或等于 (横向位置, 相加 (图片左边, 图片宽度)), 小于或等于 (纵向位置, 相加 (图片顶边, 图片高度))))
        .如果 (不等于 (位与 (功能键状态, #Shift键状态), #Shift键状态)) ' 判断在选中图片时是否按下了Shift键
            .如果真 (等于 (是否移动后放开, 假))
                重定义数组 (选中图片信息组, 真, 1)
                赋值 (选中图片信息组 [1].左边, 图片左边)
                赋值 (选中图片信息组 [1].顶边, 图片顶边)
                赋值 (选中图片信息组 [1].高度, 图片高度)
                .如果 (等于 (读 (“类型”), 3))
                    赋值 (选中图片信息组 [1].宽度, 相乘 (图片宽度, 读 (“块数”)))
                .否则
                    赋值 (选中图片信息组 [1].宽度, 图片宽度)
                .如果结束
                赋值 (选中图片信息组 [1].标签, 取标签 ())
                
            .如果真结束
            赋值 (是否移动后放开, 假)
        .否则
            .如果 (等于 (取数组成员数 (选中图片信息组), 0))
                重定义数组 (选中图片信息组, 真, 1)
                赋值 (选中图片信息组 [1].左边, 图片左边)
                赋值 (选中图片信息组 [1].顶边, 图片顶边)
                赋值 (选中图片信息组 [1].高度, 图片高度)
                .如果 (等于 (读 (“类型”), 3))
                    赋值 (选中图片信息组 [1].宽度, 相乘 (图片宽度, 读 (“块数”)))
                .否则
                    赋值 (选中图片信息组 [1].宽度, 图片宽度)
                .如果结束
                赋值 (选中图片信息组 [1].标签, 取标签 ())
            .否则
                .计次循环首 (取数组成员数 (选中图片信息组), 记次变量2)
                    .如果真 (等于 (选中图片信息组 [记次变量2], 标签, 取标签 ())) ' 判断是否已经选中
                        删除成员 (选中图片信息组, 记次变量2, )
                        跳出循环 ()
                    .如果真结束
                    .如果真 (并且 (等于 (取数组成员数 (选中图片信息组), 记次变量2), 不等于 (选中图片信息组 [记次变量2], 标签, 取标签 ())))
                        重定义数组 (选中图片信息组, 真, 相加 (记次变量2, 1))
                        赋值 (选中图片信息组 [相加 (记次变量2, 1)].左边, 图片左边)
                        赋值 (选中图片信息组 [相加 (记次变量2, 1)].顶边, 图片顶边)
                        赋值 (选中图片信息组 [相加 (记次变量2, 1)].高度, 图片高度)
                        .如果 (等于 (读 (“类型”), 3))
                            赋值 (选中图片信息组 [相加 (记次变量2, 1)].宽度, 相乘 (图片宽度, 读 (“块数”)))
                        .否则
                            赋值 (选中图片信息组 [相加 (记次变量2, 1)].宽度, 图片宽度)
                        .如果结束
                        赋值 (选中图片信息组 [相加 (记次变量2, 1)].标签, 取标签 ())
                        
                    .如果真结束
                    
                .计次循环尾 ()
            .如果结束
            
        .如果结束
        
        
        
        BitBlt (画板DC, 0, 0, 800, 600, 内存DC, 0, 0, #SRCCOPY) ' 重画
        画焦点框 ()
        
        跳出循环 ()
    .如果真结束
    
.计次循环尾 ()
.如果 (大于 (取数组成员数 (选中图片信息组), 0))
    赋值 (.禁止, 假)
    赋值 (.禁止, 假)
.否则
    赋值 (.禁止, 真)
    赋值 (.禁止, 假)
.如果结束
_刷新类型_被选择 ()

.子程序 _右对齐_被选择, 空白型, , 
.局部变量 记次变量, 整数型, , , 
.局部变量 选中图片数, 整数型, , , 

赋值 (选中图片数, 取数组成员数 (选中图片信息组))
置当前库 (相加 (运行目录, #数据路径, #临时数据库))
到首记录 ()
.计次循环首 (相减 (选中图片数, 1), 记次变量)
    赋值 (选中图片信息组 [记次变量], 左边, 相减 (相加 (选中图片信息组 [选中图片数], 左边, 选中图片信息组 [选中图片数], 宽度), 选中图片信息组 [记次变量], 宽度))
    到首记录 ()
    查找 (等于 (取标签 (), 选中图片信息组 [记次变量], 标签))
    写 (“横向位置”, 选中图片信息组 [记次变量], 左边)
.计次循环尾 ()
读临时数据库 ()
BitBlt (画板DC, 0, 0, 800, 600, 内存DC, 0, 0, #SRCCOPY)
画焦点框 ()


.子程序 _顶边对齐_被选择, 空白型, , 
.局部变量 记次变量, 整数型, , , 
.局部变量 选中图片数, 整数型, , , 

赋值 (选中图片数, 取数组成员数 (选中图片信息组))
置当前库 (相加 (运行目录, #数据路径, #临时数据库))
到首记录 ()
.计次循环首 (相减 (选中图片数, 1), 记次变量)
    赋值 (选中图片信息组 [记次变量], 顶边, 选中图片信息组 [选中图片数], 顶边)
    到首记录 ()
    查找 (等于 (取标签 (), 选中图片信息组 [记次变量], 标签))
    写 (“纵向位置”, 选中图片信息组 [选中图片数], 顶边)
.计次循环尾 ()
读临时数据库 ()
BitBlt (画板DC, 0, 0, 800, 600, 内存DC, 0, 0, #SRCCOPY)
画焦点框 ()


.子程序 _底边对齐_被选择, 空白型, , 
.局部变量 记次变量, 整数型, , , 
.局部变量 选中图片数, 整数型, , , 

赋值 (选中图片数, 取数组成员数 (选中图片信息组))
置当前库 (相加 (运行目录, #数据路径, #临时数据库))
到首记录 ()
.计次循环首 (相减 (选中图片数, 1), 记次变量)
    赋值 (选中图片信息组 [记次变量], 顶边, 相减 (相加 (选中图片信息组 [选中图片数], 顶边, 选中图片信息组 [选中图片数], 高度), 选中图片信息组 [记次变量], 高度))
    到首记录 ()
    查找 (等于 (取标签 (), 选中图片信息组 [记次变量], 标签))
    写 (“纵向位置”, 选中图片信息组 [记次变量], 顶边)
.计次循环尾 ()
读临时数据库 ()
BitBlt (画板DC, 0, 0, 800, 600, 内存DC, 0, 0, #SRCCOPY)
画焦点框 ()


.子程序 _横向居中_被选择, 空白型, , 
.局部变量 记次变量, 整数型, , , 
.局部变量 选中图片数, 整数型, , , 

赋值 (选中图片数, 取数组成员数 (选中图片信息组))
置当前库 (相加 (运行目录, #数据路径, #临时数据库))
到首记录 ()
.计次循环首 (选中图片数, 记次变量)
    赋值 (选中图片信息组 [记次变量], 左边, 相除 (相减 (800, 选中图片信息组 [记次变量], 宽度), 2))
    到首记录 ()
    查找 (等于 (取标签 (), 选中图片信息组 [记次变量], 标签))
    写 (“横向位置”, 选中图片信息组 [记次变量], 左边)
.计次循环尾 ()
读临时数据库 ()
BitBlt (画板DC, 0, 0, 800, 600, 内存DC, 0, 0, #SRCCOPY)
画焦点框 ()


.子程序 _纵向居中_被选择, 空白型, , 
.局部变量 记次变量, 整数型, , , 
.局部变量 选中图片数, 整数型, , , 

赋值 (选中图片数, 取数组成员数 (选中图片信息组))
置当前库 (相加 (运行目录, #数据路径, #临时数据库))
到首记录 ()
.计次循环首 (选中图片数, 记次变量)
    赋值 (选中图片信息组 [记次变量], 顶边, 相除 (相减 (600, 选中图片信息组 [记次变量], 高度), 2))
    到首记录 ()
    查找 (等于 (取标签 (), 选中图片信息组 [记次变量], 标签))
    写 (“纵向位置”, 选中图片信息组 [记次变量], 顶边)
.计次循环尾 ()
读临时数据库 ()
BitBlt (画板DC, 0, 0, 800, 600, 内存DC, 0, 0, #SRCCOPY)
画焦点框 ()


.子程序 _打开_被选择, 空白型, , 
.局部变量 操作, 整数型, , , 信息框操作

.如果真 (不等于 (原数据库路径, “”))
    .如果真 (等于 (是否已保存, 假))
        赋值 (操作, 信息框 (“是否要保存更改？”, 相加 (#询问图标, #取消是否钮), “是否保存”))
        .如果真 (等于 (操作, #取消钮))
            返回 ()
        .如果真结束
        .如果真 (等于 (操作, #是钮))
            _保存_被选择 ()
        .如果真结束
        
    .如果真结束
    
.如果真结束
.如果真 (等于 (打开 (), 真))
    关闭 (原数据库路径)
    赋值 (原数据库路径, .文件名)
    初始化临时库 ()
    读取原库 (1)
    读临时数据库 ()
    BitBlt (画板DC, 0, 0, 800, 600, 内存DC, 0, 0, #SRCCOPY)
    赋值 (当前场景序号, 1)
    赋值 (_启动窗口., 相加 (“超级玛利地图编辑器 - ”, 到文本 (原数据库路径), “[场景：”, 到文本 (当前场景序号), “]”))
    赋值 (是否已保存, 真)
.如果真结束


.子程序 _新建_被选择, 空白型, , 
全部关闭 ()
初始化临时库 ()
读临时数据库 ()
BitBlt (画板DC, 0, 0, 800, 600, 内存DC, 0, 0, #SRCCOPY)
赋值 (原数据库路径, “”)
赋值 (当前场景序号, 1)
赋值 (_启动窗口., 相加 (“超级玛利地图编辑器 - ”, 到文本 (原数据库路径), “[场景：”, 到文本 (当前场景序号), “]”))
赋值 (是否已保存, 真)

.子程序 _另存为_被选择, 空白型, , 
.局部变量 记次变量, 整数型, , , 
.局部变量 记次变量2, 整数型, , , 

赋值 (.标题, “另存为...”)
赋值 (.文件名, “frontgroud”)
.如果真 (等于 (打开 (), 假))
    返回 ()
.如果真结束

.如果 (不等于 (原数据库路径, “”))
    关闭 (原数据库路径)
    复制文件 (原数据库路径, .文件名)
.否则
    复制文件 (相加 (运行目录, #数据路径, #临时数据库), .文件名)
.如果结束
赋值 (原数据库路径, .文件名)

打开 (原数据库路径, , , #无限制, , , )
置当前库 (原数据库路径)
到首记录 ()
删除 (等于 (读 (“前景序号”), 当前场景序号))
彻底删除 ()

置当前库 (相加 (运行目录, #数据路径, #临时数据库))
.计次循环首 (取记录数 (), 记次变量)
    置当前库 (原数据库路径)
    到尾记录 ()
    加空记录 ()
    置当前库 (相加 (运行目录, #数据路径, #临时数据库))
    跳到 (记次变量)
    .计次循环首 (取字段数 (), 记次变量2)
        写字段 (记次变量2, 原数据库路径, 读 (记次变量2))
    .计次循环尾 ()
.计次循环尾 ()
赋值 (是否已保存, 真)

赋值 (_启动窗口., 相加 (“超级玛利地图编辑器 - ”, 到文本 (原数据库路径), “[场景：”, 到文本 (当前场景序号), “]”))

.子程序 _分隔条_被拖动, 空白型, , 
.参数 原位置, 整数型, , 
.参数 目的位置, 整数型, , 

赋值 (., 目的位置)
__启动窗口_尺寸被改变 ()

.窗口程序集 进度窗口程序集, , , 

.程序集变量 是否停止, 逻辑型, , , 
.子程序 _停止按钮_被单击, 空白型, , 
赋值 (是否停止, 真)


.子程序 清除相同记录, 空白型, , 
.局部变量 前景序号, 整数型, , , 
.局部变量 文件名, 文本型, , , 
.局部变量 类型, 整数型, , , 
.局部变量 横向位置, 整数型, , , 
.局部变量 纵向位置, 整数型, , , 
.局部变量 块长, 整数型, , , 
.局部变量 块宽, 整数型, , , 
.局部变量 块数, 整数型, , , 
.局部变量 物品序号, 整数型, , , 
.局部变量 记录数, 整数型, , , 
.局部变量 循环变量1, 整数型, , , 
.局部变量 循环变量2, 整数型, , , 

.如果 (等于 (原数据库路径, “”))
    置当前库 (相加 (运行目录, #数据路径, #临时数据库))
.否则
    置当前库 (原数据库路径)
.如果结束
到首记录 ()
赋值 (记录数, 取记录数 ())
.计次循环首 (记录数, 循环变量1)
    跳到 (循环变量1)
    赋值 (前景序号, 读 (“前景序号”))
    赋值 (文件名, 读 (“文件名”))
    赋值 (类型, 读 (“类型”))
    赋值 (横向位置, 读 (“横向位置”))
    赋值 (纵向位置, 读 (“纵向位置”))
    赋值 (块长, 读 (“块长”))
    赋值 (块宽, 读 (“块宽”))
    赋值 (块数, 读 (“块数”))
    赋值 (物品序号, 读 (“物品序号”))
    .计次循环首 (相减 (记录数, 循环变量1), 循环变量2)
        跳到 (相加 (循环变量1, 循环变量2))
        .如果真 (并且 (等于 (读 (“前景序号”), 前景序号), 等于 (读 (“文件名”), 文件名), 等于 (读 (“类型”), 类型), 等于 (读 (“横向位置”), 横向位置), 等于 (读 (“纵向位置”), 纵向位置), 等于 (读 (“块长”), 块长), 等于 (读 (“块宽”), 块宽), 等于 (读 (“块数”), 块数), 等于 (读 (“物品序号”), 物品序号)))
            删除 ()
        .如果真结束
        处理事件 ()
    .计次循环尾 ()
    处理事件 ()
    赋值 (.位置, 相乘 (相除 (循环变量1, 记录数), 100))
    赋值 (.内容, 相加 (到文本 (.位置), “%”))
    .如果真 (等于 (是否停止, 真))
        跳出循环 ()
    .如果真结束
    
.计次循环尾 ()
彻底删除 ()
赋值 (.位置, 100)
赋值 (.内容, 相加 (到文本 (.位置), “%”))
信息框 (“清除相同记录操作已完成。”, #信息图标, “完成”)
进度窗口.销毁 ()

.子程序 _进度窗口_创建完毕, 空白型, , 

处理事件 ()
清除相同记录 ()
处理事件 ()


 ' 不属于任何一个程序集、类模块的函数：
