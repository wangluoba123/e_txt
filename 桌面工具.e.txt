 ' 文件类型：Windows窗口程序

 ' 程序名称：新年快乐
 ' 程序描述：一个具有图片外形的窗口，其外形图片在“#图片1”资源中。
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 300
    顶边 = 1
    宽度 = 251
    高度 = 49
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 假
    禁止 = 假
    边框 = 0
    底图方式 = 0
    底色 = 24768 '  0x60C0
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 2
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 假
    随意移动 = 真
    外形 = 21
    总在最前 = 假
    保持标题栏激活 = 假
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “”
    帮助文件名 = “”

窗口 _启动窗口1 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 333
    高度 = 186
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = 8421376 '  0x808000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 真
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “控制面板”
    帮助文件名 = “”

窗口 窗口1
    左边 = 170
    顶边 = 165
    宽度 = 423
    高度 = 397
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 1
    底图方式 = 0
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 假
    位置 = 1
    可否移动 = 假
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 假
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “”
    帮助文件名 = “”

窗口 窗口3
    左边 = 0
    顶边 = 0
    宽度 = 254
    高度 = 134
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 1
    底图方式 = 2
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 真
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 假
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “快速浏览--金  宇”
    帮助文件名 = “”

窗口 窗口2
    左边 = 50
    顶边 = 50
    宽度 = 230
    高度 = 80
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = 12632256 '  0xC0C0C0
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “    请输入身份验证密码”
    帮助文件名 = “”

窗口 _启动窗口2 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 354
    高度 = 424
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = 16746496 '  0xFF8800
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 假
    位置 = 1
    可否移动 = 假
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 假
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “”
    帮助文件名 = “”





 ' 所需要的支持库：
 ' KRNLN d09f2340818511d396f6aaf844c7e325 4 6 系统核心支持库




.全局变量 rq2, 整数型, , , 
.全局变量 tname, 文本型, , , 
.全局变量 cdw, 逻辑型, , , 
.全局变量 匿名全局变量_7740, 空白型, , , 

.DLL命令 打开文件名, 空白型, "Shell32.dll", "ShellExecuteA", , 
    .参数 窗口句柄, 整数型, , 
    .参数 操作类型, 文本型, , 
    .参数 被操作的文件名, 文本型, , 
    .参数 cs4, 文本型, , 
    .参数 命令行, 文本型, , 
    .参数 窗口显示方式, 文本型, , 

.DLL命令 桌面背景, 空白型, "user32", "SystemParametersInfoA", , 
    .参数 整数1, 整数型, , 
    .参数 整数2, 整数型, , 
    .参数 文件名, 文本型, , 
    .参数 整数3, 整数型, , 

.DLL命令 关机, 空白型, "user32.dll", "ExitWindowsEx", , 
    .参数 参数1, 整数型, , 
    .参数 参数2, 整数型, , 

.窗口程序集 窗口程序集1, , , 

.子程序 __启动窗口_创建完毕, 空白型, , 
置托盘图标 (“81.ico”, )
打开文件名 (0, “open”, “c:\tools\magic\magicptc.exe”, “/r”, “”, “SW_RESTORE”)

.子程序 _退出_被选择, 空白型, , 
.局部变量 rq1, 整数型, , , 

赋值 (rq1, 信息框 (“   退出后是否进行关机操作？”, 3, “请确认”))
.如果 (等于 (rq1, 5))
    关机 (13, 0)
.否则
    .如果真 (等于 (rq1, 6))
        结束 ()
    .如果真结束
    
.如果结束


.子程序 _改变背景_被选择, 空白型, , 
赋值 (., “*.bmp|*.bmp|*.*”)
赋值 (., “”)
.如果真 (等于 (打开 (), 真))
    桌面背景 (20, 2, ., 1)
.如果真结束
赋值 (., “*.*”)

.子程序 _清除背景_被选择, 空白型, , 
桌面背景 (20, 1, “”, 1)

.子程序 run, 空白型, , 
.参数 openfile, 文本型, , 

.局部变量 tt, 整数型, , , 
.局部变量 yname, 文本型, , , 

.如果真 (不等于 (openfile, “”))
    赋值 (tt, 倒找文本 (openfile, “\”, , 真))
    .如果真 (不等于 (tt, -1))
        改变目录 (取文本左边 (openfile, tt))
    .如果真结束
    赋值 (yname, 到大写 (取文本右边 (openfile, 3)))
    .如果 (或者 (等于 (yname, “MP3”), 等于 (yname, “MP2”), 等于 (yname, “MP1”), 等于 (yname, “MP?”)))
        停止播放 ()
        播放MP3 (-1, openfile)
    .否则
        .如果 (或者 (等于 (yname, “MID”), 等于 (yname, “WAV”)))
            停止播放 ()
            播放音乐 (openfile, 真)
        .否则
            .如果 (等于 (yname, “CPL”))
                打开文件名 (0, “open”, “control”, openfile, “”, “SW_RESTORE”)
            .否则
                .如果真 (或者 (等于 (yname, “VQF”), 等于 (yname, “RAM”), 等于 (yname, “RM”), 等于 (yname, “RA”)))
                    停止播放 ()
                .如果真结束
                .如果 (不等于 (., “”))
                    打开文件名 (0, “open”, openfile, ., “”, “SW_RESTORE”)
                .否则
                    打开文件名 (0, “open”, openfile, “”, “”, “SW_RESTORE”)
                .如果结束
                
            .如果结束
            
        .如果结束
        
    .如果结束
    
.如果真结束


.子程序 _编辑框1_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (等于 (键代码, 13))
    run (_启动窗口..)
.如果真结束


.子程序 sec, 空白型, , 
.如果 (等于 (取文本左边 (_启动窗口.., 1), “*”))
    赋值 (., 窗口1..)
    赋值 (., 相加 (., “|”, ., “|*.*|*.*”))
.否则
    赋值 (., “*.*”)
    赋值 (., 窗口1..)
.如果结束
.如果真 (等于 (打开 (), 真))
    赋值 (., .)
    赋值 (_启动窗口.., -1)
.如果真结束


.子程序 _编辑框2_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (等于 (键代码, 13))
    run (_启动窗口..)
.如果真结束


.子程序 _屏幕保护_被选择, 空白型, , 
_启动窗口.发送信息 (274, 61760, 0)

.子程序 _文件_被选择, 空白型, , 
.局部变量 ll, 文本型, , , 

.如果 (等于 (是否已创建 (窗口1), 假))
    赋值 (ll, 取文本注册表项 (“SuperRun”, “选项”, “user”, ))
    .如果 (不等于 (ll, “”))
        赋值 (cdw, 假)
        载入 (窗口2, , 真)
    .否则
        赋值 (cdw, 真)
    .如果结束
    .如果真 (等于 (cdw, 真))
        .如果真 (不等于 (是否已创建 (窗口1), 真))
            载入 (窗口1, , 假)
        .如果真结束
        
    .如果真结束
    
.否则
    窗口1.激活 ()
.如果结束


.子程序 _恢复_被选择, 空白型, , 
.如果 (等于 (_启动窗口., 假))
    赋值 (_启动窗口., 真)
    赋值 (., 真)
.否则
    赋值 (_启动窗口., 假)
    赋值 (., 假)
.如果结束


.子程序 _方块游戏_被选择, 空白型, , 
载入 (_启动窗口2, , 假)

.子程序 _控制面板_被选择, 空白型, , 
.如果真 (不等于 (是否已创建 (_启动窗口1), 真))
    载入 (_启动窗口1, , 假)
.如果真结束


.子程序 __启动窗口_托盘事件, 空白型, , 
.参数 操作类型, 整数型, , 

.如果真 (等于 (操作类型, 3))
    .如果真 (等于 (_启动窗口., 假))
        赋值 (., 假)
    .如果真结束
    弹出托盘菜单 ()
.如果真结束


.子程序 _标签2_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

run (_启动窗口..)

.子程序 __启动窗口_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (_启动窗口., 假)

.窗口程序集 窗口程序集3, , , 

.子程序 _按钮2_被单击, 空白型, , 
打开文件名 (0, “open”, “control”, “access.cpl”, “”, “SW_RESTORE”)

.子程序 _按钮9_被单击, 空白型, , 
打开文件名 (0, “open”, “control”, “appwiz.cpl”, “”, “SW_RESTORE”)

.子程序 _按钮13_被单击, 空白型, , 
打开文件名 (0, “open”, “control”, “timedate.cpl”, “”, “SW_RESTORE”)

.子程序 _按钮18_被单击, 空白型, , 
打开文件名 (0, “open”, “control”, “desk.cpl”, “”, “SW_RESTORE”)

.子程序 _按钮34_被单击, 空白型, , 
打开文件名 (0, “open”, “control”, “mlcfg32.cpl”, “”, “SW_RESTORE”)

.子程序 _按钮33_被单击, 空白型, , 
打开文件名 (0, “open”, “control”, “wgpocpl.cpl”, “”, “SW_RESTORE”)

.子程序 _按钮32_被单击, 空白型, , 
主设置 (“0”)

.子程序 _按钮29_被单击, 空白型, , 
主设置 (“1,,2”)

.子程序 _按钮28_被单击, 空白型, , 
主设置 (“2”)

.子程序 _按钮26_被单击, 空白型, , 
主设置 (“4”)

.子程序 _按钮25_被单击, 空白型, , 
打开文件名 (0, “open”, “control”, “modem.cpl”, “”, “SW_RESTORE”)

.子程序 _按钮24_被单击, 空白型, , 
打开文件名 (0, “open”, “control”, “mmsys.cpl”, “”, “SW_RESTORE”)

.子程序 _按钮19_被单击, 空白型, , 
打开文件名 (0, “open”, “control”, “netcpl.cpl”, “”, “SW_RESTORE”)

.子程序 _按钮41_被单击, 空白型, , 
打开文件名 (0, “open”, “control”, “password.cpl”, “”, “SW_RESTORE”)

.子程序 _按钮40_被单击, 空白型, , 
打开文件名 (0, “open”, “control”, “intl.cpl”, “”, “SW_RESTORE”)

.子程序 _按钮47_被单击, 空白型, , 
打开文件名 (0, “open”, “control”, “sysdm.cpl”, “”, “SW_RESTORE”)

.子程序 _按钮54_被单击, 空白型, , 
打开文件名 (0, “open”, “control”, “inetcpl.cpl”, “”, “SW_RESTORE”)

.子程序 _按钮3_被单击, 空白型, , 
销毁 ()

.子程序 _按钮1_被单击, 空白型, , 
运行 (“rundll32.exe shell32.dll,Control_RunDLL sysdm.cpl @1”, 假, )

.子程序 _按钮4_被单击, 空白型, , 
打开文件名 (0, “open”, “control”, “themes.cpl”, “”, “SW_RESTORE”)

.子程序 主设置, 空白型, , 
.参数 参数, 文本型, , 

运行 (相加 (“rundll32.exe shell32.dll,Control_RunDLL main.cpl @”, 参数), 假, )

.子程序 屏幕保护, 空白型, , 
运行 (“rundll32.exe desk.cpl,InstallScreenSaver”, 假, )

.子程序 _按钮5_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 ll, 文本型, , , 

赋值 (ll, 取文本注册表项 (“SuperRun”, “选项”, “user”, ))
.如果真 (不等于 (ll, “”))
    赋值 (cdw, 假)
    载入 (窗口2, , 真)
.如果真结束
.如果真 (等于 (cdw, 真))
    .如果 (等于 (输入框 (“                                             请输入新的用户身份验证密码                                                                                                               软件作者：金  宇                                                                        2001年8月1日”, “  请输入新的用户身份验证密码”, “***”, ll, 1), 真))
        .如果真 (不等于 (ll, “”))
            写注册表项 (“SuperRun”, “选项”, “user”, ll)
            赋值 (cdw, 假)
            .如果真 (等于 (是否已创建 (窗口1), 真))
                窗口1.销毁 ()
            .如果真结束
            
        .如果真结束
        
    .否则
        写注册表项 (“SuperRun”, “选项”, “user”, “”)
    .如果结束
    
.如果真结束


.子程序 _按钮6_被单击, 空白型, , 
打开文件名 (0, “open”, “control”, “”, “”, “SW_RESTORE”)

.子程序 _按钮7_被单击, 空白型, , 
.如果 (等于 (窗口1.., 1000))
    赋值 (窗口1.., “北京时间”)
    赋值 (窗口1.., 0)
    赋值 (., “开始时钟”)
.否则
    赋值 (窗口1.., 1000)
    赋值 (., “停止时钟”)
.如果结束


.窗口程序集 窗口程序集2, , , 

.程序集变量 name, 文本型, , , 
.程序集变量 sxz, 整数型, , , 
.程序集变量 lxname, 文本型, , , 
.程序集变量 menu, 逻辑型, , , 
.程序集变量 zml1, 逻辑型, , , 
.程序集变量 closetime, 小数型, , , 
.程序集变量 fd, 文本型, , , 
.子程序 _驱动器框1_驱动器被改变, 空白型, , 
赋值 (fd, .)
.如果真 (不等于 (取文本右边 (fd, 2), “:\”))
    赋值 (fd, 相加 (., “:\”))
.如果真结束
连续赋值 (fd, ., _启动窗口.., ., name)
改变驱动器 (.)
刷新 (假, 假)
赋值 (., 相加 (“当前目录下共有 ”, 数值到格式文本 (取项目数 (), , 假), “ 个文件”))

.子程序 _目录框1_目录被改变, 空白型, , 
赋值 (fd, .)
.如果真 (不等于 (取文本右边 (fd, 1), “\”))
    赋值 (fd, 相加 (fd, “\”))
.如果真结束
连续赋值 (fd, _启动窗口.., ., name)
改变目录 (name)
刷新 (假, 假)
赋值 (., 相加 (“当前目录下共有 ”, 数值到格式文本 (取项目数 (), , 假), “ 个文件”))

.子程序 _目录框1_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (等于 (键代码, 46))
    .如果真 (不等于 (取文本右边 (fd, 2), “:\”))
        .如果真 (等于 (信息框 (相加 (“是否删除（不可恢复）”, .), 4, “请确认”), 5))
            改变目录 (“..”)
            删除目录 (fd)
            赋值 (., 取当前目录 ())
            _目录框1_目录被改变 ()
        .如果真结束
        
    .如果真结束
    
.如果真结束


.子程序 _列表框1_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 rq1, 整数型, , , 
.局部变量 rq21, 整数型, , , 
.局部变量 ll, 逻辑型, , , 
.局部变量 ss, 整数型, , , 

.如果真 (等于 (menu, 假))
    .如果 (等于 (键代码, 13))
        run (_启动窗口..)
    .否则
        .如果真 (等于 (键代码, 46))
            赋值 (ss, 取已选择项目数 ())
            .如果真 (大于 (ss, 0))
                .如果 (大于 (ss, 1))
                    赋值 (rq1, 信息框 (“   请问是否全部删除所选择的文件（不可恢复）”, 3, “请确认”))
                    .如果 (等于 (rq1, 5))
                        .计次循环首 (取项目数 (), rq21)
                            .如果真 (等于 (相减 (rq21, 1).是否被选择 (), 真))
                                .如果 (等于 (zml1, 真))
                                    删除文件 (相减 (rq21, 1).取项目文本 ())
                                    赋值 (., 相减 (rq21, 1).取项目文本 ())
                                .否则
                                    删除文件 (相加 (fd, 相减 (rq21, 1).取项目文本 ()))
                                .如果结束
                                赋值 (ll, 真)
                            .如果真结束
                            
                        .计次循环尾 ()
                    .否则
                        .如果真 (等于 (rq1, 6))
                            .计次循环首 (取项目数 (), rq21)
                                .如果真 (等于 (相减 (rq21, 1).是否被选择 (), 真))
                                    赋值 (rq1, 信息框 (相加 (“   请问是否删除（不可恢复）”, 相减 (rq21, 1).取项目文本 ()), 3, “请确认”))
                                    .如果 (等于 (rq1, 5))
                                        .如果 (等于 (zml1, 真))
                                            删除文件 (相减 (rq21, 1).取项目文本 ())
                                        .否则
                                            删除文件 (相加 (fd, 相减 (rq21, 1).取项目文本 ()))
                                        .如果结束
                                        赋值 (ll, 真)
                                    .否则
                                        .如果真 (等于 (rq1, 6))
                                            到循环尾 ()
                                        .如果真结束
                                        
                                    .如果结束
                                    
                                .如果真结束
                                
                            .计次循环尾 ()
                        .如果真结束
                        
                    .如果结束
                    
                .否则
                    赋值 (rq1, 信息框 (“   请问是否删除所选择的文件（不可恢复）”, 4, “请确认”))
                    .如果真 (等于 (rq1, 5))
                        .如果 (等于 (zml1, 真))
                            删除文件 (取焦点项目 ().取项目文本 ())
                        .否则
                            删除文件 (相加 (fd, 取焦点项目 ().取项目文本 ()))
                        .如果结束
                        赋值 (ll, 真)
                    .如果真结束
                    
                .如果结束
                
            .如果真结束
            .如果真 (等于 (ll, 真))
                .如果 (等于 (zml1, 真))
                    刷新 (真, 真)
                .否则
                    刷新 (真, 假)
                .如果结束
                
            .如果真结束
            
        .如果真结束
        
    .如果结束
    
.如果真结束


.子程序 _列表框1_列表项被选择, 空白型, , 
.局部变量 rq1, 文本型, , , 
.局部变量 tpk, 整数型, , , 
.局部变量 tpg, 整数型, , , 

禁止重画 ()
.如果真 (等于 (menu, 假))
    .如果 (等于 (zml1, 真))
        赋值 (., 取焦点项目 ().取项目文本 ())
    .否则
        赋值 (., 相加 (fd, 取焦点项目 ().取项目文本 ()))
    .如果结束
    .如果真 (等于 (., 真))
        赋值 (rq1, 到大写 (取文本右边 (., 4)))
        .如果真 (或者 (等于 (rq1, “.PCX”), 等于 (rq1, “.BMP”), 等于 (rq1, “.JPG”), 等于 (rq1, “.GIF”), 等于 (rq1, “.ICO”), 等于 (rq1, “.DIB”), 等于 (rq1, “.CUR”), 等于 (rq1, “JPEG”), 等于 (rq1, “.QLP”)))
            .如果真 (不等于 (是否已创建 (窗口3), 真))
                载入 (窗口3, , 假)
            .如果真结束
            赋值 (窗口3.., 读入文件 (.))
            赋值 (rq2, 载入图片 (窗口3..))
            赋值 (窗口3.., 窗口3.取图片宽度 (., rq2))
            赋值 (窗口3.., 窗口3.取图片高度 (., rq2))
            赋值 (窗口3., 相加 (., “ 图片宽:”, 到文本 (窗口3..), “像素，高:”, 到文本 (窗口3..), “像素。”))
            赋值 (tname, .)
        .如果真结束
        
    .如果真结束
    连续赋值 (., _启动窗口.., name)
    赋值 (., 相加 (“建立于”, 时间到文本 (取文件时间 (.), )))
    赋值 (sxz, 取文件属性 (.))
    .如果 (不等于 (位与 (sxz, 1), 0))
        赋值 (., #黑色)
    .否则
        赋值 (., #浅灰)
    .如果结束
    .如果 (不等于 (位与 (sxz, 4), 0))
        赋值 (., #黑色)
    .否则
        赋值 (., #浅灰)
    .如果结束
    .如果 (不等于 (位与 (sxz, 2), 0))
        赋值 (., #黑色)
    .否则
        赋值 (., #浅灰)
    .如果结束
    .如果 (不等于 (位与 (sxz, 32), 0))
        赋值 (., #黑色)
    .否则
        赋值 (., #浅灰)
    .如果结束
    si ()
.如果真结束
允许重画 ()

.子程序 si, 空白型, , 
.局部变量 ld, 整数型, , , 
.局部变量 ld1, 整数型, , , 
.局部变量 ld2, 整数型, , , 

.计次循环首 (取项目数 (), ld1)
    .如果真 (等于 (相减 (ld1, 1).是否被选择 (), 真))
        赋值 (ld2, 相减 (ld1, 1).取项目数值 ())
        .如果真 (等于 (ld2, 0))
            .如果 (等于 (zml1, 真))
                赋值 (ld2, 取文件尺寸 (相减 (ld1, 1).取项目文本 ()))
            .否则
                赋值 (ld2, 取文件尺寸 (相加 (fd, 相减 (ld1, 1).取项目文本 ())))
            .如果结束
            相减 (ld1, 1).置项目数值 (ld2)
        .如果真结束
        赋值 (ld, 相加 (ld, ld2))
        赋值 (., 相加 (“文件 ”, 数值到格式文本 (取已选择项目数 (), , 假), “， 字节 ”, 数值到格式文本 (ld, , 真)))
    .如果真结束
    
.计次循环尾 ()

.子程序 _列表框1_双击选择, 空白型, , 
.局部变量 rq1, 整数型, , , 

.如果 (等于 (menu, 真))
    赋值 (rq1, 取焦点项目 ())
    .如果 (等于 (_启动窗口.打开 (.), 真))
        rq1.置项目文本 (_启动窗口..)
        写注册表项 (“SuperRun”, “选项”, 到文本 (相加 (rq1, 1)), _启动窗口..)
    .否则
        rq1.置项目文本 (“[空]”)
        删除注册表项 (“SuperRun”, “选项”, 到文本 (相加 (rq1, 1)))
    .如果结束
    csh ()
.否则
    run (.)
.如果结束


.子程序 _编辑框1_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 rq1, 整数型, , , 
.局部变量 hh, 整数型, , , 
.局部变量 rq2, 整数型, , , 
.局部变量 files4, 文本型, , , 
.局部变量 filelj, 文本型, , , 
.局部变量 flj, 文本型, , , 

.如果真 (等于 (键代码, 13))
    .如果真 (不等于 (., “”))
        赋值 (files4, .)
        .如果真 (等于 (取文本右边 (files4, 1), “\”))
            赋值 (files4, 取文本左边 (files4, 相减 (取文本长度 (files4), 1)))
        .如果真结束
        .如果真 (不等于 (取文本右边 (files4, 1), “:”))
            赋值 (flj, 寻找文件 (files4, #子目录))
            .如果真 (等于 (flj, “”))
                .如果真 (等于 (创建目录 (files4), 假))
                    信息框 (“错误路径”, 0, “提示”)
                    返回 (假)
                .如果真结束
                
            .如果真结束
            
        .如果真结束
        .如果真 (不等于 (取文本右边 (files4, 1), “\”))
            赋值 (files4, 相加 (files4, “\”))
        .如果真结束
        赋值 (rq1, 信息框 (“   请问是否拷贝文件？ (Y) 拷贝,(N) 移动”, 3, “请确认”))
        .如果 (等于 (rq1, 5))
            .如果 (不等于 (取文本右边 (name, 1), “\”))
                .计次循环首 (取项目数 (), rq2)
                    .如果真 (等于 (相减 (rq2, 1).是否被选择 (), 真))
                        .如果 (等于 (zml1, 真))
                            赋值 (flj, 取文本右边 (相减 (rq2, 1).取项目文本 (), 相减 (取文本长度 (相减 (rq2, 1).取项目文本 ()), 倒找文本 (相减 (rq2, 1).取项目文本 (), “\”, , 假))))
                            赋值 (filelj, 寻找文件 (相加 (files4, flj), ))
                            .如果 (不等于 (filelj, “”))
                                赋值 (rq1, 信息框 (相加 (“请确认是否进行覆盖？”, 字符 (13), 字符 (10), “ 目标文件为”, 数值到格式文本 (取文件尺寸 (相加 (files4, flj)), , 假), “字节”, 字符 (13), 字符 (10), “   原文件为”, 数值到格式文本 (取文件尺寸 (相减 (rq2, 1).取项目文本 ()), , 真), “字节”), 3, 相加 (“提示：已有  ”, filelj, “  这个文件”)))
                                .如果 (等于 (rq1, 5))
                                    .如果真 (不等于 (复制文件 (相加 (fd, 相减 (rq2, 1).取项目文本 ()), 相加 (files4, 相减 (rq2, 1).取项目文本 ())), 真))
                                        跳出循环 ()
                                    .如果真结束
                                    
                                .否则
                                    .如果 (等于 (rq1, 6))
                                        到循环尾 ()
                                    .否则
                                        .如果真 (等于 (rq1, 1))
                                            跳出循环 ()
                                        .如果真结束
                                        
                                    .如果结束
                                    
                                .如果结束
                                
                            .否则
                                .如果真 (不等于 (复制文件 (相减 (rq2, 1).取项目文本 (), 相加 (files4, flj)), 真))
                                    跳出循环 ()
                                .如果真结束
                                
                            .如果结束
                            
                        .否则
                            赋值 (filelj, 寻找文件 (相加 (files4, 相减 (rq2, 1).取项目文本 ()), ))
                            .如果 (不等于 (filelj, “”))
                                赋值 (rq1, 信息框 (相加 (“请确认是否进行覆盖？”, 字符 (13), 字符 (10), “ 目标文件为”, 数值到格式文本 (取文件尺寸 (相加 (files4, 相减 (rq2, 1).取项目文本 ())), , 真), “字节”, 字符 (13), 字符 (10), “   原文件为”, 数值到格式文本 (取文件尺寸 (相加 (fd, 相减 (rq2, 1).取项目文本 ())), , 真), “字节”), 3, 相加 (“提示：已有  ”, filelj, “  这个文件”)))
                                .如果 (等于 (rq1, 5))
                                    .如果真 (不等于 (复制文件 (相加 (fd, 相减 (rq2, 1).取项目文本 ()), 相加 (files4, 相减 (rq2, 1).取项目文本 ())), 真))
                                        跳出循环 ()
                                    .如果真结束
                                    
                                .否则
                                    .如果 (等于 (rq1, 6))
                                        到循环尾 ()
                                    .否则
                                        .如果真 (等于 (rq1, 1))
                                            跳出循环 ()
                                        .如果真结束
                                        
                                    .如果结束
                                    
                                .如果结束
                                
                            .否则
                                .如果真 (不等于 (复制文件 (相加 (fd, 相减 (rq2, 1).取项目文本 ()), 相加 (files4, 相减 (rq2, 1).取项目文本 ())), 真))
                                    跳出循环 ()
                                .如果真结束
                                
                            .如果结束
                            
                        .如果结束
                        
                    .如果真结束
                    
                .计次循环尾 ()
            .否则
                .计次循环首 (取项目数 (), rq2)
                    赋值 (filelj, 寻找文件 (相加 (files4, 相减 (rq2, 1).取项目文本 ()), ))
                    .如果 (不等于 (filelj, “”))
                        赋值 (rq1, 信息框 (相加 (“请确认是否进行覆盖？”, 字符 (13), 字符 (10), “ 目标文件为”, 数值到格式文本 (取文件尺寸 (相加 (files4, 相减 (rq2, 1).取项目文本 ())), , 真), “字节”, 字符 (13), 字符 (10), “   原文件为”, 数值到格式文本 (取文件尺寸 (相加 (fd, 相减 (rq2, 1).取项目文本 ())), , 真), “字节”), 3, 相加 (“提示：已有  ”, filelj, “  这个文件”)))
                        .如果 (等于 (rq1, 5))
                            复制文件 (相加 (fd, 相减 (rq2, 1).取项目文本 ()), 相加 (files4, 相减 (rq2, 1).取项目文本 ()))
                        .否则
                            .如果 (等于 (rq1, 6))
                                到循环尾 ()
                            .否则
                                .如果真 (等于 (rq1, 1))
                                    跳出循环 ()
                                .如果真结束
                                
                            .如果结束
                            
                        .如果结束
                        
                    .否则
                        .如果真 (不等于 (复制文件 (相加 (fd, 相减 (rq2, 1).取项目文本 ()), 相加 (files4, 相减 (rq2, 1).取项目文本 ())), 真))
                            跳出循环 ()
                        .如果真结束
                        
                    .如果结束
                    
                .计次循环尾 ()
            .如果结束
            
        .否则
            .如果真 (等于 (rq1, 6))
                .如果 (不等于 (取文本右边 (name, 1), “\”))
                    .计次循环首 (取项目数 (), rq2)
                        .如果真 (等于 (相减 (rq2, 1).是否被选择 (), 真))
                            .如果 (等于 (zml1, 真))
                                赋值 (flj, 取文本右边 (相减 (rq2, 1).取项目文本 (), 相减 (取文本长度 (相减 (rq2, 1).取项目文本 ()), 倒找文本 (相减 (rq2, 1).取项目文本 (), “\”, , 假))))
                                赋值 (filelj, 寻找文件 (相加 (files4, flj), ))
                                .如果 (不等于 (filelj, “”))
                                    赋值 (rq1, 信息框 (相加 (“请确认是否进行覆盖？”, 字符 (13), 字符 (10), “ 目标文件为”, 数值到格式文本 (取文件尺寸 (相加 (files4, flj)), , 假), “字节”, 字符 (13), 字符 (10), “   原文件为”, 数值到格式文本 (取文件尺寸 (相减 (rq2, 1).取项目文本 ()), , 真), “字节”), 3, 相加 (“提示：已有  ”, filelj, “  这个文件”)))
                                    .如果 (等于 (rq1, 5))
                                        .如果真 (不等于 (移动文件 (相加 (fd, 相减 (rq2, 1).取项目文本 ()), 相加 (files4, 相减 (rq2, 1).取项目文本 ())), 真))
                                            跳出循环 ()
                                        .如果真结束
                                        
                                    .否则
                                        .如果 (等于 (rq1, 6))
                                            到循环尾 ()
                                        .否则
                                            .如果真 (等于 (rq1, 1))
                                                跳出循环 ()
                                            .如果真结束
                                            
                                        .如果结束
                                        
                                    .如果结束
                                    
                                .否则
                                    .如果真 (不等于 (移动文件 (相减 (rq2, 1).取项目文本 (), 相加 (files4, flj)), 真))
                                        跳出循环 ()
                                    .如果真结束
                                    
                                .如果结束
                                
                            .否则
                                赋值 (filelj, 寻找文件 (相加 (files4, 相减 (rq2, 1).取项目文本 ()), ))
                                .如果 (不等于 (filelj, “”))
                                    赋值 (rq1, 信息框 (相加 (“请确认是否进行覆盖？”, 字符 (13), 字符 (10), “ 目标文件为”, 数值到格式文本 (取文件尺寸 (相加 (files4, 相减 (rq2, 1).取项目文本 ())), , 真), “字节”, 字符 (13), 字符 (10), “   原文件为”, 数值到格式文本 (取文件尺寸 (相加 (fd, 相减 (rq2, 1).取项目文本 ())), , 真), “字节”), 3, 相加 (“提示：已有  ”, filelj, “  这个文件”)))
                                    .如果 (等于 (rq1, 5))
                                        .如果真 (不等于 (移动文件 (相加 (fd, 相减 (rq2, 1).取项目文本 ()), 相加 (files4, 相减 (rq2, 1).取项目文本 ())), 真))
                                            跳出循环 ()
                                        .如果真结束
                                        
                                    .否则
                                        .如果 (等于 (rq1, 6))
                                            到循环尾 ()
                                        .否则
                                            .如果真 (等于 (rq1, 1))
                                                跳出循环 ()
                                            .如果真结束
                                            
                                        .如果结束
                                        
                                    .如果结束
                                    
                                .否则
                                    .如果真 (不等于 (移动文件 (相加 (fd, 相减 (rq2, 1).取项目文本 ()), 相加 (files4, 相减 (rq2, 1).取项目文本 ())), 真))
                                        跳出循环 ()
                                    .如果真结束
                                    
                                .如果结束
                                
                            .如果结束
                            
                        .如果真结束
                        
                    .计次循环尾 ()
                .否则
                    .计次循环首 (取项目数 (), rq2)
                        赋值 (filelj, 寻找文件 (相加 (files4, 相减 (rq2, 1).取项目文本 ()), ))
                        .如果 (不等于 (filelj, “”))
                            赋值 (rq1, 信息框 (相加 (“请确认是否进行覆盖？”, 字符 (13), 字符 (10), “ 目标文件为”, 数值到格式文本 (取文件尺寸 (相加 (files4, 相减 (rq2, 1).取项目文本 ())), , 真), “字节”, 字符 (13), 字符 (10), “   原文件为”, 数值到格式文本 (取文件尺寸 (相加 (fd, 相减 (rq2, 1).取项目文本 ())), , 真), “字节”), 3, 相加 (“提示：已有  ”, filelj, “  这个文件”)))
                            .如果 (等于 (rq1, 5))
                                .如果真 (不等于 (移动文件 (相加 (fd, 相减 (rq2, 1).取项目文本 ()), 相加 (files4, 相减 (rq2, 1).取项目文本 ())), 真))
                                    跳出循环 ()
                                .如果真结束
                                
                            .否则
                                .如果 (等于 (rq1, 6))
                                    到循环尾 ()
                                .否则
                                    .如果真 (等于 (rq1, 1))
                                        跳出循环 ()
                                    .如果真结束
                                    
                                .如果结束
                                
                            .如果结束
                            
                        .否则
                            .如果真 (不等于 (移动文件 (相加 (fd, 相减 (rq2, 1).取项目文本 ()), 相加 (files4, 相减 (rq2, 1).取项目文本 ())), 真))
                                跳出循环 ()
                            .如果真结束
                            
                        .如果结束
                        
                    .计次循环尾 ()
                .如果结束
                .如果 (等于 (zml1, 真))
                    刷新 (真, 真)
                .否则
                    刷新 (真, 假)
                .如果结束
                
            .如果真结束
            
        .如果结束
        
    .如果真结束
    
.如果真结束


.子程序 _标签3_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 rq1, 整数型, , , 

.如果真 (不等于 (取文本右边 (., 1), “\”))
    .如果真 (大于 (取已选择项目数 (), 0))
        .如果 (等于 (., #黑色))
            .计次循环首 (取项目数 (), rq1)
                .如果真 (等于 (相减 (rq1, 1).是否被选择 (), 真))
                    .如果 (等于 (zml1, 真))
                        置文件属性 (相减 (rq1, 1).取项目文本 (), 位与 (sxz, 38))
                    .否则
                        置文件属性 (相加 (fd, 相减 (rq1, 1).取项目文本 ()), 位与 (sxz, 38))
                    .如果结束
                    
                .如果真结束
                
            .计次循环尾 ()
            赋值 (., #浅灰)
        .否则
            .计次循环首 (取项目数 (), rq1)
                .如果真 (等于 (相减 (rq1, 1).是否被选择 (), 真))
                    .如果 (等于 (zml1, 真))
                        置文件属性 (相减 (rq1, 1).取项目文本 (), 位或 (sxz, 1))
                    .否则
                        置文件属性 (相加 (fd, 相减 (rq1, 1).取项目文本 ()), 位或 (sxz, 1))
                    .如果结束
                    
                .如果真结束
                
            .计次循环尾 ()
            赋值 (., #黑色)
        .如果结束
        
    .如果真结束
    
.如果真结束


.子程序 _标签4_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 rq1, 整数型, , , 

.如果真 (不等于 (取文本右边 (., 1), “\”))
    .如果真 (大于 (取已选择项目数 (), 0))
        .如果 (等于 (., #黑色))
            .计次循环首 (取项目数 (), rq1)
                .如果真 (等于 (相减 (rq1, 1).是否被选择 (), 真))
                    .如果 (等于 (zml1, 真))
                        置文件属性 (相减 (rq1, 1).取项目文本 (), 位与 (sxz, 35))
                    .否则
                        置文件属性 (相加 (fd, 相减 (rq1, 1).取项目文本 ()), 位与 (sxz, 35))
                    .如果结束
                    
                .如果真结束
                
            .计次循环尾 ()
            赋值 (., #浅灰)
        .否则
            .计次循环首 (取项目数 (), rq1)
                .如果真 (等于 (相减 (rq1, 1).是否被选择 (), 真))
                    .如果 (等于 (zml1, 真))
                        置文件属性 (相加 (fd, 相减 (rq1, 1).取项目文本 ()), 位或 (sxz, 4))
                    .否则
                        置文件属性 (相减 (rq1, 1).取项目文本 (), 位或 (sxz, 4))
                    .如果结束
                    
                .如果真结束
                
            .计次循环尾 ()
            赋值 (., #黑色)
        .如果结束
        
    .如果真结束
    
.如果真结束


.子程序 _标签5_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 rq1, 整数型, , , 

.如果真 (不等于 (取文本右边 (., 1), “\”))
    .如果真 (大于 (取已选择项目数 (), 0))
        .如果 (等于 (., #黑色))
            .计次循环首 (取项目数 (), rq1)
                .如果真 (等于 (相减 (rq1, 1).是否被选择 (), 真))
                    .如果 (等于 (zml1, 真))
                        置文件属性 (相减 (rq1, 1).取项目文本 (), 位与 (sxz, 37))
                    .否则
                        置文件属性 (相加 (fd, 相减 (rq1, 1).取项目文本 ()), 位与 (sxz, 37))
                    .如果结束
                    
                .如果真结束
                
            .计次循环尾 ()
            赋值 (., #浅灰)
        .否则
            .计次循环首 (取项目数 (), rq1)
                .如果真 (等于 (相减 (rq1, 1).是否被选择 (), 真))
                    .如果 (等于 (zml1, 真))
                        置文件属性 (相减 (rq1, 1).取项目文本 (), 位或 (sxz, 2))
                    .否则
                        置文件属性 (相加 (fd, 相减 (rq1, 1).取项目文本 ()), 位或 (sxz, 2))
                    .如果结束
                    
                .如果真结束
                
            .计次循环尾 ()
            赋值 (., #黑色)
        .如果结束
        
    .如果真结束
    
.如果真结束


.子程序 _标签6_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 rq1, 整数型, , , 

.如果真 (不等于 (取文本右边 (., 1), “\”))
    .如果真 (大于 (取已选择项目数 (), 0))
        .如果 (等于 (., #黑色))
            .计次循环首 (取项目数 (), rq1)
                .如果真 (等于 (相减 (rq1, 1).是否被选择 (), 真))
                    .如果 (等于 (zml1, 真))
                        置文件属性 (相减 (rq1, 1).取项目文本 (), 位与 (sxz, 7))
                    .否则
                        置文件属性 (相加 (fd, 相减 (rq1, 1).取项目文本 ()), 位与 (sxz, 7))
                    .如果结束
                    
                .如果真结束
                
            .计次循环尾 ()
            赋值 (., #浅灰)
        .否则
            .计次循环首 (取项目数 (), rq1)
                .如果真 (等于 (相减 (rq1, 1).是否被选择 (), 真))
                    .如果 (等于 (zml1, 真))
                        置文件属性 (相减 (rq1, 1).取项目文本 (), 位或 (sxz, 32))
                    .否则
                        置文件属性 (相加 (fd, 相减 (rq1, 1).取项目文本 ()), 位或 (sxz, 32))
                    .如果结束
                    
                .如果真结束
                
            .计次循环尾 ()
            赋值 (., #黑色)
        .如果结束
        
    .如果真结束
    
.如果真结束


.子程序 _重新命名_被选择, 空白型, , 
.局部变量 oldname, 文本型, , , 
.局部变量 files4, 文本型, , , 
.局部变量 filelj, 文本型, , , 
.局部变量 rq1, 整数型, , , 

.如果真 (等于 (menu, 假))
    .如果真 (不等于 (., “”))
        .如果真 (不等于 (取文本右边 (., 1), “:”))
            .如果真 (不等于 (取文本右边 (., 2), “:\”))
                .如果真 (等于 (输入框 (“                                                              软件作者：金  宇                                                                        2001年8月1日”, “  请输入新的文件名或者目录名”, ., oldname, 1), 真))
                    .如果 (不等于 (取文本右边 (., 1), “\”))
                        赋值 (filelj, 寻找文件 (oldname, ))
                        .如果 (不等于 (filelj, “”))
                            赋值 (rq1, 信息框 (相加 (“提示：已有  ”, filelj, “  这个文件”), 0, ))
                        .否则
                            .如果真 (等于 (文件更名 (., oldname), 真))
                                .如果 (等于 (zml1, 真))
                                    刷新 (真, 真)
                                .否则
                                    刷新 (真, 假)
                                .如果结束
                                
                            .如果真结束
                            
                        .如果结束
                        
                    .否则
                        .如果真 (等于 (取文本右边 (oldname, 1), “\”))
                            赋值 (oldname, 取文本左边 (oldname, 相减 (取文本长度 (oldname), 1)))
                        .如果真结束
                        赋值 (filelj, 寻找文件 (oldname, #子目录))
                        .如果 (不等于 (filelj, “”))
                            赋值 (rq1, 信息框 (相加 (“提示：已有  ”, filelj, “  这个目录”), 0, ))
                        .否则
                            改变目录 (“..”)
                            .如果真 (等于 (文件更名 (., oldname), 真))
                                赋值 (., oldname)
                                改变目录 (oldname)
                                刷新 (假, 假)
                            .如果真结束
                            
                        .如果结束
                        
                    .如果结束
                    
                .如果真结束
                
            .如果真结束
            
        .如果真结束
        
    .如果真结束
    
.如果真结束


.子程序 _窗口1_创建完毕, 空白型, , 
赋值 (lxname, “*.*”)
赋值 (fd, .)
.如果真 (不等于 (取文本右边 (fd, 1), “\”))
    赋值 (fd, 相加 (fd, “\”))
.如果真结束
赋值 (., fd)
刷新 (假, 假)
csh ()
赋值 (., 1000)
赋值 (., 时间到文本 (取现行时间 (), 3))

.子程序 ss, 空白型, , 
.参数 ff, 文本型, , 
.参数 zml, 逻辑型, , 

.局部变量 files, 文本型, , , 
.局部变量 rq1, 整数型, , , 

赋值 (., 真)
.如果真 (不等于 (取文本右边 (ff, 1), “\”))
    赋值 (ff, 相加 (ff, “\”))
.如果真结束
赋值 (files, 寻找文件 (相加 (ff, lxname), ))
.判断循环首 (不等于 (files, “”))
    .如果 (等于 (zml, 真))
        赋值 (zml1, 真)
        相加 (ff, files).加入项目 ()
    .否则
        files.加入项目 ()
        赋值 (zml1, 假)
    .如果结束
    赋值 (files, 寻找文件 ())
.判断循环尾 ()
.如果真 (等于 (zml, 真))
    赋值 (files, 寻找文件 (相加 (ff, “*.*”), #子目录))
    .判断循环首 (不等于 (files, “”))
        .如果真 (不等于 (取文本左边 (files, 1), “.”))
            ss (相加 (ff, files), 真)
        .如果真结束
        赋值 (files, 寻找文件 (#子目录))
    .判断循环尾 ()
.如果真结束


.子程序 _删除文件_被选择, 空白型, , 
_列表框1_按下某键 (46, 0)

.子程序 _建立目录_被选择, 空白型, , 
.局部变量 mlname, 文本型, , , 

赋值 (mlname, fd)
.如果真 (不等于 (., “”))
    .如果真 (等于 (输入框 (“                                             请输入要建立的目录名称                                                                                                               软件作者：金  宇                                                                        2001年8月1日”, “  请输入要建立的目录名”, mlname, mlname, 1), 真))
        创建目录 (mlname)
        赋值 (., 取当前目录 ())
    .如果真结束
    
.如果真结束


.子程序 _搜索文件_被选择, 空白型, , 
.局部变量 bk2, 文本型, , , 

赋值 (bk2, fd)
.如果真 (等于 (输入框 (相加 (字符 (10), “   当前目录位于  ”, bk2, 字符 (10), 字符 (10), “           请输入要搜索的文件”), “  请输入要搜索的文件”, lxname, lxname, 1), 真))
    刷新 (真, 真)
.如果真结束


.子程序 _删除目录_被选择, 空白型, , 
_目录框1_按下某键 (46, 0)

.子程序 _全部选择_被选择, 空白型, , 
.局部变量 rq1, 整数型, , , 

.计次循环首 (窗口1.取项目数 (.), rq1)
    窗口1.选择项目 (., 相减 (rq1, 1), 真)
.计次循环尾 ()
si ()

.子程序 _列表框1_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

弹出菜单 ()

.子程序 _单列显示_被选择, 空白型, , 
.局部变量 name, 文本型, , "0", 
.局部变量 rq1, 整数型, , , 

清除数组 (name)
.计次循环首 (取项目数 (), rq1)
    加入成员 (name, 相减 (rq1, 1).取项目文本 ())
.计次循环尾 ()
.如果真 (等于 (menu, 假))
    .如果 (等于 (., 假))
        赋值 (., 真)
        赋值 (., 假)
    .否则
        赋值 (., 假)
        赋值 (., 真)
    .如果结束
    .计次循环首 (取数组成员数 (name), rq1)
        name.加入项目 ( [rq1], )
    .计次循环尾 ()
    清除数组 (name)
.如果真结束


.子程序 _窗口1_尺寸被改变, 空白型, , 
-1.移动 (-1, 相减 (窗口1., 205), 相减 (窗口1., 27))
-1.移动 (相减 (窗口1., 26), 相减 (窗口1., 198), -1)
-1.移动 (相减 (窗口1., 45), -1, -1)
-1.移动 (相减 (窗口1., 45), -1, -1)
-1.移动 (相减 (窗口1., 45), -1, -1)
-1.移动 (相减 (窗口1., 45), -1, -1)
-1.移动 (相减 (窗口1., 45), -1, -1)
-1.移动 (相减 (窗口1., 83), -1, -1)
-1.移动 (相减 (窗口1., 64), -1, -1)
-1.移动 (-1, -1, 相减 (窗口1., 125))
-1.移动 (相减 (窗口1., 26), -1, -1)
-1.移动 (相减 (窗口1., 26), -1, -1)
.如果真 (大于 (窗口1., 424))
.如果真结束
.如果真 (不等于 (窗口1., “”))
    赋值 (窗口1., “”)
.如果真结束


.子程序 _选择列表_被选择, 空白型, , 
.如果真 (不等于 (., “”))
    运行 (相加 (“rundll32.exe shell32.dll,OpenAs_RunDLL ”, .), 假, )
.如果真结束


.子程序 _选择1_被选择, 空白型, , 
.如果真 (等于 (_启动窗口.打开 (.), 真))
    打开文件名 (0, “open”, _启动窗口.., ., “”, “SW_RESTORE”)
.如果真结束


.子程序 _快速浏览_被选择, 空白型, , 
.如果 (等于 (., 假))
    赋值 (., 真)
.否则
    赋值 (., 假)
.如果结束


.子程序 _应用1_被选择, 空白型, , 
.如果真 (不等于 (., “[空]”))
    run (.)
.如果真结束


.子程序 _应用3_被选择, 空白型, , 
.如果真 (不等于 (., “[空]”))
    run (.)
.如果真结束


.子程序 _应用2_被选择, 空白型, , 
.如果真 (不等于 (., “[空]”))
    run (.)
.如果真结束


.子程序 _应用4_被选择, 空白型, , 
.如果真 (不等于 (., “[空]”))
    run (.)
.如果真结束


.子程序 _应用5_被选择, 空白型, , 
.如果真 (不等于 (., “[空]”))
    run (.)
.如果真结束


.子程序 _应用6_被选择, 空白型, , 
.如果真 (不等于 (., “[空]”))
    run (.)
.如果真结束


.子程序 _应用7_被选择, 空白型, , 
.如果真 (不等于 (., “[空]”))
    run (.)
.如果真结束


.子程序 _应用8_被选择, 空白型, , 
.如果真 (不等于 (., “[空]”))
    run (.)
.如果真结束


.子程序 _应用9_被选择, 空白型, , 
.如果真 (不等于 (., “[空]”))
    run (.)
.如果真结束


.子程序 _应用10_被选择, 空白型, , 
.如果真 (不等于 (., “[空]”))
    run (.)
.如果真结束


.子程序 _应用11_被选择, 空白型, , 
.如果真 (不等于 (., “[空]”))
    run (.)
.如果真结束


.子程序 _应用12_被选择, 空白型, , 
.如果真 (不等于 (., “[空]”))
    run (.)
.如果真结束


.子程序 _应用13_被选择, 空白型, , 
.如果真 (不等于 (., “[空]”))
    run (.)
.如果真结束


.子程序 _应用14_被选择, 空白型, , 
.如果真 (不等于 (., “[空]”))
    run (.)
.如果真结束


.子程序 csh, 空白型, , 
赋值 (., 取文本注册表项 (“SuperRun”, “选项”, “1”, “[空]”))
赋值 (., 取文本注册表项 (“SuperRun”, “选项”, “2”, “[空]”))
赋值 (., 取文本注册表项 (“SuperRun”, “选项”, “3”, “[空]”))
赋值 (., 取文本注册表项 (“SuperRun”, “选项”, “4”, “[空]”))
赋值 (., 取文本注册表项 (“SuperRun”, “选项”, “5”, “[空]”))
赋值 (., 取文本注册表项 (“SuperRun”, “选项”, “6”, “[空]”))
赋值 (., 取文本注册表项 (“SuperRun”, “选项”, “7”, “[空]”))
赋值 (., 取文本注册表项 (“SuperRun”, “选项”, “8”, “[空]”))
赋值 (., 取文本注册表项 (“SuperRun”, “选项”, “9”, “[空]”))
赋值 (., 取文本注册表项 (“SuperRun”, “选项”, “10”, “[空]”))
赋值 (., 取文本注册表项 (“SuperRun”, “选项”, “11”, “[空]”))
赋值 (., 取文本注册表项 (“SuperRun”, “选项”, “12”, “[空]”))
赋值 (., 取文本注册表项 (“SuperRun”, “选项”, “13”, “[空]”))
赋值 (., 取文本注册表项 (“SuperRun”, “选项”, “14”, “[空]”))

.子程序 _重新启动_被选择, 空白型, , 
关机 (10, 0)

.子程序 _快速重启_被选择, 空白型, , 
关机 (0, 0)
结束 ()

.子程序 _自动关机_被选择, 空白型, , 
.局部变量 ll, 文本型, , , 

.如果 (等于 (输入框 (“                                             请输入系统自动关机时间，单位：小时。                                                                                                                 软件作者：金  宇                                                                        2001年8月1日”, “  设置系统自动关机”, ll, ll, 1), 真))
    .如果真 (不等于 (ll, “”))
        赋值 (closetime, 相乘 (到数值 (ll), 3600))
        .如果真 (大于 (closetime, 0))
            赋值 (., 1000)
        .如果真结束
        
    .如果真结束
    
.否则
    赋值 (., 0)
.如果结束


.子程序 _时钟1_周期事件, 空白型, , 
.如果 (大于 (closetime, 1))
    赋值 (closetime, 相减 (closetime, 1))
.否则
    关机 (13, 0)
.如果结束


.子程序 _标签8_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

弹出菜单 (相加 (窗口1., 25))

.子程序 _标签14_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (窗口1., 2)
赋值 (窗口1., “作者 金宇 (双击打开窗口)”)

.子程序 _标签15_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果 (等于 (., “1”))
    赋值 (窗口1., 3)
    赋值 (_启动窗口., 相加 (., 48))
    赋值 (., “2”)
.否则
    赋值 (窗口1., 0)
    赋值 (窗口1., 423)
    赋值 (窗口1., 377)
    赋值 (窗口1., 170)
    赋值 (., “1”)
.如果结束


.子程序 _标签17_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果 (等于 (zml1, 真))
    刷新 (真, 真)
.否则
    刷新 (真, 假)
.如果结束


.子程序 刷新, 空白型, , 
.参数 ll, 逻辑型, , 
.参数 l1, 逻辑型, , 

赋值 (menu, 假)
清空 ()
ss (fd, l1)
.如果真 (等于 (ll, 真))
    连续赋值 (fd, ., _启动窗口..)
.如果真结束
赋值 (., 相加 (“当前目录下共有 ”, 数值到格式文本 (取项目数 (), , 假), “ 个文件”))

.子程序 _标签18_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

销毁 ()

.子程序 _打开目录_被选择, 空白型, , 
run (.)

.子程序 _标签11_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

弹出菜单 ()

.子程序 _标签10_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

窗口1.发送信息 (274, 61458, 0)

.子程序 _标签19_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 rq1, 整数型, , , 
.局部变量 files, 文本型, , "0", 
.局部变量 yname, 文本型, , , 

.如果真 (不等于 (menu, 真))
    赋值 (rq1, 倒找文本 (lxname, “.”, , 假))
    .如果 (不等于 (rq1, -1))
        赋值 (yname, 到大写 (取文本右边 (lxname, 相加 (rq1, 1))))
    .否则
        赋值 (yname, 到大写 (lxname))
    .如果结束
    .如果 (或者 (等于 (yname, “MP3”), 等于 (yname, “MP2”), 等于 (yname, “MP1”), 等于 (yname, “MP?”), 等于 (yname, “MID”)))
        清除数组 (files)
        .计次循环首 (取项目数 (), rq1)
            .如果真 (等于 (相减 (rq1, 1).是否被选择 (), 真))
                .如果 (不等于 (zml1, 真))
                    加入成员 (files, 相加 (., 相减 (rq1, 1).取项目文本 ()))
                .否则
                    加入成员 (files, 相减 (rq1, 1).取项目文本 ())
                .如果结束
                
            .如果真结束
            
        .计次循环尾 ()
        .如果 (大于 (取数组成员数 (files), 0))
            停止播放 ()
            .如果 (等于 (yname, “MID”))
                播放MID (-1, , files)
            .否则
                播放MP3 (-1, files)
            .如果结束
            
        .否则
            
        .如果结束
        
    .否则
        run (.)
    .如果结束
    
.如果真结束


.子程序 _标签20_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

停止播放 ()

.子程序 _退出_被选择, 空白型, , 
_退出_被选择 ()

.子程序 _打开_被选择, 空白型, , 
run (.)

.子程序 _进入DOS窗口_被选择, 空白型, , 
run (“command.com”)

.子程序 _快捷菜单_被选择, 空白型, , 
.局部变量 rq1, 整数型, , , 

赋值 (menu, 真)
赋值 (., 假)
清空 ()
.计次循环首 (14, rq1)
    取文本注册表项 (“SuperRun”, “选项”, 到文本 (rq1), “[空]”).加入项目 ()
.计次循环尾 ()

.子程序 _显示类型_被选择, 空白型, , 
.如果真 (等于 (输入框 (“                                             请输入要显示的文件类型                                                                                                               软件作者：金  宇                                                                        2001年8月1日”, “  选择文件类型”, lxname, lxname, 1), 真))
    刷新 (真, 假)
.如果真结束


.子程序 _时钟2_周期事件, 空白型, , 
赋值 (., 时间到文本 (取现行时间 (), 3))

.窗口程序集 窗口程序集5, , , 

.子程序 _图片框1_被双击, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

run (tname)

.子程序 _窗口3_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.判断开始 (等于 (键代码, #上光标键))
    赋值 (., 相减 (., 1))
.判断 (等于 (键代码, #下光标键))
    赋值 (., 相加 (., 1))
.判断 (等于 (键代码, #左光标键))
    赋值 (., 相减 (., 1))
.判断 (等于 (键代码, #右光标键))
    赋值 (., 相加 (., 1))
.默认
    
.判断结束


.子程序 _图片框1_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

274.发送信息 (61458, 0)

.窗口程序集 窗口程序集4, , , 

.子程序 _按钮1_被单击, 空白型, , 
.局部变量 ll, 文本型, , , 

赋值 (ll, 取文本注册表项 (“SuperRun”, “选项”, “user”, ))
.如果真 (等于 (., ll))
    赋值 (cdw, 真)
    窗口2.销毁 ()
.如果真结束


.子程序 _编辑框1_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (等于 (键代码, 13))
    _按钮1_被单击 ()
.如果真结束


.程序集 程序集1, , , 

.子程序 初始化块数据, 空白型, , 
.参数 块数据, 字节集, 参考, 

 ' 下面的语句可以合并到一条语句中。数据分别记录每类块的 4 种 4 X 4 翻转结构。如果某种翻转结构数据以 255 开头，表示该结构不存在。
赋值 (块数据, { 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }) ' 竖条， 255 表示无此翻转状态。
赋值 (块数据, 相加 (块数据, { 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0 })) ' 2 字形
赋值 (块数据, 相加 (块数据, { 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 })) ' 7 字形
赋值 (块数据, 相加 (块数据, { 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 })) ' 丁字形
赋值 (块数据, 相加 (块数据, { 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 })) ' 反 7 字形
赋值 (块数据, 相加 (块数据, { 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0 })) ' 反 2 字形
赋值 (块数据, 相加 (块数据, { 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0 })) ' 方块

.窗口程序集 窗口程序集6, , , 

.程序集变量 匿名程序集变量_8134, 空白型, , , -- 下面的容器记录初始数据
.程序集变量 块数据, 字节集, , , 尺寸为7X4X4，分别记录7种块的4种位置数据
.程序集变量 方块画板, 画板, , "7", 记录画各种块时所使用的画板
.程序集变量 匿名程序集变量_8137, 空白型, , , -- 下面的容器记录当前游戏状态
.程序集变量 当前关, 整数型, , , 0 为第 1 关，依此类推
.程序集变量 总分, 整数型, , , 当前所得总分
.程序集变量 过关还差分数, 整数型, , , 过当前关还差的分数
.程序集变量 匿名程序集变量_8141, 空白型, , , -- 下面的容器记录程序数据
.程序集变量 游戏区堆积块, 字节型, , "20,10", 高 20 ，宽 10 。
.程序集变量 下落块, 整数型, , , 0 - 28 。空块、7 X 4种块状态
.程序集变量 下落水平位置, 整数型, , , 当前水平下落位置
.程序集变量 下落垂直位置, 整数型, , , 当前垂直下落位置
.程序集变量 即将下落块, 整数型, , , 0 - 28 。 下一个即将下落的块。
.程序集变量 暂停, 逻辑型, , , 游戏是否被暂停。
.程序集变量 gamestop, 逻辑型, , , 
.程序集变量 gamem, 逻辑型, , , 
.子程序 __启动窗口2_创建完毕, 空白型, , 
赋值 (方块画板 [1], )
赋值 (方块画板 [2], )
赋值 (方块画板 [3], )
赋值 (方块画板 [4], )
赋值 (方块画板 [5], )
赋值 (方块画板 [6], )
赋值 (方块画板 [7], )
初始化块数据 (块数据)
播放音乐 (“m1.mid”, 真)
赋值 (gamestop, 真)

.子程序 进入游戏指定关, 空白型, , 
.参数 欲进入关, 整数型, , 

.局部变量 垂直位置, 空白型, , , 
.局部变量 水平位置, 空白型, , , 
.局部变量 初始堆积层数, 短整数型, , , 

检查 (并且 (大于或等于 (欲进入关, 0), 小于或等于 (欲进入关, 19)))
赋值 (暂停, 假)
.如果真 (等于 (gamestop, 假))
    赋值 (., 相减 (500, 相乘 (欲进入关, 25))) ' 下落速度
.如果真结束
置随机数种子 ()
连续赋值 (相加 (取随机数 (10, 2215), 100), ., .)
赋值 (_启动窗口2., 方块画板 [取随机数 (1, 7)].)
赋值 (当前关, 欲进入关)
赋值 (过关还差分数, 相加 (相乘 (欲进入关, 500), 500)) ' 过关分数
.如果真 (不等于 (gamem, 真))
    .如果真 (不等于 (播放音乐 (相加 (到文本 (相加 (当前关, 1)), “.MID”), 真), 真))
        播放音乐 (“m1.mid”, 真)
    .如果真结束
    
.如果真结束
赋值 (., 相加 (“第 ”, 到文本 (相加 (当前关, 1)), “ 关”))
赋值 (., 相加 (“过关还差”, 到文本 (过关还差分数), “分”))
赋值 (游戏区堆积块, {  }) ' 将所有现有堆积块清除
.清除 ()
赋值 (初始堆积层数, 当前关) ' 根据当前关来设置初始堆积块。
.变量循环首 (相减 (21, 初始堆积层数), 20, 1, 垂直位置)
    .计次循环首 (10, 水平位置)
        .如果真 (并且 (不等于 (水平位置, 垂直位置), 等于 (取随机数 (0, 2), 0)))
            赋值 (游戏区堆积块 [垂直位置] [水平位置], 1)
            画方块 (1, 相乘 (相减 (水平位置, 1), 20), 相乘 (相减 (垂直位置, 1), 20), 真)
        .如果真结束
        
    .计次循环尾 ()
.变量循环尾 ()
赋值 (即将下落块, 0)
准备下落 ()
获取焦点 () ' 将输入焦点转移到游戏区画板。

.子程序 准备下落, 空白型, , 
.局部变量 偏移值, 空白型, , , 
.局部变量 垂直位置, 空白型, , , 
.局部变量 水平位置, 空白型, , , 

赋值 (下落块, 选择 (不等于 (即将下落块, 0), 即将下落块, 相加 (相乘 (取随机数 (0, 6), 4), 1))) ' 取得当前下落块。
赋值 (即将下落块, 相加 (相乘 (取随机数 (0, 6), 4), 1)) ' 准备即将下落块。
赋值 (下落垂直位置, 1) ' 初始下落位置
赋值 (下落水平位置, 4)
 ' 查看是否还可以下落。
赋值 (偏移值, 相加 (相乘 (相减 (下落块, 1), 16), 1))
.变量循环首 (下落垂直位置, 相加 (下落垂直位置, 3), 1, 垂直位置)
    .变量循环首 (下落水平位置, 相加 (下落水平位置, 3), 1, 水平位置)
        .如果真 (不等于 (块数据 [偏移值], 0))
            .如果真 (不等于 (游戏区堆积块 [垂直位置] [水平位置], 0))
                画方块 (下落块, 60, 0, 假)
                播放音乐 (“消层.wav”, )
                赋值 (., 0)
                赋值 (gamestop, 真)
                延时 (600)
                 ' 如果不能下落则说明已经堆满。
                20.定位写出 (100, “你输掉了此局！”)
                返回 ()
            .如果真结束
            赋值 (游戏区堆积块 [垂直位置] [水平位置], 1)
        .如果真结束
        赋值 (偏移值, 相加 (偏移值, 1))
    .变量循环尾 ()
.变量循环尾 ()
画方块 (下落块, 60, 0, 假)
重画 ()

.子程序 _提示画板_绘画, 空白型, , 
.参数 需重画区左边, 整数型, , 
.参数 需重画区顶边, 整数型, , 
.参数 需重画区右边, 整数型, , 
.参数 需重画区底边, 整数型, , 

 ' 在提示画板中画出即将下落块。
.如果真 (不等于 (即将下落块, 0))
    画方块 (即将下落块, 40, 选择 (等于 (即将下落块, 1), 2, 20))
.如果真结束


.子程序 画方块, 空白型, , 
.参数 画板, 画板, , 
.参数 方块类型, 整数型, , 
.参数 绘画左边, 整数型, , 
.参数 绘画顶边, 整数型, , 
.参数 仅画单一方块, 逻辑型, 可空, 

.局部变量 偏移值, 整数型, , , 
.局部变量 图片画板, 画板, , , 
.局部变量 水平位置, 整数型, , , 
.局部变量 垂直位置, 整数型, , , 

.判断开始 (等于 (方块类型, 0)) ' 如果为空块，则返回。
    返回 ()
.默认
    赋值 (图片画板, 方块画板 [相加 (求余数 (当前关, 7), 1)]) ' 取得画当前关的块的画板。
    .如果 (等于 (仅画单一方块, 真))
        图片画板.复制 (0, 0, 20, 20, 画板, 绘画左边, 绘画顶边, )
    .否则
        赋值 (偏移值, 相加 (相乘 (相减 (方块类型, 1), 16), 1))
        .计次循环首 (4, 垂直位置)
            .计次循环首 (4, 水平位置)
                .如果真 (不等于 (块数据 [偏移值], 0))
                    图片画板.复制 (0, 0, 20, 20, 画板, 相加 (绘画左边, 相乘 (相减 (水平位置, 1), 20)), 相加 (绘画顶边, 相乘 (相减 (垂直位置, 1), 20)), )
                .如果真结束
                赋值 (偏移值, 相加 (偏移值, 1))
            .计次循环尾 ()
        .计次循环尾 ()
    .如果结束
    
.判断结束


.子程序 消除整层, 逻辑型, , 
.局部变量 水平位置, 空白型, , , 
.局部变量 垂直位置, 空白型, , , 
.局部变量 消除层数, 空白型, , , 
.局部变量 容器1, 空白型, , , 
.局部变量 容器2, 空白型, , , 
.局部变量 容器3, 空白型, , , 

赋值 (垂直位置, 相加 (下落垂直位置, 3))
.如果真 (大于 (垂直位置, 20))
    赋值 (垂直位置, 20)
.如果真结束
赋值 (容器3, 下落垂直位置)
.判断循环首 (大于或等于 (垂直位置, 容器3))
    .计次循环首 (10, 水平位置)
        .如果真 (等于 (游戏区堆积块 [垂直位置] [水平位置], 0))
            跳出循环 ()
        .如果真结束
        
    .计次循环尾 ()
    .如果 (大于 (水平位置, 10)) ' 此层是否被堆满
        赋值 (消除层数, 相加 (消除层数, 1))
        0.复制 (0, 200, 相乘 (相减 (垂直位置, 1), 20), , 0, 20, ) ' 下移上面的所有层。
        .计次循环首 (10, 容器2) ' 清除顶层。
            .如果真 (不等于 (游戏区堆积块 [1] [容器2], 0))
                相乘 (相减 (容器2, 1), 20).填充矩形 (0, 相加 (相乘 (容器2, 20), 1), 21)
            .如果真结束
            
        .计次循环尾 ()
        .变量循环首 (相减 (垂直位置, 1), 1, -1, 容器1) ' 下移上面层的数据。
            .计次循环首 (10, 容器2)
                赋值 (游戏区堆积块 [相加 (容器1, 1)] [容器2], 游戏区堆积块 [容器1] [容器2])
            .计次循环尾 ()
        .变量循环尾 ()
        .计次循环首 (10, 容器2) ' 清除顶层的数据。
            赋值 (游戏区堆积块 [1] [容器2], 0)
        .计次循环尾 ()
        赋值 (容器3, 相加 (容器3, 1)) ' 下移目的层
    .否则
        赋值 (垂直位置, 相减 (垂直位置, 1))
    .如果结束
    
.判断循环尾 ()
 ' 根据一次消除层的数目来给出不同的分数。
.如果真 (等于 (消除层数, 0))
    返回 (假)
.如果真结束
.判断开始 (等于 (消除层数, 1))
    赋值 (容器1, 10)
.判断 (等于 (消除层数, 2))
    赋值 (容器1, 40)
.判断 (等于 (消除层数, 3))
    赋值 (容器1, 80)
.默认
    赋值 (容器1, 160)
.判断结束
赋值 (总分, 相加 (总分, 容器1))
赋值 (., 相加 (“得分：”, 到文本 (总分)))
赋值 (过关还差分数, 相减 (过关还差分数, 容器1))
.如果 (小于或等于 (过关还差分数, 0)) ' 是否已经过关
    .如果 (等于 (当前关, 19)) ' 是否为最后一关
        赋值 (., 0)
        10.定位写出 (100, “恭喜你全部通关！”)
    .否则
         ' 寻找有块的最顶层
        20.定位写出 (120, “恭喜你过一关！”)
        播放音乐 (“过关.wav”, )
        .计次循环首 (20, 垂直位置)
            .计次循环首 (10, 水平位置)
                .如果真 (不等于 (游戏区堆积块 [垂直位置] [水平位置], 0))
                    跳出循环 ()
                .如果真结束
                
            .计次循环尾 ()
            .如果真 (小于或等于 (水平位置, 10))
                跳出循环 ()
            .如果真结束
            
        .计次循环尾 ()
         ' 动态消层，表示过关。
        .变量循环首 (20, 垂直位置, -1, 容器1)
            0.复制 (0, 200, 380, , 0, 20, )
            延时 (50)
        .变量循环尾 ()
        延时 (500)
        进入游戏指定关 (相加 (当前关, 1)) ' 进入下一关
    .如果结束
    返回 (真)
.否则
    赋值 (., 相加 (“过关还差”, 到文本 (过关还差分数), “分”))
    播放音乐 (“失败.wav”, )
.如果结束
返回 (假)

.子程序 _下落时钟_周期事件, 空白型, , 
.局部变量 偏移值1, 空白型, , , 
.局部变量 偏移值2, 空白型, , , 
.局部变量 水平位置, 空白型, , , 
.局部变量 垂直位置, 空白型, , , 

.如果真 (或者 (等于 (暂停, 真), 等于 (下落块, 0)))
    返回 ()
.如果真结束
赋值 (偏移值2, 相加 (相乘 (相减 (下落块, 1), 16), 1))
赋值 (偏移值1, 相加 (偏移值2, 16))
.计次循环首 (4, 水平位置)
    .计次循环首 (4, 垂直位置)
        .如果真 (不等于 (块数据 [相减 (偏移值1, 相乘 (垂直位置, 4))], 0))
            赋值 (垂直位置, 相减 (5, 垂直位置))
            .如果真 (或者 (大于 (相加 (下落垂直位置, 垂直位置), 20), 不等于 (游戏区堆积块 [相加 (下落垂直位置, 垂直位置)] [相减 (相加 (下落水平位置, 水平位置), 1)], 0)))
                .如果真 (等于 (消除整层 (), 假))
                    赋值 (下落块, 0)
                    准备下落 ()
                .如果真结束
                返回 ()
            .如果真结束
            跳出循环 ()
        .如果真结束
        
    .计次循环尾 ()
    赋值 (偏移值1, 相加 (偏移值1, 1))
.计次循环尾 ()
赋值 (偏移值1, 偏移值2)
.变量循环首 (下落垂直位置, 相加 (下落垂直位置, 3), 1, 垂直位置)
    .变量循环首 (下落水平位置, 相加 (下落水平位置, 3), 1, 水平位置)
        .如果真 (不等于 (块数据 [偏移值1], 0))
            赋值 (游戏区堆积块 [垂直位置] [水平位置], 0)
            .如果真 (或者 (等于 (垂直位置, 下落垂直位置), 等于 (块数据 [相减 (偏移值1, 4)], 0)))
                相乘 (相减 (水平位置, 1), 20).填充矩形 (相乘 (相减 (垂直位置, 1), 20), 相加 (相乘 (水平位置, 20), 1), 相加 (相乘 (垂直位置, 20), 1))
            .如果真结束
            
        .如果真结束
        赋值 (偏移值1, 相加 (偏移值1, 1))
    .变量循环尾 ()
.变量循环尾 ()
赋值 (下落垂直位置, 相加 (下落垂直位置, 1))
.变量循环首 (下落垂直位置, 相加 (下落垂直位置, 3), 1, 垂直位置)
    .变量循环首 (下落水平位置, 相加 (下落水平位置, 3), 1, 水平位置)
        .如果真 (不等于 (块数据 [偏移值2], 0))
            赋值 (游戏区堆积块 [垂直位置] [水平位置], 1)
            .如果真 (或者 (等于 (垂直位置, 相加 (下落垂直位置, 3)), 等于 (块数据 [相加 (偏移值2, 4)], 0)))
                画方块 (下落块, 相乘 (相减 (水平位置, 1), 20), 相乘 (相减 (垂直位置, 1), 20), 真)
            .如果真结束
            
        .如果真结束
        赋值 (偏移值2, 相加 (偏移值2, 1))
    .变量循环尾 ()
.变量循环尾 ()

.子程序 _游戏区画板_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.判断开始 (等于 (键代码, #左光标键))
    .如果真 (等于 (暂停, 假))
        左移 ()
    .如果真结束
    
.判断 (等于 (键代码, #右光标键))
    .如果真 (等于 (暂停, 假))
        右移 ()
    .如果真结束
    
.判断 (等于 (键代码, #上光标键))
    .如果真 (等于 (暂停, 假))
        翻转 ()
    .如果真结束
    
.判断 (等于 (键代码, #下光标键))
    .如果真 (大于 (., 0))
        _下落时钟_周期事件 ()
    .如果真结束
    
.判断 (等于 (键代码, #PageDown键))
    .如果真 (等于 (gamestop, 假))
        .如果真 (小于 (当前关, 19))
            进入游戏指定关 (相加 (当前关, 1))
        .如果真结束
        
    .如果真结束
    
.判断 (等于 (键代码, #空格键))
    .如果真 (等于 (gamestop, 假))
        赋值 (暂停, 取反 (暂停))
        .如果真 (等于 (暂停, 真))
            .如果真 (等于 (信息框 (“按空格键继续”, 0, “游戏暂停”), 0))
                赋值 (暂停, 取反 (暂停))
            .如果真结束
            
        .如果真结束
        
    .如果真结束
    
.判断 (等于 (键代码, #S键))
    .如果 (等于 (gamem, 真))
        播放音乐 (相加 (到文本 (相加 (当前关, 1)), “.MID”), 真)
        赋值 (gamem, 假)
    .否则
        停止播放 ()
        赋值 (gamem, 真)
    .如果结束
    
.判断 (等于 (键代码, #PageUp键))
    .如果真 (等于 (gamestop, 假))
        .如果真 (大于 (当前关, 0))
            进入游戏指定关 (相减 (当前关, 1))
        .如果真结束
        
    .如果真结束
    
.默认
    
.判断结束


.子程序 翻转, 空白型, , 
.局部变量 新偏移值, 空白型, , , 
.局部变量 新下落块, 空白型, , , 
.局部变量 偏移值1, 空白型, , , 
.局部变量 偏移值2, 空白型, , , 
.局部变量 水平位置, 空白型, , , 
.局部变量 垂直位置, 空白型, , , 

赋值 (新下落块, 下落块)
赋值 (新偏移值, 相加 (相乘 (相减 (新下落块, 1), 16), 1))
.循环判断首 ()
    赋值 (新下落块, 相加 (新下落块, 1))
    赋值 (新偏移值, 相加 (新偏移值, 16))
    .如果真 (等于 (求余数 (新下落块, 4), 1))
        赋值 (新下落块, 相减 (新下落块, 4))
        赋值 (新偏移值, 相减 (新偏移值, 64))
    .如果真结束
    
.循环判断尾 (等于 (块数据 [新偏移值], 255))
.如果真 (等于 (新下落块, 下落块))
    返回 ()
.如果真结束
赋值 (偏移值1, 相加 (相乘 (相减 (下落块, 1), 16), 1))
赋值 (偏移值2, 偏移值1)
.变量循环首 (下落垂直位置, 相加 (下落垂直位置, 3), 1, 垂直位置)
    .变量循环首 (下落水平位置, 相加 (下落水平位置, 3), 1, 水平位置)
        .如果真 (不等于 (块数据 [偏移值1], 0))
            赋值 (游戏区堆积块 [垂直位置] [水平位置], 0)
            相乘 (相减 (水平位置, 1), 20).填充矩形 (相乘 (相减 (垂直位置, 1), 20), 相加 (相乘 (水平位置, 20), 1), 相加 (相乘 (垂直位置, 20), 1))
        .如果真结束
        赋值 (偏移值1, 相加 (偏移值1, 1))
    .变量循环尾 ()
.变量循环尾 ()
赋值 (偏移值1, 新偏移值)
.变量循环首 (下落垂直位置, 相加 (下落垂直位置, 3), 1, 垂直位置)
    .变量循环首 (下落水平位置, 相加 (下落水平位置, 3), 1, 水平位置)
        .如果真 (不等于 (块数据 [偏移值1], 0))
            .如果真 (或者 (大于 (垂直位置, 20), 大于 (水平位置, 10), 不等于 (游戏区堆积块 [垂直位置] [水平位置], 0)))
                赋值 (新偏移值, 偏移值2)
                赋值 (新下落块, 下落块)
                跳出循环 ()
            .如果真结束
            
        .如果真结束
        赋值 (偏移值1, 相加 (偏移值1, 1))
    .变量循环尾 ()
    .如果真 (等于 (新下落块, 下落块))
        跳出循环 ()
    .如果真结束
    
.变量循环尾 ()
.变量循环首 (下落垂直位置, 相加 (下落垂直位置, 3), 1, 垂直位置)
    .变量循环首 (下落水平位置, 相加 (下落水平位置, 3), 1, 水平位置)
        .如果真 (不等于 (块数据 [新偏移值], 0))
            赋值 (游戏区堆积块 [垂直位置] [水平位置], 新下落块)
            画方块 (新下落块, 相乘 (相减 (水平位置, 1), 20), 相乘 (相减 (垂直位置, 1), 20), 真)
        .如果真结束
        赋值 (新偏移值, 相加 (新偏移值, 1))
    .变量循环尾 ()
.变量循环尾 ()
赋值 (下落块, 新下落块)

.子程序 左移, 空白型, , 
.局部变量 偏移值1, 空白型, , , 
.局部变量 偏移值2, 空白型, , , 
.局部变量 水平位置, 空白型, , , 
.局部变量 垂直位置, 空白型, , , 

.如果真 (等于 (下落水平位置, 1))
    返回 ()
.如果真结束
赋值 (偏移值1, 相加 (相乘 (相减 (下落块, 1), 16), 1))
赋值 (偏移值2, 偏移值1)
.计次循环首 (4, 垂直位置)
    .计次循环首 (4, 水平位置)
        .如果真 (不等于 (块数据 [相减 (相加 (偏移值1, 水平位置), 1)], 0))
            .如果真 (不等于 (游戏区堆积块 [相减 (相加 (下落垂直位置, 垂直位置), 1)] [相减 (相加 (下落水平位置, 水平位置), 2)], 0))
                返回 ()
            .如果真结束
            跳出循环 ()
        .如果真结束
        
    .计次循环尾 ()
    赋值 (偏移值1, 相加 (偏移值1, 4))
.计次循环尾 ()
赋值 (偏移值1, 偏移值2)
.变量循环首 (下落水平位置, 相加 (下落水平位置, 3), 1, 水平位置)
    .变量循环首 (下落垂直位置, 相加 (下落垂直位置, 3), 1, 垂直位置)
        .如果真 (不等于 (块数据 [相加 (偏移值1, 相乘 (相减 (垂直位置, 下落垂直位置), 4))], 0))
            赋值 (游戏区堆积块 [垂直位置] [水平位置], 0)
            .如果真 (或者 (等于 (水平位置, 相加 (下落水平位置, 3)), 等于 (块数据 [相加 (偏移值1, 相乘 (相减 (垂直位置, 下落垂直位置), 4), 1)], 0)))
                相乘 (相减 (水平位置, 1), 20).填充矩形 (相乘 (相减 (垂直位置, 1), 20), 相加 (相乘 (水平位置, 20), 1), 相加 (相乘 (垂直位置, 20), 1))
            .如果真结束
            
        .如果真结束
        
    .变量循环尾 ()
    赋值 (偏移值1, 相加 (偏移值1, 1))
.变量循环尾 ()
赋值 (下落水平位置, 相减 (下落水平位置, 1))
.变量循环首 (下落水平位置, 相加 (下落水平位置, 3), 1, 水平位置)
    .变量循环首 (下落垂直位置, 相加 (下落垂直位置, 3), 1, 垂直位置)
        .如果真 (不等于 (块数据 [相加 (偏移值2, 相乘 (相减 (垂直位置, 下落垂直位置), 4))], 0))
            赋值 (游戏区堆积块 [垂直位置] [水平位置], 1)
            .如果真 (或者 (等于 (水平位置, 下落水平位置), 等于 (块数据 [相减 (相加 (偏移值2, 相乘 (相减 (垂直位置, 下落垂直位置), 4)), 1)], 0)))
                画方块 (下落块, 相乘 (相减 (水平位置, 1), 20), 相乘 (相减 (垂直位置, 1), 20), 真)
            .如果真结束
            
        .如果真结束
        
    .变量循环尾 ()
    赋值 (偏移值2, 相加 (偏移值2, 1))
.变量循环尾 ()

.子程序 右移, 空白型, , 
.局部变量 偏移值1, 空白型, , , 
.局部变量 偏移值2, 空白型, , , 
.局部变量 水平位置, 空白型, , , 
.局部变量 垂直位置, 空白型, , , 

.如果真 (等于 (下落水平位置, 10))
    返回 ()
.如果真结束
赋值 (偏移值1, 相加 (相乘 (相减 (下落块, 1), 16), 1))
赋值 (偏移值2, 偏移值1)
.计次循环首 (4, 垂直位置)
    .变量循环首 (4, 1, -1, 水平位置)
        .如果真 (不等于 (块数据 [相减 (相加 (偏移值1, 水平位置), 1)], 0))
            .如果真 (或者 (大于 (相加 (下落水平位置, 水平位置), 10), 不等于 (游戏区堆积块 [相减 (相加 (下落垂直位置, 垂直位置), 1)] [相加 (下落水平位置, 水平位置)], 0)))
                返回 ()
            .如果真结束
            跳出循环 ()
        .如果真结束
        
    .变量循环尾 ()
    赋值 (偏移值1, 相加 (偏移值1, 4))
.计次循环尾 ()
赋值 (偏移值1, 偏移值2)
.变量循环首 (下落水平位置, 相加 (下落水平位置, 3), 1, 水平位置)
    .变量循环首 (下落垂直位置, 相加 (下落垂直位置, 3), 1, 垂直位置)
        .如果真 (不等于 (块数据 [相加 (偏移值1, 相乘 (相减 (垂直位置, 下落垂直位置), 4))], 0))
            赋值 (游戏区堆积块 [垂直位置] [水平位置], 0)
            .如果真 (或者 (等于 (水平位置, 下落水平位置), 等于 (块数据 [相减 (相加 (偏移值1, 相乘 (相减 (垂直位置, 下落垂直位置), 4)), 1)], 0)))
                相乘 (相减 (水平位置, 1), 20).填充矩形 (相乘 (相减 (垂直位置, 1), 20), 相加 (相乘 (水平位置, 20), 1), 相加 (相乘 (垂直位置, 20), 1))
            .如果真结束
            
        .如果真结束
        
    .变量循环尾 ()
    赋值 (偏移值1, 相加 (偏移值1, 1))
.变量循环尾 ()
赋值 (下落水平位置, 相加 (下落水平位置, 1))
.变量循环首 (下落水平位置, 相加 (下落水平位置, 3), 1, 水平位置)
    .变量循环首 (下落垂直位置, 相加 (下落垂直位置, 3), 1, 垂直位置)
        .如果真 (不等于 (块数据 [相加 (偏移值2, 相乘 (相减 (垂直位置, 下落垂直位置), 4))], 0))
            赋值 (游戏区堆积块 [垂直位置] [水平位置], 1)
            .如果真 (或者 (等于 (水平位置, 相加 (下落水平位置, 3)), 等于 (块数据 [相加 (偏移值2, 相乘 (相减 (垂直位置, 下落垂直位置), 4), 1)], 0)))
                画方块 (下落块, 相乘 (相减 (水平位置, 1), 20), 相乘 (相减 (垂直位置, 1), 20), 真)
            .如果真结束
            
        .如果真结束
        
    .变量循环尾 ()
    赋值 (偏移值2, 相加 (偏移值2, 1))
.变量循环尾 ()

.子程序 _标签2_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, 可空, 
.参数 纵向位置, 整数型, 可空, 
.参数 功能键状态, 整数型, 可空, 

赋值 (总分, 0)
赋值 (., “ 得分：0”)
赋值 (gamestop, 假)
进入游戏指定关 (0) ' 进入第一关

.子程序 _标签3_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

停止播放 ()
_启动窗口2.销毁 ()

.子程序 _游戏区画板_放开某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (不等于 (键代码, #下光标键))
    播放音乐 (“do.wav”, )
.如果真结束


.子程序 _当前关标签1_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

_启动窗口2.发送信息 (274, 61458, 0)


 ' 不属于任何一个程序集、类模块的函数：
