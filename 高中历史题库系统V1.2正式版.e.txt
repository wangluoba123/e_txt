 ' 文件类型：Windows窗口程序

 ' 程序名称：高中历史题库系统
 ' 程序描述：　　这个版本仍未加上保存试卷序列号功能，仔细想来，也未必有多大作用。实现的可能性也不是没有，但要定义文件的存储格式。
　　目前已可导出WORD文档。
　　重写修正版（已完成）虽也没有保存功能，但至少可以用来编译。
    查找试题功能还是要改写一下，现在这个复制品毕竟不符合需要。
 ' 程序作者：落日城主
 ' 邮政编码：
 ' 联系地址：保密
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：luorigezhu@163.com
 ' 主页地址：
 ' 版权声明：程序使用过程中发现什么问题，请发个伊妹儿。
 ' 版本号：1.21
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 660
    高度 = 482
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 真
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 已保存到：D:\易语言学习\Data\高中历史题库系统V1.2正式版.e\_启动窗口_图标.ico
    背景音乐 =  ' 空
    标题 = “落日版系列软件之──高中历史题库系统”
    帮助文件名 = “”

窗口 字段选择窗口
    左边 = 50
    顶边 = 50
    宽度 = 319
    高度 = 213
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 假
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 已保存到：D:\易语言学习\Data\高中历史题库系统V1.2正式版.e\字段选择窗口_图标.ico
    背景音乐 =  ' 空
    标题 = “”
    帮助文件名 = “”

窗口 关于窗口
    左边 = 50
    顶边 = 50
    宽度 = 313
    高度 = 269
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 已保存到：D:\易语言学习\Data\高中历史题库系统V1.2正式版.e\关于窗口_图标.ico
    背景音乐 =  ' 空
    标题 = “关于...”
    帮助文件名 = “”

窗口 选择题库维护窗口
    左边 = 50
    顶边 = 50
    宽度 = 660
    高度 = 468
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 真
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 已保存到：D:\易语言学习\Data\高中历史题库系统V1.2正式版.e\选择题库维护窗口_图标.ico
    背景音乐 =  ' 空
    标题 = “选择题维护管理”
    帮助文件名 = “”

窗口 导入文本要求
    左边 = 50
    顶边 = 50
    宽度 = 419
    高度 = 287
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 假
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 已保存到：D:\易语言学习\Data\高中历史题库系统V1.2正式版.e\导入文本要求_图标.ico
    背景音乐 =  ' 空
    标题 = “关于材料题和问答题文本要求的说明：”
    帮助文件名 = “”

窗口 材料问答维护窗口
    左边 = 50
    顶边 = 50
    宽度 = 660
    高度 = 468
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 已保存到：D:\易语言学习\Data\高中历史题库系统V1.2正式版.e\材料问答维护窗口_图标.ico
    背景音乐 =  ' 空
    标题 = “材料/问答题维护管理”
    帮助文件名 = “”

窗口 查找试题窗口
    左边 = 50
    顶边 = 50
    宽度 = 413
    高度 = 256
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 已保存到：D:\易语言学习\Data\高中历史题库系统V1.2正式版.e\查找试题窗口_图标.ico
    背景音乐 =  ' 空
    标题 = “查找试题”
    帮助文件名 = “”

窗口 选中题排序窗口
    左边 = 50
    顶边 = 50
    宽度 = 451
    高度 = 408
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “选中试题排序窗口”
    帮助文件名 = “”

窗口 试卷生成窗口1
    左边 = 50
    顶边 = 50
    宽度 = 447
    高度 = 354
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “”
    帮助文件名 = “”

窗口 试卷生成窗口2
    左边 = 50
    顶边 = 50
    宽度 = 502
    高度 = 424
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “生成WORD文档格式试卷――要求系统中预装好WORD程序”
    帮助文件名 = “”

窗口 试卷生成窗口3
    左边 = 50
    顶边 = 50
    宽度 = 502
    高度 = 407
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “生成WORD文档格式试卷――要求系统中预装好WORD程序”
    帮助文件名 = “”

窗口 删除管理窗口
    左边 = 50
    顶边 = 50
    宽度 = 451
    高度 = 408
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “删除管理窗口”
    帮助文件名 = “”

窗口 演示窗口
    左边 = 50
    顶边 = 50
    宽度 = 380
    高度 = 250
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 假
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “”
    帮助文件名 = “”



.常量 原数据库, "“库1”", , 
.常量 数据库管理器, "“数据库管理器”", , 
.常量 用户习惯, "“用户习惯”", , 
.常量 原数据库1, "“库1”", , 
.常量 数据库管理器1, "“数据库管理器”", , 
.常量 用户习惯1, "“用户习惯”", , 
.图片 图片1, " ' 已保存到：D:\易语言学习\Data\高中历史题库系统V1.2正式版.e\图片1", , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 3 7 系统核心支持库
 ' iext 27bb20fdd3e145e4bee3db39ddd6e64c 1 1 扩展界面支持库一
 ' iext2 AF6AD80AA4244A59AFB3D83ECF5173CC 1 1 扩展界面支持库二
 ' dp1 4BB4003860154917BC7D8230BF4FA58A 1 0 数据操作支持库一
 ' xplib 7F54B9CE8887428dBA9CEEB94CEF4C72 1 1 XP风格界面库
 ' shell 52F260023059454187AF826A3C07AF2A 1 0 操作系统界面功能支持库
 ' eWord2000 F30A56A231354a4a81AB13B54EF21665 1 0 WORD2000支持库
 ' HtmlView 5014D8FA6DCA40b68FA626D8183666EB 1 1 超文本浏览框
 ' Tooltiplib DA19AC3ADD2F4121AAD84AC5FBCAFC71 1 1 提示工具支持库
 ' HYExtLib D9AC553783EC11d88D5EAEB57D821B1C 1 3 海洋扩展支持库




.全局变量 显示内容, 文本型, , , 存储主界面中某个编辑框将要显示的内容。
.全局变量 提取记录号数组, 整数型, , "0", 用于在各界面之间交换记录号。
.全局变量 选提, 整数型, , "0", 
.全局变量 材提, 整数型, , "0", 
.全局变量 问提, 整数型, , "0", 
.全局变量 显示记录号数组, 整数型, , "0", 
.全局变量 显示字段号数组, 整数型, , "0", 
.全局变量 试卷标题, 文本型, , , 
.全局变量 考试开始时间, 文本型, , , 
.全局变量 考试结束时间, 文本型, , , 
.全局变量 考试时长, 文本型, , , 
.全局变量 卷面总分, 整数型, , , 
.全局变量 出卷人, 文本型, , , 
.全局变量 选择题每题分值, 整数型, , , 
.全局变量 出卷日期, 文本型, , , 
.全局变量 是否设分值, 逻辑型, , , 
.全局变量 是否默认导出, 逻辑型, , , 
.全局变量 剩余分值, 空白型, , , 
.全局变量 是否在提取答案, 逻辑型, , , 
.全局变量 是否提取格式试卷, 逻辑型, , , 

.窗口程序集 _启动窗口程序集, , , 主界面

.程序集变量 存盘状态, 逻辑型, , , 
.程序集变量 终极文本数组, 文本型, , "0", 
.程序集变量 显示状态, 整数型, , , 
.程序集变量 页面值, 文本型, , , 
.子程序 __启动窗口_创建完毕, 空白型, , 
未知支持库函数_0 (_启动窗口.取窗口句柄 (), 相加 (“F11键切换题库”, 字符 (13), 字符 (10), “F12键调整显示项目”, 字符 (13), 字符 (10), “F8→F10调整字体”), 假, 假)
未知支持库函数_0 (取窗口句柄 (), “F2”, 假, 假)
未知支持库函数_0 (取窗口句柄 (), “F3”, 假, 假)
未知支持库函数_0 (取窗口句柄 (), “Ctrl+Enter补全网址为：http://www.***.com形式”, 假, 假)
未知支持库函数_0 (取窗口句柄 (), “F6”, 假, 假)
未知支持库函数_0 (取窗口句柄 (), “双击进入维护管理界面”, 假, 假)
未知支持库函数_0 (取窗口句柄 (), “双击进入维护管理界面”, 假, 假)
未知支持库函数_0 (取窗口句柄 (), “双击进入维护管理界面”, 假, 假)
未知支持库函数_0 (取窗口句柄 (), “双击进入维护管理界面”, 假, 假)
未知支持库函数_0 (取窗口句柄 (), “双击进入维护管理界面”, 假, 假)
未知支持库函数_0 (取窗口句柄 (), “双击进入选中题排序界面”, 假, 假)
未知支持库函数_0 (取窗口句柄 (), “F7”, 假, 假)
未知支持库函数_0 (取窗口句柄 (), “F7”, 假, 假)


赋值 (显示状态, 1)
赋值 (存盘状态, 真)
 ' 既然已经决定重写整个代码，那么对于三个题库不妨全部重排其结构，全部采用字集节型，并统一加密。现在数据库还未建。回头可以把它们复制过来修改一下即告完工。
启动 ()

.子程序 启动, 空白型, , 
.局部变量 密码, 文本型, , , 
.局部变量 i, 空白型, , , 

_蓝色风格3_被选择 ()
.如果 (并且 (等于 (打开 (“选择题库.edb”, , , , , , ), 真), 等于 (打开 (“材料题库.edb”, , , , , , ), 真), 等于 (打开 (“问答题库.edb”, , , , , , ), 真)))
    置当前库 (“选择题库”)
    .变量循环首 (1, 取记录数 (), 1, i)
        跳到 (i)
        .如果真 (等于 (读 (1), 真))
            加入成员 (选提, i)
        .如果真结束
        
    .变量循环尾 ()
    置当前库 (“材料题库”)
    .变量循环首 (1, 取记录数 (), 1, i)
        跳到 (i)
        .如果真 (等于 (读 (1), 真))
            加入成员 (材提, i)
        .如果真结束
        
    .变量循环尾 ()
    置当前库 (“问答题库”)
    .变量循环首 (1, 取记录数 (), 1, i)
        跳到 (i)
        .如果真 (等于 (读 (1), 真))
            加入成员 (问提, i)
        .如果真结束
        
    .变量循环尾 ()
    _选择题库9_被选择 ()
.否则
    .如果 (等于 (输入框 (“  请输入密码，若密码为空，请请直接回车或点击确定按钮。”, “密码输入”, , 密码, 4), 真))
        .如果 (并且 (等于 (打开 (“选择题库.edb”, , , , , 密码, ), 真), 等于 (打开 (“材料题库.edb”, , , , , 密码, ), 真), 等于 (打开 (“问答题库.edb”, , , , , 密码, ), 真)))
             ' 先打开选择题库，为以后的操作作准备。
            置当前库 (“选择题库”)
            .变量循环首 (1, 取记录数 (), 1, i)
                跳到 (i)
                .如果真 (等于 (读 (1), 真))
                    加入成员 (选提, i)
                .如果真结束
                
            .变量循环尾 ()
            置当前库 (“材料题库”)
            .变量循环首 (1, 取记录数 (), 1, i)
                跳到 (i)
                .如果真 (等于 (读 (1), 真))
                    加入成员 (材提, i)
                .如果真结束
                
            .变量循环尾 ()
            置当前库 (“问答题库”)
            .变量循环首 (1, 取记录数 (), 1, i)
                跳到 (i)
                .如果真 (等于 (读 (1), 真))
                    加入成员 (问提, i)
                .如果真结束
                
            .变量循环尾 ()
            _选择题库9_被选择 ()
        .否则
            信息框 (“未能打开数据库，可能密码错误！”, 0, )
        .如果结束
        
    .否则
        结束 ()
    .如果结束
    
.如果结束


.子程序 _选择题库9_被选择, 空白型, , 
 ' 应当包括这样几个部分。
 ' 一、界面初始化
 ' 界面初始化包括：①五个显示框；②五个选择框；③编辑框1；④界面标签；⑤页面选择框初始化；⑥菜单初始化。⑥页面选择框
 ' 把上次退出时的记录号写入注册表中，然后调用。
 ' 这些初始化要涉及两个数组：①显示记录号数组；②提取记录号数组。此外，还应特别注意另一变量，即由页面选择框所决定的“页次”。
 ' e如果把这两个数组都作为程序集变量来考虑的话，会怎么样呢？这两个数组不作为程序集数组来处理(作为参数来调用或许也可以，但总感觉不太方便)，因为其它（字段选择窗口）窗口要调用它们，尤其是排序时，必须用到。提取文本试卷时也要用到。三个数组的名称就用现成的全局变量“选提”、“材提”、“问提”。
 ' 显示记录号数组可以复用，而提取记录号数组必须每个题库一个。这样才能顺利地实现提取整个文本数组而不必因为数组的重置而丢失排序信息。
 ' 既然如此，选中试题的排序放在哪里好呢？
 ' 将三个题库的排序整合到一起去，修改一下排序界面。

 ' 下面先实现第一步：显示记录号的初始化。
置当前库 (“选择题库”)
.如果 (等于 (取记录数 (), 0))
    加空记录 ()
    选择题库界面初始化 ()
.否则
    选择题库界面初始化 ()
.如果结束


.子程序 选择题库界面初始化, 空白型, , 
.局部变量 i, 整数型, , , 
.局部变量 x, 整数型, , , 

清除数组 (显示记录号数组)
清除数组 (显示字段号数组)
赋值 (_启动窗口.标题, “高中历史题库之――选择题库［F11键快速切换题库］”)
赋值 (.标题, “选择”)
赋值 (.选中, 真)
赋值 (.选中, 真)
赋值 (.选中, 假)
赋值 (.选中, 假)
赋值 (.选中, 假)
赋值 (.选中, 假)
提取记录号刷新 ()
.变量循环首 (4, 9, 1, i)
    加入成员 (显示字段号数组, i)
.变量循环尾 ()
清除数组 (显示记录号数组)
.变量循环首 (1, 取记录数 (), 1, i)
    加入成员 (显示记录号数组, i)
.变量循环尾 ()
 ' 两个标签的初始化，应同时完成。
赋值 (.标题, 相加 (“共 ”, 到文本 (取记录数 ()), “ 题”))
赋值 (.标题, 相加 (“共 ”, 到文本 (取整 (相加 (相除 (取数组成员数 (显示记录号数组), 5), 1))), “ 页”))
赋值 (.调节器上限值, 取整 (相加 (相除 (取数组成员数 (显示记录号数组), 5), 1)))
 ' 第二步：读取注册信息，看上次结束时的记录号是多小。
主界面显示 (页面计算 (x))
赋值 (页面值, .内容)
到首记录 ()

.子程序 提取记录号刷新, 空白型, , 
.局部变量 i, 整数型, , , 

赋值 (.内容, “”)
.如果 (等于 (取当前库 (), “选择题库”))
    清除数组 (选提)
    .变量循环首 (1, 取记录数 (), 1, i)
        .如果真 (等于 (跳到 (i), 真))
            .如果真 (等于 (读 (1), 真))
                加入成员 (选提, i)
            .如果真结束
            
        .如果真结束
        
    .变量循环尾 ()
    .变量循环首 (1, 取数组成员数 (选提), 1, i)
        到文本 (选提 [i]).加入文本 (“→”)
    .变量循环尾 ()
    赋值 (.标题, 相加 (“本库共选中”, 到文本 (取数组成员数 (选提)), “题”))
.否则
    .如果 (等于 (取当前库 (), “材料题库”))
        清除数组 (材提)
        .变量循环首 (1, 取记录数 (), 1, i)
            .如果真 (等于 (跳到 (i), 真))
                .如果真 (等于 (读 (1), 真))
                    加入成员 (材提, i)
                .如果真结束
                
            .如果真结束
            
        .变量循环尾 ()
        .变量循环首 (1, 取数组成员数 (材提), 1, i)
            到文本 (材提 [i]).加入文本 (“→”)
        .变量循环尾 ()
        赋值 (.标题, 相加 (“本库共选中”, 到文本 (取数组成员数 (材提)), “题”))
    .否则
        .如果真 (等于 (取当前库 (), “问答题库”))
            清除数组 (问提)
            .变量循环首 (1, 取记录数 (), 1, i)
                .如果真 (等于 (跳到 (i), 真))
                    .如果真 (等于 (读 (1), 真))
                        加入成员 (问提, i)
                    .如果真结束
                    
                .如果真结束
                
            .变量循环尾 ()
            .变量循环首 (1, 取数组成员数 (问提), 1, i)
                到文本 (问提 [i]).加入文本 (“→”)
            .变量循环尾 ()
            赋值 (.标题, 相加 (“本库共选中”, 到文本 (取数组成员数 (问提)), “题”))
            
        .如果真结束
        
    .如果结束
    
.如果结束


.子程序 _材料题库10_被选择, 空白型, , 
置当前库 (“材料题库”)
.如果 (等于 (取记录数 (), 0))
    加空记录 ()
    材料题库界面初始化 ()
.否则
    材料题库界面初始化 ()
.如果结束


.子程序 材料题库界面初始化, 空白型, , 
.局部变量 i, 整数型, , , 
.局部变量 x, 整数型, , , 

清除数组 (显示字段号数组)
清除数组 (显示记录号数组)
赋值 (_启动窗口.标题, “高中历史题库之――材料解析题库［F11键快速切换题库］”)
赋值 (.标题, “材料”)
赋值 (.选中, 假)
赋值 (.选中, 假)
赋值 (.选中, 真)
赋值 (.选中, 真)
赋值 (.选中, 假)
赋值 (.选中, 假)
提取记录号刷新 ()
.变量循环首 (1, 取记录数 (), 1, i)
    跳到 (i)
    .如果真 (等于 (读 (1), 真))
         ' 加入成员 (材提, i)
     ' .如果真结束
    
.变量循环尾 ()

.变量循环首 (4, 7, 1, i)
    加入成员 (显示字段号数组, i)
.变量循环尾 ()
清除数组 (显示记录号数组)
.变量循环首 (1, 取记录数 (), 1, i)
    加入成员 (显示记录号数组, i)
.变量循环尾 ()
赋值 (.标题, 相加 (“共 ”, 到文本 (取记录数 ()), “ 题”))
赋值 (.标题, 相加 (“共 ”, 到文本 (取整 (相加 (相除 (取数组成员数 (显示记录号数组), 5), 1))), “ 页”))
赋值 (.调节器上限值, 取整 (相加 (相除 (取数组成员数 (显示记录号数组), 5), 1)))
 ' 第二步：读取注册信息，看上次结束时的记录号是多小。
主界面显示 (页面计算 (x))
赋值 (页面值, .内容)
到首记录 ()

.子程序 _问答题库11_被选择, 空白型, , 
置当前库 (“问答题库”)
.如果 (等于 (取记录数 (), 0))
    加空记录 ()
    问答题库界面初始化 ()
.否则
    问答题库界面初始化 ()
.如果结束


.子程序 问答题库界面初始化, 空白型, , 
.局部变量 i, 整数型, , , 
.局部变量 x, 整数型, , , 

清除数组 (显示记录号数组)
清除数组 (显示字段号数组)
赋值 (_启动窗口.标题, “高中历史题库之――问答题库［F11键快速切换题库］”)
赋值 (.标题, “问答”)
赋值 (.选中, 假)
赋值 (.选中, 假)
赋值 (.选中, 假)
赋值 (.选中, 假)
赋值 (.选中, 真)
赋值 (.选中, 真)
提取记录号刷新 ()
.变量循环首 (1, 取记录数 (), 1, i)
    跳到 (i)
    .如果真 (等于 (读 (1), 真))
        加入成员 (问提, i)
    .如果真结束
    
.变量循环尾 ()

.变量循环首 (4, 9, 1, i)
    加入成员 (显示字段号数组, i)
.变量循环尾 ()
清除数组 (显示记录号数组)
.变量循环首 (1, 取记录数 (), 1, i)
    加入成员 (显示记录号数组, i)
.变量循环尾 ()
赋值 (.标题, 相加 (“共 ”, 到文本 (取记录数 ()), “ 题”))
赋值 (.标题, 相加 (“共 ”, 到文本 (取整 (相加 (相除 (取数组成员数 (显示记录号数组), 5), 1))), “ 页”))
赋值 (.调节器上限值, 取整 (相加 (相除 (取数组成员数 (显示记录号数组), 5), 1)))
主界面显示 (页面计算 (x))
赋值 (页面值, .内容)
到首记录 ()

.子程序 页面计算, 整数型, , 
.参数 读入的当前记录号, 整数型, , 

.局部变量 i, 整数型, , , 
.局部变量 x, 整数型, , , 

 ' 先要求出当前记录号在显示记录号数组中的第几页才行。
.变量循环首 (1, 取数组成员数 (显示记录号数组), 1, i)
    .如果真 (等于 (读入的当前记录号, 显示记录号数组 [i]))
        赋值 (x, i)
    .如果真结束
    
.变量循环尾 ()
赋值 (.内容, 到文本 (取整 (相加 (相除 (x, 5), 1)))) ' 由于显示哪条记录是由显示记录号数组记录的，因此也应当与显示记录号数组挂钩。
返回 (到数值 (.内容))

.子程序 主界面显示, 空白型, , 
.参数 页次, 整数型, , 

 ' 主界面的显示应当包括：①五个显示框、②五个选择框及编辑框1(这要通过提取记录号数组的初始化来实现)、③当前库签的显示、题次标签、页次标签的显示
显示框2之显示 (页次)
显示框3之显示 (页次)
显示框4之显示 (页次)
显示框5之显示 (页次)
显示框1之显示 (页次)
获取焦点 ()

.子程序 显示框显示执行, 文本型, , 
.局部变量 i, 整数型, , , 

赋值 (显示内容, “”)
.变量循环首 (1, 取数组成员数 (显示字段号数组), 1, i)
    .如果 (等于 (取字段类型 (显示字段号数组 [i]), #逻辑型))
        赋值 (显示内容, 相加 (显示内容, 到文本 (读 (显示字段号数组 [i])), 字符 (13), 字符 (10)))
    .否则
        .如果真 (等于 (取字段类型 (显示字段号数组 [i]), #字节集型))
            赋值 (显示内容, 相加 (显示内容, 到文本 (未知支持库函数_4 (读 (显示字段号数组 [i]), “dybjppbb”, )), 字符 (13), 字符 (10)))
        .如果真结束
        
    .如果结束
    
.变量循环尾 ()
返回 (显示内容)

.子程序 显示框1之显示, 空白型, , 
.参数 页次, 整数型, , 

 ' 这里要读字段了，根据显示字段号数组来决定显示哪些字段。
.如果 (小于或等于 (相加 (相乘 (相减 (页次, 1), 5), 1), 取数组成员数 (显示记录号数组)))
    .如果真 (等于 (跳到 ( [相加 (相乘 (相减 (页次, 1), 5), 1)]), 真))
        赋值 (.禁止, 假)
        赋值 (.内容, “”)
        赋值 (.内容, 显示框显示执行 ())
        .如果 (等于 (读 (1), 真))
            赋值 (.选中, 真)
        .否则
            赋值 (.选中, 假)
        .如果结束
        
    .如果真结束
    
.否则
    赋值 (.内容, “”)
    赋值 (.禁止, 真)
.如果结束


.子程序 显示框2之显示, 空白型, , 
.参数 页次, 整数型, , 

.如果 (小于或等于 (相加 (相乘 (相减 (页次, 1), 5), 2), 取数组成员数 (显示记录号数组)))
    .如果真 (等于 (跳到 ( [相加 (相乘 (相减 (页次, 1), 5), 2)]), 真))
        赋值 (.禁止, 假)
        赋值 (.内容, “”)
        赋值 (.内容, 显示框显示执行 ())
        .如果 (等于 (读 (1), 真))
            赋值 (.选中, 真)
        .否则
            赋值 (.选中, 假)
        .如果结束
        
    .如果真结束
    
.否则
    赋值 (.内容, “”)
    赋值 (.禁止, 真)
.如果结束


.子程序 显示框3之显示, 空白型, , 
.参数 页次, 整数型, , 

.如果 (小于或等于 (相加 (相乘 (相减 (页次, 1), 5), 3), 取数组成员数 (显示记录号数组)))
    .如果真 (等于 (跳到 ( [相加 (相乘 (相减 (页次, 1), 5), 3)]), 真))
        赋值 (.禁止, 假)
        赋值 (.内容, “”)
        赋值 (.内容, 显示框显示执行 ())
        .如果 (等于 (读 (1), 真))
            赋值 (.选中, 真)
        .否则
            赋值 (.选中, 假)
        .如果结束
        
    .如果真结束
    
.否则
    赋值 (.内容, “”)
    赋值 (.禁止, 真)
.如果结束


.子程序 显示框4之显示, 空白型, , 
.参数 页次, 整数型, , 

.如果 (小于或等于 (相加 (相乘 (相减 (页次, 1), 5), 4), 取数组成员数 (显示记录号数组)))
    .如果真 (等于 (跳到 ( [相加 (相乘 (相减 (页次, 1), 5), 4)]), 真))
        赋值 (.禁止, 假)
        赋值 (.内容, “”)
        赋值 (.内容, 显示框显示执行 ())
        .如果 (等于 (读 (1), 真))
            赋值 (.选中, 真)
        .否则
            赋值 (.选中, 假)
        .如果结束
        
    .如果真结束
    
.否则
    赋值 (.内容, “”)
    赋值 (.禁止, 真)
.如果结束


.子程序 显示框5之显示, 空白型, , 
.参数 页次, 整数型, , 

.如果 (小于或等于 (相加 (相乘 (相减 (页次, 1), 5), 5), 取数组成员数 (显示记录号数组)))
    .如果真 (等于 (跳到 ( [相加 (相乘 (相减 (页次, 1), 5), 5)]), 真))
        赋值 (.禁止, 假)
        赋值 (.内容, “”)
        赋值 (.内容, 显示框显示执行 ())
        .如果 (等于 (读 (1), 真))
            赋值 (.选中, 真)
        .否则
            赋值 (.选中, 假)
        .如果结束
        
    .如果真结束
    
.否则
    赋值 (.内容, “”)
    赋值 (.禁止, 真)
.如果结束


.子程序 _设置密码6_被选择, 空白型, , 
.局部变量 新密码1, 文本型, , , 
.局部变量 新密码2, 文本型, , , 

 ' 密码设置用两个输入框来比较一下就可以了，没有必要单独用一个窗口。那除了好看之外别无用处。
.如果 (等于 (输入框 (“请输入新密码：”, “密码输入框”, , 新密码1, 4), 真))
    .如果 (等于 (输入框 (“请再次输入新密码，以便确认！”, “密码确认：”, , 新密码2, 4), 真))
        .如果 (等于 (新密码1, 新密码2))
            置当前库 (“选择题库”)
            置数据库密码 (新密码1)
            置当前库 (“材料题库”)
            置数据库密码 (新密码1)
            置当前库 (“问答题库”)
            置数据库密码 (新密码1)
            
        .否则
            信息框 (“两次输入的密码不一致！请重试！”, 0, )
        .如果结束
        
    .否则
        信息框 (“设置密码动作已取消！”, 0, )
    .如果结束
    
.否则
    信息框 (“设置密码动作已取消！”, 0, )
.如果结束


.子程序 _退出12_被选择, 空白型, , 
.局部变量 x, 整数型, , , 

 ' 这个地方主要是判断一个文本试卷编辑框是否已改变了内容，让用户决定是否需要保存。同时，将当前库和记录号记录下来，放在注册表中，以便于下次启动程序时调用。
.如果 (等于 (存盘状态, 假))
    赋值 (x, 信息框 (相加 (“编辑界面中的纯文本内容尚未保存，要保存吗？”, 字符 (13), 字符 (10), “保存纯文本试卷可在主界面选择”, #左引号, “保存纯文本试卷”, #右引号, 字符 (13), 字符 (10), “或者在这里直接点击”, #左引号, “是”, #右引号, “。”), 相加 (32, 3), ))
    .如果 (等于 (x, 5))
        _保存纯文本试卷20_被选择 ()
    .否则
        .如果真 (等于 (x, 6))
            删除注册项 (3, “software\高中历史题库系统”)
            结束 ()
        .如果真结束
        
    .如果结束
    
.否则
    删除注册项 (3, “software\高中历史题库系统”)
    结束 ()
.如果结束



.子程序 __启动窗口_可否被关闭, 逻辑型, , 
.局部变量 x, 整数型, , , 

 ' 这个地方主要是判断一个文本试卷编辑框是否已改变了内容，让用户决定是否需要保存。同时，将当前库和记录号记录下来，放在注册表中，以便于下次启动程序时调用。
.如果 (等于 (存盘状态, 假))
    赋值 (x, 信息框 (相加 (“编辑界面中的纯文本内容尚未保存，要保存吗？”, 字符 (13), 字符 (10), “保存纯文本试卷可在主界面选择”, #左引号, “保存纯文本试卷”, #右引号, 字符 (13), 字符 (10), “或者在这里直接点击”, #左引号, “是”, #右引号, “。”), 相加 (32, 3), ))
    .如果 (等于 (x, 5))
        _保存纯文本试卷20_被选择 ()
        清理注册表 ()
    .否则
        .如果 (等于 (x, 6))
            清理注册表 ()
            返回 (真)
        .否则
            .如果真 (等于 (x, 1))
                返回 (假)
            .如果真结束
            
        .如果结束
        
    .如果结束
    
.否则
    清理注册表 ()
    返回 (真)
.如果结束


.子程序 清理注册表, 空白型, , 
.局部变量 n, 整数型, , , 
.局部变量 m, 整数型, , , 

.判断循环首 (等于 (注册项是否存在 (3, 相加 (“software\高中历史题库系统\cl\c”, 到文本 (), 到文本 ())), 真)) ' 这里还缺一段
    删除注册项 (3, 相加 (“software\高中历史题库系统\cl\c”, 到文本 (), 到文本 ()))
    赋值 (相加 (1))
    赋值 (相加 (1))
.判断循环尾 ()
删除注册项 (3, “software\高中历史题库系统\cl”)
赋值 (m, 0)
赋值 (n, 0)
.判断循环首 (等于 (注册项是否存在 (3, 相加 (“software\高中历史题库系统\wl\w”, 到文本 (n), 到文本 (m))), 真)) ' 这里还缺一段
    删除注册项 (3, 相加 (“software\高中历史题库系统\wl\w”, 到文本 (n), 到文本 (m)))
    赋值 (相加 (1))
    赋值 (相加 (1))
.判断循环尾 ()
删除注册项 (3, “software\高中历史题库系统\wl”)
删除注册项 (3, “software\高中历史题库系统”)


.子程序 _导入原始文本8_被选择, 空白型, , 
 ' 这里的功能比较简单，只须提供导入文本到文本试卷编辑框就可以了。除此而外，还要注意“入库”菜单的状态变化，以及编辑界面和选题界面的切换。
赋值 (.过滤器, “文本文件(*.txt)|*.txt”)
.如果真 (打开 ())
    赋值 (.内容, 到文本 (读入文件 (.文件名)))
    赋值 (.禁止, 假)
    _编辑界面_被单击 ()
.如果真结束

 ' 导入文本部分不应该对文本作过多的处理，只要导入文本试卷编辑框就可以了。毕竟，用户还可以在此处对导入的文本数据进行分割、取舍等操作。

.子程序 选择题导入文本处理, 空白型, , 
.参数 供分割的内容, 文本型, , 

.局部变量 小循环文本数组, 文本型, , "0", 
.局部变量 初级文本数组, 文本型, , "0", 
.局部变量 i, 整数型, , , 

 ' 首先对本用换行符进行分割
赋值 (初级文本数组, 分割文本 (供分割的内容, 相加 (字符 (13), 字符 (10)), ))
 ' 再用Tab进行行二次分割。
.变量循环首 (1, 取数组成员数 (初级文本数组), 1, i)
    赋值 (小循环文本数组, 分割文本 (初级文本数组 [i], 字符 (9), ))
    加入成员 (终极文本数组, 小循环文本数组)
.变量循环尾 ()
 ' 对文本分割完成后，还须将终极文本数组中的空值去除。
.变量循环首 (取数组成员数 (终极文本数组), 1, -1, i)
    赋值 (终极文本数组 [i], 删全部空 (终极文本数组 [i]))
    .如果真 (等于 (终极文本数组 [i], “”))
        删除成员 (终极文本数组, i, 1)
    .如果真结束
    
.变量循环尾 ()

.子程序 材料问答题导入文本处理, 空白型, , 
.参数 供分割的内容, 文本型, , 

.局部变量 i, 整数型, , , 

 ' 材料问答题的处理其方法比较简单。只要根据“[[cut]]"进行一下分割就可以了。但不要删除空格。
 ' 首先对本用换行符进行分割
赋值 (终极文本数组, 分割文本 (供分割的内容, “[[cut]]”, ))
 ' 材料解析和问答题不需要进行二次分割。
 ' 对文本分割完成后，还须将终极文本数组中的空值去除。
.变量循环首 (取数组成员数 (终极文本数组), 1, -1, i)
    赋值 (终极文本数组 [i], 删全部空 (终极文本数组 [i]))
    .如果真 (等于 (终极文本数组 [i], “”))
        删除成员 (终极文本数组, i, 1)
    .如果真结束
    
.变量循环尾 ()

.子程序 入库, 空白型, , 
.局部变量 转换数组, 整数型, , "0", 

 ' 这三个入库，都必须和字段选择窗口挂钩。
赋值 (转换数组, 显示字段号数组)
清除数组 (显示字段号数组)
载入 (字段选择窗口, , 真)
 ' 这部分才是入库的关键所在。
写库 ()
清除数组 (终极文本数组)
清除数组 (显示字段号数组)
赋值 (显示字段号数组, 转换数组)

.子程序 写库, 空白型, , 
.局部变量 i, 整数型, , , 
.局部变量 in, 整数型, , , 

.变量循环首 (1, 取整 (相除 (取数组成员数 (终极文本数组), 取数组成员数 (显示字段号数组))), 1, i)
     ' 这里要用到嵌套循环，外层循环用以遍历所有要写入的记录，内层循环则用以写下每一个字段。这段代码是可以复用的。
    加空记录 ()
    .变量循环首 (1, 取数组成员数 (显示字段号数组), 1, in)
        写 (显示字段号数组 [in], 未知支持库函数_3 (到字节集 (终极文本数组 [相加 (相乘 (相减 (i, 1), 取数组成员数 (显示字段号数组)), in)]), “dybjppbb”, ))
    .变量循环尾 ()
.变量循环尾 ()

.子程序 _当前文本入库13_被选择, 空白型, , 
 ' 也要能够根据当前库来决定调用哪个子程序来处理文并实现入库事宜。
 ' 如果是材料题或问答题，还须注意入库的子程序不同。
.如果 (等于 (取当前库 (), “选择题库”))
    选择题导入文本处理 (.内容)
     ' 应该要加一个参数才对。
    入库 ()
    信息框 (“试题已添加到题库之中！”, 0, )
    _选题界面_被单击 ()
    _选择题库9_被选择 ()
.否则
    .如果 (等于 (取当前库 (), “材料题库”))
        材料问答题导入文本处理 (.内容)
        入库 ()
        信息框 (“试题已添加到材料题库之中！”, 0, )
        _选题界面_被单击 ()
        _材料题库10_被选择 ()
    .否则
        .如果真 (等于 (取当前库 (), “问答题库”))
            材料问答题导入文本处理 (.内容)
            入库 ()
            信息框 (“试题已添加到问答题库之中！”, 0, )
            _选题界面_被单击 ()
            _问答题库11_被选择 ()
        .如果真结束
        
    .如果结束
    
.如果结束


.子程序 _导入文本要求14_被选择, 空白型, , 
 ' 导入文本要求主要功能相当简单，其实也就是载入一个窗口罢了。
载入 (导入文本要求, , 真)

.子程序 _在当前库中查找试题21_被选择, 空白型, , 
 ' 这里要通过载入查找窗口来实现。
载入 (查找试题窗口, , 真)

.子程序 _选择框1_被单击, 空白型, , 
 ' 选择框的事件中，必须注意的是提取记录号数组的变化，各个题库不同。换句话说，也要具备自动判别当前数据库的能力。
 ' 选择框事件所涉及到的对象有①：选择框本身的变化――这个可以不去过多考虑，变化很明显；②数据库选中状态必须入库③显示选中记录的编辑框1的内容必须刷新。④涉及到的数组有“选提”，而与“显示记录号数组”并无多大关系。除非是在查找试题的状态下，要显示所有被选中的题目，即使那样，只要把“选提”的数值成员赋予“显示记录号数组”就可以了。
.如果 (小于或等于 (相加 (相乘 (相减 (到数值 (.内容), 1), 5), 1), 取数组成员数 (显示记录号数组)))
    .如果真 (等于 (跳到 (显示记录号数组 [相加 (相乘 (相减 (到数值 (.内容), 1), 5), 1)]), 真))
        .如果 (等于 (读 (1), 假))
            写 (1, 真)
            主界面显示 (到数值 (.内容))
            提取记录号刷新 ()
        .否则
            写 (1, 假)
            主界面显示 (到数值 (.内容))
            提取记录号刷新 ()
        .如果结束
        
    .如果真结束
    
.否则
    赋值 (.禁止, 真)
.如果结束


.子程序 _选择框2_被单击, 空白型, , 
.如果 (小于或等于 (相加 (相乘 (相减 (到数值 (.内容), 1), 5), 2), 取数组成员数 (显示记录号数组)))
    .如果真 (等于 (跳到 (显示记录号数组 [相加 (相乘 (相减 (到数值 (.内容), 1), 5), 2)]), 真))
        .如果 (等于 (读 (1), 假))
            写 (1, 真)
            主界面显示 (到数值 (.内容))
            提取记录号刷新 ()
        .否则
            写 (1, 假)
            主界面显示 (到数值 (.内容))
            提取记录号刷新 ()
        .如果结束
        
    .如果真结束
    
.否则
    赋值 (.禁止, 真)
.如果结束


.子程序 _选择框3_被单击, 空白型, , 
.如果 (小于或等于 (相加 (相乘 (相减 (到数值 (.内容), 1), 5), 3), 取数组成员数 (显示记录号数组)))
    .如果真 (等于 (跳到 (显示记录号数组 [相加 (相乘 (相减 (到数值 (.内容), 1), 5), 3)]), 真))
        .如果 (等于 (读 (1), 假))
            写 (1, 真)
            主界面显示 (到数值 (.内容))
            提取记录号刷新 ()
        .否则
            写 (1, 假)
            主界面显示 (到数值 (.内容))
            提取记录号刷新 ()
        .如果结束
        
    .如果真结束
    
.否则
    赋值 (.禁止, 真)
.如果结束


.子程序 _选择框4_被单击, 空白型, , 
.如果 (小于或等于 (相加 (相乘 (相减 (到数值 (.内容), 1), 5), 4), 取数组成员数 (显示记录号数组)))
    .如果真 (等于 (跳到 (显示记录号数组 [相加 (相乘 (相减 (到数值 (.内容), 1), 5), 4)]), 真))
        .如果 (等于 (读 (1), 假))
            写 (1, 真)
            主界面显示 (到数值 (.内容))
            提取记录号刷新 ()
        .否则
            写 (1, 假)
            主界面显示 (到数值 (.内容))
            提取记录号刷新 ()
        .如果结束
        
    .如果真结束
    
.否则
    赋值 (.禁止, 真)
.如果结束


.子程序 _选择框5_被单击, 空白型, , 

.如果 (小于或等于 (相加 (相乘 (相减 (到数值 (.内容), 1), 5), 5), 取数组成员数 (显示记录号数组)))
    .如果真 (等于 (跳到 (显示记录号数组 [相加 (相乘 (相减 (到数值 (.内容), 1), 5), 5)]), 真))
        .如果 (等于 (读 (1), 假))
            写 (1, 真)
            主界面显示 (到数值 (.内容))
            提取记录号刷新 ()
        .否则
            写 (1, 假)
            主界面显示 (到数值 (.内容))
            提取记录号刷新 ()
        .如果结束
        
    .如果真结束
    
.否则
    赋值 (.禁止, 真)
.如果结束


.子程序 _选题编辑界面切换322_被选择, 空白型, , 
 ' 这个界面切换是指编辑界面和选题界面的切换。
.如果 (等于 (.选中, 真))
    _编辑界面_被单击 ()
.否则
    .如果真 (等于 (.选中, 真))
        _选题界面_被单击 ()
    .如果真结束
    
.如果结束


.子程序 _无风格3_被选择, 空白型, , 
未知支持库函数_0 (#)
 ' 有关界面风格的切换，须注意默认为无风格。
赋值 (.选中, 真)
赋值 (.选中, 假)
赋值 (.选中, 假)
赋值 (.选中, 假)

.子程序 _蓝色风格3_被选择, 空白型, , 
未知支持库函数_0 (#)
赋值 (.选中, 假)
赋值 (.选中, 真)
赋值 (.选中, 假)
赋值 (.选中, 假)

.子程序 _绿色风格3_被选择, 空白型, , 
未知支持库函数_0 (#)
赋值 (.选中, 假)
赋值 (.选中, 假)
赋值 (.选中, 真)
赋值 (.选中, 假)

.子程序 _银色风格3_被选择, 空白型, , 
赋值 (.选中, 假)
赋值 (.选中, 假)
赋值 (.选中, 假)
赋值 (.选中, 真)
未知支持库函数_0 (#)

.子程序 _手工维护管理7_被选择, 空白型, , 
.如果 (等于 (取当前库 (), “选择题库”))
    载入 (选择题库维护窗口, , 真)
.否则
    载入 (材料问答维护窗口, , 真)
.如果结束


.子程序 _显示框1_获得焦点, 空白型, , 
 ' 显示框的获得焦点和被双击是两个比较重要的事件，都和记录号的跳转有直接的关系。也直接影响到维护管理界面打开后的记录号。
.如果真 (小于或等于 (相加 (相乘 (相减 (到数值 (.内容), 1), 5), 1), 取数组成员数 (显示记录号数组)))
    跳到 (显示记录号数组 [相加 (相乘 (相减 (到数值 (.内容), 1), 5), 1)])
    赋值 (.标题, 相加 (“第”, 到文本 (取记录号 ()), “题/共”, 到文本 (取记录数 ()), “题”))
.如果真结束


.子程序 _显示框2_获得焦点, 空白型, , 
 ' 显示框的获得焦点和被双击是两个比较重要的事件，都和记录号的跳转有直接的关系。也直接影响到维护管理界面打开后的记录号。
.如果真 (小于或等于 (相加 (相乘 (相减 (到数值 (.内容), 1), 5), 2), 取数组成员数 (显示记录号数组)))
    跳到 (显示记录号数组 [相加 (相乘 (相减 (到数值 (.内容), 1), 5), 2)])
    赋值 (.标题, 相加 (“第”, 到文本 (取记录号 ()), “题/共”, 到文本 (取记录数 ()), “题”))
.如果真结束


.子程序 _显示框3_获得焦点, 空白型, , 
 ' 显示框的获得焦点和被双击是两个比较重要的事件，都和记录号的跳转有直接的关系。也直接影响到维护管理界面打开后的记录号。
.如果真 (小于或等于 (相加 (相乘 (相减 (到数值 (.内容), 1), 5), 3), 取数组成员数 (显示记录号数组)))
    跳到 (显示记录号数组 [相加 (相乘 (相减 (到数值 (.内容), 1), 5), 3)])
    赋值 (.标题, 相加 (“第”, 到文本 (取记录号 ()), “题/共”, 到文本 (取记录数 ()), “题”))
.如果真结束


.子程序 _显示框4_获得焦点, 空白型, , 
 ' 显示框的获得焦点和被双击是两个比较重要的事件，都和记录号的跳转有直接的关系。也直接影响到维护管理界面打开后的记录号。
.如果真 (小于或等于 (相加 (相乘 (相减 (到数值 (.内容), 1), 5), 4), 取数组成员数 (显示记录号数组)))
    跳到 (显示记录号数组 [相加 (相乘 (相减 (到数值 (.内容), 1), 5), 4)])
    赋值 (.标题, 相加 (“第”, 到文本 (取记录号 ()), “题/共”, 到文本 (取记录数 ()), “题”))
.如果真结束


.子程序 _显示框5_获得焦点, 空白型, , 
 ' 显示框的获得焦点和被双击是两个比较重要的事件，都和记录号的跳转有直接的关系。也直接影响到维护管理界面打开后的记录号。
.如果真 (小于或等于 (相加 (相乘 (相减 (到数值 (.内容), 1), 5), 5), 取数组成员数 (显示记录号数组)))
    跳到 (显示记录号数组 [相加 (相乘 (相减 (到数值 (.内容), 1), 5), 5)])
    赋值 (.标题, 相加 (“第”, 到文本 (取记录号 ()), “题/共”, 到文本 (取记录数 ()), “题”))
.如果真结束


.子程序 _显示框1_被双击, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

 ' 这个部分涉及的主要也只是两个功能：①记录的跳转；②自动进入管理维护界面。
_显示框1_获得焦点 ()
.如果 (等于 (取当前库 (), “选择题库”))
    载入 (选择题库维护窗口, , 真)
.否则
    载入 (材料问答维护窗口, , 真)
.如果结束


.子程序 _显示框2_被双击, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

 ' 这个部分涉及的主要也只是两个功能：①记录的跳转；②自动进入管理维护界面。
_显示框2_获得焦点 ()
.如果 (等于 (取当前库 (), “选择题库”))
    载入 (选择题库维护窗口, , 真)
.否则
    载入 (材料问答维护窗口, , 真)
.如果结束


.子程序 _显示框3_被双击, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

 ' 这个部分涉及的主要也只是两个功能：①记录的跳转；②自动进入管理维护界面。
_显示框3_获得焦点 ()
.如果 (等于 (取当前库 (), “选择题库”))
    载入 (选择题库维护窗口, , 真)
.否则
    载入 (材料问答维护窗口, , 真)
.如果结束


.子程序 _显示框4_被双击, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

 ' 这个部分涉及的主要也只是两个功能：①记录的跳转；②自动进入管理维护界面。
_显示框4_获得焦点 ()
.如果 (等于 (取当前库 (), “选择题库”))
    载入 (选择题库维护窗口, , 真)
.否则
    载入 (材料问答维护窗口, , 真)
.如果结束


.子程序 _显示框5_被双击, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

 ' 这个部分涉及的主要也只是两个功能：①记录的跳转；②自动进入管理维护界面。
_显示框5_获得焦点 ()
.如果 (等于 (取当前库 (), “选择题库”))
    载入 (选择题库维护窗口, , 真)
.否则
    载入 (材料问答维护窗口, , 真)
.如果结束



.子程序 _提取纯文本试卷19_被选择, 空白型, , 
.局部变量 取材料分值, 整数型, , , 
.局部变量 材料题小问数, 整数型, , , 
.局部变量 取小问分值, 整数型, , , 
.局部变量 小问分值, 整数型, , , 
.局部变量 单题总分, 整数型, , , 
.局部变量 材料题题分, 整数型, , "0", 
.局部变量 材料题单题赋值, 空白型, , , 
.局部变量 取问答分值, 空白型, , , 
.局部变量 材料题总分, 空白型, , , 
.局部变量 问答题小问数, 空白型, , , 
.局部变量 问答单题总分, 空白型, , , 
.局部变量 问答取小问分值, 空白型, , , 
.局部变量 问答小问分值, 空白型, , , 
.局部变量 问答题题分, 空白型, , "0", 
.局部变量 问答题单题赋值, 空白型, , , 
.局部变量 问答题总分, 空白型, , , 

赋值 (是否提取格式试卷, 假)
赋值 (是否在提取答案, 假)
载入 (试卷生成窗口1, , 真)
 ' 无论情况如何，都要通过“试卷生成窗口1”来搜集部分试卷信息。
.如果 (等于 (是否设分值, 假))
     ' 如果不设分值，事情会好办得多，只要挨个填入一系列信息生成一个试卷头就行了。
    试卷标题.加入文本 (相加 (字符 (13), 字符 (10)), 相加 (字符 (13), 字符 (10)), “第I卷  客观题部分”, 相加 (字符 (13), 字符 (10)), 相加 (字符 (13), 字符 (10)), “一、选择题。(本大题共”, 到文本 (取数组成员数 (选提)), “小题）”, 相加 (字符 (13), 字符 (10)))
    选择题提取 ()
    “第II卷　主观题部分”.加入文本 (相加 (字符 (13), 字符 (10)), “二、材料解析题。（本大题共”, 到文本 (取数组成员数 (材提)), “小题）”, 相加 (字符 (13), 字符 (10)))
    材料题提取 ()
    “三、问答题。（本大题共”.加入文本 (到文本 (取数组成员数 (问提)), “小题）”, 相加 (字符 (13), 字符 (10)))
    问答题提取 ()
    信息框 (“试卷提取完成，请检查！”, 相加 (64, 0), )
    _编辑界面_被单击 ()
.否则
     ' 如果设分值的话，情况的复杂程度以几何级别向上攀升。
    载入 (试卷生成窗口2, , 真)
    载入 (试卷生成窗口3, , 真)
     ' 载入两个窗口的只在于搜集相关信息而已，本身并不会直接生成试卷。因此才会出现两个窗口连续载入的奇怪现象。
    试卷标题.加入文本 (相加 (字符 (13), 字符 (10)), “考试时间：从”, 考试开始时间, “到”, 考试结束时间, “    共”, 到文本 (考试时长), “分钟”, 相加 (字符 (13), 字符 (10)), “卷面总分：”, 到文本 (卷面总分), “    出卷人：”, 出卷人, 相加 (字符 (13), 字符 (10)), 相加 (字符 (13), 字符 (10)), “第I卷  客观题部分”, 相加 (字符 (13), 字符 (10)), 相加 (字符 (13), 字符 (10)), “一、选择题。(本大题共”, 到文本 (取数组成员数 (选提)), “小题。每小题”, 到文本 (选择题每题分值), “分，共”, 到文本 (相乘 (取数组成员数 (选提), 选择题每题分值)), “分。)”, 相加 (字符 (13), 字符 (10)))
     ' 试卷头的设置并无多大不同，不同的在于对下面分值的设置，难度极大。
     ' 选择题由于各题相对固定，给定的得分又是每题一致，所以相对简单。
    选择题提取 ()
     ' 对于材料解析和问答题的导出，由于是将信息储存在注册表中，因此要注意①命名规则；②注意在系统关闭时要及时删除主键。
     ' 具体命名规则如下：①材料题每题本身以“C1”、“C2”、...“Cn”的方式规定；②每小题的分值的键值名规定为：“C11”、“C21”、...“Cnn”的形式加以规定。
     ' 下面制作试卷头的第二部分，又一个标题。
    相加 (字符 (13), 字符 (10)).加入文本 (“第II卷　主观题部分”, 相加 (字符 (13), 字符 (10)), 相加 (字符 (13), 字符 (10)))
    
    
    
    
    “二、材料解析题。”.加入文本 (“（本大题共”, 到文本 (取数组成员数 (材提)), “题。其中”)
     ' 下面要做的是给材料解析题的每一题（这需要加一个循环过程）加上分值。（不是每一小问，但却必须计算每一小问分值之和。）要做到这一点。必须先知道每一题究竟有几个小问，这点可从注册表中得到――到“Cn”的值就可以了。
    .变量循环首 (1, 取数组成员数 (材提), 1, 取材料分值)
        赋值 (单题总分, 0)
         ' 因为是要确定材料题每一题的分值之和，所以用“材提”数组的成员数就可以了。每一次循环都必须取出一个“Cn”的值。
        赋值 (材料题小问数, 取数值注册项 (3, 相加 (“software\高中历史题库系统\cl\c”, 到文本 (取材料分值)), 0))
         ' 取出材料题的小问后，我们可以继续取出每小问的分值。也用一个变量循环。
        .如果真 (大于或等于 (材料题小问数, 1))
             ' 如果没有成员，则单题总分应为零分。
            .变量循环首 (1, 材料题小问数, 1, 取小问分值)
                赋值 (小问分值, 取数值注册项 (3, 相加 (“software\高中历史题库系统\cl\c”, 到文本 (取材料分值), 到文本 (取小问分值)), ))
                赋值 (单题总分, 相加 (单题总分, 小问分值))
                 ' 每一次循环，单题总分的值就会变掉，所以要及时另存为。最好的办法就是再加一个数组。
            .变量循环尾 ()
            加入成员 (材料题题分, 单题总分)
        .如果真结束
        
    .变量循环尾 ()
     ' 此时材料题每一题的单题总分都在“材料题题分”数组之中了。再用变量循环来加上每一题的附属说明。
    .变量循环首 (1, 取数组成员数 (材料题题分), 1, 材料题单题赋值)
        “，第”.加入文本 (到文本 (材料题单题赋值), “题”, 到文本 (材料题题分 [材料题单题赋值]), “分”)
        赋值 (材料题总分, 相加 (材料题总分, 材料题题分 [材料题单题赋值]))
    .变量循环尾 ()
     ' 还要加上结束标志才行。通常这个标志是一个右括号。
    “，共”.加入文本 (到文本 (材料题总分), “分。）”, 相加 (字符 (13), 字符 (10)))
    材料题提取 ()
     ' 为了实现变量的复用，必须将数组重置。
    清除数组 (材料题题分)
     ' 从内存资源的角度来讲，还是清除比较好，其实不清除也可，因为下面已经用不到它了。而且这个数组不过几个数字而已，占不了多少内存。本来这个数组清除后，可以让问答题来用，不过为了避免混淆，还是不用它了。
    
    
    
    
     ' 材料题提取之后，就要继续做试卷头部分，这回是问答题。与材料题非常类似，代码可复制。
    “三、问答题。”.加入文本 (“（本大题共”, 到文本 (取数组成员数 (问提)), “题。其中”)
     ' 下面要做的是给问答题的每一题（这需要加一个循环过程）加上分值。（不是每一小问，但却必须计算每一小问分值之和。）要做到这一点。必须先知道每一题究竟有几个小问，这点可从注册表中得到――到“Wn”的值就可以了。
    .变量循环首 (1, 取数组成员数 (问提), 1, 取问答分值)
         ' 无论是选择、材料解析还是问答，其每一题的题分都是在总的“提取纯文本试卷”子程序里，而不是在各自提取题目的子程序中完成的。
        赋值 (问答单题总分, 0)
         ' 因为是要确定材料题每一题的分值之和，所以用“材提”数组的成员数就可以了。每一次循环都必须取出一个“Wn”的值。
        赋值 (问答题小问数, 取数值注册项 (3, 相加 (“software\高中历史题库系统\wl\w”, 到文本 (取问答分值)), 0))
         ' 取出材料题的小问后，我们可以继续取出每小问的分值。也用一个变量循环。
        .如果真 (大于或等于 (问答题小问数, 1))
             ' 如果没有成员，则单题总分应为零分。
            .变量循环首 (1, 问答题小问数, 1, 问答取小问分值)
                赋值 (问答小问分值, 取数值注册项 (3, 相加 (“software\高中历史题库系统\wl\w”, 到文本 (取问答分值), 到文本 (问答取小问分值)), ))
                赋值 (问答单题总分, 相加 (问答单题总分, 问答小问分值))
                 ' 每一次循环，单题总分的值就会变掉，所以要及时另存为。最好的办法就是再加一个数组。
            .变量循环尾 ()
            加入成员 (问答题题分, 问答单题总分)
        .如果真结束
        
    .变量循环尾 ()
     ' 此时问答题每一题的单题总分都在“问答题题分”数组之中了。再用变量循环来加上每一题的附属说明。
    .变量循环首 (1, 取数组成员数 (问答题题分), 1, 问答题单题赋值)
        “，第”.加入文本 (到文本 (问答题单题赋值), “题”, 到文本 (问答题题分 [问答题单题赋值]), “分”)
         ' 显示为：“，第X题X分”
        赋值 (问答题总分, 相加 (问答题总分, 问答题题分 [问答题单题赋值]))
    .变量循环尾 ()
     ' 还要加上结束标志才行。通常这个标志是一个右括号。
    “，共”.加入文本 (到文本 (问答题总分), “分。）”, 相加 (字符 (13), 字符 (10)))
    问答题提取 ()
    信息框 (“试卷提取完成，请检查！”, 相加 (64, 0), )
    _编辑界面_被单击 ()
     ' 至此，提取文本试卷的工作应该是完成了。
.如果结束


.子程序 选择题提取, 空白型, , 
.局部变量 选择记录循环, 整数型, , , 
.局部变量 选择字段循环, 整数型, , , 

清除数组 (显示字段号数组)
置当前库 (“选择题库”)
.如果 (等于 (是否默认导出, 真))
    .变量循环首 (1, 取数组成员数 (选提), 1, 选择记录循环)
        跳到 (选提 [选择记录循环])
        .变量循环首 (4, 8, 1, 选择字段循环)
            到文本 (未知支持库函数_4 (读 (选择字段循环), “dybjppbb”, )).加入文本 (相加 (字符 (13), 字符 (10)))
        .变量循环尾 ()
    .变量循环尾 ()
     ' 以上是导出选择题部分的内容，至此已完成选择题部分的导出。
    选择题导入文本处理 (.内容)
    选择题初排 ()
    赋值 (.内容, “”)
    
.否则
    载入 (字段选择窗口, , 真)
    .变量循环首 (1, 取数组成员数 (选提), 1, 选择记录循环)
        跳到 (选提 [选择记录循环])
        到文本 (选择记录循环).加入文本 (“.”)
        .变量循环首 (1, 取数组成员数 (显示字段号数组), 1, 选择字段循环)
            到文本 (未知支持库函数_4 (读 (显示字段号数组 [选择字段循环]), “dybjppbb”, )).加入文本 (相加 (字符 (13), 字符 (10)))
        .变量循环尾 ()
    .变量循环尾 ()
    
.如果结束


.子程序 材料题提取, 空白型, , 
.局部变量 材料记录循环, 空白型, , , 
.局部变量 材料字段循环, 空白型, , , 
.局部变量 写分值, 空白型, , , 
.局部变量 单题总分, 空白型, , , 
.局部变量 单题分值数组, 空白型, , "0", 

 ' 无论调用哪一个子程序来导出试题，都须注意及时清除数组。
 ' 材料和问答题的提取，还要注意题号的变化，要能自动加上题号。（以与选择题一致。）
清除数组 (显示字段号数组)
置当前库 (“材料题库”)
.如果 (等于 (是否默认导出, 真))
    .变量循环首 (1, 取数组成员数 (材提), 1, 材料记录循环)
         ' 每一次的循环即导出一题，所以要加上题号，即应在此处。这个地方加的时候还要考虑选择题的题数，同时，题号后面一般有一个标点，这里借用了顿号。
        到文本 (相加 (取数组成员数 (选提), 材料记录循环)).加入文本 (“.”)
         ' 要加上每小问的分值也只有加在这里了。每小问的分值正是写在本题前面，然后换行。
        .如果真 (等于 (是否设分值, 真))
             ' 这里需要单独计算各小问的分值，与前面类似。
            “（本题共”.加入文本 (到文本 (取数值注册项 (3, 相加 (“software\高中历史题库系统\cl\c”, 到文本 (材料记录循环)), )), “小问，其中”)
             ' 显示内容将会是――“（本题共X小问，其中”――（不包括前面的引号和破折号）
            .变量循环首 (1, 取数值注册项 (3, 相加 (“software\高中历史题库系统\cl\c”, 到文本 (材料记录循环)), ), 1, 写分值)
                “，第”.加入文本 (到文本 (写分值), “小问”, 到文本 (取数值注册项 (3, 相加 (“software\高中历史题库系统\cl\c”, 到文本 (材料记录循环), 到文本 (写分值)), )), “分”)
                 ' 显示的内容将会是――“，第X小问X分”――（不包括前面的引号和破折号）
                赋值 (单题总分, 相加 (单题总分, 取数值注册项 (3, 相加 (“software\高中历史题库系统\cl\c”, 到文本 (材料记录循环), 到文本 (写分值)), )))
                 ' 本循环第一次循环结束后，“单题总分”不断累积，即产生第一题材料解析的总分值。相应地，第二次将产生第二题的总分值。
            .变量循环尾 ()
            加入成员 (单题分值数组, 单题总分)
             ' 由于每次循环都会产生一个“单题总分”所以每次的数据要保存下来，用数组是个比较好的选择，这比用注册表简单得多。之所以计分时要采用注册表的手法，其实原因在于材料解析和问答题本身的每题的小问的数量是不确定的，所以无从知道要将要用到多少个数组，这就导致无法事先对数组进行定义，而数组又不能由程序代码本身来直接进行定义（或声明）。
            “，共”.加入文本 (到文本 (单题分值数组 [材料记录循环]), “分。）”, 相加 (字符 (13), 字符 (10)))
            赋值 (单题总分, 0)
             ' 此时仍在每一个题目的循环之中，所以要将“单题总分”清零，否则，每题的总分会自动累加，也就是说后一题的总分会等于自身的总分加上前一题的总分。
        .如果真结束
        
         ' 上面的代码都是对分值和标题的处理，下面才是真正提取材料解析题本身。
        
        跳到 (材提 [材料记录循环])
         ' 材料记录循环，是决定跳到并提取第几题材料解析题，所以名之曰“记录循环”。
        .变量循环首 (4, 5, 1, 材料字段循环)
             ' 默认状态下，导出的是“材料”“问题”两部分，所以应该是4－5才对。
            到文本 (未知支持库函数_4 (读 (材料字段循环), “dybjppbb”, )).加入文本 (相加 (字符 (13), 字符 (10)))
        .变量循环尾 ()
         ' 以上是导出材料解析题部分的内容，至此已完成材料解析题部分的导出。
    .变量循环尾 ()
.否则
    载入 (字段选择窗口, , 真)
     ' 用户自定义的情况下，最大的不同仅在于显示字段号数组的不同。
    .变量循环首 (1, 取数组成员数 (材提), 1, 材料记录循环)
         ' 每一次的循环即导出一题，所以要加上题号，即应在此处。这个地方加的时候还要考虑选择题的题数，同时，题号后面一般有一个标点，这里借用了顿号。
        到文本 (相加 (取数组成员数 (选提), 材料记录循环)).加入文本 (“.”)
         ' 要加上每小问的分值也只有加在这里了。每小问的分值正是写在本题前面，然后换行。
        .如果真 (等于 (是否设分值, 真))
             ' 这里需要单独计算各小问的分值，与前面类似。
            “（本题共”.加入文本 (到文本 (取数值注册项 (3, 相加 (“software\高中历史题库系统\cl\c”, 到文本 (材料记录循环)), )), “小问，其中”)
             ' 显示内容将会是――“（本题共X小问，其中”――（不包括前面的引号和破折号）
            .变量循环首 (1, 取数值注册项 (3, 相加 (“software\高中历史题库系统\cl\c”, 到文本 (材料记录循环)), ), 1, 写分值)
                “，第”.加入文本 (到文本 (写分值), “小问”, 到文本 (取数值注册项 (3, 相加 (“software\高中历史题库系统\cl\c”, 到文本 (材料记录循环), 到文本 (写分值)), )), “分”)
                 ' 显示的内容将会是――“，第X小问X分”――（不包括前面的引号和破折号）
                赋值 (单题总分, 相加 (单题总分, 取数值注册项 (3, 相加 (“software\高中历史题库系统\cl\c”, 到文本 (材料记录循环), 到文本 (写分值)), )))
                 ' 本循环第一次循环结束后，“单题总分”不断累积，即产生第一题材料解析的总分值。相应地，第二次将产生第二题的总分值。
            .变量循环尾 ()
            加入成员 (单题分值数组, 单题总分)
             ' 由于每次循环都会产生一个“单题总分”所以每次的数据要保存下来，用数组是个比较好的选择，这比用注册表简单得多。之所以计分时要采用注册表的手法，其实原因在于材料解析和问答题本身的每题的小问的数量是不确定的，所以无从知道要将要用到多少个数组，这就导致无法事先对数组进行定义，而数组又不能由程序代码本身来直接进行定义（或声明）。
            “，共”.加入文本 (到文本 (单题分值数组 [材料记录循环]), “分。）”, 相加 (字符 (13), 字符 (10)))
            赋值 (单题总分, 0)
             ' 此时仍在每一个题目的循环之中，所以要将“单题总分”清零，否则，每题的总分会自动累加，也就是说后一题的总分会等于自身的总分加上前一题的总分。
        .如果真结束
        
         ' 上面的代码都是对分值和标题的处理，下面才是真正提取材料解析题本身。
        
        跳到 (材提 [材料记录循环])
         ' 材料记录循环，是决定跳到并提取第几题材料解析题，所以名之曰“记录循环”。
        
         ' 以上是导出材料解析题部分的内容，至此已完成材料解析题部分的导出。
        .变量循环首 (1, 取数组成员数 (显示字段号数组), 1, 材料字段循环)
            到文本 (未知支持库函数_4 (读 (显示字段号数组 [材料字段循环]), “dybjppbb”, )).加入文本 (相加 (字符 (13), 字符 (10)))
        .变量循环尾 ()
    .变量循环尾 ()
.如果结束


.子程序 问答题提取, 空白型, , 
.局部变量 问答记录循环, 空白型, , , 
.局部变量 问答字段循环, 空白型, , , 
.局部变量 写分值, 空白型, , , 
.局部变量 单题总分, 空白型, , , 
.局部变量 单题分值数组, 空白型, , "0", 

 ' 无论调用哪一个子程序来导出试题，都须注意及时清除数组。
清除数组 (显示字段号数组)
置当前库 (“问答题库”)
.如果 (等于 (是否默认导出, 真))
    .变量循环首 (1, 取数组成员数 (问提), 1, 问答记录循环)
         ' 每一次的循环即导出一题，所以要加上题号，即应在此处。这个地方加的时候不仅要考虑选择题的题数、问答题本身的题数，还要考虑材料题的题数，同时，题号后面一般有一个标点，这里借用了顿号。
        到文本 (相加 (取数组成员数 (选提), 取数组成员数 (材提), 问答记录循环)).加入文本 (“.”)
         ' 序号上，这里和材料题不同。
        .如果真 (等于 (是否设分值, 真))
             ' 这里需要单独计算各小问的分值，与前面类似。
            “（本题共”.加入文本 (到文本 (取数值注册项 (3, 相加 (“software\高中历史题库系统\wl\w”, 到文本 (问答记录循环)), )), “小问，其中”)
             ' 显示内容将会是――“（本题共X小问，其中”――（不包括前面的引号和破折号）
            .变量循环首 (1, 取数值注册项 (3, 相加 (“software\高中历史题库系统\wl\w”, 到文本 (问答记录循环)), ), 1, 写分值)
                “，第”.加入文本 (到文本 (写分值), “小问”, 到文本 (取数值注册项 (3, 相加 (“software\高中历史题库系统\wl\w”, 到文本 (问答记录循环), 到文本 (写分值)), )), “分”)
                赋值 (单题总分, 相加 (单题总分, 取数值注册项 (3, 相加 (“software\高中历史题库系统\wl\w”, 到文本 (问答记录循环), 到文本 (写分值)), )))
            .变量循环尾 ()
            加入成员 (单题分值数组, 单题总分)
            “，共”.加入文本 (到文本 (单题分值数组 [问答记录循环]), “分。）”, 相加 (字符 (13), 字符 (10)))
            赋值 (单题总分, 0)
        .如果真结束
        
        跳到 (问提 [问答记录循环])
        .变量循环首 (4, 5, 1, 问答字段循环)
            到文本 (未知支持库函数_4 (读 (问答字段循环), “dybjppbb”, )).加入文本 (相加 (字符 (13), 字符 (10)))
        .变量循环尾 ()
         ' 以上是导出问答题部分的内容，至此已完成材料解析题部分的导出。
    .变量循环尾 ()
.否则
    载入 (字段选择窗口, , 真)
     ' 用户自定义的情况下，最大的不同仅在于显示字段号数组的不同。
    .变量循环首 (1, 取数组成员数 (问提), 1, 问答记录循环)
         ' 每一次的循环即导出一题，所以要加上题号，即应在此处。这个地方加的时候不仅要考虑选择题的题数、问答题本身的题数，还要考虑材料题的题数，同时，题号后面一般有一个标点，这里借用了顿号。
        到文本 (相加 (取数组成员数 (选提), 取数组成员数 (材提), 问答记录循环)).加入文本 (“.”)
         ' 序号上，这里和材料题不同。
        .如果真 (等于 (是否设分值, 真))
             ' 这里需要单独计算各小问的分值，与前面类似。
            “（本题共”.加入文本 (到文本 (取数值注册项 (3, 相加 (“software\高中历史题库系统\wl\w”, 到文本 (问答记录循环)), )), “小问，其中”)
             ' 显示内容将会是――“（本题共X小问，其中”――（不包括前面的引号和破折号）
            .变量循环首 (1, 取数值注册项 (3, 相加 (“software\高中历史题库系统\wl\w”, 到文本 (问答记录循环)), ), 1, 写分值)
                “，第”.加入文本 (到文本 (写分值), “小问”, 到文本 (取数值注册项 (3, 相加 (“software\高中历史题库系统\wl\w”, 到文本 (问答记录循环), 到文本 (写分值)), )), “分”)
                赋值 (单题总分, 相加 (单题总分, 取数值注册项 (3, 相加 (“software\高中历史题库系统\wl\w”, 到文本 (问答记录循环), 到文本 (写分值)), )))
            .变量循环尾 ()
            加入成员 (单题分值数组, 单题总分)
            “，共”.加入文本 (到文本 (单题分值数组 [问答记录循环]), “分。）”, 相加 (字符 (13), 字符 (10)))
            赋值 (单题总分, 0)
        .如果真结束
        
        跳到 (问提 [问答记录循环])
        .变量循环首 (1, 取数组成员数 (显示字段号数组), 1, 问答字段循环)
            到文本 (未知支持库函数_4 (读 (显示字段号数组 [问答字段循环]), “dybjppbb”, )).加入文本 (相加 (字符 (13), 字符 (10)))
        .变量循环尾 ()
    .变量循环尾 ()
.如果结束


.子程序 _保存纯文本试卷20_被选择, 空白型, , 
 ' 保存纯文本试卷是最为简单的：只要通过保存对话框来给定一个文件名就可以了，其时要稍注意一下初始过滤器的设置。
.如果真 (打开 ())
    写到文件 (.文件名, 到字节集 (.内容))
.如果真结束


.子程序 _选题界面_被单击, 空白型, , 
赋值 (.选中, 真)
赋值 (.选中, 假)
赋值 (.可视, 假)
赋值 (.禁止, 假)
赋值 (.禁止, 假)
赋值 (.禁止, 假)
赋值 (.颜色, .背景颜色)

.子程序 _编辑界面_被单击, 空白型, , 
赋值 (.选中, 假)
赋值 (.选中, 真)
赋值 (.可视, 真)
赋值 (.禁止, 真)
赋值 (.禁止, 真)
赋值 (.禁止, 真)
赋值 (.颜色, .背景颜色)

.子程序 _文本试卷编辑框_内容被改变, 空白型, , 
赋值 (存盘状态, 假)
赋值 (.禁止, 假)

.子程序 _题库循环5_被选择, 空白型, , 
.如果 (等于 (取当前库 (), “选择题库”))
    _材料题库10_被选择 ()
.否则
    .如果 (等于 (取当前库 (), “材料题库”))
        _问答题库11_被选择 ()
    .否则
        .如果真 (等于 (取当前库 (), “问答题库”))
            _选择题库9_被选择 ()
        .如果真结束
        
    .如果结束
    
.如果结束


.子程序 _对各库选中试题排序0_被选择, 空白型, , 
.局部变量 i, 空白型, , , 

载入 (选中题排序窗口, , 真)
.如果 (等于 (取当前库 (), “选择题库”))
    .变量循环首 (1, 取数组成员数 (选提), 1, i)
        到文本 (选提 [i]).加入文本 (“→”)
    .变量循环尾 ()
.否则
    .如果 (等于 (取当前库 (), “材料题库”))
        .变量循环首 (1, 取数组成员数 (材提), 1, i)
            到文本 (材提 [i]).加入文本 (“→”)
        .变量循环尾 ()
    .否则
        .如果真 (等于 (取当前库 (), “问答题库”))
            .变量循环首 (1, 取数组成员数 (问提), 1, i)
                到文本 (问提 [i]).加入文本 (“→”)
            .变量循环尾 ()
        .如果真结束
        
    .如果结束
    
.如果结束


.子程序 _下一页_被单击, 空白型, , 
.如果真 (小于或等于 (到数值 (.内容), 取整 (相除 (取数组成员数 (显示记录号数组), 5))))
    赋值 (.内容, 到文本 (相加 (到数值 (.内容), 1)))
    赋值 (_启动窗口..标题, 相加 (“第”, .内容, “页/共”, 到文本 (取整 (相加 (相除 (取记录数 (), 5), 1))), “页”))
    赋值 (_启动窗口..标题, 相加 (“第”, 到文本 (相加 (相乘 (5, 相减 (到数值 (.内容), 1)), 1)), “→”, 到文本 (相加 (相乘 (5, 相减 (到数值 (.内容), 1)), 5)), “题”))
    主界面显示 (到数值 (.内容))
.如果真结束


.子程序 _上一页_被单击, 空白型, , 
.如果真 (大于或等于 (到数值 (.内容), 2))
    赋值 (.内容, 到文本 (相减 (到数值 (.内容), 1)))
    赋值 (_启动窗口..标题, 相加 (“第”, .内容, “页/共”, 到文本 (取整 (相加 (相除 (取记录数 (), 5), 1))), “页”))
    赋值 (_启动窗口..标题, 相加 (“第”, 到文本 (相加 (相乘 (5, 相减 (到数值 (.内容), 1)), 1)), “→”, 到文本 (相加 (相乘 (5, 相减 (到数值 (.内容), 1)), 5)), “题”))
    主界面显示 (到数值 (.内容))
.如果真结束


.子程序 _显示当前库选中试题2_被选择, 空白型, , 
.局部变量 i, 空白型, , , 

 ' 将显示记录号数组进行重新赋值，在选题界面显示被选中的题目。
清除数组 (显示记录号数组)
.如果 (等于 (取当前库 (), “选择题库”))
    赋值 (显示记录号数组, 选提)
    赋值 (.内容, 到文本 (1))
    主界面显示 (到数值 (.内容))
    赋值 (.内容, “”)
    .变量循环首 (1, 取数组成员数 (选提), 1, i)
        到文本 (选提 [i]).加入文本 (“→”)
    .变量循环尾 ()
    赋值 (.标题, 相加 (“共”, 到文本 (取数组成员数 (显示记录号数组)), “题”))
    赋值 (.标题, 相加 (“共”, 到文本 (取整 (相加 (相除 (取数组成员数 (显示记录号数组), 5), 1))), “页”))
.否则
    .如果 (等于 (取当前库 (), “材料题库”))
        赋值 (显示记录号数组, 材提)
        赋值 (.内容, 到文本 (1))
        主界面显示 (到数值 (.内容))
        .变量循环首 (1, 取数组成员数 (材提), 1, i)
            到文本 (材提 [i]).加入文本 (“→”)
        .变量循环尾 ()
        赋值 (.标题, 相加 (“共”, 到文本 (取数组成员数 (显示记录号数组)), “题”))
        赋值 (.标题, 相加 (“共”, 到文本 (取整 (相加 (相除 (取数组成员数 (显示记录号数组), 5), 1))), “页”))
    .否则
        .如果真 (等于 (取当前库 (), “问答题库”))
            赋值 (显示记录号数组, 问提)
            赋值 (.内容, 到文本 (1))
            主界面显示 (到数值 (.内容))
            .变量循环首 (1, 取数组成员数 (问提), 1, i)
                到文本 (问提 [i]).加入文本 (“→”)
            .变量循环尾 ()
            赋值 (.标题, 相加 (“共”, 到文本 (取数组成员数 (显示记录号数组)), “题”))
            赋值 (.标题, 相加 (“共”, 到文本 (取整 (相加 (相除 (取数组成员数 (显示记录号数组), 5), 1))), “页”))
        .如果真结束
        
    .如果结束
    
.如果结束


.子程序 _页面选择框_内容被改变, 空白型, , 
.如果 (并且 (大于 (到数值 (.内容), 0), 小于或等于 (到数值 (.内容), 相加 (取整 (相除 (取记录数 (), 5)), 1))))
    赋值 (页面值, .内容)
    主界面显示 (到数值 (.内容))
.否则
    信息框 (“输入的数字无效！”, 相加 (16, 0), )
    赋值 (.内容, 页面值)
.如果结束


.子程序 _上一页菜单_被选择, 空白型, , 
_上一页_被单击 ()

.子程序 _下一页菜单_被选择, 空白型, , 
_下一页_被单击 ()

.子程序 _字体27_被选择, 空白型, , 
.如果真 (等于 (打开 (), 真))
    .如果 (等于 (.可视, 真))
        赋值 (.字体.字体名称, .字体名称)
        赋值 (.字体.字体大小, .字体大小)
        赋值 (.字体.加粗, .加粗)
        赋值 (.字体.倾斜, .倾斜)
        赋值 (.字体.删除线, .删除线)
        赋值 (.字体.下划线, .下划线)
        赋值 (.文本颜色, .字体颜色)
    .否则
        连续赋值 (.字体名称, .字体.字体名称, .字体.字体名称, .字体.字体名称, .字体.字体名称, .字体.字体名称)
        连续赋值 (.字体大小, .字体.字体大小, .字体.字体大小, .字体.字体大小, .字体.字体大小, .字体.字体大小)
        连续赋值 (.加粗, .字体.加粗, .字体.加粗, .字体.加粗, .字体.加粗, .字体.加粗)
        连续赋值 (.倾斜, .字体.倾斜, .字体.倾斜, .字体.倾斜, .字体.倾斜, .字体.倾斜)
        连续赋值 (.删除线, .字体.删除线, .字体.删除线, .字体.删除线, .字体.删除线, .字体.删除线)
        连续赋值 (.下划线, .字体.下划线, .字体.下划线, .字体.下划线, .字体.下划线, .字体.下划线)
        连续赋值 (.字体颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色)
    .如果结束
    
.如果真结束


.子程序 _字体大小循环_被选择, 空白型, , 
.如果 (等于 (.可视, 真))
    .如果 (大于或等于 (取整 (相乘 (.字体.字体大小, 0.9)), 10))
        赋值 (.字体.字体大小, 取整 (相乘 (.字体.字体大小, 0.9)))
    .否则
        赋值 (.字体.字体大小, 72)
    .如果结束
    
.否则
    .如果 (大于或等于 (取整 (相乘 (.字体.字体大小, 0.9)), 10))
        连续赋值 (取整 (相乘 (.字体.字体大小, 0.9)), .字体.字体大小, .字体.字体大小, .字体.字体大小, .字体.字体大小, .字体.字体大小)
    .否则
        连续赋值 (72, .字体.字体大小, .字体.字体大小, .字体.字体大小, .字体.字体大小, .字体.字体大小)
    .如果结束
    
.如果结束


.子程序 _字体小大循环_被选择, 空白型, , 
.如果 (等于 (.可视, 真))
    .如果 (小于或等于 (取整 (相乘 (.字体.字体大小, 1.1)), 72))
        赋值 (.字体.字体大小, 取整 (相乘 (.字体.字体大小, 1.1)))
    .否则
        赋值 (.字体.字体大小, 10)
    .如果结束
    
.否则
    .如果 (小于或等于 (取整 (相乘 (.字体.字体大小, 1.1)), 72))
        连续赋值 (取整 (相乘 (.字体.字体大小, 1.1)), .字体.字体大小, .字体.字体大小, .字体.字体大小, .字体.字体大小, .字体.字体大小)
    .否则
        连续赋值 (10, .字体.字体大小, .字体.字体大小, .字体.字体大小, .字体.字体大小, .字体.字体大小)
    .如果结束
    
.如果结束


.子程序 _使用说明431_被选择, 空白型, , 
未知支持库函数_6 (4, “explorer”, “help\help.htm”, )

.子程序 _关于32_被选择, 空白型, , 
载入 (关于窗口, , 真)

.子程序 _超级按钮1_被单击, 空白型, , 
未知支持库函数_6 (4, “explorer.exe”, “help\help.htm”, )

.子程序 _颜色选择器1_颜色被改变, 空白型, , 
.如果 (等于 (.可视, 真))
    赋值 (.背景颜色, .颜色)
.否则
    连续赋值 (.颜色, .背景颜色, .背景颜色, .背景颜色, .背景颜色, .背景颜色)
.如果结束


.子程序 _选择题库二_被选择, 空白型, , 
_选择题库9_被选择 ()
赋值 (.选中, 真)
赋值 (.选中, 假)
赋值 (.选中, 假)

.子程序 _材料题库二_被选择, 空白型, , 
_材料题库10_被选择 ()
赋值 (.选中, 假)
赋值 (.选中, 真)
赋值 (.选中, 假)

.子程序 _问答题库二_被选择, 空白型, , 
_问答题库11_被选择 ()
赋值 (.选中, 假)
赋值 (.选中, 假)
赋值 (.选中, 真)

.子程序 _查找试题右_被选择, 空白型, , 
_在当前库中查找试题21_被选择 ()

.子程序 _题库管理右_被选择, 空白型, , 
_手工维护管理7_被选择 ()

.子程序 __启动窗口_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

弹出菜单 ()

.子程序 _显示项目选择30_被选择, 空白型, , 
载入 (字段选择窗口, , 真)
主界面显示 (到数值 (.内容))

.子程序 选择题初排, 空白型, , 
.局部变量 i, 空白型, , , 

.变量循环首 (0, 取整 (相减 (相除 (取数组成员数 (终极文本数组), 5), 1)), 1, i)
    相加 (到文本 (相加 (i, 1)), “. ”).加入文本 (终极文本数组 [相加 (相乘 (5, i), 1)], 相加 (字符 (13), 字符 (10)))
     ' 先输入题干，回车。
    .如果 (小于或等于 (相加 (取文本长度 ( [相加 (相乘 (5, i), 2)]), 取文本长度 ( [相加 (相乘 (5, i), 3)]), 取文本长度 ( [相加 (相乘 (5, i), 4)]), 取文本长度 ( [相加 (相乘 (5, i), 5)])), 60))
         ' 如果四个题支全长不超过30个汉字，则并入一行。
        .加入文本 ( [相加 (相乘 (5, i), 2)], 字符 (9),  [相加 (相乘 (5, i), 3)], 字符 (9),  [相加 (相乘 (5, i), 4)], 字符 (9),  [相加 (相乘 (5, i), 5)], 相加 (字符 (13), 字符 (10)))
    .否则
         ' 如果四个题支长度之和大于30个汉字，则先看1、2两个题支。
        .如果 (小于或等于 (相加 (取文本长度 ( [相加 (相乘 (5, i), 2)]), 取文本长度 ( [相加 (相乘 (5, i), 3)])), 60))
             ' 如果1、2两个题支之和小于等于30个汉字，则并入一行。
            .加入文本 ( [相加 (相乘 (5, i), 2)], 字符 (9),  [相加 (相乘 (5, i), 3)], 相加 (字符 (13), 字符 (10)))
             ' 再看3、4两支如何。。
            .如果 (小于或等于 (相加 (取文本长度 ( [相加 (相乘 (5, i), 4)]), 取文本长度 ( [相加 (相乘 (5, i), 5)])), 60))
                 ' 3、4支并行。
                .加入文本 ( [相加 (相乘 (5, i), 4)], 字符 (9),  [相加 (相乘 (5, i), 5)], 相加 (字符 (13), 字符 (10)))
            .否则
                 ' 3、4各占一行。
                .加入文本 ( [相加 (相乘 (5, i), 4)], 相加 (字符 (13), 字符 (10)),  [相加 (相乘 (5, i), 5)], 相加 (字符 (13), 字符 (10)))
            .如果结束
            
        .否则
             ' 如果1、2两支的总长大于30个汉字，则看2、3两个题支的总长如何，第一题支单独占一行。
            .加入文本 ( [相加 (相乘 (5, i), 2)], 相加 (字符 (13), 字符 (10)))
             ' 1支独占一行。再看题支2、3。
            .如果 (小于或等于 (相加 (取文本长度 ( [相加 (相乘 (5, i), 3)]), 取文本长度 ( [相加 (相乘 (5, i), 4)])), 60))
                 ' 第一支一行，2、3两支总长小于等于30个汉字，并入一行。
                .加入文本 ( [相加 (相乘 (5, i), 3)], 字符 (9),  [相加 (相乘 (5, i), 4)], 相加 (字符 (13), 字符 (10)))
                 ' 再最后加入支4即可。
                .加入文本 ( [相加 (相乘 (5, i), 5)], 相加 (字符 (13), 字符 (10)))
            .否则
                 ' 如果2、3两支总长大于30个汉字，则各占一行。
                .加入文本 ( [相加 (相乘 (5, i), 3)], 相加 (字符 (13), 字符 (10)),  [相加 (相乘 (5, i), 4)], 相加 (字符 (13), 字符 (10)),  [相加 (相乘 (5, i), 5)], 相加 (字符 (13), 字符 (10)))
            .如果结束
            
        .如果结束
        
    .如果结束
    
.变量循环尾 ()

.子程序 __启动窗口_尺寸被改变, 空白型, , 
.如果 (等于 (_启动窗口.位置, 3))
    赋值 (_启动窗口.可视, 假)
    赋值 (_启动窗口.宽度, 取屏幕宽度 ())
    赋值 (_启动窗口.高度, 相减 (取屏幕高度 (), 30))
    赋值 (_启动窗口.顶边, 0)
    赋值 (_启动窗口.左边, 0)
    调整 ()
    赋值 (_启动窗口.可视, 真)
.否则
    .如果真 (等于 (_启动窗口.位置, 0))
        赋值 (_启动窗口.可视, 假)
        赋值 (_启动窗口.宽度, 660)
        赋值 (_启动窗口.高度, 484)
        赋值 (_启动窗口.位置, 1)
        调整 ()
        赋值 (_启动窗口.可视, 真)
    .如果真结束
    
.如果结束


.子程序 调整, 空白型, , 
连续赋值 (取整 (相减 (取用户区宽度 (), 165)), .宽度, .宽度, .宽度, .宽度, .宽度)
连续赋值 (取整 (相减 (相除 (取用户区高度 (), 5), 3)), .高度, .高度, .高度, .高度, .高度)


赋值 (.顶边, 0)
赋值 (.顶边, 相加 (.高度, 3))
赋值 (.顶边, 相加 (.顶边, .高度, 3))
赋值 (.顶边, 相加 (.顶边, .高度, 3))
赋值 (.顶边, 相加 (.顶边, .高度, 3))
赋值 (.左边, 相加 (.左边, .宽度, 35))
连续赋值 (相加 (.左边, .宽度, 10), .左边, .左边, .左边, .左边, .左边)
赋值 (.顶边, 相减 (相加 (.顶边, 相除 (.高度, 2)), 12))
赋值 (.顶边, 相减 (相加 (.顶边, 相除 (.高度, 2)), 12))
赋值 (.顶边, 相减 (相加 (.顶边, 相除 (.高度, 2)), 12))
赋值 (.顶边, 相减 (相加 (.顶边, 相除 (.高度, 2)), 12))
赋值 (.顶边, 相减 (相加 (.顶边, 相除 (.高度, 2)), 12))




.如果 (等于 (显示状态, 1)) ' 实际显示的是第四种状态即通常状态
    赋值 (.高度, 取用户区高度 ())
    赋值 (.宽度, 相减 (取用户区宽度 (), 135))
    赋值 (., 相减 (.宽度, 10))
    赋值 (., 相减 (取整 (相除 (.高度, 2)), 5))
    赋值 (., .)
    赋值 (.宽度, 相减 (.宽度, 10))
    赋值 (.顶边, 相加 (., .))
    赋值 (.高度, 相减 (.高度, ., .))
    赋值 (.宽度, 相减 (., .宽度, .宽度, 20, .宽度, .宽度))
    赋值 (.左边, 相加 (.宽度, .宽度, 20))
    赋值 (.左边, 相加 (.左边, .宽度, 3))
    赋值 (.左边, 相加 (.左边, .宽度, 3))
    连续赋值 (5, ., .左边)
    
.否则
    .如果 (等于 (显示状态, 2)) ' 实际显示的是第一种情况，即网页态
        赋值 (.高度, 取用户区高度 ())
        赋值 (.宽度, 相减 (取用户区宽度 (), 135))
        赋值 (., 相减 (.宽度, 10))
        赋值 (., 相减 (.高度, 40))
        赋值 (.宽度, 相减 (.宽度, .宽度, .宽度, 25, .宽度, .宽度))
        赋值 (.左边, 相加 (.宽度, .宽度, 20))
        赋值 (.左边, 相加 (.左边, .宽度, 3))
        赋值 (.左边, 相加 (.左边, .宽度, 3))
        连续赋值 (5, ., .左边)
        
    .否则
        .如果 (等于 (显示状态, 3)) ' 实际显示的是第2种状态，即宽页显示状态
            赋值 (.宽度, 取用户区宽度 ())
            赋值 (.高度, 取用户区高度 ())
            赋值 (., 相减 (.宽度, 10))
            赋值 (., 相减 (.高度, 45))
            赋值 (.宽度, 相减 (.宽度, .宽度, .宽度, 25, .宽度, .宽度))
            赋值 (.左边, 相加 (.宽度, .宽度, 20))
            赋值 (.左边, 相加 (.左边, .宽度, 3))
            赋值 (.左边, 相加 (.左边, .宽度, 3))
            连续赋值 (5, ., .左边)
            
        .否则
            .如果真 (等于 (显示状态, 4)) ' 实际显示的是第3种状态，即文本编辑状态。
                赋值 (.宽度, 相减 (取用户区宽度 (), 135))
                赋值 (.高度, 取用户区高度 ())
                赋值 (.宽度, 相减 (.宽度, 10))
                赋值 (.高度, 相减 (.高度, 45))
                赋值 (.顶边, 40)
                赋值 (.宽度, 相减 (.宽度, .宽度, .宽度, 25, .宽度, .宽度))
                赋值 (.左边, 相加 (.宽度, .宽度, 20))
                赋值 (.左边, 相加 (.左边, .宽度, 3))
                赋值 (.左边, 相加 (.左边, .宽度, 3))
                连续赋值 (5, ., .左边)
                
            .如果真结束
            
        .如果结束
        
    .如果结束
    
.如果结束




.子程序 _清除选择题库选中状态15_被选择, 空白型, , 
.局部变量 x, 文本型, , , 
.局部变量 i, 空白型, , , 

赋值 (x, 取当前库 ())
置当前库 (“选择题库”)
.变量循环首 (1, 取记录数 (), 1, i)
    跳到 (i)
    写 (1, 假)
.变量循环尾 ()
.如果 (等于 (x, “选择题库”))
    _选择题库9_被选择 ()
.否则
    .如果 (等于 (x, “材料题库”))
        _材料题库10_被选择 ()
    .否则
        .如果真 (等于 (x, “问答题库”))
            _问答题库11_被选择 ()
        .如果真结束
        
    .如果结束
    
.如果结束


.子程序 _清除材料题库选中状态16_被选择, 空白型, , 
.局部变量 x, 文本型, , , 
.局部变量 i, 空白型, , , 

赋值 (x, 取当前库 ())
置当前库 (“材料题库”)
.变量循环首 (1, 取记录数 (), 1, i)
    跳到 (i)
    写 (1, 假)
.变量循环尾 ()
.如果 (等于 (x, “选择题库”))
    _选择题库9_被选择 ()
.否则
    .如果 (等于 (x, “材料题库”))
        _材料题库10_被选择 ()
    .否则
        .如果真 (等于 (x, “问答题库”))
            _问答题库11_被选择 ()
        .如果真结束
        
    .如果结束
    
.如果结束


.子程序 _清除问答题库选中状态17_被选择, 空白型, , 
.局部变量 x, 文本型, , , 
.局部变量 i, 空白型, , , 

赋值 (x, 取当前库 ())
置当前库 (“选择题库”)
.变量循环首 (1, 取记录数 (), 1, i)
    跳到 (i)
    写 (1, 假)
.变量循环尾 ()
.如果 (等于 (x, “选择题库”))
    _选择题库9_被选择 ()
.否则
    .如果 (等于 (x, “材料题库”))
        _材料题库10_被选择 ()
    .否则
        .如果真 (等于 (x, “问答题库”))
            _问答题库11_被选择 ()
        .如果真结束
        
    .如果结束
    
.如果结束


.子程序 _清除所有题库选中状态18_被选择, 空白型, , 
.局部变量 x, 文本型, , , 
.局部变量 i, 空白型, , , 

赋值 (x, 取当前库 ())
置当前库 (“选择题库”)
.变量循环首 (1, 取记录数 (), 1, i)
    跳到 (i)
    写 (1, 假)
.变量循环尾 ()
置当前库 (“材料题库”)
.变量循环首 (1, 取记录数 (), 1, i)
    跳到 (i)
    写 (1, 假)
.变量循环尾 ()
置当前库 (“问答题库”)
.变量循环首 (1, 取记录数 (), 1, i)
    跳到 (i)
    写 (1, 假)
.变量循环尾 ()
.如果 (等于 (x, “选择题库”))
    _选择题库9_被选择 ()
.否则
    .如果 (等于 (x, “材料题库”))
        _材料题库10_被选择 ()
    .否则
        .如果真 (等于 (x, “问答题库”))
            _问答题库11_被选择 ()
        .如果真结束
        
    .如果结束
    
.如果结束


.子程序 _提取WORD文档试卷21_被选择, 空白型, , 
.局部变量 取材料分值, 整数型, , , 
.局部变量 材料题小问数, 整数型, , , 
.局部变量 取小问分值, 整数型, , , 
.局部变量 小问分值, 整数型, , , 
.局部变量 单题总分, 整数型, , , 
.局部变量 材料题题分, 整数型, , "0", 
.局部变量 材料题单题赋值, 空白型, , , 
.局部变量 取问答分值, 空白型, , , 
.局部变量 材料题总分, 空白型, , , 
.局部变量 问答题小问数, 空白型, , , 
.局部变量 问答单题总分, 空白型, , , 
.局部变量 问答取小问分值, 空白型, , , 
.局部变量 问答小问分值, 空白型, , , 
.局部变量 问答题题分, 空白型, , "0", 
.局部变量 问答题单题赋值, 空白型, , , 
.局部变量 问答题总分, 空白型, , , 

 ' 既然要导出的是WORD文档，那么，WORD文档的初始化就必不可少。
未知支持库函数_0 ()
.未知支持库函数_5 (真) ' 提取文档完成后，应使word窗口显示出来。

页面设置 ()
赋值 (是否提取格式试卷, 真)
赋值 (是否在提取答案, 假)
载入 (试卷生成窗口1, , 真)
 ' 无论情况如何，都要通过“试卷生成窗口1”来搜集部分试卷信息。
.如果 (等于 (是否设分值, 假))
     ' 如果不设分值，事情会好办得多，只要挨个填入一系列信息生成一个试卷头就行了。
    0.未知支持库函数_18 (相加 (试卷标题, 字符 (13), 字符 (10), “考试时间：从”, 考试开始时间, “到”, 考试结束时间, “    共”, 到文本 (考试时长), “分钟”, 字符 (13), 字符 (10), “卷面总分：”, 到文本 (卷面总分), “    出卷人：”, 出卷人, 字符 (13), 字符 (10), 字符 (13), 字符 (10), “第I卷  客观题部分”, 字符 (13), 字符 (10), 字符 (13), 字符 (10), “一、选择题。(本大题共”, 到文本 (取数组成员数 (选提)), “小题。每小题”, 到文本 (选择题每题分值), “共”, 到文本 (相乘 (取数组成员数 (选提), 选择题每题分值)), “。)”)) ' 这里输入的就不再是文本试卷编辑框了，而是WORD文档集了。
     ' 试卷头总分由于字体不同，所以要分开。
    一级标题 ()
    0.未知支持库函数_18 (相加 (试卷标题, 字符 (13), 字符 (10))) ' 这里输入的就不再是文本试卷编辑框了，而是WORD文档集了。
    二级标题 ()
    0.未知支持库函数_18 (相加 (“第I卷  客观题部分”, 字符 (13), 字符 (10), 字符 (13), 字符 (10)))
    三级标题 ()
    0.未知支持库函数_18 (“一、选择题。”)
    附属标题 ()
    0.未知支持库函数_18 (相加 (“(本大题共”, 到文本 (取数组成员数 (选提)), “小题）”, 字符 (13), 字符 (10)))
    正文 ()
    选择题提取1 ()
     ' 选择题提取后，继续改变字体，完成标题的写入。
    二级标题 ()
    0.未知支持库函数_18 (相加 (“第II卷　主观题部分”, 字符 (13), 字符 (10)))
    三级标题 ()
    0.未知支持库函数_18 (“二、材料解析题。”)
    附属标题 ()
    0.未知支持库函数_18 (相加 (“（本大题共”, 到文本 (取数组成员数 (材提)), “小题）”, 字符 (13), 字符 (10)))
    正文 ()
    材料题提取1 ()
    三级标题 ()
    0.未知支持库函数_18 (相加 (字符 (13), 字符 (10), “三、问答题。”))
    附属标题 ()
    0.未知支持库函数_18 (相加 (“（本大题共”, 到文本 (取数组成员数 (问提)), “小题）”, 字符 (13), 字符 (10)))
    正文 ()
    问答题提取1 ()
    赋值 (., 真)
    未知支持库函数_4 ()
.否则
     ' 如果设分值的话，情况的复杂程度以几何级别向上攀升。
    载入 (试卷生成窗口2, , 真)
    载入 (试卷生成窗口3, , 真)
     ' 载入两个窗口的只在于搜集相关信息而已，本身并不会直接生成试卷。
    0.未知支持库函数_18 (相加 (试卷标题, 字符 (13), 字符 (10), “考试时间：从”, 考试开始时间, “到”, 考试结束时间, “    共”, 到文本 (考试时长), “分钟”, 字符 (13), 字符 (10), “卷面总分：”, 到文本 (卷面总分), “    出卷人：”, 出卷人, 字符 (13), 字符 (10), 字符 (13), 字符 (10), “第I卷  客观题部分”, 字符 (13), 字符 (10), 字符 (13), 字符 (10), “一、选择题。(本大题共”, 到文本 (取数组成员数 (选提)), “小题。每小题”, 到文本 (选择题每题分值), “分，共”, 到文本 (相乘 (取数组成员数 (选提), 选择题每题分值)), “分。)”, 字符 (13), 字符 (10)))
    一级标题 ()
    0.未知支持库函数_18 (相加 (试卷标题, 字符 (13), 字符 (10)))
    附加信息标题 ()
    0.未知支持库函数_18 (相加 (试卷标题, 字符 (13), 字符 (10), “考试时间：从”, 考试开始时间, “到”, 考试结束时间, “    共”, 到文本 (考试时长), “分钟”, 字符 (13), 字符 (10), “卷面总分：”, 到文本 (卷面总分), “    出卷人：”, 出卷人, 字符 (13), 字符 (10), 字符 (13), 字符 (10)))
    二级标题 ()
    0.未知支持库函数_18 (相加 (“第I卷  客观题部分”, 字符 (13), 字符 (10), 字符 (13), 字符 (10)))
    三级标题 ()
    0.未知支持库函数_18 (“一、选择题。”)
    附属标题 ()
    0.未知支持库函数_18 (相加 (“(本大题共”, 到文本 (取数组成员数 (选提)), “小题，每小题”, 到文本 (选择题每题分值), “分，共”, 到文本 (相乘 (取数组成员数 (选提), 选择题每题分值)), “分。)”, 字符 (13), 字符 (10)))
    正文 ()
     ' 试卷头的设置并无多大不同，不同的在于对下面分值的设置，难度极大。
     ' 选择题由于各题相对固定，给定的得分又是每题一致，所以相对简单。
    选择题提取1 ()
     ' 对于材料解析和问答题的导出，由于是将信息储存在注册表中，因此要注意①命名规则；②注意在系统关闭时要及时删除主键。
     ' 具体命名规则如下：①材料题每题本身以“C1”、“C2”、...“Cn”的方式规定；②每小题的分值的键值名规定为：“C11”、“C21”、...“Cnn”的形式加以规定。
     ' 下面制作试卷头的第二部分，又一个标题。
    二级标题 ()
    0.未知支持库函数_18 (相加 (字符 (13), 字符 (10), “第II卷　主观题部分”, 字符 (13), 字符 (10), 字符 (13), 字符 (10)))
    三级标题 ()
    0.未知支持库函数_18 (“二、材料解析题。”)
    附属标题 ()
    0.未知支持库函数_18 (相加 (“（本大题共”, 到文本 (取数组成员数 (材提)), “题。其中”))
     ' 下面要做的是给材料解析题的每一题（这需要加一个循环过程）加上分值。（不是每一小问，但却必须计算每一小问分值之和。）要做到这一点。必须先知道每一题究竟有几个小问，这点可从注册表中得到――到“Cn”的值就可以了。
    .变量循环首 (1, 取数组成员数 (材提), 1, 取材料分值)
        赋值 (单题总分, 0)
         ' 因为是要确定材料题每一题的分值之和，所以用“材提”数组的成员数就可以了。每一次循环都必须取出一个“Cn”的值。
        赋值 (材料题小问数, 取数值注册项 (3, 相加 (“software\高中历史题库系统\cl\c”, 到文本 (取材料分值)), 0))
         ' 取出材料题的小问后，我们可以继续取出每小问的分值。也用一个变量循环。
        .如果真 (大于或等于 (材料题小问数, 1))
             ' 如果没有成员，则单题总分应为零分。
            .变量循环首 (1, 材料题小问数, 1, 取小问分值)
                赋值 (小问分值, 取数值注册项 (3, 相加 (“software\高中历史题库系统\cl\c”, 到文本 (取材料分值), 到文本 (取小问分值)), ))
                赋值 (单题总分, 相加 (单题总分, 小问分值))
                 ' 每一次循环，单题总分的值就会变掉，所以要及时另存为。最好的办法就是再加一个数组。
            .变量循环尾 ()
            加入成员 (材料题题分, 单题总分)
        .如果真结束
        
    .变量循环尾 ()
     ' 此时材料题每一题的单题总分都在“材料题题分”数组之中了。再用变量循环来加上每一题的附属说明。
    .变量循环首 (1, 取数组成员数 (材料题题分), 1, 材料题单题赋值)
        0.未知支持库函数_18 (相加 (“，第”, 到文本 (材料题单题赋值), “题”, 到文本 (材料题题分 [材料题单题赋值]), “分”))
        赋值 (材料题总分, 相加 (材料题总分, 材料题题分 [材料题单题赋值]))
    .变量循环尾 ()
     ' 还要加上结束标志才行。通常这个标志是一个右括号。
    0.未知支持库函数_18 (相加 (“，共”, 到文本 (材料题总分), “分。）”, 字符 (13), 字符 (10)))
    正文 ()
    材料题提取1 ()
     ' 为了实现变量的复用，必须将数组重置。
    清除数组 (材料题题分)
     ' 从内存资源的角度来讲，还是清除比较好，其实不清除也可，因为下面已经用不到它了。而且这个数组不过几个数字而已，占不了多少内存。本来这个数组清除后，可以让问答题来用，不过为了避免混淆，还是不用它了。
    
    
    
    
     ' 材料题提取之后，就要继续做试卷头部分，这回是问答题。与材料题非常类似，代码可复制。
    三级标题 ()
    0.未知支持库函数_18 (“三、问答题。”)
    附属标题 ()
    0.未知支持库函数_18 (相加 (“（本大题共”, 到文本 (取数组成员数 (问提)), “题。其中”))
     ' 下面要做的是给问答题的每一题（这需要加一个循环过程）加上分值。（不是每一小问，但却必须计算每一小问分值之和。）要做到这一点。必须先知道每一题究竟有几个小问，这点可从注册表中得到――到“Wn”的值就可以了。
    .变量循环首 (1, 取数组成员数 (问提), 1, 取问答分值)
         ' 无论是选择、材料解析还是问答，其每一题的题分都是在总的“提取纯文本试卷”子程序里，而不是在各自提取题目的子程序中完成的。
        赋值 (问答单题总分, 0)
         ' 因为是要确定材料题每一题的分值之和，所以用“材提”数组的成员数就可以了。每一次循环都必须取出一个“Wn”的值。
        赋值 (问答题小问数, 取数值注册项 (3, 相加 (“software\高中历史题库系统\wl\w”, 到文本 (取问答分值)), 0))
         ' 取出材料题的小问后，我们可以继续取出每小问的分值。也用一个变量循环。
        .如果真 (大于或等于 (问答题小问数, 1))
             ' 如果没有成员，则单题总分应为零分。
            .变量循环首 (1, 问答题小问数, 1, 问答取小问分值)
                赋值 (问答小问分值, 取数值注册项 (3, 相加 (“software\高中历史题库系统\wl\w”, 到文本 (取问答分值), 到文本 (问答取小问分值)), ))
                赋值 (问答单题总分, 相加 (问答单题总分, 问答小问分值))
                 ' 每一次循环，单题总分的值就会变掉，所以要及时另存为。最好的办法就是再加一个数组。
            .变量循环尾 ()
            加入成员 (问答题题分, 问答单题总分)
        .如果真结束
        
    .变量循环尾 ()
     ' 此时问答题每一题的单题总分都在“问答题题分”数组之中了。再用变量循环来加上每一题的附属说明。
    .变量循环首 (1, 取数组成员数 (问答题题分), 1, 问答题单题赋值)
        0.未知支持库函数_18 (相加 (“，第”, 到文本 (问答题单题赋值), “题”, 到文本 (问答题题分 [问答题单题赋值]), “分”))
         ' 显示为：“，第X题X分”
        赋值 (问答题总分, 相加 (问答题总分, 问答题题分 [问答题单题赋值]))
    .变量循环尾 ()
     ' 还要加上结束标志才行。通常这个标志是一个右括号。
    0.未知支持库函数_18 (相加 (“，共”, 到文本 (问答题总分), “分。）”, 字符 (13), 字符 (10)))
    正文 ()
    问答题提取1 ()
    _编辑界面_被单击 ()
    赋值 (., 真)
    未知支持库函数_4 ()
     ' 至此，提取文本试卷的工作应该是完成了。
.如果结束


.子程序 选择题提取1, 空白型, , 
.局部变量 选择记录循环, 整数型, , , 
.局部变量 选择字段循环, 整数型, , , 

清除数组 (显示字段号数组)
置当前库 (“选择题库”)
.如果 (等于 (是否默认导出, 真))
    .变量循环首 (1, 取数组成员数 (选提), 1, 选择记录循环)
        跳到 (选提 [选择记录循环])
        .变量循环首 (4, 8, 1, 选择字段循环)
            到文本 (未知支持库函数_4 (读 (选择字段循环), “dybjppbb”, )).加入文本 (相加 (字符 (13), 字符 (10)))
        .变量循环尾 ()
        
    .变量循环尾 ()
    选择题导入文本处理 (.内容)
    选择题初排1 ()
    赋值 (.内容, “”)
    
.否则
    载入 (字段选择窗口, , 真)
    .变量循环首 (1, 取数组成员数 (选提), 1, 选择记录循环)
        跳到 (选提 [选择记录循环])
         ' 用户自定义的情况下，无法应用选择题初排工具。
        0.未知支持库函数_18 (相加 (到文本 (选择记录循环), “.”))
        .变量循环首 (1, 取数组成员数 (显示字段号数组), 1, 选择字段循环)
            0.未知支持库函数_18 (相加 (到文本 (未知支持库函数_4 (读 (显示字段号数组 [选择字段循环]), “dybjppbb”, )), 字符 (13), 字符 (10)))
        .变量循环尾 ()
    .变量循环尾 ()
.如果结束


.子程序 材料题提取1, 空白型, , 
.局部变量 材料记录循环, 空白型, , , 
.局部变量 材料字段循环, 空白型, , , 
.局部变量 写分值, 空白型, , , 
.局部变量 单题总分, 空白型, , , 
.局部变量 单题分值数组, 空白型, , "0", 

 ' 无论调用哪一个子程序来导出试题，都须注意及时清除数组。
 ' 材料和问答题的提取，还要注意题号的变化，要能自动加上题号。（以与选择题一致。）
清除数组 (显示字段号数组)
置当前库 (“材料题库”)
.如果 (等于 (是否默认导出, 真))
    .变量循环首 (1, 取数组成员数 (材提), 1, 材料记录循环)
         ' 每一次的循环即导出一题，所以要加上题号，即应在此处。这个地方加的时候还要考虑选择题的题数，同时，题号后面一般有一个标点，这里借用了顿号。
        0.未知支持库函数_18 (相加 (到文本 (相加 (取数组成员数 (选提), 材料记录循环)), “.”))
         ' 要加上每小问的分值也只有加在这里了。每小问的分值正是写在本题前面，然后换行。
        .如果真 (等于 (是否设分值, 真))
             ' 这里需要单独计算各小问的分值，与前面类似。
            0.未知支持库函数_18 (相加 (“（本题共”, 到文本 (取数值注册项 (3, 相加 (“software\高中历史题库系统\cl\c”, 到文本 (材料记录循环)), )), “小问，其中”))
             ' 显示内容将会是――“（本题共X小问，其中”――（不包括前面的引号和破折号）
            .变量循环首 (1, 取数值注册项 (3, 相加 (“software\高中历史题库系统\cl\c”, 到文本 (材料记录循环)), ), 1, 写分值)
                0.未知支持库函数_18 (相加 (“，第”, 到文本 (写分值), “小问”, 到文本 (取数值注册项 (3, 相加 (“software\高中历史题库系统\cl\c”, 到文本 (材料记录循环), 到文本 (写分值)), )), “分”))
                 ' 显示的内容将会是――“，第X小问X分”――（不包括前面的引号和破折号）
                赋值 (单题总分, 相加 (单题总分, 取数值注册项 (3, 相加 (“software\高中历史题库系统\cl\c”, 到文本 (材料记录循环), 到文本 (写分值)), )))
                 ' 本循环第一次循环结束后，“单题总分”不断累积，即产生第一题材料解析的总分值。相应地，第二次将产生第二题的总分值。
            .变量循环尾 ()
            加入成员 (单题分值数组, 单题总分)
             ' 由于每次循环都会产生一个“单题总分”所以每次的数据要保存下来，用数组是个比较好的选择，这比用注册表简单得多。之所以计分时要采用注册表的手法，其实原因在于材料解析和问答题本身的每题的小问的数量是不确定的，所以无从知道要将要用到多少个数组，这就导致无法事先对数组进行定义，而数组又不能由程序代码本身来直接进行定义（或声明）。
            0.未知支持库函数_18 (相加 (“，共”, 到文本 (单题分值数组 [材料记录循环]), “分。）”, 字符 (13), 字符 (10)))
            赋值 (单题总分, 0)
             ' 此时仍在每一个题目的循环之中，所以要将“单题总分”清零，否则，每题的总分会自动累加，也就是说后一题的总分会等于自身的总分加上前一题的总分。
        .如果真结束
         ' 上面的代码都是对分值和标题的处理，下面才是真正提取材料解析题本身。
        跳到 (材提 [材料记录循环])
         ' 材料记录循环，是决定跳到并提取第几题材料解析题，所以名之曰“记录循环”。
        .变量循环首 (4, 5, 1, 材料字段循环)
             ' 默认状态下，导出的是“材料”“问题”两部分，所以应该是4－5才对。
            0.未知支持库函数_18 (相加 (到文本 (未知支持库函数_4 (读 (材料字段循环), “dybjppbb”, )), 字符 (13), 字符 (10)))
        .变量循环尾 ()
         ' 以上是导出材料解析题部分的内容，至此已完成材料解析题部分的导出。
    .变量循环尾 ()
.否则
    载入 (字段选择窗口, , 真)
     ' 用户自定义的情况下，最大的不同仅在于显示字段号数组的不同。
    .变量循环首 (1, 取数组成员数 (材提), 1, 材料记录循环)
         ' 每一次的循环即导出一题，所以要加上题号，即应在此处。这个地方加的时候还要考虑选择题的题数，同时，题号后面一般有一个标点，这里借用了顿号。
        0.未知支持库函数_18 (相加 (到文本 (相加 (取数组成员数 (选提), 材料记录循环)), “.”))
         ' 要加上每小问的分值也只有加在这里了。每小问的分值正是写在本题前面，然后换行。
        .如果真 (等于 (是否设分值, 真))
             ' 这里需要单独计算各小问的分值，与前面类似。
            0.未知支持库函数_18 (相加 (“（本题共”, 到文本 (取数值注册项 (3, 相加 (“software\高中历史题库系统\cl\c”, 到文本 (材料记录循环)), )), “小问，其中”))
             ' 显示内容将会是――“（本题共X小问，其中”――（不包括前面的引号和破折号）
            .变量循环首 (1, 取数值注册项 (3, 相加 (“software\高中历史题库系统\cl\c”, 到文本 (材料记录循环)), ), 1, 写分值)
                0.未知支持库函数_18 (相加 (“，第”, 到文本 (写分值), “小问”, 到文本 (取数值注册项 (3, 相加 (“software\高中历史题库系统\cl\c”, 到文本 (材料记录循环), 到文本 (写分值)), )), “分”))
                 ' 显示的内容将会是――“，第X小问X分”――（不包括前面的引号和破折号）
                赋值 (单题总分, 相加 (单题总分, 取数值注册项 (3, 相加 (“software\高中历史题库系统\cl\c”, 到文本 (材料记录循环), 到文本 (写分值)), )))
                 ' 本循环第一次循环结束后，“单题总分”不断累积，即产生第一题材料解析的总分值。相应地，第二次将产生第二题的总分值。
            .变量循环尾 ()
            加入成员 (单题分值数组, 单题总分)
             ' 由于每次循环都会产生一个“单题总分”所以每次的数据要保存下来，用数组是个比较好的选择，这比用注册表简单得多。之所以计分时要采用注册表的手法，其实原因在于材料解析和问答题本身的每题的小问的数量是不确定的，所以无从知道要将要用到多少个数组，这就导致无法事先对数组进行定义，而数组又不能由程序代码本身来直接进行定义（或声明）。
            0.未知支持库函数_18 (相加 (“，共”, 到文本 (单题分值数组 [材料记录循环]), “分。）”, 字符 (13), 字符 (10)))
            赋值 (单题总分, 0)
             ' 此时仍在每一个题目的循环之中，所以要将“单题总分”清零，否则，每题的总分会自动累加，也就是说后一题的总分会等于自身的总分加上前一题的总分。
        .如果真结束
         ' 上面的代码都是对分值和标题的处理，下面才是真正提取材料解析题本身。
        跳到 (材提 [材料记录循环])
         ' 材料记录循环，是决定跳到并提取第几题材料解析题，所以名之曰“记录循环”。
        .变量循环首 (1, 取数组成员数 (显示字段号数组), 1, 材料字段循环)
            0.未知支持库函数_18 (相加 (到文本 (未知支持库函数_4 (读 (显示字段号数组 [材料字段循环]), “dybjppbb”, )), 字符 (13), 字符 (10), “”))
        .变量循环尾 ()
    .变量循环尾 ()
.如果结束


.子程序 问答题提取1, 空白型, , 
.局部变量 问答记录循环, 空白型, , , 
.局部变量 问答字段循环, 空白型, , , 
.局部变量 写分值, 空白型, , , 
.局部变量 单题总分, 空白型, , , 
.局部变量 单题分值数组, 空白型, , "0", 

 ' 无论调用哪一个子程序来导出试题，都须注意及时清除数组。
清除数组 (显示字段号数组)
置当前库 (“问答题库”)
.如果 (等于 (是否默认导出, 真))
    .变量循环首 (1, 取数组成员数 (问提), 1, 问答记录循环)
         ' 每一次的循环即导出一题，所以要加上题号，即应在此处。这个地方加的时候不仅要考虑选择题的题数、问答题本身的题数，还要考虑材料题的题数，同时，题号后面一般有一个标点，这里借用了顿号。
        0.未知支持库函数_18 (相加 (到文本 (相加 (取数组成员数 (选提), 取数组成员数 (材提), 问答记录循环)), “.”))
         ' 序号上，这里和材料题不同。
        .如果真 (等于 (是否设分值, 真))
             ' 这里需要单独计算各小问的分值，与前面类似。
            0.未知支持库函数_18 (相加 (“（本题共”, 到文本 (取数值注册项 (3, 相加 (“software\高中历史题库系统\wl\w”, 到文本 (问答记录循环)), )), “小问，其中”))
             ' 显示内容将会是――“（本题共X小问，其中”――（不包括前面的引号和破折号）
            .变量循环首 (1, 取数值注册项 (3, 相加 (“software\高中历史题库系统\wl\w”, 到文本 (问答记录循环)), ), 1, 写分值)
                0.未知支持库函数_18 (相加 (“，第”, 到文本 (写分值), “小问”, 到文本 (取数值注册项 (3, 相加 (“software\高中历史题库系统\wl\w”, 到文本 (问答记录循环), 到文本 (写分值)), )), “分”))
                赋值 (单题总分, 相加 (单题总分, 取数值注册项 (3, 相加 (“software\高中历史题库系统\wl\w”, 到文本 (问答记录循环), 到文本 (写分值)), )))
            .变量循环尾 ()
            加入成员 (单题分值数组, 单题总分)
            0.未知支持库函数_18 (相加 (“，共”, 到文本 (单题分值数组 [问答记录循环]), “分。）”, 字符 (13), 字符 (10)))
            赋值 (单题总分, 0)
        .如果真结束
        
        跳到 (问提 [问答记录循环])
        .变量循环首 (4, 5, 1, 问答字段循环)
            0.未知支持库函数_18 (相加 (到文本 (未知支持库函数_4 (读 (问答字段循环), “dybjppbb”, )), 字符 (13), 字符 (10), “”))
        .变量循环尾 ()
         ' 以上是导出问答题部分的内容，至此已完成材料解析题部分的导出。
    .变量循环尾 ()
.否则
    载入 (字段选择窗口, , 真)
     ' 用户自定义的情况下，最大的不同仅在于显示字段号数组的不同。
    .变量循环首 (1, 取数组成员数 (问提), 1, 问答记录循环)
         ' 每一次的循环即导出一题，所以要加上题号，即应在此处。这个地方加的时候不仅要考虑选择题的题数、问答题本身的题数，还要考虑材料题的题数，同时，题号后面一般有一个标点，这里借用了顿号。
        0.未知支持库函数_18 (相加 (到文本 (相加 (取数组成员数 (选提), 取数组成员数 (材提), 问答记录循环)), “.”))
         ' 序号上，这里和材料题不同。
        .如果真 (等于 (是否设分值, 真))
             ' 这里需要单独计算各小问的分值，与前面类似。
            0.未知支持库函数_18 (相加 (“（本题共”, 到文本 (取数值注册项 (3, 相加 (“software\高中历史题库系统\wl\w”, 到文本 (问答记录循环)), )), “小问，其中”))
             ' 显示内容将会是――“（本题共X小问，其中”――（不包括前面的引号和破折号）
            .变量循环首 (1, 取数值注册项 (3, 相加 (“software\高中历史题库系统\wl\w”, 到文本 (问答记录循环)), ), 1, 写分值)
                0.未知支持库函数_18 (相加 (“，第”, 到文本 (写分值), “小问”, 到文本 (取数值注册项 (3, 相加 (“software\高中历史题库系统\wl\w”, 到文本 (问答记录循环), 到文本 (写分值)), )), “分”))
                赋值 (单题总分, 相加 (单题总分, 取数值注册项 (3, 相加 (“software\高中历史题库系统\wl\w”, 到文本 (问答记录循环), 到文本 (写分值)), )))
            .变量循环尾 ()
            加入成员 (单题分值数组, 单题总分)
            0.未知支持库函数_18 (相加 (“，共”, 到文本 (单题分值数组 [问答记录循环]), “分。）”, 字符 (13), 字符 (10)))
            赋值 (单题总分, 0)
        .如果真结束
        
        跳到 (问提 [问答记录循环])
        .变量循环首 (1, 取数组成员数 (显示字段号数组), 1, 问答字段循环)
            0.未知支持库函数_18 (相加 (到文本 (未知支持库函数_4 (读 (显示字段号数组 [问答字段循环]), “dybjppbb”, )), 字符 (13), 字符 (10), “”))
        .变量循环尾 ()
    .变量循环尾 ()
.如果结束


.子程序 选择题初排1, 空白型, , 
.局部变量 i, 空白型, , , 

.变量循环首 (0, 取整 (相减 (相除 (取数组成员数 (终极文本数组), 5), 1)), 1, i)
    0.未知支持库函数_18 (相加 (到文本 (相加 (i, 1)), “. ”, 终极文本数组 [相加 (相乘 (5, i), 1)], 字符 (13), 字符 (10)))
     ' 先输入题干，回车。
    .如果 (小于或等于 (相加 (取文本长度 ( [相加 (相乘 (5, i), 2)]), 取文本长度 ( [相加 (相乘 (5, i), 3)]), 取文本长度 ( [相加 (相乘 (5, i), 4)]), 取文本长度 ( [相加 (相乘 (5, i), 5)])), 60))
         ' 如果四个题支全长不超过30个汉字，则并入一行。
        0.未知支持库函数_18 (相加 (终极文本数组 [相加 (相乘 (5, i), 2)], 字符 (9), 终极文本数组 [相加 (相乘 (5, i), 3)], 字符 (9), 终极文本数组 [相加 (相乘 (5, i), 4)], 字符 (9), 终极文本数组 [相加 (相乘 (5, i), 5)], 字符 (13), 字符 (10)))
    .否则
         ' 如果四个题支长度之和大于30个汉字，则先看1、2两个题支。
        .如果 (小于或等于 (相加 (取文本长度 ( [相加 (相乘 (5, i), 2)]), 取文本长度 ( [相加 (相乘 (5, i), 3)])), 60))
             ' 如果1、2两个题支之和小于等于30个汉字，则并入一行。
            0.未知支持库函数_18 (相加 (终极文本数组 [相加 (相乘 (5, i), 2)], 字符 (9), 终极文本数组 [相加 (相乘 (5, i), 3)], 字符 (13), 字符 (10)))
             ' 再看3、4两支如何。。
            .如果 (小于或等于 (相加 (取文本长度 ( [相加 (相乘 (5, i), 4)]), 取文本长度 ( [相加 (相乘 (5, i), 5)])), 60))
                 ' 3、4支并行。
                0.未知支持库函数_18 (相加 (终极文本数组 [相加 (相乘 (5, i), 4)], 字符 (9), 终极文本数组 [相加 (相乘 (5, i), 5)], 字符 (13), 字符 (10)))
            .否则
                 ' 3、4各占一行。
                0.未知支持库函数_18 (相加 (终极文本数组 [相加 (相乘 (5, i), 4)], 字符 (13), 字符 (10), 终极文本数组 [相加 (相乘 (5, i), 5)], 字符 (13), 字符 (10)))
            .如果结束
            
        .否则
             ' 如果1、2两支的总长大于30个汉字，则看2、3两个题支的总长如何，第一题支单独占一行。
            0.未知支持库函数_18 (相加 (终极文本数组 [相加 (相乘 (5, i), 2)], 字符 (13), 字符 (10)))
             ' 1支独占一行。再看题支2、3。
            .如果 (小于或等于 (相加 (取文本长度 ( [相加 (相乘 (5, i), 3)]), 取文本长度 ( [相加 (相乘 (5, i), 4)])), 60))
                 ' 第一支一行，2、3两支总长小于等于30个汉字，并入一行。
                0.未知支持库函数_18 (相加 (终极文本数组 [相加 (相乘 (5, i), 3)], 字符 (9), 终极文本数组 [相加 (相乘 (5, i), 4)], 字符 (13), 字符 (10)))
                 ' 再最后加入支4即可。
                0.未知支持库函数_18 (相加 (终极文本数组 [相加 (相乘 (5, i), 5)], 字符 (13), 字符 (10)))
            .否则
                 ' 如果2、3两支总长大于30个汉字，则各占一行。
                0.未知支持库函数_18 (相加 (终极文本数组 [相加 (相乘 (5, i), 3)], 字符 (13), 字符 (10), 终极文本数组 [相加 (相乘 (5, i), 4)], 字符 (13), 字符 (10), 终极文本数组 [相加 (相乘 (5, i), 5)], 字符 (13), 字符 (10)))
            .如果结束
            
        .如果结束
        
    .如果结束
    
.变量循环尾 ()
清除数组 (终极文本数组)
赋值 (.内容, “”)

.子程序 一级标题, 空白型, , 
赋值 (., “黑体”)
赋值 (., 18)
赋值 (., 1)
赋值 (., 1)


.子程序 二级标题, 空白型, , 
赋值 (., “黑体”)
赋值 (., 15)
赋值 (., 1)
赋值 (., 1)


.子程序 三级标题, 空白型, , 
赋值 (., “黑体”)
赋值 (., 11)
赋值 (., 1)
赋值 (., 1)


.子程序 附属标题, 空白型, , 
赋值 (., “宋体”)
赋值 (., 10)
赋值 (., 1)
赋值 (., 0)


.子程序 正文, 空白型, , 
赋值 (., “宋体”)
赋值 (., 10)
赋值 (., 0)
赋值 (., 3)


.子程序 附加信息标题, 空白型, , 
赋值 (., “楷体_GB2312”)
赋值 (., 10)
赋值 (., 0)
赋值 (., 1)


.子程序 页面设置, 空白型, , 
赋值 (., 11)
赋值 (., 50)


.子程序 剩余分值刷新, 空白型, , 
.局部变量 m, 整数型, , , 
.局部变量 n, 整数型, , , 
.局部变量 材料题已用分, 整数型, , , 
.局部变量 问答题已用分, 整数型, , , 
.局部变量 j, 整数型, , , 
.局部变量 k, 整数型, , , 

 ' 可以判断，需要更新剩余框内容的场合一共只有两个：①试卷生成宣传品载入的时候；②分值列表框改变的时候。
 ' 这个地方还可以在宣传品被销毁事件中加上对分值的判断，如果有某一小问或某一题的分值为0，则此弹出信息框进行提示。
 ' 剩余分值刷新，要求必须遍历每一个注册表项。最好的办法，是用判断循环
赋值 (m, 1)
赋值 (n, 1)
.判断循环首 (等于 (注册项是否存在 (3, 相加 (“software\高中历史题库系统\cl\c”, 到文本 (m))), 真))
     ' 外层判断应首先判断出Cn是否存在。因此，每循环一次，n的值要增加1。
    .变量循环首 (1, 取数值注册项 (3, 相加 (“software\高中历史题库系统\cl\c”, 到文本 (m)), ), 1, n)
        赋值 (材料题已用分, 相加 (材料题已用分, 取数值注册项 (3, 相加 (“software\高中历史题库系统\cl\c”, 到文本 (m), 到文本 (n)), )))
    .变量循环尾 ()
    赋值 (m, 相加 (m, 1))
.判断循环尾 ()
 ' 循环结束后会取出材料题的已用分值。为了方便其它窗口调用，把这个子程序放到启动程序集中去。
赋值 (m, 1)
赋值 (n, 1)
.判断循环首 (等于 (注册项是否存在 (3, 相加 (“software\高中历史题库系统\wl\w”, 到文本 (m))), 真))
     ' 外层判断应首先判断出Cn是否存在。因此，每循环一次，n的值要增加1。
    .变量循环首 (1, 取数值注册项 (3, 相加 (“software\高中历史题库系统\wl\w”, 到文本 (m)), ), 1, n)
        赋值 (材料题已用分, 相加 (材料题已用分, 取数值注册项 (3, 相加 (“software\高中历史题库系统\wl\w”, 到文本 (m), 到文本 (n)), )))
    .变量循环尾 ()
    赋值 (m, 相加 (m, 1))
.判断循环尾 ()
赋值 (剩余分值, 相减 (卷面总分, 相乘 (取数组成员数 (选提), 选择题每题分值), 材料题已用分, 问答题已用分))

.子程序 _文本试卷编辑框_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (并且 (等于 (键代码, #A键), 等于 (功能键状态, #Ctrl键状态)))
    赋值 (.起始选择位置, 1)
    赋值 (.被选择字符数, 取文本长度 (.内容))
.如果真结束


.子程序 _转到按钮_被单击, 空白型, , 
赋值 (., .内容)
刷新显示 ()


.子程序 __启动窗口_被激活, 空白型, , 
_启动窗口.刷新显示 ()
刷新显示 ()

.子程序 _地址组合框_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果 (并且 (等于 (键代码, #回车键), 等于 (功能键状态, #Ctrl键状态)))
    .如果真 (不等于 (取文本左边 (.内容, 11), “http://www.”))
        赋值 (.内容, 相加 (“http://www.”, .内容, “.com”))
    .如果真结束
    
.否则
    .如果真 (等于 (键代码, #回车键))
        赋值 (., .内容)
    .如果真结束
    
.如果结束


.子程序 _显示全部网页_被单击, 空白型, , 
.如果 (等于 (显示状态, 1))
     ' 显示网页
    赋值 (., 假)
    赋值 (.高度, 取用户区高度 ())
    赋值 (.宽度, 相减 (取用户区宽度 (), 135))
    赋值 (., 相减 (.高度, 40))
    赋值 (., 相减 (.宽度, 10))
    赋值 (., 真)
    赋值 (.可视, 假)
    赋值 (显示状态, 2)
    赋值 (.标题, “宽页”)
.否则
    .如果 (等于 (显示状态, 2))
         ' 网页宽页显示
        赋值 (.高度, 取用户区高度 ())
        赋值 (.宽度, 取用户区宽度 ())
        赋值 (., 相减 (.宽度, 10))
        
        赋值 (.宽度, 相减 (., .宽度, .宽度, 20, .宽度, .宽度))
        赋值 (.左边, 相加 (.宽度, .宽度, 20))
        赋值 (.左边, 相加 (.左边, .宽度, 3))
        赋值 (.左边, 相加 (.左边, .宽度, 3))
        连续赋值 (5, ., .左边)
        
        赋值 (显示状态, 3)
        赋值 (.标题, “文本”)
    .否则
        .如果 (等于 (显示状态, 3)) ' 显示文本编辑状态
            赋值 (.高度, 取用户区高度 ())
            赋值 (.宽度, 相减 (取用户区宽度 (), 135))
            
            赋值 (., 相减 (.宽度, 10))
            赋值 (., 相减 (取整 (相除 (.高度, 2)), 5))
            赋值 (.宽度, 相减 (.宽度, 10))
            赋值 (.高度, 相减 (.高度, 45))
            赋值 (.宽度, 相减 (., .宽度, .宽度, 20, .宽度, .宽度))
            赋值 (.左边, 相加 (.宽度, .宽度, 20))
            赋值 (.左边, 相加 (.左边, .宽度, 3))
            赋值 (.左边, 相加 (.左边, .宽度, 3))
            连续赋值 (5, ., .左边)
            
            赋值 (.顶边, 40)
            赋值 (.可视, 真)
            赋值 (., 假)
            赋值 (显示状态, 4)
            赋值 (.标题, “通常”)
        .否则
            .如果真 (等于 (显示状态, 4)) ' 显示通常状态（文本编辑和网页浏览共存）
                赋值 (., 真)
                赋值 (., 相减 (., 40))
                赋值 (., 相减 (.宽度, 10))
                赋值 (.顶边, 相加 (., .))
                赋值 (.高度, 相减 (.高度, ., .))
                赋值 (.宽度, 相减 (.宽度, 10))
                赋值 (., 真)
                赋值 (显示状态, 1)
                赋值 (.标题, “网页”)
            .如果真结束
            
        .如果结束
        
    .如果结束
    
.如果结束


.子程序 _本地浏览_被单击, 空白型, , 
赋值 (.过滤器, “Web页(*.htm,*.html)|*.htm;*.html”)
.如果真 (打开 ())
    赋值 (., .文件名)
    赋值 (.内容, .文件名)
.如果真结束


.子程序 _超文本浏览框1_跳转完毕, 空白型, , 
0.插入项目 (.内容, )
.如果真 (大于或等于 (取项目数 (), 11))
    10.删除项目 ()
.如果真结束


.子程序 _地址组合框_列表项被选择, 空白型, , 
赋值 (., .取项目文本 (.现行选中项))

.子程序 _编辑界面内部切换23_被选择, 空白型, , 
_编辑界面_被单击 ()
_显示全部网页_被单击 ()

.子程序 _编辑框1_被双击, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

_对各库选中试题排序0_被选择 ()

.子程序 _提取纯文本答案34_被选择, 空白型, , 
.局部变量 取材料分值, 整数型, , , 
.局部变量 材料题小问数, 整数型, , , 
.局部变量 取小问分值, 整数型, , , 
.局部变量 小问分值, 整数型, , , 
.局部变量 单题总分, 整数型, , , 
.局部变量 材料题题分, 整数型, , "0", 
.局部变量 材料题单题赋值, 空白型, , , 
.局部变量 取问答分值, 空白型, , , 
.局部变量 材料题总分, 空白型, , , 
.局部变量 问答题小问数, 空白型, , , 
.局部变量 问答单题总分, 空白型, , , 
.局部变量 问答取小问分值, 空白型, , , 
.局部变量 问答小问分值, 空白型, , , 
.局部变量 问答题题分, 空白型, , "0", 
.局部变量 问答题单题赋值, 空白型, , , 
.局部变量 问答题总分, 空白型, , , 

 ' 与提取试卷不同的地方也就在于提取的时候不再需载入窗口选择字段而已。为了达到自动填写的目的，这里似乎可以提供自动保存某些项目的功能。
赋值 (是否提取格式试卷, 假)
赋值 (是否在提取答案, 真)
载入 (试卷生成窗口1, , 真)
 ' 无论情况如何，都要通过“试卷生成窗口1”来搜集部分试卷信息。
.如果 (等于 (是否设分值, 假))
     ' 如果不设分值，事情会好办得多，只要挨个填入一系列信息生成一个试卷头就行了。
    试卷标题.加入文本 (相加 (字符 (13), 字符 (10)), 相加 (字符 (13), 字符 (10)), “第I卷  客观题部分”, 相加 (字符 (13), 字符 (10)), 相加 (字符 (13), 字符 (10)), “一、选择题。(本大题共”, 到文本 (取数组成员数 (选提)), “小题）”, 相加 (字符 (13), 字符 (10)))
    选择题答案提取 ()
    “第II卷　主观题部分”.加入文本 (相加 (字符 (13), 字符 (10)), “二、材料解析题。（本大题共”, 到文本 (取数组成员数 (材提)), “小题）”, 相加 (字符 (13), 字符 (10)))
    材料题答案提取 ()
    “三、问答题。（本大题共”.加入文本 (到文本 (取数组成员数 (问提)), “小题）”, 相加 (字符 (13), 字符 (10)))
    问答题答案提取 ()
    信息框 (“答案提取完成，请检查！”, 相加 (64, 0), )
    _编辑界面_被单击 ()
.否则
     ' 如果设分值的话，情况的复杂程度以几何级别向上攀升。
    载入 (试卷生成窗口2, , 真)
    载入 (试卷生成窗口3, , 真)
     ' 载入两个窗口的只在于搜集相关信息而已，本身并不会直接生成试卷。因此才会出现两个窗口连续载入的奇怪现象。
    试卷标题.加入文本 (相加 (字符 (13), 字符 (10)), “考试时间：从”, 考试开始时间, “到”, 考试结束时间, “    共”, 到文本 (考试时长), “分钟”, 相加 (字符 (13), 字符 (10)), “卷面总分：”, 到文本 (卷面总分), “    出卷人：”, 出卷人, 相加 (字符 (13), 字符 (10)), 相加 (字符 (13), 字符 (10)), “第I卷  客观题部分”, 相加 (字符 (13), 字符 (10)), 相加 (字符 (13), 字符 (10)), “一、选择题。(本大题共”, 到文本 (取数组成员数 (选提)), “小题。每小题”, 到文本 (选择题每题分值), “分，共”, 到文本 (相乘 (取数组成员数 (选提), 选择题每题分值)), “分。)”, 相加 (字符 (13), 字符 (10)))
     ' 试卷头的设置并无多大不同，不同的在于对下面分值的设置，难度极大。
     ' 选择题由于各题相对固定，给定的得分又是每题一致，所以相对简单。
    选择题答案提取 ()
     ' 对于材料解析和问答题的导出，由于是将信息储存在注册表中，因此要注意①命名规则；②注意在系统关闭时要及时删除主键。
     ' 具体命名规则如下：①材料题每题本身以“C1”、“C2”、...“Cn”的方式规定；②每小题的分值的键值名规定为：“C11”、“C21”、...“Cnn”的形式加以规定。
     ' 下面制作试卷头的第二部分，又一个标题。
    相加 (字符 (13), 字符 (10)).加入文本 (“第II卷　主观题部分”, 相加 (字符 (13), 字符 (10)), 相加 (字符 (13), 字符 (10)))
    
    
    
    
    “二、材料解析题。”.加入文本 (“（本大题共”, 到文本 (取数组成员数 (材提)), “题。其中”)
     ' 下面要做的是给材料解析题的每一题（这需要加一个循环过程）加上分值。（不是每一小问，但却必须计算每一小问分值之和。）要做到这一点。必须先知道每一题究竟有几个小问，这点可从注册表中得到――到“Cn”的值就可以了。
    .变量循环首 (1, 取数组成员数 (材提), 1, 取材料分值)
        赋值 (单题总分, 0)
         ' 因为是要确定材料题每一题的分值之和，所以用“材提”数组的成员数就可以了。每一次循环都必须取出一个“Cn”的值。
        赋值 (材料题小问数, 取数值注册项 (3, 相加 (“software\高中历史题库系统\cl\c”, 到文本 (取材料分值)), 0))
         ' 取出材料题的小问后，我们可以继续取出每小问的分值。也用一个变量循环。
        .如果真 (大于或等于 (材料题小问数, 1))
             ' 如果没有成员，则单题总分应为零分。
            .变量循环首 (1, 材料题小问数, 1, 取小问分值)
                赋值 (小问分值, 取数值注册项 (3, 相加 (“software\高中历史题库系统\cl\c”, 到文本 (取材料分值), 到文本 (取小问分值)), ))
                赋值 (单题总分, 相加 (单题总分, 小问分值))
                 ' 每一次循环，单题总分的值就会变掉，所以要及时另存为。最好的办法就是再加一个数组。
            .变量循环尾 ()
            加入成员 (材料题题分, 单题总分)
        .如果真结束
        
    .变量循环尾 ()
     ' 此时材料题每一题的单题总分都在“材料题题分”数组之中了。再用变量循环来加上每一题的附属说明。
    .变量循环首 (1, 取数组成员数 (材料题题分), 1, 材料题单题赋值)
        “，第”.加入文本 (到文本 (材料题单题赋值), “题”, 到文本 (材料题题分 [材料题单题赋值]), “分”)
        赋值 (材料题总分, 相加 (材料题总分, 材料题题分 [材料题单题赋值]))
    .变量循环尾 ()
     ' 还要加上结束标志才行。通常这个标志是一个右括号。
    “，共”.加入文本 (到文本 (材料题总分), “分。）”, 相加 (字符 (13), 字符 (10)))
    材料题答案提取 ()
     ' 为了实现变量的复用，必须将数组重置。
    清除数组 (材料题题分)
     ' 从内存资源的角度来讲，还是清除比较好，其实不清除也可，因为下面已经用不到它了。而且这个数组不过几个数字而已，占不了多少内存。本来这个数组清除后，可以让问答题来用，不过为了避免混淆，还是不用它了。
    
    
    
    
     ' 材料题提取之后，就要继续做试卷头部分，这回是问答题。与材料题非常类似，代码可复制。
    “三、问答题。”.加入文本 (“（本大题共”, 到文本 (取数组成员数 (问提)), “题。其中”)
     ' 下面要做的是给问答题的每一题（这需要加一个循环过程）加上分值。（不是每一小问，但却必须计算每一小问分值之和。）要做到这一点。必须先知道每一题究竟有几个小问，这点可从注册表中得到――到“Wn”的值就可以了。
    .变量循环首 (1, 取数组成员数 (问提), 1, 取问答分值)
         ' 无论是选择、材料解析还是问答，其每一题的题分都是在总的“提取纯文本试卷”子程序里，而不是在各自提取题目的子程序中完成的。
        赋值 (问答单题总分, 0)
         ' 因为是要确定材料题每一题的分值之和，所以用“材提”数组的成员数就可以了。每一次循环都必须取出一个“Wn”的值。
        赋值 (问答题小问数, 取数值注册项 (3, 相加 (“software\高中历史题库系统\wl\w”, 到文本 (取问答分值)), 0))
         ' 取出材料题的小问后，我们可以继续取出每小问的分值。也用一个变量循环。
        .如果真 (大于或等于 (问答题小问数, 1))
             ' 如果没有成员，则单题总分应为零分。
            .变量循环首 (1, 问答题小问数, 1, 问答取小问分值)
                赋值 (问答小问分值, 取数值注册项 (3, 相加 (“software\高中历史题库系统\wl\w”, 到文本 (取问答分值), 到文本 (问答取小问分值)), ))
                赋值 (问答单题总分, 相加 (问答单题总分, 问答小问分值))
                 ' 每一次循环，单题总分的值就会变掉，所以要及时另存为。最好的办法就是再加一个数组。
            .变量循环尾 ()
            加入成员 (问答题题分, 问答单题总分)
        .如果真结束
        
    .变量循环尾 ()
     ' 此时问答题每一题的单题总分都在“问答题题分”数组之中了。再用变量循环来加上每一题的附属说明。
    .变量循环首 (1, 取数组成员数 (问答题题分), 1, 问答题单题赋值)
        “，第”.加入文本 (到文本 (问答题单题赋值), “题”, 到文本 (问答题题分 [问答题单题赋值]), “分”)
         ' 显示为：“，第X题X分”
        赋值 (问答题总分, 相加 (问答题总分, 问答题题分 [问答题单题赋值]))
    .变量循环尾 ()
     ' 还要加上结束标志才行。通常这个标志是一个右括号。
    “，共”.加入文本 (到文本 (问答题总分), “分。）”, 相加 (字符 (13), 字符 (10)))
    问答题答案提取 ()
    信息框 (“答案提取完成，请检查！”, 相加 (64, 0), )
    _编辑界面_被单击 ()
     ' 至此，提取文本试卷的工作应该是完成了。
.如果结束


.子程序 选择题答案提取, 空白型, , 
.局部变量 选择记录循环, 整数型, , , 

清除数组 (显示字段号数组)
置当前库 (“选择题库”)
.变量循环首 (1, 取数组成员数 (选提), 1, 选择记录循环)
    跳到 (选提 [选择记录循环])
    到文本 (选择记录循环).加入文本 (“.”, 到文本 (未知支持库函数_4 (读 (9), “dybjppbb”, )), 字符 (9))
.变量循环尾 ()
相加 (字符 (13), 字符 (10)).加入文本 ()
 ' 以上是导出选择题部分的内容，至此已完成选择题部分的导出。

.子程序 材料题答案提取, 空白型, , 
.局部变量 材料记录循环, 空白型, , , 
.局部变量 写分值, 空白型, , , 
.局部变量 单题总分, 空白型, , , 
.局部变量 单题分值数组, 空白型, , "0", 

 ' 无论调用哪一个子程序来导出试题，都须注意及时清除数组。
 ' 材料和问答题的提取，还要注意题号的变化，要能自动加上题号。（以与选择题一致。）
置当前库 (“材料题库”)
.变量循环首 (1, 取数组成员数 (材提), 1, 材料记录循环)
     ' 每一次的循环即导出一题，所以要加上题号，即应在此处。这个地方加的时候还要考虑选择题的题数，同时，题号后面一般有一个标点，这里借用了顿号。
    到文本 (相加 (取数组成员数 (选提), 材料记录循环)).加入文本 (“.”)
     ' 要加上每小问的分值也只有加在这里了。每小问的分值正是写在本题前面，然后换行。
    .如果真 (等于 (是否设分值, 真))
         ' 这里需要单独计算各小问的分值，与前面类似。
        “（本题共”.加入文本 (到文本 (取数值注册项 (3, 相加 (“software\高中历史题库系统\cl\c”, 到文本 (材料记录循环)), )), “小问，其中”)
         ' 显示内容将会是――“（本题共X小问，其中”――（不包括前面的引号和破折号）
        .变量循环首 (1, 取数值注册项 (3, 相加 (“software\高中历史题库系统\cl\c”, 到文本 (材料记录循环)), ), 1, 写分值)
            “，第”.加入文本 (到文本 (写分值), “小问”, 到文本 (取数值注册项 (3, 相加 (“software\高中历史题库系统\cl\c”, 到文本 (材料记录循环), 到文本 (写分值)), )), “分”)
             ' 显示的内容将会是――“，第X小问X分”――（不包括前面的引号和破折号）
            赋值 (单题总分, 相加 (单题总分, 取数值注册项 (3, 相加 (“software\高中历史题库系统\cl\c”, 到文本 (材料记录循环), 到文本 (写分值)), )))
             ' 本循环第一次循环结束后，“单题总分”不断累积，即产生第一题材料解析的总分值。相应地，第二次将产生第二题的总分值。
        .变量循环尾 ()
        加入成员 (单题分值数组, 单题总分)
         ' 由于每次循环都会产生一个“单题总分”所以每次的数据要保存下来，用数组是个比较好的选择，这比用注册表简单得多。之所以计分时要采用注册表的手法，其实原因在于材料解析和问答题本身的每题的小问的数量是不确定的，所以无从知道要将要用到多少个数组，这就导致无法事先对数组进行定义，而数组又不能由程序代码本身来直接进行定义（或声明）。
        “，共”.加入文本 (到文本 (单题分值数组 [材料记录循环]), “分。）”, 相加 (字符 (13), 字符 (10)))
        赋值 (单题总分, 0)
         ' 此时仍在每一个题目的循环之中，所以要将“单题总分”清零，否则，每题的总分会自动累加，也就是说后一题的总分会等于自身的总分加上前一题的总分。
    .如果真结束
     ' 上面的代码都是对分值和标题的处理，下面才是真正提取材料解析题本身。
    
    跳到 (材提 [材料记录循环])
     ' 材料记录循环，是决定跳到并提取第几题材料解析题，所以名之曰“记录循环”。
     ' 默认状态下，导出的是“材料”“问题”两部分，所以应该是4－5才对。
    到文本 (未知支持库函数_4 (读 (6), “dybjppbb”, )).加入文本 (相加 (字符 (13), 字符 (10)))
     ' 以上是导出材料解析题部分的内容，至此已完成材料解析题部分的导出。
.变量循环尾 ()



.子程序 问答题答案提取, 空白型, , 
.局部变量 问答记录循环, 空白型, , , 
.局部变量 问答字段循环, 空白型, , , 
.局部变量 写分值, 空白型, , , 
.局部变量 单题总分, 空白型, , , 
.局部变量 单题分值数组, 空白型, , "0", 

 ' 无论调用哪一个子程序来导出试题，都须注意及时清除数组。
置当前库 (“问答题库”)
.变量循环首 (1, 取数组成员数 (问提), 1, 问答记录循环)
     ' 每一次的循环即导出一题，所以要加上题号，即应在此处。这个地方加的时候不仅要考虑选择题的题数、问答题本身的题数，还要考虑材料题的题数，同时，题号后面一般有一个标点，这里借用了顿号。
    到文本 (相加 (取数组成员数 (选提), 取数组成员数 (材提), 问答记录循环)).加入文本 (“.”)
     ' 序号上，这里和材料题不同。
    .如果真 (等于 (是否设分值, 真))
         ' 这里需要单独计算各小问的分值，与前面类似。
        “（本题共”.加入文本 (到文本 (取数值注册项 (3, 相加 (“software\高中历史题库系统\wl\w”, 到文本 (问答记录循环)), )), “小问，其中”)
         ' 显示内容将会是――“（本题共X小问，其中”――（不包括前面的引号和破折号）
        .变量循环首 (1, 取数值注册项 (3, 相加 (“software\高中历史题库系统\wl\w”, 到文本 (问答记录循环)), ), 1, 写分值)
            “，第”.加入文本 (到文本 (写分值), “小问”, 到文本 (取数值注册项 (3, 相加 (“software\高中历史题库系统\wl\w”, 到文本 (问答记录循环), 到文本 (写分值)), )), “分”)
            赋值 (单题总分, 相加 (单题总分, 取数值注册项 (3, 相加 (“software\高中历史题库系统\wl\w”, 到文本 (问答记录循环), 到文本 (写分值)), )))
        .变量循环尾 ()
        加入成员 (单题分值数组, 单题总分)
        “，共”.加入文本 (到文本 (单题分值数组 [问答记录循环]), “分。）”, 相加 (字符 (13), 字符 (10)))
        赋值 (单题总分, 0)
    .如果真结束
    
    跳到 (问提 [问答记录循环])
    到文本 (未知支持库函数_4 (读 (6), “dybjppbb”, )).加入文本 (相加 (字符 (13), 字符 (10)))
     ' 以上是导出问答题部分的内容，至此已完成材料解析题部分的导出。
.变量循环尾 ()



.子程序 _提取WORD文档答案35_被选择, 空白型, , 
.局部变量 取材料分值, 整数型, , , 
.局部变量 材料题小问数, 整数型, , , 
.局部变量 取小问分值, 整数型, , , 
.局部变量 小问分值, 整数型, , , 
.局部变量 单题总分, 整数型, , , 
.局部变量 材料题题分, 整数型, , "0", 
.局部变量 材料题单题赋值, 空白型, , , 
.局部变量 取问答分值, 空白型, , , 
.局部变量 材料题总分, 空白型, , , 
.局部变量 问答题小问数, 空白型, , , 
.局部变量 问答单题总分, 空白型, , , 
.局部变量 问答取小问分值, 空白型, , , 
.局部变量 问答小问分值, 空白型, , , 
.局部变量 问答题题分, 空白型, , "0", 
.局部变量 问答题单题赋值, 空白型, , , 
.局部变量 问答题总分, 空白型, , , 

赋值 (是否在提取答案, 真)
赋值 (是否提取格式试卷, 真)
 ' 既然要导出的是WORD文档，那么，WORD文档的初始化就必不可少。
未知支持库函数_0 ()
.未知支持库函数_5 (真) ' 提取文档完成后，应使word窗口显示出来。

页面设置 ()
载入 (试卷生成窗口1, , 真)
 ' 无论情况如何，都要通过“试卷生成窗口1”来搜集部分试卷信息。
.如果 (等于 (是否设分值, 假))
     ' 如果不设分值，事情会好办得多，只要挨个填入一系列信息生成一个试卷头就行了。
     ' 试卷头总分由于字体不同，所以要分开。
    一级标题 ()
    0.未知支持库函数_18 (相加 (试卷标题, 字符 (13), 字符 (10))) ' 这里输入的就不再是文本试卷编辑框了，而是WORD文档集了。
    二级标题 ()
    0.未知支持库函数_18 (相加 (“第I卷  客观题部分”, 字符 (13), 字符 (10), 字符 (13), 字符 (10)))
    三级标题 ()
    0.未知支持库函数_18 (“一、选择题。”)
    附属标题 ()
    0.未知支持库函数_18 (相加 (“(本大题共”, 到文本 (取数组成员数 (选提)), “小题）”, 字符 (13), 字符 (10)))
    正文 ()
    选择题答案提取1 ()
     ' 选择题提取后，继续改变字体，完成标题的写入。
    二级标题 ()
    0.未知支持库函数_18 (相加 (“第II卷　主观题部分”, 字符 (13), 字符 (10)))
    三级标题 ()
    0.未知支持库函数_18 (“二、材料解析题。”)
    附属标题 ()
    0.未知支持库函数_18 (相加 (“（本大题共”, 到文本 (取数组成员数 (材提)), “小题）”, 字符 (13), 字符 (10)))
    正文 ()
    材料题答案提取1 ()
    三级标题 ()
    0.未知支持库函数_18 (相加 (字符 (13), 字符 (10), “三、问答题。”))
    附属标题 ()
    0.未知支持库函数_18 (相加 (“（本大题共”, 到文本 (取数组成员数 (问提)), “小题）”, 字符 (13), 字符 (10)))
    正文 ()
    问答题答案提取1 ()
    赋值 (., 真)
    未知支持库函数_4 ()
.否则
     ' 如果设分值的话，情况的复杂程度以几何级别向上攀升。
    载入 (试卷生成窗口2, , 真)
    载入 (试卷生成窗口3, , 真)
     ' 载入两个窗口的只在于搜集相关信息而已，本身并不会直接生成试卷。
    一级标题 ()
    0.未知支持库函数_18 (相加 (试卷标题, 字符 (13), 字符 (10)))
    附加信息标题 ()
    0.未知支持库函数_18 (相加 (试卷标题, 字符 (13), 字符 (10), “考试时间：从”, 考试开始时间, “到”, 考试结束时间, “    共”, 到文本 (考试时长), “分钟”, 字符 (13), 字符 (10), “卷面总分：”, 到文本 (卷面总分), “    出卷人：”, 出卷人, 字符 (13), 字符 (10), 字符 (13), 字符 (10)))
    二级标题 ()
    0.未知支持库函数_18 (相加 (“第I卷  客观题部分”, 字符 (13), 字符 (10), 字符 (13), 字符 (10)))
    三级标题 ()
    0.未知支持库函数_18 (“一、选择题。”)
    附属标题 ()
    0.未知支持库函数_18 (相加 (“(本大题共”, 到文本 (取数组成员数 (选提)), “小题，每小题”, 到文本 (选择题每题分值), “分，共”, 到文本 (相乘 (取数组成员数 (选提), 选择题每题分值)), “分。)”, 字符 (13), 字符 (10)))
    正文 ()
     ' 试卷头的设置并无多大不同，不同的在于对下面分值的设置，难度极大。
     ' 选择题由于各题相对固定，给定的得分又是每题一致，所以相对简单。
    选择题答案提取1 ()
     ' 对于材料解析和问答题的导出，由于是将信息储存在注册表中，因此要注意①命名规则；②注意在系统关闭时要及时删除主键。
     ' 具体命名规则如下：①材料题每题本身以“C1”、“C2”、...“Cn”的方式规定；②每小题的分值的键值名规定为：“C11”、“C21”、...“Cnn”的形式加以规定。
     ' 下面制作试卷头的第二部分，又一个标题。
    二级标题 ()
    0.未知支持库函数_18 (相加 (字符 (13), 字符 (10), “第II卷　主观题部分”, 字符 (13), 字符 (10), 字符 (13), 字符 (10)))
    三级标题 ()
    0.未知支持库函数_18 (“二、材料解析题。”)
    附属标题 ()
    0.未知支持库函数_18 (相加 (“（本大题共”, 到文本 (取数组成员数 (材提)), “题。其中”))
     ' 下面要做的是给材料解析题的每一题（这需要加一个循环过程）加上分值。（不是每一小问，但却必须计算每一小问分值之和。）要做到这一点。必须先知道每一题究竟有几个小问，这点可从注册表中得到――到“Cn”的值就可以了。
    .变量循环首 (1, 取数组成员数 (材提), 1, 取材料分值)
        赋值 (单题总分, 0)
         ' 因为是要确定材料题每一题的分值之和，所以用“材提”数组的成员数就可以了。每一次循环都必须取出一个“Cn”的值。
        赋值 (材料题小问数, 取数值注册项 (3, 相加 (“software\高中历史题库系统\cl\c”, 到文本 (取材料分值)), 0))
         ' 取出材料题的小问后，我们可以继续取出每小问的分值。也用一个变量循环。
        .如果真 (大于或等于 (材料题小问数, 1))
             ' 如果没有成员，则单题总分应为零分。
            .变量循环首 (1, 材料题小问数, 1, 取小问分值)
                赋值 (小问分值, 取数值注册项 (3, 相加 (“software\高中历史题库系统\cl\c”, 到文本 (取材料分值), 到文本 (取小问分值)), ))
                赋值 (单题总分, 相加 (单题总分, 小问分值))
                 ' 每一次循环，单题总分的值就会变掉，所以要及时另存为。最好的办法就是再加一个数组。
            .变量循环尾 ()
            加入成员 (材料题题分, 单题总分)
        .如果真结束
        
    .变量循环尾 ()
     ' 此时材料题每一题的单题总分都在“材料题题分”数组之中了。再用变量循环来加上每一题的附属说明。
    .变量循环首 (1, 取数组成员数 (材料题题分), 1, 材料题单题赋值)
        0.未知支持库函数_18 (相加 (“，第”, 到文本 (材料题单题赋值), “题”, 到文本 (材料题题分 [材料题单题赋值]), “分”))
        赋值 (材料题总分, 相加 (材料题总分, 材料题题分 [材料题单题赋值]))
    .变量循环尾 ()
     ' 还要加上结束标志才行。通常这个标志是一个右括号。
    0.未知支持库函数_18 (相加 (“，共”, 到文本 (材料题总分), “分。）”, 字符 (13), 字符 (10)))
    正文 ()
    材料题答案提取1 ()
     ' 为了实现变量的复用，必须将数组重置。
    清除数组 (材料题题分)
     ' 从内存资源的角度来讲，还是清除比较好，其实不清除也可，因为下面已经用不到它了。而且这个数组不过几个数字而已，占不了多少内存。本来这个数组清除后，可以让问答题来用，不过为了避免混淆，还是不用它了。
    
    
    
    
     ' 材料题提取之后，就要继续做试卷头部分，这回是问答题。与材料题非常类似，代码可复制。
    三级标题 ()
    0.未知支持库函数_18 (“三、问答题。”)
    附属标题 ()
    0.未知支持库函数_18 (相加 (“（本大题共”, 到文本 (取数组成员数 (问提)), “题。其中”))
     ' 下面要做的是给问答题的每一题（这需要加一个循环过程）加上分值。（不是每一小问，但却必须计算每一小问分值之和。）要做到这一点。必须先知道每一题究竟有几个小问，这点可从注册表中得到――到“Wn”的值就可以了。
    .变量循环首 (1, 取数组成员数 (问提), 1, 取问答分值)
         ' 无论是选择、材料解析还是问答，其每一题的题分都是在总的“提取纯文本试卷”子程序里，而不是在各自提取题目的子程序中完成的。
        赋值 (问答单题总分, 0)
         ' 因为是要确定材料题每一题的分值之和，所以用“材提”数组的成员数就可以了。每一次循环都必须取出一个“Wn”的值。
        赋值 (问答题小问数, 取数值注册项 (3, 相加 (“software\高中历史题库系统\wl\w”, 到文本 (取问答分值)), 0))
         ' 取出材料题的小问后，我们可以继续取出每小问的分值。也用一个变量循环。
        .如果真 (大于或等于 (问答题小问数, 1))
             ' 如果没有成员，则单题总分应为零分。
            .变量循环首 (1, 问答题小问数, 1, 问答取小问分值)
                赋值 (问答小问分值, 取数值注册项 (3, 相加 (“software\高中历史题库系统\wl\w”, 到文本 (取问答分值), 到文本 (问答取小问分值)), ))
                赋值 (问答单题总分, 相加 (问答单题总分, 问答小问分值))
                 ' 每一次循环，单题总分的值就会变掉，所以要及时另存为。最好的办法就是再加一个数组。
            .变量循环尾 ()
            加入成员 (问答题题分, 问答单题总分)
        .如果真结束
        
    .变量循环尾 ()
     ' 此时问答题每一题的单题总分都在“问答题题分”数组之中了。再用变量循环来加上每一题的附属说明。
    .变量循环首 (1, 取数组成员数 (问答题题分), 1, 问答题单题赋值)
        0.未知支持库函数_18 (相加 (“，第”, 到文本 (问答题单题赋值), “题”, 到文本 (问答题题分 [问答题单题赋值]), “分”))
         ' 显示为：“，第X题X分”
        赋值 (问答题总分, 相加 (问答题总分, 问答题题分 [问答题单题赋值]))
    .变量循环尾 ()
     ' 还要加上结束标志才行。通常这个标志是一个右括号。
    0.未知支持库函数_18 (相加 (“，共”, 到文本 (问答题总分), “分。）”, 字符 (13), 字符 (10)))
    正文 ()
    问答题答案提取1 ()
    _编辑界面_被单击 ()
    赋值 (., 真)
    未知支持库函数_4 ()
     ' 至此，提取文本试卷的工作应该是完成了。
.如果结束


.子程序 选择题答案提取1, 空白型, , 
.局部变量 选择记录循环, 整数型, , , 

清除数组 (显示字段号数组)
置当前库 (“选择题库”)
.变量循环首 (1, 取数组成员数 (选提), 1, 选择记录循环)
    跳到 (选提 [选择记录循环])
    0.未知支持库函数_18 (相加 (到文本 (选择记录循环), “.”, 到文本 (未知支持库函数_4 (读 (9), “dybjppbb”, )), 字符 (9)))
.变量循环尾 ()
0.未知支持库函数_18 (相加 (字符 (13), 字符 (10)))


.子程序 材料题答案提取1, 空白型, , 
.局部变量 材料记录循环, 空白型, , , 
.局部变量 材料字段循环, 空白型, , , 
.局部变量 写分值, 空白型, , , 
.局部变量 单题总分, 空白型, , , 
.局部变量 单题分值数组, 空白型, , "0", 

 ' 无论调用哪一个子程序来导出试题，都须注意及时清除数组。
 ' 材料和问答题的提取，还要注意题号的变化，要能自动加上题号。（以与选择题一致。）
清除数组 (显示字段号数组)
置当前库 (“材料题库”)
 ' 此处不须考虑是否默认导出，直接禁用就可以了。
.变量循环首 (1, 取数组成员数 (材提), 1, 材料记录循环)
     ' 每一次的循环即导出一题，所以要加上题号，即应在此处。这个地方加的时候还要考虑选择题的题数，同时，题号后面一般有一个标点，这里借用了顿号。
    0.未知支持库函数_18 (相加 (到文本 (相加 (取数组成员数 (选提), 材料记录循环)), “.”))
     ' 要加上每小问的分值也只有加在这里了。每小问的分值正是写在本题前面，然后换行。
    .如果真 (等于 (是否设分值, 真))
         ' 这里需要单独计算各小问的分值，与前面类似。
        0.未知支持库函数_18 (相加 (“（本题共”, 到文本 (取数值注册项 (3, 相加 (“software\高中历史题库系统\cl\c”, 到文本 (材料记录循环)), )), “小问，其中”))
         ' 显示内容将会是――“（本题共X小问，其中”――（不包括前面的引号和破折号）
        .变量循环首 (1, 取数值注册项 (3, 相加 (“software\高中历史题库系统\cl\c”, 到文本 (材料记录循环)), ), 1, 写分值)
            0.未知支持库函数_18 (相加 (“，第”, 到文本 (写分值), “小问”, 到文本 (取数值注册项 (3, 相加 (“software\高中历史题库系统\cl\c”, 到文本 (材料记录循环), 到文本 (写分值)), )), “分”))
             ' 显示的内容将会是――“，第X小问X分”――（不包括前面的引号和破折号）
            赋值 (单题总分, 相加 (单题总分, 取数值注册项 (3, 相加 (“software\高中历史题库系统\cl\c”, 到文本 (材料记录循环), 到文本 (写分值)), )))
             ' 本循环第一次循环结束后，“单题总分”不断累积，即产生第一题材料解析的总分值。相应地，第二次将产生第二题的总分值。
        .变量循环尾 ()
        加入成员 (单题分值数组, 单题总分)
         ' 由于每次循环都会产生一个“单题总分”所以每次的数据要保存下来，用数组是个比较好的选择，这比用注册表简单得多。之所以计分时要采用注册表的手法，其实原因在于材料解析和问答题本身的每题的小问的数量是不确定的，所以无从知道要将要用到多少个数组，这就导致无法事先对数组进行定义，而数组又不能由程序代码本身来直接进行定义（或声明）。
        0.未知支持库函数_18 (相加 (“，共”, 到文本 (单题分值数组 [材料记录循环]), “分。）”, 字符 (13), 字符 (10)))
        赋值 (单题总分, 0)
         ' 此时仍在每一个题目的循环之中，所以要将“单题总分”清零，否则，每题的总分会自动累加，也就是说后一题的总分会等于自身的总分加上前一题的总分。
    .如果真结束
     ' 上面的代码都是对分值和标题的处理，下面才是真正提取材料解析题本身。
    跳到 (材提 [材料记录循环])
     ' 材料记录循环，是决定跳到并提取第几题材料解析题，所以名之曰“记录循环”。
     ' 默认状态下，导出的是“材料”“问题”两部分，所以应该是4－5才对。
    0.未知支持库函数_18 (相加 (到文本 (未知支持库函数_4 (读 (6), “dybjppbb”, )), 字符 (13), 字符 (10)))
     ' 以上是导出材料解析题部分的内容，至此已完成材料解析题部分的导出。
.变量循环尾 ()

.子程序 问答题答案提取1, 空白型, , 
.局部变量 问答记录循环, 空白型, , , 
.局部变量 问答字段循环, 空白型, , , 
.局部变量 写分值, 空白型, , , 
.局部变量 单题总分, 空白型, , , 
.局部变量 单题分值数组, 空白型, , "0", 

 ' 无论调用哪一个子程序来导出试题，都须注意及时清除数组。
清除数组 (显示字段号数组)
置当前库 (“问答题库”)
.变量循环首 (1, 取数组成员数 (问提), 1, 问答记录循环)
     ' 每一次的循环即导出一题，所以要加上题号，即应在此处。这个地方加的时候不仅要考虑选择题的题数、问答题本身的题数，还要考虑材料题的题数，同时，题号后面一般有一个标点，这里借用了顿号。
    0.未知支持库函数_18 (相加 (到文本 (相加 (取数组成员数 (选提), 取数组成员数 (材提), 问答记录循环)), “.”))
     ' 序号上，这里和材料题不同。
    .如果真 (等于 (是否设分值, 真))
         ' 这里需要单独计算各小问的分值，与前面类似。
        0.未知支持库函数_18 (相加 (“（本题共”, 到文本 (取数值注册项 (3, 相加 (“software\高中历史题库系统\wl\w”, 到文本 (问答记录循环)), )), “小问，其中”))
         ' 显示内容将会是――“（本题共X小问，其中”――（不包括前面的引号和破折号）
        .变量循环首 (1, 取数值注册项 (3, 相加 (“software\高中历史题库系统\wl\w”, 到文本 (问答记录循环)), ), 1, 写分值)
            0.未知支持库函数_18 (相加 (“，第”, 到文本 (写分值), “小问”, 到文本 (取数值注册项 (3, 相加 (“software\高中历史题库系统\wl\w”, 到文本 (问答记录循环), 到文本 (写分值)), )), “分”))
            赋值 (单题总分, 相加 (单题总分, 取数值注册项 (3, 相加 (“software\高中历史题库系统\wl\w”, 到文本 (问答记录循环), 到文本 (写分值)), )))
        .变量循环尾 ()
        加入成员 (单题分值数组, 单题总分)
        0.未知支持库函数_18 (相加 (“，共”, 到文本 (单题分值数组 [问答记录循环]), “分。）”, 字符 (13), 字符 (10)))
        赋值 (单题总分, 0)
    .如果真结束
    
    跳到 (问提 [问答记录循环])
    0.未知支持库函数_18 (相加 (到文本 (未知支持库函数_4 (读 (6), “dybjppbb”, )), 字符 (13), 字符 (10), “”))
     ' 以上是导出问答题部分的内容，至此已完成材料解析题部分的导出。
.变量循环尾 ()



.子程序 _自动演示_被选择, 空白型, , 
载入 (演示窗口, , 真)

.子程序 _分隔条1_被拖动, 空白型, , 
.参数 原位置, 整数型, , 
.参数 目的位置, 整数型, , 

赋值 (., 目的位置)
赋值 (., 目的位置)
赋值 (.顶边, 相加 (目的位置, 14))
赋值 (.高度, 相减 (相加 (.高度, 原位置), 目的位置))

.窗口程序集 排序程序集, , , 这个程序集是独立于各题库之外的。

.子程序 _选中题排序窗口_创建完毕, 空白型, , 
选择题库排序初始化 ()

.子程序 选择题库排序初始化, 空白型, , 
.局部变量 i, 整数型, , , 

置当前库 (“选择题库”)
.变量循环首 (1, 取数组成员数 (选提), 1, i)
    到文本 (选提 [i]).加入项目 ()
.变量循环尾 ()
 ' 初始化时必须考虑跳转框的上限值问题。
赋值 (.调节器上限值, 取数组成员数 (选提))
 ' 还须考虑一些其它问题。
0.选择项目 (真)
.如果 (大于或等于 (取数组成员数 (选提), 1))
    赋值 (.内容, 到文本 (1))
    _列表框1_列表项被选择 ()
.否则
    清空 ()
    赋值 (.内容, “”)
.如果结束


.子程序 材料题库排序初始化, 空白型, , 
.局部变量 i, 整数型, , , 

置当前库 (“材料题库”)
.变量循环首 (1, 取数组成员数 (材提), 1, i)
    到文本 (材提 [i]).加入项目 ()
.变量循环尾 ()
 ' 初始化时必须考虑跳转框的上限值问题。
赋值 (.调节器上限值, 取数组成员数 (材提))
.如果 (大于或等于 (取数组成员数 (材提), 1))
    赋值 (.内容, 到文本 (1))
    _列表框1_列表项被选择 ()
.否则
    赋值 (.内容, “”)
    清空 ()
.如果结束


.子程序 问答题库排序初始化, 空白型, , 
.局部变量 i, 整数型, , , 

置当前库 (“问答题库”)
.变量循环首 (1, 取数组成员数 (问提), 1, i)
    到文本 (问提 [i]).加入项目 ()
.变量循环尾 ()
 ' 初始化时必须考虑跳转框的上限值问题。
赋值 (.调节器上限值, 取数组成员数 (问提))
0.选择项目 (真)
.如果 (大于或等于 (取数组成员数 (问提), 1))
    赋值 (.内容, 到文本 (1))
    _列表框1_列表项被选择 ()
.否则
    清空 ()
    赋值 (.内容, “”)
.如果结束


.子程序 _选择题库单选框_被单击, 空白型, , 
清空 ()
赋值 (.选中, 真)
赋值 (.选中, 假)
赋值 (.选中, 假)
选择题库排序初始化 ()

.子程序 _材料题库单选框_被单击, 空白型, , 
清空 ()
赋值 (.选中, 假)
赋值 (.选中, 真)
赋值 (.选中, 假)
材料题库排序初始化 ()


.子程序 _问答题库单选框_被单击, 空白型, , 
清空 ()
赋值 (.选中, 假)
赋值 (.选中, 假)
赋值 (.选中, 真)
问答题库排序初始化 ()


.子程序 _上移按钮_被单击, 空白型, , 
.局部变量 x, 空白型, , , 

 ' 有关的事情还是等会再说
 ' 我想先看看其它部分的情况再作决定
 ' ,具体实现时，不可先删除选中对象，再插入前一个位置――那样会造成数据丢失。比如：选中第三个对象，插入位置2，则位置2的对象自然就成了第三个对象，此时会多出第四个对象，再删除第四个对象，也就实现了上移的目标。
.如果真 (大于或等于 (.现行选中项, 1))
    赋值 (x, .现行选中项)
    相减 (x, 1).插入项目 (.取项目文本 (.现行选中项), )
    相加 (x, 1).删除项目 ()
    相减 (x, 1).选择项目 ()
    赋值 (.内容, 到文本 (相加 (.现行选中项, 1)))
.如果真结束


.子程序 _下移按钮_被单击, 空白型, , 
.局部变量 x, 整数型, , , 

 ' 下移的做法和上移是类似的，不同的是删除的目标位置不同，比如：选中第三个目标要删除，则必须先将目标移动(复制)到第五个位置，然后再删除目标本身，这样原来的第四个对象自然上升一位成为第三位，而复制后的目标也就成为第四位，这就实现了下移的目标。
.如果真 (小于或等于 (.现行选中项, 相减 (取项目数 (), 2)))
    赋值 (x, .现行选中项)
    相加 (x, 2).插入项目 (.取项目文本 (.现行选中项), )
    x.删除项目 ()
    相加 (x, 1).选择项目 ()
    赋值 (.内容, 到文本 (相加 (.现行选中项, 1)))
.如果真结束


.子程序 _返回按钮_被单击, 空白型, , 
.局部变量 i, 空白型, , , 

.如果 (等于 (取当前库 (), “选择题库”))
    清除数组 (选提)
    赋值 (_启动窗口..内容, “”)
    .变量循环首 (1, 取项目数 (), 1, i)
        加入成员 (选提, 到数值 (相减 (i, 1).取项目文本 ()))
    .变量循环尾 ()
    选中题排序窗口.销毁 ()
.否则
    .如果 (等于 (取当前库 (), “材料题库”))
        清除数组 (材提)
        赋值 (_启动窗口..内容, “”)
        .变量循环首 (1, 取项目数 (), 1, i)
            加入成员 (材提, 到数值 (相减 (i, 1).取项目文本 ()))
        .变量循环尾 ()
        选中题排序窗口.销毁 ()
    .否则
        .如果真 (等于 (取当前库 (), “问答题库”))
            清除数组 (问提)
            赋值 (_启动窗口..内容, “”)
            .变量循环首 (1, 取项目数 (), 1, i)
                加入成员 (问提, 到数值 (相减 (i, 1).取项目文本 ()))
            .变量循环尾 ()
            选择题库维护窗口.销毁 ()
        .如果真结束
        
    .如果结束
    
.如果结束


.子程序 _列表框1_列表项被选择, 空白型, , 
.局部变量 i, 整数型, , , 

赋值 (.内容, “”)
.如果 (等于 (取当前库 (), “选择题库”))
    赋值 (.内容, 到文本 (相加 (.现行选中项, 1)))
    .如果真 (等于 (跳到 (到数值 (.取项目文本 (.现行选中项))), 真))
        .变量循环首 (4, 8, 1, i)
            到文本 (未知支持库函数_4 (读 (i), “dybjppbb”, )).加入文本 (相加 (字符 (13), 字符 (10)))
        .变量循环尾 ()
    .如果真结束
    
.否则
    .如果真 (或者 (等于 (取当前库 (), “材料题库”), 等于 (取当前库 (), “问答题库”)))
        赋值 (.内容, 到文本 (相加 (.现行选中项, 1)))
        .如果真 (等于 (跳到 (到数值 (.取项目文本 (.现行选中项))), 真))
            .变量循环首 (4, 6, 1, i)
                到文本 (未知支持库函数_4 (读 (i), “dybjppbb”, )).加入文本 (相加 (字符 (13), 字符 (10)))
            .变量循环尾 ()
        .如果真结束
        
    .如果真结束
    
.如果结束


.窗口程序集 查找试题程序集, , , 

.程序集变量 搜索字段名, 文本型, , , 
.程序集变量 搜索记录号, 整数型, , "0", 
.子程序 _查找试题窗口_创建完毕, 空白型, , 
.局部变量 i, 整数型, , , 

 ' 模糊查找终于宣告失败！！！！！！！！！！
 ' 在这个事件中，必须自动判断当前库，并添加相关的检索项目。一般情况下不推荐从所有字段中去选择，因而默认选项不如设置为按题干来搜索。
 ' 注意如果按选择来查找的话，要注意其代码与采用逻辑型数据时不同。
 ' 由于同在整个数据库的某一个字段中进行搜索，因此和某个数组并无然的联系，所以不必太担心窗口销毁过程中带来的问题。
.变量循环首 (1, 取字段数 (), 1, i)
    取字段名 (i).加入项目 (i)
.变量循环尾 ()
3.选择项目 (真)
赋值 (.现行选中项, 3)
赋值 (搜索字段名, 3.取项目文本 ())

.子程序 _搜索按钮_被单击, 空白型, , 
 ' 搜索按钮中要注意使用模糊查找，尤其是条件的使用(且、或)的使用，可参考以前的代码。
到首记录 ()
.如果 (等于 (.现行选中项, 0))
    真假选择 ()
.否则
    搜索判断 ()
.如果结束


.子程序 真假选择, 空白型, , 
.局部变量 i, 整数型, , , 

赋值 (.可视, 真)
.如果 (等于 (.选中, 真))
    .变量循环首 (1, 取记录数 (), 1, i)
        跳到 (i)
        .如果真 (等于 (读 (“选择状态”), 真))
            加入成员 (搜索记录号, 取记录号 ())
        .如果真结束
        
    .变量循环尾 ()
    .如果 (大于或等于 (取数组成员数 (搜索记录号), 1))
        清除数组 (显示记录号数组)
        赋值 (显示记录号数组, 搜索记录号)
        清除数组 (搜索记录号)
        赋值 (_启动窗口..内容, “1”)
        赋值 (_启动窗口..标题, 相加 (“找到 ”, 到文本 (取数组成员数 (显示记录号数组)), “ 道试题”))
        赋值 (_启动窗口..标题, 相加 (“第 ”, _启动窗口..内容, “ 页，共”, 到文本 (相加 (取整 (相除 (取数组成员数 (显示记录号数组), 5)), 1)), “ 页”))
        主界面显示 (到数值 (_启动窗口..内容))
        查找试题窗口.销毁 ()
        信息框 (相加 (“找到”, 到文本 (取数组成员数 (显示记录号数组)), “道符合条件的试题！”, 字符 (13), 字符 (10), “如果要重新显示所有试题，请按F11键或从菜单中切换题库！”), 相加 (#信息图标, #确认钮), )
    .否则
        .如果真 (等于 (取数组成员数 (搜索记录号), 0))
            信息框 (“未找到符合条件的记录！”, 相加 (#信息图标, #确认钮), )
        .如果真结束
        
    .如果结束
    
.否则
    .如果真 (等于 (.选中, 真))
        .变量循环首 (1, 取记录数 (), 1, i)
            跳到 (i)
            .如果真 (等于 (读 (“选择状态”), 假))
                加入成员 (搜索记录号, 取记录号 ())
            .如果真结束
            
        .变量循环尾 ()
        .如果 (大于或等于 (取数组成员数 (搜索记录号), 1))
            清除数组 (显示记录号数组)
            赋值 (显示记录号数组, 搜索记录号)
            清除数组 (搜索记录号)
            赋值 (_启动窗口..内容, “1”)
            赋值 (_启动窗口..标题, 相加 (“找到 ”, 到文本 (取数组成员数 (显示记录号数组)), “ 道试题”))
            赋值 (_启动窗口..标题, 相加 (“第 ”, _启动窗口..内容, “ 页，共”, 到文本 (相加 (取整 (相除 (取数组成员数 (显示记录号数组), 5)), 1)), “ 页”))
            主界面显示 (到数值 (_启动窗口..内容))
            查找试题窗口.销毁 ()
            信息框 (相加 (“找到”, 到文本 (取数组成员数 (显示记录号数组)), “道符合条件的试题！如果要重新显示所有试题，请按F11键或从菜单中切换题库！”), 相加 (#信息图标, #确认钮), )
        .否则
            .如果真 (等于 (取数组成员数 (显示记录号数组), 0))
                信息框 (“未找到符合条件的记录！”, 相加 (#信息图标, #确认钮), )
            .如果真结束
            
        .如果结束
        
    .如果真结束
    
.如果结束


.子程序 _选中的试题_被单击, 空白型, , 
赋值 (.选中, 真)
赋值 (.选中, 假)

.子程序 _未选中试题_被单击, 空白型, , 
赋值 (.选中, 假)
赋值 (.选中, 真)

.子程序 _取消按钮_被单击, 空白型, , 
查找试题窗口.销毁 ()

.子程序 _索引选择列表框_列表项被选择, 空白型, , 
.局部变量 i, 空白型, , , 

赋值 (搜索字段名, .取项目文本 (.现行选中项))

.子程序 搜索判断, 空白型, , 
.局部变量 i, 整数型, , , 

.变量循环首 (1, 取记录数 (), 1, i)
    跳到 (i)
    .如果真 (不等于 (寻找文本 (到文本 (未知支持库函数_4 (读 (搜索字段名), “dybjppbb”, )), .内容, , 假), -1))
        加入成员 (搜索记录号, i)
    .如果真结束
    
.变量循环尾 ()
搜索显示 ()

.子程序 搜索显示, 空白型, , 
.如果 (大于或等于 (取数组成员数 (搜索记录号), 1))
    清除数组 (显示记录号数组)
    赋值 (显示记录号数组, 搜索记录号)
    清除数组 (搜索记录号)
    赋值 (_启动窗口..内容, “1”)
    赋值 (_启动窗口..标题, 相加 (“找到 ”, 到文本 (取数组成员数 (显示记录号数组)), “ 道试题”))
    赋值 (_启动窗口..标题, 相加 (“第 ”, _启动窗口..内容, “ 页，共”, 到文本 (相加 (取整 (相除 (取数组成员数 (显示记录号数组), 5)), 1)), “ 页”))
    主界面显示 (到数值 (_启动窗口..内容))
    信息框 (相加 (“找到”, 到文本 (取数组成员数 (显示记录号数组)), “道符合条件的试题！”, 字符 (13), 字符 (10), “如果要重新显示所有试题，请按F11键或从菜单中切换题库！”), 相加 (#信息图标, #确认钮), )
    查找试题窗口.销毁 ()
.否则
    .如果真 (等于 (取数组成员数 (搜索记录号), 0))
        信息框 (“未找到符合条件的试题！”, 相加 (64, 0), )
    .如果真结束
    
.如果结束


.窗口程序集 材料问答维护程序集, , , 

.程序集变量 是否已保存, 逻辑型, , , 
.程序集变量 记录跳转控制, 整数型, , , 
.程序集变量 跳转框内容, 文本型, , , 
.子程序 _选态组合框1_列表项被选择, 空白型, , 
.如果 (等于 (读 (1), 真))
    写 (1, 假)
    “假”.选择 ()
    .如果 (等于 (取当前库 (), “材料题库”))
        _材料题库10_被选择 ()
    .否则
        _问答题库11_被选择 ()
    .如果结束
    
.否则
    写 (1, 真)
    “真”.选择 ()
    .如果 (等于 (取当前库 (), “材料题库”))
        _材料题库10_被选择 ()
    .否则
        _问答题库11_被选择 ()
    .如果结束
    
.如果结束


.子程序 材料问答题维护显示, 空白型, , 
.如果 (等于 (读 (1), 真))
    “真”.选择 ()
.否则
    “假”.选择 ()
.如果结束
赋值 (.内容, 到文本 (未知支持库函数_4 (读 (2), “dybjppbb”, )))
赋值 (.内容, 到文本 (未知支持库函数_4 (读 (3), “dybjppbb”, )))
赋值 (.内容, 到文本 (未知支持库函数_4 (读 (4), “dybjppbb”, )))
赋值 (.内容, 到文本 (未知支持库函数_4 (读 (5), “dybjppbb”, )))
赋值 (.内容, 到文本 (未知支持库函数_4 (读 (6), “dybjppbb”, )))
赋值 (.内容, 到文本 (未知支持库函数_4 (读 (7), “dybjppbb”, )))
赋值 (.内容, 到文本 (未知支持库函数_4 (读 (8), “dybjppbb”, )))
赋值 (.内容, 到文本 (未知支持库函数_4 (读 (9), “dybjppbb”, )))
赋值 (.内容, 到文本 (取记录号 ()))
赋值 (.内容, 到文本 (取记录数 ()))
获取焦点 ()

.子程序 _材料问答维护窗口_创建完毕, 空白型, , 
赋值 (是否已保存, 真)
.如果 (等于 (取当前库 (), “材料题库”))
    赋值 (材料问答维护窗口.标题, “材料题维护管理”)
.否则
    赋值 (材料问答维护窗口.标题, “问答题维护管理”)
.如果结束
检查记录号位置 ()
材料问答题维护显示 ()
赋值 (.调节器上限值, 取数组成员数 (显示记录号数组))
未知支持库函数_0 (取窗口句柄 (), “Esc键或Alt+F4”, 假, 假)
未知支持库函数_0 (取窗口句柄 (), “F1→第一题”, 假, 假)
未知支持库函数_0 (取窗口句柄 (), “F2→后退一题”, 假, 假)
未知支持库函数_0 (取窗口句柄 (), “F3→前进一题”, 假, 假)
未知支持库函数_0 (取窗口句柄 (), “F4→最后一题”, 假, 假)
未知支持库函数_0 (取窗口句柄 (), “Ctrl+P→增加一题”, 假, 假)
未知支持库函数_0 (取窗口句柄 (), “Ctrl+D→删除一题”, 假, 假)
未知支持库函数_0 (取窗口句柄 (), “Ctrl+I→入库”, 假, 假)

.子程序 检查保存状态C, 空白型, , 
.如果真 (等于 (是否已保存, 假))
    .如果真 (等于 (信息框 (“当前信息尚未保存，要保存吗？”, 相加 (32, 4), ), 5))
        _入库1_被单击 ()
    .如果真结束
    
.如果真结束


.子程序 检查记录号位置, 空白型, , 
.局部变量 x, 整数型, , , 
.局部变量 i, 整数型, , , 

赋值 (x, 取记录号 ())
.变量循环首 (1, 取数组成员数 (显示记录号数组), 1, i)
    .如果真 (等于 ( [i], x))
         ' 检查记录号在显示记录号数组中的位置。
        赋值 (记录跳转控制, i)
    .如果真结束
    
.变量循环尾 ()
赋值 (.内容, 到文本 (记录跳转控制))

.子程序 _前一记录1_被单击, 空白型, , 
检查保存状态C ()
检查记录号位置 ()
.如果 (大于或等于 (记录跳转控制, 2))
    跳到 (显示记录号数组 [相减 (记录跳转控制, 1)])
    赋值 (记录跳转控制, 相减 (记录跳转控制, 1))
    赋值 (.内容, 到文本 (记录跳转控制))
    材料问答题维护显示 ()
.否则
    信息框 (“已经退到第一题！”, 相加 (64, 0), )
.如果结束


.子程序 _后一记录1_被单击, 空白型, , 
检查保存状态C ()
检查记录号位置 ()
.如果 (小于 (记录跳转控制, 取数组成员数 (显示记录号数组)))
    跳到 (显示记录号数组 [相加 (记录跳转控制, 1)])
    赋值 (记录跳转控制, 相加 (记录跳转控制, 1))
    赋值 (.内容, 到文本 (记录跳转控制))
    材料问答题维护显示 ()
.否则
    信息框 (“已经到最后一题！”, 相加 (64, 0), )
.如果结束


.子程序 _首记录1_被单击, 空白型, , 
检查保存状态C ()
跳到 (显示记录号数组 [1])
赋值 (记录跳转控制, 1)
赋值 (.内容, 到文本 (记录跳转控制))
材料问答题维护显示 ()

.子程序 _尾记录1_被单击, 空白型, , 
检查保存状态C ()
跳到 (显示记录号数组 [取数组成员数 (显示记录号数组)])
赋值 (记录跳转控制, 取数组成员数 (显示记录号数组))
赋值 (.内容, 到文本 (记录跳转控制))
材料问答题维护显示 ()

.子程序 _添加记录1_被单击, 空白型, , 
检查保存状态C ()
.如果 (等于 (加空记录 (), 真))
    信息框 (“已添加一条空记录！”, 0, )
    加入成员 (显示记录号数组, 取记录号 ())
    赋值 (记录跳转控制, 相加 (记录跳转控制, 1))
    材料问答题维护显示 ()
    获取焦点 ()
.否则
    信息框 (“添加记录失败！”, 相加 (64, 0), )
.如果结束


.子程序 _彻底删除1_被单击1, 空白型, , 
.如果 (等于 (信息框 (相加 (“    彻底删除要重新整理整个数据库，因而速度较慢，请耐心等待。强行结束任务会丢失数据，要继续吗？”, 字符 (13), 字符 (10), “    彻底删除之后，会关闭管理界面，要继续工作，请重新打开管理界面！”), 相加 (32, 4), ), 5))
    彻底删除 ()
    信息框 (“已删除所有加删除标记的记录，管理窗口将关闭！”, 0, )
    .如果 (等于 (取当前库 (), “材料题库”))
        _材料题库10_被选择 ()
        材料问答维护窗口.销毁 ()
    .否则
        _问答题库11_被选择 ()
        材料问答维护窗口.销毁 ()
    .如果结束
    
.否则
    返回 ()
.如果结束


.子程序 _返回按钮_被单击, 空白型, , 
_材料问答维护窗口_可否被关闭 ()

.子程序 _跳转框_内容被改变, 空白型, , 
跳到 (显示记录号数组 [到数值 (.内容)])
材料问答题维护显示 ()

.子程序 _材料问答维护窗口_可否被关闭, 逻辑型, , 
.局部变量 x, 整数型, , , 

.如果 (等于 (是否已保存, 假))
    赋值 (x, 信息框 (“文件尚未保存，要存盘吗？”, 相加 (#询问图标, 3), “是否要存盘？”))
    .如果真 (等于 (x, 5))
        _入库1_被单击 ()
        材料问答维护窗口.销毁 ()
    .如果真结束
    .如果真 (等于 (x, 6))
        材料问答维护窗口.销毁 ()
    .如果真结束
    .如果真 (等于 (x, 1))
        返回 (假)
    .如果真结束
    
.否则
    材料问答维护窗口.销毁 ()
.如果结束


.子程序 _关键词显示输入框1_内容被改变, 空白型, , 
赋值 (是否已保存, 假)


.子程序 _类别框1_内容被改变, 空白型, , 
赋值 (是否已保存, 假)


.子程序 _材料显示输入框_内容被改变, 空白型, , 
赋值 (是否已保存, 假)


.子程序 _问题显示输入框_内容被改变, 空白型, , 
赋值 (是否已保存, 假)


.子程序 _答案显示输入框_内容被改变, 空白型, , 
赋值 (是否已保存, 假)


.子程序 _难度框1_内容被改变, 空白型, , 
赋值 (是否已保存, 假)


.子程序 _能力要求框1_内容被改变, 空白型, , 
赋值 (是否已保存, 假)


.子程序 _评析框1_内容被改变, 空白型, , 
赋值 (是否已保存, 假)


.子程序 _入库1_被单击, 空白型, , 
.局部变量 i, 空白型, , , 

写 (1, .取项目文本 (.现行选中项))
写 (2, 未知支持库函数_3 (到字节集 (.内容), “dybjppbb”, ))
写 (3, 未知支持库函数_3 (到字节集 (.内容), “dybjppbb”, ))
写 (4, 未知支持库函数_3 (到字节集 (.内容), “dybjppbb”, ))
写 (5, 未知支持库函数_3 (到字节集 (.内容), “dybjppbb”, ))
写 (6, 未知支持库函数_3 (到字节集 (.内容), “dybjppbb”, ))
写 (7, 未知支持库函数_3 (到字节集 (.内容), “dybjppbb”, ))
写 (8, 未知支持库函数_3 (到字节集 (.内容), “dybjppbb”, ))
写 (9, 未知支持库函数_3 (到字节集 (.内容), “dybjppbb”, ))
赋值 (是否已保存, 真)

.子程序 _最后一题13_被选择, 空白型, , 
_尾记录1_被单击 ()

.子程序 _选态组合框1_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (等于 (键代码, #空格键))
    _选态组合框1_列表项被选择 ()
.如果真结束


.子程序 _前进0_被选择, 空白型, , 
_后一记录1_被单击 ()

.子程序 _后退1_被选择, 空白型, , 
_前一记录1_被单击 ()

.子程序 _第一题2_被选择, 空白型, , 
_首记录1_被单击 ()

.子程序 _加记录04_被选择, 空白型, , 
_添加记录1_被单击 ()

.子程序 _删除记录菜单_被选择, 空白型, , 
_删除记录1_被单击 ()

.子程序 _入库菜单_被选择, 空白型, , 
_入库1_被单击 ()

.子程序 _彻底删除菜单_被选择, 空白型, , 
_彻底删除1_被单击1 ()

.子程序 _字体27_被选择, 空白型, , 
.如果真 (等于 (打开 (), 真))
    连续赋值 (.字体名称, .字体.字体名称, .字体.字体名称, .字体.字体名称, .字体.字体名称, .字体.字体名称, .字体.字体名称, .字体.字体名称, .字体.字体名称)
    连续赋值 (.字体大小, .字体.字体大小, .字体.字体大小, .字体.字体大小, .字体.字体大小, .字体.字体大小, .字体.字体大小, .字体.字体大小, .字体.字体大小)
    连续赋值 (.加粗, .字体.加粗, .字体.加粗, .字体.加粗, .字体.加粗, .字体.加粗, .字体.加粗, .字体.加粗, .字体.加粗)
    连续赋值 (.倾斜, .字体.倾斜, .字体.倾斜, .字体.倾斜, .字体.倾斜, .字体.倾斜, .字体.倾斜, .字体.倾斜, .字体.倾斜, .字体.倾斜)
    连续赋值 (.删除线, .字体.删除线, .字体.删除线, .字体.删除线, .字体.删除线, .字体.删除线, .字体.删除线, .字体.删除线, .字体.删除线)
    连续赋值 (.下划线, .字体.下划线, .字体.下划线, .字体.下划线, .字体.下划线, .字体.下划线, .字体.下划线, .字体.下划线, .字体.下划线)
    连续赋值 (.字体颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色)
.如果真结束


.子程序 _字体大小循环_被选择, 空白型, , 
.如果 (大于或等于 (取整 (相乘 (.字体.字体大小, 0.9)), 10))
    连续赋值 (取整 (相乘 (.字体.字体大小, 0.9)), .字体.字体大小, .字体.字体大小, .字体.字体大小, .字体.字体大小, .字体.字体大小, .字体.字体大小, .字体.字体大小, .字体.字体大小)
.否则
    连续赋值 (72, .字体.字体大小, .字体.字体大小, .字体.字体大小, .字体.字体大小, .字体.字体大小, .字体.字体大小, .字体.字体大小, .字体.字体大小)
.如果结束


.子程序 _字体小大循环_被选择, 空白型, , 
.如果 (小于或等于 (取整 (相乘 (.字体.字体大小, 1.1)), 72))
    连续赋值 (取整 (相乘 (.字体.字体大小, 1.1)), .字体.字体大小, .字体.字体大小, .字体.字体大小, .字体.字体大小, .字体.字体大小, .字体.字体大小, .字体.字体大小, .字体.字体大小)
.否则
    连续赋值 (10, .字体.字体大小, .字体.字体大小, .字体.字体大小, .字体.字体大小, .字体.字体大小, .字体.字体大小, .字体.字体大小, .字体.字体大小)
.如果结束


.子程序 _删记录5_被选择, 空白型, , 
_删除记录1_被单击 ()

.子程序 _彻底删除6_被选择, 空白型, , 
_彻底删除1_被单击1 ()

.子程序 _删除记录1_被单击, 空白型, , 
删除 ()
信息框 (相加 (“已经为题库中第”, 到文本 (取记录号 ()), “题加上删除标志。要彻底删除，请单击”, #左引号, “删除管理”, #右引号, “按钮！”), 相加 (64, 0), )
赋值 (.禁止, 假)

.子程序 _材料问答维护窗口_将被销毁, 空白型, , 
.如果 (等于 (取当前库 (), “材料题库”))
    _材料题库10_被选择 ()
.否则
    _问答题库11_被选择 ()
.如果结束


.子程序 _彻底删除1_被单击, 空白型, , 
载入 (删除管理窗口, , 真)

.子程序 _关键词显示输入框1_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (并且 (等于 (#A键), 等于 (#Ctrl键状态)))
    赋值 (.起始选择位置, 0)
    赋值 (.被选择字符数, 取文本长度 (.内容))
.如果真结束



.子程序 _材料显示输入框_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (并且 (等于 (#A键), 等于 (#Ctrl键状态)))
    赋值 (.起始选择位置, 0)
    赋值 (.被选择字符数, 取文本长度 (.内容))
.如果真结束



.子程序 _问题显示输入框_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (并且 (等于 (#A键), 等于 (#Ctrl键状态)))
    赋值 (.起始选择位置, 0)
    赋值 (.被选择字符数, 取文本长度 (.内容))
.如果真结束



.子程序 _答案显示输入框_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (并且 (等于 (#A键), 等于 (#Ctrl键状态)))
    赋值 (.起始选择位置, 0)
    赋值 (.被选择字符数, 取文本长度 (.内容))
.如果真结束



.子程序 _难度框1_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (并且 (等于 (#A键), 等于 (#Ctrl键状态)))
    赋值 (.起始选择位置, 0)
    赋值 (.被选择字符数, 取文本长度 (.内容))
.如果真结束



.子程序 _能力要求框1_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (并且 (等于 (#A键), 等于 (#Ctrl键状态)))
    赋值 (.起始选择位置, 0)
    赋值 (.被选择字符数, 取文本长度 (.内容))
.如果真结束



.子程序 _类别框1_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (并且 (等于 (#A键), 等于 (#Ctrl键状态)))
    赋值 (.起始选择位置, 0)
    赋值 (.被选择字符数, 取文本长度 (.内容))
.如果真结束



.子程序 _评析框1_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (并且 (等于 (#A键), 等于 (#Ctrl键状态)))
    赋值 (.起始选择位置, 0)
    赋值 (.被选择字符数, 取文本长度 (.内容))
.如果真结束


.子程序 _跳转框1_内容被改变, 空白型, , 
.如果 (并且 (小于或等于 (到数值 (.内容), 取数组成员数 (显示记录号数组)), 大于 (到数值 (.内容), 0)))
    赋值 (跳转框内容, .内容)
    跳到 (显示记录号数组 [到数值 (.内容)])
    材料问答题维护显示 ()
.否则
    信息框 (“输入数字无效！请重试！”, 相加 (16, 0), )
    赋值 (.内容, 跳转框内容)
.如果结束


.窗口程序集 导入文本要求程序集名, , , 

.子程序 _导入文本要求_创建完毕, 空白型, , 
 ' 这个窗口的事件只有一个就可以了但是为丰富内容起见，可以给一个分组框，来让用户选择阅读哪种文本要求。
相加 (字符 (13), 字符 (10)).加入文本 (相加 (“　　这个题库系统是针对目前高中历史考试形式而设计的，一般情况下，导入的文本要进行一些加工，才能顺利导入题库中。具体来说：一、对于选择题的处理：”, 字符 (13), 字符 (10), “　　①只能以纯文本文件的形式提供导入文件；”, 字符 (13), 字符 (10), “    ②文件只能有选择题，不能有其它标题（无论大小）；”, 字符 (13), 字符 (10), “    ③文件中每个选择题的导入项目数必须一致，通常只能每题一个题干、四个题支，其中题干部分不能分成两行，题支部分可以并入一行，但必须在其间用Tab符分割；”, 字符 (13), 字符 (10), “    ④题目之间可以有空行，也可以有空格，系统都会自动将其删除，（所以本系统不适用于对空格有需求的场合下），也正因为如此，所以在提供答案时遵循与题支同样的规则，一般情况下，推荐答案紧跟在每题后并且单独占一行；”, 字符 (13), 字符 (10), “    材料解析和问答题的导入文本要求有所不同，因为材料往往不是一则，所以在技术上不可能用换行符或者回车符来进行分割，因此不得不专门定义一个比较复杂、一般情况下不会出现的符号来作为分割符，这里我们规定为”, #左引号, “[[cut]]”, #右引号, “(不包括左右引号，中括号和中间的英文字母都必须是半角英文字符。使用时，要手工将导入文本用分割符分成材料、问题、答案三个部分，（不是一定要三个部分，一次导入的题目必须保持一致，导入时在弹出的字段选择窗口中选择相对应的字段导入即可。)”))

.窗口程序集 试卷生成程序集1, , , 

.子程序 _试卷生成窗口1_创建完毕, 空白型, , 
 ' 根据分组框内对于设置分值和不设分值的不同选择，来使下一页按钮的标题发生改变，或者是“下一页”或者是“完成”，同时分别调用不同的子程序来进行处理。如果是“下一页”，则还须载入第二个窗口来进行材料解析题的分值设置。由于采用了全局数组存放材料解析题的题数，因此此时解决问题的难度要大大降低。而如果不设分值，则要直接输出试题了。此时要调用一系列子程序，来完成试卷的输出。具体来说：应当包括：①试卷头制作工具(只能是分散的)；②选择题初排工具；③材料题和问答题的导出。→形成试卷。
赋值 (是否设分值, 假)
赋值 (.背景颜色, 试卷生成窗口1.底色)
赋值 (.背景颜色, 试卷生成窗口1.底色)
赋值 (.背景颜色, 试卷生成窗口1.底色)
赋值 (.背景颜色, 试卷生成窗口1.底色)
赋值 (.背景颜色, 试卷生成窗口1.底色)
赋值 (是否默认导出, 真)
赋值 (.内容, 到文本 (取日期 (取现行时间 ())))
赋值 (.内容, 试卷标题)
赋值 (.内容, 考试开始时间)
赋值 (.内容, 考试结束时间)
赋值 (.内容, 考试时长)
赋值 (卷面总分, 150)
赋值 (.内容, 到文本 (卷面总分))
赋值 (选择题每题分值, 3)
赋值 (.内容, 出卷人)
赋值 (.内容, 到文本 (选择题每题分值))
赋值 (.内容, 出卷日期)
.如果 (等于 (是否在提取答案, 真))
    赋值 (.禁止, 真)
    赋值 (.禁止, 真)
    .如果 (等于 (是否提取格式试卷, 真))
        赋值 (试卷生成窗口1.标题, “提取WORD格式答案”)
    .否则
        赋值 (试卷生成窗口1.标题, “提取纯文本答案”)
    .如果结束
    
.否则
    .如果 (等于 (是否提取格式试卷, 真))
        赋值 (试卷生成窗口1.标题, “提取WORD格式试卷”)
    .否则
        赋值 (试卷生成窗口1.标题, “提取纯文本试卷”)
    .如果结束
    
.如果结束


.子程序 _下一页按钮_被单击, 空白型, , 
赋值 (试卷标题, .内容)
赋值 (考试开始时间, .内容)
赋值 (考试结束时间, .内容)
赋值 (考试时长, .内容)
赋值 (卷面总分, 到数值 (.内容))
赋值 (出卷人, .内容)
赋值 (选择题每题分值, 到数值 (.内容))
赋值 (出卷日期, .内容)
赋值 (剩余分值, 相减 (卷面总分, 相乘 (选择题每题分值, 取数组成员数 (选提))))
试卷生成窗口1.销毁 ()

.子程序 _考试结束时间框_内容被改变, 空白型, , 
赋值 (.内容, 到文本 (取时间间隔 (取时间 (到时间 (.内容)), 取时间 (到时间 (.内容)), 7)))

.子程序 _不设分值单选框_被单击, 空白型, , 
赋值 (.背景颜色, 试卷生成窗口1.底色)
赋值 (.背景颜色, 试卷生成窗口1.底色)
赋值 (.背景颜色, 试卷生成窗口1.底色)
赋值 (.背景颜色, 试卷生成窗口1.底色)
赋值 (.背景颜色, 试卷生成窗口1.底色)
赋值 (.禁止, 真)
赋值 (.禁止, 真)
赋值 (.禁止, 真)
赋值 (.禁止, 真)
赋值 (.禁止, 真)
赋值 (.标题, “完成(&F)”)
赋值 (是否设分值, 假)

.子程序 _设置分值单选框_被单击, 空白型, , 
赋值 (.禁止, 假)
赋值 (.背景颜色, #白色)
赋值 (.禁止, 假)
赋值 (.背景颜色, #白色)
赋值 (.禁止, 假)
赋值 (.背景颜色, #白色)
赋值 (.禁止, 假)
赋值 (.背景颜色, #白色)
赋值 (.禁止, 假)
赋值 (.背景颜色, #白色)
赋值 (.标题, “下一页(&N)”)
赋值 (是否设分值, 真)

.子程序 _默认单选框_被单击, 空白型, , 
赋值 (是否默认导出, 真)

.子程序 _自选项目单选框_被单击, 空白型, , 
赋值 (是否默认导出, 假)

.窗口程序集 试卷生成程序集2, , , 

.子程序 _试卷生成窗口2_创建完毕, 空白型, , 
.局部变量 i, 空白型, , , 
.局部变量 ix, 空白型, , , 
.局部变量 x, 空白型, , , 

 ' 本窗口创建时要根据三个全局数组变量来决定在“大题列表框”中加入多少个项目，同时实现下方编辑框内题内容的显示，以方便用户进行选择，然后根据用户选择的结果来决定“小问列表框中的项目，然后再由用户选择每小问的分值。此时要注意分值的上限值。
 ' 在本窗口中，还要给出两个新的数组，一个用来存放每个材料题的小问数量，另一个用来存放每小问的分值。
 ' 首先生成列表框的项目。
 ' 在这里先读注册项，注册项里已经包括了题目的数量，如果未找到注册项，则再从材料题选择题号的数组中去寻找。
赋值 (x, 1)
.判断循环首 (注册项是否存在 (3, 相加 (“software\高中历史题库系统\cl\c”, 到文本 (x))))
    赋值 (x, 相加 (x, 1))
.判断循环尾 ()
 ' 这个判断循环首，正是读出材料题的数量，这样做的目的是防止出现多重定义。
.如果 (等于 (注册项是否存在 (3, 相加 (“software\高中历史题库系统\cl\c”, 到文本 (x))), 真))
    .变量循环首 (1, x, 1, i)
        相加 (“材料题第”, 到文本 (i), “题，总第”, 到文本 (相加 (取数组成员数 (选提), i)), “题”).加入项目 (材提 [i])
         ' 加入了与项目相关的记录号。用以显示题目。
    .变量循环尾 ()
    赋值 (.内容, “”)
    .如果真 (大于或等于 (取项目数 (), 1))
        0.选择项目 (真)
        置当前库 (“材料题库”)
        跳到 (材提 [1])
        .变量循环首 (4, 6, 1, ix)
            到文本 (未知支持库函数_4 (读 (ix), “dybjppbb”, )).加入文本 (相加 (字符 (13), 字符 (10)))
        .变量循环尾 ()
        剩余分值刷新 ()
        赋值 (.内容, 到文本 (剩余分值))
    .如果真结束
    
.否则
     ' 如果注册项并不存在，也即是本窗口是第一次打开，则以选中材料题题号数组的成员数为依据。
    .变量循环首 (1, 取数组成员数 (材提), 1, i)
        相加 (“材料题第”, 到文本 (i), “题，总第”, 到文本 (相加 (取数组成员数 (选提), i)), “题”).加入项目 (材提 [i])
         ' 加入了与项目相关的记录号。用以显示题目。
    .变量循环尾 ()
    赋值 (.内容, “”)
    .如果真 (大于或等于 (取项目数 (), 1))
        0.选择项目 (真)
        置当前库 (“材料题库”)
        跳到 (材提 [1])
        .变量循环首 (4, 6, 1, ix)
            到文本 (未知支持库函数_4 (读 (ix), “dybjppbb”, )).加入文本 (相加 (字符 (13), 字符 (10)))
        .变量循环尾 ()
        剩余分值刷新 ()
        赋值 (.内容, 到文本 (剩余分值))
        
    .如果真结束
    
.如果结束


.子程序 _进入第三页按钮_被单击, 空白型, , 
试卷生成窗口2.销毁 ()

.子程序 _大题列表框_列表项被选择, 空白型, , 
.局部变量 ix, 空白型, , , 

置当前库 (“材料题库”)
赋值 (.内容, “”)
赋值 (.内容, 到文本 (取数值注册项 (3, 相加 (“software\高中历史题库系统\cl\c”, 到文本 (相加 (.现行选中项, 1))), 0)))
赋值 (.内容, 到文本 (0))
.如果真 (大于或等于 (取项目数 (), 1))
    跳到 (.取项目数值 (.现行选中项))
    .变量循环首 (4, 6, 1, ix)
        到文本 (未知支持库函数_4 (读 (ix), “dybjppbb”, )).加入文本 (相加 (字符 (13), 字符 (10)))
    .变量循环尾 ()
.如果真结束


.子程序 _小问数量框_内容被改变, 空白型, , 
.局部变量 i, 空白型, , , 

 ' 干脆把全部这类数值写入注册表去就可以了。
写注册项 (3, 相加 (“software\高中历史题库系统\cl\c”, 到文本 (相加 (.现行选中项, 1))), 到数值 (.内容))
清空 ()
.变量循环首 (1, 到数值 (.内容), 1, i)
    相加 (“材料解析第”, 到文本 (相加 (.现行选中项, 1)), “题，第”, 到文本 (i), “小问”).加入项目 ()
.变量循环尾 ()
剩余分值刷新 ()
赋值 (.内容, 到文本 (剩余分值))

.子程序 _小问分值框_内容被改变, 空白型, , 
.如果真 (不等于 (到数值 (.内容), 0))
    写注册项 (3, 相加 (“software\高中历史题库系统\cl\c”, 到文本 (相加 (.现行选中项, 1)), 到文本 (相加 (.现行选中项, 1))), 到数值 (.内容))
     ' 同时有必要计算出剩余的总分值。
    剩余分值刷新 ()
    赋值 (.内容, 到文本 (剩余分值))
.如果真结束


.子程序 _小问列表框_列表项被选择, 空白型, , 
 ' 将小问的分值从注册表中读取中来。同步显示在小问分值框中。
赋值 (.内容, 到文本 (取数值注册项 (3, 相加 (“software\高中历史题库系统\cl\c”, 到文本 (相加 (.现行选中项, 1)), 到文本 (相加 (.现行选中项, 1))), 0)))
赋值 (.调节器上限值, 剩余分值)

.窗口程序集 选择题维护程序集, , , 

.程序集变量 是否已保存, 逻辑型, , , 
.程序集变量 记录跳转控制, 整数型, , , 
.程序集变量 跳转框内容, 文本型, , , 
.子程序 _选择题库维护窗口_创建完毕, 空白型, , 
赋值 (是否已保存, 真)
检查记录号 ()
维护显示 ()
赋值 (.调节器上限值, 取数组成员数 (显示记录号数组))
未知支持库函数_0 (取窗口句柄 (), “Esc键或Alt+F4”, 假, 假)
未知支持库函数_0 (取窗口句柄 (), “F1→第一题”, 假, 假)
未知支持库函数_0 (取窗口句柄 (), “F2→后退一题”, 假, 假)
未知支持库函数_0 (取窗口句柄 (), “F3→前进一题”, 假, 假)
未知支持库函数_0 (取窗口句柄 (), “F4→最后一题”, 假, 假)
未知支持库函数_0 (取窗口句柄 (), “Ctrl+P→增加一题”, 假, 假)
未知支持库函数_0 (取窗口句柄 (), “Ctrl+D→删除一题”, 假, 假)
未知支持库函数_0 (取窗口句柄 (), “Ctrl+I→入库”, 假, 假)

.子程序 检查记录号, 空白型, , 
.局部变量 x, 整数型, , , 
.局部变量 i, 整数型, , , 

赋值 (x, 取记录号 ())
.变量循环首 (1, 取数组成员数 (显示记录号数组), 1, i)
    .如果真 (等于 (显示记录号数组 [i], x))
        赋值 (记录跳转控制, i)
         ' 取出当前记录号在显示记录号数组中的位置。其目的在于不显示全部记录号时，也可实现跳转。
    .如果真结束
    
.变量循环尾 ()
赋值 (.内容, 到文本 (记录跳转控制))

.子程序 维护显示, 空白型, , 
.如果 (等于 (读 (1), 真))
    “真”.选择 ()
.否则
    “假”.选择 ()
.如果结束
赋值 (.内容, 到文本 (未知支持库函数_4 (读 (2), “dybjppbb”, )))
赋值 (.内容, 到文本 (未知支持库函数_4 (读 (3), “dybjppbb”, )))
赋值 (.内容, 到文本 (未知支持库函数_4 (读 (4), “dybjppbb”, )))
赋值 (.内容, 到文本 (未知支持库函数_4 (读 (5), “dybjppbb”, )))
赋值 (.内容, 到文本 (未知支持库函数_4 (读 (6), “dybjppbb”, )))
赋值 (.内容, 到文本 (未知支持库函数_4 (读 (7), “dybjppbb”, )))
赋值 (.内容, 到文本 (未知支持库函数_4 (读 (8), “dybjppbb”, )))
赋值 (.内容, 到文本 (未知支持库函数_4 (读 (9), “dybjppbb”, )))
赋值 (.内容, 到文本 (未知支持库函数_4 (读 (10), “dybjppbb”, )))
赋值 (.内容, 到文本 (未知支持库函数_4 (读 (11), “dybjppbb”, )))
赋值 (.内容, 到文本 (未知支持库函数_4 (读 (12), “dybjppbb”, )))
赋值 (.内容, 到文本 (取记录号 ()))
赋值 (.内容, 到文本 (取记录数 ()))
获取焦点 ()

.子程序 检查保存状态, 空白型, , 
.如果真 (等于 (是否已保存, 假))
    .如果真 (等于 (信息框 (“当前信息尚未保存，要保存吗？”, 相加 (32, 4), ), 5))
        _入库_被单击 ()
    .如果真结束
    
.如果真结束


.子程序 _前一记录_被单击, 空白型, , 
检查保存状态 ()
检查记录号 ()
.如果 (大于或等于 (记录跳转控制, 2))
    跳到 (显示记录号数组 [相减 (记录跳转控制, 1)])
    赋值 (记录跳转控制, 相减 (记录跳转控制, 1))
    赋值 (.内容, 到文本 (记录跳转控制))
    维护显示 ()
.否则
    信息框 (“已经退到第一题！”, 相加 (64, 0), )
.如果结束


.子程序 _后一记录_被单击, 空白型, , 
检查保存状态 ()
检查记录号 ()
.如果 (小于或等于 (记录跳转控制, 相减 (取数组成员数 (显示记录号数组), 1)))
    赋值 (记录跳转控制, 相加 (记录跳转控制, 1))
    跳到 (显示记录号数组 [记录跳转控制])
    赋值 (.内容, 到文本 (记录跳转控制))
    维护显示 ()
.否则
    信息框 (“已到最后一题！”, 相加 (64, 0), )
.如果结束


.子程序 _首记录_被单击, 空白型, , 
检查保存状态 ()
赋值 (记录跳转控制, 1)
赋值 (.内容, 到文本 (记录跳转控制))
跳到 (显示记录号数组 [1])
维护显示 ()

.子程序 _尾记录_被单击, 空白型, , 
检查保存状态 ()
赋值 (记录跳转控制, 取数组成员数 (显示记录号数组))
赋值 (.内容, 到文本 (记录跳转控制))
跳到 (显示记录号数组 [取数组成员数 (显示记录号数组)])

.子程序 _添加记录_被单击, 空白型, , 
检查保存状态 ()
.如果 (等于 (加空记录 (), 真))
    信息框 (“已添加一条空记录！”, 0, )
    加入成员 (显示记录号数组, 取记录号 ())
    赋值 (记录跳转控制, 相加 (记录跳转控制, 1))
    维护显示 ()
    获取焦点 ()
.否则
    信息框 (“添加记录失败！”, 相加 (64, 0), )
.如果结束


.子程序 _删除记录_被单击, 空白型, , 
删除 ()
信息框 (相加 (“已经为第”, 到文本 (取记录号 ()), “题加上删除标志。要彻底删除，请单击”, #左引号, “删除管理”, #右引号, “按钮！”), 相加 (64, 0), )
赋值 (.禁止, 假)

.子程序 _入库_被单击, 空白型, , 
写 (1, .取项目文本 (.现行选中项))
写 (2, 未知支持库函数_3 (到字节集 (.内容), “dybjppbb”, ))
写 (3, 未知支持库函数_3 (到字节集 (.内容), “dybjppbb”, ))
写 (4, 未知支持库函数_3 (到字节集 (.内容), “dybjppbb”, ))
写 (5, 未知支持库函数_3 (到字节集 (.内容), “dybjppbb”, ))
写 (6, 未知支持库函数_3 (到字节集 (.内容), “dybjppbb”, ))
写 (7, 未知支持库函数_3 (到字节集 (.内容), “dybjppbb”, ))
写 (8, 未知支持库函数_3 (到字节集 (.内容), “dybjppbb”, ))
写 (9, 未知支持库函数_3 (到字节集 (.内容), “dybjppbb”, ))
写 (10, 未知支持库函数_3 (到字节集 (.内容), “dybjppbb”, ))
写 (11, 未知支持库函数_3 (到字节集 (.内容), “dybjppbb”, ))
写 (12, 未知支持库函数_3 (到字节集 (.内容), “dybjppbb”, ))
赋值 (是否已保存, 真)

.子程序 _彻底删除_被单击, 空白型, , 
载入 (删除管理窗口, , 真)
如果 (信息框 (“    彻底删除要重新整理整个数据库，因而速度较慢，请耐心等待。强行结束任务会丢失数据，要继续吗？” ＋ 字符 (13) ＋ 字符 (10) ＋ “    彻底删除之后，会关闭管理界面，要继续工作，请重新打开管理界面！”, 32 ＋ 4, ) ＝ 5)
彻底删除 ()
信息框 (“已删除所有加删除标记的记录，管理窗口将关闭！”, 0, )
_选择题库_被选择 ()
选择题库维护窗口.销毁 ()
返回 ()


.子程序 _返回按钮_被单击, 空白型, , 
选择题库维护窗口.销毁 ()

.子程序 _跳转框_内容被改变, 空白型, , 
.如果 (并且 (小于或等于 (到数值 (.内容), 取数组成员数 (显示记录号数组)), 大于 (到数值 (.内容), 0)))
    赋值 (跳转框内容, .内容)
    跳到 (显示记录号数组 [到数值 (.内容)])
    维护显示 ()
.否则
    信息框 (“输入数字无效！请重试！”, 相加 (16, 0), )
    赋值 (.内容, 跳转框内容)
.如果结束


.子程序 _关键词显示输入框_内容被改变, 空白型, , 
赋值 (是否已保存, 假)

.子程序 _显示输入框1_内容被改变, 空白型, , 
赋值 (是否已保存, 假)


.子程序 _显示输入框2_内容被改变, 空白型, , 
赋值 (是否已保存, 假)


.子程序 _显示输入框3_内容被改变, 空白型, , 
赋值 (是否已保存, 假)


.子程序 _显示输入框4_内容被改变, 空白型, , 
赋值 (是否已保存, 假)


.子程序 _显示输入框5_内容被改变, 空白型, , 
赋值 (是否已保存, 假)


.子程序 _答案框_内容被改变, 空白型, , 
赋值 (是否已保存, 假)


.子程序 _难度框_内容被改变, 空白型, , 
赋值 (是否已保存, 假)


.子程序 _能力要求框_内容被改变, 空白型, , 
赋值 (是否已保存, 假)


.子程序 _类别框_内容被改变, 空白型, , 
赋值 (是否已保存, 假)


.子程序 _评析框_内容被改变, 空白型, , 
赋值 (是否已保存, 假)


.子程序 _选择题库维护窗口_可否被关闭, 逻辑型, , 
.局部变量 x, 整数型, , , 
.局部变量 y, 整数型, , , 

.如果 (等于 (是否已保存, 假))
    赋值 (x, 信息框 (“文件尚未保存，要存盘吗？”, 相加 (#询问图标, 3), “是否要存盘？”))
    .如果真 (等于 (x, 5))
        _入库_被单击 ()
        选择题库维护窗口.销毁 ()
    .如果真结束
    .如果真 (等于 (x, 6))
        选择题库维护窗口.销毁 ()
    .如果真结束
    .如果真 (等于 (x, 1))
        返回 (假)
    .如果真结束
    
.否则
    选择题库维护窗口.销毁 ()
.如果结束


.子程序 _最后一题13_被选择, 空白型, , 
_尾记录_被单击 ()

.子程序 _选态组合框_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (等于 (键代码, #空格键))
    _选态组合框_列表项被选择 ()
.如果真结束


.子程序 _前进0_被选择, 空白型, , 
_后一记录_被单击 ()

.子程序 _后退1_被选择, 空白型, , 
_前一记录_被单击 ()

.子程序 _第一题2_被选择, 空白型, , 
_首记录_被单击 ()

.子程序 _加记录04_被选择, 空白型, , 
_添加记录_被单击 ()

.子程序 _删除记录菜单_被选择, 空白型, , 
_删除记录_被单击 ()

.子程序 _入库菜单_被选择, 空白型, , 
_入库_被单击 ()

.子程序 _彻底删除菜单_被选择, 空白型, , 
_彻底删除_被单击 ()


.子程序 _字体27_被选择, 空白型, , 
.如果真 (等于 (打开 (), 真))
    连续赋值 (.字体名称, .字体.字体名称, .字体.字体名称, .字体.字体名称, .字体.字体名称, .字体.字体名称, .字体.字体名称, .字体.字体名称, .字体.字体名称, .字体.字体名称, .字体.字体名称, .字体.字体名称)
    连续赋值 (.字体大小, .字体.字体大小, .字体.字体大小, .字体.字体大小, .字体.字体大小, .字体.字体大小, .字体.字体大小, .字体.字体大小, .字体.字体大小, .字体.字体大小, .字体.字体大小, .字体.字体大小)
    连续赋值 (.加粗, .字体.加粗, .字体.加粗, .字体.加粗, .字体.加粗, .字体.加粗, .字体.加粗, .字体.加粗, .字体.加粗, .字体.加粗, .字体.加粗, .字体.加粗)
    连续赋值 (.倾斜, .字体.倾斜, .字体.倾斜, .字体.倾斜, .字体.倾斜, .字体.倾斜, .字体.倾斜, .字体.倾斜, .字体.倾斜, .字体.倾斜, .字体.倾斜, .字体.倾斜, .字体.倾斜)
    连续赋值 (.删除线, .字体.删除线, .字体.删除线, .字体.删除线, .字体.删除线, .字体.删除线, .字体.删除线, .字体.删除线, .字体.删除线, .字体.删除线, .字体.删除线, .字体.删除线)
    连续赋值 (.下划线, .字体.下划线, .字体.下划线, .字体.下划线, .字体.下划线, .字体.下划线, .字体.下划线, .字体.下划线, .字体.下划线, .字体.下划线, .字体.下划线, .字体.下划线)
    连续赋值 (.字体颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色)
.如果真结束


.子程序 _字体大小循环_被选择, 空白型, , 
.如果 (大于或等于 (取整 (相乘 (.字体.字体大小, 0.9)), 10))
    连续赋值 (取整 (相乘 (.字体.字体大小, 0.9)), .字体.字体大小, .字体.字体大小, .字体.字体大小, .字体.字体大小, .字体.字体大小, .字体.字体大小, .字体.字体大小, .字体.字体大小, .字体.字体大小, .字体.字体大小, .字体.字体大小)
.否则
    连续赋值 (72, .字体.字体大小, .字体.字体大小, .字体.字体大小, .字体.字体大小, .字体.字体大小, .字体.字体大小, .字体.字体大小, .字体.字体大小, .字体.字体大小, .字体.字体大小, .字体.字体大小)
.如果结束


.子程序 _字体小大循环_被选择, 空白型, , 
.如果 (小于或等于 (取整 (相乘 (.字体.字体大小, 1.1)), 72))
    连续赋值 (取整 (相乘 (.字体.字体大小, 1.1)), .字体.字体大小, .字体.字体大小, .字体.字体大小, .字体.字体大小, .字体.字体大小, .字体.字体大小, .字体.字体大小, .字体.字体大小, .字体.字体大小, .字体.字体大小, .字体.字体大小)
.否则
    连续赋值 (10, .字体.字体大小, .字体.字体大小, .字体.字体大小, .字体.字体大小, .字体.字体大小, .字体.字体大小, .字体.字体大小, .字体.字体大小, .字体.字体大小, .字体.字体大小, .字体.字体大小)
.如果结束


.子程序 _选态组合框_列表项被选择, 空白型, , 
.如果 (等于 (读 (1), 真))
    写 (1, 假)
    “假”.选择 ()
    _选择题库9_被选择 ()
.否则
    写 (1, 真)
    “真”.选择 ()
    _选择题库9_被选择 ()
.如果结束


.子程序 _选择题库维护窗口_将被销毁, 空白型, , 
_选择题库9_被选择 ()

.子程序 _关键词显示输入框_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (并且 (等于 (键代码, #A键), 等于 (功能键状态, #Ctrl键状态)))
    赋值 (.起始选择位置, 0)
    赋值 (.被选择字符数, 取文本长度 (.内容))
.如果真结束


.子程序 _显示输入框2_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (并且 (等于 (#A键), 等于 (#Ctrl键状态)))
    赋值 (.起始选择位置, 0)
    赋值 (.被选择字符数, 取文本长度 (.内容))
.如果真结束



.子程序 _显示输入框3_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (并且 (等于 (#A键), 等于 (#Ctrl键状态)))
    赋值 (.起始选择位置, 0)
    赋值 (.被选择字符数, 取文本长度 (.内容))
.如果真结束



.子程序 _显示输入框4_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (并且 (等于 (#A键), 等于 (#Ctrl键状态)))
    赋值 (.起始选择位置, 0)
    赋值 (.被选择字符数, 取文本长度 (.内容))
.如果真结束



.子程序 _显示输入框5_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (并且 (等于 (#A键), 等于 (#Ctrl键状态)))
    赋值 (.起始选择位置, 0)
    赋值 (.被选择字符数, 取文本长度 (.内容))
.如果真结束



.子程序 _答案框_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (并且 (等于 (#A键), 等于 (#Ctrl键状态)))
    赋值 (.起始选择位置, 0)
    赋值 (.被选择字符数, 取文本长度 (.内容))
.如果真结束



.子程序 _难度框_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (并且 (等于 (#A键), 等于 (#Ctrl键状态)))
    赋值 (.起始选择位置, 0)
    赋值 (.被选择字符数, 取文本长度 (.内容))
.如果真结束



.子程序 _能力要求框_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (并且 (等于 (#A键), 等于 (#Ctrl键状态)))
    赋值 (.起始选择位置, 0)
    赋值 (.被选择字符数, 取文本长度 (.内容))
.如果真结束



.子程序 _类别框_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (并且 (等于 (#A键), 等于 (#Ctrl键状态)))
    赋值 (.起始选择位置, 0)
    赋值 (.被选择字符数, 取文本长度 (.内容))
.如果真结束



.子程序 _评析框_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (并且 (等于 (#A键), 等于 (#Ctrl键状态)))
    赋值 (.起始选择位置, 0)
    赋值 (.被选择字符数, 取文本长度 (.内容))
.如果真结束



.子程序 _显示输入框1_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (并且 (等于 (#A键), 等于 (#Ctrl键状态)))
    赋值 (.起始选择位置, 0)
    赋值 (.被选择字符数, 取文本长度 (.内容))
.如果真结束


.窗口程序集 字段选择程序集, , , 

.子程序 _字段选择窗口_创建完毕, 空白型, , 
.局部变量 i, 整数型, , , 

 ' 这里的主要代码就是用来加入项目，根据当前库的不同，自动读入每个字段的名称，实际上在导出试卷的时候不太适用，可以考虑在导出试卷时给出一个选择框来让用户决定是否导出每个试题的全部内容(比如评析)。
.如果 (等于 (取当前库 (), “选择题库”))
    .变量循环首 (2, 取字段数 (), 1, i)
        取字段名 (i).加入项目 (i)
    .变量循环尾 ()
    .变量循环首 (3, 7, 1, i)
        相减 (i, 1).选中项目 (真)
    .变量循环尾 ()
.否则
    .如果真 (或者 (等于 (取当前库 (), “材料题库”), 等于 (取当前库 (), “问答题库”)))
        .变量循环首 (2, 取字段数 (), 1, i)
            取字段名 (i).加入项目 (i)
        .变量循环尾 ()
        .变量循环首 (3, 5, 1, i)
            相减 (i, 1).选中项目 (真)
        .变量循环尾 ()
    .如果真结束
    
.如果结束


.子程序 _全选按钮_被单击, 空白型, , 
.局部变量 i, 整数型, , , 

.变量循环首 (1, 取项目数 (), 1, i)
    相减 (i, 1).选中项目 (真)
.变量循环尾 ()

.子程序 _确定按钮_被单击, 空白型, , 
.局部变量 i, 整数型, , , 

清除数组 (显示字段号数组)
.变量循环首 (0, 相减 (取项目数 (), 1), 1, i)
    .如果真 (等于 (i.是否被选中 (), 真))
        加入成员 (显示字段号数组, 相加 (i, 2))
    .如果真结束
    
.变量循环尾 ()
字段选择窗口.销毁 ()

.窗口程序集 试卷生成程序集3, , , 

.子程序 _试卷生成窗口3_创建完毕, 空白型, , 
.局部变量 i, 空白型, , , 
.局部变量 ix, 空白型, , , 
.局部变量 x, 空白型, , , 

 ' 本窗口创建时要根据三个全局数组变量来决定在“大题列表框”中加入多少个项目，同时实现下方编辑框内题内容的显示，以方便用户进行选择，然后根据用户选择的结果来决定“小问列表框中的项目，然后再由用户选择每小问的分值。此时要注意分值的上限值。
 ' 在本窗口中，还要给出两个新的数组，一个用来存放每个材料题的小问数量，另一个用来存放每小问的分值。
 ' 首先生成列表框的项目。
 ' 在这里先读注册项，注册项里已经包括了题目的数量，如果未找到注册项，则再从材料题选择题号的数组中去寻找。
赋值 (x, 1)
.判断循环首 (注册项是否存在 (3, 相加 (“software\高中历史题库系统\wl\w”, 到文本 (x))))
    赋值 (x, 相加 (x, 1))
.判断循环尾 ()
 ' 这个判断循环首，正是读出材料题的数量，这样做的目的是防止出现多重定义。
.如果 (等于 (注册项是否存在 (3, 相加 (“software\高中历史题库系统\wl\w”, 到文本 (x))), 真))
    .变量循环首 (1, x, 1, i)
        相加 (“问答题第”, 到文本 (i), “题，总”, 到文本 (相加 (取数组成员数 (选提), 取数组成员数 (材提), i)), “题”).加入项目 (问提 [i])
         ' 加入了与项目相关的记录号。用以显示题目。
    .变量循环尾 ()
    赋值 (.内容, “”)
    .如果真 (大于或等于 (取项目数 (), 1))
        0.选择项目 (真)
        置当前库 (“问答题库”)
        跳到 (问提 [1])
        .变量循环首 (4, 6, 1, ix)
            到文本 (未知支持库函数_4 (读 (ix), “dybjppbb”, )).加入文本 (相加 (字符 (13), 字符 (10)))
        .变量循环尾 ()
        剩余分值刷新 ()
        赋值 (.内容, 到文本 (剩余分值))
    .如果真结束
    
.否则
     ' 如果注册项并不存在，也即是本窗口是第一次打开，则以选中材料题题号数组的成员数为依据。
    .变量循环首 (1, 取数组成员数 (问提), 1, i)
        相加 (“问答题第”, 到文本 (i), “题，总第”, 到文本 (相加 (取数组成员数 (选提), 取数组成员数 (材提), i)), “题”).加入项目 (问提 [i])
         ' 加入了与项目相关的记录号。用以显示题目。
    .变量循环尾 ()
    赋值 (.内容, “”)
    .如果真 (大于或等于 (取项目数 (), 1))
        0.选择项目 (真)
        置当前库 (“问答题库”)
        跳到 (问提 [1])
        .变量循环首 (4, 6, 1, ix)
            到文本 (未知支持库函数_4 (读 (ix), “dybjppbb”, )).加入文本 (相加 (字符 (13), 字符 (10)))
        .变量循环尾 ()
        剩余分值刷新 ()
        赋值 (.内容, 到文本 (剩余分值))
    .如果真结束
    
.如果结束


.子程序 _完成_被单击, 空白型, , 
试卷生成窗口3.销毁 ()

.子程序 _大题列表框_列表项被选择, 空白型, , 
.局部变量 ix, 空白型, , , 

置当前库 (“问答题库”)
赋值 (.内容, “”)
赋值 (.内容, 到文本 (取数值注册项 (3, 相加 (“software\高中历史题库系统\wl\w”, 到文本 (相加 (.现行选中项, 1))), 0)))
赋值 (.内容, 到文本 (0))
.如果真 (大于或等于 (取项目数 (), 1))
    跳到 (.取项目数值 (.现行选中项))
    .变量循环首 (4, 6, 1, ix)
        到文本 (未知支持库函数_4 (读 (ix), “dybjppbb”, )).加入文本 (相加 (字符 (13), 字符 (10)))
    .变量循环尾 ()
.如果真结束


.子程序 _小问数量框_内容被改变, 空白型, , 
.局部变量 i, 空白型, , , 

 ' 干脆把全部这类数值写入注册表去就可以了。
写注册项 (3, 相加 (“software\高中历史题库系统\wl\w”, 到文本 (相加 (.现行选中项, 1))), 到数值 (.内容))
清空 ()
.变量循环首 (1, 到数值 (.内容), 1, i)
    相加 (“问答题第”, 到文本 (相加 (.现行选中项, 1)), “题，第”, 到文本 (i), “小问”).加入项目 ()
.变量循环尾 ()
剩余分值刷新 ()
赋值 (.内容, 到文本 (剩余分值))

.子程序 _小问分值框_内容被改变, 空白型, , 
.如果真 (不等于 (到数值 (.内容), 0))
    写注册项 (3, 相加 (“software\高中历史题库系统\wl\w”, 到文本 (相加 (.现行选中项, 1)), 到文本 (相加 (.现行选中项, 1))), 到数值 (.内容))
     ' 同时有必要计算出剩余的总分值。
    剩余分值刷新 ()
    赋值 (.内容, 到文本 (剩余分值))
.如果真结束


.子程序 _小问列表框_列表项被选择, 空白型, , 
 ' 将小问的分值写入注册表中去。
赋值 (.内容, 到文本 (取数值注册项 (3, 相加 (“software\高中历史题库系统\wl\w”, 到文本 (相加 (.现行选中项, 1)), 到文本 (相加 (.现行选中项, 1))), 0)))
赋值 (.调节器上限值, 剩余分值)

.窗口程序集 删除试题程序集, , , 

.程序集变量 将删除记录号数组, 整数型, , "0", 
.子程序 _删除管理窗口_创建完毕, 空白型, , 
删除记录号刷新 ()
删除列表初始化 ()

.子程序 删除记录号刷新, 空白型, , 
.局部变量 i, 空白型, , , 

清除数组 (将删除记录号数组)
.变量循环首 (1, 取记录数 (), 1, i)
    跳到 (i)
    .如果真 (等于 (是否已删除 (), 真))
        加入成员 (将删除记录号数组, i)
    .如果真结束
    
.变量循环尾 ()


.子程序 删除列表初始化, 空白型, , 
.局部变量 i, 整数型, , , 

清空 ()
.变量循环首 (1, 取数组成员数 (将删除记录号数组), 1, i)
    到文本 (将删除记录号数组 [i]).加入项目 ()
.变量循环尾 ()
 ' 初始化时必须考虑跳转框的上限值问题。
 ' 还须考虑一些其它问题。
.如果 (大于或等于 (取数组成员数 (将删除记录号数组), 1))
    赋值 (.调节器底限值, 1)
    赋值 (.调节器上限值, 取数组成员数 (将删除记录号数组))
    .如果真 (等于 (到文本 (取记录号 ()).选择 (), -1))
        0.选择项目 (真)
    .如果真结束
    _删除列表框_列表项被选择 ()
.否则
    清空 ()
    赋值 (.内容, “”)
.如果结束


.子程序 _确定删除按钮_被单击, 空白型, , 
.局部变量 i, 空白型, , , 

.变量循环首 (1, 取数组成员数 (将删除记录号数组), 1, i)
    跳到 (将删除记录号数组 [i])
    彻底删除 ()
.变量循环尾 ()
.如果 (等于 (取当前库 (), “选择题库”))
    _选择题库9_被选择 ()
.否则
    .如果 (等于 (取当前库 (), “材料题库”))
        _材料题库10_被选择 ()
    .否则
        _问答题库11_被选择 ()
    .如果结束
    
.如果结束

删除管理窗口.销毁 ()

.子程序 _撤销删除标记_被单击, 空白型, , 
 ' 仍然要加入数组，并且再加以恢复，参见删除按钮。另外，要将维护界面的删除按钮去除或改成“删除管理”对应的子程序也应改变。
跳到 (到数值 (.取项目文本 (.现行选中项)))
恢复删除 ()
删除记录号刷新 ()
删除列表初始化 ()

.子程序 _确定全删_被单击, 空白型, , 
.局部变量 x, 整数型, , , 
.局部变量 i, 整数型, , , 

赋值 (x, 相减 (到数值 (.内容), 到数值 (.内容)))
.如果 (大于或等于 (x, 0))
    .变量循环首 (到数值 (.内容), 到数值 (.内容), 1, i)
        跳到 (i)
        删除 ()
    .变量循环尾 ()
    .如果 (等于 (信息框 (“批量删除后将不可恢复，删除过程中要重新整理整个数据库，因而速度会较慢，强行结束任务会丢失数据，要继续吗？（删除后将自动关闭本窗口）”, 相加 (32, 4), ), 5))
        彻底删除 ()
        .如果 (等于 (取当前库 (), “选择题库”))
            删除管理窗口.销毁 ()
        .否则
            删除管理窗口.销毁 ()
        .如果结束
        
    .否则
        赋值 (.可视, 假)
        赋值 (.可视, 真)
    .如果结束
    
.否则
    信息框 (“删除试题题号顺序必须由小到大！”, 0, )
    获取焦点 ()
.如果结束


.子程序 _批量删除按钮_被单击, 空白型, , 
赋值 (.可视, 真)
赋值 (.可视, 假)
赋值 (.调节器上限值, 取记录数 ())
赋值 (.调节器上限值, 取记录数 ())

.子程序 _取消全删_被单击, 空白型, , 
赋值 (.可视, 假)
赋值 (.可视, 真)

.子程序 _删除列表框_列表项被选择, 空白型, , 
.局部变量 i, 空白型, , , 

赋值 (.内容, “”)
赋值 (.内容, 到文本 (相加 (.现行选中项, 1)))
赋值 (.内容, “”)
跳到 (到数值 (.取项目文本 (.现行选中项)))
.如果 (等于 (取当前库 (), “选择题库”))
    .变量循环首 (4, 8, 1, i)
        到文本 (未知支持库函数_4 (读 (i), “dybjppbb”, )).加入文本 (相加 (字符 (13), 字符 (10)))
    .变量循环尾 ()
.否则
    .变量循环首 (4, 5, 1, i)
        到文本 (未知支持库函数_4 (读 (i), “dybjppbb”, )).加入文本 (相加 (字符 (13), 字符 (10)))
    .变量循环尾 ()
.如果结束


.子程序 _删除管理窗口_将被销毁, 空白型, , 
.如果 (等于 (取当前库 (), “选择题库”))
    _选择题库9_被选择 ()
    _选择题库维护窗口_创建完毕 ()
    信息框 (“批量删除完成”, 0, )
.否则
    .如果 (等于 (取当前库 (), “材料题库”))
        _材料题库10_被选择 ()
        _材料问答维护窗口_创建完毕 ()
        信息框 (“批量删除完成”, 0, )
    .否则
        .如果真 (等于 (取当前库 (), “问答题库”))
            _问答题库11_被选择 ()
            _材料问答维护窗口_创建完毕 ()
            信息框 (“批量删除完成”, 0, )
        .如果真结束
        
    .如果结束
    
.如果结束


.窗口程序集 窗口程序集1, , , 

.子程序 _演示窗口_创建完毕, 空白型, , 
赋值 (演示窗口.左边, 0)
赋值 (演示窗口.顶边, 0)
赋值 (演示窗口.高度, 取屏幕高度 ())
赋值 (演示窗口.宽度, 取屏幕宽度 ())
赋值 (., 取屏幕宽度 ())
赋值 (., 相乘 (取屏幕宽度 (), 0.16))


 ' 不属于任何一个程序集、类模块的函数：
