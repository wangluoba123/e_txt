 ' 文件类型：Windows模块源码

 ' 程序名称：录音
 ' 程序描述：录音
@备注:
录音
 ' 程序作者：本源码来自易语言资源网(www.wodesoft.com)
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：             易语言资源网注意事项
--============   www.wodesoft.com  =============--
* 易语言资源网为易语言官方站、易语言官方论坛提供辅助资源站；本易语言资源网( www.wodesoft.com)所有软件和资料均为软件作者提供和网友推荐发布而来，其版权归该软件和程序源码的合法拥有者所有，本站易语言资源网整理收集仅供易语言用户学习和易语言技术研究探讨使用，不得用于任何商业用途。如果由于以上原因造成的版权纠纷本站概不负责！
* 本站资源未经许可,任何网站不得非法盗链及抄袭本站资源；如引用，请注明来自易语言资源网，谢谢合作！
--============   www.wodesoft.com  =============--
 ' 版本号：1.0
 ' 创建号：0.0



.常量 CALLBACK_FUNCTION, "196608", , 
.常量 CALLBACK_TYPEMASK, "458752", , 
.常量 CALLBACK_NULL, "1", , 
.常量 CALLBACK_WINDOW, "65536", , 
.常量 CALLBACK_TASK, "131072", , 
.常量 WAVE_MAPPER, "-1", , 
.常量 MMSYSERR_NOERROR, "0", , 
.常量 INP_BUFFER_SIZE, "16384", , 
.常量 WAVE_FORMAT_PCM, "1", , 
.常量 MM_WIM_OPEN, "958", , 
.常量 MM_WIM_DATA, "960", , 
.常量 MM_WIM_CLOSE, "959", , 
.常量 WHDR_BEGINLOOP, "4", , 
.常量 WHDR_ENDLOOP, "8", , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 5 0 系统核心支持库




数据类型 WAVEFORMAT, , 
    .成员 wFormatTag, 短整数型, , , 
    .成员 nChannels, 短整数型, , , 
    .成员 nSamplesPerSec, 整数型, , , 
    .成员 nAvgBytesPerSec, 整数型, , , 
    .成员 nBlockAlign, 短整数型, , , 
    .成员 wBitsPerSample, 短整数型, , , 
    .成员 cbSize, 短整数型, , , 

数据类型 WAVEHDR, , 
    .成员 lpData, 整数型, , , 
    .成员 dwBufferLength, 整数型, , , 
    .成员 dwBytesRecorded, 整数型, , , 
    .成员 dwUser, 整数型, , , 
    .成员 dwFlags, 整数型, , , 
    .成员 dwLoops, 整数型, , , 
    .成员 lpNext, 整数型, , , 
    .成员 reserved, 整数型, , , 

.全局变量 录音, 逻辑型, , , 
.全局变量 录音数据, 字节集, , , 
.全局变量 缓冲区, 字节集, , , 
.全局变量 hWaveIn, 整数型, , , 
.全局变量 WAVEFORMAT, WAVEFORMAT, , , 
.全局变量 WAVEHDR, WAVEHDR, , , 
.全局变量 录音长度, 整数型, , , 

.DLL命令 waveInOpen, 整数型, "winmm.dll", "", , 
    .参数 lphWaveIn, 整数型, 传址, 
    .参数 uDeviceID, 整数型, , 
    .参数 lpFormat, WAVEFORMAT, , 
    .参数 dwCallback, 子程序指针, , 
    .参数 dwInstance, 整数型, , 
    .参数 dwFlags, 整数型, , 

.DLL命令 waveInPrepareHeader, 整数型, "winmm.dll", "", , 
    .参数 hWaveIn, 整数型, , 
    .参数 lpWaveInHdr, WAVEHDR, , 
    .参数 uSize, 整数型, , 

.DLL命令 waveInUnprepareHeader, 整数型, "winmm.dll", "", , 
    .参数 hWaveIn, 整数型, , 
    .参数 lpWaveInHdr, WAVEHDR, , 
    .参数 uSize, 整数型, , 

.DLL命令 waveInAddBuffer, 整数型, "winmm.dll", "", , 
    .参数 hWaveIn, 整数型, , 
    .参数 lpWaveInHdr, WAVEHDR, , 
    .参数 uSize, 整数型, , 

.DLL命令 waveInStart, 整数型, "winmm.dll", "", , 
    .参数 hWaveIn, 整数型, , 

.DLL命令 waveInReset, 整数型, "winmm.dll", "", , 
    .参数 hWaveIn, 整数型, , 

.DLL命令 waveInClose, 整数型, "winmm.dll", "", , 
    .参数 hWaveIn, 整数型, , 

.DLL命令 waveInGetErrorText, 整数型, "winmm.dll", "waveInGetErrorTextA", , 
    .参数 err, 整数型, , 
    .参数 lpText, 文本型, , 
    .参数 uSize, 整数型, , 

.DLL命令 lstrcpyn, 整数型, "", "lstrcpynA", , 
    .参数 lpString1, 字节集, 传址, 
    .参数 lpString2, 字节集, 传址, 
    .参数 iMaxLength, 整数型, , 

.DLL命令 waveOutOpen, 整数型, "winmm.dll", "", , 
    .参数 lphWaveOut, 整数型, 传址, 
    .参数 uDeviceID, 整数型, , 
    .参数 lpFormat, WAVEFORMAT, , 
    .参数 dwCallback, 整数型, , 
    .参数 dwInstance, 整数型, , 
    .参数 dwFlags, 整数型, , 

.DLL命令 waveOutPrepareHeader, 整数型, "winmm.dll", "", , 
    .参数 hWaveOut, 整数型, , 
    .参数 lpWaveOutHdr, WAVEHDR, , 
    .参数 uSize, 整数型, , 

.DLL命令 waveOutWrite, 整数型, "winmm.dll", "", , 
    .参数 hWaveOut, 整数型, , 
    .参数 lpWaveOutHdr, WAVEHDR, , 
    .参数 uSize, 整数型, , 

.DLL命令 waveOutUnprepareHeader, 整数型, "winmm.dll", "", , 
    .参数 hWaveOut, 整数型, , 
    .参数 lpWaveOutHdr, WAVEHDR, , 
    .参数 uSize, 整数型, , 

.DLL命令 waveOutClose, 整数型, "winmm.dll", "", , 
    .参数 hWaveOut, 整数型, , 

.DLL命令 waveOutRestart, 整数型, "winmm.dll", "", , 
    .参数 hWaveOut, 整数型, , 

.DLL命令 waveOutGetErrorText, 空白型, "winmm.dll", "waveOutGetErrorTextA", , 
    .参数 err, 整数型, , 
    .参数 lpText, 文本型, , 
    .参数 uSize, 整数型, , 

.DLL命令 waveOutPause, 整数型, "winmm.dll", "", , 
    .参数 hWaveOut, 整数型, , 

.DLL命令 waveOutReset, 整数型, "winmm.dll", "", , 
    .参数 hWaveOut, 整数型, , 

.程序集 程序集1, , , 

.子程序 _启动子程序, 整数型, , 请在本子程序中放置易模块初始化代码

_临时子程序 () ' 在初始化代码执行完毕后调用测试代码
返回 (0) ' 可以根据您的需要返回任意数值

.子程序 _临时子程序, 空白型, , 
 ' 本名称子程序用作测试程序用，仅在开发及调试环境中有效，编译发布程序前将被系统自动清空，请将所有用作测试的临时代码放在本子程序中。 ***注意不要修改本子程序的名称、参数及返回值类型。


.子程序 录音_消息处理, 空白型, , 
.参数 hwi, 整数型, , 
.参数 uMsg, 整数型, , 
.参数 dwInstance, 整数型, , 
.参数 dwParam1, 整数型, , 
.参数 dwParam2, 整数型, , 

.如果真 (等于 (uMsg, #MM_WIM_DATA))
    .如果真 (大于或等于 (录音长度, 512000))
        保存 (相加 (取运行目录 (), “\”, 到文本 (取现行时间 ()), “.wav”), 录音数据, 录音长度)
        赋值 (录音数据, {  })
        赋值 (录音长度, 0)
    .如果真结束
    赋值 (录音数据, 相加 (录音数据, 缓冲区))
    赋值 (录音长度, 相加 (录音长度, #INP_BUFFER_SIZE))
    .如果真 (录音)
        waveInAddBuffer (hWaveIn, WAVEHDR, 32)
    .如果真结束
    
.如果真结束


.子程序 保存, 逻辑型, , 
.参数 保存路径, 文本型, , 
.参数 数据, 字节集, , 
.参数 数据长度, 整数型, , 

.局部变量 tmp, 字节集, , , 

赋值 (tmp, 到字节集 (“RIFF”))
赋值 (tmp, 相加 (tmp, 到字节集 (到整数 (相加 (数据长度, 38)))))
赋值 (tmp, 相加 (tmp, 到字节集 (“WAVE”)))
赋值 (tmp, 相加 (tmp, 到字节集 (“fmt ”)))
赋值 (tmp, 相加 (tmp, 到字节集 (到整数 (18))))
赋值 (tmp, 相加 (tmp, 到字节集 (WAVEFORMAT.wFormatTag)))
赋值 (tmp, 相加 (tmp, 到字节集 (WAVEFORMAT.nChannels)))
赋值 (tmp, 相加 (tmp, 到字节集 (WAVEFORMAT.nSamplesPerSec)))
赋值 (tmp, 相加 (tmp, 到字节集 (WAVEFORMAT.nAvgBytesPerSec)))
赋值 (tmp, 相加 (tmp, 到字节集 (WAVEFORMAT.nBlockAlign)))
赋值 (tmp, 相加 (tmp, 到字节集 (WAVEFORMAT.wBitsPerSample)))
赋值 (tmp, 相加 (tmp, 到字节集 (WAVEFORMAT.cbSize)))
赋值 (tmp, 相加 (tmp, 到字节集 (“data”)))
赋值 (tmp, 相加 (tmp, 到字节集 (数据长度)))
赋值 (tmp, 相加 (tmp, 到字节集 (数据)))
返回 (写到文件 (保存路径, tmp))

.类模块 录音, , , 

.程序集变量 err, 整数型, , , 
.程序集变量 hWaveOut, 整数型, , , 
.程序集变量 播放, 逻辑型, , , 
.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用
 ' --========  易语言资源网  (www.wodesoft.com)  ======--
 ' 努力创建完善、持续更新的易语言学习例程源码资源站
 ' --================   www.wodesoft.com  ===========--
 ' --==================   易语言资源网注意事项  ================--
 ' * 易语言资源网为易语言官方站、易语言官方论坛提供辅助资源站；
 ' 本易语言资源网( www.wodesoft.com)所有软件和资料均为软件作者提
 ' 供和网友推荐发布而来，其版权归该软件和程序源码的合法拥有者所
 ' 有，本站易语言资源网整理收集仅供易语言用户学习和易语言技术研
 ' 究探讨使用，不得用于任何商业用途。如果由于以上原因造成的版权
 ' 纠纷本站概不负责！
 ' * 本站资源未经许可，任何网站不得非法盗链及抄袭本站资源；如引用
 ' 页面，请注明来自易语言资源网，谢谢合作！
 ' --=====================   www.wodesoft.com  ================--


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用
.如果真 (录音)
    停止录音 ()
.如果真结束
.如果真 (播放)
    停止回放 ()
.如果真结束


.子程序 取错误文本_录音, 文本型, 公开, 返回最后发生的错误
.局部变量 错误, 文本型, , , 

赋值 (错误, 取空白文本 (255))
waveInGetErrorText (err, 错误, 取文本长度 (错误))
返回 (错误)

.子程序 取错误文本_回放, 文本型, 公开, 返回最后发生的错误
.局部变量 错误, 文本型, , , 

赋值 (错误, 取空白文本 (255))
waveOutGetErrorText (err, 错误, 取文本长度 (错误))
返回 (错误)

.子程序 开始录音, 逻辑型, 公开, 
.如果真 (或者 (录音, 播放))
    返回 (假)
.如果真结束
 ' 本源码来自易语言资源网(www.wodesoft.com)
赋值 (录音数据, {  })
赋值 (录音长度, 0)
赋值 (WAVEFORMAT.wFormatTag, #WAVE_FORMAT_PCM)
赋值 (WAVEFORMAT.nChannels, 1)
赋值 (WAVEFORMAT.nSamplesPerSec, 11025)
赋值 (WAVEFORMAT.nAvgBytesPerSec, 11025)
赋值 (WAVEFORMAT.nBlockAlign, 1)
赋值 (WAVEFORMAT.wBitsPerSample, 8)
赋值 (WAVEFORMAT.cbSize, 0)

赋值 (err, waveInOpen (hWaveIn, #WAVE_MAPPER, WAVEFORMAT, &录音_消息处理, 0, #CALLBACK_FUNCTION))
.如果真 (不等于 (err, #MMSYSERR_NOERROR))
    返回 (假)
.如果真结束


赋值 (缓冲区, 取空白字节集 (#INP_BUFFER_SIZE))
赋值 (WAVEHDR.lpData, lstrcpyn (缓冲区, 缓冲区, 0))
赋值 (WAVEHDR.dwBufferLength, #INP_BUFFER_SIZE)
赋值 (WAVEHDR.dwBytesRecorded, 0)
赋值 (WAVEHDR.dwUser, 0)
赋值 (WAVEHDR.dwFlags, 0)
赋值 (WAVEHDR.dwLoops, 1)
赋值 (WAVEHDR.lpNext, 0)
赋值 (WAVEHDR.reserved, 0)

赋值 (err, waveInPrepareHeader (hWaveIn, WAVEHDR, 32))
.如果真 (不等于 (err, #MMSYSERR_NOERROR))
    waveInClose (hWaveIn)
    返回 (假)
.如果真结束

赋值 (err, waveInAddBuffer (hWaveIn, WAVEHDR, 32))
.如果真 (不等于 (err, #MMSYSERR_NOERROR))
    waveInUnprepareHeader (hWaveIn, WAVEHDR, 32)
    waveInClose (hWaveIn)
    返回 (假)
.如果真结束


赋值 (err, waveInStart (hWaveIn))
.如果真 (不等于 (err, #MMSYSERR_NOERROR))
    waveInUnprepareHeader (hWaveIn, WAVEHDR, 32)
    waveInClose (hWaveIn)
    返回 (假)
.如果真结束
赋值 (录音, 真)
返回 (录音)

.子程序 停止录音, 逻辑型, 公开, 
.如果真 (录音)
    赋值 (录音, 假)
    延时 (1000)
.如果真结束
赋值 (err, waveInReset (hWaveIn))
.如果真 (不等于 (err, #MMSYSERR_NOERROR))
    返回 (假)
.如果真结束
赋值 (err, waveInUnprepareHeader (hWaveIn, WAVEHDR, 32))
.如果真 (不等于 (err, #MMSYSERR_NOERROR))
    返回 (假)
.如果真结束
赋值 (err, waveInClose (hWaveIn))
返回 (等于 (err, 0))

.子程序 开始回放, 逻辑型, 公开, 
.如果真 (或者 (录音, 播放, 等于 (录音长度, 0)))
    返回 (假)
.如果真结束

赋值 (WAVEFORMAT.wFormatTag, 1)
赋值 (WAVEFORMAT.nChannels, 1)
赋值 (WAVEFORMAT.nSamplesPerSec, 11025)
赋值 (WAVEFORMAT.nAvgBytesPerSec, 11025)
赋值 (WAVEFORMAT.nBlockAlign, 1)
赋值 (WAVEFORMAT.wBitsPerSample, 8)
赋值 (WAVEFORMAT.cbSize, 0)
 ' 本源码来自易语言资源网(www.wodesoft.com)
赋值 (err, waveOutOpen (hWaveOut, #WAVE_MAPPER, WAVEFORMAT, 0, 0, 0))
.如果真 (不等于 (err, #MMSYSERR_NOERROR))
    返回 (假)
.如果真结束

赋值 (WAVEHDR.lpData, lstrcpyn (录音数据, 录音数据, 0))
赋值 (WAVEHDR.dwBufferLength, 取字节集长度 (录音数据))
赋值 (WAVEHDR.dwBytesRecorded, 0)
赋值 (WAVEHDR.dwUser, 0)
赋值 (WAVEHDR.dwFlags, 位或 (#WHDR_BEGINLOOP, #WHDR_ENDLOOP))
赋值 (WAVEHDR.dwLoops, 1)
赋值 (WAVEHDR.lpNext, 0)
赋值 (WAVEHDR.reserved, 0)

赋值 (err, waveOutPrepareHeader (hWaveOut, WAVEHDR, 32))
.如果真 (不等于 (err, #MMSYSERR_NOERROR))
    waveOutClose (hWaveOut)
    返回 (假)
.如果真结束

赋值 (err, waveOutWrite (hWaveOut, WAVEHDR, 32))
.如果真 (不等于 (err, #MMSYSERR_NOERROR))
    waveOutUnprepareHeader (hWaveOut, WAVEHDR, 32)
    waveOutClose (hWaveOut)
    返回 (假)
.如果真结束
赋值 (播放, 真)
返回 (真)

.子程序 暂停回放, 逻辑型, 公开, 
赋值 (err, waveOutPause (hWaveOut))
返回 (等于 (err, 0))

.子程序 继续回放, 逻辑型, 公开, 
赋值 (err, waveOutRestart (hWaveOut))
返回 (等于 (err, 0))

.子程序 停止回放, 逻辑型, 公开, 
.如果真 (取反 (播放))
    返回 (假)
.如果真结束
赋值 (err, waveOutReset (hWaveOut))
.如果真 (不等于 (err, #MMSYSERR_NOERROR))
    返回 (假)
.如果真结束
赋值 (播放, 假)
赋值 (err, waveOutUnprepareHeader (hWaveOut, WAVEHDR, 32))
.如果真 (不等于 (err, #MMSYSERR_NOERROR))
    返回 (假)
.如果真结束
赋值 (err, waveOutClose (hWaveOut))
返回 (等于 (err, 0))

.子程序 保存声音文件, 逻辑型, 公开, 
.参数 保存路径, 文本型, , 

.局部变量 tmp, 字节集, , , 

.如果真 (或者 (录音, 播放, 等于 (录音长度, 0)))
    返回 (假)
.如果真结束
返回 (保存 (保存路径, 录音数据, 录音长度))
' 本源码来自易语言资源网(www.wodesoft.com)


 ' 不属于任何一个程序集、类模块的函数：
