 ' 文件类型：Windows模块源码

 ' 程序名称：易容大师_参赛版
 ' 程序描述：易容大师附加模块，用来给指定窗口更换皮肤，该皮肤由软件　易容大师　生成。

 ' 程序作者：古木软件工作组
 ' 邮政编码：116001
 ' 联系地址：辽宁省大连市中山区人民路55号亚太国际金融中心
 ' 联系电话：0411-88995831
 ' 传真号码：0411-88995834
 ' 电子信箱：service@dywt.com.cn
 ' 主页地址：http://www.dywt.com.cn
 ' 版权声明：
 ' 版本号：1.11
 ' 创建号：0.0



.常量 程序标题, "“易容大师-易语言皮肤生成器”", , 
.常量 程序版本, "“1.1”", , 
.常量 皮肤文件标识, "“ESKIN”", , 
.常量 主版本号, "1", , 为整数型
.常量 次版本号, "0", , 
.常量 控件类型_窗口, "0", , 
.常量 控件类型_图形按钮, "1", , 
.常量 控件类型_画板, "2", , 
.常量 控件类型_标签, "3", , 
.常量 控件类型_水平滑块, "4", , 
.常量 控件类型_垂直滑块, "5", , 
.常量 控件类型_进度条, "6", , 
.常量 控件类型_其他, "7", , 非需要贴图的控件类型，需要通过UserData找到其句柄
.常量 主分割符, "“!(&^”", , 1976
.常量 次分割符, "“)(@#”", , 0923
.常量 图片_正常, "1", , 
.常量 图片_鼠标经过, "2", , 
.常量 图片_鼠标按下, "3", , 
.常量 图片_灰化, "4", , 
.常量 , , , 
.常量 超级菜单_底色, "0", , 
.常量 超级菜单_文本颜色, "1", , 
.常量 超级菜单_禁止文本颜色, "2", , 
.常量 超级菜单_点燃颜色, "3", , 
.常量 超级菜单_渐变颜色1, "4", , 
.常量 超级菜单_渐变颜色2, "5", , 
.常量 超级菜单_菜单条点燃颜色1, "6", , 
.常量 超级菜单_菜单条点燃颜色2, "7", , 
.常量 超级菜单_点燃区边框颜色, "8", , 
.常量 超级菜单_分割条颜色, "9", , 
.常量 , , , 
.常量 GWL_WNDPROC, "-4", , 
.常量 WM_SIZE, "5", , 
.常量 WM_NCLBUTTONDOWN, "161", , 
.常量 HTBOTTOMRIGHT, "17", , 
.常量 WM_LBUTTONDOWN, "513", , 
.常量 SW_MAXIMIZE, "3", , 
.常量 SW_MINIMIZE, "6", , 
.常量 SW_RESTORE, "9", , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 4 系统核心支持库
 ' ExtMenu 9909FBB013704cfa8FE7E739DB7172DE 1 6 超级菜单支持库




数据类型 滑块条, , 
    .成员 滑块句柄, 空白型, , , 
    .成员 滑条句柄, 空白型, , , 
    .成员 显示句柄, 空白型, , , 
    .成员 最小值, 空白型, , , 
    .成员 最大值, 空白型, , , 
    .成员 当前值, 空白型, , , 
    .成员 对齐方式, 空白型, , , 
    .成员 滑块条类型, 空白型, , , -1 水平　1 垂直

数据类型 句柄和旧过程, , 
    .成员 句柄, 整数型, , , 
    .成员 旧窗口过程, 整数型, , , 

数据类型 RECT, , 矩形;
    .成员 左边, 整数型, , , 
    .成员 顶边, 整数型, , , 
    .成员 右边, 整数型, , , 
    .成员 底边, 整数型, , , 

.全局变量 全滑块条数组, 滑块条, , "0", 
.全局变量 全其他控件句柄数组, 整数型, , "0", 保存需要按窗口数值取其句柄的控件句柄
.全局变量 全句柄和旧过程数组, 句柄和旧过程, , "0", 可能有多个窗口需要调整

.DLL命令 SetWindowLongAP, 整数型, "", "SetWindowLongA", , 
    .参数 hWnd, 整数型, , 
    .参数 nIndex, 整数型, , 
    .参数 dwNewLong, 子程序指针, , 

.DLL命令 SetWindowLongA, 整数型, "", "", , 
    .参数 hWnd, 整数型, , 
    .参数 nIndex, 整数型, , 
    .参数 dwNewLong, 整数型, , 

.DLL命令 GetWindowLongA, 整数型, "", "", , 
    .参数 hWnd, 整数型, , 
    .参数 nIndex, 整数型, , 

.DLL命令 DestroyWindow, 逻辑型, "", "", , 
    .参数 hWnd, 整数型, , 

.DLL命令 EnumChildWindows, 逻辑型, "", "", , 
    .参数 hWndParent, 整数型, , 
    .参数 lpEnumFunc, 子程序指针, , 可能为一个 WNDENUMPROC 子程序指针。
    .参数 lParam, 整数型, , 

.DLL命令 GetParent, 整数型, "", "", , 
    .参数 hWnd, 整数型, , 

.DLL命令 MoveWindow, 逻辑型, "", "", , 
    .参数 hWnd, 整数型, , 
    .参数 X, 整数型, , 
    .参数 Y, 整数型, , 
    .参数 nWidth, 整数型, , 
    .参数 nHeight, 整数型, , 
    .参数 bRepaint, 逻辑型, , 

.DLL命令 CallWindowProcA, 整数型, "", "", , 
    .参数 lpPrevWndFunc, 整数型, , 可能为一个 WNDPROC 子程序指针。
    .参数 hWnd, 整数型, , 
    .参数 Msg, 整数型, , 
    .参数 wParam, 整数型, , 
    .参数 lParam, 整数型, , 

.DLL命令 SendMessageA, 整数型, "", "", , 
    .参数 hWnd, 整数型, , 
    .参数 Msg, 整数型, , 
    .参数 wParam, 整数型, , 
    .参数 lParam, 整数型, , 

.DLL命令 API_创建圆角矩形区域, 整数型, "gdi32", "CreateRoundRectRgn", , 创建一个圆角矩形，该矩形由X1，Y1-X2，Y2确定，并由X3，Y3确定的椭圆描述圆角弧度  执行成功则为区域句柄，失败则为0
    .参数 左上横坐标, 整数型, , 矩形左上角的X，Y坐标
    .参数 左上纵坐标, 整数型, , 同上
    .参数 右下横坐标, 整数型, , 矩形右下角的X，Y坐标
    .参数 右下纵坐标, 整数型, , 同上
    .参数 圆角椭圆的宽, 整数型, , 圆角椭圆的宽。其范围从0（没有圆角）到矩形宽（全圆）
    .参数 圆角椭圆的高, 整数型, , 圆角椭圆的高。其范围从0（没有圆角）到矩形高（全圆）;

.DLL命令 API_设置窗口区域, 整数型, "user32", "SetWindowRgn", , 这是那些很难有人注意到的对编程者来说是个巨大的宝藏的隐含的API函数中的一个。本函数允许您改变窗口的区域。<br>;    通常所有窗口都是矩形的――窗口一旦存在就含有一个矩形区域。本函数允许您放弃该区域。这意味着您可以创建圆的、星形的窗口，也可以将它分为两个或许多部分――实际上可以是任何形状  执行成功为非零值，失败为0
    .参数 窗口句柄, 整数型, , 
    .参数 区域, 整数型, , 
    .参数 自动刷新, 逻辑型, , 

.DLL命令 API_取窗口矩形, 整数型, "user32", "GetWindowRect", , 获得整个窗口的范围矩形，窗口的边框、标题栏、滚动条及菜单等都在这个矩形内  非零表示成功，零表示失败。会设置GetLastError
    .参数 窗口句柄, 整数型, , 想获得范围矩形的那个窗口的句柄
    .参数 矩形区域, RECT, , RECT，屏幕坐标中随同窗口装载的矩形;

.DLL命令 API_创建椭圆区域, 整数型, "gdi32", "CreateEllipticRgn", , 创建一个椭圆，该椭圆与X1，Y1和X2，Y2坐标点确定的矩形内切  执行成功则为区域句柄，失败则为零
    .参数 左上角横坐标, 整数型, , 矩形左上角X，Y坐标
    .参数 左上角纵坐标, 整数型, , 同上
    .参数 右下角横坐标, 整数型, , 矩形右下角X，Y坐标;
    .参数 右下角纵坐标, 整数型, , 同上;

.DLL命令 API_创建矩形区域, 整数型, "gdi32", "CreateRectRgn", , 创建一个由点X1，Y1和X2，Y2描述的矩形区域  执行成功为区域句柄，失败则为零
    .参数 左上横坐标, 整数型, , 矩形左上角X，Y坐标
    .参数 左上纵坐标, 整数型, , 同上
    .参数 右下横坐标, 整数型, , 矩形右下角X，Y坐标;
    .参数 右下纵坐标, 整数型, , 同上;

.DLL命令 API_合并区域, 整数型, "gdi32", "CombineRgn", , 将两个区域组合为一个新区域  下列常数之一：;    COMPLEXREGION：区域有互相交叠的边界;    SIMPLEREGION：区域边界没有互相交叠;    NULLREGION：区域为空;    ERRORAPI：不能创建组合区域
    .参数 新区域句柄, 整数型, , 包含组合结果的区域句柄
    .参数 源区域1, 整数型, , 源区域1
    .参数 源区域2, 整数型, , 源区域2
    .参数 组合方式, 整数型, , 组合两区域的方法。可设为下述常数RGN_ANDhDestRgn被设置为两个源区域的交集RGN_COPYhDestRgn被设置为hSrcRgn1的拷贝RGN_DIFFhDestRgn被设置为hSrcRgn1中与hSrcRgn2不相交的部分RGN_ORhDestRgn被设置为两个区域的并集RGN_XORhDestRgn被设置为除两个源区域OR之外的部分;

.DLL命令 LoadCursorFromFileA, 整数型, "", "", , 
    .参数 lpFileName, 文本型, 传址, 

.DLL命令 SetClassLongA, 整数型, "", "", , 
    .参数 hWnd, 整数型, , 
    .参数 nIndex, 整数型, , 
    .参数 dwNewLong, 整数型, , 

.DLL命令 API_判断窗口句柄, 逻辑型, "user32", "IsWindow", , 判断一个窗口句柄是否有效  非零表示成功，零表示失败
    .参数 窗口句柄, 整数型, , 待检查窗口的句柄;

.DLL命令 API_ShowWindow, 逻辑型, "user32", "ShowWindow", , 控制窗口的可见性（在vb里使用：针对vb窗体及控件，请使用对应的vb属性）  如窗口之前是可见的，则返回TRUE（非零），否则返回FALSE（零）
    .参数 hwnd, 整数型, , 窗口句柄，要向这个窗口应用由nCmdShow指定的命令
    .参数 nCmdShow, 整数型, , 为窗口指定可视性方面的一个命令。请用下述任何一个常数;SW_HIDE：隐藏窗口，活动状态给令一个窗口;SW_MINIMIZE：最小化窗口，活动状态给令一个窗口;SW_RESTORE：用原来的大小和位置显示一个窗口，同时令其进入活动状态;SW_SHOW：用当前的大小和位置显示一个窗口，同时令其进入活动状态;SW_SHOWMAXIMIZED：最大化窗口，并将其激活;SW_SHOWMINIMIZED：最小化窗口，并将其激活;SW_SHOWMINNOACTIVE：最小化一个窗口，同时不改变活动窗口;SW_SHOWNA：用当前的大小和位置显示一个窗口，不改变活动窗口;SW_SHOWNOACTIVATE：用最近的大小和位置显示一个窗口，同时不改变活动窗口;SW_SHOWNORMAL：与SW_RESTORE相同;

.程序集 启动程序集, , , 

.子程序 _启动子程序, 整数型, , 请在本子程序中放置易模块初始化代码

_临时子程序 () ' 在初始化代码执行完毕后调用测试代码
返回 (0) ' 可以根据您的需要返回任意数值

.子程序 _临时子程序, 空白型, , 
 ' 本名称子程序用作测试程序用，仅在开发及调试环境中有效，编译发布程序前将被系统自动清空，请将所有用作测试的临时代码放在本子程序中。 ***注意不要修改本子程序的名称、参数及返回值类型。
 ' 载入 (窗口金山词霸, , 真)


.程序集 公开程序集, , , 

.子程序 易容, 逻辑型, 公开, 
.参数 参皮肤文件名, 文本型, , 由《易容大师》皮肤生成器生成的皮肤名，扩展名为esk。
.参数 参主窗口, 窗口, , 要换肤的窗口，比如　_启动窗口。

.局部变量 文件数据, 字节集, , , 


.如果真 (等于 (文件是否存在 (参皮肤文件名), 假))
    输出调试文本 (相加 (“皮肤文件不存在:”, 参皮肤文件名))
    返回 (假)
.如果真结束
赋值 (文件数据, 读入文件 (参皮肤文件名))
返回 (易容_从字节集 (文件数据, 参主窗口))


.子程序 易容_从字节集, 逻辑型, 公开, 
.参数 参皮肤字节集, 字节集, , 
.参数 参主窗口, 窗口, , 

.局部变量 文件号, 整数型, , , 
.局部变量 r, 空白型, , , 
.局部变量 标识符, 文本型, , , 文件标识符　
.局部变量 主版本号, 空白型, , , 
.局部变量 次版本号, 空白型, , , 
.局部变量 文件描述, 文本型, , , 
.局部变量 皮肤名, 文本型, , , 
.局部变量 透明色, 空白型, , , 
.局部变量 窗口标记, 空白型, , , 
.局部变量 窗口宽度, 空白型, , , 
.局部变量 窗口高度, 空白型, , , 
.局部变量 可否调整大小, 逻辑型, , , 
.局部变量 拖动窗口大小的控件标记, 空白型, , , 
.局部变量 某超级菜单, 未知类型0x20001, , , 
.局部变量 是否已注册, 逻辑型, , , 
.局部变量 匿名局部变量_888, 空白型, , , 
.局部变量 临时文件名, 文本型, , , 
.局部变量 数据, 字节集, , , 
.局部变量 某图形按钮, 图形按钮, , , 
.局部变量 某画板, 画板, , , 
.局部变量 某标签, 标签, , , 
.局部变量 某滑块图形按钮, 图形按钮, , , 
.局部变量 某滑条图形按钮, 图形按钮, , , 
.局部变量 某滑块值编辑框, 编辑框, , , 
.局部变量 控件类型, 整数型, , , 
.局部变量 文件数据, 字节集, , , 
.局部变量 文件数据数组, 字节集, , "0", 
.局部变量 i, 空白型, , , 
.局部变量 j, 空白型, , , 
.局部变量 k, 空白型, , , 
.局部变量 t, 空白型, , , 
.局部变量 图片类型, 整数型, , , 
.局部变量 子控件句柄数组, 整数型, , "0", 
.局部变量 控件句柄, 整数型, , , 
.局部变量 某句柄和旧窗口过程, 句柄和旧过程, , , 
.局部变量 匿名局部变量_680, 空白型, , , 
.局部变量 私标记, 空白型, , , 
.局部变量 私备注, 文本型, , , 
.局部变量 私控件类型, 空白型, , , 查看 “控件类型_” 常量
.局部变量 私横坐标, 空白型, , , 
.局部变量 私纵坐标, 空白型, , , 
.局部变量 私宽度, 空白型, , , 
.局部变量 私高度, 空白型, , , 
.局部变量 私锚住左边, 逻辑型, , , 
.局部变量 私锚住上边, 逻辑型, , , 
.局部变量 私锚住右边, 逻辑型, , , 
.局部变量 私锚住下边, 逻辑型, , , 
.局部变量 私滑条控件标记, 空白型, , , 
.局部变量 私显示控件标记, 空白型, , , 
.局部变量 私最小值, 空白型, , , 
.局部变量 私最大值, 空白型, , , 
.局部变量 私当前值, 空白型, , , 
.局部变量 私对齐方式, 空白型, , , 滑块与滑条的对齐方式
.局部变量 某滑块条, 滑块条, , , 
.局部变量 是否使用超级菜单, 逻辑型, , , 
.局部变量 匿名局部变量_1274, 空白型, , , 

.如果真 (等于 (取字节集长度 (参皮肤字节集), 0))
    输出调试文本 (“错误：字节集无数据。”)
    返回 (假)
.如果真结束

 ' 取第一层子控件，便于根据窗口数据找控件句柄
取窗口第一层子控件 (参主窗口.取窗口句柄 (), 子控件句柄数组) ' 枚举子控件

重定义数组 (全滑块条数组, 假, 0)

赋值 (文件数据数组, 分割字节集 (参皮肤字节集, 到字节集 (#主分割符), ))
置随机数种子 ()

.计次循环首 (取数组成员数 (文件数据数组), i)
    赋值 (文件号, 打开内存文件 ())
    写出字节集 (文件号, 文件数据数组 [i])
    移动读写位置 (文件号, #文件首, 0)
    .如果 (等于 (i, 1)) ' 第一部分包含皮肤文件的相关信息
         ' 窗口数据
        读入数据 (文件号, 标识符)
        .如果真 (不等于 (标识符, 相加 (#皮肤文件标识, #程序版本)))
            输出调试文本 (“错误：字节集格式不对。”)
            关闭文件 (文件号)
            返回 (假)
        .如果真结束
        
        读入数据 (文件号, 主版本号, 次版本号, 文件描述, 皮肤名, 透明色, 窗口标记, 窗口宽度, 窗口高度, 可否调整大小, 拖动窗口大小的控件标记, 是否使用超级菜单)
        
         ' {{{{{{{{{{ 1.1 版新增内容
        .如果 (是否使用超级菜单)
            赋值 (某超级菜单, 参主窗口.取标记组件 (10000)) ' 超级菜单的标记固定为10000
            .计次循环首 (10, k) ' 一共有十个颜色设置选项
                读入数据 (文件号, t)
                赋值 (j, 相减 (k, 1))
                .判断开始 (等于 (j, #超级菜单_底色))
                    赋值 (某超级菜单., t)
                .判断 (等于 (j, #超级菜单_文本颜色))
                    赋值 (某超级菜单., t)
                .判断 (等于 (j, #超级菜单_点燃颜色))
                    赋值 (某超级菜单., t)
                .判断 (等于 (j, #超级菜单_渐变颜色1))
                    赋值 (某超级菜单., t)
                .判断 (等于 (j, #超级菜单_渐变颜色2))
                    赋值 (某超级菜单., t)
                .判断 (等于 (j, #超级菜单_分割条颜色))
                    赋值 (某超级菜单., t)
                .判断 (等于 (j, #超级菜单_禁止文本颜色))
                    赋值 (某超级菜单., t)
                .判断 (等于 (j, #超级菜单_点燃区边框颜色))
                    赋值 (某超级菜单., t)
                .判断 (等于 (j, #超级菜单_菜单条点燃颜色1))
                    赋值 (某超级菜单., t)
                .判断 (等于 (j, #超级菜单_菜单条点燃颜色2))
                    赋值 (某超级菜单., t)
                .默认
                    
                .判断结束
                
            .计次循环尾 ()
            
        .否则
             ' 否则删除超级菜单，但删除菜单后，切换到其他有使用超级菜单的程序时会出错。
        .如果结束
         ' }}}}}}}}}]
        
        读入数据 (文件号, 是否已注册)
        赋值 (是否已注册, 真) ' 不再进行是否已注册的判断，为参赛改
         ' 参主窗口.边框 ＝ 0'留待用户设置
        赋值 (参主窗口.宽度, 窗口宽度)
        赋值 (参主窗口.高度, 窗口高度)
        .如果 (可否调整大小)
             ' ''''''  子类化主窗口 /////////////////////。--- 不能采用子类化主窗口的方法，因为
             ' 上面还需铺上很多图片，不能响应 wm_mousemove 事件。
             ' 可调整大小则无底图
            赋值 (某画板, 参主窗口.取标记组件 (拖动窗口大小的控件标记))
             ' 子类化该控件，该控件必须是一个画板，图形按钮则无效。
            .如果真 (等于 (取句柄旧窗口过程 (某画板.取窗口句柄 ()), -1))
                 ' 未被子类化
                输出调试文本 (“开始子类化拖地窗口大小的控件。”)
                赋值 (某句柄和旧窗口过程.句柄, 某画板.取窗口句柄 ())
                赋值 (某句柄和旧窗口过程.旧窗口过程, GetWindowLongA (某画板.取窗口句柄 (), #GWL_WNDPROC))
                加入成员 (全句柄和旧过程数组, 某句柄和旧窗口过程)
                SetWindowLongAP (某画板.取窗口句柄 (), #GWL_WNDPROC, &拖动窗口大小控件新窗口过程)
            .如果真结束
            
        .否则
            读入数据 (文件号, 数据) ' 读入图片
            赋值 (参主窗口.底图, 数据)
            参主窗口.置外形图片 (数据, 透明色)
        .如果结束
        
    .否则
         ' 从第二个数据块起，就是控件数据
        读入数据 (文件号, t) ' 读入一个整数，跳过字节集长度
         ' 读入控件首
        读入数据 (文件号, 私标记, 私备注, 私控件类型, 私横坐标, 私纵坐标, 私宽度, 私高度, 私锚住左边, 私锚住上边, 私锚住右边, 私锚住下边, 私滑条控件标记, 私显示控件标记, 私最小值, 私最大值, 私当前值, 私对齐方式)
        
        .判断开始 (或者 (等于 (私控件类型, #控件类型_图形按钮), 等于 (私控件类型, #控件类型_水平滑块), 等于 (私控件类型, #控件类型_垂直滑块)))
             ' 图形按钮、水平滑块、垂直滑块都是图形按钮
            赋值 (某图形按钮, 参主窗口.取标记组件 (私标记))
            赋值 (某图形按钮.透明颜色, 透明色)
            某图形按钮.移动 (私横坐标, 私纵坐标, 私宽度, 私高度)
            .如果 (并且 (等于 (私锚住左边, 真), 等于 (私锚住上边, 真), 等于 (私锚住右边, 假), 等于 (私锚住下边, 假)))
                
            .否则
                设置控件锚点 (某图形按钮.取窗口句柄 (), 私锚住左边, 私锚住上边, 私锚住右边, 私锚住下边)
            .如果结束
            
             ' 把图片铺上去
            .循环判断首 ()
                读入数据 (文件号, 图片类型)
                读入数据 (文件号, 数据)
                .判断开始 (等于 (图片类型, #图片_正常))
                    赋值 (某图形按钮.正常图片, 数据)
                    
                .判断 (等于 (图片类型, #图片_鼠标经过))
                    赋值 (某图形按钮.点燃图片, 数据)
                .判断 (等于 (图片类型, #图片_鼠标按下))
                    赋值 (某图形按钮.按下图片, 数据)
                .判断 (等于 (图片类型, #图片_灰化))
                    赋值 (某图形按钮.禁止图片, 数据)
                .默认
                    
                .判断结束
                
            .循环判断尾 (等于 (是否在文件尾 (文件号, ), 假))
            
             ' 继续针对水平滑块和垂直滑块分别对待
            .判断开始 (等于 (私控件类型, #控件类型_水平滑块))
                赋值 (某滑条图形按钮, 参主窗口.取标记组件 (私滑条控件标记))
                赋值 (某滑块条.滑块句柄, 某图形按钮.取窗口句柄 ())
                赋值 (某滑块条.滑条句柄, 某滑条图形按钮.取窗口句柄 ())
                .如果 (大于 (私显示控件标记, 0))
                    赋值 (某滑块值编辑框, 参主窗口.取标记组件 (私显示控件标记))
                    赋值 (某滑块条.显示句柄, 某滑块值编辑框.取窗口句柄 ())
                .否则
                    赋值 (某滑块条.显示句柄, -1)
                .如果结束
                
                 ' 先要判断滑块条是否已构建并有了正确的值。
                .如果 (并且 (等于 (取滑块最小值 (某滑块条.滑块句柄), -1), 等于 (取滑块最大值 (某滑块条.滑块句柄), -1), 等于 (取滑块当前值 (某滑块条.滑块句柄), -1)))
                     ' 滑块尚未构建
                .否则
                     ' 如果已创建，则读取其值
                    赋值 (私最小值, 取滑块最小值 (某滑块条.滑块句柄))
                    赋值 (私最大值, 取滑块最大值 (某滑块条.滑块句柄))
                    赋值 (私当前值, 取滑块当前值 (某滑块条.滑块句柄))
                .如果结束
                
                赋值 (某滑块条.最小值, 私最小值)
                赋值 (某滑块条.最大值, 私最大值)
                赋值 (某滑块条.当前值, 私当前值)
                赋值 (某滑块条.对齐方式, 私对齐方式)
                赋值 (某滑块条.滑块条类型, -1) ' 水平
                加入成员 (全滑块条数组, 某滑块条)
                
            .判断 (等于 (私控件类型, #控件类型_垂直滑块))
                
            .默认
                
            .判断结束
            
        .判断 (等于 (私控件类型, #控件类型_画板))
            赋值 (某画板, 参主窗口.取标记组件 (私标记))
            某画板.移动 (私横坐标, 私纵坐标, 私宽度, 私高度)
            .如果 (并且 (等于 (私锚住左边, 真), 等于 (私锚住上边, 真), 等于 (私锚住右边, 假), 等于 (私锚住下边, 假)))
                
            .否则
                设置控件锚点 (某画板.取窗口句柄 (), 私锚住左边, 私锚住上边, 私锚住右边, 私锚住下边)
            .如果结束
            
             ' 读入数据 (文件号, 图片类型)
            读入数据 (文件号, 数据)
            赋值 (某画板.底图, 数据)
            
        .判断 (等于 (私控件类型, #控件类型_标签))
            赋值 (某标签, 参主窗口.取标记组件 (私标记))
            某标签.移动 (私横坐标, 私纵坐标, 私宽度, 私高度)
            .如果 (并且 (等于 (私锚住左边, 真), 等于 (私锚住上边, 真), 等于 (私锚住右边, 假), 等于 (私锚住下边, 假)))
                
            .否则
                设置控件锚点 (某标签.取窗口句柄 (), 私锚住左边, 私锚住上边, 私锚住右边, 私锚住下边)
            .如果结束
            
             ' 读入数据 (文件号, 图片类型)
            读入数据 (文件号, 数据)
            赋值 (某标签.底图, 数据)
            
        .判断 (等于 (私控件类型, #控件类型_其他))
             ' 非图片控件，比如编辑框，网页框等。
            赋值 (控件句柄, 根据数值取窗口句柄 (子控件句柄数组, 私标记))
            MoveWindow (控件句柄, 私横坐标, 私纵坐标, 私宽度, 私高度, 真)
            .如果 (并且 (等于 (私锚住左边, 真), 等于 (私锚住上边, 真), 等于 (私锚住右边, 假), 等于 (私锚住下边, 假)))
                
            .否则
                设置控件锚点 (控件句柄, 私锚住左边, 私锚住上边, 私锚住右边, 私锚住下边)
            .如果结束
             ' 只用设定位置，不用设置图片
            
        .默认
            
        .判断结束
        
         ' /////////////////////////////////////////////////////////////////////////////////////
        
    .如果结束
    关闭文件 (文件号)
.计次循环尾 ()
.计次循环首 (取数组成员数 (全滑块条数组), i)
    .如果 (等于 (全滑块条数组 [i], 滑块条类型, -1))
        构建水平滑块条 (全滑块条数组 [i], 滑块句柄, 全滑块条数组 [i], 滑条句柄, 全滑块条数组 [i], 显示句柄, 全滑块条数组 [i], 最小值, 全滑块条数组 [i], 最大值, 全滑块条数组 [i], 当前值, 相减 (全滑块条数组 [i], 对齐方式, 2))
    .否则
        
    .如果结束
    
.计次循环尾 ()
返回 (真)


.子程序 拖动窗口大小控件新窗口过程, 整数型, , 
.参数 hwnd, 整数型, , 
.参数 uMsg, 整数型, , 
.参数 wParam, 整数型, , 
.参数 lParam, 整数型, , 

.局部变量 父窗口句柄, 整数型, , , 
.局部变量 旧窗口过程, 整数型, , , 

.如果真 (等于 (uMsg, #WM_LBUTTONDOWN))
    赋值 (父窗口句柄, GetParent (hwnd))
     ' SendMessageA (父窗口句柄, #WM_NCLBUTTONDOWN, #HTBOTTOMRIGHT, 0)
    SendMessageA (父窗口句柄, 161, 17, 0)
.如果真结束
赋值 (旧窗口过程, 取句柄旧窗口过程 (hwnd))
返回 (CallWindowProcA (旧窗口过程, hwnd, uMsg, wParam, lParam))


.子程序 取句柄旧窗口过程, 整数型, , 返回对应窗口句柄的旧窗口过程。失败返回-1
.参数 参窗口句柄, 整数型, , 

.局部变量 i, 空白型, , , 

.计次循环首 (取数组成员数 (全句柄和旧过程数组), i)
    .如果真 (等于 (全句柄和旧过程数组 [i], 句柄, 参窗口句柄))
        返回 (全句柄和旧过程数组 [i], 旧窗口过程)
    .如果真结束
    
.计次循环尾 ()
返回 (-1)


.子程序 易容_置圆角窗口, 空白型, 公开, 用来使窗口或控件圆角化，可以指定圆角的半径，以及圆哪几个角。
.参数 窗口句柄, 空白型, , 
.参数 横向圆角半径, 空白型, 可空, 
.参数 纵向圆角半径, 空白型, 可空, 
.参数 圆左上角, 逻辑型, 可空, 
.参数 圆右上角, 逻辑型, 可空, 
.参数 圆左下角, 逻辑型, 可空, 
.参数 圆右下角, 逻辑型, 可空, 

.局部变量 r, RECT, , , 
.局部变量 区域一, 整数型, , , 
.局部变量 区域二, 整数型, , , 

.如果真 (等于 (API_判断窗口句柄 (窗口句柄), 假))
    输出调试文本 (“错误：窗口不存在。”)
    返回 ()
.如果真结束

.如果真 (是否为空 (横向圆角半径))
    赋值 (横向圆角半径, 5)
.如果真结束
.如果真 (是否为空 (纵向圆角半径))
    赋值 (纵向圆角半径, 横向圆角半径)
.如果真结束
.如果真 (是否为空 (圆左上角))
    赋值 (圆左上角, 真)
.如果真结束
.如果真 (是否为空 (圆右上角))
    赋值 (圆右上角, 真)
.如果真结束
.如果真 (是否为空 (圆左下角))
    赋值 (圆左下角, 假)
.如果真结束
.如果真 (是否为空 (圆右下角))
    赋值 (圆右下角, 假)
.如果真结束

API_取窗口矩形 (窗口句柄, r)
赋值 (r.右边, 相减 (r.右边, r.左边))
赋值 (r.底边, 相减 (r.底边, r.顶边))
赋值 (r.左边, 0)
赋值 (r.顶边, 0)
赋值 (区域一, API_创建矩形区域 (横向圆角半径, 0, 相减 (r.右边, 横向圆角半径), r.底边)) ' 纵向
赋值 (区域二, API_创建矩形区域 (0, 纵向圆角半径, r.右边, 相减 (r.底边, 纵向圆角半径)))
API_合并区域 (区域一, 区域一, 区域二, 2)

.如果 (圆左上角)
    赋值 (区域二, API_创建椭圆区域 (0, 0, 相乘 (横向圆角半径, 2), 相乘 (纵向圆角半径, 2)))
.否则
    赋值 (区域二, API_创建矩形区域 (0, 0, 相加 (横向圆角半径, 1), 相加 (纵向圆角半径, 1))) ' 确保交叉
.如果结束
API_合并区域 (区域一, 区域一, 区域二, 2)

.如果 (圆右上角)
    赋值 (区域二, API_创建椭圆区域 (相加 (相减 (r.右边, 相乘 (2, 横向圆角半径)), 1), 0, 相加 (r.右边, 1), 相乘 (2, 纵向圆角半径)))
.否则
    赋值 (区域二, API_创建矩形区域 (相减 (r.右边, 横向圆角半径, 1), 0, r.右边, 相加 (纵向圆角半径, 1)))
.如果结束
API_合并区域 (区域一, 区域一, 区域二, 2)

.如果 (圆左下角)
    赋值 (区域二, API_创建椭圆区域 (0, 相减 (r.底边, 相乘 (2, 纵向圆角半径)), 相乘 (2, 横向圆角半径), 相加 (r.底边, 1)))
.否则
    赋值 (区域二, API_创建矩形区域 (0, 相减 (r.底边, 纵向圆角半径, 1), 相加 (横向圆角半径, 1), r.底边))
.如果结束
API_合并区域 (区域一, 区域一, 区域二, 2)

.如果 (圆右下角)
    赋值 (区域二, API_创建椭圆区域 (相减 (r.右边, 相乘 (2, 横向圆角半径)), 相减 (r.底边, 相乘 (2, 纵向圆角半径)), 相加 (r.右边, 1), 相加 (r.底边, 1)))
.否则
    赋值 (区域二, API_创建矩形区域 (相减 (r.右边, 横向圆角半径, 1), 相减 (r.底边, 纵向圆角半径, 1), r.右边, r.底边))
.如果结束
API_合并区域 (区域一, 区域一, 区域二, 2)

API_设置窗口区域 (窗口句柄, 区域一, 真)


.子程序 易容_置窗口光标从文件, 空白型, 公开, 设定某窗口类的鼠标光标
.参数 参窗口句柄, 整数型, , 
.参数 参光标文件, 文本型, , 

.局部变量 光标句柄, 空白型, , , 

.如果真 (取反 (文件是否存在 (参光标文件)))
    输出调试文本 (“光标文件不存在。”)
    返回 ()
.如果真结束
赋值 (光标句柄, LoadCursorFromFileA (参光标文件))
SetClassLongA (参窗口句柄, -12, 光标句柄) ' #GCL_HCURSOR


.子程序 易容_置窗口光标从字节集, 空白型, 公开, 设定某窗口类的鼠标光标
.参数 参窗口句柄, 整数型, , 
.参数 参光标字节集, 字节集, , 

.局部变量 临时文件名, 文本型, , , 

赋值 (临时文件名, 取临时文件名 ())
写到文件 (临时文件名, 参光标字节集)
易容_置窗口光标从文件 (参窗口句柄, 临时文件名)
删除文件 (临时文件名)


.子程序 易容_最大化窗口, 逻辑型, 公开, 
.参数 参窗口句柄, 整数型, , 

返回 (API_ShowWindow (参窗口句柄, #SW_MAXIMIZE))


.子程序 易容_还原窗口, 逻辑型, 公开, 
.参数 参窗口句柄, 整数型, , 

返回 (API_ShowWindow (参窗口句柄, #SW_RESTORE))


.子程序 易容_最小化窗口, 逻辑型, 公开, 
.参数 参窗口句柄, 整数型, , 

返回 (API_ShowWindow (参窗口句柄, #SW_MINIMIZE))


 ' //////////////////////////////////////////////////////////////// 以下为包装其他模块

.子程序 易容_设置控件锚点, 空白型, 公开, 指定控件的锚点以适应窗口的大小改变
.参数 控件句柄, 整数型, , 控件的句柄
.参数 锚住左边, 逻辑型, , 是否锚住控件左边
.参数 锚住顶边, 逻辑型, , 是否锚住控件顶边
.参数 锚住右边, 逻辑型, , 是否锚住控件右边
.参数 锚住下边, 逻辑型, , 是否锚住控件下边

设置控件锚点 (控件句柄, 锚住左边, 锚住顶边, 锚住右边, 锚住下边)


.子程序 易容_水平均分子控件, 空白型, 公开, 将该控件的第一层子控件水平均分
.参数 父窗口句柄, 整数型, , 要水平其子控件的父窗口句柄
.参数 子控件高度, 整数型, , 要固定高度，则设定一个值；要动态自适应，则设为0
.参数 控件间距, 整数型, 可空, 默认为5

.如果真 (是否为空 (控件间距))
    赋值 (控件间距, 5)
.如果真结束
水平均分子控件 (父窗口句柄, 子控件高度, 控件间距)


.子程序 易容_垂直均分子控件, 空白型, 公开, 将该控件的第一层子控件垂直均分
.参数 父窗口句柄, 整数型, , 要均分其子控件的父控件
.参数 子控件宽度, 整数型, , 要固定宽度，则设定一个值；要动态自适应，则设为0
.参数 控件间距, 整数型, 可空, 默认为５，可以设置

.如果真 (是否为空 (控件间距))
    赋值 (控件间距, 5)
.如果真结束
垂直均分子控件 (父窗口句柄, 子控件宽度, 控件间距)


.子程序 易容_构建水平滑块条, 空白型, 公开, 
.参数 要被置为滑块的控件句柄, 整数型, , 要置为滑块的控件句柄
.参数 要被置为滑条的控件句柄, 整数型, , 要被置为滑块条的控件句柄
.参数 要显示当前值的控件句柄, 整数型, 可空, 要显示滑块值的控件句柄，可以为标签，编辑框，按钮等可以显示文本的控件
.参数 最小值, 整数型, 可空, 默认为０
.参数 最大值, 整数型, 可空, 默认为１００
.参数 当前位置, 整数型, 可空, 默认为最小值
.参数 对齐方式, 整数型, 可空, 滑块与滑块条的对齐方式。-2:底顶对齐  -1:顶顶对齐 0：居中对齐 1:底底对齐 2:顶底对齐　 默认为居中对齐

.如果真 (是否为空 (最小值))
    赋值 (最小值, 0)
.如果真结束
.如果真 (是否为空 (最大值))
    赋值 (最大值, 100)
.如果真结束
.如果真 (是否为空 (当前位置))
    赋值 (当前位置, 最小值)
.如果真结束
.如果真 (是否为空 (对齐方式))
    赋值 (对齐方式, 0)
.如果真结束
.如果 (是否为空 (要显示当前值的控件句柄))
    构建水平滑块条 (要被置为滑块的控件句柄, 要被置为滑条的控件句柄, , 最小值, 最大值, 当前位置, 对齐方式)
.否则
    构建水平滑块条 (要被置为滑块的控件句柄, 要被置为滑条的控件句柄, 要显示当前值的控件句柄, 最小值, 最大值, 当前位置, 对齐方式)
.如果结束


.子程序 易容_置滑块当前值, 逻辑型, 公开, 
.参数 参已被置为滑块的控件句柄, 整数型, , 
.参数 参欲置之值, 整数型, , 

返回 (置滑块值 (参已被置为滑块的控件句柄, 参欲置之值))


.子程序 易容_置滑块最小最大值, 逻辑型, 公开, 
.参数 参已被置为滑块的控件句柄, 整数型, , 
.参数 参最小值, 整数型, , 
.参数 参最大值, 整数型, , 

返回 (置滑块最小最大值 (参已被置为滑块的控件句柄, 参最小值, 参最大值))


.子程序 易容_取滑块当前值, 整数型, 公开, 失败返回-1
.参数 参已被置为滑块的控件句柄, 整数型, , 

返回 (取滑块当前值 (参已被置为滑块的控件句柄))


.子程序 易容_取滑块最小值, 整数型, 公开, 失败返回-1
.参数 参已被置为滑块的控件句柄, 整数型, , 

返回 (取滑块最小值 (参已被置为滑块的控件句柄))


.子程序 易容_取滑块最大值, 整数型, 公开, 失败返回-1
.参数 参已被置为滑块的控件句柄, 整数型, , 

返回 (取滑块最大值 (参已被置为滑块的控件句柄))


.子程序 易容_置控件数值, 整数型, 公开, 
.参数 参控件句柄, 整数型, , 
.参数 参数值, 整数型, , 

返回 (SetWindowLongA (参控件句柄, -21, 参数值)) ' GWL_USERDATA=-21


.子程序 易容_置外形图片, 空白型, 公开, 通过位图数据来指定窗口和控件的外形。
.参数 参窗口句柄, 整数型, , 
.参数 参图片数据, 字节集, , 必须为24位的bmp数据
.参数 参透明色, 整数型, , 指定要透明的颜色

从图片设置窗口外形 (参窗口句柄, 参图片数据, 参透明色)


.子程序 易容_取消窗口外形, 空白型, 公开, 取消设置的外形图片。
.参数 参窗口句柄, 整数型, , 

清除窗口区域 (参窗口句柄)

.程序集 公用程序集, , , 

.子程序 取窗口数值, 整数型, , 
.参数 参窗口句柄, 整数型, , 

返回 (GetWindowLongA (参窗口句柄, -21)) ' GWL_USERDATA=-21


.子程序 置窗口数值, 整数型, , 
.参数 参窗口句柄, 整数型, , 
.参数 参数值, 整数型, , 

返回 (SetWindowLongA (参窗口句柄, -21, 参数值)) ' GWL_USERDATA=-21


.子程序 取窗口第一层子控件, 空白型, , 以|分隔的子控件句柄，返回整数数组
.参数 父窗口句柄, 整数型, , 
.参数 接收返回的数组, 整数型, 数组, 

重定义数组 (全其他控件句柄数组, 假, 0)
重定义数组 (接收返回的数组, 假, 0)
EnumChildWindows (父窗口句柄, &枚举子窗口过程, 父窗口句柄)
 ' 接收返回的数组 ＝ 全子控件句柄数组
复制数组 (接收返回的数组, 全其他控件句柄数组)
 ' 重定义数组 (全子控件句柄数组, 假, 0)


.子程序 枚举子窗口过程, 逻辑型, , 用来被EnumChildWindows回调的窗口过程
.参数 窗口句柄, 整数型, , 
.参数 lParam, 空白型, , 应用程序传递的参数

.如果真 (等于 (GetParent (窗口句柄), lParam))
    加入成员 (全其他控件句柄数组, 窗口句柄)
.如果真结束
返回 (真)


.子程序 根据数值取窗口句柄, 整数型, , 如果未找到，则返回-1
.参数 参子控件句柄数组, 整数型, 数组, 
.参数 参窗口数值, 整数型, , 

.局部变量 i, 空白型, , , 
.局部变量 取的控件数值, 空白型, , , 

 ' 输出调试文本 (参窗口数值)
.计次循环首 (取数组成员数 (参子控件句柄数组), i)
    .如果真 (等于 (API_判断窗口句柄 (参子控件句柄数组 [i]), 假))
        输出调试文本 (“控件不存在。”)
    .如果真结束
    赋值 (取的控件数值, 取窗口数值 (参子控件句柄数组 [i]))
    .如果真 (等于 (取的控件数值, 参窗口数值))
        返回 (参子控件句柄数组 [i])
    .如果真结束
    
.计次循环尾 ()
返回 (-1)


.程序集 _模块_古木滑块条免注册版, , , ** 不要更改此处 古木滑块条_免注册版.ec

.子程序 构建水平滑块条, 空白型, , 将某个控件置为水平方向可拖动的滑块
.参数 要被置为滑块的控件句柄, 整数型, , 要置为滑块的控件句柄
.参数 要被置为滑条的控件句柄, 整数型, , 要被置为滑块条的控件句柄
.参数 要显示当前值的控件句柄, 整数型, 可空, 要显示滑块值的控件句柄，可以为标签，编辑框，按钮等可以显示文本的控件
.参数 最小值, 整数型, 可空, 默认为０
.参数 最大值, 整数型, 可空, 默认为１００
.参数 当前位置, 整数型, 可空, 默认为最小值
.参数 对齐方式, 整数型, 可空, 滑块与滑块条的对齐方式。-2:底顶对齐  -1:顶顶对齐 0：居中对齐 1:底底对齐 2:顶底对齐　 默认为居中对齐

 ' ** 本子程序功能由系统自动转交对应模块实现，可以删除但不能修改。

.子程序 置滑块值, 逻辑型, , 
.参数 已被置为滑块的控件句柄, 整数型, , 
.参数 欲置之值, 整数型, , 要置的置，设置值后滑块会自动滑道相应的位置，小于该滑块的最小值则用最小值，大于该滑块的最大值则用最大值

 ' ** 本子程序功能由系统自动转交对应模块实现，可以删除但不能修改。

.子程序 置滑块最小最大值, 逻辑型, , 
.参数 已被置为滑块的控件句柄, 整数型, , 
.参数 最小值, 整数型, , 
.参数 最大值, 整数型, , 

 ' ** 本子程序功能由系统自动转交对应模块实现，可以删除但不能修改。

.子程序 取滑块当前值, 整数型, , 失败则返回-1
.参数 已被置为滑块的控件句柄, 整数型, , 

 ' ** 本子程序功能由系统自动转交对应模块实现，可以删除但不能修改。

.子程序 取滑块最小值, 整数型, , 失败则返回-1
.参数 已被置为滑块的控件句柄, 整数型, , 

 ' ** 本子程序功能由系统自动转交对应模块实现，可以删除但不能修改。

.子程序 取滑块最大值, 整数型, , 失败则返回-1
.参数 已被置为滑块的控件句柄, 整数型, , 

 ' ** 本子程序功能由系统自动转交对应模块实现，可以删除但不能修改。

.程序集 _模块_设置控件锚点, , , ** 不要更改此处 anchors.ec

.子程序 设置控件锚点, 空白型, , 指定控件的锚点以适应窗口的大小改变
.参数 控件句柄, 整数型, , 控件的句柄
.参数 锚住左边, 逻辑型, , 是否锚住控件左边
.参数 锚住顶边, 逻辑型, , 是否锚住控件顶边
.参数 锚住右边, 逻辑型, , 是否锚住控件右边
.参数 锚住下边, 逻辑型, , 是否锚住控件下边

 ' ** 本子程序功能由系统自动转交对应模块实现，可以删除但不能修改。

.子程序 水平均分子控件, 空白型, , 将该控件的第一层子控件水平均分
.参数 父窗口句柄, 整数型, , 要水平其子控件的父窗口句柄
.参数 子控件高度, 整数型, , 要固定高度，则设定一个值；要动态自适应，则设为0
.参数 控件间距, 整数型, 可空, 

 ' ** 本子程序功能由系统自动转交对应模块实现，可以删除但不能修改。

.子程序 垂直均分子控件, 空白型, , 将该控件的第一层子控件垂直均分
.参数 父窗口句柄, 整数型, , 要均分其子控件的父控件
.参数 子控件宽度, 整数型, , 要固定宽度，则设定一个值；要动态自适应，则设为0
.参数 控件间距, 整数型, 可空, 默认为５，可以设置

 ' ** 本子程序功能由系统自动转交对应模块实现，可以删除但不能修改。

.子程序 取被锚控件索引, 整数型, , 返回控件在全局数组中的索引，找不到则返回-1
.参数 参控件句柄, 整数型, , 

 ' ** 本子程序功能由系统自动转交对应模块实现，可以删除但不能修改。

.程序集 _模块_置控件外形图片, , , ** 不要更改此处 置控件外形图片.ec

.子程序 从图片设置窗口外形, 空白型, , 
.参数 参窗口句柄, 整数型, , 
.参数 参图片数据, 字节集, , 必须为24位的bmp数据
.参数 参透明色, 整数型, , 

 ' ** 本子程序功能由系统自动转交对应模块实现，可以删除但不能修改。

.子程序 取位图宽度, 整数型, , 从位图数据中取位图宽度，以像素为单位。失败返回0
.参数 参位图数据, 字节集, , 位图宽度在第１９个字节处

 ' ** 本子程序功能由系统自动转交对应模块实现，可以删除但不能修改。

.子程序 取位图高度, 整数型, , 从位图数据中取位图高度，以像素为单位。失败返回0
.参数 参位图数据, 字节集, , 从第２３个字节开始

 ' ** 本子程序功能由系统自动转交对应模块实现，可以删除但不能修改。

.子程序 取位图数据颜色, 整数型, , 
.参数 参图片数据, 字节集, , 24为bmp数据
.参数 x, 整数型, , 横坐标
.参数 y, 整数型, , 纵坐标

 ' ** 本子程序功能由系统自动转交对应模块实现，可以删除但不能修改。

.子程序 清除窗口区域, 空白型, , 清除已设置的区域
.参数 参窗口句柄, 整数型, , 

 ' ** 本子程序功能由系统自动转交对应模块实现，可以删除但不能修改。


 ' 不属于任何一个程序集、类模块的函数：
