 ' 文件类型：Windows窗口程序

 ' 程序名称：XP单选框1.1
 ' 程序描述：    只能在同一个窗口使用。在不同窗口使用时，当一个窗口关闭，会全部自动退出。
    注意：不要重复加入同一个单选框。易语言2.5x不能用。

更改了画法，模仿更逼真。
 ' 程序作者：云外归鸟
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.1
 ' 创建号：0.0



.图片 单选框图, " ' 已保存到：D:\易语言学习\Data\RADIO.e\单选框图", , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 3 2 系统核心支持库




数据类型 BITMAP, , 
    .成员 bmType, 空白型, , , 
    .成员 bmWidth, 空白型, , , 
    .成员 bmHeight, 空白型, , , 
    .成员 bmWidthBytes, 空白型, , , 
    .成员 bmPlanes, 短整数型, , , 
    .成员 bmBitsPixel, 短整数型, , , 
    .成员 bmBits, 空白型, , , 

数据类型 RECT, , 
    .成员 Left, 空白型, , , 
    .成员 Top, 空白型, , , 
    .成员 Right, 空白型, , , 
    .成员 Bottom, 空白型, , , 

数据类型 POINTAPI, , 
    .成员 x, 空白型, , , 
    .成员 y, 空白型, , , 

数据类型 LOGFONT, , 
    .成员 lfHeight, 空白型, , , 
    .成员 lfWidth, 空白型, , , 
    .成员 lfEscapement, 空白型, , , 
    .成员 lfOrientation, 空白型, , , 
    .成员 lfWeight, 空白型, , , 
    .成员 lfItalic, 短整数型, , , 
    .成员 lfUnderline, 短整数型, , , 
    .成员 lfStrikeOut, 短整数型, , , 
    .成员 lfCharSet, 短整数型, , , 
    .成员 lfOutPrecision, 短整数型, , , 
    .成员 lfClipPrecision, 短整数型, , , 
    .成员 lfQuality, 短整数型, , , 
    .成员 lfPitchAndFamily, 短整数型, , , 
    .成员 lfFaceName, 文本型, , , 


.DLL命令 CreateCompatibleDC, 整数型, "", "", , 
    .参数 a, 空白型, , 

.DLL命令 CreateDCAsNull, 整数型, "", "CreateDCA", , 
    .参数 a, 文本型, , 
    .参数 b, 空白型, , 
    .参数 c, 空白型, , 
    .参数 d, 空白型, , 

.DLL命令 CreateDIBitmap, 整数型, "", "CreateDIBitmap", , 
    .参数 hdc, 空白型, , 
    .参数 lpInfoHeader, 字节集, , 
    .参数 dwUsage, 空白型, , 
    .参数 lpInitBits, 字节集, , 
    .参数 lpInitInfo, 字节集, , 
    .参数 wUsage, 空白型, , 

.DLL命令 DeleteObject, 空白型, "", "DeleteObject", , 
    .参数 z, 空白型, , 

.DLL命令 SelectObject, 整数型, "", "", , 
    .参数 a, 空白型, , 
    .参数 b, 空白型, , 

.DLL命令 GetObjectAPI, 空白型, "", "GetObjectA", , 
    .参数 hObject, 空白型, , 
    .参数 nCount, 空白型, , 
    .参数 lpObject, 未知类型0x4101008A, 传址, 

.DLL命令 DeleteDC, 空白型, "", "", , 
    .参数 a, 空白型, , 

.DLL命令 CreateCompatibleBitmap, 整数型, "", "CreateCompatibleBitmap", , 
    .参数 h, 空白型, , 
    .参数 w, 空白型, , 
    .参数 h, 空白型, , 

.DLL命令 BitBlt, 整数型, "", "BitBlt", , 
    .参数 shdc, 整数型, , 
    .参数 z, 整数型, , 
    .参数 s, 整数型, , 
    .参数 k, 整数型, , 
    .参数 g, 整数型, , 
    .参数 dhdc, 整数型, , 
    .参数 x, 整数型, , 
    .参数 y, 整数型, , 
    .参数 d, 整数型, , 

.DLL命令 GetDC, 整数型, "", "GetDC", , 
    .参数 hWnd, 整数型, , 

.DLL命令 GetWindowRect, 空白型, "", "GetWindowRect", , 
    .参数 hwnd, 空白型, , 
    .参数 lpRect, RECT, 传址, 

.DLL命令 SetWindowLong, 整数型, "", "SetWindowLongA", , 
    .参数 hwnd, 空白型, , 
    .参数 nIndex, 空白型, , 
    .参数 dwNewLong, 子程序指针, , 

.DLL命令 CallWindowProc, 整数型, "", "CallWindowProcA", , 
    .参数 lpPrevWndFunc, 空白型, , 
    .参数 hwnd, 空白型, , 
    .参数 Msg, 空白型, , 
    .参数 wParam, 空白型, , 
    .参数 lParam, 空白型, , 

.DLL命令 ReleaseDC, 空白型, "", "ReleaseDC", , 
    .参数 hwnd, 空白型, , 
    .参数 hdc, 空白型, , 

.DLL命令 DrawText, 空白型, "", "DrawTextA", , 
    .参数 hdc, 空白型, , 
    .参数 lpStr, 文本型, , 
    .参数 nCount, 空白型, , 
    .参数 lpRect, 未知类型0x4101008B, 传址, 
    .参数 wFormat, 空白型, , 

.DLL命令 SetBkMode, 空白型, "", "SetBkMode", , 
    .参数 hdc, 空白型, , 
    .参数 nBkMode, 空白型, , 

.DLL命令 SetTextColor, 空白型, "", "SetTextColor", , 
    .参数 hdc, 空白型, , 
    .参数 colors, 空白型, , 

.DLL命令 GetCursorPos, 空白型, "", "GetCursorPos", , 
    .参数 x, POINTAPI, 传址, 

.DLL命令 PostMessage, 空白型, "", "PostMessageA", , 
    .参数 hwnd, 空白型, , 
    .参数 wMsg, 空白型, , 
    .参数 wParam, 空白型, , 
    .参数 lParam, 空白型, 传址, 

.DLL命令 IsWindowEnabled, 整数型, "", "IsWindowEnabled", , 
    .参数 hwnd, 整数型, , 

.DLL命令 MulDiv, 整数型, "", "MulDiv", , 
    .参数 nNumber, 空白型, , 
    .参数 nNumerator, 空白型, , 
    .参数 nDenominator, 空白型, , 

.DLL命令 GetDeviceCaps, 整数型, "", "GetDeviceCaps", , 
    .参数 hdc, 空白型, , 
    .参数 nIndex, 空白型, , LOGPIXELSY = 90

.DLL命令 CreateFontIndirect, 整数型, "", "CreateFontIndirectA", , 
    .参数 lpLogFont, 未知类型0x410102B8, , 

.DLL命令 GetWindowText, 空白型, "", "GetWindowTextA", , 
    .参数 hwnd, 空白型, , 
    .参数 lpString, 文本型, , 
    .参数 cch, 空白型, , 

.DLL命令 FillRect, 空白型, "", "FillRect", , 
    .参数 hdc, 空白型, , 
    .参数 lpRect, RECT, 传址, 
    .参数 hBrush, 空白型, , 

.DLL命令 CreateSolidBrush, 整数型, "", "CreateSolidBrush", , 
    .参数 crColor, 空白型, , 

.DLL命令 GetSysColor, 整数型, "", "GetSysColor", , 
    .参数 nIndex, 空白型, , 

.DLL命令 GetPixel, 整数型, "", "GetPixel", , 
    .参数 hdc, 空白型, , 
    .参数 x, 空白型, , 
    .参数 y, 空白型, , 

.程序集 程序集1, , , 

.程序集变量 素材场景, 空白型, , , 
.程序集变量 句柄组, 整数型, , "0", 
.程序集变量 选中, 逻辑型, , "0", 
.程序集变量 标题颜色组, 整数型, , "0", 
.程序集变量 背景颜色组, 整数型, , "0", 
.程序集变量 字体句柄, 空白型, , , 
.程序集变量 lpPrevWndProc, 空白型, , , 
.子程序 _启动子程序, 整数型, , 请在本子程序中放置易模块初始化代码
产生素材和字体 ()
_临时子程序 () ' 在模块初始化代码执行完毕后调用模块测试代码
返回 (0) ' 可以根据您的需要返回任意数值

.子程序 加入单选框, 空白型, , 
.参数 句柄, 空白型, , 
.参数 标题颜色, 空白型, , 
.参数 背景色, 空白型, , 
.参数 选中值, 逻辑型, , 

赋值 (lpPrevWndProc, SetWindowLong (句柄, -4, &WindowProc)) ' 开始回调
加入成员 (句柄组, 句柄)
加入成员 (标题颜色组, 标题颜色)
加入成员 (背景颜色组, 背景色)
加入成员 (选中, 选中值)

.子程序 取索引, 整数型, , 
.参数 句柄, 空白型, , 

.局部变量 n, 空白型, , , 

.计次循环首 (取数组成员数 (句柄组), n)
    .如果真 (等于 (句柄, 句柄组 [n]))
        返回 (n)
    .如果真结束
    
.计次循环尾 ()
返回 (0) ' 错误返回0

.子程序 产生素材和字体, 空白型, , 
.局部变量 素材图片, 字节集, , , 
.局部变量 图片头, 字节集, , , 
.局部变量 BMP表, 字节集, , , 
.局部变量 场景, 空白型, , , 
.局部变量 源场景, 空白型, , , 
.局部变量 源位图句柄, 空白型, , , 
.局部变量 位图信息, 未知类型0x41010097, , , 
.局部变量 目标位图句柄, 空白型, , , 
.局部变量 n, 空白型, , , 
.局部变量 字体表, LOGFONT, , , 
.局部变量 系统场景, 空白型, , , 

 ' 取BMP图片头信息
赋值 (素材图片, #单选框图)
赋值 (图片头, 取字节集中间 (素材图片, 15, 40))
赋值 (n, 取字节集数据 (取字节集中间 (图片头, 1, 4), 3))
赋值 (BMP表, 取字节集中间 (素材图片, 15, 相加 (40, n)))

赋值 (场景, CreateDCAsNull (“DISPLAY”, 0, 0, 0)) ' 创建与系统兼容的空场景
赋值 (源场景, CreateCompatibleDC (场景)) ' 创建内存场景
赋值 (素材场景, CreateCompatibleDC (场景)) ' 创建内存场景
赋值 (源位图句柄, CreateDIBitmap (场景, 图片头, 4, 素材图片, BMP表, 0))
SelectObject (源场景, 源位图句柄) ' 选入源位图
GetObjectAPI (源位图句柄, 24, 位图信息) ' 取位图信息
赋值 (目标位图句柄, CreateCompatibleBitmap (源场景, 相减 (位图信息.bmWidth, 18), 位图信息.bmHeight)) ' 产生一个空的位图句柄
SelectObject (素材场景, 目标位图句柄) ' 选入目标位图
BitBlt (素材场景, 0, 0, 位图信息.bmWidth, 位图信息.bmHeight, 源场景, 18, 0, 13369376) ' 画到素材场景
赋值 (系统场景, GetDC (0))
赋值 (字体表.lfHeight, 负 (MulDiv (9, GetDeviceCaps (系统场景, 90), 72))) ' 根据设备产生9号字的相应值
赋值 (.lfWeight, 400) ' 粗体值为700
赋值 (.lfCharSet, 134)
赋值 (字体句柄, CreateFontIndirect (字体表)) ' 产生字体
ReleaseDC (0, 系统场景)

 ' 删除这些临时场景和位图句柄
DeleteDC (源场景)
DeleteDC (场景)
DeleteDC (场景)
DeleteObject (源位图句柄)
DeleteObject (目标位图句柄)

.子程序 画单选框, 空白型, , 
.参数 句柄, 空白型, , 
.参数 类别, 空白型, , 按图片排列顺序：1、普通；2、按下；3、禁止；4、引燃；5、焦点

.局部变量 区域, RECT, , , 
.局部变量 单选框宽度, 空白型, , , 
.局部变量 单选框高度, 空白型, , , 
.局部变量 单选框场景, 空白型, , , 
.局部变量 X, 空白型, , , 
.局部变量 Y, 空白型, , , 
.局部变量 N, 空白型, , , 
.局部变量 单选框索引, 空白型, , , 
.局部变量 颜色值, 空白型, , , 
.局部变量 标题长, 空白型, , , 
.局部变量 m, 字节型, , , 
.局部变量 标题字, 文本型, , , 
.局部变量 h, 空白型, , , 
.局部变量 a, 空白型, , , 
.局部变量 xx, 空白型, , , 

赋值 (单选框索引, 取索引 (句柄))
.如果真 (等于 (单选框索引, 0))
    返回 ()
.如果真结束
.如果真 (等于 (类别, 1))
    赋值 (选中 [单选框索引], 假)
.如果真结束
.如果真 (等于 (类别, 2))
    赋值 (选中 [单选框索引], 真)
    赋值 (N, 16)
.如果真结束
.如果真 (等于 (类别, 0))
    .如果 (选中 [单选框索引])
        赋值 (N, 16)
    .否则
        赋值 (N, 0)
    .如果结束
    
.如果真结束
.如果真 (等于 (类别, 3))
    .如果 (选中 [单选框索引])
        赋值 (N, 48)
    .否则
        赋值 (N, 32)
    .如果结束
    
.如果真结束

GetWindowRect (句柄, 区域)
赋值 (单选框宽度, 相减 (区域.Right, 区域.Left))
赋值 (单选框高度, 相减 (区域.Bottom, 区域.Top))
赋值 (单选框场景, GetDC (句柄))
赋值 (区域.Top, 0)
赋值 (区域.Left, 0)
赋值 (区域.Right, 单选框宽度)
赋值 (区域.Bottom, 单选框高度)
赋值 (颜色值, 背景颜色组 [单选框索引])
.如果真 (等于 (颜色值, -16777216))
    赋值 (颜色值, GetSysColor (15))
.如果真结束
赋值 (h, CreateSolidBrush (颜色值))
FillRect (单选框场景, 区域, h)
赋值 (a, 相减 (相除 (单选框高度, 2), 7))
.计次循环首 (13, Y)
    .计次循环首 (13, X)
        赋值 (xx, GetPixel (素材场景, 相减 (相加 (N, X), 1), 相加 (Y, 1)))
        .如果真 (不等于 (xx, 16711680))
            BitBlt (单选框场景, 相减 (X, 1), 相减 (相加 (Y, a), 1), 1, 1, 素材场景, 相减 (相加 (N, X), 1), 相加 (Y, 1), 13369376)
        .如果真结束
        
    .计次循环尾 ()
.计次循环尾 ()
BitBlt (单选框场景, 0, Y, 16, 18, 素材场景, N, 0, 13369376)
 ' 画标题
赋值 (颜色值, 标题颜色组 [单选框索引])
SetBkMode (单选框场景, 1) ' 选择写字的模式为背景透明
.如果真 (等于 (类别, 3)) ' 如果为禁用字颜色为灰色
    赋值 (颜色值, #灰色)
.如果真结束
SetTextColor (单选框场景, 颜色值) ' 设置字的颜色
SelectObject (单选框场景, ) ' 选入字体
赋值 (标题字, 取空白文本 (256))
GetWindowText (句柄, 标题字, 255) ' 取按钮标题
赋值 (标题长, 取文本长度 (标题字))
赋值 (N, 1)
赋值 (X, 0)
赋值 (Y, 0) ' 行数
.判断循环首 (小于或等于 (N, 标题长)) ' 计算标题的行数
    赋值 (m, 取代码 (标题字, N))
    .如果 (大于 (127)) ' 是否为汉字
        赋值 (X, 相加 (X, 12))
        .如果 (或者 (大于 (X, 相减 (单选框宽度, 17)), 等于 (N, 相减 (标题长, 1))))
            赋值 (Y, 相加 (Y, 1))
            .如果真 (等于 (N, 相减 (标题长, 1)))
                .如果真 (大于 (X, 相减 (单选框宽度, 17)))
                    赋值 (Y, 相加 (Y, 1))
                .如果真结束
                跳出循环 ()
            .如果真结束
            赋值 (X, 1)
        .否则
            赋值 (N, 相加 (N, 2))
        .如果结束
        
    .否则
        赋值 (X, 相加 (X, 7))
        .如果 (或者 (大于 (X, 相减 (单选框宽度, 17)), 等于 (标题长, N)))
            赋值 (Y, 相加 (Y, 1))
            .如果真 (等于 (标题长, N))
                .如果真 (大于 (X, 相减 (单选框宽度, 17)))
                    赋值 (Y, 相加 (Y, 1))
                .如果真结束
                跳出循环 ()
            .如果真结束
            赋值 (X, 1)
        .否则
            赋值 (N, 相加 (N, 1))
            
        .如果结束
        
    .如果结束
    
.判断循环尾 ()
 ' 设定标题的框架
赋值 (区域.Left, 17)
赋值 (区域.Right, 单选框宽度)
赋值 (区域.Top, 相减 (相除 (单选框高度, 2), 相加 (8, 相乘 (相减 (Y, 1), 8))))
赋值 (区域.Bottom, 单选框高度)
DrawText (单选框场景, 标题字, 标题长, 区域, 16) ' 画出标题字

 ' 用完删除
DeleteObject (h)
ReleaseDC (句柄, 单选框场景)

.子程序 是否在单选框上, 逻辑型, , 
.参数 句柄, 空白型, , 

.局部变量 鼠标位置, POINTAPI, , , 
.局部变量 按钮范围, RECT, , , 

GetCursorPos (鼠标位置)
GetWindowRect (句柄, 按钮范围)
返回 (并且 (大于 (鼠标位置.x, 按钮范围.Left), 小于 (鼠标位置.x, 按钮范围.Right), 大于 (鼠标位置.y, 按钮范围.Top), 小于 (鼠标位置.y, 按钮范围.Bottom)))

.子程序 WindowProc, 整数型, , 回调的子程序
.参数 hw, 空白型, , 
.参数 uMsg, 空白型, , 
.参数 wParam, 空白型, , 
.参数 lParam, 空白型, , 

.局部变量 按下, 逻辑型, 静态, , 
.局部变量 n, 空白型, , , 

赋值 (CallWindowProc (hw, uMsg, wParam, lParam))
.如果真 (等于 (uMsg, 2)) ' 窗口被销毁
    DeleteObject ()
    DeleteDC (素材场景)
.如果真结束
.如果真 (等于 (uMsg, 10)) ' 禁止或解禁
    .如果 (等于 (wParam, 1)) ' 是否为解禁
        画单选框 (hw, 0)
    .否则
        画单选框 (hw, 3)
    .如果结束
    
.如果真结束
.如果真 (等于 (uMsg, 15)) ' 重画按钮的请求
    画单选框 (hw, 0)
    .如果真 (等于 (IsWindowEnabled (hw), 0))
        画单选框 (hw, 3)
    .如果真结束
    
.如果真结束
.如果真 (等于 (uMsg, 241)) ' 选中和未选中的消息
    .如果 (等于 (wParam, 1)) ' 是否为选中
        画单选框 (hw, 2)
    .否则
        画单选框 (hw, 1)
    .如果结束
    
.如果真结束
.如果真 (等于 (uMsg, 243)) ' 按下或放开或按下时移出按钮
    .如果 (等于 (wParam, 1)) ' 是否为按下
        .如果真 (等于 (按下, 假))
            赋值 (按下, 真)
            画单选框 (hw, 0)
        .如果真结束
        
    .否则
         ' 放开或按下时移出按钮
        .如果真 (或者 (是否在单选框上 (hw), 按下))
            画单选框 (hw, 0)
            赋值 (按下, 假)
        .如果真结束
        
    .如果结束
    
.如果真结束
返回 ()

.子程序 _临时子程序, 空白型, , 
 ' 本名称子程序用作测试程序用，仅在开发及调试环境中有效，编译发布程序前将被系统自动清空，请将所有用作测试的临时代码放在本子程序中。 ***注意不要修改本子程序的参数及返回值类型。


.程序集 _接口程序集, , , 在本程序集中定义的子程序可被模块外部程序访问，注意如果不存在本程序集就不能作为易模块编译。

.子程序 XP单选框, 空白型, , 
.参数 单选框类型, 单选框, , 

.局部变量 gHW, 空白型, , , 

赋值 (gHW, 单选框类型.取窗口句柄 ())
加入单选框 (gHW, 单选框类型., 单选框类型., 单选框类型.)
.如果 (单选框类型.)
    PostMessage (gHW, 243, 1, 0) ' 单选框画为选中
.否则
    PostMessage (gHW, 243, 0, 0) ' 单选框画为未选中
    
.如果结束
.如果真 (单选框类型.)
    PostMessage (gHW, 10, 0, 0)
.如果真结束
PostMessage (gHW, 15, 0, 0)


 ' 不属于任何一个程序集、类模块的函数：
