 ' 文件类型：Windows模块源码

 ' 程序名称：写屏幕
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0



.常量 PS_SOLID, "0", , 
.常量 TRANSPARENT, "1", , 
.常量 GB2312_CHARSET, "134", , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 4 系统核心支持库




数据类型 LOGFONT, , 逻辑字体;
    .成员 高度, 整数型, , , lfheight
    .成员 宽度, 整数型, , , lfwidth
    .成员 控制摆, 整数型, , , lfrscapement
    .成员 定方位, 整数型, , , lforientation
    .成员 加粗, 整数型, , , lfweight
    .成员 斜体, 字节型, , , lfitalic
    .成员 下划线, 字节型, , , lfunderline
    .成员 袭击出, 字节型, , , lfstrikeout
    .成员 零碎工作组合, 字节型, , , lfcharset
    .成员 出自精确, 字节型, , , lfoutprecision
    .成员 修剪精确, 字节型, , , lfclipprecision
    .成员 性质, 字节型, , , lfquality
    .成员 间距, 字节型, , , lfpitchandfamily
    .成员 字体名称, 文本型, , , lffacename[lf.facesize]


.DLL命令 取设备场景_, 整数型, "user32", "GetDC", , 获取指定窗口的设备场景　指定窗口的设备场景句柄，出错则为0
    .参数 hwnd, 整数型, , 将获取其设备场景的窗口的句柄。若为0，则要获取整个屏幕的DC;  

.DLL命令 TextOut_, 整数型, "gdi32", "TextOutA", , 文本绘图函数。也请参考SetTextAlign　非零表示成功，零表示失败。会设置GetLastError
    .参数 hdc, 整数型, , 设备场景的句柄
    .参数 x, 整数型, , 绘图的起点，采用逻辑坐标
    .参数 y, 整数型, , 同上
    .参数 lpString, 文本型, , 欲描绘的字串
    .参数 nCount, 整数型, , 字串中要描绘的字符数量;  

.DLL命令 释放设备场景_, 整数型, "user32", "ReleaseDC", , 释放由调用GetDC或GetWindowDC函数获取的指定设备场景。它对类或私有设备场景无效（但这样的调用不会造成损害）　执行成功为1，否则为0
    .参数 窗口句柄, 整数型, , 要释放的设备场景相关的窗口句柄
    .参数 设备场景, 整数型, , 要释放的设备场景句柄;  

.DLL命令 删除对象_, 整数型, "gdi32", "DeleteObject", , 用这个函数删除GDI对象，比如画笔、刷子、字体、位图、区域以及调色板等等。对象使用的所有系统资源都会被释放　非零表示成功，零表示失败
    .参数 对象句柄, 整数型, , 一个GDI对象的句柄;  

.DLL命令 选入设备场景_, 整数型, "gdi32", "SelectObject", , 每个设备场景都可能有选入其中的图形对象。其中包括位图、刷子、字体、画笔以及区域等等。一次选入设备场景的只能有一个对象。选定的对象会在设备场景的绘图操作中使用。例如，当前选定的画笔决定了在设备场景中描绘的线段颜色及样式　与以前选入设备场景的相同hObject类型的一个对象的句柄，零表示出错。如选定的对象是一个区域（Region），结果就是下列常数之一：SIMPLEREGION， ;    COMPLEXREGION 或 NULLREGION 对区域进行描述， GDI_ERROR 表示出错
    .参数 设备场景句柄, 整数型, , 一个设备场景的句柄
    .参数 对象句柄, 整数型, , 一个画笔、位图、刷子、字体或区域的句柄;  

.DLL命令 使用指定属性创建逻辑字体_, 整数型, "gdi32", "CreateFontIndirectA", , 用指定的属性创建一种逻辑字体　执行成功则返回逻辑字体句柄，零表示失败
    .参数 字体结构信息, 未知类型0x41010059, , LOGFONT，这个结构定义了逻辑字体请求的属性;  

.DLL命令 SetBkColor_, 整数型, "gdi32", "SetBkColor", , 为指定的设备场景设置背景颜色。背景颜色用于填充阴影刷子、虚线画笔以及字符（如背景模式为OPAQUE）中的空隙。也在位图颜色转换期间使用。参考SetBkMode　前一个背景色，CLR_INVALID表示出错
    .参数 hdc, 整数型, , 设备场景的句柄
    .参数 crColor, 整数型, , 新背景颜色的RGB颜色值;  

.DLL命令 SetBkMode_, 整数型, "gdi32", "SetBkMode", , 指定阴影刷子、虚线画笔以及字符中的空隙的填充方式　前一个背景模式的值
    .参数 hdc, 整数型, , 设备场景的句柄
    .参数 nBkMode, 整数型, , 下述常数之一：;OPAQUE：用当前的背景色填充虚线画笔、阴影刷子以及字符的空隙;TRANSPARENT：透明处理，即不作上述填充;  

.DLL命令 设置前景色_, 整数型, "gdi32", "SetTextColor", , 设置当前文本颜色。这种颜色也称为“前景色”　文本色的前一个RGB颜色设定。CLR_INVALID表示失败。会设置GetLastError
    .参数 设备场景, 整数型, , 设备场景的句柄
    .参数 颜色, 整数型, , 新的文本色在VB里使用如改变了这个设置，注意恢复VB窗体或控件原始的文本颜色;

.程序集 程序集1, , , 

.子程序 写屏幕, 逻辑型, 公开, 
.参数 窗口句柄, 整数型, , 
.参数 始位置x, 整数型, , 
.参数 始位置y, 整数型, , 
.参数 内容, 文本型, , 
.参数 字体名称, 文本型, 可空, 
.参数 字体大小, 整数型, 可空, 
.参数 颜色, 整数型, 可空, 
.参数 加粗, 逻辑型, 可空, 
.参数 倾斜, 逻辑型, 可空, 
.参数 下划线, 逻辑型, 可空, 

.局部变量 hdc, 整数型, , , 
.局部变量 lf, 未知类型0x41010014, , , 
.局部变量 hf, 整数型, , , 
.局部变量 h, 整数型, , , 
.局部变量 hbk, 整数型, , , 
.局部变量 htext, 整数型, , , 

赋值 (未知函数_167837717 (0))
.如果真 (是否为空 (字体名称))
    赋值 (字体名称, “宋体”)
.如果真结束
.如果真 (是否为空 (字体大小))
    赋值 (字体大小, 100)
.如果真结束
.如果真 (是否为空 (加粗))
    赋值 (加粗, 真)
.如果真结束
.如果真 (是否为空 (倾斜))
    赋值 (倾斜, 假)
.如果真结束
.如果真 (是否为空 (下划线))
    赋值 (下划线, 假)
.如果真结束
.如果真 (是否为空 (颜色))
    赋值 (颜色, #红色)
.如果真结束

赋值 (lf.高度, 字体大小)
.如果 (等于 (加粗, 真))
    赋值 (lf., 900)
.否则
    赋值 (lf., 0)
.如果结束
.如果 (等于 (倾斜, 真))
    赋值 (lf., 1)
.否则
    赋值 (lf., 0)
.如果结束
.如果 (等于 (下划线, 真))
    赋值 (lf., 1)
.否则
    赋值 (lf., 0)
.如果结束
赋值 (., 134)
赋值 (lf., 字体名称)
赋值 (未知函数_167837718 ())
赋值 (未知函数_167837719 ())
赋值 (未知函数_167837720 (1))
赋值 (htext, 未知函数_167837721 (hdc, 颜色))
未知函数_167837724 (hdc, 始位置x, 始位置y, , 取文本长度 ())
未知函数_167837720 ()
未知函数_167837722 ()
未知函数_167837719 ()
未知函数_167837723 ()
释放设备场景_ (hdc)
返回 (真)




.子程序 _启动子程序, 整数型, , 请在本子程序中放置易模块初始化代码

_临时子程序 () ' 在初始化代码执行完毕后调用测试代码
返回 (0) ' 可以根据您的需要返回任意数值

.子程序 _临时子程序, 空白型, , 
 ' 本名称子程序用作测试程序用，仅在开发及调试环境中有效，编译发布程序前将被系统自动清空，请将所有用作测试的临时代码放在本子程序中。 ***注意不要修改本子程序的名称、参数及返回值类型。



 ' 不属于任何一个程序集、类模块的函数：
