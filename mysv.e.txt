 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 476
    高度 = 468
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 真
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “”
    帮助文件名 = “”





 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 4 系统核心支持库
 ' Exmlrpc A36CFD538657479eBD7C0D287BBB3D95 1 2 远程服务支持库
 ' iext 27bb20fdd3e145e4bee3db39ddd6e64c 1 2 扩展界面支持库一
 ' eGrid 0B4337DA651B4b619ACF61334A7E8B47 1 3 高级表格支持库
 ' spec A512548E76954B6E92C21055517615B0 2 1 特殊功能支持库
 ' eCalc 306AA9E31B5940399723021A0D782077 1 0 数值计算支持库





.窗口程序集 窗口程序集1, , , 

.程序集变量 mysv, 未知类型0x20001, , , 
.程序集变量 合法用户列表, 文本型, , "0", 
.程序集变量 已认证列表, 文本型, , "0", 
.程序集变量 科目数组, 文本型, , , 
.子程序 _服务开关_被单击, 空白型, , 
.如果 (等于 (.选中, 真))
    .如果 (等于 (打开 (相加 (取运行目录 (), “/my.edb”), “my”, 假, #无限制, , , ), 假))
        信息框 (“打开数据库失败”, 0, )
    .否则
        赋值 (.标题, “关闭远程连接服务”)
        重定义数组 (已认证列表, 假, 0)
        mysv.未知支持库函数_3 (10, 50)
        mysv.未知支持库函数_1 (8998, &服务方法, 假) ' 8998端口可以根据各自的要求更改
         ' 时钟1.时钟周期 ＝ 500000
    .如果结束
    
.否则
    赋值 (.标题, “打开远程连接服务”)
    赋值 (.时钟周期, 0)
    mysv.未知支持库函数_2 ()
    全部关闭 ()
    未知支持库函数_57 ()
    赋值 (., 1)
    .如果 (不等于 (取当前库 (), “”))
        信息框 (“关闭数据库失败”, 0, )
    .否则
        
    .如果结束
    
.如果结束


.子程序 服务方法, 空白型, , 
.参数 请求信息地址, 整数型, , 

.局部变量 请求客户句柄, 整数型, , , 
.局部变量 取客户IP, 文本型, , , 
.局部变量 请求代码, 文本型, , , 
.局部变量 请求信息, 文本型, , , 
.局部变量 是否需要认证, 逻辑型, , , 
.局部变量 回复消息, 文本型, , , 
.局部变量 记录计次, 整数型, , , 
.局部变量 分割已认证信息, 文本型, , "0", 
.局部变量 用户不对, 逻辑型, , , 

.如果 (等于 (mysv.未知支持库函数_8 (请求信息地址, 请求客户句柄), 假)) ' 取连接到服务器的客户列表,失败则返回
    返回 ()
.否则
    mysv.未知支持库函数_9 (请求客户句柄, 取客户IP)
.如果结束
.如果 (等于 (mysv.未知支持库函数_4 (请求信息地址, 请求代码, 请求信息), 假)) ' 取连接到服务器的请求代码,失败则返回
    返回 () ' 请求代码:(文本型)帐户,密码,使用名
.否则
    0.置文本 (相加 (到文本 (请求客户句柄), “,”, 请求代码, “,”, 请求信息))
.如果结束


.如果 (等于 (取文本左边 (请求信息, 4), “验证”))
    赋值 (是否需要认证, 假)
    .如果 (小于 (., 1))
        赋值 (是否需要认证, 假)
    .否则
        赋值 (分割已认证信息, 分割文本 (请求信息, “,”, ))
        .计次循环首 (相减 (., 1), 记录计次)
            .如果 (等于 (记录计次.未知支持库函数_10 (0), 分割已认证信息 [2])) ' 核对登录的用户和密码,不是就断开,是再核对IP
                0.置文本 (相加 (记录计次.未知支持库函数_10 (0), “认证用户 已在线”))
                mysv.未知支持库函数_12 (请求客户句柄)
                赋值 (是否需要认证, 真) ' 如果在已认证列表中,就断开该新连接的客户话柄
                跳出循环 ()
            .否则
                赋值 (是否需要认证, 假) ' 如果不在已认证列表中,就进入认证的程序
            .如果结束
            
        .计次循环尾 ()
        .如果真 (等于 (是否需要认证, 真))
            返回 ()
        .如果真结束
        
    .如果结束
    
    
    .如果 (等于 (是否需要认证, 假)) ' 如果不在已认证列表中，开始认证新连接端
        赋值 (分割已认证信息, 分割文本 (请求信息, “,”, )) ' 分开帐号和密码,记录帐号到已认证列表,并加上请求客户句柄 内容
        .计次循环首 (取数组成员数 (合法用户列表), 记录计次)
            .如果 (等于 (相加 (分割已认证信息 [2], “,”, 分割已认证信息 [3]), 合法用户列表 [记录计次])) ' 请求信息的格式为 "帐户,密码"
                分割已认证信息.未知支持库函数_38 ( [2], 1)
                1.未知支持库函数_9 (1, 1, 到文本 (请求客户句柄))
                1.未知支持库函数_9 (2, 1, 到文本 (取客户IP))
                mysv.未知支持库函数_6 (请求代码, “成功登陆”)
                赋值 (用户不对, 假)
                跳出循环 ()
            .否则
                赋值 (用户不对, 真)
            .如果结束
            
        .计次循环尾 ()
        .如果真 (等于 (用户不对, 真))
             ' 状态条1.置文本 (0, 分割已认证信息 [1] ＋ “用户认证 不正确”)
            mysv.未知支持库函数_6 (请求代码, “核对错误”)
            延迟 (2000)
            mysv.未知支持库函数_12 (请求客户句柄)
        .如果真结束
        
        返回 ()
    .否则
        
    .如果结束
    
    
    
.否则
     ' 状态条1.置文本 (0, 请求信息)
    .如果真 (等于 (取文本左边 (请求信息, 4), “断开”))
        赋值 (分割已认证信息, 分割文本 (请求信息, “,”, ))
         ' 状态条1.置文本 (0, 分割已认证信息 [2] ＋ “认证用户要求断开”)
        .计次循环首 (相减 (., 1), 记录计次)
            .如果 (等于 (记录计次.未知支持库函数_10 (0), 分割已认证信息 [2]))
                0.置文本 (相加 (记录计次.未知支持库函数_10 (0), “认证用户 已断开”))
                .如果真 (mysv.未知支持库函数_6 (请求代码, “断开”))
                    记录计次.未知支持库函数_36 ()
                    延迟 (2000)
                    mysv.未知支持库函数_12 (请求客户句柄)
                .如果真结束
                跳出循环 ()
            .否则
                 ' 状态条1.置文本 (0, 已认证名单.取数据 (记录计次, 0) ＋ “认证用户 已断开”)
            .如果结束
            
        .计次循环尾 ()
         ' mysv.断开连接 (请求客户句柄)
        返回 ()
    .如果真结束
    
    赋值 (回复消息, 数据库的访问处理方法 (请求信息))
    .如果 (不等于 (回复消息, “”))
         ' 输出调试文本 (回复消息)
         ' mysv.未知支持库函数_6 (请求代码, 回复消息)
         ' mysv.发送字节集 (请求代码, 压缩数据 (到字节集 (回复消息)))
    .否则
        
    .如果结束
    
    
.如果结束








.子程序 数据库的访问处理方法, 文本型, , 
.参数 请求信息, 文本型, , 

.局部变量 统计类型, 文本型, , , 
.局部变量 统计明细, 文本型, , , 
.局部变量 统计简述, 文本型, , , 
.局部变量 金额, 文本型, , , 
.局部变量 日期, 文本型, , , 
.局部变量 找到记录号, 整数型, , , 
.局部变量 其它, 文本型, , , 
.局部变量 回复信息, 文本型, , , 
.局部变量 分隔符, 文本型, , , 
.局部变量 读取信息, 文本型, , "0", 
.局部变量 读取数据信息, 文本型, , "0", 
.局部变量 计次, 整数型, , , 

赋值 (分隔符, “*”)
赋值 (回复信息, “”)
.如果真 (等于 (取文本左边 (请求信息, 4), “密码”))
    赋值 (读取信息, 分割文本 (请求信息, “,”, ))
    赋值 (读取信息 [1], 取文本中间 (读取信息 [1], 6, 相减 (取文本长度 (读取信息 [1]), 4)))
     ' 状态条1.置文本 (0, 读取信息 [1])
    置当前库 (“users”)
    到首记录 ()
    .判断循环首 (等于 (查找 (等于 (读 (1), 读取信息 [1])), 真))
         ' 状态条1.置文本 (0, 读 (1))
        0.置文本 (相加 (读取信息 [1], “,”, 读取信息 [2]))
        赋值 (找到记录号, 取记录号 ())
        跳过 ()
    .判断循环尾 ()
    跳到 (找到记录号)
    写 (2, 读取信息 [2])
    到首记录 ()
    重定义数组 (合法用户列表, 假, 0)
    .计次循环首 (取记录数 (), 计次)
        插入成员 (合法用户列表, 1, 相加 (读 (1), “,”, 读 (2)))
        跳过 ()
    .计次循环尾 ()
    赋值 (回复信息, “密成功”)
.如果真结束
.如果 (等于 (取文本左边 (请求信息, 6), “取全部”))
    置当前库 (“my”)
    到首记录 ()
    .如果 (大于 (取记录数 (), 0))
        .判断循环首 (不等于 (尾记录后 (), 真))
            赋值 (统计类型, 相加 (读 (“type”), 分隔符))
            赋值 (统计明细, 相加 (读 (“ty1”), 分隔符))
            赋值 (统计简述, 相加 (删首尾空 (读 (“jiansu”)), 分隔符))
            赋值 (金额, 相加 (删首尾空 (读 (“jiner”)), 分隔符))
            赋值 (日期, 相加 (删首尾空 (读 (“tdate”)), 分隔符))
            赋值 (其它, 相加 (删首尾空 (读 (“other”)), “)”))
            .如果 (等于 (是否已删除 (), 真))
                赋值 (回复信息, 相加 (回复信息, “=”, 统计类型, 统计明细, 统计简述, 金额, 日期, 其它))
            .否则
                赋值 (回复信息, 相加 (回复信息, 统计类型, 统计明细, 统计简述, 金额, 日期, 其它))
            .如果结束
            跳过 ()
        .判断循环尾 ()
        
    .否则
        赋值 (回复信息, “没有查询记录”)
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (取文本左边 (请求信息, 4), “删除”))
    赋值 (读取信息, 分割文本 (请求信息, “*”, ))
     ' 输出调试文本 (读取信息 [2])
    置当前库 (“my”)
    跳到 (到数值 (读取信息 [2]))
    .如果 (等于 (是否已删除 (), 假))
        删除 ()
        赋值 (回复信息, “删成功”)
    .否则
        恢复删除 ()
        赋值 (回复信息, “复成功”)
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (取文本左边 (请求信息, 4), “增加”))
    赋值 (.时钟周期, 0)
    赋值 (读取信息, 分割文本 (请求信息, “+”, ))
     ' 输出调试文本 (请求信息)
    赋值 (读取数据信息, 分割文本 (读取信息 [2], “*”, ))
    到文本 (相减 (., 1)).未知支持库函数_38 (1)
    .计次循环首 (6, 计次)
        1.未知支持库函数_9 (计次, 1, 读取数据信息 [计次])
    .计次循环尾 ()
    1.未知支持库函数_9 (7, 1, “0”)
    赋值 (回复信息, “增加成功”)
    赋值 (.时钟周期, 5000)
.否则
    
.如果结束
0.置文本 (回复信息)
返回 (回复信息)

.子程序 __启动窗口_创建完毕, 空白型, , 
.局部变量 计次, 整数型, , , 

.如果 (等于 (打开 (相加 (取运行目录 (), “/user.edb”), “users”, 假, #无限制, , , ), 假))
    信息框 (“打开数据库失败”, 0, )
.否则
    置当前库 (“users”)
    到首记录 ()
    .计次循环首 (取记录数 (), 计次)
        插入成员 (合法用户列表, 1, 相加 (读 (1), “,”, 读 (2)))
         ' 输出调试文本 (合法用户列表 [1])
        跳过 ()
    .计次循环尾 ()
.如果结束

.计次循环首 (取项目数 (), 计次)
    赋值 (科目数组, 相加 (科目数组, 相减 (计次, 1).取项目文本 (), “,”))
.计次循环尾 ()

.加入栏目 (470, , , )

.子程序 _最近数据2_将被编辑, 空白型, , 
赋值 (.时钟周期, 0)

.子程序 _最近数据2_结束编辑, 空白型, , 
赋值 (.时钟周期, 20000)

.子程序 _自动保存_周期事件, 空白型, , 
.局部变量 保存计次, 空白型, , , 

置当前库 (“my”)
.如果真 (大于 (., 1))
     ' 信息框 (“有”, 0, )
    .计次循环首 (相减 (., 1), 保存计次)
        .如果真 (等于 (保存计次.未知支持库函数_10 (7), “0”))
            保存计次.未知支持库函数_9 (7, 1, “1”)
            加记录 (保存计次.未知支持库函数_10 (1), 保存计次.未知支持库函数_10 (2), 保存计次.未知支持库函数_10 (3), 保存计次.未知支持库函数_10 (4), 保存计次.未知支持库函数_10 (5), 保存计次.未知支持库函数_10 (6), 保存计次.未知支持库函数_10 (7))
        .如果真结束
        
    .计次循环尾 ()
.如果真结束

赋值 (.时钟周期, 0)

.子程序 _时钟1_周期事件, 空白型, , 
.局部变量 句柄链表, 整数型, , "0", 
.局部变量 断线计次, 整数型, , , 
.局部变量 索引, 整数型, , , 
.局部变量 计次, 整数型, , , 
.局部变量 要删除, 整数型, , , 
.局部变量 删除话柄记录, 整数型, , "0", 

mysv.未知支持库函数_11 (句柄链表)
.如果 (大于 (取数组成员数 (句柄链表), 0))
    .计次循环首 (相减 (., 1), 计次)
        赋值 (要删除, 0)
        .计次循环首 (取数组成员数 (句柄链表), 索引)
            .如果 (等于 (到文本 (句柄链表 [索引]), 计次.未知支持库函数_10 (1)))
                赋值 (要删除, 0)
                跳出循环 ()
            .否则
                赋值 (要删除, 句柄链表 [索引])
            .如果结束
            
        .计次循环尾 ()
        .如果真 (大于 (要删除, 0))
            插入成员 (删除话柄记录, 1, 计次)
        .如果真结束
        
    .计次循环尾 ()
    数组排序 (删除话柄记录, 假)
    .计次循环首 (取数组成员数 (删除话柄记录), 索引)
        删除话柄记录.未知支持库函数_36 ( [索引])
    .计次循环尾 ()
    
.否则
    未知支持库函数_57 ()
    赋值 (., 1)
.如果结束



.子程序 _按钮1_被单击, 空白型, , 
.局部变量 累加金额, 未知类型0x6000A, , , 
.局部变量 累加金额1, 未知类型0x6000A, , , 
.局部变量 有删除信息, 整数型, , , 

置当前库 (“my”)
到首记录 ()
未知支持库函数_57 ()
赋值 (., 1)

.如果 (大于 (取记录数 (), 0))
    .判断循环首 (不等于 (尾记录后 (), 真))
        到文本 (取记录号 ()).未知支持库函数_38 (1)
        1.未知支持库函数_9 (2, 1, 处理科目 (到数值 (读 (2))))
        1.未知支持库函数_9 (3, 1, 读 (3))
        1.未知支持库函数_9 (4, 1, 读 (4))
        1.未知支持库函数_9 (5, 1, 读 (5))
        1.未知支持库函数_9 (6, 1, 读 (6))
        累加金额1.未知支持库函数_67 (读 (4))
        .如果 (等于 (读 (1), “0”))
            赋值 (累加金额, 累加金额.未知支持库函数_92 (累加金额1))
            1.未知支持库函数_9 (1, 1, “收入”)
        .否则
            赋值 (累加金额, 累加金额.未知支持库函数_93 (累加金额1))
            1.未知支持库函数_9 (1, 1, “支出”)
        .如果结束
        1.未知支持库函数_9 (7, 1, 累加金额.未知支持库函数_68 ())
        .如果真 (等于 (是否已删除 (), 真))
            1.未知支持库函数_22 (0, 1, 7, #红色)
            赋值 (有删除信息, 相加 (有删除信息, 1))
        .如果真结束
        跳过 ()
    .判断循环尾 ()
.否则
    
.如果结束

赋值 (., 20)
0.未知支持库函数_32 (1)
1.未知支持库函数_32 (34)
2.未知支持库函数_32 (34)
3.未知支持库函数_32 (166)
4.未知支持库函数_32 (70)
5.未知支持库函数_32 (70)
0.未知支持库函数_9 (1, 1, “类型”)
0.未知支持库函数_9 (2, 1, “明细”)
0.未知支持库函数_9 (3, 1, “摘要”)
0.未知支持库函数_9 (4, 1, “金额”)
0.未知支持库函数_9 (5, 1, “时间”)
0.未知支持库函数_9 (6, 1, “备注”)
0.未知支持库函数_9 (7, 1, “余额”)
.如果 (大于 (有删除信息, 0))
    赋值 (.可视, 真)
.否则
    赋值 (.可视, 假)
.如果结束


.子程序 处理科目, 文本型, , 
.参数 调入变量, 整数型, , 

.局部变量 计次, 整数型, , , 
.局部变量 分割科目, 文本型, , "0", 
.局部变量 相对科目, 文本型, , , 

赋值 (分割科目, 分割文本 (科目数组, “,”, ))
.计次循环首 (取项目数 (), 计次)
    .如果真 (等于 (调入变量, 相减 (计次, 1)))
        赋值 (相对科目, 分割科目 [计次])
        跳出循环 ()
    .如果真结束
    
.计次循环尾 ()
返回 (相对科目)


.子程序 _删除记_被单击, 空白型, , 
置当前库 (“my”)
彻底删除 ()


 ' 不属于任何一个程序集、类模块的函数：
