 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 380
    高度 = 406
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    窗口类名 = “”
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “按类型枚举系统QQ窗口”
    帮助文件名 = “”





 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 5 0 系统核心支持库
 ' iext 27bb20fdd3e145e4bee3db39ddd6e64c 2 0 扩展界面支持库一





.DLL命令 EnumWindows, 整数型, "user32.dll", "EnumWindows", , 
    .参数 lpEnumFunc, 子程序指针, , 
    .参数 lParam, 整数型, , 

.DLL命令 GetClassName, 整数型, "user32", "GetClassNameA", , 
    .参数 hwnd, 整数型, , 
    .参数 lpClassName, 文本型, , 
    .参数 nMaxCount, 整数型, , 

.DLL命令 GetWindowText, 整数型, "user32", "GetWindowTextA", , 
    .参数 hwnd, 整数型, , 
    .参数 lpString, 文本型, , 
    .参数 cch, 整数型, ,  

.DLL命令 GetWindow, 整数型, "", "GetWindow", , 获得一个窗口的句柄，该窗口与某源窗口有特定的关系
    .参数 源窗口, 整数型, , 
    .参数 关系, 整数型, , 

.DLL命令 IsWindow, 逻辑型, "", "", , 
    .参数 hWnd, 整数型, , 

.DLL命令 ObjectFromLresult, 整数型, "OLEACC.DLL", "", , 
    .参数 lResult, 整数型, , 
    .参数 riid, 字节集, , 
    .参数 wParam, 整数型, , 
    .参数 ppvObject, 对象, , 

.DLL命令 RegisterWindowMessage, 整数型, "", "RegisterWindowMessageA", , 获取分配给一个字串标识符的消息编号  &C000 到 &FFFF之间的一个消息编号。零意味着出错
    .参数 lpString, 文本型, , 注册消息的名字;

.DLL命令 SendMessageTimeout, 整数型, "", "SendMessageTimeoutA", , 
    .参数 MSG, 整数型, , 
    .参数 hwnd, 整数型, , 
    .参数 wParam, 整数型, , 
    .参数 lParam, 整数型, , 
    .参数 fuFlags, 整数型, , 
    .参数 uTimeout, 整数型, , 
    .参数 lpdwResult, 整数型, 传址, 

.DLL命令 IsWindowVisible, 整数型, "", "IsWindowVisible", , 
    .参数 hwnd, 空白型, , 

.DLL命令 SendMessage, 整数型, "user32", "SendMessageA", , 
    .参数 窗口句柄, 整数型, , 
    .参数 信息值, 整数型, , 
    .参数 参数一, 整数型, , 
    .参数 参数二, 整数型, , 

.DLL命令 发送消息_, 整数型, "user32", "SendMessageA", , 调用一个窗口的窗口函数，将一条消息发给那个窗口。除非消息处理完毕，否则该函数不会返回。SendMessageBynum， ;    SendMessageByString是该函数的“类型安全”声明形式  由具体的消息决定
    .参数 窗口句柄, 整数型, , 要接收消息的那个窗口的句柄
    .参数 信息值, 整数型, , 消息的标识符
    .参数 参数一, 整数型, , 具体取决于消息
    .参数 参数二, 整数型, , 具体取决于消息;

.DLL命令 FindWindowA, 整数型, "user32", "FindWindowA", , 寻找窗口列表中第一个符合指定条件的顶级窗口（在vb里使用：FindWindow最常见的一个用途是获得ThunderRTMain类的隐藏窗口的句柄；该类是所有运行中vb执行程序的一部分。获得句柄后，可用api函数GetWindowText取得这个窗口的名称；该名也是应用程序的标题）  找到窗口的句柄。如未找到相符窗口，则返回零。会设置GetLastError
    .参数 窗口类名, 文本型, , 指向包含了窗口类名的空中止（C语言）字串的指针；或设为零，表示接收任何类
    .参数 窗口文本, 文本型, , 指向包含了窗口文本（或标签）的空中止（C语言）字串的指针；或设为零，表示接收任何窗口标题  示例Dim hw&, cnt&Dim rttitle As  * 256hw& = FindWindow("ThunderRT5Main", vbNullString) ' ThunderRTMain under VB4cnt = GetWindowText(hw&, rttitle, 255)MsgBox Left, 0, "RTMain title";

.DLL命令 FindWindowExA, 整数型, "user32", "FindWindowExA", , 在窗口列表中寻找与指定条件相符的第一个子窗口  找到的窗口的句柄。如未找到相符窗口，则返回零。会设置GetLastError
    .参数 窗口句柄1, 整数型, , 在其中查找子的父窗口。如设为零，表示使用桌面窗口（通常说的顶级窗口都被认为是桌面的子窗口，所以也会对它们进行查找）
    .参数 窗口句柄2, 整数型, , 从这个窗口后开始查找。这样便可利用对FindWindowEx的多次调用找到符合条件的所有子窗口。如设为零，表示从第一个子窗口开始搜索
    .参数 欲搜索的类名1, 文本型, , 欲搜索的类名。零表示忽略
    .参数 欲搜索的类名2, 文本型, , 欲搜索的类名。零表示忽略;

.DLL命令 GetClassNameA, 整数型, "user32", "GetClassNameA", , 为指定的窗口取得类名  以字节数表示的类名长度；排除最后的空中止字符。零表示出错。会设置GetLastError
    .参数 窗口句柄, 整数型, , 欲获得类名的那个窗口的句柄
    .参数 缓冲区, 文本型, , 随同类名载入的缓冲区。预先至少必须分配nMaxCount+1个字符
    .参数 缓冲区长度, 整数型, , 由lpClassName提供的缓冲区长度;

.DLL命令 GetParent, 整数型, "user32", "GetParent", , 判断指定窗口的父窗口  父窗口的句柄。如窗口没有父，或遇到错误，则返回零。会设置GetLastError
    .参数 窗口句柄, 整数型, , 欲测试的窗口的句柄;

.DLL命令 GetWindowTextA, 整数型, "user32", "GetWindowTextA", , 取得一个窗体的标题（caption）文字，或者一个控件的内容（在vb里使用：使用vb窗体或控件的caption或text属性）  复制到lpString的字串长度；不包括空中止字符。会设置GetLastError
    .参数 窗口句柄, 整数型, , 欲获取文字的那个窗口的句柄
    .参数 缓冲区, 文本型, , 预定义的一个缓冲区，至少有cch+1个字符大小；随同窗口文字载入
    .参数 缓冲尺寸, 整数型, , lp缓冲区的长度;

.DLL命令 GetDesktopWindow, 整数型, "user32", "GetDesktopWindow", , 获得代表整个屏幕的一个窗口（桌面窗口）句柄  桌面窗口的句柄

.DLL命令 ShowWindow, 整数型, "user32", "ShowWindow", , 控制窗口的可见性（在vb里使用：针对vb窗体及控件，请使用对应的vb属性）　如窗口之前是可见的，则返回TRUE（非零），否则返回FALSE（零）
    .参数 hwnd, 整数型, , 窗口句柄，要向这个窗口应用由nCmdShow指定的命令
    .参数 nCmdShow, 整数型, , 为窗口指定可视性方面的一个命令。请用下述任何一个常数;SW_HIDE：隐藏窗口，活动状态给令一个窗口;SW_MINIMIZE：最小化窗口，活动状态给令一个窗口;SW_RESTORE：用原来的大小和位置显示一个窗口，同时令其进入活动状态;SW_SHOW：用当前的大小和位置显示一个窗口，同时令其进入活动状态;SW_SHOWMAXIMIZED：最大化窗口，并将其激活;SW_SHOWMINIMIZED：最小化窗口，并将其激活;SW_SHOWMINNOACTIVE：最小化一个窗口，同时不改变活动窗口;SW_SHOWNA：用当前的大小和位置显示一个窗口，不改变活动窗口;SW_SHOWNOACTIVATE：用最近的大小和位置显示一个窗口，同时不改变活动窗口;SW_SHOWNORMAL：与SW_RESTORE相同;

.窗口程序集 窗口程序集1, , , 

.程序集变量 数组, 整数型, , "0", 
.子程序 _时钟_周期事件, 空白型, , 
EnumWindows (&lpEnumFunc, 0)
清理 (数组)
处理 (数组)

.子程序 lpEnumFunc, 整数型, , 
.参数 hwnd, 整数型, , 
.参数 c, 整数型, , 

.局部变量 title, 文本型, , , 
.局部变量 class, 文本型, , , 
.局部变量 child, 文本型, , , 
.局部变量 类型, 文本型, , , 

连续赋值 (取空白文本 (255), title, class)
.如果真 (不等于 (hwnd, 0))
    GetWindowText (hwnd, title, 255)
    GetClassName (hwnd, class, 255)
    .如果真 (并且 (等于 (class, “TXGuiFoundation”), 不等于 (title, “TXMenuWindow”), 不等于 (title, “TXFloatingWnd”), 不等于 (title, “”)))
        赋值 (类型, 多项选择 (相加 (IsQun (hwnd), 1), “群会话”, “好友会话”, “临时会话”, “消息盒子”, “我的资料”, “主窗口”, “消息管理器”))
        .如果真 (或者 (等于 (类型, “群会话”), 等于 (类型, “好友会话”), 等于 (类型, “临时会话”)))
            赋值 (取空白文本 (255))
            未知函数_167837947 (未知函数_167837948 (5), , 255)
            .如果真 (等于 (未知函数_67174653 (), 假))
                加入成员 ()
            .如果真结束
            
        .如果真结束
        
    .如果真结束
    
.如果真结束
返回 (1)


.子程序 处理, 空白型, , 
.参数 句柄, 整数型, 数组, 

.局部变量 计次, 整数型, , , 
.局部变量 title, 文本型, , , 
.局部变量 class, 文本型, , , 

处理列表框 (取数组成员数 (句柄))
.计次循环首 (取数组成员数 (句柄), 计次)
    连续赋值 (取空白文本 (255), , )
    未知函数_167837933 ( [], 255)
    未知函数_167837934 ( [], 255)
    相减 (1).置标题 (0, )
    相减 (1).置标题 (1, 多项选择 (相加 (未知函数_67174639 ( [)], 1), “群会话”, “好友会话”, “临时会话”, “消息盒子”, “我的资料”, “主窗口”, “消息管理器”)))

.子程序 处理列表框, 空白型, , 
.参数 个数, 整数型, , 

.局部变量 项目数, 整数型, , , 
.局部变量 计次, 整数型, , , 

赋值 (项目数, 取表项数 ())
.如果真 (小于 (项目数, 个数))
    .计次循环首 (相减 (个数, 项目数), )
        .插入表项 (“”, , , , )
    .计次循环尾 ()
.如果真结束
.如果真 (大于 (项目数, 个数))
    .计次循环首 (相减 (项目数, 个数), )
        相减 (取表项数 (), 1).删除表项 ()
    .计次循环尾 ()
.如果真结束
.计次循环首 (取表项数 (), 计次)
    相减 (计次, 1).置标题 (0, “”)
    相减 (计次, 1).置标题 (1, “”)
.计次循环尾 ()
返回 ()

.子程序 IsQun, 整数型, , 
.参数 hwnd, 整数型, , 

.局部变量 child, 文本型, , , 
.局部变量 对象, 对象, , , 

赋值 (child, 取空白文本 (255))
GetClassName (GetWindow (hwnd, 5), child, 255)
.如果真 (等于 (child, “Shell Embedding”))
    赋值 (对象, 取网页文档对象 (GetWindow (hwnd, 5)))
    .如果真 (等于 (对象.读文本属性 (“title”, ), “对方资料”))
        返回 (2)
    .如果真结束
    返回 (0)
.如果真结束
.如果真 (等于 (child, “TXGuiFoundation”))
    返回 (3)
.如果真结束
.如果真 (不等于 (GetWindow (hwnd, 5), 0))
    .如果真 (等于 (GetWindow (GetWindow (hwnd, 5), 2), 0))
        返回 (5)
    .如果真结束
    
.如果真结束
.如果真 (等于 (child, “TXEdit”))
    赋值 (child, 取空白文本 (255))
    GetClassName (GetWindow (GetWindow (GetWindow (GetWindow (hwnd, 5), 2), 2), 2), child, 255)
    .如果真 (等于 (child, “Shell Embedding”))
        返回 (6)
    .如果真结束
    返回 (4)
.如果真结束
返回 (1)

.子程序 搜索, 逻辑型, , 
.参数 局_数组, 整数型, 数组, 
.参数 数, 整数型, , 

.局部变量 计次, 整数型, , , 

.计次循环首 (取数组成员数 (局_数组), 计次)
    .如果真 (等于 (局_数组 [计次], 数))
        返回 (真)
    .如果真结束
    
.计次循环尾 ()
返回 (假)

.子程序 清理, 空白型, , 
.参数 句柄, 整数型, 数组, 

.局部变量 计次, 整数型, , , 

.计次循环首 (取数组成员数 (句柄), 计次)
    .如果真 (等于 (IsWindow (句柄 [计次]), 假))
        相减 (计次, 1).置标题 (0, “”)
        删除成员 (句柄, 计次, )
        插入成员 (句柄, 计次, -1)
    .如果真结束
    
.计次循环尾 ()
.计次循环首 (取数组成员数 (句柄), 计次)
    .如果真 (小于 (取数组成员数 (句柄), 计次))
        跳出循环 ()
    .如果真结束
    .如果真 (等于 (句柄 [计次], -1))
        删除成员 (句柄, 计次, )
    .如果真结束
    
.计次循环尾 ()
.计次循环首 (取表项数 (), 计次)
    .如果真 (等于 (相减 (计次, 1).取标题 (0), “”))
        相减 (计次, 1).删除表项 ()
    .如果真结束
    
.计次循环尾 ()

.子程序 取网页对象, 对象, , 
.参数 网页句柄, 整数型, , 

.局部变量 资源编号, 整数型, , , 
.局部变量 消息值, 整数型, , , 
.局部变量 对象, 对象, , , 
.局部变量 类名, 文本型, , , 

赋值 (类名, 取空白文本 (256))
GetClassName (网页句柄, 类名, 256)
.如果真 (不等于 (类名, “Internet Explorer_Server”))
    返回 (对象)
.如果真结束
赋值 (消息值, RegisterWindowMessage (“WM_HTML_GETOBJECT”))
SendMessageTimeout (网页句柄, 消息值, 0, 0, 2, 1000, 资源编号)
ObjectFromLresult (资源编号, { 32, 197, 111, 98, 30, 164, 207, 17, 167, 49, 0, 160, 201, 8, 38, 55 }, 0, 对象)
返回 (对象)

.子程序 取网页句柄, 整数型, , 
.参数 浏览框句柄, 整数型, , 

.局部变量 hwnd, 整数型, , , 
.局部变量 类名, 文本型, , , 
.局部变量 次数, 整数型, , , 防止死循环

赋值 (hwnd, 浏览框句柄)
赋值 (类名, 取空白文本 (256))
GetClassName (hwnd, 类名, 256)
.判断循环首 (不等于 (类名, “Internet Explorer_Server”))
    赋值 (hwnd, GetWindow (hwnd, 5))
    赋值 (类名, 取空白文本 (256))
    GetClassName (hwnd, 类名, 256)
    赋值 (次数, 相加 (次数, 1))
    .如果真 (大于 (次数, 10))
        返回 (-1)
    .如果真结束
    
.判断循环尾 ()
返回 (hwnd)

.子程序 取网页文档对象, 对象, , 
.参数 浏览框句柄, 空白型, , 也可以直接为“Internet Explorer_Server”的句柄。

返回 (取网页对象 (取网页句柄 (浏览框句柄)))

.子程序 _按钮1_被单击, 空白型, , 
.局部变量 计次, 整数型, , , 
.局部变量 QQ消息, QQ发送消息类_光庆制作, , , 

.计次循环首 (取数组成员数 (数组), 计次)
    QQ消息.初始化_从句柄 (数组 [计次])
    QQ消息.加入文本 (.内容)
    QQ消息.发送_回车 ()
.计次循环尾 ()

.类模块 QQ发送消息类_光庆制作, , , 

.程序集变量 类_窗口句柄, 整数型, , , 
.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 初始化_从标题, 空白型, 公开, 
.参数 窗口标题, 文本型, , 

赋值 (类_窗口句柄, 寻找窗口句柄 (窗口标题))

.子程序 初始化_从句柄, 空白型, 公开, 
.参数 窗口句柄, 整数型, , 

赋值 (类_窗口句柄, 窗口句柄)

.子程序 加入文本, 空白型, 公开, 
.参数 文本内容, 文本型, , 

.局部变量 t, 文本型, , , 

赋值 (t, 取剪辑板文本 ())
置剪辑板文本 (文本内容)
未知函数_167837976 (类_窗口句柄, 258, 22, 2080193)
未知函数_167837976 (类_窗口句柄, 770, 0, 0)
未知函数_167837976 (类_窗口句柄, 257, 86, -1070661631)
未知函数_167837976 (类_窗口句柄, 257, 17, -1071841279)
置剪辑板文本 (t)

.子程序 寻找窗口句柄, 整数型, , 
.参数 窗口标题, 文本型, , 

.局部变量 零级句柄, 整数型, , , 
.局部变量 一级句柄, 整数型, , , 

赋值 (零级句柄, 未知函数_167837977 ())
赋值 (一级句柄, 未知函数_167837978 (零级句柄, 0, “TXGuiFoundation”, 窗口标题))
返回 (一级句柄)

.子程序 发送_回车, 空白型, 公开, 
未知函数_167837976 (类_窗口句柄, 256, 13, 18612225)
未知函数_167837976 (类_窗口句柄, 258, 13, 18612225)
未知函数_167837976 (类_窗口句柄, 257, 13, -1055129599)

.子程序 发送_CTRL回车, 空白型, 公开, 
未知函数_167837976 (类_窗口句柄, 256, 17, 1075642369)
未知函数_167837976 (类_窗口句柄, 256, 13, 18612225)
未知函数_167837976 (类_窗口句柄, 258, 10, 18612225)
未知函数_167837976 (类_窗口句柄, 257, 13, -1055129599)
未知函数_167837976 (类_窗口句柄, 257, 17, -1071841279)

.子程序 转入后台, 空白型, 公开, 
未知函数_167837979 (类_窗口句柄, 0)

.子程序 转入前台, 空白型, 公开, 
未知函数_167837979 (类_窗口句柄, 1)



 ' 不属于任何一个程序集、类模块的函数：
