 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 542
    高度 = 390
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 0
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 真
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 已保存到：D:\易语言学习\Data\科学计算器.e\_启动窗口_底图
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “易语言科学计算器”
    帮助文件名 = “”

窗口 数据配置窗口
    左边 = 50
    顶边 = 50
    宽度 = 255
    高度 = 168
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 0
    底图方式 = 1
    底色 = 15526863 '  0xECEBCF
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 真
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “数据配置”
    帮助文件名 = “”

窗口 傅立叶变换窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 546
    高度 = 431
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 0
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 真
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 已保存到：D:\易语言学习\Data\科学计算器.e\傅立叶变换窗口_底图
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “傅立叶变换”
    帮助文件名 = “”

窗口 算式解析曲线拟合运算窗口
    左边 = 50
    顶边 = 50
    宽度 = 466
    高度 = 348
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 0
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 真
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 已保存到：D:\易语言学习\Data\科学计算器.e\算式解析曲线拟合运算窗口_底图
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “”
    帮助文件名 = “”

窗口 复数运算窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 378
    高度 = 297
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 0
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 真
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 已保存到：D:\易语言学习\Data\科学计算器.e\复数运算窗口_底图
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “”
    帮助文件名 = “”

窗口 矩阵运算窗口
    左边 = 50
    顶边 = 50
    宽度 = 535
    高度 = 375
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 0
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 真
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 已保存到：D:\易语言学习\Data\科学计算器.e\矩阵运算窗口_底图
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “”
    帮助文件名 = “”

窗口 微积分窗口
    左边 = 50
    顶边 = 50
    宽度 = 552
    高度 = 325
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 0
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 真
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 已保存到：D:\易语言学习\Data\科学计算器.e\微积分窗口_底图
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “”
    帮助文件名 = “”

窗口 联立方程概要统计窗口
    左边 = 50
    顶边 = 50
    宽度 = 567
    高度 = 344
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 0
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 真
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 已保存到：D:\易语言学习\Data\科学计算器.e\联立方程概要统计窗口_底图
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “”
    帮助文件名 = “”



.图片 复数运算, " ' 已保存到：D:\易语言学习\Data\科学计算器.e\复数运算", , 
.图片 傅立叶变换, " ' 已保存到：D:\易语言学习\Data\科学计算器.e\傅立叶变换", , 
.图片 矩阵运算, " ' 已保存到：D:\易语言学习\Data\科学计算器.e\矩阵运算", , 
.图片 联立方程概要统计, " ' 已保存到：D:\易语言学习\Data\科学计算器.e\联立方程概要统计", , 
.图片 算式解析曲线拟合, " ' 已保存到：D:\易语言学习\Data\科学计算器.e\算式解析曲线拟合", , 
.图片 微积分, " ' 已保存到：D:\易语言学习\Data\科学计算器.e\微积分", , 
.图片 大数运算, " ' 已保存到：D:\易语言学习\Data\科学计算器.e\大数运算", , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 4 系统核心支持库
 ' iext2 AF6AD80AA4244A59AFB3D83ECF5173CC 1 1 扩展界面支持库二
 ' eCalc 306AA9E31B5940399723021A0D782077 1 0 数值计算支持库
 ' iext 27bb20fdd3e145e4bee3db39ddd6e64c 1 2 扩展界面支持库一
 ' shell 52F260023059454187AF826A3C07AF2A 1 0 操作系统界面功能支持库




.全局变量 全_计算精度, 文本型, , , 
.全局变量 全_小数保留精度, 文本型, , , 

.窗口程序集 大数运算窗口程序集, , , 

.程序集变量 程_参数1, 文本型, , , 做为运算的第一个参数
.程序集变量 程_参数2, 文本型, , , 做为运算的第二个参数
.程序集变量 程_弧度, 逻辑型, , , 0为角度，1为弧度
.程序集变量 程_第一次按下, 逻辑型, , , 判断程序是否是被第一次按下,0为第一次
.程序集变量 程_运算符, 文本型, , , 判断将进行那种运算
.程序集变量 程_正负, 逻辑型, , , 0为正，1为负,正负按钮用到，判断下一次转换是负数还是正数
.程序集变量 程_当前进制, 整数型, , , 记录当前进制
.子程序 _最小化按钮_被单击, 空白型, , 
赋值 (_启动窗口., 2)

.子程序 _关闭按钮_被单击, 空白型, , 
_启动窗口.销毁 ()

.子程序 _求余切按钮_被单击, 空白型, , 
.局部变量 结果, 文本型, , , 返回的运算结果
.局部变量 局_小数位数, 整数型, , , 


赋值 (结果, 子程序_求余切 (.内容))
 ' 判断结果中是否存在小数,存在小数就需要根据配置文件中的数据进行保留小数

.判断开始 (等于 (寻找文本 (结果, “.”, , 假), -1))
     ' 运算除结果后把结果作为第一个参数，清除第二个参数，清除运算符
    赋值 (.内容, 结果)
    
.默认
    
    赋值 (局_小数位数, 相减 (取文本长度 (结果), 寻找文本 (结果, “.”, , 假)))
     ' 判断下，小数的位数是否在范围之内
    .如果真 (大于 (局_小数位数, 到数值 (全_小数保留精度)))
        赋值 (结果, 取文本左边 (结果, 相减 (取文本长度 (结果), 相减 (局_小数位数, 到数值 (全_小数保留精度)))))
    .如果真结束
    
    赋值 (.内容, 结果)
.判断结束
获取焦点 ()
赋值 (.起始选择位置, -1)


.子程序 _平方按钮_被单击, 空白型, , 
.局部变量 结果, 文本型, , , 返回的运算结果
.局部变量 局_小数位数, 整数型, , , 


赋值 (结果, 子程序_平方 (.内容))
 ' 判断结果中是否存在小数,存在小数就需要根据配置文件中的数据进行保留小数

.判断开始 (等于 (寻找文本 (结果, “.”, , 假), -1))
     ' 运算除结果后把结果作为第一个参数，清除第二个参数，清除运算符
    赋值 (.内容, 结果)
    
.默认
    
    赋值 (局_小数位数, 相减 (取文本长度 (结果), 寻找文本 (结果, “.”, , 假)))
     ' 判断下，小数的位数是否在范围之内
    .如果真 (大于 (局_小数位数, 到数值 (全_小数保留精度)))
        赋值 (结果, 取文本左边 (结果, 相减 (取文本长度 (结果), 相减 (局_小数位数, 到数值 (全_小数保留精度)))))
    .如果真结束
    
    赋值 (.内容, 结果)
.判断结束

获取焦点 ()
赋值 (.起始选择位置, -1)

.子程序 _立方按钮_被单击, 空白型, , 
.局部变量 结果, 文本型, , , 
.局部变量 局_小数位数, 整数型, , , 


赋值 (结果, 子程序_立方 (.内容))
 ' 判断结果中是否存在小数,存在小数就需要根据配置文件中的数据进行保留小数

.判断开始 (等于 (寻找文本 (结果, “.”, , 假), -1))
     ' 运算除结果后把结果作为第一个参数，清除第二个参数，清除运算符
    赋值 (.内容, 结果)
    
.默认
    
    赋值 (局_小数位数, 相减 (取文本长度 (结果), 寻找文本 (结果, “.”, , 假)))
     ' 判断下，小数的位数是否在范围之内
    .如果真 (大于 (局_小数位数, 到数值 (全_小数保留精度)))
        赋值 (结果, 取文本左边 (结果, 相减 (取文本长度 (结果), 相减 (局_小数位数, 到数值 (全_小数保留精度)))))
    .如果真结束
    
    赋值 (.内容, 结果)
.判断结束
获取焦点 ()
赋值 (.起始选择位置, -1)

.子程序 _N次方按钮_被单击, 空白型, , ......
.局部变量 结果, 文本型, , , 

赋值 (程_参数1, .内容)
赋值 (.内容, “0”)
赋值 (程_第一次按下, 假)
赋值 (程_运算符, “N次方”)
获取焦点 ()
赋值 (.起始选择位置, -1)

.子程序 _角弧度按钮_被单击, 空白型, , 有问题
 ' 取这次运算是取角度还是弧度
.判断开始 (等于 (程_弧度, 假))
     ' 角度转成弧度
    赋值 (.内容, 到文本 (相除 (相乘 (到数值 (.内容), 180), #pi)))
     ' 角=弧*180/p
    
.默认
    
     ' 弧度转成角度
    赋值 (.内容, 到文本 (相除 (相乘 (到数值 (.内容), #pi), 180)))
.判断结束


赋值 (程_弧度, 取反 (程_弧度))
获取焦点 ()
赋值 (.起始选择位置, -1)

.子程序 _正负号按钮_被单击, 空白型, , 

.如果真 (等于 (寻找文本 (.内容, “-”, , 假), -1))
    赋值 (程_正负, 真)
.如果真结束


.判断开始 (等于 (程_正负, 假))
     ' 取正
    .如果真 (不等于 (.内容, “0”))
        赋值 (.内容, 子程序_取正 (.内容))
        赋值 (程_正负, 取反 (程_正负))
    .如果真结束
    
    
.默认
    
     ' 取负
    .判断开始 (等于 (寻找文本 (.内容, “-”, , 假), -1))
        .如果真 (不等于 (.内容, “0”))
            赋值 (.内容, 子程序_取负 (.内容))
            赋值 (程_正负, 取反 (程_正负))
        .如果真结束
        
        
        
    .默认
        
        .如果真 (不等于 (.内容, “0”))
            赋值 (.内容, 子程序_取正 (.内容))
        .如果真结束
        
    .判断结束
    
.判断结束

获取焦点 ()
赋值 (.起始选择位置, -1)

.子程序 _数字7按钮_被单击, 空白型, , 
.判断开始 (等于 (程_第一次按下, 假))
     ' 是第一次按下
    赋值 (.内容, “7”)
    赋值 (程_第一次按下, 真)
.默认
    
    .判断开始 (等于 (.内容, “0”))
        赋值 (.内容, “7”)
        
    .默认
        “7”.加入文本 ()
        
    .判断结束
    
.判断结束

获取焦点 ()
赋值 (.起始选择位置, -1)


.子程序 _数字8按钮_被单击, 空白型, , 
.判断开始 (等于 (程_第一次按下, 假))
     ' 是第一次按下
    赋值 (.内容, “8”)
    赋值 (程_第一次按下, 真)
.默认
    
    .判断开始 (等于 (.内容, “0”))
        赋值 (.内容, “8”)
        
    .默认
        “8”.加入文本 ()
    .判断结束
    
.判断结束

获取焦点 ()
赋值 (.起始选择位置, -1)

.子程序 _数字9按钮_被单击, 空白型, , 
.判断开始 (等于 (程_第一次按下, 假))
     ' 是第一次按下
    赋值 (.内容, “9”)
    赋值 (程_第一次按下, 真)
.默认
    
    .判断开始 (等于 (.内容, “0”))
        赋值 (.内容, “9”)
        
    .默认
        “9”.加入文本 ()
    .判断结束
    
.判断结束
获取焦点 ()
赋值 (.起始选择位置, -1)

.子程序 _数字4按钮_被单击, 空白型, , 
.判断开始 (等于 (程_第一次按下, 假))
     ' 是第一次按下
    赋值 (.内容, “4”)
    赋值 (程_第一次按下, 真)
.默认
    
    .判断开始 (等于 (.内容, “0”))
        赋值 (.内容, “4”)
        
    .默认
        “4”.加入文本 ()
    .判断结束
    
.判断结束
获取焦点 ()
赋值 (.起始选择位置, -1)

.子程序 _数字5按钮_被单击, 空白型, , 
.判断开始 (等于 (程_第一次按下, 假))
     ' 是第一次按下
    赋值 (.内容, “5”)
    赋值 (程_第一次按下, 真)
.默认
    
    .判断开始 (等于 (.内容, “0”))
        赋值 (.内容, “5”)
        
    .默认
        “5”.加入文本 ()
    .判断结束
    
.判断结束

获取焦点 ()
赋值 (.起始选择位置, -1)

.子程序 _数字6按钮_被单击, 空白型, , 
.判断开始 (等于 (程_第一次按下, 假))
     ' 是第一次按下
    赋值 (.内容, “6”)
    赋值 (程_第一次按下, 真)
.默认
    
    .判断开始 (等于 (.内容, “0”))
        赋值 (.内容, “6”)
        
    .默认
        “6”.加入文本 ()
    .判断结束
    
.判断结束
获取焦点 ()
赋值 (.起始选择位置, -1)

.子程序 _数字1按钮_被单击, 空白型, , 
.判断开始 (等于 (程_第一次按下, 假))
     ' 是第一次按下
    赋值 (.内容, “1”)
    赋值 (程_第一次按下, 真)
.默认
    
    .判断开始 (等于 (.内容, “0”))
        赋值 (.内容, “1”)
        
    .默认
        “1”.加入文本 ()
    .判断结束
    
    
.判断结束
获取焦点 ()
赋值 (.起始选择位置, -1)

.子程序 _数字2按钮_被单击, 空白型, , 
.判断开始 (等于 (程_第一次按下, 假))
     ' 是第一次按下
    赋值 (.内容, “2”)
    赋值 (程_第一次按下, 真)
.默认
    
    .判断开始 (等于 (.内容, “0”))
        赋值 (.内容, “2”)
        
    .默认
        “2”.加入文本 ()
    .判断结束
    
.判断结束

获取焦点 ()
赋值 (.起始选择位置, -1)

.子程序 _数字3按钮_被单击, 空白型, , 
.判断开始 (等于 (程_第一次按下, 假))
     ' 是第一次按下
    赋值 (.内容, “3”)
    赋值 (程_第一次按下, 真)
.默认
    
    .判断开始 (等于 (.内容, “0”))
        赋值 (.内容, “3”)
        
    .默认
        “3”.加入文本 ()
    .判断结束
    
    
.判断结束

获取焦点 ()
赋值 (.起始选择位置, -1)

.子程序 __启动窗口_创建完毕, 空白型, , 
.如果真 (等于 (寻找文件 (相加 (取运行目录 (), “\配置.ini”), ), “”))
    写到文件 (相加 (取运行目录 (), “\配置.ini”), {  })
    写配置项 (相加 (取运行目录 (), “\配置.ini”), “配置”, “计算精度”, “3”)
    写配置项 (相加 (取运行目录 (), “\配置.ini”), “配置”, “小数保留位数”, “5”)
.如果真结束

赋值 (全_计算精度, 读配置项 (相加 (取运行目录 (), “\配置.ini”), “配置”, “计算精度”, ))
赋值 (全_小数保留精度, 读配置项 (相加 (取运行目录 (), “\配置.ini”), “配置”, “小数保留位数”, ))

赋值 (程_当前进制, 10)
赋值 (.选中, 真)

赋值 (程_正负, 真)

赋值 (.内容, “0”)
赋值 (程_参数1, .内容)
连续赋值 (真, ., ., ., ., ., .)
获取焦点 ()
赋值 (.起始选择位置, -1)

.子程序 _数字0按钮_被单击, 空白型, , 
.判断开始 (等于 (程_第一次按下, 假))
     ' 是第一次按下
    赋值 (.内容, “0”)
    赋值 (程_第一次按下, 真)
.默认
    
     ' 当前数值为0时就不能再补位加0
    .如果真 (不等于 (.内容, “0”))
        “0”.加入文本 ()
    .如果真结束
    
.判断结束
获取焦点 ()
赋值 (.起始选择位置, -1)

.子程序 _小数点按钮_被单击, 空白型, , 
.如果真 (等于 (寻找文本 (.内容, “.”, , 假), -1))
    “.”.加入文本 ()
    赋值 (程_第一次按下, 真)
.如果真结束

 ' 判断下，有小数点就不加，没有就加
获取焦点 ()
赋值 (.起始选择位置, -1)

.子程序 _除按钮_被单击, 空白型, , ......
赋值 (程_参数1, .内容)
赋值 (.内容, “0”)
赋值 (程_第一次按下, 假)
赋值 (程_运算符, “除”)
获取焦点 ()
赋值 (.起始选择位置, -1)

.子程序 _乘按钮_被单击, 空白型, , ....
赋值 (程_参数1, .内容)
赋值 (.内容, “0”)
赋值 (程_第一次按下, 假)
赋值 (程_运算符, “乘”)
获取焦点 ()
赋值 (.起始选择位置, -1)

.子程序 _减按钮_被单击, 空白型, , .....
赋值 (程_参数1, .内容)
赋值 (.内容, “0”)
赋值 (程_第一次按下, 假)
赋值 (程_运算符, “减”)
获取焦点 ()
赋值 (.起始选择位置, -1)

.子程序 _加按钮_被单击, 空白型, , .....
赋值 (程_参数1, .内容)
赋值 (.内容, “0”)
赋值 (程_第一次按下, 假)
赋值 (程_运算符, “加”)
获取焦点 ()
赋值 (.起始选择位置, -1)

.子程序 _整除按钮_被单击, 空白型, , ....
赋值 (程_参数1, .内容)
赋值 (.内容, “0”)
赋值 (程_第一次按下, 假)
赋值 (程_运算符, “整除”)
获取焦点 ()
赋值 (.起始选择位置, -1)

.子程序 _求余按钮_被单击, 空白型, , ....
赋值 (程_参数1, .内容)
赋值 (.内容, “0”)
赋值 (程_第一次按下, 假)
赋值 (程_运算符, “求余”)
获取焦点 ()
赋值 (.起始选择位置, -1)

.子程序 _取整按钮_被单击, 空白型, , 
.局部变量 结果, 文本型, , , 


赋值 (结果, 子程序_取整数 (.内容))
赋值 (.内容, 结果)
获取焦点 ()
赋值 (.起始选择位置, -1)

.子程序 _傅立叶变换按钮_被单击, 空白型, , 
载入 (傅立叶变换窗口, , 真)


.子程序 _删除按钮_被单击, 空白型, , 
赋值 (.内容, “0”)
赋值 (程_参数1, “”)
赋值 (程_参数2, “”)
赋值 (程_运算符, “”)
赋值 (程_第一次按下, 假)
赋值 (程_正负, 真)


获取焦点 ()
赋值 (.起始选择位置, -1)

.子程序 _清除按钮_被单击, 空白型, , 
.判断开始 (不等于 (程_参数2, “”))
    赋值 (程_参数2, “”)
    赋值 (.内容, “0”)
.默认
    .判断开始 (不等于 (程_参数1, “”))
        赋值 (程_参数1, “”)
        赋值 (.内容, “0”)
        赋值 (程_第一次按下, 假)
    .默认
        
        赋值 (.内容, “0”)
    .判断结束
    
.判断结束

获取焦点 ()
赋值 (.起始选择位置, -1)

.子程序 _退格按钮_被单击, 空白型, , 
.局部变量 局_变量, 文本型, , , 接受显示编辑框的内容
.局部变量 局_文本数量, 整数型, , , 显示编辑框中的文本数量

.判断开始 (等于 (.内容, “0”))
    
.判断 (等于 (取文本长度 (.内容), 1))
    赋值 (.内容, “0”)
.默认
    赋值 (局_变量, .内容)
    赋值 (局_文本数量, 取文本长度 (局_变量))
    赋值 (.内容, 取文本左边 (局_变量, 相减 (局_文本数量, 1)))
.判断结束
获取焦点 ()
赋值 (.起始选择位置, -1)

.子程序 _等号按钮_被单击, 空白型, , 
.局部变量 结果, 文本型, , , 接受运算结果
.局部变量 局_小数位数, 整数型, , , 查找结果文本，找出小数位数
.局部变量 局_转换方式, 整数型, , , 


.如果真 (不等于 (程_参数1, “”))
     ' 判断第一个参数是否为空，不为空做运算，为空将不做任何运算
    .如果真 (不等于 (程_运算符, “”))
        赋值 (程_参数2, .内容)
        .如果真 (并且 (等于 (寻找文本 (程_参数1, “.”, , 假), -1), 等于 (寻找文本 (程_参数1, “-”, , 假), -1)))
            赋值 (程_参数1, 进制转换 (程_参数1, 程_当前进制, 10))
        .如果真结束
        .如果真 (并且 (等于 (寻找文本 (程_参数2, “.”, , 假), -1), 等于 (寻找文本 (程_参数2, “-”, , 假), -1)))
            赋值 (程_参数2, 进制转换 (程_参数2, 程_当前进制, 10))
            
        .如果真结束
        
        
         ' 运算
        .如果真 (等于 (程_运算符, “N次方”))
            .判断开始 (或者 (不等于 (寻找文本 (程_参数2, “.”, , 假), -1), 不等于 (寻找文本 (程_参数2, “-”, , 假), -1)))
                信息框 (“开方数不能为小数和负数”, 0, )
                
            .默认
                
                赋值 (结果, 子程序_N次方 (程_参数1, 程_参数2))
                赋值 (.内容, 结果)
            .判断结束
            
        .如果真结束
        
        .如果真 (等于 (程_运算符, “除”))
            赋值 (结果, 子程序_除 (程_参数1, 程_参数2, 全_小数保留精度))
        .如果真结束
        
        .如果真 (等于 (程_运算符, “乘”))
            赋值 (结果, 子程序_乘 (程_参数1, 程_参数2))
        .如果真结束
        
        .如果真 (等于 (程_运算符, “减”))
            赋值 (结果, 子程序_减 (程_参数1, 程_参数2))
        .如果真结束
        
        .如果真 (等于 (程_运算符, “加”))
            赋值 (结果, 子程序_加 (程_参数1, 程_参数2))
        .如果真结束
        
        .如果真 (等于 (程_运算符, “整除”))
            赋值 (结果, 子程序_整除 (程_参数1, 程_参数2))
        .如果真结束
        
        .如果真 (等于 (程_运算符, “求余”))
            赋值 (结果, 子程序_求余 (程_参数1, 程_参数2))
        .如果真结束
        
        .如果真 (等于 (.内容, “0”))
            赋值 (.内容, “0”)
        .如果真结束
        
         ' 判断结果中是否存在小数,存在小数就需要根据配置文件中的数据进行保留小数
        
         ' 因为进制转换模块出现问题，不能转换负数，就先判断下
        .判断开始 (不等于 (程_当前进制, 10))
             ' 结果不是负数的情况
            .判断开始 (等于 (寻找文本 (结果, “-”, , 假), -1))
                .判断开始 (等于 (寻找文本 (结果, “.”, , 假), -1))
                     ' 运算完成再将进制转换成当前进制
                    
                    赋值 (结果, 进制转换 (结果, 10, 程_当前进制))
                     ' 运算除结果后把结果作为第一个参数，清除第二个参数，清除运算符
                    赋值 (.内容, 结果)
                    赋值 (程_参数1, 结果)
                    赋值 (程_参数2, “”)
                    赋值 (程_运算符, “”)
                    
                .默认
                    
                    赋值 (局_小数位数, 相减 (取文本长度 (结果), 寻找文本 (结果, “.”, , 假)))
                     ' 判断下，小数的位数是否在范围之内
                    .如果真 (大于 (局_小数位数, 到数值 (全_小数保留精度)))
                        赋值 (结果, 取文本左边 (结果, 相减 (取文本长度 (结果), 相减 (局_小数位数, 到数值 (全_小数保留精度)))))
                    .如果真结束
                    
                    赋值 (结果, 进制转换 (结果, 10, 程_当前进制))
                     ' 运算完成再将进制转换成当前进制
                    
                    赋值 (.内容, 结果)
                    赋值 (程_参数1, 结果)
                    赋值 (程_参数2, “”)
                    赋值 (程_运算符, “”)
                .判断结束
                
                
            .默认
                
                赋值 (.内容, “Error”)
                赋值 (程_参数1, 结果)
                赋值 (程_参数2, “”)
                赋值 (程_运算符, “”)
                赋值 (程_第一次按下, 假)
                
            .判断结束
            
            
            
        .默认
            
             ' 当进制是十进制的时候
            .判断开始 (等于 (寻找文本 (结果, “.”, , 假), -1))
                
                 ' 运算除结果后把结果作为第一个参数，清除第二个参数，清除运算符
                赋值 (.内容, 结果)
                赋值 (程_参数1, 结果)
                赋值 (程_参数2, “”)
                赋值 (程_运算符, “”)
                
            .默认
                
                赋值 (局_小数位数, 相减 (取文本长度 (结果), 寻找文本 (结果, “.”, , 假)))
                 ' 判断下，小数的位数是否在范围之内
                .如果真 (大于 (局_小数位数, 到数值 (全_小数保留精度)))
                    赋值 (结果, 取文本左边 (结果, 相减 (取文本长度 (结果), 相减 (局_小数位数, 到数值 (全_小数保留精度)))))
                .如果真结束
                
                赋值 (.内容, 结果)
                赋值 (程_参数1, 结果)
                赋值 (程_参数2, “”)
                赋值 (程_运算符, “”)
            .判断结束
            
        .判断结束
        
    .如果真结束
    
.如果真结束

 ' 这段代码是N次方运算，次方数为负数和小数而加的，在以后的版本会更改
.如果真 (等于 (.内容, “”))
    赋值 (.内容, “0”)
    赋值 (程_参数1, “0”)
.如果真结束

获取焦点 ()
赋值 (.起始选择位置, -1)

.子程序 _取绝对值按钮_被单击, 空白型, , 
.局部变量 结果, 文本型, , , 
.局部变量 局_小数位数, 整数型, , , 

赋值 (结果, 子程序_取绝对值 (.内容))

 ' 判断结果中是否存在小数,存在小数就需要根据配置文件中的数据进行保留小数

.判断开始 (等于 (寻找文本 (结果, “.”, , 假), -1))
     ' 运算除结果后把结果作为第一个参数，清除第二个参数，清除运算符
    赋值 (.内容, 结果)
    
.默认
    
    赋值 (局_小数位数, 相减 (取文本长度 (结果), 寻找文本 (结果, “.”, , 假)))
     ' 判断下，小数的位数是否在范围之内
    .如果真 (大于 (局_小数位数, 到数值 (全_小数保留精度)))
        赋值 (结果, 取文本左边 (结果, 相减 (取文本长度 (结果), 相减 (局_小数位数, 到数值 (全_小数保留精度)))))
    .如果真结束
    
    赋值 (.内容, 结果)
.判断结束
获取焦点 ()
赋值 (.起始选择位置, -1)

.子程序 _正弦按钮_被单击, 空白型, , 
.局部变量 结果, 文本型, , , 
.局部变量 局_小数位数, 整数型, , , 

赋值 (结果, 子程序_求正弦 (.内容))
 ' 判断结果中是否存在小数,存在小数就需要根据配置文件中的数据进行保留小数

.判断开始 (等于 (寻找文本 (结果, “.”, , 假), -1))
     ' 运算除结果后把结果作为第一个参数，清除第二个参数，清除运算符
    赋值 (.内容, 结果)
    
.默认
    
    赋值 (局_小数位数, 相减 (取文本长度 (结果), 寻找文本 (结果, “.”, , 假)))
     ' 判断下，小数的位数是否在范围之内
    .如果真 (大于 (局_小数位数, 到数值 (全_小数保留精度)))
        赋值 (结果, 取文本左边 (结果, 相减 (取文本长度 (结果), 相减 (局_小数位数, 到数值 (全_小数保留精度)))))
    .如果真结束
    
    赋值 (.内容, 结果)
.判断结束

获取焦点 ()
赋值 (.起始选择位置, -1)

.子程序 _余弦按钮_被单击, 空白型, , 
.局部变量 结果, 文本型, , , 
.局部变量 局_小数位数, 整数型, , , 

赋值 (结果, 子程序_求余弦 (.内容))
 ' 判断结果中是否存在小数,存在小数就需要根据配置文件中的数据进行保留小数

.判断开始 (等于 (寻找文本 (结果, “.”, , 假), -1))
     ' 运算除结果后把结果作为第一个参数，清除第二个参数，清除运算符
    赋值 (.内容, 结果)
    
.默认
    
    赋值 (局_小数位数, 相减 (取文本长度 (结果), 寻找文本 (结果, “.”, , 假)))
     ' 判断下，小数的位数是否在范围之内
    .如果真 (大于 (局_小数位数, 到数值 (全_小数保留精度)))
        赋值 (结果, 取文本左边 (结果, 相减 (取文本长度 (结果), 相减 (局_小数位数, 到数值 (全_小数保留精度)))))
    .如果真结束
    
    赋值 (.内容, 结果)
.判断结束

获取焦点 ()
赋值 (.起始选择位置, -1)

.子程序 _求正切按钮_被单击, 空白型, , 
.局部变量 结果, 文本型, , , 
.局部变量 局_小数位数, 整数型, , , 

赋值 (结果, 子程序_求正切 (.内容))
 ' 判断结果中是否存在小数,存在小数就需要根据配置文件中的数据进行保留小数

.判断开始 (等于 (寻找文本 (结果, “.”, , 假), -1))
     ' 运算除结果后把结果作为第一个参数，清除第二个参数，清除运算符
    赋值 (.内容, 结果)
    
.默认
    
    赋值 (局_小数位数, 相减 (取文本长度 (结果), 寻找文本 (结果, “.”, , 假)))
     ' 判断下，小数的位数是否在范围之内
    .如果真 (大于 (局_小数位数, 到数值 (全_小数保留精度)))
        赋值 (结果, 取文本左边 (结果, 相减 (取文本长度 (结果), 相减 (局_小数位数, 到数值 (全_小数保留精度)))))
    .如果真结束
    
    赋值 (.内容, 结果)
.判断结束
获取焦点 ()
赋值 (.起始选择位置, -1)

.子程序 _数据配置按钮_被单击, 空白型, , 
载入 (数据配置窗口, , 真)


.子程序 _十六进制单选框_被单击, 空白型, , 
.判断开始 (或者 (不等于 (寻找文本 (.内容, “.”, , 假), -1), 不等于 (寻找文本 (.内容, “-”, , 假), -1)))
    赋值 (.选中, 假)
    获取焦点 ()
    赋值 (.起始选择位置, -1)
    
    .判断开始 (等于 (程_当前进制, 16))
        赋值 (.选中, 真)
    .判断 (等于 (程_当前进制, 10))
        赋值 (.选中, 真)
    .判断 (等于 (程_当前进制, 8))
        赋值 (.选中, 真)
    .判断 (等于 (程_当前进制, 2))
        赋值 (.选中, 真)
    .默认
        
    .判断结束
    
    信息框 (“负数和小数不能转换成16进制的数值”, 0, )
    
.默认
    
    赋值 (.选中, 真)
    
    连续赋值 (假, .选中, .选中, .选中)
    
    连续赋值 (假, ., ., ., ., ., .)
    
    连续赋值 (假, ., ., ., ., ., ., ., .)
    
    连续赋值 (真, ., ., ., ., ., ., ., ., .)
    
    赋值 (., 真)
    
    赋值 (.内容, 进制转换 (.内容, 程_当前进制, 16))
    
    赋值 (程_当前进制, 16)
    
    获取焦点 ()
    赋值 (.起始选择位置, -1)
.判断结束




.子程序 _十进制单选框_被单击, 空白型, , 

赋值 (.选中, 真)
连续赋值 (假, .选中, .选中, .选中)

连续赋值 (真, ., ., ., ., ., .)

连续赋值 (假, ., ., ., ., ., ., ., .)

赋值 (., 假)

连续赋值 (假, ., ., ., ., ., ., ., ., .)

赋值 (.内容, 进制转换 (.内容, 程_当前进制, 10))

赋值 (程_当前进制, 10)

获取焦点 ()
赋值 (.起始选择位置, -1)

.子程序 _八进制单选框_被单击, 空白型, , 
.判断开始 (或者 (不等于 (寻找文本 (.内容, “.”, , 假), -1), 不等于 (寻找文本 (.内容, “-”, , 假), -1)))
    赋值 (.选中, 假)
    获取焦点 ()
    赋值 (.起始选择位置, -1)
    
    .判断开始 (等于 (程_当前进制, 16))
        赋值 (.选中, 真)
    .判断 (等于 (程_当前进制, 10))
        赋值 (.选中, 真)
    .判断 (等于 (程_当前进制, 8))
        赋值 (.选中, 真)
    .判断 (等于 (程_当前进制, 2))
        赋值 (.选中, 真)
    .默认
        
    .判断结束
    
    信息框 (“负数和小数不能转换成8进制的数值”, 0, )
    
.默认
    
    赋值 (.选中, 真)
    
    连续赋值 (假, .选中, .选中, .选中)
    
    连续赋值 (真, ., ., ., ., ., .)
    
    连续赋值 (假, ., ., ., ., ., .)
    
    连续赋值 (真, ., .)
    
    连续赋值 (真, ., ., ., ., ., ., ., ., .)
    
    赋值 (.内容, 进制转换 (.内容, 程_当前进制, 8))
    
    赋值 (程_当前进制, 8)
    
    赋值 (., 真)
    
    获取焦点 ()
    赋值 (.起始选择位置, -1)
.判断结束




.子程序 _二进制单选框_被单击, 空白型, , 
.判断开始 (或者 (不等于 (寻找文本 (.内容, “.”, , 假), -1), 不等于 (寻找文本 (.内容, “-”, , 假), -1)))
    赋值 (.选中, 假)
    获取焦点 ()
    赋值 (.起始选择位置, -1)
    
    .判断开始 (等于 (程_当前进制, 16))
        赋值 (.选中, 真)
    .判断 (等于 (程_当前进制, 10))
        赋值 (.选中, 真)
    .判断 (等于 (程_当前进制, 8))
        赋值 (.选中, 真)
    .判断 (等于 (程_当前进制, 2))
        赋值 (.选中, 真)
    .默认
        
    .判断结束
    
    信息框 (“负数和小数不能转换成2进制的数值”, 0, )
    
.默认
    
    赋值 (.选中, 真)
    
    连续赋值 (假, .选中, .选中, .选中)
    
    连续赋值 (真, ., ., ., ., ., .)
    
    连续赋值 (真, ., ., ., ., ., ., ., .)
    
    连续赋值 (真, ., ., ., ., ., ., ., ., .)
    
    赋值 (.内容, 进制转换 (.内容, 程_当前进制, 2))
    
    赋值 (程_当前进制, 2)
    
    赋值 (., 真)
    
    获取焦点 ()
    赋值 (.起始选择位置, -1)
.判断结束


.子程序 _算式解析按钮_被单击, 空白型, , 
载入 (算式解析曲线拟合运算窗口, , 真)


.子程序 _曲线拟合按钮_被单击, 空白型, , 
载入 (算式解析曲线拟合运算窗口, , 真)

.子程序 _复数运算按钮_被单击, 空白型, , 
载入 (复数运算窗口, , 真)




.子程序 _数字A按钮_被单击, 空白型, , 
.判断开始 (等于 (程_第一次按下, 假))
     ' 是第一次按下
    赋值 (.内容, “A”)
    赋值 (程_第一次按下, 真)
.默认
    
    .判断开始 (等于 (.内容, “0”))
        赋值 (.内容, “A”)
        
    .默认
        “A”.加入文本 ()
    .判断结束
    
.判断结束
获取焦点 ()
赋值 (.起始选择位置, -1)

.子程序 _数字B按钮_被单击, 空白型, , 
.判断开始 (等于 (程_第一次按下, 假))
     ' 是第一次按下
    赋值 (.内容, “B”)
    赋值 (程_第一次按下, 真)
.默认
    
    .判断开始 (等于 (.内容, “0”))
        赋值 (.内容, “B”)
        
    .默认
        “B”.加入文本 ()
    .判断结束
    
.判断结束
获取焦点 ()
赋值 (.起始选择位置, -1)

.子程序 _数字C按钮_被单击, 空白型, , 
.判断开始 (等于 (程_第一次按下, 假))
     ' 是第一次按下
    赋值 (.内容, “C”)
    赋值 (程_第一次按下, 真)
.默认
    
    .判断开始 (等于 (.内容, “0”))
        赋值 (.内容, “C”)
        
    .默认
        “C”.加入文本 ()
    .判断结束
    
.判断结束
获取焦点 ()
赋值 (.起始选择位置, -1)

.子程序 _数字D按钮_被单击, 空白型, , 
.判断开始 (等于 (程_第一次按下, 假))
     ' 是第一次按下
    赋值 (.内容, “D”)
    赋值 (程_第一次按下, 真)
.默认
    
    .判断开始 (等于 (.内容, “0”))
        赋值 (.内容, “D”)
        
    .默认
        “D”.加入文本 ()
    .判断结束
    
.判断结束
获取焦点 ()
赋值 (.起始选择位置, -1)

.子程序 _数字E按钮_被单击, 空白型, , 
.判断开始 (等于 (程_第一次按下, 假))
     ' 是第一次按下
    赋值 (.内容, “E”)
    赋值 (程_第一次按下, 真)
.默认
    
    .判断开始 (等于 (.内容, “0”))
        赋值 (.内容, “E”)
        
    .默认
        “E”.加入文本 ()
    .判断结束
    
.判断结束
获取焦点 ()
赋值 (.起始选择位置, -1)

.子程序 _数字F按钮_被单击, 空白型, , 
.判断开始 (等于 (程_第一次按下, 假))
     ' 是第一次按下
    赋值 (.内容, “F”)
    赋值 (程_第一次按下, 真)
.默认
    
    .判断开始 (等于 (.内容, “0”))
        赋值 (.内容, “F”)
        
    .默认
        “F”.加入文本 ()
        
    .判断结束
    
.判断结束
获取焦点 ()
赋值 (.起始选择位置, -1)

.子程序 _矩阵运算按钮_被单击, 空白型, , 
载入 (矩阵运算窗口, , 真)


.子程序 _微积分按钮_被单击, 空白型, , 
载入 (微积分窗口, , 真)


.子程序 _联立方程按钮_被单击, 空白型, , 
载入 (联立方程概要统计窗口, , 真)


.子程序 _概要统计按钮_被单击, 空白型, , 
载入 (联立方程概要统计窗口, , 真)


.子程序 _显示编辑框_字符输入, 整数型, , 
.参数 字符代码, 整数型, , 

.判断开始 (等于 (字符代码, 8))
    _退格按钮_被单击 ()
.默认
    
.判断结束



.判断开始 (等于 (字符代码, 27))
    _清除按钮_被单击 ()
    返回 (0)
.判断 (等于 (字符代码, 43))
    _加按钮_被单击 ()
    返回 (0)
.判断 (等于 (字符代码, 45))
    _减按钮_被单击 ()
    返回 (0)
.判断 (等于 (字符代码, 42))
    _乘按钮_被单击 ()
    返回 (0)
.判断 (等于 (字符代码, 47))
    _除按钮_被单击 ()
    返回 (0)
.判断 (或者 (等于 (字符代码, 13), 等于 (字符代码, 61)))
    _等号按钮_被单击 ()
    返回 (0)
.判断 (等于 (.选中, 真))
    .如果真 (并且 (不等于 (字符代码, 48), 不等于 (字符代码, 49)))
        返回 (0)
    .如果真结束
    
.判断 (等于 (.选中, 真))
    .判断开始 (等于 (字符代码, 46))
        _小数点按钮_被单击 ()
        返回 (0)
    .判断 (或者 (小于 (字符代码, 48), 大于 (字符代码, 57)))
        返回 (0)
    .默认
        
    .判断结束
    
    
.判断 (等于 (.选中, 真))
    .如果真 (或者 (小于 (字符代码, 48), 大于 (字符代码, 55)))
        返回 (0)
    .如果真结束
    
.判断 (等于 (.选中, 真))
    .如果真 (或者 (小于 (字符代码, 48), 并且 (大于 (字符代码, 57), 小于 (字符代码, 65)), 并且 (大于 (字符代码, 70), 小于 (字符代码, 97)), 大于 (字符代码, 102)))
        返回 (0)
    .如果真结束
    
.默认
    
.判断结束


.判断开始 (等于 (程_第一次按下, 假))
     ' 是第一次按下
    赋值 (.内容, 到大写 (字符 (字符代码)))
    赋值 (程_第一次按下, 真)
.默认
    
    .判断开始 (等于 (.内容, “0”))
        赋值 (.内容, 到大写 (字符 (字符代码)))
        
    .默认
        到大写 (字符 (字符代码)).加入文本 ()
    .判断结束
    
.判断结束


赋值 (.起始选择位置, -1)



.子程序 进制转换, 文本型, , 进行转换的子程序
.参数 被转换文本, 文本型, , 
.参数 被转换进制, 整数型, , 
.参数 转换的进制, 整数型, , 

.局部变量 欲转换文本, 文本型, , , 输入的文本串
.局部变量 临时文本, 文本型, , , 存放从输入的文本串中取出的一个文本
.局部变量 临时数值, 长整数型, , , 
.局部变量 计次变量1, 整数型, , , 
.局部变量 计次变量2, 整数型, , , 
.局部变量 次方数, 未知类型0x3000A, , , 每一位数字对应的10的次方数
.局部变量 转换的进制大数1, 未知类型0x3000A, , , 要转换的进制-1
.局部变量 转换的进制大数, 未知类型0x3000A, , , 要转换的进制
.局部变量 被转换进制大数, 未知类型0x3000A, , , 被转换的进制
.局部变量 临时大数, 未知类型0x3000A, , , 将被转换数字转换成的大数
.局部变量 余数大数, 未知类型0x3000A, , , 存放求出的余数大数
.局部变量 数值1大数, 未知类型0x3000A, , , 只存放1
.局部变量 临时大数1, 未知类型0x3000A, , , 将被转换数字的每一位转换成的大数
.局部变量 临时变量, 整数型, , , 

.如果真 (或者 (小于 (被转换进制, 2), 小于 (转换的进制, 2), 大于 (被转换进制, 36), 大于 (转换的进制, 36))) ' 判断两个“进制系数”是否正确
    返回 (“参数错误-进制只能在2-36之间”)
.如果真结束
赋值 (被转换文本, 到大写 (到半角 (被转换文本))) ' 规范参数
.变量循环首 (1, 取文本长度 (被转换文本), 1, 计次变量1) ' 判断输入的数字文本是否有效
    赋值 (临时文本, 取文本中间 (被转换文本, 计次变量1, 1))
    .如果真 (等于 (寻找文本 (取文本左边 (“0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ”, 被转换进制), 临时文本, , 假), -1))
        赋值 (临时文本, 相加 (“参数错误-”, 被转换文本, “不是一个有效的”, 取文本左边 (数值到金额 (被转换进制, 真), 相减 (取文本长度 (数值到金额 (被转换进制, 真)), 4)), “进制数！”))
        跳出循环 ()
    .如果真结束
     ' 全部查找完毕
    .如果真 (等于 (计次变量1, 取文本长度 (被转换文本)))
        赋值 (临时文本, “”)
    .如果真结束
    
.变量循环尾 ()

 ' 如果临时文本不为空，说明此数字文本无效！
.如果真 (不等于 (临时文本, “”))
    返回 (临时文本)
.如果真结束
 ' 以上为数据正确性校验处理代码

.如果真 (等于 (被转换进制, 转换的进制)) ' 相同时，不用进行转换
    返回 (被转换文本)
.如果真结束

.变量循环首 (1, 取文本长度 (被转换文本), 1, 计次变量1) ' 先将要转换的数字放入大数中
    次方数.未知支持库函数_69 (1) ' 数值1不能直接和大数类型计算，所以先放入一个大数中
    被转换进制大数.未知支持库函数_69 (被转换进制)
    .计次循环首 (相减 (取文本长度 (被转换文本), 计次变量1), 计次变量2) ' 求次方
        赋值 (次方数, 次方数.未知支持库函数_94 (被转换进制大数))
    .计次循环尾 ()
    赋值 (临时变量, 相减 (寻找文本 (“0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ”, 取文本中间 (被转换文本, 计次变量1, 1), , 真), 1))
    临时大数1.未知支持库函数_69 (临时变量)
    赋值 (临时大数1, 临时大数1.未知支持库函数_94 (次方数))
    赋值 (临时大数, 临时大数1.未知支持库函数_92 (临时大数)) ' 临时大数即为最后转换成的大数
.变量循环尾 ()
转换的进制大数1.未知支持库函数_69 (相减 (转换的进制, 1))
转换的进制大数.未知支持库函数_69 (转换的进制)
数值1大数.未知支持库函数_69 (1) ' 数值1不能直接和大数类型计算，所以先放入一个大数中
.判断循环首 (等于 (临时大数.未知支持库函数_86 (转换的进制大数1), 真)) ' 开始进制转换,除进制数取余数
    赋值 (余数大数, 临时大数.未知支持库函数_97 (转换的进制大数)) ' 求出的余数
    赋值 (临时大数1, 余数大数.未知支持库函数_92 (数值1大数)) ' 求出的余数＋1
    赋值 (临时数值, 到数值 (临时大数1.未知支持库函数_68 ())) ' 最后的余数
    赋值 (欲转换文本, 相加 (取文本中间 (“0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ”, 临时数值, 1), 欲转换文本)) ' 找出每一个余数对应的数字
    赋值 (临时大数, 临时大数.未知支持库函数_95 (转换的进制大数, 10)) ' 取出剩余的数字
    赋值 (临时大数, 临时大数.未知支持库函数_90 ())
.判断循环尾 ()
赋值 (临时数值, 临时大数.未知支持库函数_77 ()) ' 最后剩下的余数
赋值 (欲转换文本, 相加 (取文本中间 (“0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ”, 相加 (临时数值, 1), 1), 欲转换文本)) ' 整数转换结束
返回 (欲转换文本)

.子程序 __启动窗口_获得焦点, 空白型, , 
获取焦点 ()
赋值 (.起始选择位置, -1)

.子程序 _帮助按钮_被单击, 空白型, , 
.局部变量 目录, 文本型, , , 

赋值 (目录, 取临时文件名 ())
写到文件 (目录, #大数运算)
运行 (相加 (“notepad.exe ”, 目录), 假, )

.程序集 大数运算程序集, , , 

.子程序 子程序_求余切, 文本型, 公开, 
.参数 参_运算值, 文本型, , 

.局部变量 局_运算值, 未知类型0x3000A, , , 
.局部变量 结果, 未知类型0x3000A, , , 

局_运算值.未知支持库函数_67 (参_运算值)
赋值 (结果, 局_运算值.未知支持库函数_108 (到数值 (全_计算精度)))
返回 (结果.未知支持库函数_68 ())


.子程序 子程序_平方, 文本型, 公开, 
.参数 参_运算值, 文本型, , 

.局部变量 局_运算值, 未知类型0x3000A, , , 
.局部变量 结果, 未知类型0x3000A, , , 

局_运算值.未知支持库函数_67 (参_运算值)
赋值 (结果, 局_运算值.未知支持库函数_94 (局_运算值))
返回 (结果.未知支持库函数_68 ())


.子程序 子程序_立方, 文本型, 公开, 
.参数 参_运算值, 文本型, , 

.局部变量 局_运算值, 未知类型0x3000A, , , 
.局部变量 结果, 未知类型0x3000A, , , 

局_运算值.未知支持库函数_67 (参_运算值)
赋值 (结果, 局_运算值)
.计次循环首 (2, )
    赋值 (结果, 结果.未知支持库函数_94 (局_运算值))
.计次循环尾 ()
返回 (结果.未知支持库函数_68 ())


.子程序 子程序_N次方, 文本型, 公开, 
.参数 参_运算值, 文本型, , 
.参数 参_运算次数, 文本型, , 

.局部变量 局_运算值, 未知类型0x3000A, , , 
.局部变量 结果, 未知类型0x3000A, , , 

局_运算值.未知支持库函数_67 (参_运算值)
赋值 (结果, 局_运算值)
.计次循环首 (相减 (到数值 (参_运算次数), 1), )
    赋值 (结果, 结果.未知支持库函数_94 (局_运算值))
.计次循环尾 ()
返回 (结果.未知支持库函数_68 ())


.子程序 子程序_取整数, 文本型, 公开, 
.参数 参_数据, 文本型, , 

.局部变量 局_大数, 未知类型0x3000A, , , 

局_大数.未知支持库函数_67 (参_数据)
赋值 (局_大数, 局_大数.未知支持库函数_90 ())
返回 (局_大数.未知支持库函数_68 ())

.子程序 子程序_取绝对值, 文本型, 公开, 
.参数 参_数据, 文本型, , 

.局部变量 局_大数, 未知类型0x3000A, , , 

局_大数.未知支持库函数_67 (参_数据)
赋值 (局_大数, 局_大数.未知支持库函数_99 ())
返回 (局_大数.未知支持库函数_68 ())

.子程序 子程序_求正弦, 文本型, 公开, 
.参数 参_数据, 文本型, , 

.局部变量 局_大数, 未知类型0x3000A, , , 

局_大数.未知支持库函数_67 (参_数据)
赋值 (局_大数, 局_大数.未知支持库函数_105 (到数值 (全_计算精度)))
返回 (局_大数.未知支持库函数_68 ())

.子程序 子程序_求余弦, 文本型, 公开, 
.参数 参_数据, 文本型, , 

.局部变量 局_大数, 未知类型0x3000A, , , 

局_大数.未知支持库函数_67 (参_数据)
赋值 (局_大数, 局_大数.未知支持库函数_106 (到数值 (全_计算精度)))
返回 (局_大数.未知支持库函数_68 ())

.子程序 子程序_求正切, 文本型, 公开, 
.参数 参_数据, 文本型, , 

.局部变量 局_大数, 未知类型0x3000A, , , 

局_大数.未知支持库函数_67 (参_数据)
赋值 (局_大数, 局_大数.未知支持库函数_107 (到数值 (全_计算精度)))
返回 (局_大数.未知支持库函数_68 ())



.子程序 子程序_加, 文本型, 公开, 计算两个大数相加
.参数 数据1, 文本型, , 加数1
.参数 数据2, 文本型, , 加数2

.局部变量 导入数据1, 未知类型0x3000A, , , 
.局部变量 导入数据2, 未知类型0x3000A, , , 
.局部变量 结果, 未知类型0x3000A, , , 

导入数据1.未知支持库函数_67 (数据1)
导入数据2.未知支持库函数_67 (数据2)
赋值 (结果, 导入数据1.未知支持库函数_92 (导入数据2))
返回 (结果.未知支持库函数_68 ())

.子程序 子程序_减, 文本型, 公开, 计算两个大数相减
.参数 数据1, 文本型, , 被减数
.参数 数据2, 文本型, , 减数

.局部变量 导入数据1, 未知类型0x3000A, , , 
.局部变量 导入数据2, 未知类型0x3000A, , , 
.局部变量 结果, 未知类型0x3000A, , , 

导入数据1.未知支持库函数_67 (数据1)
导入数据2.未知支持库函数_67 (数据2)
赋值 (结果, 导入数据1.未知支持库函数_93 (导入数据2))
返回 (结果.未知支持库函数_68 ())

.子程序 子程序_乘, 文本型, 公开, 计算两个大数相乘
.参数 数据1, 文本型, , 乘数1
.参数 数据2, 文本型, , 乘数2

.局部变量 导入数据1, 未知类型0x3000A, , , 
.局部变量 导入数据2, 未知类型0x3000A, , , 
.局部变量 结果, 未知类型0x3000A, , , 

导入数据1.未知支持库函数_67 (数据1)
导入数据2.未知支持库函数_67 (数据2)
赋值 (结果, 导入数据1.未知支持库函数_94 (导入数据2))
返回 (结果.未知支持库函数_68 ())

.子程序 子程序_除, 文本型, 公开, 计算两个大数相除
.参数 数据1, 文本型, , 被除数
.参数 数据2, 文本型, , 除数
.参数 保留位数, 文本型, , 小数保留位数

.局部变量 导入数据1, 未知类型0x3000A, , , 
.局部变量 导入数据2, 未知类型0x3000A, , , 
.局部变量 结果, 未知类型0x3000A, , , 

导入数据1.未知支持库函数_67 (数据1)
导入数据2.未知支持库函数_67 (数据2)
赋值 (结果, 导入数据1.未知支持库函数_95 (导入数据2, 到数值 (保留位数)))
返回 (结果.未知支持库函数_68 ())

.子程序 子程序_整除, 文本型, 公开, 计算两个大数相整除
.参数 数据1, 文本型, , 被除数
.参数 数据2, 文本型, , 除数

.局部变量 导入数据1, 未知类型0x3000A, , , 
.局部变量 导入数据2, 未知类型0x3000A, , , 
.局部变量 结果, 未知类型0x3000A, , , 

导入数据1.未知支持库函数_67 (数据1)
导入数据2.未知支持库函数_67 (数据2)
赋值 (结果, 导入数据1.未知支持库函数_96 (导入数据2))
返回 (结果.未知支持库函数_68 ())

.子程序 子程序_求余, 文本型, 公开, 计算两个大数的余数
.参数 数据1, 文本型, , 被除数
.参数 数据2, 文本型, , 除数

.局部变量 导入数据1, 未知类型0x3000A, , , 
.局部变量 导入数据2, 未知类型0x3000A, , , 
.局部变量 结果, 未知类型0x3000A, , , 

导入数据1.未知支持库函数_67 (数据1)
导入数据2.未知支持库函数_67 (数据2)
赋值 (结果, 导入数据1.未知支持库函数_97 (导入数据2))
返回 (结果.未知支持库函数_68 ())


.子程序 子程序_取正, 文本型, , 
.参数 参_数据, 文本型, , 

赋值 (参_数据, 取文本右边 (参_数据, 相减 (取文本长度 (参_数据), 1)))
返回 (参_数据)

.子程序 子程序_取负, 文本型, , 
.参数 参_数据, 文本型, , 

赋值 (参_数据, 相加 (“-”, 参_数据))
返回 (参_数据)

.类模块 傅立叶变换, , , 

.程序集变量 类_傅立叶变换, 未知类型0x30003, , , 
.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 求傅立叶变换, 空白型, 公开, 求傅立叶变换::成功返回数据集实值与数据集虚值数组，失败返回空数组。返回的数组为参数数组
.参数 数据集实值, 双精度小数型, 参考 数组, 必需的； 双精度小数型，参数数据只能提供数组数据。该参数是维数为"数据点数"的向量。假设本参数是xr[维数]数组，抽样数据集的实值包含从xr[1]起始的数组xr中。它返回数组xr中FFT调和函数的余弦系数。其中,xr[1]保存了DC分量,xr[2]保存了第1个谐波,xr[3]保存了第2个谐波，依次类推。系数与采样数据集中数据点的个数有关。对每一调和项a(i) * cos(...)的实际余弦函数用numdat / 2 除。
.参数 数据集虚值, 双精度小数型, 参考 数组, 必需的； 双精度小数型，参数数据只能提供数组数据。该参数是维数为"数据点数"的向量，数据集的假设本参数是yi[维数]数组虚值包含从yi[1]起始的yi中。它返回yi中FFT调和函数的正弦系数 - 其中yi[2]保存第1个谐波，yi[3]保存了第2个谐波，依次类推。系数与采样数据集中数据点个数有关。对调和项a(i)sin(...)的实际正弦系数用numdat / 2 除。

.局部变量 数据点数, 整数型, , , 
.局部变量 返回, 逻辑型, , , 

赋值 (数据点数, 取数组成员数 (数据集实值))
赋值 (返回, 类_傅立叶变换.未知支持库函数_24 (数据集实值, 数据集虚值, 数据点数))
.如果真 (等于 (返回, 假))
    清除数组 (数据集实值)
    清除数组 (数据集虚值)
.如果真结束


.子程序 求傅立叶反变换, 空白型, 公开, 求傅立叶反变换::::成功返回数据集实值与数据集虚值数组，失败返回空数组。返回的数组为参数数组
.参数 匿名参数_341, 双精度小数型, 参考 数组, 
.参数 匿名参数_342, 双精度小数型, 参考 数组, 

.局部变量 数据点数, 整数型, , , 
.局部变量 返回, 逻辑型, , , 

赋值 (数据点数, 取数组成员数 (匿名参数_341))
赋值 (返回, 类_傅立叶变换.未知支持库函数_25 (匿名参数_341, 匿名参数_342, 数据点数))
.如果真 (等于 (返回, 假))
    清除数组 (匿名参数_341)
    清除数组 (匿名参数_342)
.如果真结束


.子程序 窗口傅立叶, 空白型, 公开, 窗口傅立叶::成功返回数据集实值与数据集虚值数组，失败返回空数组。返回的数组为参数数组
.参数 匿名参数_345, 双精度小数型, 参考 数组, 
.参数 匿名参数_346, 双精度小数型, 参考 数组, 
.参数 抽样数据窗口, 整数型, , 必需的； 整数型。包含应用于抽样数据的窗口，为以下常量之一：0、#矩形Window；1、#Parzen Window2、#Hanning Window；3、#Welch Window；4、#Hamming Window；5、#Exact Blackman Window。

.局部变量 数据点数, 整数型, , , 
.局部变量 返回, 逻辑型, , , 

赋值 (数据点数, 取数组成员数 (匿名参数_345))
赋值 (返回, 类_傅立叶变换.未知支持库函数_26 (匿名参数_345, 匿名参数_346, 数据点数, 抽样数据窗口))
.如果真 (等于 (返回, 假))
    清除数组 (匿名参数_345)
    清除数组 (匿名参数_346)
.如果真结束


.子程序 二维傅立叶变换, 空白型, 公开, 二维傅立叶变换::成功返回数据集实值与数据集虚值数组，失败返回空数组。返回的数组为参数数组
.参数 匿名参数_350, 双精度小数型, 参考 数组, 
.参数 匿名参数_351, 双精度小数型, 参考 数组, 
.参数 标志, 逻辑型, , 必需的； 逻辑型。真表示反变换，假表示正变换。

.局部变量 返回, 逻辑型, , , 

赋值 (返回, 类_傅立叶变换.未知支持库函数_27 (匿名参数_350, 匿名参数_351, 标志))
.如果真 (等于 (返回, 假))
    清除数组 (匿名参数_350)
    清除数组 (匿名参数_351)
.如果真结束


.子程序 求能谱周期图, 空白型, 公开, 求能谱周期图::成功返回数据集实值与数据集虚值数组，失败返回空数组。返回的数组为参数数组
.参数 匿名参数_354, 双精度小数型, 参考 数组, 
.参数 匿名参数_355, 双精度小数型, 参考 数组, 
.参数 时间时隔, 双精度小数型, , 必需的； 双精度小数型。包含了前两个参数数据集中样本之间的时间间隔。

.局部变量 返回, 逻辑型, , , 

赋值 (返回, 类_傅立叶变换.未知支持库函数_28 (匿名参数_354, 匿名参数_355, 时间时隔))
.如果真 (等于 (返回, 假))
    清除数组 (匿名参数_354)
    清除数组 (匿名参数_355)
.如果真结束


.窗口程序集 数据配置窗口程序集, , , 

.子程序 _确定按钮_被单击, 空白型, , 
.局部变量 局_成功次数, 整数型, , , 

.判断开始 (等于 (.内容, “”))
    信息框 (“数据不能为空”, 0, )
    获取焦点 ()
.判断 (等于 (.内容, “”))
    信息框 (“数据不能为空”, 0, )
    获取焦点 ()
.默认
    
    .判断开始 (不等于 (寻找文本 (.内容, “-”, , 假), -1))
        信息框 (“计算精度不能为负数”, 0, )
    .判断 (不等于 (寻找文本 (.内容, “.”, , 假), -1))
        信息框 (“计算精度不能为小数”, 0, )
    .判断 (不等于 (寻找文本 (.内容, “-”, , 假), -1))
        信息框 (“小数保留位数不能为负数”, 0, )
    .判断 (不等于 (寻找文本 (.内容, “.”, , 假), -1))
        信息框 (“小数保留位数不能为小数”, 0, )
    .判断 (大于 (到数值 (.内容), 50))
        信息框 (“小数保留位数不能大于50”, 0, )
    .判断 (大于 (到数值 (.内容), 50))
        信息框 (“小数保留位数不能大于50”, 0, )
    .判断 (等于 (寻找文件 (相加 (取运行目录 (), “\配置.ini”), ), “”))
        信息框 (“没有找到配置文件，请确认文件存在”, 0, )
    .默认
        
        .如果真 (等于 (写配置项 (相加 (取运行目录 (), “\配置.ini”), “配置”, “计算精度”, .内容), 真))
            赋值 (局_成功次数, 相加 (局_成功次数, 1))
        .如果真结束
        
        .如果真 (等于 (写配置项 (相加 (取运行目录 (), “\配置.ini”), “配置”, “小数保留位数”, .内容), 真))
            赋值 (局_成功次数, 相加 (局_成功次数, 1))
        .如果真结束
        
        .判断开始 (等于 (局_成功次数, 2))
            赋值 (全_计算精度, .内容)
            赋值 (全_小数保留精度, .内容)
            信息框 (“更新数据成功”, 0, )
            销毁 ()
        .默认
            信息框 (“更新数据失败”, 0, )
        .判断结束
        
    .判断结束
    
.判断结束


.子程序 _取消按钮_被单击, 空白型, , 
销毁 ()


.子程序 _关闭按钮_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

销毁 ()


.子程序 _数据配置窗口_创建完毕, 空白型, , 
赋值 (.内容, 读配置项 (相加 (取运行目录 (), “\配置.ini”), “配置”, “计算精度”, ))
赋值 (.内容, 读配置项 (相加 (取运行目录 (), “\配置.ini”), “配置”, “小数保留位数”, ))


.窗口程序集 傅立叶变换窗口程序集, , , 

.程序集变量 一维实, 整数型, , , 二维傅立叶变换
.程序集变量 二维实, 整数型, , , 二维傅立叶变换
.程序集变量 一维虚, 整数型, , , 二维傅立叶变换
.程序集变量 二维虚, 整数型, , , 二维傅立叶变换
.程序集变量 二维数据集实值, 双精度小数型, , "0", 二维傅立叶变换
.程序集变量 二维数据集虚值, 双精度小数型, , "0", 二维傅立叶变换
.程序集变量 数据集实值, 双精度小数型, , "0", 傅立叶变换其他
.程序集变量 数据集虚值, 双精度小数型, , "0", 傅立叶变换其他
.程序集变量 类_傅立叶变换, 傅立叶变换, , , 
.程序集变量 当前运算, 文本型, , , 
.子程序 _傅立叶变换单选框_被单击, 空白型, , 
连续赋值 (真, .禁止, .禁止)
.如果真 (不等于 (当前运算, “傅立叶变换”))
    清空 ()
    清空 ()
.如果真结束
赋值 (当前运算, “傅立叶变换”)

.子程序 _傅立叶反变换单选框_被单击, 空白型, , 
连续赋值 (真, .禁止, .禁止)
.如果真 (不等于 (当前运算, “傅立叶反变换”))
    清空 ()
    清空 ()
.如果真结束
赋值 (当前运算, “傅立叶反变换”)

.子程序 _窗口傅立叶单选框_被单击, 空白型, , 
赋值 (.禁止, 假)
赋值 (.禁止, 真)
.如果真 (不等于 (当前运算, “窗口傅立叶”))
    清空 ()
    清空 ()
.如果真结束
赋值 (当前运算, “窗口傅立叶”)

.子程序 _求能谱周期图单选框_被单击, 空白型, , 
赋值 (.禁止, 真)
赋值 (.禁止, 假)
.如果真 (不等于 (当前运算, “求能谱周期图”))
    清空 ()
    清空 ()
.如果真结束
赋值 (当前运算, “求能谱周期图”)

.子程序 _数据集实值单选框_被单击, 空白型, , 二维傅立叶变换
二维数据刷新_子程序 ()

.子程序 _数据集虚值单选框_被单击, 空白型, , 二维傅立叶变换
二维数据刷新_子程序 ()

.子程序 二维数据刷新_子程序, 空白型, , 二维傅立叶变换
.局部变量 计次, 整数型, , , 

清空 ()
清空 ()
 ' 成员数量列表框.加入项目 (“成员数量”, )
 ' 成员数据列表框.加入项目 (“成员数据”, )

.判断开始 (等于 (.选中, 真))
    .计次循环首 (一维实, 计次)
        到文本 (计次).加入项目 ()
    .计次循环尾 ()
.默认
    .计次循环首 (一维虚, 计次)
        到文本 (计次).加入项目 ()
    .计次循环尾 ()
.判断结束


.子程序 _成员数量列表框_列表项被选择, 空白型, , 二维傅立叶变换
.局部变量 计次, 整数型, , , 

清空 ()
 ' 成员数据列表框.加入项目 (“成员数据”, )
.如果真 (小于 (.现行选中项, 0))
    返回 ()
.如果真结束
.判断开始 (等于 (.选中, 真))
    .计次循环首 (二维实, 计次)
        到文本 (二维数据集实值 [相加 (.现行选中项, 1)] [计次]).加入项目 ()
    .计次循环尾 ()
.默认
    .计次循环首 (二维虚, 计次)
        到文本 (二维数据集虚值 [相加 (.现行选中项, 1)] [计次]).加入项目 ()
    .计次循环尾 ()
.判断结束


.子程序 _成员数据编辑框_内容被改变, 空白型, , 二维傅立叶变换
.如果真 (小于 (.现行选中项, 0))
    返回 ()
.如果真结束
.判断开始 (等于 (.选中, 真))
    赋值 (二维数据集实值 [相加 (.现行选中项, 1)] [相加 (.现行选中项, 1)], 到数值 (.内容))
.默认
    赋值 (二维数据集虚值 [相加 (.现行选中项, 1)] [相加 (.现行选中项, 1)], 到数值 (.内容))
.判断结束

.置项目文本 (.现行选中项, .内容)


.子程序 _清空列表框按钮_被单击, 空白型, , 
清空 ()
清空 ()


.子程序 _添加按钮_被单击, 空白型, , 
.局部变量 项目索引, 整数型, , , 
.局部变量 数据, 双精度小数型, , , 

赋值 (数据, 到数值 (.内容))
.判断开始 (等于 (.选中, 真))
    到文本 (数据).加入项目 ()
    赋值 (.现行选中项, 相减 (取项目数 (), 1))
.判断 (等于 (.选中, 真))
    到文本 (数据).加入项目 ()
    赋值 (.现行选中项, 相减 (取项目数 (), 1))
.默认
    
.判断结束
赋值 (.内容, “”)
获取焦点 ()

.子程序 _修改按钮_被单击, 空白型, , 
.局部变量 数据, 双精度小数型, , , 

赋值 (数据, 到数值 (.内容))
.判断开始 (等于 (.选中, 真))
    .置项目文本 (.现行选中项, 到文本 (数据))
.判断 (等于 (.选中, 真))
    .置项目文本 (.现行选中项, 到文本 (数据))
.默认
    
.判断结束


.子程序 _删除按钮_被单击, 空白型, , 
.局部变量 现行选中项目, 整数型, , , 

.判断开始 (等于 (.选中, 真))
    赋值 (现行选中项目, .现行选中项)
    现行选中项目.删除项目 ()
    赋值 (.现行选中项, 相减 (取项目数 (), 1))
.判断 (等于 (.选中, 真))
    赋值 (现行选中项目, .现行选中项)
    现行选中项目.删除项目 ()
    赋值 (.现行选中项, 相减 (取项目数 (), 1))
.默认
    
.判断结束


.子程序 _开始计算按钮_被单击, 空白型, , 
.局部变量 计次, 整数型, , , 

清除数组 (数据集实值)
清除数组 (数据集虚值)
.计次循环首 (取项目数 (), 计次) ' 取得数据集实值
    加入成员 (数据集实值, 到数值 (相减 (计次, 1).取项目文本 ()))
.计次循环尾 ()
.计次循环首 (取项目数 (), 计次) ' 取得数据集虚值
    加入成员 (数据集虚值, 到数值 (相减 (计次, 1).取项目文本 ()))
.计次循环尾 ()
清空 ()
清空 ()
.判断开始 (等于 (.选中, 真)) ' 求傅立叶变换
    类_傅立叶变换.求傅立叶变换 (数据集实值, 数据集虚值)
.判断 (等于 (.选中, 真)) ' 求傅立叶反变换
    类_傅立叶变换.求傅立叶反变换 (数据集实值, 数据集虚值)
.判断 (等于 (.选中, 真)) ' 窗口傅立叶
    类_傅立叶变换.窗口傅立叶 (数据集实值, 数据集虚值, .现行选中项)
.判断 (等于 (.选中, 真)) ' 求能谱周期图
    类_傅立叶变换.求能谱周期图 (数据集实值, 数据集虚值, 到数值 (.内容))
.默认
    
.判断结束

.如果真 (等于 (取数组成员数 (数据集实值), 0)) ' 如果运算失败返回空数组
    返回 ()
.如果真结束
.计次循环首 (取数组成员数 (数据集实值), 计次) ' 将成功返回的数组数据加入列表框中
    到文本 (数据集实值 [计次]).加入项目 ()
    到文本 (数据集虚值 [计次]).加入项目 ()
.计次循环尾 ()


.子程序 _二维开始计算按钮_被单击, 空白型, , 
.局部变量 标志, 逻辑型, , , 

.如果真 (或者 (不等于 (一维实, 二维实), 不等于 (一维虚, 二维虚)))
    信息框 (“两个数组的维数、行列数必须相同”, 0, )
    清空 ()
    清空 ()
    清除数组 (二维数据集实值)
    清除数组 (二维数据集虚值)
    返回 ()
.如果真结束
.判断开始 (等于 (.现行选中项, 0))
    赋值 (标志, 真)
.默认
    赋值 (标志, 假)
.判断结束
类_傅立叶变换.二维傅立叶变换 (二维数据集实值, 二维数据集虚值, 标志)

.如果真 (等于 (取数组成员数 (二维数据集实值), 0)) ' 如果运算失败返回空数组
    信息框 (“运算错误！”, #错误图标, )
    返回 ()
.如果真结束
_成员数量列表框_列表项被选择 ()

.子程序 _创建按钮_被单击, 空白型, , 
.局部变量 合法数值, 双精度小数型, , , 
.局部变量 计次变量, 整数型, , , 

.判断开始 (等于 (.选中, 真))
    赋值 (一维实, 到数值 (.内容))
    赋值 (二维实, 到数值 (.内容))
    .如果真 (并且 (或者 (等于 (一维实, 1), 等于 (一维实, 0), 不等于 (取整 (合法数值), 合法数值)), 不等于 (一维实, 2)))
        信息框 (“维数必须是2的幂”, 0, )
        返回 ()
    .如果真结束
    
    赋值 (合法数值, 求平方根 (到数值 (.内容)))
    .如果真 (并且 (或者 (等于 (二维实, 1), 等于 (二维实, 0), 不等于 (取整 (合法数值), 合法数值)), 不等于 (二维实, 2)))
        信息框 (“维数必须是2的幂”, 0, )
        返回 ()
    .如果真结束
    
.默认
    赋值 (一维虚, 到数值 (.内容))
    赋值 (二维虚, 到数值 (.内容))
    .如果真 (并且 (或者 (等于 (一维虚, 1), 等于 (一维虚, 0), 不等于 (取整 (合法数值), 合法数值)), 不等于 (一维虚, 2)))
        信息框 (“维数必须是2的幂”, 0, )
        返回 ()
    .如果真结束
    
    赋值 (合法数值, 求平方根 (到数值 (.内容)))
    .如果真 (并且 (或者 (等于 (二维虚, 1), 等于 (二维虚, 0), 不等于 (取整 (合法数值), 合法数值)), 不等于 (二维虚, 2)))
        信息框 (“维数必须是2的幂”, 0, )
        返回 ()
    .如果真结束
    
.判断结束
 ' 合法数值 ＝ 求平方根 (一维实)


清空 ()
清空 ()
 ' 成员数量列表框.加入项目 (“成员数量”, )
 ' 成员数据列表框.加入项目 (“成员数据”, )


.判断开始 (等于 (.选中, 真))
    重定义数组 (二维数据集实值, 假, 一维实, 二维实)
.默认
    重定义数组 (二维数据集虚值, 假, 一维虚, 二维虚)
.判断结束
.判断开始 (等于 (.选中, 真))
    .计次循环首 (一维实, 计次变量)
        到文本 (计次变量).加入项目 ()
    .计次循环尾 ()
.默认
    .计次循环首 (一维虚, 计次变量)
        到文本 (计次变量).加入项目 ()
    .计次循环尾 ()
.判断结束


.子程序 _最小化按钮_被单击, 空白型, , 
赋值 (傅立叶变换窗口., 2)

.子程序 _关闭按钮_被单击, 空白型, , 
傅立叶变换窗口.销毁 ()

.子程序 _帮助按钮_被单击, 空白型, , 
.局部变量 目录, 文本型, , , 

赋值 (目录, 取临时文件名 ())
写到文件 (目录, #傅立叶变换)
运行 (相加 (“notepad.exe ”, 目录), 假, )

.类模块 类_算式解析, , , 

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 求积分表达式, 逻辑型, 公开, 本方法可求各种复杂的积分表达式，可含任何数学函数，如 3*exp(x)*tan(x)/(8+log(x))，并且可以检查出表达式的错误::成功返回真，失败返回假，返回结果为“双精度小数型”,直接存储在“计算结果变量”中。
.参数 计算表达式, 文本型, , 必需的； 文本型。该参数提供表示式文本，支持各种复杂的积分表达式，可含任何数学函数，如 3*exp(x)*tan(x)/(8+log(x))。
.参数 积分上限, 双精度小数型, , 必需的； 双精度小数型。积分的上限。
.参数 积分下限, 双精度小数型, , 必需的； 双精度小数型。积分的下限。
.参数 误差, 双精度小数型, , 必需的； 双精度小数型。允许的误差。
.参数 计算结果, 双精度小数型, 参考, 必需的； 双精度小数型，参数数据只能提供变量。用于装载计算的结果。

.局部变量 算式解析, 未知类型0x3000B, , , 

返回 (算式解析.未知支持库函数_109 (计算表达式, 积分上限, 积分下限, 误差, 计算结果))


.类模块 类_曲线拟合类, , , 

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 方法_二乘曲线拟合, 文本型, 公开, 执行成功返回文本结果,执行失败返回空文本.
.参数 独立变量观察值, 双精度小数型, 数组, 提供一维数组.

.局部变量 二乘曲线, 未知类型0x30008, , , 
.局部变量 多项式系数, 双精度小数型, 静态, "0", 
.局部变量 y估值, 双精度小数型, 静态, "0", 
.局部变量 残差值, 双精度小数型, 静态, "0", 
.局部变量 标准误差, 双精度小数型, 静态, , 
.局部变量 估计标准误差, 双精度小数型, 静态, "0", 
.局部变量 相关变量观察值, 双精度小数型, 静态, "0", 和第一个参数一样的一维数组，它保存相关变量的观察值。
.局部变量 r平方值, 双精度小数型, 静态, , 
.局部变量 r值, 双精度小数型, 静态, , 
.局部变量 是否奇异, 整数型, 静态, , 
.局部变量 文本, 文本型, , , 
.局部变量 计次变量, 整数型, , , 
.局部变量 成员数, 整数型, , , 保存独立变量观察值数组维数.

赋值 (成员数, 取数组成员数 (独立变量观察值))
.如果真 (等于 (成员数, 0))
    返回 (“”)
.如果真结束

重定义数组 (多项式系数, 假, 相减 (成员数, 1))
重定义数组 (y估值, 假, 成员数)
重定义数组 (残差值, 假, 成员数)
重定义数组 (估计标准误差, 假, 相减 (成员数, 1))
重定义数组 (相关变量观察值, 假, 成员数)

置随机数种子 ()
.计次循环首 (取数组成员数 (相关变量观察值), 计次变量)
    赋值 (相关变量观察值 [计次变量], 取随机数 ())
.计次循环尾 ()

.如果真 (二乘曲线.未知支持库函数_36 (独立变量观察值, 相关变量观察值, 多项式系数, y估值, 残差值, 标准误差, 估计标准误差, r平方值, r值, 是否奇异))
    
    赋值 (文本, 相加 (“相关变量观察值：”, #换行符))
    .计次循环首 (取数组成员数 (相关变量观察值), 计次变量)
        赋值 (文本, 相加 (文本, 到文本 (相关变量观察值 [计次变量]), #换行符))
    .计次循环尾 ()
    
    赋值 (文本, 相加 (文本, #换行符, “多项式系数：”, #换行符))
    .计次循环首 (取数组成员数 (多项式系数), 计次变量)
        赋值 (文本, 相加 (文本, 到文本 (多项式系数 [计次变量]), #换行符))
    .计次循环尾 ()
    
    赋值 (文本, 相加 (文本, #换行符, “y估值：”, #换行符))
    .计次循环首 (取数组成员数 (y估值), 计次变量)
        赋值 (文本, 相加 (文本, 到文本 (y估值 [计次变量]), #换行符))
    .计次循环尾 ()
    
    赋值 (文本, 相加 (文本, #换行符, “残差值：”, #换行符))
    .计次循环首 (取数组成员数 (残差值), 计次变量)
        赋值 (文本, 相加 (文本, 到文本 (残差值 [计次变量]), #换行符))
    .计次循环尾 ()
    
    赋值 (文本, 相加 (文本, #换行符, “标准误差：”, #换行符, 到文本 (标准误差), #换行符))
    
    赋值 (文本, 相加 (文本, #换行符, “估计标准误差：”, #换行符))
    .计次循环首 (取数组成员数 (估计标准误差), 计次变量)
        赋值 (文本, 相加 (文本, 到文本 (估计标准误差 [计次变量]), #换行符))
    .计次循环尾 ()
    赋值 (文本, 相加 (文本, #换行符, “r平方值：”, #换行符, 到文本 (r平方值), #换行符))
    赋值 (文本, 相加 (文本, #换行符, “r值：”, #换行符, 到文本 (r值), #换行符))
    赋值 (文本, 相加 (文本, #换行符, “是否奇异：”, #换行符, 到文本 (是否奇异)))
    返回 (文本)
.如果真结束
返回 (“”)

.子程序 方法_三次多项式方程, 文本型, 公开, 执行成功返回方程系数，否则返回空
.参数 x值, 双精度小数型, 数组, 提供一维数组.
.参数 y值, 双精度小数型, 数组, 和第一个参数一样的一维数组，它保存离散数据集的y值.提供一维数组.

.局部变量 三次多项式方程, 未知类型0x30008, , , 
.局部变量 三次样条方程系数, 双精度小数型, 静态, "0", 和第一个参数一样，行数为4的二维数组，它返回每个子区间上三次样条方程的系数。
.局部变量 文本, 文本型, , , 
.局部变量 计次变量, 整数型, , , 
.局部变量 成员数, 整数型, , , 保存X值数组维数.

赋值 (成员数, 取数组成员数 (x值))
.如果真 (等于 (成员数, 0))
    返回 (“”)
.如果真结束
重定义数组 (x值, 假, 成员数)
重定义数组 (y值, 假, 成员数)
重定义数组 (三次样条方程系数, 假, 成员数, 4)
.如果真 (三次多项式方程.未知支持库函数_37 (x值, y值, 三次样条方程系数))
    赋值 (文本, 相加 (“方程系数：”, #换行符))
    .计次循环首 (成员数, 计次变量)
        赋值 (文本, 相加 (文本, 到文本 (三次样条方程系数 [计次变量] [1]), #换行符))
        赋值 (文本, 相加 (文本, 到文本 (三次样条方程系数 [计次变量] [2]), #换行符))
        赋值 (文本, 相加 (文本, 到文本 (三次样条方程系数 [计次变量] [3]), #换行符))
        赋值 (文本, 相加 (文本, 到文本 (三次样条方程系数 [计次变量] [4]), #换行符))
    .计次循环尾 ()
    返回 (文本)
    
.如果真结束
返回 (“”)

.子程序 方法_三次样条插值, 文本型, 公开, 执行成功返回真，否则返回假
.参数 匿名参数_1051, 双精度小数型, 数组, 

.局部变量 三次样条插值, 未知类型0x30008, , , 
.局部变量 三次样条方程系数, 双精度小数型, , "0", 
.局部变量 插值x, 双精度小数型, , , 
.局部变量 y值, 双精度小数型, 静态, , 可以得到y值
.局部变量 文本, 文本型, , , 
.局部变量 成员数, 整数型, , , 
.局部变量 计次变量, 整数型, , , 

赋值 (成员数, 取数组成员数 (匿名参数_1051))
.如果真 (等于 (成员数, 0))
    返回 (“”)
.如果真结束

重定义数组 (匿名参数_1051, 假, 成员数)
重定义数组 (三次样条方程系数, 假, 成员数, 4)

置随机数种子 ()
赋值 (插值x, 到数值 (相加 (到文本 (取随机数 ()), “.”, 到文本 (取随机数 ()))))
.如果 (三次样条插值.未知支持库函数_38 (匿名参数_1051, 三次样条方程系数, 插值x, y值))
    .计次循环首 (成员数, 计次变量)
        赋值 (三次样条方程系数 [1] [计次变量], 到数值 (相加 (到文本 (取随机数 ()), “.”, 到文本 (取随机数 ()))))
        赋值 (三次样条方程系数 [2] [计次变量], 到数值 (相加 (到文本 (取随机数 ()), “.”, 到文本 (取随机数 ()))))
        赋值 (三次样条方程系数 [3] [计次变量], 到数值 (相加 (到文本 (取随机数 ()), “.”, 到文本 (取随机数 ()))))
        赋值 (三次样条方程系数 [4] [计次变量], 到数值 (相加 (到文本 (取随机数 ()), “.”, 到文本 (取随机数 ()))))
    .计次循环尾 ()
    赋值 (文本, 相加 (“y值:”, 到文本 (y值)))
    返回 (文本)
.否则
    返回 (“”)
.如果结束


.窗口程序集 算式解析曲线拟合运算窗口程序集, , , 

.程序集变量 集_移动, 逻辑型, , , 
.程序集变量 集_对象, 逻辑型, , , 
.子程序 _算式解析超级按钮_被单击, 空白型, , 
.局部变量 类_算式解析, 类_算式解析, , , 
.局部变量 结果, 双精度小数型, , , 

.如果真 (等于 (.内容, “”))
    信息框 (“没有要解析的计算表达”, #警告图标, )
    返回 ()
.如果真结束
.如果真 (小于或等于 (到数值 (.内容), 0))
    信息框 (“误差必需大于0”, #警告图标, )
    返回 ()
.如果真结束

.如果真 (等于 (类_算式解析.求积分表达式 (.内容, 到数值 (.内容), 到数值 (.内容), 到数值 (.内容), 结果), 假))
    赋值 (.内容, “解析失败”)
    返回 ()
.如果真结束
赋值 (.内容, 到文本 (结果))

.子程序 _运算超级按钮_被单击, 空白型, , 
.局部变量 类_曲线拟合类, 类_曲线拟合类, , , 
.局部变量 二乘曲线拟合数据, 双精度小数型, , "0", 
.局部变量 三次样条插值数据, 双精度小数型, , "0", 
.局部变量 三次多项式方程数据x值, 双精度小数型, , "0", 
.局部变量 三次多项式方程数据y值, 双精度小数型, , "0", 
.局部变量 计次, 整数型, , , 
.局部变量 返回, 文本型, , , 

赋值 (返回, “”)
.判断开始 (等于 (.选中, 真))
    清除数组 (二乘曲线拟合数据)
    .计次循环首 (取项目数 (), 计次)
        加入成员 (二乘曲线拟合数据, 到数值 (相减 (计次, 1).取项目文本 ()))
    .计次循环尾 ()
    赋值 (返回, 类_曲线拟合类.方法_二乘曲线拟合 (二乘曲线拟合数据))
.判断 (等于 (.选中, 真))
    清除数组 (三次样条插值数据)
    .计次循环首 (取项目数 (), 计次)
        加入成员 (三次样条插值数据, 到数值 (相减 (计次, 1).取项目文本 ()))
    .计次循环尾 ()
    赋值 (返回, 类_曲线拟合类.方法_三次样条插值 (三次样条插值数据))
    
.判断 (等于 (.选中, 真))
    清除数组 (三次多项式方程数据x值)
    清除数组 (三次多项式方程数据y值)
    .计次循环首 (取项目数 (), 计次)
        加入成员 (三次多项式方程数据x值, 到数值 (相减 (计次, 1).取项目文本 ()))
    .计次循环尾 ()
    .计次循环首 (取项目数 (), 计次)
        加入成员 (三次多项式方程数据y值, 到数值 (相减 (计次, 1).取项目文本 ()))
    .计次循环尾 ()
    赋值 (返回, 类_曲线拟合类.方法_三次多项式方程 (三次多项式方程数据x值, 三次多项式方程数据y值))
.默认
    返回 ()
.判断结束
赋值 (.内容, “”)
.如果真 (等于 (返回, “”))
    赋值 (.内容, “运算错误”)
    返回 ()
.如果真结束
赋值 (.内容, 返回)

.子程序 _二乘曲线拟合单选框_被单击, 空白型, , 
赋值 (.内容, “独立变量观察值↓”)
赋值 (.内容, “”)
赋值 (集_对象, 真)
.如果真 (等于 (集_移动, 假))
    返回 ()
.如果真结束
相减 (.左边, 100).移动 ()
.移动 (.左边, , 相加 (.宽度, 100), )
连续赋值 (假, .可视, .可视)
赋值 (集_移动, 假)

.子程序 _三次多项式方程单选框_被单击, 空白型, , 
赋值 (.内容, “”)
相加 (.左边, 100).移动 ()
.移动 (.左边, , 相减 (.宽度, 100), )
赋值 (.内容, “x值 ↓”)
赋值 (集_对象, 真)
连续赋值 (真, .可视, .可视)
赋值 (集_移动, 真)

.子程序 _三次样条插值单选框_被单击, 空白型, , 
赋值 (.内容, “x值 ↓”)
赋值 (.内容, “”)
赋值 (集_对象, 真)
.如果真 (等于 (集_移动, 假))
    返回 ()
.如果真结束
相减 (.左边, 100).移动 ()
.移动 (.左边, , 相加 (.宽度, 100), )
连续赋值 (假, .可视, .可视)
赋值 (集_移动, 假)

.子程序 _二乘曲线拟合添加超级按钮_被单击, 空白型, , 
.局部变量 数值, 双精度小数型, , , 

赋值 (数值, 到数值 (.内容))
.判断开始 (等于 (集_对象, 真))
    到文本 (数值).加入项目 ()
.默认
    到文本 (数值).加入项目 ()
.判断结束
赋值 (.内容, “”)
获取焦点 ()

.子程序 _二乘曲线拟合修改超级按钮_被单击, 空白型, , 
.局部变量 数值, 双精度小数型, , , 

赋值 (数值, 到数值 (.内容))
.判断开始 (等于 (集_对象, 真))
    .置项目文本 (.现行选中项, 到文本 (数值))
.默认
    .置项目文本 (.现行选中项, 到文本 (数值))
.判断结束


.子程序 _二乘曲线拟合删除超级按钮_被单击, 空白型, , 
.判断开始 (等于 (集_对象, 真))
    .删除项目 (.现行选中项)
    赋值 (.现行选中项, 相减 (取项目数 (), 1))
.默认
    .删除项目 (.现行选中项)
    赋值 (.现行选中项, 相减 (取项目数 (), 1))
.判断结束


.子程序 _二乘曲线拟合列表框_获得焦点, 空白型, , 
赋值 (集_对象, 真)

.子程序 _y值列表框_获得焦点, 空白型, , 
赋值 (集_对象, 假)

.子程序 _二乘曲线拟合清空超级按钮_被单击, 空白型, , 
.判断开始 (等于 (集_对象, 真))
    清空 ()
.默认
    清空 ()
.判断结束


.子程序 _算式解析曲线拟合运算窗口_创建完毕, 空白型, , 
赋值 (集_对象, 真)

.子程序 _最小化按钮_被单击, 空白型, , 
赋值 (算式解析曲线拟合运算窗口., 2)

.子程序 _关闭按钮_被单击, 空白型, , 
算式解析曲线拟合运算窗口.销毁 ()

.子程序 _帮助按钮_被单击, 空白型, , 
.局部变量 目录, 文本型, , , 

赋值 (目录, 取临时文件名 ())
写到文件 (目录, #算式解析曲线拟合)
运行 (相加 (“notepad.exe ”, 目录), 假, )

.类模块 复数运算类, , , 

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 方法_复数相加, 空白型, 公开, 复数相加,由于返回数据是两个，所以返回值需要传址
.参数 参_数据1, 双精度小数型, , 
.参数 参_数据2, 双精度小数型, , 
.参数 返回值实数部分, 双精度小数型, 参考, 
.参数 返回值虚数部分, 双精度小数型, 参考, 

.局部变量 结果, 未知类型0x30001, , , 
.局部变量 复数1, 未知类型0x30001, , , 
.局部变量 复数2, 未知类型0x30001, , , 

复数1.未知支持库函数_11 (参_数据1)
复数1.未知支持库函数_12 (参_数据1)

复数2.未知支持库函数_11 (参_数据2)
复数2.未知支持库函数_12 (参_数据2)

赋值 (结果, 复数1.未知支持库函数_2 (复数1, 复数2))

赋值 (返回值实数部分, 结果.未知支持库函数_9 ())
赋值 (返回值虚数部分, 结果.未知支持库函数_10 ())


.子程序 方法_复数相减, 空白型, 公开, 复数相减,由于返回数据是两个，所以返回值需要传址
.参数 参_数据1, 双精度小数型, , 
.参数 参_数据2, 双精度小数型, , 
.参数 返回值实数部分, 双精度小数型, 参考, 
.参数 返回值虚数部分, 双精度小数型, 参考, 

.局部变量 结果, 未知类型0x30001, , , 
.局部变量 复数1, 未知类型0x30001, , , 
.局部变量 复数2, 未知类型0x30001, , , 

复数1.未知支持库函数_11 (参_数据1)
复数1.未知支持库函数_12 (参_数据1)

复数2.未知支持库函数_11 (参_数据2)
复数2.未知支持库函数_12 (参_数据2)

赋值 (结果, 复数1.未知支持库函数_3 (复数1, 复数2))

赋值 (返回值实数部分, 结果.未知支持库函数_9 ())
赋值 (返回值虚数部分, 结果.未知支持库函数_10 ())



.子程序 方法_复数相乘, 空白型, 公开, 复数相乘,由于返回数据是两个，所以返回值需要传址
.参数 参_数据1, 双精度小数型, , 
.参数 参_数据2, 双精度小数型, , 
.参数 返回值实数部分, 双精度小数型, 参考, 
.参数 返回值虚数部分, 双精度小数型, 参考, 

.局部变量 结果, 未知类型0x30001, , , 
.局部变量 复数1, 未知类型0x30001, , , 
.局部变量 复数2, 未知类型0x30001, , , 

复数1.未知支持库函数_11 (参_数据1)
复数1.未知支持库函数_12 (参_数据1)

复数2.未知支持库函数_11 (参_数据2)
复数2.未知支持库函数_12 (参_数据2)

赋值 (结果, 复数1.未知支持库函数_4 (复数1, 复数2))

赋值 (返回值实数部分, 结果.未知支持库函数_9 ())
赋值 (返回值虚数部分, 结果.未知支持库函数_10 ())



.子程序 方法_复数相除, 空白型, 公开, 复数相除,由于返回数据是两个，所以返回值需要传址
.参数 参_数据1, 双精度小数型, , 
.参数 参_数据2, 双精度小数型, , 
.参数 返回值实数部分, 双精度小数型, 参考, 
.参数 返回值虚数部分, 双精度小数型, 参考, 

.局部变量 结果, 未知类型0x30001, , , 
.局部变量 复数1, 未知类型0x30001, , , 
.局部变量 复数2, 未知类型0x30001, , , 

复数1.未知支持库函数_11 (参_数据1)
复数1.未知支持库函数_12 (参_数据1)

复数2.未知支持库函数_11 (参_数据2)
复数2.未知支持库函数_12 (参_数据2)

赋值 (结果, 复数1.未知支持库函数_5 (复数1, 复数2))

赋值 (返回值实数部分, 结果.未知支持库函数_9 ())
赋值 (返回值虚数部分, 结果.未知支持库函数_10 ())



.子程序 方法_求复数指数, 空白型, 公开, 求复数指数,由于返回数据是两个，所以返回值需要传址
.参数 参_数据1, 双精度小数型, , 
.参数 参_数据2, 双精度小数型, , 
.参数 返回值实数部分, 双精度小数型, 参考, 
.参数 返回值虚数部分, 双精度小数型, 参考, 

.局部变量 结果, 未知类型0x30001, , , 
.局部变量 复数1, 未知类型0x30001, , , 
.局部变量 复数2, 未知类型0x30001, , , 

复数1.未知支持库函数_11 (参_数据1)
复数1.未知支持库函数_12 (参_数据1)

复数2.未知支持库函数_11 (参_数据2)
复数2.未知支持库函数_12 (参_数据2)

赋值 (结果, 复数1.未知支持库函数_6 (复数2))

赋值 (返回值实数部分, 结果.未知支持库函数_9 ())
赋值 (返回值虚数部分, 结果.未知支持库函数_10 ())



.子程序 方法_求复数长度, 双精度小数型, 公开, 求复数长度
.参数 参_数据1, 双精度小数型, , 

.局部变量 结果, 未知类型0x30001, , , 
.局部变量 复数1, 未知类型0x30001, , , 
.局部变量 返回值, 双精度小数型, , , 


复数1.未知支持库函数_11 (参_数据1)
复数1.未知支持库函数_12 (参_数据1)

赋值 (返回值, 结果.未知支持库函数_7 (复数1))
返回 (返回值)



.子程序 方法_求复数极角, 双精度小数型, 公开, 求复数极角
.参数 参_数据1, 双精度小数型, , 

.局部变量 结果, 未知类型0x30001, , , 
.局部变量 复数1, 未知类型0x30001, , , 
.局部变量 返回值, 双精度小数型, , , 

复数1.未知支持库函数_11 (参_数据1)
复数1.未知支持库函数_12 (参_数据1)

赋值 (返回值, 结果.未知支持库函数_8 (复数1))
返回 (返回值)

.窗口程序集 复数运算窗口程序集, , , 

.程序集变量 复数运算类, 复数运算类, , , 
.子程序 _复数运算窗口_创建完毕, 空白型, , 


.子程序 _相加超级按钮_被单击, 空白型, , 
.局部变量 实数部分, 双精度小数型, , , 
.局部变量 虚数部分, 双精度小数型, , , 

复数运算类.方法_复数相加 (到数值 (.内容), 到数值 (.内容), 实数部分, 虚数部分)
赋值 (.内容, 到文本 (实数部分))
赋值 (.内容, 到文本 (虚数部分))

.子程序 _相减超级按钮_被单击, 空白型, , 
.局部变量 实数部分, 双精度小数型, , , 
.局部变量 虚数部分, 双精度小数型, , , 

复数运算类.方法_复数相减 (到数值 (.内容), 到数值 (.内容), 实数部分, 虚数部分)
赋值 (.内容, 到文本 (实数部分))
赋值 (.内容, 到文本 (虚数部分))

.子程序 _相乘超级按钮_被单击, 空白型, , 
.局部变量 实数部分, 双精度小数型, , , 
.局部变量 虚数部分, 双精度小数型, , , 

复数运算类.方法_复数相乘 (到数值 (.内容), 到数值 (.内容), 实数部分, 虚数部分)
赋值 (.内容, 到文本 (实数部分))
赋值 (.内容, 到文本 (虚数部分))

.子程序 _相除超级按钮_被单击, 空白型, , 
.局部变量 实数部分, 双精度小数型, , , 
.局部变量 虚数部分, 双精度小数型, , , 

复数运算类.方法_复数相除 (到数值 (.内容), 到数值 (.内容), 实数部分, 虚数部分)
赋值 (.内容, 到文本 (实数部分))
赋值 (.内容, 到文本 (虚数部分))


.子程序 _求复数指数超级按钮_被单击, 空白型, , 
.局部变量 实数部分, 双精度小数型, , , 
.局部变量 虚数部分, 双精度小数型, , , 

复数运算类.方法_求复数指数 (到数值 (.内容), 到数值 (.内容), 实数部分, 虚数部分)
赋值 (.内容, 到文本 (实数部分))
赋值 (.内容, 到文本 (虚数部分))

.子程序 _求复数长度超级按钮_被单击, 空白型, , 
.局部变量 返回, 双精度小数型, , , 

赋值 (返回, 复数运算类.方法_求复数长度 (到数值 (.内容)))
赋值 (.内容, 到文本 (返回))

.子程序 _求复数极角超级按钮_被单击, 空白型, , 
.局部变量 返回, 双精度小数型, , , 

赋值 (返回, 复数运算类.方法_求复数极角 (到数值 (.内容)))
赋值 (.内容, 到文本 (返回))


.子程序 _关闭按钮_被单击, 空白型, , 
复数运算窗口.销毁 ()

.子程序 _帮助按钮_被单击, 空白型, , 
.局部变量 目录, 文本型, , , 

赋值 (目录, 取临时文件名 ())
写到文件 (目录, #复数运算)
运行 (相加 (“notepad.exe ”, 目录), 假, )


.类模块 矩阵运算命令, , , 

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 矩阵相乘命令, 文本型, 公开, 矩阵相乘
.参数 实数矩阵1, 文本型, , 实数矩阵1
.参数 实数矩阵2, 文本型, , 实数矩阵2

.局部变量 矩阵运算, 未知类型0x30002, , , 
.局部变量 结果矩阵, 双精度小数型, , "0", 
.局部变量 矩阵1, 双精度小数型, , "0", 
.局部变量 矩阵2, 双精度小数型, , "0", 
.局部变量 结果, 文本型, , , 

文本转矩阵 (矩阵1, 实数矩阵1)
文本转矩阵 (矩阵2, 实数矩阵2)
赋值 (结果矩阵, 矩阵运算.未知支持库函数_13 (矩阵1, 矩阵2))
赋值 (结果, 矩阵转文本 (结果矩阵))
返回 (结果)

.子程序 矩阵相加命令, 文本型, 公开, 矩阵相加
.参数 实数矩阵1, 文本型, , 实数矩阵1
.参数 实数矩阵2, 文本型, , 实数矩阵2

.局部变量 矩阵1, 双精度小数型, , "0", 
.局部变量 矩阵2, 双精度小数型, , "0", 
.局部变量 矩阵运算, 未知类型0x30002, , , 
.局部变量 结果矩阵, 双精度小数型, , "0", 
.局部变量 结果, 文本型, , , 

文本转矩阵 (矩阵1, 实数矩阵1)
文本转矩阵 (矩阵2, 实数矩阵2)
赋值 (结果矩阵, 矩阵运算.未知支持库函数_15 (矩阵1, 矩阵2))
赋值 (结果, 矩阵转文本 (结果矩阵))
返回 (结果)

.子程序 实矩阵逆命令, 文本型, 公开, 实矩阵逆
.参数 矩阵1, 文本型, , 矩阵1

.局部变量 矩阵运算, 未知类型0x30002, , , 
.局部变量 结果矩阵, 双精度小数型, , "0", 
.局部变量 矩阵, 双精度小数型, , "0", 
.局部变量 行列式, 双精度小数型, , , 
.局部变量 结果, 文本型, , , 

文本转矩阵 (矩阵, 矩阵1)
赋值 (结果矩阵, 矩阵运算.未知支持库函数_17 (矩阵, 行列式))
赋值 (结果, 矩阵转文本 (结果矩阵))
返回 (结果)

.子程序 矩阵转置命令, 文本型, 公开, 矩阵转置
.参数 矩阵1, 文本型, , 矩阵

.局部变量 矩阵运算, 未知类型0x30002, , , 
.局部变量 结果矩阵, 双精度小数型, , "0", 
.局部变量 矩阵, 双精度小数型, , "0", 
.局部变量 结果, 文本型, , , 

文本转矩阵 (矩阵, 矩阵1)
赋值 (结果矩阵, 矩阵运算.未知支持库函数_19 (矩阵))
赋值 (结果, 矩阵转文本 (结果矩阵))
返回 (结果)

.子程序 矩阵标量乘积命令, 文本型, 公开, 矩阵标量乘积
.参数 矩阵1, 双精度小数型, 数组, 矩阵
.参数 标量, 双精度小数型, , 标量

.局部变量 结果矩阵, 双精度小数型, , "0", 
.局部变量 结果, 文本型, , , 
.局部变量 矩阵运算, 未知类型0x30002, , , 

赋值 (结果矩阵, 矩阵运算.未知支持库函数_22 (矩阵1, 到数值 (标量)))
赋值 (结果, 矩阵转文本 (结果矩阵))
返回 (结果)

.子程序 文本转矩阵, 空白型, , 
.参数 矩阵, 双精度小数型, 参考 数组, 
.参数 欲转换的文本, 文本型, , 

.局部变量 成员数1, 整数型, , , 
.局部变量 记次变量1, 整数型, , , 
.局部变量 记次变量2, 整数型, , , 
.局部变量 一维上限, 整数型, , , 
.局部变量 行, 文本型, , "0", 
.局部变量 列, 文本型, , "0", 
.局部变量 二维上限, 整数型, , , 
.局部变量 临时文本, 文本型, , "0", 

 ' 将文本转换为双精度小数型数组
赋值 (行, 分割文本 (欲转换的文本, #换行符, ))
赋值 (一维上限, 取数组成员数 (行))
.如果真 (等于 (一维上限, 0))
    返回 ()
.如果真结束
赋值 (列, 分割文本 (行 [取数组成员数 (行)], “,”, ))
赋值 (二维上限, 取数组成员数 (列))
.如果真 (等于 (二维上限, 0))
    返回 ()
.如果真结束

重定义数组 (矩阵, 假, 一维上限, 二维上限)
.计次循环首 (一维上限, 记次变量1)
    赋值 (临时文本, 分割文本 (行 [记次变量1], “,”, ))
    .计次循环首 (二维上限, 记次变量2)
        赋值 (矩阵 [记次变量1] [记次变量2], 到数值 (临时文本 [记次变量2]))
    .计次循环尾 ()
.计次循环尾 ()

.子程序 矩阵转文本, 文本型, , 
.参数 矩阵, 双精度小数型, 数组, 

.局部变量 一维上限, 整数型, , , 
.局部变量 二维上限, 整数型, , , 
.局部变量 记次变量1, 整数型, , , 
.局部变量 记次变量2, 整数型, , , 
.局部变量 结果文本, 文本型, , , 
.局部变量 文本长度, 整数型, , , 
.局部变量 文本最大长度, 整数型, , , 

赋值 (一维上限, 取数组下标 (矩阵, 1))
赋值 (二维上限, 取数组下标 (矩阵, 2))
.计次循环首 (一维上限, 记次变量1)
    .计次循环首 (二维上限, 记次变量2)
        赋值 (文本长度, 取文本长度 (到文本 (矩阵 [记次变量1] [记次变量2])))
        .如果真 (大于 (文本长度, 文本最大长度))
            赋值 (文本最大长度, 文本长度)
        .如果真结束
        
    .计次循环尾 ()
.计次循环尾 ()
 ' 双精度小数型数组转换为结果
.计次循环首 (一维上限, 记次变量1)
    .计次循环首 (二维上限, 记次变量2)
        赋值 (结果文本, 相加 (结果文本, 到文本 (矩阵 [记次变量1] [记次变量2]), 取空白文本 (相减 (文本最大长度, 取文本长度 (到文本 (矩阵 [记次变量1] [记次变量2]))))))
        .如果真 (不等于 (二维上限, 记次变量2))
            赋值 (结果文本, 相加 (结果文本, “,”))
        .如果真结束
        
    .计次循环尾 ()
    .如果真 (不等于 (取数组下标 (矩阵, 1), 记次变量1))
        赋值 (结果文本, 相加 (结果文本, #换行符))
    .如果真结束
    
.计次循环尾 ()
返回 (结果文本)

.窗口程序集 矩阵运算窗口程序集, , , 

.程序集变量 集_矩阵运算命令, 矩阵运算命令, , , 
.程序集变量 匿名程序集变量_2216, 空白型, , , 
.程序集变量 集_实数矩阵1, 文本型, , , 
.程序集变量 集_实数矩阵2, 文本型, , , 
.程序集变量 匿名程序集变量_2215, 空白型, , , 
.程序集变量 集_第一维, 整数型, , , 
.程序集变量 集_第二维, 整数型, , , 
.程序集变量 集_矩阵, 双精度小数型, , "0", 
.程序集变量 匿名程序集变量_2200, 空白型, , , 
.子程序 _矩阵相加超级按钮_被单击, 空白型, , 
.局部变量 返回, 文本型, , , 

赋值 (集_实数矩阵1, .内容)
赋值 (集_实数矩阵2, .内容)
赋值 (返回, “”)
赋值 (返回, 集_矩阵运算命令.矩阵相加命令 (集_实数矩阵1, 集_实数矩阵2))
赋值 (.内容, 返回)

.子程序 _矩阵相乘超级按钮_被单击, 空白型, , 
.局部变量 返回, 文本型, , , 

赋值 (集_实数矩阵1, .内容)
赋值 (集_实数矩阵2, .内容)
赋值 (返回, “”)
赋值 (返回, 集_矩阵运算命令.矩阵相乘命令 (集_实数矩阵1, 集_实数矩阵2))
赋值 (.内容, 返回)

.子程序 _实矩阵逆超级按钮_被单击, 空白型, , 
.局部变量 返回, 文本型, , , 

赋值 (集_实数矩阵1, .内容)
赋值 (返回, “”)
赋值 (返回, 集_矩阵运算命令.实矩阵逆命令 (集_实数矩阵1))
赋值 (.内容, 返回)

.子程序 _矩阵转置超级按钮_被单击, 空白型, , 
.局部变量 返回, 文本型, , , 

赋值 (集_实数矩阵1, .内容)
赋值 (返回, “”)
赋值 (返回, 集_矩阵运算命令.矩阵转置命令 (集_实数矩阵1))
赋值 (.内容, 返回)

.子程序 _矩阵标量乘积超级按钮_被单击, 空白型, , 
.局部变量 返回, 文本型, , , 
.局部变量 计次, 整数型, , , 
.局部变量 计次1, 整数型, , , 

赋值 (返回, “”)
赋值 (返回, 集_矩阵运算命令.矩阵标量乘积命令 (集_矩阵, 到数值 (.内容)))
赋值 (.内容, 返回)

.子程序 _关闭按钮_被单击, 空白型, , 
矩阵运算窗口.销毁 ()

.子程序 _第一维列表框_列表项被选择, 空白型, , 
.局部变量 计次, 整数型, , , 

清空 ()
.计次循环首 (集_第二维, 计次)
    到文本 (集_矩阵 [相加 (.现行选中项, 1)] [计次]).加入项目 ()
.计次循环尾 ()
赋值 (.现行选中项, 0)
赋值 (.内容, “”)

.子程序 _第二维列表框_列表项被选择, 空白型, , 
赋值 (.内容, .取项目文本 (.现行选中项))

.子程序 _操作值编辑框_内容被改变, 空白型, , 
.局部变量 操作值, 双精度小数型, , , 

.如果真 (小于 (.现行选中项, 0))
    返回 ()
.如果真结束
赋值 (操作值, 到数值 (.内容))
.置项目文本 (.现行选中项, 到文本 (操作值))
赋值 (集_矩阵 [相加 (.现行选中项, 1)] [相加 (.现行选中项, 1)], 操作值)

.子程序 _创建超级按钮_被单击, 空白型, , 
.局部变量 计次, 整数型, , , 

清空 ()
清空 ()
赋值 (集_第一维, 到数值 (.内容))
赋值 (集_第二维, 到数值 (.内容))
.如果真 (或者 (等于 (集_第一维, 0), 等于 (集_第二维, 0)))
    信息框 (“错误：第一维或第二维存在0成员”, #错误图标, )
    返回 ()
.如果真结束
清除数组 (集_矩阵)
重定义数组 (集_矩阵, 假, 集_第一维, 集_第二维)
.计次循环首 (集_第一维, 计次)
    到文本 (计次).加入项目 ()
.计次循环尾 ()

.子程序 _矩阵1编辑框_字符输入, 整数型, , 
.参数 字符代码, 整数型, , 

.如果真 (或者 (等于 (字符代码, 44), 等于 (字符代码, -93)))
    赋值 (.内容, 相加 (.内容, “,”))
    赋值 (.起始选择位置, 取文本长度 (.内容))
.如果真结束



.子程序 _矩阵2编辑框_字符输入, 整数型, , 
.参数 字符代码, 整数型, , 

.如果真 (或者 (等于 (字符代码, 44), 等于 (字符代码, -93)))
    赋值 (.内容, 相加 (.内容, “,”))
    赋值 (.起始选择位置, 取文本长度 (.内容))
.如果真结束


.子程序 _帮助按钮_被单击, 空白型, , 
.局部变量 目录, 文本型, , , 

赋值 (目录, 取临时文件名 ())
写到文件 (目录, #矩阵运算)
运行 (相加 (“notepad.exe ”, 目录), 假, )
未知支持库函数_6 (相加 (取运行目录 (), “\帮助\矩阵运算.txt”), , )

.类模块 微积分类, , , 微积分运算

.程序集变量 微积分, 未知类型0x30004, , , 
.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 方法_离散化_函数, 文本型, 公开, 离散化数值积分 和  函数数值积分  两者综合,返回"000"代表参数提供错误
.参数 计算类别, 整数型, , 离散化数值积分＝1，函数数值积分＝2,既有数组数据时为1,否则为2
.参数 浮点数组, 双精度小数型, 可空 数组, 只能为一维数组变量，用它保存离散样本集,当“计算类别”=2 时,本参数为空
.参数 样本区间, 双精度小数型, , 当“计算类别”＝2 时，必须为整数型
.参数 积分下限, 双精度小数型, , 当“计算类别”＝1 时，必须为正整数
.参数 积分上限, 双精度小数型, , 当“计算类别”＝1 时，必须为正整数

.判断开始 (等于 (计算类别, 1))
    .如果真 (或者 (不等于 (取整 (积分下限), 积分下限), 小于 (积分下限, 0))) ' “离散化数值积分”时，积分下限must = 正整数
        返回 (“000: 参数错误,积分下限必须为> 0 的正整数”)
    .如果真结束
    .如果真 (或者 (不等于 (取整 (积分上限), 积分上限), 小于 (积分上限, 0))) ' “离散化数值积分”时，积上分限must = 正整数
        返回 (“000: 参数错误,积分上限必须为> 0 的正整数”)
    .如果真结束
    返回 (到文本 (微积分.未知支持库函数_29 (浮点数组, 样本区间, 积分下限, 积分上限)))
    
.判断 (或者 (不等于 (取整 (样本区间), 样本区间), 小于 (样本区间, 0))) ' “函数数值积分”时，样本区间must = 正整数
    返回 (“000: 参数错误,样本区间必须为> 0 的正整数”)
.默认
    返回 (到文本 (微积分.未知支持库函数_30 (样本区间, 积分下限, 积分上限)))
.判断结束


.子程序 方法_一阶微分方程, 文本型, 公开, 用“一阶微分方程”的方法进行计算
.参数 x已知值, 双精度小数型, , 
.参数 y已知值, 双精度小数型, , 
.参数 要求解的x, 双精度小数型, , 
.参数 容许误差, 双精度小数型, , 
.参数 初始步长, 双精度小数型, , 从已知x值迭代到x的初始步长
.参数 最小步长, 双精度小数型, , 若初始步长 < 本参数，则函数退出

.局部变量 Y的估值, 双精度小数型, 静态, , 参数数据只能提供变量
.局部变量 状态, 逻辑型, 静态, , 参数数据只能提供变量

.如果真 (小于 (初始步长, 最小步长))
    返回 (“”)
.如果真结束

赋值 (状态, 微积分.未知支持库函数_31 (x已知值, y已知值, 要求解的x, 容许误差, 初始步长, 最小步长, Y的估值, 状态))
.判断开始 (等于 (状态, 真))
    返回 (到文本 (Y的估值))
.默认
    返回 (“”)
.判断结束


.窗口程序集 微积分窗口程序集, , , 

.程序集变量 微积分类, 微积分类, , , 
.子程序 _离散化数值积分单选框_被单击, 空白型, , 
赋值 (.禁止, 假)

.子程序 _函数数值积分单选框_被单击, 空白型, , 
赋值 (.禁止, 真)

.子程序 _添加超级按钮_被单击, 空白型, , 
.局部变量 数值, 双精度小数型, , , 

赋值 (数值, 到数值 (.内容))
到文本 (数值).加入项目 ()
赋值 (.内容, “”)
获取焦点 ()

.子程序 _修改超级按钮_被单击, 空白型, , 
.局部变量 数值, 双精度小数型, , , 

赋值 (数值, 到数值 (.内容))
.置项目文本 (.现行选中项, 到文本 (数值))

.子程序 _删除超级按钮_被单击, 空白型, , 
.删除项目 (.现行选中项)
赋值 (.现行选中项, 相减 (取项目数 (), 1))

.子程序 _清空超级按钮_被单击, 空白型, , 
清空 ()

.子程序 _离散化数值积分函数数值积分计算超级按钮_被单击, 空白型, , 
.局部变量 计次, 整数型, , , 
.局部变量 计算类别, 整数型, , , 
.局部变量 浮点数组, 双精度小数型, , "0", 
.局部变量 返回, 文本型, , , 

赋值 (返回, “”)
赋值 (.内容, “”)
.判断开始 (等于 (.选中, 真))
    .计次循环首 (取项目数 (), 计次)
        加入成员 (浮点数组, 到数值 (相减 (计次, 1).取项目文本 ()))
    .计次循环尾 ()
    赋值 (计算类别, 1)
.默认
    赋值 (计算类别, 2)
.判断结束
赋值 (返回, 微积分类.方法_离散化_函数 (计算类别, 浮点数组, 到数值 (.内容), 到数值 (.内容), 到数值 (.内容)))
赋值 (.内容, 返回)


.子程序 _一阶微分方程超级按钮_被单击, 空白型, , 
.局部变量 返回, 文本型, , , 

赋值 (.内容, “”)
赋值 (返回, “”)
赋值 (返回, 微积分类.方法_一阶微分方程 (到数值 (.内容), 到数值 (.内容), 到数值 (.内容), 到数值 (.内容), 到数值 (.内容), 到数值 (.内容)))
赋值 (.内容, 返回)

.子程序 _关闭按钮_被单击, 空白型, , 
微积分窗口.销毁 ()

.子程序 _帮助按钮_被单击, 空白型, , 
.局部变量 目录, 文本型, , , 

赋值 (目录, 取临时文件名 ())
写到文件 (目录, #微积分)
运行 (相加 (“notepad.exe ”, 目录), 假, )


.类模块 联立方程, , , 

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 线性方程组, 文本型, 公开, 如果运行成功则返回结果文本，失败返回空。
.参数 匿名参数_1476, 双精度小数型, 数组, 
.参数 匿名参数_1477, 双精度小数型, 数组, 

.局部变量 线性方程, 未知类型0x30006, , , 
.局部变量 结果文本, 文本型, , , 
.局部变量 子计次, 整数型, , , 
.局部变量 计次, 整数型, , , 
.局部变量 x变量解, 双精度小数型, 静态, "0", x变量解
.局部变量 x变量系数逆阵, 双精度小数型, 静态, "0", x变量系数逆阵
.局部变量 x矩阵行列式, 双精度小数型, , , x矩阵行列式
.局部变量 成员数, 整数型, , , 2-50之间的整数

赋值 (成员数, 取数组成员数 (匿名参数_1477))
.如果真 (小于 (成员数, 2))
    赋值 (成员数, 2)
.如果真结束
.如果真 (大于 (成员数, 50))
    赋值 (成员数, 50)
.如果真结束

重定义数组 (x变量解, 假, 成员数)
重定义数组 (x变量系数逆阵, 假, 成员数, 成员数)

.如果 (等于 (线性方程.未知支持库函数_33 (匿名参数_1476, 匿名参数_1477, x变量解, x变量系数逆阵, x矩阵行列式), 假))
    返回 (“”)
.否则
    赋值 (结果文本, 相加 (“x变量解：”, #换行符))
    .计次循环首 (成员数, 计次)
        赋值 (结果文本, 相加 (结果文本, 到文本 (x变量解 [计次]), #换行符))
    .计次循环尾 ()
    
    赋值 (结果文本, 相加 (结果文本, #换行符, “x变量系数逆阵：”, #换行符))
    .计次循环首 (成员数, 计次)
        .计次循环首 (成员数, 子计次)
            赋值 (结果文本, 相加 (结果文本, 到文本 (x变量系数逆阵 [计次] [子计次]), “  ”))
        .计次循环尾 ()
        赋值 (结果文本, 相加 (到文本 (计次), 结果文本, #换行符, #换行符))
    .计次循环尾 ()
    赋值 (结果文本, 相加 (结果文本, “x矩阵行列式：”, 到文本 (x矩阵行列式), #换行符))
    返回 (结果文本)
.如果结束


.类模块 概要统计类, , , 

.程序集变量 统计数据, 未知类型0x30005, , , 
.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 方法_统计概要, 文本型, 公开, 对数据集的每一列计算概要统计 - 最大值、最小值、范围、总和、平均值、方差、标准偏差、众数和平均值的标准误差。
.参数 原数据数组, 双精度小数型, 数组, 要转换的文本串.必须是二维数组.

.局部变量 文本, 文本型, , , 
.局部变量 计次变量, 整数型, , , 
.局部变量 匿名局部变量_1489, 空白型, , , 
.局部变量 最小值数组, 双精度小数型, , "0", 
.局部变量 最大值数组, 双精度小数型, , "0", 
.局部变量 范围值数组, 双精度小数型, , "0", 
.局部变量 总和数组, 双精度小数型, , "0", 
.局部变量 平均值数组, 双精度小数型, , "0", 
.局部变量 方差值数组, 双精度小数型, , "0", 
.局部变量 标准偏差值数组, 双精度小数型, , "0", 
.局部变量 标准误差值数组, 双精度小数型, , "0", 
.局部变量 众数值数组, 双精度小数型, , "0", 
.局部变量 原数据, 双精度小数型, , "0", 
.局部变量 匿名局部变量_1500, 空白型, , , 
.局部变量 未转换原数据, 文本型, , "0", 
.局部变量 数组下标, 整数型, , , 
.局部变量 内计次, 整数型, , , 
.局部变量 计次, 整数型, , , 

复制数组 (原数据, 原数据数组)
赋值 (数组下标, 取数组下标 (原数据, 1))

重定义数组 (最小值数组, 假, 数组下标)
重定义数组 (最大值数组, 假, 数组下标)
重定义数组 (范围值数组, 假, 数组下标)
重定义数组 (总和数组, 假, 数组下标)
重定义数组 (平均值数组, 假, 数组下标)
重定义数组 (方差值数组, 假, 数组下标)
重定义数组 (标准偏差值数组, 假, 数组下标)
重定义数组 (标准误差值数组, 假, 数组下标)
重定义数组 (众数值数组, 假, 数组下标)

.如果真 (统计数据.未知支持库函数_32 (原数据, 最小值数组, 最大值数组, 范围值数组, 总和数组, 平均值数组, 方差值数组, 标准偏差值数组, 标准误差值数组, 众数值数组))
    赋值 (文本, 相加 (“最小值:”, #换行符))
    .计次循环首 (取数组成员数 (最小值数组), 计次变量)
        赋值 (文本, 相加 (文本, 到文本 (最小值数组 [计次变量]), #换行符))
    .计次循环尾 ()
    赋值 (文本, 相加 (文本, #换行符, “最大值:”, #换行符))
    .计次循环首 (取数组成员数 (最大值数组), 计次变量)
        赋值 (文本, 相加 (文本, 到文本 (最大值数组 [计次变量]), #换行符))
    .计次循环尾 ()
    赋值 (文本, 相加 (文本, #换行符, “范围值:”, #换行符))
    .计次循环首 (取数组成员数 (范围值数组), 计次变量)
        赋值 (文本, 相加 (文本, 到文本 (范围值数组 [计次变量]), #换行符))
    .计次循环尾 ()
    赋值 (文本, 相加 (文本, #换行符, “范围值:”, #换行符))
    .计次循环首 (取数组成员数 (总和数组), 计次变量)
        赋值 (文本, 相加 (文本, 到文本 (总和数组 [计次变量]), #换行符))
    .计次循环尾 ()
    赋值 (文本, 相加 (文本, #换行符, “平均值:”, #换行符))
    .计次循环首 (取数组成员数 (平均值数组), 计次变量)
        赋值 (文本, 相加 (文本, 到文本 (平均值数组 [计次变量]), #换行符))
    .计次循环尾 ()
    赋值 (文本, 相加 (文本, #换行符, “方差值:”, #换行符))
    .计次循环首 (取数组成员数 (方差值数组), 计次变量)
        赋值 (文本, 相加 (文本, 到文本 (方差值数组 [计次变量]), #换行符))
    .计次循环尾 ()
    赋值 (文本, 相加 (文本, #换行符, “标准偏差值:”, #换行符))
    .计次循环首 (取数组成员数 (标准偏差值数组), 计次变量)
        赋值 (文本, 相加 (文本, 到文本 (标准偏差值数组 [计次变量]), #换行符))
    .计次循环尾 ()
    赋值 (文本, 相加 (文本, #换行符, “标准误差值:”, #换行符))
    .计次循环首 (取数组成员数 (标准误差值数组), 计次变量)
        赋值 (文本, 相加 (文本, 到文本 (标准误差值数组 [计次变量]), #换行符))
    .计次循环尾 ()
    赋值 (文本, 相加 (文本, #换行符, “众数值:”, #换行符))
    .计次循环首 (取数组成员数 (众数值数组), 计次变量)
        赋值 (文本, 相加 (文本, 到文本 (众数值数组 [计次变量]), #换行符))
    .计次循环尾 ()
    返回 (文本)
.如果真结束
返回 (“”)




.窗口程序集 联立方程概要统计窗口程序集, , , 

.程序集变量 y向量, 逻辑型, , , 
.程序集变量 集_第一维, 整数型, , , 
.程序集变量 集_第二维, 整数型, , , 
.程序集变量 集_概要统计数据, 双精度小数型, , "0", 
.子程序 _联立方程添加超级按钮_被单击, 空白型, , 
.局部变量 操作值, 双精度小数型, , , 

赋值 (操作值, 到数值 (.内容))
.判断开始 (等于 (.选中, 真))
    .如果真 (等于 (取项目数 (), 25))
        信息框 (“数组成员最大为25”, 0, )
        返回 ()
    .如果真结束
    到文本 (操作值).加入项目 ()
    赋值 (.现行选中项, 相减 (取项目数 (), 1))
.判断 (等于 (y向量, 真))
    .如果真 (等于 (取项目数 (), 50))
        信息框 (“数组成员最大为25”, 0, )
        返回 ()
    .如果真结束
    到文本 (操作值).加入项目 ()
    赋值 (.现行选中项, 相减 (取项目数 (), 1))
.默认
    .如果真 (等于 (取项目数 (), 50))
        信息框 (“数组成员最大为25”, 0, )
        返回 ()
    .如果真结束
    到文本 (操作值).加入项目 ()
    赋值 (.现行选中项, 相减 (取项目数 (), 1))
.判断结束
赋值 (.内容, “”)
获取焦点 ()

.子程序 _联立方程修改超级按钮_被单击, 空白型, , 
.局部变量 操作值, 整数型, , , 

赋值 (操作值, 到数值 (.内容))
.判断开始 (等于 (.选中, 真))
    .置项目文本 (.现行选中项, 到文本 (操作值))
.判断 (等于 (y向量, 真))
    .置项目文本 (.现行选中项, 到文本 (操作值))
.默认
    .置项目文本 (.现行选中项, 到文本 (操作值))
.判断结束


.子程序 _联立方程删除超级按钮_被单击, 空白型, , 
.判断开始 (等于 (.选中, 真))
    .删除项目 (.现行选中项)
    赋值 (.现行选中项, 相减 (取项目数 (), 1))
.判断 (等于 (y向量, 真))
    .删除项目 (.现行选中项)
    赋值 (.现行选中项, 相减 (取项目数 (), 1))
.默认
    .删除项目 (.现行选中项)
    赋值 (.现行选中项, 相减 (取项目数 (), 1))
.判断结束


.子程序 _联立方程清空超级按钮_被单击, 空白型, , 
.判断开始 (等于 (.选中, 真))
    清空 ()
.判断 (等于 (y向量, 真))
    清空 ()
.默认
    清空 ()
.判断结束


.子程序 _联立方程计算超级按钮_被单击, 空白型, , 
.局部变量 联立方程类, 联立方程, , , 
.局部变量 x变量系数, 双精度小数型, , "0", 
.局部变量 y向量二维数组, 双精度小数型, , "0", 
.局部变量 计次, 整数型, , , 
.局部变量 返回, 文本型, , , 

赋值 (返回, “”)
.如果真 (不等于 (取项目数 (), 取项目数 ()))
    信息框 (“二维数组成员必须相同”, 0, )
    返回 ()
.如果真结束
.如果真 (等于 (取项目数 (), 0))
    返回 ()
.如果真结束
重定义数组 (y向量二维数组, 假, 取项目数 (), 取项目数 ())
.计次循环首 (取项目数 (), 计次)
    加入成员 (x变量系数, 到数值 (相减 (计次, 1).取项目文本 ()))
.计次循环尾 ()

.计次循环首 (取项目数 (), 计次)
    赋值 (y向量二维数组 [计次] [1], 到数值 (相减 (计次, 1).取项目文本 ()))
    赋值 (y向量二维数组 [计次] [2], 到数值 (相减 (计次, 1).取项目文本 ()))
.计次循环尾 ()
赋值 (返回, 联立方程类.线性方程组 (y向量二维数组, x变量系数))
赋值 (.内容, 返回)

.子程序 _关闭按钮_被单击, 空白型, , 
联立方程概要统计窗口.销毁 ()

.子程序 _联立方程第一维列表框_获得焦点, 空白型, , 
赋值 (y向量, 真)

.子程序 _联立方程第二维列表框_获得焦点, 空白型, , 
赋值 (y向量, 假)

.子程序 _创建超级按钮_被单击, 空白型, , 
.局部变量 计次, 整数型, , , 

赋值 (集_第一维, 到数值 (.内容))
赋值 (集_第二维, 到数值 (.内容))
.如果真 (或者 (等于 (集_第一维, 0), 等于 (集_第二维, 0)))
    信息框 (“创建的第一维或第二维不能为0”, #警告图标, )
    返回 ()
.如果真结束
重定义数组 (集_概要统计数据, 假, 集_第一维, 集_第二维)

清空 ()
.计次循环首 (集_第一维, 计次)
    到文本 (计次).加入项目 ()
.计次循环尾 ()
赋值 (.现行选中项, 0)
_概要统计第一维列表框_列表项被选择 ()

.子程序 _概要统计第一维列表框_列表项被选择, 空白型, , 
.局部变量 计次, 整数型, , , 

清空 ()
.计次循环首 (集_第二维, 计次)
    到文本 (集_概要统计数据 [相加 (.现行选中项, 1)] [计次]).加入项目 ()
.计次循环尾 ()
赋值 (.现行选中项, 0)

.子程序 _操作值编辑框_内容被改变, 空白型, , 
.局部变量 操作值, 双精度小数型, , , 

.如果真 (小于 (.现行选中项, 0))
    返回 ()
.如果真结束
赋值 (操作值, 到数值 (.内容))
.置项目文本 (.现行选中项, .内容)
赋值 (集_概要统计数据 [相加 (.现行选中项, 1)] [相加 (.现行选中项, 1)], 操作值)

.子程序 _概要统计计算超级按钮_被单击, 空白型, , 
.局部变量 返回, 文本型, , , 
.局部变量 概要统计类, 概要统计类, , , 

.如果真 (等于 (取数组成员数 (集_概要统计数据), 0))
    返回 ()
.如果真结束
赋值 (返回, 概要统计类.方法_统计概要 (集_概要统计数据))
赋值 (.内容, 返回)

.子程序 _概要统计第二维列表框_列表项被选择, 空白型, , 
赋值 (.内容, .取项目文本 (.现行选中项))

.子程序 _帮助按钮_被单击, 空白型, , 
.局部变量 目录, 文本型, , , 

赋值 (目录, 取临时文件名 ())
写到文件 (目录, #联立方程概要统计)
运行 (相加 (“notepad.exe ”, 目录), 假, )


 ' 不属于任何一个程序集、类模块的函数：
