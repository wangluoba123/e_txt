 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 680
    高度 = 421
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 真
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    窗口类名 = “”
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “本地文件管理系统”
    帮助文件名 = “”



.常量 视图方式_缩略图, "28717", , 28717,T&humbnails
.常量 视图方式_平铺, "28718", , 28718,Tile&s
.常量 视图方式_图标, "28713", , 28713,Ico&ns
.常量 视图方式_列表, "28715", , 28715,&List
.常量 视图方式_详细信息, "28716", , 28716,&Details
.常量 WM_COMMAND, "273", , 当用户选择一条菜单命令项或当某个控件发送一条消息给它的父窗口，一个快捷键被翻译


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 5 0 系统核心支持库
 ' iext3 {B6F7542F-B8FE-46a8-9605-98856A687097} 3 0 扩展界面支持库三
 ' iext 27bb20fdd3e145e4bee3db39ddd6e64c 2 0 扩展界面支持库一
 ' shell 52F260023059454187AF826A3C07AF2A 3 0 操作系统界面功能支持库
 ' EThread 5F99C1642A2F4e03850721B4F5D7C3F8 2 0 多线程支持库
 ' eAPI F7FC1AE45C5C4758AF03EF19F18A395D 3 0 应用接口支持库
 ' EDataStructure 0AFF5F28B2CB42ce906AA27D6E485457 2 0 数据结构支持库
 ' spec A512548E76954B6E92C21055517615B0 3 0 特殊功能支持库
 ' eDB 46E94341933A462383A4DE26B146322C 2 1 数据库操作支持库
 ' xplib 7F54B9CE8887428dBA9CEEB94CEF4C72 2 0 XP风格界面库





.DLL命令 FindWindow, 整数型, "user32", "FindWindowA", , 寻找窗口列表中第一个符合指定条件的顶级窗口（在vb里使用：FindWindow最常见的一个用途是获得ThunderRTMain类的隐藏窗口的句柄；该类是所有运行中vb执行程序的一部分。获得句柄后，可用api函数GetWindowText取得这个窗口的名称；该名也是应用程序的标题）　找到窗口的句柄。如未找到相符窗口，则返回零。会设置GetLastError
    .参数 lpClassName, 文本型, , 指向包含了窗口类名的空中止（C语言）字串的指针；或设为零，表示接收任何类
    .参数 lpWindowName, 文本型, , 指向包含了窗口文本（或标签）的空中止（C语言）字串的指针；或设为零，表示接收任何窗口标题  示例Dim hw&, cnt&Dim rttitle As  * 256hw& = FindWindow("ThunderRT5Main", vbNullString) ' ThunderRTMain under VB4cnt = GetWindowText(hw&, rttitle, 255)MsgBox Left, 0, "RTMain title";

.DLL命令 SendMessage, 整数型, "user32", "SendMessageA", , 调用一个窗口的窗口函数，将一条消息发给那个窗口。除非消息处理完毕，否则该函数不会返回。SendMessageBynum， ;    SendMessageByString是该函数的“类型安全”声明形式　由具体的消息决定
    .参数 hwnd, 整数型, , 要接收消息的那个窗口的句柄
    .参数 wMsg, 整数型, , 消息的标识符
    .参数 wParam, 整数型, , 具体取决于消息
    .参数 lParam, 整数型, , 具体取决于消息;

.DLL命令 SetForegroundWindow, 整数型, "user32", "SetForegroundWindow", , 将窗口设为系统的前台窗口。这个函数可用于改变用户目前正在操作的应用程序　非零表示成功，零表示失败。会设置GetLastError
    .参数 hwnd, 整数型, , 带到前台的窗口;  

.窗口程序集 窗口程序集1, , , 

.程序集变量 驱动器列表, 文本型, , "0", 
.程序集变量 扩展名, 文本型, , , 
.程序集变量 许可区_写, 整数型, , , 
.程序集变量 序号, 整数型, , , 
.程序集变量 搜索线程句柄, 整数型, , "0", 
.程序集变量 匿名程序集变量_159, 空白型, , , 
.程序集变量 结束时间, 日期时间型, , , 
.程序集变量 初始时间, 日期时间型, , , 
.程序集变量 待搜索的目录, 整数型, , , 
.子程序 _按钮3_被单击, 空白型, , 
.局部变量 目录, 文本型, , , 


 ' 赋值 (目录, 未知支持库函数_2 (“请选取搜索目录”, ))
赋值 (.内容, 目录)
.如果真 (等于 (.内容, “”))
    赋值 (.内容, “搜索所有硬盘”)
.如果真结束


.子程序 _按钮1_被单击, 空白型, , 
.局部变量 N2, 整数型, , , 
.局部变量 A, 整数型, , , 
.局部变量 P, 整数型, , , 
.局部变量 扩展名2, 文本型, , , 


清除数组 (搜索线程句柄)
全部删除 ()
赋值 (初始时间, 取现行时间 ())
赋值 (.时钟周期, 0)
赋值 (.禁止, 真)
赋值 (.禁止, 假)
.如果 (不等于 (.内容, “”))
    赋值 (扩展名, .内容)
    赋值 (扩展名2, 取文本左边 (扩展名, 1))
    .如果真 (等于 (扩展名2, “.”))
        赋值 (扩展名, 取文本右边 (扩展名, 相减 (取文本长度 (扩展名), 1)))
    .如果真结束
    调试输出 (相加 (“扩展名:”, 扩展名))
    .如果 (等于 (.内容, “搜索所有硬盘”))
        赋值 (许可区_写, 未知支持库函数_1 ())
        赋值 (驱动器列表, 未知支持库函数_5 (0))
        赋值 (N2, 取数组成员数 (驱动器列表))
        重定义数组 (搜索线程句柄, 假, N2)
        赋值 (P, 1)
        赋值 (序号, 0)
        .判断循环首 (大于或等于 (N2, P))
            未知支持库函数_0 (&全盘搜索文件, P, 搜索线程句柄 [P])
            赋值 (P, 相加 (P, 1))
        .判断循环尾 ()
    .否则
        调试输出 (“搜索线1”)
        重定义数组 (搜索线程句柄, 假, 1)
        未知支持库函数_0 (&全盘搜索文件, 65530, 搜索线程句柄 [1])
    .如果结束
    
.否则
    信息框 (“请输入或选取需要搜索的文件扩展名！”, 0, “提示”)
.如果结束

 ' 标签3.标题 ＝ “共用时间：” ＋ 到文本 (取时间间隔 (初始时间, 结束时间, 8)) ＋ “秒”
赋值 (.时钟周期, 1000)

 ' 按钮1.禁止 ＝ 假
 ' 按钮4.禁止 ＝ 真

.子程序 全盘搜索文件, 空白型, , 
.参数 待搜索的目录号, 整数型, , 

赋值 (待搜索的目录, 待搜索的目录号)
.如果 (等于 (待搜索的目录号, 65530))
    全盘搜索文件2 (.内容)
    调试输出 (“搜索线2”)
.否则
    全盘搜索文件2 (相加 (驱动器列表 [待搜索的目录号], “\”))
.如果结束


.子程序 全盘搜索文件2, 空白型, , 
.参数 目录, 文本型, , 

.局部变量 队列, 未知类型0x70004, , , 
.局部变量 节点, 未知类型0x70001, , , 
.局部变量 节点1, 未知类型0x70001, , , 
.局部变量 路径, 文本型, , , 
.局部变量 文件夹名称, 文本型, , , 
.局部变量 文件名, 文本型, , , 
.局部变量 文件数目, 整数型, , , 
.局部变量 加入表项, 整数型, , , 
.局部变量 文件大小, 文本型, , , 
.局部变量 创建日期, 日期时间型, , , 

节点.未知支持库函数_3 (“path”, 目录)
 ' 把初始目录加到队列
队列.未知支持库函数_50 (节点)
.判断循环首 (等于 (队列.未知支持库函数_46 (), 假))
     ' 弹出队列最前一个元素作为目录,对该目录进行文件夹枚举和文件枚举
    队列.未知支持库函数_51 (节点1)
    节点1.未知支持库函数_11 (“path”, 路径)
    赋值 (路径, 选择 (不等于 (取文本右边 (路径, 1), “\”), 相加 (路径, “\”), 路径))
    赋值 (文件夹名称, 寻找文件 (相加 (路径, “*.*”), #子目录))
    .判断循环首 (不等于 (文件夹名称, “”))
        .如果真 (并且 (不等于 (文件夹名称, “.”), 不等于 (文件夹名称, “..”)))
             ' 如果在当前目录下找到了文件夹,则把该文件夹压入到队列,等待扫描该文件夹的下一级目录和文件名
            节点.未知支持库函数_5 (“path”, 相加 (路径, 文件夹名称))
            队列.未知支持库函数_50 (节点)
        .如果真结束
        赋值 (文件夹名称, 寻找文件 (#子目录))
    .判断循环尾 ()
    处理事件 ()
     ' 寻找当前目录的所有文件
    赋值 (文件名, 寻找文件 (相加 (路径, “*.”, .内容), ))
    .判断循环首 (不等于 (文件名, “”))
        .如果真 (不等于 (待搜索的目录, 65530))
            未知支持库函数_3 (许可区_写)
        .如果真结束
        
        赋值 (序号, 相加 (取表项数 (), 1))
        赋值 (文件大小, 相加 (到文本 (四舍五入 (相除 (取文件尺寸 (相加 (路径, 文件名)), 1024), 2)), “KB”))
        赋值 (创建日期, 取文件时间 (相加 (路径, 文件名)))
        赋值 (加入表项, .插入表项 ())
        加入表项.置标题 (0, 到文本 (序号))
        加入表项.置标题 (1, 文件名)
        加入表项.置标题 (2, 相加 (路径, 文件名))
        加入表项.置标题 (3, 文件大小)
        加入表项.置标题 (4, 到文本 (创建日期))
        277.发送信息 (7, 0)
        相加 (“select * from filename where dir0='”, 路径, 文件名, “' and filename='”, 文件名, “' ”).未知支持库函数_14 (#)
         ' 调试输出 (“select * from filename where dir0='” ＋ 路径 ＋ 文件名 ＋ “' order by ID desc”)
        .如果真 (小于 (., 1))
            未知支持库函数_17 ()
            “filename”.未知支持库函数_20 (文件名)
            “dir0”.未知支持库函数_20 (相加 (路径, 文件名))
            “filemadel”.未知支持库函数_20 (.内容)
            “size”.未知支持库函数_20 (文件大小)
            “date1”.未知支持库函数_25 (创建日期, )
            未知支持库函数_18 ()
            
        .如果真结束
        未知支持库函数_16 ()
        .如果真 (不等于 (待搜索的目录, 65530))
            未知支持库函数_4 (许可区_写)
        .如果真结束
        
        赋值 (文件名, 寻找文件 ())
    .判断循环尾 ()
    
.判断循环尾 ()
 ' 删除进入许可证 (许可区_写)

.子程序 __启动窗口_创建完毕, 空白型, , 
未知支持库函数_0 (#)
赋值 (.禁止, 真)
.如果 (相加 (取运行目录 (), “\fileadmin.dll”).未知支持库函数_1 (“”))
    .未知支持库函数_12 ()
.否则
    信息框 (“程序数据初始化失败,请检查数据库是否存在！”, 0, “提示”)
    _启动窗口.销毁 ()
.如果结束



.子程序 _时钟1_周期事件, 空白型, , 
.局部变量 N, 整数型, , , 
.局部变量 计次, 整数型, , , 
.局部变量 PN, 整数型, , , 
.局部变量 PM, 整数型, , , 

赋值 (结束时间, 取现行时间 ())
赋值 (.标题, 到文本 (取现行时间 ()))
赋值 (N, 取数组成员数 (搜索线程句柄))
.如果 (等于 (N, 0))
    赋值 (.禁止, 假)
    赋值 (.禁止, 真)
    赋值 (.标题, 相加 (“共用了”, 到文本 (取时间间隔 (初始时间, 结束时间, 8)), “秒”))
.否则
    赋值 (PM, N)
    .计次循环首 (N, 计次)
        赋值 (PN, 搜索线程句柄 [计次])
        .如果真 (等于 (PN, 0))
            删除成员 (搜索线程句柄, 计次, 1)
            赋值 (PM, 相减 (PM, 1))
            重定义数组 (搜索线程句柄, 真, PM)
        .如果真结束
        
    .计次循环尾 ()
    .如果真 (不等于 (待搜索的目录, 65530))
        未知支持库函数_2 (许可区_写)
    .如果真结束
    
.如果结束


.子程序 _按钮4_被单击, 空白型, , 
.局部变量 N, 整数型, , , 
.局部变量 计次, 整数型, , , 

赋值 (N, 取数组成员数 (搜索线程句柄))
赋值 (.时钟周期, 0)
.如果真 (大于 (N, 0))
    .计次循环首 (N, 计次)
         ' 强制结束线程 ()
        未知支持库函数_6 (搜索线程句柄 [计次])
         ' 关闭线程句柄 (搜索线程句柄 [计次])
    .计次循环尾 ()
    清除数组 (搜索线程句柄)
    调试输出 (“数组已经清除”)
.如果真结束
赋值 (.禁止, 假)
赋值 (.禁止, 真)
.如果真 (不等于 (待搜索的目录, 65530))
    未知支持库函数_2 (许可区_写)
.如果真结束


.子程序 _超级列表框1_左键单击表项, 空白型, , 
弹出菜单 ()


.子程序 _打开目录_被选择, 空白型, , 
.如果真 (不等于 (., -1))
    按视图打开文件夹 (删首尾空 (.取标题 (., 2)), #视图方式_平铺)
    调试输出 (.取标题 (., 2))
.如果真结束
.如果真 (不等于 (., -1))
    按视图打开文件夹 (删首尾空 (.取标题 (., 2)), #视图方式_平铺)
    调试输出 (.取标题 (., 2))
.如果真结束


.子程序 按视图打开文件夹, 空白型, , 
.参数 文件夹目录, 文本型, , 
.参数 视图方式, 整数型, , 请用“视图方式”开头的常量

.局部变量 hWnd, 整数型, , , 

运行 (相加 (“Explorer /select, ”, 文件夹目录), 假, ) ' 先打开那个文件夹
赋值 (hWnd, FindWindow (“CabinetWClass”, 文件夹目录)) ' 查找窗口句柄
SetForegroundWindow (hWnd) ' 将窗口设为系统的前台窗口
SendMessage (hWnd, #WM_COMMAND, 视图方式, 0) ' 发送一个菜单命令给窗口

.子程序 _打开文件_被选择, 空白型, , 


.子程序 __启动窗口_位置被改变, 空白型, , 
.局部变量 宽度0, 整数型, , , 
.局部变量 高度0, 整数型, , , 
.局部变量 宽度01, 小数型, , , 
.局部变量 高度01, 小数型, , , 

赋值 (宽度0, _启动窗口.取用户区宽度 ())
赋值 (高度0, _启动窗口.取用户区高度 ())
赋值 (宽度01, 相除 (宽度0, 100))
赋值 (高度01, 相除 (高度0, 100))

.移动 (宽度0, _启动窗口.取用户区高度 ())
.移动 (相减 (宽度0, 5), 相减 (高度0, 58))
.移动 (相减 (宽度0, 5), 相减 (高度0, 58))
0.置列宽 (相乘 (宽度01, 5))
1.置列宽 (相乘 (宽度01, 20))
2.置列宽 (相乘 (宽度01, 35))
3.置列宽 (相乘 (宽度01, 20))
4.置列宽 (相乘 (宽度01, 20))
0.置列宽 (相乘 (宽度01, 5))
1.置列宽 (相乘 (宽度01, 20))
2.置列宽 (相乘 (宽度01, 35))
3.置列宽 (相乘 (宽度01, 20))
4.置列宽 (相乘 (宽度01, 20))


.子程序 __启动窗口_尺寸被改变, 空白型, , 
.局部变量 宽度0, 整数型, , , 
.局部变量 高度0, 整数型, , , 
.局部变量 宽度01, 小数型, , , 
.局部变量 高度01, 小数型, , , 

赋值 (宽度0, _启动窗口.取用户区宽度 ())
赋值 (高度0, _启动窗口.取用户区高度 ())
赋值 (宽度01, 相除 (宽度0, 100))
赋值 (高度01, 相除 (高度0, 100))
.移动 (宽度0, _启动窗口.取用户区高度 ())
.移动 (相减 (宽度0, 5), 相减 (高度0, 58))
.移动 (相减 (宽度0, 5), 相减 (高度0, 58))
0.置列宽 (相乘 (宽度01, 5))
1.置列宽 (相乘 (宽度01, 20))
2.置列宽 (相乘 (宽度01, 45))
3.置列宽 (相乘 (宽度01, 10))
4.置列宽 (相乘 (宽度01, 20))
0.置列宽 (相乘 (宽度01, 5))
1.置列宽 (相乘 (宽度01, 20))
2.置列宽 (相乘 (宽度01, 45))
3.置列宽 (相乘 (宽度01, 10))
4.置列宽 (相乘 (宽度01, 20))

.子程序 _按钮2_被单击, 空白型, , 
.局部变量 数, 整数型, , , 
.局部变量 文件名, 文本型, , , 
.局部变量 路径, 文本型, , , 
.局部变量 文件大小, 文本型, , , 
.局部变量 创建日期, 日期时间型, , , 
.局部变量 计次, 整数型, , , 
.局部变量 加入表项, 整数型, , , 

相加 (“select * from filename where filemadel='”, .内容, “' and filename like '%”, .内容, “%' order by ID desc ”).未知支持库函数_14 (#)
赋值 (数, .)
.如果 (大于 (数, 0))
    未知支持库函数_34 ()
    .计次循环首 (数, 计次)
        “filename”.未知支持库函数_26 (文件名)
        “dir0”.未知支持库函数_26 (路径)
        “filemadel”.未知支持库函数_26 (扩展名)
        “size”.未知支持库函数_26 (文件大小)
        “date1”.未知支持库函数_31 (创建日期)
        未知支持库函数_36 ()
        赋值 (加入表项, .插入表项 ())
        加入表项.置标题 (0, 到文本 (计次))
        加入表项.置标题 (1, 文件名)
        加入表项.置标题 (2, 路径)
        加入表项.置标题 (3, 文件大小)
        加入表项.置标题 (4, 到文本 (创建日期))
        277.发送信息 (7, 0)
        
    .计次循环尾 ()
    
.否则
    信息框 (相加 (“没找到包含有”, .内容, “关键词的文件。”), 0, “提示”)
    
.如果结束

未知支持库函数_16 ()


.子程序 _超级列表框2_左键单击表项, 空白型, , 
弹出菜单 ()

.子程序 _编辑框2_获得焦点, 空白型, , 
.如果真 (等于 (.内容, “关键词”))
    赋值 (.内容, “”)
.如果真结束



.子程序 _编辑框2_失去焦点, 空白型, , 
.如果真 (等于 (.内容, “”))
    赋值 (.内容, “关键词”)
.如果真结束



 ' 不属于任何一个程序集、类模块的函数：
