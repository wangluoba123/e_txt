 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 454
    高度 = 494
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = 15527148 '  0xECECEC
    最大化按钮 = 假
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “[神2也教你学E] - 多用户远程数据库操作(服务端)”
    帮助文件名 = “”

窗口 用户管理窗口
    左边 = 50
    顶边 = 50
    宽度 = 412
    高度 = 477
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = 15527148 '  0xECECEC
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “用户管理”
    帮助文件名 = “”



.图片 托盘图标, " ' 已保存到：D:\易语言学习\Data\Server.e\托盘图标", , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 3 9 系统核心支持库
 ' iext 27bb20fdd3e145e4bee3db39ddd6e64c 1 1 扩展界面支持库一
 ' xplib 7F54B9CE8887428dBA9CEEB94CEF4C72 1 1 XP风格界面库
 ' eDB 46E94341933A462383A4DE26B146322C 1 2 数据库操作支持库
 ' EThread 5F99C1642A2F4e03850721B4F5D7C3F8 1 1 多线程支持库





.窗口程序集 窗口程序集1, , , 

.程序集变量 用户临时记录, 文本型, , , 临时记录连接的用户信息
.程序集变量 在线用户列表, 文本型, , "0", 
.程序集变量 在线用户名称列表, 文本型, , "0", 
.程序集变量 在线用户时间列表, 文本型, , "0", 
.程序集变量 管理员名称, 文本型, , , 
.程序集变量 管理员密码, 文本型, , , 
.程序集变量 当前客户端地址, 文本型, , , 
.程序集变量 网络命令, 文本型, , , 
.程序集变量 命令参数, 文本型, , "0", 
.子程序 __启动窗口_创建完毕, 空白型, , 
赋值 (管理员名称, 读系统配置 (“管理员名称”, “管理员”))
赋值 (管理员密码, 读系统配置 (“管理员密码”, “8888”))
未知支持库函数_0 (#)
.如果真 (取反 (相加 (取运行目录 (), “\MainDB.mdb”).未知支持库函数_1 (“”)))
    信息框 (“无法连接数据库,请检测数据库是否存在!”, #错误图标, “”)
.如果真结束
.未知支持库函数_12 ()

.子程序 服务端_处理数据, 整数型, , 
.局部变量 用户名, 文本型, , , 
.局部变量 密码, 文本型, , , 
.局部变量 地址, 文本型, , , 
.局部变量 管理员资料, 字节集, , , 

.如果 (大于 (取数组成员数 (), 2))
    赋值 ( [取数组成员数 ()], 全文本替换 ( [取数组成员数 ()], “*”, “:”))
    赋值 (用户名,  [相减 (取数组成员数 (), 2)])
    赋值 (密码,  [相减 (取数组成员数 (), 1)])
    赋值 (地址,  [取数组成员数 ()])
    
    
    
    .判断开始 (等于 (“连接”))
        .如果 (等于 (服务端_验证用户 ( [1],  [2]), 1))
            服务端_新客户 (删首尾空 ( [1]), 用户临时记录)
            服务端_发送网络命令 (“连接成功”, 用户临时记录, “0”)
        .否则
            .如果真 (等于 (服务端_验证用户 ( [1],  [2]), 2))
                服务端_新客户 (删首尾空 ( [1]), 用户临时记录)
                服务端_发送网络命令 (“连接成功”, 用户临时记录, “1”)
                返回 (0)
            .如果真结束
            服务端_发送网络命令 (“连接失败”, 用户临时记录)
        .如果结束
        返回 (0)
    .判断 (等于 (“改管理员密码”))
        .如果 (服务端_是否是超管 (用户名))
            赋值 (管理员名称,  [1])
            赋值 (_启动窗口.,  [2])
            写系统配置 (“管理员名称”,  [1])
            写系统配置 (“管理员密码”,  [2])
            服务端_发送网络命令 (“改管理员密码_成功”, 地址)
        .否则
            服务端_发送网络命令 (“改管理员密码_失败”, 地址)
        .如果结束
        返回 (0)
    .判断 (等于 (“改普管资料”))
        .如果真 (管理员_修改资料 ( [1],  [2],  [3]))
            赋值 (管理员资料, 管理员_取所有管理员资料 ())
            服务端_发送网络命令 (“改普管资料_成功”, 地址, , 管理员资料)
        .如果真结束
        返回 (0)
    .判断 (等于 (“取普管列表”))
        赋值 (管理员资料, 管理员_取所有管理员资料 ())
        服务端_发送网络命令 (“取普管列表”, 地址, , 管理员资料)
    .判断 (等于 (“添加管理员”))
        .如果真 (管理员_添加管理员 (命令参数 [1], 命令参数 [2]))
            服务端_发送网络命令 (“取普管列表”, 地址, , 管理员_取所有管理员资料 ())
        .如果真结束
        返回 (0)
    .判断 (等于 (“删除管理员”))
        管理员_删除管理员 ( [1])
        赋值 (管理员资料, 管理员_取所有管理员资料 ())
        服务端_发送网络命令 (“取普管列表”, 地址, , 管理员资料)
        返回 (0)
    .默认
        
    .判断结束
    
    
    
    返回 (0)
.否则
    返回 (0)
.如果结束


.子程序 服务端_是否是超管, 逻辑型, , 
.参数 用户, 文本型, , 

.如果 (等于 (用户, 管理员名称))
    返回 (真)
.否则
    返回 (假)
.如果结束


.子程序 服务端_验证用户, 整数型, , 0.没有  1.为普通用户  2.为超级用户
.参数 用户, 文本型, , 
.参数 密码, 文本型, , 

.如果 (并且 (等于 (删首尾空 (用户), 读系统配置 (“管理员名称”, “管理员”)), 等于 (删首尾空 (密码), 读系统配置 (“管理员密码”))))
    返回 (2)
.否则
    相加 (“Select ID,管理员,密码 From 管理员 Where 管理员='”, 用户, “' and 密码='”, 密码, “'”).未知支持库函数_14 (#)
    .如果 (大于 (_启动窗口.., 0))
        返回 (1)
    .否则
        返回 (0)
    .如果结束
    
.如果结束


.子程序 服务端_发送网络命令, 逻辑型, , 
.参数 网络命令, 文本型, , 
.参数 远程客户端地址, 文本型, , 
.参数 命令参数, 文本型, 可空, 
.参数 真实数据, 字节集, 可空, 

.局部变量 临时文本容器, 文本型, , , 

赋值 (临时文本容器, )
.如果真 (不等于 (“”))
    赋值 (临时文本容器, 相加 (临时文本容器, “:”, ))
.如果真结束
赋值 (临时文本容器, 相加 (临时文本容器, “:”, 全文本替换 (远程客户端地址, “:”, “*”)))
.如果 (远程客户端地址.发送数据 (相加 (到字节集 (相加 (临时文本容器, “@”)), 真实数据), 30))
    返回 (真)
.否则
    返回 (假)
.如果结束


.子程序 接收网络命令, 文本型, , 分析网络数据包并且返回网络命令,参数和真实数据
.参数 欲处理数据, 字节集, , 接收到的网络数据包
.参数 返回参数, 文本型, 可空 数组, 返回用户自定义的网络命令的参数
.参数 返回数据, 字节集, 可空, 返回接收到的数据包中的真实数据

.局部变量 临时整数变量, 整数型, , , 
.局部变量 临时文本变量, 文本型, , , 

赋值 (临时整数变量, 寻找字节集 (欲处理数据, 到字节集 (“@”))) ' 用来记录用户自定义的网络命令起始分割位置
赋值 (临时文本变量, 到文本 (取字节集左边 (欲处理数据, 相减 (临时整数变量, 1)))) ' 取用户自定义的网络命令文本和参数
.如果 (大于 (临时整数变量, 0)) ' 判断 用户自定义的网络命令是否可用,即[ @ ]字符存在则表示命令符合用户定义的规则
    .如果真 (大于 (寻找文本 (临时文本变量, “:”, 1, 假), 0)) ' 判断定义的命令是否有参数
        
         ' 以下函数取得命令和参数,并给存放网络命令的参数容器赋值
        
        赋值 (返回参数, 分割文本 (临时文本变量, “:”, ))
        赋值 (临时文本变量, 返回参数 [1])
        删除成员 (返回参数, 1, 1)
    .如果真结束
    
.否则
    赋值 (临时文本变量, “ExecErr”) ' 如果[ @ ]不存在,则返回错误指示文本[ ExecErr ]
.如果结束
返回 (临时文本变量) ' 返回用户自定义的网络命令的参数值

.子程序 服务端_显示用户列表, 空白型, , 
.局部变量 临时整数容器, 整数型, , , 

全部删除 ()
.如果真 (大于 (取数组成员数 (在线用户列表), 0))
    .变量循环首 (1, 取数组成员数 (在线用户列表), 1, 临时整数容器)
        -1.插入表项 (在线用户名称列表 [临时整数容器], -1, , , )
        相减 (临时整数容器, 1).置标题 (1, 在线用户列表 [临时整数容器])
        相减 (临时整数容器, 1).置标题 (2, 在线用户时间列表 [临时整数容器])
    .变量循环尾 ()
.如果真结束


.子程序 服务端_新客户, 空白型, , 
.参数 名称, 文本型, , 
.参数 地址, 文本型, , 

加入成员 (在线用户列表, 地址)
加入成员 (在线用户名称列表, 名称)
加入成员 (在线用户时间列表, 时间到文本 (取现行时间 (), #全部转换))

.子程序 服务端_删除客户, 空白型, , 
.参数 地址, 文本型, , 

.局部变量 临时整数容器, 整数型, , , 

.如果真 (大于 (取数组成员数 (在线用户列表), 0))
    .变量循环首 (1, 取数组成员数 (在线用户列表), 1, 临时整数容器)
        .如果真 (等于 (在线用户列表 [临时整数容器], 地址))
            删除成员 (在线用户列表, 临时整数容器, 1)
            删除成员 (在线用户名称列表, 临时整数容器, 1)
            删除成员 (在线用户时间列表, 临时整数容器, 1)
            跳出循环 ()
        .如果真结束
        
    .变量循环尾 ()
.如果真结束


.子程序 服务端_踢出客户, 空白型, , 
.参数 客户地址, 文本型, , 

.如果真 (服务端_发送网络命令 (“踢出”, 客户地址))
    客户地址.断开客户 ()
.如果真结束


.子程序 读系统配置, 文本型, , 
.参数 读取的配置名, 文本型, , 
.参数 默认值, 文本型, 可空, 

返回 (读配置项 (相加 (取运行目录 (), “\Config.ini”), “系统配置”, 读取的配置名, 默认值))

.子程序 写系统配置, 逻辑型, , 
.参数 写入的配置名, 文本型, , 
.参数 写入值, 文本型, , 

返回 (写配置项 (相加 (取运行目录 (), “\Config.ini”), “系统配置”, 写入的配置名, 写入值))

.子程序 _服务器_客户进入, 空白型, , 
赋值 (用户临时记录, 取回客户 ())

.子程序 _服务器_数据到达, 空白型, , 
赋值 (网络命令, 接收网络命令 (取回数据 (), 命令参数))
.如果真 (不等于 (删首尾空 (网络命令), “”))
    未知支持库函数_0 (&服务端_处理数据, )
.如果真结束


.子程序 _服务器_客户离开, 空白型, , 
服务端_删除客户 (取回客户 ())

.子程序 资料_检测用户资料, 逻辑型, , 用户资料可以使用则返回[真],否则返回[假]
.参数 用户资料, 文本型, , 

.如果 (并且 (小于 (寻找文本 (用户资料, “:”, 1, 真), 1), 小于 (寻找文本 (用户资料, “@”, 1, 真), 1), 大于 (寻找文本 (用户资料, “$$$%%%^^^&&&***!”, , 假), 0)))
    返回 (真)
.否则
    返回 (假)
.如果结束


.子程序 资料_取用户名, 文本型, , 
.局部变量 临时文本容器, 文本型, , "0", 

.如果 (资料_检测用户资料 (读系统配置 (“用户资料”)))
    赋值 (临时文本容器, 分割文本 (读系统配置 (“用户资料”), “$$$%%%^^^&&&***!”, ))
    返回 (临时文本容器 [1])
.否则
    返回 (“ ”)
.如果结束


.子程序 全文本替换, 文本型, , 
.参数 具体文本, 文本型, , 
.参数 要替换的文本, 文本型, , 
.参数 被替换的文本, 文本型, , 

.局部变量 a, 文本型, , , 
.局部变量 b, 整数型, , , 

赋值 ()
.判断循环首 (大于 (寻找文本 (a, 要替换的文本, b, 真), -1))
    赋值 (b, 寻找文本 (a, 要替换的文本, b, 真))
    赋值 (a, 文本替换 (a, b, 取文本长度 (要替换的文本), 被替换的文本))
    赋值 (b, 相加 (b, 取文本长度 (被替换的文本)))
.判断循环尾 ()
返回 (a)

.子程序 _按钮4_被单击, 空白型, , 
.如果真 (大于 (., -1))
    服务端_踢出客户 (.取标题 (., 2))
.如果真结束


.子程序 _按钮1_被单击, 空白型, , 
服务端_显示用户列表 ()

.子程序 _按钮8_被单击, 空白型, , 
结束 ()

.子程序 _按钮5_被单击, 空白型, , 
载入 (用户管理窗口, , 真)

.子程序 _按钮3_被单击, 空白型, , 
赋值 (.端口, 889)
赋值 (.禁止, 假)
赋值 (.禁止, 真)

.子程序 _按钮2_被单击, 空白型, , 
赋值 (.端口, 1)
赋值 (.禁止, 假)
赋值 (.禁止, 真)

.子程序 _按钮7_被单击, 空白型, , 
赋值 (.可视, 假)

.子程序 __启动窗口_托盘事件, 空白型, , 
.参数 操作类型, 整数型, , 

赋值 (_启动窗口.可视, 真)
置托盘图标 ({  }, )

.子程序 __启动窗口_被隐藏, 空白型, , 
置托盘图标 (#托盘图标, “数据库远程网络操作管理”)

.窗口程序集 窗口程序集2, , , 

.子程序 _用户管理窗口_创建完毕, 空白型, , 
赋值 (.内容, _启动窗口.)
管理员_显示列表 ()

.子程序 _按钮1_被单击, 空白型, , 
.如果真 (不等于 (.内容, .内容))
    赋值 (.标题, “两次输入密码不一样!”)
    赋值 (.内容, “”)
    赋值 (.内容, “”)
    返回 ()
.如果真结束
.如果真 (等于 (删首尾空 (.内容), “”))
    赋值 (.标题, “超级管理员名称不能为空!”)
    赋值 (.内容, “”)
    赋值 (.内容, “”)
    返回 ()
.如果真结束
赋值 (_启动窗口., .内容)
赋值 (_启动窗口., .内容)
写系统配置 (“管理员名称”, .内容)
写系统配置 (“管理员密码”, .内容)
赋值 (.内容, “”)
赋值 (.内容, “”)
赋值 (.标题, “超级管理员名称/密码修改成功,请妥善保管!”)

.子程序 管理员_显示列表, 空白型, , 
.局部变量 临时整数容器, 整数型, , "2", 
.局部变量 临时文本容器, 文本型, , "2", 

全部删除 ()
_启动窗口.未知支持库函数_14 (., “Select ID,管理员,密码 From 管理员”, #)
_启动窗口.未知支持库函数_34 (.)
.变量循环首 (1, _启动窗口.., 1, 临时整数容器 [1])
    _启动窗口.未知支持库函数_29 (., 0, 临时整数容器 [2])
    _启动窗口.未知支持库函数_26 (., 1, 临时文本容器 [1])
    _启动窗口.未知支持库函数_26 (., 2, 临时文本容器 [2])
    -1.插入表项 (到文本 (临时整数容器 [2]), , , , )
    相减 (临时整数容器 [1], 1).置标题 (1, 临时文本容器 [1])
    相减 (临时整数容器 [1], 1).置标题 (2, 临时文本容器 [2])
    _启动窗口.未知支持库函数_36 (.)
.变量循环尾 ()

.子程序 _超级列表框_当前表项被改变, 空白型, , 
赋值 (.内容, .取标题 (., 1))
赋值 (.内容, .取标题 (., 2))

.子程序 _按钮3_被单击, 空白型, , 
.如果真 (等于 (删首尾空 (.内容), “”))
    赋值 (.标题, “用户名不能为空!”)
    返回 ()
.如果真结束
管理员_修改资料 (.取标题 (., 0), .内容, .内容)
管理员_显示列表 ()

.子程序 管理员_修改资料, 逻辑型, , 
.参数 ID, 文本型, , 
.参数 管理员名称, 文本型, , 
.参数 管理员密码, 文本型, , 

_启动窗口.未知支持库函数_14 (., 相加 (“Select ID,管理员,密码 From 管理员 Where ID=”, ID), #)
_启动窗口.未知支持库函数_20 (., 1, 管理员名称)
_启动窗口.未知支持库函数_20 (., 2, 管理员密码)
_启动窗口.未知支持库函数_18 (.)
返回 (真)

.子程序 管理员_取所有管理员资料, 字节集, , 
.局部变量 临时整数容器, 整数型, , "2", 
.局部变量 临时文本容器, 文本型, , "3", 

_启动窗口.未知支持库函数_14 (., “Select ID,管理员,密码 From 管理员”, #)
_启动窗口.未知支持库函数_34 (.)
.变量循环首 (1, _启动窗口.., 1, 临时整数容器 [1])
    _启动窗口.未知支持库函数_29 (., 0, 临时整数容器 [2])
    _启动窗口.未知支持库函数_26 (., 1, 临时文本容器 [1])
    _启动窗口.未知支持库函数_26 (., 2, 临时文本容器 [2])
    赋值 (临时文本容器 [3], 相加 (临时文本容器 [3], 到文本 (临时整数容器 [2]), “|||”, 临时文本容器 [1], “|||”, 临时文本容器 [2]))
    .如果真 (小于 (临时整数容器 [1], _启动窗口..))
        赋值 (临时文本容器 [3], 相加 (临时文本容器 [3], “\\\”))
    .如果真结束
    _启动窗口.未知支持库函数_36 (.)
.变量循环尾 ()
返回 (到字节集 (临时文本容器 [3]))

.子程序 管理员_添加管理员, 逻辑型, , 
.参数 管理员用户名, 文本型, , 
.参数 管理员用户密码, 文本型, , 

.如果真 (不等于 (删首尾空 (管理员用户名), “”))
    _启动窗口.未知支持库函数_14 (., “Select ID,管理员,密码 From 管理员”, #)
    _启动窗口.未知支持库函数_17 (.)
    _启动窗口.未知支持库函数_20 (., 1, 管理员用户名)
    _启动窗口.未知支持库函数_20 (., 2, 管理员用户密码)
    _启动窗口.未知支持库函数_18 (.)
.如果真结束
返回 (真)

.子程序 管理员_删除管理员, 空白型, , 
.参数 用户ID, 文本型, , 

_启动窗口.未知支持库函数_14 (., 相加 (“Select ID,管理员,密码 From 管理员 Where ID=”, 用户ID), #)
_启动窗口.未知支持库函数_19 (., 1)
_启动窗口.未知支持库函数_18 (.)

.子程序 _按钮2_被单击, 空白型, , 
.如果真 (等于 (删首尾空 (.内容), “”))
    赋值 (.标题, “用户名不能为空!”)
    返回 ()
.如果真结束
管理员_添加管理员 (.内容, .内容)
管理员_显示列表 ()

.子程序 _按钮4_被单击, 空白型, , 
.如果真 (大于 (., -1))
    赋值 (.标题, 相加 (“管理员 [ ”, .取标题 (., 1), “ ] 已被删除!”))
    管理员_删除管理员 (.取标题 (., 0))
    管理员_显示列表 ()
.如果真结束



 ' 不属于任何一个程序集、类模块的函数：
