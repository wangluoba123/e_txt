 ' 文件类型：Windows窗口程序

 ' 程序名称：一柱挂
 ' 程序描述：千年八点挂机程序

 ' 程序作者：一柱
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 297
    高度 = 233
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 已保存到：D:\易语言学习\Data\［千年］网游辅助程序.e\_启动窗口_图标.ico
    背景音乐 =  ' 空
    标题 = “柱杀 V1.00”
    帮助文件名 = “”

窗口 窗口1
    左边 = 50
    顶边 = 50
    宽度 = 244
    高度 = 267
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 假
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 假
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 已保存到：D:\易语言学习\Data\［千年］网游辅助程序.e\窗口1_图标.ico
    背景音乐 =  ' 空
    标题 = “”
    帮助文件名 = “”

窗口 喊话窗口
    左边 = 50
    顶边 = 50
    宽度 = 271
    高度 = 184
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 已保存到：D:\易语言学习\Data\［千年］网游辅助程序.e\喊话窗口_图标.ico
    背景音乐 =  ' 空
    标题 = “喊话设置”
    帮助文件名 = “”



.图片 托盘图, " ' 已保存到：D:\易语言学习\Data\［千年］网游辅助程序.e\托盘图", , 
.常量 KEYEVENTF_KEYUP, "2", , 
.常量 MOUSEENTF_MOVE, "1", , 
.常量 MOUSEENTF_LEFTDOWN, "2", , 
.常量 MOUSEENTF_LEFTUP, "4", , 
.常量 MOUSEENTF_ABS, "32768", , 
.常量 中点横, "222", , 
.常量 中点纵, "156", , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 3 7 系统核心支持库




数据类型 指针结构, , 
    .成员 水平坐标, 整数型, , , 
    .成员 垂直坐标, 整数型, , , 

数据类型 动作结构, , 
    .成员 水平坐标, 整数型, , , 
    .成员 垂直坐标, 整数型, , , 
    .成员 颜色, 整数型, , , 

.全局变量 是否是抓点, 逻辑型, , , 
.全局变量 喊话, 逻辑型, , , 
.全局变量 喊话周期, 整数型, , , 

.DLL命令 测试热键码, 短整数型, "", "GetAsyncKeyState", , 
    .参数 参数1, 整数型, , 

.DLL命令 获取颜色, 整数型, "", "GetPixel", , 
    .参数 场景, 整数型, , 
    .参数 x, 整数型, , 
    .参数 y, 整数型, , 

.DLL命令 取得场景, 整数型, "", "GetWindowDC", , 
    .参数 场景窗口, 整数型, , 

.DLL命令 设置鼠标位置, 整数型, "", "SetCursorPos", , 
    .参数 水平坐标, 整数型, , 
    .参数 垂直坐标, 整数型, , 

.DLL命令 取得坐标, 整数型, "", "GetCursorPos", , 
    .参数 pointapi, 指针结构, , 

.DLL命令 虚拟键盘, 空白型, "", "keybd_event", , 
    .参数 欲虚拟键码, 空白型, , 
    .参数 键的OEM扫描码, 空白型, , 
    .参数 常量, 空白型, , 
    .参数 参数, 空白型, , 

.DLL命令 虚拟鼠标, 空白型, "", "mouse_event", , 
    .参数 动作标志, 整数型, , 
    .参数 横坐标, 整数型, , 
    .参数 纵坐标, 整数型, , 
    .参数 不用参数, 空白型, , 
    .参数 无用参数, 空白型, , 

.DLL命令 释放场景, 整数型, "", "ReleaseDC", , 
    .参数 窗口, 整数型, , 
    .参数 场景, 整数型, , 

.窗口程序集 窗口程序集1, , , 

.程序集变量 参考色, 整数型, , "8", 
.程序集变量 动作数据, 动作结构, , "8", 
.程序集变量 k, 整数型, , , 
.程序集变量 x, 整数型, , , 
.子程序 __启动窗口_创建完毕, 空白型, , 
.局部变量 配置文件名, 文本型, , , 
.局部变量 计数器, 整数型, , , 
.局部变量 节名数组, 文本型, , "0", 

“======使用说明======”.加入文本 (#换行符, #换行符, “1、按 Ctrl+F1 键启动；”, #换行符, “2、按 Ctrl+F2 键停止；”, #换行符, “3、如果你选刷一个怪的地方挂机（如石巨人、沙漠蝎子、黄沙鬼等），请选中”, #左引号, ., #右引号, “；”, #换行符, “4、如果你想抓住一个怪物后打死再换另一个，请选中”, #左引号, ., #右引号, #换行符, “5、如果需要设定每怪轮流攻击的时间，请选择”, #左引号, ., #右引号, “并设定延时时间；”, #换行符, “6、做脚本的方法与 <按键精灵> 的抓点方法类似，将鼠标移到至怪物身上按 Ctrl+数字键(见提示)即可。”, #换行符, #换行符, “      少林：一柱”)
“连点器”.加入项目 ()
赋值 (配置文件名, 相加 (取运行目录 (), “\type.ini”))
.如果真 (等于 (文件是否存在 (配置文件名), 真))
    赋值 (取配置节名 (配置文件名))
    .计次循环首 (取数组成员数 (), 计数器)
        .加入项目 ( [计数器], )
    .计次循环尾 ()
.如果真结束
赋值 (k, 0)
赋值 (., 60)

.子程序 _启动热键_周期事件, 空白型, , 
.如果真 (并且 (处理热键 (#Ctrl键), 处理热键 (#F1键)))
    赋值 (., 0)
    .如果真 (等于 (喊话, 真))
        赋值 (., 喊话周期)
    .如果真结束
    .如果真 (不等于 (., -1))
        赋值 (., 80)
    .如果真结束
    
.如果真结束


.子程序 _组合框1_列表项被选择, 空白型, , 
.局部变量 一点, 文本型, , , 
.局部变量 怪物, 文本型, , , 
.局部变量 计数器, 整数型, , , 

.如果 (等于 (., 0))
    赋值 (., 真)
    赋值 (., 真)
    赋值 (x, 0)
.否则
    赋值 (., 假)
    赋值 (., 假)
    赋值 (怪物, .取项目文本 (.))
    .计次循环首 (8, 计数器)
        赋值 (一点, 读配置项 (相加 (取运行目录 (), “\type.ini”), 怪物, 到文本 (计数器), ))
        赋值 (动作数据 [计数器], 水平坐标, 到数值 (取文本左边 (一点, 3)))
        赋值 (动作数据 [计数器], 垂直坐标, 到数值 (取文本中间 (一点, 5, 3)))
        赋值 (动作数据 [计数器], 颜色, 到数值 (取文本右边 (一点, 8)))
    .计次循环尾 ()
.如果结束
获取焦点 ()


.子程序 _抓点_被单击, 空白型, , 
赋值 (., 0)
赋值 (真)
赋值 (窗口1., 真)
载入 (窗口1, , 真)

.子程序 _查身边_周期事件, 空白型, , 
.局部变量 i, 整数型, , , 
.局部变量 tpos, 指针结构, , , 

.如果真 (并且 (处理热键 (#Ctrl键), 处理热键 (#F2键)))
    赋值 (., 0)
    赋值 (., 60)
    返回 ()
.如果真结束
.如果 (等于 (., 0))
    .如果真 (等于 (., 真))
        .如果真 (大于或等于 (x, 40))
            按下某键 (#F2键)
            放开某键 (#F2键)
        .如果真结束
        
    .如果真结束
    取得坐标 (tpos)
    按下某键 (#Shift键)
    鼠标单击 (tpos.水平坐标, tpos.垂直坐标)
    鼠标单击 (tpos.水平坐标, tpos.垂直坐标)
    放开某键 (#Shift键)
    .如果 (大于或等于 (x, 40))
        赋值 (x, 0)
    .否则
        赋值 (x, 相加 (x, 1))
    .如果结束
    延时 (500)
.否则
    .计次循环首 (8, i)
        .如果真 (并且 (处理热键 (#Ctrl键), 处理热键 (#F2键)))
            赋值 (., 0)
            赋值 (., 60)
            返回 ()
        .如果真结束
        .如果真 (等于 (取颜色 (动作数据 [i], 水平坐标, 动作数据 [i], 垂直坐标), 动作数据 [i], 颜色))
            赋值 (k, i)
            开打 (动作数据 [i], 水平坐标, 动作数据 [i], 垂直坐标)
            延时 (相乘 (到数值 (.), 1000))
            .如果真 (或者 (等于 (., 真), 等于 (., 真)))
                赋值 (., 0)
                赋值 (., 100)
            .如果真结束
            跳出循环 ()
        .如果真结束
        
    .计次循环尾 ()
    
.如果结束


.子程序 _删除_被单击, 空白型, , 
.局部变量 当前脚本, 文本型, , , 

.如果 (不等于 (., 0))
    .如果 (不等于 (., -1))
        赋值 (当前脚本, .取项目文本 (.))
        .如果 (等于 (信息框 (相加 (“你确实要删除{”, 当前脚本, “}脚本？”), 36, “真的吗？”), #是钮))
            .删除项目 (.)
            写配置项 (相加 (取运行目录 (), “\type.ini”), 当前脚本, , )
        .否则
            
        .如果结束
        
    .否则
        信息框 (“未选择脚本！”, #警告图标, “删除”)
    .如果结束
    
.否则
    信息框 (“嘿嘿，你休想！”, #错误图标, “删除”)
.如果结束


.子程序 _小化_被单击, 空白型, , 
赋值 (_启动窗口., 2)
赋值 (_启动窗口., 假)
置托盘图标 (#托盘图, “柱杀 V1.0”)

.子程序 __启动窗口_托盘事件, 空白型, , 
.参数 操作类型, 整数型, , 

.判断开始 (等于 (#单击左键))
    赋值 (., 真)
    赋值 (_启动窗口., 0)
    置托盘图标 ()
.默认
    
.判断结束


.子程序 _修改_被单击, 空白型, , 
.如果 (等于 (., 0))
    信息框 (“不让修改的！”, #错误图标, “你弄错了”)
.否则
    .如果 (等于 (.取项目文本 (.), “”))
        信息框 (“请选择待修改脚本!”, 48, “笨!  d^o^b”)
    .否则
        赋值 (., 0)
        赋值 (假)
        赋值 (窗口1., 真)
        载入 (窗口1, , 真)
        
    .如果结束
    
.如果结束


.子程序 开打, 空白型, , 
.参数 横坐标, 整数型, , 
.参数 纵坐标, 整数型, , 

设置鼠标位置 (横坐标, 纵坐标)
按下某键 (#Shift键)
鼠标双击 (横坐标, 纵坐标)
延时 (450)
鼠标双击 (横坐标, 纵坐标)
延时 (450)
鼠标双击 (横坐标, 纵坐标)
放开某键 (#Shift键)
设置鼠标位置 (100, 100)


.子程序 _怪死否_周期事件, 空白型, , 
.局部变量 未死, 逻辑型, , , 

.如果真 (并且 (处理热键 (#Ctrl键), 处理热键 (#F2键)))
    赋值 (., 0)
    赋值 (., 0)
    赋值 (., 60)
    返回 ()
.如果真结束

赋值 (未死, 假)
.计次循环首 (70, )
    .如果 (等于 (取颜色 (动作数据 [k], 水平坐标, 动作数据 [k], 垂直坐标), 动作数据 [k], 颜色))
        赋值 (未死, 真)
    .否则
        
    .如果结束
    延时 (35)
.计次循环尾 ()
.如果 (等于 (未死, 假))
    赋值 (., 0)
    .如果真 (等于 (., 真))
        按下某键 (#F2键)
        放开某键 (#F2键)
        
    .如果真结束
    赋值 (., 80)
    
.否则
    开打 (动作数据 [k], 水平坐标, 动作数据 [k], 垂直坐标)
    延时 (相乘 (到数值 (.), 1000))
.如果结束


.子程序 _退出_被单击, 空白型, , 
结束 ()

.子程序 _选择框3_被单击, 空白型, , 
.如果 (等于 (., 真))
    赋值 (., 真)
    赋值 (., 真)
    赋值 (., “0”)
.否则
    赋值 (., 假)
    赋值 (., 假)
.如果结束


.子程序 _喊话_被单击, 空白型, , 
赋值 (喊话窗口., 真)
载入 (喊话窗口, , 真)


.子程序 _要喊话_周期事件, 空白型, , 
.如果真 (并且 (处理热键 (#Ctrl键), 处理热键 (#F2键)))
    赋值 (., 0)
    赋值 (., 60)
    返回 ()
.如果真结束
按下某键 (#Ctrl键)
按下某键 (#V键)
放开某键 (#V键)
放开某键 (#Ctrl键)
按下某键 (#回车键)
放开某键 (#回车键)

.窗口程序集 窗口程序集2, , , 

.程序集变量 动作数据, 动作结构, , "8", 
.程序集变量 DC, 整数型, , , 
.子程序 _时钟1_周期事件, 空白型, , 
.局部变量 tpot, 指针结构, , , 
.局部变量 colocer, 整数型, , , 

赋值 (DC, 取得场景 (0))
取得坐标 (tpot)
赋值 (colocer, 获取颜色 (tpot.水平坐标, tpot.垂直坐标))
释放场景 (0, DC)
赋值 (., colocer)
赋值 (., 相加 (到文本 (tpot.水平坐标), “.”, 到文本 (tpot.垂直坐标)))
赋值 (., 到文本 (colocer))
.如果真 (并且 (未知函数_67174417 (#Ctrl键), 未知函数_67174417 (#键1)))
    赋值 (动作数据 [1].水平坐标, tpot.水平坐标)
    赋值 (动作数据 [1].垂直坐标, tpot.垂直坐标)
    赋值 (动作数据 [1].颜色, colocer)
    赋值 (., 动作数据 [1].颜色)
    赋值 (., 相加 (到文本 (动作数据 [1].水平坐标), “，”, 到文本 (动作数据 [1].垂直坐标)))
    
.如果真结束
.如果真 (并且 (未知函数_67174417 (#Ctrl键), 未知函数_67174417 (#键2)))
    赋值 (动作数据 [2].水平坐标, tpot.水平坐标)
    赋值 (动作数据 [2].垂直坐标, tpot.垂直坐标)
    赋值 (动作数据 [2].颜色, colocer)
    赋值 (., 动作数据 [2].颜色)
    赋值 (., 相加 (到文本 (动作数据 [2].水平坐标), “，”, 到文本 (动作数据 [2].垂直坐标)))
    
.如果真结束
.如果真 (并且 (未知函数_67174417 (#Ctrl键), 未知函数_67174417 (#键3)))
    赋值 (动作数据 [3].水平坐标, tpot.水平坐标)
    赋值 (动作数据 [3].垂直坐标, tpot.垂直坐标)
    赋值 (动作数据 [3].颜色, colocer)
    赋值 (., 动作数据 [3].颜色)
    赋值 (., 相加 (到文本 (动作数据 [3].水平坐标), “，”, 到文本 (动作数据 [3].垂直坐标)))
    
.如果真结束
.如果真 (并且 (未知函数_67174417 (#Ctrl键), 未知函数_67174417 (#键4)))
    赋值 (动作数据 [4].水平坐标, tpot.水平坐标)
    赋值 (动作数据 [4].垂直坐标, tpot.垂直坐标)
    赋值 (动作数据 [4].颜色, colocer)
    赋值 (., 动作数据 [4].颜色)
    赋值 (., 相加 (到文本 (动作数据 [4].水平坐标), “，”, 到文本 (动作数据 [4].垂直坐标)))
    
.如果真结束
.如果真 (并且 (未知函数_67174417 (#Ctrl键), 未知函数_67174417 (#键5)))
    赋值 (动作数据 [5].水平坐标, tpot.水平坐标)
    赋值 (动作数据 [5].垂直坐标, tpot.垂直坐标)
    赋值 (动作数据 [5].颜色, colocer)
    赋值 (., 动作数据 [5].颜色)
    赋值 (., 相加 (到文本 (动作数据 [5].水平坐标), “，”, 到文本 (动作数据 [5].垂直坐标)))
    
.如果真结束
.如果真 (并且 (未知函数_67174417 (#Ctrl键), 未知函数_67174417 (#键6)))
    赋值 (动作数据 [6].水平坐标, tpot.水平坐标)
    赋值 (动作数据 [6].垂直坐标, tpot.垂直坐标)
    赋值 (动作数据 [6].颜色, colocer)
    赋值 (., 动作数据 [6].颜色)
    赋值 (., 相加 (到文本 (动作数据 [6].水平坐标), “，”, 到文本 (动作数据 [6].垂直坐标)))
    
.如果真结束
.如果真 (并且 (未知函数_67174417 (#Ctrl键), 未知函数_67174417 (#键7)))
    赋值 (动作数据 [7].水平坐标, tpot.水平坐标)
    赋值 (动作数据 [7].垂直坐标, tpot.垂直坐标)
    赋值 (动作数据 [7].颜色, colocer)
    赋值 (., 动作数据 [7].颜色)
    赋值 (., 相加 (到文本 (动作数据 [7].水平坐标), “，”, 到文本 (动作数据 [7].垂直坐标)))
    
.如果真结束
.如果真 (并且 (未知函数_67174417 (#Ctrl键), 未知函数_67174417 (#键8)))
    赋值 (动作数据 [8].水平坐标, tpot.水平坐标)
    赋值 (动作数据 [8].垂直坐标, tpot.垂直坐标)
    赋值 (动作数据 [8].颜色, colocer)
    赋值 (., 动作数据 [8].颜色)
    赋值 (., 相加 (到文本 (动作数据 [8].水平坐标), “，”, 到文本 (动作数据 [8].垂直坐标)))
    
.如果真结束


.子程序 _退出_被单击, 空白型, , 
赋值 (., 0)
赋值 (_启动窗口.., 60)
销毁 ()


.子程序 _保存_被单击, 空白型, , 
.局部变量 临时文本, 文本型, , , 
.局部变量 文本1, 文本型, , , 
.局部变量 文本2, 文本型, , , 
.局部变量 文本3, 文本型, , , 
.局部变量 计数器, 整数型, , , 

.如果 (等于 (., “”))
    信息框 (“请输入怪物名称！”, 0, “ 笨！！:-)”)
    获取焦点 ()
.否则
    .计次循环首 (8, 计数器)
        赋值 (文本1, 相加 (取重复文本 (相减 (3, 取文本长度 (到文本 (动作数据 [计数器], 水平坐标))), “0”), 到文本 (动作数据 [计数器], 水平坐标)))
        赋值 (文本2, 相加 (取重复文本 (相减 (3, 取文本长度 (到文本 (动作数据 [计数器], 垂直坐标))), “0”), 到文本 (动作数据 [计数器], 垂直坐标)))
        赋值 (文本3, 相加 (取重复文本 (相减 (8, 取文本长度 (到文本 (动作数据 [计数器], 颜色))), “0”), 到文本 (动作数据 [计数器], 颜色)))
        赋值 (临时文本, 相加 (文本1, “,”, 文本2, “,”, 文本3))
        写配置项 (相加 (取运行目录 (), “\type.ini”), ., 到文本 (计数器), 临时文本)
    .计次循环尾 ()
    .如果真 (等于 (是否是抓点, 真))
        _启动窗口.加入项目 (., ., )
    .如果真结束
    赋值 (., “”)
    退出.获取焦点 ()
    赋值 (., 0)
    赋值 (_启动窗口.., 60)
    销毁 ()
    
.如果结束


.子程序 _窗口1_创建完毕, 空白型, , 
.局部变量 gwmc, 文本型, , , 
.局部变量 临时文本, 文本型, , , 
.局部变量 计数器, 整数型, , , 

.如果 (等于 (是否是抓点, 假))
    赋值 (窗口1., “修改脚本”)
    赋值 (gwmc, _启动窗口.取项目文本 (., _启动窗口..))
    .计次循环首 (8, 计数器)
        赋值 (临时文本, 读配置项 (相加 (取运行目录 (), “\type.ini”), gwmc, 到文本 (计数器), ))
        .判断开始 (等于 (计数器, 1))
            赋值 (., 取文本左边 (临时文本, 7))
            赋值 (., 到数值 (取文本右边 (临时文本, 8)))
        .判断 (等于 (计数器, 2))
            赋值 (., 取文本左边 (临时文本, 7))
            赋值 (., 到数值 (取文本右边 (临时文本, 8)))
        .判断 (等于 (计数器, 3))
            赋值 (., 取文本左边 (临时文本, 7))
            赋值 (., 到数值 (取文本右边 (临时文本, 8)))
        .判断 (等于 (计数器, 4))
            赋值 (., 取文本左边 (临时文本, 7))
            赋值 (., 到数值 (取文本右边 (临时文本, 8)))
        .判断 (等于 (计数器, 5))
            赋值 (., 取文本左边 (临时文本, 7))
            赋值 (., 到数值 (取文本右边 (临时文本, 8)))
        .判断 (等于 (计数器, 6))
            赋值 (., 取文本左边 (临时文本, 7))
            赋值 (., 到数值 (取文本右边 (临时文本, 8)))
        .判断 (等于 (计数器, 7))
            赋值 (., 取文本左边 (临时文本, 7))
            赋值 (., 到数值 (取文本右边 (临时文本, 8)))
        .判断 (等于 (计数器, 8))
            赋值 (., 取文本左边 (临时文本, 7))
            赋值 (., 到数值 (取文本右边 (临时文本, 8)))
        .默认
            
        .判断结束
        赋值 (动作数据 [计数器], 水平坐标, 到数值 (取文本左边 (临时文本, 3)))
        赋值 (动作数据 [计数器], 垂直坐标, 到数值 (取文本中间 (临时文本, 5, 3)))
        赋值 (动作数据 [计数器], 颜色, 到数值 (取文本右边 (临时文本, 8)))
    .计次循环尾 ()
    赋值 (., gwmc)
    赋值 (., 真)
.否则
    赋值 (., 假)
    赋值 (窗口1., “新建脚本”)
.如果结束
赋值 (., 60)


.程序集 程序集1, , , 

.子程序 处理热键, 逻辑型, , 
.参数 热键名称, 整数型, , 

.局部变量 rq1, 逻辑型, , , 

.如果 (小于 (测试热键码 (热键名称), 0))
    赋值 (真)
.否则
    赋值 (假)
.如果结束
返回 ()


.子程序 鼠标双击, 空白型, , 
.参数 横坐标, 整数型, , 
.参数 纵坐标, 整数型, , 

鼠标单击 (横坐标, 纵坐标)
延时 (200)
鼠标单击 (横坐标, 纵坐标)

.子程序 取颜色, 整数型, , 
.参数 横坐标, 整数型, , 
.参数 纵坐标, 整数型, , 

.局部变量 DC, 整数型, , , 
.局部变量 颜色值, 整数型, , , 

赋值 (DC, 取得场景 (0))
赋值 (颜色值, 获取颜色 (DC, 横坐标, 纵坐标))
释放场景 (0, DC)
返回 (颜色值)


.子程序 按下某键, 空白型, , 
.参数 键名, 空白型, , 

虚拟键盘 (键名, 0, 0, 0)

.子程序 放开某键, 空白型, , 
.参数 键名, 空白型, , 

虚拟键盘 (键名, 0, #KEYEVENTF_KEYUP, 0)


.子程序 鼠标单击, 空白型, , 
.参数 横坐标, 整数型, , 
.参数 纵坐标, 整数型, , 

虚拟鼠标 (位或 (#MOUSEENTF_ABS, #MOUSEENTF_LEFTDOWN), 横坐标, 纵坐标, 0, 0)
虚拟鼠标 (位或 (#MOUSEENTF_ABS, #MOUSEENTF_LEFTUP), 横坐标, 纵坐标, 0, 0)


.窗口程序集 窗口程序集3, , , 

.子程序 _按钮1_被单击, 空白型, , 
赋值 (喊话, 真)
.如果 (等于 (., “”))
    信息框 (“未输入喊话内容！”, #警告图标, “请注意了”)
.否则
    置剪辑板文本 (.)
    赋值 (喊话周期, 相乘 (到数值 (.), 1000))
.如果结束

销毁 ()

.子程序 _按钮2_被单击, 空白型, , 
赋值 (喊话, 假)
赋值 (., “”)
赋值 (喊话周期, 0)
清除剪辑板 ()
销毁 ()


 ' 不属于任何一个程序集、类模块的函数：
