 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：本源码来自易语言资源网(www.5A5X.com)
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：             易语言资源网注意事项
--============   www.5A5X.com  =============--
* 易语言资源网为易语言官方站、易语言官方论坛提供辅助资源站；本易语言资源网( www.5A5X.com)所有软件和资料均为软件作者提供和网友推荐发布而来，其版权归该软件和程序源码的合法拥有者所有，本站易语言资源网整理收集仅供易语言用户学习和易语言技术研究探讨使用，不得用于任何商业用途。如果由于以上原因造成的版权纠纷本站概不负责！
* 本站资源未经许可,任何网站不得非法盗链及抄袭本站资源；如引用，请注明来自易语言资源网，谢谢合作！
--============   www.5A5X.com  =============--
 ' 版本号：1.0
 ' 创建号：0.0

窗口 主窗口
    左边 = 50
    顶边 = 50
    宽度 = 600
    高度 = 450
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 真
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    窗口类名 = “”
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “文件服务端”
    帮助文件名 = “”

窗口 服务设置窗口
    左边 = 50
    顶边 = 50
    宽度 = 530
    高度 = 320
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    窗口类名 = “”
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “服务设置”
    帮助文件名 = “”

窗口 系统设置窗口
    左边 = 50
    顶边 = 50
    宽度 = 480
    高度 = 320
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    窗口类名 = “”
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “系统设置”
    帮助文件名 = “”

窗口 综合管理窗口
    左边 = 50
    顶边 = 50
    宽度 = 800
    高度 = 600
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    窗口类名 = “”
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “综合管理”
    帮助文件名 = “”

窗口 窗口截图窗口
    左边 = 0
    顶边 = 0
    宽度 = 0
    高度 = 0
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 0
    底图方式 = 1
    底色 = 0 '  0x0
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 假
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 真
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    窗口类名 = “”
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “客户窗口截图”
    帮助文件名 = “”

窗口 客户进程管理窗口
    左边 = 50
    顶边 = 50
    宽度 = 600
    高度 = 400
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 真
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    窗口类名 = “”
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “客户进程管理”
    帮助文件名 = “”



.图片 图盘图标, " ' 已保存到：D:\易语言学习\Data\fileservice.e\图盘图标", , 
.图片 游戏数据库1, " ' 已保存到：D:\易语言学习\Data\fileservice.e\游戏数据库1", , 
.图片 游戏数据库2, " ' 已保存到：D:\易语言学习\Data\fileservice.e\游戏数据库2", , 
.图片 客户数据库1, " ' 已保存到：D:\易语言学习\Data\fileservice.e\客户数据库1", , 
.图片 虚拟盘数据库1, " ' 已保存到：D:\易语言学习\Data\fileservice.e\虚拟盘数据库1", , 
.常量 游戏数据库, "“游戏数据库”", , 
.常量 游戏名, "“名称”", , 
.常量 游戏首拼, "“首拼”", , 
.常量 游戏MD5, "“MD5”", , 
.常量 游戏类别, "“类别”", , 
.常量 游戏官网, "“官网”", , 
.常量 服务器目录, "“服务器目录”", , 
.常量 客户端目录, "“客户端目录”", , 
.常量 图标, "“图标”", , 
.常量 游戏路径, "“路径”", , 
.常量 大小, "“大小”", , 
.常量 CDK, "“CDK”", , 
.常量 REG, "“REG”", , 
.常量 快捷方式, "“快捷方式”", , 
.常量 , , , 
.常量 客户数据库, "“客户数据库”", , 
.常量 计算机名, "“计算机名”", , 
.常量 IP, "“IP”", , 
.常量 MAC, "“MAC”", , 
.常量 CPU, "“CPU”", , 
.常量 内存, "“内存”", , 
.常量 分组, "“分组”", , 
.常量 , , , 
.常量 账户数据库, "“账户数据库”", , 
.常量 账户名, "“账号”", , 
.常量 密码, "“密码”", , 
.常量 使用容量, "“使用容量”", , 
.常量 注册时间, "“注册时间”", , 
.常量 登录时间, "“登录时间”", , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 5 0 系统核心支持库
 ' Exmlrpc A36CFD538657479eBD7C0D287BBB3D95 2 0 远程服务支持库
 ' iext3 {B6F7542F-B8FE-46a8-9605-98856A687097} 3 0 扩展界面支持库三
 ' edroptarget {9DA96BF9CEBD45c5BFCF94CBE61671F5} 2 0 拖放支持库
 ' eGrid 0B4337DA651B4b619ACF61334A7E8B47 2 8 高级表格支持库
 ' iext 27bb20fdd3e145e4bee3db39ddd6e64c 2 0 扩展界面支持库一
 ' dp1 4BB4003860154917BC7D8230BF4FA58A 2 0 数据操作支持库一
 ' shell 52F260023059454187AF826A3C07AF2A 3 0 操作系统界面功能支持库
 ' eAPI F7FC1AE45C5C4758AF03EF19F18A395D 3 0 应用接口支持库
 ' ExtMenu 9909FBB013704cfa8FE7E739DB7172DE 2 0 超级菜单支持库
 ' spec A512548E76954B6E92C21055517615B0 3 1 特殊功能支持库
 ' EThread 5F99C1642A2F4e03850721B4F5D7C3F8 2 0 多线程支持库
 ' iconv {A0005538-9391-4dd9-B4D6-8EB7B9360F08} 2 0 编码转换支持库




数据类型 RECT, 公开, 
    .成员 Left, 整数型, , , 
    .成员 Top, 整数型, , , 
    .成员 Right, 整数型, , , 
    .成员 Bottom, 整数型, , , 

数据类型 BITMAPINFOHEADER, , 
    .成员 biSize, 整数型, , , 
    .成员 biWidth, 整数型, , , 
    .成员 biHeight, 整数型, , , 
    .成员 biPlanes, 短整数型, , , 
    .成员 biBitCount, 短整数型, , , 
    .成员 biCompression, 整数型, , , 
    .成员 biSizeImage, 整数型, , , 
    .成员 biXPelsPerMeter, 整数型, , , 
    .成员 biYPelsPerMeter, 整数型, , , 
    .成员 biClrUsed, 整数型, , , 
    .成员 biClrImportant, 整数型, , , 

数据类型 BITMAPFILEHEADER, , 
    .成员 bfType, 短整数型, , , 
    .成员 bfSize, 整数型, , , 
    .成员 bfReserved1, 短整数型, , , 
    .成员 bfReserved2, 短整数型, , , 
    .成员 bfOffBits, 整数型, , , 

数据类型 SHFILEINFO, 公开, 
    .成员 hIcon, 空白型, , , 
    .成员 iIcon, 空白型, , , 
    .成员 dwAttributes, 空白型, , , 
    .成员 szDisplayName, 字节型, , "256", 
    .成员 szTypeName, 字节型, , "80", 

数据类型 在线用户结构, , 
    .成员 客户句柄, 整数型, , , 
    .成员 账号名, 文本型, , , 
    .成员 当前操作文件名, 文本型, , , 
    .成员 当前操作文件号, 整数型, , , 
    .成员 是否完成, 逻辑型, , , 

.全局变量 系统配置路径, 文本型, , , 
.全局变量 全局配置路径, 文本型, , , 
.全局变量 类别配置路径, 文本型, , , 
.全局变量 账户文件路径, 文本型, , , 
.全局变量 文件配置路径, 文本型, , , 
.全局变量 缓冲文件路径, 文本型, , , 
.全局变量 游戏服务端, 未知类型0x20001, , , 
.全局变量 文件服务端, 未知类型0x20001, , , 
.全局变量 虚拟U盘服务端, 未知类型0x20001, , , 
.全局变量 当前操作客户句柄, 整数型, , , 
.全局变量 在线用户组, 在线用户结构, , "0", 
.全局变量 文件_总上传, 长整数型, , , 
.全局变量 文件_总下载, 长整数型, , , 
.全局变量 文件_现上传, 整数型, , , 
.全局变量 文件_现下载, 整数型, , , 
.全局变量 虚拟盘_总上传, 长整数型, , , 
.全局变量 虚拟盘_总下载, 长整数型, , , 
.全局变量 虚拟盘_现上传, 整数型, , , 
.全局变量 虚拟盘_现下载, 整数型, , , 

.DLL命令 检测目录, 整数型, "shlwapi.dll", "PathIsDirectoryA", , 
    .参数 lpszPath, 文本型, , 

.DLL命令 FindWindowA, 整数型, "", "FindWindowA", 公开, 
    .参数 cs1, 文本型, , 
    .参数 cs2, 整数型, , 

.DLL命令 GetModuleHandleA, 整数型, "", "GetModuleHandleA", , 
    .参数 lpModuleName, 整数型, , 

.DLL命令 GetWindowRect, 整数型, "user32", "GetWindowRect", 公开, 获得整个窗口的范围矩形，窗口的边框、标题栏、滚动条及菜单等都在这个矩形内  非零表示成功，零表示失败。会设置GetLastError
    .参数 hwnd, 整数型, , 想获得范围矩形的那个窗口的句柄
    .参数 lpRect, 未知类型0x90002, , RECT，屏幕坐标中随同窗口装载的矩形;

.DLL命令 CreateRoundRectRgn, 整数型, "gdi32", "CreateRoundRectRgn", 公开, 创建一个圆角矩形，该矩形由X1，Y1-X2，Y2确定，并由X3，Y3确定的椭圆描述圆角弧度  执行成功则为区域句柄，失败则为0
    .参数 X1, 整数型, , 矩形左上角的X，Y坐标
    .参数 Y1, 整数型, , 同上
    .参数 X2, 整数型, , 矩形右下角的X，Y坐标
    .参数 Y2, 整数型, , 同上
    .参数 X3, 整数型, , 圆角椭圆的宽。其范围从0（没有圆角）到矩形宽（全圆）
    .参数 Y3, 整数型, , 圆角椭圆的高。其范围从0（没有圆角）到矩形高（全圆）;

.DLL命令 SetWindowRgn, 整数型, "user32", "SetWindowRgn", 公开, 这是那些很难有人注意到的对编程者来说是个巨大的宝藏的隐含的API函数中的一个。本函数允许您改变窗口的区域。<br>;    通常所有窗口都是矩形的――窗口一旦存在就含有一个矩形区域。本函数允许您放弃该区域。这意味着您可以创建圆的、星形的窗口，也可以将它分为两个或许多部分――实际上可以是任何形状  执行成功为非零值，失败为0
    .参数 hWnd, 整数型, , 将设置其区域的窗口
    .参数 hRgn, 整数型, , 将设置的区域的句柄，一旦设置了该区域，就不能使用或修改该区域句柄，也不要删除它
    .参数 bRedraw, 逻辑型, , Boolean，若为TRUE，则立即重画窗口;

.DLL命令 GetDC, 整数型, "", "GetDC", 公开, 
    .参数 hwnd, 空白型, , 

.DLL命令 DeleteDC, 整数型, "gdi32.dll", "DeleteDC", 公开, 
    .参数 hdc, 整数型, , 

.DLL命令 ReleaseDC, 逻辑型, "user32.dll", "ReleaseDC", 公开, 
    .参数 hwnd, 整数型, , 
    .参数 hDC, 整数型, , 

.DLL命令 CreateCompatibleBitmap, 整数型, "gdi32.dll", "CreateCompatibleBitmap", 公开, 
    .参数 hdc, 整数型, , 
    .参数 nWidth, 整数型, , 
    .参数 nHeight, 整数型, , 

.DLL命令 DrawIconEx, 整数型, "", "DrawIconEx", 公开, 
    .参数 hdc, 空白型, , 
    .参数 xLeft, 空白型, , 
    .参数 yTop, 空白型, , 
    .参数 hIcon, 空白型, , 
    .参数 cxWidth, 空白型, , 
    .参数 cyWidth, 空白型, , 
    .参数 istepIfAniCur, 空白型, , 
    .参数 hbrFlickerFreeDraw, 空白型, , 
    .参数 diFlags, 空白型, , 

.DLL命令 FillRect, 整数型, "user32.dll", "FillRect", 公开, 
    .参数 hdc, 整数型, , 
    .参数 lpRect, RECT, 传址, 
    .参数 hBrush, 整数型, , 

.DLL命令 CreateSolidBrush, 整数型, "gdi32.dll", "CreateSolidBrush", 公开, 
    .参数 crColor, 整数型, , 

.DLL命令 SelectObject, 整数型, "gdi32.dll", "SelectObject", 公开, 
    .参数 hdc, 整数型, , 
    .参数 hObject, 整数型, , 

.DLL命令 CreateDIBSection, 整数型, "gdi32.dll", "CreateDIBSection", , 
    .参数 hDC, 整数型, , 
    .参数 pBitmapInfo, 字节集, 传址, 
    .参数 un, 整数型, , 
    .参数 lplpVoid, 整数型, 传址, 
    .参数 handle, 整数型, , 
    .参数 dw, 整数型, , 

.DLL命令 GdiFlush, 整数型, "gdi32.dll", "GdiFlush", , 

.DLL命令 SHGetFileInfo, 整数型, "", "SHGetFileInfo", 公开, 
    .参数 pszPath, 文本型, , 
    .参数 dwFileAttributes, 整数型, , 
    .参数 psfi, SHFILEINFO, , 
    .参数 cbFileInfo, 整数型, , 
    .参数 uFlags, 整数型, , 

.DLL命令 DeleteObjectA, 整数型, "gdi32", "DeleteObject", 公开, 用这个函数删除GDI对象，比如画笔、刷子、字体、位图、区域以及调色板等等。对象使用的所有系统资源都会被释放  非零表示成功，零表示失败
    .参数 hObject, 整数型, , 一个GDI对象的句柄;

.DLL命令 lstrcpyn, 整数型, "kernel32.dll", "lstrcpyn", , 
    .参数 lpString1, 字节集, 传址, 
    .参数 lpString2, 字节集, 传址, 
    .参数 iMaxLength, 整数型, , 

.DLL命令 BitBlt, 整数型, "gdi32.dll", "BitBlt", , 
    .参数 hDestDC, 整数型, , 
    .参数 x, 整数型, , 
    .参数 y, 整数型, , 
    .参数 nWidth, 整数型, , 
    .参数 nHeight, 整数型, , 
    .参数 hSrcDC, 整数型, , 
    .参数 xSrc, 整数型, , 
    .参数 ySrc, 整数型, , 
    .参数 dwRop, 整数型, , 

.DLL命令 CreateCompatibleDC, 整数型, "gdi32.dll", "CreateCompatibleDC", 公开, 
    .参数 hdc, 整数型, , 

.DLL命令 memcpy, 空白型, "Kernel32.dll", "RtlMoveMemory", , 
    .参数 Destination, 整数型, , 
    .参数 Source, 整数型, , 
    .参数 Length, 整数型, , 

.DLL命令 GetWindowRectA, 整数型, "user32", "GetWindowRect", , 获得整个窗口的范围矩形，窗口的边框、标题栏、滚动条及菜单等都在这个矩形内　非零表示成功，零表示失败。会设置GetLastError
    .参数 hwnd, 整数型, , 想获得范围矩形的那个窗口的句柄
    .参数 lpRect, RECT, , RECT，屏幕坐标中随同窗口装载的矩形;  

.DLL命令 CallWindowProcA, 整数型, "user32.dll", "CallWindowProcA", , 
    .参数 字节集, 字节集, , 
    .参数 窗口句柄, 整数型, , 
    .参数 消息类型, 整数型, , 
    .参数 文本, 文本型, , 
    .参数 buf, 文本型, , 

.DLL命令 创建事件同步对象, 空白型, "", "CreateEventA", , 
    .参数 lpEventAttributes, 整数型, , 
    .参数 bManualReset, 逻辑型, , 
    .参数 bInitialState, 逻辑型, , 
    .参数 lpName, 文本型, , 

.DLL命令 打开事件同步对象, 整数型, "", "OpenEventA", , 
    .参数 dwDesiredAccess, 整数型, , 
    .参数 bInheritHandle, 逻辑型, , 
    .参数 lpName, 文本型, , 

.DLL命令 SendMessage, 整数型, "user32", "SendMessageA", , 
    .参数 hwnd, 整数型, , 
    .参数 wMsg, 整数型, , 
    .参数 wParam, 整数型, , 
    .参数 lParam, 整数型, , 

.DLL命令 SetWindowPos, 整数型, "user32", "SetWindowPos", , 
    .参数 hwnd, 整数型, , 
    .参数 hWndInsertAfter, 整数型, , 
    .参数 x, 整数型, , 
    .参数 y, 整数型, , 
    .参数 cx, 整数型, , 
    .参数 cy, 整数型, , 
    .参数 wFlags, 整数型, , 

.程序集 启动程序集, , , 

.子程序 _启动子程序, 整数型, , 本子程序在程序启动后最先执行
.局部变量 窗口句柄, 整数型, , , 

.如果真 (不等于 (打开事件同步对象 (2031619, 假, “fileservice”), 0))
    赋值 (窗口句柄, 取数值注册项 (#现行用户, “Software\fileservice\ID”, ))
    SendMessage (窗口句柄, 274, 61728, 0)
    SetWindowPos (窗口句柄, -1, 0, 0, 0, 0, 3)
    SetWindowPos (窗口句柄, -2, 0, 0, 0, 0, 3)
    结束 ()
.如果真结束
创建事件同步对象 (0, 假, 假, “fileservice”)
载入 (主窗口, , 假)
返回 (0) ' 可以根据您的需要返回任意数值

.窗口程序集 主程序集, , , 

.子程序 _主窗口_创建完毕, 空白型, , 
写注册项 (3, “Software\fileservice\ID”, 主窗口.取窗口句柄 ())
主窗口.置托盘图标 (#图盘图标, “游戏服务器”)
初始化 ()
启动服务 ()
 ' --========  易语言资源网  (www.5A5X.com)  ======--
 ' 努力创建完善、持续更新的易语言学习例程源码资源站
 ' --================   www.5A5X.com  ===========--
 ' --==================   易语言资源网注意事项  ================--
 ' * 易语言资源网为易语言官方站、易语言官方论坛提供辅助资源站；
 ' 本易语言资源网( www.5A5X.com)所有软件和资料均为软件作者提
 ' 供和网友推荐发布而来，其版权归该软件和程序源码的合法拥有者所
 ' 有，本站易语言资源网整理收集仅供易语言用户学习和易语言技术研
 ' 究探讨使用，不得用于任何商业用途。如果由于以上原因造成的版权
 ' 纠纷本站概不负责！
 ' * 本站资源未经许可，任何网站不得非法盗链及抄袭本站资源；如引用
 ' 页面，请注明来自易语言资源网，谢谢合作！
 ' --=====================   www.5A5X.com  ================--


.子程序 _主窗口_托盘事件, 空白型, , 
.参数 操作类型, 整数型, , 

调试输出 (操作类型)
.判断开始 (等于 (操作类型, 2))
    赋值 (主窗口., 真)
    赋值 (主窗口., 真)
    赋值 (主窗口., 假)
.判断 (等于 (操作类型, 3))
    弹出菜单 ()
.默认
    
.判断结束


.子程序 _服务设置_被选择, 空白型, , 
.如果 (等于 (是否已创建 (服务设置窗口), 假))
    载入 (服务设置窗口, , 假)
.否则
    赋值 (服务设置窗口., 真)
    赋值 (服务设置窗口., 真)
    赋值 (服务设置窗口., 假)
.如果结束


.子程序 _系统设置_被选择, 空白型, , 
.如果 (等于 (是否已创建 (系统设置窗口), 假))
    载入 (系统设置窗口, , 假)
.否则
    赋值 (系统设置窗口., 真)
    赋值 (系统设置窗口., 真)
    赋值 (系统设置窗口., 假)
.如果结束



.子程序 _综合管理_被选择, 空白型, , 
.如果 (等于 (是否已创建 (综合管理窗口), 假))
    载入 (综合管理窗口, , 假)
.否则
    赋值 (综合管理窗口., 真)
    赋值 (综合管理窗口., 真)
    赋值 (综合管理窗口., 假)
.如果结束


.子程序 _退出程序_被选择, 空白型, , 


.子程序 _主窗口_可否被关闭, 逻辑型, , 


.子程序 _主窗口_将被销毁, 空白型, , 


.子程序 初始化, 空白型, , 
赋值 (系统配置路径, 相加 (取运行目录 (), “\system.dep”))
赋值 (全局配置路径, 相加 (取运行目录 (), “\Oscon.dep”))
赋值 (类别配置路径, 相加 (取运行目录 (), “\Cgcon.dep”))
赋值 (账户文件路径, 相加 (取运行目录 (), “\Capacityuser\”))
赋值 (文件配置路径, 相加 (取运行目录 (), “\fileconfig\”))
赋值 (缓冲文件路径, 相加 (未知支持库函数_7 (#), “Buffer.tmp”))
删除文件 (缓冲文件路径)
创建多级目录 (账户文件路径)
创建多级目录 (文件配置路径)
创建多级目录 (相加 (取运行目录 (), “\updata\”))

.如果真 (等于 (文件是否存在 (相加 (取运行目录 (), “\games.edb”)), 假))
    写到文件 (相加 (取运行目录 (), “\games.edb”), #游戏数据库1)
    写到文件 (相加 (取运行目录 (), “\games.edt”), #游戏数据库2)
.如果真结束
.如果真 (等于 (打开 (相加 (取运行目录 (), “\games.edb”), #游戏数据库, , , , “deephitomi”, ), 假))
    信息框 (“打开数据库失败 #1”, 0, )
    结束 ()
.如果真结束
.如果真 (等于 (文件是否存在 (相加 (取运行目录 (), “\cline.dep”)), 假))
    写到文件 (相加 (取运行目录 (), “\cline.dep”), #客户数据库1)
.如果真结束
.如果真 (等于 (打开 (相加 (取运行目录 (), “\cline.dep”), #客户数据库, , , , “deephitomi2”, ), 假))
    信息框 (“打开数据库失败 #2”, 0, )
    结束 ()
.如果真结束
.如果真 (等于 (文件是否存在 (相加 (取运行目录 (), “\Capacity.dep”)), 假))
    写到文件 (相加 (取运行目录 (), “\Capacity.dep”), #虚拟盘数据库1)
.如果真结束
.如果真 (等于 (打开 (相加 (取运行目录 (), “\Capacity.dep”), #账户数据库, , , , “deephitomi1”, ), 假))
    信息框 (“打开数据库失败 #3”, 0, )
    结束 ()
.如果真结束



.子程序 _即时信息时钟_周期事件, 空白型, , 
赋值 (.标题, 相加 (到文本 (到整数 (相除 (文件_总上传, 1048576))), “M”))
赋值 (.标题, 相加 (到文本 (到整数 (相除 (文件_总下载, 1048576))), “M”))
赋值 (.标题, 相加 (到文本 (到整数 (相除 (文件_现上传, 1024))), “K/S”))
赋值 (.标题, 相加 (到文本 (到整数 (相除 (文件_现下载, 1024))), “K/S”))
赋值 (.标题, 相加 (到文本 (到整数 (相除 (虚拟盘_总上传, 1048576))), “M”))
赋值 (.标题, 相加 (到文本 (到整数 (相除 (虚拟盘_总下载, 1048576))), “M”))
赋值 (.标题, 相加 (到文本 (到整数 (相除 (虚拟盘_现上传, 1024))), “K/S”))
赋值 (.标题, 相加 (到文本 (到整数 (相除 (虚拟盘_现下载, 1024))), “K/S”))
连续赋值 (0, 文件_现上传, 文件_现下载, 虚拟盘_现上传, 虚拟盘_现下载)
' 本源码来自易语言资源网(www.5A5X.com)

.子程序 _启动服务按钮_被单击, 空白型, , 
启动服务 ()


.子程序 _停止服务按钮_被单击, 空白型, , 
停止服务 ()


.窗口程序集 综合管理程序集, , , 

.程序集变量 上次行号, 整数型, , , 
.程序集变量 目录长度, 整数型, , , 
.程序集变量 是否停止搜索, 逻辑型, , , 
.程序集变量 生成总数, 整数型, , , 
.程序集变量 当前生成位置, 整数型, , , 
.程序集变量 待修改的游戏名, 文本型, , , 
.程序集变量 临时配置文件, 文本型, , , 
.子程序 _综合管理窗口_创建完毕, 空白型, , 
综合管理窗口.取窗口句柄 ().未知支持库函数_0 ()
添加游戏初始化 ()
初始化类别到组合框 ()
初始化游戏到游戏列表 ()
初始化虚拟U盘信息 ()
初始化全局配置 ()
_项目选择夹_子夹被改变 ()

.子程序 初始化类别到组合框, 空白型, , 
.局部变量 临时数组, 文本型, , "0", 
.局部变量 临时变量, 整数型, , , 

清空 ()
清空 ()
清空 ()
赋值 (临时数组, 取配置节名 (类别配置路径))
“全部游戏”.加入项目 ()
.计次循环首 (取数组成员数 (临时数组), 临时变量)
    临时数组.加入项目 ( [临时变量], )
    临时数组.加入项目 ( [临时变量], )
    临时数组.加入项目 ( [临时变量], )
.计次循环尾 ()

.子程序 初始化全局配置, 空白型, , 
.局部变量 临时变量, 整数型, , , 
.局部变量 临时文本变量, 文本型, , , 

赋值 (.内容, 读配置项 (全局配置路径, “system”, “主页”, ))

赋值 (临时变量, 到整数 (读配置项 (全局配置路径, “system”, “起始显示”, )))
.判断开始 (等于 (临时变量, 1))
    赋值 (.选中, 真)
.判断 (等于 (临时变量, 2))
    赋值 (.选中, 真)
.判断 (等于 (临时变量, 3))
    赋值 (.选中, 真)
.判断 (等于 (临时变量, 4))
    赋值 (.选中, 真)
.判断 (等于 (临时变量, 5))
    赋值 (.选中, 真)
.默认
    
.判断结束

.如果 (等于 (读配置项 (全局配置路径, “system”, “开机运行”, ), “真”))
    赋值 (.选中, 真)
.否则
    赋值 (.选中, 假)
.如果结束

赋值 (临时文本变量, 读配置项 (全局配置路径, “system”, “首显类别”, ))
.计次循环首 (取项目数 (), 临时变量)
    .如果真 (等于 (相减 (临时变量, 1).取项目文本 (), 临时文本变量))
        赋值 (.现行选中项, 相减 (临时变量, 1))
    .如果真结束
    
.计次循环尾 ()

赋值 (.内容, 读配置项 (全局配置路径, “system”, “网吧名称”, ))
赋值 (.内容, 读配置项 (全局配置路径, “system”, “字体大小”, ))
赋值 (.颜色, 到整数 (读配置项 (全局配置路径, “system”, “字体颜色”, )))
.如果 (等于 (读配置项 (全局配置路径, “system”, “网吧名称配置”, ), “1”))
    赋值 (.选中, 真)
    连续赋值 (真, .禁止, .禁止, .禁止)
.否则
    赋值 (.选中, 假)
    连续赋值 (假, .禁止, .禁止, .禁止)
.如果结束

赋值 (.内容, 读配置项 (全局配置路径, “system”, “公告”, ))
赋值 (.内容, 读配置项 (全局配置路径, “system”, “影视网址”, ))
赋值 (.内容, 相加 (取运行目录 (), “\”, 读配置项 (全局配置路径, “system”, “壁纸”, )))

.如果 (等于 (读配置项 (全局配置路径, “system”, “同步时间”, ), “真”))
    赋值 (.选中, 真)
.否则
    赋值 (.选中, 假)
.如果结束

.如果 (等于 (读配置项 (全局配置路径, “system”, “开启虚拟盘”, ), “真”))
    赋值 (.选中, 真)
.否则
    赋值 (.选中, 假)
.如果结束


.子程序 初始化游戏到游戏列表, 空白型, , 
.局部变量 项索引, 整数型, , , 
.局部变量 临时整数变量, 整数型, , , 
.局部变量 临时整数变量1, 长整数型, , , 
.局部变量 游戏大小, 文本型, , , 
.局部变量 项索引2, 整数型, , , 

置当前库 (#游戏数据库)
清空 ()
全部删除 ()
赋值 (., 7)
“客户端升级索引”.加入项目 ()
赋值 (., 相加 (取记录数 (), 1))
赋值 (., 40)
0.未知支持库函数_30 (#.)
0.未知支持库函数_25 (1, ., 5, #.)

0.未知支持库函数_9 (0, #., “图标”)
0.未知支持库函数_9 (1, #., “序号”)
0.未知支持库函数_9 (2, #., “游戏名称”)
0.未知支持库函数_9 (3, #., “游戏大小”)
0.未知支持库函数_9 (4, #., “游戏类别”)
0.未知支持库函数_9 (5, #., “搜索首拼”)
0.未知支持库函数_9 (6, #., “游戏路径”)

.计次循环首 (., 临时整数变量)
    相减 (临时整数变量, 1).未知支持库函数_32 (多项选择 (临时整数变量, 40, 35, 120, 100, 80, 120, 270))
.计次循环尾 ()
到首记录 ()
.计次循环首 (取记录数 (), 临时整数变量)
    赋值 (项索引, 临时整数变量)
    读 (#游戏名).加入项目 (临时整数变量)
    项索引.未知支持库函数_9 (0, #., 读 (#图标))
    项索引.未知支持库函数_9 (1, #., 到文本 (临时整数变量))
    项索引.未知支持库函数_9 (2, #., 读 (#游戏名))
    赋值 (临时整数变量1, 读 (#大小))
    .如果 (大于 (临时整数变量1, 0))
        .如果 (大于 (临时整数变量1, 1048576)) ' 1048576(1MB) 1073741824(1GB)
            .如果 (大于 (临时整数变量1, 1073741824))
                赋值 (游戏大小, 相加 (到文本 (四舍五入 (相除 (临时整数变量1, 1073741824), 2)), “GB”))
            .否则
                赋值 (游戏大小, 相加 (到文本 (四舍五入 (相除 (临时整数变量1, 1048576), 2)), “MB”))
            .如果结束
            
        .否则
            赋值 (游戏大小, 相加 (到文本 (四舍五入 (相除 (临时整数变量1, 1024), 2)), “KB”))
        .如果结束
        
    .否则
        赋值 (游戏大小, “没有索引”)
    .如果结束
    项索引.未知支持库函数_9 (3, #., 游戏大小)
    项索引.未知支持库函数_9 (4, #., 读 (#游戏类别))
    项索引.未知支持库函数_9 (5, #., 读 (#游戏首拼))
    项索引.未知支持库函数_9 (6, #., 读 (#游戏路径))
    .如果真 (等于 (读 (#快捷方式), 真))
        赋值 (项索引2, .插入表项 ())
        项索引2.置表项数值 (临时整数变量)
        项索引2.置标题 (0, 到文本 (相加 (项索引2, 1)))
        项索引2.置标题 (1, 读 (#游戏名))
        项索引2.置标题 (2, 相加 (“%主程序文件路径% ”, 到文本 (临时整数变量)))
    .如果真结束
    跳过 ()
.计次循环尾 ()

.如果真 (大于 (., 1))
    1.未知支持库函数_0 (1)
.如果真结束


.子程序 初始化客户分组到列表, 空白型, , 
.局部变量 临时整数变量, 整数型, , , 
.局部变量 表项索引, 整数型, , , 
.局部变量 临时整数数组, 整数型, , "0", 

全部删除 ()
全部删除 ()
置当前库 (#客户数据库)
到首记录 ()
.计次循环首 (取记录数 (), 临时整数变量)
    .如果 (等于 (读 (#分组), 真))
        赋值 (表项索引, .插入表项 (1, , ))
        表项索引.置表项数值 (临时整数变量)
        表项索引.置标题 (1, 读 (#计算机名))
        表项索引.置标题 (2, “离线”)
        表项索引.置标题 (3, 读 (#IP))
        表项索引.置标题 (4, 读 (#MAC))
        表项索引.置标题 (5, 读 (#CPU))
        表项索引.置标题 (6, 读 (#内存))
    .否则
        赋值 (表项索引, .插入表项 (1, , ))
        表项索引.置表项数值 (临时整数变量)
        表项索引.置标题 (1, 读 (#计算机名))
        表项索引.置标题 (2, “离线”)
        表项索引.置标题 (3, 读 (#IP))
        表项索引.置标题 (4, 读 (#MAC))
        表项索引.置标题 (5, 读 (#CPU))
        表项索引.置标题 (6, 读 (#内存))
    .如果结束
    跳过 ()
.计次循环尾 ()
0.未知支持库函数_41 (相加 (“已分组客户机”, “(”, 到文本 (取表项数 ()), “）”))
1.未知支持库函数_41 (相加 (“未分组客户机”, “(”, 到文本 (取表项数 ()), “）”))
游戏服务端.未知支持库函数_11 (临时整数数组)
.计次循环首 (取数组成员数 (临时整数数组), 临时整数变量)
    游戏服务端.未知支持库函数_7 (临时整数数组 [临时整数变量], { 222, 131, 146, 214, 187 })
    延迟 (100)
.计次循环尾 ()


.子程序 初始化虚拟U盘信息, 空白型, , 
.局部变量 临时文本变量, 文本型, , , 
.局部变量 临时整数变量, 整数型, , , 

赋值 (.内容, 读配置项 (系统配置路径, “Tvd”, “Capacity”, ))
赋值 (.内容, 读配置项 (系统配置路径, “Tvd”, “超时时长”, ))
.如果 (等于 (读配置项 (系统配置路径, “Tvd”, “超时删除”, ), “真”))
    赋值 (.选中, 真)
.否则
    赋值 (.选中, 假)
.如果结束
赋值 (临时文本变量, 读配置项 (系统配置路径, “Tvd”, “Drive”, ))
.计次循环首 (取项目数 (), 临时整数变量)
    .如果真 (等于 (相减 (临时整数变量, 1).取项目文本 (), 临时文本变量))
        赋值 (.现行选中项, 相减 (临时整数变量, 1))
    .如果真结束
    
.计次循环尾 ()

置当前库 (#账户数据库)
到首记录 ()
未知支持库函数_57 ()
赋值 (., 4)
赋值 (., 相加 (取记录数 (), 1))
0.未知支持库函数_25 (0, ., 3, #.)
0.未知支持库函数_9 (0, #., “账户名称”)
0.未知支持库函数_9 (1, #., “已用容量”)
0.未知支持库函数_9 (2, #., “账户注册时间”)
0.未知支持库函数_9 (3, #., “上次登录时间”)
.计次循环首 (4, 临时整数变量)
    相减 (临时整数变量, 1).未知支持库函数_32 (多项选择 (临时整数变量, 200, 100, 220, 220))
.计次循环尾 ()
.计次循环首 (取记录数 (), 临时整数变量)
    临时整数变量.未知支持库函数_9 (0, #., 读 (#账户名))
    临时整数变量.未知支持库函数_9 (1, #., 到文本 (读 (#使用容量)))
    临时整数变量.未知支持库函数_9 (2, #., 读 (#注册时间))
    临时整数变量.未知支持库函数_9 (3, #., 读 (#登录时间))
    跳过 ()
.计次循环尾 ()


.子程序 _修改浏览器主页按钮_被单击, 空白型, , 
.如果 (不等于 (.内容, “”))
    .如果 (等于 (写配置项 (全局配置路径, “system”, “主页”, .内容), 真))
        操作反馈 (3)
    .否则
        操作反馈 (2)
    .如果结束
    ' 本源码来自易语言资源网(www.5A5X.com)
.否则
    操作反馈 (1)
.如果结束


.子程序 _浏览器单选框_被单击, 空白型, , 
.如果真 (等于 (.选中, 真))
    .如果真 (等于 (写配置项 (全局配置路径, “system”, “起始显示”, “1”), 假))
        操作反馈 (2)
    .如果真结束
    
.如果真结束


.子程序 _游戏大厅单选框_被单击, 空白型, , 
.如果真 (等于 (.选中, 真))
    .如果真 (等于 (写配置项 (全局配置路径, “system”, “起始显示”, “2”), 假))
        操作反馈 (2)
    .如果真结束
    
.如果真结束


.子程序 _聊天工具单选框_被单击, 空白型, , 
.如果真 (等于 (.选中, 真))
    .如果真 (等于 (写配置项 (全局配置路径, “system”, “起始显示”, “3”), 假))
        操作反馈 (2)
    .如果真结束
    
.如果真结束


.子程序 _影视音乐单选框_被单击, 空白型, , 
.如果真 (等于 (.选中, 真))
    .如果真 (等于 (写配置项 (全局配置路径, “system”, “起始显示”, “4”), 假))
        操作反馈 (2)
    .如果真结束
    
.如果真结束


.子程序 _常用软件单选框_被单击, 空白型, , 
.如果真 (等于 (.选中, 真))
    .如果真 (等于 (写配置项 (全局配置路径, “system”, “起始显示”, “5”), 假))
        操作反馈 (2)
    .如果真结束
    
.如果真结束


.子程序 _客户开机运行选择框_被单击, 空白型, , 
.如果 (等于 (.选中, 真))
    .如果 (等于 (写配置项 (全局配置路径, “system”, “开机运行”, “真”), 真))
        操作反馈 (3)
    .否则
        操作反馈 (2)
    .如果结束
    
.否则
    .如果 (等于 (写配置项 (全局配置路径, “system”, “开机运行”, “假”), 真))
        操作反馈 (3)
    .否则
        操作反馈 (2)
    .如果结束
    
.如果结束


.子程序 _首显类别组合框_列表项被选择, 空白型, , 
.如果真 (不等于 (.现行选中项, -1))
    .如果 (等于 (写配置项 (全局配置路径, “system”, “首显类别”, .取项目文本 (.现行选中项)), 真))
        操作反馈 (3)
    .否则
        操作反馈 (2)
    .如果结束
    
    
.如果真结束


.子程序 _修改网吧名称按钮_被单击, 空白型, , 
.如果 (并且 (不等于 (.内容, “”), 不等于 (.内容, “”)))
    .如果真 (等于 (写配置项 (全局配置路径, “system”, “网吧名称”, .内容), 真))
        .如果真 (等于 (写配置项 (全局配置路径, “system”, “字体大小”, .内容), 真))
            .如果真 (等于 (写配置项 (全局配置路径, “system”, “字体颜色”, 到文本 (.颜色)), 真))
                操作反馈 (3)
                返回 ()
            .如果真结束
            
        .如果真结束
        
    .如果真结束
    操作反馈 (2)
.否则
    操作反馈 (1)
.如果结束


.子程序 _使用计算机名选择框_被单击, 空白型, , 
.如果 (等于 (.选中, 真))
    .如果 (等于 (写配置项 (全局配置路径, “system”, “网吧名称配置”, “1”), 真))
        操作反馈 (3)
    .否则
        操作反馈 (2)
    .如果结束
    连续赋值 (真, .禁止, .禁止, .禁止)
.否则
    .如果 (等于 (写配置项 (全局配置路径, “system”, “网吧名称配置”, “0”), 真))
        操作反馈 (3)
    .否则
        操作反馈 (2)
    .如果结束
    连续赋值 (假, .禁止, .禁止, .禁止)
.如果结束


.子程序 _修改公告按钮_被单击, 空白型, , 
.如果 (不等于 (.内容, “”))
    .如果 (等于 (写配置项 (全局配置路径, “system”, “公告”, .内容), 真))
        操作反馈 (3)
    .否则
        操作反馈 (2)
    .如果结束
    
.否则
    操作反馈 (1)
.如果结束


.子程序 _修改影视按钮_被单击, 空白型, , 
.如果 (不等于 (.内容, “”))
    .如果 (等于 (写配置项 (全局配置路径, “system”, “影视网址”, .内容), 真))
        操作反馈 (3)
    .否则
        操作反馈 (2)
    .如果结束
    
.否则
    操作反馈 (1)
.如果结束


.子程序 _修改壁纸按钮_被单击, 空白型, , 
.局部变量 文件名, 文本型, , , 

赋值 (.过滤器, “BMP格式图片|*.bmp”)
打开 ()
.如果真 (不等于 (.文件名, “”))
    赋值 (文件名, 取文本右边 (.文件名, 相减 (取文本长度 (.文件名), 倒找文本 (.文件名, “\”, , 假))))
    .如果真 (不等于 (.文件名, 相加 (取运行目录 (), “\”, 文件名)))
        .如果真 (等于 (复制文件 (.文件名, 相加 (取运行目录 (), “\”, 文件名)), 假))
            信息框 (“复制壁纸文件到程序目录下失败！请手动复制壁纸文件到程序目录下并且重新选择路径”, #错误图标, “修改壁纸”)
            返回 ()
        .如果真结束
        
    .如果真结束
    .如果 (等于 (写配置项 (全局配置路径, “system”, “壁纸”, 文件名), 真))
        操作反馈 (3)
        赋值 (.内容, 相加 (取运行目录 (), “\”, 文件名))
    .否则
        操作反馈 (2)
    .如果结束
    
    
.如果真结束


.子程序 _与服务器同步时间选择框_被单击, 空白型, , 
写配置项 (全局配置路径, “system”, “同步时间”, 到文本 (.选中))

.子程序 _添加类别按钮_被单击, 空白型, , 
.局部变量 临时变量, 整数型, , , 

.如果 (不等于 (.内容, “”))
    .如果真 (大于或等于 (取项目数 (), 11))
        信息框 (“类别已达到上限！”, #错误图标, )
        返回 ()
    .如果真结束
    .计次循环首 (取项目数 (), 临时变量)
        .如果真 (等于 (相减 (临时变量, 1).取项目文本 (), .内容))
            信息框 (“该类别已经存在！”, #错误图标, )
            返回 ()
        .如果真结束
        
    .计次循环尾 ()
    .如果 (等于 (写配置项 (类别配置路径, .内容, “null”, “1”), 真))
        操作反馈 (3)
    .否则
        操作反馈 (2)
    .如果结束
    
.否则
    操作反馈 (1)
.如果结束
初始化类别到组合框 ()

.子程序 _删除类别按钮_被单击, 空白型, , 
.如果 (不等于 (.现行选中项, -1))
    .如果真 (等于 (信息框 (相加 (“确认删除<”, .取项目文本 (.现行选中项), “>类别吗?”), 相加 (#询问图标, #取消钮), “删除类别确认”), #确认钮))
        .如果 (等于 (写配置项 (类别配置路径, .取项目文本 (.现行选中项), “null”, “0”), 真))
            操作反馈 (3)
        .否则
            操作反馈 (2)
        .如果结束
        
    .如果真结束
    
.否则
    信息框 (“请选择要操作的类别名”, #错误图标, “删除类别”)
.如果结束
初始化类别到组合框 ()

.子程序 _修改类别按钮_被单击, 空白型, , 
.如果真 (等于 (.内容, “”))
    操作反馈 (1)
    返回 ()
.如果真结束
.如果 (不等于 (.现行选中项, -1))
    .如果 (等于 (写配置项 (类别配置路径, .取项目文本 (.现行选中项), “null”, “0”), 真))
        .如果 (等于 (写配置项 (类别配置路径, .内容, “null”, “1”), 真))
            操作反馈 (3)
        .否则
            操作反馈 (2)
        .如果结束
        
    .否则
        操作反馈 (2)
    .如果结束
    
.否则
    信息框 (“请选择要操作的类别名”, #错误图标, “删除类别”)
.如果结束
初始化类别到组合框 ()


.子程序 _快捷方式超级列表框_鼠标右键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 



.子程序 _快捷方式超级列表框_右键单击表项, 空白型, , 
.如果真 (不等于 (., -1))
    弹出菜单 ()
.如果真结束



.子程序 _删除该快捷方式_被选择, 空白型, , 
.如果真 (不等于 (., -1))
    置当前库 (#游戏数据库)
    .如果真 (小于或等于 (.取表项数值 (.), 取记录数 ()))
        跳到 (.取表项数值 (.))
        .如果真 (等于 (读 (#游戏名), .取标题 (., 1)))
            .如果 (等于 (写 (#快捷方式, 假), 真))
                .删除表项 (.)
                操作反馈 (3)
            .否则
                操作反馈 (2)
            .如果结束
            
        .如果真结束
        
    .如果真结束
    
.如果真结束


.子程序 _拖放对象_得到文件, 空白型, , 
.参数 接收到的文件路径, 文本型, , 

.如果真 (不等于 (取文本右边 (接收到的文件路径, 4), “.exe”))
    信息框 (“拖放的文件必须为可执行文件！”, #错误图标, “拖放文件错误”)
    返回 ()
.如果真结束
.如果真 (不等于 (., 1))
    赋值 (., 1)
.如果真结束
赋值 (.内容, 接收到的文件路径)

.子程序 _添加路径按钮_被单击, 空白型, , 
赋值 (.过滤器, “可执行文件|*.exe”)
打开 ()
.如果真 (不等于 (.文件名, “”))
    赋值 (.内容, .文件名)
.如果真结束


.子程序 _文件路径编辑框_内容被改变, 空白型, , 
.如果真 (等于 (文件是否存在 (.内容), 真))
    获取文件信息 (.内容)
.如果真结束


.子程序 获取文件信息, 空白型, , 
.参数 路径, 文本型, , 

赋值 (.图片, 取文件图标 (路径))
.如果真 (大于 (取文件尺寸 (路径), 104857600)) ' 100M
    信息框 (“文件尺寸太大，请另行获取文件MD5!”, #错误图标, “获取失败”)
    返回 ()
.如果真结束
赋值 (.内容, 未知支持库函数_2 (读入文件 (路径)))
赋值 (.内容, 取文本左边 (路径, 倒找文本 (路径, “\”, , 假)))
赋值 (.内容, .内容)

.子程序 取首拼, 文本型, , 
.参数 要获取的文本, 文本型, , 

.局部变量 临时变量, 整数型, , , 
.局部变量 数据, 字节集, , , 
.局部变量 长度, 整数型, , , 
.局部变量 返回的文本, 文本型, , , 

 ' 近在眼前分割字符方法
赋值 (临时变量, 1)
赋值 (数据, 到字节集 (要获取的文本))
赋值 (长度, 取字节集长度 (数据))
.判断循环首 (小于或等于 (临时变量, 长度))
    .如果 (大于 (数据 [临时变量], 127))
        赋值 (返回的文本, 相加 (返回的文本, 取文本左边 (取声母 (相加 (字符 (数据 [临时变量]), 字符 (数据 [相加 (临时变量, 1)])), 1), 1)))
        赋值 (临时变量, 相加 (临时变量, 2))
    .否则
        赋值 (返回的文本, 相加 (返回的文本, 到小写 (字符 (数据 [临时变量]))))
        赋值 (临时变量, 相加 (临时变量, 1))
    .如果结束
    
.判断循环尾 ()
返回 (返回的文本)

.子程序 _游戏名称编辑框_内容被改变, 空白型, , 
.如果真 (不等于 (.内容, “”))
    赋值 (.内容, 取首拼 (.内容))
.如果真结束


.子程序 _修改游戏官网按钮_被单击, 空白型, , 


.子程序 _修改图标按钮_被单击, 空白型, , 
赋值 (.过滤器, “*.dll|*.exe”)
打开 ()
.如果真 (不等于 (.文件名, “”))
    赋值 (.图片, 取文件图标 (.文件名))
.如果真结束


.子程序 _修改服务器目录按钮_被单击, 空白型, , 
.局部变量 选择的文件夹路径, 文本型, , , 

赋值 (选择的文件夹路径, 未知支持库函数_2 (“请选择服务游戏目录”, 假))
.如果真 (不等于 (选择的文件夹路径, “”))
    赋值 (.内容, 选择的文件夹路径)
    赋值 (.内容, 选择的文件夹路径)
.如果真结束


.子程序 _修改客户端目录按钮_被单击, 空白型, , 


.子程序 _添加游戏按钮_被单击, 空白型, , 
.局部变量 临时整数变量, 整数型, , , 
.局部变量 名称, 文本型, , , 

.如果真 (等于 (检查参数 (), 假))
    返回 ()
.如果真结束
.如果 (等于 (.标题, “添加游戏”))
    置当前库 (#游戏数据库)
    到首记录 ()
    .计次循环首 (取记录数 (), 临时整数变量)
        .如果真 (等于 (读 (#游戏名), .内容))
            信息框 (“该游戏已经存在！”, #错误图标, “操作反馈”)
            返回 ()
        .如果真结束
        跳过 ()
    .计次循环尾 ()
    .如果 (等于 (加记录 (.内容, .内容, .内容, .内容, .取项目文本 (.现行选中项), .内容, .内容, .内容, .图片, 0, 读入文件 (临时配置文件), 读入文件 (.内容), .选中), 真))
        赋值 (名称, .内容)
        操作反馈 (3)
        添加游戏初始化 ()
        初始化游戏到游戏列表 ()
        .如果真 (等于 (信息框 (“是否同时生成索引？”, #询问图标, ), #确认钮))
            赋值 (., 3)
            .计次循环首 (取项目数 (), 临时整数变量)
                .如果真 (等于 (相减 (临时整数变量, 1).取项目文本 (), 名称))
                    赋值 (.现行选中项, 相减 (临时整数变量, 1))
                    _游戏组合框_列表项被选择 ()
                .如果真结束
                
            .计次循环尾 ()
        .如果真结束
        
    .否则
        操作反馈 (2)
    .如果结束
    
.否则
    置当前库 (#游戏数据库)
    到首记录 ()
    .计次循环首 (取记录数 (), 临时整数变量)
        .如果真 (等于 (读 (#游戏名), .内容))
            .如果真 (不等于 (临时整数变量, 到整数 (.标记)))
                调试输出 (临时整数变量)
                调试输出 (.标记)
                信息框 (“该游戏已经存在！”, #错误图标, “操作反馈”)
                到循环尾 ()
            .如果真结束
            
        .如果真结束
        .如果真 (等于 (临时整数变量, 到整数 (.标记)))
            .如果 (等于 (读 (#游戏名), 待修改的游戏名))
                写 (#游戏路径, .内容)
                写 (#游戏名, .内容)
                写 (#游戏首拼, .内容)
                写 (#游戏MD5, .内容)
                写 (#游戏类别, .取项目文本 (.现行选中项))
                写 (#游戏官网, .内容)
                写 (#服务器目录, .内容)
                写 (#客户端目录, .内容)
                写 (#图标, .图片)
                写 (#快捷方式, .选中)
                信息框 (“修改成功”, #信息图标, “操作反馈”)
                _取消添加按钮_被单击 ()
                初始化游戏到游戏列表 ()
                返回 ()
            .否则
                调试输出 (读 (#游戏名))
                调试输出 (待修改的游戏名)
            .如果结束
            
        .如果真结束
        跳过 ()
    .计次循环尾 ()
    
.如果结束


.子程序 _取消添加按钮_被单击, 空白型, , 
赋值 (., 0)
1.未知支持库函数_41 (“添加游戏”)
赋值 (.标题, “添加游戏”)
赋值 (.标题, “取消添加”)
添加游戏初始化 ()

.子程序 检查参数, 逻辑型, , 
.如果 (不等于 (.内容, “”))
    .如果 (不等于 (.内容, “”))
        .如果 (不等于 (.内容, “”))
            .如果 (不等于 (.内容, “”))
                .如果 (不等于 (.现行选中项, -1))
                    .如果 (不等于 (.图片, {  }))
                        .如果 (不等于 (.内容, “”))
                            .如果 (不等于 (.内容, “”))
                                返回 (真)
                            .否则
                                信息框 (“客户端目录不能为空”, #错误图标, “参数错误”)
                            .如果结束
                            
                        .否则
                            信息框 (“服务器目录不能为空”, #错误图标, “参数错误”)
                        .如果结束
                        
                    .否则
                        信息框 (“请选择游戏图标”, #错误图标, “参数错误”)
                    .如果结束
                    
                .否则
                    信息框 (“请选择游戏类别”, #错误图标, “参数错误”)
                .如果结束
                
            .否则
                信息框 (“游戏MD5不能为空”, #错误图标, “参数错误”)
            .如果结束
            
        .否则
            信息框 (“游戏首拼不能为空”, #错误图标, “参数错误”)
        .如果结束
        
    .否则
        信息框 (“游戏名称不能为空”, #错误图标, “参数错误”)
    .如果结束
    
.否则
    信息框 (“文件路径不能为空”, #错误图标, “参数错误”)
.如果结束
返回 (假)

.子程序 添加游戏初始化, 空白型, , 
连续赋值 (“”, .内容, .内容, .内容, .内容, .内容, .内容, .内容, .内容, .内容, .内容)
清空 ()
赋值 (.内容, “”)
赋值 (.选中, 假)
赋值 (.禁止, 真)
赋值 (.禁止, 真)
赋值 (.图片, {  })
赋值 (.内容, “http://”)
赋值 (临时配置文件, 相加 (未知支持库函数_7 (#), “config.dep”))
写到文件 (临时配置文件, {  })


.子程序 _保存CDK到数据库按钮_被单击, 空白型, , 
.如果 (等于 (写字段 (#CDK, #游戏数据库, 读入文件 (临时配置文件)), 真))
    操作反馈 (3)
.否则
    操作反馈 (2)
.如果结束


.子程序 _示例按钮_被单击, 空白型, , 
信息框 (相加 (“假如要添加《[HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run]ctfmon.exe=C:\\WINDOWS\\system32\\ctfmon.exe》的数据”, #换行符, “注册表路径为：HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run”, #换行符, “子项目为：ctfmon.exe”, #换行符, “子项值为：C:\\WINDOWS\\system32\\ctfmon.exe”), 0, )


.子程序 _修改注册表路径按钮_被单击, 空白型, , 
.如果真 (等于 (.内容, “”))
    操作反馈 (1)
    返回 ()
.如果真结束
写配置项 (临时配置文件, “CDK”, “lj”, .内容)

.子程序 _修改子项目按钮_被单击, 空白型, , 
.如果真 (等于 (.内容, “”))
    操作反馈 (1)
    返回 ()
.如果真结束
写配置项 (临时配置文件, “CDK”, “zxm”, .内容)

.子程序 _添加CDK按钮_被单击, 空白型, , 
.局部变量 临时整数变量, 整数型, , , 

.如果真 (等于 (.内容, “”))
    操作反馈 (1)
    返回 ()
.如果真结束
.计次循环首 (取项目数 (), 临时整数变量)
    .如果真 (等于 (相减 (临时整数变量, 1).取项目文本 (), .内容))
        信息框 (“改子项值已存在”, #错误图标, )
        返回 ()
    .如果真结束
    
.计次循环尾 ()
.加入项目 (.内容, )
保存至配置文件 ()

.子程序 _删除CDK按钮_被单击, 空白型, , 
.如果 (不等于 (.现行选中项, -1))
    .删除项目 (.现行选中项)
.否则
    信息框 (“请选择要删除的项目”, #错误图标, )
    返回 ()
.如果结束
保存至配置文件 ()

.子程序 _清空按钮_被单击, 空白型, , 
.如果真 (等于 (信息框 (“确认要清空吗？”, #警告图标, “操纵确认”), #确认钮))
    .如果 (等于 (写字段 (#CDK, #游戏数据库, {  }), 真))
        操作反馈 (3)
    .否则
        操作反馈 (2)
    .如果结束
    
.如果真结束


.子程序 保存至配置文件, 空白型, , 
.局部变量 临时整数变量, 整数型, , , 

写配置项 (临时配置文件, “CDK”, “zs”, 到文本 (取项目数 ()))
.计次循环首 (取项目数 (), 临时整数变量)
    写配置项 (临时配置文件, “CDK”, 到文本 (临时整数变量), 相减 (临时整数变量, 1).取项目文本 ())
.计次循环尾 ()
操作反馈 (3)


.子程序 _修改注册表文件路径按钮_被单击, 空白型, , 
赋值 (.过滤器, “注册表文件|*.reg”)
打开 ()
.如果真 (不等于 (.文件名, “”))
    .如果真 (等于 (文件是否存在 (.文件名), 假))
        返回 ()
    .如果真结束
    赋值 (.内容, .文件名)
.如果真结束
读入注册表文件 (.内容)

.子程序 _清空注册表文件按钮_被单击, 空白型, , 
.如果真 (等于 (信息框 (“确认要清空吗？”, #警告图标, “操纵确认”), #确认钮))
    .如果 (等于 (写字段 (#REG, #游戏数据库, {  }), 真))
        操作反馈 (3)
    .否则
        操作反馈 (2)
    .如果结束
    
.如果真结束


.子程序 _保存注册表文件到数据库按钮_被单击, 空白型, , 
.如果真 (等于 (文件是否存在 (.内容), 假))
    信息框 (“文件不存在”, #错误图标, )
    返回 ()
.如果真结束
.如果 (等于 (写字段 (#REG, #游戏数据库, 读入文件 (.内容)), 真))
    操作反馈 (3)
.否则
    操作反馈 (2)
.如果结束


.子程序 读入注册表文件, 空白型, , 
.参数 路径, 文本型, , 

.如果真 (等于 (文件是否存在 (路径), 真))
    赋值 (.内容, 到文本 (未知支持库函数_0 (读入文件 (路径), #, #, )))
.如果真结束


.子程序 _项目选择夹_子夹被改变, 空白型, , 
.判断开始 (等于 (., 0))
    
.判断 (等于 (., 1))
    赋值 (.禁止, 假)
.判断 (等于 (., 2))
    
.判断 (等于 (., 3))
    
.判断 (等于 (., 4))
    初始化客户分组到列表 ()
.判断 (等于 (., 5))
    初始化虚拟U盘信息 ()
.默认
    
.判断结束



.子程序 _游戏管理表格_鼠标右键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (大于 (未知支持库函数_3 (), 0))
    弹出菜单 ()
.如果真结束



.子程序 _游戏管理表格_光标位置改变, 空白型, , 
上次行号.未知支持库函数_24 (1, 上次行号, 6, #白色)
未知支持库函数_3 ().未知支持库函数_24 (1, 未知支持库函数_3 (), 6, #粉红)
赋值 (上次行号, 未知支持库函数_3 ())


.子程序 _查找游戏_被选择, 空白型, , 
.局部变量 输入的内容, 文本型, , , 
.局部变量 临时整数变量, 整数型, , , 

输入框 (“查找游戏（请输入完整游戏名称或首拼）”, , 输入的内容, )
置当前库 (#游戏数据库)
到首记录 ()
.计次循环首 (取记录数 (), 临时整数变量)
    .如果真 (或者 (等于 (读 (#游戏名), 输入的内容), 等于 (读 (#游戏首拼), 输入的内容)))
        临时整数变量.未知支持库函数_0 (1)
    .如果真结束
    跳过 ()
.计次循环尾 ()

.子程序 _修改游戏_被选择, 空白型, , 
.局部变量 临时整数变量, 整数型, , , 

赋值 (., 1)
1.未知支持库函数_41 (“修改游戏”)
赋值 (.标题, “确认修改”)
赋值 (.标题, “取消修改”)
置当前库 (#游戏数据库)
跳到 (未知支持库函数_3 ())
.如果真 (不等于 (读 (#游戏名), 未知支持库函数_3 ().未知支持库函数_10 (2)))
    调试输出 (读 (#游戏名))
     ' 返回 ()
.如果真结束
赋值 (待修改的游戏名, 读 (#游戏名))
赋值 (.标记, 到文本 (未知支持库函数_3 ()))
赋值 (.内容, 读 (#游戏路径))
赋值 (.内容, 读 (#游戏名))
赋值 (.内容, 读 (#游戏首拼))
赋值 (.内容, 读 (#游戏MD5))
.计次循环首 (取项目数 (), 临时整数变量)
    .如果真 (等于 (相减 (临时整数变量, 1).取项目文本 (), 读 (#游戏类别)))
        赋值 (.现行选中项, 相减 (临时整数变量, 1))
        赋值 (.禁止, 假)
        跳出循环 ()
    .如果真结束
    
.计次循环尾 ()
赋值 (.内容, 读 (#游戏官网))
赋值 (.内容, 读 (#服务器目录))
赋值 (.内容, 读 (#客户端目录))
赋值 (.图片, 读 (#图标))
赋值 (.选中, 读 (#快捷方式))
写到文件 (临时配置文件, 读 (#CDK))
赋值 (.内容, 读配置项 (临时配置文件, “CDK”, “lj”, ))
赋值 (.内容, 读配置项 (临时配置文件, “CDK”, “zxm”, ))
.计次循环首 (到整数 (读配置项 (临时配置文件, “CDK”, “zs”, )), 临时整数变量)
    读配置项 (临时配置文件, “CDK”, 到文本 (临时整数变量), ).加入项目 ()
.计次循环尾 ()
.如果真 (不等于 (读 (#REG), {  }))
    写到文件 (相加 (未知支持库函数_7 (#), “REG.dep”), 读 (#REG))
    读入注册表文件 (相加 (未知支持库函数_7 (#), “REG.dep”))
.如果真结束

赋值 (.禁止, 假)
赋值 (.禁止, 假)


.子程序 _生成索引_被选择, 空白型, , 
.局部变量 临时整数变量, 整数型, , , 
.局部变量 名称, 文本型, , , 

.如果真 (小于或等于 (未知支持库函数_3 (), 0))
    返回 ()
.如果真结束
赋值 (., 3)
赋值 (名称, 未知支持库函数_3 ().未知支持库函数_10 (2))
.计次循环首 (取项目数 (), 临时整数变量)
    .如果真 (等于 (相减 (临时整数变量, 1).取项目文本 (), 名称))
        赋值 (.现行选中项, 相减 (临时整数变量, 1))
        _游戏组合框_列表项被选择 ()
    .如果真结束
    
.计次循环尾 ()


.子程序 _删除游戏_被选择, 空白型, , 
.如果真 (等于 (1.未知支持库函数_40 (), “修改游戏”))
    信息框 (“正在修改游戏无法删除,如要删除请先取消修改.”, #错误图标, “操作反馈”)
    返回 ()
.如果真结束
置当前库 (#游戏数据库)
跳到 (相加 (未知支持库函数_3 (), 1))
.如果真 (不等于 (读 (#游戏名), 未知支持库函数_3 ().未知支持库函数_10 (2)))
    返回 ()
.如果真结束
.如果真 (等于 (信息框 (相加 (“确认删除<”, 读 (#游戏名), “>？”), 相加 (#询问图标, #取消钮), “操作确认”), #确认钮))
    .如果真 (等于 (删除 (), 真))
        .如果真 (等于 (彻底删除 (), 真))
            操作反馈 (3)
            初始化游戏到游戏列表 ()
            返回 ()
        .如果真结束
        
    .如果真结束
    操作反馈 (2)
.如果真结束


.子程序 _定位游戏_被选择, 空白型, , 


.子程序 _添加文件_被选择, 空白型, , 
.局部变量 路径, 文本型, , , 
.局部变量 表项索引, 整数型, , , 

赋值 (.过滤器, “*.*”)
赋值 (.初始目录, .内容)
打开 ()
.如果真 (不等于 (.文件名, “”))
    .如果真 (不等于 (取文本左边 (.文件名, 目录长度), .内容))
        信息框 (“只能添加目录下的文件！”, #错误图标, “添加文件反馈”)
        返回 ()
    .如果真结束
    赋值 (路径, 取文本右边 (.文件名, 相减 (取文本长度 (.文件名), 目录长度)))
    .如果 (等于 (写配置项 (相加 (文件配置路径, .取项目文本 (.现行选中项), “.dep”), 路径, “long”, 到文本 (取文件尺寸 (.文件名))), 真))
        .如果 (等于 (写配置项 (相加 (文件配置路径, .取项目文本 (.现行选中项), “.dep”), 路径, “time”, 到文本 (取文件时间 (.文件名))), 真))
            .如果 (等于 (写配置项 (相加 (文件配置路径, .取项目文本 (.现行选中项), “.dep”), 路径, “cles”, “0”), 真))
                赋值 (表项索引, .插入表项 ())
                表项索引.置标题 (0, 路径)
                表项索引.置标题 (1, 到文本 (取文件尺寸 (.文件名)))
                表项索引.置标题 (2, 到文本 (取文件时间 (.文件名)))
                赋值 (., 表项索引)
                信息框 (“添加成功！”, #信息图标, “添加文件”)
            .否则
                操作反馈 (2)
            .如果结束
            
        .否则
            操作反馈 (2)
        .如果结束
        
    .否则
        操作反馈 (2)
    .如果结束
    
.如果真结束


.子程序 _删除文件_被选择, 空白型, , 
.如果真 (不等于 (., -1))
    .如果真 (等于 (信息框 (“确认删除吗？”, #警告图标, “删除文件”), #确认钮))
        .如果真 (等于 (写配置项 (相加 (文件配置路径, .取项目文本 (.现行选中项), “.dep”), .取标题 (., 0), , ), 假))
            .删除表项 (.)
            操作反馈 (2)
            返回 ()
        .如果真结束
        
    .如果真结束
    
.如果真结束


.子程序 _添加客户端_被选择, 空白型, , 
.如果真 (不等于 (., -1))
    置当前库 (#客户数据库)
    跳到 (.取表项数值 (.))
    写 (#分组, 真)
    初始化客户分组到列表 ()
.如果真结束


.子程序 _删除客户端_被选择, 空白型, , 
.如果真 (不等于 (., -1))
    置当前库 (#客户数据库)
    跳到 (.取表项数值 (.))
    写 (#分组, 假)
    初始化客户分组到列表 ()
    
.如果真结束


.子程序 _重启客户端_被选择, 空白型, , 
.局部变量 计算机名, 文本型, , , 
.局部变量 句柄, 整数型, , , 

.如果 (等于 (.可视, 真))
    .如果真 (等于 (., -1))
        返回 ()
    .如果真结束
    赋值 (计算机名, .取标题 (., 1))
    赋值 (句柄, 到整数 (.取标题 (., 2)))
.否则
    .如果真 (等于 (., -1))
        返回 ()
    .如果真结束
    赋值 (计算机名, .取标题 (., 1))
    赋值 (句柄, 到整数 (.取标题 (., 2)))
.如果结束

.如果真 (等于 (信息框 (相加 (“确认要重启<”, 计算机名, “>吗？”), #警告图标, “操作确认”), #确认钮))
    .如果 (等于 (游戏服务端.未知支持库函数_7 (句柄, { 212, 222, 232, 242, 252 }), 真)) ' 重启命令
        操作反馈 (3)
    .否则
        操作反馈 (2)
    .如果结束
    
.如果真结束


.子程序 _关闭客户端_被选择, 空白型, , 
.局部变量 计算机名, 文本型, , , 
.局部变量 句柄, 整数型, , , 

.如果 (等于 (.可视, 真))
    .如果真 (等于 (., -1))
        返回 ()
    .如果真结束
    赋值 (计算机名, .取标题 (., 1))
    赋值 (句柄, 到整数 (.取标题 (., 2)))
.否则
    .如果真 (等于 (., -1))
        返回 ()
    .如果真结束
    赋值 (计算机名, .取标题 (., 1))
    赋值 (句柄, 到整数 (.取标题 (., 2)))
.如果结束

.如果真 (等于 (信息框 (相加 (“确认要关闭<”, 计算机名, “>吗？”), #警告图标, “操作确认”), #确认钮))
    .如果 (等于 (游戏服务端.未知支持库函数_7 (句柄, { 131, 141, 151, 161, 171 }), 真)) ' 关机命令
        操作反馈 (3)
    .否则
        操作反馈 (2)
    .如果结束
    
.如果真结束


.子程序 _客户进程管理_被选择, 空白型, , 
.局部变量 计算机名, 文本型, , , 
.局部变量 句柄, 整数型, , , 

.如果 (等于 (.可视, 真))
    .如果真 (等于 (., -1))
        返回 ()
    .如果真结束
    赋值 (计算机名, .取标题 (., 1))
    赋值 (句柄, 到整数 (.取标题 (., 2)))
.否则
    .如果真 (等于 (., -1))
        返回 ()
    .如果真结束
    赋值 (计算机名, .取标题 (., 1))
    赋值 (句柄, 到整数 (.取标题 (., 2)))
.如果结束

.如果 (等于 (是否已创建 (客户进程管理窗口), 假))
    载入 (客户进程管理窗口, , 假)
.否则
    赋值 (客户进程管理窗口., 真)
    赋值 (客户进程管理窗口., 真)
    赋值 (客户进程管理窗口., 假)
.如果结束

.如果真 (等于 (游戏服务端.未知支持库函数_7 (句柄, { 152, 153, 154, 145, 146 }), 假)) ' 进程信息命令
    操作反馈 (2)
.如果真结束



.子程序 _客户窗口截图_被选择, 空白型, , 
.局部变量 计算机名, 文本型, , , 
.局部变量 句柄, 整数型, , , 

.如果 (等于 (.可视, 真))
    .如果真 (等于 (., -1))
        返回 ()
    .如果真结束
    赋值 (计算机名, .取标题 (., 1))
    赋值 (句柄, 到整数 (.取标题 (., 2)))
.否则
    .如果真 (等于 (., -1))
        返回 ()
    .如果真结束
    赋值 (计算机名, .取标题 (., 1))
    赋值 (句柄, 到整数 (.取标题 (., 2)))
.如果结束

.如果 (等于 (是否已创建 (窗口截图窗口), 假))
    载入 (窗口截图窗口, , 假)
.否则
    赋值 (窗口截图窗口., 真)
    赋值 (窗口截图窗口., 真)
    赋值 (窗口截图窗口., 假)
.如果结束

.如果真 (等于 (游戏服务端.未知支持库函数_7 (句柄, { 205, 206, 207, 226, 227 }), 假)) ' 截图命令
    操作反馈 (2)
.如果真结束


.子程序 _游戏组合框_列表项被选择, 空白型, , 
.局部变量 表项索引, 整数型, , , 
.局部变量 临时数组, 文本型, , "0", 
.局部变量 临时整数变量, 整数型, , , 
.局部变量 配置文件路径, 文本型, , , 

.如果真 (不等于 (.现行选中项, -1))
    .如果真 (等于 (.现行选中项, 0))
        赋值 (.禁止, 真)
        全部删除 ()
        赋值 (.内容, 相加 (取运行目录 (), “\”))
        赋值 (目录长度, 取文本长度 (.内容))
        赋值 (配置文件路径, 相加 (文件配置路径, .取项目文本 (.现行选中项), “.dep”))
        .如果 (等于 (文件是否存在 (配置文件路径), 真))
            赋值 (.选中, 真)
            赋值 (临时数组, 取配置节名 (配置文件路径))
            .计次循环首 (取数组成员数 (临时数组), 临时整数变量)
                .如果真 (不等于 (读配置项 (配置文件路径, 临时数组 [临时整数变量], “cles”, ), “1”))
                    复制文件 (相加 (.内容, 临时数组 [临时整数变量]), 相加 (未知支持库函数_7 (#), 临时数组 [临时整数变量]))
                    赋值 (表项索引, .插入表项 ())
                    表项索引.置标题 (0, 临时数组 [临时整数变量])
                    表项索引.置标题 (1, 到文本 (取文件尺寸 (相加 (未知支持库函数_7 (#), 临时数组 [临时整数变量]))))
                    表项索引.置标题 (2, 未知支持库函数_2 (读入文件 (相加 (未知支持库函数_7 (#), 临时数组 [临时整数变量]))))
                .如果真结束
                
            .计次循环尾 ()
        .否则
            赋值 (.选中, 假)
            .计次循环首 (4, 临时整数变量)
                复制文件 (相加 (.内容, 多项选择 (临时整数变量, “Cgcon.dep”, “games.edb”, “games.edt”, “Oscon.dep”)), 相加 (未知支持库函数_7 (#), 多项选择 (临时整数变量, “Cgcon.dep”, “games.edb”, “games.edt”, “Oscon.dep”)))
                赋值 (表项索引, .插入表项 ())
                表项索引.置标题 (0, 多项选择 (临时整数变量, “Cgcon.dep”, “games.edb”, “games.edt”, “Oscon.dep”))
                表项索引.置标题 (1, 到文本 (取文件尺寸 (相加 (未知支持库函数_7 (#), 多项选择 (临时整数变量, “Cgcon.dep”, “games.edb”, “games.edt”, “Oscon.dep”)))))
                表项索引.置标题 (2, 未知支持库函数_2 (读入文件 (相加 (未知支持库函数_7 (#), 多项选择 (临时整数变量, “Cgcon.dep”, “games.edb”, “games.edt”, “Oscon.dep”)))))
            .计次循环尾 ()
        .如果结束
        返回 ()
    .如果真结束
    赋值 (.禁止, 真)
    置当前库 (#游戏数据库)
    跳到 (.取项目数值 (.现行选中项))
    赋值 (.内容, 读 (#服务器目录))
    赋值 (.禁止, 假)
    全部删除 ()
    赋值 (目录长度, 取文本长度 (.内容))
    赋值 (配置文件路径, 相加 (文件配置路径, .取项目文本 (.现行选中项), “.dep”))
    .如果 (等于 (文件是否存在 (配置文件路径), 真))
        赋值 (.选中, 真)
    .否则
        赋值 (.选中, 假)
    .如果结束
    赋值 (.禁止, 假)
    调试输出 (取表项数 ())
.如果真结束


.子程序 _搜索文件按钮_被单击, 空白型, , 
.局部变量 类型, 文本型, , "1", 

连续赋值 (真, .禁止, .禁止, .禁止, .禁止)
赋值 (.禁止, 假)
全部删除 ()
搜索文件 (.内容, “*.*”)
信息框 (相加 (“搜索完毕！共找到：”, 到文本 (取表项数 ()), “个文件.”), #信息图标, “搜索文件”)
连续赋值 (假, .禁止, .禁止, .禁止, .禁止)
赋值 (.禁止, 真)

.子程序 _生成索引按钮_被单击, 空白型, , 
.如果真 (等于 (.选中, 真))
    .如果真 (不等于 (信息框 (“已有索引文件，是否覆盖？”, #询问图标, “操作确认”), #确认钮))
        返回 ()
    .如果真结束
    
.如果真结束
未知支持库函数_0 (&生成索引, , )

.子程序 生成索引, 空白型, , 
.局部变量 路径, 文本型, , , 
.局部变量 总大小, 长整数型, , , 
.局部变量 文件名, 文本型, , , 
.局部变量 大小, 文本型, , , 

赋值 (.加粗, 80)
赋值 (.删除线, 相减 (.删除线, 25))
连续赋值 (真, .禁止, .禁止, .禁止, .禁止)
赋值 (路径, 相加 (文件配置路径, .取项目文本 (.现行选中项), “.dep”))
赋值 (生成总数, 取表项数 ())
赋值 (.时钟周期, 500)
赋值 (.宽度, 0)
.计次循环首 (生成总数, 当前生成位置)
    赋值 (文件名, 相减 (当前生成位置, 1).取标题 (0))
    赋值 (大小, 相减 (当前生成位置, 1).取标题 (1))
    .如果真 (等于 (.现行选中项, 0))
        复制文件 (相加 (取运行目录 (), “\”, 文件名), 相加 (取运行目录 (), “\updata\”, 文件名))
        写配置项 (路径, 文件名, “MD5”, 相减 (当前生成位置, 1).取标题 (2))
    .如果真结束
    写配置项 (路径, 文件名, “long”, 大小)
    赋值 (总大小, 相加 (总大小, 到长整数 (大小)))
    写配置项 (路径, 文件名, “cles”, “0”)
.计次循环尾 ()
写 (#大小, 总大小)
信息框 (“生成索引完成！”, #信息图标, “生成索引”)
赋值 (.时钟周期, 0)
初始化游戏到游戏列表 ()
全部删除 ()
赋值 (.内容, “”)
连续赋值 (假, .禁止, .禁止, .禁止)
.如果 (等于 (.现行选中项, 0))
    赋值 (.禁止, 真)
.否则
    赋值 (.禁止, 假)
.如果结束
赋值 (.删除线, 相加 (.删除线, 25))
赋值 (.加粗, 55)

.子程序 _停止搜索按钮_被单击, 空白型, , 
赋值 (是否停止搜索, 真)
赋值 (.禁止, 假)
赋值 (.禁止, 真)


.子程序 _文件列表框_右键单击表项, 空白型, , 
弹出菜单 ()

.子程序 _未分组客户机列表框_右键单击表项, 空白型, , 
.如果真 (不等于 (., -1))
    赋值 (.可视, 真)
    赋值 (.可视, 假)
    .如果 (等于 (.取标题 (., 2), “离线”))
        赋值 (.可视, 假)
        赋值 (.可视, 假)
        赋值 (.可视, 假)
        赋值 (.可视, 假)
    .否则
        赋值 (.可视, 真)
        赋值 (.可视, 真)
        赋值 (.可视, 真)
        赋值 (.可视, 真)
        
    .如果结束
    弹出菜单 ()
.如果真结束



.子程序 _已分组客户机列表框_右键单击表项, 空白型, , 
.如果真 (不等于 (., -1))
    赋值 (.可视, 假)
    赋值 (.可视, 真)
    .如果 (等于 (.取标题 (., 2), “离线”))
        赋值 (.可视, 假)
        赋值 (.可视, 假)
        赋值 (.可视, 假)
        赋值 (.可视, 假)
    .否则
        赋值 (.可视, 真)
        赋值 (.可视, 真)
        赋值 (.可视, 真)
        赋值 (.可视, 真)
    .如果结束
    
    弹出菜单 ()
.如果真结束



.子程序 搜索文件, 空白型, , 
.参数 目录, 文本型, , 
.参数 后缀, 文本型, , 

.局部变量 文件名, 文本型, , , 
.局部变量 表项索引, 整数型, , , 
.局部变量 长度, 整数型, , , 

处理事件 ()
.如果 (等于 (是否停止搜索, 假))
    .如果真 (不等于 (取文本右边 (目录, 1), “\”))
        赋值 (目录, 相加 (目录, “\”))
    .如果真结束
    赋值 (文件名, 寻找文件 (相加 (目录, 后缀), ))
    .判断循环首 (不等于 (文件名, “”))
        赋值 (表项索引, .插入表项 ())
        表项索引.置标题 (0, 取文本右边 (相加 (目录, 文件名), 相减 (取文本长度 (相加 (目录, 文件名)), 目录长度)))
        赋值 (长度, 取文件尺寸 (相加 (目录, 文件名)))
        .如果 (大于或等于 (长度, 0))
            表项索引.置标题 (1, 到文本 (长度))
        .否则
            表项索引.置标题 (1, 到文本 (尺寸转换 (长度)))
        .如果结束
        赋值 (文件名, 寻找文件 ())
    .判断循环尾 ()
    赋值 (文件名, 寻找文件 (相加 (目录, “*.*”), #子目录))
    .判断循环首 (不等于 (文件名, “”))
        .如果真 (不等于 (取文本左边 (文件名, 1), “.”))
            搜索文件 (相加 (目录, 文件名), 后缀)
        .如果真结束
        赋值 (文件名, 寻找文件 (#子目录))
    .判断循环尾 ()
    
.否则
    
.如果结束


.子程序 _进度时钟_周期事件, 空白型, , 
赋值 (.宽度, 到整数 (相乘 (相除 (当前生成位置, 生成总数), 100, 7.85)))


.子程序 _超时删除账户选择框_被单击, 空白型, , 
.如果 (等于 (.选中, 真))
    .如果 (并且 (等于 (.内容, “”), 小于或等于 (到整数 (.内容), 0)))
        信息框 (“超时时长不能为空且必须大于0”, #错误图标, “操作反馈”)
        赋值 (.选中, 假)
        返回 ()
    .否则
        写配置项 (全局配置路径, “system”, “超时时长”, .内容)
    .如果结束
    
.否则
    写配置项 (全局配置路径, “system”, “超时时长”, “”)
.如果结束
写配置项 (系统配置路径, “Tvd”, “超时删除”, 到文本 (.选中))
写配置项 (系统配置路径, “Tvd”, “超时时长”, .内容)

.子程序 _修改虚拟U盘参数按钮_被单击, 空白型, , 
.如果真 (等于 (.内容, “”))
    信息框 (“容量不能为空”, #错误图标, “操作反馈”)
    返回 ()
.如果真结束
.如果真 (小于或等于 (到整数 (.内容), 0))
    信息框 (“容量不能小于1”, #错误图标, “操作反馈”)
    返回 ()
.如果真结束
.如果真 (等于 (.现行选中项, -1))
    信息框 (“请选择盘符”, #错误图标, “操作反馈”)
    返回 ()
.如果真结束
.如果真 (等于 (写配置项 (系统配置路径, “Tvd”, “Capacity”, .内容), 真))
    .如果真 (等于 (写配置项 (系统配置路径, “Tvd”, “Drive”, .取项目文本 (.现行选中项)), 真))
        写配置项 (全局配置路径, “system”, “容量”, .内容)
        写配置项 (全局配置路径, “system”, “盘符”, .取项目文本 (.现行选中项))
        操作反馈 (3)
        返回 ()
        
    .如果真结束
    
.如果真结束
操作反馈 (2)


.子程序 _开启虚拟盘选择框_被单击, 空白型, , 
写配置项 (全局配置路径, “system”, “开启虚拟盘”, 到文本 (.选中))

.子程序 _虚拟U盘表格_鼠标右键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (大于 (未知支持库函数_3 (), 0))
    弹出菜单 ()
.如果真结束


.子程序 _修改密码_被选择, 空白型, , 
.局部变量 待操作的账户, 文本型, , , 
.局部变量 输入的内容, 文本型, , , 
.局部变量 临时整数变量, 整数型, , , 

.如果真 (大于 (未知支持库函数_3 (), 0))
    赋值 (待操作的账户, 未知支持库函数_3 ().未知支持库函数_10 (0))
    输入框 (相加 (“修改账户名：”, 待操作的账户), “修改密码”, , 输入的内容, #输入密码)
    .如果真 (或者 (等于 (输入的内容, “”), 大于 (取文本长度 (输入的内容), 20)))
        信息框 (“参数错误！修改失败！”, #错误图标, “修改密码反馈”)
        返回 ()
    .如果真结束
    置当前库 (#账户数据库)
    到首记录 ()
    .计次循环首 (取记录数 (), 临时整数变量)
        .如果真 (等于 (读 (#账户名), 待操作的账户))
            .如果 (等于 (写 (#密码, 输入的内容), 真))
                信息框 (“修改成功！”, #错误图标, “修改密码反馈”)
            .否则
                信息框 (“修改失败，写数据错误！”, #错误图标, “修改密码反馈”)
            .如果结束
            返回 ()
        .如果真结束
        
    .计次循环尾 ()
    信息框 (“未知错误！修改失败！”, #错误图标, “修改密码反馈”)
.如果真结束


.子程序 _删除账户_被选择, 空白型, , 
.局部变量 待操作的账户, 文本型, , , 
.局部变量 临时整数变量, 整数型, , , 

.如果真 (大于 (未知支持库函数_3 (), 0))
    赋值 (待操作的账户, 未知支持库函数_3 ().未知支持库函数_10 (0))
    置当前库 (#账户数据库)
    到首记录 ()
    .计次循环首 (取记录数 (), 临时整数变量)
        .如果真 (等于 (读 (#账户名), 待操作的账户))
            .如果 (等于 (删除 (), 真))
                .如果 (等于 (彻底删除 (), 真))
                    信息框 (“删除成功！”, #错误图标, “删除账户反馈”)
                    初始化虚拟U盘信息 ()
                .否则
                    信息框 (“删除失败，错误代码 2”, #错误图标, “删除账户反馈”)
                .如果结束
                
            .否则
                信息框 (“删除失败，错误代码 1”, #错误图标, “删除账户反馈”)
            .如果结束
            返回 ()
        .如果真结束
        
    .计次循环尾 ()
    信息框 (“未知错误！删除失败！”, #错误图标, “删除账户反馈”)
.如果真结束


.子程序 _虚拟U盘表格_光标位置改变, 空白型, , 
.局部变量 索引, 整数型, , , 

赋值 (索引, 未知支持库函数_3 ())
.如果真 (大于 (索引, 0))
    .如果真 (等于 (索引, 1))
        索引.未知支持库函数_24 (0, 索引, 3, #粉红)
        返回 ()
    .如果真结束
    相减 (索引, 1).未知支持库函数_24 (0, 相减 (索引, 1), 3, #白色)
    索引.未知支持库函数_24 (0, 索引, 3, #粉红)
    
.如果真结束


.窗口程序集 系统设置程序集, , , 

.子程序 _系统设置窗口_创建完毕, 空白型, , 


.窗口程序集 服务设置程序集, , , 

.子程序 _服务设置窗口_创建完毕, 空白型, , 
赋值 (.内容, 读配置项 (系统配置路径, “game”, “zx”, ))
赋值 (.内容, 读配置项 (系统配置路径, “game”, “zd”, ))
赋值 (.内容, 读配置项 (系统配置路径, “game”, “dk”, ))
赋值 (.内容, 读配置项 (系统配置路径, “file”, “zx”, ))
赋值 (.内容, 读配置项 (系统配置路径, “file”, “zd”, ))
赋值 (.内容, 读配置项 (系统配置路径, “file”, “dk”, ))
赋值 (.内容, 读配置项 (系统配置路径, “Capacity”, “zx”, ))
赋值 (.内容, 读配置项 (系统配置路径, “Capacity”, “zd”, ))
赋值 (.内容, 读配置项 (系统配置路径, “Capacity”, “dk”, ))
' 本源码来自易语言资源网(www.5A5X.com)

.子程序 _确认修改按钮_被单击, 空白型, , 
.如果真 (等于 (.内容, “”))
    操作反馈 (1)
    获取焦点 ()
    返回 ()
.如果真结束
.如果真 (等于 (.内容, “”))
    操作反馈 (1)
    获取焦点 ()
    返回 ()
.如果真结束
.如果真 (等于 (.内容, “”))
    操作反馈 (1)
    获取焦点 ()
    返回 ()
.如果真结束
.如果真 (等于 (.内容, “”))
    操作反馈 (1)
    获取焦点 ()
    返回 ()
.如果真结束
.如果真 (等于 (.内容, “”))
    操作反馈 (1)
    获取焦点 ()
    返回 ()
.如果真结束
.如果真 (等于 (.内容, “”))
    操作反馈 (1)
    获取焦点 ()
    返回 ()
.如果真结束
.如果真 (等于 (.内容, “”))
    操作反馈 (1)
    获取焦点 ()
.如果真结束
.如果真 (等于 (.内容, “”))
    操作反馈 (1)
    获取焦点 ()
.如果真结束
.如果真 (等于 (.内容, “”))
    操作反馈 (1)
    获取焦点 ()
.如果真结束
.如果真 (或者 (等于 (.内容, “0”), 等于 (.内容, “0”), 等于 (.内容, “0”), 等于 (.内容, “0”), 等于 (.内容, “0”), 等于 (.内容, “0”)))
    信息框 (“值必须大于0”, #错误图标, )
    返回 ()
.如果真结束
.如果真 (或者 (大于 (到整数 (.内容), 到整数 (.内容)), 大于 (到整数 (.内容), 到整数 (.内容)), 大于 (到整数 (.内容), 到整数 (.内容))))
    信息框 (“最大线程必须大于最小线程”, #错误图标, )
    返回 ()
.如果真结束
.如果真 (或者 (大于 (到整数 (.内容), 65535), 大于 (到整数 (.内容), 65535), 大于 (到整数 (.内容), 65535)))
    信息框 (“端口号必须小于或等于65535”, #错误图标, )
    返回 ()
.如果真结束

写配置项 (系统配置路径, “game”, “zx”, .内容)
写配置项 (系统配置路径, “game”, “zd”, .内容)
写配置项 (系统配置路径, “game”, “dk”, .内容)
写配置项 (系统配置路径, “file”, “zx”, .内容)
写配置项 (系统配置路径, “file”, “zd”, .内容)
写配置项 (系统配置路径, “file”, “dk”, .内容)
写配置项 (系统配置路径, “Capacity”, “zx”, .内容)
写配置项 (系统配置路径, “Capacity”, “zd”, .内容)
写配置项 (系统配置路径, “Capacity”, “dk”, .内容)
操作反馈 (3)

.子程序 _取消修改按钮_被单击, 空白型, , 


.类模块 位图操作, , , 

.程序集变量 颜色表_1位深, 字节集, , , 
.程序集变量 颜色表_4位深, 字节集, , , 
.程序集变量 颜色表_8位深, 字节集, , , 
.程序集变量 m_pDIB, 字节集, , , 
.子程序 _初始化, 空白型, , 
初始化颜色表 ()

.子程序 _销毁, 空白型, , 


.子程序 初始化颜色表, 空白型, , 
赋值 (颜色表_1位深, {  })
赋值 (颜色表_1位深, 相加 (颜色表_1位深, { 0, 0, 0, 0 }))
赋值 (颜色表_1位深, 相加 (颜色表_1位深, { 255, 255, 255, 0 }))
赋值 (颜色表_4位深, {  })
赋值 (颜色表_4位深, 相加 (颜色表_4位深, { 0, 0, 0, 0 }))
赋值 (颜色表_4位深, 相加 (颜色表_4位深, { 0, 0, 128, 0 }))
赋值 (颜色表_4位深, 相加 (颜色表_4位深, { 0, 128, 0, 0 }))
赋值 (颜色表_4位深, 相加 (颜色表_4位深, { 0, 128, 128, 0 }))
赋值 (颜色表_4位深, 相加 (颜色表_4位深, { 128, 0, 0, 0 }))
赋值 (颜色表_4位深, 相加 (颜色表_4位深, { 128, 0, 128, 0 }))
赋值 (颜色表_4位深, 相加 (颜色表_4位深, { 128, 128, 0, 0 }))
赋值 (颜色表_4位深, 相加 (颜色表_4位深, { 128, 128, 128, 0 }))
赋值 (颜色表_4位深, 相加 (颜色表_4位深, { 192, 192, 192, 0 }))
赋值 (颜色表_4位深, 相加 (颜色表_4位深, { 0, 0, 255, 0 }))
赋值 (颜色表_4位深, 相加 (颜色表_4位深, { 0, 255, 0, 0 }))
赋值 (颜色表_4位深, 相加 (颜色表_4位深, { 0, 255, 255, 0 }))
赋值 (颜色表_4位深, 相加 (颜色表_4位深, { 255, 0, 0, 0 }))
赋值 (颜色表_4位深, 相加 (颜色表_4位深, { 255, 0, 255, 0 }))
赋值 (颜色表_4位深, 相加 (颜色表_4位深, { 255, 255, 0, 0 }))
赋值 (颜色表_4位深, 相加 (颜色表_4位深, { 255, 255, 255, 0 }))
赋值 (颜色表_8位深, {  })
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 0, 0, 0, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 0, 0, 128, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 0, 128, 0, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 0, 128, 128, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 128, 0, 0, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 128, 0, 128, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 128, 128, 0, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 192, 192, 192, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 192, 220, 192, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 240, 202, 166, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 0, 32, 64, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 0, 32, 96, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 0, 32, 128, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 0, 32, 160, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 0, 32, 192, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 0, 32, 224, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 0, 64, 0, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 0, 64, 32, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 0, 64, 64, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 0, 64, 96, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 0, 64, 128, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 0, 64, 160, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 0, 64, 192, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 0, 64, 224, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 0, 96, 0, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 0, 96, 32, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 0, 96, 64, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 0, 96, 96, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 0, 96, 128, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 0, 96, 160, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 0, 96, 192, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 0, 96, 224, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 0, 128, 0, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 0, 128, 32, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 0, 128, 64, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 0, 128, 96, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 0, 128, 128, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 0, 128, 160, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 0, 128, 192, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 0, 128, 224, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 0, 160, 0, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 0, 160, 32, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 0, 160, 64, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 0, 160, 96, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 0, 160, 128, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 0, 160, 160, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 0, 160, 192, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 0, 160, 224, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 0, 192, 0, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 0, 192, 32, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 0, 192, 64, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 0, 192, 96, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 0, 192, 128, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 0, 192, 160, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 0, 192, 192, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 0, 192, 224, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 0, 224, 0, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 0, 224, 32, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 0, 224, 64, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 0, 224, 96, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 0, 224, 128, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 0, 224, 160, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 0, 224, 192, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 0, 224, 224, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 64, 0, 0, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 64, 0, 32, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 64, 0, 64, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 64, 0, 96, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 64, 0, 128, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 64, 0, 160, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 64, 0, 192, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 64, 0, 224, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 64, 32, 0, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 64, 32, 32, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 64, 32, 64, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 64, 32, 96, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 64, 32, 128, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 64, 32, 160, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 64, 32, 192, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 64, 32, 224, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 64, 64, 0, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 64, 64, 32, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 64, 64, 64, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 64, 64, 96, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 64, 64, 128, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 64, 64, 160, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 64, 64, 192, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 64, 64, 224, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 64, 96, 0, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 64, 96, 32, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 64, 96, 64, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 64, 96, 96, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 64, 96, 128, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 64, 96, 160, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 64, 96, 192, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 64, 96, 224, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 64, 128, 0, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 64, 128, 32, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 64, 128, 64, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 64, 128, 96, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 64, 128, 128, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 64, 128, 160, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 64, 128, 192, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 64, 128, 224, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 64, 160, 0, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 64, 160, 32, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 64, 160, 64, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 64, 160, 96, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 64, 160, 128, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 64, 160, 160, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 64, 160, 192, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 64, 160, 224, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 64, 192, 0, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 64, 192, 32, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 64, 192, 64, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 64, 192, 96, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 64, 192, 128, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 64, 192, 160, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 64, 192, 192, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 64, 192, 224, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 64, 224, 0, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 64, 224, 32, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 64, 224, 64, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 64, 224, 96, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 64, 224, 128, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 64, 224, 160, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 64, 224, 192, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 64, 224, 224, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 128, 0, 0, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 128, 0, 32, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 128, 0, 64, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 128, 0, 96, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 128, 0, 128, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 128, 0, 160, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 128, 0, 192, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 128, 0, 224, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 128, 32, 0, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 128, 32, 32, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 128, 32, 64, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 128, 32, 96, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 128, 32, 128, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 128, 32, 160, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 128, 32, 192, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 128, 32, 224, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 128, 64, 0, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 128, 64, 32, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 128, 64, 64, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 128, 64, 96, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 128, 64, 128, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 128, 64, 160, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 128, 64, 192, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 128, 64, 224, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 128, 96, 0, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 128, 96, 32, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 128, 96, 64, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 128, 96, 96, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 128, 96, 128, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 128, 96, 160, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 128, 96, 192, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 128, 96, 224, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 128, 128, 0, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 128, 128, 32, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 128, 128, 64, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 128, 128, 96, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 128, 128, 128, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 128, 128, 160, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 128, 128, 192, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 128, 128, 224, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 128, 160, 0, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 128, 160, 32, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 128, 160, 64, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 128, 160, 96, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 128, 160, 128, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 128, 160, 160, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 128, 160, 192, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 128, 160, 224, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 128, 192, 0, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 128, 192, 32, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 128, 192, 64, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 128, 192, 96, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 128, 192, 128, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 128, 192, 160, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 128, 192, 192, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 128, 192, 224, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 128, 224, 0, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 128, 224, 32, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 128, 224, 64, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 128, 224, 96, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 128, 224, 128, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 128, 224, 160, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 128, 224, 192, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 128, 224, 224, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 192, 0, 0, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 192, 0, 32, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 192, 0, 64, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 192, 0, 96, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 192, 0, 128, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 192, 0, 160, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 192, 0, 192, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 192, 0, 224, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 192, 32, 0, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 192, 32, 32, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 192, 32, 64, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 192, 32, 96, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 192, 32, 128, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 192, 32, 160, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 192, 32, 192, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 192, 32, 224, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 192, 64, 0, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 192, 64, 32, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 192, 64, 64, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 192, 64, 96, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 192, 64, 128, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 192, 64, 160, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 192, 64, 192, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 192, 64, 224, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 192, 96, 0, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 192, 96, 32, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 192, 96, 64, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 192, 96, 96, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 192, 96, 128, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 192, 96, 160, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 192, 96, 192, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 192, 96, 224, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 192, 128, 0, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 192, 128, 32, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 192, 128, 64, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 192, 128, 96, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 192, 128, 128, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 192, 128, 160, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 192, 128, 192, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 192, 128, 224, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 192, 160, 0, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 192, 160, 32, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 192, 160, 64, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 192, 160, 96, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 192, 160, 128, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 192, 160, 160, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 192, 160, 192, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 192, 160, 224, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 192, 192, 0, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 192, 192, 32, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 192, 192, 64, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 192, 192, 96, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 192, 192, 128, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 192, 192, 160, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 240, 251, 255, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 164, 160, 160, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 128, 128, 128, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 0, 0, 255, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 0, 255, 0, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 0, 255, 255, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 255, 0, 0, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 255, 0, 255, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 255, 255, 0, 0 }))
赋值 (颜色表_8位深, 相加 (颜色表_8位深, { 255, 255, 255, 0 }))


.子程序 CaptureDC, 逻辑型, , 
.参数 hSrcDC, 整数型, , DC
.参数 SrcRect, RECT, , 区域
.参数 nBitCount, 整数型, , 位深1、4、8、16、24、32

.局部变量 nSrcWidth, 整数型, , , 
.局部变量 nSrcHeithe, 整数型, , , 
.局部变量 hMemDC, 整数型, , , 
.局部变量 hDibSect, 整数型, , , 
.局部变量 hOldBitmap, 整数型, , , 
.局部变量 pSrcBits, 整数型, , , 
.局部变量 R, 整数型, , , 

 ' 判断位深是否符合要求
.如果真 (或者 (等于 (hSrcDC, 0), 并且 (不等于 (nBitCount, 1), 不等于 (nBitCount, 4), 不等于 (nBitCount, 8), 不等于 (nBitCount, 16), 不等于 (nBitCount, 24), 不等于 (nBitCount, 32))))
    返回 (假)
.如果真结束
赋值 (nSrcWidth, 相减 (SrcRect.Right, SrcRect.Left)) ' 算出位图宽度
赋值 (nSrcHeithe, 相减 (SrcRect.Bottom, SrcRect.Top)) ' 算出位图高度
 ' 确保该dib的大小,颜色位数符合要求
.如果真 (或者 (等于 (m_pDIB, {  }), 不等于 (GetBitCount (), nBitCount), 不等于 (GetWidth (), nSrcWidth), 不等于 (GetHeight (), nSrcHeithe)))
    赋值 (m_pDIB, {  })
    Create (nSrcWidth, nSrcHeithe, nBitCount, )
.如果真结束
 ' 创建DibSection并选进以MemDC
赋值 (hMemDC, CreateCompatibleDC (hSrcDC))
赋值 (pSrcBits, 0)
赋值 (hDibSect, CreateDIBSection (hSrcDC, m_pDIB, 0, pSrcBits, 0, 0))
赋值 (hOldBitmap, SelectObject (hMemDC, hDibSect))
 ' 复制源dc内容到MemDC即到DibSection
BitBlt (hMemDC, 0, 0, nSrcWidth, nSrcHeithe, hSrcDC, SrcRect.Left, SrcRect.Top, 13369376)
GdiFlush ()
 ' 复制位图点阵数据到本DIB对象
memcpy (GetBitsAddress (), pSrcBits, GetBitsSize ())
 ' 删除相关句柄
赋值 (R, DeleteObjectA (SelectObject (hMemDC, hOldBitmap)))
赋值 (R, DeleteObjectA (hOldBitmap))
DeleteDC (hMemDC)
返回 (真)

.子程序 GetBitsAddress, 整数型, , 
.如果真 (等于 (m_pDIB, {  }))
    输出调试文本 (“颜色点阵地址失败”)
.如果真结束
返回 (相加 (lstrcpyn (m_pDIB, m_pDIB, 0), 40, GetColorTableSize ()))

.子程序 GetBitsSize, 整数型, , 
.局部变量 r, 空白型, , , 

.如果真 (等于 (m_pDIB, {  }))
    输出调试文本 (“取颜色点阵大小失败”)
.如果真结束
赋值 (r, BytesPerLine ())
返回 (相乘 (GetHeight (), BytesPerLine ()))
' 本源码来自易语言资源网(www.5A5X.com)

.子程序 BytesPerLine, 整数型, , 
.如果真 (等于 (m_pDIB, {  }))
    输出调试文本 (“BytesPerLine失败”)
.如果真结束
返回 (WIDTHBYTES (相乘 (取字节集数据 (取字节集中间 (m_pDIB, 5, 4), #整数型, ), 取字节集数据 (取字节集中间 (m_pDIB, 13, 2), #整数型, ), 取字节集数据 (取字节集中间 (m_pDIB, 15, 2), #整数型, ))))

.子程序 Create, 逻辑型, , 
.参数 iWidth, 整数型, , 宽度
.参数 iHeight, 整数型, , 高度
.参数 nBitCount, 整数型, , 位深
.参数 clrBk, 长整数型, 可空, 默认填充的颜色,4294967295

.局部变量 iColors, 整数型, , , 
.局部变量 iSize, 整数型, , , 
.局部变量 pBI, BITMAPINFOHEADER, , , 

.如果真 (等于 (是否为空 (clrBk), 真))
    赋值 (clrBk, 4294967295)
.如果真结束
.如果 (等于 (nBitCount, 1))
    赋值 (iColors, 2)
.否则
    .如果 (等于 (nBitCount, 4))
        赋值 (iColors, 16)
    .否则
        .如果 (等于 (nBitCount, 8))
            赋值 (iColors, 256)
        .否则
            .如果 (或者 (等于 (nBitCount, 16), 等于 (nBitCount, 24), 等于 (nBitCount, 32)))
                赋值 (iColors, 0)
            .否则
                输出调试文本 (“Bmp提供的位深有错误”)
                返回 (假)
            .如果结束
            
        .如果结束
        
    .如果结束
    
.如果结束
赋值 (iSize, 相加 (相乘 (iColors, 4), 相乘 (WIDTHBYTES (相乘 (iWidth, nBitCount)), iHeight)))
赋值 (m_pDIB, 取空白字节集 (iSize)) ' 分配空间
 ' 填写BMP文件头
赋值 (pBI.biSize, 40)
赋值 (pBI.biWidth, iWidth)
赋值 (pBI.biHeight, iHeight)
赋值 (pBI.biPlanes, 1)
赋值 (pBI.biBitCount, nBitCount)
赋值 (pBI.biCompression, 0)
赋值 (pBI.biSizeImage, 0)
赋值 (pBI.biXPelsPerMeter, 0)
赋值 (pBI.biYPelsPerMeter, 0)
赋值 (pBI.biClrUsed, 0)
赋值 (pBI.biClrImportant, 0)
赋值 (m_pDIB, 相加 (BMP信息头转字节集 (pBI), m_pDIB))
 ' 初始化颜色表
.判断开始 (等于 (nBitCount, 1))
    memcpy (GetColorTableAddress (), lstrcpyn (颜色表_1位深, 颜色表_1位深, 0), GetColorTableSize ())
.判断 (等于 (nBitCount, 4))
    memcpy (GetColorTableAddress (), lstrcpyn (颜色表_4位深, 颜色表_4位深, 0), GetColorTableSize ())
.默认
    .如果真 (等于 (nBitCount, 8))
        memcpy (GetColorTableAddress (), lstrcpyn (颜色表_8位深, 颜色表_8位深, 0), GetColorTableSize ())
    .如果真结束
    
.判断结束
.如果真 (不等于 (clrBk, 4294967295))
    输出调试文本 (“自定义背景色”)
.如果真结束
返回 (真)

.子程序 SetPixelColor, 空白型, , 
.参数 x, 整数型, , 
.参数 y, 整数型, , 
.参数 clrNew, 整数型, , 



.子程序 GetBitmapInfoAddress, 整数型, , 
返回 (lstrcpyn (m_pDIB, m_pDIB, 0))

.子程序 GetWidth, 整数型, , 
.如果真 (等于 (m_pDIB, {  }))
    输出调试文本 (“取宽时出错”)
.如果真结束
返回 (到整数 (取字节集中间 (m_pDIB, 5, 4)))

.子程序 GetHeight, 整数型, , 
.如果真 (等于 (m_pDIB, {  }))
    输出调试文本 (“取高时出错”)
.如果真结束
返回 (取字节集数据 (取字节集中间 (m_pDIB, 9, 4), #整数型, ))


.子程序 WIDTHBYTES, 整数型, , 
.参数 bits, 整数型, , 

赋值 (bits, 相加 (bits, 31))
返回 (左移 (右移 (bits, 5), 2))

.子程序 GetColorTableAddress, 整数型, , 
.如果真 (等于 (m_pDIB, {  }))
    输出调试文本 (“取颜色表地址时出错”)
.如果真结束
.如果真 (大于或等于 (GetBitCount (), 16)) ' 大于256色的位图不使用颜色表
    CNoColorTable ()
    返回 (0)
.如果真结束
返回 (相加 (lstrcpyn (m_pDIB, m_pDIB, 0), 40))

.子程序 GetBitCount, 整数型, , 
.如果真 (等于 (m_pDIB, {  }))
    输出调试文本 (“取位图颜色位数出错”)
.如果真结束
返回 (到整数 (到短整数 (取字节集中间 (m_pDIB, 15, 2))))

.子程序 BMP文件头转字节集, 字节集, , 
.参数 欲转成字节集的信息, BITMAPFILEHEADER, , 

.局部变量 返回值, 字节集, , , 

赋值 (返回值, 到字节集 (欲转成字节集的信息.bfType))
赋值 (返回值, 相加 (返回值, 到字节集 (欲转成字节集的信息.bfSize)))
赋值 (返回值, 相加 (返回值, 到字节集 (欲转成字节集的信息.bfReserved1)))
赋值 (返回值, 相加 (返回值, 到字节集 (欲转成字节集的信息.bfReserved2)))
赋值 (返回值, 相加 (返回值, 到字节集 (欲转成字节集的信息.bfOffBits)))
返回 (返回值)

.子程序 BMP信息头转字节集, 字节集, , 
.参数 欲转成字节集的信息, BITMAPINFOHEADER, , 

.局部变量 返回值, 字节集, , , 

赋值 (返回值, 到字节集 (欲转成字节集的信息.biSize))
赋值 (返回值, 相加 (返回值, 到字节集 (欲转成字节集的信息.biWidth)))
赋值 (返回值, 相加 (返回值, 到字节集 (欲转成字节集的信息.biHeight)))
赋值 (返回值, 相加 (返回值, 到字节集 (欲转成字节集的信息.biPlanes)))
赋值 (返回值, 相加 (返回值, 到字节集 (欲转成字节集的信息.biBitCount)))
赋值 (返回值, 相加 (返回值, 到字节集 (欲转成字节集的信息.biCompression)))
赋值 (返回值, 相加 (返回值, 到字节集 (欲转成字节集的信息.biSizeImage)))
赋值 (返回值, 相加 (返回值, 到字节集 (欲转成字节集的信息.biXPelsPerMeter)))
赋值 (返回值, 相加 (返回值, 到字节集 (欲转成字节集的信息.biYPelsPerMeter)))
赋值 (返回值, 相加 (返回值, 到字节集 (欲转成字节集的信息.biClrUsed)))
赋值 (返回值, 相加 (返回值, 到字节集 (欲转成字节集的信息.biClrImportant)))
返回 (返回值)

.子程序 CNoColorTable, 空白型, , 
输出调试文本 (“当前位图格式不使用颜色表”)

.子程序 GetColorTableSize, 整数型, , 
.如果真 (等于 (m_pDIB, {  }))
    输出调试文本 (“取位图颜色位数出错”)
.如果真结束
返回 (相乘 (NumDIBColorEntries (取字节集左边 (m_pDIB, 40)), 4))

.子程序 NumDIBColorEntries, 整数型, , 
.参数 pBmpInfo, 字节集, , 

.局部变量 iBitCount, 短整数型, , , 

赋值 (iBitCount, 取字节集数据 (取字节集中间 (pBmpInfo, 15, 2), #短整数型, ))
.判断开始 (等于 (iBitCount, 1))
    返回 (2)
.判断 (等于 (iBitCount, 4))
    返回 (16)
.判断 (等于 (iBitCount, 8))
    返回 (256)
.默认
    .如果真 (或者 (等于 (iBitCount, 16), 等于 (iBitCount, 24), 等于 (iBitCount, 32)))
        返回 (0)
    .如果真结束
    
.判断结束
返回 (-1)

.子程序 Write, 字节集, , 
返回 (相加 (到字节集 (到短整数 (19778)), 到字节集 (到整数 (相加 (取字节集长度 (m_pDIB), 54))), { 0, 0 }, { 0, 0 }, 到字节集 (到整数 (相加 (54, GetColorTableSize ()))), m_pDIB))


.程序集 扩展程序集, , , 

.子程序 尺寸转换, 长整数型, , 长度64位
.参数 Size, 整数型, , 长度32位

.局部变量 返回的文件尺寸, 长整数型, , , 长度64位

 ' 此方法文件的实际尺寸不能超过4294967295（大约 3.99G）
赋值 (返回的文件尺寸, 取字节集数据 (到字节集 (Size), #长整数型, ))
返回 (返回的文件尺寸)

.子程序 取文件图标, 字节集, , 
.参数 路径, 文本型, , 

.局部变量 临时图标, 字节集, , , 
.局部变量 sInfo, SHFILEINFO, , , 
.局部变量 图标句柄, 整数型, , , 

SHGetFileInfo (路径, 128, sInfo, 348, 256)
赋值 (图标句柄, sInfo.hIcon)
赋值 (临时图标, 通过句柄取图标 (图标句柄, 32, 32))
返回 (临时图标)

.子程序 通过句柄取图标, 字节集, , 
.参数 图标句柄, 整数型, , 
.参数 图标宽度, 整数型, 可空, 
.参数 图标高度, 整数型, 可空, 
.参数 背景颜色, 整数型, 可空, 

.局部变量 sRect, RECT, , , 
.局部变量 sIco, 字节集, , , 
.局部变量 位图操作, 位图操作, , , 
.局部变量 SrchDC, 整数型, , , 
.局部变量 newDC, 整数型, , , 
.局部变量 hwnd, 整数型, , , 
.局部变量 hBmp, 整数型, , , 
.局部变量 hBmpPrev, 整数型, , , 
.局部变量 mBrush, 整数型, , , 

.如果真 (是否为空 (图标宽度))
    赋值 (图标宽度, 32)
.如果真结束
.如果真 (是否为空 (图标高度))
    赋值 (图标高度, 32)
.如果真结束
.如果真 (是否为空 (背景颜色))
    赋值 (背景颜色, #白色)
.如果真结束
赋值 (sRect.Top, 0)
赋值 (sRect.Left, 0)
赋值 (sRect.Right, 图标宽度)
赋值 (sRect.Bottom, 图标高度)
赋值 (SrchDC, GetDC (主窗口.取窗口句柄 ()))
赋值 (newDC, CreateCompatibleDC (SrchDC))
赋值 (hBmp, CreateCompatibleBitmap (SrchDC, 32, 32))
赋值 (hBmpPrev, SelectObject (newDC, hBmp))
赋值 (mBrush, CreateSolidBrush (背景颜色))
FillRect (newDC, sRect, mBrush)
DrawIconEx (newDC, 0, 0, 图标句柄, 图标宽度, 图标高度, 0, 0, 3)
位图操作.CaptureDC (newDC, sRect, 32)
赋值 (sIco, 位图操作.Write ())
ReleaseDC (hwnd, SrchDC)
DeleteDC (newDC)
DeleteObjectA (hBmpPrev)
DeleteObjectA (hBmp)
DeleteObjectA (mBrush)
返回 (sIco)

.子程序 操作反馈, 空白型, , 
.参数 索引, 整数型, , 

.判断开始 (等于 (索引, 1))
    信息框 (“内容不能为空！”, #错误图标, “操作反馈”)
.判断 (等于 (索引, 2))
    信息框 (“操作失败！”, #错误图标, “操作反馈”)
.判断 (等于 (索引, 3))
    信息框 (“操作成功！”, #信息图标, “操作反馈”)
.默认
    ' 本源码来自易语言资源网(www.5A5X.com)
.判断结束


.子程序 创建多级目录, 逻辑型, , 
.参数 完整路径名, 文本型, , 

.局部变量 上级目录, 文本型, , , 
.局部变量 临时文本变量, 文本型, , , 
.局部变量 临时文本数组, 文本型, , "0", 
.局部变量 临时整数变量, 整数型, , , 

.如果真 (不等于 (检测目录 (完整路径名), 0))
    返回 (真)
.如果真结束
赋值 (上级目录, 取文本左边 (完整路径名, 3))
.如果真 (等于 (寻找文本 (上级目录, “:\”, , 假), 1))
    返回 (假)
.如果真结束
赋值 (临时文本变量, 取文本右边 (完整路径名, 相减 (取文本长度 (完整路径名), 3)))
赋值 (临时文本数组, 分割文本 (临时文本变量, “\”, ))
.如果 (大于 (取数组成员数 (临时文本数组), 0))
    .计次循环首 (取数组成员数 (临时文本数组), 临时整数变量)
        .如果真 (不等于 (检测目录 (相加 (上级目录, 临时文本数组 [临时整数变量])), 0))
            赋值 (上级目录, 相加 (上级目录, 临时文本数组 [临时整数变量], “\”))
            到循环尾 ()
        .如果真结束
        创建目录 (相加 (上级目录, 临时文本数组 [临时整数变量], “\”))
        赋值 (上级目录, 相加 (上级目录, 临时文本数组 [临时整数变量], “\”))
    .计次循环尾 ()
    返回 (真)
.否则
    返回 (假)
.如果结束


.程序集 通讯程序集, , , 

.子程序 启动服务, 空白型, , 

.如果真 (等于 (未知支持库函数_54 (到整数 (读配置项 (系统配置路径, “game”, “dk”, )), ), 真))
    信息框 (“游戏服务端口被占用，初始化失败”, #错误图标, “游戏服务初始化反馈”)
    返回 ()
.如果真结束

.如果真 (等于 (未知支持库函数_54 (到整数 (读配置项 (系统配置路径, “file”, “dk”, )), ), 真))
    信息框 (“文件服务端口被占用，初始化失败”, #错误图标, “文件服务初始化反馈”)
    返回 ()
.如果真结束

.如果真 (等于 (未知支持库函数_54 (到整数 (读配置项 (系统配置路径, “Capacity”, “dk”, )), ), 真))
    信息框 (“U盘服务端口被占用，初始化失败”, #错误图标, “U盘服务初始化反馈”)
    返回 ()
.如果真结束
' 本源码来自易语言资源网(www.5A5X.com)
.如果真 (等于 (游戏服务端.未知支持库函数_3 (到整数 (读配置项 (系统配置路径, “game”, “zx”, )), 到整数 (读配置项 (系统配置路径, “game”, “zd”, ))), 假))
    信息框 (“游戏服务初始化失败”, #错误图标, “游戏服务初始化反馈”)
    返回 ()
.如果真结束

.如果真 (等于 (文件服务端.未知支持库函数_3 (到整数 (读配置项 (系统配置路径, “file”, “zx”, )), 到整数 (读配置项 (系统配置路径, “file”, “zd”, ))), 假))
    信息框 (“文件服务初始化失败”, #错误图标, “文件服务初始化反馈”)
    返回 ()
.如果真结束

.如果真 (等于 (虚拟U盘服务端.未知支持库函数_3 (到整数 (读配置项 (系统配置路径, “Capacity”, “zx”, )), 到整数 (读配置项 (系统配置路径, “Capacity”, “zd”, ))), 假))
    信息框 (“U盘初始化失败”, #错误图标, “U盘服务初始化反馈”)
    返回 ()
.如果真结束

.如果真 (等于 (游戏服务端.未知支持库函数_1 (到整数 (读配置项 (系统配置路径, “game”, “dk”, )), &游戏服务线程, ), 假))
    信息框 (“游戏服务启动失败”, #错误图标, “启动服务反馈”)
    返回 ()
.如果真结束

.如果真 (等于 (文件服务端.未知支持库函数_1 (到整数 (读配置项 (系统配置路径, “file”, “dk”, )), &文件服务线程, ), 假))
    信息框 (“文件服务启动失败”, #错误图标, “启动服务反馈”)
    返回 ()
.如果真结束

.如果真 (等于 (虚拟U盘服务端.未知支持库函数_1 (到整数 (读配置项 (系统配置路径, “Capacity”, “dk”, )), &虚拟U盘服务线程, ), 假))
    信息框 (“文件服务启动失败”, #错误图标, “启动服务反馈”)
    返回 ()
.如果真结束
赋值 (主窗口..时钟周期, 1000)
赋值 (主窗口..禁止, 假)
赋值 (主窗口..禁止, 真)
调试输出 (“启动服务成功”)


.子程序 停止服务, 空白型, , 
游戏服务端.未知支持库函数_2 ()
文件服务端.未知支持库函数_2 ()
虚拟U盘服务端.未知支持库函数_2 ()
赋值 (主窗口..禁止, 假)
赋值 (主窗口..时钟周期, 0)

.子程序 游戏服务线程, 空白型, , 
.参数 消息地址, 整数型, , 

.局部变量 消息类型, 整数型, , , 
.局部变量 客户句柄, 整数型, , , 
.局部变量 客户IP, 文本型, , , 
.局部变量 唯一标示, 文本型, , , 
.局部变量 收到的数据, 字节集, , , 
.局部变量 收到的类型, 字节集, , , 
.局部变量 真实数据, 字节集, , , 
.局部变量 临时文本数组, 文本型, , "0", 
.局部变量 临时文本数组1, 文本型, , "0", 
.局部变量 临时整数数组, 整数型, , "0", 
.局部变量 临时文本变量, 文本型, , , 
.局部变量 临时整数变量, 整数型, , , 
.局部变量 临时整数变量1, 整数型, , , 
.局部变量 临时整数变量2, 整数型, , , 
.局部变量 临时时间变量, 日期时间型, , , 

赋值 (消息类型, 游戏服务端.未知支持库函数_27 (消息地址))
游戏服务端.未知支持库函数_8 (消息地址, 客户句柄)
游戏服务端.未知支持库函数_9 (客户句柄, 客户IP)
.判断开始 (等于 (消息类型, 0)) ' 客户连接
    
.判断 (等于 (消息类型, 1)) ' 客户断开
    .如果真 (等于 (是否已创建 (综合管理窗口), 真))
        初始化客户分组到列表 ()
    .如果真结束
    
.判断 (等于 (消息类型, 2)) ' 数据到达
    游戏服务端.未知支持库函数_5 (消息地址, 唯一标示, 收到的数据)
    赋值 (文件_总下载, 相加 (文件_总下载, 取字节集长度 (收到的数据)))
    赋值 (文件_现下载, 相加 (文件_现下载, 取字节集长度 (收到的数据)))
    赋值 (收到的类型, 取字节集左边 (收到的数据, 5))
    赋值 (真实数据, 取字节集右边 (收到的数据, 相减 (取字节集长度 (收到的数据), 5)))
    .判断开始 (等于 (收到的类型, { 212, 132, 88, 189, 145 })) ' 收到客户硬件信息
        赋值 (临时文本数组, 分割文本 (到文本 (真实数据), “|”, ))
        .如果真 (等于 (取数组成员数 (临时文本数组), 4))
            主窗口.加入文本 (., 相加 (“客户<”, 临时文本数组 [1], “>上线”, #换行符))
            .如果真 (等于 (是否已创建 (综合管理窗口), 假))
                返回 ()
            .如果真结束
            .如果真 (不等于 (综合管理窗口.., 4))
                返回 ()
            .如果真结束
            置当前库 (#客户数据库)
            到首记录 ()
            .计次循环首 (取记录数 (), 临时整数变量)
                .如果真 (等于 (读 (#IP), 客户IP))
                    .如果真 (等于 (读 (#计算机名), 临时文本数组 [1]))
                        .如果真 (等于 (读 (#MAC), 临时文本数组 [2]))
                            .如果真 (等于 (读 (#CPU), 临时文本数组 [3]))
                                .如果真 (等于 (读 (#内存), 临时文本数组 [4]))
                                    .如果 (等于 (读 (#分组), 真))
                                        .计次循环首 (综合管理窗口.取表项数 (.), 临时整数变量1)
                                            .如果真 (等于 (综合管理窗口.取标题 (., 相减 (临时整数变量1, 1), 4), 临时文本数组 [2]))
                                                .如果真 (等于 (综合管理窗口.取标题 (., 相减 (临时整数变量1, 1), 1), 临时文本数组 [1]))
                                                    .如果真 (等于 (综合管理窗口.取标题 (., 相减 (临时整数变量1, 1), 3), 客户IP))
                                                        .如果真 (等于 (综合管理窗口.取标题 (., 相减 (临时整数变量1, 1), 5), 临时文本数组 [3]))
                                                            .如果真 (等于 (综合管理窗口.取标题 (., 相减 (临时整数变量1, 1), 6), 临时文本数组 [4]))
                                                                综合管理窗口.置状态图片 (., 相减 (临时整数变量1, 1), 0)
                                                                综合管理窗口.置标题 (., 相减 (临时整数变量1, 1), 2, 到文本 (客户句柄))
                                                            .如果真结束
                                                            
                                                        .如果真结束
                                                        
                                                    .如果真结束
                                                    
                                                .如果真结束
                                                
                                            .如果真结束
                                            
                                        .计次循环尾 ()
                                    .否则
                                        .计次循环首 (综合管理窗口.取表项数 (.), 临时整数变量1)
                                            .如果真 (等于 (综合管理窗口.取标题 (., 相减 (临时整数变量1, 1), 4), 临时文本数组 [2]))
                                                .如果真 (等于 (综合管理窗口.取标题 (., 相减 (临时整数变量1, 1), 1), 临时文本数组 [1]))
                                                    .如果真 (等于 (综合管理窗口.取标题 (., 相减 (临时整数变量1, 1), 3), 客户IP))
                                                        .如果真 (等于 (综合管理窗口.取标题 (., 相减 (临时整数变量1, 1), 5), 临时文本数组 [3]))
                                                            .如果真 (等于 (综合管理窗口.取标题 (., 相减 (临时整数变量1, 1), 6), 临时文本数组 [4]))
                                                                综合管理窗口.置状态图片 (., 相减 (临时整数变量1, 1), 0)
                                                                综合管理窗口.置标题 (., 相减 (临时整数变量1, 1), 2, 到文本 (客户句柄))
                                                            .如果真结束
                                                            
                                                        .如果真结束
                                                        
                                                    .如果真结束
                                                    
                                                .如果真结束
                                                
                                            .如果真结束
                                            
                                        .计次循环尾 ()
                                    .如果结束
                                    
                                    返回 ()
                                .如果真结束
                                
                            .如果真结束
                            
                        .如果真结束
                        
                    .如果真结束
                    
                .如果真结束
                跳过 ()
            .计次循环尾 ()
            调试输出 (“添加客户”)
            加记录 (临时文本数组 [1], 客户IP, 临时文本数组 [2], 临时文本数组 [3], 临时文本数组 [4], 假)
            .如果 (等于 (是否已创建 (综合管理窗口), 真))
                初始化客户分组到列表 ()
            .否则
                
            .如果结束
            
        .如果真结束
        
    .判断 (等于 (收到的类型, { 227, 226, 207, 206, 255 }))
        赋值 (临时文本数组, 分割文本 (到文本 (真实数据), “|”, )) ' 收到客户窗口大小
        .如果真 (等于 (取数组成员数 (临时文本数组), 2))
            赋值 (临时整数变量1, 到整数 (临时文本数组 [1]))
            赋值 (临时整数变量2, 到整数 (临时文本数组 [2]))
            窗口截图窗口.移动 (相减 (相除 (取屏幕宽度 (), 2), 相除 (临时整数变量1, 2)), 相减 (相除 (取屏幕高度 (), 2), 相除 (临时整数变量2, 2)), 临时整数变量1, 临时整数变量2)
            游戏服务端.未知支持库函数_7 (客户句柄, { 205, 206, 80, 226, 227 })
        .如果真结束
        
    .判断 (等于 (收到的类型, { 227, 226, 207, 206, 205 })) ' 收到窗口截图数据
        .如果真 (等于 (是否已创建 (窗口截图窗口), 真))
            赋值 (窗口截图窗口., 未知支持库函数_1 (真实数据))
        .如果真结束
        
    .判断 (等于 (收到的类型, { 146, 145, 154, 153, 152 })) ' 收到客户进程信息
        赋值 (当前操作客户句柄, 客户句柄)
        赋值 (临时文本数组, 分割文本 (到文本 (未知支持库函数_1 (真实数据)), “|”, ))
        客户进程管理窗口.全部删除 (.)
        .计次循环首 (取数组成员数 (临时文本数组), 临时整数变量)
            赋值 (临时文本数组1, 分割文本 (临时文本数组 [临时整数变量], “'”, ))
            .如果真 (等于 (取数组成员数 (临时文本数组1), 4))
                赋值 (临时整数变量2, 客户进程管理窗口.插入表项 (., , , , , , ))
                客户进程管理窗口.置标题 (., 临时整数变量2, 0, 到文本 (临时整数变量))
                客户进程管理窗口.置标题 (., 临时整数变量2, 1, 临时文本数组1 [1])
                客户进程管理窗口.置标题 (., 临时整数变量2, 2, 临时文本数组1 [2])
                客户进程管理窗口.置标题 (., 临时整数变量2, 3, 临时文本数组1 [3])
                客户进程管理窗口.置标题 (., 临时整数变量2, 4, 临时文本数组1 [4])
            .如果真结束
            
        .计次循环尾 ()
    .判断 (等于 (收到的类型, { 165, 154, 143, 132, 121 })) ' 收到客户版本更新请求
        游戏服务端.未知支持库函数_7 (唯一标示, 相加 ({ 121, 132, 143, 154, 165 }, 到字节集 (未知支持库函数_2 (读入文件 (相加 (文件配置路径, “客户端升级索引.dep”))))))
    .判断 (等于 (收到的类型, { 67, 78, 89, 90, 111 }))
        游戏服务端.未知支持库函数_7 (唯一标示, 相加 ({ 111, 90, 89, 78, 67 }, 读入文件 (相加 (文件配置路径, “客户端升级索引.dep”))))
        
    .判断 (等于 (收到的类型, { 212, 132, 88, 189, 10 })) ' 同步时间
        赋值 (临时时间变量, 取现行时间 ())
        赋值 (临时文本变量, 相加 (到文本 (取年份 (临时时间变量)), “|”, 到文本 (取月份 (临时时间变量)), “|”, 到文本 (取星期几 (临时时间变量)), “|”, 到文本 (取日 (临时时间变量)), “|”, 到文本 (取小时 (临时时间变量)), “|”, 到文本 (取分钟 (临时时间变量)), “|”, 到文本 (取秒 (临时时间变量))))
        游戏服务端.未知支持库函数_7 (唯一标示, 相加 ({ 111, 90, 8, 78, 19 }, 到字节集 (临时文本变量)))
        赋值 (文件_总上传, 相加 (文件_总上传, 取字节集长度 (到字节集 (临时文本变量))))
        赋值 (文件_现上传, 相加 (文件_现上传, 取字节集长度 (到字节集 (临时文本变量))))
    .默认
        
    .判断结束
    
.默认
    
.判断结束


.子程序 文件服务线程, 空白型, , 
.参数 消息地址, 空白型, , 

.局部变量 消息类型, 整数型, , , 
.局部变量 客户句柄, 整数型, , , 
.局部变量 客户IP, 文本型, , , 
.局部变量 唯一标示, 文本型, , , 
.局部变量 收到的数据, 字节集, , , 
.局部变量 收到的类型, 字节集, , , 
.局部变量 真实数据, 字节集, , , 
.局部变量 临时文本数组, 文本型, , "0", 
.局部变量 临时文本数组1, 文本型, , "0", 
.局部变量 临时整数数组, 整数型, , "0", 
.局部变量 临时文本变量, 文本型, , , 
.局部变量 临时整数变量, 整数型, , , 
.局部变量 临时整数变量1, 整数型, , , 
.局部变量 临时整数变量2, 整数型, , , 
.局部变量 要发送的数据, 字节集, , , 

赋值 (消息类型, 文件服务端.未知支持库函数_27 (消息地址))
文件服务端.未知支持库函数_8 (消息地址, 客户句柄)
文件服务端.未知支持库函数_9 (客户句柄, 客户IP)
.判断开始 (等于 (消息类型, 0)) ' 客户连接
    
.判断 (等于 (消息类型, 1)) ' 客户断开
    
.判断 (等于 (消息类型, 2)) ' 数据到达
    文件服务端.未知支持库函数_5 (消息地址, 唯一标示, 收到的数据)
    赋值 (文件_总下载, 相加 (文件_总下载, 取字节集长度 (收到的数据)))
    赋值 (文件_现下载, 相加 (文件_现下载, 取字节集长度 (收到的数据)))
    赋值 (收到的类型, 取字节集左边 (收到的数据, 5))
    赋值 (真实数据, 取字节集右边 (收到的数据, 相减 (取字节集长度 (收到的数据), 5)))
    .判断开始 (等于 (收到的类型, { 222, 111, 151, 181, 191 })) ' 客户端更新
        赋值 (要发送的数据, 未知支持库函数_0 (读入文件 (相加 (取运行目录 (), “\updata\”, 到文本 (真实数据)))))
        赋值 (文件_总上传, 相加 (文件_总上传, 取字节集长度 (要发送的数据)))
        赋值 (文件_现上传, 相加 (文件_现上传, 取字节集长度 (要发送的数据)))
        文件服务端.未知支持库函数_7 (唯一标示, 要发送的数据)
    .判断 (等于 (收到的类型, { 222, 111, 151, 22, 33 })) ' 客户端升级索引文件
        文件服务端.未知支持库函数_7 (唯一标示, 到字节集 (未知支持库函数_2 (读入文件 (相加 (文件配置路径, 到文本 (真实数据), “.dep”)))))
    .判断 (等于 (收到的类型, { 33, 22, 151, 111, 222 }))
        .如果 (等于 (文件是否存在 (相加 (文件配置路径, 到文本 (真实数据), “.dep”)), 真))
            赋值 (要发送的数据, 读入文件 (相加 (文件配置路径, 到文本 (真实数据), “.dep”)))
            赋值 (文件_总上传, 相加 (文件_总上传, 取字节集长度 (要发送的数据)))
            赋值 (文件_现上传, 相加 (文件_现上传, 取字节集长度 (要发送的数据)))
            文件服务端.未知支持库函数_7 (唯一标示, 要发送的数据)
        .否则
            文件服务端.未知支持库函数_7 (唯一标示, {  })
        .如果结束
        
    .判断 (等于 (收到的类型, { 181, 191, 201, 15, 88 })) ' 发送文件数据
        赋值 (临时文本数组, 分割文本 (到文本 (真实数据), “|”, ))
        .如果真 (等于 (取数组成员数 (临时文本数组), 2))
            赋值 (临时文本变量, 临时文本数组 [1])
            赋值 (临时整数变量, 到整数 (读配置项 (缓冲文件路径, 临时文本变量, “j”, )))
            .如果真 (等于 (临时整数变量, 0))
                赋值 (临时整数变量, 打开文件 (临时文本变量, , ))
                写配置项 (缓冲文件路径, 临时文本变量, “j”, 到文本 (临时整数变量))
            .如果真结束
            .如果 (不等于 (临时整数变量, 0))
                移动读写位置 (临时整数变量, , 到整数 (临时文本数组 [2]))
                赋值 (要发送的数据, 读入字节集 (临时整数变量, 1048576))
                文件服务端.未知支持库函数_7 (唯一标示, 要发送的数据)
                赋值 (文件_总上传, 相加 (文件_总上传, 取字节集长度 (要发送的数据)))
                赋值 (文件_现上传, 相加 (文件_现上传, 取字节集长度 (要发送的数据)))
            .否则
                文件服务端.未知支持库函数_7 (唯一标示, {  })
            .如果结束
            
        .如果真结束
        
    .判断 (等于 (收到的类型, { 181, 191, 201, 15, 10 })) ' 下载虚拟盘账户文件
        赋值 (临时文本数组, 分割文本 (到文本 (真实数据), “|”, ))
        .如果真 (等于 (取数组成员数 (临时文本数组), 2))
            赋值 (临时文本变量, 临时文本数组 [1])
            赋值 (临时整数变量, 到整数 (读配置项 (缓冲文件路径, 临时文本变量, “j”, )))
            .如果真 (等于 (临时整数变量, 0))
                赋值 (临时整数变量, 打开文件 (相加 (账户文件路径, 临时文本变量), , ))
                写配置项 (缓冲文件路径, 临时文本变量, “j”, 到文本 (临时整数变量))
            .如果真结束
            .如果 (不等于 (临时整数变量, 0))
                移动读写位置 (临时整数变量, , 到整数 (临时文本数组 [2]))
                赋值 (要发送的数据, 读入字节集 (临时整数变量, 1048576))
                .如果真 (小于 (取字节集长度 (要发送的数据), 1048576))
                    关闭文件 (临时整数变量)
                .如果真结束
                赋值 (虚拟盘_总上传, 相加 (虚拟盘_总上传, 取字节集长度 (要发送的数据)))
                赋值 (虚拟盘_现上传, 相加 (虚拟盘_现上传, 取字节集长度 (要发送的数据)))
                文件服务端.未知支持库函数_7 (唯一标示, 要发送的数据)
            .否则
                文件服务端.未知支持库函数_7 (唯一标示, {  })
            .如果结束
            
        .如果真结束
        
    .判断 (等于 (收到的类型, { 133, 144, 201, 245, 255 })) ' 判断虚拟盘文件是否存在
        文件服务端.未知支持库函数_7 (唯一标示, 到字节集 (到文本 (文件是否存在 (相加 (账户文件路径, 到文本 (真实数据))))))
    .判断 (等于 (收到的类型, { 133, 144, 201, 245, 90 })) ' 判断游戏文件是否存在
        文件服务端.未知支持库函数_7 (唯一标示, 到字节集 (到文本 (文件是否存在 (到文本 (真实数据)))))
    .默认
        
    .判断结束
    
.默认
    
.判断结束


.子程序 虚拟U盘服务线程, 空白型, , 
.参数 消息地址, 空白型, , 

.局部变量 消息类型, 整数型, , , 
.局部变量 客户句柄, 整数型, , , 
.局部变量 客户IP, 文本型, , , 
.局部变量 唯一标示, 文本型, , , 
.局部变量 收到的数据, 字节集, , , 
.局部变量 收到的类型, 字节集, , , 
.局部变量 真实数据, 字节集, , , 
.局部变量 临时文本数组, 文本型, , "0", 
.局部变量 临时文本数组1, 文本型, , "0", 
.局部变量 临时整数数组, 整数型, , "0", 
.局部变量 临时文本变量, 文本型, , , 
.局部变量 临时整数变量, 整数型, , , 
.局部变量 临时整数变量1, 整数型, , , 
.局部变量 临时整数变量2, 整数型, , , 
.局部变量 临时用户结构, 在线用户结构, , , 
.局部变量 要发送的数据, 字节集, , , 

赋值 (消息类型, 虚拟U盘服务端.未知支持库函数_27 (消息地址))
虚拟U盘服务端.未知支持库函数_8 (消息地址, 客户句柄)
虚拟U盘服务端.未知支持库函数_9 (客户句柄, 客户IP)
.判断开始 (等于 (消息类型, 0)) ' 客户连接
    
.判断 (等于 (消息类型, 1)) ' 客户断开
    退出客户 ()
.判断 (等于 (消息类型, 2)) ' 数据到达
    虚拟U盘服务端.未知支持库函数_5 (消息地址, 唯一标示, 收到的数据)
    赋值 (虚拟盘_总下载, 相加 (虚拟盘_总下载, 取字节集长度 (收到的数据)))
    赋值 (虚拟盘_现下载, 相加 (虚拟盘_现下载, 取字节集长度 (收到的数据)))
    赋值 (收到的类型, 取字节集左边 (收到的数据, 5))
    赋值 (真实数据, 取字节集右边 (收到的数据, 相减 (取字节集长度 (收到的数据), 5)))
    .判断开始 (等于 (收到的类型, { 12, 212, 13, 131, 255 })) ' 注册账户
        赋值 (临时文本数组, 分割文本 (到文本 (未知支持库函数_4 (真实数据, “2011sqh”, #)), “|”, ))
        .如果 (等于 (取数组成员数 (临时文本数组), 2))
            置当前库 (#账户数据库)
            到首记录 ()
            .计次循环首 (取记录数 (), 临时整数变量)
                .如果真 (等于 (读 (#账户名), 临时文本数组 [1]))
                    虚拟U盘服务端.未知支持库函数_7 (唯一标示, 到字节集 (“该账号已存在”))
                    返回 ()
                .如果真结束
                跳过 ()
            .计次循环尾 ()
            .如果 (等于 (加记录 (临时文本数组 [1], 临时文本数组 [2], 0, 到文本 (取现行时间 ()), “未登录过”), 真))
                写到文件 (相加 (账户文件路径, 临时文本数组 [1], “.idx”), {  })
                创建多级目录 (相加 (账户文件路径, 临时文本数组 [1]))
                虚拟U盘服务端.未知支持库函数_7 (唯一标示, 到字节集 (“成功”))
            .否则
                虚拟U盘服务端.未知支持库函数_7 (唯一标示, 到字节集 (“系统错误，错误代码 #3”))
            .如果结束
            
        .否则
            虚拟U盘服务端.未知支持库函数_7 (唯一标示, 到字节集 (“通讯错误，错误代码 #2”))
        .如果结束
        
    .判断 (等于 (收到的类型, { 255, 88, 55, 31, 189 })) ' 登录账户
        赋值 (临时文本数组, 分割文本 (到文本 (未知支持库函数_4 (真实数据, “sqh2011”, #)), “|”, ))
        .如果 (等于 (取数组成员数 (临时文本数组), 2))
            .计次循环首 (取数组成员数 (在线用户组), 临时整数变量)
                .如果真 (等于 (在线用户组 [临时整数变量], 账号名, 临时文本数组 [1]))
                    虚拟U盘服务端.未知支持库函数_7 (唯一标示, 到字节集 (“该账户已在其他客户机登录！”))
                    返回 ()
                .如果真结束
                
            .计次循环尾 ()
            置当前库 (#账户数据库)
            到首记录 ()
            .计次循环首 (取记录数 (), 临时整数变量)
                .如果真 (等于 (读 (#账户名), 临时文本数组 [1]))
                    .如果 (等于 (读 (#密码), 临时文本数组 [2]))
                        赋值 (临时用户结构.账号名, 临时文本数组 [1])
                        赋值 (临时用户结构.客户句柄, 客户句柄)
                        加入成员 (在线用户组, 临时用户结构)
                        虚拟U盘服务端.未知支持库函数_7 (唯一标示, 到字节集 (“成功”))
                        写 (#登录时间, 到文本 (取现行时间 ()))
                        主窗口.加入文本 (., 相加 (“用户<”, 临时文本数组 [1], “>登录”, #换行符))
                    .否则
                        虚拟U盘服务端.未知支持库函数_7 (唯一标示, 到字节集 (“密码错误”))
                    .如果结束
                    返回 ()
                .如果真结束
                跳过 ()
            .计次循环尾 ()
            虚拟U盘服务端.未知支持库函数_7 (唯一标示, 到字节集 (“账号不存在”))
        .否则
            虚拟U盘服务端.未知支持库函数_7 (唯一标示, 到字节集 (“通讯错误，错误代码 &2”))
        .如果结束
        
    .判断 (等于 (收到的类型, { 67, 137, 219, 245, 155 })) ' 建立文件同时打开文件取得文件号
        赋值 (临时文本变量, 到文本 (真实数据))
        赋值 (临时文本变量, 相加 (账户文件路径, 临时文本变量))
        创建多级目录 (取文本左边 (临时文本变量, 倒找文本 (临时文本变量, “\”, , 假)))
        写到文件 (临时文本变量, {  })
        赋值 (临时整数变量, 打开文件 (临时文本变量, , ))
        .如果 (不等于 (临时整数变量, 0))
            .计次循环首 (取数组成员数 (在线用户组), 临时整数变量1)
                .如果真 (等于 (在线用户组 [临时整数变量1], 客户句柄, 客户句柄))
                    赋值 (在线用户组 [临时整数变量1], 当前操作文件号, 临时整数变量)
                    赋值 (在线用户组 [临时整数变量1], 当前操作文件名, 临时文本变量)
                    赋值 (在线用户组 [临时整数变量1], 是否完成, 假)
                .如果真结束
                
            .计次循环尾 ()
            虚拟U盘服务端.未知支持库函数_7 (唯一标示, 到字节集 (到文本 (临时整数变量)))
        .否则
            虚拟U盘服务端.未知支持库函数_7 (唯一标示, 到字节集 (“0”))
        .如果结束
        
    .判断 (等于 (收到的类型, { 13, 210, 220, 190, 31 })) ' 退出账户
        赋值 (临时文本变量, 到文本 (真实数据))
        .如果 (不等于 (临时文本变量, “”))
            .计次循环首 (取数组成员数 (在线用户组), 临时整数变量)
                .如果真 (等于 (在线用户组 [临时整数变量], 账号名, 临时文本变量))
                    .如果真 (等于 (在线用户组 [临时整数变量], 是否完成, 假))
                        关闭文件 (在线用户组 [临时整数变量], 当前操作文件号)
                        删除文件 (在线用户组 [临时整数变量], 当前操作文件名)
                    .如果真结束
                    删除成员 (在线用户组, 临时整数变量, )
                    虚拟U盘服务端.未知支持库函数_7 (唯一标示, 到字节集 (“成功”))
                    主窗口.加入文本 (., 相加 (“用户<”, 临时文本变量, “>退出”, #换行符))
                .如果真结束
                
            .计次循环尾 ()
        .否则
            虚拟U盘服务端.未知支持库函数_7 (唯一标示, 到字节集 (“通讯异常”))
        .如果结束
        
    .判断 (等于 (收到的类型, { 11, 21, 31, 44, 41 })) ' 下载索引文件
        赋值 (临时文本变量, 到文本 (未知支持库函数_4 (真实数据, “成功”, #)))
        .如果真 (不等于 (取文件尺寸 (相加 (账户文件路径, 临时文本变量, “.idx”)), 0))
            赋值 (要发送的数据, 未知支持库函数_0 (读入文件 (相加 (账户文件路径, 临时文本变量, “.idx”))))
            .如果真 (不等于 (取字节集长度 (要发送的数据), 0))
                赋值 (虚拟盘_总上传, 相加 (虚拟盘_总上传, 取字节集长度 (要发送的数据)))
                赋值 (虚拟盘_现上传, 相加 (虚拟盘_现上传, 取字节集长度 (要发送的数据)))
                虚拟U盘服务端.未知支持库函数_7 (唯一标示, 要发送的数据)
                返回 ()
            .如果真结束
            
        .如果真结束
        虚拟U盘服务端.未知支持库函数_7 (唯一标示, { 11, 22 })
    .判断 (等于 (收到的类型, { 88, 89, 91, 19, 10 })) ' 收到文件数据
        .计次循环首 (取数组成员数 (在线用户组), 临时整数变量)
            .如果真 (等于 (在线用户组 [临时整数变量], 客户句柄, 客户句柄))
                赋值 (临时整数变量, 在线用户组 [临时整数变量], 当前操作文件号)
                赋值 (虚拟盘_现下载, 相加 (虚拟盘_现下载, 取字节集长度 (真实数据)))
                赋值 (虚拟盘_总下载, 相加 (虚拟盘_总下载, 取字节集长度 (真实数据)))
                赋值 (真实数据, 未知支持库函数_1 (真实数据))
                .如果 (等于 (写出字节集 (临时整数变量, 真实数据), 真))
                    虚拟U盘服务端.未知支持库函数_7 (唯一标示, { 11, 22, 33, 44, 55 })
                    返回 ()
                .否则
                    跳出循环 ()
                .如果结束
                
            .如果真结束
            
        .计次循环尾 ()
        虚拟U盘服务端.未知支持库函数_7 (唯一标示, { 11, 22, 33, 44, 10 })
    .判断 (等于 (收到的类型, { 10, 11, 51, 9, 1 })) ' 接收文件成功
        .计次循环首 (取数组成员数 (在线用户组), 临时整数变量)
            .如果真 (等于 (在线用户组 [临时整数变量], 客户句柄, 客户句柄))
                赋值 (临时整数变量1, 在线用户组 [临时整数变量], 当前操作文件号)
                赋值 (在线用户组 [临时整数变量], 是否完成, 真)
                关闭文件 (临时整数变量1)
                写配置项 (相加 (账户文件路径, 在线用户组 [临时整数变量], 账号名, “.idx”), 取文本右边 (在线用户组 [临时整数变量], 当前操作文件名, 相减 (取文本长度 (在线用户组 [临时整数变量], 当前操作文件名), 取文本长度 (相加 (账户文件路径, 在线用户组 [临时整数变量], 账号名, “\”)))), “md5”, 未知支持库函数_2 (读入文件 (在线用户组 [临时整数变量], 当前操作文件名)))
            .如果真结束
            
        .计次循环尾 ()
    .判断 (等于 (收到的类型, { 11, 12, 31, 32, 33 })) ' 收到删除文件操作
        .计次循环首 (取数组成员数 (在线用户组), 临时整数变量)
            .如果真 (等于 (在线用户组 [临时整数变量], 客户句柄, 客户句柄))
                赋值 (临时文本变量, 在线用户组 [临时整数变量], 账号名)
                删除文件 (相加 (账户文件路径, 临时文本变量, “\”, 到文本 (真实数据)))
                删除目录 (相加 (账户文件路径, 临时文本变量, “\”, 到文本 (真实数据)))
                写配置项 (相加 (账户文件路径, 临时文本变量, “.idx”), 到文本 (真实数据), , )
            .如果真结束
            
        .计次循环尾 ()
        
    .判断 (等于 (收到的类型, { 11, 12, 31, 52, 53 })) ' 收到重新命名操作
        赋值 (临时文本变量, 到文本 (真实数据))
        赋值 (临时文本数组, 分割文本 (临时文本变量, “|”, ))
        .如果真 (等于 (取数组成员数 (临时文本数组), 2))
            .计次循环首 (取数组成员数 (在线用户组), 临时整数变量)
                .如果真 (等于 (在线用户组 [临时整数变量], 客户句柄, 客户句柄))
                    赋值 (临时文本变量, 在线用户组 [临时整数变量], 账号名)
                    文件更名 (相加 (账户文件路径, 临时文本变量, “\”, 临时文本数组 [1]), 相加 (账户文件路径, 临时文本变量, “\”, 临时文本数组 [2]))
                    写配置项 (相加 (账户文件路径, 临时文本变量, “.idx”), 临时文本数组 [1], , )
                    写配置项 (相加 (账户文件路径, 临时文本变量, “.idx”), 临时文本数组 [2], “md5”, 未知支持库函数_2 (读入文件 (相加 (账户文件路径, 临时文本变量, “\”, 临时文本数组 [2]))))
                .如果真结束
                
            .计次循环尾 ()
        .如果真结束
        
    .默认
        
    .判断结束
    
.默认
    
.判断结束


.子程序 退出客户, 空白型, , 
.局部变量 临时整数变量, 整数型, , , 
.局部变量 临时整数变量1, 整数型, , , 
.局部变量 临时整数数组, 整数型, , "0", 

虚拟U盘服务端.未知支持库函数_11 (临时整数数组)
.计次循环首 (取数组成员数 (在线用户组), 临时整数变量)
    .计次循环首 (取数组成员数 (临时整数数组), 临时整数变量1)
        .如果真 (等于 (在线用户组 [临时整数变量], 客户句柄, 临时整数数组 [临时整数变量1]))
            到循环尾 ()
        .如果真结束
        
    .计次循环尾 ()
    .如果真 (等于 (在线用户组 [临时整数变量], 是否完成, 假))
        关闭文件 (在线用户组 [临时整数变量], 当前操作文件号)
        删除文件 (在线用户组 [临时整数变量], 当前操作文件名)
    .如果真结束
    删除成员 (在线用户组, 临时整数变量, )
.计次循环尾 ()



.窗口程序集 客户进程管理程序集, , , 

.子程序 _客户进程管理窗口_创建完毕, 空白型, , 


.子程序 _刷新进程按钮_被单击, 空白型, , 
_客户进程管理_被选择 ()

.子程序 _终止进程按钮_被单击, 空白型, , 
.如果真 (不等于 (., -1))
    .如果真 (等于 (信息框 (相加 (“确认终止进程<”, .取标题 (., 1), “>吗？”), #警告图标, “操作确认”), #确认钮))
        .如果 (等于 (游戏服务端.未知支持库函数_7 (当前操作客户句柄, 相加 ({ 152, 153, 154, 154, 146 }, 到字节集 (.取标题 (., 2)))), 真))
            操作反馈 (3)
        .否则
            操作反馈 (2)
        .如果结束
        ' 本源码来自易语言资源网(www.5A5X.com)
    .如果真结束
    
.如果真结束


.子程序 _刷新时钟_周期事件, 空白型, , 
_刷新进程按钮_被单击 ()


.子程序 _自动刷新选择框_被单击, 空白型, , 
.如果 (等于 (.选中, 真))
    赋值 (.时钟周期, 2000)
.否则
    赋值 (.时钟周期, 0)
.如果结束



 ' 不属于任何一个程序集、类模块的函数：
