 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 807
    高度 = 531
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “多能五笔打字速度测试系统（该程序自带五笔输入法）”
    帮助文件名 = “”



.图片 一笔, " ' 已保存到：D:\易语言学习\Data\五笔打字速度测试系统.e\一笔", , 
.图片 二笔, " ' 已保存到：D:\易语言学习\Data\五笔打字速度测试系统.e\二笔", , 
.图片 三笔, " ' 已保存到：D:\易语言学习\Data\五笔打字速度测试系统.e\三笔", , 
.图片 四笔, " ' 已保存到：D:\易语言学习\Data\五笔打字速度测试系统.e\四笔", , 
.图片 五笔, " ' 已保存到：D:\易语言学习\Data\五笔打字速度测试系统.e\五笔", , 
.图片 六笔, " ' 已保存到：D:\易语言学习\Data\五笔打字速度测试系统.e\六笔", , 
.图片 七笔, " ' 已保存到：D:\易语言学习\Data\五笔打字速度测试系统.e\七笔", , 
.图片 八笔, " ' 已保存到：D:\易语言学习\Data\五笔打字速度测试系统.e\八笔", , 
.图片 九笔, " ' 已保存到：D:\易语言学习\Data\五笔打字速度测试系统.e\九笔", , 
.图片 编一, " ' 已保存到：D:\易语言学习\Data\五笔打字速度测试系统.e\编一", , 
.图片 编二, " ' 已保存到：D:\易语言学习\Data\五笔打字速度测试系统.e\编二", , 
.图片 编三, " ' 已保存到：D:\易语言学习\Data\五笔打字速度测试系统.e\编三", , 
.图片 编四, " ' 已保存到：D:\易语言学习\Data\五笔打字速度测试系统.e\编四", , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 3 2 系统核心支持库




.全局变量 C, 空白型, , , 

.窗口程序集 窗口程序集1, , , 

.程序集变量 五笔字型开关, 逻辑型, , , 
.程序集变量 字词, 文本型, , "0", 
.程序集变量 测试开始, 逻辑型, , , 
.程序集变量 加权, 整数型, , , 
.子程序 __启动窗口_创建完毕, 空白型, , 
赋值 (., 100)
获取焦点 ()

.子程序 取五笔码, 逻辑型, , 成功返回真，失败返回假，（如果中间存在西文字符则不能成功取出编码）
.参数 汉字, 文本型, , ***可以为多个汉字
.参数 编码, 文本型, 参考 数组, ***返回一个

.局部变量 长度, 短整数型, , , 
.局部变量 编码库, 文本型, , , 
.局部变量 位置, 整数型, , , 

赋值 (汉字, 子文本替换 (汉字, “ ”, “”, , , 真))
赋值 (长度, 相除 (取文本长度 (汉字), 2))
.如果真 (或者 (等于 (汉字, “”), 等于 (汉字, 字符 (32))))
    返回 (假)
.如果真结束
.判断开始 (等于 (长度, 1))
    赋值 (编码库)

.子程序 取五笔字, 逻辑型, , 
.参数 编码, 文本型, , **用户输入的五笔编码
.参数 汉字, 文本型, 参考 数组, **符合编码的所有汉字

.局部变量 长度, 短整数型, , , 
.局部变量 编码库, 文本型, , , 
.局部变量 位置, 整数型, , , 
.局部变量 z, 整数型, , , 
.局部变量 编码1, 文本型, , , 

赋值 (删全部空 ()) ' 去除五笔输入中的空格
.如果真 (等于 (编码, “”))
    返回 (假)
.如果真结束
赋值 (长度, 取文本长度 (编码))
.判断开始 (等于 (长度, 1))
    赋值 (编码库)

.子程序 取五笔字词, 文本型, , 使用容器(字词)
.参数 编码, 文本型, , **用户输入的五笔编码

.局部变量 长度, 短整数型, , , 
.局部变量 编码库, 文本型, , , 
.局部变量 位置, 整数型, , , 
.局部变量 z, 短整数型, , , 
.局部变量 编码1, 文本型, , , 
.局部变量 汉字, 文本型, , "10", 

赋值 (编码, 删全部空 (编码))
.如果真 (等于 (编码, “”))
    返回 (“”)
.如果真结束
赋值 (长度, 取文本长度 (编码))
.判断开始 (等于 (长度, 1))
    赋值 (编码库)

.子程序 _输入框_内容被改变, 空白型, , 
.局部变量 b, 空白型, , , 
.局部变量 返回的字词, 文本型, , "0", 
.局部变量 c, 文本型, , , 
.局部变量 字符代码, 整数型, , , 

.如果真 (小于或等于 (取文本长度 (.), 4))
    取五笔字 (., 返回的字词)
    .变量循环首 (1, 取数组成员数 (返回的字词), 1, b)
        赋值 (c, 相加 (c, 到文本 (b), “:”, 返回的字词 [b], 取空白文本 (2)))
        .如果真 (等于 (取文本长度 (.), 4))
            赋值 (., 删除英文 (返回的字词 [1]))
            赋值 (., “”)
        .如果真结束
        
    .变量循环尾 ()
    赋值 (., c)
.如果真结束
.如果真 (大于 (取文本长度 (.), 4))
    赋值 (., “”)
.如果真结束


.子程序 _编辑框2_内容被改变, 空白型, , 
.局部变量 位, 整数型, , , 
.局部变量 长, 短整数型, , , 

赋值 (长, 取文本长度 (.))
赋值 (位, 寻找文本 (., “ ”, , 假))

.如果真 (等于 (取文本长度 (删首尾空 (.)), 1))
    .如果真 (等于 (., “1”))
        赋值 (., 取文本中间 (., 相加 (位, 1), 相减 (寻找文本 (., “ ”, 相加 (位, 1), 假), 相加 (位, 1))))
    .如果真结束
    .如果真 (等于 (., “2”))
        赋值 (., 取文本中间 (., 相加 (位, 10), 相减 (寻找文本 (., “ ”, 相加 (位, 10), 假), 相加 (位, 6))))
    .如果真结束
    .如果真 (等于 (., “3”))
        赋值 (., 取文本中间 (., 相加 (位, 21), 相减 (寻找文本 (., “ ”, 相加 (位, 21), 假), 相加 (位, 19))))
    .如果真结束
    .如果真 (等于 (., “4”))
        赋值 (., 取文本中间 (., 相加 (位, 31), 相减 (寻找文本 (., “ ”, 相加 (位, 31), 假), 相加 (位, 29))))
    .如果真结束
    .如果真 (等于 (., “5”))
        赋值 (., 取文本中间 (., 相加 (位, 41), 相减 (寻找文本 (., “ ”, 相加 (位, 41), 假), 相加 (位, 39))))
    .如果真结束
    .如果真 (等于 (., “6”))
        赋值 (., 取文本中间 (., 相加 (位, 51), 相减 (寻找文本 (., “ ”, 相加 (位, 51), 假), 相加 (位, 49))))
    .如果真结束
    .如果真 (等于 (., “7”))
        赋值 (., 取文本中间 (., 相加 (位, 61), 相减 (寻找文本 (., “ ”, 相加 (位, 61), 假), 相加 (位, 59))))
    .如果真结束
    .如果真 (等于 (., “8”))
        赋值 (., 取文本中间 (., 相加 (位, 71), 相减 (寻找文本 (., “ ”, 相加 (位, 71), 假), 相加 (位, 69))))
    .如果真结束
    .如果真 (等于 (., “9”))
        赋值 (., 取文本中间 (., 相加 (位, 81), 相减 (寻找文本 (., “ ”, 相加 (位, 81), 假), 相加 (位, 79))))
    .如果真结束
    .如果真 (等于 (., “10”))
        赋值 (., 取文本中间 (., 相加 (位, 91), 相减 (寻找文本 (., “ ”, 相加 (位, 91), 假), 相加 (位, 89))))
    .如果真结束
    .如果真 (等于 (., “11”))
        赋值 (., 取文本中间 (., 相加 (位, 103), 相减 (寻找文本 (., “ ”, 相加 (位, 103), 假), 相加 (位, 101))))
    .如果真结束
    .如果真 (等于 (., “12”))
        赋值 (., 取文本中间 (., 相加 (位, 114), 相减 (寻找文本 (., “ ”, 相加 (位, 114), 假), 相加 (位, 112))))
    .如果真结束
    .如果真 (等于 (., “13”))
        赋值 (., 取文本中间 (., 相加 (位, 125), 相减 (寻找文本 (., “ ”, 相加 (位, 125), 假), 相加 (位, 123))))
    .如果真结束
    .如果真 (等于 (., “14”))
        赋值 (., 取文本中间 (., 相加 (位, 136), 相减 (寻找文本 (., “ ”, 相加 (位, 136), 假), 相加 (位, 134))))
    .如果真结束
    .如果真 (等于 (., “15”))
        赋值 (., 取文本中间 (., 相加 (位, 147), 相减 (寻找文本 (., “ ”, 相加 (位, 147), 假), 相加 (位, 145))))
    .如果真结束
    .如果真 (等于 (., “16”))
        赋值 (., 取文本中间 (., 相加 (位, 158), 相减 (寻找文本 (., “ ”, 相加 (位, 158), 假), 相加 (位, 156))))
    .如果真结束
    .如果真 (等于 (., “17”))
        赋值 (., 取文本中间 (., 相加 (位, 169), 相减 (寻找文本 (., “ ”, 相加 (位, 169), 假), 相加 (位, 167))))
    .如果真结束
    .如果真 (等于 (., “18”))
        赋值 (., 取文本中间 (., 相加 (位, 180), 相减 (寻找文本 (., “ ”, 相加 (位, 180), 假), 相加 (位, 178))))
    .如果真结束
    .如果真 (等于 (., “19”))
        赋值 (., 取文本中间 (., 相加 (位, 191), 相减 (寻找文本 (., “ ”, 相加 (位, 191), 假), 相加 (位, 189))))
    .如果真结束
    .如果真 (等于 (., “20”))
        赋值 (., 取文本中间 (., 相加 (位, 202), 相减 (寻找文本 (., “ ”, 相加 (位, 202), 假), 相加 (位, 200))))
    .如果真结束
    .如果真 (等于 (., “21”))
        赋值 (., 取文本中间 (., 相加 (位, 213), 相减 (寻找文本 (., “ ”, 相加 (位, 213), 假), 相加 (位, 211))))
    .如果真结束
    .如果真 (等于 (., “22”))
        赋值 (., 取文本中间 (., 相加 (位, 224), 相减 (寻找文本 (., “ ”, 相加 (位, 224), 假), 相加 (位, 222))))
    .如果真结束
    .如果真 (等于 (., “23”))
        赋值 (., 取文本中间 (., 相加 (位, 235), 相减 (寻找文本 (., “ ”, 相加 (位, 235), 假), 相加 (位, 233))))
    .如果真结束
    .如果真 (等于 (., “24”))
        赋值 (., 取文本中间 (., 相加 (位, 246), 相减 (寻找文本 (., “ ”, 相加 (位, 246), 假), 相加 (位, 244))))
    .如果真结束
    .如果真 (等于 (., “25”))
        赋值 (., 取文本中间 (., 相加 (位, 257), 相减 (寻找文本 (., “ ”, 相加 (位, 257), 假), 相加 (位, 255))))
    .如果真结束
    .如果真 (等于 (., “26”))
        赋值 (., 取文本中间 (., 相加 (位, 268), 相减 (寻找文本 (., “ ”, 相加 (位, 268), 假), 相加 (位, 266))))
    .如果真结束
    .如果真 (等于 (., “27”))
        赋值 (., 取文本中间 (., 相加 (位, 279), 相减 (寻找文本 (., “ ”, 相加 (位, 279), 假), 相加 (位, 277))))
    .如果真结束
    
    
    
    
    
.如果真结束
.如果真 (等于 (取文本长度 (删首尾空 (.)), 2))
    .如果真 (等于 (., “1”))
        赋值 (., 取文本中间 (., 相加 (位, 1), 相减 (寻找文本 (., “ ”, 相加 (位, 1), 假), 相加 (位, 1))))
    .如果真结束
    .如果真 (等于 (., “2”))
        赋值 (位, 相加 (位, 2))
        赋值 (., 取文本中间 (., 相加 (位, 10), 相减 (寻找文本 (., “ ”, 相加 (位, 10), 假), 相加 (位, 8))))
    .如果真结束
    .如果真 (等于 (., “3”))
        赋值 (位, 相加 (位, 2))
        赋值 (., 取文本中间 (., 相加 (位, 21), 相减 (寻找文本 (., “ ”, 相加 (位, 21), 假), 相加 (位, 19))))
    .如果真结束
    .如果真 (等于 (., “4”))
        赋值 (位, 相加 (位, 3))
        赋值 (., 取文本中间 (., 相加 (位, 31), 相减 (寻找文本 (., “ ”, 相加 (位, 31), 假), 相加 (位, 29))))
    .如果真结束
    .如果真 (等于 (., “5”))
        赋值 (位, 相加 (位, 4))
        赋值 (., 取文本中间 (., 相加 (位, 41), 相减 (寻找文本 (., “ ”, 相加 (位, 41), 假), 相加 (位, 39))))
    .如果真结束
    .如果真 (等于 (., “6”))
        赋值 (位, 相加 (位, 5))
        赋值 (., 取文本中间 (., 相加 (位, 51), 相减 (寻找文本 (., “ ”, 相加 (位, 51), 假), 相加 (位, 49))))
    .如果真结束
    .如果真 (等于 (., “7”))
        赋值 (位, 相加 (位, 6))
        赋值 (., 取文本中间 (., 相加 (位, 61), 相减 (寻找文本 (., “ ”, 相加 (位, 61), 假), 相加 (位, 59))))
    .如果真结束
    .如果真 (等于 (., “8”))
        赋值 (位, 相加 (位, 7))
        赋值 (., 取文本中间 (., 相加 (位, 71), 相减 (寻找文本 (., “ ”, 相加 (位, 71), 假), 相加 (位, 69))))
    .如果真结束
    .如果真 (等于 (., “9”))
        赋值 (位, 相加 (位, 8))
        赋值 (., 取文本中间 (., 相加 (位, 81), 相减 (寻找文本 (., “ ”, 相加 (位, 81), 假), 相加 (位, 79))))
    .如果真结束
    .如果真 (等于 (., “10”))
        赋值 (位, 相加 (位, 10))
        赋值 (., 取文本中间 (., 相加 (位, 91), 相减 (寻找文本 (., “ ”, 相加 (位, 91), 假), 相加 (位, 89))))
        
    .如果真结束
    .如果真 (等于 (., “11”))
        赋值 (位, 相加 (位, 10))
        赋值 (., 取文本中间 (., 相加 (位, 103), 相减 (寻找文本 (., “ ”, 相加 (位, 103), 假), 相加 (位, 101))))
    .如果真结束
    .如果真 (等于 (., “12”))
        赋值 (位, 相加 (位, 11))
        赋值 (., 取文本中间 (., 相加 (位, 114), 相减 (寻找文本 (., “ ”, 相加 (位, 114), 假), 相加 (位, 112))))
    .如果真结束
    .如果真 (等于 (., “13”))
        赋值 (位, 相加 (位, 12))
        赋值 (., 取文本中间 (., 相加 (位, 125), 相减 (寻找文本 (., “ ”, 相加 (位, 125), 假), 相加 (位, 123))))
    .如果真结束
    .如果真 (等于 (., “14”))
        赋值 (位, 相加 (位, 13))
        赋值 (., 取文本中间 (., 相加 (位, 136), 相减 (寻找文本 (., “ ”, 相加 (位, 136), 假), 相加 (位, 134))))
    .如果真结束
    .如果真 (等于 (., “15”))
        赋值 (位, 相加 (位, 14))
        赋值 (., 取文本中间 (., 相加 (位, 147), 相减 (寻找文本 (., “ ”, 相加 (位, 147), 假), 相加 (位, 145))))
    .如果真结束
    .如果真 (等于 (., “16”))
        赋值 (位, 相加 (位, 15))
        赋值 (., 取文本中间 (., 相加 (位, 158), 相减 (寻找文本 (., “ ”, 相加 (位, 158), 假), 相加 (位, 156))))
    .如果真结束
    .如果真 (等于 (., “17”))
        赋值 (位, 相加 (位, 16))
        赋值 (., 取文本中间 (., 相加 (位, 169), 相减 (寻找文本 (., “ ”, 相加 (位, 169), 假), 相加 (位, 167))))
    .如果真结束
    .如果真 (等于 (., “18”))
        赋值 (位, 相加 (位, 17))
        
        赋值 (., 取文本中间 (., 相加 (位, 180), 相减 (寻找文本 (., “ ”, 相加 (位, 180), 假), 相加 (位, 178))))
    .如果真结束
    .如果真 (等于 (., “19”))
        赋值 (位, 相加 (位, 18))
        赋值 (., 取文本中间 (., 相加 (位, 191), 相减 (寻找文本 (., “ ”, 相加 (位, 191), 假), 相加 (位, 189))))
        
    .如果真结束
    .如果真 (等于 (., “20”))
        赋值 (位, 相加 (位, 19))
        赋值 (., 取文本中间 (., 相加 (位, 202), 相减 (寻找文本 (., “ ”, 相加 (位, 202), 假), 相加 (位, 200))))
    .如果真结束
    .如果真 (等于 (., “21”))
        赋值 (位, 相加 (位, 20))
        赋值 (., 取文本中间 (., 相加 (位, 213), 相减 (寻找文本 (., “ ”, 相加 (位, 213), 假), 相加 (位, 211))))
    .如果真结束
    .如果真 (等于 (., “22”))
        赋值 (位, 相加 (位, 2))
        赋值 (., 取文本中间 (., 相加 (位, 224), 相减 (寻找文本 (., “ ”, 相加 (位, 224), 假), 相加 (位, 222))))
    .如果真结束
    .如果真 (等于 (., “23”))
        赋值 (位, 相加 (位, 2))
        赋值 (., 取文本中间 (., 相加 (位, 235), 相减 (寻找文本 (., “ ”, 相加 (位, 235), 假), 相加 (位, 233))))
    .如果真结束
    .如果真 (等于 (., “24”))
        赋值 (位, 相加 (位, 2))
        赋值 (., 取文本中间 (., 相加 (位, 246), 相减 (寻找文本 (., “ ”, 相加 (位, 246), 假), 相加 (位, 244))))
    .如果真结束
    .如果真 (等于 (., “25”))
        赋值 (位, 相加 (位, 2))
        赋值 (., 取文本中间 (., 相加 (位, 257), 相减 (寻找文本 (., “ ”, 相加 (位, 257), 假), 相加 (位, 255))))
    .如果真结束
    .如果真 (等于 (., “26”))
        赋值 (位, 相加 (位, 2))
        赋值 (., 取文本中间 (., 相加 (位, 268), 相减 (寻找文本 (., “ ”, 相加 (位, 268), 假), 相加 (位, 266))))
    .如果真结束
    .如果真 (等于 (., “27”))
        赋值 (位, 相加 (位, 2))
        赋值 (., 取文本中间 (., 相加 (位, 279), 相减 (寻找文本 (., “ ”, 相加 (位, 279), 假), 相加 (位, 277))))
    .如果真结束
    
    
    
    
    
.如果真结束
.如果真 (等于 (取文本长度 (删首尾空 (.)), 3))
    .如果真 (等于 (., “1”))
        赋值 (., 取文本中间 (., 相加 (位, 1), 相减 (寻找文本 (., “ ”, 相加 (位, 1), 假), 相加 (位, 1))))
    .如果真结束
    .如果真 (等于 (., “2”))
        赋值 (位, 相加 (位, 2))
        赋值 (., 取文本中间 (., 相加 (位, 10), 相减 (寻找文本 (., “ ”, 相加 (位, 10), 假), 相加 (位, 8))))
    .如果真结束
    .如果真 (等于 (., “3”))
        赋值 (位, 相加 (位, 2))
        赋值 (., 取文本中间 (., 相加 (位, 21), 相减 (寻找文本 (., “ ”, 相加 (位, 21), 假), 相加 (位, 19))))
    .如果真结束
    .如果真 (等于 (., “4”))
        赋值 (位, 相加 (位, 3))
        赋值 (., 取文本中间 (., 相加 (位, 31), 相减 (寻找文本 (., “ ”, 相加 (位, 31), 假), 相加 (位, 29))))
    .如果真结束
    
.如果真结束

.如果真 (等于 (取文本长度 (删首尾空 (.)), 4))
    .如果真 (等于 (., “1”))
        赋值 (., 取文本中间 (., 相加 (位, 1), 相减 (寻找文本 (., “ ”, 相加 (位, 1), 假), 相加 (位, 1))))
    .如果真结束
    .如果真 (等于 (., “2”))
        赋值 (位, 相加 (位, 2))
        赋值 (., 取文本中间 (., 相加 (位, 10), 相减 (寻找文本 (., “ ”, 相加 (位, 10), 假), 相加 (位, 8))))
    .如果真结束
    .如果真 (等于 (., “3”))
        赋值 (位, 相加 (位, 2))
        赋值 (., 取文本中间 (., 相加 (位, 21), 相减 (寻找文本 (., “ ”, 相加 (位, 21), 假), 相加 (位, 19))))
    .如果真结束
    
.如果真结束
.如果真 (不等于 (., “”))
    赋值 (., 相加 (., 删首尾空 (.)))
.如果真结束


.子程序 _输入框_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.判断开始 (等于 (键代码, #回车键))
    赋值 (., “”)
.默认
    
.判断结束
.判断开始 (等于 (键代码, 32))
    赋值 (., “1”)
    赋值 (., “”)
.默认
    
.判断结束
.判断开始 (等于 (键代码, #键1))
    赋值 (., “1”)
    赋值 (., “”)
.默认
    
.判断结束
.判断开始 (等于 (键代码, #键2))
    赋值 (., “2”)
    赋值 (., “”)
.默认
    
.判断结束
.判断开始 (等于 (键代码, #键3))
    赋值 (., “3”)
    赋值 (., “”)
.默认
    
.判断结束
.判断开始 (等于 (键代码, #键4))
    赋值 (., “4”)
    赋值 (., “”)
.默认
    
.判断结束
.判断开始 (等于 (键代码, #键5))
    赋值 (., “5”)
    赋值 (., “”)
.默认
    
.判断结束
.判断开始 (等于 (键代码, #键6))
    赋值 (., “6”)
    赋值 (., “”)
.默认
    
.判断结束
.判断开始 (等于 (键代码, #键7))
    赋值 (., “7”)
    赋值 (., “”)
    
.默认
    
.判断结束
.判断开始 (等于 (键代码, #键8))
    赋值 (., “8”)
    赋值 (., “”)
.默认
    
.判断结束
.判断开始 (等于 (键代码, #键9))
    赋值 (., “9”)
    赋值 (., “”)
.默认
    
.判断结束


.子程序 _时钟1_周期事件, 空白型, , 
.如果真 (等于 (测试开始, 假))
    标签7.标题 ＝ “开始时间：” ＋ 到文本 (取现行时间 ())
    赋值 (., 相加 (“开始时间：”, 时间到文本 (取现行时间 (), #时间部分)))
    赋值 (., 到文本 (取现行时间 ()))
.如果真结束
.如果真 (等于 (测试开始, 真))
    标签7.标题 ＝ “开始时间：” ＋ 到文本 (取现行时间 ())
    赋值 (., 相加 (“当前时间：”, 时间到文本 (取现行时间 (), #时间部分)))
    赋值 (., 相加 (“秒数：”, 到文本 (取时间间隔 (取现行时间 (), 到时间 (.), #秒))))
    赋值 (., 到文本 (取时间间隔 (取现行时间 (), 到时间 (.), #秒)))
    .如果真 (等于 (到数值 (.), 1))
        赋值 (加权, 50)
    .如果真结束
    .如果真 (等于 (到数值 (.), 2))
        赋值 (加权, 40)
    .如果真结束
    .如果真 (等于 (到数值 (.), 3))
        赋值 (加权, 30)
    .如果真结束
    .如果真 (等于 (到数值 (.), 4))
        赋值 (加权, 20)
    .如果真结束
    .如果真 (等于 (到数值 (.), 5))
        赋值 (加权, 10)
    .如果真结束
    .如果真 (等于 (到数值 (.), 6))
        赋值 (加权, 0)
    .如果真结束
    
    赋值 (., 相加 (“速度：”, 到文本 (绝对取整 (相加 (相除 (相乘 (取文本长度 (.), 30), 到数值 (.)), 加权))), “ 字/分钟”))
    
.如果真结束



.子程序 _大编辑框_字符输入, 整数型, , 
.参数 字符代码, 整数型, , 

.局部变量 汉字, 文本型, 静态, "10", 
.局部变量 返回的字词, 文本型, , "0", 

大编辑框.起始选择位置 ＝ 大编辑框.起始选择位置 ＋ 2
赋值 (., 到文本 (字符代码))
.如果 (并且 (等于 (五笔字型开关, 真), 并且 (大于或等于 (字符代码, 97), 小于或等于 (字符代码, 122)))) ' 97-122为英文小写字母亲键,32为空格键
    赋值 (., 到小写 (相加 (., 字符 (字符代码))))
    返回 (0)
.否则
    
.如果结束

.如果真 (并且 (等于 (五笔字型开关, 真), 等于 (字符代码, 13))) ' 97-122为英文小写字母亲键,32为空格键
    .如果 (大于 (取文本长度 (删全部空 (.)), 0))
        赋值 (., “”)
        返回 (0)
    .否则
        返回 (13)
    .如果结束
    
.如果真结束

.如果真 (或者 (等于 (取文本长度 (删全部空 (.)), 0), 等于 (取文本长度 (删全部空 (.)), 0)))
    返回 (字符代码)
.如果真结束


.如果真 (并且 (等于 (五笔字型开关, 真), 等于 (字符代码, 27))) ' 97-122为英文小写字母亲键,32为空格键  27是ESC键
    .如果 (大于 (取文本长度 (删全部空 (.)), 0))
        赋值 (., “”)
        返回 (0)
    .否则
        返回 (27)
    .如果结束
    
.如果真结束

.如果真 (并且 (等于 (五笔字型开关, 真), 等于 (字符代码, 8))) ' 97-122为英文小写字母亲键,32为空格键  8是退位键
    .如果 (大于 (取文本长度 (删全部空 (.)), 0))
        赋值 (., 取文本中间 (., 1, 相减 (取文本长度 (删全部空 (.)), 1)))
        返回 (0)
    .否则
        返回 (8)
    .如果结束
    
.如果真结束

如果真（）

.如果真 (并且 (等于 (五笔字型开关, 真), 或者 (等于 (字符代码, 32), 等于 (字符代码, 49)))) ' 97-122为英文小写字母亲键,32为空格键
    .如果真 (等于 (取五笔字 (., 返回的字词), 真))
        ？？？？？？？？？？？？？？
        赋值 (., 删除英文 (返回的字词 [1]))
    .如果真结束
    赋值 (., “”)
    返回 (0)
.如果真结束

.如果 (并且 (等于 (五笔字型开关, 真), 等于 (字符代码, 50))) ' 48-57表示0123456789
    .如果真 (等于 (取五笔字 (., 返回的字词), 真))
        赋值 (., 删除英文 (返回的字词 [2]))
    .如果真结束
    赋值 (., “”)
    返回 (0)
.否则
    
.如果结束

.如果 (并且 (等于 (五笔字型开关, 真), 等于 (字符代码, 51))) ' 48-57表示0123456789
    .如果真 (等于 (取五笔字 (., 返回的字词), 真))
        赋值 (., 删除英文 (返回的字词 [3]))
    .如果真结束
    赋值 (., “”)
    返回 (0)
.否则
    
.如果结束

.如果 (并且 (等于 (五笔字型开关, 真), 等于 (字符代码, 52))) ' 48-57表示0123456789
    .如果真 (等于 (取五笔字 (., 返回的字词), 真))
        赋值 (., 删除英文 (返回的字词 [4]))
    .如果真结束
    赋值 (., “”)
    返回 (0)
.否则
    
.如果结束

.如果 (并且 (等于 (五笔字型开关, 真), 等于 (字符代码, 53))) ' 48-57表示0123456789
    .如果真 (等于 (取五笔字 (., 返回的字词), 真))
        赋值 (., 删除英文 (返回的字词 [5]))
    .如果真结束
    赋值 (., “”)
    返回 (0)
.否则
    
.如果结束

.如果 (并且 (等于 (五笔字型开关, 真), 等于 (字符代码, 54))) ' 48-57表示0123456789
    .如果真 (等于 (取五笔字 (., 返回的字词), 真))
        赋值 (., 删除英文 (返回的字词 [6]))
    .如果真结束
    赋值 (., “”)
    返回 (0)
.否则
    
.如果结束

.如果 (并且 (等于 (五笔字型开关, 真), 等于 (字符代码, 55))) ' 48-57表示0123456789
    .如果真 (等于 (取五笔字 (., 返回的字词), 真))
        赋值 (., 删除英文 (返回的字词 [7]))
    .如果真结束
    赋值 (., “”)
    返回 (0)
.否则
    
.如果结束

.如果 (并且 (等于 (五笔字型开关, 真), 等于 (字符代码, 56))) ' 48-57表示0123456789
    .如果真 (等于 (取五笔字 (., 返回的字词), 真))
        赋值 (., 删除英文 (返回的字词 [8]))
    .如果真结束
    赋值 (., “”)
    返回 (0)
.否则
    
.如果结束

.如果 (并且 (等于 (五笔字型开关, 真), 等于 (字符代码, 57))) ' 48-57表示0123456789
    .如果真 (等于 (取五笔字 (., 返回的字词), 真))
        赋值 (., 删除英文 (返回的字词 [9]))
    .如果真结束
    赋值 (., “”)
    返回 (0)
.否则
    
.如果结束


.子程序 删除英文, 文本型, , 65-90-97-122
.参数 要处理的内容, 文本型, , 

.局部变量 I, 整数型, , , 

.如果真 (等于 (要处理的内容, “”))
    返回 (“”)
.如果真结束
赋值 (I, 1)
赋值 (要处理的内容, 删全部空 (要处理的内容))
.计次循环首 (26, I)
    赋值 (要处理的内容, 子文本替换 (要处理的内容, 字符 (相加 (64, I)), “”, , , 假))
.计次循环尾 ()
.计次循环首 (26, I)
    赋值 (要处理的内容, 子文本替换 (要处理的内容, 字符 (相加 (96, I)), “”, , , 假))
.计次循环尾 ()
返回 (要处理的内容)


.子程序 _选择框1_被单击, 空白型, , 
.如果 (等于 (., 真))
    赋值 (五笔字型开关, 真)
.否则
    赋值 (五笔字型开关, 假)
.如果结束
获取焦点 ()

.子程序 _输入框_获得焦点, 空白型, , 
获取焦点 ()

.子程序 _标签1_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

弹出菜单 ()

.子程序 _标签1_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果 (等于 (., “多能五笔”))
    赋值 (., “英文数字”)
    赋值 (五笔字型开关, 假)
.否则
    赋值 (., “多能五笔”)
    赋值 (五笔字型开关, 真)
.如果结束
获取焦点 ()


.子程序 _标签3_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果 (等于 (., “全”))
    赋值 (., “半”)
.否则
    赋值 (., “全”)
.如果结束
获取焦点 ()


.子程序 _大编辑框_内容被改变, 空白型, , 
赋值 (测试开始, 真)
赋值 (., 相加 (“打字数：”, 到文本 (取文本长度 (.))))


 ' 不属于任何一个程序集、类模块的函数：
