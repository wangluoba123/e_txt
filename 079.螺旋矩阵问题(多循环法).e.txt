 ' 文件类型：Windows窗口程序

 ' 程序名称：易语言经典算法 - 求n阶螺旋矩阵问题
 ' 程序描述：　　求n阶螺旋矩阵问题。
 ' 程序作者：大有吴涛易语言软件公司
 ' 邮政编码：116001
 ' 联系地址：辽宁省大连市中山区人民路55号亚太国际金融中心
 ' 联系电话：+86(0411)88995831
 ' 传真号码：+86(0411)88995834
 ' 电子信箱：service@dywt.com.cn
 ' 主页地址：http://www.dywt.com.cn
 ' 版权声明：祝您一帆风顺，心想事成！
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 405
    高度 = 288
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “易语言经典算法 - 求n阶螺旋矩阵问题”
    帮助文件名 = “”





 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 4 系统核心支持库
 ' iext3 {B6F7542F-B8FE-46a8-9605-98856A687097} 2 0 扩展界面支持库三





.窗口程序集 启动窗口程序集, , , 

.程序集变量 轮换阶数, 整数型, , , 
.程序集变量 一级标甲, 整数型, , , 
.程序集变量 一级标乙, 整数型, , , 
.程序集变量 二级标甲, 整数型, , , 
.程序集变量 二级标乙, 整数型, , , 
.程序集变量 三级标甲, 整数型, , , 
.程序集变量 三级标乙, 整数型, , , 
.程序集变量 结果组数, 整数型, , "0", 
.程序集变量 临时数, 整数型, , , 
.程序集变量 结果字符串, 文本型, , , 
.子程序 __启动窗口_创建完毕, 空白型, , 
 ' 使用算法：循环
 ' 问题：螺旋矩阵问题
 ' 问题描述：求n阶螺旋矩阵问题。
 ' 问题分析：求n阶螺旋矩阵问题。多重循环实现。矩阵元素按照从1到n螺旋递增
 ' 例如：
 ' 01,02,03,
 ' 08,09,04,
 ' 07,06,05,
 ' 备注：


.子程序 _计算图形按钮_被单击, 空白型, , 
赋值 (结果字符串, “”)
赋值 (.内容, “”)
赋值 (轮换阶数, 到数值 (.内容))
.如果 (或者 (大于或等于 (轮换阶数, 100), 小于或等于 (轮换阶数, 0)))
    信息框 (“阶数超出范围！”, 0, )
.否则
    重定义数组 (结果组数, 假, 相加 (轮换阶数, 1), 相加 (轮换阶数, 1))
    .变量循环首 (1, 相加 (轮换阶数, 1), 1, 一级标甲)
        .变量循环首 (1, 相加 (轮换阶数, 1), 1, 一级标乙)
            赋值 (结果组数 [一级标甲] [一级标乙], 0)
        .变量循环尾 ()
    .变量循环尾 ()
     ' 临时数初始值为1
    赋值 (临时数, 1)
     ' 各个级标初始值为零
    连续赋值 (0, 一级标甲, 一级标乙, 二级标甲, 二级标乙, 三级标甲, 三级标乙)
     ' 如果临时值小于轮换阶数平方
    .判断循环首 (小于或等于 (临时数, 相乘 (轮换阶数, 轮换阶数)))
        赋值 (一级标乙, 二级标乙)
        .判断循环首 (并且 (小于 (一级标乙, 相减 (轮换阶数, 二级标乙)), 小于或等于 (临时数, 相乘 (轮换阶数, 轮换阶数))))
            赋值 (结果组数 [相加 (一级标甲, 1)] [相加 (一级标乙, 1)], 临时数)
             ' 临时数自增
            赋值 (临时数, 相加 (临时数, 1))
             ' 一级标乙自增
            赋值 (一级标乙, 相加 (一级标乙, 1))
        .判断循环尾 ()
        赋值 (二级标乙, 相加 (二级标乙, 1))
        赋值 (一级标乙, 相减 (一级标乙, 1))
        .变量循环首 (相加 (二级标甲, 1), 相减 (轮换阶数, 二级标甲, 1), 1, 一级标甲)
            赋值 (结果组数 [相加 (一级标甲, 1)] [相加 (一级标乙, 1)], 临时数)
             ' 临时数自增
            赋值 (临时数, 相加 (临时数, 1))
        .变量循环尾 ()
        赋值 (二级标甲, 相加 (二级标甲, 1))
        赋值 (一级标甲, 相减 (一级标甲, 1))
        
        赋值 (一级标乙, 相减 (一级标乙, 1))
        .判断循环首 (并且 (大于或等于 (一级标乙, 三级标乙), 小于或等于 (临时数, 相乘 (轮换阶数, 轮换阶数))))
            赋值 (结果组数 [相加 (一级标甲, 1)] [相加 (一级标乙, 1)], 临时数)
             ' 临时数自增
            赋值 (临时数, 相加 (临时数, 1))
            赋值 (一级标乙, 相减 (一级标乙, 1))
        .判断循环尾 ()
         ' 三级标乙 自增
        赋值 (三级标乙, 相加 (三级标乙, 1))
         ' 一级标乙 自增
        赋值 (一级标乙, 相加 (一级标乙, 1))
        .变量循环首 (相减 (一级标甲, 1), 相加 (三级标甲, 1), -1, 一级标甲)
            赋值 (结果组数 [相加 (一级标甲, 1)] [相加 (一级标乙, 1)], 临时数)
             ' 临时数自增
            赋值 (临时数, 相加 (临时数, 1))
        .变量循环尾 ()
         ' 三级标甲 自增
        赋值 (三级标甲, 相加 (三级标甲, 1))
         ' 一级标甲 自增
        赋值 (一级标甲, 相加 (一级标甲, 1))
    .判断循环尾 ()
    .变量循环首 (0, 相减 (轮换阶数, 1), 1, 一级标甲)
        .变量循环首 (0, 相减 (轮换阶数, 1), 1, 一级标乙)
             ' 循环求解果
            赋值 (结果字符串, 相加 (结果字符串, 选择 (小于 (结果组数 [相加 (一级标甲, 1)] [相加 (一级标乙, 1)], 10), 相加 (“0”, 到文本 (结果组数 [相加 (一级标甲, 1)] [相加 (一级标乙, 1)])), 到文本 (结果组数 [相加 (一级标甲, 1)] [相加 (一级标乙, 1)])), “,”))
        .变量循环尾 ()
        赋值 (结果字符串, 相加 (结果字符串, #换行符))
    .变量循环尾 ()
    赋值 (.内容, 结果字符串)
.如果结束



 ' 不属于任何一个程序集、类模块的函数：
