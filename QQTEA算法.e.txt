 ' 文件类型：Windows模块源码

 ' 程序名称：QQTEA算法
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0





 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 5 0 系统核心支持库
 ' dp1 4BB4003860154917BC7D8230BF4FA58A 2 0 数据操作支持库一





.DLL命令 _UTF8生成, 整数型, "", "WideCharToMultiByte", , 
    .参数 CodePage, 整数型, , CP_ACP CP_UTF8
    .参数 dwFlags, 整数型, , 
    .参数 lpWideCharStr, 文本型, , 
    .参数 cchWideChar, 整数型, , 
    .参数 lpMultiByteStr, 文本型, , 
    .参数 cbMultiByte, 整数型, , 
    .参数 lpDefaultChar, 整数型, , 
    .参数 lpUsedDefaultChar, 整数型, , 

.DLL命令 _字符编码, 整数型, "", "MultiByteToWideChar", , 
    .参数 CodePage, 整数型, , CP_ACP CP_UTF8
    .参数 dwFlags, 整数型, , 
    .参数 lpWideCharStr, 文本型, , 
    .参数 cchWideChar, 整数型, , 
    .参数 lpMultiByteStr, 文本型, , 
    .参数 cbMultiByte, 整数型, , 

.DLL命令 _编码转换, 整数型, "", "WideCharToMultiByte", , 
    .参数 CodePage, 整数型, , CP_ACP CP_UTF8
    .参数 dwFlags, 整数型, , 
    .参数 lpWideCharStr, 文本型, , 
    .参数 cchWideChar, 整数型, , 
    .参数 lpMultiByteStr, 整数型, , 
    .参数 cbMultiByte, 整数型, , 
    .参数 lpDefaultChar, 整数型, , 
    .参数 lpUsedDefaultChar, 整数型, , 

.DLL命令 _取目标编码长度, 整数型, "", "MultiByteToWideChar", , 
    .参数 CodePage, 整数型, , CP_ACP CP_UTF8
    .参数 dwFlags, 整数型, , 
    .参数 lpWideCharStr, 文本型, , 
    .参数 cchWideChar, 整数型, , 
    .参数 lpMultiByteStr, 整数型, , 
    .参数 cbMultiByte, 整数型, , 

.DLL命令 十六进制转十进制_, 整数型, "shlwapi.dll", "StrToIntExA", , 公开, StrToIntExA 成功返回1(非0) 失败返回0 可以判断是不是输入的不是 O到9  A到F
    .参数 转换文本, 文本型, , pszString  “0x” ＋ 转换文本    pszString  一般为 如果标志为0的话 则直接填写 转换文本 如果标志为1的话 转换文本="0x"+转换文本
    .参数 标志, 整数型, , dwFlags    1     dwFlags 标志为0则为10进制 标志为1则为十六进制
    .参数 返回值, 整数型, 传址, piRet       得到的10进制

.DLL命令 网络通讯异步选择_, 整数型, "ws2_32.dll", "WSAAsyncSelect", 公开, ,
    .参数 套接字句柄, 整数型, , s
    .参数 窗口句柄, 整数型, , hWnd
    .参数 消息值, 整数型, , wMsg
    .参数 事件, 整数型, , lEvent

.DLL命令 SetWindowLong, 整数型, "user32", "SetWindowLongA", 公开, 在窗口结构中为指定的窗口设置信息　指定数据的前一个值
    .参数 hwnd, 整数型, , 欲为其取得信息的窗口的句柄
    .参数 nIndex, 整数型, , 请参考GetWindowLong函数的nIndex参数的说明
    .参数 dwNewLong, 整数型, , 由nIndex指定的窗口信息的新值;

.DLL命令 CallWindowProc, 整数型, "user32", "CallWindowProcA", 公开, 将消息传答窗口函数　
    .参数 lpPrevWndFunc, 整数型, , 
    .参数 hwnd, 整数型, , 
    .参数 msg, 整数型, , 
    .参数 wParam, 整数型, , 
    .参数 lParam, 整数型, , 

.程序集 程序集1, , , 

.子程序 _启动子程序, 整数型, , 请在本子程序中放置易模块初始化代码

_临时子程序 () ' 在初始化代码执行完毕后调用测试代码
返回 (0) ' 可以根据您的需要返回任意数值

.子程序 _临时子程序, 空白型, , 
 ' 本名称子程序用作测试程序用，仅在开发及调试环境中有效，编译发布程序前将被系统自动清空，请将所有用作测试的临时代码放在本子程序中。 ***注意不要修改本子程序的名称、参数及返回值类型。


.子程序 字符编码, 文本型, , 
.参数 文本, 文本型, , 
.参数 源编码, 整数型, , #CP_ACP #CP_UTF8
.参数 目标编码, 整数型, , #CP_ACP #CP_UTF8

.局部变量 Len, 整数型, , , 
.局部变量 r, 整数型, , , 
.局部变量 目标文本, 文本型, , , 
.局部变量 szUnicode, 文本型, , , 

赋值 (Len, 相乘 (_取目标编码长度 (源编码, 0, 文本, -1, 0, 0), 2))
赋值 (szUnicode, 取空白文本 (Len))
 ' 转换为 UNICODE
_字符编码 (源编码, 0, 文本, -1, szUnicode, Len)
赋值 (Len, _编码转换 (目标编码, 0, szUnicode, -1, 0, 0, 0, 0))
赋值 (目标文本, 取空白文本 (Len))
 ' 转换为目标编码
_UTF8生成 (目标编码, 0, szUnicode, -1, 目标文本, Len, 0, 0)
返回 (目标文本)

.子程序 utf8到文本, 文本型, , 
.参数 utf8, 文本型, , 

返回 (字符编码 (utf8, 65001, 0))

.子程序 文本到utf8, 文本型, , 
.参数 文本, 文本型, , 

返回 (字符编码 (文本, 0, 65001))


.子程序 MD5, 文本型, , 返回十六
.参数 字节集, 字节集, , 

.局部变量 a, 文本型, , , 
.局部变量 i, 整数型, , , 
.局部变量 b, 文本型, , , 

赋值 (a, 未知支持库函数_2 (字节集))
.计次循环首 (相除 (取文本长度 (a), 2), i)
    赋值 (b, 相加 (b, 取文本中间 (a, 相减 (相乘 (i, 2), 1), 2), “ ”))
    
.计次循环尾 ()
返回 (b)

.子程序 字节集到十六, 文本型, , 
.参数 字节集, 字节集, 参考, 

.局部变量 长度, 空白型, , , 
.局部变量 i, 整数型, , , 
.局部变量 文本, 文本型, , , 
.局部变量 字节, 文本型, , , 

赋值 (长度, 取字节集长度 (字节集))
.计次循环首 (长度, i)
    赋值 (字节, 到小写 (取十六进制文本 (到整数 (取字节集数据 (字节集, #字节型, i)))))
    .如果真 (小于 (取文本长度 (字节), 2))
        赋值 (字节, 相加 (“0”, 字节))
    .如果真结束
    赋值 (文本, 相加 (文本, 字节, “ ”))
.计次循环尾 ()
返回 (文本)

.子程序 十六到字节集, 字节集, , 
.参数 文本, 文本型, 参考, 

.局部变量 文本数组, 文本型, , "0", 
.局部变量 i, 整数型, , , 
.局部变量 十六, 文本型, , , 
.局部变量 结果, 整数型, , , 
.局部变量 字节数组, 字节型, , "0", 


赋值 (文本数组, 分割文本 (文本, “ ”, ))
.计次循环首 (取数组成员数 (文本数组), i)
    赋值 (十六, 相加 (“0x”, 文本数组 [i]))
    十六进制转十进制_ (十六, 1, 结果)
    加入成员 (字节数组, 到字节 (结果))
.计次循环尾 ()
返回 (到字节集 (字节数组))


.子程序 字节集到数组, 空白型, , 
.参数 参_字节集, 字节集, 参考, 
.参数 参_字节型数组, 字节型, 参考 数组, 

.局部变量 局_i, 空白型, , , 

重定义数组 (参_字节型数组, 假, 取字节集长度 (参_字节集))
.计次循环首 (取字节集长度 (参_字节集), 局_i)
    赋值 (参_字节型数组 [局_i], 参_字节集 [局_i])
.计次循环尾 ()

.子程序 翻转字节集, 字节集, , 
.参数 字节集, 字节集, , 

.局部变量 长度, 整数型, , , 
.局部变量 i, 整数型, , , 
.局部变量 字节数组, 字节型, , "0", 
.局部变量 结果, 字节集, , , 

赋值 (长度, 取字节集长度 (字节集))
字节集到数组 (字节集, 字节数组)

.计次循环首 (长度, i)
    
    
    赋值 (结果, 相加 (结果, 到字节集 (字节数组 [相加 (相减 (长度, i), 1)])))
    
.计次循环尾 ()
返回 (结果)

.子程序 四字节到ip, 文本型, , 
.参数 四字节, 字节集, 参考, 

.局部变量 ip1, 文本型, , , 
.局部变量 i, 整数型, , , 


.计次循环首 (4, i)
    
    赋值 (ip1, 相加 (ip1, 到文本 (到整数 (取字节集数据 (四字节, #字节型, i))), “.”))
    
.计次循环尾 ()
返回 (取文本左边 (ip1, 相减 (取文本长度 (ip1), 1)))

.子程序 四字节到整数, 整数型, , 
.参数 四字节, 字节集, , 

返回 (取字节集数据 (翻转字节集 (四字节), #整数型, 1))

.子程序 二字节到整数, 整数型, , 
.参数 二字节, 字节集, , 

返回 (到整数 (取字节集数据 (翻转字节集 (二字节), #短整数型, 1)))


.子程序 显示字节集, 文本型, , 
.参数 字节集, 字节集, 参考, 

.局部变量 长度, 整数型, , , 
.局部变量 i, 整数型, , , 
.局部变量 字节数组, 字节型, , "0", 
.局部变量 结果, 文本型, , , 

赋值 (长度, 取字节集长度 (字节集))
字节集到数组 (字节集, 字节数组)

.计次循环首 (长度, i)
    
    
    赋值 (结果, 相加 (结果, 到文本 (到整数 (字节数组 [i])), “,”))
    
.计次循环尾 ()
返回 (取文本左边 (结果, 相减 (取文本长度 (结果), 1)))


.子程序 一字节到整数, 整数型, , 
.参数 字节, 字节集, , 

返回 (到整数 (取字节集数据 (字节, #字节型, 1)))


.子程序 取随即字节集, 字节集, , 
.参数 长度, 空白型, , 

.局部变量 字节, 字节型, , "0", 

.计次循环首 (长度, )
    加入成员 (字节, 到字节 (取随机数 (0, 255)))
.计次循环尾 ()
返回 (到字节集 (字节))

.程序集 tea, , , 

.程序集变量 m_Plain, 字节型, , "8", 指向当前的明文块
.程序集变量 m_prePlain, 字节型, , "8", 指向前面一个明文块
.程序集变量 m_out, 字节型, , "0", 
.程序集变量 m_Crypt, 整数型, , , 
.程序集变量 m_preCrypt, 整数型, , , 当前加密的密文位置和上一次加密的密文块位置，他们相差8
.程序集变量 m_Pos, 长整数型, , , 当前处理的加密解密块的位置
.程序集变量 m_padding, 长整数型, , , 填充数
.程序集变量 m_Key, 字节型, , "16", 密钥
.程序集变量 m_Header, 逻辑型, , , 用于加密时，表示当前是否是第一个8字节块，因为加密算法是反馈的
.程序集变量 m_contextStart, 长整数型, , , 
.子程序 解密, 字节集, , 
.参数 加密内容, 字节集, , 带空格十六进制文本
.参数 密钥, 字节集, , 带空格十六进制文本

.局部变量 局_回传字节型数组, 字节型, 静态, "0", 
.局部变量 i, 空白型, , , 
.局部变量 局_返回的文本, 文本型, , , 
.局部变量 局_binfrom, 字节型, , "0", 
.局部变量 局_Key, 字节型, , "0", 


字节集到数组 (密钥, 局_Key)
字节集到数组 (加密内容, 局_binfrom)

UnHashTea (局_binfrom, 局_Key, 1, 真, 局_回传字节型数组)
返回 (到字节集 (局_回传字节型数组))





.子程序 加密, 字节集, , 
.参数 加密内容, 字节集, , 带空格十六进制文本
.参数 密钥, 字节集, , 带空格十六进制文本

.局部变量 局_回传字节型数组, 字节型, 静态, "0", 
.局部变量 i, 空白型, , , 
.局部变量 局_返回的文本, 文本型, , , 
.局部变量 局_binfrom, 字节型, , "0", 
.局部变量 局_Key, 字节型, , "0", 


字节集到数组 (密钥, 局_Key)
字节集到数组 (加密内容, 局_binfrom)

HashTea (局_binfrom, 局_Key, 1, 真, 局_回传字节型数组)
返回 (到字节集 (局_回传字节型数组))


.子程序 UnHashTea, 空白型, , 
.参数 binFrom, 字节型, 数组, 
.参数 binTkye, 字节型, 数组, 
.参数 offset, 空白型, , 起始位置，从1开始
.参数 is16Rounds, 逻辑型, , 
.参数 参_回传字节型数组, 字节型, 参考 数组, 

.局部变量 o_count, 空白型, , , 
.局部变量 o_m, 字节型, , "0", 
.局部变量 o_intLen, 空白型, , , 
.局部变量 i, 空白型, , , 
.局部变量 i2, 空白型, , , 

赋值 (m_Crypt, 0)
赋值 (m_preCrypt, 0)
赋值 (m_Key, binTkye)
重定义数组 (o_m, 假, 相加 (offset, 7))
赋值 (o_intLen, 取数组成员数 (binFrom))

Decipher (binFrom, m_Key, 真, m_prePlain)

赋值 (m_Pos, 位与 (m_prePlain [1], 7))
赋值 (o_count, 相减 (o_intLen, m_Pos, 10))
.变量循环首 (offset, 取数组成员数 (o_m), 1, i)
    赋值 (o_m [i], 0)
.变量循环尾 ()
重定义数组 (m_out, 假, o_count)

赋值 (m_preCrypt, 0)
赋值 (m_Crypt, 8)
赋值 (m_contextStart, 8)
赋值 (m_Pos, 相加 (m_Pos, 1))

赋值 (m_padding, 1)
.判断循环首 (小于或等于 (m_padding, 2))
    .如果真 (小于 (m_Pos, 8))
        赋值 (m_Pos, 相加 (m_Pos, 1))
        赋值 (m_padding, 相加 (m_padding, 1))
    .如果真结束
    
    .如果真 (等于 (m_Pos, 8))
        赋值 (o_m, binFrom)
        Decrypt8Bytes (binFrom, offset, o_intLen)
    .如果真结束
    
.判断循环尾 ()
赋值 (i2, 1)
.判断循环首 (不等于 (o_count, 0))
    .如果真 (小于 (m_Pos, 8))
        赋值 (m_out [i2], 位异或 (o_m [相加 (offset, m_preCrypt, m_Pos)], m_prePlain [相加 (m_Pos, 1)]))
        
        赋值 (i2, 相加 (i2, 1))
        赋值 (o_count, 相减 (o_count, 1))
        赋值 (m_Pos, 相加 (m_Pos, 1))
    .如果真结束
    
    .如果真 (等于 (m_Pos, 8))
        赋值 (o_m, binFrom)
        赋值 (m_preCrypt, 相减 (m_Crypt, 8))
        Decrypt8Bytes (binFrom, offset, o_intLen)
    .如果真结束
    
.判断循环尾 ()

.变量循环首 (1, 7, 1, i)
    .如果真 (小于 (m_Pos, 8))
        赋值 (m_Pos, 相加 (m_Pos, 1))
        
        .如果真 (等于 (m_Pos, 8))
            赋值 (o_m, binFrom)
            Decrypt8Bytes (binFrom, offset, o_intLen)
        .如果真结束
        
        
    .如果真结束
    
    
.变量循环尾 ()

赋值 (参_回传字节型数组, m_out)


.子程序 Decrypt8Bytes, 逻辑型, , 
.参数 input, 字节型, 数组, 
.参数 offset, 空白型, , 
.参数 intlen, 空白型, , 

.局部变量 i, 空白型, , , 

.变量循环首 (1, 8, 1, i)
    .如果真 (大于 (相加 (m_contextStart, i), intlen))
        返回 (真)
    .如果真结束
    
    赋值 (m_prePlain [i], 位异或 (m_prePlain [i], input [相减 (相加 (offset, m_Crypt, i), 1)]))
     ' 输出调试文本 (m_prePlain [i])
.变量循环尾 ()
Decipher (m_prePlain, m_Key, 真, m_prePlain)

.如果真 (等于 (取数组成员数 (m_prePlain), 0))
    返回 (假)
.如果真结束

赋值 (m_contextStart, 相加 (m_contextStart, 8))
赋值 (m_Crypt, 相加 (m_Crypt, 8))
赋值 (m_Pos, 0)
返回 (真)

.子程序 Decipher, 空白型, , 
.参数 BinInput, 字节型, 数组, 
.参数 BinKey, 字节型, 数组, 
.参数 Is16Rounds, 逻辑型, , 
.参数 参_回传字节型数组, 字节型, 参考 数组, 

.局部变量 sum, 长整数型, , , 
.局部变量 rounds, 空白型, , , 
.局部变量 y, 长整数型, , , 
.局部变量 z, 长整数型, , , 
.局部变量 a, 长整数型, , , 
.局部变量 b, 长整数型, , , 
.局部变量 c, 长整数型, , , 
.局部变量 d, 长整数型, , , 
.局部变量 i, 空白型, , , 
.局部变量 test, 长整数型, , , 

赋值 (sum, 3816266640)

赋值 (y, GetUInt (BinInput, 1, 4))

赋值 (z, GetUInt (BinInput, 5, 4))

赋值 (a, GetUInt (m_Key, 1, 4))

赋值 (b, GetUInt (m_Key, 5, 4))

赋值 (c, GetUInt (m_Key, 9, 4))

赋值 (d, GetUInt (m_Key, 13, 4))

.如果 (Is16Rounds)
    赋值 (rounds, 16)
.否则
    赋值 (rounds, 32)
.如果结束

.计次循环首 (rounds, i)
    赋值 (test, 长整型位异或 (长整型位异或 (相加 (长整型左移 (y, 4), c), 相加 (y, sum)), 相加 (长整型右移 (y, 5), d)))
    赋值 (z, 相减 (z, test))
    赋值 (z, 长整型位与 (z, 4294967295))
    赋值 (test, 长整型位异或 (长整型位异或 (相加 (长整型左移 (z, 4), a), 相加 (z, sum)), 相加 (长整型右移 (z, 5), b)))
    赋值 (y, 相减 (y, test))
    赋值 (y, 长整型位与 (y, 4294967295))
    赋值 (sum, 相减 (sum, 2654435769))
    赋值 (sum, 长整型位与 (sum, 4294967295))
.计次循环尾 ()
ToBytes (y, z, 参_回传字节型数组)

.子程序 GetUInt, 长整数型, , 
.参数 Input, 字节型, 数组, 
.参数 Ioffset, 空白型, , 
.参数 intLen, 空白型, , 

.局部变量 ret, 长整数型, , , 
.局部变量 lend, 空白型, , , 
.局部变量 i, 空白型, , , 

.如果 (大于 (intLen, 4))
    赋值 (lend, 相加 (Ioffset, 4))
.否则
    赋值 (lend, 相加 (Ioffset, intLen))
.如果结束

.变量循环首 (Ioffset, 相减 (lend, 1), 1, i)
    赋值 (ret, 左移 (ret, 8))
    赋值 (ret, 位或 (ret, Input [i]))
    
.变量循环尾 ()
返回 (到无符号长整型 (ret))

.子程序 ToBytes, 空白型, , '返回字节型数组的字节集
.参数 a, 长整数型, , 
.参数 b, 长整数型, , 
.参数 参_回传字节型数组, 字节型, 参考 数组, 

.局部变量 bytes, 字节型, , "8", 

赋值 (bytes [1], 位与 (右移 (a, 24), 255))
赋值 (bytes [2], 位与 (右移 (a, 16), 255))
赋值 (bytes [3], 位与 (右移 (a, 8), 255))
赋值 (bytes [4], 位与 (a, 255))
赋值 (bytes [5], 位与 (右移 (b, 24), 255))
赋值 (bytes [6], 位与 (右移 (b, 16), 255))
赋值 (bytes [7], 位与 (右移 (b, 8), 255))
赋值 (bytes [8], 位与 (b, 255))
赋值 (参_回传字节型数组, bytes)


.子程序 HashTea, 空白型, , 
.参数 binFrom, 字节型, 数组, 
.参数 binTkye, 字节型, 数组, 
.参数 offset, 空白型, , 起始位置，从1开始
.参数 is16Rounds, 逻辑型, , 
.参数 参_回传字节型数组, 字节型, 参考 数组, 

.局部变量 intlen, 空白型, , , 
.局部变量 i, 空白型, , , 
.局部变量 i2, 空白型, , , 

赋值 (m_Header, 真)
赋值 (m_Key, binTkye)
赋值 (m_Pos, 1)
赋值 (m_padding, 0)
赋值 (m_Crypt, 0)
赋值 (m_preCrypt, 0)
赋值 (intlen, 取数组成员数 (binFrom))
赋值 (m_Pos, 求余数 (相加 (intlen, 10), 8))
.如果真 (不等于 (m_Pos, 0))
    赋值 (m_Pos, 相减 (8, m_Pos))
.如果真结束

重定义数组 (m_out, 假, 相加 (intlen, m_Pos, 9, 1))
置随机数种子 ()

赋值 (m_Plain [1], 长整型位异或 (长整型位与 (取随机数 (1000, 5000), 248), m_Pos))

.计次循环首 (m_Pos, i)
    赋值 (m_Plain [相加 (i, 1)], 长整型位与 (取随机数 (1000, 5000), 255))
.计次循环尾 ()

.计次循环首 (8, i)
    赋值 (m_prePlain [i], 0)
.计次循环尾 ()

赋值 (m_Pos, 相加 (m_Pos, 1))
赋值 (m_padding, 1)

.循环判断首 ()
    .如果 (小于 (m_Pos, 8))
        赋值 (m_Plain [相加 (m_Pos, 1)], 长整型位与 (取随机数 (1000, 5000), 255))
        赋值 (m_Pos, 相加 (m_Pos, 1))
        赋值 (m_padding, 相加 (m_padding, 1))
    .否则
        Encrypt8Bytes (is16Rounds)
    .如果结束
    
.循环判断尾 (小于 (m_padding, 3))

赋值 (i2, offset)
.判断循环首 (大于 (intlen, 0))
    .如果 (小于 (m_Pos, 8))
        赋值 (m_Plain [相加 (m_Pos, 1)], binFrom [i2])
        赋值 (m_Pos, 相加 (m_Pos, 1))
        赋值 (intlen, 相减 (intlen, 1))
        赋值 (i2, 相加 (i2, 1))
    .否则
        Encrypt8Bytes (is16Rounds)
    .如果结束
    
    
.判断循环尾 ()

赋值 (m_padding, 1)
.判断循环首 (小于 (m_padding, 8))
    .如果真 (小于 (m_Pos, 8))
        赋值 (m_Plain [相加 (m_Pos, 1)], 0)
        赋值 (m_padding, 相加 (m_padding, 1))
        赋值 (m_Pos, 相加 (m_Pos, 1))
    .如果真结束
    
    .如果真 (等于 (m_Pos, 8))
        Encrypt8Bytes (is16Rounds)
    .如果真结束
    
.判断循环尾 ()


赋值 (参_回传字节型数组, m_out)


.子程序 Encrypt8Bytes, 空白型, , 
.参数 Is16Rounds, 逻辑型, , 

.局部变量 Crypted, 字节型, , "0", 
.局部变量 i, 空白型, , , 

赋值 (m_Pos, 1)
.计次循环首 (8, i)
    .如果 (m_Header)
        赋值 (m_Plain [i], 长整型位异或 (m_Plain [i], m_prePlain [1]))
    .否则
        赋值 (m_Plain [i], 长整型位异或 (m_Plain [i], m_out [相加 (m_preCrypt, i)]))
    .如果结束
    
.计次循环尾 ()
Encipher (m_Plain, m_Key, Is16Rounds, Crypted)
.计次循环首 (取数组成员数 (Crypted), i)
    赋值 (m_out [相加 (m_Crypt, i)], Crypted [i])
.计次循环尾 ()

.计次循环首 (8, i)
    赋值 (m_out [相加 (m_Crypt, i)], 长整型位异或 (m_out [相加 (m_Crypt, i)], m_prePlain [i]))
.计次循环尾 ()

.计次循环首 (取数组成员数 (m_Plain), i)
    赋值 (m_prePlain [i], m_Plain [i])
.计次循环尾 ()

赋值 (m_preCrypt, m_Crypt)
赋值 (m_Crypt, 相加 (m_Crypt, 8))
赋值 (m_Pos, 0)
赋值 (m_Header, 假)

.子程序 Encipher, 空白型, , 
.参数 BinInput, 字节型, 数组, 
.参数 k, 字节型, 数组, 
.参数 Is16Rounds, 逻辑型, , 
.参数 参_回传字节型数组, 字节型, 参考 数组, 

.局部变量 sum, 长整数型, , , 
.局部变量 rounds, 空白型, , , 
.局部变量 y, 长整数型, , , 
.局部变量 z, 长整数型, , , 
.局部变量 a, 长整数型, , , 
.局部变量 b, 长整数型, , , 
.局部变量 c, 长整数型, , , 
.局部变量 d, 长整数型, , , 
.局部变量 i, 空白型, , , 
.局部变量 test, 长整数型, , , 
.局部变量 匿名局部变量_161, 空白型, , , 

清除数组 (参_回传字节型数组)
赋值 (y, GetUInt (BinInput, 1, 4))
赋值 (z, GetUInt (BinInput, 5, 4))
赋值 (a, GetUInt (m_Key, 1, 4))
赋值 (b, GetUInt (m_Key, 5, 4))
赋值 (c, GetUInt (m_Key, 9, 4))
赋值 (d, GetUInt (m_Key, 13, 4))

.如果 (Is16Rounds)
    赋值 (rounds, 16)
.否则
    赋值 (rounds, 32)
.如果结束

.计次循环首 (rounds, i)
    赋值 (sum, 长整型位与 (sum, 4294967295))
    赋值 (sum, 相加 (sum, 2654435769))
    赋值 (z, 长整型位与 (z, 4294967295))
    赋值 (y, 相加 (y, 长整型位异或 (长整型位异或 (相加 (长整型左移 (z, 4), a), 相加 (z, sum)), 相加 (长整型右移 (z, 5), b))))
    赋值 (y, 长整型位与 (y, 4294967295))
    赋值 (z, 相加 (z, 长整型位异或 (长整型位异或 (相加 (长整型左移 (y, 4), c), 相加 (y, sum)), 相加 (长整型右移 (y, 5), d))))
    
.计次循环尾 ()

ToBytes (y, z, 参_回传字节型数组)

.子程序 长整型位异或, 长整数型, , 长整数的XOR
.参数 x, 长整数型, , 
.参数 y, 长整数型, , 

.局部变量 t1, 字节集, , , 
.局部变量 t2, 字节集, , , 
.局部变量 t3, 字节集, , , 
.局部变量 i, 空白型, , , 
.局部变量 temp, 长整数型, , , 

赋值 (t1, 到字节集 (x))
赋值 (t2, 到字节集 (y))
赋值 (t3, 取空白字节集 (8))
.计次循环首 (8, i)
    赋值 (t3 [i], 位异或 (t1 [i], t2 [i]))
.计次循环尾 ()
赋值 (temp, 取字节集数据 (t3, #长整数型, 1))
返回 (temp)


.子程序 长整型位与, 长整数型, , 长整数的AND
.参数 x, 长整数型, , 
.参数 y, 长整数型, , 

.局部变量 t1, 字节集, , , 
.局部变量 t2, 字节集, , , 
.局部变量 t3, 字节集, , , 
.局部变量 i, 空白型, , , 
.局部变量 temp, 长整数型, , , 

赋值 (t1, 到字节集 (x))
赋值 (t2, 到字节集 (y))
赋值 (t3, 取空白字节集 (8))
.计次循环首 (8, i)
    赋值 (t3 [i], 位与 (t1 [i], t2 [i]))
.计次循环尾 ()
赋值 (temp, 取字节集数据 (t3, #长整数型, 1))
返回 (temp)


.子程序 长整型右移, 长整数型, , 右移
.参数 x, 长整数型, , 
.参数 n, 空白型, , 

.计次循环首 (n, )
    赋值 (x, 相除 (x, 2))
.计次循环尾 ()
返回 (x)


.子程序 长整型左移, 长整数型, , 左移
.参数 x, 长整数型, , 
.参数 n, 空白型, , 

.计次循环首 (n, )
    赋值 (x, 相乘 (x, 2))
.计次循环尾 ()
返回 (x)

.子程序 到无符号长整型, 长整数型, , 
.参数 long, 整数型, , 

置入代码 ({ 139, 69, 8, 51, 210, 201, 194, 4, 0 })

返回 (0)

.类模块 TEA算法, , , 

.程序集变量 m_Plain, 字节型, , "8", 指向当前的明文块
.程序集变量 m_prePlain, 字节型, , "8", 指向前面一个明文块
.程序集变量 m_out, 字节型, , "0", 
.程序集变量 m_Crypt, 整数型, , , 
.程序集变量 m_preCrypt, 整数型, , , 当前加密的密文位置和上一次加密的密文块位置，他们相差8
.程序集变量 m_Pos, 长整数型, , , 当前处理的加密解密块的位置
.程序集变量 m_padding, 长整数型, , , 填充数
.程序集变量 m_Key, 字节型, , "16", 密钥
.程序集变量 m_Header, 逻辑型, , , 用于加密时，表示当前是否是第一个8字节块，因为加密算法是反馈的
.程序集变量 m_contextStart, 长整数型, , , 
.子程序 解密, 字节集, , 
.参数 加密内容, 字节集, , 带空格十六进制文本
.参数 密钥, 字节集, , 带空格十六进制文本

.局部变量 局_回传字节型数组, 字节型, 静态, "0", 
.局部变量 i, 空白型, , , 
.局部变量 局_返回的文本, 文本型, , , 
.局部变量 局_binfrom, 字节型, , "0", 
.局部变量 局_Key, 字节型, , "0", 


字节集到数组 (密钥, 局_Key)
字节集到数组 (加密内容, 局_binfrom)

UnHashTea (局_binfrom, 局_Key, 1, 真, 局_回传字节型数组)
返回 (到字节集 (局_回传字节型数组))





.子程序 加密, 字节集, 公开, 
.参数 加密内容, 字节集, , 带空格十六进制文本
.参数 密钥, 字节集, , 带空格十六进制文本

.局部变量 局_回传字节型数组, 字节型, 静态, "0", 
.局部变量 i, 空白型, , , 
.局部变量 局_返回的文本, 文本型, , , 
.局部变量 局_binfrom, 字节型, , "0", 
.局部变量 局_Key, 字节型, , "0", 


字节集到数组 (密钥, 局_Key)
字节集到数组 (加密内容, 局_binfrom)

HashTea (局_binfrom, 局_Key, 1, 真, 局_回传字节型数组)
返回 (到字节集 (局_回传字节型数组))


.子程序 UnHashTea, 空白型, , 
.参数 binFrom, 字节型, 数组, 
.参数 binTkye, 字节型, 数组, 
.参数 offset, 空白型, , 起始位置，从1开始
.参数 is16Rounds, 逻辑型, , 
.参数 参_回传字节型数组, 字节型, 参考 数组, 

.局部变量 o_count, 空白型, , , 
.局部变量 o_m, 字节型, , "0", 
.局部变量 o_intLen, 空白型, , , 
.局部变量 i, 空白型, , , 
.局部变量 i2, 空白型, , , 

赋值 (m_Crypt, 0)
赋值 (m_preCrypt, 0)
赋值 (m_Key, binTkye)
重定义数组 (o_m, 假, 相加 (offset, 7))
赋值 (o_intLen, 取数组成员数 (binFrom))

Decipher (binFrom, m_Key, 真, m_prePlain)

赋值 (m_Pos, 位与 (m_prePlain [1], 7))
赋值 (o_count, 相减 (o_intLen, m_Pos, 10))
.变量循环首 (offset, 取数组成员数 (o_m), 1, i)
    赋值 (o_m [i], 0)
.变量循环尾 ()
重定义数组 (m_out, 假, o_count)

赋值 (m_preCrypt, 0)
赋值 (m_Crypt, 8)
赋值 (m_contextStart, 8)
赋值 (m_Pos, 相加 (m_Pos, 1))

赋值 (m_padding, 1)
.判断循环首 (小于或等于 (m_padding, 2))
    .如果真 (小于 (m_Pos, 8))
        赋值 (m_Pos, 相加 (m_Pos, 1))
        赋值 (m_padding, 相加 (m_padding, 1))
    .如果真结束
    
    .如果真 (等于 (m_Pos, 8))
        赋值 (o_m, binFrom)
        Decrypt8Bytes (binFrom, offset, o_intLen)
    .如果真结束
    
.判断循环尾 ()
赋值 (i2, 1)
.判断循环首 (不等于 (o_count, 0))
    .如果真 (小于 (m_Pos, 8))
        赋值 (m_out [i2], 位异或 (o_m [相加 (offset, m_preCrypt, m_Pos)], m_prePlain [相加 (m_Pos, 1)]))
        
        赋值 (i2, 相加 (i2, 1))
        赋值 (o_count, 相减 (o_count, 1))
        赋值 (m_Pos, 相加 (m_Pos, 1))
    .如果真结束
    
    .如果真 (等于 (m_Pos, 8))
        赋值 (o_m, binFrom)
        赋值 (m_preCrypt, 相减 (m_Crypt, 8))
        Decrypt8Bytes (binFrom, offset, o_intLen)
    .如果真结束
    
.判断循环尾 ()

.变量循环首 (1, 7, 1, i)
    .如果真 (小于 (m_Pos, 8))
        赋值 (m_Pos, 相加 (m_Pos, 1))
        
        .如果真 (等于 (m_Pos, 8))
            赋值 (o_m, binFrom)
            Decrypt8Bytes (binFrom, offset, o_intLen)
        .如果真结束
        
        
    .如果真结束
    
    
.变量循环尾 ()

赋值 (参_回传字节型数组, m_out)


.子程序 Decrypt8Bytes, 逻辑型, , 
.参数 input, 字节型, 数组, 
.参数 offset, 空白型, , 
.参数 intlen, 空白型, , 

.局部变量 i, 空白型, , , 

.变量循环首 (1, 8, 1, i)
    .如果真 (大于 (相加 (m_contextStart, i), intlen))
        返回 (真)
    .如果真结束
    
    赋值 (m_prePlain [i], 位异或 (m_prePlain [i], input [相减 (相加 (offset, m_Crypt, i), 1)]))
     ' 输出调试文本 (m_prePlain [i])
.变量循环尾 ()
Decipher (m_prePlain, m_Key, 真, m_prePlain)

.如果真 (等于 (取数组成员数 (m_prePlain), 0))
    返回 (假)
.如果真结束

赋值 (m_contextStart, 相加 (m_contextStart, 8))
赋值 (m_Crypt, 相加 (m_Crypt, 8))
赋值 (m_Pos, 0)
返回 (真)

.子程序 Decipher, 空白型, , 
.参数 BinInput, 字节型, 数组, 
.参数 BinKey, 字节型, 数组, 
.参数 Is16Rounds, 逻辑型, , 
.参数 参_回传字节型数组, 字节型, 参考 数组, 

.局部变量 sum, 长整数型, , , 
.局部变量 rounds, 空白型, , , 
.局部变量 y, 长整数型, , , 
.局部变量 z, 长整数型, , , 
.局部变量 a, 长整数型, , , 
.局部变量 b, 长整数型, , , 
.局部变量 c, 长整数型, , , 
.局部变量 d, 长整数型, , , 
.局部变量 i, 空白型, , , 
.局部变量 test, 长整数型, , , 

赋值 (sum, 3816266640)

赋值 (y, GetUInt (BinInput, 1, 4))

赋值 (z, GetUInt (BinInput, 5, 4))

赋值 (a, GetUInt (m_Key, 1, 4))

赋值 (b, GetUInt (m_Key, 5, 4))

赋值 (c, GetUInt (m_Key, 9, 4))

赋值 (d, GetUInt (m_Key, 13, 4))

.如果 (Is16Rounds)
    赋值 (rounds, 16)
.否则
    赋值 (rounds, 32)
.如果结束

.计次循环首 (rounds, i)
    赋值 (test, 长整型位异或 (长整型位异或 (相加 (长整型左移 (y, 4), c), 相加 (y, sum)), 相加 (长整型右移 (y, 5), d)))
    赋值 (z, 相减 (z, test))
    赋值 (z, 长整型位与 (z, 4294967295))
    赋值 (test, 长整型位异或 (长整型位异或 (相加 (长整型左移 (z, 4), a), 相加 (z, sum)), 相加 (长整型右移 (z, 5), b)))
    赋值 (y, 相减 (y, test))
    赋值 (y, 长整型位与 (y, 4294967295))
    赋值 (sum, 相减 (sum, 2654435769))
    赋值 (sum, 长整型位与 (sum, 4294967295))
.计次循环尾 ()
ToBytes (y, z, 参_回传字节型数组)

.子程序 GetUInt, 长整数型, , 
.参数 Input, 字节型, 数组, 
.参数 Ioffset, 空白型, , 
.参数 intLen, 空白型, , 

.局部变量 ret, 长整数型, , , 
.局部变量 lend, 空白型, , , 
.局部变量 i, 空白型, , , 

.如果 (大于 (intLen, 4))
    赋值 (lend, 相加 (Ioffset, 4))
.否则
    赋值 (lend, 相加 (Ioffset, intLen))
.如果结束

.变量循环首 (Ioffset, 相减 (lend, 1), 1, i)
    赋值 (ret, 左移 (ret, 8))
    赋值 (ret, 位或 (ret, Input [i]))
    
.变量循环尾 ()
返回 (到无符号长整型 (ret))

.子程序 ToBytes, 空白型, , '返回字节型数组的字节集
.参数 a, 长整数型, , 
.参数 b, 长整数型, , 
.参数 参_回传字节型数组, 字节型, 参考 数组, 

.局部变量 bytes, 字节型, , "8", 

赋值 (bytes [1], 位与 (右移 (a, 24), 255))
赋值 (bytes [2], 位与 (右移 (a, 16), 255))
赋值 (bytes [3], 位与 (右移 (a, 8), 255))
赋值 (bytes [4], 位与 (a, 255))
赋值 (bytes [5], 位与 (右移 (b, 24), 255))
赋值 (bytes [6], 位与 (右移 (b, 16), 255))
赋值 (bytes [7], 位与 (右移 (b, 8), 255))
赋值 (bytes [8], 位与 (b, 255))
赋值 (参_回传字节型数组, bytes)


.子程序 HashTea, 空白型, , 
.参数 binFrom, 字节型, 数组, 
.参数 binTkye, 字节型, 数组, 
.参数 offset, 空白型, , 起始位置，从1开始
.参数 is16Rounds, 逻辑型, , 
.参数 参_回传字节型数组, 字节型, 参考 数组, 

.局部变量 intlen, 空白型, , , 
.局部变量 i, 空白型, , , 
.局部变量 i2, 空白型, , , 

赋值 (m_Header, 真)
赋值 (m_Key, binTkye)
赋值 (m_Pos, 1)
赋值 (m_padding, 0)
赋值 (m_Crypt, 0)
赋值 (m_preCrypt, 0)
赋值 (intlen, 取数组成员数 (binFrom))
赋值 (m_Pos, 求余数 (相加 (intlen, 10), 8))
.如果真 (不等于 (m_Pos, 0))
    赋值 (m_Pos, 相减 (8, m_Pos))
.如果真结束

重定义数组 (m_out, 假, 相加 (intlen, m_Pos, 9, 1))
置随机数种子 ()

赋值 (m_Plain [1], 长整型位异或 (长整型位与 (取随机数 (1000, 5000), 248), m_Pos))

.计次循环首 (m_Pos, i)
    赋值 (m_Plain [相加 (i, 1)], 长整型位与 (取随机数 (1000, 5000), 255))
.计次循环尾 ()

.计次循环首 (8, i)
    赋值 (m_prePlain [i], 0)
.计次循环尾 ()

赋值 (m_Pos, 相加 (m_Pos, 1))
赋值 (m_padding, 1)

.循环判断首 ()
    .如果 (小于 (m_Pos, 8))
        赋值 (m_Plain [相加 (m_Pos, 1)], 长整型位与 (取随机数 (1000, 5000), 255))
        赋值 (m_Pos, 相加 (m_Pos, 1))
        赋值 (m_padding, 相加 (m_padding, 1))
    .否则
        Encrypt8Bytes (is16Rounds)
    .如果结束
    
.循环判断尾 (小于 (m_padding, 3))

赋值 (i2, offset)
.判断循环首 (大于 (intlen, 0))
    .如果 (小于 (m_Pos, 8))
        赋值 (m_Plain [相加 (m_Pos, 1)], binFrom [i2])
        赋值 (m_Pos, 相加 (m_Pos, 1))
        赋值 (intlen, 相减 (intlen, 1))
        赋值 (i2, 相加 (i2, 1))
    .否则
        Encrypt8Bytes (is16Rounds)
    .如果结束
    
    
.判断循环尾 ()

赋值 (m_padding, 1)
.判断循环首 (小于 (m_padding, 8))
    .如果真 (小于 (m_Pos, 8))
        赋值 (m_Plain [相加 (m_Pos, 1)], 0)
        赋值 (m_padding, 相加 (m_padding, 1))
        赋值 (m_Pos, 相加 (m_Pos, 1))
    .如果真结束
    
    .如果真 (等于 (m_Pos, 8))
        Encrypt8Bytes (is16Rounds)
    .如果真结束
    
.判断循环尾 ()


赋值 (参_回传字节型数组, m_out)


.子程序 Encrypt8Bytes, 空白型, , 
.参数 Is16Rounds, 逻辑型, , 

.局部变量 Crypted, 字节型, , "0", 
.局部变量 i, 空白型, , , 

赋值 (m_Pos, 1)
.计次循环首 (8, i)
    .如果 (m_Header)
        赋值 (m_Plain [i], 长整型位异或 (m_Plain [i], m_prePlain [1]))
    .否则
        赋值 (m_Plain [i], 长整型位异或 (m_Plain [i], m_out [相加 (m_preCrypt, i)]))
    .如果结束
    
.计次循环尾 ()
Encipher (m_Plain, m_Key, Is16Rounds, Crypted)
.计次循环首 (取数组成员数 (Crypted), i)
    赋值 (m_out [相加 (m_Crypt, i)], Crypted [i])
.计次循环尾 ()

.计次循环首 (8, i)
    赋值 (m_out [相加 (m_Crypt, i)], 长整型位异或 (m_out [相加 (m_Crypt, i)], m_prePlain [i]))
.计次循环尾 ()

.计次循环首 (取数组成员数 (m_Plain), i)
    赋值 (m_prePlain [i], m_Plain [i])
.计次循环尾 ()

赋值 (m_preCrypt, m_Crypt)
赋值 (m_Crypt, 相加 (m_Crypt, 8))
赋值 (m_Pos, 0)
赋值 (m_Header, 假)

.子程序 Encipher, 空白型, , 
.参数 BinInput, 字节型, 数组, 
.参数 k, 字节型, 数组, 
.参数 Is16Rounds, 逻辑型, , 
.参数 参_回传字节型数组, 字节型, 参考 数组, 

.局部变量 sum, 长整数型, , , 
.局部变量 rounds, 空白型, , , 
.局部变量 y, 长整数型, , , 
.局部变量 z, 长整数型, , , 
.局部变量 a, 长整数型, , , 
.局部变量 b, 长整数型, , , 
.局部变量 c, 长整数型, , , 
.局部变量 d, 长整数型, , , 
.局部变量 i, 空白型, , , 
.局部变量 test, 长整数型, , , 
.局部变量 匿名局部变量_352, 空白型, , , 

清除数组 (参_回传字节型数组)
赋值 (y, GetUInt (BinInput, 1, 4))
赋值 (z, GetUInt (BinInput, 5, 4))
赋值 (a, GetUInt (m_Key, 1, 4))
赋值 (b, GetUInt (m_Key, 5, 4))
赋值 (c, GetUInt (m_Key, 9, 4))
赋值 (d, GetUInt (m_Key, 13, 4))

.如果 (Is16Rounds)
    赋值 (rounds, 16)
.否则
    赋值 (rounds, 32)
.如果结束

.计次循环首 (rounds, i)
    赋值 (sum, 长整型位与 (sum, 4294967295))
    赋值 (sum, 相加 (sum, 2654435769))
    赋值 (z, 长整型位与 (z, 4294967295))
    赋值 (y, 相加 (y, 长整型位异或 (长整型位异或 (相加 (长整型左移 (z, 4), a), 相加 (z, sum)), 相加 (长整型右移 (z, 5), b))))
    赋值 (y, 长整型位与 (y, 4294967295))
    赋值 (z, 相加 (z, 长整型位异或 (长整型位异或 (相加 (长整型左移 (y, 4), c), 相加 (y, sum)), 相加 (长整型右移 (y, 5), d))))
    
.计次循环尾 ()

ToBytes (y, z, 参_回传字节型数组)

.子程序 长整型位异或, 长整数型, , 长整数的XOR
.参数 x, 长整数型, , 
.参数 y, 长整数型, , 

.局部变量 t1, 字节集, , , 
.局部变量 t2, 字节集, , , 
.局部变量 t3, 字节集, , , 
.局部变量 i, 空白型, , , 
.局部变量 temp, 长整数型, , , 

赋值 (t1, 到字节集 (x))
赋值 (t2, 到字节集 (y))
赋值 (t3, 取空白字节集 (8))
.计次循环首 (8, i)
    赋值 (t3 [i], 位异或 (t1 [i], t2 [i]))
.计次循环尾 ()
赋值 (temp, 取字节集数据 (t3, #长整数型, 1))
返回 (temp)


.子程序 长整型位与, 长整数型, , 长整数的AND
.参数 x, 长整数型, , 
.参数 y, 长整数型, , 

.局部变量 t1, 字节集, , , 
.局部变量 t2, 字节集, , , 
.局部变量 t3, 字节集, , , 
.局部变量 i, 空白型, , , 
.局部变量 temp, 长整数型, , , 

赋值 (t1, 到字节集 (x))
赋值 (t2, 到字节集 (y))
赋值 (t3, 取空白字节集 (8))
.计次循环首 (8, i)
    赋值 (t3 [i], 位与 (t1 [i], t2 [i]))
.计次循环尾 ()
赋值 (temp, 取字节集数据 (t3, #长整数型, 1))
返回 (temp)


.子程序 长整型右移, 长整数型, , 右移
.参数 x, 长整数型, , 
.参数 n, 空白型, , 

.计次循环首 (n, )
    赋值 (x, 相除 (x, 2))
.计次循环尾 ()
返回 (x)


.子程序 长整型左移, 长整数型, , 左移
.参数 x, 长整数型, , 
.参数 n, 空白型, , 

.计次循环首 (n, )
    赋值 (x, 相乘 (x, 2))
.计次循环尾 ()
返回 (x)

.子程序 到无符号长整型, 长整数型, , 
.参数 long, 整数型, , 

置入代码 ({ 139, 69, 8, 51, 210, 201, 194, 4, 0 })

返回 (0)


 ' 不属于任何一个程序集、类模块的函数：
