 ' 文件类型：Windows模块源码

 ' 程序名称：易数据库插入记录模块
 ' 程序描述：本模块实现对易数据库直接插入记录，无需写临时文件，直接对易数据库
文件进行操作。


 ' 程序作者：123yizheng123@163.com
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0





 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 4 系统核心支持库
 ' commobj {A068799B-7551-46b9-8CA8-EEF8357AFEA4} 1 0 通用对象支持库



 ' 所需要的模块
 ' 易数据库插入记录模块 D:\myE\自写模块\易数据库插入记录模块.ec



.程序集 程序集1, , , 

.子程序 _启动子程序, 整数型, , 请在本子程序中放置易模块初始化代码

_临时子程序 () ' 在初始化代码执行完毕后调用测试代码
返回 (0) ' 可以根据您的需要返回任意数值

.子程序 _临时子程序, 空白型, , 
.局部变量 字节集数组, 字节集, , "0", 
.局部变量 wb, 文本型, , , 

赋值 (wb, 取运行目录 ())
.如果真 (不等于 (取文本右边 (wb, 1), “\”))
    赋值 (wb, 相加 (wb, “\”))
.如果真结束
赋值 (wb, 相加 (wb, “1.edb”))

加入成员 (字节集数组, 到字节集 (到字节 (23)))
加入成员 (字节集数组, 到字节集 (63))
加入成员 (字节集数组, 到字节集 (31245))
加入成员 (字节集数组, 到字节集 (123232342342))
加入成员 (字节集数组, 取空白字节集 (0))
加入成员 (字节集数组, 到字节集 (相加 (8745, 134)))
加入成员 (字节集数组, 到字节集 (取现行时间 ()))
加入成员 (字节集数组, 到字节集 (“sdjfoiewjsf”))
加入成员 (字节集数组, 读入文件 (wb))
加入成员 (字节集数组, 到字节集 (“二、如何开发易模块：任何具有第一条中所述三个特点的易程序均可以作为易模块编译。开发易模块时注意点如下：１、请将初始化易模块的代码放置到_启动子程中，任何使用了此模块的易程序在运行前都会首先自动调用该子程序。如果在_启动子程中发现初始化失败，请返回 -1 ，系统会自动终止其所处易程序的执行；２、请将所有欲公开给第三方使用的子程序的公开选中，或者放置到_接口程序集中；３、程序书写完毕后请选择编译将其编译为易模块。（如图）”))
加入成员 (字节集数组, 到字节集 (真))

输出调试文本 (到文本 (插入记录 (wb, 1, 字节集数组)))
 ' 本名称子程序用作测试程序用，仅在开发及调试环境中有效，编译发布程序前将被系统自动清空，请将所有用作测试的临时代码放在本子程序中。 ***注意不要修改本子程序的名称、参数及返回值类型。

.子程序 插入记录, 整数型, 公开, 将数据插入指定数据库，成功返回0。返回1表示指定数据库打开失败。
.参数 数据库, 文本型, , 需要插入数据的数据库全路径名
.参数 插入位置, 整数型, , 需要插入的位置，从1开始。
.参数 插入数据, 字节集, 参考 数组, 要插入的字段数据,按顺序排列好。所有数据都转字节集。数组[1]为字段1数据，以此类推，空字段需空字节集。数组超出字段位部分将被抛弃

.局部变量 数据, 未知类型0x20002, , , 
.局部变量 附加数据, 未知类型0x20002, , , 
.局部变量 x, 整数型, , , 
.局部变量 附加数据空闲记录总数, 整数型, , , 
.局部变量 待写数据位, 整数型, , , 
.局部变量 y, 整数型, , , 
.局部变量 z, 整数型, , , 
.局部变量 附加记录总数, 整数型, , , 
.局部变量 记录数, 整数型, , , 
.局部变量 字段数, 整数型, , , 
.局部变量 每记录长度, 整数型, , , 
.局部变量 数据长度数组, 整数型, , "0", 
.局部变量 是否附加, 逻辑型, , "0", 当前字段是否附加数据
.局部变量 记录信息数据, 字节集, , , 
.局部变量 当前待写入数据, 字节集, , , 
.局部变量 当前字段数据, 字节集, , , 
.局部变量 上个连续记录位置, 整数型, , , 
.局部变量 wb, 文本型, , , 
.局部变量 附加需求, 逻辑型, , , 数据库是否需要附加数据
.局部变量 文件号, 整数型, , , 
.局部变量 原始记录号, 整数型, , , 

.如果真 (取反 (文件是否存在 (数据库))) ' 文件不存在
    返回 (1)
.如果真结束

赋值 (原始记录号, -1)
.如果真 (是否已打开 (数据库)) ' 先关闭避免出错
    赋值 (原始记录号, 取记录号 ())
    关闭 (数据库)
.如果真结束

数据.未知支持库函数_126 (数据库)

赋值 (记录数, 取字节集数据 (数据.未知支持库函数_84 (17, 4), #整数型, )) ' 记录总数
.如果真 (大于 (插入位置, 相加 (记录数, 1))) ' 超出尾部
    赋值 (插入位置, 相加 (记录数, 1))
.如果真结束

赋值 (每记录长度, 取字节集数据 (数据.未知支持库函数_84 (25, 4), #整数型, )) ' 根据字段类型取每个记录在记录中的总长度
赋值 (字段数, 取字节集数据 (数据.未知支持库函数_84 (113, 4), #整数型, )) ' 数据库字段总数

重定义数组 (插入数据, 真, 字段数) ' 抛弃多余数据

重定义数组 (数据长度数组, 假, 字段数) ' 每个字段的长度
重定义数组 (是否附加, 假, 字段数) ' 各个字段是否需要读取附加数据文件

.计次循环首 (字段数, x) ' 每个字段的长度信息，是否需要附加数据文件
    赋值 (记录信息数据, 数据.未知支持库函数_84 (相加 (137, 相乘 (相减 (x, 1), 72)), 12)) ' 数据类型，起始位置，长度信息
    赋值 (当前待写入数据, 取字节集左边 (记录信息数据, 4)) ' 数据类型
    
    .判断开始 (等于 (当前待写入数据, { 10, 0, 0, 0 })) ' 文本型
        赋值 (数据长度数组 [x], 取字节集数据 (取字节集右边 (记录信息数据, 4), #整数型, ))
        
    .判断 (或者 (等于 (当前待写入数据, { 1, 0, 0, 0 }), 等于 (当前待写入数据, { 7, 0, 0, 0 }))) ' 字节型、逻辑型，长度固定为1
        赋值 (数据长度数组 [x], 1)
        
    .判断 (或者 (等于 (当前待写入数据, { 11, 0, 0, 0 }), 等于 (当前待写入数据, { 12, 0, 0, 0 }))) ' 字节集型、备注型，长度固定为4，指定数据在附加数据中的位置编号
        赋值 (数据长度数组 [x], 4)
        赋值 (是否附加 [x], 真)
        赋值 (附加需求, 真)
        到循环尾 ()
        
    .判断 (等于 (当前待写入数据, { 2, 0, 0, 0 })) ' 短整数型,长度2
        赋值 (数据长度数组 [x], 2)
        
    .判断 (或者 (等于 (当前待写入数据, { 3, 0, 0, 0 }), 等于 (当前待写入数据, { 5, 0, 0, 0 }))) ' 整数型、小数型，长度固定为4
        赋值 (数据长度数组 [x], 4)
        
    .默认
         ' 长整数型、双精度小数型、日期时间型，长度8
        赋值 (数据长度数组 [x], 8)
    .判断结束
    
    赋值 (是否附加 [x], 假)
    
.计次循环尾 ()

.如果真 (附加需求) ' 需要附加数据
    赋值 (wb, 文本替换 (数据库, 取文本长度 (数据库), 1, “t”))
    .如果 (文件是否存在 (wb))
        附加数据.未知支持库函数_126 (wb)
        赋值 (记录信息数据, 附加数据.未知支持库函数_84 (17, 12)) ' 附加数据的记录信息，包括空闲记录
        
        赋值 (附加记录总数, 取字节集数据 (取字节集左边 (记录信息数据, 4), #整数型, )) ' 附加数据当前总记录数
        赋值 (附加数据空闲记录总数, 取字节集数据 (取字节集中间 (记录信息数据, 5, 4), #整数型, )) ' 空闲记录数量
        
        .如果 (等于 (附加数据空闲记录总数, 0))
            赋值 (待写数据位, 附加记录总数) ' 所有记录均已用完，直接在最后写数据
            
        .否则
             ' 第一个空闲位置
            赋值 (待写数据位, 取字节集数据 (取字节集右边 (记录信息数据, 4), #整数型, ))
        .如果结束
        
        赋值 (文件号, 打开文件 (wb, #改写, #禁止读写)) ' 打开附加文件，准备写入数据
        
        .计次循环首 (字段数, x) ' 写入附加数据
            .如果真 (是否附加 [x]) ' 当前字段记录是附加数据
                
                .如果 (等于 (插入数据 [x], {  })) ' 当前记录为空记录
                    赋值 (插入数据 [x], { 0, 0, 0, 0 })
                    
                .否则
                     ' 写入非空字节数据
                    赋值 (当前字段数据, 插入数据 [x])
                    
                    赋值 (插入数据 [x], 到字节集 (待写数据位)) ' 数组中仅保留列表位置
                    
                    .循环判断首 ()
                        赋值 (z, 待写数据位)
                        
                        .如果 (不等于 (附加数据空闲记录总数, 0)) ' 附加记录中有空闲位置
                            赋值 (记录信息数据, 附加数据.未知支持库函数_84 (相加 (相乘 (待写数据位, 512), 1), 12)) ' 当前记录信息
                            移动读写位置 (文件号, #文件首, 相乘 (待写数据位, 512))
                            
                            赋值 (附加数据空闲记录总数, 相减 (附加数据空闲记录总数, 1))
                            
                            .如果 (等于 (附加数据空闲记录总数, 0))
                                赋值 (待写数据位, 附加记录总数)
                                
                            .否则
                                赋值 (待写数据位, 取字节集数据 (取字节集中间 (记录信息数据, 5, 4), #整数型, )) ' 下一个读写位置
                            .如果结束
                            
                        .否则
                            赋值 (附加记录总数, 相加 (附加记录总数, 1)) ' 尾部添加一条记录
                            赋值 (待写数据位, 附加记录总数)
                            移到文件尾 (文件号)
                        .如果结束
                        
                        赋值 (y, 取字节集长度 (当前字段数据))
                        
                        .如果 (大于 (y, 500)) ' 记录超长
                            赋值 (y, 相减 (y, 500))
                            赋值 (当前待写入数据, 相加 (到字节集 (上个连续记录位置), 到字节集 (待写数据位), { 244, 1, 0, 0 }, 取字节集左边 (当前字段数据, 500)))
                            赋值 (当前字段数据, 字节集替换 (当前字段数据, 1, 500, ))
                            赋值 (上个连续记录位置, z)
                            
                        .否则
                            赋值 (当前待写入数据, 相加 (到字节集 (上个连续记录位置), { 0, 0, 0, 0 }, 到字节集 (y), 当前字段数据, 取空白字节集 (相减 (500, y))))
                            赋值 (y, 0)
                            赋值 (上个连续记录位置, 0) ' 初始化上次位置数据
                        .如果结束
                        
                        写出字节集 (文件号, 当前待写入数据)
                    .循环判断尾 (不等于 (y, 0)) ' 数据还未存储完毕
                .如果结束
                
            .如果真结束
            
        .计次循环尾 ()
        
        
        赋值 (当前待写入数据, 相加 (到字节集 (附加记录总数), 到字节集 (附加数据空闲记录总数))) ' 文件头中的附加记录信息
        .如果 (等于 (附加数据空闲记录总数, 0))
            赋值 (当前待写入数据, 相加 (当前待写入数据, { 0, 0, 0, 0 }))
            
        .否则
            移动读写位置 (文件号, #文件首, 相乘 (待写数据位, 512)) ' 清空列表记录信息中的上一个标记
            写出字节集 (文件号, { 0, 0, 0, 0 })
            
            赋值 (当前待写入数据, 相加 (当前待写入数据, 到字节集 (待写数据位)))
        .如果结束
        
        .如果真 (不等于 (附加数据.未知支持库函数_84 (17, 12), 当前待写入数据)) ' 如果加入的备注型字段都是空记录，则无须更改记录
            移动读写位置 (文件号, #文件首, 16)
            写出字节集 (文件号, 当前待写入数据)
        .如果真结束
        关闭文件 (文件号)
        
    .否则
         ' 附加数据文件不存在
        返回 (1)
    .如果结束
    
.如果真结束

赋值 (当前待写入数据, 到字节集 (插入位置)) ' 校验，连接待插入数据
.计次循环首 (字段数, x)
    赋值 (y, 取字节集长度 (插入数据 [x]))
    .如果 (大于 (y, 数据长度数组 [x])) ' 输入数据超出部分，截断
        赋值 (插入数据 [x], 取字节集左边 (插入数据 [x], 数据长度数组 [x]))
        
    .否则
        赋值 (插入数据 [x], 相加 (插入数据 [x], 取空白字节集 (相减 (数据长度数组 [x], y)))) ' 补齐空余部分
    .如果结束
    
    赋值 (当前待写入数据, 相加 (当前待写入数据, 插入数据 [x]))
.计次循环尾 ()

赋值 (文件号, 打开文件 (数据库, , #禁止读写))
移动读写位置 (文件号, #文件首, 相加 (116, 相乘 (字段数, 72), 相乘 (相减 (插入位置, 1), 每记录长度))) ' 写入要插入的记录数据
插入字节集 (文件号, 当前待写入数据)

赋值 (记录信息数据, 数据.未知支持库函数_84 (21, 4)) ' 数据库的总记录数，包含被完全删除的记录
.如果 (大于 (相减 (取字节集数据 (记录信息数据, #整数型, ), 1), 记录数)) ' 以前删除过数据库记录
    赋值 (附加需求, 假)
    
    .如果真 (不等于 (插入位置, 1))
        赋值 (y, 0)
        .循环判断首 ()
            赋值 (y, 相加 (y, 1))
            赋值 (x, 取字节集数据 (数据.未知支持库函数_84 (相加 (116, 相乘 (字段数, 72), 相乘 (相减 (插入位置, y, 1), 每记录长度), 1), 4), #整数型, )) ' 上一个记录的编号
            
            .如果真 (大于 (x, 相减 (插入位置, y)))
                移动读写位置 (文件号, #文件首, 相加 (116, 相乘 (字段数, 72), 相乘 (相减 (插入位置, y, 1), 每记录长度)))
                写出字节集 (文件号, 到字节集 (到整数 (相减 (插入位置, y))))
                赋值 (附加需求, 真) ' 这里借用变量，表示已经经过顺序调整了，不再需要判断后面的记录
            .如果真结束
            
        .循环判断尾 (大于 (x, 相减 (插入位置, y)))
    .如果真结束
    
     ' 更改后续记录的编号
    .如果真 (取反 (附加需求)) ' 前面的记录顺序号已经更改，后面直接跳过
        赋值 (y, 0)
        .循环判断首 ()
            赋值 (y, 相加 (y, 1))
            赋值 (x, 取字节集数据 (数据.未知支持库函数_84 (相加 (116, 相乘 (字段数, 72), 相乘 (相减 (相加 (插入位置, y), 2), 每记录长度), 1), 4), #整数型, )) ' 下一个记录的编号，使用原始数据，此时还未插入数据
            
            .如果真 (小于 (x, 相加 (插入位置, y)))
                移动读写位置 (文件号, #文件首, 相加 (116, 相乘 (字段数, 72), 相乘 (相减 (相加 (插入位置, y), 1), 每记录长度)))
                写出字节集 (文件号, 到字节集 (到整数 (相加 (插入位置, y))))
            .如果真结束
            
        .循环判断尾 (小于 (x, 相加 (插入位置, y)))
    .如果真结束
    
    赋值 (当前待写入数据, 相加 (到字节集 (到整数 (相加 (记录数, 1))), 记录信息数据)) ' 数据库记录数信息
    
.否则
     ' 更改后面每个记录的顺序号
    赋值 (x, 相加 (相减 (记录数, 插入位置), 1))
    .计次循环首 (x, y)
        移动读写位置 (文件号, #文件首, 相加 (116, 相乘 (字段数, 72), 相乘 (相减 (相加 (插入位置, y), 1), 每记录长度)))
        赋值 (插入位置, 相加 (插入位置, 1))
        写出字节集 (文件号, 到字节集 (插入位置))
    .计次循环尾 ()
    
    赋值 (当前待写入数据, 相加 (到字节集 (到整数 (相加 (记录数, 1))), 到字节集 (到整数 (相加 (记录数, 2))))) ' 数据库记录数信息
.如果结束

移动读写位置 (文件号, #文件首, 16) ' 更新记录数信息
写出字节集 (文件号, 当前待写入数据)

关闭文件 (文件号)

.如果真 (不等于 (原始记录号, -1))
    打开 (数据库, , , , , , )
    跳到 (原始记录号)
.如果真结束

返回 (0)

.程序集 __HIDDEN_TEMP_MOD__, , , 

.子程序 插入记录, 整数型, , 将数据插入指定数据库，成功返回0。返回1表示指定数据库打开失败。
.参数 数据库, 文本型, , 需要插入数据的数据库全路径名
.参数 插入位置, 整数型, , 需要插入的位置，从1开始。
.参数 插入数据, 字节集, 参考 数组, 要插入的字段数据,按顺序排列好。所有数据都转字节集。数组[1]为字段1数据，以此类推，空字段需空字节集。数组超出字段位部分将被抛弃




 ' 不属于任何一个程序集、类模块的函数：
