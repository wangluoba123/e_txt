 ' 文件类型：Windows模块源码

 ' 程序名称：sizeofcode
 ' 程序描述：
 ' 程序作者：dtcser
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：             易语言资源网注意事项
--============   www.wodesoft.com  =============--
* 易语言资源网为易语言官方站、易语言官方论坛提供辅助资源站；本易语言资源网( www.wodesoft.com)所有软件和资料均为软件作者提供和网友推荐发布而来，其版权归该软件和程序源码的合法拥有者所有，本站易语言资源网整理收集仅供易语言用户学习和易语言技术研究探讨使用，不得用于任何商业用途。如果由于以上原因造成的版权纠纷本站概不负责！
* 本站资源未经许可,任何网站不得非法盗链及抄袭本站资源；如引用，请注明来自易语言资源网，谢谢合作！
--============   www.wodesoft.com  =============--
 ' 版本号：1.1
 ' 创建号：0.0



.常量 C_SIZE1, "1", , 
.常量 C_MODRM, "2", , 
.常量 C_DATA8, "4", , 
.常量 C_DATA16, "8", , 
.常量 C_DATA32, "16", , 
.常量 C_PREFIX, "32", , 
.常量 C_2BYTE, "64", , 
.常量 C_REL, "128", , 
.常量 C_66, "102", , 
.常量 C_67, "103", , 
.常量 C_UNKNOWN, "0", , 
.图片 table1_, " ' 已保存到：D:\易语言学习\Data\X0r3OrKI.e\table1_", , 
.图片 table2_, " ' 已保存到：D:\易语言学习\Data\X0r3OrKI.e\table2_", , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 5 0 系统核心支持库





.DLL命令 RtlMoveMemory3, 整数型, "kernel32.dll", "RtlMoveMemory", , 
    .参数 pDestination, 字节型, 传址, 
    .参数 pSource, 整数型, , 
    .参数 Length, 整数型, , 1

.程序集 程序集1, , , 

.程序集变量 table_1, 字节集, , , 
.程序集变量 table_2, 字节集, , , 
.子程序 _启动子程序, 整数型, , 请在本子程序中放置易模块初始化代码
赋值 (table_1, #table1_)
赋值 (table_2, #table2_)
_临时子程序 () ' 在初始化代码执行完毕后调用测试代码
返回 (0) ' 可以根据您的需要返回任意数值

.子程序 _临时子程序, 空白型, , 
 ' 本名称子程序用作测试程序用，仅在开发及调试环境中有效，编译发布程序前将被系统自动清空，请将所有用作测试的临时代码放在本子程序中。 ***注意不要修改本子程序的名称、参数及返回值类型。
 ' --========  易语言资源网  (www.wodesoft.com)  ======--
 ' 努力创建完善、持续更新的易语言学习例程源码资源站
 ' --================   www.wodesoft.com  ===========--
 ' --==================   易语言资源网注意事项  ================--
 ' * 易语言资源网为易语言官方站、易语言官方论坛提供辅助资源站；
 ' 本易语言资源网( www.wodesoft.com)所有软件和资料均为软件作者提
 ' 供和网友推荐发布而来，其版权归该软件和程序源码的合法拥有者所
 ' 有，本站易语言资源网整理收集仅供易语言用户学习和易语言技术研
 ' 究探讨使用，不得用于任何商业用途。如果由于以上原因造成的版权
 ' 纠纷本站概不负责！
 ' * 本站资源未经许可，任何网站不得非法盗链及抄袭本站资源；如引用
 ' 页面，请注明来自易语言资源网，谢谢合作！
 ' --=====================   www.wodesoft.com  ================--


.子程序 getbyte, 字节型, , 
.参数 addr, 整数型, , 

.局部变量 ret, 字节型, , , 

RtlMoveMemory3 (ret, addr, 1)
返回 (ret)
' 本源码来自易语言资源网(www.wodesoft.com)

.子程序 sizeofcode, 整数型, 公开, 返回当前地址所指的汇编指令的长度。注：应放在指令开始位置噢～～
.参数 address, 整数型, , 指令地址

.局部变量 opcode, 字节型, , , 
.局部变量 p, 整数型, , , 
.局部变量 tempopcode, 字节型, , , 
.局部变量 instruction, 字节型, , , 
.局部变量 size, 整数型, , , 
.局部变量 opsizeprefix, 整数型, , , 
.局部变量 addressprefix, 整数型, , , 
.局部变量 匿名局部变量_47, 空白型, , , 
.局部变量 modrm, 字节型, , , 
.局部变量 sib, 字节型, , , 

赋值 (p, address)
赋值 (opcode, getbyte (p))
.判断循环首 (等于 (table_1 [相加 (opcode, 1)], #C_PREFIX))
    .如果真 (等于 (opcode, #C_66))
        赋值 (opsizeprefix, 1)
    .如果真结束
    .如果真 (等于 (opcode, #C_67))
        赋值 (addressprefix, 1)
    .如果真结束
    赋值 (size, 相加 (size, 1))
    赋值 (p, 相加 (p, 1))
    赋值 (opcode, getbyte (p))
.判断循环尾 ()
赋值 (instruction, table_1 [相加 (opcode, 1)])
.如果真 (或者 (等于 (opcode, 246), 等于 (opcode, 247)))
    赋值 (opcode, getbyte (相加 (p, 1)))
    .如果真 (不等于 (位与 (opcode, 56), 0))
        赋值 (instruction, #C_MODRM)
    .如果真结束
     ' 本源码来自易语言资源网(www.wodesoft.com)
.如果真结束
.如果真 (不等于 (opsizeprefix, 0))
    .如果真 (不等于 (位与 (instruction, #C_DATA32), 0))
        赋值 (instruction, 位与 (instruction, 位取反 (#C_DATA32)))
        赋值 (instruction, 位或 (instruction, #C_DATA16))
    .如果真结束
    
.如果真结束
.如果真 (并且 (不等于 (addressprefix, 0), 等于 (位与 (instruction, #C_REL), 0)))
    赋值 (instruction, 位与 (instruction, 位取反 (#C_DATA32)))
    赋值 (instruction, 位与 (instruction, 位取反 (#C_DATA8)))
    赋值 (instruction, 位或 (instruction, #C_DATA16))
.如果真结束
.如果真 (不等于 (位与 (instruction, #C_REL), 0))
    赋值 (instruction, 位与 (instruction, 位取反 (#C_REL)))
.如果真结束
.如果真 (等于 (instruction, #C_2BYTE))
    赋值 (size, 相加 (size, 1))
    赋值 (p, 相加 (p, 1))
    赋值 (instruction, table_2 [相加 (getbyte (p), 1)])
.如果真结束
赋值 (size, 相加 (size, 1))
.如果真 (不等于 (位与 (instruction, #C_MODRM), 0))
    赋值 (size, 相加 (size, 1))
    赋值 (p, 相加 (p, 1))
    赋值 (modrm, getbyte (p))
    .如果真 (并且 (等于 (右移 (modrm, 6), 0), 等于 (位与 (modrm, 7), 5)))
        赋值 (size, 相加 (size, 4))
    .如果真结束
    .如果真 (并且 (不等于 (右移 (modrm, 6), 3), 等于 (位与 (modrm, 7), 4)))
        赋值 (size, 相加 (size, 1))
        赋值 (p, 相加 (p, 1))
        赋值 (sib, getbyte (p))
        .如果真 (并且 (等于 (右移 (modrm, 6), 1), 等于 (位与 (modrm, 7), 4)))
            赋值 (size, 相加 (size, 1))
        .如果真结束
        .如果真 (并且 (等于 (右移 (modrm, 6), 2), 等于 (位与 (modrm, 7), 4)))
            赋值 (size, 相加 (size, 4))
        .如果真结束
        .如果真 (并且 (等于 (右移 (modrm, 6), 0), 等于 (位与 (sib, 7), 5)))
            赋值 (size, 相加 (size, 4))
        .如果真结束
        
    .如果真结束
    .如果真 (并且 (大于或等于 (modrm, 64), 小于或等于 (modrm, 127), 不等于 (位与 (modrm, 7), 4)))
        赋值 (size, 相加 (size, 1))
    .如果真结束
    .如果真 (并且 (大于或等于 (modrm, 128), 小于或等于 (modrm, 191), 不等于 (位与 (modrm, 7), 4)))
        赋值 (size, 相加 (size, 4))
    .如果真结束
    ' 本源码来自易语言资源网(www.wodesoft.com)
.如果真结束
.如果真 (不等于 (位与 (instruction, #C_DATA32), 0))
    赋值 (size, 相加 (size, 4))
.如果真结束
.如果真 (不等于 (位与 (instruction, #C_DATA8), 0))
    赋值 (size, 相加 (size, 1))
.如果真结束
.如果真 (不等于 (位与 (instruction, #C_DATA16), 0))
    赋值 (size, 相加 (size, 2))
.如果真结束
.如果真 (等于 (instruction, #C_UNKNOWN))
    赋值 (size, 相加 (size, 1))
.如果真结束
返回 (size)



 ' 不属于任何一个程序集、类模块的函数：
