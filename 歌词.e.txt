 ' 文件类型：Windows模块源码

 ' 程序名称：zhkjie修改
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 窗口1
    左边 = 50
    顶边 = 50
    宽度 = 318
    高度 = 478
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    窗口类名 = “”
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “zhkjie修改 各位请再随意修改更加完善”
    帮助文件名 = “”

窗口 窗口2
    左边 = 50
    顶边 = 50
    宽度 = 718
    高度 = 156
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 0
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 真
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    窗口类名 = “”
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “”
    帮助文件名 = “”

窗口 窗口3
    左边 = 50
    顶边 = 50
    宽度 = 209
    高度 = 90
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 4
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    窗口类名 = “”
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “查找”
    帮助文件名 = “”



.常量 合并模式_替代, "0", 公开, Replace 一个剪辑区域被另一个剪辑区域替代。
.常量 声道_左声道, "1", 隐藏, 
.常量 声道_右声道, "2", 隐藏, 
.常量 声道_立体声, "3", 隐藏, 
.常量 声道_均衡, "4", 隐藏, 
.常量 状态_播放, "0", 隐藏, 
.常量 状态_暂停, "-1", 隐藏, 
.常量 状态_停止, "-2", 隐藏, 
.常量 状态_未知, "-3", 隐藏, 
.图片 数字图片, " ' 已保存到：D:\易语言学习\Data\歌词.e\数字图片", , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 6 系统核心支持库
 ' shell 52F260023059454187AF826A3C07AF2A 1 0 操作系统界面功能支持库
 ' iext2 AF6AD80AA4244A59AFB3D83ECF5173CC 1 2 扩展界面支持库二
 ' eMMedia 824F144B108A4bcbB966F45670D42A00 3 0 多媒体支持库



 ' 所需要的模块
 ' MCI多媒体播放类(黑月测试) d:\我的文档\桌面\zQHmgNbD\MCI多媒体播放类.ec
 ' 小路软件换肤模块 d:\我的文档\桌面\zQHmgNbD\小路软件换肤模块10风格.ec


数据类型 坐标_, , POINTAPI
    .成员 横向位置, 整数型, , , x，横向位置
    .成员 纵向位置, 整数型, , , y，纵向位置

数据类型 歌词分句, , 
    .成员 时间值, 整数型, , , 
    .成员 歌词内容, 文本型, , , 

数据类型 尺寸_, 公开, SIZE
    .成员 宽度, 整数型, , , width
    .成员 高度, 整数型, , , height

数据类型 RectF, 公开, 
    .成员 X, 小数型, , , 
    .成员 Y, 小数型, , , 
    .成员 Width, 小数型, , , 
    .成员 Height, 小数型, , , 

数据类型 BITMAPINFO, 公开, MSDN标准格式BITMAPINFO的易语言变形
    .成员 biSize, 整数型, , , 
    .成员 biWidth, 整数型, , , 
    .成员 biHeight, 整数型, , , 
    .成员 biPlanes, 短整数型, , , 
    .成员 biBitCount, 短整数型, , , 
    .成员 biCompression, 整数型, , , 
    .成员 biSizeImage, 整数型, , , 
    .成员 biXPelsPerMeter, 整数型, , , 
    .成员 biYPelsPerMeter, 整数型, , , 
    .成员 biClrUsed, 整数型, , , 
    .成员 biClrImportant, 整数型, , , 
    .成员 rgbBlue, 字节型, , , 
    .成员 rgbGreen, 字节型, , , 
    .成员 rgbRed, 字节型, , , 
    .成员 rgbReserved, 字节型, , , 

数据类型 混合函数结构, 公开, 
    .成员 混合操作, 字节型, , , 
    .成员 混合标志, 字节型, , , 
    .成员 透明常量, 字节型, , , 
    .成员 透明格式, 字节型, , , 

数据类型 GdiplusStartupInput, , 
    .成员 GdiplusVersion, 整数型, , , 
    .成员 DebugEventCallback, 整数型, , , 
    .成员 SuppressBackgroundThread, 整数型, , , 
    .成员 SuppressExternalCodecs, 整数型, , , 

数据类型 PointF, 公开, 
    .成员 x, 小数型, , , 
    .成员 y, 小数型, , , 

数据类型 OPENFILENAME, , 
    .成员 lStructSize, 整数型, , , 
    .成员 hwndOwner, 整数型, , , 
    .成员 hInstance, 整数型, , , 
    .成员 lpstrFilter, 字节集, , , 
    .成员 lpstrCustomFilter, 字节集, , , 
    .成员 nMaxCustFilter, 整数型, , , 
    .成员 nFilterIndex, 整数型, , , 
    .成员 lpstrFile, 文本型, , , 
    .成员 nMaxFile, 整数型, , , 
    .成员 lpstrFileTitle, 文本型, , , 
    .成员 nMaxFileTitle, 整数型, , , 
    .成员 lpstrInitialDir, 文本型, , , 
    .成员 lpstrTitle, 文本型, , , 
    .成员 Flags, 整数型, , , 
    .成员 nFileOffset, 短整数型, , , 
    .成员 nFileExtension, 短整数型, , , 
    .成员 lpstrDefExt, 文本型, , , 
    .成员 lCustData, 整数型, , , 
    .成员 lpfnHook, 整数型, , , 
    .成员 lpTemplateName, 文本型, , , 
    .成员 pvReserved, 整数型, , , 
    .成员 dwReserved, 整数型, , , 
    .成员 FlagsEx, 整数型, , , 

数据类型 窗口矩形区域, 公开, 
    .成员 左边, 整数型, , , 
    .成员 顶边, 整数型, , , 
    .成员 宽度, 整数型, , , 
    .成员 高度, 整数型, , , 

.全局变量 全局变量1, 整数型, , , 

.DLL命令 CreateCompatibleDC, 整数型, "gdi32", "CreateCompatibleDC", , 创建一个与特定设备场景一致的内存设备场景　新设备场景句柄，若出错则为零
    .参数 hdc, 整数型, , 设备场景句柄。新的设备场景将与它一致。也可能为0以创建一个与屏幕一致的设备场景;  

.DLL命令 更新窗口层, 整数型, "user32.dll", "UpdateLayeredWindow", 公开, 
    .参数 句柄, 整数型, , 当前窗口的句柄
    .参数 设备场景句柄, 整数型, , 当前窗口的DC
    .参数 左上角位置, 坐标_, , 当前窗口在屏幕的左上角位置(相当于 ::SetWindowPos()函数)
    .参数 窗口尺寸, 尺寸_, , 当前窗口在的宽度和高度
    .参数 缓存DC, 整数型, , 内存缓存DC
    .参数 内存缓存左上角坐标, 坐标_, , 内存缓存的左上角坐标(可用于裁剪内存缓存)
    .参数 crKey, 整数型, , 
    .参数 混合样式, 混合函数结构, , 混合样式
    .参数 dwFlags, 整数型, , 

.DLL命令 创建GDI对象_, 整数型, "gdi32.dll", "CreateDIBSection", 公开, 
    .参数 设备场景句柄, 整数型, , 
    .参数 pBitmapInfo, BITMAPINFO, 传址, 
    .参数 常数, 整数型, , 
    .参数 内存地址, 整数型, , 
    .参数 文件映射句柄, 整数型, , 
    .参数 偏移量, 整数型, , 

.DLL命令 删除对象_, 整数型, "gdi32.dll", "DeleteObject", 公开, , DeleteObject
    .参数 对象句柄, 整数型, , hObject,一个GDI对象的句柄

.DLL命令 选入设备场景_, 整数型, "gdi32.dll", "SelectObject", 公开, , SelectObject
    .参数 场景句柄, 整数型, , hdc
    .参数 对象句柄, 整数型, , hobject

.DLL命令 Gdi_图形_创建_自HDC, 整数型, "GdiPlus.dll", "GdipCreateFromHDC", 公开, 
    .参数 hdc, 整数型, , 
    .参数 graphics, 整数型, 传址, 

.DLL命令 Gdi_图形_置呈现模式, 整数型, "GdiPlus.dll", "GdipSetSmoothingMode", 公开, 
    .参数 graphics, 整数型, , 
    .参数 smoothingMode, 整数型, , 

.DLL命令 Gdi_字体成员_创建_自名称, 整数型, "GdiPlus.dll", "GdipCreateFontFamilyFromName", 公开, 
    .参数 name, 字节集, , 
    .参数 fontCollection, 整数型, , 
    .参数 FontFamily, 整数型, 传址, 

.DLL命令 Gdi_图像_创建位图_自文件, 整数型, "GdiPlus.dll", "GdipCreateBitmapFromFile", 公开, 
    .参数 filename, 字节集, , 
    .参数 bitmap, 整数型, 传址, 

.DLL命令 Gdi_图形_画图像_缩放, 整数型, "GdiPlus.dll", "GdipDrawImageRect", 公开, 
    .参数 graphics, 整数型, , 
    .参数 image, 整数型, , 
    .参数 x, 小数型, , 
    .参数 y, 小数型, , 
    .参数 width, 小数型, , 
    .参数 height, 小数型, , 

.DLL命令 Gdi_图像_销毁, 整数型, "GdiPlus.dll", "GdipDisposeImage", 公开, 
    .参数 image, 整数型, , 

.DLL命令 Gdi_路径_创建, 整数型, "GdiPlus.dll", "GdipCreatePath", 公开, 
    .参数 brushMode, 整数型, , 
    .参数 path, 整数型, 传址, 

.DLL命令 Gdi_路径_加入文本, 整数型, "GdiPlus.dll", "GdipAddPathString", 公开, 
    .参数 path, 整数型, , 
    .参数 string, 字节集, , 
    .参数 length, 整数型, , 
    .参数 family, 整数型, , 
    .参数 style, 整数型, , 
    .参数 emSize, 小数型, , 
    .参数 layoutRect, RectF, , 
    .参数 format, 整数型, , 

.DLL命令 Gdi_画笔_创建_自颜色, 整数型, "GdiPlus.dll", "GdipCreatePen1", 公开, 
    .参数 color, 整数型, , 
    .参数 width, 小数型, , 
    .参数 unit, 整数型, , 
    .参数 pen, 整数型, 传址, 

.DLL命令 Gdi_刷子_创建_固色画刷, 整数型, "GdiPlus.dll", "GdipCreateSolidFill", 公开, 
    .参数 color, 整数型, , 
    .参数 brush, 整数型, 传址, 

.DLL命令 Gdi_图形_画路径, 整数型, "GdiPlus.dll", "GdipDrawPath", 公开, 
    .参数 graphics, 整数型, , 
    .参数 pen, 整数型, , 
    .参数 path, 整数型, , 

.DLL命令 Gdi_图形_填充路径, 整数型, "GdiPlus.dll", "GdipFillPath", 公开, 
    .参数 graphics, 整数型, , 
    .参数 brush, 整数型, , 
    .参数 path, 整数型, , 

.DLL命令 Gdi_画笔_销毁, 整数型, "GdiPlus.dll", "GdipDeletePen", 公开, 
    .参数 pen, 整数型, , 

.DLL命令 Gdi_刷子_销毁, 整数型, "GdiPlus.dll", "GdipDeleteBrush", 公开, 
    .参数 brush, 整数型, , 

.DLL命令 Gdi_路径_销毁, 整数型, "GdiPlus.dll", "GdipDeletePath", 公开, 
    .参数 path, 整数型, , 

.DLL命令 Gdi_刷子_创建_线性渐变画刷, 整数型, "GdiPlus.dll", "GdipCreateLineBrush", 公开, 
    .参数 point1, PointF, , 
    .参数 point2, PointF, , 
    .参数 color1, 整数型, , 
    .参数 color2, 整数型, , 
    .参数 wrapMode, 整数型, , 
    .参数 lineGradient, 整数型, 传址, 

.DLL命令 Gdi_刷子_创建_线性渐变画刷_自矩形, 整数型, "GdiPlus.dll", "GdipCreateLineBrushFromRect", 公开, 
    .参数 rect, RectF, , 
    .参数 color1, 整数型, , 
    .参数 color2, 整数型, , 
    .参数 mode, 整数型, , 
    .参数 wrapMode, 整数型, , 
    .参数 lineGradient, 整数型, 传址, 

.DLL命令 Gdi_区域_创建_自矩形, 整数型, "GdiPlus.dll", "GdipCreateRegionRect", 公开, 
    .参数 rect, RectF, , 
    .参数 region, 整数型, 传址, 

.DLL命令 Gdi_区域_销毁, 整数型, "GdiPlus.dll", "GdipDeleteRegion", 公开, 
    .参数 region, 整数型, , 

.DLL命令 Gdi_图形_置剪辑区域_自区域, 整数型, "GdiPlus.dll", "GdipSetClipRegion", 公开, 
    .参数 graphics, 整数型, , 
    .参数 region, 整数型, , 
    .参数 combineMode, 整数型, , 

.DLL命令 取得窗口信息_, 整数型, "user32", "GetWindowLongA", 公开, , 从指定窗口的结构中取得信息  由nIndex决定。零表示出错。会设置GetLastError
    .参数 窗口句柄, 整数型, , 欲为其获取信息的窗口的句柄
    .参数 属性, 整数型, , 欲取回的信息，可以是下述任何一个常数：;GWL_EXSTYLE：扩展窗口样式;GWL_STYLE：窗口样式;GWL_WNDPROC：该窗口的窗口函数的地址;GWL_HINSTANCE：拥有窗口的实例的句柄;GWL_HWNDPARENT：该窗口之父的句柄。不要用SetWindowWord来改变这个值;GWL_ID：对话框中一个子窗口的标识符;GWL_USERDATA：含义由应用程序规定;DWL_DLGPROC：这个窗口的对话框函数地址;DWL_MSGRESULT：在对话框函数中处理的一条消息返回的值;DWL_USER：含义由应用程序规定;

.DLL命令 设置窗口信息_, 整数型, "user32", "SetWindowLongA", 公开, , 在窗口结构中为指定的窗口设置信息  指定数据的前一个值
    .参数 窗口句柄, 整数型, , hwnd，欲为其取得信息的窗口的句柄
    .参数 窗口信息值, 整数型, , nIndex，请参考GetWindowLong函数的nIndex参数的说明
    .参数 窗口信息新值, 整数型, , dwNewLong，由nIndex指定的窗口信息的新值

.DLL命令 Gdi_图形_销毁, 整数型, "GdiPlus.dll", "GdipDeleteGraphics", 公开, 
    .参数 graphics, 整数型, , 

.DLL命令 删除设备场景_, 整数型, "gdi32.dll", "DeleteDC", 公开, ,
    .参数 设备场景句柄, 整数型, , hdc，将要删除的设备场景

.DLL命令 GdiplusStartup, 整数型, "gdiplus.dll", "GdiplusStartup", , 
    .参数 token, 整数型, 传址, 
    .参数 inputbuf, GdiplusStartupInput, , 
    .参数 outputbuf, 整数型, , 

.DLL命令 GdiplusShutdown, 空白型, "gdiplus.dll", "GdiplusShutdown", , 
    .参数 token, 整数型, , 

.DLL命令 MultiByteToWideChar, 整数型, "", "MultiByteToWideChar", , 
    .参数 CodePage, 整数型, , 
    .参数 dwFlags, 整数型, , 
    .参数 lpMultiByteStr, 文本型, , 
    .参数 cchMultiByte, 整数型, , 
    .参数 lpWideCharStr, 字节集, , 
    .参数 cchWideChar, 整数型, , 

.DLL命令 取设备场景_, 整数型, "user32", "GetDC", 公开, 获取指定窗口的设备场景  指定窗口的设备场景句柄，出错则为0
    .参数 窗口的句柄, 整数型, , 将获取其设备场景的窗口的句柄。若为0，则要获取整个屏幕的DC;

.DLL命令 ReleaseDC, 整数型, "user32", "ReleaseDC", , 释放由调用GetDC或GetWindowDC函数获取的指定设备场景。它对类或私有设备场景无效（但这样的调用不会造成损害）　执行成功为1，否则为0
    .参数 hwnd, 整数型, , 要释放的设备场景相关的窗口句柄
    .参数 hdc, 整数型, , 要释放的设备场景句柄;  

.DLL命令 GdipDeleteFontFamily, 整数型, "GdiPlus.dll", "GdipDeleteFontFamily", , 
    .参数 FontFamily, 整数型, , 

.DLL命令 GetOpenFileName, 整数型, "Comdlg32.dll", "GetOpenFileNameA", , 
    .参数 pOpenfilename, OPENFILENAME, 传址, 

.DLL命令 LocalSize_OPENFILENAME, 整数型, "", "LocalSize", , 
    .参数 hMem, OPENFILENAME, , 

.DLL命令 PathRemoveFileSpec, 整数型, "Shlwapi.dll", "PathRemoveFileSpecA", , 
    .参数 pszPath, 文本型, , 

.DLL命令 PathRemoveExtension, 空白型, "Shlwapi.dll", "PathRemoveExtensionA", , 
    .参数 pszPath, 文本型, , 

.DLL命令 FindWindowEx, 整数型, "user32", "FindWindowExA", , 在窗口列表中寻找与指定条件相符的第一个子窗口　找到的窗口的句柄。如未找到相符窗口，则返回零。会设置GetLastError
    .参数 hWnd1, 整数型, , 在其中查找子的父窗口。如设为零，表示使用桌面窗口（通常说的顶级窗口都被认为是桌面的子窗口，所以也会对它们进行查找）
    .参数 hWnd2, 整数型, , 从这个窗口后开始查找。这样便可利用对FindWindowEx的多次调用找到符合条件的所有子窗口。如设为零，表示从第一个子窗口开始搜索
    .参数 lpsz1, 文本型, , 欲搜索的类名。零表示忽略
    .参数 lpsz2, 文本型, , 欲搜索的类名。零表示忽略;

.DLL命令 SetWindowText, 整数型, "user32", "SetWindowTextA", , 设置窗口的标题文字或控件的内容（在vb里使用：针对vb窗体，应使用caption或text属性）　非零表示成功，零表示失败。会设置GetLastError
    .参数 hwnd, 整数型, , 要设置文字的窗口的句柄
    .参数 lpString, 文本型, , 要设到hwnd窗口中的文字;

.DLL命令 GetParent, 整数型, "user32", "GetParent", , 判断指定窗口的父窗口　父窗口的句柄。如窗口没有父，或遇到错误，则返回零。会设置GetLastError
    .参数 hwnd, 整数型, , 欲测试的窗口的句柄;

.DLL命令 API_执行MCI命令, 整数型, "winmm.dll", "mciExecute", 公开, 执行MCI设备命令　
    .参数 lpstrCommand, 文本型, , MCI命令

.DLL命令 API_获取MCI错误信息, 整数型, "winmm.dll", "mciGetErrorStringA", 公开, 返回MCI出错代码的文本描述　
    .参数 错误代码, 整数型, , 
    .参数 文本缓冲区, 文本型, 传址, 装载错误文本信息的容器，必须先初始化为适当长度的文本。
    .参数 文本长度, 整数型, , 错误文本信息的最大长度，超过此长度将被自动抛弃

.DLL命令 API_发送MCI文本, 整数型, "winmm.dll", "mciSendStringA", 公开, 向MCI设备发出一条命令字符串　
    .参数 lpstrCommand, 文本型, , 要发送的MCI文本
    .参数 lpstrReturnString, 文本型, 传址, 存放返回文本的容器，必须先初始化为适当长度的文本。若不需要接受返回的文本，直接提供一个文本型常量也可。
    .参数 uReturnLength, 整数型, , 返回文本的最大长度，或设为0（不需要返回文本）
    .参数 hwndCallback, 整数型, , 接收“wait”、“notify”消息的窗口句柄。基本上用不着，保持为0即可

.DLL命令 API_取客户区矩形, 整数型, "user32", "GetClientRect", 公开, 返回指定窗口客户区矩形的大小　非零表示成功，零表示失败。会设置GetLastError
    .参数 窗口句柄, 整数型, , 欲计算大小的目标窗口
    .参数 矩形区域, 窗口矩形区域, 传址, 指定一个矩形，用客户区域的大小载入（以像素为单位）;  

.程序集 程序集1, , , 

.子程序 _启动子程序, 整数型, , 请在本子程序中放置易模块初始化代码
载入 (窗口1, , 假)
_临时子程序 () ' 在初始化代码执行完毕后调用测试代码
返回 (0) ' 可以根据您的需要返回任意数值

.子程序 _临时子程序, 空白型, , 
 ' 本名称子程序用作测试程序用，仅在开发及调试环境中有效，编译发布程序前将被系统自动清空，请将所有用作测试的临时代码放在本子程序中。 ***注意不要修改本子程序的名称、参数及返回值类型。


.子程序 A2W, 字节集, , 将Ansi转成Unicode
.参数 欲转换的文本, 文本型, , 

.局部变量 缓冲区, 字节集, , , 
.局部变量 字符数目, 整数型, , , 包括结尾0

赋值 (字符数目, MultiByteToWideChar (0, 0, 欲转换的文本, -1, {  }, 0)) ' 返回字符数目
 ' 输出调试文本 (字符数目)
赋值 (缓冲区, 取空白字节集 (相乘 (字符数目, 2)))
MultiByteToWideChar (0, 0, 欲转换的文本, -1, 缓冲区, 字符数目)
返回 (缓冲区)
 ' BOOL MByteToWChar(LPCSTR lpcszStr, LPWSTR lpwszStr, DWORD dwSize)
 ' {
 ' // Get the required size of the buffer that receives the Unicode' // string.
 ' DWORD dwMinSize;
 ' dwMinSize = MultiByteToWideChar (CP_ACP, 0, lpcszStr, -1, NULL, 0);

 ' if(dwSize < dwMinSize)
 ' {' return FALSE;' }

 ' // Convert headers from ASCII to Unicode.
 ' MultiByteToWideChar (CP_ACP, 0, lpcszStr, -1, lpwszStr, dwMinSize);
 ' return TRUE;
 ' }



.子程序 RGB到ARGB, 整数型, , 
.参数 RGB颜色, 整数型, , 
.参数 透明度, 整数型, , 

.局部变量 Color, 字节集, , , 

赋值 (Color, 到字节集 (RGB颜色))
赋值 (RGB颜色, 位或 (相加 (Color [3], 相乘 (Color [2], 256), 相乘 (Color [1], 65536)), 左移 (透明度, 24))) ' 转换成GDI+的颜色值
返回 (RGB颜色)

.子程序 关闭GDI绘图, 空白型, , 
.参数 Token, 整数型, , 必须为启动Gdi时返回的Token

GdiplusShutdown (Token)

.子程序 启动GDI绘图, 整数型, , Return Token
.参数 GdiplusVersion, 整数型, 可空, 默认为1

.局部变量 GpInput, GdiplusStartupInput, , , 
.局部变量 Token, 整数型, , , 

.如果真 (是否为空 (GdiplusVersion))
    赋值 (GdiplusVersion, 1)
.如果真结束
赋值 (GpInput.GdiplusVersion, GdiplusVersion)
GdiplusStartup (Token, GpInput, 0)
返回 (Token)

.类模块 歌词处理类, , , 分析处理LRC格式的歌词。原创代码，嘿嘿

.程序集变量 私_歌词数据, 歌词分句, , "0", 
.程序集变量 私_歌词内容, 文本型, , , 
.程序集变量 私_时间补偿值, 整数型, , , 
.程序集变量 匿名程序集变量_71, 空白型, , , 
.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 载入, 空白型, 公开, 载入歌词数据进行预处理
.参数 参_歌词数据, 文本型, , 可以为歌词路径或者完整的歌词文本内容。

.局部变量 局_歌词数组, 文本型, , "0", 
.局部变量 局_计次, 整数型, , , 
.局部变量 局_起始位置, 整数型, , , 
.局部变量 局_结束位置, 整数型, , , 
.局部变量 局_临时文本, 文本型, , , 
.局部变量 局_秒, 小数型, , , 
.局部变量 局_单句歌词, 歌词分句, , , 

清除数组 (私_歌词数据)
.如果真 (文件是否存在 (参_歌词数据))
    赋值 (私_歌词内容, 到文本 (读入文件 (参_歌词数据)))
.如果真结束
赋值 (私_歌词内容, 子文本替换 (私_歌词内容, 字符 (13), , , , 真))
赋值 (局_歌词数组, 分割文本 (私_歌词内容, 字符 (10), )) ' 有些歌词是以换行符换行，有些则是以{10}换行。这里先抽掉{13}，统一成{10}
赋值 (私_歌词内容, “”)
.计次循环首 (取数组成员数 (局_歌词数组), 局_计次)
    赋值 (私_歌词内容, 相加 (私_歌词内容, 局_歌词数组 [局_计次], #换行符)) ' 顺便把歌词也重置为换行符换行的标准格式
    赋值 (局_结束位置, 0)
    赋值 (局_起始位置, 寻找文本 (局_歌词数组 [局_计次], “[”, 局_结束位置, 假))
    .判断循环首 (不等于 (局_起始位置, -1))
        赋值 (局_结束位置, 寻找文本 (局_歌词数组 [局_计次], “:”, 局_起始位置, 假))
        赋值 (局_临时文本, 取文本中间 (局_歌词数组 [局_计次], 相加 (局_起始位置, 1), 相减 (局_结束位置, 局_起始位置, 1)))
        赋值 (局_起始位置, 相加 (局_结束位置, 1))
        赋值 (局_结束位置, 寻找文本 (局_歌词数组 [局_计次], “]”, 局_起始位置, 假))
        .判断开始 (等于 (到小写 (局_临时文本), “offset”))
             ' 时间补偿值
            赋值 (私_时间补偿值, 到整数 (取文本中间 (局_歌词数组 [局_计次], 局_起始位置, 相减 (局_结束位置, 局_起始位置))))
        .默认
            .如果真 (并且 (大于 (取代码 (局_临时文本, 1), 47), 小于 (取代码 (局_临时文本, 1), 58)))
                 ' 如果标签项为数值，则作为时间标签处理
                赋值 (局_秒, 到数值 (取文本中间 (局_歌词数组 [局_计次], 局_起始位置, 相减 (局_结束位置, 局_起始位置))))
                赋值 (局_单句歌词.时间值, 相乘 (相加 (相乘 (到整数 (局_临时文本), 60), 局_秒), 1000))
                赋值 (局_起始位置, 倒找文本 (局_歌词数组 [局_计次], “]”, , 假))
                赋值 (局_单句歌词.歌词内容, 取文本右边 (局_歌词数组 [局_计次], 相减 (取文本长度 (局_歌词数组 [局_计次]), 局_起始位置)))
                加入成员 (私_歌词数据, 局_单句歌词)
            .如果真结束
            
            
        .判断结束
        赋值 (局_起始位置, 寻找文本 (局_歌词数组 [局_计次], “[”, 局_结束位置, 假))
    .判断循环尾 ()
.计次循环尾 ()
冒泡排序 ()
输出调试文本 (取数组成员数 (局_歌词数组))

.子程序 取单句歌词, 文本型, , 按照时间值获取单句歌词。时间请换算成毫秒
.参数 参_毫秒值, 整数型, , 
.参数 参_本句开始, 整数型, 参考 可空, 
.参数 参_下句开始, 整数型, 参考 可空, 
.参数 参_下一句歌词, 文本型, 参考 可空, 可以提供一个变量以装载当前歌词的下一句歌词

.局部变量 局_计次, 整数型, , , 

.如果真 (小于 (取数组成员数 (私_歌词数据), 1))
    .如果真 (并且 (等于 (是否为空 (参_下一句歌词), 假), 大于 (取数组成员数 (私_歌词数据), 0)))
        赋值 (参_下一句歌词, 私_歌词数据 [1].歌词内容)
    .如果真结束
    返回 (“”)
.如果真结束
.如果真 (小于 (参_毫秒值, 相加 (私_歌词数据 [1].时间值, 私_时间补偿值)))
    返回 (“”)
.如果真结束
.如果真 (大于或等于 (参_毫秒值, 相加 (私_歌词数据 [取数组成员数 (私_歌词数据)].时间值, 私_时间补偿值)))
    .如果真 (等于 (是否为空 (参_本句开始), 假))
        赋值 (参_本句开始, 私_歌词数据 [取数组成员数 (私_歌词数据)].时间值)
    .如果真结束
    返回 (私_歌词数据 [取数组成员数 (私_歌词数据)].歌词内容)
.如果真结束
.计次循环首 (取数组成员数 (私_歌词数据), 局_计次)
    .如果 (不等于 (局_计次, 取数组成员数 (私_歌词数据)))
        .如果真 (并且 (小于或等于 (相加 (私_歌词数据 [局_计次], 时间值, 私_时间补偿值), 参_毫秒值), 大于 (相加 (私_歌词数据 [相加 (局_计次, 1)].时间值, 私_时间补偿值), 参_毫秒值)))
            .如果真 (等于 (是否为空 (参_本句开始), 假))
                赋值 (参_本句开始, 相加 (私_歌词数据 [局_计次], 时间值, 私_时间补偿值))
            .如果真结束
            .如果真 (等于 (是否为空 (参_下一句歌词), 假))
                赋值 (参_下一句歌词, 私_歌词数据 [相加 (局_计次, 1)].歌词内容)
            .如果真结束
            .如果真 (等于 (是否为空 (参_下句开始), 假))
                赋值 (参_下句开始, 相加 (私_歌词数据 [相加 (局_计次, 1)].时间值, 私_时间补偿值))
            .如果真结束
            返回 (私_歌词数据 [局_计次], 歌词内容)
        .如果真结束
        
    .否则
        返回 (私_歌词数据 [取数组成员数 (私_歌词数据)].歌词内容)
    .如果结束
    
.计次循环尾 ()
返回 (“”)

.子程序 冒泡排序, 空白型, , 对歌词的数据按照时间先后进行排序
.局部变量 i, 整数型, , , 
.局部变量 临时存放, 歌词分句, , , 
.局部变量 l, 整数型, , , 

.计次循环首 (取数组成员数 (私_歌词数据), i)
    .计次循环首 (相减 (取数组成员数 (私_歌词数据), i), l)
        .如果真 (大于 (私_歌词数据 [l], 时间值, 私_歌词数据 [相加 (l, 1)].时间值))
            赋值 (临时存放, 私_歌词数据 [l])
            赋值 (私_歌词数据 [l], 私_歌词数据 [相加 (l, 1)])
            赋值 (私_歌词数据 [相加 (l, 1)], 临时存放)
        .如果真结束
        
    .计次循环尾 ()
.计次循环尾 ()

.子程序 取歌词内容, 文本型, 公开, 获取当前歌词的LRC格式文本。
返回 (私_歌词内容)

.子程序 取纯文本内容, 文本型, , 获取去除标签后的歌词内容。已按照时间先后顺序自动整理并还原多标签的歌词行
.局部变量 局_计次, 整数型, , , 
.局部变量 局_歌词, 文本型, , , 

.计次循环首 (取数组成员数 (私_歌词数据), 局_计次)
    赋值 (局_歌词, 相加 (局_歌词, 私_歌词数据 [局_计次], 歌词内容, #换行符))
.计次循环尾 ()
返回 (局_歌词)

.子程序 取标签值, 文本型, , 获取对应标签的值。如果当前载入的歌词中不包含此标签，则返回空文本
.参数 参_标签, 文本型, , 通常为ti（曲名）、ar（艺人名）、al（专辑名）、by（编者）、offset（时间补偿值）等等，不区分大小写

.局部变量 局_起始位置, 整数型, , , 
.局部变量 局_结束位置, 整数型, , , 

赋值 (局_起始位置, 相加 (寻找文本 (私_歌词内容, 相加 (“[”, 参_标签, “:”), , 真), 2, 取文本长度 (参_标签)))
.如果真 (等于 (局_起始位置, 相加 (1, 取文本长度 (参_标签))))
    返回 (“”)
.如果真结束
赋值 (局_结束位置, 寻找文本 (私_歌词内容, “]”, 局_起始位置, 假))
.如果真 (小于 (局_结束位置, 局_起始位置))
    返回 (“”)
.如果真结束
返回 (取文本中间 (私_歌词内容, 局_起始位置, 相减 (局_结束位置, 局_起始位置)))

.子程序 取时间补偿值, 整数型, , 取得offset的值
返回 (私_时间补偿值)

.子程序 置时间补偿值, 空白型, , 立即生效。设置歌词提前或者延迟的时间。
.参数 参_新补偿值, 整数型, , 

赋值 (私_时间补偿值, 参_新补偿值)


.窗口程序集 窗口程序集1, , , 

.程序集变量 歌词处理, 歌词处理类, , , 
.程序集变量 媒体播放, MCI多媒体播放类, , , 
.程序集变量 路径, 文本型, , , 
.程序集变量 当前位置, 整数型, , , 
.程序集变量 a, 整数型, , , 
.程序集变量 读入的文本, 文本型, , , 
.程序集变量 列表数组, 文本型, , "0", 
.程序集变量 表头, 文本型, , , 
.程序集变量 删除过, 逻辑型, , , 
.程序集变量 剩下的文件, 文本型, , , 
.程序集变量 删除的列表框位置, 整数型, , , 
.程序集变量 程序集变量2, 整数型, , , 
.子程序 _窗口1_创建完毕, 空白型, , 
.局部变量 左音量, 整数型, , , 
.局部变量 右音量, 整数型, , , 

载入 (窗口2, 窗口1, 假)
赋值 (.选中, 真)
加载皮肤 (8, 假)
读入列表 ()
.如果 (不等于 (取项目数 (), 0))
    赋值 (.现行选中项, 0)
    开始播放 ()
.否则
    
.如果结束
4.未知支持库函数_0 ()
左音量.未知支持库函数_7 (右音量)
赋值 (.最大位置, 相除 (未知支持库函数_5 (), 500))
赋值 (.位置, 50)

.子程序 _时钟1_周期事件, 空白型, , 
.局部变量 局_上次歌词, 文本型, 静态, , 
.局部变量 局_本句开始, 整数型, , , 
.局部变量 局_下句开始, 整数型, , , 
.局部变量 局_本次歌词, 文本型, , , 

赋值 (当前位置, 媒体播放.取媒体位置 ())
赋值 (局_本次歌词, 歌词处理.取单句歌词 (当前位置, 局_本句开始, 局_下句开始))
.如果 (或者 (不等于 (局_上次歌词, 局_本次歌词), .选中))
    赋值 (局_上次歌词, 局_本次歌词)
    .如果 (.选中)
        画文本 (窗口2, 相乘 (55, 相加 (相除 (取文本长度 (局_本次歌词), 2), 1)), 局_本次歌词, 55, “黑体”, 65251, 45363, 1344510, #黄色, 假, 相除 (相减 (当前位置, 局_本句开始), 相减 (局_下句开始, 局_本句开始)))
    .否则
        画文本 (窗口2, 相乘 (55, 相加 (相除 (取文本长度 (局_本次歌词), 2), 1)), 局_本次歌词, 55, “黑体”, 65251, 45363, 1344510, #黄色, 假, )
    .如果结束
    
.否则
    
.如果结束
赋值 (.位置, 相除 (当前位置, 100))
.如果 (等于 (.位置, .最大位置))
    赋值 (.时钟周期, 0)
    赋值 (.时钟周期, 0)
    .如果 (等于 (.选中, 真))
        取焦点项目 ()
        开始播放 ()
    .否则
        .如果 (等于 (.选中, 真))
            .如果 (等于 (全局变量1, 相减 (取项目数 (), 1)))
                赋值 (全局变量1, 0)
                开始播放 ()
            .否则
                赋值 (全局变量1, 相加 (全局变量1, 0))
                全局变量1.置焦点项目 ()
                开始播放 ()
            .如果结束
            
        .否则
            .如果 (等于 (.选中, 真))
                .如果 (等于 (全局变量1, 相减 (取项目数 (), 1)))
                    返回 ()
                .否则
                    赋值 (全局变量1, 取随机数 (0, 相减 (取项目数 (), 1)))
                    全局变量1.置焦点项目 ()
                    开始播放 ()
                .如果结束
                
            .否则
                .如果 (等于 (.选中, 真))
                    
                    .如果 (等于 (.现行选中项, 相减 (取项目数 (), 1)))
                        媒体播放.停止媒体 ()
                        赋值 (.位置, 0)
                        赋值 (.禁止图片, 未知支持库函数_31 (#数字图片, 0, ))
                        赋值 (.禁止图片, 未知支持库函数_31 (#数字图片, 0, ))
                        赋值 (.禁止图片, 未知支持库函数_31 (#数字图片, 0, ))
                        赋值 (.禁止图片, 未知支持库函数_31 (#数字图片, 0, ))
                        赋值 (.现行选中项, 0)
                    .否则
                        _按钮下一首_被单击 ()
                        
                        
                        
                    .如果结束
                    
                .否则
                    
                    
                    
                .如果结束
                
            .如果结束
            
        .如果结束
        
    .如果结束
    
.否则
    
.如果结束


.子程序 _列表框1_被双击, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

开始播放 ()

.子程序 开始播放, 空白型, , 
.局部变量 操作结果, 整数型, , , 
.局部变量 GC, 文本型, , , 
.局部变量 文件, 文本型, , , 

媒体播放.关闭媒体 ()
赋值 (.时钟周期, 50)
赋值 (.时钟周期, 1000)
赋值 (GC, 相加 (取文本左边 (列表数组 [相加 (取焦点项目 (), 1)], 相减 (取文本长度 (列表数组 [相加 (取焦点项目 (), 1)]), 4)), “.lrc”))
.如果 (等于 (文件是否存在 (GC), 假))
    媒体播放.打开媒体 (列表数组 [相加 (取焦点项目 (), 1)])
    媒体播放.播放媒体 ()
    赋值 (窗口2., 假)
    赋值 (.标题, “暂停”)
    赋值 (.最大位置, 相除 (媒体播放.取媒体长度 (), 100))
.否则
    
    媒体播放.打开媒体 (列表数组 [相加 (取焦点项目 (), 1)])
    歌词处理.载入 (GC)
    赋值 (窗口2., 真)
    媒体播放.播放媒体 ()
    赋值 (.标题, “暂停”)
    赋值 (.最大位置, 相除 (媒体播放.取媒体长度 (), 100))
.如果结束


.子程序 _画板_时间转图片, 空白型, , 
.参数 得到时间, 整数型, , 

.局部变量 temp, 整数型, , , 
.局部变量 时, 整数型, , , 
.局部变量 分, 整数型, , , 
.局部变量 秒, 整数型, , , 
.局部变量 aa, 整数型, , , 

.如果真 (大于 (得到时间, 0))
     ' 得到时间 ＝ 四舍五入 (得到时间 ÷ 1000, )
    .如果真 (大于或等于 (得到时间, 3600))
        赋值 (时, 取整 (相除 (得到时间, 3600)))
        赋值 (aa, 相减 (得到时间, 相乘 (时, 3600)))
        赋值 (分, 取整 (相除 (aa, 60)))
        赋值 (秒, 相减 (aa, 相乘 (分, 60)))
        
    .如果真结束
    .如果真 (并且 (小于 (得到时间, 3600), 大于或等于 (得到时间, 60)))
        赋值 (分, 取整 (相除 (得到时间, 60)))
        赋值 (秒, 相减 (得到时间, 相乘 (分, 60)))
        
    .如果真结束
    .如果真 (小于 (得到时间, 60))
        赋值 (秒, 得到时间)
        
    .如果真结束
    赋值 (.禁止图片, 未知支持库函数_31 (#数字图片, 绝对取整 (相除 (分, 10)), ))
    赋值 (.禁止图片, 未知支持库函数_31 (#数字图片, 求余数 (分, 10), ))
    赋值 (.禁止图片, 未知支持库函数_31 (#数字图片, 绝对取整 (相除 (秒, 10)), ))
    赋值 (.禁止图片, 未知支持库函数_31 (#数字图片, 求余数 (秒, 10), ))
.如果真结束


.子程序 _滑块条1_位置被改变, 空白型, , 
媒体播放.置媒体位置 (相乘 (.位置, 100), 真)


.子程序 _添加文件夹_被选择, 空白型, , 
.局部变量 目录名, 文本型, , , 
.局部变量 找到的文件, 文本型, , , 
.局部变量 n1, 整数型, , , 
.局部变量 列表数, 文本型, , , 播放的列表
.局部变量 打开的文件号, 整数型, , , 


赋值 (目录名, 相加 (未知支持库函数_2 (“添加MP3文件夹”, ), “\”))
赋值 (找到的文件, 寻找文件 (相加 (目录名, “*.*”), ))
.如果真 (等于 (文件是否存在 (“c:\播放列表.m3u”), 假))
    写到文件 (“c:\播放列表.m3u”, {  })
.如果真结束
赋值 (打开的文件号, 打开文件 (“c:\播放列表.m3u”, , ))

.判断循环首 (不等于 (找到的文件, “”))
    .如果真 (等于 (取文本右边 (找到的文件, 3), “mp3”))
        找到的文件.加入项目 ()
        赋值 (列表数, 相加 (列表数, 目录名, 找到的文件, #换行符))
    .如果真结束
    赋值 (找到的文件, 寻找文件 ())
.判断循环尾 ()
写文本行 (打开的文件号, 列表数)
置文件属性 (“c:\播放列表.m3u”, 2)
清空 ()
关闭文件 (打开的文件号)
读入列表 ()


.子程序 取列表加入列表框, 空白型, , 
.局部变量 n2, 整数型, , , 
.局部变量 最后的列表, 文本型, , "0", 

.计次循环首 (取数组成员数 (列表数组), n2)
    赋值 (最后的列表, 分割文本 (列表数组 [n2], “\”, ))
    .如果 (小于 (n2, 10))
        赋值 (表头, 相加 (“0”, 到文本 (n2)))
    .否则
        赋值 (表头, 到文本 (n2))
    .如果结束
    相加 (表头, “.”, 取文本左边 (最后的列表 [取数组成员数 (最后的列表)], 相减 (取文本长度 (最后的列表 [取数组成员数 (最后的列表)]), 4))).加入项目 ()
.计次循环尾 ()

.子程序 读入列表, 空白型, , 
.局部变量 文本数组1, 文本型, , "0", 
.局部变量 n1, 整数型, , , 
.局部变量 n2, 整数型, , , 
.局部变量 最后的列表, 文本型, , "0", 

.如果 (等于 (文件是否存在 (“c:\播放列表.m3u”), 真)) ' 如果有播放文件存盘
    赋值 (读入的文本, 到文本 (读入文件 (“c:\播放列表.m3u”)))
    赋值 (文本数组1, 分割文本 (读入的文本, #换行符, ))
    .计次循环首 (取数组成员数 (文本数组1), n1)
        .如果真 (不等于 (文本数组1 [n1], “”))
            加入成员 (列表数组, 文本数组1 [n1])
            
        .如果真结束
        
    .计次循环尾 ()
    取列表加入列表框 ()
.否则
    
.如果结束


.子程序 _时钟2_周期事件, 空白型, , 
_画板_时间转图片 (取整 (相除 (当前位置, 1000)))

.子程序 _删除列表_被选择, 空白型, , 
赋值 (.时钟周期, 0)
删除文件 (“c:\播放列表.m3u”)
清空 ()
清除数组 (列表数组)
赋值 (.位置, 0)
媒体播放.关闭媒体 ()
赋值 (.禁止图片, 未知支持库函数_31 (#数字图片, 0, ))
赋值 (.禁止图片, 未知支持库函数_31 (#数字图片, 0, ))
赋值 (.禁止图片, 未知支持库函数_31 (#数字图片, 0, ))
赋值 (.禁止图片, 未知支持库函数_31 (#数字图片, 0, ))
赋值 (窗口2., 假)

.子程序 _列表框1_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

弹出菜单 ()

.子程序 _删除选中_被选择, 空白型, , 
删除后得到的文本 ()

.子程序 删除后得到的文本, 空白型, , 
赋值 (删除的列表框位置, 取焦点项目 ())
删除成员 (列表数组, 相加 (取焦点项目 (), 1), )
清空 ()
取列表加入列表框 ()
获取焦点 ()
.如果 (不等于 (删除的列表框位置, 取数组成员数 (列表数组)))
    删除的列表框位置.选择项目 ()
.否则
    相减 (删除的列表框位置, 1).选择项目 ()
.如果结束
赋值 (删除过, 真)


.子程序 _窗口1_将被销毁, 空白型, , 
.局部变量 n1, 整数型, , , 

.如果真 (等于 (删除过, 真))
    .计次循环首 (取数组成员数 (列表数组), n1)
        赋值 (剩下的文件, 相加 (剩下的文件, 列表数组 [n1], #换行符))
    .计次循环尾 ()
    关闭所有文件 ()
    删除文件 (“c:\播放列表.m3u”)
    写到文件 (“c:\播放列表.m3u”, 到字节集 (剩下的文件))
    置文件属性 (“c:\播放列表.m3u”, 2)
.如果真结束


.子程序 _按钮1上一首_被单击, 空白型, , 
赋值 (.时钟周期, 0)
赋值 (.时钟周期, 0)
相减 (取焦点项目 (), 1).置焦点项目 ()
赋值 (.位置, 0)
开始播放 ()

.子程序 _按钮下一首_被单击, 空白型, , 
赋值 (.时钟周期, 0)
赋值 (.时钟周期, 0)
相加 (取焦点项目 (), 1).置焦点项目 ()
赋值 (.位置, 0)
开始播放 ()


.子程序 _按钮播放_被单击, 空白型, , 
.如果 (不等于 (.标题, “暂停”))
    媒体播放.继续媒体 ()
    赋值 (.标题, “暂停”)
.否则
    .如果 (不等于 (.标题, “播放”))
        赋值 (.标题, “播放”)
        媒体播放.暂停媒体 ()
    .否则
        
    .如果结束
    
.如果结束


.子程序 _单曲播放_被单击, 空白型, , 
赋值 (.选中, 真)
赋值 (.选中, 假)
赋值 (.选中, 假)
赋值 (.选中, 假)

.子程序 _循环播放_被单击, 空白型, , 
赋值 (.选中, 假)
赋值 (.选中, 真)
赋值 (.选中, 假)
赋值 (.选中, 假)


.子程序 _随机播放_被单击, 空白型, , 
赋值 (.选中, 假)
赋值 (.选中, 假)
赋值 (.选中, 真)
赋值 (.选中, 假)


.子程序 _顺序播放_被单击, 空白型, , 
赋值 (.选中, 假)
赋值 (.选中, 假)
赋值 (.选中, 假)
赋值 (.选中, 真)


.子程序 _停止_被单击, 空白型, , 
媒体播放.停止媒体 ()
赋值 (.位置, 0)
赋值 (.时钟周期, 0)
赋值 (.时钟周期, 0)
赋值 (.禁止图片, 未知支持库函数_31 (#数字图片, 0, ))
赋值 (.禁止图片, 未知支持库函数_31 (#数字图片, 0, ))
赋值 (.禁止图片, 未知支持库函数_31 (#数字图片, 0, ))
赋值 (.禁止图片, 未知支持库函数_31 (#数字图片, 0, ))


.子程序 _随机_被单击, 空白型, , 
赋值 (全局变量1, 取随机数 (0, 相减 (取项目数 (), 1)))
全局变量1.置焦点项目 ()
开始播放 ()


.子程序 _查找_被选择, 空白型, , 
载入 (窗口3, , 真)

.子程序 _滑块条2_位置被改变, 空白型, , 
相乘 (.位置, 500).未知支持库函数_8 (相乘 (.位置, 500))

.子程序 _打开所在目录_被选择, 空白型, , 
.如果 (等于 (.现行选中项, -1))
    信息框 (“列表没歌曲，请添加！”, 0, “错误”)
.否则
    运行 (相加 (“explorer.exe /e,/select, ”, 列表数组 [相加 (取焦点项目 (), 1)]), 假, )
    
.如果结束


.窗口程序集 窗口程序集2, , , 

.程序集变量 DC, 空白型, , , 
.程序集变量 g_Token, 整数型, , , 
.子程序 _窗口2_创建完毕, 空白型, , 
移动 (相减 (窗口1., 100), 相加 (窗口1., 窗口1.), , )
赋值 (DC, 取设备场景_ (窗口2.取窗口句柄 ()))
赋值 (g_Token, 启动GDI绘图 ())
画文本 (窗口2, 相乘 (55, 相加 (相除 (取文本长度 (“”), 2), 1)), “”, 55, “黑体”, 65251, 45363, 1344510, #黄色, 假, )
赋值 (., 真)

.子程序 画文本, 空白型, , 此段代码来自wangshijun，大家谢谢他。本人只是改编了一下，并解决部分内存泄漏
.参数 窗口, 窗口, , 
.参数 参窗口宽度, 整数型, , 
.参数 参文本数据, 文本型, , 
.参数 参字体大小, 整数型, , 像素
.参数 参字体名称, 文本型, , 
.参数 参渐变颜色1, 整数型, , 
.参数 参渐变颜色2, 整数型, , 
.参数 参同步渐变颜色1, 整数型, , 
.参数 参同步渐变颜色2, 整数型, , 
.参数 是否有背景, 逻辑型, , 
.参数 同步进度, 小数型, 可空, 

.局部变量 旧窗口风格, 整数型, , , 
.局部变量 左上角坐标, 坐标_, , , 
.局部变量 缓存左上角坐标, 坐标_, , , 
.局部变量 窗口尺寸, 尺寸_, , , 
.局部变量 内存场景, 整数型, , , 
.局部变量 文本矩形, RectF, , , 
.局部变量 位图信息, BITMAPINFO, , , 
.局部变量 内存位图, 整数型, , , 
.局部变量 旧位图, 整数型, , , 
.局部变量 画笔轮廓, 整数型, , , 
.局部变量 阴影刷子, 整数型, , , 
.局部变量 阴影笔画, 整数型, , , 
.局部变量 阴影路径, 整数型, , , 
.局部变量 路径, 整数型, , , 
.局部变量 字体, 整数型, , , 
.局部变量 刷子, 整数型, , , 
.局部变量 画板, 整数型, , , 
.局部变量 layoutRect, RectF, , , 
.局部变量 nativeFamily, 整数型, , , 
.局部变量 图像, 整数型, , , 
.局部变量 混合函数, 混合函数结构, , , 
.局部变量 矩形, RectF, , , 
.局部变量 区域, 整数型, , , 

赋值 (位图信息.biSize, 40)
赋值 (位图信息.biBitCount, 32)
赋值 (位图信息.biWidth, 相乘 (参字体大小, 相加 (相除 (取文本长度 (参文本数据), 2), 1)))
赋值 (位图信息.biHeight, 相加 (参字体大小, 15))
赋值 (位图信息.biPlanes, 1)
赋值 (位图信息.biSizeImage, 相除 (相乘 (位图信息.biWidth, 位图信息.biHeight, 位图信息.biBitCount), 8))

赋值 (文本矩形.X, 10)
赋值 (文本矩形.Y, 5)
赋值 (文本矩形.Width, 相乘 (参字体大小, 相加 (相除 (取文本长度 (参文本数据), 2), 1)))
赋值 (文本矩形.Height, 参字体大小)

赋值 (内存场景, CreateCompatibleDC (DC))
赋值 (内存位图, 创建GDI对象_ (内存场景, 位图信息, 0, 0, 0, 0))
赋值 (旧位图, 选入设备场景_ (内存场景, 内存位图))
Gdi_图形_创建_自HDC (内存场景, 画板)
Gdi_图形_置呈现模式 (画板, 4)
Gdi_字体成员_创建_自名称 (A2W (参字体名称), 0, nativeFamily)
.如果真 (等于 (是否有背景, 真))
    Gdi_图像_创建位图_自文件 (A2W (“E:\programs\计算机编程\易语言资源区\半成品\墙纸\玻璃PSD\成品三.png”), 图像)
    Gdi_图形_画图像_缩放 (画板, 图像, 0, 0, 参窗口宽度, 相加 (参字体大小, 15))
    Gdi_图像_销毁 (图像)
.如果真结束

 ' ========阴影===================

Gdi_路径_创建 (1, 阴影路径)
赋值 (layoutRect.X, 12)
赋值 (layoutRect.Y, 9)
Gdi_路径_加入文本 (阴影路径, A2W (参文本数据), 相减 (相除 (取字节集长度 (A2W (参文本数据)), 2), 1), nativeFamily, 1, 参字体大小, layoutRect, 0)
Gdi_画笔_创建_自颜色 (RGB到ARGB (#黑色, 50), 2, 0, 阴影笔画)
Gdi_刷子_创建_固色画刷 (RGB到ARGB (#黑色, 50), 阴影刷子)
Gdi_图形_画路径 (画板, 阴影笔画, 阴影路径)
Gdi_图形_填充路径 (画板, 阴影刷子, 阴影路径)
Gdi_画笔_销毁 (阴影笔画)
Gdi_刷子_销毁 (阴影刷子)
Gdi_路径_销毁 (阴影路径)
 ' =========正文===================
Gdi_路径_创建 (1, 路径)
赋值 (layoutRect.X, 10)
赋值 (layoutRect.Y, 7)
Gdi_路径_加入文本 (路径, A2W (参文本数据), 相减 (相除 (取字节集长度 (A2W (参文本数据)), 2), 1), nativeFamily, 1, 参字体大小, layoutRect, 0)
Gdi_刷子_创建_线性渐变画刷_自矩形 (文本矩形, RGB到ARGB (参渐变颜色1, 255), RGB到ARGB (参渐变颜色2, 255), 1, 0, 刷子)
Gdi_画笔_创建_自颜色 (RGB到ARGB (#黑色, 155), 2, 0, 画笔轮廓)
Gdi_图形_画路径 (画板, 画笔轮廓, 路径)
Gdi_图形_填充路径 (画板, 刷子, 路径)
Gdi_画笔_销毁 (画笔轮廓)
Gdi_刷子_销毁 (刷子)
.如果真 (等于 (是否为空 (同步进度), 假))
    赋值 (矩形.Y, 7)
    赋值 (矩形.Width, 相乘 (位图信息.biWidth, 同步进度))
    .如果真 (大于 (矩形.Width, 位图信息.biWidth))
        赋值 (矩形.Width, 位图信息.biWidth)
    .如果真结束
    赋值 (矩形.Height, 参字体大小)
.如果真结束
Gdi_区域_创建_自矩形 (矩形, 区域)
Gdi_图形_置剪辑区域_自区域 (画板, 区域, #合并模式_替代)
Gdi_刷子_创建_线性渐变画刷_自矩形 (文本矩形, RGB到ARGB (参同步渐变颜色1, 255), RGB到ARGB (参同步渐变颜色2, 255), 1, 0, 刷子)
Gdi_画笔_创建_自颜色 (RGB到ARGB (#黑色, 155), 2, 0, 画笔轮廓)
Gdi_图形_画路径 (画板, 画笔轮廓, 路径)
Gdi_图形_填充路径 (画板, 刷子, 路径)
Gdi_刷子_销毁 (刷子)
Gdi_画笔_销毁 (画笔轮廓)
Gdi_路径_销毁 (路径)
Gdi_区域_销毁 (区域)

赋值 (旧窗口风格, 取得窗口信息_ (窗口.取窗口句柄 (), -20)) ' 取出窗口风格
设置窗口信息_ (窗口.取窗口句柄 (), -20, 位或 (旧窗口风格, 524288)) ' 设置新窗口风格
赋值 (左上角坐标.横向位置, 窗口.左边)
赋值 (左上角坐标.纵向位置, 窗口.顶边)
赋值 (窗口尺寸.宽度, 参窗口宽度)
赋值 (窗口尺寸.高度, 相加 (参字体大小, 15))
赋值 (缓存左上角坐标.横向位置, 0)
赋值 (缓存左上角坐标.纵向位置, 0)
赋值 (混合函数.透明格式, 1) ' 设置窗口透明绘制方式
赋值 (混合函数.混合标志, 0)
赋值 (混合函数.混合操作, 0)
赋值 (混合函数.透明常量, 255)
更新窗口层 (窗口.取窗口句柄 (), DC, 左上角坐标, 窗口尺寸, 内存场景, 缓存左上角坐标, 0, 混合函数, 2) ' 处理透明窗口
Gdi_图形_销毁 (画板)
选入设备场景_ (内存场景, 旧位图)
删除对象_ (内存位图)
GdipDeleteFontFamily (nativeFamily)
删除设备场景_ (内存场景)



.子程序 _窗口2_将被销毁, 空白型, , 
ReleaseDC (窗口2.取窗口句柄 (), DC)
关闭GDI绘图 (g_Token)


.类模块 MCI多媒体播放类, , , 使用MCI指令来播放多媒体文件。不支持RM/RMVB格式。本类中大部分方法若返回非零整数，可用取错误信息文本得到错误描述。

.子程序 打开媒体, 整数型, , 初始化媒体设备。进行其他多媒体操作之前必须使用的方法。成功返回0，失败返回非0
.参数 参_媒体文件名, 文本型, , 要打开的多媒体文件的完整路径
.参数 参_视频窗口句柄, 整数型, 可空, 若打开的是视频文件，则在此窗口显示画面。若不提供此参数，则不使用视频窗口。注意:最好提供窗口句柄而非组件句柄，因为组件可能会有画面刷新问题。



.子程序 播放媒体, 整数型, , 播放多媒体文件。成功返回0，失败返回非零整数


.子程序 关闭媒体, 整数型, , 关闭已经打开的多媒体文件,正在播放的媒体会被立即停止，重新打开前后续操作将无效。成功返回0，失败返回非零整数


.子程序 取媒体状态, 整数型, , 返回常量中以“状态_”开头的整数。返回大于0的整数则表示命令失败，可用“MCI_取错误信息文本（）”取回错误信息。


.子程序 停止媒体, 整数型, , 停止媒体的播放，将媒体的当前播放进度调整为0。命令成功返回0，失败返回非零整数


.子程序 系统静音, 整数型, , 关闭当前系统的声音输出。成功返回0，失败返回非零整数
.参数 参_是否静音, 逻辑型, 可空, 



.子程序 继续媒体, 整数型, , 继续播被暂停的多媒体文件。成功返回0，失败返回非零整数。


.子程序 暂停媒体, 整数型, , 暂停媒体播放，成功返回0。该媒体必须已经被打开或者播放，否则返回非零整数（失败）


.子程序 置视频区域, 整数型, , 设置视频显示的区域。本方法只应用于非系统自动创建的视频窗口。返回0表示成功，返回非零表示失败
.参数 参_视频画面位置, 窗口矩形区域, 可空, 设置视频画面的位置。留空则默认充满整个视频窗口的客户区(视频窗口必须未被最小化)。



.子程序 置视频窗口, 整数型, , 返回0表示成功，返回非零表示失败
.参数 参_窗口句柄, 整数型, , 强烈建议提供一个“窗口”的句柄，而非组件的句柄



.子程序 取视频窗口句柄, 整数型, , 取得当前媒体文件播放时视频画面的窗口句柄。没有视频或者获取失败则返回0


.子程序 取媒体长度, 整数型, , 取得媒体文件的长度，失败返回0。单位:毫秒


.子程序 取媒体帧数, 整数型, , 取得媒体文件的总帧数。失败返回0


.子程序 跳到指定帧, 整数型, , 成功返回0，失败返回非零。
.参数 参_帧位置, 整数型, , 播放位置必须小于总帧数，否则可能会造成命令失败。
.参数 参_是否立即播放, 逻辑型, 可空, 调整媒体当前位置后是否立即继续播放。为假或者省略本参数将跳到指定位置后暂停播放



.子程序 置媒体位置, 整数型, , 设置媒体当前播放的位置。成功返回0，失败返回非零整数。单位:毫秒
.参数 参_播放位置, 整数型, , 播放位置必须小于媒体长度，否则可能会造成命令失败。单位：毫秒
.参数 参_是否立即播放, 逻辑型, 可空, 调整媒体当前位置后是否立即继续播放。为假或者省略本参数将跳到指定位置后暂停播放



.子程序 置播放速度, 整数型, , 设置当前媒体的播放速度。成功返回0，失败返回非零整数。注意：并非所有媒体都支持速度调整
.参数 参_播放速度, 整数型, , 1到2000之间的整数。原始速度为1000。2000为原始速度的2倍，500为原始速度的一半。警告:过慢的速度将导致媒体看起来已经停止了



.子程序 取播放速度, 整数型, , 返回与正常播放速度的比例。1000表示与正常速度相同，2000表示为正常速度的两倍


.子程序 取媒体位置, 整数型, , 返回媒体文件播放的位置，已停止播放返回0，失败返回-1


.子程序 取视频区域, 窗口矩形区域, , 取得视频画面的位置。注意：全屏播放时不能通过此命令得到位置信息


.子程序 取媒体音量, 整数型, , 返回系统当前的音量值。命令失败返回-1。媒体音量范围：0-1000，正整数


.子程序 置媒体音量, 整数型, , 执行成功返回0，否则返回非零的整数。说明：执行后的实际音量可能最多±2的误差，这里设置的是系统的音量值
.参数 参_媒体音量, 整数型, , 范围0-1000，必须为正整数。不符合此规则将导致命令失败。



.子程序 置声道音量大小, 整数型, , 设置当前打开的媒体的音量值。0-1000之间的整数
.参数 参_声道类型, 整数型, , 1、左声道  2、右声道。不接受其他值
.参数 参_音量大小, 整数型, , 0-1000之间的整数



.子程序 取声道音量大小, 整数型, , 取得当前媒体的声道音量大小。失败返回-1
.参数 参_声道类型, 整数型, , 1、左声道  2、右声道。不接受其他值



.子程序 取媒体声道, 整数型, , 返回常量中以"声道_"开头的常量值。失败返回0


.子程序 置媒体声道, 整数型, , 执行成功返回0，否则返回非零整数。
.参数 参_声道类型, 整数型, , 提供常量中以“声道_”开头的整型数值



.子程序 是否已就绪, 逻辑型, , 调用 打开媒体 方法后，可使用此方法获取设备的状态


.子程序 取视频字节流速率, 整数型, , 单位Byte/s


.子程序 全屏模式, 整数型, , 如果有视频画面，此方法方有效。备注:目前此方法尚不完美。要响应视频窗口消息，用本类方法取出视频窗口句柄并自行操作。待解决
.参数 参_是否全屏, 逻辑型, , 真=全屏；假=还原。默认为假



.子程序 是否为视频, 逻辑型, , 如果打开的媒体包含视频信息则返回真，否则返回假。


.子程序 取视频源, 整数型, , 


.程序集 __HIDDEN_TEMP_MOD__, , , 

.子程序 模块_关闭所有媒体, 整数型, , 关闭所有已经打开的媒体。注意:该操作对所有使用MCI进行播放的媒体都有效！返回0表示命令成功完成，返回非零表示命令失败。


.子程序 模块_取错误信息文本, 文本型, , 根据各种命令执行后返回的数值查询相应的文本说明。
.参数 参_错误代码, 整数型, , 支持类中对多媒体操作的各种方法的整型返回值



.子程序 模块_毫秒到时间, 文本型, , 将毫秒值转换为诸如:"3:03:12"之类的文本格式
.参数 参_毫秒值, 整数型, , 



.程序集 __HIDDEN_TEMP_MOD__, , , 

.子程序 加载皮肤, 逻辑型, , 加载皮肤风格
.参数 皮肤, 整数型, 可空, 0=MSN,1=Vista,2黑色Vista,3=Office2007,4=QQ2008,5=QQ2009,6=QQ2009Ⅱ,7=QQ游戏2009,8=QQ影音,9=暗黄Vista
.参数 特效, 逻辑型, 可空, 是否启用Vista阴影特效,默认为假



.子程序 卸载皮肤, 逻辑型, , 卸载当前皮肤


.子程序 调整颜色, 逻辑型, , 调整当前皮肤色调
.参数 色调, 整数型, , 取值范围-180-180,默认值0
.参数 饱和度, 整数型, 可空, 取值范围-100-100,默认值0
.参数 亮度, 整数型, 可空, 取值范围-100-100,默认值0



.子程序 置标题栏菜单, 空白型, , 将菜单移置标题栏,启用Vista阴影特效后无效
.参数 窗口, 窗口, , 菜单所在窗口
.参数 菜单高度, 整数型, 可空, 0为默认；一般设置为22或10；根据需要设置
.参数 顶部偏移, 整数型, 可空, 顶部偏移
.参数 右部偏移, 整数型, 可空, 右部偏移



.子程序 取消标题栏菜单, 空白型, , 还原菜单
.参数 窗口, 窗口, , 菜单所在窗口



.子程序 置菜单透明度, 空白型, , 设置菜单透明度
.参数 透明度, 整数型, , 取值范围 0-255



.子程序 置皮肤透明度, 空白型, , 设置皮肤透明度
.参数 句柄, 整数型, , 指定窗体句柄
.参数 透明度, 整数型, , 取值范围 0-255



.子程序 加载外部皮肤, 空白型, , 加载指定皮肤文件
.参数 皮肤路径, 文本型, , 皮肤文件路径
.参数 色调, 整数型, 可空, 取值范围 -180 - 180
.参数 饱和度, 整数型, 可空, 取值范围 -100 - 100
.参数 亮度, 整数型, 可空, 取值范围 -100 - 100



.子程序 加载资源皮肤, 空白型, , 加载资源皮肤
.参数 资源皮肤, 字节集, , 皮肤数据
.参数 色调, 整数型, 可空, 取值范围 -180 - 180
.参数 饱和度, 整数型, 可空, 取值范围 -100 - 100
.参数 亮度, 整数型, 可空, 取值范围 -100 - 100



.子程序 加载特效, 空白型, , 设置Vista特效的阴影大小
.参数 阴影大小, 整数型, , 2－19 默认值0
.参数 透明度, 整数型, 可空, 1－255 默认值0
.参数 亮度, 整数型, 可空, 1－255 默认值0
.参数 锐度, 整数型, 可空, 1－255 默认值0
.参数 水平偏移, 整数型, 可空, 默认值0
.参数 垂直偏移, 整数型, 可空, 默认值0
.参数 红色分量, 整数型, 可空, 0－255 默认值 -1
.参数 绿色分量, 整数型, 可空, 0－255 默认值 -1
.参数 蓝色分量, 整数型, 可空, 0－255 默认值 -1



.子程序 卸载特效, 空白型, , 卸载置Vista特效


.窗口程序集 窗口程序集3, , , 

.子程序 _超级按钮1_被单击, 空白型, , 
.局部变量 表项数, 整数型, , , 
.局部变量 i, 整数型, , , 
.局部变量 临时, 文本型, , , 

赋值 (表项数, 窗口1.取项目数 (.))
.如果 (不等于 (.内容, “”))
    .计次循环首 (表项数, i)
        赋值 (临时, 窗口1.取项目文本 (., 相减 (i, 1)))
        .如果真 (不等于 (寻找文本 (临时, .内容, , 假), -1))
            窗口1.置焦点项目 (., 相减 (i, 1))
            销毁 ()
        .如果真结束
        
    .计次循环尾 ()
.否则
    信息框 (“输入要查找的歌曲，支持模糊查找”, 0, )
.如果结束


.子程序 _编辑框1_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果 (等于 (键代码, #回车键))
    _超级按钮1_被单击 ()
.否则
    
.如果结束



 ' 不属于任何一个程序集、类模块的函数：
