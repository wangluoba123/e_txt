 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 664
    高度 = 581
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 0
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 真
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “”
    帮助文件名 = “”

窗口 字典窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 750
    高度 = 550
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “查找匹配项”
    帮助文件名 = “”



.常量 LB_FINDSTRING, "399", , 
.常量 CB_FINDSTRING, "332", , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 4 系统核心支持库
 ' iext2 AF6AD80AA4244A59AFB3D83ECF5173CC 1 1 扩展界面支持库二
 ' spec A512548E76954B6E92C21055517615B0 2 1 特殊功能支持库



 ' 所需要的模块
 ' 进制转换 F:\易语言\易模块\16进制内转换数值.ec
 ' 进制转换(改) F:\易语言\易模块\二进制到三十六进制.ec


.全局变量 窗口原宽, 整数型, , , 
.全局变量 窗口原高, 整数型, , , 
.全局变量 按下了, 逻辑型, , , 
.全局变量 设置默认字符格式, 未知类型0x20004, , , 

.DLL命令 发送消息1, 整数型, "user32", "SendMessageA", , 
    .参数 hwnd, 整数型, , 
    .参数 wMsg, 整数型, , 
    .参数 wParam, 整数型, , 
    .参数 lParam, 整数型, , 

.DLL命令 发送消息2, 整数型, "user32", "SendMessageA", , 
    .参数 hwnd, 整数型, , 
    .参数 wMsg, 整数型, , 
    .参数 wParam, 整数型, , 
    .参数 lParam, 文本型, , 

.DLL命令 SetWindowLong, 整数型, "", "SetWindowLongA", , 
    .参数 hwnd, 空白型, , 
    .参数 nIndex, 空白型, , 
    .参数 dwNewLong, 子程序指针, , 

.DLL命令 CallWindowProc, 整数型, "", "CallWindowProcA", , 
    .参数 lpPrevWndFunc, 空白型, , 
    .参数 hwnd, 空白型, , 
    .参数 Msg, 空白型, , 
    .参数 wParam, 空白型, , 
    .参数 lParam, 空白型, , 

.DLL命令 发送, 整数型, "user32.dll", "SendMessageA", , 
    .参数 hwand, 整数型, , 
    .参数 wMsg, 整数型, , 
    .参数 wParam, 整数型, , 
    .参数 lParam, 文本型, , 

.窗口程序集 窗口程序集1, , , 

.子程序 _标签2_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果 (等于 (.标题, “1”))
    赋值 (.标题, “0”)
    赋值 (.背景颜色, #灰色)
.否则
    赋值 (.标题, “1”)
    赋值 (.背景颜色, #桃红)
.如果结束
得二进制数 ()
二到十六进制数 ()

.子程序 _标签3_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果 (等于 (.标题, “1”))
    赋值 (.标题, “0”)
    赋值 (.背景颜色, #灰色)
.否则
    赋值 (.标题, “1”)
    赋值 (.背景颜色, #桃红)
.如果结束
得二进制数 ()
二到十六进制数 ()

.子程序 _标签4_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果 (等于 (.标题, “1”))
    赋值 (.标题, “0”)
    赋值 (.背景颜色, #灰色)
.否则
    赋值 (.标题, “1”)
    赋值 (.背景颜色, #桃红)
.如果结束
得二进制数 ()
二到十六进制数 ()

.子程序 _标签5_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果 (等于 (.标题, “1”))
    赋值 (.标题, “0”)
    赋值 (.背景颜色, #灰色)
.否则
    赋值 (.标题, “1”)
    赋值 (.背景颜色, #桃红)
.如果结束
得二进制数 ()
二到十六进制数 ()

.子程序 _标签6_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果 (等于 (.标题, “1”))
    赋值 (.标题, “0”)
    赋值 (.背景颜色, #灰色)
.否则
    赋值 (.标题, “1”)
    赋值 (.背景颜色, #桃红)
.如果结束
得二进制数 ()
二到十六进制数 ()

.子程序 _标签7_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果 (等于 (.标题, “1”))
    赋值 (.标题, “0”)
    赋值 (.背景颜色, #灰色)
.否则
    赋值 (.标题, “1”)
    赋值 (.背景颜色, #桃红)
.如果结束
得二进制数 ()
二到十六进制数 ()

.子程序 _标签8_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果 (等于 (.标题, “1”))
    赋值 (.标题, “0”)
    赋值 (.背景颜色, #灰色)
.否则
    赋值 (.标题, “1”)
    赋值 (.背景颜色, #桃红)
.如果结束
得二进制数 ()
二到十六进制数 ()

.子程序 _标签9_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果 (等于 (.标题, “1”))
    赋值 (.标题, “0”)
    赋值 (.背景颜色, #灰色)
.否则
    赋值 (.标题, “1”)
    赋值 (.背景颜色, #桃红)
.如果结束
得二进制数 ()
二到十六进制数 ()

.子程序 _标签18_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

得二进制数 ()
二到十六进制数 ()

.子程序 得二进制数, 空白型, , 
赋值 (.标题, 相加 (.标题, .标题, .标题, .标题, .标题, .标题, .标题, .标题))


.子程序 二到十六进制数, 空白型, , 
.局部变量 转换后文本, 文本型, , , 

赋值 (转换后文本, 进制转换 (.标题, 2, 16))
.如果 (等于 (取文本长度 (转换后文本), 1))
    赋值 (.标题, 相加 (“MOV  ”, “TMOD,  ”, “#0”, 进制转换 (.标题, 2, 16), “H”))
    
.否则
    赋值 (.标题, 相加 (“MOV  ”, “TMOD,  ”, “#”, 进制转换 (.标题, 2, 16), “H”))
.如果结束

.判断开始 (并且 (等于 (.标题, “0”), 等于 (.标题, “0”)))
    赋值 (.标题, 相加 (“T1;”, “模式0, 13位计数器”))
.判断 (并且 (等于 (.标题, “0”), 等于 (.标题, “1”)))
    赋值 (.标题, 相加 (“T1;”, “模式1, 16位计数器”))
.判断 (并且 (等于 (.标题, “1”), 等于 (.标题, “0”)))
    赋值 (.标题, 相加 (“T1;”, “模式2, 自动重装 8位计数器”))
.判断 (并且 (等于 (.标题, “1”), 等于 (.标题, “1”)))
    赋值 (.标题, 相加 (“T1;”, “模式3, 定时器 0：分成两个 8位计数器”))
.默认
    
.判断结束


.判断开始 (并且 (等于 (.标题, “0”), 等于 (.标题, “0”)))
    赋值 (.标题, 相加 (“T0;”, “模式0, 13位计数器”))
.判断 (并且 (等于 (.标题, “0”), 等于 (.标题, “1”)))
    赋值 (.标题, 相加 (“T0;”, “模式1, 16位计数器”))
.判断 (并且 (等于 (.标题, “1”), 等于 (.标题, “0”)))
    赋值 (.标题, 相加 (“T0;”, “模式2, 自动重装 8位计数器”))
.判断 (并且 (等于 (.标题, “1”), 等于 (.标题, “1”)))
    赋值 (.标题, 相加 (“T0;”, “模式3, 定时器 0：分成两个 8位计数器”))
.默认
    
.判断结束


.子程序 _标签10_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果 (等于 (.标题, “1”))
    赋值 (.标题, “0”)
    赋值 (.背景颜色, #灰色)
.否则
    赋值 (.标题, “1”)
    赋值 (.背景颜色, #桃红)
.如果结束
得二进制数 ()
二到十六进制数 ()

.子程序 _标签11_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果 (等于 (.标题, “1”))
    赋值 (.标题, “0”)
    赋值 (.背景颜色, #灰色)
.否则
    赋值 (.标题, “1”)
    赋值 (.背景颜色, #桃红)
.如果结束
得二进制数 ()
二到十六进制数 ()

.子程序 _标签12_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果 (等于 (.标题, “1”))
    赋值 (.标题, “0”)
    赋值 (.背景颜色, #灰色)
.否则
    赋值 (.标题, “1”)
    赋值 (.背景颜色, #桃红)
.如果结束
得二进制数 ()
二到十六进制数 ()

.子程序 _标签13_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果 (等于 (.标题, “1”))
    赋值 (.标题, “0”)
    赋值 (.背景颜色, #灰色)
.否则
    赋值 (.标题, “1”)
    赋值 (.背景颜色, #桃红)
.如果结束
得二进制数 ()
二到十六进制数 ()

.子程序 _标签14_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果 (等于 (.标题, “1”))
    赋值 (.标题, “0”)
    赋值 (.背景颜色, #灰色)
.否则
    赋值 (.标题, “1”)
    赋值 (.背景颜色, #桃红)
.如果结束
得二进制数 ()
二到十六进制数 ()

.子程序 _标签15_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果 (等于 (.标题, “1”))
    赋值 (.标题, “0”)
    赋值 (.背景颜色, #灰色)
.否则
    赋值 (.标题, “1”)
    赋值 (.背景颜色, #桃红)
.如果结束
得二进制数 ()
二到十六进制数 ()

.子程序 _标签16_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果 (等于 (.标题, “1”))
    赋值 (.标题, “0”)
    赋值 (.背景颜色, #灰色)
.否则
    赋值 (.标题, “1”)
    赋值 (.背景颜色, #桃红)
.如果结束
得二进制数 ()
二到十六进制数 ()

.子程序 _标签17_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果 (等于 (.标题, “1”))
    赋值 (.标题, “0”)
    赋值 (.背景颜色, #灰色)
.否则
    赋值 (.标题, “1”)
    赋值 (.背景颜色, #桃红)
.如果结束
得二进制数 ()
二到十六进制数 ()

.子程序 __启动窗口_创建完毕, 空白型, , 
赋值 (_启动窗口., 真)
赋值 (_启动窗口., 0)
赋值 (_启动窗口., 0)
赋值 (窗口原宽, _启动窗口.)
得二进制数 ()
二到十六进制数 ()


.子程序 __启动窗口_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果 (或者 (大于 (横向位置, 相减 (_启动窗口., 6)), 大于 (纵向位置, 相减 (_启动窗口., 6))))
    赋值 (_启动窗口., 3)
.否则
    
.如果结束

.如果 (小于或等于 (横向位置, 3))
    赋值 (_启动窗口., 窗口原宽)
.否则
    
.如果结束


.子程序 __启动窗口_被取消激活, 空白型, , 
赋值 (_启动窗口., 3)


.子程序 _按钮1_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

销毁 ()

.子程序 _外形框1_被双击, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (_启动窗口., 0)
赋值 (_启动窗口., 0)


.子程序 _标签30_反馈事件, 整数型, , 
.参数 参数一, 整数型, , 
.参数 参数二, 整数型, , 



.子程序 _编辑框12_内容被改变, 空白型, , 
赋值 (.内容, 到文本 (相除 (12, 到数值 (.内容))))
赋值 (.内容, .内容)


.子程序 _编辑框13_内容被改变, 空白型, , 
 ' .如果 (或者 (等于 (.内容, “13”), 等于 (.内容, “16”), 等于 (.内容, “8”)))
    赋值 (.内容, 到文本 (相减 (求次方 (2, 到数值 (.内容)), 相除 (到数值 (.内容), 到数值 (.内容)))))
.否则
    
.如果结束


.子程序 _编辑框14_内容被改变, 空白型, , 
.判断开始 (并且 (等于 (到数值 (.内容), 13), 大于或等于 (到数值 (.内容), 8192)))
    赋值 (.标题, “在模式 0 ,最大值不能超过 8192”)
    信息框 (“在模式 0 ,最大值不能超过 8192”, 0, )
    赋值 (_启动窗口., 窗口原宽)
    赋值 (.内容, “”)
.默认
    
.判断结束

.判断开始 (并且 (等于 (到数值 (.内容), 16), 大于或等于 (到数值 (.内容), 65535)))
    赋值 (.标题, “在模式 1 ,最大值不能超过 65536”)
    信息框 (“在模式 1 ,最大值不能超过 65536”, 0, )
    赋值 (_启动窗口., 窗口原宽)
    赋值 (.内容, “”)
.默认
    
.判断结束

.判断开始 (并且 (等于 (到数值 (.内容), 8), 大于或等于 (到数值 (.内容), 256)))
    赋值 (.标题, “在模式 2 ,最大值不能超过 256”)
    信息框 (“在模式 2 ,最大值不能超过 256”, 0, )
    赋值 (_启动窗口., 窗口原宽)
    赋值 (.内容, “”)
.默认
    
.判断结束

_编辑框13_内容被改变 ()

.子程序 _编辑框16_内容被改变, 空白型, , 
.局部变量 底四位, 文本型, , , 
.局部变量 高四位, 文本型, , , 

赋值 (.内容, 到文本 (转任意 (到文本 (取整 (到数值 (.内容))), 16)))
赋值 (.内容, “”)
.判断开始 (等于 (取文本长度 (.内容), 1))
    赋值 (.内容, 相加 (“;晶振 ”, .内容, “ MHz”, #换行符, “;周期 ”, .内容, “ Us”, #换行符, “;定时 ”, .内容, “ Us”, #换行符, “; ”, .标题, #换行符, “; ”, .标题, #换行符, .标题, #换行符, “MOV  TH0, #00H”, “     ;计数初值”, #换行符, “MOV  TL0, #0”, .内容, “H”))
.默认
    
.判断结束

.判断开始 (等于 (取文本长度 (.内容), 2))
    赋值 (.内容, 相加 (“;晶振 ”, .内容, “MHz”, #换行符, “;周期 ”, .内容, “ Us”, #换行符, “;定时 ”, .内容, “ Us”, #换行符, “; ”, .标题, #换行符, “; ”, .标题, #换行符, .标题, #换行符, “MOV  TH0, #00H”, “     ;计数初值”, #换行符, “MOV  TL0, #”, .内容, “H”))
    
.默认
    
.判断结束

.判断开始 (等于 (取文本长度 (.内容), 3))
    赋值 (高四位, 取文本左边 (.内容, 1))
    赋值 (底四位, 取文本右边 (.内容, 2))
    赋值 (.内容, 相加 (“;晶振 ”, .内容, “ MHz”, #换行符, “;周期 ”, .内容, “ Us”, #换行符, “;定时 ”, .内容, “ Us”, #换行符, “;”, .标题, #换行符, “;”, .标题, #换行符, .标题, #换行符, “MOV  TH0, #0”, 高四位, “H”, “     ;计数初值”, #换行符, “MOV  TL0, #”, 底四位, “H”))
.默认
    
.判断结束

.判断开始 (等于 (取文本长度 (.内容), 4))
    赋值 (高四位, 取文本左边 (.内容, 2))
    赋值 (底四位, 取文本右边 (.内容, 2))
    赋值 (.内容, 相加 (“;晶振 ”, .内容, “ MHz”, #换行符, “;周期 ”, .内容, “ Us”, #换行符, “;定时 ”, .内容, “ Us”, #换行符, “;”, .标题, #换行符, “;”, .标题, #换行符, .标题, #换行符, “MOV  TH0, #”, 高四位, “H”, “     ;计数初值”, #换行符, “MOV  TL0, #”, 底四位, “H”))
    
.默认
    
.判断结束


.子程序 _编辑框12_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果 (等于 (键代码, #回车键))
    获取焦点 ()
.否则
    
.如果结束


.子程序 _编辑框13_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果 (等于 (键代码, #回车键))
    赋值 (.内容, “”)
    获取焦点 ()
.否则
    
.如果结束


.子程序 _编辑框14_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果 (等于 (键代码, #回车键))
    赋值 (.被选择字符数, -1)
.否则
    
.如果结束



.子程序 _编辑框12_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.被选择字符数, -1)


.子程序 _编辑框13_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.被选择字符数, -1)


.子程序 _编辑框14_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.被选择字符数, -1)


.子程序 _选择夹1_被单击, 空白型, , 
获取焦点 ()

.子程序 _拷贝_被单击, 空白型, , 
赋值 (.被选择字符数, -1)
置剪辑板文本 (.内容)

.子程序 _按钮2_被单击, 空白型, , 
 ' 载入 (字典窗口, , 假)


.程序集 __HIDDEN_TEMP_MOD__, , , 

.子程序 转十, 文本型, , 可以转换16进制以内的任意进制数为10进制数，成功返回相应的十进制文本，失败返回“-1”。
.参数 目标数, 文本型, , 目标数（文本型）
.参数 进制, 整数型, , 目标数的进制数（整数型）



.子程序 转任意, 文本型, , 将10进制数转换成16进制内的任意进制数，成功返回相应文本，失败返回”-1“
.参数 目标数, 文本型, , 十进制整数文本（整数型）
.参数 欲转进制, 整数型, , 欲转换到的进制，注意取值范围（2≤欲转进制≤16）



.程序集 __HIDDEN_TEMP_MOD__, , , 

.子程序 进制转换, 文本型, , 梁辉进制转换 1.5
.参数 被转换文本, 文本型, , 
.参数 被转换进制, 整数型, , 
.参数 转换的进制, 整数型, , 



.窗口程序集 字典窗口程序集, , , 

.子程序 _字典窗口_创建完毕, 空白型, , 
.局部变量 文件号, 整数型, , , 
.局部变量 内容, 文本型, , , 
.局部变量 数组, 文本型, , "0", 
.局部变量 变量, 整数型, , , 

赋值 (文件号, 打开文件 (相加 (取运行目录 (), “\字典文件.txt”), #读入, ))
.如果真 (等于 (文件号, 0))
    信息框 (“没有字典文件  字典文件.txt”, #警告图标, “错误”)
.如果真结束
移到文件首 (文件号)
赋值 (内容, 读入文本 (文件号, ))
赋值 (数组, 分割文本 (内容, #换行符, ))
关闭文件 (文件号)
赋值 (文件号, 取数组成员数 (数组))
.计次循环首 (文件号, 变量)
    数组.加入项目 ( [变量], )
.计次循环尾 ()
赋值 (., .内容)



赋值 (设置默认字符格式., “Fixedsys”)
赋值 (设置默认字符格式., 12)
设置默认字符格式.未知支持库函数_8 ()

.子程序 _字典超级编辑框1_选择区被改变, 空白型, , 
赋值 (.内容, .)
赋值 (.内容, 删首尾空 (.内容))
调试输出 (.内容)


.子程序 _字典编辑框1_内容被改变, 空白型, , 
赋值 (.现行选中项, 发送 (取窗口句柄 (), #LB_FINDSTRING, -1, .内容))
.置顶端可见项目 (.现行选中项)


.子程序 _字典按钮1_被单击, 空白型, , 
赋值 (., “”)

.子程序 _字典按钮2_被单击, 空白型, , 
.如果真 (剪辑板中可有文本 ())
    赋值 (., 取剪辑板文本 ())
.如果真结束



 ' 不属于任何一个程序集、类模块的函数：
