 ' 文件类型：Windows动态链接库

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0



.常量 分析周期_分时走势, "1", 隐藏, 以下常量用于 CALCINFO.取分析周期() 的返回值
.常量 分析周期_分笔成交, "2", 隐藏, 
.常量 分析周期_1分钟线, "3", 隐藏, 
.常量 分析周期_5分钟线, "4", 隐藏, 
.常量 分析周期_15分钟线, "5", 隐藏, 
.常量 分析周期_30分钟线, "6", 隐藏, 
.常量 分析周期_60分钟线, "7", 隐藏, 
.常量 分析周期_日线, "8", 隐藏, 
.常量 分析周期_周线, "9", 隐藏, 
.常量 分析周期_月线, "10", 隐藏, 
.常量 分析周期_年线, "11", 隐藏, 
.常量 分析周期_多日线, "12", 隐藏, 
.常量 分析周期_多分钟线, "13", 隐藏, 
.常量 分析周期_多秒线, "14", 隐藏, 
.常量 财务项索引_总股本, "0", 隐藏, 万股。以下常量用于 CALCINFO.取财务数据() 的参数
.常量 财务项索引_国家股, "1", 隐藏, 
.常量 财务项索引_发起人法人股, "2", 隐藏, 
.常量 财务项索引_法人股, "3", 隐藏, 
.常量 财务项索引_B股, "4", 隐藏, 
.常量 财务项索引_H股, "5", 隐藏, 
.常量 财务项索引_流通A股, "6", 隐藏, 
.常量 财务项索引_职工股, "7", 隐藏, 
.常量 财务项索引_A2转配股, "8", 隐藏, 
.常量 财务项索引_总资产, "9", 隐藏, 千元
.常量 财务项索引_流动资产, "10", 隐藏, 
.常量 财务项索引_固定资产, "11", 隐藏, 
.常量 财务项索引_无形资产, "12", 隐藏, 
.常量 财务项索引_长期投资, "13", 隐藏, 
.常量 财务项索引_流动负债, "14", 隐藏, 
.常量 财务项索引_长期负债, "15", 隐藏, 
.常量 财务项索引_资本公积金, "16", 隐藏, 
.常量 财务项索引_每股公积金, "17", 隐藏, 
.常量 财务项索引_股东权益, "18", 隐藏, 
.常量 财务项索引_主营收入, "19", 隐藏, 
.常量 财务项索引_主营利润, "20", 隐藏, 
.常量 财务项索引_其他利润, "21", 隐藏, 
.常量 财务项索引_营业利润, "22", 隐藏, 
.常量 财务项索引_投资收益, "23", 隐藏, 
.常量 财务项索引_补贴收入, "24", 隐藏, 
.常量 财务项索引_营业外收支, "25", 隐藏, 
.常量 财务项索引_上年损益调整, "26", 隐藏, 
.常量 财务项索引_利润总额, "27", 隐藏, 
.常量 财务项索引_税后利润, "28", 隐藏, 
.常量 财务项索引_净利润, "29", 隐藏, 
.常量 财务项索引_未分配利润, "30", 隐藏, 
.常量 财务项索引_每股未分配, "31", 隐藏, 
.常量 财务项索引_每股收益, "32", 隐藏, 
.常量 财务项索引_每股净资产, "33", 隐藏, 
.常量 财务项索引_调整每股净资, "34", 隐藏, 
.常量 财务项索引_股东权益比, "35", 隐藏, 
.常量 财务项索引_净资收益率, "36", 隐藏, 此处及以上被分析家、大智慧新一代支持（0-36）
.常量 财务项索引_经营现金流入, "37", 隐藏, 此处及以下仅被飞狐交易师扩展支持（37-55）
.常量 财务项索引_经营现金流出, "38", 隐藏, 
.常量 财务项索引_经营现金流量, "39", 隐藏, 
.常量 财务项索引_投资现金流入, "40", 隐藏, 
.常量 财务项索引_投资现金流出, "41", 隐藏, 
.常量 财务项索引_投资现金流量, "42", 隐藏, 
.常量 财务项索引_筹资现金流入, "43", 隐藏, 
.常量 财务项索引_筹资现金流出, "44", 隐藏, 
.常量 财务项索引_筹资现金流量, "45", 隐藏, 
.常量 财务项索引_现金及等价物, "46", 隐藏, 
.常量 财务项索引_应收帐款周转率, "47", 隐藏, 
.常量 财务项索引_存货周转率, "48", 隐藏, 
.常量 财务项索引_股东总数, "49", 隐藏, 
.常量 财务项索引_发行价, "50", 隐藏, 
.常量 财务项索引_速动比率, "51", 隐藏, 
.常量 财务项索引_主营业务增长率, "52", 隐藏, 
.常量 财务项索引_税后利润增长率, "53", 隐藏, 
.常量 财务项索引_净资产增长率, "54", 隐藏, 
.常量 财务项索引_总资产增长率, "55", 隐藏, 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 5 0 系统核心支持库
 ' spec A512548E76954B6E92C21055517615B0 3 0 特殊功能支持库



 ' 所需要的模块
 ' liigo_股票函数插件(CALCINFO) E:\_MyWork\e\股票函数插件\liigo_股票函数插件(CALCINFO).ec


数据类型 基本行情数据, 公开, STKDATA
    .成员 时间, 整数型, , , UTC时间。使用“增减时间([1970年1月1日],#秒,时间)”命令可转换到易语言日期时间。
    .成员 开盘价, 小数型, , , 
    .成员 最高价, 小数型, , , 
    .成员 最低价, 小数型, , , 
    .成员 收盘价, 小数型, , , 
    .成员 成交量, 小数型, , , 成交量(手)
    .成员 成交额, 小数型, , , 成交额(元)/持仓(未平仓合约，仅期货有效)
    .成员 上涨家数, 短整数型, , , 仅大盘有效
    .成员 下跌家数, 短整数型, , , 仅大盘有效

数据类型 扩展行情数据, 公开, STKDATAEx
    .成员 买1价, 小数型, , , 买1--买3价
    .成员 买2价, 小数型, , , 
    .成员 买3价, 小数型, , , 
    .成员 买1量, 小数型, , , 买1--买3量
    .成员 买2量, 小数型, , , 
    .成员 买3量, 小数型, , , 
    .成员 卖1价, 小数型, , , 卖1--卖3价
    .成员 卖2价, 小数型, , , 
    .成员 卖3价, 小数型, , , 
    .成员 卖1量, 小数型, , , 卖1--卖3量
    .成员 卖2量, 小数型, , , 
    .成员 卖3量, 小数型, , , 
    .成员 成交方向, 整数型, , , token

数据类型 除权数据, 公开, SPLITDATA，飞狐交易师专用
    .成员 时间, 整数型, , , UTC时间。使用“增减时间([1970年1月1日],#秒,时间)”命令可转换到易语言日期时间。
    .成员 红股, 小数型, , , 
    .成员 配股, 小数型, , , 
    .成员 配股价, 小数型, , , 
    .成员 红利, 小数型, , , 


.DLL命令 GetKeyState, 短整数型, "", "", , 
    .参数 vkey, 整数型, , 

.程序集 程序集1, , , 

.程序集变量 hLogFile, 整数型, , , 日志文件的文件句柄
.子程序 _启动子程序, 整数型, , 请在本子程序中放置动态链接库初始化代码
赋值 (hLogFile, 打开文件 (“d:\liigolog.txt”, #重写, )) ' 仅用于调试，参见 log() 函数定义
log (“DLL被加载”)

_临时子程序 () ' 在初始化代码执行完毕后调用测试代码
返回 (0) ' 返回值被忽略。

.子程序 _临时子程序, 空白型, , 
 ' 本名称子程序用作测试程序用，仅在开发及调试环境中有效，编译发布程序前将被系统自动清空，请将所有用作测试的临时代码放在本子程序中。 ***注意不要修改本子程序的名称、参数及返回值类型。


 ' --------------------------------------------------------------------------------------------------------------------------------
 ' 扩展函数的定义有以下规定：
 ' 1. 函数名称须符合C语言的规定(C++中extern "C")，并需“全部大写字母”
 ' 2. 函数必须以下述A,B两种形式之一声明(请用实际函数名称替代xxx)
 ' 　　 int __stdcall xxx (CALCINFO* pCalcInfo)     //---------- A
 ' 　　 int __stdcall xxxVAR (CALCINDO* pCalcInfo)  //---------- B
 ' 3. 上述形式A用于声明不带参数或全部参数为常数的函数，形式B用于声明参数1为序列数的函数，两种函数的区别在于后者以VAR结尾
 ' 4. 函数名称长度不能超过 15 字节，动态连接库文件名不能超过 9 字节(不包括扩展名)，动态库名称不能叫 SYSTEM,EXPLORER

 ' 对扩展函数返回值的规定：
 ' 函数返回 -1 表示错误或全部数据无效，否则返回第一个有效值位置，即: m_pResultBuf[返回值] - m_pResultBuf[m_nNumData-1] 为有效值。
 ' 就是说返回的数值一定要写入结果缓冲区(m_pResultBuf)的尾部

 ' 扩展函数的调用方法： "动态库名称@函数名称"(参数表)
 ' 这里的动态库名称和函数名称，最好也全用大写字母（至少我(liigo)在大智慧新一代中测试它需要大写，飞狐交易师里可以小写）。
 ' --------------------------------------------------------------------------------------------------------------------------------


.子程序 SUM, 整数型, 公开, 接收两个数值参数，返回参数值之和
.参数 pCalcInfo, 整数型, , 

.局部变量 calcInfo, CALCINFO, , , 
.局部变量 lastIndex, 整数型, , , 
.局部变量 SUM函数被调用次数, 整数型, 静态, , 

calcInfo.初始化CALCINFO (pCalcInfo)
调试输出CALCINFO (calcInfo)

赋值 (SUM函数被调用次数, 相加 (SUM函数被调用次数, 1))
log (相加 (“SUM()被调用，第”, 到文本 (SUM函数被调用次数), “次”))
log (相加 (“  数据个数：”, 到文本 (calcInfo.取数据个数 ())))
赋值 (lastIndex, 相减 (calcInfo.取数据个数 (), 1))
log (相加 (“  lastIndex：”, 到文本 (lastIndex)))
log (相加 (“  参数1：”, 到文本 (calcInfo.取参数值 (1))))
log (相加 (“  参数2：”, 到文本 (calcInfo.取参数值 (2))))
calcInfo.写结果缓冲区 (lastIndex, 相加 (calcInfo.取参数值 (1), calcInfo.取参数值 (2)))
log (“SUM()马上返回”)
返回 (lastIndex)


.子程序 AVGVAR, 整数型, 公开, 接收一个序列数参数，返回其中所有数值的平均值
.参数 pCalcInfo, 整数型, , 

.局部变量 calcInfo, CALCINFO, , , 
.局部变量 sum, 小数型, , , 
.局部变量 lastIndex, 整数型, , , 
.局部变量 i, 整数型, , , 

calcInfo.初始化CALCINFO (pCalcInfo)
log (“AVGVAR()被调用”)
log (相加 (“  参数1序列数个数:”, 到文本 (calcInfo.取参数1序列数成员数 ())))
.计次循环首 (calcInfo.取参数1序列数成员数 (), i)
     ' log (“    参数[” ＋ 到文本 (i) ＋ “]: ” ＋ 到文本 (calcInfo.取参数值 (1, i)))
    赋值 (sum, 相加 (sum, calcInfo.取参数值 (1, i)))
.计次循环尾 ()
赋值 (lastIndex, 相减 (calcInfo.取数据个数 (), 1))
log (相加 (“  lastIndex：”, 到文本 (lastIndex)))
calcInfo.写结果缓冲区 (lastIndex, 相除 (sum, calcInfo.取参数1序列数成员数 ()))
log (“AVGVAR()马上返回”)
返回 (lastIndex)


.子程序 DUMMY, 整数型, 公开, 
.参数 pCalcInfo, 整数型, , 

log (“DUMMY()”)
返回 (-1)


.子程序 MA, 整数型, 公开, N周期（日）均线函数，测试用。感谢清风圆月提供此函数代码。
.参数 pCalcInfo, 整数型, , 

.局部变量 calcInfo, CALCINFO, , , 
.局部变量 i, 整数型, , , 
.局部变量 j, 整数型, , , 
.局部变量 N, 整数型, , , 
.局部变量 sum, 小数型, , , 

calcInfo.初始化CALCINFO (pCalcInfo)
赋值 (N, calcInfo.取参数值 (2, , ))
.如果真 (或者 (等于 (calcInfo.取参数1是否为序列数 (), 假), 小于或等于 (N, 0)))
    返回 (-1)
.如果真结束

log (相加 (“MA”, 到文本 (N), “()”))
检查 (等于 (calcInfo.取参数1序列数成员数 (), calcInfo.取数据个数 ()))
.变量循环首 (N, calcInfo.取参数1序列数成员数 (), 1, i)
    赋值 (sum, 0)
    .计次循环首 ()
        赋值 (sum, 相加 (sum, calcInfo.取参数值 (1, 相加 (相减 (i, j), 1))))
    .计次循环尾 ()
    calcInfo.写结果缓冲区 (相减 (i, 1), 相除 (sum, N))
.变量循环尾 ()
返回 (相减 (N, 1))


.子程序 log, 空白型, , 将指定的文本输出到日志文件，主要用于调试
.参数 txt, 文本型, , 

写文本行 (hLogFile, 相加 (到文本 (取现行时间 ()), “: ”, txt))


.子程序 Control被按下, 逻辑型, , 
返回 (小于 (GetKeyState (17), 0)) ' VK_CONTROL = 17


.子程序 调试输出CALCINFO, 空白型, , 
.参数 calcinfo, CALCINFO, 参考, 

.局部变量 s, 文本型, , , 
.局部变量 x, 小数型, , , 
.局部变量 n, 整数型, , , 
.局部变量 i, 整数型, , , 
.局部变量 a, 文本型, , "0", 
.局部变量 参数有效, 逻辑型, , , 
.局部变量 stk, 基本行情数据, , , 
.局部变量 stkex, 扩展行情数据, , , 


 ' 由于此子程序输出的内容很多，为防止日志文件过大，做出如下处理
.如果真 (大于 (取文件长度 (hLogFile), 2048000)) ' > 2M ?
    .如果真 (等于 (Control被按下 (), 假))
        log (“** 为防止日志文件过大，此后仅当Ctrl键处于按下状态时才输出CALCINFO数据 **”)
        返回 ()
    .如果真结束
    
.如果真结束

log (“”)
log (“// 下面调试输出CALCINFO --------------------- ”)
log (相加 (“结构大小：”, 到文本 (calcinfo.取结构大小 ())))
log (相加 (“调用软件版本：”, 到文本 (calcinfo.取调用软件版本 ())))
log (相加 (“调用软件序列号：”, 到文本 (calcinfo.取调用软件序列号 ())))
log (相加 (“股票代码：”, 到文本 (calcinfo.取股票代码 ())))
log (相加 (“大盘：”, 到文本 (calcinfo.取大盘 ())))
log (相加 (“数据个数：”, 到文本 (calcinfo.取数据个数 ())))
赋值 (a, { “分时走势”, “分笔成交”, “一分钟线”, “五分钟线”, “十五分钟线”, “三十分钟线”, “六十分钟线”, “日线”, “周线”, “月线”, “多日线” })
log (相加 (“分析周期：”, 到文本 (calcinfo.取分析周期 ()), “ - ”, a [calcinfo.取分析周期 ()]))

 ' 下面输出参数1的值，区分常数、序列数，有效还是无效
 ' 实际编写函数时，通常其参数类型是固定的，要么常数要么序列数，因而不需要向下面这样诸多判断
赋值 (x, calcinfo.取参数值 (1, , 参数有效))
.如果 (参数有效)
    赋值 (n, calcinfo.取参数1序列数成员数 ())
    .如果 (大于或等于 (n, 0))
        log (相加 (“参数1序列数个数：”, 到文本 (calcinfo.取参数1序列数成员数 ())))
        .如果真 (大于 (calcinfo.取参数1序列数成员数 (), 0))
            赋值 (s, “参数1序列数：”)
            .计次循环首 (calcinfo.取参数1序列数成员数 (), i)
                赋值 (x, calcinfo.取参数值 (1, i))
                赋值 (s, 相加 (s, 到文本 (x), “, ”))
            .计次循环尾 ()
            赋值 (s, 取文本左边 (s, 相减 (取文本长度 (s), 2))) ' 去除最后的 ", "
            log (s) ' 输出序列数
        .如果真结束
        
        
    .否则
        log (相加 (“参数1：”, 到文本 (x))) ' 输出常数
    .如果结束
    
.否则
    log (“参数1：无”)
.如果结束

 ' 下面输出参数2/参数3/参数4，不会是序列数
赋值 (x, calcinfo.取参数值 (2, , 参数有效))
log (相加 (“参数2：”, 选择 (参数有效, 到文本 (x), “无”)))
赋值 (x, calcinfo.取参数值 (3, , 参数有效))
log (相加 (“参数3：”, 选择 (参数有效, 到文本 (x), “无”)))
赋值 (x, calcinfo.取参数值 (4, , 参数有效))
log (相加 (“参数4：”, 选择 (参数有效, 到文本 (x), “无”)))

 ' 下面输出财务数据
赋值 (s, “财务数据（0-36）：”)
.变量循环首 (0, 36, 1, i)
    赋值 (x, calcinfo.取财务数据 (i))
    赋值 (s, 相加 (s, 到文本 (x), “, ”))
.变量循环尾 ()
赋值 (s, 取文本左边 (s, 相减 (取文本长度 (s), 2))) ' 去除最后的 ", "
log (s)

 ' 下面输出行情数据
log (“以下是基本行情数据：”)
.计次循环首 (calcinfo.取数据个数 (), i)
    calcinfo.取基本行情数据 (i, stk)
    log (相加 (“  基本行情(”, 到文本 (i), “)：”, format_stk (stk)))
.计次循环尾 ()
.如果 (calcinfo.取扩展行情数据 (1, stkex)) ' 用于判断有没有扩展行情数据
    log (“以下是扩展行情数据：”)
    .计次循环首 (calcinfo.取数据个数 (), i)
        calcinfo.取扩展行情数据 (i, stkex)
        log (相加 (“  扩展行情(”, 到文本 (i), “)：”, format_stkex (stkex)))
    .计次循环尾 ()
.否则
    log (“没有扩展行情数据”)
.如果结束

log (相加 (“// 已完成调试输出CALCINFO --------------------- ”, #换行符))


.子程序 format_stk, 文本型, , 
.参数 stk, 基本行情数据, 参考, 

.局部变量 s, 文本型, , , 

赋值 (s, 取文本 (“{ 时间:[%s](%d), 开盘价:%f, 最高价:%f, 最低价:%f, 收盘价:%f, 成交量:%f, 成交额:%f, 上涨家数:%d, 下跌家数:%d }”, 到文本 (UTCTime到日前时间 (stk.时间)), stk.时间, stk.开盘价, stk.最高价, stk.最低价, stk.收盘价, stk.成交量, stk.成交额, stk.上涨家数, stk.下跌家数))
返回 (s)


.子程序 format_stkex, 文本型, , 
.参数 stkex, 扩展行情数据, 参考, 

.局部变量 s, 文本型, , , 

赋值 (s, 取文本 (“{ 买1-买3价): %f,%f,%f; 买1-买3量: %f,%f,%f; 卖1-卖3价: %f,%f,%f; 卖1-卖3量: %f,%f,%f; 成交方向(token): %d }”, stkex.买1价, stkex.买2价, stkex.买3价, stkex.买1量, stkex.买2量, stkex.买3量, stkex.卖1价, stkex.卖2价, stkex.卖3价, stkex.卖1量, stkex.卖2量, stkex.卖3量, stkex.成交方向))
返回 (s)


.子程序 UTCTime到日前时间, 日期时间型, , 
.参数 utc_time, 整数型, , 

返回 ()

.类模块 CALCINFO, , , 用于读写CALCINFO数据的类，使用时请首先调用“初始化CALCINFO()”方法。作者liigo, 2011-4-2

.子程序 初始化CALCINFO, 空白型, , 使用本对象其他方法前必须首先调用此方法初始化CALCINFO
.参数 pCalcInfo, 整数型, , 



.子程序 取结构大小, 整数型, , 


.子程序 取调用软件版本, 整数型, , 例，版本为2.10则返回528（十六进制0x210的十进制值是528）


.子程序 取调用软件序列号, 整数型, , 


.子程序 取股票代码, 文本型, , 


.子程序 取大盘, 逻辑型, , 是大盘返回真，否则返回假


.子程序 取数据个数, 整数型, , 


.子程序 取基本行情数据, 逻辑型, , 
.参数 序号, 整数型, , 取值范围为 1 到 取数据个数()
.参数 基本行情数据, 基本行情数据, 参考, 如果读取成功，股票数据将被写入此变量



.子程序 取扩展行情数据, 逻辑型, , 分笔成交买卖盘。注意如果没有扩展行情数据，返回假。
.参数 序号, 整数型, , 取值范围为 1 到 取数据个数()
.参数 扩展行情数据, 扩展行情数据, 参考, 如果读取成功，股票扩展数据将被写入此变量



.子程序 取参数1标记, 整数型, , 返回值<0表示参数1为常数，>=0表示参数1为序列数


.子程序 取参数1是否为序列数, 逻辑型, , 


.子程序 取参数1序列数成员数, 整数型, , 如果参数1是序列数，返回其中数据成员个数；否则返回-1


.子程序 参数1序列数序号_转_序号, 整数型, , 仅当参数1为序列数时有效，返回值可用于调用“取股票数据()”“取股票扩展数据()”以获取对应序列数数值的股票数据
.参数 参数1序列数序号, 整数型, , >= 1，表示参数1序列数中的第几个成员



.子程序 取参数值, 小数型, , 取 参数1、参数2、参数3、或 参数4 的值；在参数1是序列数时，通过指定参数"序列数序号"(>=1)，可以取到序列数中的某一个值。如果指定的参数值不存在，返回0，并向参数“参数是否有效”写入假。
.参数 参数序号, 整数型, , 可以是 1,2,3,4 之一，分别表示取 参数1、参数2、参数3、参数4 的值
.参数 序列数序号, 整数型, 可空, 取值范围为 1 到 取参数1序列数个数()，仅当参数1为序列数时有效，如果不为序列数则忽略此参数
.参数 参数是否有效, 逻辑型, 参考 可空, 如果没有“参数序号”指定的参数（调用者未提供参数），则向此参数写入假



.子程序 写结果缓冲区, 空白型, , 结果缓冲区是一个小数数组，参数“位置索引”(>=0)用于指定写到数组哪个成员中
.参数 位置索引, 整数型, , 取值范围为 0 到 取数据个数()-1，表示写到结果缓冲区的某个位置
.参数 数值, 小数型, , 欲写入的数值



.子程序 取分析周期, 整数型, , 返回值可能是 #分析周期_*** 之类常量数值之一（1-14），分别表示：分时走势、分笔成交、1分钟线、5分钟线……日线、周线、月线等等


.子程序 取财务数据, 小数型, , 返回由参数“财务项索引”(>=0)指定的一项财务数据，如总股本、国家股、法人股等
.参数 财务项索引, 整数型, , 可取值为 #财务项索引_*** 之类常量数值之一。取值范围为 0 到 36(大智慧/分析师), 或 0 到 55(飞狐交易师)



.子程序 飞狐专用_取参数个数, 整数型, , 


.子程序 飞狐专用_取参数标记, 整数型, , 返回值<0表示该参数是常数，返回值>=0表示该参数是序列数
.参数 参数序号, 整数型, , 取值范围为 1 到 飞狐专用_取参数个数()



.子程序 飞狐专用_取参数是否为序列数, 逻辑型, , 如果该参数我序列数，返回真，否则返回假
.参数 参数序号, 整数型, , 取值范围为 1 到 飞狐专用_取参数个数()



.子程序 飞狐专用_取参数序列数成员数, 整数型, , 如果该参数我序列数，返回其中数据成员个数，否则返回-1
.参数 参数序号, 整数型, , 取值范围为 1 到 飞狐专用_取参数个数()



.子程序 飞狐专用_取参数值, 小数型, , 可用于读取指定参数的常数值，或序列数中的某个成员值。
.参数 参数序号, 整数型, , 取值范围为 1 到 飞狐专用_取参数个数()
.参数 序列数序号, 整数型, 可空, 取值范围为 1 到 飞狐专用_取参数序列数成员数(参数序号)，仅在欲读取的参数为序列数的情况下有效，用于指定读取序列数中的哪个成员。如果欲读取的参数不是序列数，此参数将被忽略。



.子程序 飞狐专用_取股票名称, 文本型, , 


.子程序 飞狐专用_取除权次数, 整数型, , 


.子程序 飞狐专用_取除权数据, 空白型, , 除权数据将被写入第二个参数中
.参数 除权序号, 整数型, , 取值范围为 1 到 飞狐专用_取除权次数()
.参数 除权数据, 除权数据, 参考, 此参数用于接收返回值




 ' 不属于任何一个程序集、类模块的函数：
