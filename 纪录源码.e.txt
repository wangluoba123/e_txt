 ' 文件类型：Windows窗口程序

 ' 程序名称：易键录
 ' 程序描述：
 ' 程序作者：林劲国
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：TLSWR@163.com
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 618
    高度 = 463
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 1
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 真
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “易键录”
    帮助文件名 = “”

窗口 新建窗口
    左边 = 50
    顶边 = 50
    宽度 = 412
    高度 = 292
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “新建”
    帮助文件名 = “”

窗口 录制窗口
    左边 = 50
    顶边 = 50
    宽度 = 300
    高度 = 181
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “录制”
    帮助文件名 = “”

窗口 高级编辑器
    左边 = 50
    顶边 = 50
    宽度 = 587
    高度 = 503
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “高级编辑器”
    帮助文件名 = “”

窗口 映射键表编辑器
    左边 = 50
    顶边 = 50
    宽度 = 465
    高度 = 352
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “映射键表编辑器”
    帮助文件名 = “”

窗口 属性窗口
    左边 = 50
    顶边 = 50
    宽度 = 451
    高度 = 375
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “属性”
    帮助文件名 = “”

窗口 关于窗口
    左边 = 50
    顶边 = 50
    宽度 = 380
    高度 = 131
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = 15532031 '  0xECFFFF
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “关于”
    帮助文件名 = “”



.常量 文件类型, "“Key record file is easy , file form SFQ!”", , 
.图片 键盘, " ' 已保存到：D:\易语言学习\Data\纪录源码.e\键盘", , 
.图片 鼠标, " ' 已保存到：D:\易语言学习\Data\纪录源码.e\鼠标", , 
.图片 游戏杆, " ' 已保存到：D:\易语言学习\Data\纪录源码.e\游戏杆", , 
.图片 图标1, " ' 已保存到：D:\易语言学习\Data\纪录源码.e\图标1", , 
.图片 图标2, " ' 已保存到：D:\易语言学习\Data\纪录源码.e\图标2", , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 4 系统核心支持库
 ' iext 27bb20fdd3e145e4bee3db39ddd6e64c 1 2 扩展界面支持库一
 ' shell 52F260023059454187AF826A3C07AF2A 1 0 操作系统界面功能支持库
 ' iext3 {B6F7542F-B8FE-46a8-9605-98856A687097} 2 0 扩展界面支持库三
 ' eAPI F7FC1AE45C5C4758AF03EF19F18A395D 1 0 应用接口支持库
 ' EThread 5F99C1642A2F4e03850721B4F5D7C3F8 1 1 多线程支持库




数据类型 表项结构信息, , 
    .成员 横向, 整数型, , , 
    .成员 纵向, 整数型, , , 
    .成员 flags, 整数型, , , 
    .成员 行, 整数型, , , 
    .成员 列, 整数型, , , 

数据类型 坐标, , 
    .成员 x, 空白型, , , 
    .成员 y, 空白型, , , 

数据类型 录制信息, , 
    .成员 快捷键, 整数型, , , 
    .成员 类型, 整数型, , , 
    .成员 触发方式, 整数型, , , 
    .成员 触发配置, 整数型, , , 
    .成员 触发延时, 整数型, , , 
    .成员 录制时间, 整数型, , , 
    .成员 说明, 文本型, , , 

数据类型 键盘, , 
    .成员 键状态, 整数型, , "1", 
    .成员 键代码, 整数型, , "1", 
    .成员 延时时间, 整数型, , "1", 
    .成员 次数, 整数型, , "1", 

数据类型 鼠标, , 
    .成员 键状态, 整数型, , "1", 
    .成员 横坐标, 整数型, , "1", 
    .成员 纵坐标, 整数型, , "1", 
    .成员 延时时间, 整数型, , "1", 
    .成员 次数, 整数型, , "1", 

.全局变量 表项信息, 表项结构信息, , , 
.全局变量 操作类型, 文本型, , "0", 
.全局变量 录制记录, 文本型, , "0", 
.全局变量 鼠标记录, 鼠标, , , 
.全局变量 键盘记录, 键盘, , , 
.全局变量 录制信息, 录制信息, , , 
.全局变量 触发方式名, 文本型, , "0", 
.全局变量 文件路径, 文本型, , "0", 
.全局变量 记录文件, 文本型, , "0", 
.全局变量 映射表编辑状态, 逻辑型, , , 
.全局变量 快捷键, 整数型, , "0", 

.DLL命令 取表项坐标信息, 整数型, "user32", "SendMessageA", , 发送消息
    .参数 hwnd, 整数型, , 
    .参数 wMsg, 整数型, , 
    .参数 wParam, 整数型, , 
    .参数 lParam, 坐标, , 

.DLL命令 监视键盘, 空白型, "Nhook.dll", "监视键盘", , 
    .参数 处理子程序, 子程序指针, , 

.DLL命令 监视鼠标, 空白型, "Nhook.dll", "监视鼠标", , 
    .参数 处理子程序, 子程序指针, , 

.DLL命令 取消键盘监视, 空白型, "Nhook.dll", "取消键盘监视", , 

.DLL命令 取消鼠标监视, 空白型, "Nhook.dll", "取消鼠标监视", , 

.DLL命令 模拟键盘操作, 空白型, "Nhook.dll", "模拟键盘操作", , 
    .参数 虚拟键代码, 整数型, , 键盘值
    .参数 扫描码, 整数型, , 未使用
    .参数 设置标识, 整数型, , 256按下、257放开，详细参考Windows消息大全。
    .参数 扩展信息, 整数型, , 未使用
    .参数 延时时间, 整数型, , 时间单位毫秒，1000毫秒=1秒。

.DLL命令 模拟鼠标操作, 空白型, "Nhook.dll", "模拟鼠标操作", , 
    .参数 鼠标事件, 整数型, , 如按下\放开\双击事件
    .参数 水平坐标, 整数型, , 当前屏幕的横向坐标点
    .参数 垂直坐标, 整数型, , 当前屏幕的纵向坐标点
    .参数 数据信息, 整数型, , 滚轮变化大小，未使用
    .参数 扩展信息, 整数型, , 通常未用的一个值。用GetMessageExtraInfo函数可取得这个值。可用的值取决于特定的驱动程序
    .参数 延时时间, 整数型, , 时间单位毫秒，1000毫秒=1秒。

.DLL命令 程序等待, 空白型, "Nhook.dll", "程序等待", , 
    .参数 等待时间, 整数型, , 时间单位为毫秒，1000毫秒=1秒！

.DLL命令 取键名, 文本型, "Nhook.dll", "取键名", , 键盘的键名
    .参数 键代码, 整数型, , 

.DLL命令 取表项结构信息, 整数型, "user32", "SendMessageA", , 发送消息
    .参数 hwnd, 整数型, , 
    .参数 wMsg, 整数型, , 
    .参数 wParam, 整数型, , 
    .参数 lParam, 表项结构信息, , 

.窗口程序集 窗口程序集1, , , 

.程序集变量 文件名, 文本型, , , 
.程序集变量 图标状态, 整数型, , , 
.程序集变量 保存文件路径, 文本型, , , 
.程序集变量 按键, 整数型, , "0", 
.程序集变量 n, 整数型, , , 
.程序集变量 匿名程序集变量_3993, 空白型, , , 
.子程序 __启动窗口_创建完毕, 空白型, , 
初始化 ()
托盘图标 ()

.子程序 托盘图标, 空白型, , 
置托盘图标 (#图标1, “易键录”)

.子程序 __启动窗口_托盘事件, 空白型, , 
.参数 操作类型, 整数型, , 

.判断开始 (等于 (操作类型, #单击左键))
    .如果 (不等于 (., 0))
        赋值 (_启动窗口., 真)
        赋值 (., 0)
    .否则
        赋值 (., 2)
        赋值 (_启动窗口., 假)
    .如果结束
    
.默认
    
.判断结束


.子程序 初始化, 空白型, , 
.局部变量 文本, 文本型, , , 

清除数组 (操作类型)
清除数组 (触发方式名)
赋值 (文本, “键盘'鼠标'键盘（映射键）'鼠标（只录制击键）'游戏手柄'键盘+鼠标'键盘+鼠标（只录制击键）'键盘+游戏手柄'鼠标+游戏手柄'鼠标（只录制击键）+游戏手柄'键盘+鼠标+游戏手柄'键盘+鼠标（只录制击键）+游戏手柄'”)
赋值 (操作类型, 分割文本 (文本, “'”, ))
赋值 (文本, “普通'连发'开关'”)
赋值 (触发方式名, 分割文本 (文本, “'”, ))


.子程序 _工具条1_被单击, 空白型, , 
.参数 按钮索引, 整数型, , 

.如果真 (等于 (按钮索引, 0))
    .如果 (等于 (.选中, 真))
        载入 (新建窗口, , 真)
    .否则
        .插入表项 (到文本 (相加 (取表项数 (), 1)), , , , )
    .如果结束
    
.如果真结束
.如果真 (等于 (按钮索引, 1))
    _编辑_被选择 ()
.如果真结束
.如果真 (等于 (按钮索引, 2))
    _删除_被选择 ()
.如果真结束
.如果真 (等于 (按钮索引, 3))
    _复制_被选择 ()
.如果真结束
.如果真 (等于 (按钮索引, 4))
    _高级属性_被选择 ()
.如果真结束


.子程序 _工具条1_被下拉, 空白型, , 
.参数 按钮索引, 整数型, , 
.参数 下拉横座标, 整数型, , 
.参数 下拉纵座标, 整数型, , 

.如果真 (等于 (按钮索引, 0))
    弹出菜单 ()
.如果真结束


.子程序 _超级列表框1_右键单击表项, 空白型, , 
_超级列表框1_左键单击表项 ()
弹出菜单 ()


.子程序 _新建_被选择, 空白型, , 
_新建按钮1_被单击 ()

.子程序 _加载_被选择, 空白型, , 
_加载按钮2_被单击 ()

.子程序 _保存_被选择, 空白型, , 
_保存按钮3_被单击 ()

.子程序 _另保为_被选择, 空白型, , 
.局部变量 i, 整数型, , , 
.局部变量 数据, 字节集, , "0", 
.局部变量 文件号, 整数型, , , 

赋值 (.类型, 1) ' 保存文件
赋值 (.标题, “保存”)
赋值 (.过滤器, “易键录文件|*.SFQ”)
赋值 (.初始目录, 取运行目录 ())
.如果真 (打开 ())
    赋值 (文件名, .文件名)
.如果真结束
清除数组 (数据)
置等待鼠标 ()
.变量循环首 (1, 取表项数 (), 1, i)
    加入成员 (数据, 读入文件 (文件路径 [i]))
.变量循环尾 ()
赋值 (文件号, 打开文件 (文件名, #重写, ))
写出数据 (文件号, #文件类型, 到文本 (取数组成员数 (数据)), 数据)
关闭文件 (文件号)
恢复鼠标 ()

.子程序 _启动_被选择, 空白型, , 
赋值 (_启动窗口., 2)

.子程序 _退出_被选择, 空白型, , 
结束 ()

.子程序 _向导添加_被选择, 空白型, , 
_用向导添加_被选择 ()

.子程序 _直接添加_被选择, 空白型, , 
_直接新建_被选择 ()

.子程序 _删除_被选择, 空白型, , 
.局部变量 i, 整数型, , , 

.如果真 (等于 (.., -1))
    信息框 (“未选择表项!”, 64, )
    返回 ()
.如果真结束

赋值 (.可视, 假)
删除成员 (文件路径, 相加 (., 1), 1)
删除成员 (快捷键, 相加 (., 1), 1)
.删除表项 (.)
.变量循环首 (0, 取表项数 (), 1, i)
    i.置标题 (0, 到文本 (相加 (i, 1)))
.变量循环尾 ()

.子程序 _编辑_被选择, 空白型, , 
.如果真 (等于 (.., -1))
    信息框 (“未选择表项!”, 64, )
    返回 ()
.如果真结束

.如果 (等于 (录制信息.类型, 3))
    赋值 (映射表编辑状态, 真)
    载入 (映射键表编辑器, , 真)
.否则
    载入 (高级编辑器, , 真)
.如果结束


.子程序 _复制_被选择, 空白型, , 
.局部变量 路径, 文本型, , , 
.局部变量 寻找文件名, 文本型, , , 
.局部变量 数, 整数型, , , 
.局部变量 表项位置, 整数型, , , 
.局部变量 匿名局部变量_3819, 空白型, , , 

.如果真 (等于 (.., -1))
    信息框 (“未选择表项!”, 64, )
    返回 ()
.如果真结束
赋值 (路径, 未知支持库函数_7 (#))
赋值 (寻找文件名, 寻找文件 (相加 (路径, “SIR_*.SIR”), ))
.判断循环首 (不等于 (寻找文件名, “”))
    赋值 (数, 相加 (数, 1))
    赋值 (寻找文件名, 寻找文件 ())
.判断循环尾 ()
赋值 (路径, 到文本 (相加 (未知支持库函数_7 (#), “SIR_”, 到文本 (相加 (数, 1)), “.SIR”)))
复制文件 (文件路径 [相加 (., 1)], 路径)
加入成员 (文件路径, 路径)
赋值 (表项位置, .插入表项 (到文本 (相加 (取表项数 (), 1)), , , , ))
赋值 (., 表项位置)
.如果 (读文件 ())
    置状态图片 (录制信息.类型)
    赋值 (.标题, 操作类型 [录制信息].类型)
    赋值 (.标题, 触发方式名 [录制信息].触发方式)
    赋值 (.标题, 相加 (到文本 (录制信息.录制时间), “毫秒”))
    输出调试文本 (录制信息.快捷键)
    表项位置.置标题 (1, 取键名 (录制信息.快捷键))
    表项位置.置标题 (2, 录制信息.说明)
    
    加入成员 (快捷键, 录制信息.快捷键)
    
.否则
    表项位置.删除表项 ()
    删除成员 (文件路径, 相加 (表项位置, 1), 1)
.如果结束


.子程序 _高级属性_被选择, 空白型, , 
.如果真 (等于 (_启动窗口.., -1))
    信息框 (“未选择表项!”, 64, )
    返回 ()
.如果真结束

载入 (属性窗口, , 真)

.子程序 _打开帮助_被选择, 空白型, , 
信息框 (“对不起，暂时还未有帮助！”, 64, )

.子程序 _关于_被选择, 空白型, , 
载入 (关于窗口, , 真)

.子程序 _用向导添加_被选择, 空白型, , 
赋值 (.选中, 假)
赋值 (.选中, 真)
载入 (新建窗口, , 真)

.子程序 _直接新建_被选择, 空白型, , 
 ' 用向导添加.选中 ＝ 假
 ' 直接新建.选中 ＝ 真
 ' 超级列表框1.插入表项 (, 到文本 (超级列表框1.取表项数 () ＋ 1), , , , 0)


.子程序 _新建按钮1_被单击, 空白型, , 
全部删除 ()
清除数组 (文件路径)
赋值 (保存文件路径, “”)

.子程序 _加载按钮2_被单击, 空白型, , 
.局部变量 表项位置, 整数型, , , 
.局部变量 文件号, 整数型, , , 
.局部变量 文件类型, 文本型, , , 
.局部变量 文件数, 文本型, , , 
.局部变量 文件数据, 字节集, , "0", 
.局部变量 i, 整数型, , , 
.局部变量 路径, 文本型, , , 
.局部变量 数, 整数型, , , 
.局部变量 寻找文件名, 文本型, , , 

赋值 (.类型, 0) ' 打开文件
赋值 (.标题, “打开”)
赋值 (.过滤器, “易键录文件|*.SFQ”)
赋值 (.初始目录, 取运行目录 ())
.如果真 (打开 ())
    赋值 (文件名, .文件名)
    赋值 (保存文件路径, 文件名)
    赋值 (文件号, 打开文件 (文件名, , ))
    读入数据 (文件号, 文件类型)
    .如果真 (不等于 (文件类型, #文件类型))
        信息框 (“读取文件失败!原因:不是易键录记录文件或无法识别的格式!!”, #错误图标, )
        返回 ()
    .如果真结束
    
    移到文件首 (文件号)
    读入数据 (文件号, 文件类型, 文件数)
    输出调试文本 (相加 (“文件数:”, 到文本 (文件数)))
    .如果真 (小于 (到数值 (文件数), 1))
        信息框 (“读取文件失败!原因:易键录记录文件被损坏或无法识别的格式!!”, #错误图标, )
        返回 ()
    .如果真结束
    重定义数组 (文件数据, 假, 到数值 (文件数))
    移到文件首 (文件号)
    读入数据 (文件号, 文件类型, 文件数, 文件数据)
    关闭文件 (文件号)
    置等待鼠标 ()
    .变量循环首 (1, 到数值 (文件数), 1, i)
        处理事件 ()
        赋值 (数, 0)
        赋值 (路径, 未知支持库函数_7 (#))
        赋值 (寻找文件名, 寻找文件 (相加 (路径, “SIR_*.SIR”), ))
        .判断循环首 (不等于 (寻找文件名, “”))
            赋值 (数, 相加 (数, 1))
            赋值 (寻找文件名, 寻找文件 ())
        .判断循环尾 ()
        赋值 (路径, 到文本 (相加 (未知支持库函数_7 (#), “SIR_”, 到文本 (相加 (数, 1)), “.SIR”)))
        输出调试文本 (路径)
        写到文件 (路径, 文件数据 [i]) ' 写临时文件
        加入成员 (文件路径, 路径)
        
        赋值 (表项位置, .插入表项 (到文本 (相加 (取表项数 (), 1)), , , , ))
        赋值 (., 表项位置)
        表项位置.置状态图片 (1)
        .如果 (读文件 ())
            置状态图片 (录制信息.类型)
            赋值 (.标题, 操作类型 [录制信息].类型)
            赋值 (.标题, 触发方式名 [录制信息].触发方式)
            赋值 (.标题, 相加 (到文本 (录制信息.录制时间), “毫秒”))
            输出调试文本 (录制信息.快捷键)
            表项位置.置标题 (1, 取键名 (录制信息.快捷键))
            表项位置.置标题 (2, 录制信息.说明)
            
            加入成员 (快捷键, 录制信息.快捷键)
            
        .否则
            表项位置.删除表项 ()
            删除成员 (文件路径, 相加 (表项位置, 1), 1)
            输出调试文本 (“原因:文件记录数据不全或不正确!”)
             ' 信息框 (“读取文件失败!原因:文件记录数据不全或不正确!”, #错误图标, )
        .如果结束
        
    .变量循环尾 ()
    恢复鼠标 ()
.如果真结束


.子程序 _保存按钮3_被单击, 空白型, , 
.局部变量 i, 整数型, , , 
.局部变量 数据, 字节集, , "0", 
.局部变量 文件号, 整数型, , , 

.如果真 (等于 (取表项数 (), 0))
    返回 ()
.如果真结束
清除数组 (数据)
置等待鼠标 ()
.变量循环首 (1, 取表项数 (), 1, i)
    加入成员 (数据, 读入文件 (文件路径 [i]))
.变量循环尾 ()
赋值 (文件号, 打开文件 (保存文件路径, #重写, ))
输出调试文本 (文件号)
.如果真 (等于 (文件号, 0))
    赋值 (.类型, 1) ' 保存文件
    赋值 (.标题, “保存”)
    赋值 (.过滤器, “易键录文件|*.SFQ”)
    赋值 (.初始目录, 取运行目录 ())
    .如果真 (打开 ())
        赋值 (保存文件路径, .文件名)
    .如果真结束
    
    赋值 (文件号, 打开文件 (保存文件路径, #重写, ))
.如果真结束

写出数据 (文件号, #文件类型, 到文本 (取数组成员数 (数据)), 数据)
关闭文件 (文件号)
恢复鼠标 ()


.子程序 _启动按钮4_被单击, 空白型, , 
赋值 (_启动窗口., 2)

.子程序 _超级列表框1_被双击, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 表项坐标, 坐标, , , 
.局部变量 i, 整数型, , , 

.如果真 (等于 (., -1))
    返回 ()
.如果真结束
赋值 (表项信息.横向, 横向位置)
赋值 (表项信息.纵向, 纵向位置)
取表项结构信息 (取窗口句柄 (), 4153, 0, 表项信息) ' 当前取表项行、列位置
.如果真 (不等于 (表项信息.行, -1))
    .如果真 (等于 (表项信息.列, 0))
        返回 ()
    .如果真结束
    取表项坐标信息 (取窗口句柄 (), 4112, 表项信息.行, 表项坐标) ' 取出当前表项行列坐标点
    赋值 (.顶边, 相加 (.加粗, 表项坐标.y, 1))
    赋值 (.左边, 相减 (相加 (表项坐标.x, .角度), 16))
    .变量循环首 (1, 表项信息.列, 1, i)
        赋值 (.左边, 相加 (.左边, 相减 (i, 1).取列宽 ()))
    .变量循环尾 ()
    赋值 (.宽度, 相减 (表项信息.取列宽 (.列), 1))
    .如果真 (大于 (相加 (.左边, .宽度), 相加 (.角度, .倾斜)))
        赋值 (.宽度, 相减 (相加 (.角度, .倾斜), .左边))
    .如果真结束
    赋值 (.内容, 表项信息.取标题 (.行, 表项信息.列))
     ' 超级列表框1.禁止重画 ()
    .如果 (等于 (表项信息.列, 1))
        赋值 (.对齐方式, 1)
    .否则
        赋值 (.对齐方式, 0)
    .如果结束
    
    赋值 (.可视, 真)
    _启动窗口.刷新显示 ()
    获取焦点 ()
    赋值 (.被选择字符数, -1) ' 全选中编辑框中的内容
.如果真结束


.子程序 _编辑框1_失去焦点, 空白型, , 
表项信息.置标题 (.行, 表项信息.列, .内容)
赋值 (.可视, 假)
.如果真 (等于 (表项信息.列, 1))
    写配置项 (文件路径 [相加 (表项信息.行, 1)], “MKRSF”, “SK”, 到文本 (快捷键 [相加 (表项信息.行, 1)]))
.如果真结束
.如果真 (等于 (表项信息.列, 2))
    写配置项 (文件路径 [相加 (表项信息.行, 1)], “MKRSF”, “Explain”, 表项信息.取标题 (.行, 表项信息.列))
.如果真结束


.子程序 _编辑框1_放开某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果 (等于 (表项信息.列, 1))
    .如果真 (不等于 (键代码, 255))
        赋值 (.内容, 到文本 (取键名 (键代码)))
        赋值 (快捷键 [相加 (表项信息.行, 1)], 键代码)
    .如果真结束
    
.否则
    .如果真 (等于 (键代码, #回车键))
        _编辑框1_失去焦点 ()
    .如果真结束
    
.如果结束


.子程序 _编辑框1_字符输入, 整数型, , 
.参数 字符代码, 整数型, , 

.如果真 (等于 (表项信息.列, 1))
    返回 (0)
.如果真结束


.子程序 置状态图片, 空白型, , 
.参数 参数, 整数型, , 

 ' 1键盘
 ' 2鼠标
 ' 3键盘（映射键）
 ' 4鼠标（只录制击键）
 ' 5游戏手柄
 ' 6键盘+鼠标
 ' 7键盘+鼠标（只录制击键）
 ' 8键盘+游戏手柄
 ' 9鼠标+游戏手柄
 ' 10鼠标（只录制击键）+游戏手柄
 ' 11键盘+鼠标+游戏手柄
 ' 12键盘+鼠标（只录制击键）+游戏手柄
赋值 (.图片, {  })
赋值 (.图片, {  })
赋值 (.图片, {  })
.如果真 (或者 (等于 (参数, 1), 等于 (参数, 3)))
    赋值 (.图片, #键盘)
.如果真结束
.如果真 (或者 (等于 (参数, 2), 等于 (参数, 4)))
    赋值 (.图片, #鼠标)
.如果真结束
.如果真 (等于 (参数, 5))
    赋值 (.图片, #游戏杆)
.如果真结束
.如果真 (或者 (等于 (参数, 6), 等于 (参数, 7)))
    赋值 (.图片, #键盘)
    赋值 (.图片, #鼠标)
.如果真结束
.如果真 (等于 (参数, 8))
    赋值 (.图片, #键盘)
    赋值 (.图片, #游戏杆)
.如果真结束
.如果真 (或者 (等于 (参数, 9), 等于 (参数, 10)))
    赋值 (.图片, #鼠标)
    赋值 (.图片, #游戏杆)
.如果真结束
.如果真 (或者 (等于 (参数, 11), 等于 (参数, 12)))
    赋值 (.图片, #键盘)
    赋值 (.图片, #鼠标)
    赋值 (.图片, #游戏杆)
.如果真结束



.子程序 读文件, 逻辑型, , 
.局部变量 i, 整数型, , , 
.局部变量 值, 整数型, , , 
.局部变量 记录, 文本型, , , 

 ' Edition=1.0.0'版本
 ' SK=13’快捷键"回车键"
 ' Type=1‘类型：键盘
 ' TW=1’触发方式
 ' TW1=1’1次数限制,2无限循环
 ' TDT=1000’触发延时时间
 ' ATL=1000‘时间
 ' Explain=测试‘说明
 ' K1.256.100.  格式：键状态，键代码，延时时间。键盘记录
 ' M4.525.125.252.’格式：键状态，横坐标，纵坐标，延时时间。鼠标记录
清除数组 (记录文件)
 ' 版本 ＝ 读配置项 (文件路径 [超级列表框1.现行选中项 ＋ 1], “MKRSF”, “Edition”, “”)
输出调试文本 (文件路径 [相加 (., 1)])
赋值 (录制信息.快捷键, 到数值 (读配置项 (文件路径 [相加 (., 1)], “MKRSF”, “SK”, “-1”)))
赋值 (录制信息.类型, 到数值 (读配置项 (文件路径 [相加 (., 1)], “MKRSF”, “Type”, “-1”)))
赋值 (录制信息.触发方式, 到数值 (读配置项 (文件路径 [相加 (., 1)], “MKRSF”, “TW”, “-1”)))
赋值 (录制信息.触发配置, 到数值 (读配置项 (文件路径 [相加 (., 1)], “MKRSF”, “TW1”, “-1”)))
赋值 (录制信息.触发延时, 到数值 (读配置项 (文件路径 [相加 (., 1)], “MKRSF”, “TDT”, “-1”)))
赋值 (录制信息.录制时间, 到数值 (读配置项 (文件路径 [相加 (., 1)], “MKRSF”, “ATL”, “-1”)))
赋值 (录制信息.说明, 读配置项 (文件路径 [相加 (., 1)], “MKRSF”, “Explain”, “-1”))
赋值 (记录, 读配置项 (文件路径 [相加 (., 1)], “MIICLA”, “MK”, “-1”))
.如果真 (小于 (录制信息.快捷键, 1))
    输出调试文本 (“快捷键”)
    返回 (假)
.如果真结束
.如果真 (小于 (录制信息.类型, 1))
    输出调试文本 (“类型”)
    返回 (假)
.如果真结束
.如果真 (小于 (录制信息.触发方式, 1))
    输出调试文本 (“触发方式”)
    返回 (假)
.如果真结束
.如果真 (小于 (录制信息.触发配置, 1))
    输出调试文本 (“触发配置”)
    返回 (假)
.如果真结束
 ' .如果真 (小于 (录制信息.录制时间, 1))
     ' 输出调试文本 (“录制时间”)
     ' 返回 (假)
.如果真结束
 ' .如果真 (等于 (录制信息.说明, “-1”))
     ' 返回 (假)
.如果真结束
.如果真 (等于 (记录, “-1”))
    输出调试文本 (“记录”)
    返回 (假)
.如果真结束

赋值 (记录文件, 分割文本 (记录, “#”, ))
返回 (真)

.子程序 _超级列表框1_放开某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (或者 (等于 (键代码, #上光标键), 等于 (键代码, #下光标键)))
    _超级列表框1_左键单击表项 ()
.如果真结束


.子程序 _超级列表框1_左键单击表项, 空白型, , 
.如果真 (并且 (等于 (., -1), 等于 (.取表项数值 (.), 0)))
    返回 ()
.如果真结束
输出调试文本 (文件路径 [相加 (., 1)])
.如果 (读文件 ())
    置状态图片 (录制信息.类型)
    赋值 (.标题, 操作类型 [录制信息].类型)
    赋值 (.标题, 触发方式名 [录制信息].触发方式)
    赋值 (.标题, 相加 (到文本 (录制信息.录制时间), “毫秒”))
    
.否则
     ' 信息框 (“读取文件失败!原因:文件记录数据不全或不正确!”, #错误图标, )
    
.如果结束



.子程序 _超级列表框1_滚轮被滚动, 逻辑型, , 
.参数 滚动距离, 整数型, , 
.参数 功能键状态, 整数型, , 

_编辑框1_失去焦点 ()

.子程序 __启动窗口_位置被改变, 空白型, , 
.如果 (等于 (., 2))
    重定义数组 (按键, 假, 取数组成员数 (快捷键))
    监视键盘 (&键盘处理子程序1)
    赋值 (图标状态, 2)
     ' _启动窗口.可视 ＝ 假
.否则
    .如果真 (大于 (n, 0))
        赋值 (按键 [n], 2)
        
    .如果真结束
    取消键盘监视 ()
    赋值 (图标状态, 1)
     ' _启动窗口.可视 ＝ 真
.如果结束
置托盘图标 (多项选择 (图标状态, #图标1, #图标2), “易键录”)


.子程序 键盘处理子程序1, 空白型, , 
.参数 键状态, 整数型, , 
.参数 键代码, 整数型, , 
.参数 延时时间, 整数型, , 
.参数 备用, 整数型, , 

.局部变量 i, 整数型, , , 
.局部变量 触发方式, 整数型, , , 
.局部变量 K, 整数型, , , 
.局部变量 V, 整数型, , , 

输出调试文本 (“*********************************”)
输出调试文本 (相加 (“键代码:”, 到文本 (键代码)))
输出调试文本 (相加 (“键状态:”, 到文本 (键状态)))
输出调试文本 (“-----------------------------------”)
 ' 触发方式1 按下 执行模拟
 ' 触发方式2 按下 执行模拟 放开 停止模拟
 ' 触发方式3 按下 执行模拟 开关1按次数停止模拟 开关2无限循环，如果模拟执行为真，停止模拟。

.如果真 (小于 (取数组成员数 (快捷键), 1))
    返回 ()
.如果真结束


.如果真 (等于 (键状态, 256))
    输出调试文本 (“键状态按下”)
    .变量循环首 (1, 取数组成员数 (快捷键), 1, i)
        处理事件 ()
        .如果真 (等于 (快捷键 [i], 键代码))
            .如果真 (等于 (相减 (i, 1).取当前状态图片 (), 1)) ' 判断是否选中
                .如果真 (等于 (按键 [i], 3))
                    赋值 (按键 [i], 0)
                .如果真结束
                .如果 (等于 (按键 [i], 0))
                    赋值 (按键 [i], 1)
                    赋值 (n, i)
                    未知支持库函数_0 (&键盘鼠标操作, i)
                     ' 执行子程序 (&键盘鼠标操作, i)
                    跳出循环 ()
                .否则
                     ' 按键 [i] ＝ 2
                     ' 跳出循环 ()
                .如果结束
                
            .如果真结束
            
        .如果真结束
        
    .变量循环尾 ()
.如果真结束


.如果真 (等于 (键状态, 257))
    输出调试文本 (“键状态放开”)
    .如果真 (大于 (n, 0))
        赋值 (触发方式, 到数值 (读配置项 (文件路径 [n], “MKRSF”, “TW”, “-1”)))
        .如果真 (等于 (触发方式, 2))
            赋值 (按键 [n], 2)
        .如果真结束
        
    .如果真结束
    
    .变量循环首 (1, 取数组成员数 (快捷键), 1, K)
        处理事件 ()
        .如果真 (等于 (快捷键 [K], 键代码))
            .如果真 (等于 (相减 (K, 1).取当前状态图片 (), 1)) ' 判断是否选中
                .如果 (等于 (按键 [K], 1))
                    赋值 (按键 [K], 2)
                    跳出循环 ()
                .否则
                    赋值 (按键 [K], 3)
                    跳出循环 ()
                    
                .如果结束
                
            .如果真结束
            
        .如果真结束
        
    .变量循环尾 ()
    
.如果真结束


.子程序 键盘鼠标操作, 空白型, , 
.参数 参数, 整数型, , 

.局部变量 记录数据, 文本型, , "0", 
.局部变量 n, 整数型, , , 
.局部变量 i, 整数型, , , 
.局部变量 记录文本, 文本型, , , 
.局部变量 值, 整数型, , , 
.局部变量 触发方式, 整数型, , , 
.局部变量 触发配置, 整数型, , , 
.局部变量 触发延时, 整数型, , , 
.局部变量 配置次数, 整数型, , , 
.局部变量 MK, 整数型, , "0", 
.局部变量 记录, 文本型, , "0", 

 ' Edition=1.0.0'版本
 ' SK=F1’快捷键
 ' Type=1‘类型：键盘
 ' TW=1’触发方式
 ' TW1=1’1次数限制,2无限循环
 ' TDT=1000’触发延时时间
 ' ATL=1000‘时间
 ' Explain=测试‘说明
 ' K1.256.100.  格式：键状态，键代码，延时时间。键盘记录
 ' M4.525.125.252.’格式：键状态，横坐标，纵坐标，延时时间。鼠标记录
赋值 (记录文本, 读配置项 (文件路径 [参数], “MIICLA”, “MK”, “-1”))
输出调试文本 (相加 (“记录文本:”, 记录文本))
清除数组 (记录)
赋值 (记录, 分割文本 (记录文本, “#”, ))
赋值 (值, 到数值 (读配置项 (文件路径 [参数], “MKRSF”, “Type”, “-1”)))
赋值 (触发方式, 到数值 (读配置项 (文件路径 [参数], “MKRSF”, “TW”, “-1”)))
赋值 (触发配置, 到数值 (读配置项 (文件路径 [参数], “MKRSF”, “TW1”, “-1”)))
赋值 (触发延时, 到数值 (读配置项 (文件路径 [参数], “MKRSF”, “TDT”, “-1”)))
赋值 (配置次数, 到数值 (读配置项 (文件路径 [参数], “MKRSF”, “TW2”, “-1”)))
输出调试文本 (相加 (“读配置项:”, 文件路径 [参数]))
清除数组 (键盘记录.键状态)
清除数组 (键盘记录.键代码)
清除数组 (键盘记录.延时时间)
清除数组 (键盘记录.次数)
清除数组 (鼠标记录.键状态)
清除数组 (鼠标记录.横坐标)
清除数组 (鼠标记录.纵坐标)
清除数组 (鼠标记录.延时时间)
清除数组 (鼠标记录.次数)
清除数组 (MK)
.如果真 (大于 (触发延时, 0))
    程序等待 (触发延时)
.如果真结束

输出调试文本 (相加 (“类型:”, 操作类型 [值]))
.如果 (等于 (值, 3))
    
.否则
    .变量循环首 (1, 取数组成员数 (记录), 1, n)
        处理事件 ()
        清除数组 (记录数据)
        .如果真 (等于 (取文本左边 (记录 [n], 1), “K”))
            赋值 (记录数据, 分割文本 (取文本中间 (记录 [n], 2, 相减 (取文本长度 (记录 [n]), 1)), “.”, ))
            .如果真 (小于 (取数组成员数 (记录数据), 4))
                到循环尾 ()
            .如果真结束
            .如果真 (或者 (小于 (到数值 (记录数据 [2]), 1), 大于 (到数值 (记录数据 [2]), 255)))
                到循环尾 ()
            .如果真结束
            .如果真 (并且 (不等于 (到数值 (记录数据 [1]), 256), 不等于 (到数值 (记录数据 [1]), 257)))
                到循环尾 ()
            .如果真结束
            .如果真 (小于 (到数值 (记录数据 [4]), 1))
                到循环尾 ()
            .如果真结束
            
            加入成员 (键盘记录.键状态, 到数值 (记录数据 [1]))
            加入成员 (键盘记录.键代码, 到数值 (记录数据 [2]))
            加入成员 (键盘记录.延时时间, 到数值 (记录数据 [3]))
            加入成员 (键盘记录.次数, 到数值 (记录数据 [4]))
            加入成员 (MK, 1)
            输出调试文本 (“K”)
        .如果真结束
        .如果真 (等于 (取文本左边 (记录 [n], 1), “M”))
            赋值 (记录数据, 分割文本 (取文本中间 (记录 [n], 2, 相减 (取文本长度 (记录 [n]), 1)), “.”, ))
            .如果真 (小于 (取数组成员数 (记录数据), 5))
                到循环尾 ()
            .如果真结束
            .如果真 (小于 (到数值 (记录数据 [5]), 1))
                到循环尾 ()
            .如果真结束
            
            加入成员 (鼠标记录.键状态, 到数值 (记录数据 [1]))
            加入成员 (鼠标记录.横坐标, 到数值 (记录数据 [2]))
            加入成员 (鼠标记录.纵坐标, 到数值 (记录数据 [3]))
            加入成员 (鼠标记录.延时时间, 到数值 (记录数据 [4]))
            加入成员 (鼠标记录.次数, 到数值 (记录数据 [5]))
            加入成员 (MK, 2)
            输出调试文本 (“M”)
            
        .如果真结束
        
    .变量循环尾 ()
    
.如果结束

.如果真 (等于 (触发方式, 1))
    输出调试文本 (“触发方式 ＝ 1”)
    .变量循环首 (1, 取数组成员数 (MK), 1, n)
        处理事件 ()
        .如果 (等于 (MK [n], 1))
             ' 输出调试文本 (键盘记录.次数 [n])
             ' 输出调试文本 (键盘记录.键代码 [n])
             ' 输出调试文本 (键盘记录.键状态 [n])
             ' 输出调试文本 (键盘记录.延时时间 [n])
            
            .变量循环首 (1, 键盘记录.次数 [n], 1, )
                 ' 输出调试文本 (“模拟键盘操作”)
                模拟键盘操作 (键盘记录.键代码 [n], 0, 键盘记录.键状态 [n], 0, 键盘记录.延时时间 [n])
            .变量循环尾 ()
        .否则
            .变量循环首 (1, 鼠标记录.次数 [n], 1, )
                 ' 输出调试文本 (“模拟鼠标操作”)
                模拟鼠标操作 (鼠标记录.键状态 [n], 鼠标记录.横坐标 [n], 鼠标记录.纵坐标 [n], 0, 0, 鼠标记录.延时时间 [n])
            .变量循环尾 ()
        .如果结束
        
        .如果真 (等于 (按键 [参数], 3))
            跳出循环 ()
        .如果真结束
        
    .变量循环尾 ()
    
.如果真结束

.如果真 (等于 (触发方式, 2))
    输出调试文本 (“触发方式 ＝2”)
    .循环判断首 ()
        处理事件 ()
        .变量循环首 (1, 取数组成员数 (MK), 1, n)
            .如果 (等于 (MK [n], 1))
                .变量循环首 (1, 键盘记录.次数 [n], 1, i)
                     ' 输出调试文本 (“模拟键盘操作”)
                    模拟键盘操作 (键盘记录.键代码 [n], 0, 键盘记录.键状态 [n], 0, 键盘记录.延时时间 [n])
                .变量循环尾 ()
            .否则
                .变量循环首 (1, 鼠标记录.次数 [n], 1, i)
                     ' 输出调试文本 (“模拟鼠标操作”)
                    模拟鼠标操作 (鼠标记录.键状态 [n], 鼠标记录.横坐标 [n], 鼠标记录.纵坐标 [n], 0, 0, 鼠标记录.延时时间 [n])
                .变量循环尾 ()
            .如果结束
            
            .如果真 (等于 (按键 [参数], 3))
                跳出循环 ()
            .如果真结束
            
        .变量循环尾 ()
    .循环判断尾 (不等于 (按键 [参数], 3))
.如果真结束

.如果真 (等于 (触发方式, 3))
    输出调试文本 (“触发方式 ＝ 3”)
    .如果真 (等于 (触发配置, 1))
        .如果真 (小于 (配置次数, 1))
            返回 ()
        .如果真结束
        .变量循环首 (1, 配置次数, 1, )
            处理事件 ()
            .变量循环首 (1, 取数组成员数 (MK), 1, n)
                处理事件 ()
                .如果 (等于 (MK [n], 1))
                    .变量循环首 (1, 键盘记录.次数 [n], 1, i)
                         ' 输出调试文本 (“模拟键盘操作”)
                        模拟键盘操作 (键盘记录.键代码 [n], 0, 键盘记录.键状态 [n], 0, 键盘记录.延时时间 [n])
                    .变量循环尾 ()
                .否则
                    .变量循环首 (1, 鼠标记录.次数 [n], 1, i)
                         ' 输出调试文本 (“模拟鼠标操作”)
                        模拟鼠标操作 (鼠标记录.键状态 [n], 鼠标记录.横坐标 [n], 鼠标记录.纵坐标 [n], 0, 0, 鼠标记录.延时时间 [n])
                    .变量循环尾 ()
                .如果结束
                
                .如果真 (等于 (按键 [参数], 3))
                    跳出循环 ()
                .如果真结束
                
            .变量循环尾 ()
            .如果真 (等于 (按键 [参数], 3))
                跳出循环 ()
            .如果真结束
            
             ' 输出调试文本 (“触发方式3按键” ＋ 到文本 (按键 [参数]))
             ' 输出调试文本 (“触发方式3参数” ＋ 到文本 (参数))
             ' 输出调试文本 (“---------------------”)
        .变量循环尾 ()
    .如果真结束
    .如果真 (等于 (触发配置, 2))
        .循环判断首 ()
            处理事件 ()
            .变量循环首 (1, 取数组成员数 (MK), 1, n)
                处理事件 ()
                .如果 (等于 (MK [n], 1))
                    .变量循环首 (1, 键盘记录.次数 [n], 1, i)
                         ' 输出调试文本 (“模拟键盘操作”)
                        模拟键盘操作 (键盘记录.键代码 [n], 0, 键盘记录.键状态 [n], 0, 键盘记录.延时时间 [n])
                    .变量循环尾 ()
                .否则
                    .变量循环首 (1, 鼠标记录.次数 [n], 1, i)
                         ' 输出调试文本 (“模拟鼠标操作”)
                        模拟鼠标操作 (鼠标记录.键状态 [n], 鼠标记录.横坐标 [n], 鼠标记录.纵坐标 [n], 0, 0, 鼠标记录.延时时间 [n])
                    .变量循环尾 ()
                .如果结束
                
                .如果真 (等于 (按键 [参数], 3))
                    跳出循环 ()
                .如果真结束
                
            .变量循环尾 ()
        .循环判断尾 (不等于 (按键 [参数], 3))
        
    .如果真结束
    
    
.如果真结束
赋值 (按键 [参数], 0)
输出调试文本 (按键 [参数])
未知支持库函数_73 ()
输出调试文本 (“完成”)


.子程序 __启动窗口_将被销毁, 空白型, , 
.局部变量 路径, 文本型, , , 
.局部变量 寻找文件名, 文本型, , , 

赋值 (路径, 未知支持库函数_7 (#))
赋值 (寻找文件名, 寻找文件 (相加 (路径, “SIR_*.SIR”), ))
.判断循环首 (不等于 (寻找文件名, “”))
    删除文件 (相加 (路径, 寻找文件名)) ' 清除临时文件
    赋值 (寻找文件名, 寻找文件 ())
.判断循环尾 ()
置托盘图标 ()

.子程序 __启动窗口_尺寸被改变, 空白型, , 
赋值 (.高度, 相减 (取用户区高度 (), 18))
赋值 (.禁止, 相减 (取用户区宽度 (), .标题, 10))
赋值 (.倾斜, 相减 (取用户区宽度 (), .角度, 10))
赋值 (.删除线, 相减 (取用户区高度 (), .高度, .可视, 30))
赋值 (.宽度, 相减 (取用户区宽度 (), .左边, 10))
赋值 (.顶边, 相减 (取用户区高度 (), .高度, 10))
赋值 (.顶边, 相加 (.顶边, 5))
赋值 (.顶边, 相加 (.顶边, 5))
赋值 (.顶边, 相加 (.顶边, 5))
赋值 (.顶边, 相加 (.顶边, 45))
赋值 (.顶边, 相加 (.顶边, 60))
赋值 (.顶边, 相加 (.顶边, 75))
赋值 (.顶边, 相加 (.顶边, 45))
赋值 (.顶边, 相加 (.顶边, 60))
赋值 (.顶边, 相加 (.顶边, 75))
.如果真 (小于或等于 (_启动窗口., 618))
    赋值 (_启动窗口., 618)
.如果真结束
.如果真 (小于或等于 (_启动窗口., 463))
    赋值 (_启动窗口., 463)
.如果真结束


.窗口程序集 窗口程序集2, , , 

.程序集变量 现行子夹, 整数型, , , 
.子程序 _新建窗口_创建完毕, 空白型, , 
赋值 (录制信息.类型, 0)
赋值 (录制信息.说明, “”)
赋值 (录制信息.快捷键, 0)
赋值 (录制信息.触发方式, 1)
赋值 (录制信息.录制时间, 0)
赋值 (现行子夹, 0)

.子程序 _选择框2_被单击, 空白型, , 
.如果 (等于 (.选中, 真))
    赋值 (.禁止, 假)
.否则
    赋值 (.禁止, 真)
.如果结束


.子程序 _按钮1_被单击, 空白型, , 
.如果真 (小于 (现行子夹, 0))
    返回 ()
.如果真结束

赋值 (现行子夹, 相减 (现行子夹, 1))
赋值 (.现行子夹, 现行子夹)
.如果真 (小于 (现行子夹, 1))
    赋值 (.禁止, 真)
.如果真结束
.如果真 (不等于 (现行子夹, 3))
    赋值 (.标题, “下一步(&N)”)
.如果真结束


.子程序 _按钮2_被单击, 空白型, , 
.局部变量 i, 整数型, , , 
.局部变量 没选中, 整数型, , , 
.局部变量 表项位置, 整数型, , , 

.如果真 (等于 (.标题, “完成”))
    写文件 ()
    赋值 (表项位置, _启动窗口.插入表项 (., , 到文本 (相加 (_启动窗口.取表项数 (.), 1)), , , , ))
    _启动窗口.置标题 (., 表项位置, 1, 取键名 (录制信息.快捷键))
    _启动窗口.置标题 (., 表项位置, 2, 录制信息.说明)
    置状态图片 (录制信息.类型)
    赋值 (_启动窗口..标题, 操作类型 [录制信息].类型)
    赋值 (_启动窗口..标题, 触发方式名 [录制信息].触发方式)
    赋值 (_启动窗口..标题, 相加 (到文本 (录制信息.录制时间), “毫秒”))
    加入成员 (快捷键, 录制信息.快捷键)
    
    销毁 ()
    返回 ()
.如果真结束
.如果真 (等于 (现行子夹, 0))
    赋值 (没选中, 0)
    .变量循环首 (1, 3, 1, i)
        .如果真 (等于 ( [选择框 (i)].选中, 假))
            赋值 (没选中, 相加 (没选中, 1))
        .如果真结束
        .如果真 (等于 (没选中, 3))
            信息框 (“未选择录制类型,你最少要选择一项!”, 0, )
            返回 ()
        .如果真结束
        
    .变量循环尾 ()
    类型 ()
    获取焦点 ()
.如果真结束
.如果真 (等于 (现行子夹, 1))
    .如果真 (等于 (.内容, “”))
        信息框 (“未输入触发的快捷键!”, 0, )
        获取焦点 ()
        返回 ()
    .如果真结束
    赋值 (录制信息.说明, .内容)
    
.如果真结束
.如果真 (等于 (现行子夹, 2))
    赋值 (.标题, 取键名 (录制信息.快捷键))
    赋值 (.标题, 操作类型 [录制信息].类型)
    赋值 (.标题, 相加 (到文本 (录制信息.录制时间), “毫秒”))
    赋值 (.内容, 录制信息.说明)
.如果真结束
.如果真 (大于 (现行子夹, 3))
    返回 ()
.如果真结束
赋值 (现行子夹, 相加 (现行子夹, 1))
赋值 (.现行子夹, 现行子夹)
.如果真 (大于或等于 (现行子夹, 1))
    赋值 (.禁止, 假)
.如果真结束
.如果真 (等于 (现行子夹, 3))
    赋值 (.标题, “完成”)
.如果真结束


.子程序 写文件, 空白型, , 
.局部变量 i, 整数型, , , 
.局部变量 文本, 文本型, , , 
.局部变量 路径, 文本型, , , 
.局部变量 文件名, 文本型, , , 
.局部变量 数, 整数型, , , 
.局部变量 记录, 文本型, , , 

 ' Edition=1.0.0'版本
 ' SK=F1’快捷键
 ' Type=1‘类型：键盘
 ' TW=1’触发方式
 ' TW1=1’1次数限制,2无限循环
 ' TDT=1000’触发延时时间
 ' ATL=1000‘时间
 ' Explain=测试‘说明
 ' K1.256.100.  格式：键状态，键代码，延时时间。键盘记录
 ' M4.525.125.252.’格式：键状态，横坐标，纵坐标，延时时间。鼠标记录
赋值 (记录, “”)
.变量循环首 (1, 取数组成员数 (录制记录), 1, i)
    赋值 (记录, 相加 (记录, 录制记录 [i], “#”))
.变量循环尾 ()
赋值 (路径, 未知支持库函数_7 (#))
赋值 (文件名, 寻找文件 (相加 (路径, “SIR_*.SIR”), ))
.判断循环首 (不等于 (文件名, “”))
    赋值 (数, 相加 (数, 1))
    赋值 (文件名, 寻找文件 ())
.判断循环尾 ()
赋值 (路径, 到文本 (相加 (未知支持库函数_7 (#), “SIR_”, 到文本 (相加 (数, 1)), “.SIR”)))
输出调试文本 (路径)
赋值 (录制信息.触发配置, 1)

写配置项 (路径, “MKRSF”, “Edition”, “1.0.0”)
写配置项 (路径, “MKRSF”, “SK”, 到文本 (录制信息.快捷键))
写配置项 (路径, “MKRSF”, “Type”, 到文本 (录制信息.类型))
写配置项 (路径, “MKRSF”, “TW”, 到文本 (录制信息.触发方式))
写配置项 (路径, “MKRSF”, “TW1”, 到文本 (录制信息.触发配置))
写配置项 (路径, “MKRSF”, “TDT”, 到文本 (录制信息.触发延时))
写配置项 (路径, “MKRSF”, “ATL”, 到文本 (录制信息.录制时间))
写配置项 (路径, “MKRSF”, “Explain”, 到文本 (录制信息.说明))
写配置项 (路径, “MIICLA”, “MK”, 到文本 (记录))

输出调试文本 (记录)

清除数组 (记录文件)
赋值 (记录文件, 分割文本 (记录, “#”, ))
加入成员 (文件路径, 路径)

.子程序 选择框, 选择框, , 
.参数 参数, 整数型, , 

.局部变量 返回值, 选择框, , , 

赋值 (返回值, 多项选择 (参数, , , , ))
返回 (返回值)

.子程序 类型, 空白型, , 
 ' 1键盘
 ' 2鼠标
 ' 3键盘（映射键）
 ' 4鼠标（只录制击键）
 ' 5游戏手柄
 ' 6键盘+鼠标
 ' 7键盘+鼠标（只录制击键）
 ' 8键盘+游戏手柄
 ' 9鼠标+游戏手柄
 ' 10鼠标（只录制击键）+游戏手柄
 ' 11键盘+鼠标+游戏手柄
 ' 12键盘+鼠标（只录制击键）+游戏手柄
.如果真 (等于 (.选中, 真))
    赋值 (录制信息.类型, 1)
.如果真结束
.如果真 (等于 (.选中, 真))
    赋值 (录制信息.类型, 2)
.如果真结束
.如果真 (等于 (.选中, 真))
    赋值 (录制信息.类型, 3)
.如果真结束
.如果真 (等于 (.选中, 真))
    赋值 (录制信息.类型, 4)
.如果真结束
.如果真 (等于 (.选中, 真))
    赋值 (录制信息.类型, 5)
.如果真结束
.如果真 (并且 (等于 (.选中, 真), 等于 (.选中, 真)))
    赋值 (录制信息.类型, 6)
.如果真结束
.如果真 (并且 (等于 (.选中, 真), 等于 (.选中, 真)))
    赋值 (录制信息.类型, 7)
.如果真结束
.如果真 (并且 (等于 (.选中, 真), 等于 (.选中, 真)))
    赋值 (录制信息.类型, 8)
.如果真结束
.如果真 (并且 (等于 (.选中, 真), 等于 (.选中, 真)))
    赋值 (录制信息.类型, 9)
.如果真结束
.如果真 (并且 (等于 (.选中, 真), 等于 (.选中, 真)))
    赋值 (录制信息.类型, 10)
.如果真结束
.如果真 (并且 (等于 (.选中, 真), 等于 (.选中, 真), 等于 (.选中, 真)))
    赋值 (录制信息.类型, 11)
.如果真结束
.如果真 (并且 (等于 (.选中, 真), 等于 (.选中, 真), 等于 (.选中, 真)))
    赋值 (录制信息.类型, 12)
.如果真结束


.子程序 _按钮4_被单击, 空白型, , 
.如果真 (等于 (录制信息.类型, 3))
    赋值 (映射表编辑状态, 假)
    载入 (映射键表编辑器, , 真)
.如果真结束
.如果真 (或者 (等于 (录制信息.类型, 1), 等于 (录制信息.类型, 2), 等于 (录制信息.类型, 4), 等于 (录制信息.类型, 6), 等于 (录制信息.类型, 7)))
    载入 (录制窗口, , 真)
.如果真结束


.子程序 _按钮3_被单击, 空白型, , 
销毁 ()

.子程序 _编辑框1_字符输入, 整数型, , 
.参数 字符代码, 整数型, , 

返回 (0)

.子程序 _编辑框1_放开某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (不等于 (键代码, 255))
    赋值 (.内容, 取键名 (键代码))
    赋值 (录制信息.快捷键, 键代码)
    
.如果真结束


.子程序 _选择框1_被单击, 空白型, , 
.如果 (等于 (.选中, 真))
    赋值 (.禁止, 假)
.否则
    赋值 (.禁止, 真)
.如果结束


.子程序 _选择框5_被单击, 空白型, , 
.如果 (等于 (.选中, 真))
    赋值 (.禁止, 真)
    赋值 (.禁止, 真)
    赋值 (.选中, 假)
    赋值 (.选中, 假)
.否则
    赋值 (.禁止, 假)
    赋值 (.禁止, 假)
.如果结束


.窗口程序集 窗口程序集3, , , 

.程序集变量 毫秒, 整数型, , , 
.程序集变量 是否录制, 逻辑型, , , 
.子程序 _录制窗口_创建完毕, 空白型, , 
 ' 1键盘
 ' 2鼠标
 ' 3键盘（映射键）
 ' 4鼠标（只录制击键）
 ' 5游戏手柄
 ' 6键盘+鼠标
 ' 7键盘+鼠标（只录制击键）
 ' 8键盘+游戏手柄
 ' 9鼠标+游戏手柄
 ' 10鼠标（只录制击键）+游戏手柄
 ' 11键盘+鼠标+游戏手柄
 ' 12键盘+鼠标（只录制击键）+游戏手柄

清除数组 (录制记录)
.如果真 (或者 (等于 (录制信息.类型, 1), 等于 (录制信息.类型, 3), 等于 (录制信息.类型, 6), 等于 (录制信息.类型, 7), 等于 (录制信息.类型, 8), 等于 (录制信息.类型, 11), 等于 (录制信息.类型, 12)))
    监视键盘 (&键盘处理子程序3)
.如果真结束
.如果真 (或者 (等于 (录制信息.类型, 2), 等于 (录制信息.类型, 4), 等于 (录制信息.类型, 6), 等于 (录制信息.类型, 7), 等于 (录制信息.类型, 9), 等于 (录制信息.类型, 10), 等于 (录制信息.类型, 11), 等于 (录制信息.类型, 12)))
    监视鼠标 (&鼠标处理子程序3)
.如果真结束

赋值 (.标题, 相加 (“录制”, #引号, 操作类型 [录制信息].类型, #引号, “操作，结束录制请按下面的按钮或按键盘上的”, #引号, “Scroll Lock”, #引号, “键！”))

.子程序 _按钮1_被单击, 空白型, , 
鸣叫 ()
.如果 (等于 (.禁止, 假))
    赋值 (是否录制, 假)
    取录制时间 (2)
    销毁 ()
.否则
    赋值 (.禁止, 假)
    赋值 (是否录制, 真)
    取录制时间 (1)
.如果结束


.子程序 取录制时间, 空白型, , 
.参数 参数, 整数型, , 

.如果真 (等于 (参数, 1))
    赋值 (毫秒, 取启动时间 ())
.如果真结束
.如果真 (等于 (参数, 2))
    赋值 (录制信息.录制时间, 相减 (取启动时间 (), 毫秒))
.如果真结束


.子程序 键盘处理子程序3, 空白型, , 
.参数 键状态, 整数型, , 
.参数 键代码, 整数型, , 
.参数 延时时间, 整数型, , 
.参数 备用, 整数型, , 

.如果真 (并且 (等于 (键状态, 257), 等于 (键代码, 145))) ' 当按下ScrollLock键时.....
    _按钮1_被单击 ()
    返回 ()
.如果真结束

.如果真 (等于 (是否录制, 真))
    .如果真 (等于 (键状态, 257))
        加入记录 (相加 (“K”, 到文本 (键状态), “.”, 到文本 (键代码), “.”, 到文本 (延时时间), “.”, “1.”))
        输出调试文本 (相加 (“K”, 到文本 (键状态), “.”, 到文本 (键代码), “.”, 到文本 (延时时间), “.”, “1.”))
    .如果真结束
    
.如果真结束


.子程序 鼠标处理子程序3, 空白型, , 
.参数 键状态, 整数型, , 
.参数 横坐标, 整数型, , 
.参数 纵坐标, 整数型, , 
.参数 延时时间, 整数型, , 

 ' 键状态 ＝ 2  ' 鼠标左键按下
 ' 键状态 ＝ 4  ' 鼠标左键放开
 ' 键状态 ＝ 8  ' 鼠标右键按下
 ' 键状态 ＝ 16  ' 鼠标右键放开
.如果真 (等于 (是否录制, 真))
    .如果 (等于 (录制信息.类型, 4))
        .如果真 (或者 (等于 (键状态, 2), 等于 (键状态, 4), 等于 (键状态, 8), 等于 (键状态, 16)))
            加入记录 (相加 (“M”, 到文本 (键状态), “.”, 到文本 (横坐标), “.”, 到文本 (纵坐标), “.”, 到文本 (延时时间), “.”, “1.”))
            输出调试文本 (相加 (“M”, 到文本 (键状态), “.”, 到文本 (横坐标), “.”, 到文本 (纵坐标), “.”, 到文本 (延时时间), “.”, “1.”))
            
        .如果真结束
        
    .否则
        加入记录 (相加 (“M”, 到文本 (键状态), “.”, 到文本 (横坐标), “.”, 到文本 (纵坐标), “.”, 到文本 (延时时间), “.”, “1.”))
        输出调试文本 (相加 (“M”, 到文本 (键状态), “.”, 到文本 (横坐标), “.”, 到文本 (纵坐标), “.”, 到文本 (延时时间), “.”, “1.”))
    .如果结束
    
.如果真结束


.子程序 加入记录, 空白型, , 
.参数 参数, 文本型, , 

加入成员 (录制记录, 参数)

.子程序 _录制窗口_将被销毁, 空白型, , 
取消键盘监视 ()
取消鼠标监视 ()

.窗口程序集 窗口程序集4, , , 

.程序集变量 类型值, 文本型, , , 
.程序集变量 表项坐标, 坐标, , , 
.程序集变量 i, 整数型, , , 
.程序集变量 匿名程序集变量_1064, 空白型, , , 
.子程序 _超级列表框1_被双击, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (等于 (., -1))
    返回 ()
.如果真结束
赋值 (表项信息.横向, 横向位置)
赋值 (表项信息.纵向, 纵向位置)
取表项结构信息 (取窗口句柄 (), 4153, 0, 表项信息) ' 当前取表项行、列位置
 ' 输出调试文本 (“行：” ＋ 到文本 (表项信息.行))
 ' 输出调试文本 (“列：” ＋ 到文本 (表项信息.列))
 ' 输出调试文本 (“----------------------------------”)


.如果真 (不等于 (表项信息.行, -1))
    赋值 (类型值, .取标题 (., 0))
    .如果真 (不等于 (表项信息.列, 0))
        .如果真 (等于 (类型值, “无”))
            信息框 (“对不起！未选择类型，不能编辑。”, 0, )
            返回 ()
        .如果真结束
        
    .如果真结束
    
    取表项坐标信息 (取窗口句柄 (), 4112, 表项信息.行, 表项坐标) ' 取出当前表项行列坐标点
    
    .如果真 (等于 (类型值, “无”)) ' 键盘
        键盘 ()
    .如果真结束
    .如果真 (等于 (类型值, “鼠标”)) ' 鼠标
        鼠标 ()
    .如果真结束
    .如果真 (等于 (类型值, “键盘”)) ' 键盘
        键盘 ()
    .如果真结束
    
    
.如果真结束



.子程序 鼠标, 空白型, , 
.如果 (或者 (等于 (表项信息.列, 0), 等于 (表项信息.列, 4), 等于 (表项信息.列, 5)))
    表项组合框 ()
.否则
    表项编辑框 ()
.如果结束


.子程序 键盘, 空白型, , 
.如果真 (或者 (等于 (表项信息.列, 2), 等于 (表项信息.列, 3)))
    返回 ()
.如果真结束
.如果 (等于 (表项信息.列, 0))
    表项组合框 ()
.否则
    .如果 (等于 (表项信息.列, 5))
        表项组合框 ()
    .否则
        表项编辑框 ()
    .如果结束
    
.如果结束


.子程序 表项编辑框, 空白型, , 
赋值 (.顶边, 相加 (.加粗, 表项坐标.y, 1))
赋值 (.左边, 相加 (表项坐标.x, .角度))
.如果 (等于 (表项信息.列, 0))
    赋值 (.左边, 相加 (表项坐标.x, .角度))
.否则
    .变量循环首 (1, 表项信息.列, 1, i)
        赋值 (.左边, 相加 (.左边, 相减 (i, 1).取列宽 ()))
    .变量循环尾 ()
.如果结束
赋值 (.宽度, 表项信息.取列宽 (.列))
.如果真 (大于 (相加 (.左边, .宽度), 相加 (.角度, .倾斜)))
    赋值 (.宽度, 相减 (相加 (.角度, .倾斜), .左边))
.如果真结束

赋值 (.内容, 表项信息.取标题 (.行, 表项信息.列))
禁止重画 ()
赋值 (.可视, 真)
高级编辑器.刷新显示 ()
获取焦点 ()
赋值 (.被选择字符数, -1) ' 全选中编辑框中的内容


.子程序 表项组合框, 空白型, , 
添加表项 (表项信息.列, 类型值)
赋值 (.顶边, 相加 (.加粗, 表项坐标.y, 1))
赋值 (.左边, 相加 (表项坐标.x, .角度))
.如果 (等于 (表项信息.列, 0))
    赋值 (.左边, 相加 (表项坐标.x, .角度))
.否则
    .变量循环首 (1, 表项信息.列, 1, i)
        赋值 (.左边, 相加 (.左边, 相减 (i, 1).取列宽 ()))
    .变量循环尾 ()
.如果结束
赋值 (.宽度, 表项信息.取列宽 (.列))
.如果真 (大于 (相加 (.左边, .宽度), 相加 (.角度, .倾斜)))
    赋值 (.宽度, 相减 (相加 (.角度, .倾斜), .左边))
.如果真结束

表项信息.取标题 (.行, 表项信息.列).选择 ()
禁止重画 ()
赋值 (.可视, 真)
刷新显示 ()
获取焦点 ()


.子程序 _按钮1_被单击, 空白型, , 
.局部变量 值, 整数型, , , 
.局部变量 插入位置, 整数型, , , 

.如果真 (不等于 (., -1))
    赋值 (插入位置, 相加 (., 1))
.如果真结束
赋值 (值, 插入位置.插入表项 (“无”, , , , 0))
值.置标题 (1, “0”)
值.置标题 (2, “0”)
值.置标题 (3, “0”)
值.置标题 (4, “无”)
值.置标题 (5, “无”)
值.置标题 (6, “0”)

赋值 (值, 插入位置.插入表项 (0))
值.置标题 (1, “0”)
值.置标题 (2, “0”)
值.置标题 (3, “0”)
值.置标题 (4, “0”)
值.置标题 (5, “0”)
值.置标题 (6, “0”)


.子程序 _按钮5_被单击, 空白型, , 
.局部变量 i, 整数型, , , 
.局部变量 项目文本, 文本型, , "7", 

 ' K1.256.100.  格式：键状态，键代码，延时时间。键盘记录
 ' M4.525.125.252.’格式：键状态，横坐标，纵坐标，延时时间。鼠标记录
.变量循环首 (1, 取表项数 (), 1, i)
    赋值 (项目文本 [1], 相减 (i, 1).取标题 (0))
    赋值 (项目文本 [2], 相减 (i, 1).取标题 (1))
    赋值 (项目文本 [3], 相减 (i, 1).取标题 (2))
    赋值 (项目文本 [4], 相减 (i, 1).取标题 (3))
    赋值 (项目文本 [5], 相减 (i, 1).取标题 (4))
    赋值 (项目文本 [6], 相减 (i, 1).取标题 (5))
    赋值 (项目文本 [7], 相减 (i, 1).取标题 (6))
    
    .如果 (等于 (项目文本 [1], “K”))
        加入记录 (相加 (“K”, 项目文本 [6], “.”, 项目文本 [5], “.”, 项目文本 [2], “.”, 项目文本 [7], “.”))
        输出调试文本 (相加 (“K”, 项目文本 [6], “.”, 项目文本 [5], “.”, 项目文本 [2], “.”, 项目文本 [7], “.”))
    .否则
        加入记录 (相加 (“M”, 项目文本 [6], “.”, 项目文本 [3], “.”, 项目文本 [4], “.”, 项目文本 [2], “.”, 项目文本 [7], “.”))
        输出调试文本 (相加 (“M”, 项目文本 [6], “.”, 项目文本 [3], “.”, 项目文本 [4], “.”, 项目文本 [2], “.”, 项目文本 [7], “.”))
        
    .如果结束
    
.变量循环尾 ()

.如果真 (不等于 (_启动窗口.., -1))
    写记录文件 (文件路径 [相加 (_启动窗口.., 1)])
.如果真结束

销毁 ()


.子程序 添加表项, 空白型, , 
.参数 列, 整数型, , 
.参数 类型, 文本型, , 

清空 ()
.如果真 (或者 (等于 (类型, “无”), 等于 (类型, “键盘”), 等于 (类型, “鼠标”)))
    .如果真 (等于 (列, 0))
        “无”.加入项目 ()
        “鼠标”.加入项目 ()
        “键盘”.加入项目 ()
    .如果真结束
    
.如果真结束
.如果真 (或者 (等于 (类型, “键盘”), 等于 (类型, “鼠标”)))
    .如果真 (等于 (列, 5))
        “按下”.加入项目 ()
        “放开”.加入项目 ()
    .如果真结束
    
.如果真结束
.如果真 (等于 (类型, “鼠标”))
    .如果真 (等于 (列, 4))
        “无(移动鼠标)”.加入项目 ()
        “鼠标左键”.加入项目 ()
        “鼠标右键”.加入项目 ()
    .如果真结束
    
.如果真结束


.子程序 _高级编辑器_创建完毕, 空白型, , 
.局部变量 n, 整数型, , , 
.局部变量 表项位置, 整数型, , , 
.局部变量 记录, 文本型, , "0", 

 ' K1.256.100.‘键盘记录
 ' M125.525.125.252.’鼠标记录
清除数组 (录制记录)
置等待鼠标 ()
.变量循环首 (1, 取数组成员数 (记录文件), 1, n)
    处理事件 ()
    清除数组 (记录)
    .如果真 (等于 (取文本左边 (记录文件 [n], 1), “K”))
        赋值 (记录, 分割文本 (取文本中间 (记录文件 [n], 2, 相减 (取文本长度 (记录文件 [n]), 1)), “.”, ))
        .如果真 (小于 (取数组成员数 (记录), 4))
            到循环尾 ()
        .如果真结束
        .如果真 (或者 (小于 (到数值 (记录 [2]), 1), 大于 (到数值 (记录 [2]), 255)))
            到循环尾 ()
        .如果真结束
        .如果真 (并且 (不等于 (到数值 (记录 [1]), 256), 不等于 (到数值 (记录 [1]), 257)))
            到循环尾 ()
        .如果真结束
        赋值 (表项位置, .插入表项 (“键盘”, , , , ))
        表项位置.置标题 (1, 记录 [3])
        表项位置.置标题 (4, 取键名 (到数值 (记录 [2])))
        .如果真 (等于 (到数值 (记录 [1]), 256))
            表项位置.置标题 (5, “按下”)
        .如果真结束
        .如果真 (等于 (到数值 (记录 [1]), 257))
            表项位置.置标题 (5, “放开”)
        .如果真结束
        .如果真 (小于 (到数值 (记录 [4]), 1))
            赋值 (记录 [4], “1”)
        .如果真结束
        表项位置.置标题 (6, 记录 [4])
        
        赋值 (表项位置, .插入表项 (“K”, , , , ))
        表项位置.置标题 (1, 记录 [3])
        表项位置.置标题 (4, 记录 [2])
        表项位置.置标题 (5, 记录 [1])
        表项位置.置标题 (6, 记录 [4])
        
    .如果真结束
    .如果真 (等于 (取文本左边 (记录文件 [n], 1), “M”))
        赋值 (记录, 分割文本 (取文本中间 (记录文件 [n], 2, 相减 (取文本长度 (记录文件 [n]), 1)), “.”, ))
        .如果真 (小于 (取数组成员数 (记录), 5))
            到循环尾 ()
        .如果真结束
        赋值 (表项位置, .插入表项 (“鼠标”, , , , ))
        表项位置.置标题 (1, 记录 [4])
        表项位置.置标题 (2, 记录 [2])
        表项位置.置标题 (3, 记录 [3])
        .如果真 (小于 (到数值 (记录 [5]), 1))
            赋值 (记录 [5], “1”)
        .如果真结束
        表项位置.置标题 (6, 记录 [5])
        .如果真 (等于 (到数值 (记录 [1]), 0))
            表项位置.置标题 (4, “无(移动鼠标)”)
        .如果真结束
        .如果真 (等于 (到数值 (记录 [1]), 2))
            表项位置.置标题 (4, “鼠标左键”)
            表项位置.置标题 (5, “按下”)
        .如果真结束
        .如果真 (等于 (到数值 (记录 [1]), 4))
            表项位置.置标题 (4, “鼠标左键”)
            表项位置.置标题 (5, “放开”)
        .如果真结束
        .如果真 (等于 (到数值 (记录 [1]), 8))
            表项位置.置标题 (4, “鼠标左键”)
            表项位置.置标题 (5, “按下”)
        .如果真结束
        .如果真 (等于 (到数值 (记录 [1]), 16))
            表项位置.置标题 (4, “鼠标左键”)
            表项位置.置标题 (5, “放开”)
            
        .如果真结束
        
        赋值 (表项位置, .插入表项 (“M”, , , , ))
        表项位置.置标题 (1, 记录 [4])
        表项位置.置标题 (2, 记录 [2])
        表项位置.置标题 (3, 记录 [3])
        表项位置.置标题 (5, 记录 [1])
        表项位置.置标题 (6, 记录 [5])
        
    .如果真结束
    
.变量循环尾 ()
恢复鼠标 ()

.子程序 _按钮2_被单击, 空白型, , 
.如果真 (等于 (., -1))
    返回 ()
.如果真结束
.删除表项 (.)
.删除表项 (.)

.子程序 _按钮3_被单击, 空白型, , 
移动表项 (1)

.子程序 _按钮4_被单击, 空白型, , 
移动表项 (2)

.子程序 移动表项, 空白型, , 
.参数 参数, 整数型, , 

.局部变量 移项, 整数型, , , 
.局部变量 值, 整数型, , , 
.局部变量 取项目文本1, 文本型, , "7", 
.局部变量 取项目文本2, 文本型, , "7", 

重定义数组 (取项目文本1, 假, 7)
赋值 (移项, .)
.如果 (等于 (参数, 1))
    .如果真 (或者 (等于 (移项, -1), 等于 (移项, 0), 等于 (移项, 取表项数 ())))
        返回 ()
    .如果真结束
    
.否则
    .如果真 (或者 (等于 (移项, -1), 等于 (移项, 取表项数 ())))
        返回 ()
    .如果真结束
    
.如果结束

赋值 (取项目文本1 [1], 移项.取标题 (0))
赋值 (取项目文本1 [2], 移项.取标题 (1))
赋值 (取项目文本1 [3], 移项.取标题 (2))
赋值 (取项目文本1 [4], 移项.取标题 (3))
赋值 (取项目文本1 [5], 移项.取标题 (4))
赋值 (取项目文本1 [6], 移项.取标题 (5))
赋值 (取项目文本1 [7], 移项.取标题 (6))
移项.删除表项 ()

赋值 (取项目文本2 [1], 移项.取标题 (0))
赋值 (取项目文本2 [2], 移项.取标题 (1))
赋值 (取项目文本2 [3], 移项.取标题 (2))
赋值 (取项目文本2 [4], 移项.取标题 (3))
赋值 (取项目文本2 [5], 移项.取标题 (4))
赋值 (取项目文本2 [6], 移项.取标题 (5))
赋值 (取项目文本2 [7], 移项.取标题 (6))
移项.删除表项 ()

.如果 (等于 (参数, 1))
    赋值 (移项, 相减 (移项, 1))
.否则
    赋值 (移项, 相加 (移项, 1))
.如果结束

赋值 (值, 移项.插入表项 (取项目文本1 [1], , , , 0))
值.置标题 (1, 取项目文本1 [2])
值.置标题 (2, 取项目文本1 [3])
值.置标题 (3, 取项目文本1 [4])
值.置标题 (4, 取项目文本1 [5])
值.置标题 (5, 取项目文本1 [6])
值.置标题 (6, 取项目文本1 [7])
移项.选择表项 ()
移项.保证显示 ()


赋值 (值, 移项.插入表项 (取项目文本2 [1], , , , 0))
值.置标题 (1, 取项目文本2 [2])
值.置标题 (2, 取项目文本2 [3])
值.置标题 (3, 取项目文本2 [4])
值.置标题 (4, 取项目文本2 [5])
值.置标题 (5, 取项目文本2 [6])
值.置标题 (6, 取项目文本2 [7])


.子程序 _按钮6_被单击, 空白型, , 
销毁 ()

.子程序 _超级列表框1_滚轮被滚动, 逻辑型, , 
.参数 滚动距离, 整数型, , 
.参数 功能键状态, 整数型, , 

_编辑框1_失去焦点 ()

.子程序 _编辑框1_字符输入, 整数型, , 
.参数 字符代码, 整数型, , 

.如果真 (并且 (等于 (表项信息.列, 4), 等于 (.取标题 (., 0), “键盘”)))
    返回 (0)
.如果真结束


.子程序 _编辑框1_放开某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (并且 (等于 (表项信息.列, 4), 等于 (.取标题 (., 0), “键盘”)))
    赋值 (.内容, 取键名 (键代码))
    表项信息.置标题 (.行, 表项信息.列, 到文本 (键代码))
    
.如果真结束

.如果真 (等于 (键代码, #回车键))
    _编辑框1_失去焦点 ()
.如果真结束



.子程序 _编辑框1_失去焦点, 空白型, , 
表项信息.置标题 (.行, 表项信息.列, .内容)
.如果 (并且 (等于 (表项信息.列, 4), 等于 (表项信息.取标题 (.行, 0), “键盘”)))
    
.否则
    表项信息.置标题 (.行, 表项信息.列, .内容)
    
.如果结束

赋值 (.可视, 假)
允许重画 ()
重画 ()

.子程序 _组合框1_失去焦点, 空白型, , 
.局部变量 取项目文本, 文本型, , "2", 

表项信息.置标题 (.行, 表项信息.列, .内容)
 ' 无(移动鼠标)
 ' 鼠标左键
 ' 鼠标右键
 ' 按下
 ' 放开
 ' 键状态 ＝ 2  ' 鼠标左键按下
 ' 键状态 ＝ 4  ' 鼠标左键放开
 ' 键状态 ＝ 8  ' 鼠标右键按下
 ' 键状态 ＝ 16  ' 鼠标右键放开
.如果真 (等于 (表项信息.列, 0))
    赋值 (取项目文本 [1], 表项信息.取标题 (.行, 0))
    .如果真 (等于 (取项目文本 [1], “键盘”))
        表项信息.置标题 (.行, 表项信息.列, “K”)
    .如果真结束
    .如果真 (等于 (取项目文本 [1], “鼠标”))
        表项信息.置标题 (.行, 表项信息.列, “M”)
    .如果真结束
    
.如果真结束

.如果真 (或者 (等于 (表项信息.列, 4), 等于 (表项信息.列, 5)))
    .如果 (等于 (表项信息.取标题 (.行, 0), “键盘”))
        赋值 (取项目文本 [1], 表项信息.取标题 (.行, 5))
        .如果真 (等于 (取项目文本 [1], “按下”))
            表项信息.置标题 (.行, 表项信息.列, “256”)
        .如果真结束
        .如果真 (等于 (取项目文本 [1], “放开”))
            表项信息.置标题 (.行, 表项信息.列, “257”)
            
        .如果真结束
        
    .否则
        赋值 (取项目文本 [1], 表项信息.取标题 (.行, 4))
        赋值 (取项目文本 [2], 表项信息.取标题 (.行, 5))
        .如果真 (等于 (取项目文本 [1], “无(移动鼠标)”))
            表项信息.置标题 (.行, 5, “0”)
        .如果真结束
        .如果真 (并且 (等于 (取项目文本 [1], “鼠标左键”), 等于 (取项目文本 [2], “按下”)))
            表项信息.置标题 (.行, 5, “2”)
        .如果真结束
        .如果真 (并且 (等于 (取项目文本 [1], “鼠标左键”), 等于 (取项目文本 [2], “放开”)))
            表项信息.置标题 (.行, 5, “4”)
        .如果真结束
        .如果真 (并且 (等于 (取项目文本 [1], “鼠标右键”), 等于 (取项目文本 [2], “按下”)))
            表项信息.置标题 (.行, 5, “8”)
        .如果真结束
        .如果真 (并且 (等于 (取项目文本 [1], “鼠标右键”), 等于 (取项目文本 [2], “放开”)))
            表项信息.置标题 (.行, 5, “16”)
        .如果真结束
        
    .如果结束
    
.如果真结束

赋值 (.可视, 假)
允许重画 ()
重画 ()

.子程序 _组合框1_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (等于 (键代码, #回车键))
    _组合框1_失去焦点 ()
.如果真结束


.子程序 _按钮7_被单击, 空白型, , 
全部删除 ()
全部删除 ()


.窗口程序集 窗口程序集5, , , 

.子程序 _超级列表框1_被双击, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 表项坐标, 坐标, , , 
.局部变量 i, 整数型, , , 

.如果真 (等于 (., -1))
    返回 ()
.如果真结束
赋值 (表项信息.横向, 横向位置)
赋值 (表项信息.纵向, 纵向位置)
取表项结构信息 (取窗口句柄 (), 4153, 0, 表项信息) ' 当前取表项行、列位置
.如果真 (不等于 (表项信息.行, -1))
    取表项坐标信息 (取窗口句柄 (), 4112, 表项信息.行, 表项坐标) ' 取出当前表项行列坐标点
    赋值 (.顶边, 相加 (.加粗, 表项坐标.y, 1))
    赋值 (.左边, 相加 (表项坐标.x, .角度, 1))
    .变量循环首 (1, 表项信息.列, 1, i)
        赋值 (.左边, 相加 (.左边, 相减 (i, 1).取列宽 ()))
    .变量循环尾 ()
    赋值 (.宽度, 相减 (表项信息.取列宽 (.列), 1))
    .如果真 (大于 (相加 (.左边, .宽度), 相加 (.角度, .倾斜)))
        赋值 (.宽度, 相减 (相加 (.角度, .倾斜), .左边))
    .如果真结束
    赋值 (.内容, 表项信息.取标题 (.行, 表项信息.列))
    赋值 (.可视, 真)
    映射键表编辑器.刷新显示 ()
    获取焦点 ()
    赋值 (.被选择字符数, -1) ' 全选中编辑框中的内容
.如果真结束


.子程序 _编辑框1_失去焦点, 空白型, , 
表项信息.置标题 (.行, 表项信息.列, .内容)
赋值 (.可视, 假)

.子程序 _映射键表编辑器_创建完毕, 空白型, , 
.局部变量 n, 整数型, , , 
.局部变量 表项位置, 整数型, , , 
.局部变量 记录, 文本型, , "0", 
.局部变量 i, 整数型, , , 

清除数组 (录制记录)
 ' K1.26.‘键盘映射键记录
清除数组 (记录)
置等待鼠标 ()
.变量循环首 (1, 取数组成员数 (记录文件), 1, n)
    .如果真 (等于 (取文本左边 (记录文件 [n], 1), “K”))
        赋值 (记录, 分割文本 (取文本中间 (记录文件 [n], 2, 相减 (取文本长度 (记录文件 [n]), 1)), “.”, ))
        输出调试文本 (取数组成员数 (记录))
        .如果真 (小于 (取数组成员数 (记录), 2))
            到循环尾 ()
        .如果真结束
        .如果真 (或者 (小于 (到数值 (记录 [1]), 1), 大于 (到数值 (记录 [1]), 255), 小于 (到数值 (记录 [2]), 1), 大于 (到数值 (记录 [2]), 255)))
            到循环尾 ()
        .如果真结束
        
        赋值 (表项位置, .插入表项 ())
        赋值 (表项位置, .插入表项 ())
        表项位置.置标题 (0, 取键名 (到数值 (记录 [1])))
        表项位置.置标题 (1, 取键名 (到数值 (记录 [2])))
        
        表项位置.置标题 (0, 记录 [1])
        表项位置.置标题 (1, 记录 [2])
        
    .如果真结束
    
.变量循环尾 ()
恢复鼠标 ()

.子程序 _确定_被单击, 空白型, , 
.局部变量 i, 整数型, , , 
.局部变量 映射键, 文本型, , "2", 

.变量循环首 (1, 取表项数 (), 1, i)
    赋值 (映射键 [1], 相减 (i, 1).取标题 (0))
    赋值 (映射键 [2], 相减 (i, 1).取标题 (1))
    
    .如果真 (等于 (映射键 [1], “”))
        赋值 (映射键 [1], “0”)
    .如果真结束
    .如果真 (等于 (映射键 [2], “”))
        赋值 (映射键 [2], “0”)
    .如果真结束
    
    加入记录 (相加 (“K”, 映射键 [1], “.”, 映射键 [2], “.”))
    输出调试文本 (相加 (“K”, 映射键 [1], “.”, 映射键 [2], “.”))
.变量循环尾 ()

.如果真 (并且 (不等于 (_启动窗口.., -1), 等于 (映射表编辑状态, 真)))
    写记录文件 (文件路径 [相加 (_启动窗口.., 1)])
.如果真结束
销毁 ()

.子程序 _取消_被单击, 空白型, , 
销毁 ()

.子程序 _添加_被单击, 空白型, , 
.局部变量 i, 整数型, , , 
.局部变量 表项位置, 整数型, , , 

赋值 (表项位置, .插入表项 ())
.插入表项 ()
表项位置.选择表项 ()

.子程序 _删除_被单击, 空白型, , 
.删除表项 (.)
.删除表项 (.)


.子程序 _编辑框1_字符输入, 整数型, , 
.参数 字符代码, 整数型, , 

返回 (0)

.子程序 _编辑框1_放开某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.内容, 取键名 (键代码))
表项信息.置标题 (.行, 表项信息.列, 到文本 (键代码))


.子程序 _超级列表框1_滚轮被滚动, 逻辑型, , 
.参数 滚动距离, 整数型, , 
.参数 功能键状态, 整数型, , 

_编辑框1_失去焦点 ()


.子程序 写记录文件, 空白型, , 
.参数 路径, 文本型, , 

.局部变量 i, 整数型, , , 
.局部变量 文本, 文本型, , , 
.局部变量 文件名, 文本型, , , 
.局部变量 数, 整数型, , , 
.局部变量 记录, 文本型, , , 

 ' Edition=1.0.0'版本
 ' SK=F1’快捷键
 ' Type=1‘类型：键盘
 ' TW=1’触发方式
 ' TW1=1’1次数限制,2无限循环
 ' TDT=1000’触发延时时间
 ' ATL=1000‘时间
 ' Explain=测试‘说明
 ' K1.256.100.  格式：键状态，键代码，延时时间。键盘记录
 ' M4.525.125.252.’格式：键状态，横坐标，纵坐标，延时时间。鼠标记录
赋值 (记录, “”)
.变量循环首 (1, 取数组成员数 (录制记录), 1, i)
    赋值 (记录, 相加 (记录, 录制记录 [i], “#”))
.变量循环尾 ()
写配置项 (路径, “MKRSF”, “Edition”, “1.0.0”)
写配置项 (路径, “MKRSF”, “SK”, 到文本 (录制信息.快捷键))
写配置项 (路径, “MKRSF”, “Type”, 到文本 (录制信息.类型))
写配置项 (路径, “MKRSF”, “TW”, 到文本 (录制信息.触发方式))
写配置项 (路径, “MKRSF”, “ATL”, 到文本 (录制信息.录制时间))
写配置项 (路径, “MKRSF”, “Explain”, 到文本 (录制信息.说明))
写配置项 (路径, “MIICLA”, “MK”, 到文本 (记录))

输出调试文本 (记录)

清除数组 (记录文件)
赋值 (记录文件, 分割文本 (记录, “#”, ))

.窗口程序集 窗口程序集6, , , 

.程序集变量 触发方式, 整数型, , , 
.程序集变量 触发配置, 整数型, , , 
.程序集变量 触发延时, 整数型, , , 
.程序集变量 配置次数, 整数型, , , 
.子程序 _属性窗口_创建完毕, 空白型, , 
.局部变量 类型, 整数型, , , 

 ' 1键盘
 ' 2鼠标
 ' 3键盘（映射键）
 ' 4鼠标（只录制击键）
 ' 5游戏手柄
 ' 6键盘+鼠标
 ' 7键盘+鼠标（只录制击键）
 ' 8键盘+游戏手柄
 ' 9鼠标+游戏手柄
 ' 10鼠标（只录制击键）+游戏手柄
 ' 11键盘+鼠标+游戏手柄
 ' 12键盘+鼠标（只录制击键）+游戏手柄
赋值 (类型, 到数值 (读配置项 (文件路径 [相加 (_启动窗口.., 1)], “MKRSF”, “Type”, “-1”)))

.如果真 (等于 (类型, 1))
    赋值 (.选中, 真)
.如果真结束
.如果真 (等于 (类型, 2))
    赋值 (.选中, 真)
.如果真结束
.如果真 (等于 (类型, 3))
    赋值 (.选中, 真)
    赋值 (.选中, 真)
    赋值 (.禁止, 真)
    赋值 (.禁止, 真)
.如果真结束
.如果真 (等于 (类型, 4))
    赋值 (.选中, 真)
    赋值 (.选中, 真)
.如果真结束
.如果真 (等于 (类型, 6))
    赋值 (.选中, 真)
    赋值 (.选中, 真)
.如果真结束
.如果真 (等于 (类型, 7))
    赋值 (.选中, 真)
    赋值 (.选中, 真)
    赋值 (.选中, 真)
    
.如果真结束
_选择框1_被单击 ()
_选择框2_被单击 ()

赋值 (触发方式, 到数值 (读配置项 (文件路径 [相加 (_启动窗口.., 1)], “MKRSF”, “TW”, “-1”)))
赋值 (触发配置, 到数值 (读配置项 (文件路径 [相加 (_启动窗口.., 1)], “MKRSF”, “TW1”, “-1”)))
赋值 (触发延时, 到数值 (读配置项 (文件路径 [相加 (_启动窗口.., 1)], “MKRSF”, “TDT”, “-1”)))
赋值 (配置次数, 到数值 (读配置项 (文件路径 [相加 (_启动窗口.., 1)], “MKRSF”, “TW2”, “-1”)))

.如果真 (等于 (触发方式, -1))
    返回 ()
.如果真结束
.如果真 (等于 (触发配置, -1))
    返回 ()
.如果真结束
.如果真 (等于 (触发延时, -1))
    返回 ()
.如果真结束
赋值 (.现行选中项, 相减 (触发方式, 1))
_组合框1_列表项被选择 ()
 ' .如果真 (等于 (触发方式, 3))
     ' 连续赋值 (真, 单选框1.可视, 单选框2.可视, 编辑框2.可视, 标签6.可视)
.如果真结束
赋值 (.内容, 到文本 (触发延时))
.如果 (等于 (触发配置, 1))
    赋值 (.选中, 真)
.否则
    赋值 (.选中, 真)
.如果结束
赋值 (.内容, 到文本 (配置次数))

.子程序 _按钮1_被单击, 空白型, , 
取类型 ()
写配置项 (文件路径 [相加 (_启动窗口.., 1)], “MKRSF”, “Type”, 到文本 (录制信息.类型))
写配置项 (文件路径 [相加 (_启动窗口.., 1)], “MKRSF”, “TW”, 到文本 (相加 (.现行选中项, 1)))
写配置项 (文件路径 [相加 (_启动窗口.., 1)], “MKRSF”, “TDT”, 到文本 (.内容))
赋值 (录制信息.触发方式, 相加 (.现行选中项, 1))

.如果 (等于 (.选中, 真))
    赋值 (触发配置, 1)
.否则
    赋值 (触发配置, 2)
.如果结束

写配置项 (文件路径 [相加 (_启动窗口.., 1)], “MKRSF”, “TW1”, 到文本 (触发配置))
写配置项 (文件路径 [相加 (_启动窗口.., 1)], “MKRSF”, “TW2”, 到文本 (.内容))

置状态图片 (录制信息.类型)
赋值 (_启动窗口..标题, 操作类型 [录制信息].类型)
赋值 (_启动窗口..标题, 触发方式名 [录制信息].触发方式)

销毁 ()

.子程序 _按钮2_被单击, 空白型, , 
销毁 ()

.子程序 _组合框1_列表项被选择, 空白型, , 
.如果真 (等于 (.现行选中项, 0))
    赋值 (.标题, “普通方式：按下快捷键运行一次”)
.如果真结束
.如果真 (等于 (.现行选中项, 1))
    赋值 (.标题, “连发方式：按下快捷键后循环运行,放开快捷键就停止.”)
.如果真结束
.如果 (等于 (.现行选中项, 2))
    赋值 (.标题, “开关方式：按下快捷键运行一次”)
    连续赋值 (真, .可视, .可视, .可视, .可视)
.否则
    连续赋值 (假, .可视, .可视, .可视, .可视)
    
.如果结束


.子程序 _单选框1_被单击, 空白型, , 
.如果真 (等于 (.选中, 假))
    赋值 (.禁止, 真)
.如果真结束


.子程序 _选择框1_被单击, 空白型, , 
.如果 (等于 (.选中, 真))
    赋值 (.禁止, 假)
.否则
    赋值 (.禁止, 真)
.如果结束


.子程序 _选择框2_被单击, 空白型, , 
.如果 (等于 (.选中, 假))
    赋值 (.禁止, 真)
.否则
    赋值 (.禁止, 假)
.如果结束


.子程序 取类型, 空白型, , 
 ' 1键盘
 ' 2鼠标
 ' 3键盘（映射键）
 ' 4鼠标（只录制击键）
 ' 5游戏手柄
 ' 6键盘+鼠标
 ' 7键盘+鼠标（只录制击键）
 ' 8键盘+游戏手柄
 ' 9鼠标+游戏手柄
 ' 10鼠标（只录制击键）+游戏手柄
 ' 11键盘+鼠标+游戏手柄
 ' 12键盘+鼠标（只录制击键）+游戏手柄
.如果真 (等于 (.选中, 真))
    赋值 (录制信息.类型, 1)
.如果真结束
.如果真 (等于 (.选中, 真))
    赋值 (录制信息.类型, 2)
.如果真结束
.如果真 (等于 (.选中, 真))
    赋值 (录制信息.类型, 3)
.如果真结束
.如果真 (等于 (.选中, 真))
    赋值 (录制信息.类型, 4)
.如果真结束
.如果真 (等于 (.选中, 真))
    赋值 (录制信息.类型, 5)
.如果真结束
.如果真 (并且 (等于 (.选中, 真), 等于 (.选中, 真)))
    赋值 (录制信息.类型, 6)
.如果真结束
.如果真 (并且 (等于 (.选中, 真), 等于 (.选中, 真)))
    赋值 (录制信息.类型, 7)
.如果真结束
.如果真 (并且 (等于 (.选中, 真), 等于 (.选中, 真)))
    赋值 (录制信息.类型, 8)
.如果真结束
.如果真 (并且 (等于 (.选中, 真), 等于 (.选中, 真)))
    赋值 (录制信息.类型, 9)
.如果真结束
.如果真 (并且 (等于 (.选中, 真), 等于 (.选中, 真)))
    赋值 (录制信息.类型, 10)
.如果真结束
.如果真 (并且 (等于 (.选中, 真), 等于 (.选中, 真), 等于 (.选中, 真)))
    赋值 (录制信息.类型, 11)
.如果真结束
.如果真 (并且 (等于 (.选中, 真), 等于 (.选中, 真), 等于 (.选中, 真)))
    赋值 (录制信息.类型, 12)
.如果真结束


.子程序 _选择框5_被单击, 空白型, , 
.如果 (等于 (.选中, 真))
    赋值 (.禁止, 真)
    赋值 (.禁止, 真)
    赋值 (.选中, 假)
    赋值 (.选中, 假)
.否则
    赋值 (.禁止, 假)
    赋值 (.禁止, 假)
    
.如果结束


.窗口程序集 窗口程序集7, , , 

.子程序 _按钮1_被单击, 空白型, , 
销毁 ()



 ' 不属于任何一个程序集、类模块的函数：
