 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 526
    高度 = 433
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “十八罗汉对四天王 v1.0”
    帮助文件名 = “”

窗口 说明窗口
    左边 = 50
    顶边 = 50
    宽度 = 372
    高度 = 239
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 1
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 真
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “说明：”
    帮助文件名 = “”



.常量 罗汉扑克初始顶边, "16", , 
.常量 天王扑克初始顶边, "304", , 
.常量 已出牌左边, "360", , 
.常量 已出牌顶边, "152", , 显示区顶边
.常量 天王出牌左边, "184", , 
.常量 , , , 
.常量 罗汉扑克, "1", , 扑克标记中的类型
.常量 天王扑克, "2", , 扑克标记中的类型
.常量 顺序, "1", , 方式
.常量 花色序, "2", , 方式
.常量 , , , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 4 系统核心支持库
 ' 扑克牌控件 1.0..npk {947D5AD7-54EA-11D3-A81B-00409543161B}##0 1 0 JTechCard 1,{947D5AD7-54EA-11D3-A81B-00409543161B},JTechCard,{1610809350,1610809351,},{1745027072,1745027073,1745027074,1745027075,1745027076,},{1,2,3,4,5,}2,{947D5AD8-54EA-11D3-A81B-00409543161B},Suit,{},{1073741827,1073741826,1073741825,1073741824,},{}2,{947D5AD9-54EA-11D3-A81B-00409543161B},Value,{},{1073741837,1073741836,1073741835,1073741834,1073741833,1073741832,1073741831,1073741830,1073741829,1073741828,1073741827,1073741826,1073741825,1073741824,},{}2,{947D5ADA-54EA-11D3-A81B-00409543161B},CardBack,{},{1073741836,1073741835,1073741834,1073741833,1073741832,1073741831,1073741830,1073741829,1073741828,1073741827,1073741826,1073741825,1073741824,},{}





.窗口程序集 启动窗口程序集, , , 1:草花,2:方块,3:红心,4:黑桃

.程序集变量 罗汉扑克牌号标记组, 文本型, , "0", {"牌号,花色,类型","牌号,花色,类型",...} 类型：1:罗汉扑克,2:天王扑克
.程序集变量 天王扑克牌号标记组, 文本型, , "0", 牌号在前面是为了排序
.程序集变量 罗汉扑克组, 未知类型0x20001, , "0", 当前扑克组
.程序集变量 罗汉已出牌扑克组, 未知类型0x20001, , "0", 
.程序集变量 天王扑克组, 未知类型0x20001, , "0", 当前扑克组
.程序集变量 天王已出牌扑克组, 未知类型0x20001, , "0", 
.程序集变量 罗汉扑克方式, 整数型, , , 罗汉扑克的类型
.程序集变量 天王扑克方式, 整数型, , , 天王扑克的类型
.程序集变量 当前出牌类型, 整数型, , , 罗汉出牌还是天王出牌，初始为1
.程序集变量 当前扑克标记组, 文本型, , "0", 当前正在选择的扑克数组,"牌号,花色"
.程序集变量 已出扑克标记组, 文本型, , "0", 已经出的扑克数组,"牌号,花色"
.程序集变量 罗汉已出牌左边, 整数型, , , 
.程序集变量 罗汉已出牌顶边, 整数型, , , 
.程序集变量 天王已出牌左边, 整数型, , , 
.程序集变量 天王已出牌顶边, 整数型, , , 
.程序集变量 是否已开始, 逻辑型, , , 
.子程序 __启动窗口_创建完毕, 空白型, , 
子程序_初始化扑克 ()

.子程序 _扑克_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 临时扑克, 未知类型0x20001, , , 
.局部变量 i, 整数型, , , 
.局部变量 临时数组, 文本型, , "0", 排号,花色,类型

赋值 (临时扑克, 取事件组件 ())
.如果真 (等于 (是否已创建 (临时扑克), 假))
    返回 ()
.如果真结束

赋值 (临时数组, 分割文本 (临时扑克., “,”, ))
.判断开始 (并且 (或者 (等于 (临时扑克., #罗汉扑克初始顶边), 等于 (临时扑克., #天王扑克初始顶边)), 等于 (到数值 (临时数组 [3]), 当前出牌类型))) ' 在初始位置，点击后扑克弹出
    赋值 (临时扑克., 相减 (临时扑克., 16))
    加入成员 (当前扑克标记组, 临时扑克.)
.判断 (或者 (等于 (临时扑克., 相减 (#罗汉扑克初始顶边, 16)), 等于 (临时扑克., 相减 (#天王扑克初始顶边, 16)))) ' 扑克已经弹出，点击后复原
    赋值 (临时扑克., 相加 (临时扑克., 16))
    .计次循环首 (取数组成员数 (当前扑克标记组), i) ' 扑克已复原，将它从当前标记组中删除
        .如果真 (等于 (当前扑克标记组 [i], 临时扑克.))
            删除成员 (当前扑克标记组, i, 1)
            跳出循环 ()
        .如果真结束
        
    .计次循环尾 ()
.默认
    
.判断结束
子程序_牌型_判断能否出牌 ()

.子程序 _扑克_鼠标右键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 临时扑克, 未知类型0x20001, , , 
.局部变量 临时数组, 文本型, , "0", 
.局部变量 匿名局部变量_162, 空白型, , , 
.局部变量 扑克组, 未知类型0x20001, , "0", 
.局部变量 方式, 整数型, , , 

赋值 (临时扑克, 取事件组件 ())
.如果真 (等于 (是否已创建 (临时扑克), 假))
    返回 ()
.如果真结束
赋值 (临时数组, 分割文本 (临时扑克., “,”, ))
.判断开始 (等于 (到数值 (临时数组 [3]), #罗汉扑克))
    赋值 (扑克组, 罗汉扑克组)
    子程序_改变方式 (罗汉扑克方式)
    赋值 (方式, 罗汉扑克方式)
    
.判断 (等于 (到数值 (临时数组 [3]), #天王扑克))
    赋值 (扑克组, 天王扑克组)
    子程序_改变方式 (天王扑克方式)
    赋值 (方式, 天王扑克方式)
.默认
    
.判断结束

子程序_方式 (扑克组, 方式)

.子程序 _罗汉出牌按钮_被单击, 空白型, , 
.局部变量 i, 整数型, , , 
.局部变量 j, 整数型, , , 
.局部变量 出牌左边, 整数型, , , 

.如果真 (等于 (子程序_胜负_判断能否出牌 (), 假))
    信息框 (“与对手牌型不一致或者小于对手牌，不能出牌！”, 0, )
    返回 ()
.如果真结束
赋值 (.禁止, 真)
子程序_扑克移动到出牌堆 (天王已出牌扑克组, 天王已出牌左边, 天王已出牌顶边) ' 将天王扑克已出牌移动到出牌堆

子程序_扑克移动到显示区 (罗汉扑克组, 罗汉已出牌扑克组) ' 将罗汉扑克已出牌移动到显示区

.如果真 (等于 (子程序_获胜判断 (), 假))
    子程序_方式 (罗汉扑克组, 罗汉扑克方式)
.如果真结束

赋值 (已出扑克标记组, 当前扑克标记组)
清除数组 (当前扑克标记组)
赋值 (.禁止, 真)
赋值 (.禁止, 真)
赋值 (.禁止, 真)
赋值 (.禁止, 假)
赋值 (当前出牌类型, #天王扑克)

.子程序 _天王出牌按钮_被单击, 空白型, , 
.局部变量 i, 整数型, , , 
.局部变量 j, 整数型, , , 
.局部变量 出牌左边, 整数型, , , 

.如果真 (等于 (子程序_胜负_判断能否出牌 (), 假))
    信息框 (“与对手牌型不一致或者小于对手牌，不能出牌！”, 0, )
    返回 ()
.如果真结束
赋值 (.禁止, 真)
子程序_扑克移动到出牌堆 (罗汉已出牌扑克组, 罗汉已出牌左边, 罗汉已出牌顶边) ' 将罗汉扑克已出牌移动到出牌堆

子程序_扑克移动到显示区 (天王扑克组, 天王已出牌扑克组) ' 将天王扑克已出牌移动到显示区

.如果真 (等于 (子程序_获胜判断 (), 假))
    子程序_方式 (天王扑克组, 天王扑克方式)
.如果真结束

赋值 (已出扑克标记组, 当前扑克标记组)
清除数组 (当前扑克标记组)
赋值 (.禁止, 真)
赋值 (.禁止, 假)
赋值 (.禁止, 真)
赋值 (.禁止, 真)
赋值 (当前出牌类型, #罗汉扑克)

.子程序 _罗汉Pass按钮_被单击, 空白型, , 
子程序_扑克移动到出牌堆 (天王已出牌扑克组, 天王已出牌左边, 天王已出牌顶边) ' 将天王扑克已出牌移动到出牌堆
赋值 (.禁止, 真)
清除数组 (已出扑克标记组)
清除数组 (当前扑克标记组)
赋值 (.禁止, 真)
赋值 (.禁止, 真)
赋值 (.禁止, 真)
赋值 (.禁止, 真)
赋值 (当前出牌类型, #天王扑克)

.子程序 _天王Pass按钮_被单击, 空白型, , 
子程序_扑克移动到出牌堆 (罗汉已出牌扑克组, 罗汉已出牌左边, 罗汉已出牌顶边) ' 将罗汉扑克已出牌移动到出牌堆
赋值 (.禁止, 真)
清除数组 (已出扑克标记组)
清除数组 (当前扑克标记组)
赋值 (.禁止, 真)
赋值 (.禁止, 真)
赋值 (.禁止, 真)
赋值 (.禁止, 真)
赋值 (当前出牌类型, #罗汉扑克)

.子程序 _重新开始按钮_被单击, 空白型, , 
.局部变量 i, 整数型, , , 

子程序_销毁扑克 (罗汉扑克组)
子程序_销毁扑克 (天王扑克组)
子程序_销毁扑克 (罗汉已出牌扑克组)
子程序_销毁扑克 (天王已出牌扑克组)
连续赋值 (真, .禁止, .禁止, .禁止, .禁止)
子程序_初始化扑克 ()

.子程序 _说明按钮_被单击, 空白型, , 
载入 (说明窗口, , 假)

.子程序 _我的牌型组合框_列表项被选择, 空白型, , 
赋值 (.禁止, 真)
赋值 (.禁止, 真)
赋值 (.禁止, 真)
赋值 (.禁止, 真)
.判断开始 (等于 (当前出牌类型, #罗汉扑克))
    子程序_扑克弹出复原 (天王扑克组, #天王扑克初始顶边)
.判断 (等于 (当前出牌类型, #天王扑克))
    子程序_扑克弹出复原 (罗汉扑克组, #罗汉扑克初始顶边)
.默认
    
.判断结束
清除数组 (当前扑克标记组)
清除数组 (已出扑克标记组)

.子程序 子程序_初始化扑克, 空白型, , 
.局部变量 i, 整数型, , , 
.局部变量 临时数组, 文本型, , "0", 排号,花色,类型

连续赋值 (1, 罗汉扑克方式, 天王扑克方式, 当前出牌类型)
赋值 (罗汉已出牌左边, #已出牌左边)
赋值 (天王已出牌左边, #已出牌左边)
赋值 (罗汉已出牌顶边, #罗汉扑克初始顶边)
赋值 (天王已出牌顶边, #天王扑克初始顶边)
清除数组 (当前扑克标记组)
清除数组 (已出扑克标记组)
赋值 (.禁止, 假)

赋值 (罗汉扑克牌号标记组, { “3,3,1”, “4,1,1”, “4,4,1”, “5,3,1”, “5,4,1”, “6,2,1”, “6,4,1”, “7,1,1”, “7,3,1”, “9,2,1”, “9,3,1”, “12,1,1”, “12,2,1”, “12,4,1”, “13,1,1”, “13,2,1”, “13,4,1”, “2,2,1” })
赋值 (天王扑克牌号标记组, { “1,1,2”, “1,2,2”, “10,1,2”, “10,2,2” })

重定义数组 (罗汉扑克组, 假, 取数组成员数 (罗汉扑克牌号标记组))
.计次循环首 (取数组成员数 (罗汉扑克牌号标记组), i)
    复制窗口组件 (罗汉扑克组 [i])
    赋值 (罗汉扑克组 [i], , 真)
    .如果真 (大于 (i, 1))
        罗汉扑克组.移动 ( [i], 相加 (罗汉扑克组 [相减 (i, 1)]., 16), , , )
    .如果真结束
    赋值 (罗汉扑克组 [i], , 罗汉扑克牌号标记组 [i])
    赋值 (临时数组, 分割文本 (罗汉扑克牌号标记组 [i], “,”, ))
    赋值 (罗汉扑克组 [i], , 到数值 (临时数组 [1]))
    赋值 (罗汉扑克组 [i], , 到数值 (临时数组 [2]))
.计次循环尾 ()
子程序_方式 (罗汉扑克组, #顺序)

重定义数组 (天王扑克组, 假, 取数组成员数 (天王扑克牌号标记组))
.计次循环首 (取数组成员数 (天王扑克牌号标记组), i)
    复制窗口组件 (天王扑克组 [i])
    赋值 (天王扑克组 [i], , 真)
    .如果 (大于 (i, 1))
        天王扑克组.移动 ( [i], 相加 (天王扑克组 [相减 (i, 1)]., 16), #天王扑克初始顶边, , )
    .否则
        天王扑克组.移动 ( [i], , #天王扑克初始顶边, , )
    .如果结束
    赋值 (天王扑克组 [i], , 天王扑克牌号标记组 [i])
    赋值 (临时数组, 分割文本 (天王扑克牌号标记组 [i], “,”, ))
    赋值 (天王扑克组 [i], , 到数值 (临时数组 [1]))
    赋值 (天王扑克组 [i], , 到数值 (临时数组 [2]))
.计次循环尾 ()
子程序_方式 (天王扑克组, #顺序)

.子程序 子程序_改变方式, 空白型, , 改变扑克方式为顺序还是花色序
.参数 方式, 整数型, 参考, 

.判断开始 (等于 (方式, #顺序))
    赋值 (方式, #花色序)
.判断 (等于 (方式, #花色序))
    赋值 (方式, #顺序)
.默认
    
.判断结束


.子程序 子程序_方式, 空白型, , 
.参数 扑克组, 未知类型0x20001, 参考 数组, 
.参数 方式, 整数型, , 1:顺序,2:花色序

.局部变量 临时数组i, 文本型, , "0", 牌号,花色,类型
.局部变量 临时数组j, 文本型, , "0", 
.局部变量 i, 整数型, , , 
.局部变量 j, 整数型, , , 
.局部变量 临时扑克, 未知类型0x20001, , , 
.局部变量 扑克位置, 整数型, , , 换的只是扑克左边位置

.判断开始 (等于 (方式, #花色序))
    .计次循环首 (取数组成员数 (扑克组), i) ' 冒泡排序
        .计次循环首 (相减 (取数组成员数 (扑克组), i), j)
            赋值 (临时数组i, 分割文本 (扑克组 [i], , “,”, ))
            赋值 (临时数组j, 分割文本 (扑克组 [相加 (i, j)]., “,”, ))
             ' 2变成14
            赋值 (临时数组i [1], 选择 (等于 (到数值 (临时数组i [1]), 2), “14”, 临时数组i [1]))
            赋值 (临时数组j [1], 选择 (等于 (到数值 (临时数组j [1]), 2), “14”, 临时数组j [1]))
             ' 1变成13
            赋值 (临时数组i [1], 选择 (等于 (到数值 (临时数组i [1]), 1), “13”, 临时数组i [1]))
            赋值 (临时数组j [1], 选择 (等于 (到数值 (临时数组j [1]), 1), “13”, 临时数组j [1]))
             ' 方块变成0
            赋值 (临时数组i [2], 选择 (等于 (到数值 (临时数组i [2]), 2), “0”, 临时数组i [2]))
            赋值 (临时数组j [2], 选择 (等于 (到数值 (临时数组j [2]), 2), “0”, 临时数组j [2]))
            
            .如果真 (或者 (小于 (到数值 (临时数组i [2]), 到数值 (临时数组j [2])), 并且 (等于 (到数值 (临时数组i [2]), 到数值 (临时数组j [2])), 大于 (到数值 (临时数组i [1]), 到数值 (临时数组j [1]))))) ' 左→右 = 大→小
                 ' 置换条件：
                 ' 1：花色小
                 ' 2：花色等 且 牌号大
                
                 ' 扑克换数组位置
                赋值 (临时扑克, 扑克组 [i])
                赋值 (扑克组 [i], 扑克组 [相加 (i, j)])
                赋值 (扑克组 [相加 (i, j)], 临时扑克)
            .如果真结束
            
        .计次循环尾 ()
    .计次循环尾 ()
    
    赋值 (扑克组 [1]., 0) ' 排列位置
    .计次循环首 (相减 (取数组成员数 (扑克组), 1), i)
        赋值 (扑克组 [相加 (i, 1)]., 相加 (扑克组 [i], , 16))
        扑克组.调整层次 ( [相加 (i, 1)], #顶层)
    .计次循环尾 ()
    
.判断 (等于 (方式, #顺序)) ' 变成顺序
    .计次循环首 (取数组成员数 (扑克组), i) ' 冒泡排序
        .计次循环首 (相减 (取数组成员数 (扑克组), i), j)
            赋值 (临时数组i, 分割文本 (扑克组 [i], , “,”, ))
            赋值 (临时数组j, 分割文本 (扑克组 [相加 (i, j)]., “,”, ))
             ' 2变成14
            赋值 (临时数组i [1], 选择 (等于 (到数值 (临时数组i [1]), 2), “14”, 临时数组i [1]))
            赋值 (临时数组j [1], 选择 (等于 (到数值 (临时数组j [1]), 2), “14”, 临时数组j [1]))
             ' 1变成13
            赋值 (临时数组i [1], 选择 (等于 (到数值 (临时数组i [1]), 1), “13”, 临时数组i [1]))
            赋值 (临时数组j [1], 选择 (等于 (到数值 (临时数组j [1]), 1), “13”, 临时数组j [1]))
            
            .如果真 (或者 (小于 (到数值 (临时数组i [1]), 到数值 (临时数组j [1])), 并且 (等于 (到数值 (临时数组i [1]), 到数值 (临时数组j [1])), 大于 (到数值 (临时数组i [2]), 到数值 (临时数组j [2]))))) ' 左→右 = 大→小
                 ' 置换条件：
                 ' 1：牌号小
                 ' 2：牌号等 且 花色大
                
                 ' 扑克换数组位置
                
                赋值 (临时扑克, 扑克组 [i])
                赋值 (扑克组 [i], 扑克组 [相加 (i, j)])
                赋值 (扑克组 [相加 (i, j)], 临时扑克)
            .如果真结束
            
        .计次循环尾 ()
    .计次循环尾 ()
    
    赋值 (扑克组 [1]., 0) ' 排列位置
    .计次循环首 (相减 (取数组成员数 (扑克组), 1), i)
        赋值 (扑克组 [相加 (i, 1)]., 相加 (扑克组 [i], , 16))
        扑克组.调整层次 ( [相加 (i, 1)], #顶层)
    .计次循环尾 ()
.默认
    
.判断结束


.子程序 子程序_牌型_判断能否出牌, 空白型, , 只判断当前牌型能否出牌
.局部变量 是否能出牌, 逻辑型, , , 
.局部变量 数组数量, 整数型, , , 
.局部变量 临时数组1, 文本型, , "0", 
.局部变量 临时数组2, 文本型, , "0", 
.局部变量 临时数组3, 文本型, , "0", 
.局部变量 临时数组4, 文本型, , "0", 
.局部变量 临时数组5, 文本型, , "0", 

 ' 出牌条件:
 ' 2最大，3最小，可出：单张、对子、三张、三张带单对，顺子5张、乱同花5张
 ' 不可出：连对、姐妹对、3张带单张、3张带多张、3张不带对、3张带多对
赋值 (数组数量, 取数组成员数 (当前扑克标记组))

.判断开始 (等于 (数组数量, 1)) ' 单张
    赋值 (是否能出牌, 真)
.判断 (等于 (数组数量, 2)) ' 对子
    赋值 (临时数组1, 分割文本 (当前扑克标记组 [1], “,”, ))
    赋值 (临时数组2, 分割文本 (当前扑克标记组 [2], “,”, ))
    
    .如果真 (等于 (到数值 (临时数组1 [1]), 到数值 (临时数组2 [1])))
        赋值 (是否能出牌, 真)
    .如果真结束
    
.判断 (等于 (数组数量, 3)) ' 3张
    赋值 (临时数组1, 分割文本 (当前扑克标记组 [1], “,”, ))
    赋值 (临时数组2, 分割文本 (当前扑克标记组 [2], “,”, ))
    赋值 (临时数组3, 分割文本 (当前扑克标记组 [3], “,”, ))
    .如果真 (并且 (等于 (到数值 (临时数组1 [1]), 到数值 (临时数组2 [1])), 等于 (到数值 (临时数组1 [1]), 到数值 (临时数组3 [1])), 等于 (到数值 (临时数组2 [1]), 到数值 (临时数组3 [1]))))
        赋值 (是否能出牌, 真)
    .如果真结束
    
.判断 (等于 (数组数量, 5))
    赋值 (临时数组1, 分割文本 (当前扑克标记组 [1], “,”, ))
    赋值 (临时数组2, 分割文本 (当前扑克标记组 [2], “,”, ))
    赋值 (临时数组3, 分割文本 (当前扑克标记组 [3], “,”, ))
    赋值 (临时数组4, 分割文本 (当前扑克标记组 [4], “,”, ))
    赋值 (临时数组5, 分割文本 (当前扑克标记组 [5], “,”, ))
    数组排序 (当前扑克标记组, 真)
    .判断开始 (并且 (等于 (到数值 (临时数组1 [1]), 到数值 (临时数组2 [1])), 等于 (到数值 (临时数组1 [1]), 到数值 (临时数组3 [1])), 等于 (到数值 (临时数组4 [1]), 到数值 (临时数组5 [1])))) ' 判断 (到数值 (临时数组1 [1]) ＝ 到数值 (临时数组2 [1]) 且 到数值 (临时数组1 [1]) ＝ 到数值 (临时数组3 [1]) 且 到数值 (临时数组4 [1]) ＝ 到数值 (临时数组5 [1]))
         ' 牌型：11122
         ' 三张带单对
        赋值 (是否能出牌, 真)
    .判断 (并且 (等于 (到数值 (临时数组3 [1]), 到数值 (临时数组4 [1])), 等于 (到数值 (临时数组3 [1]), 到数值 (临时数组5 [1])), 等于 (到数值 (临时数组1 [1]), 到数值 (临时数组2 [1]))))
         ' 牌型：11222
         ' 三张带单对
        赋值 (是否能出牌, 真)
    .判断 (并且 (等于 (到数值 (临时数组1 [1]), 相减 (到数值 (临时数组2 [1]), 1)), 等于 (到数值 (临时数组2 [1]), 相减 (到数值 (临时数组3 [1]), 1)), 等于 (到数值 (临时数组3 [1]), 相减 (到数值 (临时数组4 [1]), 1)), 等于 (到数值 (临时数组4 [1]), 相减 (到数值 (临时数组5 [1]), 1))))
         ' 顺子5张
        赋值 (是否能出牌, 真)
    .判断 (并且 (等于 (到数值 (临时数组1 [2]), 到数值 (临时数组2 [2])), 等于 (到数值 (临时数组1 [2]), 到数值 (临时数组3 [2])), 等于 (到数值 (临时数组1 [2]), 到数值 (临时数组4 [2])), 等于 (到数值 (临时数组1 [2]), 到数值 (临时数组5 [2]))))
         ' 乱同花5张
        赋值 (是否能出牌, 真)
    .默认
        
    .判断结束
    
.默认
    
.判断结束


.如果真 (等于 (当前出牌类型, #罗汉扑克))
    赋值 (.禁止, 真)
    赋值 (.禁止, 取反 (是否能出牌))
.如果真结束
.如果真 (等于 (当前出牌类型, #天王扑克))
    赋值 (.禁止, 真)
    赋值 (.禁止, 取反 (是否能出牌))
.如果真结束


.子程序 子程序_胜负_判断能否出牌, 逻辑型, , 判断出的牌能否和对手匹配或大于对手牌
.局部变量 当前出牌数量, 整数型, , , 
.局部变量 已出牌数量, 整数型, , , 
.局部变量 当前出牌数组1, 文本型, , "0", 
.局部变量 已出牌数组1, 文本型, , "0", 

.如果真 (等于 (取数组成员数 (已出扑克标记组), 0)) ' 第一次出牌
    返回 (真)
.如果真结束

赋值 (当前出牌数量, 取数组成员数 (当前扑克标记组))
赋值 (已出牌数量, 取数组成员数 (已出扑克标记组))
.判断开始 (或者 (并且 (等于 (当前出牌数量, 1), 等于 (已出牌数量, 1)), 并且 (等于 (当前出牌数量, 2), 等于 (已出牌数量, 2)))) ' 单张 ' 对子
    赋值 (当前出牌数组1, 分割文本 (当前扑克标记组 [1], “,”, ))
    赋值 (已出牌数组1, 分割文本 (已出扑克标记组 [1], “,”, ))
     ' 2变成14
    赋值 (当前出牌数组1 [1], 选择 (等于 (到数值 (当前出牌数组1 [1]), 2), “14”, 当前出牌数组1 [1]))
    赋值 (已出牌数组1 [1], 选择 (等于 (到数值 (已出牌数组1 [1]), 2), “14”, 已出牌数组1 [1]))
     ' 1变成13
    赋值 (当前出牌数组1 [1], 选择 (等于 (到数值 (当前出牌数组1 [1]), 1), “13”, 当前出牌数组1 [1]))
    赋值 (已出牌数组1 [1], 选择 (等于 (到数值 (已出牌数组1 [1]), 1), “13”, 已出牌数组1 [1]))
    返回 (大于 (到数值 (当前出牌数组1 [1]), 到数值 (已出牌数组1 [1])))
.默认
    
     ' 四天王只有单张或对子，所以不判断其他排型
.判断结束
返回 (假)

.子程序 子程序_获胜判断, 逻辑型, , 
.判断开始 (等于 (取数组成员数 (罗汉扑克组), 0))
    信息框 (“十八罗汉获胜！”, 0, )
    返回 (真)
.判断 (等于 (取数组成员数 (天王扑克组), 0))
    信息框 (“四天王获胜！”, 0, )
    返回 (真)
.默认
    
.判断结束
返回 (假)


.子程序 子程序_扑克移动到出牌堆, 空白型, , 
.参数 已出牌扑克组, 未知类型0x20001, 参考 数组, 
.参数 已出牌左边, 整数型, 参考, 
.参数 已出牌顶边, 整数型, 参考, 

.局部变量 i, 整数型, , , 
.局部变量 j, 整数型, , , 

.如果真 (大于 (取数组成员数 (已出扑克标记组), 0))
    .计次循环首 (取数组成员数 (已出扑克标记组), i)
        .计次循环首 (取数组成员数 (已出牌扑克组), j) ' 将扑克已出牌移动到出牌堆
            .如果真 (等于 (已出扑克标记组 [i], 已出牌扑克组 [j], ))
                已出牌扑克组.移动 ( [j], 已出牌左边, 已出牌顶边, , )
                赋值 (已出牌左边, 相加 (已出牌左边, 16))
                已出牌扑克组.调整层次 ( [j], #顶层)
                .如果真 (大于 (已出牌左边, 相加 (#已出牌左边, 相乘 (16, 5))))
                    赋值 (已出牌左边, #已出牌左边)
                    .判断开始 (等于 (当前出牌类型, #罗汉扑克))
                        赋值 (已出牌顶边, 相减 (已出牌顶边, 32))
                    .默认
                        赋值 (已出牌顶边, 相加 (已出牌顶边, 32))
                    .判断结束
                    
                .如果真结束
                跳出循环 ()
            .如果真结束
            
        .计次循环尾 ()
    .计次循环尾 ()
.如果真结束


.子程序 子程序_扑克移动到显示区, 空白型, , 
.参数 扑克组, 未知类型0x20001, 参考 数组, 
.参数 已出牌扑克组, 未知类型0x20001, 参考 数组, 

.局部变量 i, 整数型, , , 
.局部变量 j, 整数型, , , 
.局部变量 出牌左边, 整数型, , , 

.计次循环首 (取数组成员数 (当前扑克标记组), i)
    .计次循环首 (取数组成员数 (扑克组), j) ' 将扑克已出牌移动到显示区
        .如果真 (等于 (当前扑克标记组 [i], 扑克组 [j], ))
            扑克组.移动 ( [j], 出牌左边, #已出牌顶边, , )
            加入成员 (已出牌扑克组, 扑克组 [j])
            删除成员 (扑克组, j, 1)
            跳出循环 ()
        .如果真结束
        
    .计次循环尾 ()
    赋值 (出牌左边, 相加 (出牌左边, 16))
.计次循环尾 ()


.子程序 子程序_销毁扑克, 空白型, , 
.参数 扑克组, 未知类型0x20001, 参考 数组, 

.局部变量 i, 整数型, , , 

.计次循环首 (取数组成员数 (扑克组), i)
    .如果真 (等于 (是否已创建 (扑克组 [i]), 真))
        扑克组.销毁 ( [i])
    .如果真结束
    
.计次循环尾 ()
清除数组 (扑克组)

.子程序 子程序_扑克弹出复原, 空白型, , 
.参数 扑克组, 未知类型0x20001, 参考 数组, 
.参数 初始高度, 整数型, , 

.局部变量 i, 整数型, , , 

.计次循环首 (取数组成员数 (扑克组), i)
    .如果真 (等于 (是否已创建 (扑克组 [i]), 真))
        赋值 (扑克组 [i], , 初始高度)
    .如果真结束
    
.计次循环尾 ()


.窗口程序集 说明窗口程序集, , , 

.子程序 _说明窗口_创建完毕, 空白型, , 


.子程序 _说明窗口_尺寸被改变, 空白型, , 
.移动 (取用户区宽度 (), 取用户区高度 ())


 ' 不属于任何一个程序集、类模块的函数：
