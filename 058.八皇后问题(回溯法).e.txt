 ' 文件类型：Windows窗口程序

 ' 程序名称：易语言经典算法 - 皇后问题(回溯法)
 ' 程序描述：国际象棋中皇后可以攻击所在行，列，斜线上的每一个位置，按照此规则要在一个n*n的棋盘上放n个皇后使每一个皇后都不互相攻击。
 ' 程序作者：大有吴涛易语言软件公司
 ' 邮政编码：116001
 ' 联系地址：辽宁省大连市中山区人民路55号亚太国际金融中心
 ' 联系电话：+86(0411)88995831
 ' 传真号码：+86(0411)88995834
 ' 电子信箱：service@dywt.com.cn
 ' 主页地址：http://www.dywt.com.cn
 ' 版权声明：祝您一帆风顺，心想事成！
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 425
    高度 = 327
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 真
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “易语言经典算法 - 皇后问题(回溯法)”
    帮助文件名 = “”





 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 4 系统核心支持库
 ' iext3 {B6F7542F-B8FE-46a8-9605-98856A687097} 2 0 扩展界面支持库三
 ' iext 27bb20fdd3e145e4bee3db39ddd6e64c 1 2 扩展界面支持库一





.窗口程序集 启动窗口程序集, , , 

.程序集变量 皇后位置数组, 整数型, , "0", 如：皇后位置数组[j]=4，表示第j列，第皇后位置数组[j]行有皇后
.程序集变量 行数组, 整数型, , "0", 行数组[k]=1,表示第k行没有皇后
.程序集变量 右高左低数组, 整数型, , "0", 右高左低数组[k]=1,表示第k条右高左低的斜线上没有皇后
.程序集变量 左高右低数组, 整数型, , "0", 左高右低数组[k]=1,表示第k条左高右低的斜线上没有皇后
.程序集变量 棋盘行列值, 整数型, , , 棋盘规模变量
.程序集变量 存储结果数组, 文本型, , "0", 存储N后问题的所有解
.子程序 __启动窗口_创建完毕, 空白型, , 
 ' 使用算法：回溯法
 ' 问题：N后问题
 ' 问题描述：
 ' 国际象棋中皇后可以攻击所在行，列，斜线上的每一个位置，按照此规则要在一个n*n的棋盘上放n个皇后使每一个皇后都不互相攻击
 ' 问题分析：
 ' 回溯法：也称试探法，该方法首先暂时放弃关于问题大小的限制，并将问题的候选解按某种顺序逐一枚举和检验。
 ' '       当发现当前候选解不可能是解时，就选择下一个候选解。
 ' '       倘若当前候选解除了还不满足问题的规模要求外，满足所有其他要求时，继续扩大当前被选解的规模，继续试探。
 ' '       如果当前候选解满足包括问题规模在内的所有要求时，该候选解就是问题的一个解。
 ' '       在回溯法中，放弃当前候选解，寻找下一个候选解的过程称为回溯；扩大候选解的规模，并继续试探的过程称为向前试探。
 ' (1) 引入1个数组模拟棋盘上皇后的位置：
 ' 皇后位置数组[j]=4，表示第j列，第“皇后位置数组[j]”行有皇后。
 ' (2)引入3个工作数组：
 ' 行数组[k]=1,表示第k行没有皇后，
 ' 右高左低数组[k]=1，表示第k条右高左低的斜线上没有皇后；
 ' 左高右低数组[k]=1，表示第k条左高右低的斜线上没有皇后。
 ' (3)观察棋盘找到规律：
 ' 同一右高左低的斜线上的方格，它们的行号和列号之和相等；
 ' 同一左高右低的斜线上的方格，它们的行号和列号只差相等；
 ' 开始时，所有行和斜线上都没有皇后，从第一列的第一行配置第一个皇后开始，在第m列的皇后位置数组[m]行放置了一个合理的皇后之后，准备考察第m+1列时，在数组 行数组[]，右高左低数组[]，左高右低数组[]中为第m列，皇后位置数组[m]的位置设定有皇后标志。
 ' 如果按此放置位置得不到结果，则把当前列中的有皇后标记改为无皇后标记。
 ' (4)依次类推：
 ' 当在棋盘最后一列上也找到合适的位置后得到结果。
 ' 继续试探找到下一个解。
 ' 通过上面规律可以推导出结果。
 ' 备注：

.子程序 __启动窗口_尺寸被改变, 空白型, , 
赋值 (.宽度, _启动窗口.宽度)
赋值 (., 相减 (_启动窗口.宽度, 6))
赋值 (., 相减 (_启动窗口.高度, 25))
赋值 (.宽度, 相减 (., 16))
赋值 (.高度, 相减 (., 43))
赋值 (.宽度, .宽度)
赋值 (.高度, .高度)
赋值 (.宽度, .宽度)
赋值 (.高度, .高度)
赋值 (., 相减 (.宽度, 184))
赋值 (., 相减 (.高度, 33))
赋值 (., 相减 (.高度, 103))
赋值 (.顶边, 相加 (., ., 5))

.子程序 _计算图形按钮_被单击, 空白型, , 
.局部变量 局部计次变量, 整数型, , , 在计次循环中记录循环次数
.局部变量 返回值, 整数型, , , 返回是否放置所有皇后成功

 ' 清空列表框
.计次循环首 (取列数 (), )
    0.删除列 ()
.计次循环尾 ()
.计次循环首 (取表项数 (), )
    0.删除表项 ()
.计次循环尾 ()
全部删除 ()
 ' 获得输入棋盘规模数据
赋值 (棋盘行列值, 到数值 (.内容))
 ' 如果输入的棋盘规模过大提示是否等待
.如果真 (小于 (棋盘行列值, 1)) ' 棋盘不能为0或负数
    赋值 (.内容, “4”)
    返回 ()
.如果真结束
.如果真 (大于 (棋盘行列值, 18))
    .如果真 (不等于 (信息框 (“您输入的数值过大，处理数据时程序将会有一段时间无响应，是否继续？”, 相加 (#是否钮, #询问图标), “请问：”), #是钮))
         ' 如果不想等待很长时间则返回
        返回 ()
    .如果真结束
    
.如果真结束
 ' 根据的到值定义棋盘行列，定义相关两斜行的值
重定义数组 (行数组, 假, 棋盘行列值)
重定义数组 (右高左低数组, 假, 相乘 (2, 棋盘行列值))
重定义数组 (左高右低数组, 假, 相乘 (2, 棋盘行列值))
重定义数组 (皇后位置数组, 假, 棋盘行列值)
清除数组 (存储结果数组)
 ' 行数组 [1]=1，表示第1行没有皇后
.计次循环首 (棋盘行列值, 局部计次变量)
    赋值 (行数组 [局部计次变量], 1)
.计次循环尾 ()
 ' 右高左低数组[1]=1，表示第1条右高左低的斜线上没有皇后
 ' 左高右低数组[1]=1，表示第1条左高右低的斜线上没有皇后
.计次循环首 (相乘 (2, 棋盘行列值), 局部计次变量)
    赋值 (右高左低数组 [局部计次变量], 1)
    赋值 (左高右低数组 [局部计次变量], 1)
.计次循环尾 ()
 ' 从第一列开始找出合适的放置方法
皇后问题子程序 ()

.子程序 皇后问题子程序, 空白型, , 找所有解子程序
.局部变量 是否合理, 整数型, , , 试探这个位置是否可以放皇后1为可以0为不可以
.局部变量 列号, 整数型, , , 从第一列比较
.局部变量 文本变量, 文本型, , , 
.局部变量 局部计次变量, 整数型, , , 
.局部变量 变量, 整数型, , , 累积得到的结果数

赋值 (列号, 1)
赋值 (是否合理, 1)
赋值 (变量, 1)
赋值 (皇后位置数组 [列号], 1)
赋值 (行数组 [皇后位置数组] [列号], 0)
赋值 (右高左低数组 [相加 (列号, 皇后位置数组 [列号])], 0)
赋值 (左高右低数组 [相减 (相加 (棋盘行列值, 列号), 皇后位置数组 [列号])], 0)
.判断循环首 (大于或等于 (列号, 1)) ' 没有回溯到第一行
    .如果真 (等于 (列号, 0))
        跳出循环 ()
    .如果真结束
    .判断开始 (等于 (是否合理, 1)) ' 找到一个合理的放置方法
        .判断开始 (等于 (列号, 棋盘行列值)) ' 找到一个解
             ' 把结果以文本形式存储在数组中
            赋值 (文本变量, “”)
            .计次循环首 (棋盘行列值, 局部计次变量) ' 把一个结果中每列皇后的位置存储为文本变量
                赋值 (文本变量, 相加 (文本变量, 到文本 (皇后位置数组 [局部计次变量]), “,”))
            .计次循环尾 ()
            加入成员 (存储结果数组, 文本变量) ' 加入到数组中
            .插入表项 (相加 (“第”, 到文本 (变量), “个结果”), , , , ) ' 把这个结果在超级列表框中排号
            .判断开始 (并且 (小于 (棋盘行列值, 11), 等于 (求余数 (变量, 300), 0))) ' 棋盘小于11*11找到300个结果询问是否继续
                .如果真 (不等于 (信息框 (“得到了很多结果，是否继续？”, 相加 (#是否钮, #询问图标), “请问：”), #是钮))
                    返回 ()
                .如果真结束
                
            .判断 (并且 (大于或等于 (棋盘行列值, 11), 小于 (棋盘行列值, 18), 等于 (求余数 (变量, 10), 0))) ' 棋盘大于等于11*11且小于18*18找到10个结果询问是否继续
                .如果真 (不等于 (信息框 (“棋盘规模很大，已经得到了很多结果，是否继续？”, 相加 (#是否钮, #询问图标), “请问：”), #是钮))
                    返回 ()
                .如果真结束
                
            .默认
                .如果真 (并且 (大于或等于 (棋盘行列值, 18), 等于 (求余数 (变量, 1), 0))) ' 规模更大找到一个结果就询问是否继续
                    .如果真 (不等于 (信息框 (“棋盘规模很大，已经得到了一个结果，是否继续？”, 相加 (#是否钮, #询问图标), “请问：”), #是钮))
                        返回 ()
                    .如果真结束
                    
                .如果真结束
                
            .判断结束
            赋值 (变量, 相加 (变量, 1))
            .如果真 (等于 (皇后位置数组 [列号], 棋盘行列值)) ' 已经是最后一行，回到上一行
                赋值 (列号, 相减 (列号, 1)) ' 清除关于“列号-1”列，"皇后位置数组[列号-1]"行有皇后的标志
                赋值 (行数组 [皇后位置数组] [列号], 1)
                赋值 (右高左低数组 [相加 (列号, 皇后位置数组 [列号])], 1)
                赋值 (左高右低数组 [相减 (相加 (棋盘行列值, 列号), 皇后位置数组 [列号])], 1)
                .如果真 (等于 (列号, 0))
                    返回 ()
                .如果真结束
                
            .如果真结束
            赋值 (皇后位置数组 [列号], 相加 (皇后位置数组 [列号], 1)) ' 调整第“列号”列的皇后位置
        .默认
             ' 不是最后一列继续找解
            赋值 (行数组 [皇后位置数组] [列号], 0)
            赋值 (右高左低数组 [相加 (列号, 皇后位置数组 [列号])], 0)
            赋值 (左高右低数组 [相减 (相加 (棋盘行列值, 列号), 皇后位置数组 [列号])], 0)
             ' 把该位置标记为有皇后
            赋值 (列号, 相加 (列号, 1)) ' 试探下一列
            赋值 (皇后位置数组 [列号], 1) ' 从第一行开始
        .判断结束
        
    .默认
         ' 不可以放皇后，回溯
        .如果真 (等于 (皇后位置数组 [列号], 棋盘行列值)) ' 已经是最后一行
            赋值 (列号, 相减 (列号, 1)) ' 清除关于“列号-1”列，"皇后位置数组[列号-1]"行有皇后的标志
            赋值 (行数组 [皇后位置数组] [列号], 1)
            赋值 (右高左低数组 [相加 (列号, 皇后位置数组 [列号])], 1)
            赋值 (左高右低数组 [相减 (相加 (棋盘行列值, 列号), 皇后位置数组 [列号])], 1)
            .如果真 (等于 (列号, 0))
                返回 ()
            .如果真结束
            
        .如果真结束
        赋值 (皇后位置数组 [列号], 相加 (皇后位置数组 [列号], 1))
    .判断结束
    .判断开始 (小于或等于 (皇后位置数组 [列号], 棋盘行列值))
        .判断开始 (并且 (等于 (行数组 [皇后位置数组] [列号], 1), 等于 (右高左低数组 [相加 (列号, 皇后位置数组 [列号])], 1), 等于 (左高右低数组 [相减 (相加 (棋盘行列值, 列号), 皇后位置数组 [列号])], 1)))
            赋值 (是否合理, 1) ' 可以放置皇后
        .默认
            赋值 (是否合理, 0) ' 已经有皇后在行或斜线上
        .判断结束
        
    .默认
        赋值 (列号, 相减 (列号, 1)) ' 清除关于“列号-1”列，"皇后位置数组[列号-1]"行有皇后的标志
        .如果真 (大于 (列号, 0))
            赋值 (行数组 [皇后位置数组] [列号], 1)
            赋值 (右高左低数组 [相加 (列号, 皇后位置数组 [列号])], 1)
            赋值 (左高右低数组 [相减 (相加 (棋盘行列值, 列号), 皇后位置数组 [列号])], 1)
        .如果真结束
        
    .判断结束
    0.置列标题 (相加 (“共”, 到文本 (相减 (变量, 1)), “个结果”))
.判断循环尾 ()

.子程序 _结果超级列表框_被双击, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 棋盘数组, 文本型, , "0", 标记一个结果中皇后在棋盘的位置
.局部变量 选择结果, 整数型, , , 选择的结果编号
.局部变量 行号, 整数型, , , 棋盘坐标
.局部变量 列号, 整数型, , , 棋盘坐标
.局部变量 局部计次变量, 整数型, , , 

 ' 删除上一次显示的结果
.计次循环首 (取列数 (), )
    0.删除列 ()
.计次循环尾 ()
.计次循环首 (取表项数 (), )
    0.删除表项 ()
.计次循环尾 ()
 ' 画棋盘
.计次循环首 (棋盘行列值, 局部计次变量) ' 行数
    .插入表项 (相加 (到文本 (局部计次变量), “|”), , , , )
.计次循环尾 ()
.插入列 (“0”, 24, , , ) ' 列数
.计次循环首 (棋盘行列值, 局部计次变量)
    .插入列 (到文本 (局部计次变量), 24, , , )
.计次循环尾 ()
 ' 显示皇后位置
.如果真 (不等于 (., -1))
    赋值 (选择结果, 相加 (., 1)) ' 根据选择的要看的结果显示皇后位置
    赋值 (棋盘数组, 分割文本 (存储结果数组 [选择结果], , ))
    .计次循环首 (棋盘行列值, 行号)
        .计次循环首 (棋盘行列值, 列号)
            .判断开始 (等于 (行号, 到数值 (棋盘数组 [列号]))) ' 该位置有皇后
                相减 (行号, 1).置标题 (列号, “皇”)
            .默认
                相减 (行号, 1).置标题 (列号, “*”)
            .判断结束
            
        .计次循环尾 ()
    .计次循环尾 ()
.如果真结束



 ' 不属于任何一个程序集、类模块的函数：
