 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 2 0 系统核心支持库
 ' iext 27bb20fdd3e145e4bee3db39ddd6e64c 1 1 扩展界面支持库一



窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 640
    高度 = 500
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “试试您的逻辑推理能力”
    帮助文件名 = “”

窗口 帮助窗口
    左边 = 50
    顶边 = 50
    宽度 = 366
    高度 = 450
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “游戏规则说明”
    帮助文件名 = “”



.常量 未扫描, "1", , 
.常量 已扫描, "2", , 
.常量 背景标志, "3", , 
.常量 假定标志, "4", , 
.常量 排除标志, "5", , 
.常量 被猜球, "9999", , 
.常量 上方, "1", , 
.常量 下方, "2", , 
.常量 左方, "3", , 
.常量 右方, "4", , 
.常量 上左方, "13", , 
.常量 上右方, "14", , 
.常量 下左方, "23", , 
.常量 下右方, "24", , 
.图片 背景单元, " ' 已保存到：D:\易语言学习\Data\猜猜看游戏.e\背景单元", , 
.图片 假定单元, " ' 已保存到：D:\易语言学习\Data\猜猜看游戏.e\假定单元", , 
.图片 猜错单元, " ' 已保存到：D:\易语言学习\Data\猜猜看游戏.e\猜错单元", , 
.图片 猜中单元, " ' 已保存到：D:\易语言学习\Data\猜猜看游戏.e\猜中单元", , 
.图片 排除单元, " ' 已保存到：D:\易语言学习\Data\猜猜看游戏.e\排除单元", , 
.图片 激光单元0, " ' 已保存到：D:\易语言学习\Data\猜猜看游戏.e\激光单元0", , 
.图片 激光单元1, " ' 已保存到：D:\易语言学习\Data\猜猜看游戏.e\激光单元1", , 


数据类型 坐标, , 
    .成员 横向, 整数型, , , 
    .成员 纵向, 整数型, , , 

.全局变量 图片号, 整数型, , "10", 
.全局变量 猜球数, 短整数型, , , 
.全局变量 网格数, 短整数型, , , 
.全局变量 网格图, 短整数型, , "1,1", 存放各单元的标志.0:游戏区外,1:未扫描激光,2:已扫描激光,3:背景,4:假定球,5:排除,6:猜中,7:猜错
.全局变量 扫描图, 整数型, , "1,1", 存放各方向来的激光扫描下一激光走向.每单元4位数字,对应"上下左右"方向,用"1234"表示,"9999"指被猜球所在
.全局变量 折射数, 短整数型, , , 
.全局变量 游戏中, 逻辑型, , , 
.全局变量 假定球数, 短整数型, , , 
.全局变量 游戏结束, 逻辑型, , , 
.全局变量 游戏区, 空白型, , , 

.窗口程序集 窗口程序集1, , , 

.程序集变量 鼠标按键, 空白型, , , 
.子程序 _退出_被选择, 空白型, , 
结束 ()

.子程序 __启动窗口_创建完毕, 空白型, , 
赋值 (猜球数, 4)
赋值 (网格数, 8)
赋值 (图片号 [1], 载入图片 (#激光单元0))
赋值 (图片号 [2], 载入图片 (#激光单元1))
赋值 (图片号 [3], 载入图片 (#背景单元))
赋值 (图片号 [4], 载入图片 (#假定单元))
赋值 (图片号 [5], 载入图片 (#排除单元))
赋值 (图片号 [6], 载入图片 (#猜中单元))
赋值 (图片号 [7], 载入图片 (#猜错单元))
赋值 (游戏中, 假)
置随机数种子 (取启动时间 ())
新游戏开始 ()

.子程序 _FourBalls_被选择, 空白型, , 
.如果真 (不等于 (猜球数, 4))
    赋值 (猜球数, 4)
    赋值 (.选中, 真)
    赋值 (.选中, 假)
    赋值 (.选中, 假)
    新游戏开始 ()
.如果真结束


.子程序 _SixBalls_被选择, 空白型, , 
.如果真 (不等于 (猜球数, 6))
    赋值 (猜球数, 6)
    赋值 (.选中, 假)
    赋值 (.选中, 真)
    赋值 (.选中, 假)
    新游戏开始 ()
.如果真结束


.子程序 _EightBalls_被选择, 空白型, , 
.如果真 (不等于 (猜球数, 8))
    赋值 (猜球数, 8)
    赋值 (.选中, 假)
    赋值 (.选中, 假)
    赋值 (.选中, 真)
    新游戏开始 ()
.如果真结束


.子程序 _EightEight_被选择, 空白型, , 
.如果真 (不等于 (网格数, 8))
    赋值 (网格数, 8)
    赋值 (.选中, 真)
    赋值 (.选中, 假)
    赋值 (.选中, 假)
    新游戏开始 ()
.如果真结束


.子程序 _TenTen_被选择, 空白型, , 
.如果真 (不等于 (网格数, 10))
    赋值 (网格数, 10)
    赋值 (.选中, 假)
    赋值 (.选中, 真)
    赋值 (.选中, 假)
    新游戏开始 ()
.如果真结束


.子程序 _TwelveTwelve_被选择, 空白型, , 
.如果真 (不等于 (网格数, 12))
    赋值 (网格数, 12)
    赋值 (.选中, 假)
    赋值 (.选中, 假)
    赋值 (.选中, 真)
    新游戏开始 ()
.如果真结束


.子程序 _新游戏_被选择, 空白型, , 
新游戏开始 ()

.子程序 _画板1_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 鼠标位置, 坐标, , , 
.局部变量 出口, 坐标, , , 
.局部变量 单元标志, 空白型, , , 
.局部变量 扫描结果, 文本型, , , 

.如果真 (或者 (大于 (.时钟周期, 0), 游戏结束))
    返回 (假)
.如果真结束
赋值 (鼠标位置, 取网格图坐标 (横向位置, 纵向位置))
.如果真 (并且 (大于 (鼠标位置.横向, 0), 大于 (鼠标位置.纵向, 0)))
    赋值 (网格图 [鼠标位置].横向 [鼠标位置].纵向)
    赋值 (扫描结果, “ ”)
    .判断开始 (等于 (单元标志, #未扫描))
         ' 以下为激光单元处理
        赋值 (单元标志, #已扫描)
        赋值 (出口, 未知函数_67174512 (鼠标位置))
        .如果 (或者 (等于 (出口.横向, 0), 等于 (出口.纵向, 0))) ' Hit:击中目标
            赋值 (扫描结果, “H”)
        .否则
            .如果 (并且 (等于 (出口.横向, 鼠标位置.横向), 等于 (出口.纵向, 鼠标位置.纵向))) ' Reflected:反射回来
                赋值 (扫描结果, “R”)
            .否则
                赋值 (扫描结果, “+”)
                赋值 (折射数, 相加 (折射数, 1))
                赋值 (网格图 [出口].横向 [出口].纵向, ) ' 数字:绕道
                更换图片 (出口.横向, 出口.纵向, 扫描结果)
            .如果结束
            
        .如果结束
        
    .判断 (等于 (单元标志, #已扫描))
        赋值 (扫描结果, “-”)
    .判断 (等于 (单元标志, #背景标志))
        赋值 (单元标志, #假定标志)
        赋值 (假定球数, 相加 (假定球数, 1))
    .判断 (等于 (单元标志, #假定标志))
        赋值 (单元标志, #背景标志)
        赋值 (假定球数, 相减 (假定球数, 1))
    .判断 (等于 (单元标志, #排除标志))
        赋值 (单元标志, #背景标志)
    .默认
        
    .判断结束
    .如果真 (大于 (0))
        赋值 (网格图 [鼠标位置].横向 [鼠标位置].纵向, )
        更换图片 (鼠标位置.横向, 鼠标位置.纵向, 扫描结果)
    .如果真结束
    赋值 (游戏中, 真)
.如果真结束
赋值 (鼠标按键, 0)

.子程序 _画板1_鼠标右键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 鼠标, 坐标, , , 
.局部变量 单元标志, 空白型, , , 

.如果真 (或者 (大于 (.时钟周期, 0), 游戏结束))
    返回 (假)
.如果真结束
赋值 (鼠标, 取网格图坐标 (横向位置, 纵向位置))
.如果真 (并且 (大于 (鼠标.横向, 1), 小于 (鼠标.横向, 游戏区), 大于 (鼠标.纵向, 1), 小于 (鼠标.纵向, 游戏区)))
    赋值 (网格图)

.子程序 _画板1_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果 (等于 (.时钟周期, 0))
    赋值 (鼠标按键, #左方)
    赋值 (.时钟周期, 60)
.否则
    游戏完成否 ()
.如果结束


.子程序 _画板1_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果 (等于 (.时钟周期, 0))
    赋值 (鼠标按键, #右方)
    赋值 (.时钟周期, 60)
.否则
    游戏完成否 ()
.如果结束


.子程序 _时钟1_周期事件, 空白型, , 
赋值 (.时钟周期, 0)

.子程序 _画板1_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 鼠标, 坐标, , , 
.局部变量 单元标志, 空白型, , , 

.如果真 (游戏结束)
    返回 (假)
.如果真结束
赋值 (鼠标, 取网格图坐标 (横向位置, 纵向位置))
.如果 (并且 (大于 (鼠标.横向, 1), 小于 (鼠标.横向, 游戏区), 大于 (鼠标.纵向, 1), 小于 (鼠标.纵向, 游戏区), 大于 (鼠标按键, 0)))
    赋值 (单元标志, 网格图 [鼠标].横向 [鼠标].纵向)
    .判断开始 (并且 (等于 (鼠标按键, #左方), 等于 (单元标志, #排除标志)))
        赋值 (单元标志, #背景标志)
    .判断 (并且 (等于 (鼠标按键, #右方), 等于 (单元标志, #背景标志)))
        赋值 (#排除标志)
    .默认
        
    .判断结束
    赋值 (网格图)

.子程序 _游戏说明_被选择, 空白型, , 
载入 (帮助窗口, , 真)

.程序集 游戏程序集, , , 

.程序集变量 原始坐标, 坐标, , , 
.子程序 新游戏开始, 空白型, , 
.局部变量 临时画板, 画板, , , 
.局部变量 单元, 整数型, , , 
.局部变量 单元坐标, 坐标, , , 
.局部变量 i, 空白型, , , 
.局部变量 y, 空白型, , , 
.局部变量 x, 空白型, , , 
.局部变量 xswb, 文本型, , , 
.局部变量 fmtstr, 文本型, , , 

.如果真 (游戏中)
    .如果真 (不等于 (信息框 (“游戏尚未结束, 是否开始新一轮游戏?”, 相加 (#询问图标, #是否钮), “敬告玩家”), #是钮))
        返回 ()
    .如果真结束
    
.如果真结束
连续赋值 (相加 (网格数, 2), 游戏区, i)
赋值 (临时画板, _启动窗口.)
赋值 (原始坐标.横向, 相除 (相减 (临时画板.宽度, 相乘 (30, )), 2))
赋值 (原始坐标.纵向, 相除 (相减 (临时画板.高度, 相乘 (30, )), 2))
临时画板.清除 (0, 0, 临时画板.宽度, 临时画板.高度)
重定义数组 (网格图, 假, i, i)
重定义数组 (扫描图, 假, i, i)
赋值 (折射数, 0)
赋值 (假定球数, 0)
赋值 (游戏中, 假)
赋值 (游戏结束, 假)
.计次循环首 (y)
    .计次循环首 (i, x)
        赋值 (单元坐标.横向, 相加 (原始坐标.横向, 相乘 (30, 相减 (x, 1))))
        赋值 (单元坐标.纵向, 相加 (原始坐标.纵向, 相乘 (30, 相减 (y, 1))))
        赋值 (扫描图 [x] [y], 0)
        .如果 (或者 (并且 (等于 (y, 1), 或者 (等于 (x, 1), 等于 (x, i))), 并且 (等于 (y, i), 或者 (等于 (x, 1), 等于 (x, i)))))
            赋值 (网格图 [x] [y], 0)
        .否则
            .如果 (或者 (等于 (y, 1), 等于 (y, i), 等于 (x, 1), 等于 (x, i)))
                赋值 (单元, 图片号 [1]) ' 激光单元
                赋值 (网格图 [x] [y], 1)
            .否则
                赋值 (单元, 图片号 [3]) ' 其他单元
                赋值 (网格图 [x] [y], 3)
            .如果结束
            
        .如果结束
        .如果真 (大于 (网格图 [x] [y], 0))
            临时画板.画图片 (单元, 单元坐标.横向, 单元坐标.纵向, 30, 30, 1)
        .如果真结束
        
    .计次循环尾 ()
.计次循环尾 ()
 ' 以下随机产生被猜球位置,同时生成路径扫描图
赋值 (i, 1)
.判断循环首 (小于或等于 (i, 猜球数))
    赋值 (x, 取随机数 (0, 相减 (相乘 (网格数, 网格数), 1)))
    赋值 (y, 相加 (求余数 (x, 网格数), 2))
    赋值 (x, 相加 (相除 (x, 网格数), 2))
    .如果真 (不等于 (扫描图 [x] [y], #被猜球))
        赋值 (扫描图 [x] [y], #被猜球)
         ' 以下对被猜球周边位置进行赋值
        检测赋值 (x, y, #上方)
        检测赋值 (x, y, #下方)
        检测赋值 (x, y, #左方)
        检测赋值 (x, y, #右方)
        检测赋值 (x, y, #上左方)
        检测赋值 (x, y, #上右方)
        检测赋值 (x, y, #下左方)
        检测赋值 (x, y, #下右方)
        赋值 (i, 相加 (i, 1))
    .如果真结束
    
.判断循环尾 ()
.如果真 (是否为调试版 ())
    输出调试文本 (“======”)
    .计次循环首 (网格数, )
        赋值 (“”)
        .计次循环首 (网格数, )
            赋值 (fmtstr, 相加 (“000”, 到文本 (扫描图 [相加 (x, 1)] [相加 (y, 1)])))
            赋值 (xswb, 相加 (xswb, 取文本右边 (fmtstr, 4), “,”))
        .计次循环尾 ()
        输出调试文本 ()
    .计次循环尾 ()
.如果真结束
_启动窗口.置文本 (., 0, “新游戏”)

.子程序 检测赋值, 空白型, , 
.参数 横向, 空白型, , 
.参数 纵向, 空白型, , 
.参数 方向, 空白型, , 1:上,2:下,3:左,4:右,13:上左,14:上右,23:下左,24:下右

.局部变量 x, 空白型, , , 
.局部变量 y, 空白型, , , 
.局部变量 值, 空白型, , , 
.局部变量 上次值, 空白型, , , 
.局部变量 上位, 空白型, , , 
.局部变量 下位, 空白型, , , 
.局部变量 左位, 空白型, , , 
.局部变量 右位, 空白型, , , 

赋值 (x, 横向)
赋值 (y, 纵向)
赋值 (值, 1234)
.判断开始 (等于 (方向, #上方))
    赋值 (y, 相减 (y, 1))
.判断 (等于 (方向, #下方))
    赋值 (y, 相加 (y, 1))
.判断 (等于 (方向, #左方))
    赋值 (x, 相减 (x, 1))
.判断 (等于 (方向, #右方))
    赋值 (x, 相加 (x, 1))
.判断 (等于 (方向, #上左方))
    赋值 (y, 相减 (y, 1))
    赋值 (x, 相减 (x, 1))
    赋值 (值, 301)
.判断 (等于 (方向, #上右方))
    赋值 (y, 相减 (y, 1))
    赋值 (x, 相加 (x, 1))
    赋值 (值, 410)
.判断 (等于 (方向, #下左方))
    赋值 (y, 相加 (y, 1))
    赋值 (x, 相减 (x, 1))
    赋值 (值, 3002)
.判断 (等于 (方向, #下右方))
    赋值 (y, 相加 (y, 1))
    赋值 (x, 相加 (x, 1))
    赋值 (值, 4020)
.默认
    
.判断结束
赋值 (上次值, 扫描图 [x] [y])
.如果真 (不等于 (上次值, #被猜球))
    .如果 (或者 (小于 (方向, #上左方), 等于 (上次值, 0)))
        赋值 (扫描图 [x] [y], 值)
    .否则
        .如果真 (不等于 (上次值, 1234))
            赋值 (值, 相加 (值, 上次值))
            赋值 (上位, 相除 (值, 1000))
            赋值 (下位, 求余数 (相除 (值, 100), 10))
            赋值 (左位, 求余数 (相除 (值, 10), 10))
            赋值 (右位, 求余数 (值, 10))
            .判断开始 (等于 (上位, 下位))
                赋值 (值, 相乘 (上位, 1111))
            .判断 (等于 (左位, 右位))
                赋值 (值, 相乘 (左位, 1111))
            .默认
                
            .判断结束
            赋值 (扫描图 [x] [y], 值)
        .如果真结束
        
    .如果结束
    
.如果真结束


.子程序 取网格图坐标, 坐标, , 
.参数 横向位置, 空白型, , 
.参数 纵向位置, 空白型, , 

.局部变量 所在坐标, 坐标, , , 

赋值 (所在坐标.横向, 相减 (横向位置, 原始坐标.横向))
.如果 (或者 (小于 (所在坐标.横向, 0), 大于 (所在坐标.横向, 相乘 (相加 (网格数, 2), 30))))
    赋值 (所在坐标.横向, 0)
.否则
    赋值 (所在坐标.横向, 相加 (相除 (所在坐标.横向, 30), 1))
.如果结束
赋值 (所在坐标.纵向, 相减 (纵向位置, 原始坐标.纵向))
.如果 (或者 (小于 (所在坐标.纵向, 0), 大于 (所在坐标.纵向, 相乘 (相加 (网格数, 2), 30))))
    赋值 (所在坐标.纵向, 0)
.否则
    赋值 (所在坐标.纵向, 相加 (相除 (所在坐标.纵向, 30), 1))
.如果结束
输出调试文本 (到文本 (所在坐标.横向) ＋ “,” ＋ 到文本 (所在坐标.纵向))
_启动窗口.置文本 (., 1, 相加 (到文本 (所在坐标.横向), “,”, 到文本 (所在坐标.纵向)))
返回 (所在坐标)

.子程序 更换图片, 空白型, , 
.参数 序号, 空白型, , 
.参数 横向位置, 空白型, , 
.参数 纵向位置, 空白型, , 
.参数 标志, 文本型, , 

.局部变量 x, 空白型, , , 
.局部变量 y, 空白型, , , 

.如果真 (等于 (标志, “-”))
    返回 ()
.如果真结束
赋值 (x, 相加 (原始坐标.横向, 相乘 (相减 (横向位置, 1), 30)))
赋值 (y, 相加 (原始坐标.纵向, 相乘 (相减 (纵向位置, 1), 30)))
_启动窗口.画图片 (., 图片号 [序号], x, y, 30, 30, 1)
赋值 (x, 相加 (x, 8))
赋值 (y, 相加 (y, 2))
.判断开始 (等于 (标志, “+”))
    .如果真 (大于 (折射数, 9))
        赋值 (x, 相减 (x, 6))
    .如果真结束
    _启动窗口.定位写出 (., x, y, 折射数)
.判断 (不等于 (标志, “ ”))
    _启动窗口.定位写出 (., x, y, 标志)
.默认
    
.判断结束
_启动窗口.置文本 (., 0, 相加 (“猜球数: ”, 到文本 (猜球数), “, 已猜数: ”, 到文本 (假定球数)))

.子程序 激光扫描, 坐标, , 
.参数 激光位置, 坐标, , 

.局部变量 出口位置, 坐标, , , 
.局部变量 下一位置, 坐标, , , 
.局部变量 方向, 空白型, , , 激光扫描方向
.局部变量 新方向, 空白型, , , 激光下一扫描方向

.判断开始 (等于 (激光位置.横向, 1))
    赋值 (方向, #右方) ' 向右方扫描
.判断 (等于 (激光位置.横向, ))
    赋值 (方向, #左方) ' 向左方扫描
.判断 (等于 (激光位置.纵向, 1))
    赋值 (方向, #下方) ' 向下方扫描
.默认
    赋值 (方向, #上方) ' 向上方扫描
.判断结束
赋值 (下一位置, 激光位置)
.循环判断首 ()
    赋值 (出口位置, 下一位置)
     ' 以下取出新的激光走向
    .判断开始 (等于 (方向, #上方))
        赋值 (新方向, 相除 (扫描图 [下一位置].横向 [下一位置].纵向, 1000)) ' 千位为上方
    .判断 (等于 (方向, #下方))
        赋值 (新方向, 求余数 (相除 (扫描图 [下一位置].横向 [下一位置].纵向, 100), 10)) ' 百位为下方
    .判断 (等于 (方向, #左方))
        赋值 (新方向, 求余数 (相除 (扫描图 [下一位置].横向 [下一位置].纵向, 10), 10)) ' 十位为左方
    .判断 (等于 (方向, #右方))
        赋值 (新方向, 求余数 (扫描图 [下一位置].横向 [下一位置].纵向, 10)) ' 各位为右方
    .默认
        
    .判断结束
    .如果真 (不等于 (新方向, 0))
        赋值 (方向, 新方向)
    .如果真结束
    .判断开始 (等于 (方向, #上方))
        赋值 (下一位置.纵向, 相减 (下一位置.纵向, 1))
    .判断 (等于 (方向, #下方))
        赋值 (下一位置.纵向, 相加 (下一位置.纵向, 1))
    .判断 (等于 (方向, #左方))
        赋值 (下一位置.横向, 相减 (下一位置.横向, 1))
    .判断 (等于 (方向, #右方))
        赋值 (下一位置.横向, 相加 (下一位置.横向, 1))
    .默认
        
    .判断结束
    .如果 (并且 (大于 (下一位置.横向, 1), 小于 (下一位置.横向, ), 大于 (下一位置.纵向, 1), 小于 (下一位置.纵向, )))
        .如果真 (等于 (扫描图 [下一位置].横向 [下一位置].纵向, #被猜球))
            赋值 (出口位置.横向, 0)
            赋值 (出口位置.纵向, 0)
            跳出循环 ()
        .如果真结束
        
    .否则
        跳出循环 ()
    .如果结束
    
.循环判断尾 (真)
.如果真 (并且 (大于 (出口位置.横向, 1), 小于 (出口位置.横向, ), 大于 (出口位置.纵向, 1), 小于 (出口位置.纵向, )))
    赋值 (出口位置, 下一位置)
.如果真结束
返回 (出口位置)

.子程序 游戏完成否, 空白型, , 
.局部变量 y, 空白型, , , 
.局部变量 x, 空白型, , , 
.局部变量 单元标志, 空白型, , , 

.如果真 (游戏结束)
    返回 ()
.如果真结束
.如果 (不等于 (假定球数, 猜球数))
    信息框 (相加 (“猜球数不等于”, 到文本 (猜球数)), 0, “敬告玩家”)
.否则
    .变量循环首 (2, 相加 (网格数, 1), 1, y)
        .变量循环首 (2, 相加 (网格数, 1), 1, x)
            .如果 (等于 (扫描图 [x] [y], #被猜球))
                赋值 (单元标志, #假定标志)
            .否则
                赋值 (单元标志, #排除标志)
            .如果结束
            
            .如果 (等于 (网格图 [x] [y], #假定标志))
                赋值 (单元标志, 相加 (单元标志, 2))
            .否则
                .如果真 (等于 (单元标志, #排除标志))
                    赋值 (单元标志, 网格图 [x] [y])
                .如果真结束
                
            .如果结束
            .如果真 (等于 (单元标志, 6))
                赋值 (假定球数, 相减 (假定球数, 1))
            .如果真结束
            更换图片 (单元标志, x, y, “ ”)
        .变量循环尾 ()
    .变量循环尾 ()
    赋值 (游戏中, 假)
    赋值 (游戏结束, 真)
    .如果 (等于 (假定球数, 0))
        信息框 (“您太棒了!!!”, 0, “游戏完成”)
    .否则
        信息框 (“很遗憾! 游戏失败!!!”, 0, “游戏完成”)
    .如果结束
    _启动窗口.置文本 (., 0, “游戏结束!”)
.如果结束



 ' 不属于任何一个程序集、类模块的函数：
