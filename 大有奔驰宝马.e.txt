 ' 文件类型：Windows窗口程序

 ' 程序名称：大有奔驰宝马
 ' 程序描述：大有网路
@备注:
大有网络
http;//www.xiejinyou.cn
 ' 程序作者：本源码来自易语言资源网(www.5A5X.com)
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：             易语言资源网注意事项
--============   www.5A5X.com  =============--
* 易语言资源网为易语言官方站、易语言官方论坛提供辅助资源站；本易语言资源网( www.5A5X.com)所有软件和资料均为软件作者提供和网友推荐发布而来，其版权归该软件和程序源码的合法拥有者所有，本站易语言资源网整理收集仅供易语言用户学习和易语言技术研究探讨使用，不得用于任何商业用途。如果由于以上原因造成的版权纠纷本站概不负责！
* 本站资源未经许可,任何网站不得非法盗链及抄袭本站资源；如引用，请注明来自易语言资源网，谢谢合作！
--============   www.5A5X.com  =============--
 ' 版本号：1.0
 ' 创建号：0.0

窗口 主界面
    左边 = 50
    顶边 = 50
    宽度 = 853
    高度 = 531
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 3
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    窗口类名 = “”
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “大有奔驰宝马-单机版”
    帮助文件名 = “”

窗口 窗口2
    左边 = 50
    顶边 = 50
    宽度 = 380
    高度 = 169
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    窗口类名 = “”
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “关于我们”
    帮助文件名 = “”

窗口 窗口1
    左边 = 50
    顶边 = 50
    宽度 = 480
    高度 = 317
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    窗口类名 = “”
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “游戏说明”
    帮助文件名 = “”



.声音 准备音乐, " ' 已保存到：D:\易语言学习\Data\大有奔驰宝马.e\准备音乐", , 
.声音 中奖, " ' 已保存到：D:\易语言学习\Data\大有奔驰宝马.e\中奖", , 
.声音 开车, " ' 已保存到：D:\易语言学习\Data\大有奔驰宝马.e\开车", , 
.声音 奔驰红, " ' 已保存到：D:\易语言学习\Data\大有奔驰宝马.e\奔驰红", , 
.声音 奔驰绿, " ' 已保存到：D:\易语言学习\Data\大有奔驰宝马.e\奔驰绿", , 
.声音 奔驰黄, " ' 已保存到：D:\易语言学习\Data\大有奔驰宝马.e\奔驰黄", , 
.声音 宝马红, " ' 已保存到：D:\易语言学习\Data\大有奔驰宝马.e\宝马红", , 
.声音 宝马绿, " ' 已保存到：D:\易语言学习\Data\大有奔驰宝马.e\宝马绿", , 
.声音 宝马黄, " ' 已保存到：D:\易语言学习\Data\大有奔驰宝马.e\宝马黄", , 
.声音 奥迪红, " ' 已保存到：D:\易语言学习\Data\大有奔驰宝马.e\奥迪红", , 
.声音 奥迪绿, " ' 已保存到：D:\易语言学习\Data\大有奔驰宝马.e\奥迪绿", , 
.声音 奥迪黄, " ' 已保存到：D:\易语言学习\Data\大有奔驰宝马.e\奥迪黄", , 
.声音 捷达红, " ' 已保存到：D:\易语言学习\Data\大有奔驰宝马.e\捷达红", , 
.声音 捷达绿, " ' 已保存到：D:\易语言学习\Data\大有奔驰宝马.e\捷达绿", , 
.声音 捷达黄, " ' 已保存到：D:\易语言学习\Data\大有奔驰宝马.e\捷达黄", , 
.声音 特殊开奖, " ' 已保存到：D:\易语言学习\Data\大有奔驰宝马.e\特殊开奖", , 
.声音 , , , 
.声音 奥迪, " ' 已保存到：D:\易语言学习\Data\大有奔驰宝马.e\奥迪", , 
.声音 宝马, " ' 已保存到：D:\易语言学习\Data\大有奔驰宝马.e\宝马", , 
.声音 奔驰, " ' 已保存到：D:\易语言学习\Data\大有奔驰宝马.e\奔驰", , 
.声音 捷达, " ' 已保存到：D:\易语言学习\Data\大有奔驰宝马.e\捷达", , 
.声音 , , , 
.声音 红, " ' 已保存到：D:\易语言学习\Data\大有奔驰宝马.e\红", , 
.声音 绿, " ' 已保存到：D:\易语言学习\Data\大有奔驰宝马.e\绿", , 
.声音 黄, " ' 已保存到：D:\易语言学习\Data\大有奔驰宝马.e\黄", , 
.图片 _载入, " ' 已保存到：D:\易语言学习\Data\大有奔驰宝马.e\_载入", , 
.图片 _释放, " ' 已保存到：D:\易语言学习\Data\大有奔驰宝马.e\_释放", , 
.图片 _导出, " ' 已保存到：D:\易语言学习\Data\大有奔驰宝马.e\_导出", , 
.图片 _Skin_DLL, " ' 已保存到：D:\易语言学习\Data\大有奔驰宝马.e\_Skin_DLL", , 
.图片 绚丽蓝, " ' 已保存到：D:\易语言学习\Data\大有奔驰宝马.e\绚丽蓝", , 
.图片 , , , 
.图片 红_奔驰_常, " ' 已保存到：D:\易语言学习\Data\大有奔驰宝马.e\红_奔驰_常", , 
.图片 红_宝马_常, " ' 已保存到：D:\易语言学习\Data\大有奔驰宝马.e\红_宝马_常", , 
.图片 红_奥迪_常, " ' 已保存到：D:\易语言学习\Data\大有奔驰宝马.e\红_奥迪_常", , 
.图片 红_捷达_常, " ' 已保存到：D:\易语言学习\Data\大有奔驰宝马.e\红_捷达_常", , 
.图片 , , , 
.图片 红_奔驰_亮, " ' 已保存到：D:\易语言学习\Data\大有奔驰宝马.e\红_奔驰_亮", , 
.图片 红_宝马_亮, " ' 已保存到：D:\易语言学习\Data\大有奔驰宝马.e\红_宝马_亮", , 
.图片 红_奥迪_亮, " ' 已保存到：D:\易语言学习\Data\大有奔驰宝马.e\红_奥迪_亮", , 
.图片 红_捷达_亮, " ' 已保存到：D:\易语言学习\Data\大有奔驰宝马.e\红_捷达_亮", , 
.图片 , , , 
.图片 黄_奔驰_常, " ' 已保存到：D:\易语言学习\Data\大有奔驰宝马.e\黄_奔驰_常", , 
.图片 黄_宝马_常, " ' 已保存到：D:\易语言学习\Data\大有奔驰宝马.e\黄_宝马_常", , 
.图片 黄_奥迪_常, " ' 已保存到：D:\易语言学习\Data\大有奔驰宝马.e\黄_奥迪_常", , 
.图片 黄_捷达_常, " ' 已保存到：D:\易语言学习\Data\大有奔驰宝马.e\黄_捷达_常", , 
.图片 , , , 
.图片 黄_奔驰_亮, " ' 已保存到：D:\易语言学习\Data\大有奔驰宝马.e\黄_奔驰_亮", , 
.图片 黄_宝马_亮, " ' 已保存到：D:\易语言学习\Data\大有奔驰宝马.e\黄_宝马_亮", , 
.图片 黄_奥迪_亮, " ' 已保存到：D:\易语言学习\Data\大有奔驰宝马.e\黄_奥迪_亮", , 
.图片 黄_捷达_亮, " ' 已保存到：D:\易语言学习\Data\大有奔驰宝马.e\黄_捷达_亮", , 
.图片 , , , 
.图片 绿_奔驰_常, " ' 已保存到：D:\易语言学习\Data\大有奔驰宝马.e\绿_奔驰_常", , 
.图片 绿_宝马_常, " ' 已保存到：D:\易语言学习\Data\大有奔驰宝马.e\绿_宝马_常", , 
.图片 绿_奥迪_常, " ' 已保存到：D:\易语言学习\Data\大有奔驰宝马.e\绿_奥迪_常", , 
.图片 绿_捷达_常, " ' 已保存到：D:\易语言学习\Data\大有奔驰宝马.e\绿_捷达_常", , 
.图片 , , , 
.图片 绿_奔驰_亮, " ' 已保存到：D:\易语言学习\Data\大有奔驰宝马.e\绿_奔驰_亮", , 
.图片 绿_宝马_亮, " ' 已保存到：D:\易语言学习\Data\大有奔驰宝马.e\绿_宝马_亮", , 
.图片 绿_奥迪_亮, " ' 已保存到：D:\易语言学习\Data\大有奔驰宝马.e\绿_奥迪_亮", , 
.图片 绿_捷达_亮, " ' 已保存到：D:\易语言学习\Data\大有奔驰宝马.e\绿_捷达_亮", , 
.图片 , , , 
.图片 庄_常, " ' 已保存到：D:\易语言学习\Data\大有奔驰宝马.e\庄_常", , 
.图片 庄_亮, " ' 已保存到：D:\易语言学习\Data\大有奔驰宝马.e\庄_亮", , 
.图片 庄_中, " ' 已保存到：D:\易语言学习\Data\大有奔驰宝马.e\庄_中", , 
.图片 , , , 
.图片 和_常, " ' 已保存到：D:\易语言学习\Data\大有奔驰宝马.e\和_常", , 
.图片 和_亮, " ' 已保存到：D:\易语言学习\Data\大有奔驰宝马.e\和_亮", , 
.图片 和_中, " ' 已保存到：D:\易语言学习\Data\大有奔驰宝马.e\和_中", , 
.图片 , , , 
.图片 闲_常, " ' 已保存到：D:\易语言学习\Data\大有奔驰宝马.e\闲_常", , 
.图片 闲_亮, " ' 已保存到：D:\易语言学习\Data\大有奔驰宝马.e\闲_亮", , 
.图片 闲_中, " ' 已保存到：D:\易语言学习\Data\大有奔驰宝马.e\闲_中", , 
.图片 , , , 
.图片 四喜_红, " ' 已保存到：D:\易语言学习\Data\大有奔驰宝马.e\四喜_红", , 
.图片 四喜_绿, " ' 已保存到：D:\易语言学习\Data\大有奔驰宝马.e\四喜_绿", , 
.图片 四喜_黄, " ' 已保存到：D:\易语言学习\Data\大有奔驰宝马.e\四喜_黄", , 
.图片 , , , 
.图片 三元_奔驰, " ' 已保存到：D:\易语言学习\Data\大有奔驰宝马.e\三元_奔驰", , 
.图片 三元_宝马, " ' 已保存到：D:\易语言学习\Data\大有奔驰宝马.e\三元_宝马", , 
.图片 三元_奥迪, " ' 已保存到：D:\易语言学习\Data\大有奔驰宝马.e\三元_奥迪", , 
.图片 三元_捷达, " ' 已保存到：D:\易语言学习\Data\大有奔驰宝马.e\三元_捷达", , 
.图片 , , , 
.图片 彩, " ' 已保存到：D:\易语言学习\Data\大有奔驰宝马.e\彩", , 
.图片 火车, " ' 已保存到：D:\易语言学习\Data\大有奔驰宝马.e\火车", , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 5 0 系统核心支持库
 ' iext 27bb20fdd3e145e4bee3db39ddd6e64c 2 0 扩展界面支持库一
 ' spec A512548E76954B6E92C21055517615B0 3 1 特殊功能支持库




数据类型 压分, , 
    .成员 红, 整数型, , , 
    .成员 绿, 整数型, , , 
    .成员 黄, 整数型, , , 

数据类型 庄闲压分, , 
    .成员 庄, 整数型, , , 
    .成员 闲, 整数型, , , 
    .成员 和, 整数型, , , 

数据类型 MemMp3Info, , 
    .成员 CRC32, 文本型, , , 
    .成员 MP3Data, 字节集, , , 

.全局变量 奔驰倍率, 文本型, , , 
.全局变量 宝马倍率, 文本型, , , 
.全局变量 捷达倍率, 文本型, , , 
.全局变量 奥迪倍率, 文本型, , , 
.全局变量 庄闲倍率, 文本型, , , 
.全局变量 奔驰压分, 压分, , , 
.全局变量 宝马压分, 压分, , , 
.全局变量 奥迪压分, 压分, , , 
.全局变量 捷达压分, 压分, , , 
.全局变量 庄闲压分, 庄闲压分, , , 
.全局变量 奔驰备用压分, 压分, , , 
.全局变量 宝马备用压分, 压分, , , 
.全局变量 奥迪备用压分, 压分, , , 
.全局变量 捷达备用压分, 压分, , , 
.全局变量 庄闲备份压分, 庄闲压分, , , 
.全局变量 匿名全局变量_2689, 空白型, , , 
.全局变量 大三元音效, 文本型, , , 
.全局变量 大四喜音效, 文本型, , , 
.全局变量 开火车音效, 文本型, , , 
.全局变量 下彩金音效, 文本型, , , 
.全局变量 特殊音效, 文本型, , , 
.全局变量 开车音效, 文本型, , , 
.全局变量 背景音效, 文本型, , , 

.DLL命令 CreatePipe, 整数型, "kernel32", "CreatePipe", , 
    .参数 phReadPipe, 整数型, 传址, 
    .参数 phWritePipe, 整数型, 传址, 
    .参数 lpPipeAttributes, 整数型, , 
    .参数 nSize, 整数型, , 

.DLL命令 VirtualProtect, 整数型, "kernel32", "VirtualProtect", , 
    .参数 lpAddress, 整数型, , 
    .参数 dwSize, 整数型, , 
    .参数 flNewProtect, 整数型, , 
    .参数 lpflOldProtect, 整数型, 传址, 

.DLL命令 LoadLibrary, 整数型, "kernel32", "LoadLibraryA", , 
    .参数 lpLibFileName, 文本型, , 

.DLL命令 GetProcAddress, 整数型, "kernel32", "GetProcAddress", , 
    .参数 hModule, 整数型, , 
    .参数 lpProcName, 文本型, , 

.DLL命令 RtlComputeCrc32, 整数型, "ntdll.dll", "", , 
    .参数 flags, 整数型, , 
    .参数 Data, 字节集, , 
    .参数 LenData, 整数型, , 

.DLL命令 CreateFile, 整数型, "kernel32", "CreateFileA", , 
    .参数 lpFileName, 文本型, , 
    .参数 dwDesiredAccess, 整数型, , 
    .参数 dwShareMode, 整数型, , 
    .参数 lpSecurityAttributes, 整数型, , 
    .参数 dwCreationDisposition, 整数型, , 
    .参数 dwFlagsAndAttributes, 整数型, , 
    .参数 hTemplateFile, 整数型, , 

.DLL命令 CloseHandle, 整数型, "kernel32", "CloseHandle", , 
    .参数 hObject, 整数型, , 

.DLL命令 WriteFile, 整数型, "kernel32", "WriteFile", , 
    .参数 hFile, 整数型, , 
    .参数 lpBuffer, 字节集, , 
    .参数 nNumberOfBytesToWrite, 整数型, , 
    .参数 lpNumberOfBytesWritten, 整数型, 传址, 
    .参数 lpOverlapped, 整数型, , 

.程序集 程序集1, , , 

.程序集变量 句柄_DLL, 整数型, , , 
.程序集变量 火车节数, 空白型, , , 
.程序集变量 翻倍率, 空白型, , , 
.程序集变量 HOOK, APIHOOK, , , 
.程序集变量 Info, MemMp3Info, , "0", 
.程序集变量 匿名程序集变量_2062, 空白型, , , 
.子程序 _启动子程序, 整数型, , 本子程序在程序启动后最先执行
赋值 (句柄_DLL, 加载内存DLL (_取地址_字节集 (#_Skin_DLL)))
HOOK.安装APIHOOK (“kernel32.dll”, “CreateFileA”, &NewCreateFile)
赋值 (背景音效, 载入音频 (#准备音乐))
赋值 (开车音效, 载入音频 (#开车))
赋值 (特殊音效, 载入音频 (#特殊开奖))
赋值 (下彩金音效, 载入音频 (#中奖))
载入 (主界面, , 假)
赋值 (翻倍率, 0)
返回 (0) ' 可以根据您的需要返回任意数值

.子程序 加载内存DLL, 整数型, , 加载内存DLL,By:凌晨孤星
.参数 DLL地址, 整数型, , DLL文件数据地址

.局部变量 句柄, 整数型, , , 

置入代码 (#_载入)
 ' 本源码来自易语言资源网(www.5A5X.com)
返回 (句柄)

.子程序 释放内存DLL, 空白型, , 释放内存DLL,By:凌晨孤星
.参数 DLL句柄, 整数型, , 

置入代码 (#_释放)

.子程序 导出函数地址, 整数型, , 取DLL导出函数地址,By:凌晨孤星
.参数 DLL句柄, 整数型, , 
.参数 函数名, 文本型, , 

.局部变量 函数地址, 整数型, , , 

置入代码 (#_导出)
返回 (函数地址)

.子程序 _调用子程序, 逻辑型, , STDCALL,文本与字节集须取指针,By:dtcser
.参数 指针或地址, 整数型, , 
.参数 参数地址1, 整数型, 可空, 
.参数 参数地址2, 整数型, 可空, 
.参数 参数地址3, 整数型, 可空, 
.参数 参数地址4, 整数型, 可空, 
.参数 参数地址5, 整数型, 可空, 
.参数 参数地址6, 整数型, 可空, 
.参数 参数地址7, 整数型, 可空, 

置入代码 ({ 139, 69, 8, 139, 93, 4, 137, 93, 8, 93, 91, 255, 224 })
返回 (真)

.子程序 _取地址_文本型, 整数型, , 
.参数 变量, 文本型, 参考, 

置入代码 ({ 139, 69, 8, 139, 0, 201, 194, 4, 0 })
返回 (0)

.子程序 _取地址_字节集, 整数型, , 
.参数 变量, 字节集, 参考, 

置入代码 ({ 139, 69, 8, 139, 0, 131, 192, 8, 139, 229, 93, 194, 4, 0 })
返回 (0)

.子程序 取倍率, 空白型, , 
.局部变量 种子, 整数型, , , 
.局部变量 计次, 整数型, , , 
.局部变量 计次1, 空白型, , , 
.局部变量 奔驰, 文本型, , "0", 
.局部变量 宝马, 文本型, , "0", 
.局部变量 捷达, 文本型, , "0", 
.局部变量 奥迪, 文本型, , "0", 
.局部变量 数组, 空白型, , , 

置随机数种子 ()
.计次循环首 (10, 计次)
    加入成员 (奔驰, 相加 (到文本 (取随机数 (24, 56)), “,”, 到文本 (取随机数 (24, 56)), “,”, 到文本 (取随机数 (24, 56))))
    加入成员 (宝马, 相加 (到文本 (取随机数 (11, 24)), “,”, 到文本 (取随机数 (11, 24)), “,”, 到文本 (取随机数 (11, 24))))
    加入成员 (奥迪, 相加 (到文本 (取随机数 (7, 11)), “,”, 到文本 (取随机数 (7, 11)), “,”, 到文本 (取随机数 (7, 11))))
    加入成员 (捷达, 相加 (到文本 (取随机数 (4, 7)), “,”, 到文本 (取随机数 (4, 7)), “,”, 到文本 (取随机数 (4, 7))))
.计次循环尾 ()
赋值 (种子, 取随机数 (1, 10))
赋值 (奔驰倍率, 奔驰 [种子])
赋值 (种子, 取随机数 (1, 10))
赋值 (宝马倍率, 宝马 [种子])
赋值 (种子, 取随机数 (1, 10))
赋值 (奥迪倍率, 奥迪 [种子])
赋值 (种子, 取随机数 (1, 10))
赋值 (捷达倍率, 捷达 [种子])
赋值 (庄闲倍率, “2,7,2”)
置随机数种子 ()
 ' 本源码来自易语言资源网(www.5A5X.com)
.计次循环首 (1000, 计次)
    置随机数种子 ()
    赋值 (数组, 取随机数 (1, 100))
    .如果真 (不等于 (检查数组 (数组), 真))
        .如果真 (小于 (取数组成员数 (主界面.), 22))
            加入成员 (主界面., 数组)
        .如果真结束
        .如果真 (大于或等于 (取数组成员数 (主界面.), 22))
            .如果真 (小于 (取数组成员数 (主界面.), 28))
                加入成员 (主界面., 数组)
            .如果真结束
            .如果真 (大于或等于 (取数组成员数 (主界面.), 28))
                .如果真 (小于 (取数组成员数 (主界面.), 25))
                    加入成员 (主界面., 数组)
                .如果真结束
                .如果真 (大于或等于 (取数组成员数 (主界面.), 25))
                    .如果真 (小于 (取数组成员数 (主界面.), 30))
                        加入成员 (主界面., 数组)
                    .如果真结束
                    .如果真 (大于或等于 (取数组成员数 (主界面.), 30))
                        跳出循环 ()
                    .如果真结束
                    
                .如果真结束
                
            .如果真结束
            
        .如果真结束
        
    .如果真结束
    
.计次循环尾 ()

.子程序 检查数组, 逻辑型, , 
.参数 参数一, 空白型, , 

.局部变量 计次, 整数型, , , 
.局部变量 返回值, 逻辑型, , , 

.如果真 (大于或等于 (取数组成员数 (主界面.), 1))
    .计次循环首 (取数组成员数 (主界面.), 计次)
        .如果真 (等于 (主界面. [计次], 参数一))
            赋值 (返回值, 真)
            跳出循环 ()
        .如果真结束
        .如果真 (不等于 (主界面. [计次], 参数一))
            赋值 (返回值, 假)
        .如果真结束
         ' 本源码来自易语言资源网(www.5A5X.com)
    .计次循环尾 ()
.如果真结束
.如果真 (大于或等于 (取数组成员数 (主界面.), 1))
    .计次循环首 (取数组成员数 (主界面.), 计次)
        .如果真 (等于 (主界面. [计次], 参数一))
            赋值 (返回值, 真)
            跳出循环 ()
        .如果真结束
        .如果真 (不等于 (主界面. [计次], 参数一))
            赋值 (返回值, 假)
        .如果真结束
        
    .计次循环尾 ()
    
.如果真结束
.如果真 (大于或等于 (取数组成员数 (主界面.), 1))
    .计次循环首 (取数组成员数 (主界面.), 计次)
        .如果真 (等于 (主界面. [计次], 参数一))
            赋值 (返回值, 真)
            跳出循环 ()
        .如果真结束
        .如果真 (不等于 (主界面. [计次], 参数一))
            赋值 (返回值, 假)
        .如果真结束
        
    .计次循环尾 ()
.如果真结束
.如果真 (大于或等于 (取数组成员数 (主界面.), 1))
    .计次循环首 (取数组成员数 (主界面.), 计次)
        .如果真 (等于 (主界面. [计次], 参数一))
            赋值 (返回值, 真)
            跳出循环 ()
        .如果真结束
        .如果真 (不等于 (主界面. [计次], 参数一))
            赋值 (返回值, 假)
        .如果真结束
        
    .计次循环尾 ()
.如果真结束
返回 (返回值)

.子程序 取亮点, 字节集, , 
.参数 参数一, 整数型, , 
.参数 参数二, 逻辑型, , 

.局部变量 返回值, 字节集, , , 

.如果真 (等于 (参数二, 假))
    .如果真 (或者 (等于 (参数一, 1), 等于 (参数一, 13), 等于 (参数一, 25)))
        赋值 (返回值, #红_宝马_常)
    .如果真结束
    .如果真 (或者 (等于 (参数一, 2), 等于 (参数一, 14)))
        赋值 (返回值, #绿_宝马_常)
    .如果真结束
    .如果真 (或者 (等于 (参数一, 3), 等于 (参数一, 15)))
        赋值 (返回值, #黄_宝马_常)
    .如果真结束
    .如果真 (或者 (等于 (参数一, 4), 等于 (参数一, 16)))
        赋值 (返回值, #红_奔驰_常)
    .如果真结束
    .如果真 (或者 (等于 (参数一, 5), 等于 (参数一, 17)))
        赋值 (返回值, #绿_奔驰_常)
    .如果真结束
    .如果真 (或者 (等于 (参数一, 6), 等于 (参数一, 18)))
        赋值 (返回值, #黄_奔驰_常)
    .如果真结束
    .如果真 (或者 (等于 (参数一, 7), 等于 (参数一, 19)))
        赋值 (返回值, #红_捷达_常)
    .如果真结束
    .如果真 (或者 (等于 (参数一, 8), 等于 (参数一, 20)))
        赋值 (返回值, #绿_捷达_常)
    .如果真结束
    .如果真 (或者 (等于 (参数一, 9), 等于 (参数一, 21)))
        赋值 (返回值, #黄_捷达_常)
    .如果真结束
    .如果真 (或者 (等于 (参数一, 10), 等于 (参数一, 22)))
        赋值 (返回值, #红_奥迪_常)
    .如果真结束
    .如果真 (或者 (等于 (参数一, 11), 等于 (参数一, 23)))
        赋值 (返回值, #绿_奥迪_常)
    .如果真结束
    .如果真 (或者 (等于 (参数一, 12), 等于 (参数一, 24)))
        赋值 (返回值, #黄_奥迪_常)
    .如果真结束
     ' 本源码来自易语言资源网(www.5A5X.com)
.如果真结束
.如果真 (等于 (参数二, 真))
    .如果真 (或者 (等于 (参数一, 1), 等于 (参数一, 13)))
        赋值 (返回值, #红_宝马_亮)
    .如果真结束
    .如果真 (或者 (等于 (参数一, 2), 等于 (参数一, 14)))
        赋值 (返回值, #绿_宝马_亮)
    .如果真结束
    .如果真 (或者 (等于 (参数一, 3), 等于 (参数一, 15)))
        赋值 (返回值, #黄_宝马_亮)
    .如果真结束
    .如果真 (或者 (等于 (参数一, 4), 等于 (参数一, 16)))
        赋值 (返回值, #红_奔驰_亮)
    .如果真结束
    .如果真 (或者 (等于 (参数一, 5), 等于 (参数一, 17)))
        赋值 (返回值, #绿_奔驰_亮)
    .如果真结束
    .如果真 (或者 (等于 (参数一, 6), 等于 (参数一, 18)))
        赋值 (返回值, #黄_奔驰_亮)
    .如果真结束
    .如果真 (或者 (等于 (参数一, 7), 等于 (参数一, 19)))
        赋值 (返回值, #红_捷达_亮)
    .如果真结束
    .如果真 (或者 (等于 (参数一, 8), 等于 (参数一, 20)))
        赋值 (返回值, #绿_捷达_亮)
    .如果真结束
    .如果真 (或者 (等于 (参数一, 9), 等于 (参数一, 21)))
        赋值 (返回值, #黄_捷达_亮)
    .如果真结束
    .如果真 (或者 (等于 (参数一, 10), 等于 (参数一, 22)))
        赋值 (返回值, #红_奥迪_亮)
    .如果真结束
    .如果真 (或者 (等于 (参数一, 11), 等于 (参数一, 23)))
        赋值 (返回值, #绿_奥迪_亮)
    .如果真结束
    .如果真 (或者 (等于 (参数一, 12), 等于 (参数一, 24)))
        赋值 (返回值, #黄_奥迪_亮)
    .如果真结束
    
.如果真结束
返回 (返回值)

.子程序 压分恢复, 空白型, , 
赋值 (奔驰压分.红, 0)
赋值 (奔驰压分.绿, 0)
赋值 (奔驰压分.黄, 0)
赋值 (宝马压分.红, 0)
赋值 (宝马压分.绿, 0)
赋值 (宝马压分.黄, 0)
赋值 (奥迪压分.红, 0)
赋值 (奥迪压分.绿, 0)
赋值 (奥迪压分.黄, 0)
赋值 (捷达压分.红, 0)
赋值 (捷达压分.绿, 0)
赋值 (捷达压分.黄, 0)
赋值 (庄闲压分.庄, 0)
赋值 (庄闲压分.闲, 0)
赋值 (庄闲压分.和, 0)
赋值 (主界面..内容, 相加 (“得分：”, 到文本 (0)))
赋值 (主界面., 假)

.子程序 取庄闲, 空白型, , 
.参数 参数一, 整数型, , 
.参数 参数二, 逻辑型, , 

.局部变量 点值, 文本型, , , 

赋值 (主界面..正常图片, #闲_常)
赋值 (主界面..正常图片, #庄_常)
赋值 (主界面..正常图片, #和_常)
.如果真 (等于 (参数二, 真))
    .如果真 (小于 (参数一, 7))
        赋值 (主界面..正常图片, #闲_中)
    .如果真结束
    .如果真 (大于 (参数一, 7))
        赋值 (主界面..正常图片, #庄_中)
    .如果真结束
    .如果真 (等于 (参数一, 7))
        赋值 (主界面..正常图片, #和_中)
    .如果真结束
    .如果真 (小于 (参数一, 10))
        赋值 (点值, 相加 (“0”, 到文本 (参数一)))
    .如果真结束
    .如果真 (大于或等于 (参数一, 10))
        赋值 (点值, 到文本 (参数一))
    .如果真结束
    赋值 (主界面..内容, 相加 (取文本右边 (主界面..内容, 11), “-”, 点值))
.如果真结束
.如果真 (等于 (参数二, 假))
    .如果真 (小于 (参数一, 7))
        赋值 (主界面..正常图片, #闲_亮)
    .如果真结束
    .如果真 (大于 (参数一, 7))
        赋值 (主界面..正常图片, #庄_亮)
    .如果真结束
    .如果真 (等于 (参数一, 7))
        赋值 (主界面..正常图片, #和_亮)
    .如果真结束
    
.如果真结束
.如果真 (等于 (参数一, 0))
    赋值 (主界面..正常图片, #闲_常)
    赋值 (主界面..正常图片, #庄_常)
    赋值 (主界面..正常图片, #和_常)
.如果真结束


.子程序 摇奖开始, 空白型, , 
.局部变量 奖项, 空白型, , , 
.局部变量 周数, 空白型, , , 
.局部变量 累计, 空白型, , , 

赋值 (主界面..禁止, 真)
赋值 (主界面., 真)
置随机数种子 ()
赋值 (主界面., 取随机数 (1111, 9999))
赋值 (奖项, 取随机数 (1, 100))
 ' 奖项 ＝ 88
 ' 火车68 彩金66 大三元 50 大四喜 88
赋值 (周数, 取周数 ())
.如果真 (等于 (奖项, 50)) ' 此处是 大三元
    赋值 (翻倍率, 3)
    停止播放 ()
    播放MP3 (-1, 特殊音效)
    赋值 (累计, 0)
    .计次循环首 (4, )
        .计次循环首 (3, )
            赋值 (累计, 相加 (累计, 1))
            旋转亮点 (到文本 (累计))
            旋转亮点 (到文本 (相加 (累计, 12)))
        .计次循环尾 ()
    .计次循环尾 ()
    延迟 (500)
    旋转亮点 (到文本 (0))
    延迟 (500)
    赋值 (累计, 0)
    .计次循环首 (4, )
        .计次循环首 (3, )
            赋值 (累计, 相加 (累计, 1))
            旋转亮点 (到文本 (累计))
            旋转亮点 (到文本 (相加 (累计, 12)))
        .计次循环尾 ()
    .计次循环尾 ()
    延迟 (500)
    旋转亮点 (到文本 (0))
    延迟 (500)
    赋值 (累计, 0)
    .计次循环首 (4, )
        .计次循环首 (3, )
            赋值 (累计, 相加 (累计, 1))
            旋转亮点 (到文本 (累计))
            旋转亮点 (到文本 (相加 (累计, 12)))
        .计次循环尾 ()
    .计次循环尾 ()
     ' 本源码来自易语言资源网(www.5A5X.com)
    延迟 (500)
    旋转亮点 (到文本 (0))
    停止播放 ()
    播放MP3 (-1, 开车音效)
    旋转 (周数, 主界面., 1)
.如果真结束
.如果真 (等于 (奖项, 88)) ' 大四喜
    赋值 (翻倍率, 4)
    停止播放 ()
    播放MP3 (-1, 特殊音效)
    赋值 (累计, 0)
    .计次循环首 (4, )
        .计次循环首 (3, )
            赋值 (累计, 相加 (累计, 1))
            旋转亮点 (到文本 (累计))
            旋转亮点 (到文本 (相加 (累计, 12)))
        .计次循环尾 ()
    .计次循环尾 ()
    延迟 (500)
    旋转亮点 (到文本 (0))
    延迟 (500)
    赋值 (累计, 0)
    .计次循环首 (4, )
        .计次循环首 (3, )
            赋值 (累计, 相加 (累计, 1))
            旋转亮点 (到文本 (累计))
            旋转亮点 (到文本 (相加 (累计, 12)))
        .计次循环尾 ()
    .计次循环尾 ()
    延迟 (500)
    旋转亮点 (到文本 (0))
    延迟 (500)
    赋值 (累计, 0)
    .计次循环首 (4, )
        .计次循环首 (3, )
            赋值 (累计, 相加 (累计, 1))
            旋转亮点 (到文本 (累计))
            旋转亮点 (到文本 (相加 (累计, 12)))
        .计次循环尾 ()
    .计次循环尾 ()
    延迟 (500)
    旋转亮点 (到文本 (0))
    停止播放 ()
    播放MP3 (-1, 开车音效)
    旋转 (周数, 主界面., 2)
     ' 此处是 大四喜
.如果真结束
.如果真 (等于 (奖项, 66))
    赋值 (翻倍率, 1)
    停止播放 ()
    播放MP3 (-1, 特殊音效)
    赋值 (累计, 0)
    .计次循环首 (4, )
        .计次循环首 (3, )
            赋值 (累计, 相加 (累计, 1))
            旋转亮点 (到文本 (累计))
            旋转亮点 (到文本 (相加 (累计, 12)))
        .计次循环尾 ()
    .计次循环尾 ()
    延迟 (500)
    旋转亮点 (到文本 (0))
    延迟 (500)
    赋值 (累计, 0)
    .计次循环首 (4, )
        .计次循环首 (3, )
            赋值 (累计, 相加 (累计, 1))
            旋转亮点 (到文本 (累计))
            旋转亮点 (到文本 (相加 (累计, 12)))
        .计次循环尾 ()
    .计次循环尾 ()
    延迟 (500)
    旋转亮点 (到文本 (0))
    延迟 (500)
    赋值 (累计, 0)
    .计次循环首 (4, )
        .计次循环首 (3, )
            赋值 (累计, 相加 (累计, 1))
            旋转亮点 (到文本 (累计))
            旋转亮点 (到文本 (相加 (累计, 12)))
        .计次循环尾 ()
    .计次循环尾 ()
    延迟 (500)
    旋转亮点 (到文本 (0))
    停止播放 ()
    播放MP3 (-1, 开车音效)
    旋转 (周数, 主界面., 3)
.如果真结束
.如果真 (等于 (奖项, 68))
    赋值 (翻倍率, 1)
    停止播放 ()
    播放MP3 (-1, 特殊音效)
    赋值 (累计, 0)
    .计次循环首 (4, )
        .计次循环首 (3, )
            赋值 (累计, 相加 (累计, 1))
            旋转亮点 (到文本 (累计))
            旋转亮点 (到文本 (相加 (累计, 12)))
        .计次循环尾 ()
    .计次循环尾 ()
    延迟 (500)
    旋转亮点 (到文本 (0))
    延迟 (500)
    赋值 (累计, 0)
    .计次循环首 (4, )
        .计次循环首 (3, )
            赋值 (累计, 相加 (累计, 1))
            旋转亮点 (到文本 (累计))
            旋转亮点 (到文本 (相加 (累计, 12)))
        .计次循环尾 ()
    .计次循环尾 ()
    延迟 (500)
    旋转亮点 (到文本 (0))
    延迟 (500)
    赋值 (累计, 0)
    .计次循环首 (4, )
        .计次循环首 (3, )
            赋值 (累计, 相加 (累计, 1))
            旋转亮点 (到文本 (累计))
            旋转亮点 (到文本 (相加 (累计, 12)))
        .计次循环尾 ()
    .计次循环尾 ()
    延迟 (500)
    旋转亮点 (到文本 (0))
    停止播放 ()
    播放MP3 (-1, 开车音效)
    旋转 (周数, 主界面., 4)
     ' 此处是 开火车
.如果真结束
.如果真 (并且 (不等于 (奖项, 50), 不等于 (奖项, 88), 不等于 (奖项, 66), 不等于 (奖项, 68)))
    赋值 (翻倍率, 1)
     ' 正常开车
    停止播放 ()
    播放MP3 (-1, 开车音效)
    旋转 (周数, 主界面., 0)
.如果真结束


.子程序 旋转, 空白型, , 
.参数 参数一, 空白型, , 要开始的数值
.参数 参数二, 空白型, , 
.参数 参数三, 空白型, , 中奖项目 0=正常 1=大三元 2=大四喜 3=彩金 4=开火车

.局部变量 记次, 整数型, , , 
.局部变量 累计, 整数型, , , 
.局部变量 计次, 空白型, , , 

赋值 (累计, 参数二)
.如果真 (等于 (参数三, 4))
    置随机数种子 ()
    赋值 (火车节数, 取随机数 (3, 7))
    .计次循环首 (相加 (参数一, 累计), 记次)
        赋值 (累计, 相加 (累计, 1))
        .判断开始 (大于或等于 (累计, 25))
            赋值 (累计, 1)
        .默认
             ' 本源码来自易语言资源网(www.5A5X.com)
        .判断结束
        置随机数种子 ()
        .判断开始 (等于 (记次, 相减 (参数一, 6)))
            延迟 (150)
        .判断 (等于 (记次, 相减 (参数一, 5)))
            延迟 (200)
        .判断 (等于 (记次, 相减 (参数一, 4)))
            延迟 (250)
        .判断 (等于 (记次, 相减 (参数一, 3)))
            延迟 (300)
        .判断 (等于 (记次, 相减 (参数一, 2)))
            延迟 (350)
        .判断 (等于 (记次, 相减 (参数一, 1)))
            延迟 (400)
        .判断 (等于 (记次, 参数一))
            延迟 (600)
            赋值 (主界面., 取随机数 (1, 13))
            赋值 (主界面., 累计)
            取庄闲 (主界面., 真)
            旋转亮点 (到文本 (0))
            旋转亮点 (到文本 (累计))
            中奖判断 (累计, 参数三)
            跳出循环 ()
        .判断 (等于 (记次, 1))
            延迟 (350)
        .判断 (等于 (记次, 2))
            延迟 (250)
        .判断 (等于 (记次, 3))
            延迟 (150)
        .判断 (等于 (记次, 4))
            延迟 (100)
        .默认
            延迟 (4)
        .判断结束
        赋值 (主界面., 取随机数 (1, 13))
        取庄闲 (主界面., 假)
        旋转亮点 (到文本 (0))
        .计次循环首 (火车节数, 计次)
            .如果真 (等于 (计次, 1))
                旋转亮点 (到文本 (累计))
            .如果真结束
            .如果真 (不等于 (计次, 1))
                .如果真 (大于 (相加 (累计, 计次), 24))
                    旋转亮点 (到文本 (1))
                .如果真结束
                .如果真 (小于 (相加 (累计, 计次), 24))
                    旋转亮点 (到文本 (相减 (相加 (累计, 计次), 1)))
                .如果真结束
                
            .如果真结束
            
        .计次循环尾 ()
    .计次循环尾 ()
    
.如果真结束
.如果真 (不等于 (参数三, 4))
    .计次循环首 (参数一, 记次)
        赋值 (累计, 相加 (累计, 1))
        .判断开始 (大于或等于 (累计, 25))
            赋值 (累计, 1)
        .默认
            
        .判断结束
        
        .判断开始 (等于 (记次, 1))
            延迟 (350)
        .判断 (等于 (记次, 2))
            延迟 (250)
        .判断 (等于 (记次, 3))
            延迟 (150)
        .判断 (等于 (记次, 4))
            延迟 (100)
        .判断 (等于 (记次, 相减 (参数一, 6)))
            延迟 (150)
        .判断 (等于 (记次, 相减 (参数一, 5)))
            延迟 (200)
        .判断 (等于 (记次, 相减 (参数一, 4)))
            延迟 (250)
        .判断 (等于 (记次, 相减 (参数一, 3)))
            延迟 (300)
        .判断 (等于 (记次, 相减 (参数一, 2)))
            延迟 (350)
        .判断 (等于 (记次, 相减 (参数一, 1)))
            延迟 (400)
        .判断 (等于 (记次, 参数一))
            延迟 (600)
            置随机数种子 ()
            赋值 (主界面., 取随机数 (1, 13))
            赋值 (主界面., 累计)
            取庄闲 (主界面., 真)
            旋转亮点 (到文本 (0))
            旋转亮点 (到文本 (累计))
            中奖判断 (累计, 参数三)
        .默认
            延迟 (4)
        .判断结束
        置随机数种子 ()
        赋值 (主界面., 取随机数 (1, 13))
        取庄闲 (主界面., 假)
        旋转亮点 (到文本 (0))
        旋转亮点 (到文本 (累计))
        赋值 (主界面. [25].可视, 真)
        赋值 (主界面. [25].图片, 取亮点 (累计, 真))
    .计次循环尾 ()
    
.如果真结束


.子程序 旋转亮点, 空白型, , 
.参数 参数一, 文本型, , 

.局部变量 计次1, 空白型, , , 
.局部变量 计次2, 空白型, , , 
.局部变量 累计, 空白型, , , 
.局部变量 累计分割, 文本型, , "0", 
.局部变量 匿名局部变量_894, 空白型, , , 

.如果真 (等于 (参数一, “0”))
    赋值 (累计, 0)
    .计次循环首 (4, 计次1)
        .计次循环首 (3, 计次2)
            赋值 (累计, 相加 (累计, 1))
            赋值 (主界面. [累计], 图片, 取亮点 (累计, 假))
            赋值 (主界面. [相加 (累计, 12)].图片, 取亮点 (相加 (累计, 12), 假))
        .计次循环尾 ()
    .计次循环尾 ()
.如果真结束
赋值 (累计分割, 分割文本 (参数一, “,”, ))
.如果真 (等于 (取数组成员数 (累计分割), 1))
    赋值 (累计, 0)
    .计次循环首 (4, 计次1)
        .计次循环首 (3, 计次2)
            赋值 (累计, 相加 (累计, 1))
            .如果真 (等于 (累计, 到整数 (累计分割 [1])))
                赋值 (主界面. [累计], 图片, 取亮点 (累计, 真))
            .如果真结束
            
        .计次循环尾 ()
    .计次循环尾 ()
    .计次循环首 (4, 计次1)
        .计次循环首 (3, 计次2)
            赋值 (累计, 相加 (累计, 1))
            .如果真 (等于 (累计, 到整数 (累计分割 [1])))
                赋值 (主界面. [累计], 图片, 取亮点 (累计, 真))
            .如果真结束
            
        .计次循环尾 ()
    .计次循环尾 ()
    
.如果真结束
.如果真 (不等于 (取数组成员数 (累计分割), 1))
    赋值 (累计, 0)
    .计次循环首 (4, 计次1)
        .计次循环首 (3, 计次2)
            赋值 (累计, 相加 (累计, 1))
            .计次循环首 (取数组成员数 (累计分割), 计次1)
                .如果真 (等于 (累计, 到整数 (累计分割 [计次1])))
                    赋值 (主界面. [累计], 图片, 取亮点 (累计, 真))
                .如果真结束
                
            .计次循环尾 ()
        .计次循环尾 ()
    .计次循环尾 ()
    .计次循环首 (4, 计次1)
        .计次循环首 (3, 计次2)
            赋值 (累计, 相加 (累计, 1))
            .计次循环首 (取数组成员数 (累计分割), 计次1)
                .如果真 (等于 (累计, 到整数 (累计分割 [计次1])))
                    赋值 (主界面. [累计], 图片, 取亮点 (累计, 真))
                .如果真结束
                 ' 本源码来自易语言资源网(www.5A5X.com)
            .计次循环尾 ()
        .计次循环尾 ()
    .计次循环尾 ()
    
.如果真结束


.子程序 中奖判断, 空白型, , 
.参数 数值, 空白型, , 
.参数 参数二, 空白型, , 

.局部变量 中奖数值, 整数型, , , 
.局部变量 播放音效, 文本型, , , 
.局部变量 累计, 空白型, , , 
.局部变量 计次, 空白型, , , 
.局部变量 三元位置, 整数型, , "0", 
.局部变量 四喜位置, 整数型, , "0", 
.局部变量 火车位置, 空白型, , "0", 
.局部变量 临时位置, 空白型, , , 
.局部变量 结果清算, 文本型, , , 
.局部变量 正常点亮, 字节集, , , 
.局部变量 三元点亮, 字节集, , , 
.局部变量 火车点亮, 字节集, , , 
.局部变量 四喜点亮, 字节集, , , 

停止播放 ()
赋值 (累计, 0)
.计次循环首 (4, )
    .计次循环首 (3, )
        赋值 (累计, 相加 (累计, 1))
        .如果真 (等于 (累计, 数值))
            赋值 (计次, 累计)
            跳出循环 ()
        .如果真结束
        
    .计次循环尾 ()
.计次循环尾 ()
.计次循环首 (4, )
    .计次循环首 (3, )
        赋值 (累计, 相加 (累计, 1))
        .如果真 (等于 (累计, 数值))
            赋值 (计次, 累计)
            跳出循环 ()
        .如果真结束
        
    .计次循环尾 ()
.计次循环尾 ()
.判断开始 (或者 (等于 (数值, 1), 等于 (数值, 13)))
    赋值 (中奖数值, 4)
    赋值 (三元点亮, #三元_宝马)
    赋值 (四喜点亮, #四喜_红)
    赋值 (正常点亮, 取亮点 (计次, 真))
    赋值 (播放音效, 载入音频 (#宝马红))
    赋值 (大三元音效, 载入音频 (#宝马))
    赋值 (大四喜音效, 载入音频 (#红))
    加入成员 (三元位置, 1)
    加入成员 (三元位置, 13)
    加入成员 (三元位置, 2)
    加入成员 (三元位置, 14)
    加入成员 (三元位置, 3)
    加入成员 (三元位置, 15)
    赋值 (临时位置, 数值)
    .计次循环首 (火车节数, 计次)
        .如果真 (大于 (临时位置, 24))
            赋值 (临时位置, 相减 (临时位置, 24))
        .如果真结束
        加入成员 (火车位置, 临时位置)
        赋值 (临时位置, 相加 (临时位置, 1))
    .计次循环尾 ()
    赋值 (临时位置, 1)
    .计次循环首 (8, 计次)
        .如果真 (大于 (临时位置, 24))
            赋值 (临时位置, 相减 (临时位置, 24))
        .如果真结束
        加入成员 (四喜位置, 临时位置)
        赋值 (临时位置, 相加 (临时位置, 3))
    .计次循环尾 ()
.判断 (或者 (等于 (数值, 2), 等于 (数值, 14)))
    赋值 (中奖数值, 5)
    赋值 (播放音效, 载入音频 (#宝马绿))
    赋值 (大三元音效, 载入音频 (#宝马))
    赋值 (大四喜音效, 载入音频 (#绿))
    赋值 (三元点亮, #三元_宝马)
    赋值 (四喜点亮, #四喜_绿)
    赋值 (正常点亮, 取亮点 (计次, 真))
    加入成员 (三元位置, 1)
    加入成员 (三元位置, 13)
    加入成员 (三元位置, 2)
    加入成员 (三元位置, 14)
    加入成员 (三元位置, 3)
    加入成员 (三元位置, 15)
    赋值 (临时位置, 数值)
    .计次循环首 (火车节数, 计次)
        .如果真 (大于 (临时位置, 24))
            赋值 (临时位置, 相减 (临时位置, 24))
        .如果真结束
        加入成员 (火车位置, 临时位置)
        赋值 (临时位置, 相加 (临时位置, 1))
    .计次循环尾 ()
    赋值 (临时位置, 2)
    .计次循环首 (8, 计次)
        .如果真 (大于 (临时位置, 24))
            赋值 (临时位置, 相减 (临时位置, 24))
        .如果真结束
        加入成员 (四喜位置, 临时位置)
        赋值 (临时位置, 相加 (临时位置, 3))
    .计次循环尾 ()
.判断 (或者 (等于 (数值, 3), 等于 (数值, 15)))
    赋值 (中奖数值, 6)
    赋值 (播放音效, 载入音频 (#宝马黄))
    赋值 (大三元音效, 载入音频 (#宝马))
    赋值 (大四喜音效, 载入音频 (#黄))
    赋值 (三元点亮, #三元_宝马)
    赋值 (四喜点亮, #四喜_黄)
    赋值 (正常点亮, 取亮点 (计次, 真))
    加入成员 (三元位置, 1)
    加入成员 (三元位置, 13)
    加入成员 (三元位置, 2)
    加入成员 (三元位置, 14)
    加入成员 (三元位置, 3)
    加入成员 (三元位置, 15)
    赋值 (临时位置, 数值)
    .计次循环首 (火车节数, 计次)
        .如果真 (大于 (临时位置, 24))
            赋值 (临时位置, 相减 (临时位置, 24))
        .如果真结束
        加入成员 (火车位置, 临时位置)
        赋值 (临时位置, 相加 (临时位置, 1))
    .计次循环尾 ()
    赋值 (临时位置, 3)
    .计次循环首 (8, 计次)
        .如果真 (大于 (临时位置, 24))
            赋值 (临时位置, 相减 (临时位置, 24))
        .如果真结束
        加入成员 (四喜位置, 临时位置)
        赋值 (临时位置, 相加 (临时位置, 3))
    .计次循环尾 ()
.判断 (或者 (等于 (数值, 4), 等于 (数值, 16)))
    赋值 (中奖数值, 1)
    赋值 (播放音效, 载入音频 (#奔驰红))
    赋值 (大三元音效, 载入音频 (#奔驰))
    赋值 (大四喜音效, 载入音频 (#红))
    赋值 (三元点亮, #三元_奔驰)
    赋值 (四喜点亮, #四喜_红)
    赋值 (正常点亮, 取亮点 (计次, 真))
    加入成员 (三元位置, 4)
    加入成员 (三元位置, 16)
    加入成员 (三元位置, 5)
    加入成员 (三元位置, 17)
    加入成员 (三元位置, 6)
    加入成员 (三元位置, 18)
    赋值 (临时位置, 数值)
    .计次循环首 (火车节数, 计次)
        .如果真 (大于 (临时位置, 24))
            赋值 (临时位置, 相减 (临时位置, 24))
        .如果真结束
        加入成员 (火车位置, 临时位置)
        赋值 (临时位置, 相加 (临时位置, 1))
    .计次循环尾 ()
    赋值 (临时位置, 4)
    .计次循环首 (8, 计次)
        .如果真 (大于 (临时位置, 24))
            赋值 (临时位置, 相减 (临时位置, 24))
        .如果真结束
        加入成员 (四喜位置, 临时位置)
        赋值 (临时位置, 相加 (临时位置, 3))
    .计次循环尾 ()
     ' 本源码来自易语言资源网(www.5A5X.com)
.判断 (或者 (等于 (数值, 5), 等于 (数值, 17)))
    赋值 (中奖数值, 2)
    赋值 (播放音效, 载入音频 (#奔驰绿))
    赋值 (大三元音效, 载入音频 (#奔驰))
    赋值 (大四喜音效, 载入音频 (#绿))
    赋值 (三元点亮, #三元_奔驰)
    赋值 (四喜点亮, #四喜_绿)
    赋值 (正常点亮, 取亮点 (计次, 真))
    加入成员 (三元位置, 4)
    加入成员 (三元位置, 16)
    加入成员 (三元位置, 5)
    加入成员 (三元位置, 17)
    加入成员 (三元位置, 6)
    加入成员 (三元位置, 18)
    赋值 (临时位置, 数值)
    .计次循环首 (火车节数, 计次)
        .如果真 (大于 (临时位置, 24))
            赋值 (临时位置, 相减 (临时位置, 24))
        .如果真结束
        加入成员 (火车位置, 临时位置)
        赋值 (临时位置, 相加 (临时位置, 1))
    .计次循环尾 ()
    赋值 (临时位置, 5)
    .计次循环首 (8, 计次)
        .如果真 (大于 (临时位置, 24))
            赋值 (临时位置, 相减 (临时位置, 24))
        .如果真结束
        加入成员 (四喜位置, 临时位置)
        赋值 (临时位置, 相加 (临时位置, 3))
    .计次循环尾 ()
    
.判断 (或者 (等于 (数值, 6), 等于 (数值, 18)))
    赋值 (中奖数值, 3)
    赋值 (播放音效, 载入音频 (#奔驰黄))
    赋值 (大三元音效, 载入音频 (#奔驰))
    赋值 (大四喜音效, 载入音频 (#黄))
    赋值 (三元点亮, #三元_奔驰)
    赋值 (四喜点亮, #四喜_黄)
    赋值 (正常点亮, 取亮点 (计次, 真))
    加入成员 (三元位置, 4)
    加入成员 (三元位置, 16)
    加入成员 (三元位置, 5)
    加入成员 (三元位置, 17)
    加入成员 (三元位置, 6)
    加入成员 (三元位置, 18)
    赋值 (临时位置, 数值)
    .计次循环首 (火车节数, 计次)
        .如果真 (大于 (临时位置, 24))
            赋值 (临时位置, 相减 (临时位置, 24))
        .如果真结束
        加入成员 (火车位置, 临时位置)
        赋值 (临时位置, 相加 (临时位置, 1))
    .计次循环尾 ()
    
    赋值 (临时位置, 6)
    .计次循环首 (8, 计次)
        .如果真 (大于 (临时位置, 24))
            赋值 (临时位置, 相减 (临时位置, 24))
        .如果真结束
        加入成员 (四喜位置, 临时位置)
        赋值 (临时位置, 相加 (临时位置, 3))
    .计次循环尾 ()
    
.判断 (或者 (等于 (数值, 7), 等于 (数值, 19)))
    赋值 (中奖数值, 10)
    赋值 (播放音效, 载入音频 (#捷达红))
    赋值 (大三元音效, 载入音频 (#捷达))
    赋值 (大四喜音效, 载入音频 (#红))
    赋值 (三元点亮, #三元_捷达)
    赋值 (四喜点亮, #四喜_红)
    赋值 (正常点亮, 取亮点 (计次, 真))
    
    加入成员 (三元位置, 7)
    加入成员 (三元位置, 19)
    加入成员 (三元位置, 8)
    加入成员 (三元位置, 20)
    加入成员 (三元位置, 9)
    加入成员 (三元位置, 21)
    赋值 (临时位置, 数值)
    .计次循环首 (火车节数, 计次)
        .如果真 (大于 (临时位置, 24))
            赋值 (临时位置, 相减 (临时位置, 24))
        .如果真结束
        加入成员 (火车位置, 临时位置)
        赋值 (临时位置, 相加 (临时位置, 1))
    .计次循环尾 ()
    
    赋值 (临时位置, 7)
    .计次循环首 (8, 计次)
        .如果真 (大于 (临时位置, 24))
            赋值 (临时位置, 相减 (临时位置, 24))
        .如果真结束
        加入成员 (四喜位置, 临时位置)
        赋值 (临时位置, 相加 (临时位置, 3))
    .计次循环尾 ()
    
.判断 (或者 (等于 (数值, 8), 等于 (数值, 20)))
    赋值 (中奖数值, 11)
    赋值 (播放音效, 载入音频 (#捷达绿))
    赋值 (大三元音效, 载入音频 (#捷达))
    赋值 (大四喜音效, 载入音频 (#绿))
    赋值 (三元点亮, #三元_捷达)
    赋值 (四喜点亮, #四喜_绿)
    赋值 (正常点亮, 取亮点 (计次, 真))
    加入成员 (三元位置, 7)
    加入成员 (三元位置, 19)
    加入成员 (三元位置, 8)
    加入成员 (三元位置, 20)
    加入成员 (三元位置, 9)
    加入成员 (三元位置, 21)
    赋值 (临时位置, 数值)
    .计次循环首 (火车节数, 计次)
        .如果真 (大于 (临时位置, 24))
            赋值 (临时位置, 相减 (临时位置, 24))
        .如果真结束
        加入成员 (火车位置, 临时位置)
        赋值 (临时位置, 相加 (临时位置, 1))
    .计次循环尾 ()
    
    赋值 (临时位置, 8)
    .计次循环首 (8, 计次)
        .如果真 (大于 (临时位置, 24))
            赋值 (临时位置, 相减 (临时位置, 24))
        .如果真结束
        加入成员 (四喜位置, 临时位置)
        赋值 (临时位置, 相加 (临时位置, 3))
    .计次循环尾 ()
    
.判断 (或者 (等于 (数值, 9), 等于 (数值, 21)))
    赋值 (中奖数值, 12)
    赋值 (播放音效, 载入音频 (#捷达黄))
    赋值 (大三元音效, 载入音频 (#捷达))
    赋值 (大四喜音效, 载入音频 (#黄))
    赋值 (三元点亮, #三元_捷达)
    赋值 (四喜点亮, #四喜_黄)
    赋值 (正常点亮, 取亮点 (计次, 真))
    
    加入成员 (三元位置, 7)
    加入成员 (三元位置, 19)
    加入成员 (三元位置, 8)
    加入成员 (三元位置, 20)
    加入成员 (三元位置, 9)
    加入成员 (三元位置, 21)
    赋值 (临时位置, 数值)
    .计次循环首 (火车节数, 计次)
        .如果真 (大于 (临时位置, 24))
            赋值 (临时位置, 相减 (临时位置, 24))
        .如果真结束
        加入成员 (火车位置, 临时位置)
        赋值 (临时位置, 相加 (临时位置, 1))
    .计次循环尾 ()
    
    赋值 (临时位置, 9)
    .计次循环首 (8, 计次)
        .如果真 (大于 (临时位置, 24))
            赋值 (临时位置, 相减 (临时位置, 24))
        .如果真结束
        加入成员 (四喜位置, 临时位置)
        赋值 (临时位置, 相加 (临时位置, 3))
    .计次循环尾 ()
    
.判断 (或者 (等于 (数值, 10), 等于 (数值, 22)))
    赋值 (中奖数值, 7)
    赋值 (播放音效, 载入音频 (#奥迪红))
    赋值 (大三元音效, 载入音频 (#奥迪))
    赋值 (大四喜音效, 载入音频 (#红))
    赋值 (三元点亮, #三元_奥迪)
    赋值 (四喜点亮, #四喜_红)
    赋值 (正常点亮, 取亮点 (计次, 真))
    
    加入成员 (三元位置, 10)
    加入成员 (三元位置, 22)
    加入成员 (三元位置, 11)
    加入成员 (三元位置, 23)
    加入成员 (三元位置, 12)
    加入成员 (三元位置, 24)
    赋值 (临时位置, 数值)
    .计次循环首 (火车节数, 计次)
        .如果真 (大于 (临时位置, 24))
            赋值 (临时位置, 相减 (临时位置, 24))
        .如果真结束
        加入成员 (火车位置, 临时位置)
        赋值 (临时位置, 相加 (临时位置, 1))
    .计次循环尾 ()
    
    赋值 (临时位置, 10)
    .计次循环首 (8, 计次)
        .如果真 (大于 (临时位置, 24))
            赋值 (临时位置, 相减 (临时位置, 24))
        .如果真结束
        加入成员 (四喜位置, 临时位置)
        赋值 (临时位置, 相加 (临时位置, 3))
    .计次循环尾 ()
    
.判断 (或者 (等于 (数值, 11), 等于 (数值, 23)))
    赋值 (中奖数值, 8)
    赋值 (播放音效, 载入音频 (#奥迪绿))
    赋值 (大三元音效, 载入音频 (#奥迪))
    赋值 (大四喜音效, 载入音频 (#绿))
    赋值 (三元点亮, #三元_奥迪)
    赋值 (四喜点亮, #四喜_绿)
    赋值 (正常点亮, 取亮点 (计次, 真))
    加入成员 (三元位置, 10)
    加入成员 (三元位置, 22)
    加入成员 (三元位置, 11)
    加入成员 (三元位置, 23)
    加入成员 (三元位置, 12)
    加入成员 (三元位置, 24)
    赋值 (临时位置, 数值)
    .计次循环首 (火车节数, 计次)
        .如果真 (大于 (临时位置, 24))
            赋值 (临时位置, 相减 (临时位置, 24))
        .如果真结束
        加入成员 (火车位置, 临时位置)
        赋值 (临时位置, 相加 (临时位置, 1))
    .计次循环尾 ()
    
    赋值 (临时位置, 11)
    .计次循环首 (8, 计次)
        .如果真 (大于 (临时位置, 24))
            赋值 (临时位置, 相减 (临时位置, 24))
        .如果真结束
        加入成员 (四喜位置, 临时位置)
        赋值 (临时位置, 相加 (临时位置, 3))
    .计次循环尾 ()
    
.判断 (或者 (等于 (数值, 12), 等于 (数值, 24)))
    赋值 (中奖数值, 9)
    赋值 (播放音效, 载入音频 (#奥迪黄))
    赋值 (大三元音效, 载入音频 (#奥迪))
    赋值 (大四喜音效, 载入音频 (#黄))
    赋值 (三元点亮, #三元_奥迪)
    赋值 (四喜点亮, #四喜_黄)
    赋值 (正常点亮, 取亮点 (计次, 真))
    加入成员 (三元位置, 10)
    加入成员 (三元位置, 22)
    加入成员 (三元位置, 11)
    加入成员 (三元位置, 23)
    加入成员 (三元位置, 12)
    加入成员 (三元位置, 24)
    赋值 (临时位置, 数值)
    .计次循环首 (火车节数, 计次)
        .如果真 (大于 (临时位置, 24))
            赋值 (临时位置, 相减 (临时位置, 24))
        .如果真结束
        加入成员 (火车位置, 临时位置)
        赋值 (临时位置, 相加 (临时位置, 1))
    .计次循环尾 ()
    
    赋值 (临时位置, 12)
    .计次循环首 (8, 计次)
        .如果真 (大于 (临时位置, 24))
            赋值 (临时位置, 相减 (临时位置, 24))
        .如果真结束
        加入成员 (四喜位置, 临时位置)
        赋值 (临时位置, 相加 (临时位置, 3))
    .计次循环尾 ()
    
.默认
    
.判断结束
.如果真 (等于 (参数二, 0))
    .如果真 (等于 (取数组成员数 (主界面.), 9))
        删除成员 (主界面., 1, 1)
        加入成员 (主界面., 取亮点 (数值, 真))
    .如果真结束
    .如果真 (小于 (取数组成员数 (主界面.), 9))
        加入成员 (主界面., 取亮点 (数值, 真))
    .如果真结束
    赋值 (主界面. [25].可视, 真)
    赋值 (主界面. [25].图片, 正常点亮)
    播放MP3 (播放音效)
    延迟 (1200)
    积分清算 (到文本 (中奖数值), 0)
    取倍率 ()
    赋值 (主界面..禁止, 假)
    赋值 (主界面., 假)
    赋值 (主界面. [25].可视, 假)
    停止播放 ()
    播放MP3 (-1, 背景音效)
.如果真结束
.如果真 (等于 (参数二, 1))
    .如果真 (等于 (取数组成员数 (主界面.), 9))
        删除成员 (主界面., 1, 1)
        加入成员 (主界面., 三元点亮)
    .如果真结束
    .如果真 (小于 (取数组成员数 (主界面.), 9))
        加入成员 (主界面., 三元点亮)
    .如果真结束
    
    赋值 (主界面. [25].可视, 真)
    赋值 (主界面. [25].图片, 三元点亮)
    播放MP3 (大三元音效)
    延迟 (1000)
    .计次循环首 (6, 计次)
        旋转亮点 (到文本 (三元位置 [计次]))
    .计次循环尾 ()
    延迟 (500)
    旋转亮点 (“0”)
    延迟 (500)
    .计次循环首 (6, 计次)
        旋转亮点 (到文本 (三元位置 [计次]))
    .计次循环尾 ()
    延迟 (500)
    旋转亮点 (“0”)
    延迟 (500)
    .计次循环首 (6, 计次)
        旋转亮点 (到文本 (三元位置 [计次]))
    .计次循环尾 ()
    延迟 (500)
    旋转亮点 (“0”)
    .计次循环首 (6, 计次)
        .如果真 (等于 (计次, 1))
            赋值 (结果清算, 到文本 (三元位置 [计次]))
        .如果真结束
        .如果真 (不等于 (计次, 1))
            赋值 (结果清算, 相加 (结果清算, “,”, 到文本 (三元位置 [计次])))
        .如果真结束
        
    .计次循环尾 ()
    积分清算 (结果清算, 1)
    取倍率 ()
    赋值 (主界面..禁止, 假)
    赋值 (主界面., 假)
    赋值 (主界面. [25].可视, 假)
    停止播放 ()
    播放MP3 (-1, 背景音效)
.如果真结束
.如果真 (等于 (参数二, 2))
    .如果真 (等于 (取数组成员数 (主界面.), 9))
        删除成员 (主界面., 1, 1)
        加入成员 (主界面., 四喜点亮)
    .如果真结束
    .如果真 (小于 (取数组成员数 (主界面.), 9))
        加入成员 (主界面., 四喜点亮)
    .如果真结束
    
    赋值 (主界面. [25].可视, 真)
    赋值 (主界面. [25].图片, 四喜点亮)
    播放MP3 (大四喜音效)
    延迟 (500)
    .计次循环首 (8, 计次)
        旋转亮点 (到文本 (四喜位置 [计次]))
    .计次循环尾 ()
    延迟 (500)
    旋转亮点 (“0”)
    延迟 (500)
    .计次循环首 (8, 计次)
        旋转亮点 (到文本 (四喜位置 [计次]))
    .计次循环尾 ()
    延迟 (500)
    旋转亮点 (“0”)
    延迟 (500)
    .计次循环首 (8, 计次)
        旋转亮点 (到文本 (四喜位置 [计次]))
    .计次循环尾 ()
    延迟 (500)
    旋转亮点 (“0”)
    .计次循环首 (8, 计次)
        .如果真 (等于 (计次, 1))
            赋值 (结果清算, 到文本 (四喜位置 [计次]))
        .如果真结束
        .如果真 (不等于 (计次, 1))
            赋值 (结果清算, 相加 (结果清算, “,”, 到文本 (四喜位置 [计次])))
        .如果真结束
        
    .计次循环尾 ()
    积分清算 (结果清算, 2)
    取倍率 ()
    赋值 (主界面..禁止, 假)
    赋值 (主界面., 假)
    停止播放 ()
    播放MP3 (-1, 背景音效)
.如果真结束
.如果真 (等于 (参数二, 3))
    .如果真 (等于 (取数组成员数 (主界面.), 9))
        删除成员 (主界面., 1, 1)
        加入成员 (主界面., #彩)
    .如果真结束
    .如果真 (小于 (取数组成员数 (主界面.), 9))
        加入成员 (主界面., #彩)
    .如果真结束
    
    赋值 (主界面. [25].可视, 真)
    赋值 (主界面. [25].图片, #彩)
    播放MP3 (-1, 下彩金音效)
    .如果真 (大于或等于 (主界面., 100))
        赋值 (主界面., 相加 (主界面., 到整数 (主界面..内容)))
    .如果真结束
    积分清算 (到文本 (中奖数值), 3)
    取倍率 ()
    延迟 (2800)
    赋值 (主界面..禁止, 假)
    赋值 (主界面., 假)
    赋值 (主界面. [25].可视, 假)
    停止播放 ()
    播放MP3 (-1, 背景音效)
.如果真结束
.如果真 (等于 (参数二, 4))
    .如果真 (等于 (取数组成员数 (主界面.), 9))
        删除成员 (主界面., 1, 1)
        加入成员 (主界面., #火车)
    .如果真结束
    .如果真 (小于 (取数组成员数 (主界面.), 9))
        加入成员 (主界面., #火车)
    .如果真结束
    赋值 (主界面. [25].可视, 真)
    赋值 (主界面. [25].图片, #火车)
    
    调试输出 (火车节数)
    延迟 (500)
    .计次循环首 (火车节数, 计次)
        旋转亮点 (到文本 (火车位置 [计次]))
    .计次循环尾 ()
    延迟 (500)
    旋转亮点 (“0”)
    延迟 (500)
    .计次循环首 (火车节数, 计次)
        旋转亮点 (到文本 (火车位置 [计次]))
    .计次循环尾 ()
    延迟 (500)
    旋转亮点 (“0”)
    延迟 (500)
    .计次循环首 (火车节数, 计次)
        旋转亮点 (到文本 (火车位置 [计次]))
    .计次循环尾 ()
    延迟 (500)
    旋转亮点 (“0”)
    .计次循环首 (火车节数, 计次)
        .如果真 (等于 (计次, 1))
            赋值 (结果清算, 到文本 (火车位置 [计次]))
        .如果真结束
        .如果真 (不等于 (计次, 1))
            赋值 (结果清算, 相加 (结果清算, “,”, 到文本 (火车位置 [计次])))
        .如果真结束
        
    .计次循环尾 ()
    积分清算 (结果清算, 4)
    取倍率 ()
    赋值 (主界面..禁止, 假)
    赋值 (主界面., 假)
    停止播放 ()
    播放MP3 (-1, 背景音效)
.如果真结束


.子程序 积分清算, 空白型, , 
.参数 中奖位置, 文本型, , 
.参数 参数二, 整数型, , 

.局部变量 临时积分, 空白型, , , 
.局部变量 临时分割, 文本型, , "0", 
.局部变量 计次, 空白型, , , 
.局部变量 计次1, 整数型, , , 
.局部变量 倍率分割, 文本型, , "0", 
.局部变量 得分, 整数型, , , 

赋值 (临时分割, 分割文本 (中奖位置, “,”, ))
.如果真 (等于 (参数二, 0))
    子程序1 (到整数 (中奖位置))
.如果真结束
.如果真 (等于 (参数二, 1))
    .如果真 (大于 (取数组成员数 (临时分割), 1))
        .计次循环首 (24, 计次)
            .计次循环首 (6, 计次1)
                .如果真 (等于 (计次, 到整数 (临时分割 [计次1])))
                    子程序1 (计次)
                .如果真结束
                
            .计次循环尾 ()
        .计次循环尾 ()
    .如果真结束
    
.如果真结束
.如果真 (等于 (参数二, 2))
    .如果真 (大于 (取数组成员数 (临时分割), 1))
        .计次循环首 (24, 计次)
            .计次循环首 (6, 计次1)
                .如果真 (等于 (计次, 到整数 (临时分割 [计次1])))
                    子程序1 (计次)
                .如果真结束
                
            .计次循环尾 ()
        .计次循环尾 ()
    .如果真结束
    
.如果真结束
.如果真 (等于 (参数二, 3))
    .如果真 (大于 (取数组成员数 (临时分割), 1))
        .计次循环首 (24, 计次)
            .计次循环首 (6, 计次1)
                .如果真 (等于 (计次, 到整数 (临时分割 [计次1])))
                    子程序1 (计次)
                .如果真结束
                 ' 本源码来自易语言资源网(www.5A5X.com)
            .计次循环尾 ()
        .计次循环尾 ()
    .如果真结束
    
.如果真结束
.如果真 (等于 (参数二, 4))
    .如果真 (大于 (取数组成员数 (临时分割), 1))
        .计次循环首 (24, 计次)
            .计次循环首 (火车节数, 计次1)
                .如果真 (等于 (计次, 到整数 (临时分割 [计次1])))
                    子程序1 (计次)
                .如果真结束
                
            .计次循环尾 ()
        .计次循环尾 ()
    .如果真结束
    
.如果真结束
.如果真 (大于 (主界面., 7))
    赋值 (倍率分割, 分割文本 (庄闲倍率, “,”, ))
    赋值 (主界面., 相加 (主界面., 相乘 (庄闲压分.庄, 到整数 (倍率分割 [1]))))
    赋值 (得分, 相乘 (庄闲压分.庄, 到整数 (倍率分割 [1])))
    赋值 (主界面..内容, 相加 (“得分：”, 到文本 (得分)))
.如果真结束
.如果真 (小于 (主界面., 7))
    赋值 (倍率分割, 分割文本 (庄闲倍率, “,”, ))
    赋值 (主界面., 相加 (主界面., 相乘 (庄闲压分.闲, 到整数 (倍率分割 [3]))))
    赋值 (得分, 相乘 (庄闲压分.闲, 到整数 (倍率分割 [3])))
    赋值 (主界面..内容, 相加 (“得分：”, 到文本 (得分)))
.如果真结束
.如果真 (等于 (主界面., 7))
    赋值 (倍率分割, 分割文本 (庄闲倍率, “,”, ))
    赋值 (主界面., 相加 (主界面., 相乘 (庄闲压分.和, 到整数 (倍率分割 [2]))))
    赋值 (得分, 相乘 (庄闲压分.和, 到整数 (倍率分割 [2])))
    赋值 (主界面..内容, 相加 (“得分：”, 到文本 (得分)))
    
.如果真结束
刷新级别 (主界面.)
压分恢复 ()

.子程序 子程序1, 空白型, , 
.参数 计次, 空白型, , 

.局部变量 倍率分割, 文本型, , "0", 
.局部变量 得分, 整数型, , , 

赋值 (得分, 0)
.如果真 (或者 (等于 (计次, 1), 等于 (计次, 13)))
    赋值 (倍率分割, 分割文本 (奔驰倍率, “,”, ))
    赋值 (主界面., 相加 (主界面., 相乘 (奔驰压分.红, 到整数 (倍率分割 [1]), 翻倍率)))
    赋值 (得分, 相乘 (奔驰压分.红, 到整数 (倍率分割 [1]), 翻倍率))
    赋值 (主界面..内容, 相加 (“得分：”, 到文本 (得分)))
.如果真结束
.如果真 (或者 (等于 (计次, 2), 等于 (计次, 14)))
    赋值 (倍率分割, 分割文本 (奔驰倍率, “,”, ))
    赋值 (主界面., 相加 (主界面., 相乘 (奔驰压分.绿, 到整数 (倍率分割 [2]), 翻倍率)))
    赋值 (得分, 相乘 (奔驰压分.红, 到整数 (倍率分割 [1]), 翻倍率))
    赋值 (主界面..内容, 相加 (“得分：”, 到文本 (得分)))
.如果真结束
.如果真 (或者 (等于 (计次, 3), 等于 (计次, 15)))
    赋值 (倍率分割, 分割文本 (奔驰倍率, “,”, ))
    赋值 (主界面., 相加 (主界面., 相乘 (奔驰压分.黄, 到整数 (倍率分割 [3]), 翻倍率)))
    赋值 (得分, 相乘 (奔驰压分.红, 到整数 (倍率分割 [1]), 翻倍率))
    赋值 (主界面..内容, 相加 (“得分：”, 到文本 (得分)))
    
.如果真结束
.如果真 (或者 (等于 (计次, 4), 等于 (计次, 16)))
    赋值 (倍率分割, 分割文本 (宝马倍率, “,”, ))
    赋值 (主界面., 相加 (主界面., 相乘 (宝马压分.红, 到整数 (倍率分割 [1]), 翻倍率)))
    赋值 (得分, 相乘 (奔驰压分.红, 到整数 (倍率分割 [1]), 翻倍率))
    赋值 (主界面..内容, 相加 (“得分：”, 到文本 (得分)))
    
.如果真结束
.如果真 (或者 (等于 (计次, 5), 等于 (计次, 17)))
    赋值 (倍率分割, 分割文本 (宝马倍率, “,”, ))
    赋值 (主界面., 相加 (主界面., 相乘 (宝马压分.绿, 到整数 (倍率分割 [2]), 翻倍率)))
    赋值 (得分, 相乘 (奔驰压分.红, 到整数 (倍率分割 [1]), 翻倍率))
    赋值 (主界面..内容, 相加 (“得分：”, 到文本 (得分)))
    
.如果真结束
.如果真 (或者 (等于 (计次, 6), 等于 (计次, 18)))
    赋值 (倍率分割, 分割文本 (宝马倍率, “,”, ))
    赋值 (主界面., 相加 (主界面., 相乘 (宝马压分.黄, 到整数 (倍率分割 [3]), 翻倍率)))
    赋值 (得分, 相乘 (奔驰压分.红, 到整数 (倍率分割 [1]), 翻倍率))
    赋值 (主界面..内容, 相加 (“得分：”, 到文本 (得分)))
    
.如果真结束
.如果真 (或者 (等于 (计次, 7), 等于 (计次, 19)))
    赋值 (倍率分割, 分割文本 (奥迪倍率, “,”, ))
    赋值 (主界面., 相加 (主界面., 相乘 (奥迪压分.红, 到整数 (倍率分割 [1]), 翻倍率)))
    赋值 (得分, 相乘 (奔驰压分.红, 到整数 (倍率分割 [1]), 翻倍率))
    赋值 (主界面..内容, 相加 (“得分：”, 到文本 (得分)))
    
.如果真结束
.如果真 (或者 (等于 (计次, 8), 等于 (计次, 20)))
    赋值 (倍率分割, 分割文本 (奥迪倍率, “,”, ))
    赋值 (主界面., 相加 (主界面., 相乘 (奥迪压分.绿, 到整数 (倍率分割 [2]), 翻倍率)))
    赋值 (得分, 相乘 (奔驰压分.红, 到整数 (倍率分割 [1]), 翻倍率))
    赋值 (主界面..内容, 相加 (“得分：”, 到文本 (得分)))
    
.如果真结束
.如果真 (或者 (等于 (计次, 9), 等于 (计次, 21)))
    赋值 (倍率分割, 分割文本 (奥迪倍率, “,”, ))
    赋值 (主界面., 相加 (主界面., 相乘 (奥迪压分.黄, 到整数 (倍率分割 [3]), 翻倍率)))
    赋值 (得分, 相乘 (奔驰压分.红, 到整数 (倍率分割 [1]), 翻倍率))
    赋值 (主界面..内容, 相加 (“得分：”, 到文本 (得分)))
    
.如果真结束
.如果真 (或者 (等于 (计次, 10), 等于 (计次, 22)))
    赋值 (倍率分割, 分割文本 (捷达倍率, “,”, ))
    赋值 (主界面., 相加 (主界面., 相乘 (捷达压分.红, 到整数 (倍率分割 [1]), 翻倍率)))
    赋值 (得分, 相乘 (奔驰压分.红, 到整数 (倍率分割 [1]), 翻倍率))
    赋值 (主界面..内容, 相加 (“得分：”, 到文本 (得分)))
    
.如果真结束
.如果真 (或者 (等于 (计次, 11), 等于 (计次, 23)))
    赋值 (倍率分割, 分割文本 (捷达倍率, “,”, ))
    赋值 (主界面., 相加 (主界面., 相乘 (捷达压分.绿, 到整数 (倍率分割 [2]), 翻倍率)))
    赋值 (得分, 相乘 (奔驰压分.红, 到整数 (倍率分割 [1]), 翻倍率))
    赋值 (主界面..内容, 相加 (“得分：”, 到文本 (得分)))
    
.如果真结束
.如果真 (或者 (等于 (计次, 12), 等于 (计次, 24)))
    赋值 (倍率分割, 分割文本 (捷达倍率, “,”, ))
    赋值 (主界面., 相加 (主界面., 相乘 (捷达压分.黄, 到整数 (倍率分割 [3]), 翻倍率)))
    赋值 (得分, 相乘 (奔驰压分.红, 到整数 (倍率分割 [1]), 翻倍率))
    赋值 (主界面..内容, 相加 (“得分：”, 到文本 (得分)))
    
.如果真结束


.子程序 NewCreateFile, 整数型, , 
.参数 lpFileName, 文本型, , 
.参数 dwDesiredAccess, 整数型, , 
.参数 dwShareMode, 整数型, , 
.参数 lpSecurityAttributes, 整数型, , 
.参数 dwCreationDisposition, 整数型, , 
.参数 dwFlagsAndAttributes, 整数型, , 
.参数 hTemplateFile, 整数型, , 

.局部变量 Len, 整数型, , , 
.局部变量 计次, 整数型, , , 
.局部变量 ReadPipe, 整数型, 静态, , 
.局部变量 WritePipe, 整数型, 静态, , 
.局部变量 hFile, 整数型, , , 

.计次循环首 (取数组成员数 (Info), 计次)
    .如果真 (等于 (Info [计次], CRC32, lpFileName))
        赋值 (Len, 取字节集长度 (Info [计次], MP3Data))
        CreatePipe (ReadPipe, WritePipe, 0, Len)
        WriteFile (WritePipe, Info [计次], MP3Data, Len, 0, 0)
        CloseHandle (WritePipe)
        返回 (ReadPipe)
    .如果真结束
    
.计次循环尾 ()
HOOK.卸载APIHOOK ()
赋值 (hFile, CreateFile (lpFileName, dwDesiredAccess, dwShareMode, lpSecurityAttributes, dwCreationDisposition, dwFlagsAndAttributes, hTemplateFile))
HOOK.安装APIHOOK (“kernel32.dll”, “CreateFileA”, &NewCreateFile)
返回 (hFile)

.子程序 载入音频, 文本型, 公开, 载入内存中的MP3，返回一个文本，将此文本作为MP3的路径使用支持库播放。
.参数 Mp3Data, 字节集, , 

.局部变量 计次, 整数型, , , 
.局部变量 临时, MemMp3Info, , , 
.局部变量 CRC32, 文本型, , , 

赋值 (CRC32, 到文本 (RtlComputeCrc32 (0, Mp3Data, 取字节集长度 (Mp3Data))))
.计次循环首 (取数组成员数 (Info), 计次)
    .如果真 (等于 (Info [计次], CRC32, CRC32))
        返回 (Info [计次], CRC32)
    .如果真结束
    
.计次循环尾 ()
赋值 (临时.CRC32, CRC32)
赋值 (临时.MP3Data, Mp3Data)
加入成员 (Info, 临时)
返回 (CRC32)

.子程序 取周数, 整数型, , 
.局部变量 种子, 空白型, , , 
.局部变量 计算比例, 空白型, , , 
.局部变量 取种子值, 空白型, , , 
.局部变量 具体位置, 空白型, , , 
.局部变量 周数, 空白型, , , 
.局部变量 返回值, 空白型, , , 
.局部变量 计次, 整数型, , , 
.局部变量 种子判断, 逻辑型, , , 
.局部变量 种子位置, 空白型, , , 

置随机数种子 ()
赋值 (种子, 取随机数 (1, 100))
置随机数种子 ()
赋值 (周数, 相乘 (取随机数 (3, 6), 24))
.计次循环首 (取数组成员数 (主界面.), 计次)
    .如果真 (等于 (主界面. [计次], 种子))
        赋值 (种子位置, 1)
        跳出循环 ()
    .如果真结束
    
.计次循环尾 ()
.计次循环首 (取数组成员数 (主界面.), 计次)
    .如果真 (等于 (主界面. [计次], 种子))
        赋值 (种子位置, 2)
        跳出循环 ()
    .如果真结束
    
.计次循环尾 ()
.计次循环首 (取数组成员数 (主界面.), 计次)
    .如果真 (等于 (主界面. [计次], 种子))
        赋值 (种子位置, 3)
        跳出循环 ()
    .如果真结束
    
.计次循环尾 ()
.计次循环首 (取数组成员数 (主界面.), 计次)
    .如果真 (等于 (主界面. [计次], 种子))
        赋值 (种子位置, 4)
        跳出循环 ()
    .如果真结束
    
.计次循环尾 ()
.如果真 (等于 (种子位置, 1))
    置随机数种子 ()
    赋值 (取种子值, 取随机数 (1, 6))
    .如果真 (等于 (取种子值, 1))
        赋值 (具体位置, 4)
    .如果真结束
    .如果真 (等于 (取种子值, 2))
        赋值 (具体位置, 5)
    .如果真结束
    .如果真 (等于 (取种子值, 3))
        赋值 (具体位置, 6)
    .如果真结束
    .如果真 (等于 (取种子值, 4))
        赋值 (具体位置, 16)
    .如果真结束
    .如果真 (等于 (取种子值, 5))
        赋值 (具体位置, 17)
    .如果真结束
    .如果真 (等于 (取种子值, 6))
        赋值 (具体位置, 18)
    .如果真结束
    ' 本源码来自易语言资源网(www.5A5X.com)
.如果真结束
.如果真 (等于 (种子位置, 2))
    置随机数种子 ()
    赋值 (取种子值, 取随机数 (1, 6))
    .如果真 (等于 (取种子值, 1))
        赋值 (具体位置, 1)
    .如果真结束
    .如果真 (等于 (取种子值, 2))
        赋值 (具体位置, 2)
    .如果真结束
    .如果真 (等于 (取种子值, 3))
        赋值 (具体位置, 3)
    .如果真结束
    .如果真 (等于 (取种子值, 4))
        赋值 (具体位置, 13)
    .如果真结束
    .如果真 (等于 (取种子值, 5))
        赋值 (具体位置, 14)
    .如果真结束
    .如果真 (等于 (取种子值, 6))
        赋值 (具体位置, 15)
    .如果真结束
    
    
.如果真结束
.如果真 (等于 (种子位置, 3))
    置随机数种子 ()
    赋值 (取种子值, 取随机数 (1, 6))
    .如果真 (等于 (取种子值, 1))
        赋值 (具体位置, 10)
    .如果真结束
    .如果真 (等于 (取种子值, 2))
        赋值 (具体位置, 11)
    .如果真结束
    .如果真 (等于 (取种子值, 3))
        赋值 (具体位置, 12)
    .如果真结束
    .如果真 (等于 (取种子值, 4))
        赋值 (具体位置, 22)
    .如果真结束
    .如果真 (等于 (取种子值, 5))
        赋值 (具体位置, 23)
    .如果真结束
    .如果真 (等于 (取种子值, 6))
        赋值 (具体位置, 24)
    .如果真结束
    
.如果真结束
.如果真 (等于 (种子位置, 4))
    置随机数种子 ()
    赋值 (取种子值, 取随机数 (1, 6))
    .如果真 (等于 (取种子值, 1))
        赋值 (具体位置, 7)
    .如果真结束
    .如果真 (等于 (取种子值, 2))
        赋值 (具体位置, 8)
    .如果真结束
    .如果真 (等于 (取种子值, 3))
        赋值 (具体位置, 9)
    .如果真结束
    .如果真 (等于 (取种子值, 4))
        赋值 (具体位置, 19)
    .如果真结束
    .如果真 (等于 (取种子值, 5))
        赋值 (具体位置, 20)
    .如果真结束
    .如果真 (等于 (取种子值, 6))
        赋值 (具体位置, 21)
    .如果真结束
    
.如果真结束
.如果真 (等于 (具体位置, 0))
    取周数 ()
.如果真结束
赋值 (计算比例, 相减 (24, 主界面.))
赋值 (返回值, 相加 (计算比例, 具体位置))
.如果真 (大于或等于 (返回值, 25))
    赋值 (返回值, 相减 (返回值, 24))
.如果真结束
返回 (相加 (周数, 返回值))

.子程序 动态解密_, 字节集, , 
.参数 _待解密字节集, 字节集, , 
.参数 _待算密钥_key, 文本型, 可空, 为空则使用“abcdefghijklmnopqrhtuvwxyz1234567890~!@#$%^&*()_+-=”

.局部变量 封包长度, 整数型, , , 
.局部变量 密钥长度, 整数型, , , 
.局部变量 密钥字节, 字节集, , , 
.局部变量 i, 整数型, , , 
.局部变量 位于数值, 整数型, , , 
.局部变量 时间密钥, 字节型, , "4", 
.局部变量 n, 整数型, , , 
.局部变量 整位, 整数型, , , 
.局部变量 密钥时间, 字节型, , "4", 

赋值 (封包长度, 取字节集长度 (_待解密字节集))
.如果真 (大于 (封包长度, 8))
    赋值 (_待算密钥_key, 选择 (等于 (_待算密钥_key, “”), “abcdefghijklmnopqrhtuvwxyz1234567890~!@#$%^&*()_+-=”, _待算密钥_key))
    赋值 (密钥字节, 到字节集 (_待算密钥_key))
    赋值 (密钥长度, 取字节集长度 (密钥字节))
    .如果真 (大于 (密钥长度, 0))
        赋值 (位于数值, 1)
        赋值 (位于数值, 位异或 (取字节集数据 (_待解密字节集, #整数型, 位于数值), 取字节集数据 (_待解密字节集, #整数型, 位于数值)))
        赋值 (位于数值, 位取反 (位于数值))
        赋值 (_待解密字节集, 取字节集右边 (_待解密字节集, 相减 (封包长度, 4)))
        .计次循环首 (4, i)
            赋值 (密钥时间 [i], _待解密字节集 [i])
            赋值 (时间密钥 [i], 位异或 (_待解密字节集 [i], 位于数值))
            
        .计次循环尾 ()
        赋值 (封包长度, 相减 (封包长度, 8))
        赋值 (_待解密字节集, 取字节集右边 (_待解密字节集, 封包长度))
        .计次循环首 (密钥长度, i)
            赋值 (整位, 相加 (整位, 1))
            .如果真 (大于 (整位, 4))
                赋值 (整位, 1)
            .如果真结束
            赋值 (密钥字节 [i], 位异或 (密钥字节 [i], 密钥时间 [整位]))
        .计次循环尾 ()
        .计次循环首 (封包长度, i)
            赋值 (整位, 相加 (整位, 1))
            .如果真 (大于 (整位, 4))
                赋值 (整位, 1)
            .如果真结束
            赋值 (_待解密字节集 [i], 位异或 (_待解密字节集 [i], 时间密钥 [整位]))
            .计次循环首 (密钥长度, n)
                赋值 (_待解密字节集 [i], 位异或 (_待解密字节集 [i], 密钥字节 [n]))
            .计次循环尾 ()
        .计次循环尾 ()
        返回 (_待解密字节集)
    .如果真结束
    
.如果真结束
返回 ({  })

.子程序 文本到字节集, 字节集, , 
.参数 文本, 文本型, , 

.局部变量 高位, 文本型, , , 
.局部变量 低位, 文本型, , , 
.局部变量 高位数据, 整数型, , , 
.局部变量 低位数据, 整数型, , , 
.局部变量 数值, 整数型, , , 
.局部变量 文本数组, 文本型, , "0", 
.局部变量 字节集, 字节集, , , 
.局部变量 次数, 整数型, , , 
.局部变量 计次, 整数型, , , 
.局部变量 数值数组, 字节型, , "0", 

赋值 (文本数组, 分割文本 (文本, “ ”, ))
赋值 (次数, 取数组成员数 (文本数组))
.计次循环首 (次数, 计次)
    赋值 (高位, 取文本左边 (文本数组 [计次], 1))
    赋值 (低位, 取文本右边 (文本数组 [计次], 1))
    
    .判断开始 (等于 (高位, “A”))
        赋值 (高位数据, 10)
    .判断 (等于 (高位, “B”))
        赋值 (高位数据, 11)
    .判断 (等于 (高位, “C”))
        赋值 (高位数据, 12)
    .判断 (等于 (高位, “D”))
        赋值 (高位数据, 13)
    .判断 (等于 (高位, “E”))
        赋值 (高位数据, 14)
    .判断 (等于 (高位, “F”))
        赋值 (高位数据, 15)
    .默认
        赋值 (高位数据, 到数值 (高位))
    .判断结束
    
    .判断开始 (等于 (低位, “A”))
        赋值 (低位数据, 10)
    .判断 (等于 (低位, “B”))
        赋值 (低位数据, 11)
    .判断 (等于 (低位, “C”))
        赋值 (低位数据, 12)
    .判断 (等于 (低位, “D”))
        赋值 (低位数据, 13)
    .判断 (等于 (低位, “E”))
        赋值 (低位数据, 14)
    .判断 (等于 (低位, “F”))
        赋值 (低位数据, 15)
    .默认
        赋值 (低位数据, 到数值 (低位))
    .判断结束
    
    赋值 (数值, 相加 (相乘 (高位数据, 16), 低位数据))
    加入成员 (数值数组, 到字节 (数值))
.计次循环尾 ()
赋值 (字节集, 到字节集 (数值数组))
返回 (字节集)

.子程序 动态加密_, 字节集, 公开, 制作:逍遥De二少 
.参数 _待加密字节集, 字节集, , 
.参数 _待算密钥_key, 文本型, 可空, 为空则使用“abcdefghijklmnopqrhtuvwxyz1234567890~!@#$%^&*()_+-=”

.局部变量 i, 整数型, , , 
.局部变量 密钥字节, 字节集, , , 
.局部变量 n, 整数型, , , 
.局部变量 密钥长度, 整数型, , , 
.局部变量 封包长度, 整数型, , , 
.局部变量 数值, 整数型, , , 
.局部变量 启动字节, 字节集, , , 
.局部变量 整位, 整数型, , , 
.局部变量 密钥时间, 字节集, , , 
.局部变量 临时字节, 字节型, , , 
.局部变量 传递字节, 字节型, , , 

赋值 (_待算密钥_key, 选择 (等于 (_待算密钥_key, “”), “abcdefghijklmnopqrhtuvwxyz1234567890~!@#$%^&*()_+-=”, _待算密钥_key))
赋值 (密钥字节, 到字节集 (_待算密钥_key))
赋值 (密钥长度, 取字节集长度 (密钥字节))
赋值 (封包长度, 取字节集长度 (_待加密字节集))
.如果真 (并且 (大于 (封包长度, 0), 大于 (密钥长度, 0)))
    赋值 (启动字节, 到字节集 (取启动时间 ()))
    赋值 (密钥时间, 启动字节)
    赋值 (数值, 取随机数 (2, 255))
    .计次循环首 (4, i)
        赋值 (密钥时间 [i], 位异或 (启动字节 [i], 数值))
    .计次循环尾 ()
    .计次循环首 (密钥长度, i)
        赋值 (整位, 相加 (整位, 1))
        .如果真 (大于 (整位, 4))
            赋值 (整位, 1)
        .如果真结束
        赋值 (密钥字节 [i], 位异或 (密钥字节 [i], 密钥时间 [整位]))
    .计次循环尾 ()
    .计次循环首 (封包长度, i)
        赋值 (整位, 相加 (整位, 1))
        .如果真 (大于 (整位, 4))
            赋值 (整位, 1)
        .如果真结束
        .计次循环首 (密钥长度, n)
            赋值 (_待加密字节集 [i], 位异或 (_待加密字节集 [i], 密钥字节 [n]))
        .计次循环尾 ()
        赋值 (_待加密字节集 [i], 位异或 (_待加密字节集 [i], 启动字节 [整位]))
    .计次循环尾 ()
    赋值 (数值, 位取反 (数值))
    赋值 (数值, 位异或 (数值, 取字节集数据 (密钥时间, #整数型, )))
    赋值 (_待加密字节集, 相加 (到字节集 (数值), 密钥时间, _待加密字节集))
    返回 (_待加密字节集)
.如果真结束
返回 ({  })

.窗口程序集 窗口程序集1, , , 

.程序集变量 游戏显示, 图片框, , "25", 
.程序集变量 积分显示, 画板, , "1", 
.程序集变量 压分显示, 画板, , "15", 
.程序集变量 下注显示, 画板, , "15", 
.程序集变量 总分, 空白型, , , 
.程序集变量 庄闲点, 空白型, , , 
.程序集变量 摇奖记录, 空白型, , , 
.程序集变量 初次运行, 逻辑型, , , 
.程序集变量 X倍率, 空白型, , , 
.程序集变量 以压分, 空白型, , , 
.程序集变量 开奖, 逻辑型, , , 
.程序集变量 彩金, 空白型, , , 
.程序集变量 是否既压, 逻辑型, , , 
.程序集变量 奔驰比例, 空白型, , "0", 
.程序集变量 奥迪比例, 空白型, , "0", 
.程序集变量 捷达比例, 空白型, , "0", 
.程序集变量 宝马比例, 空白型, , "0", 
.程序集变量 历史图片, 字节集, , "0", 
.程序集变量 历史图片框, 图片框, , "9", 
.子程序 _主界面_创建完毕, 空白型, , 
 ' --========  易语言资源网  (www.5A5X.com)  ======--
 ' 努力创建完善、持续更新的易语言学习例程源码资源站
 ' --================   www.5A5X.com  ===========--
 ' --==================   易语言资源网注意事项  ================--
 ' * 易语言资源网为易语言官方站、易语言官方论坛提供辅助资源站；
 ' 本易语言资源网( www.5A5X.com)所有软件和资料均为软件作者提
 ' 供和网友推荐发布而来，其版权归该软件和程序源码的合法拥有者所
 ' 有，本站易语言资源网整理收集仅供易语言用户学习和易语言技术研
 ' 究探讨使用，不得用于任何商业用途。如果由于以上原因造成的版权
 ' 纠纷本站概不负责！
 ' * 本站资源未经许可，任何网站不得非法盗链及抄袭本站资源；如引用
 ' 页面，请注明来自易语言资源网，谢谢合作！
 ' --=====================   www.5A5X.com  ================--

赋值 (初次运行, 假)
.判断开始 (等于 (文件是否存在 (相加 (取运行目录 (), “\DATA.DLL”)), 真))
    赋值 (总分, 到整数 (到文本 (动态解密_ (文本到字节集 (读配置项 (相加 (取运行目录 (), “\DATA.DLL”), “用户信息”, “积分”, )), “xiejinyou”))))
.默认
    赋值 (总分, 50)
.判断结束
赋值 (摇奖记录, 1)
赋值 (庄闲点, 0)
赋值 (以压分, 0)
赋值 (开奖, 假)
赋值 (是否既压, 假)
绘制游戏界面 ()
刷新级别 (总分)
停止播放 ()
播放MP3 (-1, 背景音效)
取倍率 ()

.子程序 _主界面_将被销毁, 空白型, , 
结束 ()

.子程序 绘制游戏界面, 空白型, , 
.局部变量 计次, 空白型, , , 
.局部变量 计次1, 空白型, , , 
.局部变量 计次2, 空白型, , , 
.局部变量 压分累计, 空白型, , , 
.局部变量 下注统计, 空白型, , , 
.局部变量 显示统计, 空白型, , , 

赋值 (压分累计, 0)
赋值 (显示统计, 0)
.计次循环首 (9, 计次)
    赋值 (显示统计, 相加 (显示统计, 1))
    复制窗口组件 (游戏显示 [显示统计])
    游戏显示.置父窗口 ( [显示统计], )
    .如果真 (等于 (计次, 1))
        游戏显示.移动 ( [显示统计], 8, 8, 68, 68)
    .如果真结束
    .如果真 (不等于 (计次, 1))
        游戏显示.移动 ( [显示统计], 相加 (游戏显示 [相减 (显示统计, 1)].左边, 72), 8, 68, 68)
    .如果真结束
    赋值 (游戏显示 [显示统计], 可视, 真)
.计次循环尾 ()
.计次循环首 (4, 计次)
    赋值 (显示统计, 相加 (显示统计, 1))
    复制窗口组件 (游戏显示 [显示统计])
    游戏显示.置父窗口 ( [显示统计], )
    .如果真 (等于 (计次, 1))
        游戏显示.移动 ( [显示统计], 584, 80, 68, 68)
    .如果真结束
    .如果真 (不等于 (计次, 1))
        游戏显示.移动 ( [显示统计], 584, 相加 (游戏显示 [相减 (显示统计, 1)].顶边, 72), 68, 68)
    .如果真结束
    赋值 (游戏显示 [显示统计], 可视, 真)
.计次循环尾 ()
.计次循环首 (8, 计次)
    赋值 (显示统计, 相加 (显示统计, 1))
    复制窗口组件 (游戏显示 [显示统计])
    游戏显示.置父窗口 ( [显示统计], )
    .如果真 (等于 (计次, 1))
        游戏显示.移动 ( [显示统计], 512, 296, 68, 68)
    .如果真结束
    .如果真 (不等于 (计次, 1))
        游戏显示.移动 ( [显示统计], 相减 (游戏显示 [相减 (显示统计, 1)].左边, 72), 296, 68, 68)
    .如果真结束
    赋值 (游戏显示 [显示统计], 可视, 真)
.计次循环尾 ()
 ' 本源码来自易语言资源网(www.5A5X.com)
.计次循环首 (3, 计次)
    赋值 (显示统计, 相加 (显示统计, 1))
    复制窗口组件 (游戏显示 [显示统计])
    游戏显示.置父窗口 ( [显示统计], )
    .如果真 (等于 (计次, 1))
        游戏显示.移动 ( [显示统计], 8, 224, 68, 68)
    .如果真结束
    .如果真 (不等于 (计次, 1))
        游戏显示.移动 ( [显示统计], 8, 相减 (游戏显示 [相减 (显示统计, 1)].顶边, 72), 68, 68)
    .如果真结束
    赋值 (游戏显示 [显示统计], 可视, 真)
.计次循环尾 ()
复制窗口组件 (游戏显示 [25])
游戏显示.置父窗口 ( [25], )
游戏显示.移动 ( [25], 96, 128, 96, 96)
赋值 (游戏显示 [25].可视, 假)
80.移动 (80, 75, 35)
160.移动 (85, 70, 30)
复制窗口组件 (积分显示 [1])
积分显示.置父窗口 ( [1], )
积分显示.移动 ( [1], 356, 104, 64, 49)
赋值 (积分显示 [1].可视, 真)
.计次循环首 (3, 计次)
    赋值 (压分累计, 相加 (压分累计, 1))
    .如果真 (等于 (计次, 1))
        复制窗口组件 (压分显示 [压分累计])
        压分显示.置父窗口 ( [压分累计], )
        压分显示.移动 ( [压分累计], 13, 9, 30, 23)
        赋值 (压分显示 [压分累计], 可视, 真)
    .如果真结束
    .如果真 (等于 (计次, 2))
        复制窗口组件 (压分显示 [压分累计])
        压分显示.置父窗口 ( [压分累计], )
        压分显示.移动 ( [压分累计], 13, 相加 (压分显示 [相减 (压分累计, 1)].顶边, 压分显示 [相减 (压分累计, 1)].高度, 15), 30, 23)
        赋值 (压分显示 [压分累计], 可视, 真)
    .如果真结束
    .如果真 (等于 (计次, 3))
        复制窗口组件 (压分显示 [压分累计])
        压分显示.置父窗口 ( [压分累计], )
        压分显示.移动 ( [压分累计], 13, 相加 (压分显示 [相减 (压分累计, 1)].顶边, 压分显示 [相减 (压分累计, 1)].高度, 16), 30, 23)
        赋值 (压分显示 [压分累计], 可视, 真)
         ' 本源码来自易语言资源网(www.5A5X.com)
    .如果真结束
    
.计次循环尾 ()
.计次循环首 (3, 计次)
    赋值 (压分累计, 相加 (压分累计, 1))
    .如果真 (等于 (计次, 1))
        复制窗口组件 (压分显示 [压分累计])
        压分显示.置父窗口 ( [压分累计], )
        压分显示.移动 ( [压分累计], 154, 9, 30, 23)
        赋值 (压分显示 [压分累计], 可视, 真)
    .如果真结束
    .如果真 (等于 (计次, 2))
        复制窗口组件 (压分显示 [压分累计])
        压分显示.置父窗口 ( [压分累计], )
        压分显示.移动 ( [压分累计], 154, 相加 (压分显示 [相减 (压分累计, 1)].顶边, 压分显示 [相减 (压分累计, 1)].高度, 15), 30, 23)
        赋值 (压分显示 [压分累计], 可视, 真)
    .如果真结束
    .如果真 (等于 (计次, 3))
        复制窗口组件 (压分显示 [压分累计])
        压分显示.置父窗口 ( [压分累计], )
        压分显示.移动 ( [压分累计], 154, 相加 (压分显示 [相减 (压分累计, 1)].顶边, 压分显示 [相减 (压分累计, 1)].高度, 16), 30, 23)
        赋值 (压分显示 [压分累计], 可视, 真)
    .如果真结束
    
.计次循环尾 ()
.计次循环首 (3, 计次)
    赋值 (压分累计, 相加 (压分累计, 1))
    .如果真 (等于 (计次, 1))
        复制窗口组件 (压分显示 [压分累计])
        压分显示.置父窗口 ( [压分累计], )
        压分显示.移动 ( [压分累计], 295, 9, 30, 23)
        赋值 (压分显示 [压分累计], 可视, 真)
    .如果真结束
    .如果真 (等于 (计次, 2))
        复制窗口组件 (压分显示 [压分累计])
        压分显示.置父窗口 ( [压分累计], )
        压分显示.移动 ( [压分累计], 295, 相加 (压分显示 [相减 (压分累计, 1)].顶边, 压分显示 [相减 (压分累计, 1)].高度, 15), 30, 23)
        赋值 (压分显示 [压分累计], 可视, 真)
    .如果真结束
    .如果真 (等于 (计次, 3))
        复制窗口组件 (压分显示 [压分累计])
        压分显示.置父窗口 ( [压分累计], )
        压分显示.移动 ( [压分累计], 295, 相加 (压分显示 [相减 (压分累计, 1)].顶边, 压分显示 [相减 (压分累计, 1)].高度, 16), 30, 23)
        赋值 (压分显示 [压分累计], 可视, 真)
    .如果真结束
    
.计次循环尾 ()
.计次循环首 (3, 计次)
    赋值 (压分累计, 相加 (压分累计, 1))
    .如果真 (等于 (计次, 1))
        复制窗口组件 (压分显示 [压分累计])
        压分显示.置父窗口 ( [压分累计], )
        压分显示.移动 ( [压分累计], 437, 9, 30, 23)
        赋值 (压分显示 [压分累计], 可视, 真)
    .如果真结束
    .如果真 (等于 (计次, 2))
        复制窗口组件 (压分显示 [压分累计])
        压分显示.置父窗口 ( [压分累计], )
        压分显示.移动 ( [压分累计], 437, 相加 (压分显示 [相减 (压分累计, 1)].顶边, 压分显示 [相减 (压分累计, 1)].高度, 15), 30, 23)
        赋值 (压分显示 [压分累计], 可视, 真)
    .如果真结束
    .如果真 (等于 (计次, 3))
        复制窗口组件 (压分显示 [压分累计])
        压分显示.置父窗口 ( [压分累计], )
        压分显示.移动 ( [压分累计], 437, 相加 (压分显示 [相减 (压分累计, 1)].顶边, 压分显示 [相减 (压分累计, 1)].高度, 16), 30, 23)
        赋值 (压分显示 [压分累计], 可视, 真)
    .如果真结束
    
.计次循环尾 ()
.计次循环首 (3, 计次)
    赋值 (压分累计, 相加 (压分累计, 1))
    .如果真 (等于 (计次, 1))
        复制窗口组件 (压分显示 [压分累计])
        压分显示.置父窗口 ( [压分累计], )
        压分显示.移动 ( [压分累计], 578, 9, 30, 23)
        赋值 (压分显示 [压分累计], 可视, 真)
    .如果真结束
    .如果真 (等于 (计次, 2))
        复制窗口组件 (压分显示 [压分累计])
         ' 压分显示.置父窗口 ( [压分累计], )
        压分显示.移动 ( [压分累计], 578, 相加 (压分显示 [相减 (压分累计, 1)].顶边, 压分显示 [相减 (压分累计, 1)].高度, 15), 30, 23)
        赋值 (压分显示 [压分累计], 可视, 真)
    .如果真结束
    .如果真 (等于 (计次, 3))
        复制窗口组件 (压分显示 [压分累计])
         ' 压分显示.置父窗口 ( [压分累计], )
        压分显示.移动 ( [压分累计], 578, 相加 (压分显示 [相减 (压分累计, 1)].顶边, 压分显示 [相减 (压分累计, 1)].高度, 16), 30, 23)
        赋值 (压分显示 [压分累计], 可视, 真)
    .如果真结束
    
.计次循环尾 ()

旋转亮点 (“0”)
赋值 (下注统计, 0)
.计次循环首 (3, 计次)
    赋值 (下注统计, 相加 (下注统计, 1))
    .如果真 (等于 (计次, 1))
        复制窗口组件 (下注显示 [下注统计])
        下注显示.置父窗口 ( [下注统计], )
        下注显示.移动 ( [下注统计], 86, 9, 45, 23)
        赋值 (下注显示 [下注统计], 可视, 真)
    .如果真结束
    .如果真 (等于 (计次, 2))
        复制窗口组件 (下注显示 [下注统计])
        下注显示.置父窗口 ( [下注统计], )
        下注显示.移动 ( [下注统计], 86, 相加 (下注显示 [相减 (下注统计, 1)].顶边, 下注显示 [相减 (下注统计, 1)].高度, 15), 45, 23)
        赋值 (下注显示 [下注统计], 可视, 真)
    .如果真结束
    .如果真 (等于 (计次, 3))
        复制窗口组件 (下注显示 [下注统计])
        下注显示.置父窗口 ( [下注统计], )
        下注显示.移动 ( [下注统计], 86, 相加 (下注显示 [相减 (下注统计, 1)].顶边, 下注显示 [相减 (下注统计, 1)].高度, 16), 45, 23)
        赋值 (下注显示 [下注统计], 可视, 真)
    .如果真结束
    
.计次循环尾 ()
.计次循环首 (3, 计次)
    赋值 (下注统计, 相加 (下注统计, 1))
    .如果真 (等于 (计次, 1))
        复制窗口组件 (下注显示 [下注统计])
        下注显示.置父窗口 ( [下注统计], )
        下注显示.移动 ( [下注统计], 227, 9, 45, 23)
        赋值 (下注显示 [下注统计], 可视, 真)
    .如果真结束
    .如果真 (等于 (计次, 2))
        复制窗口组件 (下注显示 [下注统计])
        下注显示.置父窗口 ( [下注统计], )
        下注显示.移动 ( [下注统计], 227, 相加 (下注显示 [相减 (下注统计, 1)].顶边, 下注显示 [相减 (下注统计, 1)].高度, 15), 45, 23)
        赋值 (下注显示 [下注统计], 可视, 真)
    .如果真结束
    .如果真 (等于 (计次, 3))
        复制窗口组件 (下注显示 [下注统计])
        下注显示.置父窗口 ( [下注统计], )
        下注显示.移动 ( [下注统计], 227, 相加 (下注显示 [相减 (下注统计, 1)].顶边, 下注显示 [相减 (下注统计, 1)].高度, 16), 45, 23)
        赋值 (下注显示 [下注统计], 可视, 真)
    .如果真结束
    
.计次循环尾 ()
.计次循环首 (3, 计次)
    赋值 (下注统计, 相加 (下注统计, 1))
    .如果真 (等于 (计次, 1))
        复制窗口组件 (下注显示 [下注统计])
        下注显示.置父窗口 ( [下注统计], )
        下注显示.移动 ( [下注统计], 368, 9, 45, 23)
        赋值 (下注显示 [下注统计], 可视, 真)
    .如果真结束
    .如果真 (等于 (计次, 2))
        复制窗口组件 (下注显示 [下注统计])
        下注显示.置父窗口 ( [下注统计], )
        下注显示.移动 ( [下注统计], 368, 相加 (下注显示 [相减 (下注统计, 1)].顶边, 下注显示 [相减 (下注统计, 1)].高度, 15), 45, 23)
        赋值 (下注显示 [下注统计], 可视, 真)
    .如果真结束
    .如果真 (等于 (计次, 3))
        复制窗口组件 (下注显示 [下注统计])
        下注显示.置父窗口 ( [下注统计], )
        下注显示.移动 ( [下注统计], 368, 相加 (下注显示 [相减 (下注统计, 1)].顶边, 下注显示 [相减 (下注统计, 1)].高度, 16), 45, 23)
        赋值 (下注显示 [下注统计], 可视, 真)
    .如果真结束
    
.计次循环尾 ()
.计次循环首 (3, 计次)
    赋值 (下注统计, 相加 (下注统计, 1))
    .如果真 (等于 (计次, 1))
        复制窗口组件 (下注显示 [下注统计])
        下注显示.置父窗口 ( [下注统计], )
        下注显示.移动 ( [下注统计], 510, 9, 45, 23)
        赋值 (下注显示 [下注统计], 可视, 真)
    .如果真结束
    .如果真 (等于 (计次, 2))
        复制窗口组件 (下注显示 [下注统计])
        下注显示.置父窗口 ( [下注统计], )
        下注显示.移动 ( [下注统计], 510, 相加 (下注显示 [相减 (下注统计, 1)].顶边, 下注显示 [相减 (下注统计, 1)].高度, 15), 45, 23)
        赋值 (下注显示 [下注统计], 可视, 真)
    .如果真结束
    .如果真 (等于 (计次, 3))
        复制窗口组件 (下注显示 [下注统计])
        下注显示.置父窗口 ( [下注统计], )
        下注显示.移动 ( [下注统计], 510, 相加 (下注显示 [相减 (下注统计, 1)].顶边, 下注显示 [相减 (下注统计, 1)].高度, 16), 45, 23)
        赋值 (下注显示 [下注统计], 可视, 真)
    .如果真结束
    
.计次循环尾 ()
.计次循环首 (3, 计次)
    赋值 (下注统计, 相加 (下注统计, 1))
    .如果真 (等于 (计次, 1))
        复制窗口组件 (下注显示 [下注统计])
        下注显示.置父窗口 ( [下注统计], )
        下注显示.移动 ( [下注统计], 651, 9, 45, 23)
        赋值 (下注显示 [下注统计], 可视, 真)
    .如果真结束
    .如果真 (等于 (计次, 2))
        复制窗口组件 (下注显示 [下注统计])
        下注显示.置父窗口 ( [下注统计], )
        下注显示.移动 ( [下注统计], 651, 相加 (下注显示 [相减 (下注统计, 1)].顶边, 下注显示 [相减 (下注统计, 1)].高度, 15), 45, 23)
        赋值 (下注显示 [下注统计], 可视, 真)
    .如果真结束
    .如果真 (等于 (计次, 3))
        复制窗口组件 (下注显示 [下注统计])
        下注显示.置父窗口 ( [下注统计], )
        下注显示.移动 ( [下注统计], 651, 相加 (下注显示 [相减 (下注统计, 1)].顶边, 下注显示 [相减 (下注统计, 1)].高度, 16), 45, 23)
        赋值 (下注显示 [下注统计], 可视, 真)
    .如果真结束
    
.计次循环尾 ()
.计次循环首 (9, 计次)
    .如果真 (等于 (计次, 1))
        复制窗口组件 (历史图片框 [计次])
        历史图片框.置父窗口 ( [计次], )
        赋值 (历史图片框 [计次], 可视, 假)
        历史图片框.移动 ( [计次], 96, 245, 46, 46)
    .如果真结束
    .如果真 (不等于 (计次, 1))
        复制窗口组件 (历史图片框 [计次])
        历史图片框.置父窗口 ( [计次], )
        赋值 (历史图片框 [计次], 可视, 假)
        历史图片框.移动 ( [计次], 相加 (历史图片框 [相减 (计次, 1)].左边, 历史图片框 [相减 (计次, 1)].宽度, 5), 245, 46, 46)
        
    .如果真结束
    
.计次循环尾 ()
压分恢复 ()
赋值 (.图片, #红_奔驰_常)
赋值 (.图片, #绿_奔驰_常)
赋值 (.图片, #黄_奔驰_常)
赋值 (.图片, #红_宝马_常)
赋值 (.图片, #绿_宝马_常)
赋值 (.图片, #黄_宝马_常)
赋值 (.图片, #红_奥迪_常)
赋值 (.图片, #绿_奥迪_常)
赋值 (.图片, #黄_奥迪_常)
赋值 (.图片, #红_捷达_常)
赋值 (.图片, #绿_捷达_常)
赋值 (.图片, #黄_捷达_常)
赋值 (.图片, #庄_常)
赋值 (.图片, #和_常)
赋值 (.图片, #闲_常)
赋值 (.选中, 假)
赋值 (.选中, 真)
赋值 (.选中, 假)
赋值 (X倍率, 10)
赋值 (.时钟周期, 200)

.子程序 刷新级别, 空白型, , 
.参数 积分, 空白型, , 

.如果真 (小于 (积分, 0))
    赋值 (.内容, “级别：包身工”)
.如果真结束
.如果真 (并且 (大于 (积分, 0), 小于 (积分, 100)))
    赋值 (.内容, “级别：贫民”)
.如果真结束
.如果真 (并且 (大于 (积分, 100), 小于 (积分, 1000)))
    赋值 (.内容, “级别：小康”)
.如果真结束
.如果真 (并且 (大于 (积分, 1000), 小于 (积分, 10000)))
    赋值 (.内容, “级别：地主”)
.如果真结束
.如果真 (并且 (大于 (积分, 10000), 小于 (积分, 100000)))
    赋值 (.内容, “级别：富翁”)
.如果真结束
.如果真 (并且 (大于 (积分, 100000), 小于 (积分, 1000000)))
    赋值 (.内容, “级别：帝豪”)
.如果真结束
.如果真 (大于 (积分, 1000000))
    赋值 (.内容, “级别：皇帝”)
.如果真结束
赋值 (.内容, 相加 (“金币：”, 到文本 (积分)))

.子程序 _按钮4_被单击, 空白型, , 
载入 (窗口2, , 假)

.子程序 _按钮2_被单击, 空白型, , 
载入 (窗口1, , 假)

.子程序 _按钮5_被单击, 空白型, , 
结束 ()

.子程序 刷新分值, 空白型, , 
.参数 控件, 画板, , 
.参数 分值, 空白型, , 
.参数 类别, 空白型, , 

.局部变量 分割值, 文本型, , "3", 

.如果真 (等于 (类别, 1))
    .判断开始 (小于 (分值, 10))
        赋值 (分割值 [1], 到文本 (0))
        赋值 (分割值 [2], 取文本右边 (到文本 (分值), 1))
    .默认
        赋值 (分割值 [1], 取文本左边 (到文本 (分值), 1))
        赋值 (分割值 [2], 取文本右边 (到文本 (分值), 1))
    .判断结束
    相乘 (到整数 (分割值 [1]), 32).复制 (0, 32, 48, 控件, 相乘 (0, 32), 0, 1)
    相乘 (到整数 (分割值 [2]), 32).复制 (0, 32, 48, 控件, 相乘 (1, 32), 0, 1)
.如果真结束
.如果真 (等于 (类别, 2))
    .判断开始 (小于 (分值, 10))
        赋值 (分割值 [1], 到文本 (0))
        赋值 (分割值 [2], 取文本右边 (到文本 (分值), 1))
    .默认
        赋值 (分割值 [1], 取文本左边 (到文本 (分值), 1))
        赋值 (分割值 [2], 取文本右边 (到文本 (分值), 1))
    .判断结束
    相乘 (到整数 (分割值 [1]), 15).复制 (0, 15, 23, 控件, 相乘 (0, 15), 0, 1)
    相乘 (到整数 (分割值 [2]), 15).复制 (0, 15, 23, 控件, 相乘 (1, 15), 0, 1)
    
.如果真结束
.如果真 (等于 (类别, 3))
    .如果真 (大于或等于 (分值, 100))
        赋值 (分割值 [1], 取文本左边 (到文本 (分值), 1))
        赋值 (分割值 [2], 取文本右边 (取文本左边 (到文本 (分值), 2), 1))
        赋值 (分割值 [3], 取文本右边 (到文本 (分值), 1))
    .如果真结束
    .如果真 (并且 (大于或等于 (分值, 10), 小于 (分值, 100)))
        赋值 (分割值 [1], “0”)
        赋值 (分割值 [2], 取文本左边 (到文本 (分值), 1))
        赋值 (分割值 [3], 取文本右边 (到文本 (分值), 1))
    .如果真结束
    .如果真 (小于 (分值, 10))
        赋值 (分割值 [1], “0”)
        赋值 (分割值 [2], “0”)
        赋值 (分割值 [3], 取文本右边 (到文本 (分值), 1))
    .如果真结束
    相乘 (到整数 (分割值 [1]), 15).复制 (0, 15, 23, 控件, 相乘 (0, 15), 0, 1)
    相乘 (到整数 (分割值 [2]), 15).复制 (0, 15, 23, 控件, 相乘 (1, 15), 0, 1)
    相乘 (到整数 (分割值 [3]), 15).复制 (0, 15, 23, 控件, 相乘 (2, 15), 0, 1)
.如果真结束
 ' 本源码来自易语言资源网(www.5A5X.com)


.子程序 _时钟1_周期事件, 空白型, , 
.局部变量 奔驰分割, 文本型, , "0", 
.局部变量 宝马分割, 文本型, , "0", 
.局部变量 奥迪分割, 文本型, , "0", 
.局部变量 捷达分割, 文本型, , "0", 
.局部变量 庄闲分割, 文本型, , "0", 
.局部变量 临时庄闲, 空白型, , , 
.局部变量 计次, 整数型, , , 

 ' //* 显示奔驰倍率
清除数组 (奔驰分割)
清除数组 (宝马分割)
清除数组 (奥迪分割)
清除数组 (捷达分割)
清除数组 (庄闲分割)
赋值 (奔驰分割, 分割文本 (奔驰倍率, “,”, ))
刷新分值 (压分显示 [1], 到整数 (奔驰分割 [1]), 2)
刷新分值 (压分显示 [2], 到整数 (奔驰分割 [2]), 2)
刷新分值 (压分显示 [3], 到整数 (奔驰分割 [3]), 2)
赋值 (宝马分割, 分割文本 (宝马倍率, “,”, ))
刷新分值 (压分显示 [4], 到整数 (宝马分割 [1]), 2)
刷新分值 (压分显示 [5], 到整数 (宝马分割 [2]), 2)
刷新分值 (压分显示 [6], 到整数 (宝马分割 [3]), 2)
赋值 (奥迪分割, 分割文本 (奥迪倍率, “,”, ))
刷新分值 (压分显示 [7], 到整数 (奥迪分割 [1]), 2)
刷新分值 (压分显示 [8], 到整数 (奥迪分割 [2]), 2)
刷新分值 (压分显示 [9], 到整数 (奥迪分割 [3]), 2)
赋值 (捷达分割, 分割文本 (捷达倍率, “,”, ))
刷新分值 (压分显示 [10], 到整数 (捷达分割 [1]), 2)
刷新分值 (压分显示 [11], 到整数 (捷达分割 [2]), 2)
刷新分值 (压分显示 [12], 到整数 (捷达分割 [3]), 2)
赋值 (庄闲分割, 分割文本 (庄闲倍率, “,”, ))
刷新分值 (压分显示 [13], 到整数 (庄闲分割 [1]), 2)
刷新分值 (压分显示 [14], 到整数 (庄闲分割 [2]), 2)
刷新分值 (压分显示 [15], 到整数 (庄闲分割 [3]), 2)

刷新分值 (下注显示 [1], 奔驰压分.红, 3)
刷新分值 (下注显示 [2], 奔驰压分.绿, 3)
刷新分值 (下注显示 [3], 奔驰压分.黄, 3)
刷新分值 (下注显示 [4], 宝马压分.红, 3)
刷新分值 (下注显示 [5], 宝马压分.绿, 3)
刷新分值 (下注显示 [6], 宝马压分.黄, 3)
刷新分值 (下注显示 [7], 奥迪压分.红, 3)
刷新分值 (下注显示 [8], 奥迪压分.绿, 3)
刷新分值 (下注显示 [9], 奥迪压分.黄, 3)
刷新分值 (下注显示 [10], 捷达压分.红, 3)
刷新分值 (下注显示 [11], 捷达压分.绿, 3)
刷新分值 (下注显示 [12], 捷达压分.黄, 3)
刷新分值 (下注显示 [13], 庄闲压分.庄, 3)
刷新分值 (下注显示 [14], 庄闲压分.和, 3)
刷新分值 (下注显示 [15], 庄闲压分.闲, 3)
赋值 (以压分, 相加 (奔驰压分.红, 奔驰压分.绿, 奔驰压分.黄, 宝马压分.红, 宝马压分.绿, 宝马压分.黄, 奥迪压分.红, 奥迪压分.绿, 奥迪压分.黄, 捷达压分.红, 捷达压分.绿, 捷达压分.黄))
赋值 (.内容, 相加 (“压分：”, 到文本 (以压分)))
赋值 (.内容, 相加 (“金币：”, 到文本 (总分)))
刷新级别 (总分)
.如果真 (等于 (开奖, 假))
    .如果真 (大于或等于 (取数组成员数 (历史图片), 1))
        .计次循环首 (取数组成员数 (历史图片), 计次)
            赋值 (历史图片框 [计次], 图片, 历史图片 [计次])
            赋值 (历史图片框 [计次], 可视, 真)
        .计次循环尾 ()
    .如果真结束
    赋值 (主界面. [25].可视, 假)
    置随机数种子 ()
    赋值 (彩金, 取随机数 (1111, 9999))
    赋值 (.内容, 到文本 (彩金))
    置随机数种子 ()
    赋值 (临时庄闲, 取随机数 (1, 13))
    刷新分值 (积分显示 [1], 临时庄闲, 1)
.如果真结束
.如果真 (等于 (开奖, 真))
    赋值 (.内容, 到文本 (彩金))
    刷新分值 (积分显示 [1], 庄闲点, 1)
.如果真结束
.如果真 (等于 (初次运行, 假))
    取庄闲 (0, 假)
    赋值 (初次运行, 真)
    赋值 (.内容, “00-00-00-00-00”)
.如果真结束


.子程序 _压分图片1_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 内部计算, 空白型, , , 

.如果真 (等于 (开奖, 假))
    赋值 (.图片, 取亮点 (4, 真))
    延迟 (200)
    赋值 (.图片, 取亮点 (4, 假))
    赋值 (内部计算, X倍率)
    .如果真 (大于 (内部计算, 999))
        信息框 (“当前最多能压分 999 ”, 0, “系统提示”)
        返回 (假)
    .如果真结束
    .如果真 (大于 (内部计算, 总分))
        信息框 (“当前积分不够，不能压分”, 0, “系统提示”)
        返回 (假)
    .如果真结束
    赋值 (奔驰压分.红, 相加 (奔驰压分.红, X倍率))
    赋值 (总分, 相减 (总分, X倍率))
.如果真结束


.子程序 _压分图片2_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 内部计算, 空白型, , , 

.如果真 (等于 (开奖, 假))
    赋值 (.图片, 取亮点 (5, 真))
    延迟 (200)
    赋值 (.图片, 取亮点 (5, 假))
    赋值 (内部计算, X倍率)
    .如果真 (大于 (内部计算, 999))
        信息框 (“当前最多能压分 999 ”, 0, “系统提示”)
        返回 (假)
    .如果真结束
    .如果真 (大于 (内部计算, 总分))
        信息框 (“当前积分不够，不能压分”, 0, “系统提示”)
        返回 (假)
    .如果真结束
    赋值 (奔驰压分.绿, 相加 (奔驰压分.绿, X倍率))
    赋值 (总分, 相减 (总分, X倍率))
    
.如果真结束


.子程序 _选择框1_被单击, 空白型, , 
赋值 (.选中, 真)
赋值 (.选中, 假)
赋值 (.选中, 假)
赋值 (X倍率, 1)

.子程序 _选择框2_被单击, 空白型, , 
赋值 (.选中, 假)
赋值 (.选中, 真)
赋值 (.选中, 假)
赋值 (X倍率, 10)


.子程序 _选择框3_被单击, 空白型, , 
赋值 (.选中, 假)
赋值 (.选中, 假)
赋值 (.选中, 真)
赋值 (X倍率, 100)

.子程序 _按钮6_被单击, 空白型, , 
.局部变量 临时压分, 空白型, , , 

.如果真 (等于 (开奖, 假))
    赋值 (总分, 相加 (总分, 以压分))
    压分恢复 ()
.如果真结束
 ' 本源码来自易语言资源网(www.5A5X.com)

.子程序 _按钮1_被单击, 空白型, , 
.如果真 (不等于 (以压分, 0))
    赋值 (宝马备用压分.红, 宝马压分.红)
    赋值 (宝马备用压分.绿, 宝马压分.绿)
    赋值 (宝马备用压分.黄, 宝马压分.黄)
    赋值 (奔驰备用压分.红, 奔驰压分.红)
    赋值 (奔驰备用压分.绿, 奔驰压分.绿)
    赋值 (奔驰备用压分.黄, 奔驰压分.黄)
    赋值 (奥迪备用压分.红, 奥迪压分.红)
    赋值 (奥迪备用压分.绿, 奥迪压分.绿)
    赋值 (奥迪备用压分.黄, 奥迪压分.黄)
    赋值 (捷达备用压分.红, 捷达压分.红)
    赋值 (捷达备用压分.绿, 捷达压分.绿)
    赋值 (捷达备用压分.黄, 捷达压分.黄)
    赋值 (庄闲备份压分.庄, 庄闲压分.庄)
    赋值 (庄闲备份压分.闲, 庄闲压分.闲)
    赋值 (庄闲备份压分.和, 庄闲压分.和)
.如果真结束
摇奖开始 ()

.子程序 _按钮7_被单击, 空白型, , 
.局部变量 临时压分, 空白型, , , 

.如果真 (等于 (是否既压, 假))
    赋值 (临时压分, 相加 (宝马备用压分.红, 宝马备用压分.绿, 宝马备用压分.黄, 奔驰备用压分.红, 奔驰备用压分.绿, 奔驰备用压分.黄, 奥迪备用压分.红, 奥迪备用压分.绿, 奥迪备用压分.黄, 捷达备用压分.红, 捷达备用压分.绿, 捷达备用压分.黄, 庄闲备份压分.庄, 庄闲备份压分.和, 庄闲备份压分.闲))
    .如果真 (大于 (临时压分, 总分))
        信息框 (“你的积分不够，请单一压分”, 0, “系统提示”)
        返回 ()
    .如果真结束
    赋值 (总分, 相减 (总分, 临时压分))
    赋值 (宝马压分.红, 宝马备用压分.红)
    赋值 (宝马压分.绿, 宝马备用压分.绿)
    赋值 (宝马压分.黄, 宝马备用压分.黄)
    赋值 (奔驰压分.红, 奔驰备用压分.红)
    赋值 (奔驰压分.绿, 奔驰备用压分.绿)
    赋值 (奔驰压分.黄, 奔驰备用压分.黄)
    赋值 (奥迪压分.红, 奥迪备用压分.红)
    赋值 (奥迪压分.绿, 奥迪备用压分.绿)
    赋值 (奥迪压分.黄, 奥迪备用压分.黄)
    赋值 (捷达压分.红, 捷达备用压分.红)
    赋值 (捷达压分.绿, 捷达备用压分.绿)
    赋值 (捷达压分.黄, 捷达备用压分.黄)
    赋值 (庄闲压分.庄, 庄闲备份压分.庄)
    赋值 (庄闲压分.和, 庄闲备份压分.和)
    赋值 (庄闲压分.闲, 庄闲备份压分.闲)
    赋值 (是否既压, 真)
    返回 ()
.如果真结束
.如果真 (等于 (是否既压, 真))
    信息框 (“已经继压了”, 0, “系统提示”)
.如果真结束


.子程序 _压分图片3_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 内部计算, 空白型, , , 

.如果真 (等于 (开奖, 假))
    赋值 (.图片, 取亮点 (6, 真))
    延迟 (200)
    赋值 (.图片, 取亮点 (6, 假))
    赋值 (内部计算, X倍率)
    .如果真 (大于 (内部计算, 999))
        信息框 (“当前最多能压分 999 ”, 0, “系统提示”)
        返回 (假)
    .如果真结束
    .如果真 (大于 (内部计算, 总分))
        信息框 (“当前积分不够，不能压分”, 0, “系统提示”)
        返回 (假)
    .如果真结束
    赋值 (奔驰压分.黄, 相加 (奔驰压分.黄, X倍率))
    赋值 (总分, 相减 (总分, X倍率))
.如果真结束


.子程序 _压分图片4_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 内部计算, 空白型, , , 

.如果真 (等于 (开奖, 假))
    赋值 (.图片, 取亮点 (1, 真))
    延迟 (200)
    赋值 (.图片, 取亮点 (1, 假))
    赋值 (内部计算, X倍率)
    .如果真 (大于 (内部计算, 999))
        信息框 (“当前最多能压分 999 ”, 0, “系统提示”)
        返回 (假)
    .如果真结束
    .如果真 (大于 (内部计算, 总分))
        信息框 (“当前积分不够，不能压分”, 0, “系统提示”)
        返回 (假)
    .如果真结束
    赋值 (宝马压分.红, 相加 (宝马压分.红, X倍率))
    赋值 (总分, 相减 (总分, X倍率))
.如果真结束


.子程序 _压分图片5_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 内部计算, 空白型, , , 

.如果真 (等于 (开奖, 假))
    赋值 (.图片, 取亮点 (2, 真))
    延迟 (200)
    赋值 (.图片, 取亮点 (2, 假))
    赋值 (内部计算, X倍率)
    .如果真 (大于 (内部计算, 999))
        信息框 (“当前最多能压分 999 ”, 0, “系统提示”)
        返回 (假)
    .如果真结束
    .如果真 (大于 (内部计算, 总分))
        信息框 (“当前积分不够，不能压分”, 0, “系统提示”)
        返回 (假)
    .如果真结束
    赋值 (宝马压分.绿, 相加 (宝马压分.绿, X倍率))
    赋值 (总分, 相减 (总分, X倍率))
.如果真结束


.子程序 _压分图片6_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 内部计算, 空白型, , , 

.如果真 (等于 (开奖, 假))
    赋值 (.图片, 取亮点 (3, 真))
    延迟 (200)
    赋值 (.图片, 取亮点 (3, 假))
    赋值 (内部计算, X倍率)
    .如果真 (大于 (内部计算, 999))
        信息框 (“当前最多能压分 999 ”, 0, “系统提示”)
        返回 (假)
    .如果真结束
    .如果真 (大于 (内部计算, 总分))
        信息框 (“当前积分不够，不能压分”, 0, “系统提示”)
        返回 (假)
    .如果真结束
    赋值 (宝马压分.黄, 相加 (宝马压分.黄, X倍率))
    赋值 (总分, 相减 (总分, X倍率))
.如果真结束
 ' 本源码来自易语言资源网(www.5A5X.com)

.子程序 _压分图片7_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 内部计算, 空白型, , , 

.如果真 (等于 (开奖, 假))
    赋值 (.图片, 取亮点 (10, 真))
    延迟 (200)
    赋值 (.图片, 取亮点 (10, 假))
    赋值 (内部计算, X倍率)
    .如果真 (大于 (内部计算, 999))
        信息框 (“当前最多能压分 999 ”, 0, “系统提示”)
        返回 (假)
    .如果真结束
    .如果真 (大于 (内部计算, 总分))
        信息框 (“当前积分不够，不能压分”, 0, “系统提示”)
        返回 (假)
    .如果真结束
    赋值 (奥迪压分.红, 相加 (奥迪压分.红, X倍率))
    赋值 (总分, 相减 (总分, X倍率))
.如果真结束



.子程序 _压分图片8_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 内部计算, 空白型, , , 

.如果真 (等于 (开奖, 假))
    赋值 (.图片, 取亮点 (11, 真))
    延迟 (200)
    赋值 (.图片, 取亮点 (11, 假))
    赋值 (内部计算, X倍率)
    .如果真 (大于 (内部计算, 999))
        信息框 (“当前最多能压分 999 ”, 0, “系统提示”)
        返回 (假)
    .如果真结束
    .如果真 (大于 (内部计算, 总分))
        信息框 (“当前积分不够，不能压分”, 0, “系统提示”)
        返回 (假)
    .如果真结束
    赋值 (奥迪压分.绿, 相加 (奥迪压分.绿, X倍率))
    赋值 (总分, 相减 (总分, X倍率))
.如果真结束


.子程序 _压分图片9_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 内部计算, 空白型, , , 

.如果真 (等于 (开奖, 假))
    赋值 (.图片, 取亮点 (12, 真))
    延迟 (200)
    赋值 (.图片, 取亮点 (12, 假))
    赋值 (内部计算, X倍率)
    .如果真 (大于 (内部计算, 999))
        信息框 (“当前最多能压分 999 ”, 0, “系统提示”)
        返回 (假)
    .如果真结束
    .如果真 (大于 (内部计算, 总分))
        信息框 (“当前积分不够，不能压分”, 0, “系统提示”)
        返回 (假)
    .如果真结束
    赋值 (奥迪压分.黄, 相加 (奥迪压分.黄, X倍率))
    赋值 (总分, 相减 (总分, X倍率))
.如果真结束



.子程序 _压分图片10_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 内部计算, 空白型, , , 

.如果真 (等于 (开奖, 假))
    赋值 (.图片, 取亮点 (7, 真))
    延迟 (200)
    赋值 (.图片, 取亮点 (7, 假))
    赋值 (内部计算, X倍率)
    .如果真 (大于 (内部计算, 999))
        信息框 (“当前最多能压分 999 ”, 0, “系统提示”)
        返回 (假)
    .如果真结束
    .如果真 (大于 (内部计算, 总分))
        信息框 (“当前积分不够，不能压分”, 0, “系统提示”)
        返回 (假)
    .如果真结束
    赋值 (捷达压分.红, 相加 (捷达压分.红, X倍率))
    赋值 (总分, 相减 (总分, X倍率))
.如果真结束



.子程序 _压分图片11_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 内部计算, 空白型, , , 

.如果真 (等于 (开奖, 假))
    赋值 (.图片, 取亮点 (8, 真))
    延迟 (200)
    赋值 (.图片, 取亮点 (8, 假))
    赋值 (内部计算, X倍率)
    .如果真 (大于 (内部计算, 999))
        信息框 (“当前最多能压分 999 ”, 0, “系统提示”)
        返回 (假)
    .如果真结束
    .如果真 (大于 (内部计算, 总分))
        信息框 (“当前积分不够，不能压分”, 0, “系统提示”)
        返回 (假)
    .如果真结束
    赋值 (捷达压分.绿, 相加 (捷达压分.绿, X倍率))
    赋值 (总分, 相减 (总分, X倍率))
.如果真结束


.子程序 _压分图片12_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 内部计算, 空白型, , , 

.如果真 (等于 (开奖, 假))
    赋值 (.图片, 取亮点 (9, 真))
    延迟 (200)
    赋值 (.图片, 取亮点 (9, 假))
    赋值 (内部计算, X倍率)
    .如果真 (大于 (内部计算, 999))
        信息框 (“当前最多能压分 999 ”, 0, “系统提示”)
        返回 (假)
    .如果真结束
    .如果真 (大于 (内部计算, 总分))
        信息框 (“当前积分不够，不能压分”, 0, “系统提示”)
        返回 (假)
    .如果真结束
    赋值 (捷达压分.黄, 相加 (捷达压分.黄, X倍率))
    赋值 (总分, 相减 (总分, X倍率))
.如果真结束


.子程序 _压分图片13_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 内部计算, 空白型, , , 

.如果真 (等于 (开奖, 假))
    赋值 (.图片, #庄_亮)
    延迟 (200)
    赋值 (.图片, #庄_常)
    赋值 (内部计算, X倍率)
    .如果真 (大于 (内部计算, 999))
        信息框 (“当前最多能压分 999 ”, 0, “系统提示”)
        返回 (假)
    .如果真结束
    .如果真 (大于 (内部计算, 总分))
        信息框 (“当前积分不够，不能压分”, 0, “系统提示”)
        返回 (假)
    .如果真结束
    赋值 (庄闲压分.庄, 相加 (庄闲压分.庄, X倍率))
    赋值 (总分, 相减 (总分, X倍率))
.如果真结束


.子程序 _压分图片14_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 内部计算, 空白型, , , 

.如果真 (等于 (开奖, 假))
    赋值 (.图片, #和_亮)
    延迟 (200)
    赋值 (.图片, #和_常)
    赋值 (内部计算, X倍率)
    .如果真 (大于 (内部计算, 999))
        信息框 (“当前最多能压分 999 ”, 0, “系统提示”)
        返回 (假)
    .如果真结束
    .如果真 (大于 (内部计算, 总分))
        信息框 (“当前积分不够，不能压分”, 0, “系统提示”)
        返回 (假)
    .如果真结束
    赋值 (庄闲压分.和, 相加 (庄闲压分.和, X倍率))
    赋值 (总分, 相减 (总分, X倍率))
.如果真结束


.子程序 _压分图片15_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 内部计算, 空白型, , , 

.如果真 (等于 (开奖, 假))
    赋值 (.图片, #和_亮)
    延迟 (200)
    赋值 (.图片, #和_常)
    赋值 (内部计算, X倍率)
    .如果真 (大于 (内部计算, 999))
        信息框 (“当前最多能压分 999 ”, 0, “系统提示”)
        返回 (假)
    .如果真结束
    .如果真 (大于 (内部计算, 总分))
        信息框 (“当前积分不够，不能压分”, 0, “系统提示”)
        返回 (假)
    .如果真结束
    赋值 (庄闲压分.闲, 相加 (庄闲压分.闲, X倍率))
    赋值 (总分, 相减 (总分, X倍率))
.如果真结束


.子程序 _按钮3_被单击, 空白型, , 
.局部变量 字节集, 字节集, , , 
.局部变量 长度, 整数型, , , 
.局部变量 字节数组, 字节型, , "0", 
.局部变量 计次, 整数型, , , 
.局部变量 字节, 字节型, , , 
.局部变量 整数数组, 整数型, , "0", 
.局部变量 文本数组, 文本型, , "0", 
.局部变量 加密后数据, 文本型, , , 

.如果真 (等于 (信息框 (“确定保存游戏记录”, #确认取消钮, “系统提示”), #确认钮))
    赋值 (字节集, 动态加密_ (到字节集 (到文本 (总分)), “xiejinyou”))
    赋值 (长度, 取字节集长度 (字节集))
    .计次循环首 (长度, 计次)
        赋值 (字节, 取字节集数据 (字节集, 1, 计次))
        加入成员 (字节数组, 字节)
    .计次循环尾 ()
    赋值 (计次, 1)
    .计次循环首 (长度, 计次)
        加入成员 (整数数组, 到数值 (字节数组 [计次]))
    .计次循环尾 ()
    赋值 (计次, 1)
    .计次循环首 (长度, 计次)
        .如果 (等于 (整数数组 [计次], 0))
            加入成员 (文本数组, “00”)
        .否则
            加入成员 (文本数组, 取十六进制文本 (整数数组 [计次]))
        .如果结束
        
    .计次循环尾 ()
    赋值 (计次, 1)
    .计次循环首 (长度, 计次)
        .如果真 (等于 (取文本长度 (文本数组 [计次]), 1))
            赋值 (文本数组 [计次], 相加 (“0”, 文本数组 [计次]))
        .如果真结束
        赋值 (加密后数据, 相加 (加密后数据, 文本数组 [计次], “ ”))
    .计次循环尾 ()
    写配置项 (相加 (取运行目录 (), “\DATA.DLL”), “用户信息”, “积分”, 加密后数据)
    写配置项 (相加 (取运行目录 (), “\DATA.DLL”), “用户信息”, “GID”, 加密后数据)
.如果真结束


.窗口程序集 窗口程序集2, , , 

.子程序 _透明标签4_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 



.子程序 _按钮1_被单击, 空白型, , 
销毁 ()

.子程序 _窗口2_创建完毕, 空白型, , 
相减 (相除 (., 2), 相除 (.宽度, 2)).移动 ()

.类模块 APIHOOK, , , 

.程序集变量 OldAddr, 整数型, , , .
.程序集变量 OldProtect, 整数型, , , 
.程序集变量 OldCode, 字节集, , , 
.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 安装APIHOOK, 逻辑型, , 
.参数 DLL路径, 文本型, , 
.参数 API名称, 文本型, , 
.参数 新函数地址, 子程序指针, , 

.局部变量 int, 整数型, , , 

.如果真 (不等于 (OldAddr, 0))
    返回 (假)
.如果真结束
赋值 (OldAddr, GetProcAddress (LoadLibrary (DLL路径), API名称))
.如果真 (等于 (OldAddr, 0))
    返回 (假)
.如果真结束
.如果真 (等于 (VirtualProtect (OldAddr, 5, 64, OldProtect), 0))
    赋值 (OldCode, {  })
    连续赋值 (0, OldAddr, OldProtect)
    返回 (假)
.如果真结束
赋值 (OldCode, 指针到字节集 (OldAddr, 5))
赋值 (int, 相减 (到整数 (新函数地址), OldAddr, 5))
写到内存 (相加 ({ 233 }, 到字节集 (int)), OldAddr, 5)
返回 (真)

.子程序 卸载APIHOOK, 空白型, , 
 ' .如果真 (不等于 (OldAddr, 0))
    写到内存 (OldCode, OldAddr, 5)
    VirtualProtect (OldAddr, 5, OldProtect, 0)
.如果真结束
赋值 (OldCode, {  })
连续赋值 (0, OldAddr, OldProtect)


 ' 不属于任何一个程序集、类模块的函数：
