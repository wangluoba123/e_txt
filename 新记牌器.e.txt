 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：本源码来自易语言资源网(www.5A5X.com)
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：             易语言资源网注意事项
--============   www.5A5X.com  =============--
* 易语言资源网为易语言官方站、易语言官方论坛提供辅助资源站；本易语言资源网( www.5A5X.com)所有软件和资料均为软件作者提供和网友推荐发布而来，其版权归该软件和程序源码的合法拥有者所有，本站易语言资源网整理收集仅供易语言用户学习和易语言技术研究探讨使用，不得用于任何商业用途。如果由于以上原因造成的版权纠纷本站概不负责！
* 本站资源未经许可,任何网站不得非法盗链及抄袭本站资源；如引用，请注明来自易语言资源网，谢谢合作！
--============   www.5A5X.com  =============--
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 523
    高度 = 74
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 4
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 真
    保持标题栏激活 = 假
    窗口类名 = “”
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “记牌器”
    帮助文件名 = “”



.常量 常量_游戏版本, "“2.01 Beta27 Buld10”", , 
.常量 , , , 
.常量 常量_进程权限, "2035711", , 
.常量 常量_窗口类名, "“#32770”", , 
.常量 常量_窗口名, "“斗地主角色版”", , 
.常量 常量_程序名, "“ddzrpg.exe”", , 
.常量 常量_偏移量, "“828”", , 
.常量 , , , 
.常量 常量_座位号, "“F7640”", , 
.常量 常量_右家自己牌, "“F7A09”", , +828
.常量 常量_右家剩牌, "“F7B48”", , 
.常量 常量_右家出牌, "“F7CB1”", , 
.常量 , , , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 5 0 系统核心支持库
 ' eAPI F7FC1AE45C5C4758AF03EF19F18A395D 3 0 应用接口支持库




数据类型 自定义_内存块信息, , 内存 MEMORY_BASIC_INFORMATION
    .成员 BaseAddress, 整数型, , , 区域基地址
    .成员 AllocationBase, 整数型, , , 应用程序可用的最小地址。分配基地址。
    .成员 AllocattionProtect, 整数型, , , 应用程序可用的最大地址。区域被初次保留时赋予的保护属性。
    .成员 RegionSize, 整数型, , , 区域大小（以字节为计量单位）。
    .成员 State, 整数型, , , 状态(MEM_FREE、MEM_RESERVE或 MEM_COMMIT)
    .成员 Protect, 整数型, , , 保护属性
    .成员 Type, 整数型, , , 类型

数据类型 MEMORY_BASIC_INFORMATION, , 内存
    .成员 BaseAddress, 整数型, , , 
    .成员 AllocationBase, 整数型, , , 应用程序可用的最小地址
    .成员 AllocattionProtect, 整数型, , , 应用程序可用的最大地址
    .成员 RegionSize, 整数型, , , 
    .成员 State, 整数型, , , 
    .成员 Protect, 整数型, , , 
    .成员 Type, 整数型, , , 

数据类型 模块地址_, , , MODULEENTRY32
    .成员 结构大小, 整数型, , , dwSize
    .成员 模块标识符, 整数型, , , th32ModuleID
    .成员 进程标识符, 整数型, , , th32ProcessID
    .成员 模块数, 整数型, , , GlblcntUsage
    .成员 进程数, 整数型, , , ProccntUsage
    .成员 模块基址, 整数型, , , modBaseAddr
    .成员 模块基址大小, 整数型, , , modBaseSize
    .成员 模块句柄, 整数型, , , hModule
    .成员 模块名称, 字节型, , "256", szModule
    .成员 文件路径, 字节型, , "260", szExePath

数据类型 自定义_字节数据, , 
    .成员 参数_牌号, 整数型, , , 
    .成员 参数_牌类型, 整数型, , , 

数据类型 自定义_标签数组, , 
    .成员 参数_id, 整数型, , , 
    .成员 参数_标签, 标签, , , 

数据类型 自定义_牌基址信息, , 
    .成员 剩牌, 整数型, , , 
    .成员 出牌, 整数型, , , 
    .成员 牌面, 整数型, , , 自己牌面


.DLL命令 取进程线程标识符_, 整数型, "user32.dll", "GetWindowThreadProcessId", , GetWindowThreadProcessId，获取与指定窗口关联在一起的一个线程和进程标识符
    .参数 窗口句柄, 整数型, , hwnd，指定窗口句柄
    .参数 进程标识符, 整数型, 传址, lpdwProcessId，指定一个变量，用于装载拥有那个窗口的一个进程的标识符

.DLL命令 写进程内存数据, 整数型, "", "WriteProcessMemory", , 
    .参数 进程, 整数型, , 
    .参数 地址, 整数型, , 
    .参数 输出值, 整数型, 传址, 
    .参数 字节, 整数型, , 
    .参数 a, 整数型, , 

.DLL命令 打开进程_, 整数型, "kernel32.dll", "OpenProcess", 公开, 将句柄返回给过程对象
    .参数 进程对象, 整数型, , dwDesiredAccess
    .参数 继承句柄, 整数型, , bInheritHandle
    .参数 进程标识符, 整数型, , dwProcessId

.DLL命令 寻找顶级窗口_, 整数型, "user32.dll", "FindWindowA", , , FindWindow,寻找窗口列表中第一个符合指定条件的顶级窗口
    .参数 窗口类名, 文本型, , lpClassName，参见相关帮助
    .参数 窗口文本, 文本型, , lpWindowName，参见相关帮助

.DLL命令 _内存读字节集, 整数型, "", "ReadProcessMemory", 公开, 
    .参数 hProcess, 整数型, , 
    .参数 lpBaseAddress, 整数型, , 
    .参数 lpBuffer, 字节集, 传址, 
    .参数 nSize, 整数型, , 
    .参数 lpNumberOfBytesWritten, 整数型, , 

.DLL命令 取自进程ID, 整数型, "kernel32.dll", "GetCurrentProcessId", 公开, 

.DLL命令 取创建32位帮助工具快照_, 整数型, "kernel32.dll", "CreateToolhelp32Snapshot", , , 取进程信息
    .参数 标志, 整数型, , lFlags,进程＝15，线程=4，DLL＝8，堆=
    .参数 进程标识符, 整数型, , lProcessID

.DLL命令 取下个进程信息, 整数型, "kernel32.dll", "Process32Next", , 
    .参数 快照句柄, 整数型, , 
    .参数 进程信息, 未知类型0x20009, , 

.DLL命令 寻找下一个32位模块_, 整数型, "kernel32.dll", "Module32Next", , ,
    .参数 快照句柄, 整数型, , hSnapshot
    .参数 模块进程结构, 模块地址_, 传址, uProcess

.DLL命令 关闭内核对象_, 整数型, "kernel32", "CloseHandle", , , 关闭一个内核对象。其中包括文件、文件映射、进程、线程、安全和同步对象等。涉及文件处理时，这个函数通常与vb的close命令相似。应尽可能的使用close，因为它支持vb的差错控制。注意这个函数使用的文件句柄与vb的文件编号是完全不同的  非零表示成功，零表示失败。会设置GetLastError
    .参数 对象句柄, 整数型, , 欲关闭的一个对象的句柄;

.DLL命令 寻找第一个32位模块_, 整数型, "kernel32.dll", "Module32First", , ,取进程快照第一个进程信息返回内存指针
    .参数 快照句柄, 整数型, , hSnapshot
    .参数 模块进程结构, 模块地址_, 传址, uProcess

.DLL命令 _查询内存地址信息, 整数型, "", "VirtualQueryEx", , 
    .参数 hProcess, 整数型, , , 进程句柄
    .参数 lpAddress, 整数型, , , 查询内存的地址
    .参数 info, 自定义_内存块信息, 传址, , 用于接收内存信息
    .参数 dwLength, 整数型, , , 结构的大小

.DLL命令 十六转十_, 整数型, "shlwapi.dll", "StrToInt64ExA", , 64-bit integer
    .参数 十六进制, 文本型, , 
    .参数 转换标志, 整数型, , 传入1
    .参数 十进制, 长整数型, 传址, 

.DLL命令 dll_查询内存地址信息, 整数型, "", "VirtualQueryEx", , 
    .参数 hProcess, 整数型, , 
    .参数 lpAddress, 整数型, , 
    .参数 info, MEMORY_BASIC_INFORMATION, 传址, 
    .参数 dwLength, 整数型, , 

.DLL命令 读取进程内存数据, 整数型, "", "ReadProcessMemory", , 
    .参数 进程, 整数型, , 取进程的句柄
    .参数 地址, 整数型, , 读的起始地址
    .参数 输出值, 整数型, 传址, 存放读取数据缓冲区
    .参数 字节, 整数型, ,  一次读取的字节数
    .参数 aa, 整数型, , 实际读取的字节数

.DLL命令 _宽字符到双字节1, 整数型, "", "WideCharToMultiByte", , kernel32.dll
    .参数 代码页, 整数型, , CodePage
    .参数 标志, 整数型, , dwFlags
    .参数 宽字符文本, 字节集, , lpWideCharStr
    .参数 宽字符文本长度, 整数型, , cchWideChar
    .参数 双字节文本, 整数型, , lpMultiByteStr
    .参数 双字节文本长度, 整数型, , cchMultiByte
    .参数 默认文本, 整数型, , lpDefaultChar
    .参数 使用默认文本, 逻辑型, , lpUsedDefaultChar

.DLL命令 _宽字符到双字节, 空白型, "", "WideCharToMultiByte", , kernel32.dll
    .参数 代码页, 整数型, , CodePage
    .参数 标志, 整数型, , dwFlags
    .参数 宽字符文本, 字节集, , lpWideCharStr
    .参数 宽字符文本长度, 整数型, , cchWideChar
    .参数 双字节文本, 字节集, , lpMultiByteStr
    .参数 双字节文本长度, 整数型, , cchMultiByte
    .参数 默认文本, 整数型, , lpDefaultChar
    .参数 使用默认文本, 逻辑型, , lpUsedDefaultChar

.窗口程序集 窗口程序集1, , , 

.程序集变量 程序集_窗口句柄, 整数型, , , 
.程序集变量 程序集_进程标识符, 整数型, , , 
.程序集变量 程序集_程序基址, 整数型, , , 
.程序集变量 牌面, 标签, , "15", 
.程序集变量 右家, 自定义_牌基址信息, , , 
.程序集变量 下家, 自定义_牌基址信息, , , 
.程序集变量 左家, 自定义_牌基址信息, , , 
.程序集变量 程序集_右家剩牌, 整数型, , , 
.程序集变量 程序集_下家剩牌, 整数型, , , 
.程序集变量 程序集_左家剩牌, 整数型, , , 
.程序集变量 程序集_减自牌, 整数型, , , 
.子程序 __启动窗口_创建完毕, 空白型, , 
子程序_创建牌面 ()
 ' --========  易语言资源网  (www.5A5X.com)  ======--
 ' 努力创建完善、持续更新的易语言学习例程源码资源站
 ' --================   www.5A5X.com  ===========--
 ' --==================   易语言资源网注意事项  ================--
 ' * 易语言资源网为易语言官方站、易语言官方论坛提供辅助资源站；
 ' 本易语言资源网( www.5A5X.com)所有软件和资料均为软件作者提
 ' 供和网友推荐发布而来，其版权归该软件和程序源码的合法拥有者所
 ' 有，本站易语言资源网整理收集仅供易语言用户学习和易语言技术研
 ' 究探讨使用，不得用于任何商业用途。如果由于以上原因造成的版权
 ' 纠纷本站概不负责！
 ' * 本站资源未经许可，任何网站不得非法盗链及抄袭本站资源；如引用
 ' 页面，请注明来自易语言资源网，谢谢合作！
 ' --=====================   www.5A5X.com  ================--


.子程序 子程序_创建牌面, 空白型, , 
.局部变量 局部_标签, 标签, , "32", 
.局部变量 i, 整数型, , , 
.局部变量 局部_左边位置, 整数型, , , 
.局部变量 局部_顶边位置, 整数型, , , 
.局部变量 y, 整数型, , , 

 ' --------------------------------------
.计次循环首 (32, i)
    复制窗口组件 (局部_标签 [i])
    .如果 (小于 (i, 17))
        赋值 (局部_左边位置, 相加 (相乘 (相减 (i, 1), .宽度), 相乘 (2, i)))
         ' 本源码来自易语言资源网(www.5A5X.com)
        .判断开始 (等于 (i, 1))
            赋值 (局部_标签 [i], 标题, “牌面”)
        .判断 (等于 (i, 10))
            赋值 (局部_标签 [i], 标题, “J”)
        .判断 (等于 (i, 11))
            赋值 (局部_标签 [i], 标题, “Q”)
        .判断 (等于 (i, 12))
            赋值 (局部_标签 [i], 标题, “K”)
        .判断 (等于 (i, 13))
            赋值 (局部_标签 [i], 标题, “A”)
        .判断 (等于 (i, 14))
            赋值 (局部_标签 [i], 标题, “2”)
        .判断 (等于 (i, 15))
            赋值 (局部_标签 [i], 标题, “小王”)
        .判断 (等于 (i, 16))
            赋值 (局部_标签 [i], 标题, “大王”)
             ' 局部_标签 [i].标题 ＝ 到文本 (i ＋ 1)
        .默认
            赋值 (局部_标签 [i], 标题, 到文本 (相加 (i, 1)))
        .判断结束
        局部_标签.移动 ( [i], 局部_左边位置, 2, .宽度, .高度)
         ' 本源码来自易语言资源网(www.5A5X.com)
    .否则
        赋值 (局部_左边位置, 相加 (相乘 (相减 (i, 16, 1), .宽度), 相乘 (2, 相减 (i, 16))))
        赋值 (局部_顶边位置, 相加 (.高度, 3))
        .判断开始 (等于 (i, 17))
            赋值 (局部_标签 [i], 标题, “余牌”)
        .判断 (或者 (等于 (i, 31), 等于 (i, 32)))
            赋值 (局部_标签 [i], 标题, “1”)
        .默认
            赋值 (局部_标签 [i], 标题, “4”)
        .判断结束
        局部_标签.移动 ( [i], 局部_左边位置, 局部_顶边位置, .宽度, .高度)
        
    .如果结束
    赋值 (局部_标签 [i], 可视, 真)
.计次循环尾 ()
 ' ----------------加入牌面数组------------------
.计次循环首 (取数组成员数 (牌面), y)
    .判断开始 (等于 (y, 1))
        赋值 (牌面 [y], 局部_标签 [29])
    .判断 (等于 (y, 2))
        赋值 (牌面 [y], 局部_标签 [30])
    .判断 (等于 (y, 3))
        赋值 (牌面 [y], 局部_标签 [18])
    .判断 (等于 (y, 4))
        赋值 (牌面 [y], 局部_标签 [19])
    .判断 (等于 (y, 5))
        赋值 (牌面 [y], 局部_标签 [20])
    .判断 (等于 (y, 6))
        赋值 (牌面 [y], 局部_标签 [21])
    .判断 (等于 (y, 7))
        赋值 (牌面 [y], 局部_标签 [22])
    .判断 (等于 (y, 8))
        赋值 (牌面 [y], 局部_标签 [23])
    .判断 (等于 (y, 9))
        赋值 (牌面 [y], 局部_标签 [24])
    .判断 (等于 (y, 10))
        赋值 (牌面 [y], 局部_标签 [25])
    .判断 (等于 (y, 11))
        赋值 (牌面 [y], 局部_标签 [26])
    .判断 (等于 (y, 12))
        赋值 (牌面 [y], 局部_标签 [27])
    .判断 (等于 (y, 13))
        赋值 (牌面 [y], 局部_标签 [28])
    .判断 (等于 (y, 14))
        赋值 (牌面 [y], 局部_标签 [31])
    .判断 (等于 (y, 15))
        赋值 (牌面 [y], 局部_标签 [32])
    .默认
         ' 本源码来自易语言资源网(www.5A5X.com)
    .判断结束
    赋值 (牌面 [y], 文本颜色, #黄褐)
    
.计次循环尾 ()

.子程序 子程序_清除牌面, 空白型, , 
.局部变量 i, 整数型, , , 

.计次循环首 (取数组成员数 (牌面), i)
    .判断开始 (或者 (等于 (i, 14), 等于 (i, 15)))
        赋值 (牌面 [i], 标题, “1”)
    .默认
        赋值 (牌面 [i], 标题, “4”)
    .判断结束
    赋值 (牌面 [i], 文本颜色, #黑色)
.计次循环尾 ()
 ' 本源码来自易语言资源网(www.5A5X.com)

.子程序 _时钟_游戏进入_周期事件, 空白型, , 
.局部变量 局部_模块数, 整数型, , , 
.局部变量 局部_模块信息, 模块地址_, , "0", 

赋值 (程序集_窗口句柄, 寻找顶级窗口_ (#常量_窗口类名, #常量_窗口名))
 ' 本源码来自易语言资源网(www.5A5X.com)
.如果真 (等于 (程序集_窗口句柄, 0))
    赋值 (., 相加 (“游戏版本”, #常量_游戏版本, “  大可可出品 QQ 408294040 ”, “角色斗地主未启动”))
    赋值 (程序集_进程标识符, 0)
    赋值 (.时钟周期, 0)
    返回 ()
    
.如果真结束
.如果真 (等于 (程序集_进程标识符, 0)) ' 判断一下 避免反复取数据
    赋值 (., 相加 (“游戏版本”, #常量_游戏版本, “  大可可出品 QQ 408294040 ”, “角色斗地主已启动”))
    取进程线程标识符_ (程序集_窗口句柄, 程序集_进程标识符)
    .如果真 (不等于 (程序集_进程标识符, 0))
        赋值 (局部_模块数, 子程序_枚举进程 (程序集_进程标识符, 局部_模块信息))
        .如果真 (不等于 (局部_模块数, 0))
            .如果真 (等于 (到文本 (局部_模块信息 [1].模块名称), #常量_程序名))
                赋值 (程序集_程序基址, 局部_模块信息 [1].模块基址)
                赋值 (程序集_减自牌, 0) ' 防止重复减自己牌面
                赋值 (.时钟周期, 1000)
                 ' 本源码来自易语言资源网(www.5A5X.com)
            .如果真结束
            
        .如果真结束
        
    .如果真结束
    
.如果真结束


.子程序 子程序_枚举进程, 整数型, , 为方便使用，这里将返回取到的模块数
.参数 参数_进程ID, 整数型, , 
.参数 参数_模块信息, 模块地址_, 数组, 

.局部变量 局部_快照句柄, 整数型, , , 
.局部变量 局部_模块信息, 模块地址_, , , 

清除数组 (参数_模块信息)
赋值 (局部_快照句柄, 取创建32位帮助工具快照_ (8, 参数_进程ID)) ' 若为0表示当前进程
赋值 (局部_模块信息.结构大小, 1024) ' 这里一定是1024 要不取不到
 ' 根据MSDN，若不预先设定该值，那么命令将失败
.如果真 (不等于 (寻找第一个32位模块_ (局部_快照句柄, 局部_模块信息), 0)) ' 取第一个模块信息
    加入成员 (参数_模块信息, 局部_模块信息)
.如果真结束
关闭内核对象_ (局部_快照句柄)
 ' 用完一定要关闭句柄，切记。
返回 (取数组成员数 (参数_模块信息))

.子程序 _时钟_游戏开始_周期事件, 空白型, , 
.局部变量 局部_左家剩牌, 整数型, , , 
.局部变量 局部_右家剩牌, 整数型, , , 
.局部变量 局部_下家剩牌, 整数型, , , 
.局部变量 局部_剩牌总数, 整数型, , , 
.局部变量 局部_偏移量, 整数型, , , 


 ' ----------------------------剩牌数---------------------------------------------------
赋值 (局部_偏移量, 十六转十进制 (#常量_偏移量))
 ' 本源码来自易语言资源网(www.5A5X.com)
赋值 (局部_右家剩牌, 读内存整数型 (程序集_进程标识符, 相加 (十六转十进制 (#常量_右家剩牌), 程序集_程序基址), ))
赋值 (局部_下家剩牌, 读内存整数型 (程序集_进程标识符, 相加 (十六转十进制 (#常量_右家剩牌), 局部_偏移量, 程序集_程序基址), ))
赋值 (局部_左家剩牌, 读内存整数型 (程序集_进程标识符, 相加 (十六转十进制 (#常量_右家剩牌), 局部_偏移量, 局部_偏移量, 程序集_程序基址), ))
赋值 (局部_剩牌总数, 相加 (局部_右家剩牌, 局部_下家剩牌, 局部_左家剩牌))
.如果真 (不等于 (局部_剩牌总数, 54))
    赋值 (程序集_减自牌, 0)
.如果真结束
.如果真 (并且 (等于 (局部_剩牌总数, 54), 等于 (程序集_减自牌, 0)))
    子程序_初始化基址 ()
    子程序_清除牌面 ()
    
     ' ------------------- 按新地址取剩牌数-----------------------------------
    赋值 (程序集_右家剩牌, 读内存整数型 (程序集_进程标识符, 相加 (右家.剩牌, 程序集_程序基址), ))
    赋值 (程序集_下家剩牌, 读内存整数型 (程序集_进程标识符, 相加 (下家.剩牌, 程序集_程序基址), ))
    赋值 (程序集_左家剩牌, 读内存整数型 (程序集_进程标识符, 相加 (左家.剩牌, 程序集_程序基址), ))
     ' 本源码来自易语言资源网(www.5A5X.com)
    子程序_读取自身牌 ()
    赋值 (程序集_减自牌, 1) ' 防止重复减自己牌面
    
     ' ----------------------------时钟周期设置---------------------------------------------------
    赋值 (.时钟周期, 300)
    赋值 (.时钟周期, 300)
.如果真结束


.子程序 子程序_读取自身牌, 空白型, , 
.局部变量 局部_自家剩牌, 整数型, , , 
.局部变量 局部_自家全部牌, 字节集, , , 
.局部变量 i, 整数型, , , 
.局部变量 局部_字节集, 字节集, , , 
.局部变量 局部_牌号, 整数型, , , 
.局部变量 局部_失败整数, 整数型, , , 

 ' ----------------------------剩牌数---------------------------------------------------
赋值 (局部_自家剩牌, 读内存整数型 (程序集_进程标识符, 相加 (右家.剩牌, 程序集_程序基址), 局部_失败整数)) ' 右家是初始化一直是自己
 ' ----------------------------取自家牌数据---------------------------------------------------
.循环判断首 ()
    赋值 (局部_自家全部牌, 读内存字节集 (程序集_进程标识符, 相加 (右家.牌面, 程序集_程序基址), 相乘 (局部_自家剩牌, 8)))
.循环判断尾 (等于 (局部_自家全部牌, {  }))
 ' 本源码来自易语言资源网(www.5A5X.com)
.计次循环首 (局部_自家剩牌, i)
    赋值 (局部_字节集, 取字节集中间 (局部_自家全部牌, 相加 (相乘 (相减 (i, 1), 8), 1), 8))
    赋值 (局部_牌号, 取字节集数据 (取字节集左边 (局部_字节集, 1), #整数型, ))
    .如果真 (不等于 (局部_牌号, 0))
        赋值 (牌面 [局部_牌号], 标题, 到文本 (相减 (到数值 (牌面 [局部_牌号], 标题), 1)))
        赋值 (牌面 [局部_牌号], 文本颜色, #黑色)
        
        
    .如果真结束
    
.计次循环尾 ()

.子程序 子程序_初始化基址, 空白型, , 
.局部变量 局部_座位号, 整数型, , , 
.局部变量 局部_偏移量, 长整数型, , , 

赋值 (局部_座位号, 读内存整数型 (程序集_进程标识符, 相加 (十六转十进制 (#常量_座位号), 程序集_程序基址), ))
赋值 (局部_偏移量, 十六转十进制 (#常量_偏移量))

.判断开始 (等于 (局部_座位号, 0))
    赋值 (右家.剩牌, 十六转十进制 (#常量_右家剩牌))
    赋值 (右家.出牌, 十六转十进制 (#常量_右家出牌))
    赋值 (右家.牌面, 十六转十进制 (#常量_右家自己牌))
     ' 本源码来自易语言资源网(www.5A5X.com)
    赋值 (下家.剩牌, 相加 (十六转十进制 (#常量_右家剩牌), 相乘 (局部_偏移量, 1)))
    赋值 (下家.出牌, 相加 (十六转十进制 (#常量_右家出牌), 相乘 (局部_偏移量, 1)))
    赋值 (下家.牌面, 相加 (十六转十进制 (#常量_右家自己牌), 相乘 (局部_偏移量, 1)))
    
    赋值 (左家.剩牌, 相加 (十六转十进制 (#常量_右家剩牌), 相乘 (局部_偏移量, 2)))
    赋值 (左家.出牌, 相加 (十六转十进制 (#常量_右家出牌), 相乘 (局部_偏移量, 2)))
    赋值 (左家.牌面, 相加 (十六转十进制 (#常量_右家自己牌), 相乘 (局部_偏移量, 2)))
     ' 本源码来自易语言资源网(www.5A5X.com)
.判断 (等于 (局部_座位号, 1))
    赋值 (右家.剩牌, 相加 (十六转十进制 (#常量_右家剩牌), 相乘 (局部_偏移量, 1)))
    赋值 (右家.出牌, 相加 (十六转十进制 (#常量_右家出牌), 相乘 (局部_偏移量, 1)))
    赋值 (右家.牌面, 相加 (十六转十进制 (#常量_右家自己牌), 相乘 (局部_偏移量, 1)))
    
    赋值 (下家.剩牌, 相加 (十六转十进制 (#常量_右家剩牌), 相乘 (局部_偏移量, 2)))
    赋值 (下家.出牌, 相加 (十六转十进制 (#常量_右家出牌), 相乘 (局部_偏移量, 2)))
    赋值 (下家.牌面, 相加 (十六转十进制 (#常量_右家自己牌), 相乘 (局部_偏移量, 2)))
    
    赋值 (左家.剩牌, 十六转十进制 (#常量_右家剩牌))
    赋值 (左家.出牌, 十六转十进制 (#常量_右家出牌))
    赋值 (左家.牌面, 十六转十进制 (#常量_右家自己牌))
    
.判断 (等于 (局部_座位号, 2))
    赋值 (右家.剩牌, 相加 (十六转十进制 (#常量_右家剩牌), 相乘 (局部_偏移量, 2)))
    赋值 (右家.出牌, 相加 (十六转十进制 (#常量_右家出牌), 相乘 (局部_偏移量, 2)))
    赋值 (右家.牌面, 相加 (十六转十进制 (#常量_右家自己牌), 相乘 (局部_偏移量, 2)))
     ' 本源码来自易语言资源网(www.5A5X.com)
    赋值 (下家.剩牌, 十六转十进制 (#常量_右家剩牌))
    赋值 (下家.出牌, 十六转十进制 (#常量_右家出牌))
    赋值 (下家.牌面, 十六转十进制 (#常量_右家自己牌))
    
    赋值 (左家.剩牌, 相加 (十六转十进制 (#常量_右家剩牌), 相乘 (局部_偏移量, 1)))
    赋值 (左家.出牌, 相加 (十六转十进制 (#常量_右家出牌), 相乘 (局部_偏移量, 1)))
    赋值 (左家.牌面, 相加 (十六转十进制 (#常量_右家自己牌), 相乘 (局部_偏移量, 1)))
.默认
    
.判断结束


.子程序 _时钟_下家_周期事件, 空白型, , 
.局部变量 局部_出牌数, 整数型, , , 
.局部变量 局部_取字节集数组, 字节集, , , 
.局部变量 局部_剩牌, 整数型, , , 
.局部变量 局部_失败整数, 整数型, , , 
.局部变量 i, 整数型, , , 
.局部变量 局部_字节集, 字节集, , , 
.局部变量 局部_牌号, 整数型, , , 


 ' ------------------剩牌数-------------------------
.循环判断首 ()
    赋值 (局部_剩牌, 读内存整数型 (程序集_进程标识符, 相加 (下家.剩牌, 程序集_程序基址), 局部_失败整数))
.循环判断尾 (等于 (局部_失败整数, -1))

 ' ------------------出牌数-------------------------
.如果真 (并且 (小于 (局部_剩牌, 程序集_下家剩牌), 不等于 (局部_剩牌, 0))) ' 做限制防止读入过多没用的数据
    赋值 (局部_出牌数, 相减 (程序集_下家剩牌, 局部_剩牌))
    .如果真 (大于 (局部_出牌数, 0))
        赋值 (程序集_下家剩牌, 相减 (程序集_下家剩牌, 局部_出牌数))
         ' 本源码来自易语言资源网(www.5A5X.com)
        .循环判断首 ()
            赋值 (局部_取字节集数组, 读内存字节集 (程序集_进程标识符, 相加 (下家.出牌, 程序集_程序基址), 相乘 (局部_出牌数, 8)))
        .循环判断尾 (等于 (局部_取字节集数组, {  }))
        
        
        .计次循环首 (局部_出牌数, i)
            
            赋值 (局部_字节集, 取字节集中间 (局部_取字节集数组, 相加 (相乘 (相减 (i, 1), 8), 1), 8))
            赋值 (局部_牌号, 取字节集数据 (取字节集左边 (局部_字节集, 1), #整数型, ))
            
            .如果真 (不等于 (局部_牌号, 0))
                赋值 (牌面 [局部_牌号], 标题, 到文本 (相减 (到数值 (牌面 [局部_牌号], 标题), 1)))
                赋值 (牌面 [局部_牌号], 文本颜色, #黑色)
            .如果真结束
             ' 本源码来自易语言资源网(www.5A5X.com)
        .计次循环尾 ()
        
        
    .如果真结束
    
.如果真结束


.子程序 _时钟_左家_周期事件, 空白型, , 
.局部变量 局部_出牌数, 整数型, , , 
.局部变量 局部_取字节集数组, 字节集, , , 
.局部变量 局部_剩牌, 整数型, , , 
.局部变量 局部_失败整数, 整数型, , , 
.局部变量 i, 整数型, , , 
.局部变量 局部_字节集, 字节集, , , 
.局部变量 局部_牌号, 整数型, , , 


 ' ------------------剩牌数-------------------------
.循环判断首 ()
    赋值 (局部_剩牌, 读内存整数型 (程序集_进程标识符, 相加 (左家.剩牌, 程序集_程序基址), 局部_失败整数))
.循环判断尾 (等于 (局部_失败整数, -1))
 ' ------------------出牌数-------------------------
.如果真 (并且 (小于 (局部_剩牌, 程序集_左家剩牌), 不等于 (局部_剩牌, 0))) ' 做限制防止读入过多没用的数据
    赋值 (局部_出牌数, 相减 (程序集_左家剩牌, 局部_剩牌))
    .如果真 (大于 (局部_出牌数, 0))
        赋值 (程序集_左家剩牌, 相减 (程序集_左家剩牌, 局部_出牌数))
        .循环判断首 ()
            赋值 (局部_取字节集数组, 读内存字节集 (程序集_进程标识符, 相加 (左家.出牌, 程序集_程序基址), 相乘 (局部_出牌数, 8)))
        .循环判断尾 (等于 (局部_取字节集数组, {  }))
         ' 本源码来自易语言资源网(www.5A5X.com)
        .计次循环首 (局部_出牌数, i)
            赋值 (局部_字节集, 取字节集中间 (局部_取字节集数组, 相加 (相乘 (相减 (i, 1), 8), 1), 8))
            赋值 (局部_牌号, 取字节集数据 (取字节集左边 (局部_字节集, 1), #整数型, ))
            .如果真 (不等于 (局部_牌号, 0))
                赋值 (牌面 [局部_牌号], 标题, 到文本 (相减 (到数值 (牌面 [局部_牌号], 标题), 1)))
                赋值 (牌面 [局部_牌号], 文本颜色, #黑色)
            .如果真结束
            ' 本源码来自易语言资源网(www.5A5X.com)
        .计次循环尾 ()
        
        
        
    .如果真结束
    
.如果真结束


.程序集 程序集_进制转换, , , 

.子程序 十六转十进制, 长整数型, 公开, 成功返回转换后的十进制数值数据，失败返回 -1
.参数 十六文本, 文本型, 参考, 传入十六进制文本型数据，支持大小写文本

.局部变量 十进制, 长整数型, , , 转换后的十进制数值。

十六转十_ (相加 (“0x”, 十六文本), 1, 十进制)
返回 (十进制)

.程序集 程序集_内存, , , 

.子程序 读内存文本型, 文本型, 公开, 从内存中读取文本型数据(返回文本,失败返回0字节长度空内容)
.参数 进程ID, 整数型, , 
.参数 内存地址, 整数型, , 

.局部变量 局部_操作句柄, 整数型, , , 
.局部变量 局部_内存数据, 字节集, , , 
.局部变量 局部_缓存大小, 整数型, , , 
.局部变量 局部_内存块信息, 自定义_内存块信息, , , 
.局部变量 局部_字节, 字节型, , , 

 ' --========  易语言资源网  (www.5A5X.com)  ======--
 ' 努力创建完善、持续更新的易语言学习例程源码资源站
 ' --================   www.5A5X.com  ===========--
 ' --==================   易语言资源网注意事项  ================--
 ' * 易语言资源网为易语言官方站、易语言官方论坛提供辅助资源站；
 ' 本易语言资源网( www.5A5X.com)所有软件和资料均为软件作者提
 ' 供和网友推荐发布而来，其版权归该软件和程序源码的合法拥有者所
 ' 有，本站易语言资源网整理收集仅供易语言用户学习和易语言技术研
 ' 究探讨使用，不得用于任何商业用途。如果由于以上原因造成的版权
 ' 纠纷本站概不负责！
 ' * 本站资源未经许可，任何网站不得非法盗链及抄袭本站资源；如引用
 ' 页面，请注明来自易语言资源网，谢谢合作！
 ' --=====================   www.5A5X.com  ================--

赋值 (局部_操作句柄, 打开进程_ (#常量_进程权限, 0, 进程ID)) ' 取得操作句柄
_查询内存地址信息 (局部_操作句柄, 内存地址, 局部_内存块信息, 28) ' 取得内存块信息
赋值 (局部_缓存大小, 相减 (相加 (局部_内存块信息.RegionSize, 局部_内存块信息.BaseAddress), 内存地址))
赋值 (局部_内存数据, 取空白字节集 (局部_缓存大小))
赋值 (局部_字节, _内存读字节集 (局部_操作句柄, 内存地址, 局部_内存数据, 局部_缓存大小, 0))
关闭内核对象_ (局部_操作句柄)
 ' 本源码来自易语言资源网(www.5A5X.com)
.如果真 (不等于 (局部_字节, 0))
    返回 (到文本 (局部_内存数据))
.如果真结束
返回 (“”)

.子程序 读内存整数型, 整数型, 公开, 从内存中读取整数型数据,失败返回失败内容
.参数 参数_进程ID, 整数型, , 
.参数 参数_内存地址, 整数型, , 
.参数 参数_失败内容, 整数型, 可空, 读内存失败后返回值的内容 默认为-1

.局部变量 局部_临时整数, 整数型, , , 
.局部变量 局部_长度, 整数型, , , 
.局部变量 局部_操作句柄, 整数型, , , 
.局部变量 局部_数, 整数型, , , 

赋值 (局部_长度, 4)
 ' ---读整数----------------------------------
赋值 (局部_操作句柄, 打开进程_ (#常量_进程权限, 0, 参数_进程ID)) ' 取得操作句柄
赋值 (局部_数, 读取进程内存数据 (局部_操作句柄, 参数_内存地址, 局部_临时整数, 局部_长度, 0))
关闭内核对象_ (局部_操作句柄)
.如果 (等于 (局部_数, 0))
    返回 (选择 (是否为空 (参数_失败内容), -1, 参数_失败内容))
.否则
    返回 (局部_临时整数)
.如果结束
 ' 本源码来自易语言资源网(www.5A5X.com)

.子程序 读内存字节集, 字节集, 公开, 从内存中读取字节集数据(返回字节集,失败返回0字节长度的空字节集)
.参数 进程ID, 整数型, , 进程ID
.参数 地址, 整数型, , 内存地址
.参数 长度, 整数型, 可空, 欲读取内存数据的长度 (留空则智能读取)

.局部变量 操作句柄, 整数型, , , 
.局部变量 内存数据, 字节集, , , 
.局部变量 内存块信息, MEMORY_BASIC_INFORMATION, , , 
.局部变量 a, 短整数型, , , 

 ' 赋值 (操作句柄, 打开进程_ (#常量_进程权限, 0, 进程ID)) ' 取得操作句柄
.如果真 (等于 (长度, 0))
    dll_查询内存地址信息 (操作句柄, 地址, 内存块信息, 28)
    赋值 (长度, 相减 (相加 (内存块信息.RegionSize, 内存块信息.BaseAddress), 地址))
.如果真结束
赋值 (内存数据, 取空白字节集 (长度))
输出调试文本 (到文本 (内存数据))
赋值 (a, _内存读字节集 (操作句柄, 地址, 内存数据, 长度, 0))
' 本源码来自易语言资源网(www.5A5X.com)
关闭内核对象_ (操作句柄)
.如果真 (不等于 (a, 0))
    返回 (内存数据)
.如果真结束
返回 ({  })


 ' 不属于任何一个程序集、类模块的函数：
