 ' 文件类型：Windows模块源码

 ' 程序名称：HTTP进度下载类
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.1
 ' 创建号：0.0



.常量 数据块尺寸, "10240", , 10K/块
.常量 最低网速, "0.1", , KB/S


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 5 系统核心支持库





.DLL命令 CallWindowProc, 整数型, "user32.dll", "CallWindowProcA", , 
    .参数 程序指针, 整数型, , 
    .参数 下载文件名, 文本型, 传址, 
    .参数 文件尺寸, 整数型, , 
    .参数 下载速度, 整数型, , 
    .参数 下载进度, 整数型, , 

.DLL命令 CallWindowProc2, 整数型, "user32.dll", "CallWindowProcA", , 
    .参数 程序指针, 整数型, , 
    .参数 欲读入网址, 文本型, 传址, 
    .参数 状态代码, 整数型, , 
    .参数 状态文本, 文本型, , 
    .参数 下载进度, 整数型, , 

.程序集 程序集1, , , 

.子程序 _启动子程序, 整数型, , 请在本子程序中放置易模块初始化代码

_临时子程序 () ' 在初始化代码执行完毕后调用测试代码
返回 (0) ' 可以根据您的需要返回任意数值

.子程序 _临时子程序, 空白型, , 
 ' 本名称子程序用作测试程序用，仅在开发及调试环境中有效，编译发布程序前将被系统自动清空，请将所有用作测试的临时代码放在本子程序中。 ***注意不要修改本子程序的名称、参数及返回值类型。

.子程序 下载进度事件模板, 空白型, 公开, 
.参数 下载文件名, 文本型, , 
.参数 文件尺寸, 整数型, , Bit
.参数 下载速度, 整数型, , KB/S
.参数 下载进度, 整数型, , 



.子程序 下载状态事件模板, 空白型, 公开, 
.参数 欲读入网址, 文本型, , 
.参数 错误代码, 整数型, , 
.参数 状态文本, 文本型, , 
.参数 下载进度, 整数型, , 



.类模块 HTTP进度下载类, , , 

.程序集变量 XML对象, 对象, , , 
.程序集变量 已初始化, 逻辑型, , , 
.程序集变量 集_欲读入网址, 文本型, , , 
.程序集变量 集_引用页, 文本型, , , 
.程序集变量 集_数据块超时, 整数型, , , 
.程序集变量 集_错误信息, 文本型, , , 
.程序集变量 集_保存文件名, 文本型, , , 
.程序集变量 状态_开始下载, 逻辑型, , , 
.程序集变量 集_已下载尺寸, 整数型, , , 
.程序集变量 集_下载进度事件指针, 整数型, , , 
.程序集变量 集_下载状态事件指针, 整数型, , , 
.程序集变量 集_文件总尺寸, 整数型, , , 
.程序集变量 集_停止, 逻辑型, , , 
.程序集变量 集_数据块尺寸, 整数型, , , 
.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用
清除 ()

.子程序 清除, 空白型, , 清空HTTP下载类
停止下载 ()
XML对象.清除 ()
连续赋值 (假, , 状态_开始下载, 集_停止)
连续赋值 (0, 集_数据块超时, 集_已下载尺寸, 集_下载进度事件指针, 集_下载状态事件指针, 集_文件总尺寸, 集_数据块尺寸)
连续赋值 (“”, 集_保存文件名, 集_错误信息, , )


.子程序 初始化, 逻辑型, , 
.参数 下载进度事件指针, 子程序指针, 可空, 
.参数 下载状态事件指针, 子程序指针, 可空, 

.判断开始 (并且 (等于 (已初始化, 假), 等于 (状态_开始下载, 假)))
    XML对象.创建 (“MSXML2.ServerXMLHTTP”, )
    .判断开始 (XML对象.是否为空 ())
        返回 (假)
    .默认
        赋值 (已初始化, 真)
        赋值 (状态_开始下载, 假)
        赋值 (集_下载进度事件指针, 到数值 (下载进度事件指针))
        赋值 (集_下载状态事件指针, 到数值 (下载状态事件指针))
        赋值 (集_文件总尺寸, 0)
        赋值 (集_停止, 假)
        赋值 (集_数据块尺寸)

.子程序 置缓冲区尺寸, 空白型, , 如果不用本方法设置缓冲区大小，将默认为10KB。不要过小，太小了会因读写次数增多而影响速度；过大了则等待数据的时间会过长；应根据网络状态合理设置。
.参数 缓冲区尺寸, 字节型, , 单位为KB

.如果真 (并且 (已初始化, 等于 (状态_开始下载, 假)))
    .如果真 (等于 (0))
        赋值 (4)
    .如果真结束
    赋值 (相乘 (1024))
    赋值 ()

.子程序 Http网址, 空白型, , 
.参数 欲读入网址, 文本型, , 
.参数 引用页, 文本型, 可空, 

.如果真 (并且 (已初始化, 等于 (状态_开始下载, 假)))
    赋值 (集_欲读入网址, 欲读入网址)
    赋值 (集_引用页, 引用页)
.如果真结束


.子程序 置保存文件名, 逻辑型, , 
.参数 文件名, 文本型, , 

.如果真 (并且 (已初始化, 等于 (状态_开始下载, 假)))
    赋值 (集_保存文件名, 文件名)
    返回 (真)
.如果真结束
返回 (假)


.子程序 开始下载, 逻辑型, , 
.局部变量 字节集数据, 字节集, , , 
.局部变量 数据块开始下载时间, 整数型, , , 
.局部变量 文件号, 整数型, , , 
.局部变量 网页文件读写及尺寸信息, 文本型, , , 
.局部变量 temp, 整数型, , , 
.局部变量 当前读写位置, 整数型, , , 
.局部变量 下载速度, 整数型, , , 
.局部变量 已下载的百分比, 整数型, , , 
.局部变量 集_下载起点, 整数型, , , 
.局部变量 status, 整数型, , , 

.如果真 (等于 (已初始化, 假))
    赋值 (集_错误信息, “没有初始化”)
    发送状态事件 ()
    返回 (假)
.如果真结束
.如果真 (状态_开始下载)
    赋值 (集_错误信息, “正在下载中……”)
    未知函数_67174776 ()
    返回 (假)
.如果真结束
赋值 (文件号, 打开文件 (集_保存文件名, #改写, #禁止读写))
.如果真 (等于 (文件号, 0))
    赋值 (集_错误信息, “本地文件无法打开”)
    发送状态事件 ()
    返回 (假)
.如果真结束
赋值 (集_下载起点, 取文件长度 (文件号))
赋值 (集_已下载尺寸, 集_下载起点)
移到文件尾 (文件号)
赋值 (状态_开始下载, 真)
赋值 (集_错误信息, “”)
赋值 (集_停止, 假)
.循环判断首 ()
    XML对象.方法 (“open”, “GET”, 集_欲读入网址, 真)
    XML对象.方法 (“setRequestHeader”, “Referer”, 集_引用页)
    XML对象.方法 (“setRequestHeader”, “Accept”, “*/*”)
    XML对象.方法 (“setRequestHeader”, “User-Agent”, “Mozilla/4.0 (compatible; MSIE 5.00; Windows 98)”)
    XML对象.方法 (“setRequestHeader”, “Range”, 相加 (“bytes=”, 到文本 (集_下载起点), “-”, 到文本 (相减 (相加 (集_下载起点, 集_数据块尺寸), 1))))
    XML对象.方法 (“setRequestHeader”, “Content-Type”, “application/octet-stream”)
    XML对象.方法 (“setRequestHeader”, “Pragma”, “no-cache”)
    XML对象.方法 (“setRequestHeader”, “Cache-Control”, “no-cache”)
    XML对象.方法 (“send”, )
    赋值 (数据块开始下载时间, 取启动时间 ())
    .判断循环首 (不等于 (XML对象.读数值属性 (“readyState”, ), 4))
        .如果真 (大于 (相减 (取启动时间 (), 数据块开始下载时间), 集_数据块超时))
            XML对象.方法 (“abort”, )
            赋值 (集_错误信息, “数据下载超时，建议重试。”)
            关闭文件 (文件号)
            发送状态事件 ()
            清除下载信息 ()
            返回 (假)
        .如果真结束
        .如果真 (集_停止)
            赋值 (集_错误信息, “用户中止了下载”)
            关闭文件 (文件号)
            发送状态事件 ()
            清除下载信息 ()
            返回 (假)
        .如果真结束
        XML对象.逻辑方法 (“waitForResponse”, 1000)
    .判断循环尾 ()
     ' 检测状态
    赋值 (status, XML对象.读数值属性 (“status”, ))
    .如果真 (并且 (大于 (status, 299), 不等于 (status, 416))) ' http出错
        赋值 (集_错误信息, XML对象.读文本属性 (“statusText”, ))
        跳出循环 ()
    .如果真结束
    .如果真 (并且 (不等于 (status, 206), 不等于 (status, 416))) ' 服务器不支持断点续传
        赋值 (集_错误信息, “服务器不支持断点续传！”)
        跳出循环 ()
    .如果真结束
    写出字节集 (文件号, XML对象.读属性 (“responseBody”, ).取字节集 ())
    赋值 (网页文件读写及尺寸信息, XML对象.文本方法 (“getResponseHeader”, “Content-Range”))
    .判断开始 (等于 (网页文件读写及尺寸信息, “”))
        赋值 (集_错误信息, “文件长度未知！”)
    .默认
        .如果真 (等于 (集_文件总尺寸, 0))
            赋值 (集_文件总尺寸, 到数值 (取文本右边 (网页文件读写及尺寸信息, 相减 (取文本长度 (网页文件读写及尺寸信息), 倒找文本 (网页文件读写及尺寸信息, “/”, , 假)))))
        .如果真结束
        赋值 (当前读写位置, 到数值 (取文本右边 (网页文件读写及尺寸信息, 相减 (取文本长度 (网页文件读写及尺寸信息), 倒找文本 (网页文件读写及尺寸信息, “-”, , 假)))))
        赋值 (集_已下载尺寸, 相减 (相加 (集_已下载尺寸, 当前读写位置), 集_下载起点))
        .如果真 (大于 (集_已下载尺寸, 集_文件总尺寸))
            赋值 (集_已下载尺寸, 集_文件总尺寸)
        .如果真结束
        赋值 (集_下载起点, 相加 (当前读写位置, 1))
        赋值 (已下载的百分比, 相除 (相乘 (集_已下载尺寸, 100), 集_文件总尺寸))
    .判断结束
    赋值 (temp, 相减 (取启动时间 (), 数据块开始下载时间))
    赋值 (下载速度, 相除 (集_数据块尺寸, 1.024, temp))
    .如果真 (不等于 (集_下载进度事件指针, 0))
        未知函数_167838073 (集_下载进度事件指针, 集_保存文件名, 集_文件总尺寸, 下载速度, 已下载的百分比)
    .如果真结束
    .如果真 (等于 (集_文件总尺寸, 集_已下载尺寸))
        赋值 (集_错误信息, “下载完毕”)
        跳出循环 ()
    .如果真结束
    .如果真 (等于 (status, 416))
        赋值 (集_错误信息, “下载完毕”)
        跳出循环 ()
    .如果真结束
    
.循环判断尾 (等于 (集_停止, 假))
关闭文件 (文件号)
发送状态事件 ()
清除下载信息 ()
返回 (等于 (集_错误信息, “下载完毕”))

.子程序 清除下载信息, 空白型, , 
连续赋值 (假, 状态_开始下载, 集_停止)
连续赋值 (0, 集_已下载尺寸, 集_文件总尺寸)


.子程序 发送状态事件, 空白型, , 
.如果真 (不等于 (集_下载状态事件指针, 0))
    未知函数_167838074 (集_下载状态事件指针, 集_欲读入网址, XML对象.读数值属性 (“status”, ), 集_错误信息, 相除 (相乘 (集_已下载尺寸, 100), 集_文件总尺寸))
.如果真结束


.子程序 停止下载, 空白型, , 
.如果真 (状态_开始下载)
    赋值 (集_停止, 真)
    XML对象.方法 (“abort”, )
.如果真结束



 ' 不属于任何一个程序集、类模块的函数：
