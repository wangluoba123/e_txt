 ' 文件类型：Windows模块源码

 ' 程序名称：共享内存&重复运行
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0





 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 6 系统核心支持库





.DLL命令 Z_共享内存_CreateFileMappingA, 整数型, "kernel32.dll", "CreateFileMappingA", , 
    .参数 文件映射句柄, 整数型, , 指定欲在其中创建映射的一个文件句柄。&HFFFFFFFF&表示在内存中创建一个文件映射
    .参数 安全对象, 整数型, , SECURITY_ATTRIBUTES，指定一个安全对象，在创建文件映射时使用。如果为NULL（用ByVal As Long传递零），表示使用默认安全对象
    .参数 打开映射方式, 整数型, , 下述常数之一：;PAGE_READONLY：以只读方式打开映射;PAGE_READWRITE：以可读、可写方式打开映射;PAGE_WRITECOPY：为写操作留下备份可组合使用下述一个或多个常数;SEC_COMMIT：为文件映射一个小节中的所有页分配内存;SEC_IMAGE：文件是个可执行文件;SEC_RESERVE：为没有分配实际内存的一个小节保留虚拟内存空间
    .参数 文件映射最大长度, 整数型, , 文件映射的最大长度（高32位）
    .参数 文件映射的最小长度, 整数型, , 文件映射的最小长度（低32位）。如这个参数和dwMaximumSizeHigh都是零，就用磁盘文件的实际长度
    .参数 映射对象名, 文本型, , 指定文件映射对象的名字。如存在这个名字的一个映射，函数就会打开它。用vbNull创建一个无名的文件映射;

.DLL命令 Z_共享内存_OpenFileMappingA, 整数型, "kernel32.dll", "OpenFileMappingA", , 
    .参数 常数, 整数型, , 带有前缀FILE_MAP_???的一个常数。参考MapViewOfFile函数的dwDesiredAccess参数的说明
    .参数 进程继承, 逻辑型, , 如这个函数返回的句柄能由当前进程启动的新进程继承，则这个参数为TRUE
    .参数 文件映射对象名称, 文本型, , 指定要打开的文件映射对象名称;

.DLL命令 Z_共享内存_MapViewOfFile, 整数型, "kernel32.dll", "MapViewOfFile", , 将一个文件映射对象映射到当前应用程序的地址空间。MapViewOfFileEx允许我们指定一个基本地址来进行映射　文件映射在内存中的起始地址。零表示出错。会设置GetLastError
    .参数 hFileMappingObject, 整数型, , 
    .参数 dwDesiredAccess, 整数型, , 
    .参数 dwFileOffsetHigh, 整数型, , 
    .参数 dwFileOffsetLow, 整数型, , 
    .参数 dwNumberOfBytesToMap, 整数型, , 

.DLL命令 Z_共享内存_CloseHandle, 逻辑型, "kernel32.dll", "CloseHandle", , 
    .参数 对象句柄, 整数型, , 欲关闭的一个对象的句柄;  

.DLL命令 Z_共享内存_UnmapViewOfFile, 逻辑型, "kernel32.dll", "UnmapViewOfFile", , 在当前应用程序的内存地址空间解除对一个文件映射对象的映射　非零表示成功，零表示失败。会设置GetLastError
    .参数 lpBaseAddress, 整数型, , 指定要解除映射的一个文件映射的基准地址。这个地址是早先用MapViewOfFile函数获得的;  

.DLL命令 Z_共享内存_拷贝内存_文本, 空白型, "kernel32.dll", "RtlMoveMemory", , 
    .参数 目标数据, 整数型, , any
    .参数 原数据, 文本型, 传址, any
    .参数 尺寸, 整数型, , 

.DLL命令 L_A_取自进程ID, 整数型, "kernel32.dll", "GetCurrentProcessId", 公开, 

.程序集 程序集1, , , 

.子程序 _启动子程序, 整数型, , 请在本子程序中放置易模块初始化代码

_临时子程序 () ' 在初始化代码执行完毕后调用测试代码
返回 (0) ' 可以根据您的需要返回任意数值

.子程序 _临时子程序, 空白型, , 
 ' 本名称子程序用作测试程序用，仅在开发及调试环境中有效，编译发布程序前将被系统自动清空，请将所有用作测试的临时代码放在本子程序中。 ***注意不要修改本子程序的名称、参数及返回值类型。


.子程序 L_重复运行, 逻辑型, 公开, 未重复运行返回0,重复运行则返回已运行程序进程ID
.参数 运行标识, 文本型, 可空, 

.判断开始 (是否为空 (运行标识))
    赋值 (运行标识, 取执行文件名 ())
.默认
    
.判断结束

.如果 (等于 (L_读共享内存 (运行标识, 6), “真”))
    返回 (真)
.否则
    L_写共享内存 (运行标识, 6, “真”)
    返回 (假)
.如果结束


.子程序 L_写共享内存, 空白型, , 共享内存
.参数 标识, 文本型, , 
.参数 地址, 整数型, , 
.参数 内容, 文本型, , 

.局部变量 视图地址, 空白型, , , 
.局部变量 映射句柄, 空白型, , , 

.判断开始 (检测内存 (地址))
    赋值 (映射句柄, Z_共享内存_CreateFileMappingA (-1, 0, 4, 0, 取文本长度 (内容), 标识)) ' 4的整数倍-对齐
    赋值 (视图地址, Z_共享内存_MapViewOfFile (映射句柄, 地址, 0, 0, 0))
    Z_共享内存_拷贝内存_文本 (视图地址, 内容, 取文本长度 (内容))
    
.默认
     ' 信息框 (“地址必须是 4的倍数＋2”, 0, )
.判断结束


.子程序 L_读共享内存, 文本型, , 共享内存
.参数 标识, 文本型, , 
.参数 地址, 整数型, , 

.局部变量 映射句柄, 空白型, , , 
.局部变量 视图地址, 空白型, , , 


赋值 (映射句柄, Z_共享内存_OpenFileMappingA (2, 真, 标识))
赋值 (视图地址, Z_共享内存_MapViewOfFile (映射句柄, 地址, 0, 0, 0))
Z_共享内存_CloseHandle (映射句柄)
返回 (指针到文本 (视图地址))

.子程序 检测内存, 逻辑型, , 共享内存
.参数 地址, 整数型, , 

.局部变量 余数, 空白型, , , 

赋值 (余数, 求余数 (相减 (地址, 2), 4))
.如果真 (或者 (等于 (余数, 0), 等于 (余数, 1)))
    返回 (真)
.如果真结束
返回 (假)


 ' 不属于任何一个程序集、类模块的函数：
