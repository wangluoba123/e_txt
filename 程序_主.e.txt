 ' 文件类型：Windows窗口程序

 ' 程序名称：易消费系统
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 704
    高度 = 539
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 1
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 真
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    窗口类名 = “”
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “易IC卡消费系统--演示版”
    帮助文件名 = “”

窗口 窗口_结算
    左边 = 50
    顶边 = 50
    宽度 = 380
    高度 = 250
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = 16777215 '  0xFFFFFF
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    窗口类名 = “”
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “”
    帮助文件名 = “”



.常量 流水账_方式_收入, "“收入”", , 
.常量 流水账_方式_支出, "“支出”", , 
.常量 , , , 
.常量 流水账_来源_充值, "“会员充值”", , 
.常量 流水账_来源_注册, "“注册费用”", , 
.常量 流水账_来源_消费, "“会员消费”", , 
.常量 流水账_来源_现金, "“现金消费”", , 
.常量 流水账_来源_综合, "“会员现金”", , 
.常量 , , , 
.常量 消费_方式_现金, "“现金消费”", , 
.常量 消费_方式_会员, "“会员消费”", , 
.常量 消费_方式_综合, "“会员现金”", , 
.常量 数据库_状态_成功, "0", 隐藏, SQLite3_OK
.常量 数据库_状态_错误, "1", 隐藏, SQLite3_ERROR SQL 错误或没有数据库
.常量 数据库_状态_内部错误, "2", 隐藏, SQLite3_INTERNAL 一个SQLite内部的逻辑错误
.常量 数据库_状态_权限错误, "3", 隐藏, SQLite3_PERM 访问权限被拒绝
.常量 数据库_状态_执行中断, "4", 隐藏, SQLite3_ABORT 需要一个中断的Callback指令
.常量 数据库_状态_文件繁忙, "5", 隐藏, SQLite3_BUSY 数据库文件被锁定
.常量 数据库_状态_表被锁定, "6", 隐藏, SQLite3_LOCKED 表被锁定
.常量 数据库_状态_申请内存失败, "7", 隐藏, SQLite3_NOMEM
.常量 数据库_状态_只读模式, "8", 隐藏, SQLite3_READONLY 试图写一个只读的数据库
.常量 数据库_状态_操作中断, "9", 隐藏, SQLite3_INTERRUPT 操作被中断结束
.常量 数据库_状态_IO错误, "10", 隐藏, SQLite3_IOERR 某种磁盘I/O错误发生
.常量 数据库_状态_镜像损坏, "11", 隐藏, SQLite3_CORRUPT 数据库磁盘镜像异常
.常量 数据库_状态_未找到, "12", 隐藏, SQLite3_NOTFOUND 未使用。表或记录不存在
.常量 数据库_状态_数据库满, "13", 隐藏, SQLite3_FULL 数据库满，插入失败
.常量 数据库_状态_不能打开, "14", 隐藏, SQLite3_CANTOPEN 不能打开数据库文件
.常量 数据库_状态_协议错误, "15", 隐藏, SQLite3_PROTOCOL 数据库错定协议错
.常量 数据库_状态_空表, "16", 隐藏, SQLite3_EMPTY 数据库表为空
.常量 数据库_状态_结构改变, "17", 隐藏, SQLite3_SCHEMA 数据库结构被改变
.常量 数据库_状态_表太大, "18", 隐藏, SQLite3_TOOBIG 一个表的行数据过多
.常量 数据库_状态_约束冲突, "19", 隐藏, SQLite3_CONSTRAINT 由于约束冲突而中止
.常量 数据库_状态_类型不匹配, "20", 隐藏, SQLite3_MISMATCH 数据类型不匹配
.常量 数据库_状态_错误使用, "21", 隐藏, SQLite3_MISUSE 库被不正确使用
.常量 数据库_状态_不支持OS, "22", 隐藏, SQLite3_NOLFS 主机不支持的OS特性
.常量 数据库_状态_否定认证, "23", 隐藏, SQLite3_AUTH 授权被否定
.常量 数据库_状态_格式错误, "24", 隐藏, SQLite3_FORMAT 辅助数据库格式错误
.常量 数据库_状态_超出范围, "25", 隐藏, SQLite3_RANGE 绑定参数时索引超出范围
.常量 数据库_状态_无数据库, "26", 隐藏, SQLite3_NOTADB 文件已打开但没有数据库
.常量 数据库_状态_行已就绪, "100", 隐藏, SQLite3_ROW 有另一行就绪
.常量 数据库_状态_执行完成, "101", 隐藏, SQLite3_DONE 已经完成执行
.常量 数据库_打开_数据表名, "2", 隐藏, SQLite3
.常量 数据库_打开_SQL语句, "1", 隐藏, SQLite3
.常量 数据库_字段类型_整数, "1", 隐藏, SQLite3
.常量 数据库_字段类型_双精度, "2", 隐藏, SQLite3
.常量 数据库_字段类型_文本型, "3", 隐藏, SQLite3
.常量 数据库_字段类型_字节集, "4", 隐藏, SQLite3
.常量 数据库_字段类型_长整数, "6", 隐藏, SQLite3
.常量 数据库_字段类型_单精度, "7", 隐藏, SQLite3
.常量 数据库_字段类型_逻辑型, "8", 隐藏, SQLite3
.常量 数据库_字段类型_日期时间, "9", 隐藏, SQLite3
.常量 数据库_字段类型_备注型, "10", 隐藏, SQLite3
.常量 数据库_字段属性_无, "0", 隐藏, SQLite3
.常量 数据库_字段属性_主键, "1", 隐藏, SQLite3
.常量 数据库_字段属性_递增, "2", 隐藏, SQLite3
.常量 数据库_字段属性_主键且递增, "3", 隐藏, SQLite3
.常量 数据库_字段属性_非空, "4", 隐藏, SQLite3
.常量 数据库_析构_静态, "0", 隐藏, SQLite3_STATIC
.常量 数据库_析构_临时, "-1", 隐藏, SQLite3_TRANSIENT
.常量 数据库_触发条件_插入, "0", 隐藏, SQLite3
.常量 数据库_触发条件_删除, "1", 隐藏, SQLite3
.常量 数据库_触发条件_更新, "2", 隐藏, SQLite3
.常量 数据库_触发条件_字段更新, "3", 隐藏, SQLite3
.常量 数据库_触发时间_普通, "0", 隐藏, SQLite3
.常量 数据库_触发时间_之前, "1", 隐藏, SQLite3
.常量 数据库_触发时间_之后, "2", 隐藏, SQLite3


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 5 0 系统核心支持库
 ' iext 27bb20fdd3e145e4bee3db39ddd6e64c 2 0 扩展界面支持库一
 ' iext3 {B6F7542F-B8FE-46a8-9605-98856A687097} 3 0 扩展界面支持库三
 ' eGrid 0B4337DA651B4b619ACF61334A7E8B47 2 6 高级表格支持库
 ' iext2 AF6AD80AA4244A59AFB3D83ECF5173CC 2 0 扩展界面支持库二
 ' spec A512548E76954B6E92C21055517615B0 3 0 特殊功能支持库
 ' EChartBar 9A3F84D7FDEB4a0486F2711D5104B7F7 2 0 数据图表支持库



 ' 所需要的模块
 ' WSR-M1模块 E:\易语言编程存档\易消费系统\易消费系统-溜冰场\WSR-M1模块.ec
 ' EC_鑫佑软件_SQLite3数据库操作类 E:\易语言编程存档\易消费系统\易消费系统-溜冰场\EC_鑫佑软件_SQLite3数据库操作类V1.0.ec
 ' 限制窗口尺寸 E:\易语言编程存档\易消费系统\易消费系统-溜冰场\限制窗口尺寸.ec


数据类型 消费信息, , 
    .成员 服务名称, 文本型, , , 
    .成员 服务单价, 双精度小数型, , , 
    .成员 消费类型, 文本型, , , 
    .成员 点单次数, 整数型, , , 
    .成员 编号, 文本型, , , 

数据类型 消费项目, , 
    .成员 订单号, 文本型, , , 
    .成员 消费名称, 文本型, , , 
    .成员 消费数量, 整数型, , , 
    .成员 消费单价, 双精度小数型, , , 
    .成员 单项合计, 双精度小数型, , , 
    .成员 点品时间, 日期时间型, , , 

数据类型 订单数据类型, , 
    .成员 订单号, 长整数型, , , 
    .成员 消费金额, 双精度小数型, , , 
    .成员 消费积分, 整数型, , , 
    .成员 会员卡号, 文本型, , , 
    .成员 操作管理, 文本型, , , 
    .成员 订单时间, 日期时间型, , , 
    .成员 是否结算, 整数型, , , 

数据类型 会员卡数据类型, , 
    .成员 积分, 整数型, , , 
    .成员 金额, 双精度小数型, , , 

数据类型 会员充值数据类型, , 
    .成员 卡号, 文本型, , , 
    .成员 原金额, 双精度小数型, , , 
    .成员 充值金额, 双精度小数型, , , 
    .成员 卡余金额, 双精度小数型, , , 
    .成员 充值时间, 日期时间型, , , 
    .成员 操作管理, 文本型, , , 

数据类型 流水账数据类型, , 
    .成员 流水号, 文本型, , , 
    .成员 时间, 日期时间型, , , 
    .成员 方式, 文本型, , , 
    .成员 金额, 双精度小数型, , , 
    .成员 来源, 文本型, , , 
    .成员 入账单号, 文本型, , , 

数据类型 类型_SQLite3字段信息, 公开, 
    .成员 字段名称, 文本型, , , 
    .成员 字段类型, 整数型, , , 请参考“数据库_字段类型”开头的常量
    .成员 字段默认, 文本型, , , 
    .成员 字段长度, 整数型, , , 
    .成员 字段属性, 整数型, , , 请参考“数据库_字段属性”开头的常量

数据类型 类型_分页控件, 公开, 
    .成员 到首页, 超级链接框, , , 
    .成员 上一页, 超级链接框, , , 
    .成员 下一页, 超级链接框, , , 
    .成员 到尾页, 超级链接框, , , 

.全局变量 全局_数据库, SQLite3数据库连接类, , , 
.全局变量 全局_设备端口, 整数型, , , 
.全局变量 全局_当前管理, 文本型, , , 
.全局变量 全局_消费金额, 双精度小数型, , , 
.全局变量 全局_消费积分, 整数型, , , 
.全局变量 全局_当前订单, 文本型, , , 
.全局变量 全局_会员卡号, 文本型, , , 
.全局变量 全局_会员信息, 会员卡数据类型, , , 
.全局变量 SQL语句, 文本型, 公开, , 
.全局变量 SQL语句参数, 文本型, 公开, , 
.全局变量 SQL语句数组, 文本型, 公开, "0", 

.窗口程序集 启动窗口窗口程序集, , , 

.程序集变量 程序集_日期, 日期时间型, , , 
.程序集变量 程序集_总行数, 整数型, , , 
.程序集变量 程序集_分页数值, 整数型, , , 
.程序集变量 程序集_查询条件, 文本型, , , 
.子程序 重要信息, 空白型, , 
 ' 0F00FF69
 ' 只有B密码才可以读取的


.子程序 __启动窗口_创建完毕, 空白型, , 
限制窗口尺寸 (_启动窗口.取窗口句柄 (), 700, 500)
打开读卡器设备 ()
.如果真 (全局_数据库.连接 (相加 (取运行目录 (), “\sqlite.DB”), “woaihanasd1991”, 假))
    .如果真 (风格切换 (“白色风格”))
        赋值 (程序集_日期, 取现行时间 ())
        赋值 (全局_设备端口, 0)
        赋值 (全局_当前管理, “admin”)
        赋值 (全局_会员卡号, 取重复文本 (30, “ ”))
        会员消费列表框初始化 ()
        初始化消费表格 (“高级表格_会员消费”, )
        高级表格_会员消费初始化 ()
        统计今日消费 ()
        0.置文本 (相加 (“当前管理：”, 全局_当前管理))
        _单选框_未结算_被单击 ()
        赋值 (.时钟周期, 1000)
    .如果真结束
    
.如果真结束


.子程序 打开读卡器设备, 逻辑型, , 
.参数 真假, 逻辑型, 可空, 

.如果真 (小于 (设备_关闭设备_ (全局_设备端口), 0))
    .如果真 (真假)
        信息框 (“读卡器需重启程序”, #警告图标, )
        返回 (假)
    .如果真结束
    
.如果真结束
.如果真 (小于 (设备_打开设备_ (全局_设备端口), 0))
    信息框 (“读卡器打开失败”, #警告图标, )
    返回 (假)
.如果真结束
返回 (真)

.子程序 __启动窗口_尺寸被改变, 空白型, , 
.如果真 (不等于 (., 2))
    0.移动 (0, 取用户区宽度 (), 相减 (取用户区高度 (), .))
    5.移动 (相加 (., 35), , )
    相加 (.左边, .宽度, 2).移动 (相加 (., 11), 相减 (取用户区宽度 (), .角度, 1), 相减 (., .加粗))
    .如果真 (大于 (., .))
        .移动 (.加粗, , )
    .如果真结束
    .判断开始 (大于或等于 (., .))
        .移动 (.角度, .顶边, .倾斜, 4)
    .默认
        .移动 (.角度, , .倾斜, 4)
    .判断结束
    .移动 (.角度, 相加 (., ., 1), 相减 (取用户区宽度 (), .角度, 1), 相减 (相加 (相减 (取用户区高度 (), .), .), ., 10))
    5.移动 (相加 (.顶边, .高度, 40), .宽度, 相减 (., .顶边, .高度, .可视, 43))
    5.移动 (相减 (., .可视, 1), .倾斜, )
    相除 (相减 (取用户区宽度 (), .宽度), 2).移动 (相除 (相减 (取用户区高度 (), .高度), 2), , )
    相除 (相减 (取用户区宽度 (), .宽度), 2).移动 (相除 (相减 (取用户区高度 (), .高度), 2), , )
    .移动 (相减 (取用户区宽度 (), 相乘 (., 2)), 相减 (取用户区高度 (), 相乘 (., 1.5)))
    .移动 (相减 (取用户区宽度 (), 相乘 (., 2)), 相减 (取用户区高度 (), 相乘 (., 1.5)))
    .移动 (相减 (取用户区宽度 (), 相乘 (., 2)), 相减 (取用户区高度 (), 相乘 (., 1.5)))
    相减 (., .宽度).移动 ()
    相减 (., .宽度).移动 ()
    0.移动 (相加 (., 4), 取用户区宽度 (), 相减 (取用户区高度 (), ., 4))
    0.移动 (相加 (., 4), 取用户区宽度 (), 相减 (取用户区高度 (), ., 4))
    相减 (.倾斜, .宽度).移动 ()
    相减 (.左边, .宽度).移动 ()
    .移动 (相减 (., ., 10))
    调整分割条查询订单位置 ()
.如果真结束


.子程序 风格切换, 逻辑型, , 
.参数 参数_风格名称, 文本型, , 

.局部变量 局部_记录集, SQLite3记录集类, , , 
.局部变量 局部_语句, 文本型, , , 
.局部变量 局部_风格名称, 文本型, , , 
.局部变量 选择夹_表头底色渐变, 整数型, , , 
.局部变量 选择夹_正常表头底色, 整数型, , , 
.局部变量 选择夹_点燃表头底色, 整数型, , , 
.局部变量 选择夹_选中表头底色, 整数型, , , 
.局部变量 选择夹_页面底色, 整数型, , , 
.局部变量 选择夹_边框颜色, 整数型, , , 
.局部变量 选择夹_正常标题颜色, 整数型, , , 
.局部变量 选择夹_点燃标题颜色, 整数型, , , 
.局部变量 选择夹_选中标题颜色, 整数型, , , 
.局部变量 选择夹_背景颜色, 整数型, , , 
.局部变量 选择夹_指定渐变起始色, 整数型, , , 
.局部变量 选择夹_正常渐变起始色, 整数型, , , 
.局部变量 选择夹_点燃渐变起始色, 整数型, , , 
.局部变量 选择夹_选中渐变起始色, 整数型, , , 
.局部变量 启动窗口_底色, 整数型, , , 
.局部变量 状态条_背景颜色, 整数型, , , 
.局部变量 分组框_消费信息_背景颜色, 整数型, , , 
.局部变量 分组框_消费信息_文本颜色, 整数型, , , 
.局部变量 标签_会员信息_文本颜色, 整数型, , , 
.局部变量 标签_消费单号_文本颜色, 整数型, , , 
.局部变量 标签_消费金额_文本颜色, 整数型, , , 
.局部变量 标签_赠送积分_文本颜色, 整数型, , , 
.局部变量 超级列表框_消费订单_背景颜色, 整数型, , , 
.局部变量 超级列表框_消费订单_文本背景色, 整数型, , , 
.局部变量 超级列表框_消费订单_文本颜色, 整数型, , , 
.局部变量 标签_今日订单_文本颜色, 整数型, , , 
.局部变量 标签_今日订单_背景颜色, 整数型, , , 
.局部变量 单选框_未结算_文本颜色, 整数型, , , 
.局部变量 单选框_已结算_文本颜色, 整数型, , , 
.局部变量 单选框_未结算_背景颜色, 整数型, , , 
.局部变量 单选框_已结算_背景颜色, 整数型, , , 
.局部变量 超级列表框_会员消费_文本颜色, 整数型, , , 
.局部变量 超级列表框_会员消费_文本背景色, 整数型, , , 
.局部变量 超级列表框_会员消费_背景颜色, 整数型, , , 
.局部变量 工具条_会员消费_背景颜色, 整数型, , , 

.如果真 (等于 (局部_记录集.置连接 (全局_数据库), 假))
    信息框 (“数据库至连接失败”, #错误图标, )
    返回 (假)
.如果真结束
赋值 (局部_语句, 相加 (“select * from oa_fg where ”, #引号, “风格名称”, #引号, “=”, #引号, 参数_风格名称, #引号))
.如果真 (等于 (局部_记录集.打开 (局部_语句), 假))
    返回 (假)
.如果真结束
.如果真 (局部_记录集.读文本 (“风格名称”, 局部_风格名称))
    .如果真 (等于 (局部_风格名称, 参数_风格名称))
        局部_记录集.读整数 (“选择夹_表头底色渐变”, 选择夹_表头底色渐变)
        .判断开始 (等于 (选择夹_表头底色渐变, 0))
            赋值 (., 假)
        .默认
            赋值 (., 真)
            局部_记录集.读整数 (“选择夹_正常表头底色”, 选择夹_正常表头底色)
            局部_记录集.读整数 (“选择夹_点燃表头底色”, 选择夹_点燃表头底色)
            局部_记录集.读整数 (“选择夹_选中表头底色”, 选择夹_选中表头底色)
            赋值 (., 选择夹_正常表头底色)
            赋值 (., 选择夹_点燃表头底色)
            赋值 (., 选择夹_选中表头底色)
        .判断结束
        局部_记录集.读整数 (“选择夹_页面底色”, 选择夹_页面底色)
        赋值 (., 选择夹_页面底色)
        局部_记录集.读整数 (“选择夹_边框颜色”, 选择夹_边框颜色)
        赋值 (., 选择夹_边框颜色)
        局部_记录集.读整数 (“选择夹_正常标题颜色”, 选择夹_正常标题颜色)
        赋值 (., 选择夹_正常标题颜色)
        局部_记录集.读整数 (“选择夹_点燃标题颜色”, 选择夹_点燃标题颜色)
        赋值 (., 选择夹_点燃标题颜色)
        局部_记录集.读整数 (“选择夹_选中标题颜色”, 选择夹_选中标题颜色)
        赋值 (., 选择夹_选中标题颜色)
        局部_记录集.读整数 (“选择夹_背景颜色”, 选择夹_背景颜色)
        赋值 (., 选择夹_背景颜色)
        局部_记录集.读整数 (“选择夹_指定渐变起始色”, 选择夹_指定渐变起始色)
        .判断开始 (等于 (选择夹_指定渐变起始色, 0))
            赋值 (., 假)
        .默认
            赋值 (., 真)
            局部_记录集.读整数 (“选择夹_正常渐变起始色”, 选择夹_正常渐变起始色)
            局部_记录集.读整数 (“选择夹_点燃渐变起始色”, 选择夹_点燃渐变起始色)
            局部_记录集.读整数 (“选择夹_选中渐变起始色”, 选择夹_选中渐变起始色)
            赋值 (., 选择夹_正常渐变起始色)
            赋值 (., 选择夹_点燃渐变起始色)
            赋值 (., 选择夹_选中渐变起始色)
        .判断结束
        局部_记录集.读整数 (“启动窗口_底色”, 启动窗口_底色)
        局部_记录集.读整数 (“状态条_背景颜色”, 状态条_背景颜色)
        赋值 (_启动窗口., 启动窗口_底色)
        赋值 (., 状态条_背景颜色)
        局部_记录集.读整数 (“分组框_消费信息_背景颜色”, 分组框_消费信息_背景颜色)
        赋值 (.背景颜色, 分组框_消费信息_背景颜色)
        局部_记录集.读整数 (“分组框_消费信息_文本颜色”, 分组框_消费信息_文本颜色)
        赋值 (.文本颜色, 分组框_消费信息_文本颜色)
        局部_记录集.读整数 (“分组框_消费信息_背景颜色”, 分组框_消费信息_背景颜色)
        赋值 (.背景颜色, 分组框_消费信息_背景颜色)
        局部_记录集.读整数 (“标签_消费单号_文本颜色”, 标签_消费单号_文本颜色)
        赋值 (.背景颜色, 标签_消费单号_文本颜色)
        局部_记录集.读整数 (“标签_消费金额_文本颜色”, 标签_消费金额_文本颜色)
        赋值 (.背景颜色, 标签_消费金额_文本颜色)
        局部_记录集.读整数 (“标签_赠送积分_文本颜色”, 标签_赠送积分_文本颜色)
        赋值 (.背景颜色, 标签_赠送积分_文本颜色)
        局部_记录集.读整数 (“超级列表框_消费订单_背景颜色”, 超级列表框_消费订单_背景颜色)
        赋值 (., 超级列表框_消费订单_背景颜色)
        局部_记录集.读整数 (“超级列表框_消费订单_文本背景色”, 超级列表框_消费订单_文本背景色)
        赋值 (., 超级列表框_消费订单_文本背景色)
        局部_记录集.读整数 (“超级列表框_消费订单_文本颜色”, 超级列表框_消费订单_文本颜色)
        赋值 (., 超级列表框_消费订单_文本颜色)
        局部_记录集.读整数 (“标签_今日订单_文本颜色”, 标签_今日订单_文本颜色)
        赋值 (.文本颜色, 标签_今日订单_文本颜色)
        局部_记录集.读整数 (“标签_今日订单_背景颜色”, 标签_今日订单_背景颜色)
        赋值 (.背景颜色, 标签_今日订单_背景颜色)
        局部_记录集.读整数 (“单选框_未结算_文本颜色”, 单选框_未结算_文本颜色)
        赋值 (.文本颜色, 单选框_未结算_文本颜色)
        局部_记录集.读整数 (“单选框_已结算_文本颜色”, 单选框_已结算_文本颜色)
        赋值 (.文本颜色, 单选框_已结算_文本颜色)
        局部_记录集.读整数 (“单选框_未结算_背景颜色”, 单选框_未结算_背景颜色)
        赋值 (.背景颜色, 单选框_未结算_背景颜色)
        局部_记录集.读整数 (“单选框_已结算_背景颜色”, 单选框_已结算_背景颜色)
        赋值 (.背景颜色, 单选框_已结算_背景颜色)
        局部_记录集.读整数 (“超级列表框_会员消费_文本颜色”, 超级列表框_会员消费_文本颜色)
        赋值 (., 超级列表框_会员消费_文本颜色)
        局部_记录集.读整数 (“超级列表框_会员消费_文本背景色”, 超级列表框_会员消费_文本背景色)
        赋值 (., 超级列表框_会员消费_文本背景色)
        局部_记录集.读整数 (“超级列表框_会员消费_背景颜色”, 超级列表框_会员消费_背景颜色)
        赋值 (., 超级列表框_会员消费_背景颜色)
        局部_记录集.读整数 (“工具条_会员消费_背景颜色”, 工具条_会员消费_背景颜色)
        赋值 (., 工具条_会员消费_背景颜色)
        
        
        局部_记录集.关闭 ()
        返回 (真)
    .如果真结束
    
.如果真结束
 ' 高级选择夹.表头底色渐变 ＝ 假
局部_记录集.关闭 ()
返回 (假)




.子程序 _分隔条_会员消费_被拖动, 空白型, , 
.参数 原位置, 整数型, , 
.参数 目的位置, 整数型, , 

.如果真 (并且 (大于或等于 (目的位置, 100), 小于或等于 (目的位置, 相减 (., 100))))
    .移动 (目的位置, , )
    __启动窗口_尺寸被改变 ()
.如果真结束


.子程序 _编辑框_查询_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.内容, “”)

.子程序 _时钟_现行时间_周期事件, 空白型, , 
1.置文本 (相加 (“当前时间：”, 时间到文本 (取现行时间 (), )))
.如果真 (或者 (大于 (取时间间隔 (取现行时间 (), 程序集_日期, #日), 1), 小于 (取时间间隔 (取现行时间 (), 程序集_日期, #日), 0)))
    赋值 (程序集_日期, 取现行时间 ())
     ' _工具条_会员消费_被单击 (0)
    赋值 (.选中, 假)
    赋值 (.选中, 真)
    _单选框_未结算_被单击 ()
    统计今日消费 ()
.如果真结束
.如果真 (并且 (等于 (.选中, 真), 等于 (.选中, 真)))
    赋值 (.选中, 假)
    赋值 (.选中, 真)
    _单选框_未结算_被单击 ()
.如果真结束


.子程序 会员消费列表框初始化, 空白型, , 
.局部变量 局部_消费列表, 消费信息, , "0", 
.局部变量 局部_计次, 整数型, , , 
.局部变量 局部_行, 整数型, , , 

.如果真 (数据库_取返消费列表 (局部_消费列表, 10))
    .计次循环首 (取数组成员数 (局部_消费列表), 局部_计次)
        赋值 (局部_行, .插入表项 ())
        局部_行.置标题 (0, 局部_消费列表 [局部_计次], 编号)
        局部_行.置标题 (1, 局部_消费列表 [局部_计次], 服务名称)
        局部_行.置标题 (2, 局部_消费列表 [局部_计次], 消费类型)
        局部_行.置标题 (3, 到文本 (局部_消费列表 [局部_计次], 服务单价))
        局部_行.置标题 (4, 到文本 (局部_消费列表 [局部_计次], 点单次数))
    .计次循环尾 ()
.如果真结束


.子程序 高级表格插入列表项, 空白型, , 
.参数 参数_高级表格, 未知类型0x40001, , 
.参数 参数_消费项目, 消费项目, , 
.参数 参数_逻辑, 逻辑型, 可空, 

.局部变量 局部_行号, 整数型, , , 
.局部变量 局部_计次, 整数型, , , 
.局部变量 局部_消费项目, 消费项目, , , 

.判断开始 (大于或等于 (相减 (参数_高级表格., 1), 1))
    .计次循环首 (相减 (参数_高级表格., 1), 局部_计次)
        .判断开始 (等于 (参数_高级表格.未知支持库函数_10 (局部_计次, 1), 参数_消费项目.消费名称))
            赋值 (局部_行号, 局部_计次)
            跳出循环 ()
        .默认
            
            .如果真 (大于或等于 (局部_计次, 相减 (参数_高级表格., 1)))
                参数_高级表格.未知支持库函数_38 ()
                赋值 (局部_行号, 相减 (参数_高级表格., 1))
            .如果真结束
            
        .判断结束
        
    .计次循环尾 ()
    
.默认
    参数_高级表格.未知支持库函数_38 ()
    赋值 (局部_行号, 相减 (参数_高级表格., 1))
.判断结束

.如果真 (参数_逻辑)
    赋值 (局部_消费项目.订单号, 全局_当前订单)
    赋值 (局部_消费项目.消费名称, 参数_消费项目.消费名称)
    赋值 (局部_消费项目.消费数量, 相加 (到数值 (参数_高级表格.未知支持库函数_10 (局部_行号, 2)), 1))
    赋值 (局部_消费项目.消费单价, 参数_消费项目.消费单价)
    赋值 (局部_消费项目.单项合计, 相加 (到数值 (参数_高级表格.未知支持库函数_10 (局部_行号, 4)), 参数_消费项目.消费单价))
    赋值 (局部_消费项目.点品时间, Unix时间戳记反转 (Unix时间戳记正转 (取现行时间 ()), 真))
    .判断开始 (数据库_订单商品查询 (全局_当前订单, , , 相加 (“ and 服务名称=”, 处理双引号 (参数_消费项目.消费名称))))
        数据库_订单商品修改 (全局_当前订单, 局部_消费项目)
    .默认
        数据库_订单商品新增 (局部_消费项目)
    .判断结束
    
.如果真结束
参数_高级表格.未知支持库函数_9 (局部_行号, 1, #., 参数_消费项目.消费名称)
参数_高级表格.未知支持库函数_9 (局部_行号, 2, #., 到文本 (相加 (到数值 (参数_高级表格.未知支持库函数_10 (局部_行号, 2)), 1)))
参数_高级表格.未知支持库函数_9 (局部_行号, 3, #., 到文本 (参数_消费项目.消费单价))
.如果真 (大于 (参数_消费项目.单项合计, 0))
    参数_高级表格.未知支持库函数_9 (局部_行号, 4, #., 到文本 (参数_消费项目.单项合计))
.如果真结束

统计消费信息 ()

.子程序 高级表格_会员消费初始化, 空白型, , 
2.未知支持库函数_30 (#.)
3.未知支持库函数_30 (#.)
4.未知支持库函数_30 (#.)
3.未知支持库函数_41 (2)
4.未知支持库函数_41 (2)
2.未知支持库函数_40 (3, #., 4)

.子程序 _超级列表框_会员消费_被双击, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 局部_消费项目, 消费项目, , , 
.局部变量 局部_消费信息, 消费信息, , "0", 
.局部变量 局部_数值, 双精度小数型, , , 

.如果真 (或者 (小于或等于 (., -1), 等于 (全局_当前订单, “”), 等于 (.选中, 假), 等于 (.选中, 真)))
    信息框 (“请选择一个未结算订单或创建新的订单”, #信息图标, )
    返回 (假)
.如果真结束
.如果真 (小于或等于 (., -1))
    返回 (假)
.如果真结束

.如果真 (等于 (数据库_消费列表查询 (相加 (“编号=”, .取标题 (., 0)), 真, 局部_消费信息), 假))
    返回 (假)
.如果真结束

赋值 (局部_消费项目.消费名称, 局部_消费信息 [1].服务名称)
赋值 (局部_消费项目.消费数量, 1)
赋值 (局部_消费项目.消费单价, 局部_消费信息 [1].服务单价)

.如果真 (等于 (.选中, 真))
    全局_数据库.开始事务 ()
    高级表格插入列表项 (局部_消费项目, 真)
    统计消费信息 ()
    数据库_消费点单次数增加 (局部_消费项目.消费名称, 局部_消费项目.消费数量)
    .如果真 (等于 (数据库_修改订单 (全局_消费金额, 全局_消费积分, , 假, 全局_当前订单), 假))
        全局_数据库.回滚事务 ()
        返回 (假)
    .如果真结束
    全局_数据库.保存事务 ()
.如果真结束


.子程序 统计消费信息, 空白型, , 
.局部变量 局部_计次, 整数型, , , 
.局部变量 局部_消费金额, 双精度小数型, , , 
.局部变量 局部_消费积分, 整数型, , , 
.局部变量 局部_当前订单, 文本型, , , 

赋值 (全局_消费金额, 0)
赋值 (全局_消费积分, 0)
.计次循环首 (相减 (., 1), 局部_计次)
    赋值 (局部_消费金额, 相加 (局部_消费金额, 四舍五入 (到数值 (局部_计次.未知支持库函数_10 (4)), 5)))
.计次循环尾 ()
赋值 (局部_当前订单, .取标题 (., 0))
数据库_消费积分换算 (数据库_取积分计算公式 (“默认”), 局部_消费金额, 局部_消费积分)
.如果真 (等于 (.选中, 真))
    赋值 (全局_当前订单, 局部_当前订单)
    赋值 (全局_消费积分, 局部_消费积分)
    赋值 (全局_消费金额, 局部_消费金额)
.如果真结束
赋值 (.内容, 相加 (“消费金额:”, 到文本 (局部_消费金额)))
赋值 (.内容, 相加 (“赠送积分:”, 到文本 (局部_消费积分)))
赋值 (.内容, 相加 (“消费单号:”, 局部_当前订单))

.子程序 _超级列表框_消费订单_当前表项被改变, 空白型, , 
.如果真 (小于或等于 (., -1))
    返回 ()
.如果真结束
赋值 (全局_当前订单, .取标题 (., 0))
高级表格列表项显示 ()

.子程序 订单初始化, 空白型, , 
.参数 日期一, 日期时间型, , 
.参数 日期二, 日期时间型, , 
.参数 是否结算, 逻辑型, , 

.局部变量 局部_取返订单, 订单数据类型, , "0", 
.局部变量 局部_计次, 整数型, , , 
.局部变量 局部_行, 整数型, , , 

数据库_取返时间间隔订单 (取日期 (日期一), 日期二, 是否结算, 局部_取返订单, 真)
.计次循环首 (取数组成员数 (局部_取返订单), 局部_计次)
    赋值 (局部_行, .插入表项 ())
    局部_行.置标题 (0, 到文本 (局部_取返订单 [局部_计次], 订单号))
    局部_行.置表项数值 (局部_取返订单 [局部_计次], 订单号)
    局部_行.置标题 (1, 到文本 (局部_取返订单 [局部_计次], 订单时间))
    局部_行.置标题 (2, 局部_取返订单 [局部_计次], 操作管理)
.计次循环尾 ()


.子程序 _单选框_未结算_被单击, 空白型, , 
.如果真 (等于 (.选中, 假))
    全部删除 ()
    订单初始化 (取日期 (取现行时间 ()), 增减时间 (取日期 (取现行时间 ()), #日, 1), 假)
    赋值 (., 1)
    赋值 (全局_当前订单, “”)
    统计消费信息 ()
.如果真结束


.子程序 _单选框_已结算_被单击, 空白型, , 
.如果真 (等于 (.选中, 假))
    全部删除 ()
    订单初始化 (取日期 (取现行时间 ()), 增减时间 (取日期 (取现行时间 ()), #日, 1), 真)
    赋值 (., 1)
    赋值 (全局_当前订单, “”)
    统计消费信息 ()
.如果真结束


.子程序 高级表格列表项显示, 空白型, , 
.局部变量 局部_商品信息, 消费项目, , "0", 
.局部变量 局部_计次, 整数型, , , 
.局部变量 局部_订单, 订单数据类型, , , 

赋值 (., 1)
.如果真 (等于 (数据库_查询订单 (全局_当前订单, 真, 局部_订单), 假))
    返回 ()
.如果真结束
赋值 (全局_消费金额, 局部_订单.消费金额)
赋值 (全局_消费积分, 局部_订单.消费积分)
赋值 (.内容, 相加 (“消费金额:”, 到文本 (全局_消费金额)))
赋值 (.内容, 相加 (“赠送积分:”, 到文本 (全局_消费积分)))
赋值 (.内容, 相加 (“消费单号:”, 到文本 (全局_当前订单)))
.如果真 (数据库_订单商品查询 (全局_当前订单, 真, 局部_商品信息))
    .计次循环首 (取数组成员数 (局部_商品信息), 局部_计次)
        .未知支持库函数_38 ()
        相减 (., 1).未知支持库函数_9 (1, #., 局部_商品信息 [局部_计次], 消费名称)
        相减 (., 1).未知支持库函数_9 (2, #., 到文本 (局部_商品信息 [局部_计次], 消费数量))
        相减 (., 1).未知支持库函数_9 (3, #., 到文本 (局部_商品信息 [局部_计次], 消费单价))
    .计次循环尾 ()
.如果真结束


.子程序 _工具条_会员消费_被单击, 空白型, , 
.参数 按钮索引, 整数型, , 

.如果真 (等于 (.选中, 假))
    赋值 (.选中, 真)
    赋值 (.选中, 假)
    _单选框_未结算_被单击 ()
.如果真结束
.如果真 (等于 (按钮索引, 0))
    赋值 (., 真)
    .如果真 (数据库_新建订单 ())
        _单选框_未结算_被单击 ()
    .如果真结束
    赋值 (., 假)
.如果真结束
.如果真 (等于 (按钮索引, 1))
    .如果真 (小于或等于 (全局_消费金额, 0))
        返回 ()
    .如果真结束
    .如果真 (小于 (., -1))
        信息框 (“请选择一个未结算的订单！”, #信息图标, )
        返回 ()
    .如果真结束
    载入 (窗口_结算, , 真)
.如果真结束


.子程序 _高级表格_会员消费_可否被编辑, 逻辑型, , 
返回 (假)


.子程序 _高级表格_会员消费_列宽被改变, 空白型, , 
.参数 列号, 整数型, , 

0.未知支持库函数_32 (0)


.子程序 _超级按钮_查询_被单击, 空白型, , 
.局部变量 局部_消费信息, 消费信息, , "0", 
.局部变量 局部_计次, 整数型, , , 
.局部变量 局部_行, 整数型, , , 

.如果真 (等于 (.内容, .))
    赋值 (.内容, “”)
.如果真结束
.如果真 (等于 (删首尾空 (.内容), “”))
    信息框 (“请输入搜索条件”, #信息图标, )
    返回 ()
.如果真结束
.如果真 (等于 (数据库_消费列表查询 (相加 (“服务名称 like ”, 处理双引号 (相加 (“%”, .内容, “%”)), “ or ”, “消费类型 like ”, 处理双引号 (相加 (“%”, .内容, “%”))), 真, 局部_消费信息), 假))
    信息框 (“没有找到！”, #信息图标, )
    返回 ()
.如果真结束
全部删除 ()
.计次循环首 (取数组成员数 (局部_消费信息), 局部_计次)
    赋值 (局部_行, .插入表项 ())
    局部_行.置标题 (0, 局部_消费信息 [局部_计次], 服务名称)
    局部_行.置标题 (1, 局部_消费信息 [局部_计次], 消费类型)
    局部_行.置标题 (2, 到文本 (局部_消费信息 [局部_计次], 服务单价))
.计次循环尾 ()

.子程序 查找订单并移除, 空白型, , 
.参数 参数_订单号, 文本型, , 

参数_订单号.查找表项 ().删除表项 ()
赋值 (., 1)
赋值 (., 0)
赋值 (全局_当前订单, “”)
统计消费信息 ()
统计今日消费 ()
刷新显示 ()

.子程序 __启动窗口_可否被关闭, 逻辑型, , 
全局_数据库.压缩数据库 ()
全局_数据库.关闭 ()
设备_关闭设备_ (全局_设备端口)

.子程序 _超级按钮_会员注册_被单击, 空白型, , 
.局部变量 局部_卡号, 文本型, , , 
.局部变量 局部_卡积分, 整数型, , , 
.局部变量 局部_卡金额, 双精度小数型, , , 

赋值 (局部_卡号, 取空白文本 (30))
.如果真 (小于 (设备_读取卡号_ (全局_设备端口, 局部_卡号), 0))
    赋值 (.标题, 相加 (“卡号：”, 局部_卡号))
    返回 ()
.如果真结束
赋值 (.标题, 相加 (“卡号：”, 局部_卡号))
.如果真 (等于 (读会员卡信息 (局部_卡号, 局部_卡积分, 局部_卡金额), 假))
    信息框 (“读卡失败！”, 0, )
    返回 ()
.如果真结束
.如果真 (或者 (大于 (局部_卡积分, 0), 大于 (局部_卡金额, 0), 小于 (局部_卡积分, 0), 小于 (局部_卡金额, 0)))
    信息框 (“此卡已经注册！”, 0, )
    返回 ()
.如果真结束
.如果真 (等于 (写会员卡信息 (局部_卡号, 0, 10), 假))
    返回 ()
.如果真结束
.如果真 (等于 (数据库_流水账 (取现行时间 (), #流水账_方式_收入, 10, #流水账_来源_注册, “-2”), 假))
    信息框 (“记账失败！”, #信息图标, )
    返回 ()
.如果真结束
信息框 (“注册成功！”, 0, )


.子程序 _超级按钮_会员充值_被单击, 空白型, , 
.局部变量 局部_卡号, 文本型, , , 
.局部变量 局部_卡积分, 整数型, , , 
.局部变量 局部_卡金额, 双精度小数型, , , 
.局部变量 局部_新卡积分, 整数型, , , 
.局部变量 局部_新卡金额, 双精度小数型, , , 
.局部变量 信息返回值, 整数型, , , 

赋值 (局部_卡号, 取空白文本 (30))
.如果真 (小于 (设备_读取卡号_ (全局_设备端口, 局部_卡号), 0))
    赋值 (.标题, 相加 (“卡号：”, 局部_卡号))
    返回 ()
.如果真结束
赋值 (.标题, 相加 (“卡号：”, 局部_卡号))
.如果真 (等于 (读会员卡信息 (局部_卡号, 局部_卡积分, 局部_卡金额), 假))
    信息框 (“读卡失败！”, #信息图标, )
    返回 ()
.如果真结束
.如果真 (小于或等于 (到数值 (.内容), 0))
    信息框 (“充值金额太少了。”, #信息图标, )
    返回 ()
.如果真结束
赋值 (.标题, 相加 (“当前卡金额：”, 到文本 (局部_卡金额)))
赋值 (.标题, 相加 (“当前卡积分：”, 到文本 (局部_卡积分)))
赋值 (.标题, 相加 (“当前卡号：”, 到文本 (局部_卡号)))
赋值 (信息返回值, 信息框 (相加 (“确认充值”, “ 会员卡号：”, 局部_卡号, “ 原卡金额：”, 到文本 (局部_卡金额), “ 原卡积分：”, 到文本 (局部_卡积分)), #确认取消钮, ))
.如果真 (不等于 (信息返回值, 0))
    返回 ()
.如果真结束
.如果真 (等于 (写会员卡信息 (局部_卡号, 局部_卡积分, 相加 (局部_卡金额, 到数值 (.内容))), 假))
    信息框 (“充值失败！”, #警告图标, )
    返回 ()
.如果真结束
.如果真 (等于 (读会员卡信息 (局部_卡号, 局部_新卡积分, 局部_新卡金额), 假))
    返回 ()
.如果真结束
.如果真 (等于 (数据库_流水账 (取现行时间 (), #流水账_方式_收入, 到数值 (.内容), #流水账_来源_充值, “-1”), 假))
    充值失败回滚 (局部_卡号, 局部_卡积分, 局部_卡金额)
    信息框 (“记账失败！”, #信息图标, )
    返回 ()
.如果真结束
.如果真 (等于 (数据库_充值记录_新增 (局部_卡号, 局部_卡金额, 到数值 (.内容), 局部_新卡金额, 取现行时间 (), 全局_当前管理), 假))
    充值失败回滚 (局部_卡号, 局部_卡积分, 局部_卡金额)
    信息框 (“记账失败！”, #信息图标, )
    返回 ()
.如果真结束
赋值 (.标题, 相加 (“新卡金额：”, 到文本 (局部_新卡金额)))
赋值 (.标题, 相加 (“新卡积分：”, 到文本 (局部_新卡积分)))
赋值 (.标题, 相加 (“新卡号：”, 到文本 (局部_卡号)))
赋值 (.内容, “”)
统计今日消费 ()
信息框 (“充值成功！”, 0, )

.子程序 充值失败回滚, 逻辑型, , 
.参数 参数_卡号, 文本型, , 
.参数 参数_卡积分, 整数型, , 
.参数 参数_卡金额, 双精度小数型, , 

返回 (写会员卡信息 (参数_卡号, 参数_卡积分, 参数_卡金额))

.子程序 _编辑框_查询订单_内容被改变, 空白型, , 
.局部变量 局部_项值, 整数型, , , 

赋值 (局部_项值, .查找表项 (.内容, , 假, ))
局部_项值.保证显示 ()
赋值 (., 局部_项值)

.子程序 _高级选择夹_管理统计_将改变子夹, 逻辑型, , 
.参数 子夹索引, 整数型, , 

.局部变量 局部_昨日, 双精度小数型, , , 
.局部变量 局部_当前, 双精度小数型, , , 
.局部变量 局部_最大值, 整数型, , , 

.判断开始 (大于 (子夹索引, 2))
    赋值 (.可视, 假)
    赋值 (.可视, 假)
.默认
    赋值 (.可视, 真)
    赋值 (.可视, 真)
.判断结束

.如果真 (等于 (子夹索引, 0))
    赋值 (局部_昨日, 数据库_统计今日现金收入 (增减时间 (取日期 (取现行时间 ()), #日, -1), 增减时间 (取日期 (增减时间 (取日期 (取现行时间 ()), #日, -1)), #小时, 24)))
    赋值 (局部_当前, 数据库_统计今日现金收入 (取现行时间 (), 增减时间 (取日期 (取现行时间 ()), #日, 1)))
    .判断开始 (大于 (局部_昨日, 局部_当前))
        赋值 (局部_最大值, 相加 (局部_昨日, 2000))
    .默认
        赋值 (局部_最大值, 相加 (局部_当前, 2000))
    .判断结束
    赋值 (., 局部_最大值)
    赋值 (., 0)
    赋值 (., 局部_昨日)
    赋值 (., 1)
    赋值 (., 局部_当前)
    返回 (真)
.如果真结束
.如果真 (等于 (子夹索引, 1))
    统计月份销售 ()
.如果真结束
.如果真 (等于 (子夹索引, 2))
    统计年度销售 ()
.如果真结束


.子程序 _高级选择夹_将改变子夹, 逻辑型, , 
.参数 子夹索引, 整数型, , 

.如果真 (等于 (子夹索引, 3))
    .如果真 (等于 (., 0))
        _高级选择夹_管理统计_将改变子夹 (0)
    .如果真结束
    .如果真 (等于 (., 1))
        统计年度销售 ()
    .如果真结束
    .如果真 (等于 (., 2))
        统计月份销售 ()
    .如果真结束
    
.如果真结束


.子程序 统计年度销售, 空白型, , 
.局部变量 局部_计次, 整数型, , , 
.局部变量 局部_数值, 双精度小数型, , , 

赋值 (., 12)
赋值 (., 0)
赋值 (., 相加 (到文本 (.取项目数值 (.现行选中项)), “年度 销售 曲线图”))
.计次循环首 (12, 局部_计次)
    赋值 (., 0)
    赋值 (., 相减 (局部_计次, 1))
    赋值 (., 到文本 (局部_计次))
    赋值 (局部_数值, 数据库_统计今日现金收入 (增减时间 (到时间 (相加 (到文本 (.取项目数值 (.现行选中项)), “年1月1日”)), #月份, 相减 (局部_计次, 1)), 增减时间 (到时间 (相加 (到文本 (.取项目数值 (.现行选中项)), “年1月1日”)), #月份, 局部_计次)))
    .如果真 (大于 (局部_数值, 0))
        赋值 (., 相加 (局部_数值, .))
    .如果真结束
    赋值 (., 局部_数值)
    赋值 (., 1)
    赋值 (., 相减 (局部_计次, 1))
    赋值 (., 到文本 (局部_计次))
    赋值 (局部_数值, 数据库_统计今日营业额 (增减时间 (到时间 (相加 (到文本 (.取项目数值 (.现行选中项)), “年1月1日”)), #月份, 相减 (局部_计次, 1)), 增减时间 (到时间 (相加 (到文本 (.取项目数值 (.现行选中项)), “年1月1日”)), #月份, 局部_计次)))
    赋值 (., 局部_数值)
.计次循环尾 ()



.子程序 统计月份销售, 空白型, , 
.局部变量 局部_计次, 整数型, , , 
.局部变量 局部_数值, 双精度小数型, , , 
.局部变量 局部_日数, 整数型, , , 
.局部变量 局部_年, 文本型, , , 
.局部变量 局部_月, 文本型, , , 

赋值 (., 0)
赋值 (., 相加 (到文本 (.取项目数值 (.现行选中项)), “月份 销售 曲线图”))
赋值 (局部_年, 到文本 (.取项目数值 (.现行选中项)))
赋值 (局部_月, 到文本 (.取项目数值 (.现行选中项)))
赋值 (局部_日数, 取某月天数 (到数值 (局部_年), 到数值 (局部_月)))
赋值 (., 局部_日数)
.计次循环首 (局部_日数, 局部_计次)
    赋值 (., 0)
    赋值 (., 相减 (局部_计次, 1))
    赋值 (., 到文本 (局部_计次))
    赋值 (局部_数值, 数据库_统计今日现金收入 (增减时间 (到时间 (相加 (局部_年, “年”, 局部_月, “月1日”)), #日, 相减 (局部_计次, 1)), 增减时间 (到时间 (相加 (局部_年, “年”, 局部_月, “月1日”)), #日, 局部_计次)))
    .如果真 (大于 (局部_数值, 0))
        赋值 (., 相加 (局部_数值, .))
    .如果真结束
    赋值 (., 局部_数值)
    赋值 (., 1)
    赋值 (., 相减 (局部_计次, 1))
    赋值 (., 到文本 (局部_计次))
    赋值 (局部_数值, 数据库_统计今日营业额 (增减时间 (到时间 (相加 (局部_年, “年”, 局部_月, “月1日”)), #日, 相减 (局部_计次, 1)), 增减时间 (到时间 (相加 (局部_年, “年”, 局部_月, “月1日”)), #日, 局部_计次)))
     ' .如果真 (大于 (局部_数值, 0))
         ' 曲线图控件_月份统计.Y轴最大值 ＝ 局部_数值 ＋ 曲线图控件_月份统计.Y轴最大值
    .如果真结束
    赋值 (., 局部_数值)
.计次循环尾 ()


.子程序 _组合框_年份_列表项被选择, 空白型, , 
统计年度销售 ()

.子程序 统计今日消费, 空白型, , 
2.置文本 (相加 (“今日现金收入：”, 到文本 (数据库_统计今日现金收入 (取现行时间 (), 增减时间 (取日期 (取现行时间 ()), #日, 1)))))
3.置文本 (相加 (“今日营业额：”, 到文本 (数据库_统计今日营业额 (取现行时间 (), 增减时间 (取日期 (取现行时间 ()), #日, 1)))))

.子程序 __启动窗口_首次激活, 空白型, , 
.局部变量 局部_计次, 整数型, , , 
.局部变量 局部_索引, 整数型, , , 

清空 ()
.计次循环首 (50, 局部_计次)
    赋值 (局部_索引, 相加 (到文本 (相加 (1990, 局部_计次)), “年”).加入项目 (相加 (1990, 局部_计次)))
    .如果真 (等于 (相加 (1990, 局部_计次), 取年份 (取现行时间 ())))
        赋值 (.现行选中项, 局部_索引)
    .如果真结束
    
.计次循环尾 ()
清空 ()
.计次循环首 (50, 局部_计次)
    赋值 (局部_索引, 相加 (到文本 (相加 (1990, 局部_计次)), “年”).加入项目 (相加 (1990, 局部_计次)))
    .如果真 (等于 (相加 (1990, 局部_计次), 取年份 (取现行时间 ())))
        赋值 (.现行选中项, 局部_索引)
    .如果真结束
    
.计次循环尾 ()
清空 ()
.计次循环首 (12, 局部_计次)
    赋值 (局部_索引, 相加 (到文本 (局部_计次), “月”).加入项目 (局部_计次))
    .如果真 (等于 (局部_计次, 取月份 (取现行时间 ())))
        赋值 (.现行选中项, 局部_索引)
    .如果真结束
    
.计次循环尾 ()


.子程序 _组合框_年份_月_列表项被选择, 空白型, , 
统计月份销售 ()

.子程序 _组合框_月份_列表项被选择, 空白型, , 
统计月份销售 ()

.子程序 _单选框_显示标注_被单击, 空白型, , 
赋值 (., .选中)
赋值 (., .选中)
赋值 (., .选中)

.子程序 _单选框_不显示_被单击, 空白型, , 
赋值 (., .选中)
赋值 (., .选中)
赋值 (., .选中)


.子程序 _分隔条_查询订单_被拖动, 空白型, , 
.参数 原位置, 整数型, , 
.参数 目的位置, 整数型, , 

.判断开始 (小于 (目的位置, 相加 (.加粗, 100)))
    .移动 (相加 (.加粗, 100), , )
.默认
    
    .判断开始 (大于 (目的位置, 相减 (相加 (.删除线, .删除线), 100)))
        .移动 (相减 (相加 (.删除线, .删除线), 100), , )
    .默认
        
        .移动 (目的位置, , )
    .判断结束
    
.判断结束
调整分割条查询订单位置 ()

.子程序 调整分割条查询订单位置, 空白型, , 
.如果真 (大于 (., .))
    .移动 (相加 (.加粗, 100), , )
.如果真结束
.移动 (.角度, , , )
.移动 (相减 (取用户区宽度 (), .角度, .左边), 相减 (., .加粗))
.移动 (相加 (., .), 相减 (取用户区宽度 (), .角度, .左边), 相减 (取用户区高度 (), .删除线, ., ., 11))
赋值 (., .倾斜)
.如果真 (等于 (., 5))
    相减 (取用户区宽度 (), .宽度).移动 ()
    相减 (.左边, .宽度).移动 ()
    相减 (.左边, .宽度).移动 ()
    相减 (.左边, .宽度).移动 ()
    相减 (.左边, .宽度).移动 ()
    相减 (.左边, .宽度).移动 ()
    相减 (.左边, .宽度).移动 ()
.如果真结束
自动调整查询订单表格列宽 ()

.子程序 _日期框_查询一_选择日期被改变, 空白型, , 
查询订单 ()

.子程序 自动调整查询订单表格列宽, 空白型, , 
.局部变量 局部_列宽, 小数型, , , 

禁止重画 ()
禁止重画 ()
禁止重画 ()
禁止重画 ()

赋值 (局部_列宽, 相乘 (取用户区宽度 (), 0.1))
0.置列宽 (相乘 (局部_列宽, 1.5))
1.置列宽 (相乘 (局部_列宽, 1.5))
2.置列宽 (相乘 (局部_列宽, 1.5))
3.置列宽 (相乘 (局部_列宽, 2))
4.置列宽 (相乘 (局部_列宽, 2))
5.置列宽 (相乘 (局部_列宽, 1.5))

赋值 (局部_列宽, 相乘 (取用户区宽度 (), 0.1))
0.置列宽 (相乘 (局部_列宽, 2))
1.置列宽 (相乘 (局部_列宽, 2))
2.置列宽 (相乘 (局部_列宽, 2))
3.置列宽 (相乘 (局部_列宽, 2))
4.置列宽 (相乘 (局部_列宽, 2))


赋值 (局部_列宽, 相乘 (取用户区宽度 (), 0.1))
0.置列宽 (相乘 (局部_列宽, 1.5))
1.置列宽 (相乘 (局部_列宽, 1.5))
2.置列宽 (相乘 (局部_列宽, 1.5))
3.置列宽 (相乘 (局部_列宽, 2))
4.置列宽 (相乘 (局部_列宽, 2))
5.置列宽 (相乘 (局部_列宽, 1.5))

赋值 (局部_列宽, 相乘 (取用户区宽度 (), 0.1))
0.置列宽 (相乘 (局部_列宽, 1.5))
1.置列宽 (相乘 (局部_列宽, 3))
2.置列宽 (相乘 (局部_列宽, 1))
3.置列宽 (相乘 (局部_列宽, 1))
4.置列宽 (相乘 (局部_列宽, 2))
5.置列宽 (相乘 (局部_列宽, 1.5))


允许重画 ()
允许重画 ()
允许重画 ()
允许重画 ()

.子程序 _日期框_查询二_选择日期被改变, 空白型, , 
查询订单 ()

.子程序 查询订单, 空白型, , 
.局部变量 局部_取返订单, 订单数据类型, , "0", 
.局部变量 局部_计次, 整数型, , , 
.局部变量 局部_行, 整数型, , , 
.局部变量 局部_条件, 文本型, , , 
.局部变量 局部_条件2, 文本型, , , 

全部删除 ()
.如果真 (.选中)
    赋值 (局部_条件, 相加 (“ and 会员卡号=”, #引号, 取重复文本 (30, “ ”), #引号))
.如果真结束
.如果真 (.选中)
    赋值 (局部_条件2, “ and 消费金额>0”)
.如果真结束
数据库_取返时间间隔订单 (.今天, .今天, .选中, 局部_取返订单, 真, 相加 (局部_条件, 局部_条件2))
全部删除 ()
.计次循环首 (取数组成员数 (局部_取返订单), 局部_计次)
    赋值 (局部_行, .插入表项 (局部_取返订单 [局部_计次], 订单号))
    局部_行.置标题 (0, 到文本 (局部_取返订单 [局部_计次], 订单号))
    局部_行.置标题 (1, 到文本 (局部_取返订单 [局部_计次], 消费金额))
    局部_行.置标题 (2, 到文本 (局部_取返订单 [局部_计次], 消费积分))
    局部_行.置标题 (3, 局部_取返订单 [局部_计次], 操作管理)
    局部_行.置标题 (4, 到文本 (局部_取返订单 [局部_计次], 订单时间))
    局部_行.置标题 (5, 局部_取返订单 [局部_计次], 会员卡号)
.计次循环尾 ()

.子程序 _单选框_查询未结算_被单击, 空白型, , 
赋值 (.选中, 假)
查询订单 ()

.子程序 _单选框_查询已结算_被单击, 空白型, , 
查询订单 ()

.子程序 _超级列表框_查询订单_当前表项被改变, 空白型, , 
.局部变量 局部_取返订单, 消费项目, , "0", 
.局部变量 局部_计次, 整数型, , , 
.局部变量 局部_行, 整数型, , , 

.如果真 (小于或等于 (., -1))
    返回 ()
.如果真结束
全部删除 ()
.如果真 (等于 (数据库_订单商品查询 (到文本 (.取表项数值 (.)), 真, 局部_取返订单, ), 假))
    返回 ()
.如果真结束
.计次循环首 (取数组成员数 (局部_取返订单), 局部_计次)
    赋值 (局部_行, .插入表项 ())
    局部_行.置标题 (0, 局部_取返订单 [局部_计次], 消费名称)
    局部_行.置标题 (1, 到文本 (局部_取返订单 [局部_计次], 消费单价))
    局部_行.置标题 (2, 到文本 (局部_取返订单 [局部_计次], 消费数量))
    局部_行.置标题 (3, 到文本 (局部_取返订单 [局部_计次], 单项合计))
    局部_行.置标题 (4, 到文本 (局部_取返订单 [局部_计次], 点品时间))
.计次循环尾 ()

.子程序 _选择框_现金_被单击, 空白型, , 
查询订单 ()

.子程序 _选择框_有效订单_被单击, 空白型, , 
查询订单 ()

.子程序 _超级按钮_订单查询_被单击, 空白型, , 
.局部变量 局部_订单, 订单数据类型, , , 
.局部变量 局部_行, 整数型, , , 

.如果真 (等于 (删首尾空 (.内容), “”))
    返回 ()
.如果真结束
全部删除 ()
全部删除 ()
.如果真 (数据库_查询订单 (.内容, 真, 局部_订单))
    赋值 (局部_行, .插入表项 (局部_订单.订单号))
    局部_行.置标题 (0, 到文本 (局部_订单.订单号))
    局部_行.置标题 (1, 到文本 (局部_订单.消费金额))
    局部_行.置标题 (2, 到文本 (局部_订单.消费积分))
    局部_行.置标题 (3, 局部_订单.操作管理)
    局部_行.置标题 (4, 到文本 (局部_订单.订单时间))
    局部_行.置标题 (5, 局部_订单.会员卡号)
.如果真结束


.子程序 _编辑框_查询会员充值_内容被改变, 空白型, , 
.局部变量 会员充值数据, 会员充值数据类型, , "0", 
.局部变量 局部_计次, 整数型, , , 
.局部变量 局部_行, 整数型, , , 

.如果真 (等于 (删首尾空 (.内容), “”))
    返回 ()
.如果真结束
.如果真 (等于 (数据库_会员充值记录查询 (.内容, 会员充值数据), 假))
    返回 ()
.如果真结束
全部删除 ()
.计次循环首 (取数组成员数 (会员充值数据), 局部_计次)
    赋值 (局部_行, .插入表项 (到数值 (会员充值数据 [局部_计次], 卡号)))
    局部_行.置标题 (0, 会员充值数据 [局部_计次], 卡号)
    局部_行.置标题 (1, 到文本 (会员充值数据 [局部_计次], 原金额))
    局部_行.置标题 (2, 到文本 (会员充值数据 [局部_计次], 充值金额))
    局部_行.置标题 (3, 到文本 (会员充值数据 [局部_计次], 卡余金额))
    局部_行.置标题 (4, 到文本 (会员充值数据 [局部_计次], 充值时间))
    局部_行.置标题 (5, 会员充值数据 [局部_计次], 操作管理)
.计次循环尾 ()

.子程序 流水账查询, 逻辑型, , 
.参数 参数_条件, 文本型, , 
.参数 参数_页面1, 整数型, , 
.参数 参数_页面2, 整数型, , 

.局部变量 局部_流水账, 流水账数据类型, , "0", 
.局部变量 局部_计次, 整数型, , , 
.局部变量 局部_行, 整数型, , , 

.如果真 (等于 (数据库_流水账查询 (参数_条件, 真, 局部_流水账, 参数_页面1, 参数_页面2), 假))
    返回 (假)
.如果真结束
禁止重画 ()
全部删除 ()
.计次循环首 (取数组成员数 (局部_流水账), 局部_计次)
    赋值 (局部_行, .插入表项 ())
    局部_行.置标题 (0, 局部_流水账 [局部_计次], 流水号)
    局部_行.置标题 (1, 到文本 (局部_流水账 [局部_计次], 时间))
    局部_行.置标题 (2, 局部_流水账 [局部_计次], 方式)
    局部_行.置标题 (3, 到文本 (局部_流水账 [局部_计次], 金额))
    局部_行.置标题 (4, 局部_流水账 [局部_计次], 来源)
    局部_行.置标题 (5, 局部_流水账 [局部_计次], 入账单号)
.计次循环尾 ()
允许重画 ()
重画 ()
返回 (真)

.子程序 _超级链接框_首页_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

更新分页控件 (0)

.子程序 更新分页控件, 空白型, , 
.参数 参数_当前按下, 整数型, , 

.局部变量 局部_分页, 整数型, , , 

赋值 (程序集_总行数, 数据库_流水账查询总数 (程序集_查询条件))
.如果真 (小于或等于 (程序集_总行数, 0))
    返回 ()
.如果真结束
赋值 (局部_分页, 绝对取整 (到数值 (.内容)))
.如果真 (等于 (参数_当前按下, 0))
    赋值 (程序集_分页数值, 0)
.如果真结束
.如果真 (等于 (参数_当前按下, 1))
    赋值 (程序集_分页数值, 相减 (程序集_分页数值, 局部_分页))
.如果真结束
.如果真 (等于 (参数_当前按下, 2))
    赋值 (程序集_分页数值, 相加 (程序集_分页数值, 局部_分页))
.如果真结束
.如果真 (等于 (参数_当前按下, 3))
    赋值 (程序集_分页数值, 相减 (程序集_总行数, 局部_分页))
.如果真结束
.如果真 (小于 (程序集_分页数值, 0))
    赋值 (程序集_分页数值, 0)
.如果真结束
.如果真 (大于 (程序集_分页数值, 程序集_总行数))
    赋值 (程序集_分页数值, 相减 (程序集_总行数, 局部_分页))
.如果真结束
流水账查询 (程序集_查询条件, 程序集_分页数值, 局部_分页)
.如果真 (大于 (相加 (程序集_分页数值, 局部_分页), 程序集_总行数))
    赋值 (.标题, 相加 (到文本 (程序集_总行数), “/”, 到文本 (程序集_总行数)))
    返回 ()
.如果真结束
赋值 (.标题, 相加 (到文本 (相加 (程序集_分页数值, 局部_分页)), “/”, 到文本 (程序集_总行数)))

.子程序 _超级链接框_上一页_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

更新分页控件 (1)

.子程序 _超级链接框_下一页_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

更新分页控件 (2)

.子程序 _超级链接框_尾页_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 


更新分页控件 (3)

.子程序 _编辑框_页面_内容被改变, 空白型, , 
更新分页控件 (0)

.子程序 _分隔条_订单查询_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (等于 (., 0))
    赋值 (., 相加 (.左边, .宽度))
    赋值 (.可视, 真)
    相加 (., .).移动 (相减 (取用户区宽度 (), ., .), )
    .移动 (.角度, , .倾斜, )
    .移动 (.角度, , .倾斜, )
    自动调整查询订单表格列宽 ()
    返回 ()
.如果真结束

.如果真 (不等于 (., 0))
    赋值 (., 0)
    赋值 (.可视, 假)
    相加 (., .).移动 (相减 (取用户区宽度 (), ., .), )
    .移动 (.角度, , .倾斜, )
    .移动 (.角度, , .倾斜, )
    自动调整查询订单表格列宽 ()
    返回 ()
.如果真结束


.子程序 _高级选择夹_管理统计_子夹被改变, 空白型, , 
.如果真 (等于 (., 5))
    调整分割条查询订单位置 ()
.如果真结束


.程序集 公共程序集, , , 

.子程序 数值_到32位数值文本, 空白型, , 
.参数 数值, 双精度小数型, , 
.参数 整数位, 文本型, 参考, 
.参数 小数位, 文本型, 参考 可空, 

.局部变量 局部_数值文本, 文本型, , , 
.局部变量 局部_分割文本, 文本型, , "0", 

赋值 (局部_数值文本, 到文本 (数值))
.判断开始 (不等于 (寻找文本 (局部_数值文本, “.”, , 假), -1))
    赋值 (局部_分割文本, 分割文本 (局部_数值文本, “.”, ))
    赋值 (整数位, 子文本替换 (相加 (取空白文本 (相减 (32, 取文本长度 (局部_分割文本 [1]))), 局部_分割文本 [1]), “ ”, “F”, , , 假))
    赋值 (小数位, 子文本替换 (相加 (取空白文本 (相减 (32, 取文本长度 (局部_分割文本 [2]))), 局部_分割文本 [2]), “ ”, “F”, , , 假))
.默认
    赋值 (整数位, 子文本替换 (相加 (取空白文本 (相减 (32, 取文本长度 (局部_数值文本))), 局部_数值文本), “ ”, “F”, , , 假))
    赋值 (小数位, 子文本替换 (取空白文本 (32), “ ”, “F”, , , 假))
.判断结束



.子程序 初始化消费表格, 逻辑型, , 
.参数 参数_列表参数名, 文本型, , 
.参数 参数_高级表格, 未知类型0x40001, , 

.局部变量 局部_记录集, SQLite3记录集类, , , 
.局部变量 局部_语句, 文本型, , , 
.局部变量 局部_计次, 整数型, , , 
.局部变量 局部_列名, 文本型, , , 
.局部变量 局部_列宽, 整数型, , , 

.如果真 (等于 (全局_数据库.是否已连接 (), 假))
    局部_记录集.关闭 ()
    返回 (假)
.如果真结束
.如果真 (等于 (局部_记录集.置连接 (全局_数据库), 假))
    局部_记录集.关闭 ()
    返回 (假)
.如果真结束
赋值 (局部_语句, 相加 (“select * from oa_lb where 列表名='”, 参数_列表参数名, “' order by 序号 asc”))
局部_记录集.打开 (局部_语句)
.如果真 (小于或等于 (局部_记录集.记录数量 (), 0))
    局部_记录集.关闭 ()
    返回 (假)
.如果真结束
参数_高级表格.未知支持库函数_32 (0, 0)
局部_记录集.到首记录 ()
.计次循环首 (局部_记录集.记录数量 (), 局部_计次)
    局部_记录集.读文本 (“标题”, 局部_列名)
    局部_记录集.读整数 (“列宽”, 局部_列宽)
    参数_高级表格.未知支持库函数_39 (局部_列名, 局部_计次)
    参数_高级表格.未知支持库函数_32 (局部_计次, 局部_列宽)
    局部_记录集.到下一行 ()
.计次循环尾 ()
局部_记录集.关闭 ()
返回 (真)


.子程序 日期转换, 文本型, , 日期格式 转换 2011年3月18日 10:18:38 转换 2011-3-18 10:18:38
.参数 日期时间, 日期时间型, , 

.局部变量 年, 文本型, , , 
.局部变量 月, 文本型, , , 
.局部变量 日, 文本型, , , 
.局部变量 时, 文本型, , , 
.局部变量 分, 文本型, , , 
.局部变量 秒, 文本型, , , 

赋值 (年, 到文本 (取年份 (日期时间)))
赋值 (月, 到文本 (取月份 (日期时间)))
赋值 (日, 到文本 (取日 (日期时间)))
赋值 (时, 到文本 (取时间部分 (日期时间, #小时)))
赋值 (分, 到文本 (取分钟 (日期时间)))
赋值 (秒, 到文本 (取秒 (日期时间)))
返回 (相加 (年, “-”, 月, “-”, 日, “ ”, 时, “:”, 分, “:”, 秒))


.子程序 Unix时间戳记正转, 长整数型, , 将时间类型值转到长整型的标准UNIX使用的格林威治时间戳记
.参数 时间值, 日期时间型, , 要转换的时间值

.局部变量 初始时间, 日期时间型, , , 

赋值 (初始时间, 到时间 (“1970-01-01 08:00:00”))
返回 (取时间间隔 (时间值, 初始时间, #秒))

.子程序 Unix时间戳记反转, 日期时间型, , 将标准UNIX使用的格林威治时间戳记转到易系统时间日期格式
.参数 时间戳记值, 长整数型, , 要转换的时间戳记值
.参数 是否为秒, 逻辑型, , 真为秒 假为毫秒

.局部变量 初始时间, 日期时间型, , , 

赋值 (初始时间, 到时间 (“1970-01-01 08:00:00”))
.判断开始 (等于 (是否为秒, 真))
    返回 (增减时间 (初始时间, #秒, 时间戳记值))
.默认
    返回 (增减时间 (初始时间, #秒, 相除 (时间戳记值, 1000)))
.判断结束


.子程序 处理双引号, 文本型, , 
.参数 原文, 文本型, , 

返回 (相加 (#引号, 子文本替换 (原文, #引号, “”, , , 假), #引号))


.程序集 数据库程序集, , , 

.子程序 数据库_取返消费列表, 逻辑型, , 
.参数 参数_取返, 消费信息, 参考 可空 数组, 
.参数 排名数位, 整数型, 可空, 

.局部变量 局部_消费信息, 消费信息, , , 
.局部变量 局部_消费信息_临时, 消费信息, , "0", 
.局部变量 局部_记录集, SQLite3记录集类, , , 
.局部变量 局部_语句, 文本型, , , 

.如果真 (等于 (全局_数据库.是否已连接 (), 假))
    返回 (假)
.如果真结束
.如果真 (大于或等于 (排名数位, 0))
    赋值 (排名数位, 10)
.如果真结束
.如果真 (等于 (局部_记录集.置连接 (全局_数据库), 假)) ' 数据库至当前记录集连接
    返回 (假)
.如果真结束
赋值 (局部_语句, 相加 (“select * FROM oa_xffw WHERE 点单次数>=0 ORDER BY 点单次数 DESC LIMIT 0,”, 到文本 (排名数位)))
局部_记录集.打开 (局部_语句)
局部_记录集.到首记录 ()
.如果真 (大于 (局部_记录集.记录数量 (), 0))
    .计次循环首 (局部_记录集.记录数量 (), ) ' 记录集找到的数量并循环次数
        局部_记录集.读文本 (“编号”, 局部_消费信息.编号)
        局部_记录集.读文本 (“服务名称”, 局部_消费信息.服务名称)
        局部_记录集.读文本 (“消费类型”, 局部_消费信息.消费类型)
        局部_记录集.读双精度 (“服务单价”, 局部_消费信息.服务单价)
        局部_记录集.读整数 (“点单次数”, 局部_消费信息.点单次数)
        加入成员 (局部_消费信息_临时, 局部_消费信息)
        局部_记录集.到下一行 ()
    .计次循环尾 ()
    赋值 (参数_取返, 局部_消费信息_临时)
    局部_记录集.关闭 ()
    返回 (真)
.如果真结束
局部_记录集.关闭 ()
返回 (假)


.子程序 数据库_消费列表查询, 逻辑型, , 
.参数 参数_条件, 文本型, , 
.参数 参数_是否返回, 逻辑型, 可空, 
.参数 参数_返回数据, 消费信息, 参考 可空 数组, 

.局部变量 局部_记录集, SQLite3记录集类, , , 
.局部变量 局部_语句, 文本型, , , 
.局部变量 局部_消费信息, 消费信息, , , 
.局部变量 局部_消费信息数组, 消费信息, , "0", 

.如果真 (等于 (全局_数据库.是否已连接 (), 假))
    返回 (假)
.如果真结束
.如果真 (等于 (局部_记录集.置连接 (全局_数据库), 假))
    返回 (假)
.如果真结束
赋值 (局部_语句, 相加 (“select * from oa_xffw where ”, 参数_条件, “ order by 点单次数 desc”))
.如果真 (等于 (局部_记录集.打开 (局部_语句), 假))
    局部_记录集.关闭 ()
    返回 (假)
.如果真结束
.如果真 (小于或等于 (局部_记录集.记录数量 (), 0))
    局部_记录集.关闭 ()
    返回 (假)
.如果真结束
.如果真 (参数_是否返回)
    .计次循环首 (局部_记录集.记录数量 (), )
        局部_记录集.读文本 (“编号”, 局部_消费信息.编号)
        局部_记录集.读文本 (“服务名称”, 局部_消费信息.服务名称)
        局部_记录集.读双精度 (“服务单价”, 局部_消费信息.服务单价)
        局部_记录集.读文本 (“消费类型”, 局部_消费信息.消费类型)
        加入成员 (局部_消费信息数组, 局部_消费信息)
        局部_记录集.到下一行 ()
    .计次循环尾 ()
    赋值 (参数_返回数据, 局部_消费信息数组)
.如果真结束
局部_记录集.关闭 ()
返回 (真)

.子程序 数据库_消费列表修改, 逻辑型, , 
.参数 参数_条件, 文本型, , 
.参数 参数_消费项目, 消费信息, , 

.局部变量 局部_记录集, SQLite3记录集类, , , 
.局部变量 局部_语句, 文本型, , , 
.局部变量 局部_点单次数, 文本型, , , 

.如果真 (等于 (全局_数据库.是否已连接 (), 假))
    返回 (假)
.如果真结束
.如果真 (等于 (局部_记录集.置连接 (全局_数据库), 假))
    返回 (假)
.如果真结束
.如果真 (不等于 (参数_消费项目.点单次数, 0))
    赋值 (局部_点单次数, 相加 (“,点单次数=”, 参数_消费项目.点单次数))
.如果真结束
赋值 (局部_语句, 相加 (“update oa_xffw set ”, “服务名称=”, 处理双引号 (参数_消费项目.服务名称), “,服务单价=”, 到文本 (参数_消费项目.服务单价), “,消费类型=”, 处理双引号 (参数_消费项目.消费类型), 局部_点单次数, “ where ”, 参数_条件))
.如果真 (等于 (局部_记录集.打开 (局部_语句), 假))
    局部_记录集.关闭 ()
    返回 (假)
.如果真结束
.如果真 (小于或等于 (全局_数据库.影响行数 (), 0))
    局部_记录集.关闭 ()
    返回 (假)
.如果真结束
局部_记录集.关闭 ()
返回 (真)

.子程序 数据库_消费点单次数增加, 逻辑型, , 
.参数 参数_消费名称, 文本型, , 
.参数 参数_新增数量, 整数型, , 

.局部变量 局部_记录集, SQLite3记录集类, , , 
.局部变量 局部_语句, 文本型, , , 

.如果真 (等于 (全局_数据库.是否已连接 (), 假))
    返回 (假)
.如果真结束
.如果真 (等于 (局部_记录集.置连接 (全局_数据库), 假))
    返回 (假)
.如果真结束
赋值 (局部_语句, 相加 (“update oa_xffw set 点单次数=点单次数+”, 到文本 (参数_新增数量), “ where 服务名称=”, 处理双引号 (参数_消费名称)))
.如果真 (等于 (局部_记录集.打开 (局部_语句), 假))
    局部_记录集.关闭 ()
    返回 (假)
.如果真结束
局部_记录集.关闭 ()
返回 (真)

.子程序 数据库_取返时间间隔订单, 逻辑型, , 
.参数 参数_时间1, 日期时间型, , 
.参数 参数_时间2, 日期时间型, , 
.参数 参数_是否结算, 逻辑型, , 
.参数 参数_取返参数, 订单数据类型, 可空 数组, 
.参数 参数_是否返回参数, 逻辑型, 可空, 
.参数 参数_条件, 文本型, 可空, 

.局部变量 局部_记录集, SQLite3记录集类, , , 
.局部变量 局部_语句, 文本型, , , 
.局部变量 局部_计次, 整数型, , , 
.局部变量 局部_临时订单, 订单数据类型, , , 
.局部变量 局部_临时订单数组, 订单数据类型, , "0", 
.局部变量 局部_数字时间戳, 长整数型, , , 

.如果真 (等于 (全局_数据库.是否已连接 (), 假))
    返回 (假)
.如果真结束
.如果真 (等于 (局部_记录集.置连接 (全局_数据库), 假))
    返回 (假)
.如果真结束
.判断开始 (参数_是否结算)
    赋值 (局部_语句, 相加 (“select * from oa_dd where 订单时间>=”, 到文本 (Unix时间戳记正转 (参数_时间1)), “ and 订单时间<”, 到文本 (Unix时间戳记正转 (参数_时间2)), “ and 是否结算=1 ”, 参数_条件))
.默认
    
    赋值 (局部_语句, 相加 (“select * from oa_dd where 订单时间>=”, 到文本 (Unix时间戳记正转 (参数_时间1)), “ and 订单时间<”, 到文本 (Unix时间戳记正转 (参数_时间2)), “ and 是否结算=0 ”, 参数_条件))
.判断结束
.如果真 (等于 (局部_记录集.打开 (局部_语句), 假))
    返回 (假)
.如果真结束
.如果真 (参数_是否返回参数)
    .计次循环首 (局部_记录集.记录数量 (), 局部_计次)
        局部_记录集.读长整数 (“订单号”, 局部_临时订单.订单号)
        局部_记录集.读双精度 (“消费金额”, 局部_临时订单.消费金额)
        局部_记录集.读文本 (“会员卡号”, 局部_临时订单.会员卡号)
        局部_记录集.读长整数 (“订单时间”, 局部_数字时间戳)
        赋值 (局部_临时订单.订单时间, Unix时间戳记反转 (局部_数字时间戳, 真))
        局部_记录集.读文本 (“操作管理”, 局部_临时订单.操作管理)
        局部_记录集.读整数 (“是否结算”, 局部_临时订单.是否结算)
        局部_记录集.读整数 (“消费积分”, 局部_临时订单.消费积分)
        加入成员 (局部_临时订单数组, 局部_临时订单)
        局部_记录集.到下一行 ()
    .计次循环尾 ()
    赋值 (参数_取返参数, 局部_临时订单数组)
.如果真结束
局部_记录集.关闭 ()
返回 (真)


.子程序 数据库_消费积分换算, 逻辑型, , 
.参数 参数_计算公式, 文本型, , 
.参数 参数_消费金额, 双精度小数型, , 
.参数 取返_积分, 整数型, 参考, 

.局部变量 局部_记录集, SQLite3记录集类, , , 
.局部变量 局部_语句, 文本型, , , 

.如果真 (等于 (全局_数据库.是否已连接 (), 假))
    返回 (假)
.如果真结束
.如果真 (等于 (局部_记录集.置连接 (全局_数据库), 假))
    返回 (假)
.如果真结束
赋值 (局部_语句, 子文本替换 (子文本替换 (“select $公式$ as 积分”, “$公式$”, 参数_计算公式, , , 真), “$”, 到文本 (参数_消费金额), , , 真))
.如果真 (局部_记录集.打开 (局部_语句))
    局部_记录集.读整数 (“积分”, 取返_积分)
    返回 (真)
.如果真结束
返回 (假)

.子程序 数据库_取积分计算公式, 文本型, , 
.参数 参数_公式名称, 文本型, , 

.局部变量 局部_记录集, SQLite3记录集类, , , 
.局部变量 局部_语句, 文本型, , , 
.局部变量 局部_公式, 文本型, , , 

.如果真 (等于 (全局_数据库.是否已连接 (), 假))
    返回 (“$*1”)
.如果真结束
.如果真 (等于 (局部_记录集.置连接 (全局_数据库), 假))
    返回 (“$*1”)
.如果真结束
赋值 (局部_语句, 相加 (“selcet * from oa_jfgs 积分公式名称=”, 处理双引号 (参数_公式名称)))
.如果真 (等于 (局部_记录集.打开 (局部_语句), 假))
    局部_记录集.关闭 ()
    返回 (“$*1”)
.如果真结束
局部_记录集.读文本 (“积分公式”, 局部_公式)
返回 (局部_公式)

.子程序 数据库_订单商品新增, 逻辑型, , 
.参数 参数_商品信息, 消费项目, , 

.局部变量 局部_记录集, SQLite3记录集类, , , 
.局部变量 局部_语句, 文本型, , , 

.如果真 (等于 (全局_数据库.是否已连接 (), 假))
    返回 (假)
.如果真结束
.如果真 (等于 (局部_记录集.置连接 (全局_数据库), 假))
    返回 (假)
.如果真结束
赋值 (局部_语句, 取文本 (“insert into oa_xfjl (订单号,服务名称,单价,数量,合计,时间) values (%s,%s,%s,%s,%s,%s)”, 处理双引号 (参数_商品信息.订单号), 处理双引号 (参数_商品信息.消费名称), 到文本 (参数_商品信息.消费单价), 到文本 (参数_商品信息.消费数量), 到文本 (参数_商品信息.单项合计), 到文本 (Unix时间戳记正转 (参数_商品信息.点品时间))))
.如果真 (等于 (局部_记录集.打开 (局部_语句), 假))
    局部_记录集.关闭 ()
    返回 (假)
.如果真结束
局部_记录集.关闭 ()
返回 (真)


.子程序 数据库_订单商品修改, 逻辑型, , 
.参数 参数_订单号, 文本型, , 
.参数 参数_商品信息, 消费项目, , 

.局部变量 局部_记录集, SQLite3记录集类, , , 
.局部变量 局部_语句, 文本型, , , 

.如果真 (等于 (全局_数据库.是否已连接 (), 假))
    返回 (假)
.如果真结束
.如果真 (等于 (局部_记录集.置连接 (全局_数据库), 假))
    返回 (假)
.如果真结束
赋值 (局部_语句, 相加 (“update oa_xfjl set 数量=”, 到文本 (参数_商品信息.消费数量), “,单价=”, 到文本 (参数_商品信息.消费单价), “,合计=”, 到文本 (参数_商品信息.单项合计), “,时间=”, 到文本 (Unix时间戳记正转 (参数_商品信息.点品时间)), “ where 订单号=”, 处理双引号 (参数_订单号), “ and 服务名称=”, 处理双引号 (参数_商品信息.消费名称)))
.如果真 (等于 (局部_记录集.打开 (局部_语句), 假))
    局部_记录集.关闭 ()
    返回 (假)
.如果真结束
局部_记录集.关闭 ()
返回 (真)


.子程序 数据库_订单商品查询, 逻辑型, , 
.参数 参数_订单号, 文本型, , 
.参数 是否返回参数, 逻辑型, 可空, 
.参数 参数_取返商品信息, 消费项目, 参考 可空 数组, 
.参数 参数_条件, 文本型, 可空, 

.局部变量 局部_记录集, SQLite3记录集类, , , 
.局部变量 局部_语句, 文本型, , , 
.局部变量 局部_消费信息, 消费项目, , , 
.局部变量 局部_消费信息数组, 消费项目, , "0", 
.局部变量 局部_数字时间戳, 长整数型, , , 

.如果真 (等于 (全局_数据库.是否已连接 (), 假))
    返回 (假)
.如果真结束
.如果真 (等于 (局部_记录集.置连接 (全局_数据库), 假))
    返回 (假)
.如果真结束
赋值 (局部_语句, 相加 (“select * from oa_xfjl where 订单号=”, 处理双引号 (参数_订单号), 参数_条件))
.如果真 (等于 (局部_记录集.打开 (局部_语句), 假))
    局部_记录集.关闭 ()
    返回 (假)
.如果真结束
.如果真 (小于或等于 (局部_记录集.记录数量 (), 0))
    局部_记录集.关闭 ()
    返回 (假)
.如果真结束
.如果真 (等于 (是否返回参数, 假))
    局部_记录集.关闭 ()
    返回 (真)
.如果真结束
.计次循环首 (局部_记录集.记录数量 (), )
    局部_记录集.读文本 (“订单号”, 局部_消费信息.订单号)
    局部_记录集.读文本 (“服务名称”, 局部_消费信息.消费名称)
    局部_记录集.读整数 (“数量”, 局部_消费信息.消费数量)
    局部_记录集.读双精度 (“单价”, 局部_消费信息.消费单价)
    局部_记录集.读双精度 (“合计”, 局部_消费信息.单项合计)
    局部_记录集.读长整数 (“时间”, 局部_数字时间戳)
    赋值 (局部_消费信息.点品时间, Unix时间戳记反转 (局部_数字时间戳, 真))
    加入成员 (局部_消费信息数组, 局部_消费信息)
    局部_记录集.到下一行 ()
.计次循环尾 ()
赋值 (参数_取返商品信息, 局部_消费信息数组)
局部_记录集.关闭 ()
返回 (真)


.子程序 数据库_新建订单, 逻辑型, , 
.局部变量 局部_记录集, SQLite3记录集类, , , 
.局部变量 局部_语句, 文本型, , , 
.局部变量 局部_最大订单号, 长整数型, , , 

.如果真 (等于 (全局_数据库.是否已连接 (), 假))
    返回 (假)
.如果真结束
.如果真 (等于 (局部_记录集.置连接 (全局_数据库), 假))
    返回 (假)
.如果真结束
赋值 (局部_语句, “select max(订单号)+1 as 订单号 from oa_dd”) ' 取最大订单数值
.如果真 (等于 (局部_记录集.打开 (局部_语句), 假))
    局部_记录集.关闭 ()
    返回 (假)
.如果真结束
局部_记录集.读长整数 (“订单号”, 局部_最大订单号)
局部_记录集.关闭 ()
赋值 (局部_语句, 相加 (“insert into oa_dd (订单号,订单时间,操作管理) values (”, 到文本 (局部_最大订单号), “,”, 到文本 (Unix时间戳记正转 (取现行时间 ())), “,”, 处理双引号 (全局_当前管理), “)”))
.如果真 (等于 (局部_记录集.打开 (局部_语句), 假))
    局部_记录集.关闭 ()
    返回 (假)
.如果真结束
局部_记录集.关闭 ()
返回 (真)

.子程序 数据库_修改订单, 逻辑型, , 
.参数 参数_消费金额, 双精度小数型, , 
.参数 参数_消费积分, 整数型, , 
.参数 参数_会员卡号, 文本型, 可空, 
.参数 是否结算, 逻辑型, 可空, 真 1 为 结算 假 0 为 不结算 
.参数 订单号, 文本型, , 

.局部变量 局部_记录集, SQLite3记录集类, , , 
.局部变量 局部_语句, 文本型, , , 
.局部变量 局部_是否结算, 文本型, , , 
.局部变量 局部_消费会员, 文本型, , , 
.局部变量 局部_会员卡号, 文本型, , , 

.如果真 (等于 (全局_数据库.是否已连接 (), 假))
    返回 (假)
.如果真结束
.如果真 (等于 (局部_记录集.置连接 (全局_数据库), 假))
    返回 (假)
.如果真结束
.如果真 (是否结算)
    赋值 (局部_是否结算, “,是否结算=1”)
.如果真结束
.如果真 (不等于 (参数_会员卡号, “”))
    赋值 (局部_会员卡号, 相加 (“,会员卡号=”, 处理双引号 (参数_会员卡号)))
.如果真结束
赋值 (局部_语句, 相加 (“update oa_dd set 消费金额=”, 到文本 (参数_消费金额), 局部_会员卡号, “,消费积分=”, 到文本 (参数_消费积分), 局部_是否结算, “ where ”, “订单号=”, 订单号))
.如果真 (等于 (局部_记录集.打开 (局部_语句), 假))
    局部_记录集.关闭 ()
    返回 (假)
.如果真结束
局部_记录集.关闭 ()
返回 (真)

.子程序 数据库_查询订单, 逻辑型, , 
.参数 参数_订单号, 文本型, , 
.参数 参数_是否返回, 逻辑型, 可空, 
.参数 参数_取返订单, 订单数据类型, 可空, 

.局部变量 局部_记录集, SQLite3记录集类, , , 
.局部变量 局部_语句, 文本型, , , 
.局部变量 局部_订单, 订单数据类型, , , 
.局部变量 局部_数字时间戳, 长整数型, , , 

.如果真 (等于 (全局_数据库.是否已连接 (), 假))
    返回 (假)
.如果真结束
.如果真 (等于 (局部_记录集.置连接 (全局_数据库), 假))
    返回 (假)
.如果真结束
赋值 (局部_语句, 相加 (“select * from oa_dd where 订单号=”, 参数_订单号))
.如果真 (局部_记录集.打开 (局部_语句))
    .如果真 (小于或等于 (局部_记录集.记录数量 (), 0))
        局部_记录集.关闭 ()
        返回 (假)
    .如果真结束
    .如果真 (参数_是否返回)
        局部_记录集.读长整数 (“订单号”, 局部_订单.订单号)
        局部_记录集.读双精度 (“消费金额”, 局部_订单.消费金额)
        局部_记录集.读整数 (“消费积分”, 局部_订单.消费积分)
        局部_记录集.读文本 (“会员卡号”, 局部_订单.会员卡号)
        局部_记录集.读文本 (“操作管理”, 局部_订单.操作管理)
        局部_记录集.读长整数 (“订单时间”, 局部_数字时间戳)
        赋值 (局部_订单.订单时间, Unix时间戳记反转 (局部_数字时间戳, 真))
        局部_记录集.读整数 (“是否结算”, 局部_订单.是否结算)
        赋值 (参数_取返订单, 局部_订单)
    .如果真结束
    局部_记录集.关闭 ()
    返回 (真)
.如果真结束
局部_记录集.关闭 ()
返回 (假)


.子程序 数据库_流水账, 逻辑型, , 
.参数 参数_时间, 日期时间型, , 
.参数 参数_方式, 文本型, , 
.参数 参数_金额, 双精度小数型, , 
.参数 参数_来源, 文本型, , 
.参数 参数_入账单号, 文本型, 可空, 

.局部变量 局部_记录集, SQLite3记录集类, , , 
.局部变量 局部_语句, 文本型, , , 
.局部变量 局部_流水号, 文本型, , , 
.局部变量 局部_入账单号, 文本型, , , 

.如果真 (等于 (全局_数据库.是否已连接 (), 假))
    返回 (假)
.如果真结束
.如果真 (等于 (局部_记录集.置连接 (全局_数据库), 假))
    返回 (假)
.如果真结束
赋值 (局部_语句, 相加 (“select  流水号,max(流水号)+1 as 新流水号 from oa_lsz where 流水号 like ”, 处理双引号 (相加 (到文本 (取年份 (取现行时间 ())), “%”))))
.如果真 (等于 (局部_记录集.打开 (局部_语句), 假))
    局部_记录集.关闭 ()
    返回 (假)
.如果真结束
.如果真 (等于 (局部_记录集.读文本 (“流水号”, 局部_流水号), 假))
    局部_记录集.关闭 ()
    返回 (假)
.如果真结束
.判断开始 (等于 (局部_流水号, “”))
    赋值 (局部_流水号, 相加 (到文本 (取年份 (取现行时间 ())), “00000000”))
.默认
    局部_记录集.读文本 (“新流水号”, 局部_流水号)
.判断结束
局部_记录集.关闭 ()
.如果真 (不等于 (参数_入账单号, “”))
    赋值 (局部_入账单号, 相加 (“,”, 参数_入账单号))
.如果真结束
赋值 (局部_语句, 相加 (“insert into oa_lsz (流水号,时间,方式,金额,来源,入账单号) values (”, 处理双引号 (局部_流水号), “,”, 处理双引号 (到文本 (Unix时间戳记正转 (参数_时间))), “,”, 处理双引号 (参数_方式), “,”, 到文本 (参数_金额), “,”, 处理双引号 (参数_来源), 局部_入账单号, “)”))
.如果真 (等于 (局部_记录集.打开 (局部_语句), 假))
    局部_记录集.关闭 ()
    返回 (假)
.如果真结束
局部_记录集.关闭 ()
赋值 (局部_语句, 相加 (“select * from oa_lsz where 流水号=”, 处理双引号 (局部_流水号)))
.如果真 (等于 (局部_记录集.打开 (局部_语句), 假))
    局部_记录集.关闭 ()
    返回 (假)
.如果真结束
.如果真 (小于或等于 (局部_记录集.记录数量 (), 0))
    局部_记录集.关闭 ()
    返回 (假)
.如果真结束
局部_记录集.关闭 ()
返回 (真)


.子程序 数据库_结算记录, 逻辑型, , 
.参数 参数_消费单号, 文本型, , 
.参数 参数_消费金额, 双精度小数型, , 
.参数 参数_实收金额, 双精度小数型, , 
.参数 参数_订单找零, 双精度小数型, , 
.参数 参数_结算时间, 日期时间型, , 
.参数 参数_结算管理, 文本型, , 
.参数 参数_消费方式, 文本型, , 
.参数 参数_会员卡号, 文本型, , 

.局部变量 局部_记录集, SQLite3记录集类, , , 
.局部变量 局部_语句, 文本型, , , 
.局部变量 匿名局部变量_2189, 空白型, , , 
.局部变量 局部_消费单号, 文本型, , , 
.局部变量 局部_消费金额, 文本型, , , 
.局部变量 局部_实收金额, 文本型, , , 
.局部变量 局部_订单找零, 文本型, , , 
.局部变量 局部_结算时间, 文本型, , , 
.局部变量 局部_结算管理, 文本型, , , 
.局部变量 局部_消费方式, 文本型, , , 
.局部变量 局部_会员卡号, 文本型, , , 

.如果真 (等于 (全局_数据库.是否已连接 (), 假))
    返回 (假)
.如果真结束
.如果真 (等于 (局部_记录集.置连接 (全局_数据库), 假))
    返回 (假)
.如果真结束
赋值 (局部_消费单号, 处理双引号 (参数_消费单号))
赋值 (局部_消费金额, 到文本 (参数_消费金额))
赋值 (局部_实收金额, 到文本 (参数_实收金额))
赋值 (局部_订单找零, 到文本 (参数_订单找零))
赋值 (局部_结算时间, 处理双引号 (到文本 (Unix时间戳记正转 (参数_结算时间))))
赋值 (局部_结算管理, 处理双引号 (参数_结算管理))
赋值 (局部_消费方式, 处理双引号 (参数_消费方式))
赋值 (局部_会员卡号, 处理双引号 (参数_会员卡号))
赋值 (局部_语句, 相加 (“insert into oa_jsjl (消费单号,消费金额,实收金额,订单找零,结算时间,结算管理,消费方式,会员卡号) values (”, 局部_消费单号, “,”, 局部_消费金额, “,”, 局部_实收金额, “,”, 局部_订单找零, “,”, 局部_结算时间, “,”, 局部_结算管理, “,”, 局部_消费方式, “,”, 局部_会员卡号, “)”))
.如果真 (等于 (局部_记录集.打开 (局部_语句), 假))
    局部_记录集.关闭 ()
    返回 (假)
.如果真结束
.如果真 (小于或等于 (全局_数据库.影响行数 (), 0))
    局部_记录集.关闭 ()
    返回 (假)
.如果真结束
局部_记录集.关闭 ()
返回 (真)

.子程序 数据库_统计今日现金收入, 双精度小数型, , 
.参数 日期一, 日期时间型, , 
.参数 日期二, 日期时间型, , 

.局部变量 局部_记录集, SQLite3记录集类, , , 
.局部变量 局部_语句, 文本型, , , 
.局部变量 局部_现金收入, 双精度小数型, , , 

.如果真 (等于 (全局_数据库.是否已连接 (), 假))
    返回 (0)
.如果真结束
.如果真 (等于 (局部_记录集.置连接 (全局_数据库), 假))
    返回 (0)
.如果真结束
赋值 (局部_语句, 相加 (“select sum(金额) as 现金收入 from oa_lsz where 时间>=”, 处理双引号 (到文本 (Unix时间戳记正转 (取日期 (日期一)))), “ and 时间<”, 处理双引号 (到文本 (Unix时间戳记正转 (日期二)))))
.如果真 (等于 (局部_记录集.打开 (局部_语句), 假))
    局部_记录集.关闭 ()
    返回 (0)
.如果真结束
局部_记录集.读双精度 (“现金收入”, 局部_现金收入)
局部_记录集.关闭 ()
返回 (局部_现金收入)


.子程序 数据库_充值记录_新增, 逻辑型, , 
.参数 参数_卡号, 文本型, , 
.参数 参数_原金额, 双精度小数型, , 
.参数 参数_充值金额, 双精度小数型, , 
.参数 参数_卡余金额, 双精度小数型, , 
.参数 参数_充值时间, 日期时间型, , 
.参数 参数_操作管理, 文本型, , 

.局部变量 局部_记录集, SQLite3记录集类, , , 
.局部变量 局部_语句, 文本型, , , 

.如果真 (等于 (全局_数据库.是否已连接 (), 假))
    返回 (假)
.如果真结束
.如果真 (等于 (局部_记录集.置连接 (全局_数据库), 假))
    返回 (假)
.如果真结束
赋值 (局部_语句, 取文本 (“insert into oa_czjl (卡号,原金额,充值金额,卡余金额,充值时间,操作管理) values(%s,%s,%s,%s,%s,%s)”, 处理双引号 (参数_卡号), 到文本 (参数_原金额), 到文本 (参数_充值金额), 到文本 (参数_卡余金额), 到文本 (Unix时间戳记正转 (参数_充值时间)), 处理双引号 (参数_操作管理)))
.如果真 (等于 (局部_记录集.打开 (局部_语句), 假))
    局部_记录集.关闭 ()
    返回 (假)
.如果真结束
.如果真 (小于 (全局_数据库.影响行数 (), 1))
    局部_记录集.关闭 ()
    返回 (假)
.如果真结束
局部_记录集.关闭 ()
返回 (真)


.子程序 数据库_统计今日营业额, 双精度小数型, , 
.参数 日期一, 日期时间型, , 
.参数 日期二, 日期时间型, , 

.局部变量 局部_记录集, SQLite3记录集类, , , 
.局部变量 局部_语句, 文本型, , , 
.局部变量 局部_营业额, 双精度小数型, , , 

.如果真 (等于 (全局_数据库.是否已连接 (), 假))
    返回 (0)
.如果真结束
.如果真 (等于 (局部_记录集.置连接 (全局_数据库), 假))
    返回 (0)
.如果真结束
赋值 (局部_语句, 相加 (“select sum(消费金额) as 营业额 from oa_jsjl where 结算时间>=”, 处理双引号 (到文本 (Unix时间戳记正转 (取日期 (日期一)))), “ and 结算时间<”, 处理双引号 (到文本 (Unix时间戳记正转 (日期二)))))
.如果真 (等于 (局部_记录集.打开 (局部_语句), 假))
    局部_记录集.关闭 ()
    返回 (0)
.如果真结束
局部_记录集.读双精度 (“营业额”, 局部_营业额)
局部_记录集.关闭 ()
返回 (局部_营业额)


.子程序 数据库_会员充值记录查询, 逻辑型, , 
.参数 参数_会员卡号, 文本型, , 
.参数 参数_取返参数, 会员充值数据类型, 参考 数组, 

.局部变量 局部_记录集, SQLite3记录集类, , , 
.局部变量 局部_语句, 文本型, , , 
.局部变量 局部_临时, 会员充值数据类型, , , 
.局部变量 局部_数字时间, 长整数型, , , 

.如果真 (等于 (全局_数据库.是否已连接 (), 假))
    返回 (假)
.如果真结束
.如果真 (等于 (局部_记录集.置连接 (全局_数据库), 假))
    返回 (假)
.如果真结束
赋值 (局部_语句, 相加 (“select * from oa_czjl where 卡号=”, 参数_会员卡号))
.如果真 (等于 (局部_记录集.打开 (局部_语句), 假))
    局部_记录集.关闭 ()
    返回 (假)
.如果真结束
.如果真 (小于或等于 (局部_记录集.记录数量 (), 0))
    局部_记录集.关闭 ()
    返回 (假)
.如果真结束
.计次循环首 (局部_记录集.记录数量 (), )
    局部_记录集.读文本 (“卡号”, 局部_临时.卡号)
    局部_记录集.读双精度 (“原金额”, 局部_临时.原金额)
    局部_记录集.读双精度 (“充值金额”, 局部_临时.充值金额)
    局部_记录集.读双精度 (“卡余金额”, 局部_临时.卡余金额)
    局部_记录集.读长整数 (“充值时间”, 局部_数字时间)
    赋值 (局部_临时.充值时间, Unix时间戳记反转 (局部_数字时间, 真))
    局部_记录集.读文本 (“操作管理”, 局部_临时.操作管理)
    加入成员 (参数_取返参数, 局部_临时)
    局部_记录集.到下一行 ()
.计次循环尾 ()
局部_记录集.关闭 ()
返回 (真)


.子程序 数据库_流水账查询, 逻辑型, , 
.参数 参数_条件, 文本型, , 
.参数 参数_是否取返, 逻辑型, 可空, 
.参数 参数_取返信息, 流水账数据类型, 参考 可空 数组, 
.参数 参数_页面1, 整数型, 可空, 
.参数 参数_页面2, 整数型, 可空, 

.局部变量 局部_记录集, SQLite3记录集类, , , 
.局部变量 局部_语句, 文本型, , , 
.局部变量 局部_分页参数, 文本型, , , 
.局部变量 局部_流水账, 流水账数据类型, , , 
.局部变量 局部_数字时间, 长整数型, , , 
.局部变量 局部_条件, 文本型, , , 

.如果真 (等于 (全局_数据库.是否已连接 (), 假))
    返回 (假)
.如果真结束
.如果真 (等于 (局部_记录集.置连接 (全局_数据库), 假))
    返回 (假)
.如果真结束
.如果真 (不等于 (参数_条件, “”))
    赋值 (局部_条件, 相加 (“where ”, 参数_条件))
.如果真结束
.如果真 (大于 (参数_页面2, 0))
    赋值 (局部_分页参数, 相加 (“ LIMIT ”, 到文本 (参数_页面1), “,”, 到文本 (参数_页面2)))
.如果真结束
赋值 (局部_语句, 相加 (“select * from oa_lsz ”, 局部_条件, 局部_分页参数))
.如果真 (等于 (局部_记录集.打开 (局部_语句), 假))
    局部_记录集.关闭 ()
    返回 (假)
.如果真结束
.如果真 (小于或等于 (局部_记录集.记录数量 (), 0))
    局部_记录集.关闭 ()
    返回 (假)
.如果真结束
.计次循环首 (局部_记录集.记录数量 (), )
    局部_记录集.读长整数 (“时间”, 局部_数字时间)
    赋值 (局部_流水账.时间, Unix时间戳记反转 (局部_数字时间, 真))
    局部_记录集.读文本 (“方式”, 局部_流水账.方式)
    局部_记录集.读双精度 (“金额”, 局部_流水账.金额)
    局部_记录集.读文本 (“来源”, 局部_流水账.来源)
    局部_记录集.读文本 (“流水号”, 局部_流水账.流水号)
    局部_记录集.读文本 (“入账单号”, 局部_流水账.入账单号)
    加入成员 (参数_取返信息, 局部_流水账)
    局部_记录集.到下一行 ()
.计次循环尾 ()
局部_记录集.关闭 ()
返回 (真)




.子程序 数据库_流水账查询总数, 整数型, , 
.参数 参数_条件, 文本型, 可空, 

.局部变量 局部_记录集, SQLite3记录集类, , , 
.局部变量 局部_语句, 文本型, , , 
.局部变量 局部_条件, 文本型, , , 
.局部变量 局部_记录总数, 整数型, , , 

.如果真 (等于 (全局_数据库.是否已连接 (), 假))
    返回 (0)
.如果真结束
.如果真 (等于 (局部_记录集.置连接 (全局_数据库), 假))
    返回 (0)
.如果真结束
.如果真 (不等于 (参数_条件, “”))
    赋值 (局部_条件, 相加 (“where ”, 参数_条件))
.如果真结束
赋值 (局部_语句, 相加 (“select * from oa_lsz ”, 局部_条件))
.如果真 (等于 (局部_记录集.打开 (局部_语句), 假))
    局部_记录集.关闭 ()
    返回 (0)
.如果真结束
赋值 (局部_记录总数, 局部_记录集.记录数量 ())
局部_记录集.关闭 ()
返回 (局部_记录总数)

.窗口程序集 窗口_结算程序集, , , 

.子程序 _窗口_结算_创建完毕, 空白型, , 
赋值 (.标题, 相加 (“消费金额：”, 到文本 (全局_消费金额)))
赋值 (.标题, 相加 (“赠送积分：”, 到文本 (全局_消费积分)))

.子程序 _编辑框_现金结算_内容被改变, 空白型, , 
赋值 (.标题, 相加 (“找零：”, 到文本 (相减 (到数值 (.内容), 全局_消费金额))))

 ' 找零：

.子程序 _超级按钮_结算_被单击, 空白型, , 
.局部变量 局部_卡积分, 整数型, , , 
.局部变量 局部_卡金额, 双精度小数型, , , 
.局部变量 局部_结算时间, 日期时间型, , , 

赋值 (局部_结算时间, 取现行时间 ())
.如果真 (等于 (., 0))
    .如果真 (小于 (到数值 (.内容), 全局_消费金额))
        信息框 (“做亏本生意啦！”, 0, )
        返回 ()
    .如果真结束
    全局_数据库.开始事务 ()
    .如果真 (等于 (数据库_修改订单 (全局_消费金额, 全局_消费积分, 全局_会员卡号, 真, 全局_当前订单), 假))
        全局_数据库.回滚事务 ()
        返回 ()
    .如果真结束
    .如果真 (等于 (数据库_流水账 (局部_结算时间, #流水账_方式_收入, 全局_消费金额, #流水账_来源_现金, 全局_当前订单), 假))
        全局_数据库.回滚事务 ()
        返回 ()
    .如果真结束
    .如果真 (等于 (数据库_结算记录 (全局_当前订单, 全局_消费金额, 到数值 (.内容), 相减 (到数值 (.内容), 全局_消费金额), 局部_结算时间, 全局_当前管理, #消费_方式_现金, “”), 假))
        全局_数据库.回滚事务 ()
        返回 ()
    .如果真结束
    
.如果真结束

.如果真 (等于 (., 1))
    赋值 (.时钟周期, 0)
    全局_数据库.开始事务 ()
    .如果真 (等于 (读会员卡信息 (全局_会员卡号, 局部_卡积分, 局部_卡金额), 假))
        全局_数据库.回滚事务 ()
        返回 ()
    .如果真结束
    .如果真 (小于 (局部_卡金额, 全局_消费金额))
        全局_数据库.回滚事务 ()
        返回 ()
    .如果真结束
    .如果真 (等于 (写会员卡信息 (全局_会员卡号, 相加 (局部_卡积分, 全局_消费积分), 相减 (局部_卡金额, 全局_消费金额)), 假))
        全局_数据库.回滚事务 ()
        返回 ()
    .如果真结束
    .如果真 (等于 (数据库_修改订单 (全局_消费金额, 全局_消费积分, 全局_会员卡号, 真, 全局_当前订单), 假))
        全局_数据库.回滚事务 ()
        返回 ()
    .如果真结束
    .如果真 (等于 (数据库_结算记录 (全局_当前订单, 全局_消费金额, 全局_消费金额, 0, 局部_结算时间, 全局_当前管理, #消费_方式_会员, 全局_会员卡号), 假))
        全局_数据库.回滚事务 ()
        信息框 (“结算失败！”, #信息图标, )
        返回 ()
    .如果真结束
    
.如果真结束

.如果真 (等于 (., 2))
    赋值 (.时钟周期, 0)
    全局_数据库.开始事务 ()
    .如果真 (等于 (读会员卡信息 (全局_会员卡号, 局部_卡积分, 局部_卡金额), 假))
        全局_数据库.回滚事务 ()
        返回 ()
    .如果真结束
    .如果真 (小于 (到数值 (.内容), 0))
        全局_数据库.回滚事务 ()
        信息框 (“负数现金”, #警告图标, )
        返回 ()
    .如果真结束
    .如果真 (小于 (局部_卡金额, 相减 (全局_消费金额, 到数值 (.内容))))
        全局_数据库.回滚事务 ()
        返回 ()
    .如果真结束
    .如果真 (等于 (数据库_修改订单 (全局_消费金额, 全局_消费积分, 全局_会员卡号, 真, 全局_当前订单), 假))
        全局_数据库.回滚事务 ()
        返回 ()
    .如果真结束
    .如果真 (等于 (数据库_流水账 (局部_结算时间, #流水账_方式_收入, 到数值 (.内容), #流水账_来源_综合, 全局_当前订单), 假))
        全局_数据库.回滚事务 ()
        返回 ()
    .如果真结束
    .如果真 (等于 (数据库_结算记录 (全局_当前订单, 全局_消费金额, 到数值 (.内容), 相减 (到数值 (.内容), 全局_消费金额), 局部_结算时间, 全局_当前管理, #消费_方式_综合, 全局_会员卡号), 假))
        全局_数据库.回滚事务 ()
        信息框 (“结算失败！”, #信息图标, )
        返回 ()
    .如果真结束
    
.如果真结束
全局_数据库.保存事务 ()
信息框 (“成功结算！”, #信息图标, )
查找订单并移除 (全局_当前订单)
赋值 (.时钟周期, 0)
销毁 ()

.子程序 _高级选择夹_结算_将改变子夹, 逻辑型, , 
.参数 子夹索引, 整数型, , 

.局部变量 局部_当前设备句柄, 整数型, , , 

赋值 (.时钟周期, 0)
.如果真 (等于 (子夹索引, 0))
    赋值 (., 假)
.如果真结束
.如果真 (大于 (子夹索引, 0))
    赋值 (., 真)
    赋值 (.时钟周期, 1000)
    .如果真 (小于 (设备_点名设备_ (全局_设备端口), 0))
        .如果真 (等于 (打开读卡器设备 (真), 假))
            返回 (假)
        .如果真结束
        
    .如果真结束
    .如果真 (小于 (设备_读取卡号_ (全局_设备端口, 全局_会员卡号), 0))
        信息框 (“读卡失败！”, #警告图标, )
        返回 (假)
    .如果真结束
    
.如果真结束


.子程序 _时钟_读卡_周期事件, 空白型, , 
.局部变量 局部_会员卡号, 文本型, , , 

赋值 (局部_会员卡号, 取重复文本 (30, “ ”))
.如果真 (等于 (., 0))
    返回 ()
.如果真结束
.如果真 (小于 (设备_读取卡号_ (全局_设备端口, 局部_会员卡号), 0))
    赋值 (局部_会员卡号, 取重复文本 (30, “ ”))
    赋值 (全局_会员卡号, “”)
    显示卡信息 ()
    设备_蜂鸣_ (全局_设备端口)
    返回 ()
.如果真结束
赋值 (全局_会员卡号, 局部_会员卡号)
显示卡信息 ()

.子程序 显示卡信息, 空白型, , 
.局部变量 局部_卡积分, 整数型, , , 
.局部变量 局部_卡金额, 双精度小数型, , , 

读会员卡信息 (全局_会员卡号, 局部_卡积分, 局部_卡金额)
.如果真 (等于 (., 1))
    赋值 (.标题, 相加 (“会员积分：”, 到文本 (局部_卡积分)))
    赋值 (.标题, 相加 (“会员卡号：”, 全局_会员卡号))
    赋值 (.标题, 相加 (“卡余金额：”, 到文本 (局部_卡金额)))
    .如果真 (小于 (局部_卡金额, 全局_消费金额))
        赋值 (., 真)
        返回 ()
    .如果真结束
    
.如果真结束
.如果真 (等于 (., 2))
    赋值 (.标题, 相加 (“会员积分：”, 到文本 (局部_卡积分)))
    赋值 (.标题, 相加 (“会员卡号：”, 全局_会员卡号))
    赋值 (.标题, 相加 (“卡余金额：”, 到文本 (局部_卡金额)))
    
    .判断开始 (小于 (到数值 (.内容), 全局_消费金额))
        赋值 (.标题, 相加 (“会员需付：”, 到文本 (相减 (全局_消费金额, 到数值 (.内容)))))
        赋值 (.标题, “找零：0”)
        
    .默认
        
        赋值 (.标题, 相加 (“找零：”, 到文本 (相减 (到数值 (.内容), 全局_消费金额))))
        赋值 (.标题, “会员需付：0”)
    .判断结束
    
    .如果真 (小于 (相加 (局部_卡金额, 到数值 (.内容)), 全局_消费金额))
        赋值 (., 真)
        返回 ()
    .如果真结束
    
.如果真结束

赋值 (., 假)

.程序集 卡读写程序集, , , 

.子程序 读会员卡信息, 逻辑型, , 
.参数 参数_卡号, 文本型, , 
.参数 参数_卡积分, 整数型, 参考, 
.参数 参数_卡金额, 双精度小数型, 参考, 

.局部变量 局部_卡号, 文本型, , , 
.局部变量 局部_卡积分, 文本型, , , 
.局部变量 局部_卡金额_整数, 文本型, , , 
.局部变量 局部_卡金额_小数, 文本型, , , 

 ' * 40  卡积分
 ' * 41  卡整数金额部分
 ' * 42  卡小数金额部分
 ' * 43  卡密码等
赋值 (局部_卡号, 取空白文本 (30))
.如果真 (小于 (设备_读取卡号_ (全局_设备端口, 局部_卡号), 0))
    返回 (假)
.如果真结束
.如果真 (不等于 (局部_卡号, 参数_卡号))
    返回 (假)
.如果真结束
.如果真 (小于 (设备_装载卡密码 (全局_设备端口, “FFFFFFFFFFFF”, 0), 0))
    信息框 (“卡密码错误！”, 0, )
    返回 (假)
.如果真结束
赋值 (局部_卡积分, 取空白文本 (100))
赋值 (局部_卡金额_整数, 取空白文本 (100))
赋值 (局部_卡金额_小数, 取空白文本 (100))
.如果真 (小于 (设备_读块数据_ (全局_设备端口, 40, 局部_卡积分), 0)) ' * 40  卡积分
    返回 (假)
.如果真结束
.如果真 (小于 (设备_读块数据_ (全局_设备端口, 41, 局部_卡金额_整数), 0)) ' * 41  卡整数金额部分
    返回 (假)
.如果真结束
.如果真 (小于 (设备_读块数据_ (全局_设备端口, 42, 局部_卡金额_小数), 0)) ' * 42  卡小数金额部分
    返回 (假)
.如果真结束
赋值 (局部_卡积分, 删全部空 (子文本替换 (局部_卡积分, “F”, “”, , , 假)))
赋值 (局部_卡金额_整数, 删全部空 (子文本替换 (局部_卡金额_整数, “F”, “”, , , 假)))
赋值 (局部_卡金额_小数, 删全部空 (子文本替换 (局部_卡金额_小数, “F”, “”, , , 假)))
赋值 (参数_卡积分, 到整数 (局部_卡积分))
赋值 (参数_卡金额, 到数值 (相加 (局部_卡金额_整数, “.”, 局部_卡金额_小数)))
返回 (真)

.子程序 写会员卡信息, 逻辑型, , 
.参数 参数_卡号, 文本型, , 
.参数 参数_卡积分, 整数型, , 
.参数 参数_卡金额, 双精度小数型, , 

.局部变量 局部_卡号, 文本型, , , 
.局部变量 局部_卡金额_整数, 文本型, , , 
.局部变量 局部_卡金额_小数, 文本型, , , 
.局部变量 局部_卡积分, 文本型, , , 

 ' * 40  卡积分
 ' * 41  卡整数金额部分
 ' * 42  卡小数金额部分
 ' * 43  卡密码等
赋值 (局部_卡号, 取重复文本 (30, “ ”))
.如果真 (小于 (设备_读取卡号_ (全局_设备端口, 局部_卡号), 0))
    返回 (假)
.如果真结束
数值_到32位数值文本 (参数_卡金额, 局部_卡金额_整数, 局部_卡金额_小数)
数值_到32位数值文本 (参数_卡积分, 局部_卡积分)
 ' 调试输出 (局部_卡金额_整数)
 ' 调试输出 (局部_卡金额_小数)
 ' 调试输出 (局部_卡积分)
.如果真 (小于 (设备_写块数据_ (全局_设备端口, 40, 局部_卡积分), 0))
    返回 (假)
.如果真结束
.如果真 (小于 (设备_写块数据_ (全局_设备端口, 41, 局部_卡金额_整数), 0))
    返回 (假)
.如果真结束
.如果真 (小于 (设备_写块数据_ (全局_设备端口, 42, 局部_卡金额_小数), 0))
    返回 (假)
.如果真结束
返回 (真)


.程序集 __HIDDEN_TEMP_MOD__, , , 

.子程序 设备_打开设备_, 整数型, , >=0 成功 <0 失败
.参数 参数_端口号, 整数型, , Port [in] 串口号（范围：1-255）；访问HID 设备时，此处传入0



.子程序 设备_点名取设备信息_, 整数型, , >=0 成功 <0 失败
.参数 设备型号, 文本型, 参考, 
.参数 cpu型号, 整数型, 参考, 
.参数 设备版本, 双精度小数型, 参考, 



.子程序 设备_关闭设备_, 整数型, , >=0 成功 <0 失败
.参数 参数_端口号, 整数型, , Port [in] 串口号（范围：1-255）；访问HID 设备时，此处传入0



.子程序 设备_取当前设备句柄_, 空白型, , 
.参数 参数_端口号, 整数型, , Port [in] 串口号
.参数 取返参数_当前设备句柄, 整数型, 参考, Handle [out]获取当前串口句柄



.子程序 设备_蜂鸣_, 空白型, , 
.参数 参数_端口号, 整数型, , Port [in] 串口号



.子程序 设备_读取卡号_, 整数型, , >=0 成功 <0 失败
.参数 参数_端口号, 整数型, , Port [in] 串口号
.参数 取返参数_卡号, 文本型, 参考, CardNo [out] 以4 字节整型数传出卡号



.子程序 设备_设置卡序列号的顺序, 整数型, , >=0 成功 <0 失败
.参数 参数_端口号, 整数型, , Port [in] 串口号
.参数 参数_顺序标志, 整数型, , seq [in] 顺序标志：0-默认顺序 1-反转卡号



.子程序 设备_装载卡密码, 整数型, , >=0 成功 <0 失败
.参数 参数_端口号, 整数型, , Port [in] 串口号
.参数 参数_传入密码, 文本型, 参考, Key [in] 传入密码，长度12 字节
.参数 参数_密码类型, 整数型, , KeyType [in] 密码类型 0-A 密码(默认) 1-B 密码



.子程序 设备_读块数据_, 整数型, , >=0 成功 <0 失败
.参数 参数_端口号, 整数型, , Port [in] 串口号
.参数 参数_块号, 整数型, , Block [in] 要读取的块号，范围0-63
.参数 参数_数据, 文本型, 参考, Data [out] 读出的数据，长度32 字节



.子程序 设备_写块数据_, 整数型, , >=0  成功    <0  失败 
.参数 参数_端口号, 整数型, , Port    [in] 串口号 
.参数 参数_块号, 整数型, , Block   [in] 要写入的块号，范围1-63
.参数 参数_数据, 文本型, , Data    [in] 要写入的数据，长度32字节 



.子程序 设备_修改密钥_, 整数型, , >=0  成功    <0  失败 
.参数 参数_端口号, 整数型, , Port     [in]  串口号 
.参数 参数_扇区号, 整数型, , Sector   [in]  扇区号，范围0-15
.参数 参数_原密码, 文本型, , OldKey   [in]  原密码A，长度12字节
.参数 参数_新密码, 文本型, , NewKey   [in]  新密码A，长度12字节



.子程序 设备_取动态库相关_, 空白型, , 
.参数 参数_动态库版本号, 双精度小数型, 参考, Version      [out]动态库版本号 
.参数 参数_动态库最后生成日期, 文本型, 参考, BuildDate    [out]动态库最后生成日期



.子程序 设备_点名设备_, 整数型, , >=0 成功 <0 失败
.参数 参数_端口号, 整数型, , Port [in] 串口号



.类模块 SQLite3数据库连接类, , , 

.子程序 取数据库句柄, 整数型, , 


.子程序 置数据库句柄, 逻辑型, , 
.参数 参数_数据库句柄, 整数型, , 



.子程序 是否已连接, 逻辑型, , 


.子程序 连接, 逻辑型, , 连接到一个指定的数据库，返回是否连接成功
.参数 参数_数据库文件, 文本型, 可空, 如果为空，表示创建一个内存数据库
.参数 参数_数据库密码, 文本型, 可空, 
.参数 参数_是否允许创建, 逻辑型, 可空, 在指定的数据库文件不存在的情况下，是否允许创建数据库(默认为假)，如果为假则直接返回，否则返回是否创建并连接成功



.子程序 关闭, 空白型, , 


.子程序 重置密码, 逻辑型, , 
.参数 参数_新密码文本, 文本型, 可空, 



.子程序 最后错误, 文本型, , 


.子程序 取错误代码, 整数型, , 


.子程序 引擎版本, 文本型, , 


.子程序 设超时时间, 逻辑型, , 设置数据库被锁定时的最大等待时间，如果数据库超过最大等待时间后还没有被解锁，则中止尝试执行当前操作
.参数 参数_超时时间, 整数型, , 单位：毫秒



.子程序 执行SQL, 逻辑型, , 成功返回真，失败返回假。
.参数 参数_SQL语句, 文本型, , 



.子程序 创建表, 逻辑型, , 
.参数 参数_数据表名, 文本型, , 
.参数 参数_字段信息, 类型_SQLite3字段信息, 数组, 



.子程序 删除表, 逻辑型, , 
.参数 参数_数据表名, 文本型, , 



.子程序 清空表, 逻辑型, , 
.参数 参数_数据表名, 文本型, , 



.子程序 重命名表, 逻辑型, , 
.参数 参数_原数据表名, 文本型, , 
.参数 参数_新数据表名, 文本型, , 



.子程序 是否存在表, 逻辑型, , 
.参数 参数_数据表名, 文本型, , 



.子程序 添加字段, 逻辑型, , 添加一个新的字段到指定数据表，如果数据表中已存数据，则添加的字段属性不能为“非空”，返回是否添加成功
.参数 参数_数据表名, 文本型, , 
.参数 参数_字段信息, 类型_SQLite3字段信息, , 



.子程序 创建索引, 逻辑型, , 
.参数 参数_数据表名, 文本型, , 
.参数 参数_字段名, 文本型, , 多个字段用“,”分开。如：“Column1 ACS,Column2 DESC”
.参数 参数_索引名, 文本型, , 



.子程序 删除索引, 逻辑型, , 
.参数 参数_索引名, 文本型, , 



.子程序 创建视图, 逻辑型, , 
.参数 参数_视图名, 文本型, , 
.参数 参数_查询语句, 文本型, , select 语句
.参数 参数_是否临时视图, 逻辑型, 可空, 默认为假。



.子程序 删除视图, 逻辑型, , 
.参数 参数_视图名, 文本型, , 



.子程序 创建触发器, 逻辑型, , 
.参数 参数_数据表名, 文本型, , 
.参数 参数_触发器名, 文本型, , 
.参数 参数_执行语句, 文本型, , 但事件成立时，所触发的SQL语句。注意：必须以“;”号结尾
.参数 参数_触发条件, 整数型, , “S3触发条件_”开头常量。
.参数 参数_字段名, 文本型, 可空, 但“参数_触发条件”=“S3触发条件_字段更新”时，指定字段名，多个字段用“,”分开
.参数 参数_发生时间, 整数型, 可空, “S3触发时间_”开头常量。默认为“S3触发时间_普通模式”
.参数 参数_是否临时触发器, 逻辑型, 可空, 默认为假。



.子程序 删除触发器, 逻辑型, , 
.参数 参数_触发器名, 文本型, , 



.子程序 取表名列表, 文本型, , 获取当前已连接数据库的所有表名，如果连接失败，则返回空
.参数 参数_所有类型, 逻辑型, 可空, 本参数如为空，则默认取出类型为“TABLE”类型的数据表且不包含系统表



.子程序 取表定义, 文本型, , 返回指定数据表创建时的SQL语句
.参数 参数_数据表名, 文本型, , 



.子程序 取索引定义, 文本型, , 返回指定索引创建时的SQL语句
.参数 参数_数据表名, 文本型, , 
.参数 参数_索引名, 文本型, , 



.子程序 取视图定义, 文本型, , 返回指定视图创建时的SQL语句
.参数 参数_视图名, 文本型, , 



.子程序 取触发器定义, 文本型, , 返回指定触发器创建时的SQL语句
.参数 参数_数据表名, 文本型, , 
.参数 参数_触发器名, 文本型, , 



.子程序 开始事务, 逻辑型, , 开始一个新的事务


.子程序 保存事务, 逻辑型, , 保存任何更改并结束当前事务，返回一个逻辑值，如果保存事务成功返回真，否则返回假


.子程序 回滚事务, 逻辑型, , 取消当前事务中所作的任何更改并结束事务，返回一个逻辑值，如果操作成功返回真，否则返回假


.子程序 中断操作, 逻辑型, , 中断一切未完成的操作，如果开始一个事务，将自动回滚事务


.子程序 压缩数据库, 逻辑型, , 收缩数据所占用的磁盘空间。经过大批量记录增删之后，数据库文件可能会变的较大，调用此方法可释放一部分缓冲区域，以减少文件尺寸


.子程序 影响行数, 整数型, , 返回上一次insert、update、delete等操作的行数


.子程序 附加数据库, 逻辑型, , 附加一个数据库到当前连接，使之可以同时操作多个数据库
.参数 参数_文件名, 文本型, , 数据库的文件名。
.参数 参数_数据库名, 文本型, , 以后可以通过这个数据库名，访问附加的数据库。如：“数据库名.表名”



.子程序 拆分数据库, 逻辑型, , 拆分一个之前使用“对象.附加数据库()”附加的数据库连接。此方法不能用于事务中
.参数 参数_数据库名, 文本型, , 



.类模块 SQLite3记录集类, , , 

.子程序 置连接, 逻辑型, , 
.参数 参数_SQLite3数据库连接类, SQLite3数据库连接类, , 



.子程序 取连接, SQLite3数据库连接类, , 


.子程序 置句柄, 逻辑型, , 
.参数 参数_SQLite3数据库句柄, 整数型, , 



.子程序 打开, 逻辑型, , 无论是否成功且任何SQL语句都需要关闭记录集
.参数 参数_命令文本, 文本型, , SQL语句中的第1个“?”号对应“参数_附加数据1”的数据
.参数 参数_命令类型, 整数型, 可空, 1、SQL语句(默认) 2、数据表名 建议使用以“数据库”开头的常量
.参数 参数_附加数据1, 字节集, 可空, 
.参数 参数_附加数据2, 字节集, 可空, 
.参数 参数_附加数据3, 字节集, 可空, 



.子程序 打开并排序, 逻辑型, , 打开数据表，并且以指定条件排序返回一个逻辑型值，如果排序成功返回真，否则返回假
.参数 参数_数据表名, 文本型, , 本参数提供数据库表的名称
.参数 参数_排序条件, 文本型, , 本参数指定排序条件，ASC为升序，DESC为降序例如让学生姓名字段按照升序排，成绩字段按照降序排，那排序条件可以为 "学生姓名 ASC,成绩 DESC"



.子程序 打开并过滤, 逻辑型, , 用指定过滤条件打开一个表
.参数 参数_数据表名, 文本型, , 数据库表名
.参数 参数_过滤条件, 文本型, , 过滤的条件，例如："文本字段 = 'abc' and 整数字段 > 1"



.子程序 关闭, 空白型, , 关闭当前记录集


.子程序 影响行数, 整数型, , 返回上一次insert、update、delete等操作的行数


.子程序 记录数量, 整数型, , 获取Select操作后，查询得到的记录数量，其它情况下将返回-1


.子程序 是否已打开, 逻辑型, , 


.子程序 首记录前, 逻辑型, , 如果当前记录指针已在首记录的前面，返回真，否则返回假


.子程序 尾记录后, 逻辑型, , 如果当前记录指针已在尾记录的前面，返回真，否则返回假


.子程序 到首记录, 逻辑型, , 移动到表的第一条记录，执行成功返回真，否则返回假


.子程序 到尾记录, 逻辑型, , 移动到表的最后一条记录，执行成功返回真，否则返回假


.子程序 移到, 逻辑型, , 改变当前记录指针到指定的记录号，记录号位置从0开始；成功返回真，失败返回假
.参数 参数_目标行号, 整数型, , 



.子程序 到上一行, 逻辑型, , 移动到上一条记录，执行成功返回真，否则返回假


.子程序 到下一行, 逻辑型, , 移动到下一条记录，执行成功返回真，否则返回假


.子程序 当前位置, 整数型, , 当前记录在记录集中的位置，记录指针从0开始；-1 首记录前、-2 尾记录后


.子程序 字段数量, 整数型, , 取得字段的数量


.子程序 取字段名称, 文本型, , 
.参数 参数_字段序号, 整数型, , 字段序号从0开始



.子程序 取字段类型, 文本型, , 
.参数 参数_字段序号, 整数型, , 字段序号从0开始



.子程序 取字段序号, 整数型, , 成功返回字段序号，序号值从0开始，失败返回-1
.参数 参数_字段名称, 文本型, , 



.子程序 读文本, 逻辑型, , 
.参数 参数_字段名称, 文本型, , 
.参数 参数_文本变量, 文本型, 参考, 



.子程序 读整数, 逻辑型, , 
.参数 参数_字段名称, 文本型, , 
.参数 参数_整数变量, 整数型, 参考, 



.子程序 读长整数, 逻辑型, , 
.参数 参数_字段名称, 文本型, , 
.参数 参数_长整数变量, 长整数型, 参考, 



.子程序 读单精度, 逻辑型, , 
.参数 参数_字段名称, 文本型, , 
.参数 参数_单精度变量, 小数型, 参考, 



.子程序 读双精度, 逻辑型, , 
.参数 参数_字段名称, 文本型, , 
.参数 参数_双精度变量, 双精度小数型, 参考, 



.子程序 读字节集, 逻辑型, , 
.参数 参数_字段名称, 文本型, , 
.参数 参数_字节集变量, 字节集, 参考, 



.子程序 读逻辑值, 逻辑型, , 
.参数 参数_字段名称, 文本型, , 
.参数 参数_逻辑变量, 逻辑型, 参考, 



.子程序 读日期时间, 逻辑型, , 
.参数 参数_字段名称, 文本型, , 
.参数 参数_日期时间, 日期时间型, 参考, 



.子程序 替换, 逻辑型, , 将指定字段中的文本替换为新的文本(通配符的使用请参考相关SQL语言手册)，例如：将“ABCDEFG”中的“ABC”替换为“123”，返回是否替换成功
.参数 参数_表名, 文本型, , 
.参数 参数_字段名, 文本型, , 
.参数 参数_欲被替换的文本, 文本型, , 如果欲被替换的文本是“%”、“_”、“[”特殊字符，则需要使用“[ ]”将它们括起来，如“[%]”表示实际需要替换的字符是“%”
.参数 参数_用作替换的文本, 文本型, , 
.参数 参数_替换条件, 文本型, 可空, 示例：字段编号=1，如果本参数为空，默认替换指定数据表字段中的所有能被替换的文本



.子程序 查询编号, 逻辑型, , 查找数据库中指定条件的记录编号(ID)，一般多用于INSERT后取出该记录编号，返回符合条件的记录是否存在，以便执行其它操作
.参数 参数_表名, 文本型, , 
.参数 参数_查询条件, 文本型, , 过滤的条件，例如："文本字段 = 'abc' and 整数字段 > 1"
.参数 参数_记录编号, 整数型, 参考, 本参数只能传递变量，如查询成功将返回符合记录的编号(ID)
.参数 参数_字段序号, 整数型, 可空, 编号(ID)字段的字段序号，如果为空，将默认为取第0个字段值



.子程序 是否已存在, 逻辑型, , 本方法用于查询指定条件的记录是否存在，一般多用于添加或修改记录前的查询操作，返回符合条件的记录是否存在，以便执行其它操作
.参数 参数_表名, 文本型, , 
.参数 参数_查询条件, 文本型, , 过滤的条件，例如："文本字段 = 'abc' and 整数字段 > 1"



.子程序 更新分页控件, 空白型, , 更新各个分页控件的状态，目前仅作为辅助命令用与配合分页
.参数 参数_当前页码, 整数型, , 
.参数 参数_分页总数, 整数型, , 
.参数 参数_分页控件, 类型_分页控件, , 



.程序集 __HIDDEN_TEMP_MOD__, , , 

.子程序 限制窗口尺寸, 空白型, , 
.参数 窗口句柄, 整数型, , 
.参数 最小宽度, 整数型, 可空, 
.参数 最小高度, 整数型, 可空, 
.参数 最大宽度, 整数型, 可空, 
.参数 最大高度, 整数型, 可空, 




 ' 不属于任何一个程序集、类模块的函数：
