 ' 文件类型：Windows窗口程序

 ' 程序名称：征途辅助
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.2
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 194
    高度 = 553
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 1
    底图方式 = 1
    底色 = 16711935 '  0xFF00FF
    最大化按钮 = 假
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 真
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 真
    底图 =  ' 空
    图标 =  ' 已保存到：D:\易语言学习\Data\电波征途辅助.e\_启动窗口_图标.ico
    背景音乐 =  ' 空
    标题 = “电波征途辅助”
    帮助文件名 = “”

窗口 关于窗口
    左边 = 50
    顶边 = 50
    宽度 = 461
    高度 = 224
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 0
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 已保存到：D:\易语言学习\Data\电波征途辅助.e\关于窗口_底图
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “关于电波征途辅助”
    帮助文件名 = “”



.常量 SE_BACKUP_NAME, "“SeBackupPrivilege”", 公开, 
.常量 SE_RESTORE_NAME, "“SeRestorePrivilege”", 公开, 
.常量 SE_SHUTDOWN_NAME, "“SeShutdownPrivilege”", 公开, 关机
.常量 PROCESS_QUERY_INFORMATION, "1024", , 
.常量 PROCESS_VM_READ, "16", , 
.常量 MEM_PRIVATE, "131072", , 
.常量 PAGE_READWRITE, "4", , 
.常量 TH32CS_SNAPHEAPLIST, "1", , 
.常量 TH32CS_SNAPPROCESS, "2", , 
.常量 TH32CS_SNAPTHREAD, "4", , 
.常量 TH32CS_SNAPMODULE, "8", , 
.常量 TH32CS_SNAPALL, "15", , 
.常量 TH32CS_INHERIT, "-2147483648", , 
.常量 SE_DEBUG_NAME, "“SeDebugPrivilege”", 公开, 调试
.图片 答题特征, " ' 已保存到：D:\易语言学习\Data\电波征途辅助.e\答题特征", , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 4 系统核心支持库
 ' eAPI F7FC1AE45C5C4758AF03EF19F18A395D 1 1 应用接口支持库
 ' xplib 7F54B9CE8887428dBA9CEEB94CEF4C72 1 6 XP风格界面库
 ' eDB 46E94341933A462383A4DE26B146322C 1 3 数据库操作支持库
 ' iext 27bb20fdd3e145e4bee3db39ddd6e64c 1 2 扩展界面支持库一




数据类型 LuID, , 
    .成员 lowpart, 整数型, , , 
    .成员 highpart, 整数型, , , 

数据类型 PROCESSENTRY32, , 
    .成员 dwSize, 整数型, , , 
    .成员 cntUsage, 整数型, , , 
    .成员 th32ProcessID, 整数型, , , 
    .成员 th32DefaultHeapID, 整数型, , , 
    .成员 th32ModuleID, 整数型, , , 
    .成员 cntThreads, 整数型, , , 
    .成员 th32ParentProcessID, 整数型, , , 
    .成员 pcPriClassBase, 整数型, , , 
    .成员 dwFlags, 整数型, , , 
    .成员 szExeFile, 字节型, , "256", 

数据类型 MEMORY_BASIC_INFORMATION, , 
    .成员 BaseAddress, 整数型, , , 
    .成员 AllocationBase, 整数型, , , 应用程序可用的最小地址
    .成员 AllocattionProtect, 整数型, , , 应用程序可用的最大地址
    .成员 RegionSize, 整数型, , , 
    .成员 State, 整数型, , , 
    .成员 Protect, 整数型, , , 
    .成员 Type, 整数型, , , 

数据类型 TOKEN_PRIVILEGES, , From:AdjustTokenPrivileges
    .成员 PrivilegeCount, 整数型, , , 
    .成员 lowpart, 整数型, , , 
    .成员 highpart, 整数型, , , 
    .成员 Attributes, 整数型, , , 

数据类型 rect, , 
    .成员 l, 整数型, , , 
    .成员 t, 整数型, , , 
    .成员 r, 整数型, , , 
    .成员 b, 整数型, , , 


.DLL命令 取扫描码, 整数型, "user32.dll", "MapVirtualKeyA", , 
    .参数 虚拟码, 整数型, , 定义一个键的扫描码或虚拟键码。该值如何解释依赖于uMapType参数的值。
    .参数 a, 整数型, ,    0：代表uCodee是一虚拟键码且被翻译为一扫描码。若一虚拟键码不区分左右，则返回左键的扫描码。若未进行翻译，则函数返回O。1：代表uCode是一扫描码且被翻译为一虚拟键码，且此虚拟键码不区分左右。若未进行翻译，则函数返回0。2：代表uCode为一虚拟键码且被翻译为一未被移位的字符值存放于返回值的低序字中。死键（发音符号）则通过设置返回值的最高位来表示。若未进行翻译，则函数返回0。3：代表uCode为一扫描码且被翻译为区分左右键的一虚拟键码。若未进行翻译，则函数返回0。

.DLL命令 取活动窗口, 整数型, "", "GetForegroundWindow", , 

.DLL命令 前台窗口, 整数型, "user32", "SetForegroundWindow", , 将窗口设为系统的前台窗口。这个函数可用于改变用户目前正在操作的应用程序  非零表示成功，零表示失败。会设置GetLastError
    .参数 窗口句柄, 整数型, , 

.DLL命令 api_GetCurrentProcess, 整数型, "kernel32.dll", "GetCurrentProcess", , 获取线程

.DLL命令 api_OpenProcessToken, 整数型, "advapi32.dll", "OpenProcessToken", , NT/XP关机操作
    .参数 ProcessHandle, 整数型, , 
    .参数 DesiredAccess, 整数型, , 
    .参数 TokenHandle, 整数型, 传址, 

.DLL命令 api_LookupPrivilegeValue, 逻辑型, "advapi32.dll", "LookupPrivilegeValueA", , 在NT/XP恢复权限
    .参数 lpSystemName, 文本型, , 
    .参数 lpName, 文本型, , 
    .参数 lpLuid, LuID, 传址, 

.DLL命令 api_AdjustTokenPrivileges, 逻辑型, "advapi32.dll", "AdjustTokenPrivileges", , 在NT/XP中拥有最高权限
    .参数 TokenHandle, 整数型, , 
    .参数 DisableAllPrivileges, 整数型, , 
    .参数 NewState, TOKEN_PRIVILEGES, 传址, 
    .参数 BufferLength, 整数型, , 
    .参数 PreviousState, TOKEN_PRIVILEGES, 传址, 
    .参数 ReturnLength, 整数型, 传址, 

.DLL命令 枚举窗口, 逻辑型, "", "EnumWindows", , 
    .参数 枚举过程, 子程序指针, , 
    .参数 参数, 整数型, , 

.DLL命令 整数_ReadProcessMemory, 整数型, "kernel32.dll", "ReadProcessMemory", , 
    .参数 hProcess, 整数型, , 
    .参数 lpBaseAddress, 整数型, , 内存地址
    .参数 lpBuffer, 整数型, 传址, 数据指针
    .参数 nSize, 整数型, , 
    .参数 lpNumberOfBytesWritten, 整数型, , 

.DLL命令 找标题, 整数型, "", "SendMessageA", , 
    .参数 hwnd, 整数型, , 
    .参数 wMsg, 整数型, , 
    .参数 wParam, 整数型, , 
    .参数 lParam, 文本型, 传址, any

.DLL命令 找上级窗口, 整数型, "user32.dll", "GetParent", , 
    .参数 hwnd, 整数型, , 

.DLL命令 查找窗口, 整数型, "user32.dll", "FindWindowA", , 
    .参数 pClassName, 空白型, , 
    .参数 lpWindowName, 文本型, , 

.DLL命令 取进程ID, 整数型, "user32.dll", "GetWindowThreadProcessId", , 
    .参数 hwnd, 整数型, , 
    .参数 lpdwProcessId, 整数型, 传址, 

.DLL命令 OpenProcess, 整数型, "", "", , 
    .参数 dwDesiredAccess, 整数型, , 
    .参数 bInheritHandle, 整数型, , 
    .参数 dwProcessId, 整数型, , 

.DLL命令 VirtualQueryEx, 整数型, "", "", , 
    .参数 hProcess, 整数型, , 
    .参数 lpAddress, 整数型, , 
    .参数 info, MEMORY_BASIC_INFORMATION, 传址, 
    .参数 dwLength, 整数型, , 
    .参数 匿名参数_3574, 空白型, , 

.DLL命令 字节集_ReadProcessMemory, 整数型, "kernel32.dll", "ReadProcessMemory", , 
    .参数 hProcess, 整数型, , 
    .参数 lpBaseAddress, 整数型, , 
    .参数 lpBuffer, 字节集, 传址, 
    .参数 nSize, 整数型, , 
    .参数 lpNumberOfBytesWritten, 整数型, , 

.DLL命令 CloseHandle, 整数型, "", "", , 
    .参数 hObject, 整数型, , 

.DLL命令 按键, 空白型, "", "keybd_event", , 
    .参数 虚拟键代码, 整数型, , 
    .参数 扫描码, 整数型, , 
    .参数 设置标识, 整数型, , 
    .参数 扩展信息, 整数型, , 

.DLL命令 取窗口坐标, 整数型, "user32.dll", "GetWindowRect", , 
    .参数 hwnd, 整数型, , 
    .参数 rect, rect, , 

.DLL命令 载入外窗口, 整数型, "", "SetParent", , 
    .参数 hWndChild, 整数型, , 
    .参数 hWndNewParent, 整数型, , 

.DLL命令 移动主窗口, 整数型, "user32.dll", "MoveWindow", , 
    .参数 窗口句柄, 整数型, , hwnd，欲移动窗口的句柄
    .参数 左侧位置, 整数型, , x，窗口新的左侧位置
    .参数 顶部位置, 整数型, , y，窗口新的顶部位置
    .参数 新宽度, 整数型, , nWidth，窗口的新宽度
    .参数 高宽度, 整数型, , nHeight，窗口的高宽度
    .参数 是否重画, 整数型, , bRepaint，如窗口此时应重画，则设为TRUE（非零）

.DLL命令 发送消息_, 整数型, "user32", "SendMessageA", , 
    .参数 窗口句柄, 整数型, , 
    .参数 信息值, 整数型, , 
    .参数 参数一, 整数型, , 
    .参数 参数二, 整数型, , 

.DLL命令 投送消息_, 整数型, "user32", "PostMessageA", , 
    .参数 窗口句柄, 整数型, , 
    .参数 信息值, 整数型, , 
    .参数 参数一, 整数型, , 
    .参数 参数二, 整数型, , 

.DLL命令 DLL命令1, 空白型, "", "", , 

.窗口程序集 窗口程序集1, , , 

.程序集变量 人物生命, 整数型, , , 
.程序集变量 内存值, 字节集, , , 
.程序集变量 进程id, 整数型, , , 
.程序集变量 人物地址, 整数型, , , 
.程序集变量 红地址, 整数型, , , 
.程序集变量 蓝地址, 整数型, , , 
.程序集变量 坐标X, 整数型, , , 
.程序集变量 经验地址, 整数型, , , 
.程序集变量 句柄, 整数型, , , 
.程序集变量 顶层, 逻辑型, , , 
.程序集变量 答题地址, 整数型, , , 
.程序集变量 题目, 字节集, , , 
.程序集变量 关联ID, 整数型, , , 
.程序集变量 获取文本, 文本型, , , 
.程序集变量 操作句柄, 整数型, , , 
.程序集变量 主窗口句柄, 整数型, , , 
.程序集变量 进程表, 未知类型0x20009, , "0", 
.程序集变量 聊天内容, 文本型, , , 
.程序集变量 聊天内容组, 文本型, , "0", 
.程序集变量 聊天变量, 整数型, , , 
.程序集变量 分类现行项, 整数型, , , 
.程序集变量 聊天计数, 整数型, , , 
.程序集变量 人特内, 文本型, , , 
.程序集变量 地图地址, 整数型, , , 
.程序集变量 城地址, 整数型, , , 
.子程序 __启动窗口_创建完毕, 空白型, , 
.局部变量 名称, 文本型, , "0", 
.局部变量 b, 整数型, , , 
.局部变量 总偏移, 文本型, , , 

.如果 (_提升进程权限 ())
    赋值 (.标题, “提升进程成功”)
.否则
    赋值 (.标题, “提升进程失败”)
.如果结束
未知支持库函数_0 (1)
赋值 (_启动窗口., 805)
赋值 (_启动窗口., 0)
.如果 (相加 (取运行目录 (), “\zhengtu.mdb”).未知支持库函数_1 (“&e%§№ ◎▲すぬйω”))
    #.未知支持库函数_6 ()
    .未知支持库函数_12 ()
.否则
    鸣叫 ()
    信息框 (“打开数据库失败！”, 0, )
.如果结束

“开始搜索游戏.....”.加入项目 ()
 ' 名称 ＝ 分割文本 (读配置项 (取运行目录 () ＋ “\fuzhu.ini”, “人物”, “名称”, “”), “-”, )
 ' .计次循环首 (取数组下标 (名称, ), b)
     ' 组合框2.加入项目 (名称 [b], )
 ' .计次循环尾 ()
.如果 (等于 (“配置”.未知支持库函数_14 (#), 真))
    .如果真 (“项目='偏量'”.未知支持库函数_45 (#))
        “地址”.未知支持库函数_26 (总偏移)
        赋值 (名称, 分割文本 (总偏移, “-”, ))
        .如果真 (等于 (取数组成员数 (名称), 4))
            赋值 (.内容, 名称 [1])
            赋值 (.内容, 名称 [2])
            赋值 (.内容, 名称 [3])
            赋值 (.内容, 名称 [4])
        .如果真结束
        
    .如果真结束
    .如果真 (“项目='人特'”.未知支持库函数_45 (#))
        “地址”.未知支持库函数_26 (人特内)
        输出调试文本 (人特内)
    .如果真结束
    未知支持库函数_16 ()
.否则
    赋值 (.标题, “读取偏移量失败”)
.如果结束

 ' 名称 ＝ 分割文本 (读配置项 (取运行目录 () ＋ “\fuzhu.ini”, “地址”, “数量”, “”), “-”, )
 ' .如果真 (等于 (取数组成员数 (名称), 4))
     ' 生命偏编辑框2.内容 ＝ 名称 [1]
     ' 魔法偏编辑框4.内容 ＝ 名称 [2]
     ' 坐标偏编辑框5.内容 ＝ 名称 [3]
     ' 经验偏编辑框6.内容 ＝ 名称 [4]
    
.如果真结束

赋值 (进程表, 未知支持库函数_10 ())
.计次循环首 (取数组成员数 (进程表), b)
    相加 (进程表 [b], , “[”, 到文本 (进程表 [b], ), “]”).加入项目 ()
.计次循环尾 ()
 ' _进程组合框1_列表项被选择 ()

.子程序 读取配置, 空白型, , 
.局部变量 BZ, 文本型, , , 
.局部变量 人配, 文本型, , "0", 

.如果真 (“配置”.未知支持库函数_14 (#))
    .如果真 (相加 (“项目='”, .标题, “'”).未知支持库函数_45 (#))
        “地址”.未知支持库函数_26 (BZ)
        赋值 (人配, 分割文本 (BZ, “-”, ))
        .如果真 (等于 (取数组成员数 (人配), 16))
            赋值 (.内容, 人配 [1])
            赋值 (.现行选中项, 到数值 (人配 [2]))
            赋值 (.内容, 人配 [3])
            赋值 (.现行选中项, 到数值 (人配 [4]))
            赋值 (.内容, 人配 [5])
            赋值 (.现行选中项, 到数值 (人配 [6]))
            赋值 (.内容, 人配 [7])
            赋值 (.现行选中项, 到数值 (人配 [8]))
            赋值 (.内容, 人配 [9])
            赋值 (.现行选中项, 到数值 (人配 [10]))
            赋值 (.内容, 人配 [11])
            赋值 (.现行选中项, 到数值 (人配 [12]))
            赋值 (.内容, 人配 [13])
            赋值 (.现行选中项, 到数值 (人配 [14]))
            赋值 (.内容, 人配 [15])
            赋值 (.现行选中项, 到数值 (人配 [16]))
        .如果真结束
        未知支持库函数_16 ()
    .如果真结束
    
.如果真结束

 ' BZ ＝ 分组框1.标题
 ' 魔法1编辑框.内容 ＝ 读配置项 (取运行目录 () ＋ “\fuzhu.ini”, BZ, “自动1”, )
 ' 魔法1组合框.现行选中项 ＝ 到数值 (读配置项 (取运行目录 () ＋ “\fuzhu.ini”, BZ, “自动-1”, ))
 ' 魔法2编辑框.内容 ＝ 读配置项 (取运行目录 () ＋ “\fuzhu.ini”, BZ, “自动2”, )
 ' 魔法2组合框.现行选中项 ＝ 到数值 (读配置项 (取运行目录 () ＋ “\fuzhu.ini”, BZ, “自动-2”, ))
 ' 魔法3编辑框.内容 ＝ 读配置项 (取运行目录 () ＋ “\fuzhu.ini”, BZ, “自动3”, )
 ' 魔法3组合框.现行选中项 ＝ 到数值 (读配置项 (取运行目录 () ＋ “\fuzhu.ini”, BZ, “自动-3”, ))
 ' 魔法4编辑框.内容 ＝ 读配置项 (取运行目录 () ＋ “\fuzhu.ini”, BZ, “自动4”, )
 ' 魔法4组合框.现行选中项 ＝ 到数值 (读配置项 (取运行目录 () ＋ “\fuzhu.ini”, BZ, “自动-4”, ))
 ' 加血编辑框1.内容 ＝ 读配置项 (取运行目录 () ＋ “\fuzhu.ini”, BZ, “加血”, )
 ' 加血组合框.现行选中项 ＝ 到数值 (读配置项 (取运行目录 () ＋ “\fuzhu.ini”, BZ, “加血-”, ))
 ' 加血2编辑框.内容 ＝ 读配置项 (取运行目录 () ＋ “\fuzhu.ini”, BZ, “加血2”, )
 ' 加血2组合框.现行选中项 ＝ 到数值 (读配置项 (取运行目录 () ＋ “\fuzhu.ini”, BZ, “加血2-”, ))
 ' 加蓝编辑框1.内容 ＝ 读配置项 (取运行目录 () ＋ “\fuzhu.ini”, BZ, “加蓝”, )
 ' 加蓝组合框.现行选中项 ＝ 到数值 (读配置项 (取运行目录 () ＋ “\fuzhu.ini”, BZ, “加蓝-”, ))
 ' 加蓝2编辑框.内容 ＝ 读配置项 (取运行目录 () ＋ “\fuzhu.ini”, BZ, “加蓝2”, )
 ' 加蓝2组合框.现行选中项 ＝ 到数值 (读配置项 (取运行目录 () ＋ “\fuzhu.ini”, BZ, “加蓝2-”, ))


.子程序 _取进程主窗口, 空白型, , 
枚举窗口 (&枚举窗口过程, 1)


.子程序 枚举窗口过程, 逻辑型, , 
.参数 窗口句柄, 整数型, , 
.参数 参数, 整数型, , 

.局部变量 进程标识2, 整数型, , , 
.局部变量 id, 整数型, , , 

赋值 (获取文本, 取空白文本 (255))
找标题 (窗口句柄, 13, 256, 获取文本)
赋值 (id, 查找窗口 (0, 获取文本))
取进程ID (id, 进程标识2)
 ' 输出调试文本 (到文本 (进程id) ＋ “|” ＋ 到文本 (进程标识2))
.如果 (等于 (进程id, 进程标识2))
    .如果 (等于 (找上级窗口 (窗口句柄), 0))
        赋值 (主窗口句柄, 窗口句柄)
        赋值 (.标题, 获取文本)
         ' 输出调试文本 (获取文本 ＋ “||||” ＋ 到文本 (取文本长度 (获取文本)))
        
         ' 标签4.标题 ＝ “正在运行进程名:” ＋ 进程组合框.取项目文本 (进程组合框.现行选中项) ＋ #换行符 ＋ 获取文本
        
         ' 输出调试文本 (获取文本 ＋ “||” ＋ 到文本 (窗口句柄) ＋ “||” ＋ 到文本 (关联ID) ＋ “|||” ＋ 到文本 (进程标识2))
        返回 (假)
    .否则
         ' 输出调试文本 (获取文本 ＋ “||” ＋ 到文本 (窗口句柄) ＋ “||” ＋ 到文本 (关联ID) ＋ “|||” ＋ 到文本 (进程标识2))
        返回 (真)
    .如果结束
    
.否则
    返回 (真)
.如果结束


.子程序 __启动窗口_尺寸被改变, 空白型, , 
.局部变量 b, rect, , , 
.局部变量 新高, 整数型, , , 

 ' .如果真 (不等于 (主窗口句柄, 0))
     ' 取窗口坐标 (主窗口句柄, b)
     ' .如果 (大于 (_启动窗口., .高度))
         ' 新高 ＝ _启动窗口.高度
    .否则
         ' 新高 ＝ b.b － b.t
    .如果结束
     ' ' _启动窗口.移动 (0, 0, b.r － b.l ＋ 选择夹1.宽度, 新高)
     ' 移动主窗口 (主窗口句柄, 0, -22, 取用户区宽度 () － 选择夹1.宽度, -1, 1)
     ' 选择夹1.移动 (取用户区宽度 () － 选择夹1.宽度, , , )
.如果真结束



.子程序 _进程组合框1_列表项被选择, 空白型, , 
.局部变量 I, 整数型, , , 
.局部变量 b, rect, , , 
.局部变量 新高1, 整数型, , , 
.局部变量 当选进程, 文本型, , "2", 

.如果真 (不等于 (操作句柄, 0))
    CloseHandle (操作句柄)
.如果真结束
赋值 (当选进程, 分割文本 (.取项目文本 (.现行选中项), “[”, ))
.计次循环首 (取数组成员数 (进程表), I)
    .如果真 (并且 (等于 (进程表 [I], , 当选进程 [1]), 等于 (到文本 (进程表 [I], ), 取文本左边 (当选进程 [2], 相减 (取文本长度 (当选进程 [2]), 1)))))
        赋值 (进程id, 进程表 [I], )
        赋值 (操作句柄, OpenProcess (相加 (#PROCESS_VM_READ, #PROCESS_QUERY_INFORMATION), 0, 进程id))
        .如果真 (等于 (操作句柄, 0))
            信息框 (“不能打开进程 .”, #信息图标, “提示”)
            返回 ()
        .如果真结束
        赋值 (.标题, 到文本 (进程id))
        赋值 (.标题, 到文本 (操作句柄))
    .如果真结束
    
.计次循环尾 ()
_取进程主窗口 ()

 ' .如果真 (不等于 (主窗口句柄, 0))
     ' 载入外窗口 (主窗口句柄, 取窗口句柄 ())  ' 将新程序置为本程序窗口内
     ' 取窗口坐标 (主窗口句柄, b)
    
     ' .如果 (大于 (相减 (b.b, b.t), _启动窗口.))
         ' 新高1 ＝ b.b － b.t ＋ 25
    .否则
         ' 新高1 ＝ _启动窗口.高度 ＋ 25
    .如果结束
     ' _启动窗口.移动 (0, 0, b.r － b.l ＋ 选择夹1.宽度, 新高1)
     ' 移动主窗口 (主窗口句柄, 0, -22, b.r － b.l, b.b － b.t, 1)
     ' 选择夹1.移动 (b.r － b.l, , , )
.如果真结束


.子程序 _组合框2_列表项被选择, 空白型, , 
.如果 (不等于 (.取项目文本 (.现行选中项), “”))
    赋值 (.可视, 真)
    赋值 (.标题, “正在搜索请稍候…………”)
    刷新显示 ()
    赋值 (.时钟周期, 0)
    赋值 (.时钟周期, 0)
    赋值 (.标题, “0/0”)
    赋值 (.标题, “0/0”)
    赋值 (.标题, “0/0”)
    赋值 (.标题, “0/0”)
    
    .如果真 (搜索人物 ())
        读取配置 ()
    .如果真结束
    
.否则
    信息框 (相加 (“游戏没有运行啊！！！！！！！！”, #换行符, “你的脑子有毛病啊！”, #换行符, “哈哈哈！！嘿嘿！！”), 相加 (0, 48), “傻了”)
    
.如果结束


.子程序 搜索人物, 逻辑型, , 
.局部变量 地址, 整数型, , "0", 
.局部变量 内存地址, 整数型, , , 
.局部变量 读取结果, 整数型, , , 
.局部变量 内存块长度, 整数型, , , 
.局部变量 开始地址, 整数型, , , 
.局部变量 结束地址, 整数型, , , 
.局部变量 数据缓冲区, 字节集, , , 
.局部变量 QQ号码, 文本型, , , 
.局部变量 内存块信息, MEMORY_BASIC_INFORMATION, , , 
.局部变量 地址偏移, 整数型, , , 
.局部变量 其他地址, 整数型, , , 
.局部变量 进程快照, 整数型, , , 
.局部变量 进程信息, PROCESSENTRY32, , , 
.局部变量 进程ID内, 整数型, , , 
.局部变量 首字节, 字节集, , , 
.局部变量 长度, 整数型, , , 
.局部变量 a, 整数型, , , 
.局部变量 关键字, 字节集, , , 
.局部变量 进程名, 文本型, , , 
.局部变量 红, 整数型, , , 
.局部变量 红大, 整数型, , , 
.局部变量 蓝, 整数型, , , 
.局部变量 蓝大, 整数型, , , 
.局部变量 标1, 整数型, , , 
.局部变量 标2, 整数型, , , 
.局部变量 经, 整数型, , , 
.局部变量 经大, 整数型, , , 
.局部变量 变字节长度, 文本型, , "0", 

清除数组 (地址)
.如果 (不等于 (人特内, “”))
    赋值 (变字节长度, 分割文本 (人特内, “,”, ))
    赋值 (关键字, 取空白字节集 (取数组成员数 (变字节长度)))
    .计次循环首 (取数组成员数 (变字节长度), a)
        赋值 (关键字 [a], 到数值 (变字节长度 [a]))
    .计次循环尾 ()
    搜索内存 (进程id, 关键字, 地址)
    .如果真 (大于 (取数组成员数 (地址), 0))
        赋值 (人物地址, 相加 (地址 [1], 8))
        赋值 (内存值, 取空白字节集 (20))
        .如果真 (等于 (字节集_ReadProcessMemory (操作句柄, 人物地址, 内存值, 20, 0), 0))
            信息框 (“读取内存失败！”, 0, )
            赋值 (.可视, 假)
            返回 (假)
        .如果真结束
        到文本 (内存值).加入项目 ()
        赋值 (.现行选中项, 1)
        赋值 (.标题, 到文本 (人物地址))
        赋值 (红地址, 相加 (人物地址, 到数值 (.内容))) ' 60
        赋值 (蓝地址, 相加 (人物地址, 到数值 (.内容))) ' 2202
        赋值 (坐标X, 相加 (人物地址, 到数值 (.内容))) ' 40
        赋值 (经验地址, 相加 (人物地址, 到数值 (.内容))) ' 2250
        
        赋值 (地图地址, 相加 (人物地址, 到数值 (.内容), 8))
        赋值 (城地址, 19073012)
        
        赋值 (.时钟周期, 300)
        赋值 (.时钟周期, 1000)
        赋值 (.可视, 假)
        输出调试文本 (“OK”)
        返回 (真)
    .如果真结束
    
.否则
    .如果真 (等于 (.内容, “”))
        赋值 (.标题, “请输入角色名,再搜索....”)
        返回 (假)
    .如果真结束
    搜索内存 (进程id, 到字节集 (.内容), 地址)
    .计次循环首 (取数组下标 (地址, ), a)
        .如果 (并且 (大于 (到数值 (.标题), 0), 等于 (.可视, 真)))
            赋值 (人物地址, 到数值 (.标题))
        .否则
            赋值 (人物地址, 地址 [a])
        .如果结束
        赋值 (内存值, 取空白字节集 (20))
        .如果真 (等于 (字节集_ReadProcessMemory (操作句柄, 人物地址, 内存值, 20, 0), 0))
            信息框 (“读取内存失败！”, 0, )
            赋值 (.可视, 假)
            返回 (假)
        .如果真结束
        赋值 (.标题, 到文本 (内存值))
        赋值 (红地址, 相加 (人物地址, 到数值 (.内容))) ' 60
        赋值 (蓝地址, 相加 (人物地址, 到数值 (.内容))) ' 2202
        赋值 (坐标X, 相加 (人物地址, 到数值 (.内容))) ' 40
        赋值 (经验地址, 相加 (人物地址, 到数值 (.内容))) ' 2250
        整数_ReadProcessMemory (操作句柄, 红地址, 红, 4, 0)
        整数_ReadProcessMemory (操作句柄, 相加 (红地址, 4), 红大, 4, 0)
        .如果真 (并且 (大于或等于 (红, 1), 等于 (红大, 红)))
            赋值 (.标题, 到文本 (地址 [a]))
            整数_ReadProcessMemory (操作句柄, 蓝地址, 蓝, 4, 0)
            整数_ReadProcessMemory (操作句柄, 相加 (蓝地址, 4), 蓝大, 4, 0)
            .如果真 (并且 (大于或等于 (蓝, 1), 等于 (蓝大, 蓝)))
                赋值 (.标题, 到文本 (地址 [a]))
                整数_ReadProcessMemory (操作句柄, 坐标X, 标1, 4, 0)
                整数_ReadProcessMemory (操作句柄, 相加 (坐标X, 4), 标2, 4, 0)
                .如果真 (并且 (大于 (标1, 0), 大于 (标2, 0)))
                    赋值 (.标题, 到文本 (地址 [a]))
                    整数_ReadProcessMemory (操作句柄, 经验地址, 经, 4, 0)
                    整数_ReadProcessMemory (操作句柄, 相加 (经验地址, 8), 经大, 4, 0)
                    .如果真 (大于或等于 (经大, 10))
                        赋值 (.标题, 到文本 (地址 [a]))
                        
                        
                        赋值 (关键字, 读内存_字节集 (操作句柄, 相减 (地址 [a], 512), 512))
                        赋值 (QQ号码, “”)
                        .计次循环首 (取字节集长度 (关键字), a)
                            赋值 (QQ号码, 相加 (QQ号码, “,”, 到文本 (关键字 [a])))
                        .计次循环尾 ()
                        输出调试文本 (QQ号码)
                        
                        
                        赋值 (.时钟周期, 300)
                        赋值 (.时钟周期, 1000)
                        跳出循环 ()
                        
                    .如果真结束
                    
                .如果真结束
                
            .如果真结束
            
        .如果真结束
        
    .计次循环尾 ()
    
.如果结束

赋值 (.可视, 假)
返回 (真)

.子程序 _时钟1_周期事件, 空白型, , 
.局部变量 红, 整数型, , , 
.局部变量 蓝, 整数型, , , 
.局部变量 红大, 整数型, , , 
.局部变量 蓝大, 整数型, , , 
.局部变量 标1, 整数型, , , 
.局部变量 标2, 整数型, , , 
.局部变量 经, 整数型, , , 
.局部变量 经大, 整数型, , , 
.局部变量 地图1, 整数型, , , 
.局部变量 地图2, 整数型, , , 
.局部变量 国家城, 文本型, , , 
.局部变量 国家字, 字节集, , , 

赋值 (国家字, 取空白字节集 (20))
字节集_ReadProcessMemory (操作句柄, 城地址, 国家字, 20, 0)
整数_ReadProcessMemory (操作句柄, 红地址, 红, 4, 0)
整数_ReadProcessMemory (操作句柄, 相加 (红地址, 4), 红大, 4, 0)
整数_ReadProcessMemory (操作句柄, 蓝地址, 蓝, 4, 0)
整数_ReadProcessMemory (操作句柄, 相加 (蓝地址, 4), 蓝大, 4, 0)
整数_ReadProcessMemory (操作句柄, 坐标X, 标1, 4, 0)
整数_ReadProcessMemory (操作句柄, 相加 (坐标X, 4), 标2, 4, 0)
整数_ReadProcessMemory (操作句柄, 经验地址, 经, 4, 0)
整数_ReadProcessMemory (操作句柄, 相加 (经验地址, 8), 经大, 4, 0)
整数_ReadProcessMemory (操作句柄, 地图地址, 地图1, 4, 0)
整数_ReadProcessMemory (操作句柄, 相加 (地图地址, 4), 地图2, 4, 0)
赋值 (.标题, 相加 (到文本 (红), “/”, 到文本 (红大)))
赋值 (.标题, 相加 (到文本 (蓝), “/”, 到文本 (蓝大)))
赋值 (.标题, 相加 (到文本 (标1), “/”, 到文本 (标2)))
赋值 (.标题, 相加 (到文本 (经), “/”, 到文本 (经大)))
.如果真 (不等于 (到文本 (), .标题))
    赋值 (.标题, 到文本 (国家字))
    
.如果真结束
.如果真 (并且 (等于 (.选中, 真), 小于 (红, 到数值 (.内容)), 大于 (红, 1)))
    发送 (.取项目数值 (.现行选中项))
    
.如果真结束
.如果真 (并且 (等于 (.选中, 真), 小于 (红, 相乘 (红大, 0.01, 到数值 (.内容))), 大于 (红, 1)))
    发送 (.取项目数值 (.现行选中项))
    
.如果真结束
.如果真 (并且 (等于 (.选中, 真), 小于 (蓝, 到数值 (.内容)), 大于 (红, 1)))
    发送 (.取项目数值 (.现行选中项))
    
.如果真结束
.如果真 (并且 (等于 (.选中, 真), 小于 (蓝, 相乘 (蓝大, 0.01, 到数值 (.内容))), 大于 (红, 1)))
    发送 (.取项目数值 (.现行选中项))
    
.如果真结束

.如果真 (等于 (.选中, 真))
    按键 (192, 0, 0, 0)
    延时 (30)
    按键 (192, 0, 2, 0)
.如果真结束


.子程序 _选择框1_被单击, 空白型, , 
.如果 (等于 (.选中, 真))
    赋值 (_启动窗口., 真)
.否则
    赋值 (_启动窗口., 假)
    
.如果结束


.子程序 _时钟2_周期事件, 空白型, , 
.局部变量 m1, 整数型, 静态, , 
.局部变量 m2, 整数型, 静态, , 
.局部变量 m3, 整数型, 静态, , 
.局部变量 m4, 整数型, 静态, , 

.如果真 (等于 (.选中, 真))
    赋值 (m1, 相加 (m1, 1))
    赋值 (.标题, 到文本 (m1))
    .如果真 (大于或等于 (m1, 到数值 (.内容)))
        .如果 (等于 (.选中, 真))
            发送2 (.取项目数值 (.现行选中项))
        .否则
            发送 (.取项目数值 (.现行选中项))
        .如果结束
        赋值 (m1, 0)
    .如果真结束
    
.如果真结束
.如果真 (等于 (.选中, 真))
    赋值 (m2, 相加 (m2, 1))
    赋值 (.标题, 到文本 (m2))
    .如果真 (大于或等于 (m2, 到数值 (.内容)))
        .如果 (等于 (.选中, 真))
            发送2 (.取项目数值 (.现行选中项))
        .否则
            发送 (.取项目数值 (.现行选中项))
        .如果结束
        赋值 (m2, 0)
    .如果真结束
    
.如果真结束
.如果真 (等于 (.选中, 真))
    赋值 (m3, 相加 (m3, 1))
    赋值 (.标题, 到文本 (m3))
    .如果真 (大于或等于 (m3, 到数值 (.内容)))
        .如果 (等于 (.选中, 真))
            发送2 (.取项目数值 (.现行选中项))
        .否则
            发送 (.取项目数值 (.现行选中项))
        .如果结束
        赋值 (m3, 0)
    .如果真结束
    
.如果真结束
.如果真 (等于 (.选中, 真))
    赋值 (m4, 相加 (m4, 1))
    赋值 (.标题, 到文本 (m4))
    .如果真 (大于或等于 (m4, 到数值 (.内容)))
        .如果 (等于 (.选中, 真))
            发送2 (.取项目数值 (.现行选中项))
        .否则
            发送 (.取项目数值 (.现行选中项))
        .如果结束
        赋值 (m4, 0)
    .如果真结束
    
.如果真结束


.子程序 _选择框2_被单击, 空白型, , 
.判断开始 (等于 (.选中, 真))
     ' 窗口侧边跟随 (句柄, _启动窗口, 真, , )
    赋值 (.时钟周期, 1000)
    
.默认
     ' 取消侧边跟随 ()
    赋值 (.时钟周期, 0)
.判断结束


.子程序 _保存按钮_被单击, 空白型, , 
.局部变量 项值, 文本型, , , 
.局部变量 角色名称, 文本型, , , 

赋值 (角色名称, .标题)
赋值 (项值, 相加 (.内容, “-”, 到文本 (.现行选中项), “-”, .内容, “-”, 到文本 (.现行选中项), “-”, .内容, “-”, 到文本 (.现行选中项), “-”, .内容, “-”, 到文本 (.现行选中项), “-”, .内容, “-”, 到文本 (.现行选中项), “-”, .内容, “-”, 到文本 (.现行选中项), “-”, .内容, “-”, 到文本 (.现行选中项), “-”, .内容, “-”, 到文本 (.现行选中项)))
.如果 (等于 (“配置”.未知支持库函数_14 (#), 真))
    未知支持库函数_34 ()
    .如果 (等于 (相加 (“项目='”, 角色名称, “'”).未知支持库函数_45 (#), 真))
        “地址”.未知支持库函数_20 (项值)
    .否则
        未知支持库函数_17 ()
        “项目”.未知支持库函数_20 (角色名称)
        “地址”.未知支持库函数_20 (项值)
    .如果结束
    未知支持库函数_18 ()
.否则
    赋值 (.标题, “打开数据库失败,数据没有保存”)
.如果结束
未知支持库函数_16 ()
 ' 输出调试文本 (项值)
 ' 写配置项 (取运行目录 () ＋ “\fuzhu.ini”, 组合框2.取项目文本 (组合框2.现行选中项), “自动1”, 魔法1编辑框.内容)
 ' 写配置项 (取运行目录 () ＋ “\fuzhu.ini”, 组合框2.取项目文本 (组合框2.现行选中项), “自动-1”, 到文本 (魔法1组合框.现行选中项))
 ' 写配置项 (取运行目录 () ＋ “\fuzhu.ini”, 组合框2.取项目文本 (组合框2.现行选中项), “自动2”, 魔法2编辑框.内容)
 ' 写配置项 (取运行目录 () ＋ “\fuzhu.ini”, 组合框2.取项目文本 (组合框2.现行选中项), “自动-2”, 到文本 (魔法2组合框.现行选中项))
 ' 写配置项 (取运行目录 () ＋ “\fuzhu.ini”, 组合框2.取项目文本 (组合框2.现行选中项), “自动3”, 魔法3编辑框.内容)
 ' 写配置项 (取运行目录 () ＋ “\fuzhu.ini”, 组合框2.取项目文本 (组合框2.现行选中项), “自动-3”, 到文本 (魔法3组合框.现行选中项))
 ' 写配置项 (取运行目录 () ＋ “\fuzhu.ini”, 组合框2.取项目文本 (组合框2.现行选中项), “自动4”, 魔法4编辑框.内容)
 ' 写配置项 (取运行目录 () ＋ “\fuzhu.ini”, 组合框2.取项目文本 (组合框2.现行选中项), “自动-4”, 到文本 (魔法4组合框.现行选中项))
 ' 写配置项 (取运行目录 () ＋ “\fuzhu.ini”, 组合框2.取项目文本 (组合框2.现行选中项), “加血”, 加血编辑框1.内容)
 ' 写配置项 (取运行目录 () ＋ “\fuzhu.ini”, 组合框2.取项目文本 (组合框2.现行选中项), “加血-”, 到文本 (加血组合框.现行选中项))
 ' 写配置项 (取运行目录 () ＋ “\fuzhu.ini”, 组合框2.取项目文本 (组合框2.现行选中项), “加血2”, 加血2编辑框.内容)
 ' 写配置项 (取运行目录 () ＋ “\fuzhu.ini”, 组合框2.取项目文本 (组合框2.现行选中项), “加血2-”, 到文本 (加血2组合框.现行选中项))
 ' 写配置项 (取运行目录 () ＋ “\fuzhu.ini”, 组合框2.取项目文本 (组合框2.现行选中项), “加蓝”, 加蓝编辑框1.内容)
 ' 写配置项 (取运行目录 () ＋ “\fuzhu.ini”, 组合框2.取项目文本 (组合框2.现行选中项), “加蓝-”, 到文本 (加蓝组合框.现行选中项))
 ' 写配置项 (取运行目录 () ＋ “\fuzhu.ini”, 组合框2.取项目文本 (组合框2.现行选中项), “加蓝2”, 加蓝2编辑框.内容)
 ' 写配置项 (取运行目录 () ＋ “\fuzhu.ini”, 组合框2.取项目文本 (组合框2.现行选中项), “加蓝2-”, 到文本 (加蓝2组合框.现行选中项))


.子程序 发送, 空白型, , 
.参数 消息, 整数型, , 

前台窗口 (主窗口句柄)
 ' ' 激活窗口 (句柄)
未知支持库函数_1 (消息, , )
未知支持库函数_1 (消息, , )
 ' 发送消息_ (主窗口句柄, 256, #T键, 0)
 ' ' 投送消息_ (主窗口句柄, 257, 取代码 (“AAAAAAAAAAAAAAAAAAAAAAAA”, ), 0)
 ' 发送消息_ (主窗口句柄, 257, #T键, 0)
 ' ' 输出调试文本 (消息)
 ' ' 发送消息_ (主窗口句柄, 258, 消息, 0)

 ' 按键 ()
 ' 按键 (#Ctrl键, 0, 0, 0)
 ' 延时 (200)
 ' 按键 (#Z键, 0, 0, 0)
 ' 延时 (200)
 ' 按键 (#Z键, 0, 2, 0)
 ' 延时 (200)
 ' 按键 (#Ctrl键, 0, 2, 0)


.子程序 发送2, 空白型, , 
.参数 消息, 整数型, , 

前台窗口 (主窗口句柄)
 ' 模拟按键 (消息, , )
延时 (300)
未知支持库函数_1 (#T键, , )
延时 (300)
 ' 模拟按键 (消息, , )
未知支持库函数_1 (消息, , )
延时 (300)
未知支持库函数_1 (#T键, , )


.子程序 _保存设置_被选择, 空白型, , 
_保存按钮_被单击 ()


.子程序 _刷新进程_被选择, 空白型, , 
.局部变量 参数, 整数型, , , 
.局部变量 b, 整数型, , , 

清空 ()
赋值 (进程表, 未知支持库函数_10 ())
.计次循环首 (取数组成员数 (进程表), b)
    相加 (进程表 [b], , “[”, 到文本 (进程表 [b], ), “]”).加入项目 ()
.计次循环尾 ()


.子程序 _退出_被选择, 空白型, , 
销毁 ()


.子程序 _重新定位_被选择, 空白型, , 


.如果真 (等于 (进程id, 0))
    信息框 (“请选择要操作的程序”, 0, )
    返回 ()
.如果真结束
.如果真 (等于 (操作句柄, 0))
    信息框 (“没有找到此进程的窗口”, 0, )
    返回 ()
.如果真结束
赋值 (.内容, .取项目文本 (.现行选中项))
赋值 (.时钟周期, 0)
赋值 (.时钟周期, 0)
赋值 (.可视, 真)


.子程序 _隐藏游戏_被选择, 空白型, , 
赋值 (.选中, 取反 (.选中))
.如果 (等于 (.选中, 真))
    
.否则
    
.如果结束
信息框 (“这个功能还没做！！”, 相加 (0, 48), )


.子程序 _关于_被选择, 空白型, , 
载入 (关于窗口, , 真)


.子程序 _时钟3_周期事件, 空白型, , 
.局部变量 b, rect, , , 
.局部变量 匿名局部变量_3883, 空白型, , , 

.如果真 (等于 (主窗口句柄, 0))
    赋值 (.时钟周期, 0)
    返回 ()
.如果真结束
.如果真 (等于 (取活动窗口 (), 主窗口句柄))
    取窗口坐标 (主窗口句柄, b)
    _启动窗口.移动 (b.r, b.t, , )
.如果真结束

 ' 如果 (取活动窗口 () ＝ 句柄)
 ' 如果真 (顶层 ＝ 假)
 ' 调整 ()


 ' 顶层 ＝ 假
 ' '启动窗口.总在最前 ＝ 假
 ' 输出调试文本 (到文本 (取活动窗口 ()) ＋ “-” ＋ 到文本 (句柄))



.子程序 调整, 空白型, , 
赋值 (_启动窗口., 真)
赋值 (顶层, 真)



 ' 答题程序集**********************************************************************************************************


.子程序 _初始化按钮_被单击, 空白型, , 
.局部变量 地址, 整数型, , "0", 
.局部变量 AA, 字节集, , , 

赋值 (.内容, “正在搜索...............”)
赋值 (.禁止, 真)
赋值 (AA, { 3, 0, 0, 88, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 32, 3, 0, 0, 0, 0, 0, 0, 32, 3, 0, 0, 0, 0, 0, 0, 32, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 88, 2, 0, 0, 32, 3, 0, 0, 0, 0, 0, 0, 32, 3, 0, 0, 88, 2, 0, 0, 0, 0, 0, 0, 88, 2, 0, 0, 0, 0, 0, 0, 88, 2, 0, 0, 0, 0, 0, 0, 88, 2, 0, 0, 32, 3, 0, 0, 88, 2, 0, 0, 32, 3, 0, 0, 88, 2, 0, 0, 32, 3, 0, 0, 88, 2, 0, 0, 81, 0, 0, 0, 37 })
.如果真 (等于 (进程id, 0))
    赋值 (.内容, “你还没有选择游戏”)
    赋值 (.禁止, 假)
    返回 ()
.如果真结束
搜索内存 (进程id, AA, 地址)
.如果 (大于 (取数组成员数 (地址), 0))
    赋值 (答题地址, 相加 (地址 [1], 559))
    赋值 (.标题, 到文本 (答题地址))
    
.否则
    赋值 (.内容, “自动初始化失败,请在上面的框中输入题目的前几个字,然后点<初始化>按钮”)
    赋值 (.禁止, 假)
    .如果真 (等于 (.内容, “”))
        返回 ()
    .如果真结束
    _找答题地址_被单击 ()
    .如果真 (等于 (答题地址, 0))
        赋值 (.内容, “自动手动初始化失败”)
        赋值 (.禁止, 假)
        返回 ()
    .如果真结束
    
.如果结束
赋值 (.禁止, 假)
赋值 (.选中, 真)
_刷新按钮_被单击 ()
赋值 (.禁止, 假)
赋值 (.禁止, 真)
_自动读题选择框_被单击 ()


.子程序 _选择夹1_子夹被改变, 空白型, , 
.局部变量 I, 整数型, , , 
.局部变量 N, 文本型, , , 

.如果 (等于 (.现行子夹, 2))
    赋值 (.禁止, 真)
    赋值 (.标题, “加答案”)
    .如果真 (等于 (“题库”.未知支持库函数_14 (#), 假))
        信息框 (“打开数据库失败”, 0, )
    .如果真结束
    赋值 (.禁止, 假)
.否则
    未知支持库函数_16 ()
    赋值 (.时钟周期, 0)
    .如果 (等于 (.现行子夹, 1))
        赋值 (.禁止, 真)
        .如果真 (等于 (“select distinct 分类 from  聊天 ”.未知支持库函数_14 (#), 真))
            未知支持库函数_34 ()
            清空 ()
            .判断循环首 (等于 (., 假))
                “分类”.未知支持库函数_26 (N)
                N.加入项目 ()
                未知支持库函数_36 ()
            .判断循环尾 ()
        .如果真结束
        未知支持库函数_16 ()
        .如果真 (大于或等于 (分类现行项, 0))
            赋值 (.现行选中项, 分类现行项)
        .如果真结束
        .如果真 (等于 (“聊天”.未知支持库函数_14 (#), 假))
            信息框 (“打开数据库失败”, 0, )
        .如果真结束
        _读选择组合框1_列表项被选择 ()
        赋值 (.禁止, 假)
    .否则
        未知支持库函数_16 ()
    .如果结束
    
.如果结束


.子程序 _读选择组合框1_列表项被选择, 空白型, , 
.局部变量 查询, 文本型, , , 
.局部变量 N, 文本型, , , 

清空 ()
赋值 (查询, 相加 (“select 内容 from 聊天 WHERE 分类='”, .内容, “'”))
查询.未知支持库函数_14 (#)
未知支持库函数_34 ()
.判断循环首 (等于 (., 假))
    “内容”.未知支持库函数_26 (N)
    N.加入项目 ()
    未知支持库函数_36 ()
.判断循环尾 ()
未知支持库函数_16 ()


.子程序 _增加按钮1_被单击, 空白型, , 
赋值 (.禁止, 真)
“聊天”.未知支持库函数_14 (#)
.如果真 (不等于 (.内容, “”))
    未知支持库函数_17 ()
    “分类”.未知支持库函数_20 (.内容)
    “内容”.未知支持库函数_20 (.内容)
.如果真结束
 ' 主记录集.更新 ()
未知支持库函数_16 ()
赋值 (分类现行项, .现行选中项)
_选择夹1_子夹被改变 ()
赋值 (.禁止, 假)

.子程序 _删除按钮2_被单击, 空白型, , 
.局部变量 I, 整数型, , , 

赋值 (.禁止, 真)
“聊天”.未知支持库函数_14 (#)
.计次循环首 (取项目数 (), I)
    .如果真 (等于 (相减 (I, 1).是否被选中 (), 真))
        .如果真 (相加 (“内容 LIKE '%”, 相减 (I, 1).取项目文本 (), “%'”).未知支持库函数_45 (#))
            1.未知支持库函数_19 ()
        .如果真结束
        未知支持库函数_18 ()
    .如果真结束
    
.计次循环尾 ()
未知支持库函数_16 ()
_选择夹1_子夹被改变 ()
赋值 (.禁止, 假)

.子程序 _刷新按钮_被单击, 空白型, , 
.局部变量 题, 文本型, , , 
.局部变量 库题, 文本型, , , 
.局部变量 d, 整数型, , , 
.局部变量 g, 整数型, , , 

赋值 (.标题, “无”)
赋值 (g, 相加 (答题地址, 512))
赋值 (题目, 取空白字节集 (128))
字节集_ReadProcessMemory (操作句柄, g, 题目, 128, 0)
赋值 (.标题, 到文本 (题目))
赋值 (.选中, 假)
赋值 (g, 相加 (g, 128))
赋值 (题目, 取空白字节集 (128))
字节集_ReadProcessMemory (操作句柄, g, 题目, 128, 0)
赋值 (.标题, 到文本 (题目))
赋值 (.选中, 假)
赋值 (g, 相加 (g, 128))
赋值 (题目, 取空白字节集 (128))
字节集_ReadProcessMemory (操作句柄, g, 题目, 128, 0)
赋值 (.标题, 到文本 (题目))
赋值 (.选中, 假)
赋值 (g, 相加 (g, 128))
赋值 (题目, 取空白字节集 (128))
字节集_ReadProcessMemory (操作句柄, g, 题目, 128, 0)
赋值 (.标题, 到文本 (题目))
赋值 (.选中, 假)
赋值 (g, 相加 (g, 128))
赋值 (题目, 取空白字节集 (128))
字节集_ReadProcessMemory (操作句柄, g, 题目, 128, 0)
赋值 (.标题, 到文本 (题目))
赋值 (.选中, 假)
赋值 (g, 相加 (g, 128))
赋值 (题目, 取空白字节集 (128))
字节集_ReadProcessMemory (操作句柄, g, 题目, 128, 0)
赋值 (.标题, 到文本 (题目))
赋值 (.选中, 假)
赋值 (题目, 取空白字节集 (512))
字节集_ReadProcessMemory (操作句柄, 答题地址, 题目, 512, 0)
赋值 (题, 到文本 (题目))
赋值 (.内容, 题)
未知支持库函数_34 ()
.如果 (等于 (相加 (“问题 LIKE '%”, 题, “%'”).未知支持库函数_45 (#), 真))
    “问题”.未知支持库函数_26 (库题)
    赋值 (.内容, 库题)
    查题 ()
.否则
    赋值 (.内容, “没有搜索到该题！”)
    .如果真 (不等于 (.内容, “”))
        保存该题 ()
    .如果真结束
    
.如果结束


.子程序 查题, 空白型, , 
.局部变量 库答案, 文本型, , , 
.局部变量 库案, 文本型, , , 
.局部变量 是否, 逻辑型, , , 

“案1”.未知支持库函数_30 (是否)
.如果真 (等于 (是否, 真))
    “1”.未知支持库函数_26 (库答案)
    对答案 (库答案)
.如果真结束
“案2”.未知支持库函数_30 (是否)
.如果真 (等于 (是否, 真))
    “2”.未知支持库函数_26 (库答案)
    对答案 (库答案)
.如果真结束
“案3”.未知支持库函数_30 (是否)
.如果真 (等于 (是否, 真))
    “3”.未知支持库函数_26 (库答案)
    对答案 (库答案)
.如果真结束
“案4”.未知支持库函数_30 (是否)
.如果真 (等于 (是否, 真))
    “4”.未知支持库函数_26 (库答案)
    对答案 (库答案)
.如果真结束
“案5”.未知支持库函数_30 (是否)
.如果真 (等于 (是否, 真))
    “5”.未知支持库函数_26 (库答案)
    对答案 (库答案)
.如果真结束
“案6”.未知支持库函数_30 (是否)
.如果真 (等于 (是否, 真))
    “6”.未知支持库函数_26 (库答案)
    对答案 (库答案)
.如果真结束
.如果真 (等于 (答案 (), 假))
    赋值 (.标题, “无”)
.如果真结束




.子程序 答案, 逻辑型, , 
.局部变量 变量, 逻辑型, , , 
.局部变量 i, 整数型, , , 
.局部变量 真数, 整数型, , , 

.计次循环首 (6, i)
    赋值 (变量, 多项选择 (i, .选中, .选中, .选中, .选中, .选中, .选中))
    
    .如果真 (变量)
        赋值 (真数, 相加 (真数, 1))
    .如果真结束
    
.计次循环尾 ()
.如果 (等于 (真数, 1))
    返回 (真)
.否则
    返回 (假)
    
.如果结束


.子程序 对答案, 空白型, , 
.参数 库答, 文本型, , 

.如果真 (不等于 (寻找文本 (库答, .标题, , 假), -1))
    赋值 (.选中, 真)
    赋值 (.标题, “A”)
    返回 ()
.如果真结束
.如果真 (不等于 (寻找文本 (库答, .标题, , 假), -1))
    赋值 (.选中, 真)
    赋值 (.标题, “B”)
    返回 ()
.如果真结束
.如果真 (不等于 (寻找文本 (库答, .标题, , 假), -1))
    赋值 (.选中, 真)
    赋值 (.标题, “C”)
    返回 ()
.如果真结束
.如果真 (不等于 (寻找文本 (库答, .标题, , 假), -1))
    赋值 (.选中, 真)
    赋值 (.标题, “D”)
    返回 ()
.如果真结束
.如果真 (不等于 (寻找文本 (库答, .标题, , 假), -1))
    赋值 (.选中, 真)
    赋值 (.标题, “E”)
    返回 ()
.如果真结束
.如果 (不等于 (寻找文本 (库答, .标题, , 假), -1))
    赋值 (.选中, 真)
    赋值 (.标题, “F”)
    返回 ()
.否则
    
.如果结束


.子程序 _答案1选择框_被单击, 空白型, , 
修改题库 ()

.子程序 _答案2选择框_被单击, 空白型, , 
修改题库 ()

.子程序 _答案3选择框_被单击, 空白型, , 
修改题库 ()

.子程序 _答案4选择框_被单击, 空白型, , 
修改题库 ()

.子程序 _答案5选择框_被单击, 空白型, , 
修改题库 ()

.子程序 _答案6选择框_被单击, 空白型, , 
修改题库 ()

.子程序 修改题库, 空白型, , 
.如果真 (等于 (“案1”.未知支持库函数_24 (.选中), 假))
    信息框 (“写逻辑失败！”, 0, )
    
.如果真结束
.如果真 (等于 (“1”.未知支持库函数_20 (.标题), 假))
    信息框 (“写文本失败！”, 0, )
    
.如果真结束
.如果真 (不等于 (.标题, “”))
    “案2”.未知支持库函数_24 (.选中)
    “2”.未知支持库函数_20 (.标题)
.如果真结束
.如果真 (不等于 (.标题, “”))
    “案3”.未知支持库函数_24 (.选中)
    “3”.未知支持库函数_20 (.标题)
.如果真结束
.如果真 (不等于 (.标题, “”))
    “案4”.未知支持库函数_24 (.选中)
    “4”.未知支持库函数_20 (.标题)
.如果真结束
.如果真 (不等于 (.标题, “”))
    “案5”.未知支持库函数_24 (.选中)
    “5”.未知支持库函数_20 (.标题)
.如果真结束
.如果真 (不等于 (.标题, “”))
    “案6”.未知支持库函数_24 (.选中)
    “6”.未知支持库函数_20 (.标题)
.如果真结束
未知支持库函数_18 ()


.子程序 __启动窗口_将被销毁, 空白型, , 
未知支持库函数_16 ()
未知支持库函数_3 ()
.如果真 (不等于 (主窗口句柄, 0))
    
    载入外窗口 (主窗口句柄, 0)
    
     ' 程序关闭,但不关内窗口
.如果真结束


.子程序 保存该题, 空白型, , 
未知支持库函数_35 ()
.如果真 (等于 (未知支持库函数_17 (), 假))
    信息框 (“添加记录失败！”, 0, )
    
.如果真结束
“问题”.未知支持库函数_20 (.内容)
修改题库 ()



.子程序 _自动读题选择框_被单击, 空白型, , 
.如果 (等于 (.选中, 真))
    赋值 (.时钟周期, 400)
    赋值 (.禁止, 真)
.否则
    赋值 (.时钟周期, 0)
    赋值 (.禁止, 假)
.如果结束


.子程序 _加答案按钮1_被单击, 空白型, , 
.局部变量 I, 整数型, , , 
.局部变量 AA, 文本型, , , 

赋值 (.时钟周期, 0)
赋值 (.禁止, 真)
.如果真 (等于 (.标题, “加答案”))
    .如果真 (“select * from 题库 where ((not 案1) and (not 案2) and (not 案3) and (not 案4) and (not 案5) and (not 案6))”.未知支持库函数_14 (#))
        未知支持库函数_34 ()
        .如果真 (大于 (., 1))
            赋值 (.标题, “下一题”)
        .如果真结束
        
    .如果真结束
    赋值 (.标题, 到文本 (.))
.如果真结束
.如果真 (等于 (.标题, “下一题”))
    赋值 (.选中, 假)
    赋值 (.选中, 假)
    赋值 (.选中, 假)
    赋值 (.选中, 假)
    赋值 (.选中, 假)
    赋值 (.选中, 假)
    未知支持库函数_36 ()
    赋值 (.标题, 到文本 (相减 (到数值 (.标题), 1)))
    .如果真 (.)
        赋值 (.标题, “加答案”)
        赋值 (.标题, “题库中的题目已全部做完”)
        赋值 (.禁止, 假)
        返回 ()
    .如果真结束
    
.如果真结束
“问题”.未知支持库函数_26 (AA)
赋值 (.内容, AA)
“1”.未知支持库函数_26 (AA)
赋值 (.标题, AA)
“2”.未知支持库函数_26 (AA)
赋值 (.标题, AA)
“3”.未知支持库函数_26 (AA)
赋值 (.标题, AA)
“4”.未知支持库函数_26 (AA)
赋值 (.标题, AA)
“5”.未知支持库函数_26 (AA)
赋值 (.标题, AA)
“6”.未知支持库函数_26 (AA)
赋值 (.标题, AA)



.子程序 _答题时钟_周期事件, 空白型, , 
赋值 (题目, 取空白字节集 (512))
字节集_ReadProcessMemory (操作句柄, 答题地址, 题目, 512, 0)
 ' 读字节集内存 (进程id, 答题地址, 题目, 512)
赋值 (.内容, 到文本 (题目))
刷新显示 ()
.如果真 (不等于 (.内容, .内容))
    _刷新按钮_被单击 ()
.如果真结束
.如果真 (并且 (等于 (.内容, “”), 等于 (.内容, “”)))
    返回 ()
.如果真结束
.如果真 (等于 (.内容, “”))
    赋值 (.选中, 假)
    _自动读题选择框_被单击 ()
.如果真结束


.子程序 _找答题地址_被单击, 空白型, , 
.局部变量 地址, 整数型, , "0", 
.局部变量 I, 整数型, , , 
.局部变量 内存, 字节集, , , 
.局部变量 特征码, 文本型, , , 

清除数组 (地址)
.如果真 (等于 (搜索内存 (操作句柄, 到字节集 (删首尾空 (.内容)), 地址), 假))
    赋值 (.标题, “没有找到”)
    返回 ()
.如果真结束

.计次循环首 (取数组下标 (地址, ), I)
    赋值 (内存, 取空白字节集 (512))
    字节集_ReadProcessMemory (操作句柄, 地址 [I], 内存, 512, 0)
    .如果真 (不等于 (到文本 (内存), “”))
        赋值 (内存, 取空白字节集 (128))
        字节集_ReadProcessMemory (操作句柄, 相加 (地址 [I], 512), 内存, 128, 0)
        .如果真 (不等于 (到文本 (内存), “”))
            赋值 (内存, 取空白字节集 (128))
            字节集_ReadProcessMemory (操作句柄, 相加 (地址 [I], 512, 128), 内存, 128, 0)
            .如果真 (不等于 (到文本 (内存), “”))
                赋值 (答题地址, 地址 [I])
                赋值 (.标题, 到文本 (答题地址))
                赋值 (内存, 取空白字节集 (512))
                字节集_ReadProcessMemory (操作句柄, 地址 [I], 内存, 512, 0)
                赋值 (.内容, 到文本 (内存))
                赋值 (内存, 取空白字节集 (512))
                字节集_ReadProcessMemory (操作句柄, 相减 (地址 [I], 559), 内存, 512, 0)
                
                
                
                输出调试文本 (相加 (“答题地址减559的内存地址内容”, 到文本 (内存)))
                赋值 (特征码, “”)
                .计次循环首 (取字节集长度 (内存), I)
                    赋值 (特征码, 相加 (特征码, “,”, 到文本 (内存 [I])))
                .计次循环尾 ()
                输出调试文本 (特征码)
                
                跳出循环 ()
            .如果真结束
            
        .如果真结束
        
    .如果真结束
    
.计次循环尾 ()


.子程序 _搜索按钮1_被单击, 空白型, , 
.局部变量 地址, 整数型, , "0", 
.局部变量 角色名地址组, 整数型, , "0", 
.局部变量 生命地址组, 整数型, , "0", 
.局部变量 魔法地址组, 整数型, , "0", 
.局部变量 坐标地址组, 整数型, , "0", 
.局部变量 经验地址组, 整数型, , "0", 
.局部变量 I, 整数型, , , 
.局部变量 内容, 字节集, , , 
.局部变量 数, 整数型, , , 
.局部变量 地址2, 整数型, , "0", 
.局部变量 数2, 整数型, , , 
.局部变量 I2, 整数型, , , 
.局部变量 I3, 整数型, , , 
.局部变量 I4, 整数型, , , 
.局部变量 组合地址, 文本型, , , 
.局部变量 I5, 整数型, , , 

赋值 (.禁止, 真)
清空 ()
清除数组 (角色名地址组)
清除数组 (生命地址组)
清除数组 (魔法地址组)
清除数组 (坐标地址组)
清除数组 (经验地址组)
.如果真 (不等于 (.内容, “”))
    赋值 (内容, 到字节集 (.内容))
    搜索内存 (进程id, 内容, 角色名地址组)
    .如果真 (不等于 (取数组成员数 (角色名地址组), 0))
        赋值 (数, 到数值 (.内容))
        .如果 (大于 (数, 0))
            清除数组 (地址)
            赋值 (内容, 到字节集 (数))
            .如果真 (搜索内存 (进程id, 内容, 地址))
                .计次循环首 (相减 (取数组成员数 (地址), 1), I)
                    .如果真 (等于 (相加 (地址 [I], 4), 地址 [相加 (I, 1)]))
                        加入成员 (生命地址组, 地址 [I])
                        加入成员 (生命地址组, 地址 [相加 (I, 1)])
                    .如果真结束
                    
                .计次循环尾 ()
            .如果真结束
            
        .否则
            
        .如果结束
        赋值 (数, 到数值 (.内容))
        .如果 (大于 (数, 0))
            清除数组 (地址)
            赋值 (内容, 到字节集 (数))
            .如果真 (搜索内存 (进程id, 内容, 地址))
                .计次循环首 (相减 (取数组成员数 (地址), 1), I)
                    .如果真 (等于 (相加 (地址 [I], 4), 地址 [相加 (I, 1)]))
                        加入成员 (魔法地址组, 地址 [I])
                        加入成员 (魔法地址组, 地址 [相加 (I, 1)])
                         ' 输出调试文本 (到文本 (地址 [I]) ＋ “|tg魔1”)
                        
                    .如果真结束
                    
                .计次循环尾 ()
            .如果真结束
            
        .否则
            
        .如果结束
        赋值 (数, 到数值 (.内容))
        .如果 (大于 (数, 0))
            清除数组 (地址)
            清除数组 (地址2)
            赋值 (内容, 到字节集 (数))
            .如果真 (搜索内存 (进程id, 内容, 地址))
                赋值 (数2, 到数值 (.内容))
                赋值 (内容, 到字节集 (数2))
                .如果真 (搜索内存 (进程id, 内容, 地址2))
                    .计次循环首 (取数组成员数 (地址), I)
                        .计次循环首 (取数组成员数 (地址2), I2)
                            .如果真 (等于 (相加 (地址 [I], 4), 地址2 [I2]))
                                加入成员 (坐标地址组, 地址 [I])
                                 ' 加入成员 (坐标地址组, 地址2 [I2])
                            .如果真结束
                            
                        .计次循环尾 ()
                    .计次循环尾 ()
                    
                .如果真结束
                
            .如果真结束
            
        .否则
            
        .如果结束
        赋值 (数, 到数值 (.内容))
        .如果 (大于 (数, 0))
            清除数组 (地址)
            清除数组 (地址2)
            赋值 (内容, 到字节集 (数))
            .如果真 (搜索内存 (进程id, 内容, 地址))
                赋值 (数2, 到数值 (.内容))
                赋值 (内容, 到字节集 (数2))
                .如果真 (搜索内存 (进程id, 内容, 地址2))
                    .计次循环首 (取数组成员数 (地址), I)
                        .计次循环首 (取数组成员数 (地址2), I2)
                            .如果真 (等于 (相加 (地址 [I], 8), 地址2 [I2]))
                                加入成员 (经验地址组, 地址 [I])
                                 ' 加入成员 (经验地址组, 地址2 [I2 ＋ 1])
                            .如果真结束
                            
                        .计次循环尾 ()
                    .计次循环尾 ()
                    
                .如果真结束
                
            .如果真结束
            
        .否则
            
        .如果结束
        
    .如果真结束
    .计次循环首 (取数组成员数 (角色名地址组), I)
         ' 输出调试文本 (到文本 (I) ＋ “|1”)
        赋值 (组合地址, 相加 (到文本 (角色名地址组 [I]), “,”))
        .如果真 (等于 (取数组成员数 (生命地址组), 0))
            组合地址.加入项目 ()
        .如果真结束
        .变量循环首 (1, 取数组成员数 (生命地址组), 2, I2)
            赋值 (组合地址, 相加 (到文本 (角色名地址组 [I]), “,”))
            .如果真 (并且 (小于 (相减 (生命地址组 [I2], 角色名地址组 [I]), 3000), 大于 (相减 (生命地址组 [I2], 角色名地址组 [I]), 0)))
                赋值 (组合地址, 相加 (组合地址, 到文本 (生命地址组 [I2]), “,”))
                .如果真 (等于 (取数组成员数 (魔法地址组), 0))
                    组合地址.加入项目 ()
                .如果真结束
                .变量循环首 (1, 取数组成员数 (魔法地址组), 2, I3)
                    赋值 (组合地址, 相加 (到文本 (角色名地址组 [I]), “,”, 到文本 (生命地址组 [I2]), “,”))
                    .如果真 (并且 (小于 (相减 (魔法地址组 [I3], 角色名地址组 [I]), 3000), 大于 (相减 (魔法地址组 [I3], 角色名地址组 [I]), 0)))
                        赋值 (组合地址, 相加 (组合地址, 到文本 (魔法地址组 [I3]), “,”))
                        .如果真 (等于 (取数组成员数 (坐标地址组), 0))
                            组合地址.加入项目 ()
                        .如果真结束
                        .变量循环首 (1, 取数组成员数 (坐标地址组), 1, I4)
                            赋值 (组合地址, 相加 (到文本 (角色名地址组 [I]), “,”, 到文本 (生命地址组 [I2]), “,”, 到文本 (魔法地址组 [I3]), “,”))
                            .如果真 (并且 (小于 (相减 (坐标地址组 [I4], 角色名地址组 [I]), 3000), 大于 (相减 (坐标地址组 [I4], 角色名地址组 [I]), 0)))
                                赋值 (组合地址, 相加 (组合地址, 到文本 (坐标地址组 [I4]), “,”))
                                .如果真 (等于 (取数组成员数 (经验地址组), 0))
                                    组合地址.加入项目 ()
                                .如果真结束
                                .变量循环首 (1, 取数组成员数 (经验地址组), 1, I5)
                                    赋值 (组合地址, 相加 (到文本 (角色名地址组 [I]), “,”, 到文本 (生命地址组 [I2]), “,”, 到文本 (魔法地址组 [I3]), “,”, 到文本 (坐标地址组 [I4]), “,”))
                                    .如果真 (并且 (小于 (相减 (经验地址组 [I5], 角色名地址组 [I]), 3000), 大于 (相减 (经验地址组 [I5], 角色名地址组 [I]), 0)))
                                        赋值 (组合地址, 相加 (组合地址, 到文本 (经验地址组 [I5]), “,”))
                                        组合地址.加入项目 ()
                                         ' 输出调试文本 (组合地址)
                                    .如果真结束
                                    
                                .变量循环尾 ()
                            .如果真结束
                            
                        .变量循环尾 ()
                        
                         ' 输出调试文本 (组合地址)
                    .如果真结束
                    
                .变量循环尾 ()
            .如果真结束
            
        .变量循环尾 ()
        
    .计次循环尾 ()
    
.如果真结束

赋值 (.禁止, 假)


.子程序 _定位返回按钮1_被单击, 空白型, , 
.局部变量 偏移, 文本型, , , 

.如果 (等于 (信息框 (“是否保存找到的数据”, #是否钮, “提示信息”), #是钮))
    .如果真 (或者 (等于 (.内容, “”), 等于 (.内容, “”), 等于 (.内容, “”), 等于 (人特内, “”)))
        赋值 (.标题, “不能保存空数据,请找到数据后再保存”)
        返回 ()
    .如果真结束
    .如果 (“配置”.未知支持库函数_14 (#))
        未知支持库函数_34 ()
        赋值 (偏移, 相加 (.内容, “-”, .内容, “-”, .内容, “-”, .内容))
        .如果 (等于 (“项目='偏量'”.未知支持库函数_45 (#), 真))
            “地址”.未知支持库函数_20 (偏移)
             ' 输出调试文本 (偏移 ＋ “写入”)
        .否则
            未知支持库函数_17 ()
            “项目”.未知支持库函数_20 (“偏量”)
            “地址”.未知支持库函数_20 (偏移)
        .如果结束
        未知支持库函数_18 ()
        未知支持库函数_34 ()
        .如果真 (不等于 (人特内, “”))
            .如果 (等于 (“项目='人特'”.未知支持库函数_45 (#), 真))
                “地址”.未知支持库函数_20 (人特内)
            .否则
                未知支持库函数_17 ()
                “项目”.未知支持库函数_20 (“人特”)
                “地址”.未知支持库函数_20 (人特内)
            .如果结束
            未知支持库函数_18 ()
        .如果真结束
        赋值 (.可视, 假)
        未知支持库函数_16 ()
        返回 ()
    .否则
        赋值 (.标题, “打开数据库失败,数据没有保存成功”)
        返回 ()
    .如果结束
    
.否则
    赋值 (.可视, 假)
    返回 ()
.如果结束


.子程序 _搜索结果列表框1_列表项被选择, 空白型, , 
.局部变量 选中的文, 文本型, , "0", 
.局部变量 人特字, 字节集, , , 
.局部变量 I, 整数型, , , 

赋值 (选中的文, 分割文本 (.取项目文本 (.现行选中项), “,”, ))
赋值 (人特内, “”)
.如果真 (大于 (取数组成员数 (选中的文), 0))
    赋值 (.标题, 选中的文 [1])
.如果真结束
.如果真 (大于 (取数组成员数 (选中的文), 1))
    赋值 (.内容, 到文本 (相减 (到数值 (选中的文 [2]), 到数值 (选中的文 [1]))))
.如果真结束
.如果真 (大于 (取数组成员数 (选中的文), 2))
    赋值 (.内容, 到文本 (相减 (到数值 (选中的文 [3]), 到数值 (选中的文 [1]))))
.如果真结束
.如果真 (大于 (取数组成员数 (选中的文), 3))
    赋值 (.内容, 到文本 (相减 (到数值 (选中的文 [4]), 到数值 (选中的文 [1]))))
.如果真结束
.如果真 (大于 (取数组成员数 (选中的文), 4))
    赋值 (.内容, 到文本 (相减 (到数值 (选中的文 [5]), 到数值 (选中的文 [1]))))
.如果真结束
赋值 (人特字, 取空白字节集 (8))
.如果真 (不等于 (字节集_ReadProcessMemory (操作句柄, 相减 (到数值 (选中的文 [1]), 8), 人特字, 8, 0), 0))
    .计次循环首 (取字节集长度 (人特字), I)
        .如果 (小于 (I, 取字节集长度 (人特字)))
            赋值 (人特内, 相加 (人特内, 到文本 (人特字 [I]), “,”))
        .否则
            赋值 (人特内, 相加 (人特内, 到文本 (人特字 [I])))
        .如果结束
        
    .计次循环尾 ()
    
.如果真结束


.子程序 _聊天按钮1_被单击, 空白型, , 
.局部变量 I, 整数型, , , 
.局部变量 AA, 整数型, , , 

清除数组 (聊天内容组)
赋值 (聊天计数, 1)
赋值 (聊天内容, “”)
.计次循环首 (取项目数 (), I)
    .如果真 (等于 (相减 (I, 1).是否被选中 (), 真))
        加入成员 (聊天内容组, 相减 (I, 1).取项目文本 ())
    .如果真结束
    
.计次循环尾 ()
.如果真 (等于 (取数组成员数 (聊天内容组), 0))
    赋值 (.内容, “你还没有选择要说的话,请在要说话的句子前面打勾!!!!!!!!!!!”)
    返回 ()
.如果真结束
.如果 (等于 (.选中, 真))
    赋值 (聊天内容, 相加 (“/”, .内容, 取空白文本 (2)))
.否则
    .如果真 (等于 (.选中, 真))
        赋值 (聊天内容, 相加 (聊天内容, “<<”, .内容, “>>”, 取空白文本 (2)))
    .如果真结束
    
.如果结束
前台窗口 (主窗口句柄)
.如果 (并且 (等于 (.标题, “开始聊天”), 等于 (.选中, 真)))
    赋值 (AA, .取项目数值 (.现行选中项))
    赋值 (.禁止, 真)
    赋值 (.禁止, 真)
    _发送组合键 (#Ctrl键, AA)
    .如果 (小于 (到数值 (.内容), 5))
        赋值 (.时钟周期, 5000)
    .否则
        赋值 (.时钟周期, 相乘 (到数值 (.内容), 1000))
    .如果结束
    赋值 (.标题, “结束聊天”)
.否则
    .如果真 (等于 (.选中, 假))
        赋值 (AA, .取项目数值 (.现行选中项))
        _发送组合键 (#Ctrl键, AA)
        _聊天时钟4_周期事件 ()
    .如果真结束
    赋值 (.时钟周期, 0)
    赋值 (.标题, “开始聊天”)
    赋值 (.禁止, 假)
    赋值 (.禁止, 假)
    
.如果结束


.子程序 _聊天时钟4_周期事件, 空白型, , 
赋值 (.时钟周期, 相加 (.时钟周期, 相乘 (.时钟周期, 0.1)))
.如果真 (大于 (.时钟周期, 相乘 (到数值 (.内容), 1500)))
    赋值 (.时钟周期, 相乘 (到数值 (.内容), 1000))
.如果真结束
输出调试文本 (.时钟周期)

赋值 (聊天变量, 相加 (聊天变量, 1))
赋值 (聊天计数, 相加 (聊天计数, 1))
.如果 (大于 (聊天变量, 取数组成员数 (聊天内容组)))
    赋值 (聊天变量, 1)
.否则
    
.如果结束
.如果 (等于 (取数组成员数 (聊天内容组), 1))
    置剪辑板文本 (相加 (聊天内容, 聊天内容组 [聊天变量], 到文本 (聊天计数)))
.否则
    置剪辑板文本 (相加 (聊天内容, 聊天内容组 [聊天变量]))
.如果结束
前台窗口 (主窗口句柄)
按键 (#回车键, 0, 0, 0)
延时 (50)
按键 (#回车键, 0, 2, 0)
延时 (50)
按键 (#Ctrl键, 0, 0, 0)
延时 (50)
按键 (#V键, 0, 0, 0)
延时 (50)
按键 (#V键, 0, 2, 0)
延时 (150)
按键 (#Ctrl键, 0, 2, 0)
延时 (150)
按键 (#回车键, 0, 0, 0)
延时 (50)
按键 (#回车键, 0, 2, 0)
延时 (50)


.子程序 _发送组合键, 空白型, , 
.参数 键1, 整数型, , 
.参数 键2, 整数型, , 

 ' 前台窗口 (主窗口句柄)

按键 (键1, 0, 0, 0)
按键 (键2, 0, 0, 0)
延时 (50)
按键 (键2, 0, 2, 0)
按键 (键1, 0, 2, 0)
输出调试文本 (键2)


.子程序 _自动打怪_被选择, 空白型, , 
前台窗口 (主窗口句柄)
_发送组合键 (#Ctrl键, #Z键)


.子程序 _自动打怪按钮1_被单击, 空白型, , 
_自动打怪_被选择 ()


.子程序 _按钮1_被单击, 空白型, , 
.局部变量 gg, 字节集, , , 
.局部变量 地址22, 整数型, , "0", 
.局部变量 a, 整数型, , , 

 ' gg ＝ { 0, 13, 0, 0, 1, 0, 0, 0, 120, 160, 106, 0 }
赋值 (gg, { 1, 0, 0, 0, 8, 225, 106, 0 })
搜索内存 (进程id, gg, 地址22)
.计次循环首 (取数组成员数 (地址22), a)
    输出调试文本 (地址22 [a])
.计次循环尾 ()

.子程序 _聊天内容选择列表框1_列表项被选择, 空白型, , 
赋值 (.内容, .取项目文本 (.现行选中项))


.窗口程序集 窗口程序集2, , , 

.子程序 _按钮1_被单击, 空白型, , 
关于窗口.销毁 ()


.程序集 过程程序集, , , 

.子程序 读内存_字节集, 字节集, , 
.参数 内_句柄, 整数型, , 
.参数 内_地址, 整数型, , 
.参数 内_长度, 整数型, , 

.局部变量 内存值, 字节集, , , 

.如果真 (或者 (等于 (内_句柄, 0), 等于 (内_地址, 0), 等于 (内_长度, 0)))
    返回 ({  })
.如果真结束
赋值 (内存值, 取空白字节集 (内_长度))
.如果 (不等于 (字节集_ReadProcessMemory (内_句柄, 内_地址, 内存值, 内_长度, 0), 0))
    返回 (内存值)
.否则
    返回 ({  })
.如果结束



.子程序 搜索内存, 逻辑型, , 
.参数 内进程ID, 整数型, , 
.参数 内搜索值, 字节集, , 
.参数 搜索结果, 整数型, 数组, 

.局部变量 内操作句柄, 整数型, , , 
.局部变量 内存块长度, 整数型, , , 
.局部变量 内存地址, 整数型, , , 
.局部变量 内存块信息, MEMORY_BASIC_INFORMATION, , , 
.局部变量 读取结果, 整数型, , , 
.局部变量 数据缓冲区, 字节集, , , 
.局部变量 开始地址, 整数型, , , 
.局部变量 其他地址, 整数型, , , 
.局部变量 首字节, 字节集, , , 
.局部变量 长度, 整数型, , , 

.如果真 (小于或等于 (取字节集长度 (内搜索值), 1))
    返回 (假)
.如果真结束

清除数组 (搜索结果)
赋值 (首字节, 取字节集左边 (内搜索值, 1))
赋值 (长度, 取字节集长度 (内搜索值))
赋值 (内操作句柄, OpenProcess (相加 (#PROCESS_VM_READ, #PROCESS_QUERY_INFORMATION), 0, 内进程ID))
.如果真 (等于 (内操作句柄, 0))
    返回 (假)
.如果真结束
赋值 (内存块长度, 28)
.判断循环首 (不等于 (VirtualQueryEx (内操作句柄, 内存地址, 内存块信息, 内存块长度), 0))
    .如果真 (并且 (等于 (内存块信息.Type, #MEM_PRIVATE), 等于 (内存块信息.Protect, #PAGE_READWRITE)))
        赋值 (数据缓冲区, 取空白字节集 (内存块信息.RegionSize))
        赋值 (读取结果, 字节集_ReadProcessMemory (内操作句柄, 内存地址, 数据缓冲区, 内存块信息.RegionSize, 0))
        .如果 (不等于 (读取结果, 0))
            赋值 (开始地址, 寻找字节集 (数据缓冲区, 内搜索值, )) ' 查找是否有要搜索的数据
            .如果 (不等于 (开始地址, -1))
                加入成员 (搜索结果, 到数值 (相减 (相加 (内存地址, 开始地址), 1)))
            .否则
                
            .如果结束
            .判断循环首 (不等于 (-1, 寻找字节集 (数据缓冲区, 内搜索值, 相加 (开始地址, 长度))))
                赋值 (其他地址, 寻找字节集 (数据缓冲区, 内搜索值, 相加 (开始地址, 长度)))
                加入成员 (搜索结果, 到数值 (相减 (相加 (内存地址, 其他地址), 1)))
                赋值 (开始地址, 其他地址)
            .判断循环尾 ()
        .否则
            
        .如果结束
        
    .如果真结束
    赋值 (内存地址, 相加 (内存地址, 内存块信息.RegionSize))
.判断循环尾 ()
CloseHandle (内操作句柄)
返回 (真)

.子程序 _提升进程权限, 逻辑型, , 
.局部变量 hdlProcessHandle, 整数型, , , 
.局部变量 权限类别, 文本型, , , 
.局部变量 hdlTokenHandle, 整数型, , , 
.局部变量 tmpLuid, LuID, , , 
.局部变量 tkp, TOKEN_PRIVILEGES, , , 
.局部变量 tkpNewButIgnored, TOKEN_PRIVILEGES, , , 

赋值 (hdlProcessHandle, api_GetCurrentProcess ())
赋值 (权限类别, #SE_DEBUG_NAME)
api_OpenProcessToken (hdlProcessHandle, 40, hdlTokenHandle)
api_LookupPrivilegeValue (“”, 权限类别, tmpLuid)
赋值 (tkp.PrivilegeCount, 1)
赋值 (tkp.lowpart, tmpLuid.lowpart)
赋值 (tkp.highpart, tmpLuid.highpart)
赋值 (tkp.Attributes, 2)
.如果 (等于 (api_AdjustTokenPrivileges (hdlTokenHandle, 0, tkp, 28, tkpNewButIgnored, 0), 真))
    返回 (真)
.否则
    返回 (假)
.如果结束




 ' 不属于任何一个程序集、类模块的函数：
