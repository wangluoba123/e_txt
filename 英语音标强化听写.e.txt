 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 686
    高度 = 565
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = 16774114 '  0xFFF3E2
    最大化按钮 = 假
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 已保存到：D:\易语言学习\Data\英语音标强化听写.e\_启动窗口_图标.ico
    背景音乐 =  ' 空
    标题 = “ 英语音标强化听写 v1.22”
    帮助文件名 = “”

窗口 提示窗口
    左边 = 50
    顶边 = 50
    宽度 = 455
    高度 = 379
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = 16774114 '  0xFFF3E2
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “ 欢迎使用”
    帮助文件名 = “”



.声音 一, " ' 已保存到：D:\易语言学习\Data\英语音标强化听写.e\一", , 
.声音 二, " ' 已保存到：D:\易语言学习\Data\英语音标强化听写.e\二", , 
.声音 三, " ' 已保存到：D:\易语言学习\Data\英语音标强化听写.e\三", , 
.声音 四, " ' 已保存到：D:\易语言学习\Data\英语音标强化听写.e\四", , 
.声音 五, " ' 已保存到：D:\易语言学习\Data\英语音标强化听写.e\五", , 
.声音 六, " ' 已保存到：D:\易语言学习\Data\英语音标强化听写.e\六", , 
.声音 七, " ' 已保存到：D:\易语言学习\Data\英语音标强化听写.e\七", , 
.声音 八, " ' 已保存到：D:\易语言学习\Data\英语音标强化听写.e\八", , 
.声音 九, " ' 已保存到：D:\易语言学习\Data\英语音标强化听写.e\九", , 
.声音 十, " ' 已保存到：D:\易语言学习\Data\英语音标强化听写.e\十", , 
.声音 十一, " ' 已保存到：D:\易语言学习\Data\英语音标强化听写.e\十一", , 
.声音 十二, " ' 已保存到：D:\易语言学习\Data\英语音标强化听写.e\十二", , 
.声音 十三, " ' 已保存到：D:\易语言学习\Data\英语音标强化听写.e\十三", , 
.声音 十四, " ' 已保存到：D:\易语言学习\Data\英语音标强化听写.e\十四", , 
.声音 十五, " ' 已保存到：D:\易语言学习\Data\英语音标强化听写.e\十五", , 
.声音 十六, " ' 已保存到：D:\易语言学习\Data\英语音标强化听写.e\十六", , 
.声音 十七, " ' 已保存到：D:\易语言学习\Data\英语音标强化听写.e\十七", , 
.声音 十八, " ' 已保存到：D:\易语言学习\Data\英语音标强化听写.e\十八", , 
.声音 十九, " ' 已保存到：D:\易语言学习\Data\英语音标强化听写.e\十九", , 
.声音 二十, " ' 已保存到：D:\易语言学习\Data\英语音标强化听写.e\二十", , 
.声音 二一, " ' 已保存到：D:\易语言学习\Data\英语音标强化听写.e\二一", , 
.声音 二二, " ' 已保存到：D:\易语言学习\Data\英语音标强化听写.e\二二", , 
.声音 二三, " ' 已保存到：D:\易语言学习\Data\英语音标强化听写.e\二三", , 
.声音 二四, " ' 已保存到：D:\易语言学习\Data\英语音标强化听写.e\二四", , 
.声音 二五, " ' 已保存到：D:\易语言学习\Data\英语音标强化听写.e\二五", , 
.声音 二六, " ' 已保存到：D:\易语言学习\Data\英语音标强化听写.e\二六", , 
.声音 二七, " ' 已保存到：D:\易语言学习\Data\英语音标强化听写.e\二七", , 
.声音 二八, " ' 已保存到：D:\易语言学习\Data\英语音标强化听写.e\二八", , 
.声音 二九, " ' 已保存到：D:\易语言学习\Data\英语音标强化听写.e\二九", , 
.声音 三十, " ' 已保存到：D:\易语言学习\Data\英语音标强化听写.e\三十", , 
.声音 三一, " ' 已保存到：D:\易语言学习\Data\英语音标强化听写.e\三一", , 
.声音 三二, " ' 已保存到：D:\易语言学习\Data\英语音标强化听写.e\三二", , 
.声音 三三, " ' 已保存到：D:\易语言学习\Data\英语音标强化听写.e\三三", , 
.声音 三四, " ' 已保存到：D:\易语言学习\Data\英语音标强化听写.e\三四", , 
.声音 三五, " ' 已保存到：D:\易语言学习\Data\英语音标强化听写.e\三五", , 
.声音 三六, " ' 已保存到：D:\易语言学习\Data\英语音标强化听写.e\三六", , 
.声音 三七, " ' 已保存到：D:\易语言学习\Data\英语音标强化听写.e\三七", , 
.声音 三八, " ' 已保存到：D:\易语言学习\Data\英语音标强化听写.e\三八", , 
.声音 三九, " ' 已保存到：D:\易语言学习\Data\英语音标强化听写.e\三九", , 
.声音 四十, " ' 已保存到：D:\易语言学习\Data\英语音标强化听写.e\四十", , 
.声音 四一, " ' 已保存到：D:\易语言学习\Data\英语音标强化听写.e\四一", , 
.声音 四二, " ' 已保存到：D:\易语言学习\Data\英语音标强化听写.e\四二", , 
.声音 四三, " ' 已保存到：D:\易语言学习\Data\英语音标强化听写.e\四三", , 
.声音 四四, " ' 已保存到：D:\易语言学习\Data\英语音标强化听写.e\四四", , 
.声音 四五, " ' 已保存到：D:\易语言学习\Data\英语音标强化听写.e\四五", , 
.声音 四六, " ' 已保存到：D:\易语言学习\Data\英语音标强化听写.e\四六", , 
.声音 四七, " ' 已保存到：D:\易语言学习\Data\英语音标强化听写.e\四七", , 
.声音 四八, " ' 已保存到：D:\易语言学习\Data\英语音标强化听写.e\四八", , 
.图片 索引, " ' 已保存到：D:\易语言学习\Data\英语音标强化听写.e\索引", , 
.图片 音标字体, " ' 已保存到：D:\易语言学习\Data\英语音标强化听写.e\音标字体", , 
.图片 显示界面, " ' 已保存到：D:\易语言学习\Data\英语音标强化听写.e\显示界面", , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 4 系统核心支持库
 ' iext 27bb20fdd3e145e4bee3db39ddd6e64c 1 2 扩展界面支持库一
 ' iext2 AF6AD80AA4244A59AFB3D83ECF5173CC 1 1 扩展界面支持库二
 ' eMMedia 824F144B108A4bcbB966F45670D42A00 2 4 多媒体支持库
 ' EThread 5F99C1642A2F4e03850721B4F5D7C3F8 1 1 多线程支持库
 ' eAPI F7FC1AE45C5C4758AF03EF19F18A395D 1 1 应用接口支持库
 ' shell 52F260023059454187AF826A3C07AF2A 1 0 操作系统界面功能支持库
 ' xplib 7F54B9CE8887428dBA9CEEB94CEF4C72 1 6 XP风格界面库




.全局变量 显示提示窗口, 逻辑型, , , 

.窗口程序集 窗口程序集1, , , 

.程序集变量 单词, 文本型, , "0", 
.程序集变量 音标, 文本型, , "0", 
.程序集变量 解释, 文本型, , "0", 
.程序集变量 发音, 文本型, , "0", 
.程序集变量 单词乱序, 整数型, , "0", 
.程序集变量 当前音标, 文本型, , , 
.程序集变量 当前单词, 文本型, , , 
.程序集变量 当前索引, 整数型, , , 
.程序集变量 单词数, 整数型, , , 
.程序集变量 单词乱序方案, 整数型, , , 
.程序集变量 配置文件名, 文本型, , , 
.程序集变量 音标字符数, 整数型, , , 
.程序集变量 单词字符数, 整数型, , , 
.子程序 __启动窗口_创建完毕, 空白型, , 
.局部变量 文件号, 整数型, , , 
.局部变量 临时, 文本型, , "0", 
.局部变量 数据, 文本型, , "0", 
.局部变量 变量, 整数型, , , 
.局部变量 字体, 文本型, , "0", 
.局部变量 字体存在, 逻辑型, , , 
.局部变量 模式选择, 文本型, , , 
.局部变量 显示选择, 文本型, , , 
.局部变量 显示解释, 文本型, , , 
.局部变量 出错提示, 文本型, , , 
.局部变量 出错清除, 文本型, , , 
.局部变量 切换发音, 文本型, , , 
.局部变量 当前值, 文本型, , , 
.局部变量 提示窗口信息, 文本型, , , 

未知支持库函数_0 (1)
赋值 (字体, 未知支持库函数_28 ())
赋值 (字体存在, 假)
.计次循环首 (取数组成员数 (字体), 变量)
    .如果真 (等于 (字体 [变量], “Kingsoft Phonetic Plain”))
        赋值 (字体存在, 真)
    .如果真结束
    
.计次循环尾 ()
.如果真 (等于 (字体存在, 假))
    .如果真 (等于 (信息框 (“系统缺少音标显示字体，是否自动安装？  ”, 68, ), 5))
        .如果 (等于 (写到文件 (相加 (未知支持库函数_7 (#), “Kingsoft Phonetic.ttf”), #音标字体), 真))
            运行 (相加 (“explorer ”, 未知支持库函数_7 (#)), 假, )
            延时 (1000)
             ' 不知道为什么，COPY字体文件到系统字体目录后，必须打开显示一次字体目录，第二次运行时才能检测到字体。
            信息框 (“音标显示字体安装成功，请重新运行本程序！  ”, 64, )
        .否则
            信息框 (“音标显示字体安装失败，请手动将音标字体文件复制到系统字体目录后重新运行本程序！  ”, 64, )
        .如果结束
        
    .如果真结束
    结束 ()
.如果真结束
 ' 以上为检测系统中是否有音标显示字体，如没有则提示安装。
写到文件 (“C:\~temp”, #索引)
 ' 由于希望只有一个文件即可运行，所以没有使用数据库的方法，而是将单词、发音索引、音标、解释等放入索引文件，每次启动时写出到磁盘，再分别读入到各个数组中，为避免多维数组造成混乱出错（主要原因是偶不精通这个^_^），这里使用的数组都是单维的。
赋值 (文件号, 打开文件 (“C:\~temp”, 1, 4))
赋值 (数据, 分割文本 (读入文本 (文件号, ), #换行符, ))
清除数组 (单词)
清除数组 (发音)
清除数组 (音标)
清除数组 (解释)
.计次循环首 (取数组成员数 (数据), 变量)
    .如果真 (等于 (删首尾空 (数据 [变量]), “”))
        到循环尾 ()
    .如果真结束
    赋值 (临时, 分割文本 (数据 [变量], 字符 (9), ))
    加入成员 (单词, 删首尾空 (临时 [1]))
    加入成员 (发音, 删首尾空 (临时 [2]))
    加入成员 (音标, 删首尾空 (临时 [3]))
    加入成员 (解释, 删首尾空 (临时 [4]))
.计次循环尾 ()
关闭所有文件 ()
删除文件 (“C:\~temp”)
.如果真 (不等于 (取数组成员数 (单词), 3690))
     ' 检测一下读入单词等数据是否完整，3690是目前程序内置的单词数。学习音标，使用3000多个单词足够了，所以没有考虑自由扩充的问题，这也是没有使用数据库的原因之一。
    信息框 (“程序出现错误，请重新运行一次试试！”, 64, )
    结束 ()
.如果真结束
赋值 (单词数, 3690)
赋值 (当前索引, 1)
赋值 (显示提示窗口, 真)
赋值 (配置文件名, 相加 (取运行目录 (), “\setup.ini”))
.如果真 (等于 (文件是否存在 (配置文件名), 真))
    赋值 (模式选择, 读配置项 (配置文件名, “参数设置”, “听写模式”, “1”))
    赋值 (提示窗口信息, 读配置项 (配置文件名, “参数设置”, “提示窗口”, “1”))
    赋值 (显示选择, 读配置项 (配置文件名, “参数设置”, “显示单词（音标）”, “1”))
    赋值 (显示解释, 读配置项 (配置文件名, “参数设置”, “显示解释”, “1”))
    赋值 (出错提示, 读配置项 (配置文件名, “参数设置”, “出错提示”, “0”))
    赋值 (出错清除, 读配置项 (配置文件名, “参数设置”, “出错清除”, “0”))
    赋值 (切换发音, 读配置项 (配置文件名, “参数设置”, “切换发音”, “0”))
    赋值 (当前值, 读配置项 (配置文件名, “参数设置”, “当前索引”, “0”))
    赋值 (单词乱序方案, 到数值 (读配置项 (配置文件名, “参数设置”, “单词乱序方案”, “1”)))
    
     ' 取得程序的各项参数设置
    .如果 (等于 (显示选择, “1”))
        赋值 (.选中, 真)
    .否则
        赋值 (.选中, 假)
    .如果结束
    .如果 (等于 (模式选择, “1”))
        赋值 (.选中, 真)
        赋值 (.选中, 假)
        赋值 (.可视, 假)
        .如果 (等于 (.选中, 真))
            赋值 (.可视, 真)
        .否则
            赋值 (.可视, 假)
        .如果结束
        
    .否则
        赋值 (.选中, 真)
        赋值 (.选中, 假)
        .如果 (等于 (.选中, 真))
            赋值 (.可视, 真)
        .否则
            赋值 (.可视, 假)
        .如果结束
        赋值 (.可视, 假)
    .如果结束
     ' 由模式选择决定单词或音标的显示
    .如果 (等于 (提示窗口信息, “1”))
        赋值 (显示提示窗口, 真)
    .否则
        赋值 (显示提示窗口, 假)
    .如果结束
    .如果 (等于 (显示解释, “1”))
        赋值 (.选中, 真)
        赋值 (.可视, 真)
    .否则
        赋值 (.选中, 假)
        赋值 (.可视, 假)
    .如果结束
    .如果 (等于 (出错提示, “1”))
        赋值 (.选中, 真)
    .否则
        赋值 (.选中, 假)
    .如果结束
    .如果 (等于 (出错清除, “1”))
        赋值 (.选中, 真)
    .否则
        赋值 (.选中, 假)
    .如果结束
    .如果 (等于 (切换发音, “1”))
        赋值 (.选中, 真)
    .否则
        赋值 (.选中, 假)
    .如果结束
    赋值 (当前索引, 到数值 (当前值))
.如果真结束
乱序单词生成 ()
 ' 子程序计算，取得单词乱序排列效果

.如果真 (显示提示窗口)
    载入 (提示窗口, , 真)
.如果真结束

赋值 (.内容, 相加 (到文本 (当前索引), “ / ”, 到文本 (取数组成员数 (单词))))

.如果真 (大于 (当前索引, 0))
    赋值 (当前索引, 相减 (当前索引, 1))
    _后一个_被单击 ()
.如果真结束
 ' 这里用偷懒的办法朗读一次当前显示出的单词，详见子程序


.子程序 乱序单词生成, 空白型, , 
.局部变量 临时数据, 整数型, , "0", 
.局部变量 随机取数位置, 整数型, , , 
.局部变量 变量, 整数型, , , 

.计次循环首 (单词数, 变量)
    加入成员 (临时数据, 变量)
.计次循环尾 ()
置随机数种子 (单词乱序方案)
 ' 这里置随机数种子为设置的固定值，使生成的随机数序列每次均相同，可以在每次都得到相同的乱序单词排列
清除数组 (单词乱序)
.计次循环首 (单词数, 变量)
    赋值 (随机取数位置, 取随机数 (1, 取数组成员数 (临时数据)))
    加入成员 (单词乱序, 临时数据 [随机取数位置])
     ' 获得单词乱序数组
    删除成员 (临时数据, 随机取数位置, 1)
.计次循环尾 ()

.子程序 _后一个_被单击, 空白型, , 
赋值 (.内容, “”)
赋值 (当前索引, 相加 (当前索引, 1))
.如果真 (大于 (当前索引, 取数组成员数 (单词)))
    赋值 (当前索引, 相减 (当前索引, 1))
    信息框 (相加 (“本次循环已全部完成，点”, #左引号, “确定”, #右引号, “将重新排序开始！”), 64, )
    _重排序_被单击 ()
    返回 ()
.如果真结束
 ' 当所有单词都学完后，会提示重新将单词乱序分组
赋值 (.内容, 单词 [单词乱序] [当前索引])
赋值 (.内容, 音标 [单词乱序] [当前索引])
赋值 (.内容, 解释 [单词乱序] [当前索引])
赋值 (当前音标, 音标 [单词乱序] [当前索引])
赋值 (当前单词, 单词 [单词乱序] [当前索引])
 ' 按照当前索引给组件和变量赋值，虽然有的组件可能为不显示状态，但为避免在切换模式进重复计算，还是给赋值了
判断音标及单词字符数 ()
赋值 (.内容, 相加 (到文本 (当前索引), “ / ”, 到文本 (取数组成员数 (单词))))
.如果真 (等于 (.选中, 假))
    播放音乐 (相加 (取运行目录 (), “\sound\”, 发音 [单词乱序] [当前索引]), )
     ' 播放目前单词的读音
.如果真结束
获取焦点 ()

.子程序 _前一个_被单击, 空白型, , 
赋值 (.内容, “”)
赋值 (当前索引, 相减 (当前索引, 1))
.如果真 (小于或等于 (当前索引, 0))
    获取焦点 ()
    信息框 (“已到单词列表起始位置！”, 64, )
    赋值 (当前索引, 1)
.如果真结束
 ' 防止当前索引小于1时的错误
赋值 (.内容, 单词 [单词乱序] [当前索引])
赋值 (.内容, 音标 [单词乱序] [当前索引])
赋值 (.内容, 解释 [单词乱序] [当前索引])
赋值 (当前音标, 音标 [单词乱序] [当前索引])
赋值 (当前单词, 单词 [单词乱序] [当前索引])
 ' 按照当前索引给组件和变量赋值，虽然有的组件可能为不显示状态，但为避免在切换模式进重复计算，还是给赋值了
判断音标及单词字符数 ()
赋值 (.内容, 相加 (到文本 (当前索引), “ / ”, 到文本 (取数组成员数 (单词))))
.如果真 (等于 (.选中, 假))
    播放音乐 (相加 (取运行目录 (), “\sound\”, 发音 [单词乱序] [当前索引]), )
     ' 播放目前单词的读音
.如果真结束
获取焦点 ()


.子程序 判断音标及单词字符数, 空白型, , 
.局部变量 多组音标, 文本型, , "0", 
.局部变量 变量, 整数型, , , 

 ' 判断音标及单词文本的长度，以控制输入字符的个数
.如果 (等于 (寻找文本 (当前音标, “,”, , 假), -1))
    赋值 (音标字符数, 相减 (取文本长度 (当前音标), 3))
.否则
    赋值 (多组音标, 分割文本 (删全部空 (取文本中间 (当前音标, 2, 相减 (取文本长度 (当前音标), 2))), “,”, ))
    .计次循环首 (取数组成员数 (多组音标), 变量)
        .如果真 (等于 (变量, 1))
            赋值 (音标字符数, 取文本长度 (多组音标 [变量]))
            到循环尾 ()
        .如果真结束
        .如果真 (小于 (音标字符数, 取文本长度 (多组音标 [变量])))
            赋值 (音标字符数, 取文本长度 (多组音标 [变量]))
        .如果真结束
         ' 做一个判断，取多组音标中最长的一个为音标限定输入字符数。
    .计次循环尾 ()
.如果结束
赋值 (单词字符数, 到数值 (取文本长度 (当前单词)))
.如果 (等于 (.选中, 真))
    赋值 (.最大允许长度, 音标字符数)
.否则
    赋值 (.最大允许长度, 单词字符数)
.如果结束
 ' 这里直接对输入框的最大允许长度进行限制，防止了用右键粘贴入过多字符

.子程序 _重排序_被单击, 空白型, , 
.如果真 (不等于 (当前索引, 单词数))
    .如果真 (等于 (信息框 (“真的要重新分组？”, 65, ), 1))
        返回 ()
    .如果真结束
    
.如果真结束
赋值 (单词乱序方案, 相加 (单词乱序方案, 1))
乱序单词生成 ()
对所有单词进行乱序排列，并清空有关显示项目
赋值 (.内容, “”)
赋值 (.内容, “”)
赋值 (.内容, “”)
赋值 (当前索引, 0)
赋值 (当前单词, “”)
赋值 (当前音标, “”)
赋值 (.内容, 相加 (到文本 (当前索引), “ / ”, 到文本 (取数组成员数 (单词))))
获取焦点 ()
_后一个_被单击 ()

.子程序 _确定输入_被单击, 空白型, , 
.局部变量 多项音标, 文本型, , "0", 
.局部变量 音标正确, 逻辑型, , , 
.局部变量 变量, 整数型, , , 

.如果真 (等于 (当前索引, 0))
    获取焦点 ()
    返回 ()
.如果真结束
.如果真 (等于 (.内容, “”))
    .如果 (.选中)
        信息框 (“ 请输入音标后再点确定！ ”, 64, )
    .否则
        信息框 (“ 请输入单词后再点确定！ ”, 64, )
    .如果结束
    获取焦点 ()
    返回 ()
.如果真结束
播放音乐 (相加 (取运行目录 (), “\sound\”, 发音 [单词乱序] [当前索引]), )
 ' 无论输入是否正确，均朗读一次单词。
.如果 (.选中)
    赋值 (音标正确, 假)
    .如果 (等于 (寻找文本 (当前音标, “,”, , 假), -1))
        .如果真 (等于 (当前音标, 相加 (“/ ”, .内容, “/”)))
            赋值 (音标正确, 真)
        .如果真结束
        
    .否则
        赋值 (多项音标, 分割文本 (删全部空 (取文本中间 (当前音标, 2, 相减 (取文本长度 (当前音标), 2))), “,”, ))
        .计次循环首 (取数组成员数 (多项音标), 变量)
            .如果真 (等于 (多项音标 [变量], .内容))
                赋值 (音标正确, 真)
            .如果真结束
            
        .计次循环尾 ()
    .如果结束
     ' 由于存在一个单词有两种读音的情况，所以这里进行一个判断，如果音标中存在双音标的情况（用逗号分隔的），就分别与输入的音标进行比较。否则就直接比较。
     ' 其实由于读音库中每个单词发音是唯一的，所以只可能有一种读音的情况，但单词数据较多，无法一一进行判断，这里默认只要输入正确音标即可
    .如果 (等于 (音标正确, 真))
        未知支持库函数_0 (&正确, )
         ' 输入正确时启用另一个线程来执行“正确”子程序
    .否则
        .如果 (.选中)
            未知支持库函数_0 (&错误, )
            _提示_被单击 ()
        .否则
            未知支持库函数_0 (&错误, )
        .如果结束
         ' 输入错误时启用另一个线程来执行“错误”子程序，并根据设置来判断是否提示正确答案
        .如果真 (.选中)
            赋值 (.内容, “”)
        .如果真结束
        
    .如果结束
    播放音乐 (相加 (取运行目录 (), “\sound\”, 发音 [单词乱序] [当前索引]), )
.否则
    在听写单词模式下，直接比较单词输入是否正确来决定下步运行情况
    .如果 (等于 (当前单词, .内容))
        未知支持库函数_0 (&正确, )
    .否则
        .如果 (.选中)
            未知支持库函数_0 (&错误, )
            _提示_被单击 ()
        .否则
            未知支持库函数_0 (&错误, )
        .如果结束
        .如果真 (.选中)
            赋值 (.内容, “”)
        .如果真结束
        
    .如果结束
    
.如果结束
获取焦点 ()
 ' 使用在右上角显示对错的办法，而不用信息框是为了避免过多的无效点击或按键。

.子程序 _听写单词模式_被单击, 空白型, , 
赋值 (.标题, “显示音标”)
赋值 (.可视, 假)
赋值 (.字体.字体名称, “Arial”)
.如果真 (.选中)
    赋值 (.可视, 真)
.如果真结束
赋值 (.内容, “”)
获取焦点 ()
判断音标及单词字符数 ()
 ' 这个子程序是用来设置在切换选择学习模式时有关显示内容的。


.子程序 _听写音标模式_被单击, 空白型, , 
赋值 (.标题, “显示单词”)
赋值 (.可视, 假)
赋值 (.字体.字体名称, “Kingsoft Phonetic Plain”)
.如果真 (.选中)
    赋值 (.可视, 真)
.如果真结束
赋值 (.内容, “”)
获取焦点 ()
赋值 (.内容, “右键点音标听标准发音”)
赋值 (.背景颜色, #墨绿)
判断音标及单词字符数 ()
 ' 这个子程序是用来设置在切换选择学习模式时有关显示内容的。

.子程序 _显示单词或音标选择框_被单击, 空白型, , 
.如果 (等于 (.选中, 真))
    .如果真 (.选中)
        赋值 (.可视, 真)
    .如果真结束
    .如果真 (.选中)
        赋值 (.可视, 真)
    .如果真结束
    
.否则
    .如果真 (.选中)
        赋值 (.可视, 假)
    .如果真结束
    .如果真 (.选中)
        赋值 (.可视, 假)
    .如果真结束
    
.如果结束
获取焦点 ()
 ' 设置该项选中与否的情况下，不同内容的显示情况

.子程序 _显示解释选择框_被单击, 空白型, , 
.如果 (等于 (.选中, 真))
    赋值 (.可视, 真)
.否则
    赋值 (.可视, 假)
.如果结束
获取焦点 ()


.子程序 _提示_被单击, 空白型, , 
当遇到不会作答的情况下，可以点提示，会直接显示正确答案。
.如果真 (等于 (当前索引, 0))
    返回 ()
.如果真结束
.如果真 (.选中)
    未知支持库函数_0 (&显示一下音标, )
.如果真结束
.如果真 (.选中)
    未知支持库函数_0 (&显示一下单词, )
.如果真结束
 ' 根据当前模式选择，确定该显示的内容。
获取焦点 ()

.子程序 显示一下音标, 空白型, , 
赋值 (.可视, 真)
刷新显示 ()
延时 (500)
赋值 (.可视, 假)
 ' 显示正确答案半秒

.子程序 显示一下单词, 空白型, , 
赋值 (.可视, 真)
刷新显示 ()
延时 (500)
赋值 (.可视, 假)
 ' 显示正确答案半秒

.子程序 正确, 空白型, , 
赋值 (.内容, “√”)
赋值 (.可视, 真)
刷新显示 ()
延时 (500)
赋值 (.可视, 假)
_提示_被单击 ()
 ' 显示“√”半秒，并显示正确答案

.子程序 错误, 空白型, , 
赋值 (.内容, “×”)
赋值 (.可视, 真)
刷新显示 ()
延时 (500)
赋值 (.可视, 假)
 ' 显示“×”半秒

.子程序 _音标单词输入框_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (等于 (键代码, #回车键))
    _确定输入_被单击 ()
.如果真结束
.如果真 (等于 (键代码, #Esc键))
    _提示_被单击 ()
.如果真结束
.如果真 (等于 (键代码, #下光标键))
    _后一个_被单击 ()
.如果真结束
.如果真 (等于 (键代码, #上光标键))
    _前一个_被单击 ()
.如果真结束
 ' 设置部分功能键的作用

.子程序 _音标单词输入框_字符输入, 整数型, , 
.参数 字符代码, 整数型, , 

.如果 (.选中)
    .如果真 (并且 (不等于 (字符代码, 8), 不等于 (字符代码, 13), 不等于 (字符代码, 27), 不等于 (字符代码, 32), 不等于 (字符代码, 34), 不等于 (字符代码, 39), 不等于 (字符代码, 53), 不等于 (字符代码, 58), 不等于 (字符代码, 59), 不等于 (字符代码, 65), 不等于 (字符代码, 66), 不等于 (字符代码, 69), 不等于 (字符代码, 70), 不等于 (字符代码, 78), 不等于 (字符代码, 81), 不等于 (字符代码, 82), 不等于 (字符代码, 84), 不等于 (字符代码, 86), 不等于 (字符代码, 87), 不等于 (字符代码, 90), 不等于 (字符代码, 96), 不等于 (字符代码, 97), 不等于 (字符代码, 98), 不等于 (字符代码, 100), 不等于 (字符代码, 101), 不等于 (字符代码, 102), 不等于 (字符代码, 103), 不等于 (字符代码, 104), 不等于 (字符代码, 105), 不等于 (字符代码, 106), 不等于 (字符代码, 107), 不等于 (字符代码, 108), 不等于 (字符代码, 109), 不等于 (字符代码, 110), 不等于 (字符代码, 111), 不等于 (字符代码, 112), 不等于 (字符代码, 114), 不等于 (字符代码, 115), 不等于 (字符代码, 116), 不等于 (字符代码, 117), 不等于 (字符代码, 118), 不等于 (字符代码, 119), 不等于 (字符代码, 122)))
        赋值 (.内容, “只允许输入音标字符！”)
        赋值 (.背景颜色, #红色)
        返回 (0)
    .如果真结束
     ' 只有当输入的是音标等需要的字符时，才能显示，这里用了一个笨办法，只取需要的键代码。
     ' “: 5 a A b B d e E f F g h i j k l m n N o p Q r R s t T u v V w W z Z ”是输入音标用到的字符
    .如果真 (或者 (等于 (字符代码, 39), 等于 (字符代码, 34), 等于 (字符代码, 96)))
        赋值 (.被选择文本, .)
         ' 正常的重音符号输入为数字5，这里进行一下设置，当按下单引号等键时也自动转换成重音符号，建议输入音标时以鼠标操作为佳
        返回 (0)
    .如果真结束
    .如果真 (等于 (字符代码, 59))
        赋值 (.被选择文本, “:”) ' 当按下分号键时自动转换成冒号
        返回 (0)
    .如果真结束
    .如果真 (等于 (字符代码, #空格键))
        .如果真 (不等于 (当前索引, 0))
            播放音乐 (相加 (取运行目录 (), “\sound\”, 发音 [单词乱序] [当前索引]), )
             ' 输出单词或音标不存在空格的情况，所以在按下空格键时，除读一遍单词外，不做任何输入
        .如果真结束
        返回 (0)
    .如果真结束
    
    .如果 (或者 (小于 (相减 (取文本长度 (.内容), .被选择字符数), 音标字符数), 等于 (字符代码, 8)))
         ' 判断已输入的字符数量是否超出音标长度。是否是“BACKSPACE”键
        赋值 (.内容, “右键点音标听标准发音”)
        赋值 (.背景颜色, #墨绿)
    .否则
        赋值 (.内容, “输入音标长度已足够！”)
        赋值 (.背景颜色, #红色)
        返回 (0)
    .如果结束
    
.否则
    .如果真 (或者 (小于 (字符代码, 97), 大于 (字符代码, 122)))
        .如果真 (不等于 (字符代码, 8))
            赋值 (.内容, “只允许输入小写字母！”)
            赋值 (.背景颜色, #红色)
            返回 (0) ' 听写单词模式下，只有输入的是小写字母时或“BACKSPACE”时才执行输入
        .如果真结束
        
    .如果真结束
    .如果 (或者 (小于 (相减 (取文本长度 (.内容), .被选择字符数), 单词字符数), 等于 (字符代码, 8)))
        赋值 (.内容, “右键点音标听标准发音”)
        赋值 (.背景颜色, #墨绿)
    .否则
        赋值 (.内容, “输入单词长度已足够！”)
        赋值 (.背景颜色, #红色)
        返回 (0)
    .如果结束
    
.如果结束


.子程序 _读音_被单击, 空白型, , 
.如果真 (不等于 (当前索引, 0))
    播放音乐 (相加 (取运行目录 (), “\sound\”, 发音 [单词乱序] [当前索引]), )
     ' 读单词发音
.如果真结束
获取焦点 ()

.子程序 _音标按钮1_被单击, 空白型, , 
.如果 (.选中)
     ' 听写单词模式时，使音标按键无效
    .如果 (小于 (相减 (取文本长度 (.内容), .被选择字符数), 音标字符数))
        赋值 (.被选择文本, .)
        赋值 (.内容, “右键点音标听标准发音”)
        赋值 (.背景颜色, #墨绿)
    .否则
        赋值 (.内容, “输入音标长度已足够！”)
        赋值 (.背景颜色, #红色)
    .如果结束
     ' 这里主要是在光标位置用鼠标点击输入音标，输入前先判断一下当前已输入内容的长度，如果超出音标答案长度会提示不输入。这里有个小小的问题，即当输入的内容比音标答案长度少1时，输入双音节音标也是可以的。可能提示上会有一点儿不准确，但无关大局，所以不做详细判断了。
.否则
    赋值 (.内容, “听写单词模式时无效！”)
    赋值 (.背景颜色, #红色)
.如果结束
获取焦点 ()

.子程序 _音标按钮2_被单击, 空白型, , 
.如果 (.选中)
    .如果 (小于 (相减 (取文本长度 (.内容), .被选择字符数), 音标字符数))
        赋值 (.被选择文本, .)
        赋值 (.内容, “右键点音标听标准发音”)
        赋值 (.背景颜色, #墨绿)
    .否则
        赋值 (.内容, “输入音标长度已足够！”)
        赋值 (.背景颜色, #红色)
    .如果结束
    
.否则
    赋值 (.内容, “听写单词模式时无效！”)
    赋值 (.背景颜色, #红色)
.如果结束
获取焦点 ()

.子程序 _音标按钮3_被单击, 空白型, , 
.如果 (.选中)
    .如果 (小于 (相减 (取文本长度 (.内容), .被选择字符数), 音标字符数))
        赋值 (.被选择文本, .)
        赋值 (.内容, “右键点音标听标准发音”)
        赋值 (.背景颜色, #墨绿)
    .否则
        赋值 (.内容, “输入音标长度已足够！”)
        赋值 (.背景颜色, #红色)
    .如果结束
    
.否则
    赋值 (.内容, “听写单词模式时无效！”)
    赋值 (.背景颜色, #红色)
    
.如果结束
获取焦点 ()

.子程序 _音标按钮4_被单击, 空白型, , 
.如果 (.选中)
    .如果 (小于 (相减 (取文本长度 (.内容), .被选择字符数), 音标字符数))
        赋值 (.被选择文本, .)
        赋值 (.内容, “右键点音标听标准发音”)
        赋值 (.背景颜色, #墨绿)
    .否则
        赋值 (.内容, “输入音标长度已足够！”)
        赋值 (.背景颜色, #红色)
    .如果结束
    
.否则
    赋值 (.内容, “听写单词模式时无效！”)
    赋值 (.背景颜色, #红色)
.如果结束
获取焦点 ()

.子程序 _音标按钮5_被单击, 空白型, , 
.如果 (.选中)
    .如果 (小于 (相减 (取文本长度 (.内容), .被选择字符数), 音标字符数))
        赋值 (.被选择文本, .)
        赋值 (.内容, “右键点音标听标准发音”)
        赋值 (.背景颜色, #墨绿)
    .否则
        赋值 (.内容, “输入音标长度已足够！”)
        赋值 (.背景颜色, #红色)
    .如果结束
    
.否则
    赋值 (.内容, “听写单词模式时无效！”)
    赋值 (.背景颜色, #红色)
    
.如果结束
获取焦点 ()

.子程序 _音标按钮6_被单击, 空白型, , 
.如果 (.选中)
    .如果 (小于 (相减 (取文本长度 (.内容), .被选择字符数), 音标字符数))
        赋值 (.被选择文本, .)
        赋值 (.内容, “右键点音标听标准发音”)
        赋值 (.背景颜色, #墨绿)
    .否则
        赋值 (.内容, “输入音标长度已足够！”)
        赋值 (.背景颜色, #红色)
    .如果结束
    
.否则
    赋值 (.内容, “听写单词模式时无效！”)
    赋值 (.背景颜色, #红色)
    
.如果结束
获取焦点 ()

.子程序 _音标按钮7_被单击, 空白型, , 
.如果 (.选中)
    .如果 (小于 (相减 (取文本长度 (.内容), .被选择字符数), 音标字符数))
        赋值 (.被选择文本, .)
        赋值 (.内容, “右键点音标听标准发音”)
        赋值 (.背景颜色, #墨绿)
    .否则
        赋值 (.内容, “输入音标长度已足够！”)
        赋值 (.背景颜色, #红色)
    .如果结束
    
.否则
    赋值 (.内容, “听写单词模式时无效！”)
    赋值 (.背景颜色, #红色)
    
.如果结束
获取焦点 ()

.子程序 _音标按钮8_被单击, 空白型, , 
.如果 (.选中)
    .如果 (小于 (相减 (取文本长度 (.内容), .被选择字符数), 音标字符数))
        赋值 (.被选择文本, .)
        赋值 (.内容, “右键点音标听标准发音”)
        赋值 (.背景颜色, #墨绿)
    .否则
        赋值 (.内容, “输入音标长度已足够！”)
        赋值 (.背景颜色, #红色)
    .如果结束
    
.否则
    赋值 (.内容, “听写单词模式时无效！”)
    赋值 (.背景颜色, #红色)
    
.如果结束
获取焦点 ()

.子程序 _音标按钮9_被单击, 空白型, , 
.如果 (.选中)
    .如果 (小于 (相减 (取文本长度 (.内容), .被选择字符数), 音标字符数))
        赋值 (.被选择文本, .)
        赋值 (.内容, “右键点音标听标准发音”)
        赋值 (.背景颜色, #墨绿)
    .否则
        赋值 (.内容, “输入音标长度已足够！”)
        赋值 (.背景颜色, #红色)
    .如果结束
    
.否则
    赋值 (.内容, “听写单词模式时无效！”)
    赋值 (.背景颜色, #红色)
    
.如果结束
获取焦点 ()

.子程序 _音标按钮10_被单击, 空白型, , 
.如果 (.选中)
    .如果 (小于 (相减 (取文本长度 (.内容), .被选择字符数), 音标字符数))
        赋值 (.被选择文本, .)
        赋值 (.内容, “右键点音标听标准发音”)
        赋值 (.背景颜色, #墨绿)
    .否则
        赋值 (.内容, “输入音标长度已足够！”)
        赋值 (.背景颜色, #红色)
    .如果结束
    
.否则
    赋值 (.内容, “听写单词模式时无效！”)
    赋值 (.背景颜色, #红色)
    
.如果结束
获取焦点 ()

.子程序 _音标按钮11_被单击, 空白型, , 
.如果 (.选中)
    .如果 (小于 (相减 (取文本长度 (.内容), .被选择字符数), 音标字符数))
        赋值 (.被选择文本, .)
        赋值 (.内容, “右键点音标听标准发音”)
        赋值 (.背景颜色, #墨绿)
    .否则
        赋值 (.内容, “输入音标长度已足够！”)
        赋值 (.背景颜色, #红色)
    .如果结束
    
.否则
    赋值 (.内容, “听写单词模式时无效！”)
    赋值 (.背景颜色, #红色)
    
.如果结束
获取焦点 ()

.子程序 _音标按钮12_被单击, 空白型, , 
.如果 (.选中)
    .如果 (小于 (相减 (取文本长度 (.内容), .被选择字符数), 音标字符数))
        赋值 (.被选择文本, .)
        赋值 (.内容, “右键点音标听标准发音”)
        赋值 (.背景颜色, #墨绿)
    .否则
        赋值 (.内容, “输入音标长度已足够！”)
        赋值 (.背景颜色, #红色)
    .如果结束
    
.否则
    赋值 (.内容, “听写单词模式时无效！”)
    赋值 (.背景颜色, #红色)
    
.如果结束
获取焦点 ()

.子程序 _音标按钮13_被单击, 空白型, , 
.如果 (.选中)
    .如果 (小于 (相减 (取文本长度 (.内容), .被选择字符数), 音标字符数))
        赋值 (.被选择文本, .)
        赋值 (.内容, “右键点音标听标准发音”)
        赋值 (.背景颜色, #墨绿)
    .否则
        赋值 (.内容, “输入音标长度已足够！”)
        赋值 (.背景颜色, #红色)
    .如果结束
    
.否则
    赋值 (.内容, “听写单词模式时无效！”)
    赋值 (.背景颜色, #红色)
.如果结束
获取焦点 ()

.子程序 _音标按钮14_被单击, 空白型, , 
.如果 (.选中)
    .如果 (小于 (相减 (取文本长度 (.内容), .被选择字符数), 音标字符数))
        赋值 (.被选择文本, .)
        赋值 (.内容, “右键点音标听标准发音”)
        赋值 (.背景颜色, #墨绿)
    .否则
        赋值 (.内容, “输入音标长度已足够！”)
        赋值 (.背景颜色, #红色)
    .如果结束
    
.否则
    赋值 (.内容, “听写单词模式时无效！”)
    赋值 (.背景颜色, #红色)
    
.如果结束
获取焦点 ()

.子程序 _音标按钮15_被单击, 空白型, , 
.如果 (.选中)
    .如果 (小于 (相减 (取文本长度 (.内容), .被选择字符数), 音标字符数))
        赋值 (.被选择文本, .)
        赋值 (.内容, “右键点音标听标准发音”)
        赋值 (.背景颜色, #墨绿)
    .否则
        赋值 (.内容, “输入音标长度已足够！”)
        赋值 (.背景颜色, #红色)
    .如果结束
    
.否则
    赋值 (.内容, “听写单词模式时无效！”)
    赋值 (.背景颜色, #红色)
    
.如果结束
获取焦点 ()

.子程序 _音标按钮16_被单击, 空白型, , 
.如果 (.选中)
    .如果 (小于 (相减 (取文本长度 (.内容), .被选择字符数), 音标字符数))
        赋值 (.被选择文本, .)
        赋值 (.内容, “右键点音标听标准发音”)
        赋值 (.背景颜色, #墨绿)
    .否则
        赋值 (.内容, “输入音标长度已足够！”)
        赋值 (.背景颜色, #红色)
    .如果结束
    
.否则
    赋值 (.内容, “听写单词模式时无效！”)
    赋值 (.背景颜色, #红色)
    
.如果结束
获取焦点 ()

.子程序 _音标按钮17_被单击, 空白型, , 
.如果 (.选中)
    .如果 (小于 (相减 (取文本长度 (.内容), .被选择字符数), 音标字符数))
        赋值 (.被选择文本, .)
        赋值 (.内容, “右键点音标听标准发音”)
        赋值 (.背景颜色, #墨绿)
    .否则
        赋值 (.内容, “输入音标长度已足够！”)
        赋值 (.背景颜色, #红色)
    .如果结束
    
.否则
    赋值 (.内容, “听写单词模式时无效！”)
    赋值 (.背景颜色, #红色)
    
.如果结束
获取焦点 ()

.子程序 _音标按钮18_被单击, 空白型, , 
.如果 (.选中)
    .如果 (小于 (相减 (取文本长度 (.内容), .被选择字符数), 音标字符数))
        赋值 (.被选择文本, .)
        赋值 (.内容, “右键点音标听标准发音”)
        赋值 (.背景颜色, #墨绿)
    .否则
        赋值 (.内容, “输入音标长度已足够！”)
        赋值 (.背景颜色, #红色)
    .如果结束
    
.否则
    赋值 (.内容, “听写单词模式时无效！”)
    赋值 (.背景颜色, #红色)
    
.如果结束
获取焦点 ()

.子程序 _音标按钮19_被单击, 空白型, , 
.如果 (.选中)
    .如果 (小于 (相减 (取文本长度 (.内容), .被选择字符数), 音标字符数))
        赋值 (.被选择文本, .)
        赋值 (.内容, “右键点音标听标准发音”)
        赋值 (.背景颜色, #墨绿)
    .否则
        赋值 (.内容, “输入音标长度已足够！”)
        赋值 (.背景颜色, #红色)
    .如果结束
    
.否则
    赋值 (.内容, “听写单词模式时无效！”)
    赋值 (.背景颜色, #红色)
    
.如果结束
获取焦点 ()

.子程序 _音标按钮20_被单击, 空白型, , 
.如果 (.选中)
    .如果 (小于 (相减 (取文本长度 (.内容), .被选择字符数), 音标字符数))
        赋值 (.被选择文本, .)
        赋值 (.内容, “右键点音标听标准发音”)
        赋值 (.背景颜色, #墨绿)
    .否则
        赋值 (.内容, “输入音标长度已足够！”)
        赋值 (.背景颜色, #红色)
    .如果结束
    
.否则
    赋值 (.内容, “听写单词模式时无效！”)
    赋值 (.背景颜色, #红色)
    
.如果结束
获取焦点 ()

.子程序 _音标按钮21_被单击, 空白型, , 
.如果 (.选中)
    .如果 (小于 (相减 (取文本长度 (.内容), .被选择字符数), 音标字符数))
        赋值 (.被选择文本, .)
        赋值 (.内容, “右键点音标听标准发音”)
        赋值 (.背景颜色, #墨绿)
    .否则
        赋值 (.内容, “输入音标长度已足够！”)
        赋值 (.背景颜色, #红色)
    .如果结束
    
.否则
    赋值 (.内容, “听写单词模式时无效！”)
    赋值 (.背景颜色, #红色)
    
.如果结束
获取焦点 ()

.子程序 _音标按钮22_被单击, 空白型, , 
.如果 (.选中)
    .如果 (小于 (相减 (取文本长度 (.内容), .被选择字符数), 音标字符数))
        赋值 (.被选择文本, .)
        赋值 (.内容, “右键点音标听标准发音”)
        赋值 (.背景颜色, #墨绿)
    .否则
        赋值 (.内容, “输入音标长度已足够！”)
        赋值 (.背景颜色, #红色)
    .如果结束
    
.否则
    赋值 (.内容, “听写单词模式时无效！”)
    赋值 (.背景颜色, #红色)
    
.如果结束
获取焦点 ()

.子程序 _音标按钮23_被单击, 空白型, , 
.如果 (.选中)
    .如果 (小于 (相减 (取文本长度 (.内容), .被选择字符数), 音标字符数))
        赋值 (.被选择文本, .)
        赋值 (.内容, “右键点音标听标准发音”)
        赋值 (.背景颜色, #墨绿)
    .否则
        赋值 (.内容, “输入音标长度已足够！”)
        赋值 (.背景颜色, #红色)
    .如果结束
    
.否则
    赋值 (.内容, “听写单词模式时无效！”)
    赋值 (.背景颜色, #红色)
    
.如果结束
获取焦点 ()

.子程序 _音标按钮24_被单击, 空白型, , 
.如果 (.选中)
    .如果 (小于 (相减 (取文本长度 (.内容), .被选择字符数), 音标字符数))
        赋值 (.被选择文本, .)
        赋值 (.内容, “右键点音标听标准发音”)
        赋值 (.背景颜色, #墨绿)
    .否则
        赋值 (.内容, “输入音标长度已足够！”)
        赋值 (.背景颜色, #红色)
    .如果结束
    
.否则
    赋值 (.内容, “听写单词模式时无效！”)
    赋值 (.背景颜色, #红色)
    
.如果结束
获取焦点 ()

.子程序 _音标按钮25_被单击, 空白型, , 
.如果 (.选中)
    .如果 (小于 (相减 (取文本长度 (.内容), .被选择字符数), 音标字符数))
        赋值 (.被选择文本, .)
        赋值 (.内容, “右键点音标听标准发音”)
        赋值 (.背景颜色, #墨绿)
    .否则
        赋值 (.内容, “输入音标长度已足够！”)
        赋值 (.背景颜色, #红色)
    .如果结束
    
.否则
    赋值 (.内容, “听写单词模式时无效！”)
    赋值 (.背景颜色, #红色)
    
.如果结束
获取焦点 ()

.子程序 _音标按钮26_被单击, 空白型, , 
.如果 (.选中)
    .如果 (小于 (相减 (取文本长度 (.内容), .被选择字符数), 音标字符数))
        赋值 (.被选择文本, .)
        赋值 (.内容, “右键点音标听标准发音”)
        赋值 (.背景颜色, #墨绿)
    .否则
        赋值 (.内容, “输入音标长度已足够！”)
        赋值 (.背景颜色, #红色)
    .如果结束
    
.否则
    赋值 (.内容, “听写单词模式时无效！”)
    赋值 (.背景颜色, #红色)
    
.如果结束
获取焦点 ()

.子程序 _音标按钮27_被单击, 空白型, , 
.如果 (.选中)
    .如果 (小于 (相减 (取文本长度 (.内容), .被选择字符数), 音标字符数))
        赋值 (.被选择文本, .)
        赋值 (.内容, “右键点音标听标准发音”)
        赋值 (.背景颜色, #墨绿)
    .否则
        赋值 (.内容, “输入音标长度已足够！”)
        赋值 (.背景颜色, #红色)
    .如果结束
    
.否则
    赋值 (.内容, “听写单词模式时无效！”)
    赋值 (.背景颜色, #红色)
    
.如果结束
获取焦点 ()

.子程序 _音标按钮28_被单击, 空白型, , 
.如果 (.选中)
    .如果 (小于 (相减 (取文本长度 (.内容), .被选择字符数), 音标字符数))
        赋值 (.被选择文本, .)
        赋值 (.内容, “右键点音标听标准发音”)
        赋值 (.背景颜色, #墨绿)
    .否则
        赋值 (.内容, “输入音标长度已足够！”)
        赋值 (.背景颜色, #红色)
    .如果结束
    
.否则
    赋值 (.内容, “听写单词模式时无效！”)
    赋值 (.背景颜色, #红色)
    
.如果结束
获取焦点 ()

.子程序 _音标按钮29_被单击, 空白型, , 
.如果 (.选中)
    .如果 (小于 (相减 (取文本长度 (.内容), .被选择字符数), 音标字符数))
        赋值 (.被选择文本, .)
        赋值 (.内容, “右键点音标听标准发音”)
        赋值 (.背景颜色, #墨绿)
    .否则
        赋值 (.内容, “输入音标长度已足够！”)
        赋值 (.背景颜色, #红色)
    .如果结束
    
.否则
    赋值 (.内容, “听写单词模式时无效！”)
    赋值 (.背景颜色, #红色)
    
.如果结束
获取焦点 ()

.子程序 _音标按钮30_被单击, 空白型, , 
.如果 (.选中)
    .如果 (小于 (相减 (取文本长度 (.内容), .被选择字符数), 音标字符数))
        赋值 (.被选择文本, .)
        赋值 (.内容, “右键点音标听标准发音”)
        赋值 (.背景颜色, #墨绿)
    .否则
        赋值 (.内容, “输入音标长度已足够！”)
        赋值 (.背景颜色, #红色)
    .如果结束
    
.否则
    赋值 (.内容, “听写单词模式时无效！”)
    赋值 (.背景颜色, #红色)
    
.如果结束
获取焦点 ()

.子程序 _音标按钮31_被单击, 空白型, , 
.如果 (.选中)
    .如果 (小于 (相减 (取文本长度 (.内容), .被选择字符数), 音标字符数))
        赋值 (.被选择文本, .)
        赋值 (.内容, “右键点音标听标准发音”)
        赋值 (.背景颜色, #墨绿)
    .否则
        赋值 (.内容, “输入音标长度已足够！”)
        赋值 (.背景颜色, #红色)
    .如果结束
    
.否则
    赋值 (.内容, “听写单词模式时无效！”)
    赋值 (.背景颜色, #红色)
    
.如果结束
获取焦点 ()

.子程序 _音标按钮32_被单击, 空白型, , 
.如果 (.选中)
    .如果 (小于 (相减 (取文本长度 (.内容), .被选择字符数), 音标字符数))
        赋值 (.被选择文本, .)
        赋值 (.内容, “右键点音标听标准发音”)
        赋值 (.背景颜色, #墨绿)
    .否则
        赋值 (.内容, “输入音标长度已足够！”)
        赋值 (.背景颜色, #红色)
    .如果结束
    
.否则
    赋值 (.内容, “听写单词模式时无效！”)
    赋值 (.背景颜色, #红色)
    
.如果结束
获取焦点 ()

.子程序 _音标按钮33_被单击, 空白型, , 
.如果 (.选中)
    .如果 (小于 (相减 (取文本长度 (.内容), .被选择字符数), 音标字符数))
        赋值 (.被选择文本, .)
        赋值 (.内容, “右键点音标听标准发音”)
        赋值 (.背景颜色, #墨绿)
    .否则
        赋值 (.内容, “输入音标长度已足够！”)
        赋值 (.背景颜色, #红色)
    .如果结束
    
.否则
    赋值 (.内容, “听写单词模式时无效！”)
    赋值 (.背景颜色, #红色)
    
.如果结束
获取焦点 ()

.子程序 _音标按钮34_被单击, 空白型, , 
.如果 (.选中)
    .如果 (小于 (相减 (取文本长度 (.内容), .被选择字符数), 音标字符数))
        赋值 (.被选择文本, .)
        赋值 (.内容, “右键点音标听标准发音”)
        赋值 (.背景颜色, #墨绿)
    .否则
        赋值 (.内容, “输入音标长度已足够！”)
        赋值 (.背景颜色, #红色)
    .如果结束
    
.否则
    赋值 (.内容, “听写单词模式时无效！”)
    赋值 (.背景颜色, #红色)
    
.如果结束
获取焦点 ()

.子程序 _音标按钮35_被单击, 空白型, , 
.如果 (.选中)
    .如果 (小于 (相减 (取文本长度 (.内容), .被选择字符数), 音标字符数))
        赋值 (.被选择文本, .)
        赋值 (.内容, “右键点音标听标准发音”)
        赋值 (.背景颜色, #墨绿)
    .否则
        赋值 (.内容, “输入音标长度已足够！”)
        赋值 (.背景颜色, #红色)
    .如果结束
    
.否则
    赋值 (.内容, “听写单词模式时无效！”)
    赋值 (.背景颜色, #红色)
    
.如果结束
获取焦点 ()

.子程序 _音标按钮36_被单击, 空白型, , 
.如果 (.选中)
    .如果 (小于 (相减 (取文本长度 (.内容), .被选择字符数), 音标字符数))
        赋值 (.被选择文本, .)
        赋值 (.内容, “右键点音标听标准发音”)
        赋值 (.背景颜色, #墨绿)
    .否则
        赋值 (.内容, “输入音标长度已足够！”)
        赋值 (.背景颜色, #红色)
    .如果结束
    
.否则
    赋值 (.内容, “听写单词模式时无效！”)
    赋值 (.背景颜色, #红色)
    
.如果结束
获取焦点 ()

.子程序 _音标按钮37_被单击, 空白型, , 
.如果 (.选中)
    .如果 (小于 (相减 (取文本长度 (.内容), .被选择字符数), 音标字符数))
        赋值 (.被选择文本, .)
        赋值 (.内容, “右键点音标听标准发音”)
        赋值 (.背景颜色, #墨绿)
    .否则
        赋值 (.内容, “输入音标长度已足够！”)
        赋值 (.背景颜色, #红色)
    .如果结束
    
.否则
    赋值 (.内容, “听写单词模式时无效！”)
    赋值 (.背景颜色, #红色)
    
.如果结束
获取焦点 ()

.子程序 _音标按钮38_被单击, 空白型, , 
.如果 (.选中)
    .如果 (小于 (相减 (取文本长度 (.内容), .被选择字符数), 音标字符数))
        赋值 (.被选择文本, .)
        赋值 (.内容, “右键点音标听标准发音”)
        赋值 (.背景颜色, #墨绿)
    .否则
        赋值 (.内容, “输入音标长度已足够！”)
        赋值 (.背景颜色, #红色)
    .如果结束
    
.否则
    赋值 (.内容, “听写单词模式时无效！”)
    赋值 (.背景颜色, #红色)
    
.如果结束
获取焦点 ()

.子程序 _音标按钮39_被单击, 空白型, , 
.如果 (.选中)
    .如果 (小于 (相减 (取文本长度 (.内容), .被选择字符数), 音标字符数))
        赋值 (.被选择文本, .)
        赋值 (.内容, “右键点音标听标准发音”)
        赋值 (.背景颜色, #墨绿)
    .否则
        赋值 (.内容, “输入音标长度已足够！”)
        赋值 (.背景颜色, #红色)
    .如果结束
    
.否则
    赋值 (.内容, “听写单词模式时无效！”)
    赋值 (.背景颜色, #红色)
    
.如果结束
获取焦点 ()

.子程序 _音标按钮40_被单击, 空白型, , 
.如果 (.选中)
    .如果 (小于 (相减 (取文本长度 (.内容), .被选择字符数), 音标字符数))
        赋值 (.被选择文本, .)
        赋值 (.内容, “右键点音标听标准发音”)
        赋值 (.背景颜色, #墨绿)
    .否则
        赋值 (.内容, “输入音标长度已足够！”)
        赋值 (.背景颜色, #红色)
    .如果结束
    
.否则
    赋值 (.内容, “听写单词模式时无效！”)
    赋值 (.背景颜色, #红色)
    
.如果结束
获取焦点 ()

.子程序 _音标按钮41_被单击, 空白型, , 
.如果 (.选中)
    .如果 (小于 (相减 (取文本长度 (.内容), .被选择字符数), 音标字符数))
        赋值 (.被选择文本, .)
        赋值 (.内容, “右键点音标听标准发音”)
        赋值 (.背景颜色, #墨绿)
    .否则
        赋值 (.内容, “输入音标长度已足够！”)
        赋值 (.背景颜色, #红色)
    .如果结束
    
.否则
    赋值 (.内容, “听写单词模式时无效！”)
    赋值 (.背景颜色, #红色)
    
.如果结束
获取焦点 ()

.子程序 _音标按钮42_被单击, 空白型, , 
.如果 (.选中)
    .如果 (小于 (相减 (取文本长度 (.内容), .被选择字符数), 音标字符数))
        赋值 (.被选择文本, .)
        赋值 (.内容, “右键点音标听标准发音”)
        赋值 (.背景颜色, #墨绿)
    .否则
        赋值 (.内容, “输入音标长度已足够！”)
        赋值 (.背景颜色, #红色)
    .如果结束
    
.否则
    赋值 (.内容, “听写单词模式时无效！”)
    赋值 (.背景颜色, #红色)
    
.如果结束
获取焦点 ()

.子程序 _音标按钮43_被单击, 空白型, , 
.如果 (.选中)
    .如果 (小于 (相减 (取文本长度 (.内容), .被选择字符数), 音标字符数))
        赋值 (.被选择文本, .)
        赋值 (.内容, “右键点音标听标准发音”)
        赋值 (.背景颜色, #墨绿)
    .否则
        赋值 (.内容, “输入音标长度已足够！”)
        赋值 (.背景颜色, #红色)
    .如果结束
    
.否则
    赋值 (.内容, “听写单词模式时无效！”)
    赋值 (.背景颜色, #红色)
    
.如果结束
获取焦点 ()

.子程序 _音标按钮44_被单击, 空白型, , 
.如果 (.选中)
    .如果 (小于 (相减 (取文本长度 (.内容), .被选择字符数), 音标字符数))
        赋值 (.被选择文本, .)
        赋值 (.内容, “右键点音标听标准发音”)
        赋值 (.背景颜色, #墨绿)
    .否则
        赋值 (.内容, “输入音标长度已足够！”)
        赋值 (.背景颜色, #红色)
    .如果结束
    
.否则
    赋值 (.内容, “听写单词模式时无效！”)
    赋值 (.背景颜色, #红色)
    
.如果结束
获取焦点 ()

.子程序 _音标按钮45_被单击, 空白型, , 
.如果 (.选中)
    .如果 (小于 (相减 (取文本长度 (.内容), .被选择字符数), 音标字符数))
        赋值 (.被选择文本, .)
        赋值 (.内容, “右键点音标听标准发音”)
        赋值 (.背景颜色, #墨绿)
    .否则
        赋值 (.内容, “输入音标长度已足够！”)
        赋值 (.背景颜色, #红色)
    .如果结束
    
.否则
    赋值 (.内容, “听写单词模式时无效！”)
    赋值 (.背景颜色, #红色)
    
.如果结束
获取焦点 ()

.子程序 _音标按钮46_被单击, 空白型, , 
.如果 (.选中)
    .如果 (小于 (相减 (取文本长度 (.内容), .被选择字符数), 音标字符数))
        赋值 (.被选择文本, .)
        赋值 (.内容, “右键点音标听标准发音”)
        赋值 (.背景颜色, #墨绿)
    .否则
        赋值 (.内容, “输入音标长度已足够！”)
        赋值 (.背景颜色, #红色)
    .如果结束
    
.否则
    赋值 (.内容, “听写单词模式时无效！”)
    赋值 (.背景颜色, #红色)
    
.如果结束
获取焦点 ()

.子程序 _音标按钮47_被单击, 空白型, , 
.如果 (.选中)
    .如果 (小于 (相减 (取文本长度 (.内容), .被选择字符数), 音标字符数))
        赋值 (.被选择文本, .)
        赋值 (.内容, “右键点音标听标准发音”)
        赋值 (.背景颜色, #墨绿)
    .否则
        赋值 (.内容, “输入音标长度已足够！”)
        赋值 (.背景颜色, #红色)
    .如果结束
    
.否则
    赋值 (.内容, “听写单词模式时无效！”)
    赋值 (.背景颜色, #红色)
    
.如果结束
获取焦点 ()

.子程序 _音标按钮48_被单击, 空白型, , 
.如果 (.选中)
    .如果 (小于 (相减 (取文本长度 (.内容), .被选择字符数), 音标字符数))
        赋值 (.被选择文本, .)
        赋值 (.内容, “右键点音标听标准发音”)
        赋值 (.背景颜色, #墨绿)
    .否则
        赋值 (.内容, “输入音标长度已足够！”)
        赋值 (.背景颜色, #红色)
    .如果结束
    
.否则
    赋值 (.内容, “听写单词模式时无效！”)
    赋值 (.背景颜色, #红色)
    
.如果结束
获取焦点 ()

.子程序 _音标按钮49_被单击, 空白型, , 
.如果 (.选中)
    .如果 (小于 (相减 (取文本长度 (.内容), .被选择字符数), 音标字符数))
        赋值 (.被选择文本, .)
        赋值 (.内容, “右键点音标听标准发音”)
        赋值 (.背景颜色, #墨绿)
    .否则
        赋值 (.内容, “输入音标长度已足够！”)
        赋值 (.背景颜色, #红色)
    .如果结束
    
.否则
    赋值 (.内容, “听写单词模式时无效！”)
    赋值 (.背景颜色, #红色)
    
.如果结束
获取焦点 ()

.子程序 _音标按钮1_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

播放音乐 (#一, )
 ' 已将48个音标的发音放入了程序资源，右键点击可听提示发音，下同

.子程序 _音标按钮2_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

播放音乐 (#二, )

.子程序 _音标按钮3_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

播放音乐 (#三, )

.子程序 _音标按钮4_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

播放音乐 (#四, )

.子程序 _音标按钮5_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

播放音乐 (#五, )

.子程序 _音标按钮6_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

播放音乐 (#六, )

.子程序 _音标按钮7_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

播放音乐 (#七, )

.子程序 _音标按钮8_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

播放音乐 (#八, )

.子程序 _音标按钮9_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

播放音乐 (#九, )

.子程序 _音标按钮10_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

播放音乐 (#十, )

.子程序 _音标按钮11_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

播放音乐 (#十一, )

.子程序 _音标按钮12_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

播放音乐 (#十二, )

.子程序 _音标按钮13_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

播放音乐 (#十三, )

.子程序 _音标按钮14_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

播放音乐 (#十四, )

.子程序 _音标按钮15_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

播放音乐 (#十五, )

.子程序 _音标按钮16_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

播放音乐 (#十六, )

.子程序 _音标按钮17_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

播放音乐 (#十七, )

.子程序 _音标按钮18_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

播放音乐 (#十八, )

.子程序 _音标按钮19_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

播放音乐 (#十九, )

.子程序 _音标按钮20_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

播放音乐 (#二十, )

.子程序 _音标按钮21_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

播放音乐 (#二一, )

.子程序 _音标按钮22_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

播放音乐 (#二二, )

.子程序 _音标按钮23_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

播放音乐 (#二三, )

.子程序 _音标按钮24_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

播放音乐 (#二四, )

.子程序 _音标按钮25_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

播放音乐 (#二五, )

.子程序 _音标按钮26_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

播放音乐 (#二六, )

.子程序 _音标按钮27_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

播放音乐 (#二七, )

.子程序 _音标按钮28_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

播放音乐 (#二八, )

.子程序 _音标按钮29_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

播放音乐 (#二九, )

.子程序 _音标按钮30_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

播放音乐 (#三十, )

.子程序 _音标按钮31_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

播放音乐 (#三一, )

.子程序 _音标按钮32_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

播放音乐 (#三二, )

.子程序 _音标按钮33_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

播放音乐 (#三三, )

.子程序 _音标按钮34_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

播放音乐 (#三四, )

.子程序 _音标按钮35_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

播放音乐 (#三五, )

.子程序 _音标按钮36_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

播放音乐 (#三六, )

.子程序 _音标按钮37_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

播放音乐 (#三七, )

.子程序 _音标按钮38_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

播放音乐 (#三八, )

.子程序 _音标按钮39_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

播放音乐 (#三九, )

.子程序 _音标按钮40_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

播放音乐 (#四十, )

.子程序 _音标按钮41_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

播放音乐 (#四一, )

.子程序 _音标按钮42_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

播放音乐 (#四二, )

.子程序 _音标按钮43_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

播放音乐 (#四三, )

.子程序 _音标按钮44_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

播放音乐 (#四四, )

.子程序 _音标按钮45_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

播放音乐 (#四五, )

.子程序 _音标按钮46_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

播放音乐 (#四六, )

.子程序 _音标按钮47_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

播放音乐 (#四七, )

.子程序 _音标按钮48_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

播放音乐 (#四八, )

.子程序 __启动窗口_将被销毁, 空白型, , 
 ' 在程序关闭前，保存各项设置
.如果 (.选中)
    写配置项 (配置文件名, “参数设置”, “听写模式”, “1”)
.否则
    写配置项 (配置文件名, “参数设置”, “听写模式”, “0”)
.如果结束
.如果 (等于 (显示提示窗口, 真))
    写配置项 (配置文件名, “参数设置”, “提示窗口”, “1”)
.否则
    写配置项 (配置文件名, “参数设置”, “提示窗口”, “0”)
.如果结束
写配置项 (配置文件名, “参数设置”, “单词乱序方案”, 到文本 (单词乱序方案))
.如果 (.选中)
    写配置项 (配置文件名, “参数设置”, “显示单词（音标）”, “1”)
.否则
    写配置项 (配置文件名, “参数设置”, “显示单词（音标）”, “0”)
.如果结束
.如果 (.选中)
    写配置项 (配置文件名, “参数设置”, “显示解释”, “1”)
.否则
    写配置项 (配置文件名, “参数设置”, “显示解释”, “0”)
.如果结束
.如果 (.选中)
    写配置项 (配置文件名, “参数设置”, “出错提示”, “1”)
.否则
    写配置项 (配置文件名, “参数设置”, “出错提示”, “0”)
.如果结束
.如果 (.选中)
    写配置项 (配置文件名, “参数设置”, “出错清除”, “1”)
.否则
    写配置项 (配置文件名, “参数设置”, “出错清除”, “0”)
.如果结束
.如果 (.选中)
    写配置项 (配置文件名, “参数设置”, “切换发音”, “1”)
.否则
    写配置项 (配置文件名, “参数设置”, “切换发音”, “0”)
.如果结束
写配置项 (配置文件名, “参数设置”, “当前索引”, 到文本 (当前索引))


.子程序 _音标单词输入框_被双击, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.内容, “”)

.子程序 _快捷帮助_被单击, 空白型, , 
载入 (提示窗口, , 真)

.子程序 _音标单词输入框_鼠标右键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

返回 (假)
 ' 屏蔽掉该编辑框的右键菜单，本来想只屏蔽掉右键的粘贴，但截获消息功能不是使用易的官方支持库，这方面知识比较欠缺，还需要进一步学习

.窗口程序集 窗口程序集2, , , 

.子程序 _提示窗口_创建完毕, 空白型, , 
未知支持库函数_0 (1)
赋值 (.图片, #显示界面)
.如果 (等于 (显示提示窗口, 真))
    赋值 (.选中, 真)
.否则
    赋值 (.选中, 假)
    
.如果结束
.如果 (等于 (_启动窗口..选中, 真))
    赋值 (.标题, 相加 (“    听写音标模式 快捷帮助：”, #换行符, #换行符))
    赋值 (.标题, 相加 (“    点”, #左引号, “前一个”, #右引号, “或”, #左引号, “下一个”, #右引号, “按键后，根据单词发音写出音标（用鼠标在音标按键上选择）。”, #换行符, #换行符, “    点”, #左引号, “确定”, #右引号, “或按回车键检验正误。”, #换行符, #换行符, “    点”, #左引号, “读音”, #右引号, “或按空格键可重复听标准发音。”, #换行符, #换行符, “    点”, #左引号, “提示”, #右引号, “或按ESC键直接看答案。”))
.否则
    赋值 (.标题, 相加 (“    听写单词模式操作帮助：”, #换行符, #换行符))
    赋值 (.标题, 相加 (“    点”, #左引号, “前一个”, #右引号, “或”, #左引号, “下一个”, #右引号, “按键后，根据单词发音及音标写出单词（用键盘输入）。”, #换行符, #换行符, “    点”, #左引号, “确定”, #右引号, “或按回车键检验正误。”, #换行符, #换行符, “    点”, #左引号, “读音”, #右引号, “或按空格键可重复听标准发音。”, #换行符, #换行符, “    点”, #左引号, “提示”, #右引号, “或按ESC键直接看答案。”))
.如果结束


.子程序 _到学习界面_被单击, 空白型, , 
销毁 ()

.子程序 _提示窗口_将被销毁, 空白型, , 
.如果 (等于 (.选中, 真))
    赋值 (显示提示窗口, 真)
.否则
    赋值 (显示提示窗口, 假)
.如果结束



 ' 不属于任何一个程序集、类模块的函数：
