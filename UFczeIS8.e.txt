 ' 文件类型：Windows模块源码

 ' 程序名称：文件监控模块
 ' 程序描述：启动一个多线程序监视指定路径下文件变化，并调用指定子程序对其进行处理。

可自定义监控的操作、排除的目录或文件。
 ' 程序作者：尼卡特网络作坊
 ' 邮政编码：116001
 ' 联系地址：大连
 ' 联系电话：0411
 ' 传真号码：
 ' 电子信箱：necatel@163.com
 ' 主页地址：http://www.necatel.com
 ' 版权声明：网吧专业维护。
 ' 版本号：1.0
 ' 创建号：0.0



.常量 错误句柄, "-1", , INVALID_HANDLE_VALUE
.常量 , , , 
.常量 常规读取, "2147483648", , GENERIC_READ
.常量 常规写入, "1073741824", , GENERIC_WRITE
.常量 , , , 
.常量 只读共享, "1", , FILE_SHARE_READ
.常量 写入共享, "2", , FILE_SHARE_WRITE
.常量 , , , 
.常量 必须存在, "3", , OPEN_EXISTING
.常量 , , , 
.常量 备份恢复标记, "33554432", , FILE_FLAG_BACKUP_SEMANTICS
.常量 , , , 
.常量 变更_文件名称, "1", 公开, 文件被新建、删除、重命名时触发
.常量 变更_目录名称, "2", 公开, 目录被新建、删除、重命名时触发
.常量 变更_改变属性, "4", 公开, 目录或文件的只读、存档、系统、隐藏属性被改变时触发
.常量 变更_改变尺寸, "8", 公开, 目录或文件的大小被改变时触发
.常量 变更_修改时间, "16", 公开, 目录或文件的最后修改时间被改变时触发
.常量 变更_访问时间, "32", 公开, 目录或文件的最后访问时间被改变时触发
.常量 变更_创建时间, "64", 公开, 目录或文件的创建时间被改变时触发
.常量 变更_安全属性, "256", 公开, 目录或文件的安全属性被修改时触发，NTFS格式磁盘有效
.常量 , , , 
.常量 内存初始化, "64", , GMEM_ZEROINIT 新分配的内存块全部初始化成零
.常量 最大缓冲, "4096", , Max_Buffer
.常量 , , , 
.常量 操作_新建, "1", 公开, #变更_文件名称、#变更_目录名称中发生的新建事件
.常量 操作_删除, "2", 公开, #变更_文件名称、#变更_目录名称中发生的删除事件
.常量 操作_修改, "3", 公开, #变更_改变属性、#变更_改变尺寸、#变更_修改时间、#变更_访问时间、#变更_创建时间
.常量 操作_重命名_原名称, "4", 公开, #变更_文件名称、#变更_目录名称中发生的重命名事件的原始名称
.常量 操作_重命名_新名称, "5", 公开, #变更_文件名称、#变更_目录名称中发生的重命名事件的新名称


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 4 系统核心支持库
 ' spec A512548E76954B6E92C21055517615B0 2 1 特殊功能支持库
 ' EThread 5F99C1642A2F4e03850721B4F5D7C3F8 1 1 多线程支持库




数据类型 文件通知信息, , FILE_NOTIFY_INFORMATION
    .成员 下项地址, 整数型, , , NextEntryOffset，跳到下一记录的字符数，0表示为最后的记录。
    .成员 变更操作, 整数型, , , Action，发生变更的类型，必须是固定常量[操作_]之一。
    .成员 文件名长度, 整数型, , , FileNameLength，发生变更的文件或目录名称长度
    .成员 文件名称, 整数型, , , lpFileName，包含相对于监控路径句柄的相对地址文件名实际长度


.DLL命令 创建设备, 整数型, "", "CreateFileA", , 打开和创建文件、管道、邮槽、通信服务、设备以及控制台，成功返回设备句柄，失败返回-1
    .参数 设备名称, 文本型, , lpFileName，要打开或创建的文件、管道、邮槽、通信服务、设备以及控制台名称
    .参数 常规权限, 整数型, , dwDesiredAccess，2147483648-常规读取；1073741824-常规写入：；0-单一设备信息。
    .参数 共享模式, 整数型, , dwShareMode，0-不共享，1-只读共享，2-写入共享。
    .参数 安全特性, 整数型, , lpSecurityAttributes，指向一个SECURITY_ATTRIBUTES结构的指针
    .参数 创建方式, 整数型, , dwCreationDisposition，OPEN_EXISTING-文件必须存在=3。
    .参数 标记属性, 整数型, , dwFlagsAndAttributes，一个或多个常量，备份恢复标记-33554432。
    .参数 模板文件, 整数型, , hTemplateFile，指定新设备要复制扩展属性的模板文件句柄，为0则无模板

.DLL命令 关闭句柄, 整数型, "", "CloseHandle", , 关闭一个内核对象。其中包括文件、文件映射、进程、线程、安全和同步对象等。非0表示成功。
    .参数 对象句柄, 整数型, , hObject，要关闭的对象句柄。

.DLL命令 创建线程, 整数型, "", "CreateThread", , 启动一个处理子程序的线程，可多个线程同时启动。
    .参数 安全描述结构, 整数型, , lpThreadAttributes，标准应为SECURITY_ATTRIBUTES类型
    .参数 初始堆栈大小, 整数型, , dwStackSize，默认为0
    .参数 线程函数指针, 子程序指针, , lpStartAddress
    .参数 子程序参数, 整数型, , lpParameter，传递给线程函数的参数
    .参数 创建标志, 整数型, , dwCreationFlags，当线程立即执行时为0
    .参数 线程索引, 整数型, 传址, lpThreadId，指向接收变量

.DLL命令 全局内存分配, 整数型, "", "GlobalAlloc", , 分配一个全局内存块。返回全局内存句柄。零表示失败。这个函数分配的内存块允许在8位边界以内。
    .参数 分配类型标记, 整数型, , wFlags，固定常量，如：内存初始化=64。
    .参数 分配长度, 整数型, , dwBytes

.DLL命令 全局内存释放, 整数型, "", "GlobalFree", , 释放指定的全局内存块。零表示成功，失败则返回内存句柄参数。
    .参数 内存句柄, 整数型, , hMem，要释放的一个全局内存块的句柄。内存释放后，向那个内存块写入数据的任何企图都可能造成进程堆的崩溃，导致严重的异常错误

.DLL命令 获取目录变更, 逻辑型, "", "ReadDirectoryChangesW", , 接收描述指定目录发生变更的信息，有变更事件被成功接收时返回真。
    .参数 目录句柄, 整数型, , hDirectory，指定监视目录的句柄。
    .参数 缓冲指针, 整数型, , lpBuffer，函数接收的信息以自定义类型存放到32位对齐内存地址中，这是其地址指针。
    .参数 缓冲长度, 整数型, , nBufferLength，指向上一参数的缓冲大小。
    .参数 包含子目录, 逻辑型, , bWatchSubtree，是否获取指定目录的子目录变更信息
    .参数 通知条件, 整数型, , dwNotifyFilter，固定常量集合，用于确定哪些变更信息需要被接收。
    .参数 同步返回长度, 整数型, 传址, lpBytesReturned，接收返回到参数缓冲指针的字节数，仅同步模式有效。
    .参数 覆盖指针, 整数型, , lpOverlapped，同步模式为0，仅在异步模式中为接收异步返回数据的自定义类型指针。
    .参数 常规完成操作, 整数型, , lpCompletionRoutine，操作完成或取消时调用的可警报状态子程序指针。无调用为0。

.DLL命令 宽字符到多字节, 整数型, "", "WideCharToMultiByte", , 
    .参数 代码页, 整数型, , CodePage
    .参数 标志, 整数型, , dwFlags
    .参数 宽字符文本, 整数型, , lpWideCharStr
    .参数 宽字符文本长度, 整数型, , cchWideChar
    .参数 双字节文本, 文本型, , lpMultiByteStr
    .参数 双字节文本长度, 整数型, , cchMultiByte
    .参数 默认文本, 整数型, , lpDefaultChar
    .参数 使用默认文本, 整数型, , lpUsedDefaultChar

.程序集 测试程序集, , , 

.子程序 _启动子程序, 整数型, , 请在本子程序中放置易模块初始化代码

_临时子程序 () ' 在初始化代码执行完毕后调用测试代码
返回 (0) ' 可以根据您的需要返回任意数值

.子程序 _临时子程序, 空白型, , 
 ' 本名称子程序用作测试程序用，仅在开发及调试环境中有效，编译发布程序前将被系统自动清空，请将所有用作测试的临时代码放在本子程序中。 ***注意不要修改本子程序的名称、参数及返回值类型。

.程序集 核心程序集, , , 如下程序集变量名的“全局”是指用于本模块各子程序间的全局，非真正意义的全局变量

.程序集变量 全局_含子目录, 逻辑型, , , 用于将用户输入的参数传递到整个模块，是否监控子目录
.程序集变量 全局_监视类型, 整数型, , , 用于将用户输入的参数传递到整个模块，监控哪些变更事件
.程序集变量 全局_监视目录, 文本型, , , 用于将用户输入的参数传递到整个模块，指定的完整监视路径
.程序集变量 全局_排除目录, 文本型, , "0", 用于将用户输入的参数传递到整个模块，要被排除的完整路径数组
.程序集变量 全局_排除文件, 文本型, , "0", 用于将用户输入的参数传递到整个模块，要被排除的文件后缀数组
.程序集变量 全局_处理程序, 子程序指针, , , 用于将用户输入的参数传递到整个模块，指定检测到符合条件的变更后要调用的程序指针
.子程序 启动路径监控, 整数型, , 启动一个多线程序监视指定路径下文件变化，成功返回被监控的路径句柄，失败返回-1。
.参数 处理程序, 子程序指针, , 处理监控事件的子程序指针。该子程序必须包含2个参数：参数1-文本型-符合监控条件的目录或文件名完整路径；参数2-整数型-说明参数1所发生的事件，该参数为[操作_]固定常量之一。
.参数 监控路径, 文本型, , 被监控的完整路径。可以为驱动器和任意目录。如果该路径不存在，则不发生监控而返回-1。
.参数 监控条件, 整数型, 可空, 设置被监控的事件，该参数值必须是一个或多个变更_[常量]组成。（如：位或 (#变更_文件名称, #变更_目录名称, #变更_改变属性)）留空表示监控所有事件。
.参数 监控子目录, 逻辑型, 可空, 是否包含监控目录的子目录，为真包含，为假不包含。默认为真。
.参数 目录过滤器, 文本型, 可空, 设置要排除的相对目录，多个相对路径间用“|”隔开，该目录及其子目录所有事件将不被接收。留空表示接收监控目录下所有目录事件。注意：该参数为相对路径（相对于监控目录参数）！格式如：“RECYCLER|System Volume Information|Windows\system32”。输入不正确则不发生排除，也不会报告错误。
.参数 后缀过滤器, 文本型, 可空, 设置要排除的文件名后缀，多个后缀名之间用“|”隔开，包含该后缀名的文件则不被接收。留空表示接收所有不在上一参数内的文件名。格式如“.exe|.txt|.bak”，通配符“.*”则表示只监控目录不监控文件（当然包含后缀的特殊名称目录也将被排除）。输入不正确则不发生排除，也不会报告错误。

.局部变量 设备句柄, 整数型, , , 
.局部变量 计次, 整数型, , , 
.局部变量 临时数组, 文本型, , "0", 
.局部变量 临时属性, 整数型, , , 

清除数组 (全局_排除目录) ' 默认不排除任何目录
清除数组 (全局_排除文件) ' 默认不排除任何文件
.如果真 (等于 (监控路径, “”))
    返回 ()

.子程序 停止路径监控, 逻辑型, , 停止一个正在运行的监控句柄，成功返回真，失败返回假。该功能存在一个BUG：停止后还会监控一次变更时间才会真正停止。。。
.参数 设备句柄, 整数型, 参考, 要停止的监控句柄，该参数应必须[启动路径监控]程序创建获得。注意参数的参考属性以将停止的消息返回给程序！

.如果真 (不等于 (设备句柄, 0))
    处理事件 ()
    .如果真 (不等于 (未知函数_167838148 (未知函数_167838149 (0, 0, &启动监控停止线程, 设备句柄, 0, 0)), 0)) ' 启动一条线程来将监控句柄关闭
        赋值 (设备句柄, 0)
        返回 (真)
    .如果真结束
    
.如果真结束
返回 (假)


.子程序 启动监控变更线程, 空白型, , 
.参数 设备句柄, 整数型, , 

.局部变量 实际长度, 整数型, , , 
.局部变量 内存句柄, 整数型, , , 
.局部变量 读取完成, 逻辑型, , , 

.循环判断首 ()
    赋值 (实际长度, 0)
    赋值 (内存句柄) ' 先创建用于存放监控事件的内存空间

.子程序 启动监控处理线程, 空白型, , 
.参数 基准地址, 整数型, , 

.局部变量 数据地址, 整数型, , , 
.局部变量 变更路径, 文本型, , , 
.局部变量 通知信息, 未知类型0x410101DC, , , 
.局部变量 许可区域, 整数型, 静态, , 

赋值 (数据地址, 基准地址) ' 使用新变量来获取内存中指定位置的数据，原参数变量用于最后释放掉内存
.循环判断首 ()
    赋值 (通知信息., 取字节集数据 (指针到字节集 (相加 (数据地址, 0), 4), #整数型, ))
    赋值 (通知信息., 取字节集数据 (指针到字节集 (相加 (数据地址, 4), 4), #整数型, ))
    赋值 (通知信息., 取字节集数据 (指针到字节集 (相加 (数据地址, 8), 4), #整数型, ))
    赋值 (通知信息., 相加 (数据地址, 12))
    赋值 (变更路径, 启动路径处理程序 (通知信息., 相除 (通知信息., 2))) ' 将从内存中取得的UniCode文件名转为Ansi文件名
     ' 该文件名是相对于监控路径的相对路径，调用的子程序也将其转为完整路径并判断是否符合条件，是否要过滤，如果被过滤则返回空文本。
    .如果真 (不等于 (变更路径, “”)) ' 没有被过滤时进入单独线程可用的许可区执行用户指定的子程序
        .如果真 (等于 (许可区域, 0))
            赋值 (许可区域, 未知支持库函数_1 ())
        .如果真结束
        未知支持库函数_3 (许可区域)
        调用子程序 (全局_处理程序, , , 变更路径, 通知信息.)
        未知支持库函数_4 (许可区域)
        
    .如果真结束
    赋值 (数据地址, 相加 (数据地址, 通知信息.))
.循环判断尾 (不等于 (通知信息., 0)) ' =0则表示没有发生下一个变更，则不循环。
未知函数_167838173 (基准地址)

 ' 函数返回值官方对应常量名称表：
 ' 操作_新建 = FILE_ACTION_ADDED
 ' 操作_删除 = FILE_ACTION_REMOVED
 ' 操作_修改 = FILE_ACTION_MODIFIED
 ' 操作_重命名_原名称 = FILE_ACTION_RENAMED_OLD_NAME
 ' 操作_重命名_新名称 = FILE_ACTION_NEW_NAME

.子程序 启动路径处理程序, 文本型, , 
.参数 宽字符, 整数型, , 
.参数 长度, 空白型, 可空, 

.局部变量 返回长度, 整数型, , , 
.局部变量 返回文本, 文本型, , , 
.局部变量 计次, 整数型, , , 
.局部变量 最后一级, 文本型, , , 

.如果真 (是否为空 (长度))
    赋值 (长度, -1)
.如果真结束
赋值 (返回长度, 未知函数_167838182 (0, 0, 宽字符, 长度, “”, 0, 0, 0))
赋值 (返回文本, 取空白文本 (返回长度))
赋值 (返回长度, 未知函数_167838182 (0, 0, 宽字符, 长度, 返回文本, 返回长度, 0, 0))
赋值 (返回文本, 相加 (全局_监视目录, 返回文本)) ' 这是本次变更完整的路径名，下面则开始按用户要排除的目录和文件开始过滤（如果指定）
.如果真 (大于 (取数组成员数 (全局_排除文件), 0))
    赋值 (最后一级, 取文本右边 (返回文本, 相减 (取文本长度 (返回文本), 倒找文本 (返回文本, “\”, , 真))))
    .计次循环首 (取数组成员数 (全局_排除文件), 计次)
         ' 这里的判断不很科学，如果最后一级是个目录且名称带有“.”则与排除后缀相同或排除后缀为.*时也会被排除
         ' 因为有的变更是删除，所以无法判断已删除的项目到底是个文件还是个目录。。。
        .如果真 (等于 (取文本右边 (返回文本, 取文本长度 (全局_排除文件 [计次])), 全局_排除文件 [计次])) ' 包含这个后缀
            赋值 (“”)
            跳出循环 ()
        .如果真结束
        .如果真 (并且 (等于 (全局_排除文件 [计次], “.*”), 不等于 (寻找文本 (最后一级, “.”, , 真), -1))) ' 通配符且变更项有后缀时
            赋值 (“”)
            跳出循环 ()
        .如果真结束
        
    .计次循环尾 ()
.如果真结束
.如果真 (并且 (大于 (取数组成员数 (全局_排除目录), 0), 不等于 (返回文本, “”))) ' 无论变化的是文件还是目录，只要在排除目录中都将忽略
    .计次循环首 (取数组成员数 (全局_排除目录), 计次)
        .如果真 (不等于 (寻找文本 (返回文本, 全局_排除目录 [计次], , 真), -1)) ' 在指定的目录下或就是指定的目录
            赋值 (返回文本, “”)
            跳出循环 ()
        .如果真结束
        
    .计次循环尾 ()
.如果真结束
返回 (返回文本)

.子程序 启动监控停止线程, 空白型, , 
.参数 句柄, 空白型, , 

未知函数_167838185 (句柄)


 ' 不属于任何一个程序集、类模块的函数：
