 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 798
    高度 = 592
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 0
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 假
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 已保存到：D:\易语言学习\Data\XYDDZs.e\_启动窗口_底图
    图标 =  ' 已保存到：D:\易语言学习\Data\XYDDZs.e\_启动窗口_图标.ico
    背景音乐 =  ' 空
    标题 = “心雨斗地主”
    帮助文件名 = “”



.图片 p1, " ' 已保存到：D:\易语言学习\Data\XYDDZs.e\p1", , 
.图片 p2, " ' 已保存到：D:\易语言学习\Data\XYDDZs.e\p2", , 
.图片 p3, " ' 已保存到：D:\易语言学习\Data\XYDDZs.e\p3", , 
.图片 p4, " ' 已保存到：D:\易语言学习\Data\XYDDZs.e\p4", , 
.图片 p5, " ' 已保存到：D:\易语言学习\Data\XYDDZs.e\p5", , 
.图片 p6, " ' 已保存到：D:\易语言学习\Data\XYDDZs.e\p6", , 
.图片 p7, " ' 已保存到：D:\易语言学习\Data\XYDDZs.e\p7", , 
.图片 p8, " ' 已保存到：D:\易语言学习\Data\XYDDZs.e\p8", , 
.图片 p9, " ' 已保存到：D:\易语言学习\Data\XYDDZs.e\p9", , 
.图片 p10, " ' 已保存到：D:\易语言学习\Data\XYDDZs.e\p10", , 
.图片 p11, " ' 已保存到：D:\易语言学习\Data\XYDDZs.e\p11", , 
.图片 p12, " ' 已保存到：D:\易语言学习\Data\XYDDZs.e\p12", , 
.图片 p13, " ' 已保存到：D:\易语言学习\Data\XYDDZs.e\p13", , 
.图片 h1, " ' 已保存到：D:\易语言学习\Data\XYDDZs.e\h1", , 
.图片 h2, " ' 已保存到：D:\易语言学习\Data\XYDDZs.e\h2", , 
.图片 h3, " ' 已保存到：D:\易语言学习\Data\XYDDZs.e\h3", , 
.图片 h4, " ' 已保存到：D:\易语言学习\Data\XYDDZs.e\h4", , 
.图片 h5, " ' 已保存到：D:\易语言学习\Data\XYDDZs.e\h5", , 
.图片 h6, " ' 已保存到：D:\易语言学习\Data\XYDDZs.e\h6", , 
.图片 h7, " ' 已保存到：D:\易语言学习\Data\XYDDZs.e\h7", , 
.图片 h8, " ' 已保存到：D:\易语言学习\Data\XYDDZs.e\h8", , 
.图片 h9, " ' 已保存到：D:\易语言学习\Data\XYDDZs.e\h9", , 
.图片 h10, " ' 已保存到：D:\易语言学习\Data\XYDDZs.e\h10", , 
.图片 h11, " ' 已保存到：D:\易语言学习\Data\XYDDZs.e\h11", , 
.图片 h12, " ' 已保存到：D:\易语言学习\Data\XYDDZs.e\h12", , 
.图片 h13, " ' 已保存到：D:\易语言学习\Data\XYDDZs.e\h13", , 
.图片 m1, " ' 已保存到：D:\易语言学习\Data\XYDDZs.e\m1", , 
.图片 m2, " ' 已保存到：D:\易语言学习\Data\XYDDZs.e\m2", , 
.图片 m3, " ' 已保存到：D:\易语言学习\Data\XYDDZs.e\m3", , 
.图片 m4, " ' 已保存到：D:\易语言学习\Data\XYDDZs.e\m4", , 
.图片 m5, " ' 已保存到：D:\易语言学习\Data\XYDDZs.e\m5", , 
.图片 m6, " ' 已保存到：D:\易语言学习\Data\XYDDZs.e\m6", , 
.图片 m7, " ' 已保存到：D:\易语言学习\Data\XYDDZs.e\m7", , 
.图片 m8, " ' 已保存到：D:\易语言学习\Data\XYDDZs.e\m8", , 
.图片 m9, " ' 已保存到：D:\易语言学习\Data\XYDDZs.e\m9", , 
.图片 m10, " ' 已保存到：D:\易语言学习\Data\XYDDZs.e\m10", , 
.图片 m11, " ' 已保存到：D:\易语言学习\Data\XYDDZs.e\m11", , 
.图片 m12, " ' 已保存到：D:\易语言学习\Data\XYDDZs.e\m12", , 
.图片 m13, " ' 已保存到：D:\易语言学习\Data\XYDDZs.e\m13", , 
.图片 f1, " ' 已保存到：D:\易语言学习\Data\XYDDZs.e\f1", , 
.图片 f2, " ' 已保存到：D:\易语言学习\Data\XYDDZs.e\f2", , 
.图片 f3, " ' 已保存到：D:\易语言学习\Data\XYDDZs.e\f3", , 
.图片 f4, " ' 已保存到：D:\易语言学习\Data\XYDDZs.e\f4", , 
.图片 f5, " ' 已保存到：D:\易语言学习\Data\XYDDZs.e\f5", , 
.图片 f6, " ' 已保存到：D:\易语言学习\Data\XYDDZs.e\f6", , 
.图片 f7, " ' 已保存到：D:\易语言学习\Data\XYDDZs.e\f7", , 
.图片 f8, " ' 已保存到：D:\易语言学习\Data\XYDDZs.e\f8", , 
.图片 f9, " ' 已保存到：D:\易语言学习\Data\XYDDZs.e\f9", , 
.图片 f10, " ' 已保存到：D:\易语言学习\Data\XYDDZs.e\f10", , 
.图片 f11, " ' 已保存到：D:\易语言学习\Data\XYDDZs.e\f11", , 
.图片 f12, " ' 已保存到：D:\易语言学习\Data\XYDDZs.e\f12", , 
.图片 f13, " ' 已保存到：D:\易语言学习\Data\XYDDZs.e\f13", , 
.图片 w1, " ' 已保存到：D:\易语言学习\Data\XYDDZs.e\w1", , 
.图片 w2, " ' 已保存到：D:\易语言学习\Data\XYDDZs.e\w2", , 
.图片 托盘图标, " ' 已保存到：D:\易语言学习\Data\XYDDZs.e\托盘图标", , 
.图片 bm, " ' 已保存到：D:\易语言学习\Data\XYDDZs.e\bm", , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 4 系统核心支持库
 ' iext 27bb20fdd3e145e4bee3db39ddd6e64c 1 2 扩展界面支持库一




.全局变量 底牌的牌, 图片框, , "3", 
.全局变量 出牌的牌, 图片框, , "20", 
.全局变量 中家的牌, 图片框, , "20", 
.全局变量 上家的牌, 图片框, , "20", 
.全局变量 下家的牌, 图片框, , "20", 
.全局变量 中家牌点, 整数型, , "0", 
.全局变量 下家牌点, 整数型, , "0", 
.全局变量 上家牌点, 整数型, , "0", 
.全局变量 底牌牌点, 整数型, , "0", 
.全局变量 出牌牌点, 整数型, , "0", 
.全局变量 牌号排列, 整数型, , , 0为不排列，1从小到大，2从大到小
.全局变量 已选择牌子, 整数型, , "0", 
.全局变量 出牌数组, 整数型, , "0", 判断数字出现的次数
.全局变量 刚出牌数组, 整数型, , "0", 
.全局变量 上家已出牌, 整数型, , "0", 
.全局变量 中家已出牌, 整数型, , "0", 
.全局变量 下家已出牌, 整数型, , "0", 
.全局变量 允许出牌, 整数型, , , 
.全局变量 匿名全局变量_985, 空白型, , , 
.全局变量 扑克比点, 整数型, , , 
.全局变量 扑克点数, 整数型, , "0", 
.全局变量 牌型, 整数型, , , 
.全局变量 四张炸弹比点, 整数型, , , 
.全局变量 玩家序号, 整数型, , , 
.全局变量 匿名全局变量_230, 空白型, , , 

.窗口程序集 窗口程序集1, , , 

.子程序 __启动窗口_创建完毕, 空白型, , 
赋值 (牌号排列, 1)
初始化 ()
赋值 (.可视, 假)
赋值 (.可视, 假)
赋值 (.可视, 假)
赋值 (.可视, 假)
赋值 (.可视, 假)
赋值 (.可视, 假)
赋值 (.可视, 假)
赋值 (.可视, 假)
赋值 (.可视, 假)
赋值 (.可视, 假)
赋值 (.可视, 假)
赋值 (.可视, 假)
赋值 (.可视, 假)
赋值 (.可视, 假)
赋值 (.可视, 假)
赋值 (.可视, 假)
赋值 (.可视, 假)
赋值 (.可视, 假)


.子程序 初始化, 空白型, , 
.局部变量 i, 整数型, , , 

.计次循环首 (20, i)
    复制窗口组件 (出牌的牌 [i])
    赋值 (出牌的牌 [i], 标记, 到文本 (i))
.计次循环尾 ()
.计次循环首 (20, i)
    复制窗口组件 (上家的牌 [i])
    赋值 (上家的牌 [i], 标记, 到文本 (i))
.计次循环尾 ()
.计次循环首 (20, i)
    复制窗口组件 (中家的牌 [i])
    赋值 (中家的牌 [i], 标记, 到文本 (i))
.计次循环尾 ()
.计次循环首 (20, i)
    复制窗口组件 (下家的牌 [i])
    赋值 (下家的牌 [i], 标记, 到文本 (i))
.计次循环尾 ()
.计次循环首 (3, i)
    复制窗口组件 (底牌的牌 [i])
    赋值 (底牌的牌 [i], 标记, 到文本 (i))
.计次循环尾 ()

.子程序 _发牌按钮_被单击, 空白型, , 
.局部变量 i, 整数型, , , 

.计次循环首 (20, i)
    赋值 (上家的牌 [i], 禁止, 假)
    赋值 (下家的牌 [i], 禁止, 假)
    赋值 (中家的牌 [i], 禁止, 假)
.计次循环尾 ()
赋值 (.可视, 假)
赋值 (.可视, 假)
赋值 (.可视, 假)
赋值 (.可视, 假)
赋值 (.可视, 假)
赋值 (.可视, 假)
赋值 (.可视, 假)
赋值 (.可视, 假)
赋值 (.可视, 假)
赋值 (.可视, 假)
赋值 (.可视, 假)
赋值 (.可视, 假)
赋值 (.可视, 假)
赋值 (.可视, 假)
赋值 (.可视, 假)
洗牌 ()
洗牌 ()
洗牌 ()
隐藏底牌 (底牌牌点)
显示出的牌 (出牌牌点)
显示上家的牌 (上家牌点)
显示中家的牌 (中家牌点)
显示下家的牌 (下家牌点)
赋值 (.可视, 真)
赋值 (.可视, 真)
赋值 (.可视, 真)


.子程序 显示底牌, 空白型, , 
.参数 参数, 整数型, 数组, 

.局部变量 横向位置, 整数型, , , 显示自己牌用
.局部变量 i, 整数型, , , 

赋值 (横向位置, .左边)
.计次循环首 (取数组成员数 (参数), i)
    赋值 (底牌的牌 [i], 左边, 横向位置)
    赋值 (底牌的牌 [i], 可视, 真)
    赋值 (底牌的牌 [i], 图片, 返回扑克 (1, 到数值 (参数 [i])))
    赋值 (横向位置, 相加 (横向位置, 75))
.计次循环尾 ()

.子程序 隐藏底牌, 空白型, , 
.参数 参数, 整数型, 数组, 

.局部变量 横向位置, 整数型, , , 显示自己牌用
.局部变量 i, 整数型, , , 

 ' 横向位置 ＝ 315 － ((取数组成员数 (参数) － 1) × 15 ＋ 57) ÷ 2
 ' 横向位置 ＝ _启动窗口.宽度 ÷ 2 － ((取数组成员数 (参数) － 1) × 20 ＋ 160) ÷ 2
赋值 (横向位置, .左边)
.计次循环首 (取数组成员数 (参数), i)
    赋值 (底牌的牌 [i], 左边, 横向位置)
    赋值 (底牌的牌 [i], 可视, 真)
    赋值 (底牌的牌 [i], 图片, 返回扑克 (1, 到数值 (参数 [i])))
    赋值 (横向位置, 相加 (横向位置, 75))
.计次循环尾 ()


.子程序 显示上家的牌, 空白型, , 
.参数 参数, 整数型, 数组, 

.局部变量 纵向位置, 整数型, , , 显示上下家牌用
.局部变量 i, 整数型, , , 

 ' 纵向位置 ＝ _启动窗口.高度 ÷ 2 － (20 × 15 ＋ 96) ÷ 2
赋值 (纵向位置, 相减 (相除 (_启动窗口., 2), 相除 (相加 (相乘 (相减 (取数组成员数 (参数), 1), 20), 57), 2)))

.计次循环首 (20, i)
    赋值 (上家的牌 [i], 可视, 假)
.计次循环尾 ()
.计次循环首 (取数组成员数 (参数), i)
    赋值 (上家的牌 [i], 左边, .左边)
    赋值 (上家的牌 [i], 顶边, 纵向位置)
    赋值 (上家的牌 [i], 可视, 真)
    赋值 (上家的牌 [i], 图片, 返回扑克 (1, 到数值 (参数 [i])))
    赋值 (纵向位置, 相加 (纵向位置, 15))
.计次循环尾 ()
.如果 (等于 (牌号排列, 1))
    数组排序 (上家牌点, 真) ' 从小到大
.否则
    数组排序 (上家牌点, 真) ' 从小到大
.如果结束
.计次循环首 (取数组成员数 (参数), i)
    处理事件 ()
    赋值 (上家的牌 [i], 图片, 返回扑克 (1, 到数值 (参数 [i])))
     ' 上家的牌 [i].图片 ＝ 返回扑克 (0, 到数值 (参数 [i]))
.计次循环尾 ()





.子程序 显示中家的牌, 空白型, , 
.参数 参数, 整数型, 数组, 

.局部变量 横向位置, 整数型, , , 显示自己牌用
.局部变量 i, 整数型, , , 

赋值 (横向位置, 相减 (相除 (_启动窗口., 2), 相除 (相加 (相乘 (相减 (取数组成员数 (参数), 1), 20), 57), 2)))
.计次循环首 (20, i)
    赋值 (中家的牌 [i], 可视, 假)
.计次循环尾 ()
.计次循环首 (取数组成员数 (参数), i)
    赋值 (中家的牌 [i], 顶边, .顶边)
    赋值 (中家的牌 [i], 左边, 横向位置)
    赋值 (中家的牌 [i], 可视, 真)
    赋值 (中家的牌 [i], 图片, 返回扑克 (1, 到数值 (参数 [i])))
    赋值 (横向位置, 相加 (横向位置, 20))
.计次循环尾 ()
.如果真 (不等于 (牌号排列, 0)) ' 为零不排列
    .如果 (等于 (牌号排列, 1))
        数组排序 (中家牌点, 真) ' 从小到大
    .否则
        数组排序 (中家牌点, 真) ' 从小到大
    .如果结束
    .计次循环首 (取数组成员数 (参数), i)
        处理事件 ()
        赋值 (中家的牌 [i], 图片, 返回扑克 (1, 到数值 (参数 [i])))
    .计次循环尾 ()
.如果真结束


.子程序 显示下家的牌, 空白型, , 
.参数 参数, 整数型, 数组, 

.局部变量 纵向位置, 整数型, , , 显示上下家牌用
.局部变量 i, 整数型, , , 

 ' 纵向位置 ＝ _启动窗口.高度 ÷ 2 － (20 × 15 ＋ 96) ÷ 2
赋值 (纵向位置, 相减 (相除 (_启动窗口., 2), 相除 (相加 (相乘 (相减 (取数组成员数 (参数), 1), 20), 57), 2)))
.计次循环首 (20, i)
    赋值 (下家的牌 [i], 可视, 假)
.计次循环尾 ()
.计次循环首 (取数组成员数 (参数), i)
    赋值 (下家的牌 [i], 左边, .左边)
    赋值 (下家的牌 [i], 顶边, 纵向位置)
    赋值 (下家的牌 [i], 可视, 真)
    赋值 (下家的牌 [i], 图片, 返回扑克 (1, 到数值 (参数 [i])))
    赋值 (纵向位置, 相加 (纵向位置, 15))
    
.计次循环尾 ()
.如果 (等于 (牌号排列, 1))
    数组排序 (下家牌点, 真) ' 从小到大
.否则
    数组排序 (下家牌点, 真) ' 从小到大
.如果结束
.计次循环首 (取数组成员数 (参数), i)
    处理事件 ()
    赋值 (下家的牌 [i], 图片, 返回扑克 (1, 到数值 (参数 [i])))
     ' 下家的牌 [i].图片 ＝ 返回扑克 (0, 到数值 (参数 [i]))
.计次循环尾 ()



.子程序 显示出的牌, 空白型, , 
.参数 参数, 整数型, 数组, 

.局部变量 横向位置, 整数型, , , 
.局部变量 i, 整数型, , , 

赋值 (横向位置, 相减 (相除 (_启动窗口., 2), 相除 (相加 (相乘 (相减 (取数组成员数 (参数), 1), 20), 57), 2)))
.计次循环首 (20, i)
    赋值 (出牌的牌 [i], 可视, 假)
.计次循环尾 ()
.计次循环首 (取数组成员数 (参数), i)
    赋值 (出牌的牌 [i], 顶边, .顶边)
    赋值 (出牌的牌 [i], 左边, 横向位置)
    赋值 (出牌的牌 [i], 可视, 真)
    赋值 (出牌的牌 [i], 图片, 返回扑克 (0, 到数值 (参数 [i])))
    赋值 (横向位置, 相加 (横向位置, 20))
.计次循环尾 ()
.如果 (等于 (牌号排列, 1))
    数组排序 (出牌牌点, 真) ' 从小到大
.否则
    数组排序 (出牌牌点, 真) ' 从小到大
.如果结束
.计次循环首 (取数组成员数 (参数), i)
    处理事件 ()
    赋值 (出牌的牌 [i], 图片, 返回扑克 (1, 到数值 (参数 [i])))
.计次循环尾 ()


.子程序 返回扑克, 字节集, , 
.参数 花色, 空白型, , 
.参数 大小, 空白型, , 

.如果真 (等于 (花色, 0))
    返回 (#bm)
.如果真结束
.如果真 (并且 (大于 (相加 (相乘 (相减 (花色, 1), 4), 大小), 0), 小于或等于 (相加 (相乘 (相减 (花色, 1), 4), 大小), 54)))
    返回 (多项选择 (相加 (相乘 (相减 (花色, 1), 1), 大小), #p3, #h3, #m3, #f3, #p4, #h4, #m4, #f4, #p5, #h5, #m5, #f5, #p6, #h6, #m6, #f6, #p7, #h7, #m7, #f7, #p8, #h8, #m8, #f8, #p9, #h9, #m9, #f9, #p10, #h10, #m10, #f10, #p11, #h11, #m11, #f11, #p12, #h12, #m12, #f12, #p13, #h13, #m13, #f13, #p1, #h1, #m1, #f1, #p2, #h2, #m2, #f2, #w1, #w2))
.如果真结束
返回 ({  })

.子程序 洗牌, 空白型, , 
.局部变量 i, 整数型, , , 
.局部变量 j, 整数型, , , 
.局部变量 相等, 逻辑型, , , 
.局部变量 变量, 整数型, , , 
.局部变量 临时数组, 整数型, , "54", 
.局部变量 调试文本, 文本型, , , 

清除数组 (底牌牌点)
清除数组 (中家牌点)
清除数组 (下家牌点)
清除数组 (上家牌点)
清除数组 (出牌牌点)

置随机数种子 ()
.计次循环首 (54, i)
    .循环判断首 ()
        赋值 (变量, 取随机数 (1, 54))
        赋值 (相等, 假)
        .计次循环首 (i, j)
            .如果真 (等于 (变量, 临时数组 [j]))
                赋值 (相等, 真)
                跳出循环 ()
            .如果真结束
            
        .计次循环尾 ()
        赋值 (临时数组 [i], 变量)
    .循环判断尾 (等于 (相等, 真))
.计次循环尾 ()
.变量循环首 (1, 51, 3, i)
    加入成员 (上家牌点, 临时数组 [i])
    加入成员 (中家牌点, 临时数组 [相加 (i, 1)])
    加入成员 (下家牌点, 临时数组 [相加 (i, 2)])
.变量循环尾 ()
.计次循环首 (3, i)
    加入成员 (底牌牌点, 临时数组 [相加 (51, i)])
.计次循环尾 ()

.子程序 _上家图片_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 事件组件, 图片框, , , 
.局部变量 上家左边, 整数型, , , 显示自己牌用

赋值 (事件组件, 取事件组件 ())
赋值 (上家左边, .左边)
.如果真 (大于 (事件组件.左边, 相加 (上家左边, 20)))
    返回 ()
.如果真结束
.判断开始 (等于 (事件组件.标记, “1”))
    .如果 (不等于 (事件组件.左边, 上家左边))
        赋值 (事件组件.左边, 上家左边)
    .否则
        赋值 (事件组件.左边, 相加 (上家左边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “2”))
    .如果 (不等于 (事件组件.左边, 上家左边))
        赋值 (事件组件.左边, 上家左边)
    .否则
        赋值 (事件组件.左边, 相加 (上家左边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “3”))
    
    .如果 (不等于 (事件组件.左边, 上家左边))
        赋值 (事件组件.左边, 上家左边)
    .否则
        赋值 (事件组件.左边, 相加 (上家左边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “4”))
    
    .如果 (不等于 (事件组件.左边, 上家左边))
        赋值 (事件组件.左边, 上家左边)
    .否则
        赋值 (事件组件.左边, 相加 (上家左边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “5”))
    .如果 (不等于 (事件组件.左边, 上家左边))
        赋值 (事件组件.左边, 上家左边)
    .否则
        赋值 (事件组件.左边, 相加 (上家左边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “6”))
    .如果 (不等于 (事件组件.左边, 上家左边))
        赋值 (事件组件.左边, 上家左边)
    .否则
        赋值 (事件组件.左边, 相加 (上家左边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “7”))
    .如果 (不等于 (事件组件.左边, 上家左边))
        赋值 (事件组件.左边, 上家左边)
    .否则
        赋值 (事件组件.左边, 相加 (上家左边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “8”))
    .如果 (不等于 (事件组件.左边, 上家左边))
        赋值 (事件组件.左边, 上家左边)
    .否则
        赋值 (事件组件.左边, 相加 (上家左边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “9”))
    .如果 (不等于 (事件组件.左边, 上家左边))
        赋值 (事件组件.左边, 上家左边)
    .否则
        赋值 (事件组件.左边, 相加 (上家左边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “10”))
    .如果 (不等于 (事件组件.左边, 上家左边))
        赋值 (事件组件.左边, 上家左边)
    .否则
        赋值 (事件组件.左边, 相加 (上家左边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “11”))
    .如果 (不等于 (事件组件.左边, 上家左边))
        赋值 (事件组件.左边, 上家左边)
    .否则
        赋值 (事件组件.左边, 相加 (上家左边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “12”))
    .如果 (不等于 (事件组件.左边, 上家左边))
        赋值 (事件组件.左边, 上家左边)
    .否则
        赋值 (事件组件.左边, 相加 (上家左边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “13”))
    .如果 (不等于 (事件组件.左边, 上家左边))
        赋值 (事件组件.左边, 上家左边)
    .否则
        赋值 (事件组件.左边, 相加 (上家左边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “14”))
    .如果 (不等于 (事件组件.左边, 上家左边))
        赋值 (事件组件.左边, 上家左边)
    .否则
        赋值 (事件组件.左边, 相加 (上家左边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “15”))
    .如果 (不等于 (事件组件.左边, 上家左边))
        赋值 (事件组件.左边, 上家左边)
    .否则
        赋值 (事件组件.左边, 相加 (上家左边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “16”))
    .如果 (不等于 (事件组件.左边, 上家左边))
        赋值 (事件组件.左边, 上家左边)
    .否则
        赋值 (事件组件.左边, 相加 (上家左边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “17”))
    .如果 (不等于 (事件组件.左边, 上家左边))
        赋值 (事件组件.左边, 上家左边)
    .否则
        赋值 (事件组件.左边, 相加 (上家左边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “18”))
    .如果 (不等于 (事件组件.左边, 上家左边))
        赋值 (事件组件.左边, 上家左边)
    .否则
        赋值 (事件组件.左边, 相加 (上家左边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “19”))
    .如果 (不等于 (事件组件.左边, 上家左边))
        赋值 (事件组件.左边, 上家左边)
    .否则
        赋值 (事件组件.左边, 相加 (上家左边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “20”))
    .如果 (不等于 (事件组件.左边, 上家左边))
        赋值 (事件组件.左边, 上家左边)
    .否则
        赋值 (事件组件.左边, 相加 (上家左边, 20))
    .如果结束
    
.默认
    
.判断结束


.子程序 _中家图片_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 中家顶边, 整数型, , , 
.局部变量 事件组件, 图片框, , , 

赋值 (事件组件, 取事件组件 ())
赋值 (中家顶边, .顶边)
.如果真 (小于 (事件组件.顶边, 相减 (中家顶边, 20)))
    返回 ()
.如果真结束
.判断开始 (等于 (事件组件.标记, “1”))
    .如果 (不等于 (事件组件.顶边, 中家顶边))
        赋值 (事件组件.顶边, 中家顶边)
    .否则
        赋值 (事件组件.顶边, 相减 (中家顶边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “2”))
    .如果 (不等于 (事件组件.顶边, 中家顶边))
        赋值 (事件组件.顶边, 中家顶边)
    .否则
        赋值 (事件组件.顶边, 相减 (中家顶边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “3”))
    
    .如果 (不等于 (事件组件.顶边, 中家顶边))
        赋值 (事件组件.顶边, 中家顶边)
    .否则
        赋值 (事件组件.顶边, 相减 (中家顶边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “4”))
    
    .如果 (不等于 (事件组件.顶边, 中家顶边))
        赋值 (事件组件.顶边, 中家顶边)
    .否则
        赋值 (事件组件.顶边, 相减 (中家顶边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “5”))
    .如果 (不等于 (事件组件.顶边, 中家顶边))
        赋值 (事件组件.顶边, 中家顶边)
    .否则
        赋值 (事件组件.顶边, 相减 (中家顶边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “6”))
    .如果 (不等于 (事件组件.顶边, 中家顶边))
        赋值 (事件组件.顶边, 中家顶边)
    .否则
        赋值 (事件组件.顶边, 相减 (中家顶边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “7”))
    .如果 (不等于 (事件组件.顶边, 中家顶边))
        赋值 (事件组件.顶边, 中家顶边)
    .否则
        赋值 (事件组件.顶边, 相减 (中家顶边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “8”))
    .如果 (不等于 (事件组件.顶边, 中家顶边))
        赋值 (事件组件.顶边, 中家顶边)
    .否则
        赋值 (事件组件.顶边, 相减 (中家顶边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “9”))
    .如果 (不等于 (事件组件.顶边, 中家顶边))
        赋值 (事件组件.顶边, 中家顶边)
    .否则
        赋值 (事件组件.顶边, 相减 (中家顶边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “10”))
    .如果 (不等于 (事件组件.顶边, 中家顶边))
        赋值 (事件组件.顶边, 中家顶边)
    .否则
        赋值 (事件组件.顶边, 相减 (中家顶边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “11”))
    .如果 (不等于 (事件组件.顶边, 中家顶边))
        赋值 (事件组件.顶边, 中家顶边)
    .否则
        赋值 (事件组件.顶边, 相减 (中家顶边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “12”))
    .如果 (不等于 (事件组件.顶边, 中家顶边))
        赋值 (事件组件.顶边, 中家顶边)
    .否则
        赋值 (事件组件.顶边, 相减 (中家顶边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “13”))
    .如果 (不等于 (事件组件.顶边, 中家顶边))
        赋值 (事件组件.顶边, 中家顶边)
    .否则
        赋值 (事件组件.顶边, 相减 (中家顶边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “14”))
    .如果 (不等于 (事件组件.顶边, 中家顶边))
        赋值 (事件组件.顶边, 中家顶边)
    .否则
        赋值 (事件组件.顶边, 相减 (中家顶边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “15”))
    .如果 (不等于 (事件组件.顶边, 中家顶边))
        赋值 (事件组件.顶边, 中家顶边)
    .否则
        赋值 (事件组件.顶边, 相减 (中家顶边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “16”))
    .如果 (不等于 (事件组件.顶边, 中家顶边))
        赋值 (事件组件.顶边, 中家顶边)
    .否则
        赋值 (事件组件.顶边, 相减 (中家顶边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “17”))
    .如果 (不等于 (事件组件.顶边, 中家顶边))
        赋值 (事件组件.顶边, 中家顶边)
    .否则
        赋值 (事件组件.顶边, 相减 (中家顶边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “18”))
    .如果 (不等于 (事件组件.顶边, 中家顶边))
        赋值 (事件组件.顶边, 中家顶边)
    .否则
        赋值 (事件组件.顶边, 相减 (中家顶边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “19”))
    .如果 (不等于 (事件组件.顶边, 中家顶边))
        赋值 (事件组件.顶边, 中家顶边)
    .否则
        赋值 (事件组件.顶边, 相减 (中家顶边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “20”))
    .如果 (不等于 (事件组件.顶边, 中家顶边))
        赋值 (事件组件.顶边, 中家顶边)
    .否则
        赋值 (事件组件.顶边, 相减 (中家顶边, 20))
    .如果结束
    
.默认
    
.判断结束


.子程序 _下家图片_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 事件组件, 图片框, , , 
.局部变量 下家左边, 整数型, , , 显示自己牌用

赋值 (事件组件, 取事件组件 ())
赋值 (下家左边, .左边)
.如果真 (小于 (事件组件.左边, 相减 (下家左边, 20)))
    返回 ()
.如果真结束
.判断开始 (等于 (事件组件.标记, “1”))
    .如果 (不等于 (事件组件.左边, 下家左边))
        赋值 (事件组件.左边, 下家左边)
    .否则
        赋值 (事件组件.左边, 相减 (下家左边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “2”))
    .如果 (不等于 (事件组件.左边, 下家左边))
        赋值 (事件组件.左边, 下家左边)
    .否则
        赋值 (事件组件.左边, 相减 (下家左边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “3”))
    
    .如果 (不等于 (事件组件.左边, 下家左边))
        赋值 (事件组件.左边, 下家左边)
    .否则
        赋值 (事件组件.左边, 相减 (下家左边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “4”))
    
    .如果 (不等于 (事件组件.左边, 下家左边))
        赋值 (事件组件.左边, 下家左边)
    .否则
        赋值 (事件组件.左边, 相减 (下家左边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “5”))
    .如果 (不等于 (事件组件.左边, 下家左边))
        赋值 (事件组件.左边, 下家左边)
    .否则
        赋值 (事件组件.左边, 相减 (下家左边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “6”))
    .如果 (不等于 (事件组件.左边, 下家左边))
        赋值 (事件组件.左边, 下家左边)
    .否则
        赋值 (事件组件.左边, 相减 (下家左边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “7”))
    .如果 (不等于 (事件组件.左边, 下家左边))
        赋值 (事件组件.左边, 下家左边)
    .否则
        赋值 (事件组件.左边, 相减 (下家左边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “8”))
    .如果 (不等于 (事件组件.左边, 下家左边))
        赋值 (事件组件.左边, 下家左边)
    .否则
        赋值 (事件组件.左边, 相减 (下家左边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “9”))
    .如果 (不等于 (事件组件.左边, 下家左边))
        赋值 (事件组件.左边, 下家左边)
    .否则
        赋值 (事件组件.左边, 相减 (下家左边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “10”))
    .如果 (不等于 (事件组件.左边, 下家左边))
        赋值 (事件组件.左边, 下家左边)
    .否则
        赋值 (事件组件.左边, 相减 (下家左边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “11”))
    .如果 (不等于 (事件组件.左边, 下家左边))
        赋值 (事件组件.左边, 下家左边)
    .否则
        赋值 (事件组件.左边, 相减 (下家左边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “12”))
    .如果 (不等于 (事件组件.左边, 下家左边))
        赋值 (事件组件.左边, 下家左边)
    .否则
        赋值 (事件组件.左边, 相减 (下家左边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “13”))
    .如果 (不等于 (事件组件.左边, 下家左边))
        赋值 (事件组件.左边, 下家左边)
    .否则
        赋值 (事件组件.左边, 相减 (下家左边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “14”))
    .如果 (不等于 (事件组件.左边, 下家左边))
        赋值 (事件组件.左边, 下家左边)
    .否则
        赋值 (事件组件.左边, 相减 (下家左边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “15”))
    .如果 (不等于 (事件组件.左边, 下家左边))
        赋值 (事件组件.左边, 下家左边)
    .否则
        赋值 (事件组件.左边, 相减 (下家左边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “16”))
    .如果 (不等于 (事件组件.左边, 下家左边))
        赋值 (事件组件.左边, 下家左边)
    .否则
        赋值 (事件组件.左边, 相减 (下家左边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “17”))
    .如果 (不等于 (事件组件.左边, 下家左边))
        赋值 (事件组件.左边, 下家左边)
    .否则
        赋值 (事件组件.左边, 相减 (下家左边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “18”))
    .如果 (不等于 (事件组件.左边, 下家左边))
        赋值 (事件组件.左边, 下家左边)
    .否则
        赋值 (事件组件.左边, 相减 (下家左边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “19”))
    .如果 (不等于 (事件组件.左边, 下家左边))
        赋值 (事件组件.左边, 下家左边)
    .否则
        赋值 (事件组件.左边, 相减 (下家左边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “20”))
    .如果 (不等于 (事件组件.左边, 下家左边))
        赋值 (事件组件.左边, 下家左边)
    .否则
        赋值 (事件组件.左边, 相减 (下家左边, 20))
    .如果结束
    
.默认
    
.判断结束


.子程序 判断牌值, 整数型, , 
.参数 牌值, 整数型, , 

.局部变量 i, 整数型, , , 

.变量循环首 (4, 52, 4, i)
    .如果真 (并且 (大于或等于 (牌值, 相减 (i, 3)), 小于或等于 (牌值, i)))
        .如果真 (等于 (i, 4))
            返回 (1)
        .如果真结束
        .如果真 (等于 (i, 8))
            返回 (2)
        .如果真结束
        .如果真 (等于 (i, 12))
            返回 (3)
        .如果真结束
        .如果真 (等于 (i, 16))
            返回 (4)
        .如果真结束
        .如果真 (等于 (i, 20))
            返回 (5)
        .如果真结束
        .如果真 (等于 (i, 24))
            返回 (6)
        .如果真结束
        .如果真 (等于 (i, 28))
            返回 (7)
        .如果真结束
        .如果真 (等于 (i, 32))
            返回 (8)
        .如果真结束
        .如果真 (等于 (i, 36))
            返回 (9)
        .如果真结束
        .如果真 (等于 (i, 40))
            返回 (10)
        .如果真结束
        .如果真 (等于 (i, 44))
            返回 (11)
        .如果真结束
        .如果真 (等于 (i, 48))
            返回 (12)
        .如果真结束
        .如果真 (等于 (i, 52))
            返回 (13)
        .如果真结束
        
    .如果真结束
    
.变量循环尾 ()
.变量循环首 (1, 54, 1, i)
    .如果真 (并且 (大于或等于 (牌值, i), 小于或等于 (牌值, i)))
        .如果真 (等于 (i, 53))
            返回 (14)
        .如果真结束
        .如果真 (等于 (i, 54))
            返回 (15)
        .如果真结束
        
    .如果真结束
    
.变量循环尾 ()
返回 (0)

.子程序 判断牌段, 整数型, , 
.参数 牌值, 整数型, , 

.局部变量 i, 整数型, , , 

.变量循环首 (4, 52, 4, i)
    .如果真 (并且 (大于或等于 (牌值, 相减 (i, 3)), 小于或等于 (牌值, i)))
        .如果真 (等于 (i, 4))
            返回 (3)
        .如果真结束
        .如果真 (等于 (i, 8))
            返回 (4)
        .如果真结束
        .如果真 (等于 (i, 12))
            返回 (5)
        .如果真结束
        .如果真 (等于 (i, 16))
            返回 (6)
        .如果真结束
        .如果真 (等于 (i, 20))
            返回 (7)
        .如果真结束
        .如果真 (等于 (i, 24))
            返回 (8)
        .如果真结束
        .如果真 (等于 (i, 28))
            返回 (9)
        .如果真结束
        .如果真 (等于 (i, 32))
            返回 (10)
        .如果真结束
        .如果真 (等于 (i, 36))
            返回 (11)
        .如果真结束
        .如果真 (等于 (i, 40))
            返回 (12)
        .如果真结束
        .如果真 (等于 (i, 44))
            返回 (13)
        .如果真结束
        .如果真 (等于 (i, 48))
            返回 (1)
        .如果真结束
        .如果真 (等于 (i, 52))
            返回 (2)
        .如果真结束
        
    .如果真结束
    
.变量循环尾 ()
.变量循环首 (1, 54, 1, i)
    .如果真 (并且 (大于或等于 (牌值, i), 小于或等于 (牌值, i)))
        .如果真 (等于 (i, 53))
            返回 (14)
        .如果真结束
        .如果真 (等于 (i, 54))
            返回 (15)
        .如果真结束
        
    .如果真结束
    
.变量循环尾 ()
返回 (0)

.子程序 判断花牌, 整数型, , 
.参数 牌值, 整数型, , 

.局部变量 余数, 整数型, , , 

赋值 (余数, 求余数 (牌值, 4))
返回 (余数)
 ' 该段代码本程序没有使用


.子程序 判断出牌, 空白型, , 
.参数 参数, 整数型, 数组, 

.局部变量 n, 整数型, , , 
.局部变量 i, 整数型, , , 
.局部变量 中家顶边, 整数型, , , 
.局部变量 上家左边, 整数型, , , 
.局部变量 下家左边, 整数型, , , 
.局部变量 牌数, 整数型, , , 

赋值 (中家顶边, .顶边)
赋值 (上家左边, .左边)
赋值 (下家左边, .左边)
.计次循环首 (取数组成员数 (中家牌点), i)
    .如果真 (等于 (中家的牌 [i], 顶边, 相减 (中家顶边, 20)))
        加入成员 (已选择牌子, 中家牌点 [i])
        加入成员 (出牌数组, 判断牌值 (中家牌点 [i]))
        赋值 (牌数, 相加 (牌数, 1))
    .如果真结束
    
.计次循环尾 ()
.计次循环首 (取数组成员数 (上家牌点), i)
    .如果真 (等于 (上家的牌 [i], 左边, 相加 (上家左边, 20)))
        加入成员 (已选择牌子, 上家牌点 [i])
        加入成员 (出牌数组, 判断牌值 (上家牌点 [i]))
        赋值 (牌数, 相加 (牌数, 1))
    .如果真结束
    
.计次循环尾 ()
.计次循环首 (取数组成员数 (下家牌点), i)
    .如果真 (等于 (下家的牌 [i], 左边, 相减 (下家左边, 20)))
        加入成员 (已选择牌子, 下家牌点 [i])
        加入成员 (出牌数组, 判断牌值 (下家牌点 [i]))
        赋值 (牌数, 相加 (牌数, 1))
    .如果真结束
    
.计次循环尾 ()
数组排序 (出牌数组, )
.如果 (等于 (牌数, 0))
    输出调试文本 (“你没有选择可出的牌！！！！”)
.否则
    
.如果结束
.如果 (等于 (牌数, 1))
    .如果 (大于或等于 (出牌数组 [1], 12))
        .如果 (大于或等于 (出牌数组 [1], 14))
            .如果 (大于或等于 (出牌数组 [1], 15))
                输出调试文本 (“你出的牌是单张！牌值单张:大王”)
            .否则
                输出调试文本 (“你出的牌是单张！牌值单张:小王”)
            .如果结束
            
        .否则
            输出调试文本 (相加 (“你出的牌是单张！牌值:单张”, 到文本 (相减 (出牌数组 [1], 11))))
        .如果结束
        
    .否则
        输出调试文本 (相加 (“你出的牌是单张！牌值:单张”, 到文本 (相加 (出牌数组 [1], 2))))
        
    .如果结束
    赋值 (允许出牌, 1)
    赋值 (扑克比点, 出牌数组 [1])
    赋值 (扑克点数, 出牌数组)
    
    赋值 (牌型, 1)
.否则
    
.如果结束
.如果 (等于 (牌数, 2))
    .如果 (等于 (出牌数组 [1], 出牌数组 [2]))
        赋值 (允许出牌, 1)
        赋值 (扑克比点, 出牌数组 [1])
        赋值 (扑克点数, 出牌数组)
        赋值 (牌型, 11)
        输出调试文本 (相加 (“你出的牌是对子，牌值:对子”, 到文本 (相加 (出牌数组 [1], 2))))
        
    .否则
        .如果 (等于 (相加 (出牌数组 [1], 出牌数组 [2]), 29))
            输出调试文本 (“你出的牌是大小王炸弹！”)
            赋值 (扑克比点, 1000)
            赋值 (扑克点数, 出牌数组)
            赋值 (允许出牌, 1)
            赋值 (牌型, 10000)
        .否则
            赋值 (允许出牌, 0)
            输出调试文本 (“你出的牌违规！！！！”)
        .如果结束
        
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (牌数, 3))
    .如果 (等于 (出牌数组 [1], 出牌数组 [2]))
        .如果 (等于 (出牌数组 [1], 出牌数组 [3]))
            .如果 (大于或等于 (出牌数组 [1], 12))
                输出调试文本 (相加 (“你出的牌是三张！牌值:三张”, 到文本 (相减 (出牌数组 [1], 11))))
            .否则
                输出调试文本 (相加 (“你出的牌是三张！牌值:三张”, 到文本 (相加 (出牌数组 [1], 2))))
            .如果结束
            赋值 (允许出牌, 1)
            赋值 (扑克比点, 出牌数组 [1])
            赋值 (扑克点数, 出牌数组)
            赋值 (牌型, 111)
        .否则
            输出调试文本 (“你出的牌违规！！！！”)
        .如果结束
        
    .否则
        
    .如果结束
    .如果 (等于 (出牌数组 [2], 出牌数组 [3]))
        .如果 (等于 (出牌数组 [2], 出牌数组 [1]))
            .如果 (大于或等于 (出牌数组 [1], 12))
                输出调试文本 (相加 (“你出的牌是三张！牌值:三张”, 到文本 (相减 (出牌数组 [1], 11))))
            .否则
                输出调试文本 (相加 (“你出的牌是三张！牌值:三张”, 到文本 (相加 (出牌数组 [1], 2))))
            .如果结束
            
            赋值 (允许出牌, 1)
            赋值 (扑克比点, 出牌数组 [1])
            赋值 (扑克点数, 出牌数组)
            赋值 (牌型, 111)
        .否则
            输出调试文本 (“你出的牌违规！！！！”)
        .如果结束
        
    .否则
        
    .如果结束
    .如果 (等于 (出牌数组 [1], 出牌数组 [3]))
        .如果 (等于 (出牌数组 [2], 出牌数组 [1]))
            .如果 (大于或等于 (出牌数组 [1], 12))
                输出调试文本 (相加 (“你出的牌是三张！牌值:三张”, 到文本 (相减 (出牌数组 [1], 11))))
            .否则
                输出调试文本 (相加 (“你出的牌是三张！牌值:三张”, 到文本 (相加 (出牌数组 [1], 2))))
            .如果结束
            赋值 (允许出牌, 1)
            赋值 (扑克比点, 出牌数组 [1])
            赋值 (扑克点数, 出牌数组)
            赋值 (牌型, 111)
        .否则
            输出调试文本 (“你出的牌违规！！！！”)
        .如果结束
        
    .否则
        
    .如果结束
    .如果 (不等于 (出牌数组 [1], 出牌数组 [3]))
        输出调试文本 (“你出的牌违规！！！！”)
    .否则
        
    .如果结束
    .如果 (不等于 (出牌数组 [1], 出牌数组 [2]))
        输出调试文本 (“你出的牌违规！！！！”)
    .否则
        
    .如果结束
    .如果 (不等于 (出牌数组 [2], 出牌数组 [3]))
        输出调试文本 (“你出的牌违规！！！！”)
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (牌数, 4))
    .如果 (等于 (出牌数组 [1], 出牌数组 [2]))
        .如果 (等于 (出牌数组 [1], 出牌数组 [3]))
            .如果 (等于 (出牌数组 [1], 出牌数组 [4]))
                .如果 (大于或等于 (出牌数组 [1], 12))
                    输出调试文本 (相加 (“你出的牌是四张炸弹，！牌值:4张”, 到文本 (相减 (出牌数组 [1], 11))))
                    
                .否则
                    输出调试文本 (相加 (“你出的牌是四张炸弹，牌值:4张”, 到文本 (相加 (出牌数组 [1], 2))))
                .如果结束
                
                赋值 (扑克比点, 100)
                赋值 (四张炸弹比点, 出牌数组 [1])
                赋值 (允许出牌, 1)
                赋值 (牌型, 10000)
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .否则
        
    .如果结束
    .如果 (等于 (出牌数组 [1], 出牌数组 [2]))
        .如果 (等于 (出牌数组 [1], 出牌数组 [3]))
            .如果 (不等于 (出牌数组 [1], 出牌数组 [4]))
                输出调试文本 (相加 (“你出的牌是三带一！牌值:三张”, 到文本 (相加 (出牌数组 [1], 2)), “带”, 到文本 (相加 (出牌数组 [4], 2))))
                赋值 (允许出牌, 1)
                赋值 (扑克比点, 出牌数组 [1])
                赋值 (牌型, 1110)
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .否则
        
    .如果结束
    .如果 (等于 (出牌数组 [2], 出牌数组 [3]))
        .如果 (等于 (出牌数组 [2], 出牌数组 [4]))
            .如果 (不等于 (出牌数组 [2], 出牌数组 [1]))
                输出调试文本 (相加 (“你出的牌是三带一！牌值:三张”, 到文本 (相加 (出牌数组 [2], 2)), “带”, 到文本 (相加 (出牌数组 [1], 2))))
                赋值 (允许出牌, 1)
                赋值 (扑克比点, 出牌数组 [2])
                赋值 (牌型, 1110)
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (牌数, 5))
    .如果 (等于 (相加 (出牌数组 [1], 1), 出牌数组 [2]))
        .如果 (等于 (相加 (出牌数组 [2], 1), 出牌数组 [3]))
            .如果 (等于 (相加 (出牌数组 [3], 1), 出牌数组 [4]))
                .如果 (等于 (相加 (出牌数组 [4], 1), 出牌数组 [5]))
                    .如果 (大于或等于 (出牌数组 [5], 13))
                        输出调试文本 (“你出的牌违规！！！！”)
                    .否则
                        输出调试文本 (“你出的牌是五张五顺子！”)
                        赋值 (扑克比点, 出牌数组 [1])
                        赋值 (允许出牌, 1)
                        赋值 (牌型, 12345)
                    .如果结束
                    
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .否则
        
    .如果结束
    .如果 (等于 (出牌数组 [1], 出牌数组 [2]))
        .如果 (等于 (出牌数组 [1], 出牌数组 [3]))
            .如果 (等于 (出牌数组 [1], 出牌数组 [4]))
                输出调试文本 (“你出的牌是四带单！”)
                赋值 (允许出牌, 1)
                赋值 (扑克比点, 出牌数组 [1])
                赋值 (牌型, 11110)
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .否则
        
    .如果结束
    .如果 (等于 (出牌数组 [2], 出牌数组 [3]))
        .如果 (等于 (出牌数组 [2], 出牌数组 [4]))
            .如果 (等于 (出牌数组 [2], 出牌数组 [5]))
                输出调试文本 (“你出的牌是四带单！”)
                赋值 (允许出牌, 1)
                赋值 (扑克比点, 出牌数组 [2])
                赋值 (牌型, 11110)
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .否则
        
    .如果结束
    .如果 (等于 (出牌数组 [1], 出牌数组 [2]))
        .如果 (等于 (出牌数组 [1], 出牌数组 [3]))
            .如果 (等于 (出牌数组 [4], 出牌数组 [5]))
                输出调试文本 (“你出的牌是三带二！”)
                赋值 (允许出牌, 1)
                赋值 (扑克比点, 出牌数组 [1])
                赋值 (牌型, 11100)
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .否则
        
    .如果结束
    .如果 (等于 (出牌数组 [3], 出牌数组 [4]))
        .如果 (等于 (出牌数组 [3], 出牌数组 [5]))
            .如果 (等于 (出牌数组 [1], 出牌数组 [2]))
                输出调试文本 (“你出的牌是三带二！”)
                赋值 (允许出牌, 1)
                赋值 (扑克比点, 出牌数组 [3])
                赋值 (牌型, 11100)
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (牌数, 6))
    .如果 (等于 (相加 (出牌数组 [1], 1), 出牌数组 [2]))
        .如果 (等于 (相加 (出牌数组 [2], 1), 出牌数组 [3]))
            .如果 (等于 (相加 (出牌数组 [3], 1), 出牌数组 [4]))
                .如果 (等于 (相加 (出牌数组 [4], 1), 出牌数组 [5]))
                    .如果 (等于 (相加 (出牌数组 [5], 1), 出牌数组 [6]))
                        .如果 (大于或等于 (出牌数组 [6], 13))
                            输出调试文本 (“你出的牌违规！！！！”)
                        .否则
                            输出调试文本 (“你出的牌是六张六顺子！”)
                            赋值 (允许出牌, 1)
                            赋值 (扑克比点, 出牌数组 [1])
                            赋值 (牌型, 123456)
                        .如果结束
                        
                    .否则
                        
                    .如果结束
                    
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .否则
        
    .如果结束
    .如果 (等于 (出牌数组 [1], 出牌数组 [2]))
        .如果 (等于 (出牌数组 [1], 出牌数组 [3]))
            .如果 (等于 (出牌数组 [1], 出牌数组 [4]))
                .如果 (等于 (出牌数组 [5], 出牌数组 [6]))
                    .如果 (不等于 (出牌数组 [1], 出牌数组 [6]))
                        输出调试文本 (“你出的牌是四带对！”)
                        赋值 (允许出牌, 1)
                        赋值 (扑克比点, 出牌数组 [1])
                        赋值 (牌型, 111100)
                    .否则
                        
                    .如果结束
                    
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .否则
        
    .如果结束
    .如果 (等于 (出牌数组 [3], 出牌数组 [4]))
        .如果 (等于 (出牌数组 [3], 出牌数组 [5]))
            .如果 (等于 (出牌数组 [3], 出牌数组 [6]))
                .如果 (等于 (出牌数组 [1], 出牌数组 [2]))
                    .如果 (不等于 (出牌数组 [1], 出牌数组 [6]))
                        输出调试文本 (“你出的牌是四带对！”)
                        赋值 (允许出牌, 1)
                        赋值 (扑克比点, 出牌数组 [3])
                        赋值 (牌型, 111100)
                    .否则
                        
                    .如果结束
                    
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .否则
        
    .如果结束
    .如果 (等于 (出牌数组 [1], 出牌数组 [2]))
        .如果 (等于 (出牌数组 [1], 出牌数组 [3]))
            .如果 (等于 (出牌数组 [4], 出牌数组 [5]))
                .如果 (等于 (出牌数组 [4], 出牌数组 [6]))
                    .如果 (等于 (相加 (出牌数组 [1], 1), 出牌数组 [6]))
                        .如果 (大于或等于 (出牌数组 [6], 13))
                            输出调试文本 (“你出的牌违规！！！！”)
                        .否则
                            输出调试文本 (“你出的牌是三架！”)
                            赋值 (允许出牌, 1)
                            赋值 (扑克比点, 出牌数组 [1])
                            赋值 (牌型, 111222)
                        .如果结束
                        
                    .否则
                        
                    .如果结束
                    
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .否则
        
    .如果结束
    .如果 (等于 (出牌数组 [1], 出牌数组 [2]))
        .如果 (等于 (出牌数组 [3], 出牌数组 [4]))
            .如果 (等于 (出牌数组 [5], 出牌数组 [6]))
                .如果 (等于 (相加 (出牌数组 [1], 1), 出牌数组 [3]))
                    .如果 (等于 (相加 (出牌数组 [3], 1), 出牌数组 [5]))
                        .如果 (大于或等于 (出牌数组 [6], 13))
                            输出调试文本 (“你出的牌违规！！！！”)
                        .否则
                            输出调试文本 (“你出的牌是三顺！”)
                            赋值 (允许出牌, 1)
                            赋值 (扑克比点, 出牌数组 [1])
                            赋值 (牌型, 101010)
                        .如果结束
                        
                    .否则
                        
                    .如果结束
                    
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (牌数, 7))
    .如果 (等于 (相加 (出牌数组 [1], 1), 出牌数组 [2]))
        .如果 (等于 (相加 (出牌数组 [2], 1), 出牌数组 [3]))
            .如果 (等于 (相加 (出牌数组 [3], 1), 出牌数组 [4]))
                .如果 (等于 (相加 (出牌数组 [4], 1), 出牌数组 [5]))
                    .如果 (等于 (相加 (出牌数组 [5], 1), 出牌数组 [6]))
                        .如果 (等于 (相加 (出牌数组 [6], 1), 出牌数组 [7]))
                            .如果 (大于或等于 (出牌数组 [7], 13))
                                输出调试文本 (“你出的牌违规！！！！”)
                            .否则
                                输出调试文本 (“你出的牌是七张七顺子！”)
                                赋值 (允许出牌, 1)
                                赋值 (扑克比点, 出牌数组 [1])
                                赋值 (牌型, 1234567)
                            .如果结束
                            
                        .否则
                            
                        .如果结束
                        
                    .否则
                        
                    .如果结束
                    
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (牌数, 8))
    .如果 (等于 (相加 (出牌数组 [1], 1), 出牌数组 [2]))
        .如果 (等于 (相加 (出牌数组 [2], 1), 出牌数组 [3]))
            .如果 (等于 (相加 (出牌数组 [3], 1), 出牌数组 [4]))
                .如果 (等于 (相加 (出牌数组 [4], 1), 出牌数组 [5]))
                    .如果 (等于 (相加 (出牌数组 [5], 1), 出牌数组 [6]))
                        .如果 (等于 (相加 (出牌数组 [6], 1), 出牌数组 [7]))
                            .如果 (等于 (相加 (出牌数组 [7], 1), 出牌数组 [8]))
                                .如果 (大于或等于 (出牌数组 [8], 13))
                                    输出调试文本 (“你出的牌违规！！！！”)
                                .否则
                                    输出调试文本 (“你出的牌是八张八顺子！”)
                                    赋值 (允许出牌, 1)
                                    赋值 (扑克比点, 出牌数组 [1])
                                    赋值 (牌型, 12345678)
                                .如果结束
                                
                            .否则
                                
                            .如果结束
                            
                        .否则
                            
                        .如果结束
                        
                    .否则
                        
                    .如果结束
                    
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .否则
        
    .如果结束
    .如果 (等于 (出牌数组 [1], 出牌数组 [2]))
        .如果 (等于 (出牌数组 [1], 出牌数组 [3]))
            .如果 (等于 (出牌数组 [1], 出牌数组 [4]))
                .如果 (等于 (出牌数组 [5], 出牌数组 [6]))
                    .如果 (等于 (出牌数组 [7], 出牌数组 [8]))
                        输出调试文本 (“你出的牌是四带对！”)
                        赋值 (允许出牌, 1)
                        赋值 (扑克比点, 出牌数组 [1])
                        赋值 (牌型, 111100)
                    .否则
                        输出调试文本 (“你出的牌违规！！！！”)
                    .如果结束
                    
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .否则
        
    .如果结束
    .如果 (等于 (出牌数组 [5], 出牌数组 [6]))
        .如果 (等于 (出牌数组 [5], 出牌数组 [7]))
            .如果 (等于 (出牌数组 [5], 出牌数组 [8]))
                .如果 (等于 (出牌数组 [1], 出牌数组 [2]))
                    .如果 (等于 (出牌数组 [3], 出牌数组 [4]))
                        输出调试文本 (“你出的牌是四带对！”)
                        赋值 (允许出牌, 1)
                        赋值 (扑克比点, 出牌数组 [5])
                        赋值 (牌型, 111100)
                    .否则
                        输出调试文本 (“你出的牌违规！！！！”)
                    .如果结束
                    
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .否则
        
    .如果结束
    .如果 (等于 (出牌数组 [3], 出牌数组 [4]))
        .如果 (等于 (出牌数组 [3], 出牌数组 [5]))
            .如果 (等于 (出牌数组 [3], 出牌数组 [6]))
                .如果 (等于 (出牌数组 [1], 出牌数组 [2]))
                    .如果 (等于 (出牌数组 [7], 出牌数组 [8]))
                        输出调试文本 (“你出的牌是四带对！”)
                        赋值 (允许出牌, 1)
                        赋值 (扑克比点, 出牌数组 [3])
                        赋值 (牌型, 111100)
                    .否则
                        输出调试文本 (“你出的牌违规！！！！”)
                    .如果结束
                    
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .否则
        
    .如果结束
    .如果 (等于 (出牌数组 [1], 出牌数组 [2]))
        .如果 (等于 (出牌数组 [1], 出牌数组 [3]))
            .如果 (等于 (出牌数组 [4], 出牌数组 [5]))
                .如果 (等于 (出牌数组 [4], 出牌数组 [6]))
                    .如果 (等于 (相加 (出牌数组 [1], 1), 出牌数组 [4]))
                        .如果 (大于或等于 (出牌数组 [6], 13))
                            输出调试文本 (“你出的牌违规！！！！”)
                        .否则
                            输出调试文本 (“你出的牌是三架一！”)
                            赋值 (允许出牌, 1)
                            赋值 (扑克比点, 出牌数组 [1])
                            赋值 (牌型, 3331)
                        .如果结束
                        
                    .否则
                        
                    .如果结束
                    
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .否则
        
    .如果结束
    .如果 (等于 (出牌数组 [2], 出牌数组 [3]))
        .如果 (等于 (出牌数组 [2], 出牌数组 [4]))
            .如果 (等于 (出牌数组 [5], 出牌数组 [6]))
                .如果 (等于 (出牌数组 [5], 出牌数组 [7]))
                    .如果 (等于 (相加 (出牌数组 [2], 1), 出牌数组 [5]))
                        .如果 (大于或等于 (出牌数组 [5], 13))
                            输出调试文本 (“你出的牌违规！！！！”)
                        .否则
                            输出调试文本 (“你出的牌是三架一！”)
                            赋值 (允许出牌, 1)
                            赋值 (扑克比点, 出牌数组 [2])
                            赋值 (牌型, 3331)
                        .如果结束
                        
                    .否则
                        
                    .如果结束
                    
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .否则
        
    .如果结束
    .如果 (等于 (出牌数组 [3], 出牌数组 [4]))
        .如果 (等于 (出牌数组 [3], 出牌数组 [5]))
            .如果 (等于 (出牌数组 [6], 出牌数组 [7]))
                .如果 (等于 (出牌数组 [6], 出牌数组 [8]))
                    .如果 (等于 (相加 (出牌数组 [3], 1), 出牌数组 [6]))
                        .如果 (大于或等于 (出牌数组 [6], 13))
                            输出调试文本 (“你出的牌违规！！！！”)
                        .否则
                            输出调试文本 (“你出的牌是三架一！”)
                            赋值 (允许出牌, 1)
                            赋值 (扑克比点, 出牌数组 [3])
                            赋值 (牌型, 3331)
                        .如果结束
                        
                    .否则
                        
                    .如果结束
                    
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .否则
        
    .如果结束
    .如果 (等于 (出牌数组 [1], 出牌数组 [2]))
        .如果 (等于 (出牌数组 [3], 出牌数组 [4]))
            .如果 (等于 (出牌数组 [5], 出牌数组 [6]))
                .如果 (等于 (出牌数组 [7], 出牌数组 [8]))
                    .如果 (等于 (相加 (出牌数组 [1], 1), 出牌数组 [3]))
                        .如果 (等于 (相加 (出牌数组 [3], 1), 出牌数组 [5]))
                            .如果 (等于 (相加 (出牌数组 [5], 1), 出牌数组 [7]))
                                .如果 (大于或等于 (出牌数组 [8], 13))
                                    输出调试文本 (“你出的牌违规！！！！”)
                                .否则
                                    输出调试文本 (“你出的牌是四顺！”)
                                    赋值 (允许出牌, 1)
                                    赋值 (扑克比点, 出牌数组 [1])
                                    赋值 (牌型, 10101010)
                                .如果结束
                                
                            .否则
                                
                            .如果结束
                            
                        .否则
                            
                        .如果结束
                        
                    .否则
                        
                    .如果结束
                    
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (牌数, 9))
    .如果 (等于 (相加 (出牌数组 [1], 1), 出牌数组 [2]))
        .如果 (等于 (相加 (出牌数组 [2], 1), 出牌数组 [3]))
            .如果 (等于 (相加 (出牌数组 [3], 1), 出牌数组 [4]))
                .如果 (等于 (相加 (出牌数组 [4], 1), 出牌数组 [5]))
                    .如果 (等于 (相加 (出牌数组 [5], 1), 出牌数组 [6]))
                        .如果 (等于 (相加 (出牌数组 [6], 1), 出牌数组 [7]))
                            .如果 (等于 (相加 (出牌数组 [7], 1), 出牌数组 [8]))
                                .如果 (等于 (相加 (出牌数组 [8], 1), 出牌数组 [9]))
                                    .如果 (大于或等于 (出牌数组 [9], 13))
                                        输出调试文本 (“你出的牌违规！！！！”)
                                    .否则
                                        输出调试文本 (“你出的牌是九张九顺子！”)
                                        赋值 (允许出牌, 1)
                                        赋值 (扑克比点, 出牌数组 [1])
                                        赋值 (牌型, 123456789)
                                    .如果结束
                                    
                                .否则
                                    
                                .如果结束
                                
                            .否则
                                
                            .如果结束
                            
                        .否则
                            
                        .如果结束
                        
                    .否则
                        
                    .如果结束
                    
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (牌数, 10))
    .如果 (等于 (相加 (出牌数组 [1], 1), 出牌数组 [2]))
        .如果 (等于 (相加 (出牌数组 [2], 1), 出牌数组 [3]))
            .如果 (等于 (相加 (出牌数组 [3], 1), 出牌数组 [4]))
                .如果 (等于 (相加 (出牌数组 [4], 1), 出牌数组 [5]))
                    .如果 (等于 (相加 (出牌数组 [5], 1), 出牌数组 [6]))
                        .如果 (等于 (相加 (出牌数组 [6], 1), 出牌数组 [7]))
                            .如果 (等于 (相加 (出牌数组 [7], 1), 出牌数组 [8]))
                                .如果 (等于 (相加 (出牌数组 [8], 1), 出牌数组 [9]))
                                    .如果 (等于 (相加 (出牌数组 [9], 1), 出牌数组 [10]))
                                        .如果 (大于或等于 (出牌数组 [10], 13))
                                            输出调试文本 (“你出的牌违规！！！！”)
                                        .否则
                                            输出调试文本 (“你出的牌是十张十顺子”)
                                            赋值 (允许出牌, 1)
                                            赋值 (扑克比点, 出牌数组 [1])
                                            赋值 (牌型, 123456789)
                                        .如果结束
                                        
                                    .否则
                                        
                                    .如果结束
                                    
                                .否则
                                    
                                .如果结束
                                
                            .否则
                                
                            .如果结束
                            
                        .否则
                            
                        .如果结束
                        
                    .否则
                        
                    .如果结束
                    
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .否则
        
    .如果结束
    .如果 (等于 (出牌数组 [1], 出牌数组 [2]))
        .如果 (等于 (出牌数组 [1], 出牌数组 [3]))
            .如果 (等于 (出牌数组 [4], 出牌数组 [5]))
                .如果 (等于 (出牌数组 [4], 出牌数组 [6]))
                    .如果 (等于 (出牌数组 [7], 出牌数组 [8]))
                        .如果 (等于 (出牌数组 [9], 出牌数组 [10]))
                            .如果 (等于 (相加 (出牌数组 [1], 1), 出牌数组 [4]))
                                .如果 (大于或等于 (出牌数组 [4], 13))
                                    输出调试文本 (“你出的牌违规！！！！”)
                                .否则
                                    输出调试文本 (“你出的牌是三架二！”)
                                    赋值 (允许出牌, 1)
                                    赋值 (扑克比点, 出牌数组 [1])
                                    赋值 (牌型, 33344400)
                                .如果结束
                                
                            .否则
                                
                            .如果结束
                            
                        .否则
                            
                        .如果结束
                        
                    .否则
                        
                    .如果结束
                    
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .否则
        
    .如果结束
    .如果 (等于 (出牌数组 [3], 出牌数组 [4]))
        .如果 (等于 (出牌数组 [3], 出牌数组 [5]))
            .如果 (等于 (出牌数组 [6], 出牌数组 [7]))
                .如果 (等于 (出牌数组 [6], 出牌数组 [8]))
                    .如果 (等于 (出牌数组 [1], 出牌数组 [2]))
                        .如果 (等于 (出牌数组 [9], 出牌数组 [10]))
                            .如果 (等于 (相加 (出牌数组 [3], 1), 出牌数组 [6]))
                                .如果 (大于或等于 (出牌数组 [6], 13))
                                    输出调试文本 (“你出的牌违规！！！！”)
                                .否则
                                    输出调试文本 (“你出的牌是三架二！”)
                                    赋值 (允许出牌, 1)
                                    赋值 (扑克比点, 出牌数组 [3])
                                    赋值 (牌型, 33344400)
                                .如果结束
                                
                            .否则
                                
                            .如果结束
                            
                        .否则
                            
                        .如果结束
                        
                    .否则
                        
                    .如果结束
                    
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .否则
        
    .如果结束
    .如果 (等于 (出牌数组 [10], 出牌数组 [8]))
        .如果 (等于 (出牌数组 [10], 出牌数组 [9]))
            .如果 (等于 (出牌数组 [7], 出牌数组 [5]))
                .如果 (等于 (出牌数组 [7], 出牌数组 [6]))
                    .如果 (等于 (出牌数组 [1], 出牌数组 [2]))
                        .如果 (等于 (出牌数组 [3], 出牌数组 [4]))
                            .如果 (等于 (相加 (出牌数组 [7], 1), 出牌数组 [10]))
                                .如果 (大于或等于 (出牌数组 [10], 13))
                                    输出调试文本 (“你出的牌违规！！！！”)
                                .否则
                                    输出调试文本 (“你出的牌是三架二！”)
                                    赋值 (允许出牌, 1)
                                    赋值 (扑克比点, 出牌数组 [7])
                                    赋值 (牌型, 33344400)
                                .如果结束
                                
                            .否则
                                
                            .如果结束
                            
                        .否则
                            
                        .如果结束
                        
                    .否则
                        
                    .如果结束
                    
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .否则
        
    .如果结束
    .如果 (等于 (出牌数组 [8], 出牌数组 [6]))
        .如果 (等于 (出牌数组 [8], 出牌数组 [7]))
            .如果 (等于 (出牌数组 [5], 出牌数组 [3]))
                .如果 (等于 (出牌数组 [5], 出牌数组 [4]))
                    .如果 (等于 (出牌数组 [1], 出牌数组 [2]))
                        .如果 (等于 (出牌数组 [10], 出牌数组 [9]))
                            .如果 (等于 (相加 (出牌数组 [5], 1), 出牌数组 [8]))
                                .如果 (大于或等于 (出牌数组 [8], 13))
                                    输出调试文本 (“你出的牌违规！！！！”)
                                .否则
                                    输出调试文本 (“你出的牌是三架二！”)
                                    赋值 (允许出牌, 1)
                                    赋值 (扑克比点, 出牌数组 [5])
                                    赋值 (牌型, 33344400)
                                .如果结束
                                
                            .否则
                                
                            .如果结束
                            
                        .否则
                            
                        .如果结束
                        
                    .否则
                        
                    .如果结束
                    
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .否则
        
    .如果结束
    .如果 (等于 (出牌数组 [1], 出牌数组 [2]))
        .如果 (等于 (出牌数组 [3], 出牌数组 [4]))
            .如果 (等于 (出牌数组 [5], 出牌数组 [6]))
                .如果 (等于 (出牌数组 [7], 出牌数组 [8]))
                    .如果 (等于 (出牌数组 [9], 出牌数组 [10]))
                        .如果 (等于 (相加 (出牌数组 [1], 1), 出牌数组 [3]))
                            .如果 (等于 (相加 (出牌数组 [3], 1), 出牌数组 [5]))
                                .如果 (等于 (相加 (出牌数组 [5], 1), 出牌数组 [7]))
                                    .如果 (等于 (相加 (出牌数组 [7], 1), 出牌数组 [9]))
                                        .如果 (大于或等于 (出牌数组 [10], 13))
                                            输出调试文本 (“你出的牌违规！！！！”)
                                        .否则
                                            输出调试文本 (“你出的牌是五顺！”)
                                            赋值 (允许出牌, 1)
                                            赋值 (扑克比点, 出牌数组 [1])
                                            赋值 (牌型, 1010101010)
                                        .如果结束
                                        
                                    .否则
                                        
                                    .如果结束
                                    
                                .否则
                                    
                                .如果结束
                                
                            .否则
                                
                            .如果结束
                            
                        .否则
                            
                        .如果结束
                        
                    .否则
                        
                    .如果结束
                    
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (牌数, 11))
    .如果 (等于 (相加 (出牌数组 [1], 1), 出牌数组 [2]))
        .如果 (等于 (相加 (出牌数组 [2], 1), 出牌数组 [3]))
            .如果 (等于 (相加 (出牌数组 [3], 1), 出牌数组 [4]))
                .如果 (等于 (相加 (出牌数组 [4], 1), 出牌数组 [5]))
                    .如果 (等于 (相加 (出牌数组 [5], 1), 出牌数组 [6]))
                        .如果 (等于 (相加 (出牌数组 [6], 1), 出牌数组 [7]))
                            .如果 (等于 (相加 (出牌数组 [7], 1), 出牌数组 [8]))
                                .如果 (等于 (相加 (出牌数组 [8], 1), 出牌数组 [9]))
                                    .如果 (等于 (相加 (出牌数组 [9], 1), 出牌数组 [10]))
                                        .如果 (等于 (相加 (出牌数组 [10], 1), 出牌数组 [11]))
                                            .如果 (大于或等于 (出牌数组 [11], 13))
                                                输出调试文本 (“你出的牌违规！！！！”)
                                            .否则
                                                输出调试文本 (“你出的牌是十一张十一顺子”)
                                                赋值 (允许出牌, 1)
                                                赋值 (扑克比点, 出牌数组 [1])
                                                赋值 (牌型, 11111111111)
                                            .如果结束
                                            
                                        .否则
                                            
                                        .如果结束
                                        
                                    .否则
                                        
                                    .如果结束
                                    
                                .否则
                                    
                                .如果结束
                                
                            .否则
                                
                            .如果结束
                            
                        .否则
                            
                        .如果结束
                        
                    .否则
                        
                    .如果结束
                    
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (牌数, 12))
    .如果 (等于 (相加 (出牌数组 [1], 1), 出牌数组 [2]))
        .如果 (等于 (相加 (出牌数组 [2], 1), 出牌数组 [3]))
            .如果 (等于 (相加 (出牌数组 [3], 1), 出牌数组 [4]))
                .如果 (等于 (相加 (出牌数组 [4], 1), 出牌数组 [5]))
                    .如果 (等于 (相加 (出牌数组 [5], 1), 出牌数组 [6]))
                        .如果 (等于 (相加 (出牌数组 [6], 1), 出牌数组 [7]))
                            .如果 (等于 (相加 (出牌数组 [7], 1), 出牌数组 [8]))
                                .如果 (等于 (相加 (出牌数组 [8], 1), 出牌数组 [9]))
                                    .如果 (等于 (相加 (出牌数组 [9], 1), 出牌数组 [10]))
                                        .如果 (等于 (相加 (出牌数组 [10], 1), 出牌数组 [11]))
                                            .如果 (等于 (相加 (出牌数组 [11], 1), 出牌数组 [12]))
                                                .如果 (大于或等于 (出牌数组 [12], 13))
                                                    输出调试文本 (“你出的牌违规！！！！”)
                                                .否则
                                                    输出调试文本 (“你出的牌是十二张十二顺子”)
                                                    赋值 (允许出牌, 1)
                                                    赋值 (扑克比点, 出牌数组 [1])
                                                    赋值 (牌型, 111111111111)
                                                .如果结束
                                                
                                            .否则
                                                
                                            .如果结束
                                            
                                        .否则
                                            
                                        .如果结束
                                        
                                    .否则
                                        
                                    .如果结束
                                    
                                .否则
                                    
                                .如果结束
                                
                            .否则
                                
                            .如果结束
                            
                        .否则
                            
                        .如果结束
                        
                    .否则
                        
                    .如果结束
                    
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .否则
        
    .如果结束
    .如果 (等于 (出牌数组 [1], 出牌数组 [2]))
        .如果 (等于 (出牌数组 [3], 出牌数组 [4]))
            .如果 (等于 (出牌数组 [5], 出牌数组 [6]))
                .如果 (等于 (出牌数组 [7], 出牌数组 [8]))
                    .如果 (等于 (出牌数组 [9], 出牌数组 [10]))
                        .如果 (等于 (出牌数组 [11], 出牌数组 [12]))
                            .如果 (等于 (相加 (出牌数组 [1], 1), 出牌数组 [3]))
                                .如果 (等于 (相加 (出牌数组 [3], 1), 出牌数组 [5]))
                                    .如果 (等于 (相加 (出牌数组 [5], 1), 出牌数组 [7]))
                                        .如果 (等于 (相加 (出牌数组 [7], 1), 出牌数组 [9]))
                                            .如果 (等于 (相加 (出牌数组 [9], 1), 出牌数组 [11]))
                                                .如果 (大于或等于 (出牌数组 [12], 13))
                                                    输出调试文本 (“你出的牌违规！！！！”)
                                                .否则
                                                    输出调试文本 (“你出的牌是六顺！”)
                                                    赋值 (允许出牌, 1)
                                                    赋值 (扑克比点, 出牌数组 [1])
                                                    赋值 (牌型, 101010101010)
                                                .如果结束
                                                
                                            .否则
                                                
                                            .如果结束
                                            
                                        .否则
                                            
                                        .如果结束
                                        
                                    .否则
                                        
                                    .如果结束
                                    
                                .否则
                                    
                                .如果结束
                                
                            .否则
                                
                            .如果结束
                            
                        .否则
                            
                        .如果结束
                        
                    .否则
                        
                    .如果结束
                    
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (大于或等于 (牌数, 13))
    输出调试文本 (“你出的牌违规！！！！”)
    赋值 (允许出牌, 0)
    赋值 (扑克比点, 0)
    赋值 (牌型, 0)
.否则
    
.如果结束


.子程序 处理出的牌, 空白型, , 
.局部变量 i, 整数型, , , 
.局部变量 已出牌数, 整数型, , , 
.局部变量 j, 整数型, , , 

.如果 (等于 (玩家序号, 1))
    .计次循环首 (取数组成员数 (出牌牌点), i)
        .计次循环首 (取数组成员数 (中家牌点), j)
            .如果真 (等于 (出牌牌点 [i], 中家牌点 [j]))
                删除成员 (中家牌点, j, )
                跳出循环 ()
            .如果真结束
            
        .计次循环尾 ()
    .计次循环尾 ()
.否则
    .如果 (等于 (玩家序号, 2))
        .计次循环首 (取数组成员数 (出牌牌点), i)
            .计次循环首 (取数组成员数 (下家牌点), j)
                .如果真 (等于 (出牌牌点 [i], 下家牌点 [j]))
                    删除成员 (下家牌点, j, )
                    跳出循环 ()
                .如果真结束
                
            .计次循环尾 ()
        .计次循环尾 ()
    .否则
        .如果 (等于 (玩家序号, 3))
            .计次循环首 (取数组成员数 (出牌牌点), i)
                .计次循环首 (取数组成员数 (上家牌点), j)
                    .如果真 (等于 (出牌牌点 [i], 上家牌点 [j]))
                        删除成员 (上家牌点, j, )
                        跳出循环 ()
                    .如果真结束
                    
                .计次循环尾 ()
            .计次循环尾 ()
        .否则
            
        .如果结束
        
    .如果结束
    
.如果结束



.子程序 判断出的牌, 空白型, , 
.局部变量 i, 整数型, , , 
.局部变量 已出牌数, 整数型, , , 
.局部变量 中家顶边, 整数型, , , 
.局部变量 上家左边, 整数型, , , 
.局部变量 下家左边, 整数型, , , 
.局部变量 j, 整数型, , , 

赋值 (中家顶边, .顶边)
赋值 (上家左边, .左边)
赋值 (下家左边, .左边)
 ' 玩家序号 ＝ 2
输出调试文本 (相加 (“玩家序号:”, 到文本 (玩家序号)))
输出调试文本 (相加 (“扑克比点:”, 到文本 (扑克比点)))
.如果 (等于 (玩家序号, 1)) ' 中家出牌
    .计次循环首 (取数组成员数 (下家牌点), i)
        .如果真 (大于 (判断牌值 (下家牌点 [i]), 扑克比点))
            赋值 (下家的牌 [i], 左边, 相减 (下家左边, 20))
            跳出循环 ()
            
        .如果真结束
        
    .计次循环尾 ()
     ' 电脑出牌 ()
    
.否则
    
.如果结束
.如果 (等于 (玩家序号, 2)) ' 下家出牌
    .计次循环首 (取数组成员数 (上家牌点), i)
        .如果真 (大于 (判断牌值 (上家牌点 [i]), 扑克比点))
            赋值 (上家的牌 [i], 左边, 相加 (上家左边, 20))
            跳出循环 ()
            
        .如果真结束
        
    .计次循环尾 ()
     ' 电脑出牌 ()
    
.否则
    
.如果结束
.如果 (等于 (玩家序号, 3)) ' 上家出牌
    .计次循环首 (取数组成员数 (中家牌点), i)
        .如果真 (大于 (判断牌值 (中家牌点 [i]), 扑克比点))
            赋值 (中家的牌 [i], 顶边, 相减 (中家顶边, 20))
            跳出循环 ()
            
        .如果真结束
        
    .计次循环尾 ()
     ' 电脑出牌 ()
    
.否则
    
.如果结束


.子程序 _中家叫三分_被单击, 空白型, , 
中家地主 ()


.子程序 _上家叫三分_被单击, 空白型, , 
上家地主 ()

.子程序 _下家叫三分_被单击, 空白型, , 
下家地主 ()

.子程序 上家地主, 空白型, , 
.局部变量 i, 整数型, , , 

.计次循环首 (20, i)
     ' 上家的牌 [i].禁止 ＝ 假
     ' 下家的牌 [i].禁止 ＝ 真
     ' 中家的牌 [i].禁止 ＝ 真
.计次循环尾 ()
加入成员 (上家牌点, 底牌牌点)
显示上家的牌 (上家牌点)
显示底牌 (底牌牌点)
赋值 (.可视, 假)
赋值 (.可视, 假)
赋值 (.可视, 假)

赋值 (.可视, 真)
赋值 (.可视, 真)


.子程序 中家地主, 空白型, , 
.局部变量 i, 整数型, , , 

.计次循环首 (20, i)
     ' 上家的牌 [i].禁止 ＝ 真
     ' 下家的牌 [i].禁止 ＝ 真
     ' 中家的牌 [i].禁止 ＝ 假
.计次循环尾 ()
加入成员 (中家牌点, 底牌牌点)
显示中家的牌 (中家牌点)
显示底牌 (底牌牌点)
赋值 (.可视, 假)
赋值 (.可视, 假)
赋值 (.可视, 假)

赋值 (.可视, 真)
赋值 (.可视, 真)


.子程序 下家地主, 空白型, , 
.局部变量 i, 整数型, , , 

.计次循环首 (20, i)
     ' 上家的牌 [i].禁止 ＝ 真
     ' 下家的牌 [i].禁止 ＝ 假
     ' 中家的牌 [i].禁止 ＝ 真
.计次循环尾 ()
加入成员 (下家牌点, 底牌牌点)
显示下家的牌 (下家牌点)
显示底牌 (底牌牌点)
赋值 (.可视, 假)
赋值 (.可视, 假)
赋值 (.可视, 假)

赋值 (.可视, 真)
赋值 (.可视, 真)


.子程序 _上家出牌按钮_被单击, 空白型, , 
.局部变量 中家顶边, 整数型, , , 
.局部变量 i, 整数型, , , 

赋值 (.顶边)
清除数组 (出牌数组)
清除数组 (出牌牌点)
清除数组 (已选择牌子)
赋值 (牌型, 0)
.如果 (等于 (允许出牌, 0))
    判断出牌 (上家牌点)
    显示上家的牌 (上家牌点)
.否则
    
.如果结束
.如果 (等于 (允许出牌, 1))
    加入成员 (出牌牌点, 已选择牌子)
    显示上家的牌 (上家牌点)
    显示出的牌 (出牌牌点)
    赋值 (玩家序号, 3)
    
    判断出的牌 ()
    处理出的牌 ()
    显示上家的牌 (上家牌点)
    赋值 (允许出牌, 0)
    .计次循环首 (取数组成员数 (), )
        .如果 (等于 ( [顶边], 相减 (20)))
            .如果真 (等于 (.选中, 真))
                未知函数_67175690 ()
            .如果真结束
            
        .否则
            _中家不出按钮_被单击 ()
        .如果结束
        
    .计次循环尾 ()
     ' 上家不出按钮.可视 ＝ 假
     ' 上家出牌按钮.可视 ＝ 假
    赋值 (.可视, 真)
    赋值 (.可视, 真)
    
.否则
    
.如果结束



.子程序 _中家出牌按钮_被单击, 空白型, , 
.局部变量 i, 整数型, , , 
.局部变量 已出牌数, 整数型, , , 
.局部变量 下家左边, 整数型, , , 

赋值 (.左边)
清除数组 (出牌数组)
清除数组 (出牌牌点)
清除数组 (已选择牌子)
 ' 玩家序号 ＝ 1
 ' 允许出牌 ＝ 0
赋值 (牌型, 0)
.如果 (等于 (允许出牌, 0))
    判断出牌 (中家牌点)
    显示中家的牌 (中家牌点)
.否则
    
.如果结束
.如果 (等于 (允许出牌, 1))
    加入成员 (出牌牌点, 已选择牌子)
    显示中家的牌 (中家牌点)
    显示出的牌 (出牌牌点)
    赋值 (玩家序号, 1)
    
    判断出的牌 ()
    处理出的牌 ()
    显示中家的牌 (中家牌点)
    赋值 (允许出牌, 0)
    赋值 (.可视, 假)
    赋值 (.可视, 假)
     ' 下家不出按钮.可视 ＝ 真
     ' 下家出牌按钮.可视 ＝ 真
    .计次循环首 (取数组成员数 (), )
        .如果 (等于 ( [左边], 相减 (20)))
            未知函数_67175658 ()
        .否则
            _下家不出按钮_被单击 ()
        .如果结束
        
    .计次循环尾 ()
    
.否则
    
.如果结束


.子程序 _下家出牌按钮_被单击, 空白型, , 
.局部变量 上家左边, 整数型, , , 
.局部变量 i, 整数型, , , 

赋值 (.左边)
清除数组 (出牌数组)
清除数组 (出牌牌点)
清除数组 (已选择牌子)
赋值 (牌型, 0)
.如果 (等于 (允许出牌, 0))
    判断出牌 (下家牌点)
    显示下家的牌 (下家牌点)
.否则
    
.如果结束
.如果 (等于 (允许出牌, 1))
    加入成员 (出牌牌点, 已选择牌子)
    显示下家的牌 (下家牌点)
    显示出的牌 (出牌牌点)
    赋值 (玩家序号, 2)
    
    判断出的牌 ()
    处理出的牌 ()
    
    显示下家的牌 (下家牌点)
    赋值 (允许出牌, 0)
     ' 下家不出按钮.可视 ＝ 假
     ' 下家出牌按钮.可视 ＝ 假
     ' 上家不出按钮.可视 ＝ 真
     ' 上家出牌按钮.可视 ＝ 真
    .计次循环首 (取数组成员数 (), )
        .如果 (等于 ( [左边], 相加 (20)))
            未知函数_67175674 ()
        .否则
            _上家不出按钮_被单击 ()
        .如果结束
        
    .计次循环尾 ()
.否则
    
.如果结束


.子程序 _中家不出按钮_被单击, 空白型, , 
赋值 (.可视, 假)
赋值 (.可视, 假)
 ' 下家不出按钮.可视 ＝ 真
 ' 下家出牌按钮.可视 ＝ 真


.子程序 _上家不出按钮_被单击, 空白型, , 
 ' 上家不出按钮.可视 ＝ 假
 ' 上家出牌按钮.可视 ＝ 假

赋值 (.可视, 真)
赋值 (.可视, 真)


.子程序 _下家不出按钮_被单击, 空白型, , 
 ' 下家不出按钮.可视 ＝ 假
 ' 下家出牌按钮.可视 ＝ 假

 ' 上家不出按钮.可视 ＝ 真
 ' 上家出牌按钮.可视 ＝ 真


 ' 不属于任何一个程序集、类模块的函数：
