 ' 文件类型：Windows窗口程序

 ' 程序名称：易语言经典算法 - 求帕斯卡三角
 ' 程序描述：　　运用递归的方法取N层帕斯卡三角，并显示。三角形边界上的数都是1，内部的每个数是位于它上面的两个数之和。
 ' 程序作者：大有吴涛易语言有限公司
 ' 邮政编码：116001
 ' 联系地址：辽宁省大连市中山区人民路55号亚太国际金融中心
 ' 联系电话：+86(0411)88995831
 ' 传真号码：+86(0411)88995834
 ' 电子信箱：service@dywt.com.cn
 ' 主页地址：http://www.dywt.com.cn
 ' 版权声明：祝您一帆风顺，心想事成！
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 397
    高度 = 282
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “易语言经典算法 - 求帕斯卡三角”
    帮助文件名 = “”





 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 4 系统核心支持库
 ' iext3 {B6F7542F-B8FE-46a8-9605-98856A687097} 2 0 扩展界面支持库三





.DLL命令 取当前进程伪句柄, 整数型, "", "GetCurrentProcess", , 

.DLL命令 设置进程优先级, 整数型, "", "SetPriorityClass", , 
    .参数 进程句柄, 整数型, , 
    .参数 新优先级常数, 整数型, , 

.DLL命令 设置线程优先级, 整数型, "", "SetThreadPriority", , 
    .参数 线程的句柄, 整数型, , 
    .参数 常数, 整数型, , 

.DLL命令 取当前线程伪句柄, 整数型, "", "GetCurrentThread", , 

.窗口程序集 启动窗口程序集, , , 

.程序集变量 帕斯卡三角阶数, 整数型, , , 帕斯卡三角行数
.程序集变量 帕斯卡三角, 文本型, , , 形成的帕斯卡三角
.子程序 __启动窗口_创建完毕, 空白型, , 
 ' 使用算法：递归调用
 ' 问题：求帕斯卡（杨辉）三角
 ' 问题描述：取N阶的帕斯卡（杨辉）三角并显示
 ' 问题分析：
 ' 　运用递归的方法取N层帕斯卡三角，并显示。三角形边界上的数都是1，内部的每个数是位于它上面的两个数之和。
 ' 　三角形边界上的数都是1，内部的每个数是位于它上面的两个数之和。假设f(row, col)表示杨辉三角的第row行的第col个元素，那么：f(row, col) = 1 (col = 1 或者 row = col)，也就是递归的停止条件。f(row, col) = f(row - 1, col - 1) + f(row - 1, col)，也就是上一行的两个相邻元素的和。递归调用求解。
 ' 备注：

.子程序 取帕斯卡三角元素, 整数型, , 取帕斯卡三角中元素的子程序
.参数 行数, 整数型, , 帕斯卡三角行数
.参数 列数, 整数型, , 帕斯卡三角列数

.如果 (或者 (等于 (列数, 1), 等于 (行数, 列数)))
     ' 每行的外围两个元素为1
    返回 (1)
.否则
     ' 其余的部分为上一行的(行数 - 1)和(行数)元素之和
    返回 (相加 (取帕斯卡三角元素 (相减 (行数, 1), 相减 (列数, 1)), 取帕斯卡三角元素 (相减 (行数, 1), 列数)))
.如果结束


.子程序 _计算图形按钮_被单击, 空白型, , 
.局部变量 行数, 整数型, , , 帕斯卡三角行数
.局部变量 列数, 整数型, , , 帕斯卡三角列数
.局部变量 询问返回, 整数型, , , 信息框返回的结果

赋值 (.内容, “”)
赋值 (帕斯卡三角, “”)
 ' 判断输入的值
.判断开始 (等于 (.内容, “”))
    信息框 (“输入错误!”, 0, )
     ' 当数值过大时，给出提示
.判断 (大于 (到数值 (.内容), 20))
    赋值 (询问返回, 信息框 (“您输入的数值过大，处理数据时程序将会有一段时间无响应，是否继续？”, 相加 (#是否钮, #询问图标), “请问：”))
    .如果真 (等于 (询问返回, #是钮))
         ' 如果确定，调用求帕斯卡三角
        求帕斯卡三角 ()
    .如果真结束
     ' 数据较小时调用求帕斯卡三角
.判断 (并且 (不等于 (.内容, “”), 小于或等于 (到数值 (.内容), 20)))
    求帕斯卡三角 ()
.默认
    
.判断结束


.子程序 求帕斯卡三角, 空白型, , 
.局部变量 行数, 整数型, , , 帕斯卡三角行数
.局部变量 列数, 整数型, , , 帕斯卡三角列数

 ' 要求的帕斯卡三角的总行数
赋值 (帕斯卡三角阶数, 相减 (到数值 (.内容), 1))
.变量循环首 (0, 帕斯卡三角阶数, 1, 行数)
    .变量循环首 (0, 行数, 1, 列数)
         ' 取帕斯卡三角元素放到当前行里
        赋值 (帕斯卡三角, 相加 (帕斯卡三角, 到文本 (取帕斯卡三角元素 (相加 (行数, 1), 相加 (列数, 1))), “,”))
    .变量循环尾 ()
    赋值 (帕斯卡三角, 相加 (取文本左边 (帕斯卡三角, 相减 (取文本长度 (帕斯卡三角), 1)), #换行符))
     ' 没层需去尾都好加换行符
.变量循环尾 ()
 ' 显示结果
赋值 (.内容, 帕斯卡三角)



 ' 不属于任何一个程序集、类模块的函数：
