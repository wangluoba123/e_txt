 ' 文件类型：Windows模块源码

 ' 程序名称：IP编辑框类
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0



.常量 ICC_INTERNET_CLASSES, "2048", , 
.常量 IPM_CLEARADDRESS, "1124", , 清空IP框地址
.常量 IPM_GETADDRESS, "1126", , 获得IP框地址
.常量 IPM_ISBLANK, "1129", , 是否为空IP框
.常量 IPM_SETADDRESS, "1125", , 置IP框地址
.常量 WS_CHILD, "1073741824", , 创建一个子窗口。
.常量 WS_VISIBLE, "268435456", , 创建一个初始状态为可见的窗口
.常量 IPM_SETFOCUS, "1128", , 置焦点位置
.常量 IPM_SETRANGE, "1127", , 置IP框范围
.常量 WM_SETFONT, "48", , 设置字体
.常量 DEFAULT_GUI_FONT, "17", , 缺省字体


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 6 系统核心支持库




数据类型 初始化控件结构, , 初始化控件结构;
    .成员 结构大小, 整数型, , , 
    .成员 控件标志, 整数型, , , 

数据类型 IP地址, 公开, 
    .成员 D段, 字节型, , , 
    .成员 C段, 字节型, , , 
    .成员 B段, 字节型, , , 
    .成员 A段, 字节型, , , 

数据类型 RECT, , 矩形;
    .成员 左边, 整数型, , , 
    .成员 顶边, 整数型, , , 
    .成员 右边, 整数型, , , 
    .成员 底边, 整数型, , , 


.DLL命令 A初始化控件, 整数型, "comctl32.dll", "InitCommonControlsEx", , 　
    .参数 初始化控件结构, 初始化控件结构, , 

.DLL命令 A创建窗口, 整数型, "user32", "CreateWindowExA", , 建立窗口　在返回前，CreateWindow给窗口过程发送一个WM_CREATE消息。对于层叠，弹出式和子窗口，CreateWindow给窗口发送WM_CREATE，WM_GETMINMAXINFO和WM_NCCREATE消息。消息WM_CREATE的IParam参数包含一个指向CREATESTRUCT结构的指针。如果指定了WS_VISIBLE风格，CreateWindow向窗口发送所有需要激活和显示窗口的消息
    .参数 扩展窗口样式, 整数型, , WS_EX_常量
    .参数 窗口类名, 文本型, , 指向一个空结束的字符串或整型数atom。如果该参数是一个整型量，它是由此前调用theGlobaIAddAtom函数产生的全局量。这个小于OxCOOO的16位数必须是IpClassName参数字的低16位，该参数的高位必须是O
    .参数 窗口名, 文本型, , 
    .参数 窗口样式, 整数型, , WS_常量
    .参数 左边, 整数型, , CW_USEDEFAULT
    .参数 顶边, 整数型, , 
    .参数 宽度, 整数型, , 
    .参数 高度, 整数型, , 
    .参数 父窗口句柄, 整数型, , 
    .参数 菜单句柄, 整数型, , 
    .参数 程序句柄, 整数型, , 与窗口相关联的模块事例的句柄
    .参数 额外数据, 整数型, , 指向一个值的指针，该值传递给窗口 WM_CREATE消息

.DLL命令 A取窗口矩形, 整数型, "user32", "GetWindowRect", , 获得整个窗口的范围矩形，窗口的边框、标题栏、滚动条及菜单等都在这个矩形内　非零表示成功，零表示失败。会设置GetLastError
    .参数 窗口句柄, 整数型, , 想获得范围矩形的那个窗口的句柄
    .参数 矩形区域, RECT, , RECT，屏幕坐标中随同窗口装载的矩形;  

.DLL命令 A移动窗口, 整数型, "user32", "MoveWindow", , 改变指定窗口的位置和大小。顶级窗口可能受最大或最小尺寸的限制，那些尺寸优先于这里设置的参数　非零表示成功，零表示失败
    .参数 窗口句柄, 整数型, , 欲移动窗口的句柄
    .参数 左侧位置, 整数型, , 窗口新的左侧位置
    .参数 顶部位置, 整数型, , 窗口新的顶部位置
    .参数 新宽度, 整数型, , 窗口的新宽度
    .参数 高宽度, 整数型, , 窗口的高宽度
    .参数 是否重画, 整数型, , 如窗口此时应重画，则设为TRUE（非零）。FALSE（零）则表明应用程序会自己决定是否重画窗口;

.DLL命令 A发送消息, 整数型, "user32", "SendMessageA", , 调用一个窗口的窗口函数，将一条消息发给那个窗口。除非消息处理完毕，否则该函数不会返回。SendMessageBynum， ;    SendMessageByString是该函数的“类型安全”声明形式　由具体的消息决定
    .参数 窗口句柄, 整数型, , 要接收消息的那个窗口的句柄
    .参数 信息值, 整数型, , 消息的标识符
    .参数 参数一, 整数型, , 具体取决于消息
    .参数 参数二, 整数型, , 具体取决于消息;

.DLL命令 A发送消息_IP地址, 整数型, "user32", "SendMessageA", , 调用一个窗口的窗口函数，将一条消息发给那个窗口。除非消息处理完毕，否则该函数不会返回。SendMessageBynum， ;    SendMessageByString是该函数的“类型安全”声明形式　由具体的消息决定
    .参数 窗口句柄, 整数型, , 要接收消息的那个窗口的句柄
    .参数 信息值, 整数型, , 消息的标识符
    .参数 参数一, 整数型, , 具体取决于消息
    .参数 参数二, IP地址, , 具体取决于消息;

.DLL命令 A取对象句柄, 整数型, "gdi32", "GetStockObject", , 取得一个固有对象（Stock）。这是可由任何应用程序使用的windows标准对象之一  指向指定对象的一个句柄。零表示出错
    .参数 类型, 整数型, , 下述表格中定义的任何常数之一BLACK_BRUSH黑色刷子DKGRAY_BRUSH黑灰色刷子GRAY_BRUSH灰色刷子HOLLOW_BRUSH凹刷子LTGRAY_BRUSH浅灰色刷子NULL_BRUSH空刷子WHITE_BRUSH白色刷子BLACK_PEN黑色画笔NULL_PEN空画笔WHITE_PEN白色画笔ANSI_FIXED_FONT采用windows（ANSI）字符集的等宽字体ANSI_VAR_FONT采用windows（ANSI）字符集的不等宽字体DEVICE_DEFAULT_FONT设备使用的默认字体（NT）DEFAULT_GUI_FONT用户界面的默认字体，包括菜单和对话框字体（Windows 95）OEM_FIXED_FONTOEM字符集的固有字体SYSTEM_FONT屏幕系统字体。这是用于菜单、对话框等等的默认不等宽字体SYSTEM_FIXED_FONT屏幕系统字体。这是用于菜单、对话框等等的默认等宽字体（在windows 3.0之前使用）DEFAULT_PALETTE默认调色板;

.DLL命令 A删除对象, 整数型, "gdi32", "DeleteObject", , 用这个函数删除GDI对象， 非零表示成功，零表示失败
    .参数 对象句柄, 整数型, , 一个GDI对象的句柄;

.程序集 程序集1, , , 

.子程序 _启动子程序, 整数型, , 请在本子程序中放置易模块初始化代码
_临时子程序 () ' 在初始化代码执行完毕后调用测试代码
返回 (0) ' 可以根据您的需要返回任意数值

.子程序 _临时子程序, 空白型, , 
 ' 本名称子程序用作测试程序用，仅在开发及调试环境中有效，编译发布程序前将被系统自动清空，请将所有用作测试的临时代码放在本子程序中。 ***注意不要修改本子程序的名称、参数及返回值类型。


.类模块 IP编辑框类, , , SysIPAddress32

.程序集变量 已经初始化, 逻辑型, , , 
.程序集变量 IP框句柄, 整数型, , , 
.程序集变量 字体句柄, 整数型, , , 
.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用
.局部变量 初始化控件结构, 初始化控件结构, , , 

.如果真 (等于 (已经初始化, 假))
    赋值 (初始化控件结构.结构大小, 8)
    赋值 (初始化控件结构.控件标志, #ICC_INTERNET_CLASSES)
    A初始化控件 (初始化控件结构)
.如果真结束


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用
A删除对象 (字体句柄)

.子程序 创建, 整数型, 公开, 返回IP框句柄
.参数 参数_父窗口句柄, 整数型, , 
.参数 参数_左边, 整数型, 可空, 
.参数 参数_顶边, 整数型, 可空, 
.参数 参数_宽度, 整数型, 可空, 
.参数 参数_高度, 整数型, 可空, 

.如果真 (是否为空 (参数_宽度))
    赋值 (参数_宽度, 104)
.如果真结束
.如果真 (是否为空 (参数_高度))
    赋值 (参数_高度, 20)
.如果真结束
赋值 (IP框句柄, A创建窗口 (0, “SysIPAddress32”, 字符 (0), 位或 (#WS_CHILD, #WS_VISIBLE), 参数_左边, 参数_顶边, 参数_宽度, 参数_高度, 参数_父窗口句柄, 0, 0, 0))
赋值 (字体句柄, A取对象句柄 (#DEFAULT_GUI_FONT))
A发送消息 (IP框句柄, #WM_SETFONT, 字体句柄, 1) ' 设置默认字体
返回 (IP框句柄)


.子程序 移动, 逻辑型, 公开, 成功返回真，否则返回假
.参数 参数_IP框句柄, 整数型, , 
.参数 参数_左边, 整数型, 可空, 
.参数 参数_顶边, 整数型, 可空, 
.参数 参数_宽度, 整数型, 可空, 
.参数 参数_高度, 整数型, 可空, 

.局部变量 矩形, RECT, , , 

A取窗口矩形 (IP框句柄, 矩形)
.如果真 (是否为空 (参数_左边))
    赋值 (参数_左边, 矩形.左边)
.如果真结束
.如果真 (是否为空 (参数_顶边))
    赋值 (参数_顶边, 矩形.顶边)
.如果真结束
.如果真 (是否为空 (参数_宽度))
    赋值 (参数_宽度, 相减 (矩形.右边, 矩形.左边))
.如果真结束
.如果真 (是否为空 (参数_高度))
    赋值 (参数_高度, 相减 (矩形.底边, 矩形.顶边))
.如果真结束
返回 (不等于 (A移动窗口 (参数_IP框句柄, 参数_左边, 参数_顶边, 参数_宽度, 参数_高度, 1), 0))

.子程序 取地址, 整数型, 公开, 返回非空的段的数量
.参数 参数_IP框句柄, 整数型, , 
.参数 参数_地址, IP地址, 参考, 

.局部变量 返回值, 整数型, , , 

赋值 (返回值, A发送消息_IP地址 (参数_IP框句柄, #IPM_GETADDRESS, 0, 参数_地址))
返回 (返回值)


.子程序 置地址, 逻辑型, 公开, 成功返回真，否则返回假
.参数 参数_IP框句柄, 整数型, , 
.参数 参数_地址, IP地址, , 

.局部变量 写入值, 整数型, , , 

赋值 (写入值, 相加 (参数_地址.D段, 相乘 (参数_地址.C段, 256), 相乘 (参数_地址.B段, 256, 256), 相乘 (参数_地址.A段, 256, 256, 256)))
返回 (等于 (A发送消息 (参数_IP框句柄, #IPM_SETADDRESS, 0, 写入值), 1))


.子程序 清空, 逻辑型, 公开, 成功返回真，否则返回假
.参数 参数_IP框句柄, 整数型, , 

返回 (等于 (A发送消息 (参数_IP框句柄, #IPM_CLEARADDRESS, 0, 0), 1))


.子程序 文本置地址, 逻辑型, 公开, 成功返回真，否则返回假
.参数 参数_IP框句柄, 整数型, , 
.参数 IP地址文本, 文本型, , 

.局部变量 IP地址分割, 文本型, , "4", 
.局部变量 IP地址, 字节型, , "4", 
.局部变量 计次, 整数型, , , 
.局部变量 写入值, IP地址, , , 

赋值 (IP地址分割, 分割文本 (IP地址文本, “.”, 4))
.如果真 (不等于 (取数组成员数 (IP地址分割), 4))
    返回 (假)
.如果真结束
.计次循环首 (4, 计次)
    赋值 (IP地址 [计次], 到数值 (IP地址分割 [计次]))
.计次循环尾 ()
赋值 (写入值.A段, IP地址 [1])
赋值 (写入值.B段, IP地址 [2])
赋值 (写入值.C段, IP地址 [3])
赋值 (写入值.D段, IP地址 [4])
返回 (置地址 (参数_IP框句柄, 写入值))


.子程序 是否空地址, 逻辑型, 公开, 返回真为空，假为非空。
.参数 参数_IP框句柄, 整数型, , 

返回 (不等于 (A发送消息 (参数_IP框句柄, #IPM_ISBLANK, 0, 0), 0))


.子程序 置焦点位置, 逻辑型, 公开, 成功返回真，否则返回假
.参数 参数_IP框句柄, 整数型, , 
.参数 IP段位置, 整数型, , 位置从0开始。

返回 (不等于 (A发送消息 (参数_IP框句柄, #IPM_SETFOCUS, IP段位置, 0), 0))


.子程序 置IP范围, 逻辑型, 公开, 设置某IP段输入值的范围。成功返回真，否则返回假
.参数 参数_IP框句柄, 整数型, , 
.参数 IP段位置, 整数型, , 位置从0开始。
.参数 最低值, 字节型, , 
.参数 最高值, 字节型, , 

返回 (不等于 (A发送消息 (参数_IP框句柄, #IPM_SETRANGE, IP段位置, 相加 (最低值, 相乘 (最高值, 256))), 0))



 ' 不属于任何一个程序集、类模块的函数：
