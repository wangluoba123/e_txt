 ' 文件类型：Windows模块源码

 ' 程序名称：本土化易模块
 ' 程序描述：收集了论坛上一些较常用的模块,现在有99个可用的,其他未完成的大家一起来搞吧.这些可以直接作为模块使用,或直接将子程序拷贝到你自己的程序中使用.
 ' 程序作者：王军收集
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.99
 ' 创建号：0.0

窗口 测试窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 534
    高度 = 436
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “测试用窗口,可删”
    帮助文件名 = “”



.声音 文档_笔画, " ' 已保存到：D:\易语言学习\Data\本土化易模块1.99.e\文档_笔画", , ZK笔画.TXT


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 4 系统核心支持库
 ' shell 52F260023059454187AF826A3C07AF2A 1 0 操作系统界面功能支持库
 ' internet 707ca37322474f6ca841f0e224f4b620 1 0 互联网支持库
 ' iext2 AF6AD80AA4244A59AFB3D83ECF5173CC 1 1 扩展界面支持库二
 ' CnCalendar {18C0788E-59AE-4112-B452-6BF0C1B727FB} 1 2 农历日期支持库





.窗口程序集 本土化命令, , , 是一系列常用通用子程序的集合

.子程序 _启动子程序, 整数型, , 请在本子程序中放置易模块初始化代码
_临时子程序 () ' 在初始化代码执行完毕后调用测试代码
返回 (0) ' 可以根据您的需要返回任意数值

.子程序 _临时子程序, 空白型, , 
 ' 本名称子程序用作测试程序用，仅在开发及调试环境中有效，编译发布程序前将被系统自动清空，请将所有用作测试的临时代码放在本子程序中。 ***注意不要修改本子程序的名称、参数及返回值类型。
.如果真 (等于 (是否为调试版 (), 真))
    载入 (测试窗口, , 真)
.如果真结束


.子程序 _按钮1_被单击, 空白型, , 
.局部变量 次数, 整数型, , , 

赋值 (.内容, “”)
赋值 (.内容, 相加 (.内容, #换行符, 取后缀 (“ABCD.EFG”)))
赋值 (.内容, 相加 (.内容, #换行符, 去后缀 (“ABCD.EFG”)))
赋值 (.内容, 相加 (.内容, #换行符, 改后缀 (“ABCD.EFG”, “HIJ”)))
赋值 (.内容, 相加 (.内容, #换行符, 取单独文件名 (“A:\BCD\EFG\HIJ.KLM”, 真)))
赋值 (.内容, 相加 (.内容, #换行符, 取单独文件名 (“A:\BCD\EFG\HIJ.KLM”, 假)))
赋值 (.内容, 相加 (.内容, #换行符, 取文件名 (“A:\BCD\EFG\HIJ.KLM”)))
赋值 (.内容, 相加 (.内容, #换行符, 取盘符 (“A:\BCD\EFG\HIJ.KLM”)))
赋值 (.内容, 相加 (.内容, #换行符, 取格式时分秒 (取现行时间 ())))
赋值 (.内容, 相加 (.内容, #换行符, 重复取硬盘特征字 (5, “1234567890”)))
赋值 (.内容, 相加 (.内容, #换行符, 到文本 (取GB2312简体汉字笔画数 (“门”))))
赋值 (.内容, 相加 (.内容, #换行符, 到文本 (取繁体汉字笔划 (“门”))))
赋值 (.内容, 相加 (.内容, #换行符, 取汉字区位码 (“张”)))
赋值 (.内容, 相加 (.内容, #换行符, 到文本 (是否为汉字 (“张”))))
赋值 (.内容, 相加 (.内容, #换行符, 到文本 (是否为汉字 (“12”))))
赋值 (.内容, 相加 (.内容, #换行符, 到文本 (取十进制 (“63”, 3))))
赋值 (.内容, 相加 (.内容, #换行符, 到文本 (还原为字节集 (“00BFAD00AFD4FD4F9E054F9FF91FC5FF2076FBAFDB071044”))))
赋值 (.内容, 相加 (.内容, #换行符, 查看字节集 ({ 12, 34, 56 })))
赋值 (.内容, 相加 (.内容, #换行符, 字节集到十六进制 ({ 12, 34, 56 })))
赋值 (.内容, 相加 (.内容, #换行符, 取路径 (“A:\BCD\EFG\HIJ.KLM”)))
赋值 (.内容, 相加 (.内容, #换行符, 取关联 (“*.txt”)))
赋值 (.内容, 相加 (.内容, #换行符, 到文本 (是否有重复 (“AAAA”, 真))))
赋值 (.内容, 相加 (.内容, #换行符, 取美式日期 (取现行时间 ())))
赋值 (.内容, 相加 (.内容, #换行符, 取格式年月日 (取现行时间 ())))
赋值 (.内容, 相加 (.内容, #换行符, 首字母大写 (“how do you do!”)))
赋值 (.内容, 相加 (.内容, #换行符, 到文本 (清空系统临时目录 ())))
赋值 (.内容, 相加 (.内容, #换行符, 取网址文件名 (“http://www.dywt.com.cn/edown/ech_ins.exe”)))
赋值 (.内容, 相加 (.内容, #换行符, 取网址引用 (“http://www.dywt.com.cn/edown/ech_ins.exe”)))
赋值 (.内容, 相加 (.内容, #换行符, 取IP段 (“192.168.0.1”)))
赋值 (.内容, 相加 (.内容, #换行符, 取中国星期几 (取现行时间 ())))
.计次循环首 (24, 次数)
    赋值 (.内容, 相加 (.内容, #换行符, 取节气文本 (次数)))
.计次循环尾 ()
赋值 (.内容, 相加 (.内容, #换行符, 时间到格式文本 (取现行时间 ())))
赋值 (.内容, 相加 (.内容, #换行符, 取行左边 (“1234567890”, “5”, 1, 真)))
赋值 (.内容, 相加 (.内容, #换行符, 取行右边 (“1234567890”, “5”, , 真)))
赋值 (.内容, 相加 (.内容, #换行符, 取行中间 (“1234567890”, “3”, “7”, 1, 真)))
 ' 赋值 (.内容, 相加 (.内容, #换行符, 表达式计算 (“(1+2)*3/4”, 真)))
赋值 (.内容, 相加 (.内容, #换行符, 取易语言安装目录 (假)))
赋值 (.内容, 相加 (.内容, #换行符, 时间文本 ()))


.子程序 _按钮3_被单击, 空白型, , 
信息框 (取网络时间 (), 0, )


.子程序 _按钮4_被单击, 空白型, , 
信息框 (取外网IP (), 0, )


.子程序 _按钮5_被单击, 空白型, , 
信息框 (字串类型 (“A”), 0, )


.子程序 _按钮6_被单击, 空白型, , 
赋值 (.类型, 0)
赋值 (.初始目录, 取运行目录 ())
赋值 (.过滤器, “可执行文件*.EXE|*.EXE”)
.如果真 (等于 (打开 (), 真))
    信息框 (是否是易程序 (.文件名), 0, )
.如果真结束


.子程序 _按钮2_被单击, 空白型, , 
赋值 (.类型, 0)
赋值 (.初始目录, 取运行目录 ())
赋值 (.过滤器, “所支持的图片(*.JPG,*.BMP,*.GIF,*.CUR,*.ICO)|*.JPG;*.BMP;*.GIF;*.CUR;*.ICO|所有文件(*.*)|*.*”)
.如果真 (打开 ())
    图片到ICO (.文件名, “C:\2.ICO”, 16)
.如果真结束



.子程序 _按钮7_被单击, 空白型, , 
.局部变量 次数, 整数型, , , 
.局部变量 计次, 整数型, , , 

赋值 (.内容, “”)
.计次循环首 (12, 次数)
    .计次循环首 (31, 计次)
        .如果真 (不等于 (取公历节日 (取年份 (取现行时间 ()), 次数, 计次), “”))
            相加 (到文本 (取年份 (取现行时间 ())), “年”, 到文本 (次数), “月”, 到文本 (计次), “日：”, 取公历节日 (2005, 次数, 计次), #换行符).加入文本 ()
        .如果真结束
        
    .计次循环尾 ()
.计次循环尾 ()


.子程序 _按钮8_被单击, 空白型, , 
.局部变量 次数, 整数型, , , 
.局部变量 计次, 整数型, , , 
.局部变量 公历日期, 日期时间型, , , 
.局部变量 农历年, 整数型, , , 
.局部变量 农历月, 整数型, , , 
.局部变量 农历日, 整数型, , , 
.局部变量 是否闰月, 逻辑型, , , 

赋值 (.内容, “”)
.计次循环首 (12, 次数)
    .计次循环首 (30, 计次)
        未知支持库函数_1 (到时间 (相加 (到文本 (取年份 (取现行时间 ())), “年”, 到文本 (次数), “月”, 到文本 (计次), “日”)), 农历年, 农历月, 农历日, 是否闰月)
        .如果真 (不等于 (取农历节日 (农历月, 农历日), “”))
            相加 (到文本 (取年份 (取现行时间 ())), “年”, 到文本 (次数), “月”, 到文本 (计次), “日：”, 取农历节日 (农历月, 农历日), #换行符).加入文本 ()
        .如果真结束
        
    .计次循环尾 ()
.计次循环尾 ()



.子程序 _按钮9_被单击, 空白型, , 
信息框 (取文本声母 (“单位ASDFWR234234”), 0, )


.子程序 _按钮10_被单击, 空白型, , 
.局部变量 变量1, 文本型, , , 

输入框 (“请输入一个目录全路径”, “目录是否存在?”, , 变量1, )
到文本 (目录是否存在1 (变量1)).加入文本 ()
到文本 (目录是否存在2 (变量1)).加入文本 ()


.子程序 _按钮11_被单击, 空白型, , 
.局部变量 变量1, 文本型, , , 
.局部变量 时间, 日期时间型, , , 

输入框 (“请输入女方最后一次月经结束时间”, “取预产期”, 到文本 (取现行时间 ()), 变量1, )
赋值 (时间, 到时间 (变量1))
输出调试文本 (时间)
赋值 (.内容, 时间到文本 (取预产期 (时间), #日期部分))


.子程序 _按钮12_被单击, 空白型, , 
赋值 (.内容, 取星座 (取现行时间 ()))


.子程序 _按钮13_被单击, 空白型, , 
赋值 (.内容, 取圆周率 (240))


.子程序 _按钮14_被单击, 空白型, , 
.局部变量 错误信息文本, 文本型, , , 

赋值 (.过滤器, “易数据库(*.EDB)|*.EDB|所有文件(*.*)|*.*”)
赋值 (.初始目录, 取运行目录 ())
.如果真 (等于 (打开 (), 假))
    返回 ()
.如果真结束
赋值 (.内容, .文件名)
.如果 (修复易数据库 (.内容, 错误信息文本))
    打开 (.内容, , , , , , )
    编辑 (“数据库已修复”, #禁止修改, )
.否则
    信息框 (错误信息文本, 0, )
.如果结束



.子程序 _按钮15_被单击, 空白型, , 
输出调试文本 (清空系统临时目录 (真, 真))


.子程序 _按钮16_被单击, 空白型, , 
赋值 (.内容, 取随机汉字 ())

.子程序 _按钮17_被单击, 空白型, , 
赋值 (.内容, 身份证号转换 (.内容))


.子程序 _按钮18_被单击, 空白型, , 
信息框 (取身份证判断 (.内容), 0, )


.子程序 _按钮19_被单击, 空白型, , 
信息框 (取身份证性别 (.内容), 0, )

.子程序 _按钮20_被单击, 空白型, , 
信息框 (到时间 (取身份证日期 (.内容)), 0, )


.子程序 _按钮21_被单击, 空白型, , 
信息框 (取身份证比较 (.内容, 取现行时间 ()), 0, )


.子程序 _按钮22_被单击, 空白型, , 
出错退出 ()

.程序集 算术运算, , , 

.子程序 取十进制, 整数型, , 将非十进制的标准格式文本转换成十进制整数值
.参数 欲转换的值, 文本型, , 欲转换的值，文本型！
.参数 数值类型, 整数型, 可空, 0，#十六进制；1，#十进制（默认）；2，#八进制；3，#二进制

.局部变量 s, 整数型, , , 最终结果
.局部变量 a, 整数型, , , 中间变量
.局部变量 b, 整数型, , , 中间变量
.局部变量 c, 文本型, , , 中间变量
.局部变量 d, 整数型, , , 中间变量

赋值 (欲转换的值, 到小写 (欲转换的值))
.如果真 (是否为空 (数值类型))
    赋值 (数值类型, 1)
.如果真结束
赋值 (s, 0)
.判断开始 (等于 (数值类型, 0))
    赋值 (a, 取文本长度 (欲转换的值))
    .变量循环首 (1, a, 1, b)
        赋值 (c, 取文本中间 (欲转换的值, 相加 (相减 (a, b), 1), 1))
        .如果真 (或者 (并且 (小于或等于 (取代码 (c, ), 取代码 (“f”, )), 大于或等于 (取代码 (c, ), 取代码 (“a”, ))), 并且 (小于或等于 (取代码 (c, ), 取代码 (“F”, )), 大于或等于 (取代码 (c, ), 取代码 (“A”, )))))
            .如果真 (并且 (大于或等于 (取代码 (c, ), 取代码 (“A”, )), 小于或等于 (取代码 (c, ), 取代码 (“F”, ))))
                赋值 (d, 相加 (相减 (取代码 (c, ), 取代码 (“A”, )), 10))
            .如果真结束
            .如果真 (并且 (大于或等于 (取代码 (c, ), 取代码 (“a”, )), 小于或等于 (取代码 (c, ), 取代码 (“f”, ))))
                赋值 (d, 相加 (相减 (取代码 (c, ), 取代码 (“a”, )), 10))
            .如果真结束
            
        .如果真结束
        .如果真 (并且 (小于或等于 (取代码 (c, ), 取代码 (“9”, )), 大于或等于 (取代码 (c, ), 取代码 (“0”, ))))
            赋值 (d, 到数值 (c))
        .如果真结束
        赋值 (s, 相加 (s, 相乘 (求次方 (16, 相减 (b, 1)), d)))
    .变量循环尾 ()
.默认
    
.判断结束
.判断开始 (等于 (数值类型, 1))
    赋值 (s, 到数值 (欲转换的值))
.默认
    
.判断结束
.判断开始 (等于 (数值类型, 2))
    赋值 (a, 取文本长度 (欲转换的值))
    .变量循环首 (1, a, 1, b)
        赋值 (c, 取文本中间 (欲转换的值, 相加 (相减 (a, b), 1), 1))
        .如果真 (并且 (小于或等于 (取代码 (c, ), 取代码 (“7”, )), 大于或等于 (取代码 (c, ), 取代码 (“0”, ))))
            赋值 (d, 到数值 (c))
        .如果真结束
        赋值 (s, 相加 (s, 相乘 (求次方 (8, 相减 (b, 1)), d)))
    .变量循环尾 ()
.默认
    
.判断结束
.判断开始 (等于 (数值类型, 3))
    赋值 (a, 取文本长度 (欲转换的值))
    .变量循环首 (1, a, 1, b)
        赋值 (c, 取文本中间 (欲转换的值, 相加 (相减 (a, b), 1), 1))
        .如果真 (并且 (小于或等于 (取代码 (c, ), 取代码 (“1”, )), 大于或等于 (取代码 (c, ), 取代码 (“0”, ))))
            赋值 (d, 到数值 (c))
        .如果真结束
        赋值 (s, 相加 (s, 相乘 (求次方 (2, 相减 (b, 1)), d)))
    .变量循环尾 ()
.默认
    
.判断结束
返回 (s)

.子程序 表达式计算, 文本型, , 成功返回计算后的文本结果，失败返回空文本
.参数 Text, 文本型, , 
.参数 单位, 逻辑型, , 函数计算时使用，真为弧度制，假为角度制

.局部变量 TempText, 文本型, , , 

赋值 (TempText, 函数计算 (Text, 单位))
返回 (括号计算 (TempText))

.子程序 二分查找, 整数型, , 
.参数 数组, 文本型, 数组, 
.参数 待查, 文本型, , 
.参数 类型, 整数型, , 
.参数 区分大小写, 逻辑型, , 

.局部变量 位置, 整数型, , , 
.局部变量 数组总数, 整数型, , , 
.局部变量 对分, 整数型, , , 
.局部变量 数值A, 双精度小数型, , , 
.局部变量 数值B, 双精度小数型, , , 
.局部变量 文本, 文本型, , , 

赋值 (位置, 1)
赋值 (数组总数, 取数组成员数 (数组))
.如果真 (等于 (数组总数, 0))
    返回 (1)
.如果真结束
.判断开始 (等于 (类型, 0))
    赋值 (数值A, 到数值 (待查))
    .如果真 (大于或等于 (数值A, 到数值 (数组 [数组总数])))
        返回 (相加 (数组总数, 1))
    .如果真结束
    .如果真 (小于或等于 (数值A, 到数值 (数组 [1])))
        返回 (1)
    .如果真结束
    
    .判断循环首 (小于 (位置, 相减 (数组总数, 1)))
        赋值 (对分, 整除 (相加 (位置, 数组总数), 2))
        赋值 (数值B, 到数值 (数组 [对分]))
        .如果真 (等于 (数值A, 数值B))
            赋值 (位置, 对分)
            跳出循环 ()
        .如果真结束
        
        .如果 (小于 (数值A, 数值B))
            赋值 (数组总数, 对分)
        .否则
            赋值 (位置, 对分)
        .如果结束
        
    .判断循环尾 ()
.判断 (等于 (类型, 1))
    .如果真 (大于或等于 (文本比较 (待查, 数组 [数组总数], 区分大小写), 0))
        返回 (相加 (数组总数, 1))
    .如果真结束
    .如果真 (小于或等于 (文本比较 (待查, 数组 [1], 区分大小写), 0))
        返回 (1)
    .如果真结束
    .判断循环首 (小于 (位置, 相减 (数组总数, 1)))
        赋值 (对分, 整除 (相加 (位置, 数组总数), 2))
        .如果真 (等于 (文本比较 (待查, 数组 [对分], 区分大小写), 0))
            赋值 (位置, 对分)
            跳出循环 ()
        .如果真结束
        .如果 (小于 (文本比较 (待查, 数组 [对分], 区分大小写), 0))
            赋值 (数组总数, 对分)
        .否则
            赋值 (位置, 对分)
        .如果结束
        
    .判断循环尾 ()
    
.判断 (等于 (类型, 2))
    赋值 (数值A, 取字节集数据 (到字节集 (到时间 (待查)), #双精度小数型))
    .如果真 (大于或等于 (数值A, 取字节集数据 (到字节集 (到时间 (数组 [数组总数])), #双精度小数型)))
        返回 (相加 (数组总数, 1))
    .如果真结束
    .如果真 (小于或等于 (数值A, 取字节集数据 (到字节集 (到时间 (数组 [1])), #双精度小数型)))
        返回 (1)
    .如果真结束
    .判断循环首 (小于 (位置, 相减 (数组总数, 1)))
        赋值 (对分, 整除 (相加 (位置, 数组总数), 2))
        赋值 (数值B, 取字节集数据 (到字节集 (到时间 (数组 [对分])), #双精度小数型))
        .如果真 (等于 (数值A, 数值B))
            赋值 (位置, 对分)
            跳出循环 ()
        .如果真结束
        .如果 (小于 (数值A, 数值B))
            赋值 (数组总数, 对分)
        .否则
            赋值 (位置, 对分)
        .如果结束
        
    .判断循环尾 ()
.默认
    
.判断结束
返回 (相加 (位置, 1))

.子程序 十进制转换为二进制, 文本型, , 
.参数 十进制数, 整数型, , 

.局部变量 结果, 文本型, , , 
.局部变量 余数, 整数型, , , 
.局部变量 长度, 整数型, , , 

.判断循环首 (大于 (十进制数, 1))
    赋值 (余数, 求余数 (十进制数, 2))
    赋值 (十进制数, 整除 (十进制数, 2))
    赋值 (结果, 相加 (到文本 (余数), 结果))
.判断循环尾 ()
赋值 (结果, 相加 (到文本 (十进制数), 结果))
赋值 (长度, 取文本长度 (结果))
.判断循环首 (小于 (长度, 8))
    赋值 (结果, 相加 (“0”, 结果))
    赋值 (长度, 取文本长度 (结果))
.判断循环尾 ()
返回 (结果)

.子程序 函数计算, 文本型, , 求正弦、余弦、正切、余切
.参数 Text, 文本型, , 
.参数 单位, 逻辑型, , 真为弧度制，假为角度制

.局部变量 TempText, 文本型, , , 
.局部变量 FText, 文本型, , , 寻找值
.局部变量 FNum, 整数型, , , 寻找值的长度
.局部变量 ZText, 文本型, , , 函数括号内文本
.局部变量 RetText, 文本型, , , 函数括号内计算结果
.局部变量 i, 整数型, , , 
.局部变量 Find, 整数型, , , 寻找到的位置
.局部变量 YFind, 整数型, , , 寻找到右括号的位置

赋值 (TempText, Text)
.计次循环首 (4, i)
    赋值 (FText, 多项选择 (i, “sin(”, “cos(”, “tg(”, “ctg(”))
    赋值 (FNum, 多项选择 (i, 4, 4, 3, 4))
    赋值 (Find, 寻找文本 (TempText, FText, , 假))
    .判断循环首 (不等于 (Find, -1))
        赋值 (YFind, 寻找文本 (TempText, “)”, Find, 假)) ' 寻找右括号
        .如果真 (不等于 (YFind, -1))
            赋值 (ZText, 取文本中间 (TempText, 相加 (Find, FNum), 相减 (YFind, Find, FNum)))
            .判断开始 (等于 (ZText, “”)) ' 括号内无文本
                赋值 (TempText, 文本替换 (TempText, Find, 相加 (FNum, 1), ))
            .默认
                赋值 (RetText, 括号计算 (ZText))
                .如果真 (等于 (RetText, “”)) ' 失败返回空文本
                    返回 (“”)
                .如果真结束
                .判断开始 (等于 (i, 1)) ' 正弦
                    赋值 (RetText, 到文本 (求正弦 (选择 (单位, 到数值 (RetText), 相除 (相乘 (到数值 (RetText), #pi), 180)))))
                .判断 (等于 (i, 2)) ' 余弦
                    赋值 (RetText, 到文本 (求余弦 (选择 (单位, 到数值 (RetText), 相除 (相乘 (到数值 (RetText), #pi), 180)))))
                .判断 (等于 (i, 3)) ' 正切
                    赋值 (RetText, 到文本 (求正切 (选择 (单位, 到数值 (RetText), 相除 (相乘 (到数值 (RetText), #pi), 180)))))
                .默认
                    赋值 (RetText, 到文本 (相除 (1, 求正切 (选择 (单位, 到数值 (RetText), 相除 (相乘 (到数值 (RetText), #pi), 180)))))) ' 余切
                .判断结束
                .如果真 (等于 (是否运算正确 (到数值 (RetText)), 假))
                    返回 (“”)
                .如果真结束
                赋值 (TempText, 文本替换 (TempText, Find, 相加 (取文本长度 (ZText), FNum, 1), RetText))
            .判断结束
            
        .如果真结束
        赋值 (Find, 寻找文本 (TempText, FText, , 假))
    .判断循环尾 ()
.计次循环尾 ()
返回 (括号计算 (TempText))

.子程序 括号计算, 文本型, , 
.参数 Text, 文本型, , 

.局部变量 i, 整数型, , , 
.局部变量 Zk, 整数型, , "0", 左括号位置数组
.局部变量 ZkNum, 整数型, , , Zk成员数量
.局部变量 SigText, 文本型, , , 单个文本
.局部变量 Asc, 整数型, , , 单个文本的Asc码
.局部变量 SwText, 文本型, , , 括号内文本
.局部变量 SwReText, 文本型, , , 括号内计算后文本
.局部变量 TempText, 文本型, , , 替换后的结果

赋值 (TempText, Text)
赋值 (i, 1)
.判断循环首 (小于或等于 (i, 取文本长度 (TempText)))
    赋值 (SigText, 取文本中间 (TempText, i, 1))
    .判断开始 (等于 (SigText, “(”))
        加入成员 (Zk, i)
        赋值 (i, 相加 (i, 1))
    .判断 (等于 (SigText, “)”))
        赋值 (ZkNum, 取数组成员数 (Zk))
        .如果 (大于 (ZkNum, 0)) ' 是否存在左括号
            赋值 (SwText, 取文本中间 (TempText, 相加 (Zk [ZkNum], 1), 相减 (i, Zk [ZkNum], 1))) ' 取出括号内文本
            赋值 (SwReText, 内部计算 (SwText)) ' 计算括号内文本
            .如果真 (等于 (SwReText, “”)) ' 失败返回空文本
                返回 (“”)
            .如果真结束
            赋值 (TempText, 文本替换 (TempText, Zk [ZkNum], 取文本长度 (相加 (“(”, SwText, “)”)), SwReText))
            赋值 (i, 相加 (Zk [ZkNum], 1))
            删除成员 (Zk, ZkNum, )
        .否则
            赋值 (TempText, 文本替换 (TempText, i, 1, )) ' 去掉多余右括号
        .如果结束
        
    .判断 (等于 (Asc, 92))
        赋值 (TempText, 文本替换 (TempText, i, 1, “\”))
        赋值 (i, 相加 (i, 1))
    .默认
        赋值 (Asc, 取代码 (SigText, ))
        .判断开始 (并且 (或者 (小于 (Asc, 46), 大于 (Asc, 57)), 不等于 (Asc, 42), 不等于 (Asc, 43), 不等于 (Asc, 45), 不等于 (Asc, 92), 不等于 (Asc, 94))) ' 去掉非法字符
            赋值 (TempText, 文本替换 (TempText, i, 1, ))
        .默认
            赋值 (i, 相加 (i, 1))
        .判断结束
        
    .判断结束
    
.判断循环尾 ()
赋值 (ZkNum, 取数组成员数 (Zk))
.如果真 (大于 (ZkNum, 0)) ' 去掉多余左括号
    .计次循环首 (ZkNum, i)
        赋值 (TempText, 文本替换 (TempText, ZkNum [相加 (相减 (ZkNum, i), 1)], 1, )) ' 从最后一个开始替换
    .计次循环尾 ()
.如果真结束
返回 (内部计算 (TempText))

.子程序 内部计算, 文本型, , 加减乘除及乘方运算，失败返回空文本
.参数 Text, 文本型, , 

.局部变量 i, 整数型, , , 
.局部变量 Sign, 整数型, , "0", 操作符号位置
.局部变量 SiNum, 整数型, , , Sign的数组成员数量
.局部变量 SigText, 文本型, , , 单个文本
.局部变量 TempText, 文本型, , , 
.局部变量 Js, 文本型, , "2", 计算的左边和右边
.局部变量 Result, 文本型, , , 单符号计算结果

赋值 (TempText, Text)
.如果真 (不等于 (寻找文本 (TempText, “^”, , 假), -1))
    .判断循环首 (小于或等于 (i, 取文本长度 (TempText))) ' 计算乘方
        赋值 (SigText, 取文本中间 (TempText, i, 1))
        .判断开始 (或者 (等于 (SigText, “+”), 并且 (等于 (SigText, “-”), 大于 (i, 1)), 等于 (SigText, “*”), 等于 (SigText, “/”)))
            加入成员 (Sign, i)
            赋值 (i, 相加 (i, 1))
        .判断 (等于 (SigText, “^”))
            赋值 (SiNum, 取数组成员数 (Sign))
            .判断开始 (大于 (SiNum, 0))
                赋值 (Js [1], 取文本中间 (TempText, 相加 (Sign [SiNum], 1), 相减 (i, Sign [SiNum], 1)))
                赋值 (Js [2], 取文本右边 (TempText, 相减 (取文本长度 (TempText), i)))
                赋值 (Js [2], 到文本 (到数值 (Js [2]))) ' 去掉后面的操作符
                赋值 (Result, 到文本 (求次方 (到数值 (Js [1]), 到数值 (Js [2]))))
                赋值 (TempText, 文本替换 (TempText, 相加 (Sign [SiNum], 1), 取文本长度 (相加 (Js [1], “^”, Js [2])), Result))
                赋值 (i, 相加 (Sign [SiNum], 1))
            .默认
                赋值 (Js [1], 取文本左边 (TempText, 相减 (i, 1)))
                赋值 (Js [2], 取文本右边 (TempText, 相减 (取文本长度 (TempText), i)))
                赋值 (Js [2], 到文本 (到数值 (Js [2]))) ' 去掉后面的操作符
                赋值 (Result, 到文本 (求次方 (到数值 (Js [1]), 到数值 (Js [2]))))
                赋值 (TempText, 文本替换 (TempText, 1, 取文本长度 (相加 (Js [1], “^”, Js [2])), Result))
                赋值 (i, 1)
            .判断结束
            
        .默认
            赋值 (i, 相加 (i, 1))
        .判断结束
        
    .判断循环尾 ()
.如果真结束
赋值 (i, 1)
清除数组 (Sign)
.如果真 (或者 (不等于 (寻找文本 (TempText, “*”, , 假), -1), 不等于 (寻找文本 (TempText, “/”, , 假), -1)))
    .判断循环首 (小于或等于 (i, 取文本长度 (TempText))) ' 计算乘除
        赋值 (SigText, 取文本中间 (TempText, i, 1))
        .判断开始 (或者 (等于 (SigText, “+”), 并且 (等于 (SigText, “-”), 大于 (i, 1))))
            加入成员 (Sign, i)
            赋值 (i, 相加 (i, 1))
        .判断 (等于 (SigText, “*”))
            赋值 (SiNum, 取数组成员数 (Sign))
            .判断开始 (大于 (SiNum, 0))
                赋值 (Js [1], 取文本中间 (TempText, 相加 (Sign [SiNum], 1), 相减 (i, Sign [SiNum], 1)))
                赋值 (Js [2], 取文本右边 (TempText, 相减 (取文本长度 (TempText), i)))
                赋值 (Js [2], 到文本 (到数值 (Js [2]))) ' 去掉后面的操作符
                赋值 (Result, 到文本 (相乘 (到数值 (Js [1]), 到数值 (Js [2]))))
                赋值 (TempText, 文本替换 (TempText, 相加 (Sign [SiNum], 1), 取文本长度 (相加 (Js [1], “*”, Js [2])), Result))
                赋值 (i, 相加 (Sign [SiNum], 1))
            .默认
                赋值 (Js [1], 取文本左边 (TempText, 相减 (i, 1)))
                赋值 (Js [2], 取文本右边 (TempText, 相减 (取文本长度 (TempText), i)))
                赋值 (Js [2], 到文本 (到数值 (Js [2]))) ' 去掉后面的操作符
                赋值 (Result, 到文本 (相乘 (到数值 (Js [1]), 到数值 (Js [2]))))
                赋值 (TempText, 文本替换 (TempText, 1, 取文本长度 (相加 (Js [1], “*”, Js [2])), Result))
                赋值 (i, 1)
            .判断结束
            
        .判断 (等于 (SigText, “/”))
            赋值 (SiNum, 取数组成员数 (Sign))
            .判断开始 (大于 (SiNum, 0))
                赋值 (Js [1], 取文本中间 (TempText, 相加 (Sign [SiNum], 1), 相减 (i, Sign [SiNum], 1)))
                赋值 (Js [2], 取文本右边 (TempText, 相减 (取文本长度 (TempText), i)))
                赋值 (Js [2], 到文本 (到数值 (Js [2]))) ' 去掉后面的操作符
                .如果真 (等于 (到数值 (Js [2]), 0)) ' 除数不能为0
                    返回 (“”)
                .如果真结束
                .如果 (等于 (到数值 (Js [1]), 0)) ' 避免出现被除数不能为0
                    赋值 (Result, “0”)
                .否则
                    赋值 (Result, 到文本 (相除 (到数值 (Js [1]), 到数值 (Js [2]))))
                .如果结束
                赋值 (TempText, 文本替换 (TempText, 相加 (Sign [SiNum], 1), 取文本长度 (相加 (Js [1], “/”, Js [2])), Result))
                赋值 (i, 相加 (Sign [SiNum], 1))
            .默认
                赋值 (Js [1], 取文本左边 (TempText, 相减 (i, 1)))
                赋值 (Js [2], 取文本右边 (TempText, 相减 (取文本长度 (TempText), i)))
                赋值 (Js [2], 到文本 (到数值 (Js [2]))) ' 去掉后面的操作符
                .如果真 (等于 (到数值 (Js [2]), 0)) ' 被除数不能为0
                    返回 (“”)
                .如果真结束
                .如果 (等于 (到数值 (Js [1]), 0)) ' 避免出现被除数不能为0
                    赋值 (Result, “0”)
                .否则
                    赋值 (Result, 到文本 (相除 (到数值 (Js [1]), 到数值 (Js [2]))))
                .如果结束
                赋值 (TempText, 文本替换 (TempText, 1, 取文本长度 (相加 (Js [1], “/”, Js [2])), Result))
                赋值 (i, 1)
            .判断结束
            
        .默认
            赋值 (i, 相加 (i, 1))
        .判断结束
        
    .判断循环尾 ()
.如果真结束
赋值 (i, 1)
.判断循环首 (小于或等于 (i, 取文本长度 (TempText))) ' 计算加减
    赋值 (SigText, 取文本中间 (TempText, i, 1))
    .判断开始 (等于 (SigText, “+”))
        赋值 (Js [1], 取文本左边 (TempText, 相减 (i, 1)))
        赋值 (Js [2], 取文本右边 (TempText, 相减 (取文本长度 (TempText), i)))
        赋值 (Js [2], 到文本 (到数值 (Js [2]))) ' 去掉后面的操作符
        赋值 (Result, 到文本 (相加 (到数值 (Js [1]), 到数值 (Js [2]))))
        赋值 (TempText, 文本替换 (TempText, 1, 取文本长度 (相加 (Js [1], “+”, Js [2])), Result))
        赋值 (i, 1)
    .判断 (并且 (等于 (SigText, “-”), 大于 (i, 1)))
        赋值 (Js [1], 取文本左边 (TempText, 相减 (i, 1)))
        赋值 (Js [2], 取文本右边 (TempText, 相减 (取文本长度 (TempText), i)))
        赋值 (Js [2], 到文本 (到数值 (Js [2]))) ' 去掉后面的操作符
        赋值 (Result, 到文本 (相减 (到数值 (Js [1]), 到数值 (Js [2]))))
        赋值 (TempText, 文本替换 (TempText, 1, 取文本长度 (相加 (Js [1], “-”, Js [2])), Result))
        赋值 (i, 1)
    .默认
        赋值 (i, 相加 (i, 1))
    .判断结束
    
.判断循环尾 ()
返回 (TempText)

.子程序 取圆周率, 文本型, , 返回小数最大1000位圆周率,实际上有10位计算就已很精确了
.参数 位数, 整数型, , 返回圆周率小数点后的位数

.局部变量 行1, 文本型, , , 
.局部变量 行2, 文本型, , , 
.局部变量 行3, 文本型, , , 
.局部变量 行4, 文本型, , , 
.局部变量 行5, 文本型, , , 
.局部变量 行6, 文本型, , , 
.局部变量 行7, 文本型, , , 
.局部变量 行8, 文本型, , , 
.局部变量 行9, 文本型, , , 
.局部变量 行10, 文本型, , , 

赋值 (行1, “1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679”)
赋值 (行2, “8214808651328230664709384460955058223172535940812848111745028410270193852110555964462294895493038196”)
赋值 (行3, “4428810975665933446128475648233786783165271201909145648566923460348610454326648213393607260249141273”)
赋值 (行4, “7245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094”)
赋值 (行5, “3305727036575959195309218611738193261179310511854807446237996274956735188575272489122793818301194912”)
赋值 (行6, “9833673362440656643086021394946395224737190702179860943702770539217176293176752384674818467669405132”)
赋值 (行7, “0005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235”)
赋值 (行8, “4201995611212902196086403441815981362977477130996051870721134999999837297804995105973173281609631859”)
赋值 (行9, “5024459455346908302642522308253344685035261931188171010003137838752886587533208381420617177669147303”)
赋值 (行10, “5982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989”)
返回 (取文本左边 (相加 (“3.”, 行1, 行2, 行3, 行4, 行5, 行6, 行7, 行8, 行9, 行10), 相加 (位数, 2)))


.子程序 求反正弦, 双精度小数型, , 返回弧度值
.参数 正弦值, 双精度小数型, , -1到1，否则返回0

.如果真 (或者 (小于 (正弦值, -1), 大于 (正弦值, 1)))
    返回 (0)
.如果真结束
返回 (求反正切 (相除 (正弦值, 求平方根 (相减 (1, 相乘 (正弦值, 正弦值))))))

.子程序 求反余弦, 双精度小数型, , 返回弧度值
.参数 余弦值, 双精度小数型, , -1到1，否则返回0

.如果真 (或者 (大于 (余弦值, 1), 小于 (余弦值, -1)))
    返回 (0)
.如果真结束
返回 (相减 (相除 (#pi, 2), 求反正弦 (余弦值)))

.子程序 象素到厘米, 双精度小数型, , 
.参数 象素值, 整数型, , 

.局部变量 厘米值, 双精度小数型, , , 

赋值 (厘米值, 相除 (象素值, 28))
返回 (厘米值)

.子程序 厘米到象素, 双精度小数型, , 
.参数 厘米值, 整数型, , 

.局部变量 象素值, 双精度小数型, , , 

赋值 (象素值, 相乘 (厘米值, 28))
返回 (象素值)

.子程序 求直线距离, 双精度小数型, , 返回两个点之间的直线距离,可以返回象素,也可以返回厘米
.参数 水平象素1, 整数型, , 
.参数 垂直象素1, 整数型, , 
.参数 水平象素2, 整数型, , 
.参数 垂直象素2, 整数型, , 
.参数 类型, 整数型, 可空, 1为返回象素,2为返回厘米

.局部变量 距离象素, 整数型, , , 
.局部变量 距离厘米, 小数型, , , 

赋值 (距离象素, 求平方根 (相加 (求次方 (相减 (水平象素2, 水平象素1), 2), 求次方 (相减 (垂直象素2, 垂直象素1), 2))))
.如果 (或者 (等于 (是否为空 (类型), 真), 等于 (类型, 1)))
    返回 (距离象素)
.否则
    赋值 (距离厘米, 相除 (距离象素, 28))
    返回 (距离厘米)
.如果结束
返回 (-1)


.子程序 求阶乘, 长整数型, , 返回参数中给定数值的计算阶乘结果。
.参数 阶乘数, 整数型, , 要求阶乘的数值

.局部变量 计算结果, 长整数型, , , 
.局部变量 计数, 整数型, , , 

赋值 (计算结果, 1)
.计次循环首 (阶乘数, 计数)
    赋值 (计算结果, 相乘 (计算结果, 计数))
.计次循环尾 ()
返回 (计算结果) ' 将计算结果返回给调用本程序的命令行


.子程序 四舍六入五留双, 双精度小数型, , 
.参数 欲修约值, 双精度小数型, , 
.参数 保留位数, 整数型, , 

.如果真 (不等于 (相减 (相乘 (欲修约值, 求次方 (10, 保留位数)), 取整 (相乘 (欲修约值, 求次方 (10, 保留位数)))), 0.5))
    返回 (四舍五入 (欲修约值, 保留位数))
.如果真结束
.如果真 (等于 (相减 (相乘 (欲修约值, 求次方 (10, 保留位数)), 取整 (相乘 (欲修约值, 求次方 (10, 保留位数)))), 0.5))
    .如果真 (等于 (求余数 (取整 (相乘 (欲修约值, 求次方 (10, 保留位数))), 2), 0))
        返回 (四舍五入 (相减 (欲修约值, 求次方 (10, 相乘 (保留位数, -1))), 保留位数))
    .如果真结束
    .如果真 (等于 (求余数 (取整 (相乘 (欲修约值, 求次方 (10, 保留位数))), 2), 1))
        返回 (四舍五入 (欲修约值, 保留位数))
    .如果真结束
    
.如果真结束
返回 (0)

.程序集 拼音笔划, , , 

.子程序 是否为汉字, 逻辑型, , 判断一个文本第一个字是否是汉字,是汉字返回真,否则返回假
.参数 汉字, 文本型, , 

.局部变量 区码, 字节型, , , 
.局部变量 位码, 字节型, , , 

.如果真 (小于或等于 (取文本长度 (删全部空 (汉字)), 1))
    返回 (假)
.如果真结束
赋值 (区码, 取代码 (取文本左边 (汉字, 1), ))
赋值 (位码, 取代码 (取文本中间 (汉字, 2, 1), ))
.如果 (或者 (小于 (区码, 176), 大于 (区码, 247), 小于 (位码, 161), 大于 (位码, 254)))
    返回 (假)
.否则
    返回 (真)
.如果结束


.子程序 取文本声母, 文本型, , 取一组文本中每个字的拼音首字,如果不是中文就直接取
.参数 文本, 文本型, , 转换前文本

.局部变量 循环次数, 整数型, , , 
.局部变量 结果, 文本型, , , 

赋值 (文本, 到全角 (文本))
.计次循环首 (取文本长度 (文本), 循环次数)
    .判断开始 (大于 (取代码 (到半角 (取文本中间 (文本, 相减 (相乘 (循环次数, 2), 1), 2)), ), 0))
        赋值 (结果, 相加 (结果, 到半角 (取文本中间 (文本, 相减 (相乘 (循环次数, 2), 1), 2))))
    .默认
        赋值 (结果, 相加 (结果, 取文本左边 (取声母 (取文本中间 (文本, 相减 (相乘 (循环次数, 2), 1), 2), 1), 1)))
    .判断结束
    
.计次循环尾 ()
返回 (结果)

.子程序 字串类型, 整数型, , 区分一个字串第一个字到底是汉字,英文,还是数字,或者是运算符号,0返回空,1返回汉字,2返回数字,3返回符号
.参数 字符串, 文本型, , 需要进行判断的字符串

.局部变量 区码, 字节型, , , 
.局部变量 位码, 字节型, , , 

.如果真 (小于或等于 (取文本长度 (删全部空 (字符串)), 0))
    返回 (0)
.如果真结束
赋值 (区码, 取代码 (取文本左边 (字符串, 1), ))
赋值 (位码, 取代码 (取文本中间 (字符串, 2, 1), ))
.如果 (或者 (小于 (区码, 176), 大于 (区码, 247), 小于 (位码, 161), 大于 (位码, 254)))
    
.否则
    返回 (1) ' 消息框（“是中文”）
.如果结束
.如果 (并且 (大于或等于 (取代码 (字符串, ), 48), 小于或等于 (取代码 (字符串, ), 57)))
    返回 (2) ' 消息框（“是数字”）
.否则
    返回 (3) ' 消息框（“是英文”）
.如果结束
返回 (0)


.子程序 首字母大写, 文本型, , 〈文本型〉 首字母大写 （文本）例： FOXPRO 或 foxpro，返回 Foxpro，注意本命令对首字为汉字的文本无效
.参数 英文文本, 文本型, , 

返回 (相加 (到大写 (取文本左边 (英文文本, 1)), 取文本中间 (英文文本, 2, 取文本长度 (英文文本))))

.子程序 取GB2312简体汉字笔画数, 整数型, , 作者：袁晓辉（海洋）
.参数 汉字, 文本型, , 

.局部变量 数据, 整数型, 静态, "0", 
.局部变量 区码, 字节型, , , 
.局部变量 位码, 字节型, , , 
.局部变量 索引, 整数型, , , 

赋值 (数据, { 10, 7, 10, 10, 8, 10, 9, 11, 17, 14, 13, 5, 13, 10, 12, 15, 10, 6, 10, 9, 13, 8, 10, 10, 8, 8, 10, 5, 10, 14, 16, 9, 12, 12, 15, 15, 7, 10, 5, 5, 7, 10, 2, 9, 4, 8, 12, 13, 7, 10, 7, 21, 10, 8, 5, 9, 6, 13, 8, 8, 9, 13, 12, 10, 13, 7, 10, 10, 8, 8, 7, 8, 7, 19, 5, 4, 8, 5, 9, 10, 14, 14, 9, 12, 15, 10, 15, 12, 12, 8, 9, 5, 15, 10, 16, 13, 9, 12, 8, 8, 8, 7, 15, 10, 13, 19, 8, 13, 12, 8, 5, 12, 9, 4, 9, 10, 7, 8, 12, 12, 10, 8, 8, 5, 11, 11, 11, 9, 9, 18, 9, 12, 14, 4, 13, 10, 8, 14, 13, 14, 6, 10, 9, 4, 7, 13, 6, 11, 14, 5, 13, 16, 17, 16, 9, 18, 5, 12, 8, 9, 9, 8, 4, 16, 16, 17, 12, 9, 11, 15, 8, 19, 16, 7, 15, 11, 12, 16, 13, 10, 13, 7, 6, 9, 5, 8, 9, 9, 10, 6, 8, 11, 15, 8, 10, 8, 12, 9, 13, 10, 14, 7, 8, 11, 11, 14, 12, 8, 7, 10, 2, 10, 7, 11, 4, 5, 7, 19, 10, 8, 17, 11, 12, 7, 3, 7, 12, 15, 8, 11, 11, 14, 16, 8, 10, 9, 11, 11, 7, 7, 10, 4, 7, 17, 16, 16, 15, 11, 9, 8, 12, 8, 5, 9, 7, 19, 12, 3, 9, 9, 9, 14, 12, 14, 7, 9, 8, 8, 10, 10, 12, 11, 14, 12, 11, 13, 11, 6, 11, 19, 8, 11, 6, 9, 11, 4, 11, 7, 2, 12, 8, 11, 10, 12, 7, 9, 12, 15, 15, 11, 7, 8, 4, 7, 15, 12, 7, 15, 10, 6, 7, 6, 11, 7, 7, 7, 12, 8, 15, 10, 9, 16, 6, 7, 10, 12, 12, 15, 8, 8, 10, 10, 10, 6, 13, 9, 11, 6, 7, 6, 6, 10, 8, 8, 4, 7, 10, 5, 9, 6, 6, 6, 11, 8, 8, 13, 12, 14, 13, 13, 13, 4, 11, 14, 4, 10, 7, 5, 16, 12, 18, 12, 13, 12, 9, 13, 10, 12, 24, 13, 13, 5, 12, 3, 9, 13, 7, 11, 12, 7, 9, 12, 15, 7, 6, 6, 7, 8, 11, 13, 8, 9, 13, 15, 10, 11, 7, 21, 18, 11, 11, 9, 14, 14, 13, 13, 10, 7, 6, 8, 12, 6, 15, 12, 7, 5, 4, 5, 11, 11, 15, 17, 9, 19, 16, 12, 14, 11, 13, 10, 13, 14, 11, 14, 7, 6, 3, 14, 15, 12, 11, 10, 13, 12, 6, 12, 14, 5, 3, 7, 4, 12, 17, 9, 9, 5, 9, 11, 9, 11, 9, 10, 8, 4, 8, 10, 11, 9, 5, 12, 7, 11, 11, 8, 11, 11, 6, 9, 10, 9, 10, 2, 10, 17, 10, 7, 11, 6, 8, 15, 11, 12, 11, 15, 11, 8, 19, 6, 12, 12, 17, 14, 4, 12, 7, 14, 8, 10, 11, 7, 10, 14, 14, 8, 8, 6, 12, 11, 9, 7, 10, 12, 16, 11, 13, 13, 9, 8, 16, 9, 5, 7, 7, 8, 11, 12, 11, 13, 13, 5, 16, 10, 2, 11, 6, 8, 10, 12, 10, 14, 15, 8, 11, 13, 2, 7, 5, 7, 8, 12, 13, 8, 4, 6, 5, 5, 12, 15, 6, 9, 8, 9, 7, 9, 11, 7, 4, 9, 7, 10, 12, 10, 13, 9, 12, 9, 10, 11, 13, 12, 7, 14, 7, 9, 12, 7, 14, 12, 14, 9, 11, 12, 11, 7, 4, 5, 15, 7, 19, 12, 10, 7, 9, 9, 12, 11, 9, 6, 6, 9, 13, 6, 13, 11, 8, 12, 11, 13, 10, 12, 9, 15, 6, 10, 10, 4, 7, 12, 11, 10, 10, 6, 2, 6, 5, 9, 9, 2, 9, 5, 9, 12, 6, 4, 9, 8, 9, 18, 6, 12, 18, 15, 8, 8, 17, 3, 10, 4, 7, 8, 8, 5, 7, 7, 7, 7, 4, 8, 8, 6, 7, 6, 6, 7, 8, 11, 8, 11, 3, 8, 10, 10, 7, 8, 8, 8, 9, 7, 11, 7, 8, 4, 7, 7, 12, 7, 10, 8, 6, 8, 12, 12, 4, 9, 8, 13, 10, 12, 4, 9, 11, 10, 5, 13, 6, 8, 4, 7, 7, 4, 15, 8, 14, 7, 8, 13, 12, 9, 11, 6, 9, 8, 10, 11, 13, 11, 5, 7, 7, 11, 10, 10, 8, 11, 12, 8, 14, 9, 11, 18, 12, 9, 12, 5, 8, 4, 13, 6, 12, 4, 7, 6, 13, 8, 15, 14, 8, 7, 13, 9, 11, 12, 3, 5, 7, 9, 9, 7, 10, 13, 8, 11, 21, 4, 6, 9, 9, 7, 7, 7, 12, 7, 16, 10, 10, 14, 10, 16, 13, 15, 15, 7, 10, 14, 12, 4, 11, 10, 8, 12, 9, 12, 10, 12, 9, 12, 11, 3, 6, 9, 10, 13, 10, 7, 8, 19, 10, 10, 11, 3, 7, 5, 10, 11, 8, 10, 4, 9, 3, 6, 7, 9, 7, 6, 9, 4, 7, 8, 8, 9, 8, 8, 11, 12, 11, 8, 14, 7, 8, 8, 8, 13, 5, 11, 9, 7, 8, 9, 10, 8, 12, 8, 5, 9, 14, 9, 13, 8, 8, 8, 12, 6, 8, 9, 6, 14, 11, 23, 12, 20, 8, 6, 3, 10, 13, 8, 6, 11, 5, 7, 9, 6, 9, 8, 9, 10, 8, 13, 9, 8, 12, 13, 12, 12, 10, 8, 8, 14, 6, 9, 15, 9, 10, 10, 6, 10, 9, 12, 14, 7, 12, 7, 11, 12, 8, 12, 7, 16, 16, 10, 7, 16, 10, 11, 6, 5, 5, 8, 10, 17, 17, 14, 11, 9, 6, 10, 5, 10, 8, 12, 10, 11, 10, 5, 8, 7, 6, 11, 13, 9, 8, 11, 14, 14, 15, 9, 15, 12, 11, 9, 9, 9, 10, 7, 15, 16, 9, 8, 9, 10, 9, 11, 9, 7, 5, 6, 12, 9, 12, 7, 9, 10, 6, 8, 5, 8, 13, 10, 12, 9, 15, 8, 15, 12, 8, 8, 11, 7, 4, 7, 4, 7, 9, 6, 12, 12, 8, 6, 4, 8, 13, 9, 7, 11, 7, 6, 8, 10, 7, 12, 10, 11, 10, 12, 13, 11, 10, 9, 4, 9, 12, 11, 16, 15, 17, 9, 11, 12, 13, 10, 13, 9, 11, 6, 9, 12, 17, 9, 12, 6, 13, 10, 15, 5, 12, 11, 10, 11, 6, 10, 5, 6, 9, 9, 9, 8, 11, 13, 9, 11, 17, 9, 6, 4, 10, 8, 12, 16, 8, 11, 5, 6, 11, 6, 13, 15, 10, 14, 6, 5, 9, 16, 4, 7, 10, 11, 12, 6, 7, 12, 13, 20, 12, 3, 9, 10, 6, 7, 13, 6, 9, 2, 10, 3, 13, 7, 16, 8, 6, 11, 8, 11, 9, 11, 11, 4, 5, 9, 7, 7, 7, 10, 6, 14, 9, 6, 8, 10, 5, 9, 12, 10, 5, 10, 11, 15, 6, 9, 8, 13, 7, 10, 7, 6, 11, 7, 13, 10, 8, 8, 6, 12, 9, 11, 9, 14, 12, 8, 10, 13, 9, 11, 11, 9, 14, 13, 12, 9, 4, 13, 15, 6, 10, 10, 9, 8, 11, 12, 10, 8, 15, 9, 9, 10, 6, 19, 12, 10, 9, 6, 6, 13, 8, 15, 12, 17, 12, 10, 6, 8, 9, 9, 9, 20, 12, 11, 11, 8, 11, 9, 7, 9, 16, 9, 13, 11, 14, 10, 10, 5, 12, 12, 11, 9, 11, 12, 6, 14, 7, 5, 10, 8, 11, 13, 14, 9, 9, 13, 8, 7, 17, 7, 9, 10, 4, 9, 9, 8, 3, 12, 4, 8, 4, 9, 18, 10, 13, 4, 13, 7, 13, 10, 13, 7, 10, 10, 6, 7, 9, 14, 8, 13, 12, 16, 8, 11, 14, 13, 8, 4, 19, 12, 11, 14, 14, 12, 16, 8, 10, 13, 11, 10, 8, 9, 12, 12, 7, 5, 7, 9, 3, 7, 2, 10, 11, 11, 5, 6, 13, 8, 12, 8, 17, 8, 8, 10, 8, 8, 11, 7, 8, 9, 9, 8, 14, 7, 11, 4, 8, 11, 15, 13, 10, 5, 11, 8, 10, 10, 12, 10, 10, 11, 8, 10, 15, 23, 7, 11, 10, 17, 9, 6, 6, 9, 7, 11, 9, 6, 7, 10, 9, 12, 10, 9, 10, 12, 8, 5, 9, 4, 12, 13, 8, 12, 5, 12, 11, 7, 9, 9, 11, 14, 17, 6, 7, 4, 8, 6, 9, 10, 15, 8, 8, 9, 12, 15, 14, 9, 7, 9, 5, 12, 7, 8, 9, 10, 8, 11, 9, 10, 7, 7, 8, 10, 4, 11, 7, 3, 6, 11, 9, 10, 13, 8, 14, 7, 12, 6, 9, 9, 13, 10, 7, 13, 8, 7, 10, 12, 6, 12, 7, 10, 8, 11, 7, 7, 3, 11, 8, 13, 12, 9, 13, 11, 12, 12, 12, 8, 8, 10, 7, 9, 6, 13, 12, 8, 8, 12, 14, 12, 14, 11, 10, 7, 13, 13, 11, 9, 8, 16, 12, 5, 15, 14, 12, 9, 16, 12, 9, 13, 11, 12, 10, 11, 8, 10, 10, 10, 7, 7, 6, 8, 9, 13, 10, 10, 11, 5, 13, 18, 16, 15, 11, 17, 9, 16, 6, 9, 8, 12, 13, 7, 9, 11, 11, 15, 16, 10, 10, 13, 11, 7, 7, 15, 5, 10, 9, 6, 10, 7, 5, 7, 10, 4, 7, 12, 8, 9, 12, 5, 11, 7, 8, 2, 14, 10, 9, 12, 10, 7, 18, 13, 8, 10, 8, 11, 11, 12, 10, 9, 8, 13, 10, 11, 13, 7, 7, 11, 12, 12, 9, 10, 15, 11, 14, 7, 16, 14, 5, 15, 2, 14, 17, 14, 10, 6, 12, 10, 6, 11, 12, 8, 17, 16, 9, 7, 20, 11, 15, 10, 7, 8, 9, 11, 13, 13, 10, 7, 11, 10, 7, 10, 8, 11, 5, 5, 13, 11, 14, 12, 13, 10, 6, 15, 10, 9, 4, 5, 11, 8, 11, 16, 11, 8, 8, 7, 13, 9, 12, 15, 14, 8, 7, 5, 11, 7, 8, 11, 7, 8, 12, 19, 13, 21, 13, 10, 11, 16, 12, 8, 7, 15, 7, 6, 11, 8, 10, 15, 12, 12, 10, 12, 9, 11, 13, 11, 9, 10, 9, 13, 7, 7, 11, 11, 7, 8, 6, 4, 7, 7, 6, 11, 17, 8, 11, 13, 14, 14, 13, 12, 9, 9, 9, 6, 11, 7, 8, 9, 3, 9, 14, 6, 10, 6, 7, 8, 6, 9, 15, 14, 12, 13, 14, 11, 14, 14, 13, 6, 9, 8, 8, 6, 10, 11, 8, 13, 4, 5, 10, 5, 8, 9, 12, 14, 9, 3, 8, 8, 11, 14, 15, 13, 7, 9, 12, 14, 7, 9, 9, 12, 8, 12, 3, 7, 5, 11, 13, 17, 13, 13, 11, 11, 8, 11, 15, 19, 17, 9, 11, 8, 6, 10, 8, 8, 14, 11, 12, 12, 10, 11, 11, 7, 9, 10, 12, 9, 8, 11, 13, 17, 9, 12, 8, 7, 14, 5, 5, 8, 5, 11, 10, 9, 8, 16, 8, 11, 6, 8, 13, 13, 14, 19, 14, 14, 16, 15, 20, 8, 5, 10, 15, 16, 8, 13, 13, 8, 11, 6, 9, 8, 7, 7, 8, 5, 13, 14, 13, 12, 14, 4, 5, 13, 8, 16, 10, 9, 7, 9, 6, 9, 7, 6, 2, 5, 9, 8, 9, 7, 10, 22, 9, 10, 9, 8, 11, 8, 10, 4, 14, 10, 8, 16, 10, 8, 5, 7, 7, 10, 13, 9, 13, 14, 8, 6, 15, 15, 11, 8, 10, 14, 5, 7, 10, 10, 19, 11, 15, 15, 10, 11, 9, 8, 16, 5, 8, 8, 4, 7, 9, 7, 10, 9, 6, 7, 5, 7, 9, 3, 13, 9, 8, 9, 17, 20, 10, 10, 8, 9, 8, 18, 7, 11, 7, 11, 9, 8, 8, 8, 12, 8, 11, 12, 11, 12, 9, 19, 15, 11, 15, 9, 10, 7, 9, 6, 8, 10, 16, 9, 7, 8, 7, 9, 10, 12, 8, 8, 9, 11, 14, 12, 10, 10, 8, 7, 12, 9, 10, 8, 11, 15, 12, 13, 12, 13, 16, 16, 8, 13, 11, 13, 8, 9, 21, 7, 8, 15, 12, 9, 11, 12, 10, 5, 4, 12, 15, 7, 20, 15, 11, 4, 12, 15, 14, 16, 11, 14, 16, 9, 13, 8, 9, 13, 6, 8, 8, 11, 5, 8, 10, 7, 9, 8, 8, 11, 11, 10, 14, 8, 11, 10, 5, 12, 4, 10, 12, 11, 13, 10, 6, 10, 12, 10, 14, 19, 18, 12, 12, 10, 11, 8, 2, 10, 14, 9, 7, 8, 12, 8, 8, 11, 11, 10, 6, 14, 8, 6, 11, 10, 6, 3, 6, 7, 9, 9, 16, 4, 6, 7, 7, 8, 5, 11, 9, 9, 9, 6, 8, 10, 3, 6, 13, 5, 12, 11, 16, 10, 10, 9, 15, 13, 8, 15, 11, 12, 4, 14, 8, 7, 12, 7, 14, 14, 12, 7, 16, 14, 14, 10, 10, 17, 6, 8, 5, 16, 15, 12, 10, 9, 10, 4, 8, 5, 8, 9, 9, 9, 9, 10, 12, 13, 7, 15, 12, 13, 7, 8, 9, 9, 10, 10, 11, 16, 12, 12, 11, 8, 10, 6, 12, 7, 9, 5, 7, 11, 7, 5, 9, 8, 12, 4, 11, 6, 11, 8, 7, 11, 8, 11, 17, 15, 5, 11, 23, 6, 16, 10, 6, 11, 10, 4, 8, 4, 10, 8, 16, 7, 13, 14, 12, 11, 12, 13, 12, 16, 5, 9, 22, 20, 20, 20, 5, 9, 7, 9, 12, 10, 4, 4, 2, 7, 7, 6, 4, 3, 7, 6, 5, 4, 4, 6, 9, 13, 9, 16, 14, 13, 10, 9, 4, 12, 9, 6, 9, 20, 16, 17, 6, 10, 8, 6, 2, 15, 8, 6, 15, 13, 12, 7, 10, 8, 10, 15, 9, 11, 13, 17, 13, 14, 3, 8, 6, 12, 10, 13, 8, 12, 12, 6, 12, 13, 6, 10, 12, 14, 10, 9, 6, 8, 7, 7, 13, 11, 13, 12, 10, 9, 8, 7, 3, 7, 14, 8, 5, 8, 16, 17, 16, 12, 6, 10, 15, 14, 6, 11, 12, 10, 3, 8, 14, 11, 10, 12, 10, 6, 3, 14, 4, 10, 7, 8, 11, 11, 11, 6, 8, 11, 13, 10, 13, 10, 7, 6, 10, 5, 8, 7, 7, 11, 10, 8, 9, 7, 8, 11, 9, 8, 13, 11, 7, 5, 12, 9, 4, 11, 9, 11, 12, 9, 5, 6, 5, 9, 9, 12, 8, 3, 8, 2, 5, 9, 7, 4, 9, 9, 8, 7, 5, 5, 8, 9, 8, 8, 6, 5, 3, 5, 9, 8, 9, 14, 10, 8, 9, 13, 16, 9, 5, 8, 12, 8, 4, 5, 9, 9, 8, 8, 6, 4, 9, 6, 7, 11, 11, 8, 14, 11, 15, 8, 11, 10, 7, 13, 8, 12, 11, 12, 4, 12, 11, 15, 16, 12, 17, 13, 13, 12, 13, 12, 5, 8, 9, 7, 6, 9, 14, 11, 13, 14, 10, 8, 9, 14, 10, 5, 5, 10, 9, 17, 4, 11, 10, 4, 13, 12, 7, 17, 9, 12, 9, 11, 10, 9, 12, 15, 15, 9, 7, 5, 5, 6, 13, 6, 13, 5, 7, 6, 8, 3, 8, 10, 8, 10, 9, 7, 6, 9, 12, 15, 16, 14, 7, 12, 9, 10, 10, 12, 14, 13, 13, 11, 7, 8, 14, 13, 14, 9, 11, 11, 10, 21, 13, 6, 17, 12, 14, 10, 6, 10, 10, 13, 11, 10, 14, 11, 10, 12, 8, 13, 5, 5, 6, 12, 16, 9, 17, 15, 9, 8, 8, 5, 10, 11, 4, 8, 7, 7, 13, 8, 15, 13, 7, 17, 13, 15, 14, 10, 8, 12, 10, 14, 11, 5, 9, 6, 13, 13, 11, 12, 15, 10, 16, 10, 15, 11, 15, 10, 11, 10, 13, 10, 11, 10, 9, 11, 10, 5, 10, 10, 18, 13, 10, 13, 11, 10, 15, 12, 12, 15, 16, 12, 7, 12, 17, 11, 10, 9, 8, 4, 11, 13, 5, 11, 9, 14, 12, 9, 7, 8, 11, 13, 9, 10, 8, 4, 7, 9, 5, 6, 11, 9, 9, 9, 12, 10, 10, 13, 17, 6, 11, 7, 12, 11, 10, 12, 9, 12, 11, 7, 5, 10, 5, 7, 9, 8, 10, 10, 10, 11, 3, 6, 8, 12, 6, 11, 13, 13, 13, 14, 9, 7, 4, 17, 8, 6, 11, 10, 7, 6, 8, 12, 7, 8, 12, 9, 9, 12, 9, 9, 4, 10, 9, 5, 15, 9, 12, 8, 10, 3, 11, 7, 13, 10, 11, 12, 11, 8, 11, 3, 12, 7, 4, 3, 8, 6, 8, 8, 11, 7, 6, 9, 20, 13, 6, 4, 7, 10, 7, 11, 11, 4, 14, 11, 7, 11, 8, 6, 6, 7, 7, 5, 14, 8, 9, 9, 12, 17, 7, 12, 11, 11, 15, 3, 14, 12, 10, 4, 9, 7, 7, 14, 10, 6, 13, 10, 8, 9, 13, 10, 12, 7, 14, 8, 12, 7, 7, 7, 9, 4, 6, 9, 9, 4, 7, 11, 7, 7, 4, 8, 4, 10, 4, 14, 6, 9, 7, 5, 13, 11, 8, 4, 5, 10, 9, 8, 14, 8, 6, 11, 8, 12, 15, 6, 13, 10, 12, 10, 7, 11, 15, 3, 11, 14, 11, 13, 6, 12, 17, 11, 10, 3, 13, 12, 11, 9, 7, 12, 6, 8, 15, 9, 7, 17, 14, 13, 9, 8, 9, 3, 12, 10, 6, 11, 13, 6, 5, 14, 6, 9, 8, 11, 11, 7, 9, 8, 13, 9, 9, 8, 13, 7, 13, 11, 12, 9, 10, 8, 8, 9, 11, 22, 9, 15, 17, 12, 3, 12, 10, 8, 13, 9, 8, 9, 9, 15, 13, 6, 11, 11, 12, 15, 9, 10, 18, 12, 10, 10, 11, 10, 3, 7, 10, 7, 11, 10, 10, 13, 8, 13, 15, 15, 6, 9, 13, 6, 11, 8, 11, 5, 11, 9, 19, 16, 8, 8, 12, 10, 16, 7, 12, 8, 7, 13, 7, 4, 9, 11, 9, 13, 12, 12, 6, 6, 9, 7, 6, 6, 16, 8, 7, 8, 8, 5, 4, 10, 6, 7, 12, 14, 6, 9, 10, 6, 13, 12, 7, 10, 10, 14, 6, 14, 11, 14, 9, 10, 6, 13, 11, 9, 6, 7, 10, 9, 12, 12, 11, 11, 7, 12, 9, 11, 11, 5, 9, 19, 10, 9, 13, 16, 8, 5, 11, 6, 9, 14, 12, 6, 8, 6, 6, 6, 10, 6, 5, 5, 9, 6, 6, 8, 9, 10, 7, 3, 7, 4, 10, 11, 13, 11, 12, 9, 6, 6, 11, 9, 11, 10, 11, 10, 7, 9, 12, 8, 7, 7, 15, 11, 8, 8, 8, 11, 11, 9, 14, 10, 12, 16, 6, 9, 12, 10, 9, 12, 10, 11, 10, 9, 5, 10, 10, 7, 6, 8, 8, 6, 9, 6, 10, 6, 11, 9, 10, 14, 16, 13, 7, 14, 13, 6, 13, 11, 12, 9, 9, 10, 9, 9, 20, 12, 15, 8, 6, 11, 7, 3, 6, 11, 5, 5, 6, 12, 8, 11, 1, 12, 7, 12, 11, 8, 6, 6, 13, 6, 12, 11, 5, 10, 14, 7, 8, 9, 18, 12, 9, 10, 3, 1, 7, 4, 4, 7, 8, 7, 6, 3, 7, 17, 11, 13, 9, 6, 13, 13, 15, 4, 3, 10, 13, 8, 5, 10, 7, 6, 17, 11, 8, 9, 9, 6, 10, 9, 6, 8, 7, 11, 11, 11, 7, 4, 4, 11, 5, 8, 15, 11, 18, 7, 14, 10, 11, 11, 9, 14, 7, 17, 9, 15, 13, 12, 9, 9, 8, 7, 17, 10, 11, 13, 14, 13, 8, 8, 10, 5, 11, 9, 5, 9, 6, 11, 7, 4, 5, 7, 10, 7, 8, 12, 7, 6, 4, 5, 7, 12, 9, 2, 5, 6, 11, 3, 8, 13, 13, 13, 14, 7, 9, 12, 8, 12, 12, 11, 11, 4, 10, 8, 3, 6, 9, 6, 9, 6, 5, 11, 6, 8, 6, 12, 12, 10, 12, 13, 11, 9, 8, 13, 10, 12, 12, 10, 15, 5, 10, 11, 10, 4, 9, 10, 10, 12, 14, 7, 7, 10, 13, 13, 12, 7, 8, 14, 9, 9, 4, 6, 12, 11, 9, 8, 12, 4, 10, 10, 10, 4, 9, 4, 9, 4, 7, 15, 11, 10, 13, 5, 5, 10, 6, 10, 9, 7, 10, 10, 6, 6, 9, 19, 12, 16, 10, 10, 12, 14, 17, 12, 19, 8, 6, 16, 9, 20, 16, 10, 7, 7, 17, 8, 8, 6, 8, 10, 9, 15, 15, 12, 16, 4, 12, 12, 5, 5, 11, 8, 9, 9, 14, 8, 5, 9, 7, 14, 10, 6, 10, 10, 14, 18, 9, 13, 11, 8, 10, 8, 14, 11, 10, 22, 9, 5, 9, 10, 12, 11, 15, 11, 14, 14, 7, 12, 10, 7, 3, 7, 8, 5, 8, 16, 13, 8, 9, 7, 8, 9, 13, 13, 6, 14, 5, 14, 7, 10, 12, 16, 8, 13, 14, 7, 10, 9, 13, 10, 13, 10, 16, 6, 7, 8, 8, 10, 7, 15, 10, 15, 6, 13, 9, 11, 8, 9, 6, 8, 16, 9, 5, 9, 9, 10, 8, 7, 6, 8, 4, 7, 14, 8, 8, 10, 5, 3, 8, 11, 8, 12, 12, 6, 10, 8, 7, 9, 4, 11, 5, 6, 7, 7, 10, 11, 6, 10, 13, 8, 9, 8, 12, 10, 13, 8, 8, 11, 12, 8, 11, 4, 9, 8, 9, 10, 8, 9, 8, 9, 6, 6, 6, 8, 6, 9, 7, 12, 9, 7, 8, 8, 10, 8, 9, 17, 10, 10, 12, 6, 11, 10, 8, 10, 6, 10, 12, 8, 17, 15, 5, 11, 9, 7, 11, 8, 12, 12, 7, 8, 9, 8, 7, 4, 9, 4, 9, 8, 15, 14, 15, 10, 6, 12, 6, 15, 6, 7, 12, 13, 9, 14, 7, 11, 10, 10, 10, 8, 8, 10, 12, 8, 10, 11, 11, 7, 9, 9, 9, 10, 9, 12, 11, 7, 12, 5, 9, 13, 3, 6, 11, 6, 18, 12, 15, 8, 11, 9, 7, 7, 7, 9, 12, 10, 7, 8, 11, 9, 7, 7, 8, 10, 20, 16, 15, 12, 13, 12, 15, 9, 5, 7, 9, 11, 7, 7, 10, 0, 0, 0, 0, 0, 3, 3, 3, 4, 4, 4, 5, 6, 6, 10, 10, 16, 1, 8, 1, 2, 3, 4, 4, 5, 5, 6, 9, 11, 14, 14, 19, 1, 8, 14, 2, 6, 4, 7, 7, 11, 14, 4, 6, 10, 11, 12, 14, 15, 16, 2, 5, 8, 11, 11, 15, 8, 7, 2, 4, 6, 7, 8, 8, 8, 9, 10, 10, 10, 13, 13, 14, 14, 15, 16, 2, 8, 2, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 13, 14, 14, 14, 14, 14, 14, 15, 15, 5, 6, 7, 7, 9, 17, 6, 8, 4, 12, 16, 17, 18, 21, 2, 9, 9, 11, 6, 6, 7, 2, 8, 10, 10, 11, 12, 12, 12, 13, 16, 19, 19, 2, 6, 8, 8, 10, 2, 10, 10, 2, 5, 5, 5, 6, 6, 6, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 13, 14, 14, 14, 15, 15, 19, 2, 8, 2, 5, 5, 6, 6, 7, 7, 7, 7, 8, 9, 9, 10, 10, 10, 11, 11, 11, 16, 5, 5, 5, 5, 6, 6, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 10, 10, 11, 11, 13, 13, 13, 14, 14, 16, 19, 17, 5, 7, 5, 7, 7, 8, 10, 10, 11, 15, 9, 17, 20, 2, 2, 6, 10, 2, 5, 10, 12, 7, 9, 9, 14, 16, 16, 17, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 13, 13, 14, 14, 14, 15, 20, 21, 22, 3, 5, 5, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15, 15, 15, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 17, 18, 19, 19, 19, 20, 20, 22, 3, 9, 6, 7, 9, 9, 10, 10, 11, 3, 5, 5, 12, 3, 6, 7, 8, 8, 8, 8, 9, 9, 9, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 15, 15, 15, 15, 16, 16, 16, 17, 17, 19, 23, 25, 3, 7, 8, 12, 5, 5, 5, 5, 5, 5, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 16, 16, 16, 16, 16, 16, 17, 17, 19, 25, 3, 6, 6, 7, 7, 8, 9, 10, 11, 11, 16, 7, 8, 8, 8, 10, 11, 11, 11, 12, 14, 14, 15, 15, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 10, 10, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 14, 15, 15, 17, 17, 19, 3, 7, 8, 9, 9, 9, 10, 11, 11, 12, 13, 15, 16, 24, 3, 3, 5, 6, 6, 6, 7, 7, 8, 8, 8, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 14, 14, 15, 15, 16, 17, 20, 6, 14, 12, 14, 3, 3, 6, 7, 7, 7, 7, 7, 8, 9, 10, 10, 11, 12, 12, 13, 13, 14, 15, 15, 25, 5, 7, 7, 8, 9, 9, 11, 11, 11, 11, 12, 13, 14, 15, 16, 16, 17, 3, 5, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12, 13, 13, 14, 15, 15, 15, 16, 16, 18, 8, 17, 4, 6, 7, 7, 7, 7, 9, 9, 10, 10, 10, 11, 11, 11, 11, 11, 11, 12, 12, 13, 13, 13, 14, 3, 4, 8, 3, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 17, 19, 19, 19, 20, 20, 21, 24, 3, 5, 8, 8, 9, 10, 12, 13, 14, 14, 15, 16, 16, 17, 17, 3, 7, 7, 8, 8, 8, 8, 8, 8, 8, 9, 9, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 13, 13, 13, 13, 15, 15, 16, 16, 17, 17, 18, 3, 11, 9, 12, 5, 9, 10, 10, 12, 14, 15, 21, 8, 8, 9, 11, 12, 22, 3, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 15, 16, 16, 17, 17, 20, 5, 9, 7, 8, 12, 3, 3, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 10, 11, 11, 11, 11, 12, 12, 13, 13, 13, 14, 14, 15, 19, 20, 3, 6, 6, 6, 6, 6, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 15, 15, 15, 16, 16, 16, 16, 19, 3, 15, 3, 8, 10, 6, 6, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 14, 14, 15, 15, 15, 15, 15, 15, 15, 16, 17, 17, 17, 18, 20, 20, 13, 13, 14, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15, 15, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 13, 14, 8, 9, 9, 9, 11, 11, 11, 12, 12, 14, 16, 7, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 11, 12, 12, 12, 12, 13, 15, 16, 10, 5, 8, 11, 12, 12, 13, 13, 13, 14, 14, 8, 9, 12, 16, 16, 17, 4, 6, 6, 7, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 11, 11, 12, 13, 13, 14, 14, 16, 18, 18, 20, 21, 9, 9, 9, 9, 10, 10, 10, 10, 11, 11, 11, 12, 12, 14, 9, 10, 11, 12, 13, 14, 15, 15, 9, 13, 6, 8, 9, 11, 11, 12, 12, 12, 13, 14, 10, 11, 12, 14, 17, 10, 10, 12, 12, 12, 13, 15, 16, 16, 22, 5, 6, 7, 7, 9, 10, 10, 11, 13, 4, 11, 13, 12, 13, 15, 9, 15, 6, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 15, 15, 16, 17, 17, 17, 17, 17, 16, 7, 11, 12, 13, 13, 16, 9, 9, 12, 13, 16, 16, 4, 13, 13, 17, 12, 15, 16, 8, 10, 10, 10, 11, 11, 13, 14, 7, 8, 8, 8, 9, 9, 9, 9, 9, 10, 10, 11, 11, 11, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 14, 15, 15, 15, 15, 16, 16, 16, 18, 21, 30, 4, 11, 13, 16, 8, 8, 9, 11, 12, 4, 7, 8, 8, 9, 9, 9, 9, 9, 9, 9, 10, 10, 12, 12, 13, 14, 16, 21, 7, 7, 9, 10, 10, 10, 10, 10, 10, 11, 13, 13, 14, 16, 16, 17, 17, 24, 4, 6, 8, 9, 12, 7, 8, 8, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 12, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 15, 15, 15, 16, 16, 17, 17, 18, 19, 18, 21, 11, 12, 17, 19, 8, 9, 9, 9, 9, 9, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 13, 13, 13, 13, 14, 14, 14, 14, 15, 15, 16, 16, 16, 17, 18, 7, 8, 9, 9, 9, 10, 12, 13, 17, 9, 10, 10, 12, 13, 14, 14, 16, 17, 17, 10, 16, 23, 5, 6, 6, 7, 7, 7, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15, 15, 15, 16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 18, 18, 18, 19, 20, 14, 9, 12, 13, 9, 9, 10, 10, 11, 12, 12, 12, 13, 13, 15, 15, 16, 17, 18, 22, 9, 11, 12, 13, 17, 10, 11, 7, 7, 8, 9, 9, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 15, 15, 16, 16, 16, 17, 17, 17, 17, 18, 18, 22, 5, 7, 7, 8, 8, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 16, 16, 16, 16, 16, 16, 16, 16, 17, 18, 18, 18, 18, 21, 23, 11, 12, 8, 8, 9, 9, 10, 11, 13, 13, 14, 14, 14, 15, 5, 8, 9, 9, 9, 9, 10, 11, 11, 11, 11, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 15, 15, 16, 17, 19, 24, 5, 9, 11, 12, 9, 6, 9, 10, 12, 12, 13, 14, 15, 15, 16, 16, 22, 12, 8, 11, 11, 11, 12, 15, 16, 12, 9, 10, 10, 12, 12, 12, 12, 13, 15, 15, 16, 16, 16, 18, 20, 21, 6, 10, 7, 8, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 19, 19, 19, 19, 20, 21, 24, 26, 6, 14, 17, 17, 10, 8, 9, 9, 9, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 16, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 18, 18, 18, 19, 19, 19, 8, 9, 11, 12, 10, 10, 9, 9, 9, 10, 10, 10, 10, 11, 11, 11, 11, 12, 13, 13, 14, 15, 17, 18, 19, 10, 10, 11, 13, 13, 19, 11, 11, 13, 15, 15, 16, 9, 10, 10, 11, 11, 12, 12, 13, 14, 14, 14, 15, 15, 15, 15, 15, 16, 18, 6, 15, 9, 11, 12, 14, 14, 15, 15, 16, 17, 6, 12, 14, 14, 17, 25, 11, 19, 9, 12, 13, 13, 23, 11, 15, 10, 11, 9, 10, 10, 10, 12, 12, 12, 13, 13, 13, 14, 14, 14, 14, 14, 15, 15, 16, 16, 16, 17, 17, 18, 19, 19, 19, 20, 20, 21, 7, 16, 10, 13, 14, 18, 18, 10, 10, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 14, 14, 15, 15, 15, 15, 15, 15, 15, 15, 16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 19, 19, 19, 19, 19, 20, 21, 22, 22, 23, 24, 7, 12, 13, 13, 17, 17, 11, 11, 12, 12, 13, 13, 14, 15, 13, 18, 12, 11, 12, 12, 14, 14, 16, 16, 16, 19, 19, 20, 22, 10, 13, 13, 13, 14, 14, 15, 15, 17, 8, 12, 20, 8, 10, 10, 13, 14, 18, 18, 14, 14, 15, 16, 17, 18, 18, 21, 24, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 20, 20, 20, 21, 14, 14, 15, 15, 16, 18, 18, 18, 19, 19, 13, 13, 14, 14, 14, 15, 15, 17, 17, 18, 18, 19, 19, 22, 14, 14, 15, 16, 16, 17, 19, 12, 15, 18, 22, 22, 10, 13, 14, 15, 15, 16, 16, 16, 18, 19, 20, 23, 25, 14, 15, 17, 13, 16, 16, 17, 19, 19, 21, 23, 17, 17, 17, 18, 18, 19, 20, 20, 20, 20, 21, 17, 18, 20, 23, 23, 16, 17, 23 })
 ' unsigned offset;

    if ( c1 < 0xB0 || c1 > 0xF7
        || c2 < 0xA1 || c2 > 0xFE )
    {
        // not a valid gb2312 Chinese character
        return -1;
    }

    offset = ((unsigned)c1-0xB0) * (0xFE-0xA0) + ((unsigned)c2-0xA1);
    return gb2312_stroke_count[ offset ];
赋值 (区码, 取代码 (取文本左边 (汉字, 1), ))
赋值 (位码, 取代码 (取文本中间 (汉字, 2, 1), ))
.如果真 (或者 (小于 (区码, 176), 大于 (区码, 247), 小于 (位码, 161), 大于 (位码, 254)))
    返回 (-1)
.如果真结束
赋值 (索引, 相加 (相乘 (相减 (区码, 176), 相减 (254, 160)), 相减 (位码, 161)))
返回 (数据 [相加 (索引, 1)])

.子程序 取繁体汉字笔划, 整数型, , 作者：王军,如果没有找到,就返回 -1
.参数 文字, 文本型, , 

.局部变量 文本, 文本型, , , 字库笔画对应数据
.局部变量 字位置, 整数型, , , 
.局部变量 笔画, 整数型, , , 

 ' 赋值 (读入文件 (“ZK字画2.TXT”))
赋值 (文本, 取字节集数据 (#文档_笔画, #文本型))
赋值 (字位置, 寻找文本 (文本, 文字, , 假))
.如果 (等于 (字位置, -1))
    返回 (-1)
.否则
    赋值 (笔画, 到数值 (取文本中间 (文本, 相加 (字位置, 2), 2)))
    返回 (笔画)
.如果结束


.程序集 文本操作, , , 

.子程序 文本折行, 文本型, , 把一段长文本按你指定的字数分行
.参数 要处理的文本, 文本型, , 
.参数 每行字数, 整数型, 可空, 半角字数，如果为空，将不进行分行操作，直接返回文本内容。
.参数 是否强行分行, 逻辑型, 可空, 为真则强行按设定长度分行。为假则保留连续半角数字或字母为一行。默认为假。
.参数 是否全角, 逻辑型, 可空, 是否将半角转换为全角,如果为空即不转换
.参数 首空字节数, 整数型, 可空, 在每行前面加入空格,如果为空,为0,即不加空格

.局部变量 操作文本, 文本型, , , 
.局部变量 开始位置, 整数型, , , 
.局部变量 读取长度, 整数型, , , 
.局部变量 开始计算半角, 逻辑型, , , 
.局部变量 半角位置, 整数型, , , 
.局部变量 结果文本, 文本型, , , 


.如果真 (是否为空 (每行字数))
    返回 (要处理的文本)
.如果真结束
.如果真 (是否为空 (是否强行分行))
    赋值 (是否强行分行, 假)
.如果真结束

.如果真 (等于 (是否全角, 真))
    赋值 (要处理的文本, 子文本替换 (要处理的文本, “...”, “…”, 1, , 真))
    赋值 (要处理的文本, 子文本替换 (要处理的文本, “->”, “→”, 1, , 真))
    赋值 (要处理的文本, 子文本替换 (要处理的文本, “<-”, “←”, 1, , 真))
    赋值 (要处理的文本, 子文本替换 (要处理的文本, “--”, “―”, 1, , 真))
    赋值 (要处理的文本, 到全角 (要处理的文本))
.如果真结束

.如果真 (大于或等于 (首空字节数, 1))
    赋值 (要处理的文本, 相加 (取空白文本 (首空字节数), 要处理的文本))
    赋值 (要处理的文本, 子文本替换 (要处理的文本, #换行符, 相加 (#换行符, 取空白文本 (首空字节数)), 1, , 真))
.如果真结束

赋值 (操作文本, 要处理的文本)
.判断循环首 (大于 (取文本长度 (操作文本), 每行字数))
    .判断循环首 (小于 (读取长度, 每行字数))
        .如果 (或者 (大于或等于 (取代码 (操作文本, 相加 (读取长度, 1)), 127), 小于 (取代码 (操作文本, 相加 (读取长度, 1)), 0)))
            赋值 (半角位置, 0)
            赋值 (开始计算半角, 假)
            .如果真 (等于 (读取长度, 相减 (每行字数, 1)))
                跳出循环 ()
            .如果真结束
            赋值 (读取长度, 相加 (读取长度, 2))
        .否则
            .判断开始 (等于 (取文本中间 (操作文本, 相加 (读取长度, 1), 1), “ ”))
                赋值 (读取长度, 相加 (读取长度, 1))
                赋值 (半角位置, 0)
                赋值 (开始计算半角, 假)
            .判断 (等于 (取文本中间 (操作文本, 相加 (读取长度, 1), 2), #换行符))
                赋值 (读取长度, 相加 (读取长度, 2))
                跳出循环 ()
            .默认
                .如果真 (等于 (开始计算半角, 假))
                    赋值 (半角位置, 读取长度)
                    赋值 (开始计算半角, 真)
                .如果真结束
                赋值 (读取长度, 相加 (读取长度, 1))
            .判断结束
            
        .如果结束
        
    .判断循环尾 ()
    .如果真 (大于或等于 (读取长度, 每行字数))
        .如果 (等于 (是否强行分行, 假))
            赋值 (读取长度, 选择 (等于 (半角位置, 0), 每行字数, 选择 (或者 (大于或等于 (取代码 (操作文本, 相加 (每行字数, 1)), 127), 小于 (取代码 (操作文本, 相加 (每行字数, 1)), 0)), 每行字数, 半角位置)))
            赋值 (开始计算半角, 假)
            赋值 (半角位置, 0)
        .否则
            赋值 (读取长度, 每行字数)
        .如果结束
        
    .如果真结束
    .如果真 (等于 (是否强行分行, 假))
        .如果 (或者 (等于 (取文本中间 (操作文本, 相减 (读取长度, 1), 2), “《”), 等于 (取文本中间 (操作文本, 相减 (读取长度, 1), 2), “（”), 等于 (取文本中间 (操作文本, 相减 (读取长度, 1), 2), #左引号), 等于 (取文本中间 (操作文本, 相减 (读取长度, 1), 2), “〈”), 等于 (取文本中间 (操作文本, 相减 (读取长度, 11), 2), “‘”)))
            赋值 (读取长度, 相减 (读取长度, 2))
        .否则
            .如果真 (或者 (等于 (取文本中间 (操作文本, 相加 (读取长度, 1), 2), “》”), 等于 (取文本中间 (操作文本, 相加 (读取长度, 1), 2), “）”), 等于 (取文本中间 (操作文本, 相加 (读取长度, 1), 2), #右引号), 等于 (取文本中间 (操作文本, 相加 (读取长度, 1), 2), “〉”), 等于 (取文本中间 (操作文本, 相加 (读取长度, 1), 2), “，”), 等于 (取文本中间 (操作文本, 相加 (读取长度, 1), 2), “。”), 等于 (取文本中间 (操作文本, 相加 (读取长度, 1), 2), “？”), 等于 (取文本中间 (操作文本, 相加 (读取长度, 1), 2), “：”), 等于 (取文本中间 (操作文本, 相加 (读取长度, 1), 2), “’”), 等于 (取文本中间 (操作文本, 相加 (读取长度, 1), 2), “；”), 等于 (取文本中间 (操作文本, 相加 (读取长度, 1), 2), “、”)))
                .如果 (或者 (大于或等于 (取代码 (操作文本, 读取长度), 127), 小于 (取代码 (操作文本, 读取长度), 0)))
                    赋值 (读取长度, 相减 (读取长度, 2))
                .否则
                    赋值 (读取长度, 相减 (读取长度, 1))
                .如果结束
                
            .如果真结束
            
        .如果结束
        
    .如果真结束
    .如果 (等于 (取文本中间 (操作文本, 相减 (读取长度, 1), 2), #换行符))
        赋值 (结果文本, 相加 (结果文本, 取文本左边 (操作文本, 读取长度)))
    .否则
        赋值 (结果文本, 相加 (结果文本, 取文本左边 (操作文本, 读取长度), #换行符))
    .如果结束
    赋值 (操作文本, 取文本右边 (操作文本, 相减 (取文本长度 (操作文本), 读取长度)))
    赋值 (读取长度, 0)
.判断循环尾 ()
赋值 (结果文本, 相加 (结果文本, 操作文本))
返回 (结果文本)

.子程序 取行左边, 文本型, , 从文本的左边按标志文本开始寻找
.参数 文本, 文本型, , 被查找的文本
.参数 标志文本, 文本型, , 标志文本
.参数 起始寻找位置, 整数型, 可空, 标志文本的起始寻找位置
.参数 是否区分大小写, 逻辑型, 可空, 默认为假区分大小写

.局部变量 找到的位置, 整数型, , , 
.局部变量 结果文本, 文本型, , , 

.如果真 (小于或等于 (起始寻找位置, 0))
    赋值 (起始寻找位置, 1)
.如果真结束
赋值 (找到的位置, 寻找文本 (文本, 标志文本, 起始寻找位置, 是否区分大小写))

.如果真 (等于 (找到的位置, -1))
    返回 (“”)
.如果真结束
赋值 (结果文本, 取文本左边 (文本, 相减 (找到的位置, 1)))
返回 (结果文本)

.子程序 取行右边, 文本型, , 从文本的右边按标志文本开始寻找, 取行右边 (“1234567890”, “5”, 1, 真)
.参数 文本, 文本型, , 被查找的文本
.参数 标志文本, 文本型, , 标志文本
.参数 起始寻找位置, 整数型, 可空, 标志文本的起始寻找位置,最好为空,默认取文本总长度,这样才能真正从最后向前开始找.
.参数 是否区分大小写, 逻辑型, 可空, 默认为假,区分大小写

.局部变量 找到的位置, 整数型, , , 
.局部变量 结果文本, 文本型, , , 

.如果真 (或者 (小于或等于 (起始寻找位置, 0), 等于 (是否为空 (起始寻找位置), 真)))
    赋值 (起始寻找位置, 1)
.如果真结束
 ' 输出调试文本 (起始寻找位置)
赋值 (找到的位置, 倒找文本 (文本, 标志文本, , 是否区分大小写))
输出调试文本 (倒找文本 (“1234567890”, “5”, , 真))
 ' 输出调试文本 (相加 (“1”, 到文本 (找到的位置)))
.如果真 (等于 (找到的位置, -1))
    返回 (“”)
.如果真结束
赋值 (结果文本, 取文本右边 (文本, 相减 (取文本长度 (文本), 找到的位置)))
返回 (结果文本)


.子程序 取行中间, 文本型, , 
.参数 文本, 文本型, , 被查找的文本
.参数 前标志文本, 文本型, , 前面的一个标志文本
.参数 后标志文本, 文本型, , 从前标志文本＋1位置起查找的标志文本
.参数 起始寻找位置, 整数型, 可空, 前标志文本位置＋1位置
.参数 是否区分大小写, 逻辑型, 可空, 默认为不区分大小写

.局部变量 找到的位置1, 整数型, , , 
.局部变量 找到的位置2, 整数型, , , 
.局部变量 结果文本, 文本型, , , 

.如果真 (小于或等于 (起始寻找位置, 0))
    赋值 (起始寻找位置, 1)
.如果真结束
赋值 (找到的位置1, 寻找文本 (文本, 前标志文本, 起始寻找位置, 是否区分大小写))
赋值 (找到的位置2, 寻找文本 (文本, 后标志文本, 相加 (起始寻找位置, 1), 是否区分大小写))
输出调试文本 (找到的位置1, 找到的位置2)
.如果真 (或者 (等于 (找到的位置1, -1), 等于 (找到的位置2, -1)))
    返回 (“”)
.如果真结束
赋值 (找到的位置2, 相减 (找到的位置2, 找到的位置1, 1))
赋值 (结果文本, 取文本中间 (文本, 相加 (找到的位置1, 1), 找到的位置2))
返回 (结果文本)


.子程序 是否有重复, 逻辑型, , 本函数用于判断一个文本是否已重复
.参数 文本, 文本型, , 
.参数 清空, 逻辑型, 可空, 

.局部变量 临时数组, 文本型, 静态, "0", 
.局部变量 返回值, 逻辑型, , , 
.局部变量 次数, 整数型, , , 

.如果真 (是否为空 (清空))
    赋值 (清空, 假)
.如果真结束
.如果真 (清空)
    清除数组 (临时数组)
.如果真结束
.变量循环首 (1, 取数组成员数 (临时数组), 1, 次数)
    .如果真 (等于 (文本, 临时数组 [次数]))
        返回 (假)
    .如果真结束
    
.变量循环尾 ()
加入成员 (临时数组, 文本)
返回 (真)


.子程序 倒取文本, 文本型, , 
.参数 字串, 文本型, , 要进行处理的文本字符串
.参数 识别汉字, 逻辑型, 可空, 是否对文本中的汉字进行识别处理；缺省为不识别，即默认为"假"
.参数 个数, 整数型, 可空, 缺省为取所有，否则倒取文本的字符数为给定的“个数”的值

.局部变量 长度, 整数型, , , 
.局部变量 当前字符, 文本型, , , 
.局部变量 目标字串, 文本型, , , 
.局部变量 统计, 整数型, , , 

赋值 (长度, 取文本长度 (字串))
.如果真 (或者 (等于 (个数, 0), 大于 (个数, 长度)))
    赋值 (个数, 长度)
.如果真结束

赋值 (统计, 个数) ' 用于统计所取的个数
.判断循环首 (大于 (统计, 0))
    .如果 (并且 (识别汉字, 或者 (大于 (取代码 (取文本中间 (字串, 长度, 1), 1), 127), 小于 (取代码 (取文本中间 (字串, 长度, 1), 1), 0))))
        赋值 (当前字符, 相加 (取文本中间 (字串, 相减 (长度, 1), 1), 取文本中间 (字串, 长度, 1)))
        赋值 (长度, 相减 (长度, 1)) ' 由于汉字占两个字符，所以必须再减一，配合“统计”变量，做到汉字两个字符只计数一次。
        
    .否则
        赋值 (当前字符, 取文本中间 (字串, 长度, 1))
    .如果结束
    
    赋值 (长度, 相减 (长度, 1))
    赋值 (目标字串, 相加 (目标字串, 当前字符))
    赋值 (统计, 相减 (统计, 1))
.判断循环尾 ()
返回 (目标字串)

.子程序 取汉字区位码, 文本型, , 返回一个汉字的区位码,如果汉字过长,只取第一个字,如果不是汉字,返回空
.参数 汉字, 文本型, , 传送一个汉字进行处理
.参数 区码还是位码, 整数型, 可空, 需返回的内容,1表示区码,2表示位码,3表示区码与位码都返回,默认为3

.局部变量 区码, 字节型, , , 
.局部变量 位码, 字节型, , , 

赋值 (区码, 取代码 (取文本左边 (汉字, 1), ))
赋值 (位码, 取代码 (取文本中间 (汉字, 2, 1), ))
.如果真 (或者 (小于 (区码, 176), 大于 (区码, 247), 小于 (位码, 161), 大于 (位码, 254)))
    返回 (“”)
.如果真结束
.判断开始 (等于 (区码还是位码, 1))
    返回 (到文本 (区码))
.判断 (等于 (区码还是位码, 2))
    返回 (到文本 (位码))
.判断 (等于 (区码还是位码, 3))
    返回 (相加 (到文本 (区码), 到文本 (位码)))
.默认
    返回 (“”)
.判断结束



.子程序 取汉字机内码, 文本型, , 
.参数 汉字, 文本型, , 

.局部变量 机内码, 文本型, , , 

.如果真 (大于 (取代码 (汉字, 1), 0))
    返回 ()
.如果真结束
赋值 (机内码, 相加 (相乘 (相加 (取代码 (汉字, 1), 256), 256), 取代码 (汉字, 2), 256))
返回 (取十六进制文本 (机内码))
 ' 区位码 ＝ 机内码 － 41120  ' 41120=A0A0H


.子程序 取汉字区位码2, 文本型, , 
.参数 汉字, 文本型, , 

.局部变量 机内码, 文本型, , , 

.如果真 (大于 (取代码 (汉字, 1), 0))
    返回 ()
.如果真结束
赋值 (机内码, 相加 (相乘 (相加 (取代码 (汉字, 1), 256), 256), 取代码 (汉字, 2), 256))
 ' 返回 (取十六进制文本 (机内码))
返回 (相减 (机内码, 41120)) ' 41120=A0A0H

.子程序 取随机汉字, 文本型, , 
.局部变量 文本, 文本型, , , 

置随机数种子 ()
赋值 (文本, 到文本 (相加 (字符 (负 (取随机数 (38, 80))), 字符 (负 (取随机数 (38, 80))))))
返回 (文本)

.子程序 取重复数目, 整数型, , 〈整数型〉 取重复数目 （文本，子文本，出现次数，是否区分大小写）
.参数 文本, 文本型, , 取文本中某子文本的重复数目
.参数 子文本, 文本型, , 
.参数 是否区分大小写, 逻辑型, 可空, 为空为真时表示区分,为假时不区分,

.局部变量 文本数组, 文本型, , "0", 
.局部变量 计数, 整数型, , , 

.如果真 (等于 (是否为空 (是否区分大小写), 真))
    赋值 (是否区分大小写, 真)
.如果真结束
.如果 (等于 (是否区分大小写, 真))
    赋值 (文本数组, 分割文本 (文本, 子文本, ))
.否则
    赋值 (文本数组, 分割文本 (到大写 (文本), 到大写 (子文本), ))
.如果结束
赋值 (计数, 相减 (取数组成员数 (文本数组), 1))
返回 (计数) ' 返回的数组维数-1就是了吧。


.子程序 取指定文本位置, 整数型, , 〈整数型〉 取指定文本位置 （文本，子文本，出现次数，是否区分大小写）
.参数 文本, 文本型, , 取文本中某子文本指定次数出现的位置
.参数 子文本, 文本型, , 取文本中某次出现的子文本位置
.参数 出现次数, 整数型, 可空, 如果为空,默认表示第1次出现的位置
.参数 是否区分大小写, 逻辑型, 可空, 如果为空,表示为真,区分大小写,

.局部变量 计数器, 整数型, , , 



.子程序 填充文本, 文本型, , 〈文本型〉 填充文本 （文本，子文本，填充位置）在文本中指定位置填充子文本，注意如果文本中有汉字，在不恰当的位置填充后可能会出现乱码
.参数 文本, 文本型, , 
.参数 子文本, 文本型, , 
.参数 填充位置, 整数型, , 



.程序集 文件目录, , , 

.子程序 取后缀, 文本型, , 返回一个文件的后缀名,如果没有后缀,返回空
.参数 原始文件名, 文本型, , 需要处理的原始文件名

.局部变量 后缀名, 文本型, , , 

赋值 (后缀名, 取文本右边 (原始文件名, 相减 (取文本长度 (原始文件名), 倒找文本 (原始文件名, “.”, , 假))))
返回 (后缀名)

.子程序 去后缀, 文本型, , 去除一个文件的后缀名,如果没有后缀,将返回空
.参数 原始文件名, 文本型, , 需要处理的原始文件名

.局部变量 后缀名, 文本型, , , 

赋值 (后缀名, 取文本左边 (原始文件名, 相减 (倒找文本 (原始文件名, “.”, , 假), 1)))
返回 (后缀名)

.子程序 改后缀, 文本型, , 改变一个文件的后缀名,如果没有后缀,将自动加上新后缀,返回新文件名
.参数 原始文件名, 文本型, , 需要处理的原始文件名
.参数 新后缀名, 文本型, 可空, 如果新后缀名为空,即直接返回原文件名

.局部变量 新文件名, 文本型, , , 

.如果真 (等于 (删全部空 (新后缀名), “”))
    返回 (原始文件名)
.如果真结束
赋值 (新文件名, 相加 (取文本左边 (原始文件名, 相减 (倒找文本 (原始文件名, “.”, , 假), 1)), “.”, 新后缀名))
返回 (新文件名)

.子程序 取单独文件名, 文本型, , 可取含扩展名的与不含扩展名的
.参数 文件名, 文本型, , 
.参数 是否要后缀, 逻辑型, 参考, 如果为空,为带有后缀.

.局部变量 不含扩展名文件名, 文本型, , , 

.如果 (等于 (是否要后缀, 真))
    赋值 (不含扩展名文件名, 取文本中间 (文件名, 相加 (倒找文本 (文件名, “\”, , 假), 1), 相减 (取文本长度 (文件名), 倒找文本 (文件名, “\”, , 假))))
    返回 (不含扩展名文件名)
.否则
    赋值 (不含扩展名文件名, 取文本左边 (取文本中间 (文件名, 相加 (倒找文本 (文件名, “\”, , 假), 1), 相减 (取文本长度 (文件名), 倒找文本 (文件名, “\”, , 假))), 相减 (倒找文本 (取文本中间 (文件名, 相加 (倒找文本 (文件名, “\”, , 假), 1), 相减 (取文本长度 (文件名), 倒找文本 (文件名, “\”, , 假))), “.”, , 真), 1)))
    返回 (不含扩展名文件名)
.如果结束


.子程序 取文件名, 文本型, , 取文件名(路径文件名)
.参数 路径文件名, 文本型, , 写入文件完整地址，取得文件名

.局部变量 新文件名, 文本型, , , 

赋值 (新文件名, 取文本中间 (路径文件名, 相加 (倒找文本 (路径文件名, “\”, , 假), 1), 相减 (倒找文本 (路径文件名, “.”, , 假), 倒找文本 (路径文件名, “\”, , 假), 1)))
返回 (新文件名)

.子程序 取盘符, 文本型, , 取一个路径文件名的盘符
.参数 文件名, 文本型, , 

.局部变量 盘符, 文本型, , , 

赋值 (盘符, 取文本左边 (文件名, 寻找文本 (文件名, “\”, , 真)))
返回 (盘符)

.子程序 取文件部分, 文本型, , 取出文件带后缀或不带后缀名的相对路径名或其后缀名，以及不带文件名的文件路径。
.参数 全路径名, 文本型, , 欲取出的文件全路径名
.参数 取出部分, 字节型, , 1为不带后缀文件名，2为后缀名，3为带后缀文件名，4为文件路径(不包含文件名，以“\”结束)。

.局部变量 带后缀文件名, 文本型, , , 
.局部变量 不带后缀文件名, 文本型, , , 
.局部变量 后缀名, 文本型, , , 
.局部变量 文件路径, 文本型, , , 
.局部变量 容器, 整数型, , , 

赋值 (带后缀文件名, 取文本右边 (全路径名, 相减 (取文本长度 (全路径名), 倒找文本 (全路径名, “\”, , 假))))
赋值 (文件路径, 取文本左边 (全路径名, 相减 (取文本长度 (全路径名), 取文本长度 (带后缀文件名))))
赋值 (容器, 倒找文本 (带后缀文件名, “.”, , 假))
.如果 (不等于 (容器, -1))
    .如果 (不等于 (容器, 1))
        赋值 (不带后缀文件名, 取文本左边 (带后缀文件名, 相减 (容器, 1)))
        赋值 (后缀名, 取文本右边 (带后缀文件名, 相减 (取文本长度 (带后缀文件名), 容器)))
    .否则
        赋值 (不带后缀文件名, “”)
        赋值 (后缀名, 取文本右边 (带后缀文件名, 相减 (取文本长度 (带后缀文件名), 1)))
    .如果结束
    
.否则
    赋值 (不带后缀文件名, 带后缀文件名)
    赋值 (后缀名, “”)
.如果结束
返回 (多项选择 (取出部分, 不带后缀文件名, 后缀名, 带后缀文件名, 文件路径))

.子程序 取路径, 文本型, , 取路径(路径文件名)写入文件完整地址，取得文件所在目录
.参数 路径文件名, 文本型, , 文件的完整地址

.局部变量 目录, 文本型, , , 

赋值 (目录, 取文本左边 (路径文件名, 倒找文本 (路径文件名, “\”, , 假)))
返回 (目录)

.子程序 取关联, 文本型, , 写入一个后缀，取得此后缀文档打开方式，失败则返回空文本
.参数 后缀, 文本型, , 文件后缀，如"txt","*.txt",".txt"三者都可以

.局部变量 程序名, 文本型, , , 
.局部变量 打开方式, 文本型, , , 

赋值 (后缀, 子文本替换 (后缀, “*”, , , , 真))
赋值 (后缀, 子文本替换 (后缀, “.”, , , , 真))
赋值 (程序名, 取文本注册项 (#根类, 相加 (“.”, 后缀, “\”), ))
.如果真 (等于 (取文本长度 (程序名), 0))
    返回 (“”)
.如果真结束
赋值 (打开方式, 取文本注册项 (#根类, 相加 (程序名, “\shell\”), “open”))
赋值 (程序名, 取文本注册项 (#根类, 相加 (程序名, “\shell\”, 打开方式, “\command\”), ))
返回 (程序名)


.子程序 判断有无子目录, 逻辑型, , 判断一个目录下有无下级子目录
.参数 当前目录, 文本型, , 若没有以"\"结尾,将自动增加

.局部变量 文件名, 文本型, , , 

.如果真 (不等于 (取文本右边 (当前目录, 1), “\”))
    赋值 (当前目录, 相加 (当前目录, “\”))
.如果真结束
.如果 (不等于 (寻找文件 (当前目录, #子目录), “”))
    返回 (真)
.否则
    返回 (假)
.如果结束


.子程序 取文件实际尺寸, 整数型, , 1000K与1024K可不一样哦
.参数 文件名, 文本型, , 

.局部变量 大小, 整数型, , , 

.如果真 (等于 (文件是否存在 (文件名), 假)) ' 没有文件就返回 0 或-1
    返回 (-1)
.如果真结束
赋值 (大小, 取绝对值 (取文件尺寸 (文件名)))
.如果 (不等于 (求余数 (大小, 1024), 0))
    赋值 (大小, 相加 (整除 (大小, 1024), 1))
.否则
    赋值 (大小, 整除 (大小, 1024))
.如果结束
返回 (大小)

.子程序 取MP3播放时间, 文本型, , Mp3文件的全曲时间,仅支持MP3文件,如果文件不存在，将返回空
.参数 文件名, 文本型, , Mp3文件的全路径名
.参数 时间样式, 整数型, 可空, 1为X秒,2为X分X秒,3为X:X,默认为2

.局部变量 分钟数, 整数型, , , 
.局部变量 秒数, 整数型, , , 
.局部变量 时间文本, 文本型, , , 
.局部变量 长度数, 小数型, , , 
.局部变量 字节集, 字节集, , , 

.如果真 (等于 (文件是否存在 (文件名), 假))
    返回 (“”)
.如果真结束
赋值 (字节集, 读入文件 (文件名))
赋值 (长度数, 取字节集长度 (字节集))
赋值 (长度数, 相除 (长度数, 16045.4193, 60))
赋值 (分钟数, 取整 (长度数))
赋值 (秒数, 取整 (相乘 (相减 (长度数, 分钟数), 60)))
赋值 (时间文本, 相加 (到文本 (分钟数), “分”, 到文本 (秒数), “秒”))
.如果 (等于 (时间样式, 1))
    赋值 (秒数, 取整 (相乘 (长度数, 60)))
    赋值 (时间文本, 相加 (到文本 (秒数), “秒”))
.否则
    .如果真 (等于 (时间样式, 3))
        赋值 (时间文本, 相加 (到文本 (分钟数), “:”, 到文本 (秒数)))
    .如果真结束
    
.如果结束
返回 (时间文本)

.子程序 判断文件或目录, 整数型, , 判断给出的字符串名到底是文件还是目录.1为文件，2为目录，0表示对象不存在
.参数 名称, 文本型, , 

.局部变量 当前目录, 文本型, , , 

.如果 (文件是否存在 (名称))
    返回 (1)
.否则
    赋值 (当前目录, 取当前目录 ())
    .如果 (改变目录 (名称))
        改变目录 (当前目录)
        返回 (2)
    .否则
        改变目录 (当前目录)
        返回 (0)
    .如果结束
    
.如果结束


.子程序 目录是否存在1, 逻辑型, , 输入一个目录名,判断此目录是否存在
.参数 目录名, 文本型, , 1是用"取文件属性法查找"

.如果真 (等于 (删首尾空 (目录名), “”))
    返回 (假)
.如果真结束

.如果 (并且 (不等于 (位与 (取文件属性 (目录名), #子目录), 0), 不等于 (取文件属性 (目录名), -1)))
    .如果 (并且 (不等于 (位与 (取文件属性 (目录名), #隐藏文件), 0), 不等于 (取文件属性 (目录名), -1)))
        返回 (真) ' 信息框 (“文件夹存在，且为隐藏的。”, 0, )
    .否则
        返回 (真) ' 信息框 (“文件夹存在，目录不隐藏！”, 0, )
    .如果结束
    
.否则
    返回 (假)
.如果结束


.子程序 目录是否存在2, 逻辑型, , 输入一个目录名,判断此目录是否存在
.参数 目录名, 文本型, , 2是"写文件法查找目录"

.局部变量 文件号, 整数型, , , 

.如果真 (等于 (删首尾空 (目录名), “”))
    返回 (假)
.如果真结束

赋值 (文件号, 打开文件 (相加 (目录名, “\TEMP.TMP”), 4, 1))
写出字节集 (文件号, { 2, 3, 4 })
关闭文件 (文件号)
.如果 (文件是否存在 (相加 (目录名, “\TEMP.TMP”)))
    删除文件 (相加 (目录名, “\TEMP.TMP”))
    返回 (真)
.否则
    删除文件 (相加 (目录名, “\TEMP.TMP”))
    返回 (假)
.如果结束


.子程序 复制目录, 空白型, , 
.参数 被复制目录, 文本型, , 形式如："c:\windows"等
.参数 复制到的目录, 文本型, , 形式如："e:\bak\win98"等

.局部变量 文件名, 文本型, , , 

处理事件 () ' 给出机会以接收停止按钮事件。
.如果真 (不等于 (取文本右边 (被复制目录, 1), “\”))
    赋值 (被复制目录, 相加 (被复制目录, “\”))
.如果真结束
赋值 (文件名, 寻找文件 (相加 (被复制目录, “*.*”), ))
.如果 (等于 (文件名, “”))
    创建目录 (复制到的目录)
.否则
    
.如果结束
.判断循环首 (不等于 (文件名, “”))
    创建目录 (复制到的目录)
    .如果真 (不等于 (取文本右边 (复制到的目录, 1), “\”))
        赋值 (复制到的目录, 相加 (复制到的目录, “\”))
    .如果真结束
    
    复制文件 (相加 (被复制目录, 文件名), 相加 (复制到的目录, 文件名))
    赋值 (文件名, 寻找文件 ())
.判断循环尾 ()

赋值 (文件名, 寻找文件 (相加 (被复制目录, “*.*”), #子目录))
.判断循环首 (不等于 (文件名, “”))
    .如果真 (不等于 (取文本右边 (复制到的目录, 1), “\”))
        赋值 (复制到的目录, 相加 (复制到的目录, “\”))
    .如果真结束
    
    .如果真 (不等于 (取文本左边 (文件名, 1), “.”))
        复制目录 (相加 (被复制目录, 文件名), 相加 (复制到的目录, 文件名))
    .如果真结束
    创建目录 (相加 (复制到的目录, 文件名))
    赋值 (文件名, 寻找文件 (#子目录))
.判断循环尾 ()
返回 (真)

.子程序 删除某类文件, 逻辑型, , 支持通配符删除，写法如：删除文件("c:\","*.*")返回删除文件总数(有些文件由于某种原因可能未被删除)
.参数 目录名, 文本型, , 最后不带"\",但可自动加上.
.参数 扩展名, 文本型, 可空, 如"*.BAT"或“ABC*.INI"，可以使用多字符 (*) 和单字符 (?) 通配符
.参数 是否包含子目录, 逻辑型, 可空, 默认为假，不包含；真，包含。

.局部变量 文件名, 文本型, , , 
.局部变量 删除数量, 整数型, , , 

处理事件 () ' 给出机会以接收停止按钮事件。
.如果真 (等于 (扩展名, “”))
    赋值 (扩展名, “*.*”)
.如果真结束
.如果真 (不等于 (取文本右边 (目录名, 1), “\”))
    赋值 (目录名, 相加 (目录名, “\”))
.如果真结束
赋值 (文件名, 寻找文件 (相加 (目录名, 扩展名), ))
.判断循环首 (不等于 (文件名, “”))
    删除文件 (相加 (目录名, 文件名))
    赋值 (文件名, 寻找文件 ())
.判断循环尾 ()
赋值 (文件名, 寻找文件 (相加 (目录名, “*.*”), #子目录))
.判断循环首 (不等于 (文件名, “”))
    .如果真 (不等于 (取文本左边 (文件名, 1), “.”))
        删除某类文件 (相加 (目录名, 文件名), )
    .如果真结束
    赋值 (文件名, 寻找文件 (#子目录))
.判断循环尾 ()
返回 (真)

.子程序 合并文件, 空白型, , 将两个文件进行合并,生成一个新的文件
.参数 合并文件名, 文本型, , 前一个文件名,最后生成的文件名也是它.
.参数 被合并文件名, 文本型, , 要追加的文件名.
.参数 生成文件名, 文本型, 可空, 如果空,以第一个文件名为准

.局部变量 头文件, 整数型, , , 
.局部变量 字节数据, 字节集, , , 
.局部变量 尾文件, 整数型, , , 

赋值 (头文件, 打开文件 (合并文件名, #改写, ))
.如果真 (不等于 (头文件, 0))
    .如果真 (移到文件尾 (头文件))
    .如果真结束
    
.如果真结束
赋值 (尾文件, 打开文件 (被合并文件名, , ))
.如果真 (不等于 (尾文件, 0))
    .如果真 (移到文件首 (尾文件))
    .如果真结束
    
.如果真结束

.如果真 (插入字节集 (头文件, 读入字节集 (尾文件, 取文件长度 (尾文件))))
    关闭文件 (头文件)
    关闭文件 (尾文件)
    赋值 (头文件, 打开文件 (合并文件名, , ))
.如果真结束


.子程序 创建文件目录, 逻辑型, , 根据一个文件名创建出该文件名所包含的所有目录
.参数 文件名, 文本型, , 完整路径的文件名

.局部变量 文本, 文本型, , , 
.局部变量 次数, 整数型, , , 

.如果真 (不等于 (取文本中间 (文件名, 2, 1), “:”))
    返回 (假)
.如果真结束
.判断循环首 (不等于 (寻找文本 (文件名, “\”, 相加 (次数, 1), 假), -1))
    赋值 (次数, 寻找文本 (文件名, “\”, 相加 (次数, 1), 假))
    赋值 (文本, 取文本左边 (文件名, 次数))
    创建目录 (文本)
.判断循环尾 ()
返回 (真)

.子程序 创建任意目录, 整数型, , -1 失败, 0 已存在,1 成功创建
.参数 欲创建的目录名称, 文本型, , 

.局部变量 文本位置, 整数型, , , 
.局部变量 各级目录, 文本型, , "0", 
.局部变量 目录, 文本型, , , 
.局部变量 循环次数, 整数型, , , 
.局部变量 新创建目录起点, 文本型, , , 

.如果真 (等于 (欲创建的目录名称, “”))
    返回 (-1)
.如果真结束
 ' 如果最后有“\”，去掉最后的“\”
.如果真 (等于 (取文本右边 (欲创建的目录名称, 1), “\”))
    赋值 (欲创建的目录名称, 取文本左边 (欲创建的目录名称, 相减 (取文本长度 (欲创建的目录名称), 1)))
.如果真结束
 ' 检查目录是否已经存在
.如果真 (不等于 (寻找文件 (欲创建的目录名称, #子目录), “”))
    返回 (0)
.如果真结束
 ' 取得目录名段数，以便定义数组
赋值 (文本位置, 1)
赋值 (循环次数, 1)
.计次循环首 (循环次数, )
    赋值 (文本位置, 寻找文本 (欲创建的目录名称, “\”, 相加 (文本位置, 1), 真))
    .如果真 (不等于 (文本位置, -1))
        赋值 (循环次数, 相加 (循环次数, 1))
    .如果真结束
    
.计次循环尾 ()
 ' 定义数组容器
重定义数组 (各级目录, 假, 循环次数)
 ' 开始创建目录
赋值 (循环次数, 0)
赋值 (各级目录, 分割文本 (欲创建的目录名称, “\”, ))
赋值 (目录, 各级目录 [1])
.计次循环首 (相减 (取数组成员数 (各级目录), 1), 循环次数)
    赋值 (目录, 相加 (目录, “\”, 各级目录 [相加 (循环次数, 1)]))
    .如果 (等于 (寻找文件 (目录, #子目录), “”))
        .如果真 (等于 (创建目录 (目录), 假))
            .如果真 (大于 (循环次数, 1)) ' 检查是否为根目录（这句一定要保留，否则后果不堪设想）
                删除目录 (新创建目录起点) ' 删除新创建的目录
            .如果真结束
            返回 (-1)
        .如果真结束
        
    .否则
        赋值 (新创建目录起点, 相加 (目录, “\”, 各级目录 [相加 (循环次数, 2)])) ' 记录下新创建的目录起点，以便失败时可以删除
    .如果结束
    
.计次循环尾 ()
返回 (1)

.子程序 删除同类型文件, 整数型, , 〈删除数目〉 删除目录中同类型文 （目录，文件类型，是否删除目录本身）
.参数 目录, 文本型, , 需要删除文件的主目录
.参数 文件类型, 文本型, , 需要删除的目录中的文件类型,例如:".BAK".如果是".*",即为全部删除.
.参数 是否删除目录本身, 逻辑型, 可空, 如果为空,默认为假,即为不删除目录本身



.子程序 取类型文件, 文本型, , 〈文本型〉 寻找目录中第一个此类型文件 （目录，类型）返回文件路径，如果没有将返回空
.参数 目录, 文本型, , 
.参数 类型, 文本型, , 



.子程序 打开关联文件, 整数型, , 〈整数型〉打开关联文件 （窗口句柄，操作，文件名，参数，路径，运行状态）


.子程序 保存画板图片, 逻辑型, , 保存图片（窗口1.画板1.底图）
.参数 画板句柄, 画板, , 需保存图片的画板句柄



.子程序 写出为CSV文件, 逻辑型, , 新一个文本写出为CSV逗号分隔文件
.参数 文本, 文本型, , 需要写出的文本字符串.
.参数 文件名, 文本型, , 要保存的CSV逗号分隔文件名
.参数 原分隔符, 文本型, 可空, 旧的分隔符,如果空,默认为逗号.
.参数 新分隔符, 文本型, 可空, 用新的分隔符代替原分隔符,产生新的分隔文本,如果空,需可以不改变.
.参数 是否是增加形式, 逻辑型, 可空, 新建,或增加形式,如果是新建,就覆盖文件,如果是增加形式,将添加在文件尾部



.子程序 存图标到文件, 空白型, , 〈无返回值〉 置指定目录中文件图标到文件 （显示文件所在目录，显示文件的类型，隐藏后缀名，没有固定图标的数据显示的图标，缓存文件名）
.参数 显示文件所在目录, 文本型, , 
.参数 显示文件的类型, 文本型, , 
.参数 隐藏后缀名, 逻辑型, , 
.参数 没有固定图标的数据显示的图标, 字节集, , 
.参数 缓存文件名, 文本型, , 



.子程序 分割文件, 逻辑型, , 
.参数 欲分割文件, 文本型, , 全路径文件名
.参数 保存目录, 文本型, , 最后不带"\"
.参数 每块大小, 整数型, 可空, 默认:50000
.参数 保存文件扩展名, 文本型, 可空, 默认:".YE"



.子程序 合并目录文件, 逻辑型, , 
.参数 欲合并文件所在目录, 文本型, , 最后不带"\"
.参数 合并后保存文件, 文本型, 可空, 全路径文件名
.参数 欲合并文件扩展名, 文本型, 可空, 默认".YE"
.参数 是否删除原文件, 逻辑型, 可空, 默认:假



.子程序 同步目录, 整数型, , 成功复制文件个数
.参数 源目录, 文本型, , 最后不带"\"
.参数 目标目录, 文本型, , 最后不带"\"
.参数 文件类型, 文本型, 可空, 如:"*.EXE";默认为"*.*"
.参数 是否同步子目录, 逻辑型, 可空, 默认为真同步子目录
.参数 同步方向, 整数型, 可空, 默认为：2双向；1为单向即从源目录到目标目录
.参数 出错文件, 文本型, 参考 可空 数组, 这个参数返回复制时出错文件名数组
.参数 停止同步, 逻辑型, 参考 可空, 如果为真
.参数 同步状态标签, 空白型, 参考 可空, 此标签将动态显示被复制的文件



.程序集 系统处理, , , 

.子程序 添加自启动, 逻辑型, , 在注册表中添加须自启动的应用程序信息,当“是否检查”参数为真时返回值才具有意义，真表明已添加为自启动，假表明不是自启动
.参数 标识名称, 文本型, , 欲写入注册表的项目名称
.参数 应用程序路径, 文本型, 可空, 应用程序全路径，当参数“删除”为真时可空，否则不能为空
.参数 删除, 逻辑型, 可空, 是否删除自启动项，默认为假
.参数 是否检查, 逻辑型, 可空, 检查是否已添加自启动信息，此参数为真时，将不进行增删注册表的行为，仅为检查

.如果 (取反 (是否检查))
    .如果 (取反 (删除))
        写注册项 (4, 相加 (“SOFTWARE\Microsoft\Windows\CurrentVersion\Run\”, 标识名称), 应用程序路径)
    .否则
        删除注册项 (4, 相加 (“SOFTWARE\Microsoft\Windows\CurrentVersion\Run\”, 标识名称))
    .如果结束
    返回 (假)
.否则
    赋值 (是否检查, 注册项是否存在 (4, 相加 (“SOFTWARE\Microsoft\Windows\CurrentVersion\Run\”, 标识名称)))
    返回 (是否检查)
.如果结束


.子程序 设为自动运行, 逻辑型, , 
.参数 程序全路径, 文本型, 参考, 如果为空,即为当前程序

.局部变量 命令行, 文本型, , , 

.如果真 (等于 (删全部空 (程序全路径), “”))
    .如果 (等于 (写注册项 (#本地机器, “SOFTWARE\Microsoft\Windows\CurrentVersion\Run\iim”, 相加 (取运行目录 (), “\”, 取执行文件名 ())), 真))
        返回 (真)
    .否则
        返回 (假)
    .如果结束
    
.如果真结束
.如果 (写注册项 (#本地机器, “SOFTWARE\Microsoft\Windows\CurrentVersion\Run\iim”, 程序全路径))
    返回 (真)
.否则
    返回 (假)
.如果结束


.子程序 建立关联, 逻辑型, , 能用于关联程序打开方式及改关联图标，以及取得程序关联等功能。
.参数 后缀, 文本型, , 要关联的文件后缀，如"*.txt"
.参数 关联程序, 文本型, 可空, 此后缀所要关联的程序，如"d:\myflash.exe"，会关联用此程序打开，如果为空则默认为本程序
.参数 关联图标, 文本型, 可空, 关联后此程序的图标，默认为关联程序的第一个图标
.参数 关联名称, 文本型, 可空, 此为高级项，为关联注册项的名称，可为空，默认为程序名

.局部变量 程序, 文本型, , , 
.局部变量 成功, 逻辑型, , , 
.局部变量 图标, 文本型, , , 

.如果真 (是否为空 (关联程序))
    赋值 (关联程序, 相加 (取运行目录 (), “\”, 取执行文件名 ()))
.如果真结束
赋值 (后缀, 子文本替换 (后缀, “*”, , , , 真))
赋值 (后缀, 子文本替换 (后缀, “.”, , , , 真))
赋值 (后缀, 相加 (“.”, 后缀, “\”))
赋值 (程序, 取文件名 (关联程序))
.如果 (是否为空 (关联图标))
    赋值 (图标, 相加 (关联程序, “,0”))
.否则
    赋值 (图标, 关联图标)
.如果结束

赋值 (成功, 写注册项 (#根类, 后缀, 程序))
.如果真 (取反 (是否为空 (关联名称)))
    赋值 (成功, 写注册项 (#根类, 相加 (后缀, “Content Type”), 关联名称))
.如果真结束
赋值 (成功, 写注册项 (#根类, 相加 (程序, “\BrowserFlags”), 8))
赋值 (成功, 写注册项 (#根类, 相加 (程序, “\EditFlags”), 0))
赋值 (成功, 写注册项 (#根类, 相加 (程序, “\DefaultIcon\”), 图标))
赋值 (成功, 写注册项 (#根类, 相加 (程序, “\shell\”), “open”))
赋值 (成功, 写注册项 (#根类, 相加 (程序, “\shell\open\command\”), 相加 (关联程序, “ ”, #引号, “%1”, #引号)))
返回 (成功)

.子程序 取运行参数, 文本型, , 返回被当前程序打开的第一个参数,基本上是文件名
.局部变量 参数文本, 文本型, , "0", 

取命令行 (参数文本)
.如果真 (并且 (大于 (取数组成员数 (参数文本), 0), 文件是否存在 (参数文本 [1])))
    返回 (参数文本 [1])
.如果真结束
返回 (“”)

.子程序 重复取硬盘特征字, 文本型, , 重复取硬盘特征字(次数,默认特征字)
.参数 重复取硬盘特征字次数, 整数型, , 
.参数 默认特征字, 文本型, 可空, 

.局部变量 次数, 整数型, , , 
.局部变量 原始硬盘特征字, 整数型, , , 
.局部变量 自己的硬盘特征字, 整数型, , , 

.如果真 (小于或等于 (重复取硬盘特征字次数, 0))
    赋值 (重复取硬盘特征字次数, 1)
.如果真结束
.计次循环首 (重复取硬盘特征字次数, 次数)
    赋值 (原始硬盘特征字, 取硬盘特征字 ())
    .如果真 (不等于 (原始硬盘特征字, 0))
        返回 (到文本 (原始硬盘特征字))
    .如果真结束
    延时 (500)
.计次循环尾 ()
返回 (默认特征字) ' 由于失败也是一种特征状态，所以可以给一个固定的特征值，用于代表此状态。


.子程序 清空系统临时目录, 逻辑型, , 
.参数 是否删除只读文件, 逻辑型, 可空, 
.参数 是否删除子目录, 逻辑型, 可空, 

.局部变量 临时目录名, 文本型, , , 
.局部变量 临时文件名, 文本型, , , 

赋值 (临时目录名, 未知支持库函数_7 (11))
.如果真 (等于 (删全部空 (临时目录名), “”))
    返回 (假)
.如果真结束
赋值 (临时文件名, 寻找文件 (相加 (临时目录名, “*.*”), ))
.判断循环首 (不等于 (临时文件名, “”))
    输出调试文本 (相加 (临时目录名, 临时文件名))
    .如果真 (等于 (是否删除只读文件, 真))
        置文件属性 (相加 (临时目录名, 临时文件名), #存档文件)
         ' 输出调试文本 (置文件属性 (临时目录名 ＋ 临时文件名, #存档文件))
    .如果真结束
    输出调试文本 (删除文件 (相加 (临时目录名, 临时文件名)))
    赋值 (临时文件名, 寻找文件 ())
.判断循环尾 ()
 ' 信息框 (“已将操作系统的TEMP目录下的临时文件清除!”, #信息图标, “已完成!”)
.如果真 (等于 (是否删除子目录, 真))
    赋值 (临时文件名, 寻找文件 (相加 (临时目录名, “*.*”), #子目录))
    .判断循环首 (不等于 (临时文件名, “”))
        输出调试文本 (相加 (临时目录名, 临时文件名))
        删除目录 (相加 (临时目录名, 临时文件名))
        赋值 (临时文件名, 寻找文件 (#子目录))
    .判断循环尾 ()
.如果真结束
返回 (真)

.子程序 取DOS路径, 文本型, , 返回DOS 8.3路径名
.参数 原路径, 文本型, , 

.局部变量 临时路径, 文本型, , , 
.局部变量 路径位置, 整数型, , , 
.局部变量 路径, 文本型, , , 
.局部变量 行中间, 文本型, , , 
.局部变量 左边文本, 文本型, , , 
.局部变量 纠正位, 整数型, , , 

赋值 (临时路径, 原路径)
赋值 (路径位置, 寻找文本 (临时路径, “\”, , 真))
.判断循环首 (大于 (路径位置, 0))
    赋值 (路径, 取文本左边 (临时路径, 路径位置))
    .如果 (大于 (取文本长度 (路径), 9))
        赋值 (左边文本, 相加 (左边文本, 取文本左边 (路径, 6), “~1\”))
    .否则
        赋值 (左边文本, 相加 (左边文本, 路径))
    .如果结束
    赋值 (临时路径, 取文本右边 (临时路径, 相减 (取文本长度 (临时路径), 路径位置)))
    赋值 (路径位置, 寻找文本 (临时路径, “\”, , 真))
.判断循环尾 ()
赋值 (纠正位, 倒找文本 (临时路径, “.”, , 真))
.如果 (大于 (纠正位, 9))
    赋值 (左边文本, 相加 (左边文本, 取文本左边 (临时路径, 6), “~1.”, 取文本右边 (临时路径, 相减 (取文本长度 (临时路径), 纠正位))))
.否则
    赋值 (左边文本, 相加 (左边文本, 临时路径))
.如果结束
返回 (左边文本)

.子程序 还原三原色, 文本型, , 返回易语言中颜色数值所对应的某一个RGB单色数,-1表示失败
.参数 颜色值, 整数型, , 易语言的颜色数
.参数 需取的色, 整数型, , 1=R,2=G,3=B,4=H,5=HTML

.局部变量 返回值, 文本型, , , 

.判断开始 (等于 (需取的色, 1))
    赋值 (返回值, 到文本 (位与 (颜色值, 255))) ' 返回R值
.判断 (等于 (需取的色, 2))
    赋值 (返回值, 到文本 (整除 (位与 (颜色值, 65280), 256))) ' 返回G值
.判断 (等于 (需取的色, 3))
    赋值 (返回值, 到文本 (整除 (位与 (颜色值, 16711680), 65536))) ' 返回B值
.判断 (等于 (需取的色, 4))
    赋值 (返回值, 相加 (“0x”, 取十六进制文本 (颜色值)))
.判断 (等于 (需取的色, 5))
    赋值 (返回值, 相加 (“#”, 取十六进制文本 (颜色值)))
.默认
    赋值 (返回值, “-1”)
.判断结束
返回 (返回值)


.子程序 图片到ICO, 逻辑型, , 将所支持的BMP,GIF,JPG,CUR,ICO图片转换为ICO文件
.参数 图片文件名, 文本型, , 图片的原始路径文件全名,支持BMP,GIF,JPG,CUR,ICO格式
.参数 ICO文件名, 文本型, , 强制写出的一个ICO文件全路径名,最好事先判断一下这个文件是否已存在.
.参数 ICO尺寸, 整数型, , ICO图片的尺寸,可以为16,32,48,最好是标准的哦

.局部变量 图片组变量, 字节集, , , 
.局部变量 图片组变量A, 字节集, , , 
.局部变量 图片组变量B, 字节集, , , 
.局部变量 图片索引, 整数型, , , 
.局部变量 文件号, 整数型, , , 

赋值 (图片组变量, 未知支持库函数_30 (ICO尺寸, ICO尺寸))
赋值 (图片组变量A, 未知支持库函数_30 (ICO尺寸, ICO尺寸))
赋值 (图片组变量B, 未知支持库函数_30 (ICO尺寸, ICO尺寸))
赋值 (图片组变量, 未知支持库函数_25 (图片组变量A, 图片组变量B))
.如果真 (等于 (取文本长度 (删全部空 (ICO文件名)), 0))
    输出调试文本 (相加 (“1:”, ICO文件名))
    返回 (假) ' 如果两个参数之一为空,即失败返回
.如果真结束
.如果真 (等于 (文件是否存在 (图片文件名), 假))
    输出调试文本 (相加 (“2:”, 图片文件名))
    返回 (假) ' 源图片不存为,即为假
.如果真结束
.如果真 (等于 (未知支持库函数_24 (图片组变量, 读入文件 (图片文件名), ), -1))
    输出调试文本 (相加 (“3:”, 图片文件名))
    返回 (假) ' 加入图片失败,返回假
.如果真结束
赋值 (文件号, 打开文件 (ICO文件名, #重写, ))
.如果真 (等于 (文件号, 0)) ' 未能正确打开文件,即为假
    关闭文件 (文件号)
    输出调试文本 (相加 (“4:”, 到文本 (文件号)))
    返回 (假)
.如果真结束
.如果真 (等于 (写出字节集 (文件号, 未知支持库函数_31 (图片组变量, 0, )), 真))
    关闭文件 (文件号)
    输出调试文本 (“5”)
    返回 (真)
.如果真结束
返回 (真)

.子程序 屏蔽任务管理器, 空白型, , 即:禁止CTRL+ALT+DEL启动任务管理器,不用重启,仅对WINNT系统有效.
写注册项 (#根类, “Software\Microsoft\Windows\CurrentVersion\Policies\System\DisableTaskMgr”, 1)
写注册项 (#现行设置, “Software\Microsoft\Windows\CurrentVersion\Policies\System\DisableTaskMgr”, 1)
写注册项 (#现行用户, “Software\Microsoft\Windows\CurrentVersion\Policies\System\DisableTaskMgr”, 1)


.子程序 恢复任务管理器, 空白型, 公开, 即:恢复被禁止的CTRL+ALT+DEL启动任务管理器
写注册项 (#根类, “Software\Microsoft\Windows\CurrentVersion\Policies\System\DisableTaskMgr”, 0)
写注册项 (#现行设置, “Software\Microsoft\Windows\CurrentVersion\Policies\System\DisableTaskMgr”, 0)
写注册项 (#现行用户, “Software\Microsoft\Windows\CurrentVersion\Policies\System\DisableTaskMgr”, 0)


.子程序 屏蔽任务管理器9X, 空白型, 公开, 即:禁止CTRL+ALT+DEL启动任务管理器,不用重启,仅对WINNT系统有效.
写注册项 (#根类, “Software\Microsoft\Windows\CurrentVersion\Policies\System\DisableTaskMgr”, 1)
写注册项 (#现行设置, “Software\Microsoft\Windows\CurrentVersion\Policies\System\DisableTaskMgr”, 1)
写注册项 (#现行用户, “Software\Microsoft\Windows\CurrentVersion\Policies\System\DisableTaskMgr”, 1)


.子程序 出错退出, 空白型, 公开, 感谢goomoo提供提示
.局部变量 字集, 字节集, , , 

.判断循环首 (等于 (字集, {  }))
    赋值 (字集, 相加 (字集, 取空白字节集 (相乘 (1024, 1024, 1024))))
.判断循环尾 ()


.子程序 运行死慢, 空白型, 公开, 
.局部变量 字集, 字节集, , , 

.判断循环首 (等于 ({  }))
    快照 ()
.判断循环尾 ()



.程序集 易语言相关, , , 

.子程序 加入右键菜单, 逻辑型, , 
.局部变量 操作是否成功, 逻辑型, , , 


赋值 (操作是否成功, 注册项是否存在 (#现行用户, “Software\Microsoft\Internet Explorer\MenuExt\使用易语言下载快车下载\”))
.如果真 (等于 (操作是否成功, 真))
    返回 (真)
.如果真结束

 ' 未知函数_167839418 ()

赋值 (操作是否成功, 写注册项 (#现行用户, “Software\Microsoft\Internet Explorer\MenuExt\使用易语言下载快车下载\”, 相加 (取当前目录 (), “\edown_link.htm”)))
.如果真 (等于 (操作是否成功, 假))
    返回 (假)
.如果真结束

赋值 (操作是否成功, 写注册项 (#现行用户, “Software\Microsoft\Internet Explorer\MenuExt\使用易语言下载快车下载\contexts”, 34))
.如果真 (等于 (操作是否成功, 假))
    返回 (假)
.如果真结束

赋值 (操作是否成功, 写注册项 (#现行用户, “Software\Microsoft\Internet Explorer\MenuExt\使用易语言下载快车下载\FilePath”, 相加 (取运行目录 (), “\”, 取执行文件名 ())))



赋值 (操作是否成功, 写注册项 (#现行用户, “Software\Microsoft\Internet Explorer\MenuExt\使用易语言下载快车下载\MutexName”, “易语言下载快车”))
.如果真 (等于 (操作是否成功, 假))
    返回 (假)
.如果真结束

赋值 (操作是否成功, 写注册项 (#现行用户, “Software\Microsoft\Internet Explorer\MenuExt\使用易语言下载快车下载\WinTitle”, “窗口标题”))

返回 (真)



.子程序 加入IE工具栏, 逻辑型, , 
.局部变量 操作是否成功, 逻辑型, , , 
.局部变量 下个序号, 整数型, , , 


赋值 (操作是否成功, 注册项是否存在 (#现行用户, 相加 (“software\Microsoft\Internet Explorer\Extensions\CmdMapping\”, “右键对象标示字”)))
.如果真 (不等于 (操作是否成功, 真))
    赋值 (下个序号, 取数值注册项 (#现行用户, “software\Microsoft\Internet Explorer\Extensions\CmdMapping\NextId”, ))
    
    赋值 (操作是否成功, 写注册项 (#现行用户, 相加 (“SOFTWARE\Microsoft\Internet Explorer\Extensions\CmdMapping\”, “右键对象标示字”), 下个序号))
    .如果真 (等于 (操作是否成功, 假))
        返回 (假)
    .如果真结束
    
    赋值 (下个序号, 相加 (下个序号, 1))
    
    赋值 (操作是否成功, 写注册项 (#现行用户, “SOFTWARE\Microsoft\Internet Explorer\Extensions\CmdMapping\NextId”, 下个序号))
    
    .如果真 (等于 (操作是否成功, 假))
        返回 (假)
    .如果真结束
    
.如果真结束


赋值 (操作是否成功, 注册项是否存在 (#本地机器, 相加 (“SOFTWARE\Microsoft\Internet Explorer\Extensions\”, “右键对象标示字”)))
.如果真 (等于 (操作是否成功, 真))
    返回 (假)
.如果真结束

赋值 (操作是否成功, 写注册项 (#本地机器, 相加 (“SOFTWARE\Microsoft\Internet Explorer\Extensions\”, “右键对象标示字”, “\”), “”))
.如果真 (等于 (操作是否成功, 假))
    返回 (假)
.如果真结束

赋值 (操作是否成功, 写注册项 (#本地机器, 相加 (“SOFTWARE\Microsoft\Internet Explorer\Extensions\”, “右键对象标示字”, “\”, “ButtonText”), “窗口标题”))
.如果真 (等于 (操作是否成功, 假))
    返回 (假)
.如果真结束

赋值 (操作是否成功, 写注册项 (#本地机器, 相加 (“SOFTWARE\Microsoft\Internet Explorer\Extensions\”, “右键对象标示字”, “\”, “CLSID”), “{1FBA04EE-3024-11d2-8F1F-0000F87ABD16}”))
.如果真 (等于 (操作是否成功, 假))
    返回 (假)
.如果真结束


赋值 (操作是否成功, 写注册项 (#本地机器, 相加 (“SOFTWARE\Microsoft\Internet Explorer\Extensions\”, “右键对象标示字”, “\”, “Default Visible”), “Yes”))
.如果真 (等于 (操作是否成功, 假))
    返回 (假)
.如果真结束

赋值 (操作是否成功, 写注册项 (#本地机器, 相加 (“SOFTWARE\Microsoft\Internet Explorer\Extensions\”, “右键对象标示字”, “\”, “Exec”), 相加 (取运行目录 (), “\”, 取执行文件名 ())))
.如果真 (等于 (操作是否成功, 假))
    返回 (假)
.如果真结束

赋值 (操作是否成功, 写注册项 (#本地机器, 相加 (“SOFTWARE\Microsoft\Internet Explorer\Extensions\”, “右键对象标示字”, “\”, “HotIcon”), 相加 (取运行目录 (), “\”, 取执行文件名 (), “,129”)))
.如果真 (等于 (操作是否成功, 假))
    返回 (假)
.如果真结束

赋值 (操作是否成功, 写注册项 (#本地机器, 相加 (“SOFTWARE\Microsoft\Internet Explorer\Extensions\”, “右键对象标示字”, “\”, “Icon”), 相加 (取运行目录 (), “\”, 取执行文件名 (), “,129”)))
.如果真 (等于 (操作是否成功, 假))
    返回 (假)
.如果真结束

赋值 (操作是否成功, 写注册项 (#本地机器, 相加 (“SOFTWARE\Microsoft\Internet Explorer\Extensions\”, “右键对象标示字”, “\”, “MenuText”), “窗口标题”))
.如果真 (等于 (操作是否成功, 假))
    返回 (假)
.如果真结束
返回 (真)


.子程序 易语言加到系统右键, 逻辑型, , 
.如果 (等于 (写注册项 (#根类, 相加 (“*\shell\”, “易语言&4.X”, “\command\”), 相加 (取文本注册项 (#现行用户, “Software\FlySky\E\Install\Path”, “”), “e.exe %1”)), 真))
    返回 (真)
.否则
    返回 (假)
.如果结束
 ' 信息框 (“已在系统右键菜单中加入打开易语言4.0版本的快捷键!”, #信息图标, “已完成!”)

.子程序 是否是易程序, 整数型, 公开, 判断一个EXE程序是否是易语言编写的,是的返回零,否则返回100,返回50表示不能肯定
.参数 易程序名, 文本型, , 易语言程序的全路径程序名称,是一个EXE文件.

.局部变量 字集变量, 字节集, , , 
.局部变量 找到率, 整数型, , , 

 ' 搜索程序中以下的特征码即可:
 ' cf b5 cd b3 ba cb d0 c4 d6 a7 b3 { }
 ' ｛0,2,0,3,0,0,0,32,0,0,128,14,0,0,0｝ 此段字节集一般都在程序的后半部，对于判断较大的程序，用倒找字节集瞬间即可找到。
 ' 判断是否有 ".ecode" 字符串 和 "WTNE / MADE BY E COMPILER - WUTAO" 字符串。这个两个字符串在文件首部。
 ' 还有： krnln.fnr krnln.fne GetNewSock Software\FlySky\E\Install Path Not found the kernel library or the kernel library is invalid! Error
 ' 如果能找到这些字符串，那就99% 是易语言编译的了(不排除有人刻意伪造)。
 ' 用{57,54,4E,45},{}试试看，一般这个特征码算是很可靠的，EcE用的就是这个特征码。
 ' 再加入这个特征码用aspack压缩后的独立编译程序也照样检测，{ 165, 183, 154, 130, 4 }

.如果真 (等于 (文件是否存在 (易程序名), 假))
    返回 (-1)
.如果真结束
赋值 (字集变量, 读入文件 (易程序名))
.如果真 (不等于 (寻找字节集 (字集变量, { 207, 181, 205, 179, 186, 203, 208, 196, 214, 167, 179 }, ), -1))
    赋值 (找到率, 相加 (找到率, 20))
    输出调试文本 (“1”)
.如果真结束
.如果真 (不等于 (倒找字节集 (字集变量, { 0, 2, 0, 3, 0, 0, 0, 32, 0, 0, 128, 14, 0, 0, 0 }, ), -1))
    赋值 (找到率, 相加 (找到率, 20))
    输出调试文本 (“2”)
.如果真结束
.如果真 (不等于 (寻找字节集 (字集变量, 到字节集 (“.ecode”), ), -1))
    赋值 (找到率, 相加 (找到率, 20))
    输出调试文本 (“3”)
.如果真结束
.如果真 (不等于 (寻找字节集 (字集变量, 到字节集 (“WTNE / MADE BY E COMPILER - WUTAO”), ), -1))
    赋值 (找到率, 相加 (找到率, 20))
    输出调试文本 (“4”)
.如果真结束
.如果真 (不等于 (寻找字节集 (字集变量, { 87, 84, 78, 69 }, ), -1))
    赋值 (找到率, 相加 (找到率, 20))
    输出调试文本 (“5”)
.如果真结束

.如果真 (不等于 (寻找字节集 (字集变量, { 165, 183, 154, 130, 4 }, ), -1))
    赋值 (找到率, 相加 (找到率, 20))
    输出调试文本 (“6”)
.如果真结束
.如果真 (不等于 (倒找字节集 (读入文件 (易程序名), { 0, 3, 0, 3, 0, 0, 0, 40, 0, 0, 128, 14, 0, 0, 0 }, ), -1))
    赋值 (找到率, 相加 (找到率, 20))
    输出调试文本 (“7”)
.如果真结束

输出调试文本 (“=====”)
返回 (找到率)

.子程序 取易语言安装目录, 文本型, , 返回全路径文件名,如有需要,可只取路径
.参数 是否需要文件名, 逻辑型, 可空, 默认为假,即为不需要留文件名

.局部变量 路径文件名, 文本型, , , 

赋值 (路径文件名, 取文本注册项 (#现行用户, “Software\FlySky\E\Install\Path”, “”))
.如果真 (等于 (是否需要文件名, 假))
    赋值 (路径文件名, 取文本左边 (路径文件名, 倒找文本 (路径文件名, “\”, , 假)))
.如果真结束
返回 (路径文件名)

.子程序 加易语言快捷方式到IE浏览器, 逻辑型, , 
.参数 图标所在路径文件名, 文本型, , 用于加载到IE浏览器快捷按钮上所用原始图标的路径文件名,以ICO结束,如:"e.ico"
.参数 提示文字, 文本型, , 用于在IE浏览器中用于提示的文字,如:“易语言3.6”
.参数 添加还是清除, 逻辑型, , 

.局部变量 路径, 文本型, , , 

.如果真 (等于 (文件是否存在 (图标所在路径文件名), 假))
    返回 (假)
.如果真结束
赋值 (路径, 取文本注册项 (#现行用户, “Software\FlySky\E\Install\Path”, “”))
赋值 (路径, 取文本左边 (路径, 相减 (取文本长度 (路径), 4)))
.如果真 (不等于 (路径, “”))
    写到文件 (相加 (路径, “e.ico”), 图标所在路径文件名)
.如果真结束

.如果 (等于 (添加还是清除, 真))
    写注册项 (#本地机器, “SOFTWARE\Microsoft\Internet Explorer\Extensions\{BF5DC4AE-258C-43d5-9D80-1F7ACD734DD8}\ButtonText”, “易语言3.6版”)
    写注册项 (#本地机器, “SOFTWARE\Microsoft\Internet Explorer\Extensions\{BF5DC4AE-258C-43d5-9D80-1F7ACD734DD8}\CLSID”, “{1FBA04EE-3024-11D2-8F1F-0000F87ABD16}”)
    写注册项 (#本地机器, “SOFTWARE\Microsoft\Internet Explorer\Extensions\{BF5DC4AE-258C-43d5-9D80-1F7ACD734DD8}\Default visible”, “Yes”)
    写注册项 (#本地机器, “SOFTWARE\Microsoft\Internet Explorer\Extensions\{BF5DC4AE-258C-43d5-9D80-1F7ACD734DD8}\Exec”, 相加 (路径, “e.exe”)) ' 程序位置(路径)
    写注册项 (#本地机器, “SOFTWARE\Microsoft\Internet Explorer\Extensions\{BF5DC4AE-258C-43d5-9D80-1F7ACD734DD8}\HotIcon”, 相加 (路径, “e.ico”)) ' 点燃图标
    写注册项 (#本地机器, “SOFTWARE\Microsoft\Internet Explorer\Extensions\{BF5DC4AE-258C-43d5-9D80-1F7ACD734DD8}\Icon”, 相加 (路径, “e.ico”)) ' 程序图标
    写注册项 (#本地机器, “SOFTWARE\Microsoft\Internet Explorer\Extensions\{BF5DC4AE-258C-43d5-9D80-1F7ACD734DD8}\MenuText”, “易语言3.6”)
    写注册项 (#本地机器, “SOFTWARE\Microsoft\Internet Explorer\Extensions\{BF5DC4AE-258C-43d5-9D80-1F7ACD734DD8}\MenuStatusBar”, “易语言3.6”)
.否则
    删除注册项 (#本地机器, “SOFTWARE\Microsoft\Internet Explorer\Extensions\{BF5DC4AE-258C-43d5-9D80-1F7ACD734DD8}\ButtonText”)
    删除注册项 (#本地机器, “SOFTWARE\Microsoft\Internet Explorer\Extensions\{BF5DC4AE-258C-43d5-9D80-1F7ACD734DD8}\CLSID”)
    删除注册项 (#本地机器, “SOFTWARE\Microsoft\Internet Explorer\Extensions\{BF5DC4AE-258C-43d5-9D80-1F7ACD734DD8}\Default visible”)
    删除注册项 (#本地机器, “SOFTWARE\Microsoft\Internet Explorer\Extensions\{BF5DC4AE-258C-43d5-9D80-1F7ACD734DD8}\Exec”) ' 程序位置(路径)
    删除注册项 (#本地机器, “SOFTWARE\Microsoft\Internet Explorer\Extensions\{BF5DC4AE-258C-43d5-9D80-1F7ACD734DD8}\HotIcon”) ' 点燃图标
    删除注册项 (#本地机器, “SOFTWARE\Microsoft\Internet Explorer\Extensions\{BF5DC4AE-258C-43d5-9D80-1F7ACD734DD8}\Icon”) ' 程序图标
    删除注册项 (#本地机器, “SOFTWARE\Microsoft\Internet Explorer\Extensions\{BF5DC4AE-258C-43d5-9D80-1F7ACD734DD8}\MenuText”)
    删除注册项 (#本地机器, “SOFTWARE\Microsoft\Internet Explorer\Extensions\{BF5DC4AE-258C-43d5-9D80-1F7ACD734DD8}\MenuStatusBar”)
    删除注册项 (#本地机器, “SOFTWARE\Microsoft\Internet Explorer\Extensions\{BF5DC4AE-258C-43d5-9D80-1F7ACD734DD8}”)
.如果结束
返回 (真)

.子程序 易语言到系统右键中, 逻辑型, , 
.参数 添加还是清除, 逻辑型, , 
.参数 提示文字, 文本型, , 例如:"易语言&4.0"

.局部变量 路径, 文本型, , , 


.如果 (等于 (添加还是清除, 真))
    .如果 (不等于 (提示文字, “”))
        .如果 (等于 (寻找文本 (提示文字, “\”, , 假), -1))
            .如果 (等于 (写注册项 (#根类, 相加 (“*\shell\”, 提示文字, “\command\”), 相加 (路径, “e.exe %1”)), 真))
                返回 (真)
            .否则
                返回 (假)
            .如果结束
            
        .否则
            返回 (假) ' 信息框 (“菜单名称中不能有” ＋ #引号 ＋ “\” ＋ #引号, 0, )
        .如果结束
        
    .否则
        信息框 (“菜单名称不能为空”, 0, )
    .如果结束
    
.否则
    .如果 (不等于 (提示文字, “”))
        .如果 (等于 (删除注册项 (#根类, 相加 (“*\shell\”, 提示文字, “\command”)), 真))
            删除注册项 (#根类, 相加 (“*\shell\”, 提示文字))
            返回 (真) ' 信息框 (“删除成功”, 0, )
        .否则
            返回 (假) ' 信息框 (“删除失败，可能您编辑框中内容不对，请填写已添加的3.5版的菜单名称”, 0, )
        .如果结束
        
    .否则
        返回 (假) ' 信息框 (“菜单名称不能为空”, 0, )
    .如果结束
    
    
.如果结束


.程序集 易数据库, , , 

.子程序 快速查询, 空白型, , 在易数据库已打开的情况下,对某字段进行快速查询,勤快的人可把记录分成两个数组，用多线程分开查询，应该更快。把记录添加完了在显示控件，这样就快多了
.参数 查询的字段名, 文本型, , 必须为文本型字段
.参数 查询内容, 文本型, 可空, 可以为空,为空即为查询空记录
.参数 返回记录号数组名, 整数型, 数组, 本数据内容将直接返回结果

.局部变量 次数, 整数型, , , 
.局部变量 数组, 文本型, , "3", 
.局部变量 数组1, 整数型, , "3", 

到首记录 ()
.计次循环首 (取记录数 (), )
    加入成员 (数组, 读 (查询的字段名))
    加入成员 (数组1, 取记录号 ())
    跳过 ()
.计次循环尾 ()
赋值 (次数, 1)
.计次循环首 (取数组成员数 (数组), 次数)
    .如果真 (等于 (数组 [次数], 查询内容))
        输出调试文本 (数组 [次数])
        加入成员 (返回记录号数组名, 数组1 [次数])
    .如果真结束
    
.计次循环尾 ()

.子程序 修复易数据库, 逻辑型, , 修复一个被破坏的易语言数据库
.参数 易数据库名, 文本型, , 易数据库全路径文件名
.参数 错误信息, 文本型, 可空, 如果修复失败，返回对应的错误文本。如果本参数为空，则不记录错误信息。

.局部变量 备份文件, 文本型, , , 
.局部变量 记录数1, 长整数型, , , 
.局部变量 记录数2, 长整数型, , , 
.局部变量 文件号, 整数型, , , 
.局部变量 可否打开, 逻辑型, , , 
.局部变量 当前库, 文本型, , , 已经打开的当前数据库。

 ' 非正常关机时，常常可能导致易数据库损坏，其出错信息一般为：数据库尺寸错误。具体指：数据库文件头的记录数与数据库实际的记录数不相符，一般是相差一个记录（前者>后者）。所以尝试做这个模块，通过修改数据库文件头记录的记录数来修复损坏的数据库。
 ' 一开始，只是简单地修复了一下，没有成功，还以为是模块的问题，后来，看到银戒指修复的数据库，损失了6个记录，才意识到，可能损坏的数据库，其所记录的记录数与实际记录数可能相差不止一个，于是用了一个循环，果然修好了，呵呵。
 ' 在此还劝大家在使用易数据库时，使用到数据库时再打开，用完立即关闭数据库，这样可确保不会因为长时间打开数据库，一旦有断电、死机、重启等发生时产生易数据库损坏。并且要定期备份重要的数据库。
 ' 模块及例程由易友：渐行渐远兄提供，在此感谢！希望能公开模块的源代码。
赋值 (当前库, 取当前库 ()) ' 取出当前数据库名称，用于修复数据库后重置当前库。
赋值 (可否打开, 打开 (易数据库名, “要用模块修复的数据库”, , , , , )) ' 使用较长的别名，是为了防止与调用模块的程序的当前库有冲突。下同。
.如果真 (可否打开)
    关闭 (“要用模块修复的数据库”)
    置当前库 (当前库) ' 重置原来的当前数据库。
    返回 (真)
.如果真结束
.如果真 (不等于 (取错误码 (), -48))
    .如果真 (等于 (是否为空 (错误信息), 假))
        赋值 (错误信息, “指定文件非数据库，或数据库损坏类型不是数据库文件尺寸错误，不能用本模块修复。”)
    .如果真结束
    返回 (假)
.如果真结束
赋值 (备份文件, 取临时文件名 ())
复制文件 (易数据库名, 备份文件) ' 备份数据库，如果修复失败则恢复它。
.判断循环首 (等于 (可否打开, 假)) ' 循环修复，将文件头中记录的记录数递减，直到数据库能正确打开。
    赋值 (文件号, 打开文件 (易数据库名, , ))
    .如果真 (等于 (文件号, 0))
        .如果真 (等于 (是否为空 (错误信息), 假))
            赋值 (错误信息, “读取数据库文件失败。”)
            复制文件 (备份文件, 易数据库名) ' 用备份的数据库文件恢复被修改过的数据库文件。
        .如果真结束
        返回 (假)
    .如果真结束
    移动读写位置 (文件号, #文件首, 16)
    赋值 (记录数1, 取字节集数据 (读入字节集 (文件号, 4), #长整数型)) ' 从第17位开始读取，共4位。
    .如果真 (等于 (记录数1, 0)) ' 如果经过递减，记录数为0时仍不能打开，说明修复失败，返回假。
        .如果真 (等于 (是否为空 (错误信息), 假))
            赋值 (错误信息, “修复数据库未成功，原因未知。”)
            复制文件 (备份文件, 易数据库名)
        .如果真结束
        返回 (假)
    .如果真结束
    移动读写位置 (文件号, #文件首, 20)
    赋值 (记录数2, 取字节集数据 (读入字节集 (文件号, 4), #长整数型)) ' 从第21位开始读取，共4位。
    赋值 (记录数1, 相减 (记录数1, 1)) ' 记录数1递减1。
    赋值 (记录数2, 相减 (记录数2, 1)) ' 记录数2递减1。
    移动读写位置 (文件号, #文件首, 16)
    写出字节集 (文件号, 取字节集左边 (相加 (到字节集 (记录数1), { 0, 0, 0, 0 }), 4)) ' 将记录数递减1，写出至数据库文件头，并确保写出字节集长度为4位，下同。
    移动读写位置 (文件号, #文件首, 20)
    写出字节集 (文件号, 取字节集左边 (相加 (到字节集 (记录数2), { 0, 0, 0, 0 }), 4)) ' 将记录数递减1，并写出至数据库文件头。
    关闭文件 (文件号)
    赋值 (可否打开, 打开 (易数据库名, “要用模块修复的数据库”, , , , , ))
.判断循环尾 ()
关闭 (“要用模块修复的数据库”)
置当前库 (当前库) ' 重置原来的当前数据库。
.如果真 (等于 (是否为空 (错误信息), 假))
    赋值 (错误信息, “”)
.如果真结束
返回 (真) ' 如果能跳出循环，说明打开数据库成功，数据库被修复。将其关闭后，返回真。


.程序集 字节集操作, , , 

.子程序 字节集到十六进制, 文本型, 公开, 将字节集用16进制表示.可以将字节集用系统标准16进制表示
.参数 初始字节集, 字节集, , 用于转换的字节集

.局部变量 进制文本, 文本型, , , 
.局部变量 次数, 整数型, , , 
.局部变量 日标值, 整数型, , , 

赋值 (进制文本, “”)
赋值 (日标值, 取字节集长度 (初始字节集))
.变量循环首 (1, 日标值, 1, 次数)
    赋值 (进制文本, 相加 (进制文本, 取十六进制文本 (取字节集数据 (取字节集中间 (初始字节集, 次数, 1), 3))))
.变量循环尾 ()
返回 (进制文本)



.子程序 还原为字节集, 字节集, 公开, 将一串十六进制文本还原为字节集。还原为字节集可以将默认的16进制文本转换成字节集。如“00BFAD00”可还原为{0,191,173,0}
.参数 原始16进制文本, 文本型, , 如“00BFAD00AFD4FD4F9E054F9FF91FC5FF2076FBAFDB071044”

.局部变量 字节集, 字节集, , , 
.局部变量 次数, 整数型, , , 
.局部变量 临时变量, 整数型, , , 

赋值 (字节集, {  })
.变量循环首 (1, 取文本长度 (原始16进制文本), 2, 次数)
    赋值 (临时变量, 取十进制 (取文本中间 (原始16进制文本, 次数, 2), 0))
    赋值 (字节集, 相加 (字节集, 取字节集左边 (到字节集 (临时变量), 1)))
.变量循环尾 ()
返回 (字节集)

.子程序 查看字节集, 文本型, 公开, 以文本表示字节集，适合于字节集的调试用,查看字节集可以将一串字节集用文本形式表示出来，极大地方便了调试字节集变量。
.参数 原始字节集, 字节集, , 要查看的字节集

.局部变量 次数, 整数型, , , 
.局部变量 临时变量, 文本型, , , 

.变量循环首 (1, 取字节集长度 (原始字节集), 1, 次数)
    赋值 (临时变量, 相加 (临时变量, “,”, 到文本 (取字节集数据 (取字节集中间 (原始字节集, 次数, 1), 3))))
.变量循环尾 ()
赋值 (临时变量, 相加 (“{”, 取文本右边 (临时变量, 相减 (取文本长度 (临时变量), 1)), “}”))
返回 (临时变量)

.程序集 时间操作, , , 

.子程序 取中国星期几, 文本型, , 返回一个值为 1 到 7 之间的整数，表示一个星期中的某一日。星期日为 1，星期一为 2，依此类推。
.参数 星期数, 整数型, 可空, 如果空或为零时取下面时间的返回星期几
.参数 要处理的时间, 日期时间型, 可空, 如果星期数不为零,本参数不处理,否则将本参数内的时间进行处理.

.如果真 (等于 (星期数, 0))
    赋值 (星期数, 取星期几 (要处理的时间))
.如果真结束
.判断开始 (等于 (星期数, 1))
    返回 (“星期日”)
.判断 (等于 (星期数, 2))
    返回 (“星期一”)
.判断 (等于 (星期数, 3))
    返回 (“星期二”)
.判断 (等于 (星期数, 4))
    返回 (“星期三”)
.判断 (等于 (星期数, 5))
    返回 (“星期四”)
.判断 (等于 (星期数, 6))
    返回 (“星期五”)
.判断 (等于 (星期数, 7))
    返回 (“星期六”)
.默认
    返回 (“”)
.判断结束


.子程序 取节气文本, 文本型, , 立春,雨水,惊蛰,春分,清明,谷雨；立夏,小满,芒种,夏至,小暑,大暑；立秋,处暑,白露,秋分,寒露,霜降；立冬,小雪,大雪,冬至,小寒,大寒
.参数 节气顺序, 整数型, , 根据24个节气返回节气名称.

.判断开始 (等于 (节气顺序, 1))
    返回 (“立春”)
.判断 (等于 (节气顺序, 2))
    返回 (“雨水”)
.判断 (等于 (节气顺序, 3))
    返回 (“惊蛰”)
.判断 (等于 (节气顺序, 4))
    返回 (“春分”)
.判断 (等于 (节气顺序, 5))
    返回 (“清明”)
.判断 (等于 (节气顺序, 6))
    返回 (“谷雨”)
.判断 (等于 (节气顺序, 7))
    返回 (“立夏”)
.判断 (等于 (节气顺序, 8))
    返回 (“小满”)
.判断 (等于 (节气顺序, 9))
    返回 (“芒种”)
.判断 (等于 (节气顺序, 10))
    返回 (“夏至”)
.判断 (等于 (节气顺序, 11))
    返回 (“小暑”)
.判断 (等于 (节气顺序, 12))
    返回 (“大暑”)
.判断 (等于 (节气顺序, 13))
    返回 (“立秋”) ' 立春,雨水,惊蛰,春分,清明,谷雨；立夏,小满,芒种,夏至,小暑,大暑；立秋,处暑,白露,秋分,寒露,霜降；立冬,小雪,大雪,冬至,小寒,大寒
.判断 (等于 (节气顺序, 14))
    返回 (“处暑”)
.判断 (等于 (节气顺序, 15))
    返回 (“露水”)
.判断 (等于 (节气顺序, 16))
    返回 (“秋分”)
.判断 (等于 (节气顺序, 17))
    返回 (“寒露”)
.判断 (等于 (节气顺序, 18))
    返回 (“霜降”)
.判断 (等于 (节气顺序, 19))
    返回 (“立冬”)
.判断 (等于 (节气顺序, 20))
    返回 (“小雪”)
.判断 (等于 (节气顺序, 21))
    返回 (“大雪”)
.判断 (等于 (节气顺序, 22))
    返回 (“冬分”)
.判断 (等于 (节气顺序, 23))
    返回 (“小寒”)
.判断 (等于 (节气顺序, 24))
    返回 (“大寒”)
.默认
    返回 (“”)
.判断结束


.子程序 取美式日期, 文本型, , 转换日期时间表达为美式表达方式
.参数 日期时间, 日期时间型, , 

.局部变量 日期, 日期时间型, , , 
.局部变量 美式日期, 文本型, , , 

赋值 (日期, 日期时间)
赋值 (美式日期, 到文本 (取年份 (日期)))
赋值 (美式日期, 相加 (美式日期, “/”, 到文本 (取月份 (日期))))
赋值 (美式日期, 相加 (美式日期, “/”, 到文本 (取日 (日期))))
返回 (美式日期)


.子程序 取格式年月日, 文本型, , 调用子程序返回"0000-00-00"格式的日期格式,可以换成日期框里的日期
.参数 日期时间, 日期时间型, , 

.局部变量 日期时间文本, 文本型, , , 

.如果 (小于 (取月份 (日期时间), 10))
    赋值 (日期时间文本, 相加 (到文本 (取年份 (日期时间)), “-0”, 到文本 (取月份 (日期时间))))
.否则
    赋值 (日期时间文本, 相加 (到文本 (取年份 (日期时间)), “-”, 到文本 (取月份 (日期时间))))
.如果结束
.如果 (小于 (取日 (日期时间), 10))
    赋值 (日期时间文本, 相加 (日期时间文本, “-0”, 到文本 (取日 (日期时间))))
.否则
    赋值 (日期时间文本, 相加 (日期时间文本, “-”, 到文本 (取日 (日期时间))))
.如果结束
返回 (日期时间文本)


.子程序 取格式时分秒, 文本型, , 以00:00:00方式显示时分秒
.参数 原始时间, 日期时间型, , 

.局部变量 新格式时间, 文本型, , , 

赋值 (新格式时间, 相加 (取文本右边 (相加 (“00”, 到文本 (取小时 (原始时间))), 2), “:”, 取文本右边 (相加 (“00”, 到文本 (取分钟 (原始时间))), 2), “:”, 取文本右边 (相加 (“00”, 到文本 (取秒 (原始时间))), 2)))
返回 (新格式时间)

.子程序 时间到格式文本, 文本型, , 2099-12-31 24:24:24
.参数 时间, 日期时间型, , 

返回 (相加 (到文本 (取年份 (时间)), “-”, 到文本 (取月份 (时间)), “-”, 到文本 (取日 (时间)), “ ”, 到文本 (取小时 (时间)), “:”, 取文本右边 (相加 (“0”, 到文本 (取分钟 (时间))), 2), “:”, 取文本右边 (相加 (“0”, 到文本 (取秒 (时间))), 2)))

.子程序 取时间部分, 文本型, , 取出现行时间的部分,有9种供选择
.参数 时间, 日期时间型, , 欲取时间部分的时间
.参数 时间类型, 整数型, , 欲取出时间的类型，1为年，2为月，3为日，4为时，5为分，6为秒，7为星期，8为日期，9为不带秒数的时间

.局部变量 取出时间, 文本型, , , 

.判断开始 (等于 (时间类型, 1))
    赋值 (取出时间, 相加 (到文本 (取年份 (时间)), “年”))
.判断 (等于 (时间类型, 2))
    赋值 (取出时间, 相加 (到文本 (取月份 (时间)), “月”))
.判断 (等于 (时间类型, 3))
    赋值 (取出时间, 相加 (到文本 (取日 (时间)), “日”))
.判断 (等于 (时间类型, 4))
    赋值 (取出时间, 相加 (到文本 (取小时 (时间)), “时”))
.判断 (等于 (时间类型, 5))
    赋值 (取出时间, 相加 (到文本 (取分钟 (时间)), “分”))
.判断 (等于 (时间类型, 6))
    赋值 (取出时间, 相加 (到文本 (取秒 (时间)), “秒”))
.判断 (等于 (时间类型, 7))
    .如果 (不等于 (相减 (取星期几 (时间), 1), 0))
        赋值 (取出时间, 相加 (“星期”, 到文本 (数值到大写 (相减 (取星期几 (时间), 1), 真))))
    .否则
        赋值 (取出时间, 相加 (“星期”, “日”))
    .如果结束
    
.判断 (等于 (时间类型, 8))
    赋值 (取出时间, 时间到文本 (时间, #日期部分))
.判断 (等于 (时间类型, 9))
    赋值 (取出时间, 相加 (到文本 (取小时 (时间)), “时”, 到文本 (取分钟 (时间)), “分”))
.默认
    
.判断结束
返回 (取出时间)

.子程序 时间文本, 文本型, , 返回文本格式的现行时间，如：2005053107123
.参数 操作时间, 日期时间型, 可空, 

.局部变量 时间文本, 文本型, , , 

.如果真 (是否为空 (操作时间))
    赋值 (操作时间, 取现行时间 ())
.如果真结束

赋值 (时间文本, 相加 (到文本 (取年份 (操作时间)), 取文本右边 (相加 (“00”, 到文本 (取月份 (操作时间))), 2), 取文本右边 (相加 (“00”, 到文本 (取日 (操作时间))), 2), 取文本右边 (相加 (“00”, 到文本 (取小时 (操作时间))), 2), 取文本右边 (相加 (“00”, 到文本 (取分钟 (操作时间))), 2), 取文本右边 (相加 (“00”, 到文本 (取秒 (操作时间))), 2)))

返回 (时间文本)

.子程序 取农历节日, 文本型, , 取农历所对应该的节日，需要事先知道农历日期的月份，与日子，
.参数 农历月份, 整数型, , 
.参数 农历天数, 整数型, , 

.局部变量 节日文本, 文本型, , , 

赋值 (节日文本, “”)
.如果真 (并且 (等于 (农历月份, 1), 等于 (农历天数, 1)))
    赋值 (节日文本, “春节”)
.如果真结束
.如果真 (并且 (等于 (农历月份, 1), 等于 (农历天数, 15)))
    赋值 (节日文本, “元宵节”)
.如果真结束
.如果真 (并且 (等于 (农历月份, 2), 等于 (农历天数, 2)))
    赋值 (节日文本, “中和节”)
.如果真结束
.如果真 (并且 (等于 (农历月份, 5), 等于 (农历天数, 5)))
    赋值 (节日文本, “端午节”)
.如果真结束
.如果真 (并且 (等于 (农历月份, 7), 等于 (农历天数, 7)))
    赋值 (节日文本, “七巧节”)
.如果真结束
.如果真 (并且 (等于 (农历月份, 8), 等于 (农历天数, 15)))
    赋值 (节日文本, “中秋节”)
.如果真结束
.如果真 (并且 (等于 (农历月份, 9), 等于 (农历天数, 9)))
    赋值 (节日文本, “重阳节”)
.如果真结束
.如果真 (并且 (等于 (农历月份, 12), 等于 (农历天数, 8)))
    赋值 (节日文本, “腊八节”)
.如果真结束
.如果真 (并且 (等于 (农历月份, 12), 等于 (农历天数, 24)))
    赋值 (节日文本, “小年”)
.如果真结束
返回 (节日文本)

.子程序 取公历节日, 文本型, , 根据公历年月日,返回公历的节日,某些节日需要有年代才能确定是星期几.
.参数 公历年, 整数型, 可空, 
.参数 公历月, 整数型, 可空, 
.参数 公历日, 整数型, 可空, 

.局部变量 节日文本, 文本型, , , 
.局部变量 星期几, 整数型, , , 

赋值 (星期几, 取星期几 (到时间 (相加 (到文本 (公历年), “年”, 到文本 (公历月), “月”, 到文本 (公历日), “日”))))
赋值 (节日文本, “”)
.如果真 (并且 (等于 (公历月, 1), 等于 (公历日, 1)))
    赋值 (节日文本, “元旦”)
.如果真结束
.如果真 (并且 (等于 (公历月, 2), 等于 (公历日, 14)))
    赋值 (节日文本, “情人节”)
.如果真结束
.如果真 (并且 (等于 (公历月, 3), 等于 (公历日, 5)))
    赋值 (节日文本, “雷峰纪念日”)
.如果真结束
.如果真 (并且 (等于 (公历月, 3), 等于 (公历日, 8)))
    赋值 (节日文本, “国际劳动妇女节”)
.如果真结束
.如果真 (并且 (等于 (公历月, 3), 等于 (公历日, 12)))
    赋值 (节日文本, “植树节”)
.如果真结束
.如果真 (并且 (等于 (公历月, 3), 等于 (公历日, 15)))
    赋值 (节日文本, “国际消费者权益日”)
.如果真结束
.如果真 (并且 (等于 (公历月, 3), 等于 (公历日, 23)))
    赋值 (节日文本, “国际气象日”)
.如果真结束
.如果真 (并且 (等于 (公历月, 3), 等于 (公历日, 31)))
    赋值 (节日文本, “安全教育日”)
.如果真结束
.如果真 (并且 (等于 (公历月, 4), 等于 (公历日, 1)))
    赋值 (节日文本, “愚人节”)
.如果真结束
.如果真 (并且 (等于 (公历月, 4), 等于 (公历日, 7)))
    赋值 (节日文本, “世界卫生日”)
.如果真结束
.如果真 (并且 (等于 (公历月, 4), 等于 (公历日, 22)))
    赋值 (节日文本, “世界地球日”)
.如果真结束
.如果真 (并且 (等于 (公历月, 5), 等于 (公历日, 1)))
    赋值 (节日文本, “国际劳动节”)
.如果真结束
.如果真 (并且 (等于 (公历月, 5), 等于 (公历日, 4)))
    赋值 (节日文本, “青年节”)
.如果真结束
.如果真 (并且 (等于 (公历月, 5), 等于 (公历日, 8)))
    赋值 (节日文本, “世界红十字日”)
.如果真结束
.如果真 (并且 (等于 (公历月, 5), 等于 (公历日, 12)))
    赋值 (节日文本, “国际护士节”)
.如果真结束
.如果真 (并且 (等于 (公历月, 5), 等于 (公历日, 15)))
    赋值 (节日文本, “国际家庭日”)
.如果真结束
.如果真 (并且 (等于 (公历月, 5), 等于 (公历日, 16)))
    赋值 (节日文本, “全国助残日”)
.如果真结束
.如果真 (并且 (等于 (公历月, 5), 等于 (公历日, 17)))
    赋值 (节日文本, “国际电信日”)
.如果真结束
.如果真 (并且 (等于 (公历月, 5), 等于 (公历日, 31)))
    赋值 (节日文本, “世界无烟日”)
.如果真结束
.如果真 (并且 (等于 (公历月, 6), 等于 (公历日, 1)))
    赋值 (节日文本, “国际儿童节”)
.如果真结束
.如果真 (并且 (等于 (公历月, 6), 等于 (公历日, 5)))
    赋值 (节日文本, “国际环境保护日”)
.如果真结束
.如果真 (并且 (等于 (公历月, 6), 等于 (公历日, 6)))
    赋值 (节日文本, “全国爱眼日”)
.如果真结束
.如果真 (并且 (等于 (公历月, 6), 等于 (公历日, 25)))
    赋值 (节日文本, “全国土地日”)
.如果真结束
.如果真 (并且 (等于 (公历月, 6), 等于 (公历日, 26)))
    赋值 (节日文本, “国际禁毒日”)
.如果真结束
.如果真 (并且 (等于 (公历月, 7), 等于 (公历日, 1)))
    赋值 (节日文本, “党的生日、香港回归日”)
.如果真结束
.如果真 (并且 (等于 (公历月, 7), 等于 (公历日, 7)))
    赋值 (节日文本, “抗日战争胜利日”)
.如果真结束
.如果真 (并且 (等于 (公历月, 7), 等于 (公历日, 11)))
    赋值 (节日文本, “世界人口日”)
.如果真结束
.如果真 (并且 (等于 (公历月, 8), 等于 (公历日, 1)))
    赋值 (节日文本, “中国建军节”)
.如果真结束
.如果真 (并且 (等于 (公历月, 8), 等于 (公历日, 8)))
    赋值 (节日文本, “父亲节”)
.如果真结束
.如果真 (并且 (等于 (公历月, 9), 等于 (公历日, 8)))
    赋值 (节日文本, “国际扫盲日”)
.如果真结束
.如果真 (并且 (等于 (公历月, 9), 等于 (公历日, 9)))
    赋值 (节日文本, “毛泽东逝世”)
.如果真结束
.如果真 (并且 (等于 (公历月, 9), 等于 (公历日, 10)))
    赋值 (节日文本, “中国教师节”)
.如果真结束
.如果真 (并且 (等于 (公历月, 9), 等于 (公历日, 20)))
    赋值 (节日文本, “中国爱牙日”)
.如果真结束
.如果真 (并且 (等于 (公历月, 9), 等于 (公历日, 27)))
    赋值 (节日文本, “世界旅游日”)
.如果真结束
.如果真 (并且 (等于 (公历月, 9), 等于 (公历日, 28)))
    赋值 (节日文本, “世界聋人日、孔子诞辰”)
.如果真结束
.如果真 (并且 (等于 (公历月, 10), 等于 (公历日, 1)))
    赋值 (节日文本, “世界音乐日、国庆节”)
.如果真结束
.如果真 (并且 (等于 (公历月, 10), 等于 (公历日, 4)))
    赋值 (节日文本, “世界动物日”)
.如果真结束
.如果真 (并且 (等于 (公历月, 10), 等于 (公历日, 6)))
    赋值 (节日文本, “老人节”)
.如果真结束
.如果真 (并且 (等于 (公历月, 10), 等于 (公历日, 8)))
    赋值 (节日文本, “全国高血压日”)
.如果真结束
.如果真 (并且 (等于 (公历月, 10), 等于 (公历日, 9)))
    赋值 (节日文本, “世界邮政日”)
.如果真结束
.如果真 (并且 (等于 (公历月, 10), 等于 (公历日, 14)))
    赋值 (节日文本, “世界标准日”)
.如果真结束
.如果真 (并且 (等于 (公历月, 10), 等于 (公历日, 24)))
    赋值 (节日文本, “联合国日”)
.如果真结束
.如果真 (并且 (等于 (公历月, 11), 等于 (公历日, 1)))
    赋值 (节日文本, “万圣节”)
.如果真结束
.如果真 (并且 (等于 (公历月, 11), 等于 (公历日, 2)))
    赋值 (节日文本, “万灵节”)
.如果真结束
.如果真 (并且 (等于 (公历月, 11), 等于 (公历日, 12)))
    赋值 (节日文本, “孙中山诞辰”)
.如果真结束
.如果真 (并且 (等于 (公历月, 11), 等于 (公历日, 17)))
    赋值 (节日文本, “国际学生日”)
.如果真结束
.如果真 (并且 (等于 (公历月, 12), 等于 (公历日, 5)))
    赋值 (节日文本, “国际志愿人员日”)
.如果真结束
.如果真 (并且 (等于 (公历月, 12), 等于 (公历日, 20)))
    赋值 (节日文本, “澳门回归”)
.如果真结束
.如果真 (并且 (等于 (公历月, 12), 等于 (公历日, 25)))
    赋值 (节日文本, “圣诞节”)
.如果真结束
.如果真 (并且 (等于 (公历月, 12), 等于 (公历日, 26)))
    赋值 (节日文本, “毛泽东诞辰”)
.如果真结束
.如果真 (并且 (等于 (公历月, 5), 大于 (公历日, 7), 小于 (公历日, 15), 等于 (星期几, 1)))
    赋值 (节日文本, “母亲节”)
.如果真结束
.如果真 (并且 (等于 (公历月, 6), 大于 (公历日, 14), 小于 (公历日, 22), 等于 (星期几, 1)))
    赋值 (节日文本, “父亲节”)
.如果真结束
.如果真 (并且 (等于 (公历月, 11), 大于 (公历日, 21), 等于 (星期几, 1)))
    赋值 (节日文本, “感恩节”)
.如果真结束
返回 (节日文本)

.子程序 取星座, 文本型, , 返回一个日期所处于哪一个星座时段,取自精科算命网http://www.jk126.com/xzqy/
.参数 日期, 日期时间型, , 

 ' 1月21日～2月19日水瓶座
 ' 2月20日～3月20日双鱼座
 ' 3月21日～4月20日白羊座
 ' 4月21日～5月21日金牛座
 ' 5月22日～6月21日双子座
 ' 6月22日～7月22日巨蟹座
 ' 7月23日～8月23日狮子座
 ' 8月24日～9月23日仕女座
 ' 9月24日～10月23日天秤座
 ' 10月24日～11月22日天蝎座
 ' 11月23日～12月21日射手座
 ' 12月22日～1月20日魔羯座
.判断开始 (或者 (并且 (等于 (取月份 (日期), 1), 大于或等于 (取日 (日期), 21)), 并且 (等于 (取月份 (日期), 2), 小于或等于 (取日 (日期), 19))))
    返回 (“水瓶座”)
.判断 (或者 (并且 (等于 (取月份 (日期), 2), 大于或等于 (取日 (日期), 20)), 并且 (等于 (取月份 (日期), 3), 小于或等于 (取日 (日期), 20))))
    返回 (“双鱼座”)
.判断 (或者 (并且 (等于 (取月份 (日期), 3), 大于或等于 (取日 (日期), 21)), 并且 (等于 (取月份 (日期), 4), 小于或等于 (取日 (日期), 20))))
    返回 (“白羊座”)
.判断 (或者 (并且 (等于 (取月份 (日期), 4), 大于或等于 (取日 (日期), 21)), 并且 (等于 (取月份 (日期), 5), 小于或等于 (取日 (日期), 21))))
    返回 (“金牛座”)
.判断 (或者 (并且 (等于 (取月份 (日期), 5), 大于或等于 (取日 (日期), 22)), 并且 (等于 (取月份 (日期), 6), 小于或等于 (取日 (日期), 21))))
    返回 (“双子座”)
.判断 (或者 (并且 (等于 (取月份 (日期), 6), 大于或等于 (取日 (日期), 22)), 并且 (等于 (取月份 (日期), 7), 小于或等于 (取日 (日期), 22))))
    返回 (“巨蟹座”)
.判断 (或者 (并且 (等于 (取月份 (日期), 7), 大于或等于 (取日 (日期), 23)), 并且 (等于 (取月份 (日期), 8), 小于或等于 (取日 (日期), 23))))
    返回 (“狮子座”)
.判断 (或者 (并且 (等于 (取月份 (日期), 8), 大于或等于 (取日 (日期), 24)), 并且 (等于 (取月份 (日期), 9), 小于或等于 (取日 (日期), 23))))
    返回 (“仕女座”)
.判断 (或者 (并且 (等于 (取月份 (日期), 9), 大于或等于 (取日 (日期), 24)), 并且 (等于 (取月份 (日期), 10), 小于或等于 (取日 (日期), 23))))
    返回 (“天秤座”)
.判断 (或者 (并且 (等于 (取月份 (日期), 10), 大于或等于 (取日 (日期), 24)), 并且 (等于 (取月份 (日期), 11), 小于或等于 (取日 (日期), 22))))
    返回 (“天蝎座”)
.判断 (或者 (并且 (等于 (取月份 (日期), 11), 大于或等于 (取日 (日期), 23)), 并且 (等于 (取月份 (日期), 12), 小于或等于 (取日 (日期), 21))))
    返回 (“射手座”)
.判断 (或者 (并且 (等于 (取月份 (日期), 12), 大于或等于 (取日 (日期), 22)), 并且 (等于 (取月份 (日期), 1), 小于或等于 (取日 (日期), 20))))
    返回 (“魔羯座”)
.默认
    返回 (“”)
.判断结束


.子程序 取预产期, 日期时间型, ,     人类的妊娠时间，平均来说，从末次月经的第一天算起，约为280天（40周），计算的方法是以末次月经的月、日加9个月零7天，或从末次月经的月减去3个月加7天。所得日期即是可能要临产的日子，称“预产期”。例如，末次月经为1月20日，则预产期为10月27日。又如末次月经为10月28日，则预产期为第二年的8月4日。由于所用280天是一个平均数字，所得的结果只是一个大概的日期，凡是在预产期前后两周以内分娩者都是正常的。
.参数 最未月经日, 日期时间型, , 

.局部变量 预产期, 日期时间型, , , 

赋值 (预产期, 增减时间 (最未月经日, #月份, 9))
赋值 (预产期, 增减时间 (预产期, #日, 7))
返回 (预产期)


.子程序 取安全期, 日期时间型, , 取上次月经以来的安全期


.子程序 取身份证日期, 文本型, , 取一个身份证号中的出生日期,在本程序前对身份证是否正确进行简单判断,应该用真正的判断程序进行判断
.参数 身份证号, 文本型, , 

.局部变量 长度, 整数型, , , 

赋值 (长度, 取文本长度 (身份证号))
.如果真 (等于 (长度, 15))
    返回 (相加 (“19”, 取文本中间 (身份证号, 7, 6)))
.如果真结束
.如果真 (等于 (长度, 18))
    返回 (取文本中间 (身份证号, 7, 8))
.如果真结束
返回 (“”)


.子程序 取身份证性别, 整数型, , 取一个身份主号中的性别判断,在本程序前未对身份证是否正确进行简单判断,应该用真正的判断程序进行判断
.参数 身份证号, 文本型, , 0为错误,1为男,2为女

.局部变量 长度, 整数型, , , 

赋值 (长度, 取文本长度 (身份证号))
.如果真 (等于 (长度, 15))
    .如果 (等于 (求余数 (到数值 (取文本中间 (身份证号, 15, 1)), 2), 1)) ' 以下为判断性别，方法比较笨，代码较多，可以取第15位数除以2取余数，如果是单数，就是男性，否则为女性
        返回 (1)
    .否则
        返回 (2)
    .如果结束
    
.如果真结束
.如果真 (等于 (长度, 18))
    .如果 (等于 (求余数 (到数值 (取文本中间 (身份证号, 17, 1)), 2), 1)) ' 以下为判断性别，方法比较笨，代码较多，可以取第15位数除以2取余数，如果是单数，就是男性，否则为女性
        返回 (1)
    .否则
        返回 (2)
    .如果结束
    
.如果真结束
返回 (0)

.子程序 取身份证判断, 整数型, , 判断身份证号是否正确
.参数 身份证号, 文本型, , 

.局部变量 长度, 整数型, , , 

赋值 (长度, 取文本长度 (身份证号))
.如果真 (不等于 (长度, 18))
    .如果真 (不等于 (长度, 15))
        返回 (1) ' 信息框 (“身份证号码长度非法！”, #错误图标, )
    .如果真结束
    
.如果真结束
.如果真 (大于或等于 (长度, 19))
    返回 (2)
.如果真结束
.如果真 (小于或等于 (长度, 14))
    返回 (3)
.如果真结束
.如果真 (等于 (长度, 15))
    .如果真 (或者 (大于或等于 (到数值 (取文本中间 (身份证号, 9, 2)), 13), 等于 (到数值 (取文本中间 (身份证号, 9, 2)), 0)))
        输出调试文本 (取文本中间 (身份证号, 9, 2))
        返回 (5) ' 月份大于12个月3201057302
    .如果真结束
    .如果真 (或者 (大于或等于 (到数值 (取文本中间 (身份证号, 11, 2)), 32), 等于 (到数值 (取文本中间 (身份证号, 11, 2)), 0)))
        输出调试文本 (取文本中间 (身份证号, 11, 2))
        返回 (6) ' 日子大于32天
    .如果真结束
    
.如果真结束
.如果真 (等于 (长度, 17))
    .如果真 (或者 (小于或等于 (到数值 (取文本中间 (身份证号, 9, 2)), 1900), 大于或等于 (到数值 (取文本中间 (身份证号, 6, 2)), 2030)))
        输出调试文本 (取文本中间 (身份证号, 9, 2))
        返回 (4) ' 年份小于1900年,大于2030年
    .如果真结束
    .如果真 (或者 (大于或等于 (到数值 (取文本中间 (身份证号, 11, 2)), 13), 等于 (到数值 (取文本中间 (身份证号, 11, 2)), 0)))
        输出调试文本 (取文本中间 (身份证号, 11, 2))
        返回 (5) ' 月份大于12个月
    .如果真结束
    .如果真 (或者 (大于或等于 (到数值 (取文本中间 (身份证号, 13, 2)), 32), 等于 (到数值 (取文本中间 (身份证号, 13, 2)), 0)))
        输出调试文本 (取文本中间 (身份证号, 13, 2))
        返回 (6) ' 日子大于32天
    .如果真结束
    
.如果真结束
返回 (0) ' 正确返回0

.子程序 身份证号转换, 文本型, , 从15位转换到18位身份证号
.参数 身份证号, 文本型, , 

.局部变量 加权因子, 整数型, , "17", 
.局部变量 校验码串, 文本型, , "11", 
.局部变量 位, 文本型, , , 
.局部变量 累加, 整数型, , , 
.局部变量 校验码, 文本型, , , 
.局部变量 计数, 整数型, , , 
.局部变量 长度, 整数型, , , 

赋值 (加权因子, { 7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2 })
赋值 (校验码串, { “1”, “0”, “X”, “9”, “8”, “7”, “6”, “5”, “4”, “3”, “2” })
赋值 (长度, 取文本长度 (身份证号))
.如果真 (不等于 (长度, 18))
    .如果真 (不等于 (长度, 15))
        返回 (“”) ' 信息框 (“身份证号码长度非法！”, #错误图标, )
    .如果真结束
    
.如果真结束
.如果真 (等于 (长度, 15))
    赋值 (身份证号, 相加 (取文本左边 (身份证号, 6), “19”, 取文本右边 (身份证号, 9)))
.如果真结束
.计次循环首 (17, 计数)
    赋值 (位, 取文本中间 (身份证号, 计数, 1))
    赋值 (累加, 相加 (累加, 相乘 (到数值 (位), 加权因子 [计数])))
.计次循环尾 ()
赋值 (校验码, 校验码串 [相加 (求余数 (累加, 11), 1)])
赋值 (身份证号, 相加 (取文本左边 (身份证号, 17), 校验码))
返回 (身份证号)


.子程序 身份证号15到18, 文本型, , 
.参数 身份证号15, 文本型, , 

.局部变量 计数, 整数型, , , 
.局部变量 加权因子, 整数型, , , 
.局部变量 加权码, 文本型, , , 
.局部变量 转换后号, 文本型, , , 

赋值 (转换后号, 相加 (取文本左边 (身份证号15, 6), “19”, 取文本右边 (身份证号15, 9)))
.变量循环首 (18, 2, -1, 计数)
    赋值 (加权因子, 相加 (加权因子, 相乘 (求余数 (求次方 (2, 相减 (计数, 1)), 11), 到数值 (取文本中间 (转换后号, 相减 (19, 计数), 1)))))
.变量循环尾 ()
赋值 (加权因子, 求余数 (加权因子, 11))
.判断开始 (等于 (加权因子, 0))
    赋值 (加权码, “1”)
.判断 (等于 (加权因子, 1))
    赋值 (加权码, “0”)
.判断 (等于 (加权因子, 2))
    赋值 (加权码, “X”)
.默认
    赋值 (加权码, 删首尾空 (到文本 (相减 (12, 加权因子))))
.判断结束
返回 (相加 (转换后号, 加权码))

.子程序 取身份证比较, 逻辑型, , 对身份证号和一个日期进行比较,看两者是否一致
.参数 身份证号, 文本型, , 
.参数 比较日期, 日期时间型, , 

.局部变量 长度, 整数型, , , 

赋值 (长度, 取文本长度 (身份证号))
.如果真 (等于 (长度, 15))
    .如果 (并且 (等于 (到数值 (相加 (“19”, 取文本中间 (身份证号, 7, 2))), 取年份 (比较日期)), 等于 (到数值 (取文本中间 (身份证号, 9, 2)), 取月份 (比较日期)), 等于 (到数值 (取文本中间 (身份证号, 11, 2)), 取日 (比较日期))))
        返回 (真)
    .否则
        返回 (假)
    .如果结束
    
.如果真结束
.如果真 (等于 (长度, 18))
    .如果 (并且 (等于 (到数值 (取文本中间 (身份证号, 7, 4)), 取年份 (比较日期)), 等于 (到数值 (取文本中间 (身份证号, 11, 2)), 取月份 (比较日期)), 等于 (到数值 (取文本中间 (身份证号, 13, 2)), 取日 (比较日期))))
        返回 (真)
    .否则
        返回 (假)
    .如果结束
    
.如果真结束
返回 (假)


.程序集 网络通讯, , , 

.子程序 取外网IP, 文本型, , 
返回 (取字节集数据 (未知支持库函数_7 (“Http://wdxq.21city.net/IP.asp”), #文本型, )) ' IP.asp的内容为"<%response.write(Request.ServerVariables("REMOTE_HOST"))%>")

.子程序 取IP段, 文本型, , 
.参数 IP地址, 文本型, 可空, 如果为空或空白,即取本机主机名

.局部变量 IP, 文本型, , , 
.局部变量 段组, 文本型, , "3", 
.局部变量 IP段, 文本型, , , 

.如果 (或者 (等于 (是否为空 (IP地址), 真), 等于 (删全部空 (IP地址), “”)))
    赋值 (IP, 转换为IP地址 (取主机名 ()))
.否则
    赋值 (IP, IP地址)
.如果结束

赋值 (段组, 分割文本 (IP, “.”, 4))
赋值 (IP段, 相加 (段组 [1], “.”, 段组 [2], “.”, 段组 [3], “.”))
返回 (IP段)

.子程序 取网址文件名, 文本型, , 取一个网站地址中的文件名
.参数 网址, 文本型, , 

.局部变量 分隔块, 文本型, , "0", 
.局部变量 块数, 整数型, , , 
.局部变量 文件名, 文本型, , , 

赋值 (分隔块, 分割文本 (网址, “/”, ))
赋值 (块数, 取数组成员数 (分隔块))
.如果真 (或者 (等于 (块数, 0), 等于 (寻找文本 (分隔块 [块数], “.”, 1, 假), -1)))
    返回 (“”)
.如果真结束
返回 (分隔块 [块数])


.子程序 取网址引用, 文本型, , 
.参数 网址, 文本型, , 

.局部变量 分隔块, 文本型, , "0", 
.局部变量 块数, 整数型, , , 
.局部变量 记次变量, 整数型, , , 
.局部变量 引用, 文本型, , , 

赋值 (分隔块, 分割文本 (网址, “/”, ))
赋值 (块数, 取数组成员数 (分隔块))
.如果真 (或者 (等于 (块数, 0), 并且 (等于 (寻找文本 (分隔块 [1], “http:”, 1, 假), -1), 等于 (寻找文本 (分隔块 [1], “ftp:”, 1, 假), -1))))
    返回 (“”)
.如果真结束
.变量循环首 (1, 相减 (块数, 1), 1, 记次变量)
    .判断开始 (等于 (记次变量, 1))
        赋值 (引用, 相加 (引用, 分隔块 [记次变量]))
    .默认
        赋值 (引用, 相加 (引用, “/”, 分隔块 [记次变量]))
    .判断结束
    
.变量循环尾 ()
赋值 (引用, 相加 (引用, “/”))
返回 (引用)

.子程序 还原网页颜色, 文本型, , 转换颜色值到网页颜色的代码
.参数 颜色值, 整数型, , 

.局部变量 文本1, 文本型, , , 
.局部变量 文本2, 文本型, , , 
.局部变量 文本3, 文本型, , , 
.局部变量 结果文本, 文本型, , , 

赋值 (结果文本, 取十六进制文本 (颜色值))
赋值 (文本1, 取文本左边 (结果文本, 2))
赋值 (文本2, 取文本中间 (结果文本, 3, 2))
赋值 (文本3, 取文本中间 (结果文本, 5, 2))
赋值 (结果文本, 相加 (文本3, 文本2, 文本1))
.如果 (小于 (取文本长度 (结果文本), 6))
    赋值 (结果文本, 取文本左边 (相加 (“#”, 结果文本, “000000”), 7))
.否则
    赋值 (结果文本, 相加 (“#”, 结果文本))
.如果结束
返回 (结果文本)


.子程序 转换为HTML色, 文本型, , 
.参数 RGB颜色值, 整数型, , 

.局部变量 HTML颜色值文本, 文本型, , , 

赋值 (HTML颜色值文本, 相加 (取十六进制文本 (位与 (RGB颜色值, 255)), 取十六进制文本 (相除 (位与 (RGB颜色值, 65280), 256)), 取十六进制文本 (相除 (位与 (RGB颜色值, 16711680), 65536))))


.子程序 取网络时间, 日期时间型, , 返回网上取的时间,注意:取之前需要将网络延时的时间算上.即用本命令前先保存一次时间,取到后得到两次时间的差,将这个差加入到取到网络时间的秒中,最后直接用"置现行时间"命令改你自己电脑的时间即可.
.参数 网页地址, 文本型, 可空, 如果空,默认为易趣的网页时间,如果是其他的网址,请自行更改本程序
.参数 前导字符, 文本型, 可空, 这是取网页文本中的日期前的一些文字,如果是中文的话,有可能有问题,请先调试一下.
.参数 是否改系统时间, 逻辑型, 可空, 是否立即修改系统时间为网络上取到的时间,如果为真,就立即改,如果为空或假,就不改.

.局部变量 文本1, 文本型, , , 网页地址文本
.局部变量 首位置, 整数型, , , 
.局部变量 临时保存时间, 日期时间型, , , 
.局部变量 相差的时间, 整数型, , , 
.局部变量 年, 整数型, , , 
.局部变量 月, 整数型, , , 
.局部变量 日, 整数型, , , 
.局部变量 时, 整数型, , , 
.局部变量 分, 整数型, , , 
.局部变量 秒, 整数型, , , 
.局部变量 结果时间, 日期时间型, , , 

赋值 (临时保存时间, 取现行时间 ())
.如果真 (或者 (等于 (是否为空 (网页地址), 真), 等于 (删全部空 (网页地址), “”)))
    赋值 (网页地址, “http://cgi3.ebay.com.cn/aw-cgi/eBayISAPI.dll?TimeShow”)
    输出调试文本 (网页地址)
.如果真结束
.如果真 (或者 (等于 (是否为空 (前导字符), 真), 等于 (删全部空 (前导字符), “”)))
    赋值 (前导字符, 相加 (“</B><BR><font size=”, #引号, “2”, #引号, “>”))
    输出调试文本 (前导字符)
.如果真结束
赋值 (文本1, 到文本 (未知支持库函数_7 (网页地址)))
 ' 输出调试文本 (文本1)
赋值 (首位置, 寻找文本 (文本1, 前导字符, 1, 假))
.如果真 (大于或等于 (首位置, 1))
    赋值 (首位置, 相加 (首位置, 取文本长度 (前导字符)))
.如果真结束
输出调试文本 (首位置)
输出调试文本 (取文本中间 (文本1, 首位置, 20))
赋值 (年, 到数值 (取文本中间 (文本1, 首位置, 4)))
赋值 (月, 到数值 (取文本中间 (文本1, 相加 (首位置, 5), 2)))
赋值 (日, 到数值 (取文本中间 (文本1, 相加 (首位置, 8), 2)))
赋值 (时, 到数值 (取文本中间 (文本1, 相加 (首位置, 11), 2)))
赋值 (分, 到数值 (取文本中间 (文本1, 相加 (首位置, 14), 2)))
赋值 (秒, 到数值 (取文本中间 (文本1, 相加 (首位置, 17), 2)))
赋值 (相差的时间, 取时间间隔 (取现行时间 (), 临时保存时间, #秒))
输出调试文本 (取时间间隔 (取现行时间 (), 临时保存时间, #秒))
赋值 (结果时间, 增减时间 (指定时间 (年, 月, 日, 时, 分, 秒), #秒, 相差的时间))
.如果真 (等于 (是否改系统时间, 真))
    置现行时间 (结果时间)
.如果真结束
返回 (结果时间)


 ' 不属于任何一个程序集、类模块的函数：
