 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 455
    高度 = 358
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假





 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 4 系统核心支持库





.窗口程序集 窗口程序集1, , , 

.子程序 _按钮2_被单击, 空白型, , 
赋值 (., 0)
赋值 (., “图片文件|*.BMP;*.GIF;*.JPG|BMP图片|*.BMP|JPG图片|*.JPG|GIF图片|*.GIF|所有文件|*.*”)
赋值 (., .)
.如果真 (等于 (打开 (), 假))
    返回 ()
.如果真结束
赋值 (., .)
赋值 (., 读入文件 (.))


.子程序 _按钮4_被单击, 空白型, , 
赋值 (., 0)
赋值 (., “图片文件|*.BMP;*.GIF;*.JPG|BMP图片|*.BMP|JPG图片|*.JPG|GIF图片|*.GIF|所有文件|*.*”)
赋值 (., .)
.如果真 (等于 (打开 (), 假))
    返回 ()
.如果真结束
赋值 (., .)
赋值 (., 读入文件 (.))



.子程序 _按钮7_被单击, 空白型, , 
.局部变量 r红, 整数型, , , 原图字集中的红色部分
.局部变量 g绿, 整数型, , , 原图字集中的绿色部分
.局部变量 b兰, 整数型, , , 原图字集中的蓝色部分
.局部变量 x, 整数型, , , 绿颜色处于文件图像的第56位之后,这样从56位开始进行操作,每间隔3位都是处理绿色
.局部变量 y, 整数型, , , 兰颜色处于文件图像的第55位之后,这样从55位开始进行操作,每间隔3位都是处理兰色
.局部变量 z, 整数型, , , 红颜色处于文件图像的第57位之后,这样从57位开始进行操作,每间隔3位都是处理红色
.局部变量 原图字集, 字节集, , , 将原图片作为字节集读入内容中处理
.局部变量 比照字集, 字节集, , , 将比照图片作为字节集读入内容中处理
.局部变量 新图字集, 字节集, , , 将对比后的内容生成到这个内容字节集中,以后再一次性显示
.局部变量 r红1, 整数型, , , 比照图字集中的红色部分
.局部变量 g绿1, 整数型, , , 比照图字集中的绿色部分
.局部变量 b兰1, 整数型, , , 比照图字集中的蓝色部分
.局部变量 纠正位, 整数型, , , 因为图象数据中的每一个扫描行字节数必须为4的倍数，所以对图象宽度进行修正
.局部变量 计算值, 整数型, , , 将原图三原色数值相加后减去比照图的三原色数值-用于容错率计算
.局部变量 计次, 整数型, , , 
.局部变量 计数, 整数型, , , 

赋值 (原图字集, .) ' 画板1.取图片 (, )  ' 先将两幅图读为字节集在内存中处理,这样较快速
赋值 (比照字集, .) ' 画板2.取图片 (, )  ' 先将两幅图读为字节集在内存中处理,这样较快速
赋值 (新图字集, .) ' 画板2.取图片 (, )  ' 这里是将结果图片初始化一下.否则会因没有放入数据,数组下标会超出
 ' 输出调试文本 (取字节集长度 (原图字集))
 ' 输出调试文本 (取字节集长度 (比照字集))

赋值 (x, 56) ' 绿颜色处于文件图像的第56位之后,这样从56位开始进行操作,每间隔3位都是处理绿色
赋值 (y, 55) ' 兰颜色处于文件图像的第55位之后,这样从55位开始进行操作,每间隔3位都是处理兰色
赋值 (z, 57) ' 红颜色处于文件图像的第57位之后,这样从57位开始进行操作,每间隔3位都是处理红色

赋值 (纠正位, 选择 (等于 (求余数 (相乘 (., 3), 4), 0), 0, 相减 (4, 求余数 (相乘 (., 3), 4)))) ' 利用图像宽度计算纠正位为几个字节
.计次循环首 (., 计数) ' 字节集的55位后是各扫描行的数据,用图片的高可以得到扫描行的总数
    
    .计次循环首 (., 计次) ' 每一个扫描行是由各像素点（三个字节）数据组成，可以用图片的宽度得像素的数目
         ' 输出调试文本 (z)
        赋值 (r红, 原图字集 [z]) ' 在原图中,从第57位开始,每三位读一次,读出的是红色的数据
        赋值 (g绿, 原图字集 [x]) ' 在原图中,从第56位开始,每三位读一次,读出的是绿色的数据
        赋值 (b兰, 原图字集 [y]) ' 在原图中,从第55位开始,每三位读一次,读出的是兰色的数据
        
        赋值 (r红1, 比照字集 [z]) ' 在比照图中,从第57位开始,每三位读一次,读出的是红色的数据
        赋值 (g绿1, 比照字集 [x]) ' 在比照图中,从第56位开始,每三位读一次,读出的是绿色的数据
        赋值 (b兰1, 比照字集 [y]) ' 在比照图中,从第55位开始,每三位读一次,读出的是兰色的数据
        
        .如果 (等于 (求余数 (计数, 2), 1))
            .如果 (等于 (求余数 (计次, 2), 1))
                赋值 (新图字集 [z], r红) ' 新图片取到以上两图不同的地方就取值,以便于显示不同处.这里取的是其中之一颜色
                赋值 (新图字集 [x], g绿) ' 新图片取到以上两图不同的地方就取值,以便于显示不同处.这里取的是其中之一颜色
                赋值 (新图字集 [y], b兰) ' 新图片取到以上两图不同的地方就取值,以便于显示不同处.这里取的是其中之一颜色
            .否则
                赋值 (新图字集 [z], r红1) ' 新图片取到以上两图不同的地方就取值,以便于显示不同处.这里取的是其中之一颜色
                赋值 (新图字集 [x], g绿1) ' 新图片取到以上两图不同的地方就取值,以便于显示不同处.这里取的是其中之一颜色
                赋值 (新图字集 [y], b兰1) ' 新图片取到以上两图不同的地方就取值,以便于显示不同处.这里取的是其中之一颜色
            .如果结束
            
        .否则
            .如果 (等于 (求余数 (计次, 2), 1))
                赋值 (新图字集 [z], r红1) ' 新图片取到以上两图不同的地方就取值,以便于显示不同处.这里取的是其中之一颜色
                赋值 (新图字集 [x], g绿1) ' 新图片取到以上两图不同的地方就取值,以便于显示不同处.这里取的是其中之一颜色
                赋值 (新图字集 [y], b兰1) ' 新图片取到以上两图不同的地方就取值,以便于显示不同处.这里取的是其中之一颜色
            .否则
                赋值 (新图字集 [z], r红) ' 新图片取到以上两图不同的地方就取值,以便于显示不同处.这里取的是其中之一颜色
                赋值 (新图字集 [x], g绿) ' 新图片取到以上两图不同的地方就取值,以便于显示不同处.这里取的是其中之一颜色
                赋值 (新图字集 [y], b兰) ' 新图片取到以上两图不同的地方就取值,以便于显示不同处.这里取的是其中之一颜色
            .如果结束
            
        .如果结束
        
        赋值 (x, 相加 (x, 3)) ' 前面已经说了,每间隔三位是一种颜色,现在就是其中一种颜色的位置进3位
        赋值 (y, 相加 (y, 3)) ' 前面已经说了,每间隔三位是一种颜色,现在就是其中一种颜色的位置进3位
        赋值 (z, 相加 (z, 3)) ' 前面已经说了,每间隔三位是一种颜色,现在就是其中一种颜色的位置进3位
        
    .计次循环尾 ()
    赋值 (x, 相加 (x, 纠正位)) ' 因为每一扫描行的字节数必须是4的整数倍，所以加入纠正位
    赋值 (y, 相加 (y, 纠正位)) ' 因为每一扫描行的字节数必须是4的整数倍，所以加入纠正位
    赋值 (z, 相加 (z, 纠正位)) ' 因为每一扫描行的字节数必须是4的整数倍，所以加入纠正位
.计次循环尾 ()
赋值 (., 新图字集) ' 通过上述取到了不同内容的新图片字节集,这时就可以显示出来了,字节集在内容中处理,速度非常快.
信息框 (“完成!”, 0, )


.子程序 _按钮6_被单击, 空白型, , 
赋值 (., 1)
赋值 (., “BMP图片|*.BMP”)
赋值 (., .)
.如果真 (等于 (打开 (), 假))
    返回 ()
.如果真结束
赋值 (., .)
写到文件 (., .)


.子程序 __启动窗口_创建完毕, 空白型, , 
赋值 (., 取运行目录 ())



 ' 不属于任何一个程序集、类模块的函数：
