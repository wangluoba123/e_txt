 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 632
    高度 = 434
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    图标 =  ' 已保存到：D:\易语言学习\Data\围棋打谱程序.e\_启动窗口_图标.ico
    背景音乐 =  ' 空
    标题 = “围棋打谱程序”
    帮助文件名 = “”

窗口 复盘窗口
    左边 = 50
    顶边 = 50
    宽度 = 207
    高度 = 94
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 4
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “ 复盘”
    帮助文件名 = “”

窗口 使用说明窗口
    左边 = 50
    顶边 = 50
    宽度 = 293
    高度 = 201
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    图标 =  ' 已保存到：D:\易语言学习\Data\围棋打谱程序.e\使用说明窗口_图标.ico
    背景音乐 =  ' 空
    标题 = “使用说明”
    帮助文件名 = “”

窗口 设置窗口
    左边 = 50
    顶边 = 50
    宽度 = 255
    高度 = 221
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 4
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “ 设置”
    帮助文件名 = “”

窗口 关于窗口
    左边 = 50
    顶边 = 50
    宽度 = 310
    高度 = 203
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “关于LIIGO的 '围棋打谱程序'”
    帮助文件名 = “”



.声音 落子声, " ' 已保存到：D:\易语言学习\Data\围棋打谱程序.e\落子声", , 
.图片 黑子, " ' 已保存到：D:\易语言学习\Data\围棋打谱程序.e\黑子", , 
.图片 白子, " ' 已保存到：D:\易语言学习\Data\围棋打谱程序.e\白子", , 
.图片 黑当前子, " ' 已保存到：D:\易语言学习\Data\围棋打谱程序.e\黑当前子", , 刚下的黑子,与其它子外形上有所区别(中间有"+")
.图片 白当前子, " ' 已保存到：D:\易语言学习\Data\围棋打谱程序.e\白当前子", , 刚下的白子,与其它子外形上有所区别(中间有"+")


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 3 9 系统核心支持库




数据类型 子, , 
    .成员 序号, 整数型, , , 
    .成员 行, 整数型, , , 
    .成员 列, 整数型, , , 
    .成员 备注, 文本型, , , 

.全局变量 可有子数组, 逻辑型, , "19,19", 用于记录/判断某行列是否有棋子
.全局变量 棋谱, 子, , "362", 记录每一手棋的信息(序号,位置,备注)
.全局变量 当前手, 整数型, , , 当前下到第几手了
.全局变量 棋局信息, 文本型, , , 对一盘棋的整体介绍(如背景,输赢等)
.全局变量 下棋状态, 逻辑型, , , 复盘时，“下棋状态”为假，此时不许往棋盘上下子
.全局变量 复盘序号, 整数型, , , 记录复盘时到第几手了
.全局变量 匿名全局变量_471, 空白型, , , 
.全局变量 单步用时, 整数型, , , 每下一步的最长可用时间(秒),为0表示不限制用时
.全局变量 总用时, 整数型, , , 整盘棋单方最长可用时间(秒),为0表示不限制用时

.窗口程序集 窗口程序集1, , , 

.程序集变量 棋谱文件头, 字节集, , , 写在棋谱文件最前面,用于验证
.子程序 下棋子, 逻辑型, , 如果用户在已有子的地方重复下子,返回假
.参数 序号, 整数型, , 从1开始为所有棋子编号
.参数 所在行, 整数型, , 从 1 到 19 代表19条线
.参数 所在列, 整数型, , 从 1 到 19 代表19条线
.参数 落子声, 逻辑型, 可空, 是否落子有声,默认为真(打开棋谱文件或复盘时,需一次性显示所有棋子,可没有声音)

.如果真 (或者 (小于 (序号, 1), 大于 (序号, 361), 小于 (所在行, 1), 大于 (所在行, 19), 小于 (所在列, 1), 大于 (所在列, 19)))
    返回 (真) ' 如果各参数不符合要求，则忽略之，不再向下执行。
.如果真结束

.如果 (等于 ( [所在行] [所在列], 假))
    .如果真 (等于 (是否为空 (落子声), 真)) ' 如果没有提供本参数,则为其赋默认值"真"
        赋值 (落子声, 真)
    .如果真结束
    .如果真 (等于 (落子声, 真))
        播放音乐 (#落子声, )
    .如果真结束
    
    .如果 (等于 (求余数 (序号, 2), 1))
        载入图片 (#黑当前子).画图片 (相加 (21, 相乘 (19, 相减 (所在列, 1))), 相加 (20, 相乘 (19, 相减 (所在行, 1))), , , )
    .否则
        载入图片 (#白当前子).画图片 (相加 (21, 相乘 (19, 相减 (所在列, 1))), 相加 (20, 相乘 (19, 相减 (所在行, 1))), , , )
         ' “19”是棋盘中相邻两线间距，“21”“20”跟棋盘左上角与画板左上角位置有关，不必深究。
    .如果结束
    
    赋值 ( [所在行] [所在列], 真)
    
     ' 下面把“前一棋子”的图片换掉，并标上序号。
    .如果真 (大于 (序号, 1)) ' 棋局刚开始时，还没有“前一棋子”之说
         ' 下面把“上一手棋”的棋子图片换掉(换成没有+号的)，并标上序号。
        .如果 (等于 (求余数 (相减 (序号, 1), 2), 1)) ' 判断前一子是黑是白
            载入图片 (#黑子).画图片 (相加 (21, 相乘 (19, 相减 ( [相减 (序号, 1)].列, 1))), 相加 (20, 相乘 (19, 相减 ( [相减 (序号, 1)].行, 1))), , , )
            赋值 (., #白色)
        .否则
            载入图片 (#白子).画图片 (相加 (21, 相乘 (19, 相减 ( [相减 (序号, 1)].列, 1))), 相加 (20, 相乘 (19, 相减 ( [相减 (序号, 1)].行, 1))), , , )
            赋值 (., #黑色)
        .如果结束
        相加 (21, 相乘 (19, 相减 ( [相减 (序号, 1)].列, 1)), 整除 (相减 (17, 相减 (序号, 1).取宽度 ()), 2)).定位写出 (相减 (相加 (21, 相乘 (19, 相减 ( [相减 (序号, 1)].行, 1)), 整除 (相减 (17, 相减 (序号, 1).取高度 ()), 2)), 2), 相减 (序号, 1)) ' 注：纵向方向上减2，是使标号稍微向上。
    .如果真结束
    返回 (真)
.否则
    信息框 (“不能重复下子！”, 0, ) ' 如果“是否已有子(所在行,所在列)＝真”，则提出警告。
    鸣叫 ()
    返回 (假) ' 如果用户在已有子的地方重复下子，返回假。在调用本子程序的地方可通过检查返回值确定是否已下子（返回假表示没有下子）。
.如果结束


.子程序 _画板1_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 行, 整数型, , , 
.局部变量 列, 整数型, , , 

.如果真 (等于 (下棋状态, 假))
    信息框 (“在复盘结束之前，不允许下子！”, 0, )
    返回 (假) ' 复盘时，“下棋状态”为假，此时不许往棋盘上下子
.如果真结束
.如果真 (大于或等于 (当前手, 361))
    返回 (假) ' 棋盘已下满,不许再往棋盘上下子
.如果真结束

赋值 (行, 整除 (相减 (纵向位置, 28), 19))
.如果 (小于或等于 (相减 (纵向位置, 相加 (28, 相乘 (行, 19))), 9))
    赋值 (行, 相加 (行, 1))
.否则
    赋值 (行, 相加 (行, 2))
.如果结束

赋值 (列, 整除 (相减 (横向位置, 29), 19))
.如果 (小于或等于 (相减 (横向位置, 相加 (29, 相乘 (列, 19))), 9))
    赋值 (列, 相加 (列, 1))
.否则
    赋值 (列, 相加 (列, 2))
.如果结束

 ' 上面几行根据鼠标在画板上的横纵位置，计算出欲下子所在的行和列，涉及简单的数学运算。（其中“19”是棋盘中相邻两线间距，“28”“29”跟棋盘左上角与画板左上角位置有关，不必深究。）

.如果真 (并且 (大于或等于 (行, 1), 小于或等于 (行, 19), 大于或等于 (列, 1), 小于或等于 (列, 19)))
     ' 如果用户点击了画板的边缘位置，“行”“列”可能不符合要求，这时不执行以下语句。
    .如果真 (等于 (当前手, 0))
        赋值 (棋局信息, .) ' 下第一手棋子之前输入"备注编辑框"中的文本为"棋头信息"
        赋值 (., “单步解说”) ' 开始下子之后将"备注编辑框"左上的提示标签由"棋局信息"改为"单步解说"
        赋值 (., “”)
    .如果真结束
    
    赋值 (当前手, 相加 (当前手, 1)) ' “当前手”是全局变量，记录当前子的序号，从1开始。
    .如果真 (等于 (下棋子 (当前手, 行, 列), 假)) ' 如果用户在已有子的地方重复下子
        赋值 (当前手, 相减 (当前手, 1))
        返回 (假)
    .如果真结束
    
    计时和提醒 ()
     ' 以下更新列表框中的下棋记录
    .如果 (等于 (求余数 (当前手, 2), 1))
         ' 黑白两方的棋谱分别写到两个列表框中
        相加 (“第”, 到文本 (当前手), “手:(”, 到文本 (行), “,”, 到文本 (列), “)”).加入项目 ()
        赋值 (., 相减 (取项目数 (), 1))
        .选择项目 (., 假)
        
    .否则
        相加 (“第”, 到文本 (当前手), “手:(”, 到文本 (行), “,”, 到文本 (列), “)”).加入项目 ()
        赋值 (., 相减 (取项目数 (), 1))
        .选择项目 (., 假)
    .如果结束
    
     ' 以下记录棋谱到数组中,供存盘或复盘时用
    赋值 (棋谱 [当前手], 序号, 当前手)
    赋值 (棋谱 [当前手], 行, 行)
    赋值 (棋谱 [当前手], 列, 列)
    .如果真 (大于 (当前手, 1))
        赋值 (棋谱 [相减 (当前手, 1)].备注, .) ' 记录上一手的备注信息.
        赋值 (., “”)
         ' liigo自提醒: 最后一手棋的备注要在存盘或复盘之前记录,且记!
    .如果真结束
    
.如果真结束


.子程序 _列表框1_列表项被选择, 空白型, , 
取顶端可见项目 ().置顶端可见项目 ()
.选择项目 (., 假)
赋值 (.,  [相加 (相乘 (., 2), 1)].备注)

.子程序 _列表框2_列表项被选择, 空白型, , 
取顶端可见项目 ().置顶端可见项目 ()
.选择项目 (., 假)
赋值 (.,  [相加 (相乘 (., 2), 2)].备注)

.子程序 _画板1_鼠标右键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

弹出菜单 ()

.子程序 _退出_被选择, 空白型, , 
.如果真 (不等于 (信息框 (相加 (“退出本程序后,所有棋局信息将被清除!”, #换行符, “确认要退出吗?”), 相加 (#询问图标, #取消是否钮), “退出”), #是钮))
    返回 ()
.如果真结束

销毁 ()

.子程序 _新局_被选择, 空白型, , 
.局部变量 i, 整数型, , , 

.清除 ()
赋值 (当前手, 0)
清空 ()
清空 ()
赋值 (., “棋局信息”) ' “标签5”是“备注编辑框”左上的提示框
赋值 (., “”)
.计次循环首 (361, i)
    赋值 ( [i], 假)
    赋值 ( [i], 序号, 0)
    赋值 ( [i], 行, 0)
    赋值 ( [i], 列, 0)
    赋值 ( [i], 备注, “”)
.计次循环尾 ()
赋值 (下棋状态, 真)

赋值 (., “00”)
赋值 (., “00”)
赋值 (., “0”)
赋值 (., “00”)
赋值 (., “00”)
赋值 (., “00”)
赋值 (., “00”)
赋值 (., “0”)
赋值 (., “00”)
赋值 (., “00”)
赋值 (., #黑色)
赋值 (., “黑方”)
赋值 (., 1000)
赋值 (., 0)


.子程序 __启动窗口_可否被关闭, 逻辑型, , 
.如果真 (不等于 (信息框 (相加 (“退出本程序后,所有棋局信息将被清除!”, #换行符, “确认要退出吗?”), 相加 (#询问图标, #取消是否钮), “退出”), #是钮))
    返回 (假)
.如果真结束


.子程序 _保存为文件_被选择, 空白型, , 
.局部变量 行, 整数型, , , 
.局部变量 列, 整数型, , , 
.局部变量 文件号, 整数型, , , 
.局部变量 i, 整数型, , , 

赋值 (棋谱 [当前手], 备注, .) ' 记录最后一手棋的备注(如果有的话)

.如果真 (打开 ())
    赋值 (文件号, 打开文件 (., #重写, ))
    .如果真 (等于 (文件号, 0))
        信息框 (“保存失败！”, #错误图标, )
        返回 ()
    .如果真结束
    
    赋值 (到字节集 (“□〓WeiqiQipuByLiigo〓□”))
    写出数据 (文件号, )
    写出数据 (文件号, 棋局信息, ., ., ., .)
    赋值 (i, 1)
    .判断循环首 (并且 (不等于 ( [i], 序号, 0), 小于或等于 (i, 361)))
        写出数据 (文件号,  [i], 行,  [i], 列,  [i], 备注)
        赋值 (i, 相加 (i, 1))
    .判断循环尾 ()
    关闭文件 (文件号)
    信息框 (相加 (“已成功保存棋谱文件”, #换行符, .), 0, )
.如果真结束


.子程序 _打开文件_被选择, 空白型, , 
.局部变量 文件号, 整数型, , , 
.局部变量 i, 整数型, , , 
.局部变量 变量1, 文本型, , , 
.局部变量 变量2, 文本型, , , 
.局部变量 变量3, 文本型, , , 
.局部变量 变量4, 文本型, , , 
.局部变量 匿名局部变量_528, 空白型, , , 

.如果真 (不等于 (当前手, 0))
    .如果真 (不等于 (信息框 (相加 (“如果打开新的棋谱文件,当前棋局信息将被全部清除!”, #换行符, “继续吗?”), #取消是否钮, ), #是钮))
        返回 ()
    .如果真结束
    
.如果真结束

_新局_被选择 () ' 初始化各变量和数组
.如果真 (打开 ())
    赋值 (文件号, 打开文件 (., #读入, ))
    .如果真 (等于 (文件号, 0))
        信息框 (“打开失败！”, #错误图标, )
        返回 ()
    .如果真结束
    读入数据 (文件号, 棋谱文件头)
    .如果真 (不等于 (棋谱文件头, 到字节集 (“□〓WeiqiQipuByLiigo〓□”)))
        信息框 (“无法识别指定文件,打开失败!”, #错误图标, )
        返回 ()
    .如果真结束
    
    赋值 (下棋状态, 假)
    赋值 (变量1, .)
    赋值 (变量2, 到文本 (.))
    赋值 (变量3, .)
    赋值 (变量4, 到文本 (.))
    读入数据 (文件号, 棋局信息, 黑方姓名编辑框.内容, 黑方段位组合框.现行选中项, 白方姓名编辑框.内容, 白方段位组合框.现行选中项)
    读入数据 (文件号, 棋局信息, 变量1, 变量2, 变量3, 变量4)
    
    赋值 (i, 1)
    .判断循环首 (并且 (取反 (是否在文件尾 (文件号, 假)), 小于或等于 (i, 361)))
        读入数据 (文件号, 棋谱 [i], 行, 棋谱 [i], 列, 棋谱 [i], 备注)
        赋值 (棋谱 [i], 序号, i)
        赋值 (i, 相加 (i, 1))
    .判断循环尾 ()
    关闭文件 (文件号)
    
     ' 以下将所有棋子显示到棋盘上
    赋值 (i, 1)
    .判断循环首 (并且 (不等于 (棋谱 [i], 序号, 0), 小于或等于 (i, 361)))
        下棋子 (i, 棋谱 [i], 行, 棋谱 [i], 列, 假)
        赋值 (可有子数组 [棋谱] [i], 行 [棋谱] [i], 列, 真)
        
         ' 以下更新列表框中的下棋记录
        .如果 (等于 (求余数 (i, 2), 1))
             ' 黑白两方的棋谱分别写到两个列表框中
            相加 (“第”, 到文本 (i), “手:(”, 到文本 (棋谱 [i], 行), “,”, 到文本 (棋谱 [i], 列), “)”).加入项目 ()
            赋值 (., 相减 (取项目数 (), 1))
            .选择项目 (., 假)
            
        .否则
            相加 (“第”, 到文本 (i), “手:(”, 到文本 (棋谱 [i], 行), “,”, 到文本 (棋谱 [i], 列), “)”).加入项目 ()
            赋值 (., 相减 (取项目数 (), 1))
            .选择项目 (., 假)
        .如果结束
        
        赋值 (i, 相加 (i, 1))
    .判断循环尾 ()
    赋值 (当前手, 相减 (i, 1))
    
    .如果 (等于 (当前手, 0))
        赋值 (., “棋局信息”)
        赋值 (., 棋局信息)
    .否则
        赋值 (., “单步解说”)
        赋值 (., 棋谱 [当前手], 备注) ' 写出最后一手棋的备注(如果有的话)
    .如果结束
    
    赋值 (下棋状态, 真) ' 棋谱全部显示完后，可以继续下子
.如果真结束


.子程序 __启动窗口_创建完毕, 空白型, , 
赋值 (下棋状态, 真)
获取焦点 ()
播放音乐 (#落子声, ) ' 第一次播放音乐前会有较大停顿，所以把第一次放到这里。

.子程序 _悔棋_被选择, 空白型, , 
.如果 (等于 (下棋状态, 假))
    信息框 (“复盘时不能悔棋!”, 0, )
    返回 ()
.否则
    悔棋 ()
.如果结束

 ' 以下判断哪方悔棋，将另一方在悔棋前已经用的时间算到悔棋一方身上
.如果 (等于 (求余数 (当前手, 2), 0))
     ' 是黑方悔棋
.否则
     ' 是白方悔棋
.如果结束
计时和提醒 ()

.子程序 悔棋, 空白型, , 
.如果真 (小于 (当前手, 1))
    返回 ()
.如果真结束

相加 (21, 相乘 (19, 相减 (棋谱 [当前手], 列, 1))).清除 (相加 (20, 相乘 (19, 相减 (棋谱 [当前手], 行, 1))), 19, 19)
赋值 (可有子数组 [棋谱] [当前手], 行 [棋谱] [当前手], 列, 假)
赋值 (棋谱 [当前手], 序号, 0)
赋值 (棋谱 [当前手], 行, 0)
赋值 (棋谱 [当前手], 列, 0)
赋值 (棋谱 [当前手], 备注, “”)

赋值 (当前手, 相减 (当前手, 1))
.如果真 (小于 (当前手, 1))
    清空 ()
    赋值 (., “棋局信息”)
    赋值 (., 棋局信息)
    返回 ()
.如果真结束
相加 (21, 相乘 (19, 相减 (棋谱 [当前手], 列, 1))).清除 (相加 (20, 相乘 (19, 相减 (棋谱 [当前手], 行, 1))), 19, 19)
.如果 (等于 (求余数 (当前手, 2), 1))
    载入图片 (#黑当前子).画图片 (相加 (21, 相乘 (19, 相减 (棋谱 [当前手], 列, 1))), 相加 (20, 相乘 (19, 相减 (棋谱 [当前手], 行, 1))), , , )
.否则
    载入图片 (#白当前子).画图片 (相加 (21, 相乘 (19, 相减 (棋谱 [当前手], 列, 1))), 相加 (20, 相乘 (19, 相减 (棋谱 [当前手], 行, 1))), , , )
     ' “19”是棋盘中相邻两线间距，“21”“20”跟棋盘左上角与画板左上角位置有关，不必深究。
.如果结束

 ' 以下更新列表框中的下棋记录
.如果 (等于 (求余数 (当前手, 2), 0))
     ' 删除列表框中的最后一步棋谱，并选中上一步
    相减 (取项目数 (), 1).删除项目 ()
    .选择项目 (., 假)
    赋值 (., 相减 (取项目数 (), 1))
    
.否则
    相减 (取项目数 (), 1).删除项目 ()
    .选择项目 (., 假)
    赋值 (., 相减 (取项目数 (), 1))
.如果结束

赋值 (., “单步解说”)
赋值 (., 棋谱 [当前手], 备注)

.子程序 _备注编辑框_鼠标右键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

弹出菜单 ()
返回 (假)

.子程序 _更新_被选择, 空白型, , 
.如果真 (等于 (., “单步解说”))
    .如果真 (不等于 (., -1))
        赋值 (棋谱 [相加 (相乘 (., 2), 1)].备注, .)
    .如果真结束
    .如果真 (不等于 (., -1))
        赋值 (棋谱 [相加 (相乘 (., 2), 2)].备注, .)
    .如果真结束
    返回 ()
.如果真结束

.如果真 (等于 (., “棋局信息”))
    赋值 (棋局信息, .)
.如果真结束


.子程序 _撤消_被选择, 空白型, , 
199.发送信息 (0, 0)

.子程序 _剪切_被选择, 空白型, , 
768.发送信息 (0, 0)

.子程序 _复制_被选择, 空白型, , 
769.发送信息 (0, 0)

.子程序 _粘贴_被选择, 空白型, , 
770.发送信息 (0, 0)

.子程序 _删除_被选择, 空白型, , 
赋值 (., “”)

.子程序 _全选_被选择, 空白型, , 
赋值 (., -1)

.子程序 _查看棋局信息_被选择, 空白型, , 
信息框 (棋局信息, 0, “ 棋局信息：”)

.子程序 _修改棋局信息_被选择, 空白型, , 
输入框 (相加 (“请输入或修改棋局信息：”, #换行符, #换行符, “棋局信息一般用于描述本盘棋的背景、输赢等额外信息。”), “修改棋局信息”, 棋局信息, 棋局信息, )
.如果真 (等于 (., “棋局信息”))
    赋值 (., 棋局信息)
.如果真结束


.子程序 _复盘_被选择, 空白型, , 
.如果真 (不等于 (当前手, 0))
    赋值 (棋谱 [当前手], 备注, .) ' 记录最后一手棋的备注(如果有的话)
.如果真结束
赋值 (下棋状态, 假)
.清除 ()
清空 ()
清空 ()
赋值 (., “棋局信息”)
赋值 (., 棋局信息)
赋值 (复盘序号, 0)
载入 (复盘窗口, _启动窗口, 假)

赋值 (., 0)
赋值 (., 0)
赋值 (., 假) ' "第xx手，该x方行棋"所在的父控件

.子程序 _保存棋盘图片_被选择, 空白型, , 
.如果真 (打开 ())
    写到文件 (., .取图片 ())
    信息框 (相加 (“保存图片成功!”, #换行符, .), 0, )
.如果真结束


.子程序 _黑方时钟_周期事件, 空白型, , 
赋值 (., 到文本 (相加 (到数值 (.), 1)))
.如果真 (等于 (取文本长度 (.), 1))
    赋值 (., 相加 (“0”, .))
.如果真结束
.如果真 (等于 (., “60”))
    赋值 (., “00”)
    赋值 (., 到文本 (相加 (到数值 (.), 1)))
.如果真结束
.如果真 (等于 (取文本长度 (.), 1))
    赋值 (., 相加 (“0”, .))
.如果真结束

赋值 (., 到文本 (相加 (到数值 (.), 1)))
.如果真 (等于 (取文本长度 (.), 1))
    赋值 (., 相加 (“0”, .))
.如果真结束
.如果真 (等于 (., “60”))
    赋值 (., “00”)
    赋值 (., 到文本 (相加 (到数值 (.), 1)))
.如果真结束
.如果真 (等于 (取文本长度 (.), 1))
    赋值 (., 相加 (“0”, .))
.如果真结束
.如果真 (等于 (., “60”))
    赋值 (., “00”)
    赋值 (., 到文本 (相加 (到数值 (.), 1)))
.如果真结束


.子程序 _白方时钟_周期事件, 空白型, , 
赋值 (., 到文本 (相加 (到数值 (.), 1)))
.如果真 (等于 (取文本长度 (.), 1))
    赋值 (., 相加 (“0”, .))
.如果真结束
.如果真 (等于 (., “60”))
    赋值 (., “00”)
    赋值 (., 到文本 (相加 (到数值 (.), 1)))
.如果真结束
.如果真 (等于 (取文本长度 (.), 1))
    赋值 (., 相加 (“0”, .))
.如果真结束

赋值 (., 到文本 (相加 (到数值 (.), 1)))
.如果真 (等于 (取文本长度 (.), 1))
    赋值 (., 相加 (“0”, .))
.如果真结束
.如果真 (等于 (., “60”))
    赋值 (., “00”)
    赋值 (., 到文本 (相加 (到数值 (.), 1)))
.如果真结束
.如果真 (等于 (取文本长度 (.), 1))
    赋值 (., 相加 (“0”, .))
.如果真结束
.如果真 (等于 (., “60”))
    赋值 (., “00”)
    赋值 (., 到文本 (相加 (到数值 (.), 1)))
.如果真结束


.子程序 计时和提醒, 空白型, , 
赋值 (., 到文本 (相加 (当前手, 1)))
.如果 (等于 (求余数 (当前手, 2), 0))
     ' 该黑方下
    赋值 (., 1000)
    赋值 (., 0)
    赋值 (., “00”)
    赋值 (., “00”)
    赋值 (., #黑色)
    赋值 (., “黑方”)
    
.否则
     ' 该白方下
    赋值 (., 0)
    赋值 (., 1000)
    赋值 (., “00”)
    赋值 (., “00”)
    赋值 (., #白色)
    赋值 (., “白方”)
.如果结束


.子程序 _黑方姓名编辑框_获得焦点, 空白型, , 
赋值 (., -1)

.子程序 _白方姓名编辑框_获得焦点, 空白型, , 
赋值 (., -1)

.子程序 _使用说明_被选择, 空白型, , 
载入 (使用说明窗口, _启动窗口, 假)

.子程序 _闪烁时钟_周期事件, 空白型, , 
.如果 (等于 (下棋状态, 真))
    .如果 (等于 (求余数 (当前手, 2), 0))
         ' 该黑方下棋
        赋值 (., 取反 (.))
        赋值 (., 真)
    .否则
         ' 该白方下棋
        赋值 (., 取反 (.))
        赋值 (., 真)
    .如果结束
    
    .如果真 (不等于 (., 真)) ' 防止闪烁
        赋值 (., 真)
    .如果真结束
    
.否则
    赋值 (., 真)
    赋值 (., 真)
    .如果真 (不等于 (., 假)) ' 防止闪烁
        赋值 (., 假)
    .如果真结束
    
.如果结束


.子程序 _设置_被选择, 空白型, , 
载入 (设置窗口, _启动窗口, 假)

.子程序 _关于_被选择, 空白型, , 
载入 (关于窗口, _启动窗口, 假)

.窗口程序集 窗口程序集3, , , 

.子程序 _下一手按钮_被单击, 空白型, , 
.局部变量 x, 逻辑型, , , 

.如果真 (等于 (棋谱 [相加 (复盘序号, 1)].序号, 0))
    返回 ()
.如果真结束

赋值 (复盘序号, 相加 (复盘序号, 1))
.如果真 (不等于 (棋谱 [复盘序号], 序号, 0))
    赋值 (x, 可有子数组 [棋谱] [复盘序号], 行 [棋谱] [复盘序号], 列)
    赋值 (可有子数组 [棋谱] [复盘序号], 行 [棋谱] [复盘序号], 列, 假)
    下棋子 (复盘序号, 棋谱 [复盘序号], 行, 棋谱 [复盘序号], 列)
    赋值 (可有子数组 [棋谱] [复盘序号], 行 [棋谱] [复盘序号], 列, x)
    
     ' 以下更新列表框中的下棋记录
    .如果 (等于 (求余数 (复盘序号, 2), 1))
         ' 黑白两方的棋谱分别写到两个列表框中
        _启动窗口.加入项目 (., 相加 (“第”, 到文本 (复盘序号), “手:(”, 到文本 (棋谱 [复盘序号], 行), “,”, 到文本 (棋谱 [复盘序号], 列), “)”), )
        赋值 (_启动窗口.., 相减 (_启动窗口.取项目数 (.), 1))
        _启动窗口.选择项目 (., _启动窗口.., 假)
        
    .否则
        _启动窗口.加入项目 (., 相加 (“第”, 到文本 (复盘序号), “手:(”, 到文本 (棋谱 [复盘序号], 行), “,”, 到文本 (棋谱 [复盘序号], 列), “)”), )
        赋值 (_启动窗口.., 相减 (_启动窗口.取项目数 (.), 1))
        _启动窗口.选择项目 (., _启动窗口.., 假)
    .如果结束
    
    赋值 (_启动窗口.., “单步解说”)
    赋值 (_启动窗口.., 棋谱 [复盘序号], 备注)
.如果真结束

赋值 (., 假)
.如果真 (等于 (棋谱 [相加 (复盘序号, 1)].序号, 0))
    赋值 (., 真)
.如果真结束

获取焦点 ()

.子程序 _复盘窗口_创建完毕, 空白型, , 
.如果 (等于 (棋谱 [1].序号, 0))
    赋值 (., 真)
    赋值 (., 真)
    赋值 (., 真)
    
.否则
    赋值 (., 假)
    赋值 (., 假)
    赋值 (., 假)
.如果结束

获取焦点 ()

.子程序 _全部显示按钮_被单击, 空白型, , 
.局部变量 x, 逻辑型, , , 
.局部变量 i, 整数型, , , 

_启动窗口.清空 (.)
_启动窗口.清空 (.)

赋值 (i, 1)
.判断循环首 (并且 (不等于 (棋谱 [i], 序号, 0), 小于或等于 (i, 361)))
    赋值 (x, 可有子数组 [棋谱] [i], 行 [棋谱] [i], 列)
    赋值 (可有子数组 [棋谱] [i], 行 [棋谱] [i], 列, 假)
    下棋子 (i, 棋谱 [i], 行, 棋谱 [i], 列, 假)
    赋值 (可有子数组 [棋谱] [i], 行 [棋谱] [i], 列, x)
    
     ' 以下更新列表框中的下棋记录
    .如果 (等于 (求余数 (2), 1))
         ' 黑白两方的棋谱分别写到两个列表框中
        _启动窗口.加入项目 (., 相加 (“第”, 到文本 (i), “手:(”, 到文本 (棋谱 [i], 行), “,”, 到文本 (棋谱 [i], 列), “)”), )
        赋值 (_启动窗口.., 相减 (_启动窗口.取项目数 (.), 1))
        _启动窗口.选择项目 (., _启动窗口.., 假)
        
    .否则
        _启动窗口.加入项目 (., 相加 (“第”, 到文本 (i), “手:(”, 到文本 (棋谱 [i], 行), “,”, 到文本 (棋谱 [i], 列), “)”), )
        赋值 (_启动窗口.., 相减 (_启动窗口.取项目数 (.), 1))
        _启动窗口.选择项目 (., _启动窗口.., 假)
    .如果结束
    
    赋值 (i, 相加 (i, 1))
.判断循环尾 ()
赋值 (复盘序号, 相减 (i, 1))

.如果 (等于 (i, 1)) ' 如果没有下任何子就开始复盘,则i=1
    赋值 (_启动窗口.., “棋局信息”)
    赋值 (_启动窗口.., 棋局信息)
    赋值 (., 真)
    赋值 (., 真)
    
.否则
    赋值 (_启动窗口.., “单步解说”)
    赋值 (_启动窗口.., 棋谱 [相减 (i, 1)].备注)
    赋值 (., 假)
    赋值 (., 真)
.如果结束

获取焦点 ()

.子程序 _重新开始按钮_被单击, 空白型, , 
_启动窗口.清除 (., , , , )
_启动窗口.清空 (.)
_启动窗口.清空 (.)
赋值 (_启动窗口.., “棋局信息”)
赋值 (_启动窗口.., 棋局信息)
赋值 (复盘序号, 0)
赋值 (., 真)
.如果 (等于 (棋谱 [1].序号, 0))
    赋值 (., 真)
.否则
    赋值 (., 假)
.如果结束

获取焦点 ()

.子程序 _上一手按钮_被单击, 空白型, , 
.如果真 (或者 (小于 (复盘序号, 1), 等于 (棋谱 [复盘序号], 序号, 0)))
    返回 ()
.如果真结束

赋值 (., 假)
_启动窗口.清除 (., 相加 (21, 相乘 (19, 相减 (棋谱 [复盘序号], 列, 1))), 相加 (20, 相乘 (19, 相减 (棋谱 [复盘序号], 行, 1))), 19, 19)
.如果真 (等于 (复盘序号, 1))
    _启动窗口.清空 (.)
    赋值 (_启动窗口.., “棋局信息”)
    赋值 (_启动窗口.., 棋局信息)
    赋值 (., 真)
    赋值 (复盘序号, 0)
    返回 ()
.如果真结束
_启动窗口.清除 (., 相加 (21, 相乘 (19, 相减 (棋谱 [相减 (复盘序号, 1)].列, 1))), 相加 (20, 相乘 (19, 相减 (棋谱 [相减 (复盘序号, 1)].行, 1))), 19, 19)
.如果 (等于 (求余数 (复盘序号, 2), 0))
    _启动窗口.画图片 (., 载入图片 (#黑当前子), 相加 (21, 相乘 (19, 相减 (棋谱 [相减 (复盘序号, 1)].列, 1))), 相加 (20, 相乘 (19, 相减 (棋谱 [相减 (复盘序号, 1)].行, 1))), , , )
.否则
    _启动窗口.画图片 (., 载入图片 (#白当前子), 相加 (21, 相乘 (19, 相减 (棋谱 [相减 (复盘序号, 1)].列, 1))), 相加 (20, 相乘 (19, 相减 (棋谱 [相减 (复盘序号, 1)].行, 1))), , , )
     ' “19”是棋盘中相邻两线间距，“21”“20”跟棋盘左上角与画板左上角位置有关，不必深究。
.如果结束

 ' 以下更新列表框中的下棋记录
.如果 (等于 (求余数 (复盘序号, 2), 1))
     ' 删除列表框中的最后一步棋谱，并选中上一步
    _启动窗口.删除项目 (., 相减 (_启动窗口.取项目数 (.), 1))
    _启动窗口.选择项目 (., _启动窗口.., 假)
    赋值 (_启动窗口.., 相减 (_启动窗口.取项目数 (.), 1))
    
.否则
    _启动窗口.删除项目 (., 相减 (_启动窗口.取项目数 (.), 1))
    _启动窗口.选择项目 (., _启动窗口.., 假)
    赋值 (_启动窗口.., 相减 (_启动窗口.取项目数 (.), 1))
.如果结束

赋值 (_启动窗口.., “单步解说”)
赋值 (_启动窗口.., 棋谱 [相减 (复盘序号, 1)].备注)
赋值 (复盘序号, 相减 (复盘序号, 1))

获取焦点 ()

.子程序 _复盘窗口_被激活, 空白型, , 
获取焦点 ()

.子程序 _编辑框1_放开某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (或者 (等于 (键代码, #左光标键), 等于 (键代码, #上光标键)))
    .如果真 (等于 (., 真))
        鸣叫 ()
        返回 (假)
    .如果真结束
    _上一手按钮_被单击 ()
.如果真结束
.如果真 (或者 (等于 (键代码, #右光标键), 等于 (键代码, #下光标键), 等于 (键代码, #回车键)))
    .如果真 (等于 (., 真))
        鸣叫 ()
        返回 (假)
    .如果真结束
    _下一手按钮_被单击 ()
.如果真结束
返回 (假)

.子程序 _复盘窗口_将被销毁, 空白型, , 复盘窗口销毁表示复盘已结束
_全部显示按钮_被单击 ()
赋值 (下棋状态, 真)
_启动窗口.激活 ()

赋值 (_启动窗口.., 真) ' "第xx手，该x方行棋"所在的父控件
计时和提醒 ()

.窗口程序集 窗口程序集2, , , 

.子程序 _列表框1_列表项被选择, 空白型, , 
.判断开始 (等于 (., 0))
    写说明1 ()
.判断 (等于 (., 1))
    赋值 (., 0)
    写说明1 ()
.判断 (等于 (., 2))
    赋值 (., “”)
.判断 (等于 (., 3))
    
.判断 (等于 (., 4))
    
.判断 (等于 (., 5))
    
.判断 (等于 (., 6))
    
.判断 (等于 (., 7))
    
.判断 (等于 (., 8))
    
.判断 (等于 (., 9))
    
.判断 (等于 (., 10))
    
.判断 (等于 (., 11))
    
.判断 (等于 (., 12))
    
.默认
    
.判断结束


.子程序 写说明1, 空白型, , 
赋值 (., 相加 (“LIIGO的围棋打谱程序”, #换行符, “    ”))
相加 (“这是一款功能强大的、专业的围棋打谱软件。它的主要功能有：”, #换行符).加入文本 ()
相加 (“    ――单人打谱”, #换行符).加入文本 ()
相加 (“    ――两人对局”, #换行符).加入文本 ()
相加 (“    ――自动计时”, #换行符).加入文本 ()
相加 (“    ――存取棋谱”, #换行符).加入文本 ()
相加 (“    ――棋局信息”, #换行符).加入文本 ()
相加 (“    ――单步解说”, #换行符).加入文本 ()
相加 (“    ――悔棋”, #换行符).加入文本 ()
相加 (“    ――复盘”, #换行符).加入文本 ()
“    本软件由 昱尧工作室 强力推出，技术总监：LIIGO。2002/6/6”.加入文本 ()
赋值 (., 0)

.窗口程序集 窗口程序集4, , , 

.子程序 _单步用时限制组合框_列表项被选择, 空白型, , 
赋值 (., 假)
赋值 (., 真)
赋值 (单步用时, .取项目数值 (.))

.子程序 _总用时限制组合框_列表项被选择, 空白型, , 
赋值 (., 假)
赋值 (., 真)
赋值 (总用时, .取项目数值 (.))

.子程序 _变色线控制选择框_被单击, 空白型, , 
赋值 (_启动窗口.., .)

.子程序 _单选框1_被单击, 空白型, , 
赋值 (单步用时, 0)

.子程序 _单选框3_被单击, 空白型, , 
赋值 (总用时, 0)


 ' 不属于任何一个程序集、类模块的函数：
