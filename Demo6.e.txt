 ' 文件类型：Windows窗口程序

 ' 程序名称：Demo
 ' 程序描述：Demo
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0



.常量 引擎风格_全屏模式, "1", 隐藏, 
.常量 引擎风格_隐藏鼠标, "2", 隐藏, 
.常量 引擎风格_反走样_点, "4", 隐藏, 开启反走样点后，对于像素点的描绘将更平滑细腻
.常量 引擎风格_反走样_线, "8", 隐藏, 开启反走样线后，对于线条的描绘将更平滑细腻
.常量 引擎风格_反走样_面, "16", 隐藏, 开启反走样线后，对于矩形的描绘将更平滑细腻
.常量 引擎事件_按键按下, "1", 隐藏, 参数一：按键代码（整数型）
.常量 引擎事件_按键弹起, "2", 隐藏, 参数一：按键代码（整数型）
.常量 引擎事件_鼠标滚轮事件, "3", 隐藏, 参数一：转动量（整数型）
.常量 引擎事件_获得焦点, "4", 隐藏, 
.常量 引擎事件_失去焦点, "5", 隐藏, 
.常量 引擎事件_大小被改变, "6", 隐藏, 
.常量 引擎事件_将被销毁, "7", 隐藏, 
.常量 鼠标左键, "1", 隐藏, 
.常量 鼠标右键, "2", 隐藏, 
.常量 鼠标中键, "4", 隐藏, 
.常量 编辑框事件_内容被改变, "1", 隐藏, 参数一：现行内容（文本型），参数二：改变的内容（文本型），参数三：是否为删除内容（逻辑型）
.常量 编辑框事件_光标位置被移动, "2", 隐藏, 参数一：新光标位置（整数型），参数二：旧光标位置（整数型），参数三：起始选择位置（整数型），参数四：是否为用户手动移动（逻辑型）


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 5 0 系统核心支持库



 ' 所需要的模块
 ' 丫米2D图像引擎 C:\Users\Administrator\Desktop\YummyEngine.ec


数据类型 YM_点, 公开, 
    .成员 x, 小数型, , , 
    .成员 y, 小数型, , , 

数据类型 YM_矩形, 公开, 
    .成员 x, 整数型, , , 
    .成员 y, 整数型, , , 
    .成员 w, 整数型, , , 
    .成员 h, 整数型, , , 

数据类型 YM_位置, 公开, 
    .成员 x, 整数型, , , 
    .成员 y, 整数型, , , 

数据类型 YM_颜色值, 公开, 
    .成员 r, 字节型, , , 
    .成员 g, 字节型, , , 
    .成员 b, 字节型, , , 
    .成员 a, 字节型, , , 

数据类型 YM_纹理, 公开, 
    .成员 纹理指针, 整数型, , , 
    .成员 宽度, 整数型, , , 
    .成员 高度, 整数型, , , 


.程序集 程序集1, , , 

.程序集变量 文字1, YM_文字渲染, , , 
.程序集变量 文字2, YM_文字渲染, , , 
.程序集变量 文字3, YM_文字渲染, , , 
.程序集变量 纹理指针, YM_纹理, , , 
.程序集变量 纹理指针2, YM_纹理, , , 
.程序集变量 纹理指针3, YM_纹理, , , 
.子程序 _启动子程序, 整数型, , 请在本子程序中放置动态链接库初始化代码
公共_置错误回调函数 (到整数 (&错误管理))
引擎_置屏幕背景色 (公共_到YM颜色 (0, 255, 255, 0))
引擎_创建 () ' , , 窗口1.取窗口句柄 ())
文字1.创建 (12, “宋体”, 0, 假, 假, 真, 0)
文字2.创建 (24, “宋体”, 0, 假, 假, 假, 800, 16)
文字3.创建 (16, “黑体”, 24, 真, 真)
赋值 (纹理指针, 纹理_载入dds_argb (读入文件 (“139.dds”)))
赋值 (纹理指针3, 纹理_载入bmp_24bit (读入文件 (“roomwall.bmp”)))
赋值 (纹理指针2.宽度, 1)
赋值 (纹理指针2.高度, 1)
 ' 纹理指针2.纹理指针 是0
引擎_启动循环 (到整数 (&消息循环), 60)
引擎_销毁 ()
返回 (0) ' 返回值被忽略。

.子程序 消息循环, 空白型, , 
.局部变量 n, 整数型, , , 
.局部变量 a, 整数型, , , 

引擎_清屏 ()
纹理_渲染 (纹理指针)
纹理_渲染 (纹理指针, 公共_到YM点 (320, 120), 公共_到YM颜色 (取启动时间 (), 255, 相除 (取启动时间 (), 3), 255), 公共_到YM点 (-0.3, 0.2), 相减 (4660210, 24)) ' 缩放比例填负值时图片会被翻转，但是注意x坐标
文字1.显示 (“1231312★3■123”, , 公共_到YM颜色 (相除 (取启动时间 (), 32), 相除 (取启动时间 (), 24), 相除 (取启动时间 (), 16), 相除 (取启动时间 (), 48)))
文字2.显示 (“图片和文字共同显示”, 公共_到YM点 (32, 64), 公共_到YM颜色 (相除 (取启动时间 (), 12), 相除 (取启动时间 (), 64), 相除 (取启动时间 (), 48), 相除 (取启动时间 (), 32)))
文字3.显示 (“1231312★3■123”, 公共_到YM点 (32, 128), 公共_到YM颜色 (255, 相除 (取启动时间 (), 24), 相除 (取启动时间 (), 32), 相除 (取启动时间 (), 48)))
纹理_渲染 (纹理指针2, 公共_到YM点 (320, 120), 公共_到YM颜色 (取启动时间 (), 相除 (取启动时间 (), 24), 相除 (取启动时间 (), 32), 32), 公共_到YM点 (200, 200))
纹理_渲染_拉伸 (纹理指针3, 公共_到YM点 (245, 234), 公共_到YM点 (630, 120), 公共_到YM点 (128, 444), 公共_到YM点 (400, 484))
 ' 引擎_渲染纹理 (纹理指针, , , 1, #pi)
引擎_更新屏幕 ()
引擎_置标题 (相加 (到文本 (引擎_取FPS ()), “,”, 到文本 (引擎_取FPS (1)), “,”, 到文本 (引擎_取FPS (2))))

.子程序 错误管理, 空白型, , 
.参数 错误代码, 整数型, , 

信息框 (公共_取错误代码对应内容 (错误代码), #错误图标, “ERROR”)

.类模块 YM_文字渲染, , , 

.子程序 创建, 逻辑型, , 
.参数 字体大小, 整数型, 可空, 
.参数 字体名, 文本型, 可空, 
.参数 旋转角度, 小数型, 可空, 
.参数 是否倾斜, 逻辑型, 可空, 
.参数 是否加下划线, 逻辑型, 可空, 
.参数 是否加删除线, 逻辑型, 可空, 
.参数 加粗值, 整数型, 可空, 越大字体越粗，0为不加粗，1000是最粗。默认加粗是700。
.参数 字体宽度, 整数型, 可空, 留空为Windows默认值，也可以自行调节设置得更宽或更窄



.子程序 是否已创建, 逻辑型, , 


.子程序 显示, 逻辑型, , 
.参数 文本内容, 文本型, , 
.参数 渲染坐标, YM_点, 可空, 
.参数 渲染颜色, YM_颜色值, 可空, 



.子程序 销毁, 逻辑型, , 


.子程序 取宽度, 整数型, , 


.子程序 取高度, 整数型, , 


.类模块 YM_编辑框, , , 

.子程序 创建, 逻辑型, , 
.参数 编辑框宽高, YM_点, 可空, 默认为128*128
.参数 是否允许多行, 逻辑型, 可空, 
.参数 是否为密码模式, 逻辑型, 可空, 
.参数 是否只允许输入数值, 逻辑型, 可空, 
.参数 文字色, YM_颜色值, 可空, 不支持透明通道分量
.参数 最大输入长度, 整数型, 可空, 小于等于0为无限



.子程序 是否已创建, 逻辑型, , 


.子程序 置焦点, 空白型, , 
.参数 焦点值, 逻辑型, , 



.子程序 取焦点, 逻辑型, , 


.子程序 取内容, 文本型, , 


.子程序 置内容, 空白型, , 使用该指令后光标自动移动到最后，此指令不会响应挂接事件
.参数 新内容, 文本型, , 



.子程序 置光标位置, 空白型, , 注意光标位置不要插入到双字节字符中间，此指令不会响应挂接事件
.参数 新光标位置, 整数型, , 
.参数 起始选择位置, 整数型, 可空, 若此参数不为空且不等于光标位置，则会选中从起始选择位置到光标位置的文本



.子程序 取选中文本, 文本型, , 


.子程序 显示, 逻辑型, , 
.参数 渲染文字, YM_文字渲染, 参考, 请确认此对象已经创建，否则将渲染文字失败
.参数 显示坐标, YM_点, 可空, 
.参数 显示颜色, YM_颜色值, 可空, 
.参数 选中文字背景色, YM_颜色值, 可空, 默认为R：32，G：128，B：255，A：255
.参数 光标宽度, 整数型, 可空, 默认为1
.参数 光标闪烁间隔毫秒数, 整数型, 可空, 默认为500，该值小于等于0时不会闪烁
.参数 光标颜色, YM_颜色值, 可空, 



.子程序 挂接事件, 空白型, , 
.参数 挂接事件编号, 整数型, , 请使用“编辑框事件_”开头的常量，关于函数内容请详细参阅常量说明
.参数 子程序指针, 整数型, , 



.子程序 销毁, 逻辑型, , 


.程序集 __HIDDEN_TEMP_MOD__, , , 

.子程序 公共_取高16位, 整数型, , 
.参数 参数, 整数型, , 



.子程序 公共_取低16位, 整数型, , 
.参数 参数, 整数型, , 



.子程序 公共_取高8位, 字节型, , 
.参数 参数, 短整数型, , 



.子程序 公共_取低8位, 字节型, , 
.参数 参数, 短整数型, , 



.子程序 公共_取高24位, 整数型, , 
.参数 参数, 整数型, , 



.子程序 公共_取低24位, 整数型, , 
.参数 参数, 整数型, , 



.子程序 引擎_是否已创建, 逻辑型, , 引擎是否已经被创建，引擎被创建后返回真，销毁后返回假


.子程序 引擎_取启动时间, 整数型, , 取引擎启动时的系统时间，可以用核心库的“取启动时间（）”减这个命令取到的时间差算出引擎启动的逻辑时间


.子程序 引擎_取窗口句柄, 整数型, , 取回引擎窗口的句柄（hwnd）


.子程序 引擎_置窗口可视, 整数型, , 置引擎窗口的可视性，ShowWindow
.参数 可视性, 逻辑型, , 



.子程序 引擎_取窗口可视, 逻辑型, , IsWindowVisible


.子程序 引擎_清屏, 逻辑型, , 


.子程序 引擎_调节屏幕大小, 逻辑型, , 
.参数 屏幕宽度, 整数型, , 
.参数 屏幕高度, 整数型, , 



.子程序 引擎_GetDeviceContext, 整数型, , 这个函数主要给需要自己拓展高级功能的人使用，一般不需要用到


.子程序 引擎_GetOpenGLRenderingContext, 整数型, , 这个函数主要给需要自己拓展高级功能的人使用，一般不需要用到


.子程序 引擎_置屏幕背景色, 空白型, , 
.参数 屏幕的背景色, YM_颜色值, , 



.子程序 引擎_更新屏幕, 逻辑型, , 结束渲染，把渲染的内容更新到屏幕上


.子程序 公共_取错误代码对应内容, 文本型, , 根据返回的错误提示代码返回错误内容。之所以要单独写一个函数取内容，是想避免把这些字符编译出去。建议大家不要在正式程序中使用这个函数，建议调试使用
.参数 错误代码, 整数型, , 56



.子程序 公共_置错误回调函数, 整数型, , 当引发错误时将执行回调函数指针，错误回调函数可以接受到一个整数型参数，再用“公共_取错误代码对应内容”函数可以取到描述错误的详细内容，返回原函数指针
.参数 错误回调函数指针, 整数型, , 



.子程序 公共_取最后错误, 整数型, , 取得引擎运行的最后错误


.子程序 引擎_启动循环, 逻辑型, , 启动引擎开始消息循环（有能力者也可以不使用此函数自己构造消息循环）
.参数 函数地址, 整数型, , 每次想要执行的函数地址
.参数 FPS, 小数型, 可空, 每秒执行次数，不可过高，默认为60



.子程序 引擎_取FPS, 整数型, , 取实际运行的FPS值（只有使用了引擎自带的循环才可以取到，自己构造消息循环此函数无效）
.参数 FPS类型, 字节型, 可空, 0：普通FPS（得到的是一秒内的实际运行FPS），1：瞬时FPS（得到的是瞬时的FPS），2：平均FPS（得到的是消息循环函数的总执行次数除以总执行时间的值），关于平均FPS和瞬时FPS的理解可以参考高中物理必修一第一章。



.子程序 引擎_取按键状态, 逻辑型, , 检测某个按键是否被按着
.参数 按键代码, 整数型, , 



.子程序 纹理_载入dds_argb, YM_纹理, , 
.参数 图像数据, 字节集, , 



.子程序 公共_取颜色值, YM_颜色值, , 
.参数 红色色相, 字节型, , 
.参数 绿色色相, 字节型, , 
.参数 蓝色色相, 字节型, , 
.参数 不透明度, 字节型, , 



.子程序 引擎_销毁, 逻辑型, , 销毁引擎并释放内存


.子程序 引擎_创建, 逻辑型, , 创建引擎，成功返回真，失败返回假，并可以使用“公共_取最后错误()”取得创建失败的原因。
.参数 窗口标题, 文本型, 可空, 
.参数 窗口图标句柄, 整数型, 可空, 
.参数 窗口句柄, 整数型, 可空, 为空或为零时则默认自行创建窗口，可以绑定窗口控件句柄
.参数 屏幕宽度, 整数型, 可空, 为空或为零时则默认800
.参数 屏幕高度, 整数型, 可空, 为空或为零时则默认600
.参数 引擎风格, 整数型, 可空, 使用“位或()”把“#引擎风格_”开头的常量并起来



.子程序 引擎_取鼠标位置, 整数型, , 用“公共_取低16位”获得x坐标，用“公共_取高16位”获得y坐标


.子程序 引擎_置标题, 逻辑型, , 
.参数 标题文本, 文本型, , 



.子程序 纹理_渲染, 空白型, , 
.参数 纹理, YM_纹理, , 
.参数 渲染坐标, YM_点, 可空, 
.参数 渲染颜色, YM_颜色值, 可空, 
.参数 缩放比例, YM_点, 可空, 
.参数 旋转角度, 小数型, 可空, 



.子程序 纹理_销毁, 空白型, , 
.参数 纹理指针, 整数型, , 



.子程序 公共_到YM矩形, YM_矩形, , 
.参数 x, 整数型, , 
.参数 y, 整数型, , 
.参数 w, 整数型, , 
.参数 h, 整数型, , 



.子程序 公共_到YM颜色, YM_颜色值, , 
.参数 红色色相, 字节型, , 
.参数 绿色色相, 字节型, , 
.参数 蓝色色相, 字节型, , 
.参数 不透明度, 字节型, , 



.子程序 公共_到YM位置, YM_位置, , 
.参数 x, 整数型, , 
.参数 y, 整数型, , 



.子程序 公共_到YM点, YM_点, , 
.参数 x, 小数型, , 
.参数 y, 小数型, , 



.子程序 引擎_启动循环2, 逻辑型, , 启动引擎开始消息循环（有能力者也可以不使用此函数自己构造消息循环）
.参数 函数地址, 整数型, , 每次想要执行的函数地址
.参数 FPS, 小数型, 可空, 每秒执行次数，不可过高，默认为60



.子程序 引擎_窗口获得焦点, 逻辑型, , 


.子程序 引擎_窗口设为活动窗口, 逻辑型, , 


.子程序 引擎_移动窗口, 逻辑型, , 
.参数 左边, 整数型, , 
.参数 顶边, 整数型, , 
.参数 宽度, 整数型, , 
.参数 高度, 整数型, , 



.子程序 引擎_取OpenGL版本号, 文本型, , 其实这个完全可以用来计算硬盘特征字，这个是显卡上的硬件特征，不会随系统改变


.子程序 引擎_取OpenGL拓展兼容性, 文本型, , 其实这个完全可以用来计算硬盘特征字，这个是显卡上的硬件特征，不会随系统改变


.子程序 引擎_取OpenGL厂商, 文本型, , 其实这个完全可以用来计算硬盘特征字，这个是显卡上的硬件特征，不会随系统改变


.子程序 引擎_取OpenGL渲染设备名, 文本型, , 显卡名，其实这个完全可以用来计算硬盘特征字，这个是显卡上的硬件特征，不会随系统改变


.子程序 公共_到RGBA颜色值, 整数型, , 
.参数 YM_颜色值, YM_颜色值, , 



.子程序 公共_到RGB颜色值, 整数型, , 直接忽略透明度分量
.参数 YM_颜色值, YM_颜色值, , 



.子程序 公共_取反色, YM_颜色值, , 
.参数 颜色值, YM_颜色值, , 



.子程序 纹理_载入bmp_24bit, YM_纹理, , 
.参数 图像数据, 字节集, , 



.子程序 引擎_截图, 字节集, , 截图得到的不是图片数据，而是RGB编码，RGB编码可以直接使用“纹理_载入_RGB编码”载入到纹理，也可以使用“公共_RGB编码到BMP”转换为BMP再输出


.子程序 公共_RGB编码到BMP, 字节集, , 
.参数 RGB编码, 字节集, , 
.参数 图片宽度, 整数型, , 
.参数 图片高度, 整数型, , 



.子程序 纹理_载入_RGB编码, YM_纹理, , 
.参数 RGB编码, 字节集, , 
.参数 纹理宽度, 整数型, , 
.参数 纹理高度, 整数型, , 



.子程序 引擎_截图输出, 逻辑型, , 
.参数 文件路径, 文本型, , 



.子程序 纹理_渲染_拉伸, 空白型, , 自动拉伸到四个端点，不过似乎不是一个平面内的了
.参数 纹理, YM_纹理, , 
.参数 渲染坐标_左上角, YM_点, 可空, 
.参数 渲染坐标_右上角, YM_点, 可空, 
.参数 渲染坐标_右下角, YM_点, 可空, 
.参数 渲染坐标_左下角, YM_点, 可空, 
.参数 渲染颜色, YM_颜色值, 可空, 
.参数 旋转角度, 小数型, 可空, 




 ' 不属于任何一个程序集、类模块的函数：
