 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 380
    高度 = 250
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “近在眼前－用API实现置托盘图标”
    帮助文件名 = “”





 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 0 系统核心支持库




数据类型 NOTIFYICONDATA, , 
    .成员 cbSize, 整数型, , , 
    .成员 hwnd, 整数型, , , 
    .成员 Uid, 整数型, , , 
    .成员 UFlags, 整数型, , , 
    .成员 UCallbackMessage, 整数型, , , 
    .成员 HIcon, 整数型, , , 
    .成员 SzTip, 文本型, , , 

.全局变量 默认窗口, 子程序指针, , , 

.DLL命令 ExtractIconA, 整数型, "shell32.dll", "ExtractIconA", , 
    .参数 窗口句柄, 整数型, , 
    .参数 文件名称, 文本型, , 
    .参数 图标索引, 整数型, , 

.DLL命令 Shell_NotifyIconA, 整数型, "shell32.dll", "Shell_NotifyIconA", , 
    .参数 dwMessage, 整数型, , 
    .参数 lpData, NOTIFYICONDATA, , 

.DLL命令 CallWindowProc, 整数型, "user32", "CallWindowProcA", , 
    .参数 lpPrevWndFunc, 子程序指针, , 
    .参数 HWnd, 整数型, , 
    .参数 Msg, 整数型, , 
    .参数 wParam, 整数型, , 
    .参数 lParam, 整数型, , 

.DLL命令 SetWindowLong, 子程序指针, "user32", "SetWindowLongA", , 
    .参数 HWnd, 整数型, , 
    .参数 nIndex, 整数型, , 
    .参数 dwNewLong, 子程序指针, , 

.DLL命令 SendMessage, 整数型, "user32", "SendMessageA", , 
    .参数 HWnd, 整数型, , 
    .参数 wMsg, 整数型, , 
    .参数 wParam, 整数型, , 
    .参数 lParam, 整数型, , Any型,根据需要可以设置成不同的类型

.窗口程序集 窗口程序集1, , , 

.程序集变量 结构, NOTIFYICONDATA, , , 
.子程序 __启动窗口_创建完毕, 空白型, , 
赋值 (默认窗口, SetWindowLong (取窗口句柄 (), -4, &托盘事件处理))
赋值 (结构.cbSize, 88)
赋值 (结构.hwnd, _启动窗口.取窗口句柄 ())
赋值 (结构.Uid, 0)
赋值 (结构.UFlags, 位或 (2, 4, 1))
赋值 (结构.UCallbackMessage, 2000) ' 2000为自定义消息，你可以用1024+1或以上、65565以下的任何值
赋值 (结构.SzTip, “近在眼前－API托盘图标”) ' 晕死！托盘提示怎么显示不了呢？
赋值 (结构.HIcon, ExtractIconA (取窗口句柄 (), 取执行文件名 (), 0))
Shell_NotifyIconA (0, 结构)
 ' 赋值 (结构.SzTip, “近在眼前－API托盘图标”)
 ' 赋值 (结构.UFlags, 1)
 ' Shell_NotifyIconA (1, 结构)


.子程序 __启动窗口_将被销毁, 空白型, , 
Shell_NotifyIconA (2, 结构) ' 清除托盘图标

.子程序 _按钮1_被单击, 空白型, , 
销毁 ()


.子程序 托盘事件处理, 整数型, , 
.参数 hwnd, 空白型, , 
.参数 msg, 空白型, , 
.参数 wp, 空白型, , 
.参数 lp, 空白型, , 


.如果真 (等于 (msg, 2000))
    .判断开始 (等于 (lp, 516)) ' 判断是否单击了托盘图标的右键
        弹出菜单 ()
    .判断 (等于 (lp, 513)) ' 判断是否按下鼠标左键，自己添加响应处理代码
        信息框 (“你点击了左键”, 0, )
    .判断 (等于 (lp, 512)) ' 鼠标在托盘图标上移动
        
    .默认
        
    .判断结束
    
.如果真结束
返回 (CallWindowProc (默认窗口, hwnd, msg, wp, lp))


.子程序 _退出程序_被选择, 空白型, , 
销毁 ()


.子程序 _关于程序_被选择, 空白型, , 
信息框 (相加 (“这个是用API实现系统托盘图标的例程  ”, #换行符, #换行符, #换行符, “                  近在眼前出品”, #换行符, “                   2005.04.03”), #信息图标, “关于信息：”)


.子程序 __启动窗口_位置被改变, 空白型, , 
.如果真 (等于 (., 2))
    赋值 (., 假)
    
.如果真结束


.子程序 _显示界面_被选择, 空白型, , 
赋值 (., 0)
赋值 (., 真)



 ' 不属于任何一个程序集、类模块的函数：
