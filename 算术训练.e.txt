 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 726
    高度 = 554
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 0
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 3
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 真
    保持标题栏激活 = 假
    窗口类名 = “”
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “”
    帮助文件名 = “”



.图片 水果, " ' 已保存到：D:\易语言学习\Data\算术训练.e\水果", , 
.常量 运算符_加号, "1", , 
.常量 运算符_加号_最小值, "0", , 
.常量 运算符_加号_最大值, "4", , 
.常量 运算符_减号, "2", , 
.常量 运算符_减号_最小值, "0", , 
.常量 运算符_减号_最大值, "4", , 
.常量 运算符_乘号, "3", , 
.常量 运算符_乘号_最小值, "0", , 
.常量 运算符_乘号_最大值, "2", , 
.常量 运算符_除号, "4", , 
.常量 运算符_除号_最小值, "0", , 
.常量 运算符_除号_最大值, "2", , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 5 0 系统核心支持库




数据类型 答案, , 
    .成员 正确, 整数型, , , 
    .成员 错误1, 整数型, , , 
    .成员 错误2, 整数型, , , 

数据类型 算式, , 
    .成员 运算符, 整数型, , , 
    .成员 数1, 整数型, , , 
    .成员 数2, 整数型, , , 
    .成员 答案, 答案, , , 
    .成员 选中值, 整数型, , , 

数据类型 算式集, , 
    .成员 算式, 算式, , "1", 

数据类型 坐标, , 
    .成员 x, 双精度小数型, , , 
    .成员 y, 双精度小数型, , , 
    .成员 距离, 双精度小数型, , , 
    .成员 时间, 整数型, , , 


.窗口程序集 窗口程序集1, , , 

.程序集变量 五分钟鼠标坐标组, 坐标, , "0", 
.程序集变量 五分钟没有移动鼠标, 逻辑型, , , 
.程序集变量 题目已完成, 逻辑型, , , 
.程序集变量 算式集, 算式集, , , 
.程序集变量 出错集, 算式集, , , 
.程序集变量 选中值, 整数型, , , 
.程序集变量 总题量, 整数型, , , 
.程序集变量 当前题号, 整数型, , , 
.程序集变量 正确次数, 整数型, , , 
.程序集变量 错误次数, 整数型, , , 
.程序集变量 重做错误, 逻辑型, , , 
.子程序 __启动窗口_创建完毕, 空白型, , 
_启动窗口.移动 (0, 0, 取屏幕宽度 (), 取屏幕高度 ())
置随机数种子 ()
赋值 (., 相减 (相除 (_启动窗口.取用户区宽度 (), 2), 相除 (., 2), 150))
赋值 (., 相减 (., 100, .))
.移动 (., 相加 (., ., 20), , )
赋值 (., 相加 (., ., 100))
.移动 (., 相加 (., ., 20), , )
赋值 (., 相减 (., 100, .))
赋值 (., .)
赋值 (., 相加 (., ., 100))
赋值 (., .)
10.移动 (5, 相减 (_启动窗口.取用户区宽度 (), 20), 20)
相加 (., ., 50).移动 (相加 (., ., 15), , 相减 (_启动窗口.取用户区高度 (), ., ., 30))
相加 (., ., 50).移动 (相加 (., ., 30), , )
相加 (., ., 5).移动 (相加 (., ., 30), , )
生成题库 (30, #运算符_加号)
显示算式 ()

.子程序 生成题库, 空白型, , 
.参数 参总题量, 整数型, , 
.参数 参运算符, 整数型, , 

.局部变量 运算符, 整数型, , , 
.局部变量 i, 整数型, , , 

重定义数组 (算式集.算式, 假, 0)
重定义数组 (出错集.算式, 假, 0)
赋值 (正确次数, 0)
赋值 (错误次数, 0)
赋值 (重做错误, 假)
.计次循环首 (参总题量, i)
    .如果 (等于 (参运算符, 0))
        赋值 (运算符, 取随机数 (1, 4))
    .否则
        赋值 (运算符, 参运算符)
    .如果结束
    
    .判断开始 (等于 (运算符, #运算符_加号))
        加入成员 (算式集.算式, 生成算式_加法 ())
    .判断 (等于 (运算符, #运算符_减号))
        加入成员 (算式集.算式, 生成算式_减法 ())
    .判断 (等于 (运算符, #运算符_乘号))
        加入成员 (算式集.算式, 生成算式_乘法 ())
    .默认
        加入成员 (算式集.算式, 生成算式_除法 ())
    .判断结束
    
.计次循环尾 ()
赋值 (总题量, 参总题量)
赋值 (当前题号, 1)

.子程序 生成算式_加法, 算式, , 
.局部变量 算式, 算式, , , 

赋值 (算式.运算符, #运算符_加号)
赋值 (算式.数1, 取随机数 (#运算符_加号_最小值, #运算符_加号_最大值))
赋值 (算式.数2, 取随机数 (#运算符_加号_最小值, #运算符_加号_最大值))
赋值 (算式.答案.正确, 相加 (算式.数1, 算式.数2))
赋值 (算式.答案.错误1, 相加 (算式.答案.正确, 取随机数 (1, 3)))
赋值 (算式.答案.错误2, 相减 (算式.答案.正确, 取随机数 (1, 3)))
返回 (算式)

.子程序 生成算式_减法, 算式, , 
.局部变量 算式, 算式, , , 

赋值 (算式.运算符, #运算符_减号)
赋值 (算式.数1, 取随机数 (#运算符_减号_最小值, #运算符_减号_最大值))
赋值 (算式.数2, 取随机数 (#运算符_减号_最小值, #运算符_减号_最大值))
赋值 (算式.答案.正确, 相减 (算式.数1, 算式.数2))
赋值 (算式.答案.错误1, 相加 (算式.答案.正确, 取随机数 (1, 2)))
赋值 (算式.答案.错误2, 相减 (算式.答案.正确, 取随机数 (1, 2)))
返回 (算式)

.子程序 生成算式_乘法, 算式, , 
.局部变量 算式, 算式, , , 

赋值 (算式.运算符, #运算符_乘号)
赋值 (算式.数1, 取随机数 (#运算符_乘号_最小值, #运算符_乘号_最大值))
赋值 (算式.数2, 取随机数 (#运算符_乘号_最小值, #运算符_乘号_最大值))
赋值 (算式.答案.正确, 相乘 (算式.数1, 算式.数2))
赋值 (算式.答案.错误1, 相加 (算式.答案.正确, 取随机数 (1, 4)))
赋值 (算式.答案.错误2, 相减 (算式.答案.正确, 取随机数 (1, 4)))
返回 (算式)

.子程序 生成算式_除法, 算式, , 
.局部变量 算式, 算式, , , 
.局部变量 因子1, 整数型, , , 
.局部变量 因子2, 整数型, , , 
.局部变量 被除数, 整数型, , , 
.局部变量 除数, 整数型, , , 

赋值 (算式.运算符, #运算符_除号)
赋值 (因子1, 取随机数 (#运算符_除号_最小值, #运算符_除号_最大值))
赋值 (因子2, 取随机数 (#运算符_除号_最小值, #运算符_除号_最大值))
赋值 (被除数, 相乘 (因子1, 因子2))
赋值 (算式.数1, 被除数)
.判断开始 (并且 (等于 (因子1, 0), 等于 (因子2, 0)))
    赋值 (除数, 取随机数 (1, #运算符_除号_最大值))
.判断 (并且 (等于 (因子1, 0), 不等于 (因子2, 0)))
    赋值 (除数, 因子2)
.判断 (并且 (不等于 (因子1, 0), 等于 (因子2, 0)))
    赋值 (除数, 因子1)
.默认
    赋值 (除数, 因子1)
.判断结束
赋值 (算式.数2, 除数)
赋值 (算式.答案.正确, 相除 (算式.数1, 算式.数2))
赋值 (算式.答案.错误1, 相加 (算式.答案.正确, 取随机数 (1, 4)))
赋值 (算式.答案.错误2, 相减 (算式.答案.正确, 取随机数 (1, 4)))
返回 (算式)

.子程序 显示算式_画图片, 空白型, , 
.参数 数1, 整数型, , 
.参数 数2, 整数型, , 

.局部变量 i, 整数型, , , 

.清除 ()
.清除 ()
.清除 ()
打开 (“水果”, “水果”, 真, , , , )
到首记录 ()
跳到 (取随机数 (1, 取记录数 ()))
赋值 (., 读 (1))
关闭 ()
赋值 (., 相乘 (数1, 50))
赋值 (., 相乘 (数2, 50))
.计次循环首 (数1, i)
    .复制 (相乘 (相减 (i, 1), 50), 0, 5)
.计次循环尾 ()
.计次循环首 (数2, i)
    .复制 (相乘 (相减 (i, 1), 50), 0, 5)
.计次循环尾 ()


.子程序 显示算式, 空白型, , 
.局部变量 排序方案, 整数型, , , 

赋值 (., 多项选择 (取随机数 (1, 7), #红色, #蓝色, #绿色, #紫红, #红褐, #黄色, #粉红))
赋值 (., 多项选择 (取随机数 (1, 7), #红色, #蓝色, #绿色, #紫红, #红褐, #黄色, #粉红))
赋值 (., 多项选择 (取随机数 (1, 7), #红色, #蓝色, #绿色, #紫红, #红褐, #黄色, #粉红))
赋值 (., 到文本 (算式集.算式 [当前题号], 数1))
赋值 (., 到文本 (算式集.算式 [当前题号], 数2))
显示算式_画图片 (算式集.算式 [当前题号], 数1, 算式集.算式 [当前题号], 数2)
赋值 (., 多项选择 (算式集.算式 [当前题号], 运算符, “+”, “-”, “X”, “÷”))
赋值 (排序方案, 取随机数 (1, 4))
.判断开始 (等于 (排序方案, 1))
    赋值 (., 到文本 (算式集.算式 [当前题号], 答案.正确))
    赋值 (., 到文本 (算式集.算式 [当前题号], 答案.错误1))
    赋值 (., 到文本 (算式集.算式 [当前题号], 答案.错误2))
.判断 (等于 (排序方案, 2))
    赋值 (., 到文本 (算式集.算式 [当前题号], 答案.正确))
    赋值 (., 到文本 (算式集.算式 [当前题号], 答案.错误2))
    赋值 (., 到文本 (算式集.算式 [当前题号], 答案.错误1))
.判断 (等于 (排序方案, 3))
    赋值 (., 到文本 (算式集.算式 [当前题号], 答案.错误1))
    赋值 (., 到文本 (算式集.算式 [当前题号], 答案.错误2))
    赋值 (., 到文本 (算式集.算式 [当前题号], 答案.正确))
.判断 (等于 (排序方案, 4))
    赋值 (., 到文本 (算式集.算式 [当前题号], 答案.错误1))
    赋值 (., 到文本 (算式集.算式 [当前题号], 答案.正确))
    赋值 (., 到文本 (算式集.算式 [当前题号], 答案.错误2))
.判断 (等于 (排序方案, 5))
    赋值 (., 到文本 (算式集.算式 [当前题号], 答案.错误2))
    赋值 (., 到文本 (算式集.算式 [当前题号], 答案.错误1))
    赋值 (., 到文本 (算式集.算式 [当前题号], 答案.正确))
.判断 (等于 (排序方案, 6))
    赋值 (., 到文本 (算式集.算式 [当前题号], 答案.错误2))
    赋值 (., 到文本 (算式集.算式 [当前题号], 答案.正确))
    赋值 (., 到文本 (算式集.算式 [当前题号], 答案.错误1))
.默认
    
.判断结束
赋值 (., 假)
赋值 (., 假)
赋值 (., 假)
赋值 (., 真)

.子程序 _按钮1_被单击, 空白型, , 
赋值 (_启动窗口., 假)
.如果真 (并且 (等于 (., 假), 等于 (., 假), 等于 (., 假)))
    信息框 (“你还没有选题呢，加油！！！”, 相加 (#确认钮, #错误图标), )
    返回 ()
.如果真结束

.如果 (不等于 (选中值, 算式集.算式 [当前题号], 答案.正确))
    赋值 (错误次数, 相加 (错误次数, 1))
    信息框 (“你选错了！！！，继续加油”, 相加 (#确认钮, #错误图标), )
    加入成员 (出错集.算式, 算式集.算式 [当前题号])
    赋值 (总题量, 相加 (总题量, 1))
    相加 (到文本 (算式集.算式 [当前题号], 数1), 多项选择 (算式集.算式 [当前题号], 运算符, “ + ”, “ - ”, “ X ”, “ ÷ ”), 到文本 (算式集.算式 [当前题号], 数2), “ = ”, 到文本 (选中值), “ 错啦！”).加入项目 ()
    赋值 (., 相加 (到文本 (到整数 (相乘 (相除 (正确次数, 相加 (正确次数, 错误次数)), 100))), “%”))
.否则
    赋值 (正确次数, 相加 (正确次数, 1))
    赋值 (., 相加 (到文本 (到整数 (相乘 (相除 (正确次数, 相加 (正确次数, 错误次数)), 100))), “%”))
    赋值 (当前题号, 相加 (当前题号, 1))
    .如果真 (大于 (当前题号, 取数组成员数 (算式集.算式)))
        赋值 (重做错误, 真)
        赋值 (算式集, 出错集)
        重定义数组 (出错集.算式, 假, 0)
        赋值 (当前题号, 1)
    .如果真结束
    
    .如果 (大于或等于 (取数组成员数 (算式集.算式), 1))
        显示算式 ()
        .如果真 (等于 (重做错误, 真))
            0.删除项目 ()
        .如果真结束
        
    .否则
        信息框 (“恭喜你完成了全部的题目，还要再来哟！”, 相加 (#确认钮, #信息图标), )
        赋值 (题目已完成, 真)
        赋值 (_启动窗口., 假)
        赋值 (_启动窗口., 2)
        赋值 (., 1000)
    .如果结束
    
.如果结束
赋值 (., 相乘 (相除 (正确次数, 总题量), 100))
赋值 (_启动窗口., 真)

.子程序 _单选框A_被单击, 空白型, , 
赋值 (选中值, 到数值 (.))

.子程序 _单选框B_被单击, 空白型, , 
赋值 (选中值, 到数值 (.))

.子程序 _单选框C_被单击, 空白型, , 
赋值 (选中值, 到数值 (.))


.子程序 _时钟1_周期事件, 空白型, , 
.局部变量 总距离, 双精度小数型, , , 
.局部变量 鼠标坐标, 坐标, , , 
.局部变量 尾点, 坐标, , , 
.局部变量 i, 整数型, , , 

赋值 (鼠标坐标.时间, 取启动时间 ())
赋值 (鼠标坐标.x, 取鼠标水平位置 ())
赋值 (鼠标坐标.y, 取鼠标垂直位置 ())
.如果真 (大于或等于 (取数组成员数 (五分钟鼠标坐标组), 1))
    赋值 (尾点, 五分钟鼠标坐标组 [取数组成员数 (五分钟鼠标坐标组)])
    赋值 (鼠标坐标.距离, 求平方根 (相加 (求次方 (相减 (鼠标坐标.x, 尾点.x), 2), 求次方 (相减 (鼠标坐标.y, 尾点.y), 2))))
.如果真结束
加入成员 (五分钟鼠标坐标组, 鼠标坐标)
.计次循环首 (取数组成员数 (五分钟鼠标坐标组), i)
    .如果真 (小于 (相加 (五分钟鼠标坐标组 [i], 时间, 300000), 鼠标坐标.时间))
        删除成员 (五分钟鼠标坐标组, i, 1)
    .如果真结束
    
.计次循环尾 ()
.计次循环首 (取数组成员数 (五分钟鼠标坐标组), i)
    赋值 (总距离, 相加 (总距离, 五分钟鼠标坐标组 [i], 距离))
.计次循环尾 ()
.如果 (小于 (总距离, 100))
    .如果真 (大于 (取数组成员数 (五分钟鼠标坐标组), 298))
        赋值 (五分钟没有移动鼠标, 真)
    .如果真结束
    
.否则
    赋值 (五分钟没有移动鼠标, 假)
.如果结束

.如果真 (五分钟没有移动鼠标)
    赋值 (., 0)
    .如果真 (题目已完成)
        赋值 (., “”)
        赋值 (., 0)
        生成题库 (20, #运算符_加号)
    .如果真结束
    
    赋值 (_启动窗口., 真)
    赋值 (_启动窗口., 真)
    赋值 (_启动窗口., 3)
    显示算式 ()
.如果真结束


.子程序 __启动窗口_位置被改变, 空白型, , 
.如果真 (题目已完成)
    赋值 (题目已完成, 假)
    赋值 (., “”)
    赋值 (., 0)
    生成题库 (20, #运算符_加号)
    显示算式 ()
.如果真结束



 ' 不属于任何一个程序集、类模块的函数：
