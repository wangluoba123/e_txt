 ' 文件类型：Windows窗口程序

 ' 程序名称：贝尔软件-通用进销存管理专家
 ' 程序描述：
 ' 程序作者：万里丰
 ' 邮政编码：162750
 ' 联系地址：阿荣旗政府办公室
 ' 联系电话：04704290518
 ' 传真号码：04704210863
 ' 电子信箱：arqwlf@126.com
 ' 主页地址：www.arzx.com
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 400
    高度 = 200
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 1
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 真
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 3
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 真
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 真
    底图 =  ' 空
    图标 =  ' 已保存到：D:\易语言学习\Data\贝尔通用进销存.e\_启动窗口_图标.ico
    背景音乐 =  ' 空
    标题 = “贝尔软件--通用进销存管理专家注册版（未注册）”
    帮助文件名 = “C:\Documents and Settings\Administrator.COMMONOR-267FE2\桌面\33\hlp\help.chm”

窗口 销售单
    左边 = 50
    顶边 = 50
    宽度 = 794
    高度 = 465
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 真
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 0
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 真
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “销售单”
    帮助文件名 = “”

窗口 缺货预定登记
    左边 = 50
    顶边 = 50
    宽度 = 794
    高度 = 465
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “缺货预定登记”
    帮助文件名 = “”

窗口 其他收入
    左边 = 50
    顶边 = 50
    宽度 = 794
    高度 = 465
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “其他收入”
    帮助文件名 = “”

窗口 记帐查询
    左边 = 50
    顶边 = 50
    宽度 = 794
    高度 = 465
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “记帐查询”
    帮助文件名 = “”

窗口 商品入库
    左边 = 50
    顶边 = 50
    宽度 = 794
    高度 = 465
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “商品入库”
    帮助文件名 = “”

窗口 库存调价
    左边 = 50
    顶边 = 50
    宽度 = 794
    高度 = 465
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “库存调价”
    帮助文件名 = “”

窗口 库存单据一览
    左边 = 50
    顶边 = 50
    宽度 = 794
    高度 = 465
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “库存入库查询”
    帮助文件名 = “”

窗口 库存告警查询
    左边 = 50
    顶边 = 50
    宽度 = 794
    高度 = 465
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “库存告警查询”
    帮助文件名 = “”

窗口 库存盘点
    左边 = 50
    顶边 = 50
    宽度 = 794
    高度 = 465
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “库存盘点”
    帮助文件名 = “”

窗口 库存盘点记录
    左边 = 50
    顶边 = 50
    宽度 = 794
    高度 = 465
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “盘点记录”
    帮助文件名 = “”

窗口 库存调价记录
    左边 = 50
    顶边 = 50
    宽度 = 794
    高度 = 465
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “库存调价记录”
    帮助文件名 = “”

窗口 财务状况
    左边 = 50
    顶边 = 50
    宽度 = 794
    高度 = 465
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “财务状况”
    帮助文件名 = “”

窗口 收款员收款明细
    左边 = 50
    顶边 = 50
    宽度 = 794
    高度 = 465
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “收款员收款明细”
    帮助文件名 = “”

窗口 商品销售统计
    左边 = 50
    顶边 = 50
    宽度 = 794
    高度 = 465
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “商品销售汇总”
    帮助文件名 = “”

窗口 商品销售明细统计
    左边 = 50
    顶边 = 50
    宽度 = 794
    高度 = 465
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “商品销售明细统计”
    帮助文件名 = “”

窗口 供应商资料
    左边 = 50
    顶边 = 50
    宽度 = 794
    高度 = 465
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “供应商资料”
    帮助文件名 = “”

窗口 商品分类
    左边 = 50
    顶边 = 50
    宽度 = 794
    高度 = 465
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “商品分类”
    帮助文件名 = “”

窗口 商品大典
    左边 = 50
    顶边 = 50
    宽度 = 794
    高度 = 465
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “商品大典”
    帮助文件名 = “”

窗口 员工权限
    左边 = 50
    顶边 = 50
    宽度 = 794
    高度 = 465
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “员工权限”
    帮助文件名 = “”

窗口 添加商品资料
    左边 = 50
    顶边 = 50
    宽度 = 265
    高度 = 326
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “添加商品资料”
    帮助文件名 = “”

窗口 添加商品分类
    左边 = 50
    顶边 = 50
    宽度 = 296
    高度 = 294
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “添加商品分类”
    帮助文件名 = “”

窗口 删除商品分类
    左边 = 50
    顶边 = 50
    宽度 = 296
    高度 = 283
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “删除商品分类”
    帮助文件名 = “”

窗口 商品大典编辑输入
    左边 = 50
    顶边 = 50
    宽度 = 210
    高度 = 97
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “请输入商品编码”
    帮助文件名 = “”

窗口 编辑商品资料
    左边 = 50
    顶边 = 50
    宽度 = 268
    高度 = 326
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 假
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “”
    帮助文件名 = “”

窗口 删除商品资料
    左边 = 50
    顶边 = 50
    宽度 = 261
    高度 = 288
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “删除商品资料”
    帮助文件名 = “”

窗口 商品大典删除输入
    左边 = 50
    顶边 = 50
    宽度 = 190
    高度 = 104
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “删除输入”
    帮助文件名 = “”

窗口 员工管理
    左边 = 50
    顶边 = 50
    宽度 = 794
    高度 = 465
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “员工管理”
    帮助文件名 = “”

窗口 选择商品
    左边 = 50
    顶边 = 50
    宽度 = 794
    高度 = 465
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “选择商品”
    帮助文件名 = “”

窗口 库存商品汇总
    左边 = 50
    顶边 = 50
    宽度 = 794
    高度 = 465
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “库存商品汇总”
    帮助文件名 = “”

窗口 进货登记
    左边 = 50
    顶边 = 50
    宽度 = 794
    高度 = 465
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 假
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “进货登记”
    帮助文件名 = “”

窗口 进货登记之登记
    左边 = 50
    顶边 = 50
    宽度 = 380
    高度 = 169
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “进货登记定价”
    帮助文件名 = “”

窗口 进货退货选择单据
    左边 = 50
    顶边 = 50
    宽度 = 794
    高度 = 465
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “选择单据”
    帮助文件名 = “”

窗口 进货退货最终单
    左边 = 50
    顶边 = 50
    宽度 = 794
    高度 = 465
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 假
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “进货退货”
    帮助文件名 = “”

窗口 进货退货数量
    左边 = 50
    顶边 = 50
    宽度 = 380
    高度 = 136
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “退货录入”
    帮助文件名 = “”

窗口 销售商品选择
    左边 = 50
    顶边 = 50
    宽度 = 794
    高度 = 465
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “销售商品选择”
    帮助文件名 = “”

窗口 销售输入
    左边 = 50
    顶边 = 50
    宽度 = 380
    高度 = 196
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “添写销售数量”
    帮助文件名 = “”

窗口 添加商品分类入库
    左边 = 50
    顶边 = 50
    宽度 = 296
    高度 = 291
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “入库分类添加”
    帮助文件名 = “”

窗口 入库输入
    左边 = 50
    顶边 = 50
    宽度 = 292
    高度 = 44
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = 16746496 '  0xFF8800
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 假
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “”
    帮助文件名 = “”

窗口 进货退货记录
    左边 = 50
    顶边 = 50
    宽度 = 794
    高度 = 465
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “进货退货记录”
    帮助文件名 = “”

窗口 销售退货选择单据
    左边 = 50
    顶边 = 50
    宽度 = 794
    高度 = 465
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “选择单据”
    帮助文件名 = “”

窗口 销售退货最终单
    左边 = 50
    顶边 = 50
    宽度 = 794
    高度 = 465
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 假
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “销售退货”
    帮助文件名 = “”

窗口 销售退货数量
    左边 = 50
    顶边 = 50
    宽度 = 372
    高度 = 134
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “销售商品退货”
    帮助文件名 = “”

窗口 进销存一览
    左边 = 50
    顶边 = 50
    宽度 = 794
    高度 = 465
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “进销存一览”
    帮助文件名 = “”

窗口 售后登记
    左边 = 50
    顶边 = 50
    宽度 = 544
    高度 = 255
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “商品售后登记”
    帮助文件名 = “”

窗口 售后汇总
    左边 = 50
    顶边 = 50
    宽度 = 794
    高度 = 465
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “商品售后管理”
    帮助文件名 = “”

窗口 返货登记
    左边 = 50
    顶边 = 50
    宽度 = 794
    高度 = 465
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “返货登记”
    帮助文件名 = “”

窗口 其他支出
    左边 = 50
    顶边 = 50
    宽度 = 794
    高度 = 465
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “其他支出”
    帮助文件名 = “”

窗口 客户资料
    左边 = 50
    顶边 = 50
    宽度 = 794
    高度 = 465
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “客户资料”
    帮助文件名 = “”

窗口 打印
    左边 = 50
    顶边 = 50
    宽度 = 788
    高度 = 577
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 3
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “贝尔软件 打印模块”
    帮助文件名 = “”

窗口 查询
    左边 = 50
    顶边 = 50
    宽度 = 817
    高度 = 521
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假

窗口 销售退货记录
    左边 = 50
    顶边 = 50
    宽度 = 794
    高度 = 465
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “销售退货记录”
    帮助文件名 = “”

窗口 供应商供货统计
    左边 = 50
    顶边 = 50
    宽度 = 794
    高度 = 465
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “供应商供货统计”
    帮助文件名 = “”

窗口 毛利合计
    左边 = 50
    顶边 = 50
    宽度 = 342
    高度 = 196
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “恭禧发财 未统计其他收入”
    帮助文件名 = “”

窗口 记帐还款
    左边 = 70
    顶边 = 50
    宽度 = 300
    高度 = 104
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “款额输入”
    帮助文件名 = “”

窗口 登录
    左边 = 50
    顶边 = 50
    宽度 = 359
    高度 = 214
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 假
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “”
    帮助文件名 = “”

窗口 记帐还供应商款
    左边 = 70
    顶边 = 50
    宽度 = 300
    高度 = 104
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “还款输入”
    帮助文件名 = “”

窗口 修改密码
    左边 = 50
    顶边 = 50
    宽度 = 359
    高度 = 259
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “操作员密码修改”
    帮助文件名 = “”

窗口 设置打印表头窗口
    左边 = 50
    顶边 = 50
    宽度 = 356
    高度 = 138
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “设置打印表头”
    帮助文件名 = “”

窗口 清空数据库
    左边 = 50
    顶边 = 50
    宽度 = 443
    高度 = 224
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “清空数据库”
    帮助文件名 = “”

窗口 往来帐目
    左边 = 50
    顶边 = 50
    宽度 = 794
    高度 = 465
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “往来帐目”
    帮助文件名 = “”

窗口 记帐还款1
    左边 = 70
    顶边 = 50
    宽度 = 300
    高度 = 104
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “款额输入”
    帮助文件名 = “”

窗口 注册未成功
    左边 = 50
    顶边 = 50
    宽度 = 794
    高度 = 465
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “贝尔软件 通用进销存管理专家注册”
    帮助文件名 = “”

窗口 库存综合查询
    左边 = 50
    顶边 = 50
    宽度 = 794
    高度 = 465
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “库存综合查询”
    帮助文件名 = “”



.图片 aaa, " ' 已保存到：D:\易语言学习\Data\贝尔通用进销存.e\aaa", , 
.图片 ditu, " ' 已保存到：D:\易语言学习\Data\贝尔通用进销存.e\ditu", , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 3 系统核心支持库
 ' eGrid 0B4337DA651B4b619ACF61334A7E8B47 1 1 高级表格支持库
 ' iext 27bb20fdd3e145e4bee3db39ddd6e64c 1 2 扩展界面支持库一
 ' iext2 AF6AD80AA4244A59AFB3D83ECF5173CC 1 1 扩展界面支持库二
 ' CnCalendar {18C0788E-59AE-4112-B452-6BF0C1B727FB} 1 2 农历日期支持库
 ' ExtMenu 9909FBB013704cfa8FE7E739DB7172DE 1 5 超级菜单支持库
 ' xplib 7F54B9CE8887428dBA9CEEB94CEF4C72 1 1 XP风格界面库




.全局变量 脚本, 文本型, , , 
.全局变量 分类名, 文本型, , , 
.全局变量 记录集句柄, 空白型, , , 
.全局变量 kscbj, 文本型, , , 
.全局变量 一级分类名, 文本型, , , 
.全局变量 商品编号, 长整数型, , , 
.全局变量 入库单号临时, 文本型, , , 
.全局变量 记录集句柄一, 空白型, , , 
.全局变量 商品编号暂存, 文本型, , , 
.全局变量 选择与否, 逻辑型, , , 
.全局变量 添加商品计数, 空白型, , , 
.全局变量 表格行数累计, 空白型, , , 
.全局变量 库存数量, 文本型, , , 
.全局变量 文本, 文本型, , , 
.全局变量 商品名, 文本型, , , 
.全局变量 应付合计, 小数型, , , 
.全局变量 已付合计, 小数型, , , 
.全局变量 未付合计, 小数型, , , 
.全局变量 零售价, 小数型, , , 
.全局变量 表头标题, 文本型, , , 
.全局变量 表格文件名, 文本型, , , 
.全局变量 店面名称, 文本型, , , 
.全局变量 退出与否, 逻辑型, , , 
.全局变量 循环中, 逻辑型, , , 
.全局变量 客户还款操作, 逻辑型, , , 
.全局变量 供货商还款操作, 逻辑型, , , 
.全局变量 操作员, 文本型, , , 
.全局变量 当前菜单, 文本型, , , 
.全局变量 图片号, 空白型, , , 
.全局变量 是否为一级, 逻辑型, , , 
.全局变量 原始硬盘特征代码, 文本型, , , 
.全局变量 新特征代码, 整数型, , , 
.全局变量 对比2, 文本型, , , 
.全局变量 对比3, 文本型, , , 
.全局变量 对比4, 文本型, , , 
.全局变量 对比1, 文本型, , , 
.全局变量 regtem, 文本型, , , 
.全局变量 regtem2, 逻辑型, , , 
.全局变量 经顶边, 整数型, , , 
.全局变量 经高度, 整数型, , , 
.全局变量 经左边, 整数型, , , 
.全局变量 经宽度, 整数型, , , 
.全局变量 限制, 逻辑型, , , 

.窗口程序集 窗口程序集1, , , 

.子程序 _库存综合查询_被选择, 空白型, , 

载入 (库存综合查询, , 真)

.子程序 __启动窗口_创建完毕, 空白型, , 
赋值 (操作员, “';lkjhyuiop”)
赋值 (图片号, 载入图片 (“image\ditu.jpg”))
未知支持库函数_0 (1)
.如果真 (等于 (相加 (取运行目录 (), “\data\wlfdb.mdb”).打开MDB数据库 (“arqwlfdsr19780228”, , ), 假))
    信息框 (“打开指定数据库失败，请检查是否数据库文件已经被移动！”, #警告图标, “系统消息”)
    结束 ()
.如果真结束
赋值 (脚本, “select * from 信息”)
_启动窗口.关闭记录集 (., 记录集句柄)
赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
_启动窗口.到首记录 (., 记录集句柄)
mm ()
赋值 (.初始目录, 相加 (取运行目录 (), “\databak”)) ' 备份数据
赋值 (.初始目录, 相加 (取运行目录 (), “\databak”)) ' 恢复数据
载入 (登录, , 真)

.子程序 mm, 空白型, , 
.局部变量 tt, 空白型, , , 

.如果 (等于 (打开 (相加 (取运行目录 (), “\system\”, “yfyzc.edb”), , , , , , ), 假))
    信息框 (“系统文件错误！”, 0, )
    销毁 ()
    返回 ()
.否则
    
.如果结束
置当前库 (“yfyzc.edb”)
.如果 (等于 (取记录数 (), 1))
    赋值 (regtem, “未注册！本软件为共享软件(30天试用),若想功能得到保障请注册！”)
    _启动窗口.关闭记录集 (., 记录集句柄)
    赋值 (脚本, “select count(*) from tem”)
    赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
    .如果 (不等于 (_启动窗口.读 (., 记录集句柄, 1), 1))
        赋值 (脚本, 相加 (“insert into tem(tem) values ('”, 未知支持库函数_12 (取现行时间 (), “%y-%m-%d”), “')”))
        _启动窗口.执行 (., 脚本, )
    .否则
        _启动窗口.关闭记录集 (., 记录集句柄)
        赋值 (脚本, “select * from tem”)
        赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
        _启动窗口.到首记录 (., 记录集句柄)
        赋值 (tt, 取时间间隔 (到时间 (未知支持库函数_12 (取现行时间 (), “%y-%m-%d”)), _启动窗口.读 (., 记录集句柄, “tem”), #日))
        .如果 (或者 (大于或等于 (tt, 30), 小于 (tt, 0)))
            信息框 (“软件试用期已到，功能将受到限制，请注册正版软件！”, 0, )
            赋值 (限制, 真)
        .否则
            .如果 (并且 (大于或等于 (tt, 25), 小于或等于 (tt, 30)))
                信息框 (相加 (“软件试用期剩余：”, 到文本 (相减 (30, tt)), “天,过试用期后功能将受到限制，请注册！”), 0, )
            .否则
                
            .如果结束
            
        .如果结束
        
    .如果结束
    
    关闭 (相加 (取运行目录 (), “\system\”, “yfyzc.edb”))
    
.否则
    跳到 (2)
    本机硬盘特征字 ()
    注册码生成 ()
    .如果 (并且 (等于 (读 (“aa”), 对比1), 等于 (读 (“bb”), 对比2), 等于 (读 (“cc”), 对比3), 等于 (读 (“dd”), 对比4)))
        赋值 (regtem, “注册成功!”)
        赋值 (regtem2, 真)
        赋值 (店面名称, 相加 (“贝尔软件 ”, _启动窗口.读 (., 记录集句柄, “店面”)))
        赋值 (_启动窗口., 店面名称)
        
    .否则
        赋值 (regtem, “未注册！本软件为共享软件(30天试用)，若想功能得到保障请注册！”)
        _启动窗口.关闭记录集 (., 记录集句柄)
        赋值 (脚本, “select count(*) from tem”)
        赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
        .如果 (不等于 (_启动窗口.读 (., 记录集句柄, 1), 1))
            赋值 (脚本, 相加 (“insert into tem(tem) values ('”, 未知支持库函数_12 (取现行时间 (), “%y-%m-%d”), “')”))
            _启动窗口.执行 (., 脚本, )
        .否则
            _启动窗口.关闭记录集 (., 记录集句柄)
            赋值 (脚本, “select * from tem”)
            赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
            _启动窗口.到首记录 (., 记录集句柄)
            赋值 (tt, 取时间间隔 (到时间 (未知支持库函数_12 (取现行时间 (), “%y-%m-%d”)), _启动窗口.读 (., 记录集句柄, “tem”), #日))
            .如果 (或者 (大于或等于 (tt, 30), 小于 (tt, 0)))
                信息框 (“软件试用期已到，功能将受到限制，请注册正版软件！”, 0, )
                赋值 (限制, 真)
            .否则
                .如果 (并且 (大于或等于 (tt, 25), 小于或等于 (tt, 30)))
                    信息框 (相加 (“软件试用期剩余：”, 到文本 (相减 (30, tt)), “天,过试用期后功能将受到限制，请注册！”), 0, )
                .否则
                    
                .如果结束
                
            .如果结束
            
        .如果结束
        
        赋值 (_启动窗口., regtem)
        赋值 (regtem2, 假)
    .如果结束
    
    关闭 (相加 (取运行目录 (), “\system\”, “yfyzc.edb”))
.如果结束


.子程序 _进货登记_被选择, 空白型, , 
载入 (进货登记, _启动窗口, 真)

.子程序 验证权限, 逻辑型, , 
赋值 (.禁止, 假)
赋值 (.禁止, 假)
赋值 (.禁止, 假)
赋值 (.禁止, 假)
赋值 (.禁止, 假)
赋值 (.禁止, 假)
赋值 (.禁止, 假)
赋值 (.禁止, 假)
赋值 (.禁止, 假)
赋值 (.禁止, 假)
赋值 (.禁止, 假)
赋值 (.禁止, 假)
赋值 (.禁止, 假)
赋值 (.禁止, 假)
赋值 (.禁止, 假)
赋值 (.禁止, 假)
赋值 (.禁止, 假)
赋值 (.禁止, 假)
赋值 (.禁止, 假)
赋值 (.禁止, 假)
赋值 (.禁止, 假)
赋值 (.禁止, 假)
赋值 (.禁止, 假)
赋值 (.禁止, 假)
赋值 (.禁止, 假)
赋值 (.禁止, 假)
赋值 (.禁止, 假)
赋值 (.禁止, 假)
赋值 (.禁止, 假)
赋值 (.禁止, 假)
赋值 (.禁止, 假)
赋值 (.禁止, 假)
赋值 (.禁止, 假)
赋值 (.禁止, 假)
 ' 打开数据.禁止 ＝ 假
赋值 (.禁止, 假)
赋值 (.禁止, 假)
赋值 (.禁止, 假)
0.去除状态 (4)
1.去除状态 (4)
2.去除状态 (4)
3.去除状态 (4)
4.去除状态 (4)
赋值 (.禁止, 假)
赋值 (.禁止, 假)

赋值 (脚本, 相加 (“select * from 员工资料 where 姓名='”, 操作员, “'”))
输出调试文本 (脚本)
_启动窗口.关闭记录集 (., 记录集句柄一)
赋值 (记录集句柄一, _启动窗口.查询 (., 脚本))
_启动窗口.到首记录 (., 记录集句柄一)
.判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄一), 假))
    .如果真 (不等于 (_启动窗口.读 (., 记录集句柄一, “商品销售”), “8*8”))
        赋值 (.禁止, 真)
        2.加入状态 (4)
    .如果真结束
    .如果真 (不等于 (_启动窗口.读 (., 记录集句柄一, “销售退货”), “8*8”))
        赋值 (.禁止, 真)
    .如果真结束
    .如果真 (不等于 (_启动窗口.读 (., 记录集句柄一, “商品入库”), “8*8”))
        赋值 (.禁止, 真)
        0.加入状态 (4)
    .如果真结束
    .如果真 (不等于 (_启动窗口.读 (., 记录集句柄一, “售后登记”), “8*8”))
        赋值 (.禁止, 真)
        3.加入状态 (4)
    .如果真结束
    .如果真 (不等于 (_启动窗口.读 (., 记录集句柄一, “售后管理”), “8*8”))
        赋值 (.禁止, 真)
        4.加入状态 (4)
    .如果真结束
    .如果真 (不等于 (_启动窗口.读 (., 记录集句柄一, “缺货预定”), “8*8”))
        赋值 (.禁止, 真)
    .如果真结束
    .如果真 (不等于 (_启动窗口.读 (., 记录集句柄一, “返货情况”), “8*8”))
        赋值 (.禁止, 真)
    .如果真结束
    .如果真 (不等于 (_启动窗口.读 (., 记录集句柄一, “其他收入”), “8*8”))
        赋值 (.禁止, 真)
    .如果真结束
    .如果真 (不等于 (_启动窗口.读 (., 记录集句柄一, “其他支出”), “8*8”))
        赋值 (.禁止, 真)
    .如果真结束
    .如果真 (不等于 (_启动窗口.读 (., 记录集句柄一, “记帐查询”), “8*8”))
        赋值 (.禁止, 真)
    .如果真结束
    .如果真 (不等于 (_启动窗口.读 (., 记录集句柄一, “供应商资料”), “8*8”))
        赋值 (.禁止, 真)
    .如果真结束
    .如果真 (不等于 (_启动窗口.读 (., 记录集句柄一, “商品分类”), “8*8”))
        赋值 (.禁止, 真)
    .如果真结束
    .如果真 (不等于 (_启动窗口.读 (., 记录集句柄一, “商品大典”), “8*8”))
        赋值 (.禁止, 真)
    .如果真结束
    .如果真 (不等于 (_启动窗口.读 (., 记录集句柄一, “客户维护”), “8*8”))
        赋值 (.禁止, 真)
    .如果真结束
    .如果真 (不等于 (_启动窗口.读 (., 记录集句柄一, “进货明细统计”), “8*8”))
        赋值 (.禁止, 真)
    .如果真结束
    .如果真 (不等于 (_启动窗口.读 (., 记录集句柄一, “供货商供货统计”), “8*8”))
        赋值 (.禁止, 真)
    .如果真结束
    .如果真 (不等于 (_启动窗口.读 (., 记录集句柄一, “进货退货记录”), “8*8”))
        赋值 (.禁止, 真)
    .如果真结束
    .如果真 (不等于 (_启动窗口.读 (., 记录集句柄一, “商品销售统计”), “8*8”))
        赋值 (.禁止, 真)
    .如果真结束
    .如果真 (不等于 (_启动窗口.读 (., 记录集句柄一, “销售明细统计”), “8*8”))
        赋值 (.禁止, 真)
    .如果真结束
    .如果真 (不等于 (_启动窗口.读 (., 记录集句柄一, “销售退货记录”), “8*8”))
        赋值 (.禁止, 真)
    .如果真结束
    .如果真 (不等于 (_启动窗口.读 (., 记录集句柄一, “库存综合查询”), “8*8”))
        赋值 (.禁止, 真)
    .如果真结束
    .如果真 (不等于 (_启动窗口.读 (., 记录集句柄一, “库存告警查询”), “8*8”))
        赋值 (.禁止, 真)
    .如果真结束
    .如果真 (不等于 (_启动窗口.读 (., 记录集句柄一, “库存调价记录”), “8*8”))
        赋值 (.禁止, 真)
    .如果真结束
    .如果真 (不等于 (_启动窗口.读 (., 记录集句柄一, “库存盘点记录”), “8*8”))
        赋值 (.禁止, 真)
    .如果真结束
    .如果真 (不等于 (_启动窗口.读 (., 记录集句柄一, “进销存总览”), “8*8”))
        赋值 (.禁止, 真)
    .如果真结束
    .如果真 (不等于 (_启动窗口.读 (., 记录集句柄一, “收款员收款明细”), “8*8”))
        赋值 (.禁止, 真)
    .如果真结束
    .如果真 (不等于 (_启动窗口.读 (., 记录集句柄一, “毛利统计”), “8*8”))
        赋值 (.禁止, 真)
    .如果真结束
    .如果真 (不等于 (_启动窗口.读 (., 记录集句柄一, “财务状况”), “8*8”))
        赋值 (.禁止, 真)
    .如果真结束
    .如果真 (不等于 (_启动窗口.读 (., 记录集句柄一, “进货登记”), “8*8”))
        赋值 (.禁止, 真)
        1.加入状态 (4)
    .如果真结束
    .如果真 (不等于 (_启动窗口.读 (., 记录集句柄一, “进货退货”), “8*8”))
        赋值 (.禁止, 真)
    .如果真结束
    .如果真 (不等于 (_启动窗口.读 (., 记录集句柄一, “库存调价”), “8*8”))
        赋值 (.禁止, 真)
    .如果真结束
    .如果真 (不等于 (_启动窗口.读 (., 记录集句柄一, “库存盘点”), “8*8”))
        赋值 (.禁止, 真)
    .如果真结束
    .如果真 (不等于 (_启动窗口.读 (., 记录集句柄一, “员工管理”), “8*8”))
        赋值 (.禁止, 真)
    .如果真结束
    .如果真 (不等于 (_启动窗口.读 (., 记录集句柄一, “员工权限”), “8*8”))
        赋值 (.禁止, 真)
    .如果真结束
    .如果真 (不等于 (_启动窗口.读 (., 记录集句柄一, “打开数据”), “8*8”))
         ' 打开数据.禁止 ＝ 真
    .如果真结束
    .如果真 (不等于 (_启动窗口.读 (., 记录集句柄一, “备份数据”), “8*8”))
        赋值 (.禁止, 真)
    .如果真结束
    .如果真 (不等于 (_启动窗口.读 (., 记录集句柄一, “还原数据”), “8*8”))
        赋值 (.禁止, 真)
    .如果真结束
    .如果真 (不等于 (_启动窗口.读 (., 记录集句柄一, “数据初始”), “8*8”))
        赋值 (.禁止, 真)
    .如果真结束
    .如果真 (不等于 (_启动窗口.读 (., 记录集句柄一, “清空数据”), “8*8”))
        赋值 (.禁止, 真)
    .如果真结束
    .如果真 (不等于 (_启动窗口.读 (., 记录集句柄一, “往来帐目”), “8*8”))
        赋值 (.禁止, 真)
    .如果真结束
    
    
    
    
    _启动窗口.到后一记录 (., 记录集句柄一)
.判断循环尾 ()








.判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
    置等待鼠标 ()
     ' 处理事件 ()
    
    .如果 (等于 (_启动窗口.读 (., 记录集句柄, 当前菜单), “8”))
        返回 (真)
    .否则
        返回 (假)
    .如果结束
    _启动窗口.到后一记录 (., 记录集句柄)
.判断循环尾 ()
返回 (假)

.子程序 _商品入库_被选择, 空白型, , 
载入 (商品入库, , 真)

.子程序 _销售退货_被选择, 空白型, , 
载入 (销售退货选择单据, , 真)

.子程序 _库存调价_被选择, 空白型, , 
载入 (库存调价, , 真)

.子程序 _库存告警查询_被选择, 空白型, , 
载入 (库存告警查询, , 真)

.子程序 _其他收入_被选择, 空白型, , 
载入 (其他收入, , 真)

.子程序 _库存商品明细表_被选择, 空白型, , 
载入 (库存商品汇总, , 真)

.子程序 _商品大典_被选择, 空白型, , 
载入 (商品大典, , 真)

.子程序 _商品分类_被选择, 空白型, , 
载入 (商品分类, , 真)

.子程序 _供应商资料_被选择, 空白型, , 
载入 (供应商资料, , 真)

.子程序 _员工管理_被选择, 空白型, , 
载入 (员工管理, , 真)

.子程序 _员工权限_被选择, 空白型, , 
载入 (员工权限, , 真)

.子程序 _客户维护_被选择, 空白型, , 
载入 (客户资料, , 真)

.子程序 _商品销售_被选择, 空白型, , 
载入 (销售单, , 假)

.子程序 _库存商品汇总_被选择, 空白型, , 
载入 (库存商品汇总, , 真)

.子程序 _进货查询_被选择, 空白型, , 
载入 (库存单据一览, , 真)

.子程序 _进货退货_被选择, 空白型, , 
载入 (进货退货选择单据, , 真)

.子程序 _进货退货记录_被选择, 空白型, , 
载入 (进货退货记录, , 真)

.子程序 _库存调价记录_被选择, 空白型, , 
载入 (库存调价记录, , 真)

.子程序 _库存盘点_被选择, 空白型, , 
载入 (库存盘点, , 真)

.子程序 _库存盘点记录_被选择, 空白型, , 
载入 (库存盘点记录, , 真)

.子程序 _进销存总览_被选择, 空白型, , 
载入 (进销存一览, , 真)

.子程序 _售后登记_被选择, 空白型, , 
载入 (售后登记, , 真)

.子程序 _售后管理_被选择, 空白型, , 
载入 (售后汇总, , 真)

.子程序 _缺货预定_被选择, 空白型, , 
载入 (缺货预定登记, , 真)

.子程序 _返货情况_被选择, 空白型, , 
载入 (返货登记, , 真)

.子程序 _其他支出_被选择, 空白型, , 
载入 (其他支出, , 真)

.子程序 __启动窗口_可否被关闭, 逻辑型, , 


.子程序 _商品销售汇总_被选择, 空白型, , 

载入 (商品销售统计, , 真)

.子程序 _销售明细查询_被选择, 空白型, , 
载入 (商品销售明细统计, , 真)

.子程序 _销售退货记录_被选择, 空白型, , 
载入 (销售退货记录, , 真)

.子程序 _进货库存查询_被选择, 空白型, , 
载入 (库存单据一览, , 真)

.子程序 _供货商供货统计_被选择, 空白型, , 
载入 (供应商供货统计, , 真)

.子程序 _记帐查询_被选择, 空白型, , 
载入 (记帐查询, , 真)

.子程序 _毛利统计_被选择, 空白型, , 
载入 (毛利合计, , 真)

.子程序 _收款员收款明细_被选择, 空白型, , 
载入 (收款员收款明细, , 真)

.子程序 _财务状况_被选择, 空白型, , 
载入 (财务状况, , 假)

.子程序 _打开数据_被选择, 空白型, , 


.子程序 _还原数据_被选择, 空白型, , 
.局部变量 tt, 文本型, , , 

输入框 (“为确保数据安全，请输入还原数据库通行码:2468！强烈建议先备份数据库再进行本操作！”, “还原数据库”, , tt, 2)
.如果 (等于 (tt, “2468”))
    .如果 (等于 (打开 (), 真))
        _启动窗口.关闭记录集 (., )
        _启动窗口.关闭 (.)
        
        复制文件 (相加 (取运行目录 (), “\data\wlfdb.mdb”), 相加 (取运行目录 (), “\datawlf\”, 到文本 (取现行时间 ())))
        .如果 (等于 (复制文件 (.文件名, 相加 (取运行目录 (), “\data\wlfdb.mdb”)), 真))
            信息框 (“数据还原成功，请检查使用！”, 0, )
            .如果真 (等于 (_启动窗口.打开MDB数据库 (., 相加 (取运行目录 (), “\data\wlfdb.mdb”), , , , ), 假))
                信息框 (“程序将关闭，请重新启动本程序！”, 0, )
                结束 ()
            .如果真结束
            
        .否则
            
        .如果结束
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束


.子程序 __启动窗口_尺寸被改变, 空白型, , 
赋值 (经顶边, 相加 (.可视, 取绝对值 (_启动窗口.), 35))
赋值 (经高度, 相减 (相加 (相减 (_启动窗口.取用户区高度 (), .可视, .), _启动窗口.), 2))
赋值 (经宽度, 相减 (_启动窗口.取用户区宽度 (), 6))
赋值 (经左边, 3)
赋值 (_启动窗口..左边, 0)
赋值 (_启动窗口..顶边, .可视)
赋值 (_启动窗口..高度, 相减 (_启动窗口., .可视, ., 45))
赋值 (_启动窗口..宽度, 相减 (_启动窗口., 10))
_启动窗口.画图片 (., 图片号, 0, 0, .宽度, .高度, )

.子程序 _切换用户_被选择, 空白型, , 
载入 (登录, , 真)


.子程序 _按钮1_被单击, 空白型, , 
 ' 载入 (进货登记, , 真)
载入 (设置打印表头窗口, , 真)

.子程序 __启动窗口_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果 (等于 (键代码, #空格键))
    载入 (销售单, , 真)
.否则
    
.如果结束


.子程序 _修改密码_被选择, 空白型, , 
载入 (修改密码, , 真)


.子程序 _系统使用指南_被选择, 空白型, , 
运行 (相加 (“hh.exe ”, 取当前目录 (), “\hlp\help.chm”), 假, )

.子程序 _工具条1_被单击, 空白型, , 
.参数 按钮索引, 整数型, , 

.如果真 (等于 (按钮索引, 0))
    载入 (商品入库, , 真)
.如果真结束
.如果真 (等于 (按钮索引, 1))
    载入 (进货登记, , 真)
.如果真结束
.如果真 (等于 (按钮索引, 2))
    载入 (销售单, , 真)
.如果真结束
.如果真 (等于 (按钮索引, 3))
    载入 (售后登记, , 真)
.如果真结束
.如果真 (等于 (按钮索引, 4))
    载入 (售后汇总, , 真)
.如果真结束


.子程序 _清空数据库_被选择, 空白型, , 
载入 (清空数据库, , 真)


.子程序 _备份数据_被选择, 空白型, , 
.如果 (等于 (打开 (), 真))
     ' 信息框 (通用对话框1.文件名, 0, )
    置等待鼠标 ()
    .如果 (等于 (复制文件 (相加 (取运行目录 (), “\data\wlfdb.mdb”), .文件名), 真))
        复制文件 (相加 (取运行目录 (), “\data\wlfdb.mdb”), 相加 (取运行目录 (), “\datawlf\”, 到文本 (取现行时间 ())))
        恢复鼠标 ()
        信息框 (“数据库备份成功！”, 0, )
    .否则
        信息框 (“数据库备份失败！请重试！”, #错误图标, “错误”)
    .如果结束
    
    
.否则
    
.如果结束


.子程序 _系统初始化_被选择, 空白型, , 
.局部变量 tt, 文本型, , , 

输入框 (“本操作将会删除所有经营行为，一般在正式使用前操作，为确保数据安全请输入初始数据库通行码:0123456789！强烈建议先备份数据库再进行本操作！”, “系统初始化”, , tt, 2)
.如果 (等于 (tt, “0123456789”))
    _启动窗口.关闭记录集 (., )
    _启动窗口.关闭 (.)
    .如果 (等于 (复制文件 (相加 (取运行目录 (), “\!sysdata\sysdb.wlf”), 相加 (取运行目录 (), “\data\wlfdb.mdb”)), 真))
        信息框 (“数据库初始化完成，重新启动本系统开始你的经营历程吧！”, 0, )
    .否则
        信息框 (“数据库初始失败！请重试！”, #错误图标, “错误”)
    .如果结束
    
.否则
    
.如果结束


.子程序 _往来帐目_被选择, 空白型, , 
载入 (往来帐目, , 真)


.子程序 _注册正版软件_被选择, 空白型, , 
载入 (注册未成功, , 真)


.窗口程序集 窗口程序集2, , , 

.程序集变量 库存基数, 空白型, , , 
.程序集变量 库存总数累计, 空白型, , , 
.程序集变量 库存id, 文本型, , , 
.程序集变量 匿名程序集变量_4905, 空白型, , , 
.子程序 首次显示调价记录, 空白型, , 
.局部变量 t, 空白型, , , 
.局部变量 文本, 文本型, , , 
.局部变量 tt, 空白型, , , 
.局部变量 yy, 空白型, , , 

_启动窗口.关闭记录集 (., 记录集句柄)
赋值 (.图标, {  })
赋值 (脚本, 相加 (“select * from 商品分类 where 一级 ”, “ = ”, “'”, “1”, “'”))
输出调试文本 (脚本)
赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
_启动窗口.到首记录 (., 记录集句柄)
赋值 (yy, 0)
.判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
    置等待鼠标 ()
     ' 处理事件 ()
    
    yy.置图片 (1)
    yy.置选中图片 (2)
    yy.置外形图片 (3)
    .加入项目 (_启动窗口.读 (., 记录集句柄, 1), , , )
    _启动窗口.到后一记录 (., 记录集句柄)
    赋值 (yy, 相加 (yy, 1))
.判断循环尾 ()
_启动窗口.关闭记录集 (., 记录集句柄)
赋值 (t, 0)
赋值 (文本, “”)

.判断循环首 (小于或等于 (t, 取项目数 ()))
    置等待鼠标 ()
     ' 处理事件 ()
    
    t.置图片 (1)
    t.置选中图片 (2)
    yy.置外形图片 (3)
    赋值 (文本, t.取项目文本 ())
    输出调试文本 (文本)
    _启动窗口.关闭记录集 (., 记录集句柄)
    赋值 (脚本, 相加 (“select * from 商品分类 where 二级 ”, “ = ”, “'”, “1”, “' and ”, “商品类名 = '”, 文本, “'”))
    输出调试文本 (脚本)
    赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
    _启动窗口.到首记录 (., 记录集句柄)
    .判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
        置等待鼠标 ()
         ' 处理事件 ()
        
        t.加入项目 (_启动窗口.读 (., 记录集句柄, 2), , , )
        _启动窗口.到后一记录 (., 记录集句柄)
    .判断循环尾 ()
    赋值 (t, 相加 (t, 1))
.判断循环尾 ()

赋值 (t, 0)
_启动窗口.关闭记录集 (., 记录集句柄)


.子程序 _树型框1_项目被选择, 空白型, , 
.参数 选择方式, 整数型, , 

.局部变量 暂1, 文本型, , , 
.局部变量 暂2, 文本型, , , 

写调价表头信息 ()
赋值 (库存基数, 0)
赋值 (库存总数累计, 0)
.如果真 (等于 (.取父项目 (.最大化按钮), -1))
    _启动窗口.关闭记录集 (., 记录集句柄)
    赋值 (脚本, 相加 (“select * from 总库 where 一级分类=”, “'”, .取项目文本 (.最大化按钮), “' and 进货价<>0”, “ order by 单据号”))
    输出调试文本 (脚本)
    赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
    _启动窗口.到首记录 (., 记录集句柄)
    添调价表 ()
    返回 ()
.如果真结束
.如果真 (等于 (.取缩进层次 (.最大化按钮), 2))
    .如果 (等于 (.是否有子项目 (.最大化按钮), 假))
        _启动窗口.关闭记录集 (., 记录集句柄一)
        赋值 (脚本, 相加 (“select * from 总库  where 二级分类='”, .取项目文本 (.最大化按钮), “' and 进货价<>0”, “ order by 单据号”))
        输出调试文本 (脚本)
        赋值 (记录集句柄一, _启动窗口.查询 (., 脚本))
        _启动窗口.到首记录 (., 记录集句柄一)
        .判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄一), 假))
            置等待鼠标 ()
             ' 处理事件 ()
            
            赋值 (暂1, 到文本 (_启动窗口.读 (., 记录集句柄一, 4)))
            .如果 (不等于 (暂1, 暂2))
                .加入项目 (.最大化按钮, 到文本 (_启动窗口.读 (., 记录集句柄一, 4)), , , ) ' 编码
            .否则
                
            .如果结束
            赋值 (暂2, 暂1)
            _启动窗口.到后一记录 (., 记录集句柄一)
        .判断循环尾 ()
        _启动窗口.关闭记录集 (., 记录集句柄一)
    .否则
        
    .如果结束
    _启动窗口.关闭记录集 (., 记录集句柄)
    赋值 (脚本, 相加 (“select * from 总库 where 二级分类=”, “'”, .取项目文本 (.最大化按钮), “' and 进货价<>0”, “ order by 单据号”))
    输出调试文本 (脚本)
    赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
    _启动窗口.到首记录 (., 记录集句柄)
    添调价表 ()
    .扩展 (.最大化按钮)
.如果真结束
.如果真 (等于 (.取缩进层次 (.最大化按钮), 3))
    _启动窗口.关闭记录集 (., 记录集句柄)
    赋值 (脚本, 相加 (“select * from 总库 where 商品名称=”, “'”, .取项目文本 (.最大化按钮), “' and 二级分类='”, .取父项目 (.最大化按钮).取项目文本 (), “' and 进货价<>0”, “ order by 单据号”))
    输出调试文本 (脚本)
    赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
    _启动窗口.到首记录 (., 记录集句柄)
    添调价表 ()
.如果真结束



.子程序 写调价表头信息, 空白型, , 
赋值 (., 1)
赋值 (., 70)
赋值 (., 0)
赋值 (., 0)
赋值 (., 19)
相减 (., 1).未知支持库函数_9 (0, 1, “商品编码”)
相减 (., 1).未知支持库函数_9 (1, 1, “商品名称”)
相减 (., 1).未知支持库函数_9 (2, 1, “入库日期”)
相减 (., 1).未知支持库函数_9 (3, 1, “拼音码”)
相减 (., 1).未知支持库函数_9 (4, 1, “规格”)
相减 (., 1).未知支持库函数_9 (5, 1, “库存数量”)
相减 (., 1).未知支持库函数_9 (6, 1, “进货价”)
相减 (., 1).未知支持库函数_9 (7, 1, “应付金额”)
相减 (., 1).未知支持库函数_9 (8, 1, “已付金额”)
相减 (., 1).未知支持库函数_9 (9, 1, “零售价”)
相减 (., 1).未知支持库函数_9 (10, 1, “批发价”)
相减 (., 1).未知支持库函数_9 (11, 1, “库存上限”)
相减 (., 1).未知支持库函数_9 (12, 1, “库存下限”)
相减 (., 1).未知支持库函数_9 (13, 1, “一级分类”)
相减 (., 1).未知支持库函数_9 (14, 1, “二级分类”)
相减 (., 1).未知支持库函数_9 (15, 1, “供货商”)
相减 (., 1).未知支持库函数_9 (16, 1, “备注”)
相减 (., 1).未知支持库函数_9 (17, 1, “产地”)
相减 (., 1).未知支持库函数_9 (18, 1, “库存id”)
赋值 (., 1)

.子程序 _按钮4_被单击, 空白型, , 
销毁 ()

.子程序 添调价表, 空白型, , 
赋值 (库存基数, 0)
赋值 (库存总数累计, 0)
赋值 (., 1)

.判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
    置等待鼠标 ()
     ' 处理事件 ()
    .未知支持库函数_38 () ' <!!!>
    相减 (., 1).未知支持库函数_9 (0, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 6))) ' 编码
    相减 (., 1).未知支持库函数_9 (1, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 4))) ' 名称
    相减 (., 1).未知支持库函数_9 (2, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 2))) ' 入库日期
    相减 (., 1).未知支持库函数_9 (3, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 5))) ' 拼音码
    相减 (., 1).未知支持库函数_9 (4, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 17))) ' 规格]
    赋值 (库存基数, _启动窗口.读 (., 记录集句柄, “库存数量”))
    相减 (., 1).未知支持库函数_9 (5, 1, 到文本 (库存基数)) ' 数量
    赋值 (库存总数累计, 相加 (库存总数累计, 库存基数))
    相减 (., 1).未知支持库函数_9 (6, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 8))) ' 进货价
    相减 (., 1).未知支持库函数_9 (7, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 3))) ' 应付
    相减 (., 1).未知支持库函数_9 (8, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 19))) ' 已付
    相减 (., 1).未知支持库函数_9 (9, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 7))) ' 零售
    相减 (., 1).未知支持库函数_9 (10, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 9))) ' 批发
    相减 (., 1).未知支持库函数_9 (11, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 15))) ' 上限
    相减 (., 1).未知支持库函数_9 (12, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 16))) ' 下限
    相减 (., 1).未知支持库函数_9 (13, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 12))) ' 一级
    相减 (., 1).未知支持库函数_9 (14, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 13))) ' 二级
    相减 (., 1).未知支持库函数_9 (15, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 14))) ' 供货商
    相减 (., 1).未知支持库函数_9 (16, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 18))) ' 备注
    相减 (., 1).未知支持库函数_9 (17, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 20)))
    相减 (., 1).未知支持库函数_9 (18, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “库存id”)))
    _启动窗口.到后一记录 (., 记录集句柄)
.判断循环尾 ()
_启动窗口.关闭记录集 (., 记录集句柄)
.未知支持库函数_38 () ' <!!!>
相减 (., 1).未知支持库函数_9 (4, 1, “总计：”) ' 数量
相减 (., 1).未知支持库函数_9 (5, 1, 到文本 (库存总数累计)) ' 数量


.子程序 _库存调价_创建完毕, 空白型, , 
赋值 (., 经顶边)
赋值 (., 经左边)
赋值 (., 假)

写调价表头信息 ()
首次显示调价记录 ()


.子程序 _表格1_光标位置改变, 空白型, , 
.如果真 (等于 (未知支持库函数_3 (), -1))
    返回 ()
.如果真结束

赋值 (库存id, 未知支持库函数_3 ().未知支持库函数_10 (18))
赋值 (.内容, “”)
.如果真 (等于 (未知支持库函数_3 (), -1))
    赋值 (.内容, “”)
    赋值 (.内容, “”)
    赋值 (.内容, “”)
    赋值 (.内容, “”)
    赋值 (.内容, “”)
    赋值 (.内容, “”)
    赋值 (.内容, “”)
    赋值 (.内容, “”)
    返回 ()
.如果真结束


.如果 (等于 (库存id, “”))
    赋值 (.内容, “”)
    赋值 (.内容, “”)
    赋值 (.内容, “”)
    赋值 (.内容, “”)
    赋值 (.内容, “”)
    赋值 (.内容, “”)
    赋值 (.内容, “”)
    赋值 (.内容, “”)
    
    返回 ()
.否则
    赋值 (.内容, 未知支持库函数_3 ().未知支持库函数_10 (1))
    赋值 (.内容, 未知支持库函数_3 ().未知支持库函数_10 (13))
    赋值 (.内容, 未知支持库函数_3 ().未知支持库函数_10 (4))
    赋值 (.内容, 未知支持库函数_3 ().未知支持库函数_10 (17))
    赋值 (.内容, 未知支持库函数_3 ().未知支持库函数_10 (6))
    赋值 (.内容, .内容)
    赋值 (.内容, 未知支持库函数_3 ().未知支持库函数_10 (15))
    赋值 (.内容, 未知支持库函数_3 ().未知支持库函数_10 (9))
    赋值 (.内容, 未知支持库函数_3 ().未知支持库函数_10 (10))
.如果结束


.子程序 _分组框1_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 



.子程序 _按钮3_被单击, 空白型, , 
.如果 (或者 (不等于 (.内容, “”), 不等于 (到数值 (.内容), 0)))
    赋值 (脚本, 相加 (“update 总库 set 零售价=”, .内容, “,进货价=”, .内容, “,批发价=”, .内容, “ where 库存id=”, 库存id))
    输出调试文本 (脚本)
    .如果 (等于 (_启动窗口.执行 (., 脚本, ), 真))
        赋值 (脚本, 相加 (“insert into 商品调价记录(商品名称,商品大类,规格,产地,进货价,供货商,原始售价,调整售价,调价日期,商品编码,库存id,操作员,调整进价,调整批发价,批发价) values ('”, .内容, “','”, .内容, “','”, .内容, “','”, .内容, “','”, .内容, “','”, .内容, “','”, .内容, “','”, .内容, “','”, 未知支持库函数_12 (取现行时间 (), “%y-%m-%d”), “','”, 未知支持库函数_3 ().未知支持库函数_10 (0), “','”, 库存id, “','”, 操作员, “','”, .内容, “','”, .内容, “','”, 未知支持库函数_3 ().未知支持库函数_10 (10), “')”))
        输出调试文本 (脚本)
        .如果 (等于 (_启动窗口.执行 (., 脚本, ), 真))
            信息框 (“商品调价成功！”, 0, )
            赋值 (.内容, “”)
            赋值 (.内容, “”)
            赋值 (.内容, “”)
            赋值 (.内容, “”)
            赋值 (.内容, “”)
            赋值 (.内容, “”)
            赋值 (.内容, “”)
            赋值 (.内容, “”)
            赋值 (.内容, “”)
            赋值 (.内容, “”)
            .扩展 (.最大化按钮)
        .否则
            
        .如果结束
        
        库存调价._树型框1_项目被选择 (库存调价..最大化按钮)
    .否则
        信息框 (“商品调价失败！”, 0, )
    .如果结束
    
    
    
    
    
    
.否则
    信息框 (“请添写调整后的售价！”, 0, )
.如果结束


.子程序 _编辑框1_内容被改变, 空白型, , 
_启动窗口.关闭记录集 (., 记录集句柄)
赋值 (脚本, 相加 (“select * from 总库 where 拼音码”, “ like '%”, .内容, “%' and 进货价>0”))
输出调试文本 (脚本)
赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
_启动窗口.到首记录 (., 记录集句柄)
添调价表 ()


.子程序 _按钮2_被单击, 空白型, , 
销毁 ()


.子程序 _分隔条2_被拖动, 空白型, , 
.参数 原位置, 整数型, , 
.参数 目的位置, 整数型, , 

.局部变量 新左边, 整数型, , , 

.如果真 (小于 (目的位置, 8))
    赋值 (目的位置, 8)
.如果真结束
.如果真 (大于 (目的位置, 相减 (., 20)))
    赋值 (目的位置, 相减 (., 20))
.如果真结束
赋值 (., 目的位置)
赋值 (.宽度, 相减 (., .左边))
赋值 (新左边, 相加 (., .))
新左边.移动 (相减 (., 12, 新左边), )


.子程序 _按钮1_被单击, 空白型, , 


.窗口程序集 窗口程序集3, , , 

.子程序 _记帐查询_创建完毕, 空白型, , 
.局部变量 t, 空白型, , , 
.局部变量 t1, 空白型, , , 

赋值 (., 经顶边)
赋值 (., 经左边)
赋值 (., 假)

赋值 (客户还款操作, 假)
赋值 (供货商还款操作, 假)
赋值 (.可视, 假)
赋值 (.可视, 假)
 ' 按钮5.可视 ＝ 假
 ' 按钮4.可视 ＝ 假
赋值 (脚本, “select count(*) from 客户资料”)
_启动窗口.关闭记录集 (., 记录集句柄一)
赋值 (记录集句柄一, _启动窗口.查询 (., 脚本))
赋值 (t, _启动窗口.读 (., 记录集句柄一, 1))
_启动窗口.关闭记录集 (., 记录集句柄一)
赋值 (脚本, “select * from 客户资料”)
赋值 (记录集句柄一, _启动窗口.查询 (., 脚本))
_启动窗口.到首记录 (., 记录集句柄一)
“全部客户”.加入项目 ()
“全部客户”.加入项目 ()
.计次循环首 (t, )
    .如果 (不等于 (_启动窗口.读 (., 记录集句柄一, 2), “无记名客户”))
        _启动窗口.读 (., 记录集句柄一, 2).加入项目 ()
        _启动窗口.读 (., 记录集句柄一, 2).加入项目 ()
        
    .否则
        
    .如果结束
    _启动窗口.到后一记录 (., 记录集句柄一)
.计次循环尾 ()
赋值 (.内容, “请选择客户名称”)

.子程序 供应表头, 空白型, , 


.子程序 _选择夹1_被单击, 空白型, , 
.如果 (等于 (.现行子夹, 1))
    赋值 (., 1)
    赋值 (., 1)
    赋值 (., 60)
    赋值 (., 0)
    赋值 (., 0)
    赋值 (., 6)
    0.未知支持库函数_32 (100)
    相减 (., 1).未知支持库函数_9 (0, 1, “客户名称”)
    0.未知支持库函数_25 (1, 相减 (., 1), 1, 3)
    相减 (., 1).未知支持库函数_9 (1, 1, “还款金额”)
    2.未知支持库函数_32 (100)
    相减 (., 1).未知支持库函数_9 (2, 1, “还款日期”)
    相减 (., 1).未知支持库函数_9 (3, 1, “销售id”)
    4.未知支持库函数_32 (100)
    相减 (., 1).未知支持库函数_9 (4, 1, “销售单号”)
    相减 (., 1).未知支持库函数_9 (5, 1, “操作员”)
    赋值 (., 1)
    赋值 (., 88)
    赋值 (., 88)
.否则
    
.如果结束


.子程序 _组合框1_列表项被选择, 空白型, , 
赋值 (., 1)
赋值 (., 60)
赋值 (., 0)
赋值 (., 0)
赋值 (., 10)
相减 (., 1).未知支持库函数_9 (0, 1, “客户名称”)
1.未知支持库函数_32 (150)
相减 (., 1).未知支持库函数_9 (1, 1, “商品名称”)
相减 (., 1).未知支持库函数_9 (2, 1, “商品编码”)
相减 (., 1).未知支持库函数_9 (3, 1, “销售数量”)
0.未知支持库函数_25 (4, 相减 (., 1), 5, 3)
相减 (., 1).未知支持库函数_9 (4, 1, “零售价”)
相减 (., 1).未知支持库函数_9 (5, 1, “未付金额”)
6.未知支持库函数_32 (100)
相减 (., 1).未知支持库函数_9 (6, 1, “销售单号”)
相减 (., 1).未知支持库函数_9 (7, 1, “销售id”)
相减 (., 1).未知支持库函数_9 (8, 1, “操作员”)
9.未知支持库函数_32 (100)
相减 (., 1).未知支持库函数_9 (9, 1, “销售日期”)
赋值 (., 1)


.如果 (等于 (.内容, “全部客户”))
    赋值 (脚本, “select * from 销售 where 实付金额 <0”)
    _启动窗口.关闭记录集 (., )
    赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
    _启动窗口.到首记录 (., 记录集句柄)
    .判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
        置等待鼠标 ()
        .未知支持库函数_38 ()
        相减 (., 1).未知支持库函数_9 (0, 1, _启动窗口.读 (., 记录集句柄, “购买客户”))
        相减 (., 1).未知支持库函数_9 (1, 1, _启动窗口.读 (., 记录集句柄, “商品名称”))
        相减 (., 1).未知支持库函数_9 (2, 1, _启动窗口.读 (., 记录集句柄, “商品编码”))
        相减 (., 1).未知支持库函数_9 (3, 1, _启动窗口.读 (., 记录集句柄, “销售数量”))
        相减 (., 1).未知支持库函数_9 (4, 1, _启动窗口.读 (., 记录集句柄, “零售价”))
        相减 (., 1).未知支持库函数_9 (5, 1, _启动窗口.读 (., 记录集句柄, “实付金额”))
        相减 (., 1).未知支持库函数_9 (6, 1, _启动窗口.读 (., 记录集句柄, “单据号”))
        相减 (., 1).未知支持库函数_9 (7, 1, _启动窗口.读 (., 记录集句柄, “销售id”))
        相减 (., 1).未知支持库函数_9 (8, 1, _启动窗口.读 (., 记录集句柄, “操作员”))
        相减 (., 1).未知支持库函数_9 (9, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “销售日期”)))
        
        _启动窗口.到后一记录 (., 记录集句柄)
    .判断循环尾 ()
    返回 ()
.否则
    
    
.如果结束
赋值 (脚本, 相加 (“select * from 销售 where 购买客户='”, .内容, “' and 实付金额<0”))
_启动窗口.关闭记录集 (., )
赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
_启动窗口.到首记录 (., 记录集句柄)
添客户 ()

.子程序 添客户, 空白型, , 
.局部变量 合计k, 空白型, , , 

赋值 (., 1)
赋值 (合计k, 0)
.判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
    置等待鼠标 ()
    .未知支持库函数_38 ()
    相减 (., 1).未知支持库函数_9 (0, 1, _启动窗口.读 (., 记录集句柄, “购买客户”))
    相减 (., 1).未知支持库函数_9 (1, 1, _启动窗口.读 (., 记录集句柄, “商品名称”))
    相减 (., 1).未知支持库函数_9 (2, 1, _启动窗口.读 (., 记录集句柄, “商品编码”))
    相减 (., 1).未知支持库函数_9 (3, 1, _启动窗口.读 (., 记录集句柄, “销售数量”))
    相减 (., 1).未知支持库函数_9 (4, 1, _启动窗口.读 (., 记录集句柄, “零售价”))
    相减 (., 1).未知支持库函数_9 (5, 1, _启动窗口.读 (., 记录集句柄, “实付金额”))
    赋值 (合计k, 相加 (合计k, 到数值 (_启动窗口.读 (., 记录集句柄, “实付金额”))))
    相减 (., 1).未知支持库函数_9 (6, 1, _启动窗口.读 (., 记录集句柄, “单据号”))
    相减 (., 1).未知支持库函数_9 (7, 1, _启动窗口.读 (., 记录集句柄, “销售id”))
    相减 (., 1).未知支持库函数_9 (8, 1, _启动窗口.读 (., 记录集句柄, “操作员”))
    相减 (., 1).未知支持库函数_9 (9, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “销售日期”)))
    
    _启动窗口.到后一记录 (., 记录集句柄)
.判断循环尾 ()
.未知支持库函数_38 ()
相减 (., 1).未知支持库函数_9 (4, 1, “合计:”)
相减 (., 1).未知支持库函数_9 (5, 1, 到文本 (合计k))
 ' 信息框 (到文本 (表格1.行数 － 1), 0, )

.子程序 _表格1_光标位置改变, 空白型, , 


.子程序 _表格1_被双击, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 t1, 空白型, , , 

.如果 (等于 (未知支持库函数_3 (), -1))
    返回 ()
.否则
    .如果真 (等于 (.内容, “”))
        信息框 (“请选择客户名！”, 0, )
        返回 ()
    .如果真结束
    
    .如果 (等于 (未知支持库函数_3 ().未知支持库函数_10 (4), “合计:”))
        .如果真 (等于 (到数值 (未知支持库函数_3 ().未知支持库函数_10 (5)), 0))
            返回 ()
        .如果真结束
        
        .如果 (等于 (信息框 (“您确定要进行该客户欠帐全部还款操作吗?点'是'全部还款,点'否'取消本次操作。”, 4, ), 5))
            .计次循环首 (相减 (., 1), t1)
                t1.未知支持库函数_9 (5, 1, 子文本替换 (t1.未知支持库函数_10 (5), “-”, “”, , , 真))
            .计次循环尾 ()
            赋值 (.可视, 真)
            赋值 (.可视, 真)
            
        .否则
            返回 ()
             ' 信息框 (“no ”, 0, )
        .如果结束
        
    .否则
        载入 (记帐还款, , 真)
    .如果结束
    
.如果结束




.子程序 _按钮2_被单击, 空白型, , 
赋值 (.可视, 假)
赋值 (.可视, 假)
赋值 (客户还款操作, 假)
_组合框1_列表项被选择 ()

.子程序 _选择夹1_子夹被改变, 空白型, , 
.如果 (等于 (客户还款操作, 真))
    信息框 (“本单中有客户还款操作未提交！请提交或取消提交！”, 0, )
    赋值 (.现行子夹, 0)
.否则
    
.如果结束

.如果 (等于 (供货商还款操作, 真))
    信息框 (“本单中有供货商未付款付款操作未提交！请提交或取消提交！”, 0, )
    赋值 (.现行子夹, 1)
.否则
    
.如果结束


.子程序 _记帐查询_可否被关闭, 逻辑型, , 
.如果 (等于 (客户还款操作, 真))
    信息框 (“客户还款操作未提交！请提交或取消提交再关闭本窗口！”, 0, )
    赋值 (.现行子夹, 0)
    返回 (假)
    
.否则
    
.如果结束
.如果真 (等于 (供货商还款操作, 真))
    信息框 (“还进货款操作未提交！请提交或取消提交再关闭本窗口！”, 0, )
    赋值 (.现行子夹, 1)
    返回 (假)
.如果真结束


.子程序 _按钮1_被单击, 空白型, , 
.局部变量 销售id, 文本型, , , 
.局部变量 还款额, 文本型, , , 
.局部变量 匿名局部变量_7091, 空白型, , , 
.局部变量 t1, 空白型, , , 

.计次循环首 (相减 (., 1), t1)
    赋值 (还款额, t1.未知支持库函数_10 (5))
    .如果 (并且 (大于 (到数值 (还款额), 0), 不等于 (t1.未知支持库函数_10 (4), “合计:”)))
        赋值 (销售id, t1.未知支持库函数_10 (7))
        赋值 (脚本, 相加 (“update 销售 set 实付金额=”, 还款额, “ where 销售id=”, 销售id))
        .如果 (等于 (_启动窗口.执行 (., 脚本, ), 假))
            信息框 (“执行修改操作失败!”, 0, )
            返回 ()
        .否则
            赋值 (脚本, 相加 (“insert into 销售还款记录(还款日期,还款金额,销售id,操作员,客户姓名,销售单号)  values ('”, 未知支持库函数_12 (取现行时间 (), “%y-%m-%d”), “',”, 还款额, “,'”, 销售id, “','”, 操作员, “','”, t1.未知支持库函数_10 (0), “','”, t1.未知支持库函数_10 (6), “')”))
            .如果 (等于 (_启动窗口.执行 (., 脚本, ), 假))
                信息框 (“执行记录操作失败!”, 0, )
                返回 ()
            .否则
                赋值 (脚本, 相加 (“insert into 收款员收款明细(收入日期,金额,收入原因,操作员,备注)  values ('”, 未知支持库函数_12 (取现行时间 (), “%y-%m-%d”), “',”, 还款额, “,'”, t1.未知支持库函数_10 (0), “还款','”, 操作员, “','”, t1.未知支持库函数_10 (6), “')”))
                .如果 (等于 (_启动窗口.执行 (., 脚本, ), 假))
                    信息框 (“执行记录操作失败!”, 0, )
                    返回 ()
                .否则
                    
                .如果结束
                
            .如果结束
            
        .如果结束
        
    .否则
        
    .如果结束
    
    
.计次循环尾 ()
_组合框1_列表项被选择 ()
信息框 (“执行成功!”, 0, )
赋值 (客户还款操作, 假)
赋值 (.可视, 假)
赋值 (.可视, 假)


.子程序 _按钮3_被单击, 空白型, , 
赋值 (表格文件名, 相加 (取运行目录 (), “\wgid\客户财务往来”))
.如果 (等于 (表格文件名.未知支持库函数_55 (), 真))
    置文件属性 (表格文件名, 1)
    赋值 (表头标题, “客户财务往来”)
    载入 (打印, , 真)
.否则
    信息框 (“打印格式文件出错，操作失败！”, 相加 (0, #错误图标), )
.如果结束



.子程序 _按钮7_被单击, 空白型, , 
赋值 (脚本, “select * from 未付款”)
_启动窗口.关闭记录集 (., )
赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
_启动窗口.到首记录 (., 记录集句柄)
加供应 ()


.子程序 _按钮8_被单击, 空白型, , 
赋值 (表格文件名, 相加 (取运行目录 (), “\wgid\供货商财务往来”))
.如果 (等于 (表格文件名.未知支持库函数_55 (), 真))
    置文件属性 (表格文件名, 1)
    赋值 (表头标题, “供货商财务往来”)
    载入 (打印, , 真)
.否则
    信息框 (“打印格式文件出错，操作失败！”, 相加 (0, #错误图标), )
.如果结束


.子程序 _按钮4_被单击, 空白型, , 



.子程序 _按钮5_被单击, 空白型, , 
赋值 (表格文件名, 相加 (取运行目录 (), “\wgid\客户还款记录”))
.如果 (等于 (表格文件名.未知支持库函数_55 (), 真))
    置文件属性 (表格文件名, 1)
    赋值 (表头标题, “客户还款记录”)
    载入 (打印, , 真)
.否则
    信息框 (“打印格式文件出错，操作失败！”, 相加 (0, #错误图标), )
.如果结束


.子程序 _组合框2_列表项被选择, 空白型, , 
赋值 (., 1)
赋值 (., 6)
.如果 (等于 (.内容, “全部客户”))
    赋值 (脚本, “select * from 销售还款记录”)
    _启动窗口.关闭记录集 (., 记录集句柄)
    赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
    _启动窗口.到首记录 (., 记录集句柄)
    .判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
        .未知支持库函数_38 ()
        相减 (., 1).未知支持库函数_9 (0, 1, _启动窗口.读 (., 记录集句柄, “客户姓名”))
        相减 (., 1).未知支持库函数_9 (1, 1, _启动窗口.读 (., 记录集句柄, “还款金额”))
        相减 (., 1).未知支持库函数_9 (2, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “还款日期”)))
        相减 (., 1).未知支持库函数_9 (3, 1, _启动窗口.读 (., 记录集句柄, “销售id”))
        相减 (., 1).未知支持库函数_9 (4, 1, _启动窗口.读 (., 记录集句柄, “销售单号”))
        相减 (., 1).未知支持库函数_9 (5, 1, _启动窗口.读 (., 记录集句柄, “操作员”))
        _启动窗口.到后一记录 (., 记录集句柄)
    .判断循环尾 ()
.否则
    赋值 (., 1)
    赋值 (脚本, 相加 (“select * from 销售还款记录 where 客户姓名='”, .内容, “'”))
    _启动窗口.关闭记录集 (., 记录集句柄)
    赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
    _启动窗口.到首记录 (., 记录集句柄)
    .判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
        .未知支持库函数_38 ()
        相减 (., 1).未知支持库函数_9 (0, 1, _启动窗口.读 (., 记录集句柄, “客户姓名”))
        相减 (., 1).未知支持库函数_9 (1, 1, _启动窗口.读 (., 记录集句柄, “还款金额”))
        相减 (., 1).未知支持库函数_9 (2, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “还款日期”)))
        相减 (., 1).未知支持库函数_9 (3, 1, _启动窗口.读 (., 记录集句柄, “销售id”))
        相减 (., 1).未知支持库函数_9 (4, 1, _启动窗口.读 (., 记录集句柄, “销售单号”))
        相减 (., 1).未知支持库函数_9 (5, 1, _启动窗口.读 (., 记录集句柄, “操作员”))
        _启动窗口.到后一记录 (., 记录集句柄)
    .判断循环尾 ()
.如果结束


.窗口程序集 窗口程序集4, , , 

.子程序 _商品大典_创建完毕, 空白型, , 
赋值 (., 经顶边)
赋值 (., 经左边)
赋值 (., 假)

赋值 (是否为一级, 假)
未知支持库函数_0 (1)
赋值 (.图标, {  })
首次读取并显示记录 ()

.子程序 首次读取并显示记录, 空白型, , 
.局部变量 t, 空白型, , , 
.局部变量 文本, 文本型, , , 
.局部变量 tt, 空白型, , , 
.局部变量 yy, 空白型, , , 

_启动窗口.关闭记录集 (., 记录集句柄)
赋值 (.图标, {  })
赋值 (脚本, 相加 (“select * from 商品分类 where 一级 ”, “ = ”, “'”, “1”, “'”))
输出调试文本 (脚本)
赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
_启动窗口.到首记录 (., 记录集句柄)
赋值 (yy, 0)
.判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
    置等待鼠标 ()
     ' 处理事件 ()
    
    yy.置图片 (1)
    yy.置选中图片 (2)
    yy.置外形图片 (3)
    .加入项目 (_启动窗口.读 (., 记录集句柄, 1), , , )
    _启动窗口.到后一记录 (., 记录集句柄)
    赋值 (yy, 相加 (yy, 1))
.判断循环尾 ()
_启动窗口.关闭记录集 (., 记录集句柄)
赋值 (t, 0)
赋值 (文本, “”)

.判断循环首 (小于或等于 (t, 取项目数 ()))
    t.置图片 (1)
    t.置选中图片 (2)
    yy.置外形图片 (3)
    赋值 (文本, t.取项目文本 ())
    输出调试文本 (文本)
    _启动窗口.关闭记录集 (., 记录集句柄)
    赋值 (脚本, 相加 (“select * from 商品分类 where 二级 ”, “ = ”, “'”, “1”, “' and ”, “商品类名 = '”, 文本, “'”))
    输出调试文本 (脚本)
    赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
    _启动窗口.到首记录 (., 记录集句柄)
    .判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
        置等待鼠标 ()
         ' 处理事件 ()
        
        t.加入项目 (_启动窗口.读 (., 记录集句柄, 2), , , )
        _启动窗口.到后一记录 (., 记录集句柄)
    .判断循环尾 ()
    赋值 (t, 相加 (t, 1))
.判断循环尾 ()

赋值 (t, 0)
_启动窗口.关闭记录集 (., 记录集句柄)

.子程序 _树型框1_被双击, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 



.子程序 _按钮1_被单击, 空白型, , 
载入 (添加商品资料, , 真)
_树型框1_项目被选择 (.最大化按钮)

.子程序 _树型框1_项目被选择, 空白型, , 
.参数 选择方式, 整数型, , 

.如果 (不等于 (.取父项目 (.最大化按钮), -1)) ' 取现在的二级分类及他的一级分类名称，为新建商品资料做准备
    赋值 (分类名, .取项目文本 (.最大化按钮))
    赋值 (一级分类名, .取父项目 (.最大化按钮).取项目文本 ())
.否则
    赋值 (是否为一级, 假)
    .如果 (等于 (.是否有子项目 (.最大化按钮), 假))
        赋值 (分类名, .取项目文本 (.最大化按钮))
        赋值 (是否为一级, 真)
    .否则
        赋值 (分类名, “”)
    .如果结束
    
    
.如果结束


.如果 (等于 (.取父项目 (.最大化按钮), -1))
    _启动窗口.关闭记录集 (., 记录集句柄)
    赋值 (脚本, 相加 (“select * from 商品大典 where 一级分类名=”, “'”, .取项目文本 (.最大化按钮), “' ”))
    输出调试文本 (脚本)
    赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
    
    赋值 (., 1)
    赋值 (., 9)
    _启动窗口.到首记录 (., 记录集句柄)
    相减 (., 1).未知支持库函数_9 (0, 1, “商品编码”)
    相减 (., 1).未知支持库函数_9 (1, 1, “商品名称”)
    相减 (., 1).未知支持库函数_9 (2, 1, “拼音码”)
    相减 (., 1).未知支持库函数_9 (3, 1, “规格”)
    相减 (., 1).未知支持库函数_9 (4, 1, “库存上限”)
    相减 (., 1).未知支持库函数_9 (5, 1, “库存下限”)
    相减 (., 1).未知支持库函数_9 (6, 1, “一级分类名”)
    相减 (., 1).未知支持库函数_9 (7, 1, “二级分类名”)
    相减 (., 1).未知支持库函数_9 (8, 1, “产地”)
     ' 表格1.置数据 (表格1.行数 － 1, 9, 1, “零售价”)
    
    .判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
        置等待鼠标 ()
         ' 处理事件 ()
        
        .未知支持库函数_38 () ' <!!!>
        相减 (., 1).未知支持库函数_9 (0, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 3)))
        相减 (., 1).未知支持库函数_9 (1, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 1)))
        相减 (., 1).未知支持库函数_9 (2, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 2)))
        相减 (., 1).未知支持库函数_9 (3, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 4)))
        相减 (., 1).未知支持库函数_9 (4, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 5)))
        相减 (., 1).未知支持库函数_9 (5, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 6)))
        相减 (., 1).未知支持库函数_9 (6, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 7)))
        相减 (., 1).未知支持库函数_9 (7, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 8)))
        相减 (., 1).未知支持库函数_9 (8, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 9)))
         ' 表格1.置数据 (表格1.行数 － 1, 9, 1, 到文本 (_启动窗口.外部数据库1.读 (记录集句柄, 10)))
        
        
        
        
        
        _启动窗口.到后一记录 (., 记录集句柄)
    .判断循环尾 ()
    返回 ()
.否则
    
.如果结束



_启动窗口.关闭记录集 (., 记录集句柄)
赋值 (脚本, 相加 (“select * from 商品大典 where 二级分类名=”, “'”, .取项目文本 (.最大化按钮), “' ”))
输出调试文本 (脚本)
赋值 (记录集句柄, _启动窗口.查询 (., 脚本))

赋值 (., 1)
赋值 (., 9)
_启动窗口.到首记录 (., 记录集句柄)
相减 (., 1).未知支持库函数_9 (0, 1, “商品编码”)
相减 (., 1).未知支持库函数_9 (1, 1, “商品名称”)
相减 (., 1).未知支持库函数_9 (2, 1, “拼音码”)
相减 (., 1).未知支持库函数_9 (3, 1, “规格”)
相减 (., 1).未知支持库函数_9 (4, 1, “库存上限”)
相减 (., 1).未知支持库函数_9 (5, 1, “库存下限”)
相减 (., 1).未知支持库函数_9 (6, 1, “一级分类名”)
相减 (., 1).未知支持库函数_9 (7, 1, “二级分类名”)
相减 (., 1).未知支持库函数_9 (8, 1, “产地”)
 ' 表格1.置数据 (表格1.行数 － 1, 9, 1, “零售价”)



.判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
    置等待鼠标 ()
     ' 处理事件 ()
    
    .未知支持库函数_38 () ' <!!!>
    相减 (., 1).未知支持库函数_9 (0, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 3)))
    相减 (., 1).未知支持库函数_9 (1, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 1)))
    相减 (., 1).未知支持库函数_9 (2, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 2)))
    相减 (., 1).未知支持库函数_9 (3, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 4)))
    相减 (., 1).未知支持库函数_9 (4, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 5)))
    相减 (., 1).未知支持库函数_9 (5, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 6)))
    相减 (., 1).未知支持库函数_9 (6, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 7)))
    相减 (., 1).未知支持库函数_9 (7, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 8)))
    相减 (., 1).未知支持库函数_9 (8, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 9)))
     ' 表格1.置数据 (表格1.行数 － 1, 9, 1, 到文本 (_启动窗口.外部数据库1.读 (记录集句柄, 10)))
    _启动窗口.到后一记录 (., 记录集句柄)
.判断循环尾 ()


.子程序 _商品大典_将被销毁, 空白型, , 
_启动窗口.关闭记录集 (., 记录集句柄)


.子程序 _按钮2_被单击, 空白型, , 
信息框 (“请注意,本操作将影响库存商品信息及销售记录数据信息结构,请谨慎操作!”, 0, )
载入 (商品大典编辑输入, , 假)

.子程序 _表格1_光标位置改变, 空白型, , 


.子程序 _按钮3_被单击, 空白型, , 
赋值 (脚本, “select count(*) from 总库”)
_启动窗口.关闭记录集 (., 记录集句柄)
赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
_启动窗口.到首记录 (., 记录集句柄)
.如果 (大于 (_启动窗口.读 (., 记录集句柄, 1), 0))
    信息框 (“已经有入库操作，不能进行删除操作！！”, 0, )
.否则
    载入 (商品大典删除输入, , 真)
    
.如果结束



.子程序 _按钮5_被单击, 空白型, , 
首次读取并显示记录 ()

.子程序 _按钮4_被单击, 空白型, , 
赋值 (表格文件名, 相加 (取运行目录 (), “\wgid\商品大典”))
.如果 (等于 (表格文件名.未知支持库函数_55 (), 真))
    置文件属性 (表格文件名, 1)
    赋值 (表头标题, “商品大典”)
    载入 (打印, , 真)
.否则
    信息框 (“打印格式文件出错，操作失败！”, 相加 (0, #错误图标), )
.如果结束



.子程序 _按钮6_被单击, 空白型, , 
_启动窗口.关闭记录集 (., 记录集句柄)
赋值 (脚本, “select * from 商品大典”)
输出调试文本 (脚本)
赋值 (记录集句柄, _启动窗口.查询 (., 脚本))

赋值 (., 1)
赋值 (., 9)
_启动窗口.到首记录 (., 记录集句柄)
相减 (., 1).未知支持库函数_9 (0, 1, “商品编码”)
相减 (., 1).未知支持库函数_9 (1, 1, “商品名称”)
相减 (., 1).未知支持库函数_9 (2, 1, “拼音码”)
相减 (., 1).未知支持库函数_9 (3, 1, “规格”)
相减 (., 1).未知支持库函数_9 (4, 1, “库存上限”)
相减 (., 1).未知支持库函数_9 (5, 1, “库存下限”)
相减 (., 1).未知支持库函数_9 (6, 1, “一级分类名”)
相减 (., 1).未知支持库函数_9 (7, 1, “二级分类名”)
相减 (., 1).未知支持库函数_9 (8, 1, “产地”)
 ' 表格1.置数据 (表格1.行数 － 1, 9, 1, “零售价”)

.判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
    置等待鼠标 ()
     ' 处理事件 ()
    
    .未知支持库函数_38 () ' <!!!>
    相减 (., 1).未知支持库函数_9 (0, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 3)))
    相减 (., 1).未知支持库函数_9 (1, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 1)))
    相减 (., 1).未知支持库函数_9 (2, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 2)))
    相减 (., 1).未知支持库函数_9 (3, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 4)))
    相减 (., 1).未知支持库函数_9 (4, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 5)))
    相减 (., 1).未知支持库函数_9 (5, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 6)))
    相减 (., 1).未知支持库函数_9 (6, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 7)))
    相减 (., 1).未知支持库函数_9 (7, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 8)))
    相减 (., 1).未知支持库函数_9 (8, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 9)))
     ' 表格1.置数据 (表格1.行数 － 1, 9, 1, 到文本 (_启动窗口.外部数据库1.读 (记录集句柄, 10)))
    
    
    
    
    _启动窗口.到后一记录 (., 记录集句柄)
.判断循环尾 ()


.子程序 _按钮7_被单击, 空白型, , 
载入 (添加商品分类入库, , 真)
_按钮5_被单击 ()


.子程序 _编辑框1_内容被改变, 空白型, , 
 ' _启动窗口.关闭记录集 (., 记录集句柄)
赋值 (脚本, 相加 (“select * from 商品大典 where 拼单码”, “ like '%”, .内容, “%'”))
输出调试文本 (脚本)
赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
_启动窗口.到首记录 (., 记录集句柄)
赋值 (., 1)
赋值 (., 9)
相减 (., 1).未知支持库函数_9 (0, 1, “商品编码”)
相减 (., 1).未知支持库函数_9 (1, 1, “商品名称”)
相减 (., 1).未知支持库函数_9 (2, 1, “拼音码”)
相减 (., 1).未知支持库函数_9 (3, 1, “规格”)
相减 (., 1).未知支持库函数_9 (4, 1, “库存上限”)
相减 (., 1).未知支持库函数_9 (5, 1, “库存下限”)
相减 (., 1).未知支持库函数_9 (6, 1, “一级分类名”)
相减 (., 1).未知支持库函数_9 (7, 1, “二级分类名”)
相减 (., 1).未知支持库函数_9 (8, 1, “产地”)
 ' 表格1.置数据 (表格1.行数 － 1, 9, 1, “零售价”)

.判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
    置等待鼠标 ()
     ' 处理事件 ()
    
    .未知支持库函数_38 () ' <!!!>
    相减 (., 1).未知支持库函数_9 (0, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 3)))
    相减 (., 1).未知支持库函数_9 (1, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 1)))
    相减 (., 1).未知支持库函数_9 (2, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 2)))
    相减 (., 1).未知支持库函数_9 (3, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 4)))
    相减 (., 1).未知支持库函数_9 (4, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 5)))
    相减 (., 1).未知支持库函数_9 (5, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 6)))
    相减 (., 1).未知支持库函数_9 (6, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 7)))
    相减 (., 1).未知支持库函数_9 (7, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 8)))
    相减 (., 1).未知支持库函数_9 (8, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 9)))
     ' 表格1.置数据 (表格1.行数 － 1, 9, 1, 到文本 (_启动窗口.外部数据库1.读 (记录集句柄, 10)))
    _启动窗口.到后一记录 (., 记录集句柄)
.判断循环尾 ()


.子程序 _分隔条1_被拖动, 空白型, , 
.参数 原位置, 整数型, , 
.参数 目的位置, 整数型, , 

.局部变量 新左边, 整数型, , , 

.如果真 (小于 (目的位置, 8))
    赋值 (目的位置, 8)
.如果真结束
.如果真 (大于 (目的位置, 相减 (., 20)))
    赋值 (目的位置, 相减 (., 20))
.如果真结束
赋值 (., 目的位置)
赋值 (.宽度, 相减 (., .左边))
赋值 (新左边, 相加 (., .))
新左边.移动 (相减 (., 12, 新左边), )



.窗口程序集 窗口程序集5, , , 

.子程序 _按钮1_被单击, 空白型, , 
.如果 (等于 (.内容, “”))
    信息框 (“请选择分类！”, 0, )
.否则
    .如果 (或者 (等于 (.内容, “ ”), 等于 (.内容, “”), 等于 (.内容, “”), 等于 (.内容, “”), 等于 (.内容, “”)))
        信息框 (“请检查输入项！”, 0, )
    .否则
        赋值 (脚本, 相加 (“select count(*) from 商品大典 where 商品名称='”, .内容, “' and 规格='”, .内容, “' and 产地='”, .内容, “'”))
        _启动窗口.关闭记录集 (., 记录集句柄)
        赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
        _启动窗口.到首记录 (., 记录集句柄)
        .如果 (大于 (_启动窗口.读 (., 记录集句柄, 1), 0))
            信息框 (“已有相同商品资料！”, 0, )
            _启动窗口.关闭记录集 (., 记录集句柄)
            返回 ()
        .否则
            _启动窗口.关闭记录集 (., 记录集句柄)
            赋值 (脚本, 相加 (“insert into 商品大典 (商品名称,拼单码,规格,库存上限,库存下限,一级分类名,二级分类名,产地)  values ('”, .内容, “','”, .内容, “','”, .内容, “',”, .内容, “,”, .内容, “,'”, .内容, “','”, .内容, “','”, .内容, “')”))
            输出调试文本 (脚本)
            .如果 (等于 (_启动窗口.执行 (., 脚本, ), 假))
                信息框 (“执行失败，请重试！”, 0, )
                返回 ()
            .否则
                信息框 (“执行成功！”, 0, )
                销毁 ()
            .如果结束
            
        .如果结束
        
    .如果结束
    
.如果结束


.子程序 _添加商品资料_创建完毕, 空白型, , 
.如果 (不等于 (分类名, “”))
    赋值 (.内容, 分类名)
    .如果 (等于 (是否为一级, 真))
        赋值 (.内容, 分类名)
    .否则
        赋值 (.内容, 一级分类名)
    .如果结束
    
    _启动窗口.关闭记录集 (., 记录集句柄)
    赋值 (脚本, “select * from 商品大典”)
    赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
    _启动窗口.到尾记录 (., 记录集句柄)
    赋值 (.内容, 到文本 (相加 (_启动窗口.读 (., 记录集句柄, 3), 1)))
    _启动窗口.关闭记录集 (., 记录集句柄)
    
.否则
    信息框 (“未选择分类，请双击分类选择！”, 0, )
    销毁 ()
.如果结束


.子程序 _商品名称框_失去焦点, 空白型, , 
.局部变量 t1, 空白型, , , 
.局部变量 j1, 文本型, , , 
.局部变量 tt1, 空白型, , , 

.如果 (不等于 (.内容, “”))
    赋值 (t1, 取文本长度 (到全角 (.内容)))
    .计次循环首 (相除 (t1, 2), tt1)
        .如果 (等于 (取声母 (取文本右边 (取文本左边 (到全角 (.内容), 相乘 (tt1, 2)), 2), 1), “”))
            赋值 (j1, 相加 (j1, 取文本右边 (取文本左边 (到全角 (.内容), 相乘 (tt1, 2)), 2)))
        .否则
            .如果 (大于 (取文本长度 (取声母 (取文本右边 (取文本左边 (到全角 (.内容), 相乘 (tt1, 2)), 2), 1)), 1))
                赋值 (j1, 相加 (j1, 取文本左边 (取声母 (取文本右边 (取文本左边 (到全角 (.内容), 相乘 (tt1, 2)), 2), 1), 1)))
            .否则
                赋值 (j1, 相加 (j1, 取声母 (取文本右边 (取文本左边 (到全角 (.内容), 相乘 (tt1, 2)), 2), 1)))
            .如果结束
            
        .如果结束
        
    .计次循环尾 ()
.否则
    
.如果结束

赋值 (.内容, 到半角 (j1))



.子程序 _添加商品资料_将被销毁, 空白型, , 
_启动窗口.关闭记录集 (., 记录集句柄)


.子程序 _按钮2_被单击, 空白型, , 
销毁 ()

.子程序 _商品名称框_内容被改变, 空白型, , 


.窗口程序集 窗口程序集6, , , 

.子程序 _商品分类_创建完毕, 空白型, , 
赋值 (., 经顶边)
赋值 (., 经左边)
赋值 (., 假)

读取并显示当前记录集 ()

.子程序 读取并显示当前记录集, 空白型, , 
.局部变量 t, 空白型, , , 
.局部变量 文本, 文本型, , , 
.局部变量 tt, 空白型, , , 
.局部变量 yy, 空白型, , , 

_启动窗口.关闭记录集 (., 记录集句柄)
赋值 (.图标, {  })
赋值 (脚本, 相加 (“select * from 商品分类 where 一级 ”, “ = ”, “'”, “1”, “'”))
输出调试文本 (脚本)
赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
_启动窗口.到首记录 (., 记录集句柄)
赋值 (yy, 0)
.判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
    置等待鼠标 ()
     ' 处理事件 ()
    
    yy.置图片 (1)
    yy.置选中图片 (2)
    yy.置外形图片 (3)
    .加入项目 (_启动窗口.读 (., 记录集句柄, 1), , , )
    _启动窗口.到后一记录 (., 记录集句柄)
    赋值 (yy, 相加 (yy, 1))
.判断循环尾 ()
_启动窗口.关闭记录集 (., 记录集句柄)
赋值 (t, 0)
赋值 (文本, “”)

.判断循环首 (小于或等于 (t, 取项目数 ()))
    置等待鼠标 ()
     ' 处理事件 ()
    
    t.置图片 (1)
    t.置选中图片 (2)
    yy.置外形图片 (3)
    赋值 (文本, t.取项目文本 ())
    输出调试文本 (文本)
    _启动窗口.关闭记录集 (., 记录集句柄)
    赋值 (脚本, 相加 (“select * from 商品分类 where 二级 ”, “ = ”, “'”, “1”, “' and ”, “商品类名 = '”, 文本, “'”))
    输出调试文本 (脚本)
    赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
    _启动窗口.到首记录 (., 记录集句柄)
    .判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
        置等待鼠标 ()
         ' 处理事件 ()
        
        t.加入项目 (_启动窗口.读 (., 记录集句柄, 2), , , )
        _启动窗口.到后一记录 (., 记录集句柄)
    .判断循环尾 ()
    赋值 (t, 相加 (t, 1))
.判断循环尾 ()

赋值 (t, 0)
_启动窗口.关闭记录集 (., 记录集句柄)


.子程序 _按钮1_被单击, 空白型, , 
载入 (添加商品分类, , 真)


.子程序 _树型框1_被双击, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (分类名, .取项目文本 (.最大化按钮))
_启动窗口.关闭记录集 (., 记录集句柄)
赋值 (脚本, 相加 (“select * from 商品分类 where 二级类名=”, “'”, .取项目文本 (.最大化按钮), “' ”))
输出调试文本 (脚本)
赋值 (记录集句柄, _启动窗口.查询 (., 脚本))

赋值 (., 1)
赋值 (., 3)
_启动窗口.到首记录 (., 记录集句柄)
相减 (., 1).未知支持库函数_9 (0, 1, “商品大类名称”)
相减 (., 1).未知支持库函数_9 (1, 1, “二级分类名称”)
相减 (., 1).未知支持库函数_9 (2, 1, “备注”)

.判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
    置等待鼠标 ()
     ' 处理事件 ()
    
    .未知支持库函数_38 () ' <!!!>
    相减 (., 1).未知支持库函数_9 (0, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 1)))
    相减 (., 1).未知支持库函数_9 (1, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 2)))
    相减 (., 1).未知支持库函数_9 (2, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 5)))
    
    _启动窗口.到后一记录 (., 记录集句柄)
.判断循环尾 ()


.子程序 _按钮1_被单击1, 空白型, , 
载入 (添加商品资料, , 真)

.子程序 _树型框1_项目被选择, 空白型, , 
.参数 选择方式, 整数型, , 

.局部变量 t, 空白型, , , 
.局部变量 tt, 空白型, , , 

赋值 (分类名, .取项目文本 (.最大化按钮))
_启动窗口.关闭记录集 (., 记录集句柄)
赋值 (脚本, 相加 (“select * from 商品分类 where 二级类名=”, “'”, .取项目文本 (.最大化按钮), “' ”))
输出调试文本 (脚本)
赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
赋值 (., 1)
赋值 (., 3)
赋值 (., 90)
_启动窗口.到首记录 (., 记录集句柄)
相减 (., 1).未知支持库函数_9 (0, 1, “商品大类名称”)
相减 (., 1).未知支持库函数_9 (1, 1, “二级分类名称”)
相减 (., 1).未知支持库函数_9 (2, 1, “备注”)
.未知支持库函数_38 () ' <!!!>
相减 (., 1).未知支持库函数_9 (0, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 1)))
相减 (., 1).未知支持库函数_9 (1, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 2)))
相减 (., 1).未知支持库函数_9 (2, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 5)))



.子程序 _按钮2_被单击, 空白型, , 
赋值 (脚本, “select count(*) from 总库”)
_启动窗口.关闭记录集 (., 记录集句柄)
赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
_启动窗口.到首记录 (., 记录集句柄)
.如果 (大于 (_启动窗口.读 (., 记录集句柄, 1), 0))
    信息框 (“已经有入库操作，不能进行删除操作！！”, 0, )
.否则
    载入 (删除商品分类, , 真)
    
.如果结束


.子程序 _按钮4_被单击, 空白型, , 
销毁 ()

.子程序 _商品分类_将被销毁, 空白型, , 
_启动窗口.关闭记录集 (., 记录集句柄)


.子程序 _分隔条1_被拖动, 空白型, , 
.参数 原位置, 整数型, , 
.参数 目的位置, 整数型, , 

.局部变量 新左边, 整数型, , , 

.如果真 (小于 (目的位置, 8))
    赋值 (目的位置, 8)
.如果真结束
.如果真 (大于 (目的位置, 相减 (., 20)))
    赋值 (目的位置, 相减 (., 20))
.如果真结束
赋值 (., 目的位置)
赋值 (.宽度, 相减 (., .左边))
赋值 (新左边, 相加 (., .))
新左边.移动 (相减 (., 12, 新左边), )



.窗口程序集 窗口程序集7, , , 

.子程序 _按钮1_被单击, 空白型, , 
_启动窗口.关闭记录集 (., 记录集句柄)
赋值 (脚本, “select * from 商品分类”)

赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
_启动窗口.到首记录 (., 记录集句柄)
.判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
    置等待鼠标 ()
     ' 处理事件 ()
    
    .如果 (或者 (等于 (_启动窗口.读 (., 记录集句柄, 1), .内容), 等于 (_启动窗口.读 (., 记录集句柄, 2), .内容)))
        信息框 (“已有相同分类名，请更换分类名再试！”, 0, )
        返回 ()
    .否则
        
    .如果结束
    
    _启动窗口.到后一记录 (., 记录集句柄)
.判断循环尾 ()

.如果 (或者 (等于 (.内容, “”), 等于 (.内容, “”)))
    信息框 (“请完整添写信息！”, 0, )
    返回 ()
.否则
    _启动窗口.关闭记录集 (., 记录集句柄)
    赋值 (脚本, 相加 (“insert into 商品分类 (商品类名,一级,二级,备注)  values ('”, .内容, “', 1”, “, 0 , '”, .内容, “')”))
    输出调试文本 (脚本)
    .如果 (等于 (_启动窗口.执行 (., 脚本, ), 假))
        信息框 (“添加失败，请重试！”, 0, )
    .否则
        信息框 (“添加一级分类成功！”, 0, )
        读取并显示当前记录集 ()
        _启动窗口.关闭记录集 (., 记录集句柄)
        读取并显示当前记录 ()
        
    .如果结束
    
.如果结束








.子程序 _单选框1_被单击, 空白型, , 
.如果 (等于 (.选中, 真))
    赋值 (.现行子夹, 1)
    _启动窗口.关闭记录集 (., 记录集句柄)
    读取并显示当前记录 ()
    
.否则
    
.如果结束


.子程序 _单选框2_被单击, 空白型, , 
_启动窗口.关闭记录集 (., 记录集句柄)

.如果 (等于 (.选中, 真))
    赋值 (脚本, 相加 (“select * from 商品分类 where 一级 ”, “ = ”, “'”, “1”, “'”))
    赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
    _启动窗口.到首记录 (., 记录集句柄)
    清空 ()
    .判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
        置等待鼠标 ()
         ' 处理事件 ()
        
        _启动窗口.读 (., 记录集句柄, 1).加入项目 ()
        _启动窗口.到后一记录 (., 记录集句柄)
    .判断循环尾 ()
    读取并显示当前记录2 ()
    赋值 (.现行子夹, 2)
.否则
    
.如果结束


.子程序 读取并显示当前记录, 空白型, , 
.局部变量 t, 空白型, , , 
.局部变量 文本, 文本型, , , 
.局部变量 tt, 空白型, , , 

赋值 (.图标, {  })
赋值 (脚本, 相加 (“select * from 商品分类 where 一级 ”, “ = ”, “'”, “1”, “'”))
赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
_启动窗口.到首记录 (., 记录集句柄)
.判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
    置等待鼠标 ()
     ' 处理事件 ()
    
    .加入项目 (_启动窗口.读 (., 记录集句柄, 1), , , )
    _启动窗口.到后一记录 (., 记录集句柄)
.判断循环尾 ()
_启动窗口.关闭记录集 (., 记录集句柄)
赋值 (t, 0)
.判断循环首 (小于 (t, 取项目数 ()))
    置等待鼠标 ()
     ' 处理事件 ()
    
    赋值 (文本, t.取项目文本 ())
    输出调试文本 (文本)
    赋值 (脚本, 相加 (“select * from 商品分类 where 二级 ”, “ = ”, “'”, “1”, “' and ”, “商品类名 = '”, 文本, “'”))
    输出调试文本 (脚本)
    赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
    _启动窗口.到首记录 (., 记录集句柄)
    .判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
        t.加入项目 (_启动窗口.读 (., 记录集句柄, 2), , , )
        _启动窗口.到后一记录 (., 记录集句柄)
    .判断循环尾 ()
    赋值 (t, 相加 (t, 1))
    _启动窗口.关闭记录集 (., 记录集句柄)
.判断循环尾 ()


.子程序 读取并显示当前记录2, 空白型, , 
.局部变量 t, 空白型, , , 
.局部变量 文本, 文本型, , , 
.局部变量 tt, 空白型, , , 

_启动窗口.关闭记录集 (., 记录集句柄)
赋值 (.图标, {  })
赋值 (脚本, 相加 (“select * from 商品分类 where 一级 ”, “ = ”, “'”, “1”, “'”))
输出调试文本 (脚本)

赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
_启动窗口.到首记录 (., 记录集句柄)
.判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
    置等待鼠标 ()
     ' 处理事件 ()
    
    .加入项目 (_启动窗口.读 (., 记录集句柄, 1), , , )
    _启动窗口.到后一记录 (., 记录集句柄)
.判断循环尾 ()
_启动窗口.关闭记录集 (., 记录集句柄)
赋值 (t, 0)
.判断循环首 (小于 (t, 取项目数 ()))
    置等待鼠标 ()
     ' 处理事件 ()
    
    赋值 (文本, t.取项目文本 ())
    输出调试文本 (文本)
    赋值 (脚本, 相加 (“select * from 商品分类 where 二级 ”, “ = ”, “'”, “1”, “' and ”, “商品类名 = '”, 文本, “'”))
    输出调试文本 (脚本)
    赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
    _启动窗口.到首记录 (., 记录集句柄)
    .判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
        置等待鼠标 ()
         ' 处理事件 ()
        
        t.加入项目 (_启动窗口.读 (., 记录集句柄, 2), , , )
        _启动窗口.到后一记录 (., 记录集句柄)
    .判断循环尾 ()
    赋值 (t, 相加 (t, 1))
    _启动窗口.关闭记录集 (., 记录集句柄)
    
.判断循环尾 ()


.子程序 _按钮3_被单击, 空白型, , 
_启动窗口.关闭记录集 (., 记录集句柄)
赋值 (脚本, “select * from 商品分类”)
输出调试文本 (脚本)
赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
_启动窗口.到首记录 (., 记录集句柄)
.判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
    .如果 (或者 (等于 (_启动窗口.读 (., 记录集句柄, 2), .内容), 等于 (_启动窗口.读 (., 记录集句柄, 1), .内容)))
        信息框 (“已有相同分类名，请更换分类名再试！”, 0, )
        返回 ()
    .否则
        
    .如果结束
    
    _启动窗口.到后一记录 (., 记录集句柄)
.判断循环尾 ()




.如果 (或者 (等于 (.内容, “”), 等于 (.内容, “”), 等于 (.内容, “”)))
    信息框 (“请完整添写信息！”, 0, )
    返回 ()
.否则
    _启动窗口.关闭记录集 (., 记录集句柄)
    赋值 (脚本, 相加 (“insert into 商品分类 (商品类名,二级类名,一级,二级,备注)  values ('”, .取项目文本 (.现行选中项), “','”, .内容, “', 0”, “, 1 , '”, .内容, “')”))
    输出调试文本 (脚本)
    .如果 (等于 (_启动窗口.执行 (., 脚本, ), 假))
        信息框 (“执行失败，请重试！”, 0, )
    .否则
        信息框 (“执行成功！”, 0, )
        读取并显示当前记录集 ()
        _启动窗口.关闭记录集 (., 记录集句柄)
        读取并显示当前记录2 ()
    .如果结束
    
    
.如果结束


.子程序 _按钮2_被单击, 空白型, , 
销毁 ()

.子程序 _按钮4_被单击, 空白型, , 
销毁 ()

.子程序 _添加商品分类_将被销毁, 空白型, , 
_启动窗口.关闭记录集 (., 记录集句柄)


.子程序 _添加商品分类_创建完毕, 空白型, , 


.子程序 _选择夹1_被单击, 空白型, , 


.窗口程序集 窗口程序集8, , , 

.子程序 _单选框1_被单击, 空白型, , 
.如果 (等于 (.选中, 真))
    赋值 (.现行子夹, 1)
    赋值 (.内容, “”)
    赋值 (.内容, “”)
    _启动窗口.关闭记录集 (., 记录集句柄)
    读取并显示当前记录3 ()
    
.否则
    
.如果结束


.子程序 读取并显示当前记录3, 空白型, , 
.局部变量 t, 空白型, , , 
.局部变量 文本, 文本型, , , 
.局部变量 tt, 空白型, , , 

赋值 (.图标, {  })
赋值 (脚本, 相加 (“select * from 商品分类 where 一级 ”, “ = ”, “'”, “1”, “'”))
输出调试文本 (脚本)
_启动窗口.关闭记录集 (., 记录集句柄)
赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
_启动窗口.到首记录 (., 记录集句柄)
.判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
    置等待鼠标 ()
     ' 处理事件 ()
    
    .加入项目 (_启动窗口.读 (., 记录集句柄, 1), , , )
    _启动窗口.到后一记录 (., 记录集句柄)
.判断循环尾 ()
_启动窗口.关闭记录集 (., 记录集句柄)

赋值 (t, 0)
.判断循环首 (小于 (t, 取项目数 ()))
    赋值 (文本, t.取项目文本 ())
    输出调试文本 (文本)
    赋值 (脚本, 相加 (“select * from 商品分类 where 二级 ”, “ = ”, “'”, “1”, “' and ”, “商品类名 = '”, 文本, “'”))
    输出调试文本 (脚本)
    _启动窗口.关闭记录集 (., 记录集句柄)
    
    赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
    _启动窗口.到首记录 (., 记录集句柄)
    .判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
        置等待鼠标 ()
         ' 处理事件 ()
        
        t.加入项目 (_启动窗口.读 (., 记录集句柄, 2), , , )
        _启动窗口.到后一记录 (., 记录集句柄)
    .判断循环尾 ()
    赋值 (t, 相加 (t, 1))
    _启动窗口.关闭记录集 (., 记录集句柄)
    
.判断循环尾 ()
_启动窗口.关闭记录集 (., 记录集句柄)


.子程序 _删除一级树型框_项目被选择, 空白型, , 
.参数 选择方式, 整数型, , 

.如果 (等于 (.取父项目 (.最大化按钮), -1))
    赋值 (.内容, .取项目文本 (.最大化按钮))
    赋值 (kscbj, “z”)
.否则
    赋值 (.内容, “”)
    赋值 (kscbj, “j”)
.如果结束





.子程序 _按钮1_被单击, 空白型, , 
.如果 (不等于 (.内容, “”))
    .如果 (等于 (kscbj, “z”))
        .如果 (等于 (.是否有子项目 (.最大化按钮), 真))
            信息框 (“该一级分类下还有二级分类，请先删除其下的二级分类再进行删除操作！”, 0, )
            返回 ()
        .否则
            _启动窗口.关闭记录集 (., 记录集句柄)
            赋值 (脚本, 相加 (“delete from 商品分类 where 商品类名 =”, “'”, .内容, “'”))
            输出调试文本 (脚本)
            .如果 (等于 (_启动窗口.执行 (., 脚本, ), 假))
                信息框 (“执行失败，请重试！”, 0, )
            .否则
                信息框 (“执行成功！”, 0, )
                读取并显示当前记录3 ()
                
                
            .如果结束
            
        .如果结束
        
    .否则
        
    .如果结束
    
.否则
    信息框 (“请选择要删除的一级分类名！”, 0, )
.如果结束


_启动窗口.关闭记录集 (., 记录集句柄)

.子程序 _按钮3_被单击, 空白型, , 
.如果 (等于 (.是否有子项目 (.最大化按钮), 真))
    信息框 (“该一级分类下还有二级分类，请先删除其下的二级分类再进行删除操作！”, 0, )
    返回 ()
.否则
    _启动窗口.关闭记录集 (., 记录集句柄)
    赋值 (脚本, 相加 (“delete from 商品分类 where 二级类名 =”, “'”, .内容, “' and 商品类名 =  '”, .内容, “'”))
    输出调试文本 (脚本)
    .如果 (等于 (_启动窗口.执行 (., 脚本, ), 假))
        信息框 (“执行失败，请重试！”, 0, )
    .否则
        信息框 (“执行成功！”, 0, )
        读取并显示当前记录4 ()
        
        
        
    .如果结束
    
.如果结束




.子程序 _单选框2_被单击, 空白型, , 

.如果 (等于 (.选中, 真))
    赋值 (.现行子夹, 2)
    赋值 (.内容, “”)
    赋值 (.内容, “”)
    _启动窗口.关闭记录集 (., 记录集句柄)
    
    
    赋值 (脚本, 相加 (“select * from 商品分类 where 一级 ”, “ = ”, “'”, “1”, “'”))
    赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
    _启动窗口.到首记录 (., 记录集句柄)
    清空 ()
    .判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
        置等待鼠标 ()
         ' 处理事件 ()
        
        _启动窗口.读 (., 记录集句柄, 1).加入项目 ()
        _启动窗口.到后一记录 (., 记录集句柄)
    .判断循环尾 ()
    读取并显示当前记录4 ()
.否则
    
.如果结束



.子程序 读取并显示当前记录4, 空白型, , 
.局部变量 t, 空白型, , , 
.局部变量 文本, 文本型, , , 
.局部变量 tt, 空白型, , , 


_启动窗口.关闭记录集 (., 记录集句柄)

赋值 (.图标, {  })
赋值 (脚本, 相加 (“select * from 商品分类 where 一级 ”, “ = ”, “'”, “1”, “'”))
输出调试文本 (脚本)
赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
_启动窗口.到首记录 (., 记录集句柄)
.判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
    置等待鼠标 ()
     ' 处理事件 ()
    
    .加入项目 (_启动窗口.读 (., 记录集句柄, 1), , , )
    _启动窗口.到后一记录 (., 记录集句柄)
.判断循环尾 ()


_启动窗口.关闭记录集 (., 记录集句柄)
赋值 (t, 0)
.判断循环首 (小于 (t, 取项目数 ()))
    赋值 (文本, t.取项目文本 ())
    赋值 (脚本, 相加 (“select * from 商品分类 where 二级 ”, “ = ”, “'”, “1”, “' and ”, “商品类名 = '”, 文本, “'”))
    赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
    _启动窗口.到首记录 (., 记录集句柄)
    .判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
        t.加入项目 (_启动窗口.读 (., 记录集句柄, 2), , , )
        _启动窗口.到后一记录 (., 记录集句柄)
    .判断循环尾 ()
    赋值 (t, 相加 (t, 1))
    _启动窗口.关闭记录集 (., 记录集句柄)
    
.判断循环尾 ()
_启动窗口.关闭记录集 (., 记录集句柄)


.子程序 _删除商品分类_创建完毕, 空白型, , 


.子程序 _删除商品分类_将被销毁, 空白型, , 
_启动窗口.关闭记录集 (., 记录集句柄)


.子程序 _删除二级树型框_项目被选择, 空白型, , 
.参数 选择方式, 整数型, , 

.如果 (不等于 (.内容, “”))
    .如果 (等于 (.取父项目 (.最大化按钮).取项目文本 (), .内容))
        赋值 (.内容, .取项目文本 (.最大化按钮))
    .否则
        赋值 (.内容, “”)
    .如果结束
    
.否则
    
.如果结束







.子程序 _按钮4_被单击, 空白型, , 
销毁 ()

.窗口程序集 窗口程序集9, , , 

.子程序 _按钮2_被单击, 空白型, , 
销毁 ()

.子程序 _按钮1_被单击, 空白型, , 
.局部变量 t, 空白型, , , 

.如果 (不等于 (.内容, “”))
    赋值 (商品编号, 到数值 (.内容))
    载入 (编辑商品资料, , 真)
    _启动窗口.关闭记录集 (., 记录集句柄)
    销毁 ()
    
.否则
    
.如果结束


.窗口程序集 窗口程序集10, , , 

.程序集变量 temp, 文本型, , , 
.子程序 _编辑商品资料_创建完毕, 空白型, , 
.局部变量 t, 空白型, , , 

_启动窗口.关闭记录集 (., 记录集句柄)
赋值 (脚本, 相加 (“select * from 商品大典 where 商品编码 = ”, 到文本 (商品编号)))
输出调试文本 (脚本)
赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
赋值 (t, 0)
_启动窗口.到首记录 (., 记录集句柄)
.如果 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 真))
    信息框 (“没找到相应记录！”, 64, “贝尔软件”)
.否则
    .判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 真))
        置等待鼠标 ()
         ' 处理事件 ()
        
        赋值 (t, 相加 (t, 1))
        _启动窗口.到后一记录 (., 记录集句柄)
    .判断循环尾 ()
    .如果 (小于 (t, 0))
        信息框 (“没有相应记录！”, 64, “贝尔软件”)
    .否则
        内容初始 ()
    .如果结束
    
    _启动窗口.关闭记录集 (., 记录集句柄)
.如果结束


.子程序 内容初始, 空白型, , 
赋值 (.内容, _启动窗口.读 (., 记录集句柄, 1))
赋值 (.内容, _启动窗口.读 (., 记录集句柄, 4))
赋值 (.内容, _启动窗口.读 (., 记录集句柄, 2))
赋值 (.内容, 到文本 (_启动窗口.读 (., 记录集句柄, 5)))
赋值 (.内容, 到文本 (_启动窗口.读 (., 记录集句柄, 6)))
赋值 (.内容, 到文本 (_启动窗口.读 (., 记录集句柄, 3)))
赋值 (.内容, _启动窗口.读 (., 记录集句柄, 7))
赋值 (.内容, _启动窗口.读 (., 记录集句柄, 8))
赋值 (.内容, _启动窗口.读 (., 记录集句柄, 9))


.子程序 _按钮2_被单击, 空白型, , 
销毁 ()

.子程序 _按钮1_被单击, 空白型, , 
检查输入 ()
.如果 (等于 (temp, “z”))
    赋值 (脚本, 相加 (“update 商品大典 set 商品名称='”, .内容, “',拼单码 = '”, .内容, “',规格='”, .内容, “',库存上限= ”, .内容, “,库存下限=”, .内容, “,一级分类名='”, .内容, “',二级分类名='”, .内容, “',”, “产地='”, .内容, “' where 商品编码=”, .内容))
    输出调试文本 (脚本)
    .如果 (_启动窗口.执行 (., 脚本, ))
        信息框 (“修改商品大典信息成功！”, 64, “贝尔软件”)
        赋值 (脚本, 相加 (“update 总库 set 商品名称='”, .内容, “',拼音码 = '”, .内容, “',规格='”, .内容, “',库存上限= ”, .内容, “,库存下限=”, .内容, “,一级分类='”, .内容, “',二级分类='”, .内容, “',”, “产地='”, .内容, “' where 商品编码=”, .内容))
        输出调试文本 (脚本)
        .如果 (_启动窗口.执行 (., 脚本, ))
            信息框 (“修改库存信息成功！”, 64, “贝尔软件”)
            赋值 (脚本, 相加 (“update 销售 set 商品名称='”, .内容, “',拼音码 = '”, .内容, “',规格='”, .内容, “',一级分类='”, .内容, “',二级分类='”, .内容, “',”, “产地='”, .内容, “' where 商品编码=”, .内容))
            输出调试文本 (脚本)
            .如果 (_启动窗口.执行 (., 脚本, ))
                
                信息框 (“修销售记录库信息成功！”, 64, “贝尔软件”)
                销毁 ()
            .否则
                信息框 (“修改销售记录库信息失败！！！！！！！！”, 64, “贝尔软件”)
                返回 ()
            .如果结束
            
            
            
            
            
            
            
        .否则
            信息框 (“修改库存信息失败！！！！！！！！”, 64, “贝尔软件”)
            返回 ()
        .如果结束
        
        
    .否则
        信息框 (“修改商品大典失败！！！！！！！！”, 64, “贝尔软件”)
        
    .如果结束
    
.否则
    
.如果结束


.子程序 检查输入, 空白型, , 
.如果 (或者 (等于 (.内容, “”), 等于 (.内容, “”), 等于 (.内容, “”), 等于 (.内容, “”), 等于 (.内容, “”)))
    信息框 (“请检查输入项！”, 64, “贝尔软件”)
    赋值 (temp, “j”)
.否则
    赋值 (temp, “z”)
.如果结束


.子程序 _商品名称框_内容被改变, 空白型, , 


.子程序 _商品名称框_失去焦点, 空白型, , 
.局部变量 t1, 空白型, , , 
.局部变量 j1, 文本型, , , 
.局部变量 tt1, 空白型, , , 

.如果 (不等于 (.内容, “”))
    赋值 (t1, 取文本长度 (到全角 (.内容)))
    .计次循环首 (相除 (t1, 2), tt1)
        .如果 (等于 (取声母 (取文本右边 (取文本左边 (到全角 (.内容), 相乘 (tt1, 2)), 2), 1), “”))
            赋值 (j1, 相加 (j1, 取文本右边 (取文本左边 (到全角 (.内容), 相乘 (tt1, 2)), 2)))
        .否则
            .如果 (大于 (取文本长度 (取声母 (取文本右边 (取文本左边 (到全角 (.内容), 相乘 (tt1, 2)), 2), 1)), 1))
                赋值 (j1, 相加 (j1, 取文本左边 (取声母 (取文本右边 (取文本左边 (到全角 (.内容), 相乘 (tt1, 2)), 2), 1), 1)))
            .否则
                赋值 (j1, 相加 (j1, 取声母 (取文本右边 (取文本左边 (到全角 (.内容), 相乘 (tt1, 2)), 2), 1)))
            .如果结束
            
        .如果结束
        
    .计次循环尾 ()
.否则
    
.如果结束

赋值 (.内容, 到半角 (j1))


.窗口程序集 窗口程序集11, , , 

.子程序 _按钮1_被单击, 空白型, , 

_启动窗口.关闭记录集 (., 记录集句柄)
赋值 (脚本, 相加 (“delete from 商品大典 where 商品编码 =”, .内容, “ and  商品名称 = '”, .内容, “ '”))
输出调试文本 (脚本)
.如果 (等于 (_启动窗口.执行 (., 脚本, ), 假))
    信息框 (“执行失败，请重试！”, 0, )
.否则
    信息框 (“执行成功！”, 0, )
.如果结束



.子程序 _删除商品资料_创建完毕, 空白型, , 
.局部变量 t, 空白型, , , 

_启动窗口.关闭记录集 (., 记录集句柄)
赋值 (脚本, 相加 (“select * from 商品大典 where 商品编码 = ”, 到文本 (商品编号)))
输出调试文本 (脚本)
赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
赋值 (t, 0)
_启动窗口.到首记录 (., 记录集句柄)
.如果 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 真))
    信息框 (“没找到相应记录！”, 0, )
.否则
    .判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 真))
        置等待鼠标 ()
         ' 处理事件 ()
        
        赋值 (t, 相加 (t, 1))
        _启动窗口.到后一记录 (., 记录集句柄)
    .判断循环尾 ()
    .如果 (小于 (t, 0))
        信息框 (“没有相应记录！”, 0, )
    .否则
        sc内容初始 ()
        
        
    .如果结束
    
    _启动窗口.关闭记录集 (., 记录集句柄)
    
.如果结束


.子程序 sc内容初始, 空白型, , 
赋值 (.内容, _启动窗口.读 (., 记录集句柄, 1))
赋值 (.内容, _启动窗口.读 (., 记录集句柄, 4))
赋值 (.内容, _启动窗口.读 (., 记录集句柄, 2))
赋值 (.内容, 到文本 (_启动窗口.读 (., 记录集句柄, 5)))
赋值 (.内容, 到文本 (_启动窗口.读 (., 记录集句柄, 6)))
赋值 (.内容, 到文本 (_启动窗口.读 (., 记录集句柄, 3)))
赋值 (.内容, _启动窗口.读 (., 记录集句柄, 7))
赋值 (.内容, _启动窗口.读 (., 记录集句柄, 8))


.子程序 _按钮2_被单击, 空白型, , 
销毁 ()

.窗口程序集 窗口程序集12, , , 

.子程序 _按钮2_被单击, 空白型, , 
销毁 ()

.子程序 _按钮1_被单击, 空白型, , 
.局部变量 t, 空白型, , , 

.如果 (不等于 (.内容, “”))
    赋值 (商品编号, 到数值 (.内容))
    载入 (删除商品资料, , 真)
    _启动窗口.关闭记录集 (., 记录集句柄)
    销毁 ()
    
.否则
    
.如果结束


.窗口程序集 窗口程序集13, , , 

.子程序 _供应商资料_创建完毕, 空白型, , 
赋值 (., 经顶边)
赋值 (., 经左边)
赋值 (., 假)

.子程序 首次读取并显示供应商记录, 空白型, , 
.局部变量 t, 空白型, , , 
.局部变量 文本, 文本型, , , 
.局部变量 tt, 空白型, , , 

 ' _启动窗口.关闭记录集 (., 记录集句柄)


赋值 (.图标, {  })
赋值 (脚本, “select * from 供应商资料 ”)
赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
_启动窗口.到首记录 (., 记录集句柄)
.判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
    置等待鼠标 ()
     ' 处理事件 ()
    
    .加入项目 (_启动窗口.读 (., 记录集句柄, 2), , , )
    _启动窗口.到后一记录 (., 记录集句柄)
.判断循环尾 ()
_启动窗口.关闭记录集 (., 记录集句柄)


.子程序 _树型框1_项目被选择, 空白型, , 
.参数 选择方式, 整数型, , 

_启动窗口.关闭记录集 (., 记录集句柄)
赋值 (脚本, 相加 (“select * from 供应商资料 where 供应商单位=”, “'”, .取项目文本 (.最大化按钮), “' ”))
输出调试文本 (脚本)
赋值 (记录集句柄, _启动窗口.查询 (., 脚本))

 ' 赋值 (., 1)
赋值 (., 3)
赋值 (., 100)
_启动窗口.到首记录 (., 记录集句柄)
相减 (., 1).未知支持库函数_9 (0, 1, “供应商ID”)
相减 (., 1).未知支持库函数_9 (1, 1, “单位名称”)
相减 (., 1).未知支持库函数_9 (2, 1, “联系人”)
.未知支持库函数_38 () ' <!!!>
相减 (., 1).未知支持库函数_9 (0, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 1)))
相减 (., 1).未知支持库函数_9 (1, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 2)))
相减 (., 1).未知支持库函数_9 (2, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 3)))


.子程序 _按钮1_被单击, 空白型, , 
赋值 (.现行子夹, 1)

.子程序 _按钮2_被单击, 空白型, , 
赋值 (.现行子夹, 2)
赋值 (.内容, “”)
赋值 (.内容, “”)
赋值 (.内容, “”)
赋值 (.内容, “”)
赋值 (.内容, “”)
赋值 (.内容, “”)


.子程序 _按钮3_被单击, 空白型, , 
赋值 (.现行子夹, 3)


.子程序 _按钮6_被单击, 空白型, , 
.如果 (或者 (等于 (.内容, “”), 等于 (.内容, “”)))
    信息框 (“请添写完整信息！”, 0, )
.否则
    赋值 (脚本, “select * from 供应商资料 ”)
    _启动窗口.读 (., 记录集句柄, “供应商单位”)
    _启动窗口.关闭记录集 (., 记录集句柄)
    赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
    _启动窗口.到首记录 (., 记录集句柄)
    .判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
        置等待鼠标 ()
         ' 处理事件 ()
        
        .如果 (等于 (_启动窗口.读 (., 记录集句柄, “供应商单位”), .内容))
            信息框 (“已有该供应商信息,请确认!”, 0, )
            返回 ()
        .否则
            _启动窗口.到后一记录 (., 记录集句柄)
        .如果结束
        
    .判断循环尾 ()
    
    
    _启动窗口.关闭记录集 (., 记录集句柄)
    赋值 (脚本, 相加 (“insert into 供应商资料 (供应商单位,联系人)  values ('”, .内容, “','”, .内容, “')”))
    .如果 (等于 (_启动窗口.执行 (., 脚本, ), 假))
        信息框 (“执行失败，请重试！”, 0, )
    .否则
        信息框 (“添加供应商资料成功！”, 0, )
        赋值 (.内容, “”)
        赋值 (.内容, “”)
        _启动窗口.关闭记录集 (., 记录集句柄)
        赋值 (.图标, {  })
        首次读取并显示供应商记录 ()
        赋值 (.现行子夹, 0)
    .如果结束
    
.如果结束


.子程序 _按钮5_被单击, 空白型, , 
.如果真 (不等于 (.现行子夹, 0))
    赋值 (.现行子夹, 0)
.如果真结束
_启动窗口.关闭记录集 (., 记录集句柄)
赋值 (脚本, “select * from 供应商资料 ”)
赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
_启动窗口.到首记录 (., 记录集句柄)
赋值 (., 1)
赋值 (., 3)
赋值 (., 100)
相减 (., 1).未知支持库函数_9 (0, 1, “供应商ID”)
相减 (., 1).未知支持库函数_9 (1, 1, “单位名称”)
相减 (., 1).未知支持库函数_9 (2, 1, “联系人”)

.判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
    置等待鼠标 ()
     ' 处理事件 ()
    
    .未知支持库函数_38 () ' <!!!>
    相减 (., 1).未知支持库函数_9 (0, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 1)))
    相减 (., 1).未知支持库函数_9 (1, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 2)))
    相减 (., 1).未知支持库函数_9 (2, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 3)))
    _启动窗口.到后一记录 (., 记录集句柄)
.判断循环尾 ()
_启动窗口.关闭记录集 (., 记录集句柄)


.子程序 _输入框_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 t, 空白型, , , 

.如果真 (等于 (键代码, #回车键))
    _启动窗口.关闭记录集 (., 记录集句柄)
    赋值 (脚本, 相加 (“select * from 供应商资料 where id =”, .内容))
    输出调试文本 (脚本)
    赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
    _启动窗口.到首记录 (., 记录集句柄)
    .如果 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 真))
        信息框 (“没找到相应记录！”, 0, )
        赋值 (.内容, “”)
        赋值 (.内容, “”)
        赋值 (.内容, “”)
        赋值 (.内容, “”)
    .否则
        .判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 真))
            置等待鼠标 ()
             ' 处理事件 ()
            
            赋值 (t, 相加 (t, 1))
            
            _启动窗口.到后一记录 (., 记录集句柄)
        .判断循环尾 ()
        .如果 (小于 (t, 0))
            信息框 (“没有相应记录！”, 0, )
            赋值 (.内容, “”)
            赋值 (.内容, “”)
            赋值 (.内容, “”)
            赋值 (.内容, “”)
            
        .否则
            赋值 (.内容, 到文本 (_启动窗口.读 (., 记录集句柄, 1)))
            赋值 (.内容, _启动窗口.读 (., 记录集句柄, 2))
            赋值 (.内容, _启动窗口.读 (., 记录集句柄, 3))
            赋值 (.内容, _启动窗口.读 (., 记录集句柄, 2))
            赋值 (.内容, _启动窗口.读 (., 记录集句柄, 3))
            
        .如果结束
        
    .如果结束
    
.如果真结束


.子程序 _输入框_内容被改变, 空白型, , 


.子程序 _按钮8_被单击, 空白型, , 
.局部变量 原单位, 文本型, , , 

.如果 (或者 (不等于 (.内容, “”), 不等于 (.内容, “”), 不等于 (.内容, “”)))
    赋值 (原单位, .内容)
    赋值 (脚本, 相加 (“update 总库 set 供货商='”, .内容, “' where 供货商='”, 原单位, “'”))
    .如果 (等于 (_启动窗口.执行 (., 脚本, ), 真))
        赋值 (脚本, 相加 (“update 还供货商款记录 set 供应商='”, .内容, “' where 供应商='”, 原单位, “'”))
        .如果 (等于 (_启动窗口.执行 (., 脚本, ), 真))
            赋值 (脚本, 相加 (“update 商品调价记录 set 供货商='”, .内容, “' where 供货商='”, 原单位, “'”))
            .如果 (等于 (_启动窗口.执行 (., 脚本, ), 真))
                赋值 (脚本, 相加 (“update 退货记录 set 供货商='”, .内容, “' where 供货商='”, 原单位, “'”))
                .如果 (等于 (_启动窗口.执行 (., 脚本, ), 真))
                    赋值 (脚本, 相加 (“update 未付款 set 供应商='”, .内容, “' where 供应商='”, 原单位, “'”))
                    .如果 (等于 (_启动窗口.执行 (., 脚本, ), 真))
                        赋值 (脚本, 相加 (“update 已付款 set 供应商='”, .内容, “' where 供应商='”, 原单位, “'”))
                        .如果 (等于 (_启动窗口.执行 (., 脚本, ), 真))
                            赋值 (脚本, 相加 (“update 返货记录 set 供货商='”, .内容, “' where 供货商='”, 原单位, “'”))
                            .如果 (等于 (_启动窗口.执行 (., 脚本, ), 真))
                                赋值 (脚本, 相加 (“update 供应商资料 set 供应商单位='”, .内容, “',联系人='”, .内容, “' where id=”, .内容))
                                输出调试文本 (脚本)
                                .如果 (等于 (_启动窗口.执行 (., 脚本, ), 真))
                                    信息框 (“修改成功！”, 0, )
                                    赋值 (.内容, “”)
                                    赋值 (.内容, “”)
                                    赋值 (.内容, “”)
                                    赋值 (.内容, “”)
                                    赋值 (.内容, “”)
                                    赋值 (.内容, “”)
                                    赋值 (.图标, {  })
                                    首次读取并显示供应商记录 ()
                                    赋值 (.现行子夹, 0)
                                    
                                .否则
                                    信息框 (“修改供应商信息失败！”, 0, )
                                .如果结束
                                
                                
                                
                                
                            .否则
                                信息框 (“修改返货记录信息失败!”, 0, )
                            .如果结束
                            
                        .否则
                            信息框 (“修改已付进货款信息失败!”, 0, )
                        .如果结束
                        
                    .否则
                        信息框 (“修改未付进货款信息失败!”, 0, )
                    .如果结束
                    
                .否则
                    信息框 (“修改退货记录信息失败!”, 0, )
                .如果结束
                
            .否则
                信息框 (“修改商品调价记录信息失败!”, 0, )
            .如果结束
            
        .否则
            信息框 (“修改还供应商款记录信息失败!”, 0, )
        .如果结束
        
    .否则
        信息框 (“修改总库信息失败!”, 0, )
    .如果结束
    
    
    
.否则
    
.如果结束


.子程序 _按钮10_被单击, 空白型, , 
_启动窗口.关闭记录集 (., 记录集句柄)
赋值 (脚本, “select count(*) from 总库”)
_启动窗口.查询 (., 脚本)
.如果 (大于 (_启动窗口.读 (., 记录集句柄, 1), 0))
    信息框 (“已经开始营业运行,不能进行删除操作,请修改使用!”, 0, )
    返回 ()
.否则
    
.如果结束

_启动窗口.关闭记录集 (., 记录集句柄)
赋值 (脚本, 相加 (“delete from 供应商资料 where id =”, .内容))
输出调试文本 (脚本)
.如果 (等于 (_启动窗口.执行 (., 脚本, ), 假))
    信息框 (“执行失败，请重试！”, 0, )
.否则
    信息框 (“执行成功！”, 0, )
    赋值 (.内容, “”)
    赋值 (.内容, “”)
    赋值 (.内容, “”)
    赋值 (.内容, “”)
    
.如果结束











.子程序 _输入框1_内容被改变, 空白型, , 


.子程序 _输入框1_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 tt, 空白型, , , 

.如果真 (等于 (键代码, #回车键))
    赋值 (tt, 0)
    _启动窗口.关闭记录集 (., 记录集句柄)
    赋值 (脚本, 相加 (“select * from 供应商资料 where id =”, .内容))
    输出调试文本 (脚本)
    赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
    _启动窗口.到首记录 (., 记录集句柄)
    .如果 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 真))
        信息框 (“没找到相应记录！”, 0, )
        赋值 (.内容, “”)
        赋值 (.内容, “”)
        赋值 (.内容, “”)
        赋值 (.内容, “”)
    .否则
        .判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 真))
            置等待鼠标 ()
             ' 处理事件 ()
            
            赋值 (tt, 相加 (tt, 1))
            
            _启动窗口.到后一记录 (., 记录集句柄)
        .判断循环尾 ()
        .如果 (小于 (tt, 0))
            信息框 (“没有相应记录！”, 0, )
            赋值 (.内容, “”)
            赋值 (.内容, “”)
            赋值 (.内容, “”)
            赋值 (.内容, “”)
            
        .否则
            赋值 (.内容, 到文本 (_启动窗口.读 (., 记录集句柄, 1)))
            赋值 (.内容, _启动窗口.读 (., 记录集句柄, 2))
            赋值 (.内容, _启动窗口.读 (., 记录集句柄, 3))
            
        .如果结束
        
    .如果结束
    
.如果真结束


.子程序 _按钮4_被单击, 空白型, , 
_启动窗口.关闭记录集 (., 记录集句柄)
销毁 ()

.子程序 _按钮7_被单击, 空白型, , 
赋值 (.现行子夹, 0)

.子程序 _按钮9_被单击, 空白型, , 
赋值 (.现行子夹, 0)


.子程序 _按钮11_被单击, 空白型, , 
赋值 (.现行子夹, 0)


.子程序 _供应商资料_获得焦点, 空白型, , 
赋值 (.现行子夹, 0)
首次读取并显示供应商记录 ()


.子程序 _按钮12_被单击, 空白型, , 
赋值 (表格文件名, 相加 (取运行目录 (), “\wgid\供应商资料”))
.如果 (等于 (表格文件名.未知支持库函数_55 (), 真))
    置文件属性 (表格文件名, 1)
    赋值 (表头标题, “供应商资料”)
    载入 (打印, , 真)
.否则
    信息框 (“打印格式文件出错，操作失败！”, 相加 (0, #错误图标), )
.如果结束



.子程序 _选择夹1_被单击, 空白型, , 


.子程序 _分隔条1_被拖动, 空白型, , 
.参数 原位置, 整数型, , 
.参数 目的位置, 整数型, , 

.局部变量 新左边, 整数型, , , 

.如果真 (小于 (目的位置, 8))
    赋值 (目的位置, 8)
.如果真结束
.如果真 (大于 (目的位置, 相减 (库存调价., 20)))
    赋值 (目的位置, 相减 (库存调价., 20))
.如果真结束
赋值 (., 目的位置)
赋值 (.宽度, 相减 (., .左边))
赋值 (新左边, 相加 (., .))
新左边.移动 (相减 (., 12, 新左边), )


.窗口程序集 窗口程序集14, , , 

.程序集变量 检查状态, 逻辑型, , , 
.子程序 _员工管理_创建完毕, 空白型, , 
.局部变量 匿名局部变量_2131, 空白型, , , 

赋值 (., 经顶边)
赋值 (., 经左边)
赋值 (., 假)


.子程序 显示员工信息, 空白型, , 
_启动窗口.关闭记录集 (., 记录集句柄)
赋值 (.现行子夹, 0)
赋值 (.图标, {  })
赋值 (脚本, “select * from 员工资料 ”)
输出调试文本 (脚本)

赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
_启动窗口.到首记录 (., 记录集句柄)
.判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
    置等待鼠标 ()
     ' 处理事件 ()
    
    .加入项目 (_启动窗口.读 (., 记录集句柄, 2), , , )
    _启动窗口.到后一记录 (., 记录集句柄)
.判断循环尾 ()
_启动窗口.关闭记录集 (., 记录集句柄)
赋值 (.现行子夹, 0)

.子程序 _员工管理_获得焦点, 空白型, , 
显示员工信息 ()

.子程序 _树型框1_项目被选择, 空白型, , 
.参数 选择方式, 整数型, , 

_启动窗口.关闭记录集 (., 记录集句柄)
赋值 (脚本, 相加 (“select * from 员工资料 where 姓名=”, “'”, .取项目文本 (.最大化按钮), “' ”))
输出调试文本 (脚本)
赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
赋值 (., 1)
赋值 (., 6)
赋值 (., 100)
_启动窗口.到首记录 (., 记录集句柄)
相减 (., 1).未知支持库函数_9 (0, 1, “员工ID”)
相减 (., 1).未知支持库函数_9 (1, 1, “员工姓名”)
相减 (., 1).未知支持库函数_9 (2, 1, “电    话”)
相减 (., 1).未知支持库函数_9 (3, 1, “电 话 一”)
相减 (., 1).未知支持库函数_9 (4, 1, “家庭住址”)
相减 (., 1).未知支持库函数_9 (5, 1, “身份证号”)
.未知支持库函数_38 () ' <!!!>
相减 (., 1).未知支持库函数_9 (0, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 1)))
相减 (., 1).未知支持库函数_9 (1, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 2)))
相减 (., 1).未知支持库函数_9 (4, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 3)))
相减 (., 1).未知支持库函数_9 (2, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 4)))
相减 (., 1).未知支持库函数_9 (3, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 5)))
相减 (., 1).未知支持库函数_9 (5, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 6)))


.子程序 _按钮1_被单击, 空白型, , 
赋值 (.现行子夹, 1)

.子程序 _按钮6_被单击, 空白型, , 
检查员工添加输入 ()

.如果 (等于 (检查状态, 真))
    添加员工信息 ()
.否则
    
.如果结束


.子程序 检查员工添加输入, 空白型, , 
.如果 (或者 (等于 (.内容, “”), 等于 (.内容, “”), 等于 (.内容, “”), 等于 (.内容, “”), 等于 (.内容, “”)))
    信息框 (“请完整添写信息！”, 0, )
    赋值 (检查状态, 假)
    返回 ()
.否则
    赋值 (检查状态, 真)
    
    
.如果结束




 ' 赋值 (脚本, 相加 (“select * from 员工资料 where 姓名='”, .内容, “'”))
_启动窗口.关闭记录集 (., 记录集句柄)
赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
_启动窗口.到首记录 (., 记录集句柄)
.判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
    .如果 (等于 (_启动窗口.读 (., 记录集句柄, “姓名”), .内容))
        信息框 (“已有相同姓名员工,请检查!”, 0, )
        赋值 (检查状态, 假)
        
    .否则
        赋值 (检查状态, 真)
    .如果结束
    _启动窗口.到后一记录 (., 记录集句柄)
.判断循环尾 ()

.子程序 添加员工信息, 空白型, , 
_启动窗口.关闭记录集 (., 记录集句柄)
赋值 (脚本, 相加 (“insert into 员工资料 (姓名,住址,电话,电话一,身份证号,登录密码)  values ('”, .内容, “', '”, .内容, “','”, .内容, “','”, .内容, “','”, .内容, “','”, “123”, “')”))
输出调试文本 (脚本)
.如果 (等于 (_启动窗口.执行 (., 脚本, ), 假))
    信息框 (“执行失败，请重试！”, 0, )
.否则
    信息框 (“添加员工信息成功,该员工默认密码为123！”, 0, )
    
    _启动窗口.关闭记录集 (., 记录集句柄)
.如果结束


.子程序 _按钮2_被单击, 空白型, , 
赋值 (.现行子夹, 2)

.子程序 _输入框_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 t, 空白型, , , 

.如果真 (等于 (键代码, #回车键))
    _启动窗口.关闭记录集 (., 记录集句柄)
    赋值 (脚本, 相加 (“select * from 员工资料 where id =”, .内容, “ and 姓名<>'超级管理员' and 姓名<>'管理员' and 姓名<>'经理'”))
    输出调试文本 (脚本)
    赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
    _启动窗口.到首记录 (., 记录集句柄)
    .如果 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 真))
        置等待鼠标 ()
         ' 处理事件 ()
        
        信息框 (“没找到相应记录！”, 0, )
        输入初始 ()
    .否则
        .判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 真))
            置等待鼠标 ()
             ' 处理事件 ()
            
            赋值 (t, 相加 (t, 1))
            
            _启动窗口.到后一记录 (., 记录集句柄)
        .判断循环尾 ()
        .如果 (小于 (t, 0))
            信息框 (“没有相应记录！”, 0, )
            输入初始 ()
        .否则
            赋值 (.内容, _启动窗口.读 (., 记录集句柄, 2))
            赋值 (.内容, _启动窗口.读 (., 记录集句柄, 3))
            赋值 (.内容, _启动窗口.读 (., 记录集句柄, 4))
            赋值 (.内容, _启动窗口.读 (., 记录集句柄, 5))
            赋值 (.内容, _启动窗口.读 (., 记录集句柄, 6))
            赋值 (.内容, _启动窗口.读 (., 记录集句柄, 2))
            赋值 (.内容, _启动窗口.读 (., 记录集句柄, 3))
            赋值 (.内容, _启动窗口.读 (., 记录集句柄, 4))
            赋值 (.内容, _启动窗口.读 (., 记录集句柄, 5))
            赋值 (.内容, _启动窗口.读 (., 记录集句柄, 6))
            赋值 (.内容, 到文本 (_启动窗口.读 (., 记录集句柄, 1)))
            住址框.nr=
        .如果结束
        
    .如果结束
    
.如果真结束


.子程序 _输入框_内容被改变, 空白型, , 


.子程序 输入初始, 空白型, , 
赋值 (.内容, “”)
赋值 (.内容, “”)
赋值 (.内容, “”)
赋值 (.内容, “”)
赋值 (.内容, “”)
赋值 (.内容, “”)
赋值 (.内容, “”)
赋值 (.内容, “”)
赋值 (.内容, “”)
赋值 (.内容, “”)
赋值 (.内容, “”)
赋值 (.内容, “”)

.子程序 _按钮8_被单击, 空白型, , 
.如果 (或者 (等于 (.内容, “”), 等于 (.内容, “”), 等于 (.内容, “”), 等于 (.内容, “”), 等于 (.内容, “”)))
    信息框 (“请完整添写信息！”, 0, )
.否则
    赋值 (脚本, 相加 (“update 员工资料 set 姓名='”, .内容, “',住址 = '”, .内容, “',电话='”, .内容, “',电话一=' ”, .内容, “',身份证号='”, .内容, “'”, “where id=”, .内容))
    输出调试文本 (脚本)
    .如果 (_启动窗口.执行 (., 脚本, ))
        信息框 (“修改成功！”, 0, )
    .否则
        信息框 (“修改失败！！！！！！！！”, 0, )
    .如果结束
    
.如果结束


.子程序 _按钮9_被单击, 空白型, , 
赋值 (.现行子夹, 0)

.子程序 _输入框1_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 t, 空白型, , , 

.如果真 (等于 (键代码, #回车键))
    _启动窗口.关闭记录集 (., 记录集句柄)
    赋值 (脚本, 相加 (“select * from 员工资料 where id =”, .内容, “ and 姓名<>'超级管理员' and 姓名<>'管理员' and 姓名<>'经理'”))
    输出调试文本 (脚本)
    赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
    _启动窗口.到首记录 (., 记录集句柄)
    .如果 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 真))
        信息框 (“没找到相应记录！”, 0, )
        输入初始 ()
    .否则
        .判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 真))
            置等待鼠标 ()
             ' 处理事件 ()
            
            赋值 (t, 相加 (t, 1))
            
            _启动窗口.到后一记录 (., 记录集句柄)
        .判断循环尾 ()
        .如果 (小于 (t, 0))
            信息框 (“没有相应记录！”, 0, )
            赋值 (.内容, “”)
            赋值 (.内容, “”)
            赋值 (.内容, “”)
            
            
        .否则
            赋值 (.内容, 相加 (“即将删除员工姓名：”, _启动窗口.读 (., 记录集句柄, 2)))
            赋值 (.内容, 到文本 (_启动窗口.读 (., 记录集句柄, 1)))
        .如果结束
        
    .如果结束
    
.如果真结束


.子程序 _按钮3_被单击, 空白型, , 
赋值 (.现行子夹, 3)
赋值 (.内容, “”)
赋值 (.内容, “”)
赋值 (.内容, “”)

.子程序 _输入框1_内容被改变, 空白型, , 


.子程序 _按钮4_被单击, 空白型, , 
_启动窗口.关闭记录集 (., 记录集句柄)
销毁 ()

.子程序 _按钮10_被单击, 空白型, , 

_启动窗口.关闭记录集 (., 记录集句柄)
赋值 (脚本, 相加 (“delete from 员工资料 where id =”, .内容))
输出调试文本 (脚本)
.如果 (等于 (_启动窗口.执行 (., 脚本, ), 假))
    信息框 (“执行失败，请重试！”, 0, )
.否则
    信息框 (“执行成功！”, 0, )
.如果结束


.子程序 _分隔条1_被拖动, 空白型, , 
.参数 原位置, 整数型, , 
.参数 目的位置, 整数型, , 

.局部变量 新左边, 整数型, , , 

.如果真 (小于 (目的位置, 8))
    赋值 (目的位置, 8)
.如果真结束
.如果真 (大于 (目的位置, 相减 (., 20)))
    赋值 (目的位置, 相减 (., 20))
.如果真结束
赋值 (., 目的位置)
赋值 (.宽度, 相减 (., .左边))
赋值 (新左边, 相加 (., .))
新左边.移动 (相减 (., 12, 新左边), )



.子程序 _输入框_失去焦点, 空白型, , 


.窗口程序集 窗口程序集15, , , 

.程序集变量 有否, 文本型, , , 
.子程序 _商品入库_创建完毕, 空白型, , 
赋值 (., 经顶边)
赋值 (., 经左边)
赋值 (., 假)

赋值 (添加商品计数, 0) ' 为表格行数进行初始，用于表格多少行进行计数后循环
赋值 (., 0)
赋值 (., 10)
赋值 (., 100)
赋值 (., 1)
相减 (., 1).未知支持库函数_9 (0, 1, “商品编码”)
相减 (., 1).未知支持库函数_9 (1, 1, “商品名称”)
相减 (., 1).未知支持库函数_9 (2, 1, “拼音码”)
相减 (., 1).未知支持库函数_9 (3, 1, “规格”)
相减 (., 1).未知支持库函数_9 (4, 1, “进货数量”)
相减 (., 1).未知支持库函数_9 (5, 1, “库存上限”)
相减 (., 1).未知支持库函数_9 (6, 1, “库存下]限”)
相减 (., 1).未知支持库函数_9 (7, 1, “一级分类”)
相减 (., 1).未知支持库函数_9 (8, 1, “二级分类”)
相减 (., 1).未知支持库函数_9 (9, 1, “产地”)
赋值 (., 1)
赋值 (., 0)
赋值 (., 0)
赋值 (., 1)
赋值 (., 10)
相减 (., 1).未知支持库函数_9 (1, 1, “商品编码”)
相减 (., 1).未知支持库函数_9 (0, 1, “商品名称”)
相减 (., 1).未知支持库函数_9 (2, 1, “拼 音 码”)
相减 (., 1).未知支持库函数_9 (3, 1, “规    格”)
相减 (., 1).未知支持库函数_9 (4, 1, “库存上限”)
相减 (., 1).未知支持库函数_9 (5, 1, “库存下限”)
相减 (., 1).未知支持库函数_9 (6, 1, “一级分类”)
相减 (., 1).未知支持库函数_9 (7, 1, “二级分类”)
相减 (., 1).未知支持库函数_9 (8, 1, “产    地”)
赋值 (., 1)
添加供应商下拉列表内容 ()
判断有否入库单号 ()



.子程序 添加商品信息到列表, 空白型, , 
赋值 (脚本, 相加 (“select * from 商品大典 where 商品编码=”, 商品编号暂存))
赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
_启动窗口.到首记录 (., 记录集句柄)
.判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
    置等待鼠标 ()
     ' 处理事件 ()
    
    商品入库.未知支持库函数_38 (., , )
    商品入库.未知支持库函数_9 (., 相减 (., 1), 1, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “商品名称”)))
    商品入库.未知支持库函数_9 (., 相减 (., 1), 2, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “拼单码”)))
    商品入库.未知支持库函数_9 (., 相减 (., 1), 0, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “商品编码”)))
    商品入库.未知支持库函数_9 (., 相减 (., 1), 3, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “规格”)))
    商品入库.未知支持库函数_9 (., 相减 (., 1), 5, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “库存上限”)))
    商品入库.未知支持库函数_9 (., 相减 (., 1), 6, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “库存下限”)))
    商品入库.未知支持库函数_9 (., 相减 (., 1), 7, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “一级分类名”)))
    商品入库.未知支持库函数_9 (., 相减 (., 1), 8, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “二级分类名”)))
    商品入库.未知支持库函数_9 (., 相减 (., 1), 9, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “产地”)))
    
    
    _启动窗口.到后一记录 (., 记录集句柄)
.判断循环尾 ()



.子程序 格式化时间, 空白型, , 
.局部变量 时间, 日期时间型, , , 
.局部变量 年, 文本型, , , 
.局部变量 月, 文本型, , , 
.局部变量 日, 文本型, , , 
.局部变量 时, 文本型, , , 
.局部变量 分, 文本型, , , 
.局部变量 秒, 文本型, , , 

赋值 (年, 到文本 (取时间部分 (时间, 1)))
赋值 (月, 到文本 (取时间部分 (时间, 3)))
.如果真 (等于 (取文本长度 (月), 1))
    赋值 (月, 相加 (“0”, 月))
.如果真结束
赋值 (日, 到文本 (取时间部分 (时间, 5)))
.如果真 (等于 (取文本长度 (日), 1))
    赋值 (日, 相加 (“0”, 日))
.如果真结束
赋值 (时, 到文本 (取时间部分 (时间, 6)))
.如果真 (等于 (取文本长度 (时), 1))
    赋值 (时, 相加 (“0”, 时))
.如果真结束
赋值 (分, 到文本 (取时间部分 (时间, 7)))
.如果真 (等于 (取文本长度 (分), 1))
    赋值 (分, 相加 (“0”, 分))
.如果真结束
赋值 (秒, 到文本 (取时间部分 (时间, 8)))
.如果真 (等于 (取文本长度 (秒), 1))
    赋值 (秒, 相加 (“0”, 秒))
.如果真结束

返回 (相加 (年, “-”, 月, “-”, 日, “ ”, 时, “:”, 分, “:”, 秒))


.子程序 _按钮1_被单击, 空白型, , 
置等待鼠标 ()
 ' 处理事件 ()
载入 (选择商品, , 真)
.如果 (等于 (选择与否, 真))
    赋值 (添加商品计数, 相加 (添加商品计数, 1))
    添加商品信息到列表 ()
    载入 (入库输入, , 真)
.否则
    
.如果结束


.子程序 判断有否入库单号, 空白型, , 
.局部变量 真假, 逻辑型, , , 
.局部变量 t, 空白型, , , 


赋值 (真假, 假)
赋值 (t, 1)
.判断循环首 (不等于 (真假, 真))
    赋值 (入库单号临时, 相加 (“入”, 未知支持库函数_12 (.今天, “%y-%m-%d”), “-”, 到文本 (t)))
    输出调试文本 (入库单号临时)
    赋值 (脚本, 相加 (“select * from 总库 where 单据号='”, 入库单号临时, “'”))
    赋值 (记录集句柄一, _启动窗口.查询 (., 脚本))
    _启动窗口.到首记录 (., 记录集句柄一)
    输出调试文本 (到文本 (t))
    .如果 (等于 (_启动窗口.读 (., 记录集句柄一, 1), 入库单号临时))
        赋值 (t, 相加 (t, 1))
        _启动窗口.到后一记录 (., 记录集句柄一)
    .否则
        赋值 (入库单号临时, 相加 (“入”, 未知支持库函数_12 (.今天, “%y-%m-%d”), “-”, 到文本 (t)))
        赋值 (.内容, 入库单号临时)
        跳出循环 ()
    .如果结束
    
.判断循环尾 ()



.子程序 _日期_选择日期被改变, 空白型, , 
判断有否入库单号 ()

.子程序 添加供应商下拉列表内容, 空白型, , 
.局部变量 t, 空白型, , , 

赋值 (脚本, “select count(*) from 供应商资料”)
_启动窗口.关闭记录集 (., 记录集句柄一)
赋值 (记录集句柄一, _启动窗口.查询 (., 脚本))
赋值 (t, _启动窗口.读 (., 记录集句柄一, 1))
_启动窗口.关闭记录集 (., 记录集句柄一)
赋值 (脚本, “select * from 供应商资料”)
赋值 (记录集句柄一, _启动窗口.查询 (., 脚本))
_启动窗口.到首记录 (., 记录集句柄一)
.计次循环首 (t, )
    _启动窗口.读 (., 记录集句柄一, 2).加入项目 ()
    _启动窗口.到后一记录 (., 记录集句柄一)
.计次循环尾 ()


.子程序 _按钮4_被单击, 空白型, , 
销毁 ()

.子程序 _按钮2_被单击, 空白型, , 
未知支持库函数_3 ().未知支持库函数_36 ()
赋值 (添加商品计数, 相减 (添加商品计数, 1))
.如果 (小于 (添加商品计数, 0))
    赋值 (添加商品计数, 0)
.否则
    
.如果结束



.子程序 _按钮3_被单击, 空白型, , 
.局部变量 ttt, 空白型, , , 
.局部变量 tt, 空白型, , , 
.局部变量 商品编码, 文本型, , , 
.局部变量 商品名称, 文本型, , , 
.局部变量 拼音码, 文本型, , , 
.局部变量 规格, 文本型, , , 
.局部变量 数量, 文本型, , , 
.局部变量 现库存数量, 文本型, , , 
.局部变量 零售价, 文本型, , , 
.局部变量 供应商, 文本型, , , 
.局部变量 库存上限, 文本型, , , 
.局部变量 库存下限, 文本型, , , 
.局部变量 一级分类, 文本型, , , 
.局部变量 二级分类, 文本型, , , 
.局部变量 入库日期, 文本型, , , 
.局部变量 单据号, 文本型, , , 
.局部变量 备注, 文本型, , , 
.局部变量 tttt, 空白型, , , 
.局部变量 产地, 文本型, , , 
.局部变量 ddd, 逻辑型, , , 

 ' .如果真 (等于 (限制, 真))
     ' 信息框 (“本软件为共亨软件，30天试用期已过，不能进行入库操作，请您注册！”, 0, )
     ' 返回 ()
 ' .如果真结束



判断有否入库单号二 ()
.如果真 (等于 (有否, “有”))
    赋值 (有否, “没”)
    返回 ()
.如果真结束



赋值 (备注, .内容)
.如果真 (等于 (.内容, “”))
    赋值 (备注, “-”)
    
.如果真结束

.如果真 (等于 (.内容, “”))
    信息框 (“请选择供货商！”, 0, )
    返回 ()
.如果真结束
.计次循环首 (添加商品计数, tttt)
    .如果 (或者 (等于 (添加商品计数.未知支持库函数_10 (4), “”), 等于 (添加商品计数.未知支持库函数_10 (5), “”), 等于 (添加商品计数.未知支持库函数_10 (6), “”)))
        信息框 (“请输入产品数量、供货商及零售价！”, 0, )
        返回 ()
    .否则
        
    .如果结束
    
.计次循环尾 ()

赋值 (入库日期, 未知支持库函数_12 (.今天, “%y-%m-%d”))
赋值 (单据号, .内容)



.计次循环首 (添加商品计数, tt)
    赋值 (商品编码, tt.未知支持库函数_10 (相减 (1, 1)))
    赋值 (商品名称, 相加 (“'”, tt.未知支持库函数_10 (相减 (2, 1)), “'”))
    赋值 (拼音码, 相加 (“'”, tt.未知支持库函数_10 (相减 (3, 1)), “'”))
    赋值 (规格, 相加 (“'”, tt.未知支持库函数_10 (相减 (4, 1)), “'”))
    赋值 (数量, tt.未知支持库函数_10 (相减 (5, 1)))
    赋值 (现库存数量, 数量)
    赋值 (零售价, “0”) ' 零售价 ＝ 表格1.取数据 (tt, 6 － 1)
    赋值 (供应商, 相加 (“'”, .内容, “'”))
    赋值 (库存上限, tt.未知支持库函数_10 (相减 (6, 1)))
    赋值 (库存下限, tt.未知支持库函数_10 (相减 (7, 1)))
    赋值 (一级分类, 相加 (“'”, tt.未知支持库函数_10 (相减 (8, 1)), “'”))
    赋值 (二级分类, 相加 (“'”, tt.未知支持库函数_10 (相减 (9, 1)), “'”))
    赋值 (产地, 相加 (“'”, tt.未知支持库函数_10 (9), “'”))
    
    
    赋值 (脚本, 相加 (“insert into 总库(商品编码,商品名称,拼音码,规格,数量,零售价,供货商,库存上限,库存下限,一级分类,二级分类,单据号,入库日期,备注,产地,库存数量,操作员)  values (”, 商品编码, “,”, 商品名称, “,”, 拼音码, “,”, 规格, “,”, 数量, “,”, 零售价, “,”, 供应商, “,”, 库存上限, “,”, 库存下限, “,”, 一级分类, “,”, 二级分类, “,'”, 单据号, “','”, 入库日期, “','”, 备注, “',”, 产地, “,”, 现库存数量, “,'”, 操作员, “')”))
    输出调试文本 (脚本)
    .如果 (等于 (_启动窗口.执行 (., 脚本, ), 真))
         ' 信息框 (“ok”, 0, )
        赋值 (ddd, 真)
    .否则
         ' 信息框 (“error”, 0, )
        赋值 (ddd, 假)
        跳出循环 ()
    .如果结束
    
.计次循环尾 ()
.如果 (等于 (ddd, 真))
    信息框 (“入库成功！”, 64, “贝尔软件”)
    赋值 (添加商品计数, 0)
.否则
    信息框 (“入库失败！”, 64, “贝尔软件”)
    返回 ()
.如果结束
赋值 (., 1)
判断有否入库单号 ()
赋值 (.现行选中项, -1)
赋值 (.内容, “”)
 ' 销毁 ()

.子程序 判断有否入库单号二, 空白型, , 
赋值 (脚本, 相加 (“select * from 总库 where 单据号='”, .内容, “'”))
赋值 (记录集句柄一, _启动窗口.查询 (., 脚本))
_启动窗口.到首记录 (., 记录集句柄一)
赋值 (入库单号临时, .内容)
.如果 (等于 (_启动窗口.读 (., 记录集句柄一, 1), 入库单号临时))
    信息框 (“数据库内已有此入库单号，请修改入库单编号！”, 0, )
    赋值 (有否, “有”)
    返回 ()
.否则
    赋值 (有否, “没”)
.如果结束


.子程序 _按钮5_被单击, 空白型, , 
载入 (商品大典, , 真)


.子程序 _编辑框1_内容被改变, 空白型, , 
赋值 (脚本, 相加 (“select * from 商品大典 where 拼单码”, “ like '%”, .内容, “%'”))
输出调试文本 (脚本)
_启动窗口.关闭记录集 (., 记录集句柄)
赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
_启动窗口.到首记录 (., 记录集句柄)
赋值 (., 1)
.判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
    置等待鼠标 ()
     ' 处理事件 ()
    
    .未知支持库函数_38 () ' <!!!>
    相减 (., 1).未知支持库函数_9 (0, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “商品名称”)))
    相减 (., 1).未知支持库函数_9 (1, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “商品编码”)))
    相减 (., 1).未知支持库函数_9 (2, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “拼单码”)))
    相减 (., 1).未知支持库函数_9 (3, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “规格”)))
    相减 (., 1).未知支持库函数_9 (4, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “库存上限”)))
    相减 (., 1).未知支持库函数_9 (5, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “库存下限”)))
    相减 (., 1).未知支持库函数_9 (6, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “一级分类名”)))
    相减 (., 1).未知支持库函数_9 (7, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “二级分类名”)))
    相减 (., 1).未知支持库函数_9 (8, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “产地”)))
    _启动窗口.到后一记录 (., 记录集句柄)
.判断循环尾 ()



.子程序 _表格2_被双击, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果 (不等于 (未知支持库函数_3 (), -1))
    赋值 (选择与否, 真)
    赋值 (商品编号暂存, 未知支持库函数_3 ().未知支持库函数_10 (1))
    _启动窗口.关闭记录集 (., 记录集句柄)
    .如果 (等于 (选择与否, 真))
        赋值 (添加商品计数, 相加 (添加商品计数, 1))
        置等待鼠标 ()
         ' 处理事件 ()
        商品入库.未知支持库函数_38 (., , )
        商品入库.未知支持库函数_9 (., 相减 (., 1), 0, 1, 未知支持库函数_3 ().未知支持库函数_10 (1))
        商品入库.未知支持库函数_9 (., 相减 (., 1), 1, 1, 未知支持库函数_3 ().未知支持库函数_10 (0))
        商品入库.未知支持库函数_9 (., 相减 (., 1), 2, 1, 未知支持库函数_3 ().未知支持库函数_10 (2))
        商品入库.未知支持库函数_9 (., 相减 (., 1), 3, 1, 未知支持库函数_3 ().未知支持库函数_10 (3))
        商品入库.未知支持库函数_9 (., 相减 (., 1), 5, 1, 未知支持库函数_3 ().未知支持库函数_10 (4))
        商品入库.未知支持库函数_9 (., 相减 (., 1), 6, 1, 未知支持库函数_3 ().未知支持库函数_10 (5))
        商品入库.未知支持库函数_9 (., 相减 (., 1), 7, 1, 未知支持库函数_3 ().未知支持库函数_10 (6))
        商品入库.未知支持库函数_9 (., 相减 (., 1), 8, 1, 未知支持库函数_3 ().未知支持库函数_10 (7))
        商品入库.未知支持库函数_9 (., 相减 (., 1), 9, 1, 未知支持库函数_3 ().未知支持库函数_10 (8))
        载入 (入库输入, , 真)
    .否则
        
    .如果结束
    
    
    
.否则
    赋值 (选择与否, 假)
.如果结束


.子程序 _表格2_光标位置改变, 空白型, , 


.窗口程序集 窗口程序集16, , , 

.子程序 _选择商品_创建完毕, 空白型, , 
赋值 (., 经顶边)
赋值 (., 经左边)
赋值 (., 假)

赋值 (.图标, {  })
首次读取并显示选择记录 ()


.子程序 首次读取并显示选择记录, 空白型, , 
.局部变量 t, 空白型, , , 
.局部变量 文本, 文本型, , , 
.局部变量 tt, 空白型, , , 
.局部变量 yy, 空白型, , , 

_启动窗口.关闭记录集 (., 记录集句柄)
赋值 (.图标, {  })
赋值 (脚本, 相加 (“select * from 商品分类 where 一级 ”, “ = ”, “'”, “1”, “'”))
输出调试文本 (脚本)
赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
_启动窗口.到首记录 (., 记录集句柄)
赋值 (yy, 0)
.判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
    置等待鼠标 ()
     ' 处理事件 ()
    
    yy.置图片 (1)
    yy.置选中图片 (2)
    yy.置外形图片 (3)
    .加入项目 (_启动窗口.读 (., 记录集句柄, 1), , , )
    _启动窗口.到后一记录 (., 记录集句柄)
    赋值 (yy, 相加 (yy, 1))
.判断循环尾 ()
_启动窗口.关闭记录集 (., 记录集句柄)
赋值 (t, 0)
赋值 (文本, “”)

.判断循环首 (小于或等于 (t, 取项目数 ()))
    置等待鼠标 ()
     ' 处理事件 ()
    
    t.置图片 (1)
    t.置选中图片 (2)
    yy.置外形图片 (3)
    赋值 (文本, t.取项目文本 ())
    输出调试文本 (文本)
    _启动窗口.关闭记录集 (., 记录集句柄)
    赋值 (脚本, 相加 (“select * from 商品分类 where 二级 ”, “ = ”, “'”, “1”, “' and ”, “商品类名 = '”, 文本, “'”))
    输出调试文本 (脚本)
    赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
    _启动窗口.到首记录 (., 记录集句柄)
    .判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
        置等待鼠标 ()
         ' 处理事件 ()
        
        t.加入项目 (_启动窗口.读 (., 记录集句柄, 2), , , )
        _启动窗口.到后一记录 (., 记录集句柄)
    .判断循环尾 ()
    赋值 (t, 相加 (t, 1))
.判断循环尾 ()

赋值 (t, 0)
_启动窗口.关闭记录集 (., 记录集句柄)


.子程序 _树型框1_被双击, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 



.子程序 _按钮1_被单击, 空白型, , 
载入 (添加商品资料, , 真)

.子程序 _树型框1_项目被选择, 空白型, , 
.参数 选择方式, 整数型, , 

.如果 (不等于 (.取父项目 (.最大化按钮), -1))
    赋值 (分类名, .取项目文本 (.最大化按钮))
    赋值 (一级分类名, .取父项目 (.最大化按钮).取项目文本 ())
.否则
    赋值 (分类名, “”)
.如果结束

_启动窗口.关闭记录集 (., 记录集句柄)
赋值 (脚本, 相加 (“select * from 商品大典 where 二级分类名=”, “'”, .取项目文本 (.最大化按钮), “' ”))
输出调试文本 (脚本)
赋值 (记录集句柄, _启动窗口.查询 (., 脚本))

赋值 (., 1)
赋值 (., 8)
_启动窗口.到首记录 (., 记录集句柄)
相减 (., 1).未知支持库函数_9 (1, 1, “商品编码”)
相减 (., 1).未知支持库函数_9 (0, 1, “商品名称”)
相减 (., 1).未知支持库函数_9 (2, 1, “拼音码”)
相减 (., 1).未知支持库函数_9 (3, 1, “规格”)
相减 (., 1).未知支持库函数_9 (4, 1, “库存上限”)
相减 (., 1).未知支持库函数_9 (5, 1, “库存下限”)
相减 (., 1).未知支持库函数_9 (6, 1, “一级分类名”)
相减 (., 1).未知支持库函数_9 (7, 1, “二级分类名”)


.判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
    置等待鼠标 ()
     ' 处理事件 ()
    
    .未知支持库函数_38 () ' <!!!>
    相减 (., 1).未知支持库函数_9 (1, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 3)))
    相减 (., 1).未知支持库函数_9 (0, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 1)))
    相减 (., 1).未知支持库函数_9 (2, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 2)))
    相减 (., 1).未知支持库函数_9 (3, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 4)))
    相减 (., 1).未知支持库函数_9 (4, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 5)))
    相减 (., 1).未知支持库函数_9 (5, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 6)))
    相减 (., 1).未知支持库函数_9 (6, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 7)))
    相减 (., 1).未知支持库函数_9 (7, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 8)))
    _启动窗口.到后一记录 (., 记录集句柄)
.判断循环尾 ()


.子程序 _商品大典_将被销毁, 空白型, , 
_启动窗口.关闭记录集 (., 记录集句柄)


.子程序 _按钮2_被单击, 空白型, , 
载入 (商品大典编辑输入, , 假)

.子程序 _表格1_光标位置改变, 空白型, , 


.子程序 _按钮3_被单击, 空白型, , 
载入 (商品大典删除输入, , 真)


.子程序 _刷新_被单击, 空白型, , 
首次读取并显示选择记录 ()

.子程序 _按钮4_被单击, 空白型, , 
销毁 ()

.子程序 _表格1_被双击, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果 (不等于 (未知支持库函数_3 (), -1))
    赋值 (选择与否, 真)
    赋值 (商品编号暂存, 选择商品.未知支持库函数_10 (., 未知支持库函数_3 (), 1))
    _启动窗口.关闭记录集 (., 记录集句柄)
    销毁 ()
    
.否则
    
.如果结束


.子程序 _按钮6_被单击, 空白型, , 
_启动窗口.关闭记录集 (., 记录集句柄)
赋值 (脚本, “select * from 商品大典”)
输出调试文本 (脚本)
赋值 (记录集句柄, _启动窗口.查询 (., 脚本))

赋值 (., 1)
赋值 (., 8)
_启动窗口.到首记录 (., 记录集句柄)
相减 (., 1).未知支持库函数_9 (1, 1, “商品编码”)
相减 (., 1).未知支持库函数_9 (0, 1, “商品名称”)
相减 (., 1).未知支持库函数_9 (2, 1, “拼音码”)
相减 (., 1).未知支持库函数_9 (3, 1, “规格”)
相减 (., 1).未知支持库函数_9 (4, 1, “库存上限”)
相减 (., 1).未知支持库函数_9 (5, 1, “库存下限”)
相减 (., 1).未知支持库函数_9 (6, 1, “一级分类名”)
相减 (., 1).未知支持库函数_9 (7, 1, “二级分类名”)


.判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
    置等待鼠标 ()
     ' 处理事件 ()
    
    .未知支持库函数_38 () ' <!!!>
    相减 (., 1).未知支持库函数_9 (1, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 3)))
    相减 (., 1).未知支持库函数_9 (0, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 1)))
    相减 (., 1).未知支持库函数_9 (2, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 2)))
    相减 (., 1).未知支持库函数_9 (3, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 4)))
    相减 (., 1).未知支持库函数_9 (4, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 5)))
    相减 (., 1).未知支持库函数_9 (5, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 6)))
    相减 (., 1).未知支持库函数_9 (6, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 7)))
    相减 (., 1).未知支持库函数_9 (7, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 8)))
    
    
    
    
    
    _启动窗口.到后一记录 (., 记录集句柄)
.判断循环尾 ()



.子程序 _选择商品_将被销毁, 空白型, , 
.如果 (等于 (未知支持库函数_3 (), -1))
    赋值 (选择与否, 假)
.否则
    
.如果结束



.子程序 _按钮7_被单击, 空白型, , 
载入 (添加商品分类入库, , 真)
_刷新_被单击 ()


.子程序 _编辑框1_内容被改变, 空白型, , 
 ' _启动窗口.关闭记录集 (., 记录集句柄)
赋值 (脚本, 相加 (“select * from 商品大典 where 拼单码”, “ like '%”, .内容, “%'”))
输出调试文本 (脚本)
赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
_启动窗口.到首记录 (., 记录集句柄)
赋值 (., 1)
赋值 (., 8)
相减 (., 1).未知支持库函数_9 (1, 1, “商品编码”)
相减 (., 1).未知支持库函数_9 (0, 1, “商品名称”)
相减 (., 1).未知支持库函数_9 (2, 1, “拼音码”)
相减 (., 1).未知支持库函数_9 (3, 1, “规格”)
相减 (., 1).未知支持库函数_9 (4, 1, “库存上限”)
相减 (., 1).未知支持库函数_9 (5, 1, “库存下限”)
相减 (., 1).未知支持库函数_9 (6, 1, “一级分类名”)
相减 (., 1).未知支持库函数_9 (7, 1, “二级分类名”)


.判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
    置等待鼠标 ()
     ' 处理事件 ()
    
    .未知支持库函数_38 () ' <!!!>
    相减 (., 1).未知支持库函数_9 (1, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 3)))
    相减 (., 1).未知支持库函数_9 (0, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 1)))
    相减 (., 1).未知支持库函数_9 (2, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 2)))
    相减 (., 1).未知支持库函数_9 (3, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 4)))
    相减 (., 1).未知支持库函数_9 (4, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 5)))
    相减 (., 1).未知支持库函数_9 (5, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 6)))
    相减 (., 1).未知支持库函数_9 (6, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 7)))
    相减 (., 1).未知支持库函数_9 (7, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 8)))
    _启动窗口.到后一记录 (., 记录集句柄)
.判断循环尾 ()



.子程序 _分隔条1_被拖动, 空白型, , 
.参数 原位置, 整数型, , 
.参数 目的位置, 整数型, , 

.局部变量 新左边, 整数型, , , 

.如果真 (小于 (目的位置, 8))
    赋值 (目的位置, 8)
.如果真结束
.如果真 (大于 (目的位置, 相减 (., 20)))
    赋值 (目的位置, 相减 (., 20))
.如果真结束
赋值 (., 目的位置)
赋值 (.宽度, 相减 (., .左边))
赋值 (新左边, 相加 (., .))
新左边.移动 (相减 (., 12, 新左边), )



.窗口程序集 窗口程序集17, , , 

.子程序 _按钮2_被单击, 空白型, , 
.局部变量 t, 空白型, , , 

清空 ()
_启动窗口.关闭记录集 (., 记录集句柄)
赋值 (脚本, “select distinct(单据号) from 总库 order by 单据号”) ' 脚本 ＝ “select distinct(单据号),(select count(*) as 数量 from 总库) from 总库 order by 单据号”
赋值 (记录集句柄, _启动窗口.查询 (., 脚本)) ' 对数据库排序：order by  求合：sum
_启动窗口.到首记录 (., 记录集句柄)
.判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
    置等待鼠标 ()
     ' 处理事件 ()
    
     ().加入项目 (_启动窗口.读 (., 记录集句柄, 1), , , )
    _启动窗口.到后一记录 (., 记录集句柄)
.判断循环尾 ()

.子程序 写表头信息, 空白型, , 
赋值 (., 60)
赋值 (., 1)
赋值 (., 0)

赋值 (., 20)
相减 (., 1).未知支持库函数_9 (0, 1, “商品编码”)
1.未知支持库函数_32 (120)
相减 (., 1).未知支持库函数_9 (1, 1, “商品名称”)
2.未知支持库函数_32 (120)
相减 (., 1).未知支持库函数_9 (2, 1, “入库日期”)
相减 (., 1).未知支持库函数_9 (3, 1, “拼音码”)
相减 (., 1).未知支持库函数_9 (4, 1, “规格”)
相减 (., 1).未知支持库函数_9 (5, 1, “进货数量”)
相减 (., 1).未知支持库函数_9 (6, 1, “库存数量”)
相减 (., 1).未知支持库函数_9 (7, 1, “进货价”)
相减 (., 1).未知支持库函数_9 (8, 1, “应付金额”)
相减 (., 1).未知支持库函数_9 (9, 1, “已付金额”)
相减 (., 1).未知支持库函数_9 (10, 1, “零售价”)
相减 (., 1).未知支持库函数_9 (11, 1, “批发价”)
相减 (., 1).未知支持库函数_9 (12, 1, “库存上限”)
相减 (., 1).未知支持库函数_9 (13, 1, “库存下限”)
相减 (., 1).未知支持库函数_9 (14, 1, “一级分类”)
相减 (., 1).未知支持库函数_9 (15, 1, “二级分类”)
相减 (., 1).未知支持库函数_9 (16, 1, “供货商”)
相减 (., 1).未知支持库函数_9 (17, 1, “备注”)
相减 (., 1).未知支持库函数_9 (18, 1, “产地”)



.子程序 _库存单据一览_创建完毕, 空白型, , 
赋值 (., 经顶边)
赋值 (., 经左边)
赋值 (., 假)

写表头信息 ()


.子程序 _树型框1_项目被选择, 空白型, , 
.参数 选择方式, 整数型, , 

_启动窗口.关闭记录集 (., 记录集句柄)
赋值 (脚本, 相加 (“select * from 总库 where 单据号=”, “'”, .取项目文本 (.最大化按钮), “' ”))
输出调试文本 (脚本)
赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
 ' 赋值 (., 1)
添置表格数据 ()

.子程序 _按钮1_被单击, 空白型, , 
.局部变量 开始, 文本型, , , 
.局部变量 结束, 文本型, , , 
.局部变量 t, 空白型, , , 
.局部变量 项目名暂存, 文本型, , , 
.局部变量 项目名暂存2, 文本型, , , 

.如果 (小于 (.今天, .今天))
    信息框 (“请注意开始日期和结束日期！”, 0, )
    返回 ()
.否则
    赋值 (开始, 相加 (“#”, 未知支持库函数_12 (.今天, “%y-%m-%d”), “#”))
    赋值 (结束, 相加 (“#”, 未知支持库函数_12 (.今天, “%y-%m-%d”), “#”))
    
    
    赋值 (脚本, 相加 (“select count(*) from 总库  where 入库日期 >= ”, 开始, “ and 入库日期 <= ”, 结束))
    输出调试文本 (脚本)
    _启动窗口.关闭记录集 (., 记录集句柄一)
    赋值 (记录集句柄一, _启动窗口.查询 (., 脚本))
    赋值 (t, _启动窗口.读 (., 记录集句柄一, 1))
    
    _启动窗口.关闭记录集 (., 记录集句柄一)
    .如果 (等于 (t, 0))
        信息框 (“没有找到相关数据！”, 0, )
    .否则
        _启动窗口.关闭记录集 (., 记录集句柄一)
        .如果真 (并且 (等于 (.选中, 假), 等于 (.选中, 假)))
            信息框 (“请选择未付或已付查看,本功能中未包含未定价货物!流水功能包含其功能.”, 0, )
            返回 ()
        .如果真结束
        .如果真 (并且 (等于 (.选中, 真), 等于 (.选中, 假)))
            赋值 (脚本, 相加 (“select distinct(单据号) from 总库  where 入库日期 >= ”, 开始, “ and 入库日期 <= ”, 结束, “ and 已付金额>0”))
            
        .如果真结束
        .如果真 (并且 (等于 (.选中, 假), 等于 (.选中, 真)))
            赋值 (脚本, 相加 (“select distinct(单据号) from 总库  where 入库日期 >= ”, 开始, “ and 入库日期 <= ”, 结束, “ and 已付金额<=0”))
        .如果真结束
        .如果真 (并且 (等于 (.选中, 真), 等于 (.选中, 真)))
            赋值 (脚本, 相加 (“select distinct(单据号) from 总库  where 入库日期 >= ”, 开始, “ and 入库日期 <= ”, 结束))
        .如果真结束
        
        
        输出调试文本 (脚本)
        赋值 (记录集句柄一, _启动窗口.查询 (., 脚本))
        清空 ()
        _启动窗口.到首记录 (., 记录集句柄一)
        .计次循环首 (t, )
            赋值 (项目名暂存, _启动窗口.读 (., 记录集句柄一, 1))
            .如果 (不等于 (项目名暂存, 项目名暂存2))
                .加入项目 (项目名暂存, , , )
                
            .否则
                
            .如果结束
            赋值 (项目名暂存2, 项目名暂存)
            _启动窗口.到后一记录 (., 记录集句柄一)
        .计次循环尾 ()
        
    .如果结束
    
    
.如果结束


.子程序 添置表格数据, 空白型, , 
_启动窗口.到首记录 (., 记录集句柄)

赋值 (., 18)
.判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
    置等待鼠标 ()
     ' ’处理事件 ()
    .未知支持库函数_38 () ' <!!!>
    相减 (., 1).未知支持库函数_9 (0, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “商品编码”))) ' 编码
    相减 (., 1).未知支持库函数_9 (1, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “商品名称”))) ' 名称
    相减 (., 1).未知支持库函数_9 (2, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “入库日期”))) ' 入库日期
    相减 (., 1).未知支持库函数_9 (3, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “拼音码”))) ' 拼音码
    相减 (., 1).未知支持库函数_9 (4, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “规格”))) ' 规格]
    相减 (., 1).未知支持库函数_9 (5, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “数量”))) ' 数量
    相减 (., 1).未知支持库函数_9 (6, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “库存数量”)))
    相减 (., 1).未知支持库函数_9 (7, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “进货价”))) ' 进货价
    相减 (., 1).未知支持库函数_9 (8, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “应付金额”))) ' 应付
    相减 (., 1).未知支持库函数_9 (9, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “已付金额”))) ' 已付
    相减 (., 1).未知支持库函数_9 (10, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “零售价”))) ' 零售
    相减 (., 1).未知支持库函数_9 (11, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “批发价”))) ' 批发
    相减 (., 1).未知支持库函数_9 (12, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “库存上限”))) ' 上限
    相减 (., 1).未知支持库函数_9 (13, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “库存下限”))) ' 下限
    相减 (., 1).未知支持库函数_9 (14, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “一级分类”))) ' 一级
    相减 (., 1).未知支持库函数_9 (15, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “二级分类”))) ' 二级
    相减 (., 1).未知支持库函数_9 (16, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “供货商”))) ' 供货商
    相减 (., 1).未知支持库函数_9 (17, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “备注”))) ' 备注
    相减 (., 1).未知支持库函数_9 (18, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “产地”))) ' 备注
    
    _启动窗口.到后一记录 (., 记录集句柄)
.判断循环尾 ()
_启动窗口.关闭记录集 (., 记录集句柄)


.子程序 _按钮3_被单击, 空白型, , 
赋值 (., 1)

.子程序 _按钮4_被单击, 空白型, , 
赋值 (表格文件名, 相加 (取运行目录 (), “\wgid\库存单据”))
.如果 (等于 (表格文件名.未知支持库函数_55 (), 真))
    置文件属性 (表格文件名, 1)
    赋值 (表头标题, “库存单据”)
    载入 (打印, , 真)
.否则
    信息框 (“打印格式文件出错，操作失败！”, 相加 (0, #错误图标), )
.如果结束





.子程序 _编辑框1_内容被改变, 空白型, , 
_启动窗口.关闭记录集 (., 记录集句柄)
赋值 (脚本, 相加 (“select * from 总库 where 拼音码”, “ like '%”, .内容, “%'”))
输出调试文本 (脚本)
赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
_启动窗口.到首记录 (., 记录集句柄)
赋值 (., 1)
添置表格数据 ()


.子程序 _按钮5_被单击, 空白型, , 
_启动窗口.关闭记录集 (., 记录集句柄)
赋值 (脚本, “select * from 总库”)
输出调试文本 (脚本)
赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
_启动窗口.到首记录 (., 记录集句柄)
赋值 (., 1)
添置表格数据 ()


.子程序 _按钮6_被单击, 空白型, , 
.局部变量 t, 空白型, , , 

赋值 (., 1)
.计次循环首 (取项目数 (), t)
    赋值 (脚本, 相加 (“select * from 总库 where 单据号='”, 相减 (t, 1).取项目文本 (), “'”))
     ' 删除提示 (脚本)
    _启动窗口.关闭记录集 (., 记录集句柄)
    赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
    _启动窗口.到首记录 (., 记录集句柄)
    添置表格数据 ()
.计次循环尾 ()


.子程序 _分隔条1_被拖动, 空白型, , 
.参数 原位置, 整数型, , 
.参数 目的位置, 整数型, , 

.局部变量 新左边, 整数型, , , 

.如果真 (小于 (目的位置, 8))
    赋值 (目的位置, 8)
.如果真结束
.如果真 (大于 (目的位置, 相减 (., 20)))
    赋值 (目的位置, 相减 (., 20))
.如果真结束
赋值 (., 目的位置)
赋值 (.宽度, 相减 (., .左边))
赋值 (新左边, 相加 (., .))
新左边.移动 (相减 (., 12, 新左边), )


.窗口程序集 窗口程序集18, , , 

.程序集变量 库存基数, 小数型, , , 
.程序集变量 库存总数累计, 空白型, , , 
.子程序 _库存商品汇总_创建完毕, 空白型, , 
赋值 (., 经顶边)
赋值 (., 经左边)
赋值 (., 假)

首次读取并显示汇总记录 ()

.子程序 首次读取并显示汇总记录, 空白型, , 
.局部变量 t, 空白型, , , 
.局部变量 文本, 文本型, , , 
.局部变量 tt, 空白型, , , 
.局部变量 yy, 空白型, , , 

赋值 (.图标, {  })
赋值 (脚本, 相加 (“select * from 商品分类 where 一级 ”, “ = ”, “'”, “1”, “'”))
输出调试文本 (脚本)
赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
_启动窗口.到首记录 (., 记录集句柄)
赋值 (yy, 0)
.判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
    置等待鼠标 ()
     ' 处理事件 ()
    
    yy.置图片 (1)
    yy.置选中图片 (2)
    yy.置外形图片 (3)
    .加入项目 (_启动窗口.读 (., 记录集句柄, 1), , , )
    _启动窗口.到后一记录 (., 记录集句柄)
    赋值 (yy, 相加 (yy, 1))
.判断循环尾 ()
_启动窗口.关闭记录集 (., 记录集句柄)
赋值 (t, 0)
.判断循环首 (小于 (t, 取项目数 ()))
    置等待鼠标 ()
     ' 处理事件 ()
    
    t.置图片 (1)
    t.置选中图片 (2)
    yy.置外形图片 (3)
    
    赋值 (文本, t.取项目文本 ())
    输出调试文本 (文本)
    赋值 (脚本, 相加 (“select * from 商品分类 where 二级 ”, “ = ”, “'”, “1”, “' and ”, “商品类名 = '”, 文本, “'”))
    输出调试文本 (脚本)
    赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
    _启动窗口.到首记录 (., 记录集句柄)
    .判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
        置等待鼠标 ()
         ' 处理事件 ()
        
        t.加入项目 (_启动窗口.读 (., 记录集句柄, 2), , , )
        _启动窗口.到后一记录 (., 记录集句柄)
    .判断循环尾 ()
    赋值 (t, 相加 (t, 1))
.判断循环尾 ()
_启动窗口.关闭记录集 (., 记录集句柄)

.子程序 _树型框1_项目被选择, 空白型, , 
.参数 选择方式, 整数型, , 

.局部变量 暂1, 文本型, , , 
.局部变量 暂2, 文本型, , , 

写汇总表头信息 ()
赋值 (库存基数, 0)
赋值 (库存总数累计, 0)
.如果真 (等于 (.取父项目 (.最大化按钮), -1))
    _启动窗口.关闭记录集 (., 记录集句柄)
    赋值 (脚本, 相加 (“select * from 总库 where 一级分类=”, “'”, .取项目文本 (.最大化按钮), “'”, “ order by 单据号”))
    输出调试文本 (脚本)
    赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
    _启动窗口.到首记录 (., 记录集句柄)
    添表 ()
    返回 ()
.如果真结束
.如果真 (等于 (.取缩进层次 (.最大化按钮), 2))
    .如果 (等于 (.是否有子项目 (.最大化按钮), 假))
        _启动窗口.关闭记录集 (., 记录集句柄一)
        赋值 (脚本, 相加 (“select distinct(商品名称) from 总库  where 二级分类='”, .取项目文本 (.最大化按钮), “'”))
        输出调试文本 (脚本)
        赋值 (记录集句柄一, _启动窗口.查询 (., 脚本))
        _启动窗口.到首记录 (., 记录集句柄一)
        .判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄一), 假))
            置等待鼠标 ()
             ' 处理事件 ()
            
            赋值 (暂1, 到文本 (_启动窗口.读 (., 记录集句柄一, “商品名称”)))
            .如果 (不等于 (暂1, 暂2))
                .加入项目 (.最大化按钮, 到文本 (_启动窗口.读 (., 记录集句柄一, “商品名称”)), , , )
                赋值 (暂2, 暂1)
            .否则
                
            .如果结束
            
            _启动窗口.到后一记录 (., 记录集句柄一)
        .判断循环尾 ()
        _启动窗口.关闭记录集 (., 记录集句柄一)
    .否则
        _启动窗口.关闭记录集 (., 记录集句柄)
        赋值 (脚本, 相加 (“select * from 总库 where 二级分类=”, “'”, .取项目文本 (.最大化按钮), “'”, “ order by 单据号”))
        输出调试文本 (脚本)
        赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
        _启动窗口.到首记录 (., 记录集句柄)
        添表 ()
        获取焦点 ()
        .扩展 (.最大化按钮)
    .如果结束
    
.如果真结束
.如果真 (等于 (.取缩进层次 (.最大化按钮), 3))
    _启动窗口.关闭记录集 (., 记录集句柄)
    赋值 (脚本, 相加 (“select distinct(商品名称),* from 总库 where 商品名称=”, “'”, .取项目文本 (.最大化按钮), “' and 二级分类='”, .取父项目 (.最大化按钮).取项目文本 (), “'”))
    输出调试文本 (脚本)
    赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
    _启动窗口.到首记录 (., 记录集句柄)
    添表 ()
.如果真结束



.子程序 写汇总表头信息1, 空白型, , 
赋值 (., 70)
赋值 (., 1)
赋值 (., 0)

赋值 (., 17)
相减 (., 1).未知支持库函数_9 (0, 1, “商品编码”)
相减 (., 1).未知支持库函数_9 (1, 1, “商品名称”)
相减 (., 1).未知支持库函数_9 (2, 1, “入库日期”)
相减 (., 1).未知支持库函数_9 (3, 1, “拼音码”)
相减 (., 1).未知支持库函数_9 (4, 1, “规格”)
相减 (., 1).未知支持库函数_9 (5, 1, “数量”)
相减 (., 1).未知支持库函数_9 (6, 1, “进货价”)
相减 (., 1).未知支持库函数_9 (7, 1, “应付金额”)
相减 (., 1).未知支持库函数_9 (8, 1, “已付金额”)
相减 (., 1).未知支持库函数_9 (9, 1, “零售价”)
相减 (., 1).未知支持库函数_9 (10, 1, “批发价”)
相减 (., 1).未知支持库函数_9 (11, 1, “库存上限”)
相减 (., 1).未知支持库函数_9 (12, 1, “库存下限”)
相减 (., 1).未知支持库函数_9 (13, 1, “一级分类”)
相减 (., 1).未知支持库函数_9 (14, 1, “二级分类”)
相减 (., 1).未知支持库函数_9 (15, 1, “供货商”)
相减 (., 1).未知支持库函数_9 (16, 1, “备注”)

.子程序 写汇总表头信息, 空白型, , 
赋值 (., 1)
赋值 (., 70)
赋值 (., 0)
赋值 (., 0)
赋值 (., 18)
相减 (., 1).未知支持库函数_9 (0, 1, “商品编码”)
相减 (., 1).未知支持库函数_9 (1, 1, “商品名称”)
相减 (., 1).未知支持库函数_9 (2, 1, “入库日期”)
相减 (., 1).未知支持库函数_9 (3, 1, “拼音码”)
相减 (., 1).未知支持库函数_9 (4, 1, “规格”)
相减 (., 1).未知支持库函数_9 (5, 1, “库存数量”)
相减 (., 1).未知支持库函数_9 (6, 1, “进货价”)
相减 (., 1).未知支持库函数_9 (7, 1, “应付金额”)
相减 (., 1).未知支持库函数_9 (8, 1, “已付金额”)
相减 (., 1).未知支持库函数_9 (9, 1, “零售价”)
相减 (., 1).未知支持库函数_9 (10, 1, “批发价”)
相减 (., 1).未知支持库函数_9 (11, 1, “库存上限”)
相减 (., 1).未知支持库函数_9 (12, 1, “库存下限”)
相减 (., 1).未知支持库函数_9 (13, 1, “一级分类”)
相减 (., 1).未知支持库函数_9 (14, 1, “二级分类”)
相减 (., 1).未知支持库函数_9 (15, 1, “供货商”)
相减 (., 1).未知支持库函数_9 (16, 1, “备注”)
相减 (., 1).未知支持库函数_9 (17, 1, “产地”)
赋值 (., 1)

.子程序 _树型框3_项目被选择, 空白型, , 
.参数 选择方式, 整数型, , 



.子程序 _按钮3_被单击, 空白型, , 
赋值 (., 1)

.子程序 _按钮2_被单击, 空白型, , 
_启动窗口.关闭记录集 (., 记录集句柄)
赋值 (脚本, “select * from 总库 order by 单据号”)
输出调试文本 (脚本)
赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
_启动窗口.到首记录 (., 记录集句柄)
赋值 (., 1)
赋值 (., 17)
.判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
    置等待鼠标 ()
     ' 处理事件 ()
    .未知支持库函数_38 () ' <!!!>
    相减 (., 1).未知支持库函数_9 (0, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 6))) ' 编码
    相减 (., 1).未知支持库函数_9 (1, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 4))) ' 名称
    相减 (., 1).未知支持库函数_9 (2, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 2))) ' 入库日期
    相减 (., 1).未知支持库函数_9 (3, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 5))) ' 拼音码
    相减 (., 1).未知支持库函数_9 (4, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 17))) ' 规格]
    赋值 (库存基数, _启动窗口.读 (., 记录集句柄, “库存数量”))
    相减 (., 1).未知支持库函数_9 (5, 1, 到文本 (库存基数)) ' 数量
    
    
    相减 (., 1).未知支持库函数_9 (6, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 8))) ' 进货价
    相减 (., 1).未知支持库函数_9 (7, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 3))) ' 应付
    相减 (., 1).未知支持库函数_9 (8, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 19))) ' 已付
    相减 (., 1).未知支持库函数_9 (9, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 7))) ' 零售
    相减 (., 1).未知支持库函数_9 (10, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 9))) ' 批发
    相减 (., 1).未知支持库函数_9 (11, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 15))) ' 上限
    相减 (., 1).未知支持库函数_9 (12, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 16))) ' 下限
    相减 (., 1).未知支持库函数_9 (13, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 12))) ' 一级
    相减 (., 1).未知支持库函数_9 (14, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 13))) ' 二级
    相减 (., 1).未知支持库函数_9 (15, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 14))) ' 供货商
    相减 (., 1).未知支持库函数_9 (16, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 18))) ' 备注
    _启动窗口.到后一记录 (., 记录集句柄)
.判断循环尾 ()
_启动窗口.关闭记录集 (., 记录集句柄)


.子程序 _分组框2_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

_启动窗口.关闭记录集 (., )

.子程序 _按钮4_被单击, 空白型, , 
销毁 ()

.子程序 二选中, 空白型, , 
.局部变量 暂1, 文本型, , , 
.局部变量 暂2, 文本型, , , 

写汇总表头信息一 ()
赋值 (库存基数, 0)
赋值 (库存总数累计, 0)
.如果真 (等于 (.取父项目 (.最大化按钮), -1))
    _启动窗口.关闭记录集 (., 记录集句柄)
    赋值 (脚本, 相加 (“select * from 总库 where 一级分类=”, “'”, .取项目文本 (.最大化按钮), “'”, “ order by 单据号”))
    输出调试文本 (脚本)
    赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
    _启动窗口.到首记录 (., 记录集句柄)
    添汇总表 ()
    返回 ()
.如果真结束
.如果真 (等于 (.取缩进层次 (.最大化按钮), 2))
    .如果 (等于 (.是否有子项目 (.最大化按钮), 假))
        _启动窗口.关闭记录集 (., 记录集句柄一)
        赋值 (脚本, 相加 (“select * from 总库  where 二级分类='”, .取项目文本 (.最大化按钮), “'”, “ order by 单据号”))
        输出调试文本 (脚本)
        赋值 (记录集句柄一, _启动窗口.查询 (., 脚本))
        _启动窗口.到首记录 (., 记录集句柄一)
        .判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄一), 假))
            置等待鼠标 ()
             ' 处理事件 ()
            
            赋值 (暂1, 到文本 (_启动窗口.读 (., 记录集句柄一, 4)))
            
            .如果 (不等于 (暂1, 暂2))
                .加入项目 (.最大化按钮, 到文本 (_启动窗口.读 (., 记录集句柄一, 4)), , , ) ' 编码
            .否则
                
            .如果结束
            赋值 (暂2, 暂1)
            _启动窗口.到后一记录 (., 记录集句柄一)
        .判断循环尾 ()
        _启动窗口.关闭记录集 (., 记录集句柄一)
    .否则
        
    .如果结束
    _启动窗口.关闭记录集 (., 记录集句柄)
    赋值 (脚本, 相加 (“select * from 总库 where 二级分类=”, “'”, .取项目文本 (.最大化按钮), “'”, “ order by 单据号”))
    输出调试文本 (脚本)
    赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
    _启动窗口.到首记录 (., 记录集句柄)
    添表 ()
    .扩展 (.最大化按钮)
.如果真结束
.如果真 (等于 (.取缩进层次 (.最大化按钮), 3))
    _启动窗口.关闭记录集 (., 记录集句柄)
    赋值 (脚本, 相加 (“select * from 总库 where 商品名称=”, “'”, .取项目文本 (.最大化按钮), “' and 二级分类='”, .取父项目 (.最大化按钮).取项目文本 (), “'”, “ order by 单据号”))
    输出调试文本 (脚本)
    赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
    _启动窗口.到首记录 (., 记录集句柄)
    添表 ()
.如果真结束




.子程序 写汇总表头信息一, 空白型, , 
赋值 (., 1)

赋值 (., 0)
赋值 (., 70)
赋值 (., 0)
赋值 (., 8)
相减 (., 1).未知支持库函数_9 (0, 1, “商品编码”)
相减 (., 1).未知支持库函数_9 (1, 1, “商品名称”)
相减 (., 1).未知支持库函数_9 (2, 1, “入库日期”)
相减 (., 1).未知支持库函数_9 (3, 1, “规格”)
相减 (., 1).未知支持库函数_9 (4, 1, “总数量”)
相减 (., 1).未知支持库函数_9 (5, 1, “进货价”)
相减 (., 1).未知支持库函数_9 (6, 1, “供货商”)
相减 (., 1).未知支持库函数_9 (7, 1, “产地”)
赋值 (., 1)



.子程序 添表, 空白型, , 
赋值 (库存基数, 0)
赋值 (库存总数累计, 0)
赋值 (., 1)
赋值 (., 18)
.判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
    置等待鼠标 ()
     ' 处理事件 ()
    
    .未知支持库函数_38 () ' <!!!>
    相减 (., 1).未知支持库函数_9 (0, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “商品编码”)))
    相减 (., 1).未知支持库函数_9 (1, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “商品名称”)))
    相减 (., 1).未知支持库函数_9 (2, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “入库日期”)))
    相减 (., 1).未知支持库函数_9 (3, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “拼音码”)))
    相减 (., 1).未知支持库函数_9 (4, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “规格”)))
    赋值 (库存基数, _启动窗口.读 (., 记录集句柄, “库存数量”))
    相减 (., 1).未知支持库函数_9 (5, 1, 到文本 (库存基数)) ' 数量
    赋值 (库存总数累计, 相加 (库存总数累计, 库存基数))
    相减 (., 1).未知支持库函数_9 (6, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “进货价”)))
    相减 (., 1).未知支持库函数_9 (7, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “应付金额”)))
    相减 (., 1).未知支持库函数_9 (8, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “已付金额”)))
    相减 (., 1).未知支持库函数_9 (9, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “零售价”)))
    相减 (., 1).未知支持库函数_9 (10, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “批发价”)))
    相减 (., 1).未知支持库函数_9 (11, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “库存上限”)))
    相减 (., 1).未知支持库函数_9 (12, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “库存下限”)))
    相减 (., 1).未知支持库函数_9 (13, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “一级分类”)))
    相减 (., 1).未知支持库函数_9 (14, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “二级分类”)))
    相减 (., 1).未知支持库函数_9 (15, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “供货商”)))
    相减 (., 1).未知支持库函数_9 (16, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “备注”)))
    相减 (., 1).未知支持库函数_9 (17, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “产地”)))
    
    _启动窗口.到后一记录 (., 记录集句柄)
.判断循环尾 ()
_启动窗口.关闭记录集 (., 记录集句柄)
.未知支持库函数_38 () ' <!!!>
相减 (., 1).未知支持库函数_9 (4, 1, “总计：”) ' 数量
相减 (., 1).未知支持库函数_9 (5, 1, 到文本 (库存总数累计)) ' 数量


.子程序 添汇总表, 空白型, , 
.局部变量 编号, 空白型, , , 
.局部变量 编号一, 空白型, , , 
.局部变量 总数存, 空白型, , , 
.局部变量 总数存一, 空白型, , , 
.局部变量 匿名局部变量_3560, 空白型, , , 

赋值 (库存基数, 0)
赋值 (库存总数累计, 0)
赋值 (编号一, 8.888889898889e+027)
.判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
    赋值 (编号, _启动窗口.读 (., 记录集句柄, 6))
    赋值 (总数存一, _启动窗口.读 (., 记录集句柄, 10))
    .如果 (等于 (编号, 编号一))
        赋值 (总数存, 相加 (总数存, _启动窗口.读 (., 记录集句柄, 10)))
    .否则
        .未知支持库函数_38 () ' <!!!>
        相减 (., 1).未知支持库函数_9 (0, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 6))) ' 编码
        相减 (., 1).未知支持库函数_9 (1, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 4))) ' 名称
        相减 (., 1).未知支持库函数_9 (2, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 2))) ' 入库日期
        相减 (., 1).未知支持库函数_9 (3, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 17))) ' 规格
        
        相减 (., 1).未知支持库函数_9 (5, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 8))) ' 数量
        相减 (., 1).未知支持库函数_9 (6, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 14))) ' 进货价
        相减 (., 1).未知支持库函数_9 (7, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 20))) ' 产地
        相减 (., 1).未知支持库函数_9 (4, 1, 到文本 (总数存)) ' 总数
    .如果结束
    _启动窗口.到后一记录 (., 记录集句柄)
.判断循环尾 ()
_启动窗口.关闭记录集 (., 记录集句柄)


.子程序 _按钮1_被单击, 空白型, , 
赋值 (表格文件名, 相加 (取运行目录 (), “\wgid\库存商品汇总”))
.如果 (等于 (表格文件名.未知支持库函数_55 (), 真))
    置文件属性 (表格文件名, 1)
    赋值 (表头标题, “库存商品汇总表”)
    载入 (打印, , 真)
.否则
    信息框 (“打印格式文件出错，操作失败！”, 相加 (0, #错误图标), )
.如果结束


.子程序 _分隔条2_被拖动, 空白型, , 
.参数 原位置, 整数型, , 
.参数 目的位置, 整数型, , 

.局部变量 新左边, 整数型, , , 

.如果真 (小于 (目的位置, 8))
    赋值 (目的位置, 8)
.如果真结束
.如果真 (大于 (目的位置, 相减 (., 20)))
    赋值 (目的位置, 相减 (., 20))
.如果真结束
赋值 (., 目的位置)
赋值 (.宽度, 相减 (., .左边))
赋值 (新左边, 相加 (., .))
新左边.移动 (相减 (., 12, 新左边), )



.窗口程序集 窗口程序集19, , , 

.子程序 _日期框2_选择日期被改变, 空白型, , 


.窗口程序集 窗口程序集20, , , 

.程序集变量 库存id, 文本型, , , 
.程序集变量 是否在编辑, 逻辑型, , , 
.子程序 _进货登记_创建完毕, 空白型, , 
 ' 处理事件 ()
赋值 (., 经顶边)
赋值 (., 经左边)
赋值 (., 假)
写表头信息 ()

.子程序 _按钮2_被单击, 空白型, , 
赋值 (应付合计, 0)
.如果 (并且 (不等于 (.最大化按钮, -1), 大于 (., 1)))
    赋值 (.禁止, 真)
    赋值 (.禁止, 真)
    赋值 (.禁止, 真)
    赋值 (.禁止, 真)
    赋值 (.类型, 0)
    赋值 (.类型, 1)
    赋值 (.禁止, 真)
    赋值 (是否在编辑, 真)
    获取焦点 ()
     ' 透明标签5.标题 ＝ “正在登记库单：” ＋ 树型框1.取项目文本 (树型框1.现行选中项)
    
.否则
    信息框 (“请选择入库单号”, 64, “贝尔软件”)
.如果结束


.子程序 写表头信息, 空白型, , 
赋值 (., 70)
赋值 (., 1)
赋值 (., 0)
赋值 (., 1)
赋值 (., 20)
相减 (., 1).未知支持库函数_9 (0, 1, “商品编码”)
相减 (., 1).未知支持库函数_9 (1, 1, “商品名称”)
相减 (., 1).未知支持库函数_9 (2, 1, “入库日期”)
相减 (., 1).未知支持库函数_9 (3, 1, “拼音码”)
相减 (., 1).未知支持库函数_9 (4, 1, “规格”)
相减 (., 1).未知支持库函数_9 (5, 1, “库存数量”)
相减 (., 1).未知支持库函数_9 (6, 1, “进货价”)
相减 (., 1).未知支持库函数_9 (7, 1, “应付金额”)
相减 (., 1).未知支持库函数_9 (8, 1, “已付金额”)
相减 (., 1).未知支持库函数_9 (9, 1, “零售价”)
相减 (., 1).未知支持库函数_9 (10, 1, “批发价”)
相减 (., 1).未知支持库函数_9 (11, 1, “库存上限”)
相减 (., 1).未知支持库函数_9 (12, 1, “库存下限”)
相减 (., 1).未知支持库函数_9 (13, 1, “一级分类”)
相减 (., 1).未知支持库函数_9 (14, 1, “二级分类”)
相减 (., 1).未知支持库函数_9 (15, 1, “供货商”)
相减 (., 1).未知支持库函数_9 (16, 1, “备注”)
相减 (., 1).未知支持库函数_9 (17, 1, “产地”)
相减 (., 1).未知支持库函数_9 (18, 1, “库存id”)
赋值 (., 88)

.子程序 _树型框1_项目被选择, 空白型, , 
.参数 选择方式, 整数型, , 

_启动窗口.关闭记录集 (., 记录集句柄)
赋值 (脚本, 相加 (“select * from 总库 where 单据号=”, “'”, .取项目文本 (.最大化按钮), “' and 进货价=0 and 批发价=0 and 零售价=0”))
输出调试文本 (脚本)
赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
赋值 (.内容, .取项目文本 (.最大化按钮))
赋值 (应付合计, 0)
赋值 (已付合计, 0)
赋值 (未付合计, 0)
赋值 (.内容, “0”)
赋值 (.内容, “0”)
赋值 (.内容, “0”)
添置表格数据 ()

.子程序 _搜索_被单击, 空白型, , 
.局部变量 开始, 文本型, , , 
.局部变量 结束, 文本型, , , 
.局部变量 t, 空白型, , , 
.局部变量 项目名暂存, 文本型, , , 
.局部变量 项目名暂存2, 文本型, , , 

清空 ()
赋值 (.内容, “”)
赋值 (., 1)
.如果 (小于 (.今天, .今天))
    信息框 (“请注意开始日期和结束日期！”, 64, “贝尔软件”)
    返回 ()
.否则
    赋值 (开始, 相加 (“#”, 未知支持库函数_12 (.今天, “%y-%m-%d”), “#”))
    赋值 (结束, 相加 (“#”, 未知支持库函数_12 (.今天, “%y-%m-%d”), “#”))
    赋值 (脚本, 相加 (“select count(*) from 总库  where 入库日期 >= ”, 开始, “ and 入库日期 <= ”, 结束, “ and 进货价=0 and 批发价=0”))
    输出调试文本 (脚本)
    _启动窗口.关闭记录集 (., 记录集句柄一)
    赋值 (记录集句柄一, _启动窗口.查询 (., 脚本))
    赋值 (t, _启动窗口.读 (., 记录集句柄一, 1))
    _启动窗口.关闭记录集 (., 记录集句柄一)
    .如果 (等于 (t, 0))
        信息框 (“该日期内没有相关数据！”, 64, “贝尔软件”)
    .否则
        _启动窗口.关闭记录集 (., 记录集句柄一)
        赋值 (脚本, 相加 (“select distinct(单据号) from 总库  where 入库日期 >= ”, 开始, “ and 入库日期 <= ”, 结束, “ and 进货价=0 and 批发价=0”))
        输出调试文本 (脚本)
        赋值 (记录集句柄一, _启动窗口.查询 (., 脚本))
        清空 ()
        _启动窗口.到首记录 (., 记录集句柄一)
        .计次循环首 (t, )
            赋值 (项目名暂存, _启动窗口.读 (., 记录集句柄一, 1))
            .如果 (不等于 (项目名暂存, 项目名暂存2))
                .加入项目 (项目名暂存, , , )
            .否则
                
            .如果结束
            赋值 (项目名暂存2, 项目名暂存)
            _启动窗口.到后一记录 (., 记录集句柄一)
        .计次循环尾 ()
        
    .如果结束
    
    
.如果结束


.子程序 添置表格数据, 空白型, , 
_启动窗口.到首记录 (., 记录集句柄)
赋值 (表格行数累计, 0)
赋值 (., 1)
赋值 (., 19)
.判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
    置等待鼠标 ()
     ' ‘处理事件 ()
    
    .未知支持库函数_38 () ' <!!!>
    赋值 (表格行数累计, 相加 (表格行数累计, 1))
    相减 (., 1).未知支持库函数_9 (0, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 6))) ' 编码
    相减 (., 1).未知支持库函数_9 (1, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 4))) ' 名称
    相减 (., 1).未知支持库函数_9 (2, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 2))) ' 入库日期
    相减 (., 1).未知支持库函数_9 (3, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 5))) ' 拼音码
    相减 (., 1).未知支持库函数_9 (4, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 17))) ' 规格]
    相减 (., 1).未知支持库函数_9 (5, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “库存数量”))) ' 数量
    相减 (., 1).未知支持库函数_9 (6, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 8))) ' 进货价
    相减 (., 1).未知支持库函数_9 (7, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 3))) ' 应付
    相减 (., 1).未知支持库函数_9 (8, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 19))) ' 已付
    相减 (., 1).未知支持库函数_9 (9, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 7))) ' 零售
    相减 (., 1).未知支持库函数_9 (10, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 9))) ' 批发
    相减 (., 1).未知支持库函数_9 (11, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 15))) ' 上限
    相减 (., 1).未知支持库函数_9 (12, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 16))) ' 下限
    相减 (., 1).未知支持库函数_9 (13, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 12))) ' 一级
    相减 (., 1).未知支持库函数_9 (14, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 13))) ' 二级
    相减 (., 1).未知支持库函数_9 (15, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 14))) ' 供货商
    相减 (., 1).未知支持库函数_9 (16, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 18))) ' 备注
    相减 (., 1).未知支持库函数_9 (17, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 20))) ' 备注
    相减 (., 1).未知支持库函数_9 (18, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 21))) ' 库存id
    
    _启动窗口.到后一记录 (., 记录集句柄)
.判断循环尾 ()
_启动窗口.关闭记录集 (., 记录集句柄)


.子程序 _清空_被单击, 空白型, , 
赋值 (., 1)

.子程序 _退出_被单击, 空白型, , 
_启动窗口.关闭记录集 (., 记录集句柄)
_启动窗口.关闭记录集 (., 记录集句柄一)

销毁 ()

.子程序 _表格1_被双击, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (等于 (未知支持库函数_3 (), -1))
    返回 ()
.如果真结束
.如果 (并且 (等于 (是否在编辑, 真), 等于 (不等于 (.最大化按钮, -1), 真)))
    赋值 (库存id, 未知支持库函数_3 ().未知支持库函数_10 (18))
    赋值 (库存数量, 未知支持库函数_3 ().未知支持库函数_10 (5))
    赋值 (文本, 未知支持库函数_3 ().未知支持库函数_10 (1))
    载入 (进货登记之登记, , 真)
    
.否则
    信息框 (“如果想登记本单，请单击编辑入库单按钮！”, 64, “贝尔软件”)
.如果结束




.子程序 _按钮5_被单击, 空白型, , 

赋值 (.禁止, 假)
赋值 (.禁止, 假)
赋值 (.禁止, 假)
赋值 (.禁止, 假)


赋值 (是否在编辑, 假)
赋值 (.禁止, 假)
赋值 (应付合计, 0)
赋值 (已付合计, 0)
赋值 (未付合计, 0)
赋值 (.内容, “0”)
赋值 (.内容, “0”)
赋值 (.内容, “0”)


.子程序 _按钮6_被单击, 空白型, , 
.局部变量 t, 空白型, , , 
.局部变量 进货价, 文本型, , , 
.局部变量 批发价, 文本型, , , 
.局部变量 零售价, 文本型, , , 
.局部变量 id, 文本型, , , 
.局部变量 应付金额, 文本型, , , 
.局部变量 已付金额, 文本型, , , 
.局部变量 欠款, 文本型, , , 
.局部变量 bj, 逻辑型, , , 

.如果 (等于 (是否在编辑, 真))
    .计次循环首 (表格行数累计, t) ' 判断是否添写完整
        .如果 (或者 (等于 (到数值 (t.未知支持库函数_10 (6)), 0), 等于 (到数值 (t.未知支持库函数_10 (10)), 0)))
            信息框 (“请完整添写信息！”, 64, “贝尔软件”)
            赋值 (bj, 假)
            跳出循环 ()
        .否则
            赋值 (bj, 真)
        .如果结束
        
    .计次循环尾 ()
    赋值 (t, 0)
    .如果真 (等于 (bj, 真))
        .计次循环首 (表格行数累计, t)
            赋值 (进货价, t.未知支持库函数_10 (6))
            赋值 (批发价, t.未知支持库函数_10 (10))
            赋值 (零售价, t.未知支持库函数_10 (9))
            赋值 (应付金额, t.未知支持库函数_10 (7))
            赋值 (已付金额, t.未知支持库函数_10 (8))
            赋值 (库存id, t.未知支持库函数_10 (18))
            赋值 (脚本, 相加 (“update 总库 set 进货价=”, 进货价, “,批发价 =”, 批发价, “,零售价=”, 零售价, “,应付金额=”, 应付金额, “,已付金额=”, 已付金额, “ where 库存id=”, 库存id))
            输出调试文本 (脚本)
            .如果 (等于 (_启动窗口.执行 (., 脚本, ), 真))
                
            .否则
                信息框 (“修改总库价格信息失败,稍后再试!”, 64, “贝尔软件”)
                赋值 (t, 0)
                跳出循环 ()
            .如果结束
            
            .如果 (小于 (到数值 (t.未知支持库函数_10 (8)), 0))
                赋值 (脚本, 相加 (“insert into 未付款(库存id,入库单号,供应商,欠款额,商品编码)  values ('”, 库存id, “','”, 进货登记..内容, “','”, t.未知支持库函数_10 (15), “',”, 已付金额, “,'”, t.未知支持库函数_10 (0), “')”))
                输出调试文本 (脚本)
                .如果 (等于 (_启动窗口.执行 (., 脚本, ), 真))
                    
                .否则
                    信息框 (“写入未付款信息失败,稍后再试!”, 64, “贝尔软件”)
                    赋值 (t, 0)
                    跳出循环 ()
                .如果结束
                
            .否则
                .如果 (大于 (到数值 (t.未知支持库函数_10 (8)), 0))
                    赋值 (脚本, 相加 (“insert into 已付款(库存id,入库单号,供应商,已付额,付款日期,操作员)  values ('”, 库存id, “','”, 进货登记..内容, “','”, t.未知支持库函数_10 (15), “',”, 已付金额, “,'”, 未知支持库函数_12 (取现行时间 (), “%y-%m-%d”), “','”, 操作员, “')”))
                    输出调试文本 (脚本)
                    .如果 (等于 (_启动窗口.执行 (., 脚本, ), 真))
                        赋值 (脚本, 相加 (“insert into 收款员收款明细(操作员,备注,收入原因,金额,收入日期)  values ('”, 操作员, “','”, 进货登记..内容, “','进”, t.未知支持库函数_10 (15), “货款',-”, 已付金额, “,'”, 未知支持库函数_12 (取现行时间 (), “%y-%m-%d”), “')”))
                        输出调试文本 (脚本)
                        .如果 (等于 (_启动窗口.执行 (., 脚本, ), 真))
                            
                        .否则
                            信息框 (“收款员收款信息失败,稍后再试!”, 64, “贝尔软件”)
                            赋值 (t, 0)
                            跳出循环 ()
                        .如果结束
                        
                    .否则
                        信息框 (“已付款信息失败,稍后再试!”, 64, “贝尔软件”)
                        赋值 (t, 0)
                        跳出循环 ()
                    .如果结束
                    
                .否则
                    
                .如果结束
                
            .如果结束
            
        .计次循环尾 ()
        .如果 (不等于 (t, 0))
            信息框 (“登记成功！”, 64, “贝尔软件”)
            
            
            赋值 (.禁止, 假)
            赋值 (.禁止, 假)
            赋值 (.禁止, 假)
            赋值 (.禁止, 假)
            赋值 (.禁止, 假)
            赋值 (是否在编辑, 假)
            .删除项目 (.最大化按钮)
            赋值 (., 1)
            赋值 (应付合计, 0)
            赋值 (已付合计, 0)
            赋值 (未付合计, 0)
            赋值 (.内容, “0”)
            赋值 (.内容, “0”)
            赋值 (.内容, “0”)
            
        .否则
            
        .如果结束
        
    .如果真结束
    
.否则
    信息框 (“请选择入库单后按审核单据,进行商品定价操作！”, 64, “贝尔软件”)
.如果结束


.子程序 _全部_被单击, 空白型, , 
.局部变量 开始, 文本型, , , 
.局部变量 结束, 文本型, , , 
.局部变量 匿名局部变量_3905, 空白型, , , 
.局部变量 项目名暂存, 文本型, , , 
.局部变量 项目名暂存2, 文本型, , , 
.局部变量 t, 空白型, , , 

清空 ()
赋值 (., 1)
赋值 (.内容, “”)
赋值 (脚本, “select count(*) from 总库  where 进货价=0 and 批发价=0”)
输出调试文本 (脚本)
_启动窗口.关闭记录集 (., 记录集句柄一)
赋值 (记录集句柄一, _启动窗口.查询 (., 脚本))
赋值 (t, _启动窗口.读 (., 记录集句柄一, 1))

_启动窗口.关闭记录集 (., 记录集句柄一)
.如果 (等于 (t, 0))
    信息框 (“没有未登记数据！”, 64, “贝尔软件”)
.否则
    _启动窗口.关闭记录集 (., 记录集句柄一)
    赋值 (脚本, “select distinct(单据号) from 总库  where 进货价=0 and 批发价=0”)
    输出调试文本 (脚本)
    赋值 (记录集句柄一, _启动窗口.查询 (., 脚本))
    清空 ()
    _启动窗口.到首记录 (., 记录集句柄一)
    .计次循环首 (t, )
        赋值 (项目名暂存, _启动窗口.读 (., 记录集句柄一, 1))
        .如果 (不等于 (项目名暂存, 项目名暂存2))
            .加入项目 (项目名暂存, , , )
        .否则
            
        .如果结束
        赋值 (项目名暂存2, 项目名暂存)
        _启动窗口.到后一记录 (., 记录集句柄一)
    .计次循环尾 ()
.如果结束


.子程序 _分隔条1_被拖动, 空白型, , 
.参数 原位置, 整数型, , 
.参数 目的位置, 整数型, , 

.局部变量 新左边, 整数型, , , 

.如果真 (小于 (目的位置, 8))
    赋值 (目的位置, 8)
.如果真结束
.如果真 (大于 (目的位置, 相减 (库存调价., 20)))
    赋值 (目的位置, 相减 (库存调价., 20))
.如果真结束
赋值 (., 目的位置)
赋值 (.宽度, 相减 (., .左边))
赋值 (新左边, 相加 (., .))
新左边.移动 (相减 (., 12, 新左边), )


.子程序 _进货登记_首次激活, 空白型, , 
写表头信息 ()

.子程序 _树型框1_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

_启动窗口.关闭记录集 (., 记录集句柄)
赋值 (脚本, 相加 (“select * from 总库 where 单据号=”, “'”, .取项目文本 (.最大化按钮), “' and 进货价=0 and 批发价=0 and 零售价=0”))
输出调试文本 (脚本)
赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
赋值 (.内容, .取项目文本 (.最大化按钮))
赋值 (应付合计, 0)
赋值 (已付合计, 0)
赋值 (未付合计, 0)
赋值 (.内容, “0”)
赋值 (.内容, “0”)
赋值 (.内容, “0”)
添置表格数据 ()


.子程序 _表格1_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (等于 (键代码, #空格键))
    .如果 (并且 (等于 (是否在编辑, 真), 等于 (不等于 (.最大化按钮, -1), 真)))
        赋值 (库存id, 未知支持库函数_3 ().未知支持库函数_10 (18))
        赋值 (库存数量, 未知支持库函数_3 ().未知支持库函数_10 (5))
        赋值 (文本, 未知支持库函数_3 ().未知支持库函数_10 (1))
        载入 (进货登记之登记, , 真)
        
    .否则
        信息框 (“如果想登记本单，请单击编辑入库单按钮！”, 64, “贝尔软件”)
    .如果结束
    
.如果真结束


.子程序 _表格1_光标位置改变, 空白型, , 


.窗口程序集 窗口程序集21, , , 

.子程序 _按钮1_被单击, 空白型, , 
.如果 (或者 (等于 (.内容, “”), 等于 (.内容, “”), 等于 (.内容, “”), 等于 (.内容, “”)))
    信息框 (“请完整添写信息!”, 0, )
.否则
    进货登记.未知支持库函数_9 (., 进货登记.未知支持库函数_3 (.), 6, 1, .内容)
    进货登记.未知支持库函数_9 (., 进货登记.未知支持库函数_3 (.), 9, 1, .内容)
    进货登记.未知支持库函数_9 (., 进货登记.未知支持库函数_3 (.), 10, 1, .内容)
    进货登记.未知支持库函数_9 (., 进货登记.未知支持库函数_3 (.), 7, 1, 到文本 (相乘 (到数值 (.内容), 到数值 (库存数量))))
    .如果 (等于 (.内容, “现金付讫”))
        进货登记.未知支持库函数_9 (., 进货登记.未知支持库函数_3 (.), 8, 1, 到文本 (相乘 (到数值 (.内容), 到数值 (库存数量))))
        赋值 (应付合计, 相加 (应付合计, 相乘 (到数值 (.内容), 到数值 (库存数量))))
        赋值 (已付合计, 相加 (已付合计, 相乘 (到数值 (.内容), 到数值 (库存数量))))
    .否则
        .如果 (等于 (.内容, “欠款未付”))
            进货登记.未知支持库函数_9 (., 进货登记.未知支持库函数_3 (.), 8, 1, 相加 (“-”, 到文本 (相乘 (到数值 (.内容), 到数值 (库存数量)))))
            赋值 (应付合计, 相加 (应付合计, 相乘 (到数值 (.内容), 到数值 (库存数量))))
            赋值 (未付合计, 相加 (未付合计, 相乘 (到数值 (.内容), 到数值 (库存数量))))
        .否则
            
        .如果结束
        
        
        
    .如果结束
    赋值 (进货登记..内容, 到文本 (应付合计))
    赋值 (进货登记..内容, 到文本 (已付合计))
    赋值 (进货登记..内容, 到文本 (未付合计))
    
    销毁 ()
    
.如果结束




.子程序 _进货登记之登记_创建完毕, 空白型, , 
赋值 (.内容, 相加 (“‘ ”, 文本, “’ 进行登记”))
赋值 (.现行选中项, 0)

.子程序 _按钮2_被单击, 空白型, , 
销毁 ()


.窗口程序集 窗口程序集22, , , 

.子程序 _进货退货选择单据_创建完毕, 空白型, , 
写表头信息 ()

赋值 (., 经顶边)
赋值 (., 经左边)
赋值 (., 假)


.子程序 _按钮2_被单击, 空白型, , 
.局部变量 t, 空白型, , , 

赋值 (.内容, “”)
赋值 (., 1)
清空 ()
_启动窗口.关闭记录集 (., 记录集句柄)
赋值 (脚本, “select distinct(单据号) from 总库 order by 单据号”) ' 脚本 ＝ “select distinct(单据号),(select count(*) as 数量 from 总库) from 总库 order by 单据号”
赋值 (记录集句柄, _启动窗口.查询 (., 脚本)) ' 对数据库排序：order by  求合：sum
_启动窗口.到首记录 (., 记录集句柄)
.判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
    置等待鼠标 ()
     ' 处理事件 ()
    
     ().加入项目 (_启动窗口.读 (., 记录集句柄, 1), , , )
    _启动窗口.到后一记录 (., 记录集句柄)
.判断循环尾 ()

.子程序 写表头信息, 空白型, , 
赋值 (., 70)
赋值 (., 1)
赋值 (., 0)
赋值 (., 1)
赋值 (., 20)
相减 (., 1).未知支持库函数_9 (0, 1, “商品编码”)
相减 (., 1).未知支持库函数_9 (1, 1, “商品名称”)
相减 (., 1).未知支持库函数_9 (2, 1, “入库日期”)
相减 (., 1).未知支持库函数_9 (3, 1, “拼音码”)
相减 (., 1).未知支持库函数_9 (4, 1, “规格”)
相减 (., 1).未知支持库函数_9 (5, 1, “进货数量”)
相减 (., 1).未知支持库函数_9 (6, 1, “库存数量”)

相减 (., 1).未知支持库函数_9 (7, 1, “进货价”)
相减 (., 1).未知支持库函数_9 (8, 1, “应付金额”)
相减 (., 1).未知支持库函数_9 (9, 1, “已付金额”)
相减 (., 1).未知支持库函数_9 (10, 1, “零售价”)
相减 (., 1).未知支持库函数_9 (11, 1, “批发价”)
相减 (., 1).未知支持库函数_9 (12, 1, “库存上限”)
相减 (., 1).未知支持库函数_9 (13, 1, “库存下限”)
相减 (., 1).未知支持库函数_9 (14, 1, “一级分类”)
相减 (., 1).未知支持库函数_9 (15, 1, “二级分类”)
相减 (., 1).未知支持库函数_9 (16, 1, “供货商”)
相减 (., 1).未知支持库函数_9 (17, 1, “备注”)
相减 (., 1).未知支持库函数_9 (18, 1, “产地”)
赋值 (., 88)


.子程序 _树型框1_项目被选择, 空白型, , 
.参数 选择方式, 整数型, , 

_启动窗口.关闭记录集 (., 记录集句柄)
赋值 (脚本, 相加 (“select * from 总库 where 单据号=”, “'”, .取项目文本 (.最大化按钮), “' ”))
输出调试文本 (脚本)
赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
赋值 (.内容, .取项目文本 (.最大化按钮))
添置表格数据 ()

.子程序 _按钮1_被单击, 空白型, , 
.局部变量 开始, 文本型, , , 
.局部变量 结束, 文本型, , , 
.局部变量 t, 空白型, , , 
.局部变量 项目名暂存, 文本型, , , 
.局部变量 项目名暂存2, 文本型, , , 

赋值 (.内容, “”)
清空 ()
赋值 (., 1)
.如果 (小于 (.今天, .今天))
    信息框 (“请注意开始日期和结束日期！”, 64, “贝尔软件”)
    返回 ()
.否则
    赋值 (开始, 相加 (“#”, 未知支持库函数_12 (.今天, “%y-%m-%d”), “#”))
    赋值 (结束, 相加 (“#”, 未知支持库函数_12 (.今天, “%y-%m-%d”), “#”))
    
    赋值 (脚本, 相加 (“select count(*) from 总库 where 入库日期 >= ”, 开始, “ and 入库日期 <= ”, 结束))
    输出调试文本 (脚本)
    _启动窗口.关闭记录集 (., 记录集句柄一)
    赋值 (记录集句柄一, _启动窗口.查询 (., 脚本))
    赋值 (t, _启动窗口.读 (., 记录集句柄一, 1))
    
    _启动窗口.关闭记录集 (., 记录集句柄一)
    .如果 (等于 (t, 0))
        信息框 (“没有找到相关数据！”, 64, “贝尔软件”)
    .否则
        _启动窗口.关闭记录集 (., 记录集句柄一)
        赋值 (脚本, 相加 (“select distinct(单据号),进货价 from 总库 where 入库日期 >= ”, 开始, “ and 入库日期 <= ”, 结束))
        
        输出调试文本 (脚本)
        赋值 (记录集句柄一, _启动窗口.查询 (., 脚本))
        清空 ()
        _启动窗口.到首记录 (., 记录集句柄一)
        .计次循环首 (t, )
            赋值 (项目名暂存, _启动窗口.读 (., 记录集句柄一, 1))
            .如果 (不等于 (项目名暂存, 项目名暂存2))
                .如果 (等于 (到数值 (到文本 (_启动窗口.读 (., 记录集句柄一, “进货价”))), 0))
                    
                .否则
                    .加入项目 (项目名暂存, , , )
                    
                .如果结束
                
            .否则
                
            .如果结束
            赋值 (项目名暂存2, 项目名暂存)
            _启动窗口.到后一记录 (., 记录集句柄一)
            .如果真 (等于 (_启动窗口.尾记录后 (., 记录集句柄一), 真))
                跳出循环 ()
            .如果真结束
            
        .计次循环尾 ()
        
    .如果结束
    
    
.如果结束


.子程序 添置表格数据, 空白型, , 
_启动窗口.到首记录 (., 记录集句柄)
赋值 (., 1)
赋值 (., 18)
.判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
    置等待鼠标 ()
     ' 处理事件 ()
    
    .未知支持库函数_38 () ' <!!!>
    相减 (., 1).未知支持库函数_9 (0, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “商品编码”))) ' 编码
    相减 (., 1).未知支持库函数_9 (1, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “商品名称”))) ' 名称
    相减 (., 1).未知支持库函数_9 (2, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “入库日期”))) ' 入库日期
    相减 (., 1).未知支持库函数_9 (3, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “拼音码”))) ' 拼音码
    相减 (., 1).未知支持库函数_9 (4, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “规格”))) ' 规格]
    相减 (., 1).未知支持库函数_9 (5, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “数量”))) ' 数量
    相减 (., 1).未知支持库函数_9 (6, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “库存数量”)))
    相减 (., 1).未知支持库函数_9 (7, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 8))) ' 进货价
    相减 (., 1).未知支持库函数_9 (8, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “应付金额”))) ' 应付
    相减 (., 1).未知支持库函数_9 (9, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “已付金额”))) ' 已付
    相减 (., 1).未知支持库函数_9 (10, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “零售价”))) ' 零售
    相减 (., 1).未知支持库函数_9 (11, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “批发价”))) ' 批发
    相减 (., 1).未知支持库函数_9 (12, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “库存上限”))) ' 上限
    相减 (., 1).未知支持库函数_9 (13, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “库存下限”))) ' 下限
    相减 (., 1).未知支持库函数_9 (14, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “一级分类”))) ' 一级
    相减 (., 1).未知支持库函数_9 (15, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “二级分类”))) ' 二级
    相减 (., 1).未知支持库函数_9 (16, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “供货商”))) ' 供货商
    相减 (., 1).未知支持库函数_9 (17, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “备注”))) ' 备注
    相减 (., 1).未知支持库函数_9 (18, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “产地”))) ' 备注
    
    _启动窗口.到后一记录 (., 记录集句柄)
.判断循环尾 ()
_启动窗口.关闭记录集 (., 记录集句柄)


.子程序 _按钮3_被单击, 空白型, , 
赋值 (.内容, “”)
赋值 (., 1)
清空 ()

.子程序 _按钮4_被单击, 空白型, , 
_启动窗口.关闭记录集 (., 记录集句柄)
_启动窗口.关闭记录集 (., 记录集句柄一)

销毁 ()

.子程序 _按钮5_被单击, 空白型, , 
赋值 (文本, .内容)
.如果 (并且 (不等于 (.内容, “”), 不等于 (.取项目文本 (.最大化按钮), “”)))
    载入 (进货退货最终单, , 真)
    _树型框1_项目被选择 (.最大化按钮)
.否则
    信息框 (“没有选择入库单，无法继续！”, 64, “贝尔软件”)
.如果结束


.子程序 _分隔条1_被拖动, 空白型, , 
.参数 原位置, 整数型, , 
.参数 目的位置, 整数型, , 

.局部变量 新左边, 整数型, , , 

.如果真 (小于 (目的位置, 8))
    赋值 (目的位置, 8)
.如果真结束
.如果真 (大于 (目的位置, 相减 (., 20)))
    赋值 (目的位置, 相减 (., 20))
.如果真结束
赋值 (., 目的位置)
赋值 (.宽度, 相减 (., .左边))
赋值 (新左边, 相加 (., .))
新左边.移动 (相减 (., 12, 新左边), )


.窗口程序集 窗口程序集23, , , 

.子程序 _进货退货最终单_创建完毕, 空白型, , 
添写表头 ()
有否退货单号 ()
添置退货表格数据 ()
赋值 (., 经顶边)
赋值 (., 经左边)
赋值 (., 假)


.子程序 有否退货单号, 空白型, , 
.局部变量 真假, 逻辑型, , , 
.局部变量 t, 空白型, , , 


赋值 (真假, 假)
赋值 (t, 1)
.判断循环首 (不等于 (真假, 真))
    赋值 (入库单号临时, 相加 (“退”, 未知支持库函数_12 (.今天, “%y-%m-%d”), “-”, 到文本 (t)))
    输出调试文本 (入库单号临时)
    赋值 (脚本, 相加 (“select * from 退货记录 where 退货单号='”, 入库单号临时, “'”))
    赋值 (记录集句柄一, _启动窗口.查询 (., 脚本))
    _启动窗口.到首记录 (., 记录集句柄一)
    输出调试文本 (到文本 (t))
    .如果 (等于 (_启动窗口.读 (., 记录集句柄一, “退货单号”), 入库单号临时))
        赋值 (t, 相加 (t, 1))
        _启动窗口.到后一记录 (., 记录集句柄一)
    .否则
        赋值 (入库单号临时, 相加 (“退”, 未知支持库函数_12 (.今天, “%y-%m-%d”), “-”, 到文本 (t)))
        赋值 (.内容, 入库单号临时)
        跳出循环 ()
    .如果结束
    
.判断循环尾 ()


.子程序 添写表头, 空白型, , 
赋值 (., 70)
赋值 (., 1)
赋值 (., 0)
赋值 (., 22)
相减 (., 1).未知支持库函数_9 (0, 1, “商品编码”)
相减 (., 1).未知支持库函数_9 (1, 1, “商品名称”)
相减 (., 1).未知支持库函数_9 (2, 1, “入库日期”)
相减 (., 1).未知支持库函数_9 (3, 1, “拼音码”)
相减 (., 1).未知支持库函数_9 (4, 1, “规格”)
相减 (., 1).未知支持库函数_9 (5, 1, “进货数量”)
相减 (., 1).未知支持库函数_9 (6, 1, “退货数量”)
相减 (., 1).未知支持库函数_9 (7, 1, “库存数量”)
相减 (., 1).未知支持库函数_9 (8, 1, “进货价”)
相减 (., 1).未知支持库函数_9 (9, 1, “应付金额”)
相减 (., 1).未知支持库函数_9 (10, 1, “已付金额”)
相减 (., 1).未知支持库函数_9 (11, 1, “零售价”)
相减 (., 1).未知支持库函数_9 (12, 1, “批发价”)
相减 (., 1).未知支持库函数_9 (13, 1, “库存上限”)
相减 (., 1).未知支持库函数_9 (14, 1, “库存下限”)
相减 (., 1).未知支持库函数_9 (15, 1, “一级分类”)
相减 (., 1).未知支持库函数_9 (16, 1, “二级分类”)
相减 (., 1).未知支持库函数_9 (17, 1, “供货商”)
相减 (., 1).未知支持库函数_9 (18, 1, “退货原因”)
相减 (., 1).未知支持库函数_9 (19, 1, “产地”)
相减 (., 1).未知支持库函数_9 (20, 1, “库存id”)
_启动窗口.关闭记录集 (., 记录集句柄)
赋值 (脚本, 相加 (“select * from 总库 where 单据号=”, “'”, 文本, “'”))
输出调试文本 (脚本)
赋值 (记录集句柄, _启动窗口.查询 (., 脚本))


.子程序 添置退货表格数据, 空白型, , 
_启动窗口.到首记录 (., 记录集句柄)
赋值 (表格行数累计, 0)
赋值 (., 1)
赋值 (., 22)
.判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
    置等待鼠标 ()
     ' 处理事件 ()
    
    .未知支持库函数_38 () ' <!!!>
    
    赋值 (表格行数累计, 相加 (表格行数累计, 1))
    相减 (., 1).未知支持库函数_9 (0, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “商品编码”))) ' 编码
    相减 (., 1).未知支持库函数_9 (1, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “商品名称”))) ' 名称
    相减 (., 1).未知支持库函数_9 (2, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “入库日期”))) ' 入库日期
    相减 (., 1).未知支持库函数_9 (3, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “拼音码”))) ' 拼音码
    相减 (., 1).未知支持库函数_9 (4, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “规格”))) ' 规格]
    相减 (., 1).未知支持库函数_9 (5, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “数量”))) ' 数量
    相减 (., 1).未知支持库函数_9 (7, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “库存数量”)))
    相减 (., 1).未知支持库函数_9 (8, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “进货价”))) ' 进货价
    相减 (., 1).未知支持库函数_9 (9, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “应付金额”))) ' 应付
    相减 (., 1).未知支持库函数_9 (10, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “已付金额”))) ' 已付
    相减 (., 1).未知支持库函数_9 (11, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “零售价”))) ' 零售
    相减 (., 1).未知支持库函数_9 (12, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “批发价”))) ' 批发
    相减 (., 1).未知支持库函数_9 (13, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “库存上限”))) ' 上限
    相减 (., 1).未知支持库函数_9 (14, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “库存下限”))) ' 下限
    相减 (., 1).未知支持库函数_9 (15, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “一级分类”))) ' 一级
    相减 (., 1).未知支持库函数_9 (16, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “二级分类”))) ' 二级
    相减 (., 1).未知支持库函数_9 (17, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “供货商”))) ' 供货商
     ' 表格1.置数据 (表格1.行数 － 1, 17, 1, 到文本 (_启动窗口.外部数据库1.读 (记录集句柄, 18)))  ' 备注
    相减 (., 1).未知支持库函数_9 (19, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “产地”))) ' 产地
    相减 (., 1).未知支持库函数_9 (20, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “库存id”))) ' 库存id
    
    _启动窗口.到后一记录 (., 记录集句柄)
.判断循环尾 ()
_启动窗口.关闭记录集 (., 记录集句柄)


.子程序 _表格1_光标位置改变, 空白型, , 



.子程序 _表格1_被双击1, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 库存id, 文本型, , , 

赋值 (库存id, 未知支持库函数_3 ().未知支持库函数_10 (19))
赋值 (库存数量, 未知支持库函数_3 ().未知支持库函数_10 (7))
载入 (进货退货数量, , 真)


.子程序 _按钮1_被单击, 空白型, , 
销毁 ()


.子程序 _按钮5_被单击, 空白型, , 


.子程序 _按钮6_被单击, 空白型, , 
.局部变量 t, 空白型, , , 
.局部变量 库存id, 文本型, , , 
.局部变量 进货数量, 文本型, , , 
.局部变量 退货数量, 文本型, , , 
.局部变量 现在数量, 文本型, , , 
.局部变量 商品编码, 文本型, , , 
.局部变量 入库单号, 文本型, , , 
.局部变量 商品名称, 文本型, , , 
.局部变量 进货价, 文本型, , , 
.局部变量 退货日期, 文本型, , , 
.局部变量 备注, 文本型, , , 
.局部变量 应付金额, 文本型, , , 
.局部变量 已付金额, 文本型, , , 
.局部变量 是否成功, 逻辑型, , , 
.局部变量 供货商, 文本型, , , 
.局部变量 应找回金额, 文本型, , , 


.计次循环首 (表格行数累计, t)
    赋值 (库存id, t.未知支持库函数_10 (20))
    赋值 (进货数量, t.未知支持库函数_10 (5))
    赋值 (退货数量, t.未知支持库函数_10 (6))
    赋值 (现在数量, 到文本 (到数值 (t.未知支持库函数_10 (7))))
    赋值 (商品编码, t.未知支持库函数_10 (0))
    赋值 (入库单号, 文本)
    赋值 (商品名称, t.未知支持库函数_10 (1))
    赋值 (进货价, t.未知支持库函数_10 (8))
    赋值 (应付金额, t.未知支持库函数_10 (9))
    赋值 (已付金额, t.未知支持库函数_10 (10))
    赋值 (退货日期, 未知支持库函数_12 (取现行时间 (), “%y-%m-%d”))
    赋值 (供货商, t.未知支持库函数_10 (17))
    .如果 (等于 (t.未知支持库函数_10 (18), “”))
        赋值 (备注, “--”)
    .否则
        赋值 (备注, t.未知支持库函数_10 (18))
    .如果结束
    
    .如果 (不等于 (退货数量, “”))
        .如果 (等于 (到数值 (现在数量), 0))
            赋值 (脚本, 相加 (“delete from 总库 where 库存id =”, 库存id))
            输出调试文本 (脚本)
            .如果 (等于 (_启动窗口.执行 (., 脚本, ), 假))
                赋值 (是否成功, 假)
                跳出循环 ()
            .否则
                赋值 (是否成功, 真)
            .如果结束
            
            .如果 (等于 (取文本左边 (已付金额, 1), “-”)) ' 这里开始删除未付或者已付表的相关信息
                赋值 (脚本, 相加 (“delete from 未付款 where 库存id ='”, 库存id, “'”))
                输出调试文本 (脚本)
                .如果 (等于 (_启动窗口.执行 (., 脚本, ), 假))
                    赋值 (是否成功, 假)
                    跳出循环 ()
                .否则
                    赋值 (是否成功, 真)
                .如果结束
                
            .否则
                赋值 (脚本, 相加 (“delete from 已付款 where 库存id ='”, 库存id, “'”))
                输出调试文本 (脚本)
                .如果 (等于 (_启动窗口.执行 (., 脚本, ), 假))
                    赋值 (是否成功, 假)
                    跳出循环 ()
                .否则
                    赋值 (是否成功, 真)
                .如果结束
                
            .如果结束
            
            
        .否则
            .如果 (大于 (到数值 (现在数量), 0))
                 ' 脚本 ＝ “此处加修改数据代码”
                赋值 (脚本, 相加 (“update 总库 set 库存数量=”, 现在数量, “,应付金额 =”, 应付金额, “,已付金额=”, 已付金额, “ where 库存id=”, 库存id))
                输出调试文本 (脚本)
                .如果 (等于 (_启动窗口.执行 (., 脚本, ), 假))
                    赋值 (是否成功, 假)
                    跳出循环 ()
                .否则
                    赋值 (是否成功, 真)
                .如果结束
                
                
                .如果 (等于 (取文本左边 (已付金额, 1), “-”)) ' 这里开始修改未付或者已付表的相关信息
                    赋值 (脚本, 相加 (“update 未付款 set 欠款额=”, 已付金额, “ where 库存id='”, 库存id, “'”))
                    输出调试文本 (脚本)
                    .如果 (等于 (_启动窗口.执行 (., 脚本, ), 假))
                        赋值 (是否成功, 假)
                        跳出循环 ()
                    .否则
                        赋值 (是否成功, 真)
                    .如果结束
                    
                .否则
                    赋值 (脚本, 相加 (“update 已付款 set 已付额=”, 已付金额, “ where 库存id='”, 库存id, “'”))
                    输出调试文本 (脚本)
                    .如果 (等于 (_启动窗口.执行 (., 脚本, ), 假))
                        赋值 (是否成功, 假)
                        跳出循环 ()
                    .否则
                        赋值 (是否成功, 真)
                    .如果结束
                    
                .如果结束
                
            .否则
                
            .如果结束
            
        .如果结束
        赋值 (应找回金额, 到文本 (相乘 (到数值 (退货数量), 到数值 (进货价)))) ' 开始写退货记录
        
        置等待鼠标 ()
        赋值 (脚本, 相加 (“insert into 退货记录 (退货日期,入库单号,商品名称,商品编码,原进货量,进货价,退货数量,退货原因,供货商,应找回金额,退货单号)  values ('”, 退货日期, “','”, 入库单号, “','”, 商品名称, “',”, 商品编码, “,”, 进货数量, “,”, 进货价, “,”, 退货数量, “,'”, 备注, “','”, 供货商, “',”, 应找回金额, “,'”, .内容, “')”))
        .如果 (等于 (_启动窗口.执行 (., 脚本, ), 假))
             ' 信息框 (“11111error”, 0, )
            赋值 (是否成功, 假)
        .否则
             ' 信息框 (“11111ok”, 0, )
            赋值 (是否成功, 真)
        .如果结束
        
        
        
    .否则
        
    .如果结束
    
.计次循环尾 ()
.如果 (等于 (是否成功, 真))
    信息框 (“执行成功！”, 0, )
    销毁 ()
.否则
    信息框 (“执行失败，请重试！”, 0, )
.如果结束


.子程序 _表格1_被双击, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 库存id, 文本型, , , 

.如果 (等于 (未知支持库函数_3 (), -1))
    返回 ()
.否则
    赋值 (库存id, 未知支持库函数_3 ().未知支持库函数_10 (19))
    赋值 (库存数量, 未知支持库函数_3 ().未知支持库函数_10 (5))
    赋值 (商品名, 未知支持库函数_3 ().未知支持库函数_10 (1))
    载入 (进货退货数量, , 真)
.如果结束


.子程序 _表格1_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 库存id, 文本型, , , 

.如果 (等于 (键代码, #回车键))
    .如果 (等于 (未知支持库函数_3 (), -1))
        返回 ()
    .否则
        赋值 (库存id, 未知支持库函数_3 ().未知支持库函数_10 (19))
        赋值 (库存数量, 未知支持库函数_3 ().未知支持库函数_10 (5))
        赋值 (商品名, 未知支持库函数_3 ().未知支持库函数_10 (1))
        载入 (进货退货数量, , 真)
    .如果结束
    
    
.否则
    
.如果结束


.窗口程序集 窗口程序集24, , , 

.子程序 _进货退货数量_创建完毕, 空白型, , 
赋值 (.内容, 进货退货最终单.未知支持库函数_10 (., 进货退货最终单.未知支持库函数_3 (.), 7))
赋值 (.内容, 商品名)


.子程序 _按钮1_被单击, 空白型, , 
赋值 (.内容, 进货退货最终单.未知支持库函数_10 (., 进货退货最终单.未知支持库函数_3 (.), 7))
.如果 (大于或等于 (相减 (到数值 (.内容), 到数值 (.内容)), 0))
    进货退货最终单.未知支持库函数_9 (., 进货退货最终单.未知支持库函数_3 (.), 6, 1, .内容) ' 置退货数量
    进货退货最终单.未知支持库函数_9 (., 进货退货最终单.未知支持库函数_3 (.), 18, 1, .内容) ' 退货原因
    进货退货最终单.未知支持库函数_9 (., 进货退货最终单.未知支持库函数_3 (.), 7, 1, 到文本 (相减 (到数值 (进货退货最终单.未知支持库函数_10 (., 进货退货最终单.未知支持库函数_3 (.), 7)), 到数值 (.内容)))) ' 退货后的库存数量
    进货退货最终单.未知支持库函数_9 (., 进货退货最终单.未知支持库函数_3 (.), 9, 1, 到文本 (相乘 (相减 (到数值 (.内容), 到数值 (.内容)), 到数值 (进货退货最终单.未知支持库函数_10 (., 进货退货最终单.未知支持库函数_3 (.), 8))))) ' 应付金额
    
    .如果 (大于 (到数值 (进货退货最终单.未知支持库函数_10 (., 进货退货最终单.未知支持库函数_3 (.), 10)), 0)) ' 查看是否为未付款，如果是已付减之
        进货退货最终单.未知支持库函数_9 (., 进货退货最终单.未知支持库函数_3 (.), 10, 1, 到文本 (相乘 (相减 (到数值 (.内容), 到数值 (.内容)), 到数值 (进货退货最终单.未知支持库函数_10 (., 进货退货最终单.未知支持库函数_3 (.), 8)))))
        
    .否则
        .如果 (小于 (到数值 (进货退货最终单.未知支持库函数_10 (., 进货退货最终单.未知支持库函数_3 (.), 10)), 0)) ' 查看是否为未付款，如果是未付加之
            进货退货最终单.未知支持库函数_9 (., 进货退货最终单.未知支持库函数_3 (.), 10, 1, 相加 (“-”, 到文本 (相乘 (相减 (到数值 (.内容), 到数值 (.内容)), 到数值 (进货退货最终单.未知支持库函数_10 (., 进货退货最终单.未知支持库函数_3 (.), 8))))))
            
            
        .否则
            
        .如果结束
        
    .如果结束
    
    
    
    
    
    
    
    
    
.否则
    .如果 (小于 (相减 (到数值 (.内容), 到数值 (.内容)), 0))
        信息框 (“退货数量大于库存数量！”, 0, )
        返回 ()
    .否则
        
    .如果结束
    
    
    
.如果结束
销毁 ()


.窗口程序集 窗口程序集25, , , 

.程序集变量 有否, 文本型, , , 
.程序集变量 库存id, 文本型, , , 
.程序集变量 毛利, 文本型, , , 
.程序集变量 销售数量, 文本型, , , 
.程序集变量 实收取, 文本型, , , 
.程序集变量 tt, 空白型, , , 
.程序集变量 进货价, 文本型, , , 
.子程序 _销售单_创建完毕, 空白型, , 
 ' 信息框 (到文本 (取用户区高度 ()), 0, )
 ' 高度 ＝ 高度 ＋ 429 － 取用户区高度 ()


赋值 (表格行数累计, 0) ' 为表格行数进行初始，用于表格多少行进行计数后循环
赋值 (.现行选中项, 0)
赋值 (应付合计, 0)
赋值 (已付合计, 0)
赋值 (., 1)
赋值 (., 60)
赋值 (., 0)
赋值 (., 0)
赋值 (., 14)
相减 (., 1).未知支持库函数_9 (0, 1, “商品编码”)
1.未知支持库函数_32 (150)
相减 (., 1).未知支持库函数_9 (1, 1, “商品名称”)
相减 (., 1).未知支持库函数_9 (2, 1, “拼音码”)
相减 (., 1).未知支持库函数_9 (3, 1, “规格”)
相减 (., 1).未知支持库函数_9 (4, 1, “库存数量”)
相减 (., 1).未知支持库函数_9 (5, 1, “销售数量”)
相减 (., 1).未知支持库函数_9 (6, 1, “零售价”)
相减 (., 1).未知支持库函数_9 (7, 1, “一级分类”)
相减 (., 1).未知支持库函数_9 (8, 1, “二级分类”)
相减 (., 1).未知支持库函数_9 (9, 1, “产地”)
相减 (., 1).未知支持库函数_9 (10, 1, “库存id”)
相减 (., 1).未知支持库函数_9 (11, 1, “应收金额”)
相减 (., 1).未知支持库函数_9 (12, 1, “实收金额”)
相减 (., 1).未知支持库函数_9 (13, 1, “备注”)
赋值 (., 1)
添加客户下拉列表内容 ()
判断有否销售单号 ()
赋值 (.内容, 操作员)
选择表头 ()

.子程序 判断有否销售单号, 空白型, , 
.局部变量 真假, 逻辑型, , , 
.局部变量 t, 空白型, , , 

赋值 (真假, 假)
赋值 (t, 1)
.判断循环首 (不等于 (真假, 真))
    赋值 (入库单号临时, 相加 (“销”, 未知支持库函数_12 (.今天, “%y-%m-%d”), “-”, 到文本 (t)))
    输出调试文本 (入库单号临时)
    赋值 (脚本, 相加 (“select * from 销售 where 单据号='”, 入库单号临时, “'”))
    赋值 (记录集句柄一, _启动窗口.查询 (., 脚本))
    _启动窗口.到首记录 (., 记录集句柄一)
    输出调试文本 (到文本 (t))
    .如果 (等于 (_启动窗口.读 (., 记录集句柄一, 1), 入库单号临时))
        赋值 (t, 相加 (t, 1))
        _启动窗口.到后一记录 (., 记录集句柄一)
    .否则
        赋值 (入库单号临时, 相加 (“销”, 未知支持库函数_12 (.今天, “%y-%m-%d”), “-”, 到文本 (t)))
        赋值 (.内容, 入库单号临时)
        跳出循环 ()
    .如果结束
    
.判断循环尾 ()


.子程序 添加客户下拉列表内容, 空白型, , 
.局部变量 t, 空白型, , , 

赋值 (脚本, “select count(*) from 客户资料”)
_启动窗口.关闭记录集 (., 记录集句柄一)
赋值 (记录集句柄一, _启动窗口.查询 (., 脚本))
赋值 (t, _启动窗口.读 (., 记录集句柄一, 1))
_启动窗口.关闭记录集 (., 记录集句柄一)
赋值 (脚本, “select * from 客户资料”)
赋值 (记录集句柄一, _启动窗口.查询 (., 脚本))
_启动窗口.到首记录 (., 记录集句柄一)
.计次循环首 (t, )
    _启动窗口.读 (., 记录集句柄一, 2).加入项目 ()
    _启动窗口.到后一记录 (., 记录集句柄一)
.计次循环尾 ()
赋值 (.现行选中项, 0)


.子程序 _按钮1_被单击, 空白型, , 
置等待鼠标 ()
载入 (销售商品选择, , 真)

.子程序 _按钮2_被单击, 空白型, , 
.局部变量 应付, 文本型, , , 
.局部变量 已付, 文本型, , , 


.如果 (等于 (未知支持库函数_3 (), -1))
    信息框 (“请选择要删除的商品行”, 0, )
    返回 ()
.否则
    赋值 (应付, 未知支持库函数_3 ().未知支持库函数_10 (11))
    赋值 (已付, 未知支持库函数_3 ().未知支持库函数_10 (12))
    赋值 (应付合计, 相减 (应付合计, 到数值 (应付)))
    赋值 (已付合计, 相减 (已付合计, 到数值 (已付)))
    赋值 (.内容, 到文本 (应付合计))
    赋值 (.内容, 到文本 (已付合计))
    未知支持库函数_3 ().未知支持库函数_36 ()
    赋值 (表格行数累计, 相减 (表格行数累计, 1))
    .如果 (小于或等于 (表格行数累计, 0))
        赋值 (表格行数累计, 0)
        赋值 (应付合计, 0)
        赋值 (已付合计, 0)
        赋值 (.内容, 到文本 (应付合计))
        赋值 (.内容, 到文本 (已付合计))
        
    .否则
        
    .如果结束
    
.如果结束




.子程序 _按钮3_被单击, 空白型, , 
.局部变量 ttt, 空白型, , , 
.局部变量 商品编码, 文本型, , , 
.局部变量 商品名称, 文本型, , , 
.局部变量 拼音码, 文本型, , , 
.局部变量 规格, 文本型, , , 
.局部变量 库存数量, 文本型, , , 
.局部变量 现库存数量, 文本型, , , 
.局部变量 零售价内容, 文本型, , , 
.局部变量 供应商, 文本型, , , 
.局部变量 库存上限, 文本型, , , 
.局部变量 库存下限, 文本型, , , 
.局部变量 一级分类, 文本型, , , 
.局部变量 二级分类, 文本型, , , 
.局部变量 销售日期, 文本型, , , 
.局部变量 单据号, 文本型, , , 
.局部变量 备注, 文本型, , , 
.局部变量 tttt, 空白型, , , 
.局部变量 产地, 文本型, , , 
.局部变量 ddd, 逻辑型, , , 
.局部变量 购买客户, 文本型, , , 
.局部变量 应收取, 文本型, , , 
.局部变量 销售id, 文本型, , , 
.局部变量 匿名局部变量_7914, 空白型, , , 

.如果 (小于或等于 (表格行数累计, 0))
    信息框 (“没有销售商品!”, 0, )
    返回 ()
.否则
    .如果 (等于 (.内容, “欠款未付”))
        .如果真 (等于 (.内容, “无记名客户”))
            信息框 (“对不起,对无记名客户不能进行欠款操作!”, 0, )
            返回 ()
        .如果真结束
        
    .否则
        
    .如果结束
    
    
    .如果 (或者 (等于 (.内容, “”), 等于 (.内容, “”), 等于 (.内容, “”), 等于 (.内容, “”), 等于 (.内容, “”), 等于 (.内容, “”)))
        信息框 (“请添写全部信息!”, 0, )
    .否则
        判断有否销售单号二 ()
        .如果真 (等于 (有否, “有”))
            赋值 (有否, “没”)
            返回 ()
        .如果真结束
        赋值 (销售日期, 未知支持库函数_12 (.今天, “%y-%m-%d”))
        赋值 (单据号, .内容)
        赋值 (购买客户, .内容)
        .计次循环首 (表格行数累计, tt)
            赋值 (商品编码, tt.未知支持库函数_10 (0))
            赋值 (商品名称, 相加 (“'”, tt.未知支持库函数_10 (1), “'”))
            赋值 (拼音码, 相加 (“'”, tt.未知支持库函数_10 (2), “'”))
            赋值 (规格, 相加 (“'”, tt.未知支持库函数_10 (3), “'”))
            赋值 (库存数量, tt.未知支持库函数_10 (4))
            赋值 (销售数量, tt.未知支持库函数_10 (5))
            赋值 (现库存数量, 到文本 (相减 (到数值 (库存数量), 到数值 (销售数量))))
            赋值 (零售价内容, tt.未知支持库函数_10 (6))
            赋值 (一级分类, 相加 (“'”, tt.未知支持库函数_10 (7), “'”))
            赋值 (二级分类, 相加 (“'”, tt.未知支持库函数_10 (8), “'”))
            赋值 (产地, 相加 (“'”, tt.未知支持库函数_10 (9), “'”))
            赋值 (库存id, tt.未知支持库函数_10 (10))
            赋值 (应收取, 相加 (“'”, tt.未知支持库函数_10 (11), “'”))
            
            .如果 (等于 (.内容, “欠款未付”))
                赋值 (实收取, 相加 (“-”, tt.未知支持库函数_10 (12)))
            .否则
                赋值 (实收取, tt.未知支持库函数_10 (12))
            .如果结束
            
            赋值 (备注, 相加 (“'”, tt.未知支持库函数_10 (13), “'”))
            
            
             ' 信息框 (“实收取：：” ＋ 到文本 (实收取), 0, )
             ' 信息框 (“毛利：：” ＋ 到文本 (毛利), 0, )
            计算毛利 ()
            赋值 (脚本, 相加 (“insert into 销售(商品编码,商品名称,拼音码,规格,销售数量,零售价,一级分类,二级分类,单据号,销售日期,备注,产地,库存id,购买客户,应付金额,实付金额,操作员,进货价)  values (”, 商品编码, “,”, 商品名称, “,”, 拼音码, “,”, 规格, “,”, 销售数量, “,”, 零售价内容, “,”, 一级分类, “,”, 二级分类, “,'”, 单据号, “','”, 销售日期, “',”, 备注, “,”, 产地, “,'”, 库存id, “','”, 购买客户, “',”, 应收取, “,'”, 实收取, “','”, 操作员, “',”, 进货价, “)”))
            
            输出调试文本 (脚本)
            
            
            .如果 (等于 (_启动窗口.执行 (., 脚本, ), 真))
                赋值 (脚本, 相加 (“update 总库 set 库存数量=”, 现库存数量, “ where 库存id=”, 库存id))
                输出调试文本 (脚本)
                .如果 (等于 (_启动窗口.执行 (., 脚本, ), 真))
                    赋值 (ddd, 真)
                     ' 信息框 (到文本 (到数值 (实收取)), 0, )
                    .如果 (大于 (到数值 (实收取), 0))
                        赋值 (脚本, 相加 (“insert into 收款员收款明细(收入日期,金额,收入原因,操作员,备注)  values ('”, 未知支持库函数_12 (取现行时间 (), “%y-%m-%d”), “',”, 实收取, “,'销售：”, 购买客户, “','”, 操作员, “','”, 单据号, “')”))
                        
                        输出调试文本 (脚本)
                        .如果 (等于 (_启动窗口.执行 (., 脚本, ), 真))
                            赋值 (ddd, 真)
                        .否则
                            赋值 (ddd, 假)
                            跳出循环 ()
                        .如果结束
                        
                    .否则
                        
                    .如果结束
                    
                    
                .否则
                    赋值 (ddd, 假)
                    跳出循环 ()
                .如果结束
                
                
            .否则
                赋值 (ddd, 假)
                跳出循环 ()
            .如果结束
            
        .计次循环尾 ()
        .如果 (等于 (ddd, 真))
            信息框 (“写销售信息成功！”, 0, )
            赋值 (.禁止, 假)
            赋值 (.禁止, 假)
            赋值 (表格行数累计, 0) ' 为表格行数进行初始，用于表格多少行进行计数后循环
            赋值 (.现行选中项, 0)
            赋值 (应付合计, 0)
            赋值 (已付合计, 0)
            判断有否销售单号 ()
            .如果 (等于 (.选中, 真))
                赋值 (表格文件名, 相加 (取运行目录 (), “\wgid\销售单”))
                .如果 (等于 (表格文件名.未知支持库函数_55 (), 真))
                    置文件属性 (表格文件名, 1)
                    赋值 (表头标题, “销售单”)
                    载入 (打印, , 真)
                    
                .否则
                    信息框 (“打印格式文件出错，操作失败！”, 相加 (0, #错误图标), )
                .如果结束
                
            .否则
                
            .如果结束
            赋值 (., 1)
            赋值 (., 1)
            
        .否则
            信息框 (“写销售信息失败！”, 0, )
            返回 ()
        .如果结束
         ' 销毁 ()
        
    .如果结束
    
.如果结束


.子程序 计算毛利, 空白型, , 
赋值 (毛利, “0”)
赋值 (脚本, 相加 (“select 进货价 from 总库 where 库存id=”, 库存id))
 ' _启动窗口.关闭记录集 (., 记录集句柄一)
赋值 (记录集句柄一, _启动窗口.查询 (., 脚本))
_启动窗口.到首记录 (., 记录集句柄一)
赋值 (毛利, 到文本 (相减 (取绝对值 (到数值 (tt.未知支持库函数_10 (12))), 相乘 (到数值 (销售数量), 到数值 (_启动窗口.读 (., 记录集句柄一, “进货价”))))))
赋值 (进货价, 到文本 (到数值 (_启动窗口.读 (., 记录集句柄一, “进货价”))))

.子程序 判断有否销售单号二, 空白型, , 
赋值 (脚本, 相加 (“select * from 销售 where 单据号='”, .内容, “'”))
 ' _启动窗口.关闭记录集 (., 记录集句柄一)
赋值 (记录集句柄一, _启动窗口.查询 (., 脚本))
_启动窗口.到首记录 (., 记录集句柄一)
赋值 (入库单号临时, .内容)
.如果 (等于 (_启动窗口.读 (., 记录集句柄一, 1), 入库单号临时))
    信息框 (“数据库内已有此销售单号，请修改销售单编号！”, 0, )
    赋值 (有否, “有”)
    返回 ()
.否则
    赋值 (有否, “没”)
.如果结束


.子程序 _按钮4_被单击, 空白型, , 
信息框 (相加 (到文本 (.), “   ”, 到文本 (.)), 0, )

.子程序 _日期_选择日期被改变, 空白型, , 
判断有否销售单号 ()


.子程序 _编辑框1_内容被改变, 空白型, , 

_启动窗口.关闭记录集 (., 记录集句柄)
赋值 (脚本, 相加 (“select * from 总库 where 拼音码”, “ like '%”, .内容, “%' and 零售价>0”))
输出调试文本 (脚本)
赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
_启动窗口.到首记录 (., 记录集句柄)
添选择表 ()

.子程序 添选择表, 空白型, , 
 ' 库存基数 ＝ 0
 ' 库存总数累计 ＝ 0
赋值 (., 1)
 ' 表格2.列数 ＝ 11
.判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
    置等待鼠标 ()
     ' 处理事件 ()
    
    .如果 (不等于 (_启动窗口.读 (., 记录集句柄, “库存数量”), 0))
        
        .未知支持库函数_38 () ' <!!!>
        相减 (., 1).未知支持库函数_9 (0, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “商品编码”)))
        相减 (., 1).未知支持库函数_9 (1, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “商品名称”)))
        相减 (., 1).未知支持库函数_9 (2, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “拼音码”)))
        相减 (., 1).未知支持库函数_9 (3, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “规格”)))
        相减 (., 1).未知支持库函数_9 (4, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “库存数量”)))
        相减 (., 1).未知支持库函数_9 (5, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “入库日期”)))
        相减 (., 1).未知支持库函数_9 (6, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “零售价”)))
        相减 (., 1).未知支持库函数_9 (7, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “一级分类”)))
        相减 (., 1).未知支持库函数_9 (8, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “二级分类”)))
        相减 (., 1).未知支持库函数_9 (9, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “产地”)))
        相减 (., 1).未知支持库函数_9 (10, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “库存id”)))
        
    .否则
        
    .如果结束
    _启动窗口.到后一记录 (., 记录集句柄)
.判断循环尾 ()
_启动窗口.关闭记录集 (., 记录集句柄)


.子程序 选择表头, 空白型, , 
赋值 (., 1)
赋值 (., 70)
赋值 (., 0)
赋值 (., 0)
赋值 (., 11)
相减 (., 1).未知支持库函数_9 (0, 1, “商品编码”)
1.未知支持库函数_32 (150)
相减 (., 1).未知支持库函数_9 (1, 1, “商品名称”)
相减 (., 1).未知支持库函数_9 (2, 1, “拼音码”)
相减 (., 1).未知支持库函数_9 (3, 1, “规格”)
相减 (., 1).未知支持库函数_9 (4, 1, “库存数量”)
相减 (., 1).未知支持库函数_9 (5, 1, “入库日期”)
相减 (., 1).未知支持库函数_9 (6, 1, “零售价”)
相减 (., 1).未知支持库函数_9 (7, 1, “一级分类”)
相减 (., 1).未知支持库函数_9 (8, 1, “二级分类”)
相减 (., 1).未知支持库函数_9 (9, 1, “产地”)
相减 (., 1).未知支持库函数_9 (10, 1, “库存id”)
赋值 (., 1)


.子程序 _表格2_被双击, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 行, 整数型, , , 
.局部变量 列, 整数型, , , 
.局部变量 t, 空白型, , , 
.局部变量 hh, 空白型, , , 

.如果真 (等于 (未知支持库函数_3 (), -1))
    返回 ()
.如果真结束


.如果 (等于 (未知支持库函数_3 ().未知支持库函数_10 (6), “0”))
    信息框 (“本商品未进行销售订价,请进行销售登记!”, 0, )
    返回 ()
.否则
    
.如果结束

赋值 (行, 未知支持库函数_3 ())
赋值 (列, 11)
销售单.未知支持库函数_38 (., , )
赋值 (表格行数累计, 相加 (表格行数累计, 1))
.计次循环首 (列, t)
    .如果 (不等于 (t, 6))
        销售单.未知支持库函数_9 (., 表格行数累计, 相减 (t, 1), 1, 未知支持库函数_3 ().未知支持库函数_10 (相减 (t, 1)))
    .否则
        
    .如果结束
    
.计次循环尾 ()
赋值 (零售价, 到数值 (未知支持库函数_3 ().未知支持库函数_10 (6)))
载入 (销售输入, , 真)


.子程序 _表格2_光标位置改变, 空白型, , 


.子程序 _表格2_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 行, 整数型, , , 
.局部变量 列, 整数型, , , 
.局部变量 t, 空白型, , , 
.局部变量 hh, 空白型, , , 

.如果真 (等于 (键代码, #空格键))
    .如果 (等于 (未知支持库函数_3 ().未知支持库函数_10 (6), “0”))
        信息框 (“本商品未进行销售订价,请进行销售登记!”, 0, )
        返回 ()
    .否则
        
    .如果结束
    
    赋值 (行, 未知支持库函数_3 ())
    赋值 (列, 11)
    销售单.未知支持库函数_38 (., , )
    赋值 (表格行数累计, 相加 (表格行数累计, 1))
    .计次循环首 (列, t)
        .如果 (不等于 (t, 6))
            销售单.未知支持库函数_9 (., 表格行数累计, 相减 (t, 1), 1, 未知支持库函数_3 ().未知支持库函数_10 (相减 (t, 1)))
        .否则
            
        .如果结束
        
    .计次循环尾 ()
    赋值 (零售价, 到数值 (未知支持库函数_3 ().未知支持库函数_10 (6)))
    载入 (销售输入, , 真)
    
.如果真结束


.子程序 _客户名称_列表项被选择, 空白型, , 


.子程序 _付款方式_列表项被选择, 空白型, , 


.子程序 _分组框4_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 



.子程序 _销售单_首次激活, 空白型, , 
赋值 (., 经顶边)
赋值 (., 经左边)
 ' 高度 ＝ 经高度
 ' 宽度 ＝ 经宽度
赋值 (., 假)
赋值 (., 假)
赋值 (., 假)


.子程序 _销售单_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 



.子程序 _销售单_尺寸被改变, 空白型, , 


.窗口程序集 窗口程序集26, , , 

.窗口程序集 窗口程序集27, , , 

.子程序 _进货统计_创建完毕, 空白型, , 


.窗口程序集 窗口程序集28, , , 

.程序集变量 库存基数, 空白型, , , 
.程序集变量 库存总数累计, 空白型, , , 
.子程序 首次读取并显示汇总记录, 空白型, , 
.局部变量 t, 空白型, , , 
.局部变量 文本, 文本型, , , 
.局部变量 tt, 空白型, , , 
.局部变量 yy, 空白型, , , 

_启动窗口.关闭记录集 (., 记录集句柄)
赋值 (.图标, {  })
赋值 (脚本, 相加 (“select * from 商品分类 where 一级 ”, “ = ”, “'”, “1”, “'”))
输出调试文本 (脚本)
赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
_启动窗口.到首记录 (., 记录集句柄)
赋值 (yy, 0)
.判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
    置等待鼠标 ()
     ' 处理事件 ()
    
    yy.置图片 (1)
    yy.置选中图片 (2)
    yy.置外形图片 (3)
    .加入项目 (_启动窗口.读 (., 记录集句柄, 1), , , )
    _启动窗口.到后一记录 (., 记录集句柄)
    赋值 (yy, 相加 (yy, 1))
.判断循环尾 ()
_启动窗口.关闭记录集 (., 记录集句柄)
赋值 (t, 0)
赋值 (文本, “”)

.判断循环首 (小于或等于 (t, 取项目数 ()))
    t.置图片 (1)
    t.置选中图片 (2)
    yy.置外形图片 (3)
    赋值 (文本, t.取项目文本 ())
    输出调试文本 (文本)
    _启动窗口.关闭记录集 (., 记录集句柄)
    赋值 (脚本, 相加 (“select * from 商品分类 where 二级 ”, “ = ”, “'”, “1”, “' and ”, “商品类名 = '”, 文本, “'”))
    输出调试文本 (脚本)
    赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
    _启动窗口.到首记录 (., 记录集句柄)
    .判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
        置等待鼠标 ()
         ' 处理事件 ()
        
        t.加入项目 (_启动窗口.读 (., 记录集句柄, 2), , , )
        _启动窗口.到后一记录 (., 记录集句柄)
    .判断循环尾 ()
    赋值 (t, 相加 (t, 1))
.判断循环尾 ()

赋值 (t, 0)
_启动窗口.关闭记录集 (., 记录集句柄)


.子程序 _树型框1_项目被选择, 空白型, , 
.参数 选择方式, 整数型, , 

.局部变量 暂1, 文本型, , , 
.局部变量 暂2, 文本型, , , 

写汇总表头信息 ()
赋值 (库存基数, 0)
赋值 (库存总数累计, 0)
.如果真 (等于 (.取父项目 (.最大化按钮), -1))
    _启动窗口.关闭记录集 (., 记录集句柄)
    赋值 (脚本, 相加 (“select * from 总库 where 一级分类=”, “'”, .取项目文本 (.最大化按钮), “' and 零售价>0 order by 单据号”))
    输出调试文本 (脚本)
    赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
    _启动窗口.到首记录 (., 记录集句柄)
    销售添表 ()
    返回 ()
.如果真结束
.如果真 (等于 (.取缩进层次 (.最大化按钮), 2))
    .如果 (等于 (.是否有子项目 (.最大化按钮), 假))
        _启动窗口.关闭记录集 (., 记录集句柄一)
        赋值 (脚本, 相加 (“select * from 总库  where 二级分类='”, .取项目文本 (.最大化按钮), “' and 零售价>0 order by 单据号”))
        输出调试文本 (脚本)
        赋值 (记录集句柄一, _启动窗口.查询 (., 脚本))
        _启动窗口.到首记录 (., 记录集句柄一)
        .判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄一), 假))
            置等待鼠标 ()
             ' 处理事件 ()
            
            赋值 (暂1, 到文本 (_启动窗口.读 (., 记录集句柄一, 4)))
            .如果 (不等于 (暂1, 暂2))
                .加入项目 (.最大化按钮, 到文本 (_启动窗口.读 (., 记录集句柄一, 4)), , , ) ' 编码
            .否则
                
            .如果结束
            赋值 (暂2, 暂1)
            _启动窗口.到后一记录 (., 记录集句柄一)
        .判断循环尾 ()
        _启动窗口.关闭记录集 (., 记录集句柄一)
    .否则
        
    .如果结束
    _启动窗口.关闭记录集 (., 记录集句柄)
    赋值 (脚本, 相加 (“select * from 总库 where 二级分类=”, “'”, .取项目文本 (.最大化按钮), “' and 零售价>0 order by 单据号”))
    输出调试文本 (脚本)
    赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
    _启动窗口.到首记录 (., 记录集句柄)
    销售添表 ()
    .扩展 (.最大化按钮)
.如果真结束
.如果真 (等于 (.取缩进层次 (.最大化按钮), 3))
    _启动窗口.关闭记录集 (., 记录集句柄)
    赋值 (脚本, 相加 (“select * from 总库 where 商品名称=”, “'”, .取项目文本 (.最大化按钮), “' and 二级分类='”, .取父项目 (.最大化按钮).取项目文本 (), “'and 零售价>0 order by 单据号”))
    输出调试文本 (脚本)
    赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
    _启动窗口.到首记录 (., 记录集句柄)
    销售添表 ()
.如果真结束



.子程序 写汇总表头信息, 空白型, , 
赋值 (., 1)
赋值 (., 70)
赋值 (., 0)
赋值 (., 0)
赋值 (., 11)
相减 (., 1).未知支持库函数_9 (0, 1, “商品编码”)
相减 (., 1).未知支持库函数_9 (1, 1, “商品名称”)
相减 (., 1).未知支持库函数_9 (2, 1, “拼音码”)
相减 (., 1).未知支持库函数_9 (3, 1, “规格”)
相减 (., 1).未知支持库函数_9 (4, 1, “库存数量”)
相减 (., 1).未知支持库函数_9 (5, 1, “入库日期”)
相减 (., 1).未知支持库函数_9 (6, 1, “零售价”)
相减 (., 1).未知支持库函数_9 (7, 1, “一级分类”)
相减 (., 1).未知支持库函数_9 (8, 1, “二级分类”)
相减 (., 1).未知支持库函数_9 (9, 1, “产地”)
相减 (., 1).未知支持库函数_9 (10, 1, “库存id”)
赋值 (., 1)

.子程序 _按钮3_被单击, 空白型, , 
赋值 (., 1)

.子程序 _按钮2_被单击, 空白型, , 
_启动窗口.关闭记录集 (., 记录集句柄)
赋值 (脚本, “select * from 总库 where 零售价>0 order by 单据号”)
输出调试文本 (脚本)
赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
_启动窗口.到首记录 (., 记录集句柄)
赋值 (., 1)
赋值 (., 11)
.判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
    置等待鼠标 ()
     ' 处理事件 ()
    
     ' 处理事件 ()
    .未知支持库函数_38 () ' <!!!>
    相减 (., 1).未知支持库函数_9 (0, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “商品编码”)))
    相减 (., 1).未知支持库函数_9 (1, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “商品名称”)))
    相减 (., 1).未知支持库函数_9 (2, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “拼音码”)))
    相减 (., 1).未知支持库函数_9 (3, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “规格”)))
    相减 (., 1).未知支持库函数_9 (4, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “库存数量”)))
    相减 (., 1).未知支持库函数_9 (6, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “零售价”)))
    相减 (., 1).未知支持库函数_9 (7, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “一级分类”)))
    相减 (., 1).未知支持库函数_9 (8, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “二级分类”)))
    相减 (., 1).未知支持库函数_9 (9, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “产地”)))
    相减 (., 1).未知支持库函数_9 (10, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “库存id”)))
    
    _启动窗口.到后一记录 (., 记录集句柄)
.判断循环尾 ()
_启动窗口.关闭记录集 (., 记录集句柄)


.子程序 _分组框2_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 



.子程序 _按钮4_被单击, 空白型, , 
销毁 ()

.子程序 销售添表, 空白型, , 
赋值 (库存基数, 0)
赋值 (库存总数累计, 0)
赋值 (., 1)
赋值 (., 11)
.判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
    置等待鼠标 ()
     ' 处理事件 ()
    
    .如果 (不等于 (_启动窗口.读 (., 记录集句柄, “库存数量”), 0))
        
        .未知支持库函数_38 () ' <!!!>
        相减 (., 1).未知支持库函数_9 (0, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “商品编码”)))
        相减 (., 1).未知支持库函数_9 (1, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “商品名称”)))
        相减 (., 1).未知支持库函数_9 (2, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “拼音码”)))
        相减 (., 1).未知支持库函数_9 (3, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “规格”)))
        相减 (., 1).未知支持库函数_9 (4, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “库存数量”)))
        相减 (., 1).未知支持库函数_9 (5, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “入库日期”)))
        相减 (., 1).未知支持库函数_9 (6, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “零售价”)))
        相减 (., 1).未知支持库函数_9 (7, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “一级分类”)))
        相减 (., 1).未知支持库函数_9 (8, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “二级分类”)))
        相减 (., 1).未知支持库函数_9 (9, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “产地”)))
        相减 (., 1).未知支持库函数_9 (10, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “库存id”)))
        
    .否则
        
    .如果结束
    _启动窗口.到后一记录 (., 记录集句柄)
.判断循环尾 ()
_启动窗口.关闭记录集 (., 记录集句柄)



.子程序 添汇总表, 空白型, , 
.局部变量 编号, 空白型, , , 
.局部变量 编号一, 空白型, , , 
.局部变量 总数存, 空白型, , , 
.局部变量 总数存一, 空白型, , , 
.局部变量 匿名局部变量_4137, 空白型, , , 

赋值 (库存基数, 0)
赋值 (库存总数累计, 0)
赋值 (编号一, 8.888889898889e+027)
.判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
    置等待鼠标 ()
     ' 处理事件 ()
    
    赋值 (编号, _启动窗口.读 (., 记录集句柄, 6))
    赋值 (总数存一, _启动窗口.读 (., 记录集句柄, 10))
    .如果 (等于 (编号, 编号一))
        赋值 (总数存, 相加 (总数存, _启动窗口.读 (., 记录集句柄, 10)))
    .否则
        .未知支持库函数_38 () ' <!!!>
        相减 (., 1).未知支持库函数_9 (0, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 6))) ' 编码
        相减 (., 1).未知支持库函数_9 (1, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 4))) ' 名称
        相减 (., 1).未知支持库函数_9 (2, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 2))) ' 入库日期
        相减 (., 1).未知支持库函数_9 (3, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 17))) ' 规格
        
        相减 (., 1).未知支持库函数_9 (5, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 8))) ' 数量
        相减 (., 1).未知支持库函数_9 (6, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 14))) ' 进货价
        相减 (., 1).未知支持库函数_9 (7, 1, 到文本 (_启动窗口.读 (., 记录集句柄, 20))) ' 产地
        相减 (., 1).未知支持库函数_9 (4, 1, 到文本 (总数存)) ' 总数
    .如果结束
    _启动窗口.到后一记录 (., 记录集句柄)
.判断循环尾 ()
_启动窗口.关闭记录集 (., 记录集句柄)


.子程序 _销售商品选择_创建完毕, 空白型, , 
赋值 (., 经顶边)
赋值 (., 经左边)
赋值 (., 假)

销售商品选择.调整层次 ()
首次读取并显示汇总记录 ()

.子程序 _表格1_被双击, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 行, 整数型, , , 
.局部变量 列, 整数型, , , 
.局部变量 t, 空白型, , , 
.局部变量 hh, 空白型, , , 

.如果 (等于 (未知支持库函数_3 ().未知支持库函数_10 (6), “0”))
    信息框 (“本商品未进行销售订价,请进行进货登记!”, 0, )
    返回 ()
.否则
    
.如果结束

 ' 计次循环首 (表格行数累计, hh)
 ' 如果 (销售单.表格1.取数据 (hh, 10) ＝ 表格1.取数据 (表格1.取光标行号 (), 10))
 ' 信息框 (“已有同样商品，请直接在销售单内修改其数量！”, 0, )
 ' 返回 ()




赋值 (行, 未知支持库函数_3 ())
赋值 (列, 11)
销售单.未知支持库函数_38 (., , )
赋值 (表格行数累计, 相加 (表格行数累计, 1))
.计次循环首 (列, t)
    .如果 (不等于 (t, 6))
        销售单.未知支持库函数_9 (., 表格行数累计, 相减 (t, 1), 1, 未知支持库函数_3 ().未知支持库函数_10 (相减 (t, 1)))
    .否则
        
    .如果结束
    
.计次循环尾 ()
赋值 (零售价, 到数值 (未知支持库函数_3 ().未知支持库函数_10 (6)))
销毁 ()
载入 (销售输入, , 真)

.子程序 _表格1_光标位置改变, 空白型, , 


.子程序 _编辑框1_内容被改变, 空白型, , 
_启动窗口.关闭记录集 (., 记录集句柄)
赋值 (脚本, 相加 (“select * from 总库 where 拼音码”, “ like '%”, .内容, “%' and 零售价>0”))
输出调试文本 (脚本)
赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
_启动窗口.到首记录 (., 记录集句柄)
销售添表 ()


.子程序 _分隔条1_被拖动, 空白型, , 
.参数 原位置, 整数型, , 
.参数 目的位置, 整数型, , 

.局部变量 新左边, 整数型, , , 

.如果真 (小于 (目的位置, 8))
    赋值 (目的位置, 8)
.如果真结束
.如果真 (大于 (目的位置, 相减 (., 20)))
    赋值 (目的位置, 相减 (., 20))
.如果真结束
赋值 (., 目的位置)
赋值 (.宽度, 相减 (., .左边))
赋值 (新左边, 相加 (., .))
新左边.移动 (相减 (., 12, 新左边), )



.子程序 _树型框1_双击项目, 空白型, , 


.窗口程序集 窗口程序集29, , , 

.程序集变量 是否完成, 逻辑型, , , 
.子程序 _销售输入_创建完毕, 空白型, , 
赋值 (.内容, 到文本 (零售价))
赋值 (是否完成, 假)

.子程序 _购买数量_内容被改变, 空白型, , 
.如果 (大于 (到数值 (.内容), 到数值 (销售单.未知支持库函数_10 (., 表格行数累计, 4))))
    信息框 (“售出数量大于库存数量!”, 0, )
    赋值 (.内容, “”)
    赋值 (.内容, “”)
    赋值 (.内容, “”)
    返回 ()
.否则
    赋值 (.内容, 到文本 (相乘 (四舍五入 (到数值 (.内容), 2), 四舍五入 (零售价, 2))))
    赋值 (.内容, .内容)
    
.如果结束


.子程序 _按钮1_被单击, 空白型, , 
.如果 (等于 (.内容, “”))
    信息框 (“请输入数量!”, 0, )
    返回 ()
.否则
    .如果 (等于 (.内容, “”)) ' 备注内容
        销售单.未知支持库函数_9 (., 表格行数累计, 13, 1, “--”)
    .否则
        销售单.未知支持库函数_9 (., 表格行数累计, 13, 1, .内容)
    .如果结束
    
    销售单.未知支持库函数_9 (., 表格行数累计, 11, 1, .内容)
    销售单.未知支持库函数_9 (., 表格行数累计, 12, 1, .内容)
    销售单.未知支持库函数_9 (., 表格行数累计, 5, 1, .内容)
    
    赋值 (应付合计, 相加 (应付合计, 到数值 (.内容)))
    赋值 (已付合计, 相加 (已付合计, 到数值 (.内容)))
    赋值 (销售单..内容, 到文本 (应付合计))
    赋值 (销售单..内容, 到文本 (已付合计))
    赋值 (是否完成, 真)
    .如果 (大于或等于 (表格行数累计, 1))
        赋值 (销售单..禁止, 真)
        赋值 (销售单..禁止, 真)
    .否则
        
    .如果结束
    
.如果结束
销毁 ()


.子程序 _销售输入_将被销毁, 空白型, , 
.如果 (等于 (是否完成, 假))
    销售单.未知支持库函数_36 (., 表格行数累计)
    赋值 (表格行数累计, 相减 (表格行数累计, 1))
.否则
    
.如果结束


.窗口程序集 窗口程序集30, , , 

.子程序 _按钮1_被单击, 空白型, , 
_启动窗口.关闭记录集 (., 记录集句柄)
赋值 (脚本, “select * from 商品分类”)
赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
_启动窗口.到首记录 (., 记录集句柄)
.判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
    置等待鼠标 ()
     ' 处理事件 ()
    
    .如果 (或者 (等于 (_启动窗口.读 (., 记录集句柄, 1), .内容), 等于 (_启动窗口.读 (., 记录集句柄, 2), .内容)))
        信息框 (“已有相同分类名！”, 0, )
        返回 ()
    .否则
        
    .如果结束
    
    _启动窗口.到后一记录 (., 记录集句柄)
.判断循环尾 ()
.如果 (或者 (等于 (.内容, “”), 等于 (.内容, “”)))
    信息框 (“请完整添写信息！”, 0, )
    返回 ()
.否则
    _启动窗口.关闭记录集 (., 记录集句柄)
    赋值 (脚本, 相加 (“insert into 商品分类 (商品类名,一级,二级,备注)  values ('”, .内容, “', 1”, “, 0 , '”, .内容, “')”))
    输出调试文本 (脚本)
    .如果 (等于 (_启动窗口.执行 (., 脚本, ), 假))
        信息框 (“执行失败，请重试！”, 0, )
    .否则
        信息框 (“添加一级分类成功！”, 0, )
        _启动窗口.关闭记录集 (., 记录集句柄)
        读取并显示 ()
        
    .如果结束
    
.如果结束


.子程序 _单选框1_被单击, 空白型, , 
.如果 (等于 (.选中, 真))
    赋值 (.现行子夹, 1)
    _启动窗口.关闭记录集 (., 记录集句柄)
    读取并显示 ()
.否则
    
.如果结束


.子程序 _单选框2_被单击, 空白型, , 
_启动窗口.关闭记录集 (., 记录集句柄)
.如果 (等于 (.选中, 真))
    赋值 (脚本, 相加 (“select * from 商品分类 where 一级 ”, “ = ”, “'”, “1”, “'”))
    赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
    _启动窗口.到首记录 (., 记录集句柄)
    清空 ()
    .判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
        置等待鼠标 ()
        处理事件 ()
        
        _启动窗口.读 (., 记录集句柄, 1).加入项目 ()
        _启动窗口.到后一记录 (., 记录集句柄)
    .判断循环尾 ()
    读取并显示2 ()
    赋值 (.现行子夹, 2)
.否则
    
.如果结束


.子程序 读取并显示, 空白型, , 
.局部变量 t, 空白型, , , 
.局部变量 文本, 文本型, , , 
.局部变量 tt, 空白型, , , 

赋值 (.图标, {  })
赋值 (脚本, 相加 (“select * from 商品分类 where 一级 ”, “ = ”, “'”, “1”, “'”))
赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
_启动窗口.到首记录 (., 记录集句柄)
.判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
    置等待鼠标 ()
     ' 处理事件 ()
    
    .加入项目 (_启动窗口.读 (., 记录集句柄, 1), , , )
    _启动窗口.到后一记录 (., 记录集句柄)
.判断循环尾 ()
_启动窗口.关闭记录集 (., 记录集句柄)
赋值 (t, 0)
.判断循环首 (小于 (t, 取项目数 ()))
    置等待鼠标 ()
     ' 处理事件 ()
    
    赋值 (文本, t.取项目文本 ())
    输出调试文本 (文本)
    赋值 (脚本, 相加 (“select * from 商品分类 where 二级 ”, “ = ”, “'”, “1”, “' and ”, “商品类名 = '”, 文本, “'”))
    输出调试文本 (脚本)
    赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
    _启动窗口.到首记录 (., 记录集句柄)
    .判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
        t.加入项目 (_启动窗口.读 (., 记录集句柄, 2), , , )
        _启动窗口.到后一记录 (., 记录集句柄)
    .判断循环尾 ()
    赋值 (t, 相加 (t, 1))
    _启动窗口.关闭记录集 (., 记录集句柄)
    
.判断循环尾 ()


.子程序 读取并显示2, 空白型, , 
.局部变量 t, 空白型, , , 
.局部变量 文本, 文本型, , , 
.局部变量 tt, 空白型, , , 

_启动窗口.关闭记录集 (., 记录集句柄)
赋值 (.图标, {  })
赋值 (脚本, 相加 (“select * from 商品分类 where 一级 ”, “ = ”, “'”, “1”, “'”))
输出调试文本 (脚本)

赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
_启动窗口.到首记录 (., 记录集句柄)
.判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
    置等待鼠标 ()
     ' 处理事件 ()
    
    .加入项目 (_启动窗口.读 (., 记录集句柄, 1), , , )
    _启动窗口.到后一记录 (., 记录集句柄)
.判断循环尾 ()
_启动窗口.关闭记录集 (., 记录集句柄)
赋值 (t, 0)
.判断循环首 (小于 (t, 取项目数 ()))
    赋值 (文本, t.取项目文本 ())
    输出调试文本 (文本)
    赋值 (脚本, 相加 (“select * from 商品分类 where 二级 ”, “ = ”, “'”, “1”, “' and ”, “商品类名 = '”, 文本, “'”))
    输出调试文本 (脚本)
    赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
    _启动窗口.到首记录 (., 记录集句柄)
    .判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
        置等待鼠标 ()
         ' 处理事件 ()
        
        t.加入项目 (_启动窗口.读 (., 记录集句柄, 2), , , )
        _启动窗口.到后一记录 (., 记录集句柄)
    .判断循环尾 ()
    赋值 (t, 相加 (t, 1))
    _启动窗口.关闭记录集 (., 记录集句柄)
    
.判断循环尾 ()


.子程序 _按钮3_被单击, 空白型, , 
_启动窗口.关闭记录集 (., 记录集句柄)
赋值 (脚本, “select * from 商品分类”)
输出调试文本 (脚本)
赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
_启动窗口.到首记录 (., 记录集句柄)
.判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
    .如果 (或者 (等于 (_启动窗口.读 (., 记录集句柄, 2), .内容), 等于 (_启动窗口.读 (., 记录集句柄, 1), .内容)))
        信息框 (“已有相同分类名！”, 0, )
        返回 ()
    .否则
        
    .如果结束
    
    _启动窗口.到后一记录 (., 记录集句柄)
.判断循环尾 ()

.如果 (或者 (等于 (.内容, “”), 等于 (.内容, “”), 等于 (.内容, “”)))
    信息框 (“请完整添写信息！”, 0, )
    返回 ()
.否则
    _启动窗口.关闭记录集 (., 记录集句柄)
    赋值 (脚本, 相加 (“insert into 商品分类 (商品类名,二级类名,一级,二级,备注)  values ('”, .取项目文本 (.现行选中项), “','”, .内容, “', 0”, “, 1 , '”, .内容, “')”))
    输出调试文本 (脚本)
    .如果 (等于 (_启动窗口.执行 (., 脚本, ), 假))
        信息框 (“执行失败，请重试！”, 0, )
    .否则
        信息框 (“执行成功！”, 0, )
        _启动窗口.关闭记录集 (., 记录集句柄)
        读取并显示2 ()
    .如果结束
    
    
.如果结束


.子程序 _按钮2_被单击, 空白型, , 
销毁 ()

.子程序 _按钮4_被单击, 空白型, , 
销毁 ()

.子程序 _添加商品分类入库_将被销毁, 空白型, , 
_启动窗口.关闭记录集 (., 记录集句柄)


.子程序 _添加商品分类入库_创建完毕, 空白型, , 


.窗口程序集 窗口程序集31, , , 

.子程序 _按钮1_被单击, 空白型, , 
.如果 (或者 (等于 (.内容, “”), 等于 (到数值 (.内容), 0)))
    赋值 (.内容, “”)
    返回 ()
.否则
    商品入库.未知支持库函数_9 (., 相减 (商品入库.., 1), 4, 1, 到文本 (到数值 (.内容)))
    销毁 ()
    
.如果结束


.窗口程序集 窗口程序集32, , , 

.子程序 _进货退货记录_创建完毕, 空白型, , 
写退表头信息 ()
赋值 (循环中, 假)
赋值 (., 经顶边)
赋值 (., 经左边)
赋值 (., 假)


.子程序 _按钮2_被单击, 空白型, , 
.局部变量 t, 空白型, , , 

清空 ()
_启动窗口.关闭记录集 (., 记录集句柄)
赋值 (脚本, “select distinct(退货单号) from 退货记录 order by 退货单号”) ' 脚本 ＝ “select distinct(单据号),(select count(*) as 数量 from 总库) from 总库 order by 单据号”
赋值 (记录集句柄, _启动窗口.查询 (., 脚本)) ' 对数据库排序：order by  求合：sum
_启动窗口.到首记录 (., 记录集句柄)
.判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
    置等待鼠标 ()
     ' 处理事件 ()
    
    .加入项目 (到文本 (_启动窗口.读 (., 记录集句柄, “退货单号”)), , , )
    赋值 (.禁止, 真)
    _启动窗口.到后一记录 (., 记录集句柄)
.判断循环尾 ()
赋值 (.禁止, 假)

.子程序 写退表头信息, 空白型, , 
赋值 (., 60)
赋值 (., 1)
赋值 (., 0)

赋值 (., 10)
0.未知支持库函数_32 (100)
1.未知支持库函数_32 (150)
相减 (., 1).未知支持库函数_9 (0, 1, “入库单号”)
相减 (., 1).未知支持库函数_9 (1, 1, “商品名称”)
相减 (., 1).未知支持库函数_9 (2, 1, “商品编码”)
相减 (., 1).未知支持库函数_9 (3, 1, “原进货量”)
0.未知支持库函数_25 (4, 相减 (., 1), 6, 3)
相减 (., 1).未知支持库函数_9 (4, 1, “进货价”)
相减 (., 1).未知支持库函数_9 (5, 1, “退货数量”)
相减 (., 1).未知支持库函数_9 (6, 1, “应找金额”)
7.未知支持库函数_32 (100)
8.未知支持库函数_32 (100)
相减 (., 1).未知支持库函数_9 (7, 1, “退货日期”)
相减 (., 1).未知支持库函数_9 (8, 1, “退货原因”)
相减 (., 1).未知支持库函数_9 (9, 1, “供货商”)



.子程序 _树型框1_项目被选择, 空白型, , 
.参数 选择方式, 整数型, , 

_启动窗口.关闭记录集 (., 记录集句柄)
赋值 (脚本, 相加 (“select * from 退货记录 where 退货单号='”, .取项目文本 (.最大化按钮), “'”))
输出调试文本 (脚本)
赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
添置退表格数据 ()

.子程序 _按钮1_被单击, 空白型, , 
.局部变量 开始, 文本型, , , 
.局部变量 结束, 文本型, , , 
.局部变量 t, 空白型, , , 
.局部变量 项目名暂存, 文本型, , , 
.局部变量 项目名暂存2, 文本型, , , 

.如果 (小于 (.今天, .今天))
    信息框 (“请注意开始日期和结束日期！”, 0, )
    返回 ()
.否则
    赋值 (开始, 相加 (“#”, 未知支持库函数_12 (.今天, “%y-%m-%d”), “#”))
    赋值 (结束, 相加 (“#”, 未知支持库函数_12 (.今天, “%y-%m-%d”), “#”))
    赋值 (., 1)
    赋值 (脚本, 相加 (“select count(*) from 退货记录  where 退货日期 >= ”, 开始, “ and 退货日期 <= ”, 结束))
    输出调试文本 (脚本)
    _启动窗口.关闭记录集 (., 记录集句柄一)
    赋值 (记录集句柄一, _启动窗口.查询 (., 脚本))
    赋值 (t, _启动窗口.读 (., 记录集句柄一, 1))
    
    _启动窗口.关闭记录集 (., 记录集句柄一)
    .如果 (等于 (t, 0))
        信息框 (“没有找到相关数据！”, 0, )
    .否则
        _启动窗口.关闭记录集 (., 记录集句柄一)
        赋值 (脚本, 相加 (“select * from 退货记录  where 退货日期 >= ”, 开始, “ and 退货日期 <= ”, 结束))
        
        输出调试文本 (脚本)
        赋值 (记录集句柄一, _启动窗口.查询 (., 脚本))
        赋值 (.图标, {  })
        _启动窗口.到首记录 (., 记录集句柄一)
        .计次循环首 (t, )
            赋值 (.禁止, 真)
            赋值 (项目名暂存, _启动窗口.读 (., 记录集句柄一, “退货单号”))
            .如果 (不等于 (项目名暂存, 项目名暂存2))
                .加入项目 (项目名暂存, , , )
                
            .否则
                
            .如果结束
            赋值 (项目名暂存2, 项目名暂存)
            _启动窗口.到后一记录 (., 记录集句柄一)
        .计次循环尾 ()
        赋值 (.禁止, 假)
        .如果 (等于 (.选中, 真))
            _启动窗口.关闭记录集 (., 记录集句柄)
            赋值 (脚本, 相加 (“select * from 退货记录  where 退货日期 >= ”, 开始, “ and 退货日期 <= ”, 结束))
            赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
            _启动窗口.到首记录 (., 记录集句柄)
            添置退表格数据 ()
            
        .否则
            
        .如果结束
        
    .如果结束
    
    
.如果结束


.子程序 添置退表格数据, 空白型, , 
_启动窗口.到首记录 (., 记录集句柄)
赋值 (., 1)
 ' 表格1.列数 ＝ 10
.判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
     ' 处理事件 ()
    置等待鼠标 ()
    赋值 (循环中, 真)
    .如果真 (等于 (退出与否, 真))
        赋值 (退出与否, 假)
        信息框 (“用户终止”, 0, )
        跳出循环 ()
    .如果真结束
    .未知支持库函数_38 () ' <!!!>
    相减 (., 1).未知支持库函数_9 (0, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “入库单号”)))
    相减 (., 1).未知支持库函数_9 (1, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “商品名称”)))
    相减 (., 1).未知支持库函数_9 (2, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “商品编码”)))
    相减 (., 1).未知支持库函数_9 (3, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “原进货量”)))
    相减 (., 1).未知支持库函数_9 (4, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “进货价”)))
    相减 (., 1).未知支持库函数_9 (5, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “退货数量”)))
    相减 (., 1).未知支持库函数_9 (6, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “应找回金额”)))
    相减 (., 1).未知支持库函数_9 (7, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “退货日期”)))
    相减 (., 1).未知支持库函数_9 (8, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “退货原因”)))
    相减 (., 1).未知支持库函数_9 (9, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “供货商”)))
     ' 处理事件 ()
    _启动窗口.到后一记录 (., 记录集句柄)
.判断循环尾 ()
赋值 (循环中, 假)

_启动窗口.关闭记录集 (., 记录集句柄)


.子程序 _按钮3_被单击, 空白型, , 
赋值 (., 1)

.子程序 _按钮4_被单击, 空白型, , 
赋值 (表格文件名, 相加 (取运行目录 (), “\wgid\进货退货记录”))
.如果 (等于 (表格文件名.未知支持库函数_55 (), 真))
    置文件属性 (表格文件名, 1)
    赋值 (表头标题, “进货退货记录”)
    载入 (打印, , 真)
.否则
    信息框 (“打印格式文件出错，操作失败！”, 相加 (0, #错误图标), )
.如果结束



.子程序 _按钮5_被单击, 空白型, , 
赋值 (脚本, “select * from 退货记录 ”)
赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
_启动窗口.到首记录 (., 记录集句柄)
添置退表格数据 ()


.子程序 _按钮6_被单击, 空白型, , 
.如果 (等于 (循环中, 真))
    赋值 (退出与否, 真)
.否则
    
.如果结束





.子程序 _分隔条1_被拖动, 空白型, , 
.参数 原位置, 整数型, , 
.参数 目的位置, 整数型, , 

.局部变量 新左边, 整数型, , , 

.如果真 (小于 (目的位置, 8))
    赋值 (目的位置, 8)
.如果真结束
.如果真 (大于 (目的位置, 相减 (., 20)))
    赋值 (目的位置, 相减 (., 20))
.如果真结束
赋值 (., 目的位置)
赋值 (.宽度, 相减 (., .左边))
赋值 (新左边, 相加 (., .))
新左边.移动 (相减 (., 12, 新左边), )


.窗口程序集 窗口程序集33, , , 

.子程序 _编辑框1_内容被改变, 空白型, , 


.子程序 _库存商品明细_创建完毕, 空白型, , 


.窗口程序集 窗口程序集34, , , 

.窗口程序集 窗口程序集35, , , 

.子程序 _销售退货选择单据_创建完毕, 空白型, , 
赋值 (., 经顶边)
赋值 (., 经左边)
赋值 (., 假)

写销退表头信息 ()

.子程序 _按钮2_被单击, 空白型, , 
.局部变量 t, 空白型, , , 

赋值 (.内容, “”)
赋值 (., 1)
清空 ()
_启动窗口.关闭记录集 (., 记录集句柄)
赋值 (脚本, “select distinct(单据号) from 销售 order by 单据号”) ' 脚本 ＝ “select distinct(单据号),(select count(*) as 数量 from 总库) from 总库 order by 单据号”
赋值 (记录集句柄, _启动窗口.查询 (., 脚本)) ' 对数据库排序：order by  求合：sum
_启动窗口.到首记录 (., 记录集句柄)
.判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
    置等待鼠标 ()
     ' 处理事件 ()
    
     ().加入项目 (_启动窗口.读 (., 记录集句柄, 1), , , )
    _启动窗口.到后一记录 (., 记录集句柄)
.判断循环尾 ()

.子程序 写销退表头信息, 空白型, , 
赋值 (., 1)
赋值 (., 70)
赋值 (., 0)
赋值 (., 0)
赋值 (., 18)
相减 (., 1).未知支持库函数_9 (0, 1, “商品编码”)
1.未知支持库函数_32 (150)
相减 (., 1).未知支持库函数_9 (1, 1, “商品名称”)
相减 (., 1).未知支持库函数_9 (2, 1, “拼音码”)
相减 (., 1).未知支持库函数_9 (3, 1, “规格”)
相减 (., 1).未知支持库函数_9 (4, 1, “购买客户”)
相减 (., 1).未知支持库函数_9 (5, 1, “销售数量”)
相减 (., 1).未知支持库函数_9 (6, 1, “零售价”)
相减 (., 1).未知支持库函数_9 (7, 1, “一级分类”)
相减 (., 1).未知支持库函数_9 (8, 1, “二级分类”)
相减 (., 1).未知支持库函数_9 (9, 1, “产地”)
相减 (., 1).未知支持库函数_9 (10, 1, “库存id”)
相减 (., 1).未知支持库函数_9 (11, 1, “应收金额”)
相减 (., 1).未知支持库函数_9 (12, 1, “实收金额”)
相减 (., 1).未知支持库函数_9 (13, 1, “销售日期”)
相减 (., 1).未知支持库函数_9 (14, 1, “操作员”)
相减 (., 1).未知支持库函数_9 (15, 1, “备注”)
相减 (., 1).未知支持库函数_9 (16, 1, “库存id”)
相减 (., 1).未知支持库函数_9 (17, 1, “销售id”)
赋值 (., 1)


.子程序 _树型框1_项目被选择, 空白型, , 
.参数 选择方式, 整数型, , 

_启动窗口.关闭记录集 (., 记录集句柄)
赋值 (脚本, 相加 (“select * from 销售 where 单据号=”, “'”, .取项目文本 (.最大化按钮), “' ”))
输出调试文本 (脚本)
赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
赋值 (.内容, .取项目文本 (.最大化按钮))
添置销退表格数据 ()

.子程序 _按钮1_被单击, 空白型, , 
.局部变量 开始, 文本型, , , 
.局部变量 结束, 文本型, , , 
.局部变量 t, 空白型, , , 
.局部变量 项目名暂存, 文本型, , , 
.局部变量 项目名暂存2, 文本型, , , 

赋值 (.内容, “”)
清空 ()
赋值 (., 1)
.如果 (小于 (.今天, .今天))
    信息框 (“请注意开始日期和结束日期！”, 0, )
    返回 ()
.否则
    赋值 (开始, 相加 (“#”, 未知支持库函数_12 (.今天, “%y-%m-%d”), “#”))
    赋值 (结束, 相加 (“#”, 未知支持库函数_12 (.今天, “%y-%m-%d”), “#”))
    
    
    赋值 (脚本, 相加 (“select count(*) from 销售  where 销售日期 >= ”, 开始, “ and 销售日期 <= ”, 结束))
    输出调试文本 (脚本)
    _启动窗口.关闭记录集 (., 记录集句柄一)
    赋值 (记录集句柄一, _启动窗口.查询 (., 脚本))
    赋值 (t, _启动窗口.读 (., 记录集句柄一, 1))
    
    _启动窗口.关闭记录集 (., 记录集句柄一)
    .如果 (等于 (t, 0))
        信息框 (“没有找到相关数据！”, 0, )
    .否则
        _启动窗口.关闭记录集 (., 记录集句柄一)
        赋值 (脚本, 相加 (“select * from 销售  where 销售日期 >= ”, 开始, “ and 销售日期 <= ”, 结束))
        
        输出调试文本 (脚本)
        赋值 (记录集句柄一, _启动窗口.查询 (., 脚本))
        清空 ()
        _启动窗口.到首记录 (., 记录集句柄一)
        .计次循环首 (t, )
            赋值 (项目名暂存, _启动窗口.读 (., 记录集句柄一, 1))
            .如果 (不等于 (项目名暂存, 项目名暂存2))
                .加入项目 (项目名暂存, , , )
                
            .否则
                
            .如果结束
            赋值 (项目名暂存2, 项目名暂存)
            _启动窗口.到后一记录 (., 记录集句柄一)
        .计次循环尾 ()
        
    .如果结束
    
    
.如果结束


.子程序 添置销退表格数据, 空白型, , 
赋值 (., 1)
_启动窗口.到首记录 (., 记录集句柄)
.判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
     ' 如果 (_启动窗口.外部数据库1.读 (记录集句柄, “实付金额”) ≤ 0)
     ' 信息框 (“本单据为欠款未付单据，请到欠款单位往来帐进行退货处理！”, 0, )
     ' 跳出循环 ()
    置等待鼠标 ()
     ' 处理事件 ()
    .未知支持库函数_38 () ' <!!!>
    相减 (., 1).未知支持库函数_9 (0, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “商品编码”)))
    相减 (., 1).未知支持库函数_9 (1, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “商品名称”)))
    相减 (., 1).未知支持库函数_9 (2, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “拼音码”)))
    相减 (., 1).未知支持库函数_9 (3, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “规格”)))
    相减 (., 1).未知支持库函数_9 (4, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “购买客户”)))
    相减 (., 1).未知支持库函数_9 (5, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “销售数量”)))
    相减 (., 1).未知支持库函数_9 (6, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “零售价”)))
    相减 (., 1).未知支持库函数_9 (7, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “一级分类”)))
    相减 (., 1).未知支持库函数_9 (8, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “二级分类”)))
    相减 (., 1).未知支持库函数_9 (9, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “产地”)))
    相减 (., 1).未知支持库函数_9 (10, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “库存id”)))
    相减 (., 1).未知支持库函数_9 (11, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “应付金额”)))
    相减 (., 1).未知支持库函数_9 (12, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “实付金额”)))
    相减 (., 1).未知支持库函数_9 (13, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “销售日期”)))
    相减 (., 1).未知支持库函数_9 (14, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “操作员”)))
    相减 (., 1).未知支持库函数_9 (15, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “备注”)))
    相减 (., 1).未知支持库函数_9 (16, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “库存id”)))
    相减 (., 1).未知支持库函数_9 (17, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “销售id”)))
    _启动窗口.到后一记录 (., 记录集句柄)
    
    
.判断循环尾 ()
_启动窗口.关闭记录集 (., 记录集句柄)


.子程序 _按钮3_被单击, 空白型, , 
赋值 (.内容, “”)
赋值 (., 1)
清空 ()

.子程序 _按钮4_被单击, 空白型, , 
_启动窗口.关闭记录集 (., 记录集句柄)
_启动窗口.关闭记录集 (., 记录集句柄一)

销毁 ()

.子程序 _按钮5_被单击, 空白型, , 
赋值 (文本, .内容)
.如果 (并且 (不等于 (.内容, “”), 不等于 (.取项目文本 (.最大化按钮), “”)))
    载入 (销售退货最终单, , 真)
    销毁 ()
.否则
    信息框 (“没有选择销售单，无法继续！”, 0, )
.如果结束


.子程序 _表格1_光标位置改变, 空白型, , 


.子程序 _分隔条1_被拖动, 空白型, , 
.参数 原位置, 整数型, , 
.参数 目的位置, 整数型, , 

.局部变量 新左边, 整数型, , , 

.如果真 (小于 (目的位置, 8))
    赋值 (目的位置, 8)
.如果真结束
.如果真 (大于 (目的位置, 相减 (., 20)))
    赋值 (目的位置, 相减 (., 20))
.如果真结束
赋值 (., 目的位置)
赋值 (.宽度, 相减 (., .左边))
赋值 (新左边, 相加 (., .))
新左边.移动 (相减 (., 12, 新左边), )



.窗口程序集 窗口程序集36, , , 

.子程序 _销售退货最终单_创建完毕, 空白型, , 
赋值 (., 经顶边)
赋值 (., 经左边)
赋值 (., 假)

添写销退表头 ()
有否销售退货单号 ()
添置销退货表格数据 ()


.子程序 有否销售退货单号, 空白型, , 
.局部变量 真假, 逻辑型, , , 
.局部变量 t, 空白型, , , 


赋值 (真假, 假)
赋值 (t, 1)
.判断循环首 (不等于 (真假, 真))
    赋值 (入库单号临时, 相加 (“销退”, 未知支持库函数_12 (.今天, “%y-%m-%d”), “-”, 到文本 (t)))
    输出调试文本 (入库单号临时)
    赋值 (脚本, 相加 (“select * from 销售退货记录 where 销售退货单号='”, 入库单号临时, “'”))
    赋值 (记录集句柄一, _启动窗口.查询 (., 脚本))
    _启动窗口.到首记录 (., 记录集句柄一)
    输出调试文本 (到文本 (t))
    .如果 (等于 (_启动窗口.读 (., 记录集句柄一, “销售退货单号”), 入库单号临时))
        赋值 (t, 相加 (t, 1))
        _启动窗口.到后一记录 (., 记录集句柄一)
    .否则
        赋值 (入库单号临时, 相加 (“销退”, 未知支持库函数_12 (.今天, “%y-%m-%d”), “-”, 到文本 (t)))
        赋值 (.内容, 入库单号临时)
        跳出循环 ()
    .如果结束
    
.判断循环尾 ()


.子程序 添写销退表头, 空白型, , 
赋值 (., 1)
赋值 (., 70)
赋值 (., 0)
赋值 (., 0)
赋值 (., 19)
相减 (., 1).未知支持库函数_9 (0, 1, “商品编码”)
相减 (., 1).未知支持库函数_9 (1, 1, “商品名称”)
相减 (., 1).未知支持库函数_9 (2, 1, “拼音码”)
相减 (., 1).未知支持库函数_9 (3, 1, “规格”)
相减 (., 1).未知支持库函数_9 (4, 1, “购买客户”)
相减 (., 1).未知支持库函数_9 (5, 1, “销售数量”)
相减 (., 1).未知支持库函数_9 (6, 1, “退货数量”)
相减 (., 1).未知支持库函数_9 (7, 1, “零售价”)
相减 (., 1).未知支持库函数_9 (8, 1, “一级分类”)
相减 (., 1).未知支持库函数_9 (9, 1, “二级分类”)
相减 (., 1).未知支持库函数_9 (10, 1, “产地”)
相减 (., 1).未知支持库函数_9 (11, 1, “库存id”)
相减 (., 1).未知支持库函数_9 (12, 1, “应付金额”)
相减 (., 1).未知支持库函数_9 (13, 1, “实收金额”)
相减 (., 1).未知支持库函数_9 (14, 1, “销售日期”)
相减 (., 1).未知支持库函数_9 (15, 1, “操作员”)
相减 (., 1).未知支持库函数_9 (16, 1, “退货原因”)
相减 (., 1).未知支持库函数_9 (17, 1, “应找回金额”)
相减 (., 1).未知支持库函数_9 (18, 1, “销售id”)
赋值 (., 1)
_启动窗口.关闭记录集 (., 记录集句柄)
赋值 (脚本, 相加 (“select * from 销售 where 单据号=”, “'”, 文本, “'”))
输出调试文本 (脚本)
赋值 (记录集句柄, _启动窗口.查询 (., 脚本))


.子程序 添置销退货表格数据, 空白型, , 
_启动窗口.到首记录 (., 记录集句柄)
赋值 (表格行数累计, 0)

.判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
    置等待鼠标 ()
     ' 处理事件 ()
    
    赋值 (表格行数累计, 相加 (表格行数累计, 1))
    .未知支持库函数_38 () ' <!!!>
    相减 (., 1).未知支持库函数_9 (0, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “商品编码”)))
    相减 (., 1).未知支持库函数_9 (1, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “商品名称”)))
    相减 (., 1).未知支持库函数_9 (2, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “拼音码”)))
    相减 (., 1).未知支持库函数_9 (3, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “规格”)))
    相减 (., 1).未知支持库函数_9 (4, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “购买客户”)))
    相减 (., 1).未知支持库函数_9 (5, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “销售数量”)))
    相减 (., 1).未知支持库函数_9 (7, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “零售价”)))
    相减 (., 1).未知支持库函数_9 (8, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “一级分类”)))
    相减 (., 1).未知支持库函数_9 (9, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “二级分类”)))
    相减 (., 1).未知支持库函数_9 (10, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “产地”)))
    相减 (., 1).未知支持库函数_9 (11, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “库存id”)))
    相减 (., 1).未知支持库函数_9 (12, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “应付金额”)))
    相减 (., 1).未知支持库函数_9 (13, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “实付金额”)))
    相减 (., 1).未知支持库函数_9 (14, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “销售日期”)))
    相减 (., 1).未知支持库函数_9 (15, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “操作员”)))
    相减 (., 1).未知支持库函数_9 (18, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “销售id”)))
    _启动窗口.到后一记录 (., 记录集句柄)
.判断循环尾 ()
_启动窗口.关闭记录集 (., 记录集句柄)


.子程序 _按钮1_被单击, 空白型, , 
销毁 ()
赋值 (销售退货选择单据., 真)

.子程序 _按钮5_被单击, 空白型, , 


.子程序 _按钮6_被单击, 空白型, , 
.局部变量 t, 空白型, , , 
.局部变量 库存id, 文本型, , , 
.局部变量 销售数量, 文本型, , , 
.局部变量 退货数量, 文本型, , , 
.局部变量 现在销售数量, 文本型, , , 
.局部变量 商品编码, 文本型, , , 
.局部变量 销售单号, 文本型, , , 
.局部变量 商品名称, 文本型, , , 
.局部变量 退货日期, 文本型, , , 
.局部变量 备注, 文本型, , , 
.局部变量 应付金额, 文本型, , , 
.局部变量 现在应付金额, 文本型, , , 
.局部变量 是否成功, 逻辑型, , , 
.局部变量 客户名称, 文本型, , , 
.局部变量 应找回金额, 文本型, , , 
.局部变量 零售价j, 文本型, , , 
.局部变量 退货单号, 文本型, , , 
.局部变量 原已付金额, 文本型, , , 
.局部变量 销售id, 文本型, , , 
.局部变量 总库库存数量, 文本型, , , 
.局部变量 有否退货数量, 空白型, , , 
.局部变量 拼音码, 文本型, , , 
.局部变量 退货毛利, 文本型, , , 
.局部变量 销售日期, 文本型, , , 
.局部变量 进货价, 文本型, , , 

赋值 (有否退货数量, 0)
.计次循环首 (表格行数累计, t)
    赋值 (退货数量, t.未知支持库函数_10 (6))
    .如果 (不等于 (退货数量, “”))
        赋值 (有否退货数量, 相加 (有否退货数量, 1))
    .否则
        
    .如果结束
    
    
.计次循环尾 ()
.如果 (等于 (有否退货数量, 0))
    信息框 (“请确定退货数量!”, 0, )
    返回 ()
.否则
    .计次循环首 (表格行数累计, t)
        赋值 (库存id, t.未知支持库函数_10 (11))
        赋值 (销售数量, t.未知支持库函数_10 (5))
        赋值 (退货数量, t.未知支持库函数_10 (6))
        赋值 (现在销售数量, 到文本 (相减 (到数值 (销售数量), 到数值 (退货数量))))
        赋值 (商品编码, t.未知支持库函数_10 (0))
        赋值 (销售单号, 文本)
        赋值 (商品名称, t.未知支持库函数_10 (1))
        赋值 (零售价j, t.未知支持库函数_10 (7))
        赋值 (客户名称, t.未知支持库函数_10 (4))
        赋值 (销售id, t.未知支持库函数_10 (18))
        赋值 (应付金额, 到文本 (相乘 (到数值 (零售价j), 到数值 (现在销售数量))))
        赋值 (现在应付金额, 到文本 (相减 (到数值 (t.未知支持库函数_10 (13)), 到数值 (t.未知支持库函数_10 (17)))))
        赋值 (退货日期, 未知支持库函数_12 (.今天, “%y-%m-%d”))
        赋值 (退货单号, .内容)
        赋值 (原已付金额, t.未知支持库函数_10 (13))
        赋值 (拼音码, t.未知支持库函数_10 (2))
        赋值 (记录集句柄一, 0)
        赋值 (脚本, 相加 (“select * from 销售 where 销售id=”, 销售id))
        赋值 (记录集句柄一, _启动窗口.查询 (., 脚本))
        _启动窗口.到首记录 (., 记录集句柄一)
        赋值 (销售日期, 未知支持库函数_12 (到时间 (_启动窗口.读 (., 记录集句柄一, “销售日期”)), “%y-%m-%d”))
        赋值 (记录集句柄一, 0)
        赋值 (脚本, 相加 (“select * from 总库 where 库存id=”, 库存id))
        赋值 (记录集句柄一, _启动窗口.查询 (., 脚本))
        _启动窗口.到首记录 (., 记录集句柄一)
        赋值 (进货价, 到文本 (到数值 (_启动窗口.读 (., 记录集句柄一, “进货价”))))
        赋值 (应找回金额, t.未知支持库函数_10 (17))
        赋值 (退货毛利, 到文本 (相乘 (相减 (相除 (到数值 (应找回金额), 到数值 (退货数量)), 到数值 (进货价)), 到数值 (退货数量))))
        .如果 (等于 (t.未知支持库函数_10 (16), “”))
            赋值 (备注, “--”)
        .否则
            赋值 (备注, t.未知支持库函数_10 (16))
        .如果结束
        
        .如果 (不等于 (退货数量, “”))
            .如果 (等于 (到数值 (现在销售数量), 0))
                赋值 (脚本, 相加 (“delete from 销售 where 销售id=”, 销售id))
                输出调试文本 (脚本)
                .如果 (等于 (_启动窗口.执行 (., 脚本, ), 假))
                    信息框 (“j”, 0, )
                    赋值 (是否成功, 假)
                    跳出循环 ()
                .否则
                    赋值 (是否成功, 真)
                     ' 信息框 (“z”, 0, )
                .如果结束
                
                _启动窗口.关闭记录集 (., 记录集句柄)
                赋值 (脚本, 相加 (“select * from 总库 where 库存id=”, 库存id))
                赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
                赋值 (库存数量, 到文本 (_启动窗口.读 (., 记录集句柄, “库存数量”)))
                赋值 (脚本, 相加 (“update 总库 set 库存数量=”, 到文本 (相加 (到数值 (库存数量), 到数值 (退货数量))), “ where 库存id=”, 库存id))
                .如果 (等于 (_启动窗口.执行 (., 脚本, ), 假))
                    赋值 (是否成功, 假)
                    跳出循环 ()
                .否则
                    赋值 (是否成功, 真)
                    
                .如果结束
                
                
                
            .否则
                .如果 (大于 (到数值 (现在销售数量), 0))
                    
                    赋值 (脚本, 相加 (“update 销售 set 实付金额=”, 现在应付金额, “,退货数量=”, 退货数量, “, 应付金额=”, 应付金额, “,销售数量=”, 现在销售数量, “ where 销售id=”, 销售id))
                    输出调试文本 (脚本)
                    .如果 (等于 (_启动窗口.执行 (., 脚本, ), 假))
                        赋值 (是否成功, 假)
                        跳出循环 ()
                    .否则
                        赋值 (是否成功, 真)
                    .如果结束
                    
                    
                    _启动窗口.关闭记录集 (., 记录集句柄)
                    赋值 (脚本, 相加 (“select * from 总库 where 库存id=”, 库存id))
                    赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
                    赋值 (库存数量, 到文本 (_启动窗口.读 (., 记录集句柄, “库存数量”)))
                    赋值 (脚本, 相加 (“update 总库 set 库存数量=”, 到文本 (相加 (到数值 (库存数量), 到数值 (退货数量))), “ where 库存id=”, 库存id))
                    .如果 (等于 (_启动窗口.执行 (., 脚本, ), 假))
                        赋值 (是否成功, 假)
                        跳出循环 ()
                    .否则
                        赋值 (是否成功, 真)
                    .如果结束
                    
                    
                    
                    
                .否则
                    
                .如果结束
                
            .如果结束
            赋值 (应找回金额, t.未知支持库函数_10 (17))
             ' 信息框 (到文本 (零售价j), 0, )
            .如果真 (小于 (到数值 (应找回金额), 0))
                赋值 (应找回金额, “0”)
            .如果真结束
            
            
            赋值 (脚本, 相加 (“insert into 销售退货记录 (退货日期,销售单号,商品名称,商品编码,原销售量,零售价,退货数量,退货原因,客户名称,应找回金额,销售退货单号,销售id,拼音码,操作员,销售日期,毛利)  values ('”, 退货日期, “','”, 销售单号, “','”, 商品名称, “',”, 商品编码, “,”, 销售数量, “,”, 零售价j, “,”, 退货数量, “,'”, 备注, “','”, 客户名称, “',”, 应找回金额, “,'”, 退货单号, “','”, 销售id, “','”, 拼音码, “','”, 操作员, “','”, 销售日期, “',”, 退货毛利, “)”))
            输出调试文本 (脚本)
            .如果 (等于 (_启动窗口.执行 (., 脚本, ), 假))
                 ' 信息框 (“11111error”, 0, )
                赋值 (是否成功, 假)
            .否则
                 ' 信息框 (“11111ok”, 0, )
                赋值 (是否成功, 真)
                .如果 (大于 (到数值 (应找回金额), 0))
                    赋值 (脚本, 相加 (“insert into 收款员收款明细 (收入日期,备注,金额,操作员,收入原因)  values ('”, 退货日期, “','”, 客户名称, “退货',-”, 应找回金额, “,'”, 操作员, “','”, 退货单号, “')”))
                    输出调试文本 (脚本)
                    .如果 (等于 (_启动窗口.执行 (., 脚本, ), 假))
                         ' 信息框 (“11111error”, 0, )
                        赋值 (是否成功, 假)
                    .否则
                         ' 信息框 (“11111ok”, 0, )
                        赋值 (是否成功, 真)
                    .如果结束
                    
                .否则
                    
                .如果结束
                
                
                
                
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .计次循环尾 ()
    .如果 (等于 (是否成功, 真))
        信息框 (“退货操作成功!”, 0, )
        
         ' 销售退货选择单据.销毁 ()
        销毁 ()
    .否则
        信息框 (“退货操作失败,请重试!”, 64, “贝尔软件”)
    .如果结束
    
.如果结束


.子程序 _表格1_被双击, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 库存id, 文本型, , , 

.如果 (等于 (未知支持库函数_3 (), -1))
    返回 ()
.否则
    赋值 (库存id, 未知支持库函数_3 ().未知支持库函数_10 (11))
     ' 库存数量 ＝ 表格1.取数据 (表格1.取光标行号 (), 5)
    赋值 (商品名, 未知支持库函数_3 ().未知支持库函数_10 (1))
    载入 (销售退货数量, , 真)
.如果结束


.子程序 _表格1_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 库存id, 文本型, , , 

.如果 (等于 (键代码, #回车键))
    .如果 (等于 (未知支持库函数_3 (), -1))
        返回 ()
    .否则
        赋值 (库存id, 未知支持库函数_3 ().未知支持库函数_10 (11))
         ' 库存数量 ＝ 表格1.取数据 (表格1.取光标行号 (), 5)
        赋值 (商品名, 未知支持库函数_3 ().未知支持库函数_10 (1))
        载入 (销售退货数量, , 真)
    .如果结束
    
    
.否则
    
.如果结束


.子程序 _表格1_光标位置改变, 空白型, , 


.窗口程序集 窗口程序集37, , , 

.子程序 _销售退货数量_创建完毕, 空白型, , 
赋值 (.内容, 销售退货最终单.未知支持库函数_10 (., 销售退货最终单.未知支持库函数_3 (.), 5))
赋值 (.内容, 商品名)

.子程序 _按钮1_被单击, 空白型, , 
赋值 (.内容, 销售退货最终单.未知支持库函数_10 (., 销售退货最终单.未知支持库函数_3 (.), 5))

.如果 (小于 (相减 (到数值 (.内容), 到数值 (.内容)), 0))
    信息框 (“退货数量大于购买数量！”, 0, )
    返回 ()
.否则
    .如果 (大于或等于 (相减 (到数值 (.内容), 到数值 (.内容)), 0))
        销售退货最终单.未知支持库函数_9 (., 销售退货最终单.未知支持库函数_3 (.), 6, 1, .内容) ' 置退货数量
        销售退货最终单.未知支持库函数_9 (., 销售退货最终单.未知支持库函数_3 (.), 16, 1, .内容) ' 退货原因
        销售退货最终单.未知支持库函数_9 (., 销售退货最终单.未知支持库函数_3 (.), 17, 1, 到文本 (相除 (相乘 (到数值 (.内容), 到数值 (销售退货最终单.未知支持库函数_10 (., 销售退货最终单.未知支持库函数_3 (.), 13))), 到数值 (销售退货最终单.未知支持库函数_10 (., 销售退货最终单.未知支持库函数_3 (.), 5))))) ' 置应找回金额
        销毁 ()
    .否则
        信息框 (“请检查输入项！”, 0, )
        返回 ()
    .如果结束
    
    
    
.如果结束





.窗口程序集 窗口程序集38, , , 

.子程序 _库存告警查询_创建完毕, 空白型, , 
.局部变量 库存上限临时, 文本型, , , 
.局部变量 库存下限临时, 文本型, , , 
.局部变量 库存数, 文本型, , , 

赋值 (., 经顶边)
赋值 (., 经左边)
赋值 (., 假)

赋值 (., 1)
赋值 (., 0)
赋值 (., 11)
相减 (., 1).未知支持库函数_9 (0, 1, “商品名称”)
相减 (., 1).未知支持库函数_9 (1, 1, “库存数量”)
相减 (., 1).未知支持库函数_9 (2, 1, “规格”)
相减 (., 1).未知支持库函数_9 (3, 1, “一级分类名”)
相减 (., 1).未知支持库函数_9 (4, 1, “二级分类名”)
相减 (., 1).未知支持库函数_9 (5, 1, “产地”)
相减 (., 1).未知支持库函数_9 (6, 1, “零售价”)
相减 (., 1).未知支持库函数_9 (7, 1, “供货商”)
相减 (., 1).未知支持库函数_9 (8, 1, “库存上限”)
相减 (., 1).未知支持库函数_9 (9, 1, “库存下限”)
相减 (., 1).未知支持库函数_9 (10, 1, “商品编码”)
赋值 (., 1)
赋值 (., 88)
赋值 (., 88)
赋值 (脚本, “select * from 总库”)
赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
_启动窗口.到首记录 (., 记录集句柄)
.判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
    置等待鼠标 ()
     ' 处理事件 ()
    
    赋值 (库存上限临时, 到文本 (_启动窗口.读 (., 记录集句柄, “库存上限”)))
    赋值 (库存下限临时, 到文本 (_启动窗口.读 (., 记录集句柄, “库存下限”)))
    赋值 (库存数, 到文本 (_启动窗口.读 (., 记录集句柄, “库存数量”)))
    .如果 (或者 (大于或等于 (到数值 (库存数), 到数值 (库存上限临时)), 小于或等于 (到数值 (库存数), 到数值 (库存下限临时))))
        添写表单 ()
    .否则
        
    .如果结束
    
    _启动窗口.到后一记录 (., 记录集句柄)
.判断循环尾 ()

.子程序 添写表单, 空白型, , 
.未知支持库函数_38 ()
相减 (., 1).未知支持库函数_9 (0, 1, _启动窗口.读 (., 记录集句柄, “商品名称”))
相减 (., 1).未知支持库函数_9 (1, 1, _启动窗口.读 (., 记录集句柄, “库存数量”))
相减 (., 1).未知支持库函数_9 (2, 1, _启动窗口.读 (., 记录集句柄, “规格”))
相减 (., 1).未知支持库函数_9 (3, 1, _启动窗口.读 (., 记录集句柄, “一级分类”))
相减 (., 1).未知支持库函数_9 (4, 1, _启动窗口.读 (., 记录集句柄, “二级分类”))
相减 (., 1).未知支持库函数_9 (5, 1, _启动窗口.读 (., 记录集句柄, “产地”))
相减 (., 1).未知支持库函数_9 (6, 1, _启动窗口.读 (., 记录集句柄, “零售价”))
相减 (., 1).未知支持库函数_9 (7, 1, _启动窗口.读 (., 记录集句柄, “供货商”))
相减 (., 1).未知支持库函数_9 (8, 1, _启动窗口.读 (., 记录集句柄, “库存上限”))
相减 (., 1).未知支持库函数_9 (9, 1, _启动窗口.读 (., 记录集句柄, “库存下限”))
相减 (., 1).未知支持库函数_9 (10, 1, _启动窗口.读 (., 记录集句柄, “商品编码”))



.子程序 _按钮1_被单击, 空白型, , 
赋值 (表格文件名, 相加 (取运行目录 (), “\wgid\库存告警情况”))
.如果 (等于 (表格文件名.未知支持库函数_55 (), 真))
    置文件属性 (表格文件名, 1)
    赋值 (表头标题, “库存告警情况”)
    载入 (打印, , 真)
.否则
    信息框 (“打印格式文件出错，操作失败！”, 相加 (0, #错误图标), )
.如果结束



.子程序 _按钮2_被单击, 空白型, , 
.局部变量 库存上限临时, 文本型, , , 
.局部变量 库存数, 文本型, , , 

赋值 (脚本, “select * from 总库”)
赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
_启动窗口.到首记录 (., 记录集句柄)
赋值 (., 1)
.判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
    置等待鼠标 ()
     ' 处理事件 ()
    
    赋值 (库存上限临时, 到文本 (_启动窗口.读 (., 记录集句柄, “库存上限”)))
     ' 库存下限临时 ＝ 到文本 (_启动窗口.外部数据库1.读 (记录集句柄, “库存下限”))
    赋值 (库存数, 到文本 (_启动窗口.读 (., 记录集句柄, “库存数量”)))
    .如果 (大于或等于 (到数值 (库存数), 到数值 (库存上限临时)))
        添写表单 ()
    .否则
        
    .如果结束
    
    _启动窗口.到后一记录 (., 记录集句柄)
.判断循环尾 ()


.子程序 _按钮3_被单击, 空白型, , 
.局部变量 库存数, 文本型, , , 
.局部变量 库存下限临时, 文本型, , , 

赋值 (脚本, “select * from 总库”)
赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
_启动窗口.到首记录 (., 记录集句柄)
赋值 (., 1)
.判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
    置等待鼠标 ()
     ' 处理事件 ()
    
     ' 库存上限临时 ＝ 到文本 (_启动窗口.外部数据库1.读 (记录集句柄, “库存上限”))
    赋值 (库存下限临时, 到文本 (_启动窗口.读 (., 记录集句柄, “库存下限”)))
    赋值 (库存数, 到文本 (_启动窗口.读 (., 记录集句柄, “库存数量”)))
    .如果 (小于或等于 (到数值 (库存数), 到数值 (库存下限临时)))
        添写表单 ()
    .否则
        
    .如果结束
    
    _启动窗口.到后一记录 (., 记录集句柄)
.判断循环尾 ()



.子程序 _按钮4_被单击, 空白型, , 
_库存告警查询_创建完毕 ()


.窗口程序集 窗口程序集39, , , 

.窗口程序集 窗口程序集40, , , 

.子程序 _库存调价记录_创建完毕, 空白型, , 
赋值 (., 经顶边)
赋值 (., 经左边)
赋值 (., 假)

_启动窗口.关闭记录集 (., 记录集句柄)
 ' 赋值 (., 1)
赋值 (., 70)
赋值 (., 0)
赋值 (., 0)
赋值 (., 17)
相减 (., 1).未知支持库函数_9 (0, 1, “调价序号”)
相减 (., 1).未知支持库函数_9 (1, 1, “调价日期”)
相减 (., 1).未知支持库函数_9 (2, 1, “商品名称”)
相减 (., 1).未知支持库函数_9 (3, 1, “商品编码”)
相减 (., 1).未知支持库函数_9 (4, 1, “原始售价”)
相减 (., 1).未知支持库函数_9 (5, 1, “调整售价”)
相减 (., 1).未知支持库函数_9 (6, 1, “原进货价”)
相减 (., 1).未知支持库函数_9 (7, 1, “新进货价”)
相减 (., 1).未知支持库函数_9 (8, 1, “原批发价”)
相减 (., 1).未知支持库函数_9 (9, 1, “新批发价”)
相减 (., 1).未知支持库函数_9 (10, 1, “商品大类”)
相减 (., 1).未知支持库函数_9 (11, 1, “规格”)
相减 (., 1).未知支持库函数_9 (12, 1, “产地”)
相减 (., 1).未知支持库函数_9 (13, 1, “进货价”)
相减 (., 1).未知支持库函数_9 (14, 1, “供货商”)
相减 (., 1).未知支持库函数_9 (15, 1, “库存id”)
相减 (., 1).未知支持库函数_9 (16, 1, “操作员”)
赋值 (., 1)
赋值 (脚本, “select * from 商品调价记录”)
赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
_启动窗口.到首记录 (., 记录集句柄)


赋值 (., 1)

.判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
    置等待鼠标 ()
     ' 处理事件 ()
    
    .未知支持库函数_38 () ' <!!!>
    相减 (., 1).未知支持库函数_9 (0, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “记录id”)))
    相减 (., 1).未知支持库函数_9 (1, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “调价日期”)))
    相减 (., 1).未知支持库函数_9 (2, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “商品名称”)))
    相减 (., 1).未知支持库函数_9 (3, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “商品编码”)))
    相减 (., 1).未知支持库函数_9 (4, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “原始售价”))) ' 规格]
    相减 (., 1).未知支持库函数_9 (5, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “调整售价”))) ' 数量
    相减 (., 1).未知支持库函数_9 (6, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “进货价”))) ' 规格]
    相减 (., 1).未知支持库函数_9 (7, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “调整进价”))) ' 数量
    相减 (., 1).未知支持库函数_9 (8, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “批发价”))) ' 规格]
    相减 (., 1).未知支持库函数_9 (9, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “调整批发价”))) ' 数量
    相减 (., 1).未知支持库函数_9 (10, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “商品大类”))) ' 进货价
    相减 (., 1).未知支持库函数_9 (11, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “规格”))) ' 应付
    相减 (., 1).未知支持库函数_9 (12, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “产地”))) ' 已付
    相减 (., 1).未知支持库函数_9 (13, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “进货价”))) ' 零售
    相减 (., 1).未知支持库函数_9 (14, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “供货商”))) ' 批发
    相减 (., 1).未知支持库函数_9 (15, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “库存id”))) ' 上限
    相减 (., 1).未知支持库函数_9 (16, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “操作员”))) ' 下限
    _启动窗口.到后一记录 (., 记录集句柄)
.判断循环尾 ()
_启动窗口.关闭记录集 (., 记录集句柄)


.子程序 _按钮1_被单击, 空白型, , 
.局部变量 r, 空白型, , , 

.如果 (大于 (., 1))
    .如果 (等于 (信息框 (“您确定要清空这些记录吗?清空后您将不能查看这些日期的调价记录!”, 1, ), 0))
        赋值 (脚本, “delete from 商品调价记录”)
        .如果 (等于 (_启动窗口.执行 (., 脚本, ), 真))
             ' 处理事件 ()
            赋值 (., 1)
            信息框 (“数据清空操作执行完毕!”, 0, )
            赋值 (., 90)
        .否则
            信息框 (“数据清空操作执行出现错误,请检查!!”, 0, )
            
        .如果结束
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束




.子程序 _按钮2_被单击, 空白型, , 
销毁 ()


.子程序 _按钮3_被单击, 空白型, , 
赋值 (表格文件名, 相加 (取运行目录 (), “\wgid\库存调价记录”))
.如果 (等于 (表格文件名.未知支持库函数_55 (), 真))
    置文件属性 (表格文件名, 1)
    赋值 (表头标题, “库存调价记录”)
    载入 (打印, , 真)
.否则
    信息框 (“打印格式文件出错，操作失败！”, 相加 (0, #错误图标), )
.如果结束



.窗口程序集 窗口程序集41, , , 

.程序集变量 库存id, 文本型, , , 
.子程序 _编辑框1_内容被改变, 空白型, , 
 ' _启动窗口.关闭记录集 (., 记录集句柄)
赋值 (脚本, 相加 (“select * from 总库 where 拼音码”, “ like '%”, .内容, “%'”))
输出调试文本 (脚本)
赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
_启动窗口.到首记录 (., 记录集句柄)
添置盘典表格数据 ()



.子程序 _树型框1_项目被选择, 空白型, , 
.参数 选择方式, 整数型, , 

.局部变量 暂1, 文本型, , , 
.局部变量 暂2, 文本型, , , 
.局部变量 匿名局部变量_5007, 空白型, , , 

.如果真 (等于 (.取父项目 (.最大化按钮), -1))
    _启动窗口.关闭记录集 (., 记录集句柄)
    赋值 (脚本, 相加 (“select * from 总库 where 一级分类=”, “'”, .取项目文本 (.最大化按钮), “'”, “ order by 单据号”))
    输出调试文本 (脚本)
    赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
    _启动窗口.到首记录 (., 记录集句柄)
    添置盘典表格数据 ()
    返回 ()
.如果真结束
.如果真 (等于 (.取缩进层次 (.最大化按钮), 2))
    .如果 (等于 (.是否有子项目 (.最大化按钮), 假))
        _启动窗口.关闭记录集 (., 记录集句柄一)
        赋值 (脚本, 相加 (“select * from 总库  where 二级分类='”, .取项目文本 (.最大化按钮), “'”, “ order by 单据号”))
        输出调试文本 (脚本)
        赋值 (记录集句柄一, _启动窗口.查询 (., 脚本))
        _启动窗口.到首记录 (., 记录集句柄一)
        .判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄一), 假))
            置等待鼠标 ()
             ' 处理事件 ()
            
            赋值 (暂1, 到文本 (_启动窗口.读 (., 记录集句柄一, 4)))
            .如果 (不等于 (暂1, 暂2))
                .加入项目 (.最大化按钮, 到文本 (_启动窗口.读 (., 记录集句柄一, 4)), , , ) ' 编码
            .否则
                
            .如果结束
            赋值 (暂2, 暂1)
            _启动窗口.到后一记录 (., 记录集句柄一)
        .判断循环尾 ()
        _启动窗口.关闭记录集 (., 记录集句柄一)
    .否则
        
    .如果结束
    _启动窗口.关闭记录集 (., 记录集句柄)
    赋值 (脚本, 相加 (“select * from 总库 where 二级分类=”, “'”, .取项目文本 (.最大化按钮), “'”, “ order by 单据号”))
    输出调试文本 (脚本)
    赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
    _启动窗口.到首记录 (., 记录集句柄)
    添置盘典表格数据 ()
    .扩展 (.最大化按钮)
.如果真结束
.如果真 (等于 (.取缩进层次 (.最大化按钮), 3))
    _启动窗口.关闭记录集 (., 记录集句柄)
    赋值 (脚本, 相加 (“select * from 总库 where 商品名称=”, “'”, .取项目文本 (.最大化按钮), “' and 二级分类='”, .取父项目 (.最大化按钮).取项目文本 (), “'”, “ order by 单据号”))
    输出调试文本 (脚本)
    赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
    _启动窗口.到首记录 (., 记录集句柄)
    添置盘典表格数据 ()
.如果真结束



.子程序 添置盘典表格数据, 空白型, , 
_启动窗口.到首记录 (., 记录集句柄)
赋值 (., 1)
赋值 (., 20)
.判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
    置等待鼠标 ()
     ' 处理事件 ()
    
    .未知支持库函数_38 () ' <!!!>
    相减 (., 1).未知支持库函数_9 (0, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “商品编码”))) ' 编码
    相减 (., 1).未知支持库函数_9 (1, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “商品名称”))) ' 名称
    相减 (., 1).未知支持库函数_9 (2, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “入库日期”))) ' 入库日期
    相减 (., 1).未知支持库函数_9 (3, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “拼音码”))) ' 拼音码
    相减 (., 1).未知支持库函数_9 (4, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “规格”))) ' 规格]
    相减 (., 1).未知支持库函数_9 (5, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “数量”))) ' 数量
    相减 (., 1).未知支持库函数_9 (6, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “库存数量”)))
    相减 (., 1).未知支持库函数_9 (7, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “进货价”))) ' 进货价
    相减 (., 1).未知支持库函数_9 (8, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “应付金额”))) ' 应付
    相减 (., 1).未知支持库函数_9 (9, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “已付金额”))) ' 已付
    相减 (., 1).未知支持库函数_9 (10, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “零售价”))) ' 零售
    相减 (., 1).未知支持库函数_9 (11, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “批发价”))) ' 批发
    相减 (., 1).未知支持库函数_9 (12, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “库存上限”))) ' 上限
    相减 (., 1).未知支持库函数_9 (13, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “库存下限”))) ' 下限
    相减 (., 1).未知支持库函数_9 (14, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “一级分类”))) ' 一级
    相减 (., 1).未知支持库函数_9 (15, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “二级分类”))) ' 二级
    相减 (., 1).未知支持库函数_9 (16, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “供货商”))) ' 供货商
    相减 (., 1).未知支持库函数_9 (17, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “备注”))) ' 备注
    相减 (., 1).未知支持库函数_9 (18, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “产地”))) ' 备注
    相减 (., 1).未知支持库函数_9 (19, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “库存id”)))
    _启动窗口.到后一记录 (., 记录集句柄)
.判断循环尾 ()
_启动窗口.关闭记录集 (., 记录集句柄)


.子程序 盘典表头, 空白型, , 
赋值 (., 1)
 ' 赋值 (., 70)
赋值 (., 1)
赋值 (., 0)

赋值 (., 20)
相减 (., 1).未知支持库函数_9 (0, 1, “商品编码”)
相减 (., 1).未知支持库函数_9 (1, 1, “商品名称”)
相减 (., 1).未知支持库函数_9 (2, 1, “入库日期”)
相减 (., 1).未知支持库函数_9 (3, 1, “拼音码”)
相减 (., 1).未知支持库函数_9 (4, 1, “规格”)
相减 (., 1).未知支持库函数_9 (5, 1, “进货数量”)
相减 (., 1).未知支持库函数_9 (6, 1, “库存数量”)
相减 (., 1).未知支持库函数_9 (7, 1, “进货价”)
相减 (., 1).未知支持库函数_9 (8, 1, “应付金额”)
相减 (., 1).未知支持库函数_9 (9, 1, “已付金额”)
相减 (., 1).未知支持库函数_9 (10, 1, “零售价”)
相减 (., 1).未知支持库函数_9 (11, 1, “批发价”)
相减 (., 1).未知支持库函数_9 (12, 1, “库存上限”)
相减 (., 1).未知支持库函数_9 (13, 1, “库存下限”)
相减 (., 1).未知支持库函数_9 (14, 1, “一级分类”)
相减 (., 1).未知支持库函数_9 (15, 1, “二级分类”)
相减 (., 1).未知支持库函数_9 (16, 1, “供货商”)
相减 (., 1).未知支持库函数_9 (17, 1, “备注”)
相减 (., 1).未知支持库函数_9 (18, 1, “产地”)
相减 (., 1).未知支持库函数_9 (19, 1, “库存id”)

.子程序 _库存盘点_创建完毕, 空白型, , 
.局部变量 t, 空白型, , , 
.局部变量 文本, 文本型, , , 
.局部变量 tt, 空白型, , , 
.局部变量 yy, 空白型, , , 

盘典表头 ()
赋值 (., 经顶边)
赋值 (., 经左边)
赋值 (., 假)

_启动窗口.关闭记录集 (., 记录集句柄)
赋值 (.图标, {  })
赋值 (脚本, 相加 (“select * from 商品分类 where 一级 ”, “ = ”, “'”, “1”, “'”))
输出调试文本 (脚本)
赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
_启动窗口.到首记录 (., 记录集句柄)
赋值 (yy, 0)
.判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
    置等待鼠标 ()
     ' 处理事件 ()
    
    yy.置图片 (1)
    yy.置选中图片 (2)
    yy.置外形图片 (3)
    .加入项目 (_启动窗口.读 (., 记录集句柄, 1), , , )
    _启动窗口.到后一记录 (., 记录集句柄)
    赋值 (yy, 相加 (yy, 1))
.判断循环尾 ()
_启动窗口.关闭记录集 (., 记录集句柄)
赋值 (t, 0)
赋值 (文本, “”)

.判断循环首 (小于或等于 (t, 取项目数 ()))
    置等待鼠标 ()
     ' 处理事件 ()
    
    t.置图片 (1)
    t.置选中图片 (2)
    yy.置外形图片 (3)
    赋值 (文本, t.取项目文本 ())
    输出调试文本 (文本)
    _启动窗口.关闭记录集 (., 记录集句柄)
    赋值 (脚本, 相加 (“select * from 商品分类 where 二级 ”, “ = ”, “'”, “1”, “' and ”, “商品类名 = '”, 文本, “'”))
    输出调试文本 (脚本)
    赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
    _启动窗口.到首记录 (., 记录集句柄)
    .判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
        t.加入项目 (_启动窗口.读 (., 记录集句柄, 2), , , )
        _启动窗口.到后一记录 (., 记录集句柄)
    .判断循环尾 ()
    赋值 (t, 相加 (t, 1))
.判断循环尾 ()

赋值 (t, 0)
_启动窗口.关闭记录集 (., 记录集句柄)


.子程序 _现在_内容被改变, 空白型, , 


.子程序 _表格1_光标位置改变, 空白型, , 
.如果 (等于 (未知支持库函数_3 (), -1))
    返回 ()
.否则
    赋值 (库存id, 未知支持库函数_3 ().未知支持库函数_10 (19))
    赋值 (库存数量, 未知支持库函数_3 ().未知支持库函数_10 (6))
    赋值 (商品名, 未知支持库函数_3 ().未知支持库函数_10 (1))
    赋值 (.内容, 库存数量)
    赋值 (.内容, 商品名)
.如果结束


.子程序 _表格1_被双击, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 匿名局部变量_5023, 空白型, , , 

.如果 (等于 (未知支持库函数_3 (), -1))
    返回 ()
.否则
    赋值 (库存id, 未知支持库函数_3 ().未知支持库函数_10 (19))
    赋值 (库存数量, 未知支持库函数_3 ().未知支持库函数_10 (6))
    赋值 (商品名, 未知支持库函数_3 ().未知支持库函数_10 (1))
    赋值 (.内容, 库存数量)
    赋值 (.内容, 商品名)
.如果结束


.子程序 _按钮1_被单击, 空白型, , 
.局部变量 盘典日期, 文本型, , , 

.如果 (不等于 (.内容, “”))
     ' 赋值 (脚本, 相加 (“update 总库 set 库存数量=”, .内容, “ where 库存id=”, 库存id))
    .如果 (_启动窗口.执行 (., 脚本, ))
        赋值 (盘典日期, 未知支持库函数_12 (.今天, “%y-%m-%d”))
        赋值 (脚本, 相加 (“insert into 库存盘典记录 (盘典日期,商品名称,商品编码,原始数量,调整数量,库存id,操作员)  values ('”, 盘典日期, “','”, .内容, “','”, 未知支持库函数_3 ().未知支持库函数_10 (0), “','”, .内容, “','”, .内容, “','”, 库存id, “','”, 操作员, “')”))
        输出调试文本 (脚本)
        .如果 (_启动窗口.执行 (., 脚本, ))
            信息框 (“盘典记录成功！”, 0, )
            赋值 (.内容, “”)
            赋值 (.内容, “”)
            赋值 (.内容, “”)
            _树型框1_项目被选择 (库存盘点..最大化按钮)
             ' _树型框1_项目被选择 ()
        .否则
            信息框 (“记录失败！！！！！！！！”, 0, )
            
        .如果结束
        
    .否则
        信息框 (“修改失败！！！！！！！！”, 0, )
    .如果结束
    
.否则
    
.如果结束


.子程序 _按钮2_被单击, 空白型, , 
销毁 ()


.子程序 _分隔条1_被拖动, 空白型, , 
.参数 原位置, 整数型, , 
.参数 目的位置, 整数型, , 

.局部变量 新左边, 整数型, , , 

.如果真 (小于 (目的位置, 8))
    赋值 (目的位置, 8)
.如果真结束
.如果真 (大于 (目的位置, 相减 (., 20)))
    赋值 (目的位置, 相减 (., 20))
.如果真结束
赋值 (., 目的位置)
赋值 (.宽度, 相减 (., .左边))
赋值 (新左边, 相加 (., .))
新左边.移动 (相减 (., 12, 新左边), )


.窗口程序集 窗口程序集42, , , 

.子程序 _库存盘点记录_创建完毕, 空白型, , 
赋值 (., 经顶边)
赋值 (., 经左边)
赋值 (., 假)

_启动窗口.关闭记录集 (., 记录集句柄)
 ' 赋值 (., 1)
赋值 (., 70)
赋值 (., 0)
赋值 (., 0)
赋值 (., 8)
相减 (., 1).未知支持库函数_9 (0, 1, “盘典序号”)
相减 (., 1).未知支持库函数_9 (1, 1, “盘典日期”)
相减 (., 1).未知支持库函数_9 (2, 1, “商品名称”)
相减 (., 1).未知支持库函数_9 (3, 1, “商品编码”)
相减 (., 1).未知支持库函数_9 (4, 1, “原始数量”)
相减 (., 1).未知支持库函数_9 (5, 1, “调整数量”)
相减 (., 1).未知支持库函数_9 (6, 1, “库存id”)
相减 (., 1).未知支持库函数_9 (7, 1, “操作员”)
赋值 (., 1)
赋值 (脚本, “select * from 库存盘典记录”)
赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
_启动窗口.到首记录 (., 记录集句柄)


赋值 (., 1)

.判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
    置等待鼠标 ()
     ' 处理事件 ()
    .未知支持库函数_38 () ' <!!!>
    相减 (., 1).未知支持库函数_9 (0, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “盘典id”)))
    相减 (., 1).未知支持库函数_9 (1, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “盘典日期”)))
    相减 (., 1).未知支持库函数_9 (2, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “商品名称”)))
    相减 (., 1).未知支持库函数_9 (3, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “商品编码”)))
    相减 (., 1).未知支持库函数_9 (4, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “原始数量”))) ' 规格]
    相减 (., 1).未知支持库函数_9 (5, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “调整数量”))) ' 数量
    相减 (., 1).未知支持库函数_9 (6, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “库存id”))) ' 上限
    相减 (., 1).未知支持库函数_9 (7, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “操作员”))) ' 下限
    _启动窗口.到后一记录 (., 记录集句柄)
.判断循环尾 ()
_启动窗口.关闭记录集 (., 记录集句柄)


.子程序 _按钮1_被单击, 空白型, , 

.如果 (大于 (., 1))
    .如果 (等于 (信息框 (“您确定要清空这些记录吗?清空后您将不能查看这些日期的盘典记录!”, 1, ), 0))
        赋值 (脚本, “delete from 库存盘典记录”)
        .如果 (等于 (_启动窗口.执行 (., 脚本, ), 真))
             ' 处理事件 ()
            信息框 (“数据清空操作执行完毕!”, 0, )
            赋值 (., 1)
        .否则
            信息框 (“数据清空操作执行出现错误,请检查!!”, 0, )
            
        .如果结束
        
    .否则
        
    .如果结束
    
    
.否则
    
.如果结束



.子程序 _按钮2_被单击, 空白型, , 
赋值 (表格文件名, 相加 (取运行目录 (), “\wgid\库存盘点记录”))
.如果 (等于 (表格文件名.未知支持库函数_55 (), 真))
    置文件属性 (表格文件名, 1)
    赋值 (表头标题, “库存盘点记录”)
    载入 (打印, , 真)
.否则
    信息框 (“打印格式文件出错，操作失败！”, 相加 (0, #错误图标), )
.如果结束



.窗口程序集 窗口程序集43, , , 

.程序集变量 库存基数, 文本型, , , 
.程序集变量 库存总数累计, 文本型, , , 
.程序集变量 进货数量, 文本型, , , 
.程序集变量 进货数量累计, 文本型, , , 
.程序集变量 销售数量, 文本型, , , 
.程序集变量 销售数量累计, 文本型, , , 
.程序集变量 记二, 空白型, , , 
.程序集变量 记一, 空白型, , , 
.程序集变量 商品编码, 文本型, , , 
.程序集变量 进货总数, 文本型, , , 
.程序集变量 销售总数, 文本型, , , 
.程序集变量 库存总数, 文本型, , , 
.程序集变量 库存id, 文本型, , , 
.子程序 _进销存一览_创建完毕, 空白型, , 
显示进销存记录 ()
赋值 (., 经顶边)
赋值 (., 经左边)
赋值 (., 假)


.子程序 显示进销存记录, 空白型, , 
.局部变量 t, 空白型, , , 
.局部变量 文本, 文本型, , , 
.局部变量 tt, 空白型, , , 
.局部变量 yy, 空白型, , , 


_启动窗口.关闭记录集 (., 记录集句柄)
赋值 (.图标, {  })
赋值 (脚本, 相加 (“select * from 商品分类 where 一级 ”, “ = ”, “'”, “1”, “'”))
输出调试文本 (脚本)
赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
_启动窗口.到首记录 (., 记录集句柄)
赋值 (yy, 0)
.判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
    置等待鼠标 ()
     ' 处理事件 ()
    
    yy.置图片 (1)
    yy.置选中图片 (2)
    yy.置外形图片 (3)
    .加入项目 (_启动窗口.读 (., 记录集句柄, 1), , , )
    _启动窗口.到后一记录 (., 记录集句柄)
    赋值 (yy, 相加 (yy, 1))
.判断循环尾 ()
_启动窗口.关闭记录集 (., 记录集句柄)
赋值 (t, 0)
赋值 (文本, “”)

.判断循环首 (小于或等于 (t, 取项目数 ()))
    置等待鼠标 ()
     ' 处理事件 ()
    
    t.置图片 (1)
    t.置选中图片 (2)
    yy.置外形图片 (3)
    赋值 (文本, t.取项目文本 ())
    输出调试文本 (文本)
    _启动窗口.关闭记录集 (., 记录集句柄)
    赋值 (脚本, 相加 (“select * from 商品分类 where 二级 ”, “ = ”, “'”, “1”, “' and ”, “商品类名 = '”, 文本, “'”))
    输出调试文本 (脚本)
    赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
    _启动窗口.到首记录 (., 记录集句柄)
    .判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
        置等待鼠标 ()
         ' 处理事件 ()
        
        t.加入项目 (_启动窗口.读 (., 记录集句柄, 2), , , )
        _启动窗口.到后一记录 (., 记录集句柄)
    .判断循环尾 ()
    赋值 (t, 相加 (t, 1))
.判断循环尾 ()

赋值 (t, 0)
_启动窗口.关闭记录集 (., 记录集句柄)



.子程序 _树型框1_项目被选择, 空白型, , 
.参数 选择方式, 整数型, , 

.局部变量 暂1, 文本型, , , 
.局部变量 暂2, 文本型, , , 

写表头 ()
赋值 (库存基数, “0”)
赋值 (库存总数累计, “0”)
赋值 (销售数量, “0”)
赋值 (销售数量累计, “0”)
赋值 (进货数量, “0”)
赋值 (进货数量累计, “0”)
.如果真 (等于 (.取父项目 (.最大化按钮), -1))
    返回 ()
.如果真结束
.如果真 (等于 (.取缩进层次 (.最大化按钮), 2))
    .如果 (等于 (.是否有子项目 (.最大化按钮), 假))
        _启动窗口.关闭记录集 (., 记录集句柄一)
        赋值 (脚本, 相加 (“select * from 总库  where 二级分类='”, .取项目文本 (.最大化按钮), “'”, “ order by 单据号”))
        输出调试文本 (脚本)
        赋值 (记录集句柄一, _启动窗口.查询 (., 脚本))
        _启动窗口.到首记录 (., 记录集句柄一)
        .判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄一), 假))
            置等待鼠标 ()
             ' 处理事件 ()
            
            赋值 (暂1, 到文本 (_启动窗口.读 (., 记录集句柄一, 4)))
            .如果 (不等于 (暂1, 暂2))
                .加入项目 (.最大化按钮, 到文本 (_启动窗口.读 (., 记录集句柄一, 4)), , , ) ' 编码
            .否则
                
            .如果结束
            赋值 (暂2, 暂1)
            _启动窗口.到后一记录 (., 记录集句柄一)
        .判断循环尾 ()
        _启动窗口.关闭记录集 (., 记录集句柄一)
    .否则
        
    .如果结束
     ' _启动窗口.外部数据库1.关闭记录集 (记录集句柄)
     ' 脚本 ＝ “select * from 总库 where 二级分类=” ＋ “'” ＋ 树型框1.取项目文本 (树型框1.现行选中项) ＋ “'” ＋ “ order by 单据号”
     ' 输出调试文本 (脚本)
     ' 记录集句柄 ＝ _启动窗口.外部数据库1.查询 (脚本)
     ' _启动窗口.外部数据库1.到首记录 (记录集句柄)
     ' 添进销存表 ()
    .扩展 (.最大化按钮)
.如果真结束
.如果真 (等于 (.取缩进层次 (.最大化按钮), 3))
    _启动窗口.关闭记录集 (., 记录集句柄)
    赋值 (脚本, 相加 (“select * from 总库 where 商品名称=”, “'”, .取项目文本 (.最大化按钮), “' and 二级分类='”, .取父项目 (.最大化按钮).取项目文本 (), “'”, “ order by 单据号”))
    输出调试文本 (脚本)
    赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
    _启动窗口.到首记录 (., 记录集句柄)
    添进销存表 ()
.如果真结束



.子程序 写表头, 空白型, , 
赋值 (., 1)
赋值 (., 70)
赋值 (., 0)
赋值 (., 0)
赋值 (., 10)
相减 (., 1).未知支持库函数_9 (0, 1, “商品编码”)
相减 (., 1).未知支持库函数_9 (1, 1, “商品名称”)
相减 (., 1).未知支持库函数_9 (2, 1, “拼音码”)
相减 (., 1).未知支持库函数_9 (3, 1, “规格”)
相减 (., 1).未知支持库函数_9 (4, 1, “进货数量”)
相减 (., 1).未知支持库函数_9 (5, 1, “销售数量”)
相减 (., 1).未知支持库函数_9 (6, 1, “库存数量”)
相减 (., 1).未知支持库函数_9 (7, 1, “供货商”)
相减 (., 1).未知支持库函数_9 (8, 1, “产地”)
相减 (., 1).未知支持库函数_9 (9, 1, “库存id”)
赋值 (., 1)

.子程序 _按钮3_被单击, 空白型, , 
赋值 (., 1)

.子程序 读取销售数量, 空白型, , 
_启动窗口.关闭记录集 (., 记录集句柄一)
赋值 (脚本, 相加 (“select sum(销售数量) as h from 销售 where 库存id='”, 库存id, “'”))
赋值 (记录集句柄一, _启动窗口.查询 (., 脚本))
赋值 (销售数量, 到文本 (_启动窗口.读 (., 记录集句柄一, “h”)))


.子程序 _按钮4_被单击, 空白型, , 
销毁 ()

.子程序 添进销存表, 空白型, , 
赋值 (库存基数, “0”)
赋值 (库存总数累计, “0”)
赋值 (., 1)
赋值 (., 18)
.判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
    置等待鼠标 ()
     ' 处理事件 ()
    
    .未知支持库函数_38 () ' <!!!>
    相减 (., 1).未知支持库函数_9 (0, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “商品编码”))) ' 编码
    相减 (., 1).未知支持库函数_9 (1, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “商品名称”))) ' 名称
    相减 (., 1).未知支持库函数_9 (2, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “拼音码”))) ' 拼音码
    相减 (., 1).未知支持库函数_9 (3, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “规格”)))
    赋值 (进货数量, 到文本 (_启动窗口.读 (., 记录集句柄, “数量”)))
    相减 (., 1).未知支持库函数_9 (4, 1, 到文本 (进货数量))
    赋值 (进货数量累计, 到文本 (相加 (到数值 (进货数量累计), 到数值 (进货数量))))
    赋值 (库存id, 到文本 (_启动窗口.读 (., 记录集句柄, “库存id”)))
    读取销售数量 ()
    相减 (., 1).未知支持库函数_9 (5, 1, 到文本 (销售数量))
    赋值 (销售数量累计, 到文本 (相加 (到数值 (销售数量累计), 到数值 (销售数量))))
    赋值 (库存基数, 到文本 (_启动窗口.读 (., 记录集句柄, “库存数量”)))
    相减 (., 1).未知支持库函数_9 (6, 1, 到文本 (库存基数))
    赋值 (库存总数累计, 到文本 (相加 (到数值 (库存总数累计), 到数值 (库存基数))))
    相减 (., 1).未知支持库函数_9 (7, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “供货商”)))
    相减 (., 1).未知支持库函数_9 (8, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “产地”)))
    相减 (., 1).未知支持库函数_9 (9, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “库存id”)))
    _启动窗口.到后一记录 (., 记录集句柄)
.判断循环尾 ()
_启动窗口.关闭记录集 (., 记录集句柄)
.未知支持库函数_38 () ' <!!!>
相减 (., 1).未知支持库函数_9 (0, 1, “总计：”) ' 数量
相减 (., 1).未知支持库函数_9 (4, 1, 到文本 (进货数量累计))
相减 (., 1).未知支持库函数_9 (5, 1, 到文本 (销售数量累计))
相减 (., 1).未知支持库函数_9 (6, 1, 到文本 (库存总数累计))


.子程序 _按钮2_被单击, 空白型, , 
.局部变量 名称, 文本型, , , 
.局部变量 拼音码, 文本型, , , 
.局部变量 规格, 文本型, , , 


赋值 (., 0)
赋值 (., 1)
赋值 (., 7)
0.未知支持库函数_9 (0, 1, “商品编码”)
0.未知支持库函数_9 (1, 1, “商品名称”)
0.未知支持库函数_9 (2, 1, “拼音码”)
0.未知支持库函数_9 (3, 1, “规格”)
0.未知支持库函数_9 (4, 1, “进货数量”)
0.未知支持库函数_9 (5, 1, “销售数量”)
0.未知支持库函数_9 (6, 1, “库存数量”)
赋值 (., 1)
获取焦点 ()
赋值 (脚本, “select distinct(商品编码),商品名称,拼音码,规格 from 总库”)
_启动窗口.关闭记录集 (., 记录集句柄)
赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
_启动窗口.到首记录 (., 记录集句柄)
.判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
    置等待鼠标 ()
     ' 处理事件 ()
    
    赋值 (商品编码, 到文本 (_启动窗口.读 (., 记录集句柄, “商品编码”)))
    赋值 (名称, 到文本 (_启动窗口.读 (., 记录集句柄, “商品名称”)))
    赋值 (拼音码, 到文本 (_启动窗口.读 (., 记录集句柄, “拼音码”)))
    赋值 (规格, 到文本 (_启动窗口.读 (., 记录集句柄, “规格”)))
    取进总和库总和 ()
    取销总和 ()
    .未知支持库函数_38 ()
    相减 (., 1).未知支持库函数_9 (0, 1, 商品编码)
    相减 (., 1).未知支持库函数_9 (1, 1, 名称)
    相减 (., 1).未知支持库函数_9 (2, 1, 拼音码)
    相减 (., 1).未知支持库函数_9 (3, 1, 规格)
    相减 (., 1).未知支持库函数_9 (4, 1, 进货总数)
    相减 (., 1).未知支持库函数_9 (5, 1, 销售总数)
    相减 (., 1).未知支持库函数_9 (6, 1, 库存总数)
    _启动窗口.到后一记录 (., 记录集句柄)
.判断循环尾 ()
 ' _启动窗口.外部数据库1.关闭记录集 ()


.子程序 取销总和, 空白型, , 
赋值 (脚本, 相加 (“select sum(销售数量) as xszs from 销售 where 商品编码=”, 商品编码))
 ' _启动窗口.外部数据库1.关闭记录集 (记二)
赋值 (记二, 0)
赋值 (记二, _启动窗口.查询 (., 脚本))
赋值 (销售总数, 到文本 (_启动窗口.读 (., 记二, “xszs”)))
.如果 (等于 (销售总数, “”))
    赋值 (销售总数, “0”)
.否则
    
.如果结束
_启动窗口.关闭记录集 (., 记二)
返回 ()

.子程序 取进总和库总和, 空白型, , 
赋值 (脚本, 相加 (“select sum(数量) as jhzs,sum(库存数量) as kczs from 总库 where 商品编码=”, 商品编码))
 ' _启动窗口.外部数据库1.关闭记录集 (记一)
赋值 (记一, 0)
赋值 (记一, _启动窗口.查询 (., 脚本))
_启动窗口.到首记录 (., 记一)
赋值 (进货总数, 到文本 (_启动窗口.读 (., 记一, “jhzs”)))
赋值 (库存总数, 到文本 (_启动窗口.读 (., 记一, “kczs”)))
_启动窗口.关闭记录集 (., 记一)
返回 ()

.子程序 _按钮1_被单击, 空白型, , 
赋值 (表格文件名, 相加 (取运行目录 (), “\wgid\进销存一览”))
.如果 (等于 (表格文件名.未知支持库函数_55 (), 真))
    置文件属性 (表格文件名, 1)
    赋值 (表头标题, “商品进销存一览”)
    载入 (打印, , 真)
.否则
    信息框 (“打印格式文件出错，操作失败！”, 相加 (0, #错误图标), )
.如果结束



.子程序 _按钮5_被单击, 空白型, , 
.局部变量 名称, 文本型, , , 
.局部变量 拼音码, 文本型, , , 
.局部变量 规格, 文本型, , , 
.局部变量 开始, 文本型, , , 
.局部变量 结束, 文本型, , , 


.如果 (小于 (.今天, .今天))
    信息框 (“请注意开始日期和结束日期！”, 0, )
    返回 ()
.否则
    赋值 (开始, 相加 (“#”, 未知支持库函数_12 (.今天, “%y-%m-%d”), “#”))
    赋值 (结束, 相加 (“#”, 未知支持库函数_12 (.今天, “%y-%m-%d”), “#”))
    
.如果结束


赋值 (., 0)
赋值 (., 1)
赋值 (., 7)
0.未知支持库函数_9 (0, 1, “商品编码”)
0.未知支持库函数_9 (1, 1, “商品名称”)
0.未知支持库函数_9 (2, 1, “拼音码”)
0.未知支持库函数_9 (3, 1, “规格”)
0.未知支持库函数_9 (4, 1, “进货数量”)
0.未知支持库函数_9 (5, 1, “销售数量”)
0.未知支持库函数_9 (6, 1, “库存数量”)
赋值 (., 1)
获取焦点 ()




赋值 (脚本, 相加 (“select distinct(商品编码),商品名称,拼音码,规格 from 总库 where 入库日期 >= ”, 开始, “ and 入库日期 <= ”, 结束))
_启动窗口.关闭记录集 (., )
赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
_启动窗口.到首记录 (., 记录集句柄)
.判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
    置等待鼠标 ()
     ' 处理事件 ()
    
    赋值 (商品编码, 到文本 (_启动窗口.读 (., 记录集句柄, “商品编码”)))
    赋值 (名称, 到文本 (_启动窗口.读 (., 记录集句柄, “商品名称”)))
    赋值 (拼音码, 到文本 (_启动窗口.读 (., 记录集句柄, “拼音码”)))
    赋值 (规格, 到文本 (_启动窗口.读 (., 记录集句柄, “规格”)))
    赋值 (脚本, 相加 (“select sum(数量) as jhzs,sum(库存数量) as kczs from 总库 where 商品编码=”, 商品编码, “ and ”, “入库日期 >= ”, 开始, “ and 入库日期 <= ”, 结束))
    _启动窗口.关闭记录集 (., 2)
    赋值 (记一, _启动窗口.查询 (., 脚本))
    赋值 (进货总数, 到文本 (_启动窗口.读 (., 记一, “jhzs”)))
    赋值 (库存总数, 到文本 (_启动窗口.读 (., 记一, “kczs”)))
    
    赋值 (脚本, 相加 (“select sum(销售数量) as xszs from 销售 where 商品编码=”, 商品编码, “ and ”, “销售日期 >= ”, 开始, “ and 销售日期 <= ”, 结束))
    _启动窗口.关闭记录集 (., 3)
    赋值 (记二, _启动窗口.查询 (., 脚本))
    赋值 (销售总数, 到文本 (_启动窗口.读 (., 记二, “xszs”)))
    .如果 (等于 (销售总数, “”))
        赋值 (销售总数, “0”)
    .否则
        
    .如果结束
    
    
    .未知支持库函数_38 ()
    相减 (., 1).未知支持库函数_9 (0, 1, 商品编码)
    相减 (., 1).未知支持库函数_9 (1, 1, 名称)
    相减 (., 1).未知支持库函数_9 (2, 1, 拼音码)
    相减 (., 1).未知支持库函数_9 (3, 1, 规格)
    相减 (., 1).未知支持库函数_9 (4, 1, 进货总数)
    相减 (., 1).未知支持库函数_9 (5, 1, 销售总数)
    相减 (., 1).未知支持库函数_9 (6, 1, 库存总数)
    _启动窗口.到后一记录 (., 记录集句柄)
.判断循环尾 ()
_启动窗口.关闭记录集 (., )


.子程序 _分隔条1_被拖动, 空白型, , 
.参数 原位置, 整数型, , 
.参数 目的位置, 整数型, , 

.局部变量 新左边, 整数型, , , 

.如果真 (小于 (目的位置, 8))
    赋值 (目的位置, 8)
.如果真结束
.如果真 (大于 (目的位置, 相减 (., 20)))
    赋值 (目的位置, 相减 (., 20))
.如果真结束
赋值 (., 目的位置)
赋值 (.宽度, 相减 (., .左边))
赋值 (新左边, 相加 (., .))
新左边.移动 (相减 (., 12, 新左边), )


.窗口程序集 窗口程序集44, , , 

.子程序 _数量_内容被改变, 空白型, , 


.子程序 _按钮1_被单击, 空白型, , 
检查输入 ()

.子程序 检查输入, 空白型, , 
.如果 (或者 (等于 (.内容, “”), 等于 (.内容, “”), 等于 (.内容, “”), 等于 (.内容, “”), 等于 (.内容, “”), 等于 (.内容, “”)))
    信息框 (“请完整添写信息内容！”, 0, )
    返回 ()
.否则
    赋值 (脚本, 相加 (“insert into 售后登记(客户名称,联系地址,联系电话,商品名称,数量,销售日期,售后日期,售后原因,操作员)  values ('”, .内容, “','”, .内容, “','”, .内容, “','”, .内容, “','”, .内容, “','”, 未知支持库函数_12 (.今天, “%y-%m-%d”), “','”, 未知支持库函数_12 (.今天, “%y-%m-%d”), “','”, .内容, “','”, 操作员, “')”))
    输出调试文本 (脚本)
    .如果 (等于 (_启动窗口.执行 (., 脚本, ), 真))
        信息框 (“执行成功！”, 0, )
        赋值 (.内容, “”)
        赋值 (.内容, “”)
        赋值 (.内容, “”)
        赋值 (.内容, “”)
        赋值 (.内容, “”)
        赋值 (.内容, “”)
    .否则
        信息框 (“执行失败，请重试！”, 0, )
    .如果结束
    
    
    
    
    
    
.如果结束


.子程序 _按钮2_被单击, 空白型, , 
销毁 ()


.窗口程序集 窗口程序集45, , , 

.子程序 _售后汇总_创建完毕, 空白型, , 
赋值 (., 经顶边)
赋值 (., 经左边)
赋值 (., 假)

添表头 ()
赋值 (脚本, “select * from 售后登记”)
_启动窗口.关闭记录集 (., 记录集句柄)
赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
_启动窗口.到首记录 (., 记录集句柄)
添内容 ()

.子程序 添内容, 空白型, , 
.判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
    置等待鼠标 ()
     ' 处理事件 ()
    
    .未知支持库函数_38 () ' <!!!>
    相减 (., 1).未知支持库函数_9 (0, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “售后id”)))
    相减 (., 1).未知支持库函数_9 (1, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “客户名称”)))
    相减 (., 1).未知支持库函数_9 (2, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “商品名称”)))
    相减 (., 1).未知支持库函数_9 (3, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “数量”)))
    相减 (., 1).未知支持库函数_9 (4, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “售后日期”)))
    相减 (., 1).未知支持库函数_9 (5, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “销售日期”)))
    相减 (., 1).未知支持库函数_9 (6, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “联系电话”)))
    相减 (., 1).未知支持库函数_9 (7, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “联系地址”)))
    相减 (., 1).未知支持库函数_9 (8, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “操作员”)))
    相减 (., 1).未知支持库函数_9 (9, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “售后状态”)))
    相减 (., 1).未知支持库函数_9 (10, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “售后原因”)))
    _启动窗口.到后一记录 (., 记录集句柄)
.判断循环尾 ()
_启动窗口.关闭记录集 (., 记录集句柄)

.子程序 添表头, 空白型, , 
赋值 (., 1)
赋值 (., 0)
赋值 (., 1)
赋值 (., 11)
0.未知支持库函数_9 (0, 1, “售后单号”)
0.未知支持库函数_9 (1, 1, “客户名称”)
0.未知支持库函数_9 (2, 1, “商品名称”)
0.未知支持库函数_9 (3, 1, “商品数量”)
0.未知支持库函数_9 (4, 1, “售后日期”)
0.未知支持库函数_9 (5, 1, “销售日期”)
0.未知支持库函数_9 (6, 1, “联系电话”)
0.未知支持库函数_9 (7, 1, “联系地址”)
0.未知支持库函数_9 (8, 1, “操作员”)
0.未知支持库函数_9 (9, 1, “售后状态”)
0.未知支持库函数_9 (10, 1, “售后原因”)


.子程序 _按钮1_被单击, 空白型, , 
.如果 (或者 (不等于 (.内容, “”), 不等于 (.内容, “”)))
    赋值 (脚本, 相加 (“update 售后登记 set 售后状态='”, .内容, “' where 售后id=”, .内容))
    输出调试文本 (脚本)
    .如果 (_启动窗口.执行 (., 脚本, ))
        信息框 (“修改成功！”, 0, )
        _售后汇总_创建完毕 ()
    .否则
        信息框 (“修改失败！！！！！！！！”, 0, )
    .如果结束
    
.否则
    
.如果结束


.子程序 _按钮2_被单击, 空白型, , 
销毁 ()

.子程序 _组合框1_列表项被选择, 空白型, , 


.子程序 _按钮3_被单击, 空白型, , 
.如果 (等于 (信息框 (“您确定要删除记录吗?”, 1, ), 0))
    赋值 (脚本, 相加 (“delete from 售后登记 where 售后id=”, .内容))
    .如果 (等于 (_启动窗口.执行 (., 脚本, ), 真))
         ' 处理事件 ()
        信息框 (“删除操作执行完毕!”, 0, )
        _售后汇总_创建完毕 ()
    .否则
        信息框 (“删除操作执行出现错误,请检查!!”, 0, )
        
    .如果结束
    
.否则
    
.如果结束


.子程序 _按钮4_被单击, 空白型, , 
赋值 (表格文件名, 相加 (取运行目录 (), “\wgid\售后情况”))
.如果 (等于 (表格文件名.未知支持库函数_55 (), 真))
    置文件属性 (表格文件名, 1)
    赋值 (表头标题, “售后情况”)
    载入 (打印, , 真)
.否则
    信息框 (“打印格式文件出错，操作失败！”, 相加 (0, #错误图标), )
.如果结束



.窗口程序集 窗口程序集47, , , 

.子程序 _按钮1_被单击, 空白型, , 
检查输入 ()


.子程序 检查输入, 空白型, , 
.如果 (或者 (等于 (.内容, “”), 等于 (.内容, “”), 等于 (.内容, “”), 等于 (.内容, “”), 等于 (.内容, “”)))
    信息框 (“请完整添写信息内容！”, 0, )
    返回 ()
.否则
    赋值 (脚本, 相加 (“insert into 预订登记(客户名称,联系地址,联系电话,商品名称,数量,预订日期,商品描述,操作员)  values ('”, .内容, “','”, .内容, “','”, .内容, “','”, .内容, “','”, .内容, “','”, 未知支持库函数_12 (.今天, “%y-%m-%d”), “','”, .内容, “','”, 操作员, “')”))
    输出调试文本 (脚本)
    .如果 (等于 (_启动窗口.执行 (., 脚本, ), 真))
        信息框 (“执行成功！”, 0, )
        _缺货预定登记_创建完毕 ()
    .否则
        信息框 (“执行失败，请重试！”, 0, )
    .如果结束
    
    
.如果结束


.子程序 _缺货预定登记_创建完毕, 空白型, , 
赋值 (., 经顶边)
赋值 (., 经左边)
赋值 (., 假)

添表头 ()
赋值 (脚本, “select * from 预订登记”)
_启动窗口.关闭记录集 (., 记录集句柄)
赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
_启动窗口.到首记录 (., 记录集句柄)
添内容 ()


.子程序 添内容, 空白型, , 
.判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
    置等待鼠标 ()
     ' 处理事件 ()
    
    .未知支持库函数_38 () ' <!!!>
    
    相减 (., 1).未知支持库函数_9 (0, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “id”)))
    相减 (., 1).未知支持库函数_9 (1, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “客户名称”)))
    相减 (., 1).未知支持库函数_9 (2, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “商品名称”)))
    相减 (., 1).未知支持库函数_9 (3, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “数量”)))
    相减 (., 1).未知支持库函数_9 (4, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “预订日期”)))
    相减 (., 1).未知支持库函数_9 (5, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “联系电话”)))
    相减 (., 1).未知支持库函数_9 (6, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “联系地址”)))
    相减 (., 1).未知支持库函数_9 (7, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “操作员”)))
    相减 (., 1).未知支持库函数_9 (8, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “商品描述”)))
    _启动窗口.到后一记录 (., 记录集句柄)
.判断循环尾 ()
_启动窗口.关闭记录集 (., 记录集句柄)

.子程序 添表头, 空白型, , 
赋值 (., 1)
赋值 (., 0)
赋值 (., 1)
赋值 (., 11)
0.未知支持库函数_9 (0, 1, “预订单号”)
0.未知支持库函数_9 (1, 1, “客户名称”)
0.未知支持库函数_9 (2, 1, “商品名称”)
0.未知支持库函数_9 (3, 1, “商品数量”)
0.未知支持库函数_9 (4, 1, “预订日期”)
0.未知支持库函数_9 (5, 1, “联系电话”)
0.未知支持库函数_9 (6, 1, “联系地址”)
0.未知支持库函数_9 (7, 1, “操作员”)
0.未知支持库函数_9 (8, 1, “产品描述”)


.子程序 _按钮2_被单击, 空白型, , 
赋值 (表格文件名, 相加 (取运行目录 (), “\wgid\缺货情况”))
.如果 (等于 (表格文件名.未知支持库函数_55 (), 真))
    置文件属性 (表格文件名, 1)
    赋值 (表头标题, “缺货情况”)
    载入 (打印, , 真)
.否则
    信息框 (“打印格式文件出错，操作失败！”, 相加 (0, #错误图标), )
.如果结束



.子程序 _组合框1_列表项被选择, 空白型, , 


.子程序 _按钮3_被单击, 空白型, , 
.如果 (等于 (信息框 (“您确定要清空这些记录吗?清空后您将不能查看这些日期的调价记录!”, 1, ), 0))
    赋值 (脚本, “delete from 预订登记”)
    .如果 (等于 (_启动窗口.执行 (., 脚本, ), 真))
         ' 处理事件 ()
        _缺货预定登记_创建完毕 ()
        信息框 (“数据清空操作执行完毕!”, 0, )
        
    .否则
        信息框 (“数据清空操作执行出现错误,请检查!!”, 0, )
        
    .如果结束
    
.否则
    
.如果结束


.窗口程序集 窗口程序集46, , , 

.子程序 _返货登记_创建完毕, 空白型, , 
赋值 (., 经顶边)
赋值 (., 经左边)
赋值 (., 假)
赋值 (., 假)
赋值 (., 假)

添表头 ()
赋值 (脚本, “select * from 返货记录 order by id”)
_启动窗口.关闭记录集 (., 记录集句柄)
赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
_启动窗口.到首记录 (., 记录集句柄)
添内容 ()
供应商q ()


.子程序 供应商q, 空白型, , 
.局部变量 t, 空白型, , , 

赋值 (脚本, “select count(*) from 供应商资料”)
_启动窗口.关闭记录集 (., 记录集句柄一)
赋值 (记录集句柄一, _启动窗口.查询 (., 脚本))
赋值 (t, _启动窗口.读 (., 记录集句柄一, 1))
_启动窗口.关闭记录集 (., 记录集句柄一)
赋值 (脚本, “select * from 供应商资料”)
赋值 (记录集句柄一, _启动窗口.查询 (., 脚本))
_启动窗口.到首记录 (., 记录集句柄一)
.计次循环首 (t, )
    _启动窗口.读 (., 记录集句柄一, 2).加入项目 ()
    _启动窗口.到后一记录 (., 记录集句柄一)
.计次循环尾 ()


.子程序 _按钮1_被单击, 空白型, , 
检查输入 ()


.子程序 检查输入, 空白型, , 
.如果 (或者 (等于 (.内容, “”), 等于 (.内容, “”), 等于 (.内容, “”), 等于 (.内容, “”)))
    信息框 (“请完整添写信息内容！”, 0, )
    返回 ()
.否则
    赋值 (脚本, 相加 (“insert into 返货记录(供货商,商品名称,数量,返货日期,描述,操作员,返货途径)  values ('”, .内容, “','”, .内容, “','”, .内容, “','”, 未知支持库函数_12 (.今天, “%y-%m-%d”), “','”, .内容, “','”, 操作员, “'”, “ ,'”, .内容, “')”))
    输出调试文本 (脚本)
    .如果 (等于 (_启动窗口.执行 (., 脚本, ), 真))
        信息框 (“执行成功！”, 0, )
        _返货登记_创建完毕 ()
    .否则
        信息框 (“执行失败，请重试！”, 0, )
    .如果结束
    
    
.如果结束


.子程序 添内容, 空白型, , 
.判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
    .未知支持库函数_38 () ' <!!!>
    置等待鼠标 ()
     ' 处理事件 ()
    
    相减 (., 1).未知支持库函数_9 (0, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “id”)))
    相减 (., 1).未知支持库函数_9 (1, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “供货商”)))
    相减 (., 1).未知支持库函数_9 (2, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “商品名称”)))
    相减 (., 1).未知支持库函数_9 (3, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “数量”)))
    相减 (., 1).未知支持库函数_9 (4, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “返货日期”)))
    相减 (., 1).未知支持库函数_9 (5, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “返货途径”)))
    相减 (., 1).未知支持库函数_9 (6, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “描述”)))
    相减 (., 1).未知支持库函数_9 (7, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “操作员”)))
    _启动窗口.到后一记录 (., 记录集句柄)
.判断循环尾 ()
_启动窗口.关闭记录集 (., 记录集句柄)

.子程序 添表头, 空白型, , 
赋值 (., 1)
赋值 (., 0)
赋值 (., 1)
赋值 (., 8)
赋值 (., 60)
0.未知支持库函数_9 (0, 1, “返货单号”)
1.未知支持库函数_32 (150)
0.未知支持库函数_9 (1, 1, “供 货 商”)
2.未知支持库函数_32 (160)
0.未知支持库函数_9 (2, 1, “商品名称”)
0.未知支持库函数_9 (3, 1, “商品数量”)
4.未知支持库函数_32 (100)
0.未知支持库函数_9 (4, 1, “返货日期”)
0.未知支持库函数_9 (5, 1, “返货途径”)
6.未知支持库函数_32 (180)
0.未知支持库函数_9 (6, 1, “返货原因”)
0.未知支持库函数_9 (7, 1, “操 作 员”)

.子程序 _按钮2_被单击, 空白型, , 
赋值 (表格文件名, 相加 (取运行目录 (), “\wgid\返货登记”))
.如果 (等于 (表格文件名.未知支持库函数_55 (), 真))
    置文件属性 (表格文件名, 1)
    赋值 (表头标题, “返货情况登记”)
    载入 (打印, , 真)
.否则
    信息框 (“打印格式文件出错，操作失败！”, 相加 (0, #错误图标), )
.如果结束







.子程序 _客户名称_列表项被选择, 空白型, , 


.子程序 _按钮3_被单击, 空白型, , 
.如果 (等于 (信息框 (“您确定要清空这些记录吗?清空后您将不能查看这些日期的调价记录!”, 1, ), 0))
    赋值 (脚本, “delete from 返货记录”)
    .如果 (等于 (_启动窗口.执行 (., 脚本, ), 真))
         ' 处理事件 ()
        _返货登记_创建完毕 ()
        信息框 (“数据清空操作执行完毕!”, 0, )
        
    .否则
        信息框 (“数据清空操作执行出现错误,请检查!!”, 0, )
        
    .如果结束
    
.否则
    
.如果结束


.窗口程序集 窗口程序集48, , , 

.子程序 _其他收入_创建完毕, 空白型, , 
赋值 (., 经顶边)
赋值 (., 经左边)
赋值 (., 假)

添表头 ()
赋值 (脚本, “select * from 其他收入”)
_启动窗口.关闭记录集 (., 记录集句柄)
赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
_启动窗口.到首记录 (., 记录集句柄)
添内容 ()


.子程序 _按钮1_被单击, 空白型, , 
检查输入 ()


.子程序 检查输入, 空白型, , 
.如果 (或者 (等于 (.内容, “”), 等于 (.内容, “”)))
    信息框 (“请完整添写信息内容！”, 0, )
    返回 ()
.否则
    赋值 (脚本, 相加 (“insert into 其他收入(收入金额,收入原因,收入日期,操作员)  values ('”, .内容, “','”, .内容, “','”, 未知支持库函数_12 (.今天, “%y-%m-%d”), “','”, 操作员, “')”))
    输出调试文本 (脚本)
    .如果 (等于 (_启动窗口.执行 (., 脚本, ), 真))
        信息框 (“执行成功！”, 0, )
        赋值 (脚本, 相加 (“insert into 收款员收款明细(金额,收入原因,收入日期,操作员,备注)  values ('”, .内容, “','”, .内容, “','”, 未知支持库函数_12 (.今天, “%y-%m-%d”), “','”, 操作员, “','其他收入')”))
        输出调试文本 (脚本)
        .如果 (等于 (_启动窗口.执行 (., 脚本, ), 真))
             ' 信息框 (“执行成功！”, 0, )
        .否则
            信息框 (“执行失败，请重试！”, 0, )
        .如果结束
        
        _其他收入_创建完毕 ()
    .否则
        信息框 (“执行失败，请重试！”, 0, )
    .如果结束
    
    
.如果结束


.子程序 添内容, 空白型, , 
.判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
    .未知支持库函数_38 () ' <!!!>
    置等待鼠标 ()
     ' 处理事件 ()
    
    相减 (., 1).未知支持库函数_9 (0, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “id”)))
    相减 (., 1).未知支持库函数_9 (1, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “收入金额”)))
    相减 (., 1).未知支持库函数_9 (2, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “收入原因”)))
    相减 (., 1).未知支持库函数_9 (3, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “收入日期”)))
    相减 (., 1).未知支持库函数_9 (4, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “操作员”)))
    _启动窗口.到后一记录 (., 记录集句柄)
.判断循环尾 ()
_启动窗口.关闭记录集 (., 记录集句柄)

.子程序 添表头, 空白型, , 
赋值 (., 1)
赋值 (., 0)
赋值 (., 1)
赋值 (., 5)
0.未知支持库函数_9 (0, 1, “收入单号”)
0.未知支持库函数_9 (1, 1, “收入金额”)
0.未知支持库函数_9 (2, 1, “收入原由”)
0.未知支持库函数_9 (3, 1, “收入日期”)
0.未知支持库函数_9 (4, 1, “操作员”)


.子程序 _按钮2_被单击, 空白型, , 
销毁 ()

.子程序 _组合框1_列表项被选择, 空白型, , 


.子程序 _按钮3_被单击, 空白型, , 
赋值 (表格文件名, 相加 (取运行目录 (), “\wgid\其他收入”))
.如果 (等于 (表格文件名.未知支持库函数_55 (), 真))
    置文件属性 (表格文件名, 1)
    赋值 (表头标题, “其他收入”)
    载入 (打印, , 真)
.否则
    信息框 (“打印格式文件出错，操作失败！”, 相加 (0, #错误图标), )
.如果结束





.窗口程序集 窗口程序集49, , , 

.子程序 _其他支出_创建完毕, 空白型, , 
赋值 (., 经顶边)
赋值 (., 经左边)
赋值 (., 假)

添表头 ()
赋值 (脚本, “select * from 其他支出”)
_启动窗口.关闭记录集 (., 记录集句柄)
赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
_启动窗口.到首记录 (., 记录集句柄)
添内容 ()



.子程序 _按钮1_被单击, 空白型, , 
检查输入 ()


.子程序 检查输入, 空白型, , 
.如果 (或者 (等于 (.内容, “”), 等于 (.内容, “”)))
    信息框 (“请完整添写信息内容！”, 0, )
    返回 ()
.否则
    赋值 (脚本, 相加 (“insert into 其他支出(支出金额,支出原因,支出日期,操作员)  values ('”, .内容, “','”, .内容, “','”, 未知支持库函数_12 (.今天, “%y-%m-%d”), “','”, 操作员, “')”))
    输出调试文本 (脚本)
    .如果 (等于 (_启动窗口.执行 (., 脚本, ), 真))
        信息框 (“执行成功！”, 0, )
        
        赋值 (脚本, 相加 (“insert into 收款员收款明细(金额,收入原因,收入日期,操作员,备注)  values ('-”, .内容, “','”, .内容, “','”, 未知支持库函数_12 (.今天, “%y-%m-%d”), “','”, 操作员, “','其他支出')”))
        输出调试文本 (脚本)
        .如果 (等于 (_启动窗口.执行 (., 脚本, ), 真))
             ' 信息框 (“执行成功！”, 0, )
            _其他支出_创建完毕 ()
        .否则
            信息框 (“执行失败，请重试！”, 0, )
        .如果结束
        
        
        _其他支出_创建完毕 ()
    .否则
        信息框 (“执行失败，请重试！”, 0, )
    .如果结束
    
    
.如果结束


.子程序 添内容, 空白型, , 
.判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
    .未知支持库函数_38 () ' <!!!>
    置等待鼠标 ()
     ' 处理事件 ()
    
    相减 (., 1).未知支持库函数_9 (0, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “id”)))
    相减 (., 1).未知支持库函数_9 (1, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “支出金额”)))
    相减 (., 1).未知支持库函数_9 (2, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “支出原因”)))
    相减 (., 1).未知支持库函数_9 (3, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “支出日期”)))
    相减 (., 1).未知支持库函数_9 (4, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “操作员”)))
    _启动窗口.到后一记录 (., 记录集句柄)
.判断循环尾 ()
_启动窗口.关闭记录集 (., 记录集句柄)

.子程序 添表头, 空白型, , 
赋值 (., 1)
赋值 (., 0)
赋值 (., 1)
赋值 (., 5)
0.未知支持库函数_9 (0, 1, “支出单号”)
0.未知支持库函数_9 (1, 1, “支出金额”)
0.未知支持库函数_9 (2, 1, “支出原由”)
0.未知支持库函数_9 (3, 1, “支出日期”)
0.未知支持库函数_9 (4, 1, “操作员”)


.子程序 _按钮2_被单击, 空白型, , 
销毁 ()

.子程序 _组合框1_列表项被选择, 空白型, , 


.子程序 _按钮3_被单击, 空白型, , 
赋值 (表格文件名, 相加 (取运行目录 (), “\wgid\其他支出”))
.如果 (等于 (表格文件名.未知支持库函数_55 (), 真))
    置文件属性 (表格文件名, 1)
    赋值 (表头标题, “其他支出”)
    载入 (打印, , 真)
.否则
    信息框 (“打印格式文件出错，操作失败！”, 相加 (0, #错误图标), )
.如果结束




.窗口程序集 窗口程序集50, , , 

.子程序 _客户资料_创建完毕, 空白型, , 
赋值 (., 经顶边)
赋值 (., 经左边)
赋值 (., 假)

 ' _启动窗口.关闭记录集 (., 记录集句柄)
赋值 (脚本, “select * from 客户资料 ”)
赋值 (.图标, {  })
赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
_启动窗口.到首记录 (., 记录集句柄)
.判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
    置等待鼠标 ()
     ' 处理事件 ()
    
    .加入项目 (_启动窗口.读 (., 记录集句柄, 2), , , )
    _启动窗口.到后一记录 (., 记录集句柄)
.判断循环尾 ()
_启动窗口.关闭记录集 (., 记录集句柄)


.子程序 首次读取示记录, 空白型, , 
.局部变量 t, 空白型, , , 
.局部变量 文本, 文本型, , , 
.局部变量 tt, 空白型, , , 

 ' _启动窗口.关闭记录集 (., 记录集句柄)
赋值 (脚本, “select * from 客户资料 ”)
赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
_启动窗口.到首记录 (., 记录集句柄)
.判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
    置等待鼠标 ()
     ' 处理事件 ()
    
    .加入项目 (_启动窗口.读 (., 记录集句柄, 2), , , )
    _启动窗口.到后一记录 (., 记录集句柄)
.判断循环尾 ()
_启动窗口.关闭记录集 (., 记录集句柄)


.子程序 _树型框1_项目被选择, 空白型, , 
.参数 选择方式, 整数型, , 

_启动窗口.关闭记录集 (., 记录集句柄)
赋值 (脚本, 相加 (“select * from 客户资料 where 客户名称=”, “'”, .取项目文本 (.最大化按钮), “' ”))
输出调试文本 (脚本)
赋值 (记录集句柄, _启动窗口.查询 (., 脚本))

赋值 (., 1)
赋值 (., 6)
赋值 (., 100)
_启动窗口.到首记录 (., 记录集句柄)
相减 (., 1).未知支持库函数_9 (0, 1, “客户ID”)
相减 (., 1).未知支持库函数_9 (1, 1, “单位名称”)
相减 (., 1).未知支持库函数_9 (2, 1, “联系人”)
相减 (., 1).未知支持库函数_9 (3, 1, “电话”)
相减 (., 1).未知支持库函数_9 (4, 1, “电话1”)
相减 (., 1).未知支持库函数_9 (5, 1, “联系地址”)
.未知支持库函数_38 () ' <!!!>
相减 (., 1).未知支持库函数_9 (0, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “客户id”)))
相减 (., 1).未知支持库函数_9 (1, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “客户名称”)))
相减 (., 1).未知支持库函数_9 (2, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “联系人”)))
相减 (., 1).未知支持库函数_9 (3, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “电话”)))
相减 (., 1).未知支持库函数_9 (4, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “电话1”)))
相减 (., 1).未知支持库函数_9 (5, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “地址”)))


.子程序 _按钮1_被单击, 空白型, , 
赋值 (.现行子夹, 1)

.子程序 _按钮2_被单击, 空白型, , 
赋值 (.现行子夹, 2)
赋值 (.内容, “”)
 ' 单位.内容 ＝ “”
 ' 联系人.内容 ＝ “”
 ' 单位1.内容 ＝ “”
 ' 联系人1.内容 ＝ “”
 ' 显示.内容 ＝ “”


.子程序 _按钮3_被单击, 空白型, , 
赋值 (.现行子夹, 3)


.子程序 _按钮6_被单击, 空白型, , 
.如果 (或者 (等于 (.内容, “”), 等于 (.内容, “”), 等于 (.内容, “”), 等于 (.内容, “”), 等于 (.内容, “”)))
    信息框 (“请添写完整信息！”, 0, )
.否则
    赋值 (脚本, “select * from 客户资料 ”)
    _启动窗口.读 (., 记录集句柄, “客户名称”)
    _启动窗口.关闭记录集 (., 记录集句柄)
    赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
    _启动窗口.到首记录 (., 记录集句柄)
    .判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
        置等待鼠标 ()
         ' 处理事件 ()
        
        .如果 (等于 (_启动窗口.读 (., 记录集句柄, “联系人”), .内容))
            信息框 (“已有该联系人信息,请确认!”, 0, )
            返回 ()
        .否则
            _启动窗口.到后一记录 (., 记录集句柄)
        .如果结束
        
    .判断循环尾 ()
    
    
    _启动窗口.关闭记录集 (., 记录集句柄)
    赋值 (脚本, 相加 (“insert into 客户资料 (客户名称,联系人,电话,电话1,地址)  values ('”, .内容, “','”, .内容, “','”, .内容, “','”, .内容, “','”, .内容, “')”))
    .如果 (等于 (_启动窗口.执行 (., 脚本, ), 假))
        信息框 (“执行失败，请重试！”, 0, )
    .否则
        信息框 (“添加客户成功！”, 0, )
        赋值 (.内容, “”)
        赋值 (.内容, “”)
        赋值 (.内容, “”)
        赋值 (.内容, “”)
        赋值 (.内容, “”)
        _启动窗口.关闭记录集 (., 记录集句柄)
        赋值 (.图标, {  })
        首次读取示记录 ()
        赋值 (.现行子夹, 0)
    .如果结束
    
.如果结束


.子程序 _按钮5_被单击, 空白型, , 
_客户资料_创建完毕 ()
赋值 (.现行子夹, 0)
_启动窗口.关闭记录集 (., 记录集句柄)
赋值 (脚本, “select * from 客户资料 ”)
赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
_启动窗口.到首记录 (., 记录集句柄)
赋值 (., 0)
赋值 (., 1)
赋值 (., 6)
赋值 (., 100)
_启动窗口.到首记录 (., 记录集句柄)
相减 (., 1).未知支持库函数_9 (0, 1, “客户ID”)
相减 (., 1).未知支持库函数_9 (1, 1, “单位名称”)
相减 (., 1).未知支持库函数_9 (2, 1, “联系人”)
相减 (., 1).未知支持库函数_9 (3, 1, “电话”)
相减 (., 1).未知支持库函数_9 (4, 1, “电话1”)
相减 (., 1).未知支持库函数_9 (5, 1, “联系地址”)


.判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
    置等待鼠标 ()
     ' 处理事件 ()
    
    .未知支持库函数_38 () ' <!!!>
    相减 (., 1).未知支持库函数_9 (0, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “客户id”)))
    相减 (., 1).未知支持库函数_9 (1, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “客户名称”)))
    相减 (., 1).未知支持库函数_9 (2, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “联系人”)))
    相减 (., 1).未知支持库函数_9 (3, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “电话”)))
    相减 (., 1).未知支持库函数_9 (4, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “电话1”)))
    相减 (., 1).未知支持库函数_9 (5, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “地址”)))
    _启动窗口.到后一记录 (., 记录集句柄)
.判断循环尾 ()
_启动窗口.关闭记录集 (., 记录集句柄)


.子程序 _输入框_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 t, 空白型, , , 

.如果真 (等于 (键代码, #回车键))
    _启动窗口.关闭记录集 (., 记录集句柄)
    赋值 (脚本, 相加 (“select * from 客户资料 where 客户id=”, .内容))
    输出调试文本 (脚本)
    赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
    _启动窗口.到首记录 (., 记录集句柄)
    .如果 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 真))
        信息框 (“没找到相应记录！”, 0, )
         ' 单位1.内容 ＝ “”
         ' 联系人1.内容 ＝ “”
         ' 显示.内容 ＝ “”
         ' 输入框.内容 ＝ “”
    .否则
        .判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 真))
            置等待鼠标 ()
             ' 处理事件 ()
            
            赋值 (t, 相加 (t, 1))
            _启动窗口.到后一记录 (., 记录集句柄)
        .判断循环尾 ()
        .如果 (小于 (t, 0))
            信息框 (“没有相应记录！”, 0, )
             ' 单位1.内容 ＝ “”
             ' 联系人1.内容 ＝ “”
             ' 显示.内容 ＝ “”
             ' 输入框.内容 ＝ “”
            
        .否则
            赋值 (.内容, 到文本 (_启动窗口.读 (., 记录集句柄, “客户名称”)))
            赋值 (.内容, _启动窗口.读 (., 记录集句柄, “联系人”))
            赋值 (.内容, _启动窗口.读 (., 记录集句柄, “电话”))
            赋值 (.内容, _启动窗口.读 (., 记录集句柄, “电话1”))
            赋值 (.内容, _启动窗口.读 (., 记录集句柄, “地址”))
            
        .如果结束
        
    .如果结束
    
.如果真结束


.子程序 _输入框_内容被改变, 空白型, , 


.子程序 _按钮8_被单击, 空白型, , 
.如果 (或者 (不等于 (.内容, “”), 不等于 (.内容, “”), 不等于 (.内容, “”), 不等于 (.内容, “”), 不等于 (.内容, “”)))
    赋值 (脚本, 相加 (“update 客户资料 set 客户名称='”, .内容, “',联系人='”, .内容, “',电话='”, .内容, “',电话1='”, .内容, “',地址='”, .内容, “' where 客户id=”, .内容))
    输出调试文本 (脚本)
    .如果 (_启动窗口.执行 (., 脚本, ))
        信息框 (“修改成功！”, 0, )
        赋值 (.内容, “”)
        赋值 (.内容, “”)
        赋值 (.内容, “”)
        赋值 (.内容, “”)
        赋值 (.内容, “”)
        赋值 (.内容, “”)
        赋值 (.图标, {  })
        首次读取示记录 ()
        赋值 (.现行子夹, 0)
        
        
        
    .否则
        信息框 (“修改失败！！！！！！！！”, 0, )
    .如果结束
    
.否则
    
.如果结束


.子程序 _按钮10_被单击, 空白型, , 
.如果 (并且 (不等于 (.内容, “”), 不等于 (.内容, “无记名客户”)))
    _启动窗口.关闭记录集 (., 记录集句柄)
    赋值 (脚本, 相加 (“delete from 客户资料 where 客户id =”, .内容))
    输出调试文本 (脚本)
    .如果 (等于 (_启动窗口.执行 (., 脚本, ), 假))
        信息框 (“执行失败，请重试！”, 0, )
    .否则
        信息框 (“执行成功！”, 0, )
        赋值 (.内容, “”)
        赋值 (.内容, “”)
        赋值 (.内容, “”)
        赋值 (.内容, “”)
    .如果结束
    
.否则
    
.如果结束












.子程序 _输入框1_内容被改变, 空白型, , 


.子程序 _输入框1_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 tt, 空白型, , , 

.如果真 (等于 (键代码, #回车键))
    赋值 (tt, 0)
    _启动窗口.关闭记录集 (., 记录集句柄)
    赋值 (脚本, 相加 (“select * from 客户资料 where 客户id =”, .内容))
    输出调试文本 (脚本)
    赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
    _启动窗口.到首记录 (., 记录集句柄)
    .如果 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 真))
        信息框 (“没找到相应记录！”, 0, )
         ' 单位2.内容 ＝ “”
         ' 联系人2.内容 ＝ “”
         ' 显示1.内容 ＝ “”
         ' 输入框1.内容 ＝ “”
    .否则
        .判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 真))
            置等待鼠标 ()
             ' 处理事件 ()
            
            赋值 (tt, 相加 (tt, 1))
            
            _启动窗口.到后一记录 (., 记录集句柄)
        .判断循环尾 ()
        .如果 (小于 (tt, 0))
            信息框 (“没有相应记录！”, 0, )
             ' 单位2.内容 ＝ “”
             ' 联系人2.内容 ＝ “”
             ' '显示1.内容 ＝ “”
             ' 输入框1.内容 ＝ “”
            
        .否则
            赋值 (.内容, 到文本 (_启动窗口.读 (., 记录集句柄, 1)))
            赋值 (.内容, _启动窗口.读 (., 记录集句柄, 2))
            赋值 (.内容, _启动窗口.读 (., 记录集句柄, 3))
            
        .如果结束
        
    .如果结束
    
.如果真结束


.子程序 _按钮4_被单击, 空白型, , 
_启动窗口.关闭记录集 (., 记录集句柄)
销毁 ()

.子程序 _按钮7_被单击, 空白型, , 
赋值 (.内容, “”)
赋值 (.内容, “”)
赋值 (.内容, “”)
赋值 (.内容, “”)
赋值 (.内容, “”)
赋值 (.现行子夹, 0)

.子程序 _按钮9_被单击, 空白型, , 
赋值 (.内容, “”)
赋值 (.内容, “”)
赋值 (.内容, “”)
赋值 (.内容, “”)
赋值 (.内容, “”)
赋值 (.内容, “”)
赋值 (.图标, {  })

赋值 (.现行子夹, 0)


.子程序 _按钮11_被单击, 空白型, , 
赋值 (.现行子夹, 0)


.子程序 _供应商资料_获得焦点, 空白型, , 
赋值 (.现行子夹, 0)
首次读取示记录 ()


.子程序 _联系电话框_内容被改变, 空白型, , 


.子程序 _按钮12_被单击, 空白型, , 
赋值 (表格文件名, 相加 (取运行目录 (), “\wgid\客户资料”))
.如果 (等于 (表格文件名.未知支持库函数_55 (), 真))
    置文件属性 (表格文件名, 1)
    赋值 (表头标题, “客户资料”)
    载入 (打印, , 真)
.否则
    信息框 (“打印格式文件出错，操作失败！”, 相加 (0, #错误图标), )
.如果结束


.子程序 _分隔条1_被拖动, 空白型, , 
.参数 原位置, 整数型, , 
.参数 目的位置, 整数型, , 

.局部变量 新左边, 整数型, , , 

.如果真 (小于 (目的位置, 8))
    赋值 (目的位置, 8)
.如果真结束
.如果真 (大于 (目的位置, 相减 (., 20)))
    赋值 (目的位置, 相减 (., 20))
.如果真结束
赋值 (., 目的位置)
赋值 (.宽度, 相减 (., .左边))
赋值 (新左边, 相加 (., .))
新左边.移动 (相减 (., 12, 新左边), )


.窗口程序集 窗口程序集51, , , 

.子程序 _按钮1_被单击, 空白型, , 


.窗口程序集 窗口程序集52, , , 

.子程序 _打印_创建完毕, 空白型, , 

.如果 (等于 (表格文件名.未知支持库函数_56 (), 假))
    信息框 (“打开表格文件出错!”, 相加 (0, #错误图标), )
.否则
    0.未知支持库函数_31 (30)
    0.未知支持库函数_9 (0, 1, 表头标题)
    0.未知支持库函数_25 (0, 0, 相减 (., 1), 2)
    0.未知支持库函数_16 (0, 0, 相减 (., 1), “隶书”)
    0.未知支持库函数_18 (0, 0, 相减 (., 1), 10)
    赋值 (., #白色)
    表头标题.未知支持库函数_46 (“宋体”, 20, 真, 2)
    赋值 (., 1)
    赋值 (., 3)
    0.未知支持库函数_16 (0, 相减 (., 1), 相减 (., 1), “宋体”)
    赋值 (., 真)
    赋值 (., 真)
    赋值 (., 2)
    赋值 (., #蓝色)
    赋值 (., 真)
    0.未知支持库函数_20 (0, , 相减 (., 1), 1)
    赋值 (., #黑色)
.如果结束


.子程序 _按钮1_被单击, 空白型, , 
.如果真 (等于 (等于 (regtem2, 假), 真))
    信息框 (“本程序未注册，本功能受限！”, 0, )
    返回 ()
.如果真结束



未知支持库函数_27 ()


.子程序 _打印_将被销毁, 空白型, , 
置文件属性 (表格文件名, 32)
.如果 (等于 (删除文件 (表格文件名), 假))
    信息框 (“删除表格过程文件失败，请清除程序安装目录中wgid目录中的所有文件！”, 0, )
.否则
    
.如果结束


.子程序 _打印_尺寸被改变, 空白型, , 
.局部变量 tt, 空白型, , , 
.局部变量 ttt, 空白型, , , 

赋值 (., 相减 (打印., 10))
赋值 (., 相减 (打印., 160))
赋值 (., .)
.计次循环首 (., tt)
    赋值 (ttt, 相加 (ttt, 相减 (tt, 1).未知支持库函数_44 ()))
.计次循环尾 ()
0.未知支持库函数_32 (ttt)



.子程序 _按钮5_被单击, 空白型, , 
.局部变量 字体属性, 整数型, , , 

.如果真 (等于 (打开 (), 真))
    .如果真 (等于 (.加粗, 真))
        赋值 (字体属性, 相加 (字体属性, #粗体))
    .如果真结束
    .如果真 (等于 (.倾斜, 真))
        赋值 (字体属性, 相加 (字体属性, #斜体))
    .如果真结束
    .如果真 (等于 (.删除线, 真))
        赋值 (字体属性, 相加 (字体属性, #删除线))
    .如果真结束
    .如果真 (等于 (.下划线, 真))
        赋值 (字体属性, 相加 (字体属性, #下划线))
    .如果真结束
    未知支持库函数_5 ().未知支持库函数_20 (未知支持库函数_6 (), 未知支持库函数_7 (), 未知支持库函数_8 (), 字体属性)
    未知支持库函数_5 ().未知支持库函数_16 (未知支持库函数_6 (), 未知支持库函数_7 (), 未知支持库函数_8 (), .字体名称)
    未知支持库函数_5 ().未知支持库函数_18 (未知支持库函数_6 (), 未知支持库函数_7 (), 未知支持库函数_8 (), .字体大小)
    未知支持库函数_5 ().未知支持库函数_22 (未知支持库函数_6 (), 未知支持库函数_7 (), 未知支持库函数_8 (), .字体颜色)
.如果真结束


.子程序 _按钮2_被单击, 空白型, , 
.局部变量 表格行高, 整数型, , , 

.如果真 (输入框 (“请输入表格行高:”, “表格行高设置”, “30”, 表格行高, #输入整数))
     ' 表格1.置行高 (表格1.取光标行号 (), 表格行高)
    赋值 (., 表格行高)
    0.未知支持库函数_31 (50)
    1.未知支持库函数_31 (30)
    2.未知支持库函数_31 (30)
    
.如果真结束


.子程序 _按钮3_被单击, 空白型, , 
.局部变量 表格列宽, 整数型, , , 

.如果真 (输入框 (“请输入表格列宽:”, “表格列宽设置”, 到文本 (未知支持库函数_4 ().未知支持库函数_44 ()), 表格列宽, #输入整数))
    未知支持库函数_4 ().未知支持库函数_32 (表格列宽)
.如果真结束


.子程序 _按钮4_被单击, 空白型, , 
未知支持库函数_4 ().未知支持库函数_37 ()

.子程序 _按钮6_被单击, 空白型, , 
未知支持库函数_57 ()
_打印_创建完毕 ()


.子程序 _按钮7_被单击, 空白型, , 
未知支持库函数_5 ().未知支持库函数_25 (未知支持库函数_6 (), 未知支持库函数_7 (), 未知支持库函数_8 (), #.)

.子程序 _按钮8_被单击, 空白型, , 
未知支持库函数_5 ().未知支持库函数_25 (未知支持库函数_6 (), 未知支持库函数_7 (), 未知支持库函数_8 (), #.)


.子程序 _按钮9_被单击, 空白型, , 
未知支持库函数_5 ().未知支持库函数_25 (未知支持库函数_6 (), 未知支持库函数_7 (), 未知支持库函数_8 (), #.)


.子程序 _按钮10_被单击, 空白型, , 
载入 (设置打印表头窗口, , 真)


.子程序 _表格1_列宽被改变, 空白型, , 
.参数 列号, 整数型, , 

.局部变量 tt, 空白型, , , 
.局部变量 ttt, 空白型, , , 

.计次循环首 (., tt)
    赋值 (ttt, 相加 (ttt, 相减 (tt, 1).未知支持库函数_44 ()))
.计次循环尾 ()
0.未知支持库函数_32 (ttt)


.窗口程序集 窗口程序集53, , , 

.子程序 _商品销售明细统计_创建完毕, 空白型, , 
赋值 (., 经顶边)
赋值 (., 经左边)
赋值 (., 假)

赋值 (., 0)
赋值 (., 0)
赋值 (., 1)
赋值 (., 14)
0.未知支持库函数_9 (0, 1, “商品编码”)
0.未知支持库函数_9 (1, 1, “商品名称”)
0.未知支持库函数_9 (2, 1, “规格”)
0.未知支持库函数_9 (3, 1, “销售数量”)
0.未知支持库函数_9 (4, 1, “总销售金额”)

0.未知支持库函数_9 (5, 1, “产地”)
0.未知支持库函数_9 (6, 1, “零售价”)
0.未知支持库函数_9 (7, 1, “购买单位”)
0.未知支持库函数_9 (8, 1, “操作员”)
0.未知支持库函数_9 (9, 1, “商品大类”)
0.未知支持库函数_9 (10, 1, “销售备注”)
0.未知支持库函数_9 (11, 1, “销售日期”)
0.未知支持库函数_9 (12, 1, “销售单号”)
0.未知支持库函数_9 (13, 1, “退货数量”)

赋值 (., 1)




.子程序 表, 空白型, , 
赋值 (., 1)
.判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄一), 假))
    置等待鼠标 ()
     ' 处理事件 ()
    
    .未知支持库函数_38 ()
    相减 (., 1).未知支持库函数_9 (0, 1, _启动窗口.读 (., 记录集句柄一, “商品编码”))
    相减 (., 1).未知支持库函数_9 (1, 1, _启动窗口.读 (., 记录集句柄一, “商品名称”))
    相减 (., 1).未知支持库函数_9 (2, 1, _启动窗口.读 (., 记录集句柄一, “规格”))
    相减 (., 1).未知支持库函数_9 (3, 1, 到文本 (_启动窗口.读 (., 记录集句柄一, “xssl”)))
    相减 (., 1).未知支持库函数_9 (4, 1, 到文本 (_启动窗口.读 (., 记录集句柄一, “sfje”)))
    
    
    相减 (., 1).未知支持库函数_9 (5, 1, _启动窗口.读 (., 记录集句柄一, “产地”))
    相减 (., 1).未知支持库函数_9 (6, 1, 到文本 (_启动窗口.读 (., 记录集句柄一, “零售价”)))
    相减 (., 1).未知支持库函数_9 (7, 1, _启动窗口.读 (., 记录集句柄一, “购买客户”))
    相减 (., 1).未知支持库函数_9 (8, 1, _启动窗口.读 (., 记录集句柄一, “操作员”))
    相减 (., 1).未知支持库函数_9 (9, 1, _启动窗口.读 (., 记录集句柄一, “一级分类”))
    相减 (., 1).未知支持库函数_9 (10, 1, _启动窗口.读 (., 记录集句柄一, “备注”))
    相减 (., 1).未知支持库函数_9 (11, 1, 到文本 (_启动窗口.读 (., 记录集句柄一, “销售日期”)))
    相减 (., 1).未知支持库函数_9 (12, 1, _启动窗口.读 (., 记录集句柄一, “单据号”))
    相减 (., 1).未知支持库函数_9 (13, 1, _启动窗口.读 (., 记录集句柄一, “退货数量”))
    _启动窗口.到后一记录 (., 记录集句柄一)
.判断循环尾 ()

.子程序 _按钮1_被单击, 空白型, , 
.局部变量 开始, 文本型, , , 
.局部变量 结束, 文本型, , , 

.如果 (小于 (.今天, .今天))
    信息框 (“请注意开始日期和结束日期！”, 0, )
    返回 ()
.否则
    赋值 (开始, 相加 (“#”, 未知支持库函数_12 (.今天, “%y-%m-%d”), “#”))
    赋值 (结束, 相加 (“#”, 未知支持库函数_12 (.今天, “%y-%m-%d”), “#”))
    
    
    赋值 (脚本, 相加 (“select sum(销售数量) as xssl,sum(实付金额) as sfje,商品编码,商品名称,规格,产地,零售价,购买客户,操作员,一级分类,备注,销售日期,单据号,退货数量 from 销售 where 销售日期 >=”, 开始, “and 销售日期 <=”, 结束, “ group by 商品编码,商品名称,规格,产地,零售价,购买客户,操作员,一级分类,备注,销售日期,单据号,退货数量 order by 单据号 desc”))
    输出调试文本 (脚本)
    _启动窗口.关闭记录集 (., 记录集句柄一)
    赋值 (记录集句柄一, _启动窗口.查询 (., 脚本))
    _启动窗口.到首记录 (., 记录集句柄一)
    表 ()
    
    
.如果结束


.子程序 _按钮2_被单击, 空白型, , 
赋值 (表格文件名, 相加 (取运行目录 (), “\wgid\商品销售明细统计”))
.如果 (等于 (表格文件名.未知支持库函数_55 (), 真))
    置文件属性 (表格文件名, 1)
    赋值 (表头标题, “商品销售明细统计”)
    载入 (打印, , 真)
.否则
    信息框 (“打印格式文件出错，操作失败！”, 相加 (0, #错误图标), )
.如果结束



.子程序 _编辑框1_内容被改变, 空白型, , 
.局部变量 开始, 文本型, , , 
.局部变量 结束, 文本型, , , 
.局部变量 匿名局部变量_7776, 空白型, , , 

 ' _启动窗口.关闭记录集 (., 记录集句柄一)
 ' 脚本 ＝ “select * from 销售 where 单据号='” ＋ 树型框1.取项目文本 (树型框1.现行选中项) ＋ “'”
 ' 脚本 ＝ “select * from 销售 where 拼音码” ＋ “ like '%” ＋ 编辑框1.内容 ＋ “%'”

赋值 (脚本, 相加 (“select sum(销售数量) as xssl,sum(实付金额) as sfje,商品编码,商品名称,规格,产地,零售价,购买客户,操作员,一级分类,备注,拼音码,销售日期,单据号 from 销售 where 拼音码 like '%”, .内容, “%' group by 商品编码,商品名称,规格,产地,零售价,购买客户,操作员,一级分类,备注,拼音码,销售日期,单据号 order by 单据号 desc ”))
输出调试文本 (脚本)
_启动窗口.关闭记录集 (., 记录集句柄一)
赋值 (记录集句柄一, _启动窗口.查询 (., 脚本))
_启动窗口.到首记录 (., 记录集句柄一)
表 ()


.窗口程序集 窗口程序集54, , , 

.程序集变量 id, 文本型, , , 
.程序集变量 开始, 文本型, , , 
.程序集变量 结束, 文本型, , , 
.程序集变量 销售数量, 小数型, , , 
.程序集变量 进货价, 小数型, , , 
.程序集变量 实付金额, 小数型, , , 
.程序集变量 毛利, 小数型, , , 
.程序集变量 匿名程序集变量_7904, 空白型, , , 
.子程序 _商品销售统计_创建完毕, 空白型, , 
.局部变量 t, 空白型, , , 

赋值 (., 经顶边)
赋值 (., 经左边)
赋值 (., 假)

赋值 (., 0)
赋值 (., 0)
赋值 (., 1)
赋值 (., 6)
0.未知支持库函数_9 (0, 1, “商品编码”)
0.未知支持库函数_9 (1, 1, “商品名称”)
0.未知支持库函数_9 (2, 1, “规格”)
0.未知支持库函数_9 (3, 1, “销售数量”)
0.未知支持库函数_9 (4, 1, “总销售金额”)
0.未知支持库函数_9 (5, 1, “毛利合计”)
 ' 表格1.置数据 (0, 6, 1, “退货数量”)
 ' 表格1.置数据 (0, 7, 1, “找回金额”)
 ' 表格1.置数据 (0, 8, 1, “损失毛利”)
赋值 (., 1)

.子程序 _按钮1_被单击, 空白型, , 
.如果 (小于 (.今天, .今天))
    信息框 (“请注意开始日期和结束日期！”, 0, )
    返回 ()
.否则
    赋值 (开始, 相加 (“#”, 未知支持库函数_12 (.今天, “%y-%m-%d”), “#”))
    赋值 (结束, 相加 (“#”, 未知支持库函数_12 (.今天, “%y-%m-%d”), “#”))
    
    _启动窗口.关闭记录集 (., 记录集句柄一)
    赋值 (脚本, 相加 (“select sum(销售数量) as xssl,sum(实付金额) as sfje,sum(进货价) as jhj,sum(退货数量) as thsl,商品编码,商品名称,规格 from 销售 where 销售日期 >=”, 开始, “and 销售日期 <=”, 结束, “ and 实付金额 >0”, “ group by 商品编码,商品名称,规格”))
    赋值 (记录集句柄一, _启动窗口.查询 (., 脚本))
    赋值 (., 1)
    _启动窗口.到首记录 (., 记录集句柄一)
    .判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄一), 假))
        置等待鼠标 ()
        .未知支持库函数_38 ()
        相减 (., 1).未知支持库函数_9 (0, 1, _启动窗口.读 (., 记录集句柄一, “商品编码”))
        相减 (., 1).未知支持库函数_9 (1, 1, _启动窗口.读 (., 记录集句柄一, “商品名称”))
        相减 (., 1).未知支持库函数_9 (2, 1, _启动窗口.读 (., 记录集句柄一, “规格”))
        相减 (., 1).未知支持库函数_9 (3, 1, 到文本 (_启动窗口.读 (., 记录集句柄一, “xssl”)))
        相减 (., 1).未知支持库函数_9 (4, 1, 到文本 (_启动窗口.读 (., 记录集句柄一, “sfje”)))
        赋值 (进货价, 到数值 (_启动窗口.读 (., 记录集句柄一, “jhj”)))
        赋值 (实付金额, 到数值 (_启动窗口.读 (., 记录集句柄一, “sfje”)))
        赋值 (毛利, 相减 (实付金额, 进货价))
        相减 (., 1).未知支持库函数_9 (5, 1, 到文本 (毛利))
        
         ' _启动窗口.外部数据库1.关闭记录集 (记录集句柄)
         ' 脚本 ＝ “select sum(退货数量) as thsl,sum(毛利) as thml,sum(应找回金额) as thje,商品编码 from 销售退货记录 where 销售日期 >=” ＋ 开始 ＋ “and 销售日期 <=” ＋ 结束 ＋ “ and 商品编码='” ＋ 表格1.取数据 (表格1.行数 － 1, 0) ＋ “' group by 商品编码”
         ' 记录集句柄 ＝ _启动窗口.外部数据库1.查询 (脚本)
         ' _启动窗口.外部数据库1.到首记录 (记录集句柄)
         ' 如果 (_启动窗口.外部数据库1.尾记录后 (记录集句柄) ≠ 真)
         ' 判断循环首 (_启动窗口.外部数据库1.尾记录后 (记录集句柄) ＝ 假)
         ' 表格1.置数据 (表格1.行数 － 1, 6, 1, 到文本 (_启动窗口.外部数据库1.读 (记录集句柄, “thsl”)))
         ' 表格1.置数据 (表格1.行数 － 1, 7, 1, 到文本 (_启动窗口.外部数据库1.读 (记录集句柄, “thje”)))
         ' 表格1.置数据 (表格1.行数 － 1, 8, 1, 到文本 (_启动窗口.外部数据库1.读 (记录集句柄, “thml”)))
         ' _启动窗口.外部数据库1.到后一记录 (记录集句柄)
        
        
        _启动窗口.到后一记录 (., 记录集句柄一)
    .判断循环尾 ()
.如果结束


.子程序 _按钮2_被单击, 空白型, , 
赋值 (表格文件名, 相加 (取运行目录 (), “\wgid\商品销售统计”))
.如果 (等于 (表格文件名.未知支持库函数_55 (), 真))
    置文件属性 (表格文件名, 1)
    赋值 (表头标题, “商品销售统计”)
    载入 (打印, , 真)
.否则
    信息框 (“打印格式文件出错，操作失败！”, 相加 (0, #错误图标), )
.如果结束



.子程序 _编辑框1_内容被改变, 空白型, , 
.如果 (不等于 (.内容, “”))
    赋值 (., 1)
    .如果 (小于 (.今天, .今天))
        信息框 (“请注意开始日期和结束日期！”, 0, )
        返回 ()
    .否则
        赋值 (开始, 相加 (“#”, 未知支持库函数_12 (.今天, “%y-%m-%d”), “#”))
        赋值 (结束, 相加 (“#”, 未知支持库函数_12 (.今天, “%y-%m-%d”), “#”))
    .如果结束
    
     ' _启动窗口.关闭记录集 (., )
    赋值 (脚本, 相加 (“select * from 销售 where 拼音码”, “ like '%”, .内容, “%' and 实付金额>0 and 销售日期 >=”, 开始, “and 销售日期 <=”, 结束))
    _启动窗口.关闭记录集 (., 记录集句柄一)
    赋值 (记录集句柄一, _启动窗口.查询 (., 脚本))
    _启动窗口.到首记录 (., 记录集句柄一)
    赋值 (., 1)
    .判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄一), 假))
        置等待鼠标 ()
        .未知支持库函数_38 ()
        相减 (., 1).未知支持库函数_9 (0, 1, _启动窗口.读 (., 记录集句柄一, “商品编码”))
        相减 (., 1).未知支持库函数_9 (1, 1, _启动窗口.读 (., 记录集句柄一, “商品名称”))
        相减 (., 1).未知支持库函数_9 (2, 1, _启动窗口.读 (., 记录集句柄一, “规格”))
        相减 (., 1).未知支持库函数_9 (3, 1, 到文本 (_启动窗口.读 (., 记录集句柄一, “销售数量”)))
        相减 (., 1).未知支持库函数_9 (4, 1, 到文本 (_启动窗口.读 (., 记录集句柄一, “实付金额”)))
        赋值 (进货价, 到数值 (_启动窗口.读 (., 记录集句柄一, “进货价”)))
        赋值 (销售数量, 到数值 (_启动窗口.读 (., 记录集句柄一, “销售数量”)))
        赋值 (实付金额, 到数值 (_启动窗口.读 (., 记录集句柄一, “实付金额”)))
        赋值 (毛利, 相乘 (相减 (相除 (实付金额, 销售数量), 进货价), 销售数量))
        相减 (., 1).未知支持库函数_9 (5, 1, 到文本 (毛利))
         ' 到文本 (到数值 (_启动窗口.外部数据库1.读 (记录集句柄一, “销售数量”)) × (到数值 (_启动窗口.外部数据库1.读 (记录集句柄一, “实付金额”)) ÷ 到数值 (_启动窗口.外部数据库1.读 (记录集句柄一, “销售数量”)) － 到数值 (_启动窗口.外部数据库1.读 (记录集句柄一, “进货价”)))))
        _启动窗口.到后一记录 (., 记录集句柄一)
    .判断循环尾 ()
    
    
    
.否则
    
.如果结束


.子程序 _编辑框1_获得焦点, 空白型, , 
赋值 (.内容, “”)


.窗口程序集 窗口程序集55, , , 

.程序集变量 全部字段, 文本型, , "5", 
.程序集变量 运算符, 文本型, , "5", 
.程序集变量 运算关系, 文本型, , "5", 
.程序集变量 t, 空白型, , , 
.程序集变量 匿名程序集变量_5884, 空白型, , , 
.子程序 _查询_创建完毕, 空白型, , 


赋值 (全部字段, { “库存id”, “企业名称”, “工商管理费”, “国税”, “地税”, “地址”, “行业”, “主营人姓名”, “工商日期”, “地税日期”, “国税日期”, “工商状态”, “国税状态”, “地税状态”, “工商销售额”, “地税销售额”, “国税应税销售额” })
赋值 (运算符, { “等于”, “不等于”, “大于”, “小于”, “大于等于”, “小于等于”, “包含于” })
赋值 (运算关系, { “=”, “<>”, “>”, “<”, “>=”, “<=”, “like” })
.计次循环首 (取数组成员数 (全部字段), t)
    全部字段.加入项目 ( [t], )
    全部字段.加入项目 ( [t], )
    相减 (t, 1).选中项目 ()
.计次循环尾 ()
.计次循环首 (取数组成员数 (运算符), t)
    运算符.加入项目 ( [t], )
.计次循环尾 ()
赋值 (.连接文本, 取文本右边 (_启动窗口.取连接文本 (.), 相减 (取文本长度 (_启动窗口.取连接文本 (.)), 5)))
 ' 查寻窗口. ＝ 3
 ' 外形框1.宽度 ＝ 查寻窗口. － 10
赋值 (.现行选中项, 0)
赋值 (.现行选中项, 0)
 ' ??? ()  ' <!!!>


.子程序 _编辑框2_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (等于 (键代码, #回车键))
    加入条件 ()
    赋值 (.内容, “”)
.如果真结束


.子程序 加入条件, 空白型, , 
.如果 (等于 (取表项数 (), 0))
    赋值 (t, .插入表项 ())
    t.置标题 (0, .内容)
    t.置标题 (1, .内容)
    t.置标题 (2, 子文本替换 (.内容, #换行符, , , , 真))
.否则
    赋值 (t, .插入表项 ())
    相减 (t, 1).置标题 (3, .内容)
    t.置标题 (0, .内容)
    t.置标题 (1, .内容)
    t.置标题 (2, 子文本替换 (.内容, #换行符, , , , 真))
.如果结束


.子程序 _工具条1_被单击, 空白型, , 
.参数 按钮索引, 整数型, , 

.如果真 (等于 (按钮索引, 1))
    赋值 (t, 0)
    查寻 ()
.如果真结束
.如果真 (等于 (按钮索引, 3))
    打印预览 ()
.如果真结束
.如果真 (等于 (按钮索引, 5))
    销毁 ()
.如果真结束


.子程序 查寻, 空白型, , 
生成查寻脚本 ()
2.置字体尺寸 (1, 取行数 (), 取项目数 (), 70)
1.置列宽 (取项目数 (), 300)
1.加线条 (1, 取行数 (), 取列数 (), )
赋值 (.标题, 相加 (“共找到记录”, 到文本 (取行数 ()), “条”))

.子程序 生成查寻脚本, 空白型, , 
.局部变量 局部脚本1, 文本型, , , 
.局部变量 局部脚本2, 文本型, , , 
.局部变量 p, 空白型, , , 
.局部变量 j, 空白型, , , 

赋值 (p, 0)
赋值 (j, 0)
.计次循环首 (取项目数 (), t)
    .如果真 (等于 (相减 (t, 1).是否被选中 (), 真))
        .如果 (等于 (局部脚本1, “”))
            赋值 (局部脚本1, 相减 (t, 1).取项目文本 ())
        .否则
            赋值 (局部脚本1, 相加 (局部脚本1, “,”, 相减 (t, 1).取项目文本 ()))
        .如果结束
        
    .如果真结束
    
.计次循环尾 ()
以上为显示查询后显示的记录字段

.如果 (等于 (取表项数 (), 0))
    赋值 (.查询SQL, 相加 (“select ”, 局部脚本1, “ from ”, “ data ”))
    如果为空则查询全部信息（也可限定显示条件）
.否则
    .计次循环首 (取表项数 (), t)
        赋值 (局部脚本2, 相加 (局部脚本2, 相减 (t, 1).取标题 (0)))
        .计次循环首 (取项目数 (), p)
            .如果真 (等于 (相减 (t, 1).取标题 (1), 相减 (p, 1).取项目文本 ()))
                跳出循环 ()
            .如果真结束
            
        .计次循环尾 ()
        以上是为“等于，大于”相对应“=”
        .如果 (等于 (p, 7))
            赋值 (局部脚本2, 相加 (局部脚本2, “ ”, 运算关系 [p], “ ”))
        .否则
            赋值 (局部脚本2, 相加 (局部脚本2, 运算关系 [p]))
            赋值运算关系符到脚本
        .如果结束
        .计次循环首 (取项目数 (), j)
            .如果真 (等于 (相减 (t, 1).取标题 (0), 相减 (j, 1).取项目文本 ()))
                跳出循环 ()
            .如果真结束
            
        .计次循环尾 ()
        .如果 (等于 (p, 7))
            赋值 (局部脚本2, 相加 (局部脚本2, “'”, 相减 (t, 1).取标题 (2), “%'”))
        .否则
            .如果 (或者 (等于 (删首尾空 (相减 (t, 1).取标题 (0)), “id”), 等于 (删首尾空 (相减 (t, 1).取标题 (0)), “工商管理费”), 等于 (相减 (t, 1).取标题 (0), “地税”), 等于 (删首尾空 (相减 (t, 1).取标题 (0)), “国税”)))
                赋值 (局部脚本2, 相加 (局部脚本2, 相减 (t, 1).取标题 (2)))
                
            .否则
                赋值 (局部脚本2, 相加 (局部脚本2, “'”, 相减 (t, 1).取标题 (2), “'”))
                
            .如果结束
            输出调试文本 (相减 (t, 1).取标题 (2))
            输出调试文本 (局部脚本2)
            
        .如果结束
        输出调试文本 (局部脚本2)
        .如果真 (不等于 (相减 (t, 1).取标题 (3), “”))
            .如果 (等于 (相减 (t, 1).取标题 (3), “或者”))
                赋值 (局部脚本2, 相加 (局部脚本2, “ or ”))
            .否则
                赋值 (局部脚本2, 相加 (局部脚本2, “ and ”))
            .如果结束
            
        .如果真结束
        
    .计次循环尾 ()
    _启动窗口.查询 (., 相加 (“select ”, 局部脚本1, “ from ”, “ 总库 ”, “where ”, 局部脚本2))
    输出调试文本 (相加 (“select ”, 局部脚本1, “ from ”, “ data ”, “where ”, 局部脚本2))
.如果结束


.子程序 _按钮2_被单击, 空白型, , 
全部删除 ()

.子程序 _超级按钮1_被单击, 空白型, , 
到首记录 ()

.子程序 _超级按钮2_被单击, 空白型, , 
-1.跳过 ()

.子程序 _超级按钮3_被单击, 空白型, , 
.跳过 ()

.子程序 _超级按钮4_被单击, 空白型, , 
到尾记录 ()

.子程序 _查寻窗口_尺寸被改变, 空白型, , 
 ' 外形框1.宽度 ＝ 取屏幕宽度 () － 4
赋值 (.宽度, 相减 (取屏幕宽度 (), 4))
赋值 (.宽度, 相减 (取屏幕宽度 (), 4))
 ' 外形框4.高度 ＝ 取用户区高度 () － 外形框1.高度 － 90
赋值 (.宽度, 相减 (.宽度, 18))
赋值 (.高度, 相减 (.高度, 18))

.子程序 _按钮3_被单击, 空白型, , 
赋值 (t, 0)
查寻 ()


.子程序 _按钮1_被单击, 空白型, , 
.局部变量 aa, 整数型, 静态, "3", 

aa.删除表项 ( [1])

.窗口程序集 窗口程序集56, , , 

.子程序 _销售退货记录_创建完毕, 空白型, , 
赋值 (., 经顶边)
赋值 (., 经左边)
赋值 (., 假)
写销退货记录表头信息 ()

.子程序 _按钮2_被单击, 空白型, , 
.局部变量 t, 空白型, , , 

清空 ()
_启动窗口.关闭记录集 (., 记录集句柄)
赋值 (脚本, “select distinct(销售退货单号) from 销售退货记录 order by 销售退货单号”) ' 脚本 ＝ “select distinct(单据号),(select count(*) as 数量 from 总库) from 总库 order by 单据号”
赋值 (记录集句柄, _启动窗口.查询 (., 脚本)) ' 对数据库排序：order by  求合：sum
_启动窗口.到首记录 (., 记录集句柄)
.判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
    置等待鼠标 ()
     ' 处理事件 ()
    
    .加入项目 (到文本 (_启动窗口.读 (., 记录集句柄, “销售退货单号”)), , , )
    _启动窗口.到后一记录 (., 记录集句柄)
.判断循环尾 ()

.子程序 写销退货记录表头信息, 空白型, , 
赋值 (., 70)
赋值 (., 1)
赋值 (., 0)
赋值 (., 11)
相减 (., 1).未知支持库函数_9 (0, 1, “销售单号”)
相减 (., 1).未知支持库函数_9 (1, 1, “商品名称”)
相减 (., 1).未知支持库函数_9 (2, 1, “商品编码”)
相减 (., 1).未知支持库函数_9 (3, 1, “原销售量”)
相减 (., 1).未知支持库函数_9 (4, 1, “零售价”)
相减 (., 1).未知支持库函数_9 (5, 1, “退货数量”)
相减 (., 1).未知支持库函数_9 (6, 1, “购买客户”)
相减 (., 1).未知支持库函数_9 (7, 1, “退货日期”)
相减 (., 1).未知支持库函数_9 (8, 1, “退货原因”)
相减 (., 1).未知支持库函数_9 (9, 1, “应找回金额”)
相减 (., 1).未知支持库函数_9 (10, 1, “操作员”)


.子程序 _树型框1_项目被选择, 空白型, , 
.参数 选择方式, 整数型, , 

_启动窗口.关闭记录集 (., 记录集句柄)
赋值 (脚本, 相加 (“select * from 销售退货记录 where 销售退货单号='”, .取项目文本 (.最大化按钮), “'”))
输出调试文本 (脚本)
赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
添置销退记录表格数据 ()

.子程序 _按钮1_被单击, 空白型, , 
.局部变量 开始, 文本型, , , 
.局部变量 结束, 文本型, , , 
.局部变量 t, 空白型, , , 
.局部变量 项目名暂存, 文本型, , , 
.局部变量 项目名暂存2, 文本型, , , 

.如果 (小于 (.今天, .今天))
    信息框 (“请注意开始日期和结束日期！”, 0, )
    返回 ()
.否则
    赋值 (开始, 相加 (“#”, 未知支持库函数_12 (.今天, “%y-%m-%d”), “#”))
    赋值 (结束, 相加 (“#”, 未知支持库函数_12 (.今天, “%y-%m-%d”), “#”))
    赋值 (脚本, 相加 (“select count(*) from 销售退货记录  where 退货日期 >= ”, 开始, “ and 退货日期 <= ”, 结束))
    输出调试文本 (脚本)
    _启动窗口.关闭记录集 (., 记录集句柄一)
    赋值 (记录集句柄一, _启动窗口.查询 (., 脚本))
    赋值 (t, _启动窗口.读 (., 记录集句柄一, 1))
    _启动窗口.关闭记录集 (., 记录集句柄一)
    .如果 (等于 (t, 0))
        信息框 (“没有找到相关数据！”, 0, )
        返回 ()
    .否则
        _启动窗口.关闭记录集 (., 记录集句柄)
        赋值 (脚本, 相加 (“select * from 销售退货记录  where 退货日期 >= ”, 开始, “ and 退货日期 <= ”, 结束))
        输出调试文本 (脚本)
        赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
        清空 ()
        _启动窗口.到首记录 (., 记录集句柄)
        .计次循环首 (t, )
            赋值 (项目名暂存, _启动窗口.读 (., 记录集句柄, “销售退货单号”))
            .如果 (不等于 (项目名暂存, 项目名暂存2))
                .加入项目 (项目名暂存, , , )
            .否则
                
            .如果结束
            赋值 (项目名暂存2, 项目名暂存)
            
            _启动窗口.到后一记录 (., 记录集句柄)
        .计次循环尾 ()
        _启动窗口.关闭记录集 (., 记录集句柄)
        赋值 (脚本, 相加 (“select * from 销售退货记录  where 退货日期 >= ”, 开始, “ and 退货日期 <= ”, 结束))
        赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
        _启动窗口.到首记录 (., 记录集句柄)
        添置销退记录表格数据 ()
    .如果结束
    
.如果结束


.子程序 添置销退记录表格数据, 空白型, , 
_启动窗口.到首记录 (., 记录集句柄)
赋值 (., 1)

.判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
    置等待鼠标 ()
     ' 处理事件 ()
    
    .未知支持库函数_38 () ' <!!!>
    
    相减 (., 1).未知支持库函数_9 (0, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “销售单号”)))
    相减 (., 1).未知支持库函数_9 (1, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “商品名称”)))
    相减 (., 1).未知支持库函数_9 (2, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “商品编码”)))
    相减 (., 1).未知支持库函数_9 (3, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “原销售量”)))
    相减 (., 1).未知支持库函数_9 (4, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “零售价”)))
    相减 (., 1).未知支持库函数_9 (5, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “退货数量”)))
    相减 (., 1).未知支持库函数_9 (6, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “客户名称”)))
    相减 (., 1).未知支持库函数_9 (7, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “退货日期”)))
    相减 (., 1).未知支持库函数_9 (8, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “退货原因”)))
    相减 (., 1).未知支持库函数_9 (9, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “应找回金额”)))
    相减 (., 1).未知支持库函数_9 (10, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “操作员”)))
    _启动窗口.到后一记录 (., 记录集句柄)
.判断循环尾 ()
_启动窗口.关闭记录集 (., 记录集句柄)


.子程序 _按钮3_被单击, 空白型, , 
赋值 (., 1)

.子程序 _按钮4_被单击, 空白型, , 
赋值 (表格文件名, 相加 (取运行目录 (), “\wgid\销售退货记录”))
.如果 (等于 (表格文件名.未知支持库函数_55 (), 真))
    置文件属性 (表格文件名, 1)
    赋值 (表头标题, “销售退货记录”)
    载入 (打印, , 真)
.否则
    信息框 (“打印格式文件出错，操作失败！”, 相加 (0, #错误图标), )
.如果结束





.子程序 _编辑框1_内容被改变, 空白型, , 
.如果真 (等于 (.内容, “”))
    返回 ()
.如果真结束
 ' _启动窗口.关闭记录集 (., 记录集句柄)
赋值 (脚本, 相加 (“select * from 销售退货记录 where 拼音码”, “ like '%”, .内容, “%'”))
输出调试文本 (脚本)
赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
_启动窗口.到首记录 (., 记录集句柄)
添置销退记录表格数据 ()


.子程序 _按钮5_被单击, 空白型, , 
 ' _启动窗口.关闭记录集 (., 记录集句柄)
赋值 (脚本, “select * from 销售退货记录 ”)
输出调试文本 (脚本)
 ' 处理事件 ()
赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
 ' 处理事件 ()
_启动窗口.到首记录 (., 记录集句柄)
添置销退记录表格数据 ()


.子程序 _分隔条1_被拖动, 空白型, , 
.参数 原位置, 整数型, , 
.参数 目的位置, 整数型, , 

.局部变量 新左边, 整数型, , , 

.如果真 (小于 (目的位置, 8))
    赋值 (目的位置, 8)
.如果真结束
.如果真 (大于 (目的位置, 相减 (., 20)))
    赋值 (目的位置, 相减 (., 20))
.如果真结束
赋值 (., 目的位置)
赋值 (.宽度, 相减 (., .左边))
赋值 (新左边, 相加 (., .))
新左边.移动 (相减 (., 12, 新左边), )



.窗口程序集 窗口程序集57, , , 

.子程序 _供应商供货统计_创建完毕, 空白型, , 
赋值 (., 经顶边)
赋值 (., 经左边)
赋值 (., 假)
表头供 ()
供应商 ()
赋值 (.内容, “请选择供应商”)


.子程序 供应商, 空白型, , 
.局部变量 t, 空白型, , , 

赋值 (脚本, “select count(*) from 供应商资料”)
_启动窗口.关闭记录集 (., 记录集句柄一)
赋值 (记录集句柄一, _启动窗口.查询 (., 脚本))
赋值 (t, _启动窗口.读 (., 记录集句柄一, 1))
_启动窗口.关闭记录集 (., 记录集句柄一)
赋值 (脚本, “select * from 供应商资料”)
赋值 (记录集句柄一, _启动窗口.查询 (., 脚本))
_启动窗口.到首记录 (., 记录集句柄一)
.计次循环首 (t, )
    _启动窗口.读 (., 记录集句柄一, 2).加入项目 ()
    _启动窗口.到后一记录 (., 记录集句柄一)
.计次循环尾 ()


.子程序 表头供, 空白型, , 
赋值 (., 1)
赋值 (., 60)
赋值 (., 1)
赋值 (., 0)

赋值 (., 21)
0.未知支持库函数_32 (100)
相减 (., 1).未知支持库函数_9 (0, 1, “入库单号”)
相减 (., 1).未知支持库函数_9 (1, 1, “商品编码”)

2.未知支持库函数_32 (150)
相减 (., 1).未知支持库函数_9 (2, 1, “商品名称”)
3.未知支持库函数_32 (100)
相减 (., 1).未知支持库函数_9 (3, 1, “入库日期”)
相减 (., 1).未知支持库函数_9 (4, 1, “拼 音 码”)
相减 (., 1).未知支持库函数_9 (5, 1, “规    格”)
相减 (., 1).未知支持库函数_9 (6, 1, “进货数量”)
相减 (., 1).未知支持库函数_9 (7, 1, “库存数量”)
0.未知支持库函数_25 (8, , 12, 3)
相减 (., 1).未知支持库函数_9 (8, 1, “进 货 价”)
相减 (., 1).未知支持库函数_9 (9, 1, “应付金额”)
相减 (., 1).未知支持库函数_9 (10, 1, “已付金额”)
相减 (., 1).未知支持库函数_9 (11, 1, “零 售 价”)
相减 (., 1).未知支持库函数_9 (12, 1, “批 发 价”)
相减 (., 1).未知支持库函数_9 (13, 1, “库存上限”)
相减 (., 1).未知支持库函数_9 (14, 1, “库存下限”)
相减 (., 1).未知支持库函数_9 (15, 1, “一级分类”)
相减 (., 1).未知支持库函数_9 (16, 1, “二级分类”)
17.未知支持库函数_32 (150)
相减 (., 1).未知支持库函数_9 (17, 1, “供 货 商”)
相减 (., 1).未知支持库函数_9 (18, 1, “备    注”)
相减 (., 1).未知支持库函数_9 (19, 1, “产    地”)
相减 (., 1).未知支持库函数_9 (20, 1, “库 存 id”)
赋值 (., 88)
赋值 (., 88)

.子程序 _按钮1_被单击, 空白型, , 
.局部变量 开始, 文本型, , , 
.局部变量 结束, 文本型, , , 
.局部变量 t, 空白型, , , 
.局部变量 项目名暂存, 文本型, , , 
.局部变量 项目名暂存2, 文本型, , , 



.如果 (等于 (.内容, “请选择供应商”))
    信息框 (“请选择供应商”, 0, )
    返回 ()
.否则
    .如果 (小于 (.今天, .今天))
        信息框 (“请注意开始日期和结束日期！”, 0, )
        返回 ()
        
    .否则
        
    .如果结束
    赋值 (开始, 相加 (“#”, 未知支持库函数_12 (.今天, “%y-%m-%d”), “#”))
    赋值 (结束, 相加 (“#”, 未知支持库函数_12 (.今天, “%y-%m-%d”), “#”))
    
    
    赋值 (脚本, 相加 (“select count(*) from 总库  where 入库日期 >= ”, 开始, “ and 入库日期 <= ”, 结束, “ and 供货商='”, .内容, “'”))
    输出调试文本 (脚本)
    _启动窗口.关闭记录集 (., 记录集句柄)
    赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
    赋值 (t, _启动窗口.读 (., 记录集句柄, 1))
    
    _启动窗口.关闭记录集 (., 记录集句柄)
    .如果 (等于 (t, 0))
        信息框 (“没有找到相关数据！”, 0, )
    .否则
        _启动窗口.关闭记录集 (., 记录集句柄)
        赋值 (脚本, 相加 (“select * from 总库  where 入库日期 >= ”, 开始, “ and 入库日期 <= ”, 结束, “ and 供货商='”, .内容, “' order by 入库日期”))
        输出调试文本 (脚本)
        赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
        _启动窗口.到首记录 (., 记录集句柄)
        赋值 (., 1)
        添供表 ()
    .如果结束
    
    
    
    
    
.如果结束


.子程序 添供表, 空白型, , 
_启动窗口.到首记录 (., 记录集句柄)
赋值 (表格行数累计, 0)
赋值 (., 1)
赋值 (., 21)
.判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
    置等待鼠标 ()
     ' 处理事件 ()
    
    .未知支持库函数_38 () ' <!!!>
    赋值 (表格行数累计, 相加 (表格行数累计, 1))
    相减 (., 1).未知支持库函数_9 (0, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “单据号”)))
    相减 (., 1).未知支持库函数_9 (1, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “商品编码”))) ' 编码
    相减 (., 1).未知支持库函数_9 (2, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “商品名称”))) ' 名称
    相减 (., 1).未知支持库函数_9 (3, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “入库日期”))) ' 入库日期
    相减 (., 1).未知支持库函数_9 (4, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “拼音码”))) ' 拼音码
    相减 (., 1).未知支持库函数_9 (5, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “规格”)))
    相减 (., 1).未知支持库函数_9 (6, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “数量”)))
    相减 (., 1).未知支持库函数_9 (7, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “库存数量”))) ' 数量
    相减 (., 1).未知支持库函数_9 (8, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “进货价”))) ' 进货价
    相减 (., 1).未知支持库函数_9 (9, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “应付金额”))) ' 应付
    相减 (., 1).未知支持库函数_9 (10, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “已付金额”))) ' 已付
    相减 (., 1).未知支持库函数_9 (11, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “零售价”))) ' 零售
    相减 (., 1).未知支持库函数_9 (12, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “批发价”))) ' 批发
    相减 (., 1).未知支持库函数_9 (13, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “库存上限”))) ' 上限
    相减 (., 1).未知支持库函数_9 (14, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “库存下限”))) ' 下限
    相减 (., 1).未知支持库函数_9 (15, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “一级分类”))) ' 一级
    相减 (., 1).未知支持库函数_9 (16, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “二级分类”))) ' 二级
    相减 (., 1).未知支持库函数_9 (17, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “供货商”))) ' 供货商
    相减 (., 1).未知支持库函数_9 (18, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “备注”))) ' 备注
    相减 (., 1).未知支持库函数_9 (19, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “产地”))) ' 备注
    相减 (., 1).未知支持库函数_9 (20, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “库存id”))) ' 库存id
    
    _启动窗口.到后一记录 (., 记录集句柄)
.判断循环尾 ()
_启动窗口.关闭记录集 (., 记录集句柄)



.子程序 _按钮2_被单击, 空白型, , 
赋值 (表格文件名, 相加 (取运行目录 (), “\wgid\供货商供货统计”))
.如果 (等于 (表格文件名.未知支持库函数_55 (), 真))
    置文件属性 (表格文件名, 1)
    赋值 (表头标题, “供货商供货统计”)
    载入 (打印, , 真)
.否则
    信息框 (“打印格式文件出错，操作失败！”, 相加 (0, #错误图标), )
.如果结束



.窗口程序集 窗口程序集58, , , 

.子程序 _按钮1_被单击, 空白型, , 
.局部变量 开始, 文本型, , , 
.局部变量 结束, 文本型, , , 
.局部变量 合计, 小数型, , , 


.如果 (小于 (.今天, .今天))
    信息框 (“请注意开始日期和结束日期！”, 0, )
    返回 ()
.否则
    赋值 (开始, 相加 (“#”, 未知支持库函数_12 (.今天, “%y-%m-%d”), “#”))
    赋值 (结束, 相加 (“#”, 未知支持库函数_12 (.今天, “%y-%m-%d”), “#”))
    
.如果结束


赋值 (脚本, 相加 (“select * from 销售 where 销售日期 >= ”, 开始, “ and 销售日期 <= ”, 结束, “ and 实付金额>0”))
_启动窗口.关闭记录集 (., )
赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
_启动窗口.到首记录 (., 记录集句柄)
赋值 (合计, 0)
.判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
    置等待鼠标 ()
     ' 处理事件 ()
    
     ' 信息框 (到文本 (到数值 (_启动窗口.外部数据库1.读 (记录集句柄, “毛利”))), 0, )
    赋值 (合计, 相加 (合计, 相乘 (到数值 (_启动窗口.读 (., 记录集句柄, “销售数量”)), 相减 (相除 (到数值 (_启动窗口.读 (., 记录集句柄, “实付金额”)), 到数值 (_启动窗口.读 (., 记录集句柄, “销售数量”))), 到数值 (_启动窗口.读 (., 记录集句柄, “进货价”))))))
    _启动窗口.到后一记录 (., 记录集句柄)
.判断循环尾 ()

赋值 (.内容, 相加 (#换行符, 到文本 (合计)))


.子程序 _按钮2_被单击, 空白型, , 
.局部变量 合计, 小数型, , , 


赋值 (脚本, 相加 (“select * from 销售”, “ where 实付金额>0”))
_启动窗口.关闭记录集 (., )
赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
_启动窗口.到首记录 (., 记录集句柄)
赋值 (合计, 0)
.判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
    置等待鼠标 ()
     ' 处理事件 ()
    赋值 (合计, 相加 (合计, 相乘 (到数值 (_启动窗口.读 (., 记录集句柄, “销售数量”)), 相减 (相除 (到数值 (_启动窗口.读 (., 记录集句柄, “实付金额”)), 到数值 (_启动窗口.读 (., 记录集句柄, “销售数量”))), 到数值 (_启动窗口.读 (., 记录集句柄, “进货价”))))))
    _启动窗口.到后一记录 (., 记录集句柄)
.判断循环尾 ()
赋值 (.内容, 相加 (#换行符, 到文本 (合计)))

.窗口程序集 窗口程序集59, , , 

.子程序 _收款员收款明细_创建完毕, 空白型, , 
.局部变量 t, 空白型, , , 

赋值 (., 经顶边)
赋值 (., 经左边)
赋值 (., 假)

 ' 赋值 (脚本, “select count(*) from 员工资料”)
_启动窗口.关闭记录集 (., 记录集句柄一)
赋值 (记录集句柄一, _启动窗口.查询 (., 脚本))
赋值 (t, _启动窗口.读 (., 记录集句柄一, 1))
_启动窗口.关闭记录集 (., 记录集句柄一)
赋值 (脚本, “select * from 员工资料”)
赋值 (记录集句柄一, _启动窗口.查询 (., 脚本))
_启动窗口.到首记录 (., 记录集句柄一)
.计次循环首 (t, )
    _启动窗口.读 (., 记录集句柄一, 2).加入项目 ()
    _启动窗口.到后一记录 (., 记录集句柄一)
.计次循环尾 ()
赋值 (.内容, “请选择收款员”)
赋值 (., 1)
赋值 (., 0)
赋值 (., 0)
赋值 (., 5)
赋值 (., 1)
0.未知支持库函数_32 (100)
相减 (., 1).未知支持库函数_9 (0, 1, “收 款 员”)
1.未知支持库函数_32 (100)
相减 (., 1).未知支持库函数_9 (1, 1, “发生金额”)
2.未知支持库函数_32 (130)
相减 (., 1).未知支持库函数_9 (2, 1, “日    期”)
3.未知支持库函数_32 (180)
相减 (., 1).未知支持库函数_9 (3, 1, “原    因”)
4.未知支持库函数_32 (150)
相减 (., 1).未知支持库函数_9 (4, 1, “备    注”)


.子程序 _按钮1_被单击, 空白型, , 
.局部变量 开始, 文本型, , , 
.局部变量 结束, 文本型, , , 
.局部变量 t, 空白型, , , 
.局部变量 d, 小数型, , , 

.如果 (小于 (.今天, .今天))
    信息框 (“请注意开始日期和结束日期！”, 0, )
    返回 ()
.否则
    .如果 (等于 (.内容, “请选择收款员”))
        信息框 (“请选择收款员!”, 0, )
        返回 ()
    .否则
        
    .如果结束
    
    
    
    赋值 (开始, 相加 (“#”, 未知支持库函数_12 (.今天, “%y-%m-%d”), “#”))
    赋值 (结束, 相加 (“#”, 未知支持库函数_12 (.今天, “%y-%m-%d”), “#”))
    赋值 (脚本, 相加 (“select count(*) from 收款员收款明细  where 收入日期 >= ”, 开始, “ and 收入日期 <= ”, 结束, “ and 操作员='”, .内容, “'”))
    输出调试文本 (脚本)
    _启动窗口.关闭记录集 (., 记录集句柄一)
    赋值 (记录集句柄一, _启动窗口.查询 (., 脚本))
    赋值 (t, _启动窗口.读 (., 记录集句柄一, 1))
    
    _启动窗口.关闭记录集 (., 记录集句柄一)
     ' _启动窗口.外部数据库1.关闭记录集 (记录集句柄一)
    赋值 (脚本, 相加 (“select * from 收款员收款明细  where 收入日期 >= ”, 开始, “ and 收入日期 <= ”, 结束, “ and 操作员='”, .内容, “'”))
    
    输出调试文本 (脚本)
    赋值 (记录集句柄一, _启动窗口.查询 (., 脚本))
    _启动窗口.到首记录 (., 记录集句柄一)
    赋值 (., 1)
    .计次循环首 (t, )
        .未知支持库函数_38 ()
        相减 (., 1).未知支持库函数_9 (0, 1, _启动窗口.读 (., 记录集句柄一, “操作员”))
        相减 (., 1).未知支持库函数_9 (1, 1, _启动窗口.读 (., 记录集句柄一, “金额”))
        相减 (., 1).未知支持库函数_9 (2, 1, 到文本 (_启动窗口.读 (., 记录集句柄一, “收入日期”)))
        相减 (., 1).未知支持库函数_9 (3, 1, _启动窗口.读 (., 记录集句柄一, “收入原因”))
        相减 (., 1).未知支持库函数_9 (4, 1, _启动窗口.读 (., 记录集句柄一, “备注”))
        赋值 (d, 相加 (d, 到数值 (_启动窗口.读 (., 记录集句柄一, “金额”))))
        _启动窗口.到后一记录 (., 记录集句柄一)
    .计次循环尾 ()
    
    赋值 (.内容, 到文本 (d))
    
.如果结束


.子程序 _透明标签3_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 



.子程序 _按钮2_被单击, 空白型, , 
赋值 (表格文件名, 相加 (取运行目录 (), “\wgid\收款员收款明细”))
.如果 (等于 (表格文件名.未知支持库函数_55 (), 真))
    置文件属性 (表格文件名, 1)
    赋值 (表头标题, “收款员收款明细”)
    载入 (打印, , 真)
.否则
    信息框 (“打印格式文件出错，操作失败！”, 相加 (0, #错误图标), )
.如果结束



.子程序 _组合框1_列表项被选择, 空白型, , 


.窗口程序集 窗口程序集60, , , 

.子程序 _按钮1_被单击, 空白型, , 
.局部变量 开始, 文本型, , , 
.局部变量 结束, 文本型, , , 
.局部变量 销售收入, 文本型, , , 
.局部变量 其他收入, 文本型, , , 
.局部变量 毛利, 小数型, , , 
.局部变量 进货支出, 文本型, , , 
.局部变量 退货支出, 文本型, , , 
.局部变量 其他支出, 文本型, , , 
.局部变量 客户还款, 文本型, , , 

赋值 (., 1)
.如果 (小于 (.今天, .今天))
    信息框 (“请注意开始日期和结束日期！”, 0, )
    返回 ()
.否则
    赋值 (开始, 相加 (“#”, 未知支持库函数_12 (.今天, “%y-%m-%d”), “#”))
    赋值 (结束, 相加 (“#”, 未知支持库函数_12 (.今天, “%y-%m-%d”), “#”))
    .如果 (并且 (等于 (.选中, 假), 等于 (.选中, 假)))
        信息框 (“请选择财务类!”, 64, “贝尔软件”)
        返回 ()
    .否则
        .如果 (并且 (等于 (.选中, 真), 等于 (.选中, 假)))
            赋值 (脚本, 相加 (“select sum(已付额) from 已付款 where 付款日期 >= ”, 开始, “ and 付款日期 <= ”, 结束))
            输出调试文本 (脚本)
            _启动窗口.关闭记录集 (., 记录集句柄)
            赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
            赋值 (进货支出, 到文本 (_启动窗口.读 (., 记录集句柄, 1)))
            赋值 (脚本, 相加 (“select sum(支出金额) from 其他支出 where 支出日期 >= ”, 开始, “ and 支出日期 <= ”, 结束))
            输出调试文本 (脚本)
            _启动窗口.关闭记录集 (., 记录集句柄)
            赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
            赋值 (其他支出, 到文本 (_启动窗口.读 (., 记录集句柄, 1)))
            赋值 (脚本, 相加 (“select sum(应找回金额) from 销售退货记录 where 退货日期 >= ”, 开始, “ and 退货日期 <= ”, 结束, “ and 应找回金额>=0”))
            输出调试文本 (脚本)
            _启动窗口.关闭记录集 (., 记录集句柄)
            赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
            赋值 (退货支出, 到文本 (_启动窗口.读 (., 记录集句柄, 1)))
            赋值 (., 60)
            赋值 (., 0)
            赋值 (., 0)
            赋值 (., 1)
            赋值 (., 3)
            相减 (., 1).未知支持库函数_9 (0, 1, “进货支出”)
            相减 (., 1).未知支持库函数_9 (1, 1, “销售退款”)
            相减 (., 1).未知支持库函数_9 (2, 1, “其他支出”)
            赋值 (., 1)
            
            .未知支持库函数_38 ()
            相减 (., 1).未知支持库函数_9 (0, 1, 到文本 (进货支出))
            相减 (., 1).未知支持库函数_9 (1, 1, 到文本 (退货支出))
            相减 (., 1).未知支持库函数_9 (2, 1, 到文本 (其他支出))
            1.未知支持库函数_25 (0, 相减 (., 1), 相减 (., 1), 3)
            
            
        .否则
            .如果 (并且 (等于 (.选中, 假), 等于 (.选中, 真))) ' 收入
                赋值 (., 60)
                
                赋值 (., 0)
                赋值 (., 0)
                赋值 (., 1)
                赋值 (., 4)
                相减 (., 1).未知支持库函数_9 (0, 1, “销售总额”)
                相减 (., 1).未知支持库函数_9 (1, 1, “其他收入”)
                相减 (., 1).未知支持库函数_9 (2, 1, “毛    利”)
                相减 (., 1).未知支持库函数_9 (3, 1, “客户还款”)
                赋值 (., 1)
                
                赋值 (脚本, 相加 (“select sum(实付金额) from 销售 where 销售日期 >= ”, 开始, “ and 销售日期 <= ”, 结束, “ and 实付金额>0”))
                输出调试文本 (脚本)
                _启动窗口.关闭记录集 (., 记录集句柄)
                赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
                 ' 信息框 (到文本 (_启动窗口.外部数据库1.读 (记录集句柄, 1)), 0, )
                赋值 (销售收入, 到文本 (_启动窗口.读 (., 记录集句柄, 1)))
                 ' 毛利 ＝ 到文本 (_启动窗口.外部数据库1.读 (记录集句柄, 2))
                
                赋值 (脚本, 相加 (“select * from 销售 where 销售日期 >= ”, 开始, “ and 销售日期 <= ”, 结束, “ and 实付金额>0”))
                输出调试文本 (脚本)
                _启动窗口.关闭记录集 (., 记录集句柄)
                赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
                _启动窗口.到首记录 (., 记录集句柄)
                .判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
                    赋值 (毛利, 相加 (毛利, 相乘 (到数值 (_启动窗口.读 (., 记录集句柄, “销售数量”)), 相减 (相除 (到数值 (_启动窗口.读 (., 记录集句柄, “实付金额”)), 到数值 (_启动窗口.读 (., 记录集句柄, “销售数量”))), 到数值 (_启动窗口.读 (., 记录集句柄, “进货价”))))))
                    _启动窗口.到后一记录 (., 记录集句柄)
                .判断循环尾 ()
                 ' 信息框 (到文本 (_启动窗口.外部数据库1.读 (记录集句柄, 1)), 0, )
                 ' 销售收入 ＝ 到文本 (_启动窗口.外部数据库1.读 (记录集句柄, 1))
                 ' 毛利 ＝ 到文本 (_启动窗口.外部数据库1.读 (记录集句柄, 2))
                
                
                
                赋值 (脚本, 相加 (“select sum(收入金额) from 其他收入 where 收入日期 >= ”, 开始, “ and 收入日期 <= ”, 结束))
                输出调试文本 (脚本)
                _启动窗口.关闭记录集 (., 记录集句柄)
                赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
                赋值 (其他收入, 到文本 (_启动窗口.读 (., 记录集句柄, 1)))
                赋值 (脚本, 相加 (“select sum(还款金额) from 销售还款记录 where 还款日期 >= ”, 开始, “ and 还款日期 <= ”, 结束))
                输出调试文本 (脚本)
                _启动窗口.关闭记录集 (., 记录集句柄)
                赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
                赋值 (客户还款, 到文本 (_启动窗口.读 (., 记录集句柄, 1)))
                
                
                
                .未知支持库函数_38 ()
                相减 (., 1).未知支持库函数_9 (0, 1, 到文本 (销售收入))
                相减 (., 1).未知支持库函数_9 (1, 1, 到文本 (其他收入))
                相减 (., 1).未知支持库函数_9 (2, 1, 到文本 (毛利))
                相减 (., 1).未知支持库函数_9 (3, 1, 到文本 (客户还款))
                1.未知支持库函数_25 (0, 相减 (., 1), 相减 (., 1), 3)
                
            .否则
                赋值 (脚本, 相加 (“select sum(已付额) from 已付款 where 付款日期 >= ”, 开始, “ and 付款日期 <= ”, 结束))
                输出调试文本 (脚本)
                _启动窗口.关闭记录集 (., 记录集句柄)
                赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
                 ' 信息框 (到文本 (_启动窗口.外部数据库1.读 (记录集句柄, 1)), 0, )
                赋值 (进货支出, 到文本 (_启动窗口.读 (., 记录集句柄, 1)))
                赋值 (脚本, 相加 (“select sum(支出金额) from 其他支出 where 支出日期 >= ”, 开始, “ and 支出日期 <= ”, 结束))
                输出调试文本 (脚本)
                _启动窗口.关闭记录集 (., 记录集句柄)
                赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
                赋值 (其他支出, 到文本 (_启动窗口.读 (., 记录集句柄, 1)))
                赋值 (脚本, 相加 (“select sum(应找回金额) from 销售退货记录 where 退货日期 >= ”, 开始, “ and 退货日期 <= ”, 结束, “ and 应找回金额>=0”))
                输出调试文本 (脚本)
                _启动窗口.关闭记录集 (., 记录集句柄)
                赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
                赋值 (退货支出, 到文本 (_启动窗口.读 (., 记录集句柄, 1)))
                赋值 (脚本, 相加 (“select sum(实付金额) from 销售 where 销售日期 >= ”, 开始, “ and 销售日期 <= ”, 结束, “ and 实付金额>0”))
                输出调试文本 (脚本)
                _启动窗口.关闭记录集 (., 记录集句柄)
                赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
                赋值 (销售收入, 到文本 (_启动窗口.读 (., 记录集句柄, 1)))
                 ' 毛利 ＝ 到文本 (_启动窗口.外部数据库1.读 (记录集句柄, 2))
                
                赋值 (脚本, 相加 (“select * from 销售 where 销售日期 >= ”, 开始, “ and 销售日期 <= ”, 结束, “ and 实付金额>0”))
                输出调试文本 (脚本)
                _启动窗口.关闭记录集 (., 记录集句柄)
                赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
                _启动窗口.到首记录 (., 记录集句柄)
                .判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
                    赋值 (毛利, 相加 (毛利, 相乘 (到数值 (_启动窗口.读 (., 记录集句柄, “销售数量”)), 相减 (相除 (到数值 (_启动窗口.读 (., 记录集句柄, “实付金额”)), 到数值 (_启动窗口.读 (., 记录集句柄, “销售数量”))), 到数值 (_启动窗口.读 (., 记录集句柄, “进货价”))))))
                    _启动窗口.到后一记录 (., 记录集句柄)
                .判断循环尾 ()
                 ' 信息框 (到文本 (_启动窗口.外部数据库1.读 (记录集句柄, 1)), 0, )
                
                
                
                
                
                赋值 (脚本, 相加 (“select sum(收入金额) from 其他收入 where 收入日期 >= ”, 开始, “ and 收入日期 <= ”, 结束))
                输出调试文本 (脚本)
                _启动窗口.关闭记录集 (., 记录集句柄)
                赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
                赋值 (其他收入, 到文本 (_启动窗口.读 (., 记录集句柄, 1)))
                
                赋值 (脚本, 相加 (“select sum(还款金额) from 销售还款记录 where 还款日期 >= ”, 开始, “ and 还款日期 <= ”, 结束))
                输出调试文本 (脚本)
                _启动窗口.关闭记录集 (., 记录集句柄)
                赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
                赋值 (客户还款, 到文本 (_启动窗口.读 (., 记录集句柄, 1)))
                
                赋值 (., 60)
                赋值 (., 0)
                赋值 (., 0)
                赋值 (., 1)
                赋值 (., 7)
                相减 (., 1).未知支持库函数_9 (0, 1, “销售总额”)
                相减 (., 1).未知支持库函数_9 (1, 1, “客户还款”)
                相减 (., 1).未知支持库函数_9 (2, 1, “其他收入”)
                相减 (., 1).未知支持库函数_9 (3, 1, “毛    利”)
                相减 (., 1).未知支持库函数_9 (4, 1, “进货支出”)
                相减 (., 1).未知支持库函数_9 (5, 1, “退货支出”)
                相减 (., 1).未知支持库函数_9 (6, 1, “其他支出”)
                
                赋值 (., 1)
                .未知支持库函数_38 ()
                相减 (., 1).未知支持库函数_9 (0, 1, 到文本 (销售收入))
                相减 (., 1).未知支持库函数_9 (1, 1, 到文本 (客户还款))
                相减 (., 1).未知支持库函数_9 (2, 1, 到文本 (其他收入))
                相减 (., 1).未知支持库函数_9 (3, 1, 到文本 (毛利))
                相减 (., 1).未知支持库函数_9 (4, 1, 到文本 (进货支出))
                相减 (., 1).未知支持库函数_9 (5, 1, 到文本 (退货支出))
                相减 (., 1).未知支持库函数_9 (6, 1, 到文本 (其他支出))
                1.未知支持库函数_25 (0, 相减 (., 1), 相减 (., 1), 3)
                
            .如果结束
            
        .如果结束
        
    .如果结束
    
    
.如果结束




.子程序 _财务状况_创建完毕, 空白型, , 

赋值 (., 经顶边)
赋值 (., 经左边)
赋值 (., 假)



.子程序 _按钮2_被单击, 空白型, , 
赋值 (表格文件名, 相加 (取运行目录 (), “\wgid\财务状况”))
.如果 (等于 (表格文件名.未知支持库函数_55 (), 真))
    置文件属性 (表格文件名, 1)
    赋值 (表头标题, “财务状况”)
    载入 (打印, , 真)
.否则
    信息框 (“打印格式文件出错，操作失败！”, 相加 (0, #错误图标), )
.如果结束


.窗口程序集 窗口程序集61, , , 

.子程序 _按钮1_被单击, 空白型, , 
赋值 (客户还款操作, 真)
记帐查询.未知支持库函数_9 (., 记帐查询.未知支持库函数_3 (.), 5, 1, .内容)
赋值 (记帐查询..可视, 真)
赋值 (记帐查询..可视, 真)
销毁 ()

.子程序 _记帐还款_创建完毕, 空白型, , 
赋值 (.内容, 子文本替换 (记帐查询.未知支持库函数_10 (., 记帐查询.未知支持库函数_3 (.), 5), “-”, “”, , , 真))
赋值 (.内容, .内容)

.子程序 _按钮2_被单击, 空白型, , 
销毁 ()


.窗口程序集 窗口程序集62, , , 

.程序集变量 llll, 空白型, , , 
.子程序 _登录_创建完毕, 空白型, , 
.局部变量 t, 空白型, , , 

赋值 (llll, 1)

赋值 (脚本, “select count(*) from 员工资料”)
输出调试文本 (脚本)
_启动窗口.关闭记录集 (., 记录集句柄一)
赋值 (记录集句柄一, _启动窗口.查询 (., 脚本))
赋值 (t, _启动窗口.读 (., 记录集句柄一, 1))
_启动窗口.关闭记录集 (., 记录集句柄一)
赋值 (脚本, “select * from 员工资料”)
输出调试文本 (脚本)
赋值 (记录集句柄一, _启动窗口.查询 (., 脚本))
_启动窗口.到首记录 (., 记录集句柄一)
.计次循环首 (t, )
    _启动窗口.读 (., 记录集句柄一, 2).加入项目 ()
    _启动窗口.到后一记录 (., 记录集句柄一)
.计次循环尾 ()
赋值 (.内容, “请选择用户名”)
获取焦点 ()

.子程序 _超级按钮3_被单击, 空白型, , 
.局部变量 t, 空白型, , , 

赋值 (脚本, “select count(*) from 员工资料”)
_启动窗口.关闭记录集 (., 记录集句柄一)
赋值 (记录集句柄一, _启动窗口.查询 (., 脚本))
赋值 (t, _启动窗口.读 (., 记录集句柄一, 1))
_启动窗口.关闭记录集 (., 记录集句柄一)
赋值 (脚本, 相加 (“select * from 员工资料 where 姓名='”, .内容, “'”))
赋值 (记录集句柄一, _启动窗口.查询 (., 脚本))
_启动窗口.到首记录 (., 记录集句柄一)

.判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄一), 假))
    置等待鼠标 ()
     ' 处理事件 ()
    
    .如果 (等于 (到文本 (_启动窗口.读 (., 记录集句柄一, “登录密码”)), .内容))
        赋值 (操作员, .内容)
        验证权限 ()
        销毁 ()
    .否则
        .如果 (等于 (llll, 3))
            信息框 (“安全设置将关闭程序!”, 0, )
            结束 ()
        .否则
            信息框 (“非法登录信息!”, 0, )
            赋值 (llll, 相加 (llll, 1))
            
        .如果结束
        
    .如果结束
    _启动窗口.到后一记录 (., 记录集句柄一)
.判断循环尾 ()


.子程序 _图片框1_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 



.子程序 _超级按钮2_被单击, 空白型, , 
赋值 (.内容, “”)
赋值 (.现行选中项, -1)


.子程序 _超级按钮1_被单击, 空白型, , 
.如果 (等于 (操作员, “';lkjhyuiop”))
    结束 ()
.否则
    登录.销毁 ()
.如果结束



.窗口程序集 窗口程序集63, , , 

.子程序 _按钮1_被单击, 空白型, , 


.窗口程序集 窗口程序集64, , , 

.子程序 _记帐还供应商款_创建完毕, 空白型, , 
赋值 (.内容, 子文本替换 (往来帐目.未知支持库函数_10 (., 往来帐目.未知支持库函数_3 (.), 2), “-”, “”, , , 真))
赋值 (.内容, .内容)


.子程序 _按钮1_被单击, 空白型, , 
赋值 (供货商还款操作, 真)
往来帐目.未知支持库函数_9 (., 往来帐目.未知支持库函数_3 (.), 2, 1, .内容)
赋值 (往来帐目..可视, 真)
赋值 (往来帐目..可视, 真)
销毁 ()


.子程序 _按钮2_被单击, 空白型, , 
销毁 ()


.窗口程序集 窗口程序集65, , , 

.程序集变量 可改, 逻辑型, , , 
.程序集变量 匿名程序集变量_7200, 空白型, , , 
.子程序 _选择列表框1_列表项被选择, 空白型, , 


.子程序 检查, 空白型, , 
.如果 (不等于 (可改, 真))
    信息框 (“如果要修改其权限,请单击开始修改按钮!”, 0, )
.否则
    
.如果结束


.子程序 _单选框1_被单击, 空白型, , 
.局部变量 t, 空白型, , , 

.计次循环首 (取项目数 (), t)
    相减 (t, 1).选中项目 ()
    
.计次循环尾 ()



.子程序 _单选框2_被单击, 空白型, , 
.局部变量 t, 空白型, , , 

.计次循环首 (取项目数 (), t)
    
    相减 (t, 1).选中项目 (假)
    
.计次循环尾 ()


.子程序 _单选框4_被单击, 空白型, , 
.局部变量 t, 空白型, , , 

.计次循环首 (取项目数 (), t)
    相减 (t, 1).选中项目 ()
    
.计次循环尾 ()


.子程序 _单选框3_被单击, 空白型, , 
.局部变量 t, 空白型, , , 

.计次循环首 (取项目数 (), t)
    相减 (t, 1).选中项目 (假)
    
.计次循环尾 ()


.子程序 _单选框6_被单击, 空白型, , 
.局部变量 t, 空白型, , , 

.计次循环首 (取项目数 (), t)
    相减 (t, 1).选中项目 ()
    
.计次循环尾 ()


.子程序 _单选框5_被单击, 空白型, , 
.局部变量 t, 空白型, , , 

.计次循环首 (取项目数 (), t)
    相减 (t, 1).选中项目 (假)
    
.计次循环尾 ()


.子程序 _员工权限_创建完毕, 空白型, , 
.局部变量 t, 空白型, , , 

赋值 (., 经顶边)
赋值 (., 经左边)
赋值 (., 假)

赋值 (.禁止, 真)
赋值 (.禁止, 真)
赋值 (.禁止, 真)
赋值 (.可视, 假)
赋值 (.禁止, 真)
赋值 (.禁止, 真)
赋值 (.禁止, 真)
赋值 (.禁止, 真)
赋值 (.禁止, 真)
赋值 (.禁止, 真)
赋值 (脚本, “select count(*) from 员工资料”)
输出调试文本 (脚本)
_启动窗口.关闭记录集 (., 记录集句柄一)
赋值 (记录集句柄一, _启动窗口.查询 (., 脚本))
赋值 (t, _启动窗口.读 (., 记录集句柄一, 1))
_启动窗口.关闭记录集 (., 记录集句柄一)
赋值 (脚本, “select * from 员工资料”)
输出调试文本 (脚本)
赋值 (记录集句柄一, _启动窗口.查询 (., 脚本))
_启动窗口.到首记录 (., 记录集句柄一)
.计次循环首 (t, )
    _启动窗口.读 (., 记录集句柄一, 2).加入项目 ()
    _启动窗口.到后一记录 (., 记录集句柄一)
.计次循环尾 ()


.子程序 _组合框1_列表项被选择, 空白型, , 
.局部变量 t, 空白型, , , 

赋值 (脚本, 相加 (“select * from 员工资料 where 姓名='”, .取项目文本 (.现行选中项), “'”))
输出调试文本 (脚本)
赋值 (记录集句柄一, _启动窗口.查询 (., 脚本))
赋值 (.禁止, 假)
赋值 (.禁止, 假)
赋值 (.禁止, 假)
.计次循环首 (取项目数 (), t)
    相减 (t, 1).选中项目 (假)
.计次循环尾 ()
赋值 (t, 0)
.计次循环首 (取项目数 (), t)
    相减 (t, 1).选中项目 (假)
.计次循环尾 ()
赋值 (t, 0)
.计次循环首 (取项目数 (), t)
    相减 (t, 1).选中项目 (假)
.计次循环尾 ()
_启动窗口.到首记录 (., 记录集句柄一)
.判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄一), 假))
    .如果真 (等于 (_启动窗口.读 (., 记录集句柄一, “商品销售”), “8*8”))
        0.选中项目 ()
    .如果真结束
    .如果真 (等于 (_启动窗口.读 (., 记录集句柄一, “销售退货”), “8*8”))
        1.选中项目 ()
    .如果真结束
    .如果真 (等于 (_启动窗口.读 (., 记录集句柄一, “商品入库”), “8*8”))
        2.选中项目 ()
    .如果真结束
    .如果真 (等于 (_启动窗口.读 (., 记录集句柄一, “售后登记”), “8*8”))
        3.选中项目 ()
    .如果真结束
    .如果真 (等于 (_启动窗口.读 (., 记录集句柄一, “售后管理”), “8*8”))
        4.选中项目 ()
    .如果真结束
    .如果真 (等于 (_启动窗口.读 (., 记录集句柄一, “缺货预定”), “8*8”))
        5.选中项目 ()
    .如果真结束
    .如果真 (等于 (_启动窗口.读 (., 记录集句柄一, “返货情况”), “8*8”))
        6.选中项目 ()
    .如果真结束
    .如果真 (等于 (_启动窗口.读 (., 记录集句柄一, “其他收入”), “8*8”))
        7.选中项目 ()
    .如果真结束
    .如果真 (等于 (_启动窗口.读 (., 记录集句柄一, “其他支出”), “8*8”))
        8.选中项目 ()
    .如果真结束
    .如果真 (等于 (_启动窗口.读 (., 记录集句柄一, “记帐查询”), “8*8”))
        9.选中项目 ()
    .如果真结束
    .如果真 (等于 (_启动窗口.读 (., 记录集句柄一, “供应商资料”), “8*8”))
        10.选中项目 ()
    .如果真结束
    .如果真 (等于 (_启动窗口.读 (., 记录集句柄一, “商品分类”), “8*8”))
        11.选中项目 ()
    .如果真结束
    .如果真 (等于 (_启动窗口.读 (., 记录集句柄一, “商品大典”), “8*8”))
        12.选中项目 ()
    .如果真结束
    .如果真 (等于 (_启动窗口.读 (., 记录集句柄一, “客户维护”), “8*8”))
        13.选中项目 ()
    .如果真结束
    
    
    .如果真 (等于 (_启动窗口.读 (., 记录集句柄一, “进货明细统计”), “8*8”))
        0.选中项目 ()
    .如果真结束
    .如果真 (等于 (_启动窗口.读 (., 记录集句柄一, “供货商供货统计”), “8*8”))
        1.选中项目 ()
    .如果真结束
    .如果真 (等于 (_启动窗口.读 (., 记录集句柄一, “进货退货记录”), “8*8”))
        2.选中项目 ()
    .如果真结束
    .如果真 (等于 (_启动窗口.读 (., 记录集句柄一, “商品销售统计”), “8*8”))
        3.选中项目 ()
    .如果真结束
    .如果真 (等于 (_启动窗口.读 (., 记录集句柄一, “销售明细统计”), “8*8”))
        4.选中项目 ()
    .如果真结束
    .如果真 (等于 (_启动窗口.读 (., 记录集句柄一, “销售退货记录”), “8*8”))
        5.选中项目 ()
    .如果真结束
    .如果真 (等于 (_启动窗口.读 (., 记录集句柄一, “库存综合查询”), “8*8”))
        6.选中项目 ()
    .如果真结束
    .如果真 (等于 (_启动窗口.读 (., 记录集句柄一, “库存告警查询”), “8*8”))
        7.选中项目 ()
    .如果真结束
    .如果真 (等于 (_启动窗口.读 (., 记录集句柄一, “库存调价记录”), “8*8”))
        8.选中项目 ()
    .如果真结束
    .如果真 (等于 (_启动窗口.读 (., 记录集句柄一, “库存盘点记录”), “8*8”))
        9.选中项目 ()
    .如果真结束
    .如果真 (等于 (_启动窗口.读 (., 记录集句柄一, “进销存总览”), “8*8”))
        10.选中项目 ()
    .如果真结束
    .如果真 (等于 (_启动窗口.读 (., 记录集句柄一, “收款员收款明细”), “8*8”))
        11.选中项目 ()
    .如果真结束
    .如果真 (等于 (_启动窗口.读 (., 记录集句柄一, “毛利统计”), “8*8”))
        12.选中项目 ()
    .如果真结束
    .如果真 (等于 (_启动窗口.读 (., 记录集句柄一, “财务状况”), “8*8”))
        13.选中项目 ()
    .如果真结束
    .如果真 (等于 (_启动窗口.读 (., 记录集句柄一, “往来帐目”), “8*8”))
        14.选中项目 ()
    .如果真结束
    
    
    
    .如果真 (等于 (_启动窗口.读 (., 记录集句柄一, “进货登记”), “8*8”))
        0.选中项目 ()
    .如果真结束
    .如果真 (等于 (_启动窗口.读 (., 记录集句柄一, “进货退货”), “8*8”))
        1.选中项目 ()
    .如果真结束
    .如果真 (等于 (_启动窗口.读 (., 记录集句柄一, “库存调价”), “8*8”))
        2.选中项目 ()
    .如果真结束
    .如果真 (等于 (_启动窗口.读 (., 记录集句柄一, “库存盘点”), “8*8”))
        3.选中项目 ()
    .如果真结束
    .如果真 (等于 (_启动窗口.读 (., 记录集句柄一, “员工管理”), “8*8”))
        4.选中项目 ()
    .如果真结束
    .如果真 (等于 (_启动窗口.读 (., 记录集句柄一, “员工权限”), “8*8”))
        5.选中项目 ()
    .如果真结束
    .如果真 (等于 (_启动窗口.读 (., 记录集句柄一, “打开数据”), “8*8”))
        6.选中项目 ()
    .如果真结束
    .如果真 (等于 (_启动窗口.读 (., 记录集句柄一, “备份数据”), “8*8”))
        7.选中项目 ()
    .如果真结束
    .如果真 (等于 (_启动窗口.读 (., 记录集句柄一, “还原数据”), “8*8”))
        8.选中项目 ()
    .如果真结束
    .如果真 (等于 (_启动窗口.读 (., 记录集句柄一, “数据初始”), “8*8”))
        9.选中项目 ()
    .如果真结束
    .如果真 (等于 (_启动窗口.读 (., 记录集句柄一, “清空数据”), “8*8”))
        10.选中项目 ()
    .如果真结束
    
    
    
    
    _启动窗口.到后一记录 (., 记录集句柄一)
.判断循环尾 ()
赋值 (.禁止, 真)
赋值 (.禁止, 真)
赋值 (.禁止, 真)


.子程序 _按钮1_被单击, 空白型, , 
.局部变量 d1, 空白型, , , 
.局部变量 d2, 空白型, , , 
.局部变量 d3, 空白型, , , 

.如果真 (或者 (等于 (.内容, “”), 等于 (.内容, “超级管理员”)))
    信息框 (“不能对超级管理员进行权限操作,如果想增加安全性,请修改超级管理员密码!”, 0, )
    返回 ()
.如果真结束
.如果 (等于 (.标题, “开始修改”))
    赋值 (.可视, 真)
    赋值 (.标题, “提交修改”)
    赋值 (.禁止, 真)
    赋值 (.禁止, 假)
    赋值 (.禁止, 假)
    赋值 (.禁止, 假)
    赋值 (.禁止, 假)
    赋值 (.禁止, 假)
    赋值 (.禁止, 假)
    赋值 (.禁止, 假)
    赋值 (.禁止, 假)
    赋值 (.禁止, 假)
    
.否则
    赋值 (.标题, “开始修改”)
    赋值 (.禁止, 假)
    赋值 (.禁止, 真)
    赋值 (.禁止, 真)
    赋值 (.禁止, 真)
    赋值 (.禁止, 真)
    赋值 (.禁止, 真)
    赋值 (.禁止, 真)
    赋值 (.禁止, 真)
    赋值 (.禁止, 真)
    赋值 (.禁止, 真)
    .计次循环首 (取项目数 (), d1)
        .如果 (等于 (相减 (d1, 1).是否被选中 (), 真))
            赋值 (脚本, 相加 (“update 员工资料 set ”, 相减 (d1, 1).取项目文本 (), “='8*8' where 姓名='”, .内容, “'”))
        .否则
            赋值 (脚本, 相加 (“update 员工资料 set ”, 相减 (d1, 1).取项目文本 (), “='*8*' where 姓名='”, .内容, “'”))
            
        .如果结束
        
        .如果 (等于 (_启动窗口.执行 (., 脚本, ), 真))
            
        .否则
            信息框 (“日常业务权限修改失败,请重试!”, 0, )
            返回 ()
        .如果结束
        
    .计次循环尾 ()
    .计次循环首 (取项目数 (), d2)
        .如果 (等于 (相减 (d2, 1).是否被选中 (), 真))
            赋值 (脚本, 相加 (“update 员工资料 set ”, 相减 (d2, 1).取项目文本 (), “='8*8' where 姓名='”, .内容, “'”))
        .否则
            赋值 (脚本, 相加 (“update 员工资料 set ”, 相减 (d2, 1).取项目文本 (), “='*8*' where 姓名='”, .内容, “'”))
            
        .如果结束
        
        .如果 (等于 (_启动窗口.执行 (., 脚本, ), 真))
            
        .否则
            信息框 (“管理查询权限修改失败,请重试!”, 0, )
            返回 ()
        .如果结束
        
    .计次循环尾 ()
    .计次循环首 (取项目数 (), d3)
        .如果 (等于 (相减 (d3, 1).是否被选中 (), 真))
            赋值 (脚本, 相加 (“update 员工资料 set ”, 相减 (d3, 1).取项目文本 (), “='8*8' where 姓名='”, .内容, “'”))
        .否则
            赋值 (脚本, 相加 (“update 员工资料 set ”, 相减 (d3, 1).取项目文本 (), “='*8*' where 姓名='”, .内容, “'”))
            
        .如果结束
        
        .如果 (等于 (_启动窗口.执行 (., 脚本, ), 真))
            
        .否则
            信息框 (“系统设置权限修改失败,请重试!”, 0, )
            返回 ()
        .如果结束
        
    .计次循环尾 ()
    
    
    
    信息框 (“修改成功!”, 0, )
    赋值 (.可视, 假)
.如果结束


.子程序 _按钮2_被单击, 空白型, , 
赋值 (.标题, “开始修改”)
赋值 (.禁止, 假)
赋值 (.禁止, 真)
赋值 (.禁止, 真)
赋值 (.禁止, 真)
赋值 (.禁止, 真)
赋值 (.禁止, 真)
赋值 (.禁止, 真)
赋值 (.禁止, 真)
赋值 (.禁止, 真)
赋值 (.禁止, 真)
赋值 (.可视, 假)
_组合框1_列表项被选择 ()


.窗口程序集 窗口程序集66, , , 

.子程序 _超级按钮2_被单击, 空白型, , 
连续赋值 (“”, .内容, .内容, .内容)


.子程序 _修改密码_创建完毕, 空白型, , 
.局部变量 t, 空白型, , , 

.如果 (不等于 (操作员, “超级管理员”))
    操作员.加入项目 ()
    赋值 (.现行选中项, 0)
    赋值 (.禁止, 真)
.否则
    赋值 (脚本, “select count(*) from 员工资料”)
    输出调试文本 (脚本)
    _启动窗口.关闭记录集 (., 记录集句柄一)
    赋值 (记录集句柄一, _启动窗口.查询 (., 脚本))
    赋值 (t, _启动窗口.读 (., 记录集句柄一, 1))
    _启动窗口.关闭记录集 (., 记录集句柄一)
    赋值 (脚本, “select * from 员工资料”)
    输出调试文本 (脚本)
    赋值 (记录集句柄一, _启动窗口.查询 (., 脚本))
    _启动窗口.到首记录 (., 记录集句柄一)
    .计次循环首 (t, )
        _启动窗口.读 (., 记录集句柄一, 2).加入项目 ()
        _启动窗口.到后一记录 (., 记录集句柄一)
    .计次循环尾 ()
    
.如果结束


.子程序 _超级按钮3_被单击, 空白型, , 
.如果 (或者 (不等于 (.内容, “”), 不等于 (.内容, “”), 不等于 (.内容, “”), 大于 (取文本长度 (.内容), 15)))
    赋值 (脚本, 相加 (“select * from 员工资料 where 姓名='”, .内容, “'”))
    _启动窗口.关闭记录集 (., 记录集句柄)
    赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
    _启动窗口.到首记录 (., 记录集句柄)
    .判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
        .如果 (不等于 (到文本 (_启动窗口.读 (., 记录集句柄, “登录密码”)), .内容))
            信息框 (“原始密码不正确,不能修改!”, 0, )
            返回 ()
        .否则
            
        .如果结束
        
        _启动窗口.到后一记录 (., 记录集句柄)
    .判断循环尾 ()
    
    .如果 (不等于 (.内容, .内容))
        信息框 (“新密码不一致,请重新输入!”, 0, )
        返回 ()
    .否则
        赋值 (脚本, 相加 (“update 员工资料 set 登录密码='”, .内容, “' where 姓名='”, .内容, “'”))
        
        .如果 (等于 (_启动窗口.执行 (., 脚本, ), 真))
            信息框 (“密码修改成功,请牢记你的新密码!”, 0, )
            赋值 (.内容, “”)
            赋值 (.内容, “”)
            赋值 (.内容, “”)
            _组合框1_列表项被选择 ()
            返回 ()
        .否则
            信息框 (“密码修改失败,请重试!”, 0, )
            返回 ()
        .如果结束
        
        
    .如果结束
    
.否则
    信息框 (“请添写全部信息!”, 0, )
    返回 ()
.如果结束


.子程序 _组合框1_列表项被选择, 空白型, , 
.如果 (等于 (操作员, “超级管理员”))
    赋值 (脚本, 相加 (“select * from 员工资料 where 姓名='”, .内容, “'”))
    _启动窗口.关闭记录集 (., 记录集句柄)
    赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
    _启动窗口.到首记录 (., 记录集句柄)
    .判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
        赋值 (.内容, 到文本 (_启动窗口.读 (., 记录集句柄, “登录密码”)))
        _启动窗口.到后一记录 (., 记录集句柄)
    .判断循环尾 ()
    
    
    
    
.否则
    
.如果结束


.窗口程序集 窗口程序集67, , , 

.程序集变量 程序集变量_字体名称, 文本型, , , 
.子程序 _粗体选择选择框_被单击, 空白型, , 


.子程序 _设置打印表头窗口_创建完毕, 空白型, , 

赋值 (.内容, 打印.未知支持库函数_10 (., 0, 0))
赋值 (.内容, 打印.未知支持库函数_15 (., 0, 0))
赋值 (.内容, 到文本 (打印.未知支持库函数_17 (., 0, 0)))

.子程序 _选择字体按钮_被单击, 空白型, , 
.判断开始 (等于 (打开 (), 真))
    赋值 (程序集变量_字体名称, .字体名称)
    赋值 (.内容, 程序集变量_字体名称)
.默认
    信息框 (“字体选择失败.”, #信息图标, “提示信息”)
    返回 ()
.判断结束


.子程序 _设置按钮_被单击, 空白型, , 
.局部变量 表头名称, 文本型, , , 
.局部变量 字体名称, 文本型, , , 
.局部变量 字体尺寸, 整数型, , , 
.局部变量 是否为粗体, 逻辑型, , , 
.局部变量 对齐方式, 整数型, , , 

.判断开始 (不等于 (.内容, “”))
    赋值 (表头名称, .内容)
.默认
    信息框 (“表头名不能为空.”, #信息图标, “提示信息”)
    返回 ()
.判断结束
赋值 (字体名称, 程序集变量_字体名称)
赋值 (字体尺寸, 到数值 (.内容))
.判断开始 (等于 (.选中, 真))
    赋值 (是否为粗体, 真)
.默认
    赋值 (是否为粗体, 假)
.判断结束
赋值 (对齐方式, 相加 (.现行选中项, 1))
.判断开始 (打印.未知支持库函数_46 (., 表头名称, 字体名称, 字体尺寸, 是否为粗体, 对齐方式))
     ' 打印.未知支持库函数_9 (., 0, 0, 1, 表头名称)
    打印.未知支持库函数_16 (., 0, 0, , , 字体名称)
    打印.未知支持库函数_18 (., 0, 0, , , 字体尺寸)
    .如果 (等于 (是否为粗体, 真))
        打印.未知支持库函数_20 (., 0, 0, , , 1)
    .否则
        打印.未知支持库函数_20 (., 0, 0, , , 0)
    .如果结束
    信息框 (“设置打印表头成功.”, #信息图标, “提示信息”)
    设置打印表头窗口.销毁 ()
.默认
    信息框 (“设置打印表头失败.”, #信息图标, “提示信息”)
.判断结束


.窗口程序集 窗口程序集68, , , 

.子程序 _清空数据库_创建完毕, 空白型, , 
赋值 (.内容, 相加 (“    本操作为高级权限操作，对数据进行清零性操作，如果已经开始营业或必须进行,请了解以下信息：”, #换行符, “    本操作将会清除进货数量、销售数量、债务、债权、返货记录、库存盘点记录、库存调价记录、其他收入支出记录、售后、退货记录、收款员收款明细等信息。”, #换行符, “    本操会保留商品大典信息、商品分类、客户资料、供货商资料、员工资料、店面信息几部分基础信息，如果想全部都删除，请进入相关菜单进行设置或选择菜单中的系统初始化！”))
相加 (#换行符, “    清空数据库通行码：13579”).加入文本 ()


.子程序 _超级按钮3_被单击, 空白型, , 
.局部变量 tt, 文本型, , , 

输入框 (“为确保数据安全，请输入清空数据库通行码！强烈建议先备份数据库再进行本操作！”, “清空数据库”, , tt, 2)
.如果 (等于 (tt, “13579”))
    赋值 (.内容, “”)
    赋值 (.文本颜色, #蓝色)
    置等待鼠标 ()
    赋值 (脚本, “delete * from 返货记录”)
    .如果 (等于 (_启动窗口.执行 (., 脚本, ), 真))
        相加 (“清空返货记录成功!”, #换行符).加入文本 ()
        赋值 (脚本, “delete * from 还供货商款记录”)
        .如果 (等于 (_启动窗口.执行 (., 脚本, ), 真))
            相加 (“清空返还供应商款项成功!”, #换行符).加入文本 ()
            赋值 (脚本, “delete * from 库存盘典记录”)
            .如果 (等于 (_启动窗口.执行 (., 脚本, ), 真))
                相加 (“清空库存盘点记录成功!”, #换行符).加入文本 ()
                赋值 (脚本, “delete * from 其他收入”)
                .如果 (等于 (_启动窗口.执行 (., 脚本, ), 真))
                    相加 (“清空其他收入记录成功!”, #换行符).加入文本 ()
                    赋值 (脚本, “delete * from 其他支出”)
                    .如果 (等于 (_启动窗口.执行 (., 脚本, ), 真))
                        相加 (“清空其他支出记录成功!”, #换行符).加入文本 ()
                        赋值 (脚本, “delete * from 商品调价记录”)
                        .如果 (等于 (_启动窗口.执行 (., 脚本, ), 真))
                            相加 (“清空商品调价记录成功!”, #换行符).加入文本 ()
                            赋值 (脚本, “delete * from 售后登记”)
                            .如果 (等于 (_启动窗口.执行 (., 脚本, ), 真))
                                相加 (“清空售后记录成功!”, #换行符).加入文本 ()
                                赋值 (脚本, “delete * from 退货记录”)
                                .如果 (等于 (_启动窗口.执行 (., 脚本, ), 真))
                                    相加 (“清空退货记录成功!”, #换行符).加入文本 ()
                                    赋值 (脚本, “delete * from 未付款”)
                                    .如果 (等于 (_启动窗口.执行 (., 脚本, ), 真))
                                        相加 (“清空进货未付款记录成功!”, #换行符).加入文本 ()
                                        赋值 (脚本, “delete * from 销售”)
                                        .如果 (等于 (_启动窗口.执行 (., 脚本, ), 真))
                                            相加 (“清空销售记录成功!”, #换行符).加入文本 ()
                                            赋值 (脚本, “delete * from 销售还款记录”)
                                            .如果 (等于 (_启动窗口.执行 (., 脚本, ), 真))
                                                相加 (“清空销售还款记录成功!”, #换行符).加入文本 ()
                                                赋值 (脚本, “delete * from 销售退货记录”)
                                                .如果 (等于 (_启动窗口.执行 (., 脚本, ), 真))
                                                    相加 (“清空销售退货记录成功!”, #换行符).加入文本 ()
                                                     ' 脚本 ＝ “delete * from 销售未付款”
                                                     ' 如果 (_启动窗口.外部数据库1.执行 (脚本, ) ＝ 真)
                                                     ' 编辑框1.加入文本 (“清空客户未付款记录成功!” ＋ #换行符)
                                                     ' 脚本 ＝ “delete * from 销售已付款”
                                                     ' 如果 (_启动窗口.外部数据库1.执行 (脚本, ) ＝ 真)
                                                     ' 编辑框1.加入文本 (“清空销售收款记录成功!” ＋ #换行符)
                                                    赋值 (脚本, “delete * from 已付款”)
                                                    .如果 (等于 (_启动窗口.执行 (., 脚本, ), 真))
                                                        相加 (“清空进货付款记录成功!”, #换行符).加入文本 ()
                                                        赋值 (脚本, “delete * from 预订登记”)
                                                        .如果 (等于 (_启动窗口.执行 (., 脚本, ), 真))
                                                            相加 (“清空预订登记记录成功!”, #换行符).加入文本 ()
                                                             ' 脚本 ＝ “update 总库 set 应付金额=0,零售价=0,进货价=0,批发价=0,数量=0,金额=0,已付金额=0,库存数量=0”
                                                            赋值 (脚本, “delete * from 总库”)
                                                            .如果 (等于 (_启动窗口.执行 (., 脚本, ), 真))
                                                                相加 (“库存清零操作成功!”, #换行符).加入文本 ()
                                                                赋值 (脚本, “delete * from 收款员收款明细”)
                                                                .如果 (等于 (_启动窗口.执行 (., 脚本, ), 真))
                                                                    相加 (“收款员收款明细清零操作成功!”, #换行符).加入文本 ()
                                                                    信息框 (“v数据库清空操作执行完毕！”, 0, )
                                                                    返回 ()
                                                                .否则
                                                                    
                                                                .如果结束
                                                                
                                                            .否则
                                                                
                                                                
                                                            .如果结束
                                                            
                                                            
                                                            
                                                            
                                                            
                                                            
                                                        .否则
                                                            
                                                        .如果结束
                                                        
                                                    .否则
                                                        
                                                    .如果结束
                                                    
                                                    
                                                    
                                                    
                                                    
                                                .否则
                                                    
                                                .如果结束
                                                
                                            .否则
                                                
                                            .如果结束
                                            
                                        .否则
                                            
                                        .如果结束
                                        
                                    .否则
                                        
                                    .如果结束
                                    
                                .否则
                                    
                                .如果结束
                                
                            .否则
                                
                            .如果结束
                            
                        .否则
                            
                        .如果结束
                        
                    .否则
                        
                    .如果结束
                    
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
        
        
        
    .否则
        
    .如果结束
    赋值 (.文本颜色, #红色)
    “发生意外,程序终止清空操作,请重试!”.加入文本 ()
    恢复鼠标 ()
     ' 信息框 (“ok”, 0, )
.否则
    信息框 (“通行码错误，不能进行清空数据库操作！”, 0, )
.如果结束


.子程序 _超级按钮2_被单击, 空白型, , 
销毁 ()


.窗口程序集 窗口程序集69, , , 

.子程序 _往来帐目_创建完毕, 空白型, , 
.局部变量 t, 空白型, , , 
.局部变量 t1, 空白型, , , 

赋值 (., 经顶边)
赋值 (., 经左边)
赋值 (., 假)


赋值 (., 70)
赋值 (., 0)
赋值 (., 0)
赋值 (., 1)
赋值 (., 20)
相减 (., 1).未知支持库函数_9 (0, 1, “商品编码”)
相减 (., 1).未知支持库函数_9 (1, 1, “商品名称”)
相减 (., 1).未知支持库函数_9 (2, 1, “入库日期”)
相减 (., 1).未知支持库函数_9 (3, 1, “拼音码”)
相减 (., 1).未知支持库函数_9 (4, 1, “规格”)
相减 (., 1).未知支持库函数_9 (5, 1, “进货数量”)
相减 (., 1).未知支持库函数_9 (6, 1, “库存数量”)
相减 (., 1).未知支持库函数_9 (7, 1, “进货价”)
相减 (., 1).未知支持库函数_9 (8, 1, “应付金额”)
相减 (., 1).未知支持库函数_9 (9, 1, “已付金额”)
相减 (., 1).未知支持库函数_9 (10, 1, “零售价”)
相减 (., 1).未知支持库函数_9 (11, 1, “批发价”)
相减 (., 1).未知支持库函数_9 (12, 1, “库存上限”)
相减 (., 1).未知支持库函数_9 (13, 1, “库存下限”)
相减 (., 1).未知支持库函数_9 (14, 1, “一级分类”)
相减 (., 1).未知支持库函数_9 (15, 1, “二级分类”)
相减 (., 1).未知支持库函数_9 (16, 1, “供货商”)
相减 (., 1).未知支持库函数_9 (17, 1, “备注”)
相减 (., 1).未知支持库函数_9 (18, 1, “产地”)
赋值 (., 1)
清空 ()
赋值 (客户还款操作, 假)
赋值 (供货商还款操作, 假)
赋值 (.可视, 假)
赋值 (.可视, 假)
赋值 (.可视, 假)
赋值 (.可视, 假)
赋值 (脚本, “select count(*) from 客户资料”)
_启动窗口.关闭记录集 (., 记录集句柄一)
赋值 (记录集句柄一, _启动窗口.查询 (., 脚本))
赋值 (t, _启动窗口.读 (., 记录集句柄一, 1))
_启动窗口.关闭记录集 (., 记录集句柄一)
赋值 (脚本, “select * from 客户资料”)
赋值 (记录集句柄一, _启动窗口.查询 (., 脚本))
_启动窗口.到首记录 (., 记录集句柄一)
“全部客户”.加入项目 ()
“全部客户”.加入项目 ()

.计次循环首 (t, )
    .如果 (不等于 (_启动窗口.读 (., 记录集句柄一, 2), “无记名客户”))
        _启动窗口.读 (., 记录集句柄一, 2).加入项目 ()
        _启动窗口.读 (., 记录集句柄一, 2).加入项目 ()
        
    .否则
        
    .如果结束
    
    _启动窗口.到后一记录 (., 记录集句柄一)
.计次循环尾 ()
赋值 (.内容, “请选择客户名称”)
清空 ()
赋值 (脚本, “select count(*) from 供应商资料”)
_启动窗口.关闭记录集 (., 记录集句柄一)
赋值 (记录集句柄一, _启动窗口.查询 (., 脚本))
赋值 (t1, _启动窗口.读 (., 记录集句柄一, 1))
_启动窗口.关闭记录集 (., 记录集句柄一)
赋值 (脚本, “select * from 供应商资料”)
赋值 (记录集句柄一, _启动窗口.查询 (., 脚本))
_启动窗口.到首记录 (., 记录集句柄一)
“全部供货商”.加入项目 ()
.计次循环首 (t1, )
    _启动窗口.读 (., 记录集句柄一, 2).加入项目 ()
    _启动窗口.读 (., 记录集句柄一, 2).加入项目 ()
    _启动窗口.到后一记录 (., 记录集句柄一)
.计次循环尾 ()
供应表头 ()


.子程序 供应表头, 空白型, , 
赋值 (., 1)
赋值 (., 70)
赋值 (., 0)
赋值 (., 0)
赋值 (., 5)
相减 (., 1).未知支持库函数_9 (0, 1, “入库单号”)
相减 (., 1).未知支持库函数_9 (1, 1, “供货商”)
相减 (., 1).未知支持库函数_9 (2, 1, “未付款额”)
相减 (., 1).未知支持库函数_9 (3, 1, “库存id”)
相减 (., 1).未知支持库函数_9 (4, 1, “商品编码”)
赋值 (., 1)

.子程序 客户表头, 空白型, , 
赋值 (., 1)
赋值 (., 1)
赋值 (., 70)
赋值 (., 0)
赋值 (., 0)
赋值 (., 9)
相减 (., 1).未知支持库函数_9 (0, 1, “销售日期”)
相减 (., 1).未知支持库函数_9 (1, 1, “商品名称”)
相减 (., 1).未知支持库函数_9 (2, 1, “商品编码”)
相减 (., 1).未知支持库函数_9 (3, 1, “销售数量”)
相减 (., 1).未知支持库函数_9 (4, 1, “零售价”)
相减 (., 1).未知支持库函数_9 (5, 1, “未付金额”)
相减 (., 1).未知支持库函数_9 (6, 1, “销售单号”)
相减 (., 1).未知支持库函数_9 (7, 1, “销售id”)
相减 (., 1).未知支持库函数_9 (8, 1, “操作员”)
赋值 (., 1)

.子程序 _选择夹1_被单击, 空白型, , 
.如果 (等于 (.现行子夹, 2))
    赋值 (., 1)
    赋值 (., 1)
    赋值 (., 70)
    赋值 (., 0)
    赋值 (., 0)
    赋值 (., 6)
    相减 (., 1).未知支持库函数_9 (0, 1, “客户名称”)
    相减 (., 1).未知支持库函数_9 (1, 1, “还款金额”)
    相减 (., 1).未知支持库函数_9 (2, 1, “还款日期”)
    相减 (., 1).未知支持库函数_9 (3, 1, “销售id”)
    相减 (., 1).未知支持库函数_9 (4, 1, “销售单号”)
    相减 (., 1).未知支持库函数_9 (5, 1, “操作员”)
    赋值 (., 1)
.否则
    
.如果结束













.子程序 _组合框1_列表项被选择, 空白型, , 
赋值 (., 1)
赋值 (., 60)
赋值 (., 0)
赋值 (., 0)
赋值 (., 10)
相减 (., 1).未知支持库函数_9 (0, 1, “客户名称”)
1.未知支持库函数_32 (150)
相减 (., 1).未知支持库函数_9 (1, 1, “商品名称”)
相减 (., 1).未知支持库函数_9 (2, 1, “商品编码”)
相减 (., 1).未知支持库函数_9 (3, 1, “销售数量”)
0.未知支持库函数_25 (4, 相减 (., 1), 5, 3)
相减 (., 1).未知支持库函数_9 (4, 1, “零售价”)
相减 (., 1).未知支持库函数_9 (5, 1, “未付金额”)
6.未知支持库函数_32 (100)
相减 (., 1).未知支持库函数_9 (6, 1, “销售单号”)
相减 (., 1).未知支持库函数_9 (7, 1, “销售id”)
相减 (., 1).未知支持库函数_9 (8, 1, “操作员”)
9.未知支持库函数_32 (100)
相减 (., 1).未知支持库函数_9 (9, 1, “销售日期”)
赋值 (., 1)


.如果 (等于 (.内容, “全部客户”))
    赋值 (脚本, “select * from 销售 where 实付金额 <0”)
    _启动窗口.关闭记录集 (., )
    赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
    _启动窗口.到首记录 (., 记录集句柄)
    .判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
        置等待鼠标 ()
        .未知支持库函数_38 ()
        相减 (., 1).未知支持库函数_9 (0, 1, _启动窗口.读 (., 记录集句柄, “购买客户”))
        相减 (., 1).未知支持库函数_9 (1, 1, _启动窗口.读 (., 记录集句柄, “商品名称”))
        相减 (., 1).未知支持库函数_9 (2, 1, _启动窗口.读 (., 记录集句柄, “商品编码”))
        相减 (., 1).未知支持库函数_9 (3, 1, _启动窗口.读 (., 记录集句柄, “销售数量”))
        相减 (., 1).未知支持库函数_9 (4, 1, _启动窗口.读 (., 记录集句柄, “零售价”))
        相减 (., 1).未知支持库函数_9 (5, 1, _启动窗口.读 (., 记录集句柄, “实付金额”))
        相减 (., 1).未知支持库函数_9 (6, 1, _启动窗口.读 (., 记录集句柄, “单据号”))
        相减 (., 1).未知支持库函数_9 (7, 1, _启动窗口.读 (., 记录集句柄, “销售id”))
        相减 (., 1).未知支持库函数_9 (8, 1, _启动窗口.读 (., 记录集句柄, “操作员”))
        相减 (., 1).未知支持库函数_9 (9, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “销售日期”)))
        
        _启动窗口.到后一记录 (., 记录集句柄)
    .判断循环尾 ()
    返回 ()
.否则
    
    
.如果结束
赋值 (脚本, 相加 (“select * from 销售 where 购买客户='”, .内容, “' and 实付金额<0”))
_启动窗口.关闭记录集 (., )
赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
_启动窗口.到首记录 (., 记录集句柄)
添客户 ()


.子程序 添客户, 空白型, , 
.局部变量 合计k, 空白型, , , 

 ' 赋值 (., 1)
赋值 (合计k, 0)
.判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
    置等待鼠标 ()
    .未知支持库函数_38 ()
    相减 (., 1).未知支持库函数_9 (0, 1, _启动窗口.读 (., 记录集句柄, “购买客户”))
    相减 (., 1).未知支持库函数_9 (1, 1, _启动窗口.读 (., 记录集句柄, “商品名称”))
    相减 (., 1).未知支持库函数_9 (2, 1, _启动窗口.读 (., 记录集句柄, “商品编码”))
    相减 (., 1).未知支持库函数_9 (3, 1, _启动窗口.读 (., 记录集句柄, “销售数量”))
    相减 (., 1).未知支持库函数_9 (4, 1, _启动窗口.读 (., 记录集句柄, “零售价”))
    相减 (., 1).未知支持库函数_9 (5, 1, _启动窗口.读 (., 记录集句柄, “实付金额”))
    赋值 (合计k, 相加 (合计k, 到数值 (_启动窗口.读 (., 记录集句柄, “实付金额”))))
    相减 (., 1).未知支持库函数_9 (6, 1, _启动窗口.读 (., 记录集句柄, “单据号”))
    相减 (., 1).未知支持库函数_9 (7, 1, _启动窗口.读 (., 记录集句柄, “销售id”))
    相减 (., 1).未知支持库函数_9 (8, 1, _启动窗口.读 (., 记录集句柄, “操作员”))
    相减 (., 1).未知支持库函数_9 (9, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “销售日期”)))
    
    _启动窗口.到后一记录 (., 记录集句柄)
.判断循环尾 ()
.未知支持库函数_38 ()
相减 (., 1).未知支持库函数_9 (4, 1, “合计:”)
相减 (., 1).未知支持库函数_9 (5, 1, 到文本 (合计k))


 ' 信息框 (到文本 (表格1.行数 － 1), 0, )

.子程序 _组合框2_列表项被选择, 空白型, , 
赋值 (脚本, 相加 (“select * from 未付款 where 供应商='”, .内容, “'”))
_启动窗口.关闭记录集 (., )
赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
_启动窗口.到首记录 (., 记录集句柄)
加供应 ()

.子程序 加供应, 空白型, , 
.局部变量 合计g, 空白型, , , 

赋值 (., 1)
赋值 (合计g, 0)
.判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
    置等待鼠标 ()
     ' 处理事件 ()
    
    .未知支持库函数_38 ()
    相减 (., 1).未知支持库函数_9 (0, 1, _启动窗口.读 (., 记录集句柄, “入库单号”))
    相减 (., 1).未知支持库函数_9 (1, 1, _启动窗口.读 (., 记录集句柄, “供应商”))
    相减 (., 1).未知支持库函数_9 (2, 1, _启动窗口.读 (., 记录集句柄, “欠款额”))
    赋值 (合计g, 相加 (合计g, 到数值 (_启动窗口.读 (., 记录集句柄, “欠款额”))))
    相减 (., 1).未知支持库函数_9 (3, 1, _启动窗口.读 (., 记录集句柄, “库存id”))
    相减 (., 1).未知支持库函数_9 (4, 1, _启动窗口.读 (., 记录集句柄, “商品编码”))
    
    _启动窗口.到后一记录 (., 记录集句柄)
.判断循环尾 ()
.未知支持库函数_38 ()
相减 (., 1).未知支持库函数_9 (1, 1, “合计:”)
相减 (., 1).未知支持库函数_9 (2, 1, 到文本 (合计g))


.子程序 _表格1_光标位置改变, 空白型, , 


.子程序 _表格1_被双击, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 t1, 空白型, , , 

.如果 (等于 (未知支持库函数_3 (), -1))
    返回 ()
.否则
    .如果真 (等于 (.内容, “”))
        信息框 (“请选择客户名！”, 0, )
        返回 ()
    .如果真结束
    
    
    .如果 (等于 (未知支持库函数_3 ().未知支持库函数_10 (4), “合计:”))
        .如果真 (等于 (到数值 (未知支持库函数_3 ().未知支持库函数_10 (5)), 0))
            返回 ()
        .如果真结束
        
        
        .如果 (等于 (信息框 (“您确定要进行该客户欠帐全部还款操作吗?点'是'全部还款,点'否'取消本次操作。”, 4, ), 5))
            .计次循环首 (相减 (., 1), t1)
                t1.未知支持库函数_9 (5, 1, 子文本替换 (t1.未知支持库函数_10 (5), “-”, “”, , , 真))
            .计次循环尾 ()
            赋值 (.可视, 真)
            赋值 (.可视, 真)
            返回 ()
            
        .否则
            信息框 (“no ”, 0, )
        .如果结束
        
    .否则
        载入 (记帐还款1, , 真)
    .如果结束
    
.如果结束




.子程序 _按钮2_被单击, 空白型, , 
赋值 (.可视, 假)
赋值 (.可视, 假)
赋值 (客户还款操作, 假)
_组合框1_列表项被选择 ()

.子程序 _选择夹1_子夹被改变, 空白型, , 
.如果 (等于 (客户还款操作, 真))
    信息框 (“本单中有客户还款操作未提交！请提交或取消提交！”, 0, )
    赋值 (.现行子夹, 0)
.否则
    
.如果结束

.如果 (等于 (供货商还款操作, 真))
    信息框 (“本单中有供货商未付款付款操作未提交！请提交或取消提交！”, 0, )
    赋值 (.现行子夹, 1)
.否则
    
.如果结束


.子程序 _记帐查询_可否被关闭, 逻辑型, , 
.如果 (等于 (客户还款操作, 真))
    信息框 (“客户还款操作未提交！请提交或取消提交再关闭本窗口！”, 0, )
    赋值 (.现行子夹, 0)
    返回 (假)
    
.否则
    
.如果结束
.如果真 (等于 (供货商还款操作, 真))
    信息框 (“还进货款操作未提交！请提交或取消提交再关闭本窗口！”, 0, )
    赋值 (.现行子夹, 1)
    返回 (假)
.如果真结束


.子程序 _按钮1_被单击, 空白型, , 
.局部变量 销售id, 文本型, , , 
.局部变量 还款额, 文本型, , , 
.局部变量 匿名局部变量_7525, 空白型, , , 
.局部变量 t1, 空白型, , , 

.计次循环首 (相减 (., 1), t1)
    赋值 (还款额, t1.未知支持库函数_10 (5))
    .如果 (并且 (大于 (到数值 (还款额), 0), 不等于 (t1.未知支持库函数_10 (4), “合计:”)))
        赋值 (销售id, t1.未知支持库函数_10 (7))
        赋值 (脚本, 相加 (“update 销售 set 实付金额=”, 还款额, “ where 销售id=”, 销售id))
        .如果 (等于 (_启动窗口.执行 (., 脚本, ), 假))
            信息框 (“执行修改操作失败!”, 0, )
            返回 ()
        .否则
            赋值 (脚本, 相加 (“insert into 销售还款记录(还款日期,还款金额,销售id,操作员,客户姓名,销售单号)  values ('”, 未知支持库函数_12 (取现行时间 (), “%y-%m-%d”), “',”, 还款额, “,'”, 销售id, “','”, 操作员, “','”, t1.未知支持库函数_10 (0), “','”, t1.未知支持库函数_10 (6), “')”))
            .如果 (等于 (_启动窗口.执行 (., 脚本, ), 假))
                信息框 (“执行记录操作失败!”, 0, )
                返回 ()
            .否则
                赋值 (脚本, 相加 (“insert into 收款员收款明细(收入日期,金额,收入原因,操作员,备注)  values ('”, 未知支持库函数_12 (取现行时间 (), “%y-%m-%d”), “',”, 还款额, “,'”, t1.未知支持库函数_10 (0), “还款','”, 操作员, “','”, t1.未知支持库函数_10 (6), “')”))
                .如果 (等于 (_启动窗口.执行 (., 脚本, ), 假))
                    信息框 (“执行记录操作失败!”, 0, )
                    返回 ()
                .否则
                    
                .如果结束
                
            .如果结束
            
        .如果结束
        
    .否则
        
    .如果结束
    
    
.计次循环尾 ()
_组合框1_列表项被选择 ()
信息框 (“执行成功!”, 0, )
赋值 (客户还款操作, 假)
赋值 (.可视, 假)
赋值 (.可视, 假)


.子程序 _按钮3_被单击, 空白型, , 
赋值 (表格文件名, 相加 (取运行目录 (), “\wgid\客户财务往来”))
.如果 (等于 (表格文件名.未知支持库函数_55 (), 真))
    置文件属性 (表格文件名, 1)
    赋值 (表头标题, “客户财务往来”)
    载入 (打印, , 真)
.否则
    信息框 (“打印格式文件出错，操作失败！”, 相加 (0, #错误图标), )
.如果结束



.子程序 _表格2_光标位置改变, 空白型, , 
.如果真 (等于 (未知支持库函数_3 (), -1))
    返回 ()
.如果真结束



赋值 (脚本, 相加 (“select * from 总库 where 单据号='”, 未知支持库函数_3 ().未知支持库函数_10 (0), “'”))
_启动窗口.关闭记录集 (., )
赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
_启动窗口.到首记录 (., 记录集句柄)
赋值 (., 1)
.判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
    置等待鼠标 ()
     ' 处理事件 ()
    .未知支持库函数_38 () ' <!!!>
    相减 (., 1).未知支持库函数_9 (0, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “商品编码”))) ' 编码
    相减 (., 1).未知支持库函数_9 (1, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “商品名称”))) ' 名称
    相减 (., 1).未知支持库函数_9 (2, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “入库日期”))) ' 入库日期
    相减 (., 1).未知支持库函数_9 (3, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “拼音码”))) ' 拼音码
    相减 (., 1).未知支持库函数_9 (4, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “规格”))) ' 规格]
    相减 (., 1).未知支持库函数_9 (5, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “数量”))) ' 数量
    相减 (., 1).未知支持库函数_9 (6, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “库存数量”)))
    相减 (., 1).未知支持库函数_9 (7, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “进货价”))) ' 进货价
    相减 (., 1).未知支持库函数_9 (8, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “应付金额”))) ' 应付
    相减 (., 1).未知支持库函数_9 (9, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “已付金额”))) ' 已付
    相减 (., 1).未知支持库函数_9 (10, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “零售价”))) ' 零售
    相减 (., 1).未知支持库函数_9 (11, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “批发价”))) ' 批发
    相减 (., 1).未知支持库函数_9 (12, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “库存上限”))) ' 上限
    相减 (., 1).未知支持库函数_9 (13, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “库存下限”))) ' 下限
    相减 (., 1).未知支持库函数_9 (14, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “一级分类”))) ' 一级
    相减 (., 1).未知支持库函数_9 (15, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “二级分类”))) ' 二级
    相减 (., 1).未知支持库函数_9 (16, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “供货商”))) ' 供货商
    相减 (., 1).未知支持库函数_9 (17, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “备注”))) ' 备注
    相减 (., 1).未知支持库函数_9 (18, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “产地”))) ' 备注
    
    _启动窗口.到后一记录 (., 记录集句柄)
.判断循环尾 ()
_启动窗口.关闭记录集 (., 记录集句柄)


.子程序 _表格2_被双击, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 t1, 空白型, , , 

.如果 (等于 (未知支持库函数_3 (), -1))
    返回 ()
.否则
    .如果真 (等于 (.内容, “”))
        信息框 (“请选择供货商！”, 0, )
        返回 ()
    .如果真结束
    
    
    
    .如果 (等于 (未知支持库函数_3 ().未知支持库函数_10 (1), “合计:”))
        .如果真 (等于 (到数值 (未知支持库函数_3 ().未知支持库函数_10 (2)), 0))
            返回 ()
        .如果真结束
        
        .如果 (等于 (信息框 (“您确定要进行该供应商全部未付款还款操作吗?点'是'全部还款,点'否'取消本次操作。”, 4, ), 5))
            .计次循环首 (相减 (., 1), t1)
                t1.未知支持库函数_9 (2, 1, 子文本替换 (t1.未知支持库函数_10 (2), “-”, “”, , , 真))
            .计次循环尾 ()
            赋值 (.可视, 真)
            赋值 (.可视, 真)
        .否则
             ' 信息框 (“no ”, 0, )
        .如果结束
        
    .否则
        载入 (记帐还供应商款, , 真)
    .如果结束
    
.如果结束


.子程序 _按钮4_被单击, 空白型, , 
.局部变量 库存id, 文本型, , , 
.局部变量 还款额, 文本型, , , 
.局部变量 入库单号, 文本型, , , 
.局部变量 供应, 文本型, , , 
.局部变量 t1, 空白型, , , 

.计次循环首 (相减 (., 1), t1)
    赋值 (还款额, t1.未知支持库函数_10 (2))
    .如果 (并且 (大于 (到数值 (还款额), 0), 不等于 (t1.未知支持库函数_10 (1), “合计:”)))
        
        赋值 (库存id, t1.未知支持库函数_10 (3))
        赋值 (脚本, 相加 (“update 总库 set 已付金额=”, 还款额, “ where 库存id=”, 库存id))
        赋值 (入库单号, t1.未知支持库函数_10 (0))
        赋值 (供应, t1.未知支持库函数_10 (1))
        .如果 (等于 (_启动窗口.执行 (., 脚本, ), 假))
            信息框 (“执行修改操作失败!”, 0, )
            返回 ()
        .否则
            赋值 (脚本, 相加 (“insert into 还供货商款记录(还款日期,还款额,库存id,操作员,入库单号,供应商)  values ('”, 未知支持库函数_12 (取现行时间 (), “%y-%m-%d”), “',”, 还款额, “,'”, 库存id, “','”, 操作员, “','”, 入库单号, “','”, 供应, “')”))
            输出调试文本 (脚本)
            .如果 (等于 (_启动窗口.执行 (., 脚本, ), 假))
                信息框 (“执行记录操作失败!”, 0, )
                返回 ()
            .否则
                赋值 (脚本, 相加 (“delete from 未付款 where 库存id =”, “'”, 库存id, “'”))
                .如果 (等于 (_启动窗口.执行 (., 脚本, ), 假))
                    信息框 (“执行删除操作失败!”, 0, )
                    返回 ()
                .否则
                    赋值 (脚本, 相加 (“insert into 收款员收款明细(收入日期,金额,收入原因,操作员,备注)  values ('”, 未知支持库函数_12 (取现行时间 (), “%y-%m-%d”), “',-”, 还款额, “,'还”, 供应, “款','”, 操作员, “','”, 入库单号, “')”))
                    .如果 (等于 (_启动窗口.执行 (., 脚本, ), 假))
                        信息框 (“执行记录操作失败!”, 0, )
                        返回 ()
                    .否则
                        赋值 (脚本, 相加 (“insert into 已付款(付款日期,已付额,库存id,操作员,入库单号,供应商)  values ('”, 未知支持库函数_12 (取现行时间 (), “%y-%m-%d”), “',”, 还款额, “,'”, 库存id, “','”, 操作员, “','”, 入库单号, “','”, 供应, “')”))
                        输出调试文本 (脚本)
                        .如果 (等于 (_启动窗口.执行 (., 脚本, ), 假))
                            信息框 (“执行记录操作失败!”, 0, )
                            返回 ()
                        .否则
                            
                        .如果结束
                        
                    .如果结束
                    
                .如果结束
                
            .如果结束
            
        .如果结束
        
    .否则
        
    .如果结束
    
    
.计次循环尾 ()
_组合框2_列表项被选择 ()
信息框 (“执行成功!”, 0, )
赋值 (供货商还款操作, 假)
赋值 (.可视, 假)
赋值 (.可视, 假)


.子程序 _按钮5_被单击, 空白型, , 
赋值 (.可视, 假)
赋值 (.可视, 假)
赋值 (供货商还款操作, 假)
_组合框2_列表项被选择 ()


.子程序 _按钮7_被单击, 空白型, , 
赋值 (脚本, “select * from 未付款”)
_启动窗口.关闭记录集 (., )
赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
_启动窗口.到首记录 (., 记录集句柄)
加供应 ()


.子程序 _按钮8_被单击, 空白型, , 
赋值 (表格文件名, 相加 (取运行目录 (), “\wgid\供货商财务往来”))
.如果 (等于 (表格文件名.未知支持库函数_55 (), 真))
    置文件属性 (表格文件名, 1)
    赋值 (表头标题, “供货商财务往来”)
    载入 (打印, , 真)
.否则
    信息框 (“打印格式文件出错，操作失败！”, 相加 (0, #错误图标), )
.如果结束


.子程序 _组合框3_列表项被选择, 空白型, , 
赋值 (., 1)
.如果 (等于 (.内容, “全部客户”))
    赋值 (脚本, “select * from 销售还款记录”)
    _启动窗口.关闭记录集 (., 记录集句柄)
    赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
    _启动窗口.到首记录 (., 记录集句柄)
    .判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
        .未知支持库函数_38 ()
        相减 (., 1).未知支持库函数_9 (0, 1, _启动窗口.读 (., 记录集句柄, “客户姓名”))
        相减 (., 1).未知支持库函数_9 (1, 1, _启动窗口.读 (., 记录集句柄, “还款金额”))
        相减 (., 1).未知支持库函数_9 (2, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “还款日期”)))
        相减 (., 1).未知支持库函数_9 (3, 1, _启动窗口.读 (., 记录集句柄, “销售id”))
        相减 (., 1).未知支持库函数_9 (4, 1, _启动窗口.读 (., 记录集句柄, “销售单号”))
        相减 (., 1).未知支持库函数_9 (5, 1, _启动窗口.读 (., 记录集句柄, “操作员”))
        _启动窗口.到后一记录 (., 记录集句柄)
    .判断循环尾 ()
.否则
    赋值 (., 1)
    赋值 (脚本, 相加 (“select * from 销售还款记录 where 客户姓名='”, .内容, “'”))
    _启动窗口.关闭记录集 (., 记录集句柄)
    赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
    _启动窗口.到首记录 (., 记录集句柄)
    .判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
        .未知支持库函数_38 ()
        相减 (., 1).未知支持库函数_9 (0, 1, _启动窗口.读 (., 记录集句柄, “客户姓名”))
        相减 (., 1).未知支持库函数_9 (1, 1, _启动窗口.读 (., 记录集句柄, “还款金额”))
        相减 (., 1).未知支持库函数_9 (2, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “还款日期”)))
        相减 (., 1).未知支持库函数_9 (3, 1, _启动窗口.读 (., 记录集句柄, “销售id”))
        相减 (., 1).未知支持库函数_9 (4, 1, _启动窗口.读 (., 记录集句柄, “销售单号”))
        相减 (., 1).未知支持库函数_9 (5, 1, _启动窗口.读 (., 记录集句柄, “操作员”))
        _启动窗口.到后一记录 (., 记录集句柄)
    .判断循环尾 ()
.如果结束



.子程序 _按钮6_被单击, 空白型, , 
赋值 (表格文件名, 相加 (取运行目录 (), “\wgid\客户还款记录”))
.如果 (等于 (表格文件名.未知支持库函数_55 (), 真))
    置文件属性 (表格文件名, 1)
    赋值 (表头标题, “客户还款记录”)
    载入 (打印, , 真)
.否则
    信息框 (“打印格式文件出错，操作失败！”, 相加 (0, #错误图标), )
.如果结束


.子程序 _组合框4_列表项被选择, 空白型, , 

赋值 (., 1)
赋值 (., 1)
赋值 (., 70)
赋值 (., 0)
赋值 (., 0)
赋值 (., 6)
相减 (., 1).未知支持库函数_9 (0, 1, “供    货    商”)
相减 (., 1).未知支持库函数_9 (1, 1, “还款金额”)
相减 (., 1).未知支持库函数_9 (2, 1, “还款日期”)
相减 (., 1).未知支持库函数_9 (3, 1, “库存id”)
相减 (., 1).未知支持库函数_9 (4, 1, “入库单号”)
相减 (., 1).未知支持库函数_9 (5, 1, “操作员”)
赋值 (., 1)

.如果 (等于 (.内容, “全部供货商”))
    赋值 (脚本, “select * from 还供货商款记录”)
    
.否则
    赋值 (脚本, 相加 (“select * from 还供货商款记录 where 供应商='”, .内容, “'”))
    
.如果结束
_启动窗口.关闭记录集 (., 记录集句柄)
赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
_启动窗口.到首记录 (., 记录集句柄)
.判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
    .未知支持库函数_38 ()
    相减 (., 1).未知支持库函数_9 (0, 1, _启动窗口.读 (., 记录集句柄, “供应商”))
    相减 (., 1).未知支持库函数_9 (1, 1, _启动窗口.读 (., 记录集句柄, “还款额”))
    相减 (., 1).未知支持库函数_9 (2, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “还款日期”)))
    相减 (., 1).未知支持库函数_9 (3, 1, _启动窗口.读 (., 记录集句柄, “库存id”))
    相减 (., 1).未知支持库函数_9 (4, 1, _启动窗口.读 (., 记录集句柄, “入库单号”))
    相减 (., 1).未知支持库函数_9 (5, 1, _启动窗口.读 (., 记录集句柄, “操作员”))
    
    _启动窗口.到后一记录 (., 记录集句柄)
    
.判断循环尾 ()



.子程序 _按钮9_被单击, 空白型, , 
赋值 (表格文件名, 相加 (取运行目录 (), “\wgid\还供应商款记录”))
.如果 (等于 (表格文件名.未知支持库函数_55 (), 真))
    置文件属性 (表格文件名, 1)
    赋值 (表头标题, “还供货商款记录”)
    载入 (打印, , 真)
.否则
    信息框 (“打印格式文件出错，操作失败！”, 相加 (0, #错误图标), )
.如果结束


.窗口程序集 窗口程序集70, , , 

.子程序 _记帐还款1_创建完毕, 空白型, , 
赋值 (.内容, 子文本替换 (往来帐目.未知支持库函数_10 (., 往来帐目.未知支持库函数_3 (.), 5), “-”, “”, , , 真))
赋值 (.内容, .内容)


.子程序 _按钮1_被单击, 空白型, , 
赋值 (客户还款操作, 真)
往来帐目.未知支持库函数_9 (., 往来帐目.未知支持库函数_3 (.), 5, 1, .内容)
赋值 (往来帐目..可视, 真)
赋值 (往来帐目..可视, 真)
销毁 ()

.子程序 _按钮2_被单击, 空白型, , 
销毁 ()


.窗口程序集 窗口程序集71, , , 

.子程序 _注册未成功_创建完毕, 空白型, , 
赋值 (., 经顶边)
赋值 (., 经左边)
赋值 (., 假)


赋值 (.禁止, 真)
赋值 (脚本, “select * from 信息”)
赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
_启动窗口.到首记录 (., 记录集句柄)
赋值 (.内容, _启动窗口.读 (., 记录集句柄, “店面”))

本机硬盘特征字 ()
赋值 (.内容, 到文本 (新特征代码))

相加 (#换行符, “    您可通过以下联系方式给我们汇款，并且在汇款后第一时间通过各种方式通知我们，并将软件的序列号”, 到文本 (新特征代码), “告诉我们，我们收到款后，马上向您发放注册码，升级您为注册用户，取消试用版本的一切功能限制，并提供免费的技术咨询服务。其它相关事宜可进一步去我们咨询或联系！”, #换行符, #换行符, “    内蒙古呼伦贝尔市阿荣旗京联电脑公司”, #换行符, “    贝尔软件实业开发工作室”, #换行符, “    email: arqwlf@126.com”, #换行符, “    网站:  http://www.arzx.com”, #换行符, “    电话:  04704210863 04704290518 04704281500”, #换行符, “    联系人：万里丰 马丹”).加入文本 ()
打开 (相加 (取运行目录 (), “\system\”, “yfyzc.edb”), , , , , , )
到首记录 ()
.如果 (大于 (取记录数 (), 1))
    跳到 (2)
    赋值 (.内容, 到文本 (读 (“aa”)))
    赋值 (.内容, 到文本 (读 (“bb”)))
    赋值 (.内容, 到文本 (读 (“cc”)))
    赋值 (.内容, 到文本 (读 (“dd”)))
    注册码生成 ()
    .如果 (并且 (等于 (读 (“aa”), 对比1), 等于 (读 (“bb”), 对比2), 等于 (读 (“cc”), 对比3), 等于 (读 (“dd”), 对比4)))
        赋值 (.内容, “已注册！”)
        赋值 (.禁止, 假)
        赋值 (.禁止, 真)
    .否则
        赋值 (.内容, “未注册！”)
        赋值 (.禁止, 真)
    .如果结束
    关闭 (相加 (取运行目录 (), “\system\”, “yfyzc.edb”))
    
.否则
    关闭 (相加 (取运行目录 (), “\system\”, “yfyzc.edb”))
    
.如果结束



.子程序 本机硬盘特征字, 整数型, , 
赋值 (原始硬盘特征代码, 取十六进制文本 (取硬盘特征字 ()))
.如果 (不等于 (原始硬盘特征代码, “0”))
    赋值 (新特征代码, 位异或 (到数值 (原始硬盘特征代码), 8815000518))
     ' 返回 (新特征代码)
 ' .否则
    赋值 (新特征代码, 位异或 (19780228, 8815000518))
    返回 (新特征代码)
.如果结束


.子程序 _注册按钮_被单击, 空白型, , 
.如果真 (等于 (.内容, “”))
    信息框 (“请输入店面信息!”, 0, )
    返回 ()
.如果真结束
打开 (相加 (取运行目录 (), “\system\”, “yfyzc.edb”), , , , , , )
.如果 (大于 (取记录数 (), 2))
    关闭 (相加 (取运行目录 (), “\system\”, “yfyzc.edb”))
    删除文件 (相加 (取运行目录 (), “\system\”, “yfyzc.edb”))
    复制文件 (相加 (取运行目录 (), “\system\”, “yfyzcb.edb”), 相加 (取运行目录 (), “\”, “yfyzc.edb”))
    _注册按钮_被单击 ()
    
    
    
.否则
    .如果 (等于 (取记录数 (), 1))
        加记录 ()
        写 (“aa”, .内容)
        写 (“bb”, .内容)
        写 (“cc”, .内容)
        写 (“dd”, .内容)
        关闭 (相加 (取运行目录 (), “\system\”, “yfyzc.edb”))
        
    .否则
        跳到 (2)
        修改 (.内容, .内容, .内容, .内容)
        关闭 (相加 (取运行目录 (), “\system\”, “yfyzc.edb”))
        
    .如果结束
    
.如果结束


注册码生成 ()
.如果 (并且 (等于 (.内容, 对比1), 等于 (.内容, 对比2), 等于 (.内容, 对比3), 等于 (.内容, 对比4)))
    赋值 (脚本, 相加 (“update 信息 set 店面='”, .内容, “',wlf='有'”))
    输出调试文本 (脚本)
    .如果 (等于 (_启动窗口.执行 (., 脚本, ), 假))
        信息框 (“写店面信息失败,请重试!”, 0, )
    .否则
        信息框 (“请重新启动本程序！”, 0, “感谢你的注册,希望常联系提出你的宝贵意见,使软件的后续版本更加完善!”)
        
    .如果结束
    
    全部关闭 ()
    
.否则
    信息框 (相加 (“你输入的注册码有误或者为试用版序列，请联系软件作者！”, #换行符, “希望得到你的注册支持,使软件更加完美!”, #换行符, “04704290518”, #换行符, “EMAIL:arqwlf@126.com ”), 0, “请联系作者！”)
    赋值 (脚本, “update 信息 set 店面='贝尔软件注册版 状态：未注册 功能不稳定',wlf='没'”)
    输出调试文本 (脚本)
    .如果 (等于 (_启动窗口.执行 (., 脚本, ), 假))
        信息框 (“写店面信息失败,请重试!”, 0, )
    .否则
        
    .如果结束
    
    全部关闭 ()
    
    
    
    
.如果结束



.子程序 注册码生成, 空白型, , 
赋值 (对比1, 取文本中间 (到文本 (位异或 (到数值 (新特征代码), 84210863)), 3, 4))
赋值 (对比2, 取文本中间 (到文本 (位异或 (到数值 (新特征代码), 84290518)), 4, 4))
赋值 (对比3, 取文本中间 (到文本 (位异或 (到数值 (新特征代码), 84281500)), 5, 4))
赋值 (对比4, 取文本中间 (到文本 (位异或 (到数值 (新特征代码), 84210091)), 6, 4))

.子程序 _密码框1_获得焦点, 空白型, , 


.子程序 _密码框1_内容被改变, 空白型, , 


.子程序 _按钮1_被单击, 空白型, , 
赋值 (脚本, 相加 (“update 信息 set 店面='”, .内容, “',wlf='有'”))
输出调试文本 (脚本)
.如果 (等于 (_启动窗口.执行 (., 脚本, ), 假))
    信息框 (“写店面信息失败,请重试!”, 0, )
.否则
    信息框 (“店面信息修改成功,重启程序生效!”, 0, )
.如果结束


.窗口程序集 窗口程序集72, , , 

.程序集变量 是否显示过, 逻辑型, , , 
.子程序 _库存综合查询_创建完毕, 空白型, , 
赋值 (., 经顶边)
赋值 (., 经左边)
赋值 (., 假)

写z表头信息 ()
赋值 (是否显示过, 假)

.子程序 _按钮2_被单击, 空白型, , 
.局部变量 t, 空白型, , , 

清空 ()
_启动窗口.关闭记录集 (., 记录集句柄)
赋值 (脚本, “select distinct(单据号) from 总库 order by 单据号”) ' 脚本 ＝ “select distinct(单据号),(select count(*) as 数量 from 总库) from 总库 order by 单据号”
赋值 (记录集句柄, _启动窗口.查询 (., 脚本)) ' 对数据库排序：order by  求合：sum
_启动窗口.到首记录 (., 记录集句柄)
.判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
    置等待鼠标 ()
     ' 处理事件 ()
    
     ().加入项目 (_启动窗口.读 (., 记录集句柄, 1), , , )
    _启动窗口.到后一记录 (., 记录集句柄)
.判断循环尾 ()

.子程序 写z表头信息, 空白型, , 
赋值 (., 70)
赋值 (., 1)
赋值 (., 0)
赋值 (., 1)
赋值 (., 20)
相减 (., 1).未知支持库函数_9 (0, 1, “商品编码”)
相减 (., 1).未知支持库函数_9 (1, 1, “商品名称”)
相减 (., 1).未知支持库函数_9 (2, 1, “入库日期”)
相减 (., 1).未知支持库函数_9 (3, 1, “拼音码”)
相减 (., 1).未知支持库函数_9 (4, 1, “规格”)
相减 (., 1).未知支持库函数_9 (5, 1, “进货数量”)
相减 (., 1).未知支持库函数_9 (6, 1, “库存数量”)
相减 (., 1).未知支持库函数_9 (7, 1, “进货价”)
相减 (., 1).未知支持库函数_9 (8, 1, “应付金额”)
相减 (., 1).未知支持库函数_9 (9, 1, “已付金额”)
相减 (., 1).未知支持库函数_9 (10, 1, “零售价”)
相减 (., 1).未知支持库函数_9 (11, 1, “批发价”)
相减 (., 1).未知支持库函数_9 (12, 1, “库存上限”)
相减 (., 1).未知支持库函数_9 (13, 1, “库存下限”)
相减 (., 1).未知支持库函数_9 (14, 1, “一级分类”)
相减 (., 1).未知支持库函数_9 (15, 1, “二级分类”)
相减 (., 1).未知支持库函数_9 (16, 1, “供货商”)
相减 (., 1).未知支持库函数_9 (17, 1, “备注”)
相减 (., 1).未知支持库函数_9 (18, 1, “产地”)
赋值 (., 88)
赋值 (., 88)

.子程序 _树型框1_项目被选择, 空白型, , 
.参数 选择方式, 整数型, , 

_启动窗口.关闭记录集 (., 记录集句柄)
赋值 (脚本, 相加 (“select * from 总库 where 单据号=”, “'”, .取项目文本 (.最大化按钮), “' ”))
输出调试文本 (脚本)
赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
 ' 赋值 (., 1)
添置z表格数据 ()

.子程序 _按钮1_被单击, 空白型, , 
.局部变量 开始, 文本型, , , 
.局部变量 结束, 文本型, , , 
.局部变量 t, 空白型, , , 
.局部变量 项目名暂存, 文本型, , , 
.局部变量 项目名暂存2, 文本型, , , 

.如果 (小于 (.今天, .今天))
    信息框 (“请注意开始日期和结束日期！”, 0, )
    返回 ()
.否则
    赋值 (开始, 相加 (“#”, 未知支持库函数_12 (.今天, “%y-%m-%d”), “#”))
    赋值 (结束, 相加 (“#”, 未知支持库函数_12 (.今天, “%y-%m-%d”), “#”))
    
    
    赋值 (脚本, 相加 (“select count(*) from 总库  where 入库日期 >= ”, 开始, “ and 入库日期 <= ”, 结束))
    输出调试文本 (脚本)
    _启动窗口.关闭记录集 (., 记录集句柄一)
    赋值 (记录集句柄一, _启动窗口.查询 (., 脚本))
    赋值 (t, _启动窗口.读 (., 记录集句柄一, 1))
    
    _启动窗口.关闭记录集 (., 记录集句柄一)
    .如果 (等于 (t, 0))
        信息框 (“没有找到相关数据！”, 0, )
    .否则
        _启动窗口.关闭记录集 (., 记录集句柄一)
        .如果真 (并且 (等于 (.选中, 假), 等于 (.选中, 假)))
            信息框 (“请选择未付或已付查看,本功能中未包含未定价货物!流水功能包含其功能.”, 0, )
            返回 ()
        .如果真结束
        .如果真 (并且 (等于 (.选中, 真), 等于 (.选中, 假)))
            赋值 (脚本, 相加 (“select distinct(单据号) from 总库  where 入库日期 >= ”, 开始, “ and 入库日期 <= ”, 结束, “ and 已付金额>0”))
            
        .如果真结束
        .如果真 (并且 (等于 (.选中, 假), 等于 (.选中, 真)))
            赋值 (脚本, 相加 (“select distinct(单据号) from 总库  where 入库日期 >= ”, 开始, “ and 入库日期 <= ”, 结束, “ and 已付金额<=0”))
        .如果真结束
        .如果真 (并且 (等于 (.选中, 真), 等于 (.选中, 真)))
            赋值 (脚本, 相加 (“select distinct(单据号) from 总库  where 入库日期 >= ”, 开始, “ and 入库日期 <= ”, 结束))
        .如果真结束
        
        
        输出调试文本 (脚本)
        赋值 (记录集句柄一, _启动窗口.查询 (., 脚本))
        清空 ()
        _启动窗口.到首记录 (., 记录集句柄一)
        .计次循环首 (t, )
            赋值 (项目名暂存, _启动窗口.读 (., 记录集句柄一, 1))
            .如果 (不等于 (项目名暂存, 项目名暂存2))
                .加入项目 (项目名暂存, , , )
                
            .否则
                
            .如果结束
            赋值 (项目名暂存2, 项目名暂存)
            _启动窗口.到后一记录 (., 记录集句柄一)
        .计次循环尾 ()
        
    .如果结束
    
    
.如果结束


.子程序 添置z表格数据, 空白型, , 
_启动窗口.到首记录 (., 记录集句柄)

赋值 (., 18)
.判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
    置等待鼠标 ()
     ' ’处理事件 ()
    .未知支持库函数_38 () ' <!!!>
    相减 (., 1).未知支持库函数_9 (0, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “商品编码”))) ' 编码
    相减 (., 1).未知支持库函数_9 (1, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “商品名称”))) ' 名称
    相减 (., 1).未知支持库函数_9 (2, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “入库日期”))) ' 入库日期
    相减 (., 1).未知支持库函数_9 (3, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “拼音码”))) ' 拼音码
    相减 (., 1).未知支持库函数_9 (4, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “规格”))) ' 规格]
    相减 (., 1).未知支持库函数_9 (5, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “数量”))) ' 数量
    相减 (., 1).未知支持库函数_9 (6, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “库存数量”)))
    相减 (., 1).未知支持库函数_9 (7, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “进货价”))) ' 进货价
    相减 (., 1).未知支持库函数_9 (8, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “应付金额”))) ' 应付
    相减 (., 1).未知支持库函数_9 (9, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “已付金额”))) ' 已付
    相减 (., 1).未知支持库函数_9 (10, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “零售价”))) ' 零售
    相减 (., 1).未知支持库函数_9 (11, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “批发价”))) ' 批发
    相减 (., 1).未知支持库函数_9 (12, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “库存上限”))) ' 上限
    相减 (., 1).未知支持库函数_9 (13, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “库存下限”))) ' 下限
    相减 (., 1).未知支持库函数_9 (14, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “一级分类”))) ' 一级
    相减 (., 1).未知支持库函数_9 (15, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “二级分类”))) ' 二级
    相减 (., 1).未知支持库函数_9 (16, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “供货商”))) ' 供货商
    相减 (., 1).未知支持库函数_9 (17, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “备注”))) ' 备注
    相减 (., 1).未知支持库函数_9 (18, 1, 到文本 (_启动窗口.读 (., 记录集句柄, “产地”))) ' 备注
    
    _启动窗口.到后一记录 (., 记录集句柄)
.判断循环尾 ()
_启动窗口.关闭记录集 (., 记录集句柄)


.子程序 _按钮3_被单击, 空白型, , 
赋值 (., 1)

.子程序 _按钮4_被单击, 空白型, , 
赋值 (表格文件名, 相加 (取运行目录 (), “\wgid\库存单据”))
.如果 (等于 (表格文件名.未知支持库函数_55 (), 真))
    置文件属性 (表格文件名, 1)
    赋值 (表头标题, “库存单据”)
    载入 (打印, , 真)
.否则
    信息框 (“打印格式文件出错，操作失败！”, 相加 (0, #错误图标), )
.如果结束





.子程序 _编辑框1_内容被改变, 空白型, , 
_启动窗口.关闭记录集 (., 记录集句柄)
赋值 (脚本, 相加 (“select * from 总库 where 拼音码”, “ like '%”, .内容, “%'”))
输出调试文本 (脚本)
赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
_启动窗口.到首记录 (., 记录集句柄)
赋值 (., 1)
添置z表格数据 ()


.子程序 _按钮5_被单击, 空白型, , 
_启动窗口.关闭记录集 (., 记录集句柄)
赋值 (脚本, “select * from 总库”)
输出调试文本 (脚本)
赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
_启动窗口.到首记录 (., 记录集句柄)
赋值 (., 1)
添置z表格数据 ()


.子程序 _按钮6_被单击, 空白型, , 
.局部变量 t, 空白型, , , 

赋值 (., 1)
.计次循环首 (取项目数 (), t)
    赋值 (脚本, 相加 (“select * from 总库 where 单据号='”, 相减 (t, 1).取项目文本 (), “'”))
     ' 删除提示 (脚本)
    _启动窗口.关闭记录集 (., 记录集句柄)
    赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
    _启动窗口.到首记录 (., 记录集句柄)
    添置z表格数据 ()
.计次循环尾 ()


.子程序 _选择夹1_被单击, 空白型, , 
.局部变量 t, 空白型, , , 
.局部变量 文本, 文本型, , , 
.局部变量 tt, 空白型, , , 
.局部变量 yy, 空白型, , , 

.如果 (并且 (等于 (.现行子夹, 1), 等于 (是否显示过, 假)))
    赋值 (是否显示过, 真)
    _启动窗口.关闭记录集 (., 记录集句柄)
    赋值 (.图标, {  })
    赋值 (脚本, 相加 (“select * from 商品分类 where 一级 ”, “ = ”, “'”, “1”, “'”))
    输出调试文本 (脚本)
    赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
    _启动窗口.到首记录 (., 记录集句柄)
    赋值 (yy, 0)
    .判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
        置等待鼠标 ()
         ' 处理事件 ()
        
        yy.置图片 (1)
        yy.置选中图片 (2)
        yy.置外形图片 (3)
        .加入项目 (_启动窗口.读 (., 记录集句柄, 1), , , )
        _启动窗口.到后一记录 (., 记录集句柄)
        赋值 (yy, 相加 (yy, 1))
    .判断循环尾 ()
    _启动窗口.关闭记录集 (., 记录集句柄)
    赋值 (t, 0)
    赋值 (文本, “”)
    
    .判断循环首 (小于或等于 (t, 取项目数 ()))
        置等待鼠标 ()
         ' 处理事件 ()
        
        t.置图片 (1)
        t.置选中图片 (2)
        yy.置外形图片 (3)
        赋值 (文本, t.取项目文本 ())
        输出调试文本 (文本)
        _启动窗口.关闭记录集 (., 记录集句柄)
        赋值 (脚本, 相加 (“select * from 商品分类 where 二级 ”, “ = ”, “'”, “1”, “' and ”, “商品类名 = '”, 文本, “'”))
        输出调试文本 (脚本)
        赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
        _启动窗口.到首记录 (., 记录集句柄)
        .判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄), 假))
            置等待鼠标 ()
             ' 处理事件 ()
            
            t.加入项目 (_启动窗口.读 (., 记录集句柄, 2), , , )
            _启动窗口.到后一记录 (., 记录集句柄)
        .判断循环尾 ()
        赋值 (t, 相加 (t, 1))
    .判断循环尾 ()
    
    赋值 (t, 0)
    _启动窗口.关闭记录集 (., 记录集句柄)
    
.否则
    
.如果结束


.子程序 _树型框2_项目被选择, 空白型, , 
.参数 选择方式, 整数型, , 

.局部变量 暂1, 文本型, , , 
.局部变量 暂2, 文本型, , , 

.如果真 (等于 (.取父项目 (.最大化按钮), -1))
    _启动窗口.关闭记录集 (., 记录集句柄)
    赋值 (脚本, 相加 (“select * from 总库 where 一级分类=”, “'”, .取项目文本 (.最大化按钮), “' order by 单据号”))
    输出调试文本 (脚本)
    赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
    _启动窗口.到首记录 (., 记录集句柄)
    赋值 (., 1)
    添置z表格数据 ()
    返回 ()
.如果真结束
.如果真 (等于 (.取缩进层次 (.最大化按钮), 2))
    .如果 (等于 (.是否有子项目 (.最大化按钮), 假))
        _启动窗口.关闭记录集 (., 记录集句柄一)
        赋值 (脚本, 相加 (“select * from 总库  where 二级分类='”, .取项目文本 (.最大化按钮), “' order by 单据号”))
        输出调试文本 (脚本)
        赋值 (记录集句柄一, _启动窗口.查询 (., 脚本))
        _启动窗口.到首记录 (., 记录集句柄一)
        .判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集句柄一), 假))
            置等待鼠标 ()
             ' 处理事件 ()
            
            赋值 (暂1, 到文本 (_启动窗口.读 (., 记录集句柄一, 4)))
            .如果 (不等于 (暂1, 暂2))
                .加入项目 (.最大化按钮, 到文本 (_启动窗口.读 (., 记录集句柄一, 4)), , , ) ' 编码
            .否则
                
            .如果结束
            赋值 (暂2, 暂1)
            _启动窗口.到后一记录 (., 记录集句柄一)
        .判断循环尾 ()
        _启动窗口.关闭记录集 (., 记录集句柄一)
    .否则
        
    .如果结束
    _启动窗口.关闭记录集 (., 记录集句柄)
    赋值 (脚本, 相加 (“select * from 总库 where 二级分类=”, “'”, .取项目文本 (.最大化按钮), “' order by 单据号”))
    输出调试文本 (脚本)
    赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
    _启动窗口.到首记录 (., 记录集句柄)
    赋值 (., 1)
    
    添置z表格数据 ()
    .扩展 (.最大化按钮)
.如果真结束
.如果真 (等于 (.取缩进层次 (.最大化按钮), 3))
    _启动窗口.关闭记录集 (., 记录集句柄)
    赋值 (脚本, 相加 (“select * from 总库 where 商品名称=”, “'”, .取项目文本 (.最大化按钮), “' and 二级分类='”, .取父项目 (.最大化按钮).取项目文本 (), “' order by 单据号”))
    输出调试文本 (脚本)
    赋值 (记录集句柄, _启动窗口.查询 (., 脚本))
    _启动窗口.到首记录 (., 记录集句柄)
    赋值 (., 1)
    
    添置z表格数据 ()
.如果真结束








 ' 不属于任何一个程序集、类模块的函数：
