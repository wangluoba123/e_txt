 ' 文件类型：Windows窗口程序

 ' 程序名称：无敌自测
 ' 程序描述：开发进度：测验窗口组件依题型不同
而显示。
需要解决的问题：下一题目的抽题标志为2才可以切换。
多项选择考试时无法点。
判断填空题的括号数。

聪明分计算：
卷面分加效率分
第一次测算：
(分值/(所用时间/总时间))/次数

数据库添加：得分 字段

07。12。22
1、添加 考试自动认考生目录。
2、修改题目不应为添加
3、鼠移到字母显示该题图片
4、注册模块
5、导出试题文本时在选择题后加括号
6、题目乱序和选项乱序。
7、随机抽题。

080107
1、多选项定制
2、问题文本与图片同时存在
3、解决文件过大问题
4、成绩保存之考试次数不准问题

20080109
1、简答题与论述题答案文本的保存
2、抽题

20080123
1、导入图片、音乐、文本路径放在考生目录下与题库同名的文件夹里。
2、解决错选题库之后的提示问题。
3、
 ' 程序作者：余朝勇
 ' 邮政编码：561200
 ' 联系地址：贵州省镇宁自治县党校
 ' 联系电话：0853-6231872
 ' 传真号码：0853-6222855
 ' 电子信箱：ycy110108@sohu.com
 ' 主页地址：www.zz5d.cn
 ' 版权声明：
 ' 版本号：1.303
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 380
    高度 = 435
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 已保存到：D:\易语言学习\Data\无敌自测.e\_启动窗口_图标.ico
    背景音乐 =  ' 空
    标题 = “模式选择”
    帮助文件名 = “”

窗口 出题窗口
    左边 = 50
    顶边 = 50
    宽度 = 468
    高度 = 736
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 真
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 已保存到：D:\易语言学习\Data\无敌自测.e\出题窗口_图标.ico
    背景音乐 =  ' 空
    标题 = “出题模式”
    帮助文件名 = “”

窗口 登录窗口
    左边 = 50
    顶边 = 50
    宽度 = 380
    高度 = 286
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 0
    底图方式 = 1
    底色 = 7893082 '  0x78705A
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 真
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 已保存到：D:\易语言学习\Data\无敌自测.e\登录窗口_图标.ico
    背景音乐 =  ' 空
    标题 = “无敌自测 - 登录”
    帮助文件名 = “”

窗口 抽题窗口
    左边 = 50
    顶边 = 50
    宽度 = 250
    高度 = 335
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 已保存到：D:\易语言学习\Data\无敌自测.e\抽题窗口_图标.ico
    背景音乐 =  ' 空
    标题 = “抽题”
    帮助文件名 = “”

窗口 材料文本窗口
    左边 = 50
    顶边 = 50
    宽度 = 220
    高度 = 607
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 1
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 真
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 真
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 已保存到：D:\易语言学习\Data\无敌自测.e\材料文本窗口_图标.ico
    背景音乐 =  ' 空
    标题 = “材料文本”
    帮助文件名 = “”

窗口 考试结果统计窗口
    左边 = 50
    顶边 = 50
    宽度 = 380
    高度 = 425
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 已保存到：D:\易语言学习\Data\无敌自测.e\考试结果统计窗口_图标.ico
    背景音乐 =  ' 空
    标题 = “考试结果统计”
    帮助文件名 = “”

窗口 导出试卷窗口
    左边 = 50
    顶边 = 50
    宽度 = 468
    高度 = 567
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “试卷文本”
    帮助文件名 = “”

窗口 修改密码窗口
    左边 = 50
    顶边 = 50
    宽度 = 380
    高度 = 191
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “修改登录密码”
    帮助文件名 = “”

窗口 账户管理窗口
    左边 = 50
    顶边 = 50
    宽度 = 380
    高度 = 286
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “账户管理”
    帮助文件名 = “”

窗口 操作指南窗口
    左边 = 50
    顶边 = 50
    宽度 = 512
    高度 = 286
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “操作指南”
    帮助文件名 = “”

窗口 注册窗口
    左边 = 50
    顶边 = 50
    宽度 = 372
    高度 = 289
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 真
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “无敌自测 序列号输入窗口”
    帮助文件名 = “”

窗口 导入单题窗口
    左边 = 50
    顶边 = 50
    宽度 = 468
    高度 = 393
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 真
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “快速导入单题”
    帮助文件名 = “”

窗口 自创输入框窗口
    左边 = 50
    顶边 = 50
    宽度 = 380
    高度 = 469
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “请进行手动打分。得分超过满分的60％即为正确。”
    帮助文件名 = “”

窗口 历次成绩窗口
    左边 = 50
    顶边 = 50
    宽度 = 380
    高度 = 427
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “历次成绩”
    帮助文件名 = “”

窗口 考试窗口
    左边 = 50
    顶边 = 50
    宽度 = 868
    高度 = 700
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 已保存到：D:\易语言学习\Data\无敌自测.e\考试窗口_图标.ico
    背景音乐 =  ' 空
    标题 = “考试模式”
    帮助文件名 = “”

窗口 图片显示窗口
    左边 = 50
    顶边 = 50
    宽度 = 380
    高度 = 224
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 0
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 真
    外形 = 0
    总在最前 = 真
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “图片显示”
    帮助文件名 = “”



.常量 试题数据库, "“试题库”", , 别名
.常量 题目编号, "“题目编号”", , 
.常量 科目名称, "“科目名称”", , 
.常量 章目编号, "“章目编号”", , 
.常量 节序编号, "“节序编号”", , 
.常量 知识范围, "“知识范围”", , 
.常量 题目类型, "“题目类型”", , 
.常量 题目序号, "“题目序号”", , 
.常量 分值, "“分值”", , 
.常量 得分, "“得分”", , 
.常量 时间, "“时间”", , 
.常量 难度系数, "“难度系数”", , 
.常量 材料文本, "“材料文本”", , 
.常量 问题, "“问题”", , 
.常量 选择项一, "“选择项一”", , 
.常量 选择项二, "“选择项二”", , 
.常量 选择项三, "“选择项三”", , 
.常量 选择项四, "“选择项四”", , 
.常量 选择项五, "“选择项五”", , 
.常量 选择项六, "“选择项六”", , 
.常量 选择项七, "“选择项七”", , 
.常量 选择项八, "“选择项八”", , 
.常量 选择项九, "“选择项九”", , 
.常量 选择项十, "“选择项十”", , 
.常量 答案, "“答案”", , 
.常量 提示信息, "“提示信息”", , 
.常量 抽题标记, "“抽题标记”", , 
.常量 用户答案, "“用户答案”", , 
.常量 选项, "“选项”", , 
.常量 帐号数据库, "“帐号数据库”", , 别名
.常量 账号, "“账号”", , 
.常量 密码, "“密码”", , 
.常量 身份, "“身份”", , 
.常量 默认, "“默认”", , 
.常量 记密, "“记密”", , 
.常量 名词解释, "“名词解释”", , 
.常量 单项选择, "“单项选择”", , 
.常量 多项选择, "“多项选择”", , 
.常量 材料分析, "“材料分析”", , 
.常量 填空, "“填空”", , 
.常量 辨析, "“辨析”", , 
.常量 简答, "“简答”", , 
.常量 论述, "“论述”", , 
.常量 成绩记录, "“成绩记录”", , 别名
.常量 考试时间, "“考试时间”", , 
.常量 考试题库, "“考试题库”", , 
.常量 正确分, "“正确分”", , 
.常量 聪明分, "“聪明分”", , 
.常量 出题模式, "“出题模式”", , 
.常量 考试模式, "“考试模式”", , 
.常量 全角空格, "“　”", , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 4 系统核心支持库
 ' iext 27bb20fdd3e145e4bee3db39ddd6e64c 1 2 扩展界面支持库一
 ' eAPI F7FC1AE45C5C4758AF03EF19F18A395D 1 1 应用接口支持库
 ' xplib 7F54B9CE8887428dBA9CEEB94CEF4C72 1 6 XP风格界面库
 ' iext2 AF6AD80AA4244A59AFB3D83ECF5173CC 1 1 扩展界面支持库二
 ' wmp9.npk {6BF52A52-394A-11d3-B153-00C04F79FAA6}##0 1 0 Windows媒体播放器 0,{19A6627B-DA9E-47C1-BB23-00B5E668236A},IWMPEvents,{5001,5101,5102,5002,5301,5403,5401,5402,5501,5601,5201,5202,5203,5204,5701,5801,5804,5805,5802,5803,5806,5807,5808,5809,5820,5810,5811,5812,5818,5819,5821,5823,5822,6501,6502,6503,6504,6505,6506,6507,6508,6509,6510,6511,6512,},{},{}2,{00000000-0000-0000-0000-000000000000},WMPPlaylistChangeEventType,{},{1073741835,1073741834,1073741833,1073741832,1073741831,1073741830,1073741829,1073741828,1073741827,1073741826,1073741825,1073741824,},{}1,{6BF52A52-394A-11D3-B153-00C04F79FAA6},WindowsMediaPlayer,{3,4,5,6,8,9,12,7,13,14,15,17,40,41,42,27,28,6,13,},{26,25,24,23,22,21,19,18,16,11,10,2,1,},{5001,5101,5102,5002,5301,5403,5401,5402,5501,5601,5201,5202,5203,5204,5701,5801,5804,5805,5802,5803,5806,5807,5808,5809,5820,5810,5811,5812,5818,5819,5821,5823,5822,6501,6502,6503,6504,6505,6506,6507,6508,6509,6510,6511,6512,}0,{BC17E5B7-7561-4C18-BB90-17D485775659},IWMPCore2,{3,4,5,6,8,9,12,7,13,14,15,17,40,6,13,},{18,16,11,10,2,1,},{}0,{D84CCA99-CCE2-11D2-9ECC-0000F8085981},IWMPCore,{3,4,5,6,8,9,12,7,13,14,15,17,6,13,},{18,16,11,10,2,1,},{}2,{00000000-0000-0000-0000-000000000000},WMPOpenState,{},{1073741845,1073741844,1073741843,1073741842,1073741841,1073741840,1073741839,1073741838,1073741837,1073741836,1073741835,1073741834,1073741833,1073741832,1073741831,1073741830,1073741829,1073741828,1073741827,1073741826,1073741825,1073741824,},{}2,{00000000-0000-0000-0000-000000000000},WMPPlayState,{},{1073741836,1073741835,1073741834,1073741833,1073741832,1073741831,1073741830,1073741829,1073741828,1073741827,1073741826,1073741825,1073741824,},{}0,{74C09E02-F828-11D2-A74B-00A0C905F36E},IWMPControls,{62,51,52,53,54,55,58,59,60,63,60,},{61,57,56,},{}0,{94D55E95-3FAC-11D3-B155-00C04F79FAA6},IWMPMedia,{763,755,756,760,761,762,765,766,767,},{759,758,757,754,753,752,764,751,},{}0,{D5F0F4F1-130C-11D3-B14E-00C04F79FAA6},IWMPPlaylist,{211,212,203,204,213,205,206,207,208,209,},{210,202,201,},{}0,{9104D1AB-80C9-4FED-ABF0-2E6417A6DF14},IWMPSettings,{113,110,111,},{112,107,102,106,105,104,103,109,108,101,},{}0,{8363BC22-B4B4-4B19-989D-1CD765749DD1},IWMPMediaCollection,{452,453,454,455,456,457,458,459,461,470,471,472,},{},{}0,{4A976298-8C0D-11D3-B389-00C04F68574B},IWMPStringCollection,{402,},{401,},{}0,{10A13217-23A7-439B-B1C0-D847C79B7774},IWMPPlaylistCollection,{552,553,554,556,560,561,562,},{},{}0,{679409C0-99F7-11D3-9FB7-00105AA620BB},IWMPPlaylistArray,{502,},{501,},{}0,{EC21B779-EDEF-462D-BBA4-AD9DDE2B29A7},IWMPNetwork,{813,814,815,816,817,818,819,820,821,822,},{826,825,824,823,812,811,810,809,808,807,806,805,804,803,802,801,},{}0,{EE4C8FE2-34B2-11D3-A3BF-006097C9B344},IWMPCdromCollection,{302,303,},{301,},{}0,{CFAB6E98-8730-11D3-B388-00C04F68574B},IWMPCdrom,{252,253,},{251,},{}0,{4F2DF574-C588-11D3-9ED0-00C04FB6E937},IWMPClosedCaption,{},{954,953,952,951,},{}0,{A12DCF7D-14AB-4C1B-A8CD-63909F06025B},IWMPError,{851,853,854,},{852,},{}0,{3614C646-3B3B-4DE7-A81E-930E3F2127B3},IWMPErrorItem,{903,},{905,904,902,901,},{}0,{8DA61686-4668-4A5C-AE5D-803193293DBE},IWMPDVD,{1001,1003,1004,1005,1006,},{1002,},{}0,{40897764-CEAB-47BE-AD4A-8E28537F9BBF},IWMPPlayerApplication,{1101,1102,},{1104,1103,},{}0,{54062B68-052A-4C25-A39F-8B63346511D4},IWMPPlayer3,{3,4,5,6,8,9,12,7,13,14,15,17,40,6,13,},{25,24,23,22,21,19,18,16,11,10,2,1,},{}0,{0E6B01D1-D407-4C85-BF5F-1C01F6150280},IWMPPlayer2,{3,4,5,6,8,9,12,7,13,14,15,17,6,13,},{25,24,23,22,21,19,18,16,11,10,2,1,},{}0,{6BF52A4F-394A-11D3-B153-00C04F79FAA6},IWMPPlayer,{3,4,5,6,8,9,12,7,13,14,15,17,6,13,},{23,22,21,19,18,16,11,10,2,1,},{}0,{F75CCEC0-C67C-475C-931E-8719870BEE7D},IWMPErrorItem2,{903,},{906,905,904,902,901,},{}0,{6F030D25-0890-480F-9775-1F7E40AB5B8E},IWMPControls2,{62,51,52,53,54,55,58,59,60,63,64,60,},{61,57,56,},{}0,{AB7C88BB-143E-4EA4-ACC3-E4350B2106C3},IWMPMedia2,{763,755,756,760,761,762,765,766,767,768,},{759,758,757,754,753,752,764,751,},{}0,{F118EFC7-F03A-4FB4-99C9-1C02A5C1065B},IWMPMedia3,{763,755,756,760,761,762,765,766,767,768,769,770,},{759,758,757,754,753,752,764,751,},{}0,{5C29BBE0-F87D-4C45-AA28-A70F0230FFA9},IWMPMetadataPicture,{},{1054,1053,1052,1051,},{}0,{769A72DB-13D2-45E2-9C48-53CA9D5B7450},IWMPMetadataText,{},{1055,1056,},{}0,{FDA937A4-EECE-4DA5-A0B6-39BF89ADE2C2},IWMPSettings2,{113,110,111,116,},{115,114,112,107,102,106,105,104,103,109,108,101,},{}0,{A1D1110E-D545-476A-9A78-AC3E4CB1E6BD},IWMPControls3,{62,51,52,53,54,55,58,59,60,63,64,66,67,70,60,},{71,69,68,65,61,57,56,},{}0,{350BA78B-6BC8-4113-A5F5-312056934EB6},IWMPClosedCaption2,{956,957,959,},{958,955,954,953,952,951,},{}0,{E41C88DD-2364-4FF7-A0F5-CA9859AF783F},IAppDispatch,{105,106,110,111,},{113,112,109,108,107,104,103,102,101,100,},{}0,{EF870383-83AB-4EA9-BE48-56FA4251AF10},IWMPSafeBrowser,{8403,8404,8405,8406,8407,8408,8409,},{8402,8401,8400,},{}0,{21D077C1-4BAA-11D3-BD45-00C04F6EA5AE},IWMPObjectExtendedProps,{2015,2017,},{2020,2019,2018,2016,2014,2013,2012,2011,2010,2009,2008,2007,2006,2005,2004,2003,2002,2001,2000,},{}0,{72F486B1-0D43-11D3-BD3F-00C04F6EA5AE},IWMPLayoutSubView,{2015,2017,},{2306,2305,2304,2303,2302,2301,2300,2020,2019,2018,2016,2014,2013,2012,2011,2010,2009,2008,2007,2006,2005,2004,2003,2002,2001,2000,},{}0,{172E905D-80D9-4C2F-B7CE-2CCB771787A2},IWMPLayoutView,{2015,2017,2318,2319,2320,2321,2322,2323,2324,},{2317,2316,2315,2314,2313,2312,2311,2309,2308,2307,2306,2305,2304,2303,2302,2301,2300,2020,2019,2018,2016,2014,2013,2012,2011,2010,2009,2008,2007,2006,2005,2004,2003,2002,2001,2000,},{}0,{5AF0BEC1-46AA-11D3-BD45-00C04F6EA5AE},IWMPEventObject,{2200,2204,2205,},{2217,2216,2215,2214,2213,2212,2211,2210,2209,2208,2207,2206,2203,2202,2201,},{}0,{6FCAE13D-E492-4584-9C21-D2C052A2A33A},IWMPTheme,{2506,2507,2508,2515,2509,2510,2511,2512,2513,2514,},{2505,2504,2503,2502,2501,2500,},{}0,{B2C2D18E-97AF-4B6A-A56B-2FFFF470FB81},IWMPLayoutSettingsDispatch,{2810,2815,},{2866,2865,2864,2863,2862,2861,2860,2859,2858,2854,2853,2852,2851,2850,2857,2856,2855,2849,2848,2847,2846,2845,2844,2843,2842,2841,2840,2839,2838,2837,2836,2835,2834,2833,2832,2831,2830,2829,2828,2827,2826,2825,2824,2823,2822,2821,2820,2819,2818,2817,2816,2813,2811,2809,2808,2807,2867,2805,2804,2803,2802,2801,2800,},{}0,{504F112E-77CC-4E3C-A073-5371B31D9B36},IWMPNowPlayingHelperDispatch,{2901,2902,2903,2904,2905,2909,2910,2911,2917,2918,2919,2920,2921,2922,2923,2925,2926,2926,},{2924,2916,2915,2914,2913,2912,},{}0,{87291B51-0C8E-11D3-BB2A-00A0C93CA73A},WMPButtonCtrl,{},{5114,5113,5112,5110,5109,5108,5107,5106,5105,5104,5103,5102,},{5120,}0,{FC1880CF-83B9-43A7-A066-C44CE8C82583},WMPListBoxCtrl,{6120,6111,6112,6113,6114,6115,6116,6117,6118,6122,6123,6124,},{6125,6121,6110,6109,6107,6106,6105,6104,6103,6102,6101,6100,6108,},{}0,{D255DFB8-C22A-42CF-B8B7-F15D7BCF65D6},IWMPListBoxItem,{6119,},{},{}0,{63D9D30F-AE4C-4678-8CA8-5720F4FE4419},IWMPPlaylistCtrlColumn,{},{5673,5672,5671,5670,},{}0,{F2BF2C90-405F-11D3-BB39-00A0C93CA73A},WMPSliderCtrl,{},{5426,5425,5424,5423,5422,5421,5420,5419,5418,5417,5416,5415,5414,5413,5412,5411,5410,5409,5408,5407,5406,5405,5404,5403,5402,5400,},{5430,5431,5432,}0,{61CECF11-FC3A-11D2-A1CD-005004602752},WMPVideoCtrl,{},{5709,5708,5703,5707,5706,5704,5702,5701,5700,},{5720,5721,}0,{47DEA830-D619-4154-B8D8-6B74845D6A2D},WMPEffects,{5502,5503,5504,5505,5509,5510,5511,5512,5521,5522,5505,},{5520,5518,5517,5516,5515,5514,5513,5506,5507,5501,5500,},{}0,{93EB32F5-87B1-45AD-ACC6-0F2483DB83BB},WMPEqualizerSettingsCtrl,{5815,5815,5814,5816,5817,5828,},{5833,5832,5831,5830,5829,5826,5827,5825,5824,5823,5822,5821,5820,5819,5818,5801,5813,5812,5811,5810,5809,5808,5807,5806,5805,5804,5800,},{}0,{AE7BFAFE-DCC8-4A73-92C8-CC300CA88859},WMPVideoSettingsCtrl,{5904,},{5903,5902,5901,5900,},{}0,{D9DE732A-AEE9-4503-9D11-5605589977A8},WMPLibraryTreeCtrl,{6409,6410,6411,6409,},{6408,6407,6406,6405,6404,6403,6402,6401,},{}0,{6342FCED-25EA-4033-BDDB-D049A14382D3},WMPEditCtrl,{6012,6013,6014,6015,6016,6017,6018,},{6011,6010,6009,6008,6007,6006,6005,6004,6003,6002,6001,6000,0,},{}0,{5D0AD945-289E-45C5-A9C6-F301F0152108},IWMPPluginUIHost,{6203,6204,},{6202,6201,},{}0,{BAB3768B-8883-4AEC-9F9B-E14C947913EF},WMPMenuCtrl,{6301,6302,6303,6304,6305,6306,6308,6309,},{6307,},{}0,{6B28F900-8D64-4B80-9963-CC52DDD1FBB4},WMPAutoMenuCtrl,{6501,},{},{}0,{AE3B6831-25A9-11D3-BD41-00C04F6EA5AE},WMPRegionalButtonCtrl,{5312,5313,5314,},{5316,5315,5311,5310,5309,5308,5306,5305,5304,5303,5302,5301,5300,},{}0,{09AEFF11-69EF-11D3-BD4D-00C04F6EA5AE},WMPRegionalButton,{5344,},{5347,5346,5345,5343,5342,5341,5340,5339,5333,5332,5331,5330,},{5360,5361,5362,5363,5364,5365,5366,5367,5368,5369,5370,5371,}0,{95F45AA3-ED0A-11D2-BA67-0000F80855E6},WMPCustomSliderCtrl,{},{5008,5012,5004,5003,5001,5002,5011,5010,5006,5005,5009,},{5020,5021,5022,}0,{DDDA102E-0E17-11D3-A2E2-00C04F79F88E},WMPTextCtrl,{},{5229,5228,5227,5226,5225,5224,5223,5222,5221,5217,5216,5215,5214,5213,5212,5211,5210,5209,5208,5207,5206,5201,},{}0,{5F9CFD93-8CAD-11D3-9A7E-00C04F8EFB70},WMPPlaylistCtrl,{5601,5623,5624,5625,5626,5628,5629,5630,5631,5632,5633,5634,5635,5636,5637,5644,5645,5646,5647,5648,5649,5601,},{5658,5656,5655,5654,5653,5652,5651,5650,5643,5642,5622,5621,5620,5619,5618,5617,5616,5615,5614,5613,5612,5609,5608,5607,5605,5604,5603,5602,},{}0,{891EADB1-1C45-48B0-B704-49A888DA98C4},ITaskCntrCtrl,{1610743808,1610743810,1610743808,},{},{}0,{09428D37-E0B9-11D2-B147-00C04F79FAA6},WMPCore,{3,4,5,6,8,9,12,7,13,14,15,17,40,41,42,6,13,},{18,16,11,10,2,1,},{5001,5101,5102,5002,5301,5403,5401,5402,5501,5601,5201,5202,5203,5204,5701,5801,5804,5805,5802,5803,5806,5807,5808,5809,5820,5810,5811,5812,5818,5819,5821,5823,5822,}0,{6B550945-018F-11D3-B14A-00C04F79FAA6},IWMPGraphEventHandler,{8151,8173,8153,8157,8156,8158,8172,8159,8160,8161,8178,8162,8163,8165,8166,8167,8168,8169,8170,8171,8174,8177,8179,8180,},{},{}0,{00000000-0000-0000-0000-000000000000},ULONG_PTR,{},{},{}0,{28682B8E-9055-47A9-A179-8E0BAB1164D1},IAssaultVis,{},{},{}0,{F8578BFA-CD8F-4CE1-A684-5B7E85FCA7DC},IBattery,{2,},{1,},{}0,{40C6BDE7-9C90-49D4-AD20-BEF81A6C5F22},IBatteryPreset,{},{1,},{}0,{F85E2D65-207D-48DB-84B1-915E1735DB17},IBatteryRandomPreset,{},{1,},{}0,{876E7208-0172-4EBB-B08B-2E1D30DFE44C},IBatterySavedPreset,{},{1,},{}0,{33E9291A-F6A9-11D2-9435-00A0C92A2F2D},IBarsEffect,{},{8016,8015,8014,8013,8012,8010,8009,8008,8007,8006,8005,8004,8003,8002,8001,8000,},{}0,{3984E7EB-08EF-11D3-9447-00A0C92A2F2D},ISpikesEffect,{},{8205,8204,8203,8202,8201,},{}0,{37327700-EF20-11D2-9431-00A0C92A2F2D},IDotPlaneEffect,{8313,8314,},{8315,8312,8311,8310,8309,8308,8307,8305,8304,8303,8302,8301,8300,},{}0,{E31E7583-32D5-491C-B611-825D032B02CF},IPlenoptic,{},{},{}0,{E2CC638C-FD2C-409B-A1EA-5DDB72DC8E84},IWMPExternal,{10018,},{10012,10005,},{}0,{D10CCDFF-472D-498C-B5FE-3630E5405E0A},IWMPExternalColors,{10018,},{10017,10016,10015,10014,10013,10012,10005,},{}0,{FFFB0104-CCBB-4513-8B6B-46F5098FAB43},IWMPTemplatesExternal,{10018,10011,10010,10019,10006,10021,10020,10022,10023,},{10024,10017,10016,10015,10014,10013,10012,10005,},{}0,{2E922378-EE70-4CEB-BBAB-CE7CE4A04816},IWMPSubscriptionServiceExternal,{10018,10009,},{10012,10005,},{}0,{E15E9AD1-8F20-4CC4-9EC7-1A328CA86A0D},IWMPDownloadManager,{1151,1152,},{},{}0,{7AAA2D24-B37A-4E11-82C1-E071246463A4},IWMPDownloadCollection,{1203,1204,1205,1206,},{1202,1201,},{}0,{C9470E8E-3F6B-46A9-A0A9-452815C34297},IWMPDownloadItem,{1256,1257,1258,},{1255,1254,1253,1252,1251,},{}2,{00000000-0000-0000-0000-000000000000},WMPSubscriptionDownloadState,{},{1073741828,1073741827,1073741826,1073741825,1073741824,},{}0,{2D7EF888-1D3C-484A-A906-9F49D99BB344},IWMPCDDVDWizardExternal,{10018,10001,10002,10007,10008,10011,10010,},{10017,10016,10015,10014,10013,10012,10005,},{}2,{00000000-0000-0000-0000-000000000000},WMP_WRITENAMESEX_TYPE,{},{1073741827,1073741826,1073741825,1073741824,},{}0,{F81B2A59-02BC-4003-8B2F-C124AF66FC66},IWMPBaseExternal,{10018,},{10012,10005,},{}0,{3148E685-B243-423D-8341-8480D6EFF674},IWMPOfflineExternal,{10018,10025,},{10012,10005,},{}
 ' EChartBar 9A3F84D7FDEB4a0486F2711D5104B7F7 1 6 数据图表支持库
 ' ePPT2000 39A8BFA9AFF74dc9AC2C9ED581FB0510 1 0 PowerPoint2000支持库
 ' spec A512548E76954B6E92C21055517615B0 2 1 特殊功能支持库




数据类型 题目, , 
    .成员 问题, 文本型, , , 
    .成员 选项, 选项, , "10", 
    .成员 答案, 文本型, , , 
    .成员 提示, 文本型, , , 

数据类型 完整题目, , 根据数据库
    .成员 题目编号, 整数型, , , 
    .成员 科目名称, 文本型, , , 
    .成员 章目编号, 整数型, , , 
    .成员 节序编号, 整数型, , , 
    .成员 知识范围, 文本型, , , 
    .成员 题目类型, 文本型, , , 
    .成员 题目序号, 整数型, , , 
    .成员 分值, 整数型, , , 
    .成员 得分, 整数型, , , 
    .成员 时间, 整数型, , , 
    .成员 难度系数, 文本型, , , 
    .成员 材料文本, 文本型, , , 
    .成员 问题, 文本型, , , 
    .成员 选择项一, 文本型, , , 
    .成员 选择项二, 文本型, , , 
    .成员 选择项三, 文本型, , , 
    .成员 选择项四, 文本型, , , 
    .成员 选择项五, 文本型, , , 
    .成员 选择项六, 文本型, , , 
    .成员 选择项七, 文本型, , , 
    .成员 选择项八, 文本型, , , 
    .成员 选择项九, 文本型, , , 
    .成员 选择项十, 文本型, , , 
    .成员 答案, 文本型, , , 
    .成员 提示信息, 文本型, , , 
    .成员 抽题标记, 文本型, , , 
    .成员 用户答案, 文本型, , , 
    .成员 选项, 整数型, , , 

.全局变量 考生姓名, 文本型, , , 
.全局变量 材料文本窗口被打开, 逻辑型, , , 
.全局变量 出题模式, 逻辑型, , , 
.全局变量 本题时间, 整数型, , , 
.全局变量 限时换题, 逻辑型, , , 
.全局变量 不可回头, 逻辑型, , , 
.全局变量 错题重做, 逻辑型, , , 
.全局变量 分数, 整数型, , , 
.全局变量 错误题数, 整数型, , , 
.全局变量 完成题数, 整数型, , , 
.全局变量 正确题数, 整数型, , , 
.全局变量 错题, 文本型, , , 
.全局变量 考试次数, 整数型, , , 
.全局变量 对错提示, 逻辑型, , , 
.全局变量 总时间, 整数型, , , 
.全局变量 题号, 整数型, , , 
.全局变量 提前时间, 整数型, , , 
.全局变量 材料文本路径, 文本型, , , 
.全局变量 材料文本路径1, 文本型, , , 
.全局变量 问题文本, 文本型, , , 
.全局变量 题库, 文本型, , , 
.全局变量 总聪明分, 整数型, , , 
.全局变量 全部重考题库, 文本型, , , 
.全局变量 聪明分历史数据, 整数型, , "0", 
.全局变量 身份, 文本型, , , 
.全局变量 运行次数, 整数型, , , 
.全局变量 软件序列号, 文本型, , , 
.全局变量 输入框提示信息, 文本型, , , 
.全局变量 初始文本, 文本型, , , 
.全局变量 该题得分, 整数型, , , 
.全局变量 论述题问题, 文本型, , , 
.全局变量 窗口加大, 逻辑型, , , 
.全局变量 切换模式按钮被单击, 逻辑型, , , 
.全局变量 题库路径, 文本型, , , 
.全局变量 初始打开题库, 文本型, , , 
.全局变量 问题闪现, 逻辑型, , , 
.全局变量 全局图片路径, 文本型, , , 
.全局变量 全局标准答案, 文本型, , , 
.全局变量 全局用户答案, 文本型, , , 
.全局变量 图片显示窗口被打开, 逻辑型, , , 

.窗口程序集 主窗口程序集, , , 

.程序集变量 题库路径1, 文本型, , , 
.子程序 __启动窗口_创建完毕, 空白型, , 
.局部变量 字段表1, 字段信息, , "5", 
.局部变量 注册项文本, 文本型, , , 
.局部变量 注册信息文件号, 整数型, , , 
.局部变量 循环变量, 整数型, , , 

 ' 写注册项 (3, , )
 ' -===============================注册模块
 ' .如果 (等于 (文件是否存在 (相加 (取运行目录 (), “\无敌自测.exe”)), 假))
     ' 信息框 (“找不到主程序文件：无敌自测.exe”, 0, )
     ' 结束 ()
.否则
    
.如果结束

 ' 运行次数 ＝ 到整数 (取文本注册项 (#现行用户, “software\exam\reg\time”, ))

 ' .如果 (等于 (注册项是否存在 (#现行用户, “software\exam\reg\over”), 真))
     ' 注册项文本 ＝ 取文本注册项 (#现行用户, “software\exam\reg\over”, )
     ' .如果 (等于 (注册项文本, “1”)) ' 1代表试用期结束，序列号代表注册成功
         ' 信息框 (“未注册版本只允许运行 [30] 次，您已运行 [” ＋ 到文本 (运行次数) ＋ “] 次”, 0, )
         ' 载入 (注册窗口, , 真)
    .否则
        
        
        
    .如果结束
    
.否则
     ' .如果 (等于 (写注册项 (#现行用户, “software\exam\reg\over”, “0”), 假))
         ' 结束 ()
    .否则
        
    .如果结束
    
.如果结束

 ' .如果 (大于或等于 (运行次数, 30))
    
     ' .如果 (等于 (文件是否存在 (相加 (取运行目录 (), “\无敌自测注册信息.inf”)), 真))
         ' 注册信息文件号 ＝ 打开文件 (取运行目录 () ＋ “\无敌自测注册信息.inf”, , )
         ' .如果 (不等于 (注册信息文件号, 0))
             ' 软件序列号 ＝ 读入文本 (注册信息文件号, )
             ' .如果 ()

.子程序 _出题按钮_被单击, 空白型, , 
赋值 (出题模式, 真)
赋值 (窗口加大, 假)
载入 (出题窗口, , 真)


.子程序 _考试按钮_被单击, 空白型, , 
赋值 (出题模式, 假)
载入 (抽题窗口, , 真)


.子程序 _修改密码按钮_被单击, 空白型, , 
载入 (修改密码窗口, , 真)


.子程序 _账户管理按钮_被单击, 空白型, , 
载入 (账户管理窗口, , 真)


.子程序 _操作指南按钮_被单击, 空白型, , 
载入 (操作指南窗口, , 假)


.子程序 _注册按钮_被单击, 空白型, , 
载入 (注册窗口, , 真)


.子程序 _平时成绩按钮_被单击, 空白型, , 
.如果 (等于 (文件是否存在 (相加 (取运行目录 (), “\”, 考生姓名, “\成绩记录.edb”)), 真))
    载入 (历次成绩窗口, , 假)
.否则
    信息框 (“帐户未建立或成绩记录不存在！”, 0, )
.如果结束


.子程序 __启动窗口_将被销毁, 空白型, , 

.如果 (不等于 (题库, “”))
    .如果 (等于 (是否已打开 (题库), 假))
        打开 (题库, , , , , , )
    .否则
        置当前库 (题库)
    .如果结束
    .计次循环首 (取记录数 (), )
        .如果 (等于 (文件是否存在 (相加 (题库路径, “\”, 取文本左边 (读 (#问题), 10), “.txt”)), 真))
            删除文件 (相加 (题库路径, “\”, 取文本左边 (读 (#问题), 10), “.txt”))
        .否则
            
        .如果结束
        跳过 ()
    .计次循环尾 ()
    关闭 (题库)
.否则
    
.如果结束



.子程序 读本地目录, 空白型, , 
.参数 欲列目录, 文本型, , 

.局部变量 文件名, 文本型, , , 
.局部变量 文件属性, 整数型, , , 


赋值 (文件名, 寻找文件 (相加 (欲列目录, “*.*”), ))
清空 ()
.判断循环首 (不等于 (文件名, “”))
    
    调试输出 (文件名)
    .如果 (等于 (取文本右边 (文件名, 3), “edb”))
        .如果 (或者 (等于 (文件名, “成绩记录.edb”), 等于 (文件名, “复考题库.edb”), 等于 (文件名, “全部重考题库.edb”)))
            
        .否则
            取文本左边 (文件名, 相减 (取文本长度 (文件名), 4)).加入项目 ()
        .如果结束
        
    .否则
        
    .如果结束
    赋值 (文件名, 寻找文件 ())
.判断循环尾 ()

赋值 (.标题, 相加 (“[ 题库列表 ][ ”, 到文本 (取项目数 ()), “ ][ ”, “题库未选中”, “ ]”))





.子程序 _题库列表框_列表项被选择, 空白型, , 

赋值 (题库, 相加 (题库路径1, .取项目文本 (.现行选中项), “.edb”))
 ' 标签1.标题 ＝ 题库列表框.取项目文本 (题库列表框.现行选中项)
赋值 (.标题, 相加 (“[ 题库列表 ][ ”, 到文本 (取项目数 ()), “ ][ ”, .取项目文本 (.现行选中项), “ ]”))
 ' 信息框 (“题库名称： ” ＋ “[ ” ＋ 题库列表框.取项目文本 (题库列表框.现行选中项) ＋ “ ]” ＋ #换行符 ＋ #换行符 ＋ “所在路径： ” ＋ “[ ” ＋ 题库 ＋ “ ]”, 0, “题库被选中”)

.子程序 _图片框2_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (_启动窗口., 435)


.子程序 _出题按钮_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (_启动窗口., 286)
 ' 出题按钮.字体.字体大小 ＝ 30

.子程序 _考试按钮_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (_启动窗口., 286)

.子程序 _题库列表框_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

弹出菜单 ()


.子程序 _删除_被选择, 空白型, , 
.如果 (等于 (信息框 (“删除题库后不可恢复，一定要删除吗？”, #确认取消钮, “删除题库”), #确认钮))
    删除文件 (题库)
    赋值 (题库, “”)
    读本地目录 (题库路径1)
    
.否则
    
.如果结束


.子程序 _创建_被选择, 空白型, , 
.局部变量 新题库名称, 文本型, , , 
.局部变量 题库更名序号, 整数型, , , 

.如果 (等于 (输入框 (“请输入新题库名称：”, “创建新题库”, “题库”, 新题库名称, ), 真))
    赋值 (题库, 相加 (取运行目录 (), “\”, 考生姓名, “\”, 新题库名称, “.edb”))
    赋值 (题库更名序号, 0)
    
    .判断循环首 (等于 (文件是否存在 (题库), 真))
        赋值 (题库更名序号, 相加 (题库更名序号, 1))
        赋值 (题库, 相加 (取运行目录 (), “\”, 考生姓名, “\”, 新题库名称, 到文本 (题库更名序号), “.edb”))
    .判断循环尾 ()
    复制文件 (相加 (取运行目录 (), “\试题库.edb”), 题库)
    读本地目录 (相加 (取运行目录 (), “\”, 考生姓名, “\”))
.否则
    
.如果结束


.子程序 _不选_被选择, 空白型, , 
 ' 题库 ＝ “”
 ' ' 标签1.标题 ＝ “显示题库列表”
 ' 题库列表分组框.标题 ＝ “[ 题库列表 ][ ” ＋ 到文本 (题库列表框.取项目数 ()) ＋ “ ][ ” ＋ “题库未选中” ＋ “ ]”

.子程序 _另寻_被选择, 空白型, , 
.局部变量 纯题库名1, 文本型, , , 

.如果 (等于 (打开 (), 真))
    赋值 (题库路径1, 取文本左边 (.文件名, 倒找文本 (.文件名, “\”, , 假)))
    调试输出 (相加 (“题库路径:”, 题库路径1))
    读本地目录 (题库路径1)
    赋值 (纯题库名1, 文本替换 (.文件名, 1, 取文本长度 (题库路径1), ))
    赋值 (纯题库名1, 取文本左边 (纯题库名1, 相减 (取文本长度 (纯题库名1), 4)))
    .如果 (并且 (不等于 (纯题库名1, “成绩记录”), 不等于 (纯题库名1, “复考题库”), 不等于 (纯题库名1, “全部重考题库”)))
        赋值 (.标题, 相加 (“[ 题库列表 ][ ”, 到文本 (取项目数 ()), “ ][ ”, 纯题库名1, “ ]”))
        赋值 (题库, .文件名)
    .否则
        赋值 (题库, “”)
    .如果结束
    
.否则
    
.如果结束


.子程序 _打包_被选择, 空白型, , 
 ' 创建目录 ()
 ' 复制文件 (题库, )
 ' ' ZIP压缩1.压缩 (, )


.子程序 _更改用户按钮_被单击, 空白型, , 
__启动窗口_创建完毕 ()


.子程序 _改名_被选择, 空白型, , 
.局部变量 新文件名, 文本型, , , 

.如果 (不等于 (.取项目文本 (.现行选中项), “”))
    .如果 (等于 (输入框 (相加 (“原文件名为：”, .取项目文本 (.现行选中项), #换行符, “请输入新文件名。”), “文件改名”, .取项目文本 (.现行选中项), 新文件名, ), 真))
        文件更名 (相加 (题库路径1, .取项目文本 (.现行选中项), “.edb”), 相加 (题库路径1, 新文件名, “.edb”))
        
        文件更名 (相加 (题库路径1, .取项目文本 (.现行选中项)), 相加 (题库路径1, 新文件名))
        读本地目录 (题库路径1)
    .否则
        
    .如果结束
    
.否则
    
.如果结束


.子程序 _刷新_被选择, 空白型, , 
读本地目录 (题库路径1)
赋值 (题库, “”)
写注册项 (#现行用户, “software\exam\reg\tkname”, “”)
 ' 标签1.标题 ＝ “显示题库列表”
赋值 (.标题, 相加 (“[ 题库列表 ][ ”, 到文本 (取项目数 ()), “ ][ ”, “题库未选中”, “ ]”))


.窗口程序集 登录窗口程序集, , , 

.子程序 _退出按钮_被单击, 空白型, , 
结束 ()


.子程序 _登录按钮_被单击, 空白型, , 
.局部变量 字段表1, 字段信息, , "28", 
.局部变量 字段表2, 字段信息, , "4", 

 ' 信息框 (身份, 0, )
到首记录 ()
.计次循环首 (取记录数 (), )
    写 (#默认, 假)
    跳过 ()
.计次循环尾 ()
.如果 (等于 (身份, “教师”))
    .如果 (等于 (.内容, “”))
         ' .如果 (等于 (.内容, “”))
             ' 信息框 (“姓名和证号未输入”, 0, “提示”)
        .否则
            信息框 (“请先输入姓名。”, 0, “提示”)
        .如果结束
        
    .否则
        .如果 (不等于 (.内容, “”))
             ' .如果 (不等于 (.内容, “”))
                到首记录 ()
                查找 (等于 (.内容, 读 (#账号)))
                .如果 (等于 (.内容, 读 (#密码)))
                    赋值 (考生姓名, .内容)
                    写 (#默认, 真)
                    .如果 (等于 (.选中, 真))
                        写 (#记密, 真)
                    .否则
                        写 (#记密, 假)
                    .如果结束
                    创建目录 (相加 (取运行目录 (), “\”, 考生姓名))
                    赋值 (_启动窗口., 相加 (“无敌考试  －当前用户：”, 考生姓名))
                    登录窗口.销毁 ()
                    
                .否则
                    信息框 (“密码不正确”, 0, “提示”)
                .如果结束
                 ' 如果 (姓名组合框.内容 ＝ “管理员”)
                 ' _启动窗口.账户管理按钮.可视 ＝ 真
                 ' _启动窗口.账户管理按钮.可视 ＝ 假
                
            .否则
                 ' 信息框 (“证号未输入”, 0, “提示”)
            .如果结束
            
        .否则
            
        .如果结束
        
        
        
    .如果结束
    
.否则
    .如果 (等于 (身份, “学生”))
        .如果 (等于 (.内容, “”))
            信息框 (“姓名或证号未输入”, 0, “提示”)
        .否则
            到首记录 ()
            
            .如果 (等于 (查找 (等于 (.内容, 读 (#账号))), 真))
                赋值 (考生姓名, .内容)
                写 (#默认, 真)
                创建目录 (相加 (取运行目录 (), “\”, 考生姓名))
                赋值 (_启动窗口., 相加 (“无敌自测  － 当前用户：”, 考生姓名))
                登录窗口.销毁 ()
                
            .否则
                信息框 (“无此学生账号。”, 0, “提示”)
            .如果结束
            
            
            
            
            
            
        .如果结束
        
    .否则
        .如果 (等于 (身份, “管理员”))
            .如果 (等于 (.内容, “”))
                信息框 (“姓名或证号未输入”, 0, “提示”)
            .否则
                 ' 如果 (姓名组合框.内容 ≠ “管理员”)
                赋值 (考生姓名, .内容)
                到首记录 ()
                .如果 (等于 (查找 (等于 (读 (#账号), 考生姓名)), 真))
                    .如果 (等于 (读 (#密码), .内容))
                        写 (#默认, 真)
                        .如果 (等于 (.选中, 真))
                            写 (#记密, 真)
                        .否则
                            写 (#记密, 假)
                        .如果结束
                        
                        赋值 (_启动窗口., 相加 (“无敌考试  －当前考生：”, 考生姓名))
                        赋值 (_启动窗口..禁止, 真)
                        赋值 (_启动窗口..禁止, 真)
                        赋值 (_启动窗口..禁止, 假)
                         ' _启动窗口.平时成绩按钮.可视 ＝ 假
                        销毁 ()
                    .否则
                        信息框 (“证号不正确。”, 0, “提示”)
                        
                    .如果结束
                    
                .否则
                    信息框 (“姓名不正确。”, 0, “提示”)
                .如果结束
                 ' 创建目录 (取运行目录 () ＋ “\” ＋ 考生姓名)
                
                 ' 销毁 ()
                
                 ' 信息框 (“考生名字不能为管理员！”, 0, “提示”)
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .如果结束
    
.如果结束

.如果 (等于 (文件是否存在 (相加 (取运行目录 (), “\试题库.edb”)), 假))
    赋值 (字段表1 [1].名称, “题目编号”)
    赋值 (字段表1 [2].名称, “科目名称”)
    赋值 (字段表1 [3].名称, “章目编号”)
    赋值 (字段表1 [4].名称, “节序编号”)
    赋值 (字段表1 [5].名称, “知识范围”)
    赋值 (字段表1 [6].名称, “题目类型”)
    赋值 (字段表1 [7].名称, “题目序号”)
    赋值 (字段表1 [8].名称, “分值”)
    赋值 (字段表1 [9].名称, “得分”)
    赋值 (字段表1 [10].名称, “时间”)
    赋值 (字段表1 [11].名称, “难度系数”)
    赋值 (字段表1 [12].名称, “材料文本”)
    赋值 (字段表1 [13].名称, “问题”)
    
    赋值 (字段表1 [14].名称, “选择项一”)
    赋值 (字段表1 [15].名称, “选择项二”)
    赋值 (字段表1 [16].名称, “选择项三”)
    赋值 (字段表1 [17].名称, “选择项四”)
    赋值 (字段表1 [18].名称, “选择项五”)
    赋值 (字段表1 [19].名称, “选择项六”)
    赋值 (字段表1 [20].名称, “选择项七”)
    赋值 (字段表1 [21].名称, “选择项八”)
    赋值 (字段表1 [22].名称, “选择项九”)
    赋值 (字段表1 [23].名称, “选择项十”)
    
    赋值 (字段表1 [24].名称, “答案”)
    赋值 (字段表1 [25].名称, “提示信息”)
    赋值 (字段表1 [26].名称, “抽题标记”)
    赋值 (字段表1 [27].名称, “用户答案”)
    赋值 (字段表1 [28].名称, “选项”)
    
    连续赋值 (#整数型, 字段表1 [1].类型, 字段表1 [3].类型, 字段表1 [4].类型, 字段表1 [7].类型, 字段表1 [8].类型, 字段表1 [9].类型, 字段表1 [10].类型, 字段表1 [28].类型)
    连续赋值 (#文本型, 字段表1 [2].类型, 字段表1 [5].类型, 字段表1 [6].类型, 字段表1 [11].类型, 字段表1 [12].类型, 字段表1 [13].类型, 字段表1 [14].类型, 字段表1 [15].类型, 字段表1 [16].类型, 字段表1 [17].类型, 字段表1 [18].类型, 字段表1 [19].类型, 字段表1 [20].类型, 字段表1 [21].类型, 字段表1 [22].类型, 字段表1 [23].类型, 字段表1 [24].类型, 字段表1 [25].类型, 字段表1 [26].类型, 字段表1 [27].类型)
    
    连续赋值 (512, 字段表1 [13].最大文本长度, 字段表1 [24].最大文本长度, 字段表1 [25].最大文本长度, 字段表1 [27].最大文本长度)
    连续赋值 (100, 字段表1 [12].最大文本长度, 字段表1 [14].最大文本长度, 字段表1 [15].最大文本长度, 字段表1 [16].最大文本长度, 字段表1 [17].最大文本长度, 字段表1 [18].最大文本长度, 字段表1 [19].最大文本长度, 字段表1 [20].最大文本长度, 字段表1 [21].最大文本长度, 字段表1 [22].最大文本长度, 字段表1 [23].最大文本长度)
    连续赋值 (50, 字段表1 [2].最大文本长度, 字段表1 [5].最大文本长度)
    连续赋值 (20, 字段表1 [6].最大文本长度, 字段表1 [26].最大文本长度)
    连续赋值 (4, 字段表1 [11].最大文本长度)
    
    创建 (相加 (取运行目录 (), “\试题库.edb”), 字段表1)
    
    
.否则
    
.如果结束
.如果 (等于 (文件是否存在 (相加 (取运行目录 (), “\”, 考生姓名, “\成绩记录.edb”)), 假))
    赋值 (字段表2 [1].名称, “考试时间”)
    赋值 (字段表2 [2].名称, “考试题库”)
    赋值 (字段表2 [3].名称, “正确分”)
    赋值 (字段表2 [4].名称, “聪明分”)
    
    赋值 (字段表2 [1].类型, #日期时间型)
    赋值 (字段表2 [2].类型, #文本型)
    赋值 (字段表2 [3].类型, #整数型)
    赋值 (字段表2 [4].类型, #整数型)
    
    赋值 (字段表2 [2].最大文本长度, 50)
    
    创建 (相加 (取运行目录 (), “\”, 考生姓名, “\成绩记录.edb”), 字段表2)
.否则
    
.如果结束



.子程序 子程序1, 空白型, , 


.子程序 _我是教师单选框_被单击, 空白型, , 
.如果 (等于 (.选中, 真))
    清空 ()
    赋值 (身份, “教师”)
    到首记录 ()
    .计次循环首 (取记录数 (), )
        
        .如果 (等于 (读 (#身份), 身份))
            读 (#账号).加入项目 ()
        .否则
            
        .如果结束
        跳过 ()
    .计次循环尾 ()
    赋值 (.内容, 0.取项目文本 ())
    _姓名组合框_列表项被选择 ()
    
    连续赋值 (真, .可视, .可视, .可视, .可视)
    赋值 (_启动窗口..禁止, 假)
    赋值 (_启动窗口..禁止, 假)
    赋值 (_启动窗口..禁止, 真)
    
.否则
     ' 身份 ＝ “学生”
     ' _启动窗口.出题按钮.禁止 ＝ 真
.如果结束


.子程序 _我是学生单选框_被单击, 空白型, , 
.如果 (等于 (.选中, 真))
    清空 ()
    赋值 (身份, “学生”)
    到首记录 ()
    .计次循环首 (取记录数 (), )
        .如果 (等于 (读 (#身份), 身份))
            读 (#账号).加入项目 ()
        .否则
            
        .如果结束
        跳过 ()
    .计次循环尾 ()
    赋值 (.内容, 0.取项目文本 ())
    _姓名组合框_列表项被选择 ()
    赋值 (.内容, “”)
    赋值 (.可视, 真)
    
    
    连续赋值 (假, .可视, .可视, .可视, .可视)
    获取焦点 ()
    
    赋值 (_启动窗口..禁止, 真)
    赋值 (_启动窗口..禁止, 真)
    连续赋值 (真, .可视)
.否则
     ' 身份 ＝ “教师”
    
    赋值 (_启动窗口..禁止, 假)
    赋值 (_启动窗口..禁止, 假)
    
.如果结束



.子程序 _登录窗口_创建完毕, 空白型, , 
.如果 (等于 (是否已打开 (相加 (取运行目录 (), “\账号.edb”)), 假))
    打开 (相加 (取运行目录 (), “\账号.edb”), , , , , , )
.否则
    
.如果结束
 ' 我是管理员单选框.选中 ＝ 真
 ' _我是管理员单选框_被单击 ()
到首记录 ()
.计次循环首 (取记录数 (), )
    .如果 (等于 (读 (#默认), 真))
        赋值 (.内容, 读 (#账号))
        赋值 (身份, 读 (#身份))
        赋值 (.选中, 真)
        .如果 (等于 (读 (#记密), 真))
            赋值 (.内容, 读 (#密码))
        .否则
            
        .如果结束
        .如果 (等于 (身份, “管理员”))
            赋值 (.选中, 真)
        .否则
            
        .如果结束
        .如果 (等于 (身份, “教师”))
            赋值 (.选中, 真)
        .否则
            
        .如果结束
        .如果 (等于 (身份, “学生”))
            _姓名组合框_列表项被选择 ()
            赋值 (.内容, “”)
            赋值 (.可视, 真)
            连续赋值 (假, .可视, .可视, .可视, .可视)
            赋值 (_启动窗口..禁止, 真)
            赋值 (_启动窗口..禁止, 真)
            连续赋值 (真, .可视)
            赋值 (.选中, 真)
            
        .否则
            
        .如果结束
        .如果 (等于 (读 (#记密), 真))
            赋值 (.选中, 真)
        .否则
            
        .如果结束
        
        跳出循环 ()
    .否则
        
    .如果结束
    
    
    
    跳过 ()
.计次循环尾 ()

.子程序 _注册按钮_被单击, 空白型, , 
.如果 (不等于 (.内容, “”))
    到首记录 ()
    .如果 (查找 (等于 (读 (#账号), .内容)))
        信息框 (“此姓名已存在，请更改。”, 0, “账号存在”)
    .否则
        加空记录 ()
        写 (#账号, .内容)
        写 (#密码, .内容)
        写 (#身份, 身份)
        信息框 (相加 (“账  号：[”, .内容, “]”, #换行符, “密  码：[”, .内容, “]”, #换行符, “身  份：[”, 身份, “]”), 0, “账号注册成功！”)
    .如果结束
    
.否则
    
.如果结束



.子程序 _我是管理员单选框_被单击, 空白型, , 

.如果 (等于 (.选中, 真))
    清空 ()
    赋值 (身份, “管理员”)
    到首记录 ()
    .计次循环首 (取记录数 (), )
        
        .如果 (等于 (读 (#身份), 身份))
            读 (#账号).加入项目 ()
        .否则
            
        .如果结束
        跳过 ()
    .计次循环尾 ()
    赋值 (.内容, 0.取项目文本 ())
    _姓名组合框_列表项被选择 ()
    连续赋值 (假, .可视)
    连续赋值 (真, .可视, .可视, .可视, .可视, .可视)
    获取焦点 ()
    赋值 (_启动窗口..禁止, 真)
    赋值 (_启动窗口..禁止, 真)
    赋值 (_启动窗口..禁止, 真)
    
.否则
     ' ' 身份 ＝ “教师”
     ' 注册按钮.可视 ＝ 真
     ' _启动窗口.出题按钮.禁止 ＝ 假
     ' _启动窗口.修改密码按钮.禁止 ＝ 假
    
.如果结束


.子程序 _姓名组合框_列表项被选择, 空白型, , 
到首记录 ()
.如果 (等于 (查找 (等于 (读 (#账号), .内容)), 真))
    .如果 (等于 (读 (#默认), 真))
        赋值 (.选中, 真)
    .否则
        赋值 (.选中, 假)
    .如果结束
    .如果 (等于 (读 (#记密), 真))
        赋值 (.内容, 读 (#密码))
        赋值 (.选中, 真)
    .否则
        赋值 (.内容, “”)
        赋值 (.选中, 假)
        
    .如果结束
    
.否则
    
.如果结束


.子程序 _姓名组合框_编辑内容被改变, 空白型, , 
.如果 (等于 (.内容, “”))
    赋值 (.内容, “”)
    
.否则
    
.如果结束


.窗口程序集 出题窗口程序集, , , 

.程序集变量 临时图片A, 字节集, , , 
.程序集变量 临时图片B, 字节集, , , 
.程序集变量 临时图片E, 字节集, , , 
.程序集变量 临时图片D, 字节集, , , 
.程序集变量 临时图片C, 字节集, , , 
.程序集变量 临时图片0, 字节集, , , 
.程序集变量 临时图片A路径, 文本型, , , 
.程序集变量 临时图片B路径, 文本型, , , 
.程序集变量 临时图片C路径, 文本型, , , 
.程序集变量 临时图片D路径, 文本型, , , 
.程序集变量 临时图片E路径, 文本型, , , 
.程序集变量 临时图片0路径, 文本型, , , 
.程序集变量 记录上一条索引值, 整数型, , , 
.程序集变量 单项选择当前选择, 文本型, , , 
.程序集变量 提示信息, 文本型, , , 
.程序集变量 答案, 文本型, , , 
.程序集变量 该题正确, 逻辑型, , , 
.程序集变量 临时答案, 文本型, , , 
.程序集变量 材料文本文件号, 整数型, , , 
.程序集变量 改变答题编辑框内容, 逻辑型, , , 
.程序集变量 填空问题文本, 文本型, , , 
.程序集变量 固定长度文本, 文本型, , , 
.程序集变量 当前位置, 整数型, , , 
.程序集变量 上一位置, 整数型, , , 
.程序集变量 已做题数, 整数型, , , 
.程序集变量 加题状态, 逻辑型, , , 
.程序集变量 题目副本, 题目, , , 
.程序集变量 图片路径, 文本型, , , 
.程序集变量 临时图片J, 字节集, , , 
.程序集变量 临时图片J路径, 文本型, , , 
.程序集变量 临时图片I, 字节集, , , 
.程序集变量 临时图片I路径, 文本型, , , 
.程序集变量 临时图片H, 字节集, , , 
.程序集变量 临时图片H路径, 文本型, , , 
.程序集变量 临时图片G, 字节集, , , 
.程序集变量 临时图片G路径, 文本型, , , 
.程序集变量 临时图片F, 字节集, , , 
.程序集变量 临时图片F路径, 文本型, , , 
.程序集变量 文字题答案, 文本型, , , 
.程序集变量 问题编辑框内容被改变, 逻辑型, , , 
.程序集变量 简答论述分值累计, 整数型, , , 
.程序集变量 时间分值比, 整数型, , , 
.程序集变量 原图高宽比, 小数型, , , 
.程序集变量 当前题库, 文本型, , , 
.程序集变量 问题闪现内容清空, 逻辑型, , , 
.程序集变量 当前分值, 文本型, , , 
.程序集变量 当前题型, 文本型, , , 
.子程序 _出题窗口_创建完毕, 空白型, , 
.局部变量 题库遍历循环变量, 整数型, , , 
.局部变量 当前题号, 整数型, , , 
.局部变量 树型框题号, 整数型, , , 
.局部变量 树型框遍历循环变量, 整数型, , , 
.局部变量 初始题目序号, 整数型, , , 
.局部变量 循环变量1, 整数型, , , 
.局部变量 新题库名称, 文本型, , , 
.局部变量 题库更名序号, 整数型, , , 

 ' 名词解释数量 ＝ 0
 ' 单项选择数量 ＝ 0
 ' 多项选择数量 ＝ 0
 ' 材料分析数量 ＝ 0
 ' 填空数量 ＝ 0
 ' 辨析数量 ＝ 0
 ' 简答数量 ＝ 0
 ' 论述数量 ＝ 0

赋值 (已做题数, 0)
赋值 (总时间, 0)
未知支持库函数_0 (求余数 (相减 (考试次数, 1), 4))
赋值 (初始题目序号, 0)
 ' 应考题数 ＝ 0
赋值 (.初始目录, 相加 (取运行目录 (), “\”, 考生姓名))
 ' ===============================================================打开数据库
.如果 (等于 (出题模式, 真))
    赋值 (出题窗口., “出题模式”)
    赋值 (时间分值比, 60)
    .如果 (等于 (题库, “”))
        .如果 (等于 (信息框 (“按 [确定] 打开题库，按 [取消] 创建题库。”, #确认取消钮, “指定题库”), #确认钮))
            .如果 (等于 (打开 (), 真))
                赋值 (题库, .文件名)
                .如果 (等于 (是否已打开 (题库), 假))
                    打开 (题库, , , , , , )
                .否则
                    置当前库 (题库)
                .如果结束
                输出调试文本 (相加 (“字段名：”, 取字段名 (2), #换行符, #科目名称))
                .如果 (不等于 (取字段名 (2), #科目名称))
                    信息框 (“此文件不是题库，即进入新建题库设置...”, 0, “提示”)
                    赋值 (题库, “”)
                    关闭 ()
                    .如果 (等于 (输入框 (“请输入新题库名称：”, “创建新题库”, “题库”, 新题库名称, ), 真))
                        赋值 (题库, 相加 (取运行目录 (), “\”, 考生姓名, “\”, 新题库名称, “.edb”))
                        赋值 (题库更名序号, 0)
                        .判断循环首 (等于 (文件是否存在 (题库), 真))
                            赋值 (题库更名序号, 相加 (题库更名序号, 1))
                            赋值 (题库, 相加 (取运行目录 (), “\”, 考生姓名, “\”, 新题库名称, 到文本 (题库更名序号), “.edb”))
                        .判断循环尾 ()
                         ' .如果 (等于 (文件是否存在 (相加 (取运行目录 (), “\”, 考生姓名, “\”, 新题库名称, “.edb”)), 假))
                             ' 题库 ＝ 取运行目录 () ＋ “\” ＋ 考生姓名 ＋ “\” ＋ 新题库名称 ＋ “.edb”
                        .否则
                             ' 题库 ＝ 取运行目录 () ＋ “\” ＋ 考生姓名 ＋ “\” ＋ 新题库名称 ＋ “1.edb”
                        .如果结束
                        
                        复制文件 (相加 (取运行目录 (), “\试题库.edb”), 题库)
                        赋值 (.禁止, 假)
                        赋值 (.禁止, 假)
                        赋值 (.禁止, 假)
                        赋值 (.禁止, 假)
                        赋值 (.输入方式, 0)
                        赋值 (加题状态, 真)
                        赋值 (.禁止, 真)
                        
                        
                    .否则
                        
                        销毁 ()
                    .如果结束
                    
                .否则
                    
                    
                .如果结束
                
            .否则
                .如果 (等于 (输入框 (“请输入新题库名称：”, “创建新题库”, “题库”, 新题库名称, ), 真))
                    赋值 (题库, 相加 (取运行目录 (), “\”, 考生姓名, “\”, 新题库名称, “.edb”))
                    复制文件 (相加 (取运行目录 (), “\试题库.edb”), 题库)
                    赋值 (.禁止, 假)
                    赋值 (.禁止, 假)
                    赋值 (.禁止, 假)
                    赋值 (.禁止, 假)
                    赋值 (.输入方式, 0)
                    
                    
                .否则
                    
                    销毁 ()
                    
                .如果结束
                
            .如果结束
            
        .否则
            .如果 (等于 (输入框 (“请输入新题库名称：”, “题库设置”, “题库”, 新题库名称, ), 真))
                赋值 (题库, 相加 (取运行目录 (), “\”, 考生姓名, “\”, 新题库名称, “.edb”))
                赋值 (题库更名序号, 0)
                .判断循环首 (等于 (文件是否存在 (题库), 真))
                    赋值 (题库更名序号, 相加 (题库更名序号, 1))
                    赋值 (题库, 相加 (取运行目录 (), “\”, 考生姓名, “\”, 新题库名称, 到文本 (题库更名序号), “.edb”))
                .判断循环尾 ()
                输出调试文本 (相加 (“题库更名为：”, 题库))
                复制文件 (相加 (取运行目录 (), “\试题库.edb”), 题库)
                赋值 (.禁止, 假)
                赋值 (.禁止, 假)
                赋值 (.禁止, 假)
                赋值 (.禁止, 假)
                赋值 (.输入方式, 0)
                赋值 (加题状态, 真)
                赋值 (.禁止, 真)
            .否则
                销毁 ()
            .如果结束
            
        .如果结束
        
        
        
    .否则
        
    .如果结束
    
.否则
    赋值 (出题窗口., “考试模式”)
    赋值 (.标题, “考试进行中...”)
    赋值 (.禁止, 真)
    赋值 (.禁止, 真)
    赋值 (.禁止, 真)
    赋值 (.禁止, 真)
    赋值 (切换模式按钮被单击, 假) ' 为了切换到考试不启动放大画面
    赋值 (.输入方式, 1)
     ' .如果 (等于 (文件是否存在 (相加 (取运行目录 (), “\”, 考生姓名, “\复考题库.edb”)), 假))
        
    .否则
        
    .如果结束
    赋值 (题库, 相加 (取运行目录 (), “\”, 考生姓名, “\复考题库.edb”))
    赋值 (.时钟周期, 1000)
.如果结束
 ' ===============================================================

.如果 (不等于 (题库, “”))
    .如果 (等于 (是否已打开 (题库), 假))
        打开 (题库, , , , , , )
    .否则
        置当前库 (题库)
    .如果结束
    赋值 (当前题库, 题库)
    
    .如果 (等于 (寻找文本 (题库, “复考题库”, , 假), -1))
        赋值 (题库路径, 取文本左边 (题库, 相减 (取文本长度 (题库), 4)))
        赋值 (初始打开题库, 题库)
        写注册项 (#现行用户, “software\exam\reg\tkname”, 题库)
    .否则
        
    .如果结束
     ' 信息框 (题库 ＋ “ 63456  ” ＋ 题库路径, 0, )
    
    输出调试文本 (相加 (“题库路径”, 题库路径))
    
    0.置文本 (相加 (“当前题库：”, 题库))
     ' ===============================================================
    到首记录 ()
    
    .计次循环首 (取记录数 (), )
        赋值 (总时间, 相加 (总时间, 读 (#时间)))
        跳过 ()
    .计次循环尾 ()
    
    
     ' 到首记录 ()
     ' .计次循环首 (取记录数 (), )
         ' .如果 (等于 (读 (#抽题标记), “错”))
             ' 应考题数 ＝ 应考题数 ＋ 1
            
        .否则
            
        .如果结束
         ' 跳过 ()
     ' .计次循环尾 ()
     ' ===============================================================
    到首记录 ()
    .计次循环首 (取记录数 (), 循环变量1)
        .如果 (等于 (读 (#题目类型), “名词解释”))
            赋值 (初始题目序号, 相加 (初始题目序号, 1))
            写 (#题目序号, 初始题目序号)
        .否则
            
        .如果结束
        跳过 ()
    .计次循环尾 ()
    
    到首记录 ()
    .计次循环首 (取记录数 (), 循环变量1)
        .如果 (等于 (读 (#题目类型), “单项选择”))
            赋值 (初始题目序号, 相加 (初始题目序号, 1))
            写 (#题目序号, 初始题目序号)
            
        .否则
            
        .如果结束
        跳过 ()
    .计次循环尾 ()
    
    到首记录 ()
    .计次循环首 (取记录数 (), 循环变量1)
        .如果 (等于 (读 (#题目类型), “多项选择”))
            赋值 (初始题目序号, 相加 (初始题目序号, 1))
            写 (#题目序号, 初始题目序号)
            
        .否则
            
        .如果结束
        跳过 ()
    .计次循环尾 ()
    
    到首记录 ()
    .计次循环首 (取记录数 (), 循环变量1)
        .如果 (等于 (读 (#题目类型), “材料分析”))
            赋值 (初始题目序号, 相加 (初始题目序号, 1))
            写 (#题目序号, 初始题目序号)
            
        .否则
            
        .如果结束
        跳过 ()
    .计次循环尾 ()
    
    到首记录 ()
    .计次循环首 (取记录数 (), 循环变量1)
        .如果 (等于 (读 (#题目类型), “填空”))
            赋值 (初始题目序号, 相加 (初始题目序号, 1))
            写 (#题目序号, 初始题目序号)
            
        .否则
            
        .如果结束
        跳过 ()
    .计次循环尾 ()
    
    到首记录 ()
    .计次循环首 (取记录数 (), 循环变量1)
        .如果 (等于 (读 (#题目类型), “辨析”))
            赋值 (初始题目序号, 相加 (初始题目序号, 1))
            写 (#题目序号, 初始题目序号)
            
        .否则
            
        .如果结束
        跳过 ()
    .计次循环尾 ()
    
    到首记录 ()
    .计次循环首 (取记录数 (), 循环变量1)
        .如果 (等于 (读 (#题目类型), “简答”))
            赋值 (初始题目序号, 相加 (初始题目序号, 1))
            写 (#题目序号, 初始题目序号)
            
        .否则
            
        .如果结束
        跳过 ()
    .计次循环尾 ()
    
    到首记录 ()
    .计次循环首 (取记录数 (), 循环变量1)
        .如果 (等于 (读 (#题目类型), “论述”))
            赋值 (初始题目序号, 相加 (初始题目序号, 1))
            写 (#题目序号, 初始题目序号)
            
        .否则
            
        .如果结束
        跳过 ()
    .计次循环尾 ()
    
     ' 关闭 ()
     ' ＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝
    排序 (题库, #题目序号, , , )
     ' 编辑 (, , )
    
    到首记录 ()
    .如果 (查找 (等于 (问题文本, 读 (#问题))))
        赋值 (题号, 读 (#题目序号))
    .否则
        
    .如果结束
    树型框题型目录初始化 ()
    赋值 (.内容, “1”)
     ' .如果 (等于 (是否已打开 (相加 (取运行目录 (), “\试题库.edb”)), 假))
         ' 打开 (取运行目录 () ＋ “\试题库.edb”, , , , , , )
    .否则
        
    .如果结束
    题型选择组件显示 (.内容)
    
    到首记录 ()
    赋值 (当前题号, 1)
    赋值 (树型框题号, 1)
    
    .如果 (等于 (出题窗口., “考试模式”))
        .变量循环首 (1, 取记录数 (), 1, 题库遍历循环变量)
            到文本 (当前题号).加入项目 (当前题号)
            .计次循环首 (取项目数 (), 树型框遍历循环变量)
                .如果 (等于 (相减 (树型框遍历循环变量, 1).取缩进层次 (), 1))
                    .如果 (并且 (等于 (读 (#题目类型), 相减 (树型框遍历循环变量, 1).取项目文本 ()), 等于 (读 (#抽题标记), “错”)))
                         ' 题目显示树型框.加入项目 (树型框遍历循环变量 － 1, “[” ＋ 到文本 (树型框题号) ＋ “] ” ＋ 取文本左边 (读 (#问题), 6) ＋ “...”, , , )
                        相减 (树型框遍历循环变量, 1).加入项目 (到文本 (读 (#题目序号)), , , )
                         ' 写 (#题目序号, 树型框题号)
                         ' 树型框题号 ＝ 树型框题号 ＋ 1
                    .否则
                        
                    .如果结束
                    相减 (树型框遍历循环变量, 1).扩展 ()
                    
                .否则
                    
                .如果结束
                
            .计次循环尾 ()
            赋值 (当前题号, 相加 (当前题号, 1))
            跳过 ()
        .变量循环尾 ()
        
    .否则
        .变量循环首 (1, 取记录数 (), 1, 题库遍历循环变量)
            到文本 (当前题号).加入项目 (当前题号)
            .计次循环首 (取项目数 (), 树型框遍历循环变量)
                .如果 (等于 (相减 (树型框遍历循环变量, 1).取缩进层次 (), 1))
                    .如果 (等于 (读 (#题目类型), 相减 (树型框遍历循环变量, 1).取项目文本 ()))
                         ' 题目显示树型框.加入项目 (树型框遍历循环变量 － 1, “[” ＋ 到文本 (树型框题号) ＋ “] ” ＋ 取文本左边 (读 (#问题), 6) ＋ “...”, , , )
                        相减 (树型框遍历循环变量, 1).加入项目 (到文本 (读 (#题目序号)), , , )
                         ' 写 (#题目序号, 树型框题号)
                         ' 树型框题号 ＝ 树型框题号 ＋ 1
                    .否则
                        
                    .如果结束
                    相减 (树型框遍历循环变量, 1).扩展 ()
                    
                .否则
                    
                .如果结束
                
            .计次循环尾 ()
            赋值 (当前题号, 相加 (当前题号, 1))
            跳过 ()
        .变量循环尾 ()
        
    .如果结束
    
    模式转换 ()
    .如果 (大于 (题号, 0))
        赋值 (.内容, 到文本 (题号))
    .否则
        赋值 (.内容, 到文本 (1))
    .如果结束
    _题号组合框_编辑内容被改变 ()
     ' ------------------------------------------
     ' .如果 (等于 (取项目数 (), 0))
         ' 答案提示分组框.顶边 ＝ 350
         ' 功能按钮分组框.顶边 ＝ 482
         ' 出题窗口.高度 ＝ 607
         ' 题目显示树型框.高度 ＝ 472
    .否则
        
    .如果结束
    
     ' ------------------------------------------
    
    .如果 (并且 (等于 (出题窗口., “考试模式”), 等于 (不可回头, 真)))
        赋值 (.禁止, 真)
        赋值 (.禁止, 真)
        赋值 (.禁止, 真)
    .否则
        .如果 (等于 (出题窗口., “出题模式”))
            赋值 (.禁止, 假)
            赋值 (.禁止, 假)
        .否则
            
        .如果结束
        
    .如果结束
    
    .如果 (大于或等于 (考试次数, 2))
        赋值 (.内容, “1”)
        _题号组合框_编辑内容被改变 ()
    .否则
        
    .如果结束
    .如果 (等于 (题库, “”))
        连续赋值 (真, .禁止, .禁止, .禁止, .禁止, .禁止)
        
    .否则
        
    .如果结束
    .如果真 (等于 (考试次数, 1))
        赋值 (.禁止, 真)
        赋值 (.禁止, 真)
    .如果真结束
    .如果真 (等于 (考试次数, 2))
        赋值 (.禁止, 真)
        赋值 (.禁止, 假)
    .如果真结束
    .如果真 (等于 (考试次数, 3))
        赋值 (.禁止, 假)
        赋值 (.禁止, 假)
    .如果真结束
    
    
    
.否则
     ' 保存按钮.禁止 ＝ 真
     ' 删除按钮.禁止 ＝ 真
    连续赋值 (真, .禁止, .禁止, .禁止, .禁止, .禁止)
.如果结束


.子程序 _答题编辑框_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

_答题编辑框_内容被改变 ()
 ' .如果 (等于 (.内容, “在此输入答案”))
     ' 答题编辑框.内容 ＝ “”
.否则
    
.如果结束
赋值 (.文本颜色, #黑色)


.子程序 _提示编辑框_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果 (等于 (.内容, “提示信息”))
    赋值 (.内容, “”)
.否则
    赋值 (.文本颜色, #黑色)
.如果结束



.子程序 _加题按钮_被单击, 空白型, , 

赋值 (加题状态, 真)
赋值 (.禁止, 真)
赋值 (.内容, “”)
清空内容 ()
.如果 (等于 (.内容, 当前题型))
    赋值 (.内容, 当前分值)
    _分值组合框_列表项被选择 ()
.否则
    
.如果结束


.子程序 _保存按钮_被单击, 空白型, , 
.局部变量 文件号1, 整数型, , , 

赋值 (简答论述分值累计, 0)
删除空选项 ()
赋值 (题号, 到整数 (.内容))
.如果 (并且 (大于或等于 (到整数 (.内容), 2), 不等于 (.内容, “填空”), 不等于 (.内容, “辨析”)))
    赋值 (.内容, 多项选择答案识别简化版 ())
.否则
    .如果 (小于 (到整数 (.内容), 2))
        .如果 (大于 (取文本长度 (.内容), 512))
            赋值 (文字题答案, .内容)
            创建目录 (题库路径)
            赋值 (文件号1, 打开文件 (相加 (题库路径, “\”, 取文本左边 (.内容, 10), “答案.txt”), #改写, ))
            写出文本 (文件号1, 文字题答案)
            关闭文件 (文件号1)
            
            
        .否则
            
        .如果结束
        
    .否则
        
    .如果结束
    
    
.如果结束
赋值 (问题文本, .内容)
 ' 该题存在 ＝ 假

.如果 (并且 (不等于 (.内容, “”), 不等于 (.内容, “”)))
    到首记录 ()
    查找 (等于 (到文本 (读 (#题目序号)), .内容))
     ' .计次循环首 (取记录数 (), )
         ' .如果 (等于 (.内容, 读 (#问题)))
             ' 该题存在 ＝ 真
             ' 跳出循环 ()
        .否则
            
        .如果结束
         ' 跳过 ()
     ' .计次循环尾 ()
    .如果 (等于 (加题状态, 假)) ' 修改
        赋值 (.禁止, 假)
        写 (#题目编号, 到整数 (.内容))
        写 (#科目名称, .内容)
        写 (#章目编号, 到整数 (.内容))
        写 (#节序编号, 到整数 (.内容))
        写 (#知识范围, .内容)
        写 (#题目类型, .内容)
        写 (#分值, 到整数 (.内容))
        写 (#时间, 到整数 (.内容))
        写 (#难度系数, .内容)
        写 (#问题, .内容)
        写 (#选择项一, .内容)
        写 (#选择项二, .内容)
        写 (#选择项三, .内容)
        写 (#选择项四, .内容)
        写 (#选择项五, .内容)
        写 (#选择项六, .内容)
        写 (#选择项七, .内容)
        写 (#选择项八, .内容)
        写 (#选择项九, .内容)
        写 (#选择项十, .内容)
        写 (#选项, 到整数 (.内容))
        
         ' .如果 (等于 (.内容, “多项选择”))
             ' ' 答题编辑框.内容 ＝ 字母数字排序 (删首尾空 (答题编辑框.内容))
             ' 答题编辑框.内容 ＝ 多项选择答案识别简化版 ()
            
        .否则
            
        .如果结束
        写 (#答案, 删首尾空 (.内容))
        .如果 (不等于 (.内容, “提示信息”))
            写 (#提示信息, .内容)
        .否则
            写 (#提示信息, “”)
        .如果结束
        
        .如果 (并且 (等于 (.内容, “材料分析”), 等于 (读 (#材料文本), “”)))
            .如果 (等于 (材料文本路径1, “”))
                
                .如果 (等于 (打开 (), 真))
                    复制文件 (.文件名, 相加 (题库路径, “\”, 取主文件名 (.文件名), “.txt”))
                    
                    写 (#材料文本, 相加 (取主文件名 (.文件名), “.txt”))
                .否则
                    
                .如果结束
                
            .否则
                写 (#材料文本, 材料文本路径1)
            .如果结束
            
        .否则
            
        .如果结束
        
        0.置文本 (“题目修改成功！”)
        赋值 (.标题, “保存成功”)
        延时 (1000)
        赋值 (.标题, “保存”)
         ' 信息框 (“修改成功”, 0, )
    .否则
         ' .如果 (等于 (信息框 (“添加新题 点 [确认]，修改原题 点 [取消]”, #确认取消钮, ), #确认钮))
            加空记录 ()
            写 (#题目编号, 到整数 (.内容))
            写 (#科目名称, .内容)
            写 (#章目编号, 到整数 (.内容))
            写 (#节序编号, 到整数 (.内容))
            写 (#知识范围, .内容)
            写 (#题目类型, .内容)
            写 (#分值, 到整数 (.内容))
            写 (#时间, 到整数 (.内容))
            写 (#难度系数, .内容)
            写 (#问题, .内容)
            写 (#选择项一, .内容)
            写 (#选择项二, .内容)
            写 (#选择项三, .内容)
            写 (#选择项四, .内容)
            写 (#选择项五, .内容)
            写 (#选择项六, .内容)
            写 (#选择项七, .内容)
            写 (#选择项八, .内容)
            写 (#选择项九, .内容)
            写 (#选择项十, .内容)
            
            写 (#选项, 到整数 (.内容))
            写 (#答案, 删首尾空 (.内容))
            
            .如果 (不等于 (.内容, “提示信息”))
                写 (#提示信息, .内容)
            .否则
                写 (#提示信息, “”)
            .如果结束
            
            
            .如果 (并且 (等于 (.内容, “材料分析”), 等于 (读 (#材料文本), “”)))
                .如果 (等于 (材料文本路径, “”))
                     ' 信息框 (材料文本路径, 0, )
                    .如果 (等于 (打开 (), 真))
                        复制文件 (.文件名, 相加 (题库路径, “\”, 取主文件名 (.文件名), “.txt”))
                        写 (#材料文本, 相加 (取主文件名 (.文件名), “.txt”))
                    .否则
                        
                    .如果结束
                    
                    
                .否则
                    写 (#材料文本, 材料文本路径)
                .如果结束
                
            .否则
                
            .如果结束
            
             ' 信息框 (“添加成功”, 0, )
            0.置文本 (“题目添加成功！”)
            赋值 (.标题, “保存成功”)
            延时 (1000)
            赋值 (.标题, “保存”)
            
             ' 题号组合框.内容 ＝ 到文本 (到整数 (题号组合框.内容) ＋ 1)
            _出题窗口_创建完毕 ()
             ' _加题按钮_被单击 ()
            
        .否则
             ' 写 (#题目编号, 到整数 (题号组合框.内容))
             ' 写 (#科目名称, 科目组合框.内容)
             ' 写 (#章目编号, 到整数 (章组合框.内容))
             ' 写 (#节序编号, 到整数 (节组合框.内容))
             ' 写 (#知识范围, 范围组合框.内容)
             ' 写 (#题目类型, 题型组合框.内容)
             ' 写 (#分值, 到整数 (分值组合框.内容))
             ' 写 (#时间, 到整数 (时间组合框.内容))
             ' 写 (#难度系数, 难度组合框.内容)
             ' 写 (#问题, 问题编辑框.内容)
             ' 写 (#选择项一, 备选答案一编辑框.内容)
             ' 写 (#选择项二, 备选答案二编辑框.内容)
             ' 写 (#选择项三, 备选答案三编辑框.内容)
             ' 写 (#选择项四, 备选答案四编辑框.内容)
             ' 写 (#选择项五, 备选答案五编辑框.内容)
             ' .如果 (不等于 (.内容, “在此输入答案”))
                 ' 写 (#答案, 答题编辑框.内容)
            .否则
                
            .如果结束
             ' .如果 (不等于 (.内容, “提示信息”))
                 ' 写 (#提示信息, 提示编辑框.内容)
            .否则
                 ' 写 (#提示信息, “”)
            .如果结束
             ' 信息框 (“修改成功”, 0, )
            
        .如果结束
        
    .如果结束
    赋值 (加题状态, 假)
    赋值 (.禁止, 假)
    
    
.否则
    赋值 (导入单题窗口., 假)
    信息框 (相加 (“您还没有提出问题或未设置标准答案。”, #换行符, “选择题答案请输入符合规定的大写字母。”), 0, “错误提示”)
    赋值 (导入单题窗口., 真)
     ' 状态条1.置文本 (0, “您还没有提出问题或未设置标准答案。选择题答案请输入符合规定的大写字母。”)
    赋值 (.内容, “”)
    获取焦点 ()
.如果结束


.子程序 题型选择组件显示, 空白型, , 
.参数 题目类型1, 文本型, , 


 ' 连续赋值 (假, A选择框.可视, B选择框.可视, C选择框.可视, D选择框.可视, E选择框.可视, A选择框.禁止, B选择框.禁止, C选择框.禁止, D选择框.禁止, E选择框.禁止, 备选答案1编辑框.可视, 备选答案2编辑框.可视, 备选答案3编辑框.可视, 备选答案4编辑框.可视, 备选答案5编辑框.可视, 答案A图片按钮.可视, 答案B图片按钮.可视, 答案C图片按钮.可视, 答案D图片按钮.可视, 答案E图片按钮.可视, 答题编辑框.可视, 提示编辑框.可视, 备选答案分组框.可视)

.如果 (等于 (题目类型1, “单项选择”))
     ' 连续赋值 (真, 问题编辑框.可视, A选择框.可视, B选择框.可视, C选择框.可视, D选择框.可视, 备选答案分组框.可视, 备选答案1编辑框.可视, 备选答案2编辑框.可视, 备选答案3编辑框.可视, 备选答案4编辑框.可视, 答案A图片按钮.可视, 答案B图片按钮.可视, 答案C图片按钮.可视, 答案D图片按钮.可视, 答题编辑框.可视, 提示编辑框.可视)
     ' 选项组合框.内容 ＝ “4”
    赋值 (.禁止, 假)
    
.否则
    .如果 (等于 (题目类型1, “多项选择”))
         ' 连续赋值 (真, 问题编辑框.可视, 备选答案分组框.可视, A选择框.可视, B选择框.可视, C选择框.可视, D选择框.可视, E选择框.可视, 备选答案1编辑框.可视, 备选答案2编辑框.可视, 备选答案3编辑框.可视, 备选答案4编辑框.可视, 备选答案5编辑框.可视, 答案A图片按钮.可视, 答案B图片按钮.可视, 答案C图片按钮.可视, 答案D图片按钮.可视, 答案E图片按钮.可视, 答题编辑框.可视, 提示编辑框.可视)
         ' 选项组合框.内容 ＝ “4”
        赋值 (.禁止, 假)
        
    .否则
        .如果 (等于 (题目类型1, “名词解释”))
             ' 连续赋值 (真, 问题编辑框.可视, 答题编辑框.可视, 提示编辑框.可视)
            赋值 (.内容, “0”)
            赋值 (.禁止, 真)
            
        .否则
            .如果 (等于 (题目类型1, “材料分析”))
                 ' 连续赋值 (真, 问题编辑框.可视, 备选答案分组框.可视, A选择框.可视, B选择框.可视, C选择框.可视, D选择框.可视, E选择框.可视, 备选答案1编辑框.可视, 备选答案2编辑框.可视, 备选答案3编辑框.可视, 备选答案4编辑框.可视, 备选答案5编辑框.可视, 答案A图片按钮.可视, 答案B图片按钮.可视, 答案C图片按钮.可视, 答案D图片按钮.可视, 答案E图片按钮.可视, 答题编辑框.可视, 提示编辑框.可视)
                 ' 选项组合框.内容 ＝ “3”
                赋值 (.禁止, 假)
                
            .否则
                .如果 (等于 (题目类型1, “填空”))
                     ' 连续赋值 (真, A选择框.禁止, B选择框.禁止, C选择框.禁止, D选择框.禁止, E选择框.禁止, F选择框.禁止, G选择框.禁止, H选择框.禁止, I选择框.禁止, J选择框.禁止)
                     ' ' 选项组合框.内容 ＝ “10”
                    赋值 (.禁止, 假)
                .否则
                     ' 连续赋值 (假, A选择框.禁止, B选择框.禁止, C选择框.禁止, D选择框.禁止, E选择框.禁止, F选择框.禁止, G选择框.禁止, H选择框.禁止, I选择框.禁止, J选择框.禁止)
                    .如果 (等于 (题目类型1, “辨析”))
                        赋值 (.内容, “2”)
                        赋值 (.禁止, 真)
                         ' 连续赋值 (真, 问题编辑框.可视, 备选答案分组框.可视, A选择框.可视, B选择框.可视, 备选答案1编辑框.可视, 备选答案2编辑框.可视, 答题编辑框.可视, 提示编辑框.可视)
                        赋值 (.内容, “正确”)
                        赋值 (.内容, “错误”)
                    .否则
                        .如果 (等于 (题目类型1, “简答”))
                             ' 连续赋值 (真, 问题编辑框.可视, 答题编辑框.可视, 提示编辑框.可视)
                            赋值 (.内容, “0”)
                            赋值 (.禁止, 真)
                            
                            
                        .否则
                            .如果 (等于 (题目类型1, “论述”))
                                 ' 连续赋值 (真, 问题编辑框.可视, 答题编辑框.可视, 提示编辑框.可视)
                                赋值 (.内容, “0”)
                                赋值 (.禁止, 真)
                            .否则
                                 ' .如果 (等于 (题目类型1, “”))
                                     ' 连续赋值 (真, 问题编辑框.可视, A选择框.可视, B选择框.可视, C选择框.可视, D选择框.可视, E选择框.可视, 备选答案1编辑框.可视, 备选答案2编辑框.可视, 备选答案3编辑框.可视, 备选答案4编辑框.可视, 备选答案5编辑框.可视, 答案A图片按钮.可视, 答案B图片按钮.可视, 答案C图片按钮.可视, 答案D图片按钮.可视, 答案E图片按钮.可视, 答题编辑框.可视, 提示编辑框.可视, 备选答案分组框.可视)
                                .否则
                                    
                                .如果结束
                                
                            .如果结束
                            
                        .如果结束
                        
                    .如果结束
                    
                .如果结束
                
            .如果结束
            
        .如果结束
        
    .如果结束
    
    
    
    
    
    
    
    
.如果结束
_选项组合框_编辑内容被改变 ()




.子程序 _题型组合框_列表项被选择, 空白型, , 
.局部变量 当前题号, 整数型, , , 
.局部变量 临时循环变量, 整数型, , , 

.如果 (等于 (加题状态, 假))
    赋值 (.禁止, 假)
    清空 ()
    到首记录 ()
    赋值 (当前题号, 1)
    .变量循环首 (1, 取记录数 (), 1, 临时循环变量)
        .如果 (等于 (读 (#题目类型), .内容))
            到文本 (读 (#题目序号)).加入项目 ()
            赋值 (当前题号, 相加 (当前题号, 1))
        .否则
            .如果 (等于 (.内容, “”))
                到文本 (读 (#题目序号)).加入项目 ()
                赋值 (当前题号, 相加 (当前题号, 1))
            .否则
                
            .如果结束
            
        .如果结束
        跳过 ()
    .变量循环尾 ()
    赋值 (.现行选中项, 0)
    _题号组合框_列表项被选择 ()
    题型选择组件显示 (.内容)
    .如果 (并且 (等于 (.内容, “材料分析”), 不等于 (.内容, “”)))
        .如果 (等于 (材料文本窗口被打开, 真))
            材料文本窗口.销毁 ()
        .否则
            
        .如果结束
        载入 (材料文本窗口, , 假)
        出题窗口.获取焦点 ()
    .否则
        .如果 (等于 (材料文本窗口被打开, 真))
            材料文本窗口.销毁 ()
        .否则
            
        .如果结束
        
    .如果结束
    
    .如果 (等于 (.内容, “”))
        _加题按钮_被单击 ()
    .否则
        
    .如果结束
     ' .计次循环首 (取项目数 (), 临时循环变量)
         ' .如果 (等于 (相减 (临时循环变量, 1).取项目文本 (), .内容))
             ' 题目显示树型框.现行选中项 ＝ 临时循环变量 － 1
        .否则
            
        .如果结束
        
    .计次循环尾 ()
    
.否则
    赋值 (.禁止, 真)
    _复制_被选择 ()
    清空内容 ()
    _粘贴按钮_被单击 ()
    赋值 (.禁止, 假)
.如果结束


.子程序 _题型组合框_编辑内容被改变, 空白型, , 
.局部变量 当前题号, 整数型, , , 
.局部变量 临时循环变量, 整数型, , , 


 ' 题号组合框.清空 ()
 ' 到首记录 ()
 ' 当前题号 ＝ 1
 ' .变量循环首 (1, 取记录数 (), 1, 临时循环变量)
     ' .如果 (等于 (读 (#题目类型), .内容))
         ' 题号组合框.加入项目 (到文本 (当前题号), 当前题号)
         ' 当前题号 ＝ 当前题号 ＋ 1
    .否则
         ' .如果 (等于 (.内容, “”))
             ' 题号组合框.加入项目 (到文本 (当前题号), 当前题号)
             ' 当前题号 ＝ 当前题号 ＋ 1
        .否则
            
        .如果结束
        
    .如果结束
     ' 跳过 ()
 ' .变量循环尾 ()
 ' 题型选择组件显示 (题型组合框.内容)


 ' 题型选择组件显示 (题型组合框.内容)
 ' ===============================================================================================

.子程序 _备选答案1编辑框_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 文件号, 整数型, , , 



.如果 (并且 (不等于 (取字节集长度 (临时图片A), 0), 等于 (临时图片A路径, .内容)))
    赋值 (.可视, 真)
    赋值 (.图片, 临时图片A)
.否则
    .如果 (等于 (文件是否存在 (.内容), 真))
        赋值 (.可视, 真)
        赋值 (文件号, 打开文件 (.内容, , ))
        赋值 (.图片, 读入字节集 (文件号, 取文件长度 (文件号)))
        关闭文件 (文件号)
        
        赋值 (临时图片A, .图片)
        赋值 (临时图片A路径, .内容)
        
    .否则
        赋值 (.可视, 假)
        赋值 (., 真)
        赋值 (., .宽度)
        赋值 (., 50)
        赋值 (., 相加 (.左边, .左边))
        赋值 (., 相加 (.顶边, .高度, .顶边))
        赋值 (., .内容)
        
        
    .如果结束
    
.如果结束
 ' .如果 (等于 (.可视, 真))
     ' 备选答案图片框.高度 ＝ 取整 (取图片高度 (备选答案一编辑框.内容) ÷ 取图片宽度 (备选答案一编辑框.内容) × 备选答案显示编辑框.宽度)
     ' .如果 (大于 (相加 (.顶边, .高度), 出题窗口.))
         ' 备选答案图片框.顶边 ＝ 出题窗口.高度 － 备选答案图片框.高度
    .否则
         ' 备选答案图片框.左边 ＝ 备选答案分组框.左边 ＋ 备选答案一编辑框.左边
         ' 备选答案图片框.顶边 ＝ 备选答案一编辑框.顶边 ＋ 备选答案一编辑框.高度 ＋ 备选答案分组框.顶边
        
    .如果结束
    
    
.否则
    
.如果结束
.如果 (等于 (.可视, 真))
    赋值 (.宽度, .宽度)
    赋值 (.高度, 取整 (相乘 (相除 (未知支持库函数_32 (.内容), 未知支持库函数_31 (.内容)), .宽度)))
    
    赋值 (.顶边, 相加 (.顶边, .高度, .顶边))
    赋值 (.左边, 相加 (.左边, .左边))
    .如果 (大于 (相加 (.顶边, .高度), 出题窗口.))
        赋值 (.高度, 相减 (相加 (相减 (出题窗口., 相加 (.顶边, .高度)), .高度), .顶边, .高度))
        赋值 (.宽度, 取整 (相乘 (相除 (未知支持库函数_31 (.内容), 未知支持库函数_32 (.内容)), .高度)))
         ' .如果 (大于 (.宽度, .宽度))
             ' 备选答案图片框.宽度 ＝ 备选答案一编辑框.宽度
             ' 备选答案图片框.高度 ＝ 取整 (取图片高度 (备选答案一编辑框.内容) ÷ 取图片宽度 (备选答案一编辑框.内容) × 备选答案图片框.宽度)
            
        .否则
            
        .如果结束
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束
 ' .如果 (等于 (出题窗口., “考试模式”))
     ' .如果 (不等于 (.内容, “填空”))
         ' A选择框.选中 ＝ 取反 (A选择框.选中)
         ' _A选择框_被单击 ()
    .否则
        
    .如果结束
    
.否则
    
.如果结束




.子程序 _备选答案1编辑框_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (., 假)
赋值 (.可视, 假)


.子程序 _备选答案2编辑框_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 文件号, 整数型, , , 


.如果 (并且 (不等于 (取字节集长度 (临时图片B), 0), 等于 (临时图片B路径, .内容)))
    赋值 (.可视, 真)
    赋值 (.图片, 临时图片B)
    
.否则
    .如果 (等于 (文件是否存在 (.内容), 真))
        赋值 (.可视, 真)
        赋值 (文件号, 打开文件 (.内容, , ))
        赋值 (.图片, 读入字节集 (文件号, 取文件长度 (文件号)))
        关闭文件 (文件号)
        
        赋值 (临时图片B, .图片)
        赋值 (临时图片B路径, .内容)
        
    .否则
        赋值 (.可视, 假)
        赋值 (., 真)
        赋值 (., .宽度)
        赋值 (., 50)
        赋值 (., 相加 (.左边, .左边))
        赋值 (., 相加 (.顶边, .高度, .顶边))
        赋值 (., .内容)
        
    .如果结束
    
.如果结束

 ' .如果 (等于 (.可视, 真))
     ' 备选答案图片框.高度 ＝ 取整 (取图片高度 (备选答案二编辑框.内容) ÷ 取图片宽度 (备选答案二编辑框.内容) × 备选答案显示编辑框.宽度)
     ' .如果 (大于 (相加 (.顶边, .高度), 出题窗口.))
         ' 备选答案图片框.顶边 ＝ 出题窗口.高度 － 备选答案图片框.高度
    .否则
         ' 备选答案图片框.左边 ＝ 备选答案分组框.左边 ＋ 备选答案二编辑框.左边
         ' 备选答案图片框.顶边 ＝ 备选答案二编辑框.顶边 ＋ 备选答案二编辑框.高度 ＋ 备选答案分组框.顶边
        
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (.可视, 真))
    赋值 (.宽度, .宽度)
    赋值 (.高度, 取整 (相乘 (相除 (未知支持库函数_32 (.内容), 未知支持库函数_31 (.内容)), .宽度)))
    
    赋值 (.宽度, .宽度)
    赋值 (.顶边, 相加 (.顶边, .高度, .顶边))
    赋值 (.左边, 相加 (.左边, .左边))
    .如果 (大于 (相加 (.顶边, .高度), 出题窗口.))
        赋值 (.高度, 相减 (相加 (相减 (出题窗口., 相加 (.顶边, .高度)), .高度), .顶边, .高度))
        赋值 (.宽度, 取整 (相乘 (相除 (未知支持库函数_31 (.内容), 未知支持库函数_32 (.内容)), .高度)))
         ' .如果 (大于 (.宽度, .宽度))
             ' 备选答案图片框.宽度 ＝ 备选答案二编辑框.宽度
             ' 备选答案图片框.高度 ＝ 取整 (取图片高度 (备选答案二编辑框.内容) ÷ 取图片宽度 (备选答案二编辑框.内容) × 备选答案图片框.宽度)
        .否则
            
        .如果结束
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束
 ' .如果 (等于 (出题窗口., “考试模式”))
     ' .如果 (不等于 (.内容, “填空”))
         ' B选择框.选中 ＝ 取反 (B选择框.选中)
         ' _B选择框_被单击 ()
    .否则
        
    .如果结束
    
.否则
    
.如果结束



.子程序 _备选答案2编辑框_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (., 假)
赋值 (.可视, 假)


.子程序 _备选答案3编辑框_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 文件号, 整数型, , , 


.如果 (并且 (不等于 (取字节集长度 (临时图片C), 0), 等于 (临时图片C路径, .内容)))
    赋值 (.可视, 真)
    赋值 (.图片, 临时图片C)
    
.否则
    .如果 (等于 (文件是否存在 (.内容), 真))
        赋值 (.可视, 真)
        赋值 (文件号, 打开文件 (.内容, , ))
        赋值 (.图片, 读入字节集 (文件号, 取文件长度 (文件号)))
        关闭文件 (文件号)
        
        赋值 (临时图片C, .图片)
        赋值 (临时图片C路径, .内容)
        
    .否则
        赋值 (.可视, 假)
        赋值 (., 真)
        赋值 (., .宽度)
        赋值 (., 50)
        赋值 (., 相加 (.左边, .左边))
        赋值 (., 相加 (.顶边, .高度, .顶边))
        赋值 (., .内容)
        
    .如果结束
    
.如果结束

 ' .如果 (等于 (.可视, 真))
     ' 备选答案图片框.高度 ＝ 取整 (取图片高度 (备选答案三编辑框.内容) ÷ 取图片宽度 (备选答案三编辑框.内容) × 备选答案显示编辑框.宽度)
     ' .如果 (大于 (相加 (.顶边, .高度), 出题窗口.))
         ' 备选答案图片框.顶边 ＝ 出题窗口.高度 － 备选答案图片框.高度
    .否则
         ' 备选答案图片框.左边 ＝ 备选答案分组框.左边 ＋ 备选答案三编辑框.左边
         ' 备选答案图片框.顶边 ＝ 备选答案三编辑框.顶边 ＋ 备选答案三编辑框.高度 ＋ 备选答案分组框.顶边
    .如果结束
    
    
.否则
    
.如果结束
.如果 (等于 (.可视, 真))
    赋值 (.宽度, .宽度)
    赋值 (.高度, 取整 (相乘 (相除 (未知支持库函数_32 (.内容), 未知支持库函数_31 (.内容)), .宽度)))
    
    赋值 (.顶边, 相加 (.顶边, .高度, .顶边))
    赋值 (.左边, 相加 (.左边, .左边))
    .如果 (大于 (相加 (.顶边, .高度), 出题窗口.))
        赋值 (.高度, 相减 (相加 (相减 (出题窗口., 相加 (.顶边, .高度)), .高度), .顶边, .高度))
        赋值 (.宽度, 取整 (相乘 (相除 (未知支持库函数_31 (.内容), 未知支持库函数_32 (.内容)), .高度)))
         ' .如果 (大于 (.宽度, .宽度))
             ' 备选答案图片框.宽度 ＝ 备选答案三编辑框.宽度
             ' 备选答案图片框.高度 ＝ 取整 (取图片高度 (备选答案三编辑框.内容) ÷ 取图片宽度 (备选答案三编辑框.内容) × 备选答案图片框.宽度)
        .否则
            
        .如果结束
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束
 ' .如果 (等于 (出题窗口., “考试模式”))
     ' .如果 (不等于 (.内容, “填空”))
         ' C选择框.选中 ＝ 取反 (C选择框.选中)
         ' _C选择框_被单击 ()
    .否则
        
    .如果结束
    
.否则
    
.如果结束



.子程序 _备选答案3编辑框_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (., 假)

赋值 (.可视, 假)


.子程序 _备选答案4编辑框_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 文件号, 整数型, , , 


.如果 (并且 (不等于 (取字节集长度 (临时图片D), 0), 等于 (临时图片D路径, .内容)))
    赋值 (.可视, 真)
    赋值 (.图片, 临时图片D)
    
.否则
    .如果 (等于 (文件是否存在 (.内容), 真))
        赋值 (.可视, 真)
        赋值 (文件号, 打开文件 (.内容, , ))
        赋值 (.图片, 读入字节集 (文件号, 取文件长度 (文件号)))
        关闭文件 (文件号)
        
        赋值 (临时图片D, .图片)
        赋值 (临时图片D路径, .内容)
    .否则
        赋值 (.可视, 假)
        赋值 (., 真)
        赋值 (., .宽度)
        赋值 (., 50)
        赋值 (., 相加 (.左边, .左边))
        赋值 (., 相加 (.顶边, .高度, .顶边))
        赋值 (., .内容)
        
    .如果结束
    
    
.如果结束
 ' .如果 (等于 (.可视, 真))
     ' 备选答案图片框.高度 ＝ 取整 (取图片高度 (备选答案四编辑框.内容) ÷ 取图片宽度 (备选答案四编辑框.内容) × 备选答案显示编辑框.宽度)
     ' .如果 (大于 (相加 (.顶边, .高度), 出题窗口.))
         ' 备选答案图片框.顶边 ＝ 出题窗口.高度 － 备选答案图片框.高度
    .否则
         ' 备选答案图片框.左边 ＝ 备选答案分组框.左边 ＋ 备选答案四编辑框.左边
         ' 备选答案图片框.顶边 ＝ 备选答案四编辑框.顶边 ＋ 备选答案四编辑框.高度 ＋ 备选答案分组框.顶边
        
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (.可视, 真))
    赋值 (.宽度, .宽度)
    赋值 (.高度, 取整 (相乘 (相除 (未知支持库函数_32 (.内容), 未知支持库函数_31 (.内容)), .宽度)))
    
    赋值 (.顶边, 相加 (.顶边, .高度, .顶边))
    赋值 (.左边, 相加 (.左边, .左边))
    .如果 (大于 (相加 (.顶边, .高度), 出题窗口.))
        赋值 (.高度, 相减 (相加 (相减 (出题窗口., 相加 (.顶边, .高度)), .高度), .顶边, .高度))
        赋值 (.宽度, 取整 (相乘 (相除 (未知支持库函数_31 (.内容), 未知支持库函数_32 (.内容)), .高度)))
         ' .如果 (大于 (.宽度, .宽度))
             ' 备选答案图片框.宽度 ＝ 备选答案四编辑框.宽度
             ' 备选答案图片框.高度 ＝ 取整 (取图片高度 (备选答案四编辑框.内容) ÷ 取图片宽度 (备选答案四编辑框.内容) × 备选答案图片框.宽度)
        .否则
            
        .如果结束
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束
 ' .如果 (等于 (出题窗口., “考试模式”))
     ' .如果 (不等于 (.内容, “填空”))
         ' D选择框.选中 ＝ 取反 (D选择框.选中)
         ' _D选择框_被单击 ()
    .否则
        
    .如果结束
    
.否则
    
.如果结束



.子程序 _备选答案4编辑框_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (., 假)
赋值 (.可视, 假)



.子程序 _备选答案5编辑框_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 文件号, 整数型, , , 


.如果 (并且 (不等于 (取字节集长度 (临时图片E), 0), 等于 (临时图片E路径, .内容)))
    赋值 (.可视, 真)
    赋值 (.图片, 临时图片E)
.否则
    .如果 (等于 (文件是否存在 (.内容), 真))
        赋值 (.可视, 真)
        赋值 (文件号, 打开文件 (.内容, , ))
        赋值 (.图片, 读入字节集 (文件号, 取文件长度 (文件号)))
        关闭文件 (文件号)
        赋值 (临时图片E, .图片)
        赋值 (临时图片E路径, .内容)
    .否则
        赋值 (.可视, 假)
        赋值 (., 真)
        赋值 (., .宽度)
        赋值 (., 50)
        赋值 (., 相加 (.左边, .左边))
        赋值 (., 相加 (.顶边, .高度, .顶边))
        赋值 (., .内容)
        
    .如果结束
    
    
.如果结束

.如果 (等于 (.可视, 真))
    赋值 (.宽度, .宽度)
    赋值 (.高度, 取整 (相乘 (相除 (未知支持库函数_32 (.内容), 未知支持库函数_31 (.内容)), .宽度)))
    
    赋值 (.顶边, 相加 (.顶边, .高度, .顶边))
    赋值 (.左边, 相加 (.左边, .左边))
    .如果 (大于 (相加 (.顶边, .高度), 出题窗口.))
        赋值 (.高度, 相减 (相加 (相减 (出题窗口., 相加 (.顶边, .高度)), .高度), .顶边, .高度))
        赋值 (.宽度, 取整 (相乘 (相除 (未知支持库函数_31 (.内容), 未知支持库函数_32 (.内容)), .高度)))
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束

 ' .如果 (等于 (出题窗口., “考试模式”))
    
     ' .如果 (不等于 (.内容, “填空”))
         ' E选择框.选中 ＝ 取反 (E选择框.选中)
         ' _E选择框_被单击 ()
    .否则
        
    .如果结束
    
.否则
    
.如果结束


.子程序 _备选答案6编辑框_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 文件号, 整数型, , , 


.如果 (并且 (不等于 (取字节集长度 (临时图片F), 0), 等于 (临时图片F路径, .内容)))
    
    赋值 (.可视, 真)
    赋值 (.图片, 临时图片F)
.否则
    .如果 (等于 (文件是否存在 (.内容), 真))
        赋值 (.可视, 真)
        赋值 (文件号, 打开文件 (.内容, , ))
        赋值 (.图片, 读入字节集 (文件号, 取文件长度 (文件号)))
        关闭文件 (文件号)
        赋值 (临时图片F, .图片)
        赋值 (临时图片F路径, .内容)
    .否则
        赋值 (.可视, 假)
        赋值 (., 真)
        赋值 (., .宽度)
        赋值 (., 50)
        赋值 (., 相加 (.左边, .左边))
        赋值 (., 相加 (.顶边, .高度, .顶边))
        赋值 (., .内容)
        
    .如果结束
    
    
.如果结束

.如果 (等于 (.可视, 真))
    赋值 (.宽度, .宽度)
    赋值 (.高度, 取整 (相乘 (相除 (未知支持库函数_32 (.内容), 未知支持库函数_31 (.内容)), .宽度)))
    
    赋值 (.顶边, 相加 (.顶边, .高度, .顶边))
    赋值 (.左边, 相加 (.左边, .左边))
    .如果 (大于 (相加 (.顶边, .高度), 出题窗口.))
        赋值 (.高度, 相减 (相加 (相减 (出题窗口., 相加 (.顶边, .高度)), .高度), .顶边, .高度))
        赋值 (.宽度, 取整 (相乘 (相除 (未知支持库函数_31 (.内容), 未知支持库函数_32 (.内容)), .高度)))
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束
 ' .如果 (等于 (出题窗口., “考试模式”))
     ' .如果 (不等于 (.内容, “填空”))
         ' F选择框.选中 ＝ 取反 (F选择框.选中)
         ' _F选择框_被单击 ()
    .否则
        
    .如果结束
    
.否则
    
.如果结束


.子程序 _备选答案7编辑框_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 文件号, 整数型, , , 


.如果 (并且 (不等于 (取字节集长度 (临时图片G), 0), 等于 (临时图片G路径, .内容)))
    
    赋值 (.可视, 真)
    赋值 (.图片, 临时图片G)
.否则
    .如果 (等于 (文件是否存在 (.内容), 真))
        赋值 (.可视, 真)
        赋值 (文件号, 打开文件 (.内容, , ))
        赋值 (.图片, 读入字节集 (文件号, 取文件长度 (文件号)))
        关闭文件 (文件号)
        赋值 (临时图片G, .图片)
        赋值 (临时图片G路径, .内容)
    .否则
        赋值 (.可视, 假)
        赋值 (., 真)
        赋值 (., .宽度)
        赋值 (., 50)
        赋值 (., 相加 (.左边, .左边))
        赋值 (., 相加 (.顶边, .高度, .顶边))
        赋值 (., .内容)
        
    .如果结束
    
    
.如果结束

.如果 (等于 (.可视, 真))
    赋值 (.宽度, .宽度)
    赋值 (.高度, 取整 (相乘 (相除 (未知支持库函数_32 (.内容), 未知支持库函数_31 (.内容)), .宽度)))
    
    赋值 (.顶边, 相加 (.顶边, .高度, .顶边))
    赋值 (.左边, 相加 (.左边, .左边))
    .如果 (大于 (相加 (.顶边, .高度), 出题窗口.))
        赋值 (.高度, 相减 (相加 (相减 (出题窗口., 相加 (.顶边, .高度)), .高度), .顶边, .高度))
        赋值 (.宽度, 取整 (相乘 (相除 (未知支持库函数_31 (.内容), 未知支持库函数_32 (.内容)), .高度)))
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束
 ' .如果 (等于 (出题窗口., “考试模式”))
     ' .如果 (不等于 (.内容, “填空”))
         ' G选择框.选中 ＝ 取反 (G选择框.选中)
         ' _G选择框_被单击 ()
    .否则
        
    .如果结束
    
.否则
    
.如果结束


.子程序 _备选答案8编辑框_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 文件号, 整数型, , , 


.如果 (并且 (不等于 (取字节集长度 (临时图片H), 0), 等于 (临时图片H路径, .内容)))
    
    赋值 (.可视, 真)
    赋值 (.图片, 临时图片H)
.否则
    .如果 (等于 (文件是否存在 (.内容), 真))
        赋值 (.可视, 真)
        赋值 (文件号, 打开文件 (.内容, , ))
        赋值 (.图片, 读入字节集 (文件号, 取文件长度 (文件号)))
        关闭文件 (文件号)
        赋值 (临时图片H, .图片)
        赋值 (临时图片H路径, .内容)
    .否则
        赋值 (.可视, 假)
        赋值 (., 真)
        赋值 (., .宽度)
        赋值 (., 50)
        赋值 (., 相加 (.左边, .左边))
        赋值 (., 相加 (.顶边, .高度, .顶边))
        赋值 (., .内容)
        
    .如果结束
    
    
.如果结束

.如果 (等于 (.可视, 真))
    赋值 (.宽度, .宽度)
    赋值 (.高度, 取整 (相乘 (相除 (未知支持库函数_32 (.内容), 未知支持库函数_31 (.内容)), .宽度)))
    
    赋值 (.顶边, 相加 (.顶边, .高度, .顶边))
    赋值 (.左边, 相加 (.左边, .左边))
    .如果 (大于 (相加 (.顶边, .高度), 出题窗口.))
        赋值 (.高度, 相减 (相加 (相减 (出题窗口., 相加 (.顶边, .高度)), .高度), .顶边, .高度))
        赋值 (.宽度, 取整 (相乘 (相除 (未知支持库函数_31 (.内容), 未知支持库函数_32 (.内容)), .高度)))
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束
 ' .如果 (等于 (出题窗口., “考试模式”))
    
     ' .如果 (不等于 (.内容, “填空”))
         ' H选择框.选中 ＝ 取反 (H选择框.选中)
         ' _H选择框_被单击 ()
    .否则
        
    .如果结束
    
.否则
    
.如果结束


.子程序 _备选答案9编辑框_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 文件号, 整数型, , , 


.如果 (并且 (不等于 (取字节集长度 (临时图片I), 0), 等于 (临时图片I路径, .内容)))
    
    赋值 (.可视, 真)
    赋值 (.图片, 临时图片I)
.否则
    .如果 (等于 (文件是否存在 (.内容), 真))
        赋值 (.可视, 真)
        赋值 (文件号, 打开文件 (.内容, , ))
        赋值 (.图片, 读入字节集 (文件号, 取文件长度 (文件号)))
        关闭文件 (文件号)
        赋值 (临时图片I, .图片)
        赋值 (临时图片I路径, .内容)
    .否则
        赋值 (.可视, 假)
        赋值 (., 真)
        赋值 (., .宽度)
        赋值 (., 50)
        赋值 (., 相加 (.左边, .左边))
        赋值 (., 相加 (.顶边, .高度, .顶边))
        赋值 (., .内容)
        
    .如果结束
    
    
.如果结束

.如果 (等于 (.可视, 真))
    赋值 (.宽度, .宽度)
    赋值 (.高度, 取整 (相乘 (相除 (未知支持库函数_32 (.内容), 未知支持库函数_31 (.内容)), .宽度)))
    
    赋值 (.顶边, 相加 (.顶边, .高度, .顶边))
    赋值 (.左边, 相加 (.左边, .左边))
    .如果 (大于 (相加 (.顶边, .高度), 出题窗口.))
        赋值 (.高度, 相减 (相加 (相减 (出题窗口., 相加 (.顶边, .高度)), .高度), .顶边, .高度))
        赋值 (.宽度, 取整 (相乘 (相除 (未知支持库函数_31 (.内容), 未知支持库函数_32 (.内容)), .高度)))
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束

 ' .如果 (等于 (出题窗口., “考试模式”))
    
     ' .如果 (不等于 (.内容, “填空”))
         ' I选择框.选中 ＝ 取反 (I选择框.选中)
         ' _I选择框_被单击 ()
    .否则
        
    .如果结束
    
.否则
    
.如果结束


.子程序 _备选答案10编辑框_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 文件号, 整数型, , , 


.如果 (并且 (不等于 (取字节集长度 (临时图片J), 0), 等于 (临时图片J路径, .内容)))
    
    赋值 (.可视, 真)
    赋值 (.图片, 临时图片J)
.否则
    .如果 (等于 (文件是否存在 (.内容), 真))
        赋值 (.可视, 真)
        赋值 (文件号, 打开文件 (.内容, , ))
        赋值 (.图片, 读入字节集 (文件号, 取文件长度 (文件号)))
        关闭文件 (文件号)
        赋值 (临时图片J, .图片)
        赋值 (临时图片J路径, .内容)
    .否则
        赋值 (.可视, 假)
        赋值 (., 真)
        赋值 (., .宽度)
        赋值 (., 50)
        赋值 (., 相加 (.左边, .左边))
        赋值 (., 相加 (.顶边, .高度, .顶边))
        赋值 (., .内容)
        
    .如果结束
    
    
.如果结束

.如果 (等于 (.可视, 真))
    赋值 (.宽度, .宽度)
    赋值 (.高度, 取整 (相乘 (相除 (未知支持库函数_32 (.内容), 未知支持库函数_31 (.内容)), .宽度)))
    
    赋值 (.顶边, 相加 (.顶边, .高度, .顶边))
    赋值 (.左边, 相加 (.左边, .左边))
    .如果 (大于 (相加 (.顶边, .高度), 出题窗口.))
        赋值 (.高度, 相减 (相加 (相减 (出题窗口., 相加 (.顶边, .高度)), .高度), .顶边, .高度))
        赋值 (.宽度, 取整 (相乘 (相除 (未知支持库函数_31 (.内容), 未知支持库函数_32 (.内容)), .高度)))
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束

 ' .如果 (等于 (出题窗口., “考试模式”))
     ' .如果 (不等于 (.内容, “填空”))
         ' J选择框.选中 ＝ 取反 (J选择框.选中)
         ' _J选择框_被单击 ()
    .否则
        
    .如果结束
    
.否则
    
.如果结束


.子程序 _备选答案5编辑框_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (., 假)
赋值 (.可视, 假)

 ' =====================================================================================================图片操作

.子程序 _备选答案6编辑框_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (., 假)
赋值 (.可视, 假)

.子程序 _备选答案7编辑框_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (., 假)
赋值 (.可视, 假)

.子程序 _备选答案8编辑框_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (., 假)
赋值 (.可视, 假)

.子程序 _备选答案9编辑框_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (., 假)
赋值 (.可视, 假)

.子程序 _备选答案10编辑框_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (., 假)
赋值 (.可视, 假)

.子程序 _答案A图片按钮_被单击, 空白型, , 
.局部变量 图片文件号, 整数型, , , 
.局部变量 纯文件名, 文本型, , , 

.如果 (等于 (打开 (), 真))
    赋值 (纯文件名, 取文本右边 (.文件名, 相减 (取文本长度 (.文件名), 倒找文本 (.文件名, “\”, , 假))))
    
    .如果 (等于 (.文件名, 相加 (题库路径, “\”, 纯文件名)))
        赋值 (.内容, 纯文件名)
    .否则
        .如果 (等于 (信息框 (“为方便题库备份，强烈建议复制该文件到题库文件夹。要复制吗？”, #确认取消钮, “复制文件提示”), #确认钮))
            创建目录 (题库路径)
            .如果 (等于 (文件是否存在 (相加 (题库路径, “\”, 纯文件名)), 假))
                .如果 (复制文件 (.文件名, 相加 (题库路径, “\”, 纯文件名)))
                    赋值 (.内容, 纯文件名)
                    
                .否则
                    信息框 (“复制文件失败！只能加为一般路径。”, 0, )
                    赋值 (.内容, .文件名)
                .如果结束
                
            .否则
                .如果 (等于 (信息框 (“该文件已存在,您要覆盖吗？”, #确认取消钮, “文件已存在”), #确认钮))
                    .如果 (复制文件 (.文件名, 相加 (题库路径, “\”, 纯文件名)))
                        赋值 (.内容, 纯文件名)
                        
                    .否则
                        输入框 (相加 (“源文件：”, .文件名, #换行符, “目标文件：”, 题库路径, “\”, 纯文件名), “重命名文件”, 纯文件名, 纯文件名, )
                        .如果 (复制文件 (.文件名, 相加 (题库路径, “\”, 纯文件名)))
                            赋值 (.内容, 纯文件名)
                            
                        .否则
                            信息框 (“复制文件失败！只能加为一般路径。”, 0, )
                            赋值 (.内容, .文件名)
                        .如果结束
                        
                    .如果结束
                    
                    
                .否则
                    输入框 (相加 (“源文件：”, .文件名, #换行符, “目标文件：”, 题库路径, “\”, 纯文件名), “重命名文件”, 纯文件名, 纯文件名, )
                    .如果 (复制文件 (.文件名, 相加 (题库路径, “\”, 纯文件名)))
                        赋值 (.内容, 纯文件名)
                        
                    .否则
                        信息框 (“复制文件失败！只能加为一般路径。”, 0, )
                        赋值 (.内容, .文件名)
                    .如果结束
                    
                .如果结束
                
            .如果结束
            
            
        .否则
            赋值 (.内容, .文件名)
        .如果结束
        
    .如果结束
    
    
    赋值 (图片文件号, 打开文件 (相加 (题库路径, “\”, 纯文件名), , ))
    赋值 (.图片, 读入字节集 (图片文件号, 取文件长度 (图片文件号)))
    赋值 (临时图片A, .图片)
    关闭文件 (图片文件号)
.否则
    
.如果结束



.子程序 _答案B图片按钮_被单击, 空白型, , 
.局部变量 图片文件号, 整数型, , , 
.局部变量 纯文件名, 文本型, , , 

.如果 (等于 (打开 (), 真))
    赋值 (纯文件名, 取文本右边 (.文件名, 相减 (取文本长度 (.文件名), 倒找文本 (.文件名, “\”, , 假))))
    
    .如果 (等于 (.文件名, 相加 (题库路径, “\”, 纯文件名)))
        赋值 (.内容, 纯文件名)
    .否则
        .如果 (等于 (信息框 (“为方便题库备份，强烈建议复制该文件到题库文件夹。要复制吗？”, #确认取消钮, “复制文件提示”), #确认钮))
            创建目录 (题库路径)
            .如果 (等于 (文件是否存在 (相加 (题库路径, “\”, 纯文件名)), 假))
                .如果 (复制文件 (.文件名, 相加 (题库路径, “\”, 纯文件名)))
                    赋值 (.内容, 纯文件名)
                    
                .否则
                    信息框 (“复制文件失败！只能加为一般路径。”, 0, )
                    赋值 (.内容, .文件名)
                .如果结束
                
            .否则
                .如果 (等于 (信息框 (“该文件已存在,您要覆盖吗？”, #确认取消钮, “文件已存在”), #确认钮))
                    .如果 (复制文件 (.文件名, 相加 (题库路径, “\”, 纯文件名)))
                        赋值 (.内容, 纯文件名)
                        
                    .否则
                        输入框 (相加 (“源文件：”, .文件名, #换行符, “目标文件：”, 题库路径, “\”, 纯文件名), “重命名文件”, 纯文件名, 纯文件名, )
                        .如果 (复制文件 (.文件名, 相加 (题库路径, “\”, 纯文件名)))
                            赋值 (.内容, 纯文件名)
                            
                        .否则
                            信息框 (“复制文件失败！只能加为一般路径。”, 0, )
                            赋值 (.内容, .文件名)
                        .如果结束
                        
                    .如果结束
                    
                    
                .否则
                    输入框 (相加 (“源文件：”, .文件名, #换行符, “目标文件：”, 题库路径, “\”, 纯文件名), “重命名文件”, 纯文件名, 纯文件名, )
                    .如果 (复制文件 (.文件名, 相加 (题库路径, “\”, 纯文件名)))
                        赋值 (.内容, 纯文件名)
                        
                    .否则
                        信息框 (“复制文件失败！只能加为一般路径。”, 0, )
                        赋值 (.内容, .文件名)
                    .如果结束
                    
                .如果结束
                
            .如果结束
            
            
        .否则
            赋值 (.内容, .文件名)
        .如果结束
        
    .如果结束
    
    
    赋值 (图片文件号, 打开文件 (相加 (题库路径, “\”, 纯文件名), , ))
    
    赋值 (.图片, 读入字节集 (图片文件号, 取文件长度 (图片文件号)))
    关闭文件 (图片文件号)
    赋值 (临时图片B, .图片)
.否则
    
.如果结束


.子程序 _答案C图片按钮_被单击, 空白型, , 
.局部变量 图片文件号, 整数型, , , 
.局部变量 纯文件名, 文本型, , , 

.如果 (等于 (打开 (), 真))
    赋值 (纯文件名, 取文本右边 (.文件名, 相减 (取文本长度 (.文件名), 倒找文本 (.文件名, “\”, , 假))))
    
    .如果 (等于 (.文件名, 相加 (题库路径, “\”, 纯文件名)))
        赋值 (.内容, 纯文件名)
    .否则
        .如果 (等于 (信息框 (“为方便题库备份，强烈建议复制该文件到题库文件夹。要复制吗？”, #确认取消钮, “复制文件提示”), #确认钮))
            创建目录 (题库路径)
            .如果 (等于 (文件是否存在 (相加 (题库路径, “\”, 纯文件名)), 假))
                .如果 (复制文件 (.文件名, 相加 (题库路径, “\”, 纯文件名)))
                    赋值 (.内容, 纯文件名)
                    
                .否则
                    信息框 (“复制文件失败！只能加为一般路径。”, 0, )
                    赋值 (.内容, .文件名)
                .如果结束
                
            .否则
                .如果 (等于 (信息框 (“该文件已存在,您要覆盖吗？”, #确认取消钮, “文件已存在”), #确认钮))
                    .如果 (复制文件 (.文件名, 相加 (题库路径, “\”, 纯文件名)))
                        赋值 (.内容, 纯文件名)
                        
                    .否则
                        输入框 (相加 (“源文件：”, .文件名, #换行符, “目标文件：”, 题库路径, “\”, 纯文件名), “重命名文件”, 纯文件名, 纯文件名, )
                        .如果 (复制文件 (.文件名, 相加 (题库路径, “\”, 纯文件名)))
                            赋值 (.内容, 纯文件名)
                            
                        .否则
                            信息框 (“复制文件失败！只能加为一般路径。”, 0, )
                            赋值 (.内容, .文件名)
                        .如果结束
                        
                    .如果结束
                    
                    
                .否则
                    输入框 (相加 (“源文件：”, .文件名, #换行符, “目标文件：”, 题库路径, “\”, 纯文件名), “重命名文件”, 纯文件名, 纯文件名, )
                    .如果 (复制文件 (.文件名, 相加 (题库路径, “\”, 纯文件名)))
                        赋值 (.内容, 纯文件名)
                        
                    .否则
                        信息框 (“复制文件失败！只能加为一般路径。”, 0, )
                        赋值 (.内容, .文件名)
                    .如果结束
                    
                .如果结束
                
            .如果结束
            
            
        .否则
            赋值 (.内容, .文件名)
        .如果结束
        
    .如果结束
    
    
    赋值 (图片文件号, 打开文件 (相加 (题库路径, “\”, 纯文件名), , ))
    
    赋值 (.图片, 读入字节集 (图片文件号, 取文件长度 (图片文件号)))
    关闭文件 (图片文件号)
    赋值 (临时图片C, .图片)
.否则
    
.如果结束


.子程序 _答案D图片按钮_被单击, 空白型, , 
.局部变量 图片文件号, 整数型, , , 
.局部变量 纯文件名, 文本型, , , 

.如果 (等于 (打开 (), 真))
    赋值 (纯文件名, 取文本右边 (.文件名, 相减 (取文本长度 (.文件名), 倒找文本 (.文件名, “\”, , 假))))
    
    .如果 (等于 (.文件名, 相加 (题库路径, “\”, 纯文件名)))
        赋值 (.内容, 纯文件名)
    .否则
        .如果 (等于 (信息框 (“为方便题库备份，强烈建议复制该文件到题库文件夹。要复制吗？”, #确认取消钮, “复制文件提示”), #确认钮))
            创建目录 (题库路径)
            .如果 (等于 (文件是否存在 (相加 (题库路径, “\”, 纯文件名)), 假))
                .如果 (复制文件 (.文件名, 相加 (题库路径, “\”, 纯文件名)))
                    赋值 (.内容, 纯文件名)
                    
                .否则
                    信息框 (“复制文件失败！只能加为一般路径。”, 0, )
                    赋值 (.内容, .文件名)
                .如果结束
                
            .否则
                .如果 (等于 (信息框 (“该文件已存在,您要覆盖吗？”, #确认取消钮, “文件已存在”), #确认钮))
                    .如果 (复制文件 (.文件名, 相加 (题库路径, “\”, 纯文件名)))
                        赋值 (.内容, 纯文件名)
                        
                    .否则
                        输入框 (相加 (“源文件：”, .文件名, #换行符, “目标文件：”, 题库路径, “\”, 纯文件名), “重命名文件”, 纯文件名, 纯文件名, )
                        .如果 (复制文件 (.文件名, 相加 (题库路径, “\”, 纯文件名)))
                            赋值 (.内容, 纯文件名)
                            
                        .否则
                            信息框 (“复制文件失败！只能加为一般路径。”, 0, )
                            赋值 (.内容, .文件名)
                        .如果结束
                        
                    .如果结束
                    
                    
                .否则
                    输入框 (相加 (“源文件：”, .文件名, #换行符, “目标文件：”, 题库路径, “\”, 纯文件名), “重命名文件”, 纯文件名, 纯文件名, )
                    .如果 (复制文件 (.文件名, 相加 (题库路径, “\”, 纯文件名)))
                        赋值 (.内容, 纯文件名)
                        
                    .否则
                        信息框 (“复制文件失败！只能加为一般路径。”, 0, )
                        赋值 (.内容, .文件名)
                    .如果结束
                    
                .如果结束
                
            .如果结束
            
            
        .否则
            赋值 (.内容, .文件名)
        .如果结束
        
    .如果结束
    
    
    赋值 (图片文件号, 打开文件 (相加 (题库路径, “\”, 纯文件名), , ))
    赋值 (.图片, 读入字节集 (图片文件号, 取文件长度 (图片文件号)))
    关闭文件 (图片文件号)
    赋值 (临时图片D, .图片)
.否则
    
.如果结束


.子程序 _答案E图片按钮_被单击, 空白型, , 
.局部变量 图片文件号, 整数型, , , 
.局部变量 纯文件名, 文本型, , , 

.如果 (等于 (打开 (), 真))
    赋值 (纯文件名, 取文本右边 (.文件名, 相减 (取文本长度 (.文件名), 倒找文本 (.文件名, “\”, , 假))))
    
    .如果 (等于 (.文件名, 相加 (题库路径, “\”, 纯文件名)))
        赋值 (.内容, 纯文件名)
        
    .否则
        .如果 (等于 (信息框 (“为方便题库备份，强烈建议复制该文件到题库文件夹。要复制吗？”, #确认取消钮, “复制文件提示”), #确认钮))
            创建目录 (题库路径)
            .如果 (等于 (文件是否存在 (相加 (题库路径, “\”, 纯文件名)), 假))
                .如果 (复制文件 (.文件名, 相加 (题库路径, “\”, 纯文件名)))
                    赋值 (.内容, 纯文件名)
                    
                .否则
                    信息框 (“复制文件失败！只能加为一般路径。”, 0, )
                    赋值 (.内容, .文件名)
                .如果结束
                
            .否则
                .如果 (等于 (信息框 (“该文件已存在,您要覆盖吗？”, #确认取消钮, “文件已存在”), #确认钮))
                    .如果 (复制文件 (.文件名, 相加 (题库路径, “\”, 纯文件名)))
                        赋值 (.内容, 纯文件名)
                        
                    .否则
                        输入框 (相加 (“源文件：”, .文件名, #换行符, “目标文件：”, 题库路径, “\”, 纯文件名), “重命名文件”, 纯文件名, 纯文件名, )
                        .如果 (复制文件 (.文件名, 相加 (题库路径, “\”, 纯文件名)))
                            赋值 (.内容, 纯文件名)
                            
                        .否则
                            信息框 (“复制文件失败！只能加为一般路径。”, 0, )
                            赋值 (.内容, .文件名)
                        .如果结束
                        
                    .如果结束
                    
                    
                .否则
                    输入框 (相加 (“源文件：”, .文件名, #换行符, “目标文件：”, 题库路径, “\”, 纯文件名), “重命名文件”, 纯文件名, 纯文件名, )
                    .如果 (复制文件 (.文件名, 相加 (题库路径, “\”, 纯文件名)))
                        赋值 (.内容, 纯文件名)
                        
                    .否则
                        信息框 (“复制文件失败！只能加为一般路径。”, 0, )
                        赋值 (.内容, .文件名)
                    .如果结束
                    
                .如果结束
                
            .如果结束
            
            
        .否则
            赋值 (.内容, .文件名)
        .如果结束
        
    .如果结束
    
    
    赋值 (图片文件号, 打开文件 (相加 (题库路径, “\”, 纯文件名), , ))
    赋值 (.图片, 读入字节集 (图片文件号, 取文件长度 (图片文件号)))
    关闭文件 (图片文件号)
    赋值 (临时图片E, .图片)
.否则
    
.如果结束



 ' =================================================================================================================

.子程序 _答案F图片按钮_被单击, 空白型, , 
.局部变量 图片文件号, 整数型, , , 
.局部变量 纯文件名, 文本型, , , 

.如果 (等于 (打开 (), 真))
    赋值 (纯文件名, 取文本右边 (.文件名, 相减 (取文本长度 (.文件名), 倒找文本 (.文件名, “\”, , 假))))
    
    .如果 (等于 (.文件名, 相加 (题库路径, “\”, 纯文件名)))
        赋值 (.内容, 纯文件名)
        
    .否则
        .如果 (等于 (信息框 (“为方便题库备份，强烈建议复制该文件到题库文件夹。要复制吗？”, #确认取消钮, “复制文件提示”), #确认钮))
            创建目录 (题库路径)
            .如果 (等于 (文件是否存在 (相加 (题库路径, “\”, 纯文件名)), 假))
                .如果 (复制文件 (.文件名, 相加 (题库路径, “\”, 纯文件名)))
                    赋值 (.内容, 纯文件名)
                    
                .否则
                    信息框 (“复制文件失败！只能加为一般路径。”, 0, )
                    赋值 (.内容, .文件名)
                .如果结束
                
            .否则
                .如果 (等于 (信息框 (“该文件已存在,您要覆盖吗？”, #确认取消钮, “文件已存在”), #确认钮))
                    .如果 (复制文件 (.文件名, 相加 (题库路径, “\”, 纯文件名)))
                        赋值 (.内容, 纯文件名)
                        
                    .否则
                        输入框 (相加 (“源文件：”, .文件名, #换行符, “目标文件：”, 题库路径, “\”, 纯文件名), “重命名文件”, 纯文件名, 纯文件名, )
                        .如果 (复制文件 (.文件名, 相加 (题库路径, “\”, 纯文件名)))
                            赋值 (.内容, 纯文件名)
                            
                        .否则
                            信息框 (“复制文件失败！只能加为一般路径。”, 0, )
                            赋值 (.内容, .文件名)
                        .如果结束
                        
                    .如果结束
                    
                    
                .否则
                    输入框 (相加 (“源文件：”, .文件名, #换行符, “目标文件：”, 题库路径, “\”, 纯文件名), “重命名文件”, 纯文件名, 纯文件名, )
                    .如果 (复制文件 (.文件名, 相加 (题库路径, “\”, 纯文件名)))
                        赋值 (.内容, 纯文件名)
                        
                    .否则
                        信息框 (“复制文件失败！只能加为一般路径。”, 0, )
                        赋值 (.内容, .文件名)
                    .如果结束
                    
                .如果结束
                
            .如果结束
            
            
        .否则
            赋值 (.内容, .文件名)
        .如果结束
        
    .如果结束
    
    
    赋值 (图片文件号, 打开文件 (相加 (题库路径, “\”, 纯文件名), , ))
    赋值 (.图片, 读入字节集 (图片文件号, 取文件长度 (图片文件号)))
    关闭文件 (图片文件号)
    赋值 (临时图片F, .图片)
.否则
    
.如果结束


.子程序 _答案G图片按钮_被单击, 空白型, , 
.局部变量 图片文件号, 整数型, , , 
.局部变量 纯文件名, 文本型, , , 

.如果 (等于 (打开 (), 真))
    赋值 (纯文件名, 取文本右边 (.文件名, 相减 (取文本长度 (.文件名), 倒找文本 (.文件名, “\”, , 假))))
    
    .如果 (等于 (.文件名, 相加 (题库路径, “\”, 纯文件名)))
        赋值 (.内容, 纯文件名)
    .否则
        .如果 (等于 (信息框 (“为方便题库备份，强烈建议复制该文件到题库文件夹。要复制吗？”, #确认取消钮, “复制文件提示”), #确认钮))
            创建目录 (题库路径)
            .如果 (等于 (文件是否存在 (相加 (题库路径, “\”, 纯文件名)), 假))
                .如果 (复制文件 (.文件名, 相加 (题库路径, “\”, 纯文件名)))
                    赋值 (.内容, 纯文件名)
                    
                .否则
                    信息框 (“复制文件失败！只能加为一般路径。”, 0, )
                    赋值 (.内容, .文件名)
                .如果结束
                
            .否则
                .如果 (等于 (信息框 (“该文件已存在,您要覆盖吗？”, #确认取消钮, “文件已存在”), #确认钮))
                    .如果 (复制文件 (.文件名, 相加 (题库路径, “\”, 纯文件名)))
                        赋值 (.内容, 纯文件名)
                        
                    .否则
                        输入框 (相加 (“源文件：”, .文件名, #换行符, “目标文件：”, 题库路径, “\”, 纯文件名), “重命名文件”, 纯文件名, 纯文件名, )
                        .如果 (复制文件 (.文件名, 相加 (题库路径, “\”, 纯文件名)))
                            赋值 (.内容, 纯文件名)
                            
                        .否则
                            信息框 (“复制文件失败！只能加为一般路径。”, 0, )
                            赋值 (.内容, .文件名)
                        .如果结束
                        
                    .如果结束
                    
                    
                .否则
                    输入框 (相加 (“源文件：”, .文件名, #换行符, “目标文件：”, 题库路径, “\”, 纯文件名), “重命名文件”, 纯文件名, 纯文件名, )
                    .如果 (复制文件 (.文件名, 相加 (题库路径, “\”, 纯文件名)))
                        赋值 (.内容, 纯文件名)
                        
                    .否则
                        信息框 (“复制文件失败！只能加为一般路径。”, 0, )
                        赋值 (.内容, .文件名)
                    .如果结束
                    
                .如果结束
                
            .如果结束
            
            
        .否则
            赋值 (.内容, .文件名)
        .如果结束
        
    .如果结束
    
    
    赋值 (图片文件号, 打开文件 (相加 (题库路径, “\”, 纯文件名), , ))
    赋值 (.图片, 读入字节集 (图片文件号, 取文件长度 (图片文件号)))
    关闭文件 (图片文件号)
    赋值 (临时图片G, .图片)
.否则
    
.如果结束


.子程序 _答案H图片按钮_被单击, 空白型, , 
.局部变量 图片文件号, 整数型, , , 
.局部变量 纯文件名, 文本型, , , 

.如果 (等于 (打开 (), 真))
    赋值 (纯文件名, 取文本右边 (.文件名, 相减 (取文本长度 (.文件名), 倒找文本 (.文件名, “\”, , 假))))
    
    .如果 (等于 (.文件名, 相加 (题库路径, “\”, 纯文件名)))
        赋值 (.内容, 纯文件名)
    .否则
        .如果 (等于 (信息框 (“为方便题库备份，强烈建议复制该文件到题库文件夹。要复制吗？”, #确认取消钮, “复制文件提示”), #确认钮))
            创建目录 (题库路径)
            .如果 (等于 (文件是否存在 (相加 (题库路径, “\”, 纯文件名)), 假))
                .如果 (复制文件 (.文件名, 相加 (题库路径, “\”, 纯文件名)))
                    赋值 (.内容, 纯文件名)
                    
                .否则
                    信息框 (“复制文件失败！只能加为一般路径。”, 0, )
                    赋值 (.内容, .文件名)
                .如果结束
                
            .否则
                .如果 (等于 (信息框 (“该文件已存在,您要覆盖吗？”, #确认取消钮, “文件已存在”), #确认钮))
                    .如果 (复制文件 (.文件名, 相加 (题库路径, “\”, 纯文件名)))
                        赋值 (.内容, 纯文件名)
                        
                    .否则
                        输入框 (相加 (“源文件：”, .文件名, #换行符, “目标文件：”, 题库路径, “\”, 纯文件名), “重命名文件”, 纯文件名, 纯文件名, )
                        .如果 (复制文件 (.文件名, 相加 (题库路径, “\”, 纯文件名)))
                            赋值 (.内容, 纯文件名)
                            
                        .否则
                            信息框 (“复制文件失败！只能加为一般路径。”, 0, )
                            赋值 (.内容, .文件名)
                        .如果结束
                        
                    .如果结束
                    
                    
                .否则
                    输入框 (相加 (“源文件：”, .文件名, #换行符, “目标文件：”, 题库路径, “\”, 纯文件名), “重命名文件”, 纯文件名, 纯文件名, )
                    .如果 (复制文件 (.文件名, 相加 (题库路径, “\”, 纯文件名)))
                        赋值 (.内容, 纯文件名)
                        
                    .否则
                        信息框 (“复制文件失败！只能加为一般路径。”, 0, )
                        赋值 (.内容, .文件名)
                    .如果结束
                    
                .如果结束
                
            .如果结束
            
            
        .否则
            赋值 (.内容, .文件名)
        .如果结束
        
    .如果结束
    
    
    赋值 (图片文件号, 打开文件 (相加 (题库路径, “\”, 纯文件名), , ))
    赋值 (.图片, 读入字节集 (图片文件号, 取文件长度 (图片文件号)))
    关闭文件 (图片文件号)
    赋值 (临时图片H, .图片)
.否则
    
.如果结束


.子程序 _答案I图片按钮_被单击, 空白型, , 
.局部变量 图片文件号, 整数型, , , 
.局部变量 纯文件名, 文本型, , , 

.如果 (等于 (打开 (), 真))
    赋值 (纯文件名, 取文本右边 (.文件名, 相减 (取文本长度 (.文件名), 倒找文本 (.文件名, “\”, , 假))))
    
    .如果 (等于 (.文件名, 相加 (题库路径, “\”, 纯文件名)))
        赋值 (.内容, 纯文件名)
    .否则
        .如果 (等于 (信息框 (“为方便题库备份，强烈建议复制该文件到题库文件夹。要复制吗？”, #确认取消钮, “复制文件提示”), #确认钮))
            创建目录 (题库路径)
            .如果 (等于 (文件是否存在 (相加 (题库路径, “\”, 纯文件名)), 假))
                .如果 (复制文件 (.文件名, 相加 (题库路径, “\”, 纯文件名)))
                    赋值 (.内容, 纯文件名)
                    
                .否则
                    信息框 (“复制文件失败！只能加为一般路径。”, 0, )
                    赋值 (.内容, .文件名)
                .如果结束
                
            .否则
                .如果 (等于 (信息框 (“该文件已存在,您要覆盖吗？”, #确认取消钮, “文件已存在”), #确认钮))
                    .如果 (复制文件 (.文件名, 相加 (题库路径, “\”, 纯文件名)))
                        赋值 (.内容, 纯文件名)
                        
                    .否则
                        输入框 (相加 (“源文件：”, .文件名, #换行符, “目标文件：”, 题库路径, “\”, 纯文件名), “重命名文件”, 纯文件名, 纯文件名, )
                        .如果 (复制文件 (.文件名, 相加 (题库路径, “\”, 纯文件名)))
                            赋值 (.内容, 纯文件名)
                            
                        .否则
                            信息框 (“复制文件失败！只能加为一般路径。”, 0, )
                            赋值 (.内容, .文件名)
                        .如果结束
                        
                    .如果结束
                    
                    
                .否则
                    输入框 (相加 (“源文件：”, .文件名, #换行符, “目标文件：”, 题库路径, “\”, 纯文件名), “重命名文件”, 纯文件名, 纯文件名, )
                    .如果 (复制文件 (.文件名, 相加 (题库路径, “\”, 纯文件名)))
                        赋值 (.内容, 纯文件名)
                        
                    .否则
                        信息框 (“复制文件失败！只能加为一般路径。”, 0, )
                        赋值 (.内容, .文件名)
                    .如果结束
                    
                .如果结束
                
            .如果结束
            
            
        .否则
            赋值 (.内容, .文件名)
        .如果结束
        
    .如果结束
    
    
    赋值 (图片文件号, 打开文件 (相加 (题库路径, “\”, 纯文件名), , ))
    赋值 (.图片, 读入字节集 (图片文件号, 取文件长度 (图片文件号)))
    关闭文件 (图片文件号)
    赋值 (临时图片I, .图片)
.否则
    
.如果结束


.子程序 _答案J图片按钮_被单击, 空白型, , 
.局部变量 图片文件号, 整数型, , , 
.局部变量 纯文件名, 文本型, , , 

.如果 (等于 (打开 (), 真))
    赋值 (纯文件名, 取文本右边 (.文件名, 相减 (取文本长度 (.文件名), 倒找文本 (.文件名, “\”, , 假))))
    
    .如果 (等于 (.文件名, 相加 (题库路径, “\”, 纯文件名)))
        赋值 (.内容, 纯文件名)
    .否则
        .如果 (等于 (信息框 (“为方便题库备份，强烈建议复制该文件到题库文件夹。要复制吗？”, #确认取消钮, “复制文件提示”), #确认钮))
            创建目录 (题库路径)
            .如果 (等于 (文件是否存在 (相加 (题库路径, “\”, 纯文件名)), 假))
                .如果 (复制文件 (.文件名, 相加 (题库路径, “\”, 纯文件名)))
                    赋值 (.内容, 纯文件名)
                    
                .否则
                    信息框 (“复制文件失败！只能加为一般路径。”, 0, )
                    赋值 (.内容, .文件名)
                .如果结束
                
            .否则
                .如果 (等于 (信息框 (“该文件已存在,您要覆盖吗？”, #确认取消钮, “文件已存在”), #确认钮))
                    .如果 (复制文件 (.文件名, 相加 (题库路径, “\”, 纯文件名)))
                        赋值 (.内容, 纯文件名)
                        
                    .否则
                        输入框 (相加 (“源文件：”, .文件名, #换行符, “目标文件：”, 题库路径, “\”, 纯文件名), “重命名文件”, 纯文件名, 纯文件名, )
                        .如果 (复制文件 (.文件名, 相加 (题库路径, “\”, 纯文件名)))
                            赋值 (.内容, 纯文件名)
                            
                        .否则
                            信息框 (“复制文件失败！只能加为一般路径。”, 0, )
                            赋值 (.内容, .文件名)
                        .如果结束
                        
                    .如果结束
                    
                    
                .否则
                    输入框 (相加 (“源文件：”, .文件名, #换行符, “目标文件：”, 题库路径, “\”, 纯文件名), “重命名文件”, 纯文件名, 纯文件名, )
                    .如果 (复制文件 (.文件名, 相加 (题库路径, “\”, 纯文件名)))
                        赋值 (.内容, 纯文件名)
                        
                    .否则
                        信息框 (“复制文件失败！只能加为一般路径。”, 0, )
                        赋值 (.内容, .文件名)
                    .如果结束
                    
                .如果结束
                
            .如果结束
            
            
        .否则
            赋值 (.内容, .文件名)
        .如果结束
        
    .如果结束
    
    
    赋值 (图片文件号, 打开文件 (相加 (题库路径, “\”, 纯文件名), , ))
    赋值 (.图片, 读入字节集 (图片文件号, 取文件长度 (图片文件号)))
    关闭文件 (图片文件号)
    赋值 (临时图片J, .图片)
.否则
    
.如果结束


.子程序 _答题编辑框_失去焦点, 空白型, , 
 ' .如果 (等于 (.内容, “”))
     ' 答题编辑框.内容 ＝ “在此输入答案”
.否则
    
.如果结束


.子程序 _提示编辑框_失去焦点, 空白型, , 
 ' .如果 (等于 (.内容, “”))
     ' 提示编辑框.内容 ＝ “提示信息”
.否则
    
.如果结束



.子程序 _添加问题图片按钮_被单击, 空白型, , 
.局部变量 竖线位置, 整数型, , , 
.局部变量 替换长度, 整数型, , , 
.局部变量 纯文件名, 文本型, , , 

.如果 (等于 (打开 (), 真))
    赋值 (纯文件名, 取文本右边 (.文件名, 相减 (取文本长度 (.文件名), 倒找文本 (.文件名, “\”, , 假))))
    输出调试文本 (纯文件名)
    赋值 (竖线位置, 寻找文本 (.内容, “|”, , 假))
     ' 信息框 (到文本 (竖线位置), 0, )
    .如果 (等于 (信息框 (“为方便题库备份，强烈建议复制该文件到题库图片文件夹！要复制吗？”, #确认取消钮, “复制文件提示”), #确认钮))
        创建目录 (题库路径)
        .如果 (等于 (.文件名, 相加 (题库路径, “\”, 纯文件名)))
            .如果 (不等于 (竖线位置, -1))
                赋值 (替换长度, 相减 (取文本长度 (.内容), 竖线位置))
                赋值 (.内容, 文本替换 (.内容, 相加 (竖线位置, 1), 替换长度, 纯文件名))
            .否则
                赋值 (.内容, 相加 (.内容, #换行符, #换行符, “|”, 纯文件名))
            .如果结束
            
        .否则
            .如果 (复制文件 (.文件名, 相加 (题库路径, “\”, 纯文件名)))
                .如果 (不等于 (竖线位置, -1))
                    赋值 (替换长度, 相减 (取文本长度 (.内容), 竖线位置))
                    赋值 (.内容, 文本替换 (.内容, 相加 (竖线位置, 1), 替换长度, 纯文件名))
                .否则
                    赋值 (.内容, 相加 (.内容, #换行符, #换行符, “|”, 纯文件名))
                .如果结束
                
            .否则
                信息框 (“复制文件失败！只能加为一般路径。”, 0, )
                .如果 (不等于 (竖线位置, -1))
                    赋值 (替换长度, 相减 (取文本长度 (.内容), 竖线位置))
                    赋值 (.内容, 文本替换 (.内容, 相加 (竖线位置, 1), 替换长度, .文件名))
                .否则
                    赋值 (.内容, 相加 (.内容, #换行符, #换行符, “|”, .文件名))
                .如果结束
                
            .如果结束
            
        .如果结束
        
        
        
        
        
        
    .否则
        .如果 (不等于 (竖线位置, -1))
            赋值 (替换长度, 相减 (取文本长度 (.内容), 竖线位置))
            赋值 (.内容, 文本替换 (.内容, 相加 (竖线位置, 1), 替换长度, .文件名))
        .否则
            赋值 (.内容, 相加 (.内容, #换行符, #换行符, “|”, .文件名))
        .如果结束
        
    .如果结束
    
     ' 图片文件号 ＝ 打开文件 (导入图片通用对话框.文件名, , )
     ' 备选答案图片框.图片 ＝ 读入字节集 (图片文件号, 取文件长度 (图片文件号))
     ' 临时图片0 ＝ 备选答案图片框.图片
     ' 关闭文件 (图片文件号)
.否则
    
.如果结束


.子程序 _问题编辑框_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 文件号, 整数型, , , 
.局部变量 被分割文本, 文本型, , "2", 
.局部变量 分割文本完整路径, 文本型, , , 

.如果 (大于 (取文本长度 (.内容), 240))
     ' 备选答案图片框.可视 ＝ 假
    赋值 (., 真)
     ' 问题超级编辑框.可视 ＝ 真
    赋值 (., 相加 (.左边, .左边))
    赋值 (., .宽度)
    赋值 (., 取整 (相乘 (相除 (取文本长度 (.内容), 56), 18)))
    赋值 (., 相加 (.顶边, .高度, .顶边))
    赋值 (., .内容)
    赋值 (.顶边, 相加 (., .))
.否则
    赋值 (., 假)
    
.如果结束


赋值 (被分割文本, 分割文本 (.内容, “|”, 2))

.如果 (等于 (取数组成员数 (被分割文本), 2))
    .如果 (等于 (寻找文本 (被分割文本 [2], “\”, , 假), -1))
        赋值 (分割文本完整路径, 相加 (题库路径, “\”, 被分割文本 [2]))
    .否则
        赋值 (分割文本完整路径, 被分割文本 [2])
    .如果结束
    
    .如果 (等于 (图片路径, 分割文本完整路径))
        
        .如果 (不等于 (取字节集长度 (临时图片0), 0))
            赋值 (.可视, 真)
            赋值 (.图片, 临时图片0)
            赋值 (.左边, 相加 (.左边, .左边))
            .如果 (等于 (., 假))
                赋值 (.顶边, 相减 (相加 (.顶边, .高度), 20))
            .否则
                赋值 (.顶边, 相加 (., .))
            .如果结束
            
            
            
            .如果 (大于 (相加 (.顶边, .高度), 出题窗口.))
                赋值 (.高度, 相减 (出题窗口., .顶边))
                 ' 备选答案图片框.高度 ＝ 出题窗口.高度 － (问题分组框.顶边 ＋ 问题分组框.高度) ＋ 问题分组框.高度 － 问题编辑框.顶边 － 问题编辑框.高度
                 ' 信息框 (到文本 (备选答案图片框.高度) ＋ #换行符 ＋ 到文本 (原图高宽比), 0, )
                赋值 (.宽度, 取整 (相除 (.高度, 原图高宽比)))
            .否则
                
            .如果结束
            
             ' 备选答案图片框.图片 ＝ 临时图片0
            
        .否则
            
        .如果结束
        
    .否则
        赋值 (图片路径, 分割文本完整路径)
        赋值 (全局图片路径, 图片路径)
        
        .如果 (等于 (文件是否存在 (图片路径), 真))
            赋值 (.可视, 真)
            赋值 (.图片, 读入文件 (图片路径))
            赋值 (临时图片0, .图片)
            赋值 (.宽度, .宽度)
            
            
            赋值 (原图高宽比, 相除 (未知支持库函数_32 (图片路径), 未知支持库函数_31 (图片路径)))
            输出调试文本 (相加 (“1,”, 到文本 (原图高宽比)))
            赋值 (.高度, 取整 (相乘 (原图高宽比, .宽度)))
            
            .如果 (等于 (., 假))
                赋值 (.顶边, 相减 (相加 (.顶边, .高度), 20))
            .否则
                赋值 (.顶边, 相加 (., .))
            .如果结束
            
            
            赋值 (.左边, 相加 (.左边, .左边))
            .如果 (大于 (相加 (.顶边, .高度), 出题窗口.))
                赋值 (.高度, 相减 (出题窗口., .顶边))
                 ' 备选答案图片框.高度 ＝ 出题窗口.高度 － (问题分组框.顶边 ＋ 问题分组框.高度) ＋ 问题分组框.高度 － 问题编辑框.顶边 － 问题编辑框.高度
                 ' 信息框 (到文本 (备选答案图片框.高度) ＋ #换行符 ＋ 到文本 (原图高宽比), 0, )
                赋值 (.宽度, 取整 (相除 (.高度, 原图高宽比)))
            .否则
                
            .如果结束
            
             ' 信息框 (图片路径, 0, )
            
        .否则
             ' 备选答案图片框.可视 ＝ 假
             ' 备选答案显示编辑框.可视 ＝ 真
            
             ' 备选答案显示编辑框.左边 ＝ 问题分组框.左边 ＋ 问题编辑框.左边
             ' 备选答案显示编辑框.宽度 ＝ 问题编辑框.宽度
             ' 备选答案显示编辑框.高度 ＝ 100
             ' 备选答案显示编辑框.顶边 ＝ 问题编辑框.顶边 ＋ 问题编辑框.高度 ＋ 问题分组框.顶边
             ' 备选答案显示编辑框.内容 ＝ 问题编辑框.内容
        .如果结束
        
    .如果结束
    
    
    
    
    
    
    
.否则
    赋值 (图片路径, “”)
    
.如果结束

.如果 (等于 (.可视, 真))
    .如果 (等于 (., 假))
        赋值 (.顶边, 相减 (相加 (.顶边, .高度), 20))
    .否则
        赋值 (.顶边, 相加 (., .))
    .如果结束
    
    
    赋值 (.宽度, .宽度)
    赋值 (.高度, 相乘 (.宽度, 原图高宽比))
    
     ' 备选答案图片框.宽度 ＝ 取整 (备选答案图片框.高度 ÷ 原图高宽比)
    输出调试文本 (相加 (“2,”, 到文本 (原图高宽比)))
    输出调试文本 (相加 (到文本 (.宽度), #换行符, 到文本 (.高度), #换行符, 到文本 (相减 (出题窗口., .顶边))))
    
    .如果 (大于 (相加 (.顶边, .高度), 出题窗口.))
        
        赋值 (.高度, 相减 (出题窗口., .顶边, 48))
        赋值 (.宽度, 取整 (相除 (.高度, 原图高宽比)))
    .否则
        
    .如果结束
    
.否则
    
.如果结束






.子程序 _问题编辑框_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (., 假)
赋值 (.可视, 假)
 ' 备选答案图片框.宽度 ＝ 备选答案1编辑框.宽度


.子程序 模式转换, 空白型, , 
.如果 (等于 (出题窗口., “出题模式”))
     ' .如果 (等于 (信息框 (“即将退出考试模式，进入出题模式，继续吗？”, #确认取消钮, ), #确认钮))
         ' 考试时钟窗口.销毁 ()
         ' 出题窗口.标题 ＝ “出题模式”
        连续赋值 (假, .可视, .可视, .可视, .可视, .禁止, .禁止, .禁止, .禁止, .禁止, .禁止, .可视)
         ' 连续赋值 (12, 交卷按钮.顶边, 懂了按钮.顶边, 提示按钮.顶边, 确定按钮.顶边)
        连续赋值 (真, .可视, .可视, .可视, .可视, .可视, .禁止, .禁止, .禁止, .禁止)
         ' 连续赋值 (真, A选择框.禁止, B选择框.禁止, C选择框.禁止, D选择框.禁止, E选择框.禁止)
        
        赋值 (.标题, “开始考试”)
         ' 出题模式 ＝ 取反 (出题模式)
    .否则
         ' 出题模式 ＝ 假
    .如果结束
    
.否则
    .如果 (等于 (出题窗口., “考试模式”))
         ' .如果 (小于或等于 (考试次数, 1))
             ' 载入 (抽题窗口, , 真)  ' 进入考试模式
        .否则
            
        .如果结束
        
         ' 出题窗口.标题 ＝ “考试模式”
        连续赋值 (真, .可视, .可视, .可视, .可视, .禁止, .禁止, .禁止, .禁止, .禁止, .禁止, .禁止, .禁止, .禁止, .禁止, .禁止, .禁止, .禁止, .可视)
        连续赋值 (12, .顶边, .顶边, .顶边, .顶边)
        连续赋值 (假, .可视, .可视, .可视, .可视, .可视, .禁止, .禁止, .禁止, .禁止)
        赋值 (.最大位置, 总时间)
         ' 连续赋值 (假, A选择框.禁止, B选择框.禁止, C选择框.禁止, D选择框.禁止, E选择框.禁止)
        赋值 (.标题, “开始出题”)
         ' 出题模式 ＝ 取反 (出题模式)
        
    .否则
        
    .如果结束
    
.如果结束



.子程序 _题目显示树型框_项目被选择, 空白型, , 
.参数 选择方式, 整数型, , 

.局部变量 临时变量, 整数型, , , 

清空 ()
.如果 (等于 (.取缩进层次 (.最大化按钮), 1)) ' 第一个层次为题型
    赋值 (.内容, .取项目文本 (.最大化按钮))
    
    .计次循环首 (取项目数 (), 临时变量) ' 题号组合框加入项目
        .如果 (等于 (相减 (临时变量, 1).取父项目 ().取项目文本 (), .取项目文本 (.最大化按钮)))
            相减 (临时变量, 1).取项目文本 ().加入项目 ()
        .否则
            
        .如果结束
        
    .计次循环尾 ()
     ' 清空内容 ()
    
    赋值 (.内容, 0.取项目文本 ())
    .如果 (等于 (出题窗口., “出题模式”))
        _加题按钮_被单击 ()
    .否则
        _题型组合框_列表项被选择 ()
    .如果结束
    
    
.否则
    .如果 (等于 (.取缩进层次 (.最大化按钮), 2)) ' 第二个层次为题目编号
        赋值 (.内容, .取父项目 (.最大化按钮).取项目文本 ())
         ' _题型组合框_列表项被选择 ()
        赋值 (.内容, .取项目文本 (.最大化按钮))
        .计次循环首 (取项目数 (), 临时变量) ' 题号组合框加入项目
            .如果 (等于 (.取父项目 (.最大化按钮).取项目文本 (), 相减 (临时变量, 1).取父项目 ().取项目文本 ()))
                相减 (临时变量, 1).取项目文本 ().加入项目 ()
            .否则
                
            .如果结束
            
        .计次循环尾 ()
        .如果 (大于 (记录上一条索引值, 0))
            .如果 (不等于 (出题窗口., “考试模式”))
                记录上一条索引值.取消加粗 ()
            .否则
                .如果 (等于 (.内容, “”))
                    记录上一条索引值.取消加粗 ()
                .否则
                    
                .如果结束
                
            .如果结束
            
        .否则
            
        .如果结束
        
        .加粗 (.最大化按钮)
        赋值 (记录上一条索引值, .最大化按钮)
        
        显示题目 (到整数 (.取项目文本 (.最大化按钮)))
         ' _时间组合框_列表项被选择 ()
        .如果 (等于 (出题窗口., “考试模式”))
            赋值 (.最大位置, 本题时间)
            赋值 (.位置, 0)
        .否则
            
        .如果结束
        
        
    .否则
        
    .如果结束
    
.如果结束
 ' _题型组合框_列表项被选择 ()
题型选择组件显示 (.内容)
 ' .如果 (等于 (出题窗口., “出题模式”))
    标记答题选项 ()
.否则
    
.如果结束

.如果 (等于 (.内容, “材料分析”))
    .如果 (不等于 (.内容, “”))
        .如果 (等于 (材料文本窗口被打开, 真))
            材料文本窗口.销毁 ()
        .否则
            
        .如果结束
        载入 (材料文本窗口, , 假)
        
    .否则
         ' 载入 (材料文本窗口, , 假)
    .如果结束
    
.否则
    .如果 (等于 (材料文本窗口被打开, 真))
        材料文本窗口.销毁 ()
    .否则
        
    .如果结束
    
.如果结束




.子程序 _出题窗口_将被销毁, 空白型, , 
 ' .如果 (等于 (出题窗口., “考试模式”))
     ' 考试时钟窗口.销毁 ()
.否则
    
.如果结束
.如果 (并且 (不等于 (题库, “”), 不等于 (取记录数 (), 0)))
    到首记录 ()
    .判断循环首 (等于 (读 (#问题), “”))
        删除 ()
        跳过 ()
    .判断循环尾 ()
    彻底删除 ()
.否则
    
.如果结束

.如果 (等于 (材料文本窗口被打开, 真))
    材料文本窗口.销毁 ()
.否则
    
    
.如果结束
.如果 (等于 (图片显示窗口被打开, 真))
    图片显示窗口.销毁 ()
.否则
    
.如果结束


赋值 (加题状态, 假)
赋值 (.禁止, 假)
全部关闭 ()

.子程序 _题号组合框_列表项被选择, 空白型, , 
.局部变量 临时变量, 整数型, , , 

 ' 信息框 (到文本 (记录上一条索引值), 0, )
赋值 (题号, 到整数 (.内容))

.如果 (大于 (记录上一条索引值, 0))
    .如果 (不等于 (出题窗口., “考试模式”))
        记录上一条索引值.取消加粗 ()
    .否则
        
    .如果结束
    
.否则
    
.如果结束

.计次循环首 (取项目数 (), 临时变量) ' 题号组合框加入项目
    .如果 (并且 (等于 (相减 (临时变量, 1).取项目文本 (), .内容), 等于 (相减 (临时变量, 1).取缩进层次 (), 2)))
        赋值 (.最大化按钮, 相减 (临时变量, 1))
        相减 (临时变量, 1).加粗 ()
        赋值 (记录上一条索引值, 相减 (临时变量, 1))
        跳出循环 ()
    .否则
        
    .如果结束
    
.计次循环尾 ()
.如果 (等于 (出题窗口., “出题模式”))
    标记答题选项 ()
.否则
    
.如果结束
.如果 (等于 (.内容, “论述”))
    赋值 (论述题问题, .内容)
.否则
    
.如果结束


.子程序 _题号组合框_编辑内容被改变, 空白型, , 
_题号组合框_列表项被选择 ()
 ' 题型选择组件显示 (题型组合框.内容)

.子程序 _切换题库按钮_被单击, 空白型, , 
.局部变量 新题库名称, 文本型, , , 
.局部变量 题库更名序号, 整数型, , , 

 ' 全部关闭 ()
.如果 (等于 (出题模式, 真))
    .如果 (等于 (打开 (), 真))
        赋值 (题库, .文件名)
        .如果 (等于 (是否已打开 (题库), 假))
            打开 (题库, , , , , , )
        .否则
            置当前库 (题库)
        .如果结束
        输出调试文本 (相加 (“字段名：”, 取字段名 (2), #换行符, #科目名称))
        .如果 (不等于 (取字段名 (2), #科目名称))
            信息框 (“此文件不是题库，即进入新建题库设置...”, 0, “提示”)
            赋值 (题库, “”)
            关闭 ()
            .如果 (等于 (输入框 (“请输入新题库名称：”, “创建新题库”, “题库”, 新题库名称, ), 真))
                赋值 (题库, 相加 (取运行目录 (), “\”, 考生姓名, “\”, 新题库名称, “.edb”))
                赋值 (题库更名序号, 0)
                .判断循环首 (等于 (文件是否存在 (题库), 真))
                    赋值 (题库更名序号, 相加 (题库更名序号, 1))
                    赋值 (题库, 相加 (取运行目录 (), “\”, 考生姓名, “\”, 新题库名称, 到文本 (题库更名序号), “.edb”))
                .判断循环尾 ()
                输出调试文本 (相加 (“题库更名为：”, 题库))
                复制文件 (相加 (取运行目录 (), “\试题库.edb”), 题库)
                赋值 (.禁止, 假)
                赋值 (.禁止, 假)
                赋值 (.禁止, 假)
                赋值 (.禁止, 假)
                赋值 (.输入方式, 0)
                赋值 (加题状态, 真)
                赋值 (.禁止, 真)
                
                _出题窗口_创建完毕 ()
            .否则
                赋值 (题库, 当前题库)
                .如果 (等于 (是否已打开 (题库), 假))
                    打开 (题库, , , , , , )
                .否则
                    置当前库 (题库)
                .如果结束
                
                
            .如果结束
            
        .否则
            _出题窗口_创建完毕 ()
        .如果结束
        
        
    .否则
        .如果 (等于 (输入框 (“请输入新题库名称：”, “题库设置”, “题库”, 新题库名称, ), 真))
            赋值 (题库, 相加 (取运行目录 (), “\”, 考生姓名, “\”, 新题库名称, “.edb”))
            赋值 (题库更名序号, 0)
            .判断循环首 (等于 (文件是否存在 (题库), 真))
                赋值 (题库更名序号, 相加 (题库更名序号, 1))
                赋值 (题库, 相加 (取运行目录 (), “\”, 考生姓名, “\”, 新题库名称, 到文本 (题库更名序号), “.edb”))
            .判断循环尾 ()
            输出调试文本 (相加 (“题库更名为：”, 题库))
            
            复制文件 (相加 (取运行目录 (), “\试题库.edb”), 题库)
            赋值 (.禁止, 假)
            赋值 (.禁止, 假)
            赋值 (.禁止, 假)
            赋值 (.禁止, 假)
            赋值 (.输入方式, 0)
            赋值 (加题状态, 真)
            赋值 (.禁止, 真)
            
            _出题窗口_创建完毕 ()
            
        .否则
            赋值 (题库, 当前题库)
            .如果 (等于 (是否已打开 (题库), 假))
                打开 (题库, , , , , , )
            .否则
                置当前库 (题库)
            .如果结束
            
            
            
             ' 信息框 (“未选定题库！”, 0, )
            
        .如果结束
        
    .如果结束
    
.否则
    
.如果结束




.子程序 _上一题按钮_被单击, 空白型, , 
.如果 (大于或等于 (到整数 (.内容), 2))
    赋值 (.内容, 到文本 (相减 (到整数 (.内容), 1)))
    
.否则
    
.如果结束
_题号组合框_编辑内容被改变 ()
 ' .如果 (等于 (出题窗口., “出题模式”))
    标记答题选项 ()
.否则
     ' 连续赋值 (假, A选择框.选中, B选择框.选中, C选择框.选中, D选择框.选中, E选择框.选中)
     ' 答题编辑框.内容 ＝ 读 (#用户答案)
     ' 标记答题选项 ()
.如果结束


.子程序 _下一题按钮_被单击, 空白型, , 
鸣叫 ()
.如果 (等于 (删首尾空 (.内容), 答案))
    赋值 (该题正确, 真)
.否则
    赋值 (该题正确, 假)
.如果结束
.如果 (等于 (对错提示, 真))
    .如果 (等于 (该题正确, 真))
        赋值 (.标题, “正确！您真聪明，希望继续发扬！”)
    .否则
        .如果 (等于 (.内容, “”))
            赋值 (.标题, “走马观花也很好。不过一步一个脚印地走要显得踏实些...”)
        .否则
            赋值 (.标题, “错了！下次要认真看清楚题目哦！”)
        .如果结束
        
    .如果结束
    
.否则
    
    
.如果结束
.如果 (小于 (到整数 (.内容), 取记录数 ()))
    .如果 (并且 (等于 (错题重做, 真), 等于 (该题正确, 假), 或者 (等于 (.内容, “单项选择”), 等于 (.内容, “多项选择”))))
        
    .否则
        赋值 (.内容, 到文本 (相加 (到整数 (.内容), 1)))
    .如果结束
    
.否则
    赋值 (.内容, “1”)
    
.如果结束

.如果 (等于 (出题窗口., “考试模式”))
    .如果 (不等于 (读 (#用户答案), “”))
        赋值 (已做题数, 相加 (已做题数, 1))
    .否则
        
    .如果结束
    .如果 (大于或等于 (已做题数, 取记录数 ()))
        赋值 (.标题, “您已完成全部题目，可以交卷了。”)
        
    .否则
        
    .如果结束
     ' .如果 (或者 (等于 (出题窗口..内容, “简答”), 等于 (出题窗口..内容, “论述”)))
         ' .如果 (等于 (材料文本窗口被打开, 真))
             ' 材料文本窗口._保存文本按钮_被单击 ()
        .否则
            
        .如果结束
        
        
        
    .否则
        
    .如果结束
    
    
    获取焦点 ()
    
    
.否则
    获取焦点 ()
.如果结束





_题号组合框_编辑内容被改变 ()

标记答题选项 ()


.子程序 显示题目, 空白型, , 
.参数 题目序号, 整数型, , 

.局部变量 变量1, 整数型, , , 
.局部变量 文件号1, 整数型, , , 

赋值 (加题状态, 假)
赋值 (.禁止, 假)
赋值 (.可视, 假)
赋值 (., 假)
到首记录 ()
.计次循环首 (取记录数 (), 变量1)
    .如果 (等于 (读 (#题目序号), 题目序号))
        赋值 (.内容, 读 (#科目名称))
        赋值 (.内容, 到文本 (读 (#章目编号)))
        赋值 (.内容, 到文本 (读 (#节序编号)))
        赋值 (.内容, 读 (#知识范围))
        赋值 (.内容, 读 (#题目类型))
        
         ' _选项组合框_编辑内容被改变 ()
        赋值 (.内容, 到文本 (读 (#题目序号)))
        赋值 (.内容, 到文本 (读 (#分值)))
        赋值 (.内容, 到文本 (读 (#时间)))
        赋值 (本题时间, 读 (#时间))
        赋值 (.内容, 读 (#难度系数))
        赋值 (.内容, 读 (#问题))
        
        .如果 (并且 (等于 (出题窗口., “考试模式”), 等于 (.内容, “填空”)))
            赋值 (填空问题文本, .内容)
            赋值 (.内容, “”)
            赋值 (.内容, “”)
            赋值 (.内容, “”)
            赋值 (.内容, “”)
            赋值 (.内容, “”)
            赋值 (.内容, “”)
            赋值 (.内容, “”)
            赋值 (.内容, “”)
            赋值 (.内容, “”)
            赋值 (.内容, “”)
            
        .否则
            赋值 (.内容, 读 (#选择项一))
            赋值 (.内容, 读 (#选择项二))
            赋值 (.内容, 读 (#选择项三))
            赋值 (.内容, 读 (#选择项四))
            赋值 (.内容, 读 (#选择项五))
            赋值 (.内容, 读 (#选择项六))
            赋值 (.内容, 读 (#选择项七))
            赋值 (.内容, 读 (#选择项八))
            赋值 (.内容, 读 (#选择项九))
            赋值 (.内容, 读 (#选择项十))
            
        .如果结束
         ' .如果 (并且 (等于 (出题窗口., “考试模式”), 等于 (.内容, “填空”)))
            
        .否则
            
        .如果结束
        赋值 (.内容, 到文本 (读 (#选项)))
        .如果 (等于 (出题窗口., “出题模式”))
            .如果 (等于 (文件是否存在 (相加 (题库路径, “\”, 取文本左边 (读 (#问题), 10), “答案.txt”)), 真))
                赋值 (文件号1, 打开文件 (相加 (题库路径, “\”, 取文本左边 (读 (#问题), 10), “答案.txt”), , ))
                 ' .如果 (等于 (取文本左边 (读入文本 (文件号1, ), 取文本长度 (读 (#答案))), 读 (#答案)))
                    赋值 (.内容, 读入文本 (文件号1, ))
                .否则
                     ' 答题编辑框.内容 ＝ 读 (#答案)
                .如果结束
                
                关闭文件 (文件号1)
                
            .否则
                赋值 (.内容, 读 (#答案))
            .如果结束
            
            赋值 (.内容, 读 (#提示信息))
        .否则
            赋值 (.内容, 读 (#用户答案)) ' 出题窗口.标题 ＝ “考试模式”
            赋值 (答案, 读 (#答案))
            赋值 (提示信息, 读 (#提示信息))
            
        .如果结束
        
        .如果 (等于 (.内容, “材料分析”))
            .如果 (等于 (寻找文本 (读 (#材料文本), “\”, , 假), -1))
                赋值 (材料文本路径, 相加 (题库路径, “\”, 读 (#材料文本)))
                
            .否则
                赋值 (材料文本路径, 读 (#材料文本))
            .如果结束
             ' 信息框 (材料文本路径, 0, )
            
        .否则
            
        .如果结束
        跳出循环 ()
    .否则
        
    .如果结束
    跳过 ()
.计次循环尾 ()
 ' _时间组合框_列表项被选择 ()

.子程序 _时间组合框_列表项被选择, 空白型, , 
.如果 (等于 (出题窗口., “考试模式”))
    .如果 (等于 (限时换题, 假))
        赋值 (.最大位置, 到整数 (.内容))
    .否则
        赋值 (.最大位置, 本题时间)
    .如果结束
    赋值 (.位置, 0)
    
.否则
    赋值 (时间分值比, 到整数 (相除 (到整数 (.内容), 到整数 (.内容))))
    信息框 (相加 (“当前 [时间分值比] 为：每分值 [”, 到文本 (时间分值比), “] 秒。”), 0, “时间与分值之比改变...”)
.如果结束


.子程序 _导入按钮_被单击, 空白型, , 
.局部变量 被导入文本文件号, 整数型, , , 
.局部变量 被导入文本, 文本型, , , 
.局部变量 一行文本, 文本型, , "11", 
.局部变量 分割文本1, 文本型, , "2", 
.局部变量 临时题目, 题目, , "0", 

 ' ' 出题模式 ＝ 取反 (出题模式)
 ' .如果 (等于 (打开 (), 真))
     ' 被导入文本文件号 ＝ 打开文件 (导入题库通用对话框.文件名, , )
     ' 移到文件首 (被导入文本文件号)
     ' 被导入文本 ＝ 读入文本 (被导入文本文件号, )
     ' .判断循环首 (小于 (取读写位置 (被导入文本文件号), 取文本长度 (被导入文本)))
         ' 一行文本 [1] ＝ 读入一行 (被导入文本文件号)
         ' 分割文本1 ＝ 分割文本 (一行文本 [1], “.”, 2)
         ' .如果 (大于 (到整数 (分割文本1 [1]), 0))
             ' 临时题目.问题 ＝ 分割文本1 [2]
            
        .否则
            
        .如果结束
         ' 移动读写位置 (被导入文本文件号, , 取文本长度 (一行文本))
        
     ' .判断循环尾 ()
 ' .否则
    
.如果结束
载入 (导入单题窗口, , 假)

.子程序 _删除按钮_被单击, 空白型, , 
.如果 (等于 (信息框 (“该操作不可恢复！确定删除吗？”, #确认取消钮, “删除题目”), #确认钮))
    删除 ()
    彻底删除 ()
    _出题窗口_创建完毕 ()
    
.否则
    
.如果结束


.子程序 树型框题型目录初始化, 空白型, , 
清空 ()
.加入项目 (“名词解释”, , , )
.加入项目 (“单项选择”, , , )
.加入项目 (“多项选择”, , , )
.加入项目 (“材料分析”, , , )
.加入项目 (“填空”, , , )
.加入项目 (“辨析”, , , )
.加入项目 (“简答”, , , )
.加入项目 (“论述”, , , )


.子程序 _A选择框_被单击, 空白型, , 
赋值 (改变答题编辑框内容, 假)
.如果 (或者 (等于 (.内容, “单项选择”), 等于 (.内容, “辨析”)))
    .如果 (等于 (.选中, 真))
        连续赋值 (假, .选中, .选中, .选中, .选中, .选中, .选中, .选中, .选中, .选中)
        连续赋值 (#黑色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色)
        
         ' 连续赋值 (假, A选择框.选中, B选择框.选中, C选择框.选中, D选择框.选中, E选择框.选中, F选择框.选中, G选择框.选中, H选择框.选中, I选择框.选中, J选择框.选中)
         ' 连续赋值 (#黑色, A选择框.文本颜色, B选择框.文本颜色, C选择框.文本颜色, D选择框.文本颜色, E选择框.文本颜色, F选择框.文本颜色, G选择框.文本颜色, H选择框.文本颜色, I选择框.文本颜色, J选择框.文本颜色)
        
        赋值 (单项选择当前选择, “A”)
        赋值 (.内容, 单项选择当前选择)
        赋值 (.文本颜色, #红色)
        .如果真 (等于 (出题窗口., “考试模式”))
            保存答案 ()
            .如果 (不等于 (.内容, #辨析))
                _下一题按钮_被单击 ()
            .否则
                
            .如果结束
            
        .如果真结束
        
    .否则
        赋值 (.文本颜色, #黑色)
        赋值 (.内容, “”)
    .如果结束
    
.否则
    .如果 (或者 (等于 (.内容, “多项选择”), 等于 (.内容, “材料分析”)))
        赋值 (.内容, “”)
        连续赋值 (#黑色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色)
        多项选择答案识别 ()
        .如果真 (等于 (出题窗口., “考试模式”))
            保存答案 ()
        .如果真结束
        
    .否则
        
        
        
        
    .如果结束
    
.如果结束

获取焦点 ()

.子程序 _B选择框_被单击, 空白型, , 
赋值 (改变答题编辑框内容, 假)
.如果 (或者 (等于 (.内容, “单项选择”), 等于 (.内容, “辨析”)))
    .如果 (等于 (.选中, 真))
        连续赋值 (假, .选中, .选中, .选中, .选中, .选中, .选中, .选中, .选中, .选中)
        连续赋值 (#黑色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色)
        
        
        赋值 (单项选择当前选择, “B”)
        赋值 (.内容, 单项选择当前选择)
        赋值 (.文本颜色, #红色)
        .如果真 (等于 (出题窗口., “考试模式”))
            保存答案 ()
            _下一题按钮_被单击 ()
        .如果真结束
        
    .否则
        赋值 (.文本颜色, #黑色)
        赋值 (.内容, “”)
    .如果结束
    
.否则
    .如果 (或者 (等于 (.内容, “多项选择”), 等于 (.内容, “材料分析”)))
        赋值 (.内容, “”)
        连续赋值 (#黑色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色)
        
        多项选择答案识别 ()
        .如果真 (等于 (出题窗口., “考试模式”))
            保存答案 ()
            
        .如果真结束
        
    .否则
         ' .如果 (等于 (.内容, “辨析”))
             ' .如果 (等于 (.选中, 真))
                 ' 连续赋值 (假, A选择框.选中)
                 ' 连续赋值 (#黑色, A选择框.文本颜色)
                 ' 单项选择当前选择 ＝ “B”
                 ' 答题编辑框.内容 ＝ 单项选择当前选择
                 ' B选择框.文本颜色 ＝ #红色
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .如果结束
    
.如果结束
获取焦点 ()

.子程序 _C选择框_被单击, 空白型, , 
赋值 (改变答题编辑框内容, 假)
.如果 (或者 (等于 (.内容, “单项选择”), 等于 (.内容, “辨析”)))
    .如果 (等于 (.选中, 真))
        连续赋值 (假, .选中, .选中, .选中, .选中, .选中, .选中, .选中, .选中, .选中)
        连续赋值 (#黑色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色)
        
        赋值 (单项选择当前选择, “C”)
        赋值 (.内容, 单项选择当前选择)
        赋值 (.文本颜色, #红色)
        .如果真 (等于 (出题窗口., “考试模式”))
            保存答案 ()
            _下一题按钮_被单击 ()
        .如果真结束
        
    .否则
        赋值 (.文本颜色, #黑色)
        赋值 (.内容, “”)
    .如果结束
    
.否则
    .如果 (或者 (等于 (.内容, “多项选择”), 等于 (.内容, “材料分析”)))
        赋值 (.内容, “”)
        
        连续赋值 (#黑色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色)
        
        连续赋值 (#黑色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色)
        多项选择答案识别 ()
        .如果真 (等于 (出题窗口., “考试模式”))
            保存答案 ()
        .如果真结束
        
    .否则
        
        
        
        
    .如果结束
    
.如果结束
获取焦点 ()

.子程序 _D选择框_被单击, 空白型, , 
赋值 (改变答题编辑框内容, 假)
.如果 (或者 (等于 (.内容, “单项选择”), 等于 (.内容, “辨析”)))
    .如果 (等于 (.选中, 真))
        连续赋值 (假, .选中, .选中, .选中, .选中, .选中, .选中, .选中, .选中, .选中)
        连续赋值 (#黑色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色)
        
        赋值 (单项选择当前选择, “D”)
        赋值 (.内容, 单项选择当前选择)
        赋值 (.文本颜色, #红色)
        .如果真 (等于 (出题窗口., “考试模式”))
            保存答案 ()
            _下一题按钮_被单击 ()
        .如果真结束
        
    .否则
        赋值 (.文本颜色, #黑色)
        赋值 (.内容, “”)
    .如果结束
    
.否则
    .如果 (或者 (等于 (.内容, “多项选择”), 等于 (.内容, “材料分析”)))
        赋值 (.内容, “”)
        
        连续赋值 (#黑色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色)
        
        
        多项选择答案识别 ()
        .如果真 (等于 (出题窗口., “考试模式”))
            保存答案 ()
        .如果真结束
        
    .否则
        
        
        
        
    .如果结束
    
.如果结束
获取焦点 ()

.子程序 _E选择框_被单击, 空白型, , 
赋值 (改变答题编辑框内容, 假)
.如果 (或者 (等于 (.内容, “单项选择”), 等于 (.内容, “辨析”)))
    .如果 (等于 (.选中, 真))
        连续赋值 (假, .选中, .选中, .选中, .选中, .选中, .选中, .选中, .选中, .选中)
        连续赋值 (#黑色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色)
        
        赋值 (单项选择当前选择, “E”)
        赋值 (.内容, 单项选择当前选择)
        赋值 (.文本颜色, #红色)
        .如果真 (等于 (出题窗口., “考试模式”))
            保存答案 ()
            _下一题按钮_被单击 ()
        .如果真结束
        
    .否则
        赋值 (.文本颜色, #黑色)
        赋值 (.内容, “”)
    .如果结束
    
.否则
    .如果 (或者 (等于 (.内容, “多项选择”), 等于 (.内容, “材料分析”)))
        赋值 (.内容, “”)
        
        连续赋值 (#黑色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色)
        
        
        多项选择答案识别 ()
        .如果真 (等于 (出题窗口., “考试模式”))
            保存答案 ()
        .如果真结束
        
    .否则
        
    .如果结束
    
.如果结束

获取焦点 ()




.子程序 _F选择框_被单击, 空白型, , 
赋值 (改变答题编辑框内容, 假)
.如果 (或者 (等于 (.内容, “单项选择”), 等于 (.内容, “辨析”)))
    .如果 (等于 (.选中, 真))
        连续赋值 (假, .选中, .选中, .选中, .选中, .选中, .选中, .选中, .选中, .选中)
        连续赋值 (#黑色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色)
        
        赋值 (单项选择当前选择, “F”)
        赋值 (.内容, 单项选择当前选择)
        赋值 (.文本颜色, #红色)
        .如果真 (等于 (出题窗口., “考试模式”))
            保存答案 ()
            _下一题按钮_被单击 ()
        .如果真结束
        
    .否则
        赋值 (.文本颜色, #黑色)
        赋值 (.内容, “”)
    .如果结束
    
.否则
    .如果 (或者 (等于 (.内容, “多项选择”), 等于 (.内容, “材料分析”)))
        赋值 (.内容, “”)
        
        连续赋值 (#黑色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色)
        
        
        多项选择答案识别 ()
        .如果真 (等于 (出题窗口., “考试模式”))
            保存答案 ()
        .如果真结束
        
    .否则
        
    .如果结束
    
.如果结束
获取焦点 ()


.子程序 _G选择框_被单击, 空白型, , 
赋值 (改变答题编辑框内容, 假)
.如果 (或者 (等于 (.内容, “单项选择”), 等于 (.内容, “辨析”)))
    .如果 (等于 (.选中, 真))
        连续赋值 (假, .选中, .选中, .选中, .选中, .选中, .选中, .选中, .选中, .选中)
        连续赋值 (#黑色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色)
        
        赋值 (单项选择当前选择, “G”)
        赋值 (.内容, 单项选择当前选择)
        赋值 (.文本颜色, #红色)
        .如果真 (等于 (出题窗口., “考试模式”))
            保存答案 ()
            _下一题按钮_被单击 ()
        .如果真结束
        
    .否则
        赋值 (.文本颜色, #黑色)
        赋值 (.内容, “”)
    .如果结束
    
.否则
    .如果 (或者 (等于 (.内容, “多项选择”), 等于 (.内容, “材料分析”)))
        赋值 (.内容, “”)
        
        连续赋值 (#黑色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色)
        
        
        多项选择答案识别 ()
        .如果真 (等于 (出题窗口., “考试模式”))
            保存答案 ()
        .如果真结束
        
    .否则
        
    .如果结束
    
.如果结束


.子程序 _H选择框_被单击, 空白型, , 
赋值 (改变答题编辑框内容, 假)
.如果 (或者 (等于 (.内容, “单项选择”), 等于 (.内容, “辨析”)))
    .如果 (等于 (.选中, 真))
        连续赋值 (假, .选中, .选中, .选中, .选中, .选中, .选中, .选中, .选中, .选中)
        连续赋值 (#黑色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色)
        
        赋值 (单项选择当前选择, “H”)
        赋值 (.内容, 单项选择当前选择)
        赋值 (.文本颜色, #红色)
        .如果真 (等于 (出题窗口., “考试模式”))
            保存答案 ()
            _下一题按钮_被单击 ()
        .如果真结束
        
    .否则
        赋值 (.文本颜色, #黑色)
        赋值 (.内容, “”)
    .如果结束
    
.否则
    .如果 (或者 (等于 (.内容, “多项选择”), 等于 (.内容, “材料分析”)))
        赋值 (.内容, “”)
        
        连续赋值 (#黑色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色)
        
        
        多项选择答案识别 ()
        .如果真 (等于 (出题窗口., “考试模式”))
            保存答案 ()
        .如果真结束
        
    .否则
        
    .如果结束
    
.如果结束


.子程序 _I选择框_被单击, 空白型, , 
赋值 (改变答题编辑框内容, 假)
.如果 (或者 (等于 (.内容, “单项选择”), 等于 (.内容, “辨析”)))
    .如果 (等于 (.选中, 真))
        连续赋值 (假, .选中, .选中, .选中, .选中, .选中, .选中, .选中, .选中, .选中)
        连续赋值 (#黑色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色)
        
        赋值 (单项选择当前选择, “I”)
        赋值 (.内容, 单项选择当前选择)
        赋值 (.文本颜色, #红色)
        .如果真 (等于 (出题窗口., “考试模式”))
            保存答案 ()
            _下一题按钮_被单击 ()
        .如果真结束
        
    .否则
        赋值 (.文本颜色, #黑色)
        赋值 (.内容, “”)
    .如果结束
    
.否则
    .如果 (或者 (等于 (.内容, “多项选择”), 等于 (.内容, “材料分析”)))
        赋值 (.内容, “”)
        
        连续赋值 (#黑色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色)
        
        
        多项选择答案识别 ()
        .如果真 (等于 (出题窗口., “考试模式”))
            保存答案 ()
        .如果真结束
        
    .否则
        
    .如果结束
    
.如果结束


.子程序 _J选择框_被单击, 空白型, , 
赋值 (改变答题编辑框内容, 假)
.如果 (或者 (等于 (.内容, “单项选择”), 等于 (.内容, “辨析”)))
    .如果 (等于 (.选中, 真))
        连续赋值 (假, .选中, .选中, .选中, .选中, .选中, .选中, .选中, .选中, .选中)
        连续赋值 (#黑色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色)
        
        赋值 (单项选择当前选择, “J”)
        赋值 (.内容, 单项选择当前选择)
        赋值 (.文本颜色, #红色)
        .如果真 (等于 (出题窗口., “考试模式”))
            保存答案 ()
            _下一题按钮_被单击 ()
        .如果真结束
        
    .否则
        赋值 (.文本颜色, #黑色)
        赋值 (.内容, “”)
    .如果结束
    
.否则
    .如果 (或者 (等于 (.内容, “多项选择”), 等于 (.内容, “材料分析”)))
        赋值 (.内容, “”)
        
        连续赋值 (#黑色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色)
        
        
        多项选择答案识别 ()
        .如果真 (等于 (出题窗口., “考试模式”))
            保存答案 ()
        .如果真结束
        
    .否则
        
    .如果结束
    
.如果结束


.子程序 多项选择答案识别, 空白型, , 
.如果 (等于 (.选中, 真))
    .如果 (小于 (寻找文本 (.内容, “A”, , 真), 0))
        赋值 (.内容, 相加 (.内容, “A”))
        赋值 (.文本颜色, #红色)
    .否则
        赋值 (.文本颜色, #黑色)
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (.选中, 真))
    .如果 (小于 (寻找文本 (.内容, “B”, , 真), 0))
        赋值 (.内容, 相加 (.内容, “B”))
        赋值 (.文本颜色, #红色)
    .否则
        赋值 (.文本颜色, #黑色)
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (.选中, 真))
    .如果 (小于 (寻找文本 (.内容, “C”, , 真), 0))
        赋值 (.内容, 相加 (.内容, “C”))
        赋值 (.文本颜色, #红色)
    .否则
        赋值 (.文本颜色, #黑色)
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (.选中, 真))
    .如果 (小于 (寻找文本 (.内容, “D”, , 真), 0))
        赋值 (.内容, 相加 (.内容, “D”))
        赋值 (.文本颜色, #红色)
    .否则
        赋值 (.文本颜色, #黑色)
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (.选中, 真))
    .如果 (小于 (寻找文本 (.内容, “E”, , 真), 0))
        赋值 (.内容, 相加 (.内容, “E”))
        赋值 (.文本颜色, #红色)
    .否则
        赋值 (.文本颜色, #黑色)
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (.选中, 真))
    .如果 (小于 (寻找文本 (.内容, “F”, , 真), 0))
        赋值 (.内容, 相加 (.内容, “F”))
        赋值 (.文本颜色, #红色)
    .否则
        赋值 (.文本颜色, #黑色)
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (.选中, 真))
    .如果 (小于 (寻找文本 (.内容, “G”, , 真), 0))
        赋值 (.内容, 相加 (.内容, “G”))
        赋值 (.文本颜色, #红色)
    .否则
        赋值 (.文本颜色, #黑色)
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (.选中, 真))
    .如果 (小于 (寻找文本 (.内容, “H”, , 真), 0))
        赋值 (.内容, 相加 (.内容, “H”))
        赋值 (.文本颜色, #红色)
    .否则
        赋值 (.文本颜色, #黑色)
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (.选中, 真))
    .如果 (小于 (寻找文本 (.内容, “I”, , 真), 0))
        赋值 (.内容, 相加 (.内容, “I”))
        赋值 (.文本颜色, #红色)
    .否则
        赋值 (.文本颜色, #黑色)
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (.选中, 真))
    .如果 (小于 (寻找文本 (.内容, “J”, , 真), 0))
        赋值 (.内容, 相加 (.内容, “J”))
        赋值 (.文本颜色, #红色)
    .否则
        赋值 (.文本颜色, #黑色)
    .如果结束
    
.否则
    
.如果结束


.子程序 标记答题选项, 空白型, , 根据答题框内容来标记选择项
.局部变量 填空答案文本, 文本型, , "0", 

连续赋值 (#黑色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色)
连续赋值 (假, .选中, .选中, .选中, .选中, .选中, .选中, .选中, .选中, .选中, .选中)
 ' .如果 (等于 (出题窗口., “考试模式”))
     ' 答题编辑框.内容 ＝ 读 (#用户答案)
.否则
    .如果 (不等于 (.内容, “填空”))
         ' 连续赋值 (假, A选择框.选中, B选择框.选中, C选择框.选中, D选择框.选中, E选择框.选中)
        .如果 (大于 (寻找文本 (.内容, “A”, , 假), 0))
            赋值 (.选中, 真)
            赋值 (.文本颜色, #红色)
        .否则
            
        .如果结束
        .如果 (大于 (寻找文本 (.内容, “B”, , 假), 0))
            赋值 (.选中, 真)
            赋值 (.文本颜色, #红色)
        .否则
            
        .如果结束
        .如果 (大于 (寻找文本 (.内容, “C”, , 假), 0))
            赋值 (.选中, 真)
            赋值 (.文本颜色, #红色)
        .否则
            
        .如果结束
        .如果 (大于 (寻找文本 (.内容, “D”, , 假), 0))
            赋值 (.选中, 真)
            赋值 (.文本颜色, #红色)
        .否则
            
        .如果结束
        .如果 (大于 (寻找文本 (.内容, “E”, , 假), 0))
            赋值 (.选中, 真)
            赋值 (.文本颜色, #红色)
        .否则
            
        .如果结束
        .如果 (大于 (寻找文本 (.内容, “F”, , 假), 0))
            赋值 (.选中, 真)
            赋值 (.文本颜色, #红色)
        .否则
            
        .如果结束
        .如果 (大于 (寻找文本 (.内容, “G”, , 假), 0))
            赋值 (.选中, 真)
            赋值 (.文本颜色, #红色)
        .否则
            
        .如果结束
        .如果 (大于 (寻找文本 (.内容, “H”, , 假), 0))
            赋值 (.选中, 真)
            赋值 (.文本颜色, #红色)
        .否则
            
        .如果结束
        .如果 (大于 (寻找文本 (.内容, “I”, , 假), 0))
            赋值 (.选中, 真)
            赋值 (.文本颜色, #红色)
        .否则
            
        .如果结束
        .如果 (大于 (寻找文本 (.内容, “J”, , 假), 0))
            赋值 (.选中, 真)
            赋值 (.文本颜色, #红色)
        .否则
            
        .如果结束
        
        
        
    .否则
        .如果 (不等于 (.内容, “”))
            
            .计次循环首 (4, )
                .如果 (不等于 (寻找文本 (.内容, “  ”, , 假), -1))
                    赋值 (.内容, 文本替换 (.内容, 寻找文本 (.内容, “  ”, , 假), 2, “ ”))
                    赋值 (.起始选择位置, 取文本长度 (.内容))
                .否则
                    跳出循环 ()
                .如果结束
                
            .计次循环尾 ()
            
            赋值 (填空答案文本, 分割文本 (.内容, “ ”, ))
            .如果 (大于 (取数组成员数 (填空答案文本), 到整数 (.内容)))
                赋值 (.内容, 文本替换 (.内容, 取文本长度 (.内容), 1, ))
                 ' 答题编辑框.起始选择位置 ＝ 取文本长度 (答题编辑框.内容)
                 ' 重定义数组 (填空答案文本, 真, 到整数 (选项组合框.内容))
            .否则
                
            .如果结束
            
             ' 信息框 (到文本 (取数组成员数 (填空答案文本)), 0, )
            
            赋值 (.内容, “”)
            赋值 (.内容, “”)
            赋值 (.内容, “”)
            赋值 (.内容, “”)
            赋值 (.内容, “”)
            赋值 (.内容, “”)
            赋值 (.内容, “”)
            赋值 (.内容, “”)
            赋值 (.内容, “”)
            赋值 (.内容, “”)
            
            
            .如果 (等于 (取数组成员数 (填空答案文本), 1))
                 ' 固定长度 ＝ 取文本长度 (答题编辑框.内容)
                赋值 (.内容, 填空答案文本 [1])
            .否则
                
            .如果结束
            .如果 (等于 (取数组成员数 (填空答案文本), 2))
                 ' 固定长度 ＝ 取文本长度 (答题编辑框.内容)
                赋值 (.内容, 填空答案文本 [1])
                赋值 (.内容, 填空答案文本 [2])
            .否则
                
            .如果结束
            .如果 (等于 (取数组成员数 (填空答案文本), 3))
                 ' 固定长度 ＝ 取文本长度 (答题编辑框.内容)
                赋值 (.内容, 填空答案文本 [1])
                赋值 (.内容, 填空答案文本 [2])
                赋值 (.内容, 填空答案文本 [3])
            .否则
                
            .如果结束
            .如果 (等于 (取数组成员数 (填空答案文本), 4))
                 ' 固定长度 ＝ 取文本长度 (答题编辑框.内容)
                赋值 (.内容, 填空答案文本 [1])
                赋值 (.内容, 填空答案文本 [2])
                赋值 (.内容, 填空答案文本 [3])
                赋值 (.内容, 填空答案文本 [4])
                
            .否则
                
            .如果结束
            .如果 (等于 (取数组成员数 (填空答案文本), 5))
                赋值 (固定长度文本, .内容)
                
                赋值 (.内容, 填空答案文本 [1])
                赋值 (.内容, 填空答案文本 [2])
                赋值 (.内容, 填空答案文本 [3])
                赋值 (.内容, 填空答案文本 [4])
                赋值 (.内容, 填空答案文本 [5])
            .否则
                
            .如果结束
            .如果 (等于 (取数组成员数 (填空答案文本), 6))
                赋值 (固定长度文本, .内容)
                
                赋值 (.内容, 填空答案文本 [1])
                赋值 (.内容, 填空答案文本 [2])
                赋值 (.内容, 填空答案文本 [3])
                赋值 (.内容, 填空答案文本 [4])
                赋值 (.内容, 填空答案文本 [5])
                赋值 (.内容, 填空答案文本 [6])
                
            .否则
                
            .如果结束
            .如果 (等于 (取数组成员数 (填空答案文本), 7))
                赋值 (固定长度文本, .内容)
                
                赋值 (.内容, 填空答案文本 [1])
                赋值 (.内容, 填空答案文本 [2])
                赋值 (.内容, 填空答案文本 [3])
                赋值 (.内容, 填空答案文本 [4])
                赋值 (.内容, 填空答案文本 [5])
                赋值 (.内容, 填空答案文本 [6])
                赋值 (.内容, 填空答案文本 [7])
                
            .否则
                
            .如果结束
            .如果 (等于 (取数组成员数 (填空答案文本), 8))
                赋值 (固定长度文本, .内容)
                
                赋值 (.内容, 填空答案文本 [1])
                赋值 (.内容, 填空答案文本 [2])
                赋值 (.内容, 填空答案文本 [3])
                赋值 (.内容, 填空答案文本 [4])
                赋值 (.内容, 填空答案文本 [5])
                赋值 (.内容, 填空答案文本 [6])
                赋值 (.内容, 填空答案文本 [7])
                赋值 (.内容, 填空答案文本 [8])
            .否则
                
            .如果结束
            .如果 (等于 (取数组成员数 (填空答案文本), 9))
                赋值 (固定长度文本, .内容)
                
                赋值 (.内容, 填空答案文本 [1])
                赋值 (.内容, 填空答案文本 [2])
                赋值 (.内容, 填空答案文本 [3])
                赋值 (.内容, 填空答案文本 [4])
                赋值 (.内容, 填空答案文本 [5])
                赋值 (.内容, 填空答案文本 [6])
                赋值 (.内容, 填空答案文本 [7])
                赋值 (.内容, 填空答案文本 [8])
                赋值 (.内容, 填空答案文本 [9])
                
                
            .否则
                
            .如果结束
            .如果 (等于 (取数组成员数 (填空答案文本), 10))
                赋值 (固定长度文本, .内容)
                
                赋值 (.内容, 填空答案文本 [1])
                赋值 (.内容, 填空答案文本 [2])
                赋值 (.内容, 填空答案文本 [3])
                赋值 (.内容, 填空答案文本 [4])
                赋值 (.内容, 填空答案文本 [5])
                赋值 (.内容, 填空答案文本 [6])
                赋值 (.内容, 填空答案文本 [7])
                赋值 (.内容, 填空答案文本 [8])
                赋值 (.内容, 填空答案文本 [9])
                赋值 (.内容, 填空答案文本 [10])
                
            .否则
                
            .如果结束
            
            
            
            .如果 (大于 (取数组成员数 (填空答案文本), 取数组成员数 (填空答案文本)))
                赋值 (.内容, 固定长度文本)
                赋值 (.起始选择位置, 取文本长度 (.内容))
            .否则
                
            .如果结束
            
        .否则
             ' 备选答案一编辑框.内容 ＝ “”
             ' 备选答案二编辑框.内容 ＝ “”
             ' 备选答案三编辑框.内容 ＝ “”
             ' 备选答案四编辑框.内容 ＝ “”
             ' 备选答案五编辑框.内容 ＝ “”
            
            
        .如果结束
        
        
        
        
        
    .如果结束
    
.如果结束




.子程序 _切换模式按钮_被单击, 空白型, , 


.如果 (等于 (.标题, “开始考试”))
    赋值 (出题模式, 假)
     ' 全部关闭 ()
    赋值 (切换模式按钮被单击, 真)
    载入 (抽题窗口, , 真)
    _出题窗口_创建完毕 ()
     ' 销毁 ()
.否则
    .如果 (等于 (.标题, “开始出题”))
        赋值 (出题模式, 真)
        赋值 (切换模式按钮被单击, 假)
        赋值 (.禁止, 假)
        赋值 (.禁止, 假)
        赋值 (.禁止, 假)
        赋值 (.禁止, 假)
        赋值 (.禁止, 假)
        赋值 (.标题, “添加问题图片”)
        赋值 (.时钟周期, 0)
        赋值 (题库, 初始打开题库)
        
        
        赋值 (不可回头, 假)
        赋值 (错题重做, 假)
        赋值 (问题闪现, 假)
        
        _出题窗口_创建完毕 ()
    .否则
        
    .如果结束
    
.如果结束


.子程序 _答案按钮_被单击, 空白型, , 
 ' 提示编辑框.内容 ＝ 提示信息
 ' 信息框 (答案, 0, )

.子程序 _确定按钮_被单击, 空白型, , 
 ' 完成题数 ＝ 完成题数 ＋ 1
保存答案 ()
.如果 (等于 (.内容, 答案))
    赋值 (该题正确, 真)
     ' 写 (#抽题标记, “对”)
     ' 分数 ＝ 分数 ＋ 到整数 (分值组合框.内容)
     ' 正确题数 ＝ 正确题数 ＋ 1
    
.否则
     ' 分数 ＝ 分数 － 1
    赋值 (该题正确, 假)
     ' 写 (#抽题标记, “错”)
     ' 复制记录 (取运行目录 () ＋ “\错题统计.edb”, , )
     ' 错误题数 ＝ 错误题数 ＋ 1
     ' 错题 ＝ 错题 ＋ “,” ＋ 题号组合框.内容
    
.如果结束
_下一题按钮_被单击 ()


.子程序 _答案按钮_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (临时答案, .内容)
赋值 (.内容, 提示信息)
赋值 (.内容, 答案)
标记答题选项 ()


.子程序 _答案按钮_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.内容, “”)
.如果 (等于 (.内容, #填空))
    连续赋值 (“”, .内容, .内容, .内容, .内容, .内容)
.否则
    
.如果结束
 ' .如果 (不等于 (临时答案, “”))
    赋值 (.内容, 临时答案)
.否则
     ' 答题编辑框.内容 ＝ “在此输入答案”
.如果结束


标记答题选项 ()


.子程序 _提示按钮_被单击, 空白型, , 
 ' 写 (#抽题标记, “错”)


.子程序 _确定按钮_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果 (等于 (对错提示, 真))
    .如果 (等于 (.内容, 答案))
        0.置文本 (“正确！”)
         ' 确定按钮.标题 ＝ “对了”
        
    .否则
        0.置文本 (“错误！”)
         ' 确定按钮.标题 ＝ “错了”
        
    .如果结束
    
.否则
    
.如果结束


.子程序 _确定按钮_鼠标右键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.标题, “确定”)



.子程序 _时钟1_周期事件, 空白型, , 
赋值 (.位置, 相加 (.位置, 1))
赋值 (.标题, 相加 (到文本 (.位置), “：”, 到文本 (.最大位置)))
.如果 (大于 (.位置, .最大位置))
    .如果 (等于 (限时换题, 真))
        _确定按钮_被单击 ()
    .否则
        赋值 (.文本颜色, #红色)
    .如果结束
    
    
.否则
    赋值 (.文本颜色, #黑色)
.如果结束
赋值 (.位置, 相加 (.位置, 1))
赋值 (.标题, 相加 (到文本 (.位置), “：”, 到文本 (.最大位置)))
.如果 (等于 (相减 (.最大位置, .位置), 60))
    1.置文本 (“离交卷时间：1分钟”)
.否则
    
.如果结束

 ' .如果 (等于 (出题窗口., “出题模式”))
     ' 考试时钟分组框.可视 ＝ 假
     ' 考试时钟分组框.禁止 ＝ 真
.否则
    
.如果结束
.如果 (等于 (问题闪现, 真))
    .如果 (等于 (问题闪现内容清空, 假))
        
        .如果 (大于 (.位置, 2))
            连续赋值 (“”, .内容, .内容, .内容, .内容, .内容, .内容, .内容, .内容, .内容, .内容, .内容, .内容, .内容)
            赋值 (问题闪现内容清空, 真)
            获取焦点 ()
        .否则
            赋值 (问题闪现内容清空, 假)
        .如果结束
        
    .否则
        .如果 (小于或等于 (.位置, 2))
            赋值 (问题闪现内容清空, 假)
        .否则
            
        .如果结束
        
    .如果结束
    
.否则
    
.如果结束


.如果 (大于 (.位置, .最大位置))
     ' 时钟1.时钟周期 ＝ 0
    赋值 (提前时间, 0)
    
    载入 (考试结果统计窗口, , 假)
     ' 全部关闭 ()
    销毁 ()
.否则
    
.如果结束




.子程序 _交卷按钮_被单击, 空白型, , 
.局部变量 未完成题数, 整数型, , , 

赋值 (提前时间, 相减 (.最大位置, .位置))
赋值 (未完成题数, 0)
到首记录 ()
.计次循环首 (取记录数 (), )
    .如果 (等于 (读 (#用户答案), “”))
        赋值 (未完成题数, 相加 (未完成题数, 1))
    .否则
        
    .如果结束
    跳过 ()
.计次循环尾 ()

.如果 (等于 (信息框 (相加 (“剩余时间 [”, 到文本 (提前时间), “]秒。还有 [”, 到文本 (未完成题数), “] 个小题未做，确定交卷吗？”), #确认取消钮, ), #确认钮))
    赋值 (.时钟周期, 0)
    载入 (考试结果统计窗口, , 假)
    .如果 (大于 (取窗口句柄 (), 0))
        销毁 ()
    .否则
        
    .如果结束
    
.否则
     ' 到首记录 ()
     ' 查找 (读 (#题目序号) ＝ 题号)
    赋值 (提前时间, 0)
.如果结束
.如果 (等于 (材料文本窗口被打开, 真))
    材料文本窗口.销毁 ()
.否则
    
.如果结束


.子程序 保存答案, 空白型, , 
.如果 (不等于 (.内容, “在此输入答案”))
     ' 写 (#用户答案, 答题编辑框.内容)
    写 (#用户答案, 删首尾空 (.内容))
.否则
    
.如果结束


.子程序 _题目显示树型框_右键单击项目, 空白型, , 
.如果 (等于 (出题窗口., “出题模式”))
    .如果 (不等于 (.内容, “材料分析”))
        赋值 (.禁止, 真)
    .否则
        赋值 (.禁止, 假)
    .如果结束
    
    弹出菜单 ()
    
.否则
    
.如果结束



.子程序 _加题_被选择, 空白型, , 

_加题按钮_被单击 ()


.子程序 _删题_被选择, 空白型, , 

_删除按钮_被单击 ()




.子程序 _材料_被选择, 空白型, , 
.局部变量 纯文件名, 文本型, , , 

.如果 (等于 (.内容, “材料分析”))
    .如果 (等于 (打开 (), 真))
        赋值 (纯文件名, 取文本右边 (.文件名, 相减 (取文本长度 (.文件名), 倒找文本 (.文件名, “\”, , 假))))
        
        .如果 (等于 (.文件名, 相加 (题库路径, “\”, 纯文件名)))
            写 (#材料文本, 纯文件名)
        .否则
            .如果 (等于 (信息框 (“为方便题库备份，强烈建议复制该文件到题库文件夹。要复制吗？”, #确认取消钮, “复制文件提示”), #确认钮))
                创建目录 (题库路径)
                .如果 (等于 (文件是否存在 (相加 (题库路径, “\”, 纯文件名)), 假))
                    .如果 (复制文件 (.文件名, 相加 (题库路径, “\”, 纯文件名)))
                        写 (#材料文本, 纯文件名)
                        
                    .否则
                        信息框 (“复制文件失败！只能加为一般路径。”, 0, )
                        写 (#材料文本, .文件名)
                        
                    .如果结束
                    
                .否则
                    .如果 (等于 (信息框 (“该文件已存在,您要覆盖吗？”, #确认取消钮, “文件已存在”), #确认钮))
                        .如果 (复制文件 (.文件名, 相加 (题库路径, “\”, 纯文件名)))
                            写 (#材料文本, 纯文件名)
                            
                        .否则
                            输入框 (相加 (“源文件：”, .文件名, #换行符, “目标文件：”, 题库路径, “\”, 纯文件名), “重命名文件”, 纯文件名, 纯文件名, )
                            .如果 (复制文件 (.文件名, 相加 (题库路径, “\”, 纯文件名)))
                                写 (#材料文本, 纯文件名)
                                
                            .否则
                                信息框 (“复制文件失败！只能加为一般路径。”, 0, )
                                写 (#材料文本, .文件名)
                            .如果结束
                            
                        .如果结束
                        
                        
                    .否则
                        输入框 (相加 (“源文件：”, .文件名, #换行符, “目标文件：”, 题库路径, “\”, 纯文件名), “重命名文件”, 纯文件名, 纯文件名, )
                        .如果 (复制文件 (.文件名, 相加 (题库路径, “\”, 纯文件名)))
                            写 (#材料文本, 纯文件名)
                            
                        .否则
                            信息框 (“复制文件失败！只能加为一般路径。”, 0, )
                            写 (#材料文本, .文件名)
                        .如果结束
                        
                    .如果结束
                    
                .如果结束
                
            .否则
                
            .如果结束
            
        .如果结束
        
        
        
        
        
        .如果 (等于 (材料文本窗口被打开, 真))
            材料文本窗口.销毁 ()
        .否则
            
        .如果结束
        赋值 (材料文本路径, .文件名)
        载入 (材料文本窗口, , 假)
        
        
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束

 ' ＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝



.子程序 _答题编辑框_获得焦点, 空白型, , 
赋值 (改变答题编辑框内容, 真)
.如果 (等于 (出题窗口., “考试模式”))
    .如果 (或者 (等于 (.内容, “简答”), 等于 (.内容, “论述”)))
        .如果 (不等于 (.内容, “”))
            赋值 (.标题, “请在右边的文本框中输入答案！”)
            载入 (材料文本窗口, , 假)
            
        .否则
            
        .如果结束
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束
_答题编辑框_内容被改变 ()


.子程序 _备选答案1编辑框_获得焦点, 空白型, , 
赋值 (改变答题编辑框内容, 假)
_备选答案1编辑框_内容被改变 ()

.子程序 _备选答案2编辑框_获得焦点, 空白型, , 
赋值 (改变答题编辑框内容, 假)
_备选答案2编辑框_内容被改变 ()

.子程序 _备选答案3编辑框_获得焦点, 空白型, , 
赋值 (改变答题编辑框内容, 假)
_备选答案3编辑框_内容被改变 ()

.子程序 _备选答案4编辑框_获得焦点, 空白型, , 
赋值 (改变答题编辑框内容, 假)
_备选答案4编辑框_内容被改变 ()

.子程序 _备选答案5编辑框_获得焦点, 空白型, , 
赋值 (改变答题编辑框内容, 假)
_备选答案5编辑框_内容被改变 ()


.子程序 _备选答案6编辑框_获得焦点, 空白型, , 
赋值 (改变答题编辑框内容, 假)
_备选答案6编辑框_内容被改变 ()

.子程序 _备选答案7编辑框_获得焦点, 空白型, , 
赋值 (改变答题编辑框内容, 假)
_备选答案7编辑框_内容被改变 ()

.子程序 _备选答案8编辑框_获得焦点, 空白型, , 
赋值 (改变答题编辑框内容, 假)
_备选答案8编辑框_内容被改变 ()

.子程序 _备选答案9编辑框_获得焦点, 空白型, , 
赋值 (改变答题编辑框内容, 假)
_备选答案9编辑框_内容被改变 ()

.子程序 _备选答案10编辑框_获得焦点, 空白型, , 
赋值 (改变答题编辑框内容, 假)
_备选答案10编辑框_内容被改变 ()
 ' ＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝

.子程序 _备选答案1编辑框_内容被改变, 空白型, , 
.如果 (并且 (等于 (.内容, “填空”), 等于 (改变答题编辑框内容, 假)))
    赋值 (.内容, 相加 (.内容, “ ”, .内容, “ ”, .内容, “ ”, .内容, “ ”, .内容, .内容, “ ”, .内容, “ ”, .内容, “ ”, .内容, “ ”, .内容))
.否则
    
.如果结束
.如果 (并且 (等于 (出题窗口., “考试模式”), 不等于 (.内容, “”), 等于 (.内容, “填空”)))
    .如果 (不等于 (寻找文本 (填空问题文本, “[ A ]”, , 假), -1))
        赋值 (.内容, 文本替换 (填空问题文本, 相加 (寻找文本 (填空问题文本, “[ A ]”, , 假), 2), 1, .内容))
    .否则
        
    .如果结束
    
    
.否则
    
.如果结束
.如果 (并且 (等于 (出题窗口., “考试模式”), 等于 (.内容, “”), 等于 (.内容, “填空”)))
    赋值 (.内容, 填空问题文本)
.否则
    
.如果结束


.子程序 _备选答案2编辑框_内容被改变, 空白型, , 
.如果 (并且 (等于 (.内容, “填空”), 等于 (改变答题编辑框内容, 假)))
    赋值 (.内容, 相加 (.内容, “ ”, .内容, “ ”, .内容, “ ”, .内容, “ ”, .内容, .内容, “ ”, .内容, “ ”, .内容, “ ”, .内容, “ ”, .内容))
.否则
    
.如果结束
.如果 (并且 (等于 (出题窗口., “考试模式”), 不等于 (.内容, “”), 等于 (.内容, “填空”)))
    .如果 (不等于 (寻找文本 (填空问题文本, “[ B ]”, , 假), -1))
        赋值 (.内容, 文本替换 (填空问题文本, 相加 (寻找文本 (填空问题文本, “[ B ]”, , 假), 2), 1, .内容))
        
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束


.子程序 _备选答案3编辑框_内容被改变, 空白型, , 
.如果 (并且 (等于 (.内容, “填空”), 等于 (改变答题编辑框内容, 假)))
    赋值 (.内容, 相加 (.内容, “ ”, .内容, “ ”, .内容, “ ”, .内容, “ ”, .内容, .内容, “ ”, .内容, “ ”, .内容, “ ”, .内容, “ ”, .内容))
.否则
    
.如果结束
.如果 (并且 (等于 (出题窗口., “考试模式”), 不等于 (.内容, “”), 等于 (.内容, “填空”)))
    .如果 (不等于 (寻找文本 (填空问题文本, “[ C ]”, , 假), -1))
        赋值 (.内容, 文本替换 (填空问题文本, 相加 (寻找文本 (填空问题文本, “[ C ]”, , 假), 2), 1, .内容))
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束


.子程序 _备选答案4编辑框_内容被改变, 空白型, , 
.如果 (并且 (等于 (.内容, “填空”), 等于 (改变答题编辑框内容, 假)))
    赋值 (.内容, 相加 (.内容, “ ”, .内容, “ ”, .内容, “ ”, .内容, “ ”, .内容, .内容, “ ”, .内容, “ ”, .内容, “ ”, .内容, “ ”, .内容))
.否则
    
.如果结束
.如果 (并且 (等于 (出题窗口., “考试模式”), 不等于 (.内容, “”), 等于 (.内容, “填空”)))
    .如果 (不等于 (寻找文本 (填空问题文本, “[ D ]”, , 假), -1))
        赋值 (.内容, 文本替换 (填空问题文本, 相加 (寻找文本 (填空问题文本, “[ D ]”, , 假), 2), 1, .内容))
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束


.子程序 _备选答案5编辑框_内容被改变, 空白型, , 
.如果 (并且 (等于 (.内容, “填空”), 等于 (改变答题编辑框内容, 假)))
    赋值 (.内容, 相加 (.内容, “ ”, .内容, “ ”, .内容, “ ”, .内容, “ ”, .内容, .内容, “ ”, .内容, “ ”, .内容, “ ”, .内容, “ ”, .内容))
.否则
    
.如果结束
.如果 (并且 (等于 (出题窗口., “考试模式”), 不等于 (.内容, “”), 等于 (.内容, “填空”)))
    .如果 (不等于 (寻找文本 (填空问题文本, “[ E ]”, , 假), -1))
        赋值 (.内容, 文本替换 (填空问题文本, 相加 (寻找文本 (填空问题文本, “[ E ]”, , 假), 2), 1, .内容))
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束


.子程序 _备选答案6编辑框_内容被改变, 空白型, , 
.如果 (并且 (等于 (.内容, “填空”), 等于 (改变答题编辑框内容, 假)))
    赋值 (.内容, 相加 (.内容, “ ”, .内容, “ ”, .内容, “ ”, .内容, “ ”, .内容, .内容, “ ”, .内容, “ ”, .内容, “ ”, .内容, “ ”, .内容))
.否则
    
.如果结束
.如果 (并且 (等于 (出题窗口., “考试模式”), 不等于 (.内容, “”), 等于 (.内容, “填空”)))
    .如果 (不等于 (寻找文本 (填空问题文本, “[ F ]”, , 假), -1))
        赋值 (.内容, 文本替换 (填空问题文本, 相加 (寻找文本 (填空问题文本, “[ E ]”, , 假), 2), 1, .内容))
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束


.子程序 _备选答案7编辑框_内容被改变, 空白型, , 
.如果 (并且 (等于 (.内容, “填空”), 等于 (改变答题编辑框内容, 假)))
    赋值 (.内容, 相加 (.内容, “ ”, .内容, “ ”, .内容, “ ”, .内容, “ ”, .内容, .内容, “ ”, .内容, “ ”, .内容, “ ”, .内容, “ ”, .内容))
.否则
    
.如果结束
.如果 (并且 (等于 (出题窗口., “考试模式”), 不等于 (.内容, “”), 等于 (.内容, “填空”)))
    .如果 (不等于 (寻找文本 (填空问题文本, “[ G ]”, , 假), -1))
        赋值 (.内容, 文本替换 (填空问题文本, 相加 (寻找文本 (填空问题文本, “[ G ]”, , 假), 2), 1, .内容))
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束


.子程序 _备选答案8编辑框_内容被改变, 空白型, , 
.如果 (并且 (等于 (.内容, “填空”), 等于 (改变答题编辑框内容, 假)))
    赋值 (.内容, 相加 (.内容, “ ”, .内容, “ ”, .内容, “ ”, .内容, “ ”, .内容, .内容, “ ”, .内容, “ ”, .内容, “ ”, .内容, “ ”, .内容))
.否则
    
.如果结束
.如果 (并且 (等于 (出题窗口., “考试模式”), 不等于 (.内容, “”), 等于 (.内容, “填空”)))
    .如果 (不等于 (寻找文本 (填空问题文本, “[ H ]”, , 假), -1))
        赋值 (.内容, 文本替换 (填空问题文本, 相加 (寻找文本 (填空问题文本, “[ H ]”, , 假), 2), 1, .内容))
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束


.子程序 _备选答案9编辑框_内容被改变, 空白型, , 
.如果 (并且 (等于 (.内容, “填空”), 等于 (改变答题编辑框内容, 假)))
    赋值 (.内容, 相加 (.内容, “ ”, .内容, “ ”, .内容, “ ”, .内容, “ ”, .内容, .内容, “ ”, .内容, “ ”, .内容, “ ”, .内容, “ ”, .内容))
.否则
    
.如果结束
.如果 (并且 (等于 (出题窗口., “考试模式”), 不等于 (.内容, “”), 等于 (.内容, “填空”)))
    .如果 (不等于 (寻找文本 (填空问题文本, “[ I ]”, , 假), -1))
        赋值 (.内容, 文本替换 (填空问题文本, 相加 (寻找文本 (填空问题文本, “[ I ]”, , 假), 2), 1, .内容))
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束


.子程序 _备选答案10编辑框_内容被改变, 空白型, , 
.如果 (并且 (等于 (.内容, “填空”), 等于 (改变答题编辑框内容, 假)))
    赋值 (.内容, 相加 (.内容, “ ”, .内容, “ ”, .内容, “ ”, .内容, “ ”, .内容, .内容, “ ”, .内容, “ ”, .内容, “ ”, .内容, “ ”, .内容))
.否则
    
.如果结束
.如果 (并且 (等于 (出题窗口., “考试模式”), 不等于 (.内容, “”), 等于 (.内容, “填空”)))
    .如果 (不等于 (寻找文本 (填空问题文本, “[ J ]”, , 假), -1))
        赋值 (.内容, 文本替换 (填空问题文本, 相加 (寻找文本 (填空问题文本, “[ J ]”, , 假), 2), 1, .内容))
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束


.子程序 _答题编辑框_内容被改变, 空白型, , 
.局部变量 填空答案文本, 文本型, , "0", 
.局部变量 文件号, 整数型, , , 
.局部变量 临时文本, 文本型, , , 


.如果 (或者 (等于 (.内容, #单项选择), 等于 (.内容, #多项选择), 并且 (等于 (.内容, #材料分析), 大于 (到整数 (.内容), 0))))
    赋值 (.转换方式, 2)
    .如果 (大于 (取代码 (.内容, 1), 相加 (64, 到整数 (.内容))))
        鸣叫 ()
        赋值 (.内容, “请输入规定范围内的大写字母。”)
        赋值 (.被选择字符数, -1)
    .否则
        
    .如果结束
    
.否则
    赋值 (.转换方式, 0)
.如果结束
 ' 多项选择答案识别简化版 ()
.如果 (等于 (改变答题编辑框内容, 真))
    .如果 (或者 (等于 (.内容, “填空”), 等于 (.内容, “单项选择”), 等于 (.内容, “多项选择”), 等于 (.内容, “材料分析”), 等于 (.内容, “辨析”)))
        标记答题选项 ()
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束


.如果 (等于 (出题窗口., “考试模式”))
    写 (#用户答案, 删首尾空 (.内容))
    
    
.否则
     ' .如果 (并且 (不等于 (.内容, “论述”), 不等于 (.内容, “简答”), 不等于 (.内容, “材料分析”))) ' 出题模式
         ' .如果 (大于 (取文本长度 (.内容), 512))
             ' ' 信息框 (“仅能容纳如此多文字，超过部分将不被保存！”, 0, )
             ' ' 答题编辑框.内容 ＝ 取文本左边 (答题编辑框.内容, 512)
            
        .否则
            
        .如果结束
        
    .否则
        赋值 (文字题答案, .内容)
    .如果结束
    
.如果结束

.如果 (等于 (出题窗口., “出题模式”))
    .如果 (或者 (等于 (.内容, “简答”), 等于 (.内容, “论述”)))
        .如果 (等于 (寻找文本 (.内容, “]”, , 假), -1))
            赋值 (简答论述分值累计, 0)
        .否则
            
        .如果结束
        
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束




.子程序 _答题编辑框_被双击, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.内容, 删首尾空 (.内容))


.子程序 _问题编辑框_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果 (等于 (出题窗口., “出题模式”))
    .如果 (等于 (键代码, #PageDown键))
        赋值 (当前位置, 寻找文本 (.内容, “[”, 上一位置, 假))
        赋值 (上一位置, 当前位置)
        赋值 (.起始选择位置, 相减 (当前位置, 1))
        赋值 (上一位置, 相加 (上一位置, 1))
        
    .否则
        .如果 (等于 (键代码, #PageUp键))
            赋值 (当前位置, 倒找文本 (.内容, “[”, 上一位置, 假))
            .如果 (等于 (当前位置, -1))
                赋值 (上一位置, 取文本长度 (.内容))
            .否则
                赋值 (上一位置, 当前位置)
                赋值 (.起始选择位置, 相减 (当前位置, 1))
                赋值 (上一位置, 相减 (上一位置, 1))
                
            .如果结束
            
        .否则
            .如果 (并且 (等于 (键代码, #空格键), 不等于 (全局图片路径, “”), 等于 (.可视, 真)))
                载入 (图片显示窗口, , 假)
            .否则
                
            .如果结束
            
        .如果结束
        
    .如果结束
    
.否则
    .如果 (并且 (等于 (键代码, #空格键), 不等于 (全局图片路径, “”), 等于 (.可视, 真)))
        载入 (图片显示窗口, , 假)
    .否则
        
    .如果结束
    
.如果结束


.子程序 _问题编辑框_内容被改变, 空白型, , 
.局部变量 位置1, 整数型, , , 
.局部变量 起始位置, 空白型, , , 
.局部变量 重复次数, 整数型, , , 


 ' 问题超级编辑框.内容 ＝ 问题编辑框.内容

.如果 (等于 (.内容, “填空”))
    赋值 (起始位置, -1)
    .判断循环首 (大于 (位置1, -1))
        赋值 (重复次数, 相加 (重复次数, 1))
        赋值 (位置1, 寻找文本 (.内容, “[”, 起始位置, 假))
        赋值 (起始位置, 相加 (位置1, 1))
    .判断循环尾 ()
    赋值 (重复次数, 相减 (重复次数, 1))
    赋值 (.内容, 到文本 (重复次数))
    _选项组合框_编辑内容被改变 ()
.否则
    
    
.如果结束


.子程序 _导出按钮_被单击, 空白型, , 
载入 (导出试卷窗口, , 假)


.子程序 _按钮2_被单击, 空白型, , 
赋值 (.位置, 0)


.子程序 清空内容, 空白型, , 
连续赋值 (“”, .内容, .内容, .内容, .内容, .内容, .内容, .内容, .内容, .内容, .内容, .内容, .内容, .内容)
连续赋值 (#黑色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色)
连续赋值 (假, .选中, .选中, .选中, .选中, .选中, .选中, .选中, .选中, .选中, .选中)

.如果 (等于 (.内容, “名词解释”))
    
    赋值 (.内容, “5”)
    赋值 (.内容, 到文本 (相乘 (到整数 (.内容), 时间分值比)))
    赋值 (.内容, “0”)
    _选项组合框_编辑内容被改变 ()
.否则
    
.如果结束

.如果 (等于 (.内容, “单项选择”))
    赋值 (.内容, “1”)
    赋值 (.内容, 到文本 (相乘 (到整数 (.内容), 时间分值比)))
    赋值 (.内容, “4”)
    _选项组合框_编辑内容被改变 ()
    
    
.否则
    
.如果结束

.如果 (等于 (.内容, “多项选择”))
    赋值 (.内容, “2”)
    赋值 (.内容, 到文本 (相乘 (到整数 (.内容), 时间分值比)))
    赋值 (.内容, “4”)
    _选项组合框_编辑内容被改变 ()
    
.否则
    
.如果结束

.如果 (等于 (.内容, “材料分析”))
    赋值 (.内容, “5”)
    赋值 (.内容, 到文本 (相乘 (到整数 (.内容), 时间分值比)))
    赋值 (.内容, “4”)
    _选项组合框_编辑内容被改变 ()
    
.否则
    
.如果结束

.如果 (等于 (.内容, “填空”))
    赋值 (.内容, “[ A ]”)
    赋值 (.内容, “1”)
    赋值 (.内容, 到文本 (相乘 (到整数 (.内容), 时间分值比)))
    赋值 (.内容, “1”)
    _选项组合框_编辑内容被改变 ()
    
.否则
    
.如果结束

.如果 (等于 (.内容, “辨析”))
    赋值 (.内容, “3”)
    赋值 (.内容, 到文本 (相乘 (到整数 (.内容), 时间分值比)))
    赋值 (.内容, “2”)
    _选项组合框_编辑内容被改变 ()
    
.否则
    
.如果结束

.如果 (等于 (.内容, “简答”))
    赋值 (.内容, “10”)
    赋值 (.内容, 到文本 (相乘 (到整数 (.内容), 时间分值比)))
    赋值 (.内容, “0”)
    _选项组合框_编辑内容被改变 ()
    
.否则
    
.如果结束

.如果 (等于 (.内容, “论述”))
    赋值 (.内容, “20”)
    赋值 (.内容, 到文本 (相乘 (到整数 (.内容), 时间分值比)))
    赋值 (.内容, “0”)
    _选项组合框_编辑内容被改变 ()
    
.否则
    
.如果结束

获取焦点 ()


.子程序 _备选答案1编辑框_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 图片完整路径, 文本型, , , 


.如果 (或者 (等于 (取文本右边 (.内容, 3), “jpg”), 等于 (取文本右边 (.内容, 3), “gif”), 等于 (取文本右边 (.内容, 3), “JPG”), 等于 (取文本右边 (.内容, 3), “GIF”)))
    .如果 (等于 (寻找文本 (.内容, “\”, , 假), -1))
        赋值 (图片完整路径, 相加 (题库路径, “\”, .内容))
        
    .否则
        赋值 (图片完整路径, .内容)
    .如果结束
    
.否则
    
.如果结束

 ' .如果 (等于 (.可视, 假))
    .如果 (并且 (不等于 (取字节集长度 (临时图片A), 0), 等于 (临时图片A路径, 图片完整路径)))
        赋值 (.可视, 真)
        .如果 (不等于 (.图片, 临时图片A))
            赋值 (.图片, 临时图片A)
            .如果 (等于 (.可视, 真))
                赋值 (.宽度, .宽度)
                赋值 (.高度, 取整 (相乘 (相除 (未知支持库函数_32 (图片完整路径), 未知支持库函数_31 (图片完整路径)), .宽度)))
                
                赋值 (.顶边, 相加 (.顶边, .高度, .顶边))
                赋值 (.左边, 相加 (.左边, .左边))
                .如果 (大于 (相加 (.顶边, .高度), 出题窗口.))
                    赋值 (.高度, 相减 (出题窗口., .顶边, 48))
                    赋值 (.宽度, 取整 (相乘 (相除 (未知支持库函数_31 (图片完整路径), 未知支持库函数_32 (图片完整路径)), .高度)))
                    
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .否则
        .如果 (等于 (文件是否存在 (图片完整路径), 真))
            赋值 (.可视, 真)
             ' 当前图片路径 ＝ 备选答案一编辑框.内容
            
            赋值 (.图片, 读入文件 (图片完整路径))
            
            
            赋值 (临时图片A, .图片)
            赋值 (临时图片A路径, 图片完整路径)
            .如果 (等于 (.可视, 真))
                赋值 (.宽度, .宽度)
                赋值 (.高度, 取整 (相乘 (相除 (未知支持库函数_32 (图片完整路径), 未知支持库函数_31 (图片完整路径)), .宽度)))
                
                赋值 (.顶边, 相加 (.顶边, .高度, .顶边))
                赋值 (.左边, 相加 (.左边, .左边))
                .如果 (大于 (相加 (.顶边, .高度), 出题窗口.))
                    赋值 (.高度, 相减 (出题窗口., .顶边, 48))
                    赋值 (.宽度, 取整 (相乘 (相除 (未知支持库函数_31 (图片完整路径), 未知支持库函数_32 (图片完整路径)), .高度)))
                    
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
        .否则
            赋值 (.可视, 假)
            .如果 (大于 (取文本长度 (.内容), 40))
                赋值 (.可视, 假)
                赋值 (., 真)
                赋值 (., .宽度)
                赋值 (., 50)
                赋值 (., 相加 (.左边, .左边))
                赋值 (., 相加 (.顶边, .高度, .顶边))
                赋值 (., .内容)
                
            .否则
                赋值 (., 假)
            .如果结束
            
            
            
        .如果结束
        
    .如果结束
    
    
    
    
    
.否则
     ' .如果 (不等于 (.内容))
         ' 备选答案图片框.可视 ＝ 假
        
        
        
    .否则
        
    .如果结束
    
    
    
.如果结束


.子程序 _备选答案图片框_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果 (等于 (功能键状态, 1))
    赋值 (.左边, 0)
    赋值 (.顶边, 0)
    赋值 (.宽度, 出题窗口.)
    赋值 (.高度, 相减 (出题窗口., 48))
     ' 备选答案图片框.宽度 ＝ 横向位置 ＋ 50
     ' 备选答案图片框.高度 ＝ 纵向位置 ＋ 50
     ' 载入 (图片显示窗口, , 假)
.否则
    赋值 (.可视, 假)
.如果结束


.子程序 _备选答案2编辑框_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 图片完整路径, 文本型, , , 


.如果 (或者 (等于 (取文本右边 (.内容, 3), “jpg”), 等于 (取文本右边 (.内容, 3), “gif”), 等于 (取文本右边 (.内容, 3), “JPG”), 等于 (取文本右边 (.内容, 3), “GIF”)))
    .如果 (等于 (寻找文本 (.内容, “\”, , 假), -1))
        赋值 (图片完整路径, 相加 (题库路径, “\”, .内容))
        
    .否则
        赋值 (图片完整路径, .内容)
    .如果结束
    
.否则
    
.如果结束

 ' .如果 (等于 (.可视, 假))
    .如果 (并且 (不等于 (取字节集长度 (临时图片B), 0), 等于 (临时图片B路径, 图片完整路径)))
        赋值 (.可视, 真)
        .如果 (不等于 (.图片, 临时图片B))
            赋值 (.图片, 临时图片B)
            .如果 (等于 (.可视, 真))
                赋值 (.宽度, .宽度)
                赋值 (.高度, 取整 (相乘 (相除 (未知支持库函数_32 (图片完整路径), 未知支持库函数_31 (图片完整路径)), .宽度)))
                
                赋值 (.宽度, .宽度)
                赋值 (.顶边, 相加 (.顶边, .高度, .顶边))
                赋值 (.左边, 相加 (.左边, .左边))
                .如果 (大于 (相加 (.顶边, .高度), 出题窗口.))
                    赋值 (.高度, 相减 (出题窗口., .顶边, 48))
                    赋值 (.宽度, 取整 (相乘 (相除 (未知支持库函数_31 (图片完整路径), 未知支持库函数_32 (图片完整路径)), .高度)))
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
        
    .否则
        .如果 (等于 (文件是否存在 (图片完整路径), 真))
            赋值 (.可视, 真)
             ' 当前图片路径 ＝ 备选答案二编辑框.内容
            赋值 (.图片, 读入文件 (图片完整路径))
            
            赋值 (临时图片B, .图片)
            赋值 (临时图片B路径, 图片完整路径)
            .如果 (等于 (.可视, 真))
                赋值 (.宽度, .宽度)
                赋值 (.高度, 取整 (相乘 (相除 (未知支持库函数_32 (图片完整路径), 未知支持库函数_31 (图片完整路径)), .宽度)))
                
                赋值 (.宽度, .宽度)
                赋值 (.顶边, 相加 (.顶边, .高度, .顶边))
                赋值 (.左边, 相加 (.左边, .左边))
                .如果 (大于 (相加 (.顶边, .高度), 出题窗口.))
                    赋值 (.高度, 相减 (出题窗口., .顶边, 48))
                    赋值 (.宽度, 取整 (相乘 (相除 (未知支持库函数_31 (图片完整路径), 未知支持库函数_32 (图片完整路径)), .高度)))
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
        .否则
            赋值 (.可视, 假)
            .如果 (大于 (取文本长度 (.内容), 40))
                
                赋值 (.可视, 假)
                赋值 (., 真)
                赋值 (., .宽度)
                赋值 (., 50)
                赋值 (., 相加 (.左边, .左边))
                赋值 (., 相加 (.顶边, .高度, .顶边))
                赋值 (., .内容)
                
            .否则
                赋值 (., 假)
            .如果结束
            
        .如果结束
        
    .如果结束
    
    
    
    
    
    
.否则
     ' .如果 (不等于 (.内容))
         ' 备选答案图片框.可视 ＝ 假
    .否则
        
    .如果结束
    
.如果结束


.子程序 _备选答案3编辑框_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 图片完整路径, 文本型, , , 

 ' 如果 (备选答案图片框.可视 ＝ 假)

.如果 (或者 (等于 (取文本右边 (.内容, 3), “jpg”), 等于 (取文本右边 (.内容, 3), “gif”), 等于 (取文本右边 (.内容, 3), “JPG”), 等于 (取文本右边 (.内容, 3), “GIF”)))
    .如果 (等于 (寻找文本 (.内容, “\”, , 假), -1))
        赋值 (图片完整路径, 相加 (题库路径, “\”, .内容))
        
    .否则
        赋值 (图片完整路径, .内容)
    .如果结束
    
.否则
    
.如果结束

.如果 (并且 (不等于 (取字节集长度 (临时图片C), 0), 等于 (临时图片C路径, 图片完整路径)))
    赋值 (.可视, 真)
    .如果 (不等于 (.图片, 临时图片C))
        赋值 (.图片, 临时图片C)
        .如果 (等于 (.可视, 真))
            赋值 (.宽度, .宽度)
            赋值 (.高度, 取整 (相乘 (相除 (未知支持库函数_32 (图片完整路径), 未知支持库函数_31 (图片完整路径)), .宽度)))
            
            赋值 (.顶边, 相加 (.顶边, .高度, .顶边))
            赋值 (.左边, 相加 (.左边, .左边))
            .如果 (大于 (相加 (.顶边, .高度), 出题窗口.))
                赋值 (.高度, 相减 (出题窗口., .顶边, 48))
                赋值 (.宽度, 取整 (相乘 (相除 (未知支持库函数_31 (图片完整路径), 未知支持库函数_32 (图片完整路径)), .高度)))
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .否则
        
    .如果结束
    
    
.否则
    .如果 (等于 (文件是否存在 (图片完整路径), 真))
        赋值 (.可视, 真)
         ' 当前图片路径 ＝ 备选答案三编辑框.内容
        赋值 (.图片, 读入文件 (图片完整路径))
        
        赋值 (临时图片C, .图片)
        赋值 (临时图片C路径, 图片完整路径)
        .如果 (等于 (.可视, 真))
            赋值 (.宽度, .宽度)
            赋值 (.高度, 取整 (相乘 (相除 (未知支持库函数_32 (图片完整路径), 未知支持库函数_31 (图片完整路径)), .宽度)))
            
            赋值 (.顶边, 相加 (.顶边, .高度, .顶边))
            赋值 (.左边, 相加 (.左边, .左边))
            .如果 (大于 (相加 (.顶边, .高度), 出题窗口.))
                赋值 (.高度, 相减 (出题窗口., .顶边, 48))
                赋值 (.宽度, 取整 (相乘 (相除 (未知支持库函数_31 (图片完整路径), 未知支持库函数_32 (图片完整路径)), .高度)))
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .否则
        赋值 (.可视, 假)
        .如果 (大于 (取文本长度 (.内容), 40))
            
            赋值 (.可视, 假)
            赋值 (., 真)
            赋值 (., .宽度)
            赋值 (., 50)
            赋值 (., 相加 (.左边, .左边))
            赋值 (., 相加 (.顶边, .高度, .顶边))
            赋值 (., .内容)
            
        .否则
            赋值 (., 假)
        .如果结束
        
    .如果结束
    
.如果结束

 ' .如果 (等于 (.可视, 真))
     ' 备选答案图片框.高度 ＝ 取整 (取图片高度 (备选答案三编辑框.内容) ÷ 取图片宽度 (备选答案三编辑框.内容) × 备选答案显示编辑框.宽度)
     ' .如果 (大于 (相加 (.顶边, .高度), 出题窗口.))
         ' 备选答案图片框.顶边 ＝ 出题窗口.高度 － 备选答案图片框.高度
    .否则
         ' 备选答案图片框.左边 ＝ 备选答案分组框.左边 ＋ 备选答案三编辑框.左边
         ' 备选答案图片框.顶边 ＝ 备选答案三编辑框.顶边 ＋ 备选答案三编辑框.高度 ＋ 备选答案分组框.顶边
    .如果结束
    
    
.否则
    
.如果结束




 ' .如果 (不等于 (.内容))
     ' 备选答案图片框.可视 ＝ 假
.否则
    
.如果结束



.子程序 _备选答案4编辑框_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 图片完整路径, 文本型, , , 

 ' .如果 (等于 (.可视, 假))
    
    .如果 (或者 (等于 (取文本右边 (.内容, 3), “jpg”), 等于 (取文本右边 (.内容, 3), “gif”), 等于 (取文本右边 (.内容, 3), “JPG”), 等于 (取文本右边 (.内容, 3), “GIF”)))
        .如果 (等于 (寻找文本 (.内容, “\”, , 假), -1))
            赋值 (图片完整路径, 相加 (题库路径, “\”, .内容))
            
        .否则
            赋值 (图片完整路径, .内容)
        .如果结束
        
    .否则
        
    .如果结束
    
    .如果 (并且 (不等于 (取字节集长度 (临时图片D), 0), 等于 (临时图片D路径, 图片完整路径)))
        赋值 (.可视, 真)
        .如果 (不等于 (.图片, 临时图片D))
            赋值 (.图片, 临时图片D)
            .如果 (等于 (.可视, 真))
                赋值 (.宽度, .宽度)
                赋值 (.高度, 取整 (相乘 (相除 (未知支持库函数_32 (图片完整路径), 未知支持库函数_31 (图片完整路径)), .宽度)))
                
                赋值 (.顶边, 相加 (.顶边, .高度, .顶边))
                赋值 (.左边, 相加 (.左边, .左边))
                .如果 (大于 (相加 (.顶边, .高度), 出题窗口.))
                    赋值 (.高度, 相减 (出题窗口., .顶边, 48))
                    赋值 (.宽度, 取整 (相乘 (相除 (未知支持库函数_31 (图片完整路径), 未知支持库函数_32 (图片完整路径)), .高度)))
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
        
    .否则
        .如果 (等于 (文件是否存在 (图片完整路径), 真))
            赋值 (.可视, 真)
             ' 当前图片路径 ＝ 备选答案四编辑框.内容
            赋值 (.图片, 读入文件 (图片完整路径))
            
            赋值 (临时图片D, .图片)
            赋值 (临时图片D路径, 图片完整路径)
            .如果 (等于 (.可视, 真))
                赋值 (.宽度, .宽度)
                赋值 (.高度, 取整 (相乘 (相除 (未知支持库函数_32 (图片完整路径), 未知支持库函数_31 (图片完整路径)), .宽度)))
                
                赋值 (.顶边, 相加 (.顶边, .高度, .顶边))
                赋值 (.左边, 相加 (.左边, .左边))
                .如果 (大于 (相加 (.顶边, .高度), 出题窗口.))
                    赋值 (.高度, 相减 (出题窗口., .顶边, 48))
                    赋值 (.宽度, 取整 (相乘 (相除 (未知支持库函数_31 (图片完整路径), 未知支持库函数_32 (图片完整路径)), .高度)))
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
        .否则
            赋值 (.可视, 假)
            .如果 (大于 (取文本长度 (.内容), 40))
                
                赋值 (.可视, 假)
                赋值 (., 真)
                赋值 (., .宽度)
                赋值 (., 50)
                赋值 (., 相加 (.左边, .左边))
                赋值 (., 相加 (.顶边, .高度, .顶边))
                赋值 (., .内容)
                
            .否则
                赋值 (., 假)
            .如果结束
            
        .如果结束
        
        
    .如果结束
    
    
    
    
.否则
     ' .如果 (不等于 (.内容))
         ' 备选答案图片框.可视 ＝ 假
    .否则
        
    .如果结束
    
.如果结束


.子程序 _备选答案5编辑框_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 图片完整路径, 文本型, , , 

 ' .如果 (等于 (.可视, 假))
    
    .如果 (或者 (等于 (取文本右边 (.内容, 3), “jpg”), 等于 (取文本右边 (.内容, 3), “gif”), 等于 (取文本右边 (.内容, 3), “JPG”), 等于 (取文本右边 (.内容, 3), “GIF”)))
        .如果 (等于 (寻找文本 (.内容, “\”, , 假), -1))
            赋值 (图片完整路径, 相加 (题库路径, “\”, .内容))
            
        .否则
            赋值 (图片完整路径, .内容)
        .如果结束
        
    .否则
        
    .如果结束
    
    .如果 (并且 (不等于 (取字节集长度 (临时图片E), 0), 等于 (临时图片E路径, 图片完整路径)))
        赋值 (.可视, 真)
        .如果 (不等于 (.图片, 临时图片E))
            赋值 (.图片, 临时图片E)
            .如果 (等于 (.可视, 真))
                赋值 (.宽度, .宽度)
                赋值 (.高度, 取整 (相乘 (相除 (未知支持库函数_32 (图片完整路径), 未知支持库函数_31 (图片完整路径)), .宽度)))
                
                赋值 (.顶边, 相加 (.顶边, .高度, .顶边))
                赋值 (.左边, 相加 (.左边, .左边))
                .如果 (大于 (相加 (.顶边, .高度), 出题窗口.))
                    赋值 (.高度, 相减 (出题窗口., .顶边, 48))
                    赋值 (.宽度, 取整 (相乘 (相除 (未知支持库函数_31 (图片完整路径), 未知支持库函数_32 (图片完整路径)), .高度)))
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .否则
        .如果 (等于 (文件是否存在 (图片完整路径), 真))
            赋值 (.可视, 真)
             ' 当前图片路径 ＝ 备选答案五编辑框.内容
            赋值 (.图片, 读入文件 (图片完整路径))
            
            赋值 (临时图片E, .图片)
            赋值 (临时图片E路径, 图片完整路径)
            
            .如果 (等于 (.可视, 真))
                赋值 (.宽度, .宽度)
                赋值 (.高度, 取整 (相乘 (相除 (未知支持库函数_32 (图片完整路径), 未知支持库函数_31 (图片完整路径)), .宽度)))
                
                赋值 (.顶边, 相加 (.顶边, .高度, .顶边))
                赋值 (.左边, 相加 (.左边, .左边))
                .如果 (大于 (相加 (.顶边, .高度), 出题窗口.))
                    赋值 (.高度, 相减 (出题窗口., .顶边, 48))
                    赋值 (.宽度, 取整 (相乘 (相除 (未知支持库函数_31 (图片完整路径), 未知支持库函数_32 (图片完整路径)), .高度)))
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
        .否则
            赋值 (.可视, 假)
            .如果 (大于 (取文本长度 (.内容), 40))
                
                赋值 (.可视, 假)
                赋值 (., 真)
                赋值 (., .宽度)
                赋值 (., 50)
                赋值 (., 相加 (.左边, .左边))
                赋值 (., 相加 (.顶边, .高度, .顶边))
                赋值 (., .内容)
                
            .否则
                赋值 (., 假)
            .如果结束
            
        .如果结束
        
        
    .如果结束
    
    
.否则
    
    
    
.如果结束


.子程序 _备选答案6编辑框_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 图片完整路径, 文本型, , , 

 ' .如果 (等于 (.可视, 假))
    
    .如果 (或者 (等于 (取文本右边 (.内容, 3), “jpg”), 等于 (取文本右边 (.内容, 3), “gif”), 等于 (取文本右边 (.内容, 3), “JPG”), 等于 (取文本右边 (.内容, 3), “GIF”)))
        .如果 (等于 (寻找文本 (.内容, “\”, , 假), -1))
            赋值 (图片完整路径, 相加 (题库路径, “\”, .内容))
            
        .否则
            赋值 (图片完整路径, .内容)
        .如果结束
        
    .否则
        
    .如果结束
    
    .如果 (并且 (不等于 (取字节集长度 (临时图片F), 0), 等于 (临时图片F路径, 图片完整路径)))
        赋值 (.可视, 真)
        .如果 (不等于 (.图片, 临时图片F))
            赋值 (.图片, 临时图片F)
            .如果 (等于 (.可视, 真))
                赋值 (.宽度, .宽度)
                赋值 (.高度, 取整 (相乘 (相除 (未知支持库函数_32 (图片完整路径), 未知支持库函数_31 (图片完整路径)), .宽度)))
                
                赋值 (.顶边, 相加 (.顶边, .高度, .顶边))
                赋值 (.左边, 相加 (.左边, .左边))
                .如果 (大于 (相加 (.顶边, .高度), 出题窗口.))
                    赋值 (.高度, 相减 (出题窗口., .顶边, 48))
                    赋值 (.宽度, 取整 (相乘 (相除 (未知支持库函数_31 (图片完整路径), 未知支持库函数_32 (图片完整路径)), .高度)))
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .否则
        .如果 (等于 (文件是否存在 (图片完整路径), 真))
            赋值 (.可视, 真)
             ' 当前图片路径 ＝ 备选答案五编辑框.内容
            赋值 (.图片, 读入文件 (图片完整路径))
            
            赋值 (临时图片F, .图片)
            赋值 (临时图片F路径, 图片完整路径)
            .如果 (等于 (.可视, 真))
                赋值 (.宽度, .宽度)
                赋值 (.高度, 取整 (相乘 (相除 (未知支持库函数_32 (图片完整路径), 未知支持库函数_31 (图片完整路径)), .宽度)))
                
                赋值 (.顶边, 相加 (.顶边, .高度, .顶边))
                赋值 (.左边, 相加 (.左边, .左边))
                .如果 (大于 (相加 (.顶边, .高度), 出题窗口.))
                    赋值 (.高度, 相减 (出题窗口., .顶边, 48))
                    赋值 (.宽度, 取整 (相乘 (相除 (未知支持库函数_31 (图片完整路径), 未知支持库函数_32 (图片完整路径)), .高度)))
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
        .否则
            赋值 (.可视, 假)
            .如果 (大于 (取文本长度 (.内容), 40))
                
                赋值 (.可视, 假)
                赋值 (., 真)
                赋值 (., .宽度)
                赋值 (., 50)
                赋值 (., 相加 (.左边, .左边))
                赋值 (., 相加 (.顶边, .高度, .顶边))
                赋值 (., .内容)
                
            .否则
                赋值 (., 假)
            .如果结束
            
        .如果结束
        
        
    .如果结束
    
    
    
    
.否则
    
.如果结束


.子程序 _备选答案7编辑框_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 图片完整路径, 文本型, , , 

 ' .如果 (等于 (.可视, 假))
    
    .如果 (或者 (等于 (取文本右边 (.内容, 3), “jpg”), 等于 (取文本右边 (.内容, 3), “gif”), 等于 (取文本右边 (.内容, 3), “JPG”), 等于 (取文本右边 (.内容, 3), “GIF”)))
        .如果 (等于 (寻找文本 (.内容, “\”, , 假), -1))
            赋值 (图片完整路径, 相加 (题库路径, “\”, .内容))
            
        .否则
            赋值 (图片完整路径, .内容)
        .如果结束
        
    .否则
        
    .如果结束
    
    .如果 (并且 (不等于 (取字节集长度 (临时图片G), 0), 等于 (临时图片G路径, 图片完整路径)))
        赋值 (.可视, 真)
        .如果 (不等于 (.图片, 临时图片G))
            赋值 (.图片, 临时图片G)
            .如果 (等于 (.可视, 真))
                赋值 (.宽度, .宽度)
                赋值 (.高度, 取整 (相乘 (相除 (未知支持库函数_32 (图片完整路径), 未知支持库函数_31 (图片完整路径)), .宽度)))
                
                赋值 (.顶边, 相加 (.顶边, .高度, .顶边))
                赋值 (.左边, 相加 (.左边, .左边))
                .如果 (大于 (相加 (.顶边, .高度), 出题窗口.))
                    赋值 (.高度, 相减 (出题窗口., .顶边, 48))
                    赋值 (.宽度, 取整 (相乘 (相除 (未知支持库函数_31 (图片完整路径), 未知支持库函数_32 (图片完整路径)), .高度)))
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .否则
        .如果 (等于 (文件是否存在 (图片完整路径), 真))
            赋值 (.可视, 真)
             ' 当前图片路径 ＝ 备选答案五编辑框.内容
            赋值 (.图片, 读入文件 (图片完整路径))
            
            赋值 (临时图片G, .图片)
            赋值 (临时图片G路径, 图片完整路径)
            .如果 (等于 (.可视, 真))
                赋值 (.宽度, .宽度)
                赋值 (.高度, 取整 (相乘 (相除 (未知支持库函数_32 (图片完整路径), 未知支持库函数_31 (图片完整路径)), .宽度)))
                
                赋值 (.顶边, 相加 (.顶边, .高度, .顶边))
                赋值 (.左边, 相加 (.左边, .左边))
                .如果 (大于 (相加 (.顶边, .高度), 出题窗口.))
                    赋值 (.高度, 相减 (出题窗口., .顶边, 48))
                    赋值 (.宽度, 取整 (相乘 (相除 (未知支持库函数_31 (图片完整路径), 未知支持库函数_32 (图片完整路径)), .高度)))
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
        .否则
            赋值 (.可视, 假)
            .如果 (大于 (取文本长度 (.内容), 40))
                
                赋值 (.可视, 假)
                赋值 (., 真)
                赋值 (., .宽度)
                赋值 (., 50)
                赋值 (., 相加 (.左边, .左边))
                赋值 (., 相加 (.顶边, .高度, .顶边))
                赋值 (., .内容)
                
            .否则
                赋值 (., 假)
            .如果结束
            
        .如果结束
        
        
    .如果结束
    
    
    
.否则
    
.如果结束


.子程序 _备选答案8编辑框_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 图片完整路径, 文本型, , , 

 ' .如果 (等于 (.可视, 假))
    
    .如果 (或者 (等于 (取文本右边 (.内容, 3), “jpg”), 等于 (取文本右边 (.内容, 3), “gif”), 等于 (取文本右边 (.内容, 3), “JPG”), 等于 (取文本右边 (.内容, 3), “GIF”)))
        .如果 (等于 (寻找文本 (.内容, “\”, , 假), -1))
            赋值 (图片完整路径, 相加 (题库路径, “\”, .内容))
            
        .否则
            赋值 (图片完整路径, .内容)
        .如果结束
        
    .否则
        
    .如果结束
    
    .如果 (并且 (不等于 (取字节集长度 (临时图片H), 0), 等于 (临时图片H路径, 图片完整路径)))
        赋值 (.可视, 真)
        .如果 (不等于 (.图片, 临时图片H))
            赋值 (.图片, 临时图片H)
            .如果 (等于 (.可视, 真))
                赋值 (.宽度, .宽度)
                赋值 (.高度, 取整 (相乘 (相除 (未知支持库函数_32 (图片完整路径), 未知支持库函数_31 (图片完整路径)), .宽度)))
                
                赋值 (.顶边, 相加 (.顶边, .高度, .顶边))
                赋值 (.左边, 相加 (.左边, .左边))
                .如果 (大于 (相加 (.顶边, .高度), 出题窗口.))
                    赋值 (.高度, 相减 (出题窗口., .顶边, 48))
                    赋值 (.宽度, 取整 (相乘 (相除 (未知支持库函数_31 (图片完整路径), 未知支持库函数_32 (图片完整路径)), .高度)))
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .否则
        .如果 (等于 (文件是否存在 (图片完整路径), 真))
            赋值 (.可视, 真)
             ' 当前图片路径 ＝ 备选答案五编辑框.内容
            赋值 (.图片, 读入文件 (图片完整路径))
            
            赋值 (临时图片H, .图片)
            赋值 (临时图片H路径, 图片完整路径)
            .如果 (等于 (.可视, 真))
                赋值 (.宽度, .宽度)
                赋值 (.高度, 取整 (相乘 (相除 (未知支持库函数_32 (图片完整路径), 未知支持库函数_31 (图片完整路径)), .宽度)))
                
                赋值 (.顶边, 相加 (.顶边, .高度, .顶边))
                赋值 (.左边, 相加 (.左边, .左边))
                .如果 (大于 (相加 (.顶边, .高度), 出题窗口.))
                    赋值 (.高度, 相减 (出题窗口., .顶边, 48))
                    赋值 (.宽度, 取整 (相乘 (相除 (未知支持库函数_31 (图片完整路径), 未知支持库函数_32 (图片完整路径)), .高度)))
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
        .否则
            赋值 (.可视, 假)
            .如果 (大于 (取文本长度 (.内容), 40))
                
                赋值 (.可视, 假)
                赋值 (., 真)
                赋值 (., .宽度)
                赋值 (., 50)
                赋值 (., 相加 (.左边, .左边))
                赋值 (., 相加 (.顶边, .高度, .顶边))
                赋值 (., .内容)
                
            .否则
                赋值 (., 假)
            .如果结束
            
        .如果结束
        
        
    .如果结束
    
    
    
.否则
    
.如果结束


.子程序 _备选答案9编辑框_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 图片完整路径, 文本型, , , 

 ' .如果 (等于 (.可视, 假))
    
    .如果 (或者 (等于 (取文本右边 (.内容, 3), “jpg”), 等于 (取文本右边 (.内容, 3), “gif”), 等于 (取文本右边 (.内容, 3), “JPG”), 等于 (取文本右边 (.内容, 3), “GIF”)))
        .如果 (等于 (寻找文本 (.内容, “\”, , 假), -1))
            赋值 (图片完整路径, 相加 (题库路径, “\”, .内容))
            
        .否则
            赋值 (图片完整路径, .内容)
        .如果结束
        
    .否则
        
    .如果结束
    
    .如果 (并且 (不等于 (取字节集长度 (临时图片I), 0), 等于 (临时图片I路径, 图片完整路径)))
        赋值 (.可视, 真)
        .如果 (不等于 (.图片, 临时图片I))
            赋值 (.图片, 临时图片I)
            .如果 (等于 (.可视, 真))
                赋值 (.宽度, .宽度)
                赋值 (.高度, 取整 (相乘 (相除 (未知支持库函数_32 (图片完整路径), 未知支持库函数_31 (图片完整路径)), .宽度)))
                
                赋值 (.顶边, 相加 (.顶边, .高度, .顶边))
                赋值 (.左边, 相加 (.左边, .左边))
                .如果 (大于 (相加 (.顶边, .高度), 出题窗口.))
                    赋值 (.高度, 相减 (出题窗口., .顶边, 48))
                    赋值 (.宽度, 取整 (相乘 (相除 (未知支持库函数_31 (图片完整路径), 未知支持库函数_32 (图片完整路径)), .高度)))
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .否则
        .如果 (等于 (文件是否存在 (图片完整路径), 真))
            赋值 (.可视, 真)
             ' 当前图片路径 ＝ 备选答案五编辑框.内容
            赋值 (.图片, 读入文件 (图片完整路径))
            
            赋值 (临时图片I, .图片)
            赋值 (临时图片I路径, 图片完整路径)
            .如果 (等于 (.可视, 真))
                赋值 (.宽度, .宽度)
                赋值 (.高度, 取整 (相乘 (相除 (未知支持库函数_32 (图片完整路径), 未知支持库函数_31 (图片完整路径)), .宽度)))
                
                赋值 (.顶边, 相加 (.顶边, .高度, .顶边))
                赋值 (.左边, 相加 (.左边, .左边))
                .如果 (大于 (相加 (.顶边, .高度), 出题窗口.))
                    赋值 (.高度, 相减 (出题窗口., .顶边, 48))
                    赋值 (.宽度, 取整 (相乘 (相除 (未知支持库函数_31 (图片完整路径), 未知支持库函数_32 (图片完整路径)), .高度)))
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
        .否则
            赋值 (.可视, 假)
            .如果 (大于 (取文本长度 (.内容), 40))
                
                赋值 (.可视, 假)
                赋值 (., 真)
                赋值 (., .宽度)
                赋值 (., 50)
                赋值 (., 相加 (.左边, .左边))
                赋值 (., 相加 (.顶边, .高度, .顶边))
                赋值 (., .内容)
                
            .否则
                赋值 (., 假)
            .如果结束
            
        .如果结束
        
        
    .如果结束
    
    
    
.否则
    
.如果结束


.子程序 _备选答案10编辑框_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 图片完整路径, 文本型, , , 


.如果 (或者 (等于 (取文本右边 (.内容, 3), “jpg”), 等于 (取文本右边 (.内容, 3), “gif”), 等于 (取文本右边 (.内容, 3), “JPG”), 等于 (取文本右边 (.内容, 3), “GIF”)))
    .如果 (等于 (寻找文本 (.内容, “\”, , 假), -1))
        赋值 (图片完整路径, 相加 (题库路径, “\”, .内容))
        
    .否则
        赋值 (图片完整路径, .内容)
    .如果结束
    
.否则
    
.如果结束
.如果 (并且 (不等于 (取字节集长度 (临时图片J), 0), 等于 (临时图片J路径, 图片完整路径)))
    赋值 (.可视, 真)
    .如果 (不等于 (.图片, 临时图片J))
        赋值 (.图片, 临时图片J)
        .如果 (等于 (.可视, 真))
            赋值 (.宽度, .宽度)
            赋值 (.高度, 取整 (相乘 (相除 (未知支持库函数_32 (图片完整路径), 未知支持库函数_31 (图片完整路径)), .宽度)))
            
            赋值 (.顶边, 相加 (.顶边, .高度, .顶边))
            赋值 (.左边, 相加 (.左边, .左边))
            .如果 (大于 (相加 (.顶边, .高度), 出题窗口.))
                赋值 (.高度, 相减 (出题窗口., .顶边, 48))
                赋值 (.宽度, 取整 (相乘 (相除 (未知支持库函数_31 (图片完整路径), 未知支持库函数_32 (图片完整路径)), .高度)))
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .否则
        
    .如果结束
    
.否则
    .如果 (等于 (文件是否存在 (图片完整路径), 真))
        赋值 (.可视, 真)
         ' 当前图片路径 ＝ 备选答案五编辑框.内容
        赋值 (.图片, 读入文件 (图片完整路径))
        
        赋值 (临时图片J, .图片)
        赋值 (临时图片J路径, 图片完整路径)
        .如果 (等于 (.可视, 真))
            赋值 (.宽度, .宽度)
            赋值 (.高度, 取整 (相乘 (相除 (未知支持库函数_32 (图片完整路径), 未知支持库函数_31 (图片完整路径)), .宽度)))
            
            赋值 (.顶边, 相加 (.顶边, .高度, .顶边))
            赋值 (.左边, 相加 (.左边, .左边))
            .如果 (大于 (相加 (.顶边, .高度), 出题窗口.))
                赋值 (.高度, 相减 (出题窗口., .顶边, 48))
                赋值 (.宽度, 取整 (相乘 (相除 (未知支持库函数_31 (图片完整路径), 未知支持库函数_32 (图片完整路径)), .高度)))
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .否则
        赋值 (.可视, 假)
        .如果 (大于 (取文本长度 (.内容), 40))
            
            赋值 (.可视, 假)
            赋值 (., 真)
            赋值 (., .宽度)
            赋值 (., 50)
            赋值 (., 相加 (.左边, .左边))
            赋值 (., 相加 (.顶边, .高度, .顶边))
            赋值 (., .内容)
            
        .否则
            赋值 (., 假)
        .如果结束
        
    .如果结束
    
    
.如果结束






.子程序 _问题编辑框_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 被分割文本, 文本型, , "2", 
.局部变量 分割文本完整路径, 文本型, , , 

.如果 (等于 (出题窗口., “出题模式”))
    0.置文本 (“在此输入问题。”)
.否则
    0.置文本 (“显示题目所提问题。”)
.如果结束

.如果 (大于 (取文本长度 (.内容), 240))
     ' 备选答案图片框.可视 ＝ 假
    赋值 (., 真)
     ' 问题超级编辑框.可视 ＝ 真
    赋值 (., 相加 (.左边, .左边))
    赋值 (., .宽度)
    赋值 (., 取整 (相乘 (相除 (取文本长度 (.内容), 56), 18)))
    赋值 (., 相加 (.顶边, .高度, .顶边))
    赋值 (., .内容)
    赋值 (.顶边, 相加 (., .))
.否则
    赋值 (., 假)
.如果结束


.如果 (等于 (出题窗口., “考试模式”))
    赋值 (被分割文本, 分割文本 (.内容, “|”, 2))
    .如果 (等于 (取数组成员数 (被分割文本), 2))
        .如果 (等于 (寻找文本 (被分割文本 [2], “\”, , 假), -1))
            赋值 (分割文本完整路径, 相加 (题库路径, “\”, 被分割文本 [2]))
        .否则
            赋值 (分割文本完整路径, 被分割文本 [2])
        .如果结束
        调试输出 (分割文本完整路径)
        .如果 (等于 (图片路径, 分割文本完整路径))
            .如果 (不等于 (取字节集长度 (临时图片0), 0))
                赋值 (.可视, 真)
                 ' 备选答案图片框.图片 ＝ 临时图片0
                赋值 (.左边, 相加 (.左边, .左边))
                .如果 (等于 (., 假))
                    赋值 (.顶边, 相减 (相加 (.顶边, .高度), 20))
                .否则
                    赋值 (.顶边, 相加 (., .))
                .如果结束
                
                 ' 备选答案图片框.宽度 ＝ 问题编辑框.宽度
                 ' 备选答案图片框.高度 ＝ 取整 (备选答案图片框.宽度 × 原图高宽比)
                
                 ' .如果 (大于 (相加 (.顶边, .高度), 出题窗口.))
                    
                     ' 备选答案图片框.高度 ＝ 出题窗口.高度 － 备选答案图片框.顶边 － 48
                     ' 备选答案图片框.宽度 ＝ 取整 (备选答案图片框.高度 ÷ 原图高宽比)
                .否则
                    
                .如果结束
                
                
                
                
                
                
                
                 ' 备选答案图片框.图片 ＝ 临时图片0
                
            .否则
                
            .如果结束
            
        .否则
            赋值 (图片路径, 分割文本完整路径)
            赋值 (全局图片路径, 图片路径)
            .如果 (等于 (文件是否存在 (图片路径), 真))
                赋值 (.可视, 真)
                赋值 (.图片, 读入文件 (图片路径))
                赋值 (临时图片0, .图片)
                 ' 备选答案图片框.宽度 ＝ 问题编辑框.宽度
                赋值 (原图高宽比, 相除 (未知支持库函数_32 (图片路径), 未知支持库函数_31 (图片路径)))
                
                 ' 备选答案图片框.高度 ＝ 取整 (原图高宽比 × 备选答案图片框.宽度)
                
                
                .如果 (等于 (.可视, 真))
                    .如果 (等于 (., 假))
                        赋值 (.顶边, 相减 (相加 (.顶边, .高度), 20))
                    .否则
                        赋值 (.顶边, 相加 (., .))
                    .如果结束
                    
                    赋值 (.宽度, .宽度)
                    赋值 (.高度, 取整 (相乘 (.宽度, 原图高宽比)))
                    
                     ' 备选答案图片框.宽度 ＝ 取整 (备选答案图片框.高度 ÷ 原图高宽比)
                     ' 输出调试文本 (“2,” ＋ 到文本 (原图高宽比))
                     ' 输出调试文本 (到文本 (备选答案图片框.宽度) ＋ #换行符 ＋ 到文本 (备选答案图片框.高度) ＋ #换行符 ＋ 到文本 (出题窗口.高度 － 备选答案图片框.顶边))
                    
                    .如果 (大于 (相加 (.顶边, .高度), 出题窗口.))
                        
                        赋值 (.高度, 相减 (出题窗口., .顶边, 48))
                        赋值 (.宽度, 取整 (相除 (.高度, 原图高宽比)))
                    .否则
                        
                    .如果结束
                    
                .否则
                    
                .如果结束
                
                
                
                
                
                
            .否则
                
            .如果结束
            
        .如果结束
        
        
        
        
        
        
        
    .否则
        赋值 (图片路径, “”)
        
    .如果结束
    
.否则
    
.如果结束







.子程序 _备选答案显示编辑框_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (., 假)
.如果 (等于 (.可视, 真))
    赋值 (.顶边, 相加 (., 15))
    .如果 (大于 (相加 (.顶边, .高度), 出题窗口.))
        赋值 (.高度, 相减 (出题窗口., .顶边))
        
        信息框 (相加 (到文本 (.高度), #换行符, 到文本 (原图高宽比)), 0, )
        赋值 (.宽度, 取整 (相除 (.高度, 原图高宽比)))
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束


.子程序 _备选答案分组框_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (., 假)

.子程序 _复制_被选择, 空白型, , 
赋值 (题目副本.问题, .内容)

题目副本.选项赋值 (.选项 [1], .内容, 假)
题目副本.选项赋值 (.选项 [2], .内容, 假)
题目副本.选项赋值 (.选项 [3], .内容, 假)
题目副本.选项赋值 (.选项 [4], .内容, 假)
题目副本.选项赋值 (.选项 [5], .内容, 假)
题目副本.选项赋值 (.选项 [6], .内容, 假)
题目副本.选项赋值 (.选项 [7], .内容, 假)
题目副本.选项赋值 (.选项 [8], .内容, 假)
题目副本.选项赋值 (.选项 [9], .内容, 假)
题目副本.选项赋值 (.选项 [10], .内容, 假)

赋值 (题目副本.答案, .内容)
赋值 (题目副本.提示, .内容)
赋值 (.可视, 真)


.子程序 _粘贴按钮_被单击, 空白型, , 
赋值 (.内容, 题目副本.问题)
赋值 (.内容, 题目副本.取选项文本 (.选项 [1]))
赋值 (.内容, 题目副本.取选项文本 (.选项 [2]))
赋值 (.内容, 题目副本.取选项文本 (.选项 [3]))
赋值 (.内容, 题目副本.取选项文本 (.选项 [4]))
赋值 (.内容, 题目副本.取选项文本 (.选项 [5]))
赋值 (.内容, 题目副本.取选项文本 (.选项 [6]))
赋值 (.内容, 题目副本.取选项文本 (.选项 [7]))
赋值 (.内容, 题目副本.取选项文本 (.选项 [8]))
赋值 (.内容, 题目副本.取选项文本 (.选项 [9]))
赋值 (.内容, 题目副本.取选项文本 (.选项 [10]))

赋值 (.内容, 题目副本.答案)
赋值 (.内容, 题目副本.提示)
赋值 (.可视, 假)


.子程序 _提示按钮_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.内容, 提示信息)
赋值 (.可视, 假)





.子程序 _提示按钮_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.内容, “”)
赋值 (.可视, 真)


.子程序 _选项组合框_编辑内容被改变, 空白型, , 
.如果真 (等于 (到整数 (.内容), 0))
    连续赋值 (假, .可视, .可视, .可视, .可视, .可视, .可视, .可视, .可视, .可视, .可视)
    连续赋值 (假, .可视, .可视, .可视, .可视, .可视, .可视, .可视, .可视, .可视, .可视)
    连续赋值 (假, .可视, .可视, .可视, .可视, .可视, .可视, .可视, .可视, .可视, .可视)
    赋值 (.可视, 假)
    赋值 (.高度, 0)
.如果真结束

.如果真 (等于 (到整数 (.内容), 1))
    连续赋值 (真, .可视)
    连续赋值 (真, .可视)
    连续赋值 (真, .可视)
    
    连续赋值 (假, .可视, .可视, .可视, .可视, .可视, .可视, .可视, .可视, .可视)
    连续赋值 (假, .可视, .可视, .可视, .可视, .可视, .可视, .可视, .可视, .可视)
    连续赋值 (假, .可视, .可视, .可视, .可视, .可视, .可视, .可视, .可视, .可视)
    赋值 (.可视, 真)
    赋值 (.高度, 相减 (234, 相乘 (相减 (10, 到整数 (.内容)), 21)))
.如果真结束

.如果真 (等于 (到整数 (.内容), 2))
    连续赋值 (真, .可视, .可视)
    连续赋值 (真, .可视, .可视)
    连续赋值 (真, .可视, .可视)
    
    连续赋值 (假, .可视, .可视, .可视, .可视, .可视, .可视, .可视, .可视)
    连续赋值 (假, .可视, .可视, .可视, .可视, .可视, .可视, .可视, .可视)
    连续赋值 (假, .可视, .可视, .可视, .可视, .可视, .可视, .可视, .可视)
    赋值 (.可视, 真)
    赋值 (.高度, 相减 (234, 相乘 (相减 (10, 到整数 (.内容)), 21)))
    
.如果真结束

.如果真 (等于 (到整数 (.内容), 3))
     ' 连续赋值 (真, )
    连续赋值 (真, .可视, .可视, .可视)
    连续赋值 (真, .可视, .可视, .可视)
    连续赋值 (真, .可视, .可视, .可视)
    
    连续赋值 (假, .可视, .可视, .可视, .可视, .可视, .可视, .可视)
    连续赋值 (假, .可视, .可视, .可视, .可视, .可视, .可视, .可视)
    连续赋值 (假, .可视, .可视, .可视, .可视, .可视, .可视, .可视)
    赋值 (.可视, 真)
    赋值 (.高度, 相减 (234, 相乘 (相减 (10, 到整数 (.内容)), 21)))
    
.如果真结束

.如果真 (等于 (到整数 (.内容), 4))
     ' 连续赋值 (真, )
    连续赋值 (真, .可视, .可视, .可视, .可视)
    连续赋值 (真, .可视, .可视, .可视, .可视)
    连续赋值 (真, .可视, .可视, .可视, .可视)
    
    连续赋值 (假, .可视, .可视, .可视, .可视, .可视, .可视)
    连续赋值 (假, .可视, .可视, .可视, .可视, .可视, .可视)
    连续赋值 (假, .可视, .可视, .可视, .可视, .可视, .可视)
    赋值 (.可视, 真)
    赋值 (.高度, 相减 (234, 相乘 (相减 (10, 到整数 (.内容)), 21)))
    
.如果真结束

.如果真 (等于 (到整数 (.内容), 5))
     ' 连续赋值 (真, )
    连续赋值 (真, .可视, .可视, .可视, .可视, .可视)
    连续赋值 (真, .可视, .可视, .可视, .可视, .可视)
    连续赋值 (真, .可视, .可视, .可视, .可视, .可视)
    
    
    连续赋值 (假, .可视, .可视, .可视, .可视, .可视)
    连续赋值 (假, .可视, .可视, .可视, .可视, .可视)
    连续赋值 (假, .可视, .可视, .可视, .可视, .可视)
    赋值 (.可视, 真)
    赋值 (.高度, 相减 (234, 相乘 (相减 (10, 到整数 (.内容)), 21)))
    
.如果真结束

.如果真 (等于 (到整数 (.内容), 6))
     ' 连续赋值 (真, )
    连续赋值 (真, .可视, .可视, .可视, .可视, .可视, .可视)
    连续赋值 (真, .可视, .可视, .可视, .可视, .可视, .可视)
    连续赋值 (真, .可视, .可视, .可视, .可视, .可视, .可视)
    
    
    连续赋值 (假, .可视, .可视, .可视, .可视)
    连续赋值 (假, .可视, .可视, .可视, .可视)
    连续赋值 (假, .可视, .可视, .可视, .可视)
    赋值 (.可视, 真)
    赋值 (.高度, 相减 (234, 相乘 (相减 (10, 到整数 (.内容)), 21)))
    
.如果真结束

.如果真 (等于 (到整数 (.内容), 7))
     ' 连续赋值 (真, )
    连续赋值 (真, .可视, .可视, .可视, .可视, .可视, .可视, .可视)
    连续赋值 (真, .可视, .可视, .可视, .可视, .可视, .可视, .可视)
    连续赋值 (真, .可视, .可视, .可视, .可视, .可视, .可视, .可视)
    
    
    连续赋值 (假, .可视, .可视, .可视)
    连续赋值 (假, .可视, .可视, .可视)
    连续赋值 (假, .可视, .可视, .可视)
    赋值 (.可视, 真)
    赋值 (.高度, 相减 (234, 相乘 (相减 (10, 到整数 (.内容)), 21)))
    
.如果真结束

.如果真 (等于 (到整数 (.内容), 8))
     ' 连续赋值 (真, )
    连续赋值 (真, .可视, .可视, .可视, .可视, .可视, .可视, .可视, .可视)
    连续赋值 (真, .可视, .可视, .可视, .可视, .可视, .可视, .可视, .可视)
    连续赋值 (真, .可视, .可视, .可视, .可视, .可视, .可视, .可视, .可视)
    
    
    连续赋值 (假, .可视, .可视)
    连续赋值 (假, .可视, .可视)
    连续赋值 (假, .可视, .可视)
    赋值 (.可视, 真)
    赋值 (.高度, 相减 (234, 相乘 (相减 (10, 到整数 (.内容)), 21)))
    
.如果真结束

.如果真 (等于 (到整数 (.内容), 9))
     ' 连续赋值 (真, )
    连续赋值 (真, .可视, .可视, .可视, .可视, .可视, .可视, .可视, .可视, .可视)
    连续赋值 (真, .可视, .可视, .可视, .可视, .可视, .可视, .可视, .可视, .可视)
    连续赋值 (真, .可视, .可视, .可视, .可视, .可视, .可视, .可视, .可视, .可视)
    
    连续赋值 (假, .可视)
    连续赋值 (假, .可视)
    连续赋值 (假, .可视)
    赋值 (.可视, 真)
    赋值 (.高度, 相减 (234, 相乘 (相减 (10, 到整数 (.内容)), 21)))
    
.如果真结束

.如果真 (等于 (到整数 (.内容), 10))
     ' 连续赋值 (真, )
    连续赋值 (真, .可视, .可视, .可视, .可视, .可视, .可视, .可视, .可视, .可视, .可视)
    连续赋值 (真, .可视, .可视, .可视, .可视, .可视, .可视, .可视, .可视, .可视, .可视)
    连续赋值 (真, .可视, .可视, .可视, .可视, .可视, .可视, .可视, .可视, .可视, .可视)
    赋值 (.可视, 真)
    赋值 (.高度, 相减 (234, 相乘 (相减 (10, 到整数 (.内容)), 21)))
    
.如果真结束

赋值 (.顶边, 相加 (.顶边, .高度, 1))
赋值 (.顶边, 相加 (.顶边, .高度, 1))
赋值 (.高度, 相减 (相加 (.高度, .高度, .高度, .高度), 5))
赋值 (出题窗口., 相加 (.顶边, .高度, 50))

.子程序 _选项组合框_列表项被选择, 空白型, , 
_选项组合框_编辑内容被改变 ()
.如果 (并且 (等于 (.内容, “填空”), 等于 (出题窗口., “出题模式”)))
    获取焦点 ()
    赋值 (.起始选择位置, 取文本长度 (.内容))
    .如果 (等于 (.内容, “0”))
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ A ]”, , 假), 5, )
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ B ]”, , 假), 5, )
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ C ]”, , 假), 5, )
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ D ]”, , 假), 5, )
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ E ]”, , 假), 5, )
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ F ]”, , 假), 5, )
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ G ]”, , 假), 5, )
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ H ]”, , 假), 5, )
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ I ]”, , 假), 5, )
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ J ]”, , 假), 5, )
    .否则
        
    .如果结束
    .如果 (等于 (.内容, “1”))
        
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ B ]”, , 假), 5, )
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ C ]”, , 假), 5, )
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ D ]”, , 假), 5, )
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ E ]”, , 假), 5, )
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ F ]”, , 假), 5, )
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ G ]”, , 假), 5, )
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ H ]”, , 假), 5, )
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ I ]”, , 假), 5, )
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ J ]”, , 假), 5, )
        
        .如果 (等于 (寻找文本 (.内容, “[ A ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ A ]”))
        .否则
            
        .如果结束
        
        
    .否则
        
    .如果结束
    .如果 (等于 (.内容, “2”))
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ C ]”, , 假), 5, )
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ D ]”, , 假), 5, )
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ E ]”, , 假), 5, )
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ F ]”, , 假), 5, )
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ G ]”, , 假), 5, )
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ H ]”, , 假), 5, )
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ I ]”, , 假), 5, )
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ J ]”, , 假), 5, )
        
        .如果 (等于 (寻找文本 (.内容, “[ A ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ A ]”))
        .否则
            
        .如果结束
        .如果 (等于 (寻找文本 (.内容, “[ B ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ B ]”))
        .否则
            
        .如果结束
        
        
    .否则
        
    .如果结束
    .如果 (等于 (.内容, “3”))
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ D ]”, , 假), 5, )
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ E ]”, , 假), 5, )
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ F ]”, , 假), 5, )
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ G ]”, , 假), 5, )
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ H ]”, , 假), 5, )
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ I ]”, , 假), 5, )
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ J ]”, , 假), 5, )
        
        .如果 (等于 (寻找文本 (.内容, “[ A ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ A ]”))
        .否则
            
        .如果结束
        .如果 (等于 (寻找文本 (.内容, “[ B ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ B ]”))
        .否则
            
        .如果结束
        .如果 (等于 (寻找文本 (.内容, “[ C ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ C ]”))
        .否则
            
        .如果结束
        
        
    .否则
        
    .如果结束
    .如果 (等于 (.内容, “4”))
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ E ]”, , 假), 5, )
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ F ]”, , 假), 5, )
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ G ]”, , 假), 5, )
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ H ]”, , 假), 5, )
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ I ]”, , 假), 5, )
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ J ]”, , 假), 5, )
        
        .如果 (等于 (寻找文本 (.内容, “[ A ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ A ]”))
        .否则
            
        .如果结束
        .如果 (等于 (寻找文本 (.内容, “[ B ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ B ]”))
        .否则
            
        .如果结束
        .如果 (等于 (寻找文本 (.内容, “[ C ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ C ]”))
        .否则
            
        .如果结束
        .如果 (等于 (寻找文本 (.内容, “[ D ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ D ]”))
        .否则
            
        .如果结束
        
        
    .否则
        
    .如果结束
    .如果 (等于 (.内容, “5”))
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ F ]”, , 假), 5, )
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ G ]”, , 假), 5, )
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ H ]”, , 假), 5, )
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ I ]”, , 假), 5, )
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ J ]”, , 假), 5, )
        
        .如果 (等于 (寻找文本 (.内容, “[ A ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ A ]”))
        .否则
            
        .如果结束
        .如果 (等于 (寻找文本 (.内容, “[ B ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ B ]”))
        .否则
            
        .如果结束
        .如果 (等于 (寻找文本 (.内容, “[ C ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ C ]”))
        .否则
            
        .如果结束
        .如果 (等于 (寻找文本 (.内容, “[ D ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ D ]”))
        .否则
            
        .如果结束
        .如果 (等于 (寻找文本 (.内容, “[ E ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ E ]”))
        .否则
            
        .如果结束
        
        
    .否则
        
    .如果结束
    .如果 (等于 (.内容, “6”))
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ G ]”, , 假), 5, )
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ H ]”, , 假), 5, )
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ I ]”, , 假), 5, )
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ J ]”, , 假), 5, )
        
        .如果 (等于 (寻找文本 (.内容, “[ A ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ A ]”))
        .否则
            
        .如果结束
        .如果 (等于 (寻找文本 (.内容, “[ B ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ B ]”))
        .否则
            
        .如果结束
        .如果 (等于 (寻找文本 (.内容, “[ C ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ C ]”))
        .否则
            
        .如果结束
        .如果 (等于 (寻找文本 (.内容, “[ D ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ D ]”))
        .否则
            
        .如果结束
        .如果 (等于 (寻找文本 (.内容, “[ E ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ E ]”))
        .否则
            
        .如果结束
        .如果 (等于 (寻找文本 (.内容, “[ F ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ F ]”))
        .否则
            
        .如果结束
        
        
    .否则
        
    .如果结束
    .如果 (等于 (.内容, “7”))
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ H ]”, , 假), 5, )
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ I ]”, , 假), 5, )
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ J ]”, , 假), 5, )
        
        .如果 (等于 (寻找文本 (.内容, “[ A ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ A ]”))
        .否则
            
        .如果结束
        .如果 (等于 (寻找文本 (.内容, “[ B ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ B ]”))
        .否则
            
        .如果结束
        .如果 (等于 (寻找文本 (.内容, “[ C ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ C ]”))
        .否则
            
        .如果结束
        .如果 (等于 (寻找文本 (.内容, “[ D ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ D ]”))
        .否则
            
        .如果结束
        .如果 (等于 (寻找文本 (.内容, “[ E ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ E ]”))
        .否则
            
        .如果结束
        .如果 (等于 (寻找文本 (.内容, “[ F ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ F ]”))
        .否则
            
        .如果结束
        .如果 (等于 (寻找文本 (.内容, “[ G ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ G ]”))
        .否则
            
        .如果结束
        
        
    .否则
        
    .如果结束
    .如果 (等于 (.内容, “8”))
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ I ]”, , 假), 5, )
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ J ]”, , 假), 5, )
        
        .如果 (等于 (寻找文本 (.内容, “[ A ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ A ]”))
        .否则
            
        .如果结束
        .如果 (等于 (寻找文本 (.内容, “[ B ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ B ]”))
        .否则
            
        .如果结束
        .如果 (等于 (寻找文本 (.内容, “[ C ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ C ]”))
        .否则
            
        .如果结束
        .如果 (等于 (寻找文本 (.内容, “[ D ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ D ]”))
        .否则
            
        .如果结束
        .如果 (等于 (寻找文本 (.内容, “[ E ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ E ]”))
        .否则
            
        .如果结束
        .如果 (等于 (寻找文本 (.内容, “[ F ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ F ]”))
        .否则
            
        .如果结束
        .如果 (等于 (寻找文本 (.内容, “[ G ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ G ]”))
        .否则
            
        .如果结束
        .如果 (等于 (寻找文本 (.内容, “[ H ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ H ]”))
        .否则
            
        .如果结束
        
        
    .否则
        
    .如果结束
    .如果 (等于 (.内容, “9”))
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ J ]”, , 假), 5, )
        
        .如果 (等于 (寻找文本 (.内容, “[ A ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ A ]”))
        .否则
            
        .如果结束
        .如果 (等于 (寻找文本 (.内容, “[ B ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ B ]”))
        .否则
            
        .如果结束
        .如果 (等于 (寻找文本 (.内容, “[ C ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ C ]”))
        .否则
            
        .如果结束
        .如果 (等于 (寻找文本 (.内容, “[ D ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ D ]”))
        .否则
            
        .如果结束
        .如果 (等于 (寻找文本 (.内容, “[ E ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ E ]”))
        .否则
            
        .如果结束
        .如果 (等于 (寻找文本 (.内容, “[ F ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ F ]”))
        .否则
            
        .如果结束
        .如果 (等于 (寻找文本 (.内容, “[ G ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ G ]”))
        .否则
            
        .如果结束
        .如果 (等于 (寻找文本 (.内容, “[ H ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ H ]”))
        .否则
            
        .如果结束
        .如果 (等于 (寻找文本 (.内容, “[ I ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ I ]”))
        .否则
            
        .如果结束
        
        
    .否则
        
    .如果结束
    .如果 (等于 (.内容, “10”))
        
        .如果 (等于 (寻找文本 (.内容, “[ A ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ A ]”))
        .否则
            
        .如果结束
        .如果 (等于 (寻找文本 (.内容, “[ B ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ B ]”))
        .否则
            
        .如果结束
        .如果 (等于 (寻找文本 (.内容, “[ C ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ C ]”))
        .否则
            
        .如果结束
        .如果 (等于 (寻找文本 (.内容, “[ D ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ D ]”))
        .否则
            
        .如果结束
        .如果 (等于 (寻找文本 (.内容, “[ E ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ E ]”))
        .否则
            
        .如果结束
        .如果 (等于 (寻找文本 (.内容, “[ F ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ F ]”))
        .否则
            
        .如果结束
        .如果 (等于 (寻找文本 (.内容, “[ G ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ G ]”))
        .否则
            
        .如果结束
        .如果 (等于 (寻找文本 (.内容, “[ H ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ H ]”))
        .否则
            
        .如果结束
        .如果 (等于 (寻找文本 (.内容, “[ I ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ I ]”))
        .否则
            
        .如果结束
        .如果 (等于 (寻找文本 (.内容, “[ J ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ J ]”))
        .否则
            
        .如果结束
        
    .否则
        
    .如果结束
    
    
    
    
.否则
    
.如果结束
.如果 (等于 (.内容, “填空”))
    赋值 (.内容, .内容)
    _分值组合框_列表项被选择 ()
.否则
    
.如果结束


.子程序 _分值组合框_列表项被选择, 空白型, , 
 ' 时间组合框.内容 ＝ 到文本 (到整数 (分值组合框.取项目文本 (分值组合框.现行选中项)) × 20)


.如果 (等于 (出题窗口., “出题模式”))
    赋值 (当前分值, .取项目文本 (.现行选中项))
    赋值 (当前题型, .内容)
    赋值 (.内容, 到文本 (相乘 (到整数 (.内容), 时间分值比)))
    .如果 (或者 (等于 (.内容, “简答”), 等于 (.内容, “论述”)))
        赋值 (简答论述分值累计, 相加 (简答论述分值累计, 到整数 (.内容)))
        赋值 (.内容, 到文本 (简答论述分值累计))
        赋值 (.内容, 相加 (.内容, “ [”, .取项目文本 (.现行选中项), “分] ”))
        获取焦点 ()
        赋值 (.起始选择位置, 取文本长度 (.内容))
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束


.子程序 _备选答案1编辑框_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 交换变量, 文本型, , , 


.如果 (并且 (等于 (功能键状态, 1), 等于 (键代码, #下光标键)))
    .如果 (等于 (.可视, 真))
        赋值 (交换变量, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, 交换变量)
        获取焦点 ()
        
    .否则
         ' #PAGEUP键 #PAGEDOWN键
    .如果结束
    
.否则
    
.如果结束
.如果 (或者 (等于 (键代码, #下光标键), 等于 (键代码, #回车键)))
    .如果 (等于 (.可视, 真))
        获取焦点 ()
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (键代码, #回车键))
    .如果 (等于 (.可视, 假))
        赋值 (.内容, 到文本 (相加 (到整数 (.内容), 1)))
        _选项组合框_编辑内容被改变 ()
        获取焦点 ()
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (功能键状态, 1))
    .如果 (等于 (键代码, #D键))
        赋值 (.内容, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, “”)
        赋值 (.内容, 到文本 (相减 (到整数 (.内容), 1)))
        _选项组合框_编辑内容被改变 ()
         ' 备选答案1编辑框.获取焦点 ()
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (键代码, #Ins键))
    赋值 (.内容, .内容)
    赋值 (.内容, .内容)
    赋值 (.内容, .内容)
    赋值 (.内容, .内容)
    赋值 (.内容, .内容)
    赋值 (.内容, .内容)
    赋值 (.内容, .内容)
    赋值 (.内容, .内容)
    赋值 (.内容, .内容)
    赋值 (.内容, “”)
    赋值 (.内容, 到文本 (相加 (到整数 (.内容), 1)))
    _选项组合框_编辑内容被改变 ()
     ' 备选答案1编辑框.获取焦点 ()
.否则
    
.如果结束


.子程序 _备选答案2编辑框_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 交换变量, 文本型, , , 

.如果 (等于 (.可视, 真))
    .如果 (并且 (等于 (功能键状态, 1), 等于 (键代码, #上光标键)))
        .如果 (等于 (.可视, 真))
            赋值 (交换变量, .内容)
            赋值 (.内容, .内容)
            赋值 (.内容, 交换变量)
            获取焦点 ()
            
        .否则
            
        .如果结束
         ' 交换内容 (备选答案1编辑框.内容, 备选答案2编辑框.内容)
    .否则
        
    .如果结束
    .如果 (并且 (等于 (功能键状态, 1), 等于 (键代码, #下光标键)))
        .如果 (等于 (.可视, 真))
            赋值 (交换变量, .内容)
            赋值 (.内容, .内容)
            赋值 (.内容, 交换变量)
            获取焦点 ()
            
        .否则
            
        .如果结束
         ' 交换内容 (备选答案3编辑框.内容, 备选答案2编辑框.内容)
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (键代码, #上光标键))
    .如果 (等于 (.可视, 真))
        获取焦点 ()
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (或者 (等于 (键代码, #下光标键), 等于 (键代码, #回车键)))
    .如果 (等于 (.可视, 真))
        获取焦点 ()
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (键代码, #回车键))
    .如果 (等于 (.可视, 假))
        赋值 (.内容, 到文本 (相加 (到整数 (.内容), 1)))
        _选项组合框_编辑内容被改变 ()
        获取焦点 ()
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (功能键状态, 1))
    .如果 (等于 (键代码, #D键))
        
        赋值 (.内容, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, “”)
        赋值 (.内容, 到文本 (相减 (到整数 (.内容), 1)))
        _选项组合框_编辑内容被改变 ()
         ' 备选答案1编辑框.获取焦点 ()
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (键代码, #Ins键))
    赋值 (.内容, .内容)
    赋值 (.内容, .内容)
    赋值 (.内容, .内容)
    赋值 (.内容, .内容)
    赋值 (.内容, .内容)
    赋值 (.内容, .内容)
    赋值 (.内容, .内容)
    赋值 (.内容, .内容)
    
    赋值 (.内容, “”)
    赋值 (.内容, 到文本 (相加 (到整数 (.内容), 1)))
    _选项组合框_编辑内容被改变 ()
     ' 备选答案1编辑框.获取焦点 ()
.否则
    
.如果结束


.子程序 _备选答案3编辑框_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 交换变量, 文本型, , , 


.如果 (并且 (等于 (功能键状态, 1), 等于 (键代码, #上光标键)))
    .如果 (等于 (.可视, 真))
        赋值 (交换变量, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, 交换变量)
        获取焦点 ()
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (并且 (等于 (功能键状态, 1), 等于 (键代码, #下光标键)))
    .如果 (等于 (.可视, 真))
        赋值 (交换变量, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, 交换变量)
        获取焦点 ()
        
    .否则
        
    .如果结束
     ' 交换内容 (备选答案4编辑框.内容, 备选答案3编辑框.内容)
.否则
    
.如果结束

.如果 (等于 (键代码, #上光标键))
    .如果 (等于 (.可视, 真))
        获取焦点 ()
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (或者 (等于 (键代码, #下光标键), 等于 (键代码, #回车键)))
    .如果 (等于 (.可视, 真))
        获取焦点 ()
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (键代码, #回车键))
    .如果 (等于 (.可视, 假))
        赋值 (.内容, 到文本 (相加 (到整数 (.内容), 1)))
        _选项组合框_编辑内容被改变 ()
        获取焦点 ()
    .否则
        
    .如果结束
    
.否则
    
.如果结束

.如果 (等于 (功能键状态, 1))
    .如果 (等于 (键代码, #D键))
        赋值 (.内容, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, “”)
        赋值 (.内容, 到文本 (相减 (到整数 (.内容), 1)))
        _选项组合框_编辑内容被改变 ()
         ' 备选答案1编辑框.获取焦点 ()
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (键代码, #Ins键))
    赋值 (.内容, .内容)
    赋值 (.内容, .内容)
    赋值 (.内容, .内容)
    赋值 (.内容, .内容)
    赋值 (.内容, .内容)
    赋值 (.内容, .内容)
    赋值 (.内容, .内容)
    
    赋值 (.内容, “”)
    赋值 (.内容, 到文本 (相加 (到整数 (.内容), 1)))
    _选项组合框_编辑内容被改变 ()
     ' 备选答案1编辑框.获取焦点 ()
.否则
    
.如果结束


.子程序 _备选答案4编辑框_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 交换变量, 文本型, , , 


.如果 (并且 (等于 (功能键状态, 1), 等于 (键代码, #上光标键)))
    .如果 (等于 (.可视, 真))
        赋值 (交换变量, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, 交换变量)
        获取焦点 ()
        
    .否则
        
    .如果结束
     ' 交换内容 (备选答案3编辑框.内容, 备选答案4编辑框.内容)
.否则
    
.如果结束
.如果 (并且 (等于 (功能键状态, 1), 等于 (键代码, #下光标键)))
    .如果 (等于 (.可视, 真))
        赋值 (交换变量, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, 交换变量)
        获取焦点 ()
        
    .否则
        
    .如果结束
     ' 交换内容 (备选答案5编辑框.内容, 备选答案4编辑框.内容)
.否则
    
.如果结束

.如果 (等于 (键代码, #上光标键))
    .如果 (等于 (.可视, 真))
        获取焦点 ()
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (或者 (等于 (键代码, #下光标键), 等于 (键代码, #回车键)))
    .如果 (等于 (.可视, 真))
        获取焦点 ()
    .否则
        
    .如果结束
    
.否则
    
.如果结束

.如果 (等于 (键代码, #回车键))
    .如果 (等于 (.可视, 假))
        赋值 (.内容, 到文本 (相加 (到整数 (.内容), 1)))
        _选项组合框_编辑内容被改变 ()
        获取焦点 ()
    .否则
        
    .如果结束
    
.否则
    
.如果结束

.如果 (等于 (功能键状态, 1))
    .如果 (等于 (键代码, #D键))
        赋值 (.内容, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, “”)
        赋值 (.内容, 到文本 (相减 (到整数 (.内容), 1)))
        _选项组合框_编辑内容被改变 ()
         ' 备选答案1编辑框.获取焦点 ()
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (键代码, #Ins键))
    赋值 (.内容, .内容)
    赋值 (.内容, .内容)
    赋值 (.内容, .内容)
    赋值 (.内容, .内容)
    赋值 (.内容, .内容)
    赋值 (.内容, .内容)
    赋值 (.内容, “”)
    赋值 (.内容, 到文本 (相加 (到整数 (.内容), 1)))
    _选项组合框_编辑内容被改变 ()
     ' 备选答案1编辑框.获取焦点 ()
.否则
    
.如果结束


.子程序 _备选答案5编辑框_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 交换变量, 文本型, , , 


.如果 (并且 (等于 (功能键状态, 1), 等于 (键代码, #上光标键)))
    .如果 (等于 (.可视, 真))
        赋值 (交换变量, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, 交换变量)
        获取焦点 ()
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (并且 (等于 (功能键状态, 1), 等于 (键代码, #下光标键)))
    .如果 (等于 (.可视, 真))
        赋值 (交换变量, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, 交换变量)
        获取焦点 ()
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (键代码, #上光标键))
    .如果 (等于 (.可视, 真))
        获取焦点 ()
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (或者 (等于 (键代码, #下光标键), 等于 (键代码, #回车键)))
    .如果 (等于 (.可视, 真))
        获取焦点 ()
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (键代码, #回车键))
    .如果 (等于 (.可视, 假))
        赋值 (.内容, 到文本 (相加 (到整数 (.内容), 1)))
        _选项组合框_编辑内容被改变 ()
        获取焦点 ()
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (功能键状态, 1))
    .如果 (等于 (键代码, #D键))
        赋值 (.内容, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, “”)
        赋值 (.内容, 到文本 (相减 (到整数 (.内容), 1)))
        _选项组合框_编辑内容被改变 ()
         ' 备选答案1编辑框.获取焦点 ()
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (键代码, #Ins键))
    赋值 (.内容, .内容)
    赋值 (.内容, .内容)
    赋值 (.内容, .内容)
    赋值 (.内容, .内容)
    赋值 (.内容, .内容)
    
    赋值 (.内容, “”)
    赋值 (.内容, 到文本 (相加 (到整数 (.内容), 1)))
    _选项组合框_编辑内容被改变 ()
     ' 备选答案1编辑框.获取焦点 ()
.否则
    
.如果结束


.子程序 _备选答案6编辑框_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 交换变量, 文本型, , , 


.如果 (并且 (等于 (功能键状态, 1), 等于 (键代码, #上光标键)))
    .如果 (等于 (.可视, 真))
        赋值 (交换变量, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, 交换变量)
        获取焦点 ()
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (并且 (等于 (功能键状态, 1), 等于 (键代码, #下光标键)))
    .如果 (等于 (.可视, 真))
        赋值 (交换变量, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, 交换变量)
        获取焦点 ()
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (键代码, #上光标键))
    .如果 (等于 (.可视, 真))
        获取焦点 ()
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (或者 (等于 (键代码, #下光标键), 等于 (键代码, #回车键)))
    .如果 (等于 (.可视, 真))
        获取焦点 ()
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (键代码, #回车键))
    .如果 (等于 (.可视, 假))
        赋值 (.内容, 到文本 (相加 (到整数 (.内容), 1)))
        _选项组合框_编辑内容被改变 ()
        获取焦点 ()
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (功能键状态, 1))
    .如果 (等于 (键代码, #D键))
        赋值 (.内容, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, “”)
        赋值 (.内容, 到文本 (相减 (到整数 (.内容), 1)))
        _选项组合框_编辑内容被改变 ()
         ' 备选答案1编辑框.获取焦点 ()
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (键代码, #Ins键))
    赋值 (.内容, .内容)
    赋值 (.内容, .内容)
    赋值 (.内容, .内容)
    赋值 (.内容, .内容)
    赋值 (.内容, “”)
    赋值 (.内容, 到文本 (相加 (到整数 (.内容), 1)))
    _选项组合框_编辑内容被改变 ()
     ' 备选答案1编辑框.获取焦点 ()
.否则
    
.如果结束


.子程序 _备选答案7编辑框_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 交换变量, 文本型, , , 


.如果 (并且 (等于 (功能键状态, 1), 等于 (键代码, #上光标键)))
    .如果 (等于 (.可视, 真))
        赋值 (交换变量, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, 交换变量)
        获取焦点 ()
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (并且 (等于 (功能键状态, 1), 等于 (键代码, #下光标键)))
    .如果 (等于 (.可视, 真))
        赋值 (交换变量, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, 交换变量)
        获取焦点 ()
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (键代码, #上光标键))
    .如果 (等于 (.可视, 真))
        获取焦点 ()
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (或者 (等于 (键代码, #下光标键), 等于 (键代码, #回车键)))
    .如果 (等于 (.可视, 真))
        获取焦点 ()
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (键代码, #回车键))
    .如果 (等于 (.可视, 假))
        赋值 (.内容, 到文本 (相加 (到整数 (.内容), 1)))
        _选项组合框_编辑内容被改变 ()
        获取焦点 ()
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (功能键状态, 1))
    .如果 (等于 (键代码, #D键))
        赋值 (.内容, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, “”)
        赋值 (.内容, 到文本 (相减 (到整数 (.内容), 1)))
        _选项组合框_编辑内容被改变 ()
         ' 备选答案1编辑框.获取焦点 ()
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (键代码, #Ins键))
    赋值 (.内容, .内容)
    赋值 (.内容, .内容)
    赋值 (.内容, .内容)
    赋值 (.内容, “”)
    赋值 (.内容, 到文本 (相加 (到整数 (.内容), 1)))
    _选项组合框_编辑内容被改变 ()
     ' 备选答案1编辑框.获取焦点 ()
.否则
    
.如果结束


.子程序 _备选答案8编辑框_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 交换变量, 文本型, , , 

.如果 (并且 (等于 (功能键状态, 1), 等于 (键代码, #上光标键)))
    .如果 (等于 (.可视, 真))
        赋值 (交换变量, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, 交换变量)
        获取焦点 ()
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (并且 (等于 (功能键状态, 1), 等于 (键代码, #下光标键)))
    .如果 (等于 (.可视, 真))
        赋值 (交换变量, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, 交换变量)
        获取焦点 ()
        
    .否则
        
    .如果结束
     ' 交换内容 (备选答案9编辑框.内容, 备选答案8编辑框.内容)
.否则
    
.如果结束
.如果 (等于 (键代码, #上光标键))
    .如果 (等于 (.可视, 真))
        获取焦点 ()
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (或者 (等于 (键代码, #下光标键), 等于 (键代码, #回车键)))
    .如果 (等于 (.可视, 真))
        获取焦点 ()
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (键代码, #回车键))
    .如果 (等于 (.可视, 假))
        赋值 (.内容, 到文本 (相加 (到整数 (.内容), 1)))
        _选项组合框_编辑内容被改变 ()
        获取焦点 ()
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (功能键状态, 1))
    .如果 (等于 (键代码, #D键))
        赋值 (.内容, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, “”)
        赋值 (.内容, 到文本 (相减 (到整数 (.内容), 1)))
        _选项组合框_编辑内容被改变 ()
         ' 备选答案1编辑框.获取焦点 ()
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (键代码, #Ins键))
    赋值 (.内容, .内容)
    赋值 (.内容, .内容)
    赋值 (.内容, “”)
    赋值 (.内容, 到文本 (相加 (到整数 (.内容), 1)))
    _选项组合框_编辑内容被改变 ()
     ' 备选答案1编辑框.获取焦点 ()
.否则
    
.如果结束


.子程序 _备选答案9编辑框_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 交换变量, 文本型, , , 


.如果 (并且 (等于 (功能键状态, 1), 等于 (键代码, #上光标键)))
    
    .如果 (等于 (.可视, 真))
        赋值 (交换变量, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, 交换变量)
        获取焦点 ()
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (并且 (等于 (功能键状态, 1), 等于 (键代码, #下光标键)))
    .如果 (等于 (.可视, 真))
        赋值 (交换变量, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, 交换变量)
        获取焦点 ()
        
    .否则
        
    .如果结束
     ' 交换内容 (备选答案10编辑框.内容, 备选答案9编辑框.内容)
.否则
    
.如果结束
.如果 (等于 (键代码, #上光标键))
    .如果 (等于 (.可视, 真))
        获取焦点 ()
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (或者 (等于 (键代码, #下光标键), 等于 (键代码, #回车键)))
    .如果 (等于 (.可视, 真))
        获取焦点 ()
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (键代码, #回车键))
    .如果 (等于 (.可视, 假))
        赋值 (.内容, 到文本 (相加 (到整数 (.内容), 1)))
        _选项组合框_编辑内容被改变 ()
        获取焦点 ()
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (功能键状态, 1))
    .如果 (等于 (键代码, #D键))
        赋值 (.内容, .内容)
        赋值 (.内容, “”)
        赋值 (.内容, 到文本 (相减 (到整数 (.内容), 1)))
        _选项组合框_编辑内容被改变 ()
         ' 备选答案1编辑框.获取焦点 ()
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (键代码, #Ins键))
    赋值 (.内容, .内容)
    赋值 (.内容, “”)
    赋值 (.内容, 到文本 (相加 (到整数 (.内容), 1)))
    _选项组合框_编辑内容被改变 ()
     ' 备选答案1编辑框.获取焦点 ()
.否则
    
.如果结束


.子程序 _备选答案10编辑框_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 交换变量, 文本型, , , 

.如果 (并且 (等于 (功能键状态, 1), 等于 (键代码, #上光标键)))
    .如果 (等于 (.可视, 真))
        赋值 (交换变量, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, 交换变量)
        获取焦点 ()
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (键代码, #上光标键))
    .如果 (等于 (.可视, 真))
        获取焦点 ()
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (功能键状态, 1))
    .如果 (等于 (键代码, #D键))
        赋值 (.内容, “”)
        赋值 (.内容, 到文本 (相减 (到整数 (.内容), 1)))
        _选项组合框_编辑内容被改变 ()
         ' 备选答案1编辑框.获取焦点 ()
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束





.子程序 交换内容, 空白型, , 
.参数 内容1, 未知类型0x80016, , 
.参数 内容2, 未知类型0x80016, , 

.局部变量 交换变量, 未知类型0x80016, , , 

 ' 交换变量 ＝ 内容1
 ' 内容1 ＝ 内容2
 ' 内容2 ＝ 交换变量



.子程序 字母数字排序, 文本型, , 
.参数 待排序文本, 文本型, , 

.局部变量 单字符分割文本, 文本型, , "0", 
.局部变量 文本长度, 整数型, , , 
.局部变量 循环变量1, 空白型, , , 
.局部变量 交换变量1, 文本型, , , 
.局部变量 文本串, 文本型, , , 

赋值 (文本长度, 取文本长度 (待排序文本))
重定义数组 (单字符分割文本, 假, 文本长度)
.计次循环首 (文本长度, 循环变量1) ' 数组赋值
    赋值 (单字符分割文本 [循环变量1], 取文本中间 (待排序文本, 循环变量1, 1))
.计次循环尾 ()
.计次循环首 (文本长度, ) ' 比较交换
    .计次循环首 (文本长度, 循环变量1) ' 比较交换
        赋值 (交换变量1, 单字符分割文本 [循环变量1])
        .如果 (小于或等于 (相加 (循环变量1, 1), 文本长度))
            .如果 (大于 (单字符分割文本 [循环变量1], 单字符分割文本 [相加 (循环变量1, 1)]))
                赋值 (单字符分割文本 [循环变量1], 单字符分割文本 [相加 (循环变量1, 1)])
                赋值 (单字符分割文本 [相加 (循环变量1, 1)], 交换变量1)
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .计次循环尾 ()
    
.计次循环尾 ()
.计次循环首 (文本长度, 循环变量1)
    赋值 (文本串, 相加 (文本串, 单字符分割文本 [循环变量1]))
.计次循环尾 ()
返回 (文本串)


.子程序 多项选择答案识别简化版, 文本型, , 
.局部变量 多项选择答案, 文本型, , , 

.如果 (并且 (等于 (.选中, 真), 等于 (.可视, 真)))
    赋值 (多项选择答案, 相加 (多项选择答案, “A”))
.否则
    
.如果结束
.如果 (并且 (等于 (.选中, 真), 等于 (.可视, 真)))
    赋值 (多项选择答案, 相加 (多项选择答案, “B”))
    
.否则
    
.如果结束
.如果 (并且 (等于 (.选中, 真), 等于 (.可视, 真)))
    赋值 (多项选择答案, 相加 (多项选择答案, “C”))
    
.否则
    
.如果结束
.如果 (并且 (等于 (.选中, 真), 等于 (.可视, 真)))
    赋值 (多项选择答案, 相加 (多项选择答案, “D”))
    
.否则
    
.如果结束
.如果 (并且 (等于 (.选中, 真), 等于 (.可视, 真)))
    赋值 (多项选择答案, 相加 (多项选择答案, “E”))
    
    
.否则
    
.如果结束
.如果 (并且 (等于 (.选中, 真), 等于 (.可视, 真)))
    赋值 (多项选择答案, 相加 (多项选择答案, “F”))
    
.否则
    
.如果结束
.如果 (并且 (等于 (.选中, 真), 等于 (.可视, 真)))
    赋值 (多项选择答案, 相加 (多项选择答案, “G”))
    
.否则
    
.如果结束
.如果 (并且 (等于 (.选中, 真), 等于 (.可视, 真)))
    赋值 (多项选择答案, 相加 (多项选择答案, “H”))
    
.否则
    
.如果结束
.如果 (并且 (等于 (.选中, 真), 等于 (.可视, 真)))
    赋值 (多项选择答案, 相加 (多项选择答案, “I”))
    
.否则
    
.如果结束
.如果 (并且 (等于 (.选中, 真), 等于 (.可视, 真)))
    赋值 (多项选择答案, 相加 (多项选择答案, “J”))
    
.否则
    
.如果结束
.如果 (或者 (等于 (.内容, #单项选择), 等于 (.内容, #多项选择), 等于 (.内容, #材料分析)))
    .如果 (大于 (取代码 (.内容, ), 相加 (64, 到整数 (.内容))))
         ' 信息框 (到文本 (取代码 (答题编辑框.内容, )) ＋ #换行符 ＋ 到文本 (64 ＋ 到整数 (选项组合框.内容)), 0, )
        赋值 (多项选择答案, “”)
    .否则
        
    .如果结束
    
.否则
    
.如果结束

返回 (多项选择答案)


.子程序 _答题编辑框_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 临时文本, 文本型, , , 

.如果 (等于 (.内容, “单项选择”))
    赋值 (.内容, “”)
.否则
    
.如果结束
 ' .如果 (或者 (等于 (.内容, #单项选择), 等于 (.内容, #多项选择), 等于 (.内容, #材料分析)))
     ' .如果 (并且 (大于 (键代码, 96), 小于 (键代码, 123)))
         ' 信息框 (“超出”, 0, )
         ' 键代码 ＝ 键代码 － 26
    .否则
        
    .如果结束
    
    
    
.否则
    
.如果结束
.如果 (等于 (功能键状态, 2))
    .如果 (等于 (键代码, #PageDown键))
        _下一题按钮_被单击 ()
        
    .否则
        .如果 (等于 (键代码, #PageUp键))
            _上一题按钮_被单击 ()
        .否则
            
        .如果结束
        
    .如果结束
    
.否则
    
.如果结束


.子程序 _分值组合框_被双击, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果 (等于 (出题窗口., “出题模式”))
    .如果 (或者 (等于 (.内容, “简答”), 等于 (.内容, “论述”)))
        .如果 (等于 (.内容, “”))
            赋值 (.内容, “0”)
        .否则
            
        .如果结束
        赋值 (.内容, 相加 (.内容, “ [”, .内容, “分] ”))
        赋值 (简答论述分值累计, 相加 (简答论述分值累计, 到整数 (.内容)))
        赋值 (.内容, 到文本 (简答论述分值累计))
        
        获取焦点 ()
        赋值 (.起始选择位置, 取文本长度 (.内容))
    .否则
        
    .如果结束
    
.否则
    
.如果结束


.子程序 _分值组合框_滚轮被滚动, 逻辑型, , 
.参数 滚动距离, 整数型, , 
.参数 功能键状态, 整数型, , 

 ' .如果 (大于 (滚动距离, 0))
     ' 分值组合框.内容 ＝ 到文本 (到整数 (分值组合框.内容) － 1)
.否则
    
.如果结束
 ' .如果 (小于 (滚动距离, 0))
     ' 分值组合框.内容 ＝ 到文本 (到整数 (分值组合框.内容) ＋ 1)
.否则
    
.如果结束


.子程序 _获取时间按钮_被单击, 空白型, , 
赋值 (.内容, 到文本 (相乘 (到整数 (.内容), 时间分值比)))

.子程序 _答题编辑框_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果 (等于 (出题窗口., “考试模式”))
    .如果 (或者 (等于 (.内容, “简答”), 等于 (.内容, “论述”)))
        .如果 (不等于 (.内容, “”))
            赋值 (.标题, “请在右边的文本框中输入答案！”)
            载入 (材料文本窗口, , 假)
            
        .否则
            
        .如果结束
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束


.子程序 调整图片大小, 空白型, , 
.参数 图片框1, 图片框, , 
.参数 图片路径1, 文本型, , 

 ' .如果 (大于 (相加 (图片框1.高度, 图片框1, .), 出题窗口.))
     ' 备选答案图片框.高度 ＝ 出题窗口.高度 － 备选答案图片框.顶边
     ' 备选答案图片框.宽度 ＝ 取整 (取图片宽度 (图片路径1) ÷ 取图片高度 (图片路径1) × 备选答案图片框.高度)
    
.否则
    
.如果结束





.子程序 删除空选项, 空白型, , 
.局部变量 选项变量, 文本型, , "10", 
.局部变量 循环变量, 整数型, , , 
.局部变量 循环次数, 整数型, , , 
.局部变量 临时选项变量, 文本型, , , 
.局部变量 非空选项, 整数型, , , 

赋值 (选项变量 [1], .内容)
赋值 (选项变量 [2], .内容)
赋值 (选项变量 [3], .内容)
赋值 (选项变量 [4], .内容)
赋值 (选项变量 [5], .内容)
赋值 (选项变量 [6], .内容)
赋值 (选项变量 [7], .内容)
赋值 (选项变量 [8], .内容)
赋值 (选项变量 [9], .内容)
赋值 (选项变量 [10], .内容)

赋值 (循环次数, 取数组成员数 (选项变量))
.计次循环首 (10, )
    .计次循环首 (循环次数, 循环变量)
        .如果 (并且 (等于 (选项变量 [循环变量], “”), 小于或等于 (循环变量, 9)))
            赋值 (临时选项变量, 选项变量 [循环变量])
            赋值 (选项变量 [循环变量], 选项变量 [相加 (循环变量, 1)])
            赋值 (选项变量 [相加 (循环变量, 1)], 临时选项变量)
        .否则
            
        .如果结束
        
    .计次循环尾 ()
    
    
.计次循环尾 ()
赋值 (非空选项, 0)
.计次循环首 (10, 循环变量)
    .如果 (不等于 (选项变量 [循环变量], “”))
        赋值 (非空选项, 相加 (非空选项, 1))
    .否则
        
    .如果结束
    
.计次循环尾 ()

赋值 (.内容, 到文本 (非空选项))
_选项组合框_列表项被选择 ()
重定义数组 (选项变量, 真, 10)
赋值 (.内容, 选项变量 [1])
赋值 (.内容, 选项变量 [2])
赋值 (.内容, 选项变量 [3])
赋值 (.内容, 选项变量 [4])
赋值 (.内容, 选项变量 [5])
赋值 (.内容, 选项变量 [6])
赋值 (.内容, 选项变量 [7])
赋值 (.内容, 选项变量 [8])
赋值 (.内容, 选项变量 [9])
赋值 (.内容, 选项变量 [10])


.子程序 _问题编辑框_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果 (等于 (出题窗口., “考试模式”))
    赋值 (.可视, 假)
    弹出菜单 ()
.否则
    赋值 (.可视, 假)
.如果结束



.子程序 _运算结果_被选择, 空白型, , 
.局部变量 算式, 文本型, , , 
.局部变量 计算结果, 文本型, , , 
.局部变量 文本变量, 文本型, , , 

 ' 载入 (脚本语言窗口, , 真)
 ' .如果真 (输入框 (“请输入计算表达式（比如1+1）”, “计算表达式”, .内容, 文本变量, #输入文本))
     ' 信息框 (脚本组件1.计算表达式 (文本变量), 0, )
    
.如果真结束

 ' 算式 ＝ 取文本左边 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “=”, , 假) － 1)
 ' 计算结果 ＝ 脚本组件1.计算表达式 (问题编辑框.内容)


.子程序 _切换题库按钮_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (相加 (“题库： [”, 题库, “]”))

.子程序 _题目显示树型框_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (“题目列表。点击题型进入加题状态；点击题号可显示题目内容，右击可显示菜单。”)

.子程序 _答题编辑框_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果 (等于 (出题窗口., “出题模式”))
    0.置文本 (“如需保存必须在此输入标准答案。空白时不可以保存。”)
.否则
    0.置文本 (“简答题和论述题点此后在弹出的窗口中答题，其它题型在此答题。能自动实时保存。”)
.如果结束


.子程序 _添加问题图片按钮_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果 (等于 (出题窗口., “出题模式”))
    0.置文本 (“点此添加问题图片。”)
.否则
    0.置文本 (“显示提示内容。”)
.如果结束


.子程序 _切换模式按钮_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果 (等于 (出题窗口., “出题模式”))
    0.置文本 (“切换到 [考试模式]。”)
.否则
    0.置文本 (“切换到 [出题模式]。”)
.如果结束


.子程序 _导入按钮_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (“弹出 [单题导入窗口]，方便用户从文本文件中复制加入题目。”)

.子程序 _导出按钮_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (“导出为传统试卷版式。”)

.子程序 _粘贴按钮_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (“粘贴题目内容。必须在点过树形框右键菜单中的 [复制] 后方可使用。”)

.子程序 _获取时间按钮_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (“根据 [分值] 和 [时间分值比] 来改变当前题时限。”)

.子程序 _加题按钮_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (“清空输入框内容，进入 [加题状态]。”)



.子程序 _保存按钮_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (“添加或修改题目。”)


.子程序 _删除按钮_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (“删除当前题目。”)

.子程序 _答案A图片按钮_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (“添加选项图片。添加成功将覆盖选项文本。”)

.子程序 _答案B图片按钮_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (“添加选项图片。添加成功将覆盖选项文本。”)

.子程序 _答案C图片按钮_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (“添加选项图片。添加成功将覆盖选项文本。”)

.子程序 _答案D图片按钮_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (“添加选项图片。添加成功将覆盖选项文本。”)

.子程序 _答案E图片按钮_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (“添加选项图片。添加成功将覆盖选项文本。”)

.子程序 _答案F图片按钮_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (“添加选项图片。添加成功将覆盖选项文本。”)

.子程序 _答案G图片按钮_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (“添加选项图片。添加成功将覆盖选项文本。”)

.子程序 _答案H图片按钮_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (“添加选项图片。添加成功将覆盖选项文本。”)

.子程序 _答案I图片按钮_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (“添加选项图片。添加成功将覆盖选项文本。”)

.子程序 _答案J图片按钮_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (“添加选项图片。添加成功将覆盖选项文本。”)

.子程序 _按钮2_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (“延长本题时间。”)

.子程序 _上一题按钮_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (“切换到上一题。”)

.子程序 _下一题按钮_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (“切换到下一题。”)

.子程序 _确定按钮_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (“功能与 [下一题]按钮 相同。”)


.子程序 _提示按钮_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (“显示解题思路。”)

.子程序 _答案按钮_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (“显示题目标准答案。”)

.子程序 _交卷按钮_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (“结束考试并统计成绩。”)

.子程序 _出题窗口_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

 ' .如果 (等于 (出题窗口., “出题模式”))
     ' 状态条1.置文本 (0, “《无敌自测》祝您出题愉快！”)
.否则
    0.置文本 (相加 (“当前题库：[”, 题库, “]”))
.如果结束
赋值 (.可视, 假)
赋值 (., 假)

.子程序 _科目组合框_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (“考试科目，可不填。如果一套试卷中有多个科目，不妨填之。”)

.子程序 _章组合框_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (“当前题目内容来自的章目。”)


.子程序 _节组合框_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (“当前题目内容来自的节号。”)

.子程序 _范围组合框_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (“当前题目内容所属知识范围。”)


.子程序 _题型组合框_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (“点此选择所需题型。”)


.子程序 _选项组合框_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (“设置当前选择题等题型的选项数量。”)


.子程序 _题号组合框_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (“显示题目编号。”)

.子程序 _分值组合框_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (“设置和显示本题分值。”)

.子程序 _时间组合框_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (“设置和显示本题时限。”)

.子程序 _难度组合框_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (“本题难度，分五级。仅供参考，并无实际功能。”)

.子程序 _计算器_被选择, 空白型, , 
.如果 (等于 (文件是否存在 (“C:\WINDOWS\system32\calc.exe”), 真))
    运行 (“C:\WINDOWS\system32\calc.exe”, 假, 4)
.否则
    0.置文本 (“程序名错误。”)
.如果结束



.子程序 _提示编辑框_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (“在此输入解题思路、技巧等提示信息。”)


.子程序 _A选择框_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (相加 (“选择项A。当前选中状态为 [”, 到文本 (.选中), “]。”))


.子程序 _B选择框_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (相加 (“选择项B。当前选中状态为 [”, 到文本 (.选中), “]。”))


.子程序 _C选择框_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (相加 (“选择项C。当前选中状态为 [”, 到文本 (.选中), “]。”))

.子程序 _D选择框_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (相加 (“选择项D。当前选中状态为 [”, 到文本 (.选中), “]。”))

.子程序 _E选择框_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (相加 (“选择项E。当前选中状态为 [”, 到文本 (.选中), “]。”))

.子程序 _F选择框_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (相加 (“选择项F。当前选中状态为 [”, 到文本 (.选中), “]。”))

.子程序 _G选择框_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (相加 (“选择项G。当前选中状态为 [”, 到文本 (.选中), “]。”))

.子程序 _H选择框_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (相加 (“选择项H。当前选中状态为 [”, 到文本 (.选中), “]。”))

.子程序 _I选择框_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (相加 (“选择项I。当前选中状态为 [”, 到文本 (.选中), “]。”))

.子程序 _J选择框_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (相加 (“选择项J。当前选中状态为 [”, 到文本 (.选中), “]。”))

.子程序 取主文件名, 文本型, , 
.参数 文件路径, 文本型, , 

.局部变量 主文件名, 文本型, , , 

.如果 (不等于 (寻找文本 (文件路径, “\”, , 假), -1))
    赋值 (主文件名, 取文本右边 (文件路径, 相减 (取文本长度 (文件路径), 倒找文本 (文件路径, “\”, , 假))))
    赋值 (主文件名, 取文本左边 (主文件名, 相减 (取文本长度 (主文件名), 4)))
.否则
    
.如果结束
返回 (主文件名)


.子程序 _备选答案图片框_滚轮被滚动, 逻辑型, , 
.参数 滚动距离, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 高宽比, 小数型, , , 

 ' .如果 (等于 (功能键状态, 1))
     ' 高宽比 ＝ 备选答案图片框.高度 ÷ 备选答案图片框.宽度
     ' .如果 (小于 (滚动距离, 0))
         ' 备选答案图片框.宽度 ＝ 备选答案图片框.宽度 ＋ 10
         ' .如果 (大于 (.宽度, 出题窗口.))
             ' 备选答案图片框.宽度 ＝ 出题窗口.宽度
        .否则
            
        .如果结束
        
    .否则
         ' .如果 (大于 (滚动距离, 0))
             ' 备选答案图片框.宽度 ＝ 备选答案图片框.宽度 － 10
             ' .如果 (小于 (.宽度, 20))
                 ' 备选答案图片框.宽度 ＝ 20
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .如果结束
     ' 备选答案图片框.高度 ＝ 备选答案图片框.宽度 × 高宽比
    
    
.否则
    
.如果结束


.窗口程序集 抽题窗口程序集, , , 

.程序集变量 题目数量, 整数型, , , 
.程序集变量 名词解释数量, 整数型, , , 
.程序集变量 单项选择数量, 整数型, , , 
.程序集变量 多项选择数量, 整数型, , , 
.程序集变量 材料分析数量, 整数型, , , 
.程序集变量 填空数量, 整数型, , , 
.程序集变量 辨析数量, 整数型, , , 
.程序集变量 简答数量, 整数型, , , 
.程序集变量 论述数量, 整数型, , , 
.程序集变量 初始题目序号, 整数型, , , 
.程序集变量 题库名称, 文本型, , , 
.程序集变量 总题数, 整数型, , , 
.程序集变量 总时限, 整数型, , , 
.程序集变量 总分数, 整数型, , , 
.程序集变量 名词解释完整题目, 完整题目, , "0", 
.程序集变量 单项选择完整题目, 完整题目, , "0", 
.程序集变量 多项选择完整题目, 完整题目, , "0", 
.程序集变量 材料分析完整题目, 完整题目, , "0", 
.程序集变量 填空完整题目, 完整题目, , "0", 
.程序集变量 辨析完整题目, 完整题目, , "0", 
.程序集变量 简答完整题目, 完整题目, , "0", 
.程序集变量 论述完整题目, 完整题目, , "0", 
.子程序 _抽题窗口_创建完毕, 空白型, , 
.局部变量 循环变量1, 整数型, , , 

清空 ()
清空 ()
清空 ()
清空 ()
清空 ()
清空 ()
清空 ()
清空 ()

赋值 (名词解释数量, 0)
赋值 (单项选择数量, 0)
赋值 (多项选择数量, 0)
赋值 (材料分析数量, 0)
赋值 (填空数量, 0)
赋值 (辨析数量, 0)
赋值 (简答数量, 0)
赋值 (论述数量, 0)
赋值 (初始题目序号, 0)
赋值 (总聪明分, 0)
赋值 (总题数, 0)
赋值 (总时限, 0)
赋值 (总分数, 0)
赋值 (.初始目录, 相加 (取运行目录 (), “\”, 考生姓名))
赋值 (.初始目录, 相加 (取运行目录 (), “\”, 考生姓名))
.如果 (并且 (不等于 (题库, “”), 不等于 (题库, 相加 (取运行目录 (), “\”, 考生姓名, “\复考题库.edb”))))
    赋值 (题库名称, 题库)
    输出调试文本 (题库)
.否则
    .如果 (不等于 (初始打开题库, “”))
        赋值 (题库名称, 初始打开题库)
    .否则
        .如果 (等于 (打开 (), 真))
            赋值 (题库名称, .文件名)
            .如果 (等于 (是否已打开 (题库名称), 假))
                打开 (题库名称, , , , , , )
            .否则
                置当前库 (题库名称)
            .如果结束
            输出调试文本 (相加 (“字段名：”, 取字段名 (2), #换行符, #科目名称))
            .如果 (不等于 (取字段名 (2), #科目名称))
                信息框 (“此文件不是题库文件。”, 0, “提示”)
                赋值 (题库名称, “”)
                关闭 ()
                _导入题库按钮_被单击 ()
                
                
            .否则
                
            .如果结束
            
            
        .否则
            赋值 (题库名称, “”)
        .如果结束
        
    .如果结束
    
.如果结束
赋值 (.内容, 题库名称)
赋值 (初始打开题库, 题库名称)

.如果 (不等于 (题库名称, “”))
     ' ===============================================================打开数据库
     ' 全部关闭 ()
    .如果 (等于 (是否已打开 (题库名称), 假))
        打开 (题库名称, , , , , , )
    .否则
        置当前库 (题库名称)
    .如果结束
     ' ===============================================================
    到首记录 ()
    “0”.加入项目 ()
    .计次循环首 (取记录数 (), 循环变量1)
        .如果 (等于 (读 (#题目类型), “名词解释”))
            赋值 (名词解释数量, 相加 (名词解释数量, 1))
            到文本 (名词解释数量).加入项目 ()
            赋值 (初始题目序号, 相加 (初始题目序号, 1))
            写 (#题目序号, 初始题目序号)
             ' 写 (#抽题标记, 1)
        .否则
            
        .如果结束
        跳过 ()
    .计次循环尾 ()
    赋值 (.内容, 到文本 (名词解释数量))
    
    到首记录 ()
    “0”.加入项目 ()
    .计次循环首 (取记录数 (), 循环变量1)
        .如果 (等于 (读 (#题目类型), “单项选择”))
            赋值 (单项选择数量, 相加 (单项选择数量, 1))
            到文本 (单项选择数量).加入项目 ()
            赋值 (初始题目序号, 相加 (初始题目序号, 1))
            写 (#题目序号, 初始题目序号)
             ' 写 (#抽题标记, 1)
        .否则
            
        .如果结束
        跳过 ()
    .计次循环尾 ()
    赋值 (.内容, 到文本 (单项选择数量))
    
    到首记录 ()
    “0”.加入项目 ()
    .计次循环首 (取记录数 (), 循环变量1)
        .如果 (等于 (读 (#题目类型), “多项选择”))
            赋值 (多项选择数量, 相加 (多项选择数量, 1))
            到文本 (多项选择数量).加入项目 ()
            赋值 (初始题目序号, 相加 (初始题目序号, 1))
            写 (#题目序号, 初始题目序号)
             ' 写 (#抽题标记, 1)
        .否则
            
        .如果结束
        跳过 ()
    .计次循环尾 ()
    赋值 (.内容, 到文本 (多项选择数量))
    
    到首记录 ()
    “0”.加入项目 ()
    .计次循环首 (取记录数 (), 循环变量1)
        .如果 (等于 (读 (#题目类型), “材料分析”))
            赋值 (材料分析数量, 相加 (材料分析数量, 1))
            到文本 (材料分析数量).加入项目 ()
            赋值 (初始题目序号, 相加 (初始题目序号, 1))
            写 (#题目序号, 初始题目序号)
             ' 写 (#抽题标记, 1)
        .否则
            
        .如果结束
        跳过 ()
    .计次循环尾 ()
    赋值 (.内容, 到文本 (材料分析数量))
    
    到首记录 ()
    “0”.加入项目 ()
    .计次循环首 (取记录数 (), 循环变量1)
        .如果 (等于 (读 (#题目类型), “填空”))
            赋值 (填空数量, 相加 (填空数量, 1))
            到文本 (填空数量).加入项目 ()
            赋值 (初始题目序号, 相加 (初始题目序号, 1))
            写 (#题目序号, 初始题目序号)
             ' 写 (#抽题标记, 1)
        .否则
            
        .如果结束
        跳过 ()
    .计次循环尾 ()
    赋值 (.内容, 到文本 (填空数量))
    
    到首记录 ()
    “0”.加入项目 ()
    .计次循环首 (取记录数 (), 循环变量1)
        .如果 (等于 (读 (#题目类型), “辨析”))
            赋值 (辨析数量, 相加 (辨析数量, 1))
            到文本 (辨析数量).加入项目 ()
            赋值 (初始题目序号, 相加 (初始题目序号, 1))
            写 (#题目序号, 初始题目序号)
             ' 写 (#抽题标记, 1)
        .否则
            
        .如果结束
        跳过 ()
    .计次循环尾 ()
    赋值 (.内容, 到文本 (辨析数量))
    
    到首记录 ()
    “0”.加入项目 ()
    .计次循环首 (取记录数 (), 循环变量1)
        .如果 (等于 (读 (#题目类型), “简答”))
            赋值 (简答数量, 相加 (简答数量, 1))
            到文本 (简答数量).加入项目 ()
            赋值 (初始题目序号, 相加 (初始题目序号, 1))
            写 (#题目序号, 初始题目序号)
             ' 写 (#抽题标记, 1)
        .否则
            
        .如果结束
        跳过 ()
    .计次循环尾 ()
    赋值 (.内容, 到文本 (简答数量))
    
    到首记录 ()
    “0”.加入项目 ()
    .计次循环首 (取记录数 (), 循环变量1)
        .如果 (等于 (读 (#题目类型), “论述”))
            赋值 (论述数量, 相加 (论述数量, 1))
            到文本 (论述数量).加入项目 ()
            赋值 (.内容, 到文本 (论述数量))
            赋值 (初始题目序号, 相加 (初始题目序号, 1))
            写 (#题目序号, 初始题目序号)
             ' 写 (#抽题标记, 1)
        .否则
            
        .如果结束
        跳过 ()
    .计次循环尾 ()
    
    赋值 (.内容, 到文本 (论述数量))
    到首记录 ()
    .计次循环首 (取记录数 (), 循环变量1)
        赋值 (总分数, 相加 (总分数, 读 (#分值)))
        赋值 (总时限, 相加 (总时限, 读 (#时间)))
        跳过 ()
    .计次循环尾 ()
    
     ' 关闭 ()
     ' ＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝
    排序 (题库名称, #题目序号, , , )
    赋值 (总题数, 相加 (名词解释数量, 单项选择数量, 多项选择数量, 材料分析数量, 填空数量, 辨析数量, 简答数量, 论述数量))
    赋值 (.标题, 相加 (“[”, 到文本 (总时限), “]秒-”, “[”, 到文本 (总题数), “]题-”, “[”, 到文本 (总分数), “]分”))
    赋值 (.禁止, 假)
.否则
    赋值 (.禁止, 真)
.如果结束


赋值 (限时换题, .选中)
赋值 (不可回头, .选中)
赋值 (错题重做, .选中)
赋值 (对错提示, .选中)

.如果 (等于 (切换模式按钮被单击, 真))
    赋值 (.选中, 假)
    赋值 (.可视, 假)
.否则
    赋值 (.选中, 真)
    赋值 (.可视, 真)
.如果结束
赋值 (窗口加大, .选中)
赋值 (问题闪现, .选中)


.子程序 _名词解释组合框_编辑内容被改变, 空白型, , 
赋值 (题目数量, 相加 (到整数 (.内容), 到整数 (.内容), 到整数 (.内容), 到整数 (.内容), 到整数 (.内容), 到整数 (.内容), 到整数 (.内容), 到整数 (.内容)))
赋值 (.标题, 相加 (“题型数量设置-共[”, 到文本 (题目数量), “]题”))

.子程序 _单项选择组合框_编辑内容被改变, 空白型, , 
赋值 (题目数量, 相加 (到整数 (.内容), 到整数 (.内容), 到整数 (.内容), 到整数 (.内容), 到整数 (.内容), 到整数 (.内容), 到整数 (.内容), 到整数 (.内容)))
赋值 (.标题, 相加 (“题型数量设置-共[”, 到文本 (题目数量), “]题”))

.子程序 _多项选择组合框_编辑内容被改变, 空白型, , 
赋值 (题目数量, 相加 (到整数 (.内容), 到整数 (.内容), 到整数 (.内容), 到整数 (.内容), 到整数 (.内容), 到整数 (.内容), 到整数 (.内容), 到整数 (.内容)))
赋值 (.标题, 相加 (“题型数量设置-共[”, 到文本 (题目数量), “]题”))

.子程序 _材料分析组合框_编辑内容被改变, 空白型, , 
赋值 (题目数量, 相加 (到整数 (.内容), 到整数 (.内容), 到整数 (.内容), 到整数 (.内容), 到整数 (.内容), 到整数 (.内容), 到整数 (.内容), 到整数 (.内容)))
赋值 (.标题, 相加 (“题型数量设置-共[”, 到文本 (题目数量), “]题”))

.子程序 _论述组合框_编辑内容被改变, 空白型, , 
赋值 (题目数量, 相加 (到整数 (.内容), 到整数 (.内容), 到整数 (.内容), 到整数 (.内容), 到整数 (.内容), 到整数 (.内容), 到整数 (.内容), 到整数 (.内容)))
赋值 (.标题, 相加 (“题型数量设置-共[”, 到文本 (题目数量), “]题”))

.子程序 _填空组合框_编辑内容被改变, 空白型, , 
赋值 (题目数量, 相加 (到整数 (.内容), 到整数 (.内容), 到整数 (.内容), 到整数 (.内容), 到整数 (.内容), 到整数 (.内容), 到整数 (.内容), 到整数 (.内容)))
赋值 (.标题, 相加 (“题型数量设置-共[”, 到文本 (题目数量), “]题”))

.子程序 _辨析组合框_编辑内容被改变, 空白型, , 
赋值 (题目数量, 相加 (到整数 (.内容), 到整数 (.内容), 到整数 (.内容), 到整数 (.内容), 到整数 (.内容), 到整数 (.内容), 到整数 (.内容), 到整数 (.内容)))
赋值 (.标题, 相加 (“题型数量设置-共[”, 到文本 (题目数量), “]题”))

.子程序 _简答组合框_编辑内容被改变, 空白型, , 
赋值 (题目数量, 相加 (到整数 (.内容), 到整数 (.内容), 到整数 (.内容), 到整数 (.内容), 到整数 (.内容), 到整数 (.内容), 到整数 (.内容), 到整数 (.内容)))
赋值 (.标题, 相加 (“题型数量设置-共[”, 到文本 (题目数量), “]题”))

 ' ＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝

.子程序 _名词解释组合框_列表项被选择, 空白型, , 
赋值 (题目数量, 相加 (到整数 (.内容), 到整数 (.内容), 到整数 (.内容), 到整数 (.内容), 到整数 (.内容), 到整数 (.内容), 到整数 (.内容), 到整数 (.内容)))
赋值 (.标题, 相加 (“题型数量设置-共[”, 到文本 (题目数量), “]题”))


.子程序 _单项选择组合框_列表项被选择, 空白型, , 
赋值 (题目数量, 相加 (到整数 (.内容), 到整数 (.内容), 到整数 (.内容), 到整数 (.内容), 到整数 (.内容), 到整数 (.内容), 到整数 (.内容), 到整数 (.内容)))
赋值 (.标题, 相加 (“题型数量设置-共[”, 到文本 (题目数量), “]题”))

.子程序 _多项选择组合框_列表项被选择, 空白型, , 
赋值 (题目数量, 相加 (到整数 (.内容), 到整数 (.内容), 到整数 (.内容), 到整数 (.内容), 到整数 (.内容), 到整数 (.内容), 到整数 (.内容), 到整数 (.内容)))
赋值 (.标题, 相加 (“题型数量设置-共[”, 到文本 (题目数量), “]题”))

.子程序 _材料分析组合框_列表项被选择, 空白型, , 
赋值 (题目数量, 相加 (到整数 (.内容), 到整数 (.内容), 到整数 (.内容), 到整数 (.内容), 到整数 (.内容), 到整数 (.内容), 到整数 (.内容), 到整数 (.内容)))
赋值 (.标题, 相加 (“题型数量设置-共[”, 到文本 (题目数量), “]题”))

.子程序 _论述组合框_列表项被选择, 空白型, , 
赋值 (题目数量, 相加 (到整数 (.内容), 到整数 (.内容), 到整数 (.内容), 到整数 (.内容), 到整数 (.内容), 到整数 (.内容), 到整数 (.内容), 到整数 (.内容)))
赋值 (.标题, 相加 (“题型数量设置-共[”, 到文本 (题目数量), “]题”))

.子程序 _填空组合框_列表项被选择, 空白型, , 
赋值 (题目数量, 相加 (到整数 (.内容), 到整数 (.内容), 到整数 (.内容), 到整数 (.内容), 到整数 (.内容), 到整数 (.内容), 到整数 (.内容), 到整数 (.内容)))
赋值 (.标题, 相加 (“题型数量设置-共[”, 到文本 (题目数量), “]题”))

.子程序 _辨析组合框_列表项被选择, 空白型, , 
赋值 (题目数量, 相加 (到整数 (.内容), 到整数 (.内容), 到整数 (.内容), 到整数 (.内容), 到整数 (.内容), 到整数 (.内容), 到整数 (.内容), 到整数 (.内容)))
赋值 (.标题, 相加 (“题型数量设置-共[”, 到文本 (题目数量), “]题”))

.子程序 _简答组合框_列表项被选择, 空白型, , 
赋值 (题目数量, 相加 (到整数 (.内容), 到整数 (.内容), 到整数 (.内容), 到整数 (.内容), 到整数 (.内容), 到整数 (.内容), 到整数 (.内容), 到整数 (.内容)))
赋值 (.标题, 相加 (“题型数量设置-共[”, 到文本 (题目数量), “]题”))

.子程序 _限时换题选择框_被单击, 空白型, , 
.如果 (等于 (.选中, 真))
    赋值 (限时换题, 真)
.否则
    赋值 (限时换题, 假)
    
.如果结束


.子程序 _不可回头选择框_被单击, 空白型, , 
.如果 (等于 (.选中, 真))
    赋值 (不可回头, 真)
.否则
    赋值 (不可回头, 假)
.如果结束


.子程序 _错题重做选择框_被单击, 空白型, , 
.如果 (等于 (.选中, 真))
    赋值 (错题重做, 真)
.否则
    赋值 (错题重做, 假)
.如果结束



.子程序 _对错提示选择框_被单击, 空白型, , 
.如果 (等于 (.选中, 真))
    赋值 (对错提示, 真)
.否则
    赋值 (对错提示, 假)
.如果结束



.子程序 _窗口加大选择框_被单击, 空白型, , 
.如果 (等于 (.选中, 真))
    赋值 (窗口加大, 真)
.否则
    赋值 (窗口加大, 假)
.如果结束


.子程序 _问题闪现选择框_被单击, 空白型, , 
.如果 (等于 (.选中, 真))
    赋值 (问题闪现, 真)
.否则
    赋值 (问题闪现, 假)
.如果结束


.子程序 _考试按钮_被单击, 空白型, , 
复制文件 (相加 (取运行目录 (), “\”, 考生姓名, “\复考题库.edb”), 相加 (取运行目录 (), “\”, 考生姓名, “\全部重考题库.edb”))
赋值 (全部重考题库, 相加 (取运行目录 (), “\”, 考生姓名, “\全部重考题库.edb”))
.如果 (等于 (寻找文本 (初始打开题库, “复考题库”, , 假), -1))
    赋值 (题库路径, 取文本左边 (初始打开题库, 相减 (取文本长度 (初始打开题库), 4)))
    写注册项 (#现行用户, “software\exam\reg\tkname”, 初始打开题库)
.否则
    
.如果结束
调试输出 (题库路径)
赋值 (考试次数, 1)
.如果 (等于 (窗口加大, 真))
    载入 (考试窗口, , 假)
.否则
    载入 (出题窗口, , 假)
.如果结束

销毁 ()


.子程序 _抽题按钮_被单击, 空白型, , 
.局部变量 循环变量, 整数型, , , 

.如果 (等于 (是否已打开 (题库名称), 假))
    打开 (题库名称, , , , , , )
.否则
    置当前库 (题库名称)
.如果结束

数据库到各题型数组 ()

从数组中抽取题目 (名词解释完整题目, 到整数 (.内容))
从数组中抽取题目 (单项选择完整题目, 到整数 (.内容))
从数组中抽取题目 (多项选择完整题目, 到整数 (.内容))
从数组中抽取题目 (材料分析完整题目, 到整数 (.内容))
从数组中抽取题目 (填空完整题目, 到整数 (.内容))
从数组中抽取题目 (辨析完整题目, 到整数 (.内容))
从数组中抽取题目 (简答完整题目, 到整数 (.内容))
从数组中抽取题目 (论述完整题目, 到整数 (.内容))

统计各题型时间分值数量 ()
赋值 (.标题, 相加 (“[”, 到文本 (总时间), “]秒-”, “[”, 到文本 (总题数), “]题-”, “[”, 到文本 (总分数), “]分”))

到首记录 ()
复制记录 (相加 (取运行目录 (), “\”, 考生姓名, “\复考题库.edb”), 近似等于 (读 (#抽题标记), “错”), )

.如果 (等于 (是否已打开 (相加 (取运行目录 (), “\”, 考生姓名, “\复考题库.edb”)), 假))
    打开 (相加 (取运行目录 (), “\”, 考生姓名, “\复考题库.edb”), , , , , , )
.否则
    置当前库 (相加 (取运行目录 (), “\”, 考生姓名, “\复考题库.edb”))
.如果结束

清空 ()
各题型数组到数据库 ()
赋值 (.最大位置, 取记录数 ())
到首记录 ()
.计次循环首 (取记录数 (), 循环变量)
    赋值 (.位置, 循环变量)
    赋值 (.标题, 到文本 (.位置))
    写 (#抽题标记, “错”)
    写 (#用户答案, “”)
    写 (#得分, 0)
     ' 总时间 ＝ 总时间 ＋ 读 (#时间)
    跳过 ()
.计次循环尾 ()


 ' 总时间 ＝ 0

.如果 (大于 (.位置, 0))
    赋值 (.禁止, 假)
.否则
    
.如果结束



.子程序 _导入题库按钮_被单击, 空白型, , 
.如果 (等于 (打开 (), 真))
    赋值 (.内容, .文件名)
    赋值 (题库, .内容)
    .如果 (等于 (是否已打开 (题库), 假))
        打开 (题库, , , , , , )
    .否则
        置当前库 (题库)
    .如果结束
    输出调试文本 (相加 (“字段名：”, 取字段名 (2), #换行符, #科目名称))
    .如果 (不等于 (取字段名 (2), #科目名称))
        信息框 (“此文件不是题库文件。”, 0, “提示”)
        赋值 (题库, “”)
        关闭 ()
        
    .否则
        赋值 (初始打开题库, 题库)
        题库.加入项目 ()
    .如果结束
    
    
     ' 信息框 (到文本 (删除文件 (取运行目录 () ＋ “\” ＋ 考生姓名 ＋ “\复考题库.edb”)), 0, )
    _抽题窗口_创建完毕 ()
     ' ===============================================================打开数据库
     ' 全部关闭 ()
     ' .如果 (等于 (是否已打开 (题库名称), 假))
         ' 打开 (题库名称, , , , , , )
    .否则
        
    .如果结束
    
.否则
    
.如果结束


.子程序 数据库到名词解释完整题目数组, 空白型, , 
.参数 数组序号, 整数型, , 


赋值 (名词解释完整题目 [数组序号], 分值, 读 (#分值))
赋值 (名词解释完整题目 [数组序号], 得分, 读 (#得分))
赋值 (名词解释完整题目 [数组序号], 时间, 读 (#时间))
赋值 (名词解释完整题目 [数组序号], 问题, 读 (#问题))
赋值 (名词解释完整题目 [数组序号], 答案, 读 (#答案))
赋值 (名词解释完整题目 [数组序号], 选项, 读 (#选项))
赋值 (名词解释完整题目 [数组序号], 题目编号, 读 (#题目编号))
赋值 (名词解释完整题目 [数组序号], 科目名称, 读 (#科目名称))
赋值 (名词解释完整题目 [数组序号], 章目编号, 读 (#章目编号))
赋值 (名词解释完整题目 [数组序号], 节序编号, 读 (#节序编号))
赋值 (名词解释完整题目 [数组序号], 知识范围, 读 (#知识范围))
赋值 (名词解释完整题目 [数组序号], 题目类型, 读 (#题目类型))
赋值 (名词解释完整题目 [数组序号], 题目序号, 读 (#题目序号))
赋值 (名词解释完整题目 [数组序号], 难度系数, 读 (#难度系数))
赋值 (名词解释完整题目 [数组序号], 材料文本, 读 (#材料文本))
赋值 (名词解释完整题目 [数组序号], 选择项一, 读 (#选择项一))
赋值 (名词解释完整题目 [数组序号], 选择项二, 读 (#选择项二))
赋值 (名词解释完整题目 [数组序号], 选择项三, 读 (#选择项三))
赋值 (名词解释完整题目 [数组序号], 选择项四, 读 (#选择项四))
赋值 (名词解释完整题目 [数组序号], 选择项五, 读 (#选择项五))
赋值 (名词解释完整题目 [数组序号], 选择项六, 读 (#选择项六))
赋值 (名词解释完整题目 [数组序号], 选择项七, 读 (#选择项七))
赋值 (名词解释完整题目 [数组序号], 选择项八, 读 (#选择项八))
赋值 (名词解释完整题目 [数组序号], 选择项九, 读 (#选择项九))
赋值 (名词解释完整题目 [数组序号], 选择项十, 读 (#选择项十))
赋值 (名词解释完整题目 [数组序号], 提示信息, 读 (#提示信息))
赋值 (名词解释完整题目 [数组序号], 抽题标记, 读 (#抽题标记))
赋值 (名词解释完整题目 [数组序号], 用户答案, 读 (#用户答案))



.子程序 数据库到单项选择完整题目数组, 空白型, , 
.参数 数组序号, 整数型, , 


赋值 (单项选择完整题目 [数组序号], 分值, 读 (#分值))
赋值 (单项选择完整题目 [数组序号], 得分, 读 (#得分))
赋值 (单项选择完整题目 [数组序号], 时间, 读 (#时间))
赋值 (单项选择完整题目 [数组序号], 问题, 读 (#问题))
赋值 (单项选择完整题目 [数组序号], 答案, 读 (#答案))
赋值 (单项选择完整题目 [数组序号], 选项, 读 (#选项))
赋值 (单项选择完整题目 [数组序号], 题目编号, 读 (#题目编号))
赋值 (单项选择完整题目 [数组序号], 科目名称, 读 (#科目名称))
赋值 (单项选择完整题目 [数组序号], 章目编号, 读 (#章目编号))
赋值 (单项选择完整题目 [数组序号], 节序编号, 读 (#节序编号))
赋值 (单项选择完整题目 [数组序号], 知识范围, 读 (#知识范围))
赋值 (单项选择完整题目 [数组序号], 题目类型, 读 (#题目类型))
赋值 (单项选择完整题目 [数组序号], 题目序号, 读 (#题目序号))
赋值 (单项选择完整题目 [数组序号], 难度系数, 读 (#难度系数))
赋值 (单项选择完整题目 [数组序号], 材料文本, 读 (#材料文本))
赋值 (单项选择完整题目 [数组序号], 选择项一, 读 (#选择项一))
赋值 (单项选择完整题目 [数组序号], 选择项二, 读 (#选择项二))
赋值 (单项选择完整题目 [数组序号], 选择项三, 读 (#选择项三))
赋值 (单项选择完整题目 [数组序号], 选择项四, 读 (#选择项四))
赋值 (单项选择完整题目 [数组序号], 选择项五, 读 (#选择项五))
赋值 (单项选择完整题目 [数组序号], 选择项六, 读 (#选择项六))
赋值 (单项选择完整题目 [数组序号], 选择项七, 读 (#选择项七))
赋值 (单项选择完整题目 [数组序号], 选择项八, 读 (#选择项八))
赋值 (单项选择完整题目 [数组序号], 选择项九, 读 (#选择项九))
赋值 (单项选择完整题目 [数组序号], 选择项十, 读 (#选择项十))
赋值 (单项选择完整题目 [数组序号], 提示信息, 读 (#提示信息))
赋值 (单项选择完整题目 [数组序号], 抽题标记, 读 (#抽题标记))
赋值 (单项选择完整题目 [数组序号], 用户答案, 读 (#用户答案))


.子程序 数据库到多项选择完整题目数组, 空白型, , 
.参数 数组序号, 整数型, , 


赋值 (多项选择完整题目 [数组序号], 分值, 读 (#分值))
赋值 (多项选择完整题目 [数组序号], 得分, 读 (#得分))
赋值 (多项选择完整题目 [数组序号], 时间, 读 (#时间))
赋值 (多项选择完整题目 [数组序号], 问题, 读 (#问题))
赋值 (多项选择完整题目 [数组序号], 答案, 读 (#答案))
赋值 (多项选择完整题目 [数组序号], 选项, 读 (#选项))
赋值 (多项选择完整题目 [数组序号], 题目编号, 读 (#题目编号))
赋值 (多项选择完整题目 [数组序号], 科目名称, 读 (#科目名称))
赋值 (多项选择完整题目 [数组序号], 章目编号, 读 (#章目编号))
赋值 (多项选择完整题目 [数组序号], 节序编号, 读 (#节序编号))
赋值 (多项选择完整题目 [数组序号], 知识范围, 读 (#知识范围))
赋值 (多项选择完整题目 [数组序号], 题目类型, 读 (#题目类型))
赋值 (多项选择完整题目 [数组序号], 题目序号, 读 (#题目序号))
赋值 (多项选择完整题目 [数组序号], 难度系数, 读 (#难度系数))
赋值 (多项选择完整题目 [数组序号], 材料文本, 读 (#材料文本))
赋值 (多项选择完整题目 [数组序号], 选择项一, 读 (#选择项一))
赋值 (多项选择完整题目 [数组序号], 选择项二, 读 (#选择项二))
赋值 (多项选择完整题目 [数组序号], 选择项三, 读 (#选择项三))
赋值 (多项选择完整题目 [数组序号], 选择项四, 读 (#选择项四))
赋值 (多项选择完整题目 [数组序号], 选择项五, 读 (#选择项五))
赋值 (多项选择完整题目 [数组序号], 选择项六, 读 (#选择项六))
赋值 (多项选择完整题目 [数组序号], 选择项七, 读 (#选择项七))
赋值 (多项选择完整题目 [数组序号], 选择项八, 读 (#选择项八))
赋值 (多项选择完整题目 [数组序号], 选择项九, 读 (#选择项九))
赋值 (多项选择完整题目 [数组序号], 选择项十, 读 (#选择项十))
赋值 (多项选择完整题目 [数组序号], 提示信息, 读 (#提示信息))
赋值 (多项选择完整题目 [数组序号], 抽题标记, 读 (#抽题标记))
赋值 (多项选择完整题目 [数组序号], 用户答案, 读 (#用户答案))


.子程序 数据库到材料分析完整题目数组, 空白型, , 
.参数 数组序号, 整数型, , 


赋值 (材料分析完整题目 [数组序号], 分值, 读 (#分值))
赋值 (材料分析完整题目 [数组序号], 得分, 读 (#得分))
赋值 (材料分析完整题目 [数组序号], 时间, 读 (#时间))
赋值 (材料分析完整题目 [数组序号], 问题, 读 (#问题))
赋值 (材料分析完整题目 [数组序号], 答案, 读 (#答案))
赋值 (材料分析完整题目 [数组序号], 选项, 读 (#选项))
赋值 (材料分析完整题目 [数组序号], 题目编号, 读 (#题目编号))
赋值 (材料分析完整题目 [数组序号], 科目名称, 读 (#科目名称))
赋值 (材料分析完整题目 [数组序号], 章目编号, 读 (#章目编号))
赋值 (材料分析完整题目 [数组序号], 节序编号, 读 (#节序编号))
赋值 (材料分析完整题目 [数组序号], 知识范围, 读 (#知识范围))
赋值 (材料分析完整题目 [数组序号], 题目类型, 读 (#题目类型))
赋值 (材料分析完整题目 [数组序号], 题目序号, 读 (#题目序号))
赋值 (材料分析完整题目 [数组序号], 难度系数, 读 (#难度系数))
赋值 (材料分析完整题目 [数组序号], 材料文本, 读 (#材料文本))
赋值 (材料分析完整题目 [数组序号], 选择项一, 读 (#选择项一))
赋值 (材料分析完整题目 [数组序号], 选择项二, 读 (#选择项二))
赋值 (材料分析完整题目 [数组序号], 选择项三, 读 (#选择项三))
赋值 (材料分析完整题目 [数组序号], 选择项四, 读 (#选择项四))
赋值 (材料分析完整题目 [数组序号], 选择项五, 读 (#选择项五))
赋值 (材料分析完整题目 [数组序号], 选择项六, 读 (#选择项六))
赋值 (材料分析完整题目 [数组序号], 选择项七, 读 (#选择项七))
赋值 (材料分析完整题目 [数组序号], 选择项八, 读 (#选择项八))
赋值 (材料分析完整题目 [数组序号], 选择项九, 读 (#选择项九))
赋值 (材料分析完整题目 [数组序号], 选择项十, 读 (#选择项十))
赋值 (材料分析完整题目 [数组序号], 提示信息, 读 (#提示信息))
赋值 (材料分析完整题目 [数组序号], 抽题标记, 读 (#抽题标记))
赋值 (材料分析完整题目 [数组序号], 用户答案, 读 (#用户答案))


.子程序 数据库到填空完整题目数组, 空白型, , 
.参数 数组序号, 整数型, , 


赋值 (填空完整题目 [数组序号], 分值, 读 (#分值))
赋值 (填空完整题目 [数组序号], 得分, 读 (#得分))
赋值 (填空完整题目 [数组序号], 时间, 读 (#时间))
赋值 (填空完整题目 [数组序号], 问题, 读 (#问题))
赋值 (填空完整题目 [数组序号], 答案, 读 (#答案))
赋值 (填空完整题目 [数组序号], 选项, 读 (#选项))
赋值 (填空完整题目 [数组序号], 题目编号, 读 (#题目编号))
赋值 (填空完整题目 [数组序号], 科目名称, 读 (#科目名称))
赋值 (填空完整题目 [数组序号], 章目编号, 读 (#章目编号))
赋值 (填空完整题目 [数组序号], 节序编号, 读 (#节序编号))
赋值 (填空完整题目 [数组序号], 知识范围, 读 (#知识范围))
赋值 (填空完整题目 [数组序号], 题目类型, 读 (#题目类型))
赋值 (填空完整题目 [数组序号], 题目序号, 读 (#题目序号))
赋值 (填空完整题目 [数组序号], 难度系数, 读 (#难度系数))
赋值 (填空完整题目 [数组序号], 材料文本, 读 (#材料文本))
赋值 (填空完整题目 [数组序号], 选择项一, 读 (#选择项一))
赋值 (填空完整题目 [数组序号], 选择项二, 读 (#选择项二))
赋值 (填空完整题目 [数组序号], 选择项三, 读 (#选择项三))
赋值 (填空完整题目 [数组序号], 选择项四, 读 (#选择项四))
赋值 (填空完整题目 [数组序号], 选择项五, 读 (#选择项五))
赋值 (填空完整题目 [数组序号], 选择项六, 读 (#选择项六))
赋值 (填空完整题目 [数组序号], 选择项七, 读 (#选择项七))
赋值 (填空完整题目 [数组序号], 选择项八, 读 (#选择项八))
赋值 (填空完整题目 [数组序号], 选择项九, 读 (#选择项九))
赋值 (填空完整题目 [数组序号], 选择项十, 读 (#选择项十))
赋值 (填空完整题目 [数组序号], 提示信息, 读 (#提示信息))
赋值 (填空完整题目 [数组序号], 抽题标记, 读 (#抽题标记))
赋值 (填空完整题目 [数组序号], 用户答案, 读 (#用户答案))


.子程序 数据库到辨析完整题目数组, 空白型, , 
.参数 数组序号, 整数型, , 


赋值 (辨析完整题目 [数组序号], 分值, 读 (#分值))
赋值 (辨析完整题目 [数组序号], 得分, 读 (#得分))
赋值 (辨析完整题目 [数组序号], 时间, 读 (#时间))
赋值 (辨析完整题目 [数组序号], 问题, 读 (#问题))
赋值 (辨析完整题目 [数组序号], 答案, 读 (#答案))
赋值 (辨析完整题目 [数组序号], 选项, 读 (#选项))
赋值 (辨析完整题目 [数组序号], 题目编号, 读 (#题目编号))
赋值 (辨析完整题目 [数组序号], 科目名称, 读 (#科目名称))
赋值 (辨析完整题目 [数组序号], 章目编号, 读 (#章目编号))
赋值 (辨析完整题目 [数组序号], 节序编号, 读 (#节序编号))
赋值 (辨析完整题目 [数组序号], 知识范围, 读 (#知识范围))
赋值 (辨析完整题目 [数组序号], 题目类型, 读 (#题目类型))
赋值 (辨析完整题目 [数组序号], 题目序号, 读 (#题目序号))
赋值 (辨析完整题目 [数组序号], 难度系数, 读 (#难度系数))
赋值 (辨析完整题目 [数组序号], 材料文本, 读 (#材料文本))
赋值 (辨析完整题目 [数组序号], 选择项一, 读 (#选择项一))
赋值 (辨析完整题目 [数组序号], 选择项二, 读 (#选择项二))
赋值 (辨析完整题目 [数组序号], 选择项三, 读 (#选择项三))
赋值 (辨析完整题目 [数组序号], 选择项四, 读 (#选择项四))
赋值 (辨析完整题目 [数组序号], 选择项五, 读 (#选择项五))
赋值 (辨析完整题目 [数组序号], 选择项六, 读 (#选择项六))
赋值 (辨析完整题目 [数组序号], 选择项七, 读 (#选择项七))
赋值 (辨析完整题目 [数组序号], 选择项八, 读 (#选择项八))
赋值 (辨析完整题目 [数组序号], 选择项九, 读 (#选择项九))
赋值 (辨析完整题目 [数组序号], 选择项十, 读 (#选择项十))
赋值 (辨析完整题目 [数组序号], 提示信息, 读 (#提示信息))
赋值 (辨析完整题目 [数组序号], 抽题标记, 读 (#抽题标记))
赋值 (辨析完整题目 [数组序号], 用户答案, 读 (#用户答案))


.子程序 数据库到简答完整题目数组, 空白型, , 
.参数 数组序号, 整数型, , 


赋值 (简答完整题目 [数组序号], 分值, 读 (#分值))
赋值 (简答完整题目 [数组序号], 得分, 读 (#得分))
赋值 (简答完整题目 [数组序号], 时间, 读 (#时间))
赋值 (简答完整题目 [数组序号], 问题, 读 (#问题))
赋值 (简答完整题目 [数组序号], 答案, 读 (#答案))
赋值 (简答完整题目 [数组序号], 选项, 读 (#选项))
赋值 (简答完整题目 [数组序号], 题目编号, 读 (#题目编号))
赋值 (简答完整题目 [数组序号], 科目名称, 读 (#科目名称))
赋值 (简答完整题目 [数组序号], 章目编号, 读 (#章目编号))
赋值 (简答完整题目 [数组序号], 节序编号, 读 (#节序编号))
赋值 (简答完整题目 [数组序号], 知识范围, 读 (#知识范围))
赋值 (简答完整题目 [数组序号], 题目类型, 读 (#题目类型))
赋值 (简答完整题目 [数组序号], 题目序号, 读 (#题目序号))
赋值 (简答完整题目 [数组序号], 难度系数, 读 (#难度系数))
赋值 (简答完整题目 [数组序号], 材料文本, 读 (#材料文本))
赋值 (简答完整题目 [数组序号], 选择项一, 读 (#选择项一))
赋值 (简答完整题目 [数组序号], 选择项二, 读 (#选择项二))
赋值 (简答完整题目 [数组序号], 选择项三, 读 (#选择项三))
赋值 (简答完整题目 [数组序号], 选择项四, 读 (#选择项四))
赋值 (简答完整题目 [数组序号], 选择项五, 读 (#选择项五))
赋值 (简答完整题目 [数组序号], 选择项六, 读 (#选择项六))
赋值 (简答完整题目 [数组序号], 选择项七, 读 (#选择项七))
赋值 (简答完整题目 [数组序号], 选择项八, 读 (#选择项八))
赋值 (简答完整题目 [数组序号], 选择项九, 读 (#选择项九))
赋值 (简答完整题目 [数组序号], 选择项十, 读 (#选择项十))
赋值 (简答完整题目 [数组序号], 提示信息, 读 (#提示信息))
赋值 (简答完整题目 [数组序号], 抽题标记, 读 (#抽题标记))
赋值 (简答完整题目 [数组序号], 用户答案, 读 (#用户答案))


.子程序 数据库到论述完整题目数组, 空白型, , 
.参数 数组序号, 整数型, , 


赋值 (论述完整题目 [数组序号], 分值, 读 (#分值))
赋值 (论述完整题目 [数组序号], 得分, 读 (#得分))
赋值 (论述完整题目 [数组序号], 时间, 读 (#时间))
赋值 (论述完整题目 [数组序号], 问题, 读 (#问题))
赋值 (论述完整题目 [数组序号], 答案, 读 (#答案))
赋值 (论述完整题目 [数组序号], 选项, 读 (#选项))
赋值 (论述完整题目 [数组序号], 题目编号, 读 (#题目编号))
赋值 (论述完整题目 [数组序号], 科目名称, 读 (#科目名称))
赋值 (论述完整题目 [数组序号], 章目编号, 读 (#章目编号))
赋值 (论述完整题目 [数组序号], 节序编号, 读 (#节序编号))
赋值 (论述完整题目 [数组序号], 知识范围, 读 (#知识范围))
赋值 (论述完整题目 [数组序号], 题目类型, 读 (#题目类型))
赋值 (论述完整题目 [数组序号], 题目序号, 读 (#题目序号))
赋值 (论述完整题目 [数组序号], 难度系数, 读 (#难度系数))
赋值 (论述完整题目 [数组序号], 材料文本, 读 (#材料文本))
赋值 (论述完整题目 [数组序号], 选择项一, 读 (#选择项一))
赋值 (论述完整题目 [数组序号], 选择项二, 读 (#选择项二))
赋值 (论述完整题目 [数组序号], 选择项三, 读 (#选择项三))
赋值 (论述完整题目 [数组序号], 选择项四, 读 (#选择项四))
赋值 (论述完整题目 [数组序号], 选择项五, 读 (#选择项五))
赋值 (论述完整题目 [数组序号], 选择项六, 读 (#选择项六))
赋值 (论述完整题目 [数组序号], 选择项七, 读 (#选择项七))
赋值 (论述完整题目 [数组序号], 选择项八, 读 (#选择项八))
赋值 (论述完整题目 [数组序号], 选择项九, 读 (#选择项九))
赋值 (论述完整题目 [数组序号], 选择项十, 读 (#选择项十))
赋值 (论述完整题目 [数组序号], 提示信息, 读 (#提示信息))
赋值 (论述完整题目 [数组序号], 抽题标记, 读 (#抽题标记))
赋值 (论述完整题目 [数组序号], 用户答案, 读 (#用户答案))
 ' ＝＝＝＝＝========＝＝＝＝========＝＝＝＝========＝＝＝＝========＝＝＝＝========写数组到数据库

.子程序 名词解释完整题目数组到数据库, 空白型, , 
.参数 数组序号, 整数型, , 


写 (#分值, 名词解释完整题目 [数组序号], 分值)
写 (#得分, 名词解释完整题目 [数组序号], 得分)
写 (#时间, 名词解释完整题目 [数组序号], 时间)
写 (#问题, 名词解释完整题目 [数组序号], 问题)
写 (#答案, 名词解释完整题目 [数组序号], 答案)
写 (#选项, 名词解释完整题目 [数组序号], 选项)
写 (#题目编号, 名词解释完整题目 [数组序号], 题目编号)
写 (#科目名称, 名词解释完整题目 [数组序号], 科目名称)
写 (#章目编号, 名词解释完整题目 [数组序号], 章目编号)
写 (#节序编号, 名词解释完整题目 [数组序号], 节序编号)
写 (#知识范围, 名词解释完整题目 [数组序号], 知识范围)
写 (#题目类型, 名词解释完整题目 [数组序号], 题目类型)
写 (#题目序号, 名词解释完整题目 [数组序号], 题目序号)
写 (#难度系数, 名词解释完整题目 [数组序号], 难度系数)
写 (#材料文本, 名词解释完整题目 [数组序号], 材料文本)
写 (#选择项一, 名词解释完整题目 [数组序号], 选择项一)
写 (#选择项二, 名词解释完整题目 [数组序号], 选择项二)
写 (#选择项三, 名词解释完整题目 [数组序号], 选择项三)
写 (#选择项四, 名词解释完整题目 [数组序号], 选择项四)
写 (#选择项五, 名词解释完整题目 [数组序号], 选择项五)
写 (#选择项六, 名词解释完整题目 [数组序号], 选择项六)
写 (#选择项七, 名词解释完整题目 [数组序号], 选择项七)
写 (#选择项八, 名词解释完整题目 [数组序号], 选择项八)
写 (#选择项九, 名词解释完整题目 [数组序号], 选择项九)
写 (#选择项十, 名词解释完整题目 [数组序号], 选择项十)
写 (#提示信息, 名词解释完整题目 [数组序号], 提示信息)
写 (#抽题标记, 名词解释完整题目 [数组序号], 抽题标记)
写 (#用户答案, 名词解释完整题目 [数组序号], 用户答案)


.子程序 单项选择完整题目数组到数据库, 空白型, , 
.参数 数组序号, 整数型, , 


写 (#分值, 单项选择完整题目 [数组序号], 分值)
写 (#得分, 单项选择完整题目 [数组序号], 得分)
写 (#时间, 单项选择完整题目 [数组序号], 时间)
写 (#问题, 单项选择完整题目 [数组序号], 问题)
写 (#答案, 单项选择完整题目 [数组序号], 答案)
写 (#选项, 单项选择完整题目 [数组序号], 选项)
写 (#题目编号, 单项选择完整题目 [数组序号], 题目编号)
写 (#科目名称, 单项选择完整题目 [数组序号], 科目名称)
写 (#章目编号, 单项选择完整题目 [数组序号], 章目编号)
写 (#节序编号, 单项选择完整题目 [数组序号], 节序编号)
写 (#知识范围, 单项选择完整题目 [数组序号], 知识范围)
写 (#题目类型, 单项选择完整题目 [数组序号], 题目类型)
写 (#题目序号, 单项选择完整题目 [数组序号], 题目序号)
写 (#难度系数, 单项选择完整题目 [数组序号], 难度系数)
写 (#材料文本, 单项选择完整题目 [数组序号], 材料文本)
写 (#选择项一, 单项选择完整题目 [数组序号], 选择项一)
写 (#选择项二, 单项选择完整题目 [数组序号], 选择项二)
写 (#选择项三, 单项选择完整题目 [数组序号], 选择项三)
写 (#选择项四, 单项选择完整题目 [数组序号], 选择项四)
写 (#选择项五, 单项选择完整题目 [数组序号], 选择项五)
写 (#选择项六, 单项选择完整题目 [数组序号], 选择项六)
写 (#选择项七, 单项选择完整题目 [数组序号], 选择项七)
写 (#选择项八, 单项选择完整题目 [数组序号], 选择项八)
写 (#选择项九, 单项选择完整题目 [数组序号], 选择项九)
写 (#选择项十, 单项选择完整题目 [数组序号], 选择项十)
写 (#提示信息, 单项选择完整题目 [数组序号], 提示信息)
写 (#抽题标记, 单项选择完整题目 [数组序号], 抽题标记)
写 (#用户答案, 单项选择完整题目 [数组序号], 用户答案)


.子程序 多项选择完整题目数组到数据库, 空白型, , 
.参数 数组序号, 整数型, , 


写 (#分值, 多项选择完整题目 [数组序号], 分值)
写 (#得分, 多项选择完整题目 [数组序号], 得分)
写 (#时间, 多项选择完整题目 [数组序号], 时间)
写 (#问题, 多项选择完整题目 [数组序号], 问题)
写 (#答案, 多项选择完整题目 [数组序号], 答案)
写 (#选项, 多项选择完整题目 [数组序号], 选项)
写 (#题目编号, 多项选择完整题目 [数组序号], 题目编号)
写 (#科目名称, 多项选择完整题目 [数组序号], 科目名称)
写 (#章目编号, 多项选择完整题目 [数组序号], 章目编号)
写 (#节序编号, 多项选择完整题目 [数组序号], 节序编号)
写 (#知识范围, 多项选择完整题目 [数组序号], 知识范围)
写 (#题目类型, 多项选择完整题目 [数组序号], 题目类型)
写 (#题目序号, 多项选择完整题目 [数组序号], 题目序号)
写 (#难度系数, 多项选择完整题目 [数组序号], 难度系数)
写 (#材料文本, 多项选择完整题目 [数组序号], 材料文本)
写 (#选择项一, 多项选择完整题目 [数组序号], 选择项一)
写 (#选择项二, 多项选择完整题目 [数组序号], 选择项二)
写 (#选择项三, 多项选择完整题目 [数组序号], 选择项三)
写 (#选择项四, 多项选择完整题目 [数组序号], 选择项四)
写 (#选择项五, 多项选择完整题目 [数组序号], 选择项五)
写 (#选择项六, 多项选择完整题目 [数组序号], 选择项六)
写 (#选择项七, 多项选择完整题目 [数组序号], 选择项七)
写 (#选择项八, 多项选择完整题目 [数组序号], 选择项八)
写 (#选择项九, 多项选择完整题目 [数组序号], 选择项九)
写 (#选择项十, 多项选择完整题目 [数组序号], 选择项十)
写 (#提示信息, 多项选择完整题目 [数组序号], 提示信息)
写 (#抽题标记, 多项选择完整题目 [数组序号], 抽题标记)
写 (#用户答案, 多项选择完整题目 [数组序号], 用户答案)


.子程序 材料分析完整题目数组到数据库, 空白型, , 
.参数 数组序号, 整数型, , 


写 (#分值, 材料分析完整题目 [数组序号], 分值)
写 (#得分, 材料分析完整题目 [数组序号], 得分)
写 (#时间, 材料分析完整题目 [数组序号], 时间)
写 (#问题, 材料分析完整题目 [数组序号], 问题)
写 (#答案, 材料分析完整题目 [数组序号], 答案)
写 (#选项, 材料分析完整题目 [数组序号], 选项)
写 (#题目编号, 材料分析完整题目 [数组序号], 题目编号)
写 (#科目名称, 材料分析完整题目 [数组序号], 科目名称)
写 (#章目编号, 材料分析完整题目 [数组序号], 章目编号)
写 (#节序编号, 材料分析完整题目 [数组序号], 节序编号)
写 (#知识范围, 材料分析完整题目 [数组序号], 知识范围)
写 (#题目类型, 材料分析完整题目 [数组序号], 题目类型)
写 (#题目序号, 材料分析完整题目 [数组序号], 题目序号)
写 (#难度系数, 材料分析完整题目 [数组序号], 难度系数)
写 (#材料文本, 材料分析完整题目 [数组序号], 材料文本)
写 (#选择项一, 材料分析完整题目 [数组序号], 选择项一)
写 (#选择项二, 材料分析完整题目 [数组序号], 选择项二)
写 (#选择项三, 材料分析完整题目 [数组序号], 选择项三)
写 (#选择项四, 材料分析完整题目 [数组序号], 选择项四)
写 (#选择项五, 材料分析完整题目 [数组序号], 选择项五)
写 (#选择项六, 材料分析完整题目 [数组序号], 选择项六)
写 (#选择项七, 材料分析完整题目 [数组序号], 选择项七)
写 (#选择项八, 材料分析完整题目 [数组序号], 选择项八)
写 (#选择项九, 材料分析完整题目 [数组序号], 选择项九)
写 (#选择项十, 材料分析完整题目 [数组序号], 选择项十)
写 (#提示信息, 材料分析完整题目 [数组序号], 提示信息)
写 (#抽题标记, 材料分析完整题目 [数组序号], 抽题标记)
写 (#用户答案, 材料分析完整题目 [数组序号], 用户答案)


.子程序 填空完整题目数组到数据库, 空白型, , 
.参数 数组序号, 整数型, , 


写 (#分值, 填空完整题目 [数组序号], 分值)
写 (#得分, 填空完整题目 [数组序号], 得分)
写 (#时间, 填空完整题目 [数组序号], 时间)
写 (#问题, 填空完整题目 [数组序号], 问题)
写 (#答案, 填空完整题目 [数组序号], 答案)
写 (#选项, 填空完整题目 [数组序号], 选项)
写 (#题目编号, 填空完整题目 [数组序号], 题目编号)
写 (#科目名称, 填空完整题目 [数组序号], 科目名称)
写 (#章目编号, 填空完整题目 [数组序号], 章目编号)
写 (#节序编号, 填空完整题目 [数组序号], 节序编号)
写 (#知识范围, 填空完整题目 [数组序号], 知识范围)
写 (#题目类型, 填空完整题目 [数组序号], 题目类型)
写 (#题目序号, 填空完整题目 [数组序号], 题目序号)
写 (#难度系数, 填空完整题目 [数组序号], 难度系数)
写 (#材料文本, 填空完整题目 [数组序号], 材料文本)
写 (#选择项一, 填空完整题目 [数组序号], 选择项一)
写 (#选择项二, 填空完整题目 [数组序号], 选择项二)
写 (#选择项三, 填空完整题目 [数组序号], 选择项三)
写 (#选择项四, 填空完整题目 [数组序号], 选择项四)
写 (#选择项五, 填空完整题目 [数组序号], 选择项五)
写 (#选择项六, 填空完整题目 [数组序号], 选择项六)
写 (#选择项七, 填空完整题目 [数组序号], 选择项七)
写 (#选择项八, 填空完整题目 [数组序号], 选择项八)
写 (#选择项九, 填空完整题目 [数组序号], 选择项九)
写 (#选择项十, 填空完整题目 [数组序号], 选择项十)
写 (#提示信息, 填空完整题目 [数组序号], 提示信息)
写 (#抽题标记, 填空完整题目 [数组序号], 抽题标记)
写 (#用户答案, 填空完整题目 [数组序号], 用户答案)


.子程序 辨析完整题目数组到数据库, 空白型, , 
.参数 数组序号, 整数型, , 


写 (#分值, 辨析完整题目 [数组序号], 分值)
写 (#得分, 辨析完整题目 [数组序号], 得分)
写 (#时间, 辨析完整题目 [数组序号], 时间)
写 (#问题, 辨析完整题目 [数组序号], 问题)
写 (#答案, 辨析完整题目 [数组序号], 答案)
写 (#选项, 辨析完整题目 [数组序号], 选项)
写 (#题目编号, 辨析完整题目 [数组序号], 题目编号)
写 (#科目名称, 辨析完整题目 [数组序号], 科目名称)
写 (#章目编号, 辨析完整题目 [数组序号], 章目编号)
写 (#节序编号, 辨析完整题目 [数组序号], 节序编号)
写 (#知识范围, 辨析完整题目 [数组序号], 知识范围)
写 (#题目类型, 辨析完整题目 [数组序号], 题目类型)
写 (#题目序号, 辨析完整题目 [数组序号], 题目序号)
写 (#难度系数, 辨析完整题目 [数组序号], 难度系数)
写 (#材料文本, 辨析完整题目 [数组序号], 材料文本)
写 (#选择项一, 辨析完整题目 [数组序号], 选择项一)
写 (#选择项二, 辨析完整题目 [数组序号], 选择项二)
写 (#选择项三, 辨析完整题目 [数组序号], 选择项三)
写 (#选择项四, 辨析完整题目 [数组序号], 选择项四)
写 (#选择项五, 辨析完整题目 [数组序号], 选择项五)
写 (#选择项六, 辨析完整题目 [数组序号], 选择项六)
写 (#选择项七, 辨析完整题目 [数组序号], 选择项七)
写 (#选择项八, 辨析完整题目 [数组序号], 选择项八)
写 (#选择项九, 辨析完整题目 [数组序号], 选择项九)
写 (#选择项十, 辨析完整题目 [数组序号], 选择项十)
写 (#提示信息, 辨析完整题目 [数组序号], 提示信息)
写 (#抽题标记, 辨析完整题目 [数组序号], 抽题标记)
写 (#用户答案, 辨析完整题目 [数组序号], 用户答案)


.子程序 简答完整题目数组到数据库, 空白型, , 
.参数 数组序号, 整数型, , 


写 (#分值, 简答完整题目 [数组序号], 分值)
写 (#得分, 简答完整题目 [数组序号], 得分)
写 (#时间, 简答完整题目 [数组序号], 时间)
写 (#问题, 简答完整题目 [数组序号], 问题)
写 (#答案, 简答完整题目 [数组序号], 答案)
写 (#选项, 简答完整题目 [数组序号], 选项)
写 (#题目编号, 简答完整题目 [数组序号], 题目编号)
写 (#科目名称, 简答完整题目 [数组序号], 科目名称)
写 (#章目编号, 简答完整题目 [数组序号], 章目编号)
写 (#节序编号, 简答完整题目 [数组序号], 节序编号)
写 (#知识范围, 简答完整题目 [数组序号], 知识范围)
写 (#题目类型, 简答完整题目 [数组序号], 题目类型)
写 (#题目序号, 简答完整题目 [数组序号], 题目序号)
写 (#难度系数, 简答完整题目 [数组序号], 难度系数)
写 (#材料文本, 简答完整题目 [数组序号], 材料文本)
写 (#选择项一, 简答完整题目 [数组序号], 选择项一)
写 (#选择项二, 简答完整题目 [数组序号], 选择项二)
写 (#选择项三, 简答完整题目 [数组序号], 选择项三)
写 (#选择项四, 简答完整题目 [数组序号], 选择项四)
写 (#选择项五, 简答完整题目 [数组序号], 选择项五)
写 (#选择项六, 简答完整题目 [数组序号], 选择项六)
写 (#选择项七, 简答完整题目 [数组序号], 选择项七)
写 (#选择项八, 简答完整题目 [数组序号], 选择项八)
写 (#选择项九, 简答完整题目 [数组序号], 选择项九)
写 (#选择项十, 简答完整题目 [数组序号], 选择项十)
写 (#提示信息, 简答完整题目 [数组序号], 提示信息)
写 (#抽题标记, 简答完整题目 [数组序号], 抽题标记)
写 (#用户答案, 简答完整题目 [数组序号], 用户答案)


.子程序 论述完整题目数组到数据库, 空白型, , 
.参数 数组序号, 整数型, , 


写 (#分值, 论述完整题目 [数组序号], 分值)
写 (#得分, 论述完整题目 [数组序号], 得分)
写 (#时间, 论述完整题目 [数组序号], 时间)
写 (#问题, 论述完整题目 [数组序号], 问题)
写 (#答案, 论述完整题目 [数组序号], 答案)
写 (#选项, 论述完整题目 [数组序号], 选项)
写 (#题目编号, 论述完整题目 [数组序号], 题目编号)
写 (#科目名称, 论述完整题目 [数组序号], 科目名称)
写 (#章目编号, 论述完整题目 [数组序号], 章目编号)
写 (#节序编号, 论述完整题目 [数组序号], 节序编号)
写 (#知识范围, 论述完整题目 [数组序号], 知识范围)
写 (#题目类型, 论述完整题目 [数组序号], 题目类型)
写 (#题目序号, 论述完整题目 [数组序号], 题目序号)
写 (#难度系数, 论述完整题目 [数组序号], 难度系数)
写 (#材料文本, 论述完整题目 [数组序号], 材料文本)
写 (#选择项一, 论述完整题目 [数组序号], 选择项一)
写 (#选择项二, 论述完整题目 [数组序号], 选择项二)
写 (#选择项三, 论述完整题目 [数组序号], 选择项三)
写 (#选择项四, 论述完整题目 [数组序号], 选择项四)
写 (#选择项五, 论述完整题目 [数组序号], 选择项五)
写 (#选择项六, 论述完整题目 [数组序号], 选择项六)
写 (#选择项七, 论述完整题目 [数组序号], 选择项七)
写 (#选择项八, 论述完整题目 [数组序号], 选择项八)
写 (#选择项九, 论述完整题目 [数组序号], 选择项九)
写 (#选择项十, 论述完整题目 [数组序号], 选择项十)
写 (#提示信息, 论述完整题目 [数组序号], 提示信息)
写 (#抽题标记, 论述完整题目 [数组序号], 抽题标记)
写 (#用户答案, 论述完整题目 [数组序号], 用户答案)


.子程序 数据库到各题型数组, 空白型, , 
.局部变量 循环变量, 整数型, , , 

赋值 (名词解释数量, 0)
赋值 (单项选择数量, 0)
赋值 (多项选择数量, 0)
赋值 (材料分析数量, 0)
赋值 (填空数量, 0)
赋值 (辨析数量, 0)
赋值 (简答数量, 0)
赋值 (论述数量, 0)
到首记录 ()
.计次循环首 (取记录数 (), 循环变量) ' 计算成员数
    .如果 (等于 (读 (#题目类型), “名词解释”))
        赋值 (名词解释数量, 相加 (名词解释数量, 1))
    .否则
        
    .如果结束
    .如果 (等于 (读 (#题目类型), “单项选择”))
        赋值 (单项选择数量, 相加 (单项选择数量, 1))
    .否则
        
    .如果结束
    .如果 (等于 (读 (#题目类型), “多项选择”))
        赋值 (多项选择数量, 相加 (多项选择数量, 1))
    .否则
        
    .如果结束
    .如果 (等于 (读 (#题目类型), #材料分析))
        赋值 (材料分析数量, 相加 (材料分析数量, 1))
    .否则
        
    .如果结束
    .如果 (等于 (读 (#题目类型), #填空))
        赋值 (填空数量, 相加 (填空数量, 1))
    .否则
        
    .如果结束
    .如果 (等于 (读 (#题目类型), #辨析))
        赋值 (辨析数量, 相加 (辨析数量, 1))
    .否则
        
    .如果结束
    .如果 (等于 (读 (#题目类型), #简答))
        赋值 (简答数量, 相加 (简答数量, 1))
    .否则
        
    .如果结束
    .如果 (等于 (读 (#题目类型), #论述))
        赋值 (论述数量, 相加 (论述数量, 1))
    .否则
        
    .如果结束
    
    跳过 ()
.计次循环尾 ()
重定义数组 (名词解释完整题目, 假, 名词解释数量)
重定义数组 (单项选择完整题目, 假, 单项选择数量)
重定义数组 (多项选择完整题目, 假, 多项选择数量)
重定义数组 (材料分析完整题目, 假, 材料分析数量)
重定义数组 (填空完整题目, 假, 填空数量)
重定义数组 (辨析完整题目, 假, 辨析数量)
重定义数组 (简答完整题目, 假, 简答数量)
重定义数组 (论述完整题目, 假, 论述数量)

赋值 (名词解释数量, 0)
赋值 (单项选择数量, 0)
赋值 (多项选择数量, 0)
赋值 (材料分析数量, 0)
赋值 (填空数量, 0)
赋值 (辨析数量, 0)
赋值 (简答数量, 0)
赋值 (论述数量, 0)

到首记录 ()
.计次循环首 (取记录数 (), 循环变量) ' 计算成员数同时向数组赋值
    .如果 (等于 (读 (#题目类型), “名词解释”))
        赋值 (名词解释数量, 相加 (名词解释数量, 1))
        数据库到名词解释完整题目数组 (名词解释数量)
    .否则
        
    .如果结束
    .如果 (等于 (读 (#题目类型), “单项选择”))
        赋值 (单项选择数量, 相加 (单项选择数量, 1))
        数据库到单项选择完整题目数组 (单项选择数量)
    .否则
        
    .如果结束
    .如果 (等于 (读 (#题目类型), “多项选择”))
        赋值 (多项选择数量, 相加 (多项选择数量, 1))
        数据库到多项选择完整题目数组 (多项选择数量)
    .否则
        
    .如果结束
    .如果 (等于 (读 (#题目类型), #材料分析))
        赋值 (材料分析数量, 相加 (材料分析数量, 1))
        数据库到材料分析完整题目数组 (材料分析数量)
    .否则
        
    .如果结束
    .如果 (等于 (读 (#题目类型), #填空))
        赋值 (填空数量, 相加 (填空数量, 1))
        数据库到填空完整题目数组 (填空数量)
    .否则
        
    .如果结束
    .如果 (等于 (读 (#题目类型), #辨析))
        赋值 (辨析数量, 相加 (辨析数量, 1))
        数据库到辨析完整题目数组 (辨析数量)
    .否则
        
    .如果结束
    .如果 (等于 (读 (#题目类型), #简答))
        赋值 (简答数量, 相加 (简答数量, 1))
        数据库到简答完整题目数组 (简答数量)
    .否则
        
    .如果结束
    .如果 (等于 (读 (#题目类型), #论述))
        赋值 (论述数量, 相加 (论述数量, 1))
        数据库到论述完整题目数组 (论述数量)
    .否则
        
    .如果结束
    
    跳过 ()
.计次循环尾 ()


.子程序 统计各题型时间分值数量, 空白型, , 
.局部变量 循环变量, 空白型, , , 

 ' 数据库到各题型数组 ()
赋值 (名词解释数量, 取数组成员数 (名词解释完整题目))
赋值 (单项选择数量, 取数组成员数 (单项选择完整题目))
赋值 (多项选择数量, 取数组成员数 (多项选择完整题目))
赋值 (材料分析数量, 取数组成员数 (材料分析完整题目))
赋值 (填空数量, 取数组成员数 (填空完整题目))
赋值 (辨析数量, 取数组成员数 (辨析完整题目))
赋值 (简答数量, 取数组成员数 (简答完整题目))
赋值 (论述数量, 取数组成员数 (论述完整题目))

赋值 (总题数, 相加 (名词解释数量, 单项选择数量, 多项选择数量, 材料分析数量, 填空数量, 辨析数量, 简答数量, 论述数量))
赋值 (总时间, 0)
赋值 (总分数, 0)
.计次循环首 (名词解释数量, 循环变量)
    赋值 (总时间, 相加 (总时间, 名词解释完整题目 [循环变量], 时间))
    赋值 (总分数, 相加 (总分数, 名词解释完整题目 [循环变量], 分值))
.计次循环尾 ()
.计次循环首 (单项选择数量, 循环变量)
    赋值 (总时间, 相加 (总时间, 单项选择完整题目 [循环变量], 时间))
    赋值 (总分数, 相加 (总分数, 单项选择完整题目 [循环变量], 分值))
.计次循环尾 ()
.计次循环首 (多项选择数量, 循环变量)
    赋值 (总时间, 相加 (总时间, 多项选择完整题目 [循环变量], 时间))
    赋值 (总分数, 相加 (总分数, 多项选择完整题目 [循环变量], 分值))
.计次循环尾 ()
.计次循环首 (材料分析数量, 循环变量)
    赋值 (总时间, 相加 (总时间, 材料分析完整题目 [循环变量], 时间))
    赋值 (总分数, 相加 (总分数, 材料分析完整题目 [循环变量], 分值))
.计次循环尾 ()
.计次循环首 (填空数量, 循环变量)
    赋值 (总时间, 相加 (总时间, 填空完整题目 [循环变量], 时间))
    赋值 (总分数, 相加 (总分数, 填空完整题目 [循环变量], 分值))
.计次循环尾 ()
.计次循环首 (辨析数量, 循环变量)
    赋值 (总时间, 相加 (总时间, 辨析完整题目 [循环变量], 时间))
    赋值 (总分数, 相加 (总分数, 辨析完整题目 [循环变量], 分值))
.计次循环尾 ()
.计次循环首 (简答数量, 循环变量)
    赋值 (总时间, 相加 (总时间, 简答完整题目 [循环变量], 时间))
    赋值 (总分数, 相加 (总分数, 简答完整题目 [循环变量], 分值))
.计次循环尾 ()
.计次循环首 (论述数量, 循环变量)
    赋值 (总时间, 相加 (总时间, 论述完整题目 [循环变量], 时间))
    赋值 (总分数, 相加 (总分数, 论述完整题目 [循环变量], 分值))
.计次循环尾 ()


.子程序 从数组中抽取题目, 空白型, , 
.参数 待抽数组, 完整题目, 数组, 
.参数 题目数, 整数型, , 

.局部变量 循环次数, 整数型, , , 

置随机数种子 ()
赋值 (循环次数, 相减 (取数组成员数 (待抽数组), 题目数))
.计次循环首 (循环次数, )
    删除成员 (待抽数组, 取随机数 (1, 取数组成员数 (待抽数组)), )
.计次循环尾 ()


.子程序 各题型数组到数据库, 空白型, , 
.局部变量 数组序号, 整数型, , , 

.如果 (大于 (取数组成员数 (名词解释完整题目), 0))
    .计次循环首 (取数组成员数 (名词解释完整题目), 数组序号)
        加空记录 ()
        名词解释完整题目数组到数据库 (数组序号)
    .计次循环尾 ()
    
.否则
    
.如果结束
.如果 (大于 (取数组成员数 (单项选择完整题目), 0))
    .计次循环首 (取数组成员数 (单项选择完整题目), 数组序号)
        加空记录 ()
        单项选择完整题目数组到数据库 (数组序号)
    .计次循环尾 ()
    
.否则
    
.如果结束
.如果 (大于 (取数组成员数 (多项选择完整题目), 0))
    .计次循环首 (取数组成员数 (多项选择完整题目), 数组序号)
        加空记录 ()
        多项选择完整题目数组到数据库 (数组序号)
    .计次循环尾 ()
    
.否则
    
.如果结束
.如果 (大于 (取数组成员数 (材料分析完整题目), 0))
    .计次循环首 (取数组成员数 (材料分析完整题目), 数组序号)
        加空记录 ()
        材料分析完整题目数组到数据库 (数组序号)
    .计次循环尾 ()
    
.否则
    
.如果结束
.如果 (大于 (取数组成员数 (填空完整题目), 0))
    .计次循环首 (取数组成员数 (填空完整题目), 数组序号)
        加空记录 ()
        填空完整题目数组到数据库 (数组序号)
    .计次循环尾 ()
    
.否则
    
.如果结束
.如果 (大于 (取数组成员数 (辨析完整题目), 0))
    .计次循环首 (取数组成员数 (辨析完整题目), 数组序号)
        加空记录 ()
        辨析完整题目数组到数据库 (数组序号)
    .计次循环尾 ()
    
.否则
    
.如果结束
.如果 (大于 (取数组成员数 (简答完整题目), 0))
    .计次循环首 (取数组成员数 (简答完整题目), 数组序号)
        加空记录 ()
        简答完整题目数组到数据库 (数组序号)
    .计次循环尾 ()
    
.否则
    
.如果结束
.如果 (大于 (取数组成员数 (论述完整题目), 0))
    .计次循环首 (取数组成员数 (论述完整题目), 数组序号)
        加空记录 ()
        论述完整题目数组到数据库 (数组序号)
    .计次循环尾 ()
    
.否则
    
.如果结束




.子程序 _限时换题选择框_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (“本题时间结束后自动切换到下一题。”)


.子程序 _不可回头选择框_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (“禁止手动切换到之前题目。”)

.子程序 _错题重做选择框_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (“选择题选对了才能进入下一题。”)

.子程序 _对错提示选择框_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (“提示当前所选答案是否正确。”)

.子程序 _窗口加大选择框_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (“考试窗口和字号变大。”)

.子程序 _问题闪现选择框_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (“考试时每个题目仅显示3秒。”)

.子程序 _抽题按钮_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (“随机抽题，统计时限、题量、分值。”)

.子程序 _考试按钮_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (“进入考试状态并开始计时。”)

.子程序 _题库名称组合框_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 纯文件名, 文本型, , , 

赋值 (纯文件名, 取文本右边 (.内容, 相减 (取文本长度 (.内容), 倒找文本 (.内容, “\”, , 假))))

0.置文本 (纯文件名)


.子程序 _导入题库按钮_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (“导入需要测验的题库。”)

.子程序 _题库名称组合框_列表项被选择, 空白型, , 
.局部变量 纯文件名, 文本型, , , 

赋值 (题库, .取项目文本 (.现行选中项))
赋值 (纯文件名, 取文本右边 (题库, 相减 (取文本长度 (题库), 倒找文本 (题库, “\”, , 假))))
0.置文本 (纯文件名)
_抽题窗口_创建完毕 ()

.子程序 _题型数量分组框_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (“设置各题型数量。”)


.窗口程序集 材料文本窗口程序集, , , 

.程序集变量 文件号, 整数型, , , 
.程序集变量 窗口与图片高度差, 整数型, , , 
.程序集变量 图片宽度, 整数型, , , 
.程序集变量 图片高度, 整数型, , , 
.程序集变量 高宽比, 小数型, , , 
.程序集变量 进度条位置, 整数型, , , 
.程序集变量 问题编辑框内容, 文本型, , , 
.程序集变量 播放mp3状态, 逻辑型, , , 
.子程序 _材料文本窗口_创建完毕, 空白型, , 
.局部变量 文件号1, 整数型, , , 

赋值 (播放mp3状态, 假)
 ' 图片宽度 ＝ 取图片宽度 (材料文本路径)
 ' 图片高度 ＝ 取图片高度 (材料文本路径)
 ' 高宽比 ＝ 图片高度 ÷ 图片宽度)
 ' 信息框 (材料文本路径 ＋ 到文本 (图片宽度) ＋ “,” ＋ 到文本 (图片宽度), 0, )
.如果 (等于 (窗口加大, 假))
    .如果 (等于 (出题窗口., “考试模式”))
        赋值 (.时钟周期, 1000)
        赋值 (进度条位置, 出题窗口..位置)
        赋值 (.禁止, 真)
    .否则
        赋值 (.禁止, 假)
    .如果结束
    赋值 (材料文本窗口., 相加 (出题窗口., 出题窗口.))
    赋值 (材料文本窗口., 出题窗口.)
    
    .如果 (等于 (出题窗口..内容, “材料分析”))
        .如果 (不等于 (材料文本路径, “”))
            赋值 (材料文本路径1, 材料文本路径)
        .否则
            .如果 (不等于 (材料文本路径1, “”))
                 ' 文本编辑框.文本颜色 ＝ #红色
            .否则
                赋值 (., “材料分析题未设置材料文本路径，请点击 [保存] 进行设置！”)
                 ' 信息框 (“材料分析题未设置材料文本路径，请点击 [保存] 进行设置！”, 0, )
            .如果结束
            
        .如果结束
        
        .如果 (等于 (取文本右边 (材料文本路径1, 3), “txt”))
            赋值 (材料文本窗口., “材料文本”)
            赋值 (文件号, 打开文件 (材料文本路径1, , ))
             ' 图片框1.可视 ＝ 假
            赋值 (., 读入文本 (文件号, ))
            赋值 (.禁止, 真)
            赋值 (.禁止, 假)
            赋值 (.禁止, 真)
            
            赋值 (.禁止, 真)
        .否则
            .如果 (或者 (等于 (取文本右边 (材料文本路径1, 3), “jpg”), 等于 (取文本右边 (材料文本路径1, 3), “gif”), 等于 (取文本右边 (材料文本路径1, 3), “JPG”), 等于 (取文本右边 (材料文本路径1, 3), “GIF”)))
                赋值 (., 材料文本路径1)
                赋值 (材料文本窗口., “材料图片”)
                赋值 (图片宽度, 未知支持库函数_31 (.))
                赋值 (图片高度, 未知支持库函数_32 (.))
                赋值 (高宽比, 相除 (图片高度, 图片宽度))
                 ' 信息框 (材料文本路径1 ＋ “,” ＋ 到文本 (图片宽度) ＋ “,” ＋ 到文本 (图片宽度), 0, )
                赋值 (文件号, 打开文件 (., , ))
                赋值 (.可视, 真)
                赋值 (.图片, 读入字节集 (文件号, 取文件长度 (文件号)))
                 ' 信息框 (到文本 (高宽比), 0, )
                赋值 (.高度, 取整 (相乘 (.宽度, 高宽比)))
                赋值 (.禁止, 真)
                赋值 (.禁止, 真)
                赋值 (.禁止, 假)
                
                 ' 材料文本窗口.宽度 ＝ 图片框1.宽度
            .否则
                .如果 (或者 (等于 (取文本右边 (材料文本路径1, 3), “wav”), 等于 (取文本右边 (材料文本路径1, 3), “mp3”), 等于 (取文本右边 (材料文本路径1, 3), “avi”), 等于 (取文本右边 (材料文本路径1, 3), “WAV”), 等于 (取文本右边 (材料文本路径1, 3), “MP3”), 等于 (取文本右边 (材料文本路径1, 3), “AVI”)))
                    赋值 (., 材料文本路径1)
                    赋值 (材料文本窗口., “音视频文件”)
                    赋值 (.禁止, 假)
                    赋值 (.禁止, 真)
                    赋值 (.禁止, 真)
                     ' 播放器1.可视 ＝ 真
                     ' 播放器1.地址 ＝ 文本编辑框.内容
                     ' 播放MP3 (, 文本编辑框.内容)
                .否则
                     ' 播放器1.可视 ＝ 假
                     ' 播放器1.地址 ＝ “”
                .如果结束
                
            .如果结束
            
        .如果结束
        关闭文件 (文件号)
        
        赋值 (材料文本窗口., 材料文本路径)
        
        
    .否则
        .如果 (等于 (文件是否存在 (相加 (题库路径, “\”, 取文本左边 (出题窗口..内容, 10), “.txt”)), 真))
            赋值 (文件号1, 打开文件 (相加 (题库路径, “\”, 取文本左边 (出题窗口..内容, 10), “.txt”), , ))
            
            赋值 (., 读入文本 (文件号1, ))
            关闭文件 (文件号1)
            
        .否则
            赋值 (., 出题窗口..内容)
        .如果结束
        
        赋值 (问题编辑框内容, 出题窗口..内容)
        赋值 (材料文本窗口., 相加 (“问题：”, 问题编辑框内容))
        赋值 (.禁止, 真)
        赋值 (.禁止, 真)
        赋值 (.禁止, 假)
    .如果结束
    .如果 (等于 (出题窗口., “考试模式”))
        赋值 (.禁止, 真)
    .否则
        赋值 (.禁止, 假)
    .如果结束
    
    赋值 (材料文本窗口., 出题窗口.)
    赋值 (材料文本窗口被打开, 真)
    
.否则
    .如果 (等于 (考试窗口., “考试模式”))
        赋值 (.时钟周期, 1000)
        赋值 (进度条位置, 考试窗口..位置)
        赋值 (.禁止, 真)
    .否则
        赋值 (.禁止, 假)
    .如果结束
    赋值 (材料文本窗口., 相减 (相加 (考试窗口., 考试窗口.), 材料文本窗口.))
    赋值 (材料文本窗口., 考试窗口.)
    
    .如果 (等于 (考试窗口..内容, “材料分析”))
        .如果 (不等于 (材料文本路径, “”))
            赋值 (材料文本路径1, 材料文本路径)
        .否则
            .如果 (不等于 (材料文本路径1, “”))
                 ' 文本编辑框.文本颜色 ＝ #红色
            .否则
                赋值 (., “材料分析题未设置材料文本路径，请点击 [保存] 进行设置！”)
                 ' 信息框 (“材料分析题未设置材料文本路径，请点击 [保存] 进行设置！”, 0, )
            .如果结束
            
        .如果结束
        
        .如果 (等于 (取文本右边 (材料文本路径1, 3), “txt”))
            赋值 (材料文本窗口., “材料文本”)
            赋值 (文件号, 打开文件 (材料文本路径1, , ))
             ' 图片框1.可视 ＝ 假
            赋值 (., 读入文本 (文件号, ))
            赋值 (.禁止, 真)
            赋值 (.禁止, 假)
            赋值 (.禁止, 真)
            
            赋值 (.禁止, 真)
        .否则
            .如果 (或者 (等于 (取文本右边 (材料文本路径1, 3), “jpg”), 等于 (取文本右边 (材料文本路径1, 3), “gif”), 等于 (取文本右边 (材料文本路径1, 3), “JPG”), 等于 (取文本右边 (材料文本路径1, 3), “GIF”)))
                赋值 (., 材料文本路径1)
                赋值 (材料文本窗口., “材料图片”)
                赋值 (图片宽度, 未知支持库函数_31 (.))
                赋值 (图片高度, 未知支持库函数_32 (.))
                赋值 (高宽比, 相除 (图片高度, 图片宽度))
                 ' 信息框 (材料文本路径1 ＋ “,” ＋ 到文本 (图片宽度) ＋ “,” ＋ 到文本 (图片宽度), 0, )
                赋值 (文件号, 打开文件 (., , ))
                赋值 (.可视, 真)
                赋值 (.图片, 读入字节集 (文件号, 取文件长度 (文件号)))
                 ' 信息框 (到文本 (高宽比), 0, )
                赋值 (.高度, 取整 (相乘 (.宽度, 高宽比)))
                赋值 (.禁止, 真)
                赋值 (.禁止, 真)
                赋值 (.禁止, 假)
                
                 ' 材料文本窗口.宽度 ＝ 图片框1.宽度
            .否则
                .如果 (或者 (等于 (取文本右边 (材料文本路径1, 3), “wav”), 等于 (取文本右边 (材料文本路径1, 3), “mp3”), 等于 (取文本右边 (材料文本路径1, 3), “avi”), 等于 (取文本右边 (材料文本路径1, 3), “WAV”), 等于 (取文本右边 (材料文本路径1, 3), “MP3”), 等于 (取文本右边 (材料文本路径1, 3), “AVI”)))
                    赋值 (., 材料文本路径1)
                    赋值 (材料文本窗口., “音视频文件”)
                    赋值 (.禁止, 假)
                    赋值 (.禁止, 真)
                    赋值 (.禁止, 真)
                    
                    输出调试文本 (材料文本窗口.)
                    
                     ' 播放器1.可视 ＝ 真
                     ' 播放器1.地址 ＝ 文本编辑框.内容
                     ' 播放MP3 (, 文本编辑框.内容)
                .否则
                     ' 播放器1.可视 ＝ 假
                     ' 播放器1.地址 ＝ “”
                .如果结束
                
            .如果结束
            
        .如果结束
        关闭文件 (文件号)
        
        赋值 (材料文本窗口., 材料文本路径)
        
        
    .否则
        .如果 (等于 (文件是否存在 (相加 (题库路径, “\”, 取文本左边 (考试窗口..内容, 10), “.txt”)), 真))
            赋值 (文件号1, 打开文件 (相加 (题库路径, “\”, 取文本左边 (考试窗口..内容, 10), “.txt”), , ))
            
            赋值 (., 读入文本 (文件号1, ))
            赋值 (.禁止, 假)
            赋值 (.禁止, 真)
            赋值 (.禁止, 假)
            
            关闭文件 (文件号1)
            
        .否则
            赋值 (., 考试窗口..内容)
        .如果结束
        
        赋值 (问题编辑框内容, 考试窗口..内容)
        赋值 (材料文本窗口., 相加 (“问题：”, 问题编辑框内容))
        赋值 (.禁止, 真)
        赋值 (.禁止, 真)
        赋值 (.禁止, 假)
    .如果结束
    
    .如果 (等于 (.可视, 真))
        .如果 (大于 (.高度, 材料文本窗口.))
            赋值 (材料文本窗口., 相加 (.高度, 63))
        .否则
            赋值 (材料文本窗口., 考试窗口.)
        .如果结束
        
    .否则
         ' .如果 (等于 (., 真))
             ' 材料文本窗口.高度 ＝ 图片框1.高度 ＋ 63
        .否则
             ' 材料文本窗口.高度 ＝ 考试窗口.高度
        .如果结束
        
        
    .如果结束
    .如果 (等于 (考试窗口., “考试模式”))
        赋值 (.禁止, 真)
    .否则
        赋值 (.禁止, 假)
    .如果结束
    
    赋值 (材料文本窗口被打开, 真)
    
.如果结束


.如果 (等于 (.禁止, 假))
     ' 打开图片按钮.禁止 ＝ 假
    赋值 (.禁止, 真)
    赋值 (.禁止, 真)
.否则
    
.如果结束
 ' .如果 (等于 (.禁止, 假))
     ' 打开图片按钮.禁止 ＝ 真
     ' ' 保存文本按钮.禁止 ＝ 真
     ' 媒体播放按钮.禁止 ＝ 真
.否则
    
.如果结束
.如果 (等于 (.禁止, 假))
    赋值 (.禁止, 真)
    赋值 (.禁止, 真)
     ' 媒体播放按钮.禁止 ＝ 真
.否则
    
.如果结束


.子程序 _材料文本窗口_尺寸被改变, 空白型, , 
赋值 (., 相减 (材料文本窗口., 6))
赋值 (., 相减 (材料文本窗口., 63))
 ' 打开图片按钮.宽度 ＝ 文本编辑框.宽度
 ' 打开图片按钮.顶边 ＝ 文本编辑框.顶边 ＋ 文本编辑框.高度 ＋ 1
连续赋值 (相加 (., ., 1), .顶边, .顶边, .顶边)

.子程序 _打开图片按钮_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.可视, 真)

.子程序 _文本编辑框_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.可视, 假)


.子程序 _材料文本窗口_将被销毁, 空白型, , 
 ' 写出文本 (文件号, 文本编辑框.内容)
 ' .如果 (或者 (等于 (出题窗口..内容, “简答”), 等于 (出题窗口..内容, “论述”)))
     ' .如果 (等于 (问题编辑框内容, 出题窗口..内容))
         ' _保存文本按钮_被单击 ()
    .否则
        
    .如果结束
    
    
    
.否则
    
.如果结束
.如果 (等于 (.标题, “停止播放”))
    停止播放 ()
.否则
    
.如果结束

赋值 (材料文本窗口被打开, 假)



.子程序 _保存文本按钮_被单击, 空白型, , 
.局部变量 文件号1, 整数型, , , 
.局部变量 材料文本路径2, 文本型, , , 
.局部变量 材料文件名, 文本型, , , 

.如果 (等于 (窗口加大, 假))
    .如果 (等于 (出题窗口., #出题模式))
        .如果 (等于 (出题窗口..内容, “材料分析”))
            到首记录 ()
            查找 (等于 (读 (#题目序号), 到整数 (出题窗口..内容)))
            创建目录 (题库路径)
            .如果 (并且 (不等于 (读 (#材料文本), “”), 不等于 (读 (#材料文本), “.txt”), 不等于 (读 (#材料文本), “.TXT”)))
                .如果 (等于 (寻找文本 (读 (#材料文本), “\”, , 假), -1))
                    赋值 (材料文本路径2, 相加 (题库路径, “\”, 读 (#材料文本)))
                    赋值 (材料文件名, 取文本左边 (读 (#材料文本), 相减 (取文本长度 (读 (#材料文本)), 4)))
                    
                     ' 文件号1 ＝ 打开文件 (题库路径 ＋ “\” ＋ 读 (#材料文本), #重写, )
                .否则
                    赋值 (材料文本路径2, 读 (#材料文本))
                    赋值 (材料文件名, 文本替换 (材料文本路径2, 1, 取文本长度 (相加 (题库路径, “\”)), ))
                    赋值 (材料文件名, 取文本左边 (材料文本路径2, 相减 (取文本长度 (材料文本路径2), 4)))
                     ' 文件号1 ＝ 打开文件 (读 (#材料文本), #重写, )
                .如果结束
                赋值 (文件号1, 打开文件 (材料文本路径2, #重写, ))
            .否则
                
                赋值 (材料文件名, 取文本左边 (出题窗口..内容, 12))
                赋值 (材料文本路径2, 相加 (题库路径, “\”, 材料文件名, “.txt”))
                赋值 (文件号1, 打开文件 (材料文本路径2, #重写, ))
                
            .如果结束
            调试输出 (相加 (“出题窗口：”, 出题窗口..内容, “  ”, 材料文件名, “===”, 材料文本路径2))
            
            .如果 (等于 (写出文本 (文件号1, .), 真))
                写 (#材料文本, 相加 (材料文件名, “.txt”))
                信息框 (相加 (“材料文本：[”, 材料文件名, “.txt]”, “已成功保存！”), 0, )
            .否则
                信息框 (“材料文本保存失败！”, 0, )
            .如果结束
            关闭文件 (文件号1)
            
        .否则
            
        .如果结束
        
    .否则
        .如果 (并且 (等于 (出题窗口., #考试模式), 不等于 (出题窗口..内容, “材料分析”)))
            赋值 (文件号1, 打开文件 (相加 (题库路径, “\”, 取文本左边 (出题窗口..内容, 10), “.txt”), #重写, ))
            .如果 (等于 (文件号1, 0))
                信息框 (“打开文件失败！”, 0, )
            .否则
                .如果 (等于 (写出文本 (文件号1, .), 真))
                    信息框 (相加 (“问题 [”, 出题窗口..内容, “] 的答案已成功保存在 [”, 题库路径, “] 目录中！”), 0, )
                    
                .否则
                    信息框 (相加 (“问题 [”, 出题窗口..内容, “] 的答案保存失败！”, #换行符, “原因也许是所提问题中含有不能作文件名的字符。但如果您的答案不超过256个汉字或512个半角字母数字，则不用担心。”), 0, “保存答案失败”)
                .如果结束
                关闭文件 (文件号1)
                销毁 ()
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .如果结束
    
.否则
    赋值 (文件号1, 打开文件 (相加 (题库路径, “\”, 取文本左边 (考试窗口..内容, 10), “.txt”), #重写, ))
    .如果 (等于 (写出文本 (文件号1, .), 真))
        信息框 (相加 (“问题 [”, 考试窗口..内容, “] 的答案已成功保存在 [”, 题库路径, “] 目录中！”), 0, “保存答案成功”)
    .否则
        信息框 (相加 (“问题 [”, 考试窗口..内容, “] 的答案保存未成功！但如果您的答案不超过256个汉字或512个半角字母，则不用担心。”, #换行符, “原因也许是所提问题中含有不能作文件名的字符。”), 0, “保存答案失败”)
    .如果结束
    关闭文件 (文件号1)
    销毁 ()
    
.如果结束

关闭文件 (文件号1)
输出调试文本 (相加 (“文件号1：”, 到文本 (文件号1)))

.子程序 _媒体播放按钮_被单击, 空白型, , 
.局部变量 变量1, 逻辑型, , , 


.如果 (等于 (播放mp3状态, 假))
    
    播放MP3 (1, .)
    赋值 (.标题, “停止播放”)
    赋值 (播放mp3状态, 取反 (播放mp3状态))
     ' 播放器1.可视 ＝ 真
     ' 播放器1.地址 ＝ 文本编辑框.内容
.否则
     ' 播放器1.可视 ＝ 假
     ' 播放器1.关闭 ()
    停止播放 ()
    赋值 (.标题, “媒体播放”)
    赋值 (播放mp3状态, 取反 (播放mp3状态))
.如果结束


 ' 播放音乐 (文本编辑框.内容, )


.子程序 _材料文本窗口_被激活, 空白型, , 
.如果 (等于 (窗口加大, 假))
    .如果 (等于 (出题窗口., “考试模式”))
        赋值 (.时钟周期, 1000)
        赋值 (进度条位置, 出题窗口..位置)
    .否则
        
    .如果结束
    
.否则
    .如果 (等于 (考试窗口., “考试模式”))
        赋值 (.时钟周期, 1000)
        赋值 (进度条位置, 考试窗口..位置)
    .否则
        
    .如果结束
    
.如果结束

 ' 出题窗口.本题时间进度条.禁止 ＝ 真


.子程序 _材料文本窗口_被取消激活, 空白型, , 
.如果 (等于 (窗口加大, 假))
    .如果 (等于 (出题窗口., “考试模式”))
        赋值 (.时钟周期, 0)
    .否则
        
    .如果结束
    
.否则
    .如果 (等于 (考试窗口., “考试模式”))
        赋值 (.时钟周期, 0)
    .否则
        
    .如果结束
    
.如果结束





 ' 出题窗口.本题时间进度条.位置 ＝ 进度条位置
 ' 出题窗口.本题时间进度条.禁止 ＝ 假


.子程序 _时钟1_周期事件, 空白型, , 
.如果 (等于 (窗口加大, 假))
    .如果 (等于 (出题窗口., “考试模式”))
        赋值 (出题窗口..位置, 进度条位置)
    .否则
        
    .如果结束
    
    
.否则
    .如果 (等于 (考试窗口., “考试模式”))
        赋值 (考试窗口..位置, 进度条位置)
    .否则
        
    .如果结束
    
    
.如果结束




.子程序 _文本编辑框_内容被改变, 空白型, , 
.如果 (等于 (窗口加大, 假))
    .如果 (等于 (出题窗口., “考试模式”))
        .如果 (或者 (等于 (出题窗口..内容, “简答”), 等于 (出题窗口..内容, “论述”)))
            赋值 (出题窗口..内容, .)
            .如果 (大于 (取文本长度 (.), 512))
                赋值 (.禁止, 假)
            .否则
                赋值 (.禁止, 真)
            .如果结束
            
            
        .否则
            
        .如果结束
        
    .否则
        
    .如果结束
    
.否则
    .如果 (等于 (考试窗口., “考试模式”))
        .如果 (或者 (等于 (考试窗口..内容, “简答”), 等于 (考试窗口..内容, “论述”)))
            赋值 (考试窗口..内容, .)
            .如果 (大于 (取文本长度 (.), 512))
                赋值 (.禁止, 假)
            .否则
                赋值 (.禁止, 真)
            .如果结束
            
            
        .否则
            
        .如果结束
        
    .否则
        
    .如果结束
    
.如果结束



.子程序 _材料文本窗口_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

 ' .如果 (等于 (.可视, 真))
     ' .如果 (等于 (键代码, #空格键))
         ' 载入 (图片显示窗口, , 真)
        
    .否则
        
    .如果结束
    
    
.否则
    
.如果结束


.子程序 _打开图片按钮_被单击, 空白型, , 
.如果 (或者 (等于 (文件是否存在 (材料文本窗口..), 真), 等于 (材料文本窗口..可视, 真)))
    载入 (图片显示窗口, , 假)
    
.否则
    
.如果结束



.子程序 _图片框1_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果 (或者 (等于 (文件是否存在 (材料文本窗口..), 真), 等于 (材料文本窗口..可视, 真)))
    载入 (图片显示窗口, , 假)
    
.否则
    
.如果结束


.窗口程序集 考试结果统计窗口程序集, , , 

.程序集变量 本次聪明分, 整数型, , , 
.程序集变量 科目名称, 文本型, , , 
.子程序 _考试结果统计窗口_创建完毕, 空白型, , 
.局部变量 正确数, 整数型, , , 
.局部变量 错误数, 整数型, , , 
.局部变量 完成数, 整数型, , , 
.局部变量 总分值, 整数型, , , 
.局部变量 完成分, 整数型, , , 
.局部变量 未完分, 整数型, , , 
.局部变量 正确分, 整数型, , , 
.局部变量 正确题时间, 整数型, , , 
.局部变量 所用时间, 整数型, , , 
.局部变量 聪明分, 整数型, , , 
.局部变量 记次变量, 整数型, , , 
.局部变量 考试题库, 文本型, , , 
.局部变量 成绩记录库, 文本型, , , 
.局部变量 文件号1, 整数型, , , 

.如果 (等于 (是否已打开 (题库), 假))
    打开 (题库, , , , , , )
.否则
    置当前库 (题库)
.如果结束
赋值 (正确数, 0)
赋值 (错误数, 0)
赋值 (完成数, 0)
赋值 (总分值, 0)
赋值 (完成分, 0)
赋值 (未完分, 0)
赋值 (正确分, 0)
赋值 (正确题时间, 0)
赋值 (所用时间, 0)
赋值 (聪明分, 0)
赋值 (本次聪明分, 0)
 ' 上次聪明分 ＝ 0
赋值 (分数, 0)
赋值 (总时间, 0)
赋值 (考试结果统计窗口., 题库)

到首记录 ()
.计次循环首 (取记录数 (), )
    .如果 (并且 (不等于 (读 (#用户答案), 读 (#答案)), 不等于 (读 (#用户答案), “”)))
        .如果 (并且 (小于或等于 (读 (#选项), 2), 等于 (读 (#抽题标记), “错”)))
             ' .如果 (并且 (或者 (等于 (读 (#题目类型), “名词解释”), 等于 (读 (#题目类型), “材料分析”), 等于 (读 (#题目类型), “填空”), 等于 (读 (#题目类型), “辨析”), 等于 (读 (#题目类型), “简答”), 等于 (读 (#题目类型), “论述”)), 等于 (读 (#抽题标记), “错”)))
                
            .否则
                
            .如果结束
            
            
            .如果 (或者 (等于 (读 (#题目类型), “简答”), 等于 (读 (#题目类型), “论述”), 等于 (读 (#题目类型), “材料分析”)))
                .如果 (等于 (文件是否存在 (相加 (题库路径, “\”, 取文本左边 (读 (#问题), 10), “.txt”)), 真))
                    赋值 (文件号1, 打开文件 (相加 (题库路径, “\”, 取文本左边 (读 (#问题), 10), “.txt”), , ))
                    赋值 (全局用户答案, 读入文本 (文件号1, ))
                    关闭文件 (文件号1)
                    
                .否则
                    赋值 (全局用户答案, 读 (#用户答案))
                .如果结束
                
                .如果 (等于 (文件是否存在 (相加 (题库路径, “\”, 取文本左边 (读 (#问题), 10), “答案.txt”)), 真))
                    赋值 (文件号1, 打开文件 (相加 (题库路径, “\”, 取文本左边 (读 (#问题), 10), “答案.txt”), , ))
                    赋值 (全局标准答案, 读入文本 (文件号1, ))
                    关闭文件 (文件号1)
                    
                .否则
                    赋值 (全局标准答案, 读 (#答案))
                .如果结束
                
                
                
            .否则
                赋值 (全局用户答案, 读 (#用户答案))
                赋值 (全局标准答案, 读 (#答案))
            .如果结束
            
            赋值 (输入框提示信息, 相加 (“[满    分]：[”, 到文本 (读 (#分值)), “]，请手动打分。”, #换行符, “----------------------------------”, #换行符, “[问    题]：”, 读 (#问题)))
             ' 输入框提示信息 ＝ “[满    分]：[” ＋ 到文本 (读 (#分值)) ＋ “]，请手动打分。” ＋ #换行符 ＋ “----------------------------------” ＋ #换行符 ＋ “[问    题]：” ＋ 读 (#问题) ＋ #换行符 ＋ “[标准答案]：” ＋ 读 (#答案) ＋ #换行符 ＋ “[您的回答]：” ＋ 用户答案
            赋值 (初始文本, 到文本 (读 (#分值)))
            载入 (自创输入框窗口, , 真)
            
            
            .如果 (大于 (该题得分, 0))
                写 (#得分, 到数值 (该题得分))
                
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
         ' 写 (#用户答案, “”)
    .否则
        
    .如果结束
    跳过 ()
.计次循环尾 ()




到首记录 ()
.计次循环首 (取记录数 (), )
    赋值 (科目名称, 读 (#科目名称))
    .如果 (不等于 (读 (#用户答案), “”))
        赋值 (完成数, 相加 (完成数, 1))
        
    .否则
        
    .如果结束
    跳过 ()
.计次循环尾 ()


到首记录 ()
.计次循环首 (取记录数 (), )
    .如果 (等于 (读 (#用户答案), 读 (#答案)))
         ' .如果 (写 (#抽题标记, “对”))
             ' ' 信息框 (读 (#抽题标记), 0, )
        .否则
             ' 信息框 (读 (#抽题标记), 0, )
        .如果结束
        
        写 (#抽题标记, “对”)
        写 (#得分, 读 (#分值))
        赋值 (正确数, 相加 (正确数, 1))
        赋值 (分数, 相加 (分数, 读 (#得分)))
         ' 写 (#用户答案, “”)
    .否则
        
    .如果结束
    跳过 ()
.计次循环尾 ()

清空 ()
 ' 总时间 ＝ 0
到首记录 ()
.计次循环首 (取记录数 (), )
    .如果 (不等于 (读 (#用户答案), 读 (#答案)))
        
         ' 信息框 (“[” ＋ 读 (#用户答案) ＋ “][” ＋ 读 (#答案) ＋ “]”, 0, )
        
        .如果 (大于 (读 (#得分), 0))
            赋值 (分数, 相加 (分数, 读 (#得分)))
            
            .如果 (大于或等于 (相除 (到数值 (读 (#得分)), 到数值 (读 (#分值))), 0.6))
                写 (#抽题标记, “对”)
                赋值 (正确数, 相加 (正确数, 1))
            .否则
                写 (#抽题标记, “错”)
                赋值 (错误数, 相加 (错误数, 1))
            .如果结束
            
            
        .否则
            赋值 (错误数, 相加 (错误数, 1))
             ' .如果 (并且 (或者 (等于 (读 (#题目类型), “名词解释”), 等于 (读 (#题目类型), “材料分析”), 等于 (读 (#题目类型), “辨析”), 等于 (读 (#题目类型), “简答”), 等于 (读 (#题目类型), “论述”)), 等于 (读 (#抽题标记), “错”)))
                 ' ' 题目组合框.加入项目 (到文本 (读 (#题目序号)), )
            .否则
                
            .如果结束
            
        .如果结束
         ' 写 (#用户答案, “”)
    .否则
        
    .如果结束
    跳过 ()
.计次循环尾 ()

.如果 (大于 (取项目数 (), 0))
    赋值 (.内容, 0.取项目文本 ())
    _题目组合框_列表项被选择 ()
    
.否则
    赋值 (.内容, “恭喜您，完成正确！”)
.如果结束

赋值 (考试结果统计窗口., 相加 (“考试结果统计窗口 - 第[ ”, 到文本 (考试次数), “]次”))
赋值 (.内容, 到文本 (取记录数 ()))
赋值 (.内容, 到文本 (完成数))
赋值 (.内容, 到文本 (相减 (到整数 (.内容), 到整数 (.内容))))
赋值 (.内容, 到文本 (提前时间))

赋值 (.内容, 到文本 (正确数))
赋值 (.内容, 到文本 (错误数))
赋值 (.内容, 到文本 (取整 (相乘 (相除 (正确数, 到整数 (.内容)), 100))))

 ' 总时间 ＝ 0
到首记录 ()
.计次循环首 (取记录数 (), )
    赋值 (总分值, 相加 (总分值, 读 (#分值)))
    赋值 (总时间, 相加 (总时间, 读 (#时间)))
     ' 完成分 ＝ 完成分 ＋ 1
     ' 未完分 ＝ 未完分 ＋ 1
     ' 正确分 ＝ 正确分 ＋ 1
     ' 错误分 ＝ 错误分 ＋ 1
    .如果 (不等于 (读 (#用户答案), “”))
        赋值 (完成分, 相加 (完成分, 读 (#分值)))
    .否则
        
    .如果结束
    .如果 (等于 (读 (#抽题标记), “对”))
        赋值 (正确题时间, 相加 (正确题时间, 读 (#时间)))
        
    .否则
        
    .如果结束
    跳过 ()
.计次循环尾 ()
赋值 (.内容, 到文本 (总时间))
赋值 (.内容, 到文本 (总分值))
赋值 (.内容, 到文本 (完成分))
赋值 (.内容, 到文本 (相减 (总分值, 完成分)))

赋值 (.内容, 到文本 (分数))
赋值 (.内容, 到文本 (相减 (总分值, 分数)))
赋值 (.内容, 到文本 (相乘 (相除 (分数, 总分值), 100)))

赋值 (所用时间, 相减 (总时间, 提前时间))
 ' 信息框 (到文本 (总时间) ＋ “  ” ＋ 到文本 (提前时间) ＋ “  ” ＋ 到文本 (所用时间), 0, )
赋值 (本次聪明分, 取整 (相除 (到整数 (.内容), 相除 (所用时间, 正确题时间), 考试次数)))
赋值 (.内容, 到文本 (本次聪明分))
赋值 (总聪明分, 相加 (总聪明分, 本次聪明分))
 ' 信息框 (到文本 (总聪明分), 0, “总聪明分”)
 ' 上次聪明分 ＝ 本次聪明分
加入成员 (聪明分历史数据, 总聪明分)
清空 ()
.计次循环首 (取数组成员数 (聪明分历史数据), 记次变量)
    到文本 (聪明分历史数据 [记次变量]).加入项目 ()
.计次循环尾 ()
 ' 聪明分组合框.加入项目 (到文本 (总聪明分), )
赋值 (.内容, 到文本 (总聪明分))

赋值 (.内容, “错误题”)
_题目类别组合框_列表项被选择 ()
_题目组合框_列表项被选择 ()
赋值 (.标题, 到文本 (取项目数 ()))


.如果 (等于 (错误数, 0))
    赋值 (.禁止, 真)
.否则
    
.如果结束

赋值 (成绩记录库, 相加 (取运行目录 (), “\”, 考生姓名, “\成绩记录.edb”)) ' =================记录成绩

.如果 (等于 (考试次数, 1))
    .如果 (等于 (是否已打开 (成绩记录库), 假))
        打开 (成绩记录库, #成绩记录, , , , , )
    .否则
        置当前库 (#成绩记录)
    .如果结束
    
    加空记录 ()
    赋值 (考试题库, 取文本右边 (初始打开题库, 相减 (取文本长度 (初始打开题库), 倒找文本 (初始打开题库, “\”, , 假))))
     ' 考试题库 ＝ 取文本右边 (全部重考题库, 取文本长度 (全部重考题库) － 倒找文本 (全部重考题库, “\”, , 假))
    赋值 (考试题库, 取文本左边 (考试题库, 相减 (取文本长度 (考试题库), 4)))
    写 (#考试时间, 取现行时间 ())
    写 (#考试题库, 考试题库)
     ' 输出调试文本 (到文本 (正确分) ＋ “/” ＋ 到文本 (总聪明分))
    写 (#正确分, 到整数 (.内容))
    写 (#聪明分, 总聪明分)
    
    关闭 ()
.否则
    
.如果结束


.子程序 _错题重考按钮_被单击, 空白型, , 
.如果 (等于 (是否已打开 (题库), 假))
    打开 (题库, , , , , , )
.否则
    置当前库 (题库)
.如果结束

赋值 (考试次数, 相加 (考试次数, 1))
到首记录 ()
.计次循环首 (取记录数 (), )
    .如果 (不等于 (读 (#用户答案), “”))
        写 (读 (#用户答案), “”)
    .否则
        
    .如果结束
    跳过 ()
.计次循环尾 ()

到首记录 ()
.计次循环首 (取记录数 (), )
     ' 写 (#抽题标记, “错”)
    写 (#得分, 0)
    跳过 ()
.计次循环尾 ()

选项重新排序 ()
 ' 到首记录 ()
 ' .计次循环首 (取记录数 (), )
     ' 写 (读 (#得分), 0)
     ' 跳过 ()
 ' .计次循环尾 ()

 ' .计次循环首 (取记录数 (), )
     ' 到首记录 ()
     ' .如果 (等于 (查找 (不等于 (读 (#用户答案), “错”)), 真))
         ' 删除 ()
         ' 彻底删除 ()
    .否则
        
    .如果结束
    
 ' .计次循环尾 ()
复制记录 (相加 (取运行目录 (), “\”, 考生姓名, “\复考题库1.edb”), 等于 (读 (#抽题标记), “错”), )
关闭 ()
删除文件 (相加 (取运行目录 (), “\”, 考生姓名, “\复考题库.edb”))
文件更名 (相加 (取运行目录 (), “\”, 考生姓名, “\复考题库1.edb”), 相加 (取运行目录 (), “\”, 考生姓名, “\复考题库.edb”))
 ' 手工改卷 ＝ 假
 ' 上次聪明分 ＝ 0
.如果 (等于 (窗口加大, 假))
    载入 (出题窗口, , 假)
.否则
    载入 (考试窗口, , 假)
.如果结束

销毁 ()


.子程序 _题目组合框_列表项被选择, 空白型, , 
.如果 (等于 (是否已打开 (题库), 假))
    打开 (题库, , , , , , )
.否则
    置当前库 (题库)
.如果结束


到首记录 ()
.如果 (查找 (等于 (到文本 (读 (#题目序号)), .内容)))
    赋值 (.内容, 显示题目信息 (读 (#选项)))
     ' .如果 (等于 (读 (#题目类型), “名词解释”))
         ' 题目内容编辑框.内容 ＝ “[题目类型]” ＋ “  ” ＋ 读 (#题目类型) ＋ #换行符 ＋ “[预设问题]” ＋ #换行符 ＋ #换行符 ＋ “    ” ＋ 读 (#问题) ＋ #换行符 ＋ #换行符 ＋ “[您的回答]  ” ＋ 读 (#用户答案) ＋ #换行符 ＋ “[正确答案]  ” ＋ 读 (#答案) ＋ #换行符 ＋ “[正误判断]  ” ＋ 读 (#抽题标记) ＋ #换行符 ＋ “[本题得分]  ” ＋ 到文本 (读 (#得分)) ＋ “：” ＋ 到文本 (读 (#分值)) ＋ #换行符 ＋ “[提示信息]  ” ＋ 到文本 (读 (#提示信息))
    .否则
        
    .如果结束
    
    
     ' .如果 (等于 (读 (#题目类型), “单项选择”))
        
         ' 题目内容编辑框.内容 ＝ “[题目类型]” ＋ “  ” ＋ 读 (#题目类型) ＋ #换行符 ＋ “[预设问题]” ＋ #换行符 ＋ #换行符 ＋ “    ” ＋ 读 (#问题) ＋ #换行符 ＋ #换行符 ＋ “[备选项目]” ＋ #换行符 ＋ “    A. ” ＋ 读 (#选择项一) ＋ #换行符 ＋ “    B. ” ＋ 读 (#选择项二) ＋ #换行符 ＋ “    C. ” ＋ 读 (#选择项三) ＋ #换行符 ＋ “    D. ” ＋ 读 (#选择项四) ＋ #换行符 ＋ “[您的回答]  ” ＋ 读 (#用户答案) ＋ #换行符 ＋ “[正确答案]  ” ＋ 读 (#答案) ＋ #换行符 ＋ “[正误判断]  ” ＋ 读 (#抽题标记) ＋ #换行符 ＋ “[本题得分]  ” ＋ 到文本 (读 (#得分)) ＋ “：” ＋ 到文本 (读 (#分值)) ＋ #换行符 ＋ “[提示信息]  ” ＋ 到文本 (读 (#提示信息))
        
    .否则
        
    .如果结束
    
     ' .如果 (等于 (读 (#题目类型), “多项选择”))
         ' 题目内容编辑框.内容 ＝ “[题目类型]” ＋ “  ” ＋ 读 (#题目类型) ＋ #换行符 ＋ “[预设问题]” ＋ #换行符 ＋ #换行符 ＋ “    ” ＋ 读 (#问题) ＋ #换行符 ＋ #换行符 ＋ “[备选项目]” ＋ #换行符 ＋ “    A. ” ＋ 读 (#选择项一) ＋ #换行符 ＋ “    B. ” ＋ 读 (#选择项二) ＋ #换行符 ＋ “    C. ” ＋ 读 (#选择项三) ＋ #换行符 ＋ “    D. ” ＋ 读 (#选择项四) ＋ #换行符 ＋ “    E. ” ＋ 读 (#选择项五) ＋ #换行符 ＋ “[您的回答]  ” ＋ 读 (#用户答案) ＋ #换行符 ＋ “[正确答案]  ” ＋ 读 (#答案) ＋ #换行符 ＋ “[正误判断]  ” ＋ 读 (#抽题标记) ＋ #换行符 ＋ “[本题得分]  ” ＋ 到文本 (读 (#得分)) ＋ “：” ＋ 到文本 (读 (#分值)) ＋ #换行符 ＋ “[提示信息]  ” ＋ 到文本 (读 (#提示信息))
    .否则
        
    .如果结束
    
     ' .如果 (等于 (读 (#题目类型), “材料分析”))
         ' 题目内容编辑框.内容 ＝ “[题目类型]” ＋ “  ” ＋ 读 (#题目类型) ＋ #换行符 ＋ “[预设问题]” ＋ #换行符 ＋ #换行符 ＋ “    ” ＋ 读 (#问题) ＋ #换行符 ＋ #换行符 ＋ “[备选项目]” ＋ #换行符 ＋ “    A. ” ＋ 读 (#选择项一) ＋ #换行符 ＋ “    B. ” ＋ 读 (#选择项二) ＋ #换行符 ＋ “    C. ” ＋ 读 (#选择项三) ＋ #换行符 ＋ “    D. ” ＋ 读 (#选择项四) ＋ #换行符 ＋ “    E. ” ＋ 读 (#选择项五) ＋ #换行符 ＋ “[您的回答]  ” ＋ 读 (#用户答案) ＋ #换行符 ＋ “[正确答案]  ” ＋ 读 (#答案) ＋ #换行符 ＋ “[正误判断]  ” ＋ 读 (#抽题标记) ＋ #换行符 ＋ “[本题得分]  ” ＋ 到文本 (读 (#得分)) ＋ “：” ＋ 到文本 (读 (#分值)) ＋ #换行符 ＋ “[提示信息]  ” ＋ 到文本 (读 (#提示信息))
    .否则
        
    .如果结束
    
     ' .如果 (等于 (读 (#题目类型), “填空”))
         ' 题目内容编辑框.内容 ＝ “[题目类型]” ＋ “  ” ＋ 读 (#题目类型) ＋ #换行符 ＋ #换行符 ＋ “[您的回答]  ” ＋ 读 (#用户答案) ＋ #换行符 ＋ “[正确答案]  ” ＋ 读 (#答案) ＋ #换行符 ＋ “[正误判断]  ” ＋ 读 (#抽题标记) ＋ #换行符 ＋ “[本题得分]  ” ＋ 到文本 (读 (#得分)) ＋ “：” ＋ 到文本 (读 (#分值)) ＋ #换行符 ＋ “[提示信息]  ” ＋ 到文本 (读 (#提示信息))
    .否则
        
    .如果结束
    
     ' .如果 (等于 (读 (#题目类型), “辨析”))
         ' 题目内容编辑框.内容 ＝ “[题目类型]” ＋ “  ” ＋ 读 (#题目类型) ＋ #换行符 ＋ “[预设问题]” ＋ #换行符 ＋ #换行符 ＋ “    ” ＋ 读 (#问题) ＋ #换行符 ＋ #换行符 ＋ “[备选项目]” ＋ #换行符 ＋ “    A. ” ＋ 读 (#选择项一) ＋ #换行符 ＋ “    B. ” ＋ 读 (#选择项二) ＋ #换行符 ＋ “[您的回答]  ” ＋ 读 (#用户答案) ＋ #换行符 ＋ “[正确答案]  ” ＋ 读 (#答案) ＋ #换行符 ＋ “[正误判断]  ” ＋ 读 (#抽题标记) ＋ #换行符 ＋ “[本题得分]  ” ＋ 到文本 (读 (#得分)) ＋ “：” ＋ 到文本 (读 (#分值)) ＋ #换行符 ＋ “[提示信息]  ” ＋ 到文本 (读 (#提示信息))
    .否则
        
    .如果结束
    
     ' .如果 (等于 (读 (#题目类型), “简答”))
         ' 题目内容编辑框.内容 ＝ “[题目类型]” ＋ “  ” ＋ 读 (#题目类型) ＋ #换行符 ＋ “[预设问题]” ＋ #换行符 ＋ #换行符 ＋ “    ” ＋ 读 (#问题) ＋ #换行符 ＋ #换行符 ＋ “[您的回答]  ” ＋ 读 (#用户答案) ＋ #换行符 ＋ “[正确答案]  ” ＋ 读 (#答案) ＋ #换行符 ＋ “[正误判断]  ” ＋ 读 (#抽题标记) ＋ #换行符 ＋ “[本题得分]  ” ＋ 到文本 (读 (#得分)) ＋ “：” ＋ 到文本 (读 (#分值)) ＋ #换行符 ＋ “[提示信息]  ” ＋ 到文本 (读 (#提示信息))
    .否则
        
    .如果结束
    
     ' .如果 (等于 (读 (#题目类型), “论述”))
         ' 题目内容编辑框.内容 ＝ “[题目类型]” ＋ “  ” ＋ 读 (#题目类型) ＋ #换行符 ＋ “[预设问题]” ＋ #换行符 ＋ #换行符 ＋ “    ” ＋ 读 (#问题) ＋ #换行符 ＋ #换行符 ＋ “[您的回答]  ” ＋ 读 (#用户答案) ＋ #换行符 ＋ “[正确答案]  ” ＋ 读 (#答案) ＋ #换行符 ＋ “[正误判断]  ” ＋ 读 (#抽题标记) ＋ #换行符 ＋ “[本题得分]  ” ＋ 到文本 (读 (#得分)) ＋ “：” ＋ 到文本 (读 (#分值)) ＋ #换行符 ＋ “[提示信息]  ” ＋ 到文本 (读 (#提示信息))
    .否则
        
    .如果结束
    
    
    
    
    
    
    
    
    
.否则
    赋值 (.内容, “”)
.如果结束


.如果 (或者 (等于 (读 (#题目类型), “单项选择”), 等于 (读 (#题目类型), “多项选择”), 等于 (读 (#用户答案), “”), 等于 (读 (#用户答案), 读 (#答案))))
    赋值 (.可视, 假)
.否则
    赋值 (.可视, 真)
.如果结束
 ' .如果 (等于 (.内容, “手判题”))
     ' _手工判分按钮_被单击 ()
.否则
    
.如果结束


.子程序 _全部重考按钮_被单击, 空白型, , 
 ' 复制记录 (取运行目录 () ＋ “\复考题库1.edb”, 读 (#抽题标记) ＝ “对”, )
全部关闭 ()
赋值 (总聪明分, 0)
复制文件 (全部重考题库, 题库)
.如果 (等于 (窗口加大, 假))
    载入 (出题窗口, , 假)
.否则
    载入 (考试窗口, , 假)
.如果结束

销毁 ()

.子程序 _手工判分按钮_被单击, 空白型, , 
.局部变量 该题得分1, 文本型, , , 

赋值 (总聪明分, 相减 (总聪明分, 本次聪明分))
 ' 信息框 (到文本 (总聪明分), 0, “总聪明分”)
.如果 (等于 (是否已打开 (题库), 假))
    打开 (题库, , , , , , )
.否则
    
.如果结束
到首记录 ()
.如果 (等于 (查找 (等于 (到文本 (读 (#题目序号)), .内容)), 真))
    .如果 (等于 (输入框 (相加 (“[满分值]:”, 到文本 (读 (#分值)), “分；”, #换行符, “[原得分]:”, 到文本 (读 (#得分)), “分。”, #换行符, “[应得分]:”), “重新判分”, 到文本 (读 (#得分)), 该题得分1, ), 真))
        写 (#得分, 到数值 (该题得分1))
    .否则
        
    .如果结束
    
.否则
    
.如果结束



_考试结果统计窗口_创建完毕 ()




.子程序 _题目类别组合框_列表项被选择, 空白型, , 
.如果 (等于 (是否已打开 (题库), 假))
    打开 (题库, , , , , , )
.否则
    
.如果结束


清空 ()
赋值 (.内容, “”)
到首记录 ()
.如果 (等于 (.内容, “正确题”))
    .计次循环首 (取记录数 (), )
        .如果 (等于 (读 (#抽题标记), “对”))
            到文本 (读 (#题目序号)).加入项目 ()
        .否则
            
        .如果结束
        跳过 ()
    .计次循环尾 ()
    
    
    
.否则
    
.如果结束

.如果 (等于 (.内容, “错误题”))
    .计次循环首 (取记录数 (), )
        .如果 (等于 (读 (#抽题标记), “错”))
            到文本 (读 (#题目序号)).加入项目 ()
        .否则
            
        .如果结束
        跳过 ()
    .计次循环尾 ()
    
    
    
    
.否则
    
.如果结束

.如果 (等于 (.内容, “已做题”))
    .计次循环首 (取记录数 (), )
        .如果 (不等于 (读 (#用户答案), “”))
            到文本 (读 (#题目序号)).加入项目 ()
        .否则
            
        .如果结束
        跳过 ()
    .计次循环尾 ()
    
    
.否则
    
.如果结束

.如果 (等于 (.内容, “未做题”))
    .计次循环首 (取记录数 (), )
        .如果 (等于 (读 (#用户答案), “”))
            到文本 (读 (#题目序号)).加入项目 ()
        .否则
            
        .如果结束
        跳过 ()
    .计次循环尾 ()
    
    
.否则
    
.如果结束

.如果 (等于 (.内容, “文字题”))
    .计次循环首 (取记录数 (), )
        .如果 (或者 (等于 (读 (#题目类型), “名词解释”), 等于 (读 (#题目类型), “材料分析”), 等于 (读 (#题目类型), “填空”), 等于 (读 (#题目类型), “辨析”), 等于 (读 (#题目类型), “简答”), 等于 (读 (#题目类型), “论述”)))
            到文本 (读 (#题目序号)).加入项目 ()
        .否则
            
        .如果结束
        跳过 ()
    .计次循环尾 ()
    
    
.否则
    
.如果结束

.如果 (等于 (.内容, “手判题”))
    .计次循环首 (取记录数 (), )
        .如果 (并且 (或者 (等于 (读 (#题目类型), “名词解释”), 等于 (读 (#题目类型), “材料分析”), 等于 (读 (#题目类型), “填空”), 等于 (读 (#题目类型), “辨析”), 等于 (读 (#题目类型), “简答”), 等于 (读 (#题目类型), “论述”)), 等于 (读 (#抽题标记), “错”)))
            到文本 (读 (#题目序号)).加入项目 ()
        .否则
            
        .如果结束
        跳过 ()
    .计次循环尾 ()
    
    
.否则
    
.如果结束


.如果 (等于 (.内容, “全部题”))
    
    .计次循环首 (取记录数 (), )
        到文本 (读 (#题目序号)).加入项目 (读 (#题目序号))
        跳过 ()
    .计次循环尾 ()
.否则
    
.如果结束

.如果 (等于 (.内容, “解释”))
    .计次循环首 (取记录数 (), )
        .如果 (等于 (读 (#题目类型), “名词解释”))
            到文本 (读 (#题目序号)).加入项目 ()
        .否则
            
        .如果结束
        跳过 ()
    .计次循环尾 ()
    
    
.否则
    
.如果结束
.如果 (等于 (.内容, “单选”))
    .计次循环首 (取记录数 (), )
        .如果 (等于 (读 (#题目类型), “单项选择”))
            到文本 (读 (#题目序号)).加入项目 ()
        .否则
            
        .如果结束
        跳过 ()
    .计次循环尾 ()
    
.否则
    
.如果结束
.如果 (等于 (.内容, “多选”))
    .计次循环首 (取记录数 (), )
        .如果 (等于 (读 (#题目类型), “多项选择”))
            到文本 (读 (#题目序号)).加入项目 ()
        .否则
            
        .如果结束
        跳过 ()
    .计次循环尾 ()
    
.否则
    
.如果结束
.如果 (等于 (.内容, “材料”))
    .计次循环首 (取记录数 (), )
        .如果 (等于 (读 (#题目类型), “材料分析”))
            到文本 (读 (#题目序号)).加入项目 ()
        .否则
            
        .如果结束
        跳过 ()
    .计次循环尾 ()
    
.否则
    
.如果结束
.如果 (等于 (.内容, “填空”))
    .计次循环首 (取记录数 (), )
        .如果 (等于 (读 (#题目类型), “填空”))
            到文本 (读 (#题目序号)).加入项目 ()
        .否则
            
        .如果结束
        跳过 ()
    .计次循环尾 ()
    
.否则
    
.如果结束
.如果 (等于 (.内容, “辨析”))
    .计次循环首 (取记录数 (), )
        .如果 (等于 (读 (#题目类型), “辨析”))
            到文本 (读 (#题目序号)).加入项目 ()
        .否则
            
        .如果结束
        跳过 ()
    .计次循环尾 ()
    
.否则
    
.如果结束
.如果 (等于 (.内容, “简答”))
    .计次循环首 (取记录数 (), )
        .如果 (等于 (读 (#题目类型), “简答”))
            到文本 (读 (#题目序号)).加入项目 ()
        .否则
            
        .如果结束
        跳过 ()
    .计次循环尾 ()
    
.否则
    
    
    
.如果结束
.如果 (等于 (.内容, “论述”))
    .计次循环首 (取记录数 (), )
        .如果 (等于 (读 (#题目类型), “论述”))
            到文本 (读 (#题目序号)).加入项目 ()
        .否则
            
        .如果结束
        跳过 ()
    .计次循环尾 ()
    
.否则
    
.如果结束


赋值 (.现行选中项, 0)
_题目组合框_列表项被选择 ()
赋值 (.标题, 到文本 (取项目数 ()))
.如果 (等于 (.标题, “0”))
    连续赋值 (真, .禁止, .禁止, .禁止, .禁止)
.否则
    连续赋值 (假, .禁止, .禁止, .禁止, .禁止)
.如果结束


.子程序 选项重新排序, 空白型, , 
.局部变量 循环变量, 整数型, , , 
.局部变量 数组序号, 整数型, , , 
.局部变量 循环变量1, 整数型, , , 
.局部变量 选项文本, 文本型, , "10", 
.局部变量 选项数组, 选项, , "0", 
.局部变量 题目数组, 题目, , "0", 
.局部变量 题目成员数, 整数型, , , 
.局部变量 选项成员数, 整数型, , , 
.局部变量 答案文本, 文本型, , , 
.局部变量 循环变量2, 整数型, , , 
.局部变量 临时选项, 选项, , , 
.局部变量 随机数上限, 整数型, , , 
.局部变量 选项数组上限, 整数型, , , 

到首记录 ()
.计次循环首 (取记录数 (), 循环变量)
    赋值 (答案文本, “”)
    .如果 (并且 (大于 (到整数 (读 (#选项)), 2), 不等于 (读 (#题目类型), “填空”)))
        赋值 (题目成员数, 相加 (题目成员数, 1))
        重定义数组 (题目数组, 真, 题目成员数)
        赋值 (选项文本 [1], 读 (#选择项一))
        赋值 (选项文本 [2], 读 (#选择项二))
        赋值 (选项文本 [3], 读 (#选择项三))
        赋值 (选项文本 [4], 读 (#选择项四))
        赋值 (选项文本 [5], 读 (#选择项五))
        赋值 (选项文本 [6], 读 (#选择项六))
        赋值 (选项文本 [7], 读 (#选择项七))
        赋值 (选项文本 [8], 读 (#选择项八))
        赋值 (选项文本 [9], 读 (#选择项九))
        赋值 (选项文本 [10], 读 (#选择项十))
        赋值 (选项数组上限, 到整数 (读 (#选项)))
        
        
        重定义数组 (选项数组, 真, 选项数组上限)
        .计次循环首 (到整数 (读 (#选项)), 循环变量2)
            .如果 (不等于 (寻找文本 (读 (#答案), “A”, , 假), -1))
                 ' 答案文本 ＝ 答案文本 ＋ “A”
                选项数组.选项赋值 ( [1], 选项文本 [循环变量2], 真)
            .否则
                .如果 (大于或等于 (选项数组上限, 1))
                    选项数组.选项赋值 ( [1], 选项文本 [循环变量2], 假)
                .否则
                    
                .如果结束
                
            .如果结束
            .如果 (不等于 (寻找文本 (读 (#答案), “B”, , 假), -1))
                 ' 答案文本 ＝ 答案文本 ＋ “B”
                选项数组.选项赋值 ( [2], 选项文本 [循环变量2], 真)
            .否则
                .如果 (大于或等于 (选项数组上限, 2))
                    选项数组.选项赋值 ( [2], 选项文本 [循环变量2], 假)
                .否则
                    
                .如果结束
                
            .如果结束
            .如果 (不等于 (寻找文本 (读 (#答案), “C”, , 假), -1))
                 ' 答案文本 ＝ 答案文本 ＋ “C”
                选项数组.选项赋值 ( [3], 选项文本 [循环变量2], 真)
            .否则
                .如果 (大于或等于 (选项数组上限, 3))
                    选项数组.选项赋值 ( [3], 选项文本 [循环变量2], 假)
                .否则
                    
                .如果结束
                
            .如果结束
            .如果 (不等于 (寻找文本 (读 (#答案), “D”, , 假), -1))
                 ' 答案文本 ＝ 答案文本 ＋ “D”
                选项数组.选项赋值 ( [4], 选项文本 [循环变量2], 真)
            .否则
                .如果 (大于或等于 (选项数组上限, 4))
                    选项数组.选项赋值 ( [4], 选项文本 [循环变量2], 假)
                .否则
                    
                .如果结束
                
            .如果结束
            .如果 (不等于 (寻找文本 (读 (#答案), “E”, , 假), -1))
                 ' 答案文本 ＝ 答案文本 ＋ “E”
                选项数组.选项赋值 ( [5], 选项文本 [循环变量2], 真)
            .否则
                .如果 (大于或等于 (选项数组上限, 5))
                    选项数组.选项赋值 ( [5], 选项文本 [循环变量2], 假)
                .否则
                    
                .如果结束
                
            .如果结束
            .如果 (不等于 (寻找文本 (读 (#答案), “F”, , 假), -1))
                 ' 答案文本 ＝ 答案文本 ＋ “F”
                选项数组.选项赋值 ( [6], 选项文本 [循环变量2], 真)
            .否则
                .如果 (大于或等于 (选项数组上限, 6))
                    选项数组.选项赋值 ( [6], 选项文本 [循环变量2], 假)
                .否则
                    
                .如果结束
                
            .如果结束
            
            .如果 (不等于 (寻找文本 (读 (#答案), “G”, , 假), -1))
                 ' 答案文本 ＝ 答案文本 ＋ “G”
                选项数组.选项赋值 ( [7], 选项文本 [循环变量2], 真)
            .否则
                .如果 (大于或等于 (选项数组上限, 7))
                    选项数组.选项赋值 ( [7], 选项文本 [循环变量2], 假)
                .否则
                    
                .如果结束
                
            .如果结束
            .如果 (不等于 (寻找文本 (读 (#答案), “H”, , 假), -1))
                 ' 答案文本 ＝ 答案文本 ＋ “H”
                选项数组.选项赋值 ( [8], 选项文本 [循环变量2], 真)
            .否则
                .如果 (大于或等于 (选项数组上限, 8))
                    选项数组.选项赋值 ( [8], 选项文本 [循环变量2], 假)
                .否则
                    
                .如果结束
                
            .如果结束
            
            .如果 (不等于 (寻找文本 (读 (#答案), “I”, , 假), -1))
                 ' 答案文本 ＝ 答案文本 ＋ “I”
                选项数组.选项赋值 ( [9], 选项文本 [循环变量2], 真)
            .否则
                .如果 (大于或等于 (选项数组上限, 9))
                    选项数组.选项赋值 ( [9], 选项文本 [循环变量2], 假)
                .否则
                    
                .如果结束
                
            .如果结束
            .如果 (不等于 (寻找文本 (读 (#答案), “J”, , 假), -1))
                 ' 答案文本 ＝ 答案文本 ＋ “J”
                选项数组.选项赋值 ( [10], 选项文本 [循环变量2], 真)
            .否则
                .如果 (大于或等于 (选项数组上限, 10))
                    选项数组.选项赋值 ( [10], 选项文本 [循环变量2], 假)
                .否则
                    
                .如果结束
                
            .如果结束
            题目数组.选项赋值 ( [题目成员数], 选项 [循环变量2], 选项数组.取选项文本 ( [循环变量2]), 选项数组.取选中结果 ( [循环变量2]))
        .计次循环尾 ()
         ' 题目数组 [题目成员数].答案 ＝ 答案文本
        赋值 (题目数组 [题目成员数], 问题, 读 (#问题))
         ' 信息框 (题目数组 [题目成员数].选项 [1], 0, )
        
         ' ========================================================================删除空白项
        
        置随机数种子 ()
         ' ========================================================================重新排序
        赋值 (随机数上限, 读 (#选项))
         ' 数组序号 ＝ 取随机数 (1, 随机数上限)
         ' 临时选项.选项赋值 (题目数组 [题目成员数].选项 [数组序号].取选项文本 (), 题目数组 [题目成员数].选项 [数组序号].取选中文本 ())
        .判断循环首 (大于 (随机数上限, 1))
            置随机数种子 ()
            赋值 (数组序号, 取随机数 (1, 随机数上限))
            临时选项.选项赋值 (题目数组.取选项文本 ( [题目成员数], 选项 [数组序号]), 题目数组.取选中结果 ( [题目成员数], 选项 [数组序号]))
             ' 交换＝＝＝＝＝
            题目数组.选项赋值 ( [题目成员数], 选项 [数组序号], 题目数组.取选项文本 ( [题目成员数], 选项 [读 (#选项)]), 题目数组.取选中结果 ( [题目成员数], 选项 [读 (#选项)]))
            题目数组.选项赋值 ( [题目成员数], 选项 [读 (#选项)], 临时选项.取选项文本 (), 临时选项.取选中结果 ())
             ' 删除成员 (题目数组 [题目成员数].选项, 数组序号, )
             ' 加入成员 (题目数组 [题目成员数].选项, 临时选项)
            赋值 (随机数上限, 相减 (随机数上限, 1))
             ' 信息框 (到文本 (题目数组 [题目成员数].选项 [1].取选中结果 ()) ＋ #换行符 ＋ 到文本 (题目数组 [题目成员数].选项 [2].取选中结果 ()) ＋ #换行符 ＋ 到文本 (题目数组 [题目成员数].选项 [3].取选中结果 ()) ＋ #换行符 ＋ 到文本 (题目数组 [题目成员数].选项 [4].取选中结果 ()) ＋ #换行符, 0, )
        .判断循环尾 ()
        赋值 (答案文本, “”)
        .如果 (等于 (题目数组.取选中结果 ( [题目成员数], 选项 [1]), 真))
            赋值 (答案文本, 相加 (答案文本, “A”))
        .否则
            
        .如果结束
        .如果 (等于 (题目数组.取选中结果 ( [题目成员数], 选项 [2]), 真))
            赋值 (答案文本, 相加 (答案文本, “B”))
        .否则
            
        .如果结束
        .如果 (等于 (题目数组.取选中结果 ( [题目成员数], 选项 [3]), 真))
            赋值 (答案文本, 相加 (答案文本, “C”))
        .否则
            
        .如果结束
        .如果 (等于 (题目数组.取选中结果 ( [题目成员数], 选项 [4]), 真))
            赋值 (答案文本, 相加 (答案文本, “D”))
        .否则
            
        .如果结束
        .如果 (等于 (题目数组.取选中结果 ( [题目成员数], 选项 [5]), 真))
            赋值 (答案文本, 相加 (答案文本, “E”))
        .否则
            
        .如果结束
        .如果 (等于 (题目数组.取选中结果 ( [题目成员数], 选项 [6]), 真))
            赋值 (答案文本, 相加 (答案文本, “F”))
        .否则
            
        .如果结束
        .如果 (等于 (题目数组.取选中结果 ( [题目成员数], 选项 [7]), 真))
            赋值 (答案文本, 相加 (答案文本, “G”))
        .否则
            
        .如果结束
        .如果 (等于 (题目数组.取选中结果 ( [题目成员数], 选项 [8]), 真))
            赋值 (答案文本, 相加 (答案文本, “H”))
        .否则
            
        .如果结束
        .如果 (等于 (题目数组.取选中结果 ( [题目成员数], 选项 [9]), 真))
            赋值 (答案文本, 相加 (答案文本, “I”))
        .否则
            
        .如果结束
        .如果 (等于 (题目数组.取选中结果 ( [题目成员数], 选项 [10]), 真))
            赋值 (答案文本, 相加 (答案文本, “J”))
        .否则
            
        .如果结束
        赋值 (题目数组 [题目成员数], 答案, 答案文本)
        
        
        写 (#选择项一, 题目数组.取选项文本 ( [题目成员数], 选项 [1]))
        写 (#选择项二, 题目数组.取选项文本 ( [题目成员数], 选项 [2]))
        写 (#选择项三, 题目数组.取选项文本 ( [题目成员数], 选项 [3]))
        写 (#选择项四, 题目数组.取选项文本 ( [题目成员数], 选项 [4]))
        写 (#选择项五, 题目数组.取选项文本 ( [题目成员数], 选项 [5]))
        写 (#选择项六, 题目数组.取选项文本 ( [题目成员数], 选项 [6]))
        写 (#选择项七, 题目数组.取选项文本 ( [题目成员数], 选项 [7]))
        写 (#选择项八, 题目数组.取选项文本 ( [题目成员数], 选项 [8]))
        写 (#选择项九, 题目数组.取选项文本 ( [题目成员数], 选项 [9]))
        写 (#选择项十, 题目数组.取选项文本 ( [题目成员数], 选项 [10]))
        写 (#答案, 题目数组 [题目成员数], 答案)
        
        
    .否则
        
    .如果结束
    
    
    跳过 ()
.计次循环尾 ()



.子程序 _按钮1_被单击, 空白型, , 
赋值 (.内容, 0.取项目文本 ())
_题目组合框_列表项被选择 ()

.子程序 _按钮2_被单击, 空白型, , 
 ' .如果 (大于或等于 (到整数 (.内容), 2))
     ' 题目组合框.内容 ＝ 到文本 (到整数 (题目组合框.内容) － 1)
.否则
    
.如果结束
.如果 (大于或等于 (.现行选中项, 1))
    赋值 (.现行选中项, 相减 (.现行选中项, 1))
.否则
    
.如果结束
赋值 (.内容, .取项目文本 (.现行选中项))
_题目组合框_列表项被选择 ()


.子程序 _按钮3_被单击, 空白型, , 
 ' .如果 (小于 (到整数 (.内容), 取项目数 ()))
     ' 题目组合框.内容 ＝ 到文本 (到整数 (题目组合框.内容) ＋ 1)
.否则
    
.如果结束
.如果 (小于 (.现行选中项, 相减 (取项目数 (), 1)))
    赋值 (.现行选中项, 相加 (.现行选中项, 1))
.否则
    
.如果结束
赋值 (.内容, .取项目文本 (.现行选中项))

_题目组合框_列表项被选择 ()


.子程序 _按钮4_被单击, 空白型, , 
赋值 (.内容, 相减 (取项目数 (), 1).取项目文本 ())
_题目组合框_列表项被选择 ()


.子程序 _考试结果统计窗口_将被销毁, 空白型, , 
.局部变量 文件号1, 整数型, , , 
.局部变量 成绩文本, 文本型, , , 


 ' 文件号1 ＝ 打开文件 (取运行目录 () ＋ “\” ＋ 考生姓名 ＋ “\成绩记录.txt”, #改写, )
 ' 成绩文本 ＝ 读入文本 (文件号1, )
 ' 成绩文本 ＝ 成绩文本 ＋ #换行符 ＋ “[测试时间]：” ＋ 到文本 (取现行时间 ()) ＋ “  [科目名称]：” ＋ 科目名称 ＋ “  [正确比率]：” ＋ 正总分值比率编辑框.内容 ＋ “分  [总聪明分]：” ＋ 到文本 (总聪明分) ＋ “  [第几次测试]：” ＋ 到文本 (考试次数)
 ' 写出文本 (文件号1, 成绩文本)
 ' 关闭文件 (文件号1)



.子程序 显示题目信息, 文本型, , 
.参数 选项数, 整数型, , 



.如果 (等于 (选项数, 0))
    返回 (相加 (“[题目类型]”, “  ”, 读 (#题目类型), #换行符, “===========================================”, #换行符, “[预设问题]”, #换行符, “-------------------------------------------”, #换行符, “    ”, 读 (#问题), #换行符, “===========================================”, #换行符, “[您的回答]  ”, 读 (#用户答案), #换行符, “[正确答案]  ”, 读 (#答案), #换行符, “[正误判断]  ”, 读 (#抽题标记), #换行符, “[本题得分]  ”, 到文本 (读 (#得分)), “：”, 到文本 (读 (#分值)), #换行符, “===========================================”, #换行符, “[提示信息]  ”, 到文本 (读 (#提示信息))))
    
.否则
    .如果 (等于 (选项数, 1))
        返回 (相加 (“[题目类型]”, “  ”, 读 (#题目类型), #换行符, “===========================================”, #换行符, “[预设问题]”, #换行符, “-------------------------------------------”, #换行符, “    ”, 读 (#问题), #换行符, “===========================================”, #换行符, “[备选项目]”, #换行符, “-------------------------------------------”, #换行符, “    A. ”, 读 (#选择项一), #换行符, “===========================================”, #换行符, “[您的回答]  ”, 读 (#用户答案), #换行符, “[正确答案]  ”, 读 (#答案), #换行符, “[正误判断]  ”, 读 (#抽题标记), #换行符, “[本题得分]  ”, 到文本 (读 (#得分)), “：”, 到文本 (读 (#分值)), #换行符, “===========================================”, #换行符, “[提示信息]  ”, 到文本 (读 (#提示信息))))
    .否则
        .如果 (等于 (选项数, 2))
            返回 (相加 (“[题目类型]”, “  ”, 读 (#题目类型), #换行符, “===========================================”, #换行符, “[预设问题]”, #换行符, “-------------------------------------------”, #换行符, “    ”, 读 (#问题), #换行符, “===========================================”, #换行符, “[备选项目]”, #换行符, “-------------------------------------------”, #换行符, “    A. ”, 读 (#选择项一), #换行符, “    B. ”, 读 (#选择项二), #换行符, “===========================================”, #换行符, “[您的回答]  ”, 读 (#用户答案), #换行符, “[正确答案]  ”, 读 (#答案), #换行符, “[正误判断]  ”, 读 (#抽题标记), #换行符, “[本题得分]  ”, 到文本 (读 (#得分)), “：”, 到文本 (读 (#分值)), #换行符, “===========================================”, #换行符, “[提示信息]  ”, 到文本 (读 (#提示信息))))
        .否则
            .如果 (等于 (选项数, 3))
                返回 (相加 (“[题目类型]”, “  ”, 读 (#题目类型), #换行符, “===========================================”, #换行符, “[预设问题]”, #换行符, “-------------------------------------------”, #换行符, “    ”, 读 (#问题), #换行符, “===========================================”, #换行符, “[备选项目]”, #换行符, “-------------------------------------------”, #换行符, “    A. ”, 读 (#选择项一), #换行符, “    B. ”, 读 (#选择项二), #换行符, “    C. ”, 读 (#选择项三), #换行符, “===========================================”, #换行符, “[您的回答]  ”, 读 (#用户答案), #换行符, “[正确答案]  ”, 读 (#答案), #换行符, “[正误判断]  ”, 读 (#抽题标记), #换行符, “[本题得分]  ”, 到文本 (读 (#得分)), “：”, 到文本 (读 (#分值)), #换行符, “===========================================”, #换行符, “[提示信息]  ”, 到文本 (读 (#提示信息))))
            .否则
                .如果 (等于 (选项数, 4))
                    返回 (相加 (“[题目类型]”, “  ”, 读 (#题目类型), #换行符, “===========================================”, #换行符, “[预设问题]”, #换行符, “-------------------------------------------”, #换行符, “    ”, 读 (#问题), #换行符, “===========================================”, #换行符, “[备选项目]”, #换行符, “-------------------------------------------”, #换行符, “    A. ”, 读 (#选择项一), #换行符, “    B. ”, 读 (#选择项二), #换行符, “    C. ”, 读 (#选择项三), #换行符, “    D. ”, 读 (#选择项四), #换行符, “===========================================”, #换行符, “[您的回答]  ”, 读 (#用户答案), #换行符, “[正确答案]  ”, 读 (#答案), #换行符, “[正误判断]  ”, 读 (#抽题标记), #换行符, “[本题得分]  ”, 到文本 (读 (#得分)), “：”, 到文本 (读 (#分值)), #换行符, “===========================================”, #换行符, “[提示信息]  ”, 到文本 (读 (#提示信息))))
                .否则
                    .如果 (等于 (选项数, 5))
                        返回 (相加 (“[题目类型]”, “  ”, 读 (#题目类型), #换行符, “===========================================”, #换行符, “[预设问题]”, #换行符, “-------------------------------------------”, #换行符, “    ”, 读 (#问题), #换行符, “===========================================”, #换行符, “[备选项目]”, #换行符, “-------------------------------------------”, #换行符, “    A. ”, 读 (#选择项一), #换行符, “    B. ”, 读 (#选择项二), #换行符, “    C. ”, 读 (#选择项三), #换行符, “    D. ”, 读 (#选择项四), #换行符, “    E. ”, 读 (#选择项五), #换行符, “===========================================”, #换行符, “[您的回答]  ”, 读 (#用户答案), #换行符, “[正确答案]  ”, 读 (#答案), #换行符, “[正误判断]  ”, 读 (#抽题标记), #换行符, “[本题得分]  ”, 到文本 (读 (#得分)), “：”, 到文本 (读 (#分值)), #换行符, “===========================================”, #换行符, “[提示信息]  ”, 到文本 (读 (#提示信息))))
                    .否则
                        .如果 (等于 (选项数, 6))
                            返回 (相加 (“[题目类型]”, “  ”, 读 (#题目类型), #换行符, “===========================================”, #换行符, “[预设问题]”, #换行符, “-------------------------------------------”, #换行符, “    ”, 读 (#问题), #换行符, “===========================================”, #换行符, “[备选项目]”, #换行符, “-------------------------------------------”, #换行符, “    A. ”, 读 (#选择项一), #换行符, “    B. ”, 读 (#选择项二), #换行符, “    C. ”, 读 (#选择项三), #换行符, “    D. ”, 读 (#选择项四), #换行符, “    E. ”, 读 (#选择项五), #换行符, “    F. ”, 读 (#选择项六), #换行符, “===========================================”, #换行符, “[您的回答]  ”, 读 (#用户答案), #换行符, “[正确答案]  ”, 读 (#答案), #换行符, “[正误判断]  ”, 读 (#抽题标记), #换行符, “[本题得分]  ”, 到文本 (读 (#得分)), “：”, 到文本 (读 (#分值)), #换行符, “===========================================”, #换行符, “[提示信息]  ”, 到文本 (读 (#提示信息))))
                        .否则
                            .如果 (等于 (选项数, 7))
                                返回 (相加 (“[题目类型]”, “  ”, 读 (#题目类型), #换行符, “===========================================”, #换行符, “[预设问题]”, #换行符, “-------------------------------------------”, #换行符, “    ”, 读 (#问题), #换行符, “===========================================”, #换行符, “[备选项目]”, #换行符, “-------------------------------------------”, #换行符, “    A. ”, 读 (#选择项一), #换行符, “    B. ”, 读 (#选择项二), #换行符, “    C. ”, 读 (#选择项三), #换行符, “    D. ”, 读 (#选择项四), #换行符, “    E. ”, 读 (#选择项五), #换行符, “    F. ”, 读 (#选择项六), #换行符, “    G. ”, 读 (#选择项七), #换行符, “===========================================”, #换行符, “[您的回答]  ”, 读 (#用户答案), #换行符, “[正确答案]  ”, 读 (#答案), #换行符, “[正误判断]  ”, 读 (#抽题标记), #换行符, “[本题得分]  ”, 到文本 (读 (#得分)), “：”, 到文本 (读 (#分值)), #换行符, “===========================================”, #换行符, “[提示信息]  ”, 到文本 (读 (#提示信息))))
                            .否则
                                .如果 (等于 (选项数, 8))
                                    返回 (相加 (“[题目类型]”, “  ”, 读 (#题目类型), #换行符, “===========================================”, #换行符, “[预设问题]”, #换行符, “-------------------------------------------”, #换行符, “    ”, 读 (#问题), #换行符, “===========================================”, #换行符, “[备选项目]”, #换行符, “-------------------------------------------”, #换行符, “    A. ”, 读 (#选择项一), #换行符, “    B. ”, 读 (#选择项二), #换行符, “    C. ”, 读 (#选择项三), #换行符, “    D. ”, 读 (#选择项四), #换行符, “    E. ”, 读 (#选择项五), #换行符, “    F. ”, 读 (#选择项六), #换行符, “    G. ”, 读 (#选择项七), #换行符, “    H. ”, 读 (#选择项八), #换行符, “===========================================”, #换行符, “[您的回答]  ”, 读 (#用户答案), #换行符, “[正确答案]  ”, 读 (#答案), #换行符, “[正误判断]  ”, 读 (#抽题标记), #换行符, “[本题得分]  ”, 到文本 (读 (#得分)), “：”, 到文本 (读 (#分值)), #换行符, “===========================================”, #换行符, “[提示信息]  ”, 到文本 (读 (#提示信息))))
                                .否则
                                    .如果 (等于 (选项数, 9))
                                        返回 (相加 (“[题目类型]”, “  ”, 读 (#题目类型), #换行符, “===========================================”, #换行符, “[预设问题]”, #换行符, “-------------------------------------------”, #换行符, “    ”, 读 (#问题), #换行符, “===========================================”, #换行符, “[备选项目]”, #换行符, “-------------------------------------------”, #换行符, “    A. ”, 读 (#选择项一), #换行符, “    B. ”, 读 (#选择项二), #换行符, “    C. ”, 读 (#选择项三), #换行符, “    D. ”, 读 (#选择项四), #换行符, “    E. ”, 读 (#选择项五), #换行符, “    F. ”, 读 (#选择项六), #换行符, “    G. ”, 读 (#选择项七), #换行符, “    H. ”, 读 (#选择项八), #换行符, “    I. ”, 读 (#选择项九), #换行符, “===========================================”, #换行符, “[您的回答]  ”, 读 (#用户答案), #换行符, “[正确答案]  ”, 读 (#答案), #换行符, “[正误判断]  ”, 读 (#抽题标记), #换行符, “[本题得分]  ”, 到文本 (读 (#得分)), “：”, 到文本 (读 (#分值)), #换行符, “===========================================”, #换行符, “[提示信息]  ”, 到文本 (读 (#提示信息))))
                                    .否则
                                        .如果 (等于 (选项数, 10))
                                            返回 (相加 (“[题目类型]”, “  ”, 读 (#题目类型), #换行符, “===========================================”, #换行符, “[预设问题]”, #换行符, “-------------------------------------------”, #换行符, “    ”, 读 (#问题), #换行符, “===========================================”, #换行符, “[备选项目]”, #换行符, “-------------------------------------------”, #换行符, “    A. ”, 读 (#选择项一), #换行符, “    B. ”, 读 (#选择项二), #换行符, “    C. ”, 读 (#选择项三), #换行符, “    D. ”, 读 (#选择项四), #换行符, “    E. ”, 读 (#选择项五), #换行符, “    F. ”, 读 (#选择项六), #换行符, “    G. ”, 读 (#选择项七), #换行符, “    H. ”, 读 (#选择项八), #换行符, “    I. ”, 读 (#选择项九), #换行符, “    J. ”, 读 (#选择项十), #换行符, “===========================================”, #换行符, “[您的回答]  ”, 读 (#用户答案), #换行符, “[正确答案]  ”, 读 (#答案), #换行符, “[正误判断]  ”, 读 (#抽题标记), #换行符, “[本题得分]  ”, 到文本 (读 (#得分)), “：”, 到文本 (读 (#分值)), #换行符, “===========================================”, #换行符, “[提示信息]  ”, 到文本 (读 (#提示信息))))
                                        .否则
                                            返回 (“”)
                                        .如果结束
                                        
                                    .如果结束
                                    
                                .如果结束
                                
                            .如果结束
                            
                        .如果结束
                        
                    .如果结束
                    
                .如果结束
                
            .如果结束
            
        .如果结束
        
    .如果结束
    
.如果结束






.子程序 _历次成绩按钮_被单击, 空白型, , 



载入 (历次成绩窗口, , 真)


.类模块 选项, , , 

.程序集变量 分选项, 文本型, , , 
.程序集变量 选中, 逻辑型, , , 
.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 选项赋值, 空白型, 公开, 
.参数 选项1, 文本型, , 
.参数 选中1, 逻辑型, , 

赋值 (分选项, 选项1)
赋值 (选中, 选中1)


.子程序 取选项文本, 文本型, 公开, 
返回 (分选项)


.子程序 取选中结果, 逻辑型, 公开, 
返回 (选中)

.窗口程序集 窗口程序集1, , , 

.窗口程序集 导出窗口程序集, , , 

.程序集变量 科目名称, 文本型, , , 
.程序集变量 导出题库, 文本型, , , 
.子程序 _导出试卷窗口_创建完毕, 空白型, , 
.局部变量 名词解释分数, 整数型, , , 
.局部变量 单项选择分数, 整数型, , , 
.局部变量 多项选择分数, 整数型, , , 
.局部变量 材料分析分数, 整数型, , , 
.局部变量 填空分数, 整数型, , , 
.局部变量 辨析分数, 整数型, , , 
.局部变量 简答分数, 整数型, , , 
.局部变量 论述分数, 整数型, , , 
.局部变量 循环变量, 整数型, , , 
.局部变量 标准答案, 文本型, , "0", 
.局部变量 文件号1, 整数型, , , 
.局部变量 参考材料文本, 文本型, , , 
.局部变量 参考材料文本路径, 文本型, , , 
.局部变量 大题序号, 整数型, , , 

赋值 (大题序号, 0)
 ' 导出试卷窗口.左边 ＝ 出题窗口.左边 ＋ 出题窗口.宽度
赋值 (导出试卷窗口., 出题窗口.)
赋值 (导出试卷窗口., 出题窗口.)
赋值 (.高度, 相减 (导出试卷窗口., 75))
赋值 (.顶边, 相加 (.高度, 5))
赋值 (.顶边, .顶边)
赋值 (.顶边, .顶边)
赋值 (.顶边, .顶边)
赋值 (.顶边, .顶边)
.如果 (等于 (是否已打开 (题库), 假))
    打开 (题库, , , , , , )
.否则
    
.如果结束
赋值 (导出题库, 取文本右边 (题库, 相减 (取文本长度 (题库), 倒找文本 (题库, “\”, , 假))))

赋值 (导出题库, 取文本左边 (导出题库, 相减 (取文本长度 (导出题库), 4)))


赋值 (.内容, “”)
赋值 (科目名称, 读 (#科目名称))

到首记录 ()
赋值 (.内容, 相加 (“《”, 导出题库, “》”, “试题”, #换行符, #换行符, #换行符, #换行符, #换行符, “学号：____________”, “    姓名：____________”, “    得分：____________”, #换行符, #换行符, #换行符))


.计次循环首 (取记录数 (), )
    .如果 (等于 (读 (#题目类型), #名词解释))
        赋值 (名词解释分数, 相加 (名词解释分数, 读 (#分值)))
    .否则
        
    .如果结束
    .如果 (等于 (读 (#题目类型), #单项选择))
        赋值 (单项选择分数, 相加 (单项选择分数, 读 (#分值)))
    .否则
        
    .如果结束
    .如果 (等于 (读 (#题目类型), #多项选择))
        赋值 (多项选择分数, 相加 (多项选择分数, 读 (#分值)))
    .否则
        
    .如果结束
    .如果 (等于 (读 (#题目类型), #材料分析))
        赋值 (材料分析分数, 相加 (材料分析分数, 读 (#分值)))
    .否则
        
    .如果结束
    .如果 (等于 (读 (#题目类型), #填空))
        赋值 (填空分数, 相加 (填空分数, 读 (#分值)))
    .否则
        
    .如果结束
    .如果 (等于 (读 (#题目类型), #辨析))
        赋值 (辨析分数, 相加 (辨析分数, 读 (#分值)))
    .否则
        
    .如果结束
    .如果 (等于 (读 (#题目类型), #简答))
        赋值 (简答分数, 相加 (简答分数, 读 (#分值)))
    .否则
        
    .如果结束
    .如果 (等于 (读 (#题目类型), #论述))
        赋值 (论述分数, 相加 (论述分数, 读 (#分值)))
    .否则
        
    .如果结束
    
    
    
    跳过 ()
.计次循环尾 ()

 ' =============================================================================生成试题文本
.如果 (等于 (.选中, 真))
    .如果 (大于 (名词解释分数, 0))
        赋值 (大题序号, 相加 (大题序号, 1))
        赋值 (.内容, 相加 (.内容, #换行符))
        赋值 (.内容, 相加 (.内容, 阿拉伯到中文 (到文本 (大题序号)), “、名词解释（每小题 5 分，共 ”, 到文本 (名词解释分数), “ 分）：”, #换行符, #换行符))
        
        到首记录 ()
        .计次循环首 (取记录数 (), )
            .如果 (等于 (读 (#题目类型), #名词解释))
                赋值 (.内容, 相加 (.内容, 到文本 (读 (#题目序号)), “、”, 读 (#问题), “――”, #换行符, #换行符, #换行符, #换行符))
            .否则
                
            .如果结束
            跳过 ()
        .计次循环尾 ()
        
    .否则
        
    .如果结束
    .如果 (大于 (单项选择分数, 0))
        赋值 (大题序号, 相加 (大题序号, 1))
        赋值 (.内容, 相加 (.内容, #换行符))
        赋值 (.内容, 相加 (.内容, 阿拉伯到中文 (到文本 (大题序号)), “、单项选择（每小题1分，共”, 到文本 (单项选择分数), “分）：”, #换行符, #换行符))
        到首记录 ()
        .计次循环首 (取记录数 (), )
            .如果 (等于 (读 (#题目类型), #单项选择))
                 ' 题目文本编辑框.内容 ＝ 题目文本编辑框.内容 ＋ 到文本 (读 (#题目序号)) ＋ “、” ＋ 读 (#问题) ＋ “（  ）” ＋ #换行符 ＋ #换行符 ＋ “  A” ＋ “、” ＋ 读 (#选择项一) ＋ #换行符 ＋ “  B” ＋ “、” ＋ 读 (#选择项二) ＋ #换行符 ＋ “  C” ＋ “、” ＋ 读 (#选择项三) ＋ #换行符 ＋ “  D” ＋ “、” ＋ 读 (#选择项四) ＋ #换行符 ＋ “  E” ＋ “、” ＋ 读 (#选择项五) ＋ #换行符 ＋ #换行符
                有选项题目文本导出 (读 (#选项))
            .否则
                
            .如果结束
            跳过 ()
        .计次循环尾 ()
        
    .否则
        
    .如果结束
    .如果 (大于 (多项选择分数, 0))
        赋值 (大题序号, 相加 (大题序号, 1))
        赋值 (.内容, 相加 (.内容, #换行符))
        
        赋值 (.内容, 相加 (.内容, 阿拉伯到中文 (到文本 (大题序号)), “、多项选择（每小题2分，共”, 到文本 (多项选择分数), “分）：”, #换行符, #换行符))
        到首记录 ()
        .计次循环首 (取记录数 (), )
            .如果 (等于 (读 (#题目类型), #多项选择))
                 ' 题目文本编辑框.内容 ＝ 题目文本编辑框.内容 ＋ 到文本 (读 (#题目序号)) ＋ “、” ＋ 读 (#问题) ＋ “（      ）” ＋ #换行符 ＋ #换行符 ＋ “  A” ＋ “、” ＋ 读 (#选择项一) ＋ #换行符 ＋ “  B” ＋ “、” ＋ 读 (#选择项二) ＋ #换行符 ＋ “  C” ＋ “、” ＋ 读 (#选择项三) ＋ #换行符 ＋ “  D” ＋ “、” ＋ 读 (#选择项四) ＋ #换行符 ＋ “  E” ＋ “、” ＋ 读 (#选择项五) ＋ #换行符 ＋ #换行符
                有选项题目文本导出 (读 (#选项))
            .否则
                
            .如果结束
            跳过 ()
        .计次循环尾 ()
        
    .否则
        
    .如果结束
    .如果 (大于 (材料分析分数, 0))
        赋值 (大题序号, 相加 (大题序号, 1))
        赋值 (.内容, 相加 (.内容, #换行符))
        赋值 (.内容, 相加 (.内容, 阿拉伯到中文 (到文本 (大题序号)), “、材料分析（每小题5分，共”, 到文本 (材料分析分数), “分）：”, #换行符, #换行符))
        
        到首记录 ()
        .计次循环首 (取记录数 (), )
            .如果 (等于 (读 (#题目类型), #材料分析))
                .如果 (不等于 (参考材料文本路径, 相加 (题库路径, “\”, 读 (#材料文本))))
                    .如果 (等于 (取文本右边 (相加 (题库路径, “\”, 读 (#材料文本)), 3), “txt”))
                        赋值 (文件号1, 打开文件 (相加 (题库路径, “\”, 读 (#材料文本)), , ))
                        赋值 (参考材料文本, 相加 (“参考材料：”, #换行符, 读入文本 (文件号1, )))
                        关闭文件 (文件号1)
                        
                    .否则
                        赋值 (参考材料文本, 相加 (“参考材料：”, #换行符, “[ ”, 题库路径, “\”, 读 (#材料文本), “ ] ”))
                    .如果结束
                    
                    .如果 (不等于 (参考材料文本, “”))
                        赋值 (.内容, 相加 (.内容, 参考材料文本, #换行符, #换行符))
                    .否则
                        
                    .如果结束
                    
                    
                    赋值 (参考材料文本路径, 相加 (题库路径, “\”, 读 (#材料文本)))
                .否则
                    
                .如果结束
                
                 ' 题目文本编辑框.内容 ＝ 题目文本编辑框.内容 ＋ 到文本 (读 (#题目序号)) ＋ “、” ＋ 读 (#问题) ＋ “（      ）” ＋ #换行符 ＋ #换行符 ＋ “  A” ＋ “、” ＋ 读 (#选择项一) ＋ #换行符 ＋ “  B” ＋ “、” ＋ 读 (#选择项二) ＋ #换行符 ＋ “  C” ＋ “、” ＋ 读 (#选择项三) ＋ #换行符 ＋ “  D” ＋ “、” ＋ 读 (#选择项四) ＋ #换行符 ＋ “  E” ＋ “、” ＋ 读 (#选择项五) ＋ #换行符 ＋ #换行符
                有选项题目文本导出 (读 (#选项))
            .否则
                
            .如果结束
            
            跳过 ()
        .计次循环尾 ()
        
    .否则
        
    .如果结束
    .如果 (大于 (填空分数, 0))
        赋值 (大题序号, 相加 (大题序号, 1))
        赋值 (.内容, 相加 (.内容, #换行符))
        赋值 (.内容, 相加 (.内容, 阿拉伯到中文 (到文本 (大题序号)), “、填空题（每空1分，共”, 到文本 (填空分数), “分）：”, #换行符, #换行符))
        到首记录 ()
        .计次循环首 (取记录数 (), )
            .如果 (等于 (读 (#题目类型), #填空))
                有选项题目文本导出 (读 (#选项))
            .否则
                
            .如果结束
            跳过 ()
        .计次循环尾 ()
        
    .否则
        
    .如果结束
    .如果 (大于 (辨析分数, 0))
        赋值 (大题序号, 相加 (大题序号, 1))
        赋值 (.内容, 相加 (.内容, #换行符))
        赋值 (.内容, 相加 (.内容, 阿拉伯到中文 (到文本 (大题序号)), “、辨析题（每小题3分，共”, 到文本 (辨析分数), “分）：”, #换行符, #换行符))
        到首记录 ()
        .计次循环首 (取记录数 (), )
            .如果 (等于 (读 (#题目类型), #辨析))
                赋值 (.内容, 相加 (.内容, 到文本 (读 (#题目序号)), “、”, 读 (#问题), #换行符, #换行符, “  A”, “、”, 读 (#选择项一), “ [   ]________________________”, #换行符, “  B”, “、”, 读 (#选择项二), “ [   ]________________________”, #换行符, #换行符))
            .否则
                
            .如果结束
            跳过 ()
        .计次循环尾 ()
        
    .否则
        
    .如果结束
    .如果 (大于 (简答分数, 0))
        赋值 (大题序号, 相加 (大题序号, 1))
        赋值 (.内容, 相加 (.内容, #换行符))
        赋值 (.内容, 相加 (.内容, 阿拉伯到中文 (到文本 (大题序号)), “、简答题（每小题10分，共”, 到文本 (简答分数), “分）：”, #换行符, #换行符))
        到首记录 ()
        .计次循环首 (取记录数 (), )
            .如果 (等于 (读 (#题目类型), #简答))
                赋值 (.内容, 相加 (.内容, 到文本 (读 (#题目序号)), “、”, 读 (#问题), #换行符, #换行符, #换行符, #换行符, #换行符, #换行符))
            .否则
                
            .如果结束
            跳过 ()
        .计次循环尾 ()
        
    .否则
        
    .如果结束
    .如果 (大于 (论述分数, 0))
        赋值 (大题序号, 相加 (大题序号, 1))
        赋值 (.内容, 相加 (.内容, #换行符))
        赋值 (.内容, 相加 (.内容, 阿拉伯到中文 (到文本 (大题序号)), “、论述题（每小题20分，共”, 到文本 (论述分数), “分）：”, #换行符, #换行符))
        到首记录 ()
        .计次循环首 (取记录数 (), )
            .如果 (等于 (读 (#题目类型), #论述))
                赋值 (.内容, 相加 (.内容, 到文本 (读 (#题目序号)), “、”, 读 (#问题), #换行符, #换行符, #换行符, #换行符, #换行符, #换行符, #换行符, #换行符, #换行符, #换行符, #换行符))
            .否则
                
            .如果结束
            跳过 ()
        .计次循环尾 ()
        
        
    .否则
        
    .如果结束
    
    
    赋值 (.内容, 相加 (.内容, #换行符, #换行符, “参考答案：”, #换行符, #换行符))
    重定义数组 (标准答案, 假, 取记录数 ())
    到首记录 ()
    .计次循环首 (取记录数 (), )
        
        .如果 (等于 (文件是否存在 (相加 (题库路径, “\”, 取文本左边 (读 (#问题), 10), “答案.txt”)), 真))
            赋值 (文件号1, 打开文件 (相加 (题库路径, “\”, 取文本左边 (读 (#问题), 10), “答案.txt”), , ))
            赋值 (标准答案 [读 (#题目序号)], 读入文本 (文件号1, ))
            关闭文件 (文件号1)
            
        .否则
            赋值 (标准答案 [读 (#题目序号)], 读 (#答案))
        .如果结束
        
        跳过 ()
    .计次循环尾 ()
    .计次循环首 (取数组成员数 (标准答案), 循环变量)
        .计次循环首 (5, )
            .如果 (等于 (求余数 (循环变量, 5), 0))
                赋值 (标准答案 [循环变量], 相加 (标准答案 [循环变量], #换行符))
            .否则
                
            .如果结束
            
        .计次循环尾 ()
        赋值 (.内容, 相加 (.内容, “[”, 到文本 (循环变量), “]:”, 标准答案 [循环变量], “    ”))
    .计次循环尾 ()
    
.否则
    .如果 (大于 (名词解释分数, 0))
        赋值 (大题序号, 相加 (大题序号, 1))
        赋值 (.内容, 相加 (.内容, #换行符))
        赋值 (.内容, 相加 (.内容, 阿拉伯到中文 (到文本 (大题序号)), “、名词解释（每小题 5 分，共 ”, 到文本 (名词解释分数), “ 分）：”, #换行符, #换行符))
        
        到首记录 ()
        .计次循环首 (取记录数 (), )
            .如果 (等于 (读 (#题目类型), #名词解释))
                赋值 (.内容, 相加 (.内容, 到文本 (读 (#题目序号)), “、”, 读 (#问题), “――”, 读 (#答案), #换行符, #换行符))
            .否则
                
            .如果结束
            跳过 ()
        .计次循环尾 ()
        
    .否则
        
    .如果结束
    
    .如果 (大于 (单项选择分数, 0))
        赋值 (大题序号, 相加 (大题序号, 1))
        赋值 (.内容, 相加 (.内容, #换行符))
        赋值 (.内容, 相加 (.内容, 阿拉伯到中文 (到文本 (大题序号)), “、单项选择（每小题1分，共”, 到文本 (单项选择分数), “分）：”, #换行符, #换行符))
        到首记录 ()
        .计次循环首 (取记录数 (), )
            .如果 (等于 (读 (#题目类型), #单项选择))
                 ' 题目文本编辑框.内容 ＝ 题目文本编辑框.内容 ＋ 到文本 (读 (#题目序号)) ＋ “、” ＋ 读 (#问题) ＋ “（  ）” ＋ #换行符 ＋ #换行符 ＋ “  A” ＋ “、” ＋ 读 (#选择项一) ＋ #换行符 ＋ “  B” ＋ “、” ＋ 读 (#选择项二) ＋ #换行符 ＋ “  C” ＋ “、” ＋ 读 (#选择项三) ＋ #换行符 ＋ “  D” ＋ “、” ＋ 读 (#选择项四) ＋ #换行符 ＋ “  E” ＋ “、” ＋ 读 (#选择项五) ＋ #换行符 ＋ #换行符
                有选项题目文本导出 (读 (#选项))
            .否则
                
            .如果结束
            跳过 ()
        .计次循环尾 ()
        
    .否则
        
    .如果结束
    .如果 (大于 (多项选择分数, 0))
        赋值 (大题序号, 相加 (大题序号, 1))
        赋值 (.内容, 相加 (.内容, #换行符))
        
        赋值 (.内容, 相加 (.内容, 阿拉伯到中文 (到文本 (大题序号)), “、多项选择（每小题2分，共”, 到文本 (多项选择分数), “分）：”, #换行符, #换行符))
        到首记录 ()
        .计次循环首 (取记录数 (), )
            .如果 (等于 (读 (#题目类型), #多项选择))
                 ' 题目文本编辑框.内容 ＝ 题目文本编辑框.内容 ＋ 到文本 (读 (#题目序号)) ＋ “、” ＋ 读 (#问题) ＋ “（      ）” ＋ #换行符 ＋ #换行符 ＋ “  A” ＋ “、” ＋ 读 (#选择项一) ＋ #换行符 ＋ “  B” ＋ “、” ＋ 读 (#选择项二) ＋ #换行符 ＋ “  C” ＋ “、” ＋ 读 (#选择项三) ＋ #换行符 ＋ “  D” ＋ “、” ＋ 读 (#选择项四) ＋ #换行符 ＋ “  E” ＋ “、” ＋ 读 (#选择项五) ＋ #换行符 ＋ #换行符
                有选项题目文本导出 (读 (#选项))
            .否则
                
            .如果结束
            跳过 ()
        .计次循环尾 ()
        
    .否则
        
    .如果结束
    .如果 (大于 (材料分析分数, 0))
        赋值 (大题序号, 相加 (大题序号, 1))
        赋值 (.内容, 相加 (.内容, #换行符))
        赋值 (.内容, 相加 (.内容, 阿拉伯到中文 (到文本 (大题序号)), “、材料分析（每小题5分，共”, 到文本 (材料分析分数), “分）：”, #换行符, #换行符))
        
        到首记录 ()
        .计次循环首 (取记录数 (), )
            .如果 (等于 (读 (#题目类型), #材料分析))
                .如果 (不等于 (参考材料文本路径, 相加 (题库路径, “\”, 读 (#材料文本))))
                    .如果 (等于 (取文本右边 (相加 (题库路径, “\”, 读 (#材料文本)), 3), “txt”))
                        赋值 (文件号1, 打开文件 (相加 (题库路径, “\”, 读 (#材料文本)), , ))
                        赋值 (参考材料文本, 相加 (“参考材料：”, #换行符, 读入文本 (文件号1, )))
                        关闭文件 (文件号1)
                        
                    .否则
                        赋值 (参考材料文本, 相加 (“参考材料：”, #换行符, “[ ”, 题库路径, “\”, 读 (#材料文本), “ ] ”))
                    .如果结束
                    
                    .如果 (不等于 (参考材料文本, “”))
                        赋值 (.内容, 相加 (.内容, 参考材料文本, #换行符, #换行符))
                    .否则
                        
                    .如果结束
                    
                    
                    赋值 (参考材料文本路径, 相加 (题库路径, “\”, 读 (#材料文本)))
                .否则
                    
                .如果结束
                
                 ' 题目文本编辑框.内容 ＝ 题目文本编辑框.内容 ＋ 到文本 (读 (#题目序号)) ＋ “、” ＋ 读 (#问题) ＋ “（      ）” ＋ #换行符 ＋ #换行符 ＋ “  A” ＋ “、” ＋ 读 (#选择项一) ＋ #换行符 ＋ “  B” ＋ “、” ＋ 读 (#选择项二) ＋ #换行符 ＋ “  C” ＋ “、” ＋ 读 (#选择项三) ＋ #换行符 ＋ “  D” ＋ “、” ＋ 读 (#选择项四) ＋ #换行符 ＋ “  E” ＋ “、” ＋ 读 (#选择项五) ＋ #换行符 ＋ #换行符
                有选项题目文本导出 (读 (#选项))
            .否则
                
            .如果结束
            
            跳过 ()
        .计次循环尾 ()
        
    .否则
        
    .如果结束
    
    .如果 (大于 (填空分数, 0))
        赋值 (大题序号, 相加 (大题序号, 1))
        赋值 (.内容, 相加 (.内容, #换行符))
        赋值 (.内容, 相加 (.内容, 阿拉伯到中文 (到文本 (大题序号)), “、填空题（每空1分，共”, 到文本 (填空分数), “分）：”, #换行符, #换行符))
        到首记录 ()
        .计次循环首 (取记录数 (), )
            .如果 (等于 (读 (#题目类型), #填空))
                有选项题目文本导出 (读 (#选项))
            .否则
                
            .如果结束
            跳过 ()
        .计次循环尾 ()
        
    .否则
        
    .如果结束
    
    .如果 (大于 (辨析分数, 0))
        赋值 (大题序号, 相加 (大题序号, 1))
        赋值 (.内容, 相加 (.内容, #换行符))
        赋值 (.内容, 相加 (.内容, 阿拉伯到中文 (到文本 (大题序号)), “、辨析题（每小题3分，共”, 到文本 (辨析分数), “分）：”, #换行符, #换行符))
        到首记录 ()
        .计次循环首 (取记录数 (), )
            .如果 (等于 (读 (#题目类型), #辨析))
                .如果 (等于 (文件是否存在 (相加 (题库路径, “\”, 取文本左边 (读 (#问题), 10), “答案.txt”)), 真))
                    赋值 (文件号1, 打开文件 (相加 (题库路径, “\”, 取文本左边 (读 (#问题), 10), “答案.txt”), , ))
                    赋值 (.内容, 相加 (.内容, 到文本 (读 (#题目序号)), “、”, 读 (#问题), #换行符, #换行符, “  A”, “、”, 读 (#选择项一), “ [   ]________________________”, #换行符, “  B”, “、”, 读 (#选择项二), “ [   ]________________________”, #换行符, #换行符, “答：”, 读入文本 (文件号1, ), #换行符, #换行符))
                     ' 标准答案 [读 (#题目序号)] ＝ 读入文本 (文件号1, )
                    关闭文件 (文件号1)
                    
                .否则
                    赋值 (.内容, 相加 (.内容, 到文本 (读 (#题目序号)), “、”, 读 (#问题), #换行符, #换行符, “  A”, “、”, 读 (#选择项一), “ [   ]________________________”, #换行符, “  B”, “、”, 读 (#选择项二), “ [   ]________________________”, #换行符, #换行符, “答：”, 读 (#答案), #换行符, #换行符))
                .如果结束
                
                
                
            .否则
                
            .如果结束
            跳过 ()
        .计次循环尾 ()
        
    .否则
        
    .如果结束
    
    .如果 (大于 (简答分数, 0))
        赋值 (大题序号, 相加 (大题序号, 1))
        赋值 (.内容, 相加 (.内容, #换行符))
        赋值 (.内容, 相加 (.内容, 阿拉伯到中文 (到文本 (大题序号)), “、简答题（每小题10分，共”, 到文本 (简答分数), “分）：”, #换行符, #换行符))
        到首记录 ()
        .计次循环首 (取记录数 (), )
            .如果 (等于 (读 (#题目类型), #简答))
                .如果 (等于 (文件是否存在 (相加 (题库路径, “\”, 取文本左边 (读 (#问题), 10), “答案.txt”)), 真))
                    赋值 (文件号1, 打开文件 (相加 (题库路径, “\”, 取文本左边 (读 (#问题), 10), “答案.txt”), , ))
                    赋值 (.内容, 相加 (.内容, 到文本 (读 (#题目序号)), “、”, 读 (#问题), #换行符, #换行符, “答：”, 读入文本 (文件号1, ), #换行符, #换行符))
                     ' 标准答案 [读 (#题目序号)] ＝ 读入文本 (文件号1, )
                    关闭文件 (文件号1)
                    
                .否则
                    赋值 (.内容, 相加 (.内容, 到文本 (读 (#题目序号)), “、”, 读 (#问题), #换行符, #换行符, “答：”, 读 (#答案), #换行符, #换行符))
                .如果结束
                
            .否则
                
            .如果结束
            跳过 ()
        .计次循环尾 ()
        
    .否则
        
    .如果结束
    .如果 (大于 (论述分数, 0))
        赋值 (大题序号, 相加 (大题序号, 1))
        赋值 (.内容, 相加 (.内容, #换行符))
        赋值 (.内容, 相加 (.内容, 阿拉伯到中文 (到文本 (大题序号)), “、论述题（每小题20分，共”, 到文本 (论述分数), “分）：”, #换行符, #换行符))
        到首记录 ()
        .计次循环首 (取记录数 (), )
            .如果 (等于 (读 (#题目类型), #论述))
                .如果 (等于 (文件是否存在 (相加 (题库路径, “\”, 取文本左边 (读 (#问题), 10), “答案.txt”)), 真))
                    赋值 (文件号1, 打开文件 (相加 (题库路径, “\”, 取文本左边 (读 (#问题), 10), “答案.txt”), , ))
                    赋值 (.内容, 相加 (.内容, 到文本 (读 (#题目序号)), “、”, 读 (#问题), #换行符, #换行符, “答：”, 读入文本 (文件号1, ), #换行符, #换行符))
                     ' 标准答案 [读 (#题目序号)] ＝ 读入文本 (文件号1, )
                    关闭文件 (文件号1)
                    
                .否则
                    赋值 (.内容, 相加 (.内容, 到文本 (读 (#题目序号)), “、”, 读 (#问题), #换行符, #换行符, “答：”, 读 (#答案), #换行符, #换行符))
                .如果结束
                
                
            .否则
                
            .如果结束
            跳过 ()
        .计次循环尾 ()
        
        
    .否则
        
    .如果结束
    
    
     ' 题目文本编辑框.内容 ＝ 题目文本编辑框.内容 ＋ #换行符 ＋ #换行符 ＋ “参考答案：” ＋ #换行符 ＋ #换行符
     ' 重定义数组 (标准答案, 假, 取记录数 ())
     ' 到首记录 ()
     ' .计次循环首 (取记录数 (), )
        
         ' .如果 (等于 (文件是否存在 (相加 (题库路径, “\”, 取文本左边 (读 (#问题), 10), “答案.txt”)), 真))
             ' 文件号1 ＝ 打开文件 (题库路径 ＋ “\” ＋ 取文本左边 (读 (#问题), 10) ＋ “答案.txt”, , )
             ' 标准答案 [读 (#题目序号)] ＝ 读入文本 (文件号1, )
             ' 关闭文件 (文件号1)
            
        .否则
             ' 标准答案 [读 (#题目序号)] ＝ 读 (#答案)
        .如果结束
        
         ' 跳过 ()
     ' .计次循环尾 ()
     ' .计次循环首 (取数组成员数 (标准答案), 循环变量)
         ' .计次循环首 (5, )
             ' .如果 (等于 (求余数 (循环变量, 5), 0))
                 ' 标准答案 [循环变量] ＝ 标准答案 [循环变量] ＋ #换行符
            .否则
                
            .如果结束
            
         ' .计次循环尾 ()
         ' 题目文本编辑框.内容 ＝ 题目文本编辑框.内容 ＋ “[” ＋ 到文本 (循环变量) ＋ “]:” ＋ 标准答案 [循环变量] ＋ “    ”
     ' .计次循环尾 ()
    
.如果结束



.子程序 _打印按钮_被单击, 空白型, , 
真.开始打印 (假, #A4纸, 0, , )
.写文本行 (.内容)
结束打印 ()


.子程序 _保存按钮_被单击, 空白型, , 
.局部变量 文件号, 整数型, , , 

赋值 (文件号, 打开文件 (相加 (取运行目录 (), “\”, 考生姓名, “\”, “《”, 导出题库, “》”, “试卷.txt”), #重写, ))
.如果 (等于 (写出文本 (文件号, .内容), 真))
    信息框 (相加 (取运行目录 (), “\”, 考生姓名, “\”, “《”, 导出题库, “》”, “试卷.txt”), 0, “保存文本试卷成功”)
.否则
    
.如果结束
关闭文件 (文件号)


.子程序 有选项题目文本导出, 空白型, , 
.参数 选项数量, 整数型, , 

.局部变量 文件号1, 整数型, , , 

.如果 (等于 (.选中, 假))
    .如果真 (或者 (等于 (读 (#题目类型), “单项选择”), 等于 (读 (#题目类型), “多项选择”), 等于 (读 (#题目类型), “材料分析”)))
        .如果真 (等于 (选项数量, 0))
            .如果 (等于 (文件是否存在 (相加 (题库路径, “\”, 取文本左边 (读 (#问题), 10), “答案.txt”)), 真))
                赋值 (文件号1, 打开文件 (相加 (题库路径, “\”, 取文本左边 (读 (#问题), 10), “答案.txt”), , ))
                
                赋值 (.内容, 相加 (.内容, 到文本 (读 (#题目序号)), “、”, 读 (#问题), #换行符, #换行符, “答：”, 读入文本 (文件号1, ), #换行符, #换行符))
                关闭文件 (文件号1)
                
            .否则
                赋值 (.内容, 相加 (.内容, 到文本 (读 (#题目序号)), “、”, 读 (#问题), #换行符, #换行符, “答：”, 读 (#答案), #换行符, #换行符))
                
            .如果结束
            
            
        .如果真结束
        .如果真 (等于 (选项数量, 2))
        .如果真结束
        
        .如果真 (等于 (选项数量, 1))
            赋值 (.内容, 相加 (.内容, 到文本 (读 (#题目序号)), “、”, 读 (#问题), “（  ”, 读 (#答案), “  ）”, #换行符, #换行符, “  A”, “、”, 读 (#选择项一), #换行符, #换行符))
            
        .如果真结束
        .如果真 (等于 (选项数量, 2))
            赋值 (.内容, 相加 (.内容, 到文本 (读 (#题目序号)), “、”, 读 (#问题), “（  ”, 读 (#答案), “  ）”, #换行符, #换行符, “  A”, “、”, 读 (#选择项一), #换行符, “  B”, “、”, 读 (#选择项二), #换行符, #换行符))
            
        .如果真结束
        .如果真 (等于 (选项数量, 3))
            赋值 (.内容, 相加 (.内容, 到文本 (读 (#题目序号)), “、”, 读 (#问题), “（  ”, 读 (#答案), “  ）”, #换行符, #换行符, “  A”, “、”, 读 (#选择项一), #换行符, “  B”, “、”, 读 (#选择项二), #换行符, “  C”, “、”, 读 (#选择项三), #换行符, #换行符))
            
        .如果真结束
        .如果真 (等于 (选项数量, 4))
            赋值 (.内容, 相加 (.内容, 到文本 (读 (#题目序号)), “、”, 读 (#问题), “（  ”, 读 (#答案), “  ）”, #换行符, #换行符, “  A”, “、”, 读 (#选择项一), #换行符, “  B”, “、”, 读 (#选择项二), #换行符, “  C”, “、”, 读 (#选择项三), #换行符, “  D”, “、”, 读 (#选择项四), #换行符, #换行符))
            
        .如果真结束
        
        .如果真 (等于 (选项数量, 5))
            赋值 (.内容, 相加 (.内容, 到文本 (读 (#题目序号)), “、”, 读 (#问题), “（  ”, 读 (#答案), “  ）”, #换行符, #换行符, “  A”, “、”, 读 (#选择项一), #换行符, “  B”, “、”, 读 (#选择项二), #换行符, “  C”, “、”, 读 (#选择项三), #换行符, “  D”, “、”, 读 (#选择项四), #换行符, “  E”, “、”, 读 (#选择项五), #换行符, #换行符))
        .如果真结束
        
        .如果真 (等于 (选项数量, 6))
            赋值 (.内容, 相加 (.内容, 到文本 (读 (#题目序号)), “、”, 读 (#问题), “（  ”, 读 (#答案), “  ）”, #换行符, #换行符, “  A”, “、”, 读 (#选择项一), #换行符, “  B”, “、”, 读 (#选择项二), #换行符, “  C”, “、”, 读 (#选择项三), #换行符, “  D”, “、”, 读 (#选择项四), #换行符, “  E”, “、”, 读 (#选择项五), #换行符, “  F”, “、”, 读 (#选择项六), #换行符, #换行符))
            
        .如果真结束
        
        .如果真 (等于 (选项数量, 7))
            赋值 (.内容, 相加 (.内容, 到文本 (读 (#题目序号)), “、”, 读 (#问题), “（  ”, 读 (#答案), “  ）”, #换行符, #换行符, “  A”, “、”, 读 (#选择项一), #换行符, “  B”, “、”, 读 (#选择项二), #换行符, “  C”, “、”, 读 (#选择项三), #换行符, “  D”, “、”, 读 (#选择项四), #换行符, “  E”, “、”, 读 (#选择项五), #换行符, “  F”, “、”, 读 (#选择项六), #换行符, “  G”, “、”, 读 (#选择项七), #换行符, #换行符))
            
        .如果真结束
        
        .如果真 (等于 (选项数量, 8))
            赋值 (.内容, 相加 (.内容, 到文本 (读 (#题目序号)), “、”, 读 (#问题), “（  ”, 读 (#答案), “  ）”, #换行符, #换行符, “  A”, “、”, 读 (#选择项一), #换行符, “  B”, “、”, 读 (#选择项二), #换行符, “  C”, “、”, 读 (#选择项三), #换行符, “  D”, “、”, 读 (#选择项四), #换行符, “  E”, “、”, 读 (#选择项五), #换行符, “  F”, “、”, 读 (#选择项六), #换行符, “  G”, “、”, 读 (#选择项七), #换行符, “  H”, “、”, 读 (#选择项八), #换行符, #换行符))
            
        .如果真结束
        
        .如果真 (等于 (选项数量, 9))
            赋值 (.内容, 相加 (.内容, 到文本 (读 (#题目序号)), “、”, 读 (#问题), “（  ”, 读 (#答案), “  ）”, #换行符, #换行符, “  A”, “、”, 读 (#选择项一), #换行符, “  B”, “、”, 读 (#选择项二), #换行符, “  C”, “、”, 读 (#选择项三), #换行符, “  D”, “、”, 读 (#选择项四), #换行符, “  E”, “、”, 读 (#选择项五), #换行符, “  F”, “、”, 读 (#选择项六), #换行符, “  G”, “、”, 读 (#选择项七), #换行符, “  H”, “、”, 读 (#选择项八), #换行符, “  I”, “、”, 读 (#选择项九), #换行符, #换行符))
            
        .如果真结束
        
        .如果真 (等于 (选项数量, 10))
            赋值 (.内容, 相加 (.内容, 到文本 (读 (#题目序号)), “、”, 读 (#问题), “（  ”, 读 (#答案), “  ）”, #换行符, #换行符, “  A”, “、”, 读 (#选择项一), #换行符, “  B”, “、”, 读 (#选择项二), #换行符, “  C”, “、”, 读 (#选择项三), #换行符, “  D”, “、”, 读 (#选择项四), #换行符, “  E”, “、”, 读 (#选择项五), #换行符, “  F”, “、”, 读 (#选择项六), #换行符, “  G”, “、”, 读 (#选择项七), #换行符, “  H”, “、”, 读 (#选择项八), #换行符, “  I”, “、”, 读 (#选择项九), #换行符, “  J”, “、”, 读 (#选择项十), #换行符, #换行符))
            
        .如果真结束
        
    .如果真结束
    
    .如果 (等于 (读 (#题目类型), #填空))
        .如果真 (等于 (选项数量, 1))
            赋值 (.内容, 相加 (.内容, 到文本 (读 (#题目序号)), “、”, 读 (#问题), #换行符, #换行符, “  A”, “.”, 读 (#选择项一), #换行符, #换行符))
        .如果真结束
        
        .如果真 (等于 (选项数量, 2))
            赋值 (.内容, 相加 (.内容, 到文本 (读 (#题目序号)), “、”, 读 (#问题), #换行符, #换行符, “  A”, “.”, 读 (#选择项一), #换行符, “  B”, “.”, 读 (#选择项二), #换行符, #换行符))
        .如果真结束
        
        .如果真 (等于 (选项数量, 3))
            赋值 (.内容, 相加 (.内容, 到文本 (读 (#题目序号)), “、”, 读 (#问题), #换行符, #换行符, “  A”, “.”, 读 (#选择项一), #换行符, “  B”, “.”, 读 (#选择项二), #换行符, “  C”, “.”, 读 (#选择项三), #换行符, #换行符))
        .如果真结束
        
        
        .如果真 (等于 (选项数量, 4))
            赋值 (.内容, 相加 (.内容, 到文本 (读 (#题目序号)), “、”, 读 (#问题), #换行符, #换行符, “  A”, “.”, 读 (#选择项一), #换行符, “  B”, “.”, 读 (#选择项二), #换行符, “  C”, “.”, 读 (#选择项三), #换行符, “  D”, “.”, 读 (#选择项四), #换行符, #换行符))
        .如果真结束
        
        .如果真 (等于 (选项数量, 5))
            赋值 (.内容, 相加 (.内容, 到文本 (读 (#题目序号)), “、”, 读 (#问题), #换行符, #换行符, “  A”, “.”, 读 (#选择项一), #换行符, “  B”, “.”, 读 (#选择项二), #换行符, “  C”, “.”, 读 (#选择项三), #换行符, “  D”, “.”, 读 (#选择项四), #换行符, “  E”, “.”, 读 (#选择项五), #换行符, #换行符))
        .如果真结束
        
        .如果真 (等于 (选项数量, 6))
            赋值 (.内容, 相加 (.内容, 到文本 (读 (#题目序号)), “、”, 读 (#问题), #换行符, #换行符, “  A”, “.”, 读 (#选择项一), #换行符, “  B”, “.”, 读 (#选择项二), #换行符, “  C”, “.”, 读 (#选择项三), #换行符, “  D”, “.”, 读 (#选择项四), #换行符, “  E”, “.”, 读 (#选择项五), #换行符, “  F”, “.”, 读 (#选择项六), #换行符, #换行符))
        .如果真结束
        
        .如果真 (等于 (选项数量, 7))
            赋值 (.内容, 相加 (.内容, 到文本 (读 (#题目序号)), “、”, 读 (#问题), #换行符, #换行符, “  A”, “.”, 读 (#选择项一), #换行符, “  B”, “.”, 读 (#选择项二), #换行符, “  C”, “.”, 读 (#选择项三), #换行符, “  D”, “.”, 读 (#选择项四), #换行符, “  E”, “.”, 读 (#选择项五), #换行符, “  F”, “.”, 读 (#选择项六), #换行符, “  G”, “.”, 读 (#选择项七), #换行符, #换行符))
        .如果真结束
        
        .如果真 (等于 (选项数量, 8))
            赋值 (.内容, 相加 (.内容, 到文本 (读 (#题目序号)), “、”, 读 (#问题), #换行符, #换行符, “  A”, “.”, 读 (#选择项一), #换行符, “  B”, “.”, 读 (#选择项二), #换行符, “  C”, “.”, 读 (#选择项三), #换行符, “  D”, “.”, 读 (#选择项四), #换行符, “  E”, “.”, 读 (#选择项五), #换行符, “  F”, “.”, 读 (#选择项六), #换行符, “  G”, “.”, 读 (#选择项七), #换行符, “  H”, “.”, 读 (#选择项八), #换行符, #换行符))
        .如果真结束
        .如果真 (等于 (选项数量, 9))
            赋值 (.内容, 相加 (.内容, 到文本 (读 (#题目序号)), “、”, 读 (#问题), #换行符, #换行符, “  A”, “.”, 读 (#选择项一), #换行符, “  B”, “.”, 读 (#选择项二), #换行符, “  C”, “.”, 读 (#选择项三), #换行符, “  D”, “.”, 读 (#选择项四), #换行符, “  E”, “.”, 读 (#选择项五), #换行符, “  F”, “.”, 读 (#选择项六), #换行符, “  G”, “.”, 读 (#选择项七), #换行符, “  H”, “.”, 读 (#选择项八), #换行符, “  I”, “.”, 读 (#选择项九), #换行符, #换行符))
        .如果真结束
        
        
        .如果真 (等于 (选项数量, 10))
            赋值 (.内容, 相加 (.内容, 到文本 (读 (#题目序号)), “、”, 读 (#问题), #换行符, #换行符, “  A”, “.”, 读 (#选择项一), #换行符, “  B”, “.”, 读 (#选择项二), #换行符, “  C”, “.”, 读 (#选择项三), #换行符, “  D”, “.”, 读 (#选择项四), #换行符, “  E”, “.”, 读 (#选择项五), #换行符, “  F”, “.”, 读 (#选择项六), #换行符, “  G”, “.”, 读 (#选择项七), #换行符, “  H”, “.”, 读 (#选择项八), #换行符, “  I”, “.”, 读 (#选择项九), #换行符, “  J”, “.”, 读 (#选择项十), #换行符, #换行符))
        .如果真结束
        
    .否则
        
    .如果结束
    
.否则
    .如果真 (或者 (等于 (读 (#题目类型), “单项选择”), 等于 (读 (#题目类型), “多项选择”), 等于 (读 (#题目类型), “材料分析”)))
        .如果真 (等于 (选项数量, 0))
            
            赋值 (.内容, 相加 (.内容, 到文本 (读 (#题目序号)), “、”, 读 (#问题), #换行符, #换行符, #换行符, #换行符, #换行符, #换行符))
            
        .如果真结束
        .如果真 (等于 (选项数量, 2))
        .如果真结束
        
        .如果真 (等于 (选项数量, 1))
            赋值 (.内容, 相加 (.内容, 到文本 (读 (#题目序号)), “、”, 读 (#问题), “（      ）”, #换行符, #换行符, “  A”, “、”, 读 (#选择项一), #换行符, #换行符))
            
        .如果真结束
        .如果真 (等于 (选项数量, 2))
            赋值 (.内容, 相加 (.内容, 到文本 (读 (#题目序号)), “、”, 读 (#问题), “（      ）”, #换行符, #换行符, “  A”, “、”, 读 (#选择项一), #换行符, “  B”, “、”, 读 (#选择项二), #换行符, #换行符))
            
        .如果真结束
        .如果真 (等于 (选项数量, 3))
            赋值 (.内容, 相加 (.内容, 到文本 (读 (#题目序号)), “、”, 读 (#问题), “（      ）”, #换行符, #换行符, “  A”, “、”, 读 (#选择项一), #换行符, “  B”, “、”, 读 (#选择项二), #换行符, “  C”, “、”, 读 (#选择项三), #换行符, #换行符))
            
        .如果真结束
        .如果真 (等于 (选项数量, 4))
            赋值 (.内容, 相加 (.内容, 到文本 (读 (#题目序号)), “、”, 读 (#问题), “（      ）”, #换行符, #换行符, “  A”, “、”, 读 (#选择项一), #换行符, “  B”, “、”, 读 (#选择项二), #换行符, “  C”, “、”, 读 (#选择项三), #换行符, “  D”, “、”, 读 (#选择项四), #换行符, #换行符))
            
        .如果真结束
        
        .如果真 (等于 (选项数量, 5))
            赋值 (.内容, 相加 (.内容, 到文本 (读 (#题目序号)), “、”, 读 (#问题), “（      ）”, #换行符, #换行符, “  A”, “、”, 读 (#选择项一), #换行符, “  B”, “、”, 读 (#选择项二), #换行符, “  C”, “、”, 读 (#选择项三), #换行符, “  D”, “、”, 读 (#选择项四), #换行符, “  E”, “、”, 读 (#选择项五), #换行符, #换行符))
        .如果真结束
        
        .如果真 (等于 (选项数量, 6))
            赋值 (.内容, 相加 (.内容, 到文本 (读 (#题目序号)), “、”, 读 (#问题), “（      ）”, #换行符, #换行符, “  A”, “、”, 读 (#选择项一), #换行符, “  B”, “、”, 读 (#选择项二), #换行符, “  C”, “、”, 读 (#选择项三), #换行符, “  D”, “、”, 读 (#选择项四), #换行符, “  E”, “、”, 读 (#选择项五), #换行符, “  F”, “、”, 读 (#选择项六), #换行符, #换行符))
            
        .如果真结束
        
        .如果真 (等于 (选项数量, 7))
            赋值 (.内容, 相加 (.内容, 到文本 (读 (#题目序号)), “、”, 读 (#问题), “（      ）”, #换行符, #换行符, “  A”, “、”, 读 (#选择项一), #换行符, “  B”, “、”, 读 (#选择项二), #换行符, “  C”, “、”, 读 (#选择项三), #换行符, “  D”, “、”, 读 (#选择项四), #换行符, “  E”, “、”, 读 (#选择项五), #换行符, “  F”, “、”, 读 (#选择项六), #换行符, “  G”, “、”, 读 (#选择项七), #换行符, #换行符))
            
        .如果真结束
        
        .如果真 (等于 (选项数量, 8))
            赋值 (.内容, 相加 (.内容, 到文本 (读 (#题目序号)), “、”, 读 (#问题), “（      ）”, #换行符, #换行符, “  A”, “、”, 读 (#选择项一), #换行符, “  B”, “、”, 读 (#选择项二), #换行符, “  C”, “、”, 读 (#选择项三), #换行符, “  D”, “、”, 读 (#选择项四), #换行符, “  E”, “、”, 读 (#选择项五), #换行符, “  F”, “、”, 读 (#选择项六), #换行符, “  G”, “、”, 读 (#选择项七), #换行符, “  H”, “、”, 读 (#选择项八), #换行符, #换行符))
            
        .如果真结束
        
        .如果真 (等于 (选项数量, 9))
            赋值 (.内容, 相加 (.内容, 到文本 (读 (#题目序号)), “、”, 读 (#问题), “（      ）”, #换行符, #换行符, “  A”, “、”, 读 (#选择项一), #换行符, “  B”, “、”, 读 (#选择项二), #换行符, “  C”, “、”, 读 (#选择项三), #换行符, “  D”, “、”, 读 (#选择项四), #换行符, “  E”, “、”, 读 (#选择项五), #换行符, “  F”, “、”, 读 (#选择项六), #换行符, “  G”, “、”, 读 (#选择项七), #换行符, “  H”, “、”, 读 (#选择项八), #换行符, “  I”, “、”, 读 (#选择项九), #换行符, #换行符))
            
        .如果真结束
        
        .如果真 (等于 (选项数量, 10))
            赋值 (.内容, 相加 (.内容, 到文本 (读 (#题目序号)), “、”, 读 (#问题), “（      ）”, #换行符, #换行符, “  A”, “、”, 读 (#选择项一), #换行符, “  B”, “、”, 读 (#选择项二), #换行符, “  C”, “、”, 读 (#选择项三), #换行符, “  D”, “、”, 读 (#选择项四), #换行符, “  E”, “、”, 读 (#选择项五), #换行符, “  F”, “、”, 读 (#选择项六), #换行符, “  G”, “、”, 读 (#选择项七), #换行符, “  H”, “、”, 读 (#选择项八), #换行符, “  I”, “、”, 读 (#选择项九), #换行符, “  J”, “、”, 读 (#选择项十), #换行符, #换行符))
            
        .如果真结束
        
    .如果真结束
    
    .如果 (等于 (读 (#题目类型), #填空))
        .如果真 (等于 (选项数量, 1))
            赋值 (.内容, 相加 (.内容, 到文本 (读 (#题目序号)), “、”, 读 (#问题), #换行符, #换行符, “  A”, “.__________________________________”, #换行符, #换行符))
        .如果真结束
        
        .如果真 (等于 (选项数量, 2))
            赋值 (.内容, 相加 (.内容, 到文本 (读 (#题目序号)), “、”, 读 (#问题), #换行符, #换行符, “  A”, “.__________________________________”, #换行符, “  B”, “.__________________________________”, #换行符, #换行符))
        .如果真结束
        
        .如果真 (等于 (选项数量, 3))
            赋值 (.内容, 相加 (.内容, 到文本 (读 (#题目序号)), “、”, 读 (#问题), #换行符, #换行符, “  A”, “.__________________________________”, #换行符, “  B”, “.__________________________________”, #换行符, “  C”, “.__________________________________”, #换行符, #换行符))
        .如果真结束
        
        
        .如果真 (等于 (选项数量, 4))
            赋值 (.内容, 相加 (.内容, 到文本 (读 (#题目序号)), “、”, 读 (#问题), #换行符, #换行符, “  A”, “.__________________________________”, #换行符, “  B”, “.__________________________________”, #换行符, “  C”, “.__________________________________”, #换行符, “  D”, “.__________________________________”, #换行符, #换行符))
        .如果真结束
        
        .如果真 (等于 (选项数量, 5))
            赋值 (.内容, 相加 (.内容, 到文本 (读 (#题目序号)), “、”, 读 (#问题), #换行符, #换行符, “  A”, “.__________________________________”, #换行符, “  B”, “.__________________________________”, #换行符, “  C”, “.__________________________________”, #换行符, “  D”, “.__________________________________”, #换行符, “  E”, “.__________________________________”, #换行符, #换行符))
        .如果真结束
        
        .如果真 (等于 (选项数量, 6))
            赋值 (.内容, 相加 (.内容, 到文本 (读 (#题目序号)), “、”, 读 (#问题), #换行符, #换行符, “  A”, “.__________________________________”, #换行符, “  B”, “.__________________________________”, #换行符, “  C”, “.__________________________________”, #换行符, “  D”, “.__________________________________”, #换行符, “  E”, “.__________________________________”, #换行符, “  F”, “.__________________________________”, #换行符, #换行符))
        .如果真结束
        
        .如果真 (等于 (选项数量, 7))
            赋值 (.内容, 相加 (.内容, 到文本 (读 (#题目序号)), “、”, 读 (#问题), #换行符, #换行符, “  A”, “.__________________________________”, #换行符, “  B”, “.__________________________________”, #换行符, “  C”, “.__________________________________”, #换行符, “  D”, “.__________________________________”, #换行符, “  E”, “.__________________________________”, #换行符, “  F”, “.__________________________________”, #换行符, “  G”, “.__________________________________”, #换行符, #换行符))
        .如果真结束
        
        .如果真 (等于 (选项数量, 8))
            赋值 (.内容, 相加 (.内容, 到文本 (读 (#题目序号)), “、”, 读 (#问题), #换行符, #换行符, “  A”, “.__________________________________”, #换行符, “  B”, “.__________________________________”, #换行符, “  C”, “.__________________________________”, #换行符, “  D”, “.__________________________________”, #换行符, “  E”, “.__________________________________”, #换行符, “  F”, “.__________________________________”, #换行符, “  G”, “.__________________________________”, #换行符, “  H”, “.__________________________________”, #换行符, #换行符))
        .如果真结束
        .如果真 (等于 (选项数量, 9))
            赋值 (.内容, 相加 (.内容, 到文本 (读 (#题目序号)), “、”, 读 (#问题), #换行符, #换行符, “  A”, “.__________________________________”, #换行符, “  B”, “.__________________________________”, #换行符, “  C”, “.__________________________________”, #换行符, “  D”, “.__________________________________”, #换行符, “  E”, “.__________________________________”, #换行符, “  F”, “.__________________________________”, #换行符, “  G”, “.__________________________________”, #换行符, “  H”, “.__________________________________”, #换行符, “  I”, “.__________________________________”, #换行符, #换行符))
        .如果真结束
        
        
        .如果真 (等于 (选项数量, 10))
            赋值 (.内容, 相加 (.内容, 到文本 (读 (#题目序号)), “、”, 读 (#问题), #换行符, #换行符, “  A”, “.__________________________________”, #换行符, “  B”, “.__________________________________”, #换行符, “  C”, “.__________________________________”, #换行符, “  D”, “.__________________________________”, #换行符, “  E”, “.__________________________________”, #换行符, “  F”, “.__________________________________”, #换行符, “  G”, “.__________________________________”, #换行符, “  H”, “.__________________________________”, #换行符, “  I”, “.__________________________________”, #换行符, “  J”, “.__________________________________”, #换行符, #换行符))
        .如果真结束
        
        
        
        
    .否则
        
    .如果结束
    
.如果结束




.子程序 阿拉伯到中文, 文本型, , 
.参数 阿拉伯数字, 文本型, , 

.如果 (等于 (阿拉伯数字, “0”))
    返回 (“○”)
.否则
    .如果 (等于 (阿拉伯数字, “1”))
        返回 (“一”)
    .否则
        .如果 (等于 (阿拉伯数字, “2”))
            返回 (“二”)
        .否则
            .如果 (等于 (阿拉伯数字, “3”))
                返回 (“三”)
            .否则
                .如果 (等于 (阿拉伯数字, “4”))
                    返回 (“四”)
                .否则
                    .如果 (等于 (阿拉伯数字, “5”))
                        返回 (“五”)
                    .否则
                        .如果 (等于 (阿拉伯数字, “6”))
                            返回 (“六”)
                        .否则
                            .如果 (等于 (阿拉伯数字, “7”))
                                返回 (“七”)
                            .否则
                                .如果 (等于 (阿拉伯数字, “8”))
                                    返回 (“八”)
                                .否则
                                    .如果 (等于 (阿拉伯数字, “9”))
                                        返回 (“九”)
                                    .否则
                                        返回 (“”)
                                    .如果结束
                                    
                                .如果结束
                                
                            .如果结束
                            
                        .如果结束
                        
                    .如果结束
                    
                .如果结束
                
            .如果结束
            
        .如果结束
        
    .如果结束
    
.如果结束













.子程序 _退出按钮_被单击, 空白型, , 
销毁 ()


.子程序 _导出按钮_被单击, 空白型, , 
_导出试卷窗口_创建完毕 ()


.窗口程序集 修改密码窗口程序集, , , 

.子程序 _取消按钮_被单击, 空白型, , 
销毁 ()


.子程序 _修改密码窗口_创建完毕, 空白型, , 
.如果 (等于 (是否已打开 (相加 (取运行目录 (), “\账号.edb”)), 假))
    打开 (相加 (取运行目录 (), “\账号.edb”), , , , , , )
.否则
    
.如果结束


.子程序 _修改密码窗口_将被销毁, 空白型, , 
关闭 ()


.子程序 _确认按钮_被单击, 空白型, , 
到首记录 ()
查找 (等于 (考生姓名, 读 (#账号)))
.如果 (等于 (读 (#密码), .内容))
    写 (#密码, .内容)
    信息框 (相加 (“修改成功！新密码为：[”, .内容, “]”), 0, “正确”)
    销毁 ()
.否则
    信息框 (“旧密码输入不正确。”, 0, “错误”)
.如果结束


.窗口程序集 账户管理窗口程序集, , , 

.子程序 _超级列表框_右键单击表项, 空白型, , 
弹出菜单 ()




.子程序 _超级列表框_左键单击表项, 空白型, , 
.选择表项 (.)
赋值 (.内容, .取标题 (., 0))
赋值 (.内容, .取标题 (., 1))
赋值 (.内容, .取标题 (., 2))

.如果 (等于 (.取标题 (., 3), “真”))
    赋值 (.选中, 真)
.否则
    赋值 (.选中, 假)
.如果结束

.如果 (等于 (.取标题 (., 4), “真”))
    赋值 (.选中, 真)
.否则
    赋值 (.选中, 假)
.如果结束

.如果 (等于 (.内容, “管理员”))
    赋值 (.禁止, 真)
    赋值 (.禁止, 真)
.否则
    赋值 (.禁止, 假)
    赋值 (.禁止, 假)
    
.如果结束


.子程序 _账户管理窗口_创建完毕, 空白型, , 
.局部变量 变量, 整数型, , , 

.如果 (等于 (是否已打开 (相加 (取运行目录 (), “\账号.edb”)), 假))
    打开 (相加 (取运行目录 (), “\账号.edb”), , , , , , )
.否则
    
.如果结束
全部删除 ()
到首记录 ()
.计次循环首 (取记录数 (), 变量)
    相减 (变量, 1).插入表项 (读 (#账号), , , 0, )
     ' 超级列表框1.置标题 (变量 － 1, 0, 读 (#账号))
    相减 (变量, 1).置标题 (1, 读 (#密码))
    相减 (变量, 1).置标题 (2, 读 (#身份))
    相减 (变量, 1).置标题 (3, 到文本 (读 (#默认)))
    相减 (变量, 1).置标题 (4, 到文本 (读 (#记密)))
     ' 超级列表框1.插入表项 (变量 － 1, 读 (#账号), , , 0, )
     ' 超级列表框1.插入表项 (变量 － 1, 读 (#密码), , , 1, )
     ' 超级列表框1.插入表项 (变量 － 1, 读 (#身份), , , 2, )
     ' 超级列表框1.插入表项 (变量 － 1, 到文本 (读 (#默认)), , , 3, )
     ' 超级列表框1.插入表项 (变量 － 1, 到文本 (读 (#记密)), , , 4, )
    跳过 ()
.计次循环尾 ()


.子程序 _删除_被选择, 空白型, , 
.删除表项 (.)

.子程序 _账户编辑框_内容被改变, 空白型, , 
.置标题 (., 0, .内容)


.子程序 _密码编辑框_内容被改变, 空白型, , 
.如果 (等于 (.内容, “学生”))
     ' 密码编辑框.内容 ＝ “”
.否则
    .置标题 (., 1, .内容)
.如果结束



.子程序 _身份组合框_编辑内容被改变, 空白型, , 
.置标题 (., 2, .内容)


.子程序 _默认选择框_被单击, 空白型, , 
.置标题 (., 3, 到文本 (.选中))



.子程序 _记密选择框_被单击, 空白型, , 
.置标题 (., 4, 到文本 (.选中))


.子程序 _身份组合框_列表项被选择, 空白型, , 
.置标题 (., 2, .取项目文本 (.现行选中项))
.如果 (等于 (.内容, “学生”))
    赋值 (.内容, “”)
    .置标题 (., 1, .内容)
.否则
    
.如果结束


.子程序 _添加按钮_被单击, 空白型, , 
取表项数 ().插入表项 ()

赋值 (., 相减 (取表项数 (), 1))
.选择表项 (.)
.置标题 (., 3, 到文本 (.选中))
.置标题 (., 4, 到文本 (.选中))
连续赋值 (“”, .内容, .内容, .内容)
连续赋值 (假, .选中, .选中)
获取焦点 ()


.子程序 _删除按钮_被单击, 空白型, , 
.删除表项 (.)

.子程序 _保存按钮_被单击, 空白型, , 
.局部变量 循环变量, 整数型, , , 
.局部变量 管理员数, 空白型, , , 
.局部变量 默认数, 空白型, , , 

赋值 (管理员数, 0)
赋值 (默认数, 0)
.计次循环首 (取表项数 (), 循环变量)
    .如果 (等于 (相减 (循环变量, 1).取标题 (2), “管理员”))
        赋值 (管理员数, 相加 (管理员数, 1))
        
    .否则
        
    .如果结束
    .如果 (等于 (相减 (循环变量, 1).取标题 (3), “真”))
        赋值 (默认数, 相加 (默认数, 1))
        
    .否则
        
    .如果结束
    
.计次循环尾 ()
.如果 (或者 (不等于 (管理员数, 1), 大于 (默认数, 1)))
    信息框 (“管理员数不能不为1个或默认登录数不能大于1个。”, 0, )
    
.否则
    .如果 (等于 (清空 (), 真))
        .计次循环首 (取表项数 (), 循环变量)
            加空记录 ()
            写 (#账号, 相减 (循环变量, 1).取标题 (0))
            写 (#密码, 相减 (循环变量, 1).取标题 (1))
            写 (#身份, 相减 (循环变量, 1).取标题 (2))
            .如果 (等于 (相减 (循环变量, 1).取标题 (3), “真”))
                写 (#默认, 真)
            .否则
                写 (#默认, 假)
            .如果结束
            .如果 (等于 (相减 (循环变量, 1).取标题 (4), “真”))
                写 (#记密, 真)
            .否则
                写 (#记密, 假)
            .如果结束
            
        .计次循环尾 ()
        信息框 (“保存成功！”, 0, )
    .否则
        
    .如果结束
    
.如果结束



.子程序 _账户管理窗口_将被销毁, 空白型, , 
全部关闭 ()


.窗口程序集 操作指南窗口程序集, , , 

.子程序 _树型框1_项目被选择, 空白型, , 
.参数 选择方式, 整数型, , 

.局部变量 前一位置, 整数型, 静态, , 


 ' 超级编辑框1.起始选择位置 ＝ 寻找文本 (超级编辑框1.内容, 树型框1.取项目文本 (树型框1.现行选中项), , 假) － 1
 ' 输出调试文本 (到文本 (超级编辑框1.起始选择位置))
-200.未知支持库函数_6 ()
 ' .如果 (等于 (.取项目文本 (.最大化按钮), “前言”))
     ' 超级编辑框1.滚动 (0)
.否则
    
.如果结束
 ' .如果 (等于 (.取项目文本 (.最大化按钮), “一、功能简介”))
     ' 超级编辑框1.滚动 (20)
.否则
    
.如果结束
 ' .如果 (等于 (.取项目文本 (.最大化按钮), “二、适用范围”))
     ' 超级编辑框1.滚动 (37)
.否则
    
.如果结束
 ' .如果 (等于 (.取项目文本 (.最大化按钮), “三、操作说明”))
     ' 超级编辑框1.滚动 (43)
.否则
    
.如果结束
 ' .如果 (等于 (.取项目文本 (.最大化按钮), “1、安装与运行”))
     ' 超级编辑框1.滚动 (44)
.否则
    
.如果结束
 ' .如果 (等于 (.取项目文本 (.最大化按钮), “2、注册和登录”))
     ' 超级编辑框1.滚动 (47)
.否则
    
.如果结束
 ' .如果 (等于 (.取项目文本 (.最大化按钮), “3、出题和导出”))
     ' 超级编辑框1.滚动 (52)
.否则
    
.如果结束
 ' .如果 (等于 (.取项目文本 (.最大化按钮), “4、考试及评分”))
     ' 超级编辑框1.滚动 (74)
.否则
    
.如果结束
 ' .如果 (等于 (.取项目文本 (.最大化按钮), “5、数据的维护”))
     ' 超级编辑框1.滚动 (85)
.否则
    
.如果结束
 ' .如果 (等于 (.取项目文本 (.最大化按钮), “四、软件注册”))
     ' 超级编辑框1.滚动 (93)
.否则
    
.如果结束
 ' .如果 (等于 (.取项目文本 (.最大化按钮), “五、联系信息”))
     ' 超级编辑框1.滚动 (111)
.否则
    
.如果结束
 ' .如果 (等于 (.取项目文本 (.最大化按钮), “六、其它作品”))
     ' 超级编辑框1.滚动 (119)
.否则
    
.如果结束
 ' 内容超级编辑框.起始选择位置 ＝ 0
获取焦点 ()
.如果 (等于 (前一位置, 0))
    赋值 (前一位置, 0.未知支持库函数_16 (.取项目文本 (.最大化按钮)))
.否则
    赋值 (前一位置, 相加 (前一位置, 取文本长度 (.取项目文本 (.最大化按钮))).未知支持库函数_16 (.取项目文本 (.最大化按钮)))
.如果结束
赋值 (., 前一位置)
赋值 (., 取文本长度 (.取项目文本 (.最大化按钮)))


.子程序 _分隔条1_被拖动, 空白型, , 
.参数 原位置, 整数型, , 
.参数 目的位置, 整数型, , 

.局部变量 拖动距离, 整数型, , , 

赋值 (拖动距离, 相减 (目的位置, 原位置))
赋值 (., 相加 (., 拖动距离))
赋值 (.宽度, 相加 (.宽度, 拖动距离))
赋值 (., 相加 (., 拖动距离))
赋值 (操作指南窗口., 相加 (操作指南窗口., 拖动距离))


.窗口程序集 注册窗口程序集, , , 

.程序集变量 序列号, 文本型, , , 
.子程序 _注册窗口_创建完毕, 空白型, , 
 ' .如果 (大于 (运行次数, 20))
     ' 注册窗口.标题 ＝ “已超出使用期限，请注册。”
.否则
    
.如果结束
赋值 (.内容, 到文本 (取整 (相除 (取硬盘特征字 (), 2))))
获取焦点 ()
 ' 序列号 ＝ “gzznykx” ＋ 到文本 (到整数 (机器码编辑框.内容) － 1101081973 ＋ 4123231975)

赋值 (序列号, 相加 (“gzsass”, 到文本 (相加 (相减 (取整 (相除 (到整数 (.内容), 2)), 1101081973), 4123231975)), “znxykx”))
 ' 序列号 ＝ “gzsass” ＋ 到文本 (取整 (到整数 (到文本 (取整 (取硬盘特征字 () ÷ 2))) ÷ 2) － 1101081973 ＋ 4123231975) ＋ “znxykx”
赋值 (.标题, 到文本 (相减 (30, 运行次数)))
.如果 (小于或等于 (到整数 (.标题), 0))
    赋值 (.禁止, 真)
.否则
    
.如果结束


.子程序 _注册按钮_被单击, 空白型, , 
.局部变量 注册文本文件号, 空白型, , , 

.如果 (等于 (.内容, 序列号))
    赋值 (注册文本文件号, 打开文件 (相加 (取运行目录 (), “\无敌自测注册信息.inf”), #重写, ))
    写出文本 (注册文本文件号, .内容)
    关闭文件 (注册文本文件号)
    赋值 (注册窗口., “注册成功！谢谢支持国产软件！”)
    写注册项 (#现行用户, “software\exam\reg\over”, “2”)
    信息框 (“注册成功，感谢您对共享软件的支持！请重新启动本软件。”, 0, “注册成功”)
    销毁 ()
.否则
    赋值 (注册窗口., “注册失败，请检查序列号是否正确！”)
    鸣叫 ()
.如果结束
 ' 信息框 (“注册成功”, 0, “注册结果”)

.子程序 _取消按钮_被单击, 空白型, , 
结束 ()


.子程序 _注册窗口_将被销毁, 空白型, , 
.如果 (大于 (到整数 (.标题), 0))
    销毁 ()
.否则
    结束 ()
.如果结束



.子程序 _试用按钮_被单击, 空白型, , 
销毁 ()


.窗口程序集 导入单题窗口程序集, , , 

.子程序 _粘贴到出题窗口按钮_被单击, 空白型, , 
.局部变量 行数, 整数型, , , 

.如果 (或者 (等于 (.内容, #名词解释), 等于 (.内容, #简答), 等于 (.内容, #论述)))
    .如果 (大于 (未知支持库函数_1 (), 1))
        信息框 (“行数超过题型限制！”, 0, )
    .否则
        出题窗口._加题_被选择 ()
        
        赋值 (出题窗口..内容, 0.未知支持库函数_2 ())
        赋值 (出题窗口..内容, 1.未知支持库函数_2 ())
        赋值 (出题窗口..内容, 2.未知支持库函数_2 ())
        赋值 (出题窗口..内容, 3.未知支持库函数_2 ())
        赋值 (出题窗口..内容, 4.未知支持库函数_2 ())
        赋值 (出题窗口..内容, 5.未知支持库函数_2 ())
        赋值 (出题窗口..内容, 6.未知支持库函数_2 ())
        赋值 (出题窗口..内容, 7.未知支持库函数_2 ())
        赋值 (出题窗口..内容, 8.未知支持库函数_2 ())
        赋值 (出题窗口..内容, 9.未知支持库函数_2 ())
        赋值 (出题窗口..内容, 10.未知支持库函数_2 ())
        
         ' .如果 (等于 (.内容, “单项选择”))
             ' 出题窗口.答题编辑框.内容 ＝ 取文本左边 (答案编辑框.内容, 1)
        .否则
            赋值 (出题窗口..内容, .内容)
        .如果结束
        
        赋值 (出题窗口..内容, 0.未知支持库函数_2 ())
        
        赋值 (行数, 未知支持库函数_1 ())
        赋值 (出题窗口..内容, 到文本 (相减 (行数, 1)))
        出题窗口._选项组合框_编辑内容被改变 ()
        .如果 (等于 (.选中, 真))
            出题窗口._保存按钮_被单击 ()
            导入单题窗口.激活 ()
            获取焦点 ()
        .否则
            
        .如果结束
        .如果 (等于 (.选中, 真))
            赋值 (., “”)
            赋值 (.内容, “”)
            赋值 (., “”)
        .否则
            
        .如果结束
        
        
        
    .如果结束
    
.否则
    出题窗口._加题_被选择 ()
    
    赋值 (出题窗口..内容, 0.未知支持库函数_2 ())
    赋值 (出题窗口..内容, 1.未知支持库函数_2 ())
    赋值 (出题窗口..内容, 2.未知支持库函数_2 ())
    赋值 (出题窗口..内容, 3.未知支持库函数_2 ())
    赋值 (出题窗口..内容, 4.未知支持库函数_2 ())
    赋值 (出题窗口..内容, 5.未知支持库函数_2 ())
    赋值 (出题窗口..内容, 6.未知支持库函数_2 ())
    赋值 (出题窗口..内容, 7.未知支持库函数_2 ())
    赋值 (出题窗口..内容, 8.未知支持库函数_2 ())
    赋值 (出题窗口..内容, 9.未知支持库函数_2 ())
    赋值 (出题窗口..内容, 10.未知支持库函数_2 ())
    
    .如果 (等于 (.内容, “单项选择”))
        赋值 (出题窗口..内容, 取文本左边 (.内容, 1))
    .否则
        赋值 (出题窗口..内容, .内容)
    .如果结束
    
    
    
    赋值 (出题窗口..内容, 0.未知支持库函数_2 ())
    
    赋值 (行数, 未知支持库函数_1 ())
    赋值 (出题窗口..内容, 到文本 (相减 (行数, 1)))
    出题窗口._选项组合框_编辑内容被改变 ()
    .如果 (等于 (.选中, 真))
        出题窗口._保存按钮_被单击 ()
    .否则
        
    .如果结束
    .如果 (等于 (.选中, 真))
        赋值 (., “”)
        赋值 (.内容, “”)
        赋值 (., “”)
    .否则
        
    .如果结束
    导入单题窗口.激活 ()
    获取焦点 ()
    
.如果结束


.子程序 _清空按钮_被单击, 空白型, , 
 ' 问题编辑框.内容 ＝ “”
赋值 (., “”)
赋值 (.内容, “”)
赋值 (., “”)

.子程序 _题型组合框_列表项被选择, 空白型, , 
赋值 (出题窗口..内容, .内容)
出题窗口._题型组合框_列表项被选择 ()

导入单题窗口.激活 ()
获取焦点 ()


.子程序 _导入单题窗口_创建完毕, 空白型, , 
赋值 (.内容, 出题窗口..内容)
 ' 如果 (问题选项超级编辑框.内容 ＝ “问题占一行。” ＋ #换行符 ＋ “各选项各占一行，其间不允许有空行。” 且 答案编辑框.内容 ＝ “答案占一行” ＋ #换行符 ＋ “提示占一行”)
赋值 (.禁止, 真)
 ' 粘贴到出题框按钮.禁止 ＝ 假


.子程序 _问题选项超级编辑框_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果 (等于 (., 相加 (“问题占一行。”, #换行符, “各选项各占一行，其间不允许有空行。”)))
    赋值 (., “”)
.否则
    
.如果结束


.子程序 _答案编辑框_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

_问题选项超级编辑框_失去焦点 ()
.如果 (等于 (.内容, “请输入规定范围内的大写字母。”))
    赋值 (.内容, “”)
.否则
    
.如果结束


.子程序 _问题选项超级编辑框_失去焦点, 空白型, , 
.局部变量 问题选项超级编辑框文本, 文本型, , , 
.局部变量 变量1, 整数型, , , 
.局部变量 各行文本, 文本型, , "0", 

.如果 (等于 (., “”))
     ' 问题选项超级编辑框.内容 ＝ “问题占一行。” ＋ #换行符 ＋ “各选项各占一行，其间不允许有空行。”
.否则
    赋值 (问题选项超级编辑框文本, .)
     ' .判断循环首 (不等于 (寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, #换行符), , 假), -1))
         ' 问题选项超级编辑框文本 ＝ 文本替换 (问题选项超级编辑框文本, 寻找文本 (问题选项超级编辑框文本, #换行符 ＋ #换行符, , 假), 取文本长度 (#换行符 ＋ #换行符), #换行符)
         ' 问题选项超级编辑框.内容 ＝ 问题选项超级编辑框文本
     ' .判断循环尾 ()
    .判断循环首 (不等于 (寻找文本 (问题选项超级编辑框文本, “  ”, , 假), -1))
        赋值 (问题选项超级编辑框文本, 文本替换 (问题选项超级编辑框文本, 寻找文本 (问题选项超级编辑框文本, “  ”, , 假), 取文本长度 (“  ”), #换行符))
        赋值 (., 问题选项超级编辑框文本)
        
    .判断循环尾 ()
    
    .判断循环首 (不等于 (寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “ ”), , 假), -1))
        赋值 (问题选项超级编辑框文本, 文本替换 (问题选项超级编辑框文本, 寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “ ”), , 假), 取文本长度 (相加 (#换行符, “ ”)), #换行符))
        赋值 (., 问题选项超级编辑框文本)
        
    .判断循环尾 ()
    
    .判断循环首 (不等于 (寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, #全角空格), , 假), -1))
        赋值 (问题选项超级编辑框文本, 文本替换 (问题选项超级编辑框文本, 寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, #全角空格), , 假), 取文本长度 (相加 (#换行符, #全角空格)), #换行符))
        赋值 (., 问题选项超级编辑框文本)
        
    .判断循环尾 ()
    
    
    .判断循环首 (不等于 (寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, #换行符), , 假), -1))
        赋值 (问题选项超级编辑框文本, 文本替换 (问题选项超级编辑框文本, 寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, #换行符), , 假), 取文本长度 (相加 (#换行符, #换行符)), #换行符))
        赋值 (., 问题选项超级编辑框文本)
    .判断循环尾 ()
    
    .如果 (不等于 (寻找文本 (问题选项超级编辑框文本, #换行符, 相减 (取文本长度 (问题选项超级编辑框文本), 1), 假), -1))
        赋值 (问题选项超级编辑框文本, 文本替换 (问题选项超级编辑框文本, 寻找文本 (问题选项超级编辑框文本, #换行符, 相减 (取文本长度 (问题选项超级编辑框文本), 1), 假), 取文本长度 (#换行符), ))
        赋值 (., 问题选项超级编辑框文本)
        
    .否则
        
    .如果结束
    
    
    
    
    .判断循环首 (不等于 (寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “A.”), , 假), -1))
        赋值 (问题选项超级编辑框文本, 文本替换 (问题选项超级编辑框文本, 寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “A.”), , 假), 取文本长度 (相加 (#换行符, “A.”)), #换行符))
        赋值 (., 问题选项超级编辑框文本)
        
    .判断循环尾 ()
    .判断循环首 (不等于 (寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “A．”), , 假), -1))
        赋值 (问题选项超级编辑框文本, 文本替换 (问题选项超级编辑框文本, 寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “A．”), , 假), 取文本长度 (相加 (#换行符, “A．”)), #换行符))
        赋值 (., 问题选项超级编辑框文本)
        
    .判断循环尾 ()
    
    .判断循环首 (不等于 (寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “A、”), , 假), -1))
        赋值 (问题选项超级编辑框文本, 文本替换 (问题选项超级编辑框文本, 寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “A、”), , 假), 取文本长度 (相加 (#换行符, “A、”)), #换行符))
        赋值 (., 问题选项超级编辑框文本)
        
    .判断循环尾 ()
    
    
    .判断循环首 (不等于 (寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “B.”), , 假), -1))
        赋值 (问题选项超级编辑框文本, 文本替换 (问题选项超级编辑框文本, 寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “B.”), , 假), 取文本长度 (相加 (#换行符, “B.”)), #换行符))
        赋值 (., 问题选项超级编辑框文本)
        
    .判断循环尾 ()
    .判断循环首 (不等于 (寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “B．”), , 假), -1))
        赋值 (问题选项超级编辑框文本, 文本替换 (问题选项超级编辑框文本, 寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “B．”), , 假), 取文本长度 (相加 (#换行符, “B．”)), #换行符))
        赋值 (., 问题选项超级编辑框文本)
        
    .判断循环尾 ()
    
    .判断循环首 (不等于 (寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “B、”), , 假), -1))
        赋值 (问题选项超级编辑框文本, 文本替换 (问题选项超级编辑框文本, 寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “B、”), , 假), 取文本长度 (相加 (#换行符, “B、”)), #换行符))
        赋值 (., 问题选项超级编辑框文本)
        
    .判断循环尾 ()
    .判断循环首 (不等于 (寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “C.”), , 假), -1))
        赋值 (问题选项超级编辑框文本, 文本替换 (问题选项超级编辑框文本, 寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “C.”), , 假), 取文本长度 (相加 (#换行符, “C.”)), #换行符))
        赋值 (., 问题选项超级编辑框文本)
        
    .判断循环尾 ()
    .判断循环首 (不等于 (寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “C．”), , 假), -1))
        赋值 (问题选项超级编辑框文本, 文本替换 (问题选项超级编辑框文本, 寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “C．”), , 假), 取文本长度 (相加 (#换行符, “C．”)), #换行符))
        赋值 (., 问题选项超级编辑框文本)
        
    .判断循环尾 ()
    
    .判断循环首 (不等于 (寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “C、”), , 假), -1))
        赋值 (问题选项超级编辑框文本, 文本替换 (问题选项超级编辑框文本, 寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “C、”), , 假), 取文本长度 (相加 (#换行符, “C、”)), #换行符))
        赋值 (., 问题选项超级编辑框文本)
        
    .判断循环尾 ()
    .判断循环首 (不等于 (寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “D.”), , 假), -1))
        赋值 (问题选项超级编辑框文本, 文本替换 (问题选项超级编辑框文本, 寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “D.”), , 假), 取文本长度 (相加 (#换行符, “D.”)), #换行符))
        赋值 (., 问题选项超级编辑框文本)
        
    .判断循环尾 ()
    .判断循环首 (不等于 (寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “D．”), , 假), -1))
        赋值 (问题选项超级编辑框文本, 文本替换 (问题选项超级编辑框文本, 寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “D．”), , 假), 取文本长度 (相加 (#换行符, “D．”)), #换行符))
        赋值 (., 问题选项超级编辑框文本)
        
    .判断循环尾 ()
    .判断循环首 (不等于 (寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “D、”), , 假), -1))
        赋值 (问题选项超级编辑框文本, 文本替换 (问题选项超级编辑框文本, 寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “D、”), , 假), 取文本长度 (相加 (#换行符, “D、”)), #换行符))
        赋值 (., 问题选项超级编辑框文本)
        
    .判断循环尾 ()
    .判断循环首 (不等于 (寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “E.”), , 假), -1))
        赋值 (问题选项超级编辑框文本, 文本替换 (问题选项超级编辑框文本, 寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “E.”), , 假), 取文本长度 (相加 (#换行符, “E.”)), #换行符))
        赋值 (., 问题选项超级编辑框文本)
        
    .判断循环尾 ()
    .判断循环首 (不等于 (寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “E．”), , 假), -1))
        赋值 (问题选项超级编辑框文本, 文本替换 (问题选项超级编辑框文本, 寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “E．”), , 假), 取文本长度 (相加 (#换行符, “E．”)), #换行符))
        赋值 (., 问题选项超级编辑框文本)
        
    .判断循环尾 ()
    .判断循环首 (不等于 (寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “E、”), , 假), -1))
        赋值 (问题选项超级编辑框文本, 文本替换 (问题选项超级编辑框文本, 寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “E、”), , 假), 取文本长度 (相加 (#换行符, “E、”)), #换行符))
        赋值 (., 问题选项超级编辑框文本)
        
    .判断循环尾 ()
    
    .判断循环首 (不等于 (寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “F.”), , 假), -1))
        赋值 (问题选项超级编辑框文本, 文本替换 (问题选项超级编辑框文本, 寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “F.”), , 假), 取文本长度 (相加 (#换行符, “F.”)), #换行符))
        赋值 (., 问题选项超级编辑框文本)
        
    .判断循环尾 ()
    .判断循环首 (不等于 (寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “F．”), , 假), -1))
        赋值 (问题选项超级编辑框文本, 文本替换 (问题选项超级编辑框文本, 寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “F．”), , 假), 取文本长度 (相加 (#换行符, “F．”)), #换行符))
        赋值 (., 问题选项超级编辑框文本)
        
    .判断循环尾 ()
    .判断循环首 (不等于 (寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “F、”), , 假), -1))
        赋值 (问题选项超级编辑框文本, 文本替换 (问题选项超级编辑框文本, 寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “F、”), , 假), 取文本长度 (相加 (#换行符, “F、”)), #换行符))
        赋值 (., 问题选项超级编辑框文本)
        
    .判断循环尾 ()
    .判断循环首 (不等于 (寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “G.”), , 假), -1))
        赋值 (问题选项超级编辑框文本, 文本替换 (问题选项超级编辑框文本, 寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “G.”), , 假), 取文本长度 (相加 (#换行符, “G.”)), #换行符))
        赋值 (., 问题选项超级编辑框文本)
        
    .判断循环尾 ()
    .判断循环首 (不等于 (寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “G．”), , 假), -1))
        赋值 (问题选项超级编辑框文本, 文本替换 (问题选项超级编辑框文本, 寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “G．”), , 假), 取文本长度 (相加 (#换行符, “G．”)), #换行符))
        赋值 (., 问题选项超级编辑框文本)
        
    .判断循环尾 ()
    .判断循环首 (不等于 (寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “G、”), , 假), -1))
        赋值 (问题选项超级编辑框文本, 文本替换 (问题选项超级编辑框文本, 寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “G、”), , 假), 取文本长度 (相加 (#换行符, “G、”)), #换行符))
        赋值 (., 问题选项超级编辑框文本)
        
    .判断循环尾 ()
    .判断循环首 (不等于 (寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “H.”), , 假), -1))
        赋值 (问题选项超级编辑框文本, 文本替换 (问题选项超级编辑框文本, 寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “H.”), , 假), 取文本长度 (相加 (#换行符, “H.”)), #换行符))
        赋值 (., 问题选项超级编辑框文本)
        
    .判断循环尾 ()
    .判断循环首 (不等于 (寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “H．”), , 假), -1))
        赋值 (问题选项超级编辑框文本, 文本替换 (问题选项超级编辑框文本, 寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “H．”), , 假), 取文本长度 (相加 (#换行符, “H．”)), #换行符))
        赋值 (., 问题选项超级编辑框文本)
        
    .判断循环尾 ()
    .判断循环首 (不等于 (寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “H、”), , 假), -1))
        赋值 (问题选项超级编辑框文本, 文本替换 (问题选项超级编辑框文本, 寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “H、”), , 假), 取文本长度 (相加 (#换行符, “H、”)), #换行符))
        赋值 (., 问题选项超级编辑框文本)
        
    .判断循环尾 ()
    .判断循环首 (不等于 (寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “I.”), , 假), -1))
        赋值 (问题选项超级编辑框文本, 文本替换 (问题选项超级编辑框文本, 寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “I.”), , 假), 取文本长度 (相加 (#换行符, “I.”)), #换行符))
        赋值 (., 问题选项超级编辑框文本)
        
    .判断循环尾 ()
    .判断循环首 (不等于 (寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “I．”), , 假), -1))
        赋值 (问题选项超级编辑框文本, 文本替换 (问题选项超级编辑框文本, 寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “I．”), , 假), 取文本长度 (相加 (#换行符, “I．”)), #换行符))
        赋值 (., 问题选项超级编辑框文本)
        
    .判断循环尾 ()
    .判断循环首 (不等于 (寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “I、”), , 假), -1))
        赋值 (问题选项超级编辑框文本, 文本替换 (问题选项超级编辑框文本, 寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “I、”), , 假), 取文本长度 (相加 (#换行符, “I、”)), #换行符))
        赋值 (., 问题选项超级编辑框文本)
        
    .判断循环尾 ()
    .判断循环首 (不等于 (寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “J.”), , 假), -1))
        赋值 (问题选项超级编辑框文本, 文本替换 (问题选项超级编辑框文本, 寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “J.”), , 假), 取文本长度 (相加 (#换行符, “J.”)), #换行符))
        赋值 (., 问题选项超级编辑框文本)
        
    .判断循环尾 ()
    .判断循环首 (不等于 (寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “J．”), , 假), -1))
        赋值 (问题选项超级编辑框文本, 文本替换 (问题选项超级编辑框文本, 寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “J．”), , 假), 取文本长度 (相加 (#换行符, “J．”)), #换行符))
        赋值 (., 问题选项超级编辑框文本)
        
    .判断循环尾 ()
    .判断循环首 (不等于 (寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “J、”), , 假), -1))
        赋值 (问题选项超级编辑框文本, 文本替换 (问题选项超级编辑框文本, 寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “J、”), , 假), 取文本长度 (相加 (#换行符, “J、”)), #换行符))
        赋值 (., 问题选项超级编辑框文本)
        
    .判断循环尾 ()
     ' 重定义数组 (各行文本, 假, 问题选项超级编辑框.取行数 ())
     ' .计次循环首 (取数组成员数 (各行文本), 变量1)
         ' 各行文本 [变量1] ＝ 问题选项超级编辑框.取行文本 (变量1 － 1)
     ' .计次循环尾 ()
     ' 问题选项超级编辑框.内容 ＝ “”
     ' .计次循环首 (取数组成员数 (各行文本), 变量1)
         ' .如果 (并且 (不等于 (取代码 (各行文本 [变量1], ), 13), 不等于 (取代码 (各行文本 [变量1], ), 10)))
             ' 问题选项超级编辑框.内容 ＝ 问题选项超级编辑框.内容 ＋ 各行文本 [变量1]
        .否则
            
        .如果结束
        
     ' .计次循环尾 ()
 ' .如果结束


.子程序 _答案编辑框_失去焦点, 空白型, , 
 ' 如果 (答案编辑框.内容 ＝ “”)
 ' 答案编辑框.内容 ＝ “答案占一行” ＋ #换行符 ＋ “提示占一行”



.子程序 _问题选项超级编辑框_内容被改变, 空白型, , 
 ' .如果 (等于 (., 相加 (“问题占一行。”, #换行符, “各选项各占一行，其间不允许有空行。”)))
     ' 问题选项超级编辑框.内容 ＝ “”
.否则
    
.如果结束
.如果 (或者 (等于 (., “”), 等于 (.内容, “”), 等于 (.内容, “请输入规定范围内的大写字母。”)))
    赋值 (.禁止, 真)
.否则
    赋值 (.禁止, 假)
.如果结束
赋值 (.标题, 到文本 (相减 (未知支持库函数_1 (), 1)))

.子程序 _答案编辑框_获得焦点, 空白型, , 
.局部变量 变量1, 整数型, , , 

 ' 如果 (答案编辑框.内容 ＝ “答案占一行” ＋ #换行符 ＋ “提示占一行”)
 ' ' 答案提示超级编辑框.被选择字符数 ＝ -1
 ' 答案编辑框.内容 ＝ “”
.计次循环首 (未知支持库函数_1 (), 变量1)
    调试输出 (相减 (变量1, 1).未知支持库函数_2 ())
    
     ' 调试输出 (问题选项超级编辑框.取行文本 (变量1 － 1) ＋ “  文本长度：” ＋ 到文本 (取文本长度 (问题选项超级编辑框.取行文本 (变量1 － 1))))
    .如果 (等于 (相减 (变量1, 1).未知支持库函数_2 (), “”))
        信息框 (“问题选项编辑框中仍存在空行，请手动删除！”, 0, 相减 (变量1, 1).未知支持库函数_2 ())
        获取焦点 ()
    .否则
        
    .如果结束
    
.计次循环尾 ()



.子程序 _答案编辑框_内容被改变, 空白型, , 
.如果 (或者 (等于 (.内容, “”), 等于 (.内容, “请输入规定范围内的大写字母。”), 等于 (., “”)))
    赋值 (.禁止, 真)
.否则
    赋值 (.禁止, 假)
.如果结束
.如果 (或者 (等于 (.内容, #单项选择), 等于 (.内容, #多项选择), 并且 (等于 (.内容, #材料分析), 大于 (相减 (未知支持库函数_1 (), 1), 0))))
    赋值 (.转换方式, 2)
    .如果 (大于 (取代码 (.内容, 1), 相减 (相加 (64, 未知支持库函数_1 ()), 1)))
        鸣叫 ()
        赋值 (.内容, “请输入规定范围内的大写字母。”)
        赋值 (.被选择字符数, -1)
    .否则
        
    .如果结束
    
.否则
    赋值 (.转换方式, 0)
.如果结束
 ' .如果 (并且 (等于 (.内容, #单项选择), 大于或等于 (取文本长度 (.内容), 2)))
     ' 答案编辑框.内容 ＝ 取文本左边 (答案编辑框.内容, 1)
.否则
    
.如果结束


.子程序 _问题选项超级编辑框_被双击, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 问题选项超级编辑框文本, 文本型, , , 

赋值 (问题选项超级编辑框文本, .)
 ' .判断循环首 (不等于 (寻找文本 (问题选项超级编辑框文本, “ ”, , 假), -1))
     ' 问题选项超级编辑框文本 ＝ 文本替换 (问题选项超级编辑框文本, 寻找文本 (问题选项超级编辑框文本, “ ”, , 假), 取文本长度 (“ ”), )
     ' 问题选项超级编辑框.内容 ＝ 问题选项超级编辑框文本
    
 ' .判断循环尾 ()
.判断循环首 (不等于 (寻找文本 (问题选项超级编辑框文本, “  ”, , 假), -1))
    赋值 (问题选项超级编辑框文本, 文本替换 (问题选项超级编辑框文本, 寻找文本 (问题选项超级编辑框文本, “  ”, , 假), 取文本长度 (“  ”), #换行符))
    赋值 (., 问题选项超级编辑框文本)
    
.判断循环尾 ()

.判断循环首 (不等于 (寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “ ”), , 假), -1))
    赋值 (问题选项超级编辑框文本, 文本替换 (问题选项超级编辑框文本, 寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “ ”), , 假), 取文本长度 (相加 (#换行符, “ ”)), #换行符))
    赋值 (., 问题选项超级编辑框文本)
    
.判断循环尾 ()

.判断循环首 (不等于 (寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, #全角空格), , 假), -1))
    赋值 (问题选项超级编辑框文本, 文本替换 (问题选项超级编辑框文本, 寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, #全角空格), , 假), 取文本长度 (相加 (#换行符, #全角空格)), #换行符))
    赋值 (., 问题选项超级编辑框文本)
    
.判断循环尾 ()


.判断循环首 (不等于 (寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, #换行符), , 假), -1))
    赋值 (问题选项超级编辑框文本, 文本替换 (问题选项超级编辑框文本, 寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, #换行符), , 假), 取文本长度 (相加 (#换行符, #换行符)), #换行符))
    赋值 (., 问题选项超级编辑框文本)
.判断循环尾 ()

.如果 (不等于 (寻找文本 (问题选项超级编辑框文本, #换行符, 相减 (取文本长度 (问题选项超级编辑框文本), 1), 假), -1))
    赋值 (问题选项超级编辑框文本, 文本替换 (问题选项超级编辑框文本, 寻找文本 (问题选项超级编辑框文本, #换行符, 相减 (取文本长度 (问题选项超级编辑框文本), 1), 假), 取文本长度 (#换行符), ))
    赋值 (., 问题选项超级编辑框文本)
    
.否则
    
.如果结束

.判断循环首 (不等于 (寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “A.”), , 假), -1))
    赋值 (问题选项超级编辑框文本, 文本替换 (问题选项超级编辑框文本, 寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “A.”), , 假), 取文本长度 (相加 (#换行符, “A.”)), #换行符))
    赋值 (., 问题选项超级编辑框文本)
    
.判断循环尾 ()
.判断循环首 (不等于 (寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “A．”), , 假), -1))
    赋值 (问题选项超级编辑框文本, 文本替换 (问题选项超级编辑框文本, 寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “A．”), , 假), 取文本长度 (相加 (#换行符, “A．”)), #换行符))
    赋值 (., 问题选项超级编辑框文本)
    
.判断循环尾 ()

.判断循环首 (不等于 (寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “A、”), , 假), -1))
    赋值 (问题选项超级编辑框文本, 文本替换 (问题选项超级编辑框文本, 寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “A、”), , 假), 取文本长度 (相加 (#换行符, “A、”)), #换行符))
    赋值 (., 问题选项超级编辑框文本)
    
.判断循环尾 ()


.判断循环首 (不等于 (寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “B.”), , 假), -1))
    赋值 (问题选项超级编辑框文本, 文本替换 (问题选项超级编辑框文本, 寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “B.”), , 假), 取文本长度 (相加 (#换行符, “B.”)), #换行符))
    赋值 (., 问题选项超级编辑框文本)
    
.判断循环尾 ()
.判断循环首 (不等于 (寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “B．”), , 假), -1))
    赋值 (问题选项超级编辑框文本, 文本替换 (问题选项超级编辑框文本, 寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “B．”), , 假), 取文本长度 (相加 (#换行符, “B．”)), #换行符))
    赋值 (., 问题选项超级编辑框文本)
    
.判断循环尾 ()

.判断循环首 (不等于 (寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “B、”), , 假), -1))
    赋值 (问题选项超级编辑框文本, 文本替换 (问题选项超级编辑框文本, 寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “B、”), , 假), 取文本长度 (相加 (#换行符, “B、”)), #换行符))
    赋值 (., 问题选项超级编辑框文本)
    
.判断循环尾 ()
.判断循环首 (不等于 (寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “C.”), , 假), -1))
    赋值 (问题选项超级编辑框文本, 文本替换 (问题选项超级编辑框文本, 寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “C.”), , 假), 取文本长度 (相加 (#换行符, “C.”)), #换行符))
    赋值 (., 问题选项超级编辑框文本)
    
.判断循环尾 ()
.判断循环首 (不等于 (寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “C．”), , 假), -1))
    赋值 (问题选项超级编辑框文本, 文本替换 (问题选项超级编辑框文本, 寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “C．”), , 假), 取文本长度 (相加 (#换行符, “C．”)), #换行符))
    赋值 (., 问题选项超级编辑框文本)
    
.判断循环尾 ()

.判断循环首 (不等于 (寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “C、”), , 假), -1))
    赋值 (问题选项超级编辑框文本, 文本替换 (问题选项超级编辑框文本, 寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “C、”), , 假), 取文本长度 (相加 (#换行符, “C、”)), #换行符))
    赋值 (., 问题选项超级编辑框文本)
    
.判断循环尾 ()
.判断循环首 (不等于 (寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “D.”), , 假), -1))
    赋值 (问题选项超级编辑框文本, 文本替换 (问题选项超级编辑框文本, 寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “D.”), , 假), 取文本长度 (相加 (#换行符, “D.”)), #换行符))
    赋值 (., 问题选项超级编辑框文本)
    
.判断循环尾 ()
.判断循环首 (不等于 (寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “D．”), , 假), -1))
    赋值 (问题选项超级编辑框文本, 文本替换 (问题选项超级编辑框文本, 寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “D．”), , 假), 取文本长度 (相加 (#换行符, “D．”)), #换行符))
    赋值 (., 问题选项超级编辑框文本)
    
.判断循环尾 ()
.判断循环首 (不等于 (寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “D、”), , 假), -1))
    赋值 (问题选项超级编辑框文本, 文本替换 (问题选项超级编辑框文本, 寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “D、”), , 假), 取文本长度 (相加 (#换行符, “D、”)), #换行符))
    赋值 (., 问题选项超级编辑框文本)
    
.判断循环尾 ()
.判断循环首 (不等于 (寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “E.”), , 假), -1))
    赋值 (问题选项超级编辑框文本, 文本替换 (问题选项超级编辑框文本, 寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “E.”), , 假), 取文本长度 (相加 (#换行符, “E.”)), #换行符))
    赋值 (., 问题选项超级编辑框文本)
    
.判断循环尾 ()
.判断循环首 (不等于 (寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “E．”), , 假), -1))
    赋值 (问题选项超级编辑框文本, 文本替换 (问题选项超级编辑框文本, 寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “E．”), , 假), 取文本长度 (相加 (#换行符, “E．”)), #换行符))
    赋值 (., 问题选项超级编辑框文本)
    
.判断循环尾 ()
.判断循环首 (不等于 (寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “E、”), , 假), -1))
    赋值 (问题选项超级编辑框文本, 文本替换 (问题选项超级编辑框文本, 寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “E、”), , 假), 取文本长度 (相加 (#换行符, “E、”)), #换行符))
    赋值 (., 问题选项超级编辑框文本)
    
.判断循环尾 ()

.判断循环首 (不等于 (寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “F.”), , 假), -1))
    赋值 (问题选项超级编辑框文本, 文本替换 (问题选项超级编辑框文本, 寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “F.”), , 假), 取文本长度 (相加 (#换行符, “F.”)), #换行符))
    赋值 (., 问题选项超级编辑框文本)
    
.判断循环尾 ()
.判断循环首 (不等于 (寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “F．”), , 假), -1))
    赋值 (问题选项超级编辑框文本, 文本替换 (问题选项超级编辑框文本, 寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “F．”), , 假), 取文本长度 (相加 (#换行符, “F．”)), #换行符))
    赋值 (., 问题选项超级编辑框文本)
    
.判断循环尾 ()
.判断循环首 (不等于 (寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “F、”), , 假), -1))
    赋值 (问题选项超级编辑框文本, 文本替换 (问题选项超级编辑框文本, 寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “F、”), , 假), 取文本长度 (相加 (#换行符, “F、”)), #换行符))
    赋值 (., 问题选项超级编辑框文本)
    
.判断循环尾 ()
.判断循环首 (不等于 (寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “G.”), , 假), -1))
    赋值 (问题选项超级编辑框文本, 文本替换 (问题选项超级编辑框文本, 寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “G.”), , 假), 取文本长度 (相加 (#换行符, “G.”)), #换行符))
    赋值 (., 问题选项超级编辑框文本)
    
.判断循环尾 ()
.判断循环首 (不等于 (寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “G．”), , 假), -1))
    赋值 (问题选项超级编辑框文本, 文本替换 (问题选项超级编辑框文本, 寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “G．”), , 假), 取文本长度 (相加 (#换行符, “G．”)), #换行符))
    赋值 (., 问题选项超级编辑框文本)
    
.判断循环尾 ()
.判断循环首 (不等于 (寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “G、”), , 假), -1))
    赋值 (问题选项超级编辑框文本, 文本替换 (问题选项超级编辑框文本, 寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “G、”), , 假), 取文本长度 (相加 (#换行符, “G、”)), #换行符))
    赋值 (., 问题选项超级编辑框文本)
    
.判断循环尾 ()
.判断循环首 (不等于 (寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “H.”), , 假), -1))
    赋值 (问题选项超级编辑框文本, 文本替换 (问题选项超级编辑框文本, 寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “H.”), , 假), 取文本长度 (相加 (#换行符, “H.”)), #换行符))
    赋值 (., 问题选项超级编辑框文本)
    
.判断循环尾 ()
.判断循环首 (不等于 (寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “H．”), , 假), -1))
    赋值 (问题选项超级编辑框文本, 文本替换 (问题选项超级编辑框文本, 寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “H．”), , 假), 取文本长度 (相加 (#换行符, “H．”)), #换行符))
    赋值 (., 问题选项超级编辑框文本)
    
.判断循环尾 ()
.判断循环首 (不等于 (寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “H、”), , 假), -1))
    赋值 (问题选项超级编辑框文本, 文本替换 (问题选项超级编辑框文本, 寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “H、”), , 假), 取文本长度 (相加 (#换行符, “H、”)), #换行符))
    赋值 (., 问题选项超级编辑框文本)
    
.判断循环尾 ()
.判断循环首 (不等于 (寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “I.”), , 假), -1))
    赋值 (问题选项超级编辑框文本, 文本替换 (问题选项超级编辑框文本, 寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “I.”), , 假), 取文本长度 (相加 (#换行符, “I.”)), #换行符))
    赋值 (., 问题选项超级编辑框文本)
    
.判断循环尾 ()
.判断循环首 (不等于 (寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “I．”), , 假), -1))
    赋值 (问题选项超级编辑框文本, 文本替换 (问题选项超级编辑框文本, 寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “I．”), , 假), 取文本长度 (相加 (#换行符, “I．”)), #换行符))
    赋值 (., 问题选项超级编辑框文本)
    
.判断循环尾 ()
.判断循环首 (不等于 (寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “I、”), , 假), -1))
    赋值 (问题选项超级编辑框文本, 文本替换 (问题选项超级编辑框文本, 寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “I、”), , 假), 取文本长度 (相加 (#换行符, “I、”)), #换行符))
    赋值 (., 问题选项超级编辑框文本)
    
.判断循环尾 ()
.判断循环首 (不等于 (寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “J.”), , 假), -1))
    赋值 (问题选项超级编辑框文本, 文本替换 (问题选项超级编辑框文本, 寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “J.”), , 假), 取文本长度 (相加 (#换行符, “J.”)), #换行符))
    赋值 (., 问题选项超级编辑框文本)
    
.判断循环尾 ()
.判断循环首 (不等于 (寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “J．”), , 假), -1))
    赋值 (问题选项超级编辑框文本, 文本替换 (问题选项超级编辑框文本, 寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “J．”), , 假), 取文本长度 (相加 (#换行符, “J．”)), #换行符))
    赋值 (., 问题选项超级编辑框文本)
    
.判断循环尾 ()
.判断循环首 (不等于 (寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “J、”), , 假), -1))
    赋值 (问题选项超级编辑框文本, 文本替换 (问题选项超级编辑框文本, 寻找文本 (问题选项超级编辑框文本, 相加 (#换行符, “J、”), , 假), 取文本长度 (相加 (#换行符, “J、”)), #换行符))
    赋值 (., 问题选项超级编辑框文本)
    
.判断循环尾 ()



.子程序 _按钮1_被单击, 空白型, , 
赋值 (., “”)
未知支持库函数_20 ()


.子程序 _问题选项超级编辑框_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (“输入问题和选择项。问题、各选项各占一行，不许有空行。”)


.子程序 _按钮1_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (“从 [剪贴板] 粘贴到 [问题选项编辑框]。”)

.子程序 _答案编辑框_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (“输入答案。”)

.子程序 _提示超级编辑框_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (“输入考试时的提示信息。”)

.子程序 _题型组合框_鼠标右键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (“显示及选择 [题目类型]。”)

.子程序 _清空按钮_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (“清空各个输入框。”)

.子程序 _粘贴到出题窗口按钮_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (“粘贴到出题窗口。”)

.子程序 _粘贴后保存选择框_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (“粘贴并保存到题库。”)

.子程序 _粘贴后清空选择框_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (“粘贴后清空本窗口各编辑框信息。”)

.窗口程序集 自创输入框窗口程序集, , , 

.子程序 _自创输入框窗口_创建完毕, 空白型, , 
.局部变量 循环变量, 整数型, , , 

赋值 (.内容, 输入框提示信息)
赋值 (.内容, 全局标准答案)
赋值 (.内容, 全局用户答案)
赋值 (.内容, 初始文本)
初始文本.加入项目 ()
.计次循环首 (到整数 (初始文本), 循环变量)
    到文本 (相减 (到整数 (初始文本), 循环变量)).加入项目 ()
.计次循环尾 ()
获取焦点 ()
赋值 (.被选择字符数, -1)

.子程序 _确定按钮_被单击, 空白型, , 
.如果 (大于或等于 (到整数 (初始文本), 到整数 (.内容)))
    赋值 (该题得分, 到整数 (.内容))
    销毁 ()
.否则
    信息框 (“不能超越 满分 给分！”, 0, “出错啦”)
    赋值 (.内容, 初始文本)
    获取焦点 ()
    赋值 (.被选择字符数, -1)
    
.如果结束




.子程序 _取消按钮_被单击, 空白型, , 
赋值 (该题得分, 0)
销毁 ()

.子程序 _给1分_被选择, 空白型, , 
.局部变量 得分, 整数型, , , 

赋值 (得分, 1)
连续赋值 (假, .禁止, .禁止, .禁止, .禁止, .禁止)
赋值 (.内容, 到文本 (相加 (到整数 (.内容), 1)))
到文本 (得分).加入项目 ()
赋值 (.内容, 到文本 (相加 (到整数 (.内容), 1)))
赋值 (.内容, .内容)

.子程序 _给2分_被选择, 空白型, , 
.局部变量 得分, 整数型, , , 

赋值 (得分, 2)
连续赋值 (假, .禁止, .禁止, .禁止, .禁止, .禁止)
赋值 (.内容, 到文本 (相加 (到整数 (.内容), 2)))
到文本 (得分).加入项目 ()
赋值 (.内容, 到文本 (相加 (到整数 (.内容), 1)))
赋值 (.内容, .内容)

.子程序 _给3分_被选择, 空白型, , 
.局部变量 得分, 整数型, , , 

赋值 (得分, 3)
连续赋值 (假, .禁止, .禁止, .禁止, .禁止, .禁止)
赋值 (.内容, 到文本 (相加 (到整数 (.内容), 3)))
到文本 (得分).加入项目 ()
赋值 (.内容, 到文本 (相加 (到整数 (.内容), 1)))
赋值 (.内容, .内容)

.子程序 _给4分_被选择, 空白型, , 
.局部变量 得分, 整数型, , , 

赋值 (得分, 4)
连续赋值 (假, .禁止, .禁止, .禁止, .禁止, .禁止)
赋值 (.内容, 到文本 (相加 (到整数 (.内容), 4)))
到文本 (得分).加入项目 ()
赋值 (.内容, 到文本 (相加 (到整数 (.内容), 1)))
赋值 (.内容, .内容)

.子程序 _给5分_被选择, 空白型, , 
.局部变量 得分, 整数型, , , 

赋值 (得分, 5)
连续赋值 (假, .禁止, .禁止, .禁止, .禁止, .禁止)
赋值 (.内容, 到文本 (相加 (到整数 (.内容), 5)))
到文本 (得分).加入项目 ()
赋值 (.内容, 到文本 (相加 (到整数 (.内容), 1)))
赋值 (.内容, .内容)

.子程序 _给6分_被选择, 空白型, , 
.局部变量 得分, 整数型, , , 

赋值 (得分, 6)
连续赋值 (假, .禁止, .禁止, .禁止, .禁止, .禁止)
赋值 (.内容, 到文本 (相加 (到整数 (.内容), 6)))
到文本 (得分).加入项目 ()
赋值 (.内容, 到文本 (相加 (到整数 (.内容), 1)))
赋值 (.内容, .内容)

.子程序 _给7分_被选择, 空白型, , 
.局部变量 得分, 整数型, , , 

赋值 (得分, 7)
连续赋值 (假, .禁止, .禁止, .禁止, .禁止, .禁止)
赋值 (.内容, 到文本 (相加 (到整数 (.内容), 7)))
到文本 (得分).加入项目 ()
赋值 (.内容, 到文本 (相加 (到整数 (.内容), 1)))
赋值 (.内容, .内容)

.子程序 _给8分_被选择, 空白型, , 
.局部变量 得分, 整数型, , , 

赋值 (得分, 8)
连续赋值 (假, .禁止, .禁止, .禁止, .禁止, .禁止)
赋值 (.内容, 到文本 (相加 (到整数 (.内容), 8)))
到文本 (得分).加入项目 ()
赋值 (.内容, 到文本 (相加 (到整数 (.内容), 1)))
赋值 (.内容, .内容)

.子程序 _给9分_被选择, 空白型, , 
.局部变量 得分, 整数型, , , 

赋值 (得分, 9)
连续赋值 (假, .禁止, .禁止, .禁止, .禁止, .禁止)
赋值 (.内容, 到文本 (相加 (到整数 (.内容), 9)))
到文本 (得分).加入项目 ()
赋值 (.内容, 到文本 (相加 (到整数 (.内容), 1)))
赋值 (.内容, .内容)

.子程序 _给10分_被选择, 空白型, , 
.局部变量 得分, 整数型, , , 

赋值 (得分, 10)
连续赋值 (假, .禁止, .禁止, .禁止, .禁止, .禁止)
赋值 (.内容, 到文本 (相加 (到整数 (.内容), 10)))
到文本 (得分).加入项目 ()
赋值 (.内容, 到文本 (相加 (到整数 (.内容), 1)))
赋值 (.内容, .内容)

.子程序 _给11分_被选择, 空白型, , 
.局部变量 得分, 整数型, , , 

赋值 (得分, 11)
连续赋值 (假, .禁止, .禁止, .禁止, .禁止, .禁止)
赋值 (.内容, 到文本 (相加 (到整数 (.内容), 11)))
到文本 (得分).加入项目 ()
赋值 (.内容, 到文本 (相加 (到整数 (.内容), 1)))
赋值 (.内容, .内容)

.子程序 _给12分_被选择, 空白型, , 
.局部变量 得分, 整数型, , , 

赋值 (得分, 12)
连续赋值 (假, .禁止, .禁止, .禁止, .禁止, .禁止)
赋值 (.内容, 到文本 (相加 (到整数 (.内容), 12)))
到文本 (得分).加入项目 ()
赋值 (.内容, 到文本 (相加 (到整数 (.内容), 1)))
赋值 (.内容, .内容)

.子程序 _给13分_被选择, 空白型, , 
.局部变量 得分, 整数型, , , 

赋值 (得分, 13)
连续赋值 (假, .禁止, .禁止, .禁止, .禁止, .禁止)
赋值 (.内容, 到文本 (相加 (到整数 (.内容), 13)))
到文本 (得分).加入项目 ()
赋值 (.内容, 到文本 (相加 (到整数 (.内容), 1)))
赋值 (.内容, .内容)

.子程序 _给14分_被选择, 空白型, , 
.局部变量 得分, 整数型, , , 

赋值 (得分, 14)
连续赋值 (假, .禁止, .禁止, .禁止, .禁止, .禁止)
赋值 (.内容, 到文本 (相加 (到整数 (.内容), 14)))
到文本 (得分).加入项目 ()
赋值 (.内容, 到文本 (相加 (到整数 (.内容), 1)))
赋值 (.内容, .内容)

.子程序 _给15分_被选择, 空白型, , 
.局部变量 得分, 整数型, , , 

赋值 (得分, 15)
连续赋值 (假, .禁止, .禁止, .禁止, .禁止, .禁止)
赋值 (.内容, 到文本 (相加 (到整数 (.内容), 15)))
到文本 (得分).加入项目 ()
赋值 (.内容, 到文本 (相加 (到整数 (.内容), 1)))
赋值 (.内容, .内容)

.子程序 _给16分_被选择, 空白型, , 
.局部变量 得分, 整数型, , , 

赋值 (得分, 16)
连续赋值 (假, .禁止, .禁止, .禁止, .禁止, .禁止)
赋值 (.内容, 到文本 (相加 (到整数 (.内容), 16)))
到文本 (得分).加入项目 ()
赋值 (.内容, 到文本 (相加 (到整数 (.内容), 1)))
赋值 (.内容, .内容)

.子程序 _给17分_被选择, 空白型, , 
.局部变量 得分, 整数型, , , 

赋值 (得分, 17)
连续赋值 (假, .禁止, .禁止, .禁止, .禁止, .禁止)
赋值 (.内容, 到文本 (相加 (到整数 (.内容), 17)))
到文本 (得分).加入项目 ()
赋值 (.内容, 到文本 (相加 (到整数 (.内容), 1)))
赋值 (.内容, .内容)

.子程序 _给18分_被选择, 空白型, , 
.局部变量 得分, 整数型, , , 

赋值 (得分, 18)

连续赋值 (假, .禁止, .禁止, .禁止, .禁止, .禁止)
赋值 (.内容, 到文本 (相加 (到整数 (.内容), 18)))
到文本 (得分).加入项目 ()
赋值 (.内容, 到文本 (相加 (到整数 (.内容), 1)))
赋值 (.内容, .内容)

.子程序 _给19分_被选择, 空白型, , 
.局部变量 得分, 整数型, , , 

赋值 (得分, 19)

连续赋值 (假, .禁止, .禁止, .禁止, .禁止, .禁止)
赋值 (.内容, 到文本 (相加 (到整数 (.内容), 19)))
到文本 (得分).加入项目 ()
赋值 (.内容, 到文本 (相加 (到整数 (.内容), 1)))
赋值 (.内容, .内容)

.子程序 _给20分_被选择, 空白型, , 
.局部变量 得分, 整数型, , , 

赋值 (得分, 20)

连续赋值 (假, .禁止, .禁止, .禁止, .禁止, .禁止)
赋值 (.内容, 到文本 (相加 (到整数 (.内容), 20)))
到文本 (得分).加入项目 ()
赋值 (.内容, 到文本 (相加 (到整数 (.内容), 1)))
赋值 (.内容, .内容)

.子程序 _本题清零_被选择, 空白型, , 
赋值 (.内容, “0”)
清空 ()
赋值 (.内容, “0”)
赋值 (.内容, .内容)

.子程序 _其它分数_被选择, 空白型, , 
.局部变量 得分, 文本型, , , 

.如果 (等于 (输入框 (“其它分数”, “其它分数”, “0”, 得分, 2), 真))
    连续赋值 (假, .禁止, .禁止, .禁止, .禁止, .禁止)
    赋值 (.内容, 到文本 (相加 (到整数 (.内容), 到整数 (得分))))
    到文本 (得分).加入项目 ()
    赋值 (.内容, 到文本 (相加 (到整数 (.内容), 1)))
.否则
    
.如果结束


.子程序 _用户答案编辑框_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

弹出菜单 ()


.窗口程序集 历次成绩窗口程序集, , , 

.子程序 _关闭按钮_被单击, 空白型, , 
销毁 ()


.子程序 _历次成绩窗口_创建完毕, 空白型, , 
.局部变量 变量, 整数型, , , 
.局部变量 成绩记录库, 文本型, , , 

赋值 (成绩记录库, 相加 (取运行目录 (), “\”, 考生姓名, “\成绩记录.edb”))

.如果 (等于 (是否已打开 (成绩记录库), 假))
    打开 (成绩记录库, #成绩记录, , , , , )
.否则
    置当前库 (#成绩记录)
.如果结束

全部删除 ()
到首记录 ()
.计次循环首 (取记录数 (), 变量)
    
    相减 (变量, 1).插入表项 (到文本 (读 (#考试时间)), , , 0, )
     ' 超级列表框1.置标题 (变量 － 1, 0, 读 (#账号))
    相减 (变量, 1).置标题 (1, 读 (#考试题库))
    相减 (变量, 1).置标题 (2, 到文本 (读 (#正确分)))
    相减 (变量, 1).置标题 (3, 到文本 (读 (#聪明分)))
     ' 超级列表框1.插入表项 (变量 － 1, 读 (#账号), , , 0, )
     ' 超级列表框1.插入表项 (变量 － 1, 读 (#密码), , , 1, )
     ' 超级列表框1.插入表项 (变量 － 1, 读 (#身份), , , 2, )
     ' 超级列表框1.插入表项 (变量 － 1, 到文本 (读 (#默认)), , , 3, )
     ' 超级列表框1.插入表项 (变量 － 1, 到文本 (读 (#记密)), , , 4, )
    跳过 ()
.计次循环尾 ()
_到曲线按钮_被单击 ()

.子程序 _删除按钮_被单击, 空白型, , 
.删除表项 (.)
保存删除结果 ()
_到曲线按钮_被单击 ()

.子程序 _到曲线按钮_被单击, 空白型, , 
.局部变量 循环变量, 整数型, , , 

赋值 (., 0)
赋值 (., 0)
赋值 (., 取记录数 ())
赋值 (., 取记录数 ())
 ' 信息框 (到文本 (取记录数 ()), 0, )
到首记录 ()
.计次循环首 (取记录数 (), 循环变量)
    
    赋值 (., 相减 (循环变量, 1))
    赋值 (., 到文本 (循环变量))
    赋值 (., 到数值 (读 (#正确分)))
    
    赋值 (., 相减 (循环变量, 1))
    赋值 (., 到文本 (循环变量))
    赋值 (., 到数值 (读 (#聪明分)))
    
    
    跳过 ()
.计次循环尾 ()


.子程序 保存删除结果, 空白型, , 
.局部变量 循环变量, 整数型, , , 

 ' 管理员数 ＝ 0
 ' 默认数 ＝ 0
 ' .计次循环首 (取表项数 (), 循环变量)
     ' .如果 (等于 (相减 (循环变量, 1).取标题 (2), “管理员”))
         ' 管理员数 ＝ 管理员数 ＋ 1
        
    .否则
        
    .如果结束
     ' .如果 (等于 (相减 (循环变量, 1).取标题 (3), “真”))
         ' 默认数 ＝ 默认数 ＋ 1
        
    .否则
        
    .如果结束
    
.计次循环尾 ()
 ' .如果 (或者 (不等于 (1), 大于 (1)))
     ' 信息框 (“管理员数不能不为1个或默认登录数不能大于1个。”, 0, )
    
.否则
    .如果 (等于 (清空 (), 真))
        .计次循环首 (取表项数 (), 循环变量)
            加空记录 ()
            写 (#考试时间, 到时间 (相减 (循环变量, 1).取标题 (0)))
            写 (#考试题库, 相减 (循环变量, 1).取标题 (1))
            写 (#正确分, 到整数 (相减 (循环变量, 1).取标题 (2)))
            写 (#聪明分, 到整数 (相减 (循环变量, 1).取标题 (3)))
            
        .计次循环尾 ()
         ' 信息框 (“保存成功！”, 0, )
    .否则
        
    .如果结束
    
.如果结束


.子程序 _超级列表框_右键单击表项, 空白型, , 
弹出菜单 ()


.子程序 _删除_被选择, 空白型, , 
_删除按钮_被单击 ()


.子程序 _历次成绩窗口_将被销毁, 空白型, , 
关闭 ()


.窗口程序集 考试窗口程序集, , , 

.程序集变量 临时图片A, 字节集, , , 
.程序集变量 临时图片B, 字节集, , , 
.程序集变量 临时图片E, 字节集, , , 
.程序集变量 临时图片D, 字节集, , , 
.程序集变量 临时图片C, 字节集, , , 
.程序集变量 临时图片0, 字节集, , , 
.程序集变量 临时图片A路径, 文本型, , , 
.程序集变量 临时图片B路径, 文本型, , , 
.程序集变量 临时图片C路径, 文本型, , , 
.程序集变量 临时图片D路径, 文本型, , , 
.程序集变量 临时图片E路径, 文本型, , , 
.程序集变量 临时图片0路径, 文本型, , , 
.程序集变量 记录上一条索引值, 整数型, , , 
.程序集变量 单项选择当前选择, 文本型, , , 
.程序集变量 提示信息, 文本型, , , 
.程序集变量 答案, 文本型, , , 
.程序集变量 该题正确, 逻辑型, , , 
.程序集变量 临时答案, 文本型, , , 
.程序集变量 材料文本文件号, 整数型, , , 
.程序集变量 改变答题编辑框内容, 逻辑型, , , 
.程序集变量 填空问题文本, 文本型, , , 
.程序集变量 固定长度文本, 文本型, , , 
.程序集变量 当前位置, 整数型, , , 
.程序集变量 上一位置, 整数型, , , 
.程序集变量 已做题数, 整数型, , , 
.程序集变量 加题, 逻辑型, , , 
.程序集变量 题目副本, 题目, , , 
.程序集变量 图片路径, 文本型, , , 
.程序集变量 临时图片J, 字节集, , , 
.程序集变量 临时图片J路径, 文本型, , , 
.程序集变量 临时图片I, 字节集, , , 
.程序集变量 临时图片I路径, 文本型, , , 
.程序集变量 临时图片H, 字节集, , , 
.程序集变量 临时图片H路径, 文本型, , , 
.程序集变量 临时图片G, 字节集, , , 
.程序集变量 临时图片G路径, 文本型, , , 
.程序集变量 临时图片F, 字节集, , , 
.程序集变量 临时图片F路径, 文本型, , , 
.程序集变量 论述题答案, 文本型, , , 
.程序集变量 问题编辑框内容被改变, 逻辑型, , , 
.程序集变量 简答论述分值累计, 整数型, , , 
.程序集变量 时间分值比, 整数型, , , 
.程序集变量 原图高宽比, 小数型, , , 
.程序集变量 问题闪现内容清空, 逻辑型, , , 
.子程序 _考试窗口_创建完毕, 空白型, , 
.局部变量 题库遍历循环变量, 整数型, , , 
.局部变量 当前题号, 整数型, , , 
.局部变量 树型框题号, 整数型, , , 
.局部变量 树型框遍历循环变量, 整数型, , , 
.局部变量 初始题目序号, 整数型, , , 
.局部变量 循环变量1, 整数型, , , 
.局部变量 新题库名称, 文本型, , , 

 ' 名词解释数量 ＝ 0
 ' 单项选择数量 ＝ 0
 ' 多项选择数量 ＝ 0
 ' 材料分析数量 ＝ 0
 ' 填空数量 ＝ 0
 ' 辨析数量 ＝ 0
 ' 简答数量 ＝ 0
 ' 论述数量 ＝ 0
赋值 (.禁止, 真)
赋值 (已做题数, 0)
赋值 (总时间, 0)
未知支持库函数_0 (求余数 (相减 (考试次数, 1), 4))
赋值 (初始题目序号, 0)
 ' 应考题数 ＝ 0
赋值 (.初始目录, 相加 (取运行目录 (), “\”, 考生姓名))
 ' ===============================================================打开数据库
.如果 (等于 (出题模式, 真))
    赋值 (考试窗口., “出题模式”)
    赋值 (时间分值比, 60)
    .如果 (等于 (题库, “”))
        .如果 (等于 (打开 (), 真))
            赋值 (题库, .文件名)
        .否则
            .如果 (等于 (输入框 (“请输入新题库名称：”, “题库设置”, “题库”, 新题库名称, ), 真))
                赋值 (题库, 相加 (取运行目录 (), “\”, 考生姓名, “\”, 新题库名称, “.edb”))
                复制文件 (相加 (取运行目录 (), “\试题库.edb”), 题库)
                赋值 (.禁止, 假)
                赋值 (.禁止, 假)
                赋值 (.禁止, 假)
                赋值 (.禁止, 假)
                赋值 (.输入方式, 0)
                
                
            .否则
                 ' 信息框 (“未选定题库！”, 0, )
                销毁 ()
                 ' .如果 (等于 (文件是否存在 (相加 (取运行目录 (), “\”, 考生姓名, “\新题库.edb”)), 假))
                     ' 复制文件 (取运行目录 () ＋ “\试题库.edb”, 取运行目录 () ＋ “\” ＋ 考生姓名 ＋ “\新题库.edb”)
                .否则
                    
                .如果结束
                 ' 题库 ＝ 取运行目录 () ＋ “\” ＋ 考生姓名 ＋ “\新题库.edb”
                
                
            .如果结束
            
        .如果结束
        
    .否则
        
    .如果结束
     ' 题库 ＝ 取运行目录 () ＋ “\试题库.edb”
     ' 题库 ＝ 取运行目录 () ＋ “\” ＋ 新题库名称
    
.否则
    赋值 (考试窗口., “考试模式”)
    赋值 (.标题, “考试进行中...”)
    赋值 (.禁止, 真)
    赋值 (.禁止, 真)
    赋值 (.禁止, 真)
    赋值 (.禁止, 真)
    赋值 (.输入方式, 1)
     ' .如果 (等于 (文件是否存在 (相加 (取运行目录 (), “\”, 考生姓名, “\复考题库.edb”)), 假))
        
    .否则
        
    .如果结束
    赋值 (题库, 相加 (取运行目录 (), “\”, 考生姓名, “\复考题库.edb”))
    赋值 (.时钟周期, 1000)
.如果结束
 ' ===============================================================
全部关闭 ()
.如果 (不等于 (题库, “”))
    .如果 (等于 (是否已打开 (题库), 假))
        打开 (题库, , , , , , )
        
    .否则
        置当前库 (题库)
    .如果结束
    
    0.置文本 (相加 (“当前题库：”, 题库))
     ' ===============================================================
    到首记录 ()
    
    .计次循环首 (取记录数 (), )
        赋值 (总时间, 相加 (总时间, 读 (#时间)))
        跳过 ()
    .计次循环尾 ()
    
    
     ' 到首记录 ()
     ' .计次循环首 (取记录数 (), )
         ' .如果 (等于 (读 (#抽题标记), “错”))
             ' 应考题数 ＝ 应考题数 ＋ 1
            
        .否则
            
        .如果结束
         ' 跳过 ()
     ' .计次循环尾 ()
     ' ===============================================================
    到首记录 ()
    .计次循环首 (取记录数 (), 循环变量1)
        .如果 (等于 (读 (#题目类型), “名词解释”))
            赋值 (初始题目序号, 相加 (初始题目序号, 1))
            写 (#题目序号, 初始题目序号)
        .否则
            
        .如果结束
        跳过 ()
    .计次循环尾 ()
    
    到首记录 ()
    .计次循环首 (取记录数 (), 循环变量1)
        .如果 (等于 (读 (#题目类型), “单项选择”))
            赋值 (初始题目序号, 相加 (初始题目序号, 1))
            写 (#题目序号, 初始题目序号)
            
        .否则
            
        .如果结束
        跳过 ()
    .计次循环尾 ()
    
    到首记录 ()
    .计次循环首 (取记录数 (), 循环变量1)
        .如果 (等于 (读 (#题目类型), “多项选择”))
            赋值 (初始题目序号, 相加 (初始题目序号, 1))
            写 (#题目序号, 初始题目序号)
            
        .否则
            
        .如果结束
        跳过 ()
    .计次循环尾 ()
    
    到首记录 ()
    .计次循环首 (取记录数 (), 循环变量1)
        .如果 (等于 (读 (#题目类型), “材料分析”))
            赋值 (初始题目序号, 相加 (初始题目序号, 1))
            写 (#题目序号, 初始题目序号)
            
        .否则
            
        .如果结束
        跳过 ()
    .计次循环尾 ()
    
    到首记录 ()
    .计次循环首 (取记录数 (), 循环变量1)
        .如果 (等于 (读 (#题目类型), “填空”))
            赋值 (初始题目序号, 相加 (初始题目序号, 1))
            写 (#题目序号, 初始题目序号)
            
        .否则
            
        .如果结束
        跳过 ()
    .计次循环尾 ()
    
    到首记录 ()
    .计次循环首 (取记录数 (), 循环变量1)
        .如果 (等于 (读 (#题目类型), “辨析”))
            赋值 (初始题目序号, 相加 (初始题目序号, 1))
            写 (#题目序号, 初始题目序号)
            
        .否则
            
        .如果结束
        跳过 ()
    .计次循环尾 ()
    
    到首记录 ()
    .计次循环首 (取记录数 (), 循环变量1)
        .如果 (等于 (读 (#题目类型), “简答”))
            赋值 (初始题目序号, 相加 (初始题目序号, 1))
            写 (#题目序号, 初始题目序号)
            
        .否则
            
        .如果结束
        跳过 ()
    .计次循环尾 ()
    
    到首记录 ()
    .计次循环首 (取记录数 (), 循环变量1)
        .如果 (等于 (读 (#题目类型), “论述”))
            赋值 (初始题目序号, 相加 (初始题目序号, 1))
            写 (#题目序号, 初始题目序号)
            
        .否则
            
        .如果结束
        跳过 ()
    .计次循环尾 ()
    
     ' 关闭 ()
     ' ＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝
    排序 (题库, #题目序号, , , )
     ' 编辑 (, , )
    
    到首记录 ()
    .如果 (查找 (等于 (问题文本, 读 (#问题))))
        赋值 (题号, 读 (#题目序号))
    .否则
        
    .如果结束
    树型框题型目录初始化 ()
    赋值 (.内容, “1”)
     ' .如果 (等于 (是否已打开 (相加 (取运行目录 (), “\试题库.edb”)), 假))
         ' 打开 (取运行目录 () ＋ “\试题库.edb”, , , , , , )
    .否则
        
    .如果结束
    题型选择组件显示 (.内容)
    
    到首记录 ()
    赋值 (当前题号, 1)
    赋值 (树型框题号, 1)
    
    .如果 (等于 (考试窗口., “考试模式”))
        .变量循环首 (1, 取记录数 (), 1, 题库遍历循环变量)
            到文本 (当前题号).加入项目 (当前题号)
            .计次循环首 (取项目数 (), 树型框遍历循环变量)
                .如果 (等于 (相减 (树型框遍历循环变量, 1).取缩进层次 (), 1))
                    .如果 (并且 (等于 (读 (#题目类型), 相减 (树型框遍历循环变量, 1).取项目文本 ()), 等于 (读 (#抽题标记), “错”)))
                         ' 题目显示树型框.加入项目 (树型框遍历循环变量 － 1, “[” ＋ 到文本 (树型框题号) ＋ “] ” ＋ 取文本左边 (读 (#问题), 6) ＋ “...”, , , )
                        相减 (树型框遍历循环变量, 1).加入项目 (到文本 (读 (#题目序号)), , , )
                         ' 写 (#题目序号, 树型框题号)
                         ' 树型框题号 ＝ 树型框题号 ＋ 1
                    .否则
                        
                    .如果结束
                    相减 (树型框遍历循环变量, 1).扩展 ()
                    
                .否则
                    
                .如果结束
                
            .计次循环尾 ()
            赋值 (当前题号, 相加 (当前题号, 1))
            跳过 ()
        .变量循环尾 ()
        
    .否则
        .变量循环首 (1, 取记录数 (), 1, 题库遍历循环变量)
            到文本 (当前题号).加入项目 (当前题号)
            .计次循环首 (取项目数 (), 树型框遍历循环变量)
                .如果 (等于 (相减 (树型框遍历循环变量, 1).取缩进层次 (), 1))
                    .如果 (等于 (读 (#题目类型), 相减 (树型框遍历循环变量, 1).取项目文本 ()))
                         ' 题目显示树型框.加入项目 (树型框遍历循环变量 － 1, “[” ＋ 到文本 (树型框题号) ＋ “] ” ＋ 取文本左边 (读 (#问题), 6) ＋ “...”, , , )
                        相减 (树型框遍历循环变量, 1).加入项目 (到文本 (读 (#题目序号)), , , )
                         ' 写 (#题目序号, 树型框题号)
                         ' 树型框题号 ＝ 树型框题号 ＋ 1
                    .否则
                        
                    .如果结束
                    相减 (树型框遍历循环变量, 1).扩展 ()
                    
                .否则
                    
                .如果结束
                
            .计次循环尾 ()
            赋值 (当前题号, 相加 (当前题号, 1))
            跳过 ()
        .变量循环尾 ()
        
    .如果结束
    
    模式转换 ()
    .如果 (大于 (题号, 0))
        赋值 (.内容, 到文本 (题号))
    .否则
        赋值 (.内容, 到文本 (1))
    .如果结束
    _题号组合框_编辑内容被改变 ()
     ' ------------------------------------------
     ' .如果 (等于 (取项目数 (), 0))
         ' 答案提示分组框.顶边 ＝ 350
         ' 功能按钮分组框.顶边 ＝ 482
         ' 考试窗口.高度 ＝ 607
         ' 题目显示树型框.高度 ＝ 472
    .否则
        
    .如果结束
    
     ' ------------------------------------------
    
    .如果 (并且 (等于 (考试窗口., “考试模式”), 等于 (不可回头, 真)))
        赋值 (.禁止, 真)
        赋值 (.禁止, 真)
        赋值 (.禁止, 真)
    .否则
        .如果 (等于 (考试窗口., “出题模式”))
            赋值 (.禁止, 假)
            赋值 (.禁止, 假)
        .否则
            
        .如果结束
        
    .如果结束
    
    .如果 (大于或等于 (考试次数, 2))
        赋值 (.内容, “1”)
        _题号组合框_编辑内容被改变 ()
    .否则
        
    .如果结束
    .如果 (等于 (题库, “”))
        连续赋值 (真, .禁止, .禁止, .禁止, .禁止, .禁止)
        
    .否则
        
    .如果结束
    .如果真 (等于 (考试次数, 1))
        赋值 (.禁止, 真)
        赋值 (.禁止, 真)
    .如果真结束
    .如果真 (等于 (考试次数, 2))
        赋值 (.禁止, 真)
        赋值 (.禁止, 假)
    .如果真结束
    .如果真 (等于 (考试次数, 3))
        赋值 (.禁止, 假)
        赋值 (.禁止, 假)
    .如果真结束
    
    
    
.否则
     ' 保存按钮.禁止 ＝ 真
     ' 删除按钮.禁止 ＝ 真
    连续赋值 (真, .禁止, .禁止, .禁止, .禁止, .禁止)
.如果结束


.子程序 _答题编辑框_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

_答题编辑框_内容被改变 ()
 ' .如果 (等于 (.内容, “在此输入答案”))
     ' 答题编辑框.内容 ＝ “”
.否则
    
.如果结束
赋值 (.文本颜色, #黑色)


.子程序 _提示编辑框_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果 (等于 (.内容, “提示信息”))
    赋值 (.内容, “”)
.否则
    赋值 (.文本颜色, #黑色)
.如果结束



.子程序 _加题按钮_被单击, 空白型, , 
赋值 (加题, 真)
清空内容 ()


.子程序 _保存按钮_被单击, 空白型, , 
赋值 (简答论述分值累计, 0)
赋值 (题号, 到整数 (.内容))
.如果 (并且 (大于 (到整数 (.内容), 2), 不等于 (.内容, “填空”)))
    赋值 (.内容, 多项选择答案识别简化版 ())
.否则
    
.如果结束
赋值 (问题文本, .内容)
 ' 该题存在 ＝ 假

.如果 (并且 (不等于 (.内容, “”), 不等于 (.内容, “”)))
    到首记录 ()
    查找 (等于 (到文本 (读 (#题目序号)), .内容))
     ' .计次循环首 (取记录数 (), )
         ' .如果 (等于 (.内容, 读 (#问题)))
             ' 该题存在 ＝ 真
             ' 跳出循环 ()
        .否则
            
        .如果结束
         ' 跳过 ()
     ' .计次循环尾 ()
    .如果 (等于 (加题, 假)) ' 修改
        写 (#题目编号, 到整数 (.内容))
        写 (#科目名称, .内容)
        写 (#章目编号, 到整数 (.内容))
        写 (#节序编号, 到整数 (.内容))
        写 (#知识范围, .内容)
        写 (#题目类型, .内容)
        写 (#分值, 到整数 (.内容))
        写 (#时间, 到整数 (.内容))
        写 (#难度系数, .内容)
        写 (#问题, .内容)
        写 (#选择项一, .内容)
        写 (#选择项二, .内容)
        写 (#选择项三, .内容)
        写 (#选择项四, .内容)
        写 (#选择项五, .内容)
        写 (#选择项六, .内容)
        写 (#选择项七, .内容)
        写 (#选择项八, .内容)
        写 (#选择项九, .内容)
        写 (#选择项十, .内容)
        写 (#选项, 到整数 (.内容))
        
         ' .如果 (等于 (.内容, “多项选择”))
             ' ' 答题编辑框.内容 ＝ 字母数字排序 (删首尾空 (答题编辑框.内容))
             ' 答题编辑框.内容 ＝ 多项选择答案识别简化版 ()
            
        .否则
            
        .如果结束
        写 (#答案, .内容)
        .如果 (不等于 (.内容, “提示信息”))
            写 (#提示信息, .内容)
        .否则
            写 (#提示信息, “”)
        .如果结束
        
        .如果 (并且 (等于 (.内容, “材料分析”), 等于 (读 (#材料文本), “”)))
            .如果 (等于 (材料文本路径1, “”))
                
                .如果 (等于 (打开 (), 真))
                    写 (#材料文本, .文件名)
                .否则
                    
                .如果结束
                
            .否则
                写 (#材料文本, 材料文本路径1)
            .如果结束
            
        .否则
            
        .如果结束
        
        
        
        信息框 (“修改成功”, 0, )
    .否则
         ' .如果 (等于 (信息框 (“添加新题 点 [确认]，修改原题 点 [取消]”, #确认取消钮, ), #确认钮))
            加空记录 ()
            写 (#题目编号, 到整数 (.内容))
            写 (#科目名称, .内容)
            写 (#章目编号, 到整数 (.内容))
            写 (#节序编号, 到整数 (.内容))
            写 (#知识范围, .内容)
            写 (#题目类型, .内容)
            写 (#分值, 到整数 (.内容))
            写 (#时间, 到整数 (.内容))
            写 (#难度系数, .内容)
            写 (#问题, .内容)
            写 (#选择项一, .内容)
            写 (#选择项二, .内容)
            写 (#选择项三, .内容)
            写 (#选择项四, .内容)
            写 (#选择项五, .内容)
            写 (#选择项六, .内容)
            写 (#选择项七, .内容)
            写 (#选择项八, .内容)
            写 (#选择项九, .内容)
            写 (#选择项十, .内容)
            
            写 (#选项, 到整数 (.内容))
            写 (#答案, .内容)
            
            .如果 (不等于 (.内容, “提示信息”))
                写 (#提示信息, .内容)
            .否则
                写 (#提示信息, “”)
            .如果结束
            
            
            .如果 (并且 (等于 (.内容, “材料分析”), 等于 (读 (#材料文本), “”)))
                .如果 (等于 (材料文本路径, “”))
                    信息框 (材料文本路径, 0, )
                    .如果 (等于 (打开 (), 真))
                        写 (#材料文本, .文件名)
                    .否则
                        
                    .如果结束
                    
                .否则
                    写 (#材料文本, 材料文本路径)
                .如果结束
                
            .否则
                
            .如果结束
            
             ' 信息框 (“添加成功”, 0, )
            
            
             ' 题号组合框.内容 ＝ 到文本 (到整数 (题号组合框.内容) ＋ 1)
            _考试窗口_创建完毕 ()
             ' _加题按钮_被单击 ()
            
        .否则
             ' 写 (#题目编号, 到整数 (题号组合框.内容))
             ' 写 (#科目名称, 科目组合框.内容)
             ' 写 (#章目编号, 到整数 (章组合框.内容))
             ' 写 (#节序编号, 到整数 (节组合框.内容))
             ' 写 (#知识范围, 范围组合框.内容)
             ' 写 (#题目类型, 题型组合框.内容)
             ' 写 (#分值, 到整数 (分值组合框.内容))
             ' 写 (#时间, 到整数 (时间组合框.内容))
             ' 写 (#难度系数, 难度组合框.内容)
             ' 写 (#问题, 问题编辑框.内容)
             ' 写 (#选择项一, 备选答案一编辑框.内容)
             ' 写 (#选择项二, 备选答案二编辑框.内容)
             ' 写 (#选择项三, 备选答案三编辑框.内容)
             ' 写 (#选择项四, 备选答案四编辑框.内容)
             ' 写 (#选择项五, 备选答案五编辑框.内容)
             ' .如果 (不等于 (.内容, “在此输入答案”))
                 ' 写 (#答案, 答题编辑框.内容)
            .否则
                
            .如果结束
             ' .如果 (不等于 (.内容, “提示信息”))
                 ' 写 (#提示信息, 提示编辑框.内容)
            .否则
                 ' 写 (#提示信息, “”)
            .如果结束
             ' 信息框 (“修改成功”, 0, )
            
        .如果结束
        
    .如果结束
    
     ' 考试窗口.刷新显示 ()
.否则
    信息框 (相加 (“您还没有提出问题或未设置标准答案。”, #换行符, “选择题答案请输入符合规定的大写字母。”), 0, “温馨提示”)
    赋值 (.内容, “”)
    获取焦点 ()
.如果结束
赋值 (加题, 假)

.子程序 题型选择组件显示, 空白型, , 
.参数 题目类型1, 文本型, , 


 ' 连续赋值 (假, A选择框.可视, B选择框.可视, C选择框.可视, D选择框.可视, E选择框.可视, A选择框.禁止, B选择框.禁止, C选择框.禁止, D选择框.禁止, E选择框.禁止, 备选答案1编辑框.可视, 备选答案2编辑框.可视, 备选答案3编辑框.可视, 备选答案4编辑框.可视, 备选答案5编辑框.可视, 答案A图片按钮.可视, 答案B图片按钮.可视, 答案C图片按钮.可视, 答案D图片按钮.可视, 答案E图片按钮.可视, 答题编辑框.可视, 提示编辑框.可视, 备选答案分组框.可视)

.如果 (等于 (题目类型1, “单项选择”))
     ' 连续赋值 (真, 问题编辑框.可视, A选择框.可视, B选择框.可视, C选择框.可视, D选择框.可视, 备选答案分组框.可视, 备选答案1编辑框.可视, 备选答案2编辑框.可视, 备选答案3编辑框.可视, 备选答案4编辑框.可视, 答案A图片按钮.可视, 答案B图片按钮.可视, 答案C图片按钮.可视, 答案D图片按钮.可视, 答题编辑框.可视, 提示编辑框.可视)
     ' 选项组合框.内容 ＝ “4”
    赋值 (.禁止, 假)
    
.否则
    .如果 (等于 (题目类型1, “多项选择”))
         ' 连续赋值 (真, 问题编辑框.可视, 备选答案分组框.可视, A选择框.可视, B选择框.可视, C选择框.可视, D选择框.可视, E选择框.可视, 备选答案1编辑框.可视, 备选答案2编辑框.可视, 备选答案3编辑框.可视, 备选答案4编辑框.可视, 备选答案5编辑框.可视, 答案A图片按钮.可视, 答案B图片按钮.可视, 答案C图片按钮.可视, 答案D图片按钮.可视, 答案E图片按钮.可视, 答题编辑框.可视, 提示编辑框.可视)
         ' 选项组合框.内容 ＝ “4”
        赋值 (.禁止, 假)
        
    .否则
        .如果 (等于 (题目类型1, “名词解释”))
             ' 连续赋值 (真, 问题编辑框.可视, 答题编辑框.可视, 提示编辑框.可视)
            赋值 (.内容, “0”)
            赋值 (.禁止, 真)
            
        .否则
            .如果 (等于 (题目类型1, “材料分析”))
                 ' 连续赋值 (真, 问题编辑框.可视, 备选答案分组框.可视, A选择框.可视, B选择框.可视, C选择框.可视, D选择框.可视, E选择框.可视, 备选答案1编辑框.可视, 备选答案2编辑框.可视, 备选答案3编辑框.可视, 备选答案4编辑框.可视, 备选答案5编辑框.可视, 答案A图片按钮.可视, 答案B图片按钮.可视, 答案C图片按钮.可视, 答案D图片按钮.可视, 答案E图片按钮.可视, 答题编辑框.可视, 提示编辑框.可视)
                 ' 选项组合框.内容 ＝ “3”
                赋值 (.禁止, 假)
                
            .否则
                .如果 (等于 (题目类型1, “填空”))
                     ' 连续赋值 (真, A选择框.禁止, B选择框.禁止, C选择框.禁止, D选择框.禁止, E选择框.禁止, F选择框.禁止, G选择框.禁止, H选择框.禁止, I选择框.禁止, J选择框.禁止)
                     ' ' 选项组合框.内容 ＝ “10”
                    赋值 (.禁止, 假)
                .否则
                     ' 连续赋值 (假, A选择框.禁止, B选择框.禁止, C选择框.禁止, D选择框.禁止, E选择框.禁止, F选择框.禁止, G选择框.禁止, H选择框.禁止, I选择框.禁止, J选择框.禁止)
                    .如果 (等于 (题目类型1, “辨析”))
                        赋值 (.内容, “2”)
                        赋值 (.禁止, 真)
                         ' 连续赋值 (真, 问题编辑框.可视, 备选答案分组框.可视, A选择框.可视, B选择框.可视, 备选答案1编辑框.可视, 备选答案2编辑框.可视, 答题编辑框.可视, 提示编辑框.可视)
                        赋值 (.内容, “正确”)
                        赋值 (.内容, “错误”)
                    .否则
                        .如果 (等于 (题目类型1, “简答”))
                             ' 连续赋值 (真, 问题编辑框.可视, 答题编辑框.可视, 提示编辑框.可视)
                            赋值 (.内容, “0”)
                            赋值 (.禁止, 真)
                            
                            
                        .否则
                            .如果 (等于 (题目类型1, “论述”))
                                 ' 连续赋值 (真, 问题编辑框.可视, 答题编辑框.可视, 提示编辑框.可视)
                                赋值 (.内容, “0”)
                                赋值 (.禁止, 真)
                            .否则
                                 ' .如果 (等于 (题目类型1, “”))
                                     ' 连续赋值 (真, 问题编辑框.可视, A选择框.可视, B选择框.可视, C选择框.可视, D选择框.可视, E选择框.可视, 备选答案1编辑框.可视, 备选答案2编辑框.可视, 备选答案3编辑框.可视, 备选答案4编辑框.可视, 备选答案5编辑框.可视, 答案A图片按钮.可视, 答案B图片按钮.可视, 答案C图片按钮.可视, 答案D图片按钮.可视, 答案E图片按钮.可视, 答题编辑框.可视, 提示编辑框.可视, 备选答案分组框.可视)
                                .否则
                                    
                                .如果结束
                                
                            .如果结束
                            
                        .如果结束
                        
                    .如果结束
                    
                .如果结束
                
            .如果结束
            
        .如果结束
        
    .如果结束
    
    
    
    
    
    
    
    
.如果结束
_选项组合框_编辑内容被改变 ()




.子程序 _题型组合框_列表项被选择, 空白型, , 
.局部变量 当前题号, 整数型, , , 
.局部变量 临时循环变量, 整数型, , , 


清空 ()
到首记录 ()
赋值 (当前题号, 1)
.变量循环首 (1, 取记录数 (), 1, 临时循环变量)
    .如果 (等于 (读 (#题目类型), .内容))
        到文本 (读 (#题目序号)).加入项目 ()
        赋值 (当前题号, 相加 (当前题号, 1))
    .否则
        .如果 (等于 (.内容, “”))
            到文本 (读 (#题目序号)).加入项目 ()
            赋值 (当前题号, 相加 (当前题号, 1))
        .否则
            
        .如果结束
        
    .如果结束
    跳过 ()
.变量循环尾 ()
赋值 (.现行选中项, 0)
_题号组合框_列表项被选择 ()
题型选择组件显示 (.内容)
.如果 (并且 (等于 (.内容, “材料分析”), 不等于 (.内容, “”)))
    .如果 (等于 (材料文本窗口被打开, 真))
        材料文本窗口.销毁 ()
    .否则
        
    .如果结束
    载入 (材料文本窗口, , 假)
    考试窗口.获取焦点 ()
.否则
    .如果 (等于 (材料文本窗口被打开, 真))
        材料文本窗口.销毁 ()
    .否则
        
    .如果结束
    
.如果结束

.如果 (等于 (.内容, “”))
    _加题按钮_被单击 ()
.否则
    
.如果结束
 ' .计次循环首 (取项目数 (), 临时循环变量)
     ' .如果 (等于 (相减 (临时循环变量, 1).取项目文本 (), .内容))
         ' 题目显示树型框.现行选中项 ＝ 临时循环变量 － 1
    .否则
        
    .如果结束
    
.计次循环尾 ()

.子程序 _题型组合框_编辑内容被改变, 空白型, , 
.局部变量 当前题号, 整数型, , , 
.局部变量 临时循环变量, 整数型, , , 


 ' 题号组合框.清空 ()
 ' 到首记录 ()
 ' 当前题号 ＝ 1
 ' .变量循环首 (1, 取记录数 (), 1, 临时循环变量)
     ' .如果 (等于 (读 (#题目类型), .内容))
         ' 题号组合框.加入项目 (到文本 (当前题号), 当前题号)
         ' 当前题号 ＝ 当前题号 ＋ 1
    .否则
         ' .如果 (等于 (.内容, “”))
             ' 题号组合框.加入项目 (到文本 (当前题号), 当前题号)
             ' 当前题号 ＝ 当前题号 ＋ 1
        .否则
            
        .如果结束
        
    .如果结束
     ' 跳过 ()
 ' .变量循环尾 ()
 ' 题型选择组件显示 (题型组合框.内容)


 ' 题型选择组件显示 (题型组合框.内容)
 ' ===============================================================================================

.子程序 _备选答案1编辑框_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 文件号, 整数型, , , 



.如果 (并且 (不等于 (取字节集长度 (临时图片A), 0), 等于 (临时图片A路径, .内容)))
    赋值 (.可视, 真)
    赋值 (.图片, 临时图片A)
.否则
    .如果 (等于 (文件是否存在 (.内容), 真))
        赋值 (.可视, 真)
        赋值 (文件号, 打开文件 (.内容, , ))
        赋值 (.图片, 读入字节集 (文件号, 取文件长度 (文件号)))
        关闭文件 (文件号)
        
        赋值 (临时图片A, .图片)
        赋值 (临时图片A路径, .内容)
        
    .否则
        赋值 (.可视, 假)
        赋值 (., 真)
        赋值 (., .宽度)
        赋值 (., 50)
        赋值 (., 相加 (.左边, .左边))
        赋值 (., 相加 (.顶边, .高度, .顶边))
        赋值 (., .内容)
        
        
    .如果结束
    
.如果结束
 ' .如果 (等于 (.可视, 真))
     ' 备选答案图片框.高度 ＝ 取整 (取图片高度 (备选答案一编辑框.内容) ÷ 取图片宽度 (备选答案一编辑框.内容) × 备选答案显示编辑框.宽度)
     ' 如果 (备选答案图片框.顶边 ＋ 备选答案图片框.高度 ＞ 考试窗口.高度)
     ' 备选答案图片框.顶边 ＝ 考试窗口.高度 － 备选答案图片框.高度
     ' 备选答案图片框.左边 ＝ 备选答案分组框.左边 ＋ 备选答案一编辑框.左边
     ' 备选答案图片框.顶边 ＝ 备选答案一编辑框.顶边 ＋ 备选答案一编辑框.高度 ＋ 备选答案分组框.顶边
    
    
    
.否则
    
.如果结束
.如果 (等于 (.可视, 真))
    赋值 (.宽度, .宽度)
    赋值 (.高度, 取整 (相乘 (相除 (未知支持库函数_32 (.内容), 未知支持库函数_31 (.内容)), .宽度)))
    
    赋值 (.顶边, 相加 (.顶边, .高度, .顶边))
    赋值 (.左边, 相加 (.左边, .左边))
    .如果 (大于 (相加 (.顶边, .高度), 考试窗口.))
        赋值 (.高度, 相减 (相加 (相减 (考试窗口., 相加 (.顶边, .高度)), .高度), .顶边, .高度))
        赋值 (.宽度, 取整 (相乘 (相除 (未知支持库函数_31 (.内容), 未知支持库函数_32 (.内容)), .高度)))
         ' .如果 (大于 (.宽度, .宽度))
             ' 备选答案图片框.宽度 ＝ 备选答案一编辑框.宽度
             ' 备选答案图片框.高度 ＝ 取整 (取图片高度 (备选答案一编辑框.内容) ÷ 取图片宽度 (备选答案一编辑框.内容) × 备选答案图片框.宽度)
            
        .否则
            
        .如果结束
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束
 ' .如果 (等于 (考试窗口., “考试模式”))
     ' .如果 (不等于 (.内容, “填空”))
         ' A选择框.选中 ＝ 取反 (A选择框.选中)
         ' _A选择框_被单击 ()
    .否则
        
    .如果结束
    
.否则
    
.如果结束




.子程序 _备选答案1编辑框_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (., 假)
赋值 (.可视, 假)


.子程序 _备选答案2编辑框_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 文件号, 整数型, , , 


.如果 (并且 (不等于 (取字节集长度 (临时图片B), 0), 等于 (临时图片B路径, .内容)))
    赋值 (.可视, 真)
    赋值 (.图片, 临时图片B)
    
.否则
    .如果 (等于 (文件是否存在 (.内容), 真))
        赋值 (.可视, 真)
        赋值 (文件号, 打开文件 (.内容, , ))
        赋值 (.图片, 读入字节集 (文件号, 取文件长度 (文件号)))
        关闭文件 (文件号)
        
        赋值 (临时图片B, .图片)
        赋值 (临时图片B路径, .内容)
        
    .否则
        赋值 (.可视, 假)
        赋值 (., 真)
        赋值 (., .宽度)
        赋值 (., 50)
        赋值 (., 相加 (.左边, .左边))
        赋值 (., 相加 (.顶边, .高度, .顶边))
        赋值 (., .内容)
        
    .如果结束
    
.如果结束

 ' .如果 (等于 (.可视, 真))
     ' 备选答案图片框.高度 ＝ 取整 (取图片高度 (备选答案二编辑框.内容) ÷ 取图片宽度 (备选答案二编辑框.内容) × 备选答案显示编辑框.宽度)
     ' 如果 (备选答案图片框.顶边 ＋ 备选答案图片框.高度 ＞ 考试窗口.高度)
     ' 备选答案图片框.顶边 ＝ 考试窗口.高度 － 备选答案图片框.高度
     ' 备选答案图片框.左边 ＝ 备选答案分组框.左边 ＋ 备选答案二编辑框.左边
     ' 备选答案图片框.顶边 ＝ 备选答案二编辑框.顶边 ＋ 备选答案二编辑框.高度 ＋ 备选答案分组框.顶边
    
    
.否则
    
.如果结束
.如果 (等于 (.可视, 真))
    赋值 (.宽度, .宽度)
    赋值 (.高度, 取整 (相乘 (相除 (未知支持库函数_32 (.内容), 未知支持库函数_31 (.内容)), .宽度)))
    
    赋值 (.宽度, .宽度)
    赋值 (.顶边, 相加 (.顶边, .高度, .顶边))
    赋值 (.左边, 相加 (.左边, .左边))
    .如果 (大于 (相加 (.顶边, .高度), 考试窗口.))
        赋值 (.高度, 相减 (相加 (相减 (考试窗口., 相加 (.顶边, .高度)), .高度), .顶边, .高度))
        赋值 (.宽度, 取整 (相乘 (相除 (未知支持库函数_31 (.内容), 未知支持库函数_32 (.内容)), .高度)))
         ' .如果 (大于 (.宽度, .宽度))
             ' 备选答案图片框.宽度 ＝ 备选答案二编辑框.宽度
             ' 备选答案图片框.高度 ＝ 取整 (取图片高度 (备选答案二编辑框.内容) ÷ 取图片宽度 (备选答案二编辑框.内容) × 备选答案图片框.宽度)
        .否则
            
        .如果结束
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束
 ' .如果 (等于 (考试窗口., “考试模式”))
     ' .如果 (不等于 (.内容, “填空”))
         ' B选择框.选中 ＝ 取反 (B选择框.选中)
         ' _B选择框_被单击 ()
    .否则
        
    .如果结束
    
.否则
    
.如果结束



.子程序 _备选答案2编辑框_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (., 假)
赋值 (.可视, 假)


.子程序 _备选答案3编辑框_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 文件号, 整数型, , , 


.如果 (并且 (不等于 (取字节集长度 (临时图片C), 0), 等于 (临时图片C路径, .内容)))
    赋值 (.可视, 真)
    赋值 (.图片, 临时图片C)
    
.否则
    .如果 (等于 (文件是否存在 (.内容), 真))
        赋值 (.可视, 真)
        赋值 (文件号, 打开文件 (.内容, , ))
        赋值 (.图片, 读入字节集 (文件号, 取文件长度 (文件号)))
        关闭文件 (文件号)
        
        赋值 (临时图片C, .图片)
        赋值 (临时图片C路径, .内容)
        
    .否则
        赋值 (.可视, 假)
        赋值 (., 真)
        赋值 (., .宽度)
        赋值 (., 50)
        赋值 (., 相加 (.左边, .左边))
        赋值 (., 相加 (.顶边, .高度, .顶边))
        赋值 (., .内容)
        
    .如果结束
    
.如果结束

 ' .如果 (等于 (.可视, 真))
     ' 备选答案图片框.高度 ＝ 取整 (取图片高度 (备选答案三编辑框.内容) ÷ 取图片宽度 (备选答案三编辑框.内容) × 备选答案显示编辑框.宽度)
     ' 如果 (备选答案图片框.顶边 ＋ 备选答案图片框.高度 ＞ 考试窗口.高度)
     ' 备选答案图片框.顶边 ＝ 考试窗口.高度 － 备选答案图片框.高度
     ' 备选答案图片框.左边 ＝ 备选答案分组框.左边 ＋ 备选答案三编辑框.左边
     ' 备选答案图片框.顶边 ＝ 备选答案三编辑框.顶边 ＋ 备选答案三编辑框.高度 ＋ 备选答案分组框.顶边
    
    
.否则
    
.如果结束
.如果 (等于 (.可视, 真))
    赋值 (.宽度, .宽度)
    赋值 (.高度, 取整 (相乘 (相除 (未知支持库函数_32 (.内容), 未知支持库函数_31 (.内容)), .宽度)))
    
    赋值 (.顶边, 相加 (.顶边, .高度, .顶边))
    赋值 (.左边, 相加 (.左边, .左边))
    .如果 (大于 (相加 (.顶边, .高度), 考试窗口.))
        赋值 (.高度, 相减 (相加 (相减 (考试窗口., 相加 (.顶边, .高度)), .高度), .顶边, .高度))
        赋值 (.宽度, 取整 (相乘 (相除 (未知支持库函数_31 (.内容), 未知支持库函数_32 (.内容)), .高度)))
         ' .如果 (大于 (.宽度, .宽度))
             ' 备选答案图片框.宽度 ＝ 备选答案三编辑框.宽度
             ' 备选答案图片框.高度 ＝ 取整 (取图片高度 (备选答案三编辑框.内容) ÷ 取图片宽度 (备选答案三编辑框.内容) × 备选答案图片框.宽度)
        .否则
            
        .如果结束
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束
 ' .如果 (等于 (考试窗口., “考试模式”))
     ' .如果 (不等于 (.内容, “填空”))
         ' C选择框.选中 ＝ 取反 (C选择框.选中)
         ' _C选择框_被单击 ()
    .否则
        
    .如果结束
    
.否则
    
.如果结束



.子程序 _备选答案3编辑框_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (., 假)

赋值 (.可视, 假)


.子程序 _备选答案4编辑框_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 文件号, 整数型, , , 


.如果 (并且 (不等于 (取字节集长度 (临时图片D), 0), 等于 (临时图片D路径, .内容)))
    赋值 (.可视, 真)
    赋值 (.图片, 临时图片D)
    
.否则
    .如果 (等于 (文件是否存在 (.内容), 真))
        赋值 (.可视, 真)
        赋值 (文件号, 打开文件 (.内容, , ))
        赋值 (.图片, 读入字节集 (文件号, 取文件长度 (文件号)))
        关闭文件 (文件号)
        
        赋值 (临时图片D, .图片)
        赋值 (临时图片D路径, .内容)
    .否则
        赋值 (.可视, 假)
        赋值 (., 真)
        赋值 (., .宽度)
        赋值 (., 50)
        赋值 (., 相加 (.左边, .左边))
        赋值 (., 相加 (.顶边, .高度, .顶边))
        赋值 (., .内容)
        
    .如果结束
    
    
.如果结束
 ' .如果 (等于 (.可视, 真))
     ' 备选答案图片框.高度 ＝ 取整 (取图片高度 (备选答案四编辑框.内容) ÷ 取图片宽度 (备选答案四编辑框.内容) × 备选答案显示编辑框.宽度)
     ' 如果 (备选答案图片框.顶边 ＋ 备选答案图片框.高度 ＞ 考试窗口.高度)
     ' 备选答案图片框.顶边 ＝ 考试窗口.高度 － 备选答案图片框.高度
     ' 备选答案图片框.左边 ＝ 备选答案分组框.左边 ＋ 备选答案四编辑框.左边
     ' 备选答案图片框.顶边 ＝ 备选答案四编辑框.顶边 ＋ 备选答案四编辑框.高度 ＋ 备选答案分组框.顶边
    
    
.否则
    
.如果结束
.如果 (等于 (.可视, 真))
    赋值 (.宽度, .宽度)
    赋值 (.高度, 取整 (相乘 (相除 (未知支持库函数_32 (.内容), 未知支持库函数_31 (.内容)), .宽度)))
    
    赋值 (.顶边, 相加 (.顶边, .高度, .顶边))
    赋值 (.左边, 相加 (.左边, .左边))
    .如果 (大于 (相加 (.顶边, .高度), 考试窗口.))
        赋值 (.高度, 相减 (相加 (相减 (考试窗口., 相加 (.顶边, .高度)), .高度), .顶边, .高度))
        赋值 (.宽度, 取整 (相乘 (相除 (未知支持库函数_31 (.内容), 未知支持库函数_32 (.内容)), .高度)))
         ' .如果 (大于 (.宽度, .宽度))
             ' 备选答案图片框.宽度 ＝ 备选答案四编辑框.宽度
             ' 备选答案图片框.高度 ＝ 取整 (取图片高度 (备选答案四编辑框.内容) ÷ 取图片宽度 (备选答案四编辑框.内容) × 备选答案图片框.宽度)
        .否则
            
        .如果结束
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束
 ' .如果 (等于 (考试窗口., “考试模式”))
     ' .如果 (不等于 (.内容, “填空”))
         ' D选择框.选中 ＝ 取反 (D选择框.选中)
         ' _D选择框_被单击 ()
    .否则
        
    .如果结束
    
.否则
    
.如果结束



.子程序 _备选答案4编辑框_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (., 假)
赋值 (.可视, 假)



.子程序 _备选答案5编辑框_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 文件号, 整数型, , , 


.如果 (并且 (不等于 (取字节集长度 (临时图片E), 0), 等于 (临时图片E路径, .内容)))
    赋值 (.可视, 真)
    赋值 (.图片, 临时图片E)
.否则
    .如果 (等于 (文件是否存在 (.内容), 真))
        赋值 (.可视, 真)
        赋值 (文件号, 打开文件 (.内容, , ))
        赋值 (.图片, 读入字节集 (文件号, 取文件长度 (文件号)))
        关闭文件 (文件号)
        赋值 (临时图片E, .图片)
        赋值 (临时图片E路径, .内容)
    .否则
        赋值 (.可视, 假)
        赋值 (., 真)
        赋值 (., .宽度)
        赋值 (., 50)
        赋值 (., 相加 (.左边, .左边))
        赋值 (., 相加 (.顶边, .高度, .顶边))
        赋值 (., .内容)
        
    .如果结束
    
    
.如果结束

.如果 (等于 (.可视, 真))
    赋值 (.宽度, .宽度)
    赋值 (.高度, 取整 (相乘 (相除 (未知支持库函数_32 (.内容), 未知支持库函数_31 (.内容)), .宽度)))
    
    赋值 (.顶边, 相加 (.顶边, .高度, .顶边))
    赋值 (.左边, 相加 (.左边, .左边))
    .如果 (大于 (相加 (.顶边, .高度), 考试窗口.))
        赋值 (.高度, 相减 (相加 (相减 (考试窗口., 相加 (.顶边, .高度)), .高度), .顶边, .高度))
        赋值 (.宽度, 取整 (相乘 (相除 (未知支持库函数_31 (.内容), 未知支持库函数_32 (.内容)), .高度)))
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束

 ' .如果 (等于 (考试窗口., “考试模式”))
    
     ' .如果 (不等于 (.内容, “填空”))
         ' E选择框.选中 ＝ 取反 (E选择框.选中)
         ' _E选择框_被单击 ()
    .否则
        
    .如果结束
    
.否则
    
.如果结束


.子程序 _备选答案6编辑框_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 文件号, 整数型, , , 


.如果 (并且 (不等于 (取字节集长度 (临时图片F), 0), 等于 (临时图片F路径, .内容)))
    
    赋值 (.可视, 真)
    赋值 (.图片, 临时图片F)
.否则
    .如果 (等于 (文件是否存在 (.内容), 真))
        赋值 (.可视, 真)
        赋值 (文件号, 打开文件 (.内容, , ))
        赋值 (.图片, 读入字节集 (文件号, 取文件长度 (文件号)))
        关闭文件 (文件号)
        赋值 (临时图片F, .图片)
        赋值 (临时图片F路径, .内容)
    .否则
        赋值 (.可视, 假)
        赋值 (., 真)
        赋值 (., .宽度)
        赋值 (., 50)
        赋值 (., 相加 (.左边, .左边))
        赋值 (., 相加 (.顶边, .高度, .顶边))
        赋值 (., .内容)
        
    .如果结束
    
    
.如果结束

.如果 (等于 (.可视, 真))
    赋值 (.宽度, .宽度)
    赋值 (.高度, 取整 (相乘 (相除 (未知支持库函数_32 (.内容), 未知支持库函数_31 (.内容)), .宽度)))
    
    赋值 (.顶边, 相加 (.顶边, .高度, .顶边))
    赋值 (.左边, 相加 (.左边, .左边))
    .如果 (大于 (相加 (.顶边, .高度), 考试窗口.))
        赋值 (.高度, 相减 (相加 (相减 (考试窗口., 相加 (.顶边, .高度)), .高度), .顶边, .高度))
        赋值 (.宽度, 取整 (相乘 (相除 (未知支持库函数_31 (.内容), 未知支持库函数_32 (.内容)), .高度)))
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束
 ' .如果 (等于 (考试窗口., “考试模式”))
     ' .如果 (不等于 (.内容, “填空”))
         ' F选择框.选中 ＝ 取反 (F选择框.选中)
         ' _F选择框_被单击 ()
    .否则
        
    .如果结束
    
.否则
    
.如果结束


.子程序 _备选答案7编辑框_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 文件号, 整数型, , , 


.如果 (并且 (不等于 (取字节集长度 (临时图片G), 0), 等于 (临时图片G路径, .内容)))
    
    赋值 (.可视, 真)
    赋值 (.图片, 临时图片G)
.否则
    .如果 (等于 (文件是否存在 (.内容), 真))
        赋值 (.可视, 真)
        赋值 (文件号, 打开文件 (.内容, , ))
        赋值 (.图片, 读入字节集 (文件号, 取文件长度 (文件号)))
        关闭文件 (文件号)
        赋值 (临时图片G, .图片)
        赋值 (临时图片G路径, .内容)
    .否则
        赋值 (.可视, 假)
        赋值 (., 真)
        赋值 (., .宽度)
        赋值 (., 50)
        赋值 (., 相加 (.左边, .左边))
        赋值 (., 相加 (.顶边, .高度, .顶边))
        赋值 (., .内容)
        
    .如果结束
    
    
.如果结束

.如果 (等于 (.可视, 真))
    赋值 (.宽度, .宽度)
    赋值 (.高度, 取整 (相乘 (相除 (未知支持库函数_32 (.内容), 未知支持库函数_31 (.内容)), .宽度)))
    
    赋值 (.顶边, 相加 (.顶边, .高度, .顶边))
    赋值 (.左边, 相加 (.左边, .左边))
    .如果 (大于 (相加 (.顶边, .高度), 考试窗口.))
        赋值 (.高度, 相减 (相加 (相减 (考试窗口., 相加 (.顶边, .高度)), .高度), .顶边, .高度))
        赋值 (.宽度, 取整 (相乘 (相除 (未知支持库函数_31 (.内容), 未知支持库函数_32 (.内容)), .高度)))
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束
 ' .如果 (等于 (考试窗口., “考试模式”))
     ' .如果 (不等于 (.内容, “填空”))
         ' G选择框.选中 ＝ 取反 (G选择框.选中)
         ' _G选择框_被单击 ()
    .否则
        
    .如果结束
    
.否则
    
.如果结束


.子程序 _备选答案8编辑框_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 文件号, 整数型, , , 


.如果 (并且 (不等于 (取字节集长度 (临时图片H), 0), 等于 (临时图片H路径, .内容)))
    
    赋值 (.可视, 真)
    赋值 (.图片, 临时图片H)
.否则
    .如果 (等于 (文件是否存在 (.内容), 真))
        赋值 (.可视, 真)
        赋值 (文件号, 打开文件 (.内容, , ))
        赋值 (.图片, 读入字节集 (文件号, 取文件长度 (文件号)))
        关闭文件 (文件号)
        赋值 (临时图片H, .图片)
        赋值 (临时图片H路径, .内容)
    .否则
        赋值 (.可视, 假)
        赋值 (., 真)
        赋值 (., .宽度)
        赋值 (., 50)
        赋值 (., 相加 (.左边, .左边))
        赋值 (., 相加 (.顶边, .高度, .顶边))
        赋值 (., .内容)
        
    .如果结束
    
    
.如果结束

.如果 (等于 (.可视, 真))
    赋值 (.宽度, .宽度)
    赋值 (.高度, 取整 (相乘 (相除 (未知支持库函数_32 (.内容), 未知支持库函数_31 (.内容)), .宽度)))
    
    赋值 (.顶边, 相加 (.顶边, .高度, .顶边))
    赋值 (.左边, 相加 (.左边, .左边))
    .如果 (大于 (相加 (.顶边, .高度), 考试窗口.))
        赋值 (.高度, 相减 (相加 (相减 (考试窗口., 相加 (.顶边, .高度)), .高度), .顶边, .高度))
        赋值 (.宽度, 取整 (相乘 (相除 (未知支持库函数_31 (.内容), 未知支持库函数_32 (.内容)), .高度)))
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束
 ' .如果 (等于 (考试窗口., “考试模式”))
    
     ' .如果 (不等于 (.内容, “填空”))
         ' H选择框.选中 ＝ 取反 (H选择框.选中)
         ' _H选择框_被单击 ()
    .否则
        
    .如果结束
    
.否则
    
.如果结束


.子程序 _备选答案9编辑框_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 文件号, 整数型, , , 


.如果 (并且 (不等于 (取字节集长度 (临时图片I), 0), 等于 (临时图片I路径, .内容)))
    
    赋值 (.可视, 真)
    赋值 (.图片, 临时图片I)
.否则
    .如果 (等于 (文件是否存在 (.内容), 真))
        赋值 (.可视, 真)
        赋值 (文件号, 打开文件 (.内容, , ))
        赋值 (.图片, 读入字节集 (文件号, 取文件长度 (文件号)))
        关闭文件 (文件号)
        赋值 (临时图片I, .图片)
        赋值 (临时图片I路径, .内容)
    .否则
        赋值 (.可视, 假)
        赋值 (., 真)
        赋值 (., .宽度)
        赋值 (., 50)
        赋值 (., 相加 (.左边, .左边))
        赋值 (., 相加 (.顶边, .高度, .顶边))
        赋值 (., .内容)
        
    .如果结束
    
    
.如果结束

.如果 (等于 (.可视, 真))
    赋值 (.宽度, .宽度)
    赋值 (.高度, 取整 (相乘 (相除 (未知支持库函数_32 (.内容), 未知支持库函数_31 (.内容)), .宽度)))
    
    赋值 (.顶边, 相加 (.顶边, .高度, .顶边))
    赋值 (.左边, 相加 (.左边, .左边))
    .如果 (大于 (相加 (.顶边, .高度), 考试窗口.))
        赋值 (.高度, 相减 (相加 (相减 (考试窗口., 相加 (.顶边, .高度)), .高度), .顶边, .高度))
        赋值 (.宽度, 取整 (相乘 (相除 (未知支持库函数_31 (.内容), 未知支持库函数_32 (.内容)), .高度)))
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束

 ' .如果 (等于 (考试窗口., “考试模式”))
    
     ' .如果 (不等于 (.内容, “填空”))
         ' I选择框.选中 ＝ 取反 (I选择框.选中)
         ' _I选择框_被单击 ()
    .否则
        
    .如果结束
    
.否则
    
.如果结束


.子程序 _备选答案10编辑框_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 文件号, 整数型, , , 


.如果 (并且 (不等于 (取字节集长度 (临时图片J), 0), 等于 (临时图片J路径, .内容)))
    
    赋值 (.可视, 真)
    赋值 (.图片, 临时图片J)
.否则
    .如果 (等于 (文件是否存在 (.内容), 真))
        赋值 (.可视, 真)
        赋值 (文件号, 打开文件 (.内容, , ))
        赋值 (.图片, 读入字节集 (文件号, 取文件长度 (文件号)))
        关闭文件 (文件号)
        赋值 (临时图片J, .图片)
        赋值 (临时图片J路径, .内容)
    .否则
        赋值 (.可视, 假)
        赋值 (., 真)
        赋值 (., .宽度)
        赋值 (., 50)
        赋值 (., 相加 (.左边, .左边))
        赋值 (., 相加 (.顶边, .高度, .顶边))
        赋值 (., .内容)
        
    .如果结束
    
    
.如果结束

.如果 (等于 (.可视, 真))
    赋值 (.宽度, .宽度)
    赋值 (.高度, 取整 (相乘 (相除 (未知支持库函数_32 (.内容), 未知支持库函数_31 (.内容)), .宽度)))
    
    赋值 (.顶边, 相加 (.顶边, .高度, .顶边))
    赋值 (.左边, 相加 (.左边, .左边))
    .如果 (大于 (相加 (.顶边, .高度), 考试窗口.))
        赋值 (.高度, 相减 (相加 (相减 (考试窗口., 相加 (.顶边, .高度)), .高度), .顶边, .高度))
        赋值 (.宽度, 取整 (相乘 (相除 (未知支持库函数_31 (.内容), 未知支持库函数_32 (.内容)), .高度)))
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束

 ' .如果 (等于 (考试窗口., “考试模式”))
     ' .如果 (不等于 (.内容, “填空”))
         ' J选择框.选中 ＝ 取反 (J选择框.选中)
         ' _J选择框_被单击 ()
    .否则
        
    .如果结束
    
.否则
    
.如果结束


.子程序 _备选答案5编辑框_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (., 假)
赋值 (.可视, 假)

 ' =====================================================================================================图片操作

.子程序 _备选答案6编辑框_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (., 假)
赋值 (.可视, 假)

.子程序 _备选答案7编辑框_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (., 假)
赋值 (.可视, 假)

.子程序 _备选答案8编辑框_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (., 假)
赋值 (.可视, 假)

.子程序 _备选答案9编辑框_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (., 假)
赋值 (.可视, 假)

.子程序 _备选答案10编辑框_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (., 假)
赋值 (.可视, 假)

.子程序 _答案A图片按钮_被单击, 空白型, , 
.局部变量 图片文件号, 整数型, , , 

.如果 (等于 (打开 (), 真))
    赋值 (.内容, .文件名)
    赋值 (图片文件号, 打开文件 (.文件名, , ))
    赋值 (.图片, 读入字节集 (图片文件号, 取文件长度 (图片文件号)))
    赋值 (临时图片A, .图片)
    关闭文件 (图片文件号)
.否则
    
.如果结束


.子程序 _答案B图片按钮_被单击, 空白型, , 
.局部变量 图片文件号, 整数型, , , 

.如果 (等于 (打开 (), 真))
    赋值 (.内容, .文件名)
    赋值 (图片文件号, 打开文件 (.文件名, , ))
    赋值 (.图片, 读入字节集 (图片文件号, 取文件长度 (图片文件号)))
    关闭文件 (图片文件号)
    赋值 (临时图片B, .图片)
.否则
    
.如果结束


.子程序 _答案C图片按钮_被单击, 空白型, , 
.局部变量 图片文件号, 整数型, , , 

.如果 (等于 (打开 (), 真))
    赋值 (.内容, .文件名)
    赋值 (图片文件号, 打开文件 (.文件名, , ))
    赋值 (.图片, 读入字节集 (图片文件号, 取文件长度 (图片文件号)))
    关闭文件 (图片文件号)
    赋值 (临时图片C, .图片)
.否则
    
.如果结束


.子程序 _答案D图片按钮_被单击, 空白型, , 
.局部变量 图片文件号, 整数型, , , 

.如果 (等于 (打开 (), 真))
    赋值 (.内容, .文件名)
    赋值 (图片文件号, 打开文件 (.文件名, , ))
    赋值 (.图片, 读入字节集 (图片文件号, 取文件长度 (图片文件号)))
    关闭文件 (图片文件号)
    赋值 (临时图片D, .图片)
.否则
    
.如果结束


.子程序 _答案E图片按钮_被单击, 空白型, , 
.局部变量 图片文件号, 整数型, , , 

.如果 (等于 (打开 (), 真))
    赋值 (.内容, .文件名)
    赋值 (图片文件号, 打开文件 (.文件名, , ))
    赋值 (.图片, 读入字节集 (图片文件号, 取文件长度 (图片文件号)))
    关闭文件 (图片文件号)
    赋值 (临时图片E, .图片)
.否则
    
.如果结束



 ' =================================================================================================================

.子程序 _答案F图片按钮_被单击, 空白型, , 
.局部变量 图片文件号, 整数型, , , 

.如果 (等于 (打开 (), 真))
    赋值 (.内容, .文件名)
    赋值 (图片文件号, 打开文件 (.文件名, , ))
    赋值 (.图片, 读入字节集 (图片文件号, 取文件长度 (图片文件号)))
    关闭文件 (图片文件号)
    赋值 (临时图片F, .图片)
.否则
    
.如果结束


.子程序 _答案G图片按钮_被单击, 空白型, , 
.局部变量 图片文件号, 整数型, , , 

.如果 (等于 (打开 (), 真))
    赋值 (.内容, .文件名)
    赋值 (图片文件号, 打开文件 (.文件名, , ))
    赋值 (.图片, 读入字节集 (图片文件号, 取文件长度 (图片文件号)))
    关闭文件 (图片文件号)
    赋值 (临时图片G, .图片)
.否则
    
.如果结束


.子程序 _答案H图片按钮_被单击, 空白型, , 
.局部变量 图片文件号, 整数型, , , 

.如果 (等于 (打开 (), 真))
    赋值 (.内容, .文件名)
    赋值 (图片文件号, 打开文件 (.文件名, , ))
    赋值 (.图片, 读入字节集 (图片文件号, 取文件长度 (图片文件号)))
    关闭文件 (图片文件号)
    赋值 (临时图片H, .图片)
.否则
    
.如果结束


.子程序 _答案I图片按钮_被单击, 空白型, , 
.局部变量 图片文件号, 整数型, , , 

.如果 (等于 (打开 (), 真))
    赋值 (.内容, .文件名)
    赋值 (图片文件号, 打开文件 (.文件名, , ))
    赋值 (.图片, 读入字节集 (图片文件号, 取文件长度 (图片文件号)))
    关闭文件 (图片文件号)
    赋值 (临时图片I, .图片)
.否则
    
.如果结束


.子程序 _答案J图片按钮_被单击, 空白型, , 
.局部变量 图片文件号, 整数型, , , 

.如果 (等于 (打开 (), 真))
    赋值 (.内容, .文件名)
    赋值 (图片文件号, 打开文件 (.文件名, , ))
    赋值 (.图片, 读入字节集 (图片文件号, 取文件长度 (图片文件号)))
    关闭文件 (图片文件号)
    赋值 (临时图片J, .图片)
.否则
    
.如果结束


.子程序 _答题编辑框_失去焦点, 空白型, , 
 ' .如果 (等于 (.内容, “”))
     ' 答题编辑框.内容 ＝ “在此输入答案”
.否则
    
.如果结束


.子程序 _提示编辑框_失去焦点, 空白型, , 
 ' .如果 (等于 (.内容, “”))
     ' 提示编辑框.内容 ＝ “提示信息”
.否则
    
.如果结束



.子程序 _添加问题图片按钮_被单击, 空白型, , 
.局部变量 竖线位置, 整数型, , , 
.局部变量 替换长度, 整数型, , , 

.如果 (等于 (打开 (), 真))
    赋值 (竖线位置, 寻找文本 (.内容, “|”, , 假))
     ' 信息框 (到文本 (竖线位置), 0, )
    .如果 (不等于 (竖线位置, -1))
        赋值 (替换长度, 相减 (取文本长度 (.内容), 竖线位置))
        赋值 (.内容, 文本替换 (.内容, 相加 (竖线位置, 1), 替换长度, .文件名))
    .否则
        赋值 (.内容, 相加 (.内容, #换行符, #换行符, “|”, .文件名))
    .如果结束
    
     ' 图片文件号 ＝ 打开文件 (导入图片通用对话框.文件名, , )
     ' 备选答案图片框.图片 ＝ 读入字节集 (图片文件号, 取文件长度 (图片文件号))
     ' 临时图片0 ＝ 备选答案图片框.图片
     ' 关闭文件 (图片文件号)
.否则
    
.如果结束


.子程序 _问题编辑框_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 文件号, 整数型, , , 
.局部变量 被分割文本, 文本型, , "2", 
.局部变量 分割文本完整路径, 文本型, , , 

赋值 (被分割文本, 分割文本 (.内容, “|”, 2))
.如果 (等于 (取数组成员数 (被分割文本), 2))
    .如果 (等于 (寻找文本 (被分割文本 [2], “\”, , 假), -1))
        赋值 (分割文本完整路径, 相加 (题库路径, “\”, 被分割文本 [2]))
    .否则
        赋值 (分割文本完整路径, 被分割文本 [2])
    .如果结束
    
    赋值 (图片路径, 分割文本完整路径)
    
    .如果 (不等于 (取字节集长度 (临时图片0), 0))
        赋值 (.可视, 真)
        赋值 (.图片, 临时图片0)
        
    .否则
        
        .如果 (等于 (文件是否存在 (图片路径), 真))
            赋值 (.可视, 真)
            赋值 (.图片, 读入文件 (图片路径))
            赋值 (临时图片0, .图片)
            赋值 (.宽度, .宽度)
            赋值 (.高度, 取整 (相乘 (相除 (未知支持库函数_32 (图片路径), 未知支持库函数_31 (图片路径)), .宽度)))
            赋值 (.顶边, 相加 (.顶边, .高度, .顶边))
            赋值 (.左边, 相加 (.左边, .左边))
            .如果 (大于 (相加 (.顶边, .高度), 考试窗口.))
                赋值 (.高度, 相减 (相加 (相减 (考试窗口., 相加 (.顶边, .高度)), .高度), .顶边, .高度))
                赋值 (.宽度, 取整 (相乘 (相除 (未知支持库函数_31 (图片路径), 未知支持库函数_32 (图片路径)), .高度)))
            .否则
                
            .如果结束
            
             ' 信息框 (图片路径, 0, )
            
        .否则
            赋值 (.可视, 假)
            赋值 (., 真)
            
            赋值 (., 相加 (.左边, .左边))
            赋值 (., .宽度)
            赋值 (., 取整 (相乘 (相除 (取文本长度 (.内容), 56), 20)))
            赋值 (., 相加 (.顶边, .高度, .顶边))
            赋值 (., .内容)
        .如果结束
        
    .如果结束
    
.否则
    赋值 (图片路径, “”)
.如果结束





.子程序 _问题编辑框_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (., 假)
赋值 (.可视, 假)
 ' 备选答案图片框1.宽度 ＝ 备选答案1编辑框.宽度


.子程序 模式转换, 空白型, , 
.如果 (等于 (考试窗口., “出题模式”))
     ' .如果 (等于 (信息框 (“即将退出考试模式，进入出题模式，继续吗？”, #确认取消钮, ), #确认钮))
         ' 考试时钟窗口.销毁 ()
         ' 考试窗口.标题 ＝ “出题模式”
        连续赋值 (假, .可视, .可视, .可视, .可视, .禁止, .禁止, .禁止, .禁止, .禁止, .禁止, .可视)
         ' 连续赋值 (12, 交卷按钮.顶边, 懂了按钮.顶边, 提示按钮.顶边, 确定按钮.顶边)
        连续赋值 (真, .可视, .可视, .可视, .可视, .可视, .禁止, .禁止, .禁止, .禁止)
         ' 连续赋值 (真, A选择框.禁止, B选择框.禁止, C选择框.禁止, D选择框.禁止, E选择框.禁止)
        
        赋值 (.标题, “开始考试”)
         ' 出题模式 ＝ 取反 (出题模式)
    .否则
         ' 出题模式 ＝ 假
    .如果结束
    
.否则
    .如果 (等于 (考试窗口., “考试模式”))
         ' .如果 (小于或等于 (考试次数, 1))
             ' 载入 (抽题窗口, , 真)  ' 进入考试模式
        .否则
            
        .如果结束
        
         ' 考试窗口.标题 ＝ “考试模式”
        连续赋值 (真, .可视, .可视, .可视, .可视, .禁止, .禁止, .禁止, .禁止, .禁止, .禁止, .禁止, .禁止, .禁止, .禁止, .禁止, .禁止, .禁止, .可视)
        连续赋值 (12, .顶边, .顶边, .顶边, .顶边)
        连续赋值 (假, .可视, .可视, .可视, .可视, .可视, .禁止, .禁止, .禁止, .禁止)
        赋值 (.最大位置, 总时间)
         ' 连续赋值 (假, A选择框.禁止, B选择框.禁止, C选择框.禁止, D选择框.禁止, E选择框.禁止)
        赋值 (.标题, “开始出题”)
         ' 出题模式 ＝ 取反 (出题模式)
        
    .否则
        
    .如果结束
    
.如果结束



.子程序 _题目显示树型框_项目被选择, 空白型, , 
.参数 选择方式, 整数型, , 

.局部变量 临时变量, 整数型, , , 

清空 ()
.如果 (等于 (.取缩进层次 (.最大化按钮), 1)) ' 第一个层次为题型
    赋值 (.内容, .取项目文本 (.最大化按钮))
    
    .计次循环首 (取项目数 (), 临时变量) ' 题号组合框加入项目
        .如果 (等于 (相减 (临时变量, 1).取父项目 ().取项目文本 (), .取项目文本 (.最大化按钮)))
            相减 (临时变量, 1).取项目文本 ().加入项目 ()
        .否则
            
        .如果结束
        
    .计次循环尾 ()
     ' 清空内容 ()
    .如果 (等于 (考试窗口., “出题模式”))
        _加题按钮_被单击 ()
    .否则
        _题型组合框_列表项被选择 ()
    .如果结束
    
    赋值 (.内容, 0.取项目文本 ())
.否则
    .如果 (等于 (.取缩进层次 (.最大化按钮), 2)) ' 第二个层次为题目编号
        赋值 (.内容, .取父项目 (.最大化按钮).取项目文本 ())
         ' _题型组合框_列表项被选择 ()
        赋值 (.内容, .取项目文本 (.最大化按钮))
        .计次循环首 (取项目数 (), 临时变量) ' 题号组合框加入项目
            .如果 (等于 (.取父项目 (.最大化按钮).取项目文本 (), 相减 (临时变量, 1).取父项目 ().取项目文本 ()))
                相减 (临时变量, 1).取项目文本 ().加入项目 ()
            .否则
                
            .如果结束
            
        .计次循环尾 ()
        .如果 (大于 (记录上一条索引值, 0))
            .如果 (不等于 (考试窗口., “考试模式”))
                记录上一条索引值.取消加粗 ()
            .否则
                .如果 (等于 (.内容, “”))
                    记录上一条索引值.取消加粗 ()
                .否则
                    
                .如果结束
                
            .如果结束
            
        .否则
            
        .如果结束
        
        .加粗 (.最大化按钮)
        赋值 (记录上一条索引值, .最大化按钮)
        
        显示题目 (到整数 (.取项目文本 (.最大化按钮)))
         ' _时间组合框_列表项被选择 ()
        .如果 (等于 (考试窗口., “考试模式”))
            赋值 (.最大位置, 本题时间)
            赋值 (.位置, 0)
        .否则
            
        .如果结束
        
        
    .否则
        
    .如果结束
    
.如果结束
 ' _题型组合框_列表项被选择 ()
题型选择组件显示 (.内容)
 ' 如果 (考试窗口.标题 ＝ “出题模式”)
标记答题选项 ()


.如果 (并且 (等于 (.内容, “材料分析”), 不等于 (.内容, “”)))
    .如果 (等于 (材料文本窗口被打开, 真))
        材料文本窗口.销毁 ()
    .否则
        
    .如果结束
    载入 (材料文本窗口, , 假)
    
.否则
    .如果 (等于 (材料文本窗口被打开, 真))
        材料文本窗口.销毁 ()
    .否则
        
    .如果结束
    
.如果结束




.子程序 _考试窗口_将被销毁, 空白型, , 
 ' 如果 (考试窗口.标题 ＝ “考试模式”)
 ' 考试时钟窗口.销毁 ()

.如果 (并且 (不等于 (题库, “”), 不等于 (取记录数 (), 0)))
    到首记录 ()
    .判断循环首 (等于 (读 (#问题), “”))
        删除 ()
        跳过 ()
    .判断循环尾 ()
    彻底删除 ()
.否则
    
.如果结束

.如果 (等于 (材料文本窗口被打开, 真))
    材料文本窗口.销毁 ()
.否则
    
    
.如果结束
.如果 (等于 (图片显示窗口被打开, 真))
    图片显示窗口.销毁 ()
.否则
    
.如果结束
赋值 (加题, 假)
全部关闭 ()

.子程序 _题号组合框_列表项被选择, 空白型, , 
.局部变量 临时变量, 整数型, , , 

 ' 信息框 (到文本 (记录上一条索引值), 0, )
赋值 (题号, 到整数 (.内容))

.如果 (大于 (记录上一条索引值, 0))
    .如果 (不等于 (考试窗口., “考试模式”))
        记录上一条索引值.取消加粗 ()
    .否则
        
    .如果结束
    
.否则
    
.如果结束

.计次循环首 (取项目数 (), 临时变量) ' 题号组合框加入项目
    .如果 (并且 (等于 (相减 (临时变量, 1).取项目文本 (), .内容), 等于 (相减 (临时变量, 1).取缩进层次 (), 2)))
        赋值 (.最大化按钮, 相减 (临时变量, 1))
        相减 (临时变量, 1).加粗 ()
        赋值 (记录上一条索引值, 相减 (临时变量, 1))
        跳出循环 ()
    .否则
        
    .如果结束
    
.计次循环尾 ()
.如果 (等于 (考试窗口., “出题模式”))
    标记答题选项 ()
.否则
    
.如果结束
.如果 (等于 (.内容, “论述”))
    赋值 (论述题问题, .内容)
.否则
    
.如果结束


.子程序 _题号组合框_编辑内容被改变, 空白型, , 
_题号组合框_列表项被选择 ()
 ' 题型选择组件显示 (题型组合框.内容)

.子程序 _切换题库按钮_被单击, 空白型, , 
.局部变量 新题库名称, 文本型, , , 

全部关闭 ()
.如果 (等于 (出题模式, 真))
    .如果 (等于 (打开 (), 真))
        赋值 (题库, .文件名)
    .否则
        .如果 (等于 (输入框 (“请输入新题库名称：”, “题库设置”, “题库”, 新题库名称, ), 真))
            
            赋值 (题库, 相加 (取运行目录 (), “\”, 考生姓名, “\”, 新题库名称, “.edb”))
            复制文件 (相加 (取运行目录 (), “\试题库.edb”), 题库)
        .否则
             ' 信息框 (“未选定题库！”, 0, )
            
        .如果结束
        
    .如果结束
    
.否则
    
.如果结束

_考试窗口_创建完毕 ()


.子程序 _上一题按钮_被单击, 空白型, , 
.如果 (大于或等于 (到整数 (.内容), 2))
    赋值 (.内容, 到文本 (相减 (到整数 (.内容), 1)))
    
.否则
    
.如果结束
_题号组合框_编辑内容被改变 ()
 ' 如果 (考试窗口.标题 ＝ “出题模式”)
标记答题选项 ()
 ' 连续赋值 (假, A选择框.选中, B选择框.选中, C选择框.选中, D选择框.选中, E选择框.选中)
 ' 答题编辑框.内容 ＝ 读 (#用户答案)
 ' 标记答题选项 ()


.子程序 _下一题按钮_被单击, 空白型, , 
鸣叫 ()
.如果 (等于 (删首尾空 (.内容), 答案))
    赋值 (该题正确, 真)
.否则
    赋值 (该题正确, 假)
.如果结束
.如果 (等于 (对错提示, 真))
    .如果 (等于 (该题正确, 真))
        赋值 (.标题, “正确！您真聪明，希望继续发扬！”)
    .否则
        .如果 (等于 (.内容, “”))
            赋值 (.标题, “走马观花也很好。不过一步一个脚印地走要显得踏实些...”)
        .否则
            赋值 (.标题, “错了！下次要认真看清楚题目哦！”)
        .如果结束
        
    .如果结束
    
.否则
    
    
.如果结束
.如果 (小于 (到整数 (.内容), 取记录数 ()))
    .如果 (并且 (等于 (错题重做, 真), 等于 (该题正确, 假), 或者 (等于 (.内容, “单项选择”), 等于 (.内容, “多项选择”))))
        
    .否则
        赋值 (.内容, 到文本 (相加 (到整数 (.内容), 1)))
    .如果结束
    
.否则
    赋值 (.内容, “1”)
    
.如果结束

.如果 (等于 (考试窗口., “考试模式”))
    .如果 (不等于 (读 (#用户答案), “”))
        赋值 (已做题数, 相加 (已做题数, 1))
    .否则
        
    .如果结束
    .如果 (大于或等于 (已做题数, 取记录数 ()))
        赋值 (.标题, “您已完成全部题目，可以交卷了。”)
        
    .否则
        
    .如果结束
     ' 如果 (考试窗口.题型组合框.内容 ＝ “简答” 或 考试窗口.题型组合框.内容 ＝ “论述”)
     ' .如果 (等于 (材料文本窗口被打开, 真))
         ' 材料文本窗口._保存文本按钮_被单击 ()
    .否则
        
    .如果结束
    
    
    
    
    
    
    获取焦点 ()
    
    
.否则
    获取焦点 ()
.如果结束





_题号组合框_编辑内容被改变 ()

标记答题选项 ()


.子程序 显示题目, 空白型, , 
.参数 题目序号, 整数型, , 

.局部变量 变量1, 整数型, , , 

赋值 (加题, 假)
赋值 (.可视, 假)
赋值 (., 假)
到首记录 ()
.计次循环首 (取记录数 (), 变量1)
    .如果 (等于 (读 (#题目序号), 题目序号))
        赋值 (.内容, 读 (#科目名称))
        赋值 (.内容, 到文本 (读 (#章目编号)))
        赋值 (.内容, 到文本 (读 (#节序编号)))
        赋值 (.内容, 读 (#知识范围))
        赋值 (.内容, 读 (#题目类型))
        
         ' _选项组合框_编辑内容被改变 ()
        赋值 (.内容, 到文本 (读 (#题目序号)))
        赋值 (.内容, 到文本 (读 (#分值)))
        赋值 (.内容, 到文本 (读 (#时间)))
        赋值 (本题时间, 读 (#时间))
        赋值 (.内容, 读 (#难度系数))
        赋值 (.内容, 读 (#问题))
        
        .如果 (并且 (等于 (考试窗口., “考试模式”), 等于 (.内容, “填空”)))
            赋值 (填空问题文本, .内容)
            赋值 (.内容, “”)
            赋值 (.内容, “”)
            赋值 (.内容, “”)
            赋值 (.内容, “”)
            赋值 (.内容, “”)
            赋值 (.内容, “”)
            赋值 (.内容, “”)
            赋值 (.内容, “”)
            赋值 (.内容, “”)
            赋值 (.内容, “”)
            
        .否则
            赋值 (.内容, 读 (#选择项一))
            赋值 (.内容, 读 (#选择项二))
            赋值 (.内容, 读 (#选择项三))
            赋值 (.内容, 读 (#选择项四))
            赋值 (.内容, 读 (#选择项五))
            赋值 (.内容, 读 (#选择项六))
            赋值 (.内容, 读 (#选择项七))
            赋值 (.内容, 读 (#选择项八))
            赋值 (.内容, 读 (#选择项九))
            赋值 (.内容, 读 (#选择项十))
            
        .如果结束
         ' 如果 (考试窗口.标题 ＝ “考试模式” 且 题型组合框.内容 ＝ “填空”)
        
        
        赋值 (.内容, 到文本 (读 (#选项)))
        .如果 (等于 (考试窗口., “出题模式”))
            赋值 (.内容, 读 (#答案))
            赋值 (.内容, 读 (#提示信息))
        .否则
            赋值 (.内容, 读 (#用户答案)) ' 考试窗口.标题 ＝ “考试模式”
            赋值 (答案, 读 (#答案))
            赋值 (提示信息, 读 (#提示信息))
            
        .如果结束
        
        .如果 (等于 (.内容, “材料分析”))
            .如果 (等于 (寻找文本 (读 (#材料文本), “\”, , 假), -1))
                赋值 (材料文本路径, 相加 (题库路径, “\”, 读 (#材料文本)))
            .否则
                赋值 (材料文本路径, 读 (#材料文本))
            .如果结束
            调试输出 (相加 (“材料文本路径:”, 材料文本路径))
            
        .否则
            
        .如果结束
        跳出循环 ()
    .否则
        
    .如果结束
    跳过 ()
.计次循环尾 ()
 ' _时间组合框_列表项被选择 ()

.子程序 _时间组合框_列表项被选择, 空白型, , 
.如果 (等于 (考试窗口., “考试模式”))
    .如果 (等于 (限时换题, 假))
        赋值 (.最大位置, 到整数 (.内容))
    .否则
        赋值 (.最大位置, 本题时间)
    .如果结束
    赋值 (.位置, 0)
    
.否则
    赋值 (时间分值比, 到整数 (相除 (到整数 (.内容), 到整数 (.内容))))
    信息框 (相加 (“当前 [时间分值比] 为：每分值 [”, 到文本 (时间分值比), “] 秒。”), 0, “时间与分值之比改变...”)
.如果结束


.子程序 _导入按钮_被单击, 空白型, , 
.局部变量 被导入文本文件号, 整数型, , , 
.局部变量 被导入文本, 文本型, , , 
.局部变量 一行文本, 文本型, , "11", 
.局部变量 分割文本1, 文本型, , "2", 
.局部变量 临时题目, 题目, , "0", 

 ' ' 出题模式 ＝ 取反 (出题模式)
 ' .如果 (等于 (打开 (), 真))
     ' 被导入文本文件号 ＝ 打开文件 (导入题库通用对话框.文件名, , )
     ' 移到文件首 (被导入文本文件号)
     ' 被导入文本 ＝ 读入文本 (被导入文本文件号, )
     ' .判断循环首 (小于 (取读写位置 (被导入文本文件号), 取文本长度 (被导入文本)))
         ' 一行文本 [1] ＝ 读入一行 (被导入文本文件号)
         ' 分割文本1 ＝ 分割文本 (一行文本 [1], “.”, 2)
         ' .如果 (大于 (到整数 (分割文本1 [1]), 0))
             ' 临时题目.问题 ＝ 分割文本1 [2]
            
        .否则
            
        .如果结束
         ' 移动读写位置 (被导入文本文件号, , 取文本长度 (一行文本))
        
     ' .判断循环尾 ()
 ' .否则
    
.如果结束
载入 (导入单题窗口, , 假)

.子程序 _删除按钮_被单击, 空白型, , 
删除 ()
彻底删除 ()
_考试窗口_创建完毕 ()

.子程序 树型框题型目录初始化, 空白型, , 
清空 ()
.加入项目 (“名词解释”, , , )
.加入项目 (“单项选择”, , , )
.加入项目 (“多项选择”, , , )
.加入项目 (“材料分析”, , , )
.加入项目 (“填空”, , , )
.加入项目 (“辨析”, , , )
.加入项目 (“简答”, , , )
.加入项目 (“论述”, , , )


.子程序 _A选择框_被单击, 空白型, , 
赋值 (改变答题编辑框内容, 假)
.如果 (或者 (等于 (.内容, “单项选择”), 等于 (.内容, “辨析”)))
    .如果 (等于 (.选中, 真))
        连续赋值 (假, .选中, .选中, .选中, .选中, .选中, .选中, .选中, .选中, .选中)
        连续赋值 (#黑色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色)
        
         ' 连续赋值 (假, A选择框.选中, B选择框.选中, C选择框.选中, D选择框.选中, E选择框.选中, F选择框.选中, G选择框.选中, H选择框.选中, I选择框.选中, J选择框.选中)
         ' 连续赋值 (#黑色, A选择框.文本颜色, B选择框.文本颜色, C选择框.文本颜色, D选择框.文本颜色, E选择框.文本颜色, F选择框.文本颜色, G选择框.文本颜色, H选择框.文本颜色, I选择框.文本颜色, J选择框.文本颜色)
        
        赋值 (单项选择当前选择, “A”)
        赋值 (.内容, 单项选择当前选择)
        赋值 (.文本颜色, #红色)
        .如果真 (等于 (考试窗口., “考试模式”))
            保存答案 ()
            .如果 (不等于 (.内容, #辨析))
                _下一题按钮_被单击 ()
            .否则
                
            .如果结束
            
        .如果真结束
        
    .否则
        赋值 (.文本颜色, #黑色)
        赋值 (.内容, “”)
    .如果结束
    
.否则
    .如果 (或者 (等于 (.内容, “多项选择”), 等于 (.内容, “材料分析”)))
        赋值 (.内容, “”)
        连续赋值 (#黑色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色)
        多项选择答案识别 ()
        .如果真 (等于 (考试窗口., “考试模式”))
            保存答案 ()
        .如果真结束
        
    .否则
        
        
        
        
    .如果结束
    
.如果结束

获取焦点 ()

.子程序 _B选择框_被单击, 空白型, , 
赋值 (改变答题编辑框内容, 假)
.如果 (或者 (等于 (.内容, “单项选择”), 等于 (.内容, “辨析”)))
    .如果 (等于 (.选中, 真))
        连续赋值 (假, .选中, .选中, .选中, .选中, .选中, .选中, .选中, .选中, .选中)
        连续赋值 (#黑色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色)
        
        
        赋值 (单项选择当前选择, “B”)
        赋值 (.内容, 单项选择当前选择)
        赋值 (.文本颜色, #红色)
        .如果真 (等于 (考试窗口., “考试模式”))
            保存答案 ()
            _下一题按钮_被单击 ()
        .如果真结束
        
    .否则
        赋值 (.文本颜色, #黑色)
        赋值 (.内容, “”)
    .如果结束
    
.否则
    .如果 (或者 (等于 (.内容, “多项选择”), 等于 (.内容, “材料分析”)))
        赋值 (.内容, “”)
        连续赋值 (#黑色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色)
        
        多项选择答案识别 ()
        .如果真 (等于 (考试窗口., “考试模式”))
            保存答案 ()
            
        .如果真结束
        
    .否则
         ' .如果 (等于 (.内容, “辨析”))
             ' .如果 (等于 (.选中, 真))
                 ' 连续赋值 (假, A选择框.选中)
                 ' 连续赋值 (#黑色, A选择框.文本颜色)
                 ' 单项选择当前选择 ＝ “B”
                 ' 答题编辑框.内容 ＝ 单项选择当前选择
                 ' B选择框.文本颜色 ＝ #红色
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .如果结束
    
.如果结束
获取焦点 ()

.子程序 _C选择框_被单击, 空白型, , 
赋值 (改变答题编辑框内容, 假)
.如果 (或者 (等于 (.内容, “单项选择”), 等于 (.内容, “辨析”)))
    .如果 (等于 (.选中, 真))
        连续赋值 (假, .选中, .选中, .选中, .选中, .选中, .选中, .选中, .选中, .选中)
        连续赋值 (#黑色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色)
        
        赋值 (单项选择当前选择, “C”)
        赋值 (.内容, 单项选择当前选择)
        赋值 (.文本颜色, #红色)
        .如果真 (等于 (考试窗口., “考试模式”))
            保存答案 ()
            _下一题按钮_被单击 ()
        .如果真结束
        
    .否则
        赋值 (.文本颜色, #黑色)
        赋值 (.内容, “”)
    .如果结束
    
.否则
    .如果 (或者 (等于 (.内容, “多项选择”), 等于 (.内容, “材料分析”)))
        赋值 (.内容, “”)
        
        连续赋值 (#黑色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色)
        
        连续赋值 (#黑色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色)
        多项选择答案识别 ()
        .如果真 (等于 (考试窗口., “考试模式”))
            保存答案 ()
        .如果真结束
        
    .否则
        
        
        
        
    .如果结束
    
.如果结束
获取焦点 ()

.子程序 _D选择框_被单击, 空白型, , 
赋值 (改变答题编辑框内容, 假)
.如果 (或者 (等于 (.内容, “单项选择”), 等于 (.内容, “辨析”)))
    .如果 (等于 (.选中, 真))
        连续赋值 (假, .选中, .选中, .选中, .选中, .选中, .选中, .选中, .选中, .选中)
        连续赋值 (#黑色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色)
        
        赋值 (单项选择当前选择, “D”)
        赋值 (.内容, 单项选择当前选择)
        赋值 (.文本颜色, #红色)
        .如果真 (等于 (考试窗口., “考试模式”))
            保存答案 ()
            _下一题按钮_被单击 ()
        .如果真结束
        
    .否则
        赋值 (.文本颜色, #黑色)
        赋值 (.内容, “”)
    .如果结束
    
.否则
    .如果 (或者 (等于 (.内容, “多项选择”), 等于 (.内容, “材料分析”)))
        赋值 (.内容, “”)
        
        连续赋值 (#黑色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色)
        
        
        多项选择答案识别 ()
        .如果真 (等于 (考试窗口., “考试模式”))
            保存答案 ()
        .如果真结束
        
    .否则
        
        
        
        
    .如果结束
    
.如果结束
获取焦点 ()

.子程序 _E选择框_被单击, 空白型, , 
赋值 (改变答题编辑框内容, 假)
.如果 (或者 (等于 (.内容, “单项选择”), 等于 (.内容, “辨析”)))
    .如果 (等于 (.选中, 真))
        连续赋值 (假, .选中, .选中, .选中, .选中, .选中, .选中, .选中, .选中, .选中)
        连续赋值 (#黑色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色)
        
        赋值 (单项选择当前选择, “E”)
        赋值 (.内容, 单项选择当前选择)
        赋值 (.文本颜色, #红色)
        .如果真 (等于 (考试窗口., “考试模式”))
            保存答案 ()
            _下一题按钮_被单击 ()
        .如果真结束
        
    .否则
        赋值 (.文本颜色, #黑色)
        赋值 (.内容, “”)
    .如果结束
    
.否则
    .如果 (或者 (等于 (.内容, “多项选择”), 等于 (.内容, “材料分析”)))
        赋值 (.内容, “”)
        
        连续赋值 (#黑色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色)
        
        
        多项选择答案识别 ()
        .如果真 (等于 (考试窗口., “考试模式”))
            保存答案 ()
        .如果真结束
        
    .否则
        
    .如果结束
    
.如果结束

获取焦点 ()




.子程序 _F选择框_被单击, 空白型, , 
赋值 (改变答题编辑框内容, 假)
.如果 (或者 (等于 (.内容, “单项选择”), 等于 (.内容, “辨析”)))
    .如果 (等于 (.选中, 真))
        连续赋值 (假, .选中, .选中, .选中, .选中, .选中, .选中, .选中, .选中, .选中)
        连续赋值 (#黑色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色)
        
        赋值 (单项选择当前选择, “F”)
        赋值 (.内容, 单项选择当前选择)
        赋值 (.文本颜色, #红色)
        .如果真 (等于 (考试窗口., “考试模式”))
            保存答案 ()
            _下一题按钮_被单击 ()
        .如果真结束
        
    .否则
        赋值 (.文本颜色, #黑色)
        赋值 (.内容, “”)
    .如果结束
    
.否则
    .如果 (或者 (等于 (.内容, “多项选择”), 等于 (.内容, “材料分析”)))
        赋值 (.内容, “”)
        
        连续赋值 (#黑色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色)
        
        
        多项选择答案识别 ()
        .如果真 (等于 (考试窗口., “考试模式”))
            保存答案 ()
        .如果真结束
        
    .否则
        
    .如果结束
    
.如果结束
获取焦点 ()


.子程序 _G选择框_被单击, 空白型, , 
赋值 (改变答题编辑框内容, 假)
.如果 (或者 (等于 (.内容, “单项选择”), 等于 (.内容, “辨析”)))
    .如果 (等于 (.选中, 真))
        连续赋值 (假, .选中, .选中, .选中, .选中, .选中, .选中, .选中, .选中, .选中)
        连续赋值 (#黑色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色)
        
        赋值 (单项选择当前选择, “G”)
        赋值 (.内容, 单项选择当前选择)
        赋值 (.文本颜色, #红色)
        .如果真 (等于 (考试窗口., “考试模式”))
            保存答案 ()
            _下一题按钮_被单击 ()
        .如果真结束
        
    .否则
        赋值 (.文本颜色, #黑色)
        赋值 (.内容, “”)
    .如果结束
    
.否则
    .如果 (或者 (等于 (.内容, “多项选择”), 等于 (.内容, “材料分析”)))
        赋值 (.内容, “”)
        
        连续赋值 (#黑色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色)
        
        
        多项选择答案识别 ()
        .如果真 (等于 (考试窗口., “考试模式”))
            保存答案 ()
        .如果真结束
        
    .否则
        
    .如果结束
    
.如果结束


.子程序 _H选择框_被单击, 空白型, , 
赋值 (改变答题编辑框内容, 假)
.如果 (或者 (等于 (.内容, “单项选择”), 等于 (.内容, “辨析”)))
    .如果 (等于 (.选中, 真))
        连续赋值 (假, .选中, .选中, .选中, .选中, .选中, .选中, .选中, .选中, .选中)
        连续赋值 (#黑色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色)
        
        赋值 (单项选择当前选择, “H”)
        赋值 (.内容, 单项选择当前选择)
        赋值 (.文本颜色, #红色)
        .如果真 (等于 (考试窗口., “考试模式”))
            保存答案 ()
            _下一题按钮_被单击 ()
        .如果真结束
        
    .否则
        赋值 (.文本颜色, #黑色)
        赋值 (.内容, “”)
    .如果结束
    
.否则
    .如果 (或者 (等于 (.内容, “多项选择”), 等于 (.内容, “材料分析”)))
        赋值 (.内容, “”)
        
        连续赋值 (#黑色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色)
        
        
        多项选择答案识别 ()
        .如果真 (等于 (考试窗口., “考试模式”))
            保存答案 ()
        .如果真结束
        
    .否则
        
    .如果结束
    
.如果结束


.子程序 _I选择框_被单击, 空白型, , 
赋值 (改变答题编辑框内容, 假)
.如果 (或者 (等于 (.内容, “单项选择”), 等于 (.内容, “辨析”)))
    .如果 (等于 (.选中, 真))
        连续赋值 (假, .选中, .选中, .选中, .选中, .选中, .选中, .选中, .选中, .选中)
        连续赋值 (#黑色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色)
        
        赋值 (单项选择当前选择, “I”)
        赋值 (.内容, 单项选择当前选择)
        赋值 (.文本颜色, #红色)
        .如果真 (等于 (考试窗口., “考试模式”))
            保存答案 ()
            _下一题按钮_被单击 ()
        .如果真结束
        
    .否则
        赋值 (.文本颜色, #黑色)
        赋值 (.内容, “”)
    .如果结束
    
.否则
    .如果 (或者 (等于 (.内容, “多项选择”), 等于 (.内容, “材料分析”)))
        赋值 (.内容, “”)
        
        连续赋值 (#黑色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色)
        
        
        多项选择答案识别 ()
        .如果真 (等于 (考试窗口., “考试模式”))
            保存答案 ()
        .如果真结束
        
    .否则
        
    .如果结束
    
.如果结束


.子程序 _J选择框_被单击, 空白型, , 
赋值 (改变答题编辑框内容, 假)
.如果 (或者 (等于 (.内容, “单项选择”), 等于 (.内容, “辨析”)))
    .如果 (等于 (.选中, 真))
        连续赋值 (假, .选中, .选中, .选中, .选中, .选中, .选中, .选中, .选中, .选中)
        连续赋值 (#黑色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色)
        
        赋值 (单项选择当前选择, “J”)
        赋值 (.内容, 单项选择当前选择)
        赋值 (.文本颜色, #红色)
        .如果真 (等于 (考试窗口., “考试模式”))
            保存答案 ()
            _下一题按钮_被单击 ()
        .如果真结束
        
    .否则
        赋值 (.文本颜色, #黑色)
        赋值 (.内容, “”)
    .如果结束
    
.否则
    .如果 (或者 (等于 (.内容, “多项选择”), 等于 (.内容, “材料分析”)))
        赋值 (.内容, “”)
        
        连续赋值 (#黑色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色)
        
        
        多项选择答案识别 ()
        .如果真 (等于 (考试窗口., “考试模式”))
            保存答案 ()
        .如果真结束
        
    .否则
        
    .如果结束
    
.如果结束


.子程序 多项选择答案识别, 空白型, , 
.如果 (等于 (.选中, 真))
    .如果 (小于 (寻找文本 (.内容, “A”, , 真), 0))
        赋值 (.内容, 相加 (.内容, “A”))
        赋值 (.文本颜色, #红色)
    .否则
        赋值 (.文本颜色, #黑色)
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (.选中, 真))
    .如果 (小于 (寻找文本 (.内容, “B”, , 真), 0))
        赋值 (.内容, 相加 (.内容, “B”))
        赋值 (.文本颜色, #红色)
    .否则
        赋值 (.文本颜色, #黑色)
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (.选中, 真))
    .如果 (小于 (寻找文本 (.内容, “C”, , 真), 0))
        赋值 (.内容, 相加 (.内容, “C”))
        赋值 (.文本颜色, #红色)
    .否则
        赋值 (.文本颜色, #黑色)
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (.选中, 真))
    .如果 (小于 (寻找文本 (.内容, “D”, , 真), 0))
        赋值 (.内容, 相加 (.内容, “D”))
        赋值 (.文本颜色, #红色)
    .否则
        赋值 (.文本颜色, #黑色)
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (.选中, 真))
    .如果 (小于 (寻找文本 (.内容, “E”, , 真), 0))
        赋值 (.内容, 相加 (.内容, “E”))
        赋值 (.文本颜色, #红色)
    .否则
        赋值 (.文本颜色, #黑色)
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (.选中, 真))
    .如果 (小于 (寻找文本 (.内容, “F”, , 真), 0))
        赋值 (.内容, 相加 (.内容, “F”))
        赋值 (.文本颜色, #红色)
    .否则
        赋值 (.文本颜色, #黑色)
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (.选中, 真))
    .如果 (小于 (寻找文本 (.内容, “G”, , 真), 0))
        赋值 (.内容, 相加 (.内容, “G”))
        赋值 (.文本颜色, #红色)
    .否则
        赋值 (.文本颜色, #黑色)
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (.选中, 真))
    .如果 (小于 (寻找文本 (.内容, “H”, , 真), 0))
        赋值 (.内容, 相加 (.内容, “H”))
        赋值 (.文本颜色, #红色)
    .否则
        赋值 (.文本颜色, #黑色)
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (.选中, 真))
    .如果 (小于 (寻找文本 (.内容, “I”, , 真), 0))
        赋值 (.内容, 相加 (.内容, “I”))
        赋值 (.文本颜色, #红色)
    .否则
        赋值 (.文本颜色, #黑色)
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (.选中, 真))
    .如果 (小于 (寻找文本 (.内容, “J”, , 真), 0))
        赋值 (.内容, 相加 (.内容, “J”))
        赋值 (.文本颜色, #红色)
    .否则
        赋值 (.文本颜色, #黑色)
    .如果结束
    
.否则
    
.如果结束


.子程序 标记答题选项, 空白型, , 根据答题框内容来标记选择项
.局部变量 填空答案文本, 文本型, , "0", 

连续赋值 (#黑色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色)
连续赋值 (假, .选中, .选中, .选中, .选中, .选中, .选中, .选中, .选中, .选中, .选中)
 ' 如果 (考试窗口.标题 ＝ “考试模式”)
 ' 答题编辑框.内容 ＝ 读 (#用户答案)
.如果 (不等于 (.内容, “填空”))
     ' 连续赋值 (假, A选择框.选中, B选择框.选中, C选择框.选中, D选择框.选中, E选择框.选中)
    .如果 (大于 (寻找文本 (.内容, “A”, , 假), 0))
        赋值 (.选中, 真)
        赋值 (.文本颜色, #红色)
    .否则
        
    .如果结束
    .如果 (大于 (寻找文本 (.内容, “B”, , 假), 0))
        赋值 (.选中, 真)
        赋值 (.文本颜色, #红色)
    .否则
        
    .如果结束
    .如果 (大于 (寻找文本 (.内容, “C”, , 假), 0))
        赋值 (.选中, 真)
        赋值 (.文本颜色, #红色)
    .否则
        
    .如果结束
    .如果 (大于 (寻找文本 (.内容, “D”, , 假), 0))
        赋值 (.选中, 真)
        赋值 (.文本颜色, #红色)
    .否则
        
    .如果结束
    .如果 (大于 (寻找文本 (.内容, “E”, , 假), 0))
        赋值 (.选中, 真)
        赋值 (.文本颜色, #红色)
    .否则
        
    .如果结束
    .如果 (大于 (寻找文本 (.内容, “F”, , 假), 0))
        赋值 (.选中, 真)
        赋值 (.文本颜色, #红色)
    .否则
        
    .如果结束
    .如果 (大于 (寻找文本 (.内容, “G”, , 假), 0))
        赋值 (.选中, 真)
        赋值 (.文本颜色, #红色)
    .否则
        
    .如果结束
    .如果 (大于 (寻找文本 (.内容, “H”, , 假), 0))
        赋值 (.选中, 真)
        赋值 (.文本颜色, #红色)
    .否则
        
    .如果结束
    .如果 (大于 (寻找文本 (.内容, “I”, , 假), 0))
        赋值 (.选中, 真)
        赋值 (.文本颜色, #红色)
    .否则
        
    .如果结束
    .如果 (大于 (寻找文本 (.内容, “J”, , 假), 0))
        赋值 (.选中, 真)
        赋值 (.文本颜色, #红色)
    .否则
        
    .如果结束
    
    
    
.否则
    .如果 (不等于 (.内容, “”))
        
        .计次循环首 (4, )
            .如果 (不等于 (寻找文本 (.内容, “  ”, , 假), -1))
                赋值 (.内容, 文本替换 (.内容, 寻找文本 (.内容, “  ”, , 假), 2, “ ”))
                赋值 (.起始选择位置, 取文本长度 (.内容))
            .否则
                跳出循环 ()
            .如果结束
            
        .计次循环尾 ()
        
        赋值 (填空答案文本, 分割文本 (.内容, “ ”, ))
        .如果 (大于 (取数组成员数 (填空答案文本), 到整数 (.内容)))
            赋值 (.内容, 文本替换 (.内容, 取文本长度 (.内容), 1, ))
             ' 答题编辑框.起始选择位置 ＝ 取文本长度 (答题编辑框.内容)
             ' 重定义数组 (填空答案文本, 真, 到整数 (选项组合框.内容))
        .否则
            
        .如果结束
        
         ' 信息框 (到文本 (取数组成员数 (填空答案文本)), 0, )
        
        赋值 (.内容, “”)
        赋值 (.内容, “”)
        赋值 (.内容, “”)
        赋值 (.内容, “”)
        赋值 (.内容, “”)
        赋值 (.内容, “”)
        赋值 (.内容, “”)
        赋值 (.内容, “”)
        赋值 (.内容, “”)
        赋值 (.内容, “”)
        
        
        .如果 (等于 (取数组成员数 (填空答案文本), 1))
             ' 固定长度 ＝ 取文本长度 (答题编辑框.内容)
            赋值 (.内容, 填空答案文本 [1])
        .否则
            
        .如果结束
        .如果 (等于 (取数组成员数 (填空答案文本), 2))
             ' 固定长度 ＝ 取文本长度 (答题编辑框.内容)
            赋值 (.内容, 填空答案文本 [1])
            赋值 (.内容, 填空答案文本 [2])
        .否则
            
        .如果结束
        .如果 (等于 (取数组成员数 (填空答案文本), 3))
             ' 固定长度 ＝ 取文本长度 (答题编辑框.内容)
            赋值 (.内容, 填空答案文本 [1])
            赋值 (.内容, 填空答案文本 [2])
            赋值 (.内容, 填空答案文本 [3])
        .否则
            
        .如果结束
        .如果 (等于 (取数组成员数 (填空答案文本), 4))
             ' 固定长度 ＝ 取文本长度 (答题编辑框.内容)
            赋值 (.内容, 填空答案文本 [1])
            赋值 (.内容, 填空答案文本 [2])
            赋值 (.内容, 填空答案文本 [3])
            赋值 (.内容, 填空答案文本 [4])
            
        .否则
            
        .如果结束
        .如果 (等于 (取数组成员数 (填空答案文本), 5))
            赋值 (固定长度文本, .内容)
            
            赋值 (.内容, 填空答案文本 [1])
            赋值 (.内容, 填空答案文本 [2])
            赋值 (.内容, 填空答案文本 [3])
            赋值 (.内容, 填空答案文本 [4])
            赋值 (.内容, 填空答案文本 [5])
        .否则
            
        .如果结束
        .如果 (等于 (取数组成员数 (填空答案文本), 6))
            赋值 (固定长度文本, .内容)
            
            赋值 (.内容, 填空答案文本 [1])
            赋值 (.内容, 填空答案文本 [2])
            赋值 (.内容, 填空答案文本 [3])
            赋值 (.内容, 填空答案文本 [4])
            赋值 (.内容, 填空答案文本 [5])
            赋值 (.内容, 填空答案文本 [6])
            
        .否则
            
        .如果结束
        .如果 (等于 (取数组成员数 (填空答案文本), 7))
            赋值 (固定长度文本, .内容)
            
            赋值 (.内容, 填空答案文本 [1])
            赋值 (.内容, 填空答案文本 [2])
            赋值 (.内容, 填空答案文本 [3])
            赋值 (.内容, 填空答案文本 [4])
            赋值 (.内容, 填空答案文本 [5])
            赋值 (.内容, 填空答案文本 [6])
            赋值 (.内容, 填空答案文本 [7])
            
        .否则
            
        .如果结束
        .如果 (等于 (取数组成员数 (填空答案文本), 8))
            赋值 (固定长度文本, .内容)
            
            赋值 (.内容, 填空答案文本 [1])
            赋值 (.内容, 填空答案文本 [2])
            赋值 (.内容, 填空答案文本 [3])
            赋值 (.内容, 填空答案文本 [4])
            赋值 (.内容, 填空答案文本 [5])
            赋值 (.内容, 填空答案文本 [6])
            赋值 (.内容, 填空答案文本 [7])
            赋值 (.内容, 填空答案文本 [8])
        .否则
            
        .如果结束
        .如果 (等于 (取数组成员数 (填空答案文本), 9))
            赋值 (固定长度文本, .内容)
            
            赋值 (.内容, 填空答案文本 [1])
            赋值 (.内容, 填空答案文本 [2])
            赋值 (.内容, 填空答案文本 [3])
            赋值 (.内容, 填空答案文本 [4])
            赋值 (.内容, 填空答案文本 [5])
            赋值 (.内容, 填空答案文本 [6])
            赋值 (.内容, 填空答案文本 [7])
            赋值 (.内容, 填空答案文本 [8])
            赋值 (.内容, 填空答案文本 [9])
            
            
        .否则
            
        .如果结束
        .如果 (等于 (取数组成员数 (填空答案文本), 10))
            赋值 (固定长度文本, .内容)
            
            赋值 (.内容, 填空答案文本 [1])
            赋值 (.内容, 填空答案文本 [2])
            赋值 (.内容, 填空答案文本 [3])
            赋值 (.内容, 填空答案文本 [4])
            赋值 (.内容, 填空答案文本 [5])
            赋值 (.内容, 填空答案文本 [6])
            赋值 (.内容, 填空答案文本 [7])
            赋值 (.内容, 填空答案文本 [8])
            赋值 (.内容, 填空答案文本 [9])
            赋值 (.内容, 填空答案文本 [10])
            
        .否则
            
        .如果结束
        
        
        
        .如果 (大于 (取数组成员数 (填空答案文本), 取数组成员数 (填空答案文本)))
            赋值 (.内容, 固定长度文本)
            赋值 (.起始选择位置, 取文本长度 (.内容))
        .否则
            
        .如果结束
        
    .否则
         ' 备选答案一编辑框.内容 ＝ “”
         ' 备选答案二编辑框.内容 ＝ “”
         ' 备选答案三编辑框.内容 ＝ “”
         ' 备选答案四编辑框.内容 ＝ “”
         ' 备选答案五编辑框.内容 ＝ “”
        
        
    .如果结束
    
    
    
    
    
.如果结束





.子程序 _切换模式按钮_被单击, 空白型, , 

.如果 (等于 (.标题, “开始考试”))
    赋值 (出题模式, 假)
    载入 (抽题窗口, , 真)
    _考试窗口_创建完毕 ()
.否则
    .如果 (等于 (.标题, “开始出题”))
        赋值 (出题模式, 真)
         ' 添加问题图片按钮.标题 ＝ “添加问题图片”
        赋值 (.时钟周期, 0)
        _考试窗口_创建完毕 ()
    .否则
        
    .如果结束
    
.如果结束


.子程序 _答案按钮_被单击, 空白型, , 
 ' 提示编辑框.内容 ＝ 提示信息
 ' 信息框 (答案, 0, )

.子程序 _确定按钮_被单击, 空白型, , 
 ' 完成题数 ＝ 完成题数 ＋ 1
保存答案 ()
.如果 (等于 (.内容, 答案))
    赋值 (该题正确, 真)
     ' 写 (#抽题标记, “对”)
     ' 分数 ＝ 分数 ＋ 到整数 (分值组合框.内容)
     ' 正确题数 ＝ 正确题数 ＋ 1
    
.否则
     ' 分数 ＝ 分数 － 1
    赋值 (该题正确, 假)
     ' 写 (#抽题标记, “错”)
     ' 复制记录 (取运行目录 () ＋ “\错题统计.edb”, , )
     ' 错误题数 ＝ 错误题数 ＋ 1
     ' 错题 ＝ 错题 ＋ “,” ＋ 题号组合框.内容
    
.如果结束
_下一题按钮_被单击 ()


.子程序 _答案按钮_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (临时答案, .内容)
赋值 (.内容, 提示信息)
赋值 (.内容, 答案)
标记答题选项 ()


.子程序 _答案按钮_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.内容, “”)
.如果 (等于 (.内容, #填空))
    连续赋值 (“”, .内容, .内容, .内容, .内容, .内容)
.否则
    
.如果结束
 ' .如果 (不等于 (临时答案, “”))
    赋值 (.内容, 临时答案)
.否则
     ' 答题编辑框.内容 ＝ “在此输入答案”
.如果结束


标记答题选项 ()


.子程序 _提示按钮_被单击, 空白型, , 
 ' 写 (#抽题标记, “错”)


.子程序 _确定按钮_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果 (等于 (对错提示, 真))
    .如果 (等于 (.内容, 答案))
        0.置文本 (“正确！”)
         ' 确定按钮.标题 ＝ “对了”
        
    .否则
        0.置文本 (“错误！”)
         ' 确定按钮.标题 ＝ “错了”
        
    .如果结束
    
.否则
    
.如果结束


.子程序 _确定按钮_鼠标右键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.标题, “确定”)



.子程序 _时钟1_周期事件, 空白型, , 
赋值 (.位置, 相加 (.位置, 1))
赋值 (.标题, 相加 (到文本 (.位置), “：”, 到文本 (.最大位置)))
.如果 (大于 (.位置, .最大位置))
    .如果 (等于 (限时换题, 真))
        _确定按钮_被单击 ()
    .否则
        赋值 (.文本颜色, #红色)
    .如果结束
    
    
.否则
    赋值 (.文本颜色, #黑色)
.如果结束
赋值 (.位置, 相加 (.位置, 1))
赋值 (.标题, 相加 (到文本 (.位置), “：”, 到文本 (.最大位置)))
.如果 (等于 (相减 (.最大位置, .位置), 60))
    1.置文本 (“离交卷时间：1分钟”)
.否则
    
.如果结束

 ' 如果 (考试窗口.标题 ＝ “出题模式”)
 ' 考试时钟分组框.可视 ＝ 假
 ' 考试时钟分组框.禁止 ＝ 真
.如果 (等于 (问题闪现, 真))
    .如果 (等于 (问题闪现内容清空, 假))
        .如果 (大于 (.位置, 3))
            连续赋值 (“”, .内容, .内容, .内容, .内容, .内容, .内容, .内容, .内容, .内容, .内容, .内容, .内容, .内容)
            赋值 (问题闪现内容清空, 真)
            获取焦点 ()
        .否则
            赋值 (问题闪现内容清空, 假)
        .如果结束
        
    .否则
        .如果 (小于或等于 (.位置, 3))
            赋值 (问题闪现内容清空, 假)
        .否则
            
        .如果结束
        
    .如果结束
    
.否则
    
.如果结束



.如果 (大于 (.位置, .最大位置))
     ' 时钟1.时钟周期 ＝ 0
    赋值 (提前时间, 0)
    
    载入 (考试结果统计窗口, , 假)
     ' 全部关闭 ()
    销毁 ()
.否则
    
.如果结束




.子程序 _交卷按钮_被单击, 空白型, , 
.局部变量 未完成题数, 整数型, , , 

赋值 (提前时间, 相减 (.最大位置, .位置))
赋值 (未完成题数, 0)
到首记录 ()
.计次循环首 (取记录数 (), )
    .如果 (等于 (读 (#用户答案), “”))
        赋值 (未完成题数, 相加 (未完成题数, 1))
    .否则
        
    .如果结束
    跳过 ()
.计次循环尾 ()

.如果 (等于 (信息框 (相加 (“剩余时间 [”, 到文本 (提前时间), “]秒。还有 [”, 到文本 (未完成题数), “] 个小题未做，确定交卷吗？”), #确认取消钮, ), #确认钮))
    赋值 (.时钟周期, 0)
    载入 (考试结果统计窗口, , 假)
    .如果 (大于 (取窗口句柄 (), 0))
        销毁 ()
    .否则
        
    .如果结束
    
.否则
     ' 到首记录 ()
     ' 查找 (读 (#题目序号) ＝ 题号)
    赋值 (提前时间, 0)
.如果结束
.如果 (等于 (材料文本窗口被打开, 真))
    材料文本窗口.销毁 ()
.否则
    
.如果结束


.子程序 保存答案, 空白型, , 
.如果 (不等于 (.内容, “在此输入答案”))
     ' 写 (#用户答案, 答题编辑框.内容)
    写 (#用户答案, 删首尾空 (.内容))
.否则
    
.如果结束


.子程序 _题目显示树型框_右键单击项目, 空白型, , 
.如果 (等于 (考试窗口., “出题模式”))
    .如果 (不等于 (.内容, “材料分析”))
        赋值 (.禁止, 真)
    .否则
        赋值 (.禁止, 假)
    .如果结束
    
    弹出菜单 ()
    
.否则
    
.如果结束



.子程序 _加题_被选择, 空白型, , 

_加题按钮_被单击 ()


.子程序 _删题_被选择, 空白型, , 

_删除按钮_被单击 ()




.子程序 _材料_被选择, 空白型, , 
.如果 (等于 (.内容, “材料分析”))
    .如果 (等于 (打开 (), 真))
        写 (#材料文本, .文件名)
        
        .如果 (等于 (材料文本窗口被打开, 真))
            材料文本窗口.销毁 ()
        .否则
            
        .如果结束
        赋值 (材料文本路径, .文件名)
        载入 (材料文本窗口, , 假)
        
        
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束

 ' ＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝



.子程序 _答题编辑框_获得焦点, 空白型, , 
赋值 (改变答题编辑框内容, 真)
.如果 (等于 (考试窗口., “考试模式”))
    .如果 (或者 (等于 (.内容, “简答”), 等于 (.内容, “论述”)))
        .如果 (不等于 (.内容, “”))
            赋值 (.标题, “请在右边的文本框中输入答案！”)
            载入 (材料文本窗口, , 假)
            
        .否则
            
        .如果结束
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束
_答题编辑框_内容被改变 ()


.子程序 _备选答案1编辑框_获得焦点, 空白型, , 
赋值 (改变答题编辑框内容, 假)
_备选答案1编辑框_内容被改变 ()

.子程序 _备选答案2编辑框_获得焦点, 空白型, , 
赋值 (改变答题编辑框内容, 假)
_备选答案2编辑框_内容被改变 ()

.子程序 _备选答案3编辑框_获得焦点, 空白型, , 
赋值 (改变答题编辑框内容, 假)
_备选答案3编辑框_内容被改变 ()

.子程序 _备选答案4编辑框_获得焦点, 空白型, , 
赋值 (改变答题编辑框内容, 假)
_备选答案4编辑框_内容被改变 ()

.子程序 _备选答案5编辑框_获得焦点, 空白型, , 
赋值 (改变答题编辑框内容, 假)
_备选答案5编辑框_内容被改变 ()


.子程序 _备选答案6编辑框_获得焦点, 空白型, , 
赋值 (改变答题编辑框内容, 假)
_备选答案6编辑框_内容被改变 ()

.子程序 _备选答案7编辑框_获得焦点, 空白型, , 
赋值 (改变答题编辑框内容, 假)
_备选答案7编辑框_内容被改变 ()

.子程序 _备选答案8编辑框_获得焦点, 空白型, , 
赋值 (改变答题编辑框内容, 假)
_备选答案8编辑框_内容被改变 ()

.子程序 _备选答案9编辑框_获得焦点, 空白型, , 
赋值 (改变答题编辑框内容, 假)
_备选答案9编辑框_内容被改变 ()

.子程序 _备选答案10编辑框_获得焦点, 空白型, , 
赋值 (改变答题编辑框内容, 假)
_备选答案10编辑框_内容被改变 ()
 ' ＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝

.子程序 _备选答案1编辑框_内容被改变, 空白型, , 
.如果 (并且 (等于 (.内容, “填空”), 等于 (改变答题编辑框内容, 假)))
    赋值 (.内容, 相加 (.内容, “ ”, .内容, “ ”, .内容, “ ”, .内容, “ ”, .内容, .内容, “ ”, .内容, “ ”, .内容, “ ”, .内容, “ ”, .内容))
.否则
    
.如果结束
.如果 (并且 (等于 (考试窗口., “考试模式”), 不等于 (.内容, “”), 等于 (.内容, “填空”)))
    .如果 (不等于 (寻找文本 (填空问题文本, “[ A ]”, , 假), -1))
        赋值 (.内容, 文本替换 (填空问题文本, 相加 (寻找文本 (填空问题文本, “[ A ]”, , 假), 2), 1, .内容))
    .否则
        
    .如果结束
    
    
.否则
    
.如果结束
.如果 (并且 (等于 (考试窗口., “考试模式”), 等于 (.内容, “”), 等于 (.内容, “填空”)))
    赋值 (.内容, 填空问题文本)
.否则
    
.如果结束


.子程序 _备选答案2编辑框_内容被改变, 空白型, , 
.如果 (并且 (等于 (.内容, “填空”), 等于 (改变答题编辑框内容, 假)))
    赋值 (.内容, 相加 (.内容, “ ”, .内容, “ ”, .内容, “ ”, .内容, “ ”, .内容, .内容, “ ”, .内容, “ ”, .内容, “ ”, .内容, “ ”, .内容))
.否则
    
.如果结束
.如果 (并且 (等于 (考试窗口., “考试模式”), 不等于 (.内容, “”), 等于 (.内容, “填空”)))
    .如果 (不等于 (寻找文本 (填空问题文本, “[ B ]”, , 假), -1))
        赋值 (.内容, 文本替换 (填空问题文本, 相加 (寻找文本 (填空问题文本, “[ B ]”, , 假), 2), 1, .内容))
        
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束


.子程序 _备选答案3编辑框_内容被改变, 空白型, , 
.如果 (并且 (等于 (.内容, “填空”), 等于 (改变答题编辑框内容, 假)))
    赋值 (.内容, 相加 (.内容, “ ”, .内容, “ ”, .内容, “ ”, .内容, “ ”, .内容, .内容, “ ”, .内容, “ ”, .内容, “ ”, .内容, “ ”, .内容))
.否则
    
.如果结束
.如果 (并且 (等于 (考试窗口., “考试模式”), 不等于 (.内容, “”), 等于 (.内容, “填空”)))
    .如果 (不等于 (寻找文本 (填空问题文本, “[ C ]”, , 假), -1))
        赋值 (.内容, 文本替换 (填空问题文本, 相加 (寻找文本 (填空问题文本, “[ C ]”, , 假), 2), 1, .内容))
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束


.子程序 _备选答案4编辑框_内容被改变, 空白型, , 
.如果 (并且 (等于 (.内容, “填空”), 等于 (改变答题编辑框内容, 假)))
    赋值 (.内容, 相加 (.内容, “ ”, .内容, “ ”, .内容, “ ”, .内容, “ ”, .内容, .内容, “ ”, .内容, “ ”, .内容, “ ”, .内容, “ ”, .内容))
.否则
    
.如果结束
.如果 (并且 (等于 (考试窗口., “考试模式”), 不等于 (.内容, “”), 等于 (.内容, “填空”)))
    .如果 (不等于 (寻找文本 (填空问题文本, “[ D ]”, , 假), -1))
        赋值 (.内容, 文本替换 (填空问题文本, 相加 (寻找文本 (填空问题文本, “[ D ]”, , 假), 2), 1, .内容))
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束


.子程序 _备选答案5编辑框_内容被改变, 空白型, , 
.如果 (并且 (等于 (.内容, “填空”), 等于 (改变答题编辑框内容, 假)))
    赋值 (.内容, 相加 (.内容, “ ”, .内容, “ ”, .内容, “ ”, .内容, “ ”, .内容, .内容, “ ”, .内容, “ ”, .内容, “ ”, .内容, “ ”, .内容))
.否则
    
.如果结束
.如果 (并且 (等于 (考试窗口., “考试模式”), 不等于 (.内容, “”), 等于 (.内容, “填空”)))
    .如果 (不等于 (寻找文本 (填空问题文本, “[ E ]”, , 假), -1))
        赋值 (.内容, 文本替换 (填空问题文本, 相加 (寻找文本 (填空问题文本, “[ E ]”, , 假), 2), 1, .内容))
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束


.子程序 _备选答案6编辑框_内容被改变, 空白型, , 
.如果 (并且 (等于 (.内容, “填空”), 等于 (改变答题编辑框内容, 假)))
    赋值 (.内容, 相加 (.内容, “ ”, .内容, “ ”, .内容, “ ”, .内容, “ ”, .内容, .内容, “ ”, .内容, “ ”, .内容, “ ”, .内容, “ ”, .内容))
.否则
    
.如果结束
.如果 (并且 (等于 (考试窗口., “考试模式”), 不等于 (.内容, “”), 等于 (.内容, “填空”)))
    .如果 (不等于 (寻找文本 (填空问题文本, “[ F ]”, , 假), -1))
        赋值 (.内容, 文本替换 (填空问题文本, 相加 (寻找文本 (填空问题文本, “[ E ]”, , 假), 2), 1, .内容))
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束


.子程序 _备选答案7编辑框_内容被改变, 空白型, , 
.如果 (并且 (等于 (.内容, “填空”), 等于 (改变答题编辑框内容, 假)))
    赋值 (.内容, 相加 (.内容, “ ”, .内容, “ ”, .内容, “ ”, .内容, “ ”, .内容, .内容, “ ”, .内容, “ ”, .内容, “ ”, .内容, “ ”, .内容))
.否则
    
.如果结束
.如果 (并且 (等于 (考试窗口., “考试模式”), 不等于 (.内容, “”), 等于 (.内容, “填空”)))
    .如果 (不等于 (寻找文本 (填空问题文本, “[ G ]”, , 假), -1))
        赋值 (.内容, 文本替换 (填空问题文本, 相加 (寻找文本 (填空问题文本, “[ G ]”, , 假), 2), 1, .内容))
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束


.子程序 _备选答案8编辑框_内容被改变, 空白型, , 
.如果 (并且 (等于 (.内容, “填空”), 等于 (改变答题编辑框内容, 假)))
    赋值 (.内容, 相加 (.内容, “ ”, .内容, “ ”, .内容, “ ”, .内容, “ ”, .内容, .内容, “ ”, .内容, “ ”, .内容, “ ”, .内容, “ ”, .内容))
.否则
    
.如果结束
.如果 (并且 (等于 (考试窗口., “考试模式”), 不等于 (.内容, “”), 等于 (.内容, “填空”)))
    .如果 (不等于 (寻找文本 (填空问题文本, “[ H ]”, , 假), -1))
        赋值 (.内容, 文本替换 (填空问题文本, 相加 (寻找文本 (填空问题文本, “[ H ]”, , 假), 2), 1, .内容))
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束


.子程序 _备选答案9编辑框_内容被改变, 空白型, , 
.如果 (并且 (等于 (.内容, “填空”), 等于 (改变答题编辑框内容, 假)))
    赋值 (.内容, 相加 (.内容, “ ”, .内容, “ ”, .内容, “ ”, .内容, “ ”, .内容, .内容, “ ”, .内容, “ ”, .内容, “ ”, .内容, “ ”, .内容))
.否则
    
.如果结束
.如果 (并且 (等于 (考试窗口., “考试模式”), 不等于 (.内容, “”), 等于 (.内容, “填空”)))
    .如果 (不等于 (寻找文本 (填空问题文本, “[ I ]”, , 假), -1))
        赋值 (.内容, 文本替换 (填空问题文本, 相加 (寻找文本 (填空问题文本, “[ I ]”, , 假), 2), 1, .内容))
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束


.子程序 _备选答案10编辑框_内容被改变, 空白型, , 
.如果 (并且 (等于 (.内容, “填空”), 等于 (改变答题编辑框内容, 假)))
    赋值 (.内容, 相加 (.内容, “ ”, .内容, “ ”, .内容, “ ”, .内容, “ ”, .内容, .内容, “ ”, .内容, “ ”, .内容, “ ”, .内容, “ ”, .内容))
.否则
    
.如果结束
.如果 (并且 (等于 (考试窗口., “考试模式”), 不等于 (.内容, “”), 等于 (.内容, “填空”)))
    .如果 (不等于 (寻找文本 (填空问题文本, “[ J ]”, , 假), -1))
        赋值 (.内容, 文本替换 (填空问题文本, 相加 (寻找文本 (填空问题文本, “[ J ]”, , 假), 2), 1, .内容))
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束


.子程序 _答题编辑框_内容被改变, 空白型, , 
.局部变量 填空答案文本, 文本型, , "0", 
.局部变量 文件号, 整数型, , , 
.局部变量 临时文本, 文本型, , , 


.如果 (或者 (等于 (.内容, #单项选择), 等于 (.内容, #多项选择), 并且 (等于 (.内容, #材料分析), 大于 (到整数 (.内容), 0))))
    赋值 (.转换方式, 2)
    .如果 (大于 (取代码 (.内容, 1), 相加 (64, 到整数 (.内容))))
        鸣叫 ()
        赋值 (.内容, “请输入规定范围内的大写字母。”)
        赋值 (.被选择字符数, -1)
    .否则
        
    .如果结束
    
.否则
    赋值 (.转换方式, 0)
.如果结束
 ' 多项选择答案识别简化版 ()
.如果 (等于 (改变答题编辑框内容, 真))
    .如果 (或者 (等于 (.内容, “填空”), 等于 (.内容, “单项选择”), 等于 (.内容, “多项选择”), 等于 (.内容, “材料分析”), 等于 (.内容, “辨析”)))
        标记答题选项 ()
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束


.如果 (等于 (考试窗口., “考试模式”))
    写 (#用户答案, 删首尾空 (.内容))
    
    
.否则
    .如果 (不等于 (.内容, “论述”)) ' 出题模式
        .如果 (大于 (取文本长度 (.内容), 512))
            信息框 (“仅能容纳如此多文字，超过部分将不被保存！”, 0, )
            赋值 (.内容, 取文本左边 (.内容, 512))
            
        .否则
            
        .如果结束
        
    .否则
        赋值 (论述题答案, .内容)
    .如果结束
    
.如果结束

.如果 (等于 (考试窗口., “出题模式”))
    .如果 (或者 (等于 (.内容, “简答”), 等于 (.内容, “论述”)))
        .如果 (等于 (寻找文本 (.内容, “]”, , 假), -1))
            赋值 (简答论述分值累计, 0)
        .否则
            
        .如果结束
        
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束




.子程序 _答题编辑框_被双击, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.内容, 删首尾空 (.内容))


.子程序 _问题编辑框_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果 (等于 (考试窗口., “出题模式”))
    .如果 (等于 (键代码, #PageDown键))
        赋值 (当前位置, 寻找文本 (.内容, “[”, 上一位置, 假))
        赋值 (上一位置, 当前位置)
        赋值 (.起始选择位置, 相减 (当前位置, 1))
        赋值 (上一位置, 相加 (上一位置, 1))
        
    .否则
        .如果 (等于 (键代码, #PageUp键))
            赋值 (当前位置, 倒找文本 (.内容, “[”, 上一位置, 假))
            .如果 (等于 (当前位置, -1))
                赋值 (上一位置, 取文本长度 (.内容))
            .否则
                赋值 (上一位置, 当前位置)
                赋值 (.起始选择位置, 相减 (当前位置, 1))
                赋值 (上一位置, 相减 (上一位置, 1))
                
            .如果结束
            
        .否则
            .如果 (并且 (等于 (键代码, #空格键), 不等于 (全局图片路径, “”), 等于 (.可视, 真)))
                载入 (图片显示窗口, , 假)
            .否则
                
            .如果结束
            
        .如果结束
        
    .如果结束
    
.否则
    .如果 (并且 (等于 (键代码, #空格键), 不等于 (全局图片路径, “”), 等于 (.可视, 真)))
        载入 (图片显示窗口, , 假)
    .否则
        
    .如果结束
    
.如果结束


.子程序 _问题编辑框_内容被改变, 空白型, , 
.局部变量 位置1, 整数型, , , 
.局部变量 起始位置, 空白型, , , 
.局部变量 重复次数, 整数型, , , 


 ' 问题超级编辑框.内容 ＝ 问题编辑框.内容

.如果 (等于 (.内容, “填空”))
    赋值 (起始位置, -1)
    .判断循环首 (大于 (位置1, -1))
        赋值 (重复次数, 相加 (重复次数, 1))
        赋值 (位置1, 寻找文本 (.内容, “[”, 起始位置, 假))
        赋值 (起始位置, 相加 (位置1, 1))
    .判断循环尾 ()
    赋值 (重复次数, 相减 (重复次数, 1))
    赋值 (.内容, 到文本 (重复次数))
    _选项组合框_编辑内容被改变 ()
.否则
    
    
.如果结束


.子程序 _导出按钮_被单击, 空白型, , 
载入 (导出试卷窗口, , 假)


.子程序 _按钮2_被单击, 空白型, , 
赋值 (.位置, 0)


.子程序 清空内容, 空白型, , 
连续赋值 (“”, .内容, .内容, .内容, .内容, .内容, .内容, .内容, .内容, .内容, .内容, .内容, .内容, .内容)
连续赋值 (#黑色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色, .文本颜色)
连续赋值 (假, .选中, .选中, .选中, .选中, .选中, .选中, .选中, .选中, .选中, .选中)


.如果 (等于 (.内容, “名词解释”))
    
    赋值 (.内容, “5”)
    赋值 (.内容, 到文本 (相乘 (到整数 (.内容), 时间分值比)))
    赋值 (.内容, “0”)
    _选项组合框_编辑内容被改变 ()
.否则
    
.如果结束

.如果 (等于 (.内容, “单项选择”))
    赋值 (.内容, “2”)
    赋值 (.内容, 到文本 (相乘 (到整数 (.内容), 时间分值比)))
    赋值 (.内容, “4”)
    _选项组合框_编辑内容被改变 ()
    
    
.否则
    
.如果结束

.如果 (等于 (.内容, “多项选择”))
    赋值 (.内容, “2”)
    赋值 (.内容, 到文本 (相乘 (到整数 (.内容), 时间分值比)))
    赋值 (.内容, “4”)
    _选项组合框_编辑内容被改变 ()
    
.否则
    
.如果结束

.如果 (等于 (.内容, “材料分析”))
    赋值 (.内容, “5”)
    赋值 (.内容, 到文本 (相乘 (到整数 (.内容), 时间分值比)))
    赋值 (.内容, “4”)
    _选项组合框_编辑内容被改变 ()
    
.否则
    
.如果结束

.如果 (等于 (.内容, “填空”))
    赋值 (.内容, “[ A ]”)
    赋值 (.内容, “1”)
    赋值 (.内容, 到文本 (相乘 (到整数 (.内容), 时间分值比)))
    赋值 (.内容, “1”)
    _选项组合框_编辑内容被改变 ()
    
.否则
    
.如果结束

.如果 (等于 (.内容, “辨析”))
    赋值 (.内容, “3”)
    赋值 (.内容, 到文本 (相乘 (到整数 (.内容), 时间分值比)))
    赋值 (.内容, “2”)
    _选项组合框_编辑内容被改变 ()
    
.否则
    
.如果结束

.如果 (等于 (.内容, “简答”))
    赋值 (.内容, “10”)
    赋值 (.内容, 到文本 (相乘 (到整数 (.内容), 时间分值比)))
    赋值 (.内容, “0”)
    _选项组合框_编辑内容被改变 ()
    
.否则
    
.如果结束

.如果 (等于 (.内容, “论述”))
    赋值 (.内容, “20”)
    赋值 (.内容, 到文本 (相乘 (到整数 (.内容), 时间分值比)))
    赋值 (.内容, “0”)
    _选项组合框_编辑内容被改变 ()
    
.否则
    
.如果结束

获取焦点 ()





.子程序 _备选答案1编辑框_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 图片完整路径, 文本型, , , 

.如果 (或者 (等于 (取文本右边 (.内容, 3), “jpg”), 等于 (取文本右边 (.内容, 3), “gif”), 等于 (取文本右边 (.内容, 3), “JPG”), 等于 (取文本右边 (.内容, 3), “GIF”)))
    .如果 (等于 (寻找文本 (.内容, “\”, , 假), -1))
        赋值 (图片完整路径, 相加 (题库路径, “\”, .内容))
        
    .否则
        赋值 (图片完整路径, .内容)
    .如果结束
    
.否则
    
.如果结束
 ' 调试输出 (图片完整路径)
 ' .如果 (等于 (.可视, 假))
    .如果 (并且 (不等于 (取字节集长度 (临时图片A), 0), 等于 (临时图片A路径, 图片完整路径)))
        赋值 (.可视, 真)
        .如果 (不等于 (.图片, 临时图片A))
            赋值 (.图片, 临时图片A)
            .如果 (等于 (.可视, 真))
                赋值 (.宽度, .宽度)
                赋值 (.高度, 取整 (相乘 (相除 (未知支持库函数_32 (图片完整路径), 未知支持库函数_31 (图片完整路径)), .宽度)))
                赋值 (.顶边, 相加 (.顶边, .高度, .顶边))
                赋值 (.左边, 相加 (.左边, .左边))
                调试输出 (相加 (到文本 (.高度), “-”, 到文本 (考试窗口.)))
                .如果 (大于 (相加 (.顶边, .高度), 考试窗口.))
                    赋值 (.高度, 相减 (考试窗口., .顶边, 48))
                    赋值 (.宽度, 取整 (相乘 (相除 (未知支持库函数_31 (图片完整路径), 未知支持库函数_32 (图片完整路径)), .高度)))
                    
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .否则
        .如果 (等于 (文件是否存在 (图片完整路径), 真))
            赋值 (.可视, 真)
             ' 当前图片路径 ＝ 备选答案一编辑框.内容
            
            赋值 (.图片, 读入文件 (图片完整路径))
            
            
            赋值 (临时图片A, .图片)
            赋值 (临时图片A路径, 图片完整路径)
            .如果 (等于 (.可视, 真))
                赋值 (.宽度, .宽度)
                赋值 (.高度, 取整 (相乘 (相除 (未知支持库函数_32 (图片完整路径), 未知支持库函数_31 (图片完整路径)), .宽度)))
                
                赋值 (.顶边, 相加 (.顶边, .高度, .顶边))
                赋值 (.左边, 相加 (.左边, .左边))
                .如果 (大于 (相加 (.顶边, .高度), 考试窗口.))
                    赋值 (.高度, 相减 (考试窗口., .顶边, 48))
                    赋值 (.宽度, 取整 (相乘 (相除 (未知支持库函数_31 (图片完整路径), 未知支持库函数_32 (图片完整路径)), .高度)))
                    
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
        .否则
            赋值 (.可视, 假)
            .如果 (大于 (取文本长度 (.内容), 85))
                赋值 (.可视, 假)
                赋值 (., 真)
                赋值 (., .宽度)
                赋值 (., 50)
                赋值 (., 相加 (.左边, .左边))
                赋值 (., 相加 (.顶边, .高度, .顶边))
                赋值 (., .内容)
                
            .否则
                赋值 (., 假)
            .如果结束
            
            
            
        .如果结束
        
    .如果结束
    
    
    
    
    
.否则
     ' .如果 (不等于 (.内容))
         ' 备选答案图片框.可视 ＝ 假
        
        
        
    .否则
        
    .如果结束
    
    
    
.如果结束


.子程序 _备选答案图片框_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

 ' 备选答案图片框.可视 ＝ 假
.如果 (等于 (功能键状态, 1))
    赋值 (.左边, 0)
    赋值 (.顶边, 0)
    赋值 (.宽度, 考试窗口.)
    赋值 (.高度, 相减 (考试窗口., 48))
     ' 备选答案图片框.宽度 ＝ 横向位置 ＋ 50
     ' 备选答案图片框.高度 ＝ 纵向位置 ＋ 50
     ' 载入 (图片显示窗口, , 假)
.否则
    赋值 (.可视, 假)
.如果结束



.子程序 _备选答案2编辑框_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 图片完整路径, 文本型, , , 

.如果 (或者 (等于 (取文本右边 (.内容, 3), “jpg”), 等于 (取文本右边 (.内容, 3), “gif”), 等于 (取文本右边 (.内容, 3), “JPG”), 等于 (取文本右边 (.内容, 3), “GIF”)))
    .如果 (等于 (寻找文本 (.内容, “\”, , 假), -1))
        赋值 (图片完整路径, 相加 (题库路径, “\”, .内容))
        
    .否则
        赋值 (图片完整路径, .内容)
        
    .如果结束
    
.否则
    
.如果结束

 ' .如果 (等于 (.可视, 假))
    .如果 (并且 (不等于 (取字节集长度 (临时图片B), 0), 等于 (临时图片B路径, 图片完整路径)))
        赋值 (.可视, 真)
        .如果 (不等于 (.图片, 临时图片B))
            赋值 (.图片, 临时图片B)
            .如果 (等于 (.可视, 真))
                赋值 (.宽度, .宽度)
                赋值 (.高度, 取整 (相乘 (相除 (未知支持库函数_32 (图片完整路径), 未知支持库函数_31 (图片完整路径)), .宽度)))
                
                赋值 (.宽度, .宽度)
                赋值 (.顶边, 相加 (.顶边, .高度, .顶边))
                赋值 (.左边, 相加 (.左边, .左边))
                .如果 (大于 (相加 (.顶边, .高度), 考试窗口.))
                    赋值 (.高度, 相减 (考试窗口., .顶边, 48))
                    赋值 (.宽度, 取整 (相乘 (相除 (未知支持库函数_31 (图片完整路径), 未知支持库函数_32 (图片完整路径)), .高度)))
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
        
    .否则
        .如果 (等于 (文件是否存在 (图片完整路径), 真))
            赋值 (.可视, 真)
             ' 当前图片路径 ＝ 备选答案二编辑框.内容
            赋值 (.图片, 读入文件 (图片完整路径))
            
            赋值 (临时图片B, .图片)
            赋值 (临时图片B路径, 图片完整路径)
            .如果 (等于 (.可视, 真))
                赋值 (.宽度, .宽度)
                赋值 (.高度, 取整 (相乘 (相除 (未知支持库函数_32 (图片完整路径), 未知支持库函数_31 (图片完整路径)), .宽度)))
                
                赋值 (.宽度, .宽度)
                赋值 (.顶边, 相加 (.顶边, .高度, .顶边))
                赋值 (.左边, 相加 (.左边, .左边))
                .如果 (大于 (相加 (.顶边, .高度), 考试窗口.))
                    赋值 (.高度, 相减 (考试窗口., .顶边, 48))
                    赋值 (.宽度, 取整 (相乘 (相除 (未知支持库函数_31 (图片完整路径), 未知支持库函数_32 (图片完整路径)), .高度)))
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
        .否则
            赋值 (.可视, 假)
            .如果 (大于 (取文本长度 (.内容), 85))
                
                赋值 (.可视, 假)
                赋值 (., 真)
                赋值 (., .宽度)
                赋值 (., 50)
                赋值 (., 相加 (.左边, .左边))
                赋值 (., 相加 (.顶边, .高度, .顶边))
                赋值 (., .内容)
                
            .否则
                赋值 (., 假)
            .如果结束
            
        .如果结束
        
    .如果结束
    
    
    
    
    
    
.否则
     ' .如果 (不等于 (.内容))
         ' 备选答案图片框.可视 ＝ 假
    .否则
        
    .如果结束
    
.如果结束


.子程序 _备选答案3编辑框_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 图片完整路径, 文本型, , , 

.如果 (或者 (等于 (取文本右边 (.内容, 3), “jpg”), 等于 (取文本右边 (.内容, 3), “gif”), 等于 (取文本右边 (.内容, 3), “JPG”), 等于 (取文本右边 (.内容, 3), “GIF”)))
    .如果 (等于 (寻找文本 (.内容, “\”, , 假), -1))
        赋值 (图片完整路径, 相加 (题库路径, “\”, .内容))
        
    .否则
        赋值 (图片完整路径, .内容)
    .如果结束
    
.否则
    
.如果结束

.如果 (并且 (不等于 (取字节集长度 (临时图片C), 0), 等于 (临时图片C路径, 图片完整路径)))
    赋值 (.可视, 真)
    .如果 (不等于 (.图片, 临时图片C))
        赋值 (.图片, 临时图片C)
        .如果 (等于 (.可视, 真))
            赋值 (.宽度, .宽度)
            赋值 (.高度, 取整 (相乘 (相除 (未知支持库函数_32 (图片完整路径), 未知支持库函数_31 (图片完整路径)), .宽度)))
            
            赋值 (.顶边, 相加 (.顶边, .高度, .顶边))
            赋值 (.左边, 相加 (.左边, .左边))
            .如果 (大于 (相加 (.顶边, .高度), 考试窗口.))
                赋值 (.高度, 相减 (考试窗口., .顶边, 48))
                赋值 (.宽度, 取整 (相乘 (相除 (未知支持库函数_31 (图片完整路径), 未知支持库函数_32 (图片完整路径)), .高度)))
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .否则
        
    .如果结束
    
    
.否则
    .如果 (等于 (文件是否存在 (图片完整路径), 真))
        赋值 (.可视, 真)
         ' 当前图片路径 ＝ 备选答案三编辑框.内容
        赋值 (.图片, 读入文件 (图片完整路径))
        
        赋值 (临时图片C, .图片)
        赋值 (临时图片C路径, 图片完整路径)
        .如果 (等于 (.可视, 真))
            赋值 (.宽度, .宽度)
            赋值 (.高度, 取整 (相乘 (相除 (未知支持库函数_32 (图片完整路径), 未知支持库函数_31 (图片完整路径)), .宽度)))
            
            赋值 (.顶边, 相加 (.顶边, .高度, .顶边))
            赋值 (.左边, 相加 (.左边, .左边))
            .如果 (大于 (相加 (.顶边, .高度), 考试窗口.))
                赋值 (.高度, 相减 (考试窗口., .顶边, 48))
                赋值 (.宽度, 取整 (相乘 (相除 (未知支持库函数_31 (图片完整路径), 未知支持库函数_32 (图片完整路径)), .高度)))
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .否则
        赋值 (.可视, 假)
        .如果 (大于 (取文本长度 (.内容), 85))
            
            赋值 (.可视, 假)
            赋值 (., 真)
            赋值 (., .宽度)
            赋值 (., 50)
            赋值 (., 相加 (.左边, .左边))
            赋值 (., 相加 (.顶边, .高度, .顶边))
            赋值 (., .内容)
            
        .否则
            赋值 (., 假)
        .如果结束
        
    .如果结束
    
.如果结束

 ' .如果 (等于 (.可视, 真))
     ' 备选答案图片框.高度 ＝ 取整 (取图片高度 (备选答案三编辑框.内容) ÷ 取图片宽度 (备选答案三编辑框.内容) × 备选答案显示编辑框.宽度)
     ' 如果 (备选答案图片框.顶边 ＋ 备选答案图片框.高度 ＞ 考试窗口.高度)
     ' 备选答案图片框.顶边 ＝ 考试窗口.高度 － 备选答案图片框.高度
     ' 备选答案图片框.左边 ＝ 备选答案分组框.左边 ＋ 备选答案三编辑框.左边
     ' 备选答案图片框.顶边 ＝ 备选答案三编辑框.顶边 ＋ 备选答案三编辑框.高度 ＋ 备选答案分组框.顶边
    
    
.否则
    
.如果结束




 ' .如果 (不等于 (.内容))
     ' 备选答案图片框.可视 ＝ 假
.否则
    
.如果结束



.子程序 _备选答案4编辑框_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 图片完整路径, 文本型, , , 

 ' .如果 (等于 (.可视, 假))
    .如果 (或者 (等于 (取文本右边 (.内容, 3), “jpg”), 等于 (取文本右边 (.内容, 3), “gif”), 等于 (取文本右边 (.内容, 3), “JPG”), 等于 (取文本右边 (.内容, 3), “GIF”)))
        .如果 (等于 (寻找文本 (.内容, “\”, , 假), -1))
            赋值 (图片完整路径, 相加 (题库路径, “\”, .内容))
            
        .否则
            赋值 (图片完整路径, .内容)
        .如果结束
        
    .否则
        
    .如果结束
    
    .如果 (并且 (不等于 (取字节集长度 (临时图片D), 0), 等于 (临时图片D路径, 图片完整路径)))
        赋值 (.可视, 真)
        .如果 (不等于 (.图片, 临时图片D))
            赋值 (.图片, 临时图片D)
            .如果 (等于 (.可视, 真))
                赋值 (.宽度, .宽度)
                赋值 (.高度, 取整 (相乘 (相除 (未知支持库函数_32 (图片完整路径), 未知支持库函数_31 (图片完整路径)), .宽度)))
                
                赋值 (.顶边, 相加 (.顶边, .高度, .顶边))
                赋值 (.左边, 相加 (.左边, .左边))
                .如果 (大于 (相加 (.顶边, .高度), 考试窗口.))
                    赋值 (.高度, 相减 (考试窗口., .顶边, 48))
                    赋值 (.宽度, 取整 (相乘 (相除 (未知支持库函数_31 (图片完整路径), 未知支持库函数_32 (图片完整路径)), .高度)))
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
        
    .否则
        .如果 (等于 (文件是否存在 (图片完整路径), 真))
            赋值 (.可视, 真)
             ' 当前图片路径 ＝ 备选答案四编辑框.内容
            赋值 (.图片, 读入文件 (图片完整路径))
            
            赋值 (临时图片D, .图片)
            赋值 (临时图片D路径, 图片完整路径)
            .如果 (等于 (.可视, 真))
                赋值 (.宽度, .宽度)
                赋值 (.高度, 取整 (相乘 (相除 (未知支持库函数_32 (图片完整路径), 未知支持库函数_31 (图片完整路径)), .宽度)))
                
                赋值 (.顶边, 相加 (.顶边, .高度, .顶边))
                赋值 (.左边, 相加 (.左边, .左边))
                .如果 (大于 (相加 (.顶边, .高度), 考试窗口.))
                    赋值 (.高度, 相减 (考试窗口., .顶边, 48))
                    赋值 (.宽度, 取整 (相乘 (相除 (未知支持库函数_31 (图片完整路径), 未知支持库函数_32 (图片完整路径)), .高度)))
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
        .否则
            赋值 (.可视, 假)
            .如果 (大于 (取文本长度 (.内容), 85))
                
                赋值 (.可视, 假)
                赋值 (., 真)
                赋值 (., .宽度)
                赋值 (., 50)
                赋值 (., 相加 (.左边, .左边))
                赋值 (., 相加 (.顶边, .高度, .顶边))
                赋值 (., .内容)
                
            .否则
                赋值 (., 假)
            .如果结束
            
        .如果结束
        
        
    .如果结束
    
    
    
    
.否则
     ' .如果 (不等于 (.内容))
         ' 备选答案图片框.可视 ＝ 假
    .否则
        
    .如果结束
    
.如果结束


.子程序 _备选答案5编辑框_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 图片完整路径, 文本型, , , 

 ' .如果 (等于 (.可视, 假))
    .如果 (或者 (等于 (取文本右边 (.内容, 3), “jpg”), 等于 (取文本右边 (.内容, 3), “gif”), 等于 (取文本右边 (.内容, 3), “JPG”), 等于 (取文本右边 (.内容, 3), “GIF”)))
        .如果 (等于 (寻找文本 (.内容, “\”, , 假), -1))
            赋值 (图片完整路径, 相加 (题库路径, “\”, .内容))
            
        .否则
            赋值 (图片完整路径, .内容)
        .如果结束
        
    .否则
        
    .如果结束
    
    .如果 (并且 (不等于 (取字节集长度 (临时图片E), 0), 等于 (临时图片E路径, 图片完整路径)))
        赋值 (.可视, 真)
        .如果 (不等于 (.图片, 临时图片E))
            赋值 (.图片, 临时图片E)
            .如果 (等于 (.可视, 真))
                赋值 (.宽度, .宽度)
                赋值 (.高度, 取整 (相乘 (相除 (未知支持库函数_32 (图片完整路径), 未知支持库函数_31 (图片完整路径)), .宽度)))
                
                赋值 (.顶边, 相加 (.顶边, .高度, .顶边))
                赋值 (.左边, 相加 (.左边, .左边))
                .如果 (大于 (相加 (.顶边, .高度), 考试窗口.))
                    赋值 (.高度, 相减 (考试窗口., .顶边, 48))
                    赋值 (.宽度, 取整 (相乘 (相除 (未知支持库函数_31 (图片完整路径), 未知支持库函数_32 (图片完整路径)), .高度)))
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .否则
        .如果 (等于 (文件是否存在 (图片完整路径), 真))
            赋值 (.可视, 真)
             ' 当前图片路径 ＝ 备选答案五编辑框.内容
            赋值 (.图片, 读入文件 (图片完整路径))
            
            赋值 (临时图片E, .图片)
            赋值 (临时图片E路径, 图片完整路径)
            
            .如果 (等于 (.可视, 真))
                赋值 (.宽度, .宽度)
                赋值 (.高度, 取整 (相乘 (相除 (未知支持库函数_32 (图片完整路径), 未知支持库函数_31 (图片完整路径)), .宽度)))
                
                赋值 (.顶边, 相加 (.顶边, .高度, .顶边))
                赋值 (.左边, 相加 (.左边, .左边))
                .如果 (大于 (相加 (.顶边, .高度), 考试窗口.))
                    赋值 (.高度, 相减 (考试窗口., .顶边, 48))
                    赋值 (.宽度, 取整 (相乘 (相除 (未知支持库函数_31 (图片完整路径), 未知支持库函数_32 (图片完整路径)), .高度)))
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
        .否则
            赋值 (.可视, 假)
            .如果 (大于 (取文本长度 (.内容), 85))
                
                赋值 (.可视, 假)
                赋值 (., 真)
                赋值 (., .宽度)
                赋值 (., 50)
                赋值 (., 相加 (.左边, .左边))
                赋值 (., 相加 (.顶边, .高度, .顶边))
                赋值 (., .内容)
                
            .否则
                赋值 (., 假)
            .如果结束
            
        .如果结束
        
        
    .如果结束
    
    
.否则
    
    
    
.如果结束


.子程序 _备选答案6编辑框_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 图片完整路径, 文本型, , , 

 ' .如果 (等于 (.可视, 假))
    .如果 (或者 (等于 (取文本右边 (.内容, 3), “jpg”), 等于 (取文本右边 (.内容, 3), “gif”), 等于 (取文本右边 (.内容, 3), “JPG”), 等于 (取文本右边 (.内容, 3), “GIF”)))
        .如果 (等于 (寻找文本 (.内容, “\”, , 假), -1))
            赋值 (图片完整路径, 相加 (题库路径, “\”, .内容))
            
        .否则
            赋值 (图片完整路径, .内容)
        .如果结束
        
    .否则
        
    .如果结束
    
    .如果 (并且 (不等于 (取字节集长度 (临时图片F), 0), 等于 (临时图片F路径, 图片完整路径)))
        赋值 (.可视, 真)
        .如果 (不等于 (.图片, 临时图片F))
            赋值 (.图片, 临时图片F)
            .如果 (等于 (.可视, 真))
                赋值 (.宽度, .宽度)
                赋值 (.高度, 取整 (相乘 (相除 (未知支持库函数_32 (图片完整路径), 未知支持库函数_31 (图片完整路径)), .宽度)))
                
                赋值 (.顶边, 相加 (.顶边, .高度, .顶边))
                赋值 (.左边, 相加 (.左边, .左边))
                .如果 (大于 (相加 (.顶边, .高度), 考试窗口.))
                    赋值 (.高度, 相减 (考试窗口., .顶边, 48))
                    赋值 (.宽度, 取整 (相乘 (相除 (未知支持库函数_31 (图片完整路径), 未知支持库函数_32 (图片完整路径)), .高度)))
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .否则
        .如果 (等于 (文件是否存在 (图片完整路径), 真))
            赋值 (.可视, 真)
             ' 当前图片路径 ＝ 备选答案五编辑框.内容
            赋值 (.图片, 读入文件 (图片完整路径))
            
            赋值 (临时图片F, .图片)
            赋值 (临时图片F路径, 图片完整路径)
            .如果 (等于 (.可视, 真))
                赋值 (.宽度, .宽度)
                赋值 (.高度, 取整 (相乘 (相除 (未知支持库函数_32 (图片完整路径), 未知支持库函数_31 (图片完整路径)), .宽度)))
                
                赋值 (.顶边, 相加 (.顶边, .高度, .顶边))
                赋值 (.左边, 相加 (.左边, .左边))
                .如果 (大于 (相加 (.顶边, .高度), 考试窗口.))
                    赋值 (.高度, 相减 (考试窗口., .顶边, 48))
                    赋值 (.宽度, 取整 (相乘 (相除 (未知支持库函数_31 (图片完整路径), 未知支持库函数_32 (图片完整路径)), .高度)))
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
        .否则
            赋值 (.可视, 假)
            .如果 (大于 (取文本长度 (.内容), 85))
                
                赋值 (.可视, 假)
                赋值 (., 真)
                赋值 (., .宽度)
                赋值 (., 50)
                赋值 (., 相加 (.左边, .左边))
                赋值 (., 相加 (.顶边, .高度, .顶边))
                赋值 (., .内容)
                
            .否则
                赋值 (., 假)
            .如果结束
            
        .如果结束
        
        
    .如果结束
    
    
    
    
.否则
    
.如果结束


.子程序 _备选答案7编辑框_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 图片完整路径, 文本型, , , 

 ' .如果 (等于 (.可视, 假))
    .如果 (或者 (等于 (取文本右边 (.内容, 3), “jpg”), 等于 (取文本右边 (.内容, 3), “gif”), 等于 (取文本右边 (.内容, 3), “JPG”), 等于 (取文本右边 (.内容, 3), “GIF”)))
        .如果 (等于 (寻找文本 (.内容, “\”, , 假), -1))
            赋值 (图片完整路径, 相加 (题库路径, “\”, .内容))
            
        .否则
            赋值 (图片完整路径, .内容)
        .如果结束
        
    .否则
        
    .如果结束
    
    .如果 (并且 (不等于 (取字节集长度 (临时图片G), 0), 等于 (临时图片G路径, 图片完整路径)))
        赋值 (.可视, 真)
        .如果 (不等于 (.图片, 临时图片G))
            赋值 (.图片, 临时图片G)
            .如果 (等于 (.可视, 真))
                赋值 (.宽度, .宽度)
                赋值 (.高度, 取整 (相乘 (相除 (未知支持库函数_32 (图片完整路径), 未知支持库函数_31 (图片完整路径)), .宽度)))
                
                赋值 (.顶边, 相加 (.顶边, .高度, .顶边))
                赋值 (.左边, 相加 (.左边, .左边))
                .如果 (大于 (相加 (.顶边, .高度), 考试窗口.))
                    赋值 (.高度, 相减 (考试窗口., .顶边, 48))
                    赋值 (.宽度, 取整 (相乘 (相除 (未知支持库函数_31 (图片完整路径), 未知支持库函数_32 (图片完整路径)), .高度)))
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .否则
        .如果 (等于 (文件是否存在 (图片完整路径), 真))
            赋值 (.可视, 真)
             ' 当前图片路径 ＝ 备选答案五编辑框.内容
            赋值 (.图片, 读入文件 (图片完整路径))
            
            赋值 (临时图片G, .图片)
            赋值 (临时图片G路径, 图片完整路径)
            .如果 (等于 (.可视, 真))
                赋值 (.宽度, .宽度)
                赋值 (.高度, 取整 (相乘 (相除 (未知支持库函数_32 (图片完整路径), 未知支持库函数_31 (图片完整路径)), .宽度)))
                
                赋值 (.顶边, 相加 (.顶边, .高度, .顶边))
                赋值 (.左边, 相加 (.左边, .左边))
                .如果 (大于 (相加 (.顶边, .高度), 考试窗口.))
                    赋值 (.高度, 相减 (考试窗口., .顶边, 48))
                    赋值 (.宽度, 取整 (相乘 (相除 (未知支持库函数_31 (图片完整路径), 未知支持库函数_32 (图片完整路径)), .高度)))
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
        .否则
            赋值 (.可视, 假)
            .如果 (大于 (取文本长度 (.内容), 85))
                
                赋值 (.可视, 假)
                赋值 (., 真)
                赋值 (., .宽度)
                赋值 (., 50)
                赋值 (., 相加 (.左边, .左边))
                赋值 (., 相加 (.顶边, .高度, .顶边))
                赋值 (., .内容)
                
            .否则
                赋值 (., 假)
            .如果结束
            
        .如果结束
        
        
    .如果结束
    
    
    
.否则
    
.如果结束


.子程序 _备选答案8编辑框_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 图片完整路径, 文本型, , , 

 ' .如果 (等于 (.可视, 假))
    .如果 (或者 (等于 (取文本右边 (.内容, 3), “jpg”), 等于 (取文本右边 (.内容, 3), “gif”), 等于 (取文本右边 (.内容, 3), “JPG”), 等于 (取文本右边 (.内容, 3), “GIF”)))
        .如果 (等于 (寻找文本 (.内容, “\”, , 假), -1))
            赋值 (图片完整路径, 相加 (题库路径, “\”, .内容))
            
        .否则
            赋值 (图片完整路径, .内容)
        .如果结束
        
    .否则
        
    .如果结束
    
    .如果 (并且 (不等于 (取字节集长度 (临时图片H), 0), 等于 (临时图片H路径, 图片完整路径)))
        赋值 (.可视, 真)
        .如果 (不等于 (.图片, 临时图片H))
            赋值 (.图片, 临时图片H)
            .如果 (等于 (.可视, 真))
                赋值 (.宽度, .宽度)
                赋值 (.高度, 取整 (相乘 (相除 (未知支持库函数_32 (图片完整路径), 未知支持库函数_31 (图片完整路径)), .宽度)))
                
                赋值 (.顶边, 相加 (.顶边, .高度, .顶边))
                赋值 (.左边, 相加 (.左边, .左边))
                .如果 (大于 (相加 (.顶边, .高度), 考试窗口.))
                    赋值 (.高度, 相减 (考试窗口., .顶边, 48))
                    赋值 (.宽度, 取整 (相乘 (相除 (未知支持库函数_31 (图片完整路径), 未知支持库函数_32 (图片完整路径)), .高度)))
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .否则
        .如果 (等于 (文件是否存在 (图片完整路径), 真))
            赋值 (.可视, 真)
             ' 当前图片路径 ＝ 备选答案五编辑框.内容
            赋值 (.图片, 读入文件 (图片完整路径))
            
            赋值 (临时图片H, .图片)
            赋值 (临时图片H路径, 图片完整路径)
            .如果 (等于 (.可视, 真))
                赋值 (.宽度, .宽度)
                赋值 (.高度, 取整 (相乘 (相除 (未知支持库函数_32 (图片完整路径), 未知支持库函数_31 (图片完整路径)), .宽度)))
                
                赋值 (.顶边, 相加 (.顶边, .高度, .顶边))
                赋值 (.左边, 相加 (.左边, .左边))
                .如果 (大于 (相加 (.顶边, .高度), 考试窗口.))
                    赋值 (.高度, 相减 (考试窗口., .顶边, 48))
                    赋值 (.宽度, 取整 (相乘 (相除 (未知支持库函数_31 (图片完整路径), 未知支持库函数_32 (图片完整路径)), .高度)))
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
        .否则
            赋值 (.可视, 假)
            .如果 (大于 (取文本长度 (.内容), 85))
                
                赋值 (.可视, 假)
                赋值 (., 真)
                赋值 (., .宽度)
                赋值 (., 50)
                赋值 (., 相加 (.左边, .左边))
                赋值 (., 相加 (.顶边, .高度, .顶边))
                赋值 (., .内容)
                
            .否则
                赋值 (., 假)
            .如果结束
            
        .如果结束
        
        
    .如果结束
    
    
    
.否则
    
.如果结束


.子程序 _备选答案9编辑框_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 图片完整路径, 文本型, , , 

 ' .如果 (等于 (.可视, 假))
    .如果 (或者 (等于 (取文本右边 (.内容, 3), “jpg”), 等于 (取文本右边 (.内容, 3), “gif”), 等于 (取文本右边 (.内容, 3), “JPG”), 等于 (取文本右边 (.内容, 3), “GIF”)))
        .如果 (等于 (寻找文本 (.内容, “\”, , 假), -1))
            赋值 (图片完整路径, 相加 (题库路径, “\”, .内容))
            
        .否则
            赋值 (图片完整路径, .内容)
        .如果结束
        
    .否则
        
    .如果结束
    
    .如果 (并且 (不等于 (取字节集长度 (临时图片I), 0), 等于 (临时图片I路径, 图片完整路径)))
        赋值 (.可视, 真)
        .如果 (不等于 (.图片, 临时图片I))
            赋值 (.图片, 临时图片I)
            .如果 (等于 (.可视, 真))
                赋值 (.宽度, .宽度)
                赋值 (.高度, 取整 (相乘 (相除 (未知支持库函数_32 (图片完整路径), 未知支持库函数_31 (图片完整路径)), .宽度)))
                
                赋值 (.顶边, 相加 (.顶边, .高度, .顶边))
                赋值 (.左边, 相加 (.左边, .左边))
                .如果 (大于 (相加 (.顶边, .高度), 考试窗口.))
                    赋值 (.高度, 相减 (考试窗口., .顶边, 48))
                    赋值 (.宽度, 取整 (相乘 (相除 (未知支持库函数_31 (图片完整路径), 未知支持库函数_32 (图片完整路径)), .高度)))
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .否则
        .如果 (等于 (文件是否存在 (图片完整路径), 真))
            赋值 (.可视, 真)
             ' 当前图片路径 ＝ 备选答案五编辑框.内容
            赋值 (.图片, 读入文件 (图片完整路径))
            
            赋值 (临时图片I, .图片)
            赋值 (临时图片I路径, 图片完整路径)
            .如果 (等于 (.可视, 真))
                赋值 (.宽度, .宽度)
                赋值 (.高度, 取整 (相乘 (相除 (未知支持库函数_32 (图片完整路径), 未知支持库函数_31 (图片完整路径)), .宽度)))
                
                赋值 (.顶边, 相加 (.顶边, .高度, .顶边))
                赋值 (.左边, 相加 (.左边, .左边))
                .如果 (大于 (相加 (.顶边, .高度), 考试窗口.))
                    赋值 (.高度, 相减 (考试窗口., .顶边, 48))
                    赋值 (.宽度, 取整 (相乘 (相除 (未知支持库函数_31 (图片完整路径), 未知支持库函数_32 (图片完整路径)), .高度)))
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
        .否则
            赋值 (.可视, 假)
            .如果 (大于 (取文本长度 (.内容), 85))
                
                赋值 (.可视, 假)
                赋值 (., 真)
                赋值 (., .宽度)
                赋值 (., 50)
                赋值 (., 相加 (.左边, .左边))
                赋值 (., 相加 (.顶边, .高度, .顶边))
                赋值 (., .内容)
                
            .否则
                赋值 (., 假)
            .如果结束
            
        .如果结束
        
        
    .如果结束
    
    
    
.否则
    
.如果结束


.子程序 _备选答案10编辑框_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 图片完整路径, 文本型, , , 


.如果 (或者 (等于 (取文本右边 (.内容, 3), “jpg”), 等于 (取文本右边 (.内容, 3), “gif”), 等于 (取文本右边 (.内容, 3), “JPG”), 等于 (取文本右边 (.内容, 3), “GIF”)))
    .如果 (等于 (寻找文本 (.内容, “\”, , 假), -1))
        赋值 (图片完整路径, 相加 (题库路径, “\”, .内容))
        
    .否则
        赋值 (图片完整路径, .内容)
    .如果结束
    
.否则
    
.如果结束

.如果 (并且 (不等于 (取字节集长度 (临时图片J), 0), 等于 (临时图片J路径, 图片完整路径)))
    赋值 (.可视, 真)
    .如果 (不等于 (.图片, 临时图片J))
        赋值 (.图片, 临时图片J)
        .如果 (等于 (.可视, 真))
            赋值 (.宽度, .宽度)
            赋值 (.高度, 取整 (相乘 (相除 (未知支持库函数_32 (图片完整路径), 未知支持库函数_31 (图片完整路径)), .宽度)))
            
            赋值 (.顶边, 相加 (.顶边, .高度, .顶边))
            赋值 (.左边, 相加 (.左边, .左边))
            .如果 (大于 (相加 (.顶边, .高度), 考试窗口.))
                赋值 (.高度, 相减 (考试窗口., .顶边, 48))
                赋值 (.宽度, 取整 (相乘 (相除 (未知支持库函数_31 (图片完整路径), 未知支持库函数_32 (图片完整路径)), .高度)))
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .否则
        
    .如果结束
    
.否则
    .如果 (等于 (文件是否存在 (图片完整路径), 真))
        赋值 (.可视, 真)
         ' 当前图片路径 ＝ 备选答案五编辑框.内容
        赋值 (.图片, 读入文件 (图片完整路径))
        
        赋值 (临时图片J, .图片)
        赋值 (临时图片J路径, 图片完整路径)
        .如果 (等于 (.可视, 真))
            赋值 (.宽度, .宽度)
            赋值 (.高度, 取整 (相乘 (相除 (未知支持库函数_32 (图片完整路径), 未知支持库函数_31 (图片完整路径)), .宽度)))
            
            赋值 (.顶边, 相加 (.顶边, .高度, .顶边))
            赋值 (.左边, 相加 (.左边, .左边))
            .如果 (大于 (相加 (.顶边, .高度), 考试窗口.))
                赋值 (.高度, 相减 (考试窗口., .顶边, 48))
                赋值 (.宽度, 取整 (相乘 (相除 (未知支持库函数_31 (图片完整路径), 未知支持库函数_32 (图片完整路径)), .高度)))
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .否则
        赋值 (.可视, 假)
        .如果 (大于 (取文本长度 (.内容), 85))
            
            赋值 (.可视, 假)
            赋值 (., 真)
            赋值 (., .宽度)
            赋值 (., 50)
            赋值 (., 相加 (.左边, .左边))
            赋值 (., 相加 (.顶边, .高度, .顶边))
            赋值 (., .内容)
            
        .否则
            赋值 (., 假)
        .如果结束
        
    .如果结束
    
    
.如果结束






.子程序 _问题编辑框_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 被分割文本, 文本型, , "2", 
.局部变量 分割文本完整路径, 文本型, , , 

.如果 (大于 (取文本长度 (.内容), 368))
     ' 备选答案图片框1.可视 ＝ 假
    赋值 (., 真)
     ' 问题超级编辑框.可视 ＝ 真
    赋值 (., 相加 (.左边, .左边))
    赋值 (., .宽度)
    赋值 (., 取整 (相乘 (相除 (取文本长度 (.内容), 92), 18)))
    赋值 (., 相加 (.顶边, .高度, .顶边))
    赋值 (., .内容)
    赋值 (.顶边, 相加 (., .))
.否则
    赋值 (., 假)
.如果结束

.如果 (等于 (考试窗口., “考试模式”))
    赋值 (被分割文本, 分割文本 (.内容, “|”, 2))
    
    .如果 (等于 (取数组成员数 (被分割文本), 2))
        .如果 (等于 (寻找文本 (被分割文本 [2], “\”, , 假), -1))
            赋值 (分割文本完整路径, 相加 (题库路径, “\”, 被分割文本 [2]))
        .否则
            赋值 (分割文本完整路径, 被分割文本 [2])
        .如果结束
        
        .如果 (等于 (图片路径, 分割文本完整路径))
            .如果 (不等于 (取字节集长度 (临时图片0), 0))
                赋值 (.可视, 真)
                 ' 备选答案图片框1.左边 ＝ 问题分组框.左边 ＋ 问题编辑框.左边
                
                 ' 备选答案图片框1.图片 ＝ 临时图片0
                
            .否则
                
            .如果结束
            
        .否则
            赋值 (图片路径, 分割文本完整路径)
            赋值 (全局图片路径, 图片路径)
            .如果 (等于 (文件是否存在 (图片路径), 真))
                赋值 (.可视, 真)
                赋值 (.图片, 读入文件 (图片路径))
                赋值 (临时图片0, .图片)
                赋值 (.宽度, .宽度)
                赋值 (原图高宽比, 相除 (未知支持库函数_32 (图片路径), 未知支持库函数_31 (图片路径)))
                
                赋值 (.高度, 取整 (相乘 (原图高宽比, .宽度)))
                
                .如果 (等于 (., 假))
                    赋值 (.顶边, 相加 (.顶边, .高度, .顶边))
                .否则
                    赋值 (.顶边, 相加 (., .))
                .如果结束
                
                赋值 (.左边, 相加 (.左边, .左边))
                .如果 (大于 (相加 (.顶边, .高度), 考试窗口.))
                    赋值 (.高度, 相减 (考试窗口., .顶边, 48))
                     ' 备选答案图片框1.高度 ＝ 考试窗口.高度 － (问题分组框.顶边 ＋ 问题分组框.高度) ＋ 问题分组框.高度 － 问题编辑框.顶边 － 问题编辑框.高度
                     ' 信息框 (到文本 (备选答案图片框1.高度) ＋ #换行符 ＋ 到文本 (原图高宽比), 0, )
                    赋值 (.宽度, 取整 (相除 (.高度, 原图高宽比)))
                    赋值 (.左边, 相减 (相加 (.左边, .宽度), .宽度))
                .否则
                    
                .如果结束
                
                
                
                
                
                
                
            .否则
                
            .如果结束
            
        .如果结束
        
        
        
        
        
        
        
    .否则
        赋值 (图片路径, “”)
        
    .如果结束
    
.否则
    
.如果结束






.子程序 _备选答案显示编辑框_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (., 假)
.如果 (等于 (.可视, 真))
    赋值 (.顶边, 相加 (., 20))
    .如果 (大于 (相加 (.顶边, .高度), 考试窗口.))
        赋值 (.高度, 相减 (考试窗口., .顶边))
         ' 信息框 (到文本 (备选答案图片框.高度) ＋ #换行符 ＋ 到文本 (原图高宽比), 0, )
        赋值 (.宽度, 取整 (相除 (.高度, 原图高宽比)))
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束


.子程序 _备选答案分组框_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (., 假)

.子程序 _复制_被选择, 空白型, , 
赋值 (题目副本.问题, .内容)

题目副本.选项赋值 (.选项 [1], .内容, 假)
题目副本.选项赋值 (.选项 [2], .内容, 假)
题目副本.选项赋值 (.选项 [3], .内容, 假)
题目副本.选项赋值 (.选项 [4], .内容, 假)
题目副本.选项赋值 (.选项 [5], .内容, 假)
题目副本.选项赋值 (.选项 [6], .内容, 假)
题目副本.选项赋值 (.选项 [7], .内容, 假)
题目副本.选项赋值 (.选项 [8], .内容, 假)
题目副本.选项赋值 (.选项 [9], .内容, 假)
题目副本.选项赋值 (.选项 [10], .内容, 假)

赋值 (题目副本.答案, .内容)
赋值 (题目副本.提示, .内容)
赋值 (.可视, 真)


.子程序 _粘贴按钮_被单击, 空白型, , 
赋值 (.内容, 题目副本.问题)
赋值 (.内容, 题目副本.取选项文本 (.选项 [1]))
赋值 (.内容, 题目副本.取选项文本 (.选项 [2]))
赋值 (.内容, 题目副本.取选项文本 (.选项 [3]))
赋值 (.内容, 题目副本.取选项文本 (.选项 [4]))
赋值 (.内容, 题目副本.取选项文本 (.选项 [5]))
赋值 (.内容, 题目副本.答案)
赋值 (.内容, 题目副本.提示)
赋值 (.可视, 假)


.子程序 _提示按钮_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.内容, 提示信息)
赋值 (.可视, 假)





.子程序 _提示按钮_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.内容, “”)
赋值 (.可视, 真)


.子程序 _选项组合框_编辑内容被改变, 空白型, , 
.如果真 (等于 (到整数 (.内容), 0))
    连续赋值 (假, .可视, .可视, .可视, .可视, .可视, .可视, .可视, .可视, .可视, .可视)
    连续赋值 (假, .可视, .可视, .可视, .可视, .可视, .可视, .可视, .可视, .可视, .可视)
    连续赋值 (假, .可视, .可视, .可视, .可视, .可视, .可视, .可视, .可视, .可视, .可视)
    赋值 (.可视, 假)
    赋值 (.高度, 0)
.如果真结束

.如果真 (等于 (到整数 (.内容), 1))
    连续赋值 (真, .可视)
    连续赋值 (真, .可视)
    连续赋值 (真, .可视)
    
    连续赋值 (假, .可视, .可视, .可视, .可视, .可视, .可视, .可视, .可视, .可视)
    连续赋值 (假, .可视, .可视, .可视, .可视, .可视, .可视, .可视, .可视, .可视)
    连续赋值 (假, .可视, .可视, .可视, .可视, .可视, .可视, .可视, .可视, .可视)
    赋值 (.可视, 真)
    赋值 (.高度, 相减 (234, 相乘 (相减 (10, 到整数 (.内容)), 21)))
.如果真结束

.如果真 (等于 (到整数 (.内容), 2))
    连续赋值 (真, .可视, .可视)
    连续赋值 (真, .可视, .可视)
    连续赋值 (真, .可视, .可视)
    
    连续赋值 (假, .可视, .可视, .可视, .可视, .可视, .可视, .可视, .可视)
    连续赋值 (假, .可视, .可视, .可视, .可视, .可视, .可视, .可视, .可视)
    连续赋值 (假, .可视, .可视, .可视, .可视, .可视, .可视, .可视, .可视)
    赋值 (.可视, 真)
    赋值 (.高度, 相减 (234, 相乘 (相减 (10, 到整数 (.内容)), 21)))
    
.如果真结束

.如果真 (等于 (到整数 (.内容), 3))
     ' 连续赋值 (真, )
    连续赋值 (真, .可视, .可视, .可视)
    连续赋值 (真, .可视, .可视, .可视)
    连续赋值 (真, .可视, .可视, .可视)
    
    连续赋值 (假, .可视, .可视, .可视, .可视, .可视, .可视, .可视)
    连续赋值 (假, .可视, .可视, .可视, .可视, .可视, .可视, .可视)
    连续赋值 (假, .可视, .可视, .可视, .可视, .可视, .可视, .可视)
    赋值 (.可视, 真)
    赋值 (.高度, 相减 (234, 相乘 (相减 (10, 到整数 (.内容)), 21)))
    
.如果真结束

.如果真 (等于 (到整数 (.内容), 4))
     ' 连续赋值 (真, )
    连续赋值 (真, .可视, .可视, .可视, .可视)
    连续赋值 (真, .可视, .可视, .可视, .可视)
    连续赋值 (真, .可视, .可视, .可视, .可视)
    
    连续赋值 (假, .可视, .可视, .可视, .可视, .可视, .可视)
    连续赋值 (假, .可视, .可视, .可视, .可视, .可视, .可视)
    连续赋值 (假, .可视, .可视, .可视, .可视, .可视, .可视)
    赋值 (.可视, 真)
    赋值 (.高度, 相减 (234, 相乘 (相减 (10, 到整数 (.内容)), 21)))
    
.如果真结束

.如果真 (等于 (到整数 (.内容), 5))
     ' 连续赋值 (真, )
    连续赋值 (真, .可视, .可视, .可视, .可视, .可视)
    连续赋值 (真, .可视, .可视, .可视, .可视, .可视)
    连续赋值 (真, .可视, .可视, .可视, .可视, .可视)
    
    
    连续赋值 (假, .可视, .可视, .可视, .可视, .可视)
    连续赋值 (假, .可视, .可视, .可视, .可视, .可视)
    连续赋值 (假, .可视, .可视, .可视, .可视, .可视)
    赋值 (.可视, 真)
    赋值 (.高度, 相减 (234, 相乘 (相减 (10, 到整数 (.内容)), 21)))
    
.如果真结束

.如果真 (等于 (到整数 (.内容), 6))
     ' 连续赋值 (真, )
    连续赋值 (真, .可视, .可视, .可视, .可视, .可视, .可视)
    连续赋值 (真, .可视, .可视, .可视, .可视, .可视, .可视)
    连续赋值 (真, .可视, .可视, .可视, .可视, .可视, .可视)
    
    
    连续赋值 (假, .可视, .可视, .可视, .可视)
    连续赋值 (假, .可视, .可视, .可视, .可视)
    连续赋值 (假, .可视, .可视, .可视, .可视)
    赋值 (.可视, 真)
    赋值 (.高度, 相减 (234, 相乘 (相减 (10, 到整数 (.内容)), 21)))
    
.如果真结束

.如果真 (等于 (到整数 (.内容), 7))
     ' 连续赋值 (真, )
    连续赋值 (真, .可视, .可视, .可视, .可视, .可视, .可视, .可视)
    连续赋值 (真, .可视, .可视, .可视, .可视, .可视, .可视, .可视)
    连续赋值 (真, .可视, .可视, .可视, .可视, .可视, .可视, .可视)
    
    
    连续赋值 (假, .可视, .可视, .可视)
    连续赋值 (假, .可视, .可视, .可视)
    连续赋值 (假, .可视, .可视, .可视)
    赋值 (.可视, 真)
    赋值 (.高度, 相减 (234, 相乘 (相减 (10, 到整数 (.内容)), 21)))
    
.如果真结束

.如果真 (等于 (到整数 (.内容), 8))
     ' 连续赋值 (真, )
    连续赋值 (真, .可视, .可视, .可视, .可视, .可视, .可视, .可视, .可视)
    连续赋值 (真, .可视, .可视, .可视, .可视, .可视, .可视, .可视, .可视)
    连续赋值 (真, .可视, .可视, .可视, .可视, .可视, .可视, .可视, .可视)
    
    
    连续赋值 (假, .可视, .可视)
    连续赋值 (假, .可视, .可视)
    连续赋值 (假, .可视, .可视)
    赋值 (.可视, 真)
    赋值 (.高度, 相减 (234, 相乘 (相减 (10, 到整数 (.内容)), 21)))
    
.如果真结束

.如果真 (等于 (到整数 (.内容), 9))
     ' 连续赋值 (真, )
    连续赋值 (真, .可视, .可视, .可视, .可视, .可视, .可视, .可视, .可视, .可视)
    连续赋值 (真, .可视, .可视, .可视, .可视, .可视, .可视, .可视, .可视, .可视)
    连续赋值 (真, .可视, .可视, .可视, .可视, .可视, .可视, .可视, .可视, .可视)
    
    连续赋值 (假, .可视)
    连续赋值 (假, .可视)
    连续赋值 (假, .可视)
    赋值 (.可视, 真)
    赋值 (.高度, 相减 (234, 相乘 (相减 (10, 到整数 (.内容)), 21)))
    
.如果真结束

.如果真 (等于 (到整数 (.内容), 10))
     ' 连续赋值 (真, )
    连续赋值 (真, .可视, .可视, .可视, .可视, .可视, .可视, .可视, .可视, .可视, .可视)
    连续赋值 (真, .可视, .可视, .可视, .可视, .可视, .可视, .可视, .可视, .可视, .可视)
    连续赋值 (真, .可视, .可视, .可视, .可视, .可视, .可视, .可视, .可视, .可视, .可视)
    赋值 (.可视, 真)
    赋值 (.高度, 相减 (234, 相乘 (相减 (10, 到整数 (.内容)), 21)))
    
.如果真结束

赋值 (.顶边, 相加 (.顶边, .高度, 1))
赋值 (.顶边, 相加 (.顶边, .高度, 1))
赋值 (.高度, 相减 (相加 (.高度, .高度, .高度, .高度), 5))
赋值 (考试窗口., 相加 (.顶边, .高度, 50))

.子程序 _选项组合框_列表项被选择, 空白型, , 
_选项组合框_编辑内容被改变 ()
.如果 (并且 (等于 (.内容, “填空”), 等于 (考试窗口., “出题模式”)))
    获取焦点 ()
    赋值 (.起始选择位置, 取文本长度 (.内容))
    .如果 (等于 (.内容, “0”))
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ A ]”, , 假), 5, )
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ B ]”, , 假), 5, )
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ C ]”, , 假), 5, )
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ D ]”, , 假), 5, )
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ E ]”, , 假), 5, )
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ F ]”, , 假), 5, )
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ G ]”, , 假), 5, )
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ H ]”, , 假), 5, )
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ I ]”, , 假), 5, )
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ J ]”, , 假), 5, )
    .否则
        
    .如果结束
    .如果 (等于 (.内容, “1”))
        
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ B ]”, , 假), 5, )
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ C ]”, , 假), 5, )
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ D ]”, , 假), 5, )
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ E ]”, , 假), 5, )
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ F ]”, , 假), 5, )
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ G ]”, , 假), 5, )
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ H ]”, , 假), 5, )
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ I ]”, , 假), 5, )
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ J ]”, , 假), 5, )
        
        .如果 (等于 (寻找文本 (.内容, “[ A ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ A ]”))
        .否则
            
        .如果结束
        
        
    .否则
        
    .如果结束
    .如果 (等于 (.内容, “2”))
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ C ]”, , 假), 5, )
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ D ]”, , 假), 5, )
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ E ]”, , 假), 5, )
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ F ]”, , 假), 5, )
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ G ]”, , 假), 5, )
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ H ]”, , 假), 5, )
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ I ]”, , 假), 5, )
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ J ]”, , 假), 5, )
        
        .如果 (等于 (寻找文本 (.内容, “[ A ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ A ]”))
        .否则
            
        .如果结束
        .如果 (等于 (寻找文本 (.内容, “[ B ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ B ]”))
        .否则
            
        .如果结束
        
        
    .否则
        
    .如果结束
    .如果 (等于 (.内容, “3”))
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ D ]”, , 假), 5, )
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ E ]”, , 假), 5, )
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ F ]”, , 假), 5, )
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ G ]”, , 假), 5, )
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ H ]”, , 假), 5, )
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ I ]”, , 假), 5, )
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ J ]”, , 假), 5, )
        
        .如果 (等于 (寻找文本 (.内容, “[ A ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ A ]”))
        .否则
            
        .如果结束
        .如果 (等于 (寻找文本 (.内容, “[ B ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ B ]”))
        .否则
            
        .如果结束
        .如果 (等于 (寻找文本 (.内容, “[ C ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ C ]”))
        .否则
            
        .如果结束
        
        
    .否则
        
    .如果结束
    .如果 (等于 (.内容, “4”))
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ E ]”, , 假), 5, )
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ F ]”, , 假), 5, )
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ G ]”, , 假), 5, )
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ H ]”, , 假), 5, )
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ I ]”, , 假), 5, )
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ J ]”, , 假), 5, )
        
        .如果 (等于 (寻找文本 (.内容, “[ A ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ A ]”))
        .否则
            
        .如果结束
        .如果 (等于 (寻找文本 (.内容, “[ B ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ B ]”))
        .否则
            
        .如果结束
        .如果 (等于 (寻找文本 (.内容, “[ C ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ C ]”))
        .否则
            
        .如果结束
        .如果 (等于 (寻找文本 (.内容, “[ D ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ D ]”))
        .否则
            
        .如果结束
        
        
    .否则
        
    .如果结束
    .如果 (等于 (.内容, “5”))
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ F ]”, , 假), 5, )
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ G ]”, , 假), 5, )
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ H ]”, , 假), 5, )
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ I ]”, , 假), 5, )
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ J ]”, , 假), 5, )
        
        .如果 (等于 (寻找文本 (.内容, “[ A ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ A ]”))
        .否则
            
        .如果结束
        .如果 (等于 (寻找文本 (.内容, “[ B ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ B ]”))
        .否则
            
        .如果结束
        .如果 (等于 (寻找文本 (.内容, “[ C ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ C ]”))
        .否则
            
        .如果结束
        .如果 (等于 (寻找文本 (.内容, “[ D ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ D ]”))
        .否则
            
        .如果结束
        .如果 (等于 (寻找文本 (.内容, “[ E ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ E ]”))
        .否则
            
        .如果结束
        
        
    .否则
        
    .如果结束
    .如果 (等于 (.内容, “6”))
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ G ]”, , 假), 5, )
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ H ]”, , 假), 5, )
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ I ]”, , 假), 5, )
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ J ]”, , 假), 5, )
        
        .如果 (等于 (寻找文本 (.内容, “[ A ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ A ]”))
        .否则
            
        .如果结束
        .如果 (等于 (寻找文本 (.内容, “[ B ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ B ]”))
        .否则
            
        .如果结束
        .如果 (等于 (寻找文本 (.内容, “[ C ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ C ]”))
        .否则
            
        .如果结束
        .如果 (等于 (寻找文本 (.内容, “[ D ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ D ]”))
        .否则
            
        .如果结束
        .如果 (等于 (寻找文本 (.内容, “[ E ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ E ]”))
        .否则
            
        .如果结束
        .如果 (等于 (寻找文本 (.内容, “[ F ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ F ]”))
        .否则
            
        .如果结束
        
        
    .否则
        
    .如果结束
    .如果 (等于 (.内容, “7”))
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ H ]”, , 假), 5, )
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ I ]”, , 假), 5, )
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ J ]”, , 假), 5, )
        
        .如果 (等于 (寻找文本 (.内容, “[ A ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ A ]”))
        .否则
            
        .如果结束
        .如果 (等于 (寻找文本 (.内容, “[ B ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ B ]”))
        .否则
            
        .如果结束
        .如果 (等于 (寻找文本 (.内容, “[ C ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ C ]”))
        .否则
            
        .如果结束
        .如果 (等于 (寻找文本 (.内容, “[ D ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ D ]”))
        .否则
            
        .如果结束
        .如果 (等于 (寻找文本 (.内容, “[ E ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ E ]”))
        .否则
            
        .如果结束
        .如果 (等于 (寻找文本 (.内容, “[ F ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ F ]”))
        .否则
            
        .如果结束
        .如果 (等于 (寻找文本 (.内容, “[ G ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ G ]”))
        .否则
            
        .如果结束
        
        
    .否则
        
    .如果结束
    .如果 (等于 (.内容, “8”))
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ I ]”, , 假), 5, )
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ J ]”, , 假), 5, )
        
        .如果 (等于 (寻找文本 (.内容, “[ A ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ A ]”))
        .否则
            
        .如果结束
        .如果 (等于 (寻找文本 (.内容, “[ B ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ B ]”))
        .否则
            
        .如果结束
        .如果 (等于 (寻找文本 (.内容, “[ C ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ C ]”))
        .否则
            
        .如果结束
        .如果 (等于 (寻找文本 (.内容, “[ D ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ D ]”))
        .否则
            
        .如果结束
        .如果 (等于 (寻找文本 (.内容, “[ E ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ E ]”))
        .否则
            
        .如果结束
        .如果 (等于 (寻找文本 (.内容, “[ F ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ F ]”))
        .否则
            
        .如果结束
        .如果 (等于 (寻找文本 (.内容, “[ G ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ G ]”))
        .否则
            
        .如果结束
        .如果 (等于 (寻找文本 (.内容, “[ H ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ H ]”))
        .否则
            
        .如果结束
        
        
    .否则
        
    .如果结束
    .如果 (等于 (.内容, “9”))
         ' 问题编辑框.内容 ＝ 文本替换 (问题编辑框.内容, 寻找文本 (问题编辑框.内容, “[ J ]”, , 假), 5, )
        
        .如果 (等于 (寻找文本 (.内容, “[ A ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ A ]”))
        .否则
            
        .如果结束
        .如果 (等于 (寻找文本 (.内容, “[ B ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ B ]”))
        .否则
            
        .如果结束
        .如果 (等于 (寻找文本 (.内容, “[ C ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ C ]”))
        .否则
            
        .如果结束
        .如果 (等于 (寻找文本 (.内容, “[ D ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ D ]”))
        .否则
            
        .如果结束
        .如果 (等于 (寻找文本 (.内容, “[ E ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ E ]”))
        .否则
            
        .如果结束
        .如果 (等于 (寻找文本 (.内容, “[ F ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ F ]”))
        .否则
            
        .如果结束
        .如果 (等于 (寻找文本 (.内容, “[ G ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ G ]”))
        .否则
            
        .如果结束
        .如果 (等于 (寻找文本 (.内容, “[ H ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ H ]”))
        .否则
            
        .如果结束
        .如果 (等于 (寻找文本 (.内容, “[ I ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ I ]”))
        .否则
            
        .如果结束
        
        
    .否则
        
    .如果结束
    .如果 (等于 (.内容, “10”))
        
        .如果 (等于 (寻找文本 (.内容, “[ A ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ A ]”))
        .否则
            
        .如果结束
        .如果 (等于 (寻找文本 (.内容, “[ B ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ B ]”))
        .否则
            
        .如果结束
        .如果 (等于 (寻找文本 (.内容, “[ C ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ C ]”))
        .否则
            
        .如果结束
        .如果 (等于 (寻找文本 (.内容, “[ D ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ D ]”))
        .否则
            
        .如果结束
        .如果 (等于 (寻找文本 (.内容, “[ E ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ E ]”))
        .否则
            
        .如果结束
        .如果 (等于 (寻找文本 (.内容, “[ F ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ F ]”))
        .否则
            
        .如果结束
        .如果 (等于 (寻找文本 (.内容, “[ G ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ G ]”))
        .否则
            
        .如果结束
        .如果 (等于 (寻找文本 (.内容, “[ H ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ H ]”))
        .否则
            
        .如果结束
        .如果 (等于 (寻找文本 (.内容, “[ I ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ I ]”))
        .否则
            
        .如果结束
        .如果 (等于 (寻找文本 (.内容, “[ J ]”, , 假), -1))
            赋值 (.内容, 相加 (.内容, “[ J ]”))
        .否则
            
        .如果结束
        
    .否则
        
    .如果结束
    
    
    
    
.否则
    
.如果结束
.如果 (等于 (.内容, “填空”))
    赋值 (.内容, .取项目文本 (.现行选中项))
    _分值组合框_列表项被选择 ()
.否则
    
.如果结束


.子程序 _分值组合框_列表项被选择, 空白型, , 
 ' 时间组合框.内容 ＝ 到文本 (到整数 (分值组合框.取项目文本 (分值组合框.现行选中项)) × 20)
赋值 (.内容, 到文本 (相乘 (到整数 (.内容), 时间分值比)))

.如果 (等于 (考试窗口., “出题模式”))
    .如果 (或者 (等于 (.内容, “简答”), 等于 (.内容, “论述”)))
        赋值 (简答论述分值累计, 相加 (简答论述分值累计, 到整数 (.内容)))
        赋值 (.内容, 到文本 (简答论述分值累计))
        赋值 (.内容, 相加 (.内容, “ [”, .取项目文本 (.现行选中项), “分] ”))
        获取焦点 ()
        赋值 (.起始选择位置, 取文本长度 (.内容))
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束


.子程序 _备选答案1编辑框_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 交换变量, 文本型, , , 


.如果 (并且 (等于 (功能键状态, 1), 等于 (键代码, #下光标键)))
    .如果 (等于 (.可视, 真))
        赋值 (交换变量, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, 交换变量)
        获取焦点 ()
        
    .否则
         ' #PAGEUP键 #PAGEDOWN键
    .如果结束
    
.否则
    
.如果结束
.如果 (或者 (等于 (键代码, #下光标键), 等于 (键代码, #回车键)))
    .如果 (等于 (.可视, 真))
        获取焦点 ()
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (键代码, #回车键))
    .如果 (等于 (.可视, 假))
        赋值 (.内容, 到文本 (相加 (到整数 (.内容), 1)))
        _选项组合框_编辑内容被改变 ()
        获取焦点 ()
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (功能键状态, 1))
    .如果 (等于 (键代码, #D键))
        赋值 (.内容, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, “”)
        赋值 (.内容, 到文本 (相减 (到整数 (.内容), 1)))
        _选项组合框_编辑内容被改变 ()
         ' 备选答案1编辑框.获取焦点 ()
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (键代码, #Ins键))
    赋值 (.内容, .内容)
    赋值 (.内容, .内容)
    赋值 (.内容, .内容)
    赋值 (.内容, .内容)
    赋值 (.内容, .内容)
    赋值 (.内容, .内容)
    赋值 (.内容, .内容)
    赋值 (.内容, .内容)
    赋值 (.内容, .内容)
    赋值 (.内容, “”)
    赋值 (.内容, 到文本 (相加 (到整数 (.内容), 1)))
    _选项组合框_编辑内容被改变 ()
     ' 备选答案1编辑框.获取焦点 ()
.否则
    
.如果结束


.子程序 _备选答案2编辑框_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 交换变量, 文本型, , , 

.如果 (等于 (.可视, 真))
    .如果 (并且 (等于 (功能键状态, 1), 等于 (键代码, #上光标键)))
        .如果 (等于 (.可视, 真))
            赋值 (交换变量, .内容)
            赋值 (.内容, .内容)
            赋值 (.内容, 交换变量)
            获取焦点 ()
            
        .否则
            
        .如果结束
         ' 交换内容 (备选答案1编辑框.内容, 备选答案2编辑框.内容)
    .否则
        
    .如果结束
    .如果 (并且 (等于 (功能键状态, 1), 等于 (键代码, #下光标键)))
        .如果 (等于 (.可视, 真))
            赋值 (交换变量, .内容)
            赋值 (.内容, .内容)
            赋值 (.内容, 交换变量)
            获取焦点 ()
            
        .否则
            
        .如果结束
         ' 交换内容 (备选答案3编辑框.内容, 备选答案2编辑框.内容)
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (键代码, #上光标键))
    .如果 (等于 (.可视, 真))
        获取焦点 ()
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (或者 (等于 (键代码, #下光标键), 等于 (键代码, #回车键)))
    .如果 (等于 (.可视, 真))
        获取焦点 ()
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (键代码, #回车键))
    .如果 (等于 (.可视, 假))
        赋值 (.内容, 到文本 (相加 (到整数 (.内容), 1)))
        _选项组合框_编辑内容被改变 ()
        获取焦点 ()
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (功能键状态, 1))
    .如果 (等于 (键代码, #D键))
        
        赋值 (.内容, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, “”)
        赋值 (.内容, 到文本 (相减 (到整数 (.内容), 1)))
        _选项组合框_编辑内容被改变 ()
         ' 备选答案1编辑框.获取焦点 ()
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (键代码, #Ins键))
    赋值 (.内容, .内容)
    赋值 (.内容, .内容)
    赋值 (.内容, .内容)
    赋值 (.内容, .内容)
    赋值 (.内容, .内容)
    赋值 (.内容, .内容)
    赋值 (.内容, .内容)
    赋值 (.内容, .内容)
    
    赋值 (.内容, “”)
    赋值 (.内容, 到文本 (相加 (到整数 (.内容), 1)))
    _选项组合框_编辑内容被改变 ()
     ' 备选答案1编辑框.获取焦点 ()
.否则
    
.如果结束


.子程序 _备选答案3编辑框_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 交换变量, 文本型, , , 


.如果 (并且 (等于 (功能键状态, 1), 等于 (键代码, #上光标键)))
    .如果 (等于 (.可视, 真))
        赋值 (交换变量, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, 交换变量)
        获取焦点 ()
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (并且 (等于 (功能键状态, 1), 等于 (键代码, #下光标键)))
    .如果 (等于 (.可视, 真))
        赋值 (交换变量, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, 交换变量)
        获取焦点 ()
        
    .否则
        
    .如果结束
     ' 交换内容 (备选答案4编辑框.内容, 备选答案3编辑框.内容)
.否则
    
.如果结束

.如果 (等于 (键代码, #上光标键))
    .如果 (等于 (.可视, 真))
        获取焦点 ()
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (或者 (等于 (键代码, #下光标键), 等于 (键代码, #回车键)))
    .如果 (等于 (.可视, 真))
        获取焦点 ()
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (键代码, #回车键))
    .如果 (等于 (.可视, 假))
        赋值 (.内容, 到文本 (相加 (到整数 (.内容), 1)))
        _选项组合框_编辑内容被改变 ()
        获取焦点 ()
    .否则
        
    .如果结束
    
.否则
    
.如果结束

.如果 (等于 (功能键状态, 1))
    .如果 (等于 (键代码, #D键))
        赋值 (.内容, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, “”)
        赋值 (.内容, 到文本 (相减 (到整数 (.内容), 1)))
        _选项组合框_编辑内容被改变 ()
         ' 备选答案1编辑框.获取焦点 ()
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (键代码, #Ins键))
    赋值 (.内容, .内容)
    赋值 (.内容, .内容)
    赋值 (.内容, .内容)
    赋值 (.内容, .内容)
    赋值 (.内容, .内容)
    赋值 (.内容, .内容)
    赋值 (.内容, .内容)
    
    赋值 (.内容, “”)
    赋值 (.内容, 到文本 (相加 (到整数 (.内容), 1)))
    _选项组合框_编辑内容被改变 ()
     ' 备选答案1编辑框.获取焦点 ()
.否则
    
.如果结束


.子程序 _备选答案4编辑框_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 交换变量, 文本型, , , 


.如果 (并且 (等于 (功能键状态, 1), 等于 (键代码, #上光标键)))
    .如果 (等于 (.可视, 真))
        赋值 (交换变量, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, 交换变量)
        获取焦点 ()
        
    .否则
        
    .如果结束
     ' 交换内容 (备选答案3编辑框.内容, 备选答案4编辑框.内容)
.否则
    
.如果结束
.如果 (并且 (等于 (功能键状态, 1), 等于 (键代码, #下光标键)))
    .如果 (等于 (.可视, 真))
        赋值 (交换变量, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, 交换变量)
        获取焦点 ()
        
    .否则
        
    .如果结束
     ' 交换内容 (备选答案5编辑框.内容, 备选答案4编辑框.内容)
.否则
    
.如果结束

.如果 (等于 (键代码, #上光标键))
    .如果 (等于 (.可视, 真))
        获取焦点 ()
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (或者 (等于 (键代码, #下光标键), 等于 (键代码, #回车键)))
    .如果 (等于 (.可视, 真))
        获取焦点 ()
    .否则
        
    .如果结束
    
.否则
    
.如果结束

.如果 (等于 (键代码, #回车键))
    .如果 (等于 (.可视, 假))
        赋值 (.内容, 到文本 (相加 (到整数 (.内容), 1)))
        _选项组合框_编辑内容被改变 ()
        获取焦点 ()
    .否则
        
    .如果结束
    
.否则
    
.如果结束

.如果 (等于 (功能键状态, 1))
    .如果 (等于 (键代码, #D键))
        赋值 (.内容, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, “”)
        赋值 (.内容, 到文本 (相减 (到整数 (.内容), 1)))
        _选项组合框_编辑内容被改变 ()
         ' 备选答案1编辑框.获取焦点 ()
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (键代码, #Ins键))
    赋值 (.内容, .内容)
    赋值 (.内容, .内容)
    赋值 (.内容, .内容)
    赋值 (.内容, .内容)
    赋值 (.内容, .内容)
    赋值 (.内容, .内容)
    赋值 (.内容, “”)
    赋值 (.内容, 到文本 (相加 (到整数 (.内容), 1)))
    _选项组合框_编辑内容被改变 ()
     ' 备选答案1编辑框.获取焦点 ()
.否则
    
.如果结束


.子程序 _备选答案5编辑框_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 交换变量, 文本型, , , 


.如果 (并且 (等于 (功能键状态, 1), 等于 (键代码, #上光标键)))
    .如果 (等于 (.可视, 真))
        赋值 (交换变量, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, 交换变量)
        获取焦点 ()
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (并且 (等于 (功能键状态, 1), 等于 (键代码, #下光标键)))
    .如果 (等于 (.可视, 真))
        赋值 (交换变量, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, 交换变量)
        获取焦点 ()
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (键代码, #上光标键))
    .如果 (等于 (.可视, 真))
        获取焦点 ()
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (或者 (等于 (键代码, #下光标键), 等于 (键代码, #回车键)))
    .如果 (等于 (.可视, 真))
        获取焦点 ()
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (键代码, #回车键))
    .如果 (等于 (.可视, 假))
        赋值 (.内容, 到文本 (相加 (到整数 (.内容), 1)))
        _选项组合框_编辑内容被改变 ()
        获取焦点 ()
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (功能键状态, 1))
    .如果 (等于 (键代码, #D键))
        赋值 (.内容, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, “”)
        赋值 (.内容, 到文本 (相减 (到整数 (.内容), 1)))
        _选项组合框_编辑内容被改变 ()
         ' 备选答案1编辑框.获取焦点 ()
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (键代码, #Ins键))
    赋值 (.内容, .内容)
    赋值 (.内容, .内容)
    赋值 (.内容, .内容)
    赋值 (.内容, .内容)
    赋值 (.内容, .内容)
    
    赋值 (.内容, “”)
    赋值 (.内容, 到文本 (相加 (到整数 (.内容), 1)))
    _选项组合框_编辑内容被改变 ()
     ' 备选答案1编辑框.获取焦点 ()
.否则
    
.如果结束


.子程序 _备选答案6编辑框_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 交换变量, 文本型, , , 


.如果 (并且 (等于 (功能键状态, 1), 等于 (键代码, #上光标键)))
    .如果 (等于 (.可视, 真))
        赋值 (交换变量, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, 交换变量)
        获取焦点 ()
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (并且 (等于 (功能键状态, 1), 等于 (键代码, #下光标键)))
    .如果 (等于 (.可视, 真))
        赋值 (交换变量, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, 交换变量)
        获取焦点 ()
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (键代码, #上光标键))
    .如果 (等于 (.可视, 真))
        获取焦点 ()
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (或者 (等于 (键代码, #下光标键), 等于 (键代码, #回车键)))
    .如果 (等于 (.可视, 真))
        获取焦点 ()
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (键代码, #回车键))
    .如果 (等于 (.可视, 假))
        赋值 (.内容, 到文本 (相加 (到整数 (.内容), 1)))
        _选项组合框_编辑内容被改变 ()
        获取焦点 ()
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (功能键状态, 1))
    .如果 (等于 (键代码, #D键))
        赋值 (.内容, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, “”)
        赋值 (.内容, 到文本 (相减 (到整数 (.内容), 1)))
        _选项组合框_编辑内容被改变 ()
         ' 备选答案1编辑框.获取焦点 ()
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (键代码, #Ins键))
    赋值 (.内容, .内容)
    赋值 (.内容, .内容)
    赋值 (.内容, .内容)
    赋值 (.内容, .内容)
    赋值 (.内容, “”)
    赋值 (.内容, 到文本 (相加 (到整数 (.内容), 1)))
    _选项组合框_编辑内容被改变 ()
     ' 备选答案1编辑框.获取焦点 ()
.否则
    
.如果结束


.子程序 _备选答案7编辑框_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 交换变量, 文本型, , , 


.如果 (并且 (等于 (功能键状态, 1), 等于 (键代码, #上光标键)))
    .如果 (等于 (.可视, 真))
        赋值 (交换变量, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, 交换变量)
        获取焦点 ()
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (并且 (等于 (功能键状态, 1), 等于 (键代码, #下光标键)))
    .如果 (等于 (.可视, 真))
        赋值 (交换变量, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, 交换变量)
        获取焦点 ()
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (键代码, #上光标键))
    .如果 (等于 (.可视, 真))
        获取焦点 ()
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (或者 (等于 (键代码, #下光标键), 等于 (键代码, #回车键)))
    .如果 (等于 (.可视, 真))
        获取焦点 ()
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (键代码, #回车键))
    .如果 (等于 (.可视, 假))
        赋值 (.内容, 到文本 (相加 (到整数 (.内容), 1)))
        _选项组合框_编辑内容被改变 ()
        获取焦点 ()
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (功能键状态, 1))
    .如果 (等于 (键代码, #D键))
        赋值 (.内容, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, “”)
        赋值 (.内容, 到文本 (相减 (到整数 (.内容), 1)))
        _选项组合框_编辑内容被改变 ()
         ' 备选答案1编辑框.获取焦点 ()
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (键代码, #Ins键))
    赋值 (.内容, .内容)
    赋值 (.内容, .内容)
    赋值 (.内容, .内容)
    赋值 (.内容, “”)
    赋值 (.内容, 到文本 (相加 (到整数 (.内容), 1)))
    _选项组合框_编辑内容被改变 ()
     ' 备选答案1编辑框.获取焦点 ()
.否则
    
.如果结束


.子程序 _备选答案8编辑框_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 交换变量, 文本型, , , 

.如果 (并且 (等于 (功能键状态, 1), 等于 (键代码, #上光标键)))
    .如果 (等于 (.可视, 真))
        赋值 (交换变量, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, 交换变量)
        获取焦点 ()
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (并且 (等于 (功能键状态, 1), 等于 (键代码, #下光标键)))
    .如果 (等于 (.可视, 真))
        赋值 (交换变量, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, 交换变量)
        获取焦点 ()
        
    .否则
        
    .如果结束
     ' 交换内容 (备选答案9编辑框.内容, 备选答案8编辑框.内容)
.否则
    
.如果结束
.如果 (等于 (键代码, #上光标键))
    .如果 (等于 (.可视, 真))
        获取焦点 ()
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (或者 (等于 (键代码, #下光标键), 等于 (键代码, #回车键)))
    .如果 (等于 (.可视, 真))
        获取焦点 ()
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (键代码, #回车键))
    .如果 (等于 (.可视, 假))
        赋值 (.内容, 到文本 (相加 (到整数 (.内容), 1)))
        _选项组合框_编辑内容被改变 ()
        获取焦点 ()
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (功能键状态, 1))
    .如果 (等于 (键代码, #D键))
        赋值 (.内容, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, “”)
        赋值 (.内容, 到文本 (相减 (到整数 (.内容), 1)))
        _选项组合框_编辑内容被改变 ()
         ' 备选答案1编辑框.获取焦点 ()
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (键代码, #Ins键))
    赋值 (.内容, .内容)
    赋值 (.内容, .内容)
    赋值 (.内容, “”)
    赋值 (.内容, 到文本 (相加 (到整数 (.内容), 1)))
    _选项组合框_编辑内容被改变 ()
     ' 备选答案1编辑框.获取焦点 ()
.否则
    
.如果结束


.子程序 _备选答案9编辑框_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 交换变量, 文本型, , , 


.如果 (并且 (等于 (功能键状态, 1), 等于 (键代码, #上光标键)))
    
    .如果 (等于 (.可视, 真))
        赋值 (交换变量, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, 交换变量)
        获取焦点 ()
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (并且 (等于 (功能键状态, 1), 等于 (键代码, #下光标键)))
    .如果 (等于 (.可视, 真))
        赋值 (交换变量, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, 交换变量)
        获取焦点 ()
        
    .否则
        
    .如果结束
     ' 交换内容 (备选答案10编辑框.内容, 备选答案9编辑框.内容)
.否则
    
.如果结束
.如果 (等于 (键代码, #上光标键))
    .如果 (等于 (.可视, 真))
        获取焦点 ()
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (或者 (等于 (键代码, #下光标键), 等于 (键代码, #回车键)))
    .如果 (等于 (.可视, 真))
        获取焦点 ()
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (键代码, #回车键))
    .如果 (等于 (.可视, 假))
        赋值 (.内容, 到文本 (相加 (到整数 (.内容), 1)))
        _选项组合框_编辑内容被改变 ()
        获取焦点 ()
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (功能键状态, 1))
    .如果 (等于 (键代码, #D键))
        赋值 (.内容, .内容)
        赋值 (.内容, “”)
        赋值 (.内容, 到文本 (相减 (到整数 (.内容), 1)))
        _选项组合框_编辑内容被改变 ()
         ' 备选答案1编辑框.获取焦点 ()
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (键代码, #Ins键))
    赋值 (.内容, .内容)
    赋值 (.内容, “”)
    赋值 (.内容, 到文本 (相加 (到整数 (.内容), 1)))
    _选项组合框_编辑内容被改变 ()
     ' 备选答案1编辑框.获取焦点 ()
.否则
    
.如果结束


.子程序 _备选答案10编辑框_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 交换变量, 文本型, , , 

.如果 (并且 (等于 (功能键状态, 1), 等于 (键代码, #上光标键)))
    .如果 (等于 (.可视, 真))
        赋值 (交换变量, .内容)
        赋值 (.内容, .内容)
        赋值 (.内容, 交换变量)
        获取焦点 ()
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (键代码, #上光标键))
    .如果 (等于 (.可视, 真))
        获取焦点 ()
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (功能键状态, 1))
    .如果 (等于 (键代码, #D键))
        赋值 (.内容, “”)
        赋值 (.内容, 到文本 (相减 (到整数 (.内容), 1)))
        _选项组合框_编辑内容被改变 ()
         ' 备选答案1编辑框.获取焦点 ()
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束





.子程序 交换内容, 空白型, , 
.参数 内容1, 未知类型0x80016, , 
.参数 内容2, 未知类型0x80016, , 

.局部变量 交换变量, 未知类型0x80016, , , 

 ' 交换变量 ＝ 内容1
 ' 内容1 ＝ 内容2
 ' 内容2 ＝ 交换变量



.子程序 字母数字排序, 文本型, , 
.参数 待排序文本, 文本型, , 

.局部变量 单字符分割文本, 文本型, , "0", 
.局部变量 文本长度, 整数型, , , 
.局部变量 循环变量1, 空白型, , , 
.局部变量 交换变量1, 文本型, , , 
.局部变量 文本串, 文本型, , , 

赋值 (文本长度, 取文本长度 (待排序文本))
重定义数组 (单字符分割文本, 假, 文本长度)
.计次循环首 (文本长度, 循环变量1) ' 数组赋值
    赋值 (单字符分割文本 [循环变量1], 取文本中间 (待排序文本, 循环变量1, 1))
.计次循环尾 ()
.计次循环首 (文本长度, ) ' 比较交换
    .计次循环首 (文本长度, 循环变量1) ' 比较交换
        赋值 (交换变量1, 单字符分割文本 [循环变量1])
        .如果 (小于或等于 (相加 (循环变量1, 1), 文本长度))
            .如果 (大于 (单字符分割文本 [循环变量1], 单字符分割文本 [相加 (循环变量1, 1)]))
                赋值 (单字符分割文本 [循环变量1], 单字符分割文本 [相加 (循环变量1, 1)])
                赋值 (单字符分割文本 [相加 (循环变量1, 1)], 交换变量1)
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .计次循环尾 ()
    
.计次循环尾 ()
.计次循环首 (文本长度, 循环变量1)
    赋值 (文本串, 相加 (文本串, 单字符分割文本 [循环变量1]))
.计次循环尾 ()
返回 (文本串)


.子程序 多项选择答案识别简化版, 文本型, , 
.局部变量 多项选择答案, 文本型, , , 

.如果 (并且 (等于 (.选中, 真), 等于 (.可视, 真)))
    赋值 (多项选择答案, 相加 (多项选择答案, “A”))
.否则
    
.如果结束
.如果 (并且 (等于 (.选中, 真), 等于 (.可视, 真)))
    赋值 (多项选择答案, 相加 (多项选择答案, “B”))
    
.否则
    
.如果结束
.如果 (并且 (等于 (.选中, 真), 等于 (.可视, 真)))
    赋值 (多项选择答案, 相加 (多项选择答案, “C”))
    
.否则
    
.如果结束
.如果 (并且 (等于 (.选中, 真), 等于 (.可视, 真)))
    赋值 (多项选择答案, 相加 (多项选择答案, “D”))
    
.否则
    
.如果结束
.如果 (并且 (等于 (.选中, 真), 等于 (.可视, 真)))
    赋值 (多项选择答案, 相加 (多项选择答案, “E”))
    
    
.否则
    
.如果结束
.如果 (并且 (等于 (.选中, 真), 等于 (.可视, 真)))
    赋值 (多项选择答案, 相加 (多项选择答案, “F”))
    
.否则
    
.如果结束
.如果 (并且 (等于 (.选中, 真), 等于 (.可视, 真)))
    赋值 (多项选择答案, 相加 (多项选择答案, “G”))
    
.否则
    
.如果结束
.如果 (并且 (等于 (.选中, 真), 等于 (.可视, 真)))
    赋值 (多项选择答案, 相加 (多项选择答案, “H”))
    
.否则
    
.如果结束
.如果 (并且 (等于 (.选中, 真), 等于 (.可视, 真)))
    赋值 (多项选择答案, 相加 (多项选择答案, “I”))
    
.否则
    
.如果结束
.如果 (并且 (等于 (.选中, 真), 等于 (.可视, 真)))
    赋值 (多项选择答案, 相加 (多项选择答案, “J”))
    
.否则
    
.如果结束
.如果 (或者 (等于 (.内容, #单项选择), 等于 (.内容, #多项选择), 等于 (.内容, #材料分析)))
    .如果 (大于 (取代码 (.内容, ), 相加 (64, 到整数 (.内容))))
         ' 信息框 (到文本 (取代码 (答题编辑框.内容, )) ＋ #换行符 ＋ 到文本 (64 ＋ 到整数 (选项组合框.内容)), 0, )
        赋值 (多项选择答案, “”)
    .否则
        
    .如果结束
    
.否则
    
.如果结束

返回 (多项选择答案)


.子程序 _答题编辑框_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 临时文本, 文本型, , , 

.如果 (等于 (.内容, “单项选择”))
    赋值 (.内容, “”)
.否则
    
.如果结束
 ' .如果 (或者 (等于 (.内容, #单项选择), 等于 (.内容, #多项选择), 等于 (.内容, #材料分析)))
     ' .如果 (并且 (大于 (键代码, 96), 小于 (键代码, 123)))
         ' 信息框 (“超出”, 0, )
         ' 键代码 ＝ 键代码 － 26
    .否则
        
    .如果结束
    
    
    
.否则
    
.如果结束
.如果 (等于 (功能键状态, 2))
    .如果 (等于 (键代码, #PageDown键))
        _下一题按钮_被单击 ()
        
    .否则
        .如果 (等于 (键代码, #PageUp键))
            _上一题按钮_被单击 ()
        .否则
            
        .如果结束
        
    .如果结束
    
.否则
    
.如果结束


.子程序 _分值组合框_被双击, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果 (等于 (考试窗口., “出题模式”))
    .如果 (或者 (等于 (.内容, “简答”), 等于 (.内容, “论述”)))
        .如果 (等于 (.内容, “”))
            赋值 (.内容, “0”)
        .否则
            
        .如果结束
        赋值 (.内容, 相加 (.内容, “ [”, .内容, “分] ”))
        赋值 (简答论述分值累计, 相加 (简答论述分值累计, 到整数 (.内容)))
        赋值 (.内容, 到文本 (简答论述分值累计))
        
        获取焦点 ()
        赋值 (.起始选择位置, 取文本长度 (.内容))
    .否则
        
    .如果结束
    
.否则
    
.如果结束


.子程序 _分值组合框_滚轮被滚动, 逻辑型, , 
.参数 滚动距离, 整数型, , 
.参数 功能键状态, 整数型, , 

 ' .如果 (大于 (滚动距离, 0))
     ' 分值组合框.内容 ＝ 到文本 (到整数 (分值组合框.内容) － 1)
.否则
    
.如果结束
 ' .如果 (小于 (滚动距离, 0))
     ' 分值组合框.内容 ＝ 到文本 (到整数 (分值组合框.内容) ＋ 1)
.否则
    
.如果结束


.子程序 _获取时间按钮_被单击, 空白型, , 
赋值 (.内容, 到文本 (相乘 (到整数 (.内容), 时间分值比)))

.子程序 _答题编辑框_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果 (等于 (考试窗口., “考试模式”))
    .如果 (或者 (等于 (.内容, “简答”), 等于 (.内容, “论述”)))
        .如果 (不等于 (.内容, “”))
            赋值 (.标题, “请在右边的文本框中输入答案！”)
            载入 (材料文本窗口, , 假)
            
        .否则
            
        .如果结束
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束


.子程序 _切换题库按钮_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (相加 (“由当前题库 [”, 题库, “] 切换到其它题库”))

.子程序 _题目显示树型框_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (“题目列表。点击题型进入加题状态；点击题号可显示题目内容，右击可显示菜单。”)

.子程序 _答题编辑框_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果 (等于 (考试窗口., “出题模式”))
    0.置文本 (“如需保存必须在此输入标准答案。空白时不可以保存。”)
.否则
    0.置文本 (“简答题和论述题点此后在弹出的窗口中答题，其它题型在此答题。能自动实时保存。”)
.如果结束


.子程序 _切换模式按钮_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果 (等于 (考试窗口., “出题模式”))
    0.置文本 (“切换到 [考试模式]。”)
.否则
    0.置文本 (“切换到 [出题模式]。”)
.如果结束


.子程序 _导入按钮_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (“弹出 [单题导入窗口]，方便用户从文本文件中复制加入题目。”)

.子程序 _导出按钮_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (“导出为传统试卷版式。”)

.子程序 _粘贴按钮_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (“粘贴题目内容。必须在点过树形框右键菜单中的 [复制] 后方可使用。”)

.子程序 _获取时间按钮_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (“根据 [分值] 和 [时间分值比] 来改变当前题时限。”)

.子程序 _加题按钮_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (“清空输入框内容，进入 [加题状态]。”)



.子程序 _保存按钮_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (“添加或修改题目。”)


.子程序 _删除按钮_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (“删除当前题目。”)

.子程序 _答案A图片按钮_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (“添加选项图片。添加成功将覆盖选项文本。”)

.子程序 _答案B图片按钮_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (“添加选项图片。添加成功将覆盖选项文本。”)

.子程序 _答案C图片按钮_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (“添加选项图片。添加成功将覆盖选项文本。”)

.子程序 _答案D图片按钮_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (“添加选项图片。添加成功将覆盖选项文本。”)

.子程序 _答案E图片按钮_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (“添加选项图片。添加成功将覆盖选项文本。”)

.子程序 _答案F图片按钮_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (“添加选项图片。添加成功将覆盖选项文本。”)

.子程序 _答案G图片按钮_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (“添加选项图片。添加成功将覆盖选项文本。”)

.子程序 _答案H图片按钮_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (“添加选项图片。添加成功将覆盖选项文本。”)

.子程序 _答案I图片按钮_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (“添加选项图片。添加成功将覆盖选项文本。”)

.子程序 _答案J图片按钮_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (“添加选项图片。添加成功将覆盖选项文本。”)

.子程序 _按钮2_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (“延长本题时间。”)

.子程序 _上一题按钮_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (“切换到上一题。”)

.子程序 _下一题按钮_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (“切换到下一题。”)

.子程序 _确定按钮_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (“功能与 [下一题]按钮 相同。”)


.子程序 _提示按钮_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (“显示解题思路。”)

.子程序 _答案按钮_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (“显示题目标准答案。”)

.子程序 _交卷按钮_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (“结束考试并统计成绩。”)

.子程序 _考试窗口_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

 ' 状态条1.置文本 (0, “《无敌自测》祝您考试愉快！”)
0.置文本 (相加 (“当前题库： [”, 题库, “]”))
赋值 (., 假)
赋值 (.可视, 假)
赋值 (.可视, 假)

.子程序 _科目组合框_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (“考试科目，可不填。如果一套试卷中有多个科目，不妨填之。”)

.子程序 _章组合框_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (“当前题目内容来自的章目。”)


.子程序 _节组合框_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (“当前题目内容来自的节号。”)

.子程序 _范围组合框_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (“当前题目内容所属知识范围。”)


.子程序 _题型组合框_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (“选择题型。”)


.子程序 _选项组合框_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (“设置当前选择题等题型的选项数量。”)


.子程序 _题号组合框_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (“显示题目编号。”)

.子程序 _分值组合框_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (“设置和显示本题分值。”)

.子程序 _时间组合框_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (“设置和显示本题时限。”)

.子程序 _难度组合框_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (“本题难度，分五级。仅供参考，并无实际功能。”)


.子程序 _添加问题图片按钮_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果 (等于 (考试窗口., “出题模式”))
    0.置文本 (“点此添加问题图片。”)
.否则
    0.置文本 (“显示提示内容。”)
.如果结束


.子程序 _问题图片框_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 


.如果 (等于 (功能键状态, 1))
    载入 (图片显示窗口, , 假)
.否则
    赋值 (.可视, 假)
.如果结束


.子程序 _A选择框_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (相加 (“选择项A。当前选中状态为 [”, 到文本 (.选中), “]。”))


.子程序 _B选择框_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (相加 (“选择项B。当前选中状态为 [”, 到文本 (.选中), “]。”))


.子程序 _C选择框_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (相加 (“选择项C。当前选中状态为 [”, 到文本 (.选中), “]。”))

.子程序 _D选择框_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (相加 (“选择项D。当前选中状态为 [”, 到文本 (.选中), “]。”))

.子程序 _E选择框_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (相加 (“选择项E。当前选中状态为 [”, 到文本 (.选中), “]。”))

.子程序 _F选择框_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (相加 (“选择项F。当前选中状态为 [”, 到文本 (.选中), “]。”))

.子程序 _G选择框_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (相加 (“选择项G。当前选中状态为 [”, 到文本 (.选中), “]。”))

.子程序 _H选择框_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (相加 (“选择项H。当前选中状态为 [”, 到文本 (.选中), “]。”))

.子程序 _I选择框_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (相加 (“选择项I。当前选中状态为 [”, 到文本 (.选中), “]。”))

.子程序 _J选择框_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 (相加 (“选择项J。当前选中状态为 [”, 到文本 (.选中), “]。”))

.窗口程序集 图片显示窗口程序集, , , 

.程序集变量 高宽比, 小数型, , , 
.子程序 _图片显示窗口_创建完毕, 空白型, , 

.如果 (等于 (文件是否存在 (材料文本路径), 真))
    赋值 (.图片, 读入文件 (材料文本路径))
    赋值 (.宽度, 未知支持库函数_31 (材料文本路径))
    赋值 (.高度, 未知支持库函数_32 (材料文本路径))
     ' 调试输出 (材料文本窗口.文本编辑框.内容 ＋ “:” ＋ 全局图片路径)
.否则
    .如果 (等于 (文件是否存在 (全局图片路径), 真))
        赋值 (.图片, 读入文件 (全局图片路径))
        赋值 (.宽度, 未知支持库函数_31 (全局图片路径))
        赋值 (.高度, 未知支持库函数_32 (全局图片路径))
        
    .否则
        
    .如果结束
    
.如果结束
赋值 (高宽比, 相除 (.高度, .宽度))

赋值 (图片显示窗口., .宽度)
赋值 (图片显示窗口., .高度)
.如果 (或者 (等于 (.宽度, 0), 等于 (取字节集长度 (.图片), 0)))
    赋值 (图片显示窗口被打开, 假)
    销毁 ()
.否则
    
.如果结束
赋值 (图片显示窗口被打开, 真)


.子程序 _图片显示窗口_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果 (等于 (键代码, #空格键))
    销毁 ()
.否则
    
.如果结束


.子程序 _图片框1_被双击, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

销毁 ()


.子程序 _图片框1_滚轮被滚动, 逻辑型, , 
.参数 滚动距离, 整数型, , 
.参数 功能键状态, 整数型, , 

 ' .如果 (大于 (滚动距离, 0))
     ' 图片框1.宽度 ＝ 图片框1.宽度 － 10
     ' .如果 (小于 (.宽度, 20))
         ' 图片框1.宽度 ＝ 20
    .否则
        
    .如果结束
     ' 图片框1.高度 ＝ 取整 (图片框1.宽度 × 高宽比)
.否则
    
.如果结束
 ' .如果 (小于 (滚动距离, 0))
     ' 图片框1.宽度 ＝ 图片框1.宽度 ＋ 10
     ' .如果 (大于 (.宽度, 相减 (取屏幕宽度 (), 20)))
         ' 图片框1.宽度 ＝ 取屏幕宽度 () － 20
    .否则
        
    .如果结束
     ' 图片框1.高度 ＝ 取整 (图片框1.宽度 × 高宽比)
.否则
    
.如果结束


.子程序 _图片显示窗口_滚轮被滚动, 逻辑型, , 
.参数 滚动距离, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果 (大于 (滚动距离, 0))
    赋值 (.宽度, 相减 (.宽度, 15))
    .如果 (小于 (.宽度, 20))
        赋值 (.宽度, 20)
    .否则
        
    .如果结束
    赋值 (.高度, 取整 (相乘 (.宽度, 高宽比)))
.否则
    
.如果结束
.如果 (小于 (滚动距离, 0))
    赋值 (.宽度, 相加 (.宽度, 15))
    .如果 (大于 (.宽度, 相减 (取屏幕宽度 (), 20)))
        赋值 (.宽度, 相减 (取屏幕宽度 (), 20))
    .否则
        
    .如果结束
    赋值 (.高度, 取整 (相乘 (.宽度, 高宽比)))
.否则
    
.如果结束

赋值 (图片显示窗口., .宽度)
赋值 (图片显示窗口., .高度)



.子程序 _图片框1_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

弹出菜单 ()


.子程序 _关闭_被选择, 空白型, , 
销毁 ()



 ' 不属于任何一个程序集、类模块的函数：
