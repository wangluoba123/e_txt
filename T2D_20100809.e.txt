 ' 文件类型：Windows窗口程序

 ' 程序名称：2D绘图
 ' 程序描述：
 ' 程序作者：汤东林
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：13568610323
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 755
    高度 = 380
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假





 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 6 系统核心支持库
 ' spec A512548E76954B6E92C21055517615B0 2 1 特殊功能支持库




数据类型 程序状态, , 要用此类型应当定义一个全局变量
    .成员 绘图命令, 文本型, , , 一个命令要运行前,先检查当前正在运行的命令任务,程序为空闲时或本命令与系统正在运行的任务没有冲突时才运行.
    .成员 透明命令, 文本型, , , 

数据类型 T2_存储画板, , 
    .成员 显示画板, 画板, , , 
    .成员 缓存画板, 画板, , , 
    .成员 历史图像, 画板, , "1", 
    .成员 位置指针, 整数型, , , 

数据类型 T2_多边形, , 
    .成员 顶点, T2坐标, , "1", 

数据类型 程序配置, , 
    .成员 启动, 整数型, , , 程序启动过程中的配置信息
    .成员 运行, 整数型, , , 程序运行期间的配置信息
    .成员 结束, 整数型, , , 程序结束时的配置信息

数据类型 句柄类型, , 
    .成员 点, 整数型, , "1", 1
    .成员 直线, 整数型, , "1", 2

数据类型 T2_绝对区间, , 整个直角坐标系统被划分为四个大的区间,这四个区间都各自会只有一个角点.各级子区间的编号,都是从坐标原点或坐标原点方向向的角点开始的,这就意味着四个大区间的子区间编号方向,都不相同,这样做是为了无限扩展的需要.
    .成员 根区编号, 整数型, , , 1、2、3、4共四个根区间编号。第一象限或位于X轴正方向上或位于Y轴正方向上，或位于坐标原点，都属于区间编号1；第二象限，区间编号2，第三象限，区间编号3，第四象限，区间编号4。根区间编号决定了下面两个成员即子区间的编号方向，在同一区间内，总是先横向编号后纵向编号
    .成员 横向编号, 整数型, , "1", 第一个成员,是子区间在根区间中的编号,最后一个成员,是该区间在其父区间中的编号,中间的所有相临成员之间,都是父子区间的关系
    .成员 纵向编号, 整数型, , "1", 
    .成员 左上角点, T2坐标, , , 根据某子区间的根区间编号和纵横区间编号，就能确定它的坐标数据，不过这里有一个区间边长的问题，也就是说这个边长，在根区间中的数值应该是固定值，这是因为根区间是无限延伸的。在子区间中的边长，应该是个等分量，最好将一个区间划分为10*10=100个子区间。这样做的好处是算账方便，直接移动小数点的位置即可。
    .成员 右上角点, T2坐标, , , 
    .成员 左下角点, T2坐标, , , 
    .成员 右下角点, T2坐标, , , 

数据类型 T2坐标, , 
    .成员 x, 双精度小数型, , , 
    .成员 y, 双精度小数型, , , 

数据类型 T2_极坐标, , 
    .成员 R, 双精度小数型, , , 到原点距离
    .成员 A, 双精度小数型, , , 弧度,从原点引向该点的直线的方位角

数据类型 T2_度分秒, , 
    .成员 度, 双精度小数型, , , 
    .成员 分, 双精度小数型, , , 
    .成员 秒, 双精度小数型, , , 

数据类型 T2_图像组, , 
    .成员 节点, T2_节点, , "1", 
    .成员 直线, T2直线, , "1", 

数据类型 T2标识, , 
    .成员 类别, 整数型, , , 类别句柄
    .成员 句柄, 整数型, , , 实例句柄

数据类型 T2_标识集, , 一个独立的宇宙系统,就是将各种内部元素与外部隔离开来
    .成员 外部, T2标识, , , 
    .成员 内部, T2标识, , "1", 

数据类型 T2图形控制, , 图形控制信息,是所以几何实体的控制信息类型
    .成员 名称, 文本型, , , 
    .成员 标识, T2标识, , , 
    .成员 序号, 整数型, , , 在其你对象中的排序
    .成员 可视, 逻辑型, , , 
    .成员 选中, 逻辑型, , , 

数据类型 T2_角, , 
    .成员 顶点, T2坐标, , , 
    .成员 起始边方位角, 双精度小数型, , , 
    .成员 结束边方位角, 双精度小数型, , , 
    .成员 角弧度, 双精度小数型, , , 
    .成员 度分秒, T2_度分秒, , , 

数据类型 T2点元, , 
    .成员 名称, 文本型, , , 
    .成员 序号, 整数型, , , 
    .成员 线型, 整数型, , "1", 0、表示直线，1、表示弧线
    .成员 起点, T2坐标, , "1", 
    .成员 中点, T2坐标, , "1", 如果是直线则不用提供此中点数据
    .成员 终点, T2坐标, , "1", 

数据类型 T2_线元, , 构成直线的基本要素,由于它不作为面向用户的基本图形,所以不需要锚点等无用信息，线元的坐标系统是以直线的延伸方向为X向，以线元的插入点为坐标原点，以前进方向左转90度为Y向，所以插入时需要进行坐标转换
    .成员 已赋值, 逻辑型, , , 
    .成员 序号, 整数型, , , 
    .成员 端距, 双精度小数型, , "1", 本成员告诉程序在绘画本线型图元时,应当距直线两端点多少距离开始画第一个图元
    .成员 间距, 双精度小数型, , "1", 
    .成员 点元, T2点元, , "1", 

数据类型 T2_节点, , 基本图形对象,面向用户时不支持分解,节点是其它图形的特定位置，图形被选中是生成相应的节点，取消选中是节点消失。图形的形状可跟随节点的移动而发生变化
    .成员 图形, T2图形控制, , , 
    .成员 标识, T2标识, , , 
    .成员 坐标, T2坐标, , , 
    .成员 样式, T2节点样式, , , 
    .成员 属主, T2标识, , , 每一个节点都应当从属于一个主图形对象，在生成该节点时就应当标明，如果所属图形消失，则其拥用的节点也应当消失。

数据类型 T2单点, , 基本图形对象,面向用户时不支持分解
    .成员 图形, T2图形控制, , , 
    .成员 标识, T2标识, , , 
    .成员 坐标, T2坐标, , , 
    .成员 样式, T2节点样式, , , 
    .成员 属主, T2标识, , , 

数据类型 T2节点样式, , 
    .成员 显示, T2点元, , , 
    .成员 选中, T2点元, , , 
    .成员 打印, T2点元, , , 
    .成员 鼠标经过, T2点元, , , 

数据类型 T2_点旋转, , 
    .成员 转角A, 双精度小数型, , , 以坐标原点为旋转轴心,相对于自身原来的位置的转动角度,有正负方向

数据类型 T2_点平移, , 
    .成员 DX, 双精度小数型, , , 坐标系相对于自身在X轴上的移动量
    .成员 DY, 双精度小数型, , , 坐标系相对于自身在Y轴上的移动量

数据类型 T2_坐标集, , 
    .成员 标识, T2标识, , , 
    .成员 坐标, T2坐标, , "1", 该点集的成员

数据类型 T2节点集, , 
    .成员 标识, T2标识, , , 
    .成员 节点, T2_节点, , "1", 

数据类型 T2点集, , 
    .成员 标识, T2标识, , , 
    .成员 节点, T2单点, , "1", 

数据类型 T2直线集, , 
    .成员 标识, T2标识, , , 
    .成员 直线, T2直线, , "1", 

数据类型 T2直线, , 
    .成员 起点, T2坐标, , , 
    .成员 尾点, T2坐标, , , 
    .成员 图形, T2图形控制, , , 
    .成员 标识, T2标识, , , 
    .成员 线型, T2线型, , , 
    .成员 线宽, T2线宽, , , 
    .成员 颜色, T2颜色, , , 
    .成员 系数, T2直线系数, , , 
    .成员 属主, T2标识, , , 

数据类型 T2线型, , 
    .成员 编号, 整数型, , , 
    .成员 名称, 文本型, , , 
    .成员 打印线型, T2_线元, , , 
    .成员 显示线型, T2_线元, , , 
    .成员 选中线型, T2_线元, , , 
    .成员 鼠标经过线型, T2_线元, , , 

数据类型 T2线宽, , 
    .成员 编号, 整数型, , , 
    .成员 名称, 文本型, , , 
    .成员 打印宽, 双精度小数型, , , 直径,即线宽
    .成员 显示宽, 双精度小数型, , , 如果有线宽属性,那么也应该是整条直线粗细一致,否则应当用其它立体几何图形来表示了
    .成员 选中宽, 双精度小数型, , , 
    .成员 鼠标经过宽, 双精度小数型, , , 

数据类型 T2直线系数, , 
    .成员 Lxy, 双精度小数型, , , 在XY平面上的投影绝对长度
    .成员 Lx, 双精度小数型, , , 在X轴的投影长度,直线端点相对于起点,在X轴上的增量,可为负数
    .成员 Ly, 双精度小数型, , , 在Y轴的投影长度,直线端点相对于起点,在Y轴上的增量,可为负数
    .成员 ky_x, 双精度小数型, , , 斜率dy/dx dx为0其值为无穷大,无意义
    .成员 kx_y, 双精度小数型, , , 斜率dx/dy dy为0其值为无穷大,无意义

数据类型 T2颜色, , 
    .成员 编号, 整数型, , , 
    .成员 名称, 文本型, , , 
    .成员 打印色, 整数型, , , 
    .成员 显示色, 整数型, , , 
    .成员 选中色, 整数型, , , 
    .成员 鼠标经过色, 整数型, , , 

数据类型 T2三角形, 公开, 
    .成员 顶点A, T2坐标, , , 
    .成员 顶点B, T2坐标, , , 
    .成员 顶点C, T2坐标, , , 
    .成员 图形, T2图形控制, , , 
    .成员 标识, T2标识, , , 
    .成员 信息, T2三角形信息, , , 三角形注册时及移动变形时,就应当将其相关信息进行计算

数据类型 T2三角形信息, 公开, 三角形在实际几何计算中有非常重要的作用,可以大规模地简化程序代码量,但也会因此计算大量的无用信息
    .成员 边长a, 双精度小数型, , , 
    .成员 边长b, 双精度小数型, , , 
    .成员 边长c, 双精度小数型, , , 
    .成员 边线AB, T2直线, , , 
    .成员 边线BC, T2直线, , , 
    .成员 边线CA, T2直线, , , 
    .成员 高线A, T2直线, , , 垂线
    .成员 高线B, T2直线, , , 垂线
    .成员 高线C, T2直线, , , 垂线
    .成员 中线A, T2直线, , , 角平分线
    .成员 中线B, T2直线, , , 角平分线
    .成员 中线C, T2直线, , , 角平分线
    .成员 角A, 双精度小数型, , , 
    .成员 角B, 双精度小数型, , , 
    .成员 角C, 双精度小数型, , , 
    .成员 形心O, T2坐标, , , 
    .成员 边垂点a, T2坐标, , , 
    .成员 边垂点b, T2坐标, , , 
    .成员 边垂点c, T2坐标, , , 
    .成员 边中点a, T2坐标, , , 
    .成员 边中点b, T2坐标, , , 
    .成员 边中点c, T2坐标, , , 

数据类型 T2圆形, , 
    .成员 圆心O, T2坐标, , , 
    .成员 半径R, 双精度小数型, , , 
    .成员 图形, T2图形控制, , , 
    .成员 标识, T2标识, , , 
    .成员 信息, T2圆形信息, , , 

数据类型 T2圆形信息, , 
    .成员 已计算, 逻辑型, , , 
    .成员 周长C, 双精度小数型, , , 
    .成员 面积S, 双精度小数型, , , 

数据类型 T2圆弧, 公开, 
    .成员 半径R, 双精度小数型, , , 
    .成员 起始边方位角, 双精度小数型, , , 
    .成员 结束边方位角, 双精度小数型, , , 
    .成员 图形, T2图形控制, , , 
    .成员 圆心O, T2坐标, , , 
    .成员 信息, T2圆弧信息, , , 

数据类型 T2圆弧信息, , 
    .成员 弧长C, 双精度小数型, , , 
    .成员 玄长L, 双精度小数型, , , 
    .成员 面积S, 双精度小数型, , , 

.全局变量 全局_任务, 程序状态, , , 
.全局变量 全局_配置, 程序配置, , , 
.全局变量 全局_句柄, 句柄类型, , , 

.窗口程序集 窗口程序集1, , , 

.程序集变量 画板存储, T2画板_图像存储类, , , 
.程序集变量 画标识, T2辅助标识, , , 
.程序集变量 点们, T2坐标, , "0", 
.程序集变量 点, T2坐标, , , 
.子程序 __启动窗口_创建完毕, 空白型, , 
画板存储.加载画板 ()
画标识.置标识画板 ()

.子程序 _连续画直线_被单击, 空白型, , 
赋值 (全局_任务.绘图命令, “直线”)

.子程序 _绘图画板_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (全局_任务.绘图命令, “”)
画板存储.瞬时还原 ()

.子程序 _绘图画板_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (等于 (全局_任务.绘图命令, “直线”))
    赋值 (点.x, 横向位置)
    赋值 (点.y, 纵向位置)
    加入成员 (点们, 点)
    .如果 (大于 (取数组成员数 (点们), 1))
        画板存储.瞬时还原 ()
        点们.画直线 ( [相减 (取数组成员数 (点们), 1)].x, 点们 [相减 (取数组成员数 (点们), 1)].y, 横向位置, 纵向位置)
        画板存储.瞬时备份 ()
    .否则
        
        赋值 (.画笔颜色, #白色)
    .如果结束
    
.如果真结束



.子程序 _绘图画板_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 i, 整数型, , , 

.如果真 (等于 (全局_任务.绘图命令, “直线”))
    .如果真 (大于或等于 (取数组成员数 (点们), 1))
        画板存储.瞬时还原 ()
        点们.画直线 ( [取数组成员数 (点们)].x, 点们 [取数组成员数 (点们)].y, 横向位置, 纵向位置)
    .如果真结束
    
.如果真结束


.计次循环首 (取数组成员数 (点们), i)
    .如果真 (并且 (小于或等于 (取绝对值 (相减 (横向位置, 点们 [i], x)), 20), 小于或等于 (取绝对值 (相减 (纵向位置, 点们 [i], y)), 20)))
        画标识.画捕获框_矩形 (点们 [i], , )
    .如果真结束
    
    
.计次循环尾 ()


.取图片 ()

.类模块 T2点类, , , 

.子程序 平移坐标系, T2坐标, , 平移点的参照坐标系,点的绝对位置不变,当坐标系平移到与另一坐标系重合时,相当于改变了点的参照坐标系
.参数 C_点, T2坐标, 参考, 
.参数 C_移动量, T2_点平移, , 坐标系相对于其本身原来的位置的移动量,只能是平移,不能转动,移动量有正负,以坐标系本身的方向为准
.参数 C_修改坐标值, 逻辑型, 可空, 如果为真,将对参数所提供的点的坐标数据进行修改,否则不会修改

.局部变量 点, T2坐标, , , 

赋值 (点, C_点)
赋值 (点.x, 相减 (点.x, C_移动量.DX))
赋值 (点.y, 相减 (点.y, C_移动量.DY))
.如果真 (C_修改坐标值)
    赋值 (C_点, 点)
.如果真结束
返回 (点)

.子程序 旋转坐标系, T2坐标, , 
.参数 C_点, T2坐标, 参考, 
.参数 C_转角度数, 双精度小数型, , 坐标系相对于其本身原来的位置的旋转角度,只能是以原坐标轴线为转动轴进行转动,如同时也发生了坐标平移,应该分步计算
.参数 C_修改坐标值, 逻辑型, 可空, 如果为真,将对参数所提供的点的坐标数据进行修改,否则不会修改

.局部变量 点, T2坐标, , , 

赋值 (点, C_点)
赋值 (点.x, 相减 (点.x, C_转角度数))
赋值 (点.y, 相减 (点.y, C_转角度数))
.如果真 (C_修改坐标值)
    赋值 (C_点, 点)
.如果真结束

返回 (点)

.子程序 方位角, 双精度小数型, , ok.返回弧度，所给的点不能位于原点,否则是没有意义的
.参数 C_dx, 双精度小数型, 可空, 在方向轴上的横坐标增量，可以为负数，不可以为0，如果提供了直线参数数据，本参数将被忽略
.参数 C_dy, 双精度小数型, 可空, 纵坐标增量，可以为负数，如果提供了直线参数数据，本参数将被忽略

.局部变量 方位角, 双精度小数型, 静态, , 
.局部变量 方向角, 双精度小数型, , , 

.如果真 (并且 (等于 (C_dx, 0), 等于 (C_dy, 0)))
    返回 (0)
.如果真结束

.判断开始 (等于 (C_dx, 0))
    .如果 (大于 (C_dy, 0))
        返回 (相除 (#pi, 2))
    .否则
        返回 (相加 (相除 (#pi, 2), #pi))
    .如果结束
    
.判断 (等于 (C_dy, 0))
    .如果 (大于 (C_dx, 0))
        返回 (0)
    .否则
        返回 (#pi)
    .如果结束
    
.默认
    赋值 (方向角, 求反正切 (相除 (C_dy, C_dx)))
.判断结束

.判断开始 (大于 (C_dx, 0))
    .如果 (大于 (C_dy, 0))
        赋值 (方位角, 方向角)
    .否则
        赋值 (方位角, 相减 (相乘 (2, #pi), 方向角))
    .如果结束
    
.默认
    赋值 (方位角, 相加 (#pi, 方向角))
.判断结束
返回 (方位角)

.子程序 两点距离, 双精度小数型, , ok.
.参数 C_起点, T2坐标, , 
.参数 C_终点, T2坐标, , 

返回 (求平方根 (相加 (求次方 (相减 (C_终点.x, C_起点.x), 2), 求次方 (相减 (C_终点.y, C_起点.y), 2))))

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.类模块 T2直线类, , , 

.程序集变量 私_直线集, T2直线集, , ,  这个成员是用来进行直线信息及其句柄注册管理的
.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 注册直线, 整数型, , 已验证为正确的程序 不公开,返回直线句柄
.参数 参_直线, T2直线, , 

赋值 (参_直线.标识.类别, 2)
赋值 (参_直线.标识.句柄, 获取直线句柄 ())
加入成员 (私_直线集.直线, 参_直线)
返回 (参_直线.标识.句柄)

.子程序 获取直线句柄, 整数型, , 已验证为正确的程序 
.局部变量 句柄, 长整数型, , , 
.局部变量 i, 整数型, , , 

.判断开始 (大于 (取数组成员数 (全局_句柄.直线), 0))
    .计次循环首 (取数组成员数 (全局_句柄.直线), i)
        .如果真 (等于 (全局_句柄.直线 [i], 0))
            赋值 (全局_句柄.直线 [i], i)
            .如果真 (等于 (i, 取数组成员数 (全局_句柄.直线)))
                加入成员 (全局_句柄.直线, 0)
            .如果真结束
            跳出循环 ()
        .如果真结束
        
    .计次循环尾 ()
    返回 (i)
.默认
    加入成员 (全局_句柄.直线, 1)
    加入成员 (全局_句柄.直线, 0)
    返回 (1)
.判断结束


.子程序 删除直线句柄, 逻辑型, , 已验证为正确的程序 
.参数 参_直线句柄, 整数型, , 

.局部变量 句柄, 整数型, , , 
.局部变量 i, 整数型, , , 

.判断开始 (等于 (参_直线句柄, 0))
    返回 (假)
.判断 (大于 (取数组成员数 (全局_句柄.直线), 0))
    .计次循环首 (取数组成员数 (全局_句柄.直线), i)
        .如果真 (等于 (全局_句柄.直线 [i], 参_直线句柄))
            赋值 (全局_句柄.直线 [i], 0)
            返回 (真)
        .如果真结束
        
    .计次循环尾 ()
    返回 (假)
.默认
    返回 (假)
.判断结束


.子程序 求方位角, 双精度小数型, , 返回弧度，返回360.999表示出错
.参数 C_直线, T2直线, 可空, 此参数用来直接提供直线数据

.局部变量 dx, 双精度小数型, 静态, , 横坐标增量
.局部变量 dy, 双精度小数型, 静态, , 纵坐标增量
.局部变量 方位角, 双精度小数型, 静态, , 
.局部变量 方向角, 双精度小数型, , , 
.局部变量 所在象限, 整数型, , , 

.如果真 (是否为空 (C_直线))
     ' 信息框 (“不能提供空值直线数据”, 0, )
    返回 (360.999)
.如果真结束

赋值 (dx, 相减 (C_直线.尾点.x, C_直线.起点.x))
赋值 (dy, 相减 (C_直线.尾点.y, C_直线.起点.y))
.如果真 (并且 (等于 (dx, 0), 等于 (dy, 0)))
     ' 信息框 (“不能提供起始点重合的直线数据”, 0, )
    返回 (360.999)
.如果真结束

赋值 (所在象限, 所在象限 (dx, dy))

.判断开始 (等于 (dx, 0))
    .如果 (等于 (所在象限, 1))
        返回 (相除 (#pi, 2))
    .否则
        返回 (相乘 (相除 (#pi, 2), 3))
    .如果结束
    
.判断 (等于 (dy, 0))
    .如果 (等于 (所在象限, 1))
        返回 (0)
    .否则
        返回 (#pi)
    .如果结束
    
.默认
    赋值 (方向角, 求反正切 (相除 (dy, dx)))
.判断结束

.判断开始 (大于或等于 (dx, 0))
    .如果 (大于或等于 (dy, 0))
        赋值 (方位角, 方向角)
    .否则
        赋值 (方位角, 相减 (相乘 (2, #pi), 方向角))
    .如果结束
    
.默认
    赋值 (方位角, 相加 (#pi, 方向角))
.判断结束
返回 (方位角)

.子程序 方位角度数, 双精度小数型, , 返回度数,测量程序专用,直线的起点和终点的顺序一定要正确
.参数 C_直线, T2直线, , 

.局部变量 角, T2角度类, , , 
.局部变量 方位角, 双精度小数型, , , 

赋值 (方位角, 角.弧度转角度 (求方位角 (C_直线)))
返回 (方位角)

.子程序 所在象限, 整数型, , 返回值为1、2、3、4，对应四个象限
.参数 C_dx, 双精度小数型, , 横坐标增量,可以为负数
.参数 C_dy, 双精度小数型, , 纵坐标增量,可以为负数

.判断开始 (大于或等于 (C_dx, 0))
    .如果 (大于或等于 (C_dy, 0))
        返回 (1)
    .否则
        返回 (4)
    .如果结束
    
.判断 (大于或等于 (C_dy, 0))
    返回 (2)
.默认
    返回 (3)
.判断结束


.子程序 求直线信息, T2直线系数, , 
.参数 C_直线, T2直线, , 

.局部变量 直线系数, T2直线系数, , , 

赋值 (直线系数.Lx, 相减 (C_直线.尾点.x, C_直线.起点.x))
赋值 (直线系数.Ly, 相减 (C_直线.尾点.y, C_直线.起点.y))
.如果真 (不等于 (直线系数.Lx, 0))
    赋值 (直线系数.ky_x, 相除 (直线系数.Ly, 直线系数.Lx))
.如果真结束
.如果真 (不等于 (直线系数.Ly, 0))
    赋值 (直线系数.kx_y, 相除 (直线系数.Lx, 直线系数.Ly))
.如果真结束
赋值 (直线系数.Lxy, 求平方根 (相加 (求次方 (取绝对值 (直线系数.Lx), 2), 求次方 (取绝对值 (直线系数.Ly), 2))))
返回 (直线系数)

.子程序 求等分中点, T2坐标, , ok.
.参数 C_直线, T2直线, , 

.局部变量 中点, T2坐标, , , 

赋值 (中点.x, 相加 (C_直线.起点.x, 相除 (相减 (C_直线.尾点.x, C_直线.起点.x), 2)))
赋值 (中点.y, 相加 (C_直线.起点.y, 相除 (相减 (C_直线.尾点.y, C_直线.起点.y), 2)))
返回 (中点)

.子程序 求三等分点集, T2_坐标集, , ok.
.参数 C_直线, T2直线, , 

.局部变量 点集, T2_坐标集, , , 
.局部变量 dx3, 双精度小数型, , , 
.局部变量 dy3, 双精度小数型, , , 

重定义数组 (点集.坐标, 假, 2)
赋值 (dx3, 相除 (相减 (C_直线.尾点.x, C_直线.起点.x), 3))
赋值 (dy3, 相除 (相减 (C_直线.尾点.y, C_直线.起点.y), 3))
赋值 (点集.坐标 [1].x, 相加 (C_直线.起点.x, dx3))
赋值 (点集.坐标 [1].y, 相加 (C_直线.起点.y, dy3))
赋值 (点集.坐标 [2].x, 相加 (C_直线.起点.x, 相乘 (dx3, 2)))
赋值 (点集.坐标 [2].y, 相加 (C_直线.起点.y, 相乘 (dy3, 2)))
返回 (点集)

.子程序 求N等分点集, T2_坐标集, , ok.
.参数 C_直线, T2直线, , 
.参数 C_等分段数, 整数型, , 

.局部变量 dx, 双精度小数型, , , 
.局部变量 dy, 双精度小数型, , , 
.局部变量 i, 整数型, , , 
.局部变量 点集, T2_坐标集, , , 

重定义数组 (点集.坐标, 假, 相减 (C_等分段数, 1))
赋值 (dx, 相除 (相减 (C_直线.尾点.x, C_直线.起点.x), C_等分段数))
赋值 (dy, 相除 (相减 (C_直线.尾点.y, C_直线.起点.y), C_等分段数))
.计次循环首 (相减 (C_等分段数, 1), i)
    赋值 (点集.坐标 [i], x, 相加 (C_直线.起点.x, 相乘 (dx, i)))
    赋值 (点集.坐标 [i], y, 相加 (C_直线.起点.y, 相乘 (dy, i)))
.计次循环尾 ()
返回 (点集)

.子程序 求整数点集, T2_坐标集, , 本方法需要提供一条直线的起点坐标和终点,程序将计算出起点至终点之间的全部整数坐标点,即虽然计算时采用的是双精度小数型,但应看作整数形来使用,纵横轴均整数
.参数 C_直线, T2直线, , 

.局部变量 直线系数, T2直线系数, , , 
.局部变量 坐标集, T2_坐标集, , , 
.局部变量 点, T2坐标, , , 
.局部变量 x, 整数型, , , 
.局部变量 y, 整数型, , , 
.局部变量 k, 双精度小数型, , , 
.局部变量 i, 整数型, , , 

清除数组 (坐标集.坐标)
.如果真 (并且 (等于 (C_直线.尾点.x, C_直线.起点.x), 等于 (C_直线.尾点.y, C_直线.起点.y)))
    加入成员 (坐标集.坐标, C_直线.起点)
    返回 (坐标集)
.如果真结束

.判断开始 (等于 (相减 (C_直线.尾点.x, C_直线.起点.x), 0))
    .变量循环首 (到整数 (C_直线.起点.y), 到整数 (C_直线.尾点.y), 相乘 (1, 取符号 (相减 (C_直线.尾点.y, C_直线.起点.y))), y)
        赋值 (点.x, C_直线.起点.x)
        赋值 (点.y, y)
        加入成员 (坐标集.坐标, 点)
    .变量循环尾 ()
    
.判断 (等于 (相减 (C_直线.尾点.y, C_直线.起点.y), 0))
    .变量循环首 (到整数 (C_直线.起点.x), 到整数 (C_直线.尾点.x), 相乘 (1, 取符号 (相减 (C_直线.尾点.x, C_直线.起点.x))), x)
        赋值 (点.x, x)
        赋值 (点.y, C_直线.起点.y)
        加入成员 (坐标集.坐标, 点)
    .变量循环尾 ()
    
.默认
    赋值 (直线系数, 求直线信息 (C_直线))
    .如果 (小于或等于 (取绝对值 (直线系数.ky_x), 1))
        .变量循环首 (到整数 (C_直线.起点.x), 到整数 (C_直线.尾点.x), 相乘 (1, 取符号 (相减 (C_直线.尾点.x, C_直线.起点.x))), x)
            赋值 (点.x, x)
            赋值 (点.y, 相加 (C_直线.起点.y, 相乘 (直线系数.ky_x, 相减 (x, C_直线.起点.x))))
            加入成员 (坐标集.坐标, 点)
        .变量循环尾 ()
        
    .否则
        .变量循环首 (到整数 (C_直线.起点.y), 到整数 (C_直线.尾点.y), 相乘 (1, 取符号 (相减 (C_直线.尾点.y, C_直线.起点.y))), y)
            赋值 (点.x, 相加 (C_直线.起点.x, 相乘 (直线系数.kx_y, 相减 (y, C_直线.起点.y))))
            赋值 (点.y, y)
            加入成员 (坐标集.坐标, 点)
        .变量循环尾 ()
    .如果结束
    
.判断结束

返回 (坐标集)

.子程序 定长分割点集, T2_坐标集, , 本方法适用于沿直线方向上定距丈量取点,程序将从起点开始,按点距依次计算出直线上的其它坐标点,数据精度较高,最后两点距离不一定符合长度模数
.参数 C_直线, T2直线, , 
.参数 C_点距, 双精度小数型, , 线段上点与点之间的距离

.局部变量 直线系数, T2直线系数, , , 
.局部变量 坐标集, T2_坐标集, , , 
.局部变量 m, 整数型, , , 点数
.局部变量 i, 整数型, , , 
.局部变量 点, T2坐标, , , 
.局部变量 点距X, 双精度小数型, , , 增量系数
.局部变量 点距Y, 双精度小数型, , , 增量系数

重定义数组 (坐标集.坐标, 假, 1)
赋值 (坐标集.坐标 [1], C_直线.起点)
赋值 (直线系数, 求直线信息 (C_直线))
.判断开始 (并且 (等于 (C_直线.尾点.x, C_直线.起点.x), 等于 (C_直线.尾点.y, C_直线.起点.y)))
    返回 (坐标集)
.判断 (小于 (直线系数.Lxy, C_点距))
    返回 (坐标集)
.默认
    
.判断结束

赋值 (点距X, 相乘 (相除 (直线系数.Lx, 直线系数.Lxy), C_点距))
赋值 (点距Y, 相乘 (相除 (直线系数.Ly, 直线系数.Lxy), C_点距))
赋值 (m, 相除 (直线系数.Lxy, C_点距))
赋值 (坐标集.坐标 [1], C_直线.起点)
.判断开始 (等于 (直线系数.Lx, 0))
    赋值 (点.x, C_直线.起点.x)
    .计次循环首 (m, i)
        赋值 (点.y, 相加 (C_直线.起点.y, 相乘 (点距Y, i)))
        加入成员 (坐标集.坐标, 点)
    .计次循环尾 ()
    
.判断 (等于 (直线系数.Ly, 0))
    赋值 (点.y, C_直线.起点.y)
    .计次循环首 (m, i)
        赋值 (点.x, 相加 (C_直线.起点.x, 相乘 (点距X, i)))
        加入成员 (坐标集.坐标, 点)
    .计次循环尾 ()
    
.默认
    .计次循环首 (m, i)
        赋值 (点.x, 相加 (C_直线.起点.x, 相乘 (点距X, i)))
        赋值 (点.y, 相加 (C_直线.起点.y, 相乘 (点距Y, i)))
        加入成员 (坐标集.坐标, 点)
    .计次循环尾 ()
.判断结束
 ' 对终点是否加入到坐标集进行判断
.判断开始 (大于或等于 (坐标集.坐标 [取数组成员数 (坐标集.坐标)].x, C_直线.尾点.x)) ' 还没有考虑符号
    
.判断 (大于或等于 (坐标集.坐标 [取数组成员数 (坐标集.坐标)].y, C_直线.尾点.y)) ' 还没有考虑符号
    
.默认
    加入成员 (坐标集.坐标, C_直线.尾点)
.判断结束
返回 (坐标集)

.子程序 求垂足点, 空白型, , 求已知直线外一点连接到这条直线的垂足点的坐标
.参数 C_直线, T2直线, , 包含起点和终点的直线段
.参数 C_点, T2坐标, , 直线外的点



.子程序 求垂距, 双精度小数型, , ok.求点到直线的垂线段长度,即过点向直线引垂线,计算点到该垂足点的距离
.参数 C_直线, T2直线, , 包含起点和终点的直线段
.参数 C_点, T2坐标, , 直线外的点

.局部变量 直线, T2直线, , , 
.局部变量 点类, T2点类, , , 

赋值 (直线, 求垂线段 (C_直线, C_点))
返回 (点类.两点距离 (直线.起点, 直线.尾点))

.子程序 求垂线段, T2直线, , 如果点不在直线上,就从点向直线引垂线,并返回该垂线段直线,如果点在直线上,将返回两端点重合的直线
.参数 C_直线, T2直线, , 包含起点和终点的直线段
.参数 C_点, T2坐标, , 直线外的点

.局部变量 垂足点, T2坐标, , , 
.局部变量 直线, T2直线, , , 

 ' 垂足点 ＝ 求垂足点 (C_直线, C_点)
赋值 (直线.起点, C_点)
赋值 (直线.尾点, 垂足点)
返回 (直线)

.子程序 是否相交, 逻辑型, , 
.参数 C_直线A, T2直线, , 包含起点和终点的直线段
.参数 C_直线B, T2直线, , 包含起点和终点的直线段
.参数 C_延长相交, 逻辑型, 可空, 考虑直线较短时,是否进行延长相交

返回 (假)

.子程序 求交点, T2坐标, , 本命令在特殊情况下,最好配合是否相交命令进行使用
.参数 C_直线A, T2直线, , 包含起点和终点的直线段
.参数 C_直线B, T2直线, , 包含起点和终点的直线段
.参数 C_延长相交, 逻辑型, 可空, 考虑直线较短时,是否进行延长相交

.局部变量 点, T2坐标, , , 

返回 (点)

.子程序 求延长点, T2坐标, , 求直线延长线上的一点的坐标
.参数 C_直线, T2直线, , 包含起点和终点的直线段
.参数 C_长度L, 双精度小数型, , 延长长度,按直线起点终点方向,从终点开始延长直线,延长长度可以为负数,表示缩短直线

.局部变量 直线系数, T2直线系数, , , 
.局部变量 点, T2坐标, , , 

赋值 (直线系数, 求直线信息 (C_直线))
赋值 (点.x, 相加 (C_直线.尾点.x, 相乘 (相除 (直线系数.Lx, 直线系数.Lxy), C_长度L)))
赋值 (点.y, 相加 (C_直线.尾点.y, 相乘 (相除 (直线系数.Ly, 直线系数.Lxy), C_长度L)))
返回 (点)

.子程序 求延长点集, T2_坐标集, , 求直线延长线上的点的坐标
.参数 C_直线, T2直线, , 包含起点和终点的直线段
.参数 C_长度L, 双精度小数型, , 延长长度,按直线起点终点方向,从终点开始延长直线,延长长度可以为负数,表示缩短直线
.参数 C_段数, 整数型, 可空, 直线要延长的段数,有多少段就返回多少延长点,默认段数为1

.局部变量 直线系数, T2直线系数, , , 
.局部变量 点集, T2_坐标集, , , 
.局部变量 点, T2坐标, , , 
.局部变量 i, 整数型, , , 

赋值 (直线系数, 求直线信息 (C_直线))
.如果真 (等于 (C_段数, 0))
    赋值 (C_段数, 1)
.如果真结束
重定义数组 (点集.坐标, 假, 1)
赋值 (点集.坐标 [1], C_直线.尾点)
.计次循环首 (C_段数, i)
    赋值 (点.x, 相加 (C_直线.尾点.x, 相乘 (相除 (直线系数.Lx, 直线系数.Lxy), C_长度L, i)))
    赋值 (点.y, 相加 (C_直线.尾点.y, 相乘 (相除 (直线系数.Ly, 直线系数.Lxy), C_长度L, i)))
    加入成员 (点集.坐标, 点)
.计次循环尾 ()
返回 (点集)

.子程序 求前方导线点, T2坐标, , 测量学专用,根据已知点、方位角和导线长求下一点的坐标
.参数 C_起点, T2坐标, , 线段起点
.参数 C_方位角, 双精度小数型, , 弧度
.参数 C_导线长度, 双精度小数型, , 

.局部变量 点, T2坐标, , , 线段终点

赋值 (点.x, 相加 (C_起点.x, 相乘 (C_导线长度, 求余弦 (C_方位角))))
赋值 (点.y, 相加 (C_起点.y, 相乘 (C_导线长度, 求正弦 (C_方位角))))
返回 (点)

.子程序 求转折延长点, T2坐标, , 
.参数 C_直线, T2直线, , 线段起点
.参数 C_转角, 双精度小数型, , 弧度,请提供正负符号,右转为正,左转为负
.参数 C_长度, 双精度小数型, , 折线长度,从转折点开始计算至新增的折线末端

.局部变量 点, T2坐标, , , 

返回 (点)

.类模块 T2角度类, , , 

.子程序 弧度转角度, 双精度小数型, , 返回角度,
.参数 C_弧度, 双精度小数型, , 

返回 (相除 (相乘 (C_弧度, 180), #pi))

.子程序 角度转弧度, 双精度小数型, , 返回弧度,
.参数 C_角度, 双精度小数型, , 

返回 (相除 (相乘 (C_角度, #pi), 180))

.子程序 转为度分秒, T2_度分秒, , 十进制度数转为度分秒的形式
.参数 C_角度, 双精度小数型, , 

.局部变量 DFM, T2_度分秒, 静态, , 这里返回度数部分

赋值 (DFM.度, 绝对取整 (C_角度))
赋值 (DFM.分, 绝对取整 (相乘 (相减 (C_角度, DFM.度), 60)))
赋值 (DFM.秒, 四舍五入 (相乘 (相减 (C_角度, DFM.度, 相除 (DFM.分, 60)), 3600), ))
.判断开始 (不等于 (DFM.秒, 60))
    
.默认
    赋值 (DFM.秒, 0)
    赋值 (DFM.分, 相加 (DFM.分, 1))
.判断结束

.判断开始 (不等于 (DFM.分, 60))
    
.默认
    赋值 (DFM.分, 0)
    赋值 (DFM.度, 相加 (DFM.度, 1))
.判断结束

.判断开始 (不等于 (DFM.度, 360))
    
.默认
    赋值 (DFM.度, 0)
.判断结束

返回 (DFM)

.子程序 转为度数, 双精度小数型, , 度分秒的形式转为十进制度数
.参数 C_DFM, T2_度分秒, , 

.局部变量 整部, 整数型, , , 
.局部变量 小部, 双精度小数型, , , 

赋值 (C_DFM.度, 相加 (C_DFM.度, 相除 (C_DFM.分, 60), 相除 (C_DFM.秒, 3600)))
赋值 (整部, 绝对取整 (取绝对值 (C_DFM.度)))
赋值 (小部, 相减 (取绝对值 (C_DFM.度), 整部))
.判断开始 (小于 (整部, 360))
    
.默认
    赋值 (整部, 求余数 (整部, 360))
.判断结束
赋值 (C_DFM.度, 相乘 (取符号 (C_DFM.度), 相加 (整部, 小部)))
返回 (C_DFM.度)

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.类模块 T2曲线类, , , 

.子程序 缓和曲线上的点坐标计算, 整数型, , 
.参数 参_L, 双精度小数型, , 缓和曲线上任一点离ZH点的长度
.参数 参_R, 双精度小数型, , 圆曲线的半径
.参数 参_Lo, 双精度小数型, , 缓和曲线的长度
.参数 参_K, 双精度小数型, , 转向角系数K(1或－1)
.参数 参_a, 双精度小数型, , 过ZH点的切线方位角α
.参数 参_Xz, 双精度小数型, , 点ZH的坐标
.参数 参_Yz, 双精度小数型, , 点ZH的坐标

.局部变量 Xo, 双精度小数型, , , 
.局部变量 Yo, 双精度小数型, , , 
.局部变量 Ao, 双精度小数型, , , 
.局部变量 n, 整数型, , , 
.局部变量 S, 双精度小数型, , , 
.局部变量 A1, 双精度小数型, , , 
.局部变量 X1, 双精度小数型, , , 
.局部变量 Y1, 双精度小数型, , , 
.局部变量 X, 双精度小数型, , , 
.局部变量 Y, 双精度小数型, , , 
.局部变量 B, 双精度小数型, , , 
.局部变量 变量, 字节集, , , 

 ' 说明：当曲线为左转向时，K=1，为右转向时，K=-1，
赋值 (Xo, 相乘 (相减 (相除 (求次方 (参_L, 3), 相乘 (6, 参_R, 参_Lo)), 相除 (求次方 (参_L, 7), 相乘 (336, 求次方 (参_Lo, 3), 求次方 (参_R, 3)))), 参_K))
赋值 (Yo, 相加 (相减 (1, 相除 (求次方 (参_L, 5), 相乘 (40, 求次方 (参_R, 2), 求次方 (参_Lo, 2)))), 相除 (求次方 (参_L, 9), 相乘 (3456, 求次方 (参_R, 4), 求次方 (参_Lo, 4)))))
.判断开始 (大于或等于 (Xo, 0))
    .判断开始 (大于或等于 (Yo, 0))
        赋值 (n, 0)
    .默认
        赋值 (n, 2)
    .判断结束
    
.判断 (大于 (Yo, 0))
    赋值 (n, 1)
.默认
    赋值 (n, 0)
.判断结束

赋值 (Ao, 相加 (求反正切 (相除 (Yo, Xo)), 相乘 (n, 180)))
赋值 (S, 求平方根 (相加 (求次方 (Xo, 2), 求次方 (Yo, 2))))
赋值 (A1, 相减 (相加 (Ao, 参_a), 90))
赋值 (X1, 相乘 (S, 求余弦 (A1)))
赋值 (Y1, 相乘 (S, 求正弦 (A1)))

赋值 (X, 相加 (X1, 参_Xz))
赋值 (Y, 相加 (Y1, 参_Yz))
赋值 (B, 相除 (求次方 (参_L, 2), 相乘 (2, 参_R, 参_Lo))) ' 切线角β计算公式
赋值 (变量, 相加 (到字节集 (X), 到字节集 (Y), 到字节集 (B)))
返回 (取变量地址 (变量))
 ' 当计算第二缓和曲线上的点坐标时，则：
 ' L为到点HZ的长度
 ' α为过点HZ的切线方位角再加上180°
 ' K值与计算第一缓和曲线时相反
 ' Xz，Yz为点HZ的坐标


.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.类模块 T2辅助标识, , , 

.程序集变量 私_显示画板, 画板, , , 
.程序集变量 私_标识画板, 画板, , , 
.子程序 置标识画板, 空白型, 公开, 
.参数 参_显示画板, 画板, , 

赋值 (私_显示画板, 参_显示画板)

.子程序 画辅助线_延伸直线到, 空白型, 公开, 
.参数 参_起点, T2坐标, , 
.参数 参_终点, T2坐标, , 
.参数 参_颜色, T2颜色, 可空, 

私_显示画板.画直线 (参_起点.x, 参_起点.y, 参_终点.x, 参_终点.y)


.子程序 画捕获框_三角形, 空白型, 公开, 
.参数 参_中点, T2坐标, , 
.参数 参_边长, 整数型, , 
.参数 参_颜色, 整数型, , 

.局部变量 画前颜色, 整数型, , , 

.如果真 (等于 (参_边长, 0))
    赋值 (参_边长, 20)
.如果真结束
.如果真 (等于 (参_颜色, 0))
    赋值 (参_颜色, 取颜色值 (255, 0, 0))
.如果真结束
赋值 (画前颜色, 私_显示画板.画笔颜色)
赋值 (私_显示画板.画笔颜色, 参_颜色)
私_显示画板.画直线 (参_中点.x, 相减 (参_中点.y, 相除 (参_边长, 1.732)), 相加 (参_中点.x, 相除 (参_边长, 2)), 相加 (参_中点.y, 相除 (参_边长, 1.732)))

.子程序 画捕获框_矩形, 空白型, 公开, 
.参数 参_中点, T2坐标, , 
.参数 参_边长, 整数型, 可空, 
.参数 参_颜色, 整数型, 可空, 

.局部变量 画前颜色, 整数型, , , 

.如果真 (等于 (参_边长, 0))
    赋值 (参_边长, 20)
.如果真结束
.如果真 (等于 (参_颜色, 0))
    赋值 (参_颜色, 取颜色值 (255, 0, 0))
.如果真结束
赋值 (画前颜色, 私_显示画板.画笔颜色)
赋值 (私_显示画板.画笔颜色, 参_颜色)
私_显示画板.画直线 (相减 (参_中点.x, 相除 (参_边长, 2)), 相减 (参_中点.y, 相除 (参_边长, 2)), 相加 (参_中点.x, 相除 (参_边长, 2)), 相减 (参_中点.y, 相除 (参_边长, 2)))
私_显示画板.画直线 (相减 (参_中点.x, 相除 (参_边长, 2)), 相减 (参_中点.y, 相除 (参_边长, 2)), 相减 (参_中点.x, 相除 (参_边长, 2)), 相加 (参_中点.y, 相除 (参_边长, 2)))
私_显示画板.画直线 (相加 (参_中点.x, 相除 (参_边长, 2)), 相加 (参_中点.y, 相除 (参_边长, 2)), 相加 (参_中点.x, 相除 (参_边长, 2)), 相减 (参_中点.y, 相除 (参_边长, 2)))
私_显示画板.画直线 (相加 (参_中点.x, 相除 (参_边长, 2)), 相加 (参_中点.y, 相除 (参_边长, 2)), 相减 (参_中点.x, 相除 (参_边长, 2)), 相加 (参_中点.y, 相除 (参_边长, 2)))
赋值 (私_显示画板.画笔颜色, 画前颜色)

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.类模块 T2坐标变换类, , , 

.程序集变量 私_原点, T2坐标, , , 这是记录绝对空间的原点在画板中处于什么位置
.程序集变量 私_转角, T2_角, , , 这是记录绝对空间的坐标系在画板中相对于画板本身的坐标系的旋转角
.程序集变量 私_比例尺, 双精度小数型, , , 这是记录一个画板长度单位相当于多少个绝对空间中的长度单位
.子程序 置新坐标系, 空白型, , 
.参数 参_原点, T2坐标, , 
.参数 参_转角, T2_角, , 
.参数 参_比例尺, 双精度小数型, , 

赋值 (私_原点, 参_原点)
赋值 (私_转角, 参_转角)
赋值 (私_比例尺, 参_比例尺)

.子程序 转绝对坐标, T2坐标, , 
.参数 参_画板坐标, T2坐标, , 

.局部变量 局部_绝对坐标, T2坐标, , , 

赋值 (局部_绝对坐标.x, 相乘 (相减 (参_画板坐标.x, 私_原点.x), 私_比例尺))
赋值 (局部_绝对坐标.y, 相乘 (相减 (参_画板坐标.y, 私_原点.y), 私_比例尺))
返回 (局部_绝对坐标)

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.类模块 T2画板_图像存储类, , , 

.程序集变量 私_存储, T2_存储画板, , , 
.子程序 加载画板, 空白型, , 
.参数 参_显示画板, 画板, , 

.局部变量 i, 整数型, , , 

赋值 (私_存储.显示画板, 参_显示画板)
复制窗口组件 (私_存储.显示画板, 私_存储.缓存画板)
赋值 (私_存储.缓存画板.可视, 假)
复制窗口组件 (私_存储.显示画板, 私_存储.历史图像 [1])
赋值 (私_存储.历史图像 [1].可视, 假)
赋值 (私_存储.位置指针, 1)

.子程序 置指针位置, 空白型, , 
.参数 参_指针位置, 整数型, , 

.判断开始 (等于 (参_指针位置, 0))
    信息框 (“指针位置不能为0”, 0, )
    返回 ()
.判断 (大于 (参_指针位置, 取数组成员数 (私_存储.历史图像)))
    信息框 (“指针位置超过许可范围”, 0, )
.默认
    赋值 (私_存储.位置指针, 参_指针位置)
.判断结束


.子程序 取指针位置, 整数型, , 
返回 (私_存储.位置指针)

.子程序 瞬时备份, 空白型, , 
私_存储.复制 (.显示画板, , , , , 私_存储.缓存画板, , , )

.子程序 瞬时还原, 空白型, , 
私_存储.复制 (.缓存画板, , , , , 私_存储.显示画板, , , )

.子程序 图像备份, 整数型, , 图像备份时，总是备份到当前指针处，位置指针会随之移动，以保证备份图像时不覆盖最近备份的图像
私_存储.复制 (.显示画板, , , , , 私_存储.历史图像 [私_存储].位置指针, , , )
 ' ...................................................................................创建图像画板.......................
.判断开始 (等于 (私_存储.位置指针, 取数组成员数 (私_存储.历史图像)))
    重定义数组 (私_存储.历史图像, 真, 相加 (取数组成员数 (私_存储.历史图像), 1))
    复制窗口组件 (私_存储.显示画板, 私_存储.历史图像 [取数组成员数 (私_存储.历史图像)])
    赋值 (私_存储.历史图像 [取数组成员数 (私_存储.历史图像)].可视, 假)
     ' ........移动位置指针
    赋值 (私_存储.位置指针, 取数组成员数 (私_存储.历史图像))
.默认
    赋值 (私_存储.位置指针, 相加 (私_存储.位置指针, 1))
.判断结束


返回 (私_存储.位置指针)

.子程序 图像还原, 空白型, , 
.参数 参_指针位置, 整数型, 可空, 

.如果真 (是否为空 (参_指针位置))
    赋值 (参_指针位置, 私_存储.位置指针)
.如果真结束

私_存储.复制 (.历史图像 [参_指针位置], , , , , 私_存储.显示画板, , , )


.子程序 删除图像, 空白型, , 
.参数 参_指针位置, 整数型, 可空, 

.如果真 (是否为空 (参_指针位置))
    赋值 (参_指针位置, 私_存储.位置指针)
.如果真结束
私_存储.发送信息 (.历史图像 [参_指针位置], 16, 0, 0)
删除成员 (私_存储.历史图像, 参_指针位置, 1)



 ' 不属于任何一个程序集、类模块的函数：
