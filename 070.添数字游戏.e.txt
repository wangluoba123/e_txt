 ' 文件类型：Windows窗口程序

 ' 程序名称：易语言经典算法 - 添数字游戏
 ' 程序描述：　　遍历数字1-9。产生一个6位数y和一个3位数x，使y=x*x，并且组成y与x的9个数各不相同。
 ' 程序作者：大有吴涛易语言软件公司
 ' 邮政编码：116001
 ' 联系地址：辽宁省大连市中山区人民路55号亚太国际金融中心
 ' 联系电话：+86(0411)88995831
 ' 传真号码：+86(0411)88995834
 ' 电子信箱：service@dywt.com.cn
 ' 主页地址：http://www.dywt.com.cn
 ' 版权声明：祝您一帆风顺，心想事成！
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 400
    高度 = 281
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “易语言经典算法 - 添数字游戏”
    帮助文件名 = “”





 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 4 系统核心支持库
 ' iext3 {B6F7542F-B8FE-46a8-9605-98856A687097} 2 0 扩展界面支持库三





.窗口程序集 启动窗口程序集, , , 

.子程序 __启动窗口_创建完毕, 空白型, , 
 ' 使用算法：
 ' 问题：添数字游戏
 ' 问题描述：
 ' 遍历数字1-9。产生一个6位数y和一个3位数x，使y=x*x，并且组成y与x的9个数都不相同。
 ' 问题分析：
 ' 首先依次比较每一个平方后是6位数的3位数，记录下3位数和平方后的6位数。
 ' 然后比较3位数的每一位和6位数的每一位是否合格。
 ' 合格则输出。
 ' 比较下一个3位数。
 ' 备注：


.子程序 _计算图形按钮_被单击, 空白型, , 
赋值 (.内容, “”)
计算子程序 ()

.子程序 计算子程序, 空白型, , 
.局部变量 平方根因子, 整数型, , , 依次试探每一个3位数找到符合要求的3位数
.局部变量 临时平方根因子, 整数型, , , 存储平方根因子的临时变量
.局部变量 得到的平方数, 整数型, , , 根据平方根因子得到一个6位数
.局部变量 临时平方数, 整数型, , , 存储平方数的临时变量
.局部变量 使用状态数组, 整数型, , "9", 标记9个数是否使用的叔祖
.局部变量 局部计次变量, 整数型, , , 
.局部变量 某一位上的数, 整数型, , , 依次判断3位数或9位数每个数位上的数是否使用过
.局部变量 判断符合位数, 整数型, , , 记录已经符合要求的位数
.局部变量 得到的答案数, 整数型, , , 记录得到的答案数

赋值 (平方根因子, 316) ' 316平方以后是最大的5为数的平方数317的平方为最小的6位平方数
.变量循环首 (平方根因子, 999, 1, 平方根因子) ' 1000的平方为7位数超出范围
    .计次循环首 (9, 局部计次变量) ' 开始时，标记9个数都没有使用
        赋值 (使用状态数组 [局部计次变量], 1) ' 为1表示没有使用过
    .计次循环尾 ()
    赋值 (得到的平方数, 相乘 (平方根因子, 平方根因子)) ' 求出平方数
    赋值 (临时平方数, 得到的平方数) ' 付值给一个临时变量
    赋值 (判断符合位数, 0) ' 开始时符合要求的数的位数为0
    赋值 (临时平方根因子, 平方根因子) ' 付值给你一临时变量
    .判断循环首 (或者 (大于 (临时平方根因子, 0), 大于 (临时平方数, 0))) ' 6位数或者3位数没有全部判断是否合格，继续判断
        赋值 (某一位上的数, 求余数 (临时平方数, 10)) ' 依次比较平方数的每一位是否合格，从个位开始
        赋值 (临时平方数, 相除 (临时平方数, 10)) ' 平方数比较位数提前一位
        .如果真 (并且 (不等于 (某一位上的数, 0), 等于 (使用状态数组 [某一位上的数], 1))) ' 该数没有被使用过
            赋值 (判断符合位数, 相加 (判断符合位数, 1)) ' 符合的位数增加一个
            赋值 (使用状态数组 [某一位上的数], 0) ' 标记为已使用
        .如果真结束
        赋值 (某一位上的数, 求余数 (临时平方根因子, 10)) ' 依次比较平方根的每一位是否合格，从个位开始
        赋值 (临时平方根因子, 相除 (临时平方根因子, 10)) ' 平方根比较位数提前一位
        .如果真 (并且 (不等于 (某一位上的数, 0), 等于 (使用状态数组 [某一位上的数], 1)))
            赋值 (判断符合位数, 相加 (判断符合位数, 1)) ' 符合的位数增加一个
            赋值 (使用状态数组 [某一位上的数], 0) ' 标记为已使用
        .如果真结束
        
    .判断循环尾 ()
    .如果真 (等于 (判断符合位数, 9)) ' 符合的位数为9，已找到一个正确的组合
        赋值 (得到的答案数, 相加 (得到的答案数, 1)) ' 得到的答案数增加1
        相加 (“答案”, 到文本 (得到的答案数), “：”, #换行符, 到文本 (得到的平方数), “的平方根是：”, 到文本 (平方根因子), #换行符).加入文本 () ' 这个输出答案
    .如果真结束
    
.变量循环尾 ()


 ' 不属于任何一个程序集、类模块的函数：
