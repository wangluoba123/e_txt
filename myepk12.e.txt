 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 窗口1
    左边 = 50
    顶边 = 50
    宽度 = 499
    高度 = 351
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    窗口类名 = “”
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “易包12的窗口”
    帮助文件名 = “”





 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 5 3 系统核心支持库





.DLL命令 Dll信息框12, 空白型, "", "MessageBoxA", , 
    .参数 hWnd, 整数型, , 
    .参数 lpText, 文本型, , 
    .参数 lpCaption, 文本型, , 
    .参数 uType, 整数型, , 

.程序集 程序集1, , , 

.子程序 _启动子程序, 整数型, , 本子程序在程序启动后最先执行

返回 (0) ' 可以根据您的需要返回任意数值


.子程序 来自易包12的子程序1, 空白型, 公开, 本易包所输出的子程序
.参数 t1, 文本型, , 
.参数 t2, 文本型, , 


 ' 注意: 任何使用文本/字节集/数组直接常量数据对易包公开子程序以显式或隐式参考方式传递进来的参数进行赋值时,都必须使用"复制易包常量"方法将该数据脱离常量状态,避免本易包被动态卸载后,外部调用程序引用该常量数据出错.
赋值 (t1, 复制易包常量 (“祖国”)) ' 根据语法规则,文本型参数默认为参考传递方式,所以需要处理.
 ' t1 = t2 + "祖国" ' 如果是这种方式,就不需要使用"复制易包常量"命令,因为相加后的结果已经不是常量了.
 ' t1 = 复制易包常量 ("祖国" + "您好")  ' 如果是这种方式,还是需要使用"复制易包常量"命令,因为此时相加后的结果被编译器直接优化为一个常量了.

 ' 这个规则简单的记忆方式:
 ' 对于类似 "参数 = 常量" 或 "参数.xx = 常量" 等语句,同时满足以下要求,就需要将"常量"使用"复制易包常量 (常量)"代替:
 ' 1. "参数" 为本易包的公开子程序以显式或隐式参考方式传递进来的参数;
 ' 2. "常量" 为一个直接的文本/字节集/数组常量

 ' 这个规则的最简单的记忆方式:
 ' 不要修改公开子程序的参数,也不将公开子程序的参数传递到其它子程序,所有需要传递回去的复杂数据均通过一个自定义数据类型返回.

子程序1 (t2)
载入 (窗口1, , 假)
来自易包11的子程序3 (窗口1)
Dll信息框12 (0, 相加 (t1, t2), “易包12中的信息框”, 0)


.子程序 来自易包12的子程序2, 空白型, 公开, 本易包所输出的子程序
.参数 t1, 文本型, , 
.参数 t2, 文本型, , 

.局部变量 var_t1, 文本型, , , 
.局部变量 var_t2, 文本型, , , 

 ' 避免违反上面规则的最简单处理方式,就是在公开子程序的首部将所有以参考方式传递过来的参数赋值到一个局部变量中,以后只对局部变量进行操作即可.
赋值 (var_t1, t1)
赋值 (var_t2, t2)

赋值 (var_t1, “祖国”) ' 由于是对局部变量操作,所以不需要使用"复制易包常量"命令封装.
Dll信息框12 (0, 相加 (var_t1, var_t2), “易包12中的信息框”, 0)


.子程序 子程序1, 空白型, , 
.参数 new_t2, 文本型, , 

 ' 注意: 本子程序被"来自易包12的子程序1"调用,并以默认的参考方式传递过来了其参数t2,此时对new_t2赋值就等于对"来自易包12的子程序1"的t2参数赋值,因此必须同样处理.
 ' 如果本子程序不处于这种调用情况,则不需要如此处理.
赋值 (new_t2, 复制易包常量 (“您好”))


.子程序 来自易包12的子程序3, 空白型, 公开, 
.参数 win1, 窗口, , 

赋值 (win1., “来自易包12的子程序3”)


.子程序 来自易包11的子程序3, 空白型, , 
.参数 win1, 窗口, , 




 ' 不属于任何一个程序集、类模块的函数：
