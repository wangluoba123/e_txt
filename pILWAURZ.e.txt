 ' 文件类型：Windows模块源码

 ' 程序名称：易文件_源码信息类
 ' 程序描述：这个程序是在别人分析出结构的基础上重新编写的，感谢众多易友的辛勤劳动，感谢我的父母，感谢我今天过生日，感谢我喜欢的众多美眉……:)
@2008.07.04
 ' 程序作者：SUPER250
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：http://www.iim.im
 ' 版权声明：这个程序是在别人分析出结构的基础上重新编写的，感谢众多易友的辛勤劳动，感谢我的父母，感谢我今天过生日，感谢我喜欢的众多美眉……:)
 ' 版本号：1.0
 ' 创建号：0.0





 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 5 系统核心支持库
 ' spec A512548E76954B6E92C21055517615B0 2 1 特殊功能支持库




数据类型 支持库信息, 公开, 从源码或模块中获得的支持库信息
    .成员 库文件名, 文本型, , , 
    .成员 数字签名, 文本型, , , 
    .成员 主版本号, 文本型, , , 
    .成员 次版本号, 文本型, , , 
    .成员 支持库名, 文本型, , , 


.程序集 程序集1, , , 

.程序集变量 源码信息类, 类_易文件_源码信息类, , , 
.子程序 _启动子程序, 整数型, , 请在本子程序中放置易模块初始化代码

_临时子程序 () ' 在初始化代码执行完毕后调用测试代码
返回 (0) ' 可以根据您的需要返回任意数值

.子程序 _临时子程序, 空白型, , 
.局部变量 临_i, 整数型, , , 
.局部变量 临_支持库信息, 支持库信息, , , 

 ' 本名称子程序用作测试程序用，仅在开发及调试环境中有效，编译发布程序前将被系统自动清空，请将所有用作测试的临时代码放在本子程序中。 ***注意不要修改本子程序的名称、参数及返回值类型。
 ' 展开的子程序是没有写全的，把调试语句都加上，我没有测试，我写测试程序后发你。
源码信息类.初始化信息 (读入文件 (“C:\测试.e”))
标准输出 (“源码信息类.作者 ()”, 源码信息类.作者 ())
标准输出 (“源码信息类.电话 ()”, 源码信息类.电话 ())
标准输出 (“源码信息类.传真 ()”, 源码信息类.传真 ())
标准输出 (“源码信息类.程序名称 ()”, 源码信息类.程序名称 ())
标准输出 (“源码信息类.程序类型 ()”, 源码信息类.程序类型 ())
标准输出 (“源码信息类.程序备注 ()”, 源码信息类.程序备注 ())
标准输出 (“源码信息类.主版本号 ()”, 源码信息类.主版本号 ())
标准输出 (“源码信息类.次版本号 ()”, 源码信息类.次版本号 ())
标准输出 (“源码信息类.程序图标 ()”, 源码信息类.程序图标 ())
标准输出 (“源码信息类.邮政编码 ()”, 源码信息类.邮政编码 ())
标准输出 (“源码信息类.联系地址 ()”, 源码信息类.联系地址 ())
标准输出 (“源码信息类.电子信箱 ()”, 源码信息类.电子信箱 ())
标准输出 (“源码信息类.主页地址 ()”, 源码信息类.主页地址 ())
标准输出 (“源码信息类.其他信息 ()”, 源码信息类.其他信息 ())
标准输出 (“源码信息类.调试参数行 ()”, 源码信息类.调试参数行 ())
标准输出 (“源码信息类.支持库数目 ()”, 源码信息类.支持库数目 ())
.计次循环首 (源码信息类.支持库数目 (), 临_i)
    赋值 (临_支持库信息, 源码信息类.支持库信息数组 (临_i))
    调试输出 (“支持库信息数组”, 临_i, “:  ”, #换行符, “临_支持库信息.库文件名”, 临_支持库信息.库文件名, #换行符, “临_支持库信息.数字签名”, 临_支持库信息.数字签名, #换行符, “临_支持库信息.主版本号”, 临_支持库信息.主版本号, #换行符, “临_支持库信息.次版本号”, 临_支持库信息.次版本号, #换行符, “临_支持库信息.支持库名”, 临_支持库信息.支持库名, #换行符)
.计次循环尾 ()
标准输入 ()


.类模块 类_易文件_源码信息类, , , 

.程序集变量 源码字节集, 字节集, , , 源码字节集信息
.程序集变量 源码长度, 整数型, , , 
.程序集变量 匿名程序集变量_13, 空白型, , , '前三+后三 空白+长度
.程序集变量 信息起始位置, 整数型, , , 源码信息的xxqswz，如果开始分析其他数据该值可能为计算出
.程序集变量 匿名程序集变量_181, 空白型, , , 
.程序集变量 程序名称, 文本型, , , 
.程序集变量 程序名称位置, 整数型, , , 
.程序集变量 程序类型_字节集, 字节集, , , 返回程序类型文本
.程序集变量 程序类型位置, 整数型, , , 
.程序集变量 程序备注, 文本型, , , 
.程序集变量 程序备注位置, 整数型, , , 
.程序集变量 主版本号, 文本型, , , 
.程序集变量 主版本号位置, 整数型, , , 
.程序集变量 次版本号, 文本型, , , 
.程序集变量 次版本号位置, 整数型, , , 
.程序集变量 调试参数行, 文本型, , , 
.程序集变量 调试参数行位置, 整数型, , , 
.程序集变量 程序图标, 字节集, , , 
.程序集变量 程序图标位置, 整数型, , , 
.程序集变量 作者, 文本型, , , 
.程序集变量 作者位置, 整数型, , , 
.程序集变量 邮政编码, 整数型, , , 
.程序集变量 邮政编码位置, 整数型, , , 
.程序集变量 联系地址, 文本型, , , 
.程序集变量 联系地址位置, 整数型, , , 
.程序集变量 电话, 文本型, , , 
.程序集变量 电话位置, 整数型, , , 
.程序集变量 传真, 文本型, , , 
.程序集变量 传真位置, 整数型, , , 
.程序集变量 电子信箱, 文本型, , , 
.程序集变量 电子信箱位置, 整数型, , , 
.程序集变量 主页地址, 文本型, , , 
.程序集变量 主页地址位置, 整数型, , , 
.程序集变量 其他信息, 文本型, , , 
.程序集变量 其他信息位置, 整数型, , , 
.程序集变量 支持库信息数组, 支持库信息, , "0", 
.程序集变量 支持库信息数组位置, 整数型, , , 
.程序集变量 支持库数目, 整数型, , , 
.程序集变量 支持库信息位置, 整数型, , , 
.子程序 取_字节集, 整数型, , 从一段字节集中读取出指定位置处开始 由值信息长度值定义 的字节集 相当于 取字节集中间() 返回结束位置 by SUPER250
.参数 位置, 整数型, 可空, 默认为首部
.参数 值信息长度值, 整数型, , 默认为4字节，取得数据的长度占用的字节长度
.参数 值, 字节集, 参考, 提供变量返回结果
.参数 字节集, 字节集, , 提供欲取得值的字节集

 ' 取值
.如果真 (等于 (是否为空 (), 真))
    赋值 (1)
.如果真结束
赋值 (值, 取字节集中间 (字节集, 位置, 值信息长度值))
调试输出 (“值”, )
返回 (相加 (位置, 值信息长度值))


.子程序 取_整数, 整数型, , 从一段字节集中读取出指定位置处开始 由值信息长度值定义 的整数 相当于 取字节集中间() 返回结束位置 by SUPER250
.参数 位置, 整数型, 可空, 默认为首部
.参数 值信息长度值, 整数型, , 默认为4字节，取得数据的长度占用的字节长度
.参数 值, 整数型, 参考, 提供变量返回结果
.参数 字节集, 字节集, , 提供欲取得值的字节集

.局部变量 临_位置, 整数型, , , 
.局部变量 临_值, 字节集, , , 

赋值 (临_位置, 取_字节集 (位置, 值信息长度值, 临_值, 字节集))
赋值 (取字节集数据 (临_值, #整数型, ))
返回 (临_位置)
 ' 返回 (取字节集数据 (取值_字节集 (位置, 值信息长度值, 值, 字节集), #整数型, ))

.子程序 取_文本, 整数型, , 从一段字节集中读取出指定位置处开始 由值信息长度值定义 的文本 相当于 取字节集中间() 返回结束位置 by SUPER250
.参数 位置, 整数型, 可空, 默认为首部
.参数 值信息长度值, 整数型, , 默认为4字节，取得数据的长度占用的字节长度
.参数 值, 文本型, 参考, 提供变量返回结果
.参数 字节集, 字节集, , 提供欲取得值的字节集

.局部变量 临_位置, 整数型, , , 
.局部变量 临_值, 字节集, , , 

赋值 (临_位置, 未知函数_67174804 (临_值, ))
赋值 (取字节集数据 (临_值, #文本型, ))
返回 (临_位置)
 ' 返回 (取字节集数据 (取值_字节集 (位置, 值信息长度值, 值, 字节集), #文本型, ))


.子程序 取值_字节集, 整数型, , 从一段字节集中读取出指定位置处开始 由值信息长度值定义 的信息长度 后取得的字节集 返回结束位置 by SUPER250
.参数 位置, 整数型, 可空, 默认为首部
.参数 值信息长度值, 整数型, 可空, 默认为4字节，取得数据的长度占用的字节长度
.参数 值, 字节集, 参考, 提供变量返回结果
.参数 字节集, 字节集, , 提供欲取得值的字节集

.局部变量 临_数据长度, 整数型, , , 

 ' 如 01 00 00 00 15 ，01 起 01 00 00 00 ，值信息长度值为4，值为15。 01为临_数据长度
 ' 值数据长度
调试输出 (“位置”, )
调试输出 (“值信息长度值”, )

.如果真 (等于 (是否为空 (值信息长度值), 真))
    赋值 (临_数据长度, 4)
.如果真结束
 ' 取值
.如果真 (等于 (是否为空 (位置), 真))
    赋值 (位置, 1)
.如果真结束
赋值 (临_数据长度, 取字节集数据 (取字节集中间 (字节集, 位置, 值信息长度值), #整数型, ))
 ' 调试输出 (“字节集”, 字节集)
调试输出 (“位置”, 位置)
调试输出 (“值信息长度值”, 值信息长度值)
调试输出 (“临_数据长度”, 临_数据长度)
赋值 (值, 取字节集中间 (字节集, 相加 (位置, 值信息长度值), 临_数据长度))
调试输出 (“值”, 值)
返回 (相加 (位置, 值信息长度值, 临_数据长度))

.子程序 取值_文本, 整数型, , 从一段字节集中读取出指定位置处开始 由值信息长度值定义 的信息长度 后取得的字节集 转换成的文本 返回结束位置 by SUPER250
.参数 位置, 整数型, 可空, 默认为首部
.参数 值信息长度值, 整数型, 可空, 默认为4字节，取得数据的长度占用的字节长度
.参数 值, 文本型, 参考, 提供变量返回结果
.参数 字节集, 字节集, , 提供欲取得值的字节集

.局部变量 临_位置, 整数型, , , 
.局部变量 临_值, 字节集, , , 

赋值 (临_位置, 取值_字节集 (位置, 值信息长度值, 临_值, 字节集))
赋值 (值, 取字节集数据 (临_值, #文本型, ))
返回 (临_位置)
 ' 返回 (取字节集数据 (取值_字节集 (位置, 值信息长度值, 值, 字节集), #文本型, ))

.子程序 取值_整数, 整数型, , 从一段字节集中读取出指定位置处开始 由值信息长度值定义 的信息长度 后取得的字节集 转换成的十进制整数 返回结束位置 by SUPER250
.参数 位置, 整数型, 可空, 默认为首部
.参数 值信息长度值, 整数型, 可空, 默认为4字节，取得数据的长度占用的字节长度
.参数 值, 整数型, 参考, 提供变量返回结果
.参数 字节集, 字节集, , 提供欲取得值的字节集

.局部变量 临_位置, 整数型, , , 
.局部变量 临_值, 字节集, , , 

赋值 (临_位置, 取值_字节集 (位置, 值信息长度值, 临_值, 字节集))
赋值 (值, 取字节集数据 (临_值, #整数型, ))
返回 (临_位置)
 ' 返回 (取字节集数据 (取值_字节集 (位置, 值信息长度值, 值, 字节集), #整数型, ))

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用
 ' 调试输出 (“感谢：(以下排列不分先后)”, #换行符, “888888”, #换行符, “近在眼前”, #换行符, “光庆”, #换行符, “Flyingsea”, #换行符, “西风”, #换行符, “泪闯天涯”, #换行符, “叮咚茶”, #换行符, “银戒指”, #换行符, “画画龙”, #换行符, “祥”, #换行符, “月方”, #换行符, “超级大BUG”)

.子程序 初始化信息, 逻辑型, , 读前先初始化
.参数 文件数据, 字节集, , 

.局部变量 临_支持库处理错误, 逻辑型, , , 
.局部变量 临_调试参数行结束位置, 整数型, , , 
.局部变量 临_主版本号, 整数型, , , 
.局部变量 临_次版本号, 整数型, , , 
.局部变量 临_主版本号位置, 整数型, , , 
.局部变量 临_次版本号位置, 整数型, , , 

.如果真 (是否为易文件 (文件数据))
    赋值 (源码字节集, 文件数据)
    赋值 (源码长度, 取字节集长度 (源码字节集))
    
    赋值 (信息起始位置, 269)
    赋值 (程序名称位置, 信息起始位置)
    调试输出 (“程序名称位置”, 程序名称位置)
    调试输出 (“信息起始位置”, 信息起始位置)
    调试输出 (“测试字节集”, 取字节集中间 (源码字节集, 信息起始位置, 4))
    赋值 (程序备注位置, 取值_文本 (程序名称位置, 4, 程序名称, 源码字节集))
     ' 下面这句和上面这句有什么区别？但就是错误
     ' 程序备注位置 ＝ 取值_文本 (程序名称位置, , 程序名称, 源码字节集)
    调试输出 (“程序名称”, 程序名称)
    赋值 (作者位置, 取值_文本 (程序备注位置, 4, 程序备注, 源码字节集))
    调试输出 (“程序备注”, 程序备注)
    赋值 (邮政编码位置, 取值_文本 (作者位置, 4, 作者, 源码字节集))
    调试输出 (“作者”, 作者)
    赋值 (联系地址位置, 取值_整数 (邮政编码位置, 4, 邮政编码, 源码字节集))
    调试输出 (“邮政编码”, 邮政编码)
    赋值 (电话位置, 取值_文本 (联系地址位置, 4, 联系地址, 源码字节集))
    调试输出 (“联系地址”, 联系地址)
    赋值 (传真位置, 取值_文本 (电话位置, 4, 电话, 源码字节集))
    调试输出 (“电话”, 电话)
    赋值 (电子信箱位置, 取值_文本 (传真位置, 4, 传真, 源码字节集))
    调试输出 (“传真”, 传真)
    赋值 (主页地址位置, 取值_文本 (电子信箱位置, 4, 电子信箱, 源码字节集))
    调试输出 (“电子信箱”, 电子信箱)
    赋值 (其他信息位置, 取值_文本 (主页地址位置, 4, 主页地址, 源码字节集))
    调试输出 (“主页地址”, 主页地址)
    赋值 (主版本号位置, 取值_文本 (其他信息位置, 4, 其他信息, 源码字节集))
    调试输出 (“其他信息”, 其他信息)
    
    赋值 (次版本号位置, 取_整数 (主版本号位置, 4, 临_主版本号, 源码字节集))
    调试输出 (“主版本号”, 主版本号)
    赋值 (临_次版本号位置, 取_整数 (次版本号位置, 4, 临_次版本号, 源码字节集))
    调试输出 (“次版本号”, 次版本号)
    赋值 (主版本号, 到文本 (临_主版本号))
    赋值 (次版本号, 到文本 (临_次版本号))
    赋值 (程序类型_字节集, 取字节集中间 (源码字节集, 13, 1))
    调试输出 (“程序类型_字节集”, 程序类型_字节集)
    赋值 (调试参数行位置, 相加 (取支持库信息数组子程序 (临_支持库处理错误), 12))
    调试输出 (“调试参数行位置”, 调试参数行位置)
    赋值 (临_调试参数行结束位置, 取值_文本 (调试参数行位置, 4, 调试参数行, 源码字节集))
    调试输出 (“调试参数行”, 调试参数行)
     ' 临_调试参数行结束位置用作其他处理
    .如果真 (等于 (临_支持库处理错误, 假))
        返回 (假)
    .如果真结束
    
.如果真结束
返回 (假)

.子程序 是否为易文件, 逻辑型, , 判断是否是易源码或易模块 by super250
.参数 模块数据, 字节集, , 

.局部变量 临_易文件头, 字节集, , , 

赋值 (临_易文件头, 取字节集中间 (模块数据, 1, 12))
调试输出 (“临_易文件头”, 临_易文件头)
.如果真 (等于 (临_易文件头, { 67, 78, 87, 84, 69, 80, 82, 71, 25, 115, 17, 21 })) ' 易文件 这种判断可能不正确或许读取前面的8字节已足够
    返回 (真)
.如果真结束
返回 (假)

.子程序 程序名称, 文本型, , 
返回 (程序名称)

.子程序 程序类型, 文本型, , BY super250
.局部变量 临_程序类型名, 文本型, , , 

 ' 这种判断方式可能不完整，在修改类型后文件变化多处，可能是源码自校验信息
.判断开始 (等于 (程序类型_字节集, { 137 })) ' Windows窗口程序
    赋值 (临_程序类型名, “Windows窗口程序”)
.判断 (等于 (程序类型_字节集, { 136 })) ' Windows控制台程序
    赋值 (临_程序类型名, “Windows控制台程序”)
.判断 (等于 (程序类型_字节集, { 139 })) ' Windows动态链接库
    赋值 (临_程序类型名, “Windows动态链接库”)
.判断 (等于 (程序类型_字节集, { 97 })) ' Windows易语言模块
    赋值 (临_程序类型名, “Windows易语言模块”)
.判断 (等于 (程序类型_字节集, { 153 })) ' Linux控制台程序
    赋值 (临_程序类型名, “Linux控制台程序”)
.判断 (等于 (程序类型_字节集, { 113 })) ' Linux易语言模块
    赋值 (临_程序类型名, “Linux易语言模块”)
.默认
    赋值 (临_程序类型名, “”)
.判断结束
调试输出 (“程序类型”, 程序类型_字节集)
调试输出 (“临_程序类型名”, 临_程序类型名)
返回 (临_程序类型名)

.子程序 程序备注, 文本型, , 
调试输出 (“程序备注”, 程序备注)
返回 (程序备注)

.子程序 主版本号, 文本型, , 感谢 笨笨啊
调试输出 (“主版本号”, 主版本号)
返回 (主版本号)

.子程序 次版本号, 文本型, , 感谢 笨笨啊
调试输出 (“次版本号”, 次版本号)
返回 (次版本号)

.子程序 调试参数行, 文本型, , by 888888
调试输出 (“调试参数行”, 调试参数行)
返回 (调试参数行)

.子程序 程序图标, 字节集, , 暂时无效
调试输出 (“程序图标”, 程序图标)
返回 (程序图标)

.子程序 作者, 文本型, , 
调试输出 (“作者”, 作者)
返回 (作者)

.子程序 邮政编码, 整数型, , 
调试输出 (“邮政编码”, 邮政编码)
返回 (邮政编码)

.子程序 联系地址, 文本型, , 
调试输出 (“联系地址”, 联系地址)
返回 (联系地址)

.子程序 电话, 文本型, , 
调试输出 (“电话”, 电话)
返回 (电话)

.子程序 传真, 文本型, , 
调试输出 (“传真”, 传真)
返回 (传真)

.子程序 电子信箱, 文本型, , 
调试输出 (“电子信箱”, 电子信箱)
返回 (电子信箱)

.子程序 主页地址, 文本型, , 
调试输出 (“主页地址”, 主页地址)
返回 (主页地址)

.子程序 其他信息, 文本型, , BY super250
调试输出 (“其他信息”, 其他信息)
返回 (其他信息)

.子程序 支持库信息数组, 支持库信息, , BY super250 
.参数 下标, 整数型, , 

.局部变量 临_空支持库信息, 支持库信息, , , 

调试输出 (“支持库信息数组”, 下标, 支持库信息数组 [下标])
 ' 取变量地址 ()
 ' 取变量数据地址 ()
.如果真 (大于 (下标, 取数组成员数 (支持库信息数组)))
    赋值 (临_空支持库信息.库文件名, “”)
    赋值 (临_空支持库信息.数字签名, “”)
    赋值 (临_空支持库信息.主版本号, “”)
    赋值 (临_空支持库信息.次版本号, “”)
    赋值 (临_空支持库信息.支持库名, “”)
    返回 (临_空支持库信息)
.如果真结束
返回 (支持库信息数组 [下标])

.子程序 支持库数目, 整数型, , 取得使用的支持库的数目
调试输出 (“支持库数目”, 支持库数目)
返回 (支持库数目)

.子程序 取支持库信息数组子程序, 整数型, , by 888888 返回数据结束位置
.参数 出错, 逻辑型, 参考, 

.局部变量 临_i, 整数型, , , 
.局部变量 临_支持库总长, 整数型, , , 
.局部变量 临_支持库当前位置, 整数型, , , 
.局部变量 临_支持库当前信息, 字节集, , , 
.局部变量 临_支持库信息数组, 字节集, , "5", 
.局部变量 临_支持库信息, 支持库信息, , , 

赋值 (支持库信息数组位置, 相减 (寻找字节集 (源码字节集, 相加 (到字节集 (“krnln”), 到字节集 (字符 (13)), 到字节集 (“d09f2340818511d396f6aaf844c7e325”)), 1), 6))
 ' 支持库信息位置 ＝ 取值_整数 (支持库信息数组位置, 2, 支持库数目, 源码字节集)
 ' 上句为E程序错误，所以取值错误
赋值 (支持库信息位置, 取_整数 (支持库信息数组位置, 2, 支持库数目, 源码字节集))
 ' 支持库数目 ＝ 取字节集数据 (临_支持库数目, #整数型, )
调试输出 (“支持库数目”, 支持库数目)
调试输出 (“支持库信息位置”, 支持库信息位置)
赋值 (临_支持库当前位置, 支持库信息位置)
.计次循环首 (支持库数目, 临_i)
    调试输出 (“临_支持库当前位置”, 临_支持库当前位置)
    调试输出 (“临_支持库当前信息”, 临_支持库当前信息)
    赋值 (临_支持库当前位置, 取值_字节集 (临_支持库当前位置, 4, 临_支持库当前信息, 源码字节集))
     ' 清空以前内容
    赋值 (临_支持库信息.库文件名, “”)
    赋值 (临_支持库信息.数字签名, “”)
    赋值 (临_支持库信息.主版本号, “”)
    赋值 (临_支持库信息.次版本号, “”)
    赋值 (临_支持库信息.支持库名, “”)
    
    重定义数组 (临_支持库信息数组, 假, 5)
     ' 调试输出 (“临_支持库当前信息”, 临_支持库当前信息)
     ' 处理开始
    赋值 (临_支持库信息数组, 分割字节集 (临_支持库当前信息, { 13 }, ))
     ' 调试输出 (“临_支持库信息数组”, 临_支持库信息数组)
    .如果真 (小于 (取数组成员数 (临_支持库信息数组), 5))
        赋值 (出错, 真)
        返回 (临_支持库当前位置)
    .如果真结束
    赋值 (临_支持库信息.库文件名, 到文本 (临_支持库信息数组 [1]))
    赋值 (临_支持库信息.数字签名, 到文本 (临_支持库信息数组 [2]))
    赋值 (临_支持库信息.主版本号, 到文本 (临_支持库信息数组 [3]))
    赋值 (临_支持库信息.次版本号, 到文本 (临_支持库信息数组 [4]))
    赋值 (临_支持库信息.支持库名, 到文本 (临_支持库信息数组 [5]))
    
     ' 加入数据成员
    加入成员 (支持库信息数组, 临_支持库信息)
.计次循环尾 ()

 ' 检验数组数目是否一致，防止出错……不过概率比较低
.如果真 (不等于 (支持库数目, 取数组成员数 (支持库信息数组)))
    赋值 (出错, 真)
.如果真结束
赋值 (出错, 假)

返回 (临_支持库当前位置)



 ' 不属于任何一个程序集、类模块的函数：
