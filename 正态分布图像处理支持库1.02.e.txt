 ' 文件类型：Windows模块源码

 ' 程序名称：正态分布图像处理支持库
 ' 程序描述：图像处理支持库
 ' 程序作者：正态分布
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：             易语言资源网注意事项
--============   www.wodesoft.com  =============--
* 易语言资源网为易语言官方站、易语言官方论坛提供辅助资源站；本易语言资源网( www.wodesoft.com)所有软件和资料均为软件作者提供和网友推荐发布而来，其版权归该软件和程序源码的合法拥有者所有，本站易语言资源网整理收集仅供易语言用户学习和易语言技术研究探讨使用，不得用于任何商业用途。如果由于以上原因造成的版权纠纷本站概不负责！
* 本站资源未经许可,任何网站不得非法盗链及抄袭本站资源；如引用，请注明来自易语言资源网，谢谢合作！
--============   www.wodesoft.com  =============--
 ' 版本号：1.0
 ' 创建号：0.0



.常量 x00FF0000, "16711680", , 
.常量 x0000FFFF, "65535", , 
.常量 x0FFF0000, "268369920", , 
.常量 x00FFFF00, "16776960", , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 5 0 系统核心支持库
 ' eCalc 306AA9E31B5940399723021A0D782077 2 1 数值计算支持库





.程序集 程序集1, , , 

.子程序 _启动子程序, 整数型, , 请在本子程序中放置易模块初始化代码
_临时子程序 () ' 在初始化代码执行完毕后调用测试代码
返回 (0) ' 可以根据您的需要返回任意数值

.子程序 _临时子程序, 空白型, , 
.局部变量 a, 整数型, , , 
.局部变量 大图, 图像, , , 

赋值 (a, 0)
大图.刷新文件头 ()
大图.载入bmp24图片 (“D:\快盘\E\图像\正态分布图像处理支持库1.02\搜狗截图_小鸟玩杂技.bmp”)
 ' 大图.顺时针旋转90度 ()
大图.图片傅立叶变换 ()
输出调试文本 (“asdfasdfas”)


 ' 本名称子程序用作测试程序用，仅在开发及调试环境中有效，编译发布程序前将被系统自动清空，请将所有用作测试的临时代码放在本子程序中。 ***注意不要修改本子程序的名称、参数及返回值类型。


.类模块 图像, , , 

.程序集变量 高度, 整数型, , , 
.程序集变量 宽度, 整数型, , , 
.程序集变量 像素数据, 整数型, , "0", 
.程序集变量 文件头, 字节集, , , 
.程序集变量 当前为频域, 逻辑型, , , 
.程序集变量 频域数据实部_红, 双精度小数型, , "0", 
.程序集变量 频域数据实部_绿, 双精度小数型, , "0", 
.程序集变量 频域数据实部_蓝, 双精度小数型, , "0", 
.程序集变量 频域数据虚部_红, 双精度小数型, , "0", 
.程序集变量 频域数据虚部_绿, 双精度小数型, , "0", 
.程序集变量 频域数据虚部_蓝, 双精度小数型, , "0", 
.程序集变量 匿名程序集变量_465, 空白型, , , 
.子程序 当前为频域, 逻辑型, 公开, 
 ' --========  易语言资源网  (www.wodesoft.com)  ======--
 ' 努力创建完善、持续更新的易语言学习例程源码资源站
 ' --================   www.wodesoft.com  ===========--
 ' --==================   易语言资源网注意事项  ================--
 ' * 易语言资源网为易语言官方站、易语言官方论坛提供辅助资源站；
 ' 本易语言资源网( www.wodesoft.com)所有软件和资料均为软件作者提
 ' 供和网友推荐发布而来，其版权归该软件和程序源码的合法拥有者所
 ' 有，本站易语言资源网整理收集仅供易语言用户学习和易语言技术研
 ' 究探讨使用，不得用于任何商业用途。如果由于以上原因造成的版权
 ' 纠纷本站概不负责！
 ' * 本站资源未经许可，任何网站不得非法盗链及抄袭本站资源；如引用
 ' 页面，请注明来自易语言资源网，谢谢合作！
 ' --=====================   www.wodesoft.com  ================--

返回 (当前为频域)

.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用
 ' 本源码来自易语言资源网(www.wodesoft.com)

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用
赋值 (高度, 0)
赋值 (宽度, 0)
赋值 (像素数据, {  })
赋值 (当前为频域, 假)


.子程序 取宽度, 整数型, 公开, 
返回 (宽度)



.子程序 由文件号载入bmp24图片, 空白型, 公开, 
.参数 文件号, 整数型, , 

.局部变量 像素数, 整数型, , , 
.局部变量 i, 整数型, , , 
.局部变量 j, 整数型, , , 
.局部变量 每行字节数, 整数型, , , 
.局部变量 亮度分量, 字节型, , , 
.局部变量 当前像素颜色, 整数型, , , 


移动读写位置 (文件号, , 0)
赋值 (文件头, 读入字节集 (文件号, 54))
移动读写位置 (文件号, , 18)
读入数据 (文件号, 宽度)
移动读写位置 (文件号, , 22)
读入数据 (文件号, 高度)
 ' 本源码来自易语言资源网(www.wodesoft.com)
赋值 (像素数, 相乘 (宽度, 高度))
.如果真 (或者 (小于或等于 (像素数, 0), 大于 (像素数, 100000000)))
    返回 ()
.如果真结束


重定义数组 (像素数据, 假, 相乘 (高度, 宽度))
赋值 (每行字节数, 位与 (相加 (相乘 (宽度, 3), 3), -4))

.变量循环首 (1, 高度, 1, i)
    移动读写位置 (文件号, , 相加 (54, 相乘 (每行字节数, 相减 (i, 1))))
    
    .变量循环首 (0, 相减 (宽度, 1), 1, j)
        读入数据 (文件号, 亮度分量)
        赋值 (当前像素颜色, 亮度分量)
        
        读入数据 (文件号, 亮度分量)
        赋值 (当前像素颜色, 位或 (当前像素颜色, 相乘 (亮度分量, 256)))
        
        读入数据 (文件号, 亮度分量)
        赋值 (当前像素颜色, 位或 (当前像素颜色, 相乘 (亮度分量, 256, 256)))
        
        赋值 (像素数据 [相加 (相乘 (宽度, 相减 (高度, i)), j, 1)], 当前像素颜色)
        
    .变量循环尾 ()
.变量循环尾 ()
 ' 本源码来自易语言资源网(www.wodesoft.com)
刷新文件头 ()


.子程序 取像素, 整数型, 公开, 
.参数 纵坐标, 整数型, , 
.参数 横坐标, 整数型, , 

返回 (像素数据 [相加 (相乘 (宽度, 相减 (纵坐标, 1)), 横坐标)])




.子程序 画像素, 空白型, 公开, 
.参数 纵坐标, 整数型, , 
.参数 横坐标, 整数型, , 
.参数 颜色, 整数型, , 

.如果真 (并且 (大于 (纵坐标, 0), 大于 (横坐标, 0), 小于或等于 (纵坐标, 高度), 小于或等于 (横坐标, 宽度)))
    赋值 (像素数据 [相加 (相乘 (宽度, 相减 (纵坐标, 1)), 横坐标)], 颜色)
.如果真结束





.子程序 刷新文件头, 空白型, 公开, 
.局部变量 每行字节数, 整数型, , , 
.局部变量 文件总长度, 整数型, , , 


赋值 (每行字节数, 位与 (相加 (相乘 (宽度, 3), 3), -4))
赋值 (文件总长度, 相加 (54, 相乘 (每行字节数, 高度)))

赋值 (文件头, {  })

赋值 (文件头, 相加 (文件头, 到字节集 (“BM”)))
 ' WORDbf Type; // 位图文件的类型，必须为BMP(0-1字节)
 ' 输出调试文本 (“文件头2长度：” ＋ 到文本 (取字节集长度 (文件头)))

赋值 (文件头, 相加 (文件头, 到字节集 (文件总长度)))
 ' DWORD bfSize; // 位图文件的大小，以字节为单位(2-5字节)
 ' 输出调试文本 (“文件头6长度：” ＋ 到文本 (取字节集长度 (文件头)))
 ' 本源码来自易语言资源网(www.wodesoft.com)
赋值 (文件头, 相加 (文件头, 取空白字节集 (4)))
 ' WORD bfReserved1; // 位图文件保留字，必须为0(6-7字节)
 ' WORD bfReserved2; // 位图文件保留字，必须为0(8-9字节)
 ' 输出调试文本 (“文件头10长度：” ＋ 到文本 (取字节集长度 (文件头)))

赋值 (文件头, 相加 (文件头, 到字节集 (54)))
 ' DWORD bfOffBits; // 位图数据的起始位置，以相对于位图(10-13字节)
 ' // 文件头的偏移量表示，以字节为单位
 ' 输出调试文本 (“文件头14长度：” ＋ 到文本 (取字节集长度 (文件头)))



赋值 (文件头, 相加 (文件头, 到字节集 (40))) ' 位图图信息头长度
 ' DWORD biSize; // 本结构所占用字节数(14-17字节)
 ' 输出调试文本 (“文件头18长度：” ＋ 到文本 (取字节集长度 (文件头)))

赋值 (文件头, 相加 (文件头, 到字节集 (宽度)))
 ' LONG biWidth; // 位图的宽度，以像素为单位(18-21字节)
 ' 输出调试文本 (“文件头22长度：” ＋ 到文本 (取字节集长度 (文件头)))

赋值 (文件头, 相加 (文件头, 到字节集 (高度)))
 ' LONG biHeight; // 位图的高度，以像素为单位(22-25字节)
 ' 输出调试文本 (“文件头26长度：” ＋ 到文本 (取字节集长度 (文件头)))

赋值 (文件头, 相加 (文件头, 到字节集 (到短整数 (1))))
 ' WORD biPlanes; // 目标设备的级别，必须为1(26-27字节)
 ' 输出调试文本 (“文件头28长度：” ＋ 到文本 (取字节集长度 (文件头)))

赋值 (文件头, 相加 (文件头, 到字节集 (到短整数 (24))))
 ' WORD biBitCount;// 每个像素所需的位数，必须是1(双色), 4(16色)，8(256色)或24(真彩色)之一 (28-29字节)
 ' 输出调试文本 (“文件头30长度：” ＋ 到文本 (取字节集长度 (文件头)))

赋值 (文件头, 相加 (文件头, 到字节集 (0)))
 ' DWORD biCompression; // 位图压缩类型，必须是 0(不压缩), 1(BI_RLE8压缩类型)或2(BI_RLE4压缩类型)之一 (30-33字节)
 ' 输出调试文本 (“文件头34长度：” ＋ 到文本 (取字节集长度 (文件头)))

赋值 (文件头, 相加 (文件头, 到字节集 (到整数 (相乘 (每行字节数, 高度)))))
 ' DWORD biSizeImage; // 位图的大小，以字节为单位(34-37字节)
 ' 输出调试文本 (“文件头38长度：” ＋ 到文本 (取字节集长度 (文件头)))

赋值 (文件头, 相加 (文件头, 到字节集 (0)))
 ' LONG biXPelsPerMeter; // 位图水平分辨率，每米像素数(38-41字节)
 ' 输出调试文本 (“文件头42长度：” ＋ 到文本 (取字节集长度 (文件头)))

赋值 (文件头, 相加 (文件头, 到字节集 (0)))
 ' LONG biYPelsPerMeter; // 位图垂直分辨率，每米像素数(42-45字节)
 ' 输出调试文本 (“文件46头长度：” ＋ 到文本 (取字节集长度 (文件头)))
 ' 本源码来自易语言资源网(www.wodesoft.com)
赋值 (文件头, 相加 (文件头, 到字节集 (0)))
 ' DWORD biClrUsed;// 位图实际使用的颜色表中的颜色数(46-49字节)
 ' 输出调试文本 (“文件头50长度：” ＋ 到文本 (取字节集长度 (文件头)))

赋值 (文件头, 相加 (文件头, 到字节集 (0)))
 ' DWORD biClrImportant;// 位图显示过程中重要的颜色数(50-53字节)
 ' 输出调试文本 (“文件头54长度：” ＋ 到文本 (取字节集长度 (文件头)))




 ' 输出调试文本 (“asdfasdfasd”)


.子程序 改变尺寸, 空白型, , 
.参数 新高度, 整数型, , 
.参数 新宽度, 整数型, , 
.参数 保留原有数据, 逻辑型, 可空, 

.局部变量 临时数据, 整数型, , "0", 
.局部变量 i, 整数型, , , 
.局部变量 j, 整数型, , , 
.局部变量 较小宽度, 整数型, , , 
.局部变量 较小高度, 整数型, , , 

.如果 (并且 (保留原有数据, 不等于 (相乘 (新高度, 新宽度), 0)))
    重定义数组 (临时数据, 假, 新高度, 新宽度)
     ' .如果真 (大于 (宽度, 新宽度))
         ' 宽度 ＝ 新宽度
    .如果真结束
    
     ' .如果真 (大于 (高度, 新高度))
         ' 高度 ＝ 新高度
    .如果真结束
    赋值 (较小宽度, 宽度)
    .如果真 (大于 (宽度, 新宽度))
        赋值 (较小宽度, 新宽度)
    .如果真结束
    赋值 (较小高度, 高度)
    .如果真 (大于 (高度, 新高度))
        赋值 (较小高度, 新高度)
    .如果真结束
    
    .变量循环首 (1, 较小高度, 1, i)
        .变量循环首 (1, 较小宽度, 1, j)
            赋值 (临时数据 [i] [j], 像素数据 [相加 (相乘 (宽度, 相减 (i, 1)), j)])
        .变量循环尾 ()
    .变量循环尾 ()
    重定义数组 (像素数据, 假, 相乘 (新高度, 新宽度))
    .变量循环首 (1, 较小高度, 1, i)
        .变量循环首 (1, 较小宽度, 1, j)
            赋值 (像素数据 [相加 (相乘 (新宽度, 相减 (i, 1)), j)], 临时数据 [i] [j])
        .变量循环尾 ()
    .变量循环尾 ()
    
    
.否则
    重定义数组 (像素数据, 假, 相乘 (新高度, 新宽度))
.如果结束
赋值 (高度, 新高度)
赋值 (宽度, 新宽度)
刷新文件头 ()




.子程序 取图片数据, 字节集, 公开, 
.局部变量 数据字节集, 字节集, , , 
.局部变量 每行字节数, 整数型, , , 
.局部变量 j, 整数型, , , 
.局部变量 i, 整数型, , , 
.局部变量 当前像素, 整数型, , , 

赋值 (每行字节数, 位与 (相加 (相乘 (宽度, 3), 3), -4))

赋值 (数据字节集, 取空白字节集 (相加 (54, 相乘 (每行字节数, 高度))))
.计次循环首 (54, i)
    赋值 (数据字节集 [i], 文件头 [i])
.计次循环尾 ()

.变量循环首 (0, 相减 (高度, 1), 1, i)
    .变量循环首 (0, 相减 (宽度, 1), 1, j)
        赋值 (当前像素, 像素数据 [相加 (相乘 (宽度, i), j, 1)])
         ' 本源码来自易语言资源网(www.wodesoft.com)
        赋值 (数据字节集 [相加 (54, 相乘 (相减 (高度, i, 1), 每行字节数), 相乘 (j, 3), 1)], 求余数 (当前像素, 256))
        赋值 (数据字节集 [相加 (54, 相乘 (相减 (高度, i, 1), 每行字节数), 相乘 (j, 3), 2)], 求余数 (右移 (当前像素, 8), 256))
        赋值 (数据字节集 [相加 (54, 相乘 (相减 (高度, i, 1), 每行字节数), 相乘 (j, 3), 3)], 右移 (当前像素, 16))
    .变量循环尾 ()
.变量循环尾 ()

返回 (数据字节集)


.子程序 取高度, 整数型, 公开, 
返回 (高度)



.子程序 载入bmp24图片, 空白型, 公开, 
.参数 文件名, 文本型, , 

.局部变量 文件号, 整数型, , , 

赋值 (文件号, 打开文件 (文件名, #读入, ))
由文件号载入bmp24图片 (文件号)
关闭文件 (文件号)
赋值 (当前为频域, 假)

.子程序 载入字节集bmp24图片, 空白型, , 
.参数 字节集数据, 字节集, , 

.局部变量 文件, 整数型, , , 

赋值 (文件, 打开内存文件 ())
写出字节集 (文件, 字节集数据)
由文件号载入bmp24图片 (文件)
关闭文件 (文件)


.子程序 反色, 空白型, 公开, 
.局部变量 j, 整数型, , , 
.局部变量 i, 整数型, , , 

.变量循环首 (1, 高度, 1, i)
    .变量循环首 (1, 宽度, 1, j)
        画像素 (i, j, 位异或 (取像素 (i, j), #白色))
        ' 本源码来自易语言资源网(www.wodesoft.com)
    .变量循环尾 ()
.变量循环尾 ()


.子程序 左右翻转, 空白型, 公开, 
.局部变量 半宽度, 整数型, , , 
.局部变量 i, 整数型, , , 
.局部变量 j, 整数型, , , 
.局部变量 k, 整数型, , , 

赋值 (半宽度, 相除 (宽度, 2))
.变量循环首 (1, 高度, 1, i)
    .变量循环首 (1, 半宽度, 1, j)
        赋值 (k, 取像素 (i, j))
        画像素 (i, j, 取像素 (i, 相加 (相减 (宽度, j), 1)))
        画像素 (i, 相加 (相减 (宽度, j), 1), k)
    .变量循环尾 ()
.变量循环尾 ()



.子程序 上下翻转, 空白型, 公开, 
.局部变量 半高度, 整数型, , , 
.局部变量 k, 整数型, , , 
.局部变量 i, 整数型, , , 
.局部变量 j, 整数型, , , 

赋值 (半高度, 相除 (高度, 2))
 ' k
.变量循环首 (1, 半高度, 1, i)
    .变量循环首 (1, 宽度, 1, j)
        赋值 (k, 取像素 (i, j))
        画像素 (i, j, 取像素 (相加 (相减 (高度, i), 1), j))
        画像素 (相加 (相减 (高度, i), 1), j, k)
    .变量循环尾 ()
.变量循环尾 ()
' 本源码来自易语言资源网(www.wodesoft.com)

.子程序 转为灰度图像, 空白型, , 
.局部变量 颜色, 整数型, , , 
.局部变量 i, 整数型, , , 
.局部变量 j, 整数型, , , 

.变量循环首 (1, 高度, 1, i)
    .变量循环首 (1, 宽度, 1, j)
        赋值 (颜色, 取像素 (i, j))
        赋值 (颜色, 相加 (位与 (颜色, #x0FFF0000), 左移 (位与 (颜色, #x0000FFFF), 8)))
        赋值 (颜色, 相加 (位与 (颜色, #x0FFF0000), 左移 (位与 (颜色, #x0000FFFF), 8)))
        赋值 (颜色, 相除 (右移 (颜色, 16), 3))
        赋值 (颜色, 位或 (左移 (颜色, 16), 左移 (颜色, 8), 颜色))
        
        画像素 (i, j, 颜色)
        
    .变量循环尾 ()
.变量循环尾 ()


.子程序 顺时针旋转90度, 空白型, 公开, 
延45度对角线翻转 ()
左右翻转 ()

.子程序 延45度对角线翻转, 空白型, 公开, 
.局部变量 i, 整数型, , , 
.局部变量 j, 整数型, , , 
.局部变量 k, 整数型, , , 
.局部变量 旧宽度, 整数型, , , 
.局部变量 旧高度, 整数型, , , 

赋值 (旧宽度, 宽度)
赋值 (旧高度, 高度)
.如果真 (大于 (宽度, 高度))
    改变尺寸 (宽度, 宽度, 真)
.如果真结束

.如果真 (小于 (宽度, 高度))
    改变尺寸 (高度, 高度, 真)
.如果真结束
 ' 本源码来自易语言资源网(www.wodesoft.com)

.变量循环首 (1, 高度, 1, i)
    .变量循环首 (1, i, 1, j)
        赋值 (k, 取像素 (i, j))
        画像素 (i, j, 取像素 (j, i))
        画像素 (j, i, k)
    .变量循环尾 ()
.变量循环尾 ()
改变尺寸 (旧宽度, 旧高度, 真)

.子程序 逆时针旋转90度, 空白型, 公开, 
左右翻转 ()
延45度对角线翻转 ()


.子程序 二值化, 空白型, 公开, 
.参数 阈值, 整数型, , 

.局部变量 j, 整数型, , , 
.局部变量 i, 整数型, , , 
.局部变量 当前亮度, 整数型, , , 

转为灰度图像 ()
.变量循环首 (1, 高度, 1, i)
    .变量循环首 (1, 宽度, 1, j)
        赋值 (当前亮度, 位与 (取像素 (i, j), 255))
        .如果 (大于或等于 (当前亮度, 阈值))
            画像素 (i, j, #白色)
        .否则
            画像素 (i, j, #黑色)
        .如果结束
        ' 本源码来自易语言资源网(www.wodesoft.com)
    .变量循环尾 ()
.变量循环尾 ()



.子程序 二值化_横向扩散, 空白型, 公开, 
.局部变量 当前亮度, 整数型, , , 
.局部变量 i, 整数型, , , 
.局部变量 j, 整数型, , , 

转为灰度图像 ()
赋值 (当前亮度, 128)
.变量循环首 (1, 高度, 1, i)
    .变量循环首 (1, 宽度, 1, j)
        赋值 (当前亮度, 相加 (当前亮度, 位与 (取像素 (i, j), 255)))
        .如果 (大于或等于 (当前亮度, 255))
            画像素 (i, j, #白色)
            赋值 (当前亮度, 相减 (当前亮度, 255))
        .否则
            画像素 (i, j, #黑色)
        .如果结束
        ' 本源码来自易语言资源网(www.wodesoft.com)
    .变量循环尾 ()
.变量循环尾 ()


.子程序 二值化_纵向扩散, 空白型, 公开, 
.局部变量 当前亮度, 整数型, , , 
.局部变量 i, 整数型, , , 
.局部变量 j, 整数型, , , 

转为灰度图像 ()
赋值 (当前亮度, 128)
.变量循环首 (1, 宽度, 1, j)
    .变量循环首 (1, 高度, 1, i)
        赋值 (当前亮度, 相加 (当前亮度, 位与 (取像素 (i, j), 255)))
        .如果 (大于或等于 (当前亮度, 255))
            画像素 (i, j, #白色)
            赋值 (当前亮度, 相减 (当前亮度, 255))
        .否则
            画像素 (i, j, #黑色)
        .如果结束
        ' 本源码来自易语言资源网(www.wodesoft.com)
    .变量循环尾 ()
    
.变量循环尾 ()

.子程序 图片傅立叶变换, 空白型, 公开, 
.如果 (当前为频域)
    傅立叶反变换 ()
    
.否则
    傅立叶正变换 ()
    
.如果结束
赋值 (当前为频域, 取反 (当前为频域))


.子程序 傅立叶反变换, 逻辑型, , 
.局部变量 傅立叶, 未知类型0x20003, , , 

 ' 把时域数据拷贝到频域 ()

 ' 总像素数 ＝ 高度 × 宽度

 ' 每一行进行傅立叶变换
傅立叶.未知支持库函数_27 (频域数据实部_红, 频域数据虚部_红, 真)
傅立叶.未知支持库函数_27 (频域数据实部_绿, 频域数据虚部_绿, 真)
傅立叶.未知支持库函数_27 (频域数据实部_蓝, 频域数据虚部_蓝, 真)
 ' 本源码来自易语言资源网(www.wodesoft.com)
频域数据沿对角线翻转 ()

傅立叶.未知支持库函数_27 (频域数据实部_红, 频域数据虚部_红, 真)
傅立叶.未知支持库函数_27 (频域数据实部_绿, 频域数据虚部_绿, 真)
傅立叶.未知支持库函数_27 (频域数据实部_蓝, 频域数据虚部_蓝, 真)




把频域数据拷贝到时域 (假)

返回 (真)
 ' 输出调试文本 (“尚未实现！”)

.子程序 傅立叶正变换, 逻辑型, , 
.局部变量 i, 整数型, , , 
.局部变量 宽度是2的整数次幂, 逻辑型, , , 
.局部变量 傅立叶, 未知类型0x20003, , , 
.局部变量 总像素数, 整数型, , , 
.局部变量 颜色, 整数型, , , 

赋值 (宽度是2的整数次幂, 等于 (位与 (宽度, 相减 (宽度, 1)), 0))
.如果真 (等于 (宽度是2的整数次幂, 假))
    返回 (假)
.如果真结束

把时域数据拷贝到频域 ()

 ' 总像素数 ＝ 高度 × 宽度

 ' 每一行进行傅立叶变换
傅立叶.未知支持库函数_27 (频域数据实部_红, 频域数据虚部_红, 假)
傅立叶.未知支持库函数_27 (频域数据实部_绿, 频域数据虚部_绿, 假)
傅立叶.未知支持库函数_27 (频域数据实部_蓝, 频域数据虚部_蓝, 假)

频域数据沿对角线翻转 ()

傅立叶.未知支持库函数_27 (频域数据实部_红, 频域数据虚部_红, 假)
傅立叶.未知支持库函数_27 (频域数据实部_绿, 频域数据虚部_绿, 假)
傅立叶.未知支持库函数_27 (频域数据实部_蓝, 频域数据虚部_蓝, 假)




把频域数据拷贝到时域 (真)
延45度对角线翻转 ()
返回 (真)


.子程序 把频域数据拷贝到时域, 空白型, , 
.参数 平移, 逻辑型, , 

.局部变量 i, 整数型, , , 
.局部变量 x, 双精度小数型, , , 
.局部变量 y, 双精度小数型, , , 
.局部变量 亮度, 整数型, , , 
.局部变量 c, 整数型, , , 
.局部变量 A, 整数型, , , 
.局部变量 j, 整数型, , , 
.局部变量 比例, 双精度小数型, , , 


 ' 总像素数 ＝ 高度 × 宽度
.如果 (当前为频域)
    赋值 (比例, 1) ' ÷ 求平方根 (高度 × 宽度)
.否则
    赋值 (比例, 相除 (1, 求平方根 (相乘 (高度, 宽度))))
.如果结束


.变量循环首 (1, 高度, 1, i) ' 把时域数据拷贝到频域
    .变量循环首 (1, 宽度, 1, j)
         ' 画像素(i,j, 0)
        赋值 (A, 0)
        赋值 (x, 频域数据实部_蓝 [i] [j]) ' 红
        赋值 (y, 频域数据虚部_蓝 [i] [j])
        赋值 (亮度, 相乘 (到整数 (求平方根 (相加 (相乘 (x, x), 相乘 (y, y)))), 比例))
        .如果真 (大于 (亮度, 255))
            赋值 (亮度, 255)
        .如果真结束
        赋值 (A, 左移 (亮度, 16))
        
        赋值 (x, 频域数据实部_绿 [i] [j]) ' 绿
        赋值 (y, 频域数据虚部_绿 [i] [j])
        赋值 (亮度, 相乘 (到整数 (求平方根 (相加 (相乘 (x, x), 相乘 (y, y)))), 比例))
        .如果真 (大于 (亮度, 255))
            赋值 (亮度, 255)
        .如果真结束
        赋值 (A, 相加 (A, 左移 (亮度, 8)))
        
        赋值 (x, 频域数据实部_红 [i] [j])
        赋值 (y, 频域数据虚部_红 [i] [j])
        赋值 (亮度, 相乘 (到整数 (求平方根 (相加 (相乘 (x, x), 相乘 (y, y)))), 比例))
        .如果真 (大于 (亮度, 255))
            赋值 (亮度, 255)
        .如果真结束
        赋值 (A, 相加 (A, 亮度))
        画像素 (i, j, A)
        
    .变量循环尾 ()
.变量循环尾 ()
.如果真 (平移)
    平移时域数据 ()
.如果真结束


.子程序 把时域数据拷贝到频域, 空白型, , 
.局部变量 i, 整数型, , , 
.局部变量 a, 整数型, , , 
.局部变量 j, 整数型, , , 
.局部变量 颜色, 整数型, , , 
.局部变量 总像素数, 整数型, , , 


重定义数组 (频域数据实部_红, 假, 高度, 宽度)
重定义数组 (频域数据虚部_红, 假, 高度, 宽度)
重定义数组 (频域数据实部_绿, 假, 高度, 宽度)
重定义数组 (频域数据虚部_绿, 假, 高度, 宽度)
重定义数组 (频域数据实部_蓝, 假, 高度, 宽度)
重定义数组 (频域数据虚部_蓝, 假, 高度, 宽度)
赋值 (总像素数, 相乘 (高度, 宽度))

.变量循环首 (1, 高度, 1, i) ' 把时域数据拷贝到频域
    .变量循环首 (1, 宽度, 1, j)
        赋值 (频域数据实部_红 [i] [j], 位与 (右移 (像素数据 [相加 (相乘 (相减 (i, 1), 宽度), j)], 0), 255))
        赋值 (频域数据实部_绿 [i] [j], 位与 (右移 (像素数据 [相加 (相乘 (相减 (i, 1), 宽度), j)], 8), 255))
        赋值 (频域数据实部_蓝 [i] [j], 位与 (右移 (像素数据 [相加 (相乘 (相减 (i, 1), 宽度), j)], 16), 255))
    .变量循环尾 ()
.变量循环尾 ()


.子程序 平移时域数据, 空白型, , 
.局部变量 i, 整数型, , , 
.局部变量 j, 整数型, , , 
.局部变量 A, 整数型, , , 
.局部变量 半高度, 整数型, , , 
.局部变量 半宽度, 整数型, , , 
.局部变量 ii, 整数型, , , 
.局部变量 jj, 整数型, , , 

赋值 (半高度, 相除 (高度, 2))
赋值 (半宽度, 相除 (宽度, 2))

.变量循环首 (1, 半高度, 1, i)
    .变量循环首 (1, 宽度, 1, j)
        赋值 (ii, 相加 (求余数 (相加 (相减 (i, 1), 半高度), 高度), 1))
        赋值 (jj, 相加 (求余数 (相加 (相减 (j, 1), 半宽度), 宽度), 1))
        
        赋值 (A, 取像素 (i, j))
        画像素 (i, j, 取像素 (ii, jj))
        画像素 (ii, jj, A)
    .变量循环尾 ()
.变量循环尾 ()


.子程序 频域数据沿对角线翻转, 空白型, , 
.局部变量 i, 整数型, , , 
.局部变量 j, 整数型, , , 
.局部变量 T, 整数型, , , 
.局部变量 颜色, 整数型, , , 
.局部变量 实部, 整数型, , , 

.变量循环首 (1, 高度, 1, i)
    .变量循环首 (1, i, 1, j)
        .变量循环首 (0, 2, 1, 颜色)
            .变量循环首 (0, 1, 1, 实部)
                赋值 (T, 取频域像素 (i, j, 颜色, 等于 (实部, 1)))
                画频域像素 (i, j, 颜色, 等于 (实部, 1), 取频域像素 (j, i, 颜色, 等于 (实部, 1)))
                画频域像素 (j, i, 颜色, 等于 (实部, 1), T)
                
            .变量循环尾 ()
        .变量循环尾 ()
    .变量循环尾 ()
.变量循环尾 ()


.子程序 取频域像素, 双精度小数型, , 
.参数 纵坐标, 整数型, , 
.参数 横坐标, 整数型, , 
.参数 颜色, 整数型, , 0红 1绿 2蓝
.参数 实部, 逻辑型, , 真：实部 假：虚部

.如果真 (实部)
    .如果 (等于 (颜色, 0))
        返回 (频域数据实部_红 [纵坐标] [横坐标])
    .否则
        .如果 (等于 (颜色, 1))
            返回 (频域数据实部_绿 [纵坐标] [横坐标])
        .否则
            返回 (频域数据实部_蓝 [纵坐标] [横坐标])
        .如果结束
        
    .如果结束
    
.如果真结束

.如果 (等于 (颜色, 0))
    返回 (频域数据虚部_红 [纵坐标] [横坐标])
.否则
    .如果 (等于 (颜色, 1))
        返回 (频域数据虚部_绿 [纵坐标] [横坐标])
    .否则
        返回 (频域数据虚部_蓝 [纵坐标] [横坐标])
    .如果结束
    
.如果结束



.子程序 画频域像素, 空白型, , 
.参数 纵坐标, 整数型, , 
.参数 横坐标, 整数型, , 
.参数 颜色, 整数型, , 0红 1绿 2蓝
.参数 实部, 逻辑型, , 真：实部 假：虚部
.参数 亮度, 双精度小数型, , 

.如果真 (实部)
    .如果 (等于 (颜色, 0))
        赋值 (频域数据实部_红 [纵坐标] [横坐标], 亮度)
    .否则
        .如果 (等于 (颜色, 1))
            赋值 (频域数据实部_绿 [纵坐标] [横坐标], 亮度)
        .否则
            赋值 (频域数据实部_蓝 [纵坐标] [横坐标], 亮度)
        .如果结束
        
    .如果结束
    返回 ()
.如果真结束

.如果 (等于 (颜色, 0))
    赋值 (频域数据虚部_红 [纵坐标] [横坐标], 亮度)
.否则
    .如果 (等于 (颜色, 1))
        赋值 (频域数据虚部_绿 [纵坐标] [横坐标], 亮度)
    .否则
        赋值 (频域数据虚部_蓝 [纵坐标] [横坐标], 亮度)
    .如果结束
    
.如果结束




 ' 不属于任何一个程序集、类模块的函数：
