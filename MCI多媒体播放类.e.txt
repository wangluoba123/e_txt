 ' 文件类型：Windows模块源码

 ' 程序名称：MCI多媒体播放类(黑月测试)
 ' 程序描述：用于播放多媒体文件。支持的文件格式为目标操作系统中的win.ini的MCI Extensions或者MCI Extensions.BAK小节下所罗列的部分。
 ' 程序作者：无木成林
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：无木成林整理
 ' 版本号：1.0
 ' 创建号：0.0



.常量 声道_左声道, "1", 公开, 
.常量 声道_右声道, "2", 公开, 
.常量 声道_立体声, "3", 公开, 
.常量 声道_均衡, "4", 公开, 
.常量 状态_播放, "0", 公开, 
.常量 状态_暂停, "-1", 公开, 
.常量 状态_停止, "-2", 公开, 
.常量 状态_未知, "-3", 公开, 
.常量 调试输出文本, "“
┏━━━━━━━━━━━━━┓
┃初始版本 1.0      无木成林┃
┃                          ┃
┃MCI多媒体应用模块 支持黑月┃
┃                          ┃
┃   如有BUG，欢迎反馈      ┃
┃                          ┃
┃  易语言交流群:49944039   ┃
┃               26990740   ┃
┗━━━━━━━━━━━━━┛”", , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 6 系统核心支持库




数据类型 窗口矩形区域, 公开, 
    .成员 左边, 整数型, , , 
    .成员 顶边, 整数型, , , 
    .成员 宽度, 整数型, , , 
    .成员 高度, 整数型, , , 


.DLL命令 API_执行MCI命令, 整数型, "winmm.dll", "mciExecute", 公开, 执行MCI设备命令　
    .参数 lpstrCommand, 文本型, , MCI命令

.DLL命令 API_获取MCI错误信息, 整数型, "winmm.dll", "mciGetErrorStringA", 公开, 返回MCI出错代码的文本描述　
    .参数 错误代码, 整数型, , 
    .参数 文本缓冲区, 文本型, 传址, 装载错误文本信息的容器，必须先初始化为适当长度的文本。
    .参数 文本长度, 整数型, , 错误文本信息的最大长度，超过此长度将被自动抛弃

.DLL命令 API_发送MCI文本, 整数型, "winmm.dll", "mciSendStringA", 公开, 向MCI设备发出一条命令字符串　
    .参数 lpstrCommand, 文本型, , 要发送的MCI文本
    .参数 lpstrReturnString, 文本型, 传址, 存放返回文本的容器，必须先初始化为适当长度的文本。若不需要接受返回的文本，直接提供一个文本型常量也可。
    .参数 uReturnLength, 整数型, , 返回文本的最大长度，或设为0（不需要返回文本）
    .参数 hwndCallback, 整数型, , 接收“wait”、“notify”消息的窗口句柄。基本上用不着，保持为0即可

.DLL命令 API_取短文件名, 整数型, "kernel32", "GetShortPathNameA", , 获取指定文件的短路径名　装载到lpszShortPath缓冲区的字符数量。如lpszShortPath的长度不足，不能容下文件名，就返回需要的缓冲区长度
    .参数 路径, 文本型, , 指定欲获取短路径名的那个文件的名字。可以是个完整路径，或者由当前目录决定
    .参数 缓冲区, 文本型, , 指定一个缓冲区，用于装载文件的短路径和文件名
    .参数 缓冲区长度, 整数型, , lpszShortPath缓冲区长度;

.DLL命令 API_取客户区矩形, 整数型, "user32", "GetClientRect", 公开, 返回指定窗口客户区矩形的大小　非零表示成功，零表示失败。会设置GetLastError
    .参数 窗口句柄, 整数型, , 欲计算大小的目标窗口
    .参数 矩形区域, 窗口矩形区域, 传址, 指定一个矩形，用客户区域的大小载入（以像素为单位）;  

.DLL命令 API_取父窗口, 整数型, "user32", "GetParent", , 判断指定窗口的父窗口　父窗口的句柄。如窗口没有父，或遇到错误，则返回零。会设置GetLastError
    .参数 窗口句柄, 整数型, , 欲测试的窗口的句柄;

.程序集 其他程序集, , , 

.子程序 _启动子程序, 整数型, , 请在本子程序中放置易模块初始化代码
输出调试文本 (#调试输出文本)
_临时子程序 () ' 在初始化代码执行完毕后调用测试代码
返回 (0) ' 可以根据您的需要返回任意数值

.子程序 _临时子程序, 空白型, , 
 ' 本名称子程序用作测试程序用，仅在开发及调试环境中有效，编译发布程序前将被系统自动清空，请将所有用作测试的临时代码放在本子程序中。 ***注意不要修改本子程序的名称、参数及返回值类型。

.子程序 模块_关闭所有媒体, 整数型, 公开, 关闭所有已经打开的媒体。注意:该操作对所有使用MCI进行播放的媒体都有效！返回0表示命令成功完成，返回非零表示命令失败。
返回 (API_发送MCI文本 (“close all”, “0”, 0, 0))

.子程序 模块_取错误信息文本, 文本型, 公开, 根据各种命令执行后返回的数值查询相应的文本说明。
.参数 参_错误代码, 整数型, , 支持类中对多媒体操作的各种方法的整型返回值

.局部变量 错误文本, 文本型, , , 

赋值 (错误文本, 取空白文本 (255))
API_获取MCI错误信息 (参_错误代码, 错误文本, 255)
.如果真 (等于 (参_错误代码, 10461))
    赋值 (错误文本, “提供的数值型参数超过了允许的范围。”)
.如果真结束
返回 (错误文本)

.子程序 取短路径名, 文本型, , 
.参数 文件路径, 文本型, , 

.局部变量 短路径名, 文本型, , , 

赋值 (短路径名, 取空白文本 (255))
.如果 (文件是否存在 (文件路径))
    API_取短文件名 (文件路径, 短路径名, 255)
.否则
    赋值 (短路径名, 文件路径)
.如果结束
返回 (短路径名)

.子程序 模块_毫秒到时间, 文本型, , 将毫秒值转换为诸如:"3:03:12"之类的文本格式
.参数 参_毫秒值, 整数型, , 

.局部变量 h, 空白型, , , 
.局部变量 m, 空白型, , , 
.局部变量 s, 空白型, , , 

.如果真 (小于 (参_毫秒值, 0))
    返回 (“0:00:00”)
.如果真结束
赋值 (参_毫秒值, 相除 (参_毫秒值, 1000))
赋值 (h, 取整 (相除 (参_毫秒值, 3600)))
赋值 (m, 取整 (相除 (相减 (参_毫秒值, 相乘 (h, 3600)), 60)))
赋值 (s, 相加 (相减 (参_毫秒值, 相乘 (h, 3600)), 相乘 (m, 60)))
返回 (相加 (到文本 (h), “:”, 取文本右边 (相加 (“00”, 到文本 (m)), 2), “:”, 取文本右边 (相加 (“00”, 到文本 (s)), 2)))

.类模块 MCI多媒体播放类, , , 使用MCI指令来播放多媒体文件。不支持RM/RMVB格式。本类中大部分方法若返回非零整数，可用取错误信息文本得到错误描述。

.程序集变量 私_媒体别名, 文本型, , , 
.程序集变量 私_视频窗口, 整数型, , , 
.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用
赋值 (私_媒体别名, 相加 (“Media”, 到文本 (取启动时间 ())))

.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 打开媒体, 整数型, , 初始化媒体设备。进行其他多媒体操作之前必须使用的方法。成功返回0，失败返回非0
.参数 参_媒体文件名, 文本型, , 要打开的多媒体文件的完整路径
.参数 参_视频窗口句柄, 整数型, 可空, 若打开的是视频文件，则在此窗口显示画面。若不提供此参数，则不使用视频窗口。注意:最好提供窗口句柄而非组件句柄，因为组件可能会有画面刷新问题。

.局部变量 短文件名, 文本型, , , 
.局部变量 设置别名, 文本型, , , 
.局部变量 设置视频窗口, 文本型, , , 

赋值 (短文件名, 取空白文本 (255))
API_取短文件名 (参_媒体文件名, 短文件名, 255)
赋值 (设置别名, 相加 (“ Alias ”, 私_媒体别名))
.如果 (是否为空 (参_视频窗口句柄))
    赋值 (设置视频窗口, “”)
.否则
    赋值 (设置视频窗口, 相加 (“ parent ”, 到文本 (参_视频窗口句柄)))
.如果结束
返回 (API_发送MCI文本 (相加 (“open ”, 短文件名, 设置别名, 设置视频窗口, “ style child”), “0”, 0, 0))

.子程序 播放媒体, 整数型, , 播放多媒体文件。成功返回0，失败返回非零整数
返回 (API_发送MCI文本 (相加 (“play ”, 私_媒体别名), “”, 0, 0))


.子程序 关闭媒体, 整数型, , 关闭已经打开的多媒体文件,正在播放的媒体会被立即停止，重新打开前后续操作将无效。成功返回0，失败返回非零整数
.局部变量 执行结果, 整数型, , , 

返回 (API_发送MCI文本 (相加 (“close ”, 私_媒体别名), “0”, 0, 0))


.子程序 取媒体状态, 整数型, , 返回常量中以“状态_”开头的整数。返回大于0的整数则表示命令失败，可用“MCI_取错误信息文本（）”取回错误信息。
.局部变量 多媒体状态, 文本型, , , 
.局部变量 执行结果, 整数型, , , 

赋值 (多媒体状态, 取空白文本 (255))
赋值 (执行结果, API_发送MCI文本 (相加 (“status ”, 私_媒体别名, “ mode”), 多媒体状态, 255, 0))
.如果真 (大于 (执行结果, 0))
    返回 (执行结果)
.如果真结束
赋值 (多媒体状态, 到小写 (多媒体状态))
.判断开始 (等于 (多媒体状态, “playing”))
    返回 (#状态_播放)
.判断 (等于 (多媒体状态, “paused”))
    返回 (#状态_暂停)
.判断 (等于 (多媒体状态, “stopped”))
    返回 (#状态_停止)
.默认
    
.判断结束
返回 (#状态_未知)

.子程序 停止媒体, 整数型, , 停止媒体的播放，将媒体的当前播放进度调整为0。命令成功返回0，失败返回非零整数
API_发送MCI文本 (相加 (“seek ”, 私_媒体别名, “ to 0”), “”, 0, 0)
返回 (API_发送MCI文本 (相加 (“stop ”, 私_媒体别名), “0”, 0, 0))


.子程序 系统静音, 整数型, , 关闭当前系统的声音输出。成功返回0，失败返回非零整数
.参数 参_是否静音, 逻辑型, 可空, 

.局部变量 静音文本, 文本型, , , 

.如果真 (是否为空 (参_是否静音))
    赋值 (参_是否静音, 真)
.如果真结束
.如果 (参_是否静音)
    赋值 (静音文本, “ off”)
.否则
    赋值 (静音文本, “ on”)
.如果结束
返回 (API_发送MCI文本 (相加 (“setaudio ”, 私_媒体别名, 静音文本), “0”, 0, 0))


.子程序 继续媒体, 整数型, , 继续播被暂停的多媒体文件。成功返回0，失败返回非零整数。
返回 (API_发送MCI文本 (相加 (“resume ”, 私_媒体别名), “0”, 0, 0))

.子程序 暂停媒体, 整数型, , 暂停媒体播放，成功返回0。该媒体必须已经被打开或者播放，否则返回非零整数（失败）
返回 (API_发送MCI文本 (相加 (“pause ”, 私_媒体别名), “0”, 0, 0))

.子程序 置视频区域, 整数型, , 设置视频显示的区域。本方法只应用于非系统自动创建的视频窗口。返回0表示成功，返回非零表示失败
.参数 参_视频画面位置, 窗口矩形区域, 可空, 设置视频画面的位置。留空则默认充满整个视频窗口的客户区(视频窗口必须未被最小化)。

.局部变量 局_视频窗口句柄, 整数型, , , 

.如果真 (是否为空 (参_视频画面位置))
    API_取客户区矩形 (API_取父窗口 (取视频窗口句柄 ()), 参_视频画面位置)
     ' .如果真 (等于 (真))
         ' 返回 (API_发送MCI文本 (“put ” ＋ 私_媒体别名 ＋ “ destination”, “”, 0, 0))
    .如果真结束
    
.如果真结束
返回 (API_发送MCI文本 (相加 (“put ”, 私_媒体别名, “ window at ”, 到文本 (参_视频画面位置.左边), “ ”, 到文本 (参_视频画面位置.顶边), “ ”, 到文本 (参_视频画面位置.宽度), “ ”, 到文本 (参_视频画面位置.高度)), “”, 0, 0))

.子程序 置视频窗口, 整数型, , 返回0表示成功，返回非零表示失败
.参数 参_窗口句柄, 整数型, , 强烈建议提供一个“窗口”的句柄，而非组件的句柄

返回 (API_发送MCI文本 (相加 (“put ”, 私_媒体别名, “ windos handle ”, 到文本 (参_窗口句柄)), “0”, 0, 0))

.子程序 取视频窗口句柄, 整数型, , 取得当前媒体文件播放时视频画面的窗口句柄。没有视频或者获取失败则返回0
.局部变量 视频句柄, 文本型, , , 

赋值 (视频句柄, 取空白文本 (255))
API_发送MCI文本 (相加 (“status ”, 私_媒体别名, “ window handle”), 视频句柄, 255, 0)
返回 (到整数 (视频句柄))

.子程序 取媒体长度, 整数型, , 取得媒体文件的长度，失败返回0。单位:毫秒
.局部变量 文件长度, 文本型, , , 

赋值 (文件长度, 取空白文本 (255))
API_发送MCI文本 (相加 (“set ”, 私_媒体别名, “ time format milliseconds”), “”, 0, 0)
API_发送MCI文本 (相加 (“status ”, 私_媒体别名, “ length”), 文件长度, 255, 0)
返回 (到整数 (文件长度))

.子程序 取媒体帧数, 整数型, , 取得媒体文件的总帧数。失败返回0
.局部变量 文件长度, 文本型, , , 

赋值 (文件长度, 取空白文本 (255))
API_发送MCI文本 (相加 (“set ”, 私_媒体别名, “ time format frames”), “”, 0, 0)
API_发送MCI文本 (相加 (“status ”, 私_媒体别名, “ length”), 文件长度, 255, 0)
返回 (到整数 (文件长度))


.子程序 跳到指定帧, 整数型, , 成功返回0，失败返回非零。
.参数 参_帧位置, 整数型, , 播放位置必须小于总帧数，否则可能会造成命令失败。
.参数 参_是否立即播放, 逻辑型, 可空, 调整媒体当前位置后是否立即继续播放。为假或者省略本参数将跳到指定位置后暂停播放

.局部变量 执行结果, 整数型, , , 

API_发送MCI文本 (相加 (“set ”, 私_媒体别名, “ time format frames”), “”, 0, 0)
赋值 (执行结果, API_发送MCI文本 (相加 (“seek ”, 私_媒体别名, “ to ”, 到文本 (参_帧位置)), “”, 0, 0))
.如果真 (不等于 (执行结果, 0))
    返回 (执行结果)
.如果真结束
.如果真 (参_是否立即播放)
    播放媒体 ()
.如果真结束
返回 (执行结果)


.子程序 置媒体位置, 整数型, , 设置媒体当前播放的位置。成功返回0，失败返回非零整数。单位:毫秒
.参数 参_播放位置, 整数型, , 播放位置必须小于媒体长度，否则可能会造成命令失败。单位：毫秒
.参数 参_是否立即播放, 逻辑型, 可空, 调整媒体当前位置后是否立即继续播放。为假或者省略本参数将跳到指定位置后暂停播放

.局部变量 执行结果, 整数型, , , 

API_发送MCI文本 (相加 (“set ”, 私_媒体别名, “ time format milliseconds”), “”, 0, 0)
赋值 (执行结果, API_发送MCI文本 (相加 (“seek ”, 私_媒体别名, “ to ”, 到文本 (参_播放位置)), “”, 0, 0))
.如果真 (不等于 (执行结果, 0))
    返回 (执行结果)
.如果真结束
.如果真 (参_是否立即播放)
    播放媒体 ()
.如果真结束
返回 (执行结果)

.子程序 置播放速度, 整数型, , 设置当前媒体的播放速度。成功返回0，失败返回非零整数。注意：并非所有媒体都支持速度调整
.参数 参_播放速度, 整数型, , 1到2000之间的整数。原始速度为1000。2000为原始速度的2倍，500为原始速度的一半。警告:过慢的速度将导致媒体看起来已经停止了

.如果真 (或者 (小于 (参_播放速度, 1), 大于 (参_播放速度, 2000)))
    返回 (10461)
.如果真结束
返回 (API_发送MCI文本 (相加 (“set ”, 私_媒体别名, “ speed ”, 到文本 (参_播放速度)), “”, 0, 0))


.子程序 取播放速度, 整数型, , 返回与正常播放速度的比例。1000表示与正常速度相同，2000表示为正常速度的两倍
.局部变量 文件长度, 文本型, , , 

赋值 (文件长度, 取空白文本 (255))
API_发送MCI文本 (相加 (“Status ”, 私_媒体别名, “ speed”), 文件长度, 255, 0)
返回 (到整数 (删首尾空 (文件长度)))


.子程序 取媒体位置, 整数型, , 返回媒体文件播放的位置，已停止播放返回0，失败返回-1
.局部变量 播放位置, 文本型, , , 

赋值 (播放位置, 取空白文本 (255))
.如果 (不等于 (API_发送MCI文本 (相加 (“status ”, 私_媒体别名, “ position”), 播放位置, 255, 0), 0))
    返回 (-1)
.否则
    返回 (到整数 (播放位置))
.如果结束


.子程序 取视频区域, 窗口矩形区域, , 取得视频画面的位置。注意：全屏播放时不能通过此命令得到位置信息
.局部变量 多媒体信息, 文本型, , , 
.局部变量 画面位置, 窗口矩形区域, , , 
.局部变量 空格位置1, 整数型, , , 
.局部变量 空格位置2, 整数型, , , 
.局部变量 空格位置3, 整数型, , , 

赋值 (多媒体信息, 取空白文本 (255))
API_发送MCI文本 (相加 (“Where ”, 私_媒体别名, “ destination”), 多媒体信息, 255, 0)
赋值 (空格位置1, 寻找文本 (多媒体信息, “ ”, , 假))
赋值 (空格位置2, 寻找文本 (多媒体信息, “ ”, 相加 (空格位置1, 1), 假))
赋值 (空格位置3, 寻找文本 (多媒体信息, “ ”, 相加 (空格位置2, 2), 假))
赋值 (画面位置.左边, 到整数 (取文本中间 (多媒体信息, 1, 相减 (空格位置1, 1))))
赋值 (画面位置.顶边, 到整数 (取文本中间 (多媒体信息, 相加 (空格位置1, 1), 相减 (空格位置2, 空格位置1, 1))))
赋值 (画面位置.宽度, 到整数 (取文本中间 (多媒体信息, 相加 (空格位置2, 1), 相减 (空格位置3, 空格位置2, 1))))
赋值 (画面位置.高度, 到整数 (取文本中间 (多媒体信息, 相加 (空格位置3, 1), 相减 (取文本长度 (多媒体信息), 空格位置3))))
返回 (画面位置)

.子程序 取媒体音量, 整数型, , 返回系统当前的音量值。命令失败返回-1。媒体音量范围：0-1000，正整数
.局部变量 音量大小, 文本型, , , 
.局部变量 执行结果, 整数型, , , 

赋值 (音量大小, 取空白文本 (255))
赋值 (执行结果, API_发送MCI文本 (相加 (“status ”, 私_媒体别名, “ volume”), 音量大小, 255, 0))
.如果 (等于 (执行结果, 0))
    返回 (到整数 (音量大小))
.否则
    返回 (-1)
.如果结束


.子程序 置媒体音量, 整数型, , 执行成功返回0，否则返回非零的整数。说明：执行后的实际音量可能最多±2的误差，这里设置的是系统的音量值
.参数 参_媒体音量, 整数型, , 范围0-1000，必须为正整数。不符合此规则将导致命令失败。

.如果真 (或者 (小于 (参_媒体音量, 0), 大于 (参_媒体音量, 1000)))
    返回 (10461)
.如果真结束
返回 (API_发送MCI文本 (相加 (“setaudio ”, 私_媒体别名, “ volume to ”, 到文本 (参_媒体音量)), “”, 0, 0))

.子程序 置声道音量大小, 整数型, , 设置当前打开的媒体的音量值。0-1000之间的整数
.参数 参_声道类型, 整数型, , 1、左声道  2、右声道。不接受其他值
.参数 参_音量大小, 整数型, , 0-1000之间的整数

.局部变量 局_声道名称, 文本型, , , 

.如果真 (或者 (小于 (参_声道类型, 1), 大于 (参_声道类型, 2), 小于 (参_音量大小, 0), 大于 (参_音量大小, 1000)))
    返回 (10461)
.如果真结束
.判断开始 (等于 (参_声道类型, #声道_左声道))
    赋值 (局_声道名称, “left”)
.判断 (等于 (参_声道类型, #声道_右声道))
    赋值 (局_声道名称, “right”)
.默认
    
.判断结束

返回 (API_发送MCI文本 (相加 (“setaudio ”, 私_媒体别名, “ ”, 局_声道名称, “ volume to ”, 到文本 (参_音量大小)), “”, 0, 0))

.子程序 取声道音量大小, 整数型, , 取得当前媒体的声道音量大小。失败返回-1
.参数 参_声道类型, 整数型, , 1、左声道  2、右声道。不接受其他值

.局部变量 局_声道名称, 文本型, , , 
.局部变量 局_音量大小, 文本型, , , 
.局部变量 局_返回值, 整数型, , , 

.如果真 (或者 (小于 (参_声道类型, 1), 大于 (参_声道类型, 2)))
    返回 (10461)
.如果真结束
.判断开始 (等于 (参_声道类型, #声道_左声道))
    赋值 (局_声道名称, “left”)
.判断 (等于 (参_声道类型, #声道_右声道))
    赋值 (局_声道名称, “right”)
.默认
    
.判断结束
赋值 (局_音量大小, 取空白文本 (255))
赋值 (局_返回值, API_发送MCI文本 (相加 (“Status ”, 私_媒体别名, “ ”, 局_声道名称, “ volume”), 局_音量大小, 255, 0))
.如果 (不等于 (局_返回值, 0))
    返回 (-1)
.否则
    返回 (到数值 (局_音量大小))
.如果结束


.子程序 取媒体声道, 整数型, , 返回常量中以"声道_"开头的常量值。失败返回0
.局部变量 声道名称, 文本型, , , 
.局部变量 局_执行结果, 整数型, , , 

赋值 (声道名称, 取空白文本 (255))
赋值 (局_执行结果, API_发送MCI文本 (相加 (“Status ”, 私_媒体别名, “ audio source”), 声道名称, 255, 0))
.如果真 (不等于 (局_执行结果, 0))
    返回 (-1)
.如果真结束
赋值 (声道名称, 到小写 (删首尾空 (声道名称)))
.判断开始 (等于 (声道名称, “left”))
    赋值 (局_执行结果, #声道_左声道)
.判断 (等于 (声道名称, “right”))
    赋值 (局_执行结果, #声道_右声道)
.判断 (等于 (声道名称, “stereo”))
    赋值 (局_执行结果, #声道_立体声)
.判断 (等于 (声道名称, “average”))
    赋值 (局_执行结果, #声道_均衡)
.默认
    
.判断结束
返回 (局_执行结果)

.子程序 置媒体声道, 整数型, , 执行成功返回0，否则返回非零整数。
.参数 参_声道类型, 整数型, , 提供常量中以“声道_”开头的整型数值

.局部变量 声道名称, 文本型, , , 

.判断开始 (等于 (参_声道类型, #声道_左声道))
    赋值 (声道名称, “left”)
.判断 (等于 (参_声道类型, #声道_右声道))
    赋值 (声道名称, “right”)
.判断 (等于 (参_声道类型, #声道_立体声))
    赋值 (声道名称, “stereo”)
.判断 (等于 (参_声道类型, #声道_均衡))
    赋值 (声道名称, “average”)
.默认
    
.判断结束
返回 (API_发送MCI文本 (相加 (“setaudio ”, 私_媒体别名, “ source to ”, 声道名称), “”, 0, 0))

.子程序 是否已就绪, 逻辑型, , 调用 打开媒体 方法后，可使用此方法获取设备的状态
.局部变量 局_状态, 文本型, , , 

赋值 (局_状态, 取空白文本 (255))
API_发送MCI文本 (相加 (“Status ”, 私_媒体别名, “ ready”), 局_状态, 255, 0)
.如果 (等于 (到小写 (局_状态), “true”))
    返回 (真)
.否则
    返回 (假)
.如果结束


.子程序 取视频字节流速率, 整数型, , 单位Byte/s
.局部变量 局_字节流速率, 文本型, , , 
.局部变量 局_执行结果, 整数型, , , 

赋值 (局_字节流速率, 取空白文本 (255))
赋值 (局_执行结果, API_发送MCI文本 (相加 (“Status ”, 私_媒体别名, “ bytespersec”), 局_字节流速率, 255, 0))
.如果真 (不等于 (局_执行结果, 0))
    返回 (-1)
.如果真结束
返回 (到数值 (局_字节流速率))


.子程序 全屏模式, 整数型, , 如果有视频画面，此方法方有效。备注:目前此方法尚不完美。要响应视频窗口消息，用本类方法取出视频窗口句柄并自行操作。待解决
.参数 参_是否全屏, 逻辑型, , 真=全屏；假=还原。默认为假

.判断开始 (参_是否全屏)
    返回 (API_发送MCI文本 (相加 (“play ”, 私_媒体别名, “ fullscreen”), “”, 0, 0))
.默认
    返回 (API_发送MCI文本 (相加 (“put ”, 私_媒体别名, “ destination”), “”, 0, 0))
.判断结束


.子程序 是否为视频, 逻辑型, , 如果打开的媒体包含视频信息则返回真，否则返回假。
返回 (不等于 (取视频窗口句柄 (), 0))


.子程序 取视频源, 整数型, , 
.局部变量 文件长度, 文本型, , , 

赋值 (文件长度, 取空白文本 (255))
API_发送MCI文本 (相加 (“Status ”, 私_媒体别名, “ audio record track number”), 文件长度, 255, 0)
返回 (到整数 (删首尾空 (文件长度)))



 ' 不属于任何一个程序集、类模块的函数：
