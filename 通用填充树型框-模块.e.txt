 ' 文件类型：Windows模块源码

 ' 程序名称：通用填充树型框模块
 ' 程序描述：    本模块对易语言所支持的全部数据库均有效。
    其原理是：首先将所要填充的数据库记录转换为二维数组[记录数][要填充的字段数]，字段在数组列的排放顺序决定了他们在树型框中的父子关系。
    本模块填充速度快，支持重复过滤，支持添加树型框的总根节点。
 ' 程序作者：姚喜乔
 ' 邮政编码：100085
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：fanran12@sina.com
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0





 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 4 系统核心支持库
 ' iext 27bb20fdd3e145e4bee3db39ddd6e64c 1 2 扩展界面支持库一





.程序集 程序集1, , , 

.子程序 _启动子程序, 整数型, , 请在本子程序中放置易模块初始化代码

_临时子程序 () ' 在初始化代码执行完毕后调用测试代码
返回 (0) ' 可以根据您的需要返回任意数值

.子程序 _临时子程序, 空白型, , 
 ' 本名称子程序用作测试程序用，仅在开发及调试环境中有效，编译发布程序前将被系统自动清空，请将所有用作测试的临时代码放在本子程序中。 ***注意不要修改本子程序的名称、参数及返回值类型。


.子程序 数组填充树型框, 空白型, 公开, 
.参数 目的树, 树型框, , 需要填充的目的树型框
.参数 源数组, 文本型, 数组, 用来填充的源数组数据
.参数 根节点内容, 文本型, 可空, 需要额外加入的总根节点内容
.参数 过滤重复, 逻辑型, 可空, 仅仅针对数组的最后一列是否过滤重复数据，真：过滤，反之不过滤

.局部变量 数组行数, 整数型, , , 源数组的行数
.局部变量 数组列数, 整数型, , , 源数组的列数
.局部变量 行数计次, 整数型, , , 在循环中记录数组行数的变化
.局部变量 列数计次, 整数型, , , 在循环中记录数组列数的变化
.局部变量 父层次索引, 整数型, , , 
.局部变量 是否存在, 逻辑型, , , 是否存在相同项目
.局部变量 层次, 整数型, , "0", 用于代替树型框，进行项目比较，以提高填充速度
.局部变量 内容, 文本型, , "0", 用于代替树型框，进行项目比较，以提高填充速度
.局部变量 计次变量, 整数型, , , 
.局部变量 计次变量2, 整数型, , , 
.局部变量 额外根节点, 逻辑型, , , 判断是否已经加入额外根节点
.局部变量 文本, 文本型, , , 

.如果 (等于 (根节点内容, “”))
    赋值 (父层次索引, -1)
    赋值 (额外根节点, 假)
.否则
    赋值 (父层次索引, 目的树.加入项目 (父层次索引, 根节点内容, , , ))
    赋值 (父层次索引, 0)
    赋值 (额外根节点, 真)
.如果结束


赋值 (数组行数, 取数组下标 (源数组, 1))
赋值 (数组列数, 取数组下标 (源数组, 2))
.如果真 (等于 (数组列数, 0))
    返回 ()
.如果真结束
.计次循环首 (目的树.取项目数 (), 计次变量) ' 将树型框项目的缩进层次及项目文本转化为数组，以提高比较速度。
    加入成员 (层次, 目的树.取缩进层次 (相减 (计次变量, 1)))
    加入成员 (内容, 目的树.取项目文本 (相减 (计次变量, 1)))
.计次循环尾 ()
.计次循环首 (数组行数, 行数计次)
    赋值 (父层次索引, 选择 (等于 (额外根节点, 假), -1, 0))
    .计次循环首 (数组列数, 列数计次)
        赋值 (是否存在, 假)
        .如果真 (大于 (取数组成员数 (层次), 0)) ' 当树型框中没有项目时，“存在”恒为假，不需要进行以下循环判断。
            .变量循环首 (相加 (父层次索引, 1), 相减 (取数组成员数 (层次), 1), 1, 计次变量) ' 从上级父项目下的第一个子项目开始
                .判断开始 (小于 (层次 [相加 (计次变量, 1)], 选择 (等于 (额外根节点, 假), 列数计次, 相加 (列数计次, 1)))) ' 说明已经不属于同一父项目了, 树型框的项目从0开始,数组成员从1开始,所以这里用：计次变量 + 1
                    赋值 (是否存在, 假)
                    跳出循环 ()
                    
                .判断 (等于 (层次 [相加 (计次变量, 1)], 选择 (等于 (额外根节点, 假), 列数计次, 相加 (列数计次, 1)))) ' 只比较同级内容，即缩进层次与数组列数相同
                    赋值 (文本, 源数组 [行数计次] [列数计次])
                    .如果真 (等于 (内容 [相加 (计次变量, 1)], 文本))
                        .如果真 (小于 (列数计次, 数组列数))
                            赋值 (父层次索引, 计次变量) ' 存在相同项目时记录为上级索引,但为最后一个字段时,则保持上级索引不变
                        .如果真结束
                        赋值 (是否存在, 真)
                        跳出循环 () ' 直接跳出,并进行下一个字段的检测
                    .如果真结束
                    
                .默认
                    
                .判断结束
                
            .变量循环尾 ()
        .如果真结束
        .如果 (等于 (是否存在, 假)) ' 如果本级字段不存在,则进行填充
            .变量循环首 (列数计次, 数组列数, 1, 计次变量2)
                赋值 (文本, 源数组 [行数计次] [计次变量2])
                赋值 (父层次索引, 目的树.加入项目 (父层次索引, 文本, , , ))
                插入成员 (层次, 相加 (父层次索引, 1), 目的树.取缩进层次 (父层次索引)) ' 树型框的项目从0开始,数组成员从1开始,所以这里用：父层次索引 + 1
                插入成员 (内容, 相加 (父层次索引, 1), 文本)
            .变量循环尾 ()
            跳出循环 ()
        .否则
            .如果真 (等于 (列数计次, 数组列数)) ' 如果已经是最后一个字段,则判断是否过滤,如果不过滤,就填充
                .如果真 (等于 (过滤重复, 假))
                    赋值 (文本, 源数组 [行数计次] [列数计次])
                    赋值 (父层次索引, 目的树.加入项目 (父层次索引, 文本, , , ))
                    插入成员 (层次, 相加 (父层次索引, 1), 目的树.取缩进层次 (父层次索引))
                    插入成员 (内容, 相加 (父层次索引, 1), 文本)
                .如果真结束
                跳出循环 ()
            .如果真结束
            
        .如果结束
        
    .计次循环尾 ()
.计次循环尾 ()



 ' 不属于任何一个程序集、类模块的函数：
