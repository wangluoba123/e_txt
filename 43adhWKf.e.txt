 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：本源码来自易语言资源网(www.wodesoft.com)
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：             易语言资源网注意事项
--============   www.wodesoft.com  =============--
* 易语言资源网为易语言官方站、易语言官方论坛提供辅助资源站；本易语言资源网( www.wodesoft.com)所有软件和资料均为软件作者提供和网友推荐发布而来，其版权归该软件和程序源码的合法拥有者所有，本站易语言资源网整理收集仅供易语言用户学习和易语言技术研究探讨使用，不得用于任何商业用途。如果由于以上原因造成的版权纠纷本站概不负责！
* 本站资源未经许可,任何网站不得非法盗链及抄袭本站资源；如引用，请注明来自易语言资源网，谢谢合作！
--============   www.wodesoft.com  =============--
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 791
    高度 = 559
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    窗口类名 = “”
    底图 =  ' 空
    图标 =  ' 已保存到：D:\易语言学习\Data\43adhWKf.e\_启动窗口_图标.ico
    背景音乐 =  ' 空
    标题 = “斗兽棋 V0.01 By 申广科技工作室(阿立)”
    帮助文件名 = “”

窗口 窗口1
    左边 = 50
    顶边 = 50
    宽度 = 245
    高度 = 213
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    窗口类名 = “”
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “”
    帮助文件名 = “”

窗口 窗口_投掷骰子
    左边 = 50
    顶边 = 50
    宽度 = 300
    高度 = 317
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 2
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    窗口类名 = “”
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “投掷骰子决定先后手”
    帮助文件名 = “”



.图片 点数1, " ' 已保存到：D:\易语言学习\Data\43adhWKf.e\点数1", , 
.图片 点数2, " ' 已保存到：D:\易语言学习\Data\43adhWKf.e\点数2", , 
.图片 点数3, " ' 已保存到：D:\易语言学习\Data\43adhWKf.e\点数3", , 
.图片 点数4, " ' 已保存到：D:\易语言学习\Data\43adhWKf.e\点数4", , 
.图片 点数5, " ' 已保存到：D:\易语言学习\Data\43adhWKf.e\点数5", , 
.图片 点数6, " ' 已保存到：D:\易语言学习\Data\43adhWKf.e\点数6", , 
.图片 点数7, " ' 已保存到：D:\易语言学习\Data\43adhWKf.e\点数7", , 
.图片 点数8, " ' 已保存到：D:\易语言学习\Data\43adhWKf.e\点数8", , 
.图片 点数9, " ' 已保存到：D:\易语言学习\Data\43adhWKf.e\点数9", , 
.图片 点数10, " ' 已保存到：D:\易语言学习\Data\43adhWKf.e\点数10", , 
.声音 马叫, " ' 已保存到：D:\易语言学习\Data\43adhWKf.e\马叫", , 
.声音 牛叫, " ' 已保存到：D:\易语言学习\Data\43adhWKf.e\牛叫", , 
.声音 猪叫, " ' 已保存到：D:\易语言学习\Data\43adhWKf.e\猪叫", , 
.声音 鸡叫, " ' 已保存到：D:\易语言学习\Data\43adhWKf.e\鸡叫", , 
.声音 虎叫, " ' 已保存到：D:\易语言学习\Data\43adhWKf.e\虎叫", , 
.声音 狗叫, " ' 已保存到：D:\易语言学习\Data\43adhWKf.e\狗叫", , 
.声音 蛇叫, " ' 已保存到：D:\易语言学习\Data\43adhWKf.e\蛇叫", , 
.声音 鼠叫, " ' 已保存到：D:\易语言学习\Data\43adhWKf.e\鼠叫", , 
.声音 龙叫, " ' 已保存到：D:\易语言学习\Data\43adhWKf.e\龙叫", , 
.声音 你走错了, " ' 已保存到：D:\易语言学习\Data\43adhWKf.e\你走错了", , 
.声音 保护我, " ' 已保存到：D:\易语言学习\Data\43adhWKf.e\保护我", , 
.声音 老大你要做什么, " ' 已保存到：D:\易语言学习\Data\43adhWKf.e\老大你要做什么", , 
.声音 吃掉棋子, " ' 已保存到：D:\易语言学习\Data\43adhWKf.e\吃掉棋子", , 
.声音 太公在此, " ' 已保存到：D:\易语言学习\Data\43adhWKf.e\太公在此", , 
.声音 不能过河, " ' 已保存到：D:\易语言学习\Data\43adhWKf.e\不能过河", , 
.声音 胜利, " ' 已保存到：D:\易语言学习\Data\43adhWKf.e\胜利", , 
.声音 投掷骰子, " ' 已保存到：D:\易语言学习\Data\43adhWKf.e\投掷骰子", , 
.常量 棋子高度, "66", , 
.常量 棋子宽度, "66", , 
.常量 向右修补量, "1.5", , 
.常量 向左修补量, "0.5", , 
.常量 向上修补量, "0.5", , 
.常量 向下修补量, "1.5", , 
.常量 , , , 
.常量 棋子_鼠_大小, "1", , 
.常量 棋子_蛇_大小, "2", , 
.常量 棋子_鸡_大小, "3", , 
.常量 棋子_狗_大小, "4", , 
.常量 棋子_马_大小, "5", , 
.常量 棋子_牛_大小, "6", , 
.常量 棋子_虎_大小, "7", , 
.常量 棋子_龙_大小, "8", , 
.常量 棋子_太公_大小, "9", , 
.常量 , , , 
.常量 提示文字, "“申广科技提示信息”", , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 5 0 系统核心支持库
 ' iext5 {E5000198-4471-40e2-92BC-D0BA075BDBB2} 2 0 扩展界面支持库五
 ' iext2 AF6AD80AA4244A59AFB3D83ECF5173CC 2 0 扩展界面支持库二




数据类型 位置, , 
    .成员 横坐标, 整数型, , , 
    .成员 纵坐标, 整数型, , , 

数据类型 棋子周围情况, , 
    .成员 上方有无棋子, 逻辑型, , , 
    .成员 下方有无棋子, 逻辑型, , , 
    .成员 左方有无棋子, 逻辑型, , , 
    .成员 右方有无棋子, 逻辑型, , , 
    .成员 匿名成员1840, 空白型, , , 
    .成员 上方左棋子大小, 整数型, , , 
    .成员 下方左棋子大小, 整数型, , , 
    .成员 左方左棋子大小, 整数型, , , 
    .成员 右方左棋子大小, 整数型, , , 
    .成员 上方右棋子大小, 整数型, , , 
    .成员 下方右棋子大小, 整数型, , , 
    .成员 左方右棋子大小, 整数型, , , 
    .成员 右方右棋子大小, 整数型, , , 
    .成员 匿名成员2140, 空白型, , , 
    .成员 匿名成员2541, 空白型, , , 
    .成员 上方棋子类型, 文本型, , , 
    .成员 下方棋子类型, 文本型, , , 
    .成员 左方棋子类型, 文本型, , , 
    .成员 右方棋子类型, 文本型, , , 
    .成员 匿名成员2147, 空白型, , , 
    .成员 匿名成员2144, 空白型, , , 
    .成员 上方是敌是友, 逻辑型, , , 
    .成员 下方是敌是友, 逻辑型, , , 
    .成员 左方是敌是友, 逻辑型, , , 
    .成员 右方是敌是友, 逻辑型, , , 
    .成员 匿名成员2249, 空白型, , , 
    .成员 上方棋子位置, 位置, , , 
    .成员 下方棋子位置, 位置, , , 
    .成员 左方棋子位置, 位置, , , 
    .成员 右方棋子位置, 位置, , , 
    .成员 匿名成员2252, 空白型, , , 
    .成员 位置, 整数型, , , 其它棋子的位置,1为上方，2为下方，3为左方，4为右方

数据类型 对话文本, , 
    .成员 对牛说, 文本型, , , 
    .成员 对狗说, 文本型, , , 
    .成员 对鸡说, 文本型, , , 
    .成员 对马说, 文本型, , , 
    .成员 对蛇说, 文本型, , , 
    .成员 对虎说, 文本型, , , 
    .成员 对鼠说, 文本型, , , 
    .成员 对龙说, 文本型, , , 
    .成员 对自己说, 文本型, , , 

.全局变量 左牛_可以移动, 逻辑型, , , 
.全局变量 左龙_可以移动, 逻辑型, , , 
.全局变量 左鸡_可以移动, 逻辑型, , , 
.全局变量 左狗_可以移动, 逻辑型, , , 
.全局变量 左马_可以移动, 逻辑型, , , 
.全局变量 左虎_可以移动, 逻辑型, , , 
.全局变量 左鼠_可以移动, 逻辑型, , , 
.全局变量 左蛇_可以移动, 逻辑型, , , 
.全局变量 匿名全局变量_1159, 空白型, , , 
.全局变量 右牛_可以移动, 逻辑型, , , 
.全局变量 右龙_可以移动, 逻辑型, , , 
.全局变量 右鸡_可以移动, 逻辑型, , , 
.全局变量 右狗_可以移动, 逻辑型, , , 
.全局变量 右马_可以移动, 逻辑型, , , 
.全局变量 右虎_可以移动, 逻辑型, , , 
.全局变量 右鼠_可以移动, 逻辑型, , , 
.全局变量 右蛇_可以移动, 逻辑型, , , 
.全局变量 匿名全局变量_1050, 空白型, , , 
.全局变量 匿名全局变量_784, 空白型, , , 
.全局变量 棋子_左牛_可到_位置, 位置, , "50", 9*7-12-1格是可以进入的(具体是这样算的，9*7是整个棋盘的总格数，
.全局变量 匿名全局变量_509, 空白型, , , 12是中间代表河的格数，除了鼠，其它动物是不能进入的，所以-12,
.全局变量 匿名全局变量_717, 空白型, , , 最后还有已方的一格太公也不能进)
.全局变量 棋子_左龙_可到_位置, 位置, , "50", 9*7-12-1格是可以进入的
.全局变量 棋子_左鸡_可到_位置, 位置, , "50", 9*7-12-1格是可以进入的
.全局变量 棋子_左狗_可到_位置, 位置, , "50", 9*7-12-1格是可以进入的
.全局变量 棋子_左马_可到_位置, 位置, , "50", 9*7-12-1格是可以进入的
.全局变量 棋子_左蛇_可到_位置, 位置, , "50", 9*7-12-1格是可以进入的
.全局变量 棋子_左虎_可到_位置, 位置, , "50", 9*7-12-1格是可以进入的
.全局变量 棋子_左鼠_可到_位置, 位置, , "62", 9*7-1格是可以进入的
.全局变量 匿名全局变量_517, 空白型, , , 
.全局变量 棋子_右牛_可到_位置, 位置, , "50", 9*7-12-1格是可以进入的
.全局变量 棋子_右龙_可到_位置, 位置, , "50", 9*7-12-1格是可以进入的
.全局变量 棋子_右鸡_可到_位置, 位置, , "50", 9*7-12-1格是可以进入的
.全局变量 棋子_右狗_可到_位置, 位置, , "50", 9*7-12-1格是可以进入的
.全局变量 棋子_右马_可到_位置, 位置, , "50", 9*7-12-1格是可以进入的
.全局变量 棋子_右蛇_可到_位置, 位置, , "50", 9*7-12-1格是可以进入的
.全局变量 棋子_右虎_可到_位置, 位置, , "50", 9*7-12-1格是可以进入的
.全局变量 棋子_右鼠_可到_位置, 位置, , "62", 9*7-1格是可以进入的
.全局变量 匿名全局变量_526, 空白型, , , 
.全局变量 棋子_左牛_不可到_位置, 位置, , "13", 12+1格是不可进入的
.全局变量 棋子_左龙_不可到_位置, 位置, , "13", 
.全局变量 棋子_左鸡_不可到_位置, 位置, , "13", 
.全局变量 棋子_左狗_不可到_位置, 位置, , "13", 
.全局变量 棋子_左马_不可到_位置, 位置, , "13", 
.全局变量 棋子_左蛇_不可到_位置, 位置, , "13", 
.全局变量 棋子_左虎_不可到_位置, 位置, , "13", 
.全局变量 棋子_左鼠_不可到_位置, 位置, , "1", 
.全局变量 匿名全局变量_959, 空白型, , , 
.全局变量 棋子_右牛_不可到_位置, 位置, , "13", 12+1格是不可进入的
.全局变量 棋子_右龙_不可到_位置, 位置, , "13", 
.全局变量 棋子_右鸡_不可到_位置, 位置, , "13", 
.全局变量 棋子_右狗_不可到_位置, 位置, , "13", 
.全局变量 棋子_右马_不可到_位置, 位置, , "13", 
.全局变量 棋子_右蛇_不可到_位置, 位置, , "13", 
.全局变量 棋子_右虎_不可到_位置, 位置, , "13", 
.全局变量 棋子_右鼠_不可到_位置, 位置, , "1", 
.全局变量 匿名全局变量_960, 空白型, , , 
.全局变量 匿名全局变量_950, 空白型, , , '左面棋子的当前位置
.全局变量 棋子_左牛_当前位置, 位置, , , 
.全局变量 棋子_左龙_当前位置, 位置, , , 
.全局变量 棋子_左鸡_当前位置, 位置, , , 
.全局变量 棋子_左狗_当前位置, 位置, , , 
.全局变量 棋子_左马_当前位置, 位置, , , 
.全局变量 棋子_左蛇_当前位置, 位置, , , 
.全局变量 棋子_左虎_当前位置, 位置, , , 
.全局变量 棋子_左鼠_当前位置, 位置, , , 
.全局变量 棋子_左太公_当前位置, 位置, , , 太公
.全局变量 匿名全局变量_893, 空白型, , , '右面棋子的当前位置 
.全局变量 棋子_右牛_当前位置, 位置, , , 
.全局变量 棋子_右龙_当前位置, 位置, , , 
.全局变量 棋子_右鸡_当前位置, 位置, , , 
.全局变量 棋子_右狗_当前位置, 位置, , , 
.全局变量 棋子_右马_当前位置, 位置, , , 
.全局变量 棋子_右蛇_当前位置, 位置, , , 
.全局变量 棋子_右虎_当前位置, 位置, , , 
.全局变量 棋子_右鼠_当前位置, 位置, , , 
.全局变量 棋子_右太公_当前位置, 位置, , , 
.全局变量 匿名全局变量_886, 空白型, , , 
.全局变量 所有左棋的当前位置, 位置, , "9", 
.全局变量 所有右棋的当前位置, 位置, , "9", 
.全局变量 所有棋子的当前位置, 位置, , "18", 
.全局变量 匿名全局变量_1362, 空白型, , , 
.全局变量 可以发音, 逻辑型, , , 判断动物可不可以发声,为真是可以发声，不然不可以发声
.全局变量 可以显示文本, 逻辑型, , , 
.全局变量 匿名全局变量_862, 空白型, , , 
.全局变量 左牛_准备移动, 逻辑型, , , 判断棋子是否准备要移动了
.全局变量 左龙_准备移动, 逻辑型, , , 
.全局变量 左鸡_准备移动, 逻辑型, , , 
.全局变量 左狗_准备移动, 逻辑型, , , 
.全局变量 左马_准备移动, 逻辑型, , , 
.全局变量 左蛇_准备移动, 逻辑型, , , 
.全局变量 左虎_准备移动, 逻辑型, , , 
.全局变量 左鼠_准备移动, 逻辑型, , , 
.全局变量 匿名全局变量_4564, 空白型, , , 
.全局变量 右牛_准备移动, 逻辑型, , , 判断棋子是否准备要移动了
.全局变量 右龙_准备移动, 逻辑型, , , 
.全局变量 右鸡_准备移动, 逻辑型, , , 
.全局变量 右狗_准备移动, 逻辑型, , , 
.全局变量 右马_准备移动, 逻辑型, , , 
.全局变量 右蛇_准备移动, 逻辑型, , , 
.全局变量 右虎_准备移动, 逻辑型, , , 
.全局变量 右鼠_准备移动, 逻辑型, , , 
.全局变量 匿名全局变量_1841, 空白型, , , 
.全局变量 匿名全局变量_4283, 空白型, , , 
.全局变量 匿名全局变量_4284, 空白型, , , 
.全局变量 左鼠上方棋子可删除, 逻辑型, , , 
.全局变量 左鼠下方棋子可删除, 逻辑型, , , 
.全局变量 左鼠左方棋子可删除, 逻辑型, , , 
.全局变量 左鼠右方棋子可删除, 逻辑型, , , 
.全局变量 匿名全局变量_2333, 空白型, , , 
.全局变量 左蛇上方棋子可删除, 逻辑型, , , 
.全局变量 左蛇下方棋子可删除, 逻辑型, , , 
.全局变量 左蛇左方棋子可删除, 逻辑型, , , 
.全局变量 左蛇右方棋子可删除, 逻辑型, , , 
.全局变量 匿名全局变量_2334, 空白型, , , 
.全局变量 左鸡上方棋子可删除, 逻辑型, , , 
.全局变量 左鸡下方棋子可删除, 逻辑型, , , 
.全局变量 左鸡左方棋子可删除, 逻辑型, , , 
.全局变量 左鸡右方棋子可删除, 逻辑型, , , 
.全局变量 匿名全局变量_2343, 空白型, , , 
.全局变量 左狗上方棋子可删除, 逻辑型, , , 
.全局变量 左狗下方棋子可删除, 逻辑型, , , 
.全局变量 左狗左方棋子可删除, 逻辑型, , , 
.全局变量 左狗右方棋子可删除, 逻辑型, , , 
.全局变量 匿名全局变量_2358, 空白型, , , 
.全局变量 左马上方棋子可删除, 逻辑型, , , 
.全局变量 左马下方棋子可删除, 逻辑型, , , 
.全局变量 左马左方棋子可删除, 逻辑型, , , 
.全局变量 左马右方棋子可删除, 逻辑型, , , 
.全局变量 匿名全局变量_2348, 空白型, , , 
.全局变量 左牛上方棋子可删除, 逻辑型, , , 
.全局变量 左牛下方棋子可删除, 逻辑型, , , 
.全局变量 左牛左方棋子可删除, 逻辑型, , , 
.全局变量 左牛右方棋子可删除, 逻辑型, , , 
.全局变量 匿名全局变量_2359, 空白型, , , 
.全局变量 左虎上方棋子可删除, 逻辑型, , , 
.全局变量 左虎下方棋子可删除, 逻辑型, , , 
.全局变量 左虎左方棋子可删除, 逻辑型, , , 
.全局变量 左虎右方棋子可删除, 逻辑型, , , 
.全局变量 匿名全局变量_2364, 空白型, , , 
.全局变量 左龙上方棋子可删除, 逻辑型, , , 
.全局变量 左龙下方棋子可删除, 逻辑型, , , 
.全局变量 左龙左方棋子可删除, 逻辑型, , , 
.全局变量 左龙右方棋子可删除, 逻辑型, , , 
.全局变量 匿名全局变量_4565, 空白型, , , 
.全局变量 右鼠上方棋子可删除, 逻辑型, , , 
.全局变量 右鼠下方棋子可删除, 逻辑型, , , 
.全局变量 右鼠左方棋子可删除, 逻辑型, , , 
.全局变量 右鼠右方棋子可删除, 逻辑型, , , 
.全局变量 匿名全局变量_4571, 空白型, , , 
.全局变量 右蛇上方棋子可删除, 逻辑型, , , 
.全局变量 右蛇下方棋子可删除, 逻辑型, , , 
.全局变量 右蛇左方棋子可删除, 逻辑型, , , 
.全局变量 右蛇右方棋子可删除, 逻辑型, , , 
.全局变量 匿名全局变量_4576, 空白型, , , 
.全局变量 右鸡上方棋子可删除, 逻辑型, , , 
.全局变量 右鸡下方棋子可删除, 逻辑型, , , 
.全局变量 右鸡左方棋子可删除, 逻辑型, , , 
.全局变量 右鸡右方棋子可删除, 逻辑型, , , 
.全局变量 匿名全局变量_4581, 空白型, , , 
.全局变量 右狗上方棋子可删除, 逻辑型, , , 
.全局变量 右狗下方棋子可删除, 逻辑型, , , 
.全局变量 右狗左方棋子可删除, 逻辑型, , , 
.全局变量 右狗右方棋子可删除, 逻辑型, , , 
.全局变量 匿名全局变量_4586, 空白型, , , 
.全局变量 右马上方棋子可删除, 逻辑型, , , 
.全局变量 右马下方棋子可删除, 逻辑型, , , 
.全局变量 右马左方棋子可删除, 逻辑型, , , 
.全局变量 右马右方棋子可删除, 逻辑型, , , 
.全局变量 匿名全局变量_4591, 空白型, , , 
.全局变量 右牛上方棋子可删除, 逻辑型, , , 
.全局变量 右牛下方棋子可删除, 逻辑型, , , 
.全局变量 右牛左方棋子可删除, 逻辑型, , , 
.全局变量 右牛右方棋子可删除, 逻辑型, , , 
.全局变量 匿名全局变量_4596, 空白型, , , 
.全局变量 右虎上方棋子可删除, 逻辑型, , , 
.全局变量 右虎下方棋子可删除, 逻辑型, , , 
.全局变量 右虎左方棋子可删除, 逻辑型, , , 
.全局变量 右虎右方棋子可删除, 逻辑型, , , 
.全局变量 匿名全局变量_4601, 空白型, , , 
.全局变量 右龙上方棋子可删除, 逻辑型, , , 
.全局变量 右龙下方棋子可删除, 逻辑型, , , 
.全局变量 右龙左方棋子可删除, 逻辑型, , , 
.全局变量 右龙右方棋子可删除, 逻辑型, , , 
.全局变量 匿名全局变量_4566, 空白型, , , 
.全局变量 匿名全局变量_2503, 空白型, , , -------------------------------------------------
.全局变量 左鼠_上方左棋大小, 整数型, , , 
.全局变量 左鼠_上方右棋大小, 整数型, , , 
.全局变量 左鼠_下方左棋大小, 整数型, , , 
.全局变量 左鼠_下方右棋大小, 整数型, , , 
.全局变量 左鼠_左方左棋大小, 整数型, , , 
.全局变量 左鼠_左方右棋大小, 整数型, , , 
.全局变量 左鼠_右方左棋大小, 整数型, , , 
.全局变量 左鼠_右方右棋大小, 整数型, , , 
.全局变量 匿名全局变量_4294, 空白型, , , 
.全局变量 左牛_上方左棋大小, 整数型, , , 
.全局变量 左牛_上方右棋大小, 整数型, , , 
.全局变量 左牛_下方左棋大小, 整数型, , , 
.全局变量 左牛_下方右棋大小, 整数型, , , 
.全局变量 左牛_左方左棋大小, 整数型, , , 
.全局变量 左牛_左方右棋大小, 整数型, , , 
.全局变量 左牛_右方左棋大小, 整数型, , , 
.全局变量 左牛_右方右棋大小, 整数型, , , 
.全局变量 匿名全局变量_4295, 空白型, , , 
.全局变量 左龙_上方左棋大小, 整数型, , , 
.全局变量 左龙_上方右棋大小, 整数型, , , 
.全局变量 左龙_下方左棋大小, 整数型, , , 
.全局变量 左龙_下方右棋大小, 整数型, , , 
.全局变量 左龙_左方左棋大小, 整数型, , , 
.全局变量 左龙_左方右棋大小, 整数型, , , 
.全局变量 左龙_右方左棋大小, 整数型, , , 
.全局变量 左龙_右方右棋大小, 整数型, , , 
.全局变量 匿名全局变量_4296, 空白型, , , 
.全局变量 左虎_上方左棋大小, 整数型, , , 
.全局变量 左虎_上方右棋大小, 整数型, , , 
.全局变量 左虎_下方左棋大小, 整数型, , , 
.全局变量 左虎_下方右棋大小, 整数型, , , 
.全局变量 左虎_左方左棋大小, 整数型, , , 
.全局变量 左虎_左方右棋大小, 整数型, , , 
.全局变量 左虎_右方左棋大小, 整数型, , , 
.全局变量 左虎_右方右棋大小, 整数型, , , 
.全局变量 匿名全局变量_4328, 空白型, , , 
.全局变量 左马_上方左棋大小, 整数型, , , 
.全局变量 左马_上方右棋大小, 整数型, , , 
.全局变量 左马_下方左棋大小, 整数型, , , 
.全局变量 左马_下方右棋大小, 整数型, , , 
.全局变量 左马_左方左棋大小, 整数型, , , 
.全局变量 左马_左方右棋大小, 整数型, , , 
.全局变量 左马_右方左棋大小, 整数型, , , 
.全局变量 左马_右方右棋大小, 整数型, , , 
.全局变量 匿名全局变量_4327, 空白型, , , 
.全局变量 左狗_上方左棋大小, 整数型, , , 
.全局变量 左狗_上方右棋大小, 整数型, , , 
.全局变量 左狗_下方左棋大小, 整数型, , , 
.全局变量 左狗_下方右棋大小, 整数型, , , 
.全局变量 左狗_左方左棋大小, 整数型, , , 
.全局变量 左狗_左方右棋大小, 整数型, , , 
.全局变量 左狗_右方左棋大小, 整数型, , , 
.全局变量 左狗_右方右棋大小, 整数型, , , 
.全局变量 匿名全局变量_4326, 空白型, , , 
.全局变量 左鸡_上方左棋大小, 整数型, , , 
.全局变量 左鸡_上方右棋大小, 整数型, , , 
.全局变量 左鸡_下方左棋大小, 整数型, , , 
.全局变量 左鸡_下方右棋大小, 整数型, , , 
.全局变量 左鸡_左方左棋大小, 整数型, , , 
.全局变量 左鸡_左方右棋大小, 整数型, , , 
.全局变量 左鸡_右方左棋大小, 整数型, , , 
.全局变量 左鸡_右方右棋大小, 整数型, , , 
.全局变量 匿名全局变量_4325, 空白型, , , 
.全局变量 左蛇_上方左棋大小, 整数型, , , 
.全局变量 左蛇_上方右棋大小, 整数型, , , 
.全局变量 左蛇_下方左棋大小, 整数型, , , 
.全局变量 左蛇_下方右棋大小, 整数型, , , 
.全局变量 左蛇_左方左棋大小, 整数型, , , 
.全局变量 左蛇_左方右棋大小, 整数型, , , 
.全局变量 左蛇_右方左棋大小, 整数型, , , 
.全局变量 左蛇_右方右棋大小, 整数型, , , 
.全局变量 匿名全局变量_4297, 空白型, , , -------------------------------------------------------
.全局变量 右鼠_上方左棋大小, 整数型, , , 
.全局变量 右鼠_上方右棋大小, 整数型, , , 
.全局变量 右鼠_下方左棋大小, 整数型, , , 
.全局变量 右鼠_下方右棋大小, 整数型, , , 
.全局变量 右鼠_左方左棋大小, 整数型, , , 
.全局变量 右鼠_左方右棋大小, 整数型, , , 
.全局变量 右鼠_右方左棋大小, 整数型, , , 
.全局变量 右鼠_右方右棋大小, 整数型, , , 
.全局变量 匿名全局变量_4298, 空白型, , , 
.全局变量 右牛_上方左棋大小, 整数型, , , 
.全局变量 右牛_上方右棋大小, 整数型, , , 
.全局变量 右牛_下方左棋大小, 整数型, , , 
.全局变量 右牛_下方右棋大小, 整数型, , , 
.全局变量 右牛_左方左棋大小, 整数型, , , 
.全局变量 右牛_左方右棋大小, 整数型, , , 
.全局变量 右牛_右方左棋大小, 整数型, , , 
.全局变量 右牛_右方右棋大小, 整数型, , , 
.全局变量 匿名全局变量_4307, 空白型, , , 
.全局变量 右龙_上方左棋大小, 整数型, , , 
.全局变量 右龙_上方右棋大小, 整数型, , , 
.全局变量 右龙_下方左棋大小, 整数型, , , 
.全局变量 右龙_下方右棋大小, 整数型, , , 
.全局变量 右龙_左方左棋大小, 整数型, , , 
.全局变量 右龙_左方右棋大小, 整数型, , , 
.全局变量 右龙_右方左棋大小, 整数型, , , 
.全局变量 右龙_右方右棋大小, 整数型, , , 
.全局变量 匿名全局变量_4316, 空白型, , , 
.全局变量 右虎_上方左棋大小, 整数型, , , 
.全局变量 右虎_上方右棋大小, 整数型, , , 
.全局变量 右虎_下方左棋大小, 整数型, , , 
.全局变量 右虎_下方右棋大小, 整数型, , , 
.全局变量 右虎_左方左棋大小, 整数型, , , 
.全局变量 右虎_左方右棋大小, 整数型, , , 
.全局变量 右虎_右方左棋大小, 整数型, , , 
.全局变量 右虎_右方右棋大小, 整数型, , , 
.全局变量 匿名全局变量_4370, 空白型, , , 
.全局变量 右马_上方左棋大小, 整数型, , , 
.全局变量 右马_上方右棋大小, 整数型, , , 
.全局变量 右马_下方左棋大小, 整数型, , , 
.全局变量 右马_下方右棋大小, 整数型, , , 
.全局变量 右马_左方左棋大小, 整数型, , , 
.全局变量 右马_左方右棋大小, 整数型, , , 
.全局变量 右马_右方左棋大小, 整数型, , , 
.全局变量 右马_右方右棋大小, 整数型, , , 
.全局变量 匿名全局变量_4371, 空白型, , , 
.全局变量 右狗_上方左棋大小, 整数型, , , 
.全局变量 右狗_上方右棋大小, 整数型, , , 
.全局变量 右狗_下方左棋大小, 整数型, , , 
.全局变量 右狗_下方右棋大小, 整数型, , , 
.全局变量 右狗_左方左棋大小, 整数型, , , 
.全局变量 右狗_左方右棋大小, 整数型, , , 
.全局变量 右狗_右方左棋大小, 整数型, , , 
.全局变量 右狗_右方右棋大小, 整数型, , , 
.全局变量 匿名全局变量_4372, 空白型, , , 
.全局变量 右鸡_上方左棋大小, 整数型, , , 
.全局变量 右鸡_上方右棋大小, 整数型, , , 
.全局变量 右鸡_下方左棋大小, 整数型, , , 
.全局变量 右鸡_下方右棋大小, 整数型, , , 
.全局变量 右鸡_左方左棋大小, 整数型, , , 
.全局变量 右鸡_左方右棋大小, 整数型, , , 
.全局变量 右鸡_右方左棋大小, 整数型, , , 
.全局变量 右鸡_右方右棋大小, 整数型, , , 
.全局变量 匿名全局变量_4373, 空白型, , , 
.全局变量 右蛇_上方左棋大小, 整数型, , , 
.全局变量 右蛇_上方右棋大小, 整数型, , , 
.全局变量 右蛇_下方左棋大小, 整数型, , , 
.全局变量 右蛇_下方右棋大小, 整数型, , , 
.全局变量 右蛇_左方左棋大小, 整数型, , , 
.全局变量 右蛇_左方右棋大小, 整数型, , , 
.全局变量 右蛇_右方左棋大小, 整数型, , , 
.全局变量 右蛇_右方右棋大小, 整数型, , , 
.全局变量 匿名全局变量_4329, 空白型, , , 
.全局变量 匿名全局变量_3547, 空白型, , , 
.全局变量 文本配置文件, 文本型, , , 
.全局变量 当前运行路径, 文本型, , , 
.全局变量 匿名全局变量_3594, 空白型, , , 
.全局变量 匿名全局变量_3596, 空白型, , , 
.全局变量 全局鼠文本, 对话文本, , , 
.全局变量 全局蛇文本, 对话文本, , , 
.全局变量 全局鸡文本, 对话文本, , , 
.全局变量 全局狗文本, 对话文本, , , 
.全局变量 全局马文本, 对话文本, , , 
.全局变量 全局牛文本, 对话文本, , , 
.全局变量 全局虎文本, 对话文本, , , 
.全局变量 全局龙文本, 对话文本, , , 
.全局变量 全局太公文本, 对话文本, , , 
.全局变量 匿名全局变量_7463, 空白型, , , 
.全局变量 你的左右手, 逻辑型, , , 
.全局变量 机器左右手, 逻辑型, , , 
.全局变量 匿名全局变量_4281, 空白型, , , 
.全局变量 网络版, 逻辑型, , , 
.全局变量 匿名全局变量_7458, 空白型, , , 
.全局变量 对手骰子最终点数, 整数型, , , 
.全局变量 你的用户名, 文本型, , , 
.全局变量 对手用户名, 文本型, , , 
.全局变量 左棋已移动步数, 整数型, , , 
.全局变量 右棋已移动步数, 整数型, , , 

.窗口程序集 主窗口程序集, , , 易语言4.12版，WINXPSP3 2009年6月7日 制作者 阿立。

.程序集变量 匿名程序集变量_3193, 空白型, , , 最后一次修改时间：2009年7月6日
.程序集变量 匿名程序集变量_453, 空白型, , , 说明：本程序还有很多不足，如果你要修改此程序，
.程序集变量 匿名程序集变量_454, 空白型, , , 请你把修改后的程序发一份给我，我的伊妹儿是:zjgrd888@126.com
.程序集变量 左牛_向上_可移动, 逻辑型, , , 
.程序集变量 左龙_向上_可移动, 逻辑型, , , 
.程序集变量 左鸡_向上_可移动, 逻辑型, , , 
.程序集变量 左狗_向上_可移动, 逻辑型, , , 
.程序集变量 左马_向上_可移动, 逻辑型, , , 
.程序集变量 左蛇_向上_可移动, 逻辑型, , , 
.程序集变量 左虎_向上_可移动, 逻辑型, , , 
.程序集变量 左鼠_向上_可移动, 逻辑型, , , 
.程序集变量 匿名程序集变量_1869, 空白型, , , 
.程序集变量 左牛_向下_可移动, 逻辑型, , , 
.程序集变量 左龙_向下_可移动, 逻辑型, , , 
.程序集变量 左鸡_向下_可移动, 逻辑型, , , 
.程序集变量 左狗_向下_可移动, 逻辑型, , , 
.程序集变量 左马_向下_可移动, 逻辑型, , , 
.程序集变量 左蛇_向下_可移动, 逻辑型, , , 
.程序集变量 左虎_向下_可移动, 逻辑型, , , 
.程序集变量 左鼠_向下_可移动, 逻辑型, , , 
.程序集变量 匿名程序集变量_1863, 空白型, , , 
.程序集变量 左牛_向左_可移动, 逻辑型, , , 
.程序集变量 左龙_向左_可移动, 逻辑型, , , 
.程序集变量 左鸡_向左_可移动, 逻辑型, , , 
.程序集变量 左狗_向左_可移动, 逻辑型, , , 
.程序集变量 左马_向左_可移动, 逻辑型, , , 
.程序集变量 左蛇_向左_可移动, 逻辑型, , , 
.程序集变量 左虎_向左_可移动, 逻辑型, , , 
.程序集变量 左鼠_向左_可移动, 逻辑型, , , 
.程序集变量 匿名程序集变量_1886, 空白型, , , 
.程序集变量 左牛_向右_可移动, 逻辑型, , , 
.程序集变量 左龙_向右_可移动, 逻辑型, , , 
.程序集变量 左鸡_向右_可移动, 逻辑型, , , 
.程序集变量 左狗_向右_可移动, 逻辑型, , , 
.程序集变量 左马_向右_可移动, 逻辑型, , , 
.程序集变量 左蛇_向右_可移动, 逻辑型, , , 
.程序集变量 左虎_向右_可移动, 逻辑型, , , 
.程序集变量 左鼠_向右_可移动, 逻辑型, , , 
.程序集变量 匿名程序集变量_1895, 空白型, , , 
.程序集变量 右牛_向上_可移动, 逻辑型, , , 
.程序集变量 右龙_向上_可移动, 逻辑型, , , 
.程序集变量 右鸡_向上_可移动, 逻辑型, , , 
.程序集变量 右狗_向上_可移动, 逻辑型, , , 
.程序集变量 右马_向上_可移动, 逻辑型, , , 
.程序集变量 右蛇_向上_可移动, 逻辑型, , , 
.程序集变量 右虎_向上_可移动, 逻辑型, , , 
.程序集变量 右鼠_向上_可移动, 逻辑型, , , 
.程序集变量 匿名程序集变量_4616, 空白型, , , 
.程序集变量 右牛_向下_可移动, 逻辑型, , , 
.程序集变量 右龙_向下_可移动, 逻辑型, , , 
.程序集变量 右鸡_向下_可移动, 逻辑型, , , 
.程序集变量 右狗_向下_可移动, 逻辑型, , , 
.程序集变量 右马_向下_可移动, 逻辑型, , , 
.程序集变量 右蛇_向下_可移动, 逻辑型, , , 
.程序集变量 右虎_向下_可移动, 逻辑型, , , 
.程序集变量 右鼠_向下_可移动, 逻辑型, , , 
.程序集变量 匿名程序集变量_4625, 空白型, , , 
.程序集变量 右牛_向左_可移动, 逻辑型, , , 
.程序集变量 右龙_向左_可移动, 逻辑型, , , 
.程序集变量 右鸡_向左_可移动, 逻辑型, , , 
.程序集变量 右狗_向左_可移动, 逻辑型, , , 
.程序集变量 右马_向左_可移动, 逻辑型, , , 
.程序集变量 右蛇_向左_可移动, 逻辑型, , , 
.程序集变量 右虎_向左_可移动, 逻辑型, , , 
.程序集变量 右鼠_向左_可移动, 逻辑型, , , 
.程序集变量 匿名程序集变量_4634, 空白型, , , 
.程序集变量 右牛_向右_可移动, 逻辑型, , , 
.程序集变量 右龙_向右_可移动, 逻辑型, , , 
.程序集变量 右鸡_向右_可移动, 逻辑型, , , 
.程序集变量 右狗_向右_可移动, 逻辑型, , , 
.程序集变量 右马_向右_可移动, 逻辑型, , , 
.程序集变量 右蛇_向右_可移动, 逻辑型, , , 
.程序集变量 右虎_向右_可移动, 逻辑型, , , 
.程序集变量 右鼠_向右_可移动, 逻辑型, , , 
.程序集变量 匿名程序集变量_4607, 空白型, , , 
.子程序 __启动窗口_创建完毕, 空白型, , 

 ' --========  易语言资源网  (www.wodesoft.com)  ======--
 ' 努力创建完善、持续更新的易语言学习例程源码资源站
 ' --================   www.wodesoft.com  ===========--
 ' --==================   易语言资源网注意事项  ================--
 ' * 易语言资源网为易语言官方站、易语言官方论坛提供辅助资源站；
 ' 本易语言资源网( www.wodesoft.com)所有软件和资料均为软件作者提
 ' 供和网友推荐发布而来，其版权归该软件和程序源码的合法拥有者所
 ' 有，本站易语言资源网整理收集仅供易语言用户学习和易语言技术研
 ' 究探讨使用，不得用于任何商业用途。如果由于以上原因造成的版权
 ' 纠纷本站概不负责！
 ' * 本站资源未经许可，任何网站不得非法盗链及抄袭本站资源；如引用
 ' 页面，请注明来自易语言资源网，谢谢合作！
 ' --=====================   www.wodesoft.com  ================--


赋值 (当前运行路径, 取运行目录 ()) ' 得到当前运行路径
载入 (窗口_投掷骰子, , 真)


分配棋子左右手 ()

 ' 调试输出 (到数值 (你的左右手))


读文本 ()

赋值 (.内容, 到文本 (读入文件 (相加 (当前运行路径, “\游戏规则.txt”))))
赋值 (.输入方式, 1)
 ' 人机版还是网络版
 ' 选择左右手（）' 你用左棋还是右棋()

赋值 (可以发音, 真) ' 设置棋子可以发音
赋值 (可以显示文本, 真) ' 设置棋子可以显示

.未知支持库函数_24 ()

 ' 本源码来自易语言资源网(www.wodesoft.com)
初始化左右棋位置 ()
初始化左棋子 ()
初始化右棋子 ()

 ' 所有棋子的当前位置 ()

.子程序 _图片框_棋盘_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 棋子目的位置, 位置, , , 


赋值 (棋子目的位置.横坐标, 横向位置)
赋值 (棋子目的位置.纵坐标, 纵向位置)


 ' 调试输出 (“棋子目的位置.横坐标” ＋ 到文本 (棋子目的位置.横坐标))
 ' 调试输出 (“棋子目的位置.纵坐标” ＋ 到文本 (棋子目的位置.纵坐标))

.判断开始 (等于 (你的左右手, 真))
     ' *************************************************
     ' 如果移动的是左边棋子鼠 并且 准备移动了
     ' **************************************************
    
    .如果真 (并且 (等于 (左鼠_可以移动, 真), 等于 (左鼠_准备移动, 真)))
        .判断开始 (等于 (列举棋子位置 (棋子目的位置, 棋子_左鼠_不可到_位置, ), 假))
            
            棋子移动 (1, , 棋子_左鼠_当前位置, 棋子目的位置, 左鼠_上方左棋大小, 左鼠_上方右棋大小, 左鼠_下方左棋大小, 左鼠_下方右棋大小, 左鼠_左方左棋大小, 左鼠_左方右棋大小, 左鼠_右方左棋大小, 左鼠_右方右棋大小, 左鼠_向上_可移动, 左鼠_向下_可移动, 左鼠_向左_可移动, 左鼠_向右_可移动, 左鼠上方棋子可删除, 左鼠下方棋子可删除, 左鼠左方棋子可删除, 左鼠右方棋子可删除, 所有左棋的当前位置, 所有右棋的当前位置)
            
            赋值 (左鼠上方棋子可删除, 取反 (左鼠上方棋子可删除))
            赋值 (左鼠下方棋子可删除, 取反 (左鼠下方棋子可删除))
            赋值 (左鼠左方棋子可删除, 取反 (左鼠左方棋子可删除))
            赋值 (左鼠右方棋子可删除, 取反 (左鼠右方棋子可删除))
            
            赋值 (左鼠_可以移动, 取反 (左鼠_可以移动))
             ' 本源码来自易语言资源网(www.wodesoft.com)
            赋值 (所有左棋的当前位置 [1].横坐标, .左边)
            赋值 (所有左棋的当前位置 [1].纵坐标, .顶边)
            
        .默认
            播放老大你要做什么 ()
        .判断结束
        
    .如果真结束
     ' *************************************************
     ' 如果移动的是左边棋子蛇 并且 准备移动了
     ' **************************************************
    
    .如果真 (并且 (等于 (左蛇_可以移动, 真), 等于 (左蛇_准备移动, 真)))
        .判断开始 (等于 (列举棋子位置 (棋子目的位置, 棋子_左蛇_不可到_位置, ), 假))
            
            棋子移动 (1, , 棋子_左蛇_当前位置, 棋子目的位置, 左蛇_上方左棋大小, 左蛇_上方右棋大小, 左蛇_下方左棋大小, 左蛇_下方右棋大小, 左蛇_左方左棋大小, 左蛇_左方右棋大小, 左蛇_右方左棋大小, 左蛇_右方右棋大小, 左蛇_向上_可移动, 左蛇_向下_可移动, 左蛇_向左_可移动, 左蛇_向右_可移动, 左蛇上方棋子可删除, 左蛇下方棋子可删除, 左蛇左方棋子可删除, 左蛇右方棋子可删除, 所有左棋的当前位置, 所有右棋的当前位置)
            
            赋值 (左蛇上方棋子可删除, 取反 (左蛇上方棋子可删除))
            赋值 (左蛇下方棋子可删除, 取反 (左蛇下方棋子可删除))
            赋值 (左蛇左方棋子可删除, 取反 (左蛇左方棋子可删除))
            赋值 (左蛇右方棋子可删除, 取反 (左蛇右方棋子可删除))
            
            赋值 (左蛇_可以移动, 取反 (左蛇_可以移动))
            赋值 (所有左棋的当前位置 [2].横坐标, .左边)
            赋值 (所有左棋的当前位置 [2].纵坐标, .顶边)
        .默认
            播放老大你要做什么 ()
        .判断结束
        
    .如果真结束
    
    .如果真 (并且 (等于 (左鸡_可以移动, 真), 等于 (左鸡_准备移动, 真))) ' 如果移动的是左边棋子鸡
        .判断开始 (等于 (列举棋子位置 (棋子目的位置, 棋子_左鸡_不可到_位置, ), 假))
            
            棋子移动 (1, , 棋子_左鸡_当前位置, 棋子目的位置, 左鸡_上方左棋大小, 左鸡_上方右棋大小, 左鸡_下方左棋大小, 左鸡_下方右棋大小, 左鸡_左方左棋大小, 左鸡_左方右棋大小, 左鸡_右方左棋大小, 左鸡_右方右棋大小, 左鸡_向上_可移动, 左鸡_向下_可移动, 左鸡_向左_可移动, 左鸡_向右_可移动, 左鸡上方棋子可删除, 左鸡下方棋子可删除, 左鸡左方棋子可删除, 左鸡右方棋子可删除, 所有左棋的当前位置, 所有右棋的当前位置)
             ' 本源码来自易语言资源网(www.wodesoft.com)
            赋值 (左鸡上方棋子可删除, 取反 (左鸡上方棋子可删除))
            赋值 (左鸡下方棋子可删除, 取反 (左鸡下方棋子可删除))
            赋值 (左鸡左方棋子可删除, 取反 (左鸡左方棋子可删除))
            赋值 (左鸡右方棋子可删除, 取反 (左鸡右方棋子可删除))
            
            赋值 (左鸡_可以移动, 取反 (左鸡_可以移动))
            赋值 (所有左棋的当前位置 [3].横坐标, .左边)
            赋值 (所有左棋的当前位置 [3].纵坐标, .顶边)
            
        .默认
            播放老大你要做什么 ()
        .判断结束
        
    .如果真结束
     ' *************************************************
     ' 如果移动的是左边棋子狗 并且 准备移动了
     ' **************************************************
    
    .如果真 (并且 (等于 (左狗_可以移动, 真), 等于 (左狗_准备移动, 真)))
        .判断开始 (等于 (列举棋子位置 (棋子目的位置, 棋子_左狗_不可到_位置, ), 假))
            棋子移动 (1, , 棋子_左狗_当前位置, 棋子目的位置, 左狗_上方左棋大小, 左狗_上方右棋大小, 左狗_下方左棋大小, 左狗_下方右棋大小, 左狗_左方左棋大小, 左狗_左方右棋大小, 左狗_右方左棋大小, 左狗_右方右棋大小, 左狗_向上_可移动, 左狗_向下_可移动, 左狗_向左_可移动, 左狗_向右_可移动, 左狗上方棋子可删除, 左狗下方棋子可删除, 左狗左方棋子可删除, 左狗右方棋子可删除, 所有左棋的当前位置, 所有右棋的当前位置)
            
            赋值 (左狗上方棋子可删除, 取反 (左狗上方棋子可删除))
            赋值 (左狗下方棋子可删除, 取反 (左狗下方棋子可删除))
            赋值 (左狗左方棋子可删除, 取反 (左狗左方棋子可删除))
            赋值 (左狗右方棋子可删除, 取反 (左狗右方棋子可删除))
            
            赋值 (左狗_可以移动, 取反 (左狗_可以移动))
            赋值 (所有左棋的当前位置 [4].横坐标, .左边)
            赋值 (所有左棋的当前位置 [4].纵坐标, .顶边)
        .默认
            播放老大你要做什么 ()
        .判断结束
        
    .如果真结束
    
     ' *************************************************
     ' 如果移动的是左边棋子马 并且 准备移动了
     ' **************************************************
    
    .如果真 (并且 (等于 (左马_可以移动, 真), 等于 (左马_准备移动, 真)))
        .判断开始 (等于 (列举棋子位置 (棋子目的位置, 棋子_左马_不可到_位置, ), 假))
            
            
            棋子移动 (1, , 棋子_左马_当前位置, 棋子目的位置, 左马_上方左棋大小, 左马_上方右棋大小, 左马_下方左棋大小, 左马_下方右棋大小, 左马_左方左棋大小, 左马_左方右棋大小, 左马_右方左棋大小, 左马_右方右棋大小, 左马_向上_可移动, 左马_向下_可移动, 左马_向左_可移动, 左马_向右_可移动, 左马上方棋子可删除, 左马下方棋子可删除, 左马左方棋子可删除, 左马右方棋子可删除, 所有左棋的当前位置, 所有右棋的当前位置)
            
            赋值 (左马上方棋子可删除, 取反 (左马上方棋子可删除))
            赋值 (左马下方棋子可删除, 取反 (左马下方棋子可删除))
            赋值 (左马左方棋子可删除, 取反 (左马左方棋子可删除))
            赋值 (左马右方棋子可删除, 取反 (左马右方棋子可删除))
            
            赋值 (左马_可以移动, 取反 (左马_可以移动))
            赋值 (所有左棋的当前位置 [5].横坐标, .左边)
            赋值 (所有左棋的当前位置 [5].纵坐标, .顶边)
        .默认
            播放老大你要做什么 ()
        .判断结束
         ' 本源码来自易语言资源网(www.wodesoft.com)
    .如果真结束
    
    
     ' *************************************************
     ' 如果移动的是左边棋子牛 并且 准备移动了
     ' **************************************************
    .如果真 (并且 (等于 (左牛_可以移动, 真), 等于 (左牛_准备移动, 真)))
         ' 棋子目的位置是不可到达位置么，不是的话就执行下面语句
        .判断开始 (等于 (列举棋子位置 (棋子目的位置, 棋子_左牛_不可到_位置, ), 假))
            
            
            棋子移动 (1, , 棋子_左牛_当前位置, 棋子目的位置, 左牛_上方左棋大小, 左牛_上方右棋大小, 左牛_下方左棋大小, 左牛_下方右棋大小, 左牛_左方左棋大小, 左牛_左方右棋大小, 左牛_右方左棋大小, 左牛_右方右棋大小, 左牛_向上_可移动, 左牛_向下_可移动, 左牛_向左_可移动, 左牛_向右_可移动, 左牛上方棋子可删除, 左牛下方棋子可删除, 左牛左方棋子可删除, 左牛右方棋子可删除, 所有左棋的当前位置, 所有右棋的当前位置)
            
            赋值 (左牛上方棋子可删除, 取反 (左牛上方棋子可删除))
            赋值 (左牛下方棋子可删除, 取反 (左牛下方棋子可删除))
            赋值 (左牛左方棋子可删除, 取反 (左牛左方棋子可删除))
            赋值 (左牛右方棋子可删除, 取反 (左牛右方棋子可删除))
            
            
            赋值 (左牛_可以移动, 取反 (左牛_可以移动))
            赋值 (所有左棋的当前位置 [6].横坐标, .左边)
            赋值 (所有左棋的当前位置 [6].纵坐标, .顶边)
            
        .默认
            播放老大你要做什么 ()
        .判断结束
        
    .如果真结束
    
    
     ' *************************************************
     ' 如果移动的是左边棋子虎 并且 准备移动了
     ' **************************************************
    .如果真 (并且 (等于 (左虎_可以移动, 真), 等于 (左虎_准备移动, 真)))
        .判断开始 (等于 (列举棋子位置 (棋子目的位置, 棋子_左虎_不可到_位置, ), 假))
            
            棋子移动 (1, , 棋子_左虎_当前位置, 棋子目的位置, 左虎_上方左棋大小, 左虎_上方右棋大小, 左虎_下方左棋大小, 左虎_下方右棋大小, 左虎_左方左棋大小, 左虎_左方右棋大小, 左虎_右方左棋大小, 左虎_右方右棋大小, 左虎_向上_可移动, 左虎_向下_可移动, 左虎_向左_可移动, 左虎_向右_可移动, 左虎上方棋子可删除, 左虎下方棋子可删除, 左虎左方棋子可删除, 左虎右方棋子可删除, 所有左棋的当前位置, 所有右棋的当前位置)
            
            赋值 (左虎上方棋子可删除, 取反 (左虎上方棋子可删除))
            赋值 (左虎下方棋子可删除, 取反 (左虎下方棋子可删除))
            赋值 (左虎左方棋子可删除, 取反 (左虎左方棋子可删除))
            赋值 (左虎右方棋子可删除, 取反 (左虎右方棋子可删除))
            
            
            赋值 (左虎_可以移动, 取反 (左虎_可以移动))
            赋值 (所有左棋的当前位置 [7].横坐标, .左边)
            赋值 (所有左棋的当前位置 [7].纵坐标, .顶边)
        .默认
            播放老大你要做什么 ()
        .判断结束
        
    .如果真结束
    
     ' *************************************************
     ' 如果移动的是左边棋子龙 并且 准备移动了
     ' **************************************************
    
    .如果真 (并且 (等于 (左龙_可以移动, 真), 等于 (左龙_准备移动, 真)))
        .判断开始 (等于 (列举棋子位置 (棋子目的位置, 棋子_左龙_不可到_位置, ), 假))
            
            棋子移动 (1, , 棋子_左龙_当前位置, 棋子目的位置, 左龙_上方左棋大小, 左龙_上方右棋大小, 左龙_下方左棋大小, 左龙_下方右棋大小, 左龙_左方左棋大小, 左龙_左方右棋大小, 左龙_右方左棋大小, 左龙_右方右棋大小, 左龙_向上_可移动, 左龙_向下_可移动, 左龙_向左_可移动, 左龙_向右_可移动, 左龙上方棋子可删除, 左龙下方棋子可删除, 左龙左方棋子可删除, 左龙右方棋子可删除, 所有左棋的当前位置, 所有右棋的当前位置)
            
            赋值 (左龙上方棋子可删除, 取反 (左龙上方棋子可删除))
            赋值 (左龙下方棋子可删除, 取反 (左龙下方棋子可删除))
            赋值 (左龙左方棋子可删除, 取反 (左龙左方棋子可删除))
            赋值 (左龙右方棋子可删除, 取反 (左龙右方棋子可删除))
             ' 本源码来自易语言资源网(www.wodesoft.com)
            
            赋值 (左龙_可以移动, 取反 (左龙_可以移动))
            赋值 (所有左棋的当前位置 [8].横坐标, .左边)
            赋值 (所有左棋的当前位置 [8].纵坐标, .顶边)
            
        .默认
            播放老大你要做什么 ()
        .判断结束
        
    .如果真结束
     ' ------------------------------------------------------------
    
.默认
     ' ------------------------------------------------------------
     ' 右棋移动判断
     ' ------------------------------------------------------------
    .如果真 (并且 (等于 (右鼠_可以移动, 真), 等于 (右鼠_准备移动, 真)))
        .判断开始 (等于 (列举棋子位置 (棋子目的位置, 棋子_右鼠_不可到_位置, ), 假))
             ' 2代表是右棋
            棋子移动 (2, , 棋子_右鼠_当前位置, 棋子目的位置, 右鼠_上方左棋大小, 右鼠_上方右棋大小, 右鼠_下方左棋大小, 右鼠_下方右棋大小, 右鼠_左方左棋大小, 右鼠_左方右棋大小, 右鼠_右方左棋大小, 右鼠_右方右棋大小, 右鼠_向上_可移动, 右鼠_向下_可移动, 右鼠_向左_可移动, 右鼠_向右_可移动, 右鼠上方棋子可删除, 右鼠下方棋子可删除, 右鼠左方棋子可删除, 右鼠右方棋子可删除, 所有左棋的当前位置, 所有右棋的当前位置)
            
            赋值 (右鼠上方棋子可删除, 取反 (右鼠上方棋子可删除))
            赋值 (右鼠下方棋子可删除, 取反 (右鼠下方棋子可删除))
            赋值 (右鼠左方棋子可删除, 取反 (右鼠左方棋子可删除))
            赋值 (右鼠右方棋子可删除, 取反 (右鼠右方棋子可删除))
            
            赋值 (右鼠_可以移动, 取反 (右鼠_可以移动))
            
            赋值 (所有右棋的当前位置 [1].横坐标, .左边)
            赋值 (所有右棋的当前位置 [1].纵坐标, .顶边)
            
        .默认
            播放老大你要做什么 ()
        .判断结束
        
    .如果真结束
    
    .如果真 (并且 (等于 (右蛇_可以移动, 真), 等于 (右蛇_准备移动, 真)))
        .判断开始 (等于 (列举棋子位置 (棋子目的位置, 棋子_右蛇_不可到_位置, ), 假))
            
            棋子移动 (2, , 棋子_右蛇_当前位置, 棋子目的位置, 右蛇_上方左棋大小, 右蛇_上方右棋大小, 右蛇_下方左棋大小, 右蛇_下方右棋大小, 右蛇_左方左棋大小, 右蛇_左方右棋大小, 右蛇_右方左棋大小, 右蛇_右方右棋大小, 右蛇_向上_可移动, 右蛇_向下_可移动, 右蛇_向左_可移动, 右蛇_向右_可移动, 右蛇上方棋子可删除, 右蛇下方棋子可删除, 右蛇左方棋子可删除, 右蛇右方棋子可删除, 所有左棋的当前位置, 所有右棋的当前位置)
            
            赋值 (右蛇上方棋子可删除, 取反 (右蛇上方棋子可删除))
            赋值 (右蛇下方棋子可删除, 取反 (右蛇下方棋子可删除))
            赋值 (右蛇左方棋子可删除, 取反 (右蛇左方棋子可删除))
            赋值 (右蛇右方棋子可删除, 取反 (右蛇右方棋子可删除))
            
            赋值 (右蛇_可以移动, 取反 (右蛇_可以移动))
            赋值 (所有右棋的当前位置 [2].横坐标, .左边)
            赋值 (所有右棋的当前位置 [2].纵坐标, .顶边)
        .默认
            播放老大你要做什么 ()
        .判断结束
        
    .如果真结束
    
    .如果真 (并且 (等于 (右鸡_可以移动, 真), 等于 (右鸡_准备移动, 真))) ' 如果移动的是右边棋子鸡
        .判断开始 (等于 (列举棋子位置 (棋子目的位置, 棋子_右鸡_不可到_位置, ), 假))
            
            棋子移动 (2, , 棋子_右鸡_当前位置, 棋子目的位置, 右鸡_上方左棋大小, 右鸡_上方右棋大小, 右鸡_下方左棋大小, 右鸡_下方右棋大小, 右鸡_左方左棋大小, 右鸡_左方右棋大小, 右鸡_右方左棋大小, 右鸡_右方右棋大小, 右鸡_向上_可移动, 右鸡_向下_可移动, 右鸡_向左_可移动, 右鸡_向右_可移动, 右鸡上方棋子可删除, 右鸡下方棋子可删除, 右鸡左方棋子可删除, 右鸡右方棋子可删除, 所有左棋的当前位置, 所有右棋的当前位置)
            
            赋值 (右鸡上方棋子可删除, 取反 (右鸡上方棋子可删除))
            赋值 (右鸡下方棋子可删除, 取反 (右鸡下方棋子可删除))
            赋值 (右鸡左方棋子可删除, 取反 (右鸡左方棋子可删除))
            赋值 (右鸡右方棋子可删除, 取反 (右鸡右方棋子可删除))
            
            赋值 (右鸡_可以移动, 取反 (右鸡_可以移动))
            赋值 (所有右棋的当前位置 [3].横坐标, .左边)
            赋值 (所有右棋的当前位置 [3].纵坐标, .顶边)
            
        .默认
            播放老大你要做什么 ()
        .判断结束
        
    .如果真结束
    
    .如果真 (并且 (等于 (右狗_可以移动, 真), 等于 (右狗_准备移动, 真)))
        .判断开始 (等于 (列举棋子位置 (棋子目的位置, 棋子_右狗_不可到_位置, ), 假))
            棋子移动 (2, , 棋子_右狗_当前位置, 棋子目的位置, 右狗_上方左棋大小, 右狗_上方右棋大小, 右狗_下方左棋大小, 右狗_下方右棋大小, 右狗_左方左棋大小, 右狗_左方右棋大小, 右狗_右方左棋大小, 右狗_右方右棋大小, 右狗_向上_可移动, 右狗_向下_可移动, 右狗_向左_可移动, 右狗_向右_可移动, 右狗上方棋子可删除, 右狗下方棋子可删除, 右狗左方棋子可删除, 右狗右方棋子可删除, 所有左棋的当前位置, 所有右棋的当前位置)
            
            赋值 (右狗上方棋子可删除, 取反 (右狗上方棋子可删除))
            赋值 (右狗下方棋子可删除, 取反 (右狗下方棋子可删除))
            赋值 (右狗左方棋子可删除, 取反 (右狗左方棋子可删除))
            赋值 (右狗右方棋子可删除, 取反 (右狗右方棋子可删除))
            
            赋值 (右狗_可以移动, 取反 (右狗_可以移动))
            赋值 (所有右棋的当前位置 [4].横坐标, .左边)
            赋值 (所有右棋的当前位置 [4].纵坐标, .顶边)
        .默认
            播放老大你要做什么 ()
        .判断结束
        
    .如果真结束
    
    
     ' *************************************************
     ' 如果移动的是右边棋子马 并且 准备移动了
     ' **************************************************
    
    .如果真 (并且 (等于 (右马_可以移动, 真), 等于 (右马_准备移动, 真)))
        .判断开始 (等于 (列举棋子位置 (棋子目的位置, 棋子_右马_不可到_位置, ), 假))
            棋子移动 (2, , 棋子_右马_当前位置, 棋子目的位置, 右马_上方左棋大小, 右马_上方右棋大小, 右马_下方左棋大小, 右马_下方右棋大小, 右马_左方左棋大小, 右马_左方右棋大小, 右马_右方左棋大小, 右马_右方右棋大小, 右马_向上_可移动, 右马_向下_可移动, 右马_向左_可移动, 右马_向右_可移动, 右马上方棋子可删除, 右马下方棋子可删除, 右马左方棋子可删除, 右马右方棋子可删除, 所有左棋的当前位置, 所有右棋的当前位置)
            
            赋值 (右马上方棋子可删除, 取反 (右马上方棋子可删除))
            赋值 (右马下方棋子可删除, 取反 (右马下方棋子可删除))
            赋值 (右马左方棋子可删除, 取反 (右马左方棋子可删除))
            赋值 (右马右方棋子可删除, 取反 (右马右方棋子可删除))
            
            赋值 (右马_可以移动, 取反 (右马_可以移动))
            赋值 (所有右棋的当前位置 [5].横坐标, .左边)
            赋值 (所有右棋的当前位置 [5].纵坐标, .顶边)
        .默认
            播放老大你要做什么 ()
        .判断结束
        
    .如果真结束
    
    
     ' *************************************************
     ' 如果移动的是右边棋子牛 并且 准备移动了
     ' **************************************************
    .如果真 (并且 (等于 (右牛_可以移动, 真), 等于 (右牛_准备移动, 真)))
         ' 棋子目的位置是不可到达位置么，不是的话就执行下面语句
        .判断开始 (等于 (列举棋子位置 (棋子目的位置, 棋子_右牛_不可到_位置, ), 假))
            棋子移动 (2, , 棋子_右牛_当前位置, 棋子目的位置, 右牛_上方左棋大小, 右牛_上方右棋大小, 右牛_下方左棋大小, 右牛_下方右棋大小, 右牛_左方左棋大小, 右牛_左方右棋大小, 右牛_右方左棋大小, 右牛_右方右棋大小, 右牛_向上_可移动, 右牛_向下_可移动, 右牛_向左_可移动, 右牛_向右_可移动, 右牛上方棋子可删除, 右牛下方棋子可删除, 右牛左方棋子可删除, 右牛右方棋子可删除, 所有左棋的当前位置, 所有右棋的当前位置)
            
            赋值 (右牛上方棋子可删除, 取反 (右牛上方棋子可删除))
            赋值 (右牛下方棋子可删除, 取反 (右牛下方棋子可删除))
            赋值 (右牛左方棋子可删除, 取反 (右牛左方棋子可删除))
            赋值 (右牛右方棋子可删除, 取反 (右牛右方棋子可删除))
            
            
            赋值 (右牛_可以移动, 取反 (右牛_可以移动))
            赋值 (所有右棋的当前位置 [6].横坐标, .左边)
            赋值 (所有右棋的当前位置 [6].纵坐标, .顶边)
            
        .默认
            播放老大你要做什么 ()
        .判断结束
        
    .如果真结束
    
    
     ' *************************************************
     ' 如果移动的是右边棋子虎 并且 准备移动了
     ' **************************************************
    .如果真 (并且 (等于 (右虎_可以移动, 真), 等于 (右虎_准备移动, 真)))
        .判断开始 (等于 (列举棋子位置 (棋子目的位置, 棋子_右虎_不可到_位置, ), 假))
            
            棋子移动 (2, , 棋子_右虎_当前位置, 棋子目的位置, 右虎_上方左棋大小, 右虎_上方右棋大小, 右虎_下方左棋大小, 右虎_下方右棋大小, 右虎_左方左棋大小, 右虎_左方右棋大小, 右虎_右方左棋大小, 右虎_右方右棋大小, 右虎_向上_可移动, 右虎_向下_可移动, 右虎_向左_可移动, 右虎_向右_可移动, 右虎上方棋子可删除, 右虎下方棋子可删除, 右虎左方棋子可删除, 右虎右方棋子可删除, 所有左棋的当前位置, 所有右棋的当前位置)
            
            赋值 (右虎上方棋子可删除, 取反 (右虎上方棋子可删除))
            赋值 (右虎下方棋子可删除, 取反 (右虎下方棋子可删除))
            赋值 (右虎左方棋子可删除, 取反 (右虎左方棋子可删除))
            赋值 (右虎右方棋子可删除, 取反 (右虎右方棋子可删除))
            
            
            赋值 (右虎_可以移动, 取反 (右虎_可以移动))
            赋值 (所有右棋的当前位置 [7].横坐标, .左边)
            赋值 (所有右棋的当前位置 [7].纵坐标, .顶边)
        .默认
            播放老大你要做什么 ()
        .判断结束
        
    .如果真结束
    
    .如果真 (并且 (等于 (右龙_可以移动, 真), 等于 (右龙_准备移动, 真)))
        .判断开始 (等于 (列举棋子位置 (棋子目的位置, 棋子_右龙_不可到_位置, ), 假))
            
            棋子移动 (2, , 棋子_右龙_当前位置, 棋子目的位置, 右龙_上方左棋大小, 右龙_上方右棋大小, 右龙_下方左棋大小, 右龙_下方右棋大小, 右龙_左方左棋大小, 右龙_左方右棋大小, 右龙_右方左棋大小, 右龙_右方右棋大小, 右龙_向上_可移动, 右龙_向下_可移动, 右龙_向左_可移动, 右龙_向右_可移动, 右龙上方棋子可删除, 右龙下方棋子可删除, 右龙左方棋子可删除, 右龙右方棋子可删除, 所有左棋的当前位置, 所有右棋的当前位置)
            
            赋值 (右龙上方棋子可删除, 取反 (右龙上方棋子可删除))
            赋值 (右龙下方棋子可删除, 取反 (右龙下方棋子可删除))
            赋值 (右龙左方棋子可删除, 取反 (右龙左方棋子可删除))
            赋值 (右龙右方棋子可删除, 取反 (右龙右方棋子可删除))
            
            
            赋值 (右龙_可以移动, 取反 (右龙_可以移动))
            赋值 (所有右棋的当前位置 [8].横坐标, .左边)
            赋值 (所有右棋的当前位置 [8].纵坐标, .顶边)
            
        .默认
            播放老大你要做什么 ()
        .判断结束
        
    .如果真结束
    
    
.判断结束
 ' ------------------------------------------------------------


连续赋值 (假, 左牛_准备移动, 左龙_准备移动, 左鸡_准备移动, 左狗_准备移动, 左马_准备移动, 左蛇_准备移动, 左虎_准备移动, 左鼠_准备移动, 右牛_准备移动, 右龙_准备移动, 右鸡_准备移动, 右狗_准备移动, 右马_准备移动, 右蛇_准备移动, 右虎_准备移动, 右鼠_准备移动)




.子程序 _图形按钮_鼠_左_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 上方有无棋子, 逻辑型, , , 
.局部变量 上方棋子大小, 整数型, , , 
.局部变量 上方是敌是友, 逻辑型, , , 
.局部变量 下方有无棋子, 逻辑型, , , 
.局部变量 下方棋子大小, 整数型, , , 
.局部变量 下方是敌是友, 逻辑型, , , 
.局部变量 左方有无棋子, 逻辑型, , , 
.局部变量 左方棋子大小, 整数型, , , 
.局部变量 左方是敌是友, 逻辑型, , , 
.局部变量 右方有无棋子, 逻辑型, , , 
.局部变量 右方棋子大小, 整数型, , , 
.局部变量 右方是敌是友, 逻辑型, , , 
.局部变量 鼠文本, 文本型, , , 
.局部变量 横坐标, 整数型, , , 
.局部变量 纵坐标, 整数型, , , 

赋值 (棋子_左鼠_当前位置.横坐标, .左边) ' 得到左棋子鼠的当前位置
赋值 (棋子_左鼠_当前位置.纵坐标, .顶边)
赋值 (横坐标, .左边) ' 得到左棋子鼠的当前位置
赋值 (纵坐标, .顶边)


 ' ---------------------------------------------------------------------------------------------------------------

 ' 判断左棋子鼠上方有无棋子
赋值 (上方有无棋子,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].上方有无棋子)
赋值 (下方有无棋子,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].下方有无棋子)
赋值 (左方有无棋子,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].左方有无棋子)
赋值 (右方有无棋子,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].右方有无棋子)
 ' 判断左棋子鼠上方是敌是友
赋值 (上方是敌是友,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].上方是敌是友)
赋值 (下方是敌是友,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].下方是敌是友)
赋值 (左方是敌是友,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].左方是敌是友)
赋值 (右方是敌是友,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].右方是敌是友)

.判断开始 (等于 (你的左右手, 真)) ' 如果你的是左棋的话才进行移动判断
    
    赋值 (鼠文本, 全局鼠文本.对自己说)
    
    赋值 (上方棋子大小,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].上方右棋子大小)
    赋值 (左鼠_上方右棋大小, 上方棋子大小)
    
    .判断开始 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 假)), 并且 (等于 (上方有无棋子, 真), 小于 (上方棋子大小, 8), 大于 (上方棋子大小, #棋子_鼠_大小))))
        
        赋值 (左鼠_向上_可移动, 假)
    .默认
        
        .判断开始 (等于 (上方有无棋子, 真))
            赋值 (左鼠上方棋子可删除, 真)
        .默认
            赋值 (左鼠上方棋子可删除, 假)
        .判断结束
        
        赋值 (左鼠_向上_可移动, 真)
    .判断结束
    
    
    
     ' ---------------------------------------------------------------------------------------------------------------
    赋值 (下方棋子大小,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].下方右棋子大小)
    
     ' 调试输出 (到文本 (下方棋子大小))
    赋值 (左鼠_下方右棋大小, 下方棋子大小)
    
    .判断开始 (或者 (并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 假)), 并且 (等于 (下方有无棋子, 真), 小于 (下方棋子大小, 8), 大于 (下方棋子大小, #棋子_鼠_大小))))
        赋值 (左鼠_向下_可移动, 假)
    .默认
        
        .判断开始 (等于 (下方有无棋子, 真))
            赋值 (左鼠下方棋子可删除, 真)
        .默认
            赋值 (左鼠下方棋子可删除, 假)
        .判断结束
        
        赋值 (左鼠_向下_可移动, 真)
    .判断结束
     ' ---------------------------------------------------------------------------------------------------------------
    赋值 (左方棋子大小,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].左方右棋子大小)
    赋值 (左鼠_左方右棋大小, 左方棋子大小)
     ' 调试输出 (到文本 (左方棋子大小))
    .判断开始 (或者 (并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 假)), 并且 (等于 (左方有无棋子, 真), 小于 (左方棋子大小, 8), 大于 (左方棋子大小, #棋子_鼠_大小))))
        赋值 (左鼠_向左_可移动, 假)
    .默认
        
        .判断开始 (等于 (左方有无棋子, 真))
            赋值 (左鼠左方棋子可删除, 真)
        .默认
            赋值 (左鼠左方棋子可删除, 假)
        .判断结束
        赋值 (左鼠_向左_可移动, 真)
    .判断结束
     ' ---------------------------------------------------------------------------------------------------------------
    
    赋值 (右方棋子大小,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].右方右棋子大小)
    赋值 (左鼠_右方右棋大小, 右方棋子大小)
    
    
    .判断开始 (或者 (并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 假)), 并且 (等于 (右方有无棋子, 真), 小于 (右方棋子大小, 8), 大于 (右方棋子大小, #棋子_鼠_大小))))
        
        赋值 (左鼠_向右_可移动, 假)
    .默认
        
        .判断开始 (等于 (右方有无棋子, 真))
            赋值 (左鼠右方棋子可删除, 真)
        .默认
            赋值 (左鼠右方棋子可删除, 假)
        .判断结束
        赋值 (左鼠_向右_可移动, 真)
    .判断结束
    
    
    
    连续赋值 (假, 左龙_准备移动, 左鸡_准备移动, 左狗_准备移动, 左马_准备移动, 左蛇_准备移动, 左牛_准备移动, 左虎_准备移动)
    
    赋值 (左鼠_准备移动, 真)
    
    赋值 (左鼠_可以移动, 真)
    
    
    .如果真 (可以发音)
        播放鼠叫 ()
    .如果真结束
    
.默认
     ' ////////////////////////////////////////////////////////////////////////////////////////////////////////
     ' -------------------------------------------------------------------------------------------------------
    
    .判断开始 (并且 (等于 (右牛_可以移动, 真), 等于 (右牛_准备移动, 真)))
        .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
            .如果真 (可以发音)
                播放鼠叫 ()
            .如果真结束
            赋值 (鼠文本, 全局鼠文本.对牛说) ' 龙对牛说的话
            删除左棋子鼠 ()
            赋值 (.顶边, 纵坐标)
            赋值 (.左边, 横坐标)
            赋值 (所有右棋的当前位置 [6].横坐标, .左边)
            赋值 (所有右棋的当前位置 [6].纵坐标, .顶边)
            
        .如果真结束
        
    .默认
        
        .判断开始 (并且 (等于 (右狗_可以移动, 真), 等于 (右狗_准备移动, 真)))
            .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                .如果真 (可以发音)
                    播放鼠叫 ()
                .如果真结束
                赋值 (鼠文本, 全局鼠文本.对狗说)
                删除左棋子鼠 ()
                赋值 (.顶边, 纵坐标)
                赋值 (.左边, 横坐标)
                赋值 (所有右棋的当前位置 [4].横坐标, .左边)
                赋值 (所有右棋的当前位置 [4].纵坐标, .顶边)
                
            .如果真结束
            
        .默认
            
            .判断开始 (并且 (等于 (右鸡_可以移动, 真), 等于 (右鸡_准备移动, 真)))
                .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                    .如果真 (可以发音)
                        播放鼠叫 ()
                    .如果真结束
                    
                    赋值 (鼠文本, 全局鼠文本.对鸡说)
                    删除左棋子鼠 ()
                    赋值 (.顶边, 纵坐标)
                    赋值 (.左边, 横坐标)
                    赋值 (所有右棋的当前位置 [3].横坐标, .左边)
                    赋值 (所有右棋的当前位置 [3].纵坐标, .顶边)
                    
                .如果真结束
                
            .默认
                
                .判断开始 (并且 (等于 (右马_可以移动, 真), 等于 (右马_准备移动, 真)))
                    .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                        .如果真 (可以发音)
                            播放鼠叫 ()
                        .如果真结束
                        
                        赋值 (鼠文本, 全局鼠文本.对马说)
                        删除左棋子鼠 ()
                        赋值 (.顶边, 纵坐标)
                        赋值 (.左边, 横坐标)
                        赋值 (所有右棋的当前位置 [5].横坐标, .左边)
                        赋值 (所有右棋的当前位置 [5].纵坐标, .顶边)
                        
                    .如果真结束
                    
                .默认
                    
                    .判断开始 (并且 (等于 (右蛇_可以移动, 真), 等于 (右蛇_准备移动, 真)))
                        .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                            .如果真 (可以发音)
                                播放鼠叫 ()
                            .如果真结束
                            
                            赋值 (鼠文本, 全局鼠文本.对蛇说)
                            删除左棋子鼠 ()
                            赋值 (.顶边, 纵坐标)
                            赋值 (.左边, 横坐标)
                            赋值 (所有右棋的当前位置 [2].横坐标, .左边)
                            赋值 (所有右棋的当前位置 [2].纵坐标, .顶边)
                            
                        .如果真结束
                        
                    .默认
                        .判断开始 (并且 (等于 (右虎_可以移动, 真), 等于 (右虎_准备移动, 真)))
                            .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                                .如果真 (可以发音)
                                    播放鼠叫 ()
                                .如果真结束
                                
                                赋值 (鼠文本, 全局鼠文本.对虎说)
                                删除左棋子鼠 ()
                                赋值 (.顶边, 纵坐标)
                                赋值 (.左边, 横坐标)
                                赋值 (所有右棋的当前位置 [7].横坐标, .左边)
                                赋值 (所有右棋的当前位置 [7].纵坐标, .顶边)
                                
                            .如果真结束
                            
                        .默认
                            .判断开始 (并且 (等于 (右鼠_可以移动, 真), 等于 (右鼠_准备移动, 真)))
                                .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                                    .如果真 (可以发音)
                                        播放鼠叫 ()
                                    .如果真结束
                                    
                                    赋值 (鼠文本, 全局鼠文本.对鼠说)
                                    删除左棋子鼠 ()
                                    
                                    赋值 (.顶边, 纵坐标)
                                    赋值 (.左边, 横坐标)
                                    赋值 (所有右棋的当前位置 [1].横坐标, .左边) ' 这里一定不要漏掉！
                                    赋值 (所有右棋的当前位置 [1].纵坐标, .顶边)
                                    
                                .如果真结束
                                
                            .默认
                                .判断开始 (并且 (等于 (右龙_可以移动, 真), 等于 (右龙_准备移动, 真)))
                                    .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                                        .如果真 (可以发音)
                                            播放鼠叫 ()
                                        .如果真结束
                                        赋值 (鼠文本, 全局鼠文本.对龙说)
                                    .如果真结束
                                    
                                .默认
                                    
                                    
                                    赋值 (鼠文本, 全局鼠文本.对自己说)
                                    .如果真 (可以发音)
                                        播放鼠叫 ()
                                    .如果真结束
                                    
                                .判断结束
                                
                            .判断结束
                            
                        .判断结束
                        
                    .判断结束
                    
                .判断结束
                
            .判断结束
            
        .判断结束
        
    .判断结束
    
.判断结束

.如果真 (可以显示文本)
    相加 (_启动窗口., 横坐标).未知支持库函数_26 (相加 (_启动窗口., 纵坐标), 鼠文本, -1, 真)
.如果真结束



.子程序 _图形按钮_蛇_左_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 上方有无棋子, 逻辑型, , , 
.局部变量 上方棋子大小, 整数型, , , 
.局部变量 上方是敌是友, 逻辑型, , , 
.局部变量 下方有无棋子, 逻辑型, , , 
.局部变量 下方棋子大小, 整数型, , , 
.局部变量 下方是敌是友, 逻辑型, , , 
.局部变量 左方有无棋子, 逻辑型, , , 
.局部变量 左方棋子大小, 整数型, , , 
.局部变量 左方是敌是友, 逻辑型, , , 
.局部变量 右方有无棋子, 逻辑型, , , 
.局部变量 右方棋子大小, 整数型, , , 
.局部变量 右方是敌是友, 逻辑型, , , 
.局部变量 匿名局部变量_2810, 空白型, , , 
.局部变量 蛇文本, 文本型, , , 
.局部变量 横坐标, 整数型, , , 
.局部变量 纵坐标, 整数型, , , 

赋值 (棋子_左蛇_当前位置.横坐标, .左边) ' 得到左棋子蛇的当前位置
赋值 (棋子_左蛇_当前位置.纵坐标, .顶边)

赋值 (横坐标, .左边) ' 得到左棋子蛇的当前位置
赋值 (纵坐标, .顶边)

 ' ---------------------------------------------------------------------------------------------------------------

 ' 判断左棋子蛇上方有无棋子
赋值 (上方有无棋子,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].上方有无棋子)
赋值 (下方有无棋子,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].下方有无棋子)
赋值 (左方有无棋子,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].左方有无棋子)
赋值 (右方有无棋子,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].右方有无棋子)

 ' 判断左棋子蛇上方是敌是友
赋值 (上方是敌是友,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].上方是敌是友)
赋值 (下方是敌是友,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].下方是敌是友)
赋值 (左方是敌是友,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].左方是敌是友)
赋值 (右方是敌是友,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].右方是敌是友)

.判断开始 (等于 (你的左右手, 真)) ' 如果你的是左棋的话才进行移动判断
    
    赋值 (蛇文本, 全局蛇文本.对自己说)
    
    赋值 (上方棋子大小,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].上方右棋子大小)
     ' 左蛇_上方左棋大小
    赋值 (左蛇_上方右棋大小, 上方棋子大小)
    
    .判断开始 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 假)), 并且 (等于 (上方有无棋子, 真), 小于 (上方棋子大小, 9), 大于 (上方棋子大小, #棋子_蛇_大小))))
        赋值 (左蛇_向上_可移动, 假)
    .默认
        
        .判断开始 (等于 (上方有无棋子, 真))
            赋值 (左蛇上方棋子可删除, 真)
        .默认
            赋值 (左蛇上方棋子可删除, 假)
        .判断结束
        
        赋值 (左蛇_向上_可移动, 真)
    .判断结束
    
    
    
     ' ---------------------------------------------------------------------------------------------------------------
    赋值 (下方棋子大小,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].下方右棋子大小)
     ' 调试输出 (到文本 (下方棋子大小))
    赋值 (左蛇_下方右棋大小, 下方棋子大小)
    
    
    .判断开始 (或者 (并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 假)), 并且 (等于 (下方有无棋子, 真), 小于 (下方棋子大小, 9), 大于 (下方棋子大小, #棋子_蛇_大小))))
        赋值 (左蛇_向下_可移动, 假)
    .默认
        
        .判断开始 (等于 (下方有无棋子, 真))
            赋值 (左蛇下方棋子可删除, 真)
        .默认
            赋值 (左蛇下方棋子可删除, 假)
        .判断结束
        
        赋值 (左蛇_向下_可移动, 真)
    .判断结束
     ' ---------------------------------------------------------------------------------------------------------------
    赋值 (左方棋子大小,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].左方右棋子大小)
    赋值 (左蛇_左方右棋大小, 左方棋子大小)
    
    
     ' 调试输出 (到文本 (左方棋子大小))
    .判断开始 (或者 (并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 假)), 并且 (等于 (左方有无棋子, 真), 小于 (左方棋子大小, 9), 大于 (左方棋子大小, #棋子_蛇_大小))))
        赋值 (左蛇_向左_可移动, 假)
    .默认
        
        .判断开始 (等于 (左方有无棋子, 真))
            赋值 (左蛇左方棋子可删除, 真)
        .默认
            赋值 (左蛇左方棋子可删除, 假)
        .判断结束
        赋值 (左蛇_向左_可移动, 真)
    .判断结束
     ' ---------------------------------------------------------------------------------------------------------------
    赋值 (右方棋子大小,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].右方右棋子大小)
    赋值 (左蛇_右方右棋大小, 右方棋子大小)
    
    
    
    .判断开始 (或者 (并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 假)), 并且 (等于 (右方有无棋子, 真), 小于 (右方棋子大小, 9), 大于 (右方棋子大小, #棋子_蛇_大小))))
        赋值 (左蛇_向右_可移动, 假)
    .默认
        
        .判断开始 (等于 (右方有无棋子, 真))
            赋值 (左蛇右方棋子可删除, 真)
        .默认
            赋值 (左蛇右方棋子可删除, 假)
        .判断结束
        赋值 (左蛇_向右_可移动, 真)
    .判断结束
    
    
    
    连续赋值 (假, 左龙_准备移动, 左牛_准备移动, 左鸡_准备移动, 左狗_准备移动, 左马_准备移动, 左虎_准备移动, 左鼠_准备移动)
    
    赋值 (左蛇_准备移动, 真)
    
    赋值 (左蛇_可以移动, 真)
    
    
    .如果真 (可以发音)
        播放蛇叫 ()
    .如果真结束
    
    
.默认
    
     ' ////////////////////////////////////////////////////////////////////////////////////////////////////////
     ' -------------------------------------------------------------------------------------------------------
    
    .判断开始 (并且 (等于 (右牛_可以移动, 真), 等于 (右牛_准备移动, 真)))
        .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
            .如果真 (可以发音)
                播放蛇叫 ()
            .如果真结束
            赋值 (蛇文本, 全局蛇文本.对牛说) ' 对牛说的话
            删除左棋子蛇 ()
            赋值 (.顶边, 纵坐标)
            赋值 (.左边, 横坐标)
            赋值 (所有右棋的当前位置 [6].横坐标, .左边)
            赋值 (所有右棋的当前位置 [6].纵坐标, .顶边)
            
        .如果真结束
        
    .默认
        
        .判断开始 (并且 (等于 (右狗_可以移动, 真), 等于 (右狗_准备移动, 真)))
            .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                .如果真 (可以发音)
                    播放蛇叫 ()
                .如果真结束
                赋值 (蛇文本, 全局蛇文本.对狗说)
                删除左棋子蛇 ()
                赋值 (.顶边, 纵坐标)
                赋值 (.左边, 横坐标)
                赋值 (所有右棋的当前位置 [4].横坐标, .左边)
                赋值 (所有右棋的当前位置 [4].纵坐标, .顶边)
                
            .如果真结束
            
        .默认
            
            .判断开始 (并且 (等于 (右鸡_可以移动, 真), 等于 (右鸡_准备移动, 真)))
                .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                    .如果真 (可以发音)
                        播放蛇叫 ()
                    .如果真结束
                    
                    赋值 (蛇文本, 全局蛇文本.对鸡说)
                    删除左棋子蛇 ()
                    赋值 (.顶边, 纵坐标)
                    赋值 (.左边, 横坐标)
                    赋值 (所有右棋的当前位置 [3].横坐标, .左边)
                    赋值 (所有右棋的当前位置 [3].纵坐标, .顶边)
                    
                .如果真结束
                
            .默认
                
                .判断开始 (并且 (等于 (右马_可以移动, 真), 等于 (右马_准备移动, 真)))
                    .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                        .如果真 (可以发音)
                            播放蛇叫 ()
                        .如果真结束
                        
                        赋值 (蛇文本, 全局蛇文本.对马说)
                        删除左棋子蛇 ()
                        赋值 (.顶边, 纵坐标)
                        赋值 (.左边, 横坐标)
                        赋值 (所有右棋的当前位置 [5].横坐标, .左边)
                        赋值 (所有右棋的当前位置 [5].纵坐标, .顶边)
                        
                    .如果真结束
                    
                .默认
                    
                    .判断开始 (并且 (等于 (右蛇_可以移动, 真), 等于 (右蛇_准备移动, 真)))
                        .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                            .如果真 (可以发音)
                                播放蛇叫 ()
                            .如果真结束
                            
                            赋值 (蛇文本, 全局蛇文本.对蛇说)
                            删除左棋子蛇 ()
                            赋值 (.顶边, 纵坐标)
                            赋值 (.左边, 横坐标)
                            赋值 (所有右棋的当前位置 [2].横坐标, .左边)
                            赋值 (所有右棋的当前位置 [2].纵坐标, .顶边)
                            
                        .如果真结束
                        
                    .默认
                        .判断开始 (并且 (等于 (右虎_可以移动, 真), 等于 (右虎_准备移动, 真)))
                            .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                                .如果真 (可以发音)
                                    播放蛇叫 ()
                                .如果真结束
                                
                                赋值 (蛇文本, 全局蛇文本.对虎说)
                                删除左棋子蛇 ()
                                赋值 (.顶边, 纵坐标)
                                赋值 (.左边, 横坐标)
                                赋值 (所有右棋的当前位置 [7].横坐标, .左边)
                                赋值 (所有右棋的当前位置 [7].纵坐标, .顶边)
                                
                            .如果真结束
                            
                        .默认
                            .判断开始 (并且 (等于 (右鼠_可以移动, 真), 等于 (右鼠_准备移动, 真)))
                                .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                                    .如果真 (可以发音)
                                        播放蛇叫 ()
                                    .如果真结束
                                    
                                    赋值 (蛇文本, 全局蛇文本.对鼠说)
                                .如果真结束
                                
                            .默认
                                .判断开始 (并且 (等于 (右龙_可以移动, 真), 等于 (右龙_准备移动, 真)))
                                    .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                                        .如果真 (可以发音)
                                            播放蛇叫 ()
                                        .如果真结束
                                        赋值 (蛇文本, 全局蛇文本.对龙说)
                                        删除左棋子蛇 ()
                                        赋值 (.顶边, 纵坐标)
                                        赋值 (.左边, 横坐标)
                                        赋值 (所有右棋的当前位置 [8].横坐标, .左边)
                                        赋值 (所有右棋的当前位置 [8].纵坐标, .顶边)
                                        
                                    .如果真结束
                                    
                                .默认
                                    
                                    
                                    赋值 (蛇文本, 全局蛇文本.对自己说)
                                    .如果真 (可以发音)
                                        播放蛇叫 ()
                                    .如果真结束
                                    
                                .判断结束
                                
                            .判断结束
                            
                        .判断结束
                        
                    .判断结束
                    
                .判断结束
                
            .判断结束
            
        .判断结束
        
    .判断结束
    
    
.判断结束

.如果真 (可以显示文本)
    相加 (_启动窗口., 横坐标).未知支持库函数_26 (相加 (_启动窗口., 纵坐标), 蛇文本, -1, 真)
.如果真结束



.子程序 _图形按钮_鸡_左_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 上方有无棋子, 逻辑型, , , 
.局部变量 上方棋子大小, 整数型, , , 
.局部变量 上方是敌是友, 逻辑型, , , 
.局部变量 下方有无棋子, 逻辑型, , , 
.局部变量 下方棋子大小, 整数型, , , 
.局部变量 下方是敌是友, 逻辑型, , , 
.局部变量 左方有无棋子, 逻辑型, , , 
.局部变量 左方棋子大小, 整数型, , , 
.局部变量 左方是敌是友, 逻辑型, , , 
.局部变量 右方有无棋子, 逻辑型, , , 
.局部变量 右方棋子大小, 整数型, , , 
.局部变量 右方是敌是友, 逻辑型, , , 
.局部变量 匿名局部变量_8194, 空白型, , , 
.局部变量 鸡文本, 文本型, , , 
.局部变量 横坐标, 整数型, , , 
.局部变量 纵坐标, 整数型, , , 

赋值 (棋子_左鸡_当前位置.横坐标, .左边) ' 得到左棋子鸡的当前位置
赋值 (棋子_左鸡_当前位置.纵坐标, .顶边)
赋值 (横坐标, .左边) ' 得到左棋子鸡的当前位置
赋值 (纵坐标, .顶边)


 ' ---------------------------------------------------------------------------------------------------------------

 ' 判断左棋子鸡上方有无棋子
赋值 (上方有无棋子,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].上方有无棋子)
赋值 (下方有无棋子,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].下方有无棋子)
赋值 (左方有无棋子,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].左方有无棋子)
赋值 (右方有无棋子,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].右方有无棋子)

 ' 判断左棋子鸡上方是敌是友
赋值 (上方是敌是友,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].上方是敌是友)
赋值 (下方是敌是友,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].下方是敌是友)
赋值 (左方是敌是友,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].左方是敌是友)
赋值 (右方是敌是友,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].右方是敌是友)

.判断开始 (等于 (你的左右手, 真)) ' 如果你的是左棋的话才进行移动判断
    
    赋值 (鸡文本, 全局鸡文本.对自己说)
    
    赋值 (上方棋子大小,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].上方右棋子大小)
    赋值 (左鸡_上方右棋大小, 上方棋子大小)
    .判断开始 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 假)), 并且 (等于 (上方有无棋子, 真), 小于 (上方棋子大小, 9), 大于 (上方棋子大小, #棋子_鸡_大小))))
        赋值 (左鸡_向上_可移动, 假)
    .默认
        
        .判断开始 (等于 (上方有无棋子, 真))
            赋值 (左鸡上方棋子可删除, 真)
        .默认
            赋值 (左鸡上方棋子可删除, 假)
        .判断结束
        
        赋值 (左鸡_向上_可移动, 真)
    .判断结束
    
     ' --------------------------------------------------------------------------------------------------------------
    赋值 (下方棋子大小,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].下方右棋子大小)
     ' 调试输出 (到文本 (下方棋子大小))
    赋值 (左鸡_下方右棋大小, 下方棋子大小)
    
    .判断开始 (或者 (并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 假)), 并且 (等于 (下方有无棋子, 真), 小于 (下方棋子大小, 9), 大于 (下方棋子大小, #棋子_鸡_大小))))
        赋值 (左鸡_向下_可移动, 假)
    .默认
        
        .判断开始 (等于 (下方有无棋子, 真))
            赋值 (左鸡下方棋子可删除, 真)
        .默认
            赋值 (左鸡下方棋子可删除, 假)
        .判断结束
        
        赋值 (左鸡_向下_可移动, 真)
    .判断结束
     ' ---------------------------------------------------------------------------------------------------------------
    赋值 (左方棋子大小,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].左方右棋子大小)
    赋值 (左鸡_左方右棋大小, 左方棋子大小)
    
    .判断开始 (或者 (并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 假)), 并且 (等于 (左方有无棋子, 真), 小于 (左方棋子大小, 9), 大于 (左方棋子大小, #棋子_鸡_大小))))
        赋值 (左鸡_向左_可移动, 假)
    .默认
        
        .判断开始 (等于 (左方有无棋子, 真))
            赋值 (左鸡左方棋子可删除, 真)
        .默认
            赋值 (左鸡左方棋子可删除, 假)
        .判断结束
        赋值 (左鸡_向左_可移动, 真)
    .判断结束
     ' ---------------------------------------------------------------------------------------------------------------
    
    赋值 (右方棋子大小,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].右方右棋子大小)
    赋值 (左鸡_右方右棋大小, 右方棋子大小)
    
    .判断开始 (或者 (并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 假)), 并且 (等于 (右方有无棋子, 真), 小于 (右方棋子大小, 9), 大于 (右方棋子大小, #棋子_鸡_大小))))
        赋值 (左鸡_向右_可移动, 假)
    .默认
        
        .判断开始 (等于 (右方有无棋子, 真))
            赋值 (左鸡右方棋子可删除, 真)
        .默认
            赋值 (左鸡右方棋子可删除, 假)
        .判断结束
        赋值 (左鸡_向右_可移动, 真)
    .判断结束
    
    
    
    连续赋值 (假, 左龙_准备移动, 左牛_准备移动, 左狗_准备移动, 左马_准备移动, 左蛇_准备移动, 左虎_准备移动, 左鼠_准备移动)
    
    赋值 (左鸡_准备移动, 真)
    
    赋值 (左鸡_可以移动, 真)
    
    
    .如果真 (可以发音)
        播放鸡叫 ()
    .如果真结束
    
    
.默认
    
     ' ////////////////////////////////////////////////////////////////////////////////////////////////////////
     ' -------------------------------------------------------------------------------------------------------
    
    .判断开始 (并且 (等于 (右牛_可以移动, 真), 等于 (右牛_准备移动, 真)))
        .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
            .如果真 (可以发音)
                播放鸡叫 ()
            .如果真结束
            赋值 (鸡文本, 全局鸡文本.对牛说) ' 对牛说的话
            删除左棋子鸡 ()
            赋值 (.顶边, 纵坐标)
            赋值 (.左边, 横坐标)
            赋值 (所有右棋的当前位置 [6].横坐标, .左边)
            赋值 (所有右棋的当前位置 [6].纵坐标, .顶边)
            
        .如果真结束
        
    .默认
        
        .判断开始 (并且 (等于 (右狗_可以移动, 真), 等于 (右狗_准备移动, 真)))
            .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                .如果真 (可以发音)
                    播放鸡叫 ()
                .如果真结束
                赋值 (鸡文本, 全局鸡文本.对狗说)
                删除左棋子鸡 ()
                赋值 (.顶边, 纵坐标)
                赋值 (.左边, 横坐标)
                赋值 (所有右棋的当前位置 [4].横坐标, .左边)
                赋值 (所有右棋的当前位置 [4].纵坐标, .顶边)
                
            .如果真结束
            
        .默认
            
            .判断开始 (并且 (等于 (右鸡_可以移动, 真), 等于 (右鸡_准备移动, 真)))
                .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                    .如果真 (可以发音)
                        播放鸡叫 ()
                    .如果真结束
                    
                    赋值 (鸡文本, 全局鸡文本.对鸡说)
                    删除左棋子鸡 ()
                    赋值 (.顶边, 纵坐标)
                    赋值 (.左边, 横坐标)
                    赋值 (所有右棋的当前位置 [3].横坐标, .左边)
                    赋值 (所有右棋的当前位置 [3].纵坐标, .顶边)
                    
                .如果真结束
                
            .默认
                
                .判断开始 (并且 (等于 (右马_可以移动, 真), 等于 (右马_准备移动, 真)))
                    .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                        .如果真 (可以发音)
                            播放鸡叫 ()
                        .如果真结束
                        
                        赋值 (鸡文本, 全局鸡文本.对马说)
                        删除左棋子鸡 ()
                        赋值 (.顶边, 纵坐标)
                        赋值 (.左边, 横坐标)
                        赋值 (所有右棋的当前位置 [5].横坐标, .左边)
                        赋值 (所有右棋的当前位置 [5].纵坐标, .顶边)
                        
                    .如果真结束
                    
                .默认
                    
                    .判断开始 (并且 (等于 (右蛇_可以移动, 真), 等于 (右蛇_准备移动, 真)))
                        .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                            .如果真 (可以发音)
                                播放鸡叫 ()
                            .如果真结束
                            
                            赋值 (鸡文本, 全局鸡文本.对蛇说)
                            
                        .如果真结束
                        
                    .默认
                        .判断开始 (并且 (等于 (右虎_可以移动, 真), 等于 (右虎_准备移动, 真)))
                            .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                                .如果真 (可以发音)
                                    播放鸡叫 ()
                                .如果真结束
                                
                                赋值 (鸡文本, 全局鸡文本.对虎说)
                                删除左棋子鸡 ()
                                赋值 (.顶边, 纵坐标)
                                赋值 (.左边, 横坐标)
                                赋值 (所有右棋的当前位置 [7].横坐标, .左边)
                                赋值 (所有右棋的当前位置 [7].纵坐标, .顶边)
                                
                            .如果真结束
                            
                        .默认
                            .判断开始 (并且 (等于 (右鼠_可以移动, 真), 等于 (右鼠_准备移动, 真)))
                                .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                                    .如果真 (可以发音)
                                        播放鸡叫 ()
                                    .如果真结束
                                    
                                    赋值 (鸡文本, 全局鸡文本.对鼠说)
                                .如果真结束
                                
                            .默认
                                .判断开始 (并且 (等于 (右龙_可以移动, 真), 等于 (右龙_准备移动, 真)))
                                    .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                                        .如果真 (可以发音)
                                            播放鸡叫 ()
                                        .如果真结束
                                        赋值 (鸡文本, 全局鸡文本.对龙说)
                                        删除左棋子鸡 ()
                                        赋值 (.顶边, 纵坐标)
                                        赋值 (.左边, 横坐标)
                                        赋值 (所有右棋的当前位置 [8].横坐标, .左边)
                                        赋值 (所有右棋的当前位置 [8].纵坐标, .顶边)
                                        
                                    .如果真结束
                                    
                                .默认
                                    
                                    
                                    赋值 (鸡文本, 全局鸡文本.对自己说)
                                    .如果真 (可以发音)
                                        播放鸡叫 ()
                                    .如果真结束
                                    
                                .判断结束
                                
                            .判断结束
                            
                        .判断结束
                        
                    .判断结束
                    
                .判断结束
                
            .判断结束
            
        .判断结束
        
    .判断结束
    
.判断结束


.如果真 (可以显示文本)
    相加 (_启动窗口., 横坐标).未知支持库函数_26 (相加 (_启动窗口., 纵坐标), 鸡文本, -1, 真)
.如果真结束


.子程序 _图形按钮_狗_左_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 上方有无棋子, 逻辑型, , , 
.局部变量 上方棋子大小, 整数型, , , 
.局部变量 上方是敌是友, 逻辑型, , , 
.局部变量 下方有无棋子, 逻辑型, , , 
.局部变量 下方棋子大小, 整数型, , , 
.局部变量 下方是敌是友, 逻辑型, , , 
.局部变量 左方有无棋子, 逻辑型, , , 
.局部变量 左方棋子大小, 整数型, , , 
.局部变量 左方是敌是友, 逻辑型, , , 
.局部变量 右方有无棋子, 逻辑型, , , 
.局部变量 右方棋子大小, 整数型, , , 
.局部变量 右方是敌是友, 逻辑型, , , 
.局部变量 匿名局部变量_6329, 空白型, , , 
.局部变量 匿名局部变量_6330, 空白型, , , 
.局部变量 横坐标, 整数型, , , 
.局部变量 纵坐标, 整数型, , , 
.局部变量 狗文本, 文本型, , , 

赋值 (棋子_左狗_当前位置.横坐标, .左边) ' 得到左棋子狗的当前位置
赋值 (棋子_左狗_当前位置.纵坐标, .顶边)

赋值 (横坐标, .左边) ' 得到左棋子狗的当前位置
赋值 (纵坐标, .顶边)


 ' ---------------------------------------------------------------------------------------------------------------

 ' 判断左棋子狗上方有无棋子
赋值 (上方有无棋子,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].上方有无棋子)
赋值 (下方有无棋子,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].下方有无棋子)
赋值 (左方有无棋子,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].左方有无棋子)
赋值 (右方有无棋子,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].右方有无棋子)

 ' 判断左棋子狗上方是敌是友
赋值 (上方是敌是友,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].上方是敌是友)
赋值 (下方是敌是友,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].下方是敌是友)
赋值 (左方是敌是友,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].左方是敌是友)
赋值 (右方是敌是友,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].右方是敌是友)


.判断开始 (等于 (你的左右手, 真))
    赋值 (狗文本, 全局狗文本.对自己说)
    
     ' --------------------------------------------------------------------------------------------------------------
    赋值 (上方棋子大小,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].上方右棋子大小)
     ' 左狗_上方左棋大小
    赋值 (左狗_上方右棋大小, 上方棋子大小)
    
    .判断开始 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 假)), 并且 (等于 (上方有无棋子, 真), 小于 (上方棋子大小, 9), 大于 (上方棋子大小, #棋子_狗_大小))))
        赋值 (左狗_向上_可移动, 假)
    .默认
        
        .判断开始 (等于 (上方有无棋子, 真))
            赋值 (左狗上方棋子可删除, 真)
        .默认
            赋值 (左狗上方棋子可删除, 假)
        .判断结束
        
        赋值 (左狗_向上_可移动, 真)
    .判断结束
    
    
    
     ' ---------------------------------------------------------------------------------------------------------------
    赋值 (下方棋子大小,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].下方右棋子大小)
     ' 调试输出 (到文本 (下方棋子大小))
    赋值 (左狗_下方右棋大小, 下方棋子大小)
    
    .判断开始 (或者 (并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 假)), 并且 (等于 (下方有无棋子, 真), 小于 (下方棋子大小, 9), 大于 (下方棋子大小, #棋子_狗_大小))))
        赋值 (左狗_向下_可移动, 假)
    .默认
        
        .判断开始 (等于 (下方有无棋子, 真))
            赋值 (左狗下方棋子可删除, 真)
        .默认
            赋值 (左狗下方棋子可删除, 假)
        .判断结束
        
        赋值 (左狗_向下_可移动, 真)
    .判断结束
     ' ---------------------------------------------------------------------------------------------------------------
    赋值 (左方棋子大小,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].左方右棋子大小)
    赋值 (左狗_左方右棋大小, 左方棋子大小)
    
    .判断开始 (或者 (并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 假)), 并且 (等于 (左方有无棋子, 真), 小于 (左方棋子大小, 9), 大于 (左方棋子大小, #棋子_狗_大小))))
        赋值 (左狗_向左_可移动, 假)
    .默认
        
        .判断开始 (等于 (左方有无棋子, 真))
            赋值 (左狗左方棋子可删除, 真)
        .默认
            赋值 (左狗左方棋子可删除, 假)
        .判断结束
        赋值 (左狗_向左_可移动, 真)
    .判断结束
     ' ---------------------------------------------------------------------------------------------------------------
    
    赋值 (右方棋子大小,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].右方右棋子大小)
    赋值 (左狗_右方右棋大小, 右方棋子大小)
    
    .判断开始 (或者 (并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 假)), 并且 (等于 (右方有无棋子, 真), 小于 (右方棋子大小, 9), 大于 (右方棋子大小, #棋子_狗_大小))))
        赋值 (左狗_向右_可移动, 假)
    .默认
        
        .判断开始 (等于 (右方有无棋子, 真))
            赋值 (左狗右方棋子可删除, 真)
        .默认
            赋值 (左狗右方棋子可删除, 假)
        .判断结束
        赋值 (左狗_向右_可移动, 真)
    .判断结束
    
    
    
    连续赋值 (假, 左龙_准备移动, 左牛_准备移动, 左鸡_准备移动, 左马_准备移动, 左蛇_准备移动, 左虎_准备移动, 左鼠_准备移动)
    
    赋值 (左狗_准备移动, 真)
    
    赋值 (左狗_可以移动, 真)
    
    
    .如果真 (可以发音)
        播放狗叫 ()
    .如果真结束
    
.默认
    
     ' ////////////////////////////////////////////////////////////////////////////////////////////////////////
     ' -------------------------------------------------------------------------------------------------------
    
    .判断开始 (并且 (等于 (右牛_可以移动, 真), 等于 (右牛_准备移动, 真)))
        .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
            .如果真 (可以发音)
                播放狗叫 ()
            .如果真结束
            赋值 (狗文本, 全局狗文本.对牛说) ' 对牛说的话
            删除左棋子狗 ()
            赋值 (.顶边, 纵坐标)
            赋值 (.左边, 横坐标)
            赋值 (所有右棋的当前位置 [6].横坐标, .左边)
            赋值 (所有右棋的当前位置 [6].纵坐标, .顶边)
            
        .如果真结束
        
    .默认
        
        .判断开始 (并且 (等于 (右狗_可以移动, 真), 等于 (右狗_准备移动, 真)))
            .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                .如果真 (可以发音)
                    播放狗叫 ()
                .如果真结束
                赋值 (狗文本, 全局狗文本.对狗说)
                删除左棋子狗 ()
                赋值 (.顶边, 纵坐标)
                赋值 (.左边, 横坐标)
                赋值 (所有右棋的当前位置 [4].横坐标, .左边)
                赋值 (所有右棋的当前位置 [4].纵坐标, .顶边)
                
            .如果真结束
            
        .默认
            
            .判断开始 (并且 (等于 (右鸡_可以移动, 真), 等于 (右鸡_准备移动, 真)))
                .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                    .如果真 (可以发音)
                        播放狗叫 ()
                    .如果真结束
                    
                    赋值 (狗文本, 全局狗文本.对鸡说)
                    
                .如果真结束
                
            .默认
                
                .判断开始 (并且 (等于 (右马_可以移动, 真), 等于 (右马_准备移动, 真)))
                    .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                        .如果真 (可以发音)
                            播放狗叫 ()
                        .如果真结束
                        
                        赋值 (狗文本, 全局狗文本.对马说)
                        删除左棋子狗 ()
                        赋值 (.顶边, 纵坐标)
                        赋值 (.左边, 横坐标)
                        赋值 (所有右棋的当前位置 [5].横坐标, .左边)
                        赋值 (所有右棋的当前位置 [5].纵坐标, .顶边)
                        
                    .如果真结束
                    
                .默认
                    
                    .判断开始 (并且 (等于 (右蛇_可以移动, 真), 等于 (右蛇_准备移动, 真)))
                        .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                            .如果真 (可以发音)
                                播放狗叫 ()
                            .如果真结束
                            
                            赋值 (狗文本, 全局狗文本.对蛇说)
                            
                        .如果真结束
                        
                    .默认
                        .判断开始 (并且 (等于 (右虎_可以移动, 真), 等于 (右虎_准备移动, 真)))
                            .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                                .如果真 (可以发音)
                                    播放狗叫 ()
                                .如果真结束
                                
                                赋值 (狗文本, 全局狗文本.对虎说)
                                删除左棋子狗 ()
                                赋值 (.顶边, 纵坐标)
                                赋值 (.左边, 横坐标)
                                赋值 (所有右棋的当前位置 [7].横坐标, .左边)
                                赋值 (所有右棋的当前位置 [7].纵坐标, .顶边)
                                
                            .如果真结束
                            
                        .默认
                            .判断开始 (并且 (等于 (右鼠_可以移动, 真), 等于 (右鼠_准备移动, 真)))
                                .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                                    .如果真 (可以发音)
                                        播放狗叫 ()
                                    .如果真结束
                                    
                                    赋值 (狗文本, 全局狗文本.对鼠说)
                                .如果真结束
                                
                            .默认
                                .判断开始 (并且 (等于 (右龙_可以移动, 真), 等于 (右龙_准备移动, 真)))
                                    .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                                        .如果真 (可以发音)
                                            播放狗叫 ()
                                        .如果真结束
                                        赋值 (狗文本, 全局狗文本.对龙说)
                                        删除左棋子狗 ()
                                        赋值 (.顶边, 纵坐标)
                                        赋值 (.左边, 横坐标)
                                        赋值 (所有右棋的当前位置 [8].横坐标, .左边)
                                        赋值 (所有右棋的当前位置 [8].纵坐标, .顶边)
                                        
                                    .如果真结束
                                    
                                .默认
                                    
                                    
                                    赋值 (狗文本, 全局狗文本.对自己说)
                                    .如果真 (可以发音)
                                        播放狗叫 ()
                                    .如果真结束
                                    
                                .判断结束
                                
                            .判断结束
                            
                        .判断结束
                        
                    .判断结束
                    
                .判断结束
                
            .判断结束
            
        .判断结束
        
    .判断结束
    
.判断结束

.如果真 (可以显示文本)
    相加 (_启动窗口., 横坐标).未知支持库函数_26 (相加 (_启动窗口., 纵坐标), 狗文本, -1, 真)
.如果真结束


.子程序 _图形按钮_马_左_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 上方有无棋子, 逻辑型, , , 
.局部变量 上方棋子大小, 整数型, , , 
.局部变量 上方是敌是友, 逻辑型, , , 
.局部变量 下方有无棋子, 逻辑型, , , 
.局部变量 下方棋子大小, 整数型, , , 
.局部变量 下方是敌是友, 逻辑型, , , 
.局部变量 左方有无棋子, 逻辑型, , , 
.局部变量 左方棋子大小, 整数型, , , 
.局部变量 左方是敌是友, 逻辑型, , , 
.局部变量 右方有无棋子, 逻辑型, , , 
.局部变量 右方棋子大小, 整数型, , , 
.局部变量 右方是敌是友, 逻辑型, , , 
.局部变量 匿名局部变量_6267, 空白型, , , 
.局部变量 横坐标, 整数型, , , 
.局部变量 纵坐标, 整数型, , , 
.局部变量 马文本, 文本型, , , 

赋值 (棋子_左马_当前位置.横坐标, .左边) ' 得到左棋子马的当前位置
赋值 (棋子_左马_当前位置.纵坐标, .顶边)

赋值 (横坐标, .左边) ' 得到左棋子马的当前位置
赋值 (纵坐标, .顶边)


 ' ---------------------------------------------------------------------------------------------------------------
 ' 判断左棋子马上方有无棋子
赋值 (上方有无棋子,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].上方有无棋子)
赋值 (下方有无棋子,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].下方有无棋子)
赋值 (左方有无棋子,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].左方有无棋子)
赋值 (右方有无棋子,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].右方有无棋子)

 ' 判断左棋子马上方是敌是友
赋值 (上方是敌是友,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].上方是敌是友)
赋值 (下方是敌是友,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].下方是敌是友)
赋值 (左方是敌是友,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].左方是敌是友)
赋值 (右方是敌是友,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].右方是敌是友)

.判断开始 (等于 (你的左右手, 真))
    赋值 (马文本, 全局马文本.对自己说)
     ' ---------------------------------------------------------------------------------------------------------------
    赋值 (上方棋子大小,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].上方右棋子大小)
    赋值 (左马_上方右棋大小, 上方棋子大小)
    
    .判断开始 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 假)), 并且 (等于 (上方有无棋子, 真), 小于 (上方棋子大小, 9), 大于 (上方棋子大小, #棋子_马_大小))))
        
        赋值 (左马_向上_可移动, 假)
    .默认
        
        .判断开始 (等于 (上方有无棋子, 真))
            赋值 (左马上方棋子可删除, 真)
        .默认
            赋值 (左马上方棋子可删除, 假)
        .判断结束
        
        赋值 (左马_向上_可移动, 真)
    .判断结束
    
     ' ---------------------------------------------------------------------------------------------------------------
    赋值 (下方棋子大小,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].下方右棋子大小)
     ' 调试输出 (到文本 (下方棋子大小))
    赋值 (左马_下方右棋大小, 下方棋子大小)
    
    .判断开始 (或者 (并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 假)), 并且 (等于 (下方有无棋子, 真), 小于 (下方棋子大小, 9), 大于 (下方棋子大小, #棋子_马_大小))))
        赋值 (左马_向下_可移动, 假)
    .默认
        
        .判断开始 (等于 (下方有无棋子, 真))
            赋值 (左马下方棋子可删除, 真)
        .默认
            赋值 (左马下方棋子可删除, 假)
        .判断结束
        
        赋值 (左马_向下_可移动, 真)
    .判断结束
     ' ---------------------------------------------------------------------------------------------------------------
    赋值 (左方棋子大小,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].左方右棋子大小)
    赋值 (左马_左方右棋大小, 左方棋子大小)
     ' 调试输出 (到文本 (左方棋子大小))
    .判断开始 (或者 (并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 假)), 并且 (等于 (左方有无棋子, 真), 小于 (左方棋子大小, 9), 大于 (左方棋子大小, #棋子_马_大小))))
        赋值 (左马_向左_可移动, 假)
    .默认
        
        .判断开始 (等于 (左方有无棋子, 真))
            赋值 (左马左方棋子可删除, 真)
        .默认
            赋值 (左马左方棋子可删除, 假)
        .判断结束
        赋值 (左马_向左_可移动, 真)
    .判断结束
     ' ---------------------------------------------------------------------------------------------------------------
    赋值 (右方棋子大小,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].右方右棋子大小)
    赋值 (左马_右方右棋大小, 右方棋子大小)
    
    
    .判断开始 (或者 (并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 假)), 并且 (等于 (右方有无棋子, 真), 小于 (右方棋子大小, 9), 大于 (右方棋子大小, #棋子_马_大小))))
        赋值 (左马_向右_可移动, 假)
    .默认
        
        .判断开始 (等于 (右方有无棋子, 真))
            赋值 (左马右方棋子可删除, 真)
        .默认
            赋值 (左马右方棋子可删除, 假)
        .判断结束
        赋值 (左马_向右_可移动, 真)
    .判断结束
    
    
    
    连续赋值 (假, 左龙_准备移动, 左牛_准备移动, 左鸡_准备移动, 左狗_准备移动, 左蛇_准备移动, 左虎_准备移动, 左鼠_准备移动)
    
    赋值 (左马_准备移动, 真)
    
    赋值 (左马_可以移动, 真)
    
    
    .如果真 (可以发音)
        播放马叫 ()
    .如果真结束
    
    
.默认
    
     ' ////////////////////////////////////////////////////////////////////////////////////////////////////////
     ' -------------------------------------------------------------------------------------------------------
    
    .判断开始 (并且 (等于 (右牛_可以移动, 真), 等于 (右牛_准备移动, 真)))
        .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
            .如果真 (可以发音)
                播放马叫 ()
            .如果真结束
            赋值 (马文本, 全局马文本.对牛说) ' 对牛说的话
            删除左棋子马 ()
            赋值 (.顶边, 纵坐标)
            赋值 (.左边, 横坐标)
            赋值 (所有右棋的当前位置 [6].横坐标, .左边)
            赋值 (所有右棋的当前位置 [6].纵坐标, .顶边)
            
        .如果真结束
        
    .默认
        
        .判断开始 (并且 (等于 (右狗_可以移动, 真), 等于 (右狗_准备移动, 真)))
            .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                .如果真 (可以发音)
                    播放马叫 ()
                .如果真结束
                赋值 (马文本, 全局马文本.对狗说)
            .如果真结束
            
        .默认
            
            .判断开始 (并且 (等于 (右鸡_可以移动, 真), 等于 (右鸡_准备移动, 真)))
                .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                    .如果真 (可以发音)
                        播放马叫 ()
                    .如果真结束
                    
                    赋值 (马文本, 全局狗文本.对马说)
                .如果真结束
                
            .默认
                
                .判断开始 (并且 (等于 (右马_可以移动, 真), 等于 (右马_准备移动, 真)))
                    .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                        .如果真 (可以发音)
                            播放马叫 ()
                        .如果真结束
                        
                        赋值 (马文本, 全局马文本.对马说)
                        删除左棋子马 ()
                        赋值 (.顶边, 纵坐标)
                        赋值 (.左边, 横坐标)
                        赋值 (所有右棋的当前位置 [5].横坐标, .左边)
                        赋值 (所有右棋的当前位置 [5].纵坐标, .顶边)
                        
                    .如果真结束
                    
                .默认
                    
                    .判断开始 (并且 (等于 (右蛇_可以移动, 真), 等于 (右蛇_准备移动, 真)))
                        .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                            .如果真 (可以发音)
                                播放马叫 ()
                            .如果真结束
                            
                            赋值 (马文本, 全局马文本.对蛇说)
                            
                        .如果真结束
                        
                    .默认
                        .判断开始 (并且 (等于 (右虎_可以移动, 真), 等于 (右虎_准备移动, 真)))
                            .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                                .如果真 (可以发音)
                                    播放马叫 ()
                                .如果真结束
                                
                                赋值 (马文本, 全局马文本.对虎说)
                                删除左棋子马 ()
                                赋值 (.顶边, 纵坐标)
                                赋值 (.左边, 横坐标)
                                赋值 (所有右棋的当前位置 [7].横坐标, .左边)
                                赋值 (所有右棋的当前位置 [7].纵坐标, .顶边)
                                
                            .如果真结束
                            
                        .默认
                            .判断开始 (并且 (等于 (右鼠_可以移动, 真), 等于 (右鼠_准备移动, 真)))
                                .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                                    .如果真 (可以发音)
                                        播放马叫 ()
                                    .如果真结束
                                    
                                    赋值 (马文本, 全局马文本.对鼠说)
                                .如果真结束
                                
                            .默认
                                .判断开始 (并且 (等于 (右龙_可以移动, 真), 等于 (右龙_准备移动, 真)))
                                    .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                                        .如果真 (可以发音)
                                            播放马叫 ()
                                        .如果真结束
                                        赋值 (马文本, 全局马文本.对龙说)
                                        删除左棋子马 ()
                                        赋值 (.顶边, 纵坐标)
                                        赋值 (.左边, 横坐标)
                                        赋值 (所有右棋的当前位置 [8].横坐标, .左边)
                                        赋值 (所有右棋的当前位置 [8].纵坐标, .顶边)
                                        
                                    .如果真结束
                                    
                                .默认
                                    
                                    
                                    赋值 (马文本, 全局马文本.对自己说)
                                    .如果真 (可以发音)
                                        播放马叫 ()
                                    .如果真结束
                                    
                                .判断结束
                                
                            .判断结束
                            
                        .判断结束
                        
                    .判断结束
                    
                .判断结束
                
            .判断结束
            
        .判断结束
        
    .判断结束
    
.判断结束

.如果真 (可以显示文本)
    相加 (_启动窗口., 横坐标).未知支持库函数_26 (相加 (_启动窗口., 纵坐标), 马文本, -1, 真)
.如果真结束


.子程序 _图形按钮_牛_左_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 上方有无棋子, 逻辑型, , , 
.局部变量 上方棋子大小, 整数型, , , 
.局部变量 上方是敌是友, 逻辑型, , , 
.局部变量 匿名局部变量_5702, 空白型, , , 
.局部变量 下方有无棋子, 逻辑型, , , 
.局部变量 下方棋子大小, 整数型, , , 
.局部变量 下方是敌是友, 逻辑型, , , 
.局部变量 匿名局部变量_5706, 空白型, , , 
.局部变量 左方有无棋子, 逻辑型, , , 
.局部变量 左方棋子大小, 整数型, , , 
.局部变量 左方是敌是友, 逻辑型, , , 
.局部变量 匿名局部变量_5710, 空白型, , , 
.局部变量 右方有无棋子, 逻辑型, , , 
.局部变量 右方棋子大小, 整数型, , , 
.局部变量 右方是敌是友, 逻辑型, , , 
.局部变量 匿名局部变量_5714, 空白型, , , 
.局部变量 上方条件1, 逻辑型, , , 
.局部变量 上方条件2, 逻辑型, , , 
.局部变量 下方条件1, 逻辑型, , , 
.局部变量 下方条件2, 逻辑型, , , 
.局部变量 向左条件1, 逻辑型, , , 
.局部变量 向左条件2, 逻辑型, , , 
.局部变量 向右条件1, 逻辑型, , , 
.局部变量 向右条件2, 逻辑型, , , 
.局部变量 横坐标, 整数型, , , 
.局部变量 纵坐标, 整数型, , , 
.局部变量 牛文本, 文本型, , , 

赋值 (棋子_左牛_当前位置.横坐标, .左边) ' 得到左棋子牛的当前位置
赋值 (棋子_左牛_当前位置.纵坐标, .顶边)

赋值 (横坐标, .左边) ' 得到左棋子牛的当前位置
赋值 (纵坐标, .顶边)

 ' 判断左棋子牛上方有无棋子
赋值 (上方有无棋子,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].上方有无棋子)
赋值 (下方有无棋子,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].下方有无棋子)
赋值 (左方有无棋子,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].左方有无棋子)
赋值 (右方有无棋子,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].右方有无棋子)


 ' 判断左棋子牛上方是敌是友
赋值 (上方是敌是友,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].上方是敌是友)
赋值 (下方是敌是友,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].下方是敌是友)
赋值 (左方是敌是友,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].左方是敌是友)
赋值 (右方是敌是友,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].右方是敌是友)

.判断开始 (等于 (你的左右手, 真)) ' 如果你的是左棋的话才进行移动判断
    
    赋值 (牛文本, 全局牛文本.对自己说)
    
     ' --------------------------------------------------------------------------------------------------------------
    
    赋值 (上方棋子大小,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].上方右棋子大小)
     ' 左牛_上方左棋大小
    赋值 (左牛_上方右棋大小, 上方棋子大小)
    
    赋值 (上方条件1, 并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 假))) ' 上方棋子是已方棋子
    赋值 (上方条件2, 并且 (等于 (上方有无棋子, 真), 小于 (上方棋子大小, 9), 大于 (上方棋子大小, #棋子_牛_大小))) ' 上方棋子是对方棋子，并且比已方大
    
    .判断开始 (或者 (上方条件1, 上方条件2))
        赋值 (左牛_向上_可移动, 假)
    .默认
        
        .判断开始 (等于 (上方有无棋子, 真))
            赋值 (左牛上方棋子可删除, 真)
        .默认
            赋值 (左牛上方棋子可删除, 假)
        .判断结束
        
        赋值 (左牛_向上_可移动, 真)
    .判断结束
    
    
     ' ---------------------------------------------------------------------------------------------------------------
    赋值 (下方棋子大小,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].下方右棋子大小)
    
     ' 调试输出 (到文本 (下方棋子大小))
    赋值 (左牛_下方右棋大小, 下方棋子大小)
    赋值 (下方条件1, 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 假)))
    赋值 (下方条件2, 并且 (等于 (下方有无棋子, 真), 小于 (下方棋子大小, 9), 大于 (下方棋子大小, #棋子_牛_大小)))
    
    
    .判断开始 (或者 (下方条件1, 下方条件2))
        赋值 (左牛_向下_可移动, 假)
    .默认
        
        .判断开始 (等于 (下方有无棋子, 真))
            赋值 (左牛下方棋子可删除, 真)
        .默认
            赋值 (左牛下方棋子可删除, 假)
        .判断结束
        
        赋值 (左牛_向下_可移动, 真)
    .判断结束
    
    
     ' --------------------------------------------------------------------------------------------------------------
    
    赋值 (左方棋子大小,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].左方右棋子大小)
    赋值 (左牛_左方右棋大小, 左方棋子大小)
    
    赋值 (向左条件1, 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 假)))
    赋值 (向左条件2, 并且 (等于 (左方有无棋子, 真), 小于 (左方棋子大小, 9), 大于 (左方棋子大小, #棋子_牛_大小)))
    
    
    
    .判断开始 (或者 (向左条件1, 向左条件2))
        赋值 (左牛_向左_可移动, 假)
    .默认
        
        .判断开始 (等于 (左方有无棋子, 真))
            赋值 (左牛左方棋子可删除, 真)
        .默认
            赋值 (左牛左方棋子可删除, 假)
        .判断结束
        赋值 (左牛_向左_可移动, 真)
    .判断结束
    
    
     ' ---------------------------------------------------------------------------------------------------------------
    
    赋值 (右方棋子大小,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].右方右棋子大小)
    赋值 (左牛_右方右棋大小, 右方棋子大小)
    
    赋值 (向右条件1, 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 假)))
    赋值 (向右条件2, 并且 (等于 (右方有无棋子, 真), 小于 (右方棋子大小, 9), 大于 (右方棋子大小, #棋子_牛_大小)))
    
    .判断开始 (或者 (向右条件1, 向右条件2))
        赋值 (左牛_向右_可移动, 假)
    .默认
        
        .判断开始 (等于 (右方有无棋子, 真))
            赋值 (左牛右方棋子可删除, 真)
        .默认
            赋值 (左牛右方棋子可删除, 假)
        .判断结束
        赋值 (左牛_向右_可移动, 真)
    .判断结束
    
    
    
    连续赋值 (假, 左龙_准备移动, 左鸡_准备移动, 左狗_准备移动, 左马_准备移动, 左蛇_准备移动, 左虎_准备移动, 左鼠_准备移动)
    
    赋值 (左牛_准备移动, 真)
    
    赋值 (左牛_可以移动, 真)
    
    
    .如果真 (可以发音)
        播放牛叫 ()
    .如果真结束
    
     ' ///////////////////////////////////////////////////////////////////////////////
.默认
     ' -------------------------------------------------------------------------------
    
    .判断开始 (并且 (等于 (右牛_可以移动, 真), 等于 (右牛_准备移动, 真)))
        .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
            .如果真 (可以发音)
                播放牛叫 ()
            .如果真结束
            赋值 (牛文本, 全局牛文本.对牛说) ' 对牛说的话
            删除左棋子牛 ()
            
            赋值 (.顶边, 纵坐标)
            赋值 (.左边, 横坐标)
            赋值 (所有右棋的当前位置 [6].横坐标, .左边) ' 这里一定不要漏掉！
            赋值 (所有右棋的当前位置 [6].纵坐标, .顶边)
            
        .如果真结束
        
    .默认
        
        .判断开始 (并且 (等于 (右狗_可以移动, 真), 等于 (右狗_准备移动, 真)))
            .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                .如果真 (可以发音)
                    播放牛叫 ()
                .如果真结束
                赋值 (牛文本, 全局牛文本.对狗说)
            .如果真结束
            
        .默认
            
            .判断开始 (并且 (等于 (右鸡_可以移动, 真), 等于 (右鸡_准备移动, 真)))
                .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                    .如果真 (可以发音)
                        播放牛叫 ()
                    .如果真结束
                    
                    赋值 (牛文本, 全局牛文本.对鸡说)
                .如果真结束
                
            .默认
                
                .判断开始 (并且 (等于 (右马_可以移动, 真), 等于 (右马_准备移动, 真)))
                    .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                        .如果真 (可以发音)
                            播放牛叫 ()
                        .如果真结束
                        
                        赋值 (牛文本, 全局牛文本.对马说)
                    .如果真结束
                    
                .默认
                    
                    .判断开始 (并且 (等于 (右蛇_可以移动, 真), 等于 (右蛇_准备移动, 真)))
                        .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                            .如果真 (可以发音)
                                播放牛叫 ()
                            .如果真结束
                            
                            赋值 (牛文本, 全局牛文本.对蛇说)
                        .如果真结束
                        
                    .默认
                        .判断开始 (并且 (等于 (右虎_可以移动, 真), 等于 (右虎_准备移动, 真)))
                            .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                                .如果真 (可以发音)
                                    播放牛叫 ()
                                .如果真结束
                                
                                赋值 (牛文本, 全局牛文本.对虎说)
                                删除左棋子牛 ()
                                
                                赋值 (.顶边, 纵坐标)
                                赋值 (.左边, 横坐标)
                                赋值 (所有右棋的当前位置 [7].横坐标, .左边) ' 这里一定不要漏掉！
                                赋值 (所有右棋的当前位置 [7].纵坐标, .顶边)
                                
                            .如果真结束
                            
                        .默认
                            .判断开始 (并且 (等于 (右鼠_可以移动, 真), 等于 (右鼠_准备移动, 真)))
                                .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                                    .如果真 (可以发音)
                                        播放牛叫 ()
                                    .如果真结束
                                    
                                    赋值 (牛文本, 全局牛文本.对鼠说)
                                    
                                .如果真结束
                                
                            .默认
                                .判断开始 (并且 (等于 (右龙_可以移动, 真), 等于 (右龙_准备移动, 真)))
                                    .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                                        .如果真 (可以发音)
                                            播放牛叫 ()
                                        .如果真结束
                                        赋值 (牛文本, 全局牛文本.对龙说)
                                        删除左棋子牛 ()
                                        赋值 (.顶边, 纵坐标)
                                        赋值 (.左边, 横坐标)
                                        赋值 (所有右棋的当前位置 [8].横坐标, .左边)
                                        赋值 (所有右棋的当前位置 [8].纵坐标, .顶边)
                                        
                                    .如果真结束
                                    
                                .默认
                                    
                                    
                                    赋值 (牛文本, 全局牛文本.对自己说)
                                    .如果真 (可以发音)
                                        播放牛叫 ()
                                    .如果真结束
                                    
                                .判断结束
                                
                            .判断结束
                            
                        .判断结束
                        
                    .判断结束
                    
                .判断结束
                
            .判断结束
            
        .判断结束
        
    .判断结束
    
.判断结束

.如果真 (可以显示文本)
    相加 (_启动窗口., 横坐标).未知支持库函数_26 (相加 (_启动窗口., 纵坐标), 牛文本, -1, 真)
.如果真结束



.子程序 _图形按钮_虎_左_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 上方有无棋子, 逻辑型, , , 
.局部变量 下方有无棋子, 逻辑型, , , 
.局部变量 左方有无棋子, 逻辑型, , , 
.局部变量 右方有无棋子, 逻辑型, , , 
.局部变量 匿名局部变量_5892, 空白型, , , 
.局部变量 上方棋子大小, 整数型, , , 
.局部变量 下方棋子大小, 整数型, , , 
.局部变量 左方棋子大小, 整数型, , , 
.局部变量 右方棋子大小, 整数型, , , 
.局部变量 匿名局部变量_5902, 空白型, , , 
.局部变量 上方是敌是友, 逻辑型, , , 
.局部变量 下方是敌是友, 逻辑型, , , 
.局部变量 左方是敌是友, 逻辑型, , , 
.局部变量 右方是敌是友, 逻辑型, , , 
.局部变量 匿名局部变量_5901, 空白型, , , 
.局部变量 虎文本, 文本型, , , 
.局部变量 横坐标, 整数型, , , 
.局部变量 纵坐标, 整数型, , , 

赋值 (棋子_左虎_当前位置.横坐标, .左边) ' 得到左棋子虎的当前位置
赋值 (棋子_左虎_当前位置.纵坐标, .顶边)

赋值 (横坐标, .左边) ' 得到左棋子虎的当前位置
赋值 (纵坐标, .顶边)


 ' ---------------------------------------------------------------------------------------------------------------
 ' 判断左棋子虎上方有无棋子
赋值 (上方有无棋子,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].上方有无棋子)
赋值 (下方有无棋子,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].下方有无棋子)
赋值 (左方有无棋子,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].左方有无棋子)
赋值 (右方有无棋子,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].右方有无棋子)

 ' 判断左棋子虎上方是敌是友
赋值 (上方是敌是友,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].上方是敌是友)
赋值 (下方是敌是友,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].下方是敌是友)
赋值 (左方是敌是友,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].左方是敌是友)
赋值 (右方是敌是友,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].右方是敌是友)

.判断开始 (等于 (你的左右手, 真)) ' 如果你的是左棋的话才进行移动判断
    
    赋值 (虎文本, 全局虎文本.对自己说)
    
     ' --------------------------------------------------------------------------------------------------------------
    赋值 (上方棋子大小,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].上方右棋子大小)
     ' 左虎_上方右棋大小
    赋值 (左虎_上方右棋大小, 上方棋子大小)
    .判断开始 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 假)), 并且 (等于 (上方有无棋子, 真), 小于 (上方棋子大小, 9), 大于 (上方棋子大小, #棋子_虎_大小))))
        赋值 (左虎_向上_可移动, 假)
    .默认
        
        .判断开始 (等于 (上方有无棋子, 真))
            赋值 (左虎上方棋子可删除, 真)
        .默认
            赋值 (左虎上方棋子可删除, 假)
        .判断结束
        
        赋值 (左虎_向上_可移动, 真)
    .判断结束
    
    
     ' --------------------------------------------------------------------------------------------------------------
    赋值 (下方棋子大小,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].下方右棋子大小)
    赋值 (左虎_下方右棋大小, 下方棋子大小)
    
    .判断开始 (或者 (并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 假)), 并且 (等于 (下方有无棋子, 真), 小于 (下方棋子大小, 9), 大于 (下方棋子大小, #棋子_虎_大小))))
        赋值 (左虎_向下_可移动, 假)
    .默认
        
        .判断开始 (等于 (下方有无棋子, 真))
            赋值 (左虎下方棋子可删除, 真)
        .默认
            赋值 (左虎下方棋子可删除, 假)
        .判断结束
        
        赋值 (左虎_向下_可移动, 真)
    .判断结束
     ' ---------------------------------------------------------------------------------------------------------------
    赋值 (左方棋子大小,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].左方右棋子大小)
    赋值 (左虎_左方右棋大小, 左方棋子大小)
     ' 调试输出 (到文本 (左方棋子大小))
    .判断开始 (或者 (并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 假)), 并且 (等于 (左方有无棋子, 真), 小于 (左方棋子大小, 9), 大于 (左方棋子大小, #棋子_虎_大小))))
        赋值 (左虎_向左_可移动, 假)
    .默认
        
        .判断开始 (等于 (左方有无棋子, 真))
            赋值 (左虎左方棋子可删除, 真)
        .默认
            赋值 (左虎左方棋子可删除, 假)
        .判断结束
        赋值 (左虎_向左_可移动, 真)
    .判断结束
     ' ---------------------------------------------------------------------------------------------------------------
    赋值 (右方棋子大小,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].右方右棋子大小)
    赋值 (左虎_右方右棋大小, 右方棋子大小)
    
    .判断开始 (或者 (并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 假)), 并且 (等于 (右方有无棋子, 真), 小于 (右方棋子大小, 9), 大于 (右方棋子大小, #棋子_虎_大小))))
        赋值 (左虎_向右_可移动, 假)
    .默认
        
        .判断开始 (等于 (右方有无棋子, 真))
            赋值 (左虎右方棋子可删除, 真)
        .默认
            赋值 (左虎右方棋子可删除, 假)
        .判断结束
        赋值 (左虎_向右_可移动, 真)
    .判断结束
    
    
    
    连续赋值 (假, 左龙_准备移动, 左鸡_准备移动, 左狗_准备移动, 左马_准备移动, 左蛇_准备移动, 左牛_准备移动, 左鼠_准备移动)
    
    赋值 (左虎_准备移动, 真)
    
    赋值 (左虎_可以移动, 真)
    
    
    .如果真 (可以发音)
        播放虎叫 ()
    .如果真结束
     ' /////////////////////////////////////////////////////////////////////////////////////////////////////
     ' ----------------------------------------------------------------------------------------------------
.默认
    
    
    .判断开始 (并且 (等于 (右牛_可以移动, 真), 等于 (右牛_准备移动, 真)))
        .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
            .如果真 (可以发音)
                播放虎叫 ()
            .如果真结束
            赋值 (虎文本, 全局虎文本.对牛说) ' 龙对牛说的话
        .如果真结束
        
    .默认
        
        .判断开始 (并且 (等于 (右狗_可以移动, 真), 等于 (右狗_准备移动, 真)))
            .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                .如果真 (可以发音)
                    播放虎叫 ()
                .如果真结束
                赋值 (虎文本, 全局虎文本.对狗说)
            .如果真结束
            
        .默认
            
            .判断开始 (并且 (等于 (右鸡_可以移动, 真), 等于 (右鸡_准备移动, 真)))
                .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                    .如果真 (可以发音)
                        播放虎叫 ()
                    .如果真结束
                    
                    赋值 (虎文本, 全局虎文本.对鸡说)
                .如果真结束
                
            .默认
                
                .判断开始 (并且 (等于 (右马_可以移动, 真), 等于 (右马_准备移动, 真)))
                    .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                        .如果真 (可以发音)
                            播放虎叫 ()
                        .如果真结束
                        
                        赋值 (虎文本, 全局虎文本.对马说)
                    .如果真结束
                    
                .默认
                    
                    .判断开始 (并且 (等于 (右蛇_可以移动, 真), 等于 (右蛇_准备移动, 真)))
                        .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                            .如果真 (可以发音)
                                播放虎叫 ()
                            .如果真结束
                            
                            赋值 (虎文本, 全局虎文本.对蛇说)
                        .如果真结束
                        
                    .默认
                        .判断开始 (并且 (等于 (右虎_可以移动, 真), 等于 (右虎_准备移动, 真)))
                            .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                                .如果真 (可以发音)
                                    播放虎叫 ()
                                .如果真结束
                                
                                赋值 (虎文本, 全局虎文本.对虎说)
                                删除左棋子虎 ()
                                
                                赋值 (.顶边, 纵坐标)
                                赋值 (.左边, 横坐标)
                                赋值 (所有右棋的当前位置 [7].横坐标, .左边) ' 这里一定不要漏掉！
                                赋值 (所有右棋的当前位置 [7].纵坐标, .顶边)
                                
                            .如果真结束
                            
                        .默认
                            .判断开始 (并且 (等于 (右鼠_可以移动, 真), 等于 (右鼠_准备移动, 真)))
                                .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                                    .如果真 (可以发音)
                                        播放虎叫 ()
                                    .如果真结束
                                    
                                    赋值 (虎文本, 全局虎文本.对鼠说)
                                    
                                .如果真结束
                                
                            .默认
                                .判断开始 (并且 (等于 (右龙_可以移动, 真), 等于 (右龙_准备移动, 真)))
                                    .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                                        .如果真 (可以发音)
                                            播放虎叫 ()
                                        .如果真结束
                                        赋值 (虎文本, 全局虎文本.对龙说)
                                        删除左棋子虎 ()
                                        赋值 (.顶边, 纵坐标)
                                        赋值 (.左边, 横坐标)
                                        赋值 (所有右棋的当前位置 [8].横坐标, .左边)
                                        赋值 (所有右棋的当前位置 [8].纵坐标, .顶边)
                                        
                                    .如果真结束
                                    
                                .默认
                                    
                                     ' 棋子_右龙_当前位置.横坐标 ＝ 图形按钮_龙_右.左边
                                     ' 棋子_右龙_当前位置.纵坐标 ＝ 图形按钮_龙_右.顶边
                                    
                                    赋值 (虎文本, 全局虎文本.对自己说)
                                    .如果真 (可以发音)
                                        播放虎叫 ()
                                    .如果真结束
                                    
                                    
                                    
                                    
                                .判断结束
                                
                            .判断结束
                            
                        .判断结束
                        
                    .判断结束
                    
                .判断结束
                
            .判断结束
            
        .判断结束
        
    .判断结束
    
.判断结束

.如果真 (可以显示文本)
    相加 (_启动窗口., 横坐标).未知支持库函数_26 (相加 (_启动窗口., 纵坐标), 虎文本, -1, 真)
.如果真结束


.子程序 _图形按钮_龙_左_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 上方有无棋子, 逻辑型, , , 
.局部变量 上方棋子大小, 整数型, , , 
.局部变量 上方是敌是友, 逻辑型, , , 
.局部变量 下方有无棋子, 逻辑型, , , 
.局部变量 下方棋子大小, 整数型, , , 
.局部变量 下方是敌是友, 逻辑型, , , 
.局部变量 左方有无棋子, 逻辑型, , , 
.局部变量 左方棋子大小, 整数型, , , 
.局部变量 左方是敌是友, 逻辑型, , , 
.局部变量 右方有无棋子, 逻辑型, , , 
.局部变量 右方棋子大小, 整数型, , , 
.局部变量 右方是敌是友, 逻辑型, , , 
.局部变量 匿名局部变量_5553, 空白型, , , 
.局部变量 纵坐标, 整数型, , , 
.局部变量 横坐标, 整数型, , , 
.局部变量 龙文本, 文本型, , , 
.局部变量 匿名局部变量_5557, 空白型, , , 

赋值 (横坐标, .左边)
赋值 (纵坐标, .顶边)


赋值 (棋子_左龙_当前位置.横坐标, .左边) ' 得到左棋子龙的当前位置
赋值 (棋子_左龙_当前位置.纵坐标, .顶边)
 ' 判断左棋子龙上方有无棋子
赋值 (上方有无棋子,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].上方有无棋子)
赋值 (下方有无棋子,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].下方有无棋子)
赋值 (左方有无棋子,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].左方有无棋子)
赋值 (右方有无棋子,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].右方有无棋子)

 ' 判断左棋子龙上方是敌是友
赋值 (上方是敌是友,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].上方是敌是友)
赋值 (下方是敌是友,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].下方是敌是友)
赋值 (左方是敌是友,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].左方是敌是友)
赋值 (右方是敌是友,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].右方是敌是友)


.判断开始 (等于 (你的左右手, 真)) ' 如果你的是左棋的话才进行移动判断
    
    赋值 (龙文本, 全局龙文本.对自己说)
    
     ' --------------------------------------------------------------------------------------------------------------
     ' 上方棋子判断
    赋值 (上方棋子大小,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].上方右棋子大小)
    
    赋值 (左龙_上方右棋大小, 上方棋子大小)
    
    .判断开始 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 假)), 并且 (等于 (上方有无棋子, 真), 小于 (上方棋子大小, 9), 大于 (上方棋子大小, #棋子_龙_大小)), 等于 (上方棋子大小, 1)))
        赋值 (左龙_向上_可移动, 假)
    .默认
        
        .判断开始 (等于 (上方有无棋子, 真))
            赋值 (左龙上方棋子可删除, 真)
        .默认
            赋值 (左龙上方棋子可删除, 假)
        .判断结束
        
        赋值 (左龙_向上_可移动, 真)
    .判断结束
    
     ' --------------------------------------------------------------------------------------------------------------
     ' 下方棋子判断
    赋值 (下方棋子大小,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].下方右棋子大小)
     ' 调试输出 (到文本 (下方棋子大小))
    赋值 (左龙_下方右棋大小, 下方棋子大小)
    
    .判断开始 (或者 (并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 假)), 并且 (等于 (下方有无棋子, 真), 小于 (下方棋子大小, 9), 大于 (下方棋子大小, #棋子_龙_大小)), 等于 (下方棋子大小, 1)))
        赋值 (左龙_向下_可移动, 假)
    .默认
        
        .判断开始 (等于 (下方有无棋子, 真))
            赋值 (左龙下方棋子可删除, 真)
        .默认
            赋值 (左龙下方棋子可删除, 假)
        .判断结束
        
        赋值 (左龙_向下_可移动, 真)
    .判断结束
    
    
     ' ---------------------------------------------------------------------------------------------------------------
     ' 左方棋子判断
    赋值 (左方棋子大小,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].左方右棋子大小)
    赋值 (左龙_左方右棋大小, 左方棋子大小)
    
    .判断开始 (或者 (并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 假)), 并且 (等于 (左方有无棋子, 真), 小于 (左方棋子大小, 9), 大于 (左方棋子大小, #棋子_龙_大小)), 等于 (左方棋子大小, 1)))
        赋值 (左龙_向左_可移动, 假)
    .默认
        
        .判断开始 (等于 (左方有无棋子, 真))
            赋值 (左龙左方棋子可删除, 真)
        .默认
            赋值 (左龙左方棋子可删除, 假)
        .判断结束
        赋值 (左龙_向左_可移动, 真)
    .判断结束
    
    
     ' ---------------------------------------------------------------------------------------------------------------
     ' 右方棋子判断
    赋值 (右方棋子大小,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].右方右棋子大小)
    赋值 (左龙_右方右棋大小, 右方棋子大小)
    
    
    .判断开始 (或者 (并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 假)), 并且 (等于 (右方有无棋子, 真), 小于 (右方棋子大小, 9), 大于 (右方棋子大小, #棋子_龙_大小)), 等于 (右方棋子大小, 1)))
        赋值 (左龙_向右_可移动, 假)
    .默认
        
        .判断开始 (等于 (右方有无棋子, 真))
            赋值 (左龙右方棋子可删除, 真)
        .默认
            赋值 (左龙右方棋子可删除, 假)
        .判断结束
        赋值 (左龙_向右_可移动, 真)
    .判断结束
    
    
    
    连续赋值 (假, 左牛_准备移动, 左鸡_准备移动, 左狗_准备移动, 左马_准备移动, 左蛇_准备移动, 左虎_准备移动, 左鼠_准备移动)
    
    赋值 (左龙_准备移动, 真)
    
    赋值 (左龙_可以移动, 真)
    
    
    .如果真 (可以发音)
        播放龙叫 ()
    .如果真结束
    
.默认
    
     ' //////////////////////////////////////////////////////////////////////////////////////////////
     ' ----------------------------------------------------------------------------------------------
    
    .判断开始 (并且 (等于 (右牛_可以移动, 真), 等于 (右牛_准备移动, 真)))
        .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
            .如果真 (可以发音)
                播放龙叫 ()
            .如果真结束
            赋值 (龙文本, 全局龙文本.对牛说) ' 龙对牛说的话
        .如果真结束
        
    .默认
        
        .判断开始 (并且 (等于 (右狗_可以移动, 真), 等于 (右狗_准备移动, 真)))
            .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                .如果真 (可以发音)
                    播放龙叫 ()
                .如果真结束
                赋值 (龙文本, 全局龙文本.对狗说)
            .如果真结束
            
        .默认
            
            .判断开始 (并且 (等于 (右鸡_可以移动, 真), 等于 (右鸡_准备移动, 真)))
                .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                    .如果真 (可以发音)
                        播放龙叫 ()
                    .如果真结束
                    
                    赋值 (龙文本, 全局龙文本.对鸡说)
                .如果真结束
                
            .默认
                
                .判断开始 (并且 (等于 (右马_可以移动, 真), 等于 (右马_准备移动, 真)))
                    .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                        .如果真 (可以发音)
                            播放龙叫 ()
                        .如果真结束
                        
                        赋值 (龙文本, 全局龙文本.对马说)
                    .如果真结束
                    
                .默认
                    
                    .判断开始 (并且 (等于 (右蛇_可以移动, 真), 等于 (右蛇_准备移动, 真)))
                        .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                            .如果真 (可以发音)
                                播放龙叫 ()
                            .如果真结束
                            
                            赋值 (龙文本, 全局龙文本.对蛇说)
                        .如果真结束
                        
                    .默认
                        .判断开始 (并且 (等于 (右虎_可以移动, 真), 等于 (右虎_准备移动, 真)))
                            .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                                .如果真 (可以发音)
                                    播放龙叫 ()
                                .如果真结束
                                
                                赋值 (龙文本, 全局龙文本.对虎说)
                            .如果真结束
                            
                        .默认
                            .判断开始 (并且 (等于 (右鼠_可以移动, 真), 等于 (右鼠_准备移动, 真)))
                                .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                                    .如果真 (可以发音)
                                        播放龙叫 ()
                                    .如果真结束
                                    
                                    赋值 (龙文本, 全局龙文本.对鼠说)
                                    删除左棋子龙 ()
                                    
                                    赋值 (.顶边, 纵坐标)
                                    赋值 (.左边, 横坐标)
                                    赋值 (所有右棋的当前位置 [1].横坐标, .左边) ' 这里一定不要漏掉！
                                    赋值 (所有右棋的当前位置 [1].纵坐标, .顶边)
                                    
                                .如果真结束
                                
                            .默认
                                .判断开始 (并且 (等于 (右龙_可以移动, 真), 等于 (右龙_准备移动, 真)))
                                    .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                                        .如果真 (可以发音)
                                            播放龙叫 ()
                                        .如果真结束
                                        赋值 (龙文本, 全局龙文本.对龙说)
                                        删除左棋子龙 ()
                                        赋值 (.顶边, 纵坐标)
                                        赋值 (.左边, 横坐标)
                                        赋值 (所有右棋的当前位置 [8].横坐标, .左边)
                                        赋值 (所有右棋的当前位置 [8].纵坐标, .顶边)
                                        
                                    .如果真结束
                                    
                                .默认
                                    
                                     ' 棋子_右龙_当前位置.横坐标 ＝ 图形按钮_龙_右.左边
                                     ' 棋子_右龙_当前位置.纵坐标 ＝ 图形按钮_龙_右.顶边
                                    
                                    赋值 (龙文本, 全局龙文本.对自己说)
                                    .如果真 (可以发音)
                                        播放龙叫 ()
                                    .如果真结束
                                    
                                    
                                    
                                    
                                .判断结束
                                
                            .判断结束
                            
                        .判断结束
                        
                    .判断结束
                    
                .判断结束
                
            .判断结束
            
            
            
        .判断结束
        
    .判断结束
    
.判断结束
.如果真 (可以显示文本)
    相加 (_启动窗口., 横坐标).未知支持库函数_26 (相加 (_启动窗口., 纵坐标), 龙文本, -1, 真)
.如果真结束


.子程序 _图形按钮_太公_左_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 上方有无棋子, 逻辑型, , , 
.局部变量 上方棋子大小, 整数型, , , 
.局部变量 上方是敌是友, 逻辑型, , , 
.局部变量 下方有无棋子, 逻辑型, , , 
.局部变量 下方棋子大小, 整数型, , , 
.局部变量 下方是敌是友, 逻辑型, , , 
.局部变量 左方有无棋子, 逻辑型, , , 
.局部变量 左方棋子大小, 整数型, , , 
.局部变量 左方是敌是友, 逻辑型, , , 
.局部变量 右方有无棋子, 逻辑型, , , 
.局部变量 右方棋子大小, 整数型, , , 
.局部变量 右方是敌是友, 逻辑型, , , 
.局部变量 匿名局部变量_7319, 空白型, , , 
.局部变量 太公文本, 文本型, , , 
.局部变量 横坐标, 整数型, , , 
.局部变量 纵坐标, 整数型, , , 

赋值 (棋子_左太公_当前位置.横坐标, .左边) ' 得到左棋子太公的当前位置
赋值 (棋子_左太公_当前位置.纵坐标, .顶边)

赋值 (横坐标, .左边)
赋值 (纵坐标, .顶边)

 ' ---------------------------------------------------------------------------------------------------------------

 ' 判断左棋子太公上方有无棋子
赋值 (上方有无棋子,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].上方有无棋子)
赋值 (下方有无棋子,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].下方有无棋子)
赋值 (左方有无棋子,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].左方有无棋子)
赋值 (右方有无棋子,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].右方有无棋子)

 ' 判断左棋子太公上方是敌是友
赋值 (上方是敌是友,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].上方是敌是友)
赋值 (下方是敌是友,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].下方是敌是友)
赋值 (左方是敌是友,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].左方是敌是友)
赋值 (右方是敌是友,  [四周有无棋子 (1, 所有左棋的当前位置, 所有右棋的当前位置)].右方是敌是友)

.判断开始 (等于 (你的左右手, 真)) ' 如果你的是左棋的话才进行移动判断
    
    赋值 (太公文本, 全局太公文本.对自己说)
.默认
    
     ' ////////////////////////////////////////////////////////////////////////////////////////////////////////
     ' -------------------------------------------------------------------------------------------------------
    
    .判断开始 (并且 (等于 (右牛_可以移动, 真), 等于 (右牛_准备移动, 真)))
        .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
            .如果真 (可以发音)
                播放保护我 ()
            .如果真结束
            赋值 (太公文本, 全局太公文本.对牛说) ' 对牛说的话
            删除左棋子太公 ()
            赋值 (.顶边, 纵坐标)
            赋值 (.左边, 横坐标)
            赋值 (所有右棋的当前位置 [6].横坐标, .左边)
            赋值 (所有右棋的当前位置 [6].纵坐标, .顶边)
            播放胜利 ()
            .如果真 (等于 (信息框 (“你赢了！！！要再来一盘吗？”, 1, #提示文字), 0))
                再来一盘 ()
            .如果真结束
            
        .如果真结束
        
    .默认
        
        .判断开始 (并且 (等于 (右狗_可以移动, 真), 等于 (右狗_准备移动, 真)))
            .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                .如果真 (可以发音)
                    播放保护我 ()
                .如果真结束
                赋值 (太公文本, 全局太公文本.对狗说)
                删除左棋子太公 ()
                赋值 (.顶边, 纵坐标)
                赋值 (.左边, 横坐标)
                赋值 (所有右棋的当前位置 [4].横坐标, .左边)
                赋值 (所有右棋的当前位置 [4].纵坐标, .顶边)
                播放胜利 ()
                .如果真 (等于 (信息框 (“你赢了！！！要再来一盘吗？”, 1, #提示文字), 0))
                    再来一盘 ()
                .如果真结束
                
                
            .如果真结束
            
        .默认
            
            .判断开始 (并且 (等于 (右鸡_可以移动, 真), 等于 (右鸡_准备移动, 真)))
                .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                    .如果真 (可以发音)
                        播放保护我 ()
                    .如果真结束
                    赋值 (太公文本, 全局太公文本.对鸡说)
                    删除左棋子太公 ()
                    赋值 (.顶边, 纵坐标)
                    赋值 (.左边, 横坐标)
                    赋值 (所有右棋的当前位置 [3].横坐标, .左边)
                    赋值 (所有右棋的当前位置 [3].纵坐标, .顶边)
                    播放胜利 ()
                    .如果真 (等于 (信息框 (“你赢了！！！要再来一盘吗？”, 1, #提示文字), 0))
                        再来一盘 ()
                    .如果真结束
                    
                    
                .如果真结束
                
            .默认
                
                .判断开始 (并且 (等于 (右马_可以移动, 真), 等于 (右马_准备移动, 真)))
                    .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                        .如果真 (可以发音)
                            播放保护我 ()
                        .如果真结束
                        
                        赋值 (太公文本, 全局太公文本.对马说)
                        删除左棋子太公 ()
                        赋值 (.顶边, 纵坐标)
                        赋值 (.左边, 横坐标)
                        赋值 (所有右棋的当前位置 [5].横坐标, .左边)
                        赋值 (所有右棋的当前位置 [5].纵坐标, .顶边)
                        播放胜利 ()
                        .如果真 (等于 (信息框 (“你赢了！！！要再来一盘吗？”, 1, #提示文字), 0))
                            再来一盘 ()
                        .如果真结束
                        
                        
                    .如果真结束
                    
                .默认
                    
                    .判断开始 (并且 (等于 (右蛇_可以移动, 真), 等于 (右蛇_准备移动, 真)))
                        .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                            .如果真 (可以发音)
                                播放保护我 ()
                            .如果真结束
                            
                            赋值 (太公文本, 全局太公文本.对蛇说)
                            删除左棋子太公 ()
                            赋值 (.顶边, 纵坐标)
                            赋值 (.左边, 横坐标)
                            赋值 (所有右棋的当前位置 [2].横坐标, .左边)
                            赋值 (所有右棋的当前位置 [2].纵坐标, .顶边)
                            播放胜利 ()
                            .如果真 (等于 (信息框 (“你赢了！！！要再来一盘吗？”, 1, #提示文字), 0))
                                再来一盘 ()
                            .如果真结束
                            
                            
                        .如果真结束
                        
                    .默认
                        .判断开始 (并且 (等于 (右虎_可以移动, 真), 等于 (右虎_准备移动, 真)))
                            .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                                .如果真 (可以发音)
                                    播放保护我 ()
                                .如果真结束
                                
                                赋值 (太公文本, 全局太公文本.对虎说)
                                删除左棋子太公 ()
                                赋值 (.顶边, 纵坐标)
                                赋值 (.左边, 横坐标)
                                赋值 (所有右棋的当前位置 [7].横坐标, .左边)
                                赋值 (所有右棋的当前位置 [7].纵坐标, .顶边)
                                播放胜利 ()
                                .如果真 (等于 (信息框 (“你赢了！！！要再来一盘吗？”, 1, #提示文字), 0))
                                    再来一盘 ()
                                .如果真结束
                                
                                
                            .如果真结束
                            
                        .默认
                            .判断开始 (并且 (等于 (右鼠_可以移动, 真), 等于 (右鼠_准备移动, 真)))
                                .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                                    .如果真 (可以发音)
                                        播放保护我 ()
                                    .如果真结束
                                    删除左棋子太公 ()
                                    赋值 (.顶边, 纵坐标)
                                    赋值 (.左边, 横坐标)
                                    赋值 (所有右棋的当前位置 [1].横坐标, .左边)
                                    赋值 (所有右棋的当前位置 [1].纵坐标, .顶边)
                                    
                                    赋值 (太公文本, 全局太公文本.对鼠说)
                                    播放胜利 ()
                                    .如果真 (等于 (信息框 (“你赢了！！！要再来一盘吗？”, 1, #提示文字), 0))
                                        再来一盘 ()
                                    .如果真结束
                                    
                                    
                                .如果真结束
                                
                            .默认
                                .判断开始 (并且 (等于 (右龙_可以移动, 真), 等于 (右龙_准备移动, 真)))
                                    .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                                        .如果真 (可以发音)
                                            播放保护我 ()
                                        .如果真结束
                                        赋值 (太公文本, 全局太公文本.对龙说)
                                        删除左棋子太公 ()
                                        赋值 (.顶边, 纵坐标)
                                        赋值 (.左边, 横坐标)
                                        赋值 (所有右棋的当前位置 [8].横坐标, .左边)
                                        赋值 (所有右棋的当前位置 [8].纵坐标, .顶边)
                                        播放胜利 ()
                                        .如果真 (等于 (信息框 (“你赢了！！！要再来一盘吗？”, 1, #提示文字), 0))
                                            再来一盘 ()
                                        .如果真结束
                                        
                                    .如果真结束
                                    
                                .默认
                                    
                                    赋值 (太公文本, 全局太公文本.对自己说)
                                    .如果真 (可以发音)
                                        播放保护我 ()
                                    .如果真结束
                                    
                                .判断结束
                                
                            .判断结束
                            
                        .判断结束
                        
                    .判断结束
                    
                .判断结束
                
            .判断结束
            
        .判断结束
        
    .判断结束
    
.判断结束

.如果真 (可以显示文本)
    相加 (_启动窗口., 横坐标).未知支持库函数_26 (相加 (_启动窗口., 纵坐标), 太公文本, -1, 真)
.如果真结束

 ' **************************************************************************************************
 ' //////////////////////////////////////////////////////////////////////////////////////////////////
 ' 下面为右棋子按键

.子程序 _图形按钮_鼠_右_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 上方有无棋子, 逻辑型, , , 
.局部变量 上方棋子大小, 整数型, , , 
.局部变量 上方是敌是友, 逻辑型, , , 
.局部变量 下方有无棋子, 逻辑型, , , 
.局部变量 下方棋子大小, 整数型, , , 
.局部变量 下方是敌是友, 逻辑型, , , 
.局部变量 左方有无棋子, 逻辑型, , , 
.局部变量 左方棋子大小, 整数型, , , 
.局部变量 左方是敌是友, 逻辑型, , , 
.局部变量 右方有无棋子, 逻辑型, , , 
.局部变量 右方棋子大小, 整数型, , , 
.局部变量 右方是敌是友, 逻辑型, , , 
.局部变量 鼠文本, 文本型, , , 
.局部变量 横坐标, 整数型, , , 
.局部变量 纵坐标, 整数型, , , 

赋值 (棋子_右鼠_当前位置.横坐标, .左边) ' 得到右棋子鼠的当前位置
赋值 (棋子_右鼠_当前位置.纵坐标, .顶边)
赋值 (横坐标, .左边)
赋值 (纵坐标, .顶边)


 ' ---------------------------------------------------------------------------------------------------------------

 ' 判断右棋子鼠上方有无棋子
赋值 (上方有无棋子,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].上方有无棋子)
赋值 (下方有无棋子,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].下方有无棋子)
赋值 (左方有无棋子,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].左方有无棋子)
赋值 (右方有无棋子,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].右方有无棋子)
 ' 判断左棋子鼠上方是敌是友
赋值 (上方是敌是友,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].上方是敌是友)
赋值 (下方是敌是友,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].下方是敌是友)
赋值 (左方是敌是友,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].左方是敌是友)
赋值 (右方是敌是友,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].右方是敌是友)

.判断开始 (等于 (你的左右手, 假)) ' 如果你的是右棋的话才进行移动判断
    
    赋值 (鼠文本, 全局鼠文本.对自己说)
    
    赋值 (上方棋子大小,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].上方左棋子大小)
    赋值 (右鼠_上方左棋大小, 上方棋子大小)
    
    .判断开始 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 假)), 并且 (等于 (上方有无棋子, 真), 小于 (上方棋子大小, 8), 大于 (上方棋子大小, #棋子_鼠_大小))))
        
        赋值 (右鼠_向上_可移动, 假)
    .默认
        
        .判断开始 (等于 (上方有无棋子, 真))
            赋值 (右鼠上方棋子可删除, 真)
        .默认
            赋值 (右鼠上方棋子可删除, 假)
        .判断结束
        
        赋值 (右鼠_向上_可移动, 真)
    .判断结束
    
     ' --------------------------------------------------------------------------------------------------------------
    
    赋值 (下方棋子大小,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].下方左棋子大小)
    
    赋值 (右鼠_下方左棋大小, 下方棋子大小)
    
    .判断开始 (或者 (并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 假)), 并且 (等于 (下方有无棋子, 真), 小于 (下方棋子大小, 8), 大于 (下方棋子大小, #棋子_鼠_大小))))
        赋值 (右鼠_向下_可移动, 假)
    .默认
        
        .判断开始 (等于 (下方有无棋子, 真))
            赋值 (右鼠下方棋子可删除, 真)
        .默认
            赋值 (右鼠下方棋子可删除, 假)
        .判断结束
        
        赋值 (右鼠_向下_可移动, 真)
    .判断结束
     ' --------------------------------------------------------------------------------------------------------------
    赋值 (右方棋子大小,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].左方左棋子大小)
    赋值 (右鼠_左方左棋大小, 左方棋子大小)
    
    .判断开始 (或者 (并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 假)), 并且 (等于 (左方有无棋子, 真), 小于 (左方棋子大小, 8), 大于 (左方棋子大小, #棋子_鼠_大小))))
        赋值 (右鼠_向左_可移动, 假)
    .默认
        
        .判断开始 (等于 (左方有无棋子, 真))
            赋值 (右鼠左方棋子可删除, 真)
        .默认
            赋值 (右鼠左方棋子可删除, 假)
        .判断结束
        赋值 (右鼠_向左_可移动, 真)
    .判断结束
     ' --------------------------------------------------------------------------------------------------------------
    
    赋值 (右方棋子大小,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].右方左棋子大小)
    赋值 (右鼠_右方左棋大小, 右方棋子大小)
    
    .判断开始 (或者 (并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 假)), 并且 (等于 (右方有无棋子, 真), 小于 (右方棋子大小, 8), 大于 (右方棋子大小, #棋子_鼠_大小))))
        
        赋值 (右鼠_向右_可移动, 假)
    .默认
        
        .判断开始 (等于 (右方有无棋子, 真))
            赋值 (右鼠右方棋子可删除, 真)
        .默认
            赋值 (右鼠右方棋子可删除, 假)
        .判断结束
        赋值 (右鼠_向右_可移动, 真)
    .判断结束
    
    
    连续赋值 (假, 右龙_准备移动, 右鸡_准备移动, 右狗_准备移动, 右马_准备移动, 右蛇_准备移动, 右牛_准备移动, 右虎_准备移动)
    
    赋值 (右鼠_准备移动, 真)
    
    赋值 (右鼠_可以移动, 真)
    
    
    .如果真 (可以发音)
        播放鼠叫 ()
    .如果真结束
    
.默认
     ' ////////////////////////////////////////////////////////////////////////////////////////////////////////
     ' -------------------------------------------------------------------------------------------------------
    
    .判断开始 (并且 (等于 (左牛_可以移动, 真), 等于 (左牛_准备移动, 真)))
        .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
            .如果真 (可以发音)
                播放鼠叫 ()
            .如果真结束
            赋值 (鼠文本, 全局鼠文本.对牛说) ' 龙对牛说的话
            删除右棋子鼠 ()
            赋值 (.顶边, 纵坐标)
            赋值 (.左边, 横坐标)
            赋值 (所有左棋的当前位置 [6].横坐标, .左边)
            赋值 (所有左棋的当前位置 [6].纵坐标, .顶边)
        .如果真结束
        
    .默认
        
        .判断开始 (并且 (等于 (左狗_可以移动, 真), 等于 (左狗_准备移动, 真)))
            .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                .如果真 (可以发音)
                    播放鼠叫 ()
                .如果真结束
                赋值 (鼠文本, 全局鼠文本.对狗说)
                删除右棋子鼠 ()
                赋值 (.顶边, 纵坐标)
                赋值 (.左边, 横坐标)
                赋值 (所有左棋的当前位置 [4].横坐标, .左边)
                赋值 (所有左棋的当前位置 [4].纵坐标, .顶边)
            .如果真结束
            
        .默认
            
            .判断开始 (并且 (等于 (左鸡_可以移动, 真), 等于 (左鸡_准备移动, 真)))
                .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                    .如果真 (可以发音)
                        播放鼠叫 ()
                    .如果真结束
                    
                    赋值 (鼠文本, 全局鼠文本.对鸡说)
                    删除右棋子鼠 ()
                    赋值 (.顶边, 纵坐标)
                    赋值 (.左边, 横坐标)
                    赋值 (所有左棋的当前位置 [3].横坐标, .左边)
                    赋值 (所有左棋的当前位置 [3].纵坐标, .顶边)
                .如果真结束
                 ' 本源码来自易语言资源网(www.wodesoft.com)
            .默认
                
                .判断开始 (并且 (等于 (左马_可以移动, 真), 等于 (左马_准备移动, 真)))
                    .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                        .如果真 (可以发音)
                            播放鼠叫 ()
                        .如果真结束
                        
                        赋值 (鼠文本, 全局鼠文本.对马说)
                        删除右棋子鼠 ()
                        赋值 (.顶边, 纵坐标)
                        赋值 (.左边, 横坐标)
                        赋值 (所有左棋的当前位置 [5].横坐标, .左边)
                        赋值 (所有左棋的当前位置 [5].纵坐标, .顶边)
                    .如果真结束
                    
                .默认
                    
                    .判断开始 (并且 (等于 (左蛇_可以移动, 真), 等于 (左蛇_准备移动, 真)))
                        .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                            .如果真 (可以发音)
                                播放鼠叫 ()
                            .如果真结束
                            
                            赋值 (鼠文本, 全局鼠文本.对蛇说)
                            删除右棋子鼠 ()
                            赋值 (.顶边, 纵坐标)
                            赋值 (.左边, 横坐标)
                            赋值 (所有左棋的当前位置 [2].横坐标, .左边)
                            赋值 (所有左棋的当前位置 [2].纵坐标, .顶边)
                            
                        .如果真结束
                        
                    .默认
                        .判断开始 (并且 (等于 (左虎_可以移动, 真), 等于 (左虎_准备移动, 真)))
                            .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                                .如果真 (可以发音)
                                    播放鼠叫 ()
                                .如果真结束
                                
                                赋值 (鼠文本, 全局鼠文本.对虎说)
                                删除右棋子鼠 ()
                                赋值 (.顶边, 纵坐标)
                                赋值 (.左边, 横坐标)
                                赋值 (所有左棋的当前位置 [7].横坐标, .左边)
                                赋值 (所有左棋的当前位置 [7].纵坐标, .顶边)
                                
                            .如果真结束
                            
                        .默认
                            .判断开始 (并且 (等于 (左鼠_可以移动, 真), 等于 (左鼠_准备移动, 真)))
                                .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                                    .如果真 (可以发音)
                                        播放鼠叫 ()
                                    .如果真结束
                                    
                                    赋值 (鼠文本, 全局鼠文本.对鼠说)
                                    删除右棋子鼠 ()
                                    
                                    赋值 (.顶边, 纵坐标)
                                    赋值 (.左边, 横坐标)
                                    赋值 (所有左棋的当前位置 [1].横坐标, .左边) ' 这里一定不要漏掉！
                                    赋值 (所有左棋的当前位置 [1].纵坐标, .顶边)
                                    
                                .如果真结束
                                
                            .默认
                                .判断开始 (并且 (等于 (左龙_可以移动, 真), 等于 (左龙_准备移动, 真)))
                                    .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                                        .如果真 (可以发音)
                                            播放鼠叫 ()
                                        .如果真结束
                                        赋值 (鼠文本, 全局鼠文本.对龙说)
                                    .如果真结束
                                    
                                .默认
                                    
                                    赋值 (鼠文本, 全局鼠文本.对自己说)
                                    .如果真 (可以发音)
                                        播放鼠叫 ()
                                    .如果真结束
                                    
                                .判断结束
                                
                            .判断结束
                            
                        .判断结束
                        
                    .判断结束
                    
                .判断结束
                
            .判断结束
            
        .判断结束
        
    .判断结束
    
.判断结束

.如果真 (可以显示文本)
    相加 (_启动窗口., 横坐标).未知支持库函数_26 (相加 (_启动窗口., 纵坐标), 鼠文本, -1, 真)
.如果真结束


.子程序 _图形按钮_蛇_右_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 上方有无棋子, 逻辑型, , , 
.局部变量 上方棋子大小, 整数型, , , 
.局部变量 上方是敌是友, 逻辑型, , , 
.局部变量 下方有无棋子, 逻辑型, , , 
.局部变量 下方棋子大小, 整数型, , , 
.局部变量 下方是敌是友, 逻辑型, , , 
.局部变量 左方有无棋子, 逻辑型, , , 
.局部变量 左方棋子大小, 整数型, , , 
.局部变量 左方是敌是友, 逻辑型, , , 
.局部变量 右方有无棋子, 逻辑型, , , 
.局部变量 右方棋子大小, 整数型, , , 
.局部变量 右方是敌是友, 逻辑型, , , 
.局部变量 匿名局部变量_8329, 空白型, , , 
.局部变量 蛇文本, 文本型, , , 
.局部变量 横坐标, 整数型, , , 
.局部变量 纵坐标, 整数型, , , 


赋值 (棋子_右蛇_当前位置.横坐标, .左边)
赋值 (棋子_右蛇_当前位置.纵坐标, .顶边)
赋值 (横坐标, .左边)
赋值 (纵坐标, .顶边)
 ' ---------------------------------------------------------------------------------------------------------------
 ' 判断右棋子蛇上方有无棋子
赋值 (上方有无棋子,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].上方有无棋子)
赋值 (下方有无棋子,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].下方有无棋子)
赋值 (左方有无棋子,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].左方有无棋子)
赋值 (右方有无棋子,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].右方有无棋子)

 ' 判断右棋子蛇上方是敌是友
赋值 (上方是敌是友,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].上方是敌是友)
赋值 (下方是敌是友,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].下方是敌是友)
赋值 (左方是敌是友,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].左方是敌是友)
赋值 (右方是敌是友,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].右方是敌是友)

.判断开始 (等于 (你的左右手, 假)) ' 如果你的是右棋的话才进行移动判断
    
    赋值 (蛇文本, 全局蛇文本.对自己说)
    
    赋值 (上方棋子大小,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].上方左棋子大小)
     ' 右蛇_上方左棋大小
    赋值 (右蛇_上方左棋大小, 上方棋子大小)
    
    .判断开始 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 假)), 并且 (等于 (上方有无棋子, 真), 小于 (上方棋子大小, 9), 大于 (上方棋子大小, #棋子_蛇_大小))))
        赋值 (右蛇_向上_可移动, 假)
    .默认
        
        .判断开始 (等于 (上方有无棋子, 真))
            赋值 (右蛇上方棋子可删除, 真)
        .默认
            赋值 (右蛇上方棋子可删除, 假)
        .判断结束
        
        赋值 (右蛇_向上_可移动, 真)
    .判断结束
    
     ' ---------------------------------------------------------------------------------------------------------------
    赋值 (下方棋子大小,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].下方左棋子大小)
    赋值 (右蛇_下方右棋大小, 下方棋子大小)
    
    .判断开始 (或者 (并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 假)), 并且 (等于 (下方有无棋子, 真), 小于 (下方棋子大小, 9), 大于 (下方棋子大小, #棋子_蛇_大小))))
        赋值 (右蛇_向下_可移动, 假)
    .默认
        
        .判断开始 (等于 (下方有无棋子, 真))
            赋值 (右蛇下方棋子可删除, 真)
        .默认
            赋值 (右蛇下方棋子可删除, 假)
        .判断结束
        
        赋值 (右蛇_向下_可移动, 真)
    .判断结束
     ' --------------------------------------------------------------------------------------------------------------
    赋值 (左方棋子大小,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].左方左棋子大小)
    赋值 (右蛇_左方右棋大小, 左方棋子大小)
    
    .判断开始 (或者 (并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 假)), 并且 (等于 (左方有无棋子, 真), 小于 (左方棋子大小, 9), 大于 (左方棋子大小, #棋子_蛇_大小))))
        赋值 (右蛇_向左_可移动, 假)
    .默认
        
        .判断开始 (等于 (右方有无棋子, 真))
            赋值 (右蛇左方棋子可删除, 真)
        .默认
            赋值 (右蛇左方棋子可删除, 假)
        .判断结束
        赋值 (右蛇_向左_可移动, 真)
    .判断结束
     ' --------------------------------------------------------------------------------------------------------------
    赋值 (右方棋子大小,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].右方左棋子大小)
    赋值 (右蛇_右方左棋大小, 右方棋子大小)
    
    .判断开始 (或者 (并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 假)), 并且 (等于 (右方有无棋子, 真), 小于 (右方棋子大小, 9), 大于 (右方棋子大小, #棋子_蛇_大小))))
        赋值 (右蛇_向右_可移动, 假)
    .默认
        
        .判断开始 (等于 (右方有无棋子, 真))
            赋值 (右蛇右方棋子可删除, 真)
        .默认
            赋值 (右蛇右方棋子可删除, 假)
        .判断结束
        赋值 (右蛇_向右_可移动, 真)
    .判断结束
    
    
    连续赋值 (假, 右龙_准备移动, 右牛_准备移动, 右鸡_准备移动, 右狗_准备移动, 右马_准备移动, 右虎_准备移动, 右鼠_准备移动)
    
    赋值 (右蛇_准备移动, 真)
    
    赋值 (右蛇_可以移动, 真)
    
    .如果真 (可以发音)
        播放蛇叫 ()
    .如果真结束
    
    
.默认
    
     ' ////////////////////////////////////////////////////////////////////////////////////////////////////////
     ' -------------------------------------------------------------------------------------------------------
    
    .判断开始 (并且 (等于 (左牛_可以移动, 真), 等于 (左牛_准备移动, 真)))
        .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
            .如果真 (可以发音)
                播放蛇叫 ()
            .如果真结束
            赋值 (蛇文本, 全局蛇文本.对牛说) ' 对牛说的话
            删除右棋子蛇 ()
            赋值 (.顶边, 纵坐标)
            赋值 (.左边, 横坐标)
            赋值 (所有左棋的当前位置 [6].横坐标, .左边)
            赋值 (所有左棋的当前位置 [6].纵坐标, .顶边)
            
        .如果真结束
        
    .默认
        
        .判断开始 (并且 (等于 (左狗_可以移动, 真), 等于 (左狗_准备移动, 真)))
            .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                .如果真 (可以发音)
                    播放蛇叫 ()
                .如果真结束
                赋值 (蛇文本, 全局蛇文本.对狗说)
                删除右棋子蛇 ()
                赋值 (.顶边, 纵坐标)
                赋值 (.左边, 横坐标)
                赋值 (所有左棋的当前位置 [4].横坐标, .左边)
                赋值 (所有左棋的当前位置 [4].纵坐标, .顶边)
            .如果真结束
            
        .默认
            
            .判断开始 (并且 (等于 (左鸡_可以移动, 真), 等于 (左鸡_准备移动, 真)))
                .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                    .如果真 (可以发音)
                        播放蛇叫 ()
                    .如果真结束
                    
                    赋值 (蛇文本, 全局蛇文本.对鸡说)
                    删除右棋子蛇 ()
                    赋值 (.顶边, 纵坐标)
                    赋值 (.左边, 横坐标)
                    赋值 (所有左棋的当前位置 [3].横坐标, .左边)
                    赋值 (所有左棋的当前位置 [3].纵坐标, .顶边)
                .如果真结束
                
            .默认
                
                .判断开始 (并且 (等于 (左马_可以移动, 真), 等于 (左马_准备移动, 真)))
                    .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                        .如果真 (可以发音)
                            播放蛇叫 ()
                        .如果真结束
                        
                        赋值 (蛇文本, 全局蛇文本.对马说)
                        删除右棋子蛇 ()
                        赋值 (.顶边, 纵坐标)
                        赋值 (.左边, 横坐标)
                        赋值 (所有左棋的当前位置 [5].横坐标, .左边)
                        赋值 (所有左棋的当前位置 [5].纵坐标, .顶边)
                    .如果真结束
                    
                .默认
                    
                    .判断开始 (并且 (等于 (左蛇_可以移动, 真), 等于 (左蛇_准备移动, 真)))
                        .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                            .如果真 (可以发音)
                                播放蛇叫 ()
                            .如果真结束
                            
                            赋值 (蛇文本, 全局蛇文本.对蛇说)
                            删除右棋子蛇 ()
                            赋值 (.顶边, 纵坐标)
                            赋值 (.左边, 横坐标)
                            赋值 (所有左棋的当前位置 [2].横坐标, .左边)
                            赋值 (所有左棋的当前位置 [2].纵坐标, .顶边)
                        .如果真结束
                        
                    .默认
                        .判断开始 (并且 (等于 (左虎_可以移动, 真), 等于 (左虎_准备移动, 真)))
                            .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                                .如果真 (可以发音)
                                    播放蛇叫 ()
                                .如果真结束
                                
                                赋值 (蛇文本, 全局蛇文本.对虎说)
                                删除右棋子蛇 ()
                                赋值 (.顶边, 纵坐标)
                                赋值 (.左边, 横坐标)
                                赋值 (所有左棋的当前位置 [7].横坐标, .左边)
                                赋值 (所有左棋的当前位置 [7].纵坐标, .顶边)
                            .如果真结束
                            
                        .默认
                            .判断开始 (并且 (等于 (左鼠_可以移动, 真), 等于 (左鼠_准备移动, 真)))
                                .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                                    .如果真 (可以发音)
                                        播放蛇叫 ()
                                    .如果真结束
                                    
                                    赋值 (蛇文本, 全局蛇文本.对鼠说)
                                .如果真结束
                                
                            .默认
                                .判断开始 (并且 (等于 (左龙_可以移动, 真), 等于 (左龙_准备移动, 真)))
                                    .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                                        .如果真 (可以发音)
                                            播放蛇叫 ()
                                        .如果真结束
                                        赋值 (蛇文本, 全局蛇文本.对龙说)
                                        删除右棋子蛇 ()
                                        赋值 (.顶边, 纵坐标)
                                        赋值 (.左边, 横坐标)
                                        赋值 (所有左棋的当前位置 [8].横坐标, .左边)
                                        赋值 (所有左棋的当前位置 [8].纵坐标, .顶边)
                                    .如果真结束
                                    
                                .默认
                                    
                                    赋值 (蛇文本, 全局蛇文本.对自己说)
                                    .如果真 (可以发音)
                                        播放蛇叫 ()
                                    .如果真结束
                                    
                                .判断结束
                                
                            .判断结束
                            
                        .判断结束
                        
                    .判断结束
                    
                .判断结束
                
            .判断结束
            
        .判断结束
        
    .判断结束
    
.判断结束

.如果真 (可以显示文本)
    相加 (_启动窗口., 横坐标).未知支持库函数_26 (相加 (_启动窗口., 纵坐标), 蛇文本, -1, 真)
.如果真结束



.子程序 _图形按钮_鸡_右_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 上方有无棋子, 逻辑型, , , 
.局部变量 上方棋子大小, 整数型, , , 
.局部变量 上方是敌是友, 逻辑型, , , 
.局部变量 下方有无棋子, 逻辑型, , , 
.局部变量 下方棋子大小, 整数型, , , 
.局部变量 下方是敌是友, 逻辑型, , , 
.局部变量 左方有无棋子, 逻辑型, , , 
.局部变量 左方棋子大小, 整数型, , , 
.局部变量 左方是敌是友, 逻辑型, , , 
.局部变量 右方有无棋子, 逻辑型, , , 
.局部变量 右方棋子大小, 整数型, , , 
.局部变量 右方是敌是友, 逻辑型, , , 
.局部变量 匿名局部变量_8210, 空白型, , , 
.局部变量 匿名局部变量_8211, 空白型, , , 
.局部变量 鸡文本, 文本型, , , 
.局部变量 横坐标, 整数型, , , 
.局部变量 纵坐标, 整数型, , , 


赋值 (棋子_右鸡_当前位置.横坐标, .左边)
赋值 (棋子_右鸡_当前位置.纵坐标, .顶边)
赋值 (横坐标, .左边)
赋值 (纵坐标, .顶边)

 ' ---------------------------------------------------------------------------------------------------------------

 ' 判断右棋子鸡上方有无棋子
赋值 (上方有无棋子,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].上方有无棋子)
赋值 (下方有无棋子,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].下方有无棋子)
赋值 (左方有无棋子,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].左方有无棋子)
赋值 (右方有无棋子,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].右方有无棋子)

 ' 判断右棋子鸡上方是敌是友
赋值 (上方是敌是友,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].上方是敌是友)
赋值 (下方是敌是友,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].下方是敌是友)
赋值 (左方是敌是友,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].左方是敌是友)
赋值 (右方是敌是友,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].右方是敌是友)

.判断开始 (等于 (你的左右手, 假)) ' 如果你的是右棋的话才进行移动判断
    
    赋值 (鸡文本, 全局鸡文本.对自己说)
    
    赋值 (上方棋子大小,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].上方左棋子大小)
    赋值 (右鸡_上方左棋大小, 上方棋子大小)
    .判断开始 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 假)), 并且 (等于 (上方有无棋子, 真), 小于 (上方棋子大小, 9), 大于 (上方棋子大小, #棋子_鸡_大小))))
        赋值 (右鸡_向上_可移动, 假)
    .默认
        
        .判断开始 (等于 (上方有无棋子, 真))
            赋值 (右鸡上方棋子可删除, 真)
        .默认
            赋值 (右鸡上方棋子可删除, 假)
        .判断结束
        
        赋值 (右鸡_向上_可移动, 真)
    .判断结束
    
     ' --------------------------------------------------------------------------------------------------------------
    赋值 (下方棋子大小,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].下方左棋子大小)
    赋值 (右鸡_下方左棋大小, 下方棋子大小)
    
    .判断开始 (或者 (并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 假)), 并且 (等于 (下方有无棋子, 真), 小于 (下方棋子大小, 9), 大于 (下方棋子大小, #棋子_鸡_大小))))
        赋值 (右鸡_向下_可移动, 假)
    .默认
        
        .判断开始 (等于 (下方有无棋子, 真))
            赋值 (右鸡下方棋子可删除, 真)
        .默认
            赋值 (右鸡下方棋子可删除, 假)
        .判断结束
        
        赋值 (右鸡_向下_可移动, 真)
    .判断结束
     ' ---------------------------------------------------------------------------------------------------------------
    赋值 (左方棋子大小,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].左方左棋子大小)
    赋值 (右鸡_左方左棋大小, 左方棋子大小)
    
    .判断开始 (或者 (并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 假)), 并且 (等于 (左方有无棋子, 真), 小于 (左方棋子大小, 9), 大于 (左方棋子大小, #棋子_鸡_大小))))
        赋值 (右鸡_向左_可移动, 假)
    .默认
        
        .判断开始 (等于 (左方有无棋子, 真))
            赋值 (右鸡左方棋子可删除, 真)
        .默认
            赋值 (右鸡左方棋子可删除, 假)
        .判断结束
        赋值 (右鸡_向左_可移动, 真)
    .判断结束
     ' ---------------------------------------------------------------------------------------------------------------
    
    赋值 (右方棋子大小,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].右方左棋子大小)
    赋值 (右鸡_右方左棋大小, 右方棋子大小)
    
    .判断开始 (或者 (并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 假)), 并且 (等于 (右方有无棋子, 真), 小于 (右方棋子大小, 9), 大于 (右方棋子大小, #棋子_鸡_大小))))
        赋值 (右鸡_向右_可移动, 假)
    .默认
        
        .判断开始 (等于 (右方有无棋子, 真))
            赋值 (右鸡右方棋子可删除, 真)
        .默认
            赋值 (右鸡右方棋子可删除, 假)
        .判断结束
        赋值 (右鸡_向右_可移动, 真)
    .判断结束
    
    
    
    连续赋值 (假, 右龙_准备移动, 右牛_准备移动, 右狗_准备移动, 右马_准备移动, 右蛇_准备移动, 右虎_准备移动, 右鼠_准备移动)
    
    赋值 (右鸡_准备移动, 真)
    
    赋值 (右鸡_可以移动, 真)
    
    
    .如果真 (可以发音)
        播放鸡叫 ()
    .如果真结束
    
    
.默认
    
     ' ////////////////////////////////////////////////////////////////////////////////////////////////////////
     ' -------------------------------------------------------------------------------------------------------
    
    .判断开始 (并且 (等于 (左牛_可以移动, 真), 等于 (左牛_准备移动, 真)))
        .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
            .如果真 (可以发音)
                播放鸡叫 ()
            .如果真结束
            赋值 (鸡文本, 全局鸡文本.对牛说) ' 对牛说的话
            删除右棋子鸡 ()
            赋值 (.顶边, 纵坐标)
            赋值 (.左边, 横坐标)
            赋值 (所有左棋的当前位置 [6].横坐标, .左边)
            赋值 (所有左棋的当前位置 [6].纵坐标, .顶边)
        .如果真结束
        
    .默认
        
        .判断开始 (并且 (等于 (左狗_可以移动, 真), 等于 (左狗_准备移动, 真)))
            .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                .如果真 (可以发音)
                    播放鸡叫 ()
                .如果真结束
                赋值 (鸡文本, 全局鸡文本.对狗说)
                删除右棋子鸡 ()
                赋值 (.顶边, 纵坐标)
                赋值 (.左边, 横坐标)
                赋值 (所有左棋的当前位置 [4].横坐标, .左边)
                赋值 (所有左棋的当前位置 [4].纵坐标, .顶边)
            .如果真结束
            
        .默认
            
            .判断开始 (并且 (等于 (左鸡_可以移动, 真), 等于 (左鸡_准备移动, 真)))
                .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                    .如果真 (可以发音)
                        播放鸡叫 ()
                    .如果真结束
                    
                    赋值 (鸡文本, 全局鸡文本.对鸡说)
                    删除右棋子鸡 ()
                    赋值 (.顶边, 纵坐标)
                    赋值 (.左边, 横坐标)
                    赋值 (所有左棋的当前位置 [3].横坐标, .左边)
                    赋值 (所有左棋的当前位置 [3].纵坐标, .顶边)
                    
                .如果真结束
                
            .默认
                
                .判断开始 (并且 (等于 (左马_可以移动, 真), 等于 (左马_准备移动, 真)))
                    .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                        .如果真 (可以发音)
                            播放鸡叫 ()
                        .如果真结束
                        
                        赋值 (鸡文本, 全局鸡文本.对马说)
                        删除右棋子鸡 ()
                        赋值 (.顶边, 纵坐标)
                        赋值 (.左边, 横坐标)
                        赋值 (所有左棋的当前位置 [5].横坐标, .左边)
                        赋值 (所有左棋的当前位置 [5].纵坐标, .顶边)
                    .如果真结束
                    
                .默认
                    
                    .判断开始 (并且 (等于 (左蛇_可以移动, 真), 等于 (左蛇_准备移动, 真)))
                        .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                            .如果真 (可以发音)
                                播放鸡叫 ()
                            .如果真结束
                            
                            赋值 (鸡文本, 全局鸡文本.对蛇说)
                            
                        .如果真结束
                        
                    .默认
                        .判断开始 (并且 (等于 (左虎_可以移动, 真), 等于 (左虎_准备移动, 真)))
                            .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                                .如果真 (可以发音)
                                    播放鸡叫 ()
                                .如果真结束
                                
                                赋值 (鸡文本, 全局鸡文本.对虎说)
                                删除右棋子鸡 ()
                                赋值 (.顶边, 纵坐标)
                                赋值 (.左边, 横坐标)
                                赋值 (所有左棋的当前位置 [7].横坐标, .左边)
                                赋值 (所有左棋的当前位置 [7].纵坐标, .顶边)
                            .如果真结束
                            
                        .默认
                            .判断开始 (并且 (等于 (左鼠_可以移动, 真), 等于 (左鼠_准备移动, 真)))
                                .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                                    .如果真 (可以发音)
                                        播放鸡叫 ()
                                    .如果真结束
                                    
                                    赋值 (鸡文本, 全局鸡文本.对鼠说)
                                .如果真结束
                                
                            .默认
                                .判断开始 (并且 (等于 (左龙_可以移动, 真), 等于 (左龙_准备移动, 真)))
                                    .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                                        .如果真 (可以发音)
                                            播放鸡叫 ()
                                        .如果真结束
                                        赋值 (鸡文本, 全局鸡文本.对龙说)
                                        删除右棋子鸡 ()
                                        赋值 (.顶边, 纵坐标)
                                        赋值 (.左边, 横坐标)
                                        赋值 (所有左棋的当前位置 [8].横坐标, .左边)
                                        赋值 (所有左棋的当前位置 [8].纵坐标, .顶边)
                                    .如果真结束
                                    
                                .默认
                                    
                                    
                                    赋值 (鸡文本, 全局鸡文本.对自己说)
                                    .如果真 (可以发音)
                                        播放鸡叫 ()
                                    .如果真结束
                                    
                                .判断结束
                                
                            .判断结束
                            
                        .判断结束
                        
                    .判断结束
                    
                .判断结束
                
            .判断结束
            
        .判断结束
        
    .判断结束
    
.判断结束


.如果真 (可以显示文本)
    相加 (_启动窗口., 横坐标).未知支持库函数_26 (相加 (_启动窗口., 纵坐标), 鸡文本, -1, 真)
.如果真结束



.子程序 _图形按钮_狗_右_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 上方有无棋子, 逻辑型, , , 
.局部变量 上方棋子大小, 整数型, , , 
.局部变量 上方是敌是友, 逻辑型, , , 
.局部变量 下方有无棋子, 逻辑型, , , 
.局部变量 下方棋子大小, 整数型, , , 
.局部变量 下方是敌是友, 逻辑型, , , 
.局部变量 左方有无棋子, 逻辑型, , , 
.局部变量 左方棋子大小, 整数型, , , 
.局部变量 左方是敌是友, 逻辑型, , , 
.局部变量 右方有无棋子, 逻辑型, , , 
.局部变量 右方棋子大小, 整数型, , , 
.局部变量 右方是敌是友, 逻辑型, , , 
.局部变量 匿名局部变量_8065, 空白型, , , 
.局部变量 匿名局部变量_8066, 空白型, , , 
.局部变量 横坐标, 整数型, , , 
.局部变量 纵坐标, 整数型, , , 
.局部变量 狗文本, 文本型, , , 

赋值 (棋子_右狗_当前位置.横坐标, .左边)
赋值 (棋子_右狗_当前位置.纵坐标, .顶边)

赋值 (横坐标, .左边) ' 得到左棋子狗的当前位置
赋值 (纵坐标, .顶边)

 ' ---------------------------------------------------------------------------------------------------------------

 ' 判断右棋子狗上方有无棋子
赋值 (上方有无棋子,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].上方有无棋子)
赋值 (下方有无棋子,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].下方有无棋子)
赋值 (左方有无棋子,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].左方有无棋子)
赋值 (右方有无棋子,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].右方有无棋子)

 ' 判断历棋子狗上方是敌是友
赋值 (上方是敌是友,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].上方是敌是友)
赋值 (下方是敌是友,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].下方是敌是友)
赋值 (左方是敌是友,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].左方是敌是友)
赋值 (右方是敌是友,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].右方是敌是友)


.判断开始 (等于 (你的左右手, 假))
    赋值 (狗文本, 全局狗文本.对自己说)
    
     ' --------------------------------------------------------------------------------------------------------------
    赋值 (上方棋子大小,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].上方左棋子大小)
     ' 右狗_上方左棋大小
    赋值 (右狗_上方左棋大小, 上方棋子大小)
    
    .判断开始 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 假)), 并且 (等于 (上方有无棋子, 真), 小于 (上方棋子大小, 9), 大于 (上方棋子大小, #棋子_狗_大小))))
        赋值 (右狗_向上_可移动, 假)
    .默认
        
        .判断开始 (等于 (上方有无棋子, 真))
            赋值 (右狗上方棋子可删除, 真)
        .默认
            赋值 (右狗上方棋子可删除, 假)
        .判断结束
        
        赋值 (右狗_向上_可移动, 真)
    .判断结束
    
     ' --------------------------------------------------------------------------------------------------------------
    赋值 (下方棋子大小,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].下方左棋子大小)
    赋值 (右狗_下方左棋大小, 下方棋子大小)
    
    .判断开始 (或者 (并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 假)), 并且 (等于 (下方有无棋子, 真), 小于 (下方棋子大小, 9), 大于 (下方棋子大小, #棋子_狗_大小))))
        赋值 (右狗_向下_可移动, 假)
    .默认
        
        .判断开始 (等于 (下方有无棋子, 真))
            赋值 (右狗下方棋子可删除, 真)
        .默认
            赋值 (右狗下方棋子可删除, 假)
        .判断结束
        
        赋值 (右狗_向下_可移动, 真)
    .判断结束
     ' ---------------------------------------------------------------------------------------------------------------
    赋值 (左方棋子大小,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].左方左棋子大小)
    赋值 (右狗_左方左棋大小, 左方棋子大小)
    
    .判断开始 (或者 (并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 假)), 并且 (等于 (左方有无棋子, 真), 小于 (左方棋子大小, 9), 大于 (左方棋子大小, #棋子_狗_大小))))
        赋值 (右狗_向左_可移动, 假)
    .默认
        
        .判断开始 (等于 (左方有无棋子, 真))
            赋值 (右狗左方棋子可删除, 真)
        .默认
            赋值 (右狗左方棋子可删除, 假)
        .判断结束
        赋值 (右狗_向左_可移动, 真)
    .判断结束
     ' --------------------------------------------------------------------------------------------------------------
    赋值 (右方棋子大小,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].右方左棋子大小)
    赋值 (右狗_右方左棋大小, 右方棋子大小)
    
    .判断开始 (或者 (并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 假)), 并且 (等于 (右方有无棋子, 真), 小于 (右方棋子大小, 9), 大于 (右方棋子大小, #棋子_狗_大小))))
        赋值 (右狗_向右_可移动, 假)
    .默认
        
        .判断开始 (等于 (右方有无棋子, 真))
            赋值 (右狗右方棋子可删除, 真)
        .默认
            赋值 (右狗右方棋子可删除, 假)
        .判断结束
        赋值 (右狗_向右_可移动, 真)
    .判断结束
    
    
    
    连续赋值 (假, 右龙_准备移动, 右牛_准备移动, 右鸡_准备移动, 右马_准备移动, 右蛇_准备移动, 右虎_准备移动, 右鼠_准备移动)
    
    赋值 (右狗_准备移动, 真)
    
    赋值 (右狗_可以移动, 真)
    
    
    .如果真 (可以发音)
        播放狗叫 ()
    .如果真结束
    
.默认
    
     ' ////////////////////////////////////////////////////////////////////////////////////////////////////////
     ' -------------------------------------------------------------------------------------------------------
    
    .判断开始 (并且 (等于 (左牛_可以移动, 真), 等于 (左牛_准备移动, 真)))
        .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
            .如果真 (可以发音)
                播放狗叫 ()
            .如果真结束
            赋值 (狗文本, 全局狗文本.对牛说) ' 对牛说的话
            删除右棋子狗 ()
            赋值 (.顶边, 纵坐标)
            赋值 (.左边, 横坐标)
            赋值 (所有左棋的当前位置 [6].横坐标, .左边)
            赋值 (所有左棋的当前位置 [6].纵坐标, .顶边)
            
        .如果真结束
        
    .默认
        
        .判断开始 (并且 (等于 (左狗_可以移动, 真), 等于 (左狗_准备移动, 真)))
            .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                .如果真 (可以发音)
                    播放狗叫 ()
                .如果真结束
                赋值 (狗文本, 全局狗文本.对狗说)
                删除右棋子狗 ()
                赋值 (.顶边, 纵坐标)
                赋值 (.左边, 横坐标)
                赋值 (所有左棋的当前位置 [4].横坐标, .左边)
                赋值 (所有左棋的当前位置 [4].纵坐标, .顶边)
            .如果真结束
            
        .默认
            
            .判断开始 (并且 (等于 (左鸡_可以移动, 真), 等于 (左鸡_准备移动, 真)))
                .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                    .如果真 (可以发音)
                        播放狗叫 ()
                    .如果真结束
                    
                    赋值 (狗文本, 全局狗文本.对鸡说)
                    
                .如果真结束
                
            .默认
                
                .判断开始 (并且 (等于 (左马_可以移动, 真), 等于 (左马_准备移动, 真)))
                    .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                        .如果真 (可以发音)
                            播放狗叫 ()
                        .如果真结束
                        
                        赋值 (狗文本, 全局狗文本.对马说)
                        删除右棋子狗 ()
                        赋值 (.顶边, 纵坐标)
                        赋值 (.左边, 横坐标)
                        赋值 (所有左棋的当前位置 [5].横坐标, .左边)
                        赋值 (所有左棋的当前位置 [5].纵坐标, .顶边)
                    .如果真结束
                    
                .默认
                    
                    .判断开始 (并且 (等于 (左蛇_可以移动, 真), 等于 (左蛇_准备移动, 真)))
                        .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                            .如果真 (可以发音)
                                播放狗叫 ()
                            .如果真结束
                            
                            赋值 (狗文本, 全局狗文本.对蛇说)
                            
                        .如果真结束
                        
                    .默认
                        .判断开始 (并且 (等于 (左虎_可以移动, 真), 等于 (左虎_准备移动, 真)))
                            .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                                .如果真 (可以发音)
                                    播放狗叫 ()
                                .如果真结束
                                
                                赋值 (狗文本, 全局狗文本.对虎说)
                                删除右棋子狗 ()
                                赋值 (.顶边, 纵坐标)
                                赋值 (.左边, 横坐标)
                                赋值 (所有左棋的当前位置 [7].横坐标, .左边)
                                赋值 (所有左棋的当前位置 [7].纵坐标, .顶边)
                                
                            .如果真结束
                            
                        .默认
                            .判断开始 (并且 (等于 (左鼠_可以移动, 真), 等于 (左鼠_准备移动, 真)))
                                .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                                    .如果真 (可以发音)
                                        播放狗叫 ()
                                    .如果真结束
                                    
                                    赋值 (狗文本, 全局狗文本.对鼠说)
                                .如果真结束
                                
                            .默认
                                .判断开始 (并且 (等于 (左龙_可以移动, 真), 等于 (左龙_准备移动, 真)))
                                    .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                                        .如果真 (可以发音)
                                            播放狗叫 ()
                                        .如果真结束
                                        赋值 (狗文本, 全局狗文本.对龙说)
                                        删除右棋子狗 ()
                                        赋值 (.顶边, 纵坐标)
                                        赋值 (.左边, 横坐标)
                                        赋值 (所有左棋的当前位置 [8].横坐标, .左边)
                                        赋值 (所有左棋的当前位置 [8].纵坐标, .顶边)
                                    .如果真结束
                                    
                                .默认
                                    
                                    
                                    赋值 (狗文本, 全局狗文本.对自己说)
                                    .如果真 (可以发音)
                                        播放狗叫 ()
                                    .如果真结束
                                    
                                .判断结束
                                
                            .判断结束
                            
                        .判断结束
                        
                    .判断结束
                    
                .判断结束
                
            .判断结束
            
        .判断结束
        
    .判断结束
    
.判断结束

.如果真 (可以显示文本)
    相加 (_启动窗口., 横坐标).未知支持库函数_26 (相加 (_启动窗口., 纵坐标), 狗文本, -1, 真)
.如果真结束




.子程序 _图形按钮_马_右_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 上方有无棋子, 逻辑型, , , 
.局部变量 上方棋子大小, 整数型, , , 
.局部变量 上方是敌是友, 逻辑型, , , 
.局部变量 下方有无棋子, 逻辑型, , , 
.局部变量 下方棋子大小, 整数型, , , 
.局部变量 下方是敌是友, 逻辑型, , , 
.局部变量 左方有无棋子, 逻辑型, , , 
.局部变量 左方棋子大小, 整数型, , , 
.局部变量 左方是敌是友, 逻辑型, , , 
.局部变量 右方有无棋子, 逻辑型, , , 
.局部变量 右方棋子大小, 整数型, , , 
.局部变量 右方是敌是友, 逻辑型, , , 
.局部变量 匿名局部变量_7770, 空白型, , , 
.局部变量 横坐标, 整数型, , , 
.局部变量 纵坐标, 整数型, , , 
.局部变量 马文本, 文本型, , , 


赋值 (棋子_右马_当前位置.横坐标, .左边)
赋值 (棋子_右马_当前位置.纵坐标, .顶边)
赋值 (横坐标, .左边)
赋值 (纵坐标, .顶边)

 ' ---------------------------------------------------------------------------------------------------------------
 ' 判断右棋子马上方有无棋子
赋值 (上方有无棋子,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].上方有无棋子)
赋值 (下方有无棋子,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].下方有无棋子)
赋值 (左方有无棋子,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].左方有无棋子)
赋值 (右方有无棋子,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].右方有无棋子)

 ' 判断右棋子马上方是敌是友
赋值 (上方是敌是友,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].上方是敌是友)
赋值 (下方是敌是友,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].下方是敌是友)
赋值 (左方是敌是友,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].左方是敌是友)
赋值 (右方是敌是友,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].右方是敌是友)

.判断开始 (等于 (你的左右手, 假))
    赋值 (马文本, 全局马文本.对自己说)
     ' --------------------------------------------------------------------------------------------------------------
    赋值 (上方棋子大小,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].上方左棋子大小)
    赋值 (右马_上方左棋大小, 上方棋子大小)
    
    .判断开始 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 假)), 并且 (等于 (上方有无棋子, 真), 小于 (上方棋子大小, 9), 大于 (上方棋子大小, #棋子_马_大小))))
        
        赋值 (右马_向上_可移动, 假)
    .默认
        
        .判断开始 (等于 (上方有无棋子, 真))
            赋值 (右马上方棋子可删除, 真)
        .默认
            赋值 (右马上方棋子可删除, 假)
        .判断结束
        
        赋值 (右马_向上_可移动, 真)
    .判断结束
    
     ' --------------------------------------------------------------------------------------------------------------
    赋值 (下方棋子大小,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].下方左棋子大小)
    赋值 (右马_下方左棋大小, 下方棋子大小)
    
    .判断开始 (或者 (并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 假)), 并且 (等于 (下方有无棋子, 真), 小于 (下方棋子大小, 9), 大于 (下方棋子大小, #棋子_马_大小))))
        赋值 (右马_向下_可移动, 假)
    .默认
        
        .判断开始 (等于 (下方有无棋子, 真))
            赋值 (右马下方棋子可删除, 真)
        .默认
            赋值 (右马下方棋子可删除, 假)
        .判断结束
        
        赋值 (右马_向下_可移动, 真)
    .判断结束
     ' --------------------------------------------------------------------------------------------------------------
    赋值 (左方棋子大小,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].左方左棋子大小)
    赋值 (右马_左方左棋大小, 左方棋子大小)
     ' 调试输出 (到文本 (左方棋子大小))
    .判断开始 (或者 (并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 假)), 并且 (等于 (左方有无棋子, 真), 小于 (左方棋子大小, 9), 大于 (左方棋子大小, #棋子_马_大小))))
        赋值 (右马_向左_可移动, 假)
    .默认
        
        .判断开始 (等于 (左方有无棋子, 真))
            赋值 (右马左方棋子可删除, 真)
        .默认
            赋值 (右马左方棋子可删除, 假)
        .判断结束
        赋值 (右马_向左_可移动, 真)
    .判断结束
     ' --------------------------------------------------------------------------------------------------------------
    赋值 (右方棋子大小,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].右方左棋子大小)
    赋值 (右马_右方左棋大小, 右方棋子大小)
    
    
    .判断开始 (或者 (并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 假)), 并且 (等于 (右方有无棋子, 真), 小于 (右方棋子大小, 9), 大于 (右方棋子大小, #棋子_马_大小))))
        赋值 (右马_向右_可移动, 假)
    .默认
        
        .判断开始 (等于 (右方有无棋子, 真))
            赋值 (右马右方棋子可删除, 真)
        .默认
            赋值 (右马右方棋子可删除, 假)
        .判断结束
        赋值 (右马_向右_可移动, 真)
    .判断结束
    
    
    
    连续赋值 (假, 右龙_准备移动, 右牛_准备移动, 右鸡_准备移动, 右狗_准备移动, 右蛇_准备移动, 右虎_准备移动, 右鼠_准备移动)
    
    赋值 (右马_准备移动, 真)
    
    赋值 (右马_可以移动, 真)
    
    
    .如果真 (可以发音)
        播放马叫 ()
    .如果真结束
    
    
.默认
    
     ' ////////////////////////////////////////////////////////////////////////////////////////////////////////
     ' -------------------------------------------------------------------------------------------------------
    
    .判断开始 (并且 (等于 (左牛_可以移动, 真), 等于 (左牛_准备移动, 真)))
        .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
            .如果真 (可以发音)
                播放马叫 ()
            .如果真结束
            赋值 (马文本, 全局马文本.对牛说) ' 对牛说的话
            删除右棋子马 ()
            赋值 (.顶边, 纵坐标)
            赋值 (.左边, 横坐标)
            赋值 (所有左棋的当前位置 [6].横坐标, .左边)
            赋值 (所有左棋的当前位置 [6].纵坐标, .顶边)
            
        .如果真结束
        
    .默认
        
        .判断开始 (并且 (等于 (左狗_可以移动, 真), 等于 (左狗_准备移动, 真)))
            .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                .如果真 (可以发音)
                    播放马叫 ()
                .如果真结束
                赋值 (马文本, 全局马文本.对狗说)
            .如果真结束
            
        .默认
            
            .判断开始 (并且 (等于 (左鸡_可以移动, 真), 等于 (左鸡_准备移动, 真)))
                .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                    .如果真 (可以发音)
                        播放马叫 ()
                    .如果真结束
                    
                    赋值 (马文本, 全局狗文本.对马说)
                .如果真结束
                
            .默认
                
                .判断开始 (并且 (等于 (左马_可以移动, 真), 等于 (左马_准备移动, 真)))
                    .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                        .如果真 (可以发音)
                            播放马叫 ()
                        .如果真结束
                        
                        赋值 (马文本, 全局马文本.对马说)
                        删除右棋子马 ()
                        赋值 (.顶边, 纵坐标)
                        赋值 (.左边, 横坐标)
                        赋值 (所有左棋的当前位置 [5].横坐标, .左边)
                        赋值 (所有左棋的当前位置 [5].纵坐标, .顶边)
                        
                    .如果真结束
                     ' 本源码来自易语言资源网(www.wodesoft.com)
                .默认
                    
                    .判断开始 (并且 (等于 (左蛇_可以移动, 真), 等于 (左蛇_准备移动, 真)))
                        .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                            .如果真 (可以发音)
                                播放马叫 ()
                            .如果真结束
                            
                            赋值 (马文本, 全局马文本.对蛇说)
                        .如果真结束
                        
                    .默认
                        .判断开始 (并且 (等于 (左虎_可以移动, 真), 等于 (左虎_准备移动, 真)))
                            .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                                .如果真 (可以发音)
                                    播放马叫 ()
                                .如果真结束
                                
                                赋值 (马文本, 全局马文本.对虎说)
                                删除右棋子马 ()
                                赋值 (.顶边, 纵坐标)
                                赋值 (.左边, 横坐标)
                                赋值 (所有左棋的当前位置 [7].横坐标, .左边)
                                赋值 (所有左棋的当前位置 [7].纵坐标, .顶边)
                                
                            .如果真结束
                            
                        .默认
                            .判断开始 (并且 (等于 (左鼠_可以移动, 真), 等于 (左鼠_准备移动, 真)))
                                .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                                    .如果真 (可以发音)
                                        播放马叫 ()
                                    .如果真结束
                                    
                                    赋值 (马文本, 全局马文本.对鼠说)
                                .如果真结束
                                
                            .默认
                                .判断开始 (并且 (等于 (左龙_可以移动, 真), 等于 (左龙_准备移动, 真)))
                                    .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                                        .如果真 (可以发音)
                                            播放马叫 ()
                                        .如果真结束
                                        赋值 (马文本, 全局马文本.对龙说)
                                        删除右棋子马 ()
                                        赋值 (.顶边, 纵坐标)
                                        赋值 (.左边, 横坐标)
                                        赋值 (所有左棋的当前位置 [8].横坐标, .左边)
                                        赋值 (所有左棋的当前位置 [8].纵坐标, .顶边)
                                        
                                    .如果真结束
                                    
                                .默认
                                    
                                    
                                    赋值 (马文本, 全局马文本.对自己说)
                                    .如果真 (可以发音)
                                        播放马叫 ()
                                    .如果真结束
                                    
                                .判断结束
                                
                            .判断结束
                            
                        .判断结束
                        
                    .判断结束
                    
                .判断结束
                
            .判断结束
            
        .判断结束
        
    .判断结束
    
.判断结束

.如果真 (可以显示文本)
    相加 (_启动窗口., 横坐标).未知支持库函数_26 (相加 (_启动窗口., 纵坐标), 马文本, -1, 真)
.如果真结束





.子程序 _图形按钮_牛_右_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 上方有无棋子, 逻辑型, , , 
.局部变量 上方棋子大小, 整数型, , , 
.局部变量 上方是敌是友, 逻辑型, , , 
.局部变量 匿名局部变量_7618, 空白型, , , 
.局部变量 下方有无棋子, 逻辑型, , , 
.局部变量 下方棋子大小, 整数型, , , 
.局部变量 下方是敌是友, 逻辑型, , , 
.局部变量 匿名局部变量_7622, 空白型, , , 
.局部变量 左方有无棋子, 逻辑型, , , 
.局部变量 左方棋子大小, 整数型, , , 
.局部变量 左方是敌是友, 逻辑型, , , 
.局部变量 匿名局部变量_7626, 空白型, , , 
.局部变量 右方有无棋子, 逻辑型, , , 
.局部变量 右方棋子大小, 整数型, , , 
.局部变量 右方是敌是友, 逻辑型, , , 
.局部变量 匿名局部变量_7630, 空白型, , , 
.局部变量 上方条件1, 逻辑型, , , 
.局部变量 上方条件2, 逻辑型, , , 
.局部变量 下方条件1, 逻辑型, , , 
.局部变量 下方条件2, 逻辑型, , , 
.局部变量 向左条件1, 逻辑型, , , 
.局部变量 向左条件2, 逻辑型, , , 
.局部变量 向右条件1, 逻辑型, , , 
.局部变量 向右条件2, 逻辑型, , , 
.局部变量 横坐标, 整数型, , , 
.局部变量 纵坐标, 整数型, , , 
.局部变量 牛文本, 文本型, , , 


赋值 (棋子_右牛_当前位置.横坐标, .左边)
赋值 (棋子_右牛_当前位置.纵坐标, .顶边)
赋值 (横坐标, .左边)
赋值 (纵坐标, .顶边)

 ' 判断右棋子牛上方有无棋子
赋值 (上方有无棋子,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].上方有无棋子)
赋值 (下方有无棋子,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].下方有无棋子)
赋值 (左方有无棋子,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].左方有无棋子)
赋值 (右方有无棋子,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].右方有无棋子)


 ' 判断右棋子牛上方是敌是友
赋值 (上方是敌是友,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].上方是敌是友)
赋值 (下方是敌是友,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].下方是敌是友)
赋值 (左方是敌是友,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].左方是敌是友)
赋值 (右方是敌是友,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].右方是敌是友)

.判断开始 (等于 (你的左右手, 假)) ' 如果你的是右棋的话才进行移动判断
    
    赋值 (牛文本, 全局牛文本.对自己说)
    
     ' --------------------------------------------------------------------------------------------------------------
    
    赋值 (上方棋子大小,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].上方左棋子大小)
     ' 右牛_上方左棋大小
    赋值 (右牛_上方左棋大小, 上方棋子大小)
    
    赋值 (上方条件1, 并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 假))) ' 上方棋子是已方棋子
    赋值 (上方条件2, 并且 (等于 (上方有无棋子, 真), 小于 (上方棋子大小, 9), 大于 (上方棋子大小, #棋子_牛_大小))) ' 上方棋子是对方棋子，并且比已方大
    
    .判断开始 (或者 (上方条件1, 上方条件2))
        赋值 (左牛_向上_可移动, 假)
    .默认
        
        .判断开始 (等于 (上方有无棋子, 真))
            赋值 (右牛上方棋子可删除, 真)
        .默认
            赋值 (右牛上方棋子可删除, 假)
        .判断结束
        
        赋值 (右牛_向上_可移动, 真)
    .判断结束
    
    
     ' --------------------------------------------------------------------------------------------------------------
    赋值 (下方棋子大小,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].下方左棋子大小)
    赋值 (右牛_下方左棋大小, 下方棋子大小)
    赋值 (下方条件1, 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 假)))
    赋值 (下方条件2, 并且 (等于 (下方有无棋子, 真), 小于 (下方棋子大小, 9), 大于 (下方棋子大小, #棋子_牛_大小)))
    
    .判断开始 (或者 (下方条件1, 下方条件2))
        赋值 (右牛_向下_可移动, 假)
    .默认
        
        .判断开始 (等于 (下方有无棋子, 真))
            赋值 (右牛下方棋子可删除, 真)
        .默认
            赋值 (右牛下方棋子可删除, 假)
        .判断结束
        
        赋值 (右牛_向下_可移动, 真)
    .判断结束
    
    
     ' --------------------------------------------------------------------------------------------------------------
    
    赋值 (左方棋子大小,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].左方左棋子大小)
    赋值 (右牛_左方左棋大小, 左方棋子大小)
    
    赋值 (向左条件1, 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 假)))
    赋值 (向左条件2, 并且 (等于 (左方有无棋子, 真), 小于 (左方棋子大小, 9), 大于 (左方棋子大小, #棋子_牛_大小)))
    
    .判断开始 (或者 (向左条件1, 向左条件2))
        赋值 (右牛_向左_可移动, 假)
    .默认
        
        .判断开始 (等于 (左方有无棋子, 真))
            赋值 (右牛左方棋子可删除, 真)
        .默认
            赋值 (右牛左方棋子可删除, 假)
        .判断结束
        赋值 (右牛_向左_可移动, 真)
    .判断结束
    
    
     ' --------------------------------------------------------------------------------------------------------------
    赋值 (右方棋子大小,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].右方左棋子大小)
    赋值 (右牛_右方左棋大小, 右方棋子大小)
    
    赋值 (向右条件1, 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 假)))
    赋值 (向右条件2, 并且 (等于 (右方有无棋子, 真), 小于 (右方棋子大小, 9), 大于 (右方棋子大小, #棋子_牛_大小)))
    
    .判断开始 (或者 (向右条件1, 向右条件2))
        赋值 (右牛_向右_可移动, 假)
    .默认
        
        .判断开始 (等于 (右方有无棋子, 真))
            赋值 (右牛右方棋子可删除, 真)
        .默认
            赋值 (右牛右方棋子可删除, 假)
        .判断结束
        赋值 (右牛_向右_可移动, 真)
    .判断结束
    
    
    连续赋值 (假, 右龙_准备移动, 右鸡_准备移动, 右狗_准备移动, 右马_准备移动, 右蛇_准备移动, 右虎_准备移动, 右鼠_准备移动)
    
    赋值 (右牛_准备移动, 真)
    
    赋值 (右牛_可以移动, 真)
    
    
    .如果真 (可以发音)
        播放牛叫 ()
    .如果真结束
    
     ' ///////////////////////////////////////////////////////////////////////////////
.默认
     ' -------------------------------------------------------------------------------
    
    .判断开始 (并且 (等于 (左牛_可以移动, 真), 等于 (左牛_准备移动, 真)))
        .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
            .如果真 (可以发音)
                播放牛叫 ()
            .如果真结束
            赋值 (牛文本, 全局牛文本.对牛说) ' 对牛说的话
            删除右棋子牛 ()
            
            赋值 (.顶边, 纵坐标)
            赋值 (.左边, 横坐标)
            赋值 (所有左棋的当前位置 [6].横坐标, .左边) ' 这里一定不要漏掉！
            赋值 (所有左棋的当前位置 [6].纵坐标, .顶边)
            
        .如果真结束
        
    .默认
        
        .判断开始 (并且 (等于 (左狗_可以移动, 真), 等于 (左狗_准备移动, 真)))
            .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                .如果真 (可以发音)
                    播放牛叫 ()
                .如果真结束
                赋值 (牛文本, 全局牛文本.对狗说)
            .如果真结束
            
        .默认
            
            .判断开始 (并且 (等于 (左鸡_可以移动, 真), 等于 (左鸡_准备移动, 真)))
                .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                    .如果真 (可以发音)
                        播放牛叫 ()
                    .如果真结束
                    
                    赋值 (牛文本, 全局牛文本.对鸡说)
                .如果真结束
                
            .默认
                
                .判断开始 (并且 (等于 (左马_可以移动, 真), 等于 (左马_准备移动, 真)))
                    .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                        .如果真 (可以发音)
                            播放牛叫 ()
                        .如果真结束
                        
                        赋值 (牛文本, 全局牛文本.对马说)
                    .如果真结束
                    
                .默认
                    
                    .判断开始 (并且 (等于 (左蛇_可以移动, 真), 等于 (左蛇_准备移动, 真)))
                        .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                            .如果真 (可以发音)
                                播放牛叫 ()
                            .如果真结束
                            
                            赋值 (牛文本, 全局牛文本.对蛇说)
                        .如果真结束
                        
                    .默认
                        .判断开始 (并且 (等于 (左虎_可以移动, 真), 等于 (左虎_准备移动, 真)))
                            .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                                .如果真 (可以发音)
                                    播放牛叫 ()
                                .如果真结束
                                
                                赋值 (牛文本, 全局牛文本.对虎说)
                                删除右棋子牛 ()
                                
                                赋值 (.顶边, 纵坐标)
                                赋值 (.左边, 横坐标)
                                赋值 (所有左棋的当前位置 [7].横坐标, .左边) ' 这里一定不要漏掉！
                                赋值 (所有左棋的当前位置 [7].纵坐标, .顶边)
                                
                            .如果真结束
                            
                        .默认
                            .判断开始 (并且 (等于 (左鼠_可以移动, 真), 等于 (左鼠_准备移动, 真)))
                                .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                                    .如果真 (可以发音)
                                        播放牛叫 ()
                                    .如果真结束
                                    
                                    赋值 (牛文本, 全局牛文本.对鼠说)
                                    
                                .如果真结束
                                
                            .默认
                                .判断开始 (并且 (等于 (左龙_可以移动, 真), 等于 (左龙_准备移动, 真)))
                                    .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                                        .如果真 (可以发音)
                                            播放牛叫 ()
                                        .如果真结束
                                        赋值 (牛文本, 全局牛文本.对龙说)
                                        删除右棋子牛 ()
                                        赋值 (.顶边, 纵坐标)
                                        赋值 (.左边, 横坐标)
                                        赋值 (所有左棋的当前位置 [8].横坐标, .左边)
                                        赋值 (所有左棋的当前位置 [8].纵坐标, .顶边)
                                        
                                    .如果真结束
                                    
                                .默认
                                    
                                    
                                    赋值 (牛文本, 全局牛文本.对自己说)
                                    .如果真 (可以发音)
                                        播放牛叫 ()
                                    .如果真结束
                                    
                                .判断结束
                                
                            .判断结束
                            
                        .判断结束
                        
                    .判断结束
                    
                .判断结束
                
            .判断结束
            
        .判断结束
        
    .判断结束
    
.判断结束

.如果真 (可以显示文本)
    相加 (_启动窗口., 横坐标).未知支持库函数_26 (相加 (_启动窗口., 纵坐标), 牛文本, -1, 真)
.如果真结束




.子程序 _图形按钮_虎_右_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 上方有无棋子, 逻辑型, , , 
.局部变量 下方有无棋子, 逻辑型, , , 
.局部变量 左方有无棋子, 逻辑型, , , 
.局部变量 右方有无棋子, 逻辑型, , , 
.局部变量 匿名局部变量_7500, 空白型, , , 
.局部变量 上方棋子大小, 整数型, , , 
.局部变量 下方棋子大小, 整数型, , , 
.局部变量 左方棋子大小, 整数型, , , 
.局部变量 右方棋子大小, 整数型, , , 
.局部变量 匿名局部变量_7505, 空白型, , , 
.局部变量 上方是敌是友, 逻辑型, , , 
.局部变量 下方是敌是友, 逻辑型, , , 
.局部变量 左方是敌是友, 逻辑型, , , 
.局部变量 右方是敌是友, 逻辑型, , , 
.局部变量 匿名局部变量_7510, 空白型, , , 
.局部变量 虎文本, 文本型, , , 
.局部变量 横坐标, 整数型, , , 
.局部变量 纵坐标, 整数型, , , 


赋值 (棋子_右虎_当前位置.横坐标, .左边)
赋值 (棋子_右虎_当前位置.纵坐标, .顶边)

赋值 (横坐标, .左边) ' 得到右棋子虎的当前位置
赋值 (纵坐标, .顶边)


 ' ---------------------------------------------------------------------------------------------------------------
 ' 判断右棋子虎上方有无棋子
赋值 (上方有无棋子,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].上方有无棋子)
赋值 (下方有无棋子,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].下方有无棋子)
赋值 (左方有无棋子,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].左方有无棋子)
赋值 (右方有无棋子,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].右方有无棋子)

 ' 判断右棋子虎上方是敌是友
赋值 (上方是敌是友,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].上方是敌是友)
赋值 (下方是敌是友,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].下方是敌是友)
赋值 (左方是敌是友,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].左方是敌是友)
赋值 (右方是敌是友,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].右方是敌是友)

.判断开始 (等于 (你的左右手, 假)) ' 如果你的是右棋的话才进行移动判断
    
    赋值 (虎文本, 全局虎文本.对自己说)
    
     ' --------------------------------------------------------------------------------------------------------------
    赋值 (上方棋子大小,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].上方左棋子大小)
     ' 右虎_上方左棋大小
    赋值 (右虎_上方左棋大小, 上方棋子大小)
    .判断开始 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 假)), 并且 (等于 (上方有无棋子, 真), 小于 (上方棋子大小, 9), 大于 (上方棋子大小, #棋子_虎_大小))))
        赋值 (右虎_向上_可移动, 假)
    .默认
        
        .判断开始 (等于 (上方有无棋子, 真))
            赋值 (右虎上方棋子可删除, 真)
        .默认
            赋值 (右虎上方棋子可删除, 假)
        .判断结束
        
        赋值 (右虎_向上_可移动, 真)
    .判断结束
    
    
     ' ---------------------------------------------------------------------------------------------------------------
    赋值 (下方棋子大小,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].下方左棋子大小)
    赋值 (右虎_下方左棋大小, 下方棋子大小)
    
    .判断开始 (或者 (并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 假)), 并且 (等于 (下方有无棋子, 真), 小于 (下方棋子大小, 9), 大于 (下方棋子大小, #棋子_虎_大小))))
        赋值 (右虎_向下_可移动, 假)
    .默认
        
        .判断开始 (等于 (下方有无棋子, 真))
            赋值 (右虎下方棋子可删除, 真)
        .默认
            赋值 (右虎下方棋子可删除, 假)
        .判断结束
        
        赋值 (右虎_向下_可移动, 真)
    .判断结束
     ' ---------------------------------------------------------------------------------------------------------------
    赋值 (左方棋子大小,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].左方左棋子大小)
    赋值 (右虎_左方左棋大小, 左方棋子大小)
     ' 调试输出 (到文本 (左方棋子大小))
    .判断开始 (或者 (并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 假)), 并且 (等于 (左方有无棋子, 真), 小于 (左方棋子大小, 9), 大于 (左方棋子大小, #棋子_虎_大小))))
        赋值 (右虎_向左_可移动, 假)
    .默认
        
        .判断开始 (等于 (左方有无棋子, 真))
            赋值 (右虎左方棋子可删除, 真)
        .默认
            赋值 (右虎左方棋子可删除, 假)
        .判断结束
        赋值 (右虎_向左_可移动, 真)
    .判断结束
     ' --------------------------------------------------------------------------------------------------------------
    赋值 (右方棋子大小,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].右方左棋子大小)
    赋值 (左虎_右方右棋大小, 右方棋子大小)
    
    .判断开始 (或者 (并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 假)), 并且 (等于 (右方有无棋子, 真), 小于 (右方棋子大小, 9), 大于 (右方棋子大小, #棋子_虎_大小))))
        赋值 (右虎_向右_可移动, 假)
    .默认
        
        .判断开始 (等于 (右方有无棋子, 真))
            赋值 (右虎右方棋子可删除, 真)
        .默认
            赋值 (右虎右方棋子可删除, 假)
        .判断结束
        赋值 (右虎_向右_可移动, 真)
    .判断结束
    
    
    
    连续赋值 (假, 右龙_准备移动, 右鸡_准备移动, 右狗_准备移动, 右马_准备移动, 右蛇_准备移动, 右牛_准备移动, 右鼠_准备移动)
    
    赋值 (右虎_准备移动, 真)
    
    赋值 (右虎_可以移动, 真)
    
    
    .如果真 (可以发音)
        播放虎叫 ()
    .如果真结束
     ' /////////////////////////////////////////////////////////////////////////////////////////////////////
     ' ----------------------------------------------------------------------------------------------------
.默认
    
    
    .判断开始 (并且 (等于 (左牛_可以移动, 真), 等于 (左牛_准备移动, 真)))
        .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
            .如果真 (可以发音)
                播放虎叫 ()
            .如果真结束
            赋值 (虎文本, 全局虎文本.对牛说) ' 对牛说的话
        .如果真结束
        
    .默认
        
        .判断开始 (并且 (等于 (左狗_可以移动, 真), 等于 (左狗_准备移动, 真)))
            .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                .如果真 (可以发音)
                    播放虎叫 ()
                .如果真结束
                赋值 (虎文本, 全局虎文本.对狗说)
            .如果真结束
            
        .默认
            
            .判断开始 (并且 (等于 (左鸡_可以移动, 真), 等于 (左鸡_准备移动, 真)))
                .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                    .如果真 (可以发音)
                        播放虎叫 ()
                    .如果真结束
                    
                    赋值 (虎文本, 全局虎文本.对鸡说)
                .如果真结束
                
            .默认
                
                .判断开始 (并且 (等于 (左马_可以移动, 真), 等于 (左马_准备移动, 真)))
                    .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                        .如果真 (可以发音)
                            播放虎叫 ()
                        .如果真结束
                        
                        赋值 (虎文本, 全局虎文本.对马说)
                    .如果真结束
                    
                .默认
                    
                    .判断开始 (并且 (等于 (左蛇_可以移动, 真), 等于 (左蛇_准备移动, 真)))
                        .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                            .如果真 (可以发音)
                                播放虎叫 ()
                            .如果真结束
                            
                            赋值 (虎文本, 全局虎文本.对蛇说)
                        .如果真结束
                        
                    .默认
                        .判断开始 (并且 (等于 (左虎_可以移动, 真), 等于 (左虎_准备移动, 真)))
                            .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                                .如果真 (可以发音)
                                    播放虎叫 ()
                                .如果真结束
                                
                                赋值 (虎文本, 全局虎文本.对虎说)
                                删除右棋子虎 ()
                                
                                赋值 (.顶边, 纵坐标)
                                赋值 (.左边, 横坐标)
                                赋值 (所有左棋的当前位置 [7].横坐标, .左边) ' 这里一定不要漏掉！
                                赋值 (所有左棋的当前位置 [7].纵坐标, .顶边)
                                
                            .如果真结束
                            
                        .默认
                            .判断开始 (并且 (等于 (左鼠_可以移动, 真), 等于 (左鼠_准备移动, 真)))
                                .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                                    .如果真 (可以发音)
                                        播放虎叫 ()
                                    .如果真结束
                                    
                                    赋值 (虎文本, 全局虎文本.对鼠说)
                                    
                                .如果真结束
                                
                            .默认
                                .判断开始 (并且 (等于 (左龙_可以移动, 真), 等于 (左龙_准备移动, 真)))
                                    .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                                        .如果真 (可以发音)
                                            播放虎叫 ()
                                        .如果真结束
                                        赋值 (虎文本, 全局虎文本.对龙说)
                                        删除右棋子虎 ()
                                        赋值 (.顶边, 纵坐标)
                                        赋值 (.左边, 横坐标)
                                        赋值 (所有左棋的当前位置 [8].横坐标, .左边)
                                        赋值 (所有左棋的当前位置 [8].纵坐标, .顶边)
                                        
                                    .如果真结束
                                    
                                .默认
                                    
                                    
                                    赋值 (虎文本, 全局虎文本.对自己说)
                                    .如果真 (可以发音)
                                        播放虎叫 ()
                                    .如果真结束
                                    
                                    
                                    
                                    
                                .判断结束
                                
                            .判断结束
                            
                        .判断结束
                        
                    .判断结束
                    
                .判断结束
                
            .判断结束
            
        .判断结束
        
    .判断结束
    
.判断结束

.如果真 (可以显示文本)
    相加 (_启动窗口., 横坐标).未知支持库函数_26 (相加 (_启动窗口., 纵坐标), 虎文本, -1, 真)
.如果真结束


.子程序 _图形按钮_龙_右_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 上方有无棋子, 逻辑型, , , 
.局部变量 下方有无棋子, 逻辑型, , , 
.局部变量 左方有无棋子, 逻辑型, , , 
.局部变量 右方有无棋子, 逻辑型, , , 
.局部变量 匿名局部变量_5286, 空白型, , , 
.局部变量 上方棋子大小, 整数型, , , 
.局部变量 下方棋子大小, 整数型, , , 
.局部变量 左方棋子大小, 整数型, , , 
.局部变量 右方棋子大小, 整数型, , , 
.局部变量 匿名局部变量_5303, 空白型, , , 
.局部变量 上方是敌是友, 逻辑型, , , 
.局部变量 下方是敌是友, 逻辑型, , , 
.局部变量 左方是敌是友, 逻辑型, , , 
.局部变量 右方是敌是友, 逻辑型, , , 
.局部变量 匿名局部变量_4656, 空白型, , , 
.局部变量 纵坐标, 整数型, , , 
.局部变量 横坐标, 整数型, , , 
.局部变量 龙文本, 文本型, , , 

赋值 (横坐标, .左边) ' 得到右棋子龙的当前位置
赋值 (纵坐标, .顶边)

赋值 (棋子_右龙_当前位置.横坐标, .左边)
赋值 (棋子_右龙_当前位置.纵坐标, .顶边)


赋值 (上方有无棋子,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].上方有无棋子)
赋值 (下方有无棋子,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].下方有无棋子)
赋值 (左方有无棋子,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].左方有无棋子)
赋值 (右方有无棋子,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].右方有无棋子)

赋值 (上方是敌是友,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].上方是敌是友)
赋值 (下方是敌是友,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].下方是敌是友)
赋值 (左方是敌是友,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].左方是敌是友)
赋值 (右方是敌是友,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].右方是敌是友)

.判断开始 (等于 (你的左右手, 假)) ' 如果你的是右棋的话才进行移动判断
    
    赋值 (龙文本, 全局龙文本.对自己说)
    
     ' -------------------------------------------------------------------------------------------------------
     ' 上方棋子判断
    赋值 (上方棋子大小,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].上方左棋子大小)
    
    赋值 (右龙_上方左棋大小, 上方棋子大小)
    
    .判断开始 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 假)), 并且 (等于 (上方有无棋子, 真), 小于 (上方棋子大小, 9), 大于 (上方棋子大小, #棋子_龙_大小)), 等于 (上方棋子大小, 1)))
        赋值 (右龙_向上_可移动, 假)
    .默认
        
        .判断开始 (等于 (上方有无棋子, 真))
            赋值 (右龙上方棋子可删除, 真)
        .默认
            赋值 (右龙上方棋子可删除, 假)
        .判断结束
        
        赋值 (右龙_向上_可移动, 真)
    .判断结束
    
    
     ' -------------------------------------------------------------------------------------------------------
     ' 下方棋子判断
    赋值 (下方棋子大小,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].下方左棋子大小)
    
    赋值 (右龙_下方左棋大小, 下方棋子大小)
    
    .判断开始 (或者 (并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 假)), 并且 (等于 (下方有无棋子, 真), 小于 (下方棋子大小, 9), 大于 (下方棋子大小, #棋子_龙_大小)), 等于 (下方棋子大小, 1)))
        赋值 (右龙_向下_可移动, 假)
    .默认
        
        .判断开始 (等于 (下方有无棋子, 真))
            赋值 (右龙下方棋子可删除, 真)
        .默认
            赋值 (右龙下方棋子可删除, 假)
        .判断结束
        
        赋值 (右龙_向下_可移动, 真)
    .判断结束
    
    
     ' --------------------------------------------------------------------------------------------------------------
     ' 左方棋子判断
    赋值 (左方棋子大小,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].左方左棋子大小)
    
    赋值 (右龙_左方左棋大小, 左方棋子大小)
     ' 调试输出 (到文本 (右龙_左方左棋大小))
    .判断开始 (或者 (并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 假)), 并且 (等于 (左方有无棋子, 真), 小于 (左方棋子大小, 9), 大于 (左方棋子大小, #棋子_龙_大小)), 等于 (左方棋子大小, 1)))
        赋值 (右龙_向左_可移动, 假)
    .默认
        
        .判断开始 (等于 (左方有无棋子, 真))
            赋值 (右龙左方棋子可删除, 真)
        .默认
            赋值 (右龙左方棋子可删除, 假)
        .判断结束
        赋值 (右龙_向左_可移动, 真)
    .判断结束
    
    
     ' --------------------------------------------------------------------------------------------------------------'右方棋子判断
    赋值 (右方棋子大小,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].右方左棋子大小)
    赋值 (右龙_右方左棋大小, 右方棋子大小)
    
    
    .判断开始 (或者 (并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 假)), 并且 (等于 (右方有无棋子, 真), 小于 (右方棋子大小, 9), 大于 (右方棋子大小, #棋子_龙_大小)), 等于 (右方棋子大小, 1)))
        赋值 (右龙_向右_可移动, 假)
    .默认
        
        .判断开始 (等于 (右方有无棋子, 真))
            赋值 (右龙右方棋子可删除, 真)
        .默认
            赋值 (右龙右方棋子可删除, 假)
        .判断结束
        赋值 (右龙_向右_可移动, 真)
    .判断结束
    
    
    
    连续赋值 (假, 右牛_准备移动, 右鸡_准备移动, 右狗_准备移动, 右马_准备移动, 右蛇_准备移动, 右虎_准备移动, 右鼠_准备移动)
    
    赋值 (右龙_准备移动, 真)
     ' 本源码来自易语言资源网(www.wodesoft.com)
    赋值 (右龙_可以移动, 真)
    
    
    .如果真 (可以发音)
        播放龙叫 ()
    .如果真结束
    
     ' //////////////////////////////////////////////////////////////////////////////////////////////////////////////
     ' --------------------------------------------------------------------------------------------------------------
.默认
    
    .判断开始 (并且 (等于 (左牛_可以移动, 真), 等于 (左牛_准备移动, 真)))
        .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
            .如果真 (可以发音)
                播放龙叫 ()
            .如果真结束
            赋值 (龙文本, 全局龙文本.对牛说) ' 龙对牛说的话
        .如果真结束
        
    .默认
        
        .判断开始 (并且 (等于 (左狗_可以移动, 真), 等于 (左狗_准备移动, 真)))
            .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                .如果真 (可以发音)
                    播放龙叫 ()
                .如果真结束
                赋值 (龙文本, 全局龙文本.对狗说)
            .如果真结束
            
        .默认
            
            .判断开始 (并且 (等于 (左鸡_可以移动, 真), 等于 (左鸡_准备移动, 真)))
                .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                    .如果真 (可以发音)
                        播放龙叫 ()
                    .如果真结束
                    
                    赋值 (龙文本, 全局龙文本.对鸡说)
                .如果真结束
                
            .默认
                
                .判断开始 (并且 (等于 (左马_可以移动, 真), 等于 (左马_准备移动, 真)))
                    .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                        .如果真 (可以发音)
                            播放龙叫 ()
                        .如果真结束
                        
                        赋值 (龙文本, 全局龙文本.对马说)
                    .如果真结束
                    
                .默认
                    
                    .判断开始 (并且 (等于 (左蛇_可以移动, 真), 等于 (左蛇_准备移动, 真)))
                        .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                            .如果真 (可以发音)
                                播放龙叫 ()
                            .如果真结束
                            
                            赋值 (龙文本, 全局龙文本.对蛇说)
                        .如果真结束
                        
                    .默认
                        .判断开始 (并且 (等于 (左虎_可以移动, 真), 等于 (左虎_准备移动, 真)))
                            .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                                .如果真 (可以发音)
                                    播放龙叫 ()
                                .如果真结束
                                
                                赋值 (龙文本, 全局龙文本.对虎说)
                            .如果真结束
                            
                        .默认
                            .判断开始 (并且 (等于 (左鼠_可以移动, 真), 等于 (左鼠_准备移动, 真)))
                                .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                                    .如果真 (可以发音)
                                        播放龙叫 ()
                                    .如果真结束
                                    
                                    赋值 (龙文本, 全局龙文本.对鼠说)
                                    删除右棋子龙 ()
                                    
                                    赋值 (.顶边, 纵坐标)
                                    赋值 (.左边, 横坐标)
                                    赋值 (所有左棋的当前位置 [1].横坐标, .左边) ' 这里一定不要漏掉！
                                    赋值 (所有左棋的当前位置 [1].纵坐标, .顶边)
                                    
                                .如果真结束
                                
                            .默认
                                .判断开始 (并且 (等于 (左龙_可以移动, 真), 等于 (左龙_准备移动, 真)))
                                    .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                                        .如果真 (可以发音)
                                            播放龙叫 ()
                                        .如果真结束
                                        赋值 (龙文本, 全局龙文本.对龙说)
                                        删除右棋子龙 ()
                                        赋值 (.顶边, 纵坐标)
                                        赋值 (.左边, 横坐标)
                                        赋值 (所有左棋的当前位置 [8].横坐标, .左边)
                                        赋值 (所有左棋的当前位置 [8].纵坐标, .顶边)
                                        
                                    .如果真结束
                                    
                                .默认
                                    
                                    
                                    赋值 (龙文本, 全局龙文本.对自己说)
                                    .如果真 (可以发音)
                                        播放龙叫 ()
                                    .如果真结束
                                    
                                    
                                    
                                    
                                .判断结束
                                
                            .判断结束
                            
                        .判断结束
                        
                    .判断结束
                    
                .判断结束
                
            .判断结束
            
            
            
        .判断结束
        
    .判断结束
    
.判断结束

.如果真 (可以显示文本)
    相加 (_启动窗口., 横坐标).未知支持库函数_26 (相加 (_启动窗口., 纵坐标), 龙文本, -1, 真)
.如果真结束



.子程序 _图形按钮_太公_右_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 上方有无棋子, 逻辑型, , , 
.局部变量 上方棋子大小, 整数型, , , 
.局部变量 上方是敌是友, 逻辑型, , , 
.局部变量 下方有无棋子, 逻辑型, , , 
.局部变量 下方棋子大小, 整数型, , , 
.局部变量 下方是敌是友, 逻辑型, , , 
.局部变量 左方有无棋子, 逻辑型, , , 
.局部变量 左方棋子大小, 整数型, , , 
.局部变量 左方是敌是友, 逻辑型, , , 
.局部变量 右方有无棋子, 逻辑型, , , 
.局部变量 右方棋子大小, 整数型, , , 
.局部变量 右方是敌是友, 逻辑型, , , 
.局部变量 匿名局部变量_7890, 空白型, , , 
.局部变量 太公文本, 文本型, , , 
.局部变量 横坐标, 整数型, , , 
.局部变量 纵坐标, 整数型, , , 


赋值 (棋子_右太公_当前位置.横坐标, .左边) ' 得到左棋子太公的当前位置
赋值 (棋子_右太公_当前位置.纵坐标, .顶边)

赋值 (横坐标, .左边)
赋值 (纵坐标, .顶边)

 ' ---------------------------------------------------------------------------------------------------------------

 ' 判断右棋子太公上方有无棋子
赋值 (上方有无棋子,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].上方有无棋子)
赋值 (下方有无棋子,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].下方有无棋子)
赋值 (左方有无棋子,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].左方有无棋子)
赋值 (右方有无棋子,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].右方有无棋子)

 ' 判断右棋子太公上方是敌是友
赋值 (上方是敌是友,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].上方是敌是友)
赋值 (下方是敌是友,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].下方是敌是友)
赋值 (左方是敌是友,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].左方是敌是友)
赋值 (右方是敌是友,  [四周有无棋子 (2, 所有左棋的当前位置, 所有右棋的当前位置)].右方是敌是友)

.判断开始 (等于 (你的左右手, 假)) ' 如果你的是右棋的话才进行移动判断
    
    赋值 (太公文本, 全局太公文本.对自己说)
.默认
    
     ' ////////////////////////////////////////////////////////////////////////////////////////////////////////
     ' -------------------------------------------------------------------------------------------------------
    
    .判断开始 (并且 (等于 (左牛_可以移动, 真), 等于 (左牛_准备移动, 真)))
        .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
            .如果真 (可以发音)
                播放保护我 ()
            .如果真结束
            赋值 (太公文本, 全局太公文本.对牛说) ' 对牛说的话
            删除右棋子太公 ()
            赋值 (.顶边, 纵坐标)
            赋值 (.左边, 横坐标)
            赋值 (所有左棋的当前位置 [6].横坐标, .左边)
            赋值 (所有左棋的当前位置 [6].纵坐标, .顶边)
            播放胜利 ()
            .如果真 (等于 (信息框 (“你赢了！！！要再来一盘吗？”, 1, #提示文字), 0))
                再来一盘 ()
            .如果真结束
            
        .如果真结束
        
    .默认
        
        .判断开始 (并且 (等于 (左狗_可以移动, 真), 等于 (左狗_准备移动, 真)))
            .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                .如果真 (可以发音)
                    播放保护我 ()
                .如果真结束
                赋值 (太公文本, 全局太公文本.对狗说)
                删除右棋子太公 ()
                赋值 (.顶边, 纵坐标)
                赋值 (.左边, 横坐标)
                赋值 (所有左棋的当前位置 [4].横坐标, .左边)
                赋值 (所有左棋的当前位置 [4].纵坐标, .顶边)
                播放胜利 ()
                .如果真 (等于 (信息框 (“你赢了！！！要再来一盘吗？”, 1, #提示文字), 0))
                    再来一盘 ()
                .如果真结束
                
            .如果真结束
            
        .默认
            
            .判断开始 (并且 (等于 (左鸡_可以移动, 真), 等于 (左鸡_准备移动, 真)))
                .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                    .如果真 (可以发音)
                        播放保护我 ()
                    .如果真结束
                    赋值 (太公文本, 全局太公文本.对鸡说)
                    删除右棋子太公 ()
                    赋值 (.顶边, 纵坐标)
                    赋值 (.左边, 横坐标)
                    赋值 (所有左棋的当前位置 [3].横坐标, .左边)
                    赋值 (所有左棋的当前位置 [3].纵坐标, .顶边)
                    播放胜利 ()
                    .如果真 (等于 (信息框 (“你赢了！！！要再来一盘吗？”, 1, #提示文字), 0))
                        再来一盘 ()
                    .如果真结束
                    
                .如果真结束
                
            .默认
                
                .判断开始 (并且 (等于 (左马_可以移动, 真), 等于 (左马_准备移动, 真)))
                    .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                        .如果真 (可以发音)
                            播放保护我 ()
                        .如果真结束
                        
                        赋值 (太公文本, 全局太公文本.对马说)
                        删除右棋子太公 ()
                        赋值 (.顶边, 纵坐标)
                        赋值 (.左边, 横坐标)
                        赋值 (所有左棋的当前位置 [5].横坐标, .左边)
                        赋值 (所有左棋的当前位置 [5].纵坐标, .顶边)
                        播放胜利 ()
                        .如果真 (等于 (信息框 (“你赢了！！！要再来一盘吗？”, 1, #提示文字), 0))
                            再来一盘 ()
                        .如果真结束
                        
                        
                    .如果真结束
                    
                .默认
                    
                    .判断开始 (并且 (等于 (左蛇_可以移动, 真), 等于 (左蛇_准备移动, 真)))
                        .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                            .如果真 (可以发音)
                                播放保护我 ()
                            .如果真结束
                            
                            赋值 (太公文本, 全局太公文本.对蛇说)
                            删除右棋子太公 ()
                            赋值 (.顶边, 纵坐标)
                            赋值 (.左边, 横坐标)
                            赋值 (所有左棋的当前位置 [2].横坐标, .左边)
                            赋值 (所有左棋的当前位置 [2].纵坐标, .顶边)
                            播放胜利 ()
                            .如果真 (等于 (信息框 (“你赢了！！！要再来一盘吗？”, 1, #提示文字), 0))
                                再来一盘 ()
                            .如果真结束
                            
                            
                        .如果真结束
                        
                    .默认
                        .判断开始 (并且 (等于 (左虎_可以移动, 真), 等于 (左虎_准备移动, 真)))
                            .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                                .如果真 (可以发音)
                                    播放保护我 ()
                                .如果真结束
                                
                                赋值 (太公文本, 全局太公文本.对虎说)
                                删除右棋子太公 ()
                                赋值 (.顶边, 纵坐标)
                                赋值 (.左边, 横坐标)
                                赋值 (所有左棋的当前位置 [7].横坐标, .左边)
                                赋值 (所有左棋的当前位置 [7].纵坐标, .顶边)
                                播放胜利 ()
                                .如果真 (等于 (信息框 (“你赢了！！！要再来一盘吗？”, 1, #提示文字), 0))
                                    再来一盘 ()
                                .如果真结束
                                
                                ' 本源码来自易语言资源网(www.wodesoft.com)
                            .如果真结束
                            
                        .默认
                            .判断开始 (并且 (等于 (左鼠_可以移动, 真), 等于 (左鼠_准备移动, 真)))
                                .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                                    .如果真 (可以发音)
                                        播放保护我 ()
                                    .如果真结束
                                    删除右棋子太公 ()
                                    赋值 (.顶边, 纵坐标)
                                    赋值 (.左边, 横坐标)
                                    赋值 (所有左棋的当前位置 [1].横坐标, .左边)
                                    赋值 (所有左棋的当前位置 [1].纵坐标, .顶边)
                                    
                                    赋值 (太公文本, 全局太公文本.对鼠说)
                                    播放胜利 ()
                                    .如果真 (等于 (信息框 (“你赢了！！！要再来一盘吗？”, 1, #提示文字), 0))
                                        再来一盘 ()
                                    .如果真结束
                                    
                                    
                                .如果真结束
                                
                            .默认
                                .判断开始 (并且 (等于 (左龙_可以移动, 真), 等于 (左龙_准备移动, 真)))
                                    .如果真 (或者 (并且 (等于 (上方有无棋子, 真), 等于 (上方是敌是友, 真)), 并且 (等于 (下方有无棋子, 真), 等于 (下方是敌是友, 真)), 并且 (等于 (左方有无棋子, 真), 等于 (左方是敌是友, 真)), 并且 (等于 (右方有无棋子, 真), 等于 (右方是敌是友, 真))))
                                        .如果真 (可以发音)
                                            播放保护我 ()
                                        .如果真结束
                                        赋值 (太公文本, 全局太公文本.对龙说)
                                        删除右棋子太公 ()
                                        赋值 (.顶边, 纵坐标)
                                        赋值 (.左边, 横坐标)
                                        赋值 (所有左棋的当前位置 [8].横坐标, .左边)
                                        赋值 (所有左棋的当前位置 [8].纵坐标, .顶边)
                                        播放胜利 ()
                                        .如果真 (等于 (信息框 (“你赢了！！！要再来一盘吗？”, 1, #提示文字), 0))
                                            再来一盘 ()
                                        .如果真结束
                                        
                                    .如果真结束
                                    
                                .默认
                                    
                                    赋值 (太公文本, 全局太公文本.对自己说)
                                    .如果真 (可以发音)
                                        播放保护我 ()
                                    .如果真结束
                                    
                                .判断结束
                                
                            .判断结束
                            
                        .判断结束
                        
                    .判断结束
                    
                .判断结束
                
            .判断结束
            
        .判断结束
        
    .判断结束
    
.判断结束

.如果真 (可以显示文本)
    相加 (_启动窗口., 横坐标).未知支持库函数_26 (相加 (_启动窗口., 纵坐标), 太公文本, -1, 真)
.如果真结束



.子程序 _选择框_可以发音_被单击, 空白型, , 
.判断开始 (等于 (.选中, 真))
    赋值 (可以发音, 真)
.默认
    赋值 (可以发音, 假)
.判断结束


.子程序 _选择框_可以显示文本_被单击, 空白型, , 
.如果 (等于 (.选中, 真))
    赋值 (可以显示文本, 真)
.否则
    赋值 (可以显示文本, 假)
.如果结束


.子程序 _编辑框_聊天_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (等于 (键代码, #回车键))
    .加入文本 (.内容)
.如果真结束


.程序集 初始化右棋子程序集, , , 

.子程序 初始化右棋子, 空白型, , 
右棋子可到位置 ()
右棋子不可到位置 ()
所有右棋的当前位置 ()

.子程序 所有右棋的当前位置, 空白型, , 
赋值 (棋子_右鼠_当前位置.横坐标, _启动窗口..左边)
赋值 (棋子_右鼠_当前位置.纵坐标, _启动窗口..顶边)

赋值 (所有右棋的当前位置 [1].横坐标, 棋子_右鼠_当前位置.横坐标)
赋值 (所有右棋的当前位置 [1].纵坐标, 棋子_右鼠_当前位置.纵坐标)


赋值 (棋子_右蛇_当前位置.横坐标, _启动窗口..左边)
赋值 (棋子_右蛇_当前位置.纵坐标, _启动窗口..顶边)


赋值 (所有右棋的当前位置 [2].横坐标, 棋子_右蛇_当前位置.横坐标)
赋值 (所有右棋的当前位置 [2].纵坐标, 棋子_右蛇_当前位置.纵坐标)



赋值 (棋子_右鸡_当前位置.横坐标, _启动窗口..左边)
赋值 (棋子_右鸡_当前位置.纵坐标, _启动窗口..顶边)

赋值 (所有右棋的当前位置 [3].横坐标, 棋子_右鸡_当前位置.横坐标)
赋值 (所有右棋的当前位置 [3].纵坐标, 棋子_右鸡_当前位置.纵坐标)



赋值 (棋子_右狗_当前位置.横坐标, _启动窗口..左边)
赋值 (棋子_右狗_当前位置.纵坐标, _启动窗口..顶边)

赋值 (所有右棋的当前位置 [4].横坐标, 棋子_右狗_当前位置.横坐标)
赋值 (所有右棋的当前位置 [4].纵坐标, 棋子_右狗_当前位置.纵坐标)


赋值 (棋子_右马_当前位置.横坐标, _启动窗口..左边)
赋值 (棋子_右马_当前位置.纵坐标, _启动窗口..顶边)

赋值 (所有右棋的当前位置 [5].横坐标, 棋子_右马_当前位置.横坐标)
赋值 (所有右棋的当前位置 [5].纵坐标, 棋子_右马_当前位置.纵坐标)



赋值 (棋子_右牛_当前位置.横坐标, _启动窗口..左边)
赋值 (棋子_右牛_当前位置.纵坐标, _启动窗口..顶边)

赋值 (所有右棋的当前位置 [6].横坐标, 棋子_右牛_当前位置.横坐标)
赋值 (所有右棋的当前位置 [6].纵坐标, 棋子_右牛_当前位置.纵坐标)



赋值 (棋子_右虎_当前位置.横坐标, _启动窗口..左边)
赋值 (棋子_右虎_当前位置.纵坐标, _启动窗口..顶边)

赋值 (所有右棋的当前位置 [7].横坐标, 棋子_右虎_当前位置.横坐标)
赋值 (所有右棋的当前位置 [7].纵坐标, 棋子_右虎_当前位置.纵坐标)



赋值 (棋子_右龙_当前位置.横坐标, _启动窗口..左边)
赋值 (棋子_右龙_当前位置.纵坐标, _启动窗口..顶边)

赋值 (所有右棋的当前位置 [8].横坐标, 棋子_右龙_当前位置.横坐标)
赋值 (所有右棋的当前位置 [8].纵坐标, 棋子_右龙_当前位置.纵坐标)



赋值 (棋子_右太公_当前位置.横坐标, _启动窗口..左边)
赋值 (棋子_右太公_当前位置.纵坐标, _启动窗口..顶边)

赋值 (所有右棋的当前位置 [9].横坐标, 棋子_右太公_当前位置.横坐标)
赋值 (所有右棋的当前位置 [9].纵坐标, 棋子_右太公_当前位置.纵坐标)


.子程序 右棋子可到位置, 空白型, , 
.局部变量 i, 整数型, , , 
.局部变量 m, 整数型, , , 

 ' 得到1、2、3纵向的位置数组

.变量循环首 (7, 21, 7, m)
    .计次循环首 (7, i)
        赋值 (棋子_右牛_可到_位置 [相减 (相加 (i, m), 7)].横坐标, 相加 (3, 相乘 (相减 (相除 (m, 7), 1), 相加 (#棋子宽度, #向右修补量))))
        赋值 (棋子_右牛_可到_位置 [相减 (相加 (i, m), 7)].纵坐标, 相加 (3, 相乘 (相减 (i, 1), 相加 (#棋子高度, #向下修补量))))
    .计次循环尾 ()
.变量循环尾 ()
 ' ' 得到1纵向的位置数组
 ' .计次循环首 (7, i)
     ' 棋子_右牛_位置 [i].横坐标 ＝ 3
     ' 棋子_右牛_位置 [i].纵坐标 ＝ 3 ＋ (i － 1) × (#棋子高度 ＋ #向下修补量)
 ' .计次循环尾 ()

 ' ' 得到2纵向的位置数组
 ' .计次循环首 (7, i)
     ' 棋子_右牛_位置 [i ＋ 7].横坐标 ＝ 3 ＋ (#棋子宽度 ＋ #向右修补量)
     ' 棋子_右牛_位置 [i ＋ 7].纵坐标 ＝ 3 ＋ (i － 1) × (#棋子高度 ＋ #向下修补量)
    
 ' .计次循环尾 ()

 ' ' 得到3纵向的位置数组
 ' .计次循环首 (7, i)
     ' 棋子_右牛_位置 [i ＋ 14].横坐标 ＝ 3 ＋ 2 × (#棋子宽度 ＋ #向右修补量)
     ' 棋子_右牛_位置 [i ＋ 14].纵坐标 ＝ 3 ＋ (i － 1) × (#棋子高度 ＋ #向下修补量)
 ' .计次循环尾 ()

 ' 得到4纵向的位置数组

赋值 (棋子_右牛_可到_位置 [22].横坐标, 相加 (3, 相乘 (3, 相加 (#棋子宽度, #向右修补量))))
赋值 (棋子_右牛_可到_位置 [22].纵坐标, 3)

赋值 (棋子_右牛_可到_位置 [23].横坐标, 相加 (3, 相乘 (3, 相加 (#棋子宽度, #向右修补量))))
赋值 (棋子_右牛_可到_位置 [23].纵坐标, 相加 (3, 相乘 (3, 相加 (#棋子高度, #向下修补量))))

赋值 (棋子_右牛_可到_位置 [24].横坐标, 相加 (3, 相乘 (3, 相加 (#棋子宽度, #向右修补量))))
赋值 (棋子_右牛_可到_位置 [24].纵坐标, 相加 (3, 相乘 (6, 相加 (#棋子高度, #向下修补量))))

 ' 得到5纵向的位置数组
赋值 (棋子_右牛_可到_位置 [25].横坐标, 相加 (3, 相乘 (4, 相加 (#棋子宽度, #向右修补量))))
赋值 (棋子_右牛_可到_位置 [25].纵坐标, 3)

赋值 (棋子_右牛_可到_位置 [26].横坐标, 相加 (3, 相乘 (4, 相加 (#棋子宽度, #向右修补量))))
赋值 (棋子_右牛_可到_位置 [26].纵坐标, 相加 (3, 相乘 (3, 相加 (#棋子高度, #向下修补量))))

赋值 (棋子_右牛_可到_位置 [27].横坐标, 相加 (3, 相乘 (4, 相加 (#棋子宽度, #向右修补量))))
赋值 (棋子_右牛_可到_位置 [27].纵坐标, 相加 (3, 相乘 (6, 相加 (#棋子高度, #向下修补量))))

 ' 得到6纵向的位置数组
赋值 (棋子_右牛_可到_位置 [28].横坐标, 相加 (3, 相乘 (5, 相加 (#棋子宽度, #向右修补量))))
赋值 (棋子_右牛_可到_位置 [28].纵坐标, 3)

赋值 (棋子_右牛_可到_位置 [29].横坐标, 相加 (3, 相乘 (5, 相加 (#棋子宽度, #向右修补量))))
赋值 (棋子_右牛_可到_位置 [29].纵坐标, 相加 (3, 相乘 (3, 相加 (#棋子高度, #向下修补量))))

赋值 (棋子_右牛_可到_位置 [30].横坐标, 相加 (3, 相乘 (5, 相加 (#棋子宽度, #向右修补量))))
赋值 (棋子_右牛_可到_位置 [30].纵坐标, 相加 (3, 相乘 (6, 相加 (#棋子高度, #向下修补量))))
 ' ----------------------------------------------------------------------

 ' 得到7、8纵向的位置数组,具体由正面注释的部分代码改来
.变量循环首 (7, 14, 7, m)
    .计次循环首 (7, i)
        赋值 (棋子_右牛_可到_位置 [相减 (相加 (i, 30, m), 7)].横坐标, 相加 (3, 相乘 (相加 (相除 (m, 7), 5), 相加 (#棋子宽度, #向右修补量))))
        赋值 (棋子_右牛_可到_位置 [相减 (相加 (i, 30, m), 7)].纵坐标, 相加 (3, 相乘 (相减 (i, 1), 相加 (#棋子高度, #向下修补量))))
    .计次循环尾 ()
     ' 调试输出 (到文本 (m))
.变量循环尾 ()
 ' 得到9纵向的位置数组
赋值 (棋子_右牛_可到_位置 [45].横坐标, 相加 (3, 相乘 (8, 相加 (#棋子宽度, #向右修补量))))
赋值 (棋子_右牛_可到_位置 [45].纵坐标, 3)

赋值 (棋子_右牛_可到_位置 [46].横坐标, 相加 (3, 相乘 (8, 相加 (#棋子宽度, #向右修补量))))
赋值 (棋子_右牛_可到_位置 [46].纵坐标, 相加 (3, 相加 (#棋子高度, #向下修补量)))

赋值 (棋子_右牛_可到_位置 [47].横坐标, 相加 (3, 相乘 (8, 相加 (#棋子宽度, #向右修补量))))
赋值 (棋子_右牛_可到_位置 [47].纵坐标, 相加 (3, 相乘 (2, 相加 (#棋子高度, #向下修补量))))

赋值 (棋子_右牛_可到_位置 [48].横坐标, 相加 (3, 相乘 (8, 相加 (#棋子宽度, #向右修补量))))
赋值 (棋子_右牛_可到_位置 [48].纵坐标, 相加 (3, 相乘 (4, 相加 (#棋子高度, #向下修补量))))

赋值 (棋子_右牛_可到_位置 [49].横坐标, 相加 (3, 相乘 (8, 相加 (#棋子宽度, #向右修补量))))
赋值 (棋子_右牛_可到_位置 [49].纵坐标, 相加 (3, 相乘 (5, 相加 (#棋子高度, #向下修补量))))

赋值 (棋子_右牛_可到_位置 [50].横坐标, 相加 (3, 相乘 (8, 相加 (#棋子宽度, #向右修补量))))
赋值 (棋子_右牛_可到_位置 [50].纵坐标, 相加 (3, 相乘 (6, 相加 (#棋子高度, #向下修补量))))

 ' ---------------------------------------------------
 ' 给其它右面棋位置数组赋值
 ' ----------------------------------------------------
.计次循环首 (50, i)
    赋值 (棋子_右龙_可到_位置 [i], 棋子_右牛_可到_位置 [i])
    赋值 (棋子_右鸡_可到_位置 [i], 棋子_右牛_可到_位置 [i])
    赋值 (棋子_右狗_可到_位置 [i], 棋子_右牛_可到_位置 [i])
    赋值 (棋子_右马_可到_位置 [i], 棋子_右牛_可到_位置 [i])
    赋值 (棋子_右蛇_可到_位置 [i], 棋子_右牛_可到_位置 [i])
    赋值 (棋子_右虎_可到_位置 [i], 棋子_右牛_可到_位置 [i])
     ' _启动窗口.编辑框_聊天内容.加入文本 (到文本 (棋子_右龙_位置 [i].横坐标) ＋ “,” ＋ 到文本 (棋子_右龙_位置 [i].纵坐标) ＋ #换行符)
.计次循环尾 ()
 ' -------------------------------------------------------------------------------
 ' 右面鼠的可能到达的位置
 ' -------------------------------------------------------------------------------
 ' 得到1、2、3、4、5、6、7、8纵向的位置数组
.变量循环首 (7, 56, 7, m)
    
    .计次循环首 (7, i)
        赋值 (棋子_右鼠_可到_位置 [相减 (相加 (i, m), 7)].横坐标, 相加 (3, 相乘 (相减 (相除 (m, 7), 1), 相加 (#棋子宽度, #向右修补量))))
        赋值 (棋子_右鼠_可到_位置 [相减 (相加 (i, m), 7)].纵坐标, 相加 (3, 相乘 (相减 (i, 1), 相加 (#棋子高度, #向下修补量))))
    .计次循环尾 ()
     ' 调试输出 (到文本 (m))
.变量循环尾 ()
 ' 得到9纵向的位置数组
赋值 (棋子_右鼠_可到_位置 [57].横坐标, 相加 (3, 相乘 (8, 相加 (#棋子宽度, #向右修补量))))
赋值 (棋子_右鼠_可到_位置 [57].纵坐标, 3)

赋值 (棋子_右鼠_可到_位置 [58].横坐标, 相加 (3, 相乘 (8, 相加 (#棋子宽度, #向右修补量))))
赋值 (棋子_右鼠_可到_位置 [58].纵坐标, 相加 (3, 相加 (#棋子高度, #向下修补量)))

赋值 (棋子_右鼠_可到_位置 [59].横坐标, 相加 (3, 相乘 (8, 相加 (#棋子宽度, #向右修补量))))
赋值 (棋子_右鼠_可到_位置 [59].纵坐标, 相加 (3, 相乘 (2, 相加 (#棋子高度, #向下修补量))))

赋值 (棋子_右鼠_可到_位置 [60].横坐标, 相加 (3, 相乘 (8, 相加 (#棋子宽度, #向右修补量))))
赋值 (棋子_右鼠_可到_位置 [60].纵坐标, 相加 (3, 相乘 (4, 相加 (#棋子高度, #向下修补量))))

赋值 (棋子_右鼠_可到_位置 [61].横坐标, 相加 (3, 相乘 (8, 相加 (#棋子宽度, #向右修补量))))
赋值 (棋子_右鼠_可到_位置 [61].纵坐标, 相加 (3, 相乘 (5, 相加 (#棋子高度, #向下修补量))))

赋值 (棋子_右鼠_可到_位置 [62].横坐标, 相加 (3, 相乘 (8, 相加 (#棋子宽度, #向右修补量))))
赋值 (棋子_右鼠_可到_位置 [62].纵坐标, 相加 (3, 相乘 (6, 相加 (#棋子高度, #向下修补量))))


.子程序 右棋子不可到位置, 空白型, , 
.局部变量 i, 整数型, , , 

 ' 这个也就是已方太公的默认位置
赋值 (棋子_右牛_不可到_位置 [1].横坐标, 539)
赋值 (棋子_右牛_不可到_位置 [1].纵坐标, 204)

 ' 下面是12格河的位置
赋值 (棋子_右牛_不可到_位置 [2].横坐标, 204)
赋值 (棋子_右牛_不可到_位置 [2].纵坐标, 70)

赋值 (棋子_右牛_不可到_位置 [3].横坐标, 271)
赋值 (棋子_右牛_不可到_位置 [3].纵坐标, 70)

赋值 (棋子_右牛_不可到_位置 [4].横坐标, 338)
赋值 (棋子_右牛_不可到_位置 [4].纵坐标, 70)

 ' --------------------------

赋值 (棋子_右牛_不可到_位置 [5].横坐标, 204)
赋值 (棋子_右牛_不可到_位置 [5].纵坐标, 137)

赋值 (棋子_右牛_不可到_位置 [6].横坐标, 271)
赋值 (棋子_右牛_不可到_位置 [6].纵坐标, 137)

赋值 (棋子_右牛_不可到_位置 [7].横坐标, 338)
赋值 (棋子_右牛_不可到_位置 [7].纵坐标, 137)
 ' ----------------------------
赋值 (棋子_右牛_不可到_位置 [8].横坐标, 204)
赋值 (棋子_右牛_不可到_位置 [8].纵坐标, 271)

赋值 (棋子_右牛_不可到_位置 [9].横坐标, 271)
赋值 (棋子_右牛_不可到_位置 [9].纵坐标, 271)

赋值 (棋子_右牛_不可到_位置 [10].横坐标, 338)
赋值 (棋子_右牛_不可到_位置 [10].纵坐标, 271)
 ' --------------------------------
赋值 (棋子_右牛_不可到_位置 [11].横坐标, 204)
赋值 (棋子_右牛_不可到_位置 [11].纵坐标, 338)

赋值 (棋子_右牛_不可到_位置 [12].横坐标, 271)
赋值 (棋子_右牛_不可到_位置 [12].纵坐标, 338)

赋值 (棋子_右牛_不可到_位置 [13].横坐标, 338)
赋值 (棋子_右牛_不可到_位置 [13].纵坐标, 338)

 ' 其它右棋不可到达位置
.计次循环首 (13, i)
    赋值 (棋子_右龙_不可到_位置, 棋子_右牛_不可到_位置)
    赋值 (棋子_右鸡_不可到_位置, 棋子_右牛_不可到_位置)
    赋值 (棋子_右狗_不可到_位置, 棋子_右牛_不可到_位置)
    赋值 (棋子_右马_不可到_位置, 棋子_右牛_不可到_位置)
    赋值 (棋子_右蛇_不可到_位置, 棋子_右牛_不可到_位置)
    赋值 (棋子_右虎_不可到_位置, 棋子_右牛_不可到_位置)
.计次循环尾 ()

 ' 棋子右鼠不可到达的位置是已方的太公默认位置
赋值 (棋子_右鼠_不可到_位置 [1], 棋子_右牛_不可到_位置 [1])


.程序集 初始化左棋程序集, , , 

.子程序 初始化左棋子, 空白型, , 
左棋子可到位置 ()
左棋子不可到位置 ()
所有左棋的当前位置 ()


.子程序 所有左棋的当前位置, 空白型, , 

赋值 (棋子_左鼠_当前位置.横坐标, _启动窗口..左边)
赋值 (棋子_左鼠_当前位置.纵坐标, _启动窗口..顶边)

赋值 (所有左棋的当前位置 [1].横坐标, 棋子_左鼠_当前位置.横坐标)
赋值 (所有左棋的当前位置 [1].纵坐标, 棋子_左鼠_当前位置.纵坐标)


赋值 (棋子_左蛇_当前位置.横坐标, _启动窗口..左边)
赋值 (棋子_左蛇_当前位置.纵坐标, _启动窗口..顶边)


赋值 (所有左棋的当前位置 [2].横坐标, 棋子_左蛇_当前位置.横坐标)
赋值 (所有左棋的当前位置 [2].纵坐标, 棋子_左蛇_当前位置.纵坐标)



赋值 (棋子_左鸡_当前位置.横坐标, _启动窗口..左边)
赋值 (棋子_左鸡_当前位置.纵坐标, _启动窗口..顶边)

赋值 (所有左棋的当前位置 [3].横坐标, 棋子_左鸡_当前位置.横坐标)
赋值 (所有左棋的当前位置 [3].纵坐标, 棋子_左鸡_当前位置.纵坐标)



赋值 (棋子_左狗_当前位置.横坐标, _启动窗口..左边)
赋值 (棋子_左狗_当前位置.纵坐标, _启动窗口..顶边)

赋值 (所有左棋的当前位置 [4].横坐标, 棋子_左狗_当前位置.横坐标)
赋值 (所有左棋的当前位置 [4].纵坐标, 棋子_左狗_当前位置.纵坐标)


赋值 (棋子_左马_当前位置.横坐标, _启动窗口..左边)
赋值 (棋子_左马_当前位置.纵坐标, _启动窗口..顶边)

赋值 (所有左棋的当前位置 [5].横坐标, 棋子_左马_当前位置.横坐标)
赋值 (所有左棋的当前位置 [5].纵坐标, 棋子_左马_当前位置.纵坐标)



赋值 (棋子_左牛_当前位置.横坐标, _启动窗口..左边)
赋值 (棋子_左牛_当前位置.纵坐标, _启动窗口..顶边)

赋值 (所有左棋的当前位置 [6].横坐标, 棋子_左牛_当前位置.横坐标)
赋值 (所有左棋的当前位置 [6].纵坐标, 棋子_左牛_当前位置.纵坐标)



赋值 (棋子_左虎_当前位置.横坐标, _启动窗口..左边)
赋值 (棋子_左虎_当前位置.纵坐标, _启动窗口..顶边)

赋值 (所有左棋的当前位置 [7].横坐标, 棋子_左虎_当前位置.横坐标)
赋值 (所有左棋的当前位置 [7].纵坐标, 棋子_左虎_当前位置.纵坐标)



赋值 (棋子_左龙_当前位置.横坐标, _启动窗口..左边)
赋值 (棋子_左龙_当前位置.纵坐标, _启动窗口..顶边)

赋值 (所有左棋的当前位置 [8].横坐标, 棋子_左龙_当前位置.横坐标)
赋值 (所有左棋的当前位置 [8].纵坐标, 棋子_左龙_当前位置.纵坐标)



赋值 (棋子_左太公_当前位置.横坐标, _启动窗口..左边)
赋值 (棋子_左太公_当前位置.纵坐标, _启动窗口..顶边)

赋值 (所有左棋的当前位置 [9].横坐标, 棋子_左太公_当前位置.横坐标)
赋值 (所有左棋的当前位置 [9].纵坐标, 棋子_左太公_当前位置.纵坐标)


.子程序 左棋子可到位置, 空白型, , 
.局部变量 i, 整数型, , , 
.局部变量 m, 整数型, , , 

 ' 得到1纵向的位置数组
赋值 (棋子_左牛_可到_位置 [1].横坐标, 3)
赋值 (棋子_左牛_可到_位置 [1].纵坐标, 3)

赋值 (棋子_左牛_可到_位置 [2].横坐标, 3)
赋值 (棋子_左牛_可到_位置 [2].纵坐标, 相加 (3, #棋子高度, #向下修补量))

赋值 (棋子_左牛_可到_位置 [3].横坐标, 3)
赋值 (棋子_左牛_可到_位置 [3].纵坐标, 相加 (3, 相乘 (2, 相加 (#棋子高度, #向下修补量))))

 ' -------------------------------------------------------------

赋值 (棋子_左牛_可到_位置 [4].横坐标, 3)
赋值 (棋子_左牛_可到_位置 [4].纵坐标, 相加 (3, 相乘 (4, 相加 (#棋子高度, #向下修补量))))


赋值 (棋子_左牛_可到_位置 [5].横坐标, 3)
赋值 (棋子_左牛_可到_位置 [5].纵坐标, 相加 (3, 相乘 (5, 相加 (#棋子高度, #向下修补量))))

赋值 (棋子_左牛_可到_位置 [6].横坐标, 3)
赋值 (棋子_左牛_可到_位置 [6].纵坐标, 相加 (3, 相乘 (6, 相加 (#棋子高度, #向下修补量))))

 ' 得到2、3纵向的位置数组
.变量循环首 (7, 14, 7, m)
    .计次循环首 (7, i)
        赋值 (棋子_左牛_可到_位置 [相减 (相加 (i, 6, m), 7)].横坐标, 相加 (3, 相乘 (相除 (m, 7), 相加 (#棋子宽度, #向右修补量))))
        赋值 (棋子_左牛_可到_位置 [相减 (相加 (i, 6, m), 7)].纵坐标, 相加 (3, 相乘 (相减 (i, 1), 相加 (#棋子高度, #向下修补量))))
        
    .计次循环尾 ()
    
.变量循环尾 ()

 ' ' 得到2纵向的位置数组
 ' .计次循环首 (7, i)
     ' 棋子_左牛_位置 [i ＋ 6].横坐标 ＝ 3 ＋ (#棋子宽度 ＋ #向右修补量)
     ' 棋子_左牛_位置 [i ＋ 6].纵坐标 ＝ 3 ＋ (i － 1) × (#棋子高度 ＋ #向下修补量)
    
 ' .计次循环尾 ()

 ' ' 得到3纵向的位置数组
 ' .计次循环首 (7, i)
     ' 棋子_左牛_位置 [i ＋ 13].横坐标 ＝ 3 ＋ 2 × (#棋子宽度 ＋ #向右修补量)
     ' 棋子_左牛_位置 [i ＋ 13].纵坐标 ＝ 3 ＋ (i － 1) × (#棋子高度 ＋ #向下修补量)
 ' .计次循环尾 ()

 ' 得到4纵向的位置数组

赋值 (棋子_左牛_可到_位置 [21].横坐标, 相加 (3, 相乘 (3, 相加 (#棋子宽度, #向右修补量))))
赋值 (棋子_左牛_可到_位置 [21].纵坐标, 3)

赋值 (棋子_左牛_可到_位置 [22].横坐标, 相加 (3, 相乘 (3, 相加 (#棋子宽度, #向右修补量))))
赋值 (棋子_左牛_可到_位置 [22].纵坐标, 相加 (3, 相乘 (3, 相加 (#棋子高度, #向下修补量))))

赋值 (棋子_左牛_可到_位置 [23].横坐标, 相加 (3, 相乘 (3, 相加 (#棋子宽度, #向右修补量))))
赋值 (棋子_左牛_可到_位置 [23].纵坐标, 相加 (3, 相乘 (6, 相加 (#棋子高度, #向下修补量))))

 ' 得到5纵向的位置数组
赋值 (棋子_左牛_可到_位置 [24].横坐标, 相加 (3, 相乘 (4, 相加 (#棋子宽度, #向右修补量))))
赋值 (棋子_左牛_可到_位置 [24].纵坐标, 3)

赋值 (棋子_左牛_可到_位置 [25].横坐标, 相加 (3, 相乘 (4, 相加 (#棋子宽度, #向右修补量))))
赋值 (棋子_左牛_可到_位置 [25].纵坐标, 相加 (3, 相乘 (3, 相加 (#棋子高度, #向下修补量))))

赋值 (棋子_左牛_可到_位置 [26].横坐标, 相加 (3, 相乘 (4, 相加 (#棋子宽度, #向右修补量))))
赋值 (棋子_左牛_可到_位置 [26].纵坐标, 相加 (3, 相乘 (6, 相加 (#棋子高度, #向下修补量))))

 ' 得到6纵向的位置数组
赋值 (棋子_左牛_可到_位置 [27].横坐标, 相加 (3, 相乘 (5, 相加 (#棋子宽度, #向右修补量))))
赋值 (棋子_左牛_可到_位置 [27].纵坐标, 3)

赋值 (棋子_左牛_可到_位置 [28].横坐标, 相加 (3, 相乘 (5, 相加 (#棋子宽度, #向右修补量))))
赋值 (棋子_左牛_可到_位置 [28].纵坐标, 相加 (3, 相乘 (3, 相加 (#棋子高度, #向下修补量))))

赋值 (棋子_左牛_可到_位置 [29].横坐标, 相加 (3, 相乘 (5, 相加 (#棋子宽度, #向右修补量))))
赋值 (棋子_左牛_可到_位置 [29].纵坐标, 相加 (3, 相乘 (6, 相加 (#棋子高度, #向下修补量))))

 ' 得到7、8、9纵向的位置数组,具体由正面注释的部分代码改来
.变量循环首 (7, 21, 7, m)
    .计次循环首 (7, i)
        赋值 (棋子_左牛_可到_位置 [相减 (相加 (i, 29, m), 7)].横坐标, 相加 (3, 相乘 (相加 (相除 (m, 7), 5), 相加 (#棋子宽度, #向右修补量))))
        赋值 (棋子_左牛_可到_位置 [相减 (相加 (i, 29, m), 7)].纵坐标, 相加 (3, 相乘 (相减 (i, 1), 相加 (#棋子高度, #向下修补量))))
    .计次循环尾 ()
     ' 调试输出 (到文本 (m))
.变量循环尾 ()

 ' ' 得到7纵向的位置数组
 ' .计次循环首 (7, i)
     ' 棋子_左牛_位置 [i ＋ 29].横坐标 ＝ 3 ＋ 6 × (#棋子宽度 ＋ #向右修补量)
     ' 棋子_左牛_位置 [i ＋ 29].纵坐标 ＝ 3 ＋ (i － 1) × (#棋子高度 ＋ #向下修补量)
 ' .计次循环尾 ()
 ' ' 得到8纵向的位置数组
 ' .计次循环首 (7, i)
     ' 棋子_左牛_位置 [i ＋ 36].横坐标 ＝ 3 ＋ 7 ×(#棋子宽度 ＋ #向右修补量)
     ' 棋子_左牛_位置 [i ＋ 36].纵坐标 ＝ 3 ＋ (i － 1) × (#棋子高度 ＋ #向下修补量)
 ' .计次循环尾 ()
 ' ' 得到9纵向的位置数组
 ' .计次循环首 (7, i)
     ' 棋子_左牛_位置 [i ＋ 43].横坐标 ＝ 3 ＋ 8 × (#棋子宽度 ＋ #向右修补量)
     ' 棋子_左牛_位置 [i ＋ 43].纵坐标 ＝ 3 ＋ (i － 1) × (#棋子高度 ＋ #向下修补量)
 ' .计次循环尾 ()


 ' ---------------------------------------------------
 ' 给其它左面棋位置数组赋值
 ' ----------------------------------------------------
.计次循环首 (50, i)
    赋值 (棋子_左龙_可到_位置 [i], 棋子_左牛_可到_位置 [i])
    赋值 (棋子_左鸡_可到_位置 [i], 棋子_左牛_可到_位置 [i])
    赋值 (棋子_左狗_可到_位置 [i], 棋子_左牛_可到_位置 [i])
    赋值 (棋子_左马_可到_位置 [i], 棋子_左牛_可到_位置 [i])
    赋值 (棋子_左蛇_可到_位置 [i], 棋子_左牛_可到_位置 [i])
    赋值 (棋子_左虎_可到_位置 [i], 棋子_左牛_可到_位置 [i])
    
     ' _启动窗口.编辑框_聊天内容.加入文本 (到文本 (棋子_左龙_位置 [i].横坐标) ＋ “,” ＋ 到文本 (棋子_左龙_位置 [i].纵坐标) ＋ #换行符)
.计次循环尾 ()

 ' ----------------------------------------------------------------------------
 ' 左面鼠的可能到达的位置
 ' -------------------------------------------------------------------------------
 ' 得到1纵向的位置数组

赋值 (棋子_左鼠_可到_位置 [1].横坐标, 3)
赋值 (棋子_左鼠_可到_位置 [1].纵坐标, 3)

赋值 (棋子_左鼠_可到_位置 [2].横坐标, 3)
赋值 (棋子_左鼠_可到_位置 [2].纵坐标, 相加 (3, 相加 (#棋子高度, #向下修补量)))

赋值 (棋子_左鼠_可到_位置 [3].横坐标, 3)
赋值 (棋子_左鼠_可到_位置 [3].纵坐标, 相加 (3, 相乘 (2, 相加 (#棋子高度, #向下修补量))))

 ' -------------------------------------------------------------

赋值 (棋子_左鼠_可到_位置 [4].横坐标, 3)
赋值 (棋子_左鼠_可到_位置 [4].纵坐标, 相加 (3, 相乘 (4, 相加 (#棋子高度, #向下修补量))))


赋值 (棋子_左鼠_可到_位置 [5].横坐标, 3)
赋值 (棋子_左鼠_可到_位置 [5].纵坐标, 相加 (3, 相乘 (5, 相加 (#棋子高度, #向下修补量))))

赋值 (棋子_左鼠_可到_位置 [6].横坐标, 3)
赋值 (棋子_左鼠_可到_位置 [6].纵坐标, 相加 (3, 相乘 (6, 相加 (#棋子高度, #向下修补量))))

 ' 得到2、3、4、5、6、7、8、9纵向的位置数组
.变量循环首 (7, 56, 7, m)
    
    .计次循环首 (7, i)
        赋值 (棋子_左鼠_可到_位置 [相减 (相加 (i, 6, m), 7)].横坐标, 相加 (3, 相乘 (相除 (m, 7), 相加 (#棋子宽度, #向右修补量))))
        赋值 (棋子_左鼠_可到_位置 [相减 (相加 (i, 6, m), 7)].纵坐标, 相加 (3, 相乘 (相减 (i, 1), 相加 (#棋子高度, #向下修补量))))
    .计次循环尾 ()
     ' 调试输出 (到文本 (m))
.变量循环尾 ()


 ' ' 得到2纵向的位置数组
 ' 棋子_左鼠_位置 [i ＋ 6].横坐标 ＝ 3 ＋ 1 × (#棋子宽度 ＋ #向右修补量)
 ' 棋子_左鼠_位置 [i ＋ 6].纵坐标 ＝ 3 ＋ (i － 1) × (#棋子高度 ＋ #向下修补量)
 ' ' 得到3纵向的位置数组
 ' .计次循环首 (7, i)
     ' 棋子_左鼠_位置 [i ＋ 13].横坐标 ＝ 3 ＋ 2 × (#棋子宽度 ＋ #向右修补量)
     ' 棋子_左鼠_位置 [i ＋ 13].纵坐标 ＝ 3 ＋ (i － 1) × (#棋子高度 ＋ #向下修补量)
 ' .计次循环尾 ()
 ' ' 得到4纵向的位置数组
 ' .计次循环首 (7, i)
     ' 棋子_左鼠_位置 [i ＋ 20].横坐标 ＝ 3 ＋ 3 × (#棋子宽度 ＋ #向右修补量)
     ' 棋子_左鼠_位置 [i ＋ 20].纵坐标 ＝ 3 ＋ (i － 1) × (#棋子高度 ＋ #向下修补量)
 ' .计次循环尾 ()
 ' ' 得到5纵向的位置数组
 ' .计次循环首 (7, i)
     ' 棋子_左鼠_位置 [i ＋ 27].横坐标 ＝ 3 ＋ 4 × (#棋子宽度 ＋ #向右修补量)
     ' 棋子_左鼠_位置 [i ＋ 27].纵坐标 ＝ 3 ＋ (i － 1) × (#棋子高度 ＋ #向下修补量)
 ' .计次循环尾 ()
 ' ' 得到6纵向的位置数组
 ' .计次循环首 (7, i)
     ' 棋子_左鼠_位置 [i ＋ 34].横坐标 ＝ 3 ＋ 5 × (#棋子宽度 ＋ #向右修补量)
     ' 棋子_左鼠_位置 [i ＋ 34].纵坐标 ＝ 3 ＋ (i － 1) × (#棋子高度 ＋ #向下修补量)
 ' .计次循环尾 ()
 ' ' 得到7纵向的位置数组
 ' .计次循环首 (7, i)
     ' 棋子_左鼠_位置 [i ＋ 41].横坐标 ＝ 3 ＋ 6 × (#棋子宽度 ＋ #向右修补量)
     ' 棋子_左鼠_位置 [i ＋ 41].纵坐标 ＝ 3 ＋ (i － 1) × (#棋子高度 ＋ #向下修补量)
 ' .计次循环尾 ()
 ' ' 得到8纵向的位置数组
 ' .计次循环首 (7, i)
     ' 棋子_左鼠_位置 [i ＋ 48].横坐标 ＝ 3 ＋ 7 × (#棋子宽度 ＋ #向右修补量)
     ' 棋子_左鼠_位置 [i ＋ 48].纵坐标 ＝ 3 ＋ (i － 1) × (#棋子高度 ＋ #向下修补量)
 ' .计次循环尾 ()
 ' ' 得到9纵向的位置数组
 ' .计次循环首 (7, i)
     ' 棋子_左鼠_位置 [i ＋ 55].横坐标 ＝ 3 ＋ 8 × (#棋子宽度 ＋ #向右修补量)
     ' 棋子_左鼠_位置 [i ＋ 55].纵坐标 ＝ 3 ＋ (i － 1) × (#棋子高度 ＋ #向下修补量)
 ' .计次循环尾 ()

.子程序 左棋子不可到位置, 空白型, , 
.局部变量 i, 整数型, , , 

 ' 这个也就是已方太公的默认位置
赋值 (棋子_左牛_不可到_位置 [1].横坐标, 3)
赋值 (棋子_左牛_不可到_位置 [1].纵坐标, 204)

 ' 下面是12格河的位置
赋值 (棋子_左牛_不可到_位置 [2].横坐标, 204)
赋值 (棋子_左牛_不可到_位置 [2].纵坐标, 70)

赋值 (棋子_左牛_不可到_位置 [3].横坐标, 271)
赋值 (棋子_左牛_不可到_位置 [3].纵坐标, 70)

赋值 (棋子_左牛_不可到_位置 [4].横坐标, 338)
赋值 (棋子_左牛_不可到_位置 [4].纵坐标, 70)

 ' --------------------------

赋值 (棋子_左牛_不可到_位置 [5].横坐标, 204)
赋值 (棋子_左牛_不可到_位置 [5].纵坐标, 137)

赋值 (棋子_左牛_不可到_位置 [6].横坐标, 271)
赋值 (棋子_左牛_不可到_位置 [6].纵坐标, 137)

赋值 (棋子_左牛_不可到_位置 [7].横坐标, 338)
赋值 (棋子_左牛_不可到_位置 [7].纵坐标, 137)
 ' ----------------------------
赋值 (棋子_左牛_不可到_位置 [8].横坐标, 204)
赋值 (棋子_左牛_不可到_位置 [8].纵坐标, 271)

赋值 (棋子_左牛_不可到_位置 [9].横坐标, 271)
赋值 (棋子_左牛_不可到_位置 [9].纵坐标, 271)

赋值 (棋子_左牛_不可到_位置 [10].横坐标, 338)
赋值 (棋子_左牛_不可到_位置 [10].纵坐标, 271)
 ' --------------------------------
赋值 (棋子_左牛_不可到_位置 [11].横坐标, 204)
赋值 (棋子_左牛_不可到_位置 [11].纵坐标, 338)

赋值 (棋子_左牛_不可到_位置 [12].横坐标, 271)
赋值 (棋子_左牛_不可到_位置 [12].纵坐标, 338)

赋值 (棋子_左牛_不可到_位置 [13].横坐标, 338)
赋值 (棋子_左牛_不可到_位置 [13].纵坐标, 338)

 ' 其它左棋不可到达位置
.计次循环首 (13, i)
    赋值 (棋子_左龙_不可到_位置, 棋子_左牛_不可到_位置)
    赋值 (棋子_左鸡_不可到_位置, 棋子_左牛_不可到_位置)
    赋值 (棋子_左狗_不可到_位置, 棋子_左牛_不可到_位置)
    赋值 (棋子_左马_不可到_位置, 棋子_左牛_不可到_位置)
    赋值 (棋子_左蛇_不可到_位置, 棋子_左牛_不可到_位置)
    赋值 (棋子_左虎_不可到_位置, 棋子_左牛_不可到_位置)
.计次循环尾 ()

 ' 棋子左鼠不可到达的位置是已方的太公默认位置
赋值 (棋子_左鼠_不可到_位置 [1], 棋子_左牛_不可到_位置 [1])

.程序集 声音播放程序集, , , 

.子程序 播放牛叫, 空白型, , 
播放音乐 (#牛叫, )

.子程序 播放龙叫, 空白型, , 
播放音乐 (#龙叫, )

.子程序 播放鸡叫, 空白型, , 
播放音乐 (#鸡叫, )

.子程序 播放狗叫, 空白型, , 
播放音乐 (#狗叫, )

.子程序 播放马叫, 空白型, , 
播放音乐 (#马叫, )

.子程序 播放鼠叫, 空白型, , 
播放音乐 (#鼠叫, )

.子程序 播放蛇叫, 空白型, , 
播放音乐 (#蛇叫, )

.子程序 播放虎叫, 空白型, , 
播放音乐 (#虎叫, )

.子程序 播放你走错了, 空白型, , 
播放音乐 (#你走错了, )

.子程序 播放保护我, 空白型, , 
播放音乐 (#保护我, )

.子程序 播放老大你要做什么, 空白型, , 
播放音乐 (#老大你要做什么, )


.子程序 播放不能过河, 空白型, , 
播放音乐 (#不能过河, )



.子程序 播放胜利, 空白型, , 
播放音乐 (#胜利, )


.子程序 播放投掷骰子, 空白型, , 
播放音乐 (#投掷骰子, )

.程序集 公共程序集, , , 

.子程序 棋子移动, 逻辑型, , 移动成功则返回真
.参数 棋子类型, 整数型, , 1为左棋，2为右棋
.参数 棋子, 图形按钮, , 要移动的棋子图形按钮
.参数 匿名参数_2337, 空白型, , 
.参数 来源位置, 位置, , 要移动的棋子图形按钮位置
.参数 目标位置, 位置, , 鼠标点击的目标位置
.参数 匿名参数_2335, 空白型, , 
.参数 上方左棋大小, 整数型, , 移动棋子上方的棋子大小
.参数 上方右棋大小, 整数型, , 移动棋子上方的棋子大小
.参数 匿名参数_2429, 空白型, , 
.参数 下方左棋大小, 整数型, , 移动棋子下方的棋子大小
.参数 下方右棋大小, 整数型, , 移动棋子下方的棋子大小
.参数 匿名参数_2430, 空白型, , 
.参数 左方左棋大小, 整数型, , 移动棋子左方的棋子大小
.参数 左方右棋大小, 整数型, , 移动棋子左方的棋子大小
.参数 匿名参数_2427, 空白型, , 
.参数 右方左棋大小, 整数型, , 移动棋子右方的棋子大小
.参数 右方右棋大小, 整数型, , 移动棋子右方的棋子大小
.参数 匿名参数_2421, 空白型, , 
.参数 参数_向上移动, 逻辑型, , 棋子可以向上移动的逻辑判断值，为“真”时是充许，否则不充许
.参数 参数_向下移动, 逻辑型, , 棋子可以向下移动的逻辑判断值，为“真”时是充许，否则不充许
.参数 参数_向左移动, 逻辑型, , 棋子可以向左移动的逻辑判断值，为“真”时是充许，否则不充许
.参数 参数_向右移动, 逻辑型, , 棋子可以向右移动的逻辑判断值，为“真”时是充许，否则不充许
.参数 匿名参数_2338, 空白型, , 
.参数 参数_上方棋子可删除, 逻辑型, , 将移动棋子的上方棋子可以隐藏显示：为“真”时是上方棋子隐藏，为“假”时是上方棋子显示
.参数 参数_下方棋子可删除, 逻辑型, , 将移动棋子的下方棋子可以隐藏显示：为“真”时是上方棋子隐藏，为“假”时是上方棋子显示
.参数 参数_左方棋子可删除, 逻辑型, , 将移动棋子的左方棋子可以隐藏显示：为“真”时是上方棋子隐藏，为“假”时是上方棋子显示
.参数 参数_右方棋子可删除, 逻辑型, , 将移动棋子的右方棋子可以隐藏显示：为“真”时是上方棋子隐藏，为“假”时是上方棋子显示
.参数 匿名参数_2316, 空白型, , 
.参数 参数_所有左棋子当前位置, 位置, 数组, 全局数量变量：所有左棋子当前位置
.参数 参数_所有右棋子当前位置, 位置, 数组, 全局数量变量：所有右棋子当前位置

.局部变量 匿名局部变量_2324, 空白型, , , 
.局部变量 上方棋子, 图形按钮, , , 
.局部变量 下方棋子, 图形按钮, , , 
.局部变量 左方棋子, 图形按钮, , , 
.局部变量 右方棋子, 图形按钮, , , 
.局部变量 上方棋子可视, 逻辑型, , , 
.局部变量 下方棋子可视, 逻辑型, , , 
.局部变量 左方棋子可视, 逻辑型, , , 
.局部变量 右方棋子可视, 逻辑型, , , 
.局部变量 是重来, 逻辑型, , , 

赋值 (是重来, 假)

.判断开始 (并且 (大于或等于 (目标位置.横坐标, 相加 (来源位置.横坐标, #棋子宽度, #向右修补量)), 小于或等于 (目标位置.横坐标, 相加 (来源位置.横坐标, 相乘 (2, 相加 (#棋子宽度, #向右修补量)))), 大于或等于 (目标位置.纵坐标, 来源位置.纵坐标), 小于或等于 (目标位置.纵坐标, 相加 (来源位置.纵坐标, #棋子高度, #向下修补量))))
    
    .如果真 (参数_向右移动) ' 向右移动
        .如果真 (参数_右方棋子可删除)
            .判断开始 (等于 (棋子类型, 1)) ' 如果将移动的棋子是左棋
                赋值 (参数_所有右棋子当前位置 [右方右棋大小], 横坐标, 0)
                赋值 (参数_所有右棋子当前位置 [右方右棋大小], 纵坐标, 0)
                赋值 (右方棋子可视, 假)
                .如果真 (等于 (右方右棋大小, 9))
                    播放胜利 ()
                    .判断开始 (等于 (信息框 (“你赢了！！！要再来一盘吗？”, 1, #提示文字), 0))
                        再来一盘 ()
                        赋值 (是重来, 真)
                        赋值 (右方棋子可视, 真)
                    .默认
                        
                    .判断结束
                    
                .如果真结束
                赋值 (右方棋子, 多项选择 (右方右棋大小, _启动窗口., _启动窗口., _启动窗口., _启动窗口., _启动窗口., _启动窗口., _启动窗口., _启动窗口., _启动窗口.))
                
            .默认
                 ' 如果将移动的棋子是右棋
                
                赋值 (右方棋子, 多项选择 (右方左棋大小, _启动窗口., _启动窗口., _启动窗口., _启动窗口., _启动窗口., _启动窗口., _启动窗口., _启动窗口., _启动窗口.))
                赋值 (参数_所有左棋子当前位置 [右方左棋大小], 横坐标, 0)
                赋值 (参数_所有左棋子当前位置 [右方左棋大小], 纵坐标, 0)
                赋值 (右方棋子可视, 假)
                .如果真 (等于 (右方左棋大小, 9))
                    播放胜利 ()
                    .判断开始 (等于 (信息框 (“你赢了！！！要再来一盘吗？”, 1, #提示文字), 0))
                        再来一盘 ()
                        赋值 (是重来, 真)
                        赋值 (右方棋子可视, 真)
                    .默认
                        
                    .判断结束
                    
                .如果真结束
                
            .判断结束
            赋值 (右方棋子.可视, 右方棋子可视)
        .如果真结束
        
        .如果真 (等于 (是重来, 假))
            向右移动 (棋子, 来源位置, 目标位置)
            .判断开始 (等于 (棋子类型, 1))
                赋值 (左棋已移动步数, 相加 (左棋已移动步数, 1))
            .默认
                赋值 (右棋已移动步数, 相加 (右棋已移动步数, 1))
            .判断结束
            
            .判断开始 (等于 (你的左右手, 真))
                赋值 (_启动窗口..标题, 相加 (“你走了”, 到文本 (左棋已移动步数), “步”))
                赋值 (_启动窗口..标题, 相加 (“对手走了”, 到文本 (右棋已移动步数), “步”))
            .默认
                
                赋值 (_启动窗口..标题, 相加 (“你走了”, 到文本 (右棋已移动步数), “步”))
                赋值 (_启动窗口..标题, 相加 (“对手走了”, 到文本 (左棋已移动步数), “步”))
                
            .判断结束
            
            
            
        .如果真结束
        
    .如果真结束
    
.默认
    .判断开始 (并且 (小于 (目标位置.横坐标, 来源位置.横坐标), 大于或等于 (目标位置.横坐标, 相减 (来源位置.横坐标, #棋子宽度, #向左修补量)), 大于或等于 (目标位置.纵坐标, 来源位置.纵坐标), 小于或等于 (目标位置.纵坐标, 相加 (来源位置.纵坐标, #棋子高度, #向下修补量))))
        
        .如果真 (参数_向左移动) ' 向左移动
            .如果真 (参数_左方棋子可删除)
                .判断开始 (等于 (棋子类型, 1)) ' 如果将移动的棋子是左棋
                    赋值 (左方棋子可视, 假)
                    赋值 (参数_所有右棋子当前位置 [左方右棋大小], 横坐标, 0)
                    赋值 (参数_所有右棋子当前位置 [左方右棋大小], 纵坐标, 0)
                    .如果真 (等于 (左方右棋大小, 9))
                        播放胜利 ()
                        .判断开始 (等于 (信息框 (“你赢了！！！要再来一盘吗？”, 1, #提示文字), 0))
                            再来一盘 ()
                            赋值 (是重来, 真)
                            赋值 (左方棋子可视, 真)
                        .默认
                            
                        .判断结束
                        
                    .如果真结束
                    
                    赋值 (左方棋子, 多项选择 (左方右棋大小, _启动窗口., _启动窗口., _启动窗口., _启动窗口., _启动窗口., _启动窗口., _启动窗口., _启动窗口., _启动窗口.))
                    
                .默认
                     ' 如果将移动的棋子是右棋
                    赋值 (左方棋子, 多项选择 (左方左棋大小, _启动窗口., _启动窗口., _启动窗口., _启动窗口., _启动窗口., _启动窗口., _启动窗口., _启动窗口., _启动窗口.))
                    赋值 (参数_所有左棋子当前位置 [左方左棋大小], 横坐标, 0)
                    赋值 (参数_所有左棋子当前位置 [左方左棋大小], 纵坐标, 0)
                    赋值 (左方棋子可视, 假)
                    .如果真 (等于 (左方左棋大小, 9))
                        播放胜利 ()
                        .判断开始 (等于 (信息框 (“你赢了！！！要再来一盘吗？”, 1, #提示文字), 0))
                            再来一盘 ()
                            赋值 (是重来, 真)
                            赋值 (左方棋子可视, 真)
                        .默认
                            
                        .判断结束
                        
                    .如果真结束
                    
                .判断结束
                赋值 (左方棋子.可视, 左方棋子可视)
                
            .如果真结束
            
            .如果真 (等于 (是重来, 假))
                向左移动 (棋子, 来源位置, 目标位置)
                .判断开始 (等于 (棋子类型, 1))
                    赋值 (左棋已移动步数, 相加 (左棋已移动步数, 1))
                .默认
                    赋值 (右棋已移动步数, 相加 (右棋已移动步数, 1))
                .判断结束
                
                .判断开始 (等于 (你的左右手, 真))
                    赋值 (_启动窗口..标题, 相加 (“你走了”, 到文本 (左棋已移动步数), “步”))
                    赋值 (_启动窗口..标题, 相加 (“对手走了”, 到文本 (右棋已移动步数), “步”))
                .默认
                    
                    赋值 (_启动窗口..标题, 相加 (“你走了”, 到文本 (右棋已移动步数), “步”))
                    赋值 (_启动窗口..标题, 相加 (“对手走了”, 到文本 (左棋已移动步数), “步”))
                    
                .判断结束
                
                
            .如果真结束
            
        .如果真结束
        
    .默认
        .判断开始 (并且 (大于或等于 (目标位置.纵坐标, 相加 (来源位置.纵坐标, #棋子高度, #向下修补量)), 小于或等于 (目标位置.纵坐标, 相加 (来源位置.纵坐标, 相乘 (2, 相加 (#棋子高度, #向下修补量)))), 大于或等于 (目标位置.横坐标, 来源位置.横坐标), 小于或等于 (目标位置.横坐标, 相加 (来源位置.横坐标, #棋子宽度, #向右修补量))))
            .如果真 (参数_向下移动) ' 向下移动
                .如果真 (参数_下方棋子可删除)
                    .判断开始 (等于 (棋子类型, 1))
                        赋值 (下方棋子可视, 假)
                        赋值 (参数_所有右棋子当前位置 [下方右棋大小], 横坐标, 0)
                        赋值 (参数_所有右棋子当前位置 [下方右棋大小], 纵坐标, 0)
                        .如果真 (等于 (下方右棋大小, 9))
                            播放胜利 ()
                            .判断开始 (等于 (信息框 (“你赢了！！！要再来一盘吗？”, 1, #提示文字), 0))
                                再来一盘 ()
                                赋值 (是重来, 真)
                                赋值 (下方棋子可视, 真)
                            .默认
                                
                            .判断结束
                            
                        .如果真结束
                        
                         ' “鼠”, “蛇”, “鸡”, “狗”, “马”, “牛”, “虎”, “龙”, “太公”
                        
                        赋值 (下方棋子, 多项选择 (下方右棋大小, _启动窗口., _启动窗口., _启动窗口., _启动窗口., _启动窗口., _启动窗口., _启动窗口., _启动窗口., _启动窗口.))
                    .默认
                        
                        赋值 (下方棋子, 多项选择 (下方左棋大小, _启动窗口., _启动窗口., _启动窗口., _启动窗口., _启动窗口., _启动窗口., _启动窗口., _启动窗口., _启动窗口.))
                        赋值 (下方棋子可视, 假)
                        赋值 (参数_所有左棋子当前位置 [下方左棋大小], 横坐标, 0)
                        赋值 (参数_所有左棋子当前位置 [下方左棋大小], 纵坐标, 0)
                        .如果真 (等于 (下方左棋大小, 9))
                            播放胜利 ()
                            .判断开始 (等于 (信息框 (“你赢了！！！要再来一盘吗？”, 1, #提示文字), 0))
                                再来一盘 ()
                                赋值 (是重来, 真)
                                赋值 (下方棋子可视, 真)
                            .默认
                                
                            .判断结束
                             ' 本源码来自易语言资源网(www.wodesoft.com)
                        .如果真结束
                        
                    .判断结束
                    赋值 (下方棋子.可视, 下方棋子可视)
                .如果真结束
                
                .如果真 (等于 (是重来, 假))
                    向下移动 (棋子, 来源位置, 目标位置)
                    .判断开始 (等于 (棋子类型, 1))
                        赋值 (左棋已移动步数, 相加 (左棋已移动步数, 1))
                    .默认
                        赋值 (右棋已移动步数, 相加 (右棋已移动步数, 1))
                    .判断结束
                    
                    .判断开始 (等于 (你的左右手, 真))
                        赋值 (_启动窗口..标题, 相加 (“你走了”, 到文本 (左棋已移动步数), “步”))
                        赋值 (_启动窗口..标题, 相加 (“对手走了”, 到文本 (右棋已移动步数), “步”))
                    .默认
                        
                        赋值 (_启动窗口..标题, 相加 (“你走了”, 到文本 (右棋已移动步数), “步”))
                        赋值 (_启动窗口..标题, 相加 (“对手走了”, 到文本 (左棋已移动步数), “步”))
                        
                    .判断结束
                    
                    
                .如果真结束
                
            .如果真结束
            
        .默认
            .判断开始 (并且 (小于 (目标位置.纵坐标, 来源位置.纵坐标), 大于或等于 (目标位置.纵坐标, 相减 (来源位置.纵坐标, #棋子高度, #向上修补量)), 大于或等于 (目标位置.横坐标, 来源位置.横坐标), 小于或等于 (目标位置.横坐标, 相加 (来源位置.横坐标, #棋子宽度, #向右修补量))))
                
                .如果真 (参数_向上移动)
                    .如果真 (参数_上方棋子可删除) ' 只有当移动的左棋（右棋）上方是右棋（左棋），并且左棋（右棋）比右棋（左棋）大或一样大的时，这个要移动的左棋（右棋）上方的右棋（左棋）才可以删除
                        .判断开始 (等于 (棋子类型, 1)) ' 当移动的是左棋将其上的右棋当前位置置0，并且将其上的右棋图形按钮控件隐藏起来
                            赋值 (上方棋子可视, 假)
                            赋值 (参数_所有右棋子当前位置 [上方右棋大小], 横坐标, 0)
                            赋值 (参数_所有右棋子当前位置 [上方右棋大小], 纵坐标, 0)
                            .如果真 (等于 (上方右棋大小, 9))
                                播放胜利 ()
                                .判断开始 (等于 (信息框 (“你赢了！！！要再来一盘吗？”, 1, #提示文字), 0))
                                    再来一盘 ()
                                    赋值 (是重来, 真)
                                    赋值 (上方棋子可视, 真)
                                .默认
                                    
                                .判断结束
                                
                            .如果真结束
                            
                             ' 得到要隐藏的右棋
                            赋值 (上方棋子, 多项选择 (上方右棋大小, _启动窗口., _启动窗口., _启动窗口., _启动窗口., _启动窗口., _启动窗口., _启动窗口., _启动窗口., _启动窗口.))
                            
                        .默认
                             ' 当移动的右棋，而上方是比之小或一样大的左棋时,将其上的左棋当前位置置0，并且将其上的左棋图形按钮控件隐藏起来
                             ' 得到要隐藏的左棋
                            赋值 (上方棋子, 多项选择 (上方左棋大小, _启动窗口., _启动窗口., _启动窗口., _启动窗口., _启动窗口., _启动窗口., _启动窗口., _启动窗口., _启动窗口.))
                            赋值 (上方棋子可视, 假)
                            赋值 (参数_所有左棋子当前位置 [上方左棋大小], 横坐标, 0)
                            赋值 (参数_所有左棋子当前位置 [上方左棋大小], 纵坐标, 0)
                            .如果真 (等于 (上方左棋大小, 9))
                                播放胜利 ()
                                .判断开始 (等于 (信息框 (“你赢了！！！要再来一盘吗？”, 1, #提示文字), 0))
                                    再来一盘 ()
                                    赋值 (是重来, 真)
                                    赋值 (上方棋子可视, 真)
                                .默认
                                    
                                .判断结束
                                
                            .如果真结束
                            
                        .判断结束
                        
                        赋值 (上方棋子.可视, 上方棋子可视)
                        
                    .如果真结束
                    
                    .如果真 (等于 (是重来, 假))
                        向上移动 (棋子, 来源位置, 目标位置)
                        .判断开始 (等于 (棋子类型, 1))
                            赋值 (左棋已移动步数, 相加 (左棋已移动步数, 1))
                        .默认
                            赋值 (右棋已移动步数, 相加 (右棋已移动步数, 1))
                        .判断结束
                        
                        .判断开始 (等于 (你的左右手, 真))
                            赋值 (_启动窗口..标题, 相加 (“你走了”, 到文本 (左棋已移动步数), “步”))
                            赋值 (_启动窗口..标题, 相加 (“对手走了”, 到文本 (右棋已移动步数), “步”))
                        .默认
                            
                            赋值 (_启动窗口..标题, 相加 (“你走了”, 到文本 (右棋已移动步数), “步”))
                            赋值 (_启动窗口..标题, 相加 (“对手走了”, 到文本 (左棋已移动步数), “步”))
                             ' 本源码来自易语言资源网(www.wodesoft.com)
                        .判断结束
                        
                        
                    .如果真结束
                    
                .如果真结束
                
            .默认
                播放你走错了 () ' 如果不是正确的移动棋子，则你走错了
            .判断结束
            
        .判断结束
        
    .判断结束
    
.判断结束

返回 (真)


.子程序 向右移动, 逻辑型, , 
.参数 棋子, 图形按钮, , 
.参数 来源位置, 位置, , 
.参数 目标位置, 位置, , 

.如果真 (小于 (相加 (来源位置.横坐标, #棋子宽度, #向右修补量), 540)) ' 如果向左出界则不再左移
    赋值 (棋子.左边, 相加 (来源位置.横坐标, #棋子宽度, #向右修补量))
.如果真结束
 ' 调试输出 (“向右:” ＋ 到文本 (棋子.左边))
赋值 (棋子.顶边, 来源位置.纵坐标)
返回 (真)


.子程序 向左移动, 逻辑型, , 
.参数 棋子, 图形按钮, , 
.参数 来源位置, 位置, , 
.参数 目标位置, 位置, , 

.如果真 (大于 (相减 (来源位置.横坐标, #棋子宽度, #向左修补量), 0)) ' 如果向右出界则不再右移
    赋值 (棋子.左边, 相减 (来源位置.横坐标, #棋子宽度, #向左修补量))
.如果真结束
 ' 调试输出 (“向左:” ＋ 到文本 (棋子.左边))
赋值 (棋子.顶边, 来源位置.纵坐标)
返回 (真)


.子程序 向上移动, 逻辑型, , 
.参数 棋子, 图形按钮, , 
.参数 来源位置, 位置, , 
.参数 目标位置, 位置, , 

.如果真 (大于 (相减 (来源位置.纵坐标, #棋子高度, #向上修补量), 0)) ' 如果向上出界则不再上移
    赋值 (棋子.顶边, 相减 (来源位置.纵坐标, #棋子高度, #向上修补量))
.如果真结束
 ' 调试输出 (“向上:” ＋ 到文本 (棋子.顶边))
赋值 (棋子.左边, 来源位置.横坐标)
返回 (真)


.子程序 向下移动, 逻辑型, , 
.参数 棋子, 图形按钮, , 
.参数 来源位置, 位置, , 
.参数 目标位置, 位置, , 

.如果真 (小于 (相加 (来源位置.纵坐标, #棋子高度, #向下修补量), 406)) ' 如果向下出界则不再下移
    赋值 (棋子.顶边, 相加 (来源位置.纵坐标, #棋子高度, #向下修补量))
.如果真结束
 ' 调试输出 (“向下” ＋ 到文本 (棋子.顶边))
赋值 (棋子.左边, 来源位置.横坐标)
返回 (真)



.子程序 列举棋子位置, 逻辑型, , 判断当前棋子要到达的位置是否包含在指定范围内,如果是的话返回真，否则返回假
.参数 参数_棋子目的位置, 位置, , 要检测的棋子目的位置
.参数 参数_棋子位置范围, 位置, 数组, 棋子位置范围
.参数 参数_棋子图形按钮, 图形按钮, , 

.局部变量 包含, 逻辑型, , , 
.局部变量 计次变量, 整数型, , , 
.局部变量 成员数, 整数型, , , 

赋值 (包含, 假)
赋值 (成员数, 取数组成员数 (参数_棋子位置范围))
.计次循环首 (成员数, 计次变量)
    .判断开始 (并且 (大于或等于 (参数_棋子目的位置.横坐标, 参数_棋子位置范围 [计次变量], 横坐标), 小于 (参数_棋子目的位置.横坐标, 相加 (参数_棋子图形按钮.宽度, 参数_棋子位置范围 [计次变量], 横坐标)), 大于或等于 (参数_棋子目的位置.纵坐标, 参数_棋子位置范围 [计次变量], 纵坐标), 小于 (参数_棋子目的位置.纵坐标, 相加 (参数_棋子图形按钮.高度, 参数_棋子位置范围 [计次变量], 纵坐标))))
        赋值 (包含, 真)
    .默认
        
    .判断结束
     ' 调试输出 (“目的位置：” ＋ 到文本 (参数_棋子目的位置.横坐标) ＋ “,” ＋ 到文本 (参数_棋子目的位置.纵坐标))
     ' 调试输出 (“位置范围：” ＋ 到文本 (参数_棋子位置范围 [计次变量].横坐标) ＋ “,” ＋ 到文本 (参数_棋子位置范围 [计次变量].纵坐标))
.计次循环尾 ()
返回 (包含)


.子程序 所有棋子的当前位置, 空白型, , 
.局部变量 计次变量, 整数型, , , 
.局部变量 左棋成员数, 整数型, , , 
.局部变量 右棋成员数, 整数型, , , 

赋值 (左棋成员数, 取数组成员数 (所有左棋的当前位置))
赋值 (右棋成员数, 取数组成员数 (所有右棋的当前位置))

.计次循环首 (左棋成员数, 计次变量)
    赋值 (所有棋子的当前位置 [计次变量], 所有左棋的当前位置 [计次变量])
.计次循环尾 ()

.计次循环首 (右棋成员数, 计次变量)
    赋值 (所有棋子的当前位置 [相加 (左棋成员数, 计次变量)], 所有右棋的当前位置 [计次变量])
.计次循环尾 ()


.子程序 四周有无棋子, 棋子周围情况, , 
.参数 参数_棋子图形按钮, 图形按钮, , 
.参数 参数_棋子类型, 整数型, , 
.参数 参数_所有左棋子当前位置, 位置, 数组, 
.参数 参数_所有右棋子当前位置, 位置, 数组, 

.局部变量 周围情况, 棋子周围情况, , , 

赋值 (周围情况.上方有无棋子,  [上面有无棋子 (参数_棋子图形按钮, 参数_棋子类型, 参数_所有左棋子当前位置, 参数_所有右棋子当前位置)].上方有无棋子)
赋值 (周围情况.下方有无棋子,  [下面有无棋子 (参数_棋子图形按钮, 参数_棋子类型, 参数_所有左棋子当前位置, 参数_所有右棋子当前位置)].下方有无棋子)
赋值 (周围情况.左方有无棋子,  [左面有无棋子 (参数_棋子图形按钮, 参数_棋子类型, 参数_所有左棋子当前位置, 参数_所有右棋子当前位置)].左方有无棋子)
赋值 (周围情况.右方有无棋子,  [右面有无棋子 (参数_棋子图形按钮, 参数_棋子类型, 参数_所有左棋子当前位置, 参数_所有右棋子当前位置)].右方有无棋子)

赋值 (周围情况.上方是敌是友,  [上面有无棋子 (参数_棋子图形按钮, 参数_棋子类型, 参数_所有左棋子当前位置, 参数_所有右棋子当前位置)].上方是敌是友)
赋值 (周围情况.下方是敌是友,  [下面有无棋子 (参数_棋子图形按钮, 参数_棋子类型, 参数_所有左棋子当前位置, 参数_所有右棋子当前位置)].下方是敌是友)
赋值 (周围情况.左方是敌是友,  [左面有无棋子 (参数_棋子图形按钮, 参数_棋子类型, 参数_所有左棋子当前位置, 参数_所有右棋子当前位置)].左方是敌是友)
赋值 (周围情况.右方是敌是友,  [右面有无棋子 (参数_棋子图形按钮, 参数_棋子类型, 参数_所有左棋子当前位置, 参数_所有右棋子当前位置)].右方是敌是友)

赋值 (周围情况.上方左棋子大小,  [上面有无棋子 (参数_棋子图形按钮, 参数_棋子类型, 参数_所有左棋子当前位置, 参数_所有右棋子当前位置)].上方左棋子大小)
赋值 (周围情况.下方左棋子大小,  [下面有无棋子 (参数_棋子图形按钮, 参数_棋子类型, 参数_所有左棋子当前位置, 参数_所有右棋子当前位置)].下方左棋子大小)
赋值 (周围情况.左方左棋子大小,  [左面有无棋子 (参数_棋子图形按钮, 参数_棋子类型, 参数_所有左棋子当前位置, 参数_所有右棋子当前位置)].左方左棋子大小)
赋值 (周围情况.右方左棋子大小,  [右面有无棋子 (参数_棋子图形按钮, 参数_棋子类型, 参数_所有左棋子当前位置, 参数_所有右棋子当前位置)].右方左棋子大小)

赋值 (周围情况.上方右棋子大小,  [上面有无棋子 (参数_棋子图形按钮, 参数_棋子类型, 参数_所有左棋子当前位置, 参数_所有右棋子当前位置)].上方右棋子大小)
赋值 (周围情况.下方右棋子大小,  [下面有无棋子 (参数_棋子图形按钮, 参数_棋子类型, 参数_所有左棋子当前位置, 参数_所有右棋子当前位置)].下方右棋子大小)
赋值 (周围情况.左方右棋子大小,  [左面有无棋子 (参数_棋子图形按钮, 参数_棋子类型, 参数_所有左棋子当前位置, 参数_所有右棋子当前位置)].左方右棋子大小)
赋值 (周围情况.右方右棋子大小,  [右面有无棋子 (参数_棋子图形按钮, 参数_棋子类型, 参数_所有左棋子当前位置, 参数_所有右棋子当前位置)].右方右棋子大小)
返回 (周围情况)

.子程序 上面有无棋子, 棋子周围情况, , 
.参数 参数_棋子图形按钮, 图形按钮, , 
.参数 参数_棋子类型, 整数型, , 1：是左棋，2：是右棋
.参数 参数_所有左棋子当前位置, 位置, 数组, 
.参数 参数_所有右棋子当前位置, 位置, 数组, 

.局部变量 计次变量, 整数型, , , 
.局部变量 数组个数, 整数型, , , 
.局部变量 棋子周围情况, 棋子周围情况, , , 
.局部变量 右棋数组个数, 整数型, , , 
.局部变量 是右棋子, 逻辑型, , , 
.局部变量 是左棋子, 逻辑型, , , 
.局部变量 左棋数组个数, 整数型, , , 
.局部变量 上方左棋子大小, 整数型, , , 
.局部变量 上方右棋子大小, 整数型, , , 
.局部变量 上方棋子类型, 文本型, , , 

赋值 (左棋数组个数, 取数组成员数 (参数_所有左棋子当前位置))

赋值 (右棋数组个数, 取数组成员数 (参数_所有右棋子当前位置))

连续赋值 (假, 是左棋子, 是右棋子)


.计次循环首 (左棋数组个数, 计次变量)
    .判断开始 (并且 (等于 (参数_所有左棋子当前位置 [计次变量], 纵坐标, 相减 (参数_棋子图形按钮.顶边, 相加 (#棋子高度, 相乘 (2, #向上修补量)))), 等于 (参数_棋子图形按钮.左边, 参数_所有左棋子当前位置 [计次变量], 横坐标)))
        
        赋值 (是左棋子, 真)
        
        赋值 (上方左棋子大小, 多项选择 (计次变量, 1, 2, 3, 4, 5, 6, 7, 8, 9))
         ' 9-太公 8→龙 7→虎 6→牛 5→马 4→狗 3→鸡 2→蛇 1→鼠,这是实际要进行比大小的次序
        赋值 (上方棋子类型, 多项选择 (上方左棋子大小, “鼠”, “蛇”, “鸡”, “狗”, “马”, “牛”, “虎”, “龙”, “太公”))
        
        赋值 (棋子周围情况.上方左棋子大小, 上方左棋子大小)
        
        赋值 (棋子周围情况.上方棋子位置.横坐标, 参数_所有左棋子当前位置 [计次变量], 横坐标)
        赋值 (棋子周围情况.上方棋子位置.纵坐标, 参数_所有左棋子当前位置 [计次变量], 纵坐标)
         ' 调试输出 (“参数_棋子图形按钮.顶边:” ＋ 到文本 (参数_棋子图形按钮.顶边) ＋ “,参数_棋子图形按钮.左边:” ＋ 到文本 (参数_棋子图形按钮.左边))
         ' 调试输出 (到文本 (参数_所有左棋子当前位置 [计次变量].纵坐标) ＋ “,” ＋ 到文本 (参数_所有左棋子当前位置 [计次变量].横坐标))
        
    .默认
        
    .判断结束
    
.计次循环尾 ()

.计次循环首 (右棋数组个数, 计次变量)
    .判断开始 (并且 (等于 (参数_所有右棋子当前位置 [计次变量], 纵坐标, 相减 (参数_棋子图形按钮.顶边, 相加 (#棋子高度, 相乘 (2, #向上修补量)))), 等于 (参数_棋子图形按钮.左边, 参数_所有右棋子当前位置 [计次变量], 横坐标)))
        赋值 (是右棋子, 真)
        赋值 (上方右棋子大小, 多项选择 (计次变量, 1, 2, 3, 4, 5, 6, 7, 8, 9))
        赋值 (上方棋子类型, 多项选择 (上方右棋子大小, “鼠”, “蛇”, “鸡”, “狗”, “马”, “牛”, “虎”, “龙”, “太公”))
        赋值 (棋子周围情况.上方右棋子大小, 上方右棋子大小)
        赋值 (棋子周围情况.上方棋子位置.横坐标, 参数_所有右棋子当前位置 [计次变量], 横坐标)
        赋值 (棋子周围情况.上方棋子位置.纵坐标, 参数_所有右棋子当前位置 [计次变量], 纵坐标)
        
         ' 调试输出 (“参数_棋子图形按钮.顶边:” ＋ 到文本 (参数_棋子图形按钮.顶边) ＋ “,参数_棋子图形按钮.左边:” ＋ 到文本 (参数_棋子图形按钮.左边))
         ' 调试输出 (到文本 (参数_所有右棋子当前位置 [计次变量].纵坐标) ＋ “,” ＋ 到文本 (参数_所有右棋子当前位置 [计次变量].横坐标))
        
    .默认
         ' 本源码来自易语言资源网(www.wodesoft.com)
    .判断结束
    
.计次循环尾 ()

 ' _启动窗口.编辑框_聊天内容.内容 ＝ “”

赋值 (棋子周围情况.上方有无棋子, 或者 (是左棋子, 是右棋子)) ' 只要在所有当前左棋子位置中或所有当前右棋子位置中找到一个就说明是有棋子的
 ' 调试输出 (到数值 (棋子周围情况.上方有无棋子))
.如果真 (棋子周围情况.上方有无棋子)
    赋值 (棋子周围情况.上方棋子类型, 上方棋子类型)
    
    
    .判断开始 (等于 (参数_棋子类型, 1)) ' 当要移动的棋子是为左棋子时
        .判断开始 (等于 (是右棋子, 真)) ' 判断上方的棋子是左棋子（已方）还是右棋子（敌方）
            赋值 (棋子周围情况.上方是敌是友, 真)
        .默认
            赋值 (棋子周围情况.上方是敌是友, 假)
        .判断结束
        
    .默认
         ' 当要移动的棋子是为右棋子时  ' 判断上方的棋子是左棋子（敌方）还是右棋子（已方）
        .判断开始 (等于 (是左棋子, 真))
            赋值 (棋子周围情况.上方是敌是友, 真)
        .默认
            赋值 (棋子周围情况.上方是敌是友, 假)
        .判断结束
        
    .判断结束
    
.如果真结束

 ' _启动窗口.编辑框_聊天内容.加入文本 (选择 (棋子周围情况.上方有无棋子, 选择 (棋子周围情况.上方是敌是友, “上方是敌人”, “上方自己人”), “上方没有棋子”) ＋ 上方棋子类型 ＋ #换行符)

返回 (棋子周围情况)


.子程序 下面有无棋子, 棋子周围情况, , 
.参数 参数_棋子图形按钮, 图形按钮, , 
.参数 参数_棋子类型, 整数型, , 1：是左棋，2：是右棋
.参数 参数_所有左棋子当前位置, 位置, 数组, 
.参数 参数_所有右棋子当前位置, 位置, 数组, 

.局部变量 计次变量, 整数型, , , 
.局部变量 数组个数, 整数型, , , 
.局部变量 棋子周围情况, 棋子周围情况, , , 
.局部变量 右棋数组个数, 整数型, , , 
.局部变量 是右棋子, 逻辑型, , , 
.局部变量 是左棋子, 逻辑型, , , 
.局部变量 左棋数组个数, 整数型, , , 
.局部变量 下方左棋子大小, 整数型, , , 
.局部变量 下方右棋子大小, 整数型, , , 
.局部变量 下方棋子类型, 文本型, , , 

赋值 (左棋数组个数, 取数组成员数 (参数_所有左棋子当前位置))

赋值 (右棋数组个数, 取数组成员数 (参数_所有右棋子当前位置))

连续赋值 (假, 是左棋子, 是右棋子)


.计次循环首 (左棋数组个数, 计次变量)
    .判断开始 (并且 (等于 (参数_所有左棋子当前位置 [计次变量], 纵坐标, 相加 (参数_棋子图形按钮.顶边, #棋子高度, 相乘 (2, #向上修补量))), 等于 (参数_棋子图形按钮.左边, 参数_所有左棋子当前位置 [计次变量], 横坐标)))
        赋值 (是左棋子, 真)
        
        赋值 (下方左棋子大小, 多项选择 (计次变量, 1, 2, 3, 4, 5, 6, 7, 8, 9))
         ' 9-太公 8→龙 7→虎 6→牛 5→马 4→狗 3→鸡 2→蛇 1→鼠,这是实际要进行比大小的次序
        赋值 (下方棋子类型, 多项选择 (下方左棋子大小, “鼠”, “蛇”, “鸡”, “狗”, “马”, “牛”, “虎”, “龙”, “太公”))
        
        赋值 (棋子周围情况.下方左棋子大小, 下方左棋子大小)
        
        赋值 (棋子周围情况.下方棋子位置.横坐标, 参数_所有左棋子当前位置 [计次变量], 横坐标)
        赋值 (棋子周围情况.下方棋子位置.纵坐标, 参数_所有左棋子当前位置 [计次变量], 纵坐标)
         ' 调试输出 (“参数_棋子图形按钮.顶边:” ＋ 到文本 (参数_棋子图形按钮.顶边) ＋ “,参数_棋子图形按钮.左边:” ＋ 到文本 (参数_棋子图形按钮.左边))
         ' 调试输出 (到文本 (参数_所有左棋子当前位置 [计次变量].纵坐标) ＋ “,” ＋ 到文本 (参数_所有左棋子当前位置 [计次变量].横坐标))
        
    .默认
        
    .判断结束
    
.计次循环尾 ()

.计次循环首 (右棋数组个数, 计次变量)
    .判断开始 (并且 (等于 (参数_所有右棋子当前位置 [计次变量], 纵坐标, 相加 (参数_棋子图形按钮.顶边, #棋子高度, 相乘 (2, #向上修补量))), 等于 (参数_棋子图形按钮.左边, 参数_所有右棋子当前位置 [计次变量], 横坐标)))
        赋值 (是右棋子, 真)
        赋值 (下方右棋子大小, 多项选择 (计次变量, 1, 2, 3, 4, 5, 6, 7, 8, 9))
        赋值 (下方棋子类型, 多项选择 (下方右棋子大小, “鼠”, “蛇”, “鸡”, “狗”, “马”, “牛”, “虎”, “龙”, “太公”))
        赋值 (棋子周围情况.下方右棋子大小, 下方右棋子大小)
        赋值 (棋子周围情况.下方棋子位置.横坐标, 参数_所有右棋子当前位置 [计次变量], 横坐标)
        赋值 (棋子周围情况.下方棋子位置.纵坐标, 参数_所有右棋子当前位置 [计次变量], 纵坐标)
        
         ' 调试输出 (“参数_棋子图形按钮.顶边:” ＋ 到文本 (参数_棋子图形按钮.顶边) ＋ “,参数_棋子图形按钮.左边:” ＋ 到文本 (参数_棋子图形按钮.左边))
         ' 调试输出 (到文本 (参数_所有右棋子当前位置 [计次变量].纵坐标) ＋ “,” ＋ 到文本 (参数_所有右棋子当前位置 [计次变量].横坐标))
        
    .默认
        
    .判断结束
    
.计次循环尾 ()

赋值 (棋子周围情况.下方有无棋子, 或者 (是左棋子, 是右棋子)) ' 只要在所有当前左棋子位置中或所有当前右棋子位置中找到一个就说明是有棋子的
 ' 调试输出 (到数值 (棋子周围情况.上方有无棋子))
.如果真 (棋子周围情况.下方有无棋子)
    
    赋值 (棋子周围情况.下方棋子类型, 下方棋子类型)
    
    .判断开始 (等于 (参数_棋子类型, 1)) ' 当要移动的棋子是为左棋子时
        .判断开始 (等于 (是右棋子, 真)) ' 判断下方的棋子是左棋子（已方）还是右棋子（敌方）
            赋值 (棋子周围情况.下方是敌是友, 真)
        .默认
            赋值 (棋子周围情况.下方是敌是友, 假)
        .判断结束
        
    .默认
         ' 当要移动的棋子是为右棋子时  ' 判断下方的棋子是左棋子（敌方）还是右棋子（已方）
        .判断开始 (等于 (是左棋子, 真))
            赋值 (棋子周围情况.下方是敌是友, 真)
        .默认
            赋值 (棋子周围情况.下方是敌是友, 假)
        .判断结束
        
    .判断结束
    
.如果真结束

 ' 调试输出 (“棋子周围情况.下方左棋子大小” ＋ 到文本 (棋子周围情况.下方左棋子大小))

 ' _启动窗口.编辑框_聊天内容.内容 ＝ “”
 ' _启动窗口.编辑框_聊天内容.加入文本 (选择 (棋子周围情况.下方有无棋子, 选择 (棋子周围情况.下方是敌是友, “下方是敌人”, “下方自己人”), “下方没有棋子”) ＋ 下方棋子类型 ＋ #换行符)

返回 (棋子周围情况)


.子程序 左面有无棋子, 棋子周围情况, , 
.参数 参数_棋子图形按钮, 图形按钮, , 
.参数 参数_棋子类型, 整数型, , 1：是左棋，2：是右棋
.参数 参数_所有左棋子当前位置, 位置, 数组, 
.参数 参数_所有右棋子当前位置, 位置, 数组, 

.局部变量 计次变量, 整数型, , , 
.局部变量 数组个数, 整数型, , , 
.局部变量 棋子周围情况, 棋子周围情况, , , 
.局部变量 右棋数组个数, 整数型, , , 
.局部变量 是右棋子, 逻辑型, , , 
.局部变量 是左棋子, 逻辑型, , , 
.局部变量 左棋数组个数, 整数型, , , 
.局部变量 左方棋子大小, 整数型, , , 
.局部变量 左方棋子类型, 文本型, , , 

赋值 (左棋数组个数, 取数组成员数 (参数_所有左棋子当前位置))

赋值 (右棋数组个数, 取数组成员数 (参数_所有右棋子当前位置))

连续赋值 (假, 是左棋子, 是右棋子)

.计次循环首 (左棋数组个数, 计次变量)
    .判断开始 (并且 (等于 (参数_所有左棋子当前位置 [计次变量], 纵坐标, 参数_棋子图形按钮.顶边), 等于 (参数_所有左棋子当前位置 [计次变量], 横坐标, 相减 (参数_棋子图形按钮.左边, 相加 (#棋子宽度, 相乘 (2, #向左修补量))))))
        赋值 (左方棋子大小, 多项选择 (计次变量, 1, 2, 3, 4, 5, 6, 7, 8, 9))
         ' 9-太公 8→龙 7→虎 6→牛 5→马 4→狗 3→鸡 2→蛇 1→鼠,这是实际要进行比大小的次序
        赋值 (左方棋子类型, 多项选择 (左方棋子大小, “鼠”, “蛇”, “鸡”, “狗”, “马”, “牛”, “虎”, “龙”, “太公”))
        赋值 (棋子周围情况.左方左棋子大小, 左方棋子大小)
        赋值 (是左棋子, 真)
         ' 调试输出 (“参数_棋子图形按钮.顶边:” ＋ 到文本 (参数_棋子图形按钮.顶边) ＋ “,参数_棋子图形按钮.左边:” ＋ 到文本 (参数_棋子图形按钮.左边))
         ' 调试输出 (到文本 (参数_所有左棋子当前位置 [计次变量].纵坐标) ＋ “,” ＋ 到文本 (参数_所有左棋子当前位置 [计次变量].横坐标))
        
    .默认
        
    .判断结束
    
.计次循环尾 ()

.计次循环首 (右棋数组个数, 计次变量)
    .判断开始 (并且 (等于 (参数_所有右棋子当前位置 [计次变量], 纵坐标, 参数_棋子图形按钮.顶边), 等于 (参数_所有右棋子当前位置 [计次变量], 横坐标, 相减 (参数_棋子图形按钮.左边, 相加 (#棋子宽度, 相乘 (2, #向左修补量))))))
        赋值 (是右棋子, 真)
        赋值 (左方棋子大小, 多项选择 (计次变量, 1, 2, 3, 4, 5, 6, 7, 8, 9))
        赋值 (左方棋子类型, 多项选择 (左方棋子大小, “鼠”, “蛇”, “鸡”, “狗”, “马”, “牛”, “虎”, “龙”, “太公”))
        赋值 (棋子周围情况.左方右棋子大小, 左方棋子大小)
         ' 调试输出 (“参数_棋子图形按钮.顶边:” ＋ 到文本 (参数_棋子图形按钮.顶边) ＋ “,参数_棋子图形按钮.左边:” ＋ 到文本 (参数_棋子图形按钮.左边))
         ' 调试输出 (到文本 (参数_所有右棋子当前位置 [计次变量].纵坐标) ＋ “,” ＋ 到文本 (参数_所有右棋子当前位置 [计次变量].横坐标))
        
    .默认
        
    .判断结束
    
.计次循环尾 ()

.判断开始 (并且 (等于 (是左棋子, 真), 大于 (参数_所有左棋子当前位置 [左方棋子大小], 纵坐标, 0), 大于 (参数_所有左棋子当前位置 [左方棋子大小], 纵坐标, 0)))
    赋值 (是左棋子, 真)
.默认
    
.判断结束

.判断开始 (并且 (等于 (是右棋子, 真), 大于 (参数_所有右棋子当前位置 [左方棋子大小], 纵坐标, 0), 大于 (参数_所有右棋子当前位置 [左方棋子大小], 纵坐标, 0)))
    赋值 (是右棋子, 真)
.默认
     ' 本源码来自易语言资源网(www.wodesoft.com)
.判断结束

赋值 (棋子周围情况.左方有无棋子, 或者 (是左棋子, 是右棋子)) ' 只要在所有当前左棋子位置中或所有当前右棋子位置中找到一个就说明是有棋子的
 ' 调试输出 (到数值 (棋子周围情况.上方有无棋子))
.如果真 (棋子周围情况.左方有无棋子)
    
    赋值 (棋子周围情况.左方棋子类型, 左方棋子类型)
    
    .判断开始 (等于 (参数_棋子类型, 1)) ' 当要移动的棋子是为左棋子时
        .判断开始 (等于 (是右棋子, 真)) ' 判断左方的棋子是左棋子（已方）还是右棋子（敌方）
            赋值 (棋子周围情况.左方是敌是友, 真)
        .默认
            赋值 (棋子周围情况.左方是敌是友, 假)
        .判断结束
        
    .默认
         ' 当要移动的棋子是为右棋子时  ' 判断左方的棋子是左棋子（敌方）还是右棋子（已方）
        .判断开始 (等于 (是左棋子, 真))
            赋值 (棋子周围情况.左方是敌是友, 真)
        .默认
            赋值 (棋子周围情况.左方是敌是友, 假)
        .判断结束
        
    .判断结束
    
.如果真结束

 ' 调试输出 (“左方左棋子大小:” ＋ 到文本 (棋子周围情况.左方左棋子大小))

 ' _启动窗口.编辑框_聊天内容.内容 ＝ “”
 ' _启动窗口.编辑框_聊天内容.加入文本 (选择 (棋子周围情况.左方有无棋子, 选择 (棋子周围情况.左方是敌是友, “左方是敌人”, “左方自己人”), “左方没有棋子”) ＋ 左方棋子类型 ＋ #换行符)

返回 (棋子周围情况)


.子程序 右面有无棋子, 棋子周围情况, , 
.参数 参数_棋子图形按钮, 图形按钮, , 
.参数 参数_棋子类型, 整数型, , 1：是左棋，2：是右棋
.参数 参数_所有左棋子当前位置, 位置, 数组, 
.参数 参数_所有右棋子当前位置, 位置, 数组, 

.局部变量 计次变量, 整数型, , , 
.局部变量 数组个数, 整数型, , , 
.局部变量 棋子周围情况, 棋子周围情况, , , 
.局部变量 右棋数组个数, 整数型, , , 
.局部变量 是右棋子, 逻辑型, , , 
.局部变量 是左棋子, 逻辑型, , , 
.局部变量 左棋数组个数, 整数型, , , 
.局部变量 右方棋子大小, 整数型, , , 
.局部变量 右方棋子类型, 文本型, , , 

赋值 (左棋数组个数, 取数组成员数 (参数_所有左棋子当前位置))

赋值 (右棋数组个数, 取数组成员数 (参数_所有右棋子当前位置))

连续赋值 (假, 是左棋子, 是右棋子)

.计次循环首 (左棋数组个数, 计次变量)
    .判断开始 (并且 (等于 (参数_所有左棋子当前位置 [计次变量], 纵坐标, 参数_棋子图形按钮.顶边), 等于 (参数_所有左棋子当前位置 [计次变量], 横坐标, 相加 (参数_棋子图形按钮.左边, #棋子宽度, 相乘 (2, #向左修补量)))))
        
        赋值 (右方棋子大小, 多项选择 (计次变量, 1, 2, 3, 4, 5, 6, 7, 8, 9))
         ' 9-太公 8→龙 7→虎 6→牛 5→马 4→狗 3→鸡 2→蛇 1→鼠,这是实际要进行比大小的次序
        赋值 (右方棋子类型, 多项选择 (右方棋子大小, “鼠”, “蛇”, “鸡”, “狗”, “马”, “牛”, “虎”, “龙”, “太公”))
        赋值 (棋子周围情况.右方左棋子大小, 右方棋子大小)
        赋值 (是左棋子, 真)
    .默认
        
    .判断结束
    
.计次循环尾 ()

.计次循环首 (右棋数组个数, 计次变量)
    .判断开始 (并且 (等于 (参数_所有右棋子当前位置 [计次变量], 纵坐标, 参数_棋子图形按钮.顶边), 等于 (参数_所有右棋子当前位置 [计次变量], 横坐标, 相加 (参数_棋子图形按钮.左边, #棋子宽度, 相乘 (2, #向左修补量)))))
        
        赋值 (是右棋子, 真)
        赋值 (右方棋子大小, 多项选择 (计次变量, 1, 2, 3, 4, 5, 6, 7, 8, 9))
        赋值 (右方棋子类型, 多项选择 (右方棋子大小, “鼠”, “蛇”, “鸡”, “狗”, “马”, “牛”, “虎”, “龙”, “太公”))
        赋值 (棋子周围情况.右方右棋子大小, 右方棋子大小)
    .默认
        
    .判断结束
    
.计次循环尾 ()



赋值 (棋子周围情况.右方有无棋子, 或者 (是左棋子, 是右棋子)) ' 只要在所有当前左棋子位置中或所有当前右棋子位置中找到一个就说明是有棋子的

.如果真 (棋子周围情况.右方有无棋子)
    赋值 (棋子周围情况.右方棋子类型, 右方棋子类型)
    
    .判断开始 (等于 (参数_棋子类型, 1)) ' 当要移动的棋子是为左棋子时
        .判断开始 (等于 (是右棋子, 真)) ' 判断右方的棋子是左棋子（已方）还是右棋子（敌方）
            赋值 (棋子周围情况.右方是敌是友, 真)
        .默认
            赋值 (棋子周围情况.右方是敌是友, 假)
        .判断结束
        
    .默认
         ' 当要移动的棋子是为右棋子时  ' 判断右方的棋子是左棋子（敌方）还是右棋子（已方）
        .判断开始 (等于 (是左棋子, 真))
            赋值 (棋子周围情况.右方是敌是友, 真)
        .默认
            赋值 (棋子周围情况.右方是敌是友, 假)
        .判断结束
        
    .判断结束
    
.如果真结束


返回 (棋子周围情况)


.子程序 初始化左右棋位置, 空白型, , 如果不载入指定棋局则系统载入默认位置
.参数 参数_棋局文件名, 文本型, 可空, 如果为空则载入系统载入默认位置，否则载入指定棋局文件中的数据位置

.局部变量 全部棋子位置, 位置, , "18", 

.判断开始 (等于 (删首尾空 (参数_棋局文件名), “”))
    赋值 (全部棋子位置 [1].横坐标, 3) ' 图形按钮_牛_左
    赋值 (全部棋子位置 [1].纵坐标, 3)
    
    赋值 (全部棋子位置 [2].横坐标, 3) ' 图形按钮_太公_左
    赋值 (全部棋子位置 [2].纵坐标, 204)
    
    赋值 (全部棋子位置 [3].横坐标, 3) ' 图形按钮_虎_左
    赋值 (全部棋子位置 [3].纵坐标, 405)
     ' -----------------------------------------
    赋值 (全部棋子位置 [4].横坐标, 70) ' 图形按钮_鸡_左
    赋值 (全部棋子位置 [4].纵坐标, 70)
    
    赋值 (全部棋子位置 [5].横坐标, 70) ' 图形按钮_蛇_左
    赋值 (全部棋子位置 [5].纵坐标, 338)
     ' -----------------------------------------
    赋值 (全部棋子位置 [6].横坐标, 137) ' 图形按钮_龙_左
    赋值 (全部棋子位置 [6].纵坐标, 3)
    
    赋值 (全部棋子位置 [7].横坐标, 137) ' 图形按钮_狗_左
    赋值 (全部棋子位置 [7].纵坐标, 137)
    
    赋值 (全部棋子位置 [8].横坐标, 137) ' 图形按钮_马_左
    赋值 (全部棋子位置 [8].纵坐标, 271)
    
    赋值 (全部棋子位置 [9].横坐标, 137) ' 图形按钮_鼠_左
    赋值 (全部棋子位置 [9].纵坐标, 405)
     ' -----------------------------------------------
    赋值 (全部棋子位置 [10].横坐标, 405) ' 图形按钮_龙_右
    赋值 (全部棋子位置 [10].纵坐标, 3)
    
    赋值 (全部棋子位置 [11].横坐标, 405) ' 图形按钮_狗_右
    赋值 (全部棋子位置 [11].纵坐标, 137)
    
    赋值 (全部棋子位置 [12].横坐标, 405) ' 图形按钮_马_右
    赋值 (全部棋子位置 [12].纵坐标, 271)
    
    赋值 (全部棋子位置 [13].横坐标, 405) ' 图形按钮_鼠_右
    赋值 (全部棋子位置 [13].纵坐标, 405)
     ' -----------------------------------------------
    赋值 (全部棋子位置 [14].横坐标, 472) ' 图形按钮_鸡_右
    赋值 (全部棋子位置 [14].纵坐标, 70)
    
    赋值 (全部棋子位置 [15].横坐标, 472) ' 图形按钮_蛇_右
    赋值 (全部棋子位置 [15].纵坐标, 338)
     ' -----------------------------------------------
    赋值 (全部棋子位置 [16].横坐标, 539) ' 图形按钮_牛_右
    赋值 (全部棋子位置 [16].纵坐标, 3)
    
    赋值 (全部棋子位置 [17].横坐标, 539) ' 图形按钮_太公_右
    赋值 (全部棋子位置 [17].纵坐标, 204)
    
    赋值 (全部棋子位置 [18].横坐标, 539) ' 图形按钮_虎_右
    赋值 (全部棋子位置 [18].纵坐标, 405)
    
.默认
     ' 本源码来自易语言资源网(www.wodesoft.com)
.判断结束

赋值 (_启动窗口..左边, 全部棋子位置 [1].横坐标)
赋值 (_启动窗口..顶边, 全部棋子位置 [1].纵坐标)
.判断开始 (大于 (_启动窗口..左边, 0)) ' 如果坐标>0则显示不然不显示
    赋值 (_启动窗口..可视, 真)
.默认
    赋值 (_启动窗口..可视, 假)
.判断结束

赋值 (_启动窗口..左边, 全部棋子位置 [2].横坐标)
赋值 (_启动窗口..顶边, 全部棋子位置 [2].纵坐标)
.判断开始 (大于 (_启动窗口..左边, 0))
    赋值 (_启动窗口..可视, 真)
.默认
    赋值 (_启动窗口..可视, 假)
.判断结束

赋值 (_启动窗口..左边, 全部棋子位置 [3].横坐标)
赋值 (_启动窗口..顶边, 全部棋子位置 [3].纵坐标)
.判断开始 (大于 (_启动窗口..左边, 0))
    赋值 (_启动窗口..可视, 真)
.默认
    赋值 (_启动窗口..可视, 假)
.判断结束

 ' '''''
赋值 (_启动窗口..左边, 全部棋子位置 [4].横坐标)
赋值 (_启动窗口..顶边, 全部棋子位置 [4].纵坐标)
.判断开始 (大于 (_启动窗口..左边, 0))
    赋值 (_启动窗口..可视, 真)
.默认
    赋值 (_启动窗口..可视, 假)
.判断结束

赋值 (_启动窗口..左边, 全部棋子位置 [5].横坐标)
赋值 (_启动窗口..顶边, 全部棋子位置 [5].纵坐标)
.判断开始 (大于 (_启动窗口..左边, 0))
    赋值 (_启动窗口..可视, 真)
.默认
    赋值 (_启动窗口..可视, 假)
.判断结束

赋值 (_启动窗口..左边, 全部棋子位置 [6].横坐标)
赋值 (_启动窗口..顶边, 全部棋子位置 [6].纵坐标)
.判断开始 (大于 (_启动窗口..左边, 0))
    赋值 (_启动窗口..可视, 真)
.默认
    赋值 (_启动窗口..可视, 假)
.判断结束

赋值 (_启动窗口..左边, 全部棋子位置 [7].横坐标)
赋值 (_启动窗口..顶边, 全部棋子位置 [7].纵坐标)
.判断开始 (大于 (_启动窗口..左边, 0))
    赋值 (_启动窗口..可视, 真)
.默认
    赋值 (_启动窗口..可视, 假)
.判断结束

赋值 (_启动窗口..左边, 全部棋子位置 [8].横坐标)
赋值 (_启动窗口..顶边, 全部棋子位置 [8].纵坐标)
.判断开始 (大于 (_启动窗口..左边, 0))
    赋值 (_启动窗口..可视, 真)
.默认
    赋值 (_启动窗口..可视, 假)
.判断结束

赋值 (_启动窗口..左边, 全部棋子位置 [9].横坐标)
赋值 (_启动窗口..顶边, 全部棋子位置 [9].纵坐标)
.判断开始 (大于 (_启动窗口..左边, 0))
    赋值 (_启动窗口..可视, 真)
.默认
    赋值 (_启动窗口..可视, 假)
.判断结束
 ' ------------------------------------------------------------------

赋值 (_启动窗口..左边, 全部棋子位置 [10].横坐标)
赋值 (_启动窗口..顶边, 全部棋子位置 [10].纵坐标)
.判断开始 (大于 (_启动窗口..左边, 0))
    赋值 (_启动窗口..可视, 真)
.默认
    赋值 (_启动窗口..可视, 假)
.判断结束

赋值 (_启动窗口..左边, 全部棋子位置 [11].横坐标)
赋值 (_启动窗口..顶边, 全部棋子位置 [11].纵坐标)
.判断开始 (大于 (_启动窗口..左边, 0))
    赋值 (_启动窗口..可视, 真)
.默认
    赋值 (_启动窗口..可视, 假)
.判断结束

赋值 (_启动窗口..左边, 全部棋子位置 [12].横坐标)
赋值 (_启动窗口..顶边, 全部棋子位置 [12].纵坐标)
.判断开始 (大于 (_启动窗口..左边, 0))
    赋值 (_启动窗口..可视, 真)
.默认
    赋值 (_启动窗口..可视, 假)
.判断结束

赋值 (_启动窗口..左边, 全部棋子位置 [13].横坐标)
赋值 (_启动窗口..顶边, 全部棋子位置 [13].纵坐标)
.判断开始 (大于 (_启动窗口..左边, 0))
    赋值 (_启动窗口..可视, 真)
.默认
    赋值 (_启动窗口..可视, 假)
.判断结束

赋值 (_启动窗口..左边, 全部棋子位置 [14].横坐标)
赋值 (_启动窗口..顶边, 全部棋子位置 [14].纵坐标)
.判断开始 (大于 (_启动窗口..左边, 0))
    赋值 (_启动窗口..可视, 真)
.默认
    赋值 (_启动窗口..可视, 假)
.判断结束

赋值 (_启动窗口..左边, 全部棋子位置 [15].横坐标)
赋值 (_启动窗口..顶边, 全部棋子位置 [15].纵坐标)
.判断开始 (大于 (_启动窗口..左边, 0))
    赋值 (_启动窗口..可视, 真)
.默认
    赋值 (_启动窗口..可视, 假)
.判断结束

赋值 (_启动窗口..左边, 全部棋子位置 [16].横坐标)
赋值 (_启动窗口..顶边, 全部棋子位置 [16].纵坐标)
.判断开始 (大于 (_启动窗口..左边, 0))
    赋值 (_启动窗口..可视, 真)
.默认
    赋值 (_启动窗口..可视, 假)
.判断结束

赋值 (_启动窗口..左边, 全部棋子位置 [17].横坐标)
赋值 (_启动窗口..顶边, 全部棋子位置 [17].纵坐标)
.判断开始 (大于 (_启动窗口..左边, 0))
    赋值 (_启动窗口..可视, 真)
.默认
    赋值 (_启动窗口..可视, 假)
.判断结束

赋值 (_启动窗口..左边, 全部棋子位置 [18].横坐标)
赋值 (_启动窗口..顶边, 全部棋子位置 [18].纵坐标)
.判断开始 (大于 (_启动窗口..左边, 0))
    赋值 (_启动窗口..可视, 真)
.默认
    赋值 (_启动窗口..可视, 假)
.判断结束
' 本源码来自易语言资源网(www.wodesoft.com)

.子程序 再来一盘, 空白型, , 
初始化左右棋位置 ()
初始化左棋子 ()
初始化右棋子 ()
分配棋子左右手 ()


.子程序 分配棋子左右手, 空白型, , 

.判断开始 (网络版)
    
     ' 通过服务器随机生成左右手，并发送到客户端
    
.默认
    
     ' 人机版时，
    置随机数种子 ()
    赋值 (你的左右手, 多项选择 (取随机数 (1, 2), 真, 假))
    信息框 (选择 (你的左右手, “你的棋子在左边”, “你的棋子在右边”), 64, #提示文字)
    赋值 (机器左右手, 取反 (你的左右手))
     ' 你的左右手 ＝ 假
.判断结束


.程序集 删除右棋子程序集, , , 

.子程序 删除右棋子太公, 空白型, , 
赋值 (_启动窗口..可视, 假)
赋值 (所有右棋的当前位置 [9].横坐标, 0)
赋值 (所有右棋的当前位置 [9].纵坐标, 0)


.子程序 删除右棋子龙, 空白型, , 
赋值 (_启动窗口..可视, 假)
赋值 (所有右棋的当前位置 [8].横坐标, 0)
赋值 (所有右棋的当前位置 [8].纵坐标, 0)


.子程序 删除右棋子虎, 空白型, , 
赋值 (_启动窗口..可视, 假)
赋值 (所有右棋的当前位置 [7].横坐标, 0)
赋值 (所有右棋的当前位置 [7].纵坐标, 0)
 ' 本源码来自易语言资源网(www.wodesoft.com)

.子程序 删除右棋子牛, 空白型, , 
赋值 (_启动窗口..可视, 假)
赋值 (所有右棋的当前位置 [6].横坐标, 0)
赋值 (所有右棋的当前位置 [6].纵坐标, 0)


.子程序 删除右棋子马, 空白型, , 
赋值 (_启动窗口..可视, 假)
赋值 (所有右棋的当前位置 [5].横坐标, 0)
赋值 (所有右棋的当前位置 [5].纵坐标, 0)


.子程序 删除右棋子狗, 空白型, , 
赋值 (_启动窗口..可视, 假)
赋值 (所有右棋的当前位置 [4].横坐标, 0)
赋值 (所有右棋的当前位置 [4].纵坐标, 0)


.子程序 删除右棋子鸡, 空白型, , 
赋值 (_启动窗口..可视, 假)
赋值 (所有右棋的当前位置 [3].横坐标, 0)
赋值 (所有右棋的当前位置 [3].纵坐标, 0)


.子程序 删除右棋子蛇, 空白型, , 
赋值 (_启动窗口..可视, 假)
赋值 (所有右棋的当前位置 [2].横坐标, 0)
赋值 (所有右棋的当前位置 [2].纵坐标, 0)
' 本源码来自易语言资源网(www.wodesoft.com)

.子程序 删除右棋子鼠, 空白型, , 
赋值 (_启动窗口..可视, 假)
赋值 (所有右棋的当前位置 [1].横坐标, 0)
赋值 (所有右棋的当前位置 [1].纵坐标, 0)


.程序集 读文本程序集, , , 

.子程序 读文本, 空白型, , 
赋值 (全局鼠文本, 读鼠文本 ())
赋值 (全局蛇文本, 读蛇文本 ())
赋值 (全局鸡文本, 读鸡文本 ())
赋值 (全局狗文本, 读狗文本 ())
赋值 (全局马文本, 读马文本 ())
赋值 (全局牛文本, 读牛文本 ())
赋值 (全局虎文本, 读虎文本 ())
赋值 (全局龙文本, 读龙文本 ())
赋值 (全局太公文本, 读太公文本 ())



.子程序 读鼠文本, 对话文本, , 
.局部变量 返回文本, 对话文本, , , 


赋值 (文本配置文件, 相加 (当前运行路径, “\文本\动物对话.txt”))
赋值 (返回文本.对牛说, 读配置项 (文本配置文件, “鼠文本”, “对牛说”, “肥牛，你该减肥了吧，别吃我！”))
赋值 (返回文本.对狗说, 读配置项 (文本配置文件, “鼠文本”, “对狗说”, “狗拿耗子多管闲事！龙龙会给我报仇的！”))
赋值 (返回文本.对鸡说, 读配置项 (文本配置文件, “鼠文本”, “对鸡说”, “鸡大哥！别吃我，我不是小虫子。啊啊”))
赋值 (返回文本.对马说, 读配置项 (文本配置文件, “鼠文本”, “对马说”, “吃素美容，别吃我啊！”))
赋值 (返回文本.对蛇说, 读配置项 (文本配置文件, “鼠文本”, “对蛇说”, “蛇老大怎么又是你啊！呜呜！”))
赋值 (返回文本.对虎说, 读配置项 (文本配置文件, “鼠文本”, “对虎说”, “虎大王，你怎么可以以大欺小啊！呜呜，龙龙会给我报仇的！！！”))
赋值 (返回文本.对鼠说, 读配置项 (文本配置文件, “鼠文本”, “对鼠说”, “本是同根生，相煎何太急！”))
赋值 (返回文本.对龙说, 读配置项 (文本配置文件, “鼠文本”, “对龙说”, “别人怕你，我可不怕你！”))
赋值 (返回文本.对自己说, 读配置项 (文本配置文件, “鼠文本”, “对自己说”, “吱吱，小个子，到处走！”))
返回 (返回文本)


.子程序 读蛇文本, 对话文本, , 
.局部变量 返回文本, 对话文本, , , 


赋值 (文本配置文件, 相加 (当前运行路径, “\文本\动物对话.txt”))
赋值 (返回文本.对牛说, 读配置项 (文本配置文件, “蛇文本”, “对牛说”, “肥牛，别吃我！我太瘦了没肉不好吃！”))
赋值 (返回文本.对狗说, 读配置项 (文本配置文件, “蛇文本”, “对狗说”, “恶狗！龙龙会给我报仇的！”))
赋值 (返回文本.对鸡说, 读配置项 (文本配置文件, “蛇文本”, “对鸡说”, “鸡大哥！别吃我，我不是小虫子。咝咝...”))
赋值 (返回文本.对马说, 读配置项 (文本配置文件, “蛇文本”, “对马说”, “吃素美容，别吃我啊！”))
赋值 (返回文本.对蛇说, 读配置项 (文本配置文件, “蛇文本”, “对蛇说”, “本是同根生，相煎何太急！咝咝...！”))
赋值 (返回文本.对虎说, 读配置项 (文本配置文件, “蛇文本”, “对虎说”, “虎大王，你怎么可以以大欺小啊！咝咝...，龙龙会给我报仇的！！！”))
赋值 (返回文本.对鼠说, 读配置项 (文本配置文件, “鼠文本”, “对鼠说”, “小老鼠，我肚子饿了！”))
赋值 (返回文本.对龙说, 读配置项 (文本配置文件, “鼠文本”, “对龙说”, “额的神，我看到什么了！”))
赋值 (返回文本.对自己说, 读配置项 (文本配置文件, “鼠文本”, “对自己说”, “捕鼠能手就是我！”))
返回 (返回文本)


.子程序 读鸡文本, 对话文本, , 
.局部变量 返回文本, 对话文本, , , 


赋值 (文本配置文件, 相加 (当前运行路径, “\文本\动物对话.txt”))
赋值 (返回文本.对牛说, 读配置项 (文本配置文件, “鸡文本”, “对牛说”, “肥牛，别吃我！我太瘦了没肉不好吃！”))
赋值 (返回文本.对狗说, 读配置项 (文本配置文件, “鸡文本”, “对狗说”, “恶狗！龙龙会给我报仇的！”))
赋值 (返回文本.对鸡说, 读配置项 (文本配置文件, “鸡文本”, “对鸡说”, “本是同根生，相煎何太急！...”))
赋值 (返回文本.对马说, 读配置项 (文本配置文件, “鸡文本”, “对马说”, “吃素美容，别吃我啊！”))
赋值 (返回文本.对蛇说, 读配置项 (文本配置文件, “鸡文本”, “对蛇说”, “本是同根生，相煎何太急！咝咝...！”))
赋值 (返回文本.对虎说, 读配置项 (文本配置文件, “鸡文本”, “对虎说”, “虎大王，你怎么可以以大欺小啊！咝咝...，龙龙会给我报仇的！！！”))
赋值 (返回文本.对鼠说, 读配置项 (文本配置文件, “鸡文本”, “对鼠说”, “小老鼠，我肚子饿了！”))
赋值 (返回文本.对龙说, 读配置项 (文本配置文件, “鸡文本”, “对龙说”, “额的神，我看到什么了！”))
赋值 (返回文本.对自己说, 读配置项 (文本配置文件, “鸡文本”, “对自己说”, “捕鼠能手就是我！”))
返回 (返回文本)


.子程序 读狗文本, 对话文本, , 
.局部变量 返回文本, 对话文本, , , 


赋值 (文本配置文件, 相加 (当前运行路径, “\文本\动物对话.txt”))
赋值 (返回文本.对牛说, 读配置项 (文本配置文件, “狗文本”, “对牛说”, “肥牛，别吃我！我太瘦了没肉不好吃！”))
赋值 (返回文本.对狗说, 读配置项 (文本配置文件, “狗文本”, “对狗说”, “恶狗！龙龙会给我报仇的！”))
赋值 (返回文本.对鸡说, 读配置项 (文本配置文件, “狗文本”, “对鸡说”, “鸡大哥！别吃我，我不是小虫子。咝咝...”))
赋值 (返回文本.对马说, 读配置项 (文本配置文件, “狗文本”, “对马说”, “吃素美容，别吃我啊！”))
赋值 (返回文本.对蛇说, 读配置项 (文本配置文件, “狗文本”, “对蛇说”, “本是同根生，相煎何太急！咝咝...！”))
赋值 (返回文本.对虎说, 读配置项 (文本配置文件, “狗文本”, “对虎说”, “虎大王，你怎么可以以大欺小啊！咝咝...，龙龙会给我报仇的！！！”))
赋值 (返回文本.对鼠说, 读配置项 (文本配置文件, “狗文本”, “对鼠说”, “小老鼠，我肚子饿了！”))
赋值 (返回文本.对龙说, 读配置项 (文本配置文件, “狗文本”, “对龙说”, “额的神，我看到什么了！”))
赋值 (返回文本.对自己说, 读配置项 (文本配置文件, “狗文本”, “对自己说”, “捕鼠能手就是我！”))
返回 (返回文本)


.子程序 读马文本, 对话文本, , 
.局部变量 返回文本, 对话文本, , , 


赋值 (文本配置文件, 相加 (当前运行路径, “\文本\动物对话.txt”))
赋值 (返回文本.对牛说, 读配置项 (文本配置文件, “马文本”, “对牛说”, “肥牛，别吃我！我太瘦了没肉不好吃！”))
赋值 (返回文本.对狗说, 读配置项 (文本配置文件, “马文本”, “对狗说”, “恶狗！龙龙会给我报仇的！”))
赋值 (返回文本.对鸡说, 读配置项 (文本配置文件, “马文本”, “对鸡说”, “鸡大哥！别吃我，我不是小虫子。咝咝...”))
赋值 (返回文本.对马说, 读配置项 (文本配置文件, “马文本”, “对马说”, “吃素美容，别吃我啊！”))
赋值 (返回文本.对蛇说, 读配置项 (文本配置文件, “马文本”, “对蛇说”, “本是同根生，相煎何太急！咝咝...！”))
赋值 (返回文本.对虎说, 读配置项 (文本配置文件, “马文本”, “对虎说”, “虎大王，你怎么可以以大欺小啊！咝咝...，龙龙会给我报仇的！！！”))
赋值 (返回文本.对鼠说, 读配置项 (文本配置文件, “马文本”, “对鼠说”, “小老鼠，我肚子饿了！”))
赋值 (返回文本.对龙说, 读配置项 (文本配置文件, “马文本”, “对龙说”, “额的神，我看到什么了！”))
赋值 (返回文本.对自己说, 读配置项 (文本配置文件, “马文本”, “对自己说”, “捕鼠能手就是我！”))
返回 (返回文本)


.子程序 读牛文本, 对话文本, , 
.局部变量 返回文本, 对话文本, , , 


赋值 (文本配置文件, 相加 (当前运行路径, “\文本\动物对话.txt”))
赋值 (返回文本.对牛说, 读配置项 (文本配置文件, “牛文本”, “对牛说”, “肥牛，别吃我！我太瘦了没肉不好吃！”))
赋值 (返回文本.对狗说, 读配置项 (文本配置文件, “牛文本”, “对狗说”, “恶狗！龙龙会给我报仇的！”))
赋值 (返回文本.对鸡说, 读配置项 (文本配置文件, “牛文本”, “对鸡说”, “鸡大哥！别吃我，我不是小虫子。咝咝...”))
赋值 (返回文本.对马说, 读配置项 (文本配置文件, “牛文本”, “对马说”, “吃素美容，别吃我啊！”))
赋值 (返回文本.对蛇说, 读配置项 (文本配置文件, “牛文本”, “对蛇说”, “本是同根生，相煎何太急！咝咝...！”))
赋值 (返回文本.对虎说, 读配置项 (文本配置文件, “牛文本”, “对虎说”, “虎大王，你怎么可以以大欺小啊！咝咝...，龙龙会给我报仇的！！！”))
赋值 (返回文本.对鼠说, 读配置项 (文本配置文件, “牛文本”, “对鼠说”, “小老鼠，看我一脚把你塌成肉泥！”))
赋值 (返回文本.对龙说, 读配置项 (文本配置文件, “牛文本”, “对龙说”, “额的神，我看到什么了！”))
赋值 (返回文本.对自己说, 读配置项 (文本配置文件, “牛文本”, “对自己说”, “老牛我威力无穷！”))
返回 (返回文本)


.子程序 读虎文本, 对话文本, , 
.局部变量 返回文本, 对话文本, , , 


赋值 (文本配置文件, 相加 (当前运行路径, “\文本\动物对话.txt”))
赋值 (返回文本.对牛说, 读配置项 (文本配置文件, “虎文本”, “对牛说”, “太好了，找到这么大的一头肥牛！”))
赋值 (返回文本.对狗说, 读配置项 (文本配置文件, “虎文本”, “对狗说”, “小狗！见到本大王还不投降！”))
赋值 (返回文本.对鸡说, 读配置项 (文本配置文件, “虎文本”, “对鸡说”, “今天运气真好，找到了这么美味的食物！”))
赋值 (返回文本.对马说, 读配置项 (文本配置文件, “虎文本”, “对马说”, “看我发现了什么！”))
赋值 (返回文本.对蛇说, 读配置项 (文本配置文件, “虎文本”, “对蛇说”, “见到本大王还不投降！！！”))
赋值 (返回文本.对虎说, 读配置项 (文本配置文件, “虎文本”, “对虎说”, “本是同根生，相煎何太急！！！”))
赋值 (返回文本.对鼠说, 读配置项 (文本配置文件, “虎文本”, “对鼠说”, “小老鼠，我肚子实在太饿了！”))
赋值 (返回文本.对龙说, 读配置项 (文本配置文件, “虎文本”, “对龙说”, “你在天上，我在地上，咱俩井水不犯河水！”))
赋值 (返回文本.对自己说, 读配置项 (文本配置文件, “虎文本”, “对自己说”, “我是森林之王！”))
返回 (返回文本)

.子程序 读龙文本, 对话文本, , 
.局部变量 返回文本, 对话文本, , , 


赋值 (文本配置文件, 相加 (当前运行路径, “\文本\动物对话.txt”))
赋值 (返回文本.对牛说, 读配置项 (文本配置文件, “龙文本”, “对牛说”, “笨牛上次没抓住你，今天我要把你变成烤牛排！”))
赋值 (返回文本.对狗说, 读配置项 (文本配置文件, “龙文本”, “对狗说”, “疯狗你家主人叫你呢，我这里没有骨头给你！”))
赋值 (返回文本.对鸡说, 读配置项 (文本配置文件, “龙文本”, “对鸡说”, “小鸡你来的正好，我还没吃饭呢！”))
赋值 (返回文本.对马说, 读配置项 (文本配置文件, “龙文本”, “对马说”, “小马你长翅膀了？你牙长齐了没有！”))
赋值 (返回文本.对蛇说, 读配置项 (文本配置文件, “龙文本”, “对蛇说”, “小蛇你想吃我，太可笑了！我可是你祖宗！”))
赋值 (返回文本.对虎说, 读配置项 (文本配置文件, “龙文本”, “对虎说”, “虎兄弟，你我一个地上，一个天上，井水不犯河水啊！”))
赋值 (返回文本.对鼠说, 读配置项 (文本配置文件, “龙文本”, “对鼠说”, “该死的老鼠，我会回来报仇的！”))
赋值 (返回文本.对龙说, 读配置项 (文本配置文件, “龙文本”, “对龙说”, “你我本是同根生，相煎何太急！”))
赋值 (返回文本.对自己说, 读配置项 (文本配置文件, “龙文本”, “对自己说”, “我是天上地上最厉害的！”))
返回 (返回文本)


.子程序 读太公文本, 对话文本, , 
.局部变量 返回文本, 对话文本, , , 


赋值 (文本配置文件, 相加 (当前运行路径, “\文本\动物对话.txt”))
赋值 (返回文本.对牛说, 读配置项 (文本配置文件, “太公文本”, “对牛说”, “啊，救我啊！”))
赋值 (返回文本.对狗说, 读配置项 (文本配置文件, “太公文本”, “对狗说”, “啊，救我啊！”))
赋值 (返回文本.对鸡说, 读配置项 (文本配置文件, “太公文本”, “对鸡说”, “啊，救我啊！”))
赋值 (返回文本.对马说, 读配置项 (文本配置文件, “太公文本”, “对马说”, “啊，救我啊！”))
赋值 (返回文本.对蛇说, 读配置项 (文本配置文件, “太公文本”, “对蛇说”, “啊，救我啊！”))
赋值 (返回文本.对虎说, 读配置项 (文本配置文件, “太公文本”, “对虎说”, “啊，救我啊！”))
赋值 (返回文本.对鼠说, 读配置项 (文本配置文件, “太公文本”, “对鼠说”, “啊，救我啊！”))
赋值 (返回文本.对龙说, 读配置项 (文本配置文件, “太公文本”, “对龙说”, “啊，救我啊！”))
赋值 (返回文本.对自己说, 读配置项 (文本配置文件, “太公文本”, “对自己说”, “保护我！”))
返回 (返回文本)

.窗口程序集 投掷骰子程序集, , , 

.程序集变量 骰子最终点数, 整数型, , , 
.程序集变量 骰子起始位置, 位置, , , 
.程序集变量 骰子目的位置, 位置, , , 
.程序集变量 骰子当前位置, 位置, , , 
.程序集变量 骰子滚动数, 整数型, , , 
.程序集变量 左键按下时间, 整数型, , , 
.程序集变量 左键放开时间, 整数型, , , 
.程序集变量 力度, 整数型, , , 
.程序集变量 机器点数, 整数型, , , 
.子程序 _超级按钮_确定_被单击, 空白型, , 


.如果 (等于 (骰子最终点数, 0))
    信息框 (“你还没有投掷骰子！”, 64, #提示文字)
.否则
    
    .判断开始 (等于 (网络版, 真)) ' 判断是网络版还是人机版
        .判断开始 (大于 (骰子最终点数, 对手骰子最终点数)) ' 如果你的骰子最终点数比对手大，则你先走，则否对手先走
            赋值 (_启动窗口..标题, 相加 (“现在轮到”, 你的用户名, “走”))
            
        .默认
            赋值 (_启动窗口..标题, 相加 (“现在轮到”, 对手用户名, “走”))
        .判断结束
        
    .默认
        .判断开始 (大于 (骰子最终点数, 机器点数))
             ' 信息框 (“电脑点数为：” ＋ 到文本 (机器点数) ＋ “，你的点数为：” ＋ 到文本 (骰子最终点数) ＋ “你的点数大，你先走”, 64, #提示文字)
            赋值 (_启动窗口..标题, 相加 (“现在轮到”, “你”, “走”))
            
        .默认
             ' 信息框 (“电脑点数为：” ＋ 到文本 (机器点数) ＋ “，你的点数为：” ＋ 到文本 (骰子最终点数) ＋ “对手的点数大，对手先走”, 64, #提示文字)
            
            赋值 (_启动窗口..标题, 相加 (“现在轮到”, “电脑”, “走”))
            
        .判断结束
         ' 本源码来自易语言资源网(www.wodesoft.com)
    .判断结束
    
    窗口_投掷骰子.销毁 ()
.如果结束



.子程序 _窗口_投掷骰子_创建完毕, 空白型, , 
赋值 (.可视, 假)
.未知支持库函数_20 (“你按下鼠标左键后到放开鼠标左键的时间越长，则相当于投掷的力度越大”, -1, , , , )


.子程序 _时钟_骰子_周期事件, 空白型, , 
.局部变量 计次变量, 整数型, , , 
.局部变量 骰子变动图, 整数型, , , 
.局部变量 横坐标增减量, 整数型, , , 
.局部变量 纵坐标增减量, 整数型, , , 

置随机数种子 ()
.判断开始 (大于或等于 (骰子目的位置.横坐标, 骰子起始位置.横坐标))
    赋值 (横坐标增减量, 5)
.默认
    赋值 (横坐标增减量, -5)
.判断结束

.判断开始 (大于或等于 (骰子目的位置.纵坐标, 骰子起始位置.纵坐标))
    赋值 (纵坐标增减量, 5)
.默认
    赋值 (纵坐标增减量, -5)
.判断结束

.如果真 (不等于 (骰子当前位置.横坐标, 骰子目的位置.横坐标))
    赋值 (骰子当前位置.横坐标, 相加 (骰子当前位置.横坐标, 横坐标增减量))
    
.如果真结束

.如果真 (不等于 (骰子当前位置.纵坐标, 骰子目的位置.纵坐标))
    赋值 (骰子当前位置.纵坐标, 相加 (骰子当前位置.纵坐标, 纵坐标增减量))
    
.如果真结束

.如果真 (大于 (骰子当前位置.纵坐标, 相减 (相加 (.顶边, .高度), .高度)))
    赋值 (骰子当前位置.纵坐标, 相减 (相加 (.顶边, .高度), .高度))
.如果真结束

.如果真 (大于 (骰子当前位置.横坐标, 相减 (相加 (.左边, .宽度), .宽度)))
    赋值 (骰子当前位置.横坐标, 相减 (相加 (.左边, .宽度), .宽度))
.如果真结束

.如果真 (小于 (骰子当前位置.横坐标, .左边))
    赋值 (骰子当前位置.横坐标, .左边)
.如果真结束

.如果真 (小于 (骰子当前位置.纵坐标, .顶边))
    赋值 (骰子当前位置.纵坐标, .顶边)
.如果真结束

赋值 (.左边, 骰子当前位置.横坐标)
赋值 (.顶边, 骰子当前位置.纵坐标)

赋值 (骰子变动图, 取随机数 (1, 10))
赋值 (.图片, 多项选择 (骰子变动图, #点数1, #点数2, #点数3, #点数4, #点数5, #点数6, #点数7, #点数8, #点数9, #点数10))

赋值 (骰子滚动数, 相加 (骰子滚动数, 1))

.如果真 (等于 (骰子滚动数, 10))
    赋值 (骰子最终点数, 取随机数 (1, 6))
    赋值 (.图片, 多项选择 (骰子最终点数, #点数1, #点数2, #点数3, #点数4, #点数5, #点数6))
    置随机数种子 (取启动时间 ())
    赋值 (机器点数, 取随机数 (1, 6))
    
    .判断开始 (不等于 (骰子最终点数, 机器点数))
        .判断开始 (大于 (骰子最终点数, 机器点数))
            赋值 (.标题, “你的棋子是：先手”)
            赋值 (.标题, “对手棋子是：后手”)
        .默认
            
            赋值 (.标题, “你的棋子是：后手”)
            赋值 (.标题, “对手棋子是：先手”)
        .判断结束
        
        赋值 (.内容, “”)
        相加 (“你的点数是：”, 到文本 (骰子最终点数), “对手点数是：”, 到文本 (机器点数)).加入文本 ()
        
        
    .默认
        
        赋值 (骰子最终点数, 0)
        信息框 (“你和对手的点数一样大！请重新投掷骰子！”, 64, #提示文字)
    .判断结束
    
     ' 本源码来自易语言资源网(www.wodesoft.com)
    赋值 (.时钟周期, 0)
.如果真结束




.子程序 _窗口_投掷骰子_可否被关闭, 逻辑型, , 
.如果真 (等于 (骰子最终点数, 0))
    信息框 (“你还没有投掷骰子！”, 64, #提示文字)
    返回 (假)
.如果真结束


.子程序 _超级按钮_投掷骰子_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 计次变量, 整数型, , , 
.局部变量 骰子起始图, 整数型, , , 

赋值 (左键按下时间, 取启动时间 ())
赋值 (.位置, 1)
赋值 (.时钟周期, 100)
置随机数种子 ()

赋值 (骰子起始图, 取随机数 (1, 10))


赋值 (骰子起始位置.横坐标, 取随机数 (.左边, 相减 (相加 (.左边, .宽度), .宽度)))

赋值 (骰子起始位置.纵坐标, 取随机数 (.顶边, 相减 (相加 (.顶边, .高度), .高度)))

赋值 (.左边, 骰子起始位置.横坐标)
赋值 (.顶边, 骰子起始位置.纵坐标)

赋值 (.图片, 多项选择 (骰子起始图, #点数1, #点数2, #点数3, #点数4, #点数5, #点数6, #点数7, #点数8, #点数9, #点数10))

赋值 (.可视, 真)
赋值 (骰子滚动数, 0)
赋值 (骰子当前位置, 骰子起始位置)

.子程序 _时钟_投掷力度_周期事件, 空白型, , 
.局部变量 计次变量, 整数型, , , 


赋值 (.位置, 相加 (.位置, 1))


.子程序 _超级按钮_投掷骰子_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.时钟周期, 0)

赋值 (左键放开时间, 取启动时间 ())
赋值 (力度, 取整 (四舍五入 (相除 (相减 (左键放开时间, 左键按下时间), 1000), )))

 ' 调试输出 (到文本 (力度))
置随机数种子 ()
 ' 如果骰子的起始位置纵坐标是在上半边的话
.判断开始 (并且 (小于或等于 (.顶边, 骰子起始位置.纵坐标), 小于或等于 (骰子起始位置.纵坐标, 相减 (相除 (相加 (.顶边, .高度), 2), .高度))))
    赋值 (骰子目的位置.纵坐标, 取随机数 (取整 (四舍五入 (相加 (相除 (相加 (.顶边, .高度), 2), 力度), )), 相减 (相加 (.顶边, .高度), .高度)))
.默认
     ' 骰子的起始位置纵坐标是在下半边的话
    赋值 (骰子目的位置.纵坐标, 取随机数 (相加 (.顶边, 力度), 相加 (相除 (相加 (.顶边, .高度), 2), 力度)))
    ' 本源码来自易语言资源网(www.wodesoft.com)
.判断结束

 ' 骰子的起始位置横坐标是在左半边的话
.判断开始 (并且 (小于或等于 (.左边, 骰子起始位置.横坐标), 小于或等于 (骰子起始位置.横坐标, 相减 (相除 (相加 (.左边, .宽度), 2), .宽度))))
    赋值 (骰子目的位置.横坐标, 取随机数 (相加 (取整 (四舍五入 (相除 (相加 (.左边, .宽度), 2), )), 力度), 相减 (相加 (.左边, .宽度), .宽度)))
.默认
     ' 骰子的起始位置横坐标是在右半边的话
    赋值 (骰子目的位置.横坐标, 取随机数 (相加 (.左边, 力度), 相加 (相除 (相加 (.左边, .宽度), 2), 力度)))
.判断结束

 ' 骰子目的位置.横坐标 ＝ 64
 ' 骰子目的位置.纵坐标 ＝ 168
 ' 调试输出 (“骰子当前位置横坐标:” ＋ 到文本 (骰子当前位置.横坐标))
 ' 调试输出 (“骰子当前位置纵坐标:” ＋ 到文本 (骰子当前位置.纵坐标))
播放投掷骰子 ()
赋值 (.时钟周期, 200)


.程序集 删除左棋子程序集, , , 

.子程序 删除左棋子太公, 空白型, , 
赋值 (_启动窗口..可视, 假)
赋值 (所有左棋的当前位置 [9].横坐标, 0)
赋值 (所有左棋的当前位置 [9].纵坐标, 0)

.子程序 删除左棋子龙, 空白型, , 
赋值 (_启动窗口..可视, 假)
赋值 (所有左棋的当前位置 [8].横坐标, 0)
赋值 (所有左棋的当前位置 [8].纵坐标, 0)

.子程序 删除左棋子虎, 空白型, , 
赋值 (_启动窗口..可视, 假)
赋值 (所有左棋的当前位置 [7].横坐标, 0)
赋值 (所有左棋的当前位置 [7].纵坐标, 0)

.子程序 删除左棋子牛, 空白型, , 
赋值 (_启动窗口..可视, 假)
赋值 (所有左棋的当前位置 [6].横坐标, 0)
赋值 (所有左棋的当前位置 [6].纵坐标, 0)

.子程序 删除左棋子马, 空白型, , 
赋值 (_启动窗口..可视, 假)
赋值 (所有左棋的当前位置 [5].横坐标, 0)
赋值 (所有左棋的当前位置 [5].纵坐标, 0)

.子程序 删除左棋子狗, 空白型, , 
赋值 (_启动窗口..可视, 假)
赋值 (所有左棋的当前位置 [4].横坐标, 0)
赋值 (所有左棋的当前位置 [4].纵坐标, 0)

.子程序 删除左棋子鸡, 空白型, , 
赋值 (_启动窗口..可视, 假)
赋值 (所有左棋的当前位置 [3].横坐标, 0)
赋值 (所有左棋的当前位置 [3].纵坐标, 0)

.子程序 删除左棋子蛇, 空白型, , 
赋值 (_启动窗口..可视, 假)
赋值 (所有左棋的当前位置 [2].横坐标, 0)
赋值 (所有左棋的当前位置 [2].纵坐标, 0)

.子程序 删除左棋子鼠, 空白型, , 
赋值 (_启动窗口..可视, 假)
赋值 (所有左棋的当前位置 [1].横坐标, 0)
赋值 (所有左棋的当前位置 [1].纵坐标, 0)


 ' 不属于任何一个程序集、类模块的函数：
