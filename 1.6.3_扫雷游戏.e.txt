 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 170
    高度 = 208
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 6
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “扫雷”
    帮助文件名 = “”



.常量 格宽度, "20", , 
.常量 凸起按钮_空白, "0", , 
.常量 凸起按钮_旗帜, "1", , 
.常量 凸起按钮_问号, "2", , 
.常量 按下按钮_数字, "0", , 
.常量 按下按钮_地雷, "1", , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 4 系统核心支持库




数据类型 雷块, , 
    .成员 有雷, 逻辑型, , , 
    .成员 右击索引, 整数型, , , 0:空 1:旗帜 2:问号
    .成员 已按下, 逻辑型, , , 该雷块对应的按钮是否已按下


.窗口程序集 主窗口程序集, , , 

.程序集变量 集雷块阵列, 雷块, , "0", 
.程序集变量 集游戏已结束, 逻辑型, , , 
.子程序 __启动窗口_创建完毕, 空白型, , 
新游戏 ()


.子程序 画凸起按钮, 空白型, , 
.参数 参横坐标, 空白型, , 以数组索引为单位
.参数 参纵坐标, 空白型, , 以数组索引为单位
.参数 参按钮类型, 空白型, , 0:空白,1:旗帜,2:问号

.局部变量 x, 空白型, , , 
.局部变量 y, 空白型, , , 
.局部变量 三角形顶点们, 整数型, , "6", 

赋值 (x, 相乘 (#格宽度, 相减 (参横坐标, 1)))
赋值 (y, 相乘 (#格宽度, 相减 (参纵坐标, 1)))
赋值 (., #白色)
赋值 (., #白色)
x.画矩形 (y, 相加 (x, #格宽度), 相加 (y, #格宽度))
赋值 (., #深灰)
赋值 (., #深灰)
赋值 (三角形顶点们 [1], 相加 (x, #格宽度))
赋值 (三角形顶点们 [2], y)
赋值 (三角形顶点们 [3], 相加 (x, #格宽度))
赋值 (三角形顶点们 [4], 相加 (y, #格宽度))
赋值 (三角形顶点们 [5], x)
赋值 (三角形顶点们 [6], 相加 (y, #格宽度))
三角形顶点们.画多边形 (3)
赋值 (., #浅灰)
赋值 (., #浅灰)
相加 (x, 2).画矩形 (相加 (y, 2), 相加 (相减 (x, 2), #格宽度), 相加 (相减 (y, 2), #格宽度))
赋值 (., 1)
.判断开始 (等于 (参按钮类型, #凸起按钮_旗帜))
     ' 以下代码绘制旗帜、旗杆和基座
    赋值 (., #红色)
    赋值 (., #红色)
    相加 (x, 9).画矩形 (相加 (y, 4), 相加 (x, 16), 相加 (y, 9))
    赋值 (., #黑色)
    赋值 (., 1)
    相加 (x, 8).画直线 (相加 (y, 3), 相加 (x, 8), 相加 (y, 15))
    赋值 (., 2)
    相加 (x, 5).画直线 (相加 (y, 15), 相加 (x, 13), 相加 (y, 15))
.判断 (等于 (参按钮类型, #凸起按钮_问号))
    相加 (x, 4).定位写出 (相减 (y, 2), “?”) ' 画问号
.默认
    
.判断结束


.子程序 画凹下按钮, 空白型, , 
.参数 参横坐标, 整数型, , 以数组索引为单位
.参数 参纵坐标, 整数型, , 以数组索引为单位
.参数 参周围雷数, 整数型, , -1表示是雷，其他是雷的数目

.局部变量 x, 空白型, , , 
.局部变量 y, 空白型, , , 

赋值 (x, 相乘 (#格宽度, 相减 (参横坐标, 1)))
赋值 (y, 相乘 (#格宽度, 相减 (参纵坐标, 1)))
赋值 (., 0) ' 空画笔
赋值 (., #深灰)
赋值 (., 1) ' 颜色刷子
赋值 (., #浅灰)
x.画矩形 (y, 相加 (x, #格宽度), 相加 (y, #格宽度))
.判断开始 (等于 (参周围雷数, -1)) ' 是地雷
     ' 以下代码画地雷
    赋值 (., #黑色)
    赋值 (., 0)
    赋值 (., #黑色)
    赋值 (., 1)
    相加 (x, 4).画椭圆 (相加 (y, 4), 相减 (相加 (x, #格宽度), 4), 相减 (相加 (y, #格宽度), 4))
    相加 (x, 2).画直线 (相加 (y, 相除 (#格宽度, 2)), 相减 (相加 (x, #格宽度), 2), 相加 (y, 相除 (#格宽度, 2)))
    相加 (x, 相除 (#格宽度, 2)).画直线 (相加 (y, 2), 相加 (x, 相除 (#格宽度, 2)), 相减 (相加 (y, #格宽度), 2))
    相加 (x, 4).画直线 (相加 (y, 4), 相减 (相加 (x, #格宽度), 4), 相减 (相加 (y, #格宽度), 4))
    相减 (相加 (x, #格宽度), 4).画直线 (相加 (y, 4), 相加 (x, 4), 相减 (相加 (y, #格宽度), 4))
    赋值 (., #白色)
    赋值 (., #黑色)
    相加 (x, 6).画椭圆 (相加 (y, 6), 相加 (x, 10), 相加 (y, 10))
    返回 ()
.判断 (等于 (参周围雷数, 0))
    返回 ()
.判断 (等于 (参周围雷数, 1))
    赋值 (., #蓝色)
.判断 (等于 (参周围雷数, 2))
    赋值 (., #深青)
.默认
    赋值 (., #红色)
.判断结束

相加 (x, 4).定位写出 (相减 (y, 2), 参周围雷数)


.子程序 新游戏, 空白型, , 
.局部变量 i, 整数型, , , 
.局部变量 j, 整数型, , , 

赋值 (集游戏已结束, 假)
重定义数组 (集雷块阵列, 假, 8, 8) ' 定义一个8×8的雷块数组
置随机数种子 ()
 ' 先重画所有按钮
.计次循环首 (8, i)
    .计次循环首 (8, j)
        画凸起按钮 (j, i, #凸起按钮_空白)
    .计次循环尾 ()
.计次循环尾 ()
 ' 再设置雷区数组
.计次循环首 (10, ) ' 随机放１０个雷
    .循环判断首 ()
        赋值 (i, 取随机数 (1, 8)) ' 随机取一个地方
        赋值 (j, 取随机数 (1, 8))
         ' 已放雷的地方就不再放，直到找到空地方
    .循环判断尾 (集雷块阵列 [i] [j], 有雷)
    赋值 (集雷块阵列 [i] [j], 有雷, 真)
.计次循环尾 ()


.子程序 画红叉叉, 空白型, , 在用户标错的地方画个叉叉
.参数 参横坐标, 整数型, , 
.参数 参纵坐标, 整数型, , 

.局部变量 x, 空白型, , , 
.局部变量 y, 空白型, , , 

赋值 (x, 相乘 (#格宽度, 相减 (参横坐标, 1)))
赋值 (y, 相乘 (#格宽度, 相减 (参纵坐标, 1)))

赋值 (., 1)
赋值 (., 1)
赋值 (., #红色)
x.画直线 (y, 相加 (x, #格宽度), 相加 (y, #格宽度))
相加 (x, #格宽度).画直线 (y, x, 相加 (y, #格宽度))


.子程序 判断胜负, 空白型, , 
.局部变量 已找出的雷数, 整数型, , , 
.局部变量 i, 整数型, , , 
.局部变量 j, 整数型, , , 

.计次循环首 (8, j)
    .计次循环首 (8, i)
        .如果真 ()

.子程序 _画板_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 m, 整数型, , , 
.局部变量 n, 整数型, , , 
.局部变量 i, 整数型, , , 
.局部变量 j, 整数型, , , 
.局部变量 x, 整数型, , , 
.局部变量 y, 整数型, , , 
.局部变量 周围雷数, 整数型, , , 

.如果真 (集游戏已结束)
    返回 ()
.如果真结束
 ' 将横纵坐标映射为数组的索引值
赋值 (m, 相加 (相除 (横向位置, #格宽度), 1))
赋值 (n, 相加 (相除 (纵向位置, #格宽度), 1))
.如果真 (集雷块阵列 [m] [n], 已按下)
    返回 ()
.如果真结束
赋值 (集雷块阵列 [m] [n], 已按下, 真)
赋值 (集雷块阵列 [m] [n], 右击索引, #凸起按钮_空白)
.如果 (集雷块阵列 [m] [n], 有雷)
     ' 有雷则显示所有的雷，同时弹出信息框
    .计次循环首 (8, j)
        .计次循环首 (8, i)
            .如果 (集雷块阵列 [i] [j], 有雷)
                画凹下按钮 (i, j, -1)
            .否则
                 ' 没有雷却标了旗帜的地方则画叉叉
                .如果真 (等于 (集雷块阵列 [i] [j], 右击索引, #凸起按钮_旗帜))
                    画红叉叉 (i, j)
                .如果真结束
                
            .如果结束
            
        .计次循环尾 ()
    .计次循环尾 ()
    赋值 (集游戏已结束, 真)
    信息框 (“你踩雷了！”, #错误图标, )
    返回 ()
.否则
     ' 无雷则显示周围雷的数目，数目是０则不显示且递归按周围的按钮
     ' 遍历周围的雷块
    .变量循环首 (相减 (n, 1), 相加 (n, 1), 1, j)
        .变量循环首 (相减 (m, 1), 相加 (m, 1), 1, i)
            .如果真 (并且 (大于或等于 (i, 1), 小于或等于 (i, 8), 大于或等于 (j, 1), 小于或等于 (j, 8)))
                 ' 确保在数组索引范围内，以免导致数组下标越界错误！
                .如果真 (集雷块阵列 [i] [j], 有雷)
                    赋值 (周围雷数, 相加 (周围雷数, 1))
                .如果真结束
                
            .如果真结束
            
        .变量循环尾 ()
    .变量循环尾 ()
    画凹下按钮 (m, n, 周围雷数)
    .如果真 (等于 (周围雷数, 0))
         ' 如果周围雷数是０，则还需要自动向周围扩展。(递归)
        .变量循环首 (相减 (n, 1), 相加 (n, 1), 1, j)
            .变量循环首 (相减 (m, 1), 相加 (m, 1), 1, i)
                .如果真 (或者 (小于 (i, 1), 大于 (i, 8), 小于 (j, 1), 大于 (j, 8)))
                     ' 确保数组下标不会越界
                    到循环尾 ()
                .如果真结束
                .如果真 (或者 (集雷块阵列 [i] [j], 已按下, 不等于 (集雷块阵列 [i] [j], 右击索引, #凸起按钮_空白)))
                     ' 已标为旗帜或问号的则不翻出来
                    到循环尾 () ' 此处退出递归，否则会因无限递归而死机。
                .如果真结束
                赋值 (x, 相减 (相乘 (i, #格宽度), 相除 (#格宽度, 2)))
                赋值 (y, 相减 (相乘 (j, #格宽度), 相除 (#格宽度, 2)))
                _画板_鼠标左键被按下 (x, y, 功能键状态)
            .变量循环尾 ()
        .变量循环尾 ()
    .如果真结束
    
.如果结束
判断胜负 ()


.子程序 _画板_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 m, 整数型, , , 
.局部变量 n, 整数型, , , 
.局部变量 i, 整数型, , , 
.局部变量 j, 整数型, , , 
.局部变量 周围雷数, 整数型, , , 

.如果真 (集游戏已结束)
    返回 ()
.如果真结束
 ' 将横纵坐标映射为数组的索引值
赋值 (i, 相加 (相除 (横向位置, #格宽度), 1))
赋值 (j, 相加 (相除 (纵向位置, #格宽度), 1))
.如果真 (集雷块阵列 [i] [j], 已按下)
    返回 ()
.如果真结束
赋值 (集雷块阵列 [i] [j], 右击索引, 求余数 (相加 (集雷块阵列 [i] [j], 右击索引, 1), 3))
画凸起按钮 (i, j, 集雷块阵列 [i] [j], 右击索引)
判断胜负 ()


.子程序 _画板_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 j, 整数型, , , 
.局部变量 i, 整数型, , , 
.局部变量 x, 空白型, , , 
.局部变量 y, 空白型, , , 

 ' 此处是绝技，不可告人哦　^_^
.如果真 (并且 (等于 (键代码, #F12键), 等于 (功能键状态, 位或 (#Ctrl键状态, #Alt键状态))))
    赋值 (., #黑色)
    .计次循环首 (8, j)
        .计次循环首 (8, i)
            .如果真 (集雷块阵列 [i] [j], 有雷)
                赋值 (x, 相乘 (相减 (i, 1), #格宽度))
                赋值 (y, 相乘 (相减 (j, 1), #格宽度))
                 ' 用黑点把有雷的地方标出来，哈哈！
                相加 (x, 3).画直线 (相加 (y, 3), 相加 (x, 5), 相加 (y, 3))
            .如果真结束
            
        .计次循环尾 ()
    .计次循环尾 ()
.如果真结束


.子程序 _新局_被选择, 空白型, , 
新游戏 ()


.子程序 _退出_被选择, 空白型, , 
结束 ()


.子程序 _关于_被选择, 空白型, , 
.局部变量 关于信息, 文本型, , , 

赋值 (关于信息, 相加 (“《易精经》例程之《扫雷》游戏”, #换行符))
赋值 (关于信息, 相加 (关于信息, “作者：曾劲松　2005/11/24”, #换行符))
赋值 (关于信息, 相加 (关于信息, “此例程综合演示了自定义数据类型、数组、递归的用法。”, #换行符))
赋值 (关于信息, 相加 (关于信息, “网址：http://goomoo.cn”, #换行符))
信息框 (关于信息, #信息图标, )



 ' 不属于任何一个程序集、类模块的函数：
