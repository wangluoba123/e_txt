 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 773
    高度 = 404
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 1
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 真
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 3
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “中华电子表格 v1.2”
    帮助文件名 = “”

窗口 文本格式窗口
    左边 = 50
    顶边 = 50
    宽度 = 302
    高度 = 277
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “文本格式”
    帮助文件名 = “”

窗口 打印设置窗口
    左边 = 50
    顶边 = 50
    宽度 = 336
    高度 = 265
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 假
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “打印设置”
    帮助文件名 = “”

窗口 查找窗口
    左边 = 50
    顶边 = 50
    宽度 = 322
    高度 = 161
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “查找/替换”
    帮助文件名 = “”

窗口 表格属性窗口
    左边 = 50
    顶边 = 50
    宽度 = 418
    高度 = 366
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 假
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “表格属性”
    帮助文件名 = “”

窗口 颜色窗口
    左边 = 50
    顶边 = 50
    宽度 = 380
    高度 = 248
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 假
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “单元格颜色”
    帮助文件名 = “”

窗口 选择窗口
    左边 = 50
    顶边 = 50
    宽度 = 380
    高度 = 174
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “选择”
    帮助文件名 = “”

窗口 计算窗口
    左边 = 50
    顶边 = 50
    宽度 = 374
    高度 = 279
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “计算窗口”
    帮助文件名 = “”

窗口 日历窗口
    左边 = 50
    顶边 = 50
    宽度 = 290
    高度 = 181
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “公历/农历”
    帮助文件名 = “”

窗口 文字编码窗口
    左边 = 50
    顶边 = 50
    宽度 = 259
    高度 = 149
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “文字编码转换”
    帮助文件名 = “”

窗口 计算器窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 253
    高度 = 288
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 真
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “计算器”
    帮助文件名 = “”

窗口 图示窗口
    左边 = 50
    顶边 = 50
    宽度 = 441
    高度 = 293
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “图示窗口”
    帮助文件名 = “”

窗口 图示设置窗口
    左边 = 50
    顶边 = 50
    宽度 = 418
    高度 = 248
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “图示设置”
    帮助文件名 = “”

窗口 窗口_执行SQL语句
    左边 = 50
    顶边 = 50
    宽度 = 551
    高度 = 408
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “执行SQL语句”
    帮助文件名 = “”

窗口 数据库结构
    左边 = 50
    顶边 = 50
    宽度 = 355
    高度 = 326
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “数据库结构”
    帮助文件名 = “”

窗口 测试连接 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 406
    高度 = 118
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “测试连接”
    帮助文件名 = “”

窗口 查寻窗口
    左边 = 50
    顶边 = 50
    宽度 = 556
    高度 = 445
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “数据库查询通用设计器”
    帮助文件名 = “”



.图片 默认表格, " ' 已保存到：D:\易语言学习\Data\中华电子表格1.2.e\默认表格", , 
.常量 SDB, "4", , 
.常量 SQl, "1", , 
.常量 ACS, "2", , 
.常量 MSQl, "6", , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 4 系统核心支持库
 ' eGrid 0B4337DA651B4b619ACF61334A7E8B47 1 2 高级表格支持库
 ' iext 27bb20fdd3e145e4bee3db39ddd6e64c 1 2 扩展界面支持库一
 ' shell 52F260023059454187AF826A3C07AF2A 1 0 操作系统界面功能支持库
 ' CnCalendar {18C0788E-59AE-4112-B452-6BF0C1B727FB} 1 2 农历日期支持库
 ' cncnv 63AA4BEA120C4DABAD567115556DE054 1 0 文字编码转换支持库
 ' EChartBar 9A3F84D7FDEB4a0486F2711D5104B7F7 1 6 数据图表支持库
 ' eDB 46E94341933A462383A4DE26B146322C 1 3 数据库操作支持库
 ' eExcel2000 F86EC5989E044d42BC98C692C0B54727 1 0 EXCEL2000支持库
 ' SqliteDB {295DD8F2-3584-4780-818D-9569AC5BC9D8} 1 2 Sqlite数据库支持库
 ' mysql 7F54B9CE8887428dBA9CEEB94CEF4C72 2 1 MySql支持库
 ' ExtMenu 9909FBB013704cfa8FE7E739DB7172DE 1 6 超级菜单支持库




.全局变量 表数组, 文本型, , "0", 
.全局变量 视图数组, 文本型, , "0", 
.全局变量 临时表数组, 文本型, , "0", 
.全局变量 临时视图数组, 文本型, , "0", 
.全局变量 sqlite数据库, 未知类型0xA0001, , , 
.全局变量 数据库类型, 整数型, , , 1.Mysql;2.SQL;3.MDB;4.Sqlite
.全局变量 当前数据库密码, 文本型, , , 
.全局变量 操作数据库, 文本型, , , 
.全局变量 服务器地址, 文本型, , , 
.全局变量 用户名, 文本型, , , 
.全局变量 密码, 文本型, , , 
.全局变量 端口, 文本型, , , 
.全局变量 被操作的表, 文本型, , , 
.全局变量 SQL语句, 文本型, , , 
.全局变量 是否保存, 逻辑型, , , 
.全局变量 所有字段, 逻辑型, , , 
.全局变量 连接文本, 文本型, , , 
.全局变量 当前外部表, 文本型, , , 
.全局变量 全局句柄, 整数型, , , 
.全局变量 记录集句柄, 整数型, , , 
.全局变量 当前外部表id, 文本型, , , 

.窗口程序集 启动窗口程序集, , , 

.程序集变量 文件名, 文本型, , , 
.程序集变量 上次查找的文本, 文本型, , , 
.程序集变量 上次查找是否区分大小写, 逻辑型, , , 
.程序集变量 临时文件夹路径, 文本型, , , 
.程序集变量 操作步数, 整数型, , , 
.程序集变量 临时文件名组, 文本型, , "0", 
.程序集变量 最大撤消数, 整数型, , , 
.程序集变量 上次数据, 字节集, , , 
.程序集变量 现行数据, 字节集, , , 
.程序集变量 撤消次数, 整数型, , , 
.程序集变量 欲复制起始行, 整数型, , , 起始行号
.程序集变量 欲复制终止行, 整数型, , , 结束行号
.程序集变量 欲复制起始列, 整数型, , , 起始列号
.程序集变量 欲复制终止列, 整数型, , , 终止列号
.程序集变量 被编辑行号, 整数型, , , 
.程序集变量 被编辑列号, 整数型, , , 
.子程序 __启动窗口_创建完毕, 空白型, , 
赋值 (临时文件夹路径, 未知支持库函数_7 (#))
.如果真 (不等于 (取文本右边 (临时文件夹路径, 1), “\”))
    赋值 (临时文件夹路径, 相加 (临时文件夹路径, “\”))
.如果真结束
创建目录 (相加 (临时文件夹路径, “易之表2”))
赋值 (临时文件夹路径, 相加 (临时文件夹路径, “易之表2\”))
写到文件 (相加 (临时文件夹路径, “默认.efs”), #默认表格)
相加 (临时文件夹路径, “默认.efs”).未知支持库函数_56 ()
赋值 (最大撤消数, 3)
记录 ()
载入 (表格属性窗口, , 假)
载入 (颜色窗口, , 假)
赋值 (被编辑行号, -1)
赋值 (被编辑列号, -1)

.子程序 __启动窗口_尺寸被改变, 空白型, , 
赋值 (., _启动窗口.取用户区宽度 ())
赋值 (., 相减 (_启动窗口.取用户区高度 (), ., 85))
赋值 (.禁止, _启动窗口.取用户区宽度 ())
赋值 (.禁止, _启动窗口.取用户区宽度 ())
赋值 (.禁止, _启动窗口.取用户区宽度 ())

.子程序 _新建_被选择, 空白型, , 
相加 (临时文件夹路径, “默认.efs”).未知支持库函数_56 ()

.子程序 _打开_被选择, 空白型, , 
赋值 (.类型, 0)
.如果真 (等于 (打开 (), 真))
    .未知支持库函数_56 (.文件名)
    赋值 (文件名, .文件名)
.如果真结束


.子程序 _保存_被选择, 空白型, , 
.如果 (等于 (文件名, “”))
    赋值 (.类型, 1)
    .如果真 (等于 (打开 (), 真))
        .未知支持库函数_55 (.文件名)
        赋值 (文件名, .文件名)
    .如果真结束
    
.否则
    文件名.未知支持库函数_55 ()
.如果结束


.子程序 _另存为_被选择, 空白型, , 
赋值 (.类型, 1)
.如果真 (等于 (打开 (), 真))
    .未知支持库函数_55 (.文件名)
    赋值 (文件名, .文件名)
.如果真结束


.子程序 _打印设置_被选择, 空白型, , 
载入 (打印设置窗口, , 真)

.子程序 _打印预览_被选择, 空白型, , 
未知支持库函数_27 ()

.子程序 _退出_被选择, 空白型, , 
__启动窗口_将被销毁 ()

.子程序 _删除_被选择, 空白型, , 
未知支持库函数_5 ().未知支持库函数_62 (未知支持库函数_6 (), 未知支持库函数_7 (), 未知支持库函数_8 ())

.子程序 _合并_被选择, 空白型, , 
未知支持库函数_5 ().未知支持库函数_58 (未知支持库函数_6 (), 未知支持库函数_7 (), 未知支持库函数_8 ())

.子程序 _分解_被选择, 空白型, , 
未知支持库函数_3 ().未知支持库函数_59 (未知支持库函数_4 ())

.子程序 _添加行_被选择, 空白型, , 
“”.未知支持库函数_38 (相加 (未知支持库函数_3 (), 1))

.子程序 _插入行_被选择, 空白型, , 
“”.未知支持库函数_38 (未知支持库函数_3 ())

.子程序 _删除行_被选择, 空白型, , 
.局部变量 循环变量, 整数型, , , 
.局部变量 起始选择行, 整数型, , , 

赋值 (起始选择行, 未知支持库函数_5 ())
.计次循环首 (相加 (相减 (未知支持库函数_7 (), 未知支持库函数_5 ()), 1), )
    起始选择行.未知支持库函数_36 ()
.计次循环尾 ()

.子程序 _导出数据_被选择, 空白型, , 
.局部变量 行分割符, 文本型, , , 
.局部变量 列分割符, 文本型, , , 
.局部变量 是否包括列名, 逻辑型, , , 
.局部变量 行循环数, 整数型, , , 
.局部变量 列循环数, 整数型, , , 
.局部变量 循环变量1, 整数型, , , 
.局部变量 循环变量2, 整数型, , , 
.局部变量 文件号, 整数型, , , 
.局部变量 起始行, 整数型, , , 

.如果真 (等于 (打开 (), 真))
    文本格式窗口 (行分割符, 列分割符, 是否包括列名)
    .如果真 (并且 (不等于 (列分割符, “”), 不等于 (行分割符, “”)))
        赋值 (行循环数, .)
        赋值 (列循环数, .)
        .如果真 (等于 (是否包括列名, 假))
            赋值 (起始行, .)
            赋值 (行循环数, 相减 (行循环数, .))
        .如果真结束
        赋值 (文件号, 打开文件 (.文件名, #重写, #无限制))
        .计次循环首 (行循环数, 循环变量1)
            .计次循环首 (列循环数, 循环变量2)
                写出文本 (文件号, 到文本 (相减 (相加 (起始行, 循环变量1), 1).未知支持库函数_10 (相减 (循环变量2, 1))))
                写出文本 (文件号, 列分割符)
            .计次循环尾 ()
            写出文本 (文件号, 行分割符)
        .计次循环尾 ()
        关闭文件 (文件号)
    .如果真结束
    
.如果真结束


.子程序 _导入数据_被选择, 空白型, , 
.局部变量 文件内容, 文本型, , , 
.局部变量 行分割符, 文本型, , , 
.局部变量 列分割符, 文本型, , , 
.局部变量 是否包括首行, 逻辑型, , , 
.局部变量 行文本组, 文本型, , "0", 
.局部变量 列文本组, 文本型, , "0", 
.局部变量 行数, 整数型, , , 
.局部变量 起始行数, 整数型, , , 
.局部变量 循环变量1, 整数型, , , 
.局部变量 循环变量2, 整数型, , , 
.局部变量 扩展名, 文本型, , , 

载入 (测试连接, , 真)
返回 ()


.子程序 读易数据库, 空白型, , 
.参数 文件名, 文本型, , 

.局部变量 数据库密码, 文本型, , , 
.局部变量 循环变量1, 整数型, , , 
.局部变量 循环变量2, 整数型, , , 
.局部变量 字段类型, 整数型, , , 

.如果真 (等于 (是否已加密 (文件名), 真))
    .如果真 (等于 (输入框 (“请输入数据库密码”, “输入...”, “”, 数据库密码, #输入文本), 假))
        返回 ()
    .如果真结束
    
.如果真结束

.如果真 (等于 (打开 (文件名, , , , , 数据库密码, ), 假))
    信息框 (“打开数据库失败”, #错误图标, )
    返回 ()
.如果真结束

.计次循环首 (相减 (., 1), )
    0.未知支持库函数_36 ()
.计次循环尾 ()



赋值 (., 1)
赋值 (., 1)
赋值 (., 相加 (取记录数 (), 1))
赋值 (., 取字段数 ())
.计次循环首 (取字段数 (), 循环变量1)
    赋值 (字段类型, 取字段类型 (循环变量1))
    .判断开始 (或者 (等于 (字段类型, #字节型), 等于 (字段类型, #短整数型), 等于 (字段类型, #整数型), 等于 (字段类型, #长整数型), 等于 (字段类型, #小数型), 等于 (字段类型, #双精度小数型)))
        0.未知支持库函数_9 (相减 (循环变量1, 1), #., 取字段名 (循环变量1))
        相减 (循环变量1, 1).未知支持库函数_30 (#.)
        到循环尾 ()
    .判断 (或者 (等于 (字段类型, #文本型), 等于 (字段类型, #备注型)))
        0.未知支持库函数_9 (相减 (循环变量1, 1), #., 取字段名 (循环变量1))
        相减 (循环变量1, 1).未知支持库函数_30 (#.)
        到循环尾 ()
    .判断 (等于 (字段类型, #逻辑型))
        0.未知支持库函数_9 (相减 (循环变量1, 1), #., 取字段名 (循环变量1))
        相减 (循环变量1, 1).未知支持库函数_30 (#.)
        到循环尾 ()
    .判断 (等于 (字段类型, #日期时间型))
        0.未知支持库函数_9 (相减 (循环变量1, 1), #., 取字段名 (循环变量1))
        相减 (循环变量1, 1).未知支持库函数_30 (#.)
    .默认
        .如果真 (等于 (字段类型, #字节集型))
            0.未知支持库函数_9 (相减 (循环变量1, 1), #., 取字段名 (循环变量1))
            相减 (循环变量1, 1).未知支持库函数_30 (#.)
            到循环尾 ()
        .如果真结束
        
    .判断结束
    
.计次循环尾 ()
到首记录 ()
.计次循环首 (取记录数 (), 循环变量1)
    .计次循环首 (取字段数 (), 循环变量2)
        赋值 (字段类型, 取字段类型 (循环变量2))
        .判断开始 (或者 (等于 (字段类型, #字节型), 等于 (字段类型, #短整数型), 等于 (字段类型, #整数型), 等于 (字段类型, #长整数型), 等于 (字段类型, #小数型), 等于 (字段类型, #双精度小数型)))
            循环变量1.未知支持库函数_9 (相减 (循环变量2, 1), #., 读 (循环变量2))
            到循环尾 ()
        .判断 (等于 (字段类型, #逻辑型))
            循环变量1.未知支持库函数_9 (相减 (循环变量2, 1), #., 读 (循环变量2))
            到循环尾 ()
        .判断 (等于 (字段类型, #字节集型))
            循环变量1.未知支持库函数_9 (相减 (循环变量2, 1), #., 读 (循环变量2))
            到循环尾 ()
        .判断 (或者 (等于 (字段类型, #文本型), 等于 (字段类型, #备注型)))
            循环变量1.未知支持库函数_9 (相减 (循环变量2, 1), #., 到文本 (读 (循环变量2)))
            到循环尾 ()
        .默认
            .如果真 (等于 (字段类型, #日期时间型))
                循环变量1.未知支持库函数_9 (相减 (循环变量2, 1), #., 时间到文本 (读 (循环变量2), #全部转换))
                到循环尾 ()
            .如果真结束
            
        .判断结束
        
    .计次循环尾 ()
    跳过 ()
.计次循环尾 ()
关闭 (.文件名)

.子程序 _工具条1_被单击, 空白型, , 
.参数 按钮索引, 整数型, , 

.判断开始 (等于 (按钮索引, 1))
    _新建_被选择 ()
.判断 (等于 (按钮索引, 2))
    _打开_被选择 ()
.判断 (等于 (按钮索引, 3))
    _保存_被选择 ()
.判断 (等于 (按钮索引, 4))
    _另存为_被选择 ()
.判断 (等于 (按钮索引, 6))
    _打印设置_被选择 ()
.判断 (等于 (按钮索引, 7))
    _打印预览_被选择 ()
.判断 (等于 (按钮索引, 8))
    _打印_被选择 ()
.判断 (等于 (按钮索引, 10))
    _撤消_被选择 ()
.判断 (等于 (按钮索引, 11))
    _重复_被选择 ()
.判断 (等于 (按钮索引, 13))
    _剪切_被选择 ()
.判断 (等于 (按钮索引, 14))
    _复制_被选择 ()
.判断 (等于 (按钮索引, 15))
    _粘贴_被选择 ()
.判断 (等于 (按钮索引, 17))
    _合并_被选择 ()
.判断 (等于 (按钮索引, 18))
    _分解_被选择 ()
.判断 (等于 (按钮索引, 24))
    _表格属性_被选择 ()
.判断 (等于 (按钮索引, 25))
    _查找替换_被选择 ()
.判断 (等于 (按钮索引, 26))
    _编码转换_被选择 ()
.判断 (等于 (按钮索引, 30))
    _关于_被选择 ()
.默认
    
.判断结束


.子程序 _打印_被选择, 空白型, , 
未知支持库函数_26 ()

.子程序 _复制_被选择, 空白型, , 
置剪辑板文本 (到文本 (未知支持库函数_3 ().未知支持库函数_10 (未知支持库函数_4 ())))

.子程序 _粘贴_被选择, 空白型, , 
.局部变量 列类型, 整数型, , , 

赋值 (列类型, 未知支持库函数_4 ().未知支持库函数_61 ())
.如果真 (等于 (列类型, 0))
    赋值 (列类型, 被编辑列号.未知支持库函数_61 ())
    .如果真 (等于 (列类型, 0))
        返回 ()
    .如果真结束
    
.如果真结束
.判断开始 (等于 (列类型, #.))
    未知支持库函数_3 ().未知支持库函数_9 (未知支持库函数_4 (), #., 取剪辑板文本 ())
.判断 (等于 (列类型, #.))
    未知支持库函数_3 ().未知支持库函数_9 (未知支持库函数_4 (), #., 到数值 (取剪辑板文本 ()))
.默认
    
.判断结束


.子程序 _剪切_被选择, 空白型, , 
置剪辑板文本 (未知支持库函数_3 ().未知支持库函数_10 (未知支持库函数_4 ()))
未知支持库函数_3 ().未知支持库函数_62 (未知支持库函数_4 (), 未知支持库函数_3 (), 未知支持库函数_4 ())

.子程序 _查找替换_被选择, 空白型, , 
载入 (查找窗口, , 真)

.子程序 查找替换, 逻辑型, , 找到返回真，并选择那个单元格
.参数 欲查找的文本, 文本型, , 
.参数 查找起始行, 整数型, , 从0开始
.参数 查找起始列, 整数型, , 从0开始
.参数 是否区分大小写, 逻辑型, , 
.参数 用作替换的文本, 文本型, 可空, 

.局部变量 循环变量1, 整数型, , , 
.局部变量 循环变量2, 整数型, , , 
.局部变量 单元格文本, 文本型, , , 
.局部变量 单元格类型, 整数型, , , 
.局部变量 寻找文本位置, 整数型, , , 

.计次循环首 (_启动窗口.., 循环变量1)
    .如果真 (小于 (相减 (循环变量1, 1), 查找起始行))
        到循环尾 ()
    .如果真结束
    .计次循环首 (_启动窗口.., 循环变量2)
        .如果真 (并且 (等于 (相减 (循环变量1, 1), 查找起始行), 小于 (相减 (循环变量2, 1), 查找起始列)))
            到循环尾 ()
        .如果真结束
        赋值 (单元格类型, _启动窗口.未知支持库函数_61 (., 相减 (循环变量2, 1)))
        .如果真 (或者 (等于 (单元格类型, #.), 等于 (单元格类型, #.), 等于 (单元格类型, #.), 等于 (单元格类型, #.), 等于 (单元格类型, #.)))
            赋值 (单元格文本, 到文本 (_启动窗口.未知支持库函数_10 (., 相减 (循环变量1, 1), 相减 (循环变量2, 1))))
            赋值 (寻找文本位置, 寻找文本 (单元格文本, 欲查找的文本, 1, 取反 (是否区分大小写)))
            .如果真 (不等于 (寻找文本位置, -1))
                相减 (循环变量1, 1).未知支持库函数_0 (相减 (循环变量2, 1))
                相减 (循环变量1, 1).未知支持库函数_1 (相减 (循环变量2, 1), 相减 (循环变量1, 1), 相减 (循环变量2, 1))
                .如果真 (并且 (等于 (是否为空 (用作替换的文本), 假), 不等于 (用作替换的文本, “”)))
                    相减 (循环变量1, 1).未知支持库函数_9 (相减 (循环变量2, 1), #., 子文本替换 (单元格文本, 欲查找的文本, 用作替换的文本, 1, , 是否区分大小写))
                .如果真结束
                返回 (真)
            .如果真结束
            
        .如果真结束
        
    .计次循环尾 ()
.计次循环尾 ()
返回 (假)

.子程序 _查找下一个_被选择, 空白型, , 
.如果真 (等于 (上次查找的文本, “”))
    返回 ()
.如果真结束
.如果真 (等于 (查找替换 (上次查找的文本, 未知支持库函数_3 (), 相加 (未知支持库函数_4 (), 1), 上次查找是否区分大小写), 假))
    信息框 (相加 (“找不到”, #引号, 上次查找的文本, #引号), #信息图标, “没找到”)
.如果真结束


.子程序 _撤消_被选择, 空白型, , 
撤消 ()

.子程序 撤消, 空白型, , 
.如果真 (小于 (相加 (撤消次数, 1), 操作步数))
    赋值 (撤消次数, 相加 (撤消次数, 1))
    临时文件名组.未知支持库函数_56 ( [相减 (操作步数, 撤消次数)])
.如果真结束


.子程序 重复, 空白型, , 
.如果真 (大于或等于 (撤消次数, 1))
    赋值 (撤消次数, 相减 (撤消次数, 1))
    临时文件名组.未知支持库函数_56 ( [相减 (操作步数, 撤消次数)])
.如果真结束


.子程序 记录, 空白型, , 
.局部变量 循环变量, 整数型, , , 

赋值 (撤消次数, 0)
相加 (临时文件夹路径, “表格临时数据.tmp”).未知支持库函数_55 ()
赋值 (现行数据, 读入文件 (相加 (临时文件夹路径, “表格临时数据.tmp”)))
.如果真 (不等于 (操作步数, 0))
    赋值 (上次数据, 读入文件 (临时文件名组 [取数组成员数 (临时文件名组)]))
    .如果真 (等于 (现行数据, 上次数据))
        返回 ()
    .如果真结束
    
.如果真结束
.如果 (小于 (操作步数, 相加 (最大撤消数, 1)))
    赋值 (操作步数, 相加 (操作步数, 1))
    重定义数组 (临时文件名组, 真, 操作步数)
    赋值 (临时文件名组 [操作步数], 相加 (临时文件夹路径, “表格临时数据”, 到文本 (操作步数), “.tmp”))
    写到文件 (临时文件名组 [操作步数], 现行数据)
.否则
    删除文件 (临时文件名组 [1])
    .计次循环首 (相减 (取数组成员数 (临时文件名组), 1), 循环变量)
        文件更名 (临时文件名组 [相加 (循环变量, 1)], 临时文件名组 [循环变量])
    .计次循环尾 ()
    赋值 (临时文件名组 [操作步数], 相加 (临时文件夹路径, “表格临时数据”, 到文本 (操作步数), “.tmp”))
    写到文件 (临时文件名组 [操作步数], 现行数据)
.如果结束


.子程序 _重复_被选择, 空白型, , 
重复 ()

.子程序 __启动窗口_将被销毁, 空白型, , 
.局部变量 循环变量, 整数型, , , 

.计次循环首 (取数组成员数 (临时文件名组), 循环变量)
    删除文件 (临时文件名组 [循环变量])
.计次循环尾 ()
结束 ()

.子程序 _表格_结束编辑, 空白型, , 
记录 ()
赋值 (被编辑行号, -1)
赋值 (被编辑列号, -1)

.子程序 _表格属性_被选择, 空白型, , 
赋值 (表格属性窗口., 真)
赋值 (表格属性窗口..内容, 到文本 (.))
赋值 (表格属性窗口..内容, 到文本 (.))
赋值 (表格属性窗口..内容, 到文本 (.))
赋值 (表格属性窗口..内容, 到文本 (.))
赋值 (表格属性窗口..内容, 到文本 (未知支持库函数_3 ().未知支持库函数_43 ()))
赋值 (表格属性窗口..内容, 到文本 (未知支持库函数_4 ().未知支持库函数_44 ()))
赋值 (表格属性窗口..内容, 到文本 (.))
赋值 (表格属性窗口..内容, 到文本 (.))
赋值 (表格属性窗口..选中, .)
赋值 (表格属性窗口..选中, .)
赋值 (表格属性窗口..选中, .)
赋值 (表格属性窗口..颜色, .)
赋值 (表格属性窗口..颜色, .)
赋值 (表格属性窗口..颜色, .)
赋值 (表格属性窗口..颜色, .)
赋值 (表格属性窗口..现行选中项, .)
赋值 (表格属性窗口..颜色, .)
赋值 (表格属性窗口..选中, .)
赋值 (表格属性窗口..内容, 到文本 (最大撤消数))
表格属性窗口.获取焦点 ()


.子程序 _单元格颜色_被选择, 空白型, , 
赋值 (颜色窗口..颜色, 未知支持库函数_5 ().未知支持库函数_21 (未知支持库函数_6 ()))
赋值 (颜色窗口..颜色, 未知支持库函数_5 ().未知支持库函数_23 (未知支持库函数_6 ()))
赋值 (颜色窗口..内容, 到文本 (相加 (未知支持库函数_6 (), 1)))
赋值 (颜色窗口..内容, 到文本 (相加 (未知支持库函数_5 (), 1)))
赋值 (颜色窗口..内容, 到文本 (相加 (未知支持库函数_8 (), 1)))
赋值 (颜色窗口..内容, 到文本 (相加 (未知支持库函数_7 (), 1)))
赋值 (颜色窗口., 真)


.子程序 _选择_被选择, 空白型, , 
载入 (选择窗口, , 真)

.子程序 _全选_被选择, 空白型, , 
未知支持库函数_2 ()

.子程序 _添加多行_被选择, 空白型, , 
.局部变量 添加行数, 整数型, , , 
.局部变量 当前行, 整数型, , , 

.如果真 (等于 (输入框 (“输入要添加的行数”, “输入...”, , 添加行数, #输入整数), 真))
    赋值 (当前行, 未知支持库函数_3 ())
    
    .计次循环首 (添加行数, )
        “”.未知支持库函数_38 (相加 (当前行, 1))
    .计次循环尾 ()
.如果真结束


.子程序 _插入多行_被选择, 空白型, , 
.局部变量 插入行数, 整数型, , , 
.局部变量 当前行, 整数型, , , 

.如果真 (等于 (输入框 (“输入要插入的行数”, “输入...”, , 插入行数, #输入整数), 真))
    赋值 (当前行, 未知支持库函数_3 ())
    .计次循环首 (插入行数, )
        “”.未知支持库函数_38 (当前行)
    .计次循环尾 ()
.如果真结束


.子程序 _复制行_被选择, 空白型, , 
赋值 (欲复制起始行, 未知支持库函数_5 ())
赋值 (欲复制终止行, 未知支持库函数_7 ())

.子程序 _粘贴行_被选择, 空白型, , 
.局部变量 当前行号, 整数型, , , 
.局部变量 循环变量1, 整数型, , , 
.局部变量 循环变量2, 整数型, , , 
.局部变量 列类型, 整数型, , , 

赋值 (当前行号, 未知支持库函数_3 ())
.计次循环首 (相加 (相减 (欲复制终止行, 欲复制起始行), 1), 循环变量1)
    .未知支持库函数_38 (相加 (当前行号, 1))
    .计次循环首 (., 循环变量2)
        赋值 (列类型, 相减 (循环变量2, 1).未知支持库函数_61 ())
        .判断开始 (或者 (等于 (列类型, #.), 等于 (列类型, #.), 等于 (列类型, #.), 等于 (列类型, #.), 等于 (列类型, #.)))
            相加 (当前行号, 1).未知支持库函数_9 (相减 (循环变量2, 1), #., 相加 (相减 (欲复制终止行, 循环变量1), 1).未知支持库函数_10 (相减 (循环变量2, 1)))
        .判断 (等于 (列类型, #.))
            相加 (当前行号, 1).未知支持库函数_9 (相减 (循环变量2, 1), #., 相加 (相减 (欲复制终止行, 循环变量1), 1).未知支持库函数_10 (相减 (循环变量2, 1)))
        .默认
            .如果真 (等于 (列类型, #.))
                相加 (当前行号, 1).未知支持库函数_9 (相减 (循环变量2, 1), #., 相加 (相减 (欲复制终止行, 循环变量1), 1).未知支持库函数_10 (相减 (循环变量2, 1)))
            .如果真结束
            
        .判断结束
        
    .计次循环尾 ()
.计次循环尾 ()

.子程序 _添加列_被选择, 空白型, , 
.未知支持库函数_39 (相加 (未知支持库函数_4 (), 1))

.子程序 _插入列_被选择, 空白型, , 
.未知支持库函数_39 (未知支持库函数_4 ())

.子程序 _添加多列_被选择, 空白型, , 
.局部变量 添加列数, 整数型, , , 
.局部变量 当前列, 整数型, , , 

.如果真 (等于 (输入框 (“输入要添加的列数”, “输入...”, , 添加列数, #输入整数), 真))
    赋值 (当前列, 未知支持库函数_4 ())
    .计次循环首 (添加列数, )
        “”.未知支持库函数_39 (相加 (当前列, 1))
    .计次循环尾 ()
.如果真结束


.子程序 _插入多列_被选择, 空白型, , 
.局部变量 插入列数, 整数型, , , 
.局部变量 当前列, 整数型, , , 

.如果真 (等于 (输入框 (“输入要插入的列数”, “输入...”, , 插入列数, #输入整数), 真))
    赋值 (当前列, 未知支持库函数_4 ())
    .计次循环首 (插入列数, )
        “”.未知支持库函数_39 (当前列)
    .计次循环尾 ()
.如果真结束


.子程序 _删除列_被选择, 空白型, , 
.局部变量 循环变量, 整数型, , , 
.局部变量 起始选择列, 整数型, , , 

赋值 (起始选择列, 未知支持库函数_6 ())
.计次循环首 (相加 (相减 (未知支持库函数_8 (), 未知支持库函数_6 ()), 1), )
    起始选择列.未知支持库函数_37 ()
.计次循环尾 ()

.子程序 _复制列_被选择, 空白型, , 
赋值 (欲复制起始列, 未知支持库函数_6 ())
赋值 (欲复制终止列, 未知支持库函数_8 ())

.子程序 _粘贴列_被选择, 空白型, , 
.局部变量 当前列号, 整数型, , , 
.局部变量 循环变量1, 整数型, , , 
.局部变量 循环变量2, 整数型, , , 
.局部变量 列类型, 整数型, , , 

赋值 (当前列号, 未知支持库函数_4 ())
.计次循环首 (相加 (相减 (欲复制终止列, 欲复制起始列), 1), 循环变量1)
    .未知支持库函数_39 (相加 (当前列号, 1))
    相加 (当前列号, 1).未知支持库函数_30 (相加 (相减 (欲复制终止列, 循环变量1), 1).未知支持库函数_61 ())
    .计次循环首 (., 循环变量2)
        赋值 (列类型, 相加 (相减 (欲复制终止列, 循环变量1), 1).未知支持库函数_61 ())
        .判断开始 (或者 (等于 (列类型, #.), 等于 (列类型, #.), 等于 (列类型, #.), 等于 (列类型, #.), 等于 (列类型, #.)))
            相减 (循环变量2, 1).未知支持库函数_9 (相加 (当前列号, 1), #., 相减 (循环变量2, 1).未知支持库函数_10 (相加 (相减 (欲复制终止列, 循环变量1), 1)))
        .判断 (等于 (列类型, #.))
            相减 (循环变量2, 1).未知支持库函数_9 (相加 (当前列号, 1), #., 相减 (循环变量2, 1).未知支持库函数_10 (相加 (相减 (欲复制终止列, 循环变量1), 1)))
        .默认
            .如果真 (等于 (列类型, #.))
                相减 (循环变量2, 1).未知支持库函数_9 (相加 (当前列号, 1), #., 相减 (循环变量2, 1).未知支持库函数_10 (相加 (相减 (欲复制终止列, 循环变量1), 1)))
            .如果真结束
            
        .判断结束
        
    .计次循环尾 ()
.计次循环尾 ()


.子程序 _文本型_被选择, 空白型, , 
置列类型 (#.)

.子程序 _数值型_被选择, 空白型, , 
置列类型 (#.)


.子程序 _日期型_被选择, 空白型, , 
置列类型 (#.)


.子程序 _列表型_被选择, 空白型, , 
置列类型 (#.)


.子程序 _复选型_被选择, 空白型, , 
置列类型 (#.)


.子程序 _图片型_被选择, 空白型, , 
置列类型 (#.)


.子程序 _货币型_被选择, 空白型, , 
置列类型 (#.)


.子程序 置列类型, 空白型, , 
.参数 列类型, 整数型, , 

.局部变量 循环变量, 整数型, , , 
.局部变量 选择起始列, 整数型, , , 

赋值 (选择起始列, 未知支持库函数_6 ())
.计次循环首 (相加 (相减 (未知支持库函数_8 (), 选择起始列), 1), 循环变量)
    相减 (相加 (选择起始列, 循环变量), 1).未知支持库函数_30 (列类型)
.计次循环尾 ()

.子程序 _长日期格式_被选择, 空白型, , 
置日期格式 (#.)

.子程序 _短日期格式1_被选择, 空白型, , 
置日期格式 (#.)

.子程序 _短日期格式2_被选择, 空白型, , 
置日期格式 (#.)

.子程序 _短日期格式3分隔_被选择, 空白型, , 
置日期格式 (#.)

.子程序 _美式格式1_被选择, 空白型, , 
置日期格式 (#.)

.子程序 _美式格式2_被选择, 空白型, , 
置日期格式 (#.)

.子程序 _美式格式3_被选择, 空白型, , 
置日期格式 (#.)

.子程序 _美式格式4_被选择, 空白型, , 
置日期格式 (#.)

.子程序 置日期格式, 空白型, , 
.参数 格式, 整数型, , 

.局部变量 循环变量, 整数型, , , 
.局部变量 选择起始列, 整数型, , , 

赋值 (选择起始列, 未知支持库函数_6 ())
.计次循环首 (相加 (相减 (未知支持库函数_8 (), 选择起始列), 1), 循环变量)
    相减 (相加 (选择起始列, 循环变量), 1).未知支持库函数_33 (格式)
.计次循环尾 ()


.子程序 取扩展名, 文本型, , 
.参数 文件, 文本型, , 

返回 (到大写 (取文本右边 (文件, 相减 (取文本长度 (文件), 倒找文本 (文件, “.”, , 假)))))

.子程序 _人民币_被选择, 空白型, , 
置货币前缀 (#., )

.子程序 _美元_被选择, 空白型, , 
置货币前缀 (#., )

.子程序 _欧元_被选择, 空白型, , 
置货币前缀 (#., )

.子程序 _英镑_被选择, 空白型, , 
置货币前缀 (#., )

.子程序 _自定义_被选择, 空白型, , 
.局部变量 货币定义, 文本型, , , 

.如果真 (输入框 (“请输入货币前缀:”, “货币前缀设置”, “$”, 货币定义, #输入文本))
    置货币前缀 (#., 货币定义)
.如果真结束


.子程序 置货币前缀, 空白型, , 
.参数 货币类型, 整数型, , 
.参数 自定义前缀, 文本型, 可空, 

.局部变量 循环变量, 整数型, , , 
.局部变量 选择起始列, 整数型, , , 

赋值 (选择起始列, 未知支持库函数_6 ())
.计次循环首 (相加 (相减 (未知支持库函数_8 (), 选择起始列), 1), 循环变量)
    相减 (相加 (选择起始列, 循环变量), 1).未知支持库函数_34 (货币类型, 自定义前缀)
.计次循环尾 ()


.子程序 _平铺_被选择, 空白型, , 
未知支持库函数_4 ().未知支持库函数_35 (#.)

.子程序 _拉伸_被选择, 空白型, , 
未知支持库函数_4 ().未知支持库函数_35 (#.)

.子程序 _居中_被选择, 空白型, , 
未知支持库函数_4 ().未知支持库函数_35 (#.)

.子程序 _左上角_被选择, 空白型, , 
未知支持库函数_4 ().未知支持库函数_35 (#.)

.子程序 _适合大小_被选择, 空白型, , 
未知支持库函数_4 ().未知支持库函数_35 (#.)

.子程序 _单元格字体_被选择, 空白型, , 
.局部变量 字体属性, 整数型, , , 

赋值 (字体属性, 未知支持库函数_3 ().未知支持库函数_19 (未知支持库函数_4 ()))
赋值 (.字体名称, 未知支持库函数_3 ().未知支持库函数_15 (未知支持库函数_4 ()))
赋值 (.字体大小, 未知支持库函数_3 ().未知支持库函数_17 (未知支持库函数_4 ()))
赋值 (.字体颜色, 未知支持库函数_3 ().未知支持库函数_21 (未知支持库函数_4 ()))
.如果真 (等于 (位与 (字体属性, #粗体), #粗体))
    赋值 (.加粗, 真)
.如果真结束
.如果真 (等于 (位与 (字体属性, #斜体), #斜体))
    赋值 (.倾斜, 真)
.如果真结束
.如果真 (等于 (位与 (字体属性, #下划线), #下划线))
    赋值 (.下划线, 真)
.如果真结束
.如果真 (等于 (位与 (字体属性, #删除线), #删除线))
    赋值 (.删除线, 真)
.如果真结束
.如果真 (等于 (打开 (), 真))
    赋值 (字体属性, 0)
    .如果真 (等于 (.加粗, 真))
        赋值 (字体属性, 相加 (字体属性, #粗体))
    .如果真结束
    .如果真 (等于 (.倾斜, 真))
        赋值 (字体属性, 相加 (字体属性, #斜体))
    .如果真结束
    .如果真 (等于 (.删除线, 真))
        赋值 (字体属性, 相加 (字体属性, #删除线))
    .如果真结束
    .如果真 (等于 (.下划线, 真))
        赋值 (字体属性, 相加 (字体属性, #下划线))
    .如果真结束
    未知支持库函数_5 ().未知支持库函数_20 (未知支持库函数_6 (), 未知支持库函数_7 (), 未知支持库函数_8 (), 字体属性)
    未知支持库函数_5 ().未知支持库函数_16 (未知支持库函数_6 (), 未知支持库函数_7 (), 未知支持库函数_8 (), .字体名称)
    未知支持库函数_5 ().未知支持库函数_18 (未知支持库函数_6 (), 未知支持库函数_7 (), 未知支持库函数_8 (), .字体大小)
    未知支持库函数_3 ().未知支持库函数_22 (未知支持库函数_4 (), 未知支持库函数_3 (), 未知支持库函数_4 (), .字体颜色)
.如果真结束


.子程序 _边距_被选择, 空白型, , 
.局部变量 新边距, 整数型, , , 

.如果真 (等于 (输入框 (“输入新边距：”, “输入”, 到文本 (未知支持库函数_5 ().未知支持库函数_50 (未知支持库函数_6 ())), 新边距, #输入整数), 真))
    未知支持库函数_5 ().未知支持库函数_49 (未知支持库函数_6 (), 未知支持库函数_7 (), 未知支持库函数_8 (), 新边距)
.如果真结束


.子程序 _密码方式_被选择, 空白型, , 
未知支持库函数_5 ().未知支持库函数_51 (未知支持库函数_6 (), 未知支持库函数_7 (), 未知支持库函数_8 (), 取反 (.选中))
赋值 (.选中, 未知支持库函数_5 ().未知支持库函数_52 (未知支持库函数_6 ()))

.子程序 _只读方式_被选择, 空白型, , 
未知支持库函数_5 ().未知支持库函数_53 (未知支持库函数_6 (), 未知支持库函数_7 (), 未知支持库函数_8 (), 取反 (.选中))
赋值 (.选中, 未知支持库函数_5 ().未知支持库函数_54 (未知支持库函数_8 ()))

.子程序 _表格_光标位置改变, 空白型, , 
.局部变量 字体属性, 整数型, , , 

赋值 (.选中, 未知支持库函数_3 ().未知支持库函数_52 (未知支持库函数_4 ()))
赋值 (.选中, 未知支持库函数_3 ().未知支持库函数_54 (未知支持库函数_4 ()))
判断列类型 ()
赋值 (.禁止, 假)
赋值 (字体属性, 未知支持库函数_3 ().未知支持库函数_19 (未知支持库函数_4 ()))
.如果 (等于 (位与 (#粗体, 字体属性), #粗体))
    1.加入状态 (#选中)
.否则
    1.去除状态 (#选中)
.如果结束
.如果 (等于 (位与 (#斜体, 字体属性), #斜体))
    2.加入状态 (#选中)
.否则
    2.去除状态 (#选中)
.如果结束
.如果 (等于 (位与 (#下划线, 字体属性), #下划线))
    3.加入状态 (#选中)
.否则
    3.去除状态 (#选中)
.如果结束
赋值 (.内容, 到文本 (未知支持库函数_3 ().未知支持库函数_17 (未知支持库函数_4 ())))
赋值 (.颜色, 未知支持库函数_3 ().未知支持库函数_21 (未知支持库函数_4 ()))
赋值 (.颜色, 未知支持库函数_3 ().未知支持库函数_23 (未知支持库函数_4 ()))

.子程序 判断列类型, 空白型, , 
.判断开始 (等于 (未知支持库函数_4 ().未知支持库函数_61 (), #.))
    赋值 (.选中, 真)
    连续赋值 (假, .选中, .选中, .选中, .选中, .选中, .选中)
.判断 (等于 (未知支持库函数_4 ().未知支持库函数_61 (), #.))
    赋值 (.选中, 真)
    连续赋值 (假, .选中, .选中, .选中, .选中, .选中, .选中)
.判断 (等于 (未知支持库函数_4 ().未知支持库函数_61 (), #.))
    赋值 (.选中, 真)
    连续赋值 (假, .选中, .选中, .选中, .选中, .选中, .选中)
.判断 (等于 (未知支持库函数_4 ().未知支持库函数_61 (), #.))
    赋值 (.选中, 真)
    连续赋值 (假, .选中, .选中, .选中, .选中, .选中, .选中)
.判断 (等于 (未知支持库函数_4 ().未知支持库函数_61 (), #.))
    赋值 (.选中, 真)
    连续赋值 (假, .选中, .选中, .选中, .选中, .选中, .选中)
.判断 (等于 (未知支持库函数_4 ().未知支持库函数_61 (), #.))
    赋值 (.选中, 真)
    连续赋值 (假, .选中, .选中, .选中, .选中, .选中, .选中)
.默认
    .如果真 (等于 (未知支持库函数_4 ().未知支持库函数_61 (), #.))
        赋值 (.选中, 真)
        连续赋值 (假, .选中, .选中, .选中, .选中, .选中, .选中)
    .如果真结束
    
.判断结束


.子程序 _加线条_被选择, 空白型, , 
.局部变量 线条类型, 整数型, , , 

.如果真 (等于 (输入框 (“输入欲加线条的类型。1为斜线，2为双斜线，3为交叉线。”, “输入...”, “1”, 线条类型, #输入整数), 真))
    未知支持库函数_3 ().未知支持库函数_47 (未知支持库函数_4 (), 线条类型)
.如果真结束


.子程序 _删线条_被选择, 空白型, , 
未知支持库函数_3 ().未知支持库函数_48 (未知支持库函数_4 ())

.子程序 _计算器_被选择, 空白型, , 
.局部变量 列类型, 整数型, , , 

载入 (计算器窗口, , 假)
赋值 (列类型, 未知支持库函数_4 ().未知支持库函数_61 ())
.如果真 (或者 (等于 (列类型, #.), 等于 (列类型, #.), 等于 (列类型, #.)))
    赋值 (计算器窗口..标题, 到文本 (到数值 (未知支持库函数_3 ().未知支持库函数_10 (未知支持库函数_4 ()))))
.如果真结束


.子程序 _公历农历_被选择, 空白型, , 
.局部变量 列类型, 整数型, , , 

载入 (日历窗口, , 假)
赋值 (列类型, 未知支持库函数_4 ().未知支持库函数_61 ())
.如果真 (等于 (列类型, #.))
    赋值 (日历窗口..今天, 到时间 (未知支持库函数_3 ().未知支持库函数_10 (未知支持库函数_4 ())))
.如果真结束
日历窗口.获取焦点 ()

.子程序 _编码转换_被选择, 空白型, , 
载入 (文字编码窗口, , 假)

.子程序 _图示数据_被选择, 空白型, , 
载入 (图示窗口, , 假)

.子程序 _表格_将被编辑, 空白型, , 
赋值 (被编辑行号, 未知支持库函数_3 ())
赋值 (被编辑列号, 未知支持库函数_4 ())

.子程序 _关于_被选择, 空白型, , 


.子程序 _工具条2_被单击, 空白型, , 
.参数 按钮索引, 整数型, , 

.判断开始 (等于 (按钮索引, 1))
    _计算器_被选择 ()
.判断 (等于 (按钮索引, 2))
    _公历农历_被选择 ()
.判断 (等于 (按钮索引, 7))
    _插入行_被选择 ()
.判断 (等于 (按钮索引, 8))
    _添加行_被选择 ()
.判断 (等于 (按钮索引, 9))
    _删除行_被选择 ()
.判断 (等于 (按钮索引, 10))
    _插入多行_被选择 ()
.判断 (等于 (按钮索引, 11))
    _添加多行_被选择 ()
.判断 (等于 (按钮索引, 12))
    _插入列_被选择 ()
.判断 (等于 (按钮索引, 13))
    _添加列_被选择 ()
.判断 (等于 (按钮索引, 14))
    _删除列_被选择 ()
.判断 (等于 (按钮索引, 15))
    _插入多列_被选择 ()
.判断 (等于 (按钮索引, 16))
    _添加多列_被选择 ()
.判断 (等于 (按钮索引, 18))
    赋值 (., 18)
.判断 (等于 (按钮索引, 19))
    赋值 (., 60)
.默认
    
.判断结束


.子程序 _工具条2_被下拉, 空白型, , 
.参数 按钮索引, 整数型, , 
.参数 下拉横座标, 整数型, , 
.参数 下拉纵座标, 整数型, , 

.判断开始 (等于 (按钮索引, 4))
    弹出菜单 (下拉横座标, 下拉纵座标)
.判断 (等于 (按钮索引, 5))
    弹出菜单 (下拉横座标, 下拉纵座标)
.默认
    
.判断结束


.子程序 _工具条3_被单击, 空白型, , 
.参数 按钮索引, 整数型, , 

.判断开始 (等于 (按钮索引, 1))
    .如果 (等于 (1.取状态 (), #选中))
        未知支持库函数_5 ().未知支持库函数_20 (未知支持库函数_6 (), 未知支持库函数_7 (), 未知支持库函数_8 (), 相加 (未知支持库函数_5 ().未知支持库函数_19 (未知支持库函数_6 ()), #粗体))
    .否则
        未知支持库函数_5 ().未知支持库函数_20 (未知支持库函数_6 (), 未知支持库函数_7 (), 未知支持库函数_8 (), 相减 (未知支持库函数_5 ().未知支持库函数_19 (未知支持库函数_6 ()), #粗体))
        
    .如果结束
    
.判断 (等于 (按钮索引, 2))
    .如果 (等于 (2.取状态 (), #选中))
        未知支持库函数_5 ().未知支持库函数_20 (未知支持库函数_6 (), 未知支持库函数_7 (), 未知支持库函数_8 (), 相加 (未知支持库函数_5 ().未知支持库函数_19 (未知支持库函数_6 ()), #斜体))
    .否则
        未知支持库函数_5 ().未知支持库函数_20 (未知支持库函数_6 (), 未知支持库函数_7 (), 未知支持库函数_8 (), 相减 (未知支持库函数_5 ().未知支持库函数_19 (未知支持库函数_6 ()), #斜体))
    .如果结束
    
.判断 (等于 (按钮索引, 3))
    .如果 (等于 (3.取状态 (), #选中))
        未知支持库函数_5 ().未知支持库函数_20 (未知支持库函数_6 (), 未知支持库函数_7 (), 未知支持库函数_8 (), 相加 (未知支持库函数_5 ().未知支持库函数_19 (未知支持库函数_6 ()), #下划线))
    .否则
        未知支持库函数_5 ().未知支持库函数_20 (未知支持库函数_6 (), 未知支持库函数_7 (), 未知支持库函数_8 (), 相减 (未知支持库函数_5 ().未知支持库函数_19 (未知支持库函数_6 ()), #下划线))
    .如果结束
    
.默认
    
.判断结束


.子程序 _单斜线_被选择, 空白型, , 
未知支持库函数_3 ().未知支持库函数_47 (未知支持库函数_4 (), #.)

.子程序 _双斜线_被选择, 空白型, , 
未知支持库函数_3 ().未知支持库函数_47 (未知支持库函数_4 (), #.)


.子程序 _交叉线_被选择, 空白型, , 
未知支持库函数_3 ().未知支持库函数_47 (未知支持库函数_4 (), #.)


.子程序 _工具条3_被下拉, 空白型, , 
.参数 按钮索引, 整数型, , 
.参数 下拉横座标, 整数型, , 
.参数 下拉纵座标, 整数型, , 

.判断开始 (等于 (按钮索引, 4))
    弹出菜单 (下拉横座标, 下拉纵座标)
.默认
    
.判断结束


.子程序 _字号组合框_列表项被选择, 空白型, , 
未知支持库函数_5 ().未知支持库函数_18 (未知支持库函数_6 (), 未知支持库函数_7 (), 未知支持库函数_8 (), 到数值 (.内容))

.子程序 _文本颜色选择器_颜色被改变, 空白型, , 
未知支持库函数_7 ().未知支持库函数_22 (未知支持库函数_6 (), 未知支持库函数_7 (), 未知支持库函数_8 (), .颜色)

.子程序 _背景颜色颜色选择器_颜色被改变, 空白型, , 
未知支持库函数_5 ().未知支持库函数_24 (未知支持库函数_6 (), 未知支持库函数_7 (), 未知支持库函数_8 (), .颜色)

.子程序 _水平计算累计值_被选择, 空白型, , 
.局部变量 选择起始行, 整数型, , , 
.局部变量 选择起始列, 整数型, , , 
.局部变量 选择终止行, 整数型, , , 
.局部变量 选择终止列, 整数型, , , 
.局部变量 累计值, 双精度小数型, , , 
.局部变量 记次变量1, 整数型, , , 
.局部变量 记次变量2, 整数型, , , 

赋值 (选择起始行, 未知支持库函数_5 ())
赋值 (选择起始列, 未知支持库函数_6 ())
赋值 (选择终止行, 未知支持库函数_7 ())
赋值 (选择终止列, 未知支持库函数_8 ())
.计次循环首 (相加 (相减 (选择终止行, 选择起始行), 1), 记次变量1)
    .计次循环首 (相加 (相减 (选择终止列, 选择起始列), 1), 记次变量2)
        赋值 (累计值, 相加 (累计值, 到数值 (相减 (相加 (选择起始行, 记次变量1), 1).未知支持库函数_10 (相减 (相加 (选择起始列, 记次变量2), 1)))))
    .计次循环尾 ()
    相减 (相加 (选择起始行, 记次变量1), 1).未知支持库函数_9 (相加 (选择终止列, 1), #., 到文本 (累计值))
    赋值 (累计值, 0)
.计次循环尾 ()

.子程序 _水平计算平均值_被选择, 空白型, , 
.局部变量 选择起始行, 整数型, , , 
.局部变量 选择起始列, 整数型, , , 
.局部变量 选择终止行, 整数型, , , 
.局部变量 选择终止列, 整数型, , , 
.局部变量 累加值, 双精度小数型, , , 
.局部变量 记次变量1, 整数型, , , 
.局部变量 记次变量2, 整数型, , , 

赋值 (选择起始行, 未知支持库函数_5 ())
赋值 (选择起始列, 未知支持库函数_6 ())
赋值 (选择终止行, 未知支持库函数_7 ())
赋值 (选择终止列, 未知支持库函数_8 ())
.计次循环首 (相加 (相减 (选择终止行, 选择起始行), 1), 记次变量1)
    .计次循环首 (相加 (相减 (选择终止列, 选择起始列), 1), 记次变量2)
        赋值 (累加值, 相加 (累加值, 到数值 (相减 (相加 (选择起始行, 记次变量1), 1).未知支持库函数_10 (相减 (相加 (选择起始列, 记次变量2), 1)))))
    .计次循环尾 ()
    相减 (相加 (选择起始行, 记次变量1), 1).未知支持库函数_9 (相加 (选择终止列, 1), #., 到文本 (相除 (累加值, 相加 (相减 (选择终止列, 选择起始列), 1))))
    赋值 (累加值, 0)
.计次循环尾 ()

.子程序 _水平计算最大值_被选择, 空白型, , 
.局部变量 选择起始行, 整数型, , , 
.局部变量 选择起始列, 整数型, , , 
.局部变量 选择终止行, 整数型, , , 
.局部变量 选择终止列, 整数型, , , 
.局部变量 当前值, 双精度小数型, , , 
.局部变量 最大值, 双精度小数型, , , 
.局部变量 记次变量1, 整数型, , , 
.局部变量 记次变量2, 整数型, , , 

赋值 (选择起始行, 未知支持库函数_5 ())
赋值 (选择起始列, 未知支持库函数_6 ())
赋值 (选择终止行, 未知支持库函数_7 ())
赋值 (选择终止列, 未知支持库函数_8 ())
.计次循环首 (相加 (相减 (选择终止行, 选择起始行), 1), 记次变量1)
    .计次循环首 (相加 (相减 (选择终止列, 选择起始列), 1), 记次变量2)
        赋值 (当前值, 到数值 (相减 (相加 (选择起始行, 记次变量1), 1).未知支持库函数_10 (相减 (相加 (选择起始列, 记次变量2), 1))))
        .如果真 (等于 (记次变量2, 1))
            赋值 (最大值, 当前值)
        .如果真结束
        .如果真 (大于 (当前值, 最大值))
            赋值 (最大值, 当前值)
        .如果真结束
        
    .计次循环尾 ()
    相减 (相加 (选择起始行, 记次变量1), 1).未知支持库函数_9 (相加 (选择终止列, 1), #., 到文本 (最大值))
.计次循环尾 ()


.子程序 _水平计算最小值_被选择, 空白型, , 
.局部变量 选择起始行, 整数型, , , 
.局部变量 选择起始列, 整数型, , , 
.局部变量 选择终止行, 整数型, , , 
.局部变量 选择终止列, 整数型, , , 
.局部变量 当前值, 双精度小数型, , , 
.局部变量 最小值, 双精度小数型, , , 
.局部变量 记次变量1, 整数型, , , 
.局部变量 记次变量2, 整数型, , , 

赋值 (选择起始行, 未知支持库函数_5 ())
赋值 (选择起始列, 未知支持库函数_6 ())
赋值 (选择终止行, 未知支持库函数_7 ())
赋值 (选择终止列, 未知支持库函数_8 ())
.计次循环首 (相加 (相减 (选择终止行, 选择起始行), 1), 记次变量1)
    .计次循环首 (相加 (相减 (选择终止列, 选择起始列), 1), 记次变量2)
        赋值 (当前值, 到数值 (相减 (相加 (选择起始行, 记次变量1), 1).未知支持库函数_10 (相减 (相加 (选择起始列, 记次变量2), 1))))
        .如果真 (等于 (记次变量2, 1))
            赋值 (最小值, 当前值)
        .如果真结束
        .如果真 (小于 (当前值, 最小值))
            赋值 (最小值, 当前值)
        .如果真结束
        
    .计次循环尾 ()
    相减 (相加 (选择起始行, 记次变量1), 1).未知支持库函数_9 (相加 (选择终止列, 1), #., 到文本 (最小值))
.计次循环尾 ()


.子程序 _选定列数_被选择, 空白型, , 
.局部变量 选择起始行, 整数型, , , 
.局部变量 选择起始列, 整数型, , , 
.局部变量 选择终止行, 整数型, , , 
.局部变量 选择终止列, 整数型, , , 
.局部变量 记次变量1, 整数型, , , 

赋值 (选择起始行, 未知支持库函数_5 ())
赋值 (选择起始列, 未知支持库函数_6 ())
赋值 (选择终止行, 未知支持库函数_7 ())
赋值 (选择终止列, 未知支持库函数_8 ())
.计次循环首 (相加 (相减 (选择终止行, 选择起始行), 1), 记次变量1)
    相减 (相加 (选择起始行, 记次变量1), 1).未知支持库函数_9 (相加 (选择终止列, 1), #., 到文本 (相加 (相减 (选择终止列, 选择起始列), 1)))
.计次循环尾 ()


.子程序 _垂直计算累计值_被选择, 空白型, , 
.局部变量 选择起始行, 整数型, , , 
.局部变量 选择起始列, 整数型, , , 
.局部变量 选择终止行, 整数型, , , 
.局部变量 选择终止列, 整数型, , , 
.局部变量 累加值, 双精度小数型, , , 
.局部变量 记次变量1, 整数型, , , 
.局部变量 记次变量2, 整数型, , , 

赋值 (选择起始行, 未知支持库函数_5 ())
赋值 (选择起始列, 未知支持库函数_6 ())
赋值 (选择终止行, 未知支持库函数_7 ())
赋值 (选择终止列, 未知支持库函数_8 ())
.计次循环首 (相加 (相减 (选择终止列, 选择起始列), 1), 记次变量1)
    .计次循环首 (相加 (相减 (选择终止行, 选择起始行), 1), 记次变量2)
        赋值 (累加值, 相加 (累加值, 到数值 (相减 (相加 (选择起始行, 记次变量2), 1).未知支持库函数_10 (相减 (相加 (选择起始列, 记次变量1), 1)))))
    .计次循环尾 ()
    相加 (选择终止行, 1).未知支持库函数_9 (相减 (相加 (选择起始列, 记次变量1), 1), #., 到文本 (累加值))
    赋值 (累加值, 0)
.计次循环尾 ()


.子程序 _垂直计算平均值_被选择, 空白型, , 
.局部变量 选择起始行, 整数型, , , 
.局部变量 选择起始列, 整数型, , , 
.局部变量 选择终止行, 整数型, , , 
.局部变量 选择终止列, 整数型, , , 
.局部变量 累加值, 双精度小数型, , , 
.局部变量 记次变量1, 整数型, , , 
.局部变量 记次变量2, 整数型, , , 

赋值 (选择起始行, 未知支持库函数_5 ())
赋值 (选择起始列, 未知支持库函数_6 ())
赋值 (选择终止行, 未知支持库函数_7 ())
赋值 (选择终止列, 未知支持库函数_8 ())
.计次循环首 (相加 (相减 (选择终止列, 选择起始列), 1), 记次变量1)
    .计次循环首 (相加 (相减 (选择终止行, 选择起始行), 1), 记次变量2)
        赋值 (累加值, 相加 (累加值, 到数值 (相减 (相加 (选择起始行, 记次变量2), 1).未知支持库函数_10 (相减 (相加 (选择起始列, 记次变量1), 1)))))
    .计次循环尾 ()
    相加 (选择终止行, 1).未知支持库函数_9 (相减 (相加 (选择起始列, 记次变量1), 1), #., 到文本 (相除 (累加值, 相加 (相减 (选择终止行, 选择起始行), 1))))
    赋值 (累加值, 0)
.计次循环尾 ()

.子程序 _垂直计算最大值_被选择, 空白型, , 
.局部变量 选择起始行, 整数型, , , 
.局部变量 选择起始列, 整数型, , , 
.局部变量 选择终止行, 整数型, , , 
.局部变量 选择终止列, 整数型, , , 
.局部变量 当前值, 双精度小数型, , , 
.局部变量 最大值, 双精度小数型, , , 
.局部变量 记次变量1, 整数型, , , 
.局部变量 记次变量2, 整数型, , , 

赋值 (选择起始行, 未知支持库函数_5 ())
赋值 (选择起始列, 未知支持库函数_6 ())
赋值 (选择终止行, 未知支持库函数_7 ())
赋值 (选择终止列, 未知支持库函数_8 ())
.计次循环首 (相加 (相减 (选择终止列, 选择起始列), 1), 记次变量1)
    .计次循环首 (相加 (相减 (选择终止行, 选择起始行), 1), 记次变量2)
        赋值 (当前值, 到数值 (相减 (相加 (选择起始行, 记次变量2), 1).未知支持库函数_10 (相减 (相加 (选择起始列, 记次变量1), 1))))
        .如果真 (等于 (记次变量2, 1))
            赋值 (最大值, 当前值)
        .如果真结束
        .如果真 (大于 (当前值, 最大值))
            赋值 (最大值, 当前值)
        .如果真结束
        
    .计次循环尾 ()
    相加 (选择终止行, 1).未知支持库函数_9 (相减 (相加 (选择起始列, 记次变量1), 1), #., 到文本 (最大值))
.计次循环尾 ()

.子程序 _垂直计算最小值_被选择, 空白型, , 
.局部变量 选择起始行, 整数型, , , 
.局部变量 选择起始列, 整数型, , , 
.局部变量 选择终止行, 整数型, , , 
.局部变量 选择终止列, 整数型, , , 
.局部变量 当前值, 双精度小数型, , , 
.局部变量 最小值, 双精度小数型, , , 
.局部变量 记次变量1, 整数型, , , 
.局部变量 记次变量2, 整数型, , , 

赋值 (选择起始行, 未知支持库函数_5 ())
赋值 (选择起始列, 未知支持库函数_6 ())
赋值 (选择终止行, 未知支持库函数_7 ())
赋值 (选择终止列, 未知支持库函数_8 ())
.计次循环首 (相加 (相减 (选择终止列, 选择起始列), 1), 记次变量1)
    .计次循环首 (相加 (相减 (选择终止行, 选择起始行), 1), 记次变量2)
        赋值 (当前值, 到数值 (相减 (相加 (选择起始行, 记次变量2), 1).未知支持库函数_10 (相减 (相加 (选择起始列, 记次变量1), 1))))
        .如果真 (等于 (记次变量2, 1))
            赋值 (最小值, 当前值)
        .如果真结束
        .如果真 (小于 (当前值, 最小值))
            赋值 (最小值, 当前值)
        .如果真结束
        
    .计次循环尾 ()
    相加 (选择终止行, 1).未知支持库函数_9 (相减 (相加 (选择起始列, 记次变量1), 1), #., 到文本 (最小值))
.计次循环尾 ()


.子程序 _选定行数_被选择, 空白型, , 
.局部变量 选择起始行, 整数型, , , 
.局部变量 选择起始列, 整数型, , , 
.局部变量 选择终止行, 整数型, , , 
.局部变量 选择终止列, 整数型, , , 
.局部变量 记次变量1, 整数型, , , 

赋值 (选择起始行, 未知支持库函数_5 ())
赋值 (选择起始列, 未知支持库函数_6 ())
赋值 (选择终止行, 未知支持库函数_7 ())
赋值 (选择终止列, 未知支持库函数_8 ())
.计次循环首 (相加 (相减 (选择终止列, 选择起始列), 1), 记次变量1)
    相加 (选择终止行, 1).未知支持库函数_9 (相减 (相加 (选择起始列, 记次变量1), 1), #., 到文本 (相加 (相减 (选择终止行, 选择起始行), 1)))
.计次循环尾 ()


.子程序 _双向计算累计值_被选择, 空白型, , 
.局部变量 选择起始行, 整数型, , , 
.局部变量 选择起始列, 整数型, , , 
.局部变量 选择终止行, 整数型, , , 
.局部变量 选择终止列, 整数型, , , 
.局部变量 当前值, 双精度小数型, , , 
.局部变量 累计值, 双精度小数型, , , 
.局部变量 记次变量1, 整数型, , , 
.局部变量 记次变量2, 整数型, , , 

赋值 (选择起始行, 未知支持库函数_5 ())
赋值 (选择起始列, 未知支持库函数_6 ())
赋值 (选择终止行, 未知支持库函数_7 ())
赋值 (选择终止列, 未知支持库函数_8 ())
.计次循环首 (相加 (相减 (选择终止列, 选择起始列), 1), 记次变量1)
    .计次循环首 (相加 (相减 (选择终止行, 选择起始行), 1), 记次变量2)
        赋值 (当前值, 到数值 (相减 (相加 (选择起始行, 记次变量2), 1).未知支持库函数_10 (相减 (相加 (选择起始列, 记次变量1), 1))))
        赋值 (累计值, 相加 (累计值, 当前值))
    .计次循环尾 ()
.计次循环尾 ()
相加 (选择终止行, 1).未知支持库函数_9 (相加 (选择终止列, 1), #., 到文本 (累计值))


.子程序 _双向计算平均值_被选择, 空白型, , 
.局部变量 选择起始行, 整数型, , , 
.局部变量 选择起始列, 整数型, , , 
.局部变量 选择终止行, 整数型, , , 
.局部变量 选择终止列, 整数型, , , 
.局部变量 当前值, 双精度小数型, , , 
.局部变量 累计值, 双精度小数型, , , 
.局部变量 记次变量1, 整数型, , , 
.局部变量 记次变量2, 整数型, , , 

赋值 (选择起始行, 未知支持库函数_5 ())
赋值 (选择起始列, 未知支持库函数_6 ())
赋值 (选择终止行, 未知支持库函数_7 ())
赋值 (选择终止列, 未知支持库函数_8 ())
.计次循环首 (相加 (相减 (选择终止列, 选择起始列), 1), 记次变量1)
    .计次循环首 (相加 (相减 (选择终止行, 选择起始行), 1), 记次变量2)
        赋值 (当前值, 到数值 (相减 (相加 (选择起始行, 记次变量2), 1).未知支持库函数_10 (相减 (相加 (选择起始列, 记次变量1), 1))))
        赋值 (累计值, 相加 (累计值, 当前值))
    .计次循环尾 ()
.计次循环尾 ()
相加 (选择终止行, 1).未知支持库函数_9 (相加 (选择终止列, 1), #., 到文本 (相除 (累计值, 相乘 (相加 (相减 (选择终止行, 选择起始行), 1), 相加 (相减 (选择终止列, 选择起始列), 1)))))


.子程序 _双向计算最大值_被选择, 空白型, , 
.局部变量 选择起始行, 整数型, , , 
.局部变量 选择起始列, 整数型, , , 
.局部变量 选择终止行, 整数型, , , 
.局部变量 选择终止列, 整数型, , , 
.局部变量 当前值, 双精度小数型, , , 
.局部变量 最大值, 双精度小数型, , , 
.局部变量 记次变量1, 整数型, , , 
.局部变量 记次变量2, 整数型, , , 

赋值 (选择起始行, 未知支持库函数_5 ())
赋值 (选择起始列, 未知支持库函数_6 ())
赋值 (选择终止行, 未知支持库函数_7 ())
赋值 (选择终止列, 未知支持库函数_8 ())
.计次循环首 (相加 (相减 (选择终止列, 选择起始列), 1), 记次变量1)
    .计次循环首 (相加 (相减 (选择终止行, 选择起始行), 1), 记次变量2)
        赋值 (当前值, 到数值 (相减 (相加 (选择起始行, 记次变量2), 1).未知支持库函数_10 (相减 (相加 (选择起始列, 记次变量1), 1))))
        .如果真 (并且 (等于 (记次变量1, 1), 等于 (记次变量2, 1)))
            赋值 (最大值, 当前值)
        .如果真结束
        .如果真 (大于 (当前值, 最大值))
            赋值 (最大值, 当前值)
        .如果真结束
        
    .计次循环尾 ()
.计次循环尾 ()
相加 (选择终止行, 1).未知支持库函数_9 (相加 (选择终止列, 1), #., 到文本 (最大值))


.子程序 _双向计算最小值_被选择, 空白型, , 
.局部变量 选择起始行, 整数型, , , 
.局部变量 选择起始列, 整数型, , , 
.局部变量 选择终止行, 整数型, , , 
.局部变量 选择终止列, 整数型, , , 
.局部变量 当前值, 双精度小数型, , , 
.局部变量 最小值, 双精度小数型, , , 
.局部变量 记次变量1, 整数型, , , 
.局部变量 记次变量2, 整数型, , , 

赋值 (选择起始行, 未知支持库函数_5 ())
赋值 (选择起始列, 未知支持库函数_6 ())
赋值 (选择终止行, 未知支持库函数_7 ())
赋值 (选择终止列, 未知支持库函数_8 ())
.计次循环首 (相加 (相减 (选择终止列, 选择起始列), 1), 记次变量1)
    .计次循环首 (相加 (相减 (选择终止行, 选择起始行), 1), 记次变量2)
        赋值 (当前值, 到数值 (相减 (相加 (选择起始行, 记次变量2), 1).未知支持库函数_10 (相减 (相加 (选择起始列, 记次变量1), 1))))
        .如果真 (并且 (等于 (记次变量1, 1), 等于 (记次变量2, 1)))
            赋值 (最小值, 当前值)
        .如果真结束
        .如果真 (小于 (当前值, 最小值))
            赋值 (最小值, 当前值)
        .如果真结束
        
    .计次循环尾 ()
.计次循环尾 ()
相加 (选择终止行, 1).未知支持库函数_9 (相加 (选择终止列, 1), #., 到文本 (最小值))


.子程序 _选定单元格数_被选择, 空白型, , 
.局部变量 选择起始行, 整数型, , , 
.局部变量 选择起始列, 整数型, , , 
.局部变量 选择终止行, 整数型, , , 
.局部变量 选择终止列, 整数型, , , 

赋值 (选择起始行, 未知支持库函数_5 ())
赋值 (选择起始列, 未知支持库函数_6 ())
赋值 (选择终止行, 未知支持库函数_7 ())
赋值 (选择终止列, 未知支持库函数_8 ())
相加 (选择终止行, 1).未知支持库函数_9 (相加 (选择终止列, 1), #., 到文本 (相乘 (相加 (相减 (选择终止行, 选择起始行), 1), 相加 (相减 (选择终止列, 选择起始列), 1))))


.子程序 读XLS数据库, 空白型, , 
.参数 文件名, 文本型, , 

读入Excel文件 (文件名)

.子程序 读入Excel文件, 空白型, , 
.参数 文件名, 文本型, , 

.局部变量 行数, 整数型, , , 
.局部变量 列数, 整数型, , , 
.局部变量 行, 整数型, , , 
.局部变量 列, 整数型, , , 
.局部变量 文本, 文本型, , , 
.局部变量 Excel列, 文本型, , "256", 
.局部变量 内容, 文本型, , , 

未知支持库函数_0 ()
.未知支持库函数_6 ()
文件名.未知支持库函数_14 ()
赋值 (., 1)
未知支持库函数_20 ()
未知支持库函数_19 ()
赋值 (行数, 取表格行数 (1))
赋值 (列数, 取表格列数 (1))
.计次循环首 (列数, 列)
    赋值 (Excel列 [列], 二十六进制转换 (列))
.计次循环尾 ()
赋值 (., 行数)
赋值 (., 列数)
.计次循环首 (列数, 列)
    .计次循环首 (行数, 行)
        赋值 (文本, 相加 (Excel列 [列], 到文本 (行)))
        赋值 (., 文本)
        赋值 (., 文本)
        赋值 (内容, .)
        .如果真 (等于 (内容, “”))
            到循环尾 ()
        .如果真结束
        相减 (行, 1).未知支持库函数_9 (相减 (列, 1), #., 内容)
        处理事件 ()
    .计次循环尾 ()
.计次循环尾 ()

未知支持库函数_15 ()
未知支持库函数_7 () ' 这个一定要在关闭后面，否则Excel.exe不能正常关闭
未知支持库函数_3 ()
信息框 (“读入完成”, 0, )


.子程序 二十六进制转换, 文本型, , 专为把列数转换为Excel表示方法如"EA"
.参数 数值, 整数型, , 

.局部变量 容器1, 整数型, , , 
.局部变量 容器2, 整数型, , , 
.局部变量 文本1, 文本型, , , 
.局部变量 文本2, 文本型, , , 

.如果 (大于 (数值, 26)) ' 小于26的直接计算A - Z
    赋值 (容器1, 相除 (数值, 26)) ' 求商，决定第一位
    赋值 (容器2, 求余数 (数值, 26)) ' 求余，决定第二位
    .如果 (等于 (容器2, 0)) ' 处理26的整数倍，也就是包含 Z 的情况
        赋值 (容器1, 相减 (容器1, 1)) ' 前一位必须减一个，比如52就是 AZ 而不是 B
        赋值 (文本2, “Z”)
    .否则
        赋值 (文本2, 字符 (相加 (64, 容器2))) ' 正常情况，A － Y
    .如果结束
    赋值 (文本1, 字符 (相加 (64, 容器1)))
.否则
    赋值 (文本1, 字符 (相加 (64, 数值)))
.如果结束
返回 (相加 (文本1, 文本2))


.子程序 取表格行数, 整数型, 公开, 
.参数 工作簿, 未知类型0x90002, , 用户的Excel工作簿控件
.参数 表格序号, 整数型, 可空, 用户要取的表格序号（如果为空则默认为1）

.局部变量 原表格序号, 整数型, , , 用来还原回用户原来的表格序号
.局部变量 表格对象, 对象, , , Com对象（Worksheets）
.局部变量 行对象, 对象, , , Com对象（Range）
.局部变量 范围, 对象, , , Com对象（Range）
.局部变量 行数, 整数型, , , 行数

赋值 (行数, -1)

赋值 (原表格序号, 工作簿.)

.如果 (等于 (表格序号, 0))
    赋值 (工作簿., 1)
.否则
    赋值 (工作簿., 表格序号)
    
.如果结束
赋值 (表格对象, 工作簿.未知支持库函数_12 ())
.如果真 (取反 (表格对象.是否为空 ()))
    赋值 (范围, 表格对象.读对象型属性 (“UsedRange”, ))
    .如果真 (取反 (范围.是否为空 ()))
        赋值 (行对象, 范围.读对象型属性 (“Rows”, ))
        .如果真 (取反 (行对象.是否为空 ()))
            赋值 (行数, 行对象.读数值属性 (“Count”, ))
            
        .如果真结束
        
    .如果真结束
    
.如果真结束
赋值 (工作簿., 原表格序号)
返回 (行数)



.子程序 取表格列数, 整数型, 公开, 
.参数 工作簿, 未知类型0x90002, , 用户的Excel工作簿控件
.参数 表格序号, 整数型, 可空, 用户要取的表格序号（从1开始）

.局部变量 原表格序号, 整数型, , , 用来还原回用户原来的表格序号
.局部变量 表格对象, 对象, , , Com对象（Worksheets）
.局部变量 列对象, 对象, , , Com对象（Range）
.局部变量 范围, 对象, , , Com对象（Range）
.局部变量 列数, 整数型, , , 列数

赋值 (列数, -1)

赋值 (原表格序号, 工作簿.)

.如果 (等于 (表格序号, 0))
    赋值 (工作簿., 1)
.否则
    赋值 (工作簿., 表格序号)
    
.如果结束
赋值 (表格对象, 工作簿.未知支持库函数_12 ())
.如果真 (取反 (表格对象.是否为空 ()))
    赋值 (范围, 表格对象.读对象型属性 (“UsedRange”, ))
    .如果真 (取反 (范围.是否为空 ()))
        赋值 (列对象, 范围.读对象型属性 (“Columns”, ))
        .如果真 (取反 (列对象.是否为空 ()))
            赋值 (列数, 列对象.读数值属性 (“Count”, ))
            
        .如果真结束
        
    .如果真结束
    
.如果真结束
赋值 (工作簿., 原表格序号)
返回 (列数)

.子程序 自动调整, 空白型, 公开, 
.参数 Excel程序, 未知类型0x90001, , 用户的excel控件
.参数 Excel工作簿, 未知类型0x90002, , 用户的excel工作簿控件
.参数 调整范围, 文本型, 可空, 此参数为空则表示当前表所有行列均自动调整，如果要加入参数，则格式为“A1:C3"这样的格式
.参数 文件名, 文本型, , 为文件的目录位置＋文件名,也就是具体的文件名。

.局部变量 工作簿对象, 对象, , , 
.局部变量 行对象, 对象, , , 
.局部变量 列对象, 对象, , , 
.局部变量 范围, 对象, , , 
.局部变量 行, 整数型, , , 
.局部变量 列, 整数型, , , 

.如果真 (等于 (Excel程序., 假))
    信息框 (“请在程序中先创建Exce程序，然后才可以调用本模块！”, 0, )
    返回 ()
.如果真结束
赋值 (工作簿对象, Excel工作簿.未知支持库函数_12 ())
赋值 (范围, 工作簿对象.读对象型属性 (“UsedRange”, ))
.判断开始 (是否为空 (调整范围))
    赋值 (范围, 工作簿对象.读对象型属性 (“UsedRange”, ))
     ' 自动调整所有列的列宽
.默认
    赋值 (范围, 工作簿对象.读对象型属性 (“Range”, 调整范围))
     ' 自动调整用户指定范围单元格的列宽
.判断结束

.如果 (取反 (范围.是否为空 ()))
    赋值 (列对象, 范围.读对象型属性 (“Columns”, ))
    列对象.通用方法 (“AutoFit”, )
     ' 此段代码为自动调整指写范围的列宽
    赋值 (行对象, 范围.读对象型属性 (“Rows”, ))
    行对象.通用方法 (“AutoFit”, )
     ' 此段代码为自动调整指定范围的行高
.否则
    
.如果结束


.子程序 读SDB数据库, 空白型, , 
.参数 文件, 文本型, , 

.局部变量 结果, 逻辑型, , , 

赋值 (结果, sqlite数据库.未知支持库函数_30 (文件, 真))
.如果真 (等于 (结果, 假))
    信息框 (相加 (“不能打开数据库 [”, 文件, “]！”), #错误图标, )
    返回 ()
.如果真结束
赋值 (_启动窗口., 文件)
载入 (数据库结构, , 假)


.子程序 读DBF数据库, 空白型, , 
.参数 表名, 文本型, , 

.局部变量 i, 整数型, , , 
.局部变量 j, 整数型, , , 
.局部变量 文本, 文本型, , , 

相加 (“Driver={Microsoft dBase VFP Driver (*.dbf)};UID=;PWD=;SourceDB=”, 取运行目录 (), “;SourceType=DBF;Exclusive=No;BackgroundFetch=Yes;Collate=Machine;”).未知支持库函数_0 ()
.未知支持库函数_12 ()
相加 (“select * from ”, 表名).未知支持库函数_14 (#)
赋值 (., 1)
赋值 (., 1)
赋值 (., 相加 (., 1))
未知支持库函数_36 ()
.计次循环首 (., i)
    .未知支持库函数_38 ()
    .计次循环首 (., j)
        j.未知支持库函数_26 (文本)
        i.未知支持库函数_9 (j, #., 文本)
    .计次循环尾 ()
    处理事件 ()
    未知支持库函数_36 ()
.计次循环尾 ()

.子程序 读MDB数据库, 空白型, , 
.参数 文件, 文本型, , 

.局部变量 i, 整数型, , , 
.局部变量 j, 整数型, , , 
.局部变量 文本, 文本型, , , 
.局部变量 结果, 逻辑型, , , 

载入 (数据库结构, , 假)
测试连接.销毁 ()
返回 ()

 ' 数据库连接1.连接Access (文件, “”)
 ' 记录集1.置连接 (数据库连接1)
 ' 记录集1.打开 (“select * from ” ＋ 表名, #SQL语句)
 ' 表格.行数 ＝ 1
 ' .计次循环首 (., j)
     ' 表格.插入列 (记录集1.取字段名 (j － 1), )
 ' .计次循环尾 ()
 ' .计次循环首 (., i)
     ' 表格.插入行 (, )
     ' .计次循环首 (., j)
         ' 记录集1.读文本 (j, 文本)
         ' 表格.置数据 (i, j, #表格常量.文本型, 文本)
     ' .计次循环尾 ()
     ' 处理事件 ()
     ' 记录集1.到下一条 ()
 ' .计次循环尾 ()


.子程序 _查询分析器_被选择, 空白型, , 
.局部变量 查询文本, 文本型, , , 
.局部变量 字段数集, 整数型, , , 
.局部变量 记录集, 整数型, , , 
.局部变量 数据记录集, 整数型, , , 
.局部变量 j, 整数型, , , 
.局部变量 列数, 整数型, , , 
.局部变量 i, 整数型, , , 

输出调试文本 (连接文本, 当前外部表)
.判断开始 (等于 (数据库类型, #ACS))
    取字段列并初始化 (操作数据库, 当前数据库密码, 当前外部表, _启动窗口., _启动窗口., _启动窗口., 生成查询语句 (连接文本, 当前外部表, 假))
    显示数据到列表框 (_启动窗口., _启动窗口.)
.判断 (等于 (数据库类型, #SQl))
    赋值 (字段数集, _启动窗口.查询 (., 相加 (“select info from sysobjects where name='”, 当前外部表, “' and xtype ='U' ”)))
    赋值 (记录集, _启动窗口.查询 (., 相加 (“select name from syscolumns where id in (”, 当前外部表id, “) order by colid”)))
    赋值 (数据记录集, _启动窗口.查询 (., 生成查询语句 (连接文本, 当前外部表, 假)))
    _启动窗口.到首记录 (., 记录集)
    _启动窗口.到首记录 (., 字段数集)
    _启动窗口.到首记录 (., 数据记录集)
    赋值 (列数, _启动窗口.读 (., 字段数集, 1))
    赋值 (_启动窗口.., 1)
    赋值 (_启动窗口.., 1)
    .判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集), 假))
        _启动窗口.未知支持库函数_39 (., _启动窗口.读 (., 记录集, 1), j)
        _启动窗口.到后一记录 (., 记录集)
    .判断循环尾 ()
    赋值 (j, 0)
    .判断循环首 (等于 (_启动窗口.尾记录后 (., 数据记录集), 假))
        赋值 (j, 相加 (j, 1))
        _启动窗口.未知支持库函数_38 (., , )
        .计次循环首 (相减 (列数, 1), i)
            _启动窗口.未知支持库函数_9 (., j, i, #., 到文本 (_启动窗口.读 (., 数据记录集, i)))
        .计次循环尾 ()
        _启动窗口.到后一记录 (., 数据记录集)
    .判断循环尾 ()
    _启动窗口.关闭记录集 (., 记录集)
    _启动窗口.关闭记录集 (., 字段数集)
    _启动窗口.关闭记录集 (., 数据记录集)
.判断 (等于 (数据库类型, #MSQl))
    赋值 (查询文本, 生成查询语句 (连接文本, 当前外部表, 假))
    输出调试文本 (查询文本)
    填充列表 (全局句柄, 查询文本)
.默认
    
.判断结束


.窗口程序集 文本格式窗口程序集, , , 

.程序集变量 行分割符, 文本型, , , 
.程序集变量 列分割符, 文本型, , , 
.程序集变量 包括列名, 逻辑型, , , 
.子程序 _确定按钮_被单击, 空白型, , 
.判断开始 (等于 (.选中, 真))
    赋值 (列分割符, 字符 (#Tab键))
.判断 (等于 (.选中, 真))
    赋值 (列分割符, “ ”)
.判断 (等于 (.选中, 真))
    赋值 (列分割符, “,”)
.默认
    .如果真 (等于 (.选中, 真))
        赋值 (列分割符, .内容)
    .如果真结束
    
.判断结束

.判断开始 (等于 (.选中, 真))
    赋值 (行分割符, #换行符)
.默认
    .如果真 (等于 (.选中, 真))
        赋值 (行分割符, .内容)
    .如果真结束
    
.判断结束
赋值 (包括列名, .选中)
文本格式窗口.销毁 ()

.子程序 文本格式窗口, 空白型, , 
.参数 行分割符号, 文本型, 参考, 
.参数 列分割符号, 文本型, 参考, 
.参数 是否包括列名, 逻辑型, 参考, 

载入 (文本格式窗口, , 真)
赋值 (行分割符号, 行分割符)
赋值 (列分割符号, 列分割符)
赋值 (是否包括列名, 包括列名)

.子程序 _取消按钮_被单击, 空白型, , 
文本格式窗口.销毁 ()

.窗口程序集 打印设置窗口程序集, , , 

.子程序 _确定按钮_被单击, 空白型, , 
.局部变量 对齐方式, 整数型, , , 

.判断开始 (等于 (.选中, 真))
    赋值 (对齐方式, #.)
.判断 (等于 (.选中, 真))
    赋值 (对齐方式, #.)
.默认
    .如果真 (等于 (.选中, 真))
        赋值 (对齐方式, #.)
    .如果真结束
    
.判断结束

_启动窗口.未知支持库函数_46 (., .内容, .内容, 到数值 (.内容), .选中, 对齐方式)
赋值 (_启动窗口.., .选中)
赋值 (_启动窗口.., .选中)
赋值 (_启动窗口.., .现行选中项)
赋值 (_启动窗口.., .现行选中项)
打印设置窗口.销毁 ()


.子程序 _取消按钮_被单击, 空白型, , 
打印设置窗口.销毁 ()

.子程序 _打印设置窗口_创建完毕, 空白型, , 
赋值 (.选中, _启动窗口..)
赋值 (.选中, _启动窗口..)
赋值 (.现行选中项, _启动窗口..)
赋值 (.现行选中项, _启动窗口..)


.窗口程序集 查找窗口窗口程序集, , , 

.子程序 _查找按钮_被单击, 空白型, , 
.如果真 (等于 (查找替换 (.内容, 0, 0, .选中), 假))
    信息框 (“没找到”, #信息图标, “完毕”)
.如果真结束


.子程序 _查找窗口_创建完毕, 空白型, , 
赋值 (.内容, 到文本 (_启动窗口.未知支持库函数_10 (., _启动窗口.未知支持库函数_3 (.), _启动窗口.未知支持库函数_4 (.))))

.子程序 _查找下一个按钮_被单击, 空白型, , 
.如果真 (等于 (查找替换 (.内容, _启动窗口.未知支持库函数_5 (.), 相加 (_启动窗口.未知支持库函数_6 (.), 1), .选中), 假))
    信息框 (“没找到”, #信息图标, “完毕”)
.如果真结束


.子程序 _查找窗口_将被销毁, 空白型, , 
赋值 (_启动窗口., .内容)
赋值 (_启动窗口., .选中)

.子程序 _全部替换按钮_被单击, 空白型, , 
.如果真 (等于 (.内容, .内容))
    返回 ()
.如果真结束
.如果真 (并且 (等于 (.选中, 假), 等于 (到大写 (.内容), 到大写 (.内容))))
    返回 ()
.如果真结束
.循环判断首 ()
.循环判断尾 (查找替换 (.内容, 0, 0, .选中, .内容))

.窗口程序集 表格属性窗口程序集, , , 

.子程序 _取消按钮_被单击, 空白型, , 
赋值 (表格属性窗口., 假)

.子程序 _确定按钮_被单击, 空白型, , 
赋值 (_启动窗口.., 到数值 (.内容))
赋值 (_启动窗口.., 到数值 (.内容))
赋值 (_启动窗口.., 到数值 (.内容))
赋值 (_启动窗口.., 到数值 (.内容))
_启动窗口.未知支持库函数_31 (., _启动窗口.未知支持库函数_3 (.), 到数值 (.内容))
_启动窗口.未知支持库函数_32 (., _启动窗口.未知支持库函数_4 (.), 到数值 (.内容))
赋值 (_启动窗口.., .颜色)
赋值 (_启动窗口.., .颜色)
赋值 (_启动窗口.., .颜色)
赋值 (_启动窗口.., .颜色)
赋值 (_启动窗口.., .选中)
赋值 (_启动窗口.., .选中)
赋值 (_启动窗口.., .选中)
.如果 (等于 (.选中, 真))
    _启动窗口.未知支持库函数_14 (., #., .颜色, .颜色)
.否则
    _启动窗口.未知支持库函数_14 (., #., .颜色, .颜色)
.如果结束
赋值 (_启动窗口.., .现行选中项)
赋值 (_启动窗口.., .颜色)
赋值 (_启动窗口.., .选中)
赋值 (_启动窗口., 到数值 (.内容))
.如果真 (小于 (_启动窗口., 1))
    赋值 (_启动窗口., 1)
.如果真结束
赋值 (表格属性窗口., 假)

.子程序 _表格属性窗口_可否被关闭, 逻辑型, , 
赋值 (表格属性窗口., 假)
返回 (假)

.子程序 _统一行高按钮_被单击, 空白型, , 
赋值 (_启动窗口.., 到数值 (.内容))

.子程序 _统一列宽按钮_被单击, 空白型, , 
赋值 (_启动窗口.., 到数值 (.内容))

.窗口程序集 单元格颜色窗口程序集, , , 

.子程序 _确定按钮_被单击, 空白型, , 
_启动窗口.未知支持库函数_24 (., 相减 (到数值 (.内容), 1), 相减 (到数值 (.内容), 1), 相减 (到数值 (.内容), 1), 相减 (到数值 (.内容), 1), .颜色)
_启动窗口.未知支持库函数_22 (., 相减 (到数值 (.内容), 1), 相减 (到数值 (.内容), 1), 相减 (到数值 (.内容), 1), 相减 (到数值 (.内容), 1), .颜色)
赋值 (颜色窗口., 假)

.子程序 _取消按钮_被单击, 空白型, , 
赋值 (颜色窗口., 假)

.子程序 _颜色窗口_可否被关闭, 逻辑型, , 
赋值 (颜色窗口., 假)
返回 (假)

.窗口程序集 颜色窗口程序集, , , 

.子程序 _取消按钮_被单击, 空白型, , 
销毁 ()

.子程序 _确定按钮_被单击, 空白型, , 
_启动窗口.未知支持库函数_1 (., 相减 (到数值 (.内容), 1), 相减 (到数值 (.内容), 1), 相减 (到数值 (.内容), 1), 相减 (到数值 (.内容), 1))
销毁 ()

.窗口程序集 计算窗口程序集, , , 

.子程序 _计算器窗口_创建完毕, 空白型, , 


.窗口程序集 计算器窗口程序集, , , 

.程序集变量 存储变量, 文本型, , , 
.程序集变量 计算结果暂时变量, 文本型, , , 
.程序集变量 重新计算累计, 逻辑型, , , 
.程序集变量 首次单击, 逻辑型, , , 
.程序集变量 算术符号码, 整数型, , , 1为加，2为减，3为乘，4为除
.子程序 __启动窗口_创建完毕, 空白型, , 
赋值 (重新计算累计, 真)
赋值 (首次单击, 真)
赋值 (算术符号码, 1)


赋值 (.标题, “0”)
赋值 (.标题, “”)
赋值 (计算结果暂时变量, “”)
赋值 (重新计算累计, 假)
获取焦点 ()
赋值 (算术符号码, 1)
赋值 (首次单击, 真)


.子程序 _储存按钮_被单击, 空白型, , 
赋值 (.标题, “存入数据”)
赋值 (存储变量, .标题)
获取焦点 ()

.子程序 _读出按钮_被单击, 空白型, , 
赋值 (.标题, 存储变量)
赋值 (重新计算累计, 真)
获取焦点 ()

.子程序 _清除按钮_被单击, 空白型, , 
赋值 (.标题, “”)
赋值 (存储变量, “”)
获取焦点 ()

.子程序 _退出按钮_被单击, 空白型, , 
销毁 ()

.子程序 _退格按钮_被单击, 空白型, , 
赋值 (.标题, 取文本左边 (.标题, 相减 (取文本长度 (删首尾空 (.标题)), 1)))
获取焦点 ()

.子程序 _按钮1_被单击, 空白型, , 
.如果真 (等于 (重新计算累计, 假))
    赋值 (.标题, “0”)
    赋值 (重新计算累计, 真)
.如果真结束
.如果真 (小于或等于 (取文本长度 (.标题), 19))
    .如果真 (等于 (.标题, “0”))
        赋值 (.标题, “”)
    .如果真结束
    赋值 (.标题, 删首尾空 (相加 (.标题, “1”)))
.如果真结束
获取焦点 ()

.子程序 _按钮2_被单击, 空白型, , 
.如果真 (等于 (重新计算累计, 假))
    赋值 (.标题, “0”)
    赋值 (重新计算累计, 真)
.如果真结束
.如果真 (小于或等于 (取文本长度 (.标题), 19))
    .如果真 (等于 (.标题, “0”))
        赋值 (.标题, “”)
    .如果真结束
    赋值 (.标题, 删首尾空 (相加 (.标题, “2”)))
.如果真结束
获取焦点 ()

.子程序 _按钮3_被单击, 空白型, , 
.如果真 (等于 (重新计算累计, 假))
    赋值 (.标题, “0”)
    赋值 (重新计算累计, 真)
.如果真结束
.如果真 (小于或等于 (取文本长度 (.标题), 19))
    .如果真 (等于 (.标题, “0”))
        赋值 (.标题, “”)
    .如果真结束
    赋值 (.标题, 删首尾空 (相加 (.标题, “3”)))
.如果真结束
获取焦点 ()

.子程序 _按钮4_被单击, 空白型, , 
.如果真 (等于 (重新计算累计, 假))
    赋值 (.标题, “0”)
    赋值 (重新计算累计, 真)
.如果真结束
.如果真 (小于或等于 (取文本长度 (.标题), 19))
    .如果真 (等于 (.标题, “0”))
        赋值 (.标题, “”)
    .如果真结束
    赋值 (.标题, 删首尾空 (相加 (.标题, “4”)))
.如果真结束
获取焦点 ()

.子程序 _按钮5_被单击, 空白型, , 
.如果真 (等于 (重新计算累计, 假))
    赋值 (.标题, “0”)
    赋值 (重新计算累计, 真)
.如果真结束
.如果真 (小于或等于 (取文本长度 (.标题), 19))
    .如果真 (等于 (.标题, “0”))
        赋值 (.标题, “”)
    .如果真结束
    赋值 (.标题, 删首尾空 (相加 (.标题, “5”)))
.如果真结束
获取焦点 ()

.子程序 _按钮6_被单击, 空白型, , 
.如果真 (等于 (重新计算累计, 假))
    赋值 (.标题, “0”)
    赋值 (重新计算累计, 真)
.如果真结束
.如果真 (小于或等于 (取文本长度 (.标题), 19))
    .如果真 (等于 (.标题, “0”))
        赋值 (.标题, “”)
    .如果真结束
    赋值 (.标题, 删首尾空 (相加 (.标题, “6”)))
.如果真结束
获取焦点 ()

.子程序 _按钮7_被单击, 空白型, , 
.如果真 (等于 (重新计算累计, 假))
    赋值 (.标题, “0”)
    赋值 (重新计算累计, 真)
.如果真结束
.如果真 (小于或等于 (取文本长度 (.标题), 19))
    .如果真 (等于 (.标题, “0”))
        赋值 (.标题, “”)
    .如果真结束
    赋值 (.标题, 删首尾空 (相加 (.标题, “7”)))
.如果真结束
获取焦点 ()

.子程序 _按钮8_被单击, 空白型, , 
.如果真 (等于 (重新计算累计, 假))
    赋值 (.标题, “0”)
    赋值 (重新计算累计, 真)
.如果真结束
.如果真 (小于或等于 (取文本长度 (.标题), 19))
    .如果真 (等于 (.标题, “0”))
        赋值 (.标题, “”)
    .如果真结束
    赋值 (.标题, 删首尾空 (相加 (.标题, “8”)))
.如果真结束
获取焦点 ()

.子程序 _按钮9_被单击, 空白型, , 
.如果真 (等于 (重新计算累计, 假))
    赋值 (.标题, “0”)
    赋值 (重新计算累计, 真)
.如果真结束
.如果真 (小于或等于 (取文本长度 (.标题), 19))
    .如果真 (等于 (.标题, “0”))
        赋值 (.标题, “”)
    .如果真结束
    赋值 (.标题, 删首尾空 (相加 (.标题, “9”)))
.如果真结束
获取焦点 ()

.子程序 _按钮0_被单击, 空白型, , 
.如果真 (等于 (重新计算累计, 假))
    赋值 (.标题, “0”)
    赋值 (重新计算累计, 真)
.如果真结束
.如果真 (小于或等于 (取文本长度 (.标题), 19))
    .如果真 (等于 (.标题, “0”))
        赋值 (.标题, “”)
    .如果真结束
    赋值 (.标题, 相加 (删首尾空 (.标题), “0”))
.如果真结束
获取焦点 ()

.子程序 _按钮00_被单击, 空白型, , 
.如果真 (等于 (重新计算累计, 假))
    赋值 (.标题, “0”)
    赋值 (重新计算累计, 真)
.如果真结束
.如果真 (小于或等于 (取文本长度 (.标题), 19))
    .如果 (等于 (.标题, “0”))
        赋值 (.标题, “0”)
    .否则
        赋值 (.标题, 相加 (删首尾空 (.标题), “00”))
    .如果结束
    
.如果真结束
获取焦点 ()

.子程序 _按钮点_被单击, 空白型, , 
.如果真 (等于 (重新计算累计, 假))
    赋值 (.标题, “0”)
    赋值 (重新计算累计, 真)
.如果真结束
.如果真 (小于或等于 (取文本长度 (.标题), 19))
    .如果真 (等于 (.标题, “.”))
        赋值 (.标题, “”)
    .如果真结束
    赋值 (.标题, 删首尾空 (相加 (.标题, “.”)))
.如果真结束
获取焦点 ()

.子程序 _清零按钮_被单击, 空白型, , 
赋值 (.标题, “0”)
赋值 (.标题, “”)
赋值 (计算结果暂时变量, “”)
赋值 (重新计算累计, 假)
获取焦点 ()
赋值 (算术符号码, 1)
赋值 (首次单击, 真)

.子程序 _等于按钮_被单击, 空白型, , 
计算过程 ()
赋值 (算术符号码, 1)
赋值 (首次单击, 真)
赋值 (重新计算累计, 假)
赋值 (.标题, 计算结果暂时变量)
赋值 (.标题, 数值到大写 (到数值 (删首尾空 (.标题)), 真))
获取焦点 ()

.子程序 _按钮根号_被单击, 空白型, , 
赋值 (.标题, 到文本 (求平方根 (到数值 (删首尾空 (.标题)))))
获取焦点 ()

.子程序 _加号按钮_被单击, 空白型, , 
计算过程 ()
赋值 (算术符号码, 1)
获取焦点 ()

.子程序 _减号按钮_被单击, 空白型, , 
计算过程 ()
赋值 (算术符号码, 2)
获取焦点 ()

.子程序 _乘号按钮_被单击, 空白型, , 
计算过程 ()
赋值 (算术符号码, 3)
获取焦点 ()

.子程序 _除号按钮_被单击, 空白型, , 
计算过程 ()
赋值 (算术符号码, 4)
获取焦点 ()

.子程序 计算过程, 空白型, , 
.如果 (等于 (重新计算累计, 真))
    .如果 (等于 (算术符号码, 1))
        赋值 (计算结果暂时变量, 到文本 (相加 (到数值 (计算结果暂时变量), 到数值 (.标题))))
    .否则
        .如果 (等于 (算术符号码, 2))
            赋值 (计算结果暂时变量, 到文本 (相减 (到数值 (计算结果暂时变量), 到数值 (.标题))))
        .否则
            .如果 (等于 (算术符号码, 3))
                赋值 (计算结果暂时变量, 到文本 (相乘 (到数值 (计算结果暂时变量), 到数值 (.标题))))
            .否则
                .如果 (等于 (算术符号码, 4))
                    .如果 (不等于 (到数值 (.标题), 0))
                        赋值 (计算结果暂时变量, 到文本 (相除 (到数值 (计算结果暂时变量), 到数值 (.标题))))
                        赋值 (.标题, 计算结果暂时变量)
                        赋值 (重新计算累计, 假)
                    .否则
                        信息框 (“注意！被除数不能为0！”, #确认钮, “错误！”)
                        赋值 (.标题, “0”)
                        赋值 (.标题, “”)
                        赋值 (计算结果暂时变量, “”)
                        赋值 (重新计算累计, 假)
                        赋值 (首次单击, 真)
                        返回 ()
                    .如果结束
                    
                .否则
                    
                .如果结束
                
            .如果结束
            
        .如果结束
        
    .如果结束
    
    赋值 (重新计算累计, 假)
    赋值 (.标题, 计算结果暂时变量)
    返回 ()
.否则
    赋值 (重新计算累计, 假)
    赋值 (.标题, .标题)
.如果结束
获取焦点 ()
返回 ()

.子程序 _按钮1_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 


.判断开始 (等于 (键代码, #键0))
    _按钮0_被单击 ()
.判断 (等于 (键代码, #键1))
    _按钮1_被单击 ()
.判断 (等于 (键代码, #键2))
    _按钮2_被单击 ()
.判断 (等于 (键代码, #键3))
    _按钮3_被单击 ()
.判断 (等于 (键代码, #键4))
    _按钮4_被单击 ()
.判断 (等于 (键代码, #键5))
    _按钮5_被单击 ()
.判断 (等于 (键代码, #键6))
    _按钮6_被单击 ()
.判断 (等于 (键代码, #键7))
    _按钮7_被单击 ()
.判断 (等于 (键代码, #键8))
    _按钮8_被单击 ()
.判断 (等于 (键代码, #键9))
    _按钮9_被单击 ()
.判断 (等于 (键代码, #退格键))
    _退格按钮_被单击 ()
.判断 (等于 (键代码, 27))
    _清零按钮_被单击 ()
.判断 (等于 (键代码, #等号键))
    _等于按钮_被单击 ()
.判断 (等于 (键代码, #回车键))
    _等于按钮_被单击 ()
.判断 (等于 (键代码, 190))
    _按钮点_被单击 ()
.判断 (等于 (键代码, #除号键))
    _除号按钮_被单击 ()
.判断 (等于 (键代码, #减号键))
    _减号按钮_被单击 ()
.默认
    
.判断结束
获取焦点 ()

.子程序 _填入单元格按钮_被单击, 空白型, , 
_启动窗口.未知支持库函数_9 (., _启动窗口.未知支持库函数_3 (.), _启动窗口.未知支持库函数_4 (.), #., 到文本 (.标题))

.子程序 _大写后填入按钮_被单击, 空白型, , 
_启动窗口.未知支持库函数_9 (., _启动窗口.未知支持库函数_3 (.), _启动窗口.未知支持库函数_4 (.), #., .标题)


.窗口程序集 日历窗口程序集, , , 

.子程序 _农历日期框_日期被改变, 空白型, , 
赋值 (.今天, .)

.子程序 _日期框_选择日期被改变, 空白型, , 
赋值 (., .今天)

.子程序 _到今天按钮_被单击, 空白型, , 
赋值 (.今天, 取现行时间 ())
_日期框_选择日期被改变 ()

.子程序 _写公历按钮_被单击, 空白型, , 
.局部变量 列类型, 空白型, , , 

赋值 (列类型, _启动窗口.未知支持库函数_61 (., _启动窗口.未知支持库函数_4 (.)))
.如果真 (或者 (等于 (列类型, #.), 等于 (列类型, #.), 等于 (列类型, #.)))
    _启动窗口.未知支持库函数_9 (., _启动窗口.未知支持库函数_3 (.), _启动窗口.未知支持库函数_4 (.), #., 到文本 (取日期 (.今天)))
.如果真结束


.子程序 _写农历按钮_被单击, 空白型, , 
.局部变量 列类型, 空白型, , , 

赋值 (列类型, _启动窗口.未知支持库函数_61 (., _启动窗口.未知支持库函数_4 (.)))
.如果真 (或者 (等于 (列类型, #.), 等于 (列类型, #.)))
    _启动窗口.未知支持库函数_9 (., _启动窗口.未知支持库函数_3 (.), _启动窗口.未知支持库函数_4 (.), #., .)
.如果真结束


.窗口程序集 编码转换窗口程序集, , , 

.子程序 _开始按钮_被单击, 空白型, , 
.局部变量 列类型, 整数型, , , 
.局部变量 循环变量1, 整数型, , , 
.局部变量 循环变量2, 整数型, , , 
.局部变量 单元格文本, 文本型, , , 

.计次循环首 (_启动窗口.., 循环变量1)
    .计次循环首 (_启动窗口.., 循环变量2)
        赋值 (列类型, _启动窗口.未知支持库函数_61 (., 相减 (循环变量2, 1)))
        .如果真 (或者 (等于 (列类型, #.), 等于 (列类型, #.)))
            赋值 (单元格文本, _启动窗口.未知支持库函数_10 (., 相减 (循环变量1, 1), 相减 (循环变量2, 1)))
            赋值 (单元格文本, 未知支持库函数_0 (单元格文本, 相加 (.现行选中项, 1)))
            _启动窗口.未知支持库函数_9 (., 相减 (循环变量1, 1), 相减 (循环变量2, 1), #., 单元格文本)
        .如果真结束
        
    .计次循环尾 ()
.计次循环尾 ()

.窗口程序集 图示窗口程序集, , , 

.子程序 _图示窗口_创建完毕, 空白型, , 
.局部变量 选择起始行, 整数型, , , 行号，0开始
.局部变量 选择起始列, 整数型, , , 列号，0开始
.局部变量 选择终止行, 整数型, , , 行号，0开始
.局部变量 选择终止列, 整数型, , , 列号，0开始
.局部变量 循环变量1, 整数型, , , 
.局部变量 循环变量2, 整数型, , , 
.局部变量 列类型, 整数型, , , 
.局部变量 标注数量, 整数型, , , 
.局部变量 当前数据, 双精度小数型, , , 
.局部变量 最大数据, 双精度小数型, , , 

赋值 (选择起始行, _启动窗口.未知支持库函数_5 (.))
赋值 (选择起始列, _启动窗口.未知支持库函数_6 (.))
赋值 (选择终止行, _启动窗口.未知支持库函数_7 (.))
赋值 (选择终止列, _启动窗口.未知支持库函数_8 (.))
.如果真 (或者 (等于 (选择起始行, -1), 等于 (选择起始列, -1), 等于 (选择终止行, -1), 等于 (选择终止列, -1)))
    图示窗口.销毁 ()
    返回 ()
.如果真结束
 ' 柱状图
赋值 (., 相加 (相减 (选择终止行, 选择起始行), 1))
.计次循环首 (., 循环变量1)
    赋值 (., 相减 (循环变量1, 1))
    赋值 (., 取颜色值 (取随机数 (0, 255), 取随机数 (0, 255), 取随机数 (0, 255)))
    赋值 (., 相加 (“第”, 到文本 (相加 (选择起始行, 循环变量1)), “行”))
.计次循环尾 ()
.计次循环首 (相加 (相减 (选择终止行, 选择起始行), 1), 循环变量1)
    .计次循环首 (相加 (相减 (选择终止列, 选择起始列), 1), 循环变量2)
        赋值 (列类型, _启动窗口.未知支持库函数_61 (., 相减 (相加 (选择起始列, 循环变量2), 1)))
        .如果真 (或者 (等于 (列类型, #.), 等于 (列类型, #.), 等于 (列类型, #.)))
            .如果真 (等于 (循环变量1, 1))
                赋值 (标注数量, 相加 (标注数量, 1))
                赋值 (., 标注数量)
                赋值 (., 相减 (标注数量, 1))
                赋值 (., _启动窗口.未知支持库函数_10 (., 0, 相减 (相加 (选择起始列, 循环变量2), 1)))
            .如果真结束
            赋值 (., 相减 (循环变量2, 1))
            赋值 (., 相减 (循环变量1, 1))
            赋值 (当前数据, 到数值 (_启动窗口.未知支持库函数_10 (., 相减 (相加 (选择起始行, 循环变量1), 1), 相减 (相加 (选择起始列, 循环变量2), 1))))
            赋值 (., 当前数据)
            .如果真 (大于 (当前数据, 最大数据))
                赋值 (最大数据, 当前数据)
            .如果真结束
            
        .如果真结束
        
    .计次循环尾 ()
.计次循环尾 ()
赋值 (., 取整 (相加 (最大数据, 10)))
赋值 (., 整除 (., 5))

 ' 饼形图
赋值 (., 相加 (相减 (选择终止列, 选择起始列), 1))
.计次循环首 (., 循环变量1)
    赋值 (., 相减 (循环变量1, 1))
    赋值 (., _启动窗口.未知支持库函数_10 (., 0, 相减 (相加 (选择起始列, 循环变量1), 1)))
    赋值 (., 取颜色值 (取随机数 (0, 255), 取随机数 (0, 255), 取随机数 (0, 255)))
    赋值 (., 到数值 (_启动窗口.未知支持库函数_10 (., 选择起始行, 相减 (相加 (选择起始列, 循环变量1), 1))))
.计次循环尾 ()

 ' 曲线图
赋值 (标注数量, 0)
赋值 (., 相加 (相减 (选择终止行, 选择起始行), 1))
.计次循环首 (., 循环变量1)
    赋值 (., 相减 (循环变量1, 1))
    赋值 (., 取颜色值 (取随机数 (0, 255), 取随机数 (0, 255), 取随机数 (0, 255)))
    赋值 (., 相加 (“第”, 到文本 (相加 (选择起始行, 循环变量1)), “行”))
.计次循环尾 ()
.计次循环首 (相加 (相减 (选择终止行, 选择起始行), 1), 循环变量1)
    .计次循环首 (相加 (相减 (选择终止列, 选择起始列), 1), 循环变量2)
        赋值 (列类型, _启动窗口.未知支持库函数_61 (., 相减 (相加 (选择起始列, 循环变量2), 1)))
        .如果真 (或者 (等于 (列类型, #.), 等于 (列类型, #.), 等于 (列类型, #.)))
            .如果真 (等于 (循环变量1, 1))
                赋值 (标注数量, 相加 (标注数量, 1))
                赋值 (., 标注数量)
                赋值 (., 相减 (标注数量, 1))
                赋值 (., _启动窗口.未知支持库函数_10 (., 0, 相减 (相加 (选择起始列, 循环变量2), 1)))
            .如果真结束
            赋值 (., 相减 (循环变量2, 1))
            赋值 (., 相减 (循环变量1, 1))
            赋值 (当前数据, 到数值 (_启动窗口.未知支持库函数_10 (., 相减 (相加 (选择起始行, 循环变量1), 1), 相减 (相加 (选择起始列, 循环变量2), 1))))
            赋值 (., 当前数据)
            .如果真 (大于 (当前数据, 最大数据))
                赋值 (最大数据, 当前数据)
            .如果真结束
            
        .如果真结束
        
    .计次循环尾 ()
.计次循环尾 ()
赋值 (., 取整 (相加 (最大数据, 10)))
赋值 (., 整除 (., 5))


.子程序 _工具条1_被单击, 空白型, , 
.参数 按钮索引, 整数型, , 

.局部变量 循环变量, 整数型, , , 

.判断开始 (等于 (按钮索引, 1))
    载入 (图示设置窗口, , 真)
.默认
    .如果真 (等于 (按钮索引, 2))
        .判断开始 (等于 (.现行子夹, 0))
            真.开始打印 (真, #A4纸, #纵向)
            .未知支持库函数_0 ()
            结束打印 ()
        .判断 (等于 (.现行子夹, 1))
            真.开始打印 (真, #A4纸, #纵向)
            .未知支持库函数_1 ()
            结束打印 ()
        .默认
            .如果真 (等于 (.现行子夹, 2))
                真.开始打印 (真, #A4纸, #纵向)
                .未知支持库函数_2 ()
                结束打印 ()
            .如果真结束
            
        .判断结束
        
    .如果真结束
    
.判断结束


.窗口程序集 图示设置窗口程序集, , , 

.程序集变量 图例组合框现行选中项, 整数型, , , 
.程序集变量 X轴文字组合框现行选中项, 整数型, , , 
.子程序 _图示设置窗口_可否被关闭, 逻辑型, , 
.局部变量 循环变量, 整数型, , , 

.判断开始 (等于 (图示窗口..现行子夹, 0))
    .如果 (不等于 (.内容, “”))
        赋值 (图示窗口.., 真)
        赋值 (图示窗口.., .内容)
    .否则
        赋值 (图示窗口.., 假)
    .如果结束
    赋值 (图示窗口.., .选中)
    赋值 (图示窗口.., 到数值 (.内容))
    赋值 (图示窗口.., .颜色)
    赋值 (图示窗口.., 到数值 (.内容))
    赋值 (图示窗口.., 到数值 (.内容))
    赋值 (图示窗口.., .内容)
    赋值 (图示窗口.., .内容)
    赋值 (图示窗口.., .图片)
    赋值 (图示窗口.., .选中)
    赋值 (图示窗口.., .选中)
    赋值 (图示窗口.., .选中)
    赋值 (图示窗口.., .颜色)
    赋值 (图示窗口...字体大小, .字体大小)
    赋值 (图示窗口...字体名称, .字体名称)
    赋值 (图示窗口.., .字体颜色)
    赋值 (图示窗口...加粗, .加粗)
    赋值 (图示窗口...倾斜, .倾斜)
    赋值 (图示窗口...删除线, .删除线)
    赋值 (图示窗口...下划线, .下划线)
    
    赋值 (图示窗口...字体大小, .字体大小)
    赋值 (图示窗口...字体名称, .字体名称)
    赋值 (图示窗口.., .字体颜色)
    赋值 (图示窗口...加粗, .加粗)
    赋值 (图示窗口...倾斜, .倾斜)
    赋值 (图示窗口...删除线, .删除线)
    赋值 (图示窗口...下划线, .下划线)
    
    赋值 (图示窗口...字体大小, .字体大小)
    赋值 (图示窗口...字体名称, .字体名称)
    赋值 (图示窗口.., .字体颜色)
    赋值 (图示窗口...加粗, .加粗)
    赋值 (图示窗口...倾斜, .倾斜)
    赋值 (图示窗口...删除线, .删除线)
    赋值 (图示窗口...下划线, .下划线)
    .计次循环首 (取项目数 (), 循环变量)
        赋值 (图示窗口.., 相减 (循环变量, 1))
        赋值 (图示窗口.., 相减 (循环变量, 1).取项目文本 ())
    .计次循环尾 ()
    .计次循环首 (取项目数 (), 循环变量)
        赋值 (图示窗口.., 相减 (循环变量, 1))
        赋值 (图示窗口.., 相减 (循环变量, 1).取项目文本 ())
    .计次循环尾 ()
.判断 (等于 (图示窗口..现行子夹, 2))
    .如果 (不等于 (.内容, “”))
        赋值 (图示窗口.., 真)
        赋值 (图示窗口.., .内容)
    .否则
        赋值 (图示窗口.., 假)
    .如果结束
    赋值 (图示窗口.., 到数值 (.内容))
    赋值 (图示窗口.., .颜色)
    赋值 (图示窗口.., 到数值 (.内容))
    赋值 (图示窗口.., 到数值 (.内容))
    赋值 (图示窗口.., .内容)
    赋值 (图示窗口.., .内容)
    赋值 (图示窗口.., .图片)
    赋值 (图示窗口.., .选中)
    赋值 (图示窗口.., .选中)
    赋值 (图示窗口.., .选中)
    赋值 (图示窗口.., .颜色)
    赋值 (图示窗口...字体大小, .字体大小)
    赋值 (图示窗口...字体名称, .字体名称)
    赋值 (图示窗口.., .字体颜色)
    赋值 (图示窗口...加粗, .加粗)
    赋值 (图示窗口...倾斜, .倾斜)
    赋值 (图示窗口...删除线, .删除线)
    赋值 (图示窗口...下划线, .下划线)
    
    赋值 (图示窗口...字体大小, .字体大小)
    赋值 (图示窗口...字体名称, .字体名称)
    赋值 (图示窗口.., .字体颜色)
    赋值 (图示窗口...加粗, .加粗)
    赋值 (图示窗口...倾斜, .倾斜)
    赋值 (图示窗口...删除线, .删除线)
    赋值 (图示窗口...下划线, .下划线)
    
    赋值 (图示窗口...字体大小, .字体大小)
    赋值 (图示窗口...字体名称, .字体名称)
    赋值 (图示窗口.., .字体颜色)
    赋值 (图示窗口...加粗, .加粗)
    赋值 (图示窗口...倾斜, .倾斜)
    赋值 (图示窗口...删除线, .删除线)
    赋值 (图示窗口...下划线, .下划线)
    .计次循环首 (取项目数 (), 循环变量)
        赋值 (图示窗口.., 相减 (循环变量, 1))
        赋值 (图示窗口.., 相减 (循环变量, 1).取项目文本 ())
    .计次循环尾 ()
    .计次循环首 (取项目数 (), 循环变量)
        赋值 (图示窗口.., 相减 (循环变量, 1))
        赋值 (图示窗口.., 相减 (循环变量, 1).取项目文本 ())
    .计次循环尾 ()
.判断 (等于 (图示窗口..现行子夹, 2))
    .如果 (不等于 (.内容, “”))
        赋值 (图示窗口.., 真)
        赋值 (图示窗口.., .内容)
    .否则
        赋值 (图示窗口.., 假)
    .如果结束
    赋值 (图示窗口.., 到数值 (.内容))
    赋值 (图示窗口.., .颜色)
    赋值 (图示窗口.., .图片)
    赋值 (图示窗口.., .选中)
    赋值 (图示窗口.., .选中)
    赋值 (图示窗口.., .选中)
    赋值 (图示窗口.., .颜色)
    赋值 (图示窗口...字体大小, .字体大小)
    赋值 (图示窗口...字体名称, .字体名称)
    赋值 (图示窗口.., .字体颜色)
    赋值 (图示窗口...加粗, .加粗)
    赋值 (图示窗口...倾斜, .倾斜)
    赋值 (图示窗口...删除线, .删除线)
    赋值 (图示窗口...下划线, .下划线)
    
    赋值 (图示窗口...字体大小, .字体大小)
    赋值 (图示窗口...字体名称, .字体名称)
    赋值 (图示窗口.., .字体颜色)
    赋值 (图示窗口...加粗, .加粗)
    赋值 (图示窗口...倾斜, .倾斜)
    赋值 (图示窗口...删除线, .删除线)
    赋值 (图示窗口...下划线, .下划线)
    .计次循环首 (取项目数 (), 循环变量)
        赋值 (图示窗口.., 相减 (循环变量, 1))
        赋值 (图示窗口.., 相减 (循环变量, 1).取项目文本 ())
    .计次循环尾 ()
    赋值 (图示窗口.., .内容)
.默认
    
.判断结束


.子程序 _显示图例选择框_被单击, 空白型, , 
.如果 (等于 (.选中, 真))
    赋值 (.禁止, 假)
    赋值 (.禁止, 假)
.否则
    赋值 (.禁止, 真)
    赋值 (.禁止, 真)
    
.如果结束


.子程序 _有无边框选择框_被单击, 空白型, , 
.如果 (等于 (.选中, 真))
    赋值 (.禁止, 假)
.否则
    赋值 (.禁止, 真)
.如果结束


.子程序 _设置标题字体按钮_被单击, 空白型, , 
打开 ()

.子程序 _图例标题组合框_编辑内容被改变, 空白型, , 
.如果真 (不等于 (图例组合框现行选中项, -1))
    图例组合框现行选中项.置项目文本 (.内容)
    赋值 (.起始选择位置, 取文本长度 (.内容))
    赋值 (.被选择字符数, 0)
.如果真结束


.子程序 _X轴文字组合框_编辑内容被改变, 空白型, , 
.如果真 (不等于 (X轴文字组合框现行选中项, -1))
    X轴文字组合框现行选中项.置项目文本 (.内容)
    赋值 (.起始选择位置, 取文本长度 (.内容))
    赋值 (.被选择字符数, 0)
.如果真结束


.子程序 _图例标题组合框_列表被关闭, 空白型, , 
赋值 (图例组合框现行选中项, .现行选中项)

.子程序 _X轴文字组合框_列表被关闭, 空白型, , 
赋值 (X轴文字组合框现行选中项, .现行选中项)

.子程序 _背景图片按钮_被单击, 空白型, , 
.如果 (等于 (打开 (), 真))
    赋值 (.图片, 读入文件 (.文件名))
    赋值 (.内容, “有数据”)
    赋值 (.禁止, 假)
.否则
    赋值 (.图片, {  })
    赋值 (.内容, “空”)
    赋值 (.禁止, 真)
.如果结束


.子程序 _拉伸底图选择框_被单击, 空白型, , 
.如果 (等于 (.选中, 真))
    赋值 (.显示方式, 1)
.否则
    赋值 (.显示方式, 0)
.如果结束


.子程序 _设置图例文字字体按钮_被单击, 空白型, , 
打开 ()

.子程序 _设置标注字体按钮_被单击, 空白型, , 
打开 ()

.子程序 _图示设置窗口_创建完毕, 空白型, , 
.局部变量 循环变量, 整数型, , , 

.判断开始 (等于 (图示窗口..现行子夹, 0))
    赋值 (.内容, 图示窗口..)
    赋值 (.禁止, 假)
    赋值 (.选中, 图示窗口..)
    赋值 (.内容, 到文本 (图示窗口..))
    赋值 (.颜色, 图示窗口..)
    赋值 (.禁止, 假)
    赋值 (.禁止, 假)
    赋值 (.禁止, 假)
    赋值 (.禁止, 假)
    
    赋值 (.内容, 到文本 (图示窗口..))
    赋值 (.内容, 到文本 (图示窗口..))
    赋值 (.内容, 图示窗口..)
    赋值 (.内容, 图示窗口..)
    赋值 (.图片, 图示窗口..)
    赋值 (.颜色, 图示窗口..)
    
    .如果 (等于 (.图片, {  }))
        赋值 (.内容, “空”)
        赋值 (.禁止, 真)
    .否则
        赋值 (.内容, “有数据”)
        赋值 (.禁止, 假)
        .如果 (等于 (图示窗口.., 真))
            赋值 (.选中, 真)
            赋值 (.显示方式, 1)
        .否则
            赋值 (.选中, 假)
            赋值 (.显示方式, 0)
        .如果结束
        
    .如果结束
    
    .如果 (等于 (图示窗口.., 真))
        赋值 (.选中, 真)
        赋值 (.禁止, 假)
        赋值 (.禁止, 假)
    .否则
        赋值 (.选中, 假)
        赋值 (.禁止, 真)
        赋值 (.禁止, 真)
    .如果结束
    .如果 (等于 (图示窗口.., 真))
        赋值 (.选中, 真)
        赋值 (.禁止, 假)
    .否则
        赋值 (.选中, 假)
        赋值 (.禁止, 真)
    .如果结束
    .计次循环首 (图示窗口.., 循环变量)
        赋值 (图示窗口.., 相减 (循环变量, 1))
        图示窗口.加入项目 (.., )
    .计次循环尾 ()
    .计次循环首 (图示窗口.., 循环变量)
        赋值 (图示窗口.., 相减 (循环变量, 1))
        图示窗口.加入项目 (.., )
    .计次循环尾 ()
    赋值 (.字体大小, 图示窗口...字体大小)
    赋值 (.字体名称, 图示窗口...字体名称)
    赋值 (.字体颜色, 图示窗口..)
    赋值 (.加粗, 图示窗口...加粗)
    赋值 (.倾斜, 图示窗口...倾斜)
    赋值 (.删除线, 图示窗口...删除线)
    赋值 (.下划线, 图示窗口...下划线)
    
    赋值 (.字体大小, 图示窗口...字体大小)
    赋值 (.字体名称, 图示窗口...字体名称)
    赋值 (.字体颜色, 图示窗口..)
    赋值 (.加粗, 图示窗口...加粗)
    赋值 (.倾斜, 图示窗口...倾斜)
    赋值 (.删除线, 图示窗口...删除线)
    赋值 (.下划线, 图示窗口...下划线)
    
    赋值 (.字体大小, 图示窗口...字体大小)
    赋值 (.字体名称, 图示窗口...字体名称)
    赋值 (.字体颜色, 图示窗口..)
    赋值 (.加粗, 图示窗口...加粗)
    赋值 (.倾斜, 图示窗口...倾斜)
    赋值 (.删除线, 图示窗口...删除线)
    赋值 (.下划线, 图示窗口...下划线)
    赋值 (.禁止, 假)
    赋值 (.可视, 假)
    赋值 (.可视, 假)
    
.判断 (等于 (图示窗口..现行子夹, 2))
    赋值 (.内容, 图示窗口..)
    赋值 (.禁止, 真)
    赋值 (.内容, 到文本 (图示窗口..))
    赋值 (.颜色, 图示窗口..)
    赋值 (.禁止, 假)
    赋值 (.禁止, 假)
    赋值 (.禁止, 假)
    赋值 (.禁止, 假)
    
    赋值 (.内容, 到文本 (图示窗口..))
    赋值 (.内容, 到文本 (图示窗口..))
    赋值 (.内容, 图示窗口..)
    赋值 (.内容, 图示窗口..)
    赋值 (.图片, 图示窗口..)
    赋值 (.颜色, 图示窗口..)
    
    .如果 (等于 (.图片, {  }))
        赋值 (.内容, “空”)
        赋值 (.禁止, 真)
    .否则
        赋值 (.内容, “有数据”)
        赋值 (.禁止, 假)
        .如果 (等于 (图示窗口.., 真))
            赋值 (.选中, 真)
            赋值 (.显示方式, 1)
        .否则
            赋值 (.选中, 假)
            赋值 (.显示方式, 0)
        .如果结束
        
    .如果结束
    
    .如果 (等于 (图示窗口.., 真))
        赋值 (.选中, 真)
        赋值 (.禁止, 假)
        赋值 (.禁止, 假)
    .否则
        赋值 (.选中, 假)
        赋值 (.禁止, 真)
        赋值 (.禁止, 真)
    .如果结束
    .如果 (等于 (图示窗口.., 真))
        赋值 (.选中, 真)
        赋值 (.禁止, 假)
    .否则
        赋值 (.选中, 假)
        赋值 (.禁止, 真)
    .如果结束
    .计次循环首 (图示窗口.., 循环变量)
        赋值 (图示窗口.., 相减 (循环变量, 1))
        图示窗口.加入项目 (.., )
    .计次循环尾 ()
    .计次循环首 (图示窗口.., 循环变量)
        赋值 (图示窗口.., 相减 (循环变量, 1))
        图示窗口.加入项目 (.., )
    .计次循环尾 ()
    赋值 (.字体大小, 图示窗口...字体大小)
    赋值 (.字体名称, 图示窗口...字体名称)
    赋值 (.字体颜色, 图示窗口..)
    赋值 (.加粗, 图示窗口...加粗)
    赋值 (.倾斜, 图示窗口...倾斜)
    赋值 (.删除线, 图示窗口...删除线)
    赋值 (.下划线, 图示窗口...下划线)
    
    赋值 (.字体大小, 图示窗口...字体大小)
    赋值 (.字体名称, 图示窗口...字体名称)
    赋值 (.字体颜色, 图示窗口..)
    赋值 (.加粗, 图示窗口...加粗)
    赋值 (.倾斜, 图示窗口...倾斜)
    赋值 (.删除线, 图示窗口...删除线)
    赋值 (.下划线, 图示窗口...下划线)
    
    赋值 (.字体大小, 图示窗口...字体大小)
    赋值 (.字体名称, 图示窗口...字体名称)
    赋值 (.字体颜色, 图示窗口..)
    赋值 (.加粗, 图示窗口...加粗)
    赋值 (.倾斜, 图示窗口...倾斜)
    赋值 (.删除线, 图示窗口...删除线)
    赋值 (.下划线, 图示窗口...下划线)
    赋值 (.禁止, 假)
    赋值 (.可视, 假)
    赋值 (.可视, 假)
    
    
.判断 (等于 (图示窗口..现行子夹, 1))
    赋值 (.内容, 图示窗口..)
    赋值 (.禁止, 假)
    赋值 (.选中, 图示窗口..)
    赋值 (.内容, 到文本 (图示窗口..))
    赋值 (.颜色, 图示窗口..)
    
    赋值 (.禁止, 真)
    赋值 (.禁止, 真)
    赋值 (.禁止, 真)
    赋值 (.禁止, 真)
    
    赋值 (.图片, 图示窗口..)
    赋值 (.颜色, 图示窗口..)
    
    .如果 (等于 (.图片, {  }))
        赋值 (.内容, “空”)
        赋值 (.禁止, 真)
    .否则
        赋值 (.内容, “有数据”)
        赋值 (.禁止, 假)
        .如果 (等于 (图示窗口.., 真))
            赋值 (.选中, 真)
            赋值 (.显示方式, 1)
        .否则
            赋值 (.选中, 假)
            赋值 (.显示方式, 0)
        .如果结束
        
    .如果结束
    
    .如果 (等于 (图示窗口.., 真))
        赋值 (.选中, 真)
        赋值 (.禁止, 假)
        赋值 (.禁止, 假)
    .否则
        赋值 (.选中, 假)
        赋值 (.禁止, 真)
        赋值 (.禁止, 真)
    .如果结束
    .如果 (等于 (图示窗口.., 真))
        赋值 (.选中, 真)
        赋值 (.禁止, 假)
    .否则
        赋值 (.选中, 假)
        赋值 (.禁止, 真)
    .如果结束
    赋值 (.可视, 真)
    赋值 (.可视, 真)
    赋值 (.内容, 图示窗口..)
    .计次循环首 (图示窗口.., 循环变量)
        赋值 (图示窗口.., 相减 (循环变量, 1))
        图示窗口.加入项目 (.., )
    .计次循环尾 ()
    赋值 (.字体大小, 图示窗口...字体大小)
    赋值 (.字体名称, 图示窗口...字体名称)
    赋值 (.字体颜色, 图示窗口..)
    赋值 (.加粗, 图示窗口...加粗)
    赋值 (.倾斜, 图示窗口...倾斜)
    赋值 (.删除线, 图示窗口...删除线)
    赋值 (.下划线, 图示窗口...下划线)
    
    赋值 (.字体大小, 图示窗口...字体大小)
    赋值 (.字体名称, 图示窗口...字体名称)
    赋值 (.字体颜色, 图示窗口..)
    赋值 (.加粗, 图示窗口...加粗)
    赋值 (.倾斜, 图示窗口...倾斜)
    赋值 (.删除线, 图示窗口...删除线)
    赋值 (.下划线, 图示窗口...下划线)
    赋值 (.禁止, 真)
.默认
    
.判断结束


.窗口程序集 数据库信息程序集, , , 

.子程序 _数据库结构_创建完毕, 空白型, , 
.判断开始 (等于 (数据库类型, #SDB))
    刷新数据库显示 (sqlite数据库, )
.判断 (等于 (数据库类型, #MSQl))
    赋值 (操作数据库, 选择 (等于 (测试连接..内容, “”), “test”, 测试连接..内容))
    取数据库信息 ()
.判断 (等于 (数据库类型, #SQl))
    读出数据库 (_启动窗口., )
.判断 (等于 (数据库类型, #ACS))
    赋值 (操作数据库, 测试连接..内容)
    赋值 (当前数据库密码, 测试连接..内容)
    取数据库所有表名 (测试连接..内容, 测试连接..内容, )
.默认
    
.判断结束


.子程序 取数据库信息, 空白型, , 
.局部变量 记录集行数, 整数型, , , 
.局部变量 变量, 整数型, , , 
.局部变量 子记录集句柄, 整数型, , , 
.局部变量 库名, 文本型, , , 
.局部变量 子记录集句柄2, 整数型, , , 
.局部变量 变量1, 整数型, , , 
.局部变量 变量2, 整数型, , , 
.局部变量 变量3, 整数型, , , 
.局部变量 表名, 文本型, , , 
.局部变量 临时, 整数型, , , 

.如果 (等于 (未知支持库函数_28 (全局句柄), 真))
    赋值 (临时, .最大化按钮)
    清空 ()
    赋值 (子记录集句柄, 未知支持库函数_4 (全局句柄))
    赋值 (记录集行数, 未知支持库函数_7 (子记录集句柄))
    .计次循环首 (记录集行数, 变量)
        未知支持库函数_6 (子记录集句柄, 0, 库名)
        .加入项目 (库名, 23, , )
        赋值 (变量3, 相减 (取项目数 (), 1))
        未知支持库函数_3 (全局句柄, 相加 (“use ”, 库名))
        .如果 (等于 (未知支持库函数_33 (全局句柄), 真))
            赋值 (子记录集句柄2, 未知支持库函数_4 (全局句柄))
            赋值 (变量1, 未知支持库函数_7 (子记录集句柄2))
            .计次循环首 (变量1, 变量2)
                未知支持库函数_6 (子记录集句柄2, 0, 表名)
                变量3.加入项目 (表名, 29, , )
                未知支持库函数_10 (子记录集句柄2)
            .计次循环尾 ()
            未知支持库函数_5 (子记录集句柄2)
        .否则
            
        .如果结束
        未知支持库函数_10 (子记录集句柄)
    .计次循环尾 ()
    未知支持库函数_5 (子记录集句柄)
    赋值 (.最大化按钮, 临时)
.否则
    
.如果结束


.子程序 读出数据库, 空白型, , 
.参数 外部数据库, 外部数据库, , 
.参数 树型框1, 树型框, , 

.局部变量 记录集, 空白型, , , 
.局部变量 项目索引, 整数型, , , 
.局部变量 原选中项, 整数型, , , 
.局部变量 变量, 整数型, , , 

赋值 (记录集, 外部数据库.查询 (“select name,id from sysobjects where xtype ='U' ”))
赋值 (原选中项, .最大化按钮)
树型框1.清空 ()
赋值 (项目索引, .加入项目 (“表”, 18, , 1))
.计次循环首 (取数组成员数 (表数组), 变量)
    树型框1.加入项目 (项目索引, 表数组 [变量], , , 100)
.计次循环尾 ()
树型框1.扩展 (项目索引)
外部数据库.到首记录 (记录集)
赋值 (变量, 0)
.判断循环首 (等于 (外部数据库.尾记录后 (记录集), 假))
    赋值 (变量, 相加 (变量, 1))
    树型框1.加入项目 (项目索引, 外部数据库.读 (记录集, 1), , , 外部数据库.读 (记录集, 2))
    外部数据库.到后一记录 (记录集)
.判断循环尾 ()
0.置项目文本 (相加 (“表 (”, 到文本 (变量), “)”))
外部数据库.关闭记录集 (记录集)
树型框1.扩展 (0)


.子程序 _按钮2_被单击, 空白型, , 
销毁 ()


.子程序 _按钮1_被单击, 空白型, , 
.局部变量 项目数值, 整数型, , , 
.局部变量 记录集, 空白型, , , 
.局部变量 项目索引, 整数型, , , 
.局部变量 字段数集, 空白型, , , 
.局部变量 表名, 文本型, , , 
.局部变量 变量1, 整数型, , , 
.局部变量 列数, 整数型, , , 
.局部变量 变量2, 整数型, , , 
.局部变量 数据记录集, 整数型, , , 

赋值 (当前外部表, .取项目文本 (.最大化按钮))
.判断开始 (等于 (数据库类型, #MSQl))
    赋值 (项目数值, .取项目数值 (.最大化按钮))
    赋值 (操作数据库, .取父项目 (.最大化按钮).取项目文本 ())
    未知支持库函数_3 (全局句柄, 相加 (“use ”, 操作数据库))
    .如果真 (等于 (.取缩进层次 (.最大化按钮), 0)) ' 非叶子节点无需处理
        返回 ()
    .如果真结束
    填充列表 (全局句柄, 相加 (“select * from `”, 操作数据库, “`.`”, 当前外部表, “`”))
.判断 (等于 (数据库类型, #SDB))
    赋值 (项目数值, .取项目数值 (.最大化按钮))
    .如果真 (或者 (等于 (.最大化按钮, -1), 小于 (项目数值, 100))) ' 非叶子节点无需处理
        清除显示内容 ()
        返回 ()
    .如果真结束
    
    读取并显示表或视图内容 (sqlite数据库, .取项目文本 (.最大化按钮), 项目数值)
.判断 (等于 (数据库类型, #SQl))
    赋值 (当前外部表id, 到文本 (.取项目数值 (.最大化按钮)))
    赋值 (表名, 到文本 (.取项目文本 (.最大化按钮)))
    赋值 (字段数集, _启动窗口.查询 (., 相加 (“select info from sysobjects where name='”, 表名, “' and xtype ='U' ”)))
    赋值 (记录集, _启动窗口.查询 (., 相加 (“select name from syscolumns where id in (”, 当前外部表id, “) order by colid”)))
    赋值 (数据记录集, _启动窗口.查询 (., 相加 (“select top 1000 * from ”, 表名)))
    _启动窗口.到首记录 (., 记录集)
    _启动窗口.到首记录 (., 字段数集)
    _启动窗口.到首记录 (., 数据记录集)
    赋值 (列数, _启动窗口.读 (., 字段数集, 1))
    赋值 (_启动窗口.., 1)
    赋值 (_启动窗口.., 1)
    .判断循环首 (等于 (_启动窗口.尾记录后 (., 记录集), 假))
        _启动窗口.未知支持库函数_39 (., _启动窗口.读 (., 记录集, 1), 变量2)
        _启动窗口.到后一记录 (., 记录集)
    .判断循环尾 ()
    赋值 (变量2, 0)
    .判断循环首 (等于 (_启动窗口.尾记录后 (., 数据记录集), 假))
        赋值 (变量2, 相加 (变量2, 1))
        _启动窗口.未知支持库函数_38 (., , )
        .计次循环首 (相减 (列数, 1), 变量1)
            _启动窗口.未知支持库函数_9 (., 变量2, 变量1, #., 到文本 (_启动窗口.读 (., 数据记录集, 变量1)))
        .计次循环尾 ()
        _启动窗口.到后一记录 (., 数据记录集)
    .判断循环尾 ()
    _启动窗口.关闭记录集 (., 记录集)
    _启动窗口.关闭记录集 (., 字段数集)
    _启动窗口.关闭记录集 (., 数据记录集)
     ' 暂停 ()
.判断 (等于 (数据库类型, #ACS))
    取字段列并初始化 (操作数据库, 当前数据库密码, .取项目文本 (.最大化按钮), _启动窗口., _启动窗口., _启动窗口., 相加 (“select * from ”, .取项目文本 (.最大化按钮)))
    显示数据到列表框 (_启动窗口., _启动窗口.)
     ' 暂停 ()
.默认
    
.判断结束
销毁 ()
返回 ()


.子程序 填充列表, 空白型, , 
.参数 句柄, 整数型, , 
.参数 记录集, 文本型, , 

.局部变量 字段数, 整数型, , , 
.局部变量 变量, 整数型, , , 
.局部变量 记录数, 整数型, , , 
.局部变量 列, 整数型, , , 
.局部变量 行, 整数型, , , 
.局部变量 文本, 文本型, , , 
.局部变量 字段内容, 文本型, , , 
.局部变量 字段名, 文本型, , "0", 

清除显示内容 ()
未知支持库函数_3 (全局句柄, 记录集)
赋值 (记录集句柄, 未知支持库函数_4 (句柄))
未知支持库函数_12 (记录集句柄)
赋值 (字段数, 未知支持库函数_14 (记录集句柄))
赋值 (记录数, 未知支持库函数_7 (记录集句柄))
.计次循环首 (字段数, 变量)
    未知支持库函数_15 (记录集句柄, 相减 (变量, 1), 文本)
    _启动窗口.未知支持库函数_39 (., 文本, )
    加入成员 (字段名, 文本)
.计次循环尾 ()
.计次循环首 (记录数, 行)
    _启动窗口.未知支持库函数_38 (., , )
    .计次循环首 (字段数, 列)
        赋值 (字段内容, “”)
        未知支持库函数_6 (记录集句柄, 字段名 [列], 字段内容)
        _启动窗口.未知支持库函数_9 (., 行, 列, #., 字段内容)
    .计次循环尾 ()
    处理事件 ()
    未知支持库函数_10 (记录集句柄)
.计次循环尾 ()
未知支持库函数_5 (记录集句柄)

.子程序 清除显示内容, 空白型, , 
赋值 (_启动窗口.., 1)
赋值 (_启动窗口.., 1)

.子程序 读取并显示表或视图内容, 空白型, , 
.参数 数据库, 未知类型0xA0001, , 
.参数 表或视图名称, 文本型, , 
.参数 附加数值, 整数型, , 用于判断是表还是视图

.局部变量 数组, 文本型, , "0", 
.局部变量 起始时间, 整数型, , , 
.局部变量 sql, 文本型, , , 
.局部变量 已显示记录, 文本型, , , 
.局部变量 表或视图, 文本型, , , 
.局部变量 表, 未知类型0xA0002, , , 
.局部变量 记录集, 未知类型0xA0003, , , 

.如果真 (等于 (表或视图名称, “”))
    返回 ()
.如果真结束
赋值 (起始时间, 取启动时间 ())
赋值 (表或视图, 选择 (是表吗 (附加数值), “表”, “视图”))
.如果 (表.未知支持库函数_105 (表或视图名称, 数据库))
    赋值 (数组, 表.未知支持库函数_153 ())
    赋值 (sql, 相加 (“select * from ”, 表或视图名称))
    赋值 (sql, 相加 (sql, “ limit 1000 ”)) ' 限制读取的记录数，避免因表太大导致程序长时间无反应。
    赋值 (记录集, 数据库.未知支持库函数_33 (sql))
    记录集.未知支持库函数_190 ()
    赋值 (数组, 记录集.未知支持库函数_209 (真))
    数组导入高级表格 (_启动窗口., 数组, 真, 真)
.否则
    信息框 (相加 (“打开”, 表或视图, “失败：”, 表或视图名称), #错误图标, )
.如果结束


.子程序 是表吗, 逻辑型, , 
.参数 附加数值, 整数型, , 树形框项目数值,约定100给表使用

返回 (等于 (附加数值, 100))


.子程序 是视图吗, 逻辑型, , 
.参数 附加数值, 整数型, , 树形框项目数值,约定200给视图使用

返回 (等于 (附加数值, 200))


.子程序 选中项目是表吗, 逻辑型, , 判断树型框当前选中项是"表"
返回 (是表吗 (.取项目数值 (.最大化按钮)))


.子程序 选中项目是视图吗, 逻辑型, , 判断树型框当前选中项是"表"
返回 (是视图吗 (.取项目数值 (.最大化按钮)))


.子程序 数组导入高级表格, 空白型, , 
.参数 表格, 未知类型0x20001, , 
.参数 数组, 文本型, 数组, 
.参数 含表头, 逻辑型, 可空, 
.参数 加序号, 逻辑型, 可空, 是否在表格最左边添加“序号”列(1,2,..)

.局部变量 行数, 整数型, , , 
.局部变量 列数, 整数型, , , 
.局部变量 行, 整数型, , , 
.局部变量 列, 整数型, , , 
.局部变量 i, 整数型, , , 
.局部变量 序号, 文本型, , , 

.如果真 (是否为空 (含表头))
    赋值 (含表头, 假)
.如果真结束
.如果真 (是否为空 (加序号))
    赋值 (加序号, 真)
.如果真结束

赋值 (行数, 取数组下标 (数组, 1))
赋值 (列数, 取数组下标 (数组, 2))
检查 (等于 (取数组下标 (数组, 3), 0)) ' 只能为一维或二维数组
表格.未知支持库函数_57 ()
赋值 (表格., 0)
赋值 (表格., 0)
赋值 (列数, 选择 (大于 (列数, 0), 列数, 1))
赋值 (行数, 选择 (大于 (行数, 0), 行数, 1))
赋值 (表格., 行数)
赋值 (表格., 列数)

 ' 将数组内容写入表格
.计次循环首 (取数组成员数 (数组), i)
    赋值 (行, 相除 (相减 (i, 1), 列数))
    赋值 (列, 求余数 (相减 (i, 1), 列数))
    表格.未知支持库函数_9 (行, 列, #., 数组 [i])
.计次循环尾 ()

 ' 在表格最左边添加“序号”列
.如果真 (加序号)
    表格.未知支持库函数_39 (“序号”, 0)
    .计次循环首 (行数, i)
        .如果 (并且 (等于 (i, 1), 含表头))
            赋值 (序号, “序号”)
        .否则
            赋值 (序号, 到文本 (选择 (含表头, 相减 (i, 1), i)))
        .如果结束
        
        表格.未知支持库函数_9 (相减 (i, 1), 0, #., 序号)
    .计次循环尾 ()
.如果真结束

赋值 (表格., 选择 (含表头, 1, 0))
赋值 (表格., 选择 (加序号, 1, 0))


.子程序 _树型框1_双击项目, 空白型, , 
_按钮1_被单击 ()


.子程序 读mdb表, 空白型, , 
.参数 文件, 文本型, , 
.参数 树型框, 树型框, , 

.局部变量 项目索引, 整数型, , , 
.局部变量 i, 整数型, , , 
.局部变量 表名, 文本型, , "0", 

取mdb表名 (测试连接..内容, 表名)
树型框.清空 ()
赋值 (项目索引, 树型框.加入项目 (相加 (“表 (”, 到文本 (取数组成员数 (表名)), “)”), 18, , 1))
.计次循环首 (取数组成员数 (表名), i)
    树型框.加入项目 (项目索引, 表名 [i], , , 100)
.计次循环尾 ()
0.扩展 ()


.程序集 查询程序集, , , 

.程序集变量 匿名程序集变量_1682, 空白型, , , 
.子程序 刷新数据库显示, 空白型, , 可在新增或删除了表或视图后调用本命令
.参数 数据库, 未知类型0xA0001, , 
.参数 树型框, 树型框, , 

读取数据库信息 (数据库)
显示表和视图 (树型框)



.子程序 取字段列并初始化, 空白型, , 
.参数 取字段的数据库, 文本型, , 
.参数 密码, 文本型, 可空, 
.参数 字段列所在表名, 文本型, , 
.参数 显示字段列列表框, 未知类型0x20001, , 
.参数 数据库_数据库连接, 未知类型0x80001, , 
.参数 数据库_记录集, 未知类型0x80002, , 
.参数 连接文本1, 文本型, , 

.局部变量 临时整数变量, 整数型, , , 

 ' 删除显示字段用的超级列表框的所有列
数据库_数据库连接.未知支持库函数_1 (取字段的数据库, 密码)
数据库_记录集.未知支持库函数_12 (数据库_数据库连接)
数据库_记录集.未知支持库函数_14 (连接文本1, #)
赋值 (显示字段列列表框., 1)
赋值 (显示字段列列表框., 1)
显示字段列列表框.未知支持库函数_9 (0, 0, #., “序号”)
.变量循环首 (1, 数据库_记录集., 1, 临时整数变量)
    显示字段列列表框.未知支持库函数_39 (数据库_记录集.未知支持库函数_39 (相减 (临时整数变量, 1)), )
.变量循环尾 ()

.子程序 取数据库所有表名, 空白型, , 
.参数 数据库地址, 文本型, , 
.参数 密码1, 文本型, 可空, 
.参数 显示树型框, 树型框, , 用来显示数据库表名的树型框

.局部变量 数据库连接, 对象, , , 创建的数据库连接的对象
.局部变量 表名记录集, 对象, , , 
.局部变量 临时整数变量, 整数型, , "2", 
.局部变量 临时对象变量, 对象, , "2", 
.局部变量 临时变体型变量, 变体型, , , 

显示树型框.清空 ()
赋值 (临时整数变量 [1], 倒找文本 (数据库地址, “/”, , 假))
赋值 (临时整数变量 [2], 倒找文本 (数据库地址, “\”, , 假))
.如果 (大于 (临时整数变量 [1], 临时整数变量 [2]))
    显示树型框.加入项目 (-1, 取文本右边 (数据库地址, 相减 (取文本长度 (数据库地址), 临时整数变量 [1])), 1, , 9)
.否则
    显示树型框.加入项目 (-1, 取文本右边 (数据库地址, 相减 (取文本长度 (数据库地址), 临时整数变量 [2])), 1, , 9)
.如果结束
.如果真 (数据库连接.创建 (“ADODB.Connection”, ))
     ' 创建一个数据库连接的对象
    数据库连接.写属性 (“ConnectionString”, 相加 (“Provider=Microsoft.Jet.OLEDB.4.0;Data Source=”, 数据库地址, “;Jet OLEDB:Database Password=”, 密码1, “;”))
    数据库连接.方法 (“Open”, )
    赋值 (临时对象变量 [1], 数据库连接.读对象型属性 (“Errors”, ))
    .如果真 (取反 (临时对象变量.是否为空 ( [1])))
        临时变体型变量.赋值 (0, )
        赋值 (临时对象变量 [2], 临时对象变量.读对象型属性 ( [1], “Item”, 临时变体型变量))
        .如果真 (取反 (临时对象变量.是否为空 ( [2])))
            返回 ()
        .如果真结束
        
    .如果真结束
    赋值 (表名记录集, 数据库连接.对象型方法 (“OpenSchema”, 20))
    .判断循环首 (取反 (表名记录集.读逻辑属性 (“eof”, )))
        赋值 (临时对象变量 [1], 表名记录集.读对象型属性 (“Fields”, ))
        临时变体型变量.赋值 (“TABLE_TYPE”, )
        赋值 (临时对象变量 [2], 临时对象变量.读对象型属性 ( [1], “Item”, 临时变体型变量))
        赋值 (临时变体型变量, 临时对象变量.读属性 ( [2], “Value”, ))
        .如果真 (等于 (临时变体型变量.取文本 (), “TABLE”))
            临时变体型变量.赋值 (“TABLE_NAME”, )
            赋值 (临时对象变量 [2], 临时对象变量.读对象型属性 ( [1], “Item”, 临时变体型变量))
            赋值 (临时变体型变量, 临时对象变量.读属性 ( [2], “Value”, ))
            显示树型框.加入项目 (0, 临时变体型变量.取文本 (), 0, 2, 0)
        .如果真结束
        表名记录集.方法 (“MoveNext”, )
    .判断循环尾 ()
.如果真结束
显示树型框.扩展 (0)
表名记录集.方法 (“Close”, )
数据库连接.方法 (“Close”, )

.子程序 取mdb表名, 逻辑型, 公开, 取得mdb的所有表名。
.参数 mdb数据库, 文本型, , 要取表名的access数据库
.参数 密码1, 文本型, , 
.参数 表名, 文本型, 参考 数组, 文本数组，存储返回的表名

.局部变量 ADODB连接, 对象, , , 
.局部变量 连接文本, 文本型, , , 
.局部变量 表名列记录集, 对象, , , 
.局部变量 a, 整数型, , , 
.局部变量 对象型, 对象, , , 
.局部变量 变体型, 变体型, , , 
.局部变量 对象型1, 对象, , , 
.局部变量 数据库名, 文本型, , , 

清除数组 (表名)
赋值 (数据库名, 取文本右边 (mdb数据库, 相减 (取文本长度 (mdb数据库), 倒找文本 (mdb数据库, “\”, , 假))))
.如果真 (ADODB连接.创建 (“ADODB.Connection”, ))
    赋值 (连接文本, 相加 (“Provider=Microsoft.Jet.OLEDB.4.0;Data Source=”, mdb数据库, “;Jet OLEDB:Database Password=”, 密码1, “;”)) ' 后面是数据库路径
    ADODB连接.写属性 (“connectionstring”, 连接文本)
    ADODB连接.方法 (“open”, )
     ' 连接错误信息
    赋值 (对象型1, ADODB连接.读对象型属性 (“Errors”, ))
    .如果真 (等于 (对象型1.是否为空 (), 假))
        变体型.赋值 (0, )
        赋值 (对象型, 对象型1.读对象型属性 (“Item”, 变体型))
        .如果真 (等于 (对象型.是否为空 (), 假))
            返回 (假)
        .如果真结束
        
    .如果真结束
    赋值 (表名列记录集, ADODB连接.对象型方法 (“OpenSchema”, 20))
    .判断循环首 (等于 (表名列记录集.读逻辑属性 (“eof”, ), 假)) ' 循环取表名列表
        赋值 (对象型1, 表名列记录集.读对象型属性 (“Fields”, ))
        变体型.赋值 (“TABLE_TYPE”, ) ' 取表类型
        赋值 (对象型, 对象型1.读对象型属性 (“Item”, 变体型))
        赋值 (变体型, 对象型.读属性 (“Value”, ))
        .如果真 (等于 (变体型.取文本 (), “TABLE”))
             ' 取表名
            变体型.赋值 (“TABLE_NAME”, )
            赋值 (对象型, 对象型1.读对象型属性 (“Item”, 变体型))
            赋值 (变体型, 对象型.读属性 (“Value”, ))
            
            加入成员 (表名, 变体型.取文本 ())
            
             ' 0.加入项目 (变体型.取文本 (), 1, , )
         ' .如果真结束
        表名列记录集.方法 (“MoveNext”, )
    .判断循环尾 ()
.如果真结束
表名列记录集.方法 (“Close”, )
ADODB连接.方法 (“Close”, )
返回 (真)

.子程序 显示表和视图, 空白型, , 
.参数 树型框1, 树型框, , 

.局部变量 项目索引, 整数型, , , 
.局部变量 i, 整数型, , , 
.局部变量 原选中项, 整数型, , , 

赋值 (原选中项, 树型框1.最大化按钮)
树型框1.清空 ()
赋值 (项目索引, 树型框1.加入项目 (相加 (“表 (”, 到文本 (取数组成员数 (表数组)), “)”), 18, , 1))
.计次循环首 (取数组成员数 (表数组), i)
    树型框1.加入项目 (项目索引, 表数组 [i], , , 100)
.计次循环尾 ()
树型框1.扩展 (项目索引)
赋值 (项目索引, 树型框1.加入项目 (相加 (“视图 (”, 到文本 (取数组成员数 (视图数组)), “)”), 88, , 2))
.计次循环首 (取数组成员数 (视图数组), i)
    树型框1.加入项目 (项目索引, 视图数组 [i], , , 200)
.计次循环尾 ()
树型框1.扩展 (项目索引)
赋值 (项目索引, 树型框1.加入项目 (相加 (“临时表 (”, 到文本 (取数组成员数 (临时表数组)), “)”), 88, , 2))
.计次循环首 (取数组成员数 (临时表数组), i)
    树型框1.加入项目 (项目索引, 临时表数组 [i], , , 100)
.计次循环尾 ()
树型框1.扩展 (项目索引)

赋值 (项目索引, 树型框1.加入项目 (相加 (“临时视图 (”, 到文本 (取数组成员数 (临时视图数组)), “)”), 88, , 2))
.计次循环首 (取数组成员数 (临时视图数组), i)
    树型框1.加入项目 (项目索引, 临时视图数组 [i], , , 200)
.计次循环尾 ()
树型框1.扩展 (项目索引)
赋值 (树型框1.最大化按钮, 原选中项)


.子程序 生成查询语句, 文本型, 公开, 目前支持MySQL、SQL server、ACCESS、Sqlite数据库。
.参数 连接文本, 文本型, , 连接数据库的连接文本,如果是ACCESS和Sqlite数据库请直接输入数据库路径即可
.参数 被查询表, 文本型, , 需要查询的数据库表
.参数 是否所有字段, 逻辑型, , 

.局部变量 连接文本数组, 文本型, , "0", 

.判断开始 (不等于 (寻找文本 (连接文本, “MySQL ODBC”, , 假), -1))
     ' ODBC;DRIVER={MySQL ODBC 3.51 Driver};DESC=;DATABASE=khgl;SERVER=localhost;UID=root;PASSWORD=;PORT=3306;OPTION=;STMT=;
    赋值 (数据库类型, #MSQl)
    赋值 (操作数据库, 取文本中间 (连接文本, 相加 (寻找文本 (连接文本, “DATABASE=”, , 假), 9), 相减 (寻找文本 (连接文本, “;”, 寻找文本 (连接文本, “DATABASE=”, , 假), 假), 寻找文本 (连接文本, “DATABASE=”, , 假), 9)))
    赋值 (服务器地址, 取文本中间 (连接文本, 相加 (寻找文本 (连接文本, “SERVER=”, , 假), 7), 相减 (寻找文本 (连接文本, “;”, 寻找文本 (连接文本, “SERVER=”, , 假), 假), 寻找文本 (连接文本, “SERVER=”, , 假), 7)))
    赋值 (用户名, 取文本中间 (连接文本, 相加 (寻找文本 (连接文本, “UID=”, , 假), 4), 相减 (寻找文本 (连接文本, “;”, 寻找文本 (连接文本, “UID=”, , 假), 假), 寻找文本 (连接文本, “UID=”, , 假), 4)))
    赋值 (密码, 取文本中间 (连接文本, 相加 (寻找文本 (连接文本, “PASSWORD=”, , 假), 9), 相减 (寻找文本 (连接文本, “;”, 寻找文本 (连接文本, “PASSWORD=”, , 假), 假), 寻找文本 (连接文本, “PASSWORD=”, , 假), 9)))
    赋值 (端口, 取文本中间 (连接文本, 相加 (寻找文本 (连接文本, “PORT=”, , 假), 5), 相减 (寻找文本 (连接文本, “;”, 寻找文本 (连接文本, “PORT=”, , 假), 假), 寻找文本 (连接文本, “PORT=”, , 假), 5)))
.判断 (不等于 (寻找文本 (连接文本, “SQL Server”, , 假), -1))
     ' DRIVER=SQL Server;SERVER=迪克;UID=sa;PWD=123456;APP=dbcnv11111 应用程序;WSID=志强;DATABASE=tempdb
    赋值 (数据库类型, #SQl)
    赋值 (操作数据库, 取文本中间 (连接文本, 相加 (寻找文本 (连接文本, “DATABASE=”, , 假), 9), 相减 (取文本长度 (连接文本), 寻找文本 (连接文本, “DATABASE=”, , 假), 8)))
    赋值 (服务器地址, 取文本中间 (连接文本, 相加 (寻找文本 (连接文本, “SERVER=”, , 假), 7), 相减 (寻找文本 (连接文本, “;”, 寻找文本 (连接文本, “SERVER=”, , 假), 假), 寻找文本 (连接文本, “SERVER=”, , 假), 7)))
    赋值 (用户名, 取文本中间 (连接文本, 相加 (寻找文本 (连接文本, “UID=”, , 假), 4), 相减 (寻找文本 (连接文本, “;”, 寻找文本 (连接文本, “UID=”, , 假), 假), 寻找文本 (连接文本, “UID=”, , 假), 4)))
    赋值 (密码, 取文本中间 (连接文本, 相加 (寻找文本 (连接文本, “PWD=”, , 假), 4), 相减 (寻找文本 (连接文本, “;”, 寻找文本 (连接文本, “PWD=”, , 假), 假), 寻找文本 (连接文本, “PWD=”, , 假), 4)))
.判断 (不等于 (寻找文本 (连接文本, “.mdb”, , 假), -1))
    赋值 (数据库类型, #ACS)
     ' 操作数据库 ＝ 操作数据库
    赋值 (被操作的表, 当前外部表)
.判断 (不等于 (寻找文本 (连接文本, “.sdb”, , 假), -1))
    赋值 (数据库类型, #SDB)
    赋值 (操作数据库, 连接文本)
    赋值 (被操作的表, 被查询表)
.默认
    
.判断结束
赋值 (被操作的表, 被查询表)
 ' 连接文本 ＝ 连接文本
赋值 (所有字段, 是否所有字段)
载入 (查寻窗口, , 真)
.如果真 (取反 (是否保存))
    信息框 (“由于用户操作的原因，并没有生成查询语句！系统将返回空文本！”, #错误图标, )
    赋值 (SQL语句, “”)
.如果真结束
输出调试文本 (SQL语句)
返回 (SQL语句)

.子程序 显示数据到列表框, 空白型, , 
.参数 记录集, 未知类型0x80002, , 
.参数 列表框, 未知类型0x20001, , 

.局部变量 临时文本变量, 文本型, , , 
.局部变量 临时整数变量, 整数型, , , 
.局部变量 临时整数变量B, 整数型, , , 

.变量循环首 (1, 记录集., 1, 临时整数变量)
    .变量循环首 (1, 列表框., 1, 临时整数变量B)
        记录集.未知支持库函数_26 (相减 (临时整数变量B, 1), 临时文本变量)
        .如果 (等于 (临时整数变量B, 1))
            列表框.未知支持库函数_38 (到文本 (临时整数变量), )
        .否则
            
        .如果结束
        列表框.未知支持库函数_9 (相减 (列表框., 1), 临时整数变量B, #., 临时文本变量)
        
    .变量循环尾 ()
    记录集.未知支持库函数_36 ()
.变量循环尾 ()

.子程序 读取数据库信息, 空白型, , 
.参数 数据库, 未知类型0xA0001, , 

赋值 (表数组, 数据库.未知支持库函数_51 (真, 假, 假))
赋值 (视图数组, 数据库.未知支持库函数_51 (假, 真, 假))
赋值 (临时表数组, 数据库.未知支持库函数_51 (真, 假, 真))
赋值 (临时视图数组, 数据库.未知支持库函数_51 (假, 真, 真))


.窗口程序集 测试连接窗口程序集, , , 

.子程序 _按钮2_被单击, 空白型, , 
销毁 ()


.子程序 _按钮1_被单击, 空白型, , 
.局部变量 文件内容, 文本型, , , 
.局部变量 行分割符, 文本型, , , 
.局部变量 列分割符, 文本型, , , 
.局部变量 是否包括首行, 逻辑型, , , 
.局部变量 行文本组, 文本型, , "0", 
.局部变量 列文本组, 文本型, , "0", 
.局部变量 行数, 整数型, , , 
.局部变量 起始行数, 整数型, , , 
.局部变量 循环变量1, 整数型, , , 
.局部变量 循环变量2, 整数型, , , 
.局部变量 扩展名, 文本型, , , 

.判断开始 (等于 (.现行选中项, 0))
    赋值 (数据库类型, #SQl)
    赋值 (连接文本, 相加 (“Driver={SQL Server};Server=”, .内容, “;Database=”, .内容, “;Uid=”, .内容, “;Pwd=”, .内容, “;”))
    .如果真 (等于 (_启动窗口.打开SQL数据库 (., .内容, .内容, .内容, .内容, , ), 假))
        结束 ()
    .如果真结束
    载入 (数据库结构, , 假)
    销毁 ()
    返回 ()
.判断 (等于 (.现行选中项, 1))
    
    赋值 (连接文本, 相加 (“DRIVER={MySQL ODBC 3.51 Driver};DESC=;Server=”, .内容, “;Database=”, .内容, “;Uid=”, .内容, “;PASSWORD=”, .内容, “;PORT=”, .内容, “;OPTION=;STMT=;”))
    赋值 (数据库类型, #MSQl)
    赋值 (全局句柄, 未知支持库函数_1 (.内容, .内容, .内容, .内容, 到数值 (.内容)))
    .如果真 (等于 (全局句柄, 0))
        结束 ()
    .如果真结束
    载入 (数据库结构, , 假)
    销毁 ()
    返回 ()
.默认
    赋值 (扩展名, 取扩展名 (.内容))
    .判断开始 (等于 (扩展名, “TXT”))
        文本格式窗口 (行分割符, 列分割符, 是否包括首行)
        .如果真 (并且 (不等于 (列分割符, “”), 不等于 (行分割符, “”)))
            赋值 (文件内容, 到文本 (读入文件 (.内容)))
            赋值 (行文本组, 分割文本 (文件内容, 行分割符, ))
            赋值 (行数, 取数组成员数 (行文本组))
            .如果真 (等于 (是否包括首行, 假))
                赋值 (起始行数, 1)
            .如果真结束
            赋值 (_启动窗口.., 行数)
            赋值 (_启动窗口.., 1)
            赋值 (_启动窗口.., 1)
            赋值 (_启动窗口.., 1)
            .计次循环首 (相减 (行数, 起始行数), 循环变量1)
                赋值 (列文本组, 分割文本 (行文本组 [相加 (起始行数, 循环变量1)], 列分割符, ))
                .如果真 (小于 (_启动窗口.., 取数组成员数 (列文本组)))
                    赋值 (_启动窗口.., 取数组成员数 (列文本组))
                .如果真结束
                .计次循环首 (取数组成员数 (列文本组), 循环变量2)
                    _启动窗口.未知支持库函数_9 (., 相减 (相加 (起始行数, 循环变量1), 1), 相减 (循环变量2, 1), #., 列文本组 [循环变量2])
                .计次循环尾 ()
            .计次循环尾 ()
        .如果真结束
        
    .判断 (等于 (扩展名, “EDB”))
        读易数据库 (.内容)
    .判断 (等于 (扩展名, “SDB”))
        赋值 (数据库类型, #SDB)
         ' _新建_被选择 ()
        读SDB数据库 (.内容)
    .判断 (等于 (扩展名, “MDB”))
        赋值 (用户名, 选择 (等于 (.内容, “”), “admin”, .内容))
        赋值 (密码, .内容)
        赋值 (连接文本, 相加 (“Driver={Microsoft Access Driver (*.mdb)};Dbq=”, .内容, “;Uid=”, 选择 (等于 (.内容, “”), “admin”, .内容), “;Pwd=”, .内容, “;”))
        输出调试文本 (连接文本)
        赋值 (数据库类型, #ACS)
        读MDB数据库 (.内容)
        返回 ()
        
    .默认
        
    .判断结束
    
.判断结束
.判断开始 (是否已创建 (测试连接))
    测试连接.销毁 ()
    返回 ()
    
.默认
    
.判断结束



.子程序 _测试连接_尺寸被改变1, 空白型, , 
赋值 (.顶边, 相加 (.顶边, .高度, 5))
赋值 (.顶边, 相加 (.顶边, .高度, 5))
赋值 (.顶边, 相加 (.顶边, .高度, 5))
赋值 (., 相加 (.顶边, .高度, 30))


.子程序 _组合框1_列表项被选择, 空白型, 公开, 
.判断开始 (小于 (.现行选中项, 2))
    赋值 (.高度, -5)
    赋值 (.高度, 0)
    赋值 (.高度, 152)
    
    _测试连接_尺寸被改变1 ()
.判断 (并且 (大于或等于 (.现行选中项, 2), 小于或等于 (.现行选中项, 5)))
    赋值 (.高度, 24)
    赋值 (.高度, 0)
    赋值 (.高度, 24)
    _测试连接_尺寸被改变1 ()
.默认
    
.判断结束


.子程序 _测试连接_创建完毕, 空白型, , 


.子程序 _按钮3_被单击, 空白型, , 
赋值 (_启动窗口..初始过滤器, .取项目数值 (.现行选中项))
.如果真 (等于 (_启动窗口.打开 (.), 真))
    赋值 (.内容, _启动窗口..文件名)
    
.如果真结束


.窗口程序集 查寻窗口程序集, , , 

.程序集变量 数据库, 外部数据库, , , 
.程序集变量 运算符, 文本型, , "0", 
.程序集变量 运算关系, 文本型, , "0", 
.程序集变量 数据库1, 未知类型0xA0001, , , 
.程序集变量 操作表, 未知类型0xA0002, , , 
.程序集变量 匿名程序集变量_2254, 空白型, , , 
.程序集变量 左括号, 文本型, , , 
.程序集变量 右括号, 文本型, , , 
.子程序 _查寻窗口_创建完毕, 空白型, , 
.局部变量 字段数组, 文本型, , "0", 
.局部变量 i, 整数型, , , 

赋值 (数据库, _启动窗口.)

返回字段数组 (字段数组)
.计次循环首 (取数组成员数 (字段数组), i)
    字段数组.加入项目 ( [i], )
    .如果真 (取反 (所有字段))
        字段数组.加入项目 ( [i], )
        相减 (i, 1).选中项目 (真)
    .如果真结束
    
.计次循环尾 ()
赋值 (运算符, { “等于”, “不等于”, “大于”, “小于”, “大于等于”, “小于等于”, “包含于” })
赋值 (运算关系, { “ = ”, “ <> ”, “ > ”, “ < ”, “ >= ”, “ <= ”, “ like ” })
.计次循环首 (取数组成员数 (运算符), i)
    运算符.加入项目 ( [i], )
.计次循环尾 ()
连续赋值 (0, .现行选中项, .现行选中项, .现行选中项)

.子程序 返回字段数组, 空白型, , 
.参数 匿名参数_2217, 文本型, 参考 数组, 

.局部变量 记录集, 空白型, , , 
.局部变量 记录数, 空白型, , , 
.局部变量 i, 整数型, , , 
.局部变量 文本变量, 文本型, , , 

赋值 (左括号, “[”)
赋值 (右括号, “]”)
.判断开始 (等于 (数据库类型, #MSQl))
    赋值 (左括号, “`”)
    赋值 (右括号, “`”)
    未知支持库函数_3 (全局句柄, 相加 (“describe `”, 被操作的表, “`”))
    赋值 (记录集, 未知支持库函数_4 (全局句柄))
    赋值 (记录数, 未知支持库函数_7 (记录集))
    未知支持库函数_12 (记录集)
    .计次循环首 (记录数, i)
        未知支持库函数_6 (记录集, 0, 文本变量)
        加入成员 (匿名参数_2217, 文本变量)
        未知支持库函数_10 (记录集)
    .计次循环尾 ()
     ' 断开MySql (全局句柄)
.判断 (等于 (数据库类型, #SQl))
    
    赋值 (记录集, 数据库.查询 (相加 (“select syscolumns.name from sysobjects,syscolumns where sysobjects.xtype ='U' and sysobjects.name= '”, 当前外部表, “' and syscolumns.id=sysobjects.id”)))
    数据库.到首记录 (记录集)
    .判断循环首 (等于 (数据库.尾记录后 (记录集), 假))
        加入成员 (匿名参数_2217, 数据库.读 (记录集, 1))
        数据库.到后一记录 (记录集)
    .判断循环尾 ()
    数据库.关闭记录集 (记录集)
.判断 (等于 (数据库类型, #ACS))
    取MDB字段名 (匿名参数_2217, 密码, 被操作的表)
.判断 (等于 (数据库类型, #SDB))
    操作表.未知支持库函数_105 (被操作的表, 数据库1)
    赋值 (匿名参数_2217, 操作表.未知支持库函数_153 ())
.默认
    
.判断结束


.子程序 取MDB字段名, 空白型, , 
.参数 字段数组, 文本型, 参考 数组, 
.参数 密码1, 文本型, , 
.参数 当前表, 文本型, , 

.局部变量 sql, 文本型, , , 
.局部变量 表名列记录集, 对象, , , 
.局部变量 当前记录集, 对象, , , 
.局部变量 变体型1, 变体型, , , 
.局部变量 变体型2, 变体型, , , 
.局部变量 记录数, 空白型, , , 
.局部变量 对象型1, 对象, , , 
.局部变量 对象型, 对象, , , 
.局部变量 ADODB连接, 对象, , , 
.局部变量 连接文本, 文本型, , , 
.局部变量 字段数, 空白型, , , 
.局部变量 n, 空白型, , , 

.如果真 (ADODB连接.创建 (“ADODB.Connection”, ))
    赋值 (连接文本, 相加 (“provider=Microsoft.Jet.OLEDB.4.0;Data Source=”, 操作数据库, “;Jet OLEDB:Database Password=”, 密码1, “;”)) ' 后面是数据库路径
    ADODB连接.写属性 (“connectionstring”, 连接文本)
    ADODB连接.方法 (“open”, )
    .如果真 (大于 (ADODB连接.读数值属性 (“State”, ), 0))
        清除数组 (字段数组)
        .如果真 (表名列记录集.创建 (“ADODB.RecordSet”, ))
            当前记录集.创建 (“ADODB.RecordSet”, )
            赋值 (表名列记录集, ADODB连接.对象型方法 (“OpenSchema”, 20))
             ' 以下是取当前表的字段信息
            赋值 (sql, 相加 (“SELECT * FROM ”, 当前表))
            变体型2.赋值 (ADODB连接, )
            变体型1.赋值 (sql, )
            当前记录集.方法 (“open”, 变体型1, 变体型2, 1, 1)
            .如果真 (大于 (当前记录集.读数值属性 (“State”, ), 0)) ' 打开成功
                赋值 (对象型, 当前记录集.读对象型属性 (“Fields”, ))
                赋值 (字段数, 对象型.读数值属性 (“Count”, ))
                .计次循环首 (字段数, n) ' 循环读出字段的信息
                    变体型2.赋值 (相减 (n, 1), )
                     ' 指向N-1序号的字段
                    赋值 (对象型1, 对象型.读对象型属性 (“Item”, 变体型2))
                    加入成员 (字段数组, 对象型1.读文本属性 (“Name”, ))
                .计次循环尾 ()
                当前记录集.方法 (“Close”, )
            .如果真结束
            表名列记录集.方法 (“MoveNext”, ) ' 移到下一条
            处理事件 ()
        .如果真结束
        表名列记录集.方法 (“Close”, )
        ADODB连接.方法 (“Close”, )
        返回 ()
    .如果真结束
    
     ' 这部分是取连接错误原因
    赋值 (对象型, ADODB连接.读对象型属性 (“Errors”, ))
    .如果真 (等于 (对象型.是否为空 (), 假))
        变体型1.赋值 (0, )
        赋值 (对象型, 对象型.读对象型属性 (“Item”, 变体型1))
        .如果真 (等于 (对象型.是否为空 (), 假))
            信息框 (相加 (“错误原因:”, 对象型.读文本属性 (“Description”, )), 0, )
        .如果真结束
        
    .如果真结束
    
.如果真结束


.子程序 _编辑框1_被双击, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 SQL, 文本型, , , 
.局部变量 记录集, 空白型, , , 
.局部变量 字段名, 文本型, , , 

清空 ()
赋值 (SQL, 相加 (“select distinct(”, 左括号, .内容, 右括号, “) from ”, 左括号, 被操作的表, 右括号, “  order by ”, 左括号, .内容, 右括号))
 ' 输出调试文本 (SQL)
.判断开始 (等于 (数据库类型, #SDB))
    返回 ()
.默认
    赋值 (记录集, 数据库.查询 (SQL))
    赋值 (.可视, 真)
    数据库.到首记录 (记录集)
    .判断循环首 (等于 (数据库.尾记录后 (记录集), 假))
        赋值 (字段名, 到文本 (数据库.读 (记录集, 1)))
        字段名.加入项目 ()
        数据库.到后一记录 (记录集)
    .判断循环尾 ()
    数据库.关闭记录集 (记录集)
.判断结束


.子程序 _列表框1_双击选择, 空白型, , 
赋值 (.内容, .取项目文本 (.现行选中项))
赋值 (.可视, 假)

.子程序 _编辑框1_失去焦点, 空白型, , 
.如果真 (等于 (可有焦点 (), 假))
    赋值 (.可视, 假)
.如果真结束


.子程序 _按钮3_被单击, 空白型, , 
.局部变量 索引, 空白型, , , 

.如果 (等于 (取表项数 (), 0))
    赋值 (索引, .插入表项 ())
    索引.置标题 (0, .内容)
    索引.置标题 (1, .内容)
    索引.置标题 (2, .内容)
.否则
    赋值 (索引, .插入表项 ())
    相减 (索引, 1).置标题 (3, .内容)
    索引.置标题 (0, .内容)
    索引.置标题 (1, .内容)
    索引.置标题 (2, .内容)
.如果结束
赋值 (.内容, “”)


.子程序 生成查寻脚本, 空白型, , 
.局部变量 字段语句, 文本型, , , 
.局部变量 条件语句, 文本型, , , 
.局部变量 j, 空白型, , , 
.局部变量 i, 空白型, , , 

赋值 (j, 0)
.判断开始 (取反 (所有字段))
    .计次循环首 (取项目数 (), i)
        .如果真 (相减 (i, 1).是否被选中 ())
            .如果 (等于 (字段语句, “”))
                赋值 (字段语句, 相减 (i, 1).取项目文本 ())
            .否则
                赋值 (字段语句, 相加 (字段语句, 右括号, “,”, 左括号, 相减 (i, 1).取项目文本 ()))
            .如果结束
            
        .如果真结束
        
    .计次循环尾 ()
    赋值 (字段语句, 相加 (“”, 左括号, 字段语句, 右括号))
.默认
    赋值 (字段语句, “*”)
.判断结束
 ' 输出调试文本 (局部脚本1)
.如果 (等于 (取表项数 (), 0))
    赋值 (SQL语句, 相加 (“select ”, 字段语句, “ from ”, 左括号, 被操作的表, 右括号))
.否则
    .计次循环首 (取表项数 (), i)
        赋值 (条件语句, 相加 (条件语句, “”, 左括号, 相减 (i, 1).取标题 (0), 右括号))
        .计次循环首 (取数组成员数 (运算符), j)
            .如果真 (等于 (运算符 [j], 相减 (i, 1).取标题 (1)))
                跳出循环 ()
            .如果真结束
            
        .计次循环尾 ()
        赋值 (条件语句, 相加 (条件语句, “ ”, 运算关系 [j], “'”))
        .如果 (等于 (j, 7))
            赋值 (条件语句, 相加 (条件语句, 相减 (i, 1).取标题 (2), “%'”))
        .否则
            赋值 (条件语句, 相加 (条件语句, 相减 (i, 1).取标题 (2), “'”))
        .如果结束
        .如果真 (不等于 (相减 (i, 1).取标题 (3), “”))
            .如果 (等于 (相减 (i, 1).取标题 (3), “或者”))
                赋值 (条件语句, 相加 (条件语句, “ or ”))
            .否则
                赋值 (条件语句, 相加 (条件语句, “ and ”))
            .如果结束
            
        .如果真结束
        
    .计次循环尾 ()
     ' 输出调试文本 (局部脚本2)
    赋值 (SQL语句, 相加 (“select ”, 字段语句, “ from ”, 左括号, 被操作的表, 右括号, “ where ”, 条件语句))
.如果结束
 ' 输出调试文本 (SQL语句)
赋值 (是否保存, 真)
销毁 ()

.子程序 _按钮1_被单击, 空白型, , 
生成查寻脚本 ()

.子程序 _按钮2_被单击, 空白型, , 
赋值 (是否保存, 假)
销毁 ()


 ' 不属于任何一个程序集、类模块的函数：
