 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 800
    高度 = 600
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 0
    底图方式 = 1
    底色 = 8445952 '  0x80E000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 假
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 真
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “P3D杀码程序 V1.0版本”
    帮助文件名 = “”





 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 4 系统核心支持库
 ' eGrid 0B4337DA651B4b619ACF61334A7E8B47 1 3 高级表格支持库
 ' EChartBar 9A3F84D7FDEB4a0486F2711D5104B7F7 1 6 数据图表支持库
 ' iext 27bb20fdd3e145e4bee3db39ddd6e64c 1 2 扩展界面支持库一
 ' xplib 7F54B9CE8887428dBA9CEEB94CEF4C72 1 6 XP风格界面库
 ' iext3 {B6F7542F-B8FE-46a8-9605-98856A687097} 2 5 扩展界面支持库三
 ' HtmlView 5014D8FA6DCA40b68FA626D8183666EB 1 1 超文本浏览框支持库
 ' iext2 AF6AD80AA4244A59AFB3D83ECF5173CC 1 1 扩展界面支持库二
 ' iext5 {E5000198-4471-40e2-92BC-D0BA075BDBB2} 1 5 扩展界面支持库五




.全局变量 变量1, 空白型, , , 

.窗口程序集 窗口程序集1, , , 

.程序集变量 连接地址1, 文本型, , "0", 
.程序集变量 数据数组, 整数型, , "4", 
.程序集变量 一千行, 整数型, , "1000", 
.程序集变量 连接文件名, 文本型, , , 
.程序集变量 是否在检验, 逻辑型, , , 
.程序集变量 匿名程序集变量_2160, 空白型, , , 
.程序集变量 对冲数, 整数型, , "10", 
.程序集变量 拖数组, 文本型, , "0", 
.程序集变量 文本数组, 文本型, , "0", 
.程序集变量 匿名程序集变量_1122, 空白型, , , 
.程序集变量 cnt, 整数型, , , 
.程序集变量 公式参数组3D, 文本型, , "10", 
.程序集变量 公式参数组P3, 文本型, , "10", 
.程序集变量 匿名程序集变量_1323, 空白型, , , 
.程序集变量 长度, 小数型, , , 制作滚动广告用
.程序集变量 方向, 文本型, , , 制作滚动广告用
.程序集变量 显示次数, 整数型, , , 
.程序集变量 广告组, 文本型, , "0", 
.程序集变量 控制次数, 整数型, , , 
.程序集变量 取鼠标的控制, 整数型, , , 控制鼠标的最小化和关闭坐标
.程序集变量 匿名程序集变量_2093, 空白型, , , 
.程序集变量 采集地址, 文本型, , , 采集部份变量
.程序集变量 采集分割内容, 文本型, , "10", 
.程序集变量 采集分割内容1, 文本型, , "10", 
.程序集变量 是否已取结果, 逻辑型, , , 
.子程序 连接网站1, 空白型, , 
.参数 连接文本, 文本型, , 
.参数 内容1, 编辑框, , 

.局部变量 分割信息, 文本型, , "0", 
.局部变量 分割信息1, 文本型, , "0", 
.局部变量 计次, 整数型, , , 是地址的变量
.局部变量 XML对象, 对象, , , 
.局部变量 变体型, 变体型, , , 
.局部变量 网页代码, 文本型, , , 
.局部变量 字节集数据, 字节集, , , 
.局部变量 临时整数, 整数型, , , 


.如果真 (等于 (XML对象.创建 (“MSXML2.XMLHTTP”, ), 假))
    .如果真 (等于 (XML对象.创建 (“Microsoft.XMLHTTP”, ), 假))
        返回 ()
    .如果真结束
    
.如果真结束

XML对象.方法 (“open”, “GET”, 连接文本, 假)
XML对象.方法 (“send”, )
赋值 (变体型, XML对象.读属性 (“responseBody”, ))
赋值 (字节集数据, 变体型.取字节集 ())
赋值 (网页代码, 到文本 (字节集数据))
赋值 (.内容, 网页代码)
XML对象.清除 ()


.子程序 _按钮15_被单击, 空白型, , 
.局部变量 计次, 整数型, , , 
.局部变量 分割网页文本, 文本型, , "0", 第一次分割
.局部变量 分割主要文本, 文本型, , "0", 第二次分割
.局部变量 主要文本, 文本型, , "0", 
.局部变量 分蓝, 文本型, , "0", 
.局部变量 合并后文本, 文本型, , , 

赋值 (.内容, “”)
赋值 (.位置, 0)
赋值 (.最小位置, 0)
赋值 (.最大位置, 6)
.计次循环首 (取项目数 (), 计次)
    处理事件 ()
    连接网站1 (相加 (采集地址, 相减 (计次, 1).取项目文本 ()), )
    赋值 (分割网页文本, 分割文本 (.内容, 采集分割内容 [1], ))
    赋值 (分割主要文本, 分割文本 (分割网页文本 [到数值 (.内容)], “>”, )) ' 找到下面表格的内容 最新一期
    赋值 (主要文本, 分割文本 (相加 (分割主要文本 [1], “**”, 分割主要文本 [6], “**”, 分割主要文本 [10]), “**”, ))
    .判断开始 (等于 (计次, 1))
        赋值 (分蓝, 分割文本 (主要文本 [3], “&nbsp;”, ))
        .如果真 (等于 (取文本左边 (分蓝 [4], 2), “</”))
            连续赋值 (“”, 分蓝 [4]) ' , 分蓝 [6])
            
        .如果真结束
        .如果真 (等于 (取文本中间 (分蓝 [4], 3, 2), “</”))
            赋值 (分蓝 [4], 取文本左边 (分蓝 [4], 2))
        .如果真结束
        
        赋值 (合并后文本, 相加 (取文本左边 (主要文本 [1], 7), “ ”, 取文本左边 (主要文本 [2], 17), “ ”, 取文本左边 (分蓝 [3], 2), “ ”, 取文本左边 (分蓝 [4], 8)))
         ' 输出调试文本 (合并后文本)
    .判断 (等于 (计次, 2)) ' 3D
        赋值 (合并后文本, 相加 (取文本左边 (主要文本 [1], 7), “ ”, 取文本左边 (取文本左边 (主要文本 [2], 3), 1), “ ”, 取文本中间 (取文本左边 (主要文本 [2], 3), 2, 1), “ ”, 取文本右边 (取文本左边 (主要文本 [2], 3), 1)))
    .默认
         ' 输出调试文本 (合并后文本)
        
    .判断结束
    .判断开始 (等于 (计次, 3)) ' P5
        赋值 (合并后文本, 相加 (取文本左边 (主要文本 [1], 7), “ ”, 取文本左边 (取文本左边 (主要文本 [2], 5), 1), “ ”, 取文本中间 (取文本左边 (主要文本 [2], 5), 2, 1), “ ”, 取文本中间 (取文本左边 (主要文本 [2], 5), 3, 1), “ ”, 取文本中间 (取文本左边 (主要文本 [2], 5), 4, 1), “ ”, 取文本右边 (取文本左边 (主要文本 [2], 5), 1)))
    .默认
         ' 输出调试文本 (合并后文本)
        
    .判断结束
    .判断开始 (等于 (计次, 4))
        赋值 (合并后文本, 相加 (取文本左边 (主要文本 [1], 7), “ ”, 取文本左边 (主要文本 [2], 13)))
    .默认
         ' 输出调试文本 (合并后文本)
    .判断结束
    .判断开始 (等于 (计次, 5))
        赋值 (合并后文本, 相加 (取文本左边 (主要文本 [1], 7), “ ”, 取文本左边 (主要文本 [2], 14)))
    .默认
         ' 输出调试文本 (合并后文本)
    .判断结束
    .判断开始 (等于 (计次, 6))
        赋值 (分蓝, 分割文本 (主要文本 [3], “</fon”, ))
        赋值 (合并后文本, 相加 (取文本左边 (主要文本 [1], 7), “ ”, 取文本左边 (主要文本 [2], 20), “ ”, 分蓝 [1]))
         ' 输出调试文本 (合并后文本)
    .判断 (等于 (计次, 7))
        赋值 (合并后文本, 相加 (取文本左边 (主要文本 [1], 7), “ ”, 取文本左边 (取文本左边 (主要文本 [2], 3), 1), “ ”, 取文本中间 (取文本左边 (主要文本 [2], 3), 2, 1), “ ”, 取文本右边 (取文本左边 (主要文本 [2], 3), 1)))
         ' 输出调试文本 (合并后文本)  ' 3D试机
    .默认
        
    .判断结束
    
    相加 (采集分割内容1 [计次], 合并后文本, #换行符).加入文本 ()
    赋值 (.位置, 相加 (.位置, 1))
    赋值 (合并后文本, 删首尾空 (合并后文本))
    赋值 (合并后文本, 子文本替换 (合并后文本, “ ”, “+”, , , 假))
    加到文本里 (计次, 合并后文本)
.计次循环尾 ()
赋值 (.禁止, 假)

.子程序 加到文本里, 空白型, , 
.参数 采集列表, 整数型, , 
.参数 采集加入文本, 文本型, , 

.局部变量 文件地址1, 文本型, , , 
.局部变量 文件文本名, 文本型, , "10", 

赋值 (文件文本名, { “ss06.txt”, “3d_data.txt”, “06p3p5.txt”, “7s06.txt”, “22s506.txt”, “29s706.txt”, “3d_data1.txt”, “”, “”, “” })
赋值 (.内容, 到文本 (读入文件 (相加 (取运行目录 (), “\cpdata\”, 文件文本名 [采集列表]))))
.如果真 (小于 (寻找文本 (.内容, 采集加入文本, 1, 假), 1))
    赋值 (.内容, 相加 (采集加入文本, #换行符, .内容))
    写到文件 (相加 (取运行目录 (), “\cpdata\”, 文件文本名 [采集列表]), 到字节集 (.内容))
.如果真结束


.子程序 __启动窗口_创建完毕, 空白型, , 
.局部变量 采集文本1, 文本型, , , 

未知支持库函数_0 (1)
 ' 曲1.标题文字 ＝ “基号走势图” ＋ #换行符
赋值 (采集地址, “http://www.178cpw.com/CaiPiaoKj/”)
赋值 (是否已取结果, 假)
赋值 (采集分割内容1, { “福利双色球 ”, “福彩3D ”, “体彩排列5 ”, “体彩七星彩 ”, “体彩25选5 ”, “体彩29选7 ”, “福彩3D试号机 ”, “”, “”, “” })
赋值 (采集文本1, “>第”)
赋值 (采集分割内容 [1], 采集文本1)

赋值 (.可视, .选中)
赋值 (.可视, .选中)
赋值 (.可视, .选中)

赋值 (连接文件名, “3d_data.txt”)
赋值 (连接地址1, 分割文本 (.内容, “;”, ))
“”.加入栏目 (180, , , 1)
.如果 (等于 (.标题, “分布列表”))
    赋值 (., 真)
.否则
    赋值 (., 真)
.如果结束

赋值 (对冲数, { 6, 7, 8, 9, 0, 1, 2, 3, 4, 5 })
赋值 (公式参数组P3, { “1,2,2,0,8,2”, “1,2,2,0,8,9”, “5,3,3,0,8,2”, “5,2,2,0,8,2”, “5,2,2,0,8,9”, “6,2,2,0,8,2”, “1,3,3,0,8,2”, “1,3,3,0,8,4”, “6,3,3,0,8,2”, “2,3,3,0,8,2” })
赋值 (公式参数组3D, { “0,4,0,0,1,0”, “0,4,0,0,1,3”, “5,4,0,0,1,0”, “8,4,0,0,1,0”, “0,8,0,0,1,0”, “0,4,5,0,1,0”, “0,4,0,4,1,0”, “0,4,0,6,1,0”, “0,4,0,7,1,0”, “0,8,0,0,1,3” })
赋值 (.字体, .字体)
赋值 (长度, 相除 (“A”.取高度 (), 2))

赋值 (.现行选中项, 0)
选择了公式组合 ()

 ' 气1.透明度 ＝ 70

.子程序 _按钮1_被单击, 空白型, , 
.局部变量 计次, 整数型, , , 
.局部变量 随机字, 整数型, , "3", 
.局部变量 计次1, 整数型, , , 
.局部变量 插入行号1, 整数型, , , 
.局部变量 插入行号2, 整数型, , , 
.局部变量 分割信息, 文本型, , "0", 
.局部变量 分割信息1, 文本型, , "0", 
.局部变量 状态条文本, 文本型, , , 
.局部变量 匿名局部变量_318, 空白型, , , 

赋值 (分割信息, 分割文本 (.内容, 字符 (10), ))
 ' 编辑框1.内容 ＝ 到文本 (取数组成员数 (分割信息))
 ' 置随机数种子 ()
赋值 (., 假)
赋值 (., 假)
未知支持库函数_57 ()
未知支持库函数_57 ()
赋值 (., 2)
赋值 (., 1)
赋值 (., 25)

0.未知支持库函数_32 (60)
11.未知支持库函数_32 (1)
22.未知支持库函数_32 (1)
0.未知支持库函数_58 (1, 0, 10)
0.未知支持库函数_58 (12, 0, 21)
0.未知支持库函数_58 (22, 0, 32)
0.未知支持库函数_58 (0, 1, 0)

未知支持库函数_57 ()
赋值 (., 1)

重定义数组 (一千行, 假, 1000)
.计次循环首 (取数组成员数 (分割信息), 计次)
     ' 处理事件 ()
    赋值 (分割信息1, 分割文本 (分割信息 [计次], “+”, ))
    
    .如果 (等于 (.标题, “升序显示”))
        分割信息1.未知支持库函数_38 ( [1], .)
        分割信息1.未知支持库函数_38 ( [1], .)
        分割信息1.未知支持库函数_38 ( [1], .)
        
        赋值 (插入行号1, 相减 (., 1))
        赋值 (插入行号2, 相减 (., 1))
        
    .否则
        分割信息1.未知支持库函数_38 ( [1], 2)
        分割信息1.未知支持库函数_38 ( [1], 1)
        分割信息1.未知支持库函数_38 ( [1], 1)
        赋值 (插入行号1, 2)
        赋值 (插入行号2, 1)
    .如果结束
    
    插入行号1.未知支持库函数_9 (相加 (到数值 (分割信息1 [2]), 1), 1, 分割信息1 [2])
    插入行号1.未知支持库函数_9 (相加 (到数值 (分割信息1 [3]), 1, 11), 1, 分割信息1 [3])
    插入行号1.未知支持库函数_9 (相加 (到数值 (分割信息1 [4]), 1, 22), 1, 分割信息1 [4])
    
    插入行号1.未知支持库函数_22 (相加 (到数值 (分割信息1 [2]), 1), 插入行号1, 相加 (到数值 (分割信息1 [2]), 1), #红色)
    插入行号1.未知支持库函数_22 (相加 (到数值 (分割信息1 [3]), 1, 11), 插入行号1, 相加 (到数值 (分割信息1 [3]), 1, 11), #红色)
    插入行号1.未知支持库函数_22 (相加 (到数值 (分割信息1 [4]), 1, 22), 插入行号1, 相加 (到数值 (分割信息1 [4]), 1, 22), #红色)
    
    插入行号2.未知支持库函数_9 (1, 1, 分割信息1 [2])
    插入行号2.未知支持库函数_9 (2, 1, 分割信息1 [3])
    插入行号2.未知支持库函数_9 (3, 1, 分割信息1 [4])
    插入行号2.未知支持库函数_9 (4, 1, 相加 (到数值 (分割信息1 [2]), 到数值 (分割信息1 [3]), 到数值 (分割信息1 [4])))
    
    插入行号2.未知支持库函数_9 (1, 1, 取文本左边 (置移位表 (分割信息1 [2], 分割信息1 [3], 分割信息1 [4]), 1))
    插入行号2.未知支持库函数_9 (2, 1, 取文本中间 (置移位表 (分割信息1 [2], 分割信息1 [3], 分割信息1 [4]), 2, 1))
    插入行号2.未知支持库函数_9 (3, 1, 取文本右边 (置移位表 (分割信息1 [2], 分割信息1 [3], 分割信息1 [4]), 1))
    插入行号2.未知支持库函数_9 (相加 (到数值 (分割信息1 [2]), 5), 1, 分割信息1 [2])
    插入行号2.未知支持库函数_9 (相加 (到数值 (分割信息1 [3]), 5), 1, 分割信息1 [3])
    插入行号2.未知支持库函数_9 (相加 (到数值 (分割信息1 [4]), 5), 1, 分割信息1 [4])
    插入行号2.未知支持库函数_24 (相加 (到数值 (取文本左边 (置移位表 (分割信息1 [2], 分割信息1 [3], 分割信息1 [4]), 1)), 5), 插入行号2, 相加 (到数值 (取文本右边 (置移位表 (分割信息1 [2], 分割信息1 [3], 分割信息1 [4]), 1)), 5), #绿色)
    
    插入行号2.未知支持库函数_24 (相加 (到数值 (分割信息1 [2]), 5), 插入行号2, 相加 (到数值 (分割信息1 [2]), 5), #浅灰)
    插入行号2.未知支持库函数_24 (相加 (到数值 (分割信息1 [3]), 5), 插入行号2, 相加 (到数值 (分割信息1 [3]), 5), #黄色)
    插入行号2.未知支持库函数_24 (相加 (到数值 (分割信息1 [4]), 5), 插入行号2, 相加 (到数值 (分割信息1 [4]), 5), #艳青)
    
     ' 移位表.置单元格背景颜色 (插入行号2, 到数值 (取文本左边 (置移位表 (分割信息1 [2], 分割信息1 [3], 分割信息1 [4]), 1)) ＋ 5, 插入行号2, 到数值 (取文本左边 (置移位表 (分割信息1 [2], 分割信息1 [3], 分割信息1 [4]), 1)) ＋ 5, #浅灰)
     ' 移位表.置单元格背景颜色 (插入行号2, 到数值 (取文本中间 (置移位表 (分割信息1 [2], 分割信息1 [3], 分割信息1 [4]), 2, 1)) ＋ 5, 插入行号2, 到数值 (取文本中间 (置移位表 (分割信息1 [2], 分割信息1 [3], 分割信息1 [4]), 2, 1)) ＋ 5, #黄色)
     ' 移位表.置单元格背景颜色 (插入行号2, 到数值 (取文本右边 (置移位表 (分割信息1 [2], 分割信息1 [3], 分割信息1 [4]), 1)) ＋ 5, 插入行号2, 到数值 (取文本右边 (置移位表 (分割信息1 [2], 分割信息1 [3], 分割信息1 [4]), 1)) ＋ 5, #艳青)
    
     ' 输出调试文本 (分割信息1 [2] ＋ 分割信息1 [3] ＋ 分割信息1 [4])
    
    赋值 (一千行 [相加 (到数值 (相加 (分割信息1 [2], 分割信息1 [3], 分割信息1 [4])), 1)], 相加 (一千行 [相加 (到数值 (相加 (分割信息1 [2], 分割信息1 [3], 分割信息1 [4])), 1)], 1))
    插入行号2.未知支持库函数_9 (7, 1, 判断参数 (到数值 (分割信息1 [2]), “-1”, 1))
    插入行号2.未知支持库函数_9 (8, 1, 判断参数 (到数值 (分割信息1 [3]), “-1”, 1))
    插入行号2.未知支持库函数_9 (9, 1, 判断参数 (到数值 (分割信息1 [4]), “-1”, 1))
    插入行号2.未知支持库函数_9 (10, 1, 判断参数 (到数值 (分割信息1 [2]), “-1”, 2))
    插入行号2.未知支持库函数_9 (11, 1, 判断参数 (到数值 (分割信息1 [3]), “-1”, 2))
    插入行号2.未知支持库函数_9 (12, 1, 判断参数 (到数值 (分割信息1 [4]), “-1”, 2))
    插入行号2.未知支持库函数_9 (13, 1, 判断参数 (到数值 (分割信息1 [2]), “-1”, 3))
    插入行号2.未知支持库函数_9 (14, 1, 判断参数 (到数值 (分割信息1 [3]), “-1”, 3))
    插入行号2.未知支持库函数_9 (15, 1, 判断参数 (到数值 (分割信息1 [4]), “-1”, 3))
    
    
    插入行号2.未知支持库函数_9 (17, 1, 判断参数 (相加 (到数值 (分割信息1 [2]), 到数值 (分割信息1 [3]), 到数值 (分割信息1 [4])), “-1”, 1))
    插入行号2.未知支持库函数_9 (18, 1, 判断参数 (相加 (到数值 (分割信息1 [2]), 到数值 (分割信息1 [3]), 到数值 (分割信息1 [4])), “-2”, 2))
    插入行号2.未知支持库函数_9 (19, 1, 判断参数 (相加 (到数值 (分割信息1 [2]), 到数值 (分割信息1 [3]), 到数值 (分割信息1 [4])), “-1”, 3))
    插入行号2.未知支持库函数_9 (20, 1, 判断参数 (相加 (到数值 (分割信息1 [2]), 到数值 (分割信息1 [3]), 到数值 (分割信息1 [4])), “-1”, 9))
    
    插入行号2.未知支持库函数_9 (6, 1, 判断参数 (相加 (到数值 (分割信息1 [2]), 到数值 (分割信息1 [3]), 到数值 (分割信息1 [4])), 相加 (分割信息1 [2], “+”, 分割信息1 [3], “+”, 分割信息1 [4]), 4))
    插入行号2.未知支持库函数_9 (22, 1, 判断参数 (相加 (到数值 (分割信息1 [2]), 到数值 (分割信息1 [3]), 到数值 (分割信息1 [4])), 相加 (分割信息1 [2], “+”, 分割信息1 [3], “+”, 分割信息1 [4]), 5))
    插入行号2.未知支持库函数_9 (23, 1, 判断参数 (相加 (到数值 (分割信息1 [2]), 到数值 (分割信息1 [3]), 到数值 (分割信息1 [4])), 相加 (分割信息1 [2], “+”, 分割信息1 [3], “+”, 分割信息1 [4]), 6))
    插入行号2.未知支持库函数_9 (24, 1, 判断参数 (相加 (到数值 (分割信息1 [2]), 到数值 (分割信息1 [3]), 到数值 (分割信息1 [4])), 相加 (分割信息1 [2], “+”, 分割信息1 [3], “+”, 分割信息1 [4]), 7))
    
    .如果真 (等于 (计次, 到数值 (.内容)))
        跳出循环 ()
    .如果真结束
    
.计次循环尾 ()
.计次循环首 (33, 计次)
    .判断开始 (小于 (计次, 11))
        1.未知支持库函数_9 (计次, 1, 相减 (计次, 1))
        
    .判断 (并且 (大于 (计次, 10), 小于 (计次, 22)))
        1.未知支持库函数_9 (计次, 1, 相减 (计次, 12))
        
    .判断 (大于 (计次, 22))
        1.未知支持库函数_9 (计次, 1, 相减 (计次, 23))
        
    .默认
        
    .判断结束
    
.计次循环尾 ()
统计遗码 ()
统计移位 ()
0.未知支持库函数_9 (0, 1, “期数”)
0.未知支持库函数_9 (1, 1, “基数 1”)
0.未知支持库函数_9 (12, 1, “基数 2”)
0.未知支持库函数_9 (22, 1, “基数 3”)
2.未知支持库函数_24 (12, 相减 (., 1), 21, #银白)
0.未知支持库函数_9 (1, 1, “百”)
0.未知支持库函数_9 (2, 1, “十”)
0.未知支持库函数_9 (3, 1, “个”)
0.未知支持库函数_9 (4, 1, “和”)
0.未知支持库函数_9 (6, 1, “组”)

0.未知支持库函数_9 (7, 1, “百”)
0.未知支持库函数_9 (8, 1, “十”)
0.未知支持库函数_9 (9, 1, “个”)
0.未知支持库函数_9 (10, 1, “百”)
0.未知支持库函数_9 (11, 1, “十”)
0.未知支持库函数_9 (12, 1, “个”)
0.未知支持库函数_9 (13, 1, “百”)
0.未知支持库函数_9 (14, 1, “十”)
0.未知支持库函数_9 (15, 1, “个”)

0.未知支持库函数_9 (17, 1, “和”)
0.未知支持库函数_9 (18, 1, “和”)
0.未知支持库函数_9 (19, 1, “和”)
0.未知支持库函数_9 (20, 1, “合”)

0.未知支持库函数_9 (22, 1, “跨”)
0.未知支持库函数_9 (23, 1, “复跨”)
0.未知支持库函数_9 (24, 1, “散”)

0.未知支持库函数_32 (60)
1.未知支持库函数_32 (24)
2.未知支持库函数_32 (24)
3.未知支持库函数_32 (24)
4.未知支持库函数_32 (28)
5.未知支持库函数_32 (1)
16.未知支持库函数_32 (1)
21.未知支持库函数_32 (1)
23.未知支持库函数_32 (38)

1.未知支持库函数_18 (1, 相减 (., 1), 32, 9)
0.未知支持库函数_25 (1, 相减 (., 1), 32, 2)
0.未知支持库函数_25 (1, 相减 (., 1), 25, 2)
1.未知支持库函数_24 (10, 相减 (., 1), 12, #银白)
1.未知支持库函数_24 (1, 相减 (., 1), 4, #绿色)

0.未知支持库函数_32 (60)
4.未知支持库函数_32 (1)

.如果 (等于 (.标题, “详细列表”))
    赋值 (., 真)
.否则
    赋值 (., 真)
.如果结束

.如果 (等于 (.标题, “升序显示”))
    2.未知支持库函数_0 (1)
    1.未知支持库函数_0 (1)
    
.否则
    相减 (., 1).未知支持库函数_0 (1)
    相减 (., 1).未知支持库函数_0 (1)
    
.如果结束

赋值 (状态条文本, “读取数据完成”)
0.置文本 (相加 (状态条文本, “ 合计:”, 到文本 (取数组成员数 (分割信息)), “ 期”))
.未知支持库函数_20 (“右键手动更新数据”, -1, , , , )
.未知支持库函数_20 (“右键手动更新数据”, -1, , , , )


.子程序 统计移位, 空白型, , 
.局部变量 移位数组1, 整数型, , "1000", 
.局部变量 遗码数组2, 整数型, , "10", 
.局部变量 遗码数组3, 整数型, , "10", 
.局部变量 插入行号3, 整数型, , , 
.局部变量 计次, 整数型, , , 
.局部变量 计次1, 整数型, , , 
.局部变量 合并文本, 整数型, , , 

 ' 输出调试文本 (高级表格1.行数 － 1)
 ' 最后一次
.计次循环首 (相减 (., 1), 计次)
    赋值 (合并文本, 相加 (到数值 (相加 (相减 (., 计次).未知支持库函数_10 (1), 相减 (., 计次).未知支持库函数_10 (2), 相减 (., 计次).未知支持库函数_10 (3))), 1))
     ' 输出调试文本 (合并文本)
    赋值 (移位数组1 [合并文本], 相加 (移位数组1 [合并文本], 1))
.计次循环尾 ()
.计次循环首 (相减 (., 1), 计次)
    赋值 (合并文本, 相加 (到数值 (相加 (相减 (., 计次).未知支持库函数_10 (1), 相减 (., 计次).未知支持库函数_10 (2), 相减 (., 计次).未知支持库函数_10 (3))), 1))
    相减 (., 计次).未知支持库函数_9 (15, 1, 移位数组1 [合并文本])
.计次循环尾 ()



.子程序 统计遗码, 空白型, , 
.局部变量 遗码数组1, 整数型, , "32", 
.局部变量 遗码数组2, 整数型, , "10", 
.局部变量 遗码数组3, 整数型, , "10", 
.局部变量 插入行号3, 整数型, , , 
.局部变量 计次, 整数型, , , 
.局部变量 计次1, 整数型, , , 

 ' 输出调试文本 (高级表格1.行数 － 1)
 ' 最后一次
.计次循环首 (32, 计次)
    .如果 (不等于 (相减 (., 1).未知支持库函数_10 (计次), “”)) ' 有号
        赋值 (遗码数组1 [计次], 0)
    .否则
        赋值 (遗码数组1 [计次], 相加 (遗码数组1 [计次], 1))
    .如果结束
    
.计次循环尾 ()
.计次循环首 (相减 (., 1), 计次)
    处理事件 ()
    .计次循环首 (32, 计次1)
        .如果 (不等于 (相减 (., 1, 计次).未知支持库函数_10 (计次1), “”)) ' 有号
             ' 如果真 (行数 ＞ 1)
            .如果真 (不等于 (遗码数组1 [计次1], 0))
                相减 (., 计次).未知支持库函数_9 (计次1, 1, 到文本 (遗码数组1 [计次1]))
            .如果真结束
            
            赋值 (遗码数组1 [计次1], 0)
        .否则
            赋值 (遗码数组1 [计次1], 相加 (遗码数组1 [计次1], 1))
        .如果结束
        
    .计次循环尾 ()
.计次循环尾 ()
.计次循环首 (32, 计次)
    .如果 (不等于 (1.未知支持库函数_10 (计次), “”)) ' 有号
        赋值 (遗码数组1 [计次], 0)
    .否则
        赋值 (遗码数组1 [计次], 相减 (遗码数组1 [计次], 1))
        1.未知支持库函数_9 (计次, 1, 到文本 (遗码数组1 [计次]))
    .如果结束
    
.计次循环尾 ()



.子程序 判断参数, 文本型, , 
.参数 调入数据, 整数型, , 和值,各位值
.参数 取三个位, 文本型, , 专门计算组3组6文本,合值  "值"为 -1 时 用于比较大小之用
.参数 参数类型, 整数型, , 1:单双,2:大小,3:余3,4:组3组6,5:跨度,6:复跨,7:散度,8:区间,9:合数,

.局部变量 返回结果, 文本型, , , 
.局部变量 临时结果, 整数型, , , 
.局部变量 匿名局部变量_379, 空白型, , , 
.局部变量 分割组合, 文本型, , "0", 
.局部变量 排序数组, 整数型, , "3", 
.局部变量 组3, 整数型, , , 
.局部变量 大小值, 整数型, , , 

.判断开始 (等于 (参数类型, 1)) ' 和单双
    赋值 (临时结果, 求余数 (调入数据, 2))
    .如果 (等于 (临时结果, 1)) ' 和单
        赋值 (返回结果, “单”)
    .否则
        赋值 (返回结果, “双”)
    .如果结束
    
.判断 (等于 (参数类型, 2)) ' 和大小 ＞ 14
     ' 输出调试文本 (取三个位)
    赋值 (临时结果, 调入数据)
    .如果 (等于 (取三个位, “-1”))
        赋值 (大小值, 4)
    .否则
        赋值 (大小值, 14)
         ' 临时结果 ＝ 到数值 (取三个位)
    .如果结束
    .如果 (大于 (临时结果, 大小值)) ' 和大
        赋值 (返回结果, “大”)
    .否则
        赋值 (返回结果, “小”)
    .如果结束
    
.判断 (等于 (参数类型, 3)) ' 和余3
    赋值 (临时结果, 求余数 (调入数据, 3))
    赋值 (返回结果, 到文本 (临时结果))
    
.判断 (等于 (参数类型, 4)) ' 组3组六
    赋值 (分割组合, 分割文本 (取三个位, “+”, ))
    .如果真 (等于 (到数值 (分割组合 [1]), 到数值 (分割组合 [2])))
        赋值 (组3, 相加 (组3, 1))
    .如果真结束
    .如果真 (等于 (到数值 (分割组合 [1]), 到数值 (分割组合 [3])))
        赋值 (组3, 相加 (组3, 1))
    .如果真结束
    .如果真 (等于 (到数值 (分割组合 [2]), 到数值 (分割组合 [3])))
        赋值 (组3, 相加 (组3, 1))
    .如果真结束
    
    .如果 (大于 (组3, 0))
        赋值 (返回结果, “3”)
    .否则
        赋值 (返回结果, “6”)
    .如果结束
    
.判断 (等于 (参数类型, 5)) ' 跨度
    赋值 (分割组合, 分割文本 (取三个位, “+”, ))
    赋值 (排序数组 [1], 到数值 (分割组合 [1]))
    赋值 (排序数组 [2], 到数值 (分割组合 [2]))
    赋值 (排序数组 [3], 到数值 (分割组合 [3]))
    数组排序 (排序数组, )
    赋值 (临时结果, 取绝对值 (相减 (排序数组 [1], 排序数组 [3])))
    赋值 (返回结果, 到文本 (临时结果))
.判断 (等于 (参数类型, 6)) ' 复跨度
    赋值 (分割组合, 分割文本 (取三个位, “+”, ))
    赋值 (排序数组 [1], 到数值 (分割组合 [1]))
    赋值 (排序数组 [2], 到数值 (分割组合 [2]))
    赋值 (排序数组 [3], 到数值 (分割组合 [3]))
    赋值 (返回结果, 相加 (“A”, 到文本 (取绝对值 (相减 (排序数组 [1], 排序数组 [3]))), “B”, 到文本 (取绝对值 (相减 (排序数组 [1], 排序数组 [2])))))
.判断 (等于 (参数类型, 7)) ' 散度
    赋值 (分割组合, 分割文本 (取三个位, “+”, ))
    赋值 (排序数组 [1], 到数值 (分割组合 [1]))
    赋值 (排序数组 [2], 到数值 (分割组合 [2]))
    赋值 (排序数组 [3], 到数值 (分割组合 [3]))
    赋值 (临时结果, 取绝对值 (相减 (排序数组 [1], 排序数组 [2])))
    .如果真 (小于 (取绝对值 (相减 (排序数组 [2], 排序数组 [3])), 临时结果))
        赋值 (临时结果, 取绝对值 (相减 (排序数组 [2], 排序数组 [3])))
    .如果真结束
    .如果真 (小于 (取绝对值 (相减 (排序数组 [1], 排序数组 [3])), 临时结果))
        赋值 (临时结果, 取绝对值 (相减 (排序数组 [1], 排序数组 [3])))
    .如果真结束
    赋值 (返回结果, 到文本 (临时结果))
    
.判断 (等于 (参数类型, 8)) ' 区间 0-250 ,250-500, 500-750 750-999
    
.判断 (等于 (参数类型, 9)) ' 合值
    .如果真 (大于 (调入数据, 9))
        赋值 (临时结果, 到数值 (取文本左边 (到文本 (调入数据), 1)))
    .如果真结束
    赋值 (临时结果, 相加 (临时结果, 到数值 (取文本右边 (到文本 (调入数据), 1))))
    .如果真 (等于 (临时结果, 10))
        赋值 (临时结果, 0)
    .如果真结束
    赋值 (返回结果, 到文本 (临时结果))
     ' 分割组合 ＝ 分割文本 (取三个位, “+”, )
     ' 临时结果 ＝ 到数值 (分割组合 [1]) ＋ 到数值 (分割组合 [2]) ＋ 到数值 (分割组合 [3])
    
    
.默认
    
.判断结束

返回 (返回结果)

.子程序 _按钮2_被单击, 空白型, , 
.如果真 (小于或等于 (., 75))
    赋值 (., 相加 (., 5))
    更新曲线图1 (未知支持库函数_4 ())
.如果真结束



.子程序 _按钮3_被单击, 空白型, , 
.如果真 (大于或等于 (., 35))
    赋值 (., 相减 (., 5))
    更新曲线图1 (未知支持库函数_4 ())
.如果真结束



.子程序 _按钮4_被单击, 空白型, , 
.局部变量 临时表格, 未知类型0x20001, , , 

.如果 (等于 (.标题, “详细列表”))
    赋值 (.标题, “分布列表”)
    赋值 (., 真)
    赋值 (., 假)
    
.否则
    赋值 (., 真)
    赋值 (., 假)
    赋值 (.标题, “详细列表”)
.如果结束


.子程序 _高级表格2_光标位置改变, 空白型, , 
 ' 输出调试文本 (高级表格2.取光标行号 ())
更新曲线图1 (未知支持库函数_4 ())

.子程序 更新曲线图1, 空白型, , 
.参数 列号, 整数型, , 

.局部变量 计次, 整数型, , , 
.局部变量 列表格行号, 整数型, , , 
.局部变量 临时刻度, 整数型, , , 

.判断开始 (并且 (大于 (列号, 0), 小于 (列号, 4)))
    赋值 (临时刻度, .)
    赋值 (., 0)
    赋值 (., 临时刻度)
    
.判断 (或者 (等于 (列号, 19), 等于 (列号, 20), 等于 (列号, 22), 等于 (列号, 24)))
    赋值 (临时刻度, .)
    赋值 (., 0)
    赋值 (., 临时刻度)
    
.默认
    
.判断结束

.判断开始 (并且 (小于 (列号, 4), 大于 (列号, 0)))
    赋值 (., 9)
    赋值 (., 3)
    
    .计次循环首 (., 计次)
        .如果 (等于 (.标题, “降序显示”))
            赋值 (列表格行号, 相加 (相减 (未知支持库函数_3 (), 计次), 1))
        .否则
            赋值 (列表格行号, 相减 (相加 (未知支持库函数_3 (), 计次), 1))
        .如果结束
        .如果真 (小于 (列表格行号, 1))
            跳出循环 ()
        .如果真结束
         ' 输出调试文本 (列表格行号)
        赋值 (., 相减 (计次, 1))
        赋值 (., 到数值 (列表格行号.未知支持库函数_10 (列号)))
    .计次循环尾 ()
    
    
.判断 (等于 (列号, 4)) ' 和值
    赋值 (., 27)
    赋值 (., 3)
    .计次循环首 (., 计次)
        .如果 (等于 (.标题, “降序显示”))
            赋值 (列表格行号, 相加 (相减 (未知支持库函数_3 (), 计次), 1))
        .否则
            赋值 (列表格行号, 相减 (相加 (未知支持库函数_3 (), 计次), 1))
        .如果结束
        
        
        .如果真 (小于 (列表格行号, 1))
            跳出循环 ()
        .如果真结束
        
         ' 输出调试文本 (列表格行号)
        赋值 (., 相减 (计次, 1))
        赋值 (., 到数值 (列表格行号.未知支持库函数_10 (列号)))
    .计次循环尾 ()
    
.判断 (或者 (等于 (列号, 22), 等于 (列号, 20))) ' 跨度 和 合值
    赋值 (., 9)
    赋值 (., 9)
    .计次循环首 (., 计次)
        .如果 (等于 (.标题, “降序显示”))
            赋值 (列表格行号, 相加 (相减 (未知支持库函数_3 (), 计次), 1))
        .否则
            赋值 (列表格行号, 相减 (相加 (未知支持库函数_3 (), 计次), 1))
        .如果结束
        
        
        .如果真 (小于 (列表格行号, 1))
            跳出循环 ()
        .如果真结束
        
         ' 输出调试文本 (列表格行号)
        赋值 (., 相减 (计次, 1))
        赋值 (., 到数值 (列表格行号.未知支持库函数_10 (列号)))
    .计次循环尾 ()
    
.判断 (或者 (等于 (列号, 24), 等于 (列号, 19))) ' 散度 和 余3
    赋值 (., 2)
    赋值 (., 2)
    .计次循环首 (., 计次)
        .如果 (等于 (.标题, “降序显示”))
            赋值 (列表格行号, 相加 (相减 (未知支持库函数_3 (), 计次), 1))
        .否则
            赋值 (列表格行号, 相减 (相加 (未知支持库函数_3 (), 计次), 1))
        .如果结束
        
        
        .如果真 (小于 (列表格行号, 1))
            跳出循环 ()
        .如果真结束
        
         ' 输出调试文本 (列表格行号)
        赋值 (., 相减 (计次, 1))
        赋值 (., 到数值 (列表格行号.未知支持库函数_10 (列号)))
    .计次循环尾 ()
.默认
    
.判断结束



.子程序 _按钮5_被单击, 空白型, , 
.如果 (等于 (.标题, “升序显示”))
    赋值 (.标题, “降序显示”)
.否则
    赋值 (.标题, “升序显示”)
.如果结束
_按钮1_被单击 ()

.子程序 _在线更新_被选择, 空白型, , 
连接网站 (连接文件名, )
.如果 (等于 (.内容, “”))
    赋值 (.现行选中项, 相加 (.现行选中项, 1))
    .如果真 (大于 (.现行选中项, 3))
        赋值 (.现行选中项, 0)
    .如果真结束
    
    连接网站 (连接文件名, )
.否则
    0.置文本 (“读取数据完成”)
    _按钮1_被单击 ()
.如果结束

.如果真 (等于 (.内容, “”))
    连接网站 (“infotxt.txt”, )
    
    .如果 (不等于 (寻找文本 (.内容, “DOCTYPE HTML PUBLIC”, , 假), -1)) ' 下载不成功
         ' 输出调试文本 (编辑框4.内容)
         ' 重定义数组 (广告组, 假, 0)
         ' 插入成员 (广告组, 1, “P3D分析程序 V1.0版本 QQ:619366608 彩票群:14253672” ＋ 字符 (10) ＋ “ ”)
        赋值 (.内容, 相加 (“P3D分析程序 V1.0版本 QQ:619366608 彩票群:14253672”, 字符 (10), “ ”))
        
        赋值 (.现行选中项, 相加 (.现行选中项, 1))
        .如果真 (大于 (.现行选中项, 3))
            赋值 (.现行选中项, 0)
        .如果真结束
        _按钮13_被单击 ()
        赋值 (.内容, “”)
         ' 连接网站 (“infotxt.txt”, 编辑框4)
        
    .否则
        0.置文本 (“读取数据完成”)
        _按钮13_被单击 ()
        .如果 (不等于 (广告组 [取数组成员数 (广告组)], “”))
            赋值 (.禁止, 假)
        .否则
            赋值 (.禁止, 真)
             ' 输出调试文本 (“有新版本,可以升级”)
        .如果结束
        
        
        
    .如果结束
    
.如果真结束


.子程序 连接网站, 空白型, , 
.参数 连接文本, 文本型, , 
.参数 内容1, 编辑框, , 

.局部变量 分割信息, 文本型, , "0", 
.局部变量 分割信息1, 文本型, , "0", 
.局部变量 计次, 整数型, , , 
.局部变量 XML对象, 对象, , , 
.局部变量 变体型, 变体型, , , 
.局部变量 网页代码, 文本型, , , 
.局部变量 字节集数据, 字节集, , , 
.局部变量 临时整数, 整数型, , , 

.如果真 (等于 (XML对象.创建 (“MSXML2.XMLHTTP”, ), 假))
    .如果真 (等于 (XML对象.创建 (“Microsoft.XMLHTTP”, ), 假))
         ' 信息框 (“创建对象失败”, 0, )
        返回 () ' 两种类型都不支持返回
    .如果真结束
    
.如果真结束

XML对象.方法 (“open”, “GET”, 相加 (连接地址1 [相加 (.现行选中项, 1)], 连接文本), 假)
XML对象.方法 (“send”, )
赋值 (变体型, XML对象.读属性 (“responseBody”, ))
赋值 (字节集数据, 变体型.取字节集 ())
赋值 (网页代码, 到文本 (字节集数据))
赋值 (内容1.内容, 网页代码)
XML对象.清除 ()



.子程序 _编辑框1_字符输入, 整数型, , 
.参数 字符代码, 整数型, , 

.如果真 (等于 (字符代码, #回车键))
    _按钮1_被单击 ()
.如果真结束


.子程序 初始表, 空白型, , 
0.未知支持库函数_32 (55)
1.未知支持库函数_32 (81)
 ' 数据显示表.置数据 (1, 0, 1, “和值号码”)
 ' 数据显示表.置数据 (1, 1, 1, “1,2,3,4,5”)


.子程序 _按钮6_被单击, 空白型, , 
赋值 (是否在检验, 假)
赋值 (.可视, 真)
 ' 数据显示表.可视 ＝ 取反 (数据显示表.可视)
未知支持库函数_57 ()
赋值 (., 1)
赋值 (., 4)
赋值 (., 28)
0.未知支持库函数_9 (0, 1, “号1”)
0.未知支持库函数_9 (1, 1, “号2”)
0.未知支持库函数_9 (2, 1, “号3”)
0.未知支持库函数_9 (3, 1, “结果”)
3.未知支持库函数_32 (35)
.未知支持库函数_20 (“右键打开检验方式”, -1, , , , )
 ' 数据显示表.置数据 (1, 1, 1, “1,2,3,4,5”)
赋值 (.标题, “拖胆缩水”)

.子程序 _按钮7_被单击, 空白型, , 
.局部变量 三位文本, 文本型, , , 

赋值 (三位文本, 相加 (相减 (., 1).未知支持库函数_10 (0), 相减 (., 1).未知支持库函数_10 (1), 相减 (., 1).未知支持库函数_10 (2)))
 ' 输出调试文本 (三位文本)
.如果真 (或者 (等于 (., 1), 等于 (取文本长度 (三位文本), 3)))
    .如果真 (小于 (., 17))
        “”.未知支持库函数_38 (.)
        相减 (., 1).未知支持库函数_0 (0)
    .如果真结束
    获取焦点 ()
    
.如果真结束


.子程序 _按钮9_被单击, 空白型, , 
.如果真 (大于 (., 0))
    未知支持库函数_3 ().未知支持库函数_36 ()
.如果真结束


.子程序 _按钮8_被单击, 空白型, , 
赋值 (., 2)
1.未知支持库函数_62 (0, 1, 3)

.子程序 _按钮10_被单击, 空白型, , 
.局部变量 计次, 整数型, , , 
.局部变量 计次1, 整数型, , , 
.局部变量 结果数组, 整数型, , "0", 
.局部变量 临时文本1, 文本型, , "2", 

.未知支持库函数_20 (“”, -1, , , , )
赋值 (.标题, “拖胆缩水”)
重定义数组 (结果数组, 假, 相减 (., 1))
.计次循环首 (相减 (., 1), 计次)
    赋值 (临时文本1 [1], “”)
    赋值 (临时文本1 [1], 相加 (临时文本1 [1], 计次.未知支持库函数_10 (1)))
    赋值 (临时文本1 [1], 相加 (临时文本1 [1], 计次.未知支持库函数_10 (2)))
    赋值 (临时文本1 [1], 相加 (临时文本1 [1], 计次.未知支持库函数_10 (3)))
     ' 输出调试文本 (临时文本1 [1])
    .计次循环首 (相减 (., 1), 计次1)
        赋值 (临时文本1 [2], “”)
        赋值 (临时文本1 [2], 相加 (临时文本1 [2], 计次1.未知支持库函数_10 (0)))
        赋值 (临时文本1 [2], 相加 (临时文本1 [2], 计次1.未知支持库函数_10 (1)))
        赋值 (临时文本1 [2], 相加 (临时文本1 [2], 计次1.未知支持库函数_10 (2)))
         ' 输出调试文本 (临时文本1 [2])
         ' ---------------------------------------
        .如果真 (等于 (到数值 (临时文本1 [1]), 到数值 (临时文本1 [2])))
            赋值 (结果数组 [计次1], 相加 (结果数组 [计次1], 1))
        .如果真结束
        
    .计次循环尾 ()
.计次循环尾 ()
.计次循环首 (相减 (., 1), 计次1)
    计次1.未知支持库函数_9 (3, 1, 结果数组 [计次1])
.计次循环尾 ()


.子程序 _冷热统计_被单击, 空白型, , 存在问题,没有时间改
.局部变量 计次, 整数型, , , 
.局部变量 A10, 整数型, , "10", 
.局部变量 计次1, 整数型, , , 
.局部变量 列表格行号, 整数型, , , 
.局部变量 号列表, 文本型, , "3", 1.热 2.温 3.冷
.局部变量 匿名局部变量_586, 空白型, , , 
.局部变量 组合列表, 文本型, , , 

 ' 数据显示表.可视 ＝ 取反 (数据显示表.可视)
.未知支持库函数_20 (“”, -1, , , , )

赋值 (.可视, 假)

未知支持库函数_57 ()
赋值 (., 5)
赋值 (., 2)
赋值 (., 36)
1.未知支持库函数_32 (100)
1.未知支持库函数_9 (0, 1, “热号”)
2.未知支持库函数_9 (0, 1, “温号”)
3.未知支持库函数_9 (0, 1, “冷号”)
4.未知支持库函数_9 (0, 1, “组合”)
0.未知支持库函数_9 (0, 1, “类型”)
0.未知支持库函数_9 (1, 1, “号码列表”)

.如果真 (不等于 (.内容, “”))
    .计次循环首 (7, 计次)
        .如果 (等于 (.标题, “降序显示”))
            赋值 (列表格行号, 相加 (相减 (未知支持库函数_3 (), 计次), 1))
        .否则
            赋值 (列表格行号, 相减 (相加 (未知支持库函数_3 (), 计次), 1))
        .如果结束
        
        .计次循环首 (3, 计次1)
            赋值 (A10 [相加 (到数值 (列表格行号.未知支持库函数_10 (计次1)), 1)], 相加 (A10 [相加 (到数值 (列表格行号.未知支持库函数_10 (计次1)), 1)], 1))
        .计次循环尾 ()
    .计次循环尾 ()
    .计次循环首 (10, 计次)
        .判断开始 (等于 (A10 [计次], 2)) ' 温号
            赋值 (号列表 [2], 相加 (号列表 [2], 到文本 (相减 (计次, 1)), “;”))
            
        .判断 (小于 (A10 [计次], 2)) ' 冷号
            赋值 (号列表 [3], 相加 (号列表 [3], 到文本 (相减 (计次, 1)), “;”))
            
        .判断 (大于 (A10 [计次], 2)) ' 热号
            赋值 (号列表 [1], 相加 (号列表 [1], 到文本 (相减 (计次, 1)), “;”))
        .默认
            
        .判断结束
        
    .计次循环尾 ()
    1.未知支持库函数_9 (1, 1, 号列表 [1])
    2.未知支持库函数_9 (1, 1, 号列表 [2])
    3.未知支持库函数_9 (1, 1, 号列表 [3])
    
     ' -----------------------
     ' 重定义数组 (A10, 假, 10)
    .计次循环首 (7, 计次)
        .如果 (等于 (.标题, “降序显示”))
            赋值 (列表格行号, 相减 (未知支持库函数_3 (), 计次))
        .否则
            赋值 (列表格行号, 相加 (未知支持库函数_3 (), 计次))
        .如果结束
        
        .计次循环首 (3, 计次1)
            赋值 (A10 [相加 (到数值 (列表格行号.未知支持库函数_10 (计次1)), 1)], 相加 (A10 [相加 (到数值 (列表格行号.未知支持库函数_10 (计次1)), 1)], 1))
        .计次循环尾 ()
    .计次循环尾 ()
    .计次循环首 (10, 计次)
        .判断开始 (等于 (A10 [计次], 2)) ' 温号
            赋值 (号列表 [2], 相加 (号列表 [2], 到文本 (相减 (计次, 1)), “;”))
            
        .判断 (小于 (A10 [计次], 2)) ' 冷号
            赋值 (号列表 [3], 相加 (号列表 [3], 到文本 (相减 (计次, 1)), “;”))
            
        .判断 (大于 (A10 [计次], 2)) ' 热号
            赋值 (号列表 [1], 相加 (号列表 [1], 到文本 (相减 (计次, 1)), “;”))
        .默认
            
        .判断结束
        
    .计次循环尾 ()
    .计次循环首 (3, 计次)
        .如果真 (不等于 (寻找文本 (号列表 [1], 未知支持库函数_3 ().未知支持库函数_10 (计次), , 假), -1))
            赋值 (组合列表, 相加 (组合列表, “热;”))
        .如果真结束
        .如果真 (不等于 (寻找文本 (号列表 [2], 未知支持库函数_3 ().未知支持库函数_10 (计次), , 假), -1))
            赋值 (组合列表, 相加 (组合列表, “温;”))
        .如果真结束
        .如果真 (不等于 (寻找文本 (号列表 [3], 未知支持库函数_3 ().未知支持库函数_10 (计次), , 假), -1))
            赋值 (组合列表, 相加 (组合列表, “冷;”))
        .如果真结束
        
    .计次循环尾 ()
    4.未知支持库函数_9 (1, 1, 组合列表)
    
.如果真结束





.子程序 _退出程序_被选择, 空白型, , 
结束 ()

.子程序 _高级选择夹1_子夹被改变, 空白型, , 
.判断开始 (等于 (., 4))
    .如果真 (等于 (., “”))
        赋值 (., 相加 (取运行目录 (), “\js3d.help”))
    .如果真结束
    
.默认
    
.判断结束


.子程序 _操作教程_被选择, 空白型, , 
赋值 (., 4)

.子程序 _浏览数据_被选择, 空白型, , 
赋值 (., 0)


.子程序 _开号统计_被选择, 空白型, , 
.局部变量 计次, 整数型, , , 
.局部变量 计次1, 整数型, , , 
.局部变量 三D, 文本型, , , 
.局部变量 三位, 整数型, , "3", 
.局部变量 插入行, 整数型, , , 

赋值 (.可视, 假)
 ' 数据显示表.可视 ＝ 取反 (数据显示表.可视)
未知支持库函数_57 ()
赋值 (., 10)
赋值 (., 3)
赋值 (., 42)
0.未知支持库函数_9 (0, 1, “号1”)
0.未知支持库函数_9 (1, 1, “号2”)
0.未知支持库函数_9 (2, 1, “号3”)
0.未知支持库函数_9 (3, 1, “结果”)
3.未知支持库函数_32 (40)

 ' 高级选择夹1.现行子夹 ＝ 3
赋值 (., 1)
.计次循环首 (1000, 计次)
    赋值 (三D, 相加 (取重复文本 (相减 (3, 到数值 (取文本长度 (到文本 (相减 (计次, 1))))), “0”), 到文本 (相减 (计次, 1))))
    赋值 (三位 [1], 到数值 (取文本左边 (三D, 1)))
    赋值 (三位 [3], 到数值 (取文本右边 (三D, 1)))
    赋值 (三位 [2], 到数值 (取文本中间 (三D, 2, 1)))
    .如果 (等于 (一千行 [计次], 0)) ' 向后插入
        “”.未知支持库函数_38 (.)
        赋值 (插入行, 相减 (., 1))
    .否则
        “”.未知支持库函数_38 (1)
        赋值 (插入行, 1)
    .如果结束
    .计次循环首 (4, 计次1)
        .如果 (小于 (计次1, 4))
            插入行.未知支持库函数_9 (相减 (计次1, 1), 1, 三位 [计次1])
        .否则
            插入行.未知支持库函数_9 (相减 (计次1, 1), 1, 相加 (三位 [1], 三位 [2], 三位 [3]))
        .如果结束
        
    .计次循环尾 ()
    插入行.未知支持库函数_9 (相减 (计次1, 1), 1, 一千行 [计次])
.计次循环尾 ()
0.未知支持库函数_32 (24)
1.未知支持库函数_32 (24)
2.未知支持库函数_32 (24)
3.未知支持库函数_32 (24)
4.未知支持库函数_32 (30)
 ' 高级表格3.置列宽 (5, 30)
0.未知支持库函数_25 (0, 相减 (., 1), 4, 2)


.子程序 _检验号码_被选择, 空白型, , 
.局部变量 分割信息, 文本型, , "0", 
.局部变量 分割信息1, 文本型, , "0", 
.局部变量 计次, 整数型, , , 
.局部变量 计次1, 整数型, , , 

 ' 导入说明.可视 ＝ 真

赋值 (.可视, 真)
 ' 数据显示表.可视 ＝ 取反 (数据显示表.可视)
未知支持库函数_57 ()
赋值 (., 1)
赋值 (., 4)
赋值 (., 28)

赋值 (.初始目录, 取运行目录 ())
打开 ()
赋值 (.内容, 到文本 (读入文件 (.文件名)))
赋值 (分割信息, 分割文本 (.内容, 字符 (10), ))
.计次循环首 (取数组成员数 (分割信息), 计次)
    赋值 (分割信息1, 分割文本 (分割信息 [计次], “ ”, ))
    “”.未知支持库函数_38 (.)
    .计次循环首 (取数组成员数 (分割信息1), 计次1)
        相减 (., 1).未知支持库函数_9 (相减 (计次1, 1), 1, 分割信息1 [计次1])
    .计次循环尾 ()
.计次循环尾 ()
 ' 数据显示表.列宽 ＝ 28
0.未知支持库函数_9 (0, 1, “号1”)
0.未知支持库函数_9 (1, 1, “号2”)
0.未知支持库函数_9 (2, 1, “号3”)
0.未知支持库函数_9 (3, 1, “结果”)
3.未知支持库函数_32 (32)
 ' 导入说明.可视 ＝ 假


.子程序 _杀码分析_被选择, 空白型, , 
.局部变量 计次, 整数型, , , 
.局部变量 结果文本, 文本型, , "10", 
.局部变量 列表格行号, 整数型, , , 
.局部变量 加减1, 整数型, , , 


赋值 (., 1)
赋值 (., 1)
.如果 (等于 (.标题, “降序显示”))
    赋值 (列表格行号, 相减 (., 1))
.否则
    赋值 (列表格行号, 1)
.如果结束
 ' 输出调试文本 (高级表格2.取数据 (列表格行号, 0))

到文本 (相加 (到数值 (列表格行号.未知支持库函数_10 (0)), 1)).未知支持库函数_38 (.)
.计次循环首 (相减 (., 1), 计次)
    .如果 (等于 (.标题, “降序显示”))
        赋值 (列表格行号, 相减 (., 计次))
        赋值 (加减1, 1)
    .否则
        赋值 (列表格行号, 计次)
        赋值 (加减1, -1)
    .如果结束
    
    列表格行号.未知支持库函数_10 (0).未知支持库函数_38 (.)
    赋值 (结果文本 [1], 杀码公式集 (列表格行号.未知支持库函数_10 (1), 列表格行号.未知支持库函数_10 (2), 列表格行号.未知支持库函数_10 (3), 列表格行号.未知支持库函数_10 (4), , 1, -1))
    
    赋值 (结果文本 [2], 杀码公式集 (列表格行号.未知支持库函数_10 (1), 列表格行号.未知支持库函数_10 (2), 列表格行号.未知支持库函数_10 (3), 列表格行号.未知支持库函数_10 (4), , 2, -1))
    
    赋值 (结果文本 [3], 杀码公式集 (列表格行号.未知支持库函数_10 (1), 列表格行号.未知支持库函数_10 (2), 列表格行号.未知支持库函数_10 (3), 列表格行号.未知支持库函数_10 (4), , 3, -1))
    
    赋值 (结果文本 [4], 杀码公式集 (列表格行号.未知支持库函数_10 (1), 列表格行号.未知支持库函数_10 (2), 列表格行号.未知支持库函数_10 (3), 列表格行号.未知支持库函数_10 (4), 列表格行号.未知支持库函数_10 (0), 4, -1))
    
    赋值 (结果文本 [5], 杀码公式集 (列表格行号.未知支持库函数_10 (1), 列表格行号.未知支持库函数_10 (2), 列表格行号.未知支持库函数_10 (3), 列表格行号.未知支持库函数_10 (4), 列表格行号.未知支持库函数_10 (0), 5, -1))
    
    赋值 (结果文本 [6], 杀码公式集 (列表格行号.未知支持库函数_10 (1), 列表格行号.未知支持库函数_10 (2), 列表格行号.未知支持库函数_10 (3), 列表格行号.未知支持库函数_10 (4), 列表格行号.未知支持库函数_10 (0), 6, -1))
    
    .如果真 (等于 (列表格行号, 1))
        0.未知支持库函数_9 (1, 1, “列1绝杀”)
        0.未知支持库函数_9 (2, 1, “列2绝杀”)
        0.未知支持库函数_9 (3, 1, “列3绝杀”)
        0.未知支持库函数_9 (4, 1, “列4绝杀”)
        0.未知支持库函数_9 (5, 1, “列5绝杀”)
        0.未知支持库函数_9 (6, 1, “列6绝杀”)
        
        相减 (., 2).未知支持库函数_9 (1, 1, 结果文本 [1])
        相减 (., 2).未知支持库函数_9 (2, 1, 结果文本 [2])
        相减 (., 2).未知支持库函数_9 (3, 1, 结果文本 [3])
        相减 (., 2).未知支持库函数_9 (4, 1, 结果文本 [4])
        相减 (., 2).未知支持库函数_9 (5, 1, 结果文本 [5])
        相减 (., 2).未知支持库函数_9 (6, 1, 结果文本 [6])
        
    .如果真结束
    .如果真 (大于 (列表格行号, 1))
        相减 (., 2).未知支持库函数_9 (1, 1, 结果文本 [1])
        .如果真 (或者 (等于 (到数值 (结果文本 [1]), 到数值 (相加 (列表格行号, 加减1).未知支持库函数_10 (1))), 等于 (到数值 (结果文本 [1]), 到数值 (相加 (列表格行号, 加减1).未知支持库函数_10 (2))), 等于 (到数值 (结果文本 [1]), 到数值 (相加 (列表格行号, 加减1).未知支持库函数_10 (3)))))
            相减 (., 2).未知支持库函数_9 (1, 1, 相加 (结果文本 [1], “ 杀错”))
        .如果真结束
        
        相减 (., 2).未知支持库函数_9 (2, 1, 结果文本 [2])
        .如果真 (或者 (等于 (到数值 (结果文本 [2]), 到数值 (相加 (列表格行号, 加减1).未知支持库函数_10 (1))), 等于 (到数值 (结果文本 [2]), 到数值 (相加 (列表格行号, 加减1).未知支持库函数_10 (2))), 等于 (到数值 (结果文本 [2]), 到数值 (相加 (列表格行号, 加减1).未知支持库函数_10 (3)))))
            相减 (., 2).未知支持库函数_9 (2, 1, 相加 (结果文本 [2], “ 杀错”))
        .如果真结束
        
        相减 (., 2).未知支持库函数_9 (3, 1, 结果文本 [3])
        .如果真 (或者 (等于 (到数值 (结果文本 [3]), 到数值 (相加 (列表格行号, 加减1).未知支持库函数_10 (1))), 等于 (到数值 (结果文本 [3]), 到数值 (相加 (列表格行号, 加减1).未知支持库函数_10 (2))), 等于 (到数值 (结果文本 [3]), 到数值 (相加 (列表格行号, 加减1).未知支持库函数_10 (3)))))
            相减 (., 2).未知支持库函数_9 (3, 1, 相加 (结果文本 [3], “ 杀错”))
        .如果真结束
        
        相减 (., 2).未知支持库函数_9 (4, 1, 结果文本 [4])
        .如果真 (或者 (等于 (到数值 (结果文本 [4]), 到数值 (相加 (列表格行号, 加减1).未知支持库函数_10 (1))), 等于 (到数值 (结果文本 [4]), 到数值 (相加 (列表格行号, 加减1).未知支持库函数_10 (2))), 等于 (到数值 (结果文本 [4]), 到数值 (相加 (列表格行号, 加减1).未知支持库函数_10 (3)))))
            相减 (., 2).未知支持库函数_9 (4, 1, 相加 (结果文本 [4], “ 杀错”))
        .如果真结束
        
        相减 (., 2).未知支持库函数_9 (5, 1, 结果文本 [5])
        .如果真 (或者 (等于 (到数值 (结果文本 [5]), 到数值 (相加 (列表格行号, 加减1).未知支持库函数_10 (1))), 等于 (到数值 (结果文本 [5]), 到数值 (相加 (列表格行号, 加减1).未知支持库函数_10 (2))), 等于 (到数值 (结果文本 [5]), 到数值 (相加 (列表格行号, 加减1).未知支持库函数_10 (3)))))
            相减 (., 2).未知支持库函数_9 (5, 1, 相加 (结果文本 [5], “ 杀错”))
        .如果真结束
        
        相减 (., 2).未知支持库函数_9 (6, 1, 结果文本 [6])
        .如果真 (或者 (等于 (到数值 (结果文本 [6]), 到数值 (相加 (列表格行号, 加减1).未知支持库函数_10 (1))), 等于 (到数值 (结果文本 [6]), 到数值 (相加 (列表格行号, 加减1).未知支持库函数_10 (2))), 等于 (到数值 (结果文本 [6]), 到数值 (相加 (列表格行号, 加减1).未知支持库函数_10 (3)))))
            相减 (., 2).未知支持库函数_9 (6, 1, 相加 (结果文本 [6], “ 杀错”))
        .如果真结束
        
    .如果真结束
    
.计次循环尾 ()
0.未知支持库函数_32 (60)

.子程序 杀码公式集, 文本型, , 
.参数 位1, 文本型, 可空, 
.参数 位2, 文本型, 可空, 
.参数 位3, 文本型, 可空, 
.参数 和位, 文本型, 可空, 
.参数 期尾, 文本型, 可空, 
.参数 杀码类型, 整数型, , 1.和-百  2.最大-最小 3.百-个 4.期尾杀码 5.百对冲 6.百-十 7.跨杀码
.参数 附加数值, 整数型, 可空, 

.局部变量 返回的文本, 文本型, , , 
.局部变量 临时结果, 整数型, , , 
.局部变量 临时大小, 整数型, , "3", 
.局部变量 分割附加数, 文本型, , "0", 
.局部变量 计次1, 整数型, , , 

赋值 (分割附加数, 分割文本 (.内容, “,”, ))
.判断开始 (不等于 (附加数值, -1)) ' 用于调试子程序使用
    .计次循环首 (取数组成员数 (分割附加数), 计次1)
        赋值 (分割附加数 [计次1], 到文本 (附加数值))
    .计次循环尾 ()
.默认
    
.判断结束

.判断开始 (等于 (杀码类型, 1)) ' 1.和-百
    赋值 (临时结果, 相加 (相减 (到数值 (和位), 到数值 (位1)), 到数值 (分割附加数 [1])))
    .如果真 (大于 (临时结果, 10))
        赋值 (临时结果, 到数值 (取文本右边 (到文本 (临时结果), 1)))
    .如果真结束
    .如果真 (等于 (临时结果, 10))
        赋值 (临时结果, 0)
    .如果真结束
    
.判断 (等于 (杀码类型, 2)) ' 2.最大-最小
     ' 找出最大和最小
    赋值 (临时大小 [1], 到数值 (位1))
    赋值 (临时大小 [2], 到数值 (位2))
    赋值 (临时大小 [3], 到数值 (位3))
    数组排序 (临时大小, )
     ' 输出调试文本 (到文本 (临时大小 [1]) ＋ “  ” ＋ 到文本 (临时大小 [3]))
    赋值 (临时结果, 相加 (取绝对值 (相减 (临时大小 [1], 临时大小 [3])), 到数值 (分割附加数 [2])))
    .如果真 (大于 (临时结果, 10))
        赋值 (临时结果, 到数值 (取文本右边 (到文本 (临时结果), 1)))
    .如果真结束
    .如果真 (等于 (临时结果, 10))
        赋值 (临时结果, 0)
    .如果真结束
    
     ' 输出调试文本 (到文本 (临时大小 [1]) ＋ “>>>” ＋ 到文本 (临时大小 [2]))
.判断 (等于 (杀码类型, 3)) ' 3.十-个
    赋值 (临时结果, 相加 (取绝对值 (相减 (到数值 (位3), 到数值 (位2))), 到数值 (分割附加数 [3])))
    .如果真 (大于 (临时结果, 10))
        赋值 (临时结果, 到数值 (取文本右边 (到文本 (临时结果), 1)))
    .如果真结束
    .如果真 (等于 (临时结果, 10))
        赋值 (临时结果, 0)
    .如果真结束
    
.判断 (等于 (杀码类型, 4)) ' 4.期尾杀码
    赋值 (临时结果, 相加 (到数值 (取文本右边 (期尾, 1)), 到数值 (分割附加数 [4])))
    .如果真 (大于 (临时结果, 10))
        赋值 (临时结果, 到数值 (取文本右边 (到文本 (临时结果), 1)))
    .如果真结束
    .如果真 (等于 (临时结果, 10))
        赋值 (临时结果, 0)
    .如果真结束
    
.判断 (等于 (杀码类型, 5)) ' 5.百对冲
    赋值 (临时结果, 相加 (对冲数 [相加 (到数值 (位1), 1)], 到数值 (分割附加数 [5])))
    .如果真 (大于 (临时结果, 10))
        赋值 (临时结果, 到数值 (取文本右边 (到文本 (临时结果), 1)))
    .如果真结束
    .如果真 (等于 (临时结果, 10))
        赋值 (临时结果, 0)
    .如果真结束
    
.判断 (等于 (杀码类型, 6)) ' 3.百-十
    赋值 (临时结果, 相加 (取绝对值 (相减 (到数值 (位1), 到数值 (位2))), 到数值 (分割附加数 [6])))
    .如果真 (大于 (临时结果, 10))
        赋值 (临时结果, 到数值 (取文本右边 (到文本 (临时结果), 1)))
    .如果真结束
    .如果真 (等于 (临时结果, 10))
        赋值 (临时结果, 0)
    .如果真结束
    
.判断 (等于 (杀码类型, 7)) ' 7.跨杀码
    
.默认
    
    
    
.判断结束


赋值 (返回的文本, 到文本 (临时结果))
返回 (返回的文本)

.子程序 _编辑框2_字符输入, 整数型, , 
.参数 字符代码, 整数型, , 

.如果真 (等于 (字符代码, #回车键))
    .加入项目 (.内容, )
.如果真结束


.子程序 _组合框3_列表项被选择, 空白型, , 
赋值 (.内容, .内容)

.子程序 _按钮11_被单击, 空白型, , 
赋值 (., 1)

.子程序 _按钮12_被单击, 空白型, , 
.局部变量 tmp, 整数型, , , 
.局部变量 行数, 整数型, , , 

.未知支持库函数_20 (“”, -1, , , , )
赋值 (.可视, 假)
.判断开始 (等于 (.标题, “完成缩水”))
    赋值 (.标题, “拖胆缩水”)
.默认
    
.判断结束

.判断开始 (等于 (.标题, “开始缩水”))
    赋值 (拖数组, 分割文本 (3.未知支持库函数_10 (1), “,”, ))
    重定义数组 (文本数组, 假, 相加 (到数值 (1.未知支持库函数_10 (1)), 0))
     ' 输出调试文本 (数据显示表.取数据 (2, 1))
    取缩水文本 (1, 1, 2.未知支持库函数_10 (1), 相加 (取数组成员数 (拖数组), 1), 到数值 (1.未知支持库函数_10 (1)))
    赋值 (.标题, “完成缩水”)
.默认
    
.判断结束

.判断开始 (等于 (.标题, “拖胆缩水”))
    赋值 (., 4)
    赋值 (., 2)
    0.未知支持库函数_32 (30)
    1.未知支持库函数_32 (105)
    2.未知支持库函数_9 (0, 1, “胆”)
    3.未知支持库函数_9 (0, 1, “拖”)
    1.未知支持库函数_9 (0, 1, “数”)
    1.未知支持库函数_9 (1, 1, “2”)
    
    0.未知支持库函数_9 (1, 1, 相加 (到文本 (相加 (到数值 (1.未知支持库函数_10 (0)), 1)), “拖胆列表”))
    赋值 (.标题, “开始缩水”)
.默认
    
.判断结束





.子程序 取缩水文本, 空白型, , 
.参数 数组下标, 整数型, 可空, 
.参数 索引, 整数型, 可空, 
.参数 胆文本, 文本型, 可空, 固定不变
.参数 拖数量, 整数型, 可空, 拖数的分割后的数组成员数  固定不变
.参数 取拖数, 整数型, 可空, 要拖的个数 例如 胆 1 拖 3  (1,3,4,5) 固定不变

.局部变量 tmp, 整数型, , , 
.局部变量 tmp2, 整数型, , , 
.局部变量 tmp3, 整数型, , , 
.局部变量 匿名局部变量_1091, 空白型, , , 
.局部变量 累加文本, 文本型, , , 

赋值 (tmp, 索引) ' 索引 为 1
 ' 输出调试文本 (到文本 (数组下标) ＋ “, 索引” ＋ 到文本 (索引) ＋ “,胆文本” ＋ 胆文本 ＋ “,拖数量” ＋ 到文本 (拖数量) ＋ “,拖几个” ＋ 到文本 (取拖数))
.判断循环首 (小于或等于 (tmp, 拖数量))
    .如果 (大于或等于 (数组下标, 取拖数))
        赋值 (tmp3, tmp) ' tmp3 为 1
         ' 输出调试文本 (tmp3)
        
        .判断循环首 (小于 (tmp3, 拖数量)) ' 拖数的分割后的数组成员数  固定不变
            到文本 (相减 (., 3)).未知支持库函数_38 (.)
            赋值 (文本数组 [数组下标], 拖数组 [tmp3])
            赋值 (累加文本, 相加 (胆文本, “,”))
            .计次循环首 (取拖数, tmp2)
                赋值 (累加文本, 相加 (累加文本, 文本数组 [tmp2], “,”))
                相减 (., 1).未知支持库函数_9 (1, 1, 累加文本)
                处理事件 ()
            .计次循环尾 ()
            赋值 (tmp3, 相加 (tmp3, 1))
        .判断循环尾 ()
        返回 ()
    .否则
         ' 输出调试文本 (到文本 (取数组成员数 (文本数组)) ＋ “;” ＋ 到文本 (数组下标) ＋ “;” ＋ 到文本 (tmp))
        .如果 (小于 (tmp, 相加 (取数组成员数 (拖数组), 1)))
            赋值 (文本数组 [数组下标], 拖数组 [tmp])
            赋值 (tmp, 相加 (tmp, 1))
        .否则
             ' 按钮12.标题 ＝ “完成缩水”
            跳出循环 ()
        .如果结束
        
    .如果结束
    取缩水文本 (相加 (数组下标, 1), tmp, 2.未知支持库函数_10 (1), 相加 (取数组成员数 (拖数组), 1), 到数值 (1.未知支持库函数_10 (1))) ' 递归调用
.判断循环尾 ()


.子程序 _列表框2_列表项被选择, 空白型, , 
选择了公式组合 ()
_在线更新_被选择 ()

.子程序 选择了公式组合, 空白型, , 
.局部变量 计次, 整数型, , , 

.判断开始 (等于 (.现行选中项, 0))
    赋值 (连接文件名, “3d_data.txt”)
    清空 ()
    .计次循环首 (取数组成员数 (公式参数组3D), 计次)
        公式参数组3D.加入项目 ( [计次], )
    .计次循环尾 ()
    赋值 (.现行选中项, 9)
     ' 组合框3.可视 ＝ 真
.默认
    
.判断结束
.判断开始 (等于 (.现行选中项, 1))
    赋值 (连接文件名, “06p3p5.txt”)
    清空 ()
    .计次循环首 (取数组成员数 (公式参数组P3), 计次)
        公式参数组P3.加入项目 ( [计次], )
    .计次循环尾 ()
    赋值 (.现行选中项, 3)
     ' 组合框4.可视 ＝ 真
.默认
    
.判断结束
.判断开始 (等于 (.现行选中项, 2))
    赋值 (连接文件名, “06p3p5.txt”)
.默认
    
.判断结束
.判断开始 (等于 (.现行选中项, 3))
    赋值 (连接文件名, “7s06.txt”)
.默认
    
.判断结束
 ' 输出调试文本 (连接地址1 [组合框2.现行选中项 ＋ 1] ＋ 连接文件名)
赋值 (.内容, “”)
赋值 (.内容, .内容)


.子程序 _号码推介_被选择, 空白型, , 
赋值 (., 3)
赋值 (., 1)
未知支持库函数_57 ()


.子程序 _数据显示表_鼠标右键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (等于 (.可视, 真))
    弹出菜单 ()
    
    .判断开始 (等于 (是否在检验, 真))
        赋值 (.禁止, 假)
    .默认
        赋值 (.禁止, 真)
    .判断结束
    
.如果真结束


.子程序 _手动加入数据_被选择, 空白型, , 
.局部变量 手动文本, 文本型, , "0", 
.局部变量 临时手文本, 文本型, , , 
.局部变量 匿名局部变量_1205, 空白型, , , 

输入框 (相加 (“请输入最新一期彩票数据”, #换行符, “期数及号码之间请用 ,号分隔”, #换行符, “例如: 2007000,5,6,9”), “手动加入数据”, , 临时手文本, )
.如果真 (不等于 (临时手文本, “”))
    赋值 (手动文本, 分割文本 (临时手文本, “,”, ))
    赋值 (.内容, 相加 (手动文本 [1], “+”, 手动文本 [2], “+”, 手动文本 [3], “+”, 手动文本 [4], #换行符, .内容))
    _按钮1_被单击 ()
.如果真结束


.子程序 _高级表格2_鼠标右键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

弹出菜单 ()


.子程序 _高级表格1_鼠标右键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

弹出菜单 ()


.子程序 _导入检验_被选择, 空白型, , 
.局部变量 分割信息, 文本型, , "0", 
.局部变量 计次, 整数型, , , 
.局部变量 分割信息1, 文本型, , "0", 

赋值 (是否在检验, 真)
.判断开始 (等于 (是否在检验, 真))
    赋值 (.禁止, 假)
.默认
    赋值 (.禁止, 真)
.判断结束

赋值 (.内容, 相加 (“导入检验文本格式 (请用 '空格' 分隔)”, #换行符, “例如:”, #换行符, “1 2 3”, #换行符, “4 5 6”))
赋值 (.可视, 真)
赋值 (.初始目录, 取运行目录 ())
打开 ()
赋值 (.内容, 到文本 (读入文件 (.文件名)))
 ' 输出调试文本 (通框1.文件名)
赋值 (分割信息, 分割文本 (.内容, 字符 (10), ))
赋值 (., 1)
.计次循环首 (取数组成员数 (分割信息), 计次)
    处理事件 ()
    赋值 (分割信息1, 分割文本 (分割信息 [计次], “ ”, ))
    分割信息1.未知支持库函数_38 ( [1], .)
    
    相减 (., 1).未知支持库函数_9 (0, 1, 分割信息1 [1])
    相减 (., 1).未知支持库函数_9 (1, 1, 分割信息1 [2])
    相减 (., 1).未知支持库函数_9 (2, 1, 分割信息1 [3])
.计次循环尾 ()
赋值 (.可视, 假)
赋值 (.内容, “”)


.子程序 _随机检验_被选择, 空白型, , 
赋值 (.可视, 真)
赋值 (., 1)

.子程序 _编辑框3_字符输入, 整数型, , 
.参数 字符代码, 整数型, , 

.局部变量 计次, 整数型, , , 
.局部变量 随机字, 整数型, , "3", 

.如果真 (等于 (字符代码, #回车键))
    赋值 (是否在检验, 真)
    .判断开始 (等于 (是否在检验, 真))
        赋值 (.禁止, 假)
    .默认
        赋值 (.禁止, 真)
    .判断结束
    
    置随机数种子 ()
    .计次循环首 (到数值 (.内容), 计次)
        处理事件 ()
         ' 数据显示表.置数据 (数据显示表.行数 － 1, 0, 1, 随机字 [1])
         ' -----------调试代码
        赋值 (随机字 [1], 取随机数 (0, 9))
        到文本 (随机字 [1]).未知支持库函数_38 (.)
        赋值 (随机字 [2], 取随机数 (0, 9))
        相减 (., 1).未知支持库函数_9 (1, 1, 随机字 [2])
        赋值 (随机字 [3], 取随机数 (0, 9))
        相减 (., 1).未知支持库函数_9 (2, 1, 随机字 [3])
         ' -----------调试代码
    .计次循环尾 ()
    赋值 (.可视, 假)
    
.如果真结束


.子程序 _时钟1_周期事件, 空白型, , 
.局部变量 颜色组, 整数型, , "31", 
.局部变量 随机数1, 整数型, , , 
.局部变量 取开奖时间, 日期时间型, , , 

赋值 (.时钟周期, 0)
.如果真 (大于 (显示次数, 0)) ' 设置 每一行显示次数
    赋值 (显示次数, 0)
    赋值 (.标题, 广告组 [控制次数])
    赋值 (.宽度, 相乘 (取文本长度 (.标题), 长度))
    赋值 (.左边, 计算标签中间 (.宽度))
     ' 标签1.左边 ＝ 20
    赋值 (控制次数, 相加 (控制次数, 1))
    赋值 (.顶边, 30)
.如果真结束

.如果真 (等于 (控制次数, 取数组成员数 (广告组)))
    赋值 (控制次数, 1)
.如果真结束

.如果 (等于 (.顶边, 4))
    赋值 (.时钟周期, 10)
.否则
    赋值 (.时钟周期, 30)
    
.如果结束

赋值 (取开奖时间, 取现行时间 ())
.如果真 (并且 (大于或等于 (相加 (到文本 (取时间部分 (取开奖时间, 6)), 到文本 (取时间部分 (取开奖时间, 7))), “2035”), 小于或等于 (相加 (到文本 (取时间部分 (取开奖时间, 6)), 到文本 (取时间部分 (取开奖时间, 7))), “2050”)))
     ' 输出调试文本 (到文本 (取时间部分 (取开奖时间, 6)) ＋ 到文本 (取时间部分 (取开奖时间, 7)))
    .如果真 (等于 (是否已取结果, 假))
        赋值 (是否已取结果, 真)
        _开奖结果_被选择 ()
    .如果真结束
    
.如果真结束
.如果真 (大于 (相加 (到文本 (取时间部分 (取开奖时间, 6)), 到文本 (取时间部分 (取开奖时间, 7))), “2050”))
    .如果真 (等于 (是否已取结果, 真))
        赋值 (是否已取结果, 假)
        赋值 (.可视, 假)
    .如果真结束
    
.如果真结束


.如果真 (并且 (大于或等于 (相加 (到文本 (取时间部分 (取开奖时间, 6)), 到文本 (取时间部分 (取开奖时间, 7))), “1835”), 小于或等于 (相加 (到文本 (取时间部分 (取开奖时间, 6)), 到文本 (取时间部分 (取开奖时间, 7))), “1845”)))
     ' 输出调试文本 (到文本 (取时间部分 (取开奖时间, 6)) ＋ 到文本 (取时间部分 (取开奖时间, 7)))
    .如果真 (等于 (是否已取结果, 假))
        赋值 (是否已取结果, 真)
        _开奖结果_被选择 ()
    .如果真结束
    
.如果真结束
.如果真 (并且 (大于 (相加 (到文本 (取时间部分 (取开奖时间, 6)), 到文本 (取时间部分 (取开奖时间, 7))), “1845”), 小于或等于 (相加 (到文本 (取时间部分 (取开奖时间, 6)), 到文本 (取时间部分 (取开奖时间, 7))), “1846”)))
    .如果真 (等于 (是否已取结果, 真))
        赋值 (是否已取结果, 假)
        赋值 (.可视, 假)
    .如果真结束
    
.如果真结束



.子程序 _时钟2_周期事件, 空白型, , 
.如果真 (等于 (.顶边, -30))
     ' 输出调试文本 (控制次数)
    赋值 (.左边, 计算标签中间 (.宽度))
     ' 标签1.左边 ＝ 20
    赋值 (显示次数, 相加 (显示次数, 1))
    赋值 (.时钟周期, 100)
    赋值 (.时钟周期, 0)
    
.如果真结束

赋值 (.顶边, 相减 (.顶边, 1))
 ' 输出调试文本 (标签1.顶边)
.如果真 (等于 (.顶边, 4))
    赋值 (.时钟周期, 4500)
    赋值 (.时钟周期, 0)
.如果真结束

 ' 每天8.28分开始运行
 ' 如果真 (如果真(到文本(取现行时间())



.子程序 _按钮13_被单击, 空白型, , 
 ' 编辑框4.内容 ＝ 到文本 (读入文件 (“.txt”))
赋值 (广告组, 分割文本 (.内容, 字符 (10), ))
赋值 (.标题, 广告组 [1])
赋值 (.宽度, 相乘 (取文本长度 (.标题), 长度))
赋值 (.左边, 计算标签中间 (.宽度))
 ' 标签1.左边 ＝ 20
赋值 (显示次数, 0)
赋值 (控制次数, 1)
赋值 (.顶边, 30)
赋值 (.时钟周期, 30)

.子程序 计算标签中间, 整数型, , '画板 宽360
.参数 文本长, 整数型, , 

.局部变量 返回长, 整数型, , , 
.局部变量 比较长度, 整数型, , , 

赋值 (比较长度, 相减 (相除 (.宽度, 2), 相除 (文本长, 2)))
赋值 (返回长, 比较长度)
返回 (返回长)

.子程序 _超级按钮1_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

 ' 输出调试文本 (横向位置)
赋值 (取鼠标的控制, 横向位置)

.子程序 _超级按钮1_被单击, 空白型, , 
.局部变量 退出确认, 文本型, , , 

.判断开始 (并且 (大于 (取鼠标的控制, 0), 小于 (取鼠标的控制, 14)))
    输出调试文本 (“最小化范围”)
    赋值 (_启动窗口., 2)
    
.判断 (并且 (大于 (取鼠标的控制, 17), 小于 (取鼠标的控制, 31)))
    输出调试文本 (“关闭范围”)
    输入框 (“我要退出程序 ( Y )  /   按错了,还需要分析 ( N )”, “确认退出程序”, “Y”, 退出确认, )
    .如果 (等于 (到大写 (退出确认), “Y”))
        结束 ()
    .否则
        
    .如果结束
    
.默认
    
.判断结束



.子程序 _按钮14_被单击, 空白型, , 调试 及 号码推介的算法
.局部变量 计次, 整数型, , , 
.局部变量 结果文本, 文本型, , "10", 
.局部变量 列表格行号, 整数型, , , 
.局部变量 加减1, 整数型, , , 
.局部变量 自动参数, 整数型, , , 
.局部变量 匿名局部变量_1536, 空白型, , , 
.局部变量 临时处理记录, 整数型, , , 记录对的
.局部变量 临时处理记录1, 整数型, , , 记录错的
.局部变量 临时处理结果, 文本型, , , 
.局部变量 临时记住杀码, 整数型, , "10", 
.局部变量 对与错, 整数型, , "2", 
.局部变量 确认数组1, 文本型, , "0", 对比数量定杀码
.局部变量 确认数组2, 文本型, , "0", 对比数量定杀码,编辑框使用
.局部变量 累加确认, 整数型, , , 对比数量定杀码

获取焦点 ()
赋值 (., 1)
未知支持库函数_57 ()

赋值 (., 3)
.如果 (等于 (.标题, “降序显示”))
    赋值 (列表格行号, 相减 (., 1))
.否则
    赋值 (列表格行号, 1)
.如果结束
 ' 输出调试文本 (高级表格2.取数据 (列表格行号, 0))

到文本 (相加 (到数值 (列表格行号.未知支持库函数_10 (0)), 1)).未知支持库函数_38 (.)
.计次循环首 (10, 自动参数)
    赋值 (临时处理结果, “”)
    赋值 (临时处理记录, 0)
    赋值 (临时处理记录1, 0)
    .如果真 (小于 (., 11))
        到文本 (相减 (自动参数, 1)).未知支持库函数_38 (.)
    .如果真结束
    .计次循环首 (50, 计次)
        .如果 (等于 (.标题, “降序显示”))
            赋值 (列表格行号, 相减 (., 计次))
            赋值 (加减1, 1)
        .否则
            赋值 (列表格行号, 计次)
            赋值 (加减1, -1)
        .如果结束
        
        .如果真 (等于 (自动参数, 1))
            列表格行号.未知支持库函数_10 (0).未知支持库函数_38 (.)
        .如果真结束
        
        .判断开始 (等于 (.现行选中项, 0))
            赋值 (结果文本 [1], 杀码公式集 (列表格行号.未知支持库函数_10 (1), 列表格行号.未知支持库函数_10 (2), 列表格行号.未知支持库函数_10 (3), 列表格行号.未知支持库函数_10 (4), , 1, 相减 (自动参数, 1)))
        .默认
            
        .判断结束
        .判断开始 (等于 (.现行选中项, 1))
            赋值 (结果文本 [1], 杀码公式集 (列表格行号.未知支持库函数_10 (1), 列表格行号.未知支持库函数_10 (2), 列表格行号.未知支持库函数_10 (3), 列表格行号.未知支持库函数_10 (4), , 2, 相减 (自动参数, 1)))
        .默认
            
        .判断结束
        .判断开始 (等于 (.现行选中项, 2))
            赋值 (结果文本 [1], 杀码公式集 (列表格行号.未知支持库函数_10 (1), 列表格行号.未知支持库函数_10 (2), 列表格行号.未知支持库函数_10 (3), 列表格行号.未知支持库函数_10 (4), , 3, 相减 (自动参数, 1)))
        .默认
            
        .判断结束
        .判断开始 (等于 (.现行选中项, 3))
            赋值 (结果文本 [1], 杀码公式集 (列表格行号.未知支持库函数_10 (1), 列表格行号.未知支持库函数_10 (2), 列表格行号.未知支持库函数_10 (3), 列表格行号.未知支持库函数_10 (4), 列表格行号.未知支持库函数_10 (0), 4, 相减 (自动参数, 1)))
             ' 输出调试文本 (结果文本 [1])
        .默认
            
        .判断结束
        .判断开始 (等于 (.现行选中项, 4))
            赋值 (结果文本 [1], 杀码公式集 (列表格行号.未知支持库函数_10 (1), 列表格行号.未知支持库函数_10 (2), 列表格行号.未知支持库函数_10 (3), 列表格行号.未知支持库函数_10 (4), 列表格行号.未知支持库函数_10 (0), 5, 相减 (自动参数, 1)))
        .默认
            
        .判断结束
        .判断开始 (等于 (.现行选中项, 5))
            赋值 (结果文本 [1], 杀码公式集 (列表格行号.未知支持库函数_10 (1), 列表格行号.未知支持库函数_10 (2), 列表格行号.未知支持库函数_10 (3), 列表格行号.未知支持库函数_10 (4), 列表格行号.未知支持库函数_10 (0), 6, 相减 (自动参数, 1)))
        .默认
            
        .判断结束
        
        
        
        .如果真 (等于 (列表格行号, 1))
            0.未知支持库函数_9 (自动参数, 1, 到文本 (相减 (自动参数, 1)))
            1.未知支持库函数_9 (自动参数, 1, 结果文本 [1])
        .如果真结束
        .如果真 (大于 (列表格行号, 1))
             ' 输出调试文本 (计次)
            计次.未知支持库函数_9 (自动参数, 1, 结果文本 [1])
            .如果 (或者 (等于 (到数值 (结果文本 [1]), 到数值 (相加 (列表格行号, 加减1).未知支持库函数_10 (1))), 等于 (到数值 (结果文本 [1]), 到数值 (相加 (列表格行号, 加减1).未知支持库函数_10 (2))), 等于 (到数值 (结果文本 [1]), 到数值 (相加 (列表格行号, 加减1).未知支持库函数_10 (3)))))
                计次.未知支持库函数_9 (自动参数, 1, 相加 (结果文本 [1], “ 杀错”))
                赋值 (对与错 [1], 1) ' 错
            .否则
                赋值 (对与错 [1], 0) ' 对
            .如果结束
            
            .判断开始 (等于 (计次, 2)) ' 取第一个的对错
                赋值 (对与错 [2], 对与错 [1])
                .如果 (等于 (对与错 [1], 0)) ' 对
                    自动参数.未知支持库函数_9 (0, 1, 相加 (1.未知支持库函数_10 (自动参数), “@”))
                .否则
                     ' 错
                    自动参数.未知支持库函数_9 (0, 1, 相加 (1.未知支持库函数_10 (自动参数), “*”))
                .如果结束
                
            .默认
                
            .判断结束
            
            .判断开始 (大于 (计次, 2))
                .如果 (等于 (对与错 [1], 对与错 [2])) ' 相同的继续统计
                    .如果 (等于 (对与错 [1], 0)) ' 对
                        赋值 (临时处理记录, 相加 (临时处理记录, 1))
                    .否则
                         ' 错
                        赋值 (临时处理记录1, 相加 (临时处理记录1, 1))
                    .如果结束
                    
                     ' 输出调试文本 (临时处理记录 ＋ 1)
                .否则
                    
                    .如果 (等于 (对与错 [1], 0)) ' 对
                        赋值 (临时处理结果, 相加 (临时处理结果, 到文本 (相加 (临时处理记录1, 1)), “,”))
                        赋值 (临时处理记录1, 0)
                        
                    .否则
                        赋值 (临时处理结果, 相加 (临时处理结果, 到文本 (相加 (临时处理记录, 1)), “,”))
                        赋值 (临时处理记录, 0)
                    .如果结束
                    赋值 (对与错 [2], 对与错 [1])
                .如果结束
                
            .默认
                
            .判断结束
            
        .如果真结束
        
    .计次循环尾 ()
    
    .如果 (小于 (., 11))
        相减 (., 1).未知支持库函数_9 (相加 (.现行选中项, 1), 1, 临时处理结果)
    .否则
        自动参数.未知支持库函数_9 (相加 (.现行选中项, 1), 1, 临时处理结果)
    .如果结束
    
     ' 信息框 (临时处理结果, 0, )
.计次循环尾 ()
0.未知支持库函数_32 (30)
 ' 找出逆杀列表
.计次循环首 (相减 (., 1), 计次)
    赋值 (确认数组1, 分割文本 (计次.未知支持库函数_10 (相加 (.现行选中项, 1)), “,”, ))
    赋值 (确认数组2, 分割文本 (.内容, “,”, ))
    
    .判断开始 (等于 (取文本右边 (计次.未知支持库函数_10 (0), 1), “*”)) ' 错在头
        .如果真 (大于 (到数值 (确认数组1 [2]), 到数值 (确认数组2 [1])))
            赋值 (累加确认, 相加 (累加确认, 1))
        .如果真结束
        .如果真 (大于 (到数值 (确认数组1 [4]), 到数值 (确认数组2 [2])))
            赋值 (累加确认, 相加 (累加确认, 1))
        .如果真结束
        .如果真 (大于 (到数值 (确认数组1 [6]), 到数值 (确认数组2 [3])))
            赋值 (累加确认, 相加 (累加确认, 1))
        .如果真结束
        
        
        
        
    .默认
        
    .判断结束
    
.计次循环尾 ()




.子程序 _生成广告_被选择, 空白型, , 
.局部变量 文本1, 文本型, , "10", 
.局部变量 打开的文本, 文本型, , , 
.局部变量 匿名局部变量_1763, 空白型, , , 
.局部变量 广告分文本, 文本型, , "0", 分割 打开的文本 内容
.局部变量 分割广告1, 文本型, , "0", 
.局部变量 广告1, 文本型, , , 
.局部变量 匿名局部变量_1762, 空白型, , , 
.局部变量 计次, 整数型, , , 
.局部变量 计次1, 整数型, , , 

 ' 高级选择夹1.现行子夹 ＝ 2
赋值 (文本1, { “双色球 ”, “福利3D ”, “排列3 ”, “排列5 ”, “七星彩 ”, “体22选5 ”, “”, “”, “”, “” })
.计次循环首 (6, 计次)
    赋值 (广告1, “”)
    .判断开始 (等于 (计次, 1))
        赋值 (打开的文本, 到文本 (读入文件 (相加 (取运行目录 (), “\cpdata\ss06.txt”))))
    .判断 (等于 (计次, 2))
        赋值 (打开的文本, 到文本 (读入文件 (相加 (取运行目录 (), “\cpdata\3d_data.txt”))))
    .判断 (等于 (计次, 3))
        赋值 (打开的文本, 到文本 (读入文件 (相加 (取运行目录 (), “\cpdata\06p3p5.txt”))))
    .判断 (等于 (计次, 4))
        赋值 (打开的文本, 到文本 (读入文件 (相加 (取运行目录 (), “\cpdata\06p3p5.txt”))))
    .判断 (等于 (计次, 5))
        赋值 (打开的文本, 到文本 (读入文件 (相加 (取运行目录 (), “\cpdata\7s06.txt”))))
    .判断 (等于 (计次, 6))
        赋值 (打开的文本, 到文本 (读入文件 (相加 (取运行目录 (), “\cpdata\22s506.txt”))))
    .默认
        
    .判断结束
    赋值 (广告分文本, 分割文本 (打开的文本, 字符 (10), ))
    .计次循环首 (8, 计次1)
        .判断开始 (等于 (计次, 1))
            赋值 (分割广告1, 分割文本 (广告分文本 [计次1], “+”, ))
            赋值 (广告分文本 [计次1], 相加 (文本1 [计次], 分割广告1 [1], “  红 ”, 分割广告1 [2], “-”, 分割广告1 [3], “-”, 分割广告1 [4], “-”, 分割广告1 [5], “-”, 分割广告1 [6], “-”, 分割广告1 [7], “ 蓝 ”, 分割广告1 [8]))
            .如果真 (大于 (取数组成员数 (分割广告1), 8))
                赋值 (广告分文本 [计次1], 相加 (广告分文本 [计次1], “ 快乐”, 分割广告1 [9]))
            .如果真结束
            
        .判断 (等于 (计次, 2))
            赋值 (分割广告1, 分割文本 (广告分文本 [计次1], “+”, ))
            赋值 (广告分文本 [计次1], 相加 (文本1 [计次], 分割广告1 [1], “  ”, 分割广告1 [2], “-”, 分割广告1 [3], “-”, 分割广告1 [4]))
        .判断 (等于 (计次, 3))
            赋值 (分割广告1, 分割文本 (广告分文本 [计次1], “+”, ))
            赋值 (广告分文本 [计次1], 相加 (文本1 [计次], 分割广告1 [1], “  ”, 分割广告1 [2], “-”, 分割广告1 [3], “-”, 分割广告1 [4]))
        .判断 (等于 (计次, 4))
            赋值 (分割广告1, 分割文本 (广告分文本 [计次1], “+”, ))
            赋值 (广告分文本 [计次1], 相加 (文本1 [计次], 分割广告1 [1], “  ”, 分割广告1 [2], “-”, 分割广告1 [3], “-”, 分割广告1 [4], “-”, 分割广告1 [5], “-”, 分割广告1 [6]))
        .判断 (等于 (计次, 5))
            赋值 (分割广告1, 分割文本 (广告分文本 [计次1], “+”, ))
            赋值 (广告分文本 [计次1], 相加 (文本1 [计次], 分割广告1 [1], “  ”, 分割广告1 [2], “-”, 分割广告1 [3], “-”, 分割广告1 [4], “-”, 分割广告1 [5], “-”, 分割广告1 [6], “-”, 分割广告1 [7], “-”, 分割广告1 [8]))
        .判断 (等于 (计次, 6))
            赋值 (分割广告1, 分割文本 (广告分文本 [计次1], “+”, ))
            赋值 (广告分文本 [计次1], 相加 (文本1 [计次], 分割广告1 [1], “  ”, 分割广告1 [2], “-”, 分割广告1 [3], “-”, 分割广告1 [4], “-”, 分割广告1 [5], “-”, 分割广告1 [6]))
        .默认
            
        .判断结束
        
        赋值 (广告1, 相加 (广告1, 广告分文本 [计次1], #换行符))
    .计次循环尾 ()
     ' 输出调试文本 (广告1)
    广告1.加入文本 ()
.计次循环尾 ()
写到文件 (相加 (取运行目录 (), “\cpdata\infotxt.txt”), 到字节集 (相加 (.内容, .内容, .内容)))

 ' 广告分文本 ＝ “P3D分析程序 V1.0 版本 QQ:619366608 彩票群:14253672” ＋ “P3D分析程序 V2.0 版本 即将发布 多种彩票分析功能”
赋值 (.禁止, 真)

.子程序 _复式检验_被选择, 空白型, , 
.局部变量 输入文本1, 文本型, , , 
.局部变量 计次, 整数型, , , 
.局部变量 计次1, 整数型, , , 
.局部变量 排序1, 整数型, , "0", 
.局部变量 文本1, 文本型, , "7", 
.局部变量 结束文本, 整数型, , , 
.局部变量 排列数组, 文本型, , "0", 

输入框 (相加 (“请输入要检验的复式号码 4-6位)”, #换行符, “格式为: (A,B,C,D...),从小到大 排序”), “复式检验”, “1,2,3,4”, 输入文本1, )
赋值 (是否在检验, 真)
.判断开始 (等于 (是否在检验, 真))
    赋值 (.禁止, 假)
.默认
    赋值 (.禁止, 真)
.判断结束

 ' 编辑框2.内容 ＝ “”
赋值 (排列数组, 分割文本 (输入文本1, “,”, ))
赋值 (., 1)
重定义数组 (排序1, 假, 取数组成员数 (排列数组))
.计次循环首 (取数组成员数 (排列数组), 计次)
    赋值 (排序1 [计次], 到数值 (排列数组 [计次]))
    处理事件 ()
.计次循环尾 ()
数组排序 (排序1, )
.计次循环首 (1000, 计次)
    处理事件 ()
    赋值 (文本1 [1], 到文本 (相减 (计次, 1)))
    .判断开始 (小于 (相减 (计次, 1), 100))
        赋值 (文本1 [1], 相加 (取重复文本 (1, “0”), 到文本 (相减 (计次, 1))))
    .默认
        
    .判断结束
    
    .判断开始 (小于 (相减 (计次, 1), 10))
        赋值 (文本1 [1], 相加 (取重复文本 (2, “0”), 到文本 (相减 (计次, 1))))
    .默认
        
    .判断结束
    .计次循环首 (取数组成员数 (排列数组), 计次1)
        .如果真 (等于 (到数值 (取文本左边 (文本1 [1], 1)), 排序1 [计次1]))
            赋值 (文本1 [2], 文本1 [1])
            .计次循环首 (取数组成员数 (排列数组), 计次1)
                .如果真 (等于 (到数值 (取文本中间 (文本1 [2], 2, 1)), 排序1 [计次1]))
                    赋值 (文本1 [3], 文本1 [2])
                    .计次循环首 (取数组成员数 (排列数组), 计次1)
                        .如果真 (等于 (到数值 (取文本右边 (文本1 [3], 1)), 排序1 [计次1]))
                            赋值 (文本1 [4], 文本1 [3])
                            .如果真 (不等于 (取文本左边 (文本1 [4], 1), 取文本右边 (文本1 [4], 1)))
                                .如果真 (不等于 (取文本左边 (文本1 [4], 1), 取文本中间 (文本1 [4], 2, 1)))
                                    .如果真 (不等于 (取文本右边 (文本1 [4], 1), 取文本中间 (文本1 [4], 2, 1)))
                                        赋值 (文本1 [7], 文本1 [4])
                                         ' 编辑框2.加入文本 (文本1 [7] ＋ #换行符)
                                        输出调试文本 (文本1 [7])
                                        取文本左边 (文本1 [7], 1).未知支持库函数_38 (.)
                                        相减 (., 1).未知支持库函数_9 (1, 1, 取文本中间 (文本1 [7], 2, 1))
                                        相减 (., 1).未知支持库函数_9 (2, 1, 取文本右边 (文本1 [7], 1))
                                        赋值 (结束文本, 相加 (结束文本, 1))
                                    .如果真结束
                                    
                                .如果真结束
                                
                            .如果真结束
                            
                        .如果真结束
                        
                    .计次循环尾 ()
                .如果真结束
                
            .计次循环尾 ()
        .如果真结束
        
    .计次循环尾 ()
    
.计次循环尾 ()
 ' 编辑框2.加入文本 (#换行符 ＋ “合计:” ＋ 到文本 (结束文本) ＋ “ 组” ＋ #换行符)

.子程序 取缩水文本1, 空白型, , 用于复式三码检验    仲未可以全部列出,有待改良
.参数 数组下标, 整数型, 可空, 
.参数 索引, 整数型, 可空, 
.参数 胆文本, 文本型, 可空, 固定不变
.参数 拖数量, 整数型, 可空, 拖数的分割后的数组成员数  固定不变
.参数 取拖数, 整数型, 可空, 要拖的个数 例如 胆 1 拖 3  (1,3,4,5) 固定不变

.局部变量 tmp, 整数型, , , 
.局部变量 tmp2, 整数型, , , 
.局部变量 tmp3, 整数型, , , 
.局部变量 匿名局部变量_1856, 空白型, , , 
.局部变量 累加文本, 文本型, , , 

赋值 (tmp, 索引) ' 索引 为 1
 ' 输出调试文本 (到文本 (数组下标) ＋ “, 索引” ＋ 到文本 (索引) ＋ “,胆文本” ＋ 胆文本 ＋ “,拖数量” ＋ 到文本 (拖数量) ＋ “,拖几个” ＋ 到文本 (取拖数))
.判断循环首 (小于或等于 (tmp, 拖数量))
    .如果 (大于或等于 (数组下标, 取拖数))
        赋值 (tmp3, tmp) ' tmp3 为 1
         ' 输出调试文本 (tmp3)
        
        .判断循环首 (小于 (tmp3, 拖数量)) ' 拖数的分割后的数组成员数  固定不变
            胆文本.未知支持库函数_38 (.)
            赋值 (文本数组 [数组下标], 拖数组 [tmp3])
            .计次循环首 (取拖数, tmp2)
                相减 (., 1).未知支持库函数_9 (tmp2, 1, 文本数组 [tmp2])
                处理事件 ()
            .计次循环尾 ()
            赋值 (tmp3, 相加 (tmp3, 1))
        .判断循环尾 ()
        返回 ()
    .否则
        .如果 (小于 (tmp, 相加 (取数组成员数 (拖数组), 1)))
            赋值 (文本数组 [数组下标], 拖数组 [tmp])
            赋值 (tmp, 相加 (tmp, 1))
        .否则
            跳出循环 ()
        .如果结束
        
    .如果结束
    取缩水文本1 (相加 (数组下标, 1), tmp, 胆文本, 拖数量, 取拖数) ' 递归调用
.判断循环尾 ()


.子程序 置移位表, 文本型, , 
.参数 位1, 文本型, , 
.参数 位2, 文本型, , 
.参数 位3, 文本型, , 

.局部变量 移位文本, 文本型, , , 
.局部变量 排序1, 整数型, , "3", 

赋值 (排序1 [1], 到数值 (位1))
赋值 (排序1 [2], 到数值 (位2))
赋值 (排序1 [3], 到数值 (位3))
数组排序 (排序1, )
赋值 (移位文本, 相加 (移位文本, 到文本 (排序1 [1]), 到文本 (排序1 [2]), 到文本 (排序1 [3])))
返回 (移位文本)

.子程序 _移位统计_被选择, 空白型, , 
赋值 (., 5)

.子程序 _移位表_光标位置改变, 空白型, , 
.局部变量 分开文本, 文本型, , "0", 
.局部变量 计次, 整数型, , , 
.局部变量 每行文本, 文本型, , , 
.局部变量 计次1, 整数型, , , 
.局部变量 统计文本, 整数型, , , 
.局部变量 匿名局部变量_2051, 空白型, , , 

赋值 (分开文本, 分割文本 (取得文本 (未知支持库函数_3 ().未知支持库函数_10 (1), 未知支持库函数_3 ().未知支持库函数_10 (2), 未知支持库函数_3 ().未知支持库函数_10 (3)), “,”, ))
 ' 编辑框9.内容 ＝ 取得文本 (移位表.取数据 (移位表.取光标行号 (), 1), 移位表.取数据 (移位表.取光标行号 (), 2), 移位表.取数据 (移位表.取光标行号 (), 3))
赋值 (., 1)
.计次循环首 (3, 计次)
    0.未知支持库函数_9 (计次, 1, 分开文本 [计次])
     ' 信息框 (“”, 0, )
    赋值 (统计文本, 0)
    .计次循环首 (相减 (., 1), 计次1)
        赋值 (每行文本, 相加 (计次1.未知支持库函数_10 (1), 计次1.未知支持库函数_10 (2), 计次1.未知支持库函数_10 (3)))
        .如果真 (不等于 (寻找文本 (每行文本, 取文本左边 (分开文本 [计次], 1), , 假), -1)) ' 找到
            .如果真 (不等于 (寻找文本 (每行文本, 取文本右边 (分开文本 [计次], 1), , 假), -1)) ' 找到
                赋值 (统计文本, 相加 (统计文本, 1))
                .如果 (大于 (统计文本, 相减 (., 1)))
                    到文本 (.).未知支持库函数_38 (.)
                    相减 (., 1).未知支持库函数_9 (计次, 1, 每行文本)
                .否则
                    
                    统计文本.未知支持库函数_9 (计次, 1, 每行文本)
                .如果结束
                
            .如果真结束
            
        .如果真结束
        
    .计次循环尾 ()
.计次循环尾 ()
赋值 (., 42)


.子程序 取得文本, 文本型, , 
.参数 位1, 文本型, , 
.参数 位2, 文本型, , 
.参数 位3, 文本型, , 

.局部变量 结果文本, 文本型, , , 

赋值 (结果文本, 相加 (结果文本, 位1, 位2, “,”))
赋值 (结果文本, 相加 (结果文本, 位1, 位3, “,”))
赋值 (结果文本, 相加 (结果文本, 位2, 位3))
返回 (结果文本)

.子程序 _采集数据_被选择, 空白型, , 
赋值 (.可视, 真)
_按钮15_被单击 ()
赋值 (.可视, 假)

.子程序 _选择框1_被单击, 空白型, , 
赋值 (.可视, .选中)
赋值 (.可视, .选中)
赋值 (.可视, .选中)

.子程序 _导出结果_被选择, 空白型, , 
.局部变量 计次, 整数型, , , 

 ' 输出调试文本 (数据显示表.取窗口句柄 ())
.计次循环首 (相减 (., 1), 计次)
    相加 (计次.未知支持库函数_10 (0), 计次.未知支持库函数_10 (1), 计次.未知支持库函数_10 (2), “结果:”, 计次.未知支持库函数_10 (3), #换行符).加入文本 ()
.计次循环尾 ()
写到文件 (相加 (取运行目录 (), “\导出结果.txt”), 到字节集 (.内容))

.子程序 显示收集数据, 空白型, , 
.局部变量 计次, 整数型, , , 
.局部变量 分割网页文本, 文本型, , "0", 第一次分割
.局部变量 分割主要文本, 文本型, , "0", 第二次分割
.局部变量 主要文本, 文本型, , "0", 
.局部变量 分蓝, 文本型, , "0", 
.局部变量 合并后文本, 文本型, , , 
.局部变量 显示更新位置, 文本型, , , 
.局部变量 取开奖时间, 日期时间型, , , 

.如果 (并且 (大于或等于 (相加 (到文本 (取时间部分 (取现行时间 (), 6)), 到文本 (取时间部分 (取现行时间 (), 7))), “1835”), 小于或等于 (相加 (到文本 (取时间部分 (取现行时间 (), 6)), 到文本 (取时间部分 (取现行时间 (), 7))), “1845”)))
    赋值 (显示更新位置, “(更新试机号)”)
.否则
    赋值 (显示更新位置, “”)
.如果结束


赋值 (.可视, 真)
赋值 (.内容, “”)
赋值 (.内容, “正在收集所有开奖信息......请稍候 !”)
赋值 (.位置, 0)
赋值 (.最小位置, 0)
赋值 (.最大位置, 6)
.计次循环首 (取项目数 (), 计次)
    处理事件 ()
    连接网站1 (相加 (采集地址, 相减 (计次, 1).取项目文本 ()), )
    赋值 (分割网页文本, 分割文本 (.内容, 采集分割内容 [1], ))
    赋值 (分割主要文本, 分割文本 (分割网页文本 [到数值 (.内容)], “>”, )) ' 找到下面表格的内容 最新一期
    赋值 (主要文本, 分割文本 (相加 (分割主要文本 [1], “**”, 分割主要文本 [6], “**”, 分割主要文本 [10]), “**”, ))
    .判断开始 (等于 (计次, 1))
        赋值 (分蓝, 分割文本 (主要文本 [3], “&nbsp;”, ))
        .如果真 (等于 (取文本左边 (分蓝 [4], 2), “</”))
            连续赋值 (“”, 分蓝 [4]) ' , 分蓝 [6])
            
        .如果真结束
        .如果真 (等于 (取文本中间 (分蓝 [4], 3, 2), “</”))
            赋值 (分蓝 [4], 取文本左边 (分蓝 [4], 2))
        .如果真结束
        
        赋值 (合并后文本, 相加 (取文本左边 (主要文本 [1], 7), “期 ”, 取文本左边 (主要文本 [2], 17), “ 蓝 ”, 取文本左边 (分蓝 [3], 2), “ ”, 取文本左边 (分蓝 [4], 8)))
         ' 输出调试文本 (合并后文本)
    .判断 (等于 (计次, 2)) ' 3D
        赋值 (合并后文本, 相加 (取文本左边 (主要文本 [1], 7), “期 ”, 取文本左边 (取文本左边 (主要文本 [2], 3), 1), “ ”, 取文本中间 (取文本左边 (主要文本 [2], 3), 2, 1), “ ”, 取文本右边 (取文本左边 (主要文本 [2], 3), 1)))
    .默认
         ' 输出调试文本 (合并后文本)
        
    .判断结束
    .判断开始 (等于 (计次, 3)) ' P5
        赋值 (合并后文本, 相加 (取文本左边 (主要文本 [1], 7), “期 ”, 取文本左边 (取文本左边 (主要文本 [2], 5), 1), “ ”, 取文本中间 (取文本左边 (主要文本 [2], 5), 2, 1), “ ”, 取文本中间 (取文本左边 (主要文本 [2], 5), 3, 1), “ ”, 取文本中间 (取文本左边 (主要文本 [2], 5), 4, 1), “ ”, 取文本右边 (取文本左边 (主要文本 [2], 5), 1)))
    .默认
         ' 输出调试文本 (合并后文本)
        
    .判断结束
    .判断开始 (等于 (计次, 4))
        赋值 (合并后文本, 相加 (取文本左边 (主要文本 [1], 7), “期 ”, 取文本左边 (主要文本 [2], 13)))
    .默认
         ' 输出调试文本 (合并后文本)
    .判断结束
    .判断开始 (等于 (计次, 5))
        赋值 (合并后文本, 相加 (取文本左边 (主要文本 [1], 7), “期 ”, 取文本左边 (主要文本 [2], 14)))
    .默认
         ' 输出调试文本 (合并后文本)
    .判断结束
    .判断开始 (等于 (计次, 6))
        赋值 (分蓝, 分割文本 (主要文本 [3], “</fon”, ))
        赋值 (合并后文本, 相加 (取文本左边 (主要文本 [1], 7), “期 ”, 取文本左边 (主要文本 [2], 20), “ 特 ”, 分蓝 [1]))
         ' 输出调试文本 (合并后文本)
    .判断 (等于 (计次, 7))
        赋值 (合并后文本, 相加 (取文本左边 (主要文本 [1], 7), “期 ”, 取文本左边 (取文本左边 (主要文本 [2], 3), 1), “ ”, 取文本中间 (取文本左边 (主要文本 [2], 3), 2, 1), “ ”, 取文本右边 (取文本左边 (主要文本 [2], 3), 1), 显示更新位置))
         ' 输出调试文本 (合并后文本)  ' 3D试机
    .默认
        
    .判断结束
    
    相加 (采集分割内容1 [计次], 合并后文本, #换行符, #换行符).加入文本 ()
    赋值 (.位置, 相加 (.位置, 1))
    赋值 (合并后文本, 删首尾空 (合并后文本))
     ' 合并后文本 ＝ 子文本替换 (合并后文本, “ ”, “+”, , , 假)
.计次循环尾 ()
赋值 (.内容, .内容)
赋值 (.字体, 0)


.子程序 _开奖结果_被选择, 空白型, , 
显示收集数据 ()

.子程序 _超级按钮2_被单击, 空白型, , 
赋值 (.可视, 假)



 ' 不属于任何一个程序集、类模块的函数：
