 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 617
    高度 = 431
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “无限快速放大和平移 古木例程 2006.10.11 http://goomoo.cn”
    帮助文件名 = “”



.常量 PS_ENDCAP_FLAT, "512", , 
.常量 PS_ENDCAP_MASK, "3840", , 
.常量 PS_ENDCAP_ROUND, "0", , 
.常量 PS_ENDCAP_SQUARE, "256", , 
.常量 PS_GEOMETRIC, "65536", , 
.常量 PS_INSIDEFRAME, "6", , 
.常量 PS_JOIN_BEVEL, "4096", , 
.常量 PS_JOIN_MASK, "61440", , 
.常量 PS_JOIN_MITER, "8192", , 
.常量 PS_JOIN_ROUND, "0", , 
.常量 PS_NULL, "5", , 
.常量 PS_SOLID, "0", , 
.常量 PS_STYLE_MASK, "15", , 
.常量 PS_TYPE_MASK, "983040", , 
.常量 PS_USERSTYLE, "7", , 
.常量 PS_ALTERNATE, "8", , 
.常量 PS_COSMETIC, "0", , 
.常量 PS_DASH, "1", , 
.常量 PS_DASHDOT, "3", , 
.常量 PS_DASHDOTDOT, "4", , 
.常量 PS_DOT, "2", , 
.常量 BS_SOLID, "0", , 
.常量 BS_PATTERN, "3", , 
.常量 BS_DIBPATTERN, "5", , 
.常量 BS_DIBPATTERN8X8, "8", , 
.常量 BS_HATCHED, "2", , 
.常量 BS_NULL, "1", , 
.常量 BS_HOLLOW, "1", , 
.常量 OPAQUE, "2", , 
.常量 TRANSPARENT, "1", , 
.常量 HS_BDIAGONAL, "3", , 
.常量 HS_BDIAGONAL1, "7", , 
.常量 HS_CROSS, "4", , 
.常量 HS_DIAGCROSS, "5", , 
.常量 HS_FDIAGONAL, "2", , 
.常量 HS_HORIZONTAL, "0", , 
.常量 HS_VERTICAL, "1", , 
.常量 HS_FDIAGONAL1, "6", , 
.常量 BLACKNESS, "66", , 
.常量 DSTINVERT, "5570569", , 
.常量 MERGECOPY, "12583114", , 
.常量 NOTSRCCOPY, "3342344", , 
.常量 NOTSRCERASE, "1114278", , 
.常量 PATCOPY, "15728673", , 
.常量 PATINVERT, "5898313", , 
.常量 PATPAINT, "16452105", , 
.常量 SRCAND, "8913094", , 
.常量 SRCCOPY, "13369376", , 
.常量 SRCERASE, "4457256", , 
.常量 SRCINVERT, "6684742", , 
.常量 SRCPAINT, "15597702", , 
.常量 WHITENESS, "16711778", , 
.常量 FLOODFILLBORDER, "0", , 
.常量 FLOODFILLSURFACE, "1", , 
.常量 GB2312_CHARSET, "134", , 
.常量 OUT_TT_PRECIS, "4", , 
.常量 PROOF_QUALITY, "2", , 
.常量 FF_DONTCARE, "0", , 
.常量 DEFAULT_CHARSET, "1", , 
.常量 GM_ADVANCED, "2", , 
.常量 GM_COMPATIBLE, "1", , 
.常量 DT_BOTTOM, "8", , 
.常量 DT_CALCRECT, "1024", , 
.常量 DT_CENTER, "1", , 
.常量 DT_EDITCONTROL, "8192", , 
.常量 DT_END_ELLIPSIS, "32768", , 
.常量 DT_EXPANDTABS, "64", , 
.常量 DT_EXTERNALLEADING, "512", , 
.常量 DT_LEFT, "0", , 
.常量 DT_MODIFYSTRING, "65536", , 
.常量 DT_NOCLIP, "256", , 
.常量 DT_NOPREFIX, "2048", , 
.常量 DT_RIGHT, "2", , 
.常量 DT_RTLREADING, "131072", , 
.常量 DT_SINGLELINE, "32", , 
.常量 DT_TABSTOP, "128", , 
.常量 DT_TOP, "0", , 
.常量 DT_VCENTER, "4", , 
.常量 DT_WORDBREAK, "16", , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 4 系统核心支持库
 ' spec A512548E76954B6E92C21055517615B0 2 1 特殊功能支持库




数据类型 POINT, , 
    .成员 x, 整数型, , , 
    .成员 y, 整数型, , , 

数据类型 LOGBRUSH, , 
    .成员 lbStyle, 整数型, , , 
    .成员 lbColor, 整数型, , , 
    .成员 lbHatch, 整数型, , , 

数据类型 LOGPEN, , 
    .成员 lopnStyle, 整数型, , , 
    .成员 lopnWidth, 长整数型, , , 可能为 POINT 结构。
    .成员 lopnColor, 整数型, , , 

数据类型 RECT, , 
    .成员 left, 整数型, , , 
    .成员 top, 整数型, , , 
    .成员 right, 整数型, , , 
    .成员 bottom, 整数型, , , 

数据类型 视图, , 
    .成员 左, 长整数型, , , 
    .成员 上, 长整数型, , , 
    .成员 缩放系数, 双精度小数型, , , 


.DLL命令 CreateCompatibleBitmap, 整数型, "", "", , 
    .参数 hdc, 整数型, , 
    .参数 nWidth, 整数型, , 
    .参数 nHeight, 整数型, , 

.DLL命令 CreateCompatibleDC, 整数型, "", "", , 
    .参数 hdc, 整数型, , 

.DLL命令 DeleteDC, 逻辑型, "", "", , 
    .参数 hdc, 整数型, , 

.DLL命令 MoveToEx, 逻辑型, "", "", , 
    .参数 hdc, 整数型, , 
    .参数 X, 整数型, , 
    .参数 Y, 整数型, , 
    .参数 lpPoint, 整数型, , 未知类型：LPPOINT。

.DLL命令 LineTo, 逻辑型, "", "", , 
    .参数 hdc, 整数型, , 
    .参数 nXEnd, 整数型, , 
    .参数 nYEnd, 整数型, , 

.DLL命令 Polyline, 逻辑型, "", "", , 
    .参数 hdc, 整数型, , 
    .参数 lppt, 整数型, , 可能为 POINT 结构。
    .参数 cPoints, 整数型, , 

.DLL命令 Rectangle, 逻辑型, "", "", , 
    .参数 hdc, 整数型, , 
    .参数 nLeftRect, 整数型, , 
    .参数 nTopRect, 整数型, , 
    .参数 nRightRect, 整数型, , 
    .参数 nBottomRect, 整数型, , 

.DLL命令 Ellipse, 逻辑型, "", "", , 
    .参数 hdc, 整数型, , 
    .参数 nLeftRect, 整数型, , 
    .参数 nTopRect, 整数型, , 
    .参数 nRightRect, 整数型, , 
    .参数 nBottomRect, 整数型, , 

.DLL命令 CreateBrushIndirect, 整数型, "", "", , 
    .参数 lplb, LOGBRUSH, 传址, 可能为 LOGBRUSH 结构。

.DLL命令 CreatePen, 整数型, "", "", , 
    .参数 fnPenStyle, 整数型, , 
    .参数 nWidth, 整数型, , 
    .参数 crColor, 整数型, , 

.DLL命令 CreatePenIndirect, 整数型, "", "", , 
    .参数 lplgpn, LOGPEN, 传址, 可能为 LOGPEN 结构。

.DLL命令 DeleteObject, 逻辑型, "", "", , 
    .参数 hObject, 整数型, , 

.DLL命令 SelectObject, 整数型, "", "", , 
    .参数 hdc, 整数型, , 
    .参数 hgdiobj, 整数型, , 

.DLL命令 SetBkMode, 整数型, "", "", , 
    .参数 hdc, 整数型, , 
    .参数 iBkMode, 整数型, , 

.DLL命令 CreateSolidBrush, 整数型, "", "", , 
    .参数 crColor, 整数型, , 

.DLL命令 CreateHatchBrush, 整数型, "", "", , 
    .参数 fnStyle, 整数型, , 
    .参数 clrref, 整数型, , 

.DLL命令 Polygon, 逻辑型, "", "", , 
    .参数 hdc, 整数型, , 
    .参数 lpPoints, 空白型, 传址, 可能为 POINT 结构。
    .参数 nCount, 整数型, , 

.DLL命令 PolyBezier, 逻辑型, "", "", , 
    .参数 hdc, 整数型, , 
    .参数 lppt, 空白型, 传址, 可能为 POINT 结构。
    .参数 cPoints, 整数型, , 

.DLL命令 GetEnhMetaFile, 整数型, "", "GetEnhMetaFileA", , 
    .参数 lpszMetaFile, 文本型, 传址, 

.DLL命令 SetEnhMetaFileBits, 整数型, "", "", , 
    .参数 cbBuffer, 整数型, , 
    .参数 lpData, 字节集, 传址, 

.DLL命令 PlayEnhMetaFile, 逻辑型, "", "", , 
    .参数 hdc, 整数型, , 
    .参数 hemf, 整数型, , 
    .参数 lpRect, RECT, 传址, 可能为 RECT 结构。

.DLL命令 DeleteEnhMetaFile, 逻辑型, "", "", , 
    .参数 hemf, 整数型, , 

.DLL命令 LoadIcon, 整数型, "", "LoadIconA", , 
    .参数 hInstance, 整数型, , 
    .参数 lpIconName, 文本型, 传址, 

.DLL命令 DrawIcon, 逻辑型, "", "", , 
    .参数 hDC, 整数型, , 
    .参数 X, 整数型, , 
    .参数 Y, 整数型, , 
    .参数 hIcon, 整数型, , 

.DLL命令 BitBlt, 逻辑型, "", "", , 
    .参数 hdcDest, 整数型, , 
    .参数 nXDest, 整数型, , 
    .参数 nYDest, 整数型, , 
    .参数 nWidth, 整数型, , 
    .参数 nHeight, 整数型, , 
    .参数 hdcSrc, 整数型, , 
    .参数 nXSrc, 整数型, , 
    .参数 nYSrc, 整数型, , 
    .参数 dwRop, 整数型, , 

.DLL命令 StretchBlt, 逻辑型, "", "", , 
    .参数 hdcDest, 整数型, , 
    .参数 nXOriginDest, 整数型, , 
    .参数 nYOriginDest, 整数型, , 
    .参数 nWidthDest, 整数型, , 
    .参数 nHeightDest, 整数型, , 
    .参数 hdcSrc, 整数型, , 
    .参数 nXOriginSrc, 整数型, , 
    .参数 nYOriginSrc, 整数型, , 
    .参数 nWidthSrc, 整数型, , 
    .参数 nHeightSrc, 整数型, , 
    .参数 dwRop, 整数型, , 

.DLL命令 GetDC, 整数型, "", "", , 
    .参数 hWnd, 整数型, , 

.DLL命令 ReleaseDC, 整数型, "", "", , 
    .参数 hWnd, 整数型, , 
    .参数 hDC, 整数型, , 

.DLL命令 RoundRect, 逻辑型, "", "", , 
    .参数 hdc, 整数型, , 
    .参数 nLeftRect, 整数型, , 
    .参数 nTopRect, 整数型, , 
    .参数 nRightRect, 整数型, , 
    .参数 nBottomRect, 整数型, , 
    .参数 nWidth, 整数型, , 
    .参数 nHeight, 整数型, , 

.DLL命令 FloodFill, 逻辑型, "", "", , 
    .参数 hdc, 整数型, , 
    .参数 nXStart, 整数型, , 
    .参数 nYStart, 整数型, , 
    .参数 crFill, 整数型, , 

.DLL命令 FillRect, 整数型, "", "", , 
    .参数 hDC, 整数型, , 
    .参数 lprc, RECT, 传址, 可能为 RECT 结构。
    .参数 hbr, 整数型, , 

.DLL命令 ExtFloodFill, 逻辑型, "", "", , 
    .参数 hdc, 整数型, , 
    .参数 nXStart, 整数型, , 
    .参数 nYStart, 整数型, , 
    .参数 crColor, 整数型, , 
    .参数 fuFillType, 整数型, , 

.DLL命令 CreateFont, 整数型, "", "CreateFontA", , 
    .参数 nHeight, 整数型, , 
    .参数 nWidth, 整数型, , 
    .参数 nEscapement, 整数型, , 
    .参数 nOrientation, 整数型, , 
    .参数 fnWeight, 整数型, , 
    .参数 fdwItalic, 逻辑型, , 
    .参数 fdwUnderline, 逻辑型, , 
    .参数 fdwStrikeOut, 逻辑型, , 
    .参数 fdwCharSet, 整数型, , 
    .参数 fdwOutputPrecision, 整数型, , 
    .参数 fdwClipPrecision, 整数型, , 
    .参数 fdwQuality, 整数型, , 
    .参数 fdwPitchAndFamily, 整数型, , 
    .参数 lpszFace, 文本型, 传址, 

.DLL命令 SetTextColor, 整数型, "", "", , 
    .参数 hdc, 整数型, , 
    .参数 crColor, 整数型, , 

.DLL命令 SetBkColor, 整数型, "", "", , 
    .参数 hdc, 整数型, , 
    .参数 crColor, 整数型, , 

.DLL命令 TextOut, 逻辑型, "", "TextOutA", , 
    .参数 hdc, 整数型, , 
    .参数 nXStart, 整数型, , 
    .参数 nYStart, 整数型, , 
    .参数 lpString, 文本型, 传址, 
    .参数 cbString, 整数型, , 

.DLL命令 DrawText, 整数型, "", "DrawTextA", , 
    .参数 hDC, 整数型, , 
    .参数 lpString, 文本型, 传址, 
    .参数 nCount, 整数型, , 
    .参数 lpRect, RECT, , 未知类型：LPRECT。
    .参数 uFormat, 整数型, , 

.DLL命令 SetGraphicsMode, 整数型, "", "", , 
    .参数 hdc, 整数型, , 
    .参数 iMode, 整数型, , 

.DLL命令 FillRect1, 整数型, "", "", , 
    .参数 hDC, 整数型, , 
    .参数 lprc, RECT, 传址, 可能为 RECT 结构。
    .参数 hbr, 整数型, , 

.类模块 内存位图, , , 本类简单地封装了Windows 内存位图 作者：曾劲松 2005/4/27

.程序集变量 私画布句柄, 整数型, , , 
.程序集变量 私位图句柄, 整数型, , , 
.程序集变量 私宽度, 整数型, , , 
.程序集变量 私高度, 整数型, , , 
.程序集变量 私当前画笔, 整数型, , , 
.程序集变量 私当前画刷, 整数型, , , 
.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用
.局部变量 hdc, 整数型, , , 

赋值 (私位图句柄, 0)
赋值 (hdc, GetDC (0))
赋值 (私画布句柄, CreateCompatibleDC (hdc))
.如果真 (等于 (私画布句柄, 0))
    输出调试文本 (“初始化失败。”)
    返回 ()
.如果真结束
SetBkMode (私画布句柄, #TRANSPARENT)
 ' 要使字符能够独立旋转，必须将图形模式设为高级。
SetGraphicsMode (私画布句柄, #GM_ADVANCED)
ReleaseDC (0, hdc)

.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用
DeleteDC (私画布句柄)
DeleteObject (私位图句柄)
DeleteObject (私当前画笔)
DeleteObject (私当前画刷)

.子程序 创建位图, 逻辑型, 公开, 
.参数 参宽度, 整数型, , 
.参数 参高度, 整数型, , 

.局部变量 hdc, 空白型, , , 

.如果真 (不等于 (私位图句柄, 0))
    DeleteObject (私位图句柄)
.如果真结束
赋值 (hdc, GetDC (0))
赋值 (私位图句柄, CreateCompatibleBitmap (hdc, 参宽度, 参高度))
SelectObject (私画布句柄, 私位图句柄)
ReleaseDC (0, hdc)
赋值 (私宽度, 参宽度)
赋值 (私高度, 参高度)

.如果真 (等于 (私位图句柄, 0))
    输出调试文本 (“创建位图失败。”)
    返回 (假)
.如果真结束
返回 (真)


.子程序 取画布句柄, 整数型, , 
.如果真 (等于 (私画布句柄, 0))
    输出调试文本 (“画布未初始化。”)
    返回 (-1)
.如果真结束
返回 (私画布句柄)

.子程序 取位图句柄, 整数型, , 
.如果真 (等于 (私位图句柄, 0))
    输出调试文本 (“位图未初始化。”)
    返回 (-1)
.如果真结束
返回 (私位图句柄)


.子程序 取宽度, 整数型, 公开, 
返回 (私宽度)


.子程序 取高度, 整数型, 公开, 
返回 (私高度)


.子程序 置画笔属性, 逻辑型, 公开, 
.参数 参画笔样式, 整数型, 可空, 
.参数 参画笔宽度, 整数型, 可空, 
.参数 参画笔颜色, 整数型, 可空, 
.参数 参端点样式, 整数型, 可空, 
.参数 参转角样式, 整数型, 可空, 

.局部变量 画笔样式, 整数型, , , 

.如果真 (是否为空 (参画笔样式))
    赋值 (参画笔样式, #PS_SOLID)
.如果真结束
.如果真 (是否为空 (参画笔宽度))
    赋值 (参画笔宽度, 1)
.如果真结束
.如果真 (是否为空 (参画笔颜色))
    赋值 (参画笔颜色, #黑色)
.如果真结束
.如果真 (是否为空 (参端点样式))
    赋值 (参端点样式, #PS_ENDCAP_FLAT)
.如果真结束
.如果真 (是否为空 (参转角样式))
    赋值 (参转角样式, #PS_JOIN_ROUND)
.如果真结束
赋值 (画笔样式, 位或 (参画笔样式, 参端点样式, 参转角样式))
.如果真 (不等于 (私当前画笔, 0))
    DeleteObject (私当前画笔)
.如果真结束
赋值 (私当前画笔, CreatePen (画笔样式, 参画笔宽度, 参画笔颜色))
.如果真 (等于 (私当前画笔, 0))
    输出调试文本 (“创建画笔失败。”)
    返回 (假)
.如果真结束
输出调试文本 (到文本 (私当前画笔))
SelectObject (私画布句柄, 私当前画笔)
返回 (真)

.子程序 置实色画刷, 逻辑型, 公开, 
.参数 参颜色, 整数型, 参考, 

.如果真 (不等于 (私当前画刷, 0))
    DeleteObject (私当前画刷)
.如果真结束
赋值 (私当前画刷, CreateSolidBrush (参颜色))
.如果真 (等于 (私当前画刷, 0))
    输出调试文本 (“设置实色画刷失败。”)
    返回 (假)
.如果真结束
SelectObject (私画布句柄, 私当前画刷)
返回 (真)


.子程序 置交叉线画刷, 逻辑型, 公开, 
.参数 参交叉线样式, 整数型, , 以 HS_ 开头的常量
.参数 参颜色, 整数型, , 

.如果真 (不等于 (私当前画刷, 0))
    DeleteObject (私当前画刷)
.如果真结束
赋值 (私当前画刷, CreateHatchBrush (参交叉线样式, 参颜色))
.如果真 (等于 (私当前画刷, 0))
    输出调试文本 (“设置交叉线画刷失败。”)
    返回 (假)
.如果真结束
SelectObject (私画布句柄, 私当前画刷)
返回 (真)


.子程序 移动到, 空白型, 公开, 
.参数 参横坐标, 整数型, , 
.参数 参纵坐标, 整数型, , 

MoveToEx (私画布句柄, 参横坐标, 参纵坐标, 0)


.子程序 画直线到, 空白型, 公开, 
.参数 参横坐标, 整数型, , 
.参数 参纵坐标, 整数型, , 

LineTo (私画布句柄, 参横坐标, 参纵坐标)


.子程序 画多义线点数组, 空白型, 公开, 
.参数 参顶点坐标数组, POINT, 数组, Point 类型

.局部变量 顶点数, 整数型, , , 
.局部变量 i, 空白型, , , 

赋值 (顶点数, 取数组成员数 (参顶点坐标数组))
.如果真 (小于或等于 (顶点数, 0))
    返回 ()
.如果真结束
 ' Polyline (私画布句柄, 取变量地址 (参顶点坐标数组), 顶点数)
.计次循环首 (顶点数, i)
    .如果 (等于 (i, 1))
        移动到 (参顶点坐标数组 [1].x, 参顶点坐标数组 [1].y)
    .否则
        画直线到 (参顶点坐标数组 [i], x, 参顶点坐标数组 [i], y)
    .如果结束
    
.计次循环尾 ()



.子程序 画多义线横纵数组, 空白型, 公开, 
.参数 参横纵坐标数组, 整数型, 数组, 

.局部变量 p, POINT, , , 
.局部变量 点数组, POINT, , "0", 
.局部变量 i, 整数型, , , 
.局部变量 成员数, 整数型, , , 

赋值 (成员数, 取数组成员数 (参横纵坐标数组))
.如果真 (或者 (等于 (成员数, 0), 不等于 (求余数 (成员数, 2), 0)))
    输出调试文本 (“数组个数不是偶数。”)
    返回 ()
.如果真结束
.计次循环首 (相除 (成员数, 2), i)
    赋值 (p.x, 参横纵坐标数组 [相减 (相乘 (i, 2), 1)])
    赋值 (p.y, 参横纵坐标数组 [相乘 (i, 2)])
    加入成员 (点数组, p)
.计次循环尾 ()
画多义线点数组 (点数组)


.子程序 画多边形点数组, 空白型, 公开, 
.参数 参顶点坐标数组, POINT, 数组, 

.局部变量 顶点数, 整数型, , , 

赋值 (顶点数, 取数组成员数 (参顶点坐标数组))
.如果真 (小于或等于 (顶点数, 0))
    返回 ()
.如果真结束
 ' Polyline (私画布句柄, 参顶点坐标数组, 顶点数)
Polygon (私画布句柄, 取变量地址 (参顶点坐标数组), 顶点数)


.子程序 画多边形横纵数组, 空白型, 公开, 
.参数 参横纵坐标数组, 整数型, 数组, 

.局部变量 p, POINT, , , 
.局部变量 点数组, POINT, , "0", 
.局部变量 i, 整数型, , , 
.局部变量 成员数, 整数型, , , 

赋值 (成员数, 取数组成员数 (参横纵坐标数组))
.如果真 (或者 (等于 (成员数, 0), 不等于 (求余数 (成员数, 2), 0)))
    输出调试文本 (“数组个数不是偶数。”)
    返回 ()
.如果真结束
.计次循环首 (相除 (成员数, 2), i)
    赋值 (p.x, 参横纵坐标数组 [相减 (相乘 (i, 2), 1)])
    赋值 (p.y, 参横纵坐标数组 [相乘 (i, 2)])
    加入成员 (点数组, p)
.计次循环尾 ()
画多边形点数组 (点数组)


.子程序 画曲线点数组, 空白型, , 
.参数 参顶点坐标数组, POINT, 数组, 

.局部变量 顶点数, 整数型, , , 

赋值 (顶点数, 取数组成员数 (参顶点坐标数组))
.如果真 (小于或等于 (顶点数, 0))
    返回 ()
.如果真结束
 ' Polyline (私画布句柄, 取变量地址 (参顶点坐标数组), 顶点数)
PolyBezier (私画布句柄, 取变量地址 (参顶点坐标数组), 顶点数)


.子程序 画曲线横纵数组, 空白型, 公开, 
.参数 参横纵坐标数组, 整数型, 数组, 

.局部变量 p, POINT, , , 
.局部变量 点数组, POINT, , "0", 
.局部变量 i, 整数型, , , 
.局部变量 成员数, 整数型, , , 

赋值 (成员数, 取数组成员数 (参横纵坐标数组))
.如果真 (或者 (等于 (成员数, 0), 不等于 (求余数 (成员数, 2), 0)))
    输出调试文本 (“数组个数不是偶数。”)
    返回 ()
.如果真结束
.计次循环首 (相除 (成员数, 2), i)
    赋值 (p.x, 参横纵坐标数组 [相减 (相乘 (i, 2), 1)])
    赋值 (p.y, 参横纵坐标数组 [相乘 (i, 2)])
    加入成员 (点数组, p)
.计次循环尾 ()
画曲线点数组 (点数组)


.子程序 画emf文件, 逻辑型, 公开, 
.参数 参文件名, 文本型, , 
.参数 参横坐标, 整数型, , 
.参数 参纵坐标, 整数型, , 
.参数 参宽度, 整数型, , 
.参数 参高度, 整数型, , 

.局部变量 hemf, 空白型, , , 
.局部变量 r, RECT, , , 
.局部变量 结果, 逻辑型, , , 

.如果真 (取反 (文件是否存在 (参文件名)))
    输出调试文本 (“emf文件不存在。”)
    返回 (假)
.如果真结束
赋值 (hemf, GetEnhMetaFile (参文件名))
.如果真 (等于 (hemf, 0))
    输出调试文本 (“载入emf文件错误。”)
    返回 (假)
.如果真结束
赋值 (r.left, 参横坐标)
赋值 (r.top, 参纵坐标)
赋值 (r.right, 相加 (参横坐标, 参宽度))
赋值 (r.bottom, 相加 (参纵坐标, 参高度))
赋值 (结果, PlayEnhMetaFile (私画布句柄, hemf, r))
DeleteEnhMetaFile (hemf)
返回 (结果)


.子程序 画emf字节集, 逻辑型, 公开, 
.参数 参emf字节集, 字节集, , 
.参数 参横坐标, 整数型, , 
.参数 参纵坐标, 整数型, , 
.参数 参宽度, 整数型, , 
.参数 参高度, 整数型, , 

.局部变量 hemf, 空白型, , , 
.局部变量 r, RECT, , , 
.局部变量 结果, 逻辑型, , , 

赋值 (hemf, SetEnhMetaFileBits (取字节集长度 (参emf字节集), 参emf字节集))
.如果真 (等于 (hemf, 0))
    输出调试文本 (“载入emf字节集错误。”)
    返回 (假)
.如果真结束
赋值 (r.left, 参横坐标)
赋值 (r.top, 参纵坐标)
赋值 (r.right, 相加 (参横坐标, 参宽度))
赋值 (r.bottom, 相加 (参纵坐标, 参高度))
赋值 (结果, PlayEnhMetaFile (私画布句柄, hemf, r))
DeleteEnhMetaFile (hemf)
返回 (结果)


.子程序 画图标文件, 逻辑型, 公开, 
.参数 参横坐标, 整数型, , 
.参数 参纵坐标, 整数型, , 
.参数 参图标文件名, 文本型, , 

.局部变量 图标句柄, 空白型, , , 
.局部变量 结果, 逻辑型, , , 

赋值 (图标句柄, LoadIcon (0, 参图标文件名))
.如果真 (等于 (图标句柄, 0))
    输出调试文本 (“装载图标文件错误。”)
    返回 (假)
.如果真结束
赋值 (结果, DrawIcon (私画布句柄, 参横坐标, 参纵坐标, 图标句柄))
DeleteObject (图标句柄)
返回 (结果)


.子程序 复制到画布, 逻辑型, 公开, 
.参数 参目的画布, 整数型, , 
.参数 参源横坐标, 整数型, 可空, 
.参数 参源纵坐标, 整数型, 可空, 
.参数 参宽度, 整数型, 可空, 
.参数 参高度, 整数型, 可空, 
.参数 参目标横坐标, 整数型, 可空, 
.参数 参目标纵坐标, 整数型, 可空, 
.参数 参复制方式, 整数型, 可空, 

.如果真 (是否为空 (参宽度))
    赋值 (参宽度, 私宽度)
.如果真结束
.如果真 (是否为空 (参高度))
    赋值 (参高度, 私高度)
.如果真结束
.如果真 (是否为空 (参复制方式))
    赋值 (参复制方式, #SRCCOPY)
.如果真结束
返回 (BitBlt (参目的画布, 参目标横坐标, 参目标纵坐标, 参宽度, 参高度, 私画布句柄, 参源横坐标, 参源纵坐标, 参复制方式))


.子程序 复制到画板, 逻辑型, 公开, 
.参数 参目的画板, 画板, , 
.参数 参源横坐标, 空白型, 可空, 
.参数 参源纵坐标, 空白型, 可空, 
.参数 参宽度, 空白型, 可空, 
.参数 参高度, 空白型, 可空, 
.参数 参目标横坐标, 空白型, 可空, 
.参数 参目标纵坐标, 空白型, 可空, 
.参数 参复制方式, 空白型, 可空, 

.局部变量 结果, 逻辑型, , , 
.局部变量 hdc, 整数型, , , 

.如果真 (取反 (是否已创建 (参目的画板)))
    输出调试文本 (“画布尚未创建。”)
    返回 (假)
.如果真结束
.如果真 (是否为空 (参宽度))
    赋值 (参宽度, 私宽度)
.如果真结束
.如果真 (是否为空 (参高度))
    赋值 (参高度, 私高度)
.如果真结束
.如果真 (是否为空 (参复制方式))
    赋值 (参复制方式, #SRCCOPY)
.如果真结束

赋值 (hdc, GetDC (参目的画板.取窗口句柄 ()))
赋值 (结果, BitBlt (hdc, 参目标横坐标, 参目标纵坐标, 参宽度, 参高度, 私画布句柄, 参源横坐标, 参源纵坐标, 参复制方式))
返回 (结果)


.子程序 拉伸复制到画布, 逻辑型, 公开, 
.参数 参目的画布, 空白型, , 
.参数 参源横坐标, 空白型, 可空, 
.参数 参源纵坐标, 空白型, 可空, 
.参数 参源宽度, 空白型, 可空, 
.参数 参源高度, 空白型, 可空, 
.参数 参目的横坐标, 空白型, 可空, 
.参数 参目的纵坐标, 空白型, 可空, 
.参数 参目的宽度, 空白型, 可空, 
.参数 参目的高度, 空白型, 可空, 
.参数 参复制方式, 空白型, 可空, 

.局部变量 结果, 逻辑型, , , 

.如果真 (是否为空 (参源宽度))
    赋值 (参源宽度, 私宽度)
.如果真结束
.如果真 (是否为空 (参源高度))
    赋值 (参源高度, 私高度)
.如果真结束
.如果真 (是否为空 (参目的宽度))
    赋值 (参目的宽度, 私宽度)
.如果真结束
.如果真 (是否为空 (参目的高度))
    赋值 (参目的高度, 私高度)
.如果真结束
.如果真 (是否为空 (参复制方式))
    赋值 (参复制方式, #SRCCOPY)
.如果真结束
赋值 (结果, StretchBlt (参目的画布, 参目的横坐标, 参目的纵坐标, 参目的宽度, 参目的高度, 私画布句柄, 参源横坐标, 参源纵坐标, 参源宽度, 参源高度, 参复制方式))
返回 (结果)


.子程序 拉伸复制到画板, 逻辑型, 公开, 
.参数 参目的画板, 画板, , 
.参数 参源横坐标, 空白型, 可空, 
.参数 参源纵坐标, 空白型, 可空, 
.参数 参源宽度, 空白型, 可空, 
.参数 参源高度, 空白型, 可空, 
.参数 参目的横坐标, 空白型, 可空, 
.参数 参目的纵坐标, 空白型, 可空, 
.参数 参目的宽度, 空白型, 可空, 
.参数 参目的高度, 空白型, 可空, 
.参数 参复制方式, 空白型, 可空, 

.局部变量 hdc, 空白型, , , 
.局部变量 结果, 逻辑型, , , 

.如果真 (是否为空 (参源宽度))
    赋值 (参源宽度, 私宽度)
.如果真结束
.如果真 (是否为空 (参源高度))
    赋值 (参源高度, 私高度)
.如果真结束
.如果真 (是否为空 (参目的宽度))
    赋值 (参目的宽度, 私宽度)
.如果真结束
.如果真 (是否为空 (参目的高度))
    赋值 (参目的高度, 私高度)
.如果真结束
.如果真 (是否为空 (参复制方式))
    赋值 (参复制方式, #SRCCOPY)
.如果真结束

.如果真 (取反 (是否已创建 (参目的画板)))
    输出调试文本 (“目的画板未创建。”)
    返回 (假)
.如果真结束
赋值 (hdc, GetDC (参目的画板.取窗口句柄 ()))
.如果真 (等于 (hdc, 0))
    返回 (假)
.如果真结束
赋值 (结果, StretchBlt (hdc, 参目的横坐标, 参目的纵坐标, 参目的宽度, 参目的高度, 私画布句柄, 参源横坐标, 参源纵坐标, 参源宽度, 参源高度, 参复制方式))
ReleaseDC (参目的画板.取窗口句柄 (), hdc)
返回 (结果)


.子程序 画矩形, 空白型, 公开, 
.参数 参横坐标, 整数型, , 
.参数 参纵坐标, 整数型, , 
.参数 参宽度, 整数型, , 
.参数 参高度, 整数型, , 

Rectangle (私画布句柄, 参横坐标, 参纵坐标, 相加 (参横坐标, 参宽度), 相加 (参纵坐标, 参高度))


.子程序 画椭圆, 空白型, 公开, 
.参数 参横坐标, 整数型, , 
.参数 参纵坐标, 整数型, , 
.参数 参宽度, 整数型, , 
.参数 参高度, 整数型, , 

Ellipse (私画布句柄, 参横坐标, 参纵坐标, 相加 (参横坐标, 参宽度), 相加 (参纵坐标, 参高度))


.子程序 画圆角矩形, 空白型, 公开, 
.参数 参横坐标, 空白型, , 
.参数 参纵坐标, 空白型, , 
.参数 参宽度, 空白型, , 
.参数 参高度, 空白型, , 
.参数 参圆角宽度, 空白型, 可空, 
.参数 参圆角高度, 空白型, 可空, 

.如果真 (是否为空 (参圆角宽度))
    赋值 (参圆角宽度, 相除 (参宽度, 8))
.如果真结束
.如果真 (是否为空 (参圆角高度))
    赋值 (参圆角高度, 参圆角宽度)
.如果真结束
RoundRect (私画布句柄, 参横坐标, 参纵坐标, 相加 (参横坐标, 参宽度), 相加 (参纵坐标, 参高度), 参圆角宽度, 参圆角高度)


.子程序 实色填充, 空白型, 公开, 
.参数 参颜色, 整数型, , 

.局部变量 r, RECT, , , 
.局部变量 刷子句柄, 空白型, , , 

赋值 (r.left, -100)
赋值 (r.top, -100)
赋值 (r.right, 相加 (私宽度, 200))
赋值 (r.bottom, 相加 (私宽度, 200))
赋值 (刷子句柄, CreateSolidBrush (参颜色))
FillRect (私画布句柄, r, 刷子句柄)
DeleteObject (刷子句柄)


.子程序 洪水填充, 空白型, 公开, 
.参数 参横坐标, 整数型, , 
.参数 参纵坐标, 整数型, , 
.参数 参颜色, 整数型, , 
.参数 参类型, 整数型, 可空, 以FLOODFILL开头的常量

.如果真 (是否为空 (参类型))
    赋值 (参类型, #FLOODFILLSURFACE)
.如果真结束
ExtFloodFill (私画布句柄, 参横坐标, 参纵坐标, 参颜色, 参类型)


.子程序 置文本属性, 逻辑型, 公开, 
.参数 参字体名, 文本型, 可空, 
.参数 参字符宽度, 整数型, 可空, 
.参数 参字符高度, 整数型, 可空, 
.参数 参笔画粗细, 整数型, 可空, 0-900
.参数 参字体颜色, 整数型, 可空, 
.参数 参背景颜色, 整数型, 可空, 
.参数 参背景是否透明, 逻辑型, 可空, 
.参数 参字符旋转角度, 整数型, 可空, 
.参数 参旋转角度, 整数型, 可空, 
.参数 参是否为斜体, 逻辑型, 可空, 
.参数 参是否下划线, 逻辑型, 可空, 
.参数 参是否删除线, 逻辑型, 可空, 

.如果真 (是否为空 (参字体名))
    赋值 (参字体名, “宋体”)
.如果真结束
.如果真 (是否为空 (参字体颜色))
    赋值 (参字体颜色, #黑色)
.如果真结束
.如果真 (是否为空 (参背景颜色))
    赋值 (参背景颜色, #白色)
.如果真结束
.如果真 (是否为空 (参背景是否透明))
    赋值 (参背景是否透明, 真)
.如果真结束
.如果真 (不等于 (私当前画笔, 0))
    DeleteObject (私当前画笔)
.如果真结束
赋值 (私当前画笔, CreateFont (参字符高度, 参字符宽度, 相乘 (参旋转角度, 10), 相乘 (参字符旋转角度, 10), 参笔画粗细, 参是否为斜体, 参是否下划线, 参是否删除线, #DEFAULT_CHARSET, #OUT_TT_PRECIS, 0, #PROOF_QUALITY, #FF_DONTCARE, 参字体名))
.如果真 (等于 (私当前画笔, 0))
    输出调试文本 (“创建画笔失败。”)
    返回 (假)
.如果真结束
.如果 (参背景是否透明)
    SetBkMode (私画布句柄, #TRANSPARENT)
.否则
    SetBkMode (私画布句柄, #OPAQUE)
.如果结束
SetTextColor (私画布句柄, 参字体颜色)
SetBkColor (私画布句柄, 参背景颜色)
SelectObject (私画布句柄, 私当前画笔)
返回 (真)


.子程序 文本输出, 空白型, 公开, 
.参数 参横坐标, 整数型, , 
.参数 参纵坐标, 整数型, , 
.参数 参文本, 文本型, , 

TextOut (私画布句柄, 参横坐标, 参纵坐标, 参文本, 取文本长度 (参文本))


.子程序 在矩形内绘制文本, 空白型, 公开, 
.参数 参横坐标, 空白型, 可空, 
.参数 参纵坐标, 空白型, 可空, 
.参数 参宽度, 空白型, 可空, 
.参数 参高度, 空白型, 可空, 
.参数 参文本, 文本型, , 
.参数 参格式化选项, 空白型, 可空, 以DT_为首的常量
.参数 参是否绘制边界线, 逻辑型, 可空, 

.局部变量 r, RECT, , , 

.如果真 (是否为空 (参宽度))
    赋值 (参宽度, 320)
.如果真结束
.如果真 (是否为空 (参高度))
    赋值 (参高度, 240)
.如果真结束
.如果真 (是否为空 (参格式化选项))
    赋值 (参格式化选项, 位或 (#DT_CENTER, #DT_VCENTER))
.如果真结束
赋值 (r.left, 参横坐标)
赋值 (r.top, 参纵坐标)
赋值 (r.right, 相加 (参横坐标, 参宽度))
赋值 (r.bottom, 相加 (参纵坐标, 参高度))
DrawText (私画布句柄, 参文本, 取文本长度 (参文本), r, 参格式化选项)
.如果真 (参是否绘制边界线)
    移动到 (参横坐标, 参纵坐标)
    画直线到 (相加 (参横坐标, 参宽度), 参纵坐标)
    画直线到 (相加 (参横坐标, 参宽度), 相加 (参纵坐标, 参高度))
    画直线到 (参横坐标, 相加 (参纵坐标, 参高度))
    画直线到 (参横坐标, 参纵坐标)
.如果真结束


.窗口程序集 窗口程序集1, , , 

.程序集变量 集内存位图, 内存位图, , , 
.程序集变量 集画板宽度, 空白型, , , 
.程序集变量 集画板高度, 空白型, , , 
.程序集变量 集图片宽度, 空白型, , , 
.程序集变量 集图片高度, 空白型, , , 
.程序集变量 集图片号, 空白型, , , 
.程序集变量 集当前视图, 视图, , , 
.程序集变量 集鼠标被按下, 逻辑型, , , 
.程序集变量 ox, 空白型, , , 
.程序集变量 oy, 空白型, , , 
.子程序 _按钮导入_被单击, 空白型, , 
.如果真 (打开 ())
    卸载图片 (集图片号)
    赋值 (集图片号, 载入图片 (.文件名))
    赋值 (集图片宽度, 集图片号.取图片宽度 ())
    赋值 (集图片高度, 集图片号.取图片高度 ())
    赋值 (集当前视图.左, 集画板宽度)
    赋值 (集当前视图.上, 集画板高度)
    赋值 (集当前视图.缩放系数, 1)
    缩放到视图 (集当前视图)
.如果真结束


.子程序 __启动窗口_创建完毕, 空白型, , 
赋值 (集画板宽度, .宽度)
赋值 (集画板高度, .高度)
赋值 (.宽度, 相乘 (集画板宽度, 3))
赋值 (.高度, 相乘 (集画板高度, 3))
赋值 (.可视, 假)
赋值 (集当前视图.左, 集画板宽度)
赋值 (集当前视图.上, 集画板高度)
赋值 (集当前视图.缩放系数, 1)
赋值 (集鼠标被按下, 假)


.子程序 缩放到视图, 空白型, , 
.参数 参视图, 视图, , 

.局部变量 绘制宽度, 空白型, , , 
.局部变量 绘制高度, 空白型, , , 

.如果真 (等于 (集图片号, 0))
    返回 ()
.如果真结束
赋值 (绘制宽度, 相乘 (集图片宽度, 参视图.缩放系数))
赋值 (绘制高度, 相乘 (集图片高度, 参视图.缩放系数))
.清除 ()
.如果真 (或者 (小于 (相加 (参视图.左, 绘制宽度), 集画板宽度), 小于 (相加 (参视图.上, 绘制高度), 集画板高度)))
     ' 防止图片缩放到视图之外
    赋值 (参视图.左, 集画板宽度)
    赋值 (参视图.上, 集画板高度)
.如果真结束
集图片号.画图片 (参视图.左, 参视图.上, 绘制宽度, 绘制高度, )
集画板宽度.复制 (集画板高度, 集画板宽度, 集画板高度, , 0, 0, ) ' 将后台画板的中间部分绘制到前台画板


.子程序 _按钮放大_被单击, 空白型, , 
赋值 (集当前视图.缩放系数, 相乘 (集当前视图.缩放系数, 1.2))
缩放到视图 (集当前视图)


.子程序 _按钮缩小_被单击, 空白型, , 
赋值 (集当前视图.缩放系数, 相乘 (集当前视图.缩放系数, 0.8))
缩放到视图 (集当前视图)


.子程序 _画板_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (集鼠标被按下, 真)
赋值 (ox, 横向位置)
赋值 (oy, 纵向位置)


.子程序 _画板_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (集鼠标被按下)
    赋值 (集当前视图.左, 相减 (相加 (集当前视图.左, 横向位置), ox))
    赋值 (集当前视图.上, 相减 (相加 (集当前视图.上, 纵向位置), oy))
    缩放到视图 (集当前视图)
.如果真结束
赋值 (集鼠标被按下, 假)

.子程序 _画板_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 dx, 空白型, , , 
.局部变量 dy, 空白型, , , 

.如果真 (集鼠标被按下)
     ' 拖动图片
    赋值 (dx, 相减 (横向位置, ox))
    赋值 (dy, 相减 (纵向位置, oy))
    相减 (集画板宽度, dx).复制 (相减 (集画板高度, dy), 集画板宽度, 集画板高度, , 0, 0, )
.如果真结束


.子程序 _画板_滚轮被滚动, 逻辑型, , 
.参数 滚动距离, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (集当前视图.缩放系数, 相加 (集当前视图.缩放系数, 相乘 (滚动距离, 0.2)))
.如果真 (小于 (集当前视图.缩放系数, 0.01))
    赋值 (集当前视图.缩放系数, 0.01)
.如果真结束
缩放到视图 (集当前视图)



 ' 不属于任何一个程序集、类模块的函数：
