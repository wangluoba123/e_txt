 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：本源码来自易语言资源网(www.wodesoft.com)
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：             易语言资源网注意事项
--============   www.wodesoft.com  =============--
* 易语言资源网为易语言官方站、易语言官方论坛提供辅助资源站；本易语言资源网( www.wodesoft.com)所有软件和资料均为软件作者提供和网友推荐发布而来，其版权归该软件和程序源码的合法拥有者所有，本站易语言资源网整理收集仅供易语言用户学习和易语言技术研究探讨使用，不得用于任何商业用途。如果由于以上原因造成的版权纠纷本站概不负责！
* 本站资源未经许可,任何网站不得非法盗链及抄袭本站资源；如引用，请注明来自易语言资源网，谢谢合作！
--============   www.wodesoft.com  =============--
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 663
    高度 = 498
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    窗口类名 = “”
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “进程监视器V1.0 By Links(显示隐藏进程版)”
    帮助文件名 = “”



.常量 STATUS_INFO_LENGTH_MISMATCH, "-1073741820", , 
.常量 STATUS_SUCCESS, "0", , 
.常量 SysDbgReadVirtualMemory, "8", , 
.常量 SysDbgWriteVirtualMemory, "9", , 
.常量 SE_DEBUG_NAME, "“SeDebugPrivilege”", , 
.常量 SE_BACKUP_NAME, "“SeBackupPrivilege”", , 
.常量 SE_RESTORE_NAME, "“SeRestorePrivilege”", , 
.常量 SE_SHUTDOWN_NAME, "“SeShutdownPrivilege”", , 
.常量 system_handle_infomation, "16", , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 5 0 系统核心支持库
 ' iext 27bb20fdd3e145e4bee3db39ddd6e64c 2 0 扩展界面支持库一




数据类型 进程信息32, , 
    .成员 数据类型长度, 整数型, , , 
    .成员 进程引用计数, 整数型, , , 
    .成员 进程ID, 整数型, , , 
    .成员 进程默认堆ID, 整数型, , , 
    .成员 进程模块ID, 整数型, , , 
    .成员 线程计数, 整数型, , , 
    .成员 父进程ID, 整数型, , , 
    .成员 线程优先权, 整数型, , , 
    .成员 保留, 整数型, , , 
    .成员 进程文件名, 字节型, , "260", 

数据类型 LuID, , 
    .成员 lowpart, 整数型, , , 
    .成员 highpart, 整数型, , , 

数据类型 TOKEN_PRIVILEGES, , 
    .成员 PrivilegeCount, 整数型, , , 
    .成员 lowpart, 整数型, , , 
    .成员 highpart, 整数型, , , 
    .成员 Attributes, 整数型, , , 

数据类型 SYSTEM_HANDLE_INFORMATION, , 16byte
    .成员 ProcessId, 整数型, , , 进程标识符
    .成员 ObjectTypeNumber, 字节型, , , 打开的对象的类型
    .成员 Flags, 字节型, , , 句柄属性标志
    .成员 Handle, 短整数型, , , 句柄数值,在进程打开的句柄中唯一标识某个句柄
    .成员 Object, 整数型, , , 这个就是句柄对应的EPROCESS的地址
    .成员 GrantedAccess, 整数型, , , 句柄对象的访问权限

数据类型 PROCESS_MEMORY_COUNTERS, , 
    .成员 cb, 整数型, , , 
    .成员 PageFaultCount, 整数型, , , 
    .成员 PeakWorkingSetSize, 整数型, , , 
    .成员 WorkingSetSize, 整数型, , , 
    .成员 QuotaPeakPagedPoolUsage, 整数型, , , 
    .成员 QuotaPagedPoolUsage, 整数型, , , 
    .成员 QuotaPeakNonPagedPoolUsage, 整数型, , , 
    .成员 QuotaNonPagedPoolUsage, 整数型, , , 
    .成员 PagefileUsage, 整数型, , , 
    .成员 PeakPagefileUsage, 整数型, , , 


.DLL命令 CreateToolhelp32Snapshot, 整数型, "kernel32.dll", "CreateToolhelp32Snapshot", , 
    .参数 lFlags, 整数型, , 
    .参数 lProcessID, 整数型, , 

.DLL命令 Process32First, 整数型, "kernel32.dll", "Process32First", , 取进程快照第一个进程信息返回内存指针
    .参数 快照句柄, 整数型, , 
    .参数 进程信息, 进程信息32, , 

.DLL命令 Process32Next, 整数型, "kernel32.dll", "Process32Next", , 
    .参数 快照句柄, 整数型, , 
    .参数 进程信息, 进程信息32, , 

.DLL命令 CloseHandle, 整数型, "kernel32.dll", "CloseHandle", , 
    .参数 对象句柄, 整数型, , 

.DLL命令 OpenProcess, 整数型, "kernel32.dll", "OpenProcess", , 
    .参数 访问级别, 整数型, , 2035711完全访问
    .参数 子进程继承, 整数型, , 0为子进程继承
    .参数 进程ID, 整数型, , 要打开的进程标识

.DLL命令 GetCurrentProcess, 整数型, "kernel32.dll", "GetCurrentProcess", , 

.DLL命令 OpenProcessToken, 整数型, "advapi32.dll", "OpenProcessToken", , 
    .参数 ProcessHandle, 整数型, , 
    .参数 DesiredAccess, 整数型, , 
    .参数 TokenHandle, 整数型, 传址, 

.DLL命令 LookupPrivilegeValue, 逻辑型, "advapi32.dll", "LookupPrivilegeValueA", , 
    .参数 lpSystemName, 文本型, , 
    .参数 lpName, 文本型, , 
    .参数 lpLuid, LuID, 传址, 

.DLL命令 AdjustTokenPrivileges, 逻辑型, "advapi32.dll", "AdjustTokenPrivileges", , 
    .参数 TokenHandle, 整数型, , 
    .参数 DisableAllPrivileges, 整数型, , 
    .参数 NewState, TOKEN_PRIVILEGES, 传址, 
    .参数 BufferLength, 整数型, , 
    .参数 PreviousState, TOKEN_PRIVILEGES, 传址, 
    .参数 ReturnLength, 整数型, 传址, 

.DLL命令 GetProcessMemoryInfo, 整数型, "Psapi.dll", "GetProcessMemoryInfo", , 
    .参数 Process, 整数型, , 
    .参数 ppsmemCounters, PROCESS_MEMORY_COUNTERS, 传址, 
    .参数 cb, 整数型, , 

.DLL命令 api_LookupPrivilegeValue, 逻辑型, "advapi32.dll", "LookupPrivilegeValueA", , 
    .参数 lpSystemName, 文本型, , 
    .参数 lpName, 文本型, , 
    .参数 lpLuid, LuID, 传址, 

.DLL命令 api_AdjustTokenPrivileges, 逻辑型, "advapi32.dll", "AdjustTokenPrivileges", , 
    .参数 TokenHandle, 整数型, , 
    .参数 DisableAllPrivileges, 整数型, , 
    .参数 NewState, TOKEN_PRIVILEGES, 传址, 
    .参数 BufferLength, 整数型, , 
    .参数 PreviousState, TOKEN_PRIVILEGES, 传址, 
    .参数 ReturnLength, 整数型, 传址, 

.DLL命令 api_GetCurrentProcess, 整数型, "kernel32.dll", "GetCurrentProcess", , 

.DLL命令 api_OpenProcessToken, 整数型, "advapi32.dll", "OpenProcessToken", , 
    .参数 ProcessHandle, 整数型, , 
    .参数 DesiredAccess, 整数型, , 
    .参数 TokenHandle, 整数型, 传址, 

.DLL命令 GetModuleBaseNameA, 整数型, "Psapi.dll", "GetModuleBaseNameA", , 
    .参数 hProcess, 整数型, , 
    .参数 hMod, 整数型, , 
    .参数 szProcessName, 文本型, 传址, 
    .参数 nSize, 整数型, , 

.DLL命令 GetCurrentProcessId, 整数型, "kernel32.dll", "GetCurrentProcessId", , 

.DLL命令 ZwQuerySystemInformation, 整数型, "ntdll.dll", "ZwQuerySystemInformation", , 
    .参数 SystemInformationClass, 整数型, , 未知类型：SYSTEM_INFORMATION_CLASS。
    .参数 SystemInformation, 字节集, , any
    .参数 SystemInformationLength, 整数型, , 
    .参数 ReturnLength, 整数型, 传址, 

.DLL命令 取指针_字节集, 整数型, "", "lstrcpyn", , 
    .参数 欲取其指针, 字节集, 传址, 
    .参数 欲取其指针, 字节集, 传址, 
    .参数 保留, 整数型, , 0

.DLL命令 RtlMoveMemory2, 整数型, "", "RtlMoveMemory", , 
    .参数 dest, SYSTEM_HANDLE_INFORMATION, , 
    .参数 Source, 整数型, , 
    .参数 len, 空白型, , 284

.DLL命令 RtlMoveMemory3, 整数型, "", "RtlMoveMemory", , 
    .参数 dest, 整数型, 传址, 
    .参数 Source, 整数型, , 
    .参数 len, 空白型, , 4

.DLL命令 StrToInt64ExA, 整数型, "shlwapi.dll", "StrToInt64ExA", , 64-bit integer
    .参数 pszString, 文本型, , 
    .参数 dwFlags, 整数型, , 1为16进制，0为10进制
    .参数 piRet, 长整数型, 传址, 

.DLL命令 NtSystemDebugControl, 整数型, "ntdll.dll", "NtSystemDebugControl", , 
    .参数 Command, 整数型, , 8
    .参数 InputBuffer, 字节集, , 
    .参数 InputBufferLength, 整数型, , 
    .参数 OutputBuffer, 整数型, , 
    .参数 OutputBufferLength, 整数型, , 
    .参数 ReturnLength, 整数型, 传址, 

.窗口程序集 窗口程序集1, , , 

.子程序 __启动窗口_创建完毕, 空白型, , 
 ' --========  易语言资源网  (www.wodesoft.com)  ======--
 ' 努力创建完善、持续更新的易语言学习例程源码资源站
 ' --================   www.wodesoft.com  ===========--
 ' --==================   易语言资源网注意事项  ================--
 ' * 易语言资源网为易语言官方站、易语言官方论坛提供辅助资源站；
 ' 本易语言资源网( www.wodesoft.com)所有软件和资料均为软件作者提
 ' 供和网友推荐发布而来，其版权归该软件和程序源码的合法拥有者所
 ' 有，本站易语言资源网整理收集仅供易语言用户学习和易语言技术研
 ' 究探讨使用，不得用于任何商业用途。如果由于以上原因造成的版权
 ' 纠纷本站概不负责！
 ' * 本站资源未经许可，任何网站不得非法盗链及抄袭本站资源；如引用
 ' 页面，请注明来自易语言资源网，谢谢合作！
 ' --=====================   www.wodesoft.com  ================--

提升进程权限 ()

.子程序 _时钟1_周期事件, 空白型, , 
.局部变量 进程ID, 整数型, , "0", 
.局部变量 程序名, 文本型, , "0", 
.局部变量 i, 整数型, , , 
.局部变量 进程句柄, 整数型, , , 
.局部变量 j, 整数型, , , 
.局部变量 找到, 逻辑型, , , 
.局部变量 k, 整数型, , , 
.局部变量 Processmemory, PROCESS_MEMORY_COUNTERS, , , 
.局部变量 特征码, 字节集, , , 
.局部变量 handle, 整数型, , , 
.局部变量 temp, 文本型, , , 

全部删除 ()
枚举进程 (进程ID, 程序名)
加入成员 (进程ID, 0)
加入成员 (程序名, “System Idle Process”)
.计次循环首 (取数组成员数 (进程ID), k)
    .插入表项 ()
    相减 (取表项数 (), 1).置标题 (0, 程序名 [k])
    相减 (取表项数 (), 1).置标题 (1, 到文本 (进程ID [k]))
    赋值 (handle, OpenProcess (2035711, 0, 进程ID [k]))
    GetProcessMemoryInfo (handle, Processmemory, 40)
    CloseHandle (handle)
    .如果 (等于 (进程ID [k], 0))
        相减 (取表项数 (), 1).置标题 (2, )
        相减 (取表项数 (), 1).置标题 (3, )
    .否则
        相减 (取表项数 (), 1).置标题 (2, 相加 (到文本 (取整 (相除 (Processmemory.WorkingSetSize, 1024))), “KB”))
        相减 (取表项数 (), 1).置标题 (3, 相加 (到文本 (取整 (相除 (Processmemory.PeakWorkingSetSize, 1024))), “KB”))
         ' 本源码来自易语言资源网(www.wodesoft.com)
    .如果结束
    
.计次循环尾 ()
.计次循环首 (1024, i)
    赋值 (进程句柄, OpenProcess (2035711, 0, 相乘 (i, 4)))
    .如果真 (不等于 (进程句柄, 0))
        赋值 (找到, 假)
        .计次循环首 (取数组成员数 (进程ID), j)
            .如果真 (等于 (进程ID [j], 相乘 (i, 4)))
                赋值 (找到, 真)
                跳出循环 ()
            .如果真结束
            
        .计次循环尾 ()
        .如果真 (等于 (找到, 假))
            赋值 (handle, OpenProcess (2035711, 0, 相乘 (i, 4)))
            GetProcessMemoryInfo (handle, Processmemory, 40)
            赋值 (temp, 取空白文本 (255))
            GetModuleBaseNameA (handle, 0, temp, 255)
            CloseHandle (handle)
            .如果真 (不等于 (寻找文本 (temp, “.”, , 假), -1))
                赋值 (temp, 相加 (“*”, temp))
                .插入表项 ()
                相减 (取表项数 (), 1).置标题 (0, temp)
                相减 (取表项数 (), 1).置标题 (1, 到文本 (相乘 (i, 4)))
                相减 (取表项数 (), 1).置标题 (2, 相加 (到文本 (取整 (相除 (Processmemory.WorkingSetSize, 1024))), “KB”))
                相减 (取表项数 (), 1).置标题 (3, 相加 (到文本 (取整 (相除 (Processmemory.PeakWorkingSetSize, 1024))), “KB”))
                
            .如果真结束
            
        .如果真结束
        
    .如果真结束
    CloseHandle (进程句柄)
.计次循环尾 ()
赋值 (.标题, 相加 (“正常进程数[”, 到文本 (取数组成员数 (进程ID)), “]”, “隐藏进程数[”, 到文本 (相减 (取表项数 (), 取数组成员数 (进程ID))), “]”))
' 本源码来自易语言资源网(www.wodesoft.com)

.子程序 _按钮1_被单击, 空白型, , 
隐藏进程 ()


.程序集 程序集1, , , 

.子程序 枚举进程, 整数型, , 成功返回1，失败返回0
.参数 进程ID, 整数型, 参考 数组, 保存进程ID
.参数 程序名, 文本型, 参考 数组, 保存执行程序名

.局部变量 进程列表, 进程信息32, , , 
.局部变量 进程快照句柄, 整数型, , , 
.局部变量 进程信息指针, 整数型, , , 
.局部变量 进程文件名, 文本型, , , 

赋值 (进程快照句柄, CreateToolhelp32Snapshot (15, 0))
.如果真 (等于 (0, 进程快照句柄))
    返回 (0)
.如果真结束
赋值 (进程列表.数据类型长度, 296)
赋值 (进程信息指针, Process32First (进程快照句柄, 进程列表))
.判断循环首 (不等于 (进程信息指针, 0))
    赋值 (进程文件名, 到文本 (进程列表.进程文件名))
    .如果真 (并且 (不等于 (进程文件名, “”), 不等于 (进程列表.进程ID, 0)))
        加入成员 (进程ID, 进程列表.进程ID)
        加入成员 (程序名, 到文本 (进程列表.进程文件名))
    .如果真结束
    赋值 (进程信息指针, Process32Next (进程快照句柄, 进程列表))
.判断循环尾 ()
CloseHandle (进程快照句柄)
返回 (取数组成员数 (进程ID))

.子程序 提升进程权限, 逻辑型, , 成功返回真，失败返回假
.参数 目标进程, 整数型, 可空, 要提升的进程,默认为本进程
.参数 权限类别, 文本型, 可空, 要提升到的特权

.局部变量 hdlProcessHandle, 整数型, , , 
.局部变量 hdlTokenHandle, 整数型, , , 
.局部变量 tmpLuid, LuID, , , 
.局部变量 tkp, TOKEN_PRIVILEGES, , , 
.局部变量 tkpNewButIgnored, TOKEN_PRIVILEGES, , , 

.如果真 (不等于 (取操作系统类别 (), 3))
    返回 (假)
.如果真结束
.如果真 (是否为空 (目标进程))
    赋值 (hdlProcessHandle, GetCurrentProcess ())
.如果真结束
.如果真 (是否为空 (权限类别))
    赋值 (权限类别, #SE_DEBUG_NAME)
.如果真结束
OpenProcessToken (hdlProcessHandle, 40, hdlTokenHandle)
LookupPrivilegeValue (“”, 权限类别, tmpLuid)
赋值 (tkp.PrivilegeCount, 1)
赋值 (tkp.lowpart, tmpLuid.lowpart)
赋值 (tkp.highpart, tmpLuid.highpart)
赋值 (tkp.Attributes, 2)
返回 (AdjustTokenPrivileges (hdlTokenHandle, 0, tkp, 28, tkpNewButIgnored, 0))

.程序集 程序集2, , , 

.子程序 提升进程权限, 逻辑型, , 成功返回真，失败返回假
.参数 目标进程, 整数型, 可空, 要提升的进程,默认为本进程
.参数 权限类别, 文本型, 可空, 要提升到的特权

.局部变量 hdlProcessHandle, 整数型, , , 
.局部变量 hdlTokenHandle, 整数型, , , 
.局部变量 tmpLuid, LuID, , , 
.局部变量 tkp, TOKEN_PRIVILEGES, , , 
.局部变量 tkpNewButIgnored, TOKEN_PRIVILEGES, , , 

.如果真 (不等于 (取操作系统类别 (), 3))
    返回 (假)
.如果真结束
.如果真 (是否为空 (目标进程))
    赋值 (hdlProcessHandle, api_GetCurrentProcess ())
.如果真结束
.如果真 (是否为空 (权限类别))
    赋值 (权限类别, #SE_DEBUG_NAME)
.如果真结束
api_OpenProcessToken (hdlProcessHandle, 40, hdlTokenHandle)
api_LookupPrivilegeValue (“”, 权限类别, tmpLuid)
赋值 (tkp.PrivilegeCount, 1)
赋值 (tkp.lowpart, tmpLuid.lowpart)
赋值 (tkp.highpart, tmpLuid.highpart)
赋值 (tkp.Attributes, 2)
返回 (api_AdjustTokenPrivileges (hdlTokenHandle, 0, tkp, 28, tkpNewButIgnored, 0))

.子程序 隐藏进程, 逻辑型, , 由于采用直接读写物理内存，所以在某些机器上不稳定。
.参数 pid, 整数型, 可空, 空为隐藏本进程，可输入其它进程PID

.局部变量 eprocess, 长整数型, , , 
.局部变量 hand, 整数型, , , 
.局部变量 temp, 字节集, , , 
.局部变量 fw_, 长整数型, , , 
.局部变量 bw_, 长整数型, , , 
.局部变量 fw, 字节集, , , 
.局部变量 bw, 字节集, , , 

.如果 (是否为空 (pid))
    赋值 (hand, OpenProcess (2075311, 0, GetCurrentProcessId ()))
    赋值 (eprocess, 取进程EProcess (GetCurrentProcessId ()))
    CloseHandle (hand)
    
.否则
    赋值 (eprocess, 取进程EProcess (pid))
.如果结束
.如果真 (等于 (eprocess, 0))
    返回 (假)
.如果真结束

赋值 (temp, 读物理内存 (相加 (eprocess, 136), 4))
.如果真 (等于 (temp, {  }))
    返回 (假)
.如果真结束
赋值 (fw_, 取字节集数据 (temp, #长整数型, ))
赋值 (fw, temp)

赋值 (temp, 读物理内存 (相加 (eprocess, 140), 4))
.如果真 (等于 (temp, {  }))
    返回 (假)
.如果真结束
赋值 (bw_, 取字节集数据 (temp, #长整数型, ))
赋值 (bw, temp)

.如果真 (等于 (写物理内存 (相加 (fw_, 4), bw), -1))
    返回 (假)
.如果真结束

.如果真 (等于 (写物理内存 (bw_, fw), -1))
    返回 (假)
.如果真结束
返回 (真)


.子程序 取进程EProcess, 长整数型, , 0为失败
.参数 pid, 整数型, , 

.局部变量 ret, 空白型, , , 
.局部变量 信息块, 字节集, , , 
.局部变量 retlen, 空白型, , , 
.局部变量 temp, SYSTEM_HANDLE_INFORMATION, , , 
.局部变量 信息块指针偏移, 空白型, , , 
.局部变量 number, 空白型, , , 
.局部变量 结果, 长整数型, , , 

赋值 (retlen, 1)
.循环判断首 ()
    赋值 (信息块, 取空白字节集 (retlen))
    赋值 (ret, ZwQuerySystemInformation (#system_handle_infomation, 信息块, retlen, 0))
    .如果 (等于 (ret, #STATUS_INFO_LENGTH_MISMATCH))
        赋值 (retlen, 相乘 (retlen, 2))
        赋值 (信息块, 取空白字节集 (retlen))
    .否则
        跳出循环 ()
    .如果结束
    
.循环判断尾 (等于 (ret, #STATUS_INFO_LENGTH_MISMATCH))

赋值 (信息块指针偏移, 取指针_字节集 (信息块, 信息块, 0))
RtlMoveMemory3 (number, 信息块指针偏移, 4)
赋值 (信息块指针偏移, 相加 (信息块指针偏移, 4))
.计次循环首 (number, )
    RtlMoveMemory2 (temp, 信息块指针偏移, 16)
    .如果真 (并且 (等于 (pid, temp.ProcessId), 等于 (temp.ObjectTypeNumber, 5)))
        返回 (十六文本至长整数 (取十六进制文本 (temp.Object)))
    .如果真结束
    赋值 (信息块指针偏移, 相加 (信息块指针偏移, 16))
.计次循环尾 ()
返回 (0)


.子程序 十六文本至长整数, 长整数型, , 
.参数 x, 文本型, , 要转换的十六进制文本

.局部变量 ret, 长整数型, , , 

StrToInt64ExA (相加 (“0x”, x), 1, ret)
返回 (ret)


.子程序 读物理内存, 字节集, , 失败返回{}，成功返回相应数据
.参数 地址, 长整数型, , 
.参数 长度, 整数型, , <=4096

.局部变量 MEMORY_CHUNKS, 字节集, , , 
.局部变量 ret, 字节集, , , 
.局部变量 retlen, 整数型, , , 

赋值 (ret, 取空白字节集 (长度))
赋值 (MEMORY_CHUNKS, 相加 (取字节集左边 (到字节集 (地址), 4), 到字节集 (取指针_字节集 (ret, ret, 0)), 到字节集 (长度)))
NtSystemDebugControl (#SysDbgReadVirtualMemory, MEMORY_CHUNKS, 12, 0, 0, retlen) ' 12为MEMORY_CHUNKS的长度
.如果真 (小于或等于 (retlen, 0))
    赋值 (ret, {  })
.如果真结束
返回 (ret)


.子程序 写物理内存, 整数型, , 失败返回-1，成功返回0
.参数 地址, 长整数型, , 
.参数 数据, 字节集, , <=4096

.局部变量 MEMORY_CHUNKS, 字节集, , , 
.局部变量 ret, 整数型, , , 
.局部变量 retlen, 整数型, , , 
.局部变量 len, 整数型, , , 

赋值 (len, 取字节集长度 (数据))
赋值 (MEMORY_CHUNKS, 相加 (取字节集左边 (到字节集 (地址), 4), 到字节集 (取指针_字节集 (数据, 数据, 0)), 到字节集 (len)))
NtSystemDebugControl (#SysDbgWriteVirtualMemory, MEMORY_CHUNKS, 12, 0, 0, retlen) ' 12为MEMORY_CHUNKS的长度
.如果真 (小于或等于 (retlen, 0))
    赋值 (ret, -1)
.如果真结束
返回 (ret)



 ' 不属于任何一个程序集、类模块的函数：
