 ' 文件类型：Windows窗口程序

 ' 程序名称：数据库管理器
 ' 程序描述：本程序用作完成易语言系统中“数据库”菜单下的“结构管理器”和“记录管理器”功能。开发代号:易小刀.
 ' 程序作者：王军
 ' 邮政编码：210017
 ' 联系地址：江苏南京南苑晔园35-301室
 ' 联系电话：025-6431383
 ' 传真号码：
 ' 电子信箱：kindows@sina.com
 ' 主页地址：oldphoto.8u8.com
 ' 版权声明：www.eyuyan.com
www.ccfly.com
 ' 版本号：1.0
 ' 创建号：0.0

窗口 结构管理窗口
    左边 = 50
    顶边 = 50
    宽度 = 487
    高度 = 372
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 真
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “易语言数据库结构管理”
    帮助文件名 = “”

窗口 索引创建窗口
    左边 = 50
    顶边 = 50
    宽度 = 362
    高度 = 286
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “创建索引文件”
    帮助文件名 = “”

窗口 记录管理窗口
    左边 = 50
    顶边 = 50
    宽度 = 380
    高度 = 250
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 假
    禁止 = 假

窗口 _启动窗口 ' 易数据库代码直接生成器窗口
    左边 = 50
    顶边 = 50
    宽度 = 590
    高度 = 468
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “易数据库代码直接生成器 V1.6”
    帮助文件名 = “”

窗口 密码输入窗口
    左边 = 50
    顶边 = 50
    宽度 = 352
    高度 = 199
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “设置数据库密码:”
    帮助文件名 = “”



.图片 模块, " ' 已保存到：D:\易语言学习\Data\易数据库代码自动生成系统.e\模块", , edb转xls.ec
.图片 图标, " ' 已保存到：D:\易语言学习\Data\易数据库代码自动生成系统.e\图标", , ICO
.常量 总标题字, "“易之表增强版 & 易数据库全操作 V 3.10”", , 
.常量 原数据库, "“库1”", , 
.常量 数据库管理器, "“数据库管理器”", , 
.常量 用户习惯, "“用户习惯”", , 
.常量 易之表1, "“易之表”", , 
.常量 用户习惯1, "“用户习惯”", , 
.常量 逗号分隔文件, "“逗号分隔文件”", , 
.常量 字段名, "“字段名”", , 
.常量 字段类型, "“字段类型”", , 
.常量 字段长度, "“字段长度”", , 
.常量 chj数据库, "“chj”", , 
.常量 数据库1, "“圆球”", , 
.常量 英文, "“英文”", , 
.常量 中文, "“中文”", , 
.常量 日文, "“日文”", , 
.常量 韩文, "“韩文”", , 
.常量 德语, "“德语”", , 
.常量 法语, "“法语”", , 
.常量 荷语, "“荷语”", , 
.常量 澳语, "“澳语”", , 
.常量 挪语, "“挪语”", , 
.常量 西班牙语, "“西班牙语”", , 
.常量 备注, "“备注”", , 
.常量 常量1, "", , 
.常量 数据库2, "“分类表”", , 
.常量 分类, "“分类”", , 
.常量 WM_DROPFILES, "563", , 
.常量 , , , 


 ' 所需要的支持库：
 ' KRNLN d09f2340818511d396f6aaf844c7e325 4 4 系统核心支持库




数据类型 CHOOSECOLOR, , 
    .成员 lStructSize, 整数型, , , 36
    .成员 hwndOwner, 整数型, , , 
    .成员 hInstance, 整数型, , , 
    .成员 rgbResult, 整数型, , , 
    .成员 lpCustColors, 文本型, , , 
    .成员 flags, 整数型, , , 
    .成员 lCustData, 整数型, , , 
    .成员 lpfnHook, 整数型, , , 
    .成员 lpTemplateName, 文本型, , , 

数据类型 恢复类型, , 
    .成员 锚点, 整数型, , , 
    .成员 步长, 整数型, , , 
    .成员 标点, 整数型, , , 
    .成员 内容, 字节集, , "30", 这里的设置决定了恢复的最大步长

.全局变量 颜色选择标题, 文本型, , , 
.全局变量 返回颜色有效, 逻辑型, , , 
.全局变量 返回颜色, 整数型, , , 
.全局变量 _新表格, 表格, , "100", 新的表格控件
.全局变量 _表格总数, 整数型, , , 统计表格总数
.全局变量 匿名全局变量_4430, 空白型, , , 
.全局变量 匿名全局变量_4396, 空白型, , , 
.全局变量 上卦数, 长整数型, , , 
.全局变量 下卦数, 长整数型, , , 
.全局变量 上加权数, 长整数型, , , 
.全局变量 下加权数, 长整数型, , , 
.全局变量 圆周率, 长整数型, , , 
.全局变量 匿名全局变量_4397, 空白型, , , 

.DLL命令 设置窗口是否接受拖放, 逻辑型, "shell32.dll", "DragAcceptFiles", , 设置窗口是否接受拖放
    .参数 hWnd, 整数型, , 
    .参数 isAccept, 逻辑型, 传址, true:接收拖放

.DLL命令 结束拖放, 空白型, "shell32.dll", "DragFinish", , 结束拖放
    .参数 hDrop, 整数型, , hDrop取自WM_DROPFILES消息的wParam参数

.DLL命令 取被拖放文件名, 整数型, "shell32.dll", "DragQueryFileA", , 
    .参数 hDrop, 整数型, , hDrop取自WM_DROPFILES消息的wParam参数
    .参数 index_of_file, 整数型, , 如果为 -1,DragQueryFile返回已传送文件数
    .参数 buf, 文本型, , 
    .参数 size_of_buf, 整数型, 传址, 

.DLL命令 SetWindowLong, 整数型, "", "SetWindowLongA", , 
    .参数 hwnd, 整数型, , 
    .参数 nIndex, 整数型, , 
    .参数 dwNewLong, 子程序指针, , 

.DLL命令 CallWindowProc, 整数型, "", "CallWindowProcA", , 
    .参数 lpPrevWndFunc, 整数型, , 
    .参数 hwnd, 整数型, , 
    .参数 wmsg, 整数型, , 
    .参数 wparam, 整数型, , 
    .参数 lparam, 整数型, , 

.DLL命令 外部_获得程序句柄, 整数型, "", "GetModuleHandleA", , 
    .参数 模块名, 整数型, , 

.DLL命令 ChooseColor, 整数型, "comdlg32.dll", "ChooseColorA", , 
    .参数 pChoosecolor, CHOOSECOLOR, , 

.窗口程序集 结构管理器, , , 

.程序集变量 字段表, 字段信息, , "0", 
.程序集变量 备份字段表, 字段信息, , "0", 
.程序集变量 数据库文件名, 文本型, , , 如果为空表示为新建数据库
.程序集变量 是否需要转存数据, 逻辑型, , , 
.程序集变量 需要保存, 逻辑型, , , 当前数据库字段信息是否已经被修改
.程序集变量 来自程序的改变, 逻辑型, , , 当程序自己对编辑框进行修改时，置此值为真。
.子程序 结构管理器, 空白型, , 
载入 (结构管理窗口, , 真)

.子程序 _字段名编辑框_内容被改变, 空白型, , 
.局部变量 容器1, 空白型, , , 如果数据类型为空，默认为整数型。

赋值 (容器1, .)
.如果真 (或者 (等于 (来自程序的改变, 真), 等于 (容器1, -1)))
    返回 ()
.如果真结束
.如果真 (不等于 (字段表 [相加 (容器1, 1)]., .))
    赋值 (字段表 [相加 (容器1, 1)]., .)
    容器1.置项目文本 (.)
    设置是否需要保存 ()
.如果真结束


.子程序 _字段类型组合框_列表项被选择, 空白型, , 
.局部变量 容器1, 空白型, , , 
.局部变量 新类型, 空白型, , , 

赋值 (容器1, .)
.如果真 (或者 (等于 (来自程序的改变, 真), 等于 (容器1, -1), 等于 (., -1)))
    返回 ()
.如果真结束
赋值 (容器1, 相加 (容器1, 1))
赋值 (新类型, .取项目数值 (.))
.如果真 (不等于 (字段表 [容器1], , 新类型))
    赋值 (字段表 [容器1], , 新类型)
    赋值 (., 不等于 (新类型, #文本型))
    设置是否需要保存 ()
.如果真结束


.子程序 _字段长度编辑框_内容被改变, 空白型, , 
.局部变量 容器1, 空白型, , , 
.局部变量 新长度, 空白型, , , 

赋值 (容器1, .)
.如果真 (或者 (等于 (来自程序的改变, 真), 等于 (容器1, -1)))
    返回 ()
.如果真结束
赋值 (容器1, 相加 (容器1, 1))
.如果真 (等于 (字段表 [容器1], , #文本型))
    赋值 (新长度, 到数值 (.))
    .如果真 (不等于 (字段表 [容器1], , 新长度))
        赋值 (字段表 [容器1], , 选择 (大于 (新长度, 512), 512, 选择 (小于 (新长度, 1), 1, 新长度)))
        设置是否需要保存 ()
    .如果真结束
    
.如果真结束


.子程序 _字段列表框_列表项被选择, 空白型, , 
填充字段数据 ()

.子程序 _新建按钮_被单击, 空白型, , 
.局部变量 字段, 字段信息, , , 

.如果真 (等于 (询问保存 (), 假))
    返回 ()
.如果真结束
赋值 (数据库文件名, “”)
清除数组 (字段表)
清除数组 (备份字段表)
赋值 (字段., #整数型)
加入成员 (字段表, 字段) ' 加入一个空白整数字段
清空 ()
“”.加入项目 (0)
赋值 (., 0)
填充字段数据 ()
获取焦点 ()
设置窗口标题 ()
赋值 (是否需要转存数据, 假)
显示字段数 ()

.子程序 _保存按钮_被单击, 空白型, , 
保存 ()

.子程序 _关闭按钮_被单击, 空白型, , 
.如果真 (等于 (询问保存 (), 真))
    销毁 ()
.如果真结束


.子程序 _结构管理窗口_创建完毕, 空白型, , 
_新建按钮_被单击 ()

.子程序 _结构管理窗口_可否被关闭, 逻辑型, , 
返回 (询问保存 ())

.子程序 填充字段数据, 空白型, , 
.局部变量 容器1, 空白型, , , 
.局部变量 字段类型, 空白型, , , 
.局部变量 容器3, 空白型, , , 

赋值 (来自程序的改变, 真)
赋值 (容器1, .)
.如果真 (等于 (容器1, -1))
     ' 如果没有选择字段，将编辑部分清空。
    赋值 (., “”)
    赋值 (., -1)
    赋值 (., “”)
    赋值 (., 真)
    赋值 (来自程序的改变, 假)
    返回 ()
.如果真结束
赋值 (容器1, 相加 (容器1, 1))
检查 (小于或等于 (容器1, 取数组成员数 (字段表)))
赋值 (., 字段表 [容器1], )
赋值 (字段类型, 字段表 [容器1], )
.计次循环首 (取项目数 (), 容器3)
    .如果真 (等于 (相减 (容器3, 1).取项目数值 (), 字段类型))
        赋值 (., 相减 (容器3, 1))
        跳出循环 ()
    .如果真结束
    
.计次循环尾 ()
赋值 (., 到文本 (字段表 [容器1], ))
赋值 (., 不等于 (字段类型, #文本型))
赋值 (来自程序的改变, 假)

.子程序 询问保存, 逻辑型, , 返回真继续，返回假取消。
.局部变量 选择结果, 空白型, , , 

.如果真 (等于 (需要保存, 真))
    赋值 (选择结果, 信息框 (“当前结构已经被修改，请问是否保存？”, 相加 (#取消是否钮, #询问图标), “询问”))
    .判断开始 (等于 (选择结果, #取消钮))
        返回 (假)
    .判断 (等于 (选择结果, #是钮))
        .如果真 (等于 (保存 (), 假))
            返回 (假)
        .如果真结束
        
    .默认
        设置是否需要保存 (假)
    .判断结束
    
.如果真结束
返回 (真)

.子程序 设置是否需要保存, 空白型, , 
.参数 是否需要保存, 逻辑型, 可空, 

.如果真 (等于 (是否为空 (是否需要保存), 真))
    赋值 (是否需要保存, 真)
.如果真结束
.如果真 (不等于 (需要保存, 是否需要保存))
    赋值 (需要保存, 是否需要保存)
     ' 设置在窗口标题栏中的标志
    .如果 (等于 (需要保存, 真))
        .如果真 (不等于 (取文本右边 (., 2), “ *”))
            赋值 (., 相加 (., “ *”))
        .如果真结束
        
    .否则
        .如果真 (等于 (取文本右边 (., 2), “ *”))
            赋值 (., 取文本左边 (., 相减 (取文本长度 (.), 2)))
        .如果真结束
        
    .如果结束
    
.如果真结束


.子程序 _删除按钮_被单击, 空白型, , 
.局部变量 容器1, 空白型, , , 
.局部变量 字段总数, 空白型, , , 
.局部变量 容器2, 空白型, , , 

赋值 (容器1, .)
.如果真 (等于 (容器1, -1))
    返回 ()
.如果真结束
赋值 (容器2, 容器1.取项目数值 ())
赋值 (容器1, 相加 (容器1, 1))
.如果真 (不等于 (容器2, 0))
    赋值 (备份字段表 [容器2], , 0) ' 设置被删除标志
.如果真结束
赋值 (字段总数, 取项目数 ())
.如果 (等于 (字段总数, 1)) ' 如果为最后一个字段，则仅清空。
    赋值 (字段表 [容器1], , “”)
    赋值 (字段表 [容器1], , #整数型)
    赋值 (字段表 [容器1], , 0)
    0.置项目文本 (“”)
    0.置项目数值 (0)
.否则
    删除成员 (字段表, 容器1, )
    相减 (容器1, 1).删除项目 ()
    .如果真 (等于 (容器1, 字段总数))
        赋值 (容器1, 相减 (容器1, 1))
    .如果真结束
    赋值 (., 相减 (容器1, 1))
.如果结束
填充字段数据 ()
设置是否需要保存 ()
获取焦点 ()
显示字段数 ()

.子程序 _插入按钮_被单击, 空白型, , 在当前位置插入
插入字段 (假)

.子程序 _向后插入按钮_被单击, 空白型, , 在当前位置之后插入
插入字段 (真)

.子程序 插入字段, 空白型, , 
.参数 向后插入, 逻辑型, , 

.局部变量 容器1, 空白型, , , 
.局部变量 字段, 字段信息, , , 

赋值 (容器1, .)
.如果 (等于 (容器1, -1))
    赋值 (容器1, 取项目数 ())
.否则
    .如果真 (等于 (向后插入, 真))
        赋值 (容器1, 相加 (容器1, 1))
    .如果真结束
    
.如果结束
赋值 (字段., #整数型)
插入成员 (字段表, 相加 (容器1, 1), 字段)
容器1.插入项目 (“”, 0)
赋值 (., 容器1)
填充字段数据 ()
设置是否需要保存 ()
获取焦点 ()
显示字段数 ()

.子程序 _上移按钮_被单击, 空白型, , 
.局部变量 容器1, 空白型, , , 
.局部变量 字段, 字段信息, , , 
.局部变量 原字段名, 文本型, , , 
.局部变量 原项目值, 空白型, , , 

赋值 (容器1, .)
.如果真 (小于或等于 (容器1, 0))
    返回 ()
.如果真结束
赋值 (原字段名, 容器1.取项目文本 ())
赋值 (原项目值, 容器1.取项目数值 ())
容器1.删除项目 ()
相减 (容器1, 1).插入项目 (原字段名, 原项目值)
赋值 (., 相减 (容器1, 1))
赋值 (容器1, 相加 (容器1, 1))
赋值 (字段, 字段表 [容器1])
删除成员 (字段表, 容器1, )
插入成员 (字段表, 相减 (容器1, 1), 字段)
填充字段数据 ()
设置是否需要保存 ()
获取焦点 ()

.子程序 _下移按钮_被单击, 空白型, , 
.局部变量 容器1, 空白型, , , 
.局部变量 字段, 字段信息, , , 
.局部变量 原字段名, 文本型, , , 
.局部变量 原项目值, 空白型, , , 

赋值 (容器1, .)
.如果真 (或者 (等于 (容器1, -1), 大于或等于 (容器1, 相减 (取项目数 (), 1))))
    返回 ()
.如果真结束
赋值 (原字段名, 容器1.取项目文本 ())
赋值 (原项目值, 容器1.取项目数值 ())
容器1.删除项目 ()
赋值 (容器1, 相加 (容器1, 1))
容器1.插入项目 (原字段名, 原项目值)
赋值 (., 容器1)
赋值 (字段, 字段表 [容器1])
删除成员 (字段表, 容器1, )
插入成员 (字段表, 相加 (容器1, 1), 字段)
填充字段数据 ()
设置是否需要保存 ()
获取焦点 ()

.子程序 显示字段数, 空白型, , 
赋值 (., 到文本 (取数组成员数 (字段表)))

.子程序 _字段列表框_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.判断开始 (等于 (键代码, #Del键))
    _删除按钮_被单击 ()
.判断 (等于 (键代码, #Ins键))
    _插入按钮_被单击 ()
.判断 (并且 (等于 (键代码, #上光标键), 等于 (功能键状态, #Ctrl键状态)))
    _上移按钮_被单击 ()
.判断 (并且 (等于 (键代码, #下光标键), 等于 (功能键状态, #Ctrl键状态)))
    _下移按钮_被单击 ()
.默认
    返回 (真)
.判断结束
获取焦点 ()
返回 (假)

.子程序 设置窗口标题, 空白型, , 
.如果 (等于 (数据库文件名, “”))
    赋值 (., “数据库结构管理器 （新数据库）”)
.否则
    赋值 (., 相加 (“数据库结构管理器 - ”, 数据库文件名))
.如果结束


.子程序 _打开按钮_被单击, 空白型, , 
.局部变量 容器1, 空白型, , , 
.局部变量 字段, 字段信息, , , 

赋值 (., 0)
赋值 (., “请输入欲打开的数据库文件名：”)
赋值 (., 取文本注册表项 (#数据库管理器, #用户习惯, “上次打开数据库”, ))
.如果真 (等于 (打开 (), 假))
    返回 ()
.如果真结束
写注册表项 (#数据库管理器, #用户习惯, “上次打开数据库”, .)
.如果真 (等于 (询问保存 (), 假))
    返回 ()
.如果真结束
.如果真 (等于 (打开 (., , 真, #禁止读写, , “?”, ), 假))
    信息框 (相加 (“打开数据库文件”, #左引号, ., #右引号, “失败！”), #错误图标, “错误”)
    返回 ()
.如果真结束
清除数组 (字段表)
清空 ()
赋值 (数据库文件名, .)
.计次循环首 (取字段数 (), 容器1)
    赋值 (字段., 取字段名 (容器1))
    赋值 (字段., 取字段类型 (容器1))
    赋值 (字段., 选择 (等于 (字段., #文本型), 取字段尺寸 (容器1), 0))
    加入成员 (字段表, 字段)
    字段.加入项目 (., 容器1)
.计次循环尾 ()
赋值 (是否需要转存数据, 大于 (取记录数 (), 0))
关闭 ()
复制数组 (备份字段表, 字段表)
赋值 (., 0)
填充字段数据 ()
设置窗口标题 ()
显示字段数 ()
获取焦点 ()

.子程序 保存, 逻辑型, , 返回真继续，返回假取消。
.局部变量 容器1, 空白型, , , 
.局部变量 文件名, 文本型, , , 

.计次循环首 (取数组成员数 (字段表), 容器1)
    .如果真 (等于 (字段表 [容器1], , “”))
        信息框 (“字段名称不能为空”, #错误图标, “错误”)
        赋值 (., 相减 (容器1, 1))
        填充字段数据 ()
        获取焦点 ()
        返回 (假)
    .如果真结束
    
.计次循环尾 ()
.如果真 (或者 (等于 (数据库文件名, “”), 等于 (是否需要转存数据, 假))) ' 是否为新建数据库或空数据库
    .如果 (等于 (数据库文件名, “”))
        赋值 (., 1)
        赋值 (., “请输入欲创建的数据库文件名：”)
        赋值 (., “”)
        .如果真 (等于 (打开 (), 假))
            返回 (假)
        .如果真结束
        写注册表项 (#数据库管理器, #用户习惯, “上次打开数据库”, .)
        赋值 (文件名, .)
    .否则
        赋值 (文件名, 数据库文件名)
    .如果结束
    .如果真 (等于 (创建 (文件名, 字段表), 假))
        信息框 (取错误信息 (), #错误图标, “错误”)
        返回 (假)
    .如果真结束
    赋值 (数据库文件名, 文件名)
    设置窗口标题 ()
    设置是否需要保存 (假)
    返回 (真)
.如果真结束
置等待鼠标 ()
.如果 (等于 (转存记录数据 (), 真))
    设置是否需要保存 (假)
    恢复鼠标 ()
    返回 (真)
.否则
    恢复鼠标 ()
    返回 (假)
.如果结束


.子程序 改文件后缀, 文本型, , 
.参数 文件名, 文本型, , 
.参数 新后缀, 文本型, , 

.局部变量 容器1, 空白型, , , 

赋值 (容器1, 倒找文本 (文件名, “.”, , 真))
.如果 (等于 (容器1, -1))
    返回 (相加 (文件名, “.”, 新后缀))
.否则
    返回 (相加 (取文本左边 (文件名, 容器1), 新后缀))
.如果结束


.子程序 转存记录数据, 逻辑型, , 成功返回真，失败返回假。
.局部变量 临时文件名, 文本型, , , 
.局部变量 容器1, 空白型, , , 
.局部变量 容器2, 空白型, , , 
.局部变量 原类型, 空白型, , , 
.局部变量 现类型, 空白型, , , 
.局部变量 字段数, 空白型, , , 
.局部变量 字段, 字段信息, , , 
.局部变量 使用原字段名, 逻辑型, , , 
.局部变量 需重命名字段, 整数型, , "0", 
.局部变量 临时字段表, 字段信息, , "0", 
.局部变量 改名失败, 逻辑型, , , 
.局部变量 信息, 文本型, , , 
.局部变量 是否有辅助数据文件, 逻辑型, , , 是否有.edt文件
.局部变量 源辅助数据文件, 文本型, , , 
.局部变量 目的辅助数据文件, 文本型, , , 

.判断循环首 (真)
    赋值 (字段数, 取数组成员数 (备份字段表))
    .计次循环首 (字段数, 容器1)
        .如果真 (等于 (备份字段表 [容器1], , 0))
            赋值 (信息, 相加 (信息, “原字段”, #左引号, 备份字段表 [容器1], , #右引号, “被删除，数据库中此列数据将被去除。”, #换行符))
        .如果真结束
        
    .计次循环尾 ()
    赋值 (字段数, 取项目数 ())
    .计次循环首 (字段数, 容器1)
        赋值 (容器2, 相减 (容器1, 1).取项目数值 ())
        .如果 (不等于 (容器2, 0)) ' 是否为新增字段
            赋值 (原类型, 备份字段表 [容器2], )
            赋值 (现类型, 字段表 [容器1], )
            赋值 (使用原字段名, 真)
            .如果真 (不等于 (原类型, 现类型))
                .判断开始 (或者 (大于 (原类型, 6), 大于 (现类型, 6))) ' 是否不为数值型字段
                    赋值 (信息, 相加 (信息, “原字段”, #左引号, 备份字段表 [容器2], , #右引号, “的类型被更改，数据库中此列数据将被重新初始化。”, #换行符))
                    赋值 (使用原字段名, 假) ' 此时没有必须使用原字段名。
                .判断 (大于 (原类型, 现类型))
                    赋值 (信息, 相加 (信息, “原字段”, #左引号, 备份字段表 [容器2], , #右引号, “的数值精度被降低，数据库中此列数据将受到影响。”, #换行符))
                .默认
                    
                .判断结束
                
            .如果真结束
            .如果 (并且 (等于 (使用原字段名, 真), 不等于 (备份字段表 [容器2], , 字段表 [容器1], )))
                赋值 (字段., 备份字段表 [容器2], ) ' 暂时使用原来的名称，以便于附加数据。
                赋值 (字段., 现类型)
                赋值 (字段., 字段表 [容器1], )
                加入成员 (临时字段表, 字段)
                加入成员 (需重命名字段, 容器1) ' 记录下来以便以后重命名。
            .否则
                加入成员 (临时字段表, 字段表 [容器1])
            .如果结束
            
        .否则
            加入成员 (临时字段表, 字段表 [容器1])
        .如果结束
        .如果真 (大于或等于 (字段表 [容器1], , 11)) ' 是否存在备注和字节集型字段
            赋值 (是否有辅助数据文件, 真)
        .如果真结束
        
    .计次循环尾 ()
    .如果真 (不等于 (信息, “”))
        赋值 (容器2, 信息框 (信息, 相加 (#是否钮, #询问图标, #默认按钮二), “您确定继续吗？”))
        .如果真 (不等于 (容器2, #是钮))
            返回 (假)
        .如果真结束
        
    .如果真结束
    赋值 (临时文件名, 取临时文件名 ())
    .如果真 (或者 (等于 (打开 (数据库文件名, #原数据库, , #禁止读写, , “?”, ), 假), 等于 (创建 (临时文件名, 临时字段表), 假), 等于 (打开 (临时文件名, , , #禁止读写, , , ), 假), 等于 (复制密码 (#原数据库), 假), 等于 (添加 (#原数据库, , ), 假)))
        跳出循环 ()
    .如果真结束
    .计次循环首 (取数组成员数 (需重命名字段), 容器1)
        .如果真 (等于 (改字段名 (需重命名字段 [容器1], 字段表 [需重命名字段] [容器1], ), 假)) ' 改回到新名称
            赋值 (改名失败, 真)
            跳出循环 ()
        .如果真结束
        
    .计次循环尾 ()
    .如果真 (等于 (改名失败, 真))
        跳出循环 ()
    .如果真结束
    全部关闭 ()
    .如果真 (等于 (是否有辅助数据文件, 真))
        赋值 (目的辅助数据文件, 改文件后缀 (数据库文件名, “edt”))
        赋值 (源辅助数据文件, 改文件后缀 (临时文件名, “edt”))
        .如果真 (等于 (文件是否存在 (源辅助数据文件), 假))
            跳出循环 ()
        .如果真结束
        删除文件 (目的辅助数据文件)
        文件更名 (源辅助数据文件, 目的辅助数据文件)
    .如果真结束
    删除文件 (数据库文件名)
    文件更名 (临时文件名, 数据库文件名)
    返回 (真)
.判断循环尾 ()
赋值 (信息, 取错误信息 ())
.如果真 (等于 (信息, “”))
    赋值 (信息, “转存记录出错”)
.如果真结束
信息框 (信息, #错误图标, “错误”)
全部关闭 ()
返回 (假)

.子程序 _新建索引按钮_被单击, 空白型, , 
.如果真 (并且 (等于 (需要保存, 真), 或者 (等于 (信息框 (“在建立索引之前必须保存当前结构，请问是否保存？”, 相加 (#是否钮, #询问图标), “询问”), #否钮), 等于 (保存 (), 假))))
    返回 ()
.如果真结束
.如果真 (或者 (等于 (数据库文件名, “”), 等于 (文件是否存在 (数据库文件名), 假)))
    信息框 (“不存在数据库文件”, #错误图标, “错误”)
    返回 ()
.如果真结束
载入 (索引创建窗口, , 真)

.子程序 _保存按钮1_被单击, 空白型, , 
 ' 密码输入窗口. ＝ 数据库文件名
载入 (密码输入窗口, , 真)


.窗口程序集 索引创建, , , 

.子程序 _索引创建窗口_创建完毕, 空白型, , 
.局部变量 容器1, 空白型, , , 
.局部变量 上次索引类型, 空白型, , , 
.局部变量 上次索引选项, 空白型, , , 

.计次循环首 (取数组成员数 (结构管理窗口.), 容器1)
    .如果真 (小于 (结构管理窗口. [容器1], , 11))
        结构管理窗口.加入项目 (. [容器1], , 容器1)
    .如果真结束
    
.计次循环尾 ()
赋值 (., 0)
赋值 (上次索引类型, 取数值注册表项 (#数据库管理器, #用户习惯, “上次索引类型”, 1))
赋值 (上次索引选项, 取数值注册表项 (#数据库管理器, #用户习惯, “上次索引选项”, 0))
.判断开始 (等于 (上次索引类型, #读音索引))
    赋值 (., 真)
.判断 (等于 (上次索引类型, #南方读音索引))
    赋值 (., 真)
.默认
    赋值 (., 真)
.判断结束
.如果真 (不等于 (位与 (上次索引选项, #不区分大小写), 0))
    赋值 (., 真)
.如果真结束
.如果真 (不等于 (位与 (上次索引选项, #忽略所有空格), 0))
    赋值 (., 真)
.如果真结束


.子程序 _创建按钮_被单击, 空白型, , 
.局部变量 容器1, 空白型, , , 
.局部变量 索引类型, 空白型, , , 
.局部变量 索引选项, 空白型, , , 
.局部变量 索引字段名, 文本型, , "0", 

.判断开始 (等于 (., 真))
    赋值 (索引类型, #读音索引)
.判断 (等于 (., 真))
    赋值 (索引类型, #南方读音索引)
.默认
    赋值 (索引类型, #通常索引)
.判断结束
.如果真 (等于 (., 真))
    赋值 (索引选项, #不区分大小写)
.如果真结束
.如果真 (等于 (., 真))
    赋值 (索引选项, 相加 (索引选项, #忽略所有空格))
.如果真结束
写注册表项 (#数据库管理器, #用户习惯, “上次索引类型”, 索引类型)
写注册表项 (#数据库管理器, #用户习惯, “上次索引选项”, 索引选项)
.计次循环首 (取项目数 (), 容器1)
    .如果真 (等于 (相减 (容器1, 1).是否被选中 (), 真))
        加入成员 (索引字段名, 相减 (容器1, 1).取项目文本 ())
    .如果真结束
    
.计次循环尾 ()
.如果真 (等于 (取数组成员数 (索引字段名), 0))
    信息框 (“未指定索引字段”, #错误图标, “错误”)
    返回 ()
.如果真结束
赋值 (., 取文本注册表项 (#数据库管理器, #用户习惯, “上次创建索引文件”, ))
.如果真 (等于 (打开 (), 真))
    写注册表项 (#数据库管理器, #用户习惯, “上次创建索引文件”, .)
    .如果 (或者 (等于 (打开 (结构管理窗口., , , #禁止读写, , “?”, ), 假), 等于 (新建索引 (., 索引类型, 索引选项, , 索引字段名), 假)))
        信息框 (取错误信息 (), #错误图标, “错误”)
        关闭 ()
    .否则
        关闭 ()
        信息框 (相加 (“创建索引文件”, #左引号, ., #右引号, “成功”), #信息图标, )
        销毁 ()
    .如果结束
    
.如果真结束


.子程序 _关闭按钮_被单击, 空白型, , 
销毁 ()

.窗口程序集 记录管理器, , , 

.子程序 记录管理器, 空白型, , 
载入 (记录管理窗口, , 假)
赋值 (., 取文本注册表项 (#数据库管理器, #用户习惯, “上次打开数据库”, ))
.如果真 (等于 (打开 (), 真))
    写注册表项 (#数据库管理器, #用户习惯, “上次打开数据库”, .)
    .如果 (打开 (., , , , , , )) ' 注意：此时没有同步打开此数据库的相应索引文件，因此如果欲编辑的数据库具有索引文件，需要在此处手工加入到“索引文件表”参数中。
        编辑 ()
        关闭 ()
    .否则
        信息框 (相加 (“打开数据库文件”, #左引号, ., #右引号, “失败！”), #错误图标, “错误”)
    .如果结束
    
.如果真结束
销毁 ()

.子程序 _记录管理窗口_创建完毕, 空白型, , 


.窗口程序集 窗口程序集_易库代码自动生成, , , 

.子程序 _按钮_重新生成_被单击, 空白型, , 
.局部变量 字段表, 字段信息, , "0", 
.局部变量 字段, 字段信息, , , 
.局部变量 类型, 文本型, , , 
.局部变量 计数, 整数型, , , 
.局部变量 数据库路径文件名, 文本型, , , 

关闭 ()
赋值 (., “”)
赋值 (., “”)
赋值 (., “”)
赋值 (., “”)

 ' 自动生成易代码前了解数据库的结构!=====================================
.如果真 (等于 (打开 (., , 真, #禁止读写, , “?”, ), 假))
    信息框 (相加 (“打开数据库文件”, #左引号, ., #右引号, “失败！”), #错误图标, “错误”)
    返回 ()
.如果真结束
清除数组 (字段表)
.计次循环首 (取字段数 (), 计数)
    赋值 (字段., 取字段名 (计数))
    赋值 (字段., 取字段类型 (计数))
    赋值 (字段., 选择 (等于 (字段., #文本型), 取字段尺寸 (计数), 0))
    加入成员 (字段表, 字段)
.计次循环尾 ()
赋值 (计数, 1)



 ' 新建易库 自动生成代码!□□□□□□□□□□□□□□□□□□□□□□□□
相加 (“.版本 2”, #换行符, #换行符).加入文本 ()
相加 (“.子程序 新建易库”, #换行符).加入文本 ()
相加 (“.局部变量 字段, 字段信息, , ”, #引号, 到文本 (取字段数 ()), #引号, #换行符).加入文本 ()
#换行符.加入文本 ()
.如果 (.)
    赋值 (数据库路径文件名, 相加 (#左引号, ., #右引号))
.否则
    赋值 (数据库路径文件名, 相加 (“取运行目录 () ＋”, #左引号, “\”, 取单独文件名 (., 真), #右引号))
.如果结束

相加 (“.如果真 (文件是否存在 (”, 数据库路径文件名, “) ＝ 假)”, #换行符).加入文本 ()

.计次循环首 (取字段数 (), 计数)
    相加 (“  字段 [”, 到文本 (计数), “].名称 ＝ #”, 取字段名 (计数), #换行符).加入文本 ()
    .如果真 (等于 (取字段类型 (计数), 1))
        赋值 (类型, “字节型”)
    .如果真结束
    .如果真 (等于 (取字段类型 (计数), 2))
        赋值 (类型, “短整数型”)
    .如果真结束
    .如果真 (等于 (取字段类型 (计数), 3))
        赋值 (类型, “整数型”)
    .如果真结束
    .如果真 (等于 (取字段类型 (计数), 4))
        赋值 (类型, “长整数型”)
    .如果真结束
    .如果真 (等于 (取字段类型 (计数), 5))
        赋值 (类型, “小数型”)
    .如果真结束
    .如果真 (等于 (取字段类型 (计数), 6))
        赋值 (类型, “双精度小数型”)
    .如果真结束
    .如果真 (等于 (取字段类型 (计数), 7))
        赋值 (类型, “逻辑型”)
    .如果真结束
    .如果真 (等于 (取字段类型 (计数), 8))
        赋值 (类型, “日期时间型”)
    .如果真结束
    .如果真 (等于 (取字段类型 (计数), 10))
        赋值 (类型, “文本型”)
    .如果真结束
    .如果真 (等于 (取字段类型 (计数), 11))
        赋值 (类型, “字节集型”)
    .如果真结束
    .如果真 (等于 (取字段类型 (计数), 12))
        赋值 (类型, “备注型”)
    .如果真结束
    
    相加 (“  字段 [”, 到文本 (计数), “].类型 ＝ #”, 类型, #换行符).加入文本 ()
    .如果真 (等于 (类型, “文本型”))
        相加 (“  字段 [”, 到文本 (计数), “].最大文本长度 ＝ ”, 到文本 (取字段尺寸 (计数)), #换行符).加入文本 ()
    .如果真结束
    
.计次循环尾 ()

相加 (“  .如果真 (创建 (”, 数据库路径文件名, “, 字段) ＝ 假)”, #换行符).加入文本 ()
相加 (“    信息框 (”, #左引号, “创建数据库失败！”, #右引号, “, #错误图标, ”, #右引号, “错误”, #右引号, “ )”, #换行符).加入文本 ()
相加 (“    结束 ()”, #换行符).加入文本 ()
相加 (“    .如果真结束”, #换行符).加入文本 ()
相加 (“.如果真结束”, #换行符, #换行符).加入文本 ()

.如果真 (.)
    相加 (“.如果真 (打开 (”, 数据库路径文件名, “, , , , ,”, #左引号, “?”, #右引号, “ , ) ＝ 假)”, #换行符).加入文本 ()
    相加 (“  信息框 (”, #左引号, “无法打开数据库！”, #右引号, “, #错误图标, ”, #右引号, “错误”, #右引号, “ )”, #换行符).加入文本 ()
    相加 (“  返回 ()”, #换行符).加入文本 ()
    相加 (“.如果真结束”, #换行符).加入文本 ()
    #换行符.加入文本 ()
.如果真结束

到首记录 ()

 ' 打开易库　代码自动生成 □□□□□□□□□□□□□□□□□□□□□□□□
.如果 (.)
    赋值 (数据库路径文件名, 相加 (#左引号, ., #右引号))
.否则
    赋值 (数据库路径文件名, 相加 (“取运行目录 () ＋”, #左引号, “\”, 取单独文件名 (., 真), #右引号))
.如果结束

赋值 (., 相加 (“.版本 2”, #换行符, #换行符))
相加 (“.子程序 打开易库”, #换行符).加入文本 ()
相加 (“.如果真 (打开 (”, 数据库路径文件名, “, , , , ,”, #左引号, 选择 (不等于 (删全部空 (.), “”), ., “?”), #右引号, “ , ) ＝ 假)”, #换行符).加入文本 ()
相加 (“  信息框 (”, #左引号, “无法打开数据库！”, #右引号, “ , #错误图标, ”, #右引号, “错误”, #右引号, “ )”, #换行符).加入文本 ()
相加 (“  返回 ()”, #换行符).加入文本 ()
相加 (“.如果真结束”, #换行符).加入文本 ()
#换行符.加入文本 ()

 ' 关闭易库　代码自动生成！□□□□□□□□□□□□□□□□□□□□□□□□
.如果 (.)
    赋值 (数据库路径文件名, 相加 (#左引号, ., #右引号))
.否则
    赋值 (数据库路径文件名, 相加 (“取运行目录 () ＋”, #左引号, “\”, 取单独文件名 (., 真), #右引号))
.如果结束

赋值 (., 相加 (“.版本 2”, #换行符, #换行符))
相加 (“.子程序 关闭易库”, #换行符).加入文本 ()
.如果 (.)
    相加 (“关闭 ()”, #换行符).加入文本 ()
.否则
    相加 (“关闭 (”, 数据库路径文件名, “)”, #换行符).加入文本 ()
.如果结束


 ' 显示记录 自动生成易代码 □□□□□□□□□□□□□□□□□□□□□□□□
赋值 (., 相加 (“.版本 2”, #换行符, #换行符))
相加 (“.子程序 显示记录”, #换行符).加入文本 ()
 ' 编辑框1。内容 = 到文本（读（#取字段名（计数）））
.计次循环首 (取字段数 (), 计数)
     ' 编辑框_显示记录.内容 ＝ 到文本 (读 (取字段名 (计数)))
    .如果 (等于 (., 真))
        “编辑框”.加入文本 ()
        .如果真 (等于 (., 真))
            “_”.加入文本 ()
        .如果真结束
        取字段名 (计数).加入文本 ()
        
    .否则
        取字段名 (计数).加入文本 ()
        .如果真 (等于 (., 真))
            “_”.加入文本 ()
        .如果真结束
        “编辑框”.加入文本 ()
    .如果结束
    “.内容 ＝ ”.加入文本 ()
    
    选择 (等于 (取字段类型 (计数), 10), “”, “到文本 (”).加入文本 () ' 前一个有括号，是转换类型，后一个无括号，就是编辑框。
    相加 (“读 (#”, 取字段名 (计数), “)”).加入文本 ()
    选择 (等于 (取字段类型 (计数), 10), “”, “)”).加入文本 () ' 前一个有括号，是转换类型，后一个无括号，就是编辑框。
    
    #换行符.加入文本 ()
.计次循环尾 ()
相加 (#换行符, #换行符).加入文本 ()



 ' 添加记录 自动生成易代码 □□□□□□□□□□□□□□□□□□□□□□□□
相加 (“.版本 2”, #换行符, #换行符).加入文本 ()
相加 (“.子程序 添加记录”, #换行符).加入文本 ()
.如果 (等于 (., 真)) ' 是组件名在前,数据库字段在后
    .如果 (等于 (., 真)) ' 中间有下划线
        相加 (“ ' 前提是――您已在一个窗口中将数据库所有的字段对应放置了一组编辑框，并且编辑框的命名为”, #左引号, “编辑框_字段名”, #右引号, #换行符).加入文本 ()
    .否则
        相加 (“ ' 前提是――您已在一个窗口中将数据库所有的字段对应放置了一组编辑框，并且编辑框的命名为”, #左引号, “编辑框+字段名”, #右引号, #换行符).加入文本 ()
    .如果结束
    
.否则
    .如果 (等于 (., 真)) ' 中间有下划线
        相加 (“ ' 前提是――您已在一个窗口中将数据库所有的字段对应放置了一组编辑框，并且编辑框的命名为”, #左引号, “字段名_编辑框”, #右引号, #换行符).加入文本 ()
    .否则
        相加 (“ ' 前提是――您已在一个窗口中将数据库所有的字段对应放置了一组编辑框，并且编辑框的命名为”, #左引号, “字段名+编辑框”, #右引号, #换行符).加入文本 ()
    .如果结束
    
.如果结束

“.如果真 (加记录 (”.加入文本 ()
.计次循环首 (取字段数 (), 计数)
    .如果真 (等于 (取字段类型 (计数), 1))
        赋值 (类型, “字节型”)
        “到字节(”.加入文本 ()
    .如果真结束
    .如果真 (等于 (取字段类型 (计数), 2))
        赋值 (类型, “短整数型”)
        “到数值(”.加入文本 ()
    .如果真结束
    .如果真 (等于 (取字段类型 (计数), 3))
        赋值 (类型, “整数型”)
        “到数值(”.加入文本 ()
    .如果真结束
    .如果真 (等于 (取字段类型 (计数), 4))
        赋值 (类型, “长整数型”)
        “到数值(”.加入文本 ()
    .如果真结束
    .如果真 (等于 (取字段类型 (计数), 5))
        赋值 (类型, “小数型”)
        “到数值(”.加入文本 ()
    .如果真结束
    .如果真 (等于 (取字段类型 (计数), 6))
        赋值 (类型, “双精度小数型”)
        “到数值(”.加入文本 ()
    .如果真结束
    .如果真 (等于 (取字段类型 (计数), 7))
        赋值 (类型, “逻辑型”)
        “到文本(”.加入文本 ()
    .如果真结束
    .如果真 (等于 (取字段类型 (计数), 8))
        赋值 (类型, “日期时间型”)
        “到日期(”.加入文本 ()
    .如果真结束
    .如果真 (等于 (取字段类型 (计数), 11))
        赋值 (类型, “字节集型”)
        “到字节集(”.加入文本 ()
    .如果真结束
    .如果真 (等于 (取字段类型 (计数), 12))
        赋值 (类型, “备注型”)
        “到备注(”.加入文本 ()
    .如果真结束
    
    .如果 (等于 (., 真))
        “编辑框”.加入文本 ()
        .如果真 (等于 (., 真))
            “_”.加入文本 ()
        .如果真结束
        赋值 (., 选择 (等于 (取字段类型 (计数), 10), “.内容) ”, “.内容 ”)) ' 前一个有括号，是转换类型，后一个无括号，就是编辑框。
        取字段名 (计数).加入文本 ()
    .否则
        取字段名 (计数).加入文本 ()
        赋值 (., 选择 (等于 (取字段类型 (计数), 10), “.内容) ”, “.内容 ”)) ' 前一个有括号，是转换类型，后一个无括号，就是编辑框。
        .如果真 (等于 (., 真))
            “_”.加入文本 ()
        .如果真结束
        “编辑框”.加入文本 ()
    .如果结束
    选择 (等于 (取字段类型 (计数), 10), “.内容”, “.内容)”).加入文本 () ' 前一个有括号，是转换类型，后一个无括号，就是编辑框。
    .如果真 (不等于 (计数, 取字段数 ()))
        “, ”.加入文本 ()
    .如果真结束
    
.计次循环尾 ()

相加 (“) = 假）”, #换行符, “  信息框(”, #左引号, “添加数据库记录失败！”, #右引号, “, #错误图标, ”, #右引号, “错误”, #右引号, “ )”, #换行符).加入文本 ()
相加 (“.如果真结束”, #换行符).加入文本 ()
相加 (#换行符, #换行符).加入文本 ()



 ' 修改记录 自动生成代码 □□□□□□□□□□□□□□□□□□□□□□□□
 ' 只是简单的换了一下文字而已
赋值 (., 子文本替换 (., “添加记录”, “修改记录”, , , 真))
赋值 (., 子文本替换 (., “加记录”, “修改”, , , 真))
赋值 (., 子文本替换 (., “添加”, “修改”, , , 真))



 ' 删除记录,自动生成代码 □□□□□□□□□□□□□□□□□□□□□□□□
相加 (“.版本 2”, #换行符, #换行符).加入文本 ()
相加 (“.子程序 删除记录”, #换行符).加入文本 ()
相加 (“.如果真 (首记录前 () ＝ 假 且 尾记录后 () ＝ 假 且 信息框 (”, #左引号, “你真的要删除当前的资料吗？”, #右引号, “, #询问图标 ＋ #是否钮 ＋ #默认按钮二, ) ＝ #是钮)”, #换行符).加入文本 ()
相加 (“   删除 ()   ”, #换行符, “   彻底删除 ()   ”, #换行符, “   到首记录 ()    ”, #换行符).加入文本 ()
相加 (“.如果真结束”, #换行符, #换行符).加入文本 ()


赋值 (., 相加 (“.版本 2”, #换行符, #换行符))
相加 (“.常量 ”, 取文件名 (.), “, ”, #引号, #左引号, 取文件名 (.), #右引号, #引号, #换行符).加入文本 () ' .常量 数据库1, "“表单库”"
赋值 (计数, 1)
.计次循环首 (取字段数 (), 计数)
    相加 (“.常量 ”, 取字段名 (计数), “, ”, #引号, #左引号, 取字段名 (计数), #右引号, #引号, #换行符).加入文本 () ' .常量 表单号, "“表单号”"
.计次循环尾 ()
赋值 (计数, 1)

关闭 ()


.子程序 取单独文件名, 文本型, 公开, 可取含扩展名的与不含扩展名的
.参数 文件名, 文本型, , 
.参数 是否要后缀, 逻辑型, 参考, 如果为空,为带有后缀.

.局部变量 不含扩展名文件名, 文本型, , , 

.如果 (等于 (是否要后缀, 真))
    赋值 (不含扩展名文件名, 取文本中间 (文件名, 相加 (倒找文本 (文件名, “\”, , 假), 1), 相减 (取文本长度 (文件名), 倒找文本 (文件名, “\”, , 假))))
    返回 (不含扩展名文件名)
.否则
    赋值 (不含扩展名文件名, 取文本左边 (取文本中间 (文件名, 相加 (倒找文本 (文件名, “\”, , 假), 1), 相减 (取文本长度 (文件名), 倒找文本 (文件名, “\”, , 假))), 相减 (倒找文本 (取文本中间 (文件名, 相加 (倒找文本 (文件名, “\”, , 假), 1), 相减 (取文本长度 (文件名), 倒找文本 (文件名, “\”, , 假))), “.”, , 真), 1)))
    返回 (不含扩展名文件名)
.如果结束


.子程序 取文件名, 文本型, , 取文件名(路径文件名)
.参数 路径文件名, 文本型, , 写入文件完整地址，取得文件名

.局部变量 新文件名, 文本型, , , 

赋值 (新文件名, 取文本中间 (路径文件名, 相加 (倒找文本 (路径文件名, “\”, , 假), 1), 相减 (倒找文本 (路径文件名, “.”, , 假), 倒找文本 (路径文件名, “\”, , 假), 1)))
返回 (新文件名)

.子程序 _按钮_一键生成_被单击, 空白型, , 
赋值 (., 取当前目录 ())
赋值 (., 取文本注册表项 (#数据库管理器, #用户习惯, “上次打开数据库”, ))
.如果真 (等于 (打开 (), 真))
    写注册表项 (#数据库管理器, #用户习惯, “上次打开数据库”, .)
    打开 (., , , , , “?”, )
    赋值 (., .)
.如果真结束
_按钮_重新生成_被单击 ()


.子程序 _编辑框_全部路径_内容被改变, 空白型, , 
赋值 (., 假)

.子程序 __启动窗口_创建完毕, 空白型, , 
全部关闭 ()

.子程序 _按钮_加入常量_被单击, 空白型, , 
_按钮_重新生成_被单击 ()

.子程序 _按钮_到首记录_被单击, 空白型, , 到首记录 ()
赋值 (., 相加 (“.版本 2”, #换行符, #换行符))
相加 (“到首记录 ()”, #换行符, #换行符).加入文本 ()

.子程序 _按钮_上一记录_被单击, 空白型, , 
赋值 (., 相加 (“.版本 2”, #换行符, #换行符))
相加 (“.如果 (取记录号 () ＝ 1)”, #换行符).加入文本 ()
相加 (“    跳到 (1)”, #换行符).加入文本 ()
相加 (“.否则”, #换行符).加入文本 ()
相加 (“    跳过 (-1)”, #换行符).加入文本 ()
相加 (“.如果结束”, #换行符).加入文本 ()
相加 (#换行符, #换行符).加入文本 ()



.子程序 _按钮_下一记录_被单击, 空白型, , 
赋值 (., 相加 (“.版本 2”, #换行符, #换行符))
相加 (“.如果 (取记录号 () ＝ 取记录数 ())”, #换行符).加入文本 ()
相加 (“    跳到 (取记录数 ())”, #换行符).加入文本 ()
相加 (“.否则”, #换行符).加入文本 ()
相加 (“    跳过 (1)”, #换行符).加入文本 ()
相加 (“.如果结束”, #换行符).加入文本 ()
相加 (#换行符, #换行符).加入文本 ()



.子程序 _按钮_到尾记录_被单击, 空白型, , 到尾记录 ()
赋值 (., 相加 (“.版本 2”, #换行符, #换行符))
相加 (“到尾记录 ()”, #换行符, #换行符).加入文本 ()




 ' 不属于任何一个程序集、类模块的函数：
