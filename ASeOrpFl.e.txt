 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 225
    高度 = 59
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 真
    外形 = 0
    总在最前 = 真
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “QQ对对碰外挂”
    帮助文件名 = “”





 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 5 系统核心支持库
 ' eLIBpp ECFB3D10541A422b8B73779AF00B4D0C 1 2 ｅＬＩＢ＋＋
 ' shellEx DA19AC3ADD2F4121AAD84AC5FBCAFC71 2 3 扩展功能支持库一
 ' spec A512548E76954B6E92C21055517615B0 2 1 特殊功能支持库




数据类型 矩形_, , RECT
    .成员 左边, 整数型, , , Left
    .成员 顶边, 整数型, , , Top
    .成员 右边, 整数型, , , Right
    .成员 底边, 整数型, , , Bottom


.DLL命令 寻找游戏窗口, 整数型, "user32.dll", "FindWindowA", , FindWindow,寻找窗口列表中第一个符合指定条件的顶级窗口
    .参数 窗口类名, 文本型, , lpClassName，参见相关帮助
    .参数 窗口文本, 文本型, , lpWindowName，参见相关帮助

.DLL命令 取游戏窗口矩形, 整数型, "user32", "GetWindowRect", , 
    .参数 窗口句柄, 整数型, , 
    .参数 矩形区域, 矩形_, , 

.DLL命令 取采样点色, 整数型, "gdi32.dll", "GetPixel", , 
    .参数 设备场景句柄, 整数型, , 
    .参数 x坐标, 整数型, , 
    .参数 y坐标, 整数型, , 

.DLL命令 取设备场景, 整数型, "user32", "GetDC", , 获取指定窗口的设备场景  指定窗口的设备场景句柄，出错则为0
    .参数 窗口的句柄, 整数型, , 将获取其设备场景的窗口的句柄。若为0，则要获取整个屏幕的DC;

.窗口程序集 窗口程序集1, , , 

.程序集变量 游戏窗口句柄, 整数型, , , 
.程序集变量 游戏场景句柄, 整数型, , , 
.程序集变量 横坐标值, 整数型, , , 
.程序集变量 纵坐标值, 整数型, , , 
.程序集变量 临时横坐标1, 整数型, , , 
.程序集变量 临时纵坐标1, 整数型, , , 
.程序集变量 临时横坐标2, 整数型, , , 
.程序集变量 临时纵坐标2, 整数型, , , 
.程序集变量 X, 整数型, , , 
.程序集变量 Y, 整数型, , , 
.程序集变量 跳出循环, 逻辑型, , , 
.程序集变量 游戏窗口矩形, 矩形_, , , 
.程序集变量 M, 整数型, , , 
.程序集变量 N, 整数型, , , 
.程序集变量 基点横坐标, 整数型, , , 
.程序集变量 基点纵坐标, 整数型, , , 
.程序集变量 手动, 整数型, , , 
.程序集变量 方式, 整数型, , , 
.程序集变量 自动, 整数型, , , 
.子程序 __启动窗口_创建完毕, 空白型, , 
 ' 块能被消除掉，共有4个方向：下，右，上，左，每个方向又细分为4种情形，共计16种情形。分别命名为：下下，下左，下右，下中，右右，右下，右上，右中，上上，上左，上右，上中，左左，左上，左下，左中。取点时要取三个点（其中2个点要通过基点坐标偏移后来取），其中要判断点是否越界。在游戏进行中如需使用道具应先用鼠标点一下游戏窗口，只一次即可
_启动窗口.移动 (600, 0, , )
赋值 (自动, 未知支持库函数_10 (_启动窗口.取窗口句柄 (), 取窗口句柄 (), 0, #F4键))
赋值 (手动, 未知支持库函数_10 (_启动窗口.取窗口句柄 (), 取窗口句柄 (), 0, #F5键))

.子程序 _时钟_周期事件, 空白型, , 
 ' 处理事件 ()
_手动消块_被单击 ()

.子程序 _标签2_反馈事件, 整数型, , 
.参数 参数一, 整数型, , 
.参数 参数二, 整数型, , 

.如果 (等于 (参数一, 手动))
    _手动消块_被单击 ()
.否则
    .如果 (等于 (参数一, 自动))
        .如果 (等于 (.选中, 假))
            赋值 (.选中, 真)
            赋值 (.禁止, 真)
            赋值 (.时钟周期, 100) ' 这个值可以通过取启动时间执行一次消块代码所耗时间来进行测试后定一个比较合适的值。
        .否则
            赋值 (.选中, 假)
            赋值 (.时钟周期, 0)
            赋值 (.禁止, 假)
        .如果结束
        
    .否则
        
    .如果结束
    
.如果结束


.子程序 _自动消块_被单击, 空白型, , 
.如果 (等于 (.选中, 真))
    赋值 (.禁止, 真)
    赋值 (.时钟周期, 100)
.否则
    赋值 (.时钟周期, 0)
    赋值 (.禁止, 假)
.如果结束


.子程序 _手动消块_被单击, 空白型, , 
赋值 (游戏窗口句柄, 寻找游戏窗口 (“#32770”, “对对碰角色版”))
.如果真 (不等于 (游戏窗口句柄, 0))
    赋值 (游戏场景句柄, 取设备场景 (0))
    取游戏窗口矩形 (游戏窗口句柄, 游戏窗口矩形)
    赋值 (基点横坐标, 相加 (游戏窗口矩形.左边, 268, 22)) ' 22为小块内取点水平正向偏移,268为首列小块到窗口左边距离
     ' 方式 ＝ 1
    .判断开始 (等于 (取随机数 (1, 2), 1))
        赋值 (方式, 1) ' 方式1为从下往上判断
    .默认
        赋值 (方式, 2) ' 方式2为从上往下判断,也可以只用一种方式判断
    .判断结束
    .如果 (等于 (方式, 1))
        赋值 (基点纵坐标, 相减 (游戏窗口矩形.底边, 20, 122)) ' 从下往上判断,20为小块内取点垂直负向偏移,122为尾行小块到窗口底边距离
    .否则
        赋值 (基点纵坐标, 相加 (游戏窗口矩形.顶边, 94, 28)) ' 从上往下判断(28为小块内取点垂直正向偏移,94为首行小块到窗口顶部距离
    .如果结束
    赋值 (跳出循环, 假) ' 指定跳出条件的初始值
    .计次循环首 (8, M) ' 控制行数
        .计次循环首 (8, N) ' 控制列数
            赋值 (横坐标值, 相加 (基点横坐标, 相乘 (相减 (N, 1), 48))) ' 48为小块的边长
            .如果 (等于 (方式, 1))
                赋值 (纵坐标值, 相减 (基点纵坐标, 相乘 (相减 (M, 1), 48))) ' 从下往上判断，纵坐标按行数递减
            .否则
                赋值 (纵坐标值, 相加 (基点纵坐标, 相乘 (相减 (M, 1), 48))) ' 从上往下判断，纵坐标按行数递增
            .如果结束
            下下 ()
             ' 处理事件 ()
            .如果真 (等于 (跳出循环, 真))
                跳出循环 ()
            .如果真结束
            
        .计次循环尾 ()
         ' 处理事件 ()
        .如果真 (等于 (跳出循环, 真))
            跳出循环 ()
        .如果真结束
        
    .计次循环尾 ()
.如果真结束


.子程序 判断点是否越界, 逻辑型, , 
.如果 (或者 (小于 (临时横坐标1, 相加 (游戏窗口矩形.左边, 268)), 大于 (临时横坐标1, 相加 (游戏窗口矩形.左边, 268, 384)), 小于 (临时纵坐标1, 相加 (游戏窗口矩形.顶边, 94)), 大于 (临时纵坐标1, 相加 (游戏窗口矩形.顶边, 94, 384)), 小于 (临时横坐标2, 相加 (游戏窗口矩形.左边, 268)), 大于 (临时横坐标2, 相加 (游戏窗口矩形.左边, 268, 384)), 小于 (临时纵坐标2, 相加 (游戏窗口矩形.顶边, 94)), 大于 (临时纵坐标2, 相加 (游戏窗口矩形.顶边, 94, 384)))) ' 满足任一条件视为越界(块总边长为384)
    返回 (真) ' 点越界时判断下一种可能的情况
.否则
    返回 (假) ' 为真时执行取点代码进行判断
.如果结束


.子程序 判断色是否相同, 逻辑型, , 
.如果 (并且 (等于 (取采样点色 (游戏场景句柄, 横坐标值, 纵坐标值), 取采样点色 (游戏场景句柄, 临时横坐标1, 临时纵坐标1)), 等于 (取采样点色 (游戏场景句柄, 横坐标值, 纵坐标值), 取采样点色 (游戏场景句柄, 临时横坐标2, 临时纵坐标2))))
    返回 (真) ' 为真时投递鼠标消息消块
.否则
    返回 (假) ' 为假时判断下一种可能的情况
.如果结束


.子程序 投递鼠标点击消息, 空白型, , 
.局部变量 坐标位置, 整数型, , , 

赋值 (坐标位置, 相减 (相加 (相乘 (相减 (Y, 游戏窗口矩形.顶边), 65536), X), 游戏窗口矩形.左边)) ' X/Y为相对坐标，调试时就卡在这里了。
未知支持库函数_8 (游戏窗口句柄, 513, 0, 坐标位置) ' 按下鼠标左键0
延迟 (10)
未知支持库函数_8 (游戏窗口句柄, 514, 1, 坐标位置) ' 放开鼠标左键1

.子程序 下下, 空白型, , 下下
赋值 (临时横坐标1, 横坐标值)
赋值 (临时纵坐标1, 相加 (纵坐标值, 96))
赋值 (临时横坐标2, 横坐标值)
赋值 (临时纵坐标2, 相加 (纵坐标值, 144))
.如果 (并且 (等于 (判断点是否越界 (), 假), 等于 (判断色是否相同 (), 真)))
    赋值 (X, 横坐标值)
    赋值 (Y, 纵坐标值)
    投递鼠标点击消息 ()
    赋值 (X, 横坐标值)
    赋值 (Y, 相加 (纵坐标值, 48))
    投递鼠标点击消息 ()
    赋值 (跳出循环, 真)
.否则
    下左 ()
.如果结束


.子程序 下左, 空白型, , 下左
赋值 (临时横坐标1, 相减 (横坐标值, 48))
赋值 (临时纵坐标1, 相加 (纵坐标值, 48))
赋值 (临时横坐标2, 相减 (横坐标值, 96))
赋值 (临时纵坐标2, 相加 (纵坐标值, 48))
.如果 (并且 (等于 (判断点是否越界 (), 假), 等于 (判断色是否相同 (), 真)))
    赋值 (X, 横坐标值)
    赋值 (Y, 纵坐标值)
    投递鼠标点击消息 ()
    赋值 (X, 横坐标值)
    赋值 (Y, 相加 (纵坐标值, 48))
    投递鼠标点击消息 ()
    赋值 (跳出循环, 真)
.否则
    下右 ()
.如果结束


.子程序 下右, 空白型, , 下右
赋值 (临时横坐标1, 相加 (横坐标值, 48))
赋值 (临时纵坐标1, 相加 (纵坐标值, 48))
赋值 (临时横坐标2, 相加 (横坐标值, 96))
赋值 (临时纵坐标2, 相加 (纵坐标值, 48))
.如果 (并且 (等于 (判断点是否越界 (), 假), 等于 (判断色是否相同 (), 真)))
    赋值 (X, 横坐标值)
    赋值 (Y, 纵坐标值)
    投递鼠标点击消息 ()
    赋值 (X, 横坐标值)
    赋值 (Y, 相加 (纵坐标值, 48))
    投递鼠标点击消息 ()
    赋值 (跳出循环, 真)
.否则
    下中 ()
.如果结束


.子程序 下中, 空白型, , 下中
赋值 (临时横坐标1, 相减 (横坐标值, 48))
赋值 (临时纵坐标1, 相加 (纵坐标值, 48))
赋值 (临时横坐标2, 相加 (横坐标值, 48))
赋值 (临时纵坐标2, 相加 (纵坐标值, 48))
.如果 (并且 (等于 (判断点是否越界 (), 假), 等于 (判断色是否相同 (), 真)))
    赋值 (X, 横坐标值)
    赋值 (Y, 纵坐标值)
    投递鼠标点击消息 ()
    赋值 (X, 横坐标值)
    赋值 (Y, 相加 (纵坐标值, 48))
    投递鼠标点击消息 ()
    赋值 (跳出循环, 真)
.否则
    右右 ()
.如果结束


.子程序 右右, 空白型, , 右右
赋值 (临时横坐标1, 相加 (横坐标值, 96))
赋值 (临时纵坐标1, 纵坐标值)
赋值 (临时横坐标2, 相加 (横坐标值, 144))
赋值 (临时纵坐标2, 纵坐标值)
.如果 (并且 (等于 (判断点是否越界 (), 假), 等于 (判断色是否相同 (), 真)))
    赋值 (X, 横坐标值)
    赋值 (Y, 纵坐标值)
    投递鼠标点击消息 ()
    赋值 (X, 相加 (横坐标值, 48))
    赋值 (Y, 纵坐标值)
    投递鼠标点击消息 ()
    赋值 (跳出循环, 真)
.否则
    右下 ()
.如果结束


.子程序 右下, 空白型, , 右下
赋值 (临时横坐标1, 相加 (横坐标值, 48))
赋值 (临时纵坐标1, 相加 (纵坐标值, 48))
赋值 (临时横坐标2, 相加 (横坐标值, 48))
赋值 (临时纵坐标2, 相加 (纵坐标值, 96))
.如果 (并且 (等于 (判断点是否越界 (), 假), 等于 (判断色是否相同 (), 真)))
    赋值 (X, 横坐标值)
    赋值 (Y, 纵坐标值)
    投递鼠标点击消息 ()
    赋值 (X, 相加 (横坐标值, 48))
    赋值 (Y, 纵坐标值)
    投递鼠标点击消息 ()
    赋值 (跳出循环, 真)
.否则
    右上 ()
.如果结束


.子程序 右上, 空白型, , 右上
赋值 (临时横坐标1, 相加 (横坐标值, 48))
赋值 (临时纵坐标1, 相减 (纵坐标值, 48))
赋值 (临时横坐标2, 相加 (横坐标值, 48))
赋值 (临时纵坐标2, 相减 (纵坐标值, 96))
.如果 (并且 (等于 (判断点是否越界 (), 假), 等于 (判断色是否相同 (), 真)))
    赋值 (X, 横坐标值)
    赋值 (Y, 纵坐标值)
    投递鼠标点击消息 ()
    赋值 (X, 相加 (横坐标值, 48))
    赋值 (Y, 纵坐标值)
    投递鼠标点击消息 ()
    赋值 (跳出循环, 真)
.否则
    右中 ()
.如果结束


.子程序 右中, 空白型, , 右中
赋值 (临时横坐标1, 相加 (横坐标值, 48))
赋值 (临时纵坐标1, 相加 (纵坐标值, 48))
赋值 (临时横坐标2, 相加 (横坐标值, 48))
赋值 (临时纵坐标2, 相减 (纵坐标值, 48))
.如果 (并且 (等于 (判断点是否越界 (), 假), 等于 (判断色是否相同 (), 真)))
    赋值 (X, 横坐标值)
    赋值 (Y, 纵坐标值)
    投递鼠标点击消息 ()
    赋值 (X, 相加 (横坐标值, 48))
    赋值 (Y, 纵坐标值)
    投递鼠标点击消息 ()
    赋值 (跳出循环, 真)
.否则
    上上 ()
.如果结束


.子程序 上上, 空白型, , 上上
赋值 (临时横坐标1, 横坐标值)
赋值 (临时纵坐标1, 相减 (纵坐标值, 96))
赋值 (临时横坐标2, 横坐标值)
赋值 (临时纵坐标2, 相减 (纵坐标值, 144))
.如果 (并且 (等于 (判断点是否越界 (), 假), 等于 (判断色是否相同 (), 真)))
    赋值 (X, 横坐标值)
    赋值 (Y, 纵坐标值)
    投递鼠标点击消息 ()
    赋值 (X, 横坐标值)
    赋值 (Y, 相减 (纵坐标值, 48))
    投递鼠标点击消息 ()
    赋值 (跳出循环, 真)
.否则
    上左 ()
.如果结束


.子程序 上左, 空白型, , 上左
赋值 (临时横坐标1, 相减 (横坐标值, 48))
赋值 (临时纵坐标1, 相减 (纵坐标值, 48))
赋值 (临时横坐标2, 相减 (横坐标值, 96))
赋值 (临时纵坐标2, 相减 (纵坐标值, 48))
.如果 (并且 (等于 (判断点是否越界 (), 假), 等于 (判断色是否相同 (), 真)))
    赋值 (X, 横坐标值)
    赋值 (Y, 纵坐标值)
    投递鼠标点击消息 ()
    赋值 (X, 横坐标值)
    赋值 (Y, 相减 (纵坐标值, 48))
    投递鼠标点击消息 ()
    赋值 (跳出循环, 真)
.否则
    上右 ()
.如果结束


.子程序 上右, 空白型, , 上右
赋值 (临时横坐标1, 相加 (横坐标值, 48))
赋值 (临时纵坐标1, 相减 (纵坐标值, 48))
赋值 (临时横坐标2, 相加 (横坐标值, 96))
赋值 (临时纵坐标2, 相减 (纵坐标值, 48))
.如果 (并且 (等于 (判断点是否越界 (), 假), 等于 (判断色是否相同 (), 真)))
    赋值 (X, 横坐标值)
    赋值 (Y, 纵坐标值)
    投递鼠标点击消息 ()
    赋值 (X, 横坐标值)
    赋值 (Y, 相减 (纵坐标值, 48))
    投递鼠标点击消息 ()
    赋值 (跳出循环, 真)
.否则
    上中 ()
.如果结束


.子程序 上中, 空白型, , 上中
赋值 (临时横坐标1, 相减 (横坐标值, 48))
赋值 (临时纵坐标1, 相减 (纵坐标值, 48))
赋值 (临时横坐标2, 相加 (横坐标值, 48))
赋值 (临时纵坐标2, 相减 (纵坐标值, 48))
.如果 (并且 (等于 (判断点是否越界 (), 假), 等于 (判断色是否相同 (), 真)))
    赋值 (X, 横坐标值)
    赋值 (Y, 纵坐标值)
    投递鼠标点击消息 ()
    赋值 (X, 横坐标值)
    赋值 (Y, 相减 (纵坐标值, 48))
    投递鼠标点击消息 ()
    赋值 (跳出循环, 真)
.否则
    左左 ()
.如果结束


.子程序 左左, 空白型, , 左左
赋值 (临时横坐标1, 相减 (横坐标值, 96))
赋值 (临时纵坐标1, 纵坐标值)
赋值 (临时横坐标2, 相减 (横坐标值, 144))
赋值 (临时纵坐标2, 纵坐标值)
.如果 (并且 (等于 (判断点是否越界 (), 假), 等于 (判断色是否相同 (), 真)))
    赋值 (X, 横坐标值)
    赋值 (Y, 纵坐标值)
    投递鼠标点击消息 ()
    赋值 (X, 相减 (横坐标值, 48))
    赋值 (Y, 纵坐标值)
    投递鼠标点击消息 ()
    赋值 (跳出循环, 真)
.否则
    左上 ()
.如果结束


.子程序 左上, 空白型, , 左上
赋值 (临时横坐标1, 相减 (横坐标值, 48))
赋值 (临时纵坐标1, 相减 (纵坐标值, 48))
赋值 (临时横坐标2, 相减 (横坐标值, 48))
赋值 (临时纵坐标2, 相减 (纵坐标值, 96))
.如果 (并且 (等于 (判断点是否越界 (), 假), 等于 (判断色是否相同 (), 真)))
    赋值 (X, 横坐标值)
    赋值 (Y, 纵坐标值)
    投递鼠标点击消息 ()
    赋值 (X, 相减 (横坐标值, 48))
    赋值 (Y, 纵坐标值)
    投递鼠标点击消息 ()
    赋值 (跳出循环, 真)
.否则
    左下 ()
.如果结束


.子程序 左下, 空白型, , 左下
赋值 (临时横坐标1, 相减 (横坐标值, 48))
赋值 (临时纵坐标1, 相加 (纵坐标值, 48))
赋值 (临时横坐标2, 相减 (横坐标值, 48))
赋值 (临时纵坐标2, 相加 (纵坐标值, 96))
.如果 (并且 (等于 (判断点是否越界 (), 假), 等于 (判断色是否相同 (), 真)))
    赋值 (X, 横坐标值)
    赋值 (Y, 纵坐标值)
    投递鼠标点击消息 ()
    赋值 (X, 相减 (横坐标值, 48))
    赋值 (Y, 纵坐标值)
    投递鼠标点击消息 ()
    赋值 (跳出循环, 真)
.否则
    左中 ()
.如果结束


.子程序 左中, 空白型, , 左中
赋值 (临时横坐标1, 相减 (横坐标值, 48))
赋值 (临时纵坐标1, 相加 (纵坐标值, 48))
赋值 (临时横坐标2, 相减 (横坐标值, 48))
赋值 (临时纵坐标2, 相减 (纵坐标值, 48))
.如果 (并且 (等于 (判断点是否越界 (), 假), 等于 (判断色是否相同 (), 真)))
    赋值 (X, 横坐标值)
    赋值 (Y, 纵坐标值)
    投递鼠标点击消息 ()
    赋值 (X, 相减 (横坐标值, 48))
    赋值 (Y, 纵坐标值)
    投递鼠标点击消息 ()
    赋值 (跳出循环, 真)
.否则
    
.如果结束



 ' 不属于任何一个程序集、类模块的函数：
