 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 窗口_游戏画面 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 380
    高度 = 250
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 0
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 3
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “”
    帮助文件名 = “”

窗口 _启动窗口
    左边 = 50
    顶边 = 50
    宽度 = 600
    高度 = 400
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 0
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 假
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “3D迷宫”
    帮助文件名 = “”



.常量 , , , =====自定义程序常量=====
.常量 碰撞距离, "0.3", , 
.常量 最近距离, "0.1", , 
.常量 , , , -----列表号-----
.常量 地板列表号, "1", , 
.常量 墙壁列表号, "2", , 
.常量 准星列表号, "3", , 
.常量 箭头列表号, "4", , 
.常量 地图列表号, "5", , 
.常量 天空列表号, "6", , 
.常量 指南针列表号, "7", , 
.常量 文字列表号, "8", , 
.常量 门列表号, "9", , 
.常量 , , , -----纹理图片标记-----
.常量 地板图片纹理号, "1", , 
.常量 墙壁图片纹理号, "2", , 
.常量 天空图片纹理号, "3", , 
.常量 指南针图片纹理号, "4", , 
.常量 指南针蒙板图片纹理号, "5", , 
.常量 文字纹理号, "6", , 
.常量 文字蒙板纹理号, "7", , 
.常量 门纹理号, "8", , 
.常量 , , , -----鼠标移动边界-----
.常量 鼠标左边界, "200", , 
.常量 鼠标右边界, "200", , 
.常量 , , , -----游戏难度-----
.常量 最远折弯距离, "10", , 整数
.常量 折弯次数, "10", , 整数，越大，迷宫转弯越多，但是道路也越多
.常量 地板宽, "10", , 整数，越大，迷宫越大
.常量 地板长, "10", , 整数，越大，迷宫越大
.常量 , , , -----实体常量-----
.常量 墙壁高, "0.5", , 小数，越大，墙壁越高
.常量 眼高, "0.4", , 小数，越大，站的越高
.常量 柱子宽度一半, "0.1", , 小数，越大，柱子越大
.常量 天空高度, "5", , 
.常量 , , , -----程序常量-----
.常量 临时文件名, "“bmp.tmp”", , 使用纹理图片时的临时文件名
.图片 墙壁, " ' 已保存到：D:\易语言学习\Data\三维迷宫.e\墙壁", , 64*64
.图片 地板, " ' 已保存到：D:\易语言学习\Data\三维迷宫.e\地板", , 
.图片 天空, " ' 已保存到：D:\易语言学习\Data\三维迷宫.e\天空", , 
.图片 指南针, " ' 已保存到：D:\易语言学习\Data\三维迷宫.e\指南针", , 80*80
.图片 指南针蒙板, " ' 已保存到：D:\易语言学习\Data\三维迷宫.e\指南针蒙板", , 80*80
.图片 文字, " ' 已保存到：D:\易语言学习\Data\三维迷宫.e\文字", , 80*30
.图片 文字蒙板, " ' 已保存到：D:\易语言学习\Data\三维迷宫.e\文字蒙板", , 80*30
.图片 门, " ' 已保存到：D:\易语言学习\Data\三维迷宫.e\门", , 100*200


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 4 系统核心支持库
 ' iext 27bb20fdd3e145e4bee3db39ddd6e64c 1 2 扩展界面支持库一
 ' OPenGL F05D3E4CE9E84d0f82332D62BAF6447F 1 2 OPenGL支持库




数据类型 观察者, , 
    .成员 位置, 点, , , 
    .成员 绕y, 双精度小数型, , , 
    .成员 绕x, 双精度小数型, , , 
    .成员 移动速度, 双精度小数型, , , 
    .成员 移动跳跃频率, 双精度小数型, , , 
    .成员 移动跳跃相位, 整数型, , , 
    .成员 频率叠加值, 整数型, , , 

数据类型 点, , 
    .成员 x, 双精度小数型, , , 
    .成员 y, 双精度小数型, , , 
    .成员 z, 双精度小数型, , , 


.DLL命令 置鼠标位置, 空白型, "", "SetCursorPos", , 
    .参数 x, 整数型, , 
    .参数 y, 整数型, , 

.窗口程序集 游戏画面窗口程序集, , , 

.程序集变量 窗口句柄, 整数型, , , 
.子程序 _窗口_游戏画面_创建完毕, 空白型, , 
赋值 (窗口_游戏画面., “我的OPenGL应用程序”)
未知支持库函数_6 (假)
赋值 (窗口句柄, 窗口_游戏画面.取窗口句柄 ())
建立OPenGL组件 (窗口句柄)

.子程序 _窗口_游戏画面_尺寸被改变, 空白型, , 
置鼠标位置 (相加 (., 相除 (., 2)), 相加 (., 相除 (., 2)))
尺寸被改变 (0, 0, 窗口_游戏画面.取用户区宽度 (), 窗口_游戏画面.取用户区高度 ())

.子程序 _窗口_游戏画面_将被销毁, 空白型, , 
撤消OPenGL组件 (窗口句柄)
未知支持库函数_6 (真)

.子程序 _时钟1_周期事件, 空白型, , 
计算视点 ()
绘图 ()

.子程序 _窗口_游戏画面_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

鼠标操作 (横向位置, 纵向位置, 功能键状态)

.子程序 _窗口_游戏画面_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

键盘操作 (键代码, 功能键状态, 真)

.子程序 _窗口_游戏画面_放开某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

键盘操作 (键代码, 功能键状态, 假)

.程序集 框架程序集, , , 

.程序集变量 着色描述表号, 整数型, , , 
.程序集变量 设备句柄, 整数型, , , OPenGL组件的设备句柄
.程序集变量 匿名程序集变量_820, 空白型, , , ==========显示变量==========
.程序集变量 全屏显示, 逻辑型, , , 
.程序集变量 光源开关, 逻辑型, , , 
.程序集变量 雾开关, 逻辑型, , , 
.程序集变量 地图开关, 逻辑型, , , 
.程序集变量 匿名程序集变量_825, 空白型, , , ==========操作变量==========
.程序集变量 玩家, 观察者, , , 
.程序集变量 键盘状态, 逻辑型, , "256", 
.程序集变量 地图中心, 双精度小数型, , "2", 
.程序集变量 匿名程序集变量_830, 空白型, , , ==========实体数据==========
.程序集变量 迷宫, 字节型, , "0", 
.程序集变量 匿名程序集变量_833, 空白型, , , ==========记录鼠标==========
.程序集变量 鼠标超出, 整数型, , "2", 
.程序集变量 鼠标位置, 整数型, , "2", 
.程序集变量 鼠标移动响应速度, 整数型, , , 移动的快慢
.程序集变量 计算中, 逻辑型, , , 
.子程序 建立OPenGL组件, 空白型, , 建立可供显示OPenGL的设备场景，不使用的时候必须撤消
.参数 窗口句柄, 空白型, , 

.局部变量 像素格式, 未知类型0x30001, , , 
.局部变量 像素格式号, 整数型, , , 

赋值 (设备句柄, 未知支持库函数_5 (窗口句柄))
赋值 (像素格式., 40)
赋值 (像素格式., 1)
赋值 (像素格式., 位或 (#, #, #))
赋值 (像素格式., 24)
赋值 (像素格式., 32)
赋值 (像素格式号, 未知支持库函数_0 (设备句柄, 像素格式))
未知支持库函数_1 (设备句柄, 像素格式号, 像素格式)
赋值 (着色描述表号, 未知支持库函数_2 (设备句柄))
未知支持库函数_3 (设备句柄, 着色描述表号)
框架初始化 ()

.子程序 撤消OPenGL组件, 空白型, , 撤消已经建立的OPenGL设备场景
.参数 窗口句柄, 空白型, , 

.局部变量 循环变量, 整数型, , , 

赋值 (循环变量, 1)
.判断循环首 (未知支持库函数_72 (循环变量))
    未知支持库函数_73 (循环变量, 1)
    赋值 (循环变量, 相加 (循环变量, 1))
.判断循环尾 ()
 ' 删除所有已经创建的显示列表
未知支持库函数_3 (设备句柄, 0)
未知支持库函数_4 (着色描述表号)
未知支持库函数_7 (窗口句柄, 设备句柄)

.子程序 框架初始化, 空白型, , 所有的OpenGL初始化都在这里
未知支持库函数_44 (0, 0, 0, 0) ' 在这里修改你的背景颜色
未知支持库函数_58 (#)
未知支持库函数_45 (1)
未知支持库函数_50 (#)
未知支持库函数_35 (#)
未知支持库函数_32 (#, #)
 ' ==========显示==========
未知支持库函数_12 (0.1, 0.1, 0.1)
 ' ==========资源==========
创建纹理 ()
 ' ==========实体数据==========
 ' 设置材质 (#正面, #漫反射光, { 1, 1, 1, 1 })  ' xz
 ' 设置材质 (#正面, #镜面光, { 1, 1, 1, 1 })  ' xz
定义光源 ({ 0.7, 0.7, 0.7, 1 }, { 0.9, 0.8, 0.4, 1 }, { 0, #眼高, 0, 0 }, #) ' xz
未知支持库函数_53 (#, 1) ' xz
定义光源 ({ 1, 1, 1, 1 }, { 1, 1, 1, 1 }, { 0, #眼高, 0, 0 }, #)
定义雾 (#, { 0.4, 0.4, 0.4, 1 }, 0.005, 1, 2)
创建地板列表 ()
画天空盒 (2, 1, 2)
画门 ()
定义迷宫数据 (#地板长, #地板宽, 迷宫)
创建墙壁列表 (迷宫)
画地图 (迷宫, 3, 地图中心 [1], 地图中心 [2])
画准星 (0.002)
画游戏标题文字 (0.02, 0.01)
画指南针 (0.01)
画箭头 (0.5, -0.5, 相减 (#地板长, 0.5), 相减 (0.5, #地板长), 相乘 (#墙壁高, 3), 0.1, 0.05)

.子程序 绘图, 空白型, , 修改
未知支持库函数_42 (位或 (#, #))
未知支持库函数_8 ()
.如果真 (取反 (光源开关))
    未知支持库函数_51 (#)
.如果真结束
未知支持库函数_51 (#)
未知支持库函数_51 (#)
未知支持库函数_71 (#准星列表号)
.如果真 (地图开关)
    未知支持库函数_16 ()
    未知支持库函数_10 (地图中心 [1], 地图中心 [2], 相乘 (#最近距离, -1))
    未知支持库函数_71 (#地图列表号)
    显示位置 (玩家.位置.x, 负 (玩家.位置.z), 地图中心 [1], 地图中心 [2])
    未知支持库函数_17 ()
.如果真结束
未知支持库函数_11 (玩家.绕x, 1, 0, 0)
未知支持库函数_11 (玩家.绕y, 0, 1, 0)
未知支持库函数_10 (负 (玩家.位置.x), 相减 (负 (玩家.位置.y), 相乘 (玩家.移动跳跃频率, 求正弦 (玩家.移动跳跃相位))), 负 (玩家.位置.z))
未知支持库函数_71 (#箭头列表号)
未知支持库函数_54 (#, #, { 0.7, 0.7, 0.7, 1 })
.如果真 (光源开关)
    未知支持库函数_50 (#)
.如果真结束
.如果真 (雾开关)
    未知支持库函数_50 (#)
.如果真结束
未知支持库函数_50 (#)
未知支持库函数_50 (#)
未知支持库函数_71 (#门列表号)
 ' 调用列表 (#天空列表号)  ' xz
未知支持库函数_71 (#地板列表号)
未知支持库函数_71 (#墙壁列表号)
未知支持库函数_71 (#准星列表号)
未知支持库函数_51 (#)
未知支持库函数_51 (#)
未知支持库函数_50 (#)
未知支持库函数_71 (#天空列表号) ' xz
未知支持库函数_54 (#, #, { 1, 1, 1, 1 })
未知支持库函数_16 ()
未知支持库函数_8 ()
未知支持库函数_10 (-0.04, 0.03, 相乘 (#最近距离, -1))
未知支持库函数_71 (#文字列表号)
未知支持库函数_10 (0.02, 0, 0)
未知支持库函数_11 (玩家.绕y, 0, 0, 1)
未知支持库函数_71 (#指南针列表号)
未知支持库函数_17 ()
未知支持库函数_51 (#)
未知支持库函数_38 (设备句柄)

.子程序 尺寸被改变, 空白型, , 修改可视范围
.参数 左边, 空白型, , 
.参数 底边, 空白型, , 
.参数 宽度, 空白型, , 
.参数 高度, 空白型, , 

未知支持库函数_15 (左边, 底边, 宽度, 高度)
未知支持库函数_9 (#)
未知支持库函数_8 ()
未知支持库函数_20 (45, 相除 (宽度, 高度), 0.1, 100)
未知支持库函数_9 (#)
未知支持库函数_8 ()

.子程序 变量初始化, 空白型, , 
置随机数种子 ()
 ' ==========显示变量==========
赋值 (全屏显示, 真)
赋值 (光源开关, 真)
赋值 (地图开关, 假)
 ' ==========操作变量==========
赋值 (玩家.位置.x, 0.5)
赋值 (玩家.位置.y, #眼高)
赋值 (玩家.位置.z, -0.5)
赋值 (玩家.移动速度, 0.1)
赋值 (玩家.绕x, 0)
赋值 (玩家.绕y, 0)
赋值 (玩家.移动跳跃频率, 0.005)
赋值 (玩家.移动跳跃相位, 0)
赋值 (玩家.频率叠加值, 1)
赋值 (地图中心 [1], 0)
赋值 (地图中心 [2], 0)
 ' ==========记录鼠标==========
赋值 (鼠标超出, { 0, 0 })
赋值 (鼠标移动响应速度, 10)

.子程序 键盘操作, 空白型, , 记录键盘的状态
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 
.参数 键状态, 逻辑型, , 

.局部变量 临时, 双精度小数型, , "2", 

.判断开始 (并且 (等于 (键代码, 27), 键状态)) ' Esc键
    窗口_游戏画面.销毁 ()
.判断 (并且 (等于 (键代码, 113), 等于 (键状态, 假))) ' 全屏
    赋值 (全屏显示, 取反 (全屏显示))
    输出调试文本 (相加 (“全屏显示:”, 到文本 (全屏显示)))
    .如果 (全屏显示)
        窗口_游戏画面.移动 (0, 0, 取屏幕宽度 (), 取屏幕高度 ())
    .否则
        窗口_游戏画面.移动 (0, 0, 800, 600)
    .如果结束
    赋值 (窗口_游戏画面., 1)
.判断 (等于 (键代码, 87)) ' 向前移动
    赋值 (键盘状态 [3], 键状态)
.判断 (等于 (键代码, 83)) ' 向后移动
    赋值 (键盘状态 [4], 键状态)
.判断 (等于 (键代码, 65)) ' 向左移动
    赋值 (键盘状态 [5], 键状态)
.判断 (等于 (键代码, 68)) ' 向右移动
    赋值 (键盘状态 [6], 键状态)
.判断 (并且 (等于 (键代码, 76), 键状态)) ' 光开关
    赋值 (光源开关, 取反 (光源开关))
    输出调试文本 (相加 (“光源开关:”, 到文本 (光源开关)))
    绘图 ()
.判断 (并且 (等于 (键代码, 37), 键状态, 地图开关)) ' 地图中心坐标
    .如果真 (大于 (地图中心 [1], -0.03))
        赋值 (地图中心 [1], 相减 (地图中心 [1], 0.01))
    .如果真结束
    绘图 ()
.判断 (并且 (等于 (键代码, 39), 键状态, 地图开关)) ' 地图中心坐标
    .如果真 (小于 (地图中心 [1], 0.03))
        赋值 (地图中心 [1], 相加 (地图中心 [1], 0.01))
    .如果真结束
    绘图 ()
.判断 (并且 (等于 (键代码, 40), 键状态, 地图开关)) ' 地图中心坐标
    .如果真 (大于 (地图中心 [2], -0.02))
        赋值 (地图中心 [2], 相减 (地图中心 [2], 0.01))
    .如果真结束
    绘图 ()
.判断 (并且 (等于 (键代码, 38), 键状态, 地图开关)) ' 地图中心坐标
    .如果真 (小于 (地图中心 [2], 0.02))
        赋值 (地图中心 [2], 相加 (地图中心 [2], 0.01))
    .如果真结束
    绘图 ()
.判断 (并且 (等于 (键代码, 70), 键状态)) ' 雾开关
    赋值 (雾开关, 取反 (雾开关))
    绘图 ()
.判断 (并且 (等于 (键代码, 77), 键状态))
    赋值 (地图开关, 取反 (地图开关))
    输出调试文本 (相加 (“地图开关:”, 到文本 (地图开关)))
.判断 (并且 (等于 (键代码, 32), 等于 (键状态, 假)))
    .如果真 (并且 (等于 (取整 (玩家.位置.x), 相减 (#地板长, 1)), 等于 (取整 (取绝对值 (玩家.位置.z)), 相减 (#地板宽, 1)))) ' 走到出口
        赋值 (临时 [1], 求余数 (取绝对值 (玩家.绕y), 360))
        .如果真 (或者 (小于 (临时 [1], 20), 大于 (临时 [1], 340)))
             ' 在此处添加通关事件的处理代码
            信息框 (“已经通关啦！”, 0, “恭喜！”)
            窗口_游戏画面.销毁 ()
        .如果真结束
        
    .如果真结束
    
.默认
    
.判断结束


.子程序 鼠标操作, 空白型, , 记录鼠标的状态
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (鼠标位置 [1], 横向位置)
赋值 (鼠标位置 [2], 纵向位置)

.子程序 可否继续移动, 逻辑型, , 防止超出可移动范围的界限
.参数 横, 双精度小数型, , 
.参数 纵, 双精度小数型, , 

.局部变量 横整, 整数型, , , 
.局部变量 纵整, 整数型, , , 
.局部变量 横临时, 小数型, , , 
.局部变量 纵临时, 小数型, , , 

 ' 是否在地图边界内
赋值 (横整, 相加 (取整 (横), 1))
赋值 (纵整, 相加 (取整 (纵), 1))
赋值 (横临时, 相减 (横整, 横))
赋值 (纵临时, 相减 (纵整, 纵))
.判断开始 (小于或等于 (横, #碰撞距离))
    返回 (假)
.判断 (大于或等于 (横, 相减 (#地板宽, #碰撞距离)))
    返回 (假)
.判断 (小于或等于 (纵, #碰撞距离))
    返回 (假)
.判断 (大于或等于 (纵, 相减 (#地板长, #碰撞距离)))
    返回 (假)
.判断 (并且 (小于或等于 (横临时, #碰撞距离), 小于或等于 (纵临时, #碰撞距离))) ' 左下角
    返回 (假)
.判断 (并且 (小于或等于 (相减 (1, 横临时), #碰撞距离), 小于或等于 (纵临时, #碰撞距离))) ' 右下角
    返回 (假)
.判断 (并且 (小于或等于 (相减 (1, 横临时), #碰撞距离), 小于或等于 (相减 (1, 纵临时), #碰撞距离))) ' 右上角
    返回 (假)
.判断 (并且 (小于或等于 (横临时, #碰撞距离), 小于或等于 (相减 (1, 纵临时), #碰撞距离))) ' 左上角
    返回 (假)
.判断 (并且 (等于 (迷宫 [横整] [纵整] [1], 0), 小于或等于 (相减 (1, 横临时), #碰撞距离))) ' 左
    返回 (假)
.判断 (并且 (等于 (迷宫 [横整] [纵整] [3], 0), 小于或等于 (横临时, #碰撞距离))) ' 右
    返回 (假)
.判断 (并且 (等于 (迷宫 [横整] [纵整] [2], 0), 小于或等于 (相减 (1, 纵临时), #碰撞距离))) ' 下
    返回 (假)
.判断 (并且 (等于 (迷宫 [横整] [纵整] [4], 0), 小于或等于 (纵临时, #碰撞距离))) ' 上
    返回 (假)
.默认
    
.判断结束
返回 (真)

.子程序 计算视点, 空白型, , 判断玩家的当前位置，也可以增加游戏过程的触发事件
.局部变量 临时, 双精度小数型, , "2", 
.局部变量 显示中心, 双精度小数型, , "2", 
.局部变量 频率叠加, 逻辑型, , , 

.如果真 (等于 (计算中, 假))
    赋值 (计算中, 真)
    赋值 (显示中心 [1], 相除 (窗口_游戏画面., 2))
    赋值 (显示中心 [2], 相除 (窗口_游戏画面., 2))
    .如果真 (大于 (取绝对值 (相减 (鼠标位置 [2], 显示中心 [2])), 0))
        赋值 (玩家.绕x, 相除 (相减 (鼠标位置 [2], 显示中心 [2]), 鼠标移动响应速度))
        赋值 (玩家.绕x, 相加 (玩家.绕x, 相除 (相乘 (鼠标超出 [2], #鼠标左边界), 鼠标移动响应速度)))
    .如果真结束
    .如果真 (大于 (取绝对值 (相减 (鼠标位置 [1], 显示中心 [1])), 0))
        赋值 (玩家.绕y, 相除 (相减 (鼠标位置 [1], 显示中心 [1]), 鼠标移动响应速度))
        赋值 (玩家.绕y, 相加 (玩家.绕y, 相除 (相乘 (鼠标超出 [1], #鼠标左边界), 鼠标移动响应速度)))
    .如果真结束
    .判断开始 (小于 (鼠标位置 [1], 相减 (显示中心 [1], #鼠标左边界)))
         ' 左移
        置鼠标位置 (相加 (窗口_游戏画面., 窗口_游戏画面., 显示中心 [1]), 鼠标位置 [2])
        赋值 (鼠标超出 [1], 相减 (鼠标超出 [1], 1))
    .判断 (大于 (鼠标位置 [1], 相加 (显示中心 [1], #鼠标右边界)))
        置鼠标位置 (相加 (窗口_游戏画面., 窗口_游戏画面., 显示中心 [1]), 鼠标位置 [2])
         ' 右移
        赋值 (鼠标超出 [1], 相加 (鼠标超出 [1], 1))
    .默认
        
    .判断结束
    .如果真 (等于 (求余数 (玩家.绕y, 360), 0))
        赋值 (鼠标超出 [1], 0)
    .如果真结束
    赋值 (频率叠加, 假)
    .判断开始 (键盘状态 [3]) ' 向前移动
        赋值 (临时 [1], 相加 (玩家.位置.x, 相乘 (玩家.移动速度, 四舍五入 (求正弦 (相乘 (相除 (玩家.绕y, 180), #pi)), 3))))
        赋值 (临时 [2], 相减 (玩家.位置.z, 相乘 (玩家.移动速度, 四舍五入 (求余弦 (相乘 (相除 (玩家.绕y, 180), #pi)), 3))))
        .如果真 (可否继续移动 (临时 [1], 负 (临时 [2])))
            赋值 (玩家.位置.x, 临时 [1])
            赋值 (玩家.位置.z, 临时 [2])
        .如果真结束
        赋值 (玩家.移动跳跃相位, 相加 (玩家.移动跳跃相位, 玩家.频率叠加值))
        赋值 (频率叠加, 真)
    .判断 (键盘状态 [4]) ' 向后移动
        赋值 (临时 [1], 相减 (玩家.位置.x, 相乘 (玩家.移动速度, 四舍五入 (求正弦 (相乘 (相除 (玩家.绕y, 180), #pi)), 3))))
        赋值 (临时 [2], 相加 (玩家.位置.z, 相乘 (玩家.移动速度, 四舍五入 (求余弦 (相乘 (相除 (玩家.绕y, 180), #pi)), 3))))
        .如果真 (可否继续移动 (临时 [1], 负 (临时 [2])))
            赋值 (玩家.位置.x, 临时 [1])
            赋值 (玩家.位置.z, 临时 [2])
        .如果真结束
        赋值 (玩家.移动跳跃相位, 相减 (玩家.移动跳跃相位, 玩家.频率叠加值))
        赋值 (频率叠加, 真)
    .默认
        
    .判断结束
    
    .判断开始 (键盘状态 [5]) ' 向左移动
        赋值 (临时 [1], 相减 (玩家.位置.x, 相乘 (玩家.移动速度, 四舍五入 (求余弦 (相乘 (相除 (玩家.绕y, 180), #pi)), 3))))
        赋值 (临时 [2], 相减 (玩家.位置.z, 相乘 (玩家.移动速度, 四舍五入 (求正弦 (相乘 (相除 (玩家.绕y, 180), #pi)), 3))))
        .如果真 (可否继续移动 (临时 [1], 负 (临时 [2])))
            赋值 (玩家.位置.x, 临时 [1])
            赋值 (玩家.位置.z, 临时 [2])
        .如果真结束
        .如果真 (等于 (频率叠加, 假))
            赋值 (玩家.移动跳跃相位, 相加 (玩家.移动跳跃相位, 玩家.频率叠加值))
        .如果真结束
        
    .判断 (键盘状态 [6]) ' 向右移动
        赋值 (临时 [1], 相加 (玩家.位置.x, 相乘 (玩家.移动速度, 四舍五入 (求余弦 (相乘 (相除 (玩家.绕y, 180), #pi)), 3))))
        赋值 (临时 [2], 相加 (玩家.位置.z, 相乘 (玩家.移动速度, 四舍五入 (求正弦 (相乘 (相除 (玩家.绕y, 180), #pi)), 3))))
        .如果真 (可否继续移动 (临时 [1], 负 (临时 [2])))
            赋值 (玩家.位置.x, 临时 [1])
            赋值 (玩家.位置.z, 临时 [2])
        .如果真结束
        .如果真 (等于 (频率叠加, 假))
            赋值 (玩家.移动跳跃相位, 相减 (玩家.移动跳跃相位, 玩家.频率叠加值))
        .如果真结束
        
    .默认
        
    .判断结束
    
    .判断开始 (键盘状态 [7]) ' 左转动
        赋值 (玩家.绕y, 相减 (玩家.绕y, 10))
    .判断 (键盘状态 [8]) ' 右转动
        赋值 (玩家.绕y, 相加 (玩家.绕y, 10))
    .默认
        
    .判断结束
    赋值 (计算中, 假)
    绘图 ()
.如果真结束


.程序集 画图程序集, , , 

.程序集变量 实际比例, 双精度小数型, , , 
.程序集变量 长, 整数型, , , 
.程序集变量 宽, 整数型, , , 
.子程序 创建地板列表, 空白型, , 
未知支持库函数_68 (#地板列表号, #)
画地板 (#地板宽, #地板长, 10, 10)
未知支持库函数_69 ()

.子程序 创建墙壁列表, 空白型, , 
.参数 迷宫, 字节型, 数组, 

.局部变量 循环变量1, 整数型, , , 
.局部变量 循环变量2, 整数型, , , 
.局部变量 循环变量3, 整数型, , , 
.局部变量 墙面宽度, 小数型, , , 

赋值 (长, 取数组下标 (迷宫, 1))
赋值 (宽, 取数组下标 (迷宫, 2))
赋值 (墙面宽度, 相减 (1, 相乘 (#柱子宽度一半, 2)))
未知支持库函数_68 (#墙壁列表号, #)
未知支持库函数_59 (#, #墙壁图片纹理号)
画墙壁柱子 ()
.变量循环首 (1, 长, 1, 循环变量1)
    .变量循环首 (1, 宽, 1, 循环变量2)
        未知支持库函数_16 ()
        未知支持库函数_10 (相减 (循环变量1, 1), 0, 相减 (1, 循环变量2))
        未知支持库函数_10 (相除 (#柱子宽度一半, 2), 0, 相乘 (#柱子宽度一半, -1))
        .计次循环首 (4, 循环变量3)
            .如果真 (等于 (迷宫 [循环变量1] [循环变量2] [循环变量3], 0))
                画一面墙壁 (墙面宽度, #墙壁高, 0, 0, 相除 (墙面宽度, #柱子宽度一半), 相除 (#墙壁高, #柱子宽度一半, 2))
            .如果真结束
            未知支持库函数_10 (相加 (相除 (#柱子宽度一半, 2), 墙面宽度), 0, 相除 (#柱子宽度一半, 2))
            未知支持库函数_11 (90, 0, 1, 0)
        .计次循环尾 ()
        未知支持库函数_17 ()
    .变量循环尾 ()
.变量循环尾 ()
未知支持库函数_69 ()

.子程序 画墙壁柱子, 空白型, , 
.局部变量 循环变量1, 整数型, , , 
.局部变量 循环变量2, 整数型, , , 

.计次循环首 (相加 (长, 1), 循环变量1)
    .计次循环首 (相加 (宽, 1), 循环变量2)
        未知支持库函数_16 ()
        未知支持库函数_10 (相减 (循环变量1, 1), 0, 相减 (1, 循环变量2))
        未知支持库函数_10 (#柱子宽度一半, 0, #柱子宽度一半)
         ' 柱子墙壁的中心
        画一面墙壁 (相乘 (#柱子宽度一半, 2), #墙壁高, 0, 0, 2, 相除 (#墙壁高, #柱子宽度一半, 2))
        未知支持库函数_11 (90, 0, 1, 0)
        未知支持库函数_10 (相乘 (#柱子宽度一半, 2), 0, 0)
        画一面墙壁 (相乘 (#柱子宽度一半, 2), #墙壁高, 0.5, 0, 2, 相除 (#墙壁高, #柱子宽度一半, 2))
        未知支持库函数_11 (90, 0, 1, 0)
        未知支持库函数_10 (相乘 (#柱子宽度一半, 2), 0, 0)
        画一面墙壁 (相乘 (#柱子宽度一半, 2), #墙壁高, 0, 0, 2, 相除 (#墙壁高, #柱子宽度一半, 2))
        未知支持库函数_11 (90, 0, 1, 0)
        未知支持库函数_10 (相乘 (#柱子宽度一半, 2), 0, 0)
        画一面墙壁 (相乘 (#柱子宽度一半, 2), #墙壁高, 0.5, 0, 2, 相除 (#墙壁高, #柱子宽度一半, 2))
        未知支持库函数_11 (90, 0, 1, 0)
        未知支持库函数_10 (相乘 (#柱子宽度一半, 2), 0, 0)
        未知支持库函数_17 ()
    .计次循环尾 ()
.计次循环尾 ()

.子程序 画地板, 空白型, , 
.参数 地板宽, 双精度小数型, , 
.参数 地板长, 双精度小数型, , 
.参数 横向地砖数量, 整数型, , 
.参数 纵向地砖数量, 整数型, , 

未知支持库函数_59 (#, #地板列表号)
未知支持库函数_21 (#)
未知支持库函数_57 (0, 地板长, 0) ' xz
未知支持库函数_48 (1, 1, 1, 0)
 ' 左下角
未知支持库函数_63 (0, 0)
未知支持库函数_23 (0, 0, 0)
 ' 右下角
未知支持库函数_63 (横向地砖数量, 0)
未知支持库函数_23 (地板宽, 0, 0)
 ' 右上角
未知支持库函数_63 (横向地砖数量, 纵向地砖数量)
未知支持库函数_23 (地板宽, 0, 负 (地板长))
 ' 左上角
未知支持库函数_63 (0, 纵向地砖数量)
未知支持库函数_23 (0, 0, 负 (地板长))
未知支持库函数_22 ()

.子程序 画一面墙壁, 空白型, , 
.参数 墙壁宽, 双精度小数型, , 
.参数 墙壁高, 双精度小数型, , 
.参数 纹理起始横坐标, 双精度小数型, , 
.参数 纹理起始纵坐标, 双精度小数型, , 
.参数 横向墙纸数量, 整数型, , 
.参数 纵向墙纸数量, 整数型, , 

未知支持库函数_21 (#)
未知支持库函数_57 (墙壁高, 0, 0) ' xz
未知支持库函数_48 (1, 1, 1, 1)
 ' 左下角
未知支持库函数_63 (纹理起始横坐标, 纹理起始纵坐标)
未知支持库函数_23 (0, 0, 0)
 ' 右下角
未知支持库函数_63 (相加 (横向墙纸数量, 纹理起始横坐标), 纹理起始纵坐标)
未知支持库函数_23 (0, 0, 负 (墙壁宽))
 ' 右上角
未知支持库函数_63 (相加 (横向墙纸数量, 纹理起始横坐标), 相加 (纵向墙纸数量, 纹理起始纵坐标))
未知支持库函数_23 (0, 墙壁高, 负 (墙壁宽))
 ' 左上角
未知支持库函数_63 (纹理起始横坐标, 相加 (纵向墙纸数量, 纹理起始纵坐标))
未知支持库函数_23 (0, 墙壁高, 0)
未知支持库函数_22 ()

.子程序 定义光源, 空白型, , 
.参数 环境光, 小数型, 数组, 
.参数 漫射光, 小数型, 数组, 
.参数 光源位置, 小数型, 数组, 
.参数 光源号, 空白型, , 

未知支持库函数_52 (光源号, #, 环境光)
未知支持库函数_52 (光源号, #, 漫射光)
未知支持库函数_52 (光源号, #, 光源位置)
未知支持库函数_52 (#, #, { 1, 1, 1, 1 }) ' xz
未知支持库函数_50 (光源号)

.子程序 定义雾, 空白型, , 
.参数 模式, 整数型, , 
.参数 颜色, 小数型, 数组, 
.参数 密度, 小数型, , 
.参数 开始, 小数型, , 
.参数 结束, 小数型, , 

未知支持库函数_56 (#, 模式)
未知支持库函数_56 (#, 颜色)
未知支持库函数_56 (#, 密度)
未知支持库函数_56 (#, 开始)
未知支持库函数_56 (#, 结束)

.子程序 画准星, 空白型, , 
.参数 半径, 双精度小数型, , 

.局部变量 循环变量, 整数型, , , 

未知支持库函数_68 (#准星列表号, #)
未知支持库函数_16 ()
未知支持库函数_21 (#)
未知支持库函数_48 (1, 1, 1, 0)
未知支持库函数_23 (负 (半径), 0, 相乘 (#最近距离, -1))
未知支持库函数_23 (半径, 0, 相乘 (#最近距离, -1))
未知支持库函数_23 (0, 负 (半径), 相乘 (#最近距离, -1))
未知支持库函数_23 (0, 半径, 相乘 (#最近距离, -1))
未知支持库函数_22 ()
赋值 (半径, 相除 (半径, 2))
未知支持库函数_21 (#)
未知支持库函数_48 (1, 1, 1, 0)
.变量循环首 (0, 350, 10, 循环变量)
    未知支持库函数_23 (相乘 (半径, 求余弦 (相除 (相乘 (循环变量, #pi), 180))), 相乘 (半径, 求正弦 (相除 (相乘 (循环变量, #pi), 180))), 相乘 (#最近距离, -1))
.变量循环尾 ()
未知支持库函数_22 ()
未知支持库函数_17 ()
未知支持库函数_69 ()

.子程序 画箭头, 空白型, , 
.参数 入口横坐标, 小数型, , 
.参数 入口纵坐标, 小数型, , 
.参数 出口横坐标, 小数型, , 
.参数 出口纵坐标, 小数型, , 
.参数 其始高度, 小数型, , 
.参数 大小, 小数型, , 
.参数 厚度, 小数型, , 

.局部变量 箭头1, 双精度小数型, , "0", 
.局部变量 箭头2, 双精度小数型, , "0", 
.局部变量 循环变量, 空白型, , , 

重定义数组 (箭头1, 假, 7, 6)
赋值 (箭头1 [1] [1], 0)
赋值 (箭头1 [1] [2], 其始高度)
赋值 (箭头1 [1] [4], 0.24)
赋值 (箭头1 [1] [5], 0.93)
赋值 (箭头1 [1] [6], 0.6)

赋值 (箭头1 [2] [1], 相加 (0, 大小))
赋值 (箭头1 [2] [2], 相加 (其始高度, 大小))
赋值 (箭头1 [2] [4], 0.22)
赋值 (箭头1 [2] [5], 0.66)
赋值 (箭头1 [2] [6], 0.57)

赋值 (箭头1 [3] [1], 相加 (0, 相除 (大小, 2)))
赋值 (箭头1 [3] [2], 相加 (其始高度, 大小))
赋值 (箭头1 [3] [4], 0.17)
赋值 (箭头1 [3] [5], 0.49)
赋值 (箭头1 [3] [6], 0.43)

赋值 (箭头1 [4] [1], 相加 (0, 相除 (大小, 2)))
赋值 (箭头1 [4] [2], 相加 (其始高度, 相乘 (大小, 3)))
赋值 (箭头1 [4] [4], 0.17)
赋值 (箭头1 [4] [5], 0.49)
赋值 (箭头1 [4] [6], 0.43)

赋值 (箭头1 [5] [1], 相减 (0, 相除 (大小, 2)))
赋值 (箭头1 [5] [2], 相加 (其始高度, 相乘 (大小, 3)))
赋值 (箭头1 [5] [4], 0.17)
赋值 (箭头1 [5] [5], 0.49)
赋值 (箭头1 [5] [6], 0.43)

赋值 (箭头1 [6] [1], 相减 (0, 相除 (大小, 2)))
赋值 (箭头1 [6] [2], 相加 (其始高度, 大小))
赋值 (箭头1 [6] [4], 0.17)
赋值 (箭头1 [6] [5], 0.49)
赋值 (箭头1 [6] [6], 0.43)

赋值 (箭头1 [7] [1], 相减 (0, 大小))
赋值 (箭头1 [7] [2], 相加 (其始高度, 大小))
赋值 (箭头1 [7] [4], 0.22)
赋值 (箭头1 [7] [5], 0.66)
赋值 (箭头1 [7] [6], 0.57)
连续赋值 (相加 (0, 相除 (厚度, 2)), 箭头1 [1] [3], 箭头1 [2] [3], 箭头1 [3] [3], 箭头1 [4] [3], 箭头1 [5] [3], 箭头1 [6] [3], 箭头1 [7] [3])

赋值 (箭头2, 箭头1)
赋值 (箭头2 [1] [4], 0.85)
赋值 (箭头2 [1] [5], 0.55)
赋值 (箭头2 [1] [6], 0.57)

赋值 (箭头2 [2] [4], 0.63)
赋值 (箭头2 [2] [5], 0.5)
赋值 (箭头2 [2] [6], 0.53)

赋值 (箭头2 [3] [4], 0.75)
赋值 (箭头2 [3] [5], 0.41)
赋值 (箭头2 [3] [6], 0.38)

赋值 (箭头2 [4] [4], 0.75)
赋值 (箭头2 [4] [5], 0.41)
赋值 (箭头2 [4] [6], 0.38)

赋值 (箭头2 [5] [4], 0.75)
赋值 (箭头2 [5] [5], 0.41)
赋值 (箭头2 [5] [6], 0.38)

赋值 (箭头2 [6] [4], 0.75)
赋值 (箭头2 [6] [5], 0.41)
赋值 (箭头2 [6] [6], 0.38)

赋值 (箭头2 [7] [4], 0.63)
赋值 (箭头2 [7] [5], 0.5)
赋值 (箭头2 [7] [6], 0.53)
未知支持库函数_68 (#箭头列表号, #)
未知支持库函数_16 ()
未知支持库函数_10 (入口横坐标, 0, 入口纵坐标)
多边形拉伸 (#, 箭头1, 厚度)
未知支持库函数_17 ()
未知支持库函数_16 ()
未知支持库函数_10 (出口横坐标, 0, 出口纵坐标)
多边形拉伸 (#, 箭头2, 厚度)
未知支持库函数_17 ()
未知支持库函数_69 ()

.子程序 多边形拉伸, 空白型, , 
.参数 形状类型, 整数型, , 
.参数 多边形点, 双精度小数型, 数组, 
.参数 厚度, 双精度小数型, , 

.局部变量 顶点数, 整数型, , , 
.局部变量 循环变量, 整数型, , , 
.局部变量 是否有颜色, 逻辑型, , , 

赋值 (顶点数, 取数组下标 (多边形点, 1))
赋值 (是否有颜色, 大于 (取数组下标 (多边形点, 2), 3))
未知支持库函数_25 (#)
未知支持库函数_21 (形状类型)
.计次循环首 (顶点数, 循环变量)
    .如果真 (是否有颜色)
        未知支持库函数_48 (多边形点 [循环变量] [4], 多边形点 [循环变量] [5], 多边形点 [循环变量] [6], 0)
    .如果真结束
    未知支持库函数_23 (多边形点 [循环变量] [1], 多边形点 [循环变量] [2], 相减 (多边形点 [循环变量] [3], 厚度))
.计次循环尾 ()
未知支持库函数_22 ()
未知支持库函数_25 (#)
未知支持库函数_21 (形状类型)
.计次循环首 (顶点数, 循环变量)
    .如果真 (是否有颜色)
        未知支持库函数_48 (多边形点 [循环变量] [4], 多边形点 [循环变量] [5], 多边形点 [循环变量] [6], 0)
    .如果真结束
    未知支持库函数_23 (多边形点 [循环变量] [1], 多边形点 [循环变量] [2], 多边形点 [循环变量] [3])
.计次循环尾 ()
未知支持库函数_22 ()
未知支持库函数_21 (#)
.计次循环首 (顶点数, 循环变量)
    .如果真 (是否有颜色)
        未知支持库函数_48 (多边形点 [循环变量] [4], 多边形点 [循环变量] [5], 多边形点 [循环变量] [6], 0)
    .如果真结束
    未知支持库函数_23 (多边形点 [循环变量] [1], 多边形点 [循环变量] [2], 多边形点 [循环变量] [3])
    未知支持库函数_23 (多边形点 [循环变量] [1], 多边形点 [循环变量] [2], 相减 (多边形点 [循环变量] [3], 厚度))
.计次循环尾 ()
未知支持库函数_23 (多边形点 [1] [1], 多边形点 [1] [2], 多边形点 [1] [3])
未知支持库函数_23 (多边形点 [1] [1], 多边形点 [1] [2], 相减 (多边形点 [1] [3], 厚度))
未知支持库函数_22 ()

.子程序 画地图, 空白型, , 
.参数 迷宫, 字节型, 数组, 
.参数 缩放比例, 字节型, , 1-10
.参数 中心横坐标, 小数型, , 
.参数 中心纵坐标, 小数型, , 

.局部变量 x, 小数型, , "3", 
.局部变量 y, 小数型, , "3", 
.局部变量 循环变量1, 整数型, , , 
.局部变量 循环变量2, 整数型, , , 
.局部变量 循环变量3, 整数型, , , 
.局部变量 迷宫单元格, 字节型, , "8", 
.局部变量 墙面宽度, 小数型, , , 
.局部变量 大小, 双精度小数型, , , 

未知支持库函数_68 (#地图列表号, #)
赋值 (实际比例, 相除 (0.1, 缩放比例))
未知支持库函数_21 (#)
未知支持库函数_48 (1, 1, 1, 0)
未知支持库函数_23 (相除 (负 (实际比例), 2), 相除 (负 (实际比例), 2), 0)
未知支持库函数_23 (相除 (实际比例, 2), 负 (相除 (实际比例, 2)), 0)
未知支持库函数_23 (相除 (实际比例, 2), 相除 (实际比例, 2), 0)
未知支持库函数_23 (负 (相除 (实际比例, 2)), 相除 (实际比例, 2), 0)
未知支持库函数_22 ()
赋值 (墙面宽度, 相除 (相乘 (相减 (1, 相乘 (#柱子宽度一半, 2)), 0.1), 缩放比例))
未知支持库函数_21 (#)
.变量循环首 (1, 长, 1, 循环变量1)
    .变量循环首 (1, 宽, 1, 循环变量2)
        赋值 (x [1], 相除 (相乘 (相减 (循环变量1, 相除 (长, 2), 1), 实际比例), 长))
        赋值 (x [2], 相除 (相乘 (相减 (循环变量1, 相除 (长, 2), 1), 实际比例), 长))
        赋值 (x [3], 相除 (相乘 (相减 (循环变量1, 相除 (长, 2)), 实际比例), 长))
        
        赋值 (y [1], 相除 (相乘 (相减 (循环变量2, 相除 (宽, 2)), 实际比例), 宽))
        赋值 (y [2], 相除 (相乘 (相减 (循环变量2, 相除 (宽, 2), 1), 实际比例), 宽))
        赋值 (y [3], 相除 (相乘 (相减 (循环变量2, 相除 (宽, 2), 1), 实际比例), 宽))
        .计次循环首 (2, 循环变量3)
            .如果真 (等于 (迷宫 [循环变量1] [循环变量2] [循环变量3], 0))
                未知支持库函数_23 (x [循环变量3], y [循环变量3], 0)
                未知支持库函数_23 (x [相加 (循环变量3, 1)], y [相加 (循环变量3, 1)], 0)
            .如果真结束
            
        .计次循环尾 ()
    .变量循环尾 ()
.变量循环尾 ()
未知支持库函数_22 ()
赋值 (大小, 相除 (实际比例, 长, 2))
未知支持库函数_16 ()
未知支持库函数_10 (相减 (大小, 相除 (实际比例, 2)), 相减 (大小, 相除 (实际比例, 2)), 0)
未知支持库函数_21 (#)
未知支持库函数_48 (0.24, 0.93, 0.6, 0)
未知支持库函数_23 (0, 负 (大小), 0)
未知支持库函数_23 (负 (大小), 相乘 (负 (大小), 2), 0)

未知支持库函数_23 (相除 (负 (大小), 2), 相乘 (负 (大小), 2), 0)
未知支持库函数_23 (相除 (负 (大小), 2), 相乘 (负 (大小), 3), 0)
未知支持库函数_23 (相除 (大小, 2), 相乘 (负 (大小), 3), 0)
未知支持库函数_23 (相除 (大小, 2), 相乘 (负 (大小), 2), 0)

未知支持库函数_23 (大小, 相乘 (负 (大小), 2), 0)
未知支持库函数_22 ()
未知支持库函数_17 ()

未知支持库函数_16 ()
未知支持库函数_10 (相减 (相除 (实际比例, 2), 大小), 相加 (相除 (实际比例, 2), 相乘 (大小, 3)), 0)
未知支持库函数_21 (#)
未知支持库函数_48 (0.85, 0.55, 0.57, 0)
未知支持库函数_23 (0, 负 (大小), 0)
未知支持库函数_23 (负 (大小), 相乘 (负 (大小), 2), 0)

未知支持库函数_23 (相除 (负 (大小), 2), 相乘 (负 (大小), 2), 0)
未知支持库函数_23 (相除 (负 (大小), 2), 相乘 (负 (大小), 3), 0)
未知支持库函数_23 (相除 (大小, 2), 相乘 (负 (大小), 3), 0)
未知支持库函数_23 (相除 (大小, 2), 相乘 (负 (大小), 2), 0)

未知支持库函数_23 (大小, 相乘 (负 (大小), 2), 0)
未知支持库函数_22 ()
未知支持库函数_17 ()

未知支持库函数_69 ()

.子程序 显示位置, 空白型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 地图横坐标, 双精度小数型, , 
.参数 地图纵坐标, 双精度小数型, , 

.局部变量 大小, 双精度小数型, , , 

赋值 (大小, 相除 (实际比例, 长, 2))
未知支持库函数_16 ()
未知支持库函数_10 (相除 (相乘 (相减 (横向位置, 相除 (长, 2)), 实际比例), 长), 相除 (相乘 (相减 (纵向位置, 相除 (宽, 2)), 实际比例), 宽), 0) ' 左下角
未知支持库函数_10 (大小, 大小, 0)
未知支持库函数_21 (#)
未知支持库函数_48 (1, 0, 0, 0)
未知支持库函数_23 (0, 大小, 0)
未知支持库函数_23 (负 (大小), 0, 0)
未知支持库函数_23 (0, 负 (大小), 0)
未知支持库函数_23 (大小, 0, 0)
未知支持库函数_22 ()
未知支持库函数_17 ()

.子程序 画天空盒, 空白型, , 
.参数 横向纹理数量, 整数型, , 
.参数 竖向纹理数量, 整数型, , 
.参数 纵向纹理数量, 整数型, , 

.局部变量 点, 小数型, , "8,3", 

连续赋值 (-1, 点 [1] [1], 点 [2] [1], 点 [5] [1], 点 [6] [1]) ' x1,x2,x5,x6
连续赋值 (相加 (#地板长, 1), 点 [3] [1], 点 [4] [1], 点 [7] [1], 点 [8] [1]) ' x3,x4,x7,x8
连续赋值 (1, 点 [1] [3], 点 [4] [3], 点 [5] [3], 点 [8] [3]) ' z1,z4,z5,z8
连续赋值 (相减 (-1, #地板宽), 点 [2] [3], 点 [3] [3], 点 [6] [3], 点 [7] [3]) ' z2,z3,z6,z7
连续赋值 (相乘 (相除 (#地板长, 横向纹理数量), 竖向纹理数量), 点 [1] [2], 点 [2] [2], 点 [3] [2], 点 [4] [2]) ' y1,y2,y3,y4
未知支持库函数_68 (#天空列表号, #)
未知支持库函数_59 (#, #天空图片纹理号)
未知支持库函数_21 (#)
未知支持库函数_63 (0, 纵向纹理数量)
未知支持库函数_23 (点 [1] [1], 点 [1] [2], 点 [1] [3])
未知支持库函数_63 (0, 0)
未知支持库函数_23 (点 [2] [1], 点 [2] [2], 点 [2] [3])
未知支持库函数_63 (横向纹理数量, 0)
未知支持库函数_23 (点 [3] [1], 点 [3] [2], 点 [3] [3])
未知支持库函数_63 (横向纹理数量, 纵向纹理数量)
未知支持库函数_23 (点 [4] [1], 点 [4] [2], 点 [4] [3])
未知支持库函数_22 ()
 ' 上面
 ' 开始画 (#四边形)  ' xz多余
 ' 设置纹理映射坐标 (0, 纵向纹理数量)  ' xz
 ' 设置点 (点 [5] [1], 点 [5] [2], 点 [5] [3])  ' xz
 ' 设置纹理映射坐标 (0, 0)  ' xz
 ' 设置点 (点 [6] [1], 点 [6] [2], 点 [6] [3])  ' xz
 ' 设置纹理映射坐标 (竖向纹理数量, 0)  ' xz
 ' 设置点 (点 [2] [1], 点 [2] [2], 点 [2] [3])  ' xz
 ' 设置纹理映射坐标 (竖向纹理数量, 纵向纹理数量)  ' xz
 ' 设置点 (点 [1] [1], 点 [1] [2], 点 [1] [3])  ' xz
 ' 停止画 ()  ' xz
 ' ' 上面' xz
未知支持库函数_21 (#)
未知支持库函数_63 (0, 纵向纹理数量)
未知支持库函数_23 (点 [5] [1], 点 [5] [2], 点 [5] [3])
未知支持库函数_63 (0, 0)
未知支持库函数_23 (点 [6] [1], 点 [6] [2], 点 [6] [3])
未知支持库函数_63 (竖向纹理数量, 0)
未知支持库函数_23 (点 [2] [1], 点 [2] [2], 点 [2] [3])
未知支持库函数_63 (竖向纹理数量, 纵向纹理数量)
未知支持库函数_23 (点 [1] [1], 点 [1] [2], 点 [1] [3])
未知支持库函数_22 ()
 ' 左面
未知支持库函数_21 (#)
未知支持库函数_63 (0, 竖向纹理数量)
未知支持库函数_23 (点 [5] [1], 点 [5] [2], 点 [5] [3])
未知支持库函数_63 (0, 0)
未知支持库函数_23 (点 [1] [1], 点 [1] [2], 点 [1] [3])
未知支持库函数_63 (横向纹理数量, 0)
未知支持库函数_23 (点 [4] [1], 点 [4] [2], 点 [4] [3])
未知支持库函数_63 (横向纹理数量, 竖向纹理数量)
未知支持库函数_23 (点 [8] [1], 点 [8] [2], 点 [8] [3])
未知支持库函数_22 ()
 ' 前面
未知支持库函数_21 (#)
未知支持库函数_63 (0, 纵向纹理数量)
未知支持库函数_23 (点 [4] [1], 点 [4] [2], 点 [4] [3])
未知支持库函数_63 (0, 0)
未知支持库函数_23 (点 [3] [1], 点 [3] [2], 点 [3] [3])
未知支持库函数_63 (竖向纹理数量, 0)
未知支持库函数_23 (点 [7] [1], 点 [7] [2], 点 [7] [3])
未知支持库函数_63 (竖向纹理数量, 纵向纹理数量)
未知支持库函数_23 (点 [8] [1], 点 [8] [2], 点 [8] [3])
未知支持库函数_22 ()
 ' 右面
未知支持库函数_21 (#)
未知支持库函数_63 (0, 竖向纹理数量)
未知支持库函数_23 (点 [2] [1], 点 [2] [2], 点 [2] [3])
未知支持库函数_63 (0, 0)
未知支持库函数_23 (点 [6] [1], 点 [6] [2], 点 [6] [3])
未知支持库函数_63 (横向纹理数量, 0)
未知支持库函数_23 (点 [7] [1], 点 [7] [2], 点 [7] [3])
未知支持库函数_63 (横向纹理数量, 竖向纹理数量)
未知支持库函数_23 (点 [3] [1], 点 [3] [2], 点 [3] [3])
未知支持库函数_22 ()
 ' 后面
未知支持库函数_69 ()

.子程序 画指南针, 空白型, , 
.参数 大小, 双精度小数型, , 

赋值 (大小, 相除 (大小, 2))
未知支持库函数_68 (#指南针列表号, #)
未知支持库函数_50 (#)
未知支持库函数_50 (#)
未知支持库函数_51 (#)
未知支持库函数_34 (#, 0) ' 去除部分
未知支持库函数_59 (#, #指南针蒙板图片纹理号)
未知支持库函数_48 (0, 0, 0, 1)
未知支持库函数_21 (#)
未知支持库函数_63 (0, 0)
未知支持库函数_23 (负 (大小), 负 (大小), 0)
未知支持库函数_63 (1, 0)
未知支持库函数_23 (大小, 负 (大小), 0)
未知支持库函数_63 (1, 1)
未知支持库函数_23 (大小, 大小, 0)
未知支持库函数_63 (0, 1)
未知支持库函数_23 (负 (大小), 大小, 0)
未知支持库函数_22 ()
未知支持库函数_34 (1, 1) ' 保留部分
未知支持库函数_59 (#, #指南针图片纹理号)
未知支持库函数_48 (1, 1, 1, 1)
未知支持库函数_21 (#)
未知支持库函数_63 (0, 0)
未知支持库函数_23 (负 (大小), 负 (大小), 0)
未知支持库函数_63 (1, 0)
未知支持库函数_23 (大小, 负 (大小), 0)
未知支持库函数_63 (1, 1)
未知支持库函数_23 (大小, 大小, 0)
未知支持库函数_63 (0, 1)
未知支持库函数_23 (负 (大小), 大小, 0)
未知支持库函数_22 ()
未知支持库函数_51 (#)
未知支持库函数_50 (#)
未知支持库函数_69 ()

.子程序 画游戏标题文字, 空白型, , 
.参数 宽度, 双精度小数型, , 
.参数 高度, 双精度小数型, , 

赋值 (宽度, 相除 (宽度, 2))
赋值 (高度, 相除 (高度, 2))
未知支持库函数_68 (#文字列表号, #)
未知支持库函数_50 (#)
未知支持库函数_50 (#)
未知支持库函数_51 (#)
未知支持库函数_34 (#, 0) ' 去除部分
未知支持库函数_59 (#, #文字蒙板纹理号)
未知支持库函数_48 (0, 0, 0, 1)
未知支持库函数_21 (#)
未知支持库函数_63 (0, 0)
未知支持库函数_23 (负 (宽度), 负 (高度), 0)
未知支持库函数_63 (1, 0)
未知支持库函数_23 (宽度, 负 (高度), 0)
未知支持库函数_63 (1, 1)
未知支持库函数_23 (宽度, 高度, 0)
未知支持库函数_63 (0, 1)
未知支持库函数_23 (负 (宽度), 高度, 0)
未知支持库函数_22 ()
未知支持库函数_34 (1, 1) ' 保留部分
未知支持库函数_59 (#, #文字纹理号)
未知支持库函数_48 (1, 1, 1, 1)
未知支持库函数_21 (#)
未知支持库函数_63 (0, 0)
未知支持库函数_23 (负 (宽度), 负 (高度), 0)
未知支持库函数_63 (1, 0)
未知支持库函数_23 (宽度, 负 (高度), 0)
未知支持库函数_63 (1, 1)
未知支持库函数_23 (宽度, 高度, 0)
未知支持库函数_63 (0, 1)
未知支持库函数_23 (负 (宽度), 高度, 0)
未知支持库函数_22 ()
未知支持库函数_51 (#)
未知支持库函数_50 (#)
未知支持库函数_69 ()

.子程序 画门, 空白型, , 
未知支持库函数_68 (#门列表号, #)
未知支持库函数_16 ()
未知支持库函数_10 (0.625, 0, 相减 (负 (相除 (#柱子宽度一半, 2)), 0.001))
未知支持库函数_59 (#, #门纹理号)
未知支持库函数_21 (#)
未知支持库函数_57 (0, 0, 相乘 (-1, #墙壁高)) ' xz
未知支持库函数_63 (0, 1)
未知支持库函数_23 (0, #墙壁高, 0)
未知支持库函数_63 (0, 0)
未知支持库函数_23 (0, 0, 0)
未知支持库函数_63 (1, 0)
未知支持库函数_23 (-0.25, 0, 0)
未知支持库函数_63 (1, 1)
未知支持库函数_23 (-0.25, #墙壁高, 0)
未知支持库函数_22 ()
未知支持库函数_17 ()
未知支持库函数_16 ()
未知支持库函数_10 (相减 (#地板长, 0.625), 0, 相加 (相减 (相除 (#柱子宽度一半, 2), #地板宽), 0.001))
未知支持库函数_59 (#, #门纹理号)
未知支持库函数_21 (#)
未知支持库函数_57 (0, 0, #墙壁高) ' xz
未知支持库函数_63 (0, 1)
未知支持库函数_23 (0, #墙壁高, 0)
未知支持库函数_63 (0, 0)
未知支持库函数_23 (0, 0, 0)
未知支持库函数_63 (1, 0)
未知支持库函数_23 (0.25, 0, 0)
未知支持库函数_63 (1, 1)
未知支持库函数_23 (0.25, #墙壁高, 0)
未知支持库函数_22 ()
未知支持库函数_17 ()
未知支持库函数_69 ()

.子程序 绑定纹理图片, 空白型, , 
.参数 文件名, 文本型, , 
.参数 图片, 字节集, , 
.参数 纹理号, 空白型, , 

.局部变量 文件号, 空白型, , , 

赋值 (文件号, 打开文件 (文件名, #重写, ))
写出字节集 (文件号, 图片)
关闭文件 (文件号)
.如果 (不等于 (文件号, 0))
    未知支持库函数_59 (#, 纹理号)
    未知支持库函数_67 (文件名)
    未知支持库函数_60 (#, #, #)
    未知支持库函数_60 (#, #, #)
.否则
    信息框 (“创建纹理失败！”, 0, “错误”)
.如果结束


.子程序 创建纹理, 空白型, , 
.局部变量 文件名, 文本型, , , 

赋值 (文件名, 相加 (取运行目录 (), #临时文件名)) ' 指定临时文件名称
绑定纹理图片 (文件名, #地板, #地板图片纹理号)
绑定纹理图片 (文件名, #墙壁, #墙壁图片纹理号)
绑定纹理图片 (文件名, #天空, #天空图片纹理号)
绑定纹理图片 (文件名, #指南针, #指南针图片纹理号)
绑定纹理图片 (文件名, #指南针蒙板, #指南针蒙板图片纹理号)
绑定纹理图片 (文件名, #文字, #文字纹理号)
绑定纹理图片 (文件名, #文字蒙板, #文字蒙板纹理号)
绑定纹理图片 (文件名, #门, #门纹理号)
 ' 结束删除临时文件
.如果真 (取反 (删除文件 (文件名)))
    信息框 (“删除临时纹理文件失败！”, 0, “错误”)
.如果真结束


.程序集 迷宫程序集, , , 

.程序集变量 棋盘, 字节型, , "0", 
.程序集变量 迷宫变量, 字节型, , "0", 
.子程序 定义迷宫数据, 空白型, , 
.参数 长, 整数型, , 
.参数 宽, 整数型, , 
.参数 迷宫, 字节型, 参考 数组, 

.局部变量 横向循环变量, 整数型, , , 
.局部变量 纵向循环变量, 整数型, , , 
.局部变量 循环变量3, 整数型, , , 
.局部变量 随机数, 字节型, , , 
.局部变量 临时, 字节型, , "0", 
.局部变量 左边界, 逻辑型, , , 
.局部变量 右边界, 逻辑型, , , 
.局部变量 上边界, 逻辑型, , , 
.局部变量 下边界, 逻辑型, , , 

重定义数组 (迷宫变量, 假, 长, 宽, 4)
重定义数组 (棋盘, 假, 长, 宽)
产生通路 (1, 1, 长, 宽, 长, 宽)
重定义数组 (临时, 真, 长, 宽)
复制数组 (迷宫, 迷宫变量)

.子程序 产生通路, 空白型, , 
.参数 起点横向坐标, 整数型, , 
.参数 起点纵向坐标, 整数型, , 
.参数 终点横向坐标, 整数型, , 
.参数 终点纵向坐标, 整数型, , 
.参数 长, 整数型, , 
.参数 宽, 整数型, , 

.局部变量 循环变量1, 整数型, , , 
.局部变量 循环变量2, 整数型, , , 
.局部变量 起点, 整数型, 静态, "2", 
.局部变量 最近点, 整数型, 静态, "2", 
.局部变量 随机数, 整数型, , , 
.局部变量 继续循环, 逻辑型, , , 
.局部变量 排序数组, 整数型, , "2", 
.局部变量 前, 整数型, , , 
.局部变量 后, 整数型, , , 

赋值 (起点 [1], 起点横向坐标)
赋值 (起点 [2], 起点纵向坐标)
赋值 (棋盘 [起点] [1] [起点] [2], 1)
赋值 (最近点, 起点)
.计次循环首 (#折弯次数, 循环变量1)
    赋值 (前, 相加 (起点 [2], #最远折弯距离))
    赋值 (后, 相减 (起点 [2], #最远折弯距离))
    .如果真 (大于 (前, 宽))
        赋值 (前, 宽)
    .如果真结束
    .如果真 (小于 (后, 1))
        赋值 (后, 1)
    .如果真结束
    赋值 (随机数, 取随机数 (后, 前)) ' y
    .如果真 (取反 (并且 (等于 (起点 [1], 终点横向坐标), 等于 (随机数, 终点纵向坐标)))) ' 走到终点
        .如果真 (不等于 (起点 [2], 随机数)) ' 同一点
            赋值 (排序数组 [1], 起点 [2])
            赋值 (排序数组 [2], 随机数)
            数组排序 (排序数组, 真)
            .变量循环首 (相加 (排序数组 [1], 1), 排序数组 [2], 1, 循环变量2)
                赋值 (棋盘 [起点] [1] [循环变量2], 1)
                赋值 (迷宫变量 [起点] [1] [循环变量2] [2], 1) ' 下
            .变量循环尾 ()
            .变量循环首 (排序数组 [1], 相减 (排序数组 [2], 1), 1, 循环变量2)
                赋值 (迷宫变量 [起点] [1] [循环变量2] [4], 1) ' 上
            .变量循环尾 ()
            赋值 (起点 [2], 随机数)
        .如果真结束
        
    .如果真结束
    赋值 (前, 相加 (起点 [2], #最远折弯距离))
    赋值 (后, 相减 (起点 [2], #最远折弯距离))
    .如果真 (大于 (前, 宽))
        赋值 (前, 宽)
    .如果真结束
    .如果真 (小于 (后, 1))
        赋值 (后, 1)
    .如果真结束
    赋值 (随机数, 取随机数 (后, 前))
    .如果真 (不等于 (起点 [1], 随机数))
        赋值 (排序数组 [1], 随机数)
        赋值 (排序数组 [2], 起点 [1])
        数组排序 (排序数组, 真)
        .变量循环首 (相加 (排序数组 [1], 1), 排序数组 [2], 1, 循环变量2)
            赋值 (棋盘 [循环变量2] [起点] [2], 1)
            赋值 (迷宫变量 [循环变量2] [起点] [2] [1], 1) ' 左
        .变量循环尾 ()
        .变量循环首 (排序数组 [1], 相减 (排序数组 [2], 1), 1, 循环变量2)
            赋值 (迷宫变量 [循环变量2] [起点] [2] [3], 1) ' 右
        .变量循环尾 ()
        赋值 (起点 [1], 随机数)
    .如果真结束
    
.计次循环尾 ()
赋值 (继续循环, 真)
.变量循环首 (长, 1, -1, 循环变量1)
    .变量循环首 (宽, 1, -1, 循环变量2)
        .如果真 (等于 (棋盘 [循环变量1] [循环变量2], 1))
            赋值 (最近点 [1], 循环变量1)
            赋值 (最近点 [2], 循环变量2)
            赋值 (继续循环, 假)
            跳出循环 ()
        .如果真结束
        
    .变量循环尾 ()
    .如果真 (等于 (继续循环, 假))
        跳出循环 ()
    .如果真结束
    
.变量循环尾 ()

.变量循环首 (相加 (起点 [1], 1), 长, 1, 循环变量2)
    赋值 (棋盘 [循环变量2] [起点] [2], 1)
    赋值 (迷宫变量 [循环变量2] [起点] [2] [1], 1) ' 左
.变量循环尾 ()
.变量循环首 (起点 [1], 相减 (长, 1), 1, 循环变量2)
    赋值 (迷宫变量 [循环变量2] [起点] [2] [3], 1) ' 右
.变量循环尾 ()
赋值 (起点 [1], 长)

.变量循环首 (相加 (起点 [2], 1), 宽, 1, 循环变量2)
    赋值 (棋盘 [起点] [1] [循环变量2], 1)
    赋值 (迷宫变量 [起点] [1] [循环变量2] [2], 1) ' 下
.变量循环尾 ()
.变量循环首 (起点 [2], 相减 (宽, 1), 1, 循环变量2)
    赋值 (迷宫变量 [起点] [1] [循环变量2] [4], 1) ' 上
.变量循环尾 ()

.窗口程序集 启动窗口窗口程序集, , , 

.程序集变量 窗口, 窗口, , , 
.程序集变量 关于信息, 文本型, , , 
.子程序 __启动窗口_创建完毕, 空白型, , 
0.移动 (0, _启动窗口.取用户区宽度 (), _启动窗口.取用户区高度 ())
赋值 (关于信息, “-----我的OPenGL迷宫游戏-----
版本：1.0
制作成员姓名：
制作时间：
操作方法：
  退出游戏：Esc键
  窗口切换：F2
  前进：W键
  后退：S键
  左移：A键
  右移：D键
  开灯：L键
  雾化效果：F键
  小地图：M键
  上移小地图：上光标键
  下移小地图：下光标键
  左移小地图：左光标键
  右移小地图：右光标键
  确认：空格键”)
赋值 (.内容, 关于信息)

.子程序 读取进度, 空白型, , 
连续赋值 (真, .可视, .禁止, .禁止, .播放动画)
赋值 (.时钟周期, 500)
变量初始化 ()

.子程序 _时钟_显示进度条_周期事件, 空白型, , 
连续赋值 (假, .可视, .禁止, .禁止, .播放动画)
赋值 (.时钟周期, 0)
载入 (窗口, _启动窗口, 真)

.子程序 _图形按钮_开始游戏_被单击, 空白型, , 
赋值 (窗口, 窗口_游戏画面)
读取进度 ()

.子程序 _图形按钮_退出游戏_被单击, 空白型, , 
销毁 ()

.子程序 _按钮1_被单击, 空白型, , 
_图形按钮_开始游戏_被单击 ()


 ' 不属于任何一个程序集、类模块的函数：
