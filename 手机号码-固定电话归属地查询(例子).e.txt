 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口
    左边 = 50
    顶边 = 50
    宽度 = 288
    高度 = 449
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    窗口类名 = “”
    底图 =  ' 空
    图标 =  ' 已保存到：D:\易语言学习\Data\手机号码-固定电话归属地查询(例子).e\_启动窗口_图标.ico
    背景音乐 =  ' 空
    标题 = “手机号码-固定电话归属地查询”
    帮助文件名 = “”



.图片 图片_空闲, " ' 已保存到：D:\易语言学习\Data\手机号码-固定电话归属地查询(例子).e\图片_空闲", , 
.图片 图片_下载, " ' 已保存到：D:\易语言学习\Data\手机号码-固定电话归属地查询(例子).e\图片_下载", , 
.图片 图片_上传, " ' 已保存到：D:\易语言学习\Data\手机号码-固定电话归属地查询(例子).e\图片_上传", , 
.图片 图片_下载上传, " ' 已保存到：D:\易语言学习\Data\手机号码-固定电话归属地查询(例子).e\图片_下载上传", , 
.常量 POLICY_GET_PRIVATE_INFORMATION, "4", , 
.常量 INTERNET_OPEN_TYPE_DIRECT, "1", , 
.常量 INTERNET_OPEN_TYPE_PROXY, "3", , 
.常量 , , , 
.常量 INTERNET_SERVICE_HTTP, "3", , 
.常量 , , , 
.常量 WAIT_TIMEOUT, "258", , 超时
.图片 动态调用代码, " ' 已保存到：D:\易语言学习\Data\手机号码-固定电话归属地查询(例子).e\动态调用代码", , 
.常量 PAGE_EXECUTE_READWRITE, "64", , 
.常量 MEM_COMMIT, "4096", , 
.常量 MEM_RELEASE, "32768", , 
.常量 sizeof_int, "4", , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 5 0 系统核心支持库
 ' spec A512548E76954B6E92C21055517615B0 3 0 特殊功能支持库




数据类型 手机归属结构, , 
    .成员 手机号码, 文本型, , , 13000250525
    .成员 查询结果, 逻辑型, , , 真、假
    .成员 省份, 文本型, , , 江苏
    .成员 城市, 文本型, , , 南京
    .成员 归属地区号, 文本型, , , 025
    .成员 归属地邮编, 文本型, , , 210000
    .成员 所属供应商, 文本型, , , 中国联通
    .成员 卡类型, 文本型, , , GSM

数据类型 固定电话归属结构, , 
    .成员 归属地图片, 字节集, , , 
    .成员 号段电话分部区域, 文本型, , "1", 


.DLL命令 WideCharToMultiByte, 整数型, "kernel32.dll", "WideCharToMultiByte", , 
    .参数 CodePage, 整数型, , 
    .参数 dwFlags, 整数型, , 0
    .参数 lpWideCharStr, 字节集, , 
    .参数 cchMultiByte, 整数型, , -1
    .参数 lpMultiByteStr, 文本型, 传址, 
    .参数 cchMultiByte, 整数型, , 
    .参数 默认文本, 整数型, , 0
    .参数 使用默认文本, 整数型, , 0

.DLL命令 MultiByteToWideChar, 整数型, "kernel32.dll", "MultiByteToWideChar", , 
    .参数 CodePage, 整数型, , 
    .参数 dwFlags, 整数型, , 0
    .参数 lpMultiByteStr, 文本型, , 
    .参数 cchMultiByte, 整数型, , -1
    .参数 lpWideCharStr, 字节集, 传址, 
    .参数 cchWideChar, 整数型, , 

.DLL命令 GetPrivateProfileInt, 整数型, "kernel32", "GetPrivateProfileIntA", , 为初始化文件中指定的条目获取一个整数值　找到的条目的值；如指定的条目未找到，就返回默认值。如找到的数字不是一个合法的整数，函数会返回其中合法的一部分。如，对于“xyz=55zz”这个条目，函数返回55。这个函数也能理解采用标准C语言格式的十六进制数字：用0x作为一个十六进制数字的前缀――所以0x55ab等价于vb的&H55AB
    .参数 小节名, 字节集, , 指定在其中查找条目的小节。注意这个字串是不区分大小写的
    .参数 项目名, 文本型, , 欲获取的设置项或条目。这个支持不区分大小写
    .参数 默认返回值, 整数型, , 指定条目未找到时返回的默认值
    .参数 文件名, 文本型, , 初始化文件的名字。如果没有指定完整的路径名，windows就会在Windows目录中搜索文件;  

.DLL命令 WideCharToMultiByte_utf8, 整数型, "kernel32", "WideCharToMultiByte", , 将通配符映像为多字节
    .参数 CodePage, 整数型, , 
    .参数 dwFlags, 整数型, , 
    .参数 lpWideCharStr, 字节集, , 
    .参数 cchWideChar, 整数型, , 
    .参数 lpMultiByteStr, 字节集, , 
    .参数 cchMultiByte, 整数型, , 
    .参数 lpDefaultChar, 整数型, , 
    .参数 lpUsedDefaultChar, 整数型, , 

.DLL命令 加载COM, 空白型, "ole32.dll", "CoInitialize", , 
    .参数 pvReserved, 整数型, , 值为0

.DLL命令 卸载COM, 空白型, "ole32.dll", "CoUninitialize", , 

.DLL命令 InternetOpenA, 整数型, "WinINet.dll", "", , 
    .参数 lpszAgent, 文本型, , 
    .参数 dwAccessType, 整数型, , 
    .参数 lpszProxyName, 文本型, , 
    .参数 lpszProxyBypass, 文本型, , 
    .参数 dwFlags, 整数型, , 

.DLL命令 InternetCloseHandle, 逻辑型, "WinINet.dll", "", , 
    .参数 hInternet, 整数型, , 

.DLL命令 InternetConnectA, 整数型, "WinINet.dll", "", , 
    .参数 hInternet, 整数型, , 
    .参数 lpszServerName, 文本型, , 
    .参数 nServerPort, 整数型, , 
    .参数 lpszUserName, 文本型, , 
    .参数 lpszPassword, 文本型, , 
    .参数 dwService, 整数型, , 
    .参数 dwFlags, 整数型, , 
    .参数 dwContext, 整数型, , 

.DLL命令 HttpOpenRequestA, 整数型, "WinINet.dll", "", , 
    .参数 hConnect, 整数型, , 
    .参数 lpszVerb, 文本型, , 
    .参数 lpszObjectName, 文本型, , 
    .参数 lpszVersion, 文本型, , 
    .参数 lpszReferer, 文本型, , 
    .参数 lplpszAcceptTypes, 文本型, , 
    .参数 dwFlags, 整数型, , 
    .参数 dwContext, 整数型, , 

.DLL命令 HttpSendRequestA, 逻辑型, "WinINet.dll", "", , 
    .参数 hRequest, 整数型, , 
    .参数 lpszHeaders, 文本型, , 
    .参数 dwHeadersLength, 整数型, , 
    .参数 lpOptional, 文本型, , 
    .参数 dwOptionalLength, 整数型, , 

.DLL命令 InternetReadFile, 逻辑型, "WinINet.dll", "", , 
    .参数 hFile, 整数型, , 
    .参数 lpBuffer, 字节集, 传址, 
    .参数 dwNumberOfBytesToRead, 整数型, , 
    .参数 lpdwNumberOfBytesRead, 整数型, 传址, 

.DLL命令 HttpQueryInfoA, 逻辑型, "WinINet.dll", "", , 
    .参数 hRequest, 整数型, , 
    .参数 dwInfoLevel, 整数型, , 
    .参数 lpvBuffer, 文本型, 传址, 
    .参数 lpdwBufferLength, 整数型, 传址, 
    .参数 lpdwIndex, 整数型, , 

.DLL命令 CreateThread, 整数型, "", "", , 
    .参数 lpThreadAttributes, 整数型, , 
    .参数 dwStackSize, 整数型, , 
    .参数 lpStartAddress, 子程序指针, , 
    .参数 lpParameter, 整数型, , 
    .参数 dwCreationFlags, 整数型, , 
    .参数 lpThreadId, 整数型, 传址, 

.DLL命令 CloseHandle, 逻辑型, "", "", , 
    .参数 hObject, 整数型, , 

.DLL命令 TerminateThread, 逻辑型, "", "", , 
    .参数 hThread, 整数型, , 
    .参数 dwExitCode, 整数型, , 

.DLL命令 MsgWaitForMultipleObjects, 整数型, "", "", , 
    .参数 nCount, 整数型, , 
    .参数 pHandles, 整数型, 传址, 
    .参数 bWaitAll, 逻辑型, , 
    .参数 dwMilliseconds, 整数型, , 
    .参数 dwWakeMask, 整数型, , 

.DLL命令 设置COOKIE, 逻辑型, "wininet.dll", "InternetSetCookieA", , 
    .参数 域名, 文本型, 传址, 
    .参数 名称, 文本型, 传址, 
    .参数 内容, 文本型, 传址, 

.DLL命令 读取COOKIE, 逻辑型, "wininet.dll", "InternetGetCookieA", , 
    .参数 域名, 文本型, 传址, 
    .参数 名称, 文本型, 传址, 
    .参数 内容, 文本型, 传址, 
    .参数 尺寸, 整数型, 传址, 

.DLL命令 API_MultiByteToWideChar_utf8, 整数型, "", "MultiByteToWideChar", , 
    .参数 CodePage, 整数型, , 
    .参数 dwFlags, 整数型, , 
    .参数 lpMultiByteStr, 字节集, , 
    .参数 cchMultiByte, 整数型, , 
    .参数 lpWideCharStr, 字节集, , 
    .参数 cchWideChar, 整数型, , 

.DLL命令 GlobalSize_手机归属结构, 整数型, "kernel32.dll", "GlobalSize", , 取结构尺寸
    .参数 结构, 手机归属结构, 传址, 

.程序集 程序集1, , , 

.子程序 查询手机归属地, 手机归属结构, , 
.参数 手机号码, 文本型, , 
.参数 号码吉凶, 文本型, 参考 可空, 

.局部变量 临时输出文本, 文本型, , , 
.局部变量 状态文本, 文本型, , , 
.局部变量 手机归属结构_, 手机归属结构, , , 
.局部变量 出现位置, 整数型, , , 



.如果真 (不等于 (取文本长度 (), 11))
    赋值 (手机归属结构_.查询结果, 假)
    赋值 (手机归属结构_.省份, “手机号码错误，位数不对。”)
    赋值 (手机归属结构_.城市, “手机号码错误，位数不对。”)
    赋值 (手机归属结构_.归属地区号, “手机号码错误，位数不对。”)
    赋值 (手机归属结构_.归属地邮编, “手机号码错误，位数不对。”)
    赋值 (手机归属结构_.所属供应商, “手机号码错误，位数不对。”)
    赋值 (手机归属结构_.卡类型, “手机号码错误，位数不对。”)
    
    返回 (手机归属结构_)
.如果真结束
赋值 (手机归属结构_.手机号码, )
赋值 (临时输出文本, 编码转换_Utf8转ansi (访问网页 (相加 (“http://vip.showji.com/locating/?m=”, 手机号码, “&outfmt=json&callback=phone.callBack”), , , , , 相加 (“Referer:http://www.hao123.com/haoserver/showjicc.htm”, #换行符, “Accept-Language:zh-cn”, #换行符, “User-Agent:Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; TencentTraveler 4.0; EmbeddedWB 14.52 from: http://www.bsalsa.com/ EmbeddedWB 14.52; .NET CLR 2.0.50727; .NET CLR 3.0.04506.648; .NET CLR 3.5.21022; .NET4.0C; .NET4.0E; InfoPath.3; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729)”, #换行符, “Accept-Encoding:gzip, deflate”), , , )))

.如果真 (等于 (临时输出文本, “”))
    赋值 (手机归属结构_.查询结果, 假)
    赋值 (手机归属结构_.省份, “网络故障，未能查询到结果。”)
    赋值 (手机归属结构_.城市, “网络故障，未能查询到结果。”)
    赋值 (手机归属结构_.归属地区号, “网络故障，未能查询到结果。”)
    赋值 (手机归属结构_.归属地邮编, “网络故障，未能查询到结果。”)
    赋值 (手机归属结构_.所属供应商, “网络故障，未能查询到结果。”)
    赋值 (手机归属结构_.卡类型, “网络故障，未能查询到结果。”)
    
    返回 ()
    
.如果真结束


赋值 (手机归属结构_.查询结果, 选择 (等于 (高级截取文本 (临时输出文本, 相加 (“QueryResult”, #引号, “:”, #引号), 相加 (#引号, “,”, #引号, “Province”), , , , 出现位置, ), “True”), 真, 假))

.如果真 (等于 (手机归属结构_.查询结果, 假))
    赋值 (., “未能查询到结果。”)
    赋值 (., “未能查询到结果。”)
    赋值 (., “未能查询到结果。”)
    赋值 (., “未能查询到结果。”)
    赋值 (., “未能查询到结果。”)
    赋值 (., “未能查询到结果。”)
    
    返回 ()
    
    
.如果真结束

赋值 (手机归属结构_.省份, 高级截取文本 (临时输出文本, 相加 (“Province”, #引号, “:”, #引号), 相加 (#引号, “,”, #引号, “City”), 相加 (出现位置, 3), , , 出现位置, ))
赋值 (手机归属结构_.城市, 高级截取文本 (临时输出文本, 相加 (“City”, #引号, “:”, #引号), 相加 (#引号, “,”, #引号, “AreaCode”), 相加 (出现位置, 3), , , 出现位置, ))
赋值 (手机归属结构_.归属地区号, 高级截取文本 (临时输出文本, 相加 (“AreaCode”, #引号, “:”, #引号), 相加 (#引号, “,”, #引号, “PostCode”), 相加 (出现位置, 3), , , 出现位置, ))
赋值 (手机归属结构_.归属地邮编, 高级截取文本 (临时输出文本, 相加 (“PostCode”, #引号, “:”, #引号), 相加 (#引号, “,”, #引号, “Corp”), 相加 (出现位置, 3), , , 出现位置, ))
赋值 (手机归属结构_.所属供应商, 高级截取文本 (临时输出文本, 相加 (“Corp”, #引号, “:”, #引号), 相加 (#引号, “,”, #引号, “Card”), 相加 (出现位置, 3), , , 出现位置, ))
赋值 (手机归属结构_.卡类型, 高级截取文本 (临时输出文本, 相加 (“Card”, #引号, “:”, #引号), 相加 (#引号, “});”), 相加 (出现位置, 3), , , , ))



.如果真 (等于 (是否为空 (号码吉凶), 假))
    
    赋值 (临时输出文本, 编码转换_Utf8转ansi (访问网页 (相加 (“http://jixiong.showji.com/api.aspx?m=”, 手机号码, “&output=json&callback=querycallback”), , , , , 相加 (“Referer:http://jixiong.showji.com/”, #换行符, “Accept-Language:zh-cn”, #换行符, “User-Agent:Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; TencentTraveler 4.0; EmbeddedWB 14.52 from: http://www.bsalsa.com/ EmbeddedWB 14.52; .NET CLR 2.0.50727; .NET CLR 3.0.04506.648; .NET CLR 3.5.21022; .NET4.0C; .NET4.0E; InfoPath.3; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729)”, #换行符, “Accept-Encoding:gzip, deflate”), , , )))
    .判断开始 (不等于 (临时输出文本, “”))
        赋值 (号码吉凶, 相加 (“吉凶分析： ”, 高级截取文本 (临时输出文本, 相加 (#引号, “,”, #引号, “JXDetail”, #引号, “:”, #引号), 相加 (#引号, “,”, #引号, “GX”, #引号, “:”, #引号), , , , , ), “(”, 高级截取文本 (临时输出文本, 相加 (#引号, “,”, #引号, “JX”, #引号, “:”, #引号), 相加 (#引号, “,”, #引号, “JXDetail”, #引号, “:”, #引号), , , , , ), “)”, #换行符, “主人个性： ”, 高级截取文本 (临时输出文本, 相加 (#引号, “,”, #引号, “GX”, #引号, “:”, #引号), 相加 (#引号, “,”, #引号, “GXDetail”, #引号, “:”, #引号), , , , , ), #换行符, “具体表现： ”, 高级截取文本 (临时输出文本, 相加 (#引号, “,”, #引号, “GXDetail”, #引号, “:”, #引号), 相加 (#引号, “})”))))
        
    .默认
        赋值 (号码吉凶, “未能获取你要的吉凶查询。”)
    .判断结束
    
.如果真结束



返回 (手机归属结构_)





.子程序 查询固定电话归属地, 固定电话归属结构, 公开, 
.参数 电话号码, 文本型, , 

.局部变量 固定电话归属结构_, 固定电话归属结构, , , 
.局部变量 临时输出文本, 文本型, , , 
.局部变量 图片地址, 文本型, , , 
.局部变量 寻找位置, 整数型, , , 
.局部变量 计次, 整数型, , , 


.如果真 (等于 (寻找文本 (电话号码, “-”, , 假), -1))
    赋值 (固定电话归属结构_.号段电话分部区域 [1], “电话号码格式错误。”)
    返回 (固定电话归属结构_)
.如果真结束


 ' 赋值 (临时输出文本, 编码转换_Utf8转ansi (访问网页 (相加 (“http://www.114best.com/dh/114?w=”, 电话号码), , , , , 相加 (“Accept:image/gif, image/jpeg, image/pjpeg, image/pjpeg, application/x-shockwave-flash, application/x-ms-application, application/x-ms-xbap, application/vnd.ms-xpsdocument, application/xaml+xml, application/QVOD, application/QVOD, application/vnd.ms-excel, application/vnd.ms-powerpoint, application/msword, */*”, #换行符, “Referer:http://www.114best.com/dh/114?w=”, #换行符, “Accept-Language:zh-cn”, #换行符, “User-Agent:Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; TencentTraveler 4.0; EmbeddedWB 14.52 from: http://www.bsalsa.com/ EmbeddedWB 14.52; .NET CLR 2.0.50727; .NET CLR 3.0.04506.648; .NET CLR 3.5.21022; .NET4.0C; .NET4.0E; InfoPath.3; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729)”, #换行符, “Accept-Encoding:gzip, deflate”), , , )))

调试输出 (临时输出文本)

.如果真 (等于 (临时输出文本, “”))
    赋值 (固定电话归属结构_.号段电话分部区域 [1], “网络故障，未能查询到相关的数据。”)
    返回 ()
.如果真结束



赋值 (图片地址, 相加 (“http://www.114best.com”, 高级截取文本 (临时输出文本, 相加 (“该电话号码归属地：</td><td class='bb'> <img src=”, #引号), 相加 (#引号, “></td></tr></table></div>”), )))

赋值 (固定电话归属结构_.归属地图片, {  })
 ' http://www.114best.com/dhpic/48938AA28CC7BF3A6B.gif
赋值 (固定电话归属结构_.归属地图片, 访问网页 (图片地址, , , , , 相加 (“Accept:image/gif, image/jpeg, image/pjpeg, image/pjpeg, application/x-shockwave-flash, application/x-ms-application, application/x-ms-xbap, application/vnd.ms-xpsdocument, application/xaml+xml, application/QVOD, application/QVOD, application/vnd.ms-excel, application/vnd.ms-powerpoint, application/msword, */*”, #换行符, “Referer:http://www.114best.com/dh/114.aspx?w=”, 电话号码, #换行符, “Accept-Language:zh-cn”, #换行符, “User-Agent:Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; TencentTraveler 4.0; EmbeddedWB 14.52 from: http://www.bsalsa.com/ EmbeddedWB 14.52; .NET CLR 2.0.50727; .NET CLR 3.0.04506.648; .NET CLR 3.5.21022; .NET4.0C; .NET4.0E; InfoPath.3; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729)”, #换行符, “Accept-Encoding:gzip, deflate”), , , ))
.如果真 (等于 (固定电话归属结构_.归属地图片, {  }))
    赋值 (固定电话归属结构_.号段电话分部区域 [1], “网络故障，未能查询到相关的数据。”)
    返回 (固定电话归属结构_)
.如果真结束


赋值 (寻找位置, 寻找文本 (临时输出文本, “<span>”, , 假))
赋值 (计次, 0)

.判断循环首 (不等于 (寻找位置, -1))
    赋值 (计次, 相加 (计次, 1))
    重定义数组 (固定电话归属结构_.号段电话分部区域, 真, 计次)
     ' 赋值 (固定电话归属结构_.号段电话分部区域 [计次], 高级截取文本 (临时输出文本, “<span>”, “</span>”, 相减 (寻找位置, 1), , , 寻找位置, ))
    赋值 (寻找位置, 寻找文本 (临时输出文本, “<span>”, 寻找位置, 假))
    
.判断循环尾 ()

返回 (固定电话归属结构_)


.程序集 公共程序集, , , 

.子程序 Ansi转Unicode, 字节集, , 
.参数 Ansi, 文本型, , 

.局部变量 长度, 整数型, , , 
.局部变量 Unicode, 字节集, , , 

赋值 (长度, 相乘 (MultiByteToWideChar (936, 0, Ansi, -1, {  }, 0), 2))
赋值 (Unicode, 取空白字节集 (长度))
MultiByteToWideChar (936, 0, Ansi, -1, Unicode, 长度)
返回 (Unicode)


.子程序 Unicode转Ansi, 文本型, , 
.参数 Unicode, 字节集, , 

.局部变量 新长度, 整数型, , , 
.局部变量 原长度, 整数型, , , 
.局部变量 文本, 文本型, , , 

赋值 (原长度, 相除 (取字节集长度 (Unicode), 2))
赋值 (新长度, WideCharToMultiByte (936, 0, Unicode, 原长度, 文本, 0, 0, 0))
赋值 (文本, 取空白文本 (新长度))
WideCharToMultiByte (936, 0, Unicode, 原长度, 文本, 新长度, 0, 0)
返回 (文本)


.子程序 取字节集地址, 整数型, , 
.参数 字节集, 字节集, , 

置入代码 ({ 139, 69, 8, 139, 0, 133, 192, 116, 3, 131, 192, 8, 139, 229, 93, 194, 4, 0 })
返回 (0)

.子程序 字节型数组到文本, 文本型, , 
.参数 字节, 字节型, 数组, 

.局部变量 i, 整数型, , , 
.局部变量 ret, 文本型, , , 

赋值 (ret, “”)
.计次循环首 (取数组成员数 (字节), i)
    .如果 (不等于 (字节 [i], 0))
        赋值 (ret, 相加 (ret, 字符 (字节 [i])))
    .否则
        跳出循环 ()
    .如果结束
    
.计次循环尾 ()
返回 (ret)

.子程序 文本到字节型数组, 空白型, , 
.参数 字节, 字节型, 参考 数组, 
.参数 文本, 文本型, , 

.局部变量 i, 整数型, , , 
.局部变量 ret, 字节集, , , 

赋值 (i, 取文本长度 (文本))
重定义数组 (字节, 假, 相加 (i, 2))
.计次循环首 (取数组成员数 (字节), i)
    赋值 (字节 [i], 取代码 (取文本中间 (文本, i, 1), ))
.计次循环尾 ()

.子程序 AnsiToUtf8, 字节集, , 
.参数 ansi文本, 文本型, , 

返回 (UnicodeToUtf8 (AnsiToUnicode (ansi文本)))

.子程序 AnsiToUnicode, 字节集, , 
.参数 Ansi文本, 文本型, , 

.局部变量 len, 整数型, , , 单位: Word
.局部变量 Unicode字节集, 字节集, , , 

赋值 (len, MultiByteToWideChar (936, 0, Ansi文本, -1, {  }, 0))
赋值 (Unicode字节集, 取空白字节集 (相乘 (len, 2)))
MultiByteToWideChar (936, 0, Ansi文本, -1, Unicode字节集, 相乘 (len, 2))
返回 (Unicode字节集)

.子程序 UnicodeToUtf8, 字节集, , 
.参数 Unicode字节集, 字节集, , 

.局部变量 utf8_len, 整数型, , , 
.局部变量 unicode_len, 整数型, , , word
.局部变量 uft8, 字节集, , , 

赋值 (unicode_len, 相除 (取字节集长度 (Unicode字节集), 2))
赋值 (utf8_len, WideCharToMultiByte_utf8 (65001, 0, Unicode字节集, unicode_len, uft8, 0, 0, 0))
赋值 (uft8, 取空白字节集 (utf8_len))
WideCharToMultiByte_utf8 (65001, 0, Unicode字节集, -1, uft8, utf8_len, 0, 0)
返回 (uft8)

.子程序 编码转换_Utf8转ansi, 文本型, 公开, 
.参数 utf8字节集, 字节集, , 

返回 (未知函数_67174713 (未知函数_67174714 (utf8字节集)))

.子程序 Utf8转unicode, 字节集, 公开, 
.参数 utf8字节集, 字节集, , 

.局部变量 len, 整数型, , , 单位: Word
.局部变量 Unicode字节集, 字节集, , , 
.局部变量 ll, 空白型, , , 

赋值 (ll, 取字节集长度 (utf8字节集))
赋值 (len, 未知函数_167838011 (65001, 0, utf8字节集, ll, {  }, 0))
 ' 936 表示简体中文代码页; -1 表示以"0"作为文本终止符
 ' 如果要去掉转换后Unicode字节集末尾的{0,0}，则Unicode长度再减去1
赋值 (Unicode字节集, 取空白字节集 (相乘 (len, 2)))
未知函数_167838011 (65001, 0, utf8字节集, ll, Unicode字节集, 相乘 (len, 2))
返回 (Unicode字节集)

.子程序 高级截取文本, 文本型, , 
.参数 完整内容, 文本型, , 
.参数 左边文本, 文本型, , 
.参数 右边文本, 文本型, , 
.参数 开始位置, 整数型, 可空, 可指定开始寻找的位置，为空则不指定
.参数 文本长度, 整数型, 参考 可空, 用一个变量来接收找到的文本长度
.参数 最大长度, 整数型, 可空, 指定返回的文本的最大长度。为空则返回全部
.参数 出现位置, 整数型, 参考 可空, 用一个变量来接收找到的位置
.参数 长度限制, 逻辑型, 可空, 是否只返回 长度不超过 最大长度 的文本，如果超出则返回空文本？

.局部变量 临时位置_左边, 整数型, , , 
.局部变量 临时位置_右边, 整数型, , , 
.局部变量 临时文本, 文本型, , , 

.如果 (是否为空 (开始位置))
    赋值 (临时位置_左边, 寻找文本 (完整内容, 左边文本, , 假))
.否则
    赋值 (临时位置_左边, 寻找文本 (完整内容, 左边文本, 开始位置, 假))
.如果结束
.如果真 (等于 (临时位置_左边, -1))
    返回 (“”)
.如果真结束
赋值 (临时位置_左边, 相加 (临时位置_左边, 取文本长度 (左边文本)))
赋值 (出现位置, 临时位置_左边)
赋值 (临时位置_右边, 寻找文本 (完整内容, 右边文本, 临时位置_左边, 假))
.如果真 (或者 (等于 (临时位置_右边, -1), 大于 (临时位置_左边, 临时位置_右边)))
    返回 (“”)
.如果真结束
赋值 (文本长度, 相减 (临时位置_右边, 临时位置_左边))
.如果真 (并且 (长度限制, 大于 (文本长度, 最大长度)))
    返回 (“”)
.如果真结束
赋值 (临时文本, 取文本中间 (完整内容, 临时位置_左边, 文本长度))
.如果真 (等于 (是否为空 (最大长度), 假))
    赋值 (临时文本, 取文本左边 (临时文本, 最大长度))
.如果真结束
返回 (临时文本)

.程序集 HTTP, , , 

.子程序 访问网页, 字节集, , 
.参数 完整网址, 文本型, , 
.参数 访问方式, 文本型, 可空, "GET" or "POST",为空默认"GET"
.参数 代理地址, 文本型, 可空, 
.参数 用户名, 文本型, 可空, 
.参数 密码, 文本型, 可空, 
.参数 附加协议头, 文本型, 可空, 
.参数 提交信息, 文本型, 可空, "POST"专用
.参数 超时值, 整数型, 可空, 单位秒，默认90
.参数 返回状态文本, 文本型, 参考 可空, 在Send之后可以获取状态文本

.局部变量 hThread, 整数型, , , 
.局部变量 ret, 整数型, , , 
.局部变量 hMemFile, 整数型, , , 
.局部变量 szFlag, 文本型, , , 
.局部变量 szRequest, 文本型, , , 
.局部变量 lpBody, 字节集, , , 

赋值 (hMemFile, 打开内存文件 ())
写出数据 (hMemFile, “MissWho”, 完整网址, 访问方式, 代理地址, 用户名, 密码, 附加协议头, 提交信息)
未知函数_244 () ' *** 缩略程序块 ***
 ' szFullAddr ＝ 完整网址
 ' szVerb ＝ 访问方式
 ' szProxyServer ＝ 代理地址
 ' szHeaders ＝ 附加协议头
 ' szSendBody ＝ 提交信息
 ' lpBody ＝ {  }
.如果真 (或者 (是否为空 (超时值), 等于 (超时值, 0)))
    赋值 (超时值, 90)
.如果真结束
赋值 (hThread, CreateThread (0, 0, &ReadFile, hMemFile, 0, 0))
.循环判断首 ()
    赋值 (ret, MsgWaitForMultipleObjects (1, hThread, 假, 相乘 (超时值, 1000), 1215))
    处理事件 ()
.循环判断尾 (并且 (不等于 (ret, 0), 不等于 (ret, 258)))
TerminateThread (hThread, 0)
CloseHandle (hThread)
移到文件首 (hMemFile)
读入数据 (hMemFile, szFlag, szRequest, lpBody)
关闭文件 (hMemFile)
.如果真 (或者 (不等于 (szFlag, “MissWho_OK”), 等于 (ret, 258)))
    赋值 (lpBody, {  })
.如果真结束
.如果真 (等于 (是否为空 (返回状态文本), 假))
    赋值 (返回状态文本, szRequest)
.如果真结束
 ' 连续赋值 (字符 (0), szFullAddr, szVerb, szProxyServer, szHeaders, szSendBody, szRequest)
返回 (lpBody)

.子程序 ReadFile, 逻辑型, , 
.参数 hMemFile, 整数型, , 

.局部变量 szFlag, 文本型, , , 
.局部变量 szFullAddr, 文本型, , , 
.局部变量 szVerb, 文本型, , , "GET" or "POST",为空默认"GET"
.局部变量 szProxyServer, 文本型, , , 
.局部变量 szUserName, 文本型, , , 
.局部变量 szPassword, 文本型, , , 
.局部变量 szHeaders, 文本型, , , 
.局部变量 szSendBody, 文本型, , , "POST"专用
.局部变量 szRequest, 文本型, , , 
.局部变量 hMemBody, 整数型, , , 
.局部变量 匿名局部变量_135, 空白型, , , 
.局部变量 hOpen, 整数型, , , 
.局部变量 hConnect, 整数型, , , 
.局部变量 hRequest, 整数型, , , 
.局部变量 szDomain, 文本型, , , 
.局部变量 szPageAddr, 文本型, , , 
.局部变量 bUseProxy, 逻辑型, , , 
.局部变量 lpBuffer, 字节集, , , 
.局部变量 dwNumber, 整数型, , , 

.如果真 (等于 (hMemFile, 0))
    返回 (假)
.如果真结束
移到文件首 (hMemFile)
读入数据 (hMemFile, szFlag)
.如果真 (不等于 (szFlag, “MissWho”))
    返回 (假)
.如果真结束
读入数据 (hMemFile, szFullAddr, szVerb, szProxyServer, szUserName, szPassword, szHeaders, szSendBody)
移到文件首 (hMemFile)
删除数据 (hMemFile, 取文件长度 (hMemFile))
赋值 (szDomain, 取域名 (szFullAddr))
赋值 (szPageAddr, 取页面地址 (szFullAddr))
赋值 (bUseProxy, 不等于 (删全部空 (szProxyServer), “”))

 ' 建立基础连接
赋值 (hOpen, InternetOpenA (“Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.0)”, 选择 (bUseProxy, 3, 1), 选择 (bUseProxy, 相加 (“http=”, szProxyServer), 字符 (0)), 字符 (0), 0))
.如果真 (等于 (hOpen, 0))
    返回 (假)
.如果真结束
赋值 (hConnect, InternetConnectA (hOpen, szDomain, 取端口 (szFullAddr), 选择 (不等于 (删全部空 (szUserName), “”), szUserName, 字符 (0)), 选择 (不等于 (删全部空 (szPassword), “”), szPassword, 字符 (0)), #INTERNET_SERVICE_HTTP, 0, 0))
.如果真 (等于 (hConnect, 0))
    InternetCloseHandle (hOpen)
    返回 (假)
.如果真结束
赋值 (hRequest, HttpOpenRequestA (hConnect, szVerb, szPageAddr, “HTTP/1.1”, 字符 (0), 字符 (0), 2147483648, 0))
.如果真 (等于 (hRequest, 0))
    InternetCloseHandle (hConnect)
    InternetCloseHandle (hOpen)
    返回 (假)
.如果真结束

 ' 补充协议头
.如果真 (等于 (寻找文本 (szHeaders, “Accept: ”, 1, 真), -1))
    赋值 (szHeaders, 相加 (szHeaders, “Accept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, application/x-shockwave-flash, application/vnd.ms-excel, application/vnd.ms-powerpoint, application/msword, */*”, #换行符))
.如果真结束
.如果真 (等于 (寻找文本 (szHeaders, “Referer: ”, 1, 真), -1))
    赋值 (szHeaders, 相加 (szHeaders, “Referer: ”, szFullAddr, #换行符))
.如果真结束
.如果真 (等于 (寻找文本 (szHeaders, “Accept-Language: ”, 1, 真), -1))
    赋值 (szHeaders, 相加 (szHeaders, “Accept-Language: zh-cn”, #换行符))
.如果真结束

 ' 附带信息发送请求
.判断开始 (或者 (等于 (szVerb, “”), 等于 (到大写 (szVerb), “GET”)))
    HttpSendRequestA (hRequest, szHeaders, 取文本长度 (szHeaders), 字符 (0), 0)
.判断 (等于 (到大写 (szVerb), “POST”))
    .如果真 (不等于 (szSendBody, “”))
        .如果真 (等于 (寻找文本 (szHeaders, “Content-Type: ”, 1, 真), -1))
            赋值 (szHeaders, 相加 (szHeaders, “Content-Type: application/x-www-form-urlencoded”, #换行符))
        .如果真结束
        赋值 (szHeaders, 相加 (szHeaders, “Content-Length: ”, 到文本 (取文本长度 (szSendBody)), #换行符))
    .如果真结束
    HttpSendRequestA (hRequest, szHeaders, 取文本长度 (szHeaders), szSendBody, 取文本长度 (szSendBody))
.默认
    InternetCloseHandle (hRequest)
    InternetCloseHandle (hConnect)
    InternetCloseHandle (hOpen)
    返回 (假)
.判断结束

 ' 读取页面数据
赋值 (hMemBody, 打开内存文件 ())
.循环判断首 ()
    赋值 (lpBuffer, 取空白字节集 (512))
    InternetReadFile (hRequest, lpBuffer, 取字节集长度 (lpBuffer), dwNumber)
     ' 避免文件过大造成的字节集相加降低效率，这里使用内存文件操作。
    写出字节集 (hMemBody, 取字节集左边 (lpBuffer, dwNumber))
     ' lpBody ＝ lpBody ＋ 取字节集左边 (lpBuffer, dwNumber)
.循环判断尾 (不等于 (dwNumber, 0))

 ' 取服务器回传协议头
赋值 (szRequest, 取空白文本 (1024))
HttpQueryInfoA (hRequest, 22, szRequest, 1024, 0)

移到文件首 (hMemBody)
移到文件首 (hMemFile)
写出数据 (hMemFile, “MissWho_OK”, szRequest, 读入字节集 (hMemBody, 取文件长度 (hMemBody)))
关闭文件 (hMemBody)

 ' 关闭句柄
InternetCloseHandle (hRequest)
InternetCloseHandle (hConnect)
InternetCloseHandle (hOpen)

 ' 设置COOKIE
.如果真 (大于 (寻找文本 (szRequest, “Set-Cookie: ”, 1, 真), 0))
    赋值 (dwNumber, 打开内存文件 ())
    写出文本 (dwNumber, szRequest)
    移到文件首 (dwNumber)
    .判断循环首 (等于 (是否在文件尾 (dwNumber, 假), 假))
        赋值 (szPageAddr, 读入一行 (dwNumber))
        .如果真 (大于 (寻找文本 (szPageAddr, “Set-Cookie: ”, 1, 真), 0))
            赋值 (szPageAddr, 文本替换 (szPageAddr, 1, 12, ))
            赋值 (hRequest, 寻找文本 (szPageAddr, “=”, 1, 真))
            设置COOKIE (相加 (“http://”, szDomain), 取文本左边 (szPageAddr, 相减 (hRequest, 1)), 取文本右边 (szPageAddr, 相减 (取文本长度 (szPageAddr), hRequest)))
        .如果真结束
        
    .判断循环尾 ()
    关闭文件 (dwNumber)
.如果真结束
返回 (真)

.子程序 取域名, 文本型, , 
.参数 网址, 文本型, , 
.参数 不过滤端口, 逻辑型, 可空, 

.局部变量 dwNumber, 整数型, , , 
.局部变量 dwLast, 整数型, , , 
.局部变量 szServerName, 文本型, , , 

赋值 (szServerName, 网址)
赋值 (dwNumber, 选择 (等于 (寻找文本 (szServerName, “http://”, , 假), -1), 1, 相加 (寻找文本 (szServerName, “http://”, , 假), 7)))
赋值 (szServerName, 取文本中间 (szServerName, dwNumber, 选择 (等于 (寻找文本 (szServerName, “/”, dwNumber, 假), -1), 取文本长度 (szServerName), 相减 (寻找文本 (szServerName, “/”, dwNumber, 假), dwNumber)))) ' 这段代码是过滤掉前http://和后/
.如果真 (取反 (不过滤端口))
    赋值 (dwNumber, 寻找文本 (szServerName, “:”, , 假))
    .如果真 (不等于 (dwNumber, -1))
        赋值 (szServerName, 取文本左边 (szServerName, 相减 (dwNumber, 1)))
    .如果真结束
    
.如果真结束
返回 (到小写 (szServerName))

.子程序 取端口, 整数型, , 
.参数 网址, 文本型, , 

.局部变量 dwNumber, 整数型, , , 
.局部变量 szServerName, 文本型, , , 

赋值 (szServerName, 取域名 (网址, 真))
赋值 (dwNumber, 寻找文本 (szServerName, “:”, , 假))
赋值 (dwNumber, 选择 (等于 (dwNumber, -1), 80, 到数值 (取文本右边 (szServerName, 相减 (取文本长度 (szServerName), dwNumber)))))
返回 (dwNumber)

.子程序 取页面地址, 文本型, , 
.参数 网址, 文本型, , 

.局部变量 页面地址, 文本型, , , 
.局部变量 符号位置, 整数型, , , 
.局部变量 域名, 文本型, , , 

赋值 (域名, 取域名 (网址))
赋值 (符号位置, 寻找文本 (网址, “/”, 寻找文本 (网址, 域名, 1, 真), 真))
赋值 (页面地址, 选择 (等于 (符号位置, -1), “/”, 取文本右边 (网址, 相加 (相减 (取文本长度 (网址), 符号位置), 1))))
返回 (页面地址)

.子程序 取COOKIE, 文本型, , 
.参数 网址, 文本型, , 
.参数 COOKIE名称, 文本型, 可空, 为空返回全部COOKIE

.局部变量 域名, 文本型, , , 
.局部变量 读取内容, 文本型, , , 
.局部变量 整数容器1, 整数型, , , 
.局部变量 整数容器2, 整数型, , , 

赋值 (域名, 取域名 (网址))
赋值 (读取内容, 取空白文本 (256))
.如果 (读取COOKIE (相加 (“http://”, 域名), “”, 读取内容, 255))
    .如果真 (不等于 (COOKIE名称, “”))
        赋值 (整数容器1, 寻找文本 (读取内容, COOKIE名称, 1, 真))
        .如果真 (等于 (整数容器1, -1))
            返回 (“”)
        .如果真结束
        赋值 (整数容器2, 寻找文本 (读取内容, “;”, 整数容器1, 真))
        .如果 (大于 (整数容器2, 0))
            赋值 (读取内容, 取文本中间 (读取内容, 相加 (整数容器1, 取文本长度 (COOKIE名称), 1), 相减 (整数容器2, 整数容器1, 取文本长度 (COOKIE名称), 1)))
        .否则
            赋值 (读取内容, 取文本右边 (读取内容, 相减 (取文本长度 (读取内容), 整数容器1, 取文本长度 (COOKIE名称))))
        .如果结束
        
    .如果真结束
    返回 (读取内容)
.否则
    返回 (“”)
.如果结束


.窗口程序集 窗口程序集1, , , 

.子程序 _按钮1_被单击, 空白型, , 
.局部变量 字节集地址, 整数型, , , 
.局部变量 固定电话归属结构_, 未知类型0x4101013D, , , 
.局部变量 计次, 整数型, , , 

赋值 (固定电话归属结构_, 查询固定电话归属地 (.内容))
赋值 (.图片, 固定电话归属结构_.归属地图片)
.计次循环首 (取数组成员数 (固定电话归属结构_.号段电话分部区域), 计次)
    相加 (固定电话归属结构_.号段电话分部区域 [计次], #换行符).加入文本 ()
.计次循环尾 ()

.子程序 _按钮2_被单击, 空白型, , 
.局部变量 手机归属结构_, 未知类型0x4101013E, , , 
.局部变量 查询结果, 逻辑型, , , 
.局部变量 临时文本, 文本型, , , 
.局部变量 号码吉凶, 文本型, , , 

 ' 本名称子程序用作测试程序用，仅在开发及调试环境中有效，编译发布程序前将被系统自动清空，请将所有用作测试的临时代码放在本子程序中。 ***注意不要修改本子程序的名称、参数及返回值类型。
赋值 (手机归属结构_, 查询手机归属地 (.内容, 号码吉凶))

.判断开始 (手机归属结构_.)
    赋值 (临时文本, 相加 (“手机归属查询结果：”, 到文本 (手机归属结构_.), #换行符, “手机归属手机号码：”, 手机归属结构_., #换行符, “手机归属省份：”, 手机归属结构_., #换行符, “手机归属城市：”, 手机归属结构_., #换行符, “手机归属地区号：”, 手机归属结构_., #换行符, “手机归属地邮编：”, 手机归属结构_., #换行符, “手机归属所属供应商：”, 手机归属结构_., #换行符, “手机归属卡类型：”, 手机归属结构_.))
    赋值 (.内容, 临时文本)
    赋值 (.内容, 号码吉凶)
     ' 调试输出 (临时文本, 号码吉凶)
.默认
    赋值 (.内容, “未能查询到这个手机号码的归属地信息。”)
.判断结束


.子程序 __启动窗口_创建完毕, 空白型, , 



 ' 不属于任何一个程序集、类模块的函数：
