 ' 文件类型：未知类型

 ' 程序名称：易语言代码解析模块
 ' 程序描述：可以解析出类似于下面这种格式的易语言文本代码，方便进行其他操作：

.版本 2
.程序集 程序集1

.子程序 进程名取PID_, 整数型, 公开, 失败返回-1
.参数 进程名, 文本型
.参数 区分大小写, 逻辑型, 可空, 默认为假
.局部变量 计次, 整数型
.局部变量 进程列表, PROCESSENTRY32, , "0"

.计次循环首 (取进程列表_ (进程列表), 计次)
    .如果真 (文本比较 (到文本 (进程列表 [计次].szExeFile), 进程名, 区分大小写) ＝ 0)
        返回 (进程列表 [计次].th32ProcessID)
    .如果真结束

.计次循环尾 ()
返回 (-1)

 ' 程序作者：本源码来自易语言资源网(www.5A5X.com)
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：             易语言资源网注意事项
--============   www.5A5X.com  =============--
* 易语言资源网为易语言官方站、易语言官方论坛提供辅助资源站；本易语言资源网( www.5A5X.com)所有软件和资料均为软件作者提供和网友推荐发布而来，其版权归该软件和程序源码的合法拥有者所有，本站易语言资源网整理收集仅供易语言用户学习和易语言技术研究探讨使用，不得用于任何商业用途。如果由于以上原因造成的版权纠纷本站概不负责！
* 本站资源未经许可,任何网站不得非法盗链及抄袭本站资源；如引用，请注明来自易语言资源网，谢谢合作！
--============   www.5A5X.com  =============--
 ' 版本号：1.0
 ' 创建号：0.0



.图片 z, "", 公开,   23
.常量 程序集_类型_未知, "0", 公开, 
.常量 程序集_类型_普通, "1", 公开, 
.常量 程序集_类型_类, "2", 公开, 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 5 3 系统核心支持库
 ' commobj {A068799B-7551-46b9-8CA8-EEF8357AFEA4} 2 0 通用对象支持库
 ' RegEx 684944CB04624eb7BD5412A519421D34 1 2 正则表达式支持库




数据类型 程序集信息, 公开, 
    .成员 名称, 文本型, , , 
    .成员 类型, 整数型, , , 0表示未知；1表示为程序集；2表示为类模块。
    .成员 基类, 文本型, , , 上一项为2时，此项有效。
    .成员 公开, 逻辑型, , , 上一项为2时，此项有效。
    .成员 备注, 文本型, , , 
    .成员 对应窗口, 文本型, , , 空文本代表未知。
    .成员 变量, 程序集变量信息, , "1", 
    .成员 子程序, 子程序信息, , "1", 
    .成员 文本代码, 文本型, , , 

数据类型 程序集变量信息, 公开, 
    .成员 名称, 文本型, , , 
    .成员 类型, 文本型, , , 
    .成员 数组, 整数型, , "1", 每一个成员表示数组每一维的最大下标,下面其他的结构也是这样
    .成员 备注, 文本型, , , 
    .成员 文本代码, 文本型, , , 

数据类型 子程序信息, 公开, 
    .成员 名称, 文本型, , , 
    .成员 返回值类型, 文本型, , , 
    .成员 公开, 逻辑型, , , 
    .成员 备注, 文本型, , , 
    .成员 参数, 子程序参数信息, , "1", 
    .成员 变量, 局部变量信息, , "1", 
    .成员 所属程序集, 文本型, , , 空文本代表未知。
    .成员 代码主体, 文本型, , , 
    .成员 完整代码, 文本型, , , 

数据类型 子程序参数信息, 公开, 
    .成员 名称, 文本型, , , 
    .成员 类型, 文本型, , , 
    .成员 参考, 逻辑型, , , 
    .成员 可空, 逻辑型, , , 
    .成员 数组, 逻辑型, , , 
    .成员 备注, 文本型, , , 
    .成员 文本代码, 文本型, , , 

数据类型 局部变量信息, 公开, 
    .成员 名称, 文本型, , , 
    .成员 类型, 文本型, , , 
    .成员 静态, 逻辑型, , , 
    .成员 数组, 整数型, , "1", 
    .成员 备注, 文本型, , , 
    .成员 文本代码, 文本型, , , 

数据类型 全局变量信息, 公开, 
    .成员 名称, 文本型, , , 
    .成员 类型, 文本型, , , 
    .成员 数组, 整数型, , "1", 
    .成员 公开, 逻辑型, , , 
    .成员 备注, 文本型, , , 
    .成员 文本代码, 文本型, , , 

数据类型 自定义数据类型信息, 公开, 
    .成员 名称, 文本型, , , 
    .成员 公开, 逻辑型, , , 
    .成员 备注, 文本型, , , 
    .成员 成员, 数据类型成员信息, , "1", 
    .成员 文本代码, 文本型, , , 

数据类型 数据类型成员信息, 公开, 
    .成员 名称, 文本型, , , 
    .成员 类型, 文本型, , , 
    .成员 传址, 逻辑型, , , 
    .成员 数组, 整数型, , "1", 
    .成员 备注, 文本型, , , 
    .成员 文本代码, 文本型, , , 

数据类型 DLL命令信息, 公开, 
    .成员 命令名, 文本型, , , 
    .成员 返回值类型, 文本型, , , 
    .成员 库文件名, 文本型, , , 
    .成员 库中对应命令名, 文本型, , , 
    .成员 公开, 逻辑型, , , 
    .成员 备注, 文本型, , , 
    .成员 参数, DLL参数信息, , "1", 
    .成员 文本代码, 文本型, , , 

数据类型 DLL参数信息, 公开, 
    .成员 名称, 文本型, , , 
    .成员 类型, 文本型, , , 
    .成员 传址, 逻辑型, , , 
    .成员 数组, 逻辑型, , , 
    .成员 备注, 文本型, , , 
    .成员 文本代码, 文本型, , , 

数据类型 反编译常量信息, 公开, 
    .成员 名称, 文本型, , , 
    .成员 常量值, 文本型, , , 
    .成员 公开, 逻辑型, , , 
    .成员 备注, 文本型, , , 
    .成员 文本代码, 文本型, , , 

数据类型 反编译图片信息, 公开, 
    .成员 名称, 文本型, , , 
    .成员 公开, 逻辑型, , , 
    .成员 备注, 文本型, , , 
    .成员 文本代码, 文本型, , , 

数据类型 反编译音乐信息, 公开, 
    .成员 名称, 文本型, , , 
    .成员 公开, 逻辑型, , , 
    .成员 备注, 文本型, , , 
    .成员 文本代码, 文本型, , , 


.DLL命令 StrTrim, 整数型, "shlwapi.dll", "StrTrimA", , 
    .参数 psz, 文本型, , 
    .参数 pszTrimChars, 文本型, , 

.DLL命令 PathMatchSpec, 逻辑型, "shlwapi.dll", "PathMatchSpecA", , 
    .参数 pszFile, 文本型, , 
    .参数 pszSpec, 文本型, , 

.程序集 程序集1, , , 易语言代码解析模块  作者：易语言我吃了

.子程序 _启动子程序, 整数型, , 请在本子程序中放置易模块初始化代码

_临时子程序 () ' 在初始化代码执行完毕后调用测试代码
返回 (0) ' 可以根据您的需要返回任意数值

.子程序 _临时子程序, 空白型, , 
 ' 本名称子程序用作测试程序用，仅在开发及调试环境中有效，编译发布程序前将被系统自动清空，请将所有用作测试的临时代码放在本子程序中。 ***注意不要修改本子程序的名称、参数及返回值类型。


.子程序 文本_重复, 文本型, , 
.参数 重复次数, 整数型, , 
.参数 文本, 文本型, , 

.局部变量 对象, 未知类型0x20001, , , 

 ' --========  易语言资源网  (www.5A5X.com)  ======--
 ' 努力创建完善、持续更新的易语言学习例程源码资源站
 ' --================   www.5A5X.com  ===========--
 ' --==================   易语言资源网注意事项  ================--
 ' * 易语言资源网为易语言官方站、易语言官方论坛提供辅助资源站；
 ' 本易语言资源网( www.5A5X.com)所有软件和资料均为软件作者提
 ' 供和网友推荐发布而来，其版权归该软件和程序源码的合法拥有者所
 ' 有，本站易语言资源网整理收集仅供易语言用户学习和易语言技术研
 ' 究探讨使用，不得用于任何商业用途。如果由于以上原因造成的版权
 ' 纠纷本站概不负责！
 ' * 本站资源未经许可，任何网站不得非法盗链及抄袭本站资源；如引用
 ' 页面，请注明来自易语言资源网，谢谢合作！
 ' --=====================   www.5A5X.com  ================--

.计次循环首 (重复次数, )
    对象.未知支持库函数_27 (文本)
.计次循环尾 ()
返回 (对象.未知支持库函数_24 ())

.子程序 补足逗号, 文本型, , 
.参数 文本, 文本型, , 
.参数 总个数, 整数型, , 
.参数 需补引号, 逻辑型, 可空, 

.局部变量 个数, 整数型, , , 
.局部变量 临时1, 文本型, , , 
.局部变量 临时2, 文本型, , , 
.局部变量 正则1, 未知类型0x30001, 静态, , 
.局部变量 正则2, 未知类型0x30001, 静态, , 
.局部变量 正则3, 未知类型0x30001, 静态, , 
.局部变量 对象, 未知类型0x20001, , , 

.如果真 (正则1.未知支持库函数_4 ())
    正则1.未知支持库函数_3 (“\x22.*?\x22”, )
    正则2.未知支持库函数_3 (“^ *\..*? +(.*?) *, *(.*?) *, *(.*?) *, *\x22+(.*?)\x22+ *, ?(.*?)$”, )
    正则3.未知支持库函数_3 (“(^ *\..*? +.*? *, *.*? *, *.*? *, *)(.*?)( *,.*?$)”, )
.如果真结束
对象.未知支持库函数_25 (正则1.未知支持库函数_15 (文本, “”, 1, , 真, 真))
赋值 (个数, 对象.未知支持库函数_37 (“,”, “,”, , , 真))
对象.未知支持库函数_25 (文本, 文本_重复 (相减 (总个数, 选择 (小于或等于 (个数, 0), 0, 个数)), “, ”))
赋值 (临时1, 对象.未知支持库函数_24 ())
.如果真 (需补引号)
    .如果真 (正则2.未知支持库函数_0 (临时1))
        返回 (临时1)
         ' 本源码来自易语言资源网(www.5A5X.com)
    .如果真结束
    赋值 (临时2, 正则3.未知支持库函数_15 (临时1, “$1\x22$2\x22$3”, 1, , 真, 真))
    返回 (选择 (正则2.未知支持库函数_0 (临时2), 临时2, 临时1))
.如果真结束
返回 (临时1)

.子程序 拆分代码, 整数型, , 
.参数 代码, 文本型, , 
.参数 欲取内容, 文本型, , 
.参数 逗号个数, 整数型, , 
.参数 单行, 逻辑型, , 
.参数 搜索结果, 文本型, 参考 可空 数组, 
.参数 需补引号, 逻辑型, 可空, 

.局部变量 计次, 整数型, , , 
.局部变量 位置, 整数型, , , 
.局部变量 结果, 未知类型0x30002, , "0", 
.局部变量 正则, 未知类型0x30001, , , 
.局部变量 对象, 未知类型0x20001, , , 

正则.未知支持库函数_3 (相加 (“(^ *\.(”, 欲取内容, “) +.*?(?=^ *\.(程序集|DLL命令|全局变量|数据类型|常量|图片|声音|支持库|版本”, 选择 (不等于 (欲取内容, “程序集”), “|子程序|程序集变量”, “”), 选择 (单行, “|\2”, “”), “) +))|^ *\.(”, 欲取内容, “) +.*”, 选择 (单行, “?$”, “”)), 假)
赋值 (结果, 正则.未知支持库函数_16 (代码))
赋值 (计次, 取数组成员数 (结果))
.如果真 (等于 (计次, 0))
    返回 (0)
.如果真结束
重定义数组 (搜索结果, 假, 计次)
.计次循环首 (计次, 计次)
    对象.未知支持库函数_25 (结果.未知支持库函数_11 ( [计次], 代码, ))
    赋值 (位置, 相减 (对象.未知支持库函数_34 (#换行符, , 真), 1))
    .如果真 (小于或等于 (位置, 0))
        赋值 (位置, 对象.未知支持库函数_23 ())
         ' 本源码来自易语言资源网(www.5A5X.com)
    .如果真结束
    对象.未知支持库函数_36 (1, 位置, 补足逗号 (对象.未知支持库函数_24 (1, 位置), 逗号个数, 需补引号))
    赋值 (搜索结果 [计次], 对象.未知支持库函数_24 ())
.计次循环尾 ()
返回 (相减 (计次, 1))

.子程序 拆分程序代码, 整数型, , 
.参数 代码, 文本型, , 
.参数 欲取内容, 文本型, , 
.参数 逗号个数, 整数型, , 
.参数 单行, 逻辑型, , 
.参数 搜索结果, 文本型, 参考 可空 数组, 
.参数 需补引号, 逻辑型, 可空, 

.局部变量 计次, 整数型, , , 
.局部变量 位置, 整数型, , , 
.局部变量 结果, 未知类型0x30002, , "0", 
.局部变量 正则, 未知类型0x30001, , , 
.局部变量 对象, 未知类型0x20001, , , 

正则.未知支持库函数_3 (相加 (“(^ *\.(”, 欲取内容, “) +.*?(?=^ *\.(程序集|DLL命令|全局变量|类模块|数据类型|常量|图片|声音|支持库|版本”, 选择 (不等于 (欲取内容, “程序集”), “|子程序|程序集变量”, “”), 选择 (单行, “|\2”, “”), “) +))|^ *\.(”, 欲取内容, “) +.*”, 选择 (单行, “?$”, “”)), 假)
赋值 (结果, 正则.未知支持库函数_16 (代码))
赋值 (计次, 取数组成员数 (结果))
.如果真 (等于 (计次, 0))
    返回 (0)
.如果真结束
重定义数组 (搜索结果, 假, 计次)
.计次循环首 (计次, 计次)
    对象.未知支持库函数_25 (结果.未知支持库函数_11 ( [计次], 代码, ))
    赋值 (位置, 相减 (对象.未知支持库函数_34 (#换行符, , 真), 1))
    .如果真 (小于或等于 (位置, 0))
        赋值 (位置, 对象.未知支持库函数_23 ())
    .如果真结束
    对象.未知支持库函数_36 (1, 位置, 补足逗号 (对象.未知支持库函数_24 (1, 位置), 逗号个数, 需补引号))
    赋值 (搜索结果 [计次], 对象.未知支持库函数_24 ())
.计次循环尾 ()
返回 (相减 (计次, 1))


.子程序 拆分类模块代码, 整数型, , 
.参数 代码, 文本型, , 
.参数 欲取内容, 文本型, , 
.参数 逗号个数, 整数型, , 
.参数 单行, 逻辑型, , 
.参数 搜索结果, 文本型, 参考 可空 数组, 
.参数 需补引号, 逻辑型, 可空, 

.局部变量 计次, 整数型, , , 
.局部变量 位置, 整数型, , , 
.局部变量 结果, 未知类型0x30002, , "0", 
.局部变量 正则, 未知类型0x30001, , , 
.局部变量 对象, 未知类型0x20001, , , 

正则.未知支持库函数_3 (相加 (“(^ *\.(”, 欲取内容, “) +.*?(?=^ *\.(程序集|DLL命令|全局变量|类模块|数据类型|常量|图片|声音|支持库|版本”, 选择 (不等于 (欲取内容, “类模块”), “|子程序|程序集变量”, “”), 选择 (单行, “|\2”, “”), “) +))|^ *\.(”, 欲取内容, “) +.*”, 选择 (单行, “?$”, “”)), 假)
赋值 (结果, 正则.未知支持库函数_16 (代码))
赋值 (计次, 取数组成员数 (结果))
.如果真 (等于 (计次, 0))
    返回 (0)
.如果真结束
重定义数组 (搜索结果, 假, 计次)
.计次循环首 (计次, 计次)
    对象.未知支持库函数_25 (结果.未知支持库函数_11 ( [计次], 代码, ))
    赋值 (位置, 相减 (对象.未知支持库函数_34 (#换行符, , 真), 1))
    .如果真 (小于或等于 (位置, 0))
        赋值 (位置, 对象.未知支持库函数_23 ())
    .如果真结束
    对象.未知支持库函数_36 (1, 位置, 补足逗号 (对象.未知支持库函数_24 (1, 位置), 逗号个数, 需补引号))
    赋值 (搜索结果 [计次], 对象.未知支持库函数_24 ())
.计次循环尾 ()
返回 (相减 (计次, 1))


.子程序 解析数组维数, 空白型, , 
.参数 代码, 文本型, , 
.参数 结果, 整数型, 参考 数组, 

.局部变量 计次, 整数型, , , 
.局部变量 正则, 未知类型0x30001, , , 
.局部变量 数组, 文本型, , "0", 
.局部变量 对象, 未知类型0x20001, , , 

清除数组 (结果)
.如果真 (等于 (代码, “”))
    清除数组 (结果)
    返回 ()
.如果真结束
重定义数组 (结果, 假, 1)
赋值 (结果 [1], 到整数 (代码))

.子程序 类模块集_解析代码, 程序集信息, 公开, 返回解析得到的第一个程序集信息结构
.参数 程序集代码, 文本型, , 
.参数 程序集信息, 程序集信息, 参考 可空 数组, 提供一个数组保存解析后得到的信息结构

.局部变量 数组, 文本型, , "0", 
.局部变量 Null, 程序集信息, , , 
.局部变量 结果, 未知类型0x30002, , , 
.局部变量 正则1, 未知类型0x30001, 静态, , 
.局部变量 正则2, 未知类型0x30001, 静态, , 
.局部变量 正则3, 未知类型0x30001, 静态, , 
.局部变量 计次, 整数型, , , 
.局部变量 计次2, 整数型, , , 
.局部变量 Null2, 程序集信息, , "0", 
.局部变量 X, 整数型, , , 

清除数组 (程序集信息)
赋值 (计次, 拆分类模块代码 (程序集代码, “类模块”, 3, 假, 数组))
.如果真 (等于 (计次, 0))
    清除数组 (Null.变量)
    清除数组 (Null.子程序)
    返回 (Null)
.如果真结束
重定义数组 (程序集信息, 假, 选择 (是否为空 (程序集信息), 1, 计次))
.如果真 (正则1.未知支持库函数_4 ())
    正则1.未知支持库函数_3 (“^ *\.类模块 +(.*?) *, *(.*?) *, *(.*?) *, ?(.*?)$”, )
.如果真结束
.计次循环首 (计次, 计次)
    .如果真 (并且 (等于 (计次, 2), 是否为空 (程序集信息)))
        返回 (程序集信息 [1])
    .如果真结束
    StrTrim (数组 [计次], #换行符)
    赋值 (程序集信息 [计次], 文本代码, 数组 [计次])
    赋值 (结果, 正则1.未知支持库函数_7 (程序集信息 [计次], 文本代码, 1, ))
    赋值 (程序集信息 [计次], 名称, 结果.未知支持库函数_12 (程序集信息 [计次], 文本代码, 1, ))
    赋值 (程序集信息 [计次], 基类, 结果.未知支持库函数_12 (程序集信息 [计次], 文本代码, 2, ))
    赋值 (程序集信息 [计次], 公开, 等于 (结果.未知支持库函数_12 (程序集信息 [计次], 文本代码, 3, ), “公开”))
    赋值 (程序集信息 [计次], 备注, 结果.未知支持库函数_12 (程序集信息 [计次], 文本代码, 4, ))
    赋值 (程序集信息 [计次], 类型, #程序集_类型_类)
    子程序_解析代码 (程序集信息 [计次], 文本代码, 程序集信息 [计次], 子程序)
    程序集变量_解析代码 (程序集信息 [计次], 文本代码, 程序集信息 [计次], 变量)
.计次循环尾 ()
返回 (程序集信息 [1])


.子程序 程序集_解析代码, 程序集信息, 公开, 返回解析得到的第一个程序集信息结构
.参数 程序集代码, 文本型, , 
.参数 程序集信息, 程序集信息, 参考 可空 数组, 提供一个数组保存解析后得到的信息结构

.局部变量 数组, 文本型, , "0", 
.局部变量 Null, 程序集信息, , , 
.局部变量 结果, 未知类型0x30002, , , 
.局部变量 正则1, 未知类型0x30001, 静态, , 
.局部变量 正则2, 未知类型0x30001, 静态, , 
.局部变量 正则3, 未知类型0x30001, 静态, , 
.局部变量 计次, 整数型, , , 
.局部变量 计次2, 整数型, , , 
.局部变量 Null2, 程序集信息, , "0", 
.局部变量 X, 整数型, , , 

清除数组 (程序集信息)
赋值 (计次, 拆分程序代码 (程序集代码, “程序集”, 3, 假, 数组))
.如果真 (等于 (计次, 0))
    清除数组 (Null.变量)
    清除数组 (Null.子程序)
    返回 (Null)
.如果真结束
重定义数组 (程序集信息, 假, 选择 (是否为空 (程序集信息), 1, 计次))
.如果真 (正则1.未知支持库函数_4 ())
    正则1.未知支持库函数_3 (“^ *\.程序集 +(.*?) *, *(.*?) *, *(.*?) *, ?(.*?)$”, )
    正则2.未知支持库函数_3 (“_(.*?)_(创建完毕|将被销毁|尺寸被改变|被激活|被取消激活|首次激活|被显示|被隐藏|托盘事件)”, )
    正则3.未知支持库函数_3 (“_(.*?)_(空闲|可否被关闭)”, )
.如果真结束
.计次循环首 (计次, 计次)
    .如果真 (并且 (等于 (计次, 2), 是否为空 (程序集信息)))
        返回 (程序集信息 [1])
    .如果真结束
    StrTrim (数组 [计次], #换行符)
    赋值 (程序集信息 [计次], 文本代码, 数组 [计次])
    赋值 (结果, 正则1.未知支持库函数_7 (程序集信息 [计次], 文本代码, 1, ))
    赋值 (程序集信息 [计次], 名称, 结果.未知支持库函数_12 (程序集信息 [计次], 文本代码, 1, ))
    赋值 (程序集信息 [计次], 基类, 结果.未知支持库函数_12 (程序集信息 [计次], 文本代码, 2, ))
    赋值 (程序集信息 [计次], 公开, 等于 (结果.未知支持库函数_12 (程序集信息 [计次], 文本代码, 3, ), “公开”))
    赋值 (程序集信息 [计次], 备注, 结果.未知支持库函数_12 (程序集信息 [计次], 文本代码, 4, ))
    赋值 (程序集信息 [计次], 类型, #程序集_类型_普通)
    子程序_解析代码 (程序集信息 [计次], 文本代码, 程序集信息 [计次], 子程序)
    程序集变量_解析代码 (程序集信息 [计次], 文本代码, 程序集信息 [计次], 变量)
.计次循环尾 ()
返回 (程序集信息 [1])

.子程序 程序集变量_解析代码, 程序集变量信息, 公开, 返回解析得到的第一个程序集变量信息结构
.参数 程序集变量代码, 文本型, , 
.参数 变量信息, 程序集变量信息, 参考 可空 数组, 提供一个数组保存解析后得到的信息结构

.局部变量 数组, 文本型, , "0", 
.局部变量 Null, 程序集变量信息, , , 
.局部变量 结果, 未知类型0x30002, , , 
.局部变量 计次, 整数型, , , 
.局部变量 正则, 未知类型0x30001, 静态, , 

清除数组 (变量信息)
拆分代码 (程序集变量代码, “程序集变量”, 4, 真, 数组, 真)
赋值 (计次, 取数组成员数 (数组))
.如果真 (等于 (计次, 0))
    返回 (Null)
.如果真结束
重定义数组 (变量信息, 假, 选择 (是否为空 (变量信息), 1, 计次))
.如果真 (正则.未知支持库函数_4 ())
    正则.未知支持库函数_3 (“^ *\.程序集变量 +(.*?) *, *(.*?) *, *(.*?) *, *\x22+(.*?)\x22+ *, ?(.*?)$”, )
.如果真结束
.计次循环首 (计次, 计次)
    .如果真 (并且 (等于 (计次, 2), 是否为空 (变量信息)))
        返回 (变量信息 [1])
    .如果真结束
    StrTrim (数组 [计次], #换行符)
    赋值 (变量信息 [计次], 文本代码, 数组 [计次])
    赋值 (结果, 正则.未知支持库函数_7 (变量信息 [计次], 文本代码, 1, ))
    赋值 (变量信息 [计次], 名称, 结果.未知支持库函数_12 (变量信息 [计次], 文本代码, 1, ))
    赋值 (变量信息 [计次], 类型, 结果.未知支持库函数_12 (变量信息 [计次], 文本代码, 2, ))
    .如果真 (等于 (变量信息 [计次], 类型, “”))
        赋值 (变量信息 [计次], 类型, “整数型”)
    .如果真结束
    解析数组维数 (删全部空 (结果.未知支持库函数_12 (变量信息 [计次], 文本代码, 4, )), 变量信息 [计次], 数组)
    赋值 (变量信息 [计次], 备注, 结果.未知支持库函数_12 (变量信息 [计次], 文本代码, 5, ))
.计次循环尾 ()
返回 (变量信息 [1])

.子程序 子程序_解析代码, 子程序信息, 公开, 返回解析得到的第一个子程序信息结构
.参数 子程序代码, 文本型, , 
.参数 子程序信息, 子程序信息, 参考 可空 数组, 提供一个数组保存解析后得到的信息结构

.局部变量 计次, 整数型, , , 
.局部变量 计数, 整数型, , , 
.局部变量 Null, 子程序信息, , , 
.局部变量 数组, 文本型, , "0", 
.局部变量 正则1, 未知类型0x30001, 静态, , 
.局部变量 正则2, 未知类型0x30001, 静态, , 
.局部变量 正则3, 未知类型0x30001, 静态, , 
.局部变量 结果, 未知类型0x30002, , , 
.局部变量 程序集, 文本型, , , 

清除数组 (子程序信息)
赋值 (计次, 拆分代码 (子程序代码, “程序集|子程序”, 3, 假, 数组))
.如果真 (等于 (计次, 0))
    清除数组 (Null.参数)
    清除数组 (Null.变量)
    返回 (Null)
.如果真结束
重定义数组 (子程序信息, 假, 选择 (是否为空 (子程序信息), 1, 计次))
.如果真 (正则1.未知支持库函数_4 ())
    正则1.未知支持库函数_3 (“^ *\.子程序 +(.*?) *, *(.*?) *, *(.*?) *, ?(.*?)$”, )
    正则2.未知支持库函数_3 (“^ *\.程序集 +(.*?) *, *(.*?) *, *(.*?) *, *(.*?)$”, )
    正则3.未知支持库函数_3 (“^ *\.(子程序|参数|局部变量|版本) +.*?$”, )
.如果真结束
.计次循环首 (计次, 计次)
    .如果真 (并且 (等于 (计次, 2), 是否为空 (子程序信息)))
        返回 (子程序信息 [1])
    .如果真结束
    StrTrim (数组 [计次], #换行符)
    .如果真 (正则2.未知支持库函数_0 (数组 [计次]))
        赋值 (计数, 相加 (计数, 1))
        赋值 (结果, 正则2.未知支持库函数_7 (数组 [计次], 1, ))
        赋值 (程序集, 结果.未知支持库函数_12 (数组 [计次], 1, ))
        到循环尾 ()
    .如果真结束
    赋值 (计次, 相减 (计次, 计数))
    赋值 (子程序信息 [计次], 完整代码, 数组 [相加 (计次, 计数)])
    赋值 (结果, 正则1.未知支持库函数_7 (子程序信息 [计次], 完整代码, 1, ))
    赋值 (子程序信息 [计次], 名称, 结果.未知支持库函数_12 (子程序信息 [计次], 完整代码, 1, ))
    赋值 (子程序信息 [计次], 返回值类型, 结果.未知支持库函数_12 (子程序信息 [计次], 完整代码, 2, ))
    赋值 (子程序信息 [计次], 公开, 等于 (结果.未知支持库函数_12 (子程序信息 [计次], 完整代码, 3, ), “公开”))
    赋值 (子程序信息 [计次], 备注, 结果.未知支持库函数_12 (子程序信息 [计次], 完整代码, 4, ))
    子程序参数_解析代码 (子程序信息 [计次], 完整代码, 子程序信息 [计次], 参数)
    局部变量_解析代码 (子程序信息 [计次], 完整代码, 子程序信息 [计次], 变量)
    赋值 (子程序信息 [计次], 所属程序集, 程序集)
    赋值 (子程序信息 [计次], 代码主体, 正则3.未知支持库函数_15 (子程序信息 [计次], 完整代码, “”, 1, , 真, 真))
    StrTrim (子程序信息 [计次], 代码主体, #换行符)
.计次循环尾 ()
赋值 (计数, 相减 (计次, 1, 计数))
重定义数组 (子程序信息, 真, 计数)
返回 (选择 (等于 (计数, 0), Null, 子程序信息 [1]))

.子程序 子程序参数_解析代码, 子程序参数信息, 公开, 返回解析得到的第一个子程序参数信息结构
.参数 子程序参数代码, 文本型, , 
.参数 参数信息, 子程序参数信息, 参考 可空 数组, 提供一个数组保存解析后得到的信息结构

.局部变量 计次, 整数型, , , 
.局部变量 文本, 文本型, , , 
.局部变量 数组, 文本型, , "0", 
.局部变量 Null, 子程序参数信息, , , 
.局部变量 结果, 未知类型0x30002, , , 
.局部变量 正则, 未知类型0x30001, 静态, , 

清除数组 (参数信息)
拆分代码 (子程序参数代码, “参数”, 3, 真, 数组)
赋值 (计次, 取数组成员数 (数组))
.如果真 (等于 (计次, 0))
    返回 (Null)
.如果真结束
重定义数组 (参数信息, 假, 选择 (是否为空 (参数信息), 1, 计次))
.如果真 (正则.未知支持库函数_4 ())
    正则.未知支持库函数_3 (“^ *\.参数 +(.*?) *, *(.*?) *, *(.*?) *, ?(.*?)$”, )
.如果真结束
.计次循环首 (计次, 计次)
    .如果真 (并且 (等于 (计次, 2), 是否为空 (参数信息)))
        返回 (参数信息 [1])
    .如果真结束
    StrTrim (数组 [计次], #换行符)
    赋值 (参数信息 [计次], 文本代码, 数组 [计次])
    赋值 (结果, 正则.未知支持库函数_7 (参数信息 [计次], 文本代码, 1, ))
    赋值 (参数信息 [计次], 名称, 结果.未知支持库函数_12 (参数信息 [计次], 文本代码, 1, ))
    赋值 (参数信息 [计次], 类型, 结果.未知支持库函数_12 (参数信息 [计次], 文本代码, 2, ))
    .如果真 (等于 (参数信息 [计次], 类型, “”))
        赋值 (参数信息 [计次], 类型, “整数型”)
    .如果真结束
    赋值 (文本, 结果.未知支持库函数_12 (参数信息 [计次], 文本代码, 3, ))
    赋值 (参数信息 [计次], 参考, PathMatchSpec (文本, “*参考*”))
    赋值 (参数信息 [计次], 可空, PathMatchSpec (文本, “*可空*”))
    赋值 (参数信息 [计次], 数组, PathMatchSpec (文本, “*数组*”))
    赋值 (参数信息 [计次], 备注, 结果.未知支持库函数_12 (参数信息 [计次], 文本代码, 4, ))
.计次循环尾 ()
返回 (参数信息 [1])

.子程序 局部变量_解析代码, 局部变量信息, 公开, 返回解析得到的第一个子程序局部变量信息结构
.参数 子程序变量代码, 文本型, , 
.参数 变量信息, 局部变量信息, 参考 可空 数组, 提供一个数组保存解析后得到的信息结构

.局部变量 数组, 文本型, , "0", 
.局部变量 Null, 局部变量信息, , , 
.局部变量 结果, 未知类型0x30002, , , 
.局部变量 计次, 整数型, , , 
.局部变量 正则, 未知类型0x30001, 静态, , 

清除数组 (变量信息)
拆分代码 (子程序变量代码, “局部变量”, 4, 真, 数组, 真)
赋值 (计次, 取数组成员数 (数组))
.如果真 (等于 (计次, 0))
    返回 (Null)
.如果真结束
重定义数组 (变量信息, 假, 选择 (是否为空 (变量信息), 1, 计次))
.如果真 (正则.未知支持库函数_4 ())
    正则.未知支持库函数_3 (“^ *\.局部变量 +(.*?) *, *(.*?) *, *(.*?) *, *\x22+(.*?)\x22+ *, ?(.*?)$”, )
.如果真结束
.计次循环首 (计次, 计次)
    .如果真 (并且 (等于 (计次, 2), 是否为空 (变量信息)))
        返回 (变量信息 [1])
    .如果真结束
    StrTrim (数组 [计次], #换行符)
    赋值 (变量信息 [计次], 文本代码, 数组 [计次])
    赋值 (结果, 正则.未知支持库函数_7 (变量信息 [计次], 文本代码, 1, ))
    赋值 (变量信息 [计次], 名称, 结果.未知支持库函数_12 (变量信息 [计次], 文本代码, 1, ))
    赋值 (变量信息 [计次], 类型, 结果.未知支持库函数_12 (变量信息 [计次], 文本代码, 2, ))
    .如果真 (等于 (变量信息 [计次], 类型, “”))
         ' 本源码来自易语言资源网(www.5A5X.com)
        赋值 (变量信息 [计次], 类型, “整数型”)
    .如果真结束
    赋值 (变量信息 [计次], 静态, 等于 (结果.未知支持库函数_12 (变量信息 [计次], 文本代码, 3, ), “静态”))
    解析数组维数 (删全部空 (结果.未知支持库函数_12 (变量信息 [计次], 文本代码, 4, )), 变量信息 [计次], 数组)
    赋值 (变量信息 [计次], 备注, 结果.未知支持库函数_12 (变量信息 [计次], 文本代码, 5, ))
.计次循环尾 ()
返回 (变量信息 [1])

.子程序 全局变量_解析代码, 全局变量信息, 公开, 返回解析得到的第一个全局变量信息结构
.参数 全局变量代码, 文本型, , 
.参数 变量信息, 全局变量信息, 参考 可空 数组, 提供一个数组保存解析后得到的信息结构

.局部变量 结果, 未知类型0x30002, , , 
.局部变量 正则, 未知类型0x30001, 静态, , 
.局部变量 Null, 全局变量信息, , , 
.局部变量 计次, 整数型, , , 
.局部变量 数组, 文本型, , "0", 

清除数组 (变量信息)
拆分代码 (全局变量代码, “全局变量”, 4, 真, 数组, 真)
赋值 (计次, 取数组成员数 (数组))
.如果真 (等于 (计次, 0))
    返回 (Null)
.如果真结束
.如果真 (正则.未知支持库函数_4 ())
    正则.未知支持库函数_3 (“^ *\.全局变量 +(.*?) *, *(.*?) *, *(.*?) *, *\x22+(.*?)\x22+ *, ?(.*?)$”, )
.如果真结束
重定义数组 (变量信息, 假, 选择 (是否为空 (变量信息), 1, 计次))
.计次循环首 (计次, 计次)
    .如果真 (并且 (等于 (计次, 2), 是否为空 (变量信息)))
        返回 (变量信息 [1])
    .如果真结束
    StrTrim (数组 [计次], #换行符)
    赋值 (变量信息 [计次], 文本代码, 数组 [计次])
    赋值 (结果, 正则.未知支持库函数_7 (变量信息 [计次], 文本代码, 1, ))
    赋值 (变量信息 [计次], 名称, 结果.未知支持库函数_12 (变量信息 [计次], 文本代码, 1, ))
    赋值 (变量信息 [计次], 类型, 结果.未知支持库函数_12 (变量信息 [计次], 文本代码, 2, ))
    .如果真 (等于 (变量信息 [计次], 类型, “”))
        赋值 (变量信息 [计次], 类型, “整数型”)
    .如果真结束
    赋值 (变量信息 [计次], 公开, 等于 (结果.未知支持库函数_12 (变量信息 [计次], 文本代码, 3, ), “公开”))
    解析数组维数 (删全部空 (结果.未知支持库函数_12 (变量信息 [计次], 文本代码, 4, )), 变量信息 [计次], 数组)
    赋值 (变量信息 [计次], 备注, 结果.未知支持库函数_12 (变量信息 [计次], 文本代码, 5, ))
.计次循环尾 ()
返回 (变量信息 [1])

.子程序 数据类型_解析代码, 自定义数据类型信息, 公开, 返回解析得到的第一个数据类型信息结构
.参数 自定义数据类型代码, 文本型, , 
.参数 数据类型, 自定义数据类型信息, 参考 可空 数组, 提供一个数组保存解析后得到的信息结构

.局部变量 数组, 文本型, , "0", 
.局部变量 计次, 整数型, , , 
.局部变量 Null, 自定义数据类型信息, , , 
.局部变量 结果, 未知类型0x30002, , , 
.局部变量 正则, 未知类型0x30001, 静态, , 

清除数组 (数据类型)
赋值 (计次, 拆分代码 (自定义数据类型代码, “数据类型”, 2, 假, 数组))
.如果真 (等于 (计次, 0))
    清除数组 (Null.成员)
    返回 (Null)
.如果真结束
重定义数组 (数据类型, 假, 选择 (是否为空 (数据类型), 1, 计次))
.如果真 (正则.未知支持库函数_4 ())
    正则.未知支持库函数_3 (“^ *\.数据类型 +(.*?) *, *(.*?) *, ?(.*?)$”, )
.如果真结束
.计次循环首 (计次, 计次)
    .如果真 (并且 (等于 (计次, 2), 是否为空 (数据类型)))
        返回 (数据类型 [1])
    .如果真结束
    StrTrim (数组 [计次], #换行符)
    赋值 (数据类型 [计次], 文本代码, 数组 [计次])
    赋值 (结果, 正则.未知支持库函数_7 (数据类型 [计次], 文本代码, 1, ))
    赋值 (数据类型 [计次], 名称, 结果.未知支持库函数_12 (数据类型 [计次], 文本代码, 1, ))
    赋值 (数据类型 [计次], 公开, 等于 (结果.未知支持库函数_12 (数据类型 [计次], 文本代码, 2, ), “公开”))
    赋值 (数据类型 [计次], 备注, 结果.未知支持库函数_12 (数据类型 [计次], 文本代码, 3, ))
    数据类型成员_解析代码 (数据类型 [计次], 文本代码, 数据类型 [计次], 成员)
.计次循环尾 ()
返回 (数据类型 [1])

.子程序 数据类型成员_解析代码, 数据类型成员信息, 公开, 返回解析得到的第一个数据类型成员信息结构
.参数 数据类型成员代码, 文本型, , 
.参数 成员信息, 数据类型成员信息, 参考 可空 数组, 提供一个数组保存解析后得到的信息结构

.局部变量 数组, 文本型, , "0", 
.局部变量 计次, 整数型, , , 
.局部变量 结果, 未知类型0x30002, , , 
.局部变量 正则, 未知类型0x30001, 静态, , 
.局部变量 Null, 数据类型成员信息, , , 

清除数组 (成员信息)
赋值 (计次, 拆分代码 (数据类型成员代码, “成员”, 4, 真, 数组, 真))
.如果真 (等于 (计次, 0))
    返回 (Null)
.如果真结束
重定义数组 (成员信息, 假, 选择 (是否为空 (成员信息), 1, 计次))
.如果真 (正则.未知支持库函数_4 ())
    正则.未知支持库函数_3 (“^ *\.成员 +(.*?) *, *(.*?) *, *(.*?) *, *\x22+(.*?)\x22+ *, ?(.*?)$”, )
.如果真结束
.计次循环首 (计次, 计次)
    .如果真 (并且 (等于 (计次, 2), 是否为空 (成员信息)))
        返回 (成员信息 [1])
    .如果真结束
    赋值 (成员信息 [计次], 文本代码, 数组 [计次])
    赋值 (结果, 正则.未知支持库函数_7 (成员信息 [计次], 文本代码, 1, ))
    赋值 (成员信息 [计次], 名称, 结果.未知支持库函数_12 (成员信息 [计次], 文本代码, 1, ))
    赋值 (成员信息 [计次], 类型, 结果.未知支持库函数_12 (成员信息 [计次], 文本代码, 2, ))
    .如果真 (等于 (成员信息 [计次], 类型, “”))
        赋值 (成员信息 [计次], 类型, “整数型”)
    .如果真结束
    赋值 (成员信息 [计次], 传址, 等于 (结果.未知支持库函数_12 (成员信息 [计次], 文本代码, 3, ), “传址”))
    解析数组维数 (删全部空 (结果.未知支持库函数_12 (成员信息 [计次], 文本代码, 4, )), 成员信息 [计次], 数组)
    赋值 (成员信息 [计次], 备注, 结果.未知支持库函数_12 (成员信息 [计次], 文本代码, 5, ))
.计次循环尾 ()
返回 (成员信息 [1])

.子程序 DLL命令_解析代码, DLL命令信息, 公开, 返回解析得到的第一个DLL命令信息结构
.参数 DLL命令代码, 文本型, , 
.参数 命令信息, DLL命令信息, 参考 可空 数组, 提供一个数组保存解析后得到的信息结构

.局部变量 数组, 文本型, , "0", 
.局部变量 计次, 整数型, , , 
.局部变量 Null, DLL命令信息, , , 
.局部变量 正则, 未知类型0x30001, 静态, , 
.局部变量 结果, 未知类型0x30002, , , 

清除数组 (命令信息)
赋值 (计次, 拆分代码 (DLL命令代码, “DLL命令”, 5, 假, 数组))
.如果真 (等于 (计次, 0))
    清除数组 (Null.参数)
    返回 (Null)
.如果真结束
重定义数组 (命令信息, 假, 选择 (是否为空 (命令信息), 1, 计次))
.如果真 (正则.未知支持库函数_4 ())
    正则.未知支持库函数_3 (“^ *\.DLL命令 +(.*?) *, *(.*?) *, *\x22?(.*?)\x22? *, \x22?(.*?)\x22? *, *(.*?) *, ?(.*?)$”, 假)
.如果真结束
.计次循环首 (计次, 计次)
    .如果真 (并且 (等于 (计次, 2), 是否为空 (命令信息)))
        返回 (命令信息 [1])
    .如果真结束
    StrTrim (数组 [计次], #换行符)
    赋值 (命令信息 [计次], 文本代码, 数组 [计次])
    赋值 (结果, 正则.未知支持库函数_7 (命令信息 [计次], 文本代码, 1, ))
    赋值 (命令信息 [计次], 命令名, 结果.未知支持库函数_12 (命令信息 [计次], 文本代码, 1, ))
    赋值 (命令信息 [计次], 返回值类型, 结果.未知支持库函数_12 (命令信息 [计次], 文本代码, 2, ))
    赋值 (命令信息 [计次], 库文件名, 结果.未知支持库函数_12 (命令信息 [计次], 文本代码, 3, ))
    赋值 (命令信息 [计次], 库中对应命令名, 结果.未知支持库函数_12 (命令信息 [计次], 文本代码, 4, ))
    赋值 (命令信息 [计次], 公开, 等于 (结果.未知支持库函数_12 (命令信息 [计次], 文本代码, 5, ), “公开”))
    赋值 (命令信息 [计次], 备注, 结果.未知支持库函数_12 (命令信息 [计次], 文本代码, 6, ))
    DLL参数_解析代码 (命令信息 [计次], 文本代码, 命令信息 [计次], 参数)
.计次循环尾 ()
返回 (命令信息 [1])

.子程序 DLL参数_解析代码, DLL参数信息, 公开, 返回解析得到的第一个DLL命令参数信息结构
.参数 DLL参数代码, 文本型, , 
.参数 参数信息, DLL参数信息, 参考 可空 数组, 提供一个数组保存解析后得到的信息结构

.局部变量 文本, 文本型, , , 
.局部变量 Null, DLL参数信息, , , 
.局部变量 数组, 文本型, , "0", 
.局部变量 计次, 整数型, , , 
.局部变量 结果, 未知类型0x30002, , , 
.局部变量 正则, 未知类型0x30001, 静态, , 

清除数组 (参数信息)
赋值 (计次, 拆分代码 (DLL参数代码, “参数”, 3, 真, 数组))
.如果真 (等于 (计次, 0))
    返回 (Null)
.如果真结束
重定义数组 (参数信息, 假, 选择 (是否为空 (参数信息), 1, 计次))
.如果真 (正则.未知支持库函数_4 ())
    正则.未知支持库函数_3 (“^ *\.参数 +(.*?) *, *(.*?) *, *(.*?) *, ?(.*?)$”, )
.如果真结束
.计次循环首 (计次, 计次)
    .如果真 (并且 (等于 (计次, 2), 是否为空 (参数信息)))
        返回 (参数信息 [1])
    .如果真结束
    赋值 (参数信息 [计次], 文本代码, 数组 [计次])
    赋值 (结果, 正则.未知支持库函数_7 (参数信息 [计次], 文本代码, 1, ))
    赋值 (参数信息 [计次], 名称, 结果.未知支持库函数_12 (参数信息 [计次], 文本代码, 1, ))
    赋值 (参数信息 [计次], 类型, 结果.未知支持库函数_12 (参数信息 [计次], 文本代码, 2, ))
    赋值 (文本, 结果.未知支持库函数_12 (参数信息 [计次], 文本代码, 3, ))
    赋值 (参数信息 [计次], 传址, PathMatchSpec (文本, “*传址*”))
    赋值 (参数信息 [计次], 数组, PathMatchSpec (文本, “*数组*”))
     ' 本源码来自易语言资源网(www.5A5X.com)
    赋值 (参数信息 [计次], 备注, 结果.未知支持库函数_12 (参数信息 [计次], 文本代码, 4, ))
.计次循环尾 ()
返回 (参数信息 [1])

.子程序 程序集_生成代码, 文本型, 公开, 根据信息结构生成对应的易语言代码
.参数 程序集信息, 程序集信息, 参考, 
.参数 不存入结构中, 逻辑型, 可空, 

.局部变量 计次, 整数型, , , 
.局部变量 对象, 未知类型0x20001, , , 

对象.未知支持库函数_27 (“.程序集 ”, 程序集信息.名称, “, ”, 程序集信息.基类, “, ”, 选择 (程序集信息.公开, “公开”, “”), “, ”, 程序集信息.备注, #换行符)
.计次循环首 (取数组成员数 (程序集信息.变量), 计次)
    对象.未知支持库函数_27 (程序集变量_生成代码 (程序集信息.变量 [计次], 不存入结构中), #换行符)
.计次循环尾 ()
对象.未知支持库函数_27 (#换行符)
.计次循环首 (取数组成员数 (程序集信息.子程序), 计次)
    对象.未知支持库函数_27 (子程序_生成代码 (程序集信息.子程序 [计次], 不存入结构中), #换行符)
.计次循环尾 ()
.如果真 (不存入结构中)
    返回 (对象.未知支持库函数_24 ())
.如果真结束
赋值 (程序集信息.文本代码, 对象.未知支持库函数_24 ())
返回 (程序集信息.文本代码)

.子程序 程序集变量_生成代码, 文本型, 公开, 根据信息结构生成对应的易语言代码
.参数 变量信息, 程序集变量信息, 参考, 
.参数 不存入结构中, 逻辑型, 可空, 

.局部变量 计次, 整数型, , , 
.局部变量 对象, 未知类型0x20001, , , 

对象.未知支持库函数_27 (“.程序集变量 ”, 变量信息.名称, “, ”, 变量信息.类型, “, , ”)
赋值 (计次, 取数组成员数 (变量信息.数组))
.如果真 (大于 (计次, 0))
    对象.未知支持库函数_27 (#引号)
    .计次循环首 (计次, 计次)
        对象.未知支持库函数_27 (变量信息.数组 [计次], “,”)
         ' 本源码来自易语言资源网(www.5A5X.com)
    .计次循环尾 ()
    对象.未知支持库函数_36 (对象.未知支持库函数_23 (), 1, #引号)
.如果真结束
对象.未知支持库函数_27 (“, ”, 变量信息.备注)
.如果真 (不存入结构中)
    返回 (对象.未知支持库函数_24 ())
.如果真结束
赋值 (变量信息.文本代码, 对象.未知支持库函数_24 ())
返回 (变量信息.文本代码)

.子程序 子程序_生成代码, 文本型, 公开, 根据信息结构生成对应的易语言代码
.参数 子程序信息, 子程序信息, 参考, 
.参数 不存入结构中, 逻辑型, 可空, 

.局部变量 计次, 整数型, , , 
.局部变量 对象, 未知类型0x20001, , , 

对象.未知支持库函数_27 (“.子程序 ”, 子程序信息.名称, “, ”, 子程序信息.返回值类型, “, ”, 选择 (子程序信息.公开, “公开”, “”), “, ”, 子程序信息.备注, #换行符)
.计次循环首 (取数组成员数 (子程序信息.参数), 计次)
    对象.未知支持库函数_27 (子程序参数_生成代码 (子程序信息.参数 [计次], 不存入结构中), #换行符)
.计次循环尾 ()
.计次循环首 (取数组成员数 (子程序信息.变量), 计次)
    对象.未知支持库函数_27 (局部变量_生成代码 (子程序信息.变量 [计次], 不存入结构中), #换行符)
.计次循环尾 ()
对象.未知支持库函数_27 (#换行符, 子程序信息.代码主体)
.如果真 (不存入结构中)
    返回 (对象.未知支持库函数_24 ())
.如果真结束
赋值 (子程序信息.完整代码, 对象.未知支持库函数_24 ())
返回 (子程序信息.完整代码)

.子程序 子程序参数_生成代码, 文本型, 公开, 根据信息结构生成对应的易语言代码
.参数 参数信息, 子程序参数信息, 参考, 
.参数 不存入结构中, 逻辑型, 可空, 

.局部变量 对象, 未知类型0x20001, , , 

对象.未知支持库函数_27 (“.参数 ”, 参数信息.名称, “, ”, 参数信息.类型, “, ”, 选择 (参数信息.参考, “参考 ”, “”), 选择 (参数信息.可空, “可空 ”, “”), 选择 (参数信息.数组, “数组 ”, “”), “, ”, 参数信息.备注)
.如果真 (不存入结构中)
    返回 (对象.未知支持库函数_24 ())
.如果真结束
赋值 (参数信息.文本代码, 对象.未知支持库函数_24 ())
返回 (参数信息.文本代码)

.子程序 局部变量_生成代码, 文本型, 公开, 根据信息结构生成对应的易语言代码
.参数 变量信息, 局部变量信息, 参考, 
.参数 不存入结构中, 逻辑型, 可空, 

.局部变量 计次, 整数型, , , 
.局部变量 对象, 未知类型0x20001, , , 

对象.未知支持库函数_27 (“.局部变量 ”, 变量信息.名称, “, ”, 变量信息.类型, “, ”, 选择 (变量信息.静态, “静态”, “”), “, ”)
赋值 (计次, 取数组成员数 (变量信息.数组))
.如果真 (大于 (计次, 0))
    对象.未知支持库函数_27 (#引号)
    .计次循环首 (计次, 计次)
        对象.未知支持库函数_27 (变量信息.数组 [计次], “,”)
    .计次循环尾 ()
    对象.未知支持库函数_36 (对象.未知支持库函数_23 (), 1, #引号)
.如果真结束
对象.未知支持库函数_27 (“, ”, 变量信息.备注)
.如果真 (不存入结构中)
    返回 (对象.未知支持库函数_24 ())
.如果真结束
赋值 (变量信息.文本代码, 对象.未知支持库函数_24 ())
返回 (变量信息.文本代码)

.子程序 全局变量_生成代码, 文本型, 公开, 根据信息结构生成对应的易语言代码
.参数 变量信息, 全局变量信息, 参考, 
.参数 不存入结构中, 逻辑型, 可空, 

.局部变量 计次, 整数型, , , 
.局部变量 对象, 未知类型0x20001, , , 

对象.未知支持库函数_27 (“.全局变量 ”, 变量信息.名称, “, ”, 变量信息.类型, “, ”, 选择 (变量信息.公开, “公开”, “”), “, ”)
赋值 (计次, 取数组成员数 (变量信息.数组))
.如果真 (大于 (计次, 0))
    对象.未知支持库函数_27 (#引号)
    .计次循环首 (计次, 计次)
        对象.未知支持库函数_27 (变量信息.数组 [计次], “,”)
    .计次循环尾 ()
    对象.未知支持库函数_36 (对象.未知支持库函数_23 (), 1, #引号)
.如果真结束
对象.未知支持库函数_27 (“, ”, 变量信息.备注)
.如果真 (不存入结构中)
    返回 (对象.未知支持库函数_24 ())
.如果真结束
赋值 (变量信息.文本代码, 对象.未知支持库函数_24 ())
返回 (变量信息.文本代码)

.子程序 数据类型_生成代码, 文本型, 公开, 根据信息结构生成对应的易语言代码
.参数 数据类型, 自定义数据类型信息, 参考, 
.参数 不存入结构中, 逻辑型, 可空, 

.局部变量 计次, 整数型, , , 
.局部变量 对象, 未知类型0x20001, , , 

对象.未知支持库函数_27 (“.数据类型 ”, 数据类型.名称, “, ”, 选择 (数据类型.公开, “公开”, “”), “, ”, 数据类型.备注, #换行符)
.计次循环首 (取数组成员数 (数据类型.成员), 计次)
    对象.未知支持库函数_27 (数据类型成员_生成代码 (数据类型.成员 [计次], 不存入结构中), #换行符)
.计次循环尾 ()
.如果真 (不存入结构中)
    返回 (对象.未知支持库函数_24 ())
.如果真结束
赋值 (数据类型.文本代码, 对象.未知支持库函数_24 ())
返回 (数据类型.文本代码)

.子程序 数据类型成员_生成代码, 文本型, 公开, 根据信息结构生成对应的易语言代码
.参数 成员信息, 数据类型成员信息, 参考, 
.参数 不存入结构中, 逻辑型, 可空, 

.局部变量 计次, 整数型, , , 
.局部变量 对象, 未知类型0x20001, , , 

对象.未知支持库函数_27 (“    .成员 ”, 成员信息.名称, “, ”, 成员信息.类型, “, ”, 选择 (成员信息.传址, “传址”, “”), “, ”)
赋值 (计次, 取数组成员数 (成员信息.数组))
.如果真 (大于 (计次, 0))
    对象.未知支持库函数_27 (#引号)
    .计次循环首 (计次, 计次)
        对象.未知支持库函数_27 (成员信息.数组 [计次], “,”)
    .计次循环尾 ()
    对象.未知支持库函数_36 (对象.未知支持库函数_23 (), 1, #引号)
.如果真结束
对象.未知支持库函数_27 (“, ”, 成员信息.备注)
 ' 本源码来自易语言资源网(www.5A5X.com)
.如果真 (不存入结构中)
    返回 (对象.未知支持库函数_24 ())
.如果真结束
赋值 (成员信息.文本代码, 对象.未知支持库函数_24 ())
返回 (成员信息.文本代码)

.子程序 DLL命令_生成代码, 文本型, 公开, 根据信息结构生成对应的易语言代码
.参数 命令信息, DLL命令信息, 参考, 
.参数 不存入结构中, 逻辑型, 可空, 

.局部变量 计次, 整数型, , , 
.局部变量 对象, 未知类型0x20001, , , 

对象.未知支持库函数_27 (“.DLL命令 ”, 命令信息.命令名, “, ”, 命令信息.返回值类型, “, ”, #引号, 命令信息.库文件名, #引号, “, ”, #引号, 命令信息.库中对应命令名, #引号, “, ”, 选择 (命令信息.公开, “公开”, “”), “, ”, 命令信息.备注, #换行符)
.计次循环首 (取数组成员数 (命令信息.参数), 计次)
    对象.未知支持库函数_27 (DLL参数_生成代码 (命令信息.参数 [计次], 不存入结构中), #换行符)
.计次循环尾 ()
.如果真 (不存入结构中)
    返回 (对象.未知支持库函数_24 ())
.如果真结束
赋值 (命令信息.文本代码, 对象.未知支持库函数_24 ())
返回 (命令信息.文本代码)

.子程序 DLL参数_生成代码, 文本型, 公开, 根据信息结构生成对应的易语言代码
.参数 参数信息, DLL参数信息, 参考, 
.参数 不存入结构中, 逻辑型, 可空, 

.局部变量 对象, 未知类型0x20001, , , 

对象.未知支持库函数_27 (“    .参数 ”, 参数信息.名称, “, ”, 参数信息.类型, “, ”, 选择 (参数信息.传址, “传址 ”, “”), 选择 (参数信息.数组, “数组”, “”), “, ”, 参数信息.备注) ' 本源码来自易语言资源网(www.5A5X.com)
.如果真 (不存入结构中)
    返回 (对象.未知支持库函数_24 ())
.如果真结束
赋值 (参数信息.文本代码, 对象.未知支持库函数_24 ())
返回 (参数信息.文本代码)


.子程序 常量变量_解析代码, 反编译常量信息, 公开, 返回解析得到的第一个常量信息结构
.参数 常量代码, 文本型, , 
.参数 变量信息, 反编译常量信息, 参考 可空 数组, 提供一个数组保存解析后得到的信息结构

.局部变量 结果, 未知类型0x30002, , , 
.局部变量 正则, 未知类型0x30001, 静态, , 
.局部变量 Null, 反编译常量信息, , , 
.局部变量 计次, 整数型, , , 
.局部变量 数组, 文本型, , "0", 
.局部变量 匿名局部变量_2374, 空白型, , , 

清除数组 (变量信息)
拆分代码 (常量代码, “常量”, 3, 真, 数组, 真)
赋值 (计次, 取数组成员数 (数组))
.如果真 (等于 (计次, 0))
    返回 (Null)
.如果真结束
.如果真 (正则.未知支持库函数_4 ())
    正则.未知支持库函数_3 (“^ *\.常量 +(.*?) *, *(.*?) *, *(.*?) *, * ?(.*?)$”, )
.如果真结束
重定义数组 (变量信息, 假, 选择 (是否为空 (变量信息), 1, 计次))
.计次循环首 (计次, 计次)
    .如果真 (并且 (等于 (计次, 2), 是否为空 (变量信息)))
        返回 (变量信息 [1])
    .如果真结束
    StrTrim (数组 [计次], #换行符)
    赋值 (变量信息 [计次], 文本代码, 数组 [计次])
    赋值 (结果, 正则.未知支持库函数_7 (变量信息 [计次], 文本代码, 1, ))
    赋值 (变量信息 [计次], 名称, 结果.未知支持库函数_12 (变量信息 [计次], 文本代码, 1, ))
    赋值 (变量信息 [计次], 常量值, 结果.未知支持库函数_12 (变量信息 [计次], 文本代码, 2, ))
    赋值 (变量信息 [计次], 公开, 等于 (结果.未知支持库函数_12 (变量信息 [计次], 文本代码, 3, ), “公开”))
    赋值 (变量信息 [计次], 备注, 结果.未知支持库函数_12 (变量信息 [计次], 文本代码, 4, ))
.计次循环尾 ()
返回 (变量信息 [1])

.子程序 音乐变量_解析代码, 反编译音乐信息, 公开, 返回解析得到的第一个常量信息结构
.参数 常量代码, 文本型, , 
.参数 变量信息, 反编译音乐信息, 参考 可空 数组, 提供一个数组保存解析后得到的信息结构

.局部变量 结果, 未知类型0x30002, , , 
.局部变量 正则, 未知类型0x30001, 静态, , 
.局部变量 Null, 反编译音乐信息, , , 
.局部变量 计次, 整数型, , , 
.局部变量 数组, 文本型, , "0", 

清除数组 (变量信息)
拆分代码 (常量代码, “声音”, 3, 真, 数组, 真)
赋值 (计次, 取数组成员数 (数组))
.如果真 (等于 (计次, 0))
    返回 (Null)
.如果真结束
.如果真 (正则.未知支持库函数_4 ())
    正则.未知支持库函数_3 (“^ *\.声音 +(.*?) *, *(.*?) *, *(.*?) *, * ?(.*?)$”, )
.如果真结束
重定义数组 (变量信息, 假, 选择 (是否为空 (变量信息), 1, 计次))
.计次循环首 (计次, 计次)
    .如果真 (并且 (等于 (计次, 2), 是否为空 (变量信息)))
        返回 (变量信息 [1])
    .如果真结束
    StrTrim (数组 [计次], #换行符)
    赋值 (变量信息 [计次], 文本代码, 数组 [计次])
    赋值 (结果, 正则.未知支持库函数_7 (变量信息 [计次], 文本代码, 1, ))
    赋值 (变量信息 [计次], 名称, 结果.未知支持库函数_12 (变量信息 [计次], 文本代码, 1, ))
    赋值 (变量信息 [计次], 公开, 等于 (结果.未知支持库函数_12 (变量信息 [计次], 文本代码, 3, ), “公开”))
    赋值 (变量信息 [计次], 备注, 结果.未知支持库函数_12 (变量信息 [计次], 文本代码, 4, ))
.计次循环尾 ()
返回 (变量信息 [1])

.子程序 图片变量_解析代码, 反编译图片信息, 公开, 返回解析得到的第一个常量信息结构
.参数 常量代码, 文本型, , 
.参数 变量信息, 反编译图片信息, 参考 可空 数组, 提供一个数组保存解析后得到的信息结构

.局部变量 结果, 未知类型0x30002, , , 
.局部变量 正则, 未知类型0x30001, 静态, , 
.局部变量 Null, 反编译图片信息, , , 
.局部变量 计次, 整数型, , , 
.局部变量 数组, 文本型, , "0", 

清除数组 (变量信息)
拆分代码 (常量代码, “图片”, 3, 真, 数组, 真)
赋值 (计次, 取数组成员数 (数组))
.如果真 (等于 (计次, 0))
    返回 (Null)
.如果真结束
.如果真 (正则.未知支持库函数_4 ())
    正则.未知支持库函数_3 (“^ *\.图片 +(.*?) *, *(.*?) *, *(.*?) *, * ?(.*?)$”, )
.如果真结束
重定义数组 (变量信息, 假, 选择 (是否为空 (变量信息), 1, 计次))
.计次循环首 (计次, 计次)
    .如果真 (并且 (等于 (计次, 2), 是否为空 (变量信息)))
        返回 (变量信息 [1])
    .如果真结束
    StrTrim (数组 [计次], #换行符)
    赋值 (变量信息 [计次], 文本代码, 数组 [计次])
    赋值 (结果, 正则.未知支持库函数_7 (变量信息 [计次], 文本代码, 1, ))
    赋值 (变量信息 [计次], 名称, 结果.未知支持库函数_12 (变量信息 [计次], 文本代码, 1, ))
    赋值 (变量信息 [计次], 公开, 等于 (结果.未知支持库函数_12 (变量信息 [计次], 文本代码, 3, ), “公开”))
    赋值 (变量信息 [计次], 备注, 结果.未知支持库函数_12 (变量信息 [计次], 文本代码, 4, ))
.计次循环尾 ()
返回 (变量信息 [1])


 ' 不属于任何一个程序集、类模块的函数：
