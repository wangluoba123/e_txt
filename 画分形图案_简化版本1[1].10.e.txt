 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：本源码来自易语言资源网(www.5A5X.com)
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：             易语言资源网注意事项
--============   www.5A5X.com  =============--
* 易语言资源网为易语言官方站、易语言官方论坛提供辅助资源站；本易语言资源网( www.5A5X.com)所有软件和资料均为软件作者提供和网友推荐发布而来，其版权归该软件和程序源码的合法拥有者所有，本站易语言资源网整理收集仅供易语言用户学习和易语言技术研究探讨使用，不得用于任何商业用途。如果由于以上原因造成的版权纠纷本站概不负责！
* 本站资源未经许可,任何网站不得非法盗链及抄袭本站资源；如引用，请注明来自易语言资源网，谢谢合作！
--============   www.5A5X.com  =============--
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 378
    高度 = 350
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 1
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 真
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    窗口类名 = “”
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “程序正在启动。。。”
    帮助文件名 = “”



.常量 迫切性下限, "0.002", 公开, 
.常量 迫切性上限, "0.01", 公开, 
.常量 迫切像素阈值, "0.5", 公开, 
.常量 迫切性统计周期, "10000.5", 公开, 
.常量 时钟1的周期, "200", 公开, 
.常量 每周期运算时间, "150", 公开, 
.常量 倍数, "1.5", 公开, 放大或缩小的倍数
.常量 _启动窗口_标题, "“画分形图案 简化版本1.10”", 公开, 
.常量 允许最小值, "1e-018", 公开, 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 5 0 系统核心支持库
 ' BmpOperate 42305932-06E6-47a5-AC79-8BDCDC58DF61 2 0 位图操作支持库




数据类型 打开文件名, , 是从 胡说 那里抄来的
    .成员 结构长度, 整数型, , , 结构长度
    .成员 窗体句柄, 整数型, , , 窗体句柄
    .成员 应用程序实例句柄, 整数型, , , 应用程序实例句柄 (貌似不用管)
    .成员 文件名过滤器, 字节集, , , 文件名过滤器,这里要感谢云外归鸟的指点.
    .成员 lpstrCustomFilter, 文本型, , , 
    .成员 nMaxCustFilter, 整数型, , , 
    .成员 nFilterIndex, 整数型, , , 
    .成员 文件名, 文本型, , , 存储用户选择的文件名（盘符＋路径＋文件名＋扩展名），必须事先初始化缓冲区
    .成员 文件名长度, 整数型, , , 文件名长度
    .成员 返回文件名, 文本型, , , 返回文件名（文件名＋扩展名）
    .成员 返回文件名长度, 整数型, , , 返回文件名长度
    .成员 初始目录, 文本型, , , 初始目录
    .成员 对话框标题, 文本型, , , 对话框标题
    .成员 flags, 整数型, , , OFN_
    .成员 nFileOffset, 整数型, , , 
    .成员 nFileExtension, 整数型, , , 
    .成员 默认扩展名, 文本型, , , 默认扩展名，如果用户没有输入扩展名，那么这个默认值会被追加到文件名最后。这个值设置时不应包括点“.”
    .成员 lCustData, 整数型, , , 
    .成员 lpfnHook, 整数型, , , 
    .成员 lpTemplateName, 文本型, , , 

.全局变量 平滑模式, 逻辑型, , , 
.全局变量 总像素数, 整数型, , , 
.全局变量 计算所需点数, 整数型, , , 
.全局变量 显示菜单, 逻辑型, , , 

.DLL命令 取保存的文件名, 整数型, "comdlg32", "GetSaveFileNameA", , 打开另存为对话框
    .参数 Ipofn, 打开文件名, , 

.DLL命令 取打开的文件名, 整数型, "comdlg32.dll", "GetOpenFileNameA", , 打开打开对话框
    .参数 pOpenfilename, 打开文件名, , 

.窗口程序集 画分形图主程序, , , 

.程序集变量 显示的位图, 位图, , , 
.程序集变量 平滑模式时的缓冲数据, 整数型, , "0", 
.程序集变量 对角线对应长度, 双精度小数型, , , 越小，放大的越厉害
.程序集变量 中心x, 双精度小数型, , , 
.程序集变量 中心y, 双精度小数型, , , 
.程序集变量 窗口宽度, 整数型, , , 
.程序集变量 窗口高度, 整数型, , , 
.程序集变量 图片宽度, 整数型, , , 
.程序集变量 图片高度, 整数型, , , 
.程序集变量 匿名程序集变量_693, 空白型, , , 
.程序集变量 当前允许的次数, 整数型, , , 
.程序集变量 当前已完成像素数, 整数型, , , 
.程序集变量 当前左键被按下, 逻辑型, , , 
.程序集变量 鼠标x, 整数型, , , 
.程序集变量 鼠标y, 整数型, , , 
.程序集变量 匿名程序集变量_723, 空白型, , , 
.程序集变量 需要增加迭代次数限制的迫切性, 双精度小数型, , , 大于0.01表示比较迫切
.程序集变量 计数器, 整数型, , , 
.程序集变量 待刷新, 逻辑型, , , 
.程序集变量 匿名程序集变量_986, 空白型, , , 
.程序集变量 临时位图, 位图, , , 
.程序集变量 图片编号, 整数型, , , 
.子程序 __启动窗口_创建完毕, 空白型, , 
 ' --========  易语言资源网  (www.5A5X.com)  ======--
 ' 努力创建完善、持续更新的易语言学习例程源码资源站
 ' --================   www.5A5X.com  ===========--
 ' --==================   易语言资源网注意事项  ================--
 ' * 易语言资源网为易语言官方站、易语言官方论坛提供辅助资源站；
 ' 本易语言资源网( www.5A5X.com)所有软件和资料均为软件作者提
 ' 供和网友推荐发布而来，其版权归该软件和程序源码的合法拥有者所
 ' 有，本站易语言资源网整理收集仅供易语言用户学习和易语言技术研
 ' 究探讨使用，不得用于任何商业用途。如果由于以上原因造成的版权
 ' 纠纷本站概不负责！
 ' * 本站资源未经许可，任何网站不得非法盗链及抄袭本站资源；如引用
 ' 页面，请注明来自易语言资源网，谢谢合作！
 ' --=====================   www.5A5X.com  ================--

置随机数种子 (20101114)
赋值 (中心x, -0.5)
赋值 (中心y, 0)
赋值 (对角线对应长度, 5)
赋值 (当前允许的次数, 100)
赋值 (.时钟周期, #时钟1的周期)

.子程序 取颜色分量, 整数型, 公开, 
.参数 颜色值, 整数型, , 
.参数 颜色编号, 整数型, , 0:红 1:绿 2:蓝

返回 (位与 (右移 (颜色值, 相减 (相乘 (颜色编号, 8), 8)), 255))
 ' 本源码来自易语言资源网(www.5A5X.com)

.子程序 __启动窗口_尺寸被改变, 空白型, , 
.局部变量 对角线对应像素数, 整数型, , , 
.局部变量 i, 整数型, , , 
.局部变量 j, 整数型, , , 
.局部变量 较小宽度, 整数型, , , 
.局部变量 较小高度, 整数型, , , 
.局部变量 旧对角线像素数, 小数型, , , 
.局部变量 新对角线像素数, 小数型, , , 
.局部变量 缩放比例, 小数型, , , 
.局部变量 旧中点x, 整数型, , , 
.局部变量 旧中点y, 整数型, , , 
.局部变量 老像素x, 整数型, , , 
.局部变量 中点x, 整数型, , , 
.局部变量 中点y, 整数型, , , 
.局部变量 老像素y, 整数型, , , 


赋值 (旧对角线像素数, 求平方根 (相加 (相乘 (窗口宽度, 窗口宽度), 相乘 (窗口高度, 窗口高度))))
赋值 (旧中点x, 相除 (窗口宽度, 2))
赋值 (旧中点y, 相除 (窗口高度, 2))
 ' 如果真 (_启动窗口.取用户区宽度 () ＝ 0 或 _启动窗口.取用户区高度 () ＝ 0)


赋值 (窗口宽度, _启动窗口.取用户区宽度 ())
赋值 (窗口高度, _启动窗口.取用户区高度 ())
0.移动 (0, 窗口宽度, 窗口高度)
赋值 (新对角线像素数, 求平方根 (相加 (相乘 (窗口宽度, 窗口宽度), 相乘 (窗口高度, 窗口高度))))
赋值 (中点x, 相除 (窗口宽度, 2))
赋值 (中点y, 相除 (窗口高度, 2))

赋值 (缩放比例, 相除 (新对角线像素数, 旧对角线像素数))
临时位图.创建 (窗口宽度, 窗口高度, 24, #黑色)
 ' ''''''''''''''''''
.如果真 (或者 (等于 (旧对角线像素数, 0), 等于 (旧中点x, 0), 等于 (旧中点y, 0), 等于 (相乘 (窗口宽度, 窗口高度), 0)))
    赋值 (待刷新, 真)
    返回 ()
.如果真结束

赋值 (当前已完成像素数, 0)
显示的位图.创建 (窗口宽度, 窗口高度, 24, #黑色)
赋值 (图片宽度, 窗口宽度)
赋值 (图片高度, 窗口高度)


.子程序 _时钟1_周期事件, 空白型, , 
.局部变量 像素x, 整数型, , , 
.局部变量 像素y, 整数型, , , 
.局部变量 坐标x, 双精度小数型, , , 
.局部变量 坐标y, 双精度小数型, , , 
.局部变量 N, 整数型, , , 
.局部变量 颜色, 整数型, , , 
.局部变量 哈希, 整数型, , , 
.局部变量 对角线对应像素数, 整数型, , , 
.局部变量 开始计算时的启动时间, 整数型, , , 
.局部变量 完成度, 小数型, , , 
.局部变量 c, 整数型, , , 
.局部变量 分量平均值, 整数型, , , 
.局部变量 z1, 整数型, , , 
.局部变量 z2, 整数型, , , 
.局部变量 平均值, 整数型, , , 

赋值 (开始计算时的启动时间, 取启动时间 ())
 ' 输出调试文本 (“_时钟1_周期事件”)
.如果真 (不等于 (相乘 (窗口宽度, 窗口高度), 0))
    赋值 (总像素数, 相乘 (窗口宽度, 窗口高度))
    .如果 (平滑模式)
        赋值 (计算所需点数, 相乘 (总像素数, 4))
    .否则
        赋值 (计算所需点数, 总像素数)
    .如果结束
    
.如果真结束

.如果真 (并且 (等于 (待刷新, 假), 大于或等于 (当前已完成像素数, 计算所需点数)))
    返回 ()
.如果真结束
赋值 (待刷新, 真)
.判断循环首 (小于 (相减 (取启动时间 (), 开始计算时的启动时间), #每周期运算时间))
    
    .如果真 (大于或等于 (当前已完成像素数, 计算所需点数))
        跳出循环 ()
    .如果真结束
    
    赋值 (哈希, 当前已完成像素数)
    
     ' ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~以下部分属于“折腾”
    .如果真 (不等于 (求余数 (计算所需点数, 127), 0)) ' 随便找个素数，比如127
        赋值 (哈希, 求余数 (相乘 (哈希, 127), 计算所需点数))
    .如果真结束
    
    .如果真 (不等于 (求余数 (计算所需点数, 7), 0))
        赋值 (哈希, 求余数 (相乘 (哈希, 7), 计算所需点数))
    .如果真结束
    
    .如果真 (不等于 (求余数 (计算所需点数, 3), 0))
        赋值 (哈希, 求余数 (相乘 (哈希, 3), 计算所需点数))
    .如果真结束
     ' ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~以上部分属于“折腾”
    
    .如果 (平滑模式)
         ' ===================================================================================================
         ' 平缓模式
        赋值 (像素x, 求余数 (哈希, 相乘 (图片宽度, 2)))
        赋值 (像素y, 相除 (哈希, 相乘 (图片宽度, 2)))
        
        赋值 (坐标x, 相加 (中心x, 相乘 (相除 (取像素边长 (), 2), 相减 (像素x, 图片宽度))))
        赋值 (坐标y, 相加 (中心y, 相乘 (相除 (取像素边长 (), 2), 相减 (像素y, 图片高度))))
        赋值 (N, 求迭代次数 (坐标x, 坐标y, 当前允许的次数))
        .如果真 (小于 (N, 当前允许的次数))
            赋值 (需要增加迭代次数限制的迫切性, 相乘 (需要增加迭代次数限制的迫切性, 相减 (1, 相除 (1, #迫切性统计周期))))
            .如果真 (大于 (N, 相乘 (当前允许的次数, #迫切像素阈值)))
                赋值 (需要增加迭代次数限制的迫切性, 相加 (需要增加迭代次数限制的迫切性, 相除 (1, #迫切性统计周期)))
            .如果真结束
            
        .如果真结束
        
        赋值 (颜色, 着色 (N, 当前允许的次数))
         ' 显示的位图.置某点颜色 (像素x, 像素y, 颜色)
        赋值 (平滑模式时的缓冲数据 [相加 (像素y, 1)] [相加 (像素x, 1)], 颜色)
        赋值 (平均值, 0)
        .变量循环首 (0, 2, 1, c)
            赋值 (分量平均值, 0)
            .变量循环首 (位与 (像素y, 相减 (相乘 (256, 256, 256), 2)), 相加 (位与 (像素y, 相减 (相乘 (256, 256, 256), 2)), 1), 1, z1)
                .变量循环首 (位与 (像素x, -2), 相加 (位与 (像素x, -2), 1), 1, z2)
                    赋值 (分量平均值, 相加 (分量平均值, 右移 (位与 (平滑模式时的缓冲数据 [相加 (z1, 1)] [相加 (z2, 1)], 左移 (255, 相乘 (c, 8))), 相乘 (c, 8))))
                    
                .变量循环尾 ()
            .变量循环尾 ()
            赋值 (分量平均值, 相除 (分量平均值, 4))
            .如果真 (大于 (分量平均值, 255))
                赋值 (分量平均值, 255)
                 ' 本源码来自易语言资源网(www.5A5X.com)
            .如果真结束
            赋值 (平均值, 相加 (平均值, 左移 (分量平均值, 相乘 (c, 8))))
            
        .变量循环尾 ()
        显示的位图.置某点颜色 (相除 (像素x, 2), 相除 (像素y, 2), 平均值)
        赋值 (当前已完成像素数, 相加 (当前已完成像素数, 1))
        
         ' ===================================================================================================
    .否则
         ' 普通模式
        赋值 (像素x, 求余数 (哈希, 图片宽度))
        赋值 (像素y, 相除 (哈希, 图片宽度))
        
        赋值 (坐标x, 相加 (中心x, 相乘 (取像素边长 (), 相减 (像素x, 相除 (图片宽度, 2)))))
        赋值 (坐标y, 相加 (中心y, 相乘 (取像素边长 (), 相减 (像素y, 相除 (图片高度, 2)))))
        赋值 (N, 求迭代次数 (坐标x, 坐标y, 当前允许的次数))
        .如果真 (小于 (N, 当前允许的次数))
            赋值 (需要增加迭代次数限制的迫切性, 相乘 (需要增加迭代次数限制的迫切性, 相减 (1, 相除 (1, #迫切性统计周期))))
            .如果真 (大于 (N, 相乘 (当前允许的次数, #迫切像素阈值)))
                赋值 (需要增加迭代次数限制的迫切性, 相加 (需要增加迭代次数限制的迫切性, 相除 (1, #迫切性统计周期)))
            .如果真结束
            
        .如果真结束
        
        赋值 (颜色, 着色 (N, 当前允许的次数))
        显示的位图.置某点颜色 (像素x, 像素y, 颜色)
        赋值 (当前已完成像素数, 相加 (当前已完成像素数, 1))
         ' ===================================================================================================
    .如果结束
    
    
.判断循环尾 ()

.如果真 (大于 (需要增加迭代次数限制的迫切性, #迫切性上限))
    赋值 (当前允许的次数, 相乘 (当前允许的次数, 2))
    赋值 (需要增加迭代次数限制的迫切性, 求平方根 (相乘 (#迫切性上限, #迫切性下限)))
     ' 当前已完成像素数 ＝ 0  '如果不把这行注释掉，经常会出现莫名其妙要等好久的情况
.如果真结束

.如果真 (并且 (小于 (需要增加迭代次数限制的迫切性, #迫切性下限), 大于 (当前已完成像素数, 相乘 (计算所需点数, 0.5)), 大于 (当前允许的次数, 200)))
    赋值 (当前允许的次数, 相除 (当前允许的次数, 2))
    赋值 (需要增加迭代次数限制的迫切性, 求平方根 (相乘 (#迫切性上限, #迫切性下限)))
.如果真结束

赋值 (计数器, 相加 (计数器, 1))
.如果真 (大于 (计数器, 相除 (计算所需点数, 150000)))
    
    赋值 (图片编号, 载入图片 (显示的位图.取位图数据 ()))
    图片编号.画图片 (0, 0, 显示的位图.取宽度 (), 显示的位图.取高度 (), )
    卸载图片 (图片编号)
    赋值 (完成度, 相乘 (相除 (到小数 (当前已完成像素数), 计算所需点数), 100))
    赋值 (_启动窗口., #_启动窗口_标题)
     ' 如果真 (完成度 ≠ 100)
    赋值 (_启动窗口., 相加 (到文本 (完成度), “％ ”, _启动窗口.))
    
    
    
    赋值 (计数器, 0)
    赋值 (待刷新, 假)
.如果真结束




.子程序 获取对应x, 双精度小数型, , 
.参数 像素x, 整数型, , 



.子程序 取较小值, 整数型, , 
.参数 x, 整数型, , 
.参数 y, 整数型, , 

.如果 (大于 (x, y))
    返回 (y)
.否则
    返回 (x)
.如果结束


.子程序 求迭代次数, 整数型, , 
.参数 坐标x, 双精度小数型, , 
.参数 坐标y, 双精度小数型, , 
.参数 允许的次数, 整数型, , 

.局部变量 次数, 整数型, , , 
.局部变量 迭代_实部, 双精度小数型, , , 
.局部变量 实, 双精度小数型, , , 
.局部变量 虚, 双精度小数型, , , 
.局部变量 绝对值方, 双精度小数型, , , 

赋值 (实, 0)
赋值 (虚, 0)
.变量循环首 (1, 允许的次数, 1, 次数)
    赋值 (迭代_实部, 相加 (相减 (相乘 (实, 实), 相乘 (虚, 虚)), 坐标x))
    赋值 (虚, 相加 (相乘 (2, 实, 虚), 坐标y))
    赋值 (实, 迭代_实部)
    赋值 (绝对值方, 相加 (相乘 (实, 实), 相乘 (虚, 虚)))
    .如果真 (大于 (绝对值方, 20))
        跳出循环 ()
    .如果真结束
    
.变量循环尾 ()
返回 (次数)


.子程序 着色, 整数型, , 
.参数 次数, 整数型, , 
.参数 允许的次数, 整数型, , 

.局部变量 红, 整数型, , , 
.局部变量 绿, 整数型, , , 
.局部变量 蓝, 整数型, , , 

.如果 (小于 (次数, 允许的次数))
    赋值 (红, 相乘 (255, 0.5, 相减 (1, 求余弦 (求平方根 (相除 (相乘 (2, 3.1416, 次数), 150)))))) ' 红  ''此处注释多余
    赋值 (绿, 相乘 (255, 0.5, 相减 (1, 求余弦 (求平方根 (相除 (相乘 (3, 3.1416, 次数), 150)))))) ' 绿
    赋值 (蓝, 相乘 (255, 0.5, 相减 (1, 求余弦 (求平方根 (相除 (相乘 (4, 3.1416, 次数), 150)))))) ' 蓝
    返回 (相加 (红, 相乘 (绿, 256), 相乘 (蓝, 256, 256)))
     ' 本源码来自易语言资源网(www.5A5X.com)
.否则
    返回 (0)
.如果结束


.子程序 _画板1_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (当前左键被按下, 真)
赋值 (鼠标x, 横向位置)
赋值 (鼠标y, 纵向位置)

.子程序 __启动窗口_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

获得键盘输入 (键代码, 功能键状态)


.子程序 获得键盘输入, 空白型, , 
.参数 字符代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 移动距离, 双精度小数型, , , 
.局部变量 倍数, 双精度小数型, , , 

赋值 (移动距离, 相除 (对角线对应长度, 6))
.如果真 (等于 (功能键状态, 1)) ' Ctrl键被按下
    .如果真 (等于 (字符代码, #C键)) ' Ctrl + C
        _复制视角_被选择 ()
        返回 ()
    .如果真结束
    
    .如果真 (等于 (字符代码, #V键)) ' Ctrl + V
        _粘贴视角_被选择 ()
        返回 ()
    .如果真结束
    
    .如果真 (等于 (字符代码, #S键)) ' Ctrl + S
        _保存图片_被选择 ()
        返回 ()
    .如果真结束
    
.如果真结束

.如果真 (等于 (功能键状态, 0))
    .如果真 (或者 (等于 (字符代码, #A键), 等于 (字符代码, #左光标键))) ' 左
        赋值 (中心x, 相减 (中心x, 移动距离))
        图片移动 (移动距离, 0)
        返回 ()
    .如果真结束
    
    
    .如果真 (或者 (等于 (字符代码, #D键), 等于 (字符代码, #右光标键))) ' 右
        赋值 (中心x, 相加 (中心x, 移动距离))
        图片移动 (负 (移动距离), 0)
        返回 ()
    .如果真结束
    
    .如果真 (或者 (等于 (字符代码, #W键), 等于 (字符代码, #上光标键))) ' 上
        赋值 (中心y, 相减 (中心y, 移动距离))
        图片移动 (0, 移动距离)
        返回 ()
    .如果真结束
    
    .如果真 (或者 (等于 (字符代码, #S键), 等于 (字符代码, #下光标键))) ' 下
        赋值 (中心y, 相加 (中心y, 移动距离))
        图片移动 (0, 负 (移动距离))
         ' 当前已完成像素数 ＝ 0
        返回 ()
    .如果真结束
    
    .如果真 (或者 (等于 (字符代码, #等号键), 等于 (字符代码, #F键))) ' 放大
        赋值 (对角线对应长度, 相除 (对角线对应长度, #倍数))
        图片放大 (#倍数)
         ' 当前已完成像素数 ＝ 0
        返回 ()
    .如果真结束
    
    .如果真 (或者 (等于 (字符代码, #减号键), 等于 (字符代码, #X键)))
        赋值 (对角线对应长度, 相乘 (对角线对应长度, #倍数))
        图片放大 (相除 (1, #倍数))
        返回 ()
    .如果真结束
    
    
.如果真结束



 ' .如果真 (等于 (字符代码, #U键))
     ' 撤销一步 ()
.如果真结束


.子程序 _画板1_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

获得键盘输入 (键代码, 功能键状态)


.子程序 图片移动, 空白型, , 
.参数 移动坐标x, 双精度小数型, , 
.参数 移动坐标y, 双精度小数型, , 

.局部变量 移动像素x, 整数型, , , 
.局部变量 移动像素y, 整数型, , , 
.局部变量 j, 整数型, , , 
.局部变量 i, 整数型, , , 
.局部变量 新像素x, 整数型, , , 
.局部变量 新像素y, 整数型, , , 
.局部变量 对角线对应像素数, 整数型, , , 


赋值 (移动像素x, 相除 (移动坐标x, 取像素边长 ()))
赋值 (移动像素y, 相除 (移动坐标y, 取像素边长 ()))
图片移动像素 (移动像素x, 移动像素y)
返回 ()

 ' 临时位图.创建 (窗口宽度, 窗口高度, 24, #黑色)
 ' ' 较小宽度 ＝ 取较小值 (显示的位图.取宽度 (), 窗口宽度)
 ' ' 较小高度 ＝ 取较小值 (显示的位图.取高度 (), 窗口高度)

 ' .变量循环首 (1, 窗口高度, 1, i)
     ' .变量循环首 (1, 窗口宽度, 1, j)
         ' 新像素x ＝ j ＋ 移动像素x
         ' 新像素y ＝ i ＋ 移动像素y
        
         ' .如果真 (并且 (大于 (新像素x, 0), 大于 (新像素y, 0), 小于或等于 (新像素x, 窗口宽度), 小于或等于 (新像素y, 窗口高度)))
             ' 临时位图.置某点颜色 (j ＋ 移动像素x, i ＋ 移动像素y, 显示的位图.取某点颜色 (j, i))
        .如果真结束
        
     ' .变量循环尾 ()
 ' .变量循环尾 ()
 ' 显示的位图.创建 (窗口宽度, 窗口高度, 24, #黑色)
 ' .变量循环首 (1, 窗口宽度, 1, j)
     ' .变量循环首 (1, 窗口高度, 1, i)
         ' 显示的位图.置某点颜色 (j, i, 临时位图.取某点颜色 (j, i))
     ' .变量循环尾 ()
 ' .变量循环尾 ()

 ' 当前已完成像素数 ＝ 0

 ' 本源码来自易语言资源网(www.5A5X.com)

.子程序 图片移动像素, 空白型, , 
.参数 移动像素x, 整数型, , 
.参数 移动像素y, 整数型, , 

.局部变量 j, 整数型, , , 
.局部变量 i, 整数型, , , 
.局部变量 新像素x, 整数型, , , 
.局部变量 新像素y, 整数型, , , 
.局部变量 对角线对应像素数, 整数型, , , 

临时位图.创建 (窗口宽度, 窗口高度, 24, #黑色)

.变量循环首 (1, 窗口高度, 1, i)
    .变量循环首 (1, 窗口宽度, 1, j)
        赋值 (新像素x, 相加 (j, 移动像素x))
        赋值 (新像素y, 相加 (i, 移动像素y))
        
        .如果真 (并且 (大于 (新像素x, 0), 大于 (新像素y, 0), 小于或等于 (新像素x, 窗口宽度), 小于或等于 (新像素y, 窗口高度)))
            临时位图.置某点颜色 (相加 (j, 移动像素x), 相加 (i, 移动像素y), 显示的位图.取某点颜色 (j, i))
        .如果真结束
        
    .变量循环尾 ()
.变量循环尾 ()
显示的位图.创建 (窗口宽度, 窗口高度, 24, #黑色)
.变量循环首 (1, 窗口宽度, 1, j)
    .变量循环首 (1, 窗口高度, 1, i)
        显示的位图.置某点颜色 (j, i, 临时位图.取某点颜色 (j, i))
    .变量循环尾 ()
.变量循环尾 ()

赋值 (当前已完成像素数, 0)


.子程序 图片放大, 空白型, , 
.参数 比例, 双精度小数型, , 

.局部变量 i, 整数型, , , 
.局部变量 j, 整数型, , , 
.局部变量 中点x, 整数型, , , 
.局部变量 中点y, 整数型, , , 
.局部变量 老像素y, 整数型, , , 
.局部变量 老像素x, 整数型, , , 


临时位图.创建 (窗口宽度, 窗口高度, 24, #黑色)
赋值 (中点x, 相除 (相加 (窗口宽度, 1), 2))
赋值 (中点y, 相除 (相加 (窗口高度, 1), 2))

.变量循环首 (0, 相减 (窗口高度, 1), 1, i)
    .变量循环首 (0, 相减 (窗口宽度, 1), 1, j)
        赋值 (老像素x, 相加 (中点x, 相除 (相减 (j, 中点x), 比例)))
        赋值 (老像素y, 相加 (中点y, 相除 (相减 (i, 中点y), 比例)))
        
        .如果真 (并且 (大于 (老像素x, 0), 大于 (老像素y, 0), 小于或等于 (老像素x, 窗口宽度), 小于或等于 (老像素y, 窗口高度)))
            临时位图.置某点颜色 (j, i, 显示的位图.取某点颜色 (老像素x, 老像素y))
        .如果真结束
        
    .变量循环尾 ()
.变量循环尾 ()
显示的位图.创建 (窗口宽度, 窗口高度, 24, #黑色)
.变量循环首 (0, 相减 (窗口高度, 1), 1, i)
    
    .变量循环首 (0, 相减 (窗口宽度, 1), 1, j)
        
        显示的位图.置某点颜色 (j, i, 临时位图.取某点颜色 (j, i))
    .变量循环尾 ()
.变量循环尾 ()

赋值 (当前已完成像素数, 0)
.如果真 (平滑模式)
    图片到缓冲数据 ()
     ' 缓冲数据放大 (比例)
.如果真结束


.子程序 _画板1_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (当前左键被按下, 假)


.子程序 _画板1_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 坐标移动x, 双精度小数型, , , 
.局部变量 坐标移动y, 双精度小数型, , , 

.如果真 (当前左键被按下)
    赋值 (坐标移动x, 相乘 (相减 (横向位置, 鼠标x), 取像素边长 ()))
    赋值 (坐标移动y, 相乘 (相减 (纵向位置, 鼠标y), 取像素边长 ()))
     ' 本源码来自易语言资源网(www.5A5X.com)
    赋值 (中心x, 相减 (中心x, 坐标移动x))
    赋值 (中心y, 相减 (中心y, 坐标移动y))
    
    图片移动像素 (相减 (横向位置, 鼠标x), 相减 (纵向位置, 鼠标y))
    .如果真 (平滑模式)
        图片到缓冲数据 ()
        
    .如果真结束
    
.如果真结束
赋值 (鼠标x, 横向位置)
赋值 (鼠标y, 纵向位置)


.子程序 取像素边长, 双精度小数型, , 
.局部变量 对角线对应像素数, 整数型, , , 

赋值 (对角线对应像素数, 求平方根 (相加 (相乘 (窗口宽度, 窗口宽度), 相乘 (窗口高度, 窗口高度))))

.如果真 (不等于 (对角线对应像素数, 0))
    返回 (相除 (对角线对应长度, 对角线对应像素数))
.如果真结束
 ' 输出调试文本 (“取像素边长()中，对角线对应像素数=0”)
返回 (0)


.子程序 __启动窗口_滚轮被滚动, 逻辑型, , 
.参数 滚动距离, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 对应倍数, 双精度小数型, , , 

赋值 (对应倍数, 求次方 (#倍数, 相除 (滚动距离, 2.5)))
赋值 (对角线对应长度, 相除 (对角线对应长度, 对应倍数))

.如果真 (小于 (相除 (取像素边长 (), #允许最小值), 1))
    赋值 (对角线对应长度, 相乘 (#允许最小值, 求平方根 (相加 (相乘 (窗口宽度, 窗口宽度), 相乘 (窗口高度, 窗口高度)))))
    图片放大 (1.1)
     ' 信息框 (“asdfasdfasd”, 0, )
    返回 ()
.如果真结束
图片放大 (对应倍数)


.子程序 _画板1_被双击, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 被双击点相对中心坐标x, 双精度小数型, , , 
.局部变量 被双击点相对中心坐标y, 双精度小数型, , , 
.局部变量 中点x, 整数型, , , 
.局部变量 中点y, 整数型, , , 
.局部变量 老像素x, 整数型, , , 
.局部变量 j, 整数型, , , 
.局部变量 老像素y, 整数型, , , 
.局部变量 i, 整数型, , , 

赋值 (中点x, 相除 (窗口宽度, 2))
赋值 (中点y, 相除 (窗口高度, 2))
赋值 (被双击点相对中心坐标x, 相乘 (相减 (横向位置, 中点x), 取像素边长 ()))
赋值 (被双击点相对中心坐标y, 相乘 (相减 (纵向位置, 中点y), 取像素边长 ()))
赋值 (中心x, 相加 (中心x, 被双击点相对中心坐标x))
赋值 (中心y, 相加 (中心y, 被双击点相对中心坐标y))
赋值 (对角线对应长度, 相除 (对角线对应长度, #倍数))

临时位图.创建 (窗口宽度, 窗口高度, 24, #黑色)

.变量循环首 (0, 相减 (窗口高度, 1), 1, i)
    .变量循环首 (0, 相减 (窗口宽度, 1), 1, j)
        赋值 (老像素x, 相加 (横向位置, 相除 (相减 (j, 中点x), #倍数)))
        赋值 (老像素y, 相加 (纵向位置, 相除 (相减 (i, 中点y), #倍数)))
        
        .如果真 (并且 (大于或等于 (老像素x, 0), 大于或等于 (老像素y, 0), 小于或等于 (老像素x, 窗口宽度), 小于或等于 (老像素y, 窗口高度)))
            临时位图.置某点颜色 (j, i, 显示的位图.取某点颜色 (老像素x, 老像素y))
        .如果真结束
        
    .变量循环尾 ()
.变量循环尾 ()
显示的位图.创建 (窗口宽度, 窗口高度, 24, #黑色)
.变量循环首 (0, 相减 (窗口高度, 1), 1, i)
    
    .变量循环首 (0, 相减 (窗口宽度, 1), 1, j)
        
        显示的位图.置某点颜色 (j, i, 临时位图.取某点颜色 (j, i))
    .变量循环尾 ()
.变量循环尾 ()

赋值 (当前已完成像素数, 0)
.如果真 (平滑模式)
    图片到缓冲数据 ()
     ' 本源码来自易语言资源网(www.5A5X.com)
.如果真结束


.子程序 _画板1_鼠标右键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 右键菜单1, 菜单, , , 

.弹出菜单 ()
 ' _启动窗口.文件

.子程序 _打开_被选择, 空白型, , 


.子程序 _放大_右键菜单_被选择, 空白型, , 
.局部变量 对应倍数, 双精度小数型, , , 

赋值 (对应倍数, 2)

赋值 (对角线对应长度, 相除 (对角线对应长度, 对应倍数))

.如果真 (小于 (相除 (取像素边长 (), #允许最小值), 1))
    赋值 (对角线对应长度, 相乘 (#允许最小值, 求平方根 (相加 (相乘 (窗口宽度, 窗口宽度), 相乘 (窗口高度, 窗口高度)))))
    图片放大 (1.1)
    .如果真 (平滑模式)
        图片到缓冲数据 ()
        
    .如果真结束
    
    返回 ()
    
.如果真结束
图片放大 (对应倍数)


.子程序 _平滑模式慢_右键菜单_被选择, 空白型, , 
.局部变量 y, 整数型, , , 
.局部变量 x, 整数型, , , 
.局部变量 c, 整数型, , , 

赋值 (平滑模式, 取反 (平滑模式))
赋值 (.选中, 平滑模式)
赋值 (当前已完成像素数, 0)
.如果 (平滑模式)
     ' 进入平缓模式
    重定义数组 (平滑模式时的缓冲数据, 假, 相乘 (图片高度, 2), 相乘 (图片宽度, 2))
    .变量循环首 (1, 图片高度, 1, y)
        .变量循环首 (1, 图片宽度, 1, x)
            赋值 (c, 显示的位图.取某点颜色 (x, y))
            赋值 (平滑模式时的缓冲数据 [相乘 (y, 2)] [相乘 (x, 2)], c)
            赋值 (平滑模式时的缓冲数据 [相减 (相乘 (y, 2), 1)] [相乘 (x, 2)], c)
            赋值 (平滑模式时的缓冲数据 [相乘 (y, 2)] [相减 (相乘 (x, 2), 1)], c)
            赋值 (平滑模式时的缓冲数据 [相减 (相乘 (y, 2), 1)] [相减 (相乘 (x, 2), 1)], c)
            
        .变量循环尾 ()
    .变量循环尾 ()
    
.否则
     ' 退出平缓模式
    重定义数组 (平滑模式时的缓冲数据, 假, 0)
    
    
.如果结束


.子程序 _关于_被选择, 空白型, , 
信息框 (相加 (#_启动窗口_标题, #换行符, “作者：正态分布”, #换行符, “最后修改时间：2011年1月13日15:37:04”), 0, “关于”)

.子程序 _菜单栏_右键菜单_被选择, 空白型, , 
_菜单栏_被选择 ()

.子程序 _退出_被选择, 空白型, , 
_启动窗口.销毁 ()

.子程序 _保存图片_被选择, 空白型, , 
.局部变量 所需的数据, 字节集, , , 
.局部变量 路径, 文本型, , "0", 
.局部变量 i, 整数型, , , 
.局部变量 str, 文本型, , , 
.局部变量 文件号, 整数型, , , 
.局部变量 E, 打开文件名, , , 
.局部变量 txt, 文本型, , , 
.局部变量 完整文件名, 文本型, , , 

赋值 (所需的数据, 显示的位图.取位图数据 ())

 ' 这两个函数得到云外归鸟的指点,在这里要谢谢他的帮助.
赋值 (E.结构长度, 76) ' 结构大小
赋值 (E.窗体句柄, _启动窗口.取窗口句柄 ())
赋值 (E.文件名过滤器, 相加 (到字节集 (“BMP位图(*.bmp)”), { 0 }, 到字节集 (“*.bmp”), { 0 }, 到字节集 (“所有文件(*.*)”), { 0 }, 到字节集 (“*.*”), { 0, 0 }))
赋值 (E.文件名, 取空白文本 (254))
赋值 (E.文件名长度, 255)
赋值 (E.返回文件名, 取空白文本 (254))
赋值 (E.返回文件名长度, 255)
赋值 (E.初始目录, 取当前目录 ())
赋值 (E.对话框标题, “将当前结果保存为图片...”)
赋值 (E.flags, 0)
赋值 (E.默认扩展名, “bmp”)
.如果真 (不等于 (取保存的文件名 (E), 0))
     ' 用户按确定
    赋值 (完整文件名, E.文件名)
    .如果真 (小于 (寻找文本 (完整文件名, “.”, , 假), 寻找文本 (完整文件名, “\”, , 假)))
        赋值 (完整文件名, 相加 (完整文件名, “.bmp”))
    .如果真结束
    输出调试文本 (相加 (“已将图片保存为 ”, 完整文件名))
    写到文件 (完整文件名, 所需的数据)
.如果真结束
 ' 本源码来自易语言资源网(www.5A5X.com)










.子程序 _帮助主题_被选择, 空白型, , 
信息框 (“本功能尚未实现”, 0, “调试”)

.子程序 _新建_被选择, 空白型, , 
信息框 (“本功能尚未实现”, 0, “调试”)

.子程序 _缩小_右键菜单_被选择, 空白型, , 
.局部变量 对应倍数, 小数型, , , 

赋值 (对应倍数, 0.5)

赋值 (对角线对应长度, 相除 (对角线对应长度, 对应倍数))

 ' .如果真 (小于 (相除 (取像素边长 (), #允许最小值), 1))
     ' 对角线对应长度 ＝ #允许最小值 × 求平方根 (窗口宽度 × 窗口宽度 ＋ 窗口高度 × 窗口高度)
     ' 图片放大 (1.1)
     ' 返回 ()
    
.如果真结束
图片放大 (对应倍数)


.子程序 图片到缓冲数据, 空白型, , 
.局部变量 c, 整数型, , , 
.局部变量 x, 整数型, , , 
.局部变量 y, 整数型, , , 

.变量循环首 (1, 图片高度, 1, y)
    .变量循环首 (1, 图片宽度, 1, x)
        赋值 (c, 显示的位图.取某点颜色 (x, y))
        赋值 (平滑模式时的缓冲数据 [相乘 (y, 2)] [相乘 (x, 2)], c)
        赋值 (平滑模式时的缓冲数据 [相减 (相乘 (y, 2), 1)] [相乘 (x, 2)], c)
        赋值 (平滑模式时的缓冲数据 [相乘 (y, 2)] [相减 (相乘 (x, 2), 1)], c)
        赋值 (平滑模式时的缓冲数据 [相减 (相乘 (y, 2), 1)] [相减 (相乘 (x, 2), 1)], c)
        
    .变量循环尾 ()
.变量循环尾 ()



.子程序 _保存图片_右键菜单_被选择, 空白型, , 
_保存图片_被选择 ()

.子程序 _菜单栏_被选择, 空白型, , 
赋值 (显示菜单, 取反 (显示菜单))
赋值 (.选中, 显示菜单)
赋值 (.选中, 显示菜单)
赋值 (.可视, 显示菜单)
赋值 (.可视, 显示菜单)
 ' 控制.可视 ＝ 显示菜单
赋值 (.可视, 显示菜单)
赋值 (.可视, 显示菜单)

.子程序 _另存为_被选择, 空白型, , 


.子程序 _复制视角_被选择, 空白型, , 
置剪辑板文本 (相加 (到文本 (中心x), “,”, 到文本 (中心y), “,”, 到文本 (对角线对应长度)))
' 本源码来自易语言资源网(www.5A5X.com)

.子程序 _复制视角_右键菜单_被选择, 空白型, , 
_复制视角_被选择 ()

.子程序 _粘贴视角_右键菜单_被选择, 空白型, , 
_粘贴视角_被选择 ()

.子程序 _粘贴视角_被选择, 空白型, , 
.局部变量 内容, 文本型, , "0", 

赋值 (内容, 分割文本 (取剪辑板文本 (), , ))
.如果真 (等于 (取数组下标 (内容, ), 3))
    赋值 (中心x, 到数值 (内容 [1]))
    赋值 (中心y, 到数值 (内容 [2]))
    赋值 (对角线对应长度, 到数值 (内容 [3]))
    赋值 (当前已完成像素数, 0)
    
.如果真结束



 ' 不属于任何一个程序集、类模块的函数：
