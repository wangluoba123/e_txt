 ' 文件类型：Windows模块源码

 ' 程序名称：ADO2_数据记录操作模块
 ' 程序描述：基于ADODB2支持库，对ACEESS或其它SQL数据库进行数据的增加、更新、删除、查询等操作，使记录操作更简单。xgeek@126.com

 ' 程序作者：恶人磨
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：xgeek@126.com
 ' 主页地址：
 ' 版权声明：
 ' 版本号：2.2
 ' 创建号：0.0





 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 4 系统核心支持库
 ' ADODB2 {EF0A0A93-05AC-4aec-884A-B65FB0FA135D} 2 0 ADODB数据驱动操作支持库





.程序集 程序集1, , , 

.子程序 _启动子程序, 整数型, , 请在本子程序中放置易模块初始化代码

_临时子程序 () ' 在初始化代码执行完毕后调用测试代码
返回 (0) ' 可以根据您的需要返回任意数值

.子程序 _临时子程序, 空白型, , 
 ' 本名称子程序用作测试程序用，仅在开发及调试环境中有效，编译发布程序前将被系统自动清空，请将所有用作测试的临时代码放在本子程序中。 ***注意不要修改本子程序的名称、参数及返回值类型。


.子程序 ADO_增加记录, 空白型, 公开, 
.参数 数据库连接, 未知类型0x20001, , 
.参数 表名, 文本型, , 要操作的表的名称
.参数 赋值语句, 文本型, , 如“name='张三',sex=1,address='road 99'”等

.局部变量 SQL, 文本型, , , 

赋值 (SQL, 相加 (“insert into ”, 表名, SQL赋值语句转换 (赋值语句)))
数据库连接.未知支持库函数_11 (SQL, , )
抛出异常 (数据库连接)

.子程序 ADO_更新记录, 空白型, 公开, 
.参数 数据库连接, 未知类型0x20001, , 
.参数 表名, 文本型, , 
.参数 赋值语句, 文本型, , 
.参数 条件, 文本型, , 

.局部变量 SQL, 文本型, , , 

赋值 (赋值语句, 到半角 (赋值语句))
赋值 (SQL, 相加 (“update ”, 表名, “ set ”, 赋值语句, “ where ”, 条件))
数据库连接.未知支持库函数_11 (SQL, , )
抛出异常 (数据库连接)

.子程序 ADO_删除记录, 空白型, 公开, 
.参数 数据库连接, 未知类型0x20001, , 
.参数 表名, 文本型, , 
.参数 条件, 文本型, , 

.局部变量 SQL, 文本型, , , 

赋值 (SQL, 相加 (“delete from ”, 表名, “ where ”, 条件))
数据库连接.未知支持库函数_11 (SQL, , )
抛出异常 (数据库连接)

.子程序 ADO_查询到组合框, 空白型, 公开, 
.参数 数据库连接, 未知类型0x20001, , 
.参数 表名, 文本型, , 
.参数 字段名, 文本型, , 
.参数 组合框, 组合框, , 
.参数 允许重复, 逻辑型, 可空, 

.局部变量 记录集, 未知类型0x20002, , , 
.局部变量 SQL, 文本型, , , 
.局部变量 i, 整数型, , , 

.如果 (允许重复)
    赋值 (SQL, 相加 (“select ”, 字段名, “ from ”, 表名))
.否则
    赋值 (SQL, 相加 (“select distinct ”, 字段名, “ from ”, 表名))
.如果结束

.如果 (记录集.未知支持库函数_44 (SQL, 数据库连接, #, #, 1))
    记录集.未知支持库函数_39 ()
    组合框.清空 ()
    .计次循环首 (记录集., i)
        组合框.加入项目 (记录集.未知支持库函数_59 (0, #文本型), )
        记录集.未知支持库函数_41 ()
    .计次循环尾 ()
    记录集.未知支持库函数_32 ()
.否则
    抛出异常 (数据库连接)
.如果结束


.子程序 抛出异常, 空白型, , 
.参数 数据库连接, 未知类型0x20001, , 

.如果真 (不等于 (数据库连接., “”))
    信息框 (数据库连接., #错误图标, “出错”)
.如果真结束


.子程序 ADO_查询返回文本, 文本型, 公开, 
.参数 数据库连接, 未知类型0x20001, , 
.参数 表名, 文本型, , 
.参数 字段名, 文本型, , 
.参数 条件, 文本型, , 

.局部变量 记录集, 未知类型0x20002, , , 
.局部变量 SQL, 文本型, , , 
.局部变量 W, 文本型, , , 

赋值 (SQL, 相加 (“select ”, 字段名, “ from ”, 表名, “ where ”, 条件))
.如果 (记录集.未知支持库函数_44 (SQL, 数据库连接, #, #, 1))
    记录集.未知支持库函数_39 ()
    返回 (记录集.未知支持库函数_59 (0, #文本型))
    记录集.未知支持库函数_32 ()
.否则
    抛出异常 (数据库连接)
    返回 (“”)
.如果结束


.子程序 ADO_查询返回文本_SQL, 文本型, 公开, 返回所有记录，用“|”隔开
.参数 数据库连接, 未知类型0x20001, , 
.参数 SQL, 文本型, , SQL查询语句，注意只返回第一个字段的所有记录。

.局部变量 记录集, 未知类型0x20002, , , 
.局部变量 W, 文本型, , , 
.局部变量 WW, 文本型, , , 

.如果 (记录集.未知支持库函数_44 (SQL, 数据库连接, 3, 1, 1))
    .计次循环首 (记录集., )
        赋值 (W, 记录集.未知支持库函数_59 (0, #文本型))
        赋值 (WW, 相加 (WW, “|”, W))
        记录集.未知支持库函数_41 ()
    .计次循环尾 ()
    赋值 (WW, 取文本右边 (WW, 相减 (取文本长度 (WW), 1)))
    返回 (WW)
    记录集.未知支持库函数_32 ()
.否则
    抛出异常 (数据库连接)
    返回 (“”)
.如果结束


.子程序 SQL赋值语句转换, 文本型, , 专门用于添加数据，把“name='张三'”转换为“(name) values('张三')”
.参数 赋值语句, 文本型, , 注意赋值不能为空，如“产值=”是不对的。

.局部变量 W, 文本型, , "0", 多个条件，形如“姓名='张三',职业='杀手'”
.局部变量 i, 整数型, , , 
.局部变量 条件数组文本, 文本型, , "0", 把每个条件的“＝”前后弄出来，这样语句简单。WW[1]就是等号前的，WW[2]就是等号后的东西。
.局部变量 结果, 文本型, , , 
.局部变量 M, 文本型, , , 
.局部变量 N, 文本型, , , 

赋值 (W, 分割文本 (赋值语句, “,”, ))
.计次循环首 (取数组成员数 (W), i)
    赋值 (条件数组文本, 分割文本 (W [i], “=”, ))
    赋值 (M, 相加 (M, “,”, 条件数组文本 [1]))
    赋值 (N, 相加 (N, “,”, 条件数组文本 [2]))
.计次循环尾 ()
赋值 (M, 相加 (“(”, 取文本右边 (M, 相减 (取文本长度 (M), 1)), “)”))
赋值 (N, 相加 (“(”, 取文本右边 (N, 相减 (取文本长度 (N), 1)), “)”))
输出调试文本 (相加 (M, “ values”, N))
返回 (相加 (M, “ values”, N))

.子程序 时间到格式文本, 文本型, , 
.参数 日期时间, 日期时间型, , 
.参数 形式, 整数型, 可空, 0是形如"2007-8-21 21:21"，没有秒喏，1是只取日期部分，2是只取时间部分

.如果真 (是否为空 (形式))
    赋值 (形式, 0)
.如果真结束

.判断开始 (等于 (形式, 0))
    返回 (相加 (到文本 (取年份 (日期时间)), “-”, 到文本 (取月份 (日期时间)), “-”, 到文本 (取日 (日期时间)), “ ”, 到文本 (取小时 (日期时间)), “:”, 取文本右边 (相加 (“0”, 到文本 (取分钟 (日期时间))), 2)))
.判断 (等于 (形式, 1))
    返回 (相加 (到文本 (取年份 (日期时间)), “-”, 到文本 (取月份 (日期时间)), “-”, 到文本 (取日 (日期时间))))
.默认
    返回 (相加 (到文本 (取小时 (日期时间)), “:”, 取文本右边 (相加 (“0”, 到文本 (取分钟 (日期时间))), 2)))
.判断结束




 ' 不属于任何一个程序集、类模块的函数：
