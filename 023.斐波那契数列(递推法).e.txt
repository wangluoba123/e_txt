 ' 文件类型：Windows窗口程序

 ' 程序名称：易语言经典算法 - 斐波那契数列
 ' 程序描述：　　显示斐波那契数列的有限位数
斐波那契数列为：0，1，1，2，3，5，8.......，即：当前项等于它前面两项的和。求出有限位数个斐波那契数列并显示出来。

 ' 程序作者：大有吴涛易语言软件公司
 ' 邮政编码：116001
 ' 联系地址：辽宁省大连市中山区人民路55号亚太国际金融中心
 ' 联系电话：+86(0411)88995831
 ' 传真号码：+86(0411)88995834
 ' 电子信箱：service@dywt.com.cn
 ' 主页地址：http://www.dywt.com.cn
 ' 版权声明：祝您一帆风顺，心想事成！
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 400
    高度 = 279
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “易语言经典算法 - 斐波那契数列（递推法）”
    帮助文件名 = “”





 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 4 系统核心支持库
 ' iext3 {B6F7542F-B8FE-46a8-9605-98856A687097} 2 0 扩展界面支持库三
 ' eCalc 306AA9E31B5940399723021A0D782077 1 0 数值计算支持库
 ' iext 27bb20fdd3e145e4bee3db39ddd6e64c 1 2 扩展界面支持库一





.窗口程序集 启动窗口程序集, , , 

.程序集变量 输入的数列位数, 整数型, , , 记录输入要显示几位的变量
.程序集变量 数列存储数组, 未知类型0x3000A, , "0", 计算出的数存储在此数组中
.子程序 __启动窗口_创建完毕, 空白型, , 
 ' 使用算法：递推法
 ' 问题：斐波那契数列
 ' 问题描述：
 ' 斐波那契数列为：0，1，1，2，3，5，8.......，即：当前项等于它前面两项的和。求出有限位数个斐波那契数列并显示出来。
 ' 问题分析：
 ' 求数列子程序（0）=0
 ' 求数列子程序（1）=1
 ' 求数列子程序（n）=求数列子程序(n-2)+求数列子程序(n-1)
 ' 通过上面规律可以推导出结果。
 ' 备注：
 ' 递推法是利用问题本身具有的递推关系求问题解的一种方法。
 ' 设要求问题的规模为N的解，当N=1时，解或为已知，或能很方便地得到解。
 ' 能采用递推法构造算法的问题有重要的递推性质，即当得到问题规模为i-1的解后，有问题的递推性质，能从已求得的规模为1，2，......，i-1的一系列解，构造出问题规模为i的解。
 ' 这样程序可以从i=0或i=1出发，重复地，由一直至i-1规模的解，通过递推，获得规模为i的解，直至规模为N的解。

.子程序 _计算图形按钮_被单击, 空白型, , 
.局部变量 局部计次变量, 整数型, , , 几次循环中记录循环次数的变量
.局部变量 求得的数, 未知类型0x3000A, , , 存储本次计算得到的数
.局部变量 项目索引, 整数型, , , 

全部删除 () ' 清空上一次查找的内容
清除数组 (数列存储数组)
赋值 (输入的数列位数, 到数值 (.内容)) ' 获取要查找多少位
.如果真 (大于 (输入的数列位数, 10000))
    .如果真 (不等于 (信息框 (“您输入的数值过大，处理数据时程序将会有一段时间无响应，是否继续？”, 相加 (#是否钮, #询问图标), “请问：”), #是钮))
         ' 如果不想等待很长时间则返回
        返回 ()
    .如果真结束
    
.如果真结束
.如果真 (小于 (输入的数列位数, 0)) ' 只能输入正整数
    赋值 (.内容, “”)
    返回 ()
.如果真结束
.计次循环首 (输入的数列位数, 局部计次变量) ' 依次求出每位数按顺序加入数组
    赋值 (求得的数, 递推求数列子程序 (相减 (局部计次变量, 1)))
    加入成员 (数列存储数组, 求得的数)
.计次循环尾 ()
.计次循环首 (取数组成员数 (数列存储数组), 局部计次变量) ' 把求出的所有数在编辑框中显示出来
    赋值 (项目索引, .插入表项 (相加 (“第”, 到文本 (局部计次变量), “个数是：”), , , , ))
    项目索引.置标题 (1, 数列存储数组.未知支持库函数_68 ( [局部计次变量]))
.计次循环尾 ()

.子程序 递推求数列子程序, 未知类型0x3000A, , 根据给定的位置参数求出与位置相对应的数值
.参数 数列相应位置, 整数型, , 本次要计算的数在数列中的位置

.局部变量 临时大数, 未知类型0x3000A, , , 定义数组第一位和第二位数字数值的变量
.局部变量 结果大数, 未知类型0x3000A, , , 存储两数相加得到的结果

.如果真 (等于 (数列相应位置, 0)) ' 如果是数列第一位数则返回0
    临时大数.未知支持库函数_69 (0)
    返回 (临时大数)
.如果真结束
.如果真 (等于 (数列相应位置, 1)) ' 如果是数列第二个数则返回1
    临时大数.未知支持库函数_69 (1)
    返回 (临时大数)
.如果真结束
 ' 如果是第二位以后的数则等于它的前两位的和
赋值 (结果大数, 数列存储数组.未知支持库函数_92 ( [相减 (数列相应位置, 1)], 数列存储数组 [数列相应位置]))

返回 (结果大数)



 ' 不属于任何一个程序集、类模块的函数：
