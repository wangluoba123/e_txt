 ' 文件类型：Windows控制台程序

 ' 程序名称：核盾网络验证
 ' 程序描述：核盾网络验证 www.5yyz.com
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 登录窗口 ' 博士网络验证
    左边 = 50
    顶边 = 50
    宽度 = 415
    高度 = 290
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    窗口类名 = “”
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “沙盘多开器验证  ”
    帮助文件名 = “”

窗口 功能窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 751
    高度 = 524
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    窗口类名 = “”
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “沙盘多开登陆工具”
    帮助文件名 = “”



.图片 dll, " ' 已保存到：D:\易语言学习\Data\沙盒.e\dll", , 
.图片 , , , 
.图片 VMPBegin, " ' 已保存到：D:\易语言学习\Data\沙盒.e\VMPBegin", 公开, 
.图片 VMPEnd, " ' 已保存到：D:\易语言学习\Data\沙盒.e\VMPEnd", 公开, 
.图片 测试dll, " ' 已保存到：D:\易语言学习\Data\沙盒.e\测试dll", , 
.常量 软件版本, "“1001”", , 
.常量 , , , 
.常量 INTERNET_FLAG_IGNORE_REDIRECT_TO_HTTPS, "16384", , 禁用检测这一特殊类型的重新传入。当这个标志使用,WinINet透明允许将从HTTP到HTTPS网址。这个标志可以使用的,HttpOpenRequest InternetOpenUrl
.常量 INTERNET_FLAG_SECURE, "8388608", , SSL访问
.常量 INTERNET_FLAG_NO_AUTO_REDIRECT, "2097152", , HttpSendRequest、InternetOpenUrl 不自动处理重定向
.常量 INTERNET_FLAG_NO_COOKIES, "524288", , 
.常量 INTERNET_COOKIE_THIRD_PARTY, "16", , 运行第三方COOKIE
.常量 INTERNET_FLAG_RELOAD, "2147483648", , 
.常量 HEX80000000, "2147483648", , 
.常量 HEXFFFFFFFF, "4294967295", , 
.常量 HEXFF, "255", , 
.常量 HEX100000000, "4294967296", , 
.常量 , , , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 5 3 系统核心支持库
 ' iext 27bb20fdd3e145e4bee3db39ddd6e64c 2 0 扩展界面支持库一
 ' EThread 5F99C1642A2F4e03850721B4F5D7C3F8 2 0 多线程支持库
 ' eAPI F7FC1AE45C5C4758AF03EF19F18A395D 3 1 应用接口支持库
 ' spec A512548E76954B6E92C21055517615B0 3 1 特殊功能支持库
 ' iconv {A0005538-9391-4dd9-B4D6-8EB7B9360F08} 2 0 编码转换支持库
 ' xplib 7F54B9CE8887428dBA9CEEB94CEF4C72 2 0 XP风格界面库




数据类型 LARGE_INTEGER, , 
    .成员 QuadPart, 长整数型, , , 占用8个字节

.全局变量 跳出, 逻辑型, , , 
.全局变量 INI_文件, 文本型, , , 
.全局变量 是否隐藏验证码, 逻辑型, , , 
.全局变量 匿名全局变量_16474, 空白型, , , 
.全局变量 临时结果, 文本型, , , 
.全局变量 远程算法结果, 整数型, , , 
.全局变量 本地算法结果, 整数型, , , 
.全局变量 非法, 整数型, , , 
.全局变量 线路, 文本型, , "3", 
.全局变量 机器码, 文本型, , , 
.全局变量 初始化数据, 核盾_JSON, , , 
.全局变量 登录后数据, 核盾_JSON, , , 

.DLL命令 高级信息框, 整数型, "user32.dll", "MessageBoxTimeoutA", , 
    .参数 hwnd, 整数型, , 父窗口句柄，填0为桌面
    .参数 lptext, 文本型, , 消息框的内容
    .参数 lpCaption, 文本型, , 消息框的标题
    .参数 uType, 整数型, , 取值有0、16、48、64
    .参数 wLanguageId, 整数型, , 函数扩展，一般取0
    .参数 dwMilliseconds, 整数型, , 消息框延迟自动关闭时间，单位：毫秒

.DLL命令 FindWindowA, 整数型, "user32.dll", "FindWindowA", , 寻找窗口句柄
    .参数 lpClassName, 文本型, , 窗口类名
    .参数 lpWindowName, 文本型, , 窗口标题

.DLL命令 OpenProcess, 整数型, "kernel32", "OpenProcess", , 将句柄返回给过程对象。
    .参数 dwDesiredAccess, 整数型, , 一般填写 2035711
    .参数 bInheritHandle, 整数型, , 0
    .参数 dwProcessId, 整数型, , 进程ID

.DLL命令 GetWindowThreadProcessId, 整数型, "user32", "GetWindowThreadProcessId", , 
    .参数 hWnd, 整数型, , 0
    .参数 lpdwProcessId, 整数型, 传址, 0

.DLL命令 CloseHandle, 逻辑型, "Kernel32", "CloseHandle", , 关闭打开的对象句柄
    .参数 hObject, 整数型, , 要关闭的对象句柄

.DLL命令 CallWindowProcA, 整数型, "user32", "CallWindowProcA", , 后两个参数使用注意事项同上
    .参数 DefWindowProc, 整数型, , 
    .参数 hWnd, 整数型, , 
    .参数 wParam, 通用型, , 
    .参数 lParam, 通用型, , 

.DLL命令 HttpSendRequestA_字节集, 逻辑型, "WinINet.dll", "HttpSendRequestA", , Http发送请求
    .参数 HTTP请求句柄, 整数型, , 
    .参数 附加协议头, 文本型, 传址, 
    .参数 附加协议头长度, 整数型, , 
    .参数 提交信息, 字节集, 传址, 
    .参数 提交信息长度, 整数型, , 

.DLL命令 InternetReadFile, 逻辑型, "wininet.dll", "InternetReadFile", , Internet读文件
    .参数 HTTP请求句柄, 整数型, , 
    .参数 sBuffer, 字节集, 传址, 
    .参数 lNumBytesToRead, 整数型, , 
    .参数 lNumberOfBytesRead, 整数型, 传址, 

.DLL命令 HttpOpenRequestA, 整数型, "wininet.dll", "HttpOpenRequestA", , Http创建请求
    .参数 Internet连接句柄, 整数型, , 由Internet建立连接返回
    .参数 访问方式, 文本型, 传址, "GET" or "POST"为空默认GET
    .参数 页面路径, 文本型, 传址, 简短路径,不带域名
    .参数 协议版本, 文本型, 传址, 为空默认HTTP/1.1
    .参数 引用页, 文本型, 传址, 可为空
    .参数 识别类型, 文本型, 传址, 可为空
    .参数 dwFlags, 整数型, , 2147483648更新下载
    .参数 dwContext, 整数型, , 0

.DLL命令 InternetOpenA, 整数型, "wininet.dll", "InternetOpenA", , Internet激活
    .参数 句柄名称, 文本型, 传址, 
    .参数 连接类型, 整数型, , 1直接连接;3代理连接
    .参数 代理地址, 文本型, 传址, 
    .参数 代理掩码, 文本型, 传址, 
    .参数 dwFlags, 整数型, , 0

.DLL命令 InternetConnectA, 整数型, "wininet.dll", "InternetConnectA", , Internet建立连接
    .参数 Internet句柄, 整数型, , 
    .参数 域名, 文本型, 传址, 
    .参数 服务器端口, 整数型, , 80HTTP;21FTP;
    .参数 用户名, 文本型, 传址, 空
    .参数 用户口令, 文本型, 传址, 空
    .参数 服务类型, 整数型, , 1FTP;3HTTP
    .参数 dwFlags, 整数型, , 0http;134217728被动FTP模式
    .参数 dwContext, 整数型, , 0

.DLL命令 _宽字符到双字节, 空白型, "kernel32.dll", "WideCharToMultiByte", , lpMultiByteStr 为字节集
    .参数 代码页, 整数型, , CodePage
    .参数 标志, 整数型, , dwFlags
    .参数 宽字符文本, 字节集, , lpWideCharStr
    .参数 宽字符文本长度, 整数型, , cchWideChar
    .参数 双字节文本, 字节集, , lpMultiByteStr
    .参数 双字节文本长度, 整数型, , cchMultiByte
    .参数 默认文本, 整数型, , lpDefaultChar
    .参数 使用默认文本, 逻辑型, , lpUsedDefaultChar

.DLL命令 _宽字符到双字节1, 整数型, "kernel32.dll", "WideCharToMultiByte", , lpMultiByteStr 为整数型
    .参数 代码页, 整数型, , CodePage
    .参数 标志, 整数型, , dwFlags
    .参数 宽字符文本, 字节集, , lpWideCharStr
    .参数 宽字符文本长度, 整数型, , cchWideChar
    .参数 双字节文本, 整数型, , lpMultiByteStr
    .参数 双字节文本长度, 整数型, , cchMultiByte
    .参数 默认文本, 整数型, , lpDefaultChar
    .参数 使用默认文本, 逻辑型, , lpUsedDefaultChar

.DLL命令 InternetCloseHandle, 逻辑型, "wininet.dll", "InternetCloseHandle", , Internet关闭句柄
    .参数 句柄, 整数型, , 

.DLL命令 GetModuleHandleA, 整数型, "kernel32.dll", "GetModuleHandleA", , 获取一个应用程序或动态链接库的模块句柄。如执行成功成功，则返回模块句柄。零表示失败。
    .参数 lpModuleName, 文本型, , 指定模块名，这通常是与模块的文件名相同的一个名字。例如，NOTEPAD.EXE程序的模块文件名就叫作NOTEPAD只有在当前进程的场景中，这个句柄才会有效

.DLL命令 HttpQueryInfoA, 逻辑型, "wininet.dll", "HttpQueryInfoA", 公开, HTTP查询信息
    .参数 Internet请求句柄, 整数型, , 
    .参数 待查信息, 整数型, , 22返回所有信息;43SET_COOKIE;+2147483648返回文本
    .参数 返回容器, 文本型, 传址, 
    .参数 返回容器长度, 整数型, 传址, 
    .参数 lpdwIndex, 整数型, , 

.DLL命令 SetProcessAffinityMask, 整数型, "", "", 公开, 设置CPU亲和性  进程句柄  返回CPU号
    .参数 hProcess, 整数型, , 
    .参数 hProcess, 整数型, , 

.DLL命令 SetThreadAffinityMask, 整数型, "", "", 公开, 设置CPU亲和性  线程句柄
    .参数 hProcess, 整数型, , 
    .参数 Mask, 整数型, , 

.DLL命令 GetCurrentProcess, 整数型, "", "", 公开, 获取当前进程的一个伪句柄  一般是-1

.DLL命令 CreateWaitableTimerA, 整数型, "", "CreateWaitableTimerA", , 
    .参数 lpTimerAttributes, 整数型, , 
    .参数 bManualReset, 逻辑型, , 
    .参数 lpTimerName, 整数型, , 

.DLL命令 SetWaitableTimer, 整数型, "", "SetWaitableTimer", , 
    .参数 hTimer, 整数型, , 
    .参数 pDueTime, 未知类型0x4103AA1F, , 
    .参数 lPeriod, 整数型, , 
    .参数 pfnCompletionRoutine, 整数型, , 
    .参数 lpArgToCompletionRoutine, 整数型, , 
    .参数 fResume, 逻辑型, , 

.DLL命令 MsgWaitForMultipleObjects, 整数型, "", "MsgWaitForMultipleObjects", , 
    .参数 nCount, 整数型, , 
    .参数 pHandles, 整数型, 传址, 
    .参数 fWaitAll, 逻辑型, , 
    .参数 dwMilliseconds, 整数型, , 
    .参数 dwWakeMask, 整数型, , 

.DLL命令 CloseHandle, 逻辑型, "", "CloseHandle", , 
    .参数 要关闭的句柄, 整数型, , 

.DLL命令 GetCurrentThread, 整数型, "", "", 公开, 获取当前线程的一个伪句柄  一般是-2

.DLL命令 HttpSendRequestA, 逻辑型, "WinINet.dll", "", , 
    .参数 hRequest, 整数型, , 
    .参数 lpszHeaders, 文本型, , 
    .参数 dwHeadersLength, 整数型, , 
    .参数 lpOptional, 文本型, , 
    .参数 dwOptionalLength, 整数型, , 

.窗口程序集 登录窗口程序集, , , 

.程序集变量 是否初始化, 整数型, , , 
.子程序 _启动子程序, 整数型, , 易语言的系统配置，必须设置为“_启动子程序”启动
.局部变量 是否成功, 逻辑型, , , 
.局部变量 ret, 整数型, , , 
.局部变量 匿名局部变量_42871, 空白型, , , 

置入代码 (#VMPBegin)
赋值 (线路 [1], “https://1.5yyz.com/”)
赋值 (线路 [2], “https://2.5yyz.com/”)
赋值 (线路 [3], “https://3.5yyz.com/”)
赋值 (机器码, “123”)
载入 (登录窗口, , 假)
返回 (0)
置入代码 (#VMPEnd)

.子程序 取线路, 文本型, , 
.局部变量 i, 整数型, , , 

置随机数种子 ()
赋值 (i, 取随机数 (1, 3))
返回 (线路 [i])

.子程序 _登录窗口_创建完毕, 空白型, , 易语言的系统配置，必须设置为“_启动子程序”启动
置入代码 (#VMPBegin)
未知支持库函数_0 (&初始化, , )
赋值 (INI_文件, “C:\hd.ini”)
赋值 (.内容, 读配置项 (INI_文件, “核盾”, “帐号”, ))
赋值 (.内容, 读配置项 (INI_文件, “核盾”, “密码”, ))
赋值 (.选中, 选择 (等于 (.内容, “”), 假, 真))
置入代码 (#VMPEnd)

.子程序 初始化, 空白型, , 
.局部变量 返回, 整数型, , , 
.局部变量 url, 文本型, , , 
.局部变量 返回值, 文本型, , , 
.局部变量 AppID, 整数型, , , 
.局部变量 SafeCode, 文本型, , , 
.局部变量 CustomCode, 文本型, , , 
.局部变量 参数, 文本型, , , 
.局部变量 json, 核盾_JSON, , , 

置入代码 (#VMPBegin)
 ' 更多参数查看帮助文档 http://help.5yyz.com/
赋值 (AppID, 9746)
赋值 (SafeCode, “009543487”)
赋值 (CustomCode, “54784”)

赋值 (url, “WebApi/Initialize?”)
赋值 (参数, 相加 (“appID=”, 到文本 (AppID), “&safeCode=”, SafeCode, “&customCode=”, CustomCode))
赋值 (返回值, 到文本 (调用WebApi (url, 到字节集 (参数))))
json.SetJSON (返回值)
json.Parser ()
赋值 (初始化数据, json)
调试输出 (返回值)

.如果真 (不等于 (json.GetInt (“status”), 1))
    提示函数 (json.GetValue (“msg”))
    返回 ()
.如果真结束

提示函数 (json.GetValue (“msg”))
显示公告内容 (json.GetValue (“notice”))



.如果 (等于 (json.GetInt (“validateCode”), 0))
    隐藏验证码 ()
.否则
    刷新验证码 ()
.如果结束

.如果真 (不等于 (json.GetInt (“registMode”), 2))
    赋值 (.可视, 假)
    赋值 (.可视, 假)
.如果真结束

.如果真 (不等于 (json.GetValue (“version”), #软件版本))
    赋值 (.可视, 真)
    赋值 (.标题, “下载新版本”)
    .如果 (等于 (json.GetInt (“updateMode”), 1))
        提示函数 (“当前的不是最新版本。”)
    .否则
        提示函数 (“当前的不是最新版本，强制要求更新使用。”)
        赋值 (.禁止, 真)
    .如果结束
    
.如果真结束
赋值 (是否初始化, 1)
置入代码 (#VMPEnd)


.子程序 显示公告内容, 空白型, , 
.参数 内容, 文本型, , 

赋值 (.标题, 相加 (内容, “  ”))
赋值 (.宽度, 相加 (.取宽度 (.标题), 12))
赋值 (.左边, 相除 (登录窗口., 2))
赋值 (.时钟周期, 10)

.子程序 _时钟1_周期事件, 空白型, , 
.如果真 (等于 (相加 (.左边, .宽度), 0))
    赋值 (.左边, 登录窗口.)
.如果真结束
赋值 (.左边, 相减 (.左边, 1))

.子程序 刷新验证码, 空白型, , 
.局部变量 图片, 字节集, , , 
.局部变量 size, 整数型, , , 
.局部变量 pData, 整数型, , , 
.局部变量 匿名局部变量_42937, 空白型, , , 

.如果真 (是否隐藏验证码)
    返回 ()
.如果真结束

赋值 (图片, 调用WebApi (“UserCode”))

连续赋值 (图片, .图片, .图片, .图片, .图片)

.子程序 隐藏验证码, 空白型, , 
赋值 (是否隐藏验证码, 真)
连续赋值 (假, .可视, .可视, .可视)
连续赋值 (假, .可视, .可视, .可视)
连续赋值 (假, .可视, .可视, .可视)
连续赋值 (假, .可视, .可视, .可视)

.子程序 提示函数, 空白型, , 
.参数 数据, 文本型, , 

1.置文本 (相加 (字符 (32), 数据))



.子程序 _图片框1_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

刷新验证码 ()

.子程序 _图片框2_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

刷新验证码 ()

.子程序 _图片框3_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

刷新验证码 ()

.子程序 _图片框4_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

刷新验证码 ()

.子程序 _登陆按钮_被单击, 空白型, , 
.局部变量 ret, 整数型, , , 
.局部变量 参数, 文本型, , , 
.局部变量 url, 文本型, , , 
.局部变量 返回值, 文本型, , , 
.局部变量 json, 核盾_JSON, , , 

置入代码 (#VMPBegin)
.如果真 (等于 (.选中, 真))
    写配置项 (INI_文件, “核盾”, “帐号”, .内容)
    写配置项 (INI_文件, “核盾”, “密码”, .内容)
.如果真结束

.如果真 (等于 (是否初始化, 0))
    信息框 (“初始化失败，不可登录”, 0, , )
    返回 ()
.如果真结束

赋值 (url, “WebApi/Login”)
赋值 (参数, 相加 (“userName=”, .内容, “&password=”, .内容, “&verifyCode=”, .内容, “&machineCode=”, 机器码))

赋值 (返回值, 到文本 (调用WebApi (url, 到字节集 (参数))))
json.SetJSON (返回值)
json.Parser ()
赋值 (登录后数据, json)
调试输出 (返回值)

.如果真 (等于 (json.GetInt (“status”), 1))
    载入 (假)
    销毁 ()
.如果真结束
.如果真 (不等于 (json.GetInt (“status”), 1))
    信息框 (json.GetValue (“msg”), 0, “”, )
    刷新验证码 ()
.如果真结束

置入代码 (#VMPEnd)

.子程序 _试用按钮_被单击, 空白型, , 
.局部变量 返回, 整数型, , , 
.局部变量 ret, 整数型, , , 
.局部变量 参数, 文本型, , , 
.局部变量 url, 文本型, , , 
.局部变量 返回值, 文本型, , , 
.局部变量 json, 核盾_JSON, , , 
.局部变量 匿名局部变量_42930, 空白型, , , 

置入代码 (#VMPBegin)
.如果真 (等于 (是否初始化, 0))
    信息框 (“初始化失败，不可登录”, 0, , )
    返回 ()
.如果真结束

赋值 (url, “WebApi/Probation?”)
赋值 (参数, 相加 (“verifyCode=”, .内容, “&machineCode=”, 机器码))

赋值 (返回值, 到文本 (调用WebApi (url, 到字节集 (参数))))
json.SetJSON (返回值)
json.Parser ()
赋值 (登录后数据, json)
调试输出 (返回值)

.如果真 (等于 (json.GetInt (“status”), 1))
    载入 (假)
    销毁 ()
.如果真结束

.如果真 (不等于 (json.GetInt (“status”), 1))
    信息框 (json.GetValue (“msg”), 0, , )
    刷新验证码 ()
.如果真结束

置入代码 (#VMPEnd)

.子程序 _解绑按钮_被单击, 空白型, , 
.局部变量 返回, 整数型, , , 
.局部变量 ret, 整数型, , , 
.局部变量 参数, 文本型, , , 
.局部变量 url, 文本型, , , 
.局部变量 返回值, 文本型, , , 
.局部变量 json, 核盾_JSON, , , 

赋值 (url, “WebApi/Unbind?”)
赋值 (参数, 相加 (“userName=”, .内容, “&password=”, .内容, “&verifyCode=”, .内容, “&machineCode=”, 机器码))

赋值 (返回值, 到文本 (调用WebApi (url, 到字节集 (参数))))
json.SetJSON (返回值)
json.Parser ()
调试输出 (返回值)

信息框 (json.GetValue (“msg”), 0, , )
刷新验证码 ()

.子程序 _注册_被单击, 空白型, , 
.局部变量 返回, 整数型, , , 
.局部变量 ret, 整数型, , , 
.局部变量 参数, 文本型, , , 
.局部变量 url, 文本型, , , 
.局部变量 返回值, 文本型, , , 
.局部变量 json, 核盾_JSON, , , 

赋值 (url, “WebApi/Register?”)
赋值 (参数, 相加 (“userName=”, .内容, “&password=”, .内容, “&KEY=”, .内容, “&data=”, .内容, “&verifyCode=”, .内容, “&machineCode=”, 机器码))
赋值 (返回值, 到文本 (调用WebApi (url, 到字节集 (参数))))
json.SetJSON (返回值)
json.Parser ()
调试输出 (返回值)

信息框 (json.GetValue (“msg”), 0, , )
刷新验证码 ()

.子程序 _充值_被单击, 空白型, , 
.局部变量 返回, 整数型, , , 
.局部变量 ret, 整数型, , , 
.局部变量 参数, 文本型, , , 
.局部变量 url, 文本型, , , 
.局部变量 返回值, 文本型, , , 
.局部变量 json, 核盾_JSON, , , 

赋值 (url, “WebApi/Recharge?”)
赋值 (参数, 相加 (“userName=”, .内容, “&KEY=”, .内容, “&verifyCode=”, .内容, “&machineCode=”, 机器码))
赋值 (返回值, 到文本 (调用WebApi (url, 到字节集 (参数))))
json.SetJSON (返回值)
json.Parser ()
调试输出 (返回值)
信息框 (json.GetValue (“msg”), 0, , )


.子程序 _修改密码_被单击, 空白型, , 
.局部变量 返回, 整数型, , , 
.局部变量 ret, 整数型, , , 
.局部变量 参数, 文本型, , , 
.局部变量 url, 文本型, , , 
.局部变量 返回值, 文本型, , , 
.局部变量 json, 核盾_JSON, , , 

赋值 (url, “WebApi/ModifyPassword?”)
赋值 (参数, 相加 (“userName=”, .内容, “&oldPassword=”, .内容, “&newPassword=”, .内容, “&verifyCode=”, .内容, “&machineCode=”, 机器码))
赋值 (返回值, 到文本 (调用WebApi (url, 到字节集 (参数))))
json.SetJSON (返回值)
json.Parser ()
调试输出 (返回值)
信息框 (json.GetValue (“msg”), 0, , )


.子程序 _标签5_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

未知支持库函数_56 (初始化数据.GetValue (“updateAddr”))


.窗口程序集 功能窗口程序集, , , 

.程序集 核盾_网页, , , 

.子程序 调用WebApi, 字节集, , 使用WinInet的方式访问网页
.参数 网址, 文本型, , 完整的网页地址,必须包含http://或者https://
.参数 字节集提交, 字节集, 可空, 提交字节集数据
.参数 验证证书, 逻辑型, 可空, 默认为真

.局部变量 局_Internet句柄, 整数型, , , 
.局部变量 局_Internet连接句柄, 整数型, , , 
.局部变量 局_HTTP请求句柄, 整数型, , , 
.局部变量 局_计次, 整数型, , , 
.局部变量 局_字节集, 字节集, , , 
.局部变量 局_访问方式, 文本型, , , 
.局部变量 局_User_Agent, 文本型, , , 
.局部变量 局_返回协议头, 文本型, , "0", 
.局部变量 局_页面内容, 字节集, , , 
.局部变量 局_请求标记, 整数型, , , 
.局部变量 局_重定向地址, 文本型, , , 
.局部变量 局_HTTPS, 逻辑型, , , 
.局部变量 附加协议头, 文本型, , , 
.局部变量 返回Cookies, 文本型, 静态, , 
.局部变量 返回协议头, 文本型, , , 
.局部变量 b, 逻辑型, , , 

置入代码 (#VMPBegin)
赋值 (网址, 相加 (取线路 (), 网址))
.如果真 (是否为空 (验证证书))
    赋值 (验证证书, 真)
.如果真结束
赋值 (局_访问方式, “POST”)
.如果真 (等于 (到小写 (取文本左边 (网址, 5)), “https”))
    赋值 (局_HTTPS, 真)
.如果真结束
赋值 (局_User_Agent, “Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1)”)
赋值 (局_Internet句柄, InternetOpenA (局_User_Agent, 1, 字符 (0), 字符 (0), 0))
.如果真 (等于 (局_Internet句柄, 0))
    InternetCloseHandle (局_Internet句柄)
    返回 ({  })
.如果真结束
赋值 (局_Internet连接句柄, InternetConnectA (局_Internet句柄, 网页_取域名 (网址), 网页_取端口 (网址), 字符 (0), 字符 (0), 3, 0, 0))
.如果真 (等于 (局_Internet连接句柄, 0))
    InternetCloseHandle (局_Internet连接句柄)
    InternetCloseHandle (局_Internet句柄)
    返回 ({  })
.如果真结束

 ' 局_请求标记 ＝ 位或 (#INTERNET_FLAG_RELOAD, #INTERNET_COOKIE_THIRD_PARTY)
赋值 (局_请求标记, 位或 (局_请求标记, #INTERNET_FLAG_NO_COOKIES))
赋值 (局_请求标记, 位或 (局_请求标记, #INTERNET_FLAG_NO_AUTO_REDIRECT))

.判断开始 (局_HTTPS)
    赋值 (局_请求标记, 位或 (局_请求标记, #INTERNET_FLAG_SECURE))
    .如果真 (等于 (验证证书, 假))
        赋值 (局_请求标记, 位或 (局_请求标记, 8192))
        赋值 (局_请求标记, 位或 (局_请求标记, 4096))
    .如果真结束
    
.默认
    
    赋值 (局_请求标记, 位或 (局_请求标记, #INTERNET_FLAG_IGNORE_REDIRECT_TO_HTTPS))
.判断结束

赋值 (局_HTTP请求句柄, HttpOpenRequestA (局_Internet连接句柄, 局_访问方式, 网页_取页面地址 (网址), “HTTP/1.1”, 字符 (0), 字符 (0), 局_请求标记, 0))
.如果真 (等于 (局_HTTP请求句柄, 0))
    InternetCloseHandle (局_HTTP请求句柄)
    InternetCloseHandle (局_Internet连接句柄)
    InternetCloseHandle (局_Internet句柄)
    返回 ({  })
.如果真结束

赋值 (附加协议头, “Accept: */*”)
赋值 (附加协议头, 相加 (附加协议头, #换行符, “Referer: ”, 网址))
赋值 (附加协议头, 相加 (附加协议头, #换行符, “Accept-Language: zh-cn”))
赋值 (附加协议头, 相加 (附加协议头, #换行符, “Content-Type: application/x-www-form-urlencoded; charset=GBK”)) ' 必须加上charset=GBK 不然后后台拿到中文是乱码的
赋值 (附加协议头, 相加 (附加协议头, #换行符, 返回Cookies))
 ' 破解者会hook这函数实现山寨是最简单的，一定做好检测，检测做个标记，在功能里判断......
 ' 我们无法100%保证正确检测，所以必须使用TelnetFun接口双重防山寨
赋值 (b, HttpSendRequestA_字节集 (局_HTTP请求句柄, 附加协议头, 取文本长度 (附加协议头), 字节集提交, 取字节集长度 (字节集提交)))
 ' b ＝ HttpSendRequestA (局_HTTP请求句柄, 附加协议头, 取文本长度 (附加协议头), 字符 (0), 0)

赋值 (局_计次, 0)
赋值 (局_字节集, 取空白字节集 (1024))
.循环判断首 ()
    InternetReadFile (局_HTTP请求句柄, 局_字节集, 1024, 局_计次)
    赋值 (局_页面内容, 相加 (局_页面内容, 取字节集左边 (局_字节集, 局_计次)))
.循环判断尾 (不等于 (局_计次, 0))

.如果真 (等于 (返回Cookies, “”))
    赋值 (返回协议头, 取空白文本 (5000))
    HttpQueryInfoA (局_HTTP请求句柄, 22, 返回协议头, 5000, 0)
     ' 调试输出 (返回协议头)
    赋值 (返回协议头, 子文本替换 (返回协议头, “Set-Cookie”, “Set-Cookie”, , , 假))
    赋值 (局_返回协议头, 分割文本 (返回协议头, #换行符, ))
    赋值 (返回Cookies, “”)
    .计次循环首 (取数组成员数 (局_返回协议头), 局_计次)
        .如果真 (不等于 (寻找文本 (局_返回协议头 [局_计次], “Set-Cookie”, , 假), -1))
            .判断开始 (不等于 (寻找文本 (局_返回协议头 [局_计次], “;”, , 假), -1))
                赋值 (返回Cookies, 相加 (返回Cookies, 删首尾空 (文本_取出中间文本 (局_返回协议头 [局_计次], “Set-Cookie:”, “;”)), “; ”))
            .默认
                赋值 (返回Cookies, 相加 (返回Cookies, 删首尾空 (子文本替换 (局_返回协议头 [局_计次], “Set-Cookie:”, , , , 假)), “; ”))
            .判断结束
            
        .如果真结束
        
    .计次循环尾 ()
    赋值 (返回Cookies, 相加 (“Cookie: ”, 取文本左边 (返回Cookies, 相减 (取文本长度 (返回Cookies), 2))))
    
.如果真结束

InternetCloseHandle (局_HTTP请求句柄)
InternetCloseHandle (局_Internet连接句柄)
InternetCloseHandle (局_Internet句柄)

.如果真 (不等于 (寻找文本 (网址, “UserCode”, , 假), -1))
    返回 (局_页面内容)
.如果真结束
 ' 调试输出 (到文本 (局_页面内容))
返回 (未知支持库函数_0 (局_页面内容, #, #, ))
置入代码 (#VMPBegin)

.子程序 网页_取端口, 整数型, , 取出网站服务器的默认端口
.参数 网址, 文本型, , 

.局部变量 端口, 文本型, , , 
.局部变量 位置, 整数型, , , 

赋值 (端口, 网页_取域名 (网址, , 真))
赋值 (位置, 倒找文本 (端口, “:”, , 假))
.判断开始 (不等于 (位置, -1))
    返回 (到整数 (取文本右边 (端口, 相减 (取文本长度 (端口), 位置))))
.判断 (等于 (取文本左边 (到小写 (网址), 5), “https”))
    返回 (443)
.默认
    返回 (80)
.判断结束


.子程序 网页_取域名, 文本型, , 通过“/”或者“.”来获取网址中的域名，默认使用“/”方式
.参数 网址, 文本型, , 
.参数 去除二级域名, 逻辑型, 可空, 
.参数 不过滤端口, 逻辑型, 可空, 
.参数 后缀点数量, 整数型, 可空, 不留空表示通过“.”的方式取域名 。如：.com后缀点数量为1 ,.com.cn后缀点数量为2

.局部变量 域名, 文本型, , , 
.局部变量 位置, 整数型, , , 
.局部变量 二级, 文本型, , "0", 
.局部变量 域名长度, 整数型, , , 
.局部变量 前点开始, 整数型, , , 如www.bbs.125.la   www后面.的位置
.局部变量 前点结束, 整数型, , , 如www.bbs.125.la   bbs后面.的位置
.局部变量 后点开始, 整数型, , , 如www.bbs.125.la   125后面.的位置

赋值 (域名, 到小写 (网址))
.判断开始 (是否为空 (后缀点数量)) ' 使用“/”方式获取域名，网页_访问() 内部 必须使用这个
    .如果真 (不等于 (取文本右边 (域名, 1), “/”))
        赋值 (域名, 相加 (域名, “/”))
    .如果真结束
    
    .判断开始 (等于 (取文本左边 (域名, 8), “https://”))
        赋值 (域名, 文本_取出中间文本 (域名, “https://”, “/”))
    .默认
        .如果真 (等于 (寻找文本 (域名, “http://”, , 假), -1))
            赋值 (域名, 相加 (“http://”, 域名))
        .如果真结束
        赋值 (域名, 文本_取出中间文本 (域名, “http://”, “/”))
    .判断结束
    
    .如果真 (去除二级域名)
        赋值 (二级, 分割文本 (域名, “.”, ))
        赋值 (位置, 取数组成员数 (二级))
        .如果真 (大于 (位置, 1))
            赋值 (域名, 相加 (二级 [相减 (位置, 1)], “.”, 二级 [位置]))
        .如果真结束
        
    .如果真结束
    
.默认
     ' 通过“.”的方式取域名，支持任何后缀域名
    赋值 (域名, 子文本替换 (域名, “http://”, “”, , , 真))
    赋值 (域名, 子文本替换 (域名, “https://”, “”, , , 真))
    赋值 (位置, 寻找文本 (域名, “/”, , 假)) ' 一撇位置
    .如果真 (不等于 (位置, -1))
        赋值 (域名, 取文本左边 (域名, 相减 (位置, 1)))
    .如果真结束
    连续赋值 (取文本长度 (域名), 域名长度, 后点开始)
    .计次循环首 (后缀点数量, )
        赋值 (后点开始, 倒找文本 (域名, “.”, 后点开始, 假))
    .计次循环尾 ()
    赋值 (前点结束, 倒找文本 (域名, “.”, 后点开始, 假))
    .判断开始 (去除二级域名)
        赋值 (域名, 取文本右边 (域名, 相减 (域名长度, 前点结束)))
    .默认
         ' 保留二级域名---------------------------------------
        .如果真 (不等于 (前点结束, -1)) ' 至少是二级域名
            赋值 (前点开始, 倒找文本 (域名, “.”, 前点结束, 假))
            .如果真 (不等于 (前点开始, -1)) ' 至少是三级域名
                赋值 (域名, 取文本右边 (域名, 相减 (域名长度, 前点开始)))
            .如果真结束
            
        .如果真结束
        
    .判断结束
    
.判断结束
 ' 端口过滤处理--------------------------------------------------------
.判断开始 (不过滤端口)
    返回 (域名)
.默认
    赋值 (位置, 寻找文本 (域名, “:”, , 假)) ' 冒号位置
    .判断开始 (不等于 (位置, -1))
        返回 (取文本左边 (域名, 相减 (位置, 1)))
    .默认
        返回 (域名)
    .判断结束
    
.判断结束


.子程序 内部_协议头取值, 文本型, , 
.参数 协议头, 文本型, , 

.局部变量 位置, 整数型, , , 
.局部变量 结果, 文本型, , , 

赋值 (位置, 寻找文本 (协议头, “:”, , 假))
.如果真 (不等于 (位置, -1))
    赋值 (结果, 取文本右边 (协议头, 相减 (取文本长度 (协议头), 位置)))
.如果真结束
返回 (删首尾空 (结果))

.子程序 网页_取页面地址, 文本型, , 
.参数 网址, 文本型, , 

.局部变量 页面地址, 文本型, , , 
.局部变量 符号位置, 整数型, , , 
.局部变量 域名, 文本型, , , 

赋值 (域名, 网页_取域名 (网址))
赋值 (符号位置, 寻找文本 (网址, “/”, 寻找文本 (网址, 域名, 1, 真), 真))
.如果 (大于 (符号位置, 0))
    赋值 (页面地址, 取文本右边 (网址, 相加 (相减 (取文本长度 (网址), 符号位置), 1)))
.否则
    赋值 (页面地址, “/”)
.如果结束
返回 (页面地址)

.子程序 文本_取出中间文本, 文本型, , 比如：欲取全文本为“12345”,现在要取出“3”，<3>的前面为“2”，<3>的后面为“4”，
.参数 欲取全文本, 文本型, , 比如：欲取全文本为 12345
.参数 前面文本, 文本型, , 3的前面为“2”，引号直接用 #引号，如："<font color=#引号red#引号>"
.参数 后面文本, 文本型, , 3的后面为“4”，引号直接用 #引号，如："<font color=#引号red#引号>"
.参数 起始搜寻位置, 整数型, 可空, 可空,这里是指搜寻 参数二 前面文本 的开始位置
.参数 是否不区分大小写, 逻辑型, 可空, 为真不区分大小写，为假区分。

.局部变量 局_前面文本位置, 整数型, , , 
.局部变量 局_后面文本位置, 整数型, , , 
.局部变量 局_前面文本, 文本型, , , 
.局部变量 局_后面文本, 文本型, , , 

赋值 (局_前面文本, 子文本替换 (前面文本, “#引号”, #引号, , , 真))
赋值 (局_后面文本, 子文本替换 (后面文本, “#引号”, #引号, , , 真))
赋值 (局_前面文本位置, 寻找文本 (欲取全文本, 局_前面文本, 起始搜寻位置, 是否不区分大小写))
.如果真 (不等于 (局_前面文本位置, -1))
    赋值 (局_前面文本位置, 相加 (局_前面文本位置, 取文本长度 (局_前面文本)))
.如果真结束
赋值 (局_后面文本位置, 寻找文本 (欲取全文本, 局_后面文本, 局_前面文本位置, 是否不区分大小写))
.如果真 (或者 (等于 (局_前面文本位置, -1), 等于 (局_后面文本位置, -1)))
    返回 (“”)
.如果真结束
返回 (取文本中间 (欲取全文本, 局_前面文本位置, 相减 (局_后面文本位置, 局_前面文本位置)))

.类模块 核盾_JSON, , , 

.程序集变量 JsonChar, 文本型, , , 
.程序集变量 JsonName, 文本型, , "0", 
.程序集变量 JsonValue, 文本型, , "0", 
.程序集变量 JsonPos, 整数型, , , 
.程序集变量 JsonLen, 整数型, , , 
.程序集变量 匿名程序集变量_42840, 空白型, , , 
.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用



.子程序 SetJSON, 空白型, 公开, 
.参数 Json, 文本型, , 

赋值 (Json, 子文本替换 (Json, “\n”, #换行符, , , 真))
赋值 (JsonChar, Json)
赋值 (JsonChar, 子文本替换 (JsonChar, “\/”, “/”, , , 真))
重定义数组 (JsonName, 假, 1)
重定义数组 (JsonValue, 假, 1)
赋值 (JsonPos, 2)
赋值 (JsonLen, 取文本长度 (JsonChar))

.子程序 Parser, 空白型, 公开, 
.参数 PrevName, 文本型, 可空, 

.局部变量 NameHead, 文本型, , , 
.局部变量 Name, 文本型, , , 
.局部变量 Value, 文本型, , , 
.局部变量 cLen, 整数型, , , 
.局部变量 Pos, 整数型, , , 
.局部变量 Flags, 整数型, , , 
.局部变量 Char, 文本型, , , 
.局部变量 Item, 整数型, , , 

.如果真 (等于 (是否为空 (PrevName), 假))
    赋值 (NameHead, 相加 (PrevName, “.”))
.如果真结束


.循环判断首 ()
    赋值 (Char, 取文本中间 (JsonChar, JsonPos, 1))
    赋值 (JsonPos, 相加 (JsonPos, 1))
    .判断开始 (等于 (Char, 字符 (34)))
        
    .判断 (等于 (Char, “{”))
        Parser (相加 (NameHead, Name))
        
    .判断 (等于 (Char, “}”))
        赋值 (Item, 取数组成员数 (JsonName))
        赋值 (Item, 相加 (Item, 1))
        重定义数组 (JsonName, 真, Item)
        重定义数组 (JsonValue, 真, Item)
        赋值 (JsonName [Item], 相加 (NameHead, Name))
        .判断开始 (等于 (取文本长度 (Value), 0))
            赋值 (JsonValue [Item], “[SECTION]”)
        .默认
            赋值 (JsonValue [Item], Value)
        .判断结束
         ' 输出调试文本 (“Name: ” ＋ NameHead ＋ Name)
         ' 输出调试文本 (“Value: ” ＋ Value)
        返回 ()
    .判断 (等于 (Char, “:”))
        赋值 (Flags, 1)
    .判断 (等于 (Char, “,”))
        赋值 (Item, 取数组成员数 (JsonName))
        赋值 (Item, 相加 (Item, 1))
        重定义数组 (JsonName, 真, Item)
        重定义数组 (JsonValue, 真, Item)
        赋值 (JsonName [Item], 相加 (NameHead, Name))
        .判断开始 (等于 (取文本长度 (Value), 0))
            赋值 (JsonValue [Item], “[SECTION]”)
        .默认
            赋值 (JsonValue [Item], Value)
        .判断结束
         ' 输出调试文本 (“Name: ” ＋ NameHead ＋ Name)
         ' 输出调试文本 (“Value: ” ＋ Value)
        赋值 (Name, “”)
        赋值 (Value, “”)
        赋值 (Flags, 0)
    .默认
        
        .判断开始 (等于 (Flags, 0))
            赋值 (Name, 相加 (Name, Char))
        .默认
            赋值 (Value, 相加 (Value, Char))
        .判断结束
        
    .判断结束
    
    
.循环判断尾 (小于或等于 (JsonPos, JsonLen))

.子程序 GetInt, 整数型, 公开, 
.参数 Name, 文本型, , 

.局部变量 iCount, 整数型, , , 
.局部变量 i, 整数型, , , 

赋值 (iCount, 取数组成员数 (JsonName))
.计次循环首 (iCount, i)
    .如果真 (等于 (JsonName [i], Name))
        返回 (到整数 (JsonValue [i]))
    .如果真结束
    
.计次循环尾 ()
返回 (-1)

.子程序 GetValue, 文本型, 公开, 
.参数 Name, 文本型, , 

.局部变量 iCount, 整数型, , , 
.局部变量 i, 整数型, , , 

赋值 (iCount, 取数组成员数 (JsonName))
.计次循环首 (iCount, i)
    .如果真 (等于 (JsonName [i], Name))
        返回 (JsonValue [i])
    .如果真结束
    
.计次循环尾 ()
返回 (“”)



.窗口程序集 窗口程序集_功能窗口, , , 

.程序集变量 DM, 未知类型0x4903AA00, , "0", 
.程序集变量 tsy, 整数型, , , 
.程序集变量 zsy, 整数型, , , 
.程序集变量 x, 整数型, , , 
.程序集变量 y, 整数型, , , 
.程序集变量 进入许可证, 未知类型0x4103AA01, , "0", 
.程序集变量 多线程句柄, 整数型, , "0", 
.程序集变量 单线程句柄, 整数型, , "0", 
.程序集变量 窗口句柄数组, 整数型, , "0", 
.程序集变量 单个窗口句柄, 整数型, , , 
.程序集变量 内容, 文本型, , , 
.程序集变量 账号, 文本型, , "0", 
.程序集变量 密码, 文本型, , "0", 
.程序集变量 节名数组, 文本型, , "0", 
.程序集变量 到期时间, 长整数型, , , 
.子程序 _功能窗口_创建完毕, 空白型, , 
.局部变量 i, 整数型, , , 
.局部变量 索引, 整数型, , , 

赋值 (到数值 (“expireTime”.未知函数_67348770 ()))
赋值 (.时钟周期, 1000) ' 加载到期时间后再开时钟
未知支持库函数_0 (&定时通信, , )
 ' -----------------------------------------------------------------
未知支持库函数_0 (2)
未知函数_168012092 (-1, 1)
.判断开始 (等于 (文件是否存在 (相加 (取运行目录 (), “\账号文件.txt”)), 假))
    写到文件 (相加 (取运行目录 (), “\账号文件.txt”), 到字节集 (“XXXXXX----XXXXXX”))
.判断 (等于 (文件是否存在 (相加 (取运行目录 (), “\游戏路径.txt”)), 假))
    写到文件 (相加 (取运行目录 (), “\游戏路径.txt”), 到字节集 (.内容))
.默认
    赋值 (.内容, 到文本 (读入文件 (相加 (取运行目录 (), “\游戏路径.txt”))))
.判断结束

.判断开始 (等于 (文件是否存在 (相加 (取运行目录 (), “\沙盘路径.txt”)), 假))
    写到文件 (相加 (取运行目录 (), “\沙盘路径.txt”), 到字节集 (.内容))
.默认
    赋值 (.内容, 到文本 (读入文件 (相加 (取运行目录 (), “\沙盘路径.txt”))))
.判断结束

 ' .判断开始 (等于 (文件是否存在 (相加 (取运行目录 (), “\使用记录.txt”)), 假))
     ' 写到文件 (取运行目录 () ＋ “\使用记录.txt”, {  })
.默认
    
.判断结束

.如果真 (等于 (未知函数_67348797 (相加 (取运行目录 (), “\dm.dll”)), 假))
    信息框 (“注册失败！”, #警告图标, , )
    赋值 (.禁止, 真)
    赋值 (.禁止, 真)
    赋值 (.禁止, 真)
.如果真结束


赋值 (取配置节名 (“C:\Windows\Sandboxie.ini”))
删除成员 (1, 2)
.计次循环首 (取数组成员数 (), i)
    
    .插入表项 ()
    相减 (i, 1).置标题 (0, 到文本 (i))
     ' 超级列表框1.置标题 (i － 1, 3, 节名数组 [i])
    
.计次循环尾 ()
重定义数组 (假, 取表项数 ())
.计次循环首 (取表项数 (), i)
    i.未知函数_67348798 ()
    i.未知函数_67348799 (相加 (取运行目录 (), “\tmp”)) ' 绑定图片和字库文件夹-同一个目录下
    i.未知函数_67348800 (0, “zk.txt ”) ' 绑定字库
    
.计次循环尾 ()





.子程序 心跳, 整数型, , 
.参数 msg, 文本型, 参考, 

.局部变量 返回, 整数型, , , 
.局部变量 ret, 整数型, , , 
.局部变量 参数, 文本型, , , 
.局部变量 url, 文本型, , , 
.局部变量 返回值, 文本型, , , 
.局部变量 json, 未知类型0x4903A926, , , 

赋值 (url, “WebApi/Heartbeat?”)
赋值 (参数, 相加 (“machineCode=”, ))

赋值 (返回值, 到文本 (未知函数_67348776 (url, 到字节集 (参数))))
json.未知函数_67348775 (返回值)
json.未知函数_67348777 ()
赋值 (msg, json.未知函数_67348770 (“msg”))
返回 (json.未知函数_67348778 (“status”))


.子程序 定时通信, 空白型, , 心跳
.局部变量 计次, 整数型, 静态, , 
.局部变量 死循环, 逻辑型, , , 
.局部变量 ret, 整数型, , , 
.局部变量 msg, 文本型, , , 

 ' 重要函数, 请看帮助文档解释http://help.5yyz.com/
 ' 用线程方式取代时钟, 通信不会卡UI
 ' 要在易语言的 系统配置 把判断死循环去掉
赋值 (死循环, 真)
.判断循环首 (死循环)
    赋值 (ret, 心跳 (msg))
    .如果真 (等于 (ret, 0)) ' 如果是0 是网络问题
        延时 (相乘 (1000, 10)) ' 一定要加延时，不然后直接返回708
        赋值 (ret, 心跳 (msg)) ' 再重连一次
    .如果真结束
    
     ' 还是0 就退出吧
    .如果真 (等于 (ret, 708))
        未知函数_168012076 (取窗口句柄 (), “访问频繁，间隔至少8秒。”, “”, 16, 0, 5000) ' 显示5秒，自动消失
        _功能窗口_将被销毁 ()
    .如果真结束
    
    .如果真 (不等于 (ret, 1))
        未知函数_168012076 (取窗口句柄 (), msg, “”, 16, 0, 5000) ' 显示5秒，自动消失
        _功能窗口_将被销毁 ()
    .如果真结束
    
    
    
    延时 (相乘 (1000, 10)) ' 意思是10秒通信一次，用了计次一定要注意，通信延时过短，返回-10，
.判断循环尾 ()

.子程序 _功能窗口_将被销毁, 空白型, , 
.局部变量 返回, 整数型, , , 
.局部变量 ret, 整数型, , , 
.局部变量 参数, 文本型, , , 
.局部变量 url, 文本型, , , 
.局部变量 返回值, 文本型, , , 
.局部变量 json, 未知类型0x4903A926, , , 
.局部变量 b, 整数型, , , 


.计次循环首 (取数组成员数 (), b)
    b.未知函数_67348970 () ' 解绑第（b）个窗口
    未知函数_67348971 ( [b])
    未知函数_67348972 ( [b])
    未知函数_67348973 ( [b])
.计次循环尾 ()


赋值 (url, “WebApi/Exit”)
赋值 (参数, 相加 (“machineCode=”, ))
未知函数_67348776 (url, 到字节集 (参数))
结束 ()


.子程序 TelnetFun, 文本型, , 
.参数 fun, 文本型, , 
.参数 param, 文本型, , 

.局部变量 返回, 整数型, , , 
.局部变量 ret, 整数型, , , 
.局部变量 参数, 文本型, , , 
.局部变量 url, 文本型, , , 
.局部变量 返回值, 文本型, , , 
.局部变量 json, 未知类型0x4903A926, , , 

赋值 (url, “WebApi/TelnetFun”)
赋值 (参数, 相加 (“fun=”, fun, “&param=”, param))
赋值 (返回值, 到文本 (未知函数_67348776 (url, 到字节集 (参数))))
json.未知函数_67348775 (返回值)
json.未知函数_67348777 ()

返回 (json.未知函数_67348770 (“msg”))


.子程序 _时钟1_周期事件, 空白型, , 
赋值 (相减 (1000))

信息框 (相加 (“剩余时间：”, 秒转到文本时间 (相除 (到期时间, 1000))), 0, , )


.子程序 秒转到文本时间, 文本型, , 将单位秒转到时间格式，例如：10天8时59分19秒
.参数 时间秒, 长整数型, , 注意，这是秒，非毫秒

.局部变量 天, 整数型, , , 
.局部变量 精度天, 双精度小数型, , , 
.局部变量 时, 整数型, , , 
.局部变量 精度时, 双精度小数型, , , 
.局部变量 分, 整数型, , , 
.局部变量 精度分, 双精度小数型, , , 
.局部变量 秒, 整数型, , , 

赋值 (精度天, 相除 (时间秒, 86400))
赋值 (天, 绝对取整 (精度天))
赋值 (精度时, 相乘 (相减 (精度天, 天), 24))
赋值 (时, 绝对取整 (精度时))
赋值 (精度分, 相乘 (相减 (精度时, 时), 60))
赋值 (分, 绝对取整 (精度分))
赋值 (秒, 相乘 (相减 (精度分, 分), 60))
返回 (相加 (到文本 (天), “天”, 到文本 (时), “时”, 到文本 (分), “分”, 到文本 (秒), “秒”))

.子程序 最小化窗口, 空白型, , 
.局部变量 dx, 未知类型0x4903A9AE, , , 
.局部变量 句柄, 整数型, , , 
.局部变量 文本句柄, 文本型, , , 
.局部变量 文本数组, 文本型, , "0", 
.局部变量 i, 整数型, , , 
.局部变量 u, 整数型, , , 

赋值 (u, 1)
dx.未知函数_67348913 ()
.判断循环首 (大于 (u, 0))
    赋值 (文本句柄, dx.未知函数_67348911 (0, “[#]”, “App”, 相加 (1, 2, 16))) ' [#] 神鬼传奇新篇全球公测版 [#],Sandbox:003:_PERFECTWORLD_HUGEROCK
    
    调试输出 (文本句柄)
    赋值 (文本数组, 分割文本 (文本句柄, “,”, ))
    .计次循环首 (取数组成员数 (文本数组), i)
        赋值 (句柄, 到整数 (文本数组 [i]))
        .如果真 (大于 (句柄, 0))
            未知函数_67348912 (句柄)
        .如果真结束
        
    .计次循环尾 ()
    DD延时 (500)
.判断循环尾 ()


.子程序 _按钮_游戏路径_被单击, 空白型, , 
打开 ()
赋值 (.初始目录, 取运行目录 ())
赋值 (.内容, .文件名)
写到文件 (相加 (取运行目录 (), “\游戏路径.txt”), {  })
写到文件 (相加 (取运行目录 (), “\游戏路径.txt”), 到字节集 (.内容))


.子程序 _按钮_沙盘路径_被单击, 空白型, , 
打开 ()
赋值 (.初始目录, 取运行目录 ())
赋值 (.内容, .文件名)
写到文件 (相加 (取运行目录 (), “\沙盘路径.txt”), {  })
写到文件 (相加 (取运行目录 (), “\沙盘路径.txt”), 到字节集 (.内容))


.子程序 _按钮_单个启动_被单击, 空白型, , 
.局部变量 i, 整数型, , , 
.局部变量 t, 整数型, , , 
.局部变量 临时线程句柄, 整数型, , , 
.局部变量 登陆句柄, 文本型, , , 
.局部变量 窗口标题, 文本型, , , 
.局部变量 绑定窗口, 整数型, , , 
.局部变量 错误, 整数型, , , 


.如果真 (等于 (.内容, “”))
    信息框 (“请修改游戏路径”, #警告图标, , )
    _按钮_游戏路径_被单击 ()
    返回 ()
.如果真结束

.如果真 (等于 (.内容, “”))
    信息框 (“请修改沙盘路径”, #警告图标, , )
    _按钮_沙盘路径_被单击 ()
    返回 ()
.如果真结束


.如果真 (等于 (0.取标题 (1), “”))
    信息框 (“请读入账号！”, #警告图标, , )
    返回 ()
.如果真结束


赋值 (到文本 (读入文件 (相加 (取运行目录 (), “\账号文件.txt”))))
.如果真 (等于 (“XXXXXX----XXXXXX”))
    信息框 (相加 (“请修改辅助目录<账号文件.txt>文件”, #换行符, #换行符, #换行符, “格式：XXXXXX-XXXXXX”), #信息图标, “请修改账号文本”, )
    返回 ()
.如果真结束

.计次循环首 (取表项数 (), t)
    .如果真 (等于 (相减 (t, 1).取标题 (3), 删全部空 (.内容)))
         ' 调试输出 (超级列表框1.取标题 (t － 1, 1))
        赋值 (i, t)
         ' 调试输出 (i)
        
        跳出循环 ()
        
    .如果真结束
    
.计次循环尾 ()



.如果 (不等于 (相减 (i, 1).取标题 (5), “已使用”))
    运行 (相加 (.内容, “ /box:”, 删全部空 (.内容), “ ”, .内容), 假, )
    .判断循环首 (真)
        
        赋值 (登陆句柄, i.未知函数_67348917 (“WorldOfTanks.exe”, 相加 (“[#] [”, 删全部空 (.内容), “] 《坦克世界》客户端 [#]”), 相加 (“Sandbox:”, 删全部空 (.内容), “:App”), 相加 (1, 2, 8, 16)))
        赋值 (窗口标题, 未知函数_67348918 (到整数 (登陆句柄)))
         ' 调试输出 (“窗口标题=” ＋ 窗口标题)
        .如果真 (不等于 (寻找文本 (窗口标题, 相加 (“[”, .内容, “]”), , 假), -1))
            赋值 ( [i], 到整数 (登陆句柄))
            跳出循环 ()
        .如果真结束
        处理事件 ()
        DD延时 (1000)
    .判断循环尾 ()
    
    相加 (“窗口标题：”, 窗口标题, #换行符).加入文本 ()
    相加 (“窗口句柄：”, 到文本 ( [i]), #换行符).加入文本 ()
     ' 窗口_置标题 (到整数 (窗口句柄数组 [i]), 编辑框_窗口标题.内容 ＋ 到文本 (i))
    i.未知函数_67348919 ( [i], 0, 0) ' ' 移到左上角
    DD延时 (1000)
    赋值 (绑定窗口, i.未知函数_67348920 ( [i], “dx3”, “dx.mouse.position.lock.api|dx.mouse.position.lock.message|dx.mouse.state.api|dx.mouse.state.message|dx.mouse.api|dx.mouse.focus.input.api|dx.mouse.focus.input.message|dx.mouse.clip.lock.api|dx.mouse.input.lock.api”, “windows”, “dx.public.active.message”, 0))
    DD延时 (2000)
    .如果 (等于 (绑定窗口, 1))
        相加 (“绑定成功”, #换行符).加入文本 ()
        相减 (i, 1).置标题 (7, “启动游戏”)
        赋值 ( [i], 未知函数_67348921 ())
        赋值 (临时线程句柄, 未知函数_67348922 (&启动游戏, i))
        加入成员 (临时线程句柄)
        
    .否则
        赋值 (错误, i.未知函数_67348923 ())
        “绑定失败：”.加入文本 (相加 (到文本 (错误), #换行符))
        调试输出 (“错误信息=”, 错误)
    .如果结束
    
.否则
    信息框 (相加 (“账号已使用！”, #换行符, “如要继续使用此账号登陆请先删除账号的使用记录再重新启动脚本”), #警告图标, , )
    
.如果结束


.子程序 启动游戏, 空白型, , 启动多线程
.参数 p, 整数型, , 传送大漠对象

未知函数_67348932 ( [p])
.判断循环首 (真)
    找字A (p, 450, 383, 730, 560, “v”, “0b0a09-353535”)
    .如果真 (大于或等于 (0))
        调试输出 (“进入了游戏”)
        跳出循环 ()
    .如果真结束
    DD延时 (500)
.判断循环尾 ()
选择服务器 (p)
输入账号密码登录 (p)
未知函数_67348912 ( [p])
相加 (“登陆成功！”, 到文本 (p), #换行符).加入文本 ()
p.未知函数_67348933 ()

.子程序 选择服务器, 空白型, , 
.参数 g, 整数型, , 

调试输出 ()
调试输出 (“g=”, g)
.判断开始 (等于 (.现行选中项, 0))
    调试输出 (“选择0”)
    移动左单击A (g, , )
    DD延时 (500)
    移动左单击A (g, , 相加 (25))
    DD延时 (500)
    
.判断 (等于 (.现行选中项, 1))
    调试输出 (“选择1”)
    移动左单击A (g, , )
    DD延时 (500)
    移动左单击A (g, , 相加 (45))
    DD延时 (500)
    
.判断 (等于 (.现行选中项, 2))
    调试输出 (“选择2”)
    移动左单击A (g, , )
    DD延时 (500)
    移动左单击A (g, , 相加 (65))
    DD延时 (500)
    
.判断 (等于 (.现行选中项, 3))
    调试输出 (“选择3”)
    移动左单击A (g, , )
    DD延时 (500)
    移动左单击A (g, , 相加 (85))
    DD延时 (500)
.默认
    
.判断结束





.子程序 输入账号密码登录, 空白型, , 
.参数 g, 整数型, , 

.局部变量 j, 整数型, , , 
.局部变量 账号数组, 文本型, , "0", 
.局部变量 密码数组, 文本型, , "0", 

移动左单击A (g, , 相加 (28))
DD延时 (500)

未知函数_67348938 ( [g], 账号数组)
调试输出 (账号数组)
.计次循环首 (取数组成员数 (账号数组), j)
    g.未知函数_67348940 ( [g], 账号数组 [j])
    DD延时 (100)
    处理事件 ()
.计次循环尾 ()

g.未知函数_67348939 (#Tab键)
DD延时 (500)

未知函数_67348938 ( [g], 密码数组)
调试输出 (密码数组)
.计次循环首 (取数组成员数 (密码数组), j)
    g.未知函数_67348940 ( [g], 密码数组 [j])
    DD延时 (100)
    处理事件 ()
.计次循环尾 ()

移动左单击A (g, , 相加 (120))

记录登陆信息 (g)

.子程序 记录登陆信息, 空白型, , 
.参数 g, 整数型, , 

.局部变量 文本, 文本型, , , 
.局部变量 每行文本, 文本型, , "0", 
.局部变量 写入的文本, 文本型, , , 
.局部变量 写入内容, 文本型, , , 
.局部变量 使用记录, 文本型, , , 
.局部变量 使用时间, 文本型, , , 
.局部变量 i, 整数型, , , 

赋值 (文本, 到文本 (读入文件 (相加 (取运行目录 (), “\账号文件.txt”))))
赋值 (写入的文本, 未知函数_67348943 (文本, g, 相加 (“----”, 相减 (g, 1).取标题 (3), “----”, .取项目文本 (.现行选中项), “----已使用----”, 到文本 (取现行时间 ()))))
写到文件 (相加 (取运行目录 (), “\账号文件.txt”), 到字节集 (写入的文本))
相减 (g, 1).置标题 (4, .取项目文本 (.现行选中项))
相减 (g, 1).置标题 (5, “已使用”)
相减 (g, 1).置标题 (6, 到文本 (取现行时间 ()))


 ' .计次循环首 (取表项数 (), i)
     ' .如果 (不等于 (相减 (i, 1).取标题 (5), “”))
         ' 使用记录 ＝ “----” ＋ 超级列表框1.取标题 (i － 1, 4)
    .否则
         ' 使用记录 ＝ “”
    .如果结束
    
    
     ' .如果 (不等于 (相减 (i, 1).取标题 (6), “”))
         ' 使用时间 ＝ “----” ＋ 超级列表框1.取标题 (i － 1, 5)
    .否则
         ' 使用时间 ＝ “”
    .如果结束
    
    
     ' 写入内容 ＝ 写入内容 ＋ 超级列表框1.取标题 (i － 1, 1) ＋ “----” ＋ 超级列表框1.取标题 (i － 1, 2) ＋ “----” ＋ 超级列表框1.取标题 (i － 1, 3) ＋ 使用记录 ＋ 使用时间 ＋ #换行符
 ' .计次循环尾 ()
 ' 调试输出 (写入内容)
 ' 写到文件 (取运行目录 () ＋ “\使用记录.txt”, 到字节集 (写入内容))



.子程序 _按钮_批量启动_被单击, 空白型, , 
.局部变量 i, 整数型, , , 
.局部变量 临时线程句柄, 整数型, , , 
.局部变量 登陆句柄, 文本型, , , 
.局部变量 窗口标题, 文本型, , , 
.局部变量 绑定窗口, 整数型, , , 

赋值 (假)
.如果真 (等于 (.内容, “”))
    信息框 (“请修改游戏路径”, #警告图标, , )
    _按钮_游戏路径_被单击 ()
    返回 ()
.如果真结束

.如果真 (等于 (.内容, “”))
    信息框 (“请修改沙盘路径”, #警告图标, , )
    _按钮_沙盘路径_被单击 ()
    返回 ()
.如果真结束


.如果真 (等于 (0.取标题 (1), “”))
    信息框 (“请读入账号！”, #警告图标, , )
    返回 ()
.如果真结束


赋值 (到文本 (读入文件 (相加 (取运行目录 (), “\账号文件.txt”))))
.如果真 (等于 (“XXXXXX----XXXXXX”))
    信息框 (相加 (“请修改辅助目录<账号文件.txt>文件”, #换行符, #换行符, #换行符, “格式：XXXXXX-XXXXXX”), #信息图标, “请修改账号文本”, )
    返回 ()
.如果真结束

.判断开始 (等于 (到数值 (.内容), 0))
    信息框 (“开始位置不能为0”, #警告图标, , )
    返回 ()
.判断 (或者 (等于 (到数值 (.内容), 0), 等于 (到数值 (.内容), 1)))
    信息框 (“结束位置不能小于2”, #警告图标, , )
    返回 ()
.判断 (等于 (到数值 (.内容), 到数值 (.内容)))
    信息框 (“开始位置和结束位置不能相同”, #警告图标, , )
    返回 ()
.判断 (小于 (到数值 (.内容), 到数值 (.内容)))
    信息框 (“结束位置不能小于开始位置”, #警告图标, , )
    返回 ()
.判断 (等于 (.内容, “”))
    信息框 (“请输入起始位置”, #警告图标, , )
    返回 ()
.判断 (等于 (.内容, “”))
    信息框 (“请输入结束位置”, #警告图标, , )
    返回 ()
.默认
    
.判断结束


赋值 (.禁止, 真)

.计次循环首 (到数值 (.内容), i)
    .如果真 (并且 (大于或等于 (i, 到数值 (.内容)), 不等于 (相减 (i, 1).取标题 (5), “已使用”)))
        
        运行 (相加 (.内容, “ /box:”, 相减 (i, 1).取标题 (3), “ ”, .内容), 假, )
        .判断循环首 (真)
            
            赋值 (登陆句柄, i.未知函数_67348917 (“WorldOfTanks.exe”, 相加 (“[#] [”, 相减 (i, 1).取标题 (3), “] 《坦克世界》客户端 [#]”), 相加 (“Sandbox:”, 相减 (i, 1).取标题 (3), “:App”), 相加 (1, 2, 8, 16)))
            赋值 (窗口标题, 未知函数_67348918 (到整数 (登陆句柄)))
             ' 调试输出 (“窗口标题=” ＋ 窗口标题)
            .如果真 (不等于 (寻找文本 (窗口标题, 相加 (“[”, 相减 (i, 1).取标题 (3), “]”), , 假), -1))
                赋值 ( [i], 到整数 (登陆句柄))
                 ' 调试输出 (“窗口句柄数组:”, 窗口句柄数组)
                跳出循环 ()
            .如果真结束
            处理事件 ()
            DD延时 (1000)
        .判断循环尾 ()
        
        相加 (“窗口句柄：”, 到文本 ( [i]), #换行符).加入文本 ()
         ' 窗口_置标题 (到整数 (窗口句柄数组 [i]), 编辑框_窗口标题.内容 ＋ 到文本 (i))
        i.未知函数_67348919 ( [i], 0, 0) ' ' 移到左上角
        DD延时 (1000)
        赋值 (绑定窗口, i.未知函数_67348920 ( [i], “dx3”, “dx.mouse.position.lock.api|dx.mouse.position.lock.message|dx.mouse.state.api|dx.mouse.state.message|dx.mouse.api|dx.mouse.focus.input.api|dx.mouse.focus.input.message|dx.mouse.clip.lock.api|dx.mouse.input.lock.api”, “windows”, “dx.public.active.message”, 0))
        DD延时 (2000)
        .如果 (等于 (绑定窗口, 1))
            相加 (“绑定成功！”, #换行符).加入文本 ()
            相减 (i, 1).置标题 (7, “启动游戏”)
            赋值 ( [i], 未知函数_67348921 ())
            赋值 (临时线程句柄, 未知函数_67348922 (&启动游戏, i))
            加入成员 (临时线程句柄)
        .否则
            相加 (“绑定失败！”, #换行符).加入文本 ()
            返回 ()
        .如果结束
        
    .如果真结束
    
    .如果真 (等于 (真))
        相加 (“停止运行！”, #换行符).加入文本 ()
        跳出循环 ()
    .如果真结束
    DD延时 (相乘 (到整数 (.内容), 1000))
.计次循环尾 ()
赋值 (.禁止, 假)
调试输出 (“停止线程1=”, )

.子程序 _按钮_停止启动_被单击, 空白型, , 
.局部变量 i, 整数型, , , 
.局部变量 u, 整数型, , , 

赋值 (真)

.计次循环首 (取数组成员数 (), i)
    i.未知函数_67348933 ()
    未知函数_67348951 ( [i])
    未知函数_67348950 ( [i])
.计次循环尾 ()
.计次循环首 (取数组成员数 (), u)
    u.未知函数_67348933 ()
    未知函数_67348951 ( [u])
    未知函数_67348950 ( [u])
.计次循环尾 ()



.子程序 _按钮_终止_被单击, 空白型, , 
.局部变量 返回钮, 整数型, , , 
.局部变量 s, 整数型, , , 
.局部变量 j, 整数型, , , 

.如果真 (等于 (.内容, “”))
    信息框 (“       请输入终止序号！”, #错误图标, , )
    返回 ()
.如果真结束


赋值 (返回钮, 信息框 (“        确认终止,取消返回！”, 1, , ))
调试输出 (返回钮) ' 确认=0，取消或关闭=1  /terminate终止命令
.如果真 (等于 (返回钮, 0))
    调试输出 (“按下了确认钮！”)
    .判断开始 (等于 (.内容, “”))
        到整数 (.内容).未知函数_67348933 ()
        运行 (相加 (.内容, “ /box:”, 相减 (到整数 (.内容), 1).取标题 (3), “ /terminate”), 假, 1)
        相减 (到整数 (.内容), 1).置标题 (7, “终止程序”)
        
    .判断 (小于 (到整数 (.内容), 到整数 (.内容)))
        
        .计次循环首 (到整数 (.内容), s)
            .如果真 (并且 (大于或等于 (s, 到整数 (.内容)), 小于或等于 (s, 到整数 (.内容))))
                s.未知函数_67348933 ()
                运行 (相加 (.内容, “ /box:”, 相减 (s, 1).取标题 (3), “ /terminate”), 假, )
                相减 (s, 1).置标题 (7, “终止程序”)
            .如果真结束
            
            .如果真 (等于 (s, 到整数 (.内容)))
                跳出循环 ()
            .如果真结束
            
        .计次循环尾 ()
        
    .默认
        信息框 (“结束位置不能小于开始位置”, #警告图标, , “出错信息”)
        
    .判断结束
    
.如果真结束


.子程序 _按钮_读取账号_被单击, 空白型, , 
.局部变量 一次分割数组, 文本型, , "0", 
.局部变量 二次分割数组, 文本型, , "0", 
.局部变量 记录, 整数型, , , 
.局部变量 i, 整数型, , , 
.局部变量 k, 整数型, , , 
.局部变量 成员数, 整数型, , , 
.局部变量 分割保存, 文本型, , , 
.局部变量 保存文本, 文本型, , , 
.局部变量 l, 整数型, , , 

全部删除 ()
清除数组 ()
清除数组 ()
赋值 (到文本 (读入文件 (相加 (取运行目录 (), “\账号文件.txt”))))
赋值 (一次分割数组, 分割文本 (#换行符, ))

.计次循环首 (取数组成员数 (一次分割数组), k)
    
    .计次循环首 (取数组成员数 (一次分割数组), i)
        赋值 (二次分割数组, 分割文本 (一次分割数组 [i], “----”, ))
        赋值 (成员数, 取数组成员数 (二次分割数组))
        .如果真 (大于或等于 (成员数, 6))
            .判断开始 (等于 (到数值 (二次分割数组 [相减 (成员数, 3)]), k))
                赋值 (分割保存, 一次分割数组 [i])
                赋值 (一次分割数组 [i], 一次分割数组 [k])
                赋值 (一次分割数组 [k], 分割保存)
                调试输出 (“插到位置”, i)
            .默认
                
            .判断结束
            
        .如果真结束
        
    .计次循环尾 ()
    
.计次循环尾 ()

.计次循环首 (取数组成员数 (一次分割数组), l)
    赋值 (保存文本, 相加 (保存文本, 一次分割数组 [l], #换行符))
.计次循环尾 ()

写到文件 (相加 (取运行目录 (), “\账号文件.txt”), 到字节集 (保存文本))

赋值 (到文本 (读入文件 (相加 (取运行目录 (), “\账号文件.txt”))))
赋值 (一次分割数组, 分割文本 (#换行符, ))


.计次循环首 (取数组成员数 (一次分割数组), i)
    
    赋值 (二次分割数组, 分割文本 (一次分割数组 [i], “----”, ))
    
    加入成员 (二次分割数组 [1])
    加入成员 (二次分割数组 [2])
    .插入表项 ()
    相减 (i, 1).置标题 (0, 到文本 (i))
    相减 (i, 1).置标题 (1, 二次分割数组 [1])
    相减 (i, 1).置标题 (2, 二次分割数组 [2])
    相减 (i, 1).置标题 (7, “离线”)
    
    赋值 (记录, 取数组成员数 (二次分割数组))
    .如果 (大于或等于 (记录, 6))
        相减 (i, 1).置标题 (3, 二次分割数组 [相减 (记录, 3)])
        相减 (i, 1).置标题 (4, 二次分割数组 [相减 (记录, 2)])
        相减 (i, 1).置标题 (5, 二次分割数组 [相减 (记录, 1)])
        相减 (i, 1).置标题 (6, 二次分割数组 [记录])
        相减 (i, 1).置标题 (1, 二次分割数组 [1])
    .否则
        相减 (i, 1).置标题 (3,  [i])
    .如果结束
    
    .如果真 (等于 (i, 取数组成员数 ()))
        跳出循环 ()
    .如果真结束
    
.计次循环尾 ()

 ' 重定义数组 (DM, 假, 取数组成员数 (账号))
重定义数组 (假, 取数组成员数 ())
重定义数组 (假, 取数组成员数 ())
重定义数组 (假, 取数组成员数 ())
重定义数组 (假, 取数组成员数 ())
调试输出 (“成员数量”, 取数组成员数 ())


.子程序 DD延时, 空白型, , 高精度延时
.参数 延时间隔, 整数型, , 
.参数 延时单位, 整数型, 可空, 

.局部变量 hTimer, 整数型, , , 
.局部变量 int64, 未知类型0x4103A9DC, , , LARGE_INTEGER

 ' '',cpu占用低,窗口不卡死,一次最大可延时几年 (无返回值)
 ' '''1000微秒 = 1毫秒 ； 1000毫秒 = 1秒
 ' '''可空:毫秒  0 毫秒  1 微秒  2 秒  3 分  4 小时  5 天
.判断开始 (等于 (延时单位, 1))
    赋值 (int64., 相乘 (-10, 延时间隔))
    赋值 (hTimer, 未知函数_168012253 (0, 假, 0))
    未知函数_168012254 (hTimer, int64, 0, 0, 0, 假)
    .判断循环首 ()

.子程序 找字A, 空白型, , 
.参数 g, 整数型, , 
.参数 坐标x, 整数型, , 
.参数 坐标y, 整数型, , 
.参数 坐标x0, 整数型, , 
.参数 坐标y0, 整数型, , 
.参数 字符名称, 文本型, , 
.参数 颜色值, 文本型, , 

.局部变量 字符索引, 文本型, , , 
.局部变量 分割字符, 文本型, , "0", 

赋值 (字符索引, g.未知函数_67348965 (坐标x, 坐标y, 坐标x0, 坐标y0, 字符名称, 颜色值, 0.9))
赋值 (分割字符, 分割文本 (字符索引, “|”, ))
赋值 (到整数 (分割字符 [1]))
赋值 (到整数 (分割字符 [2]))
赋值 (到整数 (分割字符 [3]))


.子程序 移动左单击A, 空白型, , 
.参数 g, 整数型, , 
.参数 x坐标, 整数型, 可空, 
.参数 y坐标, 整数型, 可空, 

g.未知函数_67348967 (x坐标, y坐标)
DD延时 (500)
g.未知函数_67348966 ()
DD延时 (500)

.子程序 _按钮1_被单击, 空白型, , 
.局部变量 bd, 整数型, , , 
.局部变量 登陆句柄, 文本型, , , 
.局部变量 i, 整数型, , , 
.局部变量 窗口标题, 文本型, , , 

文本排序 ()
返回 ()

1.未知函数_67348913 ()
 ' DD延时 (2000)
 ' bd ＝ DM [1].BindWindow (1051240, “dx”, “dx”, “dx”, 0)
 ' DD延时 (2000)
 ' .如果真 (等于 (bd, 1))
     ' DM [1].MoveTo (578, 458)
     ' DD延时 (300)
     ' DM [1].LeftClick ()
     ' DD延时 (200)
.如果真结束

.判断循环首 (真)
    
    赋值 (登陆句柄, 1.未知函数_67348917 (“WorldOfTanks.exe”, 相加 (“[#] [”, 删全部空 (.内容), “] 《坦克世界》客户端 [#]”), 相加 (“Sandbox:”, 删全部空 (.内容), “:App”), 相加 (1, 2, 8, 16)))
    
    赋值 (窗口标题, 未知函数_67348918 (到整数 (登陆句柄)))
    
    调试输出 (相加 (“窗口标题=”, 窗口标题))
    .如果真 (不等于 (寻找文本 (窗口标题, 相加 (“[”, .内容, “]”), , 假), -1))
        赋值 ( [1], 到整数 (登陆句柄))
         ' 调试输出 (“窗口句柄数组:”, 窗口句柄数组)
        跳出循环 ()
    .如果真结束
    
    未知函数_67348968 (1000)
.判断循环尾 ()


.子程序 _超级列表框1_被双击, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 i, 整数型, , , 
.局部变量 输入的文本, 文本型, , , 
.局部变量 取得标题, 文本型, , , 
.局部变量 写入内容, 文本型, , , 
.局部变量 使用记录, 文本型, , , 
.局部变量 使用时间, 文本型, , , 

输入框 (“输入沙盘名称”, “输入沙盘名称”, , 输入的文本, , )

.计次循环首 (取表项数 (), i)
    
    赋值 (取得标题, 相减 (i, 1).取标题 (5))
    .如果真 (等于 (取得标题, “已使用”))
        .如果真 (等于 (输入的文本, 相减 (i, 1).取标题 (3)))
            信息框 (“沙盘名被占用,请重新输入！”, #警告图标, , )
            返回 ()
        .如果真结束
        
    .如果真结束
    
    .如果真 (等于 (输入的文本, 相减 (i, 1).取标题 (3)))
        相减 (i, 1).置标题 (3, .取标题 (., 3))
    .如果真结束
    
.计次循环尾 ()

.如果 (等于 (输入的文本, “”))
    .置标题 (., 3, .取标题 (., 3))
.否则
    .置标题 (., 3, 输入的文本)
    
     ' .计次循环首 (取表项数 (), i)
         ' .如果 (不等于 (相减 (i, 1).取标题 (4), “”))
             ' 使用记录 ＝ “----” ＋ 超级列表框1.取标题 (i － 1, 4)
        .否则
             ' 使用记录 ＝ “”
        .如果结束
        
        
         ' .如果 (不等于 (相减 (i, 1).取标题 (5), “”))
             ' 使用时间 ＝ “----” ＋ 超级列表框1.取标题 (i － 1, 5)
        .否则
             ' 使用时间 ＝ “”
        .如果结束
        
        
         ' 写入内容 ＝ 写入内容 ＋ 超级列表框1.取标题 (i － 1, 1) ＋ “----” ＋ 超级列表框1.取标题 (i － 1, 2) ＋ “----” ＋ 超级列表框1.取标题 (i － 1, 3) ＋ 使用记录 ＋ 使用时间 ＋ #换行符
        
     ' .计次循环尾 ()
     ' 调试输出 (写入内容)
     ' 写到文件 (取运行目录 () ＋ “\使用记录.txt”, 到字节集 (写入内容))
    
.如果结束


.子程序 文本排序, 空白型, , 测试用
.局部变量 一次分割数组, 文本型, , "0", 
.局部变量 i, 整数型, , , 
.局部变量 k, 整数型, , , 
.局部变量 二次分割数组, 文本型, , "0", 
.局部变量 成员数, 整数型, , , 
.局部变量 分割保存, 文本型, , , 

赋值 (到文本 (读入文件 (相加 (取运行目录 (), “\账号文件.txt”))))
赋值 (一次分割数组, 分割文本 (#换行符, ))

.计次循环首 (取数组成员数 (一次分割数组), k)
    
    .计次循环首 (取数组成员数 (一次分割数组), i)
        赋值 (二次分割数组, 分割文本 (一次分割数组 [i], “----”, ))
        赋值 (成员数, 取数组成员数 (二次分割数组))
        .如果真 (大于或等于 (成员数, 6))
            .判断开始 (等于 (到数值 (二次分割数组 [相减 (成员数, 3)]), k))
                赋值 (分割保存, 一次分割数组 [i])
                赋值 (一次分割数组 [i], 一次分割数组 [k])
                赋值 (一次分割数组 [k], 分割保存)
                调试输出 (“插到位置1”, i)
            .默认
                
            .判断结束
            
        .如果真结束
        
    .计次循环尾 ()
    
.计次循环尾 ()
 ' .计次循环首 (取数组成员数 (一次分割数组), )
     ' .计次循环首 (取数组成员数 (一次分割数组), i)
         ' 二次分割数组 ＝ 分割文本 (一次分割数组 [i], “----”, )
         ' 成员数 ＝ 取数组成员数 (二次分割数组)
         ' .如果真 (大于或等于 (成员数, 6))
             ' .判断开始 (等于 (到数值 (二次分割数组 [相减 (成员数, 3)]), 1))
                 ' 分割保存 ＝ 一次分割数组 [i]
                 ' 一次分割数组 [i] ＝ 一次分割数组 [1]
                 ' 一次分割数组 [1] ＝ 分割保存
                 ' 调试输出 (“插到位置1”, i)
             ' .判断 (等于 (到数值 (二次分割数组 [相减 (成员数, 3)]), 2))
                 ' 分割保存 ＝ 一次分割数组 [i]
                 ' 一次分割数组 [i] ＝ 一次分割数组 [2]
                 ' 一次分割数组 [2] ＝ 分割保存
                 ' 调试输出 (“插到位置2”, i)
             ' .判断 (等于 (到数值 (二次分割数组 [相减 (成员数, 3)]), 3))
                 ' 分割保存 ＝ 一次分割数组 [i]
                 ' 一次分割数组 [i] ＝ 一次分割数组 [3]
                 ' 一次分割数组 [3] ＝ 分割保存
                 ' 调试输出 (“插到位置3”, i)
             ' .判断 (等于 (到数值 (二次分割数组 [相减 (成员数, 3)]), 4))
                 ' 分割保存 ＝ 一次分割数组 [i]
                 ' 一次分割数组 [i] ＝ 一次分割数组 [4]
                 ' 一次分割数组 [4] ＝ 分割保存
                 ' 调试输出 (“插到位置4”, i)
             ' .判断 (等于 (到数值 (二次分割数组 [相减 (成员数, 3)]), 5))
                 ' 分割保存 ＝ 一次分割数组 [i]
                 ' 一次分割数组 [i] ＝ 一次分割数组 [5]
                 ' 一次分割数组 [5] ＝ 分割保存
                 ' 调试输出 (“插到位置5”, i)
             ' .判断 (等于 (到数值 (二次分割数组 [相减 (成员数, 3)]), 6))
                 ' 分割保存 ＝ 一次分割数组 [i]
                 ' 一次分割数组 [i] ＝ 一次分割数组 [6]
                 ' 一次分割数组 [6] ＝ 分割保存
                 ' 调试输出 (“插到位置6”, i)
            .默认
                
            .判断结束
            
        .如果真结束
        
     ' .计次循环尾 ()
    
 ' .计次循环尾 ()



.计次循环首 (取数组成员数 (一次分割数组), k)
    调试输出 (一次分割数组 [k])
.计次循环尾 ()





 ' 不属于任何一个程序集、类模块的函数：
