 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 657
    高度 = 542
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “TD-图片放大缩小例程”
    帮助文件名 = “”



.图片 指针TD1, " ' 已保存到：D:\易语言学习\Data\图片放大缩小例程.e\指针TD1", , 
.图片 指针TD2, " ' 已保存到：D:\易语言学习\Data\图片放大缩小例程.e\指针TD2", , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 4 系统核心支持库
 ' xplib 7F54B9CE8887428dBA9CEEB94CEF4C72 1 6 XP风格界面库





.窗口程序集 窗口程序集1, , , 

.程序集变量 图片名, 空白型, , , 
.程序集变量 缩放, 双精度小数型, , , 
.程序集变量 显示左, 空白型, , , 
.程序集变量 显示顶, 空白型, , , 
.程序集变量 画出位置左, 空白型, , , 
.程序集变量 画出位置顶, 空白型, , , 
.程序集变量 按下X, 空白型, , , 
.程序集变量 按下Y, 空白型, , , 
.程序集变量 鼠标x坐标, 整数型, , , 
.程序集变量 鼠标y坐标, 整数型, , , 
.程序集变量 旋转图片, 整数型, , , 
.子程序 _按钮1_被单击, 空白型, , 
打开 ()
赋值 (图片名, 载入图片 (.文件名))
赋值 (缩放, 1)
赋值 (.可视, 假)
赋值 (.可视, 假)
显示图片 (图片名)

.子程序 显示图片, 空白型, , 
.参数 图片源, 整数型, , 

.局部变量 临时宽, 整数型, , , 
.局部变量 临时高, 整数型, , , 

赋值 (临时宽, 相乘 (图片源.取图片宽度 (), 缩放))
赋值 (临时高, 相乘 (图片源.取图片高度 (), 缩放))
 ' ========================================用于状态栏显示图片实际像素

 ' ========================================
.如果真 (大于 (临时宽, .宽度))
    赋值 (临时高, 相乘 (相除 (.宽度, 临时宽), 临时高))
    赋值 (临时宽, .宽度)
.如果真结束
.如果真 (大于 (临时高, .高度))
    赋值 (临时宽, 相乘 (相除 (.高度, 临时高), 临时宽))
    赋值 (临时高, .高度)
.如果真结束

赋值 (临时宽, 相乘 (临时宽, 缩放))
赋值 (临时高, 相乘 (临时高, 缩放))
赋值 (.宽度, 临时宽)
赋值 (.高度, 临时高)
图片源.画图片 (0, 0, 临时宽, 临时高, ) ' 画出的图片大小比例不超出画板_显示图片的宽高。
 ' 下面代码计算并输出图片水平居中显示
.如果 (等于 (.宽度, .宽度))
    赋值 (.可视, 假)
    赋值 (画出位置左, 0)
.否则
    .如果真 (小于 (.宽度, .宽度))
        赋值 (画出位置左, 相除 (相减 (.宽度, .宽度), 2))
        .如果 (小于 (画出位置左, 1))
            赋值 (画出位置左, 0)
             ' 清除 （［整数型 清除区左上角横坐标］，［整数型 清除区左上角纵坐标］，［整数型 清除区宽度］，［整数型 清除区高度］）
        .否则
            .清除 (画出位置左, .高度)
            相减 (.宽度, 画出位置左).清除 (画出位置左, .高度)
        .如果结束
        
        赋值 (.可视, 假)
        输出调试文本 (到文本 (画出位置左))
    .如果真结束
    .如果真 (大于 (.宽度, .宽度))
        赋值 (.可视, 真)
        赋值 (.最大位置, 相减 (.宽度, .宽度))
        赋值 (.位置, 相除 (.最大位置, 2))
        赋值 (画出位置左, 0)
    .如果真结束
    
.如果结束
 ' ===== 下面代码计算并输出图片垂直居中显示
.如果 (等于 (.高度, .高度))
    赋值 (画出位置顶, 0)
    赋值 (.可视, 假)
.否则
    .如果真 (小于 (.高度, .高度))
        赋值 (画出位置顶, 相除 (相减 (.高度, .高度), 2))
        .如果 (小于 (画出位置顶, 1))
            赋值 (画出位置顶, 0)
        .否则
            .清除 (.宽度, 画出位置顶)
            .清除 (相减 (.高度, 画出位置顶), .宽度, 画出位置顶)
        .如果结束
        
        赋值 (.可视, 假)
    .如果真结束
    .如果真 (大于 (.高度, .高度))
        赋值 (.可视, 真)
        赋值 (.最大位置, 相减 (.高度, .高度))
        赋值 (.位置, 相除 (.最大位置, 2))
        赋值 (画出位置顶, 0)
    .如果真结束
    
.如果结束
 ' ============================================================
.如果 (等于 (.可视, 真))
    赋值 (显示左, .位置)
.否则
    赋值 (显示左, 0)
.如果结束
.如果 (等于 (.可视, 真))
    赋值 (显示顶, .位置)
.否则
    赋值 (显示顶, 0)
.如果结束
 ' ===============上面代码功能：接收横、纵滚动条图片画出的指令
显示左.复制 (显示顶, , , , 画出位置左, 画出位置顶, )

.子程序 _按钮3_被单击, 空白型, , 
赋值 (缩放, 相乘 (缩放, 1.1))
显示图片 (图片名)

.子程序 _按钮4_被单击, 空白型, , 
赋值 (缩放, 相乘 (缩放, 0.9))
显示图片 (图片名)


.子程序 移动图片, 空白型, , 
.如果 (等于 (.可视, 真))
    赋值 (显示左, .位置)
.否则
    赋值 (显示左, 0)
.如果结束
.如果 (等于 (.可视, 真))
    赋值 (显示顶, .位置)
.否则
    赋值 (显示顶, 0)
.如果结束
显示左.复制 (显示顶, , , , 画出位置左, 画出位置顶, )


.子程序 _横向滚动条1_位置被改变, 空白型, , 
移动图片 ()

.子程序 _纵向滚动条1_位置被改变, 空白型, , 
移动图片 ()

.子程序 _画板_显示图片_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.鼠标指针, #指针TD2)
赋值 (鼠标x坐标, 横向位置)
赋值 (鼠标y坐标, 纵向位置)

.子程序 _画板_显示图片_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 移动比例x, 双精度小数型, , , 
.局部变量 移动比例y, 双精度小数型, , , 

赋值 (.鼠标指针, #指针TD1)
赋值 (移动比例x, 相除 (.最大位置, .宽度))
赋值 (移动比例y, 相除 (.最大位置, .高度))
.如果真 (大于 (横向位置, 鼠标x坐标))
    赋值 (.位置, 相减 (.位置, 相乘 (相减 (横向位置, 鼠标x坐标), 移动比例x)))
.如果真结束
.如果真 (小于 (横向位置, 鼠标x坐标))
    赋值 (.位置, 相加 (.位置, 相乘 (相减 (鼠标x坐标, 横向位置), 移动比例x)))
.如果真结束
.如果真 (大于 (.位置, .最大位置))
     ' ==========防止横向滚动条1.位置 ＞ 横向滚动条1.最大位置,导致图片显示不正常。==========
    赋值 (.位置, .最大位置)
.如果真结束
.如果真 (大于 (纵向位置, 鼠标y坐标))
    赋值 (.位置, 相减 (.位置, 相乘 (相减 (纵向位置, 鼠标y坐标), 移动比例y)))
.如果真结束
.如果真 (小于 (纵向位置, 鼠标y坐标))
    赋值 (.位置, 相加 (.位置, 相乘 (相减 (鼠标y坐标, 纵向位置), 移动比例y)))
.如果真结束
.如果真 (大于 (.位置, .最大位置))
     ' ==========防止纵向滚动条1.位置>纵向滚动条1.最大位置==========
    赋值 (.位置, .最大位置)
.如果真结束
输出调试文本 (相加 (到文本 (相除 (.位置, 10)), “,”, 到文本 (相除 (.位置, 10))))
移动图片 ()

.子程序 __启动窗口_创建完毕, 空白型, , 
未知支持库函数_0 (1)

.子程序 __启动窗口_将被销毁, 空白型, , 
卸载图片 (旋转图片)
卸载图片 (图片名)


 ' 不属于任何一个程序集、类模块的函数：
