 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 窗口1
    左边 = 50
    顶边 = 50
    宽度 = 400
    高度 = 341
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    窗口类名 = “”
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “正则表达式(DEELX)-Unicode编码测试”
    帮助文件名 = “”





 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 5 2 系统核心支持库
 ' DeelxRegEx 6CE139EAF3484af3AE10E402BB263AB8 2 1 正则表达式支持库(Deelx版)
 ' spec A512548E76954B6E92C21055517615B0 3 1 特殊功能支持库





.DLL命令 MultiByteToWideChar, 整数型, "", "MultiByteToWideChar", , 返回 WideChar字符数目,包括结尾0
    .参数 CodePage, 整数型, , 
    .参数 dwFlags, 整数型, , 
    .参数 lpMultiByteStr, 文本型, , 
    .参数 cchMultiByte, 整数型, , 
    .参数 lpWideCharStr, 字节集, , 
    .参数 cchWideChar, 整数型, , 

.DLL命令 WideCharToMultiByte, 整数型, "", "WideCharToMultiByte", , 返回 MultiByte字符数目,包括结尾0
    .参数 CodePage, 整数型, , 
    .参数 dwFlags, 整数型, , 
    .参数 lpWideCharStr, 字节集, , 
    .参数 cchWideChar, 整数型, , 
    .参数 lpMultiByteStr, 文本型, , 
    .参数 cchMultiByte, 整数型, , 
    .参数 unknow, 整数型, , 
    .参数 unknow, 整数型, , 

.DLL命令 MessageBoxW, 整数型, "user32", "MessageBoxW", , Unicode版信息框　
    .参数 hwnd, 整数型, , 
    .参数 lpText, 字节集, , 
    .参数 lpCaption, 字节集, , 
    .参数 wType, 整数型, , 

.程序集 辅助功能程序集, , , 

.子程序 A2W, 字节集, 公开, 将Ansi转成Unicode
.参数 欲转换的文本, 文本型, , 

.局部变量 缓冲区, 字节集, , , 
.局部变量 字符数目, 整数型, , , 包括结尾0

赋值 (字符数目, MultiByteToWideChar (0, 0, 欲转换的文本, -1, {  }, 0)) ' 返回字符数目
 ' 输出调试文本 (字符数目)
赋值 (缓冲区, 取空白字节集 (相乘 (字符数目, 2)))
MultiByteToWideChar (0, 0, 欲转换的文本, -1, 缓冲区, 字符数目)
返回 (缓冲区)
 ' BOOL MByteToWChar(LPCSTR lpcszStr, LPWSTR lpwszStr, DWORD dwSize)
 ' {
 ' // Get the required size of the buffer that receives the Unicode' // string.
 ' DWORD dwMinSize;
 ' dwMinSize = MultiByteToWideChar (CP_ACP, 0, lpcszStr, -1, NULL, 0);

 ' if(dwSize < dwMinSize)
 ' {' return FALSE;' }

 ' // Convert headers from ASCII to Unicode.
 ' MultiByteToWideChar (CP_ACP, 0, lpcszStr, -1, lpwszStr, dwMinSize);
 ' return TRUE;
 ' }



.子程序 W2A, 文本型, 公开, 将Unicode转成Ansi
.参数 欲转换的文本, 字节集, , Unicode文本

.局部变量 缓冲区, 文本型, , , 
.局部变量 字符数目, 整数型, , , 包括结尾0

赋值 (字符数目, WideCharToMultiByte (1, 0, 欲转换的文本, -1, “”, 0, 0, 0))
 ' 输出调试文本 (字符数目)
赋值 (缓冲区, 取空白文本 (字符数目))
WideCharToMultiByte (1, 0, 欲转换的文本, -1, 缓冲区, 字符数目, 0, 0)
返回 (缓冲区)
 ' BOOL WCharToMByte(LPCWSTR lpcwszStr, LPSTR lpszStr, DWORD dwSize)
 ' {
 ' DWORD dwMinSize;
 ' dwMinSize = WideCharToMultiByte(CP_OEMCP,NULL,lpcwszStr,-1,NULL,0,NULL,FALSE);
 ' if(dwSize < dwMinSize)
 ' {return FALSE;}
 ' WideCharToMultiByte(CP_OEMCP,NULL,lpcwszStr,-1,lpszStr,dwSize,NULL,FALSE);
 ' return TRUE;
 ' }


.窗口程序集 窗口程序集_窗口1, , , 

.子程序 _启动子程序, 整数型, , 请在本子程序中放置易模块初始化代码
载入 (窗口1, , 假)
返回 (0) ' 可以根据您的需要返回任意数值

.子程序 _窗口1_创建完毕, 空白型, , 


.子程序 _按钮_匹配中文_被单击, 空白型, , 
.局部变量 正则表达式, 未知类型0x20001, , , 
.局部变量 搜索结果, 未知类型0x20002, , , 
.局部变量 被搜索文本, 字节集, , , Unicode格式的文本
.局部变量 表达式文本, 字节集, , , Unicode格式的文本
.局部变量 匹配文本, 字节集, , , Unicode格式的文本

 ' //因为易无法直接输入Unicode格式文本,所以先转换编码再测试
赋值 (被搜索文本, A2W (“邓学彬，Unicode格式的文本测试”))
赋值 (表达式文本, A2W (“[\u4e00-\u9fa5]+”)) ' //这个表达式是匹配中文的
 ' //下面用的命令,都是带W的,W代表宽字符(WideChar)文本、Unicode格式
 ' //带W的命令,涉及文本的参数和返回值全是字节集(Unicode格式的文本)
正则表达式.未知支持库函数_26 (表达式文本, )
赋值 (搜索结果, 正则表达式.未知支持库函数_27 (被搜索文本, ))
赋值 (匹配文本, 搜索结果.未知支持库函数_33 ())
 ' //输出一下取到的匹配文本
调试输出 (匹配文本) ' //直接输出字节集
调试输出 (W2A (匹配文本)) ' //转换成文本型
 ' //使用W版API直接显示Unicode文本
MessageBoxW (0, 匹配文本, A2W (“提示”), 0)


.子程序 _按钮_匹配韩文_被单击, 空白型, , 
.局部变量 正则表达式, 未知类型0x20001, , , 
.局部变量 搜索结果, 未知类型0x20002, , , 
.局部变量 被搜索文本, 字节集, , , Unicode格式的文本
.局部变量 表达式文本, 字节集, , , Unicode格式的文本
.局部变量 匹配文本, 字节集, , , Unicode格式的文本

 ' //因为易无法直接输入Unicode格式文本,下面这个字节集是我之前转换好的
赋值 (被搜索文本, { 104, 0, 101, 0, 108, 0, 108, 0, 111, 0, 112, 200, 32, 193, 0, 174, 96, 79, 125, 89, 45, 78, 135, 101, 0, 0 })
 ' //下面这个表达式是匹配韩文的
赋值 (表达式文本, A2W (“[\u3130-\u318F\uAC00-\uD7A3]+”))
 ' //下面用的命令,都是带W的,W代表宽字符(WideChar)文本、Unicode格式
 ' //带W的命令,涉及文本的参数和返回值全是字节集(Unicode格式的文本)
正则表达式.未知支持库函数_26 (表达式文本, )
赋值 (搜索结果, 正则表达式.未知支持库函数_27 (被搜索文本, ))
赋值 (匹配文本, 搜索结果.未知支持库函数_33 ())
 ' //输出一下取到的匹配文本
调试输出 (匹配文本) ' //直接输出字节集
 ' //使用W版API直接显示Unicode文本
MessageBoxW (0, 被搜索文本, A2W (“被搜索文本”), 0)
MessageBoxW (0, 匹配文本, A2W (“匹配文本”), 0)


.子程序 _按钮_替换测试_被单击, 空白型, , 
.局部变量 正则表达式, 未知类型0x20001, , , 
.局部变量 被搜索文本, 字节集, , , Unicode格式的文本
.局部变量 表达式文本, 字节集, , , Unicode格式的文本
.局部变量 替换文本, 字节集, , , Unicode格式的文本
.局部变量 替换结果, 字节集, , , Unicode格式的文本

 ' //因为易无法直接输入Unicode格式文本,所以先转换编码再测试
赋值 (被搜索文本, A2W (“【易语言】-强大的中文编程”))
赋值 (表达式文本, A2W (“【.*?】”))
赋值 (替换文本, A2W (“吴涛”))
 ' //下面用的命令,都是带W的,W代表宽字符(WideChar)文本、Unicode格式
 ' //带W的命令,涉及文本的参数和返回值全是字节集(Unicode格式的文本)
正则表达式.未知支持库函数_26 (表达式文本, )
赋值 (替换结果, 正则表达式.未知支持库函数_30 (被搜索文本, 替换文本, , ))
 ' //使用W版API直接显示Unicode文本
MessageBoxW (0, 替换结果, A2W (“替换结果”), 0)


.子程序 _按钮_搜索全部_被单击, 空白型, , 
.局部变量 正则表达式, 未知类型0x20001, , , 
.局部变量 搜索结果数组, 未知类型0x20002, , "0", 
.局部变量 被搜索文本, 字节集, , , Unicode格式的文本
.局部变量 表达式文本, 字节集, , , Unicode格式的文本
.局部变量 匹配文本, 字节集, , , Unicode格式的文本
.局部变量 i, 整数型, , , 

 ' //因为易无法直接输入Unicode格式文本,所以先转换编码再测试
赋值 (被搜索文本, A2W (“易语言作者:【吴涛】,支持库作者:【邓学彬】”))
赋值 (表达式文本, A2W (“【(.*?)】”))
 ' //下面用的命令,都是带W的,W代表宽字符(WideChar)文本、Unicode格式
 ' //带W的命令,涉及文本的参数和返回值全是字节集(Unicode格式的文本)
正则表达式.未知支持库函数_26 (表达式文本, )
赋值 (搜索结果数组, 正则表达式.未知支持库函数_29 (被搜索文本, ))
.计次循环首 (取数组成员数 (搜索结果数组), i)
    赋值 (匹配文本, 搜索结果数组.未知支持库函数_34 ( [i], 1))
    MessageBoxW (0, 匹配文本, A2W (相加 (“匹配结果”, 到文本 (i))), 0)
.计次循环尾 ()



.子程序 _按钮_分割测试_被单击, 空白型, , 
.局部变量 正则表达式, 未知类型0x20001, , , 
.局部变量 待分割文本, 字节集, , , Unicode格式的文本
.局部变量 表达式文本, 字节集, , , Unicode格式的文本
.局部变量 返回数组, 字节集, , "0", 
.局部变量 i, 整数型, , , 

赋值 (待分割文本, A2W (“易语言作者:【吴涛】支持库作者:【邓学彬】正则表达式”))
赋值 (表达式文本, A2W (“【(.*?)】”))
正则表达式.未知支持库函数_26 (表达式文本, )
赋值 (返回数组, 正则表达式.未知支持库函数_39 (待分割文本, ))
输出调试文本 (相加 (“分割结果 数组成员=”, 到文本 (取数组成员数 (返回数组))))
.计次循环首 (取数组成员数 (返回数组), i)
    MessageBoxW (0, 返回数组 [i], A2W (相加 (“分割结果”, 到文本 (i))), 0)
.计次循环尾 ()


 ' 不属于任何一个程序集、类模块的函数：
