 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 380
    高度 = 250
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 已保存到：D:\易语言学习\Data\gT6TXm6S.e\_启动窗口_图标.ico
    背景音乐 =  ' 空
    标题 = “计算网段和广播地址”
    帮助文件名 = “”





 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 4 系统核心支持库





.窗口程序集 窗口程序集1, , , 

.子程序 _计算_按钮_被单击, 空白型, , 
 ' 检查基本信息是否完整如果不完整告诉用户
.如果 (或者 (等于 (., “”), 等于 (., “”)))
     ' 代表基本信息不完整
    信息框 (“请完整填写ip地址和子网号.”, 0, )
    
.否则
    
    赋值 (., 计算IP地址的网段 (., .))
    赋值 (., 计算IP地址的广播地址 (., .))
.如果结束




.子程序 十进制到二进制文本, 文本型, 公开, 
.参数 十进制数, 整数型, , 

.局部变量 二进制数, 文本型, , , 
.局部变量 当前节余, 整数型, , , 
.局部变量 当前余数, 整数型, , , 

.如果真 (或者 (等于 (十进制数, 0), 等于 (十进制数, 1)))
    返回 (到文本 (十进制数))
.如果真结束

 ' 初始化变量
赋值 (二进制数, “”)
赋值 (当前节余, 十进制数)
赋值 (当前余数, 0)
.判断循环首 (大于 (当前节余, 1))
    .如果 (等于 (相乘 (取整 (相除 (当前节余, 2)), 2), 当前节余))
        赋值 (当前余数, 0)
        
    .否则
        
        赋值 (当前余数, 1)
    .如果结束
    
    赋值 (当前节余, 取整 (相除 (当前节余, 2)))
    赋值 (二进制数, 相加 (到文本 (当前余数), 二进制数))
.判断循环尾 ()
赋值 (二进制数, 相加 (“1”, 二进制数))

返回 (二进制数)


.子程序 二进制位与, 文本型, 公开, 
.参数 二进制数一, 文本型, , 
.参数 二进制数二, 文本型, , 

.局部变量 临时整数变量, 整数型, , , 
.局部变量 临时字符串变量, 文本型, , , 

 ' 统一位数
.如果真 (不等于 (取文本长度 (二进制数一), 取文本长度 (二进制数二)))
    .如果 (小于 (取文本长度 (二进制数一), 取文本长度 (二进制数二)))
         ' 代表二进制数一小于二进制数二
        .计次循环首 (相减 (取文本长度 (二进制数二), 取文本长度 (二进制数一)), 临时整数变量)
            赋值 (二进制数一, 相加 (“0”, 二进制数一))
        .计次循环尾 ()
        
    .否则
        
         ' 代表二进制数一大于二进制数二
        .计次循环首 (相减 (取文本长度 (二进制数一), 取文本长度 (二进制数二)), 临时整数变量)
            赋值 (二进制数二, 相加 (“0”, 二进制数二))
        .计次循环尾 ()
    .如果结束
    
.如果真结束

 ' 进行位与操作
赋值 (临时字符串变量, “”)
.计次循环首 (取文本长度 (二进制数一), 临时整数变量)
    .如果 (并且 (等于 (取文本中间 (二进制数一, 临时整数变量, 1), “1”), 等于 (取文本中间 (二进制数二, 临时整数变量, 1), “1”)))
        赋值 (临时字符串变量, 相加 (临时字符串变量, “1”))
        
    .否则
        
        赋值 (临时字符串变量, 相加 (临时字符串变量, “0”))
    .如果结束
    
.计次循环尾 ()

返回 (临时字符串变量)


.子程序 二进制文本到十进制数, 整数型, 公开, 
.参数 二进制文本, 文本型, , 

.局部变量 十进制数, 整数型, , , 
.局部变量 临时整数变量, 整数型, , , 
.局部变量 临时整数变量一, 整数型, , , 
.局部变量 二次方, 整数型, , , 
.局部变量 当前二进制数, 整数型, , , 

赋值 (十进制数, 0)
赋值 (临时整数变量, 取文本长度 (二进制文本))
赋值 (临时整数变量一, 0)
.判断循环首 (不等于 (临时整数变量, 0))
    赋值 (二次方, 求次方 (2, 临时整数变量一))
    赋值 (当前二进制数, 到数值 (取文本中间 (二进制文本, 临时整数变量, 1)))
    
    赋值 (十进制数, 相加 (相乘 (当前二进制数, 二次方), 十进制数))
    
    赋值 (临时整数变量一, 相加 (临时整数变量一, 1))
    赋值 (临时整数变量, 相减 (临时整数变量, 1))
.判断循环尾 ()

返回 (十进制数)


.子程序 十进制IP到二进制IP, 文本型, 公开, 
.参数 十进制IP, 文本型, , 

.局部变量 临时整数变量, 整数型, , , 
.局部变量 临时字符串数组, 文本型, , "0", 
.局部变量 临时字符串变量, 文本型, , , 
.局部变量 IP地址数组, 文本型, , "0", 
.局部变量 临时整数变量一, 整数型, , , 
.局部变量 当前节余, 整数型, , , 
.局部变量 当前余数, 整数型, , , 

 ' 初始化变量
赋值 (临时整数变量, 0)
清除数组 (临时字符串数组)
清除数组 (IP地址数组)
赋值 (临时字符串变量, “”)
赋值 (当前节余, 0)
赋值 (当前余数, 0)
 ' 判断IP地址格式是否正确，如果不正确返回 空 值
赋值 (IP地址数组, 分割文本 (十进制IP, “.”, ))
.如果真 (不等于 (取数组成员数 (IP地址数组), 4))
     ' 代表IP地址信息不正确
    返回 (“”)
.如果真结束

.计次循环首 (4, 临时整数变量)
    赋值 (当前节余, 到数值 (IP地址数组 [临时整数变量]))
    赋值 (当前余数, 0)
    .判断循环首 (大于 (当前节余, 1))
        .如果 (小于 (相乘 (取整 (相除 (当前节余, 2)), 2), 当前节余))
            赋值 (当前余数, 1)
            
        .否则
            
            赋值 (当前余数, 0)
        .如果结束
        
        赋值 (临时字符串变量, 相加 (到文本 (当前余数), 临时字符串变量))
        赋值 (当前节余, 取整 (相除 (当前节余, 2)))
        
    .判断循环尾 ()
    赋值 (临时字符串变量, 相加 (“1”, 临时字符串变量))
    .如果真 (等于 (IP地址数组 [临时整数变量], “0”))
        赋值 (临时字符串变量, “0”)
    .如果真结束
    
    .如果真 (等于 (IP地址数组 [临时整数变量], “1”))
        赋值 (临时字符串变量, “1”)
    .如果真结束
    
     ' 将结果凑齐8位
    .计次循环首 (相减 (8, 取文本长度 (临时字符串变量)), 临时整数变量一)
        赋值 (临时字符串变量, 相加 (“0”, 临时字符串变量))
    .计次循环尾 ()
    
    赋值 (IP地址数组 [临时整数变量], 临时字符串变量)
    赋值 (临时字符串变量, “”)
.计次循环尾 ()

.计次循环首 (4, 临时整数变量)
    赋值 (临时字符串变量, 相加 (临时字符串变量, IP地址数组 [临时整数变量], “.”))
    
.计次循环尾 ()
赋值 (临时字符串变量, 取文本左边 (临时字符串变量, 相减 (取文本长度 (临时字符串变量), 1)))

返回 (临时字符串变量) ' 返回二进制IP文本


.子程序 二进制IP到十进制IP, 文本型, 公开, 
.参数 二进制IP, 文本型, , 

.局部变量 临时整数变量, 整数型, , , 
.局部变量 临时整数变量一, 整数型, , , 
.局部变量 临时字符串变量, 文本型, , , 
.局部变量 IP地址数组, 文本型, , "0", 

 ' 初始化变量
赋值 (临时整数变量, 0)
赋值 (临时整数变量一, 0)
赋值 (临时字符串变量, “”)
清除数组 (IP地址数组)

 ' 检查传递过来的IP地址信息是否正确，如果不正确返回空数据
赋值 (IP地址数组, 分割文本 (二进制IP, “.”, ))
.如果真 (不等于 (取数组成员数 (IP地址数组), 4))
     ' 代表传递过来的参数不正确
    返回 (“”)
.如果真结束

.计次循环首 (4, 临时整数变量)
    赋值 (IP地址数组 [临时整数变量], 到文本 (二进制文本到十进制数 (IP地址数组 [临时整数变量])))
    赋值 (临时字符串变量, 相加 (临时字符串变量, IP地址数组 [临时整数变量], “.”))
.计次循环尾 ()

赋值 (临时字符串变量, 取文本左边 (临时字符串变量, 相减 (取文本长度 (临时字符串变量), 1)))

返回 (临时字符串变量)


.子程序 二进制IP位与, 文本型, 公开, 
.参数 IP地址一, 文本型, , 
.参数 IP地址二, 文本型, , 

.局部变量 临时整数变量, 整数型, , , 
.局部变量 临时字符串数组, 文本型, , "0", 
.局部变量 临时字符串变量, 文本型, , , 
.局部变量 IP一数组, 文本型, , "0", 
.局部变量 IP二数组, 文本型, , "0", 

 ' 初始化变量
赋值 (临时整数变量, 0)
清除数组 (临时字符串数组)
赋值 (临时字符串变量, “”)

 ' 检查传递过来的IP地址格式是否正确
赋值 (IP一数组, 分割文本 (IP地址一, “.”, ))
赋值 (IP二数组, 分割文本 (IP地址二, “.”, ))
.如果真 (或者 (不等于 (取数组成员数 (IP一数组), 4), 不等于 (取数组成员数 (IP二数组), 4)))
     ' 代表传递过来的IP地址格式不正确，返回空文本
    返回 (“”)
.如果真结束

 ' 获取位与后的结果
.计次循环首 (4, 临时整数变量)
    赋值 (临时字符串变量, 相加 (临时字符串变量, 二进制位与 (IP一数组 [临时整数变量], IP二数组 [临时整数变量]), “.”))
.计次循环尾 ()

返回 (取文本左边 (临时字符串变量, 相减 (取文本长度 (临时字符串变量), 1)))


.子程序 计算IP地址的网段, 文本型, 公开, 
.参数 IP地址, 文本型, , 
.参数 子网号, 文本型, , 

.局部变量 IP地址二进制, 文本型, , , 
.局部变量 子网号二进制, 文本型, , , 
.局部变量 网段, 文本型, , , 

 ' 先将IP地址转换为二进制
赋值 (IP地址二进制, 十进制IP到二进制IP (IP地址))
赋值 (子网号二进制, 十进制IP到二进制IP (子网号))

 ' 将二进制IP和二进制子网号进行位与操作，获取二进制网段
赋值 (网段, 二进制IP位与 (IP地址二进制, 子网号二进制))

 ' 将二进制网段转换成十进制网段并返回
返回 (二进制IP到十进制IP (网段))


.子程序 计算IP地址的广播地址, 文本型, 公开, 
.参数 IP地址, 文本型, , 
.参数 子网号, 文本型, , 

.局部变量 二进制网段, 文本型, , , 
.局部变量 二进制子网号, 文本型, , , 
.局部变量 临时整数变量, 整数型, , , 
.局部变量 零的个数, 整数型, , , 
.局部变量 临时字符串变量, 文本型, , , 
.局部变量 临时字符串数组, 文本型, , "0", 

 ' 先获取基本信息
赋值 (二进制网段, 十进制IP到二进制IP (计算IP地址的网段 (IP地址, 子网号)))
赋值 (二进制子网号, 十进制IP到二进制IP (子网号))
赋值 (临时整数变量, 0)
赋值 (零的个数, 0)

 ' 计算零的个数
.计次循环首 (取文本长度 (二进制子网号), 临时整数变量)
    .如果真 (等于 (取文本中间 (二进制子网号, 临时整数变量, 1), “0”))
        赋值 (零的个数, 相加 (零的个数, 1))
    .如果真结束
    
.计次循环尾 ()

 ' 将二进制网段最后 “0的个数”位全1
赋值 (临时字符串数组, 分割文本 (二进制网段, “.”, ))
.如果真 (不等于 (取数组成员数 (临时字符串数组), 4))
     ' 代表执行结果不正确
    返回 (“”)
.如果真结束

赋值 (临时字符串变量, “”)
.计次循环首 (4, 临时整数变量)
    赋值 (临时字符串变量, 相加 (临时字符串变量, 临时字符串数组 [临时整数变量]))
.计次循环尾 ()
 ' 全 1
赋值 (临时字符串变量, 取文本左边 (临时字符串变量, 相减 (取文本长度 (临时字符串变量), 零的个数)))
.计次循环首 (零的个数, 临时整数变量)
    赋值 (临时字符串变量, 相加 (临时字符串变量, “1”))
.计次循环尾 ()

 ' 每8个字符 + 一个点
赋值 (临时字符串变量, 相加 (取文本左边 (临时字符串变量, 8), “.”, 取文本中间 (临时字符串变量, 9, 8), “.”, 取文本中间 (临时字符串变量, 17, 8), “.”, 取文本右边 (临时字符串变量, 8)))

 ' 转换成十进制并返回
返回 (二进制IP到十进制IP (临时字符串变量))



 ' 不属于任何一个程序集、类模块的函数：
