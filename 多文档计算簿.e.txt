 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 655
    高度 = 480
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 1
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 真
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 真
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “变量公式计算薄 V1.0”
    帮助文件名 = “”

窗口 自定变量
    左边 = 50
    顶边 = 50
    宽度 = 269
    高度 = 419
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “系统变量”
    帮助文件名 = “”



.图片 db, " ' 已保存到：D:\易语言学习\Data\多文档计算簿.e\db", , 
.常量 WM_SYSCOMMAND, "274", , 
.常量 WM_MDIDESTROY, "545", , 
.常量 , , , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 5 系统核心支持库
 ' YunMDIWnd {195C84DA-FFA2-4c39-8F49-FBA621EA5A8B} 2 0 云外归鸟的MDI窗口支持库
 ' iext 27bb20fdd3e145e4bee3db39ddd6e64c 1 2 扩展界面支持库一
 ' eGrid 0B4337DA651B4b619ACF61334A7E8B47 1 3 高级表格支持库
 ' EDataStructure 0AFF5F28B2CB42ce906AA27D6E485457 1 2 数据结构支持库




数据类型 符号链表, , 
    .成员 符号类型, 文本型, , , 
    .成员 符号值, 文本型, , , 
    .成员 匹配括号的位置, 整数型, , , 

数据类型 语法二叉树, , 
    .成员 符号类型, 文本型, , , 
    .成员 首地址, 整数型, , , 
    .成员 尾地址, 整数型, , , 
    .成员 父地址, 整数型, , , 

.全局变量 SQL, 整数型, , , 
.全局变量 高级表格, 未知类型0x40001, , , 

.窗口程序集 窗口程序集1, , , 

.程序集变量 历史, 文本型, , , 
.程序集变量 匿名程序集变量_68, 空白型, , , 
.程序集变量 撤销栈, 未知类型0x50003, , , 
.程序集变量 重做栈, 未知类型0x50003, , , 
.程序集变量 原, 字节集, , , 
.程序集变量 匿名程序集变量_66, 空白型, , , 
.程序集变量 MDI子窗口, 未知类型0x20002, , , 
.程序集变量 MDI宽度, 整数型, , , 
.程序集变量 MDI高度, 整数型, , , 
.程序集变量 匿名程序集变量_81, 空白型, , , 
.程序集变量 工程名称, 文本型, , , 
.子程序 __启动窗口_创建完毕, 空白型, , 



.子程序 _窗口层叠_被选择, 空白型, , 
未知支持库函数_1 ()

.子程序 _水平平铺_被选择, 空白型, , 
未知支持库函数_2 ()

.子程序 _垂直平铺_被选择, 空白型, , 
未知支持库函数_3 ()

.子程序 _图标排列_被选择, 空白型, , 
未知支持库函数_4 ()



.子程序 __启动窗口_尺寸被改变, 空白型, , 
赋值 (., 相减 (取用户区高度 (), .可视))
赋值 (., 取用户区宽度 ())

.子程序 _新建_被选择, 空白型, , 
.如果 (输入框 (“请输入工程名称”, “请输入工程名称”, , 工程名称, ))
    .如果真 (文件是否存在 (相加 (取运行目录 (), “\”, 工程名称, “.gs”)))
        .如果 (等于 (信息框 (“文件已存在，是否覆盖？”, 相加 (1, 64), ), 0))
            
        .否则
            信息框 (“请重建。”, 0, )
            返回 ()
        .如果结束
        
    .如果真结束
    写到文件 (相加 (取运行目录 (), “\”, 工程名称, “.gs”), #db)
    赋值 (工程名称, 相加 (取运行目录 (), “\”, 工程名称, “.gs”))
    
    赋值 (MDI子窗口, 工程名称.未知支持库函数_0 ())
    .如果真 (是否已创建 (MDI子窗口))
        .如果真 (MDI子窗口.未知支持库函数_5 (高级表格))
            赋值 (高级表格., 到文本 (MDI子窗口.取窗口句柄 ())) ' 关联到编辑框
            赋值 (高级表格., 真)
            初始化 ()
        .如果真结束
        
    .如果真结束
    
.否则
    信息框 (“创建失败！”, 0, )
.如果结束


.子程序 _打开_被选择, 空白型, , 
赋值 (.类型, 0)
赋值 (.标题, “打开文档”)
赋值 (.初始目录, 取运行目录 ())
.如果真 (等于 (打开 (), 真))
    赋值 (工程名称, .文件名)
     ' 工程名称 ＝ 取文本右边 (工程名称, 取文本长度 (工程名称) － 倒找文本 (工程名称, “\”, , 假))
     ' 工程名称 ＝ 取文本左边 (工程名称, 取文本长度 (工程名称) － 3)
    
    
    赋值 (MDI子窗口, 工程名称.未知支持库函数_0 ())
    .如果真 (是否已创建 (MDI子窗口))
        
        .如果真 (MDI子窗口.未知支持库函数_5 (高级表格))
            赋值 (高级表格., 到文本 (MDI子窗口.取窗口句柄 ())) ' 关联到相控件
            赋值 (高级表格., 真)
            初始化 ()
            
        .如果真结束
        
        
    .如果真结束
    
.如果真结束


.子程序 _MDI子窗口1_尺寸被改变, 空白型, , 
赋值 (MDI子窗口, 取事件组件 ())
赋值 (高级表格, MDI子窗口.取标记组件 (MDI子窗口.取窗口句柄 ())) ' 召唤关联的编辑框
.如果真 (是否已创建 (高级表格))
    MDI子窗口.未知支持库函数_6 (MDI宽度, MDI高度)
    赋值 (高级表格., MDI高度)
    赋值 (高级表格., MDI宽度)
.如果真结束


.子程序 _MDI子窗口1_可否被关闭, 逻辑型, , 
.如果真 (等于 (信息框 (“窗口将要关闭,是否允许?”, #是否钮, ), #否钮))
    返回 (假)
.如果真结束


.子程序 _MDI子窗口1_将被销毁, 空白型, , 
.局部变量 MDI子窗口, 未知类型0x20002, , , 

赋值 (MDI子窗口, 取事件组件 ())
输出调试文本 (“_MDI子窗口1_将被销毁”, MDI子窗口.取窗口句柄 ())

.子程序 _MDI子窗口1_系统命令, 空白型, , 
.参数 编号, 整数型, , 
.参数 参数, 整数型, , 

输出调试文本 (编号)

.子程序 _MDI子窗口1_激活状态被改变, 空白型, , 
.参数 是否激活, 逻辑型, , 


.如果 (等于 (是否激活, 真))
    赋值 (MDI子窗口, 取事件组件 ())
    赋值 (高级表格, MDI子窗口.取标记组件 (MDI子窗口.取窗口句柄 ())) ' 召唤关联的编辑框
    赋值 (工程名称, MDI子窗口.)
    工程名称.打开MDB数据库 ()
.否则
    
.如果结束



.子程序 初始化, 空白型, , 
.局部变量 i, 整数型, , , 

MDI子窗口.发送信息 (#WM_SYSCOMMAND, 61488, 0)
 ' ----------------------------------------------------
高级表格.未知支持库函数_9 (0, 0, 1, “序号”)
高级表格.未知支持库函数_9 (0, 1, 1, “变量”)
高级表格.未知支持库函数_9 (0, 2, 1, “数值”)
高级表格.未知支持库函数_9 (0, 3, 1, “计算公式”)
高级表格.未知支持库函数_9 (0, 4, 1, “计算结果”)
高级表格.未知支持库函数_9 (0, 5, 1, “确认公式”)
高级表格.未知支持库函数_32 (0, 40)
高级表格.未知支持库函数_32 (1, 50)
高级表格.未知支持库函数_32 (2, 50)
高级表格.未知支持库函数_32 (3, 350)
高级表格.未知支持库函数_32 (4, 100)
高级表格.未知支持库函数_32 (5, 150)
高级表格.未知支持库函数_25 (0, 0, 0, ., 2)
高级表格.未知支持库函数_25 (0, 0, ., 2, 2)

高级表格.未知支持库函数_30 (4, 2)
高级表格.未知支持库函数_41 (4, 2)

 ' ------------------------------------------------
高级表格.未知支持库函数_46 (“工程量计算书”, “宋体”, 20, 真, 2)
 ' --------------------------------------------------
工程名称.打开MDB数据库 ()
赋值 (SQL, “select * from gs”.查询 ())
SQL.到首记录 ()
.判断循环首 (等于 (SQL.尾记录后 (), 假))
    赋值 (i, 相加 (i, 1))
    赋值 (高级表格., 相加 (高级表格., 1))
    处理事件 ()
    高级表格.未知支持库函数_9 (i, 0, 1, 到文本 (i))
    高级表格.未知支持库函数_9 (i, 1, 1, 到文本 (SQL.读 (2)))
    高级表格.未知支持库函数_9 (i, 2, 1, 到文本 (SQL.读 (3)))
    高级表格.未知支持库函数_9 (i, 3, 1, 到文本 (SQL.读 (4)))
    高级表格.未知支持库函数_9 (i, 4, 1, 到文本 (SQL.读 (5)))
    SQL.到后一记录 ()
.判断循环尾 ()
SQL.关闭记录集 ()


.子程序 _高级表格1_将被编辑, 空白型, , 
赋值 (历史, 到文本 (高级表格.未知支持库函数_10 (高级表格.未知支持库函数_3 (), 高级表格.未知支持库函数_4 ())))

.如果真 (并且 (大于或等于 (高级表格.未知支持库函数_5 (), 0), 大于或等于 (高级表格.未知支持库函数_6 (), 0)))
    赋值 (原, 到字节集 (高级表格.未知支持库函数_10 (高级表格.未知支持库函数_5 (), 高级表格.未知支持库函数_6 ())))
.如果真结束



.子程序 _高级表格1_结束编辑, 空白型, , 
.局部变量 i, 整数型, , , 
.局部变量 j, 整数型, , , 
.局部变量 查, 整数型, , , 
.局部变量 原始, 文本型, , , 
.局部变量 临时节点, 未知类型0x50001, , , 

.计次循环首 (相减 (高级表格., 1), i)
    高级表格.未知支持库函数_9 (i, 0, 1, 到文本 (i))
.计次循环尾 ()
赋值 (查, “select * from var”.查询 ())
 ' -----------------------------------
.如果真 (等于 (高级表格.未知支持库函数_4 (), 1))
    .计次循环首 (高级表格., i) ' --------------编辑前变量替换
        高级表格.未知支持库函数_9 (相减 (i, 1), 3, 1, 子文本替换 (高级表格.未知支持库函数_10 (相减 (i, 1), 3), 相加 (“<”, 历史, “>”), 相加 (“<”, 高级表格.未知支持库函数_10 (高级表格.未知支持库函数_3 (), 1), “>”), , , 真))
    .计次循环尾 ()
.如果真结束
 ' －－－－－－－－－－－－－－－以下是编辑后变量替换
赋值 (原始, 到文本 (高级表格.未知支持库函数_10 (高级表格.未知支持库函数_3 (), 3)))
.计次循环首 (高级表格., j)
    赋值 (原始, 子文本替换 (原始, 相加 (“<”, 到文本 (高级表格.未知支持库函数_10 (j, 1)), “>”), 到文本 (高级表格.未知支持库函数_10 (j, 2)), , , 真))
.计次循环尾 ()
 ' -------------------------------以下是数据库内变量替换-------------------------------------
查.到首记录 ()
.判断循环首 (等于 (查.尾记录后 (), 假))
    赋值 (原始, 子文本替换 (原始, 相加 (“<”, 查.读 (2), “>”), 到文本 (查.读 (3)), , , 真))
    查.到后一记录 ()
.判断循环尾 ()
 ' ---------------------------------最后计算公式------------------------------
高级表格.未知支持库函数_9 (高级表格.未知支持库函数_3 (), 5, 1, 原始)
输出调试文本 (原始)
四则运算 (原始, 原始)
高级表格.未知支持库函数_9 (高级表格.未知支持库函数_3 (), 4, 1, 原始)
查.关闭记录集 ()


.如果真 (不等于 (到字节集 (高级表格.未知支持库函数_10 (高级表格.未知支持库函数_3 (), 高级表格.未知支持库函数_4 ())), 原))
    临时节点.未知支持库函数_3 (“行”, 高级表格.未知支持库函数_3 ())
    临时节点.未知支持库函数_3 (“列”, 高级表格.未知支持库函数_4 ())
    临时节点.未知支持库函数_3 (“类”, 高级表格.未知支持库函数_61 (高级表格.未知支持库函数_4 ()))
    临时节点.未知支持库函数_3 (“值”, 原)
    撤销栈.未知支持库函数_41 (临时节点)
    重做栈.未知支持库函数_39 ()
    
    赋值 (.禁止, 真)
    6.加入状态 (4)
    赋值 (.禁止, 假)
    5.去除状态 (4)
.如果真结束



.子程序 _保存_被选择, 空白型, , 
.局部变量 i, 整数型, , , 

.如果真 (是否已创建 (MDI子窗口))
    “delete from gs”.执行 ()
    .计次循环首 (相减 (高级表格., 1), i)
        相加 (“insert into gs (bl,sz,gs,jg) values ('”, 到文本 (高级表格.未知支持库函数_10 (i, 1)), “','”, 到文本 (高级表格.未知支持库函数_10 (i, 2)), “','”, 到文本 (高级表格.未知支持库函数_10 (i, 3)), “',”, 到文本 (高级表格.未知支持库函数_10 (i, 4)), “)”).执行 ()
    .计次循环尾 ()
    信息框 (“保存成功！”, 0, )
    
.如果真结束


.子程序 _自定义系统变量_被选择, 空白型, , 
载入 (自定变量, _启动窗口, 假)

.子程序 __启动窗口_位置被改变, 空白型, , 
赋值 (自定变量., 相加 (_启动窗口., _启动窗口.))
赋值 (自定变量., _启动窗口.)


.子程序 _插入一行_被选择, 空白型, , 
高级表格.未知支持库函数_38 (高级表格.未知支持库函数_3 ())

.子程序 _追加一行_被选择, 空白型, , 
高级表格.未知支持库函数_38 ()

.子程序 _删除一行_被选择, 空白型, , 
高级表格.未知支持库函数_36 (高级表格.未知支持库函数_3 ())

.子程序 _高级表格1_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

弹出菜单 ()

.子程序 _打印预览_被选择, 空白型, , 
.如果真 (是否已创建 (MDI子窗口))
    高级表格.未知支持库函数_27 ()
.如果真结束



.子程序 _打印_被选择, 空白型, , 
.如果真 (是否已创建 (MDI子窗口))
    高级表格.未知支持库函数_26 ()
.如果真结束



.子程序 _工具条1_被单击, 空白型, , 
.参数 按钮索引, 整数型, , 

.判断开始 (等于 (按钮索引, 1))
    _新建_被选择 ()
.判断 (等于 (按钮索引, 2))
    _打开_被选择 ()
.判断 (等于 (按钮索引, 3))
    _保存_被选择 ()
.判断 (等于 (按钮索引, 5))
    _撤消_被选择 ()
.判断 (等于 (按钮索引, 6))
    _重复_被选择 ()
.判断 (等于 (按钮索引, 8))
    _打印预览_被选择 ()
.判断 (等于 (按钮索引, 9))
    _打印_被选择 ()
.判断 (等于 (按钮索引, 11))
    _退出_被选择 ()
.默认
    
.判断结束


.子程序 _退出_被选择, 空白型, , 
.如果真 (等于 (信息框 (“确定要退出吗？”, 相加 (1, 64), ), 0))
    结束 ()
.如果真结束



.子程序 _撤消_被选择, 空白型, , 
.局部变量 临时节点, 未知类型0x50001, , , 
.局部变量 类, 空白型, , , 
.局部变量 x, 空白型, , , 
.局部变量 y, 空白型, , , 
.局部变量 值, 字节集, , , 
.局部变量 重做节点, 未知类型0x50001, , , 

.如果真 (撤销栈.未知支持库函数_42 (临时节点))
    .如果真 (并且 (临时节点.未知支持库函数_8 (“类”, 类), 临时节点.未知支持库函数_8 (“行”, x), 临时节点.未知支持库函数_8 (“列”, y)))
        .如果真 (临时节点.未知支持库函数_12 (“值”, 值))
            重做节点.未知支持库函数_3 (“行”, x)
            重做节点.未知支持库函数_3 (“列”, y)
            重做节点.未知支持库函数_3 (“类”, 类)
            重做节点.未知支持库函数_3 (“值”, 到字节集 (高级表格.未知支持库函数_10 (x, y)))
            .判断开始 (等于 (类, 5))
                高级表格.未知支持库函数_9 (x, y, 5, 等于 (值, 到字节集 (真)))
            .判断 (等于 (类, 6))
                高级表格.未知支持库函数_9 (x, y, 6, 值)
                高级表格.未知支持库函数_68 ()
            .默认
                高级表格.未知支持库函数_9 (x, y, 1, 到文本 (值))
            .判断结束
            重做栈.未知支持库函数_41 (重做节点)
            
            赋值 (.禁止, 假)
            6.去除状态 (4)
            
            .如果真 (等于 (撤销栈.未知支持库函数_38 (), 0))
                赋值 (.禁止, 真)
                5.加入状态 (4)
            .如果真结束
            返回 ()
        .如果真结束
        
    .如果真结束
    
.如果真结束
撤销栈.未知支持库函数_39 ()
赋值 (.禁止, 真)
5.加入状态 (4)
信息框 (“撤销操作失败,撤销纪录已经清空!”, 0, )


.子程序 _重复_被选择, 空白型, , 
.局部变量 临时节点, 未知类型0x50001, , , 
.局部变量 类, 空白型, , , 
.局部变量 x, 空白型, , , 
.局部变量 y, 空白型, , , 
.局部变量 值, 字节集, , , 
.局部变量 重做节点, 未知类型0x50001, , , 

.如果真 (重做栈.未知支持库函数_42 (临时节点))
    .如果真 (并且 (临时节点.未知支持库函数_8 (“类”, 类), 临时节点.未知支持库函数_8 (“行”, x), 临时节点.未知支持库函数_8 (“列”, y)))
        .如果真 (临时节点.未知支持库函数_12 (“值”, 值))
            重做节点.未知支持库函数_3 (“行”, x)
            重做节点.未知支持库函数_3 (“列”, y)
            重做节点.未知支持库函数_3 (“类”, 类)
            重做节点.未知支持库函数_3 (“值”, 到字节集 (高级表格.未知支持库函数_10 (x, y)))
            .判断开始 (等于 (类, 5))
                高级表格.未知支持库函数_9 (x, y, 5, 等于 (值, 到字节集 (真)))
            .判断 (等于 (类, 6))
                高级表格.未知支持库函数_9 (x, y, 6, 值)
                高级表格.未知支持库函数_68 ()
            .默认
                高级表格.未知支持库函数_9 (x, y, 1, 到文本 (值))
            .判断结束
            撤销栈.未知支持库函数_41 (重做节点)
            赋值 (.禁止, 假)
            5.去除状态 (4)
            .如果真 (等于 (重做栈.未知支持库函数_38 (), 0))
                赋值 (.禁止, 真)
                6.加入状态 (4)
            .如果真结束
            返回 ()
        .如果真结束
        
    .如果真结束
    
.如果真结束
重做栈.未知支持库函数_39 ()
赋值 (.禁止, 真)
6.加入状态 (4)
信息框 (“重做操作失败,重做纪录已经清空!”, 0, )


.子程序 _关于_被选择, 空白型, , 
信息框 (“简单的公式变量计算簿！大家可以用来记个账什么的！”, 0, )

.子程序 _关闭_被选择, 空白型, , 
 ' MDI子窗口 ＝ 取事件组件 ()
 ' .如果真 (是否已创建 (MDI子窗口))
     ' MDI子窗口.销毁 ()
.如果真结束



.程序集 模块, , , 

.子程序 四则运算, 逻辑型, 公开, 
.参数 表达式, 文本型, , 
.参数 计算结果, 文本型, 参考, 

.局部变量 i, 整数型, , , 
.局部变量 j, 整数型, , , 
.局部变量 表达式长度, 整数型, , , 
.局部变量 表达式字符, 文本型, , , 
.局部变量 操作数文本, 文本型, , , 
.局部变量 小数点个数, 整数型, , , 
.局部变量 符号表, 符号链表, , "0", 
.局部变量 符号表结点, 符号链表, , , 
.局部变量 左括号位置栈, 整数型, , "0", 
.局部变量 计算表, 语法二叉树, , "0", 
.局部变量 计算表结点, 语法二叉树, , , 
.局部变量 分割点, 整数型, , , 
.局部变量 表达式首地址, 整数型, , , 
.局部变量 表达式尾地址, 整数型, , , 
.局部变量 记忆, 整数型, , , 
.局部变量 暂存数值容器, 小数型, , , 
.局部变量 运算符, 文本型, , , 

第一部分：表达式的预处理
.如果真 (等于 (表达式, “”))
     ' 计算结果 ＝ “变量代码有误，请注意大小写”
    返回 (假)
.如果真结束

赋值 (表达式, 删全部空 (表达式))
.如果真 (小于 (取文本长度 (表达式), 3))
     ' 计算结果 ＝ “无效的表达式”
    返回 (假)
.如果真结束

赋值 (表达式, 子文本替换 (表达式, “)(”, “)*(”, , , 真))
赋值 (表达式长度, 取文本长度 (表达式))

"第二部分： 由输入的表达式生成四则符号表，并完成表达式检测和括号匹配检测
.计次循环首 (表达式长度, i)
    赋值 (表达式字符, 取文本中间 (表达式, i, 1))
    .判断开始 (或者 (等于 (表达式字符, “.”), 并且 (大于或等于 (取代码 (表达式字符, ), 48), 小于或等于 (取代码 (表达式字符, ), 57))))
        赋值 (操作数文本, 相加 (操作数文本, 表达式字符))
        .如果真 (大于 (i, 1))
            .如果真 (等于 (取文本长度 (操作数文本), 1))
                .如果真 (等于 (符号表 [取数组成员数 (符号表)].符号类型, “右括号”))
                    赋值 (计算结果, “某操作数左边出现右括号，无法判断之间的运算符类型”)
                    返回 (假)
                .如果真结束
                
            .如果真结束
            
        .如果真结束
        
        .如果真 (等于 (i, 表达式长度)) ' 输入的表达式以“操作数”结束的情况
            .计次循环首 (取文本长度 (操作数文本), j)
                .如果真 (等于 (取文本中间 (操作数文本, j, 1), “.”))
                    赋值 (小数点个数, 相加 (小数点个数, 1))
                    .如果真 (大于 (小数点个数, 1))
                        赋值 (计算结果, “发现某操作数中小数点太多”)
                        返回 (假)
                    .如果真结束
                    
                .如果真结束
                
            .计次循环尾 ()
            
            赋值 (符号表结点.符号类型, “操作数”)
            赋值 (符号表结点.符号值, 操作数文本)
            加入成员 (符号表, 符号表结点)
            赋值 (操作数文本, “”)
        .如果真结束
        
    .判断 (或者 (等于 (表达式字符, “+”), 等于 (表达式字符, “-”), 等于 (表达式字符, “*”), 等于 (表达式字符, “/”)))
        检查位置错误：
        .判断开始 (等于 (i, 1))
            赋值 (计算结果, “运算符出现在表达式首位置”)
            返回 (假)
        .判断 (等于 (i, 表达式长度))
            赋值 (计算结果, “运算符出现在表达式尾位置”)
            返回 (假)
        .默认
            
        .判断结束
        
        
        .如果 (等于 (操作数文本, “”)) ' 运算符的左边没有操作数字符时，必须检测其与左边结合性
            左结合性错误规则：
            .如果真 (大于 (i, 1))
                .判断开始 (等于 (符号表 [取数组成员数 (符号表)].符号类型, “左括号”))
                    赋值 (计算结果, “运算符左边出现左括号”)
                    返回 (假)
                .判断 (等于 (符号表 [取数组成员数 (符号表)].符号类型, “运算符”))
                    赋值 (计算结果, “运算符左边出现运算符”)
                    返回 (假)
                .默认
                    
                .判断结束
                
            .如果真结束
            
        .否则
            操作数文本不尾空时，把此操作数加入到符号表尾部
            .计次循环首 (取文本长度 (操作数文本), j) ' 检测操作数
                .如果真 (等于 (取文本中间 (操作数文本, j, 1), “.”))
                    赋值 (小数点个数, 相加 (小数点个数, 1))
                    .如果真 (大于 (小数点个数, 1))
                        赋值 (计算结果, “发现某操作数中小数点太多”)
                        返回 (假)
                    .如果真结束
                    
                .如果真结束
                
            .计次循环尾 ()
            赋值 (符号表结点.符号类型, “操作数”)
            赋值 (符号表结点.符号值, 操作数文本)
            加入成员 (符号表, 符号表结点)
            赋值 (操作数文本, “”)
            
        .如果结束
        
        将此运算符加入到符号表尾部
        赋值 (符号表结点.符号类型, “运算符”)
        赋值 (符号表结点.符号值, 表达式字符)
        加入成员 (符号表, 符号表结点)
        
    .判断 (等于 (表达式字符, “(”))
        .如果 (等于 (操作数文本, “”))
            左括号错误检测规则：
            .判断开始 (等于 (i, 表达式长度))
                赋值 (计算结果, “左括号出现在表达式尾位置”)
                返回 (假)
            .默认
                
            .判断结束
            
        .否则
            操作数文本不为空时，把此操作数文本结点加入到符号表尾部，再加入一个乘号家电，然后再把此左括号结点加入到符号表尾部
            .计次循环首 (取文本长度 (操作数文本), j) ' 检测操作数文本
                .如果真 (等于 (取文本中间 (操作数文本, j, 1), “.”))
                    赋值 (小数点个数, 相加 (小数点个数, 1))
                    .如果真 (大于 (小数点个数, 1))
                        赋值 (计算结果, “06发现某操作数中小数点太多”)
                        返回 (假)
                    .如果真结束
                    
                .如果真结束
                
            .计次循环尾 ()
            赋值 (符号表结点.符号类型, “操作数”)
            赋值 (符号表结点.符号值, 操作数文本)
            加入成员 (符号表, 符号表结点)
            赋值 (操作数文本, “”)
            
            赋值 (符号表结点.符号类型, “运算符”)
            赋值 (符号表结点.符号值, “*”)
            加入成员 (符号表, 符号表结点)
            
        .如果结束
        
        把此结点加入到符号表尾部
        赋值 (符号表结点.符号类型, “左括号”)
        赋值 (符号表结点.符号值, “(”)
        加入成员 (符号表, 符号表结点)
        加入成员 (左括号位置栈, 取数组成员数 (符号表)) ' 当遇到右括号时，栈顶的值就是与此右括号匹配的左括号再符号表中的位置
        
    .判断 (等于 (表达式字符, “)”))
        右括号的错误检测规则：
        
        2.左边出现了运算符
        3.左边出现了左括号形成了空括号
        .如果 (等于 (操作数文本, “”))
            .判断开始 (等于 (i, 1))
                赋值 (计算结果, “右括号出现在表达式首位置”)
                返回 (假)
            .判断 (大于 (i, 1)) ' 检测左结合性
                .如果真 (等于 (符号表 [取数组成员数 (符号表)].符号类型, “运算符”))
                    赋值 (计算结果, “右括号左边出现了运算符”)
                    返回 (假)
                .如果真结束
                
                .如果真 (等于 (符号表 [取数组成员数 (符号表)].符号类型, “左括号”))
                    赋值 (计算结果, “右括号左边出现左括号，形成空括号”)
                    返回 (假)
                .如果真结束
                
            .默认
                
            .判断结束
            
        .否则
            
            .计次循环首 (取文本长度 (操作数文本), j)
                .如果真 (等于 (取文本中间 (操作数文本, j, 1), “.”))
                    赋值 (小数点个数, 相加 (小数点个数, 1))
                    .如果真 (大于 (小数点个数, 1))
                        赋值 (计算结果, “发现某操作数中小数点太多”)
                        返回 (假)
                    .如果真结束
                    
                .如果真结束
                
            .计次循环尾 ()
            赋值 (符号表结点.符号类型, “操作数”)
            赋值 (符号表结点.符号值, 操作数文本)
            加入成员 (符号表, 符号表结点)
            赋值 (操作数文本, “”)
            
        .如果结束
        
        赋值 (符号表结点.符号类型, “右括号”)
        赋值 (符号表结点.符号值, “)”)
        加入成员 (符号表, 符号表结点)
        .如果 (等于 (取数组成员数 (左括号位置栈), 0))
            赋值 (计算结果, “表达式文本中多出右括号！”)
            返回 (假)
        .否则
            填写括号匹配的位置数据
            赋值 (符号表 [取数组成员数 (符号表)].匹配括号的位置, 左括号位置栈 [取数组成员数 (左括号位置栈)]) ' 括号表[右括号的位置]=左括号的位置
            赋值 (符号表 [左括号位置栈] [取数组成员数 (左括号位置栈)], 匹配括号的位置, 取数组成员数 (符号表)) ' 括号表[左括号的位置]=右括号的位置
            删除成员 (左括号位置栈, 取数组成员数 (左括号位置栈), 1) ' 在括号表中记录完括号匹配情况后，删除成员[左括号中最后一个成员]，用以检测括号的匹配，相当于“出栈”
            
        .如果结束
        
        遇到右括号时，左括号中最后一个成员“左括号 [取数组成员数 (左括号)]”就是与他匹配的左括号在检测表中的位置！
    .默认
        
        赋值 (计算结果, “变量代码出现错误，请注意大小写！”)
        返回 (假)
    .判断结束
    
.计次循环尾 ()

.如果真 (不等于 (取数组成员数 (左括号位置栈), 0)) ' "栈“不空
    赋值 (计算结果, “多出左括号”)
    返回 (假)
.如果真结束

第三部分：以下生成语法计算树
生成树顶结点
赋值 (计算表结点.符号类型, “表达式”) ' 结点的类型：#表达式、#操作数、#括号
赋值 (计算表结点.首地址, 1) ' 记录表达式第一个字符在四则表达式中的位置
赋值 (计算表结点.尾地址, 取数组成员数 (符号表)) ' 记录表达式最后一个字符在四则表达式中的位置
赋值 (计算表结点.父地址, 0) ' 此结点的父亲结点位置
加入成员 (计算表, 计算表结点)
赋值 (i, 1)
生成计算此表达式的语法二叉树
.判断循环首 (小于或等于 (i, 取数组成员数 (计算表)))
    .如果真 (不等于 (计算表 [i], 符号类型, “表达式”))
        赋值 (i, 相加 (i, 1))
        出队列
        到循环尾 ()
    .如果真结束
    
    赋值 (表达式首地址, 计算表 [i], 首地址)
    赋值 (表达式尾地址, 计算表 [i], 尾地址)
    去掉表达式最外层括号 
    .判断循环首 (并且 (等于 (符号表 [表达式首地址], 符号类型, “左括号”), 等于 (符号表 [表达式尾地址], 符号类型, “右括号”))) ' 类似（（2+3））
        .如果 (并且 (等于 (到数值 (符号表 [表达式首地址], 匹配括号的位置), 表达式尾地址), 等于 (到数值 (符号表 [表达式尾地址], 匹配括号的位置), 表达式首地址))) ' 两个括号匹配
            赋值 (表达式首地址, 相加 (表达式首地址, 1))
            赋值 (表达式尾地址, 相减 (表达式尾地址, 1))
        .否则
            跳出循环 ()
        .如果结束
        
    .判断循环尾 ()
    赋值 (分割点, 表达式尾地址)
    “表达式”是类型为#表达式的结点数据，内容由首地址和尾地址决定
     ' “分割点”是分割“表达式”的位置，他一定指向运算符。求解方法：1.从后向前扫描2.“+、-”优先于“*、/”
    表达式中有“+”、“-”符，靠最左边的是此表达式的分割点，此运算符留在此结点中，其左边的加入左孩子结点中，右边的加入右孩子结点中。
    表达式中只有“*”、“/”时，分割方法同上。
    表达式中同时有两种优先级的运算符时，分割时“+”、“-”优先与“*”“/”。
    
    .判断循环首 (大于或等于 (分割点, 表达式首地址))
        .判断开始 (等于 (符号表 [分割点], 符号类型, “操作数”))
            赋值 (分割点, 相减 (分割点, 1))
        .判断 (等于 (符号表 [分割点], 符号类型, “运算符”))
            .如果真 (或者 (等于 (符号表 [分割点], 符号值, “+”), 等于 (符号表 [分割点], 符号值, “-”)))
                赋值 (记忆, 0)
                跳出循环 ()
                
            .如果真结束
            
            .如果真 (或者 (等于 (符号表 [分割点], 符号值, “*”), 等于 (符号表 [分割点], 符号值, “/”)))
                .如果真 (等于 (记忆, 0))
                    赋值 (记忆, 分割点)
                .如果真结束
                
                赋值 (分割点, 相减 (分割点, 1))
                
            .如果真结束
            
        .判断 (等于 (符号表 [分割点], 符号类型, “右括号”))
            赋值 (分割点, 相减 (到数值 (符号表 [分割点], 匹配括号的位置), 1)) ' 跳过括号
        .默认
            
        .判断结束
        
    .判断循环尾 ()
    
    .如果真 (不等于 (记忆, 0)) ' 表达式中有“*、/”但没有“+、-”
        赋值 (分割点, 记忆)
        赋值 (记忆, 0)
    .如果真结束
    
    以下是入队列操作。分割点对应的符号表中的结点作为父亲结点，分割点左边表达式的是左孩子，右边的是右孩子。
    加入左孩子结点信息
    .如果 (大于 (相减 (分割点, 表达式首地址), 1))
        赋值 (计算表结点.符号类型, “表达式”)
    .否则
        赋值 (计算表结点.符号类型, “操作数”)
    .如果结束
    
    赋值 (计算表结点.首地址, 表达式首地址)
    赋值 (计算表结点.尾地址, 相减 (分割点, 1))
    赋值 (计算表结点.父地址, i)
    加入成员 (计算表, 计算表结点)
    加入右孩子结点信息
    .如果 (大于 (相减 (表达式尾地址, 分割点), 1))
        赋值 (计算表结点.符号类型, “表达式”)
    .否则
        赋值 (计算表结点.符号类型, “操作数”)
    .如果结束
    
    赋值 (计算表结点.首地址, 相加 (分割点, 1))
    赋值 (计算表结点.尾地址, 表达式尾地址)
    赋值 (计算表结点.父地址, i)
    加入成员 (计算表, 计算表结点)
    修改父亲结点信息
    赋值 (计算表 [i], 符号类型, “运算符”)
    连续赋值 (分割点, 计算表 [i], 首地址, 计算表 [i], 尾地址)
    赋值 (i, 相加 (i, 1))
.判断循环尾 ()

第四部分计算四则表达式的值
.变量循环首 (取数组成员数 (计算表), 2, -2, i)
    赋值 (运算符, 符号表 [计算表] [计算表] [i], 父地址, 首地址, 符号值)
    .判断开始 (等于 (运算符, “+”))
        赋值 (暂存数值容器, 相加 (到数值 (符号表 [计算表] [相减 (i, 1)].首地址, 符号值), 到数值 (符号表 [计算表] [i], 首地址, 符号值)))
    .判断 (等于 (运算符, “-”))
        赋值 (暂存数值容器, 相减 (到数值 (符号表 [计算表] [相减 (i, 1)].首地址, 符号值), 到数值 (符号表 [计算表] [i], 首地址, 符号值)))
    .判断 (等于 (运算符, “*”))
        赋值 (暂存数值容器, 相乘 (到数值 (符号表 [计算表] [相减 (i, 1)].首地址, 符号值), 到数值 (符号表 [计算表] [i], 首地址, 符号值)))
    .判断 (等于 (运算符, “/”))
        .如果真 (等于 (到数值 (符号表 [计算表] [i], 首地址, 符号值), 0))
            赋值 (计算结果, “运算过程中出现了除数为0的错误”)
            返回 (假)
        .如果真结束
        赋值 (暂存数值容器, 相除 (到数值 (符号表 [计算表] [相减 (i, 1)].首地址, 符号值), 到数值 (符号表 [计算表] [i], 首地址, 符号值)))
    .默认
        
    .判断结束
    赋值 (符号表 [计算表] [i], 父地址, 符号类型, “操作数”)
    赋值 (符号表 [计算表] [计算表] [i], 父地址, 首地址, 符号值, 到文本 (暂存数值容器))
.变量循环尾 ()
赋值 (计算结果, 到文本 (符号表 [计算表] [1].首地址, 符号值)) ' 数值表 [第一个结点的地址]
返回 (真)
初稿完成于03年7、8月份 03.12.28夜优化代码，并压到一个子程序中。
04年1月份第二次优化。
04.08.28.11:15，完成新版本
古易

.窗口程序集 窗口程序集2, , , 

.子程序 _追加_被选择, 空白型, , 
.局部变量 i, 整数型, , , 

.未知支持库函数_38 ()
.计次循环首 (., i)
    i.未知支持库函数_9 (0, 1, 到文本 (i))
.计次循环尾 ()


.子程序 _删除_被选择, 空白型, , 
未知支持库函数_3 ().未知支持库函数_36 ()

.子程序 _自定变量_创建完毕, 空白型, , 
.局部变量 i, 整数型, , , 

0.未知支持库函数_9 (0, 1, “id”)
0.未知支持库函数_9 (1, 1, “变量名称”)
0.未知支持库函数_9 (2, 1, “变量所代表数值”)
0.未知支持库函数_32 (30)
1.未知支持库函数_32 (80)
2.未知支持库函数_32 (100)
0.未知支持库函数_25 (0, ., ., 2)

赋值 (SQL, _启动窗口.查询 (., “select * from var”))
_启动窗口.到首记录 (., SQL)
.判断循环首 (等于 (_启动窗口.尾记录后 (., SQL), 假))
    赋值 (i, 相加 (i, 1))
    赋值 (., 相加 (., 1))
    i.未知支持库函数_9 (0, 1, 到文本 (i))
    i.未知支持库函数_9 (1, 1, _启动窗口.读 (., SQL, 2))
    i.未知支持库函数_9 (2, 1, _启动窗口.读 (., SQL, 3))
    _启动窗口.到后一记录 (., SQL)
    .如果真 (等于 (_启动窗口.尾记录后 (., SQL), 真))
        跳出循环 ()
    .如果真结束
    
.判断循环尾 ()
相加 (i, 1).未知支持库函数_9 (0, 1, 到文本 (相加 (i, 1)))
_启动窗口.关闭记录集 (., SQL)


赋值 (., 相加 (_启动窗口., _启动窗口.))
赋值 (., _启动窗口.)


.子程序 _变量表格_结束编辑, 空白型, , 
.局部变量 i, 整数型, , , 

_启动窗口.执行 (., “delete from var”, )
.计次循环首 (相减 (., 1), i)
    .如果真 (不等于 (i.未知支持库函数_10 (0), “”))
        _启动窗口.执行 (., 相加 (“insert into var (name,word) values ('”, 到文本 (i.未知支持库函数_10 (1)), “','”, 到文本 (i.未知支持库函数_10 (2)), “')”), )
    .如果真结束
    
.计次循环尾 ()


.子程序 _变量表格_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

弹出菜单 ()


 ' 不属于任何一个程序集、类模块的函数：
