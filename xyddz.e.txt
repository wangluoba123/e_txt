 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 798
    高度 = 592
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 0
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 假
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 已保存到：D:\易语言学习\Data\xyddz.e\_启动窗口_底图
    图标 =  ' 已保存到：D:\易语言学习\Data\xyddz.e\_启动窗口_图标.ico
    背景音乐 =  ' 空
    标题 = “心雨斗地主”
    帮助文件名 = “”

窗口 设置窗口
    左边 = 50
    顶边 = 50
    宽度 = 380
    高度 = 385
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “设置”
    帮助文件名 = “”

窗口 关于窗口
    左边 = 50
    顶边 = 50
    宽度 = 399
    高度 = 269
    鼠标指针 = { 0,127,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 0
    底图方式 = 1
    底色 = 10637568 '  0xA25100
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 假
    随意移动 = 假
    外形 = 0
    总在最前 = 真
    保持标题栏激活 = 真
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “”
    帮助文件名 = “”



.声音 报警男声音, " ' 已保存到：D:\易语言学习\Data\xyddz.e\报警男声音", , 
.声音 不叫女声音, " ' 已保存到：D:\易语言学习\Data\xyddz.e\不叫女声音", , 
.声音 出牌声音, " ' 已保存到：D:\易语言学习\Data\xyddz.e\出牌声音", , 
.声音 错误惊告声音, " ' 已保存到：D:\易语言学习\Data\xyddz.e\错误惊告声音", , 
.声音 挡你才路男声音, " ' 已保存到：D:\易语言学习\Data\xyddz.e\挡你才路男声音", , 
.声音 二分女声音, " ' 已保存到：D:\易语言学习\Data\xyddz.e\二分女声音", , 
.声音 过男声音, " ' 已保存到：D:\易语言学习\Data\xyddz.e\过男声音", , 
.声音 开始声音, " ' 已保存到：D:\易语言学习\Data\xyddz.e\开始声音", , 
.声音 你败啦男声音, " ' 已保存到：D:\易语言学习\Data\xyddz.e\你败啦男声音", , 
.声音 你赢了男声音, " ' 已保存到：D:\易语言学习\Data\xyddz.e\你赢了男声音", , 
.声音 鸟叫声音, " ' 已保存到：D:\易语言学习\Data\xyddz.e\鸟叫声音", , 
.声音 三分女声音, " ' 已保存到：D:\易语言学习\Data\xyddz.e\三分女声音", , 
.声音 消息声音, " ' 已保存到：D:\易语言学习\Data\xyddz.e\消息声音", , 
.声音 一分女声音, " ' 已保存到：D:\易语言学习\Data\xyddz.e\一分女声音", , 
.声音 赢声音, " ' 已保存到：D:\易语言学习\Data\xyddz.e\赢声音", , 
.声音 炸声音, " ' 已保存到：D:\易语言学习\Data\xyddz.e\炸声音", , 
.常量 软件名称, "“心雨斗地主”", , 
.图片 p1, " ' 已保存到：D:\易语言学习\Data\xyddz.e\p1", , 
.图片 p2, " ' 已保存到：D:\易语言学习\Data\xyddz.e\p2", , 
.图片 p3, " ' 已保存到：D:\易语言学习\Data\xyddz.e\p3", , 
.图片 p4, " ' 已保存到：D:\易语言学习\Data\xyddz.e\p4", , 
.图片 p5, " ' 已保存到：D:\易语言学习\Data\xyddz.e\p5", , 
.图片 p6, " ' 已保存到：D:\易语言学习\Data\xyddz.e\p6", , 
.图片 p7, " ' 已保存到：D:\易语言学习\Data\xyddz.e\p7", , 
.图片 p8, " ' 已保存到：D:\易语言学习\Data\xyddz.e\p8", , 
.图片 p9, " ' 已保存到：D:\易语言学习\Data\xyddz.e\p9", , 
.图片 p10, " ' 已保存到：D:\易语言学习\Data\xyddz.e\p10", , 
.图片 p11, " ' 已保存到：D:\易语言学习\Data\xyddz.e\p11", , 
.图片 p12, " ' 已保存到：D:\易语言学习\Data\xyddz.e\p12", , 
.图片 p13, " ' 已保存到：D:\易语言学习\Data\xyddz.e\p13", , 
.图片 h1, " ' 已保存到：D:\易语言学习\Data\xyddz.e\h1", , 
.图片 h2, " ' 已保存到：D:\易语言学习\Data\xyddz.e\h2", , 
.图片 h3, " ' 已保存到：D:\易语言学习\Data\xyddz.e\h3", , 
.图片 h4, " ' 已保存到：D:\易语言学习\Data\xyddz.e\h4", , 
.图片 h5, " ' 已保存到：D:\易语言学习\Data\xyddz.e\h5", , 
.图片 h6, " ' 已保存到：D:\易语言学习\Data\xyddz.e\h6", , 
.图片 h7, " ' 已保存到：D:\易语言学习\Data\xyddz.e\h7", , 
.图片 h8, " ' 已保存到：D:\易语言学习\Data\xyddz.e\h8", , 
.图片 h9, " ' 已保存到：D:\易语言学习\Data\xyddz.e\h9", , 
.图片 h10, " ' 已保存到：D:\易语言学习\Data\xyddz.e\h10", , 
.图片 h11, " ' 已保存到：D:\易语言学习\Data\xyddz.e\h11", , 
.图片 h12, " ' 已保存到：D:\易语言学习\Data\xyddz.e\h12", , 
.图片 h13, " ' 已保存到：D:\易语言学习\Data\xyddz.e\h13", , 
.图片 m1, " ' 已保存到：D:\易语言学习\Data\xyddz.e\m1", , 
.图片 m2, " ' 已保存到：D:\易语言学习\Data\xyddz.e\m2", , 
.图片 m3, " ' 已保存到：D:\易语言学习\Data\xyddz.e\m3", , 
.图片 m4, " ' 已保存到：D:\易语言学习\Data\xyddz.e\m4", , 
.图片 m5, " ' 已保存到：D:\易语言学习\Data\xyddz.e\m5", , 
.图片 m6, " ' 已保存到：D:\易语言学习\Data\xyddz.e\m6", , 
.图片 m7, " ' 已保存到：D:\易语言学习\Data\xyddz.e\m7", , 
.图片 m8, " ' 已保存到：D:\易语言学习\Data\xyddz.e\m8", , 
.图片 m9, " ' 已保存到：D:\易语言学习\Data\xyddz.e\m9", , 
.图片 m10, " ' 已保存到：D:\易语言学习\Data\xyddz.e\m10", , 
.图片 m11, " ' 已保存到：D:\易语言学习\Data\xyddz.e\m11", , 
.图片 m12, " ' 已保存到：D:\易语言学习\Data\xyddz.e\m12", , 
.图片 m13, " ' 已保存到：D:\易语言学习\Data\xyddz.e\m13", , 
.图片 f1, " ' 已保存到：D:\易语言学习\Data\xyddz.e\f1", , 
.图片 f2, " ' 已保存到：D:\易语言学习\Data\xyddz.e\f2", , 
.图片 f3, " ' 已保存到：D:\易语言学习\Data\xyddz.e\f3", , 
.图片 f4, " ' 已保存到：D:\易语言学习\Data\xyddz.e\f4", , 
.图片 f5, " ' 已保存到：D:\易语言学习\Data\xyddz.e\f5", , 
.图片 f6, " ' 已保存到：D:\易语言学习\Data\xyddz.e\f6", , 
.图片 f7, " ' 已保存到：D:\易语言学习\Data\xyddz.e\f7", , 
.图片 f8, " ' 已保存到：D:\易语言学习\Data\xyddz.e\f8", , 
.图片 f9, " ' 已保存到：D:\易语言学习\Data\xyddz.e\f9", , 
.图片 f10, " ' 已保存到：D:\易语言学习\Data\xyddz.e\f10", , 
.图片 f11, " ' 已保存到：D:\易语言学习\Data\xyddz.e\f11", , 
.图片 f12, " ' 已保存到：D:\易语言学习\Data\xyddz.e\f12", , 
.图片 f13, " ' 已保存到：D:\易语言学习\Data\xyddz.e\f13", , 
.图片 w1, " ' 已保存到：D:\易语言学习\Data\xyddz.e\w1", , 
.图片 w2, " ' 已保存到：D:\易语言学习\Data\xyddz.e\w2", , 
.图片 托盘图标, " ' 已保存到：D:\易语言学习\Data\xyddz.e\托盘图标", , 
.图片 bm, " ' 已保存到：D:\易语言学习\Data\xyddz.e\bm", , 
.图片 图片1, " ' 已保存到：D:\易语言学习\Data\xyddz.e\图片1", , 
.图片 图片2, " ' 已保存到：D:\易语言学习\Data\xyddz.e\图片2", , 
.图片 图片3, " ' 已保存到：D:\易语言学习\Data\xyddz.e\图片3", , 
.图片 图片4, " ' 已保存到：D:\易语言学习\Data\xyddz.e\图片4", , 
.图片 赢图片, " ' 已保存到：D:\易语言学习\Data\xyddz.e\赢图片", , 
.图片 输图片, " ' 已保存到：D:\易语言学习\Data\xyddz.e\输图片", , 
.图片 图片5, " ' 已保存到：D:\易语言学习\Data\xyddz.e\图片5", , 
.图片 图片6, " ' 已保存到：D:\易语言学习\Data\xyddz.e\图片6", , 
.图片 图片7, " ' 已保存到：D:\易语言学习\Data\xyddz.e\图片7", , 
.图片 图片8, "", , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 4 系统核心支持库
 ' xplib 7F54B9CE8887428dBA9CEEB94CEF4C72 1 6 XP风格界面库
 ' iext 27bb20fdd3e145e4bee3db39ddd6e64c 1 2 扩展界面支持库一
 ' iext5 {E5000198-4471-40e2-92BC-D0BA075BDBB2} 1 5 扩展界面支持库五
 ' iext3 {B6F7542F-B8FE-46a8-9605-98856A687097} 2 6 扩展界面支持库三
 ' shell 52F260023059454187AF826A3C07AF2A 1 0 操作系统界面功能支持库
 ' ExtMenu 9909FBB013704cfa8FE7E739DB7172DE 1 6 超级菜单支持库




.全局变量 底牌的牌, 图片框, , "3", 
.全局变量 出牌的牌, 图片框, , "54", 
.全局变量 中家的牌, 图片框, , "20", 
.全局变量 上家的牌, 图片框, , "20", 
.全局变量 下家的牌, 图片框, , "20", 
.全局变量 中家牌点, 整数型, , "0", 
.全局变量 下家牌点, 整数型, , "0", 
.全局变量 上家牌点, 整数型, , "0", 
.全局变量 底牌牌点, 整数型, , "0", 
.全局变量 出牌牌点, 整数型, , "0", 
.全局变量 牌号排列, 整数型, , , 0为不排列，1从小到大，2从大到小
.全局变量 允许出牌, 整数型, , , 
.全局变量 新数组, 整数型, , "0", 判断数字出现的次数
.全局变量 已选择牌子, 整数型, , "0", 
.全局变量 选择牌, 整数型, , "0", 
.全局变量 电脑出牌, 整数型, , "0", 
.全局变量 牌型, 整数型, , , 
.全局变量 四张炸弹比点, 整数型, , , 
.全局变量 中家四张炸弹, 整数型, , , 
.全局变量 上家四张炸弹, 整数型, , , 
.全局变量 下家四张炸弹, 整数型, , , 
.全局变量 新牌型, 整数型, , , 
.全局变量 中家牌型, 整数型, , , 
.全局变量 上家牌型, 整数型, , , 
.全局变量 下家牌型, 整数型, , , 
.全局变量 扑克比点, 整数型, , , 
.全局变量 中家扑克点, 整数型, , , 
.全局变量 上家扑克点, 整数型, , , 
.全局变量 出牌组, 整数型, , "0", 
.全局变量 叫牌一分, 整数型, , , 
.全局变量 叫牌二分, 整数型, , , 
.全局变量 三次不叫, 整数型, , , 
.全局变量 不出次数, 整数型, , , 
.全局变量 强制位置, 整数型, , , 
.全局变量 下家扑克点, 整数型, , , 
.全局变量 中家总成绩, 整数型, , , 
.全局变量 下家总成绩, 整数型, , , 
.全局变量 上家总成绩, 整数型, , , 
.全局变量 现行文件名, 文本型, , , 
.全局变量 地主, 整数型, , , 
.全局变量 中家剩牌, 整数型, , , 
.全局变量 上家剩牌, 整数型, , , 
.全局变量 下家剩牌, 整数型, , , 
.全局变量 地主赢, 整数型, , , 
.全局变量 地主得分, 整数型, , , 
.全局变量 玩家得分, 整数型, , , 
.全局变量 底分, 整数型, , , 
.全局变量 倍数, 整数型, , , 
.全局变量 时间, 整数型, , , 
.全局变量 扑克点数, 整数型, , "0", 
.全局变量 图片容器, 图片框, , , 
.全局变量 横坐标, 整数型, , , 
.全局变量 纵坐标, 整数型, , , 
.全局变量 玩家序号, 整数型, , , 
.全局变量 中家通关, 整数型, , , 
.全局变量 上家通关, 整数型, , , 
.全局变量 下家通关, 整数型, , , 
.全局变量 匿名全局变量_3593, 空白型, , , 
.全局变量 中家等级, 整数型, , , 
.全局变量 上家等级, 整数型, , , 
.全局变量 下家等级, 整数型, , , 
.全局变量 匿名全局变量_4145, 空白型, , , 
.全局变量 匿名全局变量_4146, 空白型, , , 
.全局变量 匿名全局变量_4147, 空白型, , , 

.窗口程序集 心雨斗地主程序集, , , 

.子程序 __启动窗口_创建完毕, 空白型, , 
未知支持库函数_0 (2)
置托盘图标 (#托盘图标, #软件名称)
赋值 (_启动窗口., #软件名称)
赋值 (.可视, 假)
赋值 (.时钟周期, 10)
赋值 (.时钟周期, 0)

连续赋值 (假, .可视, .可视, .可视, .可视, .可视, .可视)
连续赋值 (假, .可视, .可视, .可视, .可视, .可视, .可视)
连续赋值 (假, .可视, .可视, .可视, .可视, .可视, .可视)
赋值 (地主, 0)
赋值 (倍数, 0)
赋值 (底分, 0)
赋值 (牌型, 0)
赋值 (新牌型, 0)
赋值 (扑克比点, 0)
赋值 (允许出牌, 0)
赋值 (不出次数, 0)
赋值 (三次不叫, 0)
赋值 (强制位置, 0)
赋值 (牌号排列, 1)

赋值 (上家牌型, 0)
赋值 (中家牌型, 0)
赋值 (下家牌型, 0)

赋值 (上家扑克点, 0)
赋值 (中家扑克点, 0)
赋值 (下家扑克点, 0)

赋值 (上家四张炸弹, 0)
赋值 (中家四张炸弹, 0)
赋值 (下家四张炸弹, 0)

初始化 ()
成绩显示 ()
赋值 (上家总成绩, 到数值 (0.取标题 (2)))
赋值 (中家总成绩, 到数值 (1.取标题 (2)))
赋值 (下家总成绩, 到数值 (2.取标题 (2)))


.子程序 初始化, 空白型, , 
.局部变量 i, 整数型, , , 

.计次循环首 (54, i)
    复制窗口组件 (出牌的牌 [i])
    赋值 (出牌的牌 [i], 标记, 到文本 (i))
.计次循环尾 ()
.计次循环首 (20, i)
    复制窗口组件 (上家的牌 [i])
    赋值 (上家的牌 [i], 标记, 到文本 (i))
.计次循环尾 ()
.计次循环首 (20, i)
    复制窗口组件 (中家的牌 [i])
    赋值 (中家的牌 [i], 标记, 到文本 (i))
.计次循环尾 ()
.计次循环首 (20, i)
    复制窗口组件 (下家的牌 [i])
    赋值 (下家的牌 [i], 标记, 到文本 (i))
.计次循环尾 ()
.计次循环首 (3, i)
    复制窗口组件 (底牌的牌 [i])
    赋值 (底牌的牌 [i], 标记, 到文本 (i))
.计次循环尾 ()

.子程序 成绩显示, 空白型, , 
.如果 (等于 (文件是否存在 (相加 (取运行目录 (), “\xyddz”)), 真))
    打开并读入文件 (相加 (取运行目录 (), “\xyddz”))
    
.否则
    0.置标题 (0, “自由女神”) ' 中家成绩
    0.置标题 (1, “0”) ' 地主叫分
    0.置标题 (2, “500”) ' 总成绩
    0.置标题 (3, “1”) ' 等级
    1.置标题 (0, “神秘侠女”) ' 上家成绩
    1.置标题 (1, “0”) ' 地主叫分
    1.置标题 (2, “500”) ' 总成绩
    1.置标题 (3, “1”) ' 等级
    2.置标题 (0, “天山女侠”) ' 下家成绩
    2.置标题 (1, “0”) ' 地主叫分
    2.置标题 (2, “500”) ' 总成绩
    2.置标题 (3, “1”) ' 等级
    赋值 (.内容, 0.取标题 ())
    赋值 (.内容, 1.取标题 ())
    赋值 (.内容, 2.取标题 ())
    
.如果结束


.子程序 载入成绩, 空白型, , 
.局部变量 文件号, 整数型, , , 

赋值 (.类型, 0)
赋值 (.初始目录, 相加 (取运行目录 (), “\”))
赋值 (.文件名, “xyddz”)
.如果真 (等于 (打开 (), 真))
    打开并读入文件 (.文件名)
    
.如果真结束


.子程序 打开并读入文件, 逻辑型, , 
.参数 文件名, 文本型, , 

.局部变量 窗口标题, 文本型, , , 
.局部变量 文件号, 整数型, , , 
.局部变量 是否读入成功, 逻辑型, , , 

赋值 (文件号, 打开文件 (文件名, #读入, ))
.如果 (不等于 (文件号, 0))
    读入文本 (文件号, ).加入文本 ()
    分割文件 ()
    赋值 (.内容, “”)
    关闭文件 (文件号)
    赋值 (现行文件名, 文件名)
    赋值 (是否读入成功, 真)
.否则
    信息框 (“打开文件失败！”, #错误图标, “错误”)
.如果结束
赋值 (., 窗口标题)
返回 (是否读入成功)

.子程序 分割文件, 空白型, , 
.局部变量 a, 文本型, , "0", 

.如果真 (大于 (寻找文本 (.内容, #换行符, , 假), -1))
    赋值 (a, 分割文本 (.内容, #换行符, 9))
    0.置标题 (0, a [1]) ' 上家成绩
    0.置标题 (2, a [2]) ' 总成绩
    0.置标题 (3, a [3]) ' 等级
    1.置标题 (0, a [4]) ' 中家成绩
    1.置标题 (2, a [5]) ' 总成绩
    1.置标题 (3, a [6]) ' 等级
    2.置标题 (0, a [7]) ' 下家成绩
    2.置标题 (2, a [8]) ' 总成绩
    2.置标题 (3, a [9]) ' 等级
    赋值 (.内容, 0.取标题 ())
    赋值 (.内容, 1.取标题 ())
    赋值 (.内容, 2.取标题 ())
    
.如果真结束


.子程序 _保存记录_被选择, 空白型, , 
相加 (0.取标题 (0), #换行符).加入文本 ()
相加 (0.取标题 (2), #换行符).加入文本 ()
相加 (0.取标题 (3), #换行符).加入文本 ()
相加 (1.取标题 (0), #换行符).加入文本 ()
相加 (1.取标题 (2), #换行符).加入文本 ()
相加 (1.取标题 (3), #换行符).加入文本 ()
相加 (2.取标题 (0), #换行符).加入文本 ()
相加 (2.取标题 (2), #换行符).加入文本 ()
相加 (2.取标题 (3), #换行符).加入文本 ()
保存文档 ()

.子程序 保存文档, 逻辑型, , 
.参数 文件名, 文本型, 可空, 

.局部变量 保存文件名, 文本型, , , 
.局部变量 文件号, 整数型, , , 

赋值 (保存文件名, 相加 (取运行目录 (), “\xyddz”))
赋值 (文件号, 打开文件 (保存文件名, #重写, ))
.如果 (等于 (写出文本 (文件号, .内容), 真))
    关闭文件 (文件号)
    赋值 (.内容, “”)
    赋值 (现行文件名, 保存文件名)
    返回 (假)
.否则
    关闭文件 (文件号)
.如果结束
信息框 (“保存成绩失败！”, #错误图标, “错误”)
返回 (假)

.子程序 _载入记录_被选择, 空白型, , 
载入成绩 ()

.子程序 保存成绩, 空白型, , 
.如果 (等于 (地主, 1))
    .如果 (等于 (上家剩牌, 0))
        赋值 (地主赢, 0)
        
        判断输赢 ()
    .否则
        
    .如果结束
    .如果 (等于 (中家剩牌, 0))
        赋值 (地主赢, 1)
        判断输赢 ()
    .否则
        
    .如果结束
    .如果 (等于 (下家剩牌, 0))
        赋值 (地主赢, 0)
        判断输赢 ()
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (地主, 2))
    .如果 (等于 (上家剩牌, 0))
        赋值 (地主赢, 0)
        判断输赢 ()
    .否则
        
    .如果结束
    .如果 (等于 (中家剩牌, 0))
        赋值 (地主赢, 1)
        判断输赢 ()
    .否则
        
    .如果结束
    .如果 (等于 (下家剩牌, 0))
        赋值 (地主赢, 0)
        判断输赢 ()
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (地主, 3))
    .如果 (等于 (上家剩牌, 0))
        赋值 (地主赢, 0)
        判断输赢 ()
    .否则
        
    .如果结束
    .如果 (等于 (中家剩牌, 0))
        赋值 (地主赢, 0)
        判断输赢 ()
    .否则
        
    .如果结束
    .如果 (等于 (下家剩牌, 0))
        赋值 (地主赢, 1)
        判断输赢 ()
    .否则
        
    .如果结束
    
.否则
    
.如果结束


.子程序 判断输赢, 空白型, , 
.如果 (等于 (地主赢, 1))
    赋值 (地主得分, 相乘 (底分, 倍数, 2))
    赋值 (玩家得分, 相减 (0, 相乘 (底分, 倍数)))
    赋值 (.正常图片, #赢图片)
     ' 输赢图片.正常图片 ＝ #输图片
.否则
    
.如果结束
.如果 (等于 (地主赢, 0))
    赋值 (地主得分, 相减 (0, 相乘 (底分, 倍数, 2)))
    赋值 (玩家得分, 相乘 (底分, 倍数))
     ' 输赢图片.正常图片 ＝ #赢图片
    赋值 (.正常图片, #输图片)
    
.否则
    
.如果结束
更新成绩 ()

.子程序 更新成绩, 空白型, , 
.如果 (等于 (地主, 1))
    0.置标题 (1, 到文本 (地主得分)) ' 地主叫分
    0.置标题 (2, 到文本 (相加 (上家总成绩, 地主得分))) ' 总成绩
    赋值 (上家等级, 相除 (相加 (上家总成绩, 地主得分), 500))
    0.置标题 (3, 到文本 (上家等级)) ' 等级
    
    1.置标题 (1, 到文本 (玩家得分)) ' 地主叫分
    1.置标题 (2, 到文本 (相加 (中家总成绩, 玩家得分))) ' 总成绩
    赋值 (中家等级, 相除 (相加 (中家总成绩, 玩家得分), 500))
    1.置标题 (3, 到文本 (中家等级)) ' 等级
    
    2.置标题 (1, 到文本 (玩家得分)) ' 地主叫分
    2.置标题 (2, 到文本 (相加 (下家总成绩, 玩家得分))) ' 总成绩
    赋值 (下家等级, 相除 (相加 (下家总成绩, 玩家得分), 500))
    2.置标题 (3, 到文本 (下家等级)) ' 等级
    .如果 (大于 (玩家得分, 0))
        赋值 (.可视, 真)
        赋值 (.正常图片, #赢图片)
         ' 输赢图片.正常图片 ＝ #输图片
    .否则
        
    .如果结束
    .如果 (小于 (玩家得分, 0))
        赋值 (.可视, 真)
         ' 输赢图片.正常图片 ＝ #赢图片
        赋值 (.正常图片, #输图片)
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (地主, 2))
    0.置标题 (1, 到文本 (玩家得分)) ' 地主叫分
    0.置标题 (2, 到文本 (相加 (上家总成绩, 玩家得分))) ' 总成绩
    赋值 (上家等级, 相除 (相加 (上家总成绩, 玩家得分), 500))
    0.置标题 (3, 到文本 (上家等级)) ' 等级
    
    1.置标题 (1, 到文本 (地主得分)) ' 地主叫分
    1.置标题 (2, 到文本 (相加 (中家总成绩, 地主得分))) ' 总成绩
    赋值 (中家等级, 相除 (相加 (中家总成绩, 地主得分), 500))
    1.置标题 (3, 到文本 (中家等级)) ' 等级
    
    2.置标题 (1, 到文本 (玩家得分)) ' 地主叫分
    2.置标题 (2, 到文本 (相加 (下家总成绩, 玩家得分))) ' 总成绩
    赋值 (下家等级, 相除 (相加 (下家总成绩, 玩家得分), 500))
    2.置标题 (3, 到文本 (下家等级)) ' 等级
    .如果 (大于 (地主得分, 0))
        赋值 (.可视, 真)
        赋值 (.正常图片, #赢图片)
         ' 输赢图片.正常图片 ＝ #输图片
    .否则
        
    .如果结束
    .如果 (小于 (地主得分, 0))
        赋值 (.可视, 真)
         ' 输赢图片.正常图片 ＝ #赢图片
        赋值 (.正常图片, #输图片)
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (地主, 3))
    0.置标题 (1, 到文本 (玩家得分)) ' 地主叫分
    0.置标题 (2, 到文本 (相加 (上家总成绩, 玩家得分))) ' 总成绩
    赋值 (上家等级, 相除 (相加 (上家总成绩, 玩家得分), 500))
    0.置标题 (3, 到文本 (上家等级)) ' 等级
    
    1.置标题 (1, 到文本 (玩家得分)) ' 地主叫分
    1.置标题 (2, 到文本 (相加 (中家总成绩, 玩家得分))) ' 总成绩
    赋值 (中家等级, 相除 (相加 (中家总成绩, 玩家得分), 500))
    1.置标题 (3, 到文本 (中家等级)) ' 等级
    
    2.置标题 (1, 到文本 (地主得分)) ' 地主叫分
    2.置标题 (2, 到文本 (相加 (下家总成绩, 地主得分))) ' 总成绩
    赋值 (下家等级, 相除 (相加 (下家总成绩, 地主得分), 500))
    2.置标题 (3, 到文本 (下家等级)) ' 等级
    .如果 (大于 (玩家得分, 0))
        赋值 (.可视, 真)
        赋值 (.正常图片, #赢图片)
         ' 输赢图片.正常图片 ＝ #输图片
    .否则
        
    .如果结束
    .如果 (小于 (玩家得分, 0))
        赋值 (.可视, 真)
         ' 输赢图片.正常图片 ＝ #赢图片
        赋值 (.正常图片, #输图片)
    .否则
        
    .如果结束
    
.否则
    
.如果结束
赋值 (地主得分, 0)
赋值 (玩家得分, 0)
赋值 (上家总成绩, 到数值 (0.取标题 (2)))
赋值 (中家总成绩, 到数值 (1.取标题 (2)))
赋值 (下家总成绩, 到数值 (2.取标题 (2)))

延时 (200)

.子程序 _电脑人物移动时钟_周期事件, 空白型, , 
.局部变量 百分率, 整数型, , , 为一整数，如30则将位置置为30％

赋值 (.位置, 相加 (.位置, 1))
赋值 (.位置, 相减 (.位置, 1))
赋值 (.左边, 相加 (260, .位置))
赋值 (.可视, 假)
赋值 (.左边, 相加 (260, .位置))
赋值 (.可视, 假)
赋值 (.可视, 真)
赋值 (.可视, 真)
.如果 (等于 (.位置, 150))
    赋值 (.位置, 0)
.否则
    
.如果结束
.如果 (等于 (.位置, 0))
    赋值 (.位置, 150)
.否则
    
.如果结束
.如果 (等于 (.位置, 75))
    赋值 (., 10)
    赋值 (., 30)
    赋值 (., 12)
    相加 (_启动窗口., 380).未知支持库函数_26 (相加 (_启动窗口., 180), “<br> 斗地主呀！！”, 0, )
    
.否则
    
.如果结束


.子程序 _电脑人物归位时钟_周期事件, 空白型, , 
.局部变量 百分率, 整数型, , , 为一整数，如30则将位置置为30％

.如果 (不等于 (.左边, 80))
    赋值 (.左边, 相减 (.左边, 1))
.否则
    赋值 (.左边, 80)
    赋值 (.可视, 真)
.如果结束
.如果 (不等于 (.左边, 585))
    赋值 (.左边, 相加 (.左边, 1))
.否则
    赋值 (.左边, 585)
    赋值 (.可视, 真)
.如果结束
.如果 (并且 (等于 (.可视, 真), 等于 (.可视, 真)))
    赋值 (.可视, 真)
    赋值 (.可视, 真)
    赋值 (.可视, 真)
    赋值 (.字体大小, 真)
    赋值 (.可视, 真)
    赋值 (.时钟周期, 0)
    牌显示 ()
    
.否则
    
.如果结束


.子程序 牌显示, 空白型, , 
赋值 (.可视, 假)
.如果 (并且 (等于 (.可视, 真), 等于 (.可视, 真)))
    洗牌 ()
    隐藏底牌 (底牌牌点)
    显示出的牌 (出牌牌点)
    显示上家的牌 (上家牌点)
    显示中家的牌 (中家牌点)
    显示下家的牌 (下家牌点)
    播放音乐 (#开始声音, )
    连续赋值 (真, .可视, .可视, .可视, .可视)
    连续赋值 (假, .可视, .可视)
    连续赋值 (假, .可视, .可视)
    连续赋值 (假, .可视, .可视)
    
.否则
    
.如果结束


.子程序 _发牌按钮_被单击, 空白型, , 
.局部变量 i, 整数型, , , 

赋值 (.时钟周期, 0)
赋值 (.时钟周期, 5)
连续赋值 (假, .可视, .可视, .可视, .可视, .可视, .可视)
连续赋值 (假, .可视, .可视, .可视, .可视, .可视, .可视)
连续赋值 (假, .可视, .可视, .可视, .可视, .可视, .可视)
.计次循环首 (20, i)
    赋值 (上家的牌 [i], 禁止, 假)
    赋值 (下家的牌 [i], 禁止, 假)
    赋值 (中家的牌 [i], 禁止, 假)
.计次循环尾 ()
牌显示 ()
 ' 洗牌 ()
 ' 隐藏底牌 (底牌牌点)
 ' 显示出的牌 (出牌牌点)
 ' 显示上家的牌 (上家牌点)
 ' 显示中家的牌 (中家牌点)
 ' 显示下家的牌 (下家牌点)

赋值 (地主, 0)
赋值 (倍数, 0)
赋值 (底分, 0)
赋值 (牌型, 0)
 ' 新牌型 ＝ 0
赋值 (扑克比点, 0)
赋值 (允许出牌, 0)
赋值 (不出次数, 0)
赋值 (三次不叫, 0)
赋值 (强制位置, 0)
 ' 牌号排列 ＝ 1

赋值 (上家牌型, 0)
赋值 (中家牌型, 0)
赋值 (下家牌型, 0)

赋值 (上家扑克点, 0)
赋值 (中家扑克点, 0)
赋值 (下家扑克点, 0)

赋值 (上家四张炸弹, 0)
赋值 (中家四张炸弹, 0)
赋值 (下家四张炸弹, 0)

.子程序 显示底牌, 空白型, , 
.参数 参数, 整数型, 数组, 

.局部变量 横向位置, 整数型, , , 显示自己牌用
.局部变量 i, 整数型, , , 

赋值 (横向位置, .左边)
.计次循环首 (取数组成员数 (参数), i)
    赋值 (底牌的牌 [i], 左边, 横向位置)
    赋值 (底牌的牌 [i], 可视, 真)
    赋值 (底牌的牌 [i], 图片, 返回扑克 (1, 到数值 (参数 [i])))
    赋值 (横向位置, 相加 (横向位置, 75))
.计次循环尾 ()

.子程序 隐藏底牌, 空白型, , 
.参数 参数, 整数型, 数组, 

.局部变量 横向位置, 整数型, , , 显示自己牌用
.局部变量 i, 整数型, , , 

 ' 横向位置 ＝ 315 － ((取数组成员数 (参数) － 1) × 15 ＋ 57) ÷ 2
 ' 横向位置 ＝ _启动窗口.宽度 ÷ 2 － ((取数组成员数 (参数) － 1) × 20 ＋ 160) ÷ 2
赋值 (横向位置, .左边)
.计次循环首 (取数组成员数 (参数), i)
    赋值 (底牌的牌 [i], 左边, 横向位置)
    赋值 (底牌的牌 [i], 可视, 真)
    赋值 (底牌的牌 [i], 图片, 返回扑克 (1, 到数值 (参数 [i])))
    赋值 (横向位置, 相加 (横向位置, 75))
.计次循环尾 ()


.子程序 显示上家的牌, 空白型, , 
.参数 参数, 整数型, 数组, 

.局部变量 纵向位置, 整数型, , , 显示上下家牌用
.局部变量 i, 整数型, , , 

赋值 (纵向位置, 相减 (相除 (_启动窗口., 2), 相除 (相加 (相乘 (20, 15), 96), 2)))
.计次循环首 (20, i)
    赋值 (上家的牌 [i], 可视, 假)
.计次循环尾 ()
.计次循环首 (取数组成员数 (参数), i)
    赋值 (上家的牌 [i], 左边, .左边)
    赋值 (上家的牌 [i], 顶边, 纵向位置)
    赋值 (上家的牌 [i], 可视, 真)
    赋值 (上家的牌 [i], 图片, 返回扑克 (1, 到数值 (参数 [i])))
    赋值 (纵向位置, 相加 (纵向位置, 15))
.计次循环尾 ()
.如果 (等于 (牌号排列, 1))
    数组排序 (上家牌点, 真) ' 从小到大
.否则
    数组排序 (上家牌点, 真) ' 从小到大
.如果结束
.计次循环首 (取数组成员数 (参数), i)
    处理事件 ()
    赋值 (上家的牌 [i], 图片, 返回扑克 (1, 到数值 (参数 [i])))
     ' 上家的牌 [i].图片 ＝ 返回扑克 (0, 到数值 (参数 [i]))
.计次循环尾 ()
赋值 (中家通关, -20)
赋值 (上家通关, 相加 (上家通关, 1))
赋值 (下家通关, -20)
赋值 (上家剩牌, 取数组成员数 (参数))
赋值 (.内容, 相加 (“上家剩余牌 ”, 到文本 (上家剩牌), “ 张”))
.如果 (等于 (上家剩牌, 0))
    .如果 (大于 (上家通关, 1))
        赋值 (倍数, 相加 (倍数, 1))
    .否则
        
    .如果结束
    保存成绩 ()
    连续赋值 (假, .可视, .可视, .可视, .可视, .可视, .可视)
    连续赋值 (假, .可视, .可视, .可视, .可视, .可视, .可视)
    连续赋值 (假, .可视, .可视, .可视, .可视, .可视, .可视)
    
    _发牌按钮_被单击 ()
    
.否则
    
.如果结束



.子程序 显示中家的牌, 空白型, , 
.参数 参数, 整数型, 数组, 

.局部变量 横向位置, 整数型, , , 显示自己牌用
.局部变量 i, 整数型, , , 

赋值 (横向位置, 相减 (相除 (_启动窗口., 2), 相除 (相加 (相乘 (相减 (取数组成员数 (参数), 1), 20), 57), 2)))
.计次循环首 (20, i)
    赋值 (中家的牌 [i], 可视, 假)
.计次循环尾 ()
.计次循环首 (取数组成员数 (参数), i)
    赋值 (中家的牌 [i], 顶边, .顶边)
    赋值 (中家的牌 [i], 左边, 横向位置)
    赋值 (中家的牌 [i], 可视, 真)
    赋值 (中家的牌 [i], 图片, 返回扑克 (1, 到数值 (参数 [i])))
    赋值 (横向位置, 相加 (横向位置, 20))
.计次循环尾 ()
.如果真 (不等于 (牌号排列, 0)) ' 为零不排列
    .如果 (等于 (牌号排列, 1))
        数组排序 (中家牌点, 真) ' 从小到大
    .否则
        数组排序 (中家牌点, 真) ' 从小到大
    .如果结束
    .计次循环首 (取数组成员数 (参数), i)
        处理事件 ()
        赋值 (中家的牌 [i], 图片, 返回扑克 (1, 到数值 (参数 [i])))
    .计次循环尾 ()
.如果真结束
赋值 (中家剩牌, 取数组成员数 (参数))
赋值 (.内容, 相加 (“我牌剩余 ”, 到文本 (中家剩牌), “ 张”))
.如果 (等于 (中家剩牌, 0))
    .如果 (大于 (中家通关, 1))
        赋值 (倍数, 相加 (倍数, 1))
    .否则
        
    .如果结束
    保存成绩 ()
    连续赋值 (假, .可视, .可视, .可视, .可视, .可视, .可视)
    连续赋值 (假, .可视, .可视, .可视, .可视, .可视, .可视)
    连续赋值 (假, .可视, .可视, .可视, .可视, .可视, .可视)
    
    _发牌按钮_被单击 ()
    
.否则
    
.如果结束

赋值 (中家通关, 相加 (中家通关, 1))
赋值 (上家通关, -20)
赋值 (下家通关, -20)
.如果 (大于 (中家通关, 1))
    赋值 (倍数, 相加 (倍数, 1))
.否则
    
.如果结束


.子程序 显示下家的牌, 空白型, , 
.参数 参数, 整数型, 数组, 

.局部变量 纵向位置, 整数型, , , 显示上下家牌用
.局部变量 i, 整数型, , , 

赋值 (纵向位置, 相减 (相除 (_启动窗口., 2), 相除 (相加 (相乘 (20, 15), 96), 2)))

.计次循环首 (20, i)
    赋值 (下家的牌 [i], 可视, 假)
.计次循环尾 ()
.计次循环首 (取数组成员数 (参数), i)
    赋值 (下家的牌 [i], 左边, .左边)
    赋值 (下家的牌 [i], 顶边, 纵向位置)
    赋值 (下家的牌 [i], 可视, 真)
    赋值 (下家的牌 [i], 图片, 返回扑克 (1, 到数值 (参数 [i])))
    赋值 (纵向位置, 相加 (纵向位置, 15))
    
.计次循环尾 ()
.如果 (等于 (牌号排列, 1))
    数组排序 (下家牌点, 真) ' 从小到大
.否则
    数组排序 (下家牌点, 真) ' 从小到大
.如果结束
.计次循环首 (取数组成员数 (参数), i)
    处理事件 ()
    赋值 (下家的牌 [i], 图片, 返回扑克 (1, 到数值 (参数 [i])))
     ' 下家的牌 [i].图片 ＝ 返回扑克 (0, 到数值 (参数 [i]))
.计次循环尾 ()
赋值 (中家通关, -20)
赋值 (上家通关, -20)
赋值 (下家通关, 相加 (下家通关, 1))
赋值 (下家剩牌, 取数组成员数 (参数))
赋值 (.内容, 相加 (“下家牌剩余 ”, 到文本 (下家剩牌), “ 张”))
.如果 (等于 (下家剩牌, 0))
    .如果 (大于 (下家通关, 1))
        赋值 (倍数, 相加 (倍数, 1))
    .否则
        
    .如果结束
    保存成绩 ()
    连续赋值 (假, .可视, .可视, .可视, .可视, .可视, .可视)
    连续赋值 (假, .可视, .可视, .可视, .可视, .可视, .可视)
    连续赋值 (假, .可视, .可视, .可视, .可视, .可视, .可视)
    
    _发牌按钮_被单击 ()
    
.否则
    
.如果结束



.子程序 显示出的牌, 空白型, , 
.参数 参数, 整数型, 数组, 

.局部变量 横向位置, 整数型, , , 
.局部变量 i, 整数型, , , 

赋值 (横向位置, 相减 (相除 (_启动窗口., 2), 相除 (相加 (相乘 (相减 (取数组成员数 (参数), 1), 20), 57), 2)))
.计次循环首 (54, i)
    赋值 (出牌的牌 [i], 可视, 假)
.计次循环尾 ()
.计次循环首 (取数组成员数 (参数), i)
    赋值 (出牌的牌 [i], 顶边, .顶边)
    赋值 (出牌的牌 [i], 左边, 横向位置)
    赋值 (出牌的牌 [i], 可视, 真)
    赋值 (出牌的牌 [i], 图片, 返回扑克 (0, 到数值 (参数 [i])))
    赋值 (横向位置, 相加 (横向位置, 20))
.计次循环尾 ()
.如果 (等于 (牌号排列, 1))
    数组排序 (出牌牌点, 真) ' 从小到大
.否则
    数组排序 (出牌牌点, 真) ' 从小到大
.如果结束
.计次循环首 (取数组成员数 (参数), i)
    处理事件 ()
    赋值 (出牌的牌 [i], 图片, 返回扑克 (1, 到数值 (参数 [i])))
.计次循环尾 ()


.子程序 返回扑克, 字节集, , 
.参数 花色, 空白型, , 
.参数 大小, 空白型, , 

.如果真 (等于 (花色, 0))
    返回 (#bm)
.如果真结束
.如果真 (并且 (大于 (相加 (相乘 (相减 (花色, 1), 4), 大小), 0), 小于或等于 (相加 (相乘 (相减 (花色, 1), 4), 大小), 54)))
    返回 (多项选择 (相加 (相乘 (相减 (花色, 1), 1), 大小), #p3, #h3, #m3, #f3, #p4, #h4, #m4, #f4, #p5, #h5, #m5, #f5, #p6, #h6, #m6, #f6, #p7, #h7, #m7, #f7, #p8, #h8, #m8, #f8, #p9, #h9, #m9, #f9, #p10, #h10, #m10, #f10, #p11, #h11, #m11, #f11, #p12, #h12, #m12, #f12, #p13, #h13, #m13, #f13, #p1, #h1, #m1, #f1, #p2, #h2, #m2, #f2, #w1, #w2))
.如果真结束
返回 ({  })

.子程序 洗牌, 空白型, , 
.局部变量 i, 整数型, , , 
.局部变量 j, 整数型, , , 
.局部变量 相等, 逻辑型, , , 
.局部变量 变量, 整数型, , , 
.局部变量 临时数组, 整数型, , "54", 
.局部变量 调试文本, 文本型, , , 

清除数组 (底牌牌点)
清除数组 (中家牌点)
清除数组 (下家牌点)
清除数组 (上家牌点)
置随机数种子 ()
.计次循环首 (54, i)
    .循环判断首 ()
        赋值 (变量, 取随机数 (1, 54))
        赋值 (相等, 假)
        .计次循环首 (i, j)
            .如果真 (等于 (变量, 临时数组 [j]))
                赋值 (相等, 真)
                跳出循环 ()
            .如果真结束
            
        .计次循环尾 ()
        赋值 (临时数组 [i], 变量)
    .循环判断尾 (等于 (相等, 真))
.计次循环尾 ()
.变量循环首 (1, 51, 3, i)
    加入成员 (上家牌点, 临时数组 [i])
    加入成员 (中家牌点, 临时数组 [相加 (i, 1)])
    加入成员 (下家牌点, 临时数组 [相加 (i, 2)])
.变量循环尾 ()
.计次循环首 (3, i)
    加入成员 (底牌牌点, 临时数组 [相加 (51, i)])
.计次循环尾 ()

.子程序 _上家图片_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 事件组件, 图片框, , , 
.局部变量 上家左边, 整数型, , , 显示自己牌用

赋值 (事件组件, 取事件组件 ())
赋值 (上家左边, .左边)
.如果真 (大于 (事件组件.左边, 相加 (上家左边, 20)))
    返回 ()
.如果真结束
.判断开始 (等于 (事件组件.标记, “1”))
    .如果 (不等于 (事件组件.左边, 上家左边))
        赋值 (事件组件.左边, 上家左边)
    .否则
        赋值 (事件组件.左边, 相加 (上家左边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “2”))
    .如果 (不等于 (事件组件.左边, 上家左边))
        赋值 (事件组件.左边, 上家左边)
    .否则
        赋值 (事件组件.左边, 相加 (上家左边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “3”))
    
    .如果 (不等于 (事件组件.左边, 上家左边))
        赋值 (事件组件.左边, 上家左边)
    .否则
        赋值 (事件组件.左边, 相加 (上家左边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “4”))
    
    .如果 (不等于 (事件组件.左边, 上家左边))
        赋值 (事件组件.左边, 上家左边)
    .否则
        赋值 (事件组件.左边, 相加 (上家左边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “5”))
    .如果 (不等于 (事件组件.左边, 上家左边))
        赋值 (事件组件.左边, 上家左边)
    .否则
        赋值 (事件组件.左边, 相加 (上家左边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “6”))
    .如果 (不等于 (事件组件.左边, 上家左边))
        赋值 (事件组件.左边, 上家左边)
    .否则
        赋值 (事件组件.左边, 相加 (上家左边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “7”))
    .如果 (不等于 (事件组件.左边, 上家左边))
        赋值 (事件组件.左边, 上家左边)
    .否则
        赋值 (事件组件.左边, 相加 (上家左边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “8”))
    .如果 (不等于 (事件组件.左边, 上家左边))
        赋值 (事件组件.左边, 上家左边)
    .否则
        赋值 (事件组件.左边, 相加 (上家左边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “9”))
    .如果 (不等于 (事件组件.左边, 上家左边))
        赋值 (事件组件.左边, 上家左边)
    .否则
        赋值 (事件组件.左边, 相加 (上家左边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “10”))
    .如果 (不等于 (事件组件.左边, 上家左边))
        赋值 (事件组件.左边, 上家左边)
    .否则
        赋值 (事件组件.左边, 相加 (上家左边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “11”))
    .如果 (不等于 (事件组件.左边, 上家左边))
        赋值 (事件组件.左边, 上家左边)
    .否则
        赋值 (事件组件.左边, 相加 (上家左边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “12”))
    .如果 (不等于 (事件组件.左边, 上家左边))
        赋值 (事件组件.左边, 上家左边)
    .否则
        赋值 (事件组件.左边, 相加 (上家左边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “13”))
    .如果 (不等于 (事件组件.左边, 上家左边))
        赋值 (事件组件.左边, 上家左边)
    .否则
        赋值 (事件组件.左边, 相加 (上家左边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “14”))
    .如果 (不等于 (事件组件.左边, 上家左边))
        赋值 (事件组件.左边, 上家左边)
    .否则
        赋值 (事件组件.左边, 相加 (上家左边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “15”))
    .如果 (不等于 (事件组件.左边, 上家左边))
        赋值 (事件组件.左边, 上家左边)
    .否则
        赋值 (事件组件.左边, 相加 (上家左边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “16”))
    .如果 (不等于 (事件组件.左边, 上家左边))
        赋值 (事件组件.左边, 上家左边)
    .否则
        赋值 (事件组件.左边, 相加 (上家左边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “17”))
    .如果 (不等于 (事件组件.左边, 上家左边))
        赋值 (事件组件.左边, 上家左边)
    .否则
        赋值 (事件组件.左边, 相加 (上家左边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “18”))
    .如果 (不等于 (事件组件.左边, 上家左边))
        赋值 (事件组件.左边, 上家左边)
    .否则
        赋值 (事件组件.左边, 相加 (上家左边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “19”))
    .如果 (不等于 (事件组件.左边, 上家左边))
        赋值 (事件组件.左边, 上家左边)
    .否则
        赋值 (事件组件.左边, 相加 (上家左边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “20”))
    .如果 (不等于 (事件组件.左边, 上家左边))
        赋值 (事件组件.左边, 上家左边)
    .否则
        赋值 (事件组件.左边, 相加 (上家左边, 20))
    .如果结束
    
.默认
    
.判断结束


.子程序 _中家图片_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 中家顶边, 整数型, , , 
.局部变量 事件组件, 图片框, , , 

赋值 (事件组件, 取事件组件 ())
赋值 (中家顶边, .顶边)
.如果真 (小于 (事件组件.顶边, 相减 (中家顶边, 20)))
    返回 ()
.如果真结束
.判断开始 (等于 (事件组件.标记, “1”))
    .如果 (不等于 (事件组件.顶边, 中家顶边))
        赋值 (事件组件.顶边, 中家顶边)
    .否则
        赋值 (事件组件.顶边, 相减 (中家顶边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “2”))
    .如果 (不等于 (事件组件.顶边, 中家顶边))
        赋值 (事件组件.顶边, 中家顶边)
    .否则
        赋值 (事件组件.顶边, 相减 (中家顶边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “3”))
    
    .如果 (不等于 (事件组件.顶边, 中家顶边))
        赋值 (事件组件.顶边, 中家顶边)
    .否则
        赋值 (事件组件.顶边, 相减 (中家顶边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “4”))
    
    .如果 (不等于 (事件组件.顶边, 中家顶边))
        赋值 (事件组件.顶边, 中家顶边)
    .否则
        赋值 (事件组件.顶边, 相减 (中家顶边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “5”))
    .如果 (不等于 (事件组件.顶边, 中家顶边))
        赋值 (事件组件.顶边, 中家顶边)
    .否则
        赋值 (事件组件.顶边, 相减 (中家顶边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “6”))
    .如果 (不等于 (事件组件.顶边, 中家顶边))
        赋值 (事件组件.顶边, 中家顶边)
    .否则
        赋值 (事件组件.顶边, 相减 (中家顶边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “7”))
    .如果 (不等于 (事件组件.顶边, 中家顶边))
        赋值 (事件组件.顶边, 中家顶边)
    .否则
        赋值 (事件组件.顶边, 相减 (中家顶边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “8”))
    .如果 (不等于 (事件组件.顶边, 中家顶边))
        赋值 (事件组件.顶边, 中家顶边)
    .否则
        赋值 (事件组件.顶边, 相减 (中家顶边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “9”))
    .如果 (不等于 (事件组件.顶边, 中家顶边))
        赋值 (事件组件.顶边, 中家顶边)
    .否则
        赋值 (事件组件.顶边, 相减 (中家顶边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “10”))
    .如果 (不等于 (事件组件.顶边, 中家顶边))
        赋值 (事件组件.顶边, 中家顶边)
    .否则
        赋值 (事件组件.顶边, 相减 (中家顶边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “11”))
    .如果 (不等于 (事件组件.顶边, 中家顶边))
        赋值 (事件组件.顶边, 中家顶边)
    .否则
        赋值 (事件组件.顶边, 相减 (中家顶边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “12”))
    .如果 (不等于 (事件组件.顶边, 中家顶边))
        赋值 (事件组件.顶边, 中家顶边)
    .否则
        赋值 (事件组件.顶边, 相减 (中家顶边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “13”))
    .如果 (不等于 (事件组件.顶边, 中家顶边))
        赋值 (事件组件.顶边, 中家顶边)
    .否则
        赋值 (事件组件.顶边, 相减 (中家顶边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “14”))
    .如果 (不等于 (事件组件.顶边, 中家顶边))
        赋值 (事件组件.顶边, 中家顶边)
    .否则
        赋值 (事件组件.顶边, 相减 (中家顶边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “15”))
    .如果 (不等于 (事件组件.顶边, 中家顶边))
        赋值 (事件组件.顶边, 中家顶边)
    .否则
        赋值 (事件组件.顶边, 相减 (中家顶边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “16”))
    .如果 (不等于 (事件组件.顶边, 中家顶边))
        赋值 (事件组件.顶边, 中家顶边)
    .否则
        赋值 (事件组件.顶边, 相减 (中家顶边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “17”))
    .如果 (不等于 (事件组件.顶边, 中家顶边))
        赋值 (事件组件.顶边, 中家顶边)
    .否则
        赋值 (事件组件.顶边, 相减 (中家顶边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “18”))
    .如果 (不等于 (事件组件.顶边, 中家顶边))
        赋值 (事件组件.顶边, 中家顶边)
    .否则
        赋值 (事件组件.顶边, 相减 (中家顶边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “19”))
    .如果 (不等于 (事件组件.顶边, 中家顶边))
        赋值 (事件组件.顶边, 中家顶边)
    .否则
        赋值 (事件组件.顶边, 相减 (中家顶边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “20”))
    .如果 (不等于 (事件组件.顶边, 中家顶边))
        赋值 (事件组件.顶边, 中家顶边)
    .否则
        赋值 (事件组件.顶边, 相减 (中家顶边, 20))
    .如果结束
    
.默认
    
.判断结束


.子程序 _下家图片_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 事件组件, 图片框, , , 
.局部变量 下家左边, 整数型, , , 显示自己牌用

赋值 (事件组件, 取事件组件 ())
赋值 (下家左边, .左边)
.如果真 (小于 (事件组件.左边, 相减 (下家左边, 20)))
    返回 ()
.如果真结束
.判断开始 (等于 (事件组件.标记, “1”))
    .如果 (不等于 (事件组件.左边, 下家左边))
        赋值 (事件组件.左边, 下家左边)
    .否则
        赋值 (事件组件.左边, 相减 (下家左边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “2”))
    .如果 (不等于 (事件组件.左边, 下家左边))
        赋值 (事件组件.左边, 下家左边)
    .否则
        赋值 (事件组件.左边, 相减 (下家左边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “3”))
    
    .如果 (不等于 (事件组件.左边, 下家左边))
        赋值 (事件组件.左边, 下家左边)
    .否则
        赋值 (事件组件.左边, 相减 (下家左边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “4”))
    
    .如果 (不等于 (事件组件.左边, 下家左边))
        赋值 (事件组件.左边, 下家左边)
    .否则
        赋值 (事件组件.左边, 相减 (下家左边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “5”))
    .如果 (不等于 (事件组件.左边, 下家左边))
        赋值 (事件组件.左边, 下家左边)
    .否则
        赋值 (事件组件.左边, 相减 (下家左边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “6”))
    .如果 (不等于 (事件组件.左边, 下家左边))
        赋值 (事件组件.左边, 下家左边)
    .否则
        赋值 (事件组件.左边, 相减 (下家左边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “7”))
    .如果 (不等于 (事件组件.左边, 下家左边))
        赋值 (事件组件.左边, 下家左边)
    .否则
        赋值 (事件组件.左边, 相减 (下家左边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “8”))
    .如果 (不等于 (事件组件.左边, 下家左边))
        赋值 (事件组件.左边, 下家左边)
    .否则
        赋值 (事件组件.左边, 相减 (下家左边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “9”))
    .如果 (不等于 (事件组件.左边, 下家左边))
        赋值 (事件组件.左边, 下家左边)
    .否则
        赋值 (事件组件.左边, 相减 (下家左边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “10”))
    .如果 (不等于 (事件组件.左边, 下家左边))
        赋值 (事件组件.左边, 下家左边)
    .否则
        赋值 (事件组件.左边, 相减 (下家左边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “11”))
    .如果 (不等于 (事件组件.左边, 下家左边))
        赋值 (事件组件.左边, 下家左边)
    .否则
        赋值 (事件组件.左边, 相减 (下家左边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “12”))
    .如果 (不等于 (事件组件.左边, 下家左边))
        赋值 (事件组件.左边, 下家左边)
    .否则
        赋值 (事件组件.左边, 相减 (下家左边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “13”))
    .如果 (不等于 (事件组件.左边, 下家左边))
        赋值 (事件组件.左边, 下家左边)
    .否则
        赋值 (事件组件.左边, 相减 (下家左边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “14”))
    .如果 (不等于 (事件组件.左边, 下家左边))
        赋值 (事件组件.左边, 下家左边)
    .否则
        赋值 (事件组件.左边, 相减 (下家左边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “15”))
    .如果 (不等于 (事件组件.左边, 下家左边))
        赋值 (事件组件.左边, 下家左边)
    .否则
        赋值 (事件组件.左边, 相减 (下家左边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “16”))
    .如果 (不等于 (事件组件.左边, 下家左边))
        赋值 (事件组件.左边, 下家左边)
    .否则
        赋值 (事件组件.左边, 相减 (下家左边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “17”))
    .如果 (不等于 (事件组件.左边, 下家左边))
        赋值 (事件组件.左边, 下家左边)
    .否则
        赋值 (事件组件.左边, 相减 (下家左边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “18”))
    .如果 (不等于 (事件组件.左边, 下家左边))
        赋值 (事件组件.左边, 下家左边)
    .否则
        赋值 (事件组件.左边, 相减 (下家左边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “19”))
    .如果 (不等于 (事件组件.左边, 下家左边))
        赋值 (事件组件.左边, 下家左边)
    .否则
        赋值 (事件组件.左边, 相减 (下家左边, 20))
    .如果结束
    
.判断 (等于 (事件组件.标记, “20”))
    .如果 (不等于 (事件组件.左边, 下家左边))
        赋值 (事件组件.左边, 下家左边)
    .否则
        赋值 (事件组件.左边, 相减 (下家左边, 20))
    .如果结束
    
.默认
    
.判断结束


.子程序 判断牌值, 整数型, , 
.参数 牌值, 整数型, , 

.局部变量 i, 整数型, , , 

.变量循环首 (4, 52, 4, i)
    .如果真 (并且 (大于或等于 (牌值, 相减 (i, 3)), 小于或等于 (牌值, i)))
        .如果真 (等于 (i, 4))
            返回 (1)
        .如果真结束
        .如果真 (等于 (i, 8))
            返回 (2)
        .如果真结束
        .如果真 (等于 (i, 12))
            返回 (3)
        .如果真结束
        .如果真 (等于 (i, 16))
            返回 (4)
        .如果真结束
        .如果真 (等于 (i, 20))
            返回 (5)
        .如果真结束
        .如果真 (等于 (i, 24))
            返回 (6)
        .如果真结束
        .如果真 (等于 (i, 28))
            返回 (7)
        .如果真结束
        .如果真 (等于 (i, 32))
            返回 (8)
        .如果真结束
        .如果真 (等于 (i, 36))
            返回 (9)
        .如果真结束
        .如果真 (等于 (i, 40))
            返回 (10)
        .如果真结束
        .如果真 (等于 (i, 44))
            返回 (11)
        .如果真结束
        .如果真 (等于 (i, 48))
            返回 (12)
        .如果真结束
        .如果真 (等于 (i, 52))
            返回 (13)
        .如果真结束
        
    .如果真结束
    
.变量循环尾 ()
.变量循环首 (1, 54, 1, i)
    .如果真 (并且 (大于或等于 (牌值, i), 小于或等于 (牌值, i)))
        .如果真 (等于 (i, 53))
            返回 (14)
        .如果真结束
        .如果真 (等于 (i, 54))
            返回 (15)
        .如果真结束
        
    .如果真结束
    
.变量循环尾 ()
返回 (0)

.子程序 判断牌段, 整数型, , 
.参数 牌值, 整数型, , 

.局部变量 i, 整数型, , , 

.变量循环首 (4, 52, 4, i)
    .如果真 (并且 (大于或等于 (牌值, 相减 (i, 3)), 小于或等于 (牌值, i)))
        .如果真 (等于 (i, 4))
            返回 (3)
        .如果真结束
        .如果真 (等于 (i, 8))
            返回 (4)
        .如果真结束
        .如果真 (等于 (i, 12))
            返回 (5)
        .如果真结束
        .如果真 (等于 (i, 16))
            返回 (6)
        .如果真结束
        .如果真 (等于 (i, 20))
            返回 (7)
        .如果真结束
        .如果真 (等于 (i, 24))
            返回 (8)
        .如果真结束
        .如果真 (等于 (i, 28))
            返回 (9)
        .如果真结束
        .如果真 (等于 (i, 32))
            返回 (10)
        .如果真结束
        .如果真 (等于 (i, 36))
            返回 (11)
        .如果真结束
        .如果真 (等于 (i, 40))
            返回 (12)
        .如果真结束
        .如果真 (等于 (i, 44))
            返回 (13)
        .如果真结束
        .如果真 (等于 (i, 48))
            返回 (1)
        .如果真结束
        .如果真 (等于 (i, 52))
            返回 (2)
        .如果真结束
        
    .如果真结束
    
.变量循环尾 ()
.变量循环首 (1, 54, 1, i)
    .如果真 (并且 (大于或等于 (牌值, i), 小于或等于 (牌值, i)))
        .如果真 (等于 (i, 53))
            返回 (14)
        .如果真结束
        .如果真 (等于 (i, 54))
            返回 (15)
        .如果真结束
        
    .如果真结束
    
.变量循环尾 ()
返回 (0)

.子程序 判断花牌, 整数型, , 
.参数 牌值, 整数型, , 

.局部变量 余数, 整数型, , , 

赋值 (余数, 求余数 (牌值, 4))
返回 (余数)
 ' 该段代码本程序没有使用


.子程序 判断出牌, 空白型, , 
.参数 参数, 整数型, 数组, 

.局部变量 n, 整数型, , , 
.局部变量 i, 整数型, , , 
.局部变量 中家顶边, 整数型, , , 
.局部变量 上家左边, 整数型, , , 
.局部变量 下家左边, 整数型, , , 
.局部变量 牌数, 整数型, , , 

赋值 (中家顶边, .顶边)
赋值 (上家左边, .左边)
赋值 (下家左边, .左边)
.计次循环首 (取数组成员数 (中家牌点), i)
    .如果真 (等于 (中家的牌 [i], 顶边, 相减 (中家顶边, 20)))
        加入成员 (已选择牌子, 中家牌点 [i])
        加入成员 (新数组, 判断牌值 (中家牌点 [i]))
        赋值 (牌数, 相加 (牌数, 1))
    .如果真结束
    
.计次循环尾 ()
.计次循环首 (取数组成员数 (上家牌点), i)
    .如果真 (等于 (上家的牌 [i], 左边, 相加 (上家左边, 20)))
        加入成员 (已选择牌子, 上家牌点 [i])
        加入成员 (新数组, 判断牌值 (上家牌点 [i]))
        赋值 (牌数, 相加 (牌数, 1))
    .如果真结束
    
.计次循环尾 ()
.计次循环首 (取数组成员数 (下家牌点), i)
    .如果真 (等于 (下家的牌 [i], 左边, 相减 (下家左边, 20)))
        加入成员 (已选择牌子, 下家牌点 [i])
        加入成员 (新数组, 判断牌值 (下家牌点 [i]))
        赋值 (牌数, 相加 (牌数, 1))
    .如果真结束
    
.计次循环尾 ()
数组排序 (新数组, )
.如果 (等于 (牌数, 0))
    输出调试文本 (“你没有选择可出的牌！！！！”)
.否则
    
.如果结束
.如果 (等于 (牌数, 1))
    输出调试文本 (“你出的牌是单张！------------”)
    输出调试文本 (相加 (“你出的牌的数值:”, 到文本 (新数组 [1])))
    赋值 (允许出牌, 1)
    赋值 (扑克比点, 新数组 [1])
     ' 加入成员 (扑克点数, 新数组)
    赋值 (扑克点数, 新数组)
    赋值 (牌型, 1)
.否则
    
.如果结束
.如果 (等于 (牌数, 2))
    .如果 (等于 (新数组 [1], 新数组 [2]))
        赋值 (允许出牌, 1)
        赋值 (扑克比点, 新数组 [1])
        赋值 (扑克点数, 新数组)
        赋值 (牌型, 11)
        输出调试文本 (“你出的牌是对子”)
    .否则
        .如果 (等于 (相加 (新数组 [1], 新数组 [2]), 29))
            输出调试文本 (“你出的牌是大小王炸弹！”)
            赋值 (扑克比点, 1000)
            赋值 (扑克点数, 新数组)
            赋值 (允许出牌, 1)
            赋值 (牌型, 10000)
        .否则
            输出调试文本 (“你出的牌违规！！！！”)
        .如果结束
        
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (牌数, 3))
    .如果 (等于 (新数组 [1], 新数组 [2]))
        .如果 (等于 (新数组 [1], 新数组 [3]))
            输出调试文本 (“你出的牌是三张！”)
            赋值 (允许出牌, 1)
            赋值 (扑克比点, 新数组 [1])
            赋值 (扑克点数, 新数组)
            赋值 (牌型, 111)
        .否则
            输出调试文本 (“你出的牌违规！！！！”)
        .如果结束
        
    .否则
        
    .如果结束
    .如果 (等于 (新数组 [2], 新数组 [3]))
        .如果 (等于 (新数组 [2], 新数组 [1]))
            输出调试文本 (“你出的牌是三张！”)
            赋值 (允许出牌, 1)
            赋值 (扑克比点, 新数组 [1])
            赋值 (扑克点数, 新数组)
            赋值 (牌型, 111)
        .否则
            输出调试文本 (“你出的牌违规！！！！”)
        .如果结束
        
    .否则
        
    .如果结束
    .如果 (等于 (新数组 [1], 新数组 [3]))
        .如果 (等于 (新数组 [2], 新数组 [1]))
            输出调试文本 (“你出的牌是三张！”)
            赋值 (允许出牌, 1)
            赋值 (扑克比点, 新数组 [1])
            赋值 (扑克点数, 新数组)
            赋值 (牌型, 111)
        .否则
            输出调试文本 (“你出的牌违规！！！！”)
        .如果结束
        
    .否则
        
    .如果结束
    .如果 (不等于 (新数组 [1], 新数组 [3]))
        输出调试文本 (“你出的牌违规！！！！”)
    .否则
        
    .如果结束
    .如果 (不等于 (新数组 [1], 新数组 [2]))
        输出调试文本 (“你出的牌违规！！！！”)
    .否则
        
    .如果结束
    .如果 (不等于 (新数组 [2], 新数组 [3]))
        输出调试文本 (“你出的牌违规！！！！”)
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (牌数, 4))
    .如果 (等于 (新数组 [1], 新数组 [2]))
        .如果 (等于 (新数组 [1], 新数组 [3]))
            .如果 (等于 (新数组 [1], 新数组 [4]))
                输出调试文本 (“你出的牌是四张炸弹！！！！”)
                赋值 (扑克比点, 100)
                赋值 (四张炸弹比点, 新数组 [1])
                赋值 (允许出牌, 1)
                赋值 (牌型, 10000)
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .否则
        
    .如果结束
    .如果 (等于 (新数组 [1], 新数组 [2]))
        .如果 (等于 (新数组 [1], 新数组 [3]))
            .如果 (不等于 (新数组 [1], 新数组 [4]))
                输出调试文本 (“你出的牌是三带一！”)
                赋值 (允许出牌, 1)
                赋值 (扑克比点, 新数组 [1])
                赋值 (牌型, 1110)
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .否则
        
    .如果结束
    .如果 (等于 (新数组 [2], 新数组 [3]))
        .如果 (等于 (新数组 [2], 新数组 [4]))
            .如果 (不等于 (新数组 [2], 新数组 [1]))
                输出调试文本 (“你出的牌是三带一！”)
                赋值 (允许出牌, 1)
                赋值 (扑克比点, 新数组 [2])
                赋值 (牌型, 1110)
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (牌数, 5))
    .如果 (等于 (相加 (新数组 [1], 1), 新数组 [2]))
        .如果 (等于 (相加 (新数组 [2], 1), 新数组 [3]))
            .如果 (等于 (相加 (新数组 [3], 1), 新数组 [4]))
                .如果 (等于 (相加 (新数组 [4], 1), 新数组 [5]))
                    .如果 (大于或等于 (新数组 [5], 13))
                        输出调试文本 (“你出的牌违规！！！！”)
                    .否则
                        输出调试文本 (“你出的牌是五张五顺子！”)
                        赋值 (扑克比点, 新数组 [1])
                        赋值 (允许出牌, 1)
                        赋值 (牌型, 12345)
                    .如果结束
                    
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .否则
        
    .如果结束
    .如果 (等于 (新数组 [1], 新数组 [2]))
        .如果 (等于 (新数组 [1], 新数组 [3]))
            .如果 (等于 (新数组 [1], 新数组 [4]))
                输出调试文本 (“你出的牌是四带单！”)
                赋值 (允许出牌, 1)
                赋值 (扑克比点, 新数组 [1])
                赋值 (牌型, 11110)
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .否则
        
    .如果结束
    .如果 (等于 (新数组 [2], 新数组 [3]))
        .如果 (等于 (新数组 [2], 新数组 [4]))
            .如果 (等于 (新数组 [2], 新数组 [5]))
                输出调试文本 (“你出的牌是四带单！”)
                赋值 (允许出牌, 1)
                赋值 (扑克比点, 新数组 [2])
                赋值 (牌型, 11110)
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .否则
        
    .如果结束
    .如果 (等于 (新数组 [1], 新数组 [2]))
        .如果 (等于 (新数组 [1], 新数组 [3]))
            .如果 (等于 (新数组 [4], 新数组 [5]))
                输出调试文本 (“你出的牌是三带二！”)
                赋值 (允许出牌, 1)
                赋值 (扑克比点, 新数组 [1])
                赋值 (牌型, 11100)
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .否则
        
    .如果结束
    .如果 (等于 (新数组 [3], 新数组 [4]))
        .如果 (等于 (新数组 [3], 新数组 [5]))
            .如果 (等于 (新数组 [1], 新数组 [2]))
                输出调试文本 (“你出的牌是三带二！”)
                赋值 (允许出牌, 1)
                赋值 (扑克比点, 新数组 [3])
                赋值 (牌型, 11100)
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (牌数, 6))
    .如果 (等于 (相加 (新数组 [1], 1), 新数组 [2]))
        .如果 (等于 (相加 (新数组 [2], 1), 新数组 [3]))
            .如果 (等于 (相加 (新数组 [3], 1), 新数组 [4]))
                .如果 (等于 (相加 (新数组 [4], 1), 新数组 [5]))
                    .如果 (等于 (相加 (新数组 [5], 1), 新数组 [6]))
                        .如果 (大于或等于 (新数组 [6], 13))
                            输出调试文本 (“你出的牌违规！！！！”)
                        .否则
                            输出调试文本 (“你出的牌是六张六顺子！”)
                            赋值 (允许出牌, 1)
                            赋值 (扑克比点, 新数组 [1])
                            赋值 (牌型, 123456)
                        .如果结束
                        
                    .否则
                        
                    .如果结束
                    
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .否则
        
    .如果结束
    .如果 (等于 (新数组 [1], 新数组 [2]))
        .如果 (等于 (新数组 [1], 新数组 [3]))
            .如果 (等于 (新数组 [1], 新数组 [4]))
                .如果 (等于 (新数组 [5], 新数组 [6]))
                    .如果 (不等于 (新数组 [1], 新数组 [6]))
                        输出调试文本 (“你出的牌是四带对！”)
                        赋值 (允许出牌, 1)
                        赋值 (扑克比点, 新数组 [1])
                        赋值 (牌型, 111100)
                    .否则
                        
                    .如果结束
                    
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .否则
        
    .如果结束
    .如果 (等于 (新数组 [3], 新数组 [4]))
        .如果 (等于 (新数组 [3], 新数组 [5]))
            .如果 (等于 (新数组 [3], 新数组 [6]))
                .如果 (等于 (新数组 [1], 新数组 [2]))
                    .如果 (不等于 (新数组 [1], 新数组 [6]))
                        输出调试文本 (“你出的牌是四带对！”)
                        赋值 (允许出牌, 1)
                        赋值 (扑克比点, 新数组 [3])
                        赋值 (牌型, 111100)
                    .否则
                        
                    .如果结束
                    
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .否则
        
    .如果结束
    .如果 (等于 (新数组 [1], 新数组 [2]))
        .如果 (等于 (新数组 [1], 新数组 [3]))
            .如果 (等于 (新数组 [4], 新数组 [5]))
                .如果 (等于 (新数组 [4], 新数组 [6]))
                    .如果 (等于 (相加 (新数组 [1], 1), 新数组 [6]))
                        .如果 (大于或等于 (新数组 [6], 13))
                            输出调试文本 (“你出的牌违规！！！！”)
                        .否则
                            输出调试文本 (“你出的牌是三架！”)
                            赋值 (允许出牌, 1)
                            赋值 (扑克比点, 新数组 [1])
                            赋值 (牌型, 111222)
                        .如果结束
                        
                    .否则
                        
                    .如果结束
                    
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .否则
        
    .如果结束
    .如果 (等于 (新数组 [1], 新数组 [2]))
        .如果 (等于 (新数组 [3], 新数组 [4]))
            .如果 (等于 (新数组 [5], 新数组 [6]))
                .如果 (等于 (相加 (新数组 [1], 1), 新数组 [3]))
                    .如果 (等于 (相加 (新数组 [3], 1), 新数组 [5]))
                        .如果 (大于或等于 (新数组 [6], 13))
                            输出调试文本 (“你出的牌违规！！！！”)
                        .否则
                            输出调试文本 (“你出的牌是三顺！”)
                            赋值 (允许出牌, 1)
                            赋值 (扑克比点, 新数组 [1])
                            赋值 (牌型, 101010)
                        .如果结束
                        
                    .否则
                        
                    .如果结束
                    
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (牌数, 7))
    .如果 (等于 (相加 (新数组 [1], 1), 新数组 [2]))
        .如果 (等于 (相加 (新数组 [2], 1), 新数组 [3]))
            .如果 (等于 (相加 (新数组 [3], 1), 新数组 [4]))
                .如果 (等于 (相加 (新数组 [4], 1), 新数组 [5]))
                    .如果 (等于 (相加 (新数组 [5], 1), 新数组 [6]))
                        .如果 (等于 (相加 (新数组 [6], 1), 新数组 [7]))
                            .如果 (大于或等于 (新数组 [7], 13))
                                输出调试文本 (“你出的牌违规！！！！”)
                            .否则
                                输出调试文本 (“你出的牌是七张七顺子！”)
                                赋值 (允许出牌, 1)
                                赋值 (扑克比点, 新数组 [1])
                                赋值 (牌型, 1234567)
                            .如果结束
                            
                        .否则
                            
                        .如果结束
                        
                    .否则
                        
                    .如果结束
                    
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (牌数, 8))
    .如果 (等于 (相加 (新数组 [1], 1), 新数组 [2]))
        .如果 (等于 (相加 (新数组 [2], 1), 新数组 [3]))
            .如果 (等于 (相加 (新数组 [3], 1), 新数组 [4]))
                .如果 (等于 (相加 (新数组 [4], 1), 新数组 [5]))
                    .如果 (等于 (相加 (新数组 [5], 1), 新数组 [6]))
                        .如果 (等于 (相加 (新数组 [6], 1), 新数组 [7]))
                            .如果 (等于 (相加 (新数组 [7], 1), 新数组 [8]))
                                .如果 (大于或等于 (新数组 [8], 13))
                                    输出调试文本 (“你出的牌违规！！！！”)
                                .否则
                                    输出调试文本 (“你出的牌是八张八顺子！”)
                                    赋值 (允许出牌, 1)
                                    赋值 (扑克比点, 新数组 [1])
                                    赋值 (牌型, 12345678)
                                .如果结束
                                
                            .否则
                                
                            .如果结束
                            
                        .否则
                            
                        .如果结束
                        
                    .否则
                        
                    .如果结束
                    
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .否则
        
    .如果结束
    .如果 (等于 (新数组 [1], 新数组 [2]))
        .如果 (等于 (新数组 [1], 新数组 [3]))
            .如果 (等于 (新数组 [1], 新数组 [4]))
                .如果 (等于 (新数组 [5], 新数组 [6]))
                    .如果 (等于 (新数组 [7], 新数组 [8]))
                        输出调试文本 (“你出的牌是四带对！”)
                        赋值 (允许出牌, 1)
                        赋值 (扑克比点, 新数组 [1])
                        赋值 (牌型, 111100)
                    .否则
                        输出调试文本 (“你出的牌违规！！！！”)
                    .如果结束
                    
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .否则
        
    .如果结束
    .如果 (等于 (新数组 [5], 新数组 [6]))
        .如果 (等于 (新数组 [5], 新数组 [7]))
            .如果 (等于 (新数组 [5], 新数组 [8]))
                .如果 (等于 (新数组 [1], 新数组 [2]))
                    .如果 (等于 (新数组 [3], 新数组 [4]))
                        输出调试文本 (“你出的牌是四带对！”)
                        赋值 (允许出牌, 1)
                        赋值 (扑克比点, 新数组 [5])
                        赋值 (牌型, 111100)
                    .否则
                        输出调试文本 (“你出的牌违规！！！！”)
                    .如果结束
                    
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .否则
        
    .如果结束
    .如果 (等于 (新数组 [3], 新数组 [4]))
        .如果 (等于 (新数组 [3], 新数组 [5]))
            .如果 (等于 (新数组 [3], 新数组 [6]))
                .如果 (等于 (新数组 [1], 新数组 [2]))
                    .如果 (等于 (新数组 [7], 新数组 [8]))
                        输出调试文本 (“你出的牌是四带对！”)
                        赋值 (允许出牌, 1)
                        赋值 (扑克比点, 新数组 [3])
                        赋值 (牌型, 111100)
                    .否则
                        输出调试文本 (“你出的牌违规！！！！”)
                    .如果结束
                    
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .否则
        
    .如果结束
    .如果 (等于 (新数组 [1], 新数组 [2]))
        .如果 (等于 (新数组 [1], 新数组 [3]))
            .如果 (等于 (新数组 [4], 新数组 [5]))
                .如果 (等于 (新数组 [4], 新数组 [6]))
                    .如果 (等于 (相加 (新数组 [1], 1), 新数组 [4]))
                        .如果 (大于或等于 (新数组 [6], 13))
                            输出调试文本 (“你出的牌违规！！！！”)
                        .否则
                            输出调试文本 (“你出的牌是三架一！”)
                            赋值 (允许出牌, 1)
                            赋值 (扑克比点, 新数组 [1])
                            赋值 (牌型, 3331)
                        .如果结束
                        
                    .否则
                        
                    .如果结束
                    
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .否则
        
    .如果结束
    .如果 (等于 (新数组 [2], 新数组 [3]))
        .如果 (等于 (新数组 [2], 新数组 [4]))
            .如果 (等于 (新数组 [5], 新数组 [6]))
                .如果 (等于 (新数组 [5], 新数组 [7]))
                    .如果 (等于 (相加 (新数组 [2], 1), 新数组 [5]))
                        .如果 (大于或等于 (新数组 [5], 13))
                            输出调试文本 (“你出的牌违规！！！！”)
                        .否则
                            输出调试文本 (“你出的牌是三架一！”)
                            赋值 (允许出牌, 1)
                            赋值 (扑克比点, 新数组 [2])
                            赋值 (牌型, 3331)
                        .如果结束
                        
                    .否则
                        
                    .如果结束
                    
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .否则
        
    .如果结束
    .如果 (等于 (新数组 [3], 新数组 [4]))
        .如果 (等于 (新数组 [3], 新数组 [5]))
            .如果 (等于 (新数组 [6], 新数组 [7]))
                .如果 (等于 (新数组 [6], 新数组 [8]))
                    .如果 (等于 (相加 (新数组 [3], 1), 新数组 [6]))
                        .如果 (大于或等于 (新数组 [6], 13))
                            输出调试文本 (“你出的牌违规！！！！”)
                        .否则
                            输出调试文本 (“你出的牌是三架一！”)
                            赋值 (允许出牌, 1)
                            赋值 (扑克比点, 新数组 [3])
                            赋值 (牌型, 3331)
                        .如果结束
                        
                    .否则
                        
                    .如果结束
                    
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .否则
        
    .如果结束
    .如果 (等于 (新数组 [1], 新数组 [2]))
        .如果 (等于 (新数组 [3], 新数组 [4]))
            .如果 (等于 (新数组 [5], 新数组 [6]))
                .如果 (等于 (新数组 [7], 新数组 [8]))
                    .如果 (等于 (相加 (新数组 [1], 1), 新数组 [3]))
                        .如果 (等于 (相加 (新数组 [3], 1), 新数组 [5]))
                            .如果 (等于 (相加 (新数组 [5], 1), 新数组 [7]))
                                .如果 (大于或等于 (新数组 [8], 13))
                                    输出调试文本 (“你出的牌违规！！！！”)
                                .否则
                                    输出调试文本 (“你出的牌是四顺！”)
                                    赋值 (允许出牌, 1)
                                    赋值 (扑克比点, 新数组 [1])
                                    赋值 (牌型, 10101010)
                                .如果结束
                                
                            .否则
                                
                            .如果结束
                            
                        .否则
                            
                        .如果结束
                        
                    .否则
                        
                    .如果结束
                    
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (牌数, 9))
    .如果 (等于 (相加 (新数组 [1], 1), 新数组 [2]))
        .如果 (等于 (相加 (新数组 [2], 1), 新数组 [3]))
            .如果 (等于 (相加 (新数组 [3], 1), 新数组 [4]))
                .如果 (等于 (相加 (新数组 [4], 1), 新数组 [5]))
                    .如果 (等于 (相加 (新数组 [5], 1), 新数组 [6]))
                        .如果 (等于 (相加 (新数组 [6], 1), 新数组 [7]))
                            .如果 (等于 (相加 (新数组 [7], 1), 新数组 [8]))
                                .如果 (等于 (相加 (新数组 [8], 1), 新数组 [9]))
                                    .如果 (大于或等于 (新数组 [9], 13))
                                        输出调试文本 (“你出的牌违规！！！！”)
                                    .否则
                                        输出调试文本 (“你出的牌是九张九顺子！”)
                                        赋值 (允许出牌, 1)
                                        赋值 (扑克比点, 新数组 [1])
                                        赋值 (牌型, 123456789)
                                    .如果结束
                                    
                                .否则
                                    
                                .如果结束
                                
                            .否则
                                
                            .如果结束
                            
                        .否则
                            
                        .如果结束
                        
                    .否则
                        
                    .如果结束
                    
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (牌数, 10))
    .如果 (等于 (相加 (新数组 [1], 1), 新数组 [2]))
        .如果 (等于 (相加 (新数组 [2], 1), 新数组 [3]))
            .如果 (等于 (相加 (新数组 [3], 1), 新数组 [4]))
                .如果 (等于 (相加 (新数组 [4], 1), 新数组 [5]))
                    .如果 (等于 (相加 (新数组 [5], 1), 新数组 [6]))
                        .如果 (等于 (相加 (新数组 [6], 1), 新数组 [7]))
                            .如果 (等于 (相加 (新数组 [7], 1), 新数组 [8]))
                                .如果 (等于 (相加 (新数组 [8], 1), 新数组 [9]))
                                    .如果 (等于 (相加 (新数组 [9], 1), 新数组 [10]))
                                        .如果 (大于或等于 (新数组 [10], 13))
                                            输出调试文本 (“你出的牌违规！！！！”)
                                        .否则
                                            输出调试文本 (“你出的牌是十张十顺子”)
                                            赋值 (允许出牌, 1)
                                            赋值 (扑克比点, 新数组 [1])
                                            赋值 (牌型, 123456789)
                                        .如果结束
                                        
                                    .否则
                                        
                                    .如果结束
                                    
                                .否则
                                    
                                .如果结束
                                
                            .否则
                                
                            .如果结束
                            
                        .否则
                            
                        .如果结束
                        
                    .否则
                        
                    .如果结束
                    
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .否则
        
    .如果结束
    .如果 (等于 (新数组 [1], 新数组 [2]))
        .如果 (等于 (新数组 [1], 新数组 [3]))
            .如果 (等于 (新数组 [4], 新数组 [5]))
                .如果 (等于 (新数组 [4], 新数组 [6]))
                    .如果 (等于 (新数组 [7], 新数组 [8]))
                        .如果 (等于 (新数组 [9], 新数组 [10]))
                            .如果 (等于 (相加 (新数组 [1], 1), 新数组 [4]))
                                .如果 (大于或等于 (新数组 [4], 13))
                                    输出调试文本 (“你出的牌违规！！！！”)
                                .否则
                                    输出调试文本 (“你出的牌是三架二！”)
                                    赋值 (允许出牌, 1)
                                    赋值 (扑克比点, 新数组 [1])
                                    赋值 (牌型, 33344400)
                                .如果结束
                                
                            .否则
                                
                            .如果结束
                            
                        .否则
                            
                        .如果结束
                        
                    .否则
                        
                    .如果结束
                    
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .否则
        
    .如果结束
    .如果 (等于 (新数组 [3], 新数组 [4]))
        .如果 (等于 (新数组 [3], 新数组 [5]))
            .如果 (等于 (新数组 [6], 新数组 [7]))
                .如果 (等于 (新数组 [6], 新数组 [8]))
                    .如果 (等于 (新数组 [1], 新数组 [2]))
                        .如果 (等于 (新数组 [9], 新数组 [10]))
                            .如果 (等于 (相加 (新数组 [3], 1), 新数组 [6]))
                                .如果 (大于或等于 (新数组 [6], 13))
                                    输出调试文本 (“你出的牌违规！！！！”)
                                .否则
                                    输出调试文本 (“你出的牌是三架二！”)
                                    赋值 (允许出牌, 1)
                                    赋值 (扑克比点, 新数组 [3])
                                    赋值 (牌型, 33344400)
                                .如果结束
                                
                            .否则
                                
                            .如果结束
                            
                        .否则
                            
                        .如果结束
                        
                    .否则
                        
                    .如果结束
                    
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .否则
        
    .如果结束
    .如果 (等于 (新数组 [10], 新数组 [8]))
        .如果 (等于 (新数组 [10], 新数组 [9]))
            .如果 (等于 (新数组 [7], 新数组 [5]))
                .如果 (等于 (新数组 [7], 新数组 [6]))
                    .如果 (等于 (新数组 [1], 新数组 [2]))
                        .如果 (等于 (新数组 [3], 新数组 [4]))
                            .如果 (等于 (相加 (新数组 [7], 1), 新数组 [10]))
                                .如果 (大于或等于 (新数组 [10], 13))
                                    输出调试文本 (“你出的牌违规！！！！”)
                                .否则
                                    输出调试文本 (“你出的牌是三架二！”)
                                    赋值 (允许出牌, 1)
                                    赋值 (扑克比点, 新数组 [7])
                                    赋值 (牌型, 33344400)
                                .如果结束
                                
                            .否则
                                
                            .如果结束
                            
                        .否则
                            
                        .如果结束
                        
                    .否则
                        
                    .如果结束
                    
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .否则
        
    .如果结束
    .如果 (等于 (新数组 [8], 新数组 [6]))
        .如果 (等于 (新数组 [8], 新数组 [7]))
            .如果 (等于 (新数组 [5], 新数组 [3]))
                .如果 (等于 (新数组 [5], 新数组 [4]))
                    .如果 (等于 (新数组 [1], 新数组 [2]))
                        .如果 (等于 (新数组 [10], 新数组 [9]))
                            .如果 (等于 (相加 (新数组 [5], 1), 新数组 [8]))
                                .如果 (大于或等于 (新数组 [8], 13))
                                    输出调试文本 (“你出的牌违规！！！！”)
                                .否则
                                    输出调试文本 (“你出的牌是三架二！”)
                                    赋值 (允许出牌, 1)
                                    赋值 (扑克比点, 新数组 [5])
                                    赋值 (牌型, 33344400)
                                .如果结束
                                
                            .否则
                                
                            .如果结束
                            
                        .否则
                            
                        .如果结束
                        
                    .否则
                        
                    .如果结束
                    
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .否则
        
    .如果结束
    .如果 (等于 (新数组 [1], 新数组 [2]))
        .如果 (等于 (新数组 [3], 新数组 [4]))
            .如果 (等于 (新数组 [5], 新数组 [6]))
                .如果 (等于 (新数组 [7], 新数组 [8]))
                    .如果 (等于 (新数组 [9], 新数组 [10]))
                        .如果 (等于 (相加 (新数组 [1], 1), 新数组 [3]))
                            .如果 (等于 (相加 (新数组 [3], 1), 新数组 [5]))
                                .如果 (等于 (相加 (新数组 [5], 1), 新数组 [7]))
                                    .如果 (等于 (相加 (新数组 [7], 1), 新数组 [9]))
                                        .如果 (大于或等于 (新数组 [10], 13))
                                            输出调试文本 (“你出的牌违规！！！！”)
                                        .否则
                                            输出调试文本 (“你出的牌是五顺！”)
                                            赋值 (允许出牌, 1)
                                            赋值 (扑克比点, 新数组 [1])
                                            赋值 (牌型, 1010101010)
                                        .如果结束
                                        
                                    .否则
                                        
                                    .如果结束
                                    
                                .否则
                                    
                                .如果结束
                                
                            .否则
                                
                            .如果结束
                            
                        .否则
                            
                        .如果结束
                        
                    .否则
                        
                    .如果结束
                    
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (牌数, 11))
    .如果 (等于 (相加 (新数组 [1], 1), 新数组 [2]))
        .如果 (等于 (相加 (新数组 [2], 1), 新数组 [3]))
            .如果 (等于 (相加 (新数组 [3], 1), 新数组 [4]))
                .如果 (等于 (相加 (新数组 [4], 1), 新数组 [5]))
                    .如果 (等于 (相加 (新数组 [5], 1), 新数组 [6]))
                        .如果 (等于 (相加 (新数组 [6], 1), 新数组 [7]))
                            .如果 (等于 (相加 (新数组 [7], 1), 新数组 [8]))
                                .如果 (等于 (相加 (新数组 [8], 1), 新数组 [9]))
                                    .如果 (等于 (相加 (新数组 [9], 1), 新数组 [10]))
                                        .如果 (等于 (相加 (新数组 [10], 1), 新数组 [11]))
                                            .如果 (大于或等于 (新数组 [11], 13))
                                                输出调试文本 (“你出的牌违规！！！！”)
                                            .否则
                                                输出调试文本 (“你出的牌是十一张十一顺子”)
                                                赋值 (允许出牌, 1)
                                                赋值 (扑克比点, 新数组 [1])
                                                赋值 (牌型, 11111111111)
                                            .如果结束
                                            
                                        .否则
                                            
                                        .如果结束
                                        
                                    .否则
                                        
                                    .如果结束
                                    
                                .否则
                                    
                                .如果结束
                                
                            .否则
                                
                            .如果结束
                            
                        .否则
                            
                        .如果结束
                        
                    .否则
                        
                    .如果结束
                    
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (牌数, 12))
    .如果 (等于 (相加 (新数组 [1], 1), 新数组 [2]))
        .如果 (等于 (相加 (新数组 [2], 1), 新数组 [3]))
            .如果 (等于 (相加 (新数组 [3], 1), 新数组 [4]))
                .如果 (等于 (相加 (新数组 [4], 1), 新数组 [5]))
                    .如果 (等于 (相加 (新数组 [5], 1), 新数组 [6]))
                        .如果 (等于 (相加 (新数组 [6], 1), 新数组 [7]))
                            .如果 (等于 (相加 (新数组 [7], 1), 新数组 [8]))
                                .如果 (等于 (相加 (新数组 [8], 1), 新数组 [9]))
                                    .如果 (等于 (相加 (新数组 [9], 1), 新数组 [10]))
                                        .如果 (等于 (相加 (新数组 [10], 1), 新数组 [11]))
                                            .如果 (等于 (相加 (新数组 [11], 1), 新数组 [12]))
                                                .如果 (大于或等于 (新数组 [12], 13))
                                                    输出调试文本 (“你出的牌违规！！！！”)
                                                .否则
                                                    输出调试文本 (“你出的牌是十二张十二顺子”)
                                                    赋值 (允许出牌, 1)
                                                    赋值 (扑克比点, 新数组 [1])
                                                    赋值 (牌型, 111111111111)
                                                .如果结束
                                                
                                            .否则
                                                
                                            .如果结束
                                            
                                        .否则
                                            
                                        .如果结束
                                        
                                    .否则
                                        
                                    .如果结束
                                    
                                .否则
                                    
                                .如果结束
                                
                            .否则
                                
                            .如果结束
                            
                        .否则
                            
                        .如果结束
                        
                    .否则
                        
                    .如果结束
                    
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .否则
        
    .如果结束
    .如果 (等于 (新数组 [1], 新数组 [2]))
        .如果 (等于 (新数组 [3], 新数组 [4]))
            .如果 (等于 (新数组 [5], 新数组 [6]))
                .如果 (等于 (新数组 [7], 新数组 [8]))
                    .如果 (等于 (新数组 [9], 新数组 [10]))
                        .如果 (等于 (新数组 [11], 新数组 [12]))
                            .如果 (等于 (相加 (新数组 [1], 1), 新数组 [3]))
                                .如果 (等于 (相加 (新数组 [3], 1), 新数组 [5]))
                                    .如果 (等于 (相加 (新数组 [5], 1), 新数组 [7]))
                                        .如果 (等于 (相加 (新数组 [7], 1), 新数组 [9]))
                                            .如果 (等于 (相加 (新数组 [9], 1), 新数组 [11]))
                                                .如果 (大于或等于 (新数组 [12], 13))
                                                    输出调试文本 (“你出的牌违规！！！！”)
                                                .否则
                                                    输出调试文本 (“你出的牌是六顺！”)
                                                    赋值 (允许出牌, 1)
                                                    赋值 (扑克比点, 新数组 [1])
                                                    赋值 (牌型, 101010101010)
                                                .如果结束
                                                
                                            .否则
                                                
                                            .如果结束
                                            
                                        .否则
                                            
                                        .如果结束
                                        
                                    .否则
                                        
                                    .如果结束
                                    
                                .否则
                                    
                                .如果结束
                                
                            .否则
                                
                            .如果结束
                            
                        .否则
                            
                        .如果结束
                        
                    .否则
                        
                    .如果结束
                    
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (大于或等于 (牌数, 13))
    输出调试文本 (“你出的牌违规！！！！”)
    赋值 (允许出牌, 0)
    赋值 (扑克比点, 0)
    赋值 (牌型, 0)
.否则
    
.如果结束


.子程序 上家地主, 空白型, , 
.局部变量 i, 整数型, , , 

.计次循环首 (20, i)
    赋值 (上家的牌 [i], 禁止, 假)
    赋值 (下家的牌 [i], 禁止, 真)
    赋值 (中家的牌 [i], 禁止, 真)
.计次循环尾 ()
加入成员 (上家牌点, 底牌牌点)
显示上家的牌 (上家牌点)
显示底牌 (底牌牌点)
连续赋值 (真, .可视, .可视, .禁止)
连续赋值 (假, .可视, .可视, .可视, .可视)
连续赋值 (假, .可视, .可视, .可视, .可视)
连续赋值 (假, .可视, .可视, .可视, .可视)
赋值 (.内容, 到文本 (底分))
赋值 (.内容, 到文本 (倍数))
赋值 (.内容, 到文本 (时间))
 ' 播放音乐 (#开始声音, )

赋值 (叫牌一分, 0)
赋值 (叫牌二分, 0)
赋值 (强制位置, 0)


.子程序 中家地主, 空白型, , 
.局部变量 i, 整数型, , , 

.计次循环首 (20, i)
    赋值 (上家的牌 [i], 禁止, 真)
    赋值 (下家的牌 [i], 禁止, 真)
    赋值 (中家的牌 [i], 禁止, 假)
.计次循环尾 ()
加入成员 (中家牌点, 底牌牌点)
显示中家的牌 (中家牌点)
显示底牌 (底牌牌点)
连续赋值 (真, .可视, .可视, .禁止)
连续赋值 (假, .可视, .可视, .可视, .可视)
连续赋值 (假, .可视, .可视, .可视, .可视)
连续赋值 (假, .可视, .可视, .可视, .可视)
赋值 (.内容, 到文本 (底分))
赋值 (.内容, 到文本 (倍数))
赋值 (.内容, 到文本 (时间))
 ' 播放音乐 (#开始声音, )

赋值 (叫牌一分, 0)
赋值 (叫牌二分, 0)
赋值 (强制位置, 0)


.子程序 下家地主, 空白型, , 
.局部变量 i, 整数型, , , 

.计次循环首 (20, i)
    赋值 (上家的牌 [i], 禁止, 真)
    赋值 (下家的牌 [i], 禁止, 假)
    赋值 (中家的牌 [i], 禁止, 真)
.计次循环尾 ()
加入成员 (下家牌点, 底牌牌点)
显示下家的牌 (下家牌点)
显示底牌 (底牌牌点)
连续赋值 (真, .可视, .可视, .禁止)
连续赋值 (假, .可视, .可视, .可视, .可视)
连续赋值 (假, .可视, .可视, .可视, .可视)
连续赋值 (假, .可视, .可视, .可视, .可视)
赋值 (.内容, 到文本 (底分))
赋值 (.内容, 到文本 (倍数))
赋值 (.内容, 到文本 (时间))
 ' 播放音乐 (#开始声音, )

赋值 (叫牌一分, 0)
赋值 (叫牌二分, 0)
赋值 (强制位置, 0)


.子程序 处理出的牌, 空白型, , 
.局部变量 i, 整数型, , , 
.局部变量 j, 整数型, , , 

.如果 (等于 (玩家序号, 1))
    .计次循环首 (取数组成员数 (出牌牌点), i)
        .计次循环首 (取数组成员数 (中家牌点), j)
            .如果真 (等于 (出牌牌点 [i], 中家牌点 [j]))
                删除成员 (中家牌点, j, )
                跳出循环 ()
            .如果真结束
            
        .计次循环尾 ()
    .计次循环尾 ()
.否则
    .如果 (等于 (玩家序号, 2))
        .计次循环首 (取数组成员数 (出牌牌点), i)
            .计次循环首 (取数组成员数 (下家牌点), j)
                .如果真 (等于 (出牌牌点 [i], 下家牌点 [j]))
                    删除成员 (下家牌点, j, )
                    跳出循环 ()
                .如果真结束
                
            .计次循环尾 ()
        .计次循环尾 ()
    .否则
        .如果 (等于 (玩家序号, 3))
            .计次循环首 (取数组成员数 (出牌牌点), i)
                .计次循环首 (取数组成员数 (上家牌点), j)
                    .如果真 (等于 (出牌牌点 [i], 上家牌点 [j]))
                        删除成员 (上家牌点, j, )
                        跳出循环 ()
                    .如果真结束
                    
                .计次循环尾 ()
            .计次循环尾 ()
        .否则
            
        .如果结束
        
    .如果结束
    
.如果结束


.子程序 _上家出牌按钮_被单击, 空白型, , 
.局部变量 i, 整数型, , , 

清除数组 (新数组)
清除数组 (出牌牌点)
清除数组 (已选择牌子)
赋值 (玩家序号, 3)
赋值 (允许出牌, 0)
赋值 (牌型, 0)
.如果 (等于 (允许出牌, 0))
    判断出牌 (上家牌点)
    显示上家的牌 (上家牌点)
.否则
    
.如果结束
.如果 (等于 (允许出牌, 1))
    加入成员 (出牌牌点, 已选择牌子)
    输出调试文本 (相加 (“你出的牌大小：”, 到文本 (扑克比点)))
    输出调试文本 (相加 (“上家的牌大小：”, 到文本 (下家扑克点)))
    .如果 (不等于 (牌型, 下家牌型))
        .如果 (等于 (牌型, 10000))
            .如果 (小于或等于 (扑克比点, 上家扑克点))
                鸣叫 ()
                输出调试文本 (“你出的牌小啦！！！！”)
            .否则
                显示出的牌 (出牌牌点)
                处理出的牌 ()
                
                显示上家的牌 (上家牌点)
                .如果 (等于 (上家剩牌, 0))
                    连续赋值 (假, .可视, .可视)
                    连续赋值 (假, .可视, .可视)
                    
                .否则
                    连续赋值 (真, .可视, .可视)
                    连续赋值 (假, .可视, .可视)
                    
                .如果结束
                
                
                .计次循环首 (20, i)
                    赋值 (中家的牌 [i], 禁止, 假)
                    赋值 (上家的牌 [i], 禁止, 真)
                .计次循环尾 ()
                赋值 (.禁止, 假)
                赋值 (上家牌型, 牌型)
                赋值 (上家扑克点, 扑克比点)
            .如果结束
            .如果 (等于 (扑克比点, 1000))
                输出调试文本 (“你出的牌是大小王炸弹，为最大牌！”)
                显示出的牌 (出牌牌点)
                处理出的牌 ()
                
                显示上家的牌 (上家牌点)
                .如果 (等于 (上家剩牌, 0))
                    连续赋值 (假, .可视, .可视)
                    连续赋值 (假, .可视, .可视)
                    
                .否则
                    连续赋值 (真, .可视, .可视)
                    连续赋值 (假, .可视, .可视)
                .如果结束
                .计次循环首 (20, i)
                    赋值 (中家的牌 [i], 禁止, 真)
                    赋值 (上家的牌 [i], 禁止, 假)
                .计次循环尾 ()
                赋值 (.禁止, 真)
                赋值 (牌型, 0)
                赋值 (允许出牌, 0)
                赋值 (中家牌型, 0)
                赋值 (上家牌型, 0)
                赋值 (中家扑克点, 0)
                赋值 (上家扑克点, 0)
                赋值 (下家牌型, 0)
                赋值 (下家扑克点, 0)
                赋值 (扑克比点, 0)
                赋值 (倍数, 相加 (倍数, 1))
                赋值 (.内容, 到文本 (底分))
                赋值 (.内容, 到文本 (倍数))
                
                播放音乐 (#炸声音, )
                
            .否则
                
            .如果结束
            .如果 (等于 (扑克比点, 100))
                .如果 (小于或等于 (四张炸弹比点, 上家四张炸弹))
                    鸣叫 ()
                     ' 输出调试文本 (“你出的牌小啦！！！！”)
                .否则
                    显示出的牌 (出牌牌点)
                    处理出的牌 ()
                    显示中家的牌 (上家牌点)
                    .如果 (等于 (上家剩牌, 0))
                        连续赋值 (假, .可视, .可视)
                        连续赋值 (假, .可视, .可视)
                        
                    .否则
                        连续赋值 (真, .可视, .可视)
                        连续赋值 (假, .可视, .可视)
                    .如果结束
                    .计次循环首 (20, i)
                        赋值 (中家的牌 [i], 禁止, 真)
                        赋值 (上家的牌 [i], 禁止, 假)
                    .计次循环尾 ()
                    赋值 (.禁止, 假)
                    赋值 (上家牌型, 牌型)
                    赋值 (上家扑克点, 扑克比点)
                     ' 我的四张炸弹 ＝ 四张炸弹比点
                    赋值 (上家四张炸弹, 四张炸弹比点)
                     ' 下家四张炸弹 ＝ 四张炸弹比点
                    赋值 (倍数, 相加 (倍数, 1))
                    赋值 (.内容, 到文本 (底分))
                    赋值 (.内容, 到文本 (倍数))
                    播放音乐 (#炸声音, )
                    赋值 (中家通关, 相加 (中家通关, 1))
                    赋值 (上家通关, -20)
                    赋值 (下家通关, -20)
                    .如果 (大于 (中家通关, 1))
                        赋值 (倍数, 相加 (倍数, 1))
                    .否则
                        
                    .如果结束
                    
                .如果结束
                
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        输出调试文本 (“你出的牌型不对！！！！”)
    .否则
        .如果 (小于或等于 (扑克比点, 下家扑克点))
            鸣叫 ()
            输出调试文本 (“你出的牌小啦！！！！”)
        .否则
            显示出的牌 (出牌牌点)
            处理出的牌 ()
            
            显示上家的牌 (上家牌点)
            .如果 (等于 (上家剩牌, 0))
                连续赋值 (假, .可视, .可视)
                连续赋值 (假, .可视, .可视)
                
            .否则
                连续赋值 (真, .可视, .可视)
                连续赋值 (假, .可视, .可视)
            .如果结束
            .计次循环首 (20, i)
                赋值 (中家的牌 [i], 禁止, 假)
                赋值 (上家的牌 [i], 禁止, 真)
            .计次循环尾 ()
            赋值 (.禁止, 假)
            赋值 (上家牌型, 牌型)
            赋值 (上家扑克点, 扑克比点)
        .如果结束
        
    .如果结束
    .如果 (等于 (上家牌型, 0))
        显示出的牌 (出牌牌点)
        处理出的牌 ()
        
        显示上家的牌 (上家牌点)
        .如果 (等于 (上家剩牌, 0))
            连续赋值 (假, .可视, .可视)
            连续赋值 (假, .可视, .可视)
            
        .否则
            连续赋值 (真, .可视, .可视)
            连续赋值 (假, .可视, .可视)
        .如果结束
        .计次循环首 (20, i)
            赋值 (中家的牌 [i], 禁止, 假)
            赋值 (上家的牌 [i], 禁止, 真)
        .计次循环尾 ()
        赋值 (.禁止, 假)
        赋值 (上家牌型, 牌型)
        赋值 (上家扑克点, 扑克比点)
    .否则
        
    .如果结束
    
.否则
    
.如果结束


.子程序 _中家出牌按钮_被单击, 空白型, , 
.局部变量 i, 整数型, , , 

清除数组 (新数组)
清除数组 (出牌牌点)
清除数组 (已选择牌子)
赋值 (玩家序号, 1)
赋值 (允许出牌, 0)
赋值 (牌型, 0)
.如果 (等于 (允许出牌, 0))
    判断出牌 (中家牌点)
    显示中家的牌 (中家牌点)
.否则
    
.如果结束
.如果 (等于 (允许出牌, 1))
    加入成员 (出牌牌点, 已选择牌子)
    显示中家的牌 (中家牌点)
    .如果 (不等于 (牌型, 上家牌型))
        .如果 (等于 (牌型, 10000))
            .如果 (小于或等于 (扑克比点, 上家扑克点))
                鸣叫 ()
            .否则
                显示出的牌 (出牌牌点)
                处理出的牌 ()
                显示中家的牌 (中家牌点)
                .如果 (不等于 (中家剩牌, 0))
                    连续赋值 (真, .可视, .可视)
                    连续赋值 (假, .可视, .可视)
                    .计次循环首 (20, i)
                        赋值 (中家的牌 [i], 禁止, 真)
                        赋值 (下家的牌 [i], 禁止, 假)
                    .计次循环尾 ()
                    
                .否则
                    
                .如果结束
                赋值 (.禁止, 假)
                赋值 (中家牌型, 牌型)
                赋值 (中家扑克点, 扑克比点)
                赋值 (中家通关, 相加 (中家通关, 1))
                赋值 (上家通关, -20)
                赋值 (下家通关, -20)
                .如果 (大于 (中家通关, 1))
                    赋值 (倍数, 相加 (倍数, 1))
                .否则
                    
                .如果结束
                
            .如果结束
            .如果 (等于 (扑克比点, 1000))
                显示出的牌 (出牌牌点)
                处理出的牌 ()
                显示中家的牌 (中家牌点)
                .如果 (不等于 (中家剩牌, 0))
                    连续赋值 (真, .可视, .可视)
                    连续赋值 (假, .可视, .可视)
                    .计次循环首 (20, i)
                        赋值 (中家的牌 [i], 禁止, 真)
                        赋值 (下家的牌 [i], 禁止, 假)
                    .计次循环尾 ()
                    
                .否则
                    
                .如果结束
                赋值 (.禁止, 真)
                赋值 (牌型, 0)
                赋值 (允许出牌, 0)
                赋值 (中家牌型, 0)
                赋值 (上家牌型, 0)
                赋值 (中家扑克点, 0)
                赋值 (上家扑克点, 0)
                赋值 (下家牌型, 0)
                赋值 (下家扑克点, 0)
                赋值 (扑克比点, 0)
                赋值 (不出次数, 0)
                赋值 (倍数, 相加 (倍数, 1))
                赋值 (.内容, 到文本 (底分))
                赋值 (.内容, 到文本 (倍数))
                赋值 (中家通关, 相加 (中家通关, 1))
                赋值 (上家通关, -20)
                赋值 (下家通关, -20)
                .如果 (大于 (中家通关, 1))
                    赋值 (倍数, 相加 (倍数, 1))
                .否则
                    
                .如果结束
                播放音乐 (#炸声音, )
            .否则
                
            .如果结束
            .如果 (等于 (扑克比点, 100))
                .如果 (小于或等于 (四张炸弹比点, 上家四张炸弹))
                    鸣叫 ()
                .否则
                    显示出的牌 (出牌牌点)
                    处理出的牌 ()
                    显示中家的牌 (中家牌点)
                    .如果 (不等于 (中家剩牌, 0))
                        连续赋值 (真, .可视, .可视)
                        连续赋值 (假, .可视, .可视)
                        .计次循环首 (20, i)
                            赋值 (中家的牌 [i], 禁止, 真)
                            赋值 (下家的牌 [i], 禁止, 假)
                        .计次循环尾 ()
                        
                    .否则
                        
                    .如果结束
                    赋值 (.禁止, 假)
                    赋值 (中家牌型, 牌型)
                    赋值 (中家扑克点, 扑克比点)
                    赋值 (中家四张炸弹, 四张炸弹比点)
                    赋值 (倍数, 相加 (倍数, 1))
                    赋值 (.内容, 到文本 (底分))
                    赋值 (.内容, 到文本 (倍数))
                    播放音乐 (#炸声音, )
                    赋值 (中家通关, 相加 (中家通关, 1))
                    赋值 (上家通关, -20)
                    赋值 (下家通关, -20)
                    .如果 (大于 (中家通关, 1))
                        赋值 (倍数, 相加 (倍数, 1))
                    .否则
                        
                    .如果结束
                    
                .如果结束
                播放音乐 (#炸声音, )
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .否则
        
    .如果结束
    .如果 (等于 (上家牌型, 0))
        显示出的牌 (出牌牌点)
        处理出的牌 ()
        显示中家的牌 (中家牌点)
        .如果 (不等于 (中家剩牌, 0))
            连续赋值 (真, .可视, .可视)
            连续赋值 (假, .可视, .可视)
            .计次循环首 (20, i)
                赋值 (中家的牌 [i], 禁止, 真)
                赋值 (下家的牌 [i], 禁止, 假)
            .计次循环尾 ()
            
        .否则
            
        .如果结束
        赋值 (.禁止, 假)
        赋值 (中家牌型, 牌型)
        赋值 (中家扑克点, 扑克比点)
        赋值 (中家通关, 相加 (中家通关, 1))
        赋值 (上家通关, -20)
        赋值 (下家通关, -20)
        .如果 (大于 (中家通关, 1))
            赋值 (倍数, 相加 (倍数, 1))
        .否则
            
        .如果结束
        
    .否则
        
    .如果结束
    
.否则
    
.如果结束


.子程序 _中家出牌按钮_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果 (等于 (.左边, 426))
    中家出牌按钮.左边 ＝ 425
.否则
    赋值 (.左边, 426)
.如果结束


.子程序 _下家出牌按钮_被单击, 空白型, , 
.局部变量 i, 整数型, , , 

清除数组 (新数组)
清除数组 (出牌牌点)
清除数组 (已选择牌子)
赋值 (玩家序号, 2)
赋值 (允许出牌, 0)
赋值 (牌型, 0)
.如果 (等于 (允许出牌, 0))
    判断出牌 (下家牌点)
    显示下家的牌 (下家牌点)
.否则
    
.如果结束
.如果 (等于 (允许出牌, 1))
    加入成员 (出牌牌点, 已选择牌子)
    .如果 (不等于 (牌型, 中家牌型))
        .如果 (等于 (牌型, 10000))
            .如果 (小于或等于 (扑克比点, 上家扑克点))
                鸣叫 ()
                输出调试文本 (“你出的牌小啦！！！！”)
            .否则
                显示出的牌 (出牌牌点)
                处理出的牌 ()
                显示下家的牌 (下家牌点)
                .如果 (等于 (下家剩牌, 0))
                    连续赋值 (假, .可视, .可视)
                    连续赋值 (假, .可视, .可视)
                    
                .否则
                    连续赋值 (真, .可视, .可视)
                    连续赋值 (假, .可视, .可视)
                .如果结束
                
                
                .计次循环首 (20, i)
                    赋值 (上家的牌 [i], 禁止, 假)
                    赋值 (下家的牌 [i], 禁止, 真)
                .计次循环尾 ()
                赋值 (.禁止, 假)
                赋值 (下家牌型, 牌型)
                赋值 (下家扑克点, 扑克比点)
            .如果结束
            .如果 (等于 (扑克比点, 1000))
                输出调试文本 (“你出的牌是大小王炸弹，为最大牌！”)
                显示出的牌 (出牌牌点)
                处理出的牌 ()
                显示下家的牌 (下家牌点)
                .如果 (等于 (下家剩牌, 0))
                    连续赋值 (假, .可视, .可视)
                    连续赋值 (假, .可视, .可视)
                    
                .否则
                    连续赋值 (真, .可视, .可视)
                    连续赋值 (假, .可视, .可视)
                .如果结束
                .计次循环首 (20, i)
                    赋值 (下家的牌 [i], 禁止, 假)
                    赋值 (上家的牌 [i], 禁止, 真)
                .计次循环尾 ()
                赋值 (.禁止, 真)
                赋值 (牌型, 0)
                赋值 (允许出牌, 0)
                赋值 (中家牌型, 0)
                赋值 (上家牌型, 0)
                赋值 (中家扑克点, 0)
                赋值 (上家扑克点, 0)
                赋值 (下家牌型, 0)
                赋值 (下家扑克点, 0)
                赋值 (扑克比点, 0)
                赋值 (不出次数, 0)
                赋值 (不出次数, 0)
                赋值 (下家牌型, 牌型)
                赋值 (倍数, 相加 (倍数, 1))
                赋值 (.内容, 到文本 (底分))
                赋值 (.内容, 到文本 (倍数))
                播放音乐 (#炸声音, )
                
            .否则
                
            .如果结束
            .如果 (等于 (扑克比点, 100))
                .如果 (小于或等于 (四张炸弹比点, 下家四张炸弹))
                    鸣叫 ()
                     ' 输出调试文本 (“你出的牌小啦！！！！”)
                .否则
                    显示出的牌 (出牌牌点)
                    处理出的牌 ()
                    显示下家的牌 (下家牌点)
                    .如果 (等于 (下家剩牌, 0))
                        连续赋值 (假, .可视, .可视)
                        连续赋值 (假, .可视, .可视)
                        
                    .否则
                        连续赋值 (真, .可视, .可视)
                        连续赋值 (假, .可视, .可视)
                    .如果结束
                    .计次循环首 (20, i)
                        赋值 (下家的牌 [i], 禁止, 假)
                        赋值 (上家的牌 [i], 禁止, 真)
                    .计次循环尾 ()
                    赋值 (.禁止, 假)
                    赋值 (下家牌型, 牌型)
                    赋值 (下家扑克点, 扑克比点)
                     ' 我的四张炸弹 ＝ 四张炸弹比点
                     ' 上家四张炸弹 ＝ 四张炸弹比点
                    赋值 (下家四张炸弹, 四张炸弹比点)
                    赋值 (倍数, 相加 (倍数, 1))
                    赋值 (.内容, 到文本 (底分))
                    赋值 (.内容, 到文本 (倍数))
                    播放音乐 (#炸声音, )
                    赋值 (中家通关, 相加 (中家通关, 1))
                    赋值 (上家通关, -20)
                    赋值 (下家通关, -20)
                    .如果 (大于 (中家通关, 1))
                        赋值 (倍数, 相加 (倍数, 1))
                    .否则
                        
                    .如果结束
                    
                .如果结束
                
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
        输出调试文本 (“你出的牌型不对！！！！”)
    .否则
        .如果 (小于或等于 (扑克比点, 中家扑克点))
            鸣叫 ()
            输出调试文本 (“你出的牌小啦！！！！”)
        .否则
            显示出的牌 (出牌牌点)
            处理出的牌 ()
            
            显示下家的牌 (下家牌点)
            .如果 (等于 (下家剩牌, 0))
                连续赋值 (假, .可视, .可视)
                连续赋值 (假, .可视, .可视)
                
            .否则
                连续赋值 (真, .可视, .可视)
                连续赋值 (假, .可视, .可视)
            .如果结束
            .计次循环首 (20, i)
                赋值 (上家的牌 [i], 禁止, 假)
                赋值 (下家的牌 [i], 禁止, 真)
            .计次循环尾 ()
            赋值 (.禁止, 假)
            赋值 (下家牌型, 牌型)
            赋值 (下家扑克点, 扑克比点)
        .如果结束
        
    .如果结束
    .如果 (等于 (中家牌型, 0))
        显示出的牌 (出牌牌点)
        处理出的牌 ()
        
        显示下家的牌 (下家牌点)
        .如果 (等于 (下家剩牌, 0))
            连续赋值 (假, .可视, .可视)
            连续赋值 (假, .可视, .可视)
            
        .否则
            连续赋值 (真, .可视, .可视)
            连续赋值 (假, .可视, .可视)
        .如果结束
        .计次循环首 (20, i)
            赋值 (上家的牌 [i], 禁止, 假)
            赋值 (下家的牌 [i], 禁止, 真)
        .计次循环尾 ()
        赋值 (.禁止, 假)
        赋值 (下家牌型, 牌型)
        赋值 (下家扑克点, 扑克比点)
    .否则
        
    .如果结束
    
.否则
    
.如果结束


.子程序 _上家叫一分_被单击, 空白型, , 
连续赋值 (真, .可视, .可视, .可视, .可视)
连续赋值 (假, .可视, .可视, .可视, .可视)
连续赋值 (假, .可视, .可视, .可视, .可视)
连续赋值 (真, .禁止, .禁止, .禁止)
赋值 (叫牌一分, 相加 (叫牌一分, 1))
赋值 (强制位置, 3)
赋值 (地主, 1)
赋值 (倍数, 1)
赋值 (底分, 1)
赋值 (时间, 30)
赋值 (.内容, 到文本 (底分))
赋值 (.内容, 到文本 (倍数))
赋值 (., 4)
相加 (_启动窗口., 263).未知支持库函数_26 (相加 (_启动窗口., 240), 相加 (“<image index=0><br><hr color=red><br>”, .内容, “ 叫<br>     一 分”), -1, )
 ' 播放音乐 (#一分男声音, )
播放音乐 (#一分女声音, )


.子程序 _中家叫一分_被单击, 空白型, , 
连续赋值 (假, .可视, .可视, .可视, .可视)
连续赋值 (假, .可视, .可视, .可视, .可视)
连续赋值 (真, .可视, .可视, .可视, .可视)
连续赋值 (真, .禁止, .禁止, .禁止)
赋值 (叫牌一分, 相加 (叫牌一分, 1))
赋值 (强制位置, 1)
赋值 (地主, 2)
赋值 (倍数, 1)
赋值 (底分, 1)
赋值 (.内容, 到文本 (底分))
赋值 (.内容, 到文本 (倍数))
赋值 (.内容, 到文本 (时间))
赋值 (., 10)
相加 (_启动窗口., 390).未知支持库函数_26 (相加 (_启动窗口., 400), 相加 (“<image index=0><br><hr color=red><br>”, .内容, “ 叫<br>     一 分”), -1, )
 ' 播放音乐 (#一分男声音, )
播放音乐 (#一分女声音, )

.子程序 _下家叫一分_被单击, 空白型, , 
连续赋值 (假, .可视, .可视, .可视, .可视)
连续赋值 (真, .可视, .可视, .可视, .可视)
连续赋值 (假, .可视, .可视, .可视, .可视)
连续赋值 (真, .禁止, .禁止, .禁止)
赋值 (叫牌一分, 相加 (叫牌一分, 1))
赋值 (强制位置, 2)
赋值 (地主, 3)
赋值 (倍数, 1)
赋值 (底分, 1)
赋值 (时间, 30)
赋值 (.内容, 到文本 (底分))
赋值 (.内容, 到文本 (倍数))
赋值 (.内容, 到文本 (时间))
赋值 (., 7)
相加 (_启动窗口., 515).未知支持库函数_26 (相加 (_启动窗口., 240), 相加 (“<image index=0><br><hr color=red><br>”, .内容, “ 叫<br>     一 分”), -1, )
 ' 播放音乐 (#一分男声音, )
播放音乐 (#一分女声音, )


.子程序 _上家叫二分_被单击, 空白型, , 
连续赋值 (真, .可视, .可视, .可视, .可视)
连续赋值 (假, .可视, .可视, .可视, .可视)
连续赋值 (假, .可视, .可视, .可视, .可视)
连续赋值 (真, .禁止, .禁止, .禁止)
连续赋值 (真, .禁止, .禁止, .禁止)
赋值 (叫牌二分, 相加 (叫牌二分, 1))
赋值 (叫牌一分, 0)
赋值 (强制位置, 3)
赋值 (地主, 1)
赋值 (倍数, 1)
赋值 (底分, 2)
赋值 (.内容, 到文本 (底分))
赋值 (.内容, 到文本 (倍数))
赋值 (.内容, 到文本 (时间))
赋值 (., 4)
相加 (_启动窗口., 263).未知支持库函数_26 (相加 (_启动窗口., 240), 相加 (“<image index=0><br><hr color=red><br>”, .内容, “ 叫<br>     二 分”), -1, )
 ' 播放音乐 (#二分男声音, )
播放音乐 (#二分女声音, )


.子程序 _中家叫二分_被单击, 空白型, , 
连续赋值 (假, .可视, .可视, .可视, .可视)
连续赋值 (真, .可视, .可视, .可视, .可视)
连续赋值 (真, .禁止, .禁止, .禁止)
连续赋值 (真, .禁止, .禁止, .禁止)
赋值 (叫牌二分, 相加 (叫牌二分, 1))
赋值 (叫牌一分, 0)
赋值 (强制位置, 1)
赋值 (地主, 2)
赋值 (倍数, 1)
赋值 (底分, 2)
赋值 (.内容, 到文本 (底分))
赋值 (.内容, 到文本 (倍数))
赋值 (.内容, 到文本 (时间))
赋值 (., 10)
相加 (_启动窗口., 390).未知支持库函数_26 (相加 (_启动窗口., 400), 相加 (“<image index=0><br><hr color=red><br>”, .内容, “ 叫<br>     二 分”), -1, )
 ' 播放音乐 (#二分男声音, )
播放音乐 (#二分女声音, )


.子程序 _下家叫二分_被单击, 空白型, , 
连续赋值 (假, .可视, .可视, .可视, .可视)
连续赋值 (真, .可视, .可视, .可视, .可视)
连续赋值 (假, .可视, .可视, .可视, .可视)
连续赋值 (真, .禁止, .禁止, .禁止)
连续赋值 (真, .禁止, .禁止, .禁止)
赋值 (叫牌二分, 相加 (叫牌二分, 1))
赋值 (叫牌一分, 0)
赋值 (强制位置, 2)
赋值 (地主, 3)
赋值 (倍数, 1)
赋值 (底分, 2)
赋值 (时间, 30)
赋值 (.内容, 到文本 (底分))
赋值 (.内容, 到文本 (倍数))
赋值 (.内容, 到文本 (时间))
赋值 (., 7)
相加 (_启动窗口., 515).未知支持库函数_26 (相加 (_启动窗口., 240), 相加 (“<image index=0><br><hr color=red><br>”, .内容, “ 叫<br>     二 分”), -1, )
 ' 播放音乐 (#二分男声音, )
播放音乐 (#二分女声音, )


.子程序 _上家叫三分_被单击, 空白型, , 
连续赋值 (假, .可视, .可视, .可视, .可视)
连续赋值 (假, .可视, .可视, .可视, .可视)
连续赋值 (假, .可视, .可视, .可视, .可视)
赋值 (叫牌一分, 0)
赋值 (地主, 1)
赋值 (倍数, 1)
赋值 (底分, 3)
赋值 (时间, 30)
赋值 (., 4)
相加 (_启动窗口., 263).未知支持库函数_26 (相加 (_启动窗口., 248), 相加 (“<image index=0><br><hr color=red><br>”, .内容, “ 叫<br>     三 分<br>  坐 地 主”), -1, )
 ' 播放音乐 (#三分男声音, )
播放音乐 (#三分女声音, )
延时 (100)
上家地主 ()


.子程序 _中家叫三分_被单击, 空白型, , 
连续赋值 (假, .可视, .可视, .可视, .可视)
连续赋值 (假, .可视, .可视, .可视, .可视)
连续赋值 (假, .可视, .可视, .可视, .可视)
赋值 (叫牌一分, 0)
赋值 (地主, 2)
赋值 (倍数, 1)
赋值 (底分, 3)
赋值 (时间, 30)
赋值 (., 10)
相加 (_启动窗口., 390).未知支持库函数_26 (相加 (_启动窗口., 415), 相加 (“<image index=0><br><hr color=red><br>”, .内容, “ 叫<br>     三 分<br>  坐 地 主”), -1, )
 ' 播放音乐 (#三分男声音, )
播放音乐 (#三分女声音, )
延时 (100)
中家地主 ()


.子程序 _下家叫三分_被单击, 空白型, , 
连续赋值 (假, .可视, .可视, .可视, .可视)
连续赋值 (假, .可视, .可视, .可视, .可视)
连续赋值 (假, .可视, .可视, .可视, .可视)
赋值 (地主, 3)
赋值 (倍数, 1)
赋值 (底分, 3)
赋值 (时间, 30)
赋值 (., 7)
相加 (_启动窗口., 515).未知支持库函数_26 (相加 (_启动窗口., 248), 相加 (“<image index=0><br><hr color=red><br>”, .内容, “ 叫<br>     三 分<br>  坐 地 主”), -1, )
 ' 播放音乐 (#三分男声音, )
播放音乐 (#三分女声音, )
赋值 (叫牌一分, 0)
延时 (100)
下家地主 ()

.子程序 _上家不叫牌_被单击, 空白型, , 
连续赋值 (真, .可视, .可视, .可视, .可视)
连续赋值 (假, .可视, .可视, .可视, .可视)
连续赋值 (假, .可视, .可视, .可视, .可视)
赋值 (.内容, 到文本 (底分))
赋值 (.内容, 到文本 (倍数))
赋值 (.内容, 到文本 (时间))
赋值 (., 4)
相加 (_启动窗口., 263).未知支持库函数_26 (相加 (_启动窗口., 240), 相加 (“<image index=0><br><hr color=red><br>”, .内容, “ <br>    没 叫 牌”), -1, )
 ' 播放音乐 (#不叫男声音, )
播放音乐 (#不叫女声音, )

赋值 (叫牌一分, 相加 (叫牌一分, 1))
赋值 (叫牌二分, 相加 (叫牌二分, 1))
赋值 (三次不叫, 相加 (三次不叫, 1))
.如果 (等于 (三次不叫, 3))
    _发牌按钮_被单击 ()
.否则
    
.如果结束
.如果 (等于 (叫牌一分, 3))
    .如果 (等于 (强制位置, 1))
        延时 (100)
        中家地主 ()
    .否则
        
    .如果结束
    .如果 (等于 (强制位置, 2))
        延时 (100)
        下家地主 ()
    .否则
        
    .如果结束
    .如果 (等于 (强制位置, 3))
        延时 (100)
        上家地主 ()
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (叫牌二分, 3))
    .如果 (等于 (强制位置, 1))
        延时 (100)
        中家地主 ()
    .否则
        
    .如果结束
    .如果 (等于 (强制位置, 2))
        延时 (100)
        下家地主 ()
    .否则
        
    .如果结束
    .如果 (等于 (强制位置, 3))
        延时 (100)
        上家地主 ()
    .否则
        
    .如果结束
    
.否则
    
.如果结束


.子程序 _中家不叫牌_被单击, 空白型, , 
连续赋值 (假, .可视, .可视, .可视, .可视)
连续赋值 (假, .可视, .可视, .可视, .可视)
连续赋值 (真, .可视, .可视, .可视, .可视)
赋值 (.内容, 到文本 (底分))
赋值 (.内容, 到文本 (倍数))
赋值 (.内容, 到文本 (时间))
赋值 (., 10)
相加 (_启动窗口., 390).未知支持库函数_26 (相加 (_启动窗口., 400), 相加 (“<image index=0><br><hr color=red><br>”, .内容, “ <br>    没 叫 牌”), -1, )
 ' 播放音乐 (#不叫男声音, )
播放音乐 (#不叫女声音, )
赋值 (叫牌一分, 相加 (叫牌一分, 1))
赋值 (叫牌二分, 相加 (叫牌二分, 1))
赋值 (三次不叫, 相加 (三次不叫, 1))
.如果 (等于 (三次不叫, 3))
    _发牌按钮_被单击 ()
.否则
    
.如果结束
.如果 (等于 (叫牌一分, 3))
    .如果 (等于 (强制位置, 1))
        延时 (100)
        中家地主 ()
    .否则
        
    .如果结束
    .如果 (等于 (强制位置, 2))
        延时 (100)
        下家地主 ()
    .否则
        
    .如果结束
    .如果 (等于 (强制位置, 3))
        延时 (100)
        上家地主 ()
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (叫牌二分, 3))
    .如果 (等于 (强制位置, 1))
        延时 (100)
        中家地主 ()
    .否则
        
    .如果结束
    .如果 (等于 (强制位置, 2))
        延时 (100)
        下家地主 ()
    .否则
        
    .如果结束
    .如果 (等于 (强制位置, 3))
        延时 (100)
        上家地主 ()
    .否则
        
    .如果结束
    
.否则
    
.如果结束



.子程序 _下家不叫牌_被单击, 空白型, , 
连续赋值 (假, .可视, .可视, .可视, .可视)
连续赋值 (真, .可视, .可视, .可视, .可视)
连续赋值 (假, .可视, .可视, .可视, .可视)
赋值 (.内容, 到文本 (底分))
赋值 (.内容, 到文本 (倍数))
赋值 (.内容, 到文本 (时间))
赋值 (., 7)
相加 (_启动窗口., 515).未知支持库函数_26 (相加 (_启动窗口., 240), 相加 (“<image index=0><br><hr color=red><br>”, .内容, “ <br>    没 叫 牌”), -1, )
 ' 播放音乐 (#不叫男声音, )
播放音乐 (#不叫女声音, )

赋值 (叫牌一分, 相加 (叫牌一分, 1))
赋值 (叫牌二分, 相加 (叫牌二分, 1))
赋值 (三次不叫, 相加 (三次不叫, 1))
.如果 (等于 (三次不叫, 3))
    _发牌按钮_被单击 ()
.否则
    
.如果结束
.如果 (等于 (叫牌一分, 3))
    .如果 (等于 (强制位置, 1))
        延时 (100)
        中家地主 ()
    .否则
        
    .如果结束
    .如果 (等于 (强制位置, 2))
        延时 (100)
        下家地主 ()
    .否则
        
    .如果结束
    .如果 (等于 (强制位置, 3))
        延时 (100)
        上家地主 ()
    .否则
        
    .如果结束
    
.否则
    
.如果结束
.如果 (等于 (叫牌二分, 3))
    .如果 (等于 (强制位置, 1))
        延时 (100)
        中家地主 ()
    .否则
        
    .如果结束
    .如果 (等于 (强制位置, 2))
        延时 (100)
        下家地主 ()
    .否则
        
    .如果结束
    .如果 (等于 (强制位置, 3))
        延时 (100)
        上家地主 ()
    .否则
        
    .如果结束
    
.否则
    
.如果结束


.子程序 _上家不出按钮_被单击, 空白型, , 
.局部变量 i, 整数型, , , 

播放音乐 (#过男声音, )

连续赋值 (真, .可视, .可视)
连续赋值 (假, .可视, .可视)
.计次循环首 (20, i)
    赋值 (中家的牌 [i], 禁止, 假)
    赋值 (上家的牌 [i], 禁止, 真)
.计次循环尾 ()
显示上家的牌 (上家牌点)
赋值 (上家牌型, 下家牌型)
赋值 (上家扑克点, 下家扑克点)
赋值 (不出次数, 相加 (不出次数, 1))
.如果 (等于 (不出次数, 2))
    赋值 (允许出牌, 0)
    赋值 (牌型, 0)
    赋值 (上家牌型, 0)
.否则
    
.如果结束


.子程序 _中家不出按钮_被单击, 空白型, , 
.局部变量 i, 整数型, , , 

播放音乐 (#过男声音, )
连续赋值 (真, .可视, .可视)
连续赋值 (假, .可视, .可视)
.计次循环首 (20, i)
    赋值 (中家的牌 [i], 禁止, 真)
    赋值 (下家的牌 [i], 禁止, 假)
.计次循环尾 ()
显示中家的牌 (中家牌点)
赋值 (中家牌型, 上家牌型)
赋值 (中家扑克点, 上家扑克点)
赋值 (不出次数, 相加 (不出次数, 1))
.如果 (等于 (不出次数, 2))
    赋值 (允许出牌, 0)
    赋值 (牌型, 0)
    赋值 (中家牌型, 0)
.否则
    
.如果结束


.子程序 _下家不出按钮_被单击, 空白型, , 
.局部变量 i, 整数型, , , 

播放音乐 (#过男声音, )

连续赋值 (真, .可视, .可视)
连续赋值 (假, .可视, .可视)
.计次循环首 (20, i)
    赋值 (上家的牌 [i], 禁止, 假)
    赋值 (下家的牌 [i], 禁止, 真)
.计次循环尾 ()
显示下家的牌 (下家牌点)
赋值 (下家牌型, 中家牌型)
赋值 (下家扑克点, 中家扑克点)
赋值 (不出次数, 相加 (不出次数, 1))
.如果 (等于 (不出次数, 2))
    赋值 (允许出牌, 0)
    赋值 (牌型, 0)
    赋值 (下家牌型, 0)
.否则
    
.如果结束


.子程序 电脑托管, 空白型, , 
.参数 参数, 整数型, 数组, 

.局部变量 i, 整数型, , , 
.局部变量 我的顶边, 整数型, , , 
.局部变量 上家左边, 整数型, , , 
.局部变量 下家左边, 整数型, , , 
.局部变量 出牌数, 整数型, , , 

赋值 (我的顶边, .顶边)
赋值 (上家左边, .左边)
赋值 (下家左边, .左边)

数组排序 (选择牌, )
.如果 (等于 (牌型, 1))
    .计次循环首 (取数组成员数 (中家牌点), i)
        .如果真 (大于 (判断牌值 (中家牌点 [i]), 选择牌 [1]))
            赋值 (中家的牌 [i], 顶边, 相减 (我的顶边, 20))
            加入成员 (电脑出牌, 判断牌值 (中家牌点 [i]))
        .如果真结束
        
    .计次循环尾 ()
    
    
    
.否则
    
.如果结束
.如果 (等于 (牌型, 2))
    
    
.否则
    
.如果结束
.如果 (等于 (牌型, 3))
    
    
    
    
    
.否则
    
.如果结束

数组排序 (电脑出牌, )

.子程序 电脑托管2, 空白型, , 
.参数 参数, 整数型, 数组, 

.局部变量 i, 整数型, , , 
.局部变量 我的顶边, 整数型, , , 
.局部变量 上家左边, 整数型, , , 
.局部变量 下家左边, 整数型, , , 
.局部变量 出牌数, 整数型, , , 

赋值 (我的顶边, .顶边)
赋值 (上家左边, .左边)
赋值 (下家左边, .左边)
.计次循环首 (取数组成员数 (中家牌点), i)
    
    赋值 (中家的牌 [电脑出牌] [1], 顶边, 相减 (我的顶边, 20))
    
    
    
    
.计次循环尾 ()




.如果 (等于 (牌型, 2))
    
    
.否则
    
.如果结束
.如果 (等于 (牌型, 3))
    
    
    
    
    
.否则
    
.如果结束


.子程序 _ceshi按钮1_被单击, 空白型, , 
 ' 电脑托管 (我的牌点)

.子程序 _设置_被选择, 空白型, , 
载入 (设置窗口, , 真)


.子程序 _退出_被选择, 空白型, , 
销毁 ()


.子程序 _打开帮助_被选择, 空白型, , 
.如果 (文件是否存在 (相加 (取运行目录 (), “\帮助.htm”)))
    未知支持库函数_6 (相加 (取运行目录 (), “\帮助.htm”), , )
.否则
    信息框 (相加 (取运行目录 (), “\帮助.htm”, #换行符, “对不起,找不到帮助文件!”), 0, )
.如果结束



.子程序 _关于_被选择, 空白型, , 
载入 (关于窗口, , 真)


.子程序 _开局_被选择, 空白型, , 
_发牌按钮_被单击 ()

.子程序 _重新开局_被选择, 空白型, , 
_发牌按钮_被单击 ()

.子程序 _隐藏窗口_被选择, 空白型, , 
赋值 (_启动窗口., 假)
赋值 (_启动窗口., 1)


.子程序 _显示窗口_被选择, 空白型, , 
赋值 (_启动窗口., 真)
赋值 (_启动窗口., 0)


.子程序 _显示隐藏_被选择, 空白型, , 
.如果 (等于 (_启动窗口., 真))
    _隐藏窗口_被选择 ()
.否则
    _显示窗口_被选择 ()
.如果结束


.子程序 __启动窗口_托盘事件, 空白型, , 
.参数 操作类型, 整数型, , 

.如果真 (等于 (操作类型, 2)) ' 2 即 #左键双击
    显示主程序 ()
.如果真结束
.如果真 (等于 (操作类型, 3)) ' 3 即 #右键单击
    弹出托盘菜单 ()
.如果真结束


.子程序 显示主程序, 空白型, , 
置托盘图标 ()
赋值 (_启动窗口., 真)
赋值 (_启动窗口., 0)

.子程序 __启动窗口_可否被关闭, 逻辑型, , 
置托盘图标 ({  }, )
销毁 ()
结束 ()

.子程序 _工具条_被单击, 空白型, , 
.参数 按钮索引, 整数型, , 

.判断开始 (等于 (按钮索引, 0))
    赋值 (., _启动窗口.)
    弹出托盘菜单 ()
    赋值 (., 相加 (_启动窗口., 100))
    
.判断 (等于 (按钮索引, 1))
    _载入记录_被选择 ()
.判断 (等于 (按钮索引, 2))
    _保存记录_被选择 ()
.判断 (等于 (按钮索引, 3))
     ' 代码未写
.判断 (等于 (按钮索引, 4))
    载入 (关于窗口, , 假)
.默认
    
.判断结束
.判断开始 (等于 (按钮索引, 5))
     ' 代码未写
.默认
    
.判断结束


.子程序 _ceshi按钮2_被单击, 空白型, , 
 ' 星
 ' 复制窗口组件 (星, 5)

.窗口程序集 窗口程序集1, , , 

.子程序 _按钮1_被单击, 空白型, , 


.子程序 _按钮2_被单击, 空白型, , 


.窗口程序集 窗口程序集2, , , 

.子程序 _关于窗口_创建完毕, 空白型, , 
赋值 (.内容, #软件名称)
赋值 (.内容, “版本号为：V2.0”)
赋值 (.内容, “本软件免费”)



.子程序 _关于窗口_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

销毁 ()

.子程序 _关于窗口_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

销毁 ()

.子程序 _关于图片框_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

销毁 ()


 ' 不属于任何一个程序集、类模块的函数：
