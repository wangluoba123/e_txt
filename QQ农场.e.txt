 ' 文件类型：Windows窗口程序

 ' 程序名称：QQ农场助手
 ' 程序描述：QQ农场助手
@备注:
QQ农场助手
 ' 程序作者：喝雪碧的虾
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：喝雪碧的虾
 ' 版本号：2.2
 ' 创建号：1.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 369
    高度 = 224
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    窗口类名 = “”
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “系统之家 QQ农场助手8.0  --登陆界面”
    帮助文件名 = “”

窗口 窗口_主要
    左边 = 50
    顶边 = 50
    宽度 = 589
    高度 = 620
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    窗口类名 = “”
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “系统之家 QQ农场助手8.0修正版 支持QQ空间及校友 防检测”
    帮助文件名 = “”

窗口 窗口_验证码
    左边 = 50
    顶边 = 50
    宽度 = 355
    高度 = 174
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 真
    保持标题栏激活 = 假
    窗口类名 = “”
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “请输入验证码:”
    帮助文件名 = “”

窗口 窗口_我的
    左边 = 50
    顶边 = 50
    宽度 = 320
    高度 = 444
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    窗口类名 = “”
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “商店-背包-仓库”
    帮助文件名 = “”



.常量 检测, "“{"errorContent":"你已”", , 
.图片 图标1, " ' 已保存到：D:\易语言学习\Data\QQ农场.e\图标1", , 
.图片 skink, " ' 已保存到：D:\易语言学习\Data\QQ农场.e\skink", , 
.图片 jinfu, " ' 已保存到：D:\易语言学习\Data\QQ农场.e\jinfu", , 
.图片 SkinH_EL, " ' 已保存到：D:\易语言学习\Data\QQ农场.e\SkinH_EL", , 
.常量 md5, "“STR_UINTIP=1;STR_QLOGIN_VERSION_ERR=2;STR_NO_UIN=3;STR_NO_PWD=4;STR_NO_VCODE=5;STR_INV_UIN=6;STR_INV_VCODE=7;STR_UIN=8;STR_PWD=9;STR_VCODE=10;STR_VCODE_TIP=11;STR_CHANGE_VCODE=12;STR_REMEMBER_PWD=13;STR_1_DAY=14;STR_1_WEEK=15;STR_1_MONTH=16;STR_HALF_YEAR=17;STR_1_YEAR=18;STR_FORGET_PWD=19;STR_LOGIN=20;STR_RESET=21;STR_SWITCH_QLOGIN=22;STR_LOGIN_TITLE=23;STR_QLOGIN_INTRO=24;STR_QLOGINING=25;STR_QLOGIN_HELP=26;STR_SWITCH_NORMAL=27;STR_QLOGIN=28;STR_QLOGIN_BUSY=29;STR_QLOGIN_OFFLINE=30;STR_QLOGIN_OTHER_ERR=31;STR_BACK=32;STR_RETRY=33;function ptui_str(A){A-=1;if(A>=0&&A<g_strArray.length){return g_strArray[A]}return""}function ptui_mapStr(B){for(i=0;i<B.length;i++){var A=document.getElementById(B[i][1]);if(A!=null){if("A"==A.nodeName||"U"==A.nodeName||"OPTION"==A.nodeName){if(A.innerHTML==""){A.innerHTML=ptui_str(B[i][0])}}else{if("INPUT"==A.nodeName){if(A.value==""){A.value=ptui_str(B[i][0])}}else{if("IMG"==A.nodeName){A.alt=ptui_str(B[i][0])}}}}}}function ptui_onUserFocus(C,A){var B=document.getElementById(C);if(ptui_str(STR_UINTIP)==B.value){B.value=""}B.style.color=A}function ptui_onUserBlue(C,A){var B=document.getElementById(C);if(""==B.value){B.value=ptui_str(STR_UINTIP);B.style.color=A}}var g_speedArray=new Array();function ptui_setSpeed(B){if(B<=0){return }var A=g_speedArray.length;g_speedArray[A]=new Array(B,new Date())}function ptui_reportSpeed(B){if(Math.random()>0.1){return }url="http://isdspeed.qq.com/cgi-bin/r.cgi?flag1=6000&flag2=1&flag3=1";for(var A=0;A<g_speedArray.length;A++){url=url+"&"+g_speedArray[A][0]+"="+(g_speedArray[A][1]-B)}imgSendTimePoint=new Image();imgSendTimePoint.src=url}function ptui_showDiv(A,B){var C=document.getElementById(A);if(null==C){return }if(B){C.style.display="block"}else{C.style.display="none"}}function ptui_notifySize(B){try{obj=document.getElementById(B);if(obj){if(parent.ptlogin2_onResize){width=1;height=1;if(obj.offsetWidth>0){width=obj.offsetWidth}if(obj.offsetHeight>0){height=obj.offsetHeight}parent.ptlogin2_onResize(width,height)}}}catch(A){}}function ptui_notifyClose(){try{if(parent.ptlogin2_onClose){parent.ptlogin2_onClose()}else{if(top==this){window.close()}}}catch(A){window.close()}}function ptui_setUinColor(D,B,A){var C=document.getElementById(D);if(ptui_str(STR_UINTIP)==C.value){C.style.color=A}else{C.style.color=B}}function ptui_onEnableLLogin(B){var A=B.low_login_enable;var C=B.low_login_hour;if(A!=null&&C!=null){C.disabled=!A.checked}}function ptui_changeImgEx(D,C,F,E){var A=document.getElementById("imgVerify");if(A!=null){A.src=E+"?aid="+C+"&"+Math.random();var B=document.getElementById("verifycode");if(B!=null&&B.disabled==false&&F){B.focus();B.select()}}}function ptui_changeImg(B,A,C){ptui_changeImgEx(B,A,C,"http://ptlogin2."+B+"/getimage")}function ptui_changeImgHttps(B,A,C){ptui_changeImgEx(B,A,C,"./getimage")}function ptui_checkQQUin(qquin){if(qquin.length==0){return false}if(!(new RegExp(/^\w+((-\w+)|(\.\w+))*\@[A-Za-z0-9]+((\.|-)[A-Za-z0-9]+)*\.[A-Za-z0-9]+$/).test(qquin))){if(qquin.length<5||qquin.length>12||parseInt(qquin)<1000){return false}var exp=eval("/^[0-9]*$/");return exp.test(qquin)}return true}function ptui_checkPwdOnInput(){if(document.getElementById("p").value.length>=16){return false}return true}function ptui_onLogin(A){try{if(parent.ptlogin2_onLogin){if(!parent.ptlogin2_onLogin()){return false}}if(parent.ptlogin2_onLoginEx){var D=A.u.value;var B=A.verifycode.value;if(ptui_str(STR_UINTIP)==D){D=""}if(!parent.ptlogin2_onLoginEx(D,B)){return false}}}catch(C){}return ptui_checkValidate(A)}function ptui_onLoginEx(B,C){if(ptui_onLogin(B)){var A=new Date();A.setHours(A.getHours()+24*30);setCookie("ptui_loginuin",B.u.value,A,"/","ui.ptlogin2."+C);return true}return false}function ptui_setDefUin(B,A){if(A==""||A==null){A=getCookie("ptui_loginuin")}if(A!=""&&A!=null){B.u.value=A}}function ptui_onReset(A){try{if(parent.ptlogin2_onReset){if(!parent.ptlogin2_onReset()){return false}}}catch(B){}return true}function ptui_initFocus(B){try{var A=B.u;var D=B.p;var E=B.verifycode;if(A.value==""||ptui_str(STR_UINTIP)==A.value){A.focus();return }if(D.value==""){D.focus();return }if(E.value==""){E.focus()}}catch(C){}}function ptui_checkValidate(B){var A=B.u;var C=B.p;var D=B.verifycode;if(A.value==""||ptui_str(STR_UINTIP)==A.value){alert(ptui_str(STR_NO_UIN));A.focus();return false}if(C.value==""){alert(ptui_str(STR_NO_PWD));C.focus();return false}if(D.value==""){alert(ptui_str(STR_NO_VCODE));D.focus();return false}if(!ptui_checkQQUin(A.value)){alert(ptui_str(STR_INV_UIN));A.focus();A.select();return false}if(D.value.length!=4){alert(ptui_str(STR_INV_VCODE));D.focus();D.select();return false}C.setAttribute("maxlength","32");preprocess(B);return true}function getCookieVal(B){var A=document.cookie.indexOf(";",B);if(A==-1){A=document.cookie.length}return unescape(document.cookie.substring(B,A))}function getCookie(D){var B=D+"=";var F=B.length;var A=document.cookie.length;var E=0;while(E<A){var C=E+F;if(document.cookie.substring(E,C)==B){return getCookieVal(C)}E=document.cookie.indexOf(" ",E)+1;if(E==0){break}}return null}function setCookie(C,E){var A=setCookie.arguments;var H=setCookie.arguments.length;var B=(2<H)?A[2]:null;var G=(3<H)?A[3]:null;var D=(4<H)?A[4]:null;var F=(5<H)?A[5]:null;document.cookie=C+"="+escape(E)+((B==null)?" ":(";expires ="+B.toGMTString()))+((G==null)?"  ":(";path = "+G))+((D==null)?" ":(";domain ="+D))+((F==true)?";secure":" ")}var hexcase=1;var b64pad="";var chrsz=8;var mode=32;function preprocess(A){var B="";B+=A.verifycode.value;B=B.toUpperCase();A.p.value=md5(md5_3(A.p.value)+B);return true}function md5_3(B){var A=new Array;A=core_md5(str2binl(B),B.length*chrsz);A=core_md5(A,16*chrsz);A=core_md5(A,16*chrsz);return binl2hex(A)}function md5(A){return hex_md5(A)}function hex_md5(A){return binl2hex(core_md5(str2binl(A),A.length*chrsz))}function b64_md5(A){return binl2b64(core_md5(str2binl(A),A.length*chrsz))}function str_md5(A){return binl2str(core_md5(str2binl(A),A.length*chrsz))}function hex_hmac_md5(A,B){return binl2hex(core_hmac_md5(A,B))}function b64_hmac_md5(A,B){return binl2b64(core_hmac_md5(A,B))}function str_hmac_md5(A,B){return binl2str(core_hmac_md5(A,B))}function md5_vm_test(){return hex_md5("abc")=="900150983cd24fb0d6963f7d28e17f72"}function core_md5(K,F){K[F>>5]|=128<<((F)%32);K[(((F+64)>>>9)<<4)+14]=F;var J=1732584193;var I=-271733879;var H=-1732584194;var G=271733878;for(var C=0;C<K.length;C+=16){var E=J;var D=I;var B=H;var A=G;J=md5_ff(J,I,H,G,K[C+0],7,-680876936);G=md5_ff(G,J,I,H,K[C+1],12,-389564586);H=md5_ff(H,G,J,I,K[C+2],17,606105819);I=md5_ff(I,H,G,J,K[C+3],22,-1044525330);J=md5_ff(J,I,H,G,K[C+4],7,-176418897);G=md5_ff(G,J,I,H,K[C+5],12,1200080426);H=md5_ff(H,G,J,I,K[C+6],17,-1473231341);I=md5_ff(I,H,G,J,K[C+7],22,-45705983);J=md5_ff(J,I,H,G,K[C+8],7,1770035416);G=md5_ff(G,J,I,H,K[C+9],12,-1958414417);H=md5_ff(H,G,J,I,K[C+10],17,-42063);I=md5_ff(I,H,G,J,K[C+11],22,-1990404162);J=md5_ff(J,I,H,G,K[C+12],7,1804603682);G=md5_ff(G,J,I,H,K[C+13],12,-40341101);H=md5_ff(H,G,J,I,K[C+14],17,-1502002290);I=md5_ff(I,H,G,J,K[C+15],22,1236535329);J=md5_gg(J,I,H,G,K[C+1],5,-165796510);G=md5_gg(G,J,I,H,K[C+6],9,-1069501632);H=md5_gg(H,G,J,I,K[C+11],14,643717713);I=md5_gg(I,H,G,J,K[C+0],20,-373897302);J=md5_gg(J,I,H,G,K[C+5],5,-701558691);G=md5_gg(G,J,I,H,K[C+10],9,38016083);H=md5_gg(H,G,J,I,K[C+15],14,-660478335);I=md5_gg(I,H,G,J,K[C+4],20,-405537848);J=md5_gg(J,I,H,G,K[C+9],5,568446438);G=md5_gg(G,J,I,H,K[C+14],9,-1019803690);H=md5_gg(H,G,J,I,K[C+3],14,-187363961);I=md5_gg(I,H,G,J,K[C+8],20,1163531501);J=md5_gg(J,I,H,G,K[C+13],5,-1444681467);G=md5_gg(G,J,I,H,K[C+2],9,-51403784);H=md5_gg(H,G,J,I,K[C+7],14,1735328473);I=md5_gg(I,H,G,J,K[C+12],20,-1926607734);J=md5_hh(J,I,H,G,K[C+5],4,-378558);G=md5_hh(G,J,I,H,K[C+8],11,-2022574463);H=md5_hh(H,G,J,I,K[C+11],16,1839030562);I=md5_hh(I,H,G,J,K[C+14],23,-35309556);J=md5_hh(J,I,H,G,K[C+1],4,-1530992060);G=md5_hh(G,J,I,H,K[C+4],11,1272893353);H=md5_hh(H,G,J,I,K[C+7],16,-155497632);I=md5_hh(I,H,G,J,K[C+10],23,-1094730640);J=md5_hh(J,I,H,G,K[C+13],4,681279174);G=md5_hh(G,J,I,H,K[C+0],11,-358537222);H=md5_hh(H,G,J,I,K[C+3],16,-722521979);I=md5_hh(I,H,G,J,K[C+6],23,76029189);J=md5_hh(J,I,H,G,K[C+9],4,-640364487);G=md5_hh(G,J,I,H,K[C+12],11,-421815835);H=md5_hh(H,G,J,I,K[C+15],16,530742520);I=md5_hh(I,H,G,J,K[C+2],23,-995338651);J=md5_ii(J,I,H,G,K[C+0],6,-198630844);G=md5_ii(G,J,I,H,K[C+7],10,1126891415);H=md5_ii(H,G,J,I,K[C+14],15,-1416354905);I=md5_ii(I,H,G,J,K[C+5],21,-57434055);J=md5_ii(J,I,H,G,K[C+12],6,1700485571);G=md5_ii(G,J,I,H,K[C+3],10,-1894986606);H=md5_ii(H,G,J,I,K[C+10],15,-1051523);I=md5_ii(I,H,G,J,K[C+1],21,-2054922799);J=md5_ii(J,I,H,G,K[C+8],6,1873313359);G=md5_ii(G,J,I,H,K[C+15],10,-30611744);H=md5_ii(H,G,J,I,K[C+6],15,-1560198380);I=md5_ii(I,H,G,J,K[C+13],21,1309151649);J=md5_ii(J,I,H,G,K[C+4],6,-145523070);G=md5_ii(G,J,I,H,K[C+11],10,-1120210379);H=md5_ii(H,G,J,I,K[C+2],15,718787259);I=md5_ii(I,H,G,J,K[C+9],21,-343485551);J=safe_add(J,E);I=safe_add(I,D);H=safe_add(H,B);G=safe_add(G,A)}if(mode==16){return Array(I,H)}else{return Array(J,I,H,G)}}function md5_cmn(F,C,B,A,E,D){return safe_add(bit_rol(safe_add(safe_add(C,F),safe_add(A,D)),E),B)}function md5_ff(C,B,G,F,A,E,D){return md5_cmn((B&G)|((~B)&F),C,B,A,E,D)}function md5_gg(C,B,G,F,A,E,D){return md5_cmn((B&F)|(G&(~F)),C,B,A,E,D)}function md5_hh(C,B,G,F,A,E,D){return md5_cmn(B^G^F,C,B,A,E,D)}function md5_ii(C,B,G,F,A,E,D){return md5_cmn(G^(B|(~F)),C,B,A,E,D)}function core_hmac_md5(C,F){var E=str2binl(C);if(E.length>16){E=core_md5(E,C.length*chrsz)}var A=Array(16),D=Array(16);for(var B=0;B<16;B++){A[B]=E[B]^909522486;D[B]=E[B]^1549556828}var G=core_md5(A.concat(str2binl(F)),512+F.length*chrsz);return core_md5(D.concat(G),512+128)}function safe_add(A,D){var C=(A&65535)+(D&65535);var B=(A>>16)+(D>>16)+(C>>16);return(B<<16)|(C&65535)}function bit_rol(A,B){return(A<<B)|(A>>>(32-B))}function str2binl(D){var C=Array();var A=(1<<chrsz)-1;for(var B=0;B<D.length*chrsz;B+=chrsz){C[B>>5]|=(D.charCodeAt(B/chrsz)&A)<<(B%32)}return C}function binl2str(C){var D="";var A=(1<<chrsz)-1;for(var B=0;B<C.length*32;B+=chrsz){D+=String.fromCharCode((C[B>>5]>>>(B%32))&A)}return D}function binl2hex(C){var B=hexcase?"0123456789ABCDEF":"0123456789abcdef";var D="";for(var A=0;A<C.length*4;A++){D+=B.charAt((C[A>>2]>>((A%4)*8+4))&15)+B.charAt((C[A>>2]>>((A%4)*8))&15)}return D}function binl2b64(D){var C="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";var F="";for(var B=0;B<D.length*4;B+=3){var E=(((D[B>>2]>>8*(B%4))&255)<<16)|(((D[B+1>>2]>>8*((B+1)%4))&255)<<8)|((D[B+2>>2]>>8*((B+2)%4))&255);for(var A=0;A<4;A++){if(B*8+A*6>D.length*32){F+=b64pad}else{F+=C.charAt((E>>6*(3-A))&63)}}}return F};/*  |xGv00|ccbfd68b5fceb62707a9e4ce87b8c813 */”", , 
.常量 画文本_格式化, "10", 隐藏, 
.常量 画文本_左对齐, "0", 隐藏, 
.常量 画文本_横向居中, "1", 隐藏, 
.常量 画文本_右对齐, "2", 隐藏, 
.常量 画文本_顶对齐, "0", 隐藏, 
.常量 画文本_纵向居中, "4", 隐藏, 
.常量 画文本_底对齐, "8", 隐藏, 
.常量 事件_被双击, "515", 隐藏, 
.常量 事件_按下某键, "256", 隐藏, 
.常量 事件_放开某键, "257", 隐藏, 
.常量 事件_鼠标左键被按下, "513", 隐藏, 
.常量 事件_鼠标左键被放开, "514", 隐藏, 
.常量 事件_鼠标右键被按下, "516", 隐藏, 
.常量 事件_鼠标右键被放开, "517", 隐藏, 
.常量 事件_鼠标中键被按下, "519", 隐藏, 
.常量 事件_鼠标中键被放开, "520", 隐藏, 
.常量 内存_不变的数值, "-1", 隐藏, 
.常量 内存_变大的数值, "-2", 隐藏, 
.常量 内存_变小的数值, "-3", 隐藏, 
.常量 内存_改变的数值, "-4", 隐藏, 
.常量 左键_, "1", 隐藏, 
.常量 中键_, "3", 隐藏, 
.常量 中键上滚动_, "4", 隐藏, 
.常量 中键下滚动_, "5", 隐藏, 
.常量 右键_, "2", 隐藏, 
.常量 单击_, "1", 隐藏, 
.常量 按键_, "1", 隐藏, 
.常量 双击_, "2", 隐藏, 
.常量 按下_, "3", 隐藏, 
.常量 放开_, "4", 隐藏, 
.常量 消息_复制, "769", 隐藏, 
.常量 消息_粘贴, "770", 隐藏, 
.常量 消息_全选, "177", 隐藏, 
.常量 消息_清空, "12", 隐藏, 
.常量 消息_删除, "768", 隐藏, 
.常量 消息_剪切, "771", 隐藏, 
.常量 消息_撤销, "772", 隐藏, 
.常量 消息_获得焦点, "7", 隐藏, 
.常量 消息_失去焦点, "8", 隐藏, 
.常量 消息_单击, "245", 隐藏, 
.常量 消息_右击, "123", 隐藏, 
.常量 消息_销毁, "16", 隐藏, 
.常量 消息_退出, "1", 隐藏, 
.常量 消息_结束, "25", 隐藏, 
.常量 备份_, "“SeBackupPrivilege”", 隐藏, 系统权限
.常量 启动_, "“SeRestorePrivilege”", 隐藏, 系统权限
.常量 关机_, "“SeShutdownPrivilege”", 隐藏, 系统权限
.常量 调试_, "“SeDebugPrivilege”", 隐藏, 系统权限
.常量 最大色, "0", 隐藏, 颜色类型
.常量 R色, "1", 隐藏, 颜色类型
.常量 G色, "2", 隐藏, 颜色类型
.常量 B色, "3", 隐藏, 颜色类型
.常量 色彩度, "6", 隐藏, 颜色类型
.常量 所有色, "4", 隐藏, 颜色类型
.常量 低8位, "8", 隐藏, 色深
.常量 中16位, "16", 隐藏, 色深
.常量 真彩色, "24", 隐藏, 色深
.常量 高32位, "32", 隐藏, 色深
.常量 数据库权限_未知, "0", 隐藏, 数据库
.常量 数据库权限_只读, "1", 隐藏, 
.常量 数据库权限_只写, "2", 隐藏, 
.常量 数据库权限_读写, "3", 隐藏, 
.常量 数据库权限_独占读, "4", 隐藏, 
.常量 数据库权限_独占写, "8", 隐藏, 
.常量 数据库权限_独占, "12", 隐藏, 
.常量 数据库权限_共享, "16", 隐藏, 
.常量 字段属性_字段被延迟, "2", 隐藏, 
.常量 字段属性_字段可写入, "4", 隐藏, 
.常量 字段属性_写入无法确定, "8", 隐藏, 
.常量 字段属性_定长数据, "16", 隐藏, 
.常量 字段属性_允许空值, "32", 隐藏, 
.常量 字段属性_可以读空值, "64", 隐藏, 
.常量 字段属性_二进制类型, "128", 隐藏, 
.常量 字段属性_持久标识符, "256", 隐藏, 
.常量 字段属性_包含标记, "512", 隐藏, 
.常量 字段属性_字段被缓存, "4096", 隐藏, 
.常量 字段类型_超长整数, "20", 隐藏, 
.常量 字段类型_二进制, "128", 隐藏, 
.常量 字段类型_逻辑型, "11", 隐藏, 
.常量 字段类型_宽文本1, "8", 隐藏, 
.常量 字段类型_字符型, "129", 隐藏, 
.常量 字段类型_货币型, "6", 隐藏, 
.常量 字段类型_日期型, "7", 隐藏, 
.常量 字段类型_数据库日期型, "133", 隐藏, 
.常量 字段类型_时间型, "134", 隐藏, 
.常量 字段类型_时间戳, "135", 隐藏, 
.常量 字段类型_数值型, "14", 隐藏, 
.常量 字段类型_双精度, "5", 隐藏, 
.常量 字段类型_空白型, "0", 隐藏, 
.常量 字段类型_错误码, "10", 隐藏, 
.常量 字段类型_标识型, "72", 隐藏, 
.常量 字段类型_IDispatch, "9", 隐藏, 
.常量 字段类型_整数型, "3", 隐藏, 
.常量 字段类型_IUnknown, "13", 隐藏, 
.常量 字段类型_超变长二进制, "205", 隐藏, 
.常量 字段类型_超变长文本, "201", 隐藏, 
.常量 字段类型_超变长宽文本, "203", 隐藏, 
.常量 字段类型_数字型, "131", 隐藏, 
.常量 字段类型_单精度, "4", 隐藏, 
.常量 字段类型_短整数, "2", 隐藏, 
.常量 字段类型_有符号字节, "16", 隐藏, 
.常量 字段类型_无符号超长整数, "21", 隐藏, 
.常量 字段类型_无符号整数, "19", 隐藏, 
.常量 字段类型_无符号短整数, "18", 隐藏, 
.常量 字段类型_字节型, "17", 隐藏, 
.常量 字段类型_自定义型, "132", 隐藏, 
.常量 字段类型_变长二进制, "204", 隐藏, 
.常量 字段类型_变长文本, "200", 隐藏, 
.常量 字段类型_变体型, "12", 隐藏, 
.常量 字段类型_变长宽文本, "202", 隐藏, 
.常量 字段类型_宽文本2, "130", 隐藏, 
.常量 查找方向_正向搜索, "1", 隐藏, 
.常量 查找方向_反向搜索, "-1", 隐藏, 
.常量 打开记录_SQL语句, "1", 隐藏, 
.常量 打开记录_数据表名, "2", 隐藏, 
.常量 记录删除_当前, "1", 隐藏, 
.常量 记录删除_全部, "3", 隐藏, 
.常量 元素标识类型_名称, "0", 隐藏, 
.常量 元素标识类型_ID, "1", 隐藏, 
.常量 元素标识类型_索引, "2", 隐藏, 
.常量 元素标识类型_标题, "3", 隐藏, 
.常量 元素标识类型_地址, "4", 隐藏, 
.常量 网页属性_网页标题, "“title”", 隐藏, title
.常量 网页属性_网页地址, "“location”", 隐藏, location
.常量 网页属性_网页源码, "“outerHTML”", 隐藏, outerHTML
.常量 网页属性_网页文本, "“innerText”", 隐藏, innerText
.常量 网页属性_网站域名, "“domain”", 隐藏, domain
.常量 网页属性_访问来源, "“referrer”", 隐藏, referrer
.常量 网页属性_创建时间, "“fileCreatedDate”", 隐藏, fileCreatedDate
.常量 网页属性_修改时间, "“lastModified”", 隐藏, lastModified
.常量 网页属性_Cookies, "“cookie”", 隐藏, cookie
.常量 网页属性_编码类型, "“charset”", 隐藏, charset
.常量 网页属性_文档大小, "“fileSize”", 隐藏, fileSize
.常量 脚本类型_JavaScript, "“JavaScript”", 隐藏, 
.常量 脚本类型_VBScript, "“VBScript”", 隐藏, 
.常量 网页事件_onabort, "“onabort”", 隐藏, 当用户中断下载图像时触发。.常量 网页事件_onactivate, "“onactivate”", 公开, 当对象设置为活动元素时触发。
.常量 网页事件_onafterprint, "“onafterprint”", 隐藏, 对象所关联的文档打印或打印预览后立即在对象上触发。
.常量 网页事件_onafterupdate, "“onafterupdate”", 隐藏, 当成功更新数据源对象中的关联对象后在数据绑定对象上触发。
.常量 网页事件_onbeforeactivate, "“onbeforeactivate”", 隐藏, 对象要被设置为当前元素前立即触发。
.常量 网页事件_onbeforecopy, "“onbeforecopy”", 隐藏, 当选中区复制到系统剪贴板之前在源对象触发。
.常量 网页事件_onbeforecut, "“onbeforecut”", 隐藏, 当选中区从文档中删除之前在源对象触发。
.常量 网页事件_onbeforedeactivate, "“onbeforedeactivate”", 隐藏, 在 activeElement 从当前对象变为父文档其它对象之前立即触发。
.常量 网页事件_onbeforeeditfocus, "“onbeforeeditfocus”", 隐藏, 在包含于可编辑元素内的对象进入用户界面激活状态前或可编辑容器变成控件选中区前触发。
.常量 网页事件_onbeforepaste, "“onbeforepaste”", 隐藏, 在选中区从系统剪贴板粘贴到文档前在目标对象上触发。
.常量 网页事件_onbeforeprint, "“onbeforeprint”", 隐藏, 对象的关联文档打印或打印预览前在对象上触发。
.常量 网页事件_onbeforeunload, "“onbeforeunload”", 隐藏, 在页面将要被卸载前触发。
.常量 网页事件_onbeforeupdate, "“onbeforeupdate”", 隐藏, 当成功更新数据源对象中的关联对象前在数据绑定对象上触发。
.常量 网页事件_onblur, "“onblur”", 隐藏, 在对象失去输入焦点时触发。
.常量 网页事件_onbounce, "“onbounce”", 隐藏, 当 marquee 对象的 behavior 属性设置为“alternate”且字幕的内容到达窗口一边时触发。
.常量 网页事件_oncellchange, "“oncellchange”", 隐藏, 在数据供应者中的数据变更时触发。
.常量 网页事件_onchange, "“onchange”", 隐藏, 当对象或选中区的内容改变时触发。
.常量 网页事件_onclick, "“onclick”", 隐藏, 在用户用鼠标左键单击对象时触发。
.常量 网页事件_oncontextmenu, "“oncontextmenu”", 隐藏, 在用户使用鼠标右键单击客户区打开上下文菜单时触发。
.常量 网页事件_oncontrolselect, "“oncontrolselect”", 隐藏, 当用户将要对该对象制作一个控件选中区时触发。
.常量 网页事件_oncopy, "“oncopy”", 隐藏, 当用户复制对象或选中区，将其添加到系统剪贴板上时在源元素上触发。
.常量 网页事件_oncut, "“oncut”", 隐藏, 当对象或选中区从文档中删除并添加到系统剪贴板上时在源元素上触发。
.常量 网页事件_ondataavailable, "“ondataavailable”", 隐藏, 每当异步传输数据的数据源对象的数据到达时触发。
.常量 网页事件_ondatasetchanged, "“ondatasetchanged”", 隐藏, 当数据源对象对应的数据集发生变更时触发。
.常量 网页事件_ondatasetcomplete, "“ondatasetcomplete”", 隐藏, 触发就表明数据源对象所有数据都可用。
.常量 网页事件_ondblclick, "“ondblclick”", 隐藏, 当用户双击对象时触发。
.常量 网页事件_ondeactivate, "“ondeactivate”", 隐藏, 当 activeElement 从当前对象变为父文档其它对象时触发。
.常量 网页事件_ondrag, "“ondrag”", 隐藏, 当进行拖曳操作时在源对象上持续触发。
.常量 网页事件_ondragend, "“ondragend”", 隐藏, 当用户在拖曳操作结束后释放鼠标时在源对象上触发。
.常量 网页事件_ondragenter, "“ondragenter”", 隐藏, 当用户拖曳对象到一个合法拖曳目标时在目标元素上触发。
.常量 网页事件_ondragleave, "“ondragleave”", 隐藏, 当用户在拖曳操作过程中将鼠标移出合法拖曳目标时在目标对象上触发。
.常量 网页事件_ondragover, "“ondragover”", 隐藏, 当用户拖曳对象划过合法拖曳目标时持续在目标元素上触发。
.常量 网页事件_ondragstart, "“ondragstart”", 隐藏, 当用户开始拖曳文本选中区或选中对象时在源对象上触发。
.常量 网页事件_ondrop, "“ondrop”", 隐藏, 当鼠标按钮在拖曳操作过程中释放时在目标对象上触发。
.常量 网页事件_onerror, "“onerror”", 隐藏, 当对象装载过程中发生错误时触发。
.常量 网页事件_onerrorupdate, "“onerrorupdate”", 隐藏, 更新数据源对象中的关联数据出错时在数据绑定对象上触发。
.常量 网页事件_onfilterchange, "“onfilterchange”", 隐藏, 当可视滤镜更改状态或完成转换时触发。
.常量 网页事件_onfinish, "“onfinish”", 隐藏, 当字幕循环完成后触发。
.常量 网页事件_onfocus, "“onfocus”", 隐藏, 当对象获得焦点时触发。
.常量 网页事件_onfocusin, "“onfocusin”", 隐藏, 当元素将要被设置为焦点之前触发。
.常量 网页事件_onfocusout, "“onfocusout”", 隐藏, 在移动焦点到其它元素之后立即触发于当前拥有焦点的元素上触发。
.常量 网页事件_onhelp, "“onhelp”", 隐藏, 当用户在浏览器为当前窗口时按
.常量 网页事件_onkeydown, "“onkeydown”", 隐藏, 当用户按下键盘按键时触发。
.常量 网页事件_onkeypress, "“onkeypress”", 隐藏, 当用户按下字面键时触发。
.常量 网页事件_onkeyup, "“onkeyup”", 隐藏, 当用户释放键盘按键时触发。
.常量 网页事件_onlayoutcomplete, "“onlayoutcomplete”", 隐藏, 当打印或打印预览版面处理完成用来自于源文档的内容填充当前
.常量 网页事件_onload, "“onload”", 隐藏, 在浏览器完成对象的装载后立即触发。
.常量 网页事件_onlosecapture, "“onlosecapture”", 隐藏, 当对象失去鼠标捕捉时触发。
.常量 网页事件_onmousedown, "“onmousedown”", 隐藏, 当用户用任何鼠标按钮单击对象时触发。
.常量 网页事件_onmouseenter, "“onmouseenter”", 隐藏, 当用户将鼠标指针移动到对象内时触发。
.常量 网页事件_onmouseleave, "“onmouseleave”", 隐藏, 当用户将鼠标指针移出对象边界时触发。
.常量 网页事件_onmousemove, "“onmousemove”", 隐藏, 当用户将鼠标划过对象时触发。
.常量 网页事件_onmouseout, "“onmouseout”", 隐藏, 当用户将鼠标指针移出对象边界时触发。
.常量 网页事件_onmouseover, "“onmouseover”", 隐藏, 当用户将鼠标指针移动到对象内时触发。
.常量 网页事件_onmouseup, "“onmouseup”", 隐藏, 当用户在鼠标位于对象之上时释放鼠标按钮时触发。
.常量 网页事件_onmousewheel, "“onmousewheel”", 隐藏, 当鼠标滚轮按钮旋转时触发。
.常量 网页事件_onmove, "“onmove”", 隐藏, 当对象移动时触发。
.常量 网页事件_onmoveend, "“onmoveend”", 隐藏, 当对象停止移动时触发。
.常量 网页事件_onmovestart, "“onmovestart”", 隐藏, 当对象开始移动时触发。
.常量 网页事件_onpaste, "“onpaste”", 隐藏, 当用户粘贴数据以便从系统剪贴板向文档传送数据时在目标对象上触发。
.常量 网页事件_onpropertychange, "“onpropertychange”", 隐藏, 当在对象上发生对象上发生属性更改时触发。
.常量 网页事件_onreadystatechange, "“onreadystatechange”", 隐藏, 当对象状态变更时触发。
.常量 网页事件_onreset, "“onreset”", 隐藏, 当用户重置表单时触发。
.常量 网页事件_onresize, "“onresize”", 隐藏, 当对象的大小将要改变时触发。
.常量 网页事件_onresizeend, "“onresizeend”", 隐藏, 当用户更改完控件选中区中对象的尺寸时触发。
.常量 网页事件_onresizestart, "“onresizestart”", 隐藏, 当用户开始更改控件选中区中对象的尺寸时触发。
.常量 网页事件_onrowenter, "“onrowenter”", 隐藏, 触发就表明当前行已经在数据源中更改，对象上有可用的新数据值。
.常量 网页事件_onrowexit, "“onrowexit”", 隐藏, 当数据源控件更改对象当前行前触发。
.常量 网页事件_onrowsdelete, "“onrowsdelete”", 隐藏, 当行将要从记录集中被删除时触发。
.常量 网页事件_onrowsinserted, "“onrowsinserted”", 隐藏, 当在当前记录集中插入新行后触发。
.常量 网页事件_onscroll, "“onscroll”", 隐藏, 当用户滚动对象的滚动条时触发。
.常量 网页事件_onselect, "“onselect”", 隐藏, 当当前选中区改变时触发。
.常量 网页事件_onselectionchange, "“onselectionchange”", 隐藏, 当文档的选中状态改变时触发。
.常量 网页事件_onselectstart, "“onselectstart”", 隐藏, 对象将要被选中时触发。
.常量 网页事件_onstart, "“onstart”", 隐藏, 在 marquee 对象的每次循环开始时触发。
.常量 网页事件_onstop, "“onstop”", 隐藏, 当用户单击停止按钮或离开
.常量 网页事件_onsubmit, "“onsubmit”", 隐藏, 当表单将要被提交时触发。
.常量 网页事件_onunload, "“onunload”", 隐藏, 在对象卸载前立即触发。
.常量 Winsock_请求连接, "1", 隐藏, 
.常量 Winsock_数据到达, "2", 隐藏, 
.常量 Winsock_断开连接, "3", 隐藏, 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 5 0 系统核心支持库
 ' spec A512548E76954B6E92C21055517615B0 3 0 特殊功能支持库
 ' script EDF19861DC454d15BA0B9E3FF9CA4F57 2 0 脚本语言支持组件
 ' iext 27bb20fdd3e145e4bee3db39ddd6e64c 2 0 扩展界面支持库一
 ' RegEx 684944CB04624eb7BD5412A519421D34 2 0 正则表达式支持库
 ' HtmlView 5014D8FA6DCA40b68FA626D8183666EB 1 2 超文本浏览框
 ' dp1 4BB4003860154917BC7D8230BF4FA58A 2 0 数据操作支持库一
 ' eAPI F7FC1AE45C5C4758AF03EF19F18A395D 3 0 应用接口支持库
 ' iext5 {E5000198-4471-40e2-92BC-D0BA075BDBB2} 2 0 扩展界面支持库五



 ' 所需要的模块
 ' 新编码转换大全 C:\Documents and Settings\Administrator\桌面\纯真IP数据库\新编码转换大全.ec
 ' 超级列表框排序模块 C:\Documents and Settings\Administrator\桌面\纯真IP数据库\超级列表框排序.ec
 ' 易语言皮肤模块精简版 C:\Documents and Settings\Administrator\桌面\纯真IP数据库\易语言皮肤模块.ec
 ' 彗星HTTP应用模块 C:\Documents and Settings\Administrator\桌面\纯真IP数据库\彗星HTTP应用模块.ec
 ' Skin++皮肤模块 C:\Documents and Settings\Administrator\桌面\纯真IP数据库\Skin_Vision.ec
 ' 公开模块 C:\Documents and Settings\long2\桌面\QQ农场源码\ec.ec


数据类型 农作物信息结构, , 
    .成员 农场ID, 整数型, , , 
    .成员 土地ID, 整数型, , , 
    .成员 作物ID, 整数型, , , 
    .成员 成长状态, 整数型, , ,  1=生长中 6=成熟 7=枯根状态
    .成员 季度, 整数型, , , 
    .成员 产量, 整数型, , , 
    .成员 最少剩余, 整数型, , , 
    .成员 剩余, 整数型, , , 
    .成员 偷窃信息, 文本型, , , 多个偷窃者之间用逗号分隔
    .成员 灾害信息, 文本型, , , 虫子、杂草
    .成员 剩余时间, 整数型, , , 秒数
    .成员 狗狗, 整数型, , , 0=有 1＝无
    .成员 成熟时间, 日期时间型, , , 
    .成员 杂草, 整数型, , , 
    .成员 虫子, 整数型, , , 
    .成员 干旱, 整数型, , , 

数据类型 好友信息结构, , 
    .成员 ID, 整数型, , , 
    .成员 昵称, 文本型, , , 
    .成员 头像地址, 文本型, , , 
    .成员 黄钻等级, 整数型, , , 
    .成员 黄钻状态, 整数型, , , 
    .成员 经验, 整数型, , , 
    .成员 现金, 整数型, , , 
    .成员 QQ, 整数型, , , 
    .成员 好友类型, 整数型, , , 1=空间 2=校友

数据类型 果实信息结构, , 
    .成员 名称, 文本型, , , 
    .成员 ID, 整数型, , , 
    .成员 单价, 整数型, , , 
    .成员 数量, 整数型, , , 
    .成员 总价, 整数型, , , 

数据类型 多线程许可证, 公开, 
    .成员 DebugInfo, 整数型, , , 
    .成员 LockCount, 整数型, , , 
    .成员 RecursionCount, 整数型, , , 
    .成员 OwningThread, 整数型, , , 
    .成员 LockSemaphore, 整数型, , , 
    .成员 SpinCount, 整数型, , , 

数据类型 进程信息型2, 公开, 
    .成员 进程ID, 整数型, , , 
    .成员 进程名, 文本型, , , 
    .成员 用户名, 文本型, , , 

数据类型 版权信息型, 公开, 
    .成员 公司, 文本型, , , 
    .成员 描述, 文本型, , , 
    .成员 文件版本, 文本型, , , 
    .成员 内部名称, 文本型, , , 
    .成员 版权, 文本型, , , 
    .成员 源文件名, 文本型, , , 
    .成员 产品名称, 文本型, , , 
    .成员 产品版本, 文本型, , , 

数据类型 易模块信息, 公开, 
    .成员 文件尺寸, 整数型, , , 
    .成员 易版本, 文本型, , , 
    .成员 程序名称, 文本型, , , 
    .成员 程序备注, 文本型, , , 
    .成员 作者, 文本型, , , 
    .成员 邮政编码, 文本型, , , 
    .成员 联系地址, 文本型, , , 
    .成员 电话, 文本型, , , 
    .成员 传真, 文本型, , , 
    .成员 电子信箱, 文本型, , , 
    .成员 主页地址, 文本型, , , 
    .成员 版权声明, 文本型, , , 
    .成员 程序版本, 文本型, , , 

数据类型 消息型, 公开, 
    .成员 窗口句柄, 整数型, , , 
    .成员 消息标识, 整数型, , , 
    .成员 消息值1, 整数型, , , 
    .成员 消息值2, 整数型, , , 
    .成员 消息时间, 整数型, , , 
    .成员 坐标横, 整数型, , , 
    .成员 坐标纵, 整数型, , , 

数据类型 进程结构, 公开, 
    .成员 进程句柄, 整数型, , , hProcess
    .成员 线程句柄, 整数型, , , hThread
    .成员 进程标识符, 整数型, , , dwProcessId
    .成员 线程标识符, 整数型, , , dwThreadId

数据类型 矩形坐标, 公开, 
    .成员 矩形左边, 整数型, , , 
    .成员 矩形顶边, 整数型, , , 
    .成员 矩形右边, 整数型, , , 
    .成员 矩形底边, 整数型, , , 

数据类型 矩形范围, 公开, 
    .成员 矩形左边, 整数型, , , 
    .成员 矩形顶边, 整数型, , , 
    .成员 矩形宽度, 整数型, , , 
    .成员 矩形高度, 整数型, , , 

数据类型 坐标型, 公开, 
    .成员 x, 整数型, , , X轴坐标
    .成员 y, 整数型, , , Y轴坐标

数据类型 字体属性, 公开, 
    .成员 内容, 文本型, , , 文字内容
    .成员 颜色, 整数型, , , 文字颜色
    .成员 字体大小, 整数型, , , 默认为16(像素) 如:8,12,16,20,24,28,32等
    .成员 加粗, 逻辑型, , , 默认为细体
    .成员 斜体, 逻辑型, , , 默认为非斜体
    .成员 下划线, 逻辑型, , , 默认为无下划线
    .成员 删除线, 逻辑型, , , 默认为无删除线
    .成员 字体名称, 文本型, , , 默认为“宋体”

数据类型 进程信息型, 公开, 
    .成员 父进程ID, 整数型, , , 
    .成员 进程ID, 整数型, , , 
    .成员 进程名称, 文本型, , , 
    .成员 进程路径, 文本型, , , 

数据类型 模块信息型, 公开, 进程模块信息
    .成员 size, 整数型, , , 
    .成员 mid, 整数型, , , 
    .成员 pid, 整数型, , , 
    .成员 gusage, 整数型, , , 
    .成员 pusage, 整数型, , , 
    .成员 base, 整数型, , , 
    .成员 大小, 整数型, , , 
    .成员 模块句柄, 整数型, , , 
    .成员 模块文件名, 字节型, , "256", 
    .成员 模块完整路径, 字节型, , "256", 

数据类型 窗口信息型, 公开, 枚举窗口信息
    .成员 窗口句柄, 整数型, 传址, , 
    .成员 进程ID, 整数型, 传址, , 
    .成员 线程ID, 整数型, 传址, , 
    .成员 窗口类名, 文本型, , , 
    .成员 窗口标题, 文本型, , , 

数据类型 网页链接, 公开, 
    .成员 标题, 文本型, , , 
    .成员 网址, 文本型, , , 网页地址 http:// 邮件地址 mailto:
    .成员 图片地址, 文本型, , , 

数据类型 内存参数, 公开, 
    .成员 数据结构长度, 整数型, , , 
    .成员 内存使用百分比, 整数型, , , 
    .成员 实际内存总字节数, 整数型, , , 
    .成员 可用的实际内存字节数, 整数型, , , 
    .成员 分页文件总字节数, 整数型, , , 
    .成员 分页文件可用字节数, 整数型, , , 
    .成员 虚拟内存的总字节数, 整数型, , , 
    .成员 可用的虚拟内存字节数, 整数型, , , 

数据类型 乐器数据类型, 公开, MIDI演奏类
    .成员 琴键号, 整数型, , , 
    .成员 乐器英文名, 文本型, , , 
    .成员 乐器中文名, 文本型, , , 

数据类型 内存结构, 公开, 
    .成员 进程ID, 整数型, , , 
    .成员 内存地址, 整数型, , , 
    .成员 欲写入值, 整数型, , , 

.全局变量 QQ账号, 文本型, , , 
.全局变量 QQ密码, 文本型, , , 
.全局变量 我的农作物信息, 农作物信息结构, , "0", 
.全局变量 当前好友农作物信息, 农作物信息结构, , "0", 
.全局变量 农作物信息, 农作物信息结构, , "0", 
.全局变量 我的信息, 好友信息结构, , , 
.全局变量 农场操作时间间隔, 整数型, , , 
.全局变量 农场扫描时间间隔, 整数型, , , 
.全局变量 好友列表, 好友信息结构, , "0", 
.全局变量 验证码, 文本型, , , 
.全局变量 同步好友时间间隔, 整数型, , , 
.全局变量 扫描好友时间间隔, 整数型, , , 
.全局变量 扫描我的农场间隔, 整数型, , , 
.全局变量 经验等级对照表, 整数型, , "0", 
.全局变量 所有作物表, 文本型, , "500", 
.全局变量 作物时间表, 整数型, , "500", 
.全局变量 作物经验表, 整数型, , "500", 
.全局变量 所需等级表, 整数型, , "500", 
.全局变量 作物价格表, 整数型, , "500", 
.全局变量 二季时间表, 整数型, , "500", 
.全局变量 购入价格表, 整数型, , "500", 
.全局变量 Q, 整数型, , , 
.全局变量 用户uid, 文本型, , , 
.全局变量 商店是否购买, 逻辑型, , , 
.全局变量 MD5, MD5类, 公开, , 
.全局变量 RC4, RC4类, 公开, , 
.全局变量 DES, DES类, 公开, , 
.全局变量 RSA, RSA类, 公开, , 
.全局变量 BASE64, BASE64类, 公开, , 
.全局变量 特效, 特效类, 公开, , 
.全局变量 QQ, 腾讯QQ类, 公开, , 
.全局变量 FTP, FTP类, 公开, , 
.全局变量 HTTP, HTTP类, 公开, , 
.全局变量 文件操作, 文件操作类, 公开, , 
.全局变量 热键, 热键类, 公开, , 
.全局变量 数据库, 数据库类, 公开, , 
.全局变量 指针, 指针类, 公开, , 
.全局变量 HOOK, HOOK类, 公开, , 
.全局变量 APIHOOK, APIHOOK类, 公开, , 
.全局变量 内存共享, 内存共享类, 公开, , 
.全局变量 全局共享, 全局共享类, 公开, , 
.全局变量 系统服务, 系统服务类, 公开, , 
.全局变量 软件, 软件类, 公开, , 
.全局变量 表达式运算, 表达式运算类, 公开, , 
.全局变量 WINIO, WinIo类, 公开, , 
.全局变量 NTIO, NTIO类, 公开, , 
.全局变量 驱动模拟, 驱动模拟类, 公开, , 
.全局变量 颜色处理, 颜色处理类, 公开, , 
.全局变量 网页模拟, 网页模拟类, 公开, , 
.全局变量 网页文档, 网页文档类, 公开, , 
.全局变量 网页单选框, 网页单选框类, 公开, , 
.全局变量 网页复选框, 网页复选框类, 公开, , 
.全局变量 网页组合框, 网页组合框类, 公开, , 
.全局变量 Winsock, 未知类型0x490146E8, 公开, , 
.全局变量 网络服务器, 未知类型0x490146E8, 公开, , 
.全局变量 DLL, DLL类, 公开, , 
.全局变量 全局注入, 全局注入类, 公开, , 
.全局变量 线程注入, 线程注入类, 公开, , 
.全局变量 线程操作, 线程操作类, 公开, , 
.全局变量 线程钩子, 线程钩子类, 公开, , 
.全局变量 封包拦截, 封包拦截类, 公开, , 
.全局变量 易语言, 易语言类, 公开, , 
.全局变量 注册表, 注册表类, 公开, , 
.全局变量 许可证, 许可证类, 公开, , 
.全局变量 位图操作, 位图操作类, 公开, , 
.全局变量 新位图操作, 新位图操作类, 公开, , 
.全局变量 加密解密, 加密解密类, 公开, , 
.全局变量 编码转换, 编码转换类, 公开, , 
.全局变量 数据压缩, 数据压缩类, 公开, , 
.全局变量 内存操作, 内存操作类, 公开, , 
.全局变量 驱动操作, 驱动操作类, 公开, , 
.全局变量 加密配置, 加密配置类, 公开, , 
.全局变量 进程通信, 进程通信类, 公开, , 
.全局变量 时间钩子, 时间钩子类, 公开, , 
.全局变量 拖放事件, 拖放事件类, 公开, , 
.全局变量 名称匹配, 名称匹配类, 公开, , 
.全局变量 数据库_连接, 数据库_连接类, 公开, , 
.全局变量 数据库_记录集, 数据库_记录集类, 公开, , 
.全局变量 内存_多条件搜索, 内存_多条件搜索类, 公开, , 
.全局变量 内存_驱动读写1, 内存_驱动读写1类, 公开, , 
.全局变量 MIDI, MIDI演奏类, 公开, , 
.全局变量 XML, XML类, 公开, , 
.全局变量 脚本控制, 脚本控制类, 公开, , 

.DLL命令 SkinH_SetAero, 空白型, "SkinH_EL.dll", "SkinH_SetAero", , 
    .参数 hWnd, 整数型, , 

.DLL命令 SkinH_Attach, 空白型, "SkinH_EL.dll", "SkinH_Attach", , 

.DLL命令 jinfupj, 空白型, "jinfu.dll", "jinfupj", , 

.DLL命令 WideCharToMultiByte, 整数型, "kernel32", "WideCharToMultiByte", 公开, 
    .参数 CodePage, 整数型, , 
    .参数 dwFlags, 整数型, , 
    .参数 lpWideCharStr, 字节集, 传址, 
    .参数 cchWideChar, 整数型, , 
    .参数 lpMultiByteStr, 文本型, 传址, 
    .参数 cchMultiByte, 整数型, , 
    .参数 lpDefaultChar, 整数型, , 
    .参数 lpUsedDefaultChar, 整数型, , 

.DLL命令 MultiByteToWideChar, 整数型, "", "MultiByteToWideChar", 公开, 
    .参数 CodePage, 整数型, , 
    .参数 dwFlags, 整数型, , 
    .参数 lpMultiByteStr, 文本型, 传址, 
    .参数 cchMultiByte, 整数型, , 
    .参数 lpWideCharStr, 字节集, 传址, 
    .参数 cchWideChar, 整数型, , 

.DLL命令 _延时, 整数型, "", "Sleep", 公开, kernel32.dll
    .参数 延时时间, 整数型, , 毫秒

.DLL命令 _到小写, 文本型, "", "CharLowerA", 公开, 
    .参数 str, 文本型, , 

.DLL命令 _到大写, 文本型, "", "CharUpperA", 公开, 
    .参数 str, 文本型, , 

.DLL命令 _取启动时间, 整数型, "", "GetTickCount", 公开, kernel32.dll用于获取自windows启动以来经历的时间长度（毫秒）

.DLL命令 _回收内存, 整数型, "", "EmptyWorkingSet", 公开, psapi.dll不知道怎么用
    .参数 进程句柄, 整数型, , 

.DLL命令 _装载DLL, 整数型, "", "LoadLibraryA", 公开, 
    .参数 lpLibFileName, 文本型, , 

.DLL命令 _释放DLL, 逻辑型, "", "FreeLibrary", 公开, kernel32.dll
    .参数 模块句柄, 整数型, , 

.DLL命令 _内存置零, 空白型, "", "RtlZeroMemory", 公开, kernel32.dll
    .参数 起始地址, 整数型, , 
    .参数 置零长度, 整数型, , 

.DLL命令 _取内存文本长度, 整数型, "", "lstrlenA", 公开, kernel32.dll
    .参数 内存地址, 整数型, , 

.DLL命令 _取坐标子句柄, 整数型, "", "ChildWindowFromPoint", 公开, user32.dll取父窗口中包含了指定坐标的第一个子窗口句柄(与其它取窗口句柄不同的是:可取出不可视或透明的窗口)
    .参数 父窗口句柄, 整数型, , 欲取坐标句柄所在的父窗口句柄
    .参数 坐标x, 整数型, , 指定横坐标
    .参数 坐标y, 整数型, , 指定纵坐标

.DLL命令 _取当前线程2, 整数型, "", "GetCurrentThreadId", 公开, kernel32.dll

.DLL命令 _取父窗口, 整数型, "", "GetParent", 公开, user32.dll判断指定窗口的父窗口  父窗口的句柄。如窗口没有父，或遇到错误，则返回零。会设置GetLastError
    .参数 窗口句柄, 整数型, , 欲测试的窗口的句柄;

.DLL命令 _鼠标隐藏, 整数型, "", "ShowCursor", 公开, 控制鼠标指针的可视性(返回值:显示计数（参考注解）)
    .参数 bShow, 逻辑型, , （非零）显示指针，零 隐藏

.DLL命令 _投递线程消息, 整数型, "", "PostThreadMessageA", 公开, user32.dll
    .参数 idThread, 整数型, , 
    .参数 msg, 整数型, , 
    .参数 wParam, 整数型, , 
    .参数 lParam, 整数型, , 

.DLL命令 _广播消息, 整数型, "", "BroadcastSystemMessage", 公开, user32.dll
    .参数 dw, 整数型, , 投递消息 16
    .参数 pdw, 整数型, 传址, 应用程序 8
    .参数 un, 整数型, , 消息标识
    .参数 wParam, 整数型, , 消息值1
    .参数 lParam, 整数型, , 消息值2

.DLL命令 _发送消息A, 整数型, "", "SendMessageA", 公开, 
    .参数 窗口句柄, 整数型, , 
    .参数 标识, 整数型, , 
    .参数 消息1, 整数型, , 
    .参数 消息2, 整数型, , 

.DLL命令 _发送消息, 整数型, "", "SendMessageA", 公开, 
    .参数 窗口句柄, 整数型, , 
    .参数 标识, 整数型, , 
    .参数 消息1, 整数型, , 
    .参数 消息2, 文本型, , 

.DLL命令 _投递消息, 空白型, "", "PostMessageA", 公开, 向指定窗口句柄发送消息
    .参数 h, 整数型, , 
    .参数 m, 整数型, , 
    .参数 p, 整数型, , 
    .参数 p, 整数型, , 

.DLL命令 _取当前窗口, 整数型, "", "GetForegroundWindow", 公开, user32.dll返回前台窗口句柄

.DLL命令 _取活动窗口, 整数型, "", "GetActiveWindow", 公开, user32.dll获得活动窗口的句柄，活动窗口的句柄，如没有窗口处于活动状态，则返回零值

.DLL命令 _窗口取外边框, 逻辑型, "", "GetWindowRect", 公开, user32.dll获得整个窗口的范围矩形，窗口的边框、标题栏、滚动条及菜单等都在这个矩形内
    .参数 句柄, 整数型, , Long，想获得范围矩形的那个窗口的句柄
    .参数 大小, 矩形坐标, 传址, RECT，屏幕坐标中随同窗口装载的矩形(左边,顶边,右边,底边)

.DLL命令 _取坐标句柄, 整数型, "", "WindowFromPoint", 公开, user32.dll取指定坐标位置所在窗口组件的句柄(返回句柄)
    .参数 X轴光标, 整数型, , 
    .参数 Y轴光标, 整数型, , 

.DLL命令 _移动鼠标, 空白型, "", "SetCursorPos", 公开, user32.dll
    .参数 x, 整数型, , 
    .参数 y, 整数型, , 

.DLL命令 _关闭对象, 整数型, "", "CloseHandle", 公开, kernel32.dll
    .参数 对象句柄, 整数型, , 

.DLL命令 _是否子窗口, 逻辑型, "", "IsChild", 公开, user32.dll判断一个窗口是否为另一窗口的子或隶属窗口
    .参数 hWndParent, 整数型, , 父窗口的句柄
    .参数 hwnd, 整数型, , 欲测试的窗口的句柄

.DLL命令 _窗口是否可见, 逻辑型, "", "IsWindowVisible", 公开, 判断窗口是否可见  如窗口可见则返回TRUE（非零）
    .参数 窗口句柄, 整数型, , 要测试的那个窗口的句柄

.DLL命令 _是否活动窗口, 逻辑型, "", "IsWindowEnabled", 公开, 判断窗口是否处于活动状态（在vb里使用：针对vb窗体和控件，请用enabled属性），非零表示成功，零表示失败
    .参数 hwnd, 整数型, , 待检测窗口的句柄

.DLL命令 _是否Unicode窗口, 逻辑型, "", "IsWindowUnicode", 公开, 判断一个窗口是否为Unicode窗口。这意味着窗口为所有基于文本的消息都接收Unicode文字。如是个Unicode窗口则返回非零值，如是个ANSI窗口则返回零
    .参数 hwnd, 整数型, , 待检测窗口的句柄

.DLL命令 _窗口是否最小化, 逻辑型, "", "IsIconic", 公开, 判断窗口是否已最小化 非零表示成功，零表示失败
    .参数 窗口句柄, 整数型, , 要测试的那个窗口的句柄

.DLL命令 _取祖先窗口, 整数型, "", "GetAncestor", 公开, user32.dll取出指定窗口句柄的顶级父窗口  哇哈哈!多么可爱的API...
    .参数 hwnd, 整数型, , 子窗口句柄
    .参数 gaFlags, 整数型, , 值为 3

.DLL命令 _窗口是否最大化, 整数型, "", "IsZoomed", 公开, 判断窗口是否已最大化 非零表示成功，零表示失败
    .参数 窗口句柄, 整数型, , 要测试的那个窗口的句柄

.DLL命令 _判断按键状态, 整数型, "", "GetAsyncKeyState", 公开, 判断函数调用时指定虚拟键的状态 (非按住状态返回0) 
    .参数 键代码, 整数型, , 欲测试的虚拟键的键码

.DLL命令 _判断鼠标双击间隔, 整数型, "", "GetDoubleClickTime", 公开, 判断连续两次鼠标单击之间会被处理成双击事件的间隔时间 以毫秒表示的双击时间

.DLL命令 _取弹出式窗口, 整数型, "", "GetLastActivePopup", 公开, 获得在一个给定父窗口中最近激活过的弹出式窗口的句柄（在vb里使用：vb应用程序不用弹出式窗口，所以这个函数并非特别有用），指向最近用过的弹出式窗口的句柄。如未发现弹出窗口。则返回hwndOwnder
    .参数 hwndOwnder, 整数型, , 父窗口

.DLL命令 _隐藏弹出式窗口, 空白型, "", "ShowOwnedPopups", 公开, 显示或隐藏由指定窗口所有的全部弹出式窗口（在vb里使用：并不特别有用，因为vb不用弹出式窗口）
    .参数 hwnd, 整数型, , 父窗口的句柄
    .参数 fShow, 逻辑型, , TRUE（非零）表示显示由hwnd所有的所有弹出式窗口；FALSE（零）则隐藏它们

.DLL命令 _窗口锁定, 逻辑型, "", "LockWindowUpdate", 公开, 锁定指定窗口，禁止它更新。同时只能有一个窗口处于锁定状态，非零表示成功，零表示失败（比如另外已有一个窗口锁定）
    .参数 hwndLock, 整数型, , 欲锁定窗口的句柄。如设为零，则对窗口解锁

.DLL命令 _窗口置焦点, 整数型, "", "SetFocusAPI", 公开, 将输入焦点设到指定的窗口。如有必要，会激活窗口  (返回前一个拥有焦点的窗口的句柄)
    .参数 hwnd, 整数型, , 准备接收焦点的窗口的句柄

.DLL命令 _窗口置前台, 整数型, "", "SetForegroundWindow", 公开, 将窗口设为系统的前台窗口。可用于改变用户目前正在操作的应用程序 (非零表示成功，零表示失败)
    .参数 窗口句柄, 整数型, , 带到前台的窗口

.DLL命令 _窗口禁止, 逻辑型, "", "EnableWindow", 公开, user32.dll在指定的窗口里允许或禁止所有鼠标及键盘输入(非零表示成功，零表示失败)  也可用于外部按钮解除禁止(或其它一些禁止的控件)
    .参数 hwnd, 整数型, , 窗口或控件的句柄
    .参数 fEnable, 逻辑型, , 非零允许窗口，零禁止

.DLL命令 _回调钩子, 整数型, "", "CallWindowProcA", 公开, 
    .参数 窗口程序程序指针, 子程序指针, , 
    .参数 窗口句柄, 整数型, , 
    .参数 消息, 整数型, , 
    .参数 参数1, 整数型, , 
    .参数 参数2, 整数型, , 

.DLL命令 _窗口更新, 逻辑型, "", "UpdateWindow", 公开, user32.dll 强制立即更新窗口，窗口中以前屏蔽的所有区域都会重画（在vb里使用：如vb窗体或控件的任何部分需要更新，可考虑直接使用refresh方法　非零表示成功，零表示失败
    .参数 hwnd, 整数型, , 欲更新窗口的句柄;

.DLL命令 _系统声音, 整数型, "", "MessageBeep", 公开, 播放一个系统声音。系统声音的分配方案是在控制面板里决定的 (非零表示成功，零表示失败)
    .参数 wType, 整数型, , 标准响铃 系统星号声 系统惊叹声 系统指针声 系统提问声

.DLL命令 _取自进程ID, 整数型, "", "GetCurrentProcessId", 公开, kernel32.dll

.DLL命令 _取内存参数, 空白型, "", "GlobalMemoryStatus", 公开, 
    .参数 内存参数, 内存参数, , 

.DLL命令 _内存读字节集, 整数型, "", "ReadProcessMemory", 公开, 
    .参数 hProcess, 整数型, , 
    .参数 lpBaseAddress, 整数型, , 
    .参数 lpBuffer, 字节集, 传址, 
    .参数 nSize, 整数型, , 
    .参数 lpNumberOfBytesWritten, 整数型, , 

.DLL命令 _内存写字节集, 整数型, "", "WriteProcessMemory", 公开, kernel32.dll
    .参数 hProcess, 整数型, , 
    .参数 pBaseAddress, 整数型, , 内存地址
    .参数 lpBuffer, 字节集, 传址, 数据指针
    .参数 nSize, 整数型, , 长度
    .参数 lpNumberOfBytesWritten, 整数型, , 实际写出长度

.DLL命令 _键码转换, 整数型, "", "MapVirtualKeyA", 公开, 返回转换后的代码
    .参数 wCode, 整数型, , 代码值
    .参数 wMapType, 整数型, , 0--虚拟键码->扫描码；1--扫描码->虚拟键码；2-虚拟键码->ASCII值（未加Shift组合键）。

.DLL命令 _窗口还原, 逻辑型, "", "OpenIcon", 公开, user32.dll恢复一个最小化的程序，并将其激活
    .参数 hwnd, 整数型, , 

.DLL命令 安装钩子_, 整数型, "", "SetWindowsHookExA", 公开, 钩子
    .参数 ihook, 整数型, , 
    .参数 lpfunc, 子程序指针, , 
    .参数 hin, 整数型, , 
    .参数 threadid, 整数型, , 

.DLL命令 _取模块句柄2, 整数型, "", "GetModuleHandleA", 公开, 
    .参数 lpModuleName, 文本型, , 

.DLL命令 _取模块句柄, 整数型, "", "GetModuleHandleA", 公开, 
    .参数 lpModuleName, 整数型, , 

.DLL命令 卸载钩子_, 整数型, "", "UnhookWindowsHookEx", 公开, 钩子
    .参数 hHook, 整数型, , 

.DLL命令 下一个钩子, 整数型, "", "CallNextHookEx", 公开, 钩子
    .参数 hHook, 整数型, , 
    .参数 icode, 整数型, , 
    .参数 wParam, 整数型, , 
    .参数 lParam, 整数型, , 

.DLL命令 _取库函数地址, 整数型, "", "GetProcAddress", 公开, 
    .参数 hModule, 整数型, , 
    .参数 lpProcName, 文本型, , 

.DLL命令 _取屏幕句柄, 整数型, "", "GetDesktopWindow", 公开, user32.dll返回屏幕的句柄

.DLL命令 _窗口闪动, 空白型, "", "FlashWindow", 公开, user32.dll
    .参数 窗口句柄, 整数型, , 
    .参数 闪动, 逻辑型, , 是否闪动窗口

.DLL命令 _取启动参数, 文本型, "", "GetCommandLineA", 公开, kernel32.dll

.DLL命令 lstrcpyn_内存结构, 整数型, "kernel32.dll", "lstrcpyn", 公开, 取内存变量地址2_,
    .参数 数据1, 内存结构, 传址, lpString1
    .参数 数据2, 内存结构, 传址, lpString2
    .参数 数据长度, 整数型, , iMaxLength

.DLL命令 RtlMoveMemory_读整数, 整数型, "kernel32.dll", "RtlMoveMemory", 公开, 
    .参数 目标数据, 整数型, 传址, 
    .参数 原数据, 整数型, , 
    .参数 尺寸, 整数型, , 

.窗口程序集 窗口程序集1, , , 

.程序集变量 变量1, 整数型, , , 
.子程序 _画板验证码_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.底图, 彗星HTTP读文件 (“http://ptlogin2.qq.com/getimage”))

.子程序 _登陆按钮_被单击, 空白型, , 
.局部变量 P, 文本型, , , 
.局部变量 登陆返回临时数据, 字节集, , , 

.如果真 (或者 (等于 (.内容, “”), 等于 (.内容, “”), 等于 (.内容, “”)))
    信息框 (“请填写完整。”, #错误图标, “错误”)
    赋值 (.时钟周期, 1)
    返回 ()
.如果真结束
#md5.未知支持库函数_0 ()
赋值 (QQ密码, “md5_3”.未知支持库函数_3 (删首尾空 (.内容)))
赋值 (QQ密码, “md5”.未知支持库函数_3 (相加 (QQ密码, 到大写 (删首尾空 (.内容)))))
赋值 (QQ账号, .内容)
赋值 (登陆返回临时数据, 彗星HTTP读文件 (“http://ptlogin2.qq.com/login”, “POST”, , , 相加 (“u1=http%3A%2F%2Fimgcache.qq.com%2Fqzone%2Ftoolbar%2Floginsucc.html%3Fpara%3DblogComment&fp=loginerroralert&h=1&u=”, 删首尾空 (.内容), “&p=”, QQ密码, “&verifycode=”, 删首尾空 (.内容), “&aid=15000101&from_ui=1”), ))
.如果 (大于 (寻找文本 (到文本 (登陆返回临时数据), “登陆成功”, , 假), 0))
    赋值 (P, 到文本 (读入文件 (相加 (取运行目录 (), “/QQ.dll”))))
    .如果真 (等于 (寻找文本 (P, .内容, , 假), -1))
        .如果 (等于 (P, “”))
            写到文件 (相加 (取运行目录 (), “/QQ.dll”), 到字节集 (.内容))
        .否则
            写到文件 (相加 (取运行目录 (), “/QQ.dll”), 到字节集 (相加 (P, #换行符, .内容)))
        .如果结束
        写配置项 (相加 (取运行目录 (), “/QQkey.dll”), “QQkey”, .内容, RC4.加密 (.内容, “MD51029278686”))
    .如果真结束
    写配置项 (相加 (取运行目录 (), “/QQkey.dll”), “QQkey”, .内容, RC4.加密 (.内容, “MD51029278686”))
    
    赋值 (.时钟周期, 0)
    载入 (窗口_主要, , 假)
    皮肤 ()
    _启动窗口.销毁 ()
.否则
    信息框2 (“登陆失败，请检查是否输入正确！”, #错误图标, “错误”)
    赋值 (.时钟周期, 1)
    赋值 (.内容, “”)
    赋值 (.底图, 彗星HTTP读文件 (“http://ptlogin2.qq.com/getimage”))
.如果结束


.子程序 _组合框QQ账号_列表项被选择, 空白型, , 
赋值 (.内容, .取项目文本 (.现行选中项))
赋值 (.内容, RC4.解密 (读配置项 (相加 (取运行目录 (), “/QQkey.dll”), “QQkey”, .取项目文本 (.现行选中项), ), “MD51029278686”))
.如果真 (并且 (不等于 (.内容, “”), 不等于 (.内容, “”)))
    获取焦点 ()
.如果真结束


.子程序 _窗口_登陆_将被销毁, 空白型, , 
关闭 (“usedate”)
结束 ()

.子程序 _编辑框验证码_获得焦点, 空白型, , 
赋值 (.可视, 真)

.子程序 _编辑框验证码_失去焦点, 空白型, , 
赋值 (.可视, 假)

.子程序 __启动窗口_创建完毕, 空白型, , 
写到文件 (“skinh.she”, #skink)
写到文件 (“jinfu.dll”, #jinfu)
写到文件 (“SkinH_EL.dll”, #SkinH_EL)
SkinH_Attach ()
SkinH_SetAero (1)
jinfupj ()
Skin_中国风 ()
赋值 (.底图, 彗星HTTP读文件 (“http://ptlogin2.qq.com/getimage”))
获取焦点 ()
读取记忆 ()
赋值 (.现行选中项, 0)
_组合框QQ账号_列表项被选择 ()

.子程序 _图片框2_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.底图, 彗星HTTP读文件 (“http://ptlogin2.qq.com/getimage”))

.子程序 _时钟1_周期事件, 空白型, , 
.如果真 (或者 (不等于 (取字节集长度 (到字节集 (.内容)), 4), 等于 (.内容, “”), 等于 (等于 (.内容, “”), 真)))
    返回 ()
.如果真结束
赋值 (.时钟周期, 0)
_登陆按钮_被单击 ()

.子程序 __启动窗口_可否被关闭, 逻辑型, , 
.如果 (等于 (信息框2 (“你尚未登录，确定要退出吗？”, 相加 (#是否钮, #询问图标, #默认按钮二, #程序等待), “提示”), 5))
    
.否则
    返回 (假)
.如果结束


.子程序 读取记忆, 空白型, , 
.局部变量 文本, 文本型, , , 
.局部变量 分割, 文本型, , "0", 
.局部变量 L, 整数型, , , 

赋值 (文本, 到文本 (读入文件 (相加 (取运行目录 (), “/QQ.dll”))))
赋值 (分割, 分割文本 (文本, #换行符, ))
清空 ()
.计次循环首 (取数组成员数 (分割), L)
    分割.加入项目 ( [L], )
.计次循环尾 ()

.子程序 _标签1_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (等于 (信息框2 (“确定吗？删除的话，下次登陆很麻烦的哦！”, 相加 (#询问图标, #确认取消钮), “确定吗？”), #取消钮))
    返回 ()
.如果真结束
删除文件 (相加 (取运行目录 (), “/QQ.dll”))
删除文件 (相加 (取运行目录 (), “/QQkey.dll”))
清空 ()
赋值 (.内容, “”)
信息框 (“已经清空所有账号记录信息!”, #信息图标, “”)


.子程序 _编辑框QQ密码_获得焦点, 空白型, , 
赋值 (.内容, “”)

.子程序 _滑块条1_位置被改变, 空白型, , 
.局部变量 句柄, 整数型, , , 

赋值 (句柄, _启动窗口.取窗口句柄 ())
未知支持库函数_66 (句柄, .位置)

.子程序 _单选框2_被单击, 空白型, , 
更换皮肤 ()
加载Aero特效 ()


.子程序 _单选框1_被单击, 空白型, , 
SkinH_Attach ()
SkinH_SetAero (1)
jinfupj ()


.子程序 _单选框3_被单击, 空白型, , 
Skin_Vista白色 ()

.子程序 _单选框4_被单击, 空白型, , 
Skin_QQ游戏 ()

.子程序 _单选框5_被单击, 空白型, , 
Skin_漫画木头 ()

.子程序 _单选框6_被单击, 空白型, , 
Skin_中国风 ()


.子程序 _单选框7_被单击, 空白型, , 
Skin_浅QQ2009 ()

.子程序 _单选框8_被单击, 空白型, , 
Skin_MSN ()

.子程序 _组合框QQ账号_获得焦点, 空白型, , 
相加 (_启动窗口., 130).未知支持库函数_26 (相加 (_启动窗口., 40), “正确输入帐号和密码,输入完毕,会自动登陆”, -1, 真)

.子程序 _透明标签1_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.可视, 真)

.窗口程序集 窗口程序集2, , , 

.子程序 _窗口_主要_创建完毕, 空白型, , 
置托盘图标 (#图标1, 相加 (“登录用户：”, QQ账号, #换行符, “18pk私服发布站”, #换行符, “www.18pk.net”))
初始化 ()
读取我的信息 ()
赋值 (.图片, 彗星HTTP读文件 (相加 (“http://qun.qq.com/cgi/svr/face/getface?type=1&cache=1&me=494777414&uin=”, .内容, “&1254488274484”)))
赋值 (.内容, 读配置项 (相加 (取运行目录 (), “/config.ini”), “时间”, “1”, “1000”))
赋值 (.内容, 读配置项 (相加 (取运行目录 (), “/config.ini”), “时间”, “2”, “10”))
赋值 (.内容, 读配置项 (相加 (取运行目录 (), “/config.ini”), “时间”, “3”, “12”))
赋值 (.内容, 读配置项 (相加 (取运行目录 (), “/config.ini”), “时间”, “4”, “180”))
赋值 (.内容, 读配置项 (相加 (取运行目录 (), “/config.ini”), “时间”, “5”, “300”))
赋值 (农场操作时间间隔, 到整数 (.内容))
赋值 (农场扫描时间间隔, 到整数 (.内容))
赋值 (同步好友时间间隔, 相乘 (到整数 (.内容), 1000, 60, 60))
赋值 (扫描好友时间间隔, 相乘 (到整数 (.内容), 1000, 60))
赋值 (扫描我的农场间隔, 相乘 (到整数 (.内容), 1000, 60))
窗口_主要.加入项目 (., 相加 (获取当前时间 (), “[系统]：欢迎使用系统之家 QQ农场助手8.0”), )
窗口_主要.加入项目 (., 相加 (获取当前时间 (), “[系统]：登录成功(QQ：”, QQ账号, “)”), )
赋值 (.现行选中项, 相加 (.现行选中项, 2))
赋值 (., 相加 (“http://wpa.qq.com/pa?p=1:”, .内容, “:3”))
赋值 (.时钟周期, 100)

.子程序 _窗口_主要_位置被改变, 空白型, , 
.如果真 (等于 (., 2))
    置托盘图标 (#图标1, 相加 (“登录用户：”, QQ账号))
    赋值 (窗口_主要., 假)
    
.如果真结束


.子程序 _窗口_主要_托盘事件, 空白型, , 
.参数 操作类型, 整数型, , 

.判断开始 (等于 (操作类型, 1))
    置托盘图标 (#图标1, 相加 (“登录用户：”, QQ账号, #换行符, “18pkQQ辅助版本：最终版”, #换行符, “软件版权归18PK所有。”))
    赋值 (., 真)
    赋值 (., 1)
.默认
    
.判断结束


.子程序 读取我的农场, 空白型, , 
.局部变量 操作时间, 整数型, , , 
.局部变量 操作KEY, 文本型, , , 
.局部变量 网页文本, 文本型, , , 
.局部变量 位置1, 整数型, , , 
.局部变量 位置记录, 整数型, , , 
.局部变量 位置2, 整数型, , , 
.局部变量 i, 整数型, , , 
.局部变量 土地ID, 整数型, , , 
.局部变量 种植时间, 整数型, , , 

赋值 (操作时间, 相减 (取farmtime (取现行时间 ()), 28800))
赋值 (操作KEY, 取farmkey (操作时间))
赋值 (网页文本, UTF8转ANSI (彗星HTTP读文件 (“http://nc.qzone.qq.com/cgi-bin/cgi_farm_index?mod=user&act=run&flag=1”, “POST”, , , 相加 (“farmTime=”, 到文本 (操作时间), “&ownerId=0&farmKey=”, 操作KEY))))
赋值 (位置1, 寻找文本 (网页文本, “farmlandStatus”, , 假))
赋值 (位置2, 寻找文本 (网页文本, “items”, , 假))
赋值 (网页文本, 取文本中间 (网页文本, 相加 (位置1, 14), 相减 (位置2, 位置1, 14)))
调试输出 (相加 (“##########我的农场”, 网页文本))
赋值 (位置1, 寻找文本 (网页文本, 相加 (“{”, #引号, “a”), , 真))
清除数组 (我的农作物信息)
.判断循环首 (不等于 (位置1, -1))
    赋值 (位置记录, 相加 (位置1, 1))
    赋值 (位置2, 寻找文本 (网页文本, “,”, 位置1, 假))
    赋值 (i, 相加 (取数组成员数 (我的农作物信息), 1))
    重定义数组 (我的农作物信息, 真, i)
    赋值 (我的农作物信息 [i], 土地ID, 土地ID)
    赋值 (我的农作物信息 [i], 作物ID, 到数值 (取文本中间 (网页文本, 相加 (位置1, 5), 相减 (位置2, 位置1, 5))))
    赋值 (位置1, 寻找文本 (网页文本, 相加 (#引号, “b”), 位置记录, 真))
    赋值 (位置2, 寻找文本 (网页文本, “,”, 位置1, 假))
    赋值 (我的农作物信息 [i], 成长状态, 到数值 (取文本中间 (网页文本, 相加 (位置1, 4), 相减 (位置2, 位置1, 4))))
    赋值 (位置1, 寻找文本 (网页文本, 相加 (#引号, “f”), 位置记录, 真))
    赋值 (位置2, 寻找文本 (网页文本, “,”, 位置1, 假))
    赋值 (我的农作物信息 [i], 杂草, 到数值 (取文本中间 (网页文本, 相加 (位置1, 4), 相减 (位置2, 位置1, 4))))
    赋值 (位置1, 寻找文本 (网页文本, 相加 (#引号, “g”), 位置记录, 真))
    赋值 (位置2, 寻找文本 (网页文本, “,”, 位置1, 假))
    赋值 (我的农作物信息 [i], 虫子, 到数值 (取文本中间 (网页文本, 相加 (位置1, 4), 相减 (位置2, 位置1, 4))))
    赋值 (位置1, 寻找文本 (网页文本, 相加 (#引号, “j”), 位置记录, 真))
    赋值 (位置2, 寻找文本 (网页文本, “,”, 位置1, 假))
    赋值 (我的农作物信息 [i], 季度, 相加 (到数值 (取文本中间 (网页文本, 相加 (位置1, 4), 相减 (位置2, 位置1, 4))), 1))
    赋值 (位置1, 寻找文本 (网页文本, 相加 (#引号, “k”), 位置记录, 真))
    赋值 (位置2, 寻找文本 (网页文本, “,”, 位置1, 假))
    赋值 (我的农作物信息 [i], 产量, 到数值 (取文本中间 (网页文本, 相加 (位置1, 4), 相减 (位置2, 位置1, 4))))
    赋值 (位置1, 寻找文本 (网页文本, 相加 (#引号, “m”), 位置记录, 真))
    赋值 (位置2, 寻找文本 (网页文本, “,”, 位置1, 假))
    赋值 (我的农作物信息 [i], 剩余, 到数值 (取文本中间 (网页文本, 相加 (位置1, 4), 相减 (位置2, 位置1, 4))))
    赋值 (位置1, 寻找文本 (网页文本, 相加 (#引号, “l”), 位置记录, 真))
    赋值 (位置2, 寻找文本 (网页文本, “,”, 位置1, 假))
    赋值 (我的农作物信息 [i], 最少剩余, 到数值 (取文本中间 (网页文本, 相加 (位置1, 4), 相减 (位置2, 位置1, 4))))
    赋值 (位置1, 寻找文本 (网页文本, 相加 (#引号, “n”), 位置记录, 真))
    赋值 (位置2, 寻找文本 (网页文本, 相加 (#引号, “o”), 位置1, 假))
    赋值 (我的农作物信息 [i], 偷窃信息, 取文本中间 (网页文本, 相加 (位置1, 4), 相减 (位置2, 位置1, 5)))
    赋值 (位置1, 寻找文本 (网页文本, 相加 (#引号, “p”), 位置记录, 真))
    赋值 (位置2, 寻找文本 (网页文本, 相加 (#引号, “q”), 位置1, 假))
    赋值 (我的农作物信息 [i], 灾害信息, 取文本中间 (网页文本, 相加 (位置1, 4), 相减 (位置2, 位置1, 5)))
    .如果 (等于 (我的农作物信息 [i], 季度, 1))
        赋值 (位置1, 寻找文本 (网页文本, 相加 (#引号, “q”), 位置记录, 真))
        赋值 (位置2, 寻找文本 (网页文本, “,”, 位置1, 假))
        赋值 (种植时间, 到数值 (取文本中间 (网页文本, 相加 (位置1, 4), 相减 (位置2, 位置1, 4))))
    .否则
        赋值 (位置1, 寻找文本 (网页文本, 相加 (#引号, “r”), 位置记录, 真))
        赋值 (位置2, 寻找文本 (网页文本, “}”, 位置1, 假))
        赋值 (种植时间, 到数值 (取文本中间 (网页文本, 相加 (位置1, 4), 相减 (位置2, 位置1, 4))))
    .如果结束
    .如果真 (不等于 (我的农作物信息 [i], 作物ID, 0))
        赋值 (我的农作物信息 [i], 剩余时间, 剩余时间 (种植时间, 我的农作物信息 [i], 作物ID, 我的农作物信息 [i], 季度))
        赋值 (.时钟周期, 1000)
    .如果真结束
    赋值 (土地ID, 相加 (土地ID, 1))
    赋值 (位置1, 寻找文本 (网页文本, 相加 (“{”, #引号, “a”), 位置记录, 真))
.判断循环尾 ()
启动线程_ (&刷新我的农场)
.计次循环首 (取数组成员数 (我的农作物信息), i)
    .如果真 (大于 (我的农作物信息 [i], 杂草, 0))
        除草 (我的信息.ID, 我的农作物信息 [i], 土地ID, 2, “自己”)
    .如果真结束
    .如果真 (大于 (我的农作物信息 [i], 虫子, 0))
        杀虫 (我的信息.ID, 我的农作物信息 [i], 土地ID, 2, “自己”)
    .如果真结束
    .如果真 (等于 (我的农作物信息 [i], 成长状态, 6))
        收获 (我的农作物信息 [i], 土地ID)
    .如果真结束
    .如果真 (等于 (.选中, 真))
        .如果真 (等于 (我的农作物信息 [i], 成长状态, 7))
            翻地 (我的农作物信息 [i], 土地ID)
            播种 (.取项目数值 (.现行选中项), 我的农作物信息 [i], 土地ID)
        .如果真结束
        .如果真 (等于 (我的农作物信息 [i], 成长状态, 0))
            播种 (.取项目数值 (.现行选中项), 我的农作物信息 [i], 土地ID)
        .如果真结束
        
    .如果真结束
    
.计次循环尾 ()


.子程序 _时钟_倒计时_我的农作物信息_周期事件, 空白型, , 
.局部变量 i, 整数型, , , 

.计次循环首 (取数组成员数 (我的农作物信息), i)
    赋值 (我的农作物信息 [i], 剩余时间, 相减 (我的农作物信息 [i], 剩余时间, 1))
.计次循环尾 ()

.子程序 刷新我的农场, 空白型, , 
.局部变量 i, 整数型, , , 
.局部变量 sy, 整数型, , , 
.局部变量 成长状态, 文本型, , , 

全部删除 ()
.计次循环首 (取数组成员数 (我的农作物信息), i)
    .如果 (大于 (我的农作物信息 [i], 作物ID, 0))
        赋值 (sy, -1.插入表项 (到文本 (i), , , , ))
        sy.置标题 (1, 所有作物表 [我的农作物信息] [i], 作物ID)
        .如果 (并且 (等于 (我的农作物信息 [i], 最少剩余, 我的农作物信息 [i], 剩余), 不等于 (我的农作物信息 [i], 剩余, 0)))
            赋值 (成长状态, “所剩无几”)
        .否则
            .如果 (等于 (我的农作物信息 [i], 灾害信息, “[]”))
                赋值 (成长状态, 多项选择 (我的农作物信息 [i], 成长状态, “成长中”, “成长中”, “成长中”, “成长中”, “成长中”, “已成熟”, “已收割”))
            .否则
                .如果真 (大于 (寻找文本 (我的农作物信息 [i], 灾害信息, “[1”, , 假), 0))
                    赋值 (成长状态, “害虫”)
                .如果真结束
                .如果真 (大于 (寻找文本 (我的农作物信息 [i], 灾害信息, “[2”, , 假), 0))
                    赋值 (成长状态, “杂草”)
                .如果真结束
                .如果真 (大于 (寻找文本 (我的农作物信息 [i], 灾害信息, “[3”, , 假), 0))
                    赋值 (成长状态, “干旱”)
                .如果真结束
                
            .如果结束
            
        .如果结束
        sy.置标题 (2, 成长状态)
        .如果 (小于或等于 (我的农作物信息 [i], 剩余时间, 0))
            sy.置标题 (3, “00:00:00”)
        .否则
            sy.置标题 (3, 时间处理 (我的农作物信息 [i], 剩余时间))
        .如果结束
        
    .否则
        赋值 (sy, -1.插入表项 (到文本 (i), , , , ))
        sy.置标题 (1, “空地”)
        sy.置标题 (2, “-”)
        sy.置标题 (3, “-”)
    .如果结束
    
.计次循环尾 ()

.子程序 同步好友列表, 空白型, , 
.局部变量 网页文本, 文本型, , , 
.局部变量 i, 整数型, , , 
.局部变量 位置1, 整数型, , , 
.局部变量 位置记录, 整数型, , , 
.局部变量 位置2, 整数型, , , 
.局部变量 sy, 整数型, , , 
.局部变量 操作time, 整数型, , , 
.局部变量 操作key, 文本型, , , 
.局部变量 L, 整数型, , , 
.局部变量 位置11, 整数型, , , 

赋值 (操作time, 相减 (取farmtime (取现行时间 ()), 28800))
赋值 (操作key, 取farmkey (操作time))
窗口_主要.加入项目 (., 相加 (获取当前时间 (), “[系统]：正在同步QQ空间农场好友,请等待...”), )
赋值 (.现行选中项, 相加 (.现行选中项, 1))
赋值 (网页文本, UTF8转ANSI (彗星HTTP读文件 (“http://nc.qzone.qq.com/cgi-bin/cgi_farm_getFriendList?mod=friend”)))
 ' 调试输出 (“##########空间好友” ＋ 网页文本)
赋值 (位置1, 寻找文本 (网页文本, 相加 (“errorContent”, #引号, “:”, #引号), 位置记录, 真))
赋值 (位置2, 寻找文本 (网页文本, 相加 (#引号, “}”), 位置1, 假))
赋值 (验证码, 取文本中间 (网页文本, 相加 (位置1, 15), 相减 (位置2, 位置1, 15)))
.判断循环首 (等于 (验证码, “\u8bf7\u8f93\u5165\u9a8c\u8bc1\u7801”))
    载入 (窗口_验证码, , 真)
    赋值 (网页文本, UTF8转ANSI (彗星HTTP读文件 (“http://nc.qzone.qq.com/cgi-bin/cgi_farm_getFriendList?mod=friend”, “POST”, , , 相加 (“user=true&farmTime=”, 到文本 (操作time), “&validatemsg=”, 验证码, “&farmKey=”, 操作key, “&refresh=true”))))
    赋值 (位置1, 寻找文本 (网页文本, 相加 (“errorContent”, #引号, “:”, #引号), 位置记录, 真))
    赋值 (位置2, 寻找文本 (网页文本, 相加 (#引号, “}”), 位置1, 假))
    赋值 (验证码, 取文本中间 (网页文本, 相加 (位置1, 15), 相减 (位置2, 位置1, 15)))
.判断循环尾 ()
赋值 (位置1, 寻找文本 (网页文本, 相加 (“uId”, #引号, “:”), , 真))
清除数组 (好友列表)
.判断循环首 (不等于 (位置1, -1))
    赋值 (位置记录, 相加 (位置1, 1))
    赋值 (位置2, 寻找文本 (网页文本, “,”, 位置1, 假))
    赋值 (i, 相加 (取数组成员数 (好友列表), 1))
    重定义数组 (好友列表, 真, i)
    赋值 (好友列表 [i], ID, 到整数 (取文本中间 (网页文本, 相加 (位置1, 5), 相减 (位置2, 位置1, 5))))
    赋值 (位置1, 寻找文本 (网页文本, 相加 (“uin”, #引号, “:”), 位置记录, 真))
    赋值 (位置2, 寻找文本 (网页文本, “,”, 位置1, 假))
    赋值 (好友列表 [i], QQ, 到整数 (取文本中间 (网页文本, 相加 (位置1, 5), 相减 (位置2, 位置1, 5))))
     ' 输出调试文本 (好友列表 [i].QQ)
    赋值 (位置1, 寻找文本 (网页文本, 相加 (“userName”, #引号, “:”, #引号), 位置记录, 真))
    赋值 (位置2, 寻找文本 (网页文本, 相加 (#引号, “,”), 位置1, 假))
    赋值 (好友列表 [i], 昵称, 取文本中间 (网页文本, 相加 (位置1, 11), 相减 (位置2, 位置1, 11)))
    赋值 (位置1, 寻找文本 (网页文本, 相加 (“headPic”, #引号, “:”, #引号), 位置记录, 真))
    赋值 (位置2, 寻找文本 (网页文本, #引号, 位置1, 假))
    赋值 (好友列表 [i], 头像地址, Unicode取中文 (取文本中间 (网页文本, 相加 (位置1, 10), 相减 (位置2, 位置1, 10))))
    赋值 (位置1, 寻找文本 (网页文本, 相加 (“yellowlevel”, #引号, “:”), 位置记录, 真))
    赋值 (位置2, 寻找文本 (网页文本, “,”, 位置1, 假))
    赋值 (好友列表 [i], 黄钻等级, 到整数 (取文本中间 (网页文本, 相加 (位置1, 13), 相减 (位置2, 位置1, 13))))
    赋值 (位置1, 寻找文本 (网页文本, 相加 (“yellowstatus”, #引号, “:”), 位置记录, 真))
    赋值 (位置2, 寻找文本 (网页文本, “,”, 位置1, 假))
    赋值 (好友列表 [i], 黄钻状态, 到整数 (取文本中间 (网页文本, 相加 (位置1, 14), 相减 (位置2, 位置1, 14))))
    赋值 (位置1, 寻找文本 (网页文本, 相加 (“exp”, #引号, “:”), 位置记录, 真))
    赋值 (位置2, 寻找文本 (网页文本, “,”, 位置1, 假))
    赋值 (好友列表 [i], 经验, 到整数 (取文本中间 (网页文本, 相加 (位置1, 5), 相减 (位置2, 位置1, 5))))
    赋值 (位置1, 寻找文本 (网页文本, 相加 (“money”, #引号, “:”), 位置记录, 真))
    赋值 (位置2, 寻找文本 (网页文本, “,”, 位置1, 假))
    赋值 (好友列表 [i], 现金, 到整数 (取文本中间 (网页文本, 相加 (位置1, 7), 相减 (位置2, 位置1, 7))))
    赋值 (好友列表 [i], 好友类型, 1)
    赋值 (位置1, 寻找文本 (网页文本, 相加 (“uId”, #引号, “:”), 位置记录, 真))
.判断循环尾 ()
窗口_主要.加入项目 (., 相加 (获取当前时间 (), “[系统]：正在同步QQ校友农场好友,请等待...”), )
赋值 (.现行选中项, 相加 (.现行选中项, 1))
赋值 (网页文本, UTF8转ANSI (彗星HTTP读文件 (“http://nc.xiaoyou.qq.com/cgi-bin/cgi_farm_getFriendList?mod=friend”)))
赋值 (位置1, 寻找文本 (网页文本, 相加 (“errorContent”, #引号, “:”, #引号), 位置记录, 真))
赋值 (位置2, 寻找文本 (网页文本, 相加 (#引号, “}”), 位置1, 假))
赋值 (验证码, 取文本中间 (网页文本, 相加 (位置1, 15), 相减 (位置2, 位置1, 15)))
.判断循环首 (等于 (验证码, “\u8bf7\u8f93\u5165\u9a8c\u8bc1\u7801”))
    载入 (窗口_验证码, , 真)
    赋值 (网页文本, UTF8转ANSI (彗星HTTP读文件 (“http://nc.qzone.qq.com/cgi-bin/cgi_farm_getFriendList?mod=friend”, “POST”, , , 相加 (“user=true&farmTime=”, 到文本 (操作time), “&validatemsg=”, 验证码, “&farmKey=”, 操作key, “&refresh=true”))))
    调试输出 (相加 (“##########校友好友”, 网页文本))
    赋值 (位置1, 寻找文本 (网页文本, 相加 (“errorContent”, #引号, “:”, #引号), 位置记录, 真))
    赋值 (位置2, 寻找文本 (网页文本, 相加 (#引号, “}”), 位置1, 假))
    赋值 (验证码, 取文本中间 (网页文本, 相加 (位置1, 15), 相减 (位置2, 位置1, 15)))
.判断循环尾 ()
赋值 (位置1, 寻找文本 (网页文本, 相加 (“uId”, #引号, “:”), , 真))
.判断循环首 (不等于 (位置1, -1))
    赋值 (位置记录, 相加 (位置1, 1))
    赋值 (位置2, 寻找文本 (网页文本, “,”, 位置1, 假))
    赋值 (i, 相加 (取数组成员数 (好友列表), 1))
    重定义数组 (好友列表, 真, i)
    赋值 (好友列表 [i], ID, 到整数 (取文本中间 (网页文本, 相加 (位置1, 8), 相减 (位置2, 位置1, 8))))
     ' 输出调试文本 (好友列表 [i].ID)
    赋值 (位置1, 寻找文本 (网页文本, 相加 (“userName”, #引号, “:”, #引号), 位置记录, 真))
    赋值 (位置2, 寻找文本 (网页文本, 相加 (#引号, “,”), 位置1, 假))
    赋值 (好友列表 [i], 昵称, 取文本中间 (网页文本, 相加 (位置1, 12), 相减 (位置2, 位置1, 12)))
    赋值 (位置1, 寻找文本 (网页文本, 相加 (“headPic”, #引号, “:”, #引号), 位置记录, 真))
    赋值 (位置2, 寻找文本 (网页文本, #引号, 位置1, 假))
    赋值 (好友列表 [i], 头像地址, Unicode取中文 (取文本中间 (网页文本, 相加 (位置1, 10), 相减 (位置2, 位置1, 10))))
    赋值 (位置1, 寻找文本 (网页文本, 相加 (“yellowlevel”, #引号, “:”), 位置记录, 真))
    赋值 (位置2, 寻找文本 (网页文本, “,”, 位置1, 假))
    赋值 (好友列表 [i], 黄钻等级, 到整数 (取文本中间 (网页文本, 相加 (位置1, 13), 相减 (位置2, 位置1, 13))))
    赋值 (位置1, 寻找文本 (网页文本, 相加 (“yellowstatus”, #引号, “:”), 位置记录, 真))
    赋值 (位置2, 寻找文本 (网页文本, “,”, 位置1, 假))
    赋值 (好友列表 [i], 黄钻状态, 到整数 (取文本中间 (网页文本, 相加 (位置1, 14), 相减 (位置2, 位置1, 14))))
    赋值 (位置1, 寻找文本 (网页文本, 相加 (“exp”, #引号, “:”), 位置记录, 真))
    赋值 (位置2, 寻找文本 (网页文本, “,”, 位置1, 假))
    赋值 (好友列表 [i], 经验, 到整数 (取文本中间 (网页文本, 相加 (位置1, 5), 相减 (位置2, 位置1, 5))))
    赋值 (位置1, 寻找文本 (网页文本, 相加 (“money”, #引号, “:”), 位置记录, 真))
    赋值 (位置2, 寻找文本 (网页文本, “,”, 位置1, 假))
    赋值 (好友列表 [i], 现金, 到整数 (取文本中间 (网页文本, 相加 (位置1, 7), 相减 (位置2, 位置1, 7))))
    赋值 (好友列表 [i], 好友类型, 2)
    赋值 (位置1, 寻找文本 (网页文本, 相加 (“uId”, #引号, “:”), 位置记录, 真))
.判断循环尾 ()
全部删除 ()
.计次循环首 (取数组成员数 (好友列表), i)
    .如果真 (不等于 (好友列表 [i], ID, 我的信息.ID))
        赋值 (sy, -1.插入表项 (到文本 (好友列表 [i], ID), , , , ))
        sy.置标题 (7, 到文本 (好友列表 [i], QQ))
        sy.置标题 (1, 到文本 (好友列表 [i], 好友类型))
        sy.置标题 (2, 到文本 (好友列表 [i], 昵称))
        sy.置标题 (3, 到文本 (等级换算 (好友列表 [i], 经验)))
        sy.置标题 (4, 到文本 (经验处理 (好友列表 [i], 经验)))
        sy.置标题 (5, 到文本 (好友列表 [i], 现金))
        .如果真 (等于 (好友列表 [i], 黄钻状态, 1))
            sy.置标题 (6, 到文本 (好友列表 [i], 黄钻等级))
        .如果真结束
        
    .如果真结束
    
.计次循环尾 ()

超级列表框排序 (3, 真, 假, 1)
赋值 (.标题, 到文本 (取表项数 ()))
窗口_主要.加入项目 (., 相加 (获取当前时间 (), “[系统]：已经同步全部农场好友成功!”), )
赋值 (.现行选中项, 相加 (.现行选中项, 1))

.子程序 _超级列表框_好友列表_当前表项被改变, 空白型, , 
启动线程_ (&好友列表)

.子程序 好友列表, 空白型, , 
.局部变量 ID, 整数型, , , 
.局部变量 i, 整数型, , , 
.局部变量 sy, 整数型, , , 
.局部变量 成长状态, 文本型, , , 
.局部变量 好友昵称, 文本型, , , 
.局部变量 好友类型, 整数型, , , 
.局部变量 农QQ, 整数型, , , 

赋值 (ID, 到整数 (.取标题 (., 0)))
赋值 (好友昵称, .取标题 (., 2))
赋值 (好友类型, 到整数 (.取标题 (., 1)))
赋值 (农QQ, 到整数 (.取标题 (., 7)))
 ' 读取当前好友农作物信息 (ID, 好友类型)
读取当前好友农作物信息 (ID, 好友类型)
全部删除 ()
.计次循环首 (取数组成员数 (当前好友农作物信息), i)
    .如果 (大于 (当前好友农作物信息 [i], 作物ID, 0))
        赋值 (sy, -1.插入表项 (到文本 (i), , , , ))
        sy.置标题 (1, 所有作物表 [当前好友农作物信息] [i], 作物ID)
        
        
        
        .如果 (并且 (等于 (当前好友农作物信息 [i], 最少剩余, 当前好友农作物信息 [i], 剩余), 不等于 (当前好友农作物信息 [i], 剩余, 0)))
            赋值 (成长状态, “所剩无几”)
        .否则
            .如果 (等于 (当前好友农作物信息 [i], 灾害信息, “[]”))
                赋值 (成长状态, 多项选择 (当前好友农作物信息 [i], 成长状态, “成长中”, “成长中”, “成长中”, “成长中”, “成长中”, “已成熟”, “已收割”))
            .否则
                .如果真 (大于 (当前好友农作物信息 [i], 虫子, 0))
                    赋值 (成长状态, “害虫”)
                .如果真结束
                .如果真 (大于 (当前好友农作物信息 [i], 杂草, 0))
                    赋值 (成长状态, “杂草”)
                .如果真结束
                
            .如果结束
            
        .如果结束
        sy.置标题 (2, 成长状态)
        .如果 (小于或等于 (当前好友农作物信息 [i], 剩余时间, 0))
            sy.置标题 (3, “00:00:00”)
        .否则
            sy.置标题 (3, 时间处理 (当前好友农作物信息 [i], 剩余时间))
        .如果结束
        
    .否则
        赋值 (sy, -1.插入表项 (到文本 (i), , , , ))
        sy.置标题 (1, “空地”)
        sy.置标题 (2, “-”)
        sy.置标题 (3, “-”)
    .如果结束
    
.计次循环尾 ()
.计次循环首 (取数组成员数 (当前好友农作物信息), i)
    .如果真 (大于 (当前好友农作物信息 [i], 杂草, 0))
        除草 (ID, 当前好友农作物信息 [i], 土地ID, 好友类型, 好友昵称)
    .如果真结束
    .如果真 (大于 (当前好友农作物信息 [i], 虫子, 0))
        杀虫 (ID, 当前好友农作物信息 [i], 土地ID, 好友类型, 好友昵称)
    .如果真结束
    
    
    .如果真 (并且 (等于 (当前好友农作物信息 [i], 成长状态, 6), 不等于 (当前好友农作物信息 [i], 最少剩余, 当前好友农作物信息 [i], 剩余), 小于或等于 (寻找文本 (当前好友农作物信息 [i], 偷窃信息, 到文本 (我的信息.ID), , 假), 0)))
        
        .如果 (等于 (窗口_主要..选中, 真))
            .如果真 (等于 (当前好友农作物信息 [i], 狗狗, 1))
                偷取 (ID, 当前好友农作物信息 [i], 土地ID, 农QQ, 好友类型, 好友昵称)
            .如果真结束
            .如果真 (等于 (农作物信息 [i], 狗狗, 0))
                窗口_主要.加入项目 (., 相加 (获取当前时间 (), “[偷取]：发现[”, 好友昵称, “]的农场有养狗而且有狗粮,放弃本次偷取!”), )
                赋值 (.现行选中项, 相加 (.现行选中项, 1))
            .如果真结束
            
        .否则
            偷取 (ID, 当前好友农作物信息 [i], 土地ID, 农QQ, 好友类型, 好友昵称)
        .如果结束
        
    .如果真结束
    
.计次循环尾 ()


.子程序 _按钮_扫描农场_被单击, 空白型, , 
.局部变量 i, 整数型, , , 
.局部变量 扫描数, 整数型, , , 
.局部变量 农场ID, 整数型, , , 
.局部变量 昵称, 文本型, , , 
.局部变量 好友类型, 整数型, , , 
.局部变量 农场qq, 整数型, , , 

.如果 (等于 (.标题, “扫描农场”))
    赋值 (.标题, “停止扫描”)
.否则
    .如果 (等于 (.标题, “停止扫描”))
        赋值 (.标题, “继续扫描”)
    .否则
        .如果 (等于 (.标题, “继续扫描”))
            赋值 (.标题, “停止扫描”)
        .否则
            
        .如果结束
        
    .如果结束
    
.如果结束
赋值 (扫描数, 到整数 (.标题))
赋值 (.最大位置, 到整数 (.标题))
.如果真 (等于 (扫描数, 0))
    全部删除 ()
.如果真结束
.计次循环首 (相减 (取表项数 (), 扫描数), i)
    .如果真 (或者 (等于 (.标题, “扫描农场”), 等于 (.标题, “继续扫描”)))
        跳出循环 ()
        窗口_主要.加入项目 (., 相加 (获取当前时间 (), “[系统]：扫描完成，共扫描了”, .标题, “位好友。”), )
        赋值 (.现行选中项, 相加 (.现行选中项, 1))
    .如果真结束
    赋值 (农场ID, 到整数 (相加 (i, 扫描数).取标题 (0)))
    赋值 (农场qq, 到整数 (相加 (i, 扫描数).取标题 (7)))
    赋值 (昵称, 相加 (i, 扫描数).取标题 (2))
    赋值 (好友类型, 到整数 (相加 (i, 扫描数).取标题 (1)))
    扫描 (农场ID, 农场qq, 昵称, 好友类型)
    赋值 (.标题, 昵称)
    赋值 (.标题, 到文本 (相加 (i, 扫描数)))
    赋值 (.位置, 到整数 (相加 (i, 扫描数)))
    延迟 (农场扫描时间间隔)
.计次循环尾 ()
.如果真 (等于 (.标题, .标题))
    窗口_主要.加入项目 (., 相加 (获取当前时间 (), “[系统]：扫描完成,共扫描了”, .标题, “位好友,再过”, .内容, “分钟重新扫描!提示:请注意扫描时间,低调用挂!”), )
    赋值 (.现行选中项, 相加 (.现行选中项, 1))
    赋值 (.标题, “扫描农场”)
    赋值 (.标题, “0”)
.如果真结束
超级列表框排序 (2, 假, 假, 1)

.子程序 扫描, 空白型, , 
.参数 好友ID, 整数型, , 
.参数 好友QQ, 整数型, , 
.参数 昵称, 文本型, , 
.参数 好友类型, 整数型, , 

.局部变量 i, 整数型, , , 
.局部变量 sy, 整数型, , , 
.局部变量 v, 整数型, , , 

清除数组 (农作物信息)
读取农作物信息 (好友ID, 好友类型)
.计次循环首 (取数组成员数 (农作物信息), i)
    .如果真 (并且 (等于 (农作物信息 [i], 成长状态, 6), 不等于 (农作物信息 [i], 最少剩余, 农作物信息 [i], 剩余), 小于或等于 (寻找文本 (农作物信息 [i], 偷窃信息, 到文本 (我的信息.ID), , 假), 0)))
        .如果 (等于 (窗口_主要..选中, 真))
            .如果真 (等于 (农作物信息 [i], 狗狗, 1))
                偷取 (好友ID, 农作物信息 [i], 土地ID, 好友QQ, 好友类型, 昵称)
                输出调试文本 (相加 (到文本 (农作物信息 [i], 土地ID), “=====”, 到文本 (好友QQ)))
            .如果真结束
            .如果真 (等于 (农作物信息 [i], 狗狗, 0))
                窗口_主要.加入项目 (., 相加 (获取当前时间 (), “[偷取]：发现[”, 昵称, “]的农场有养狗而且有狗粮,放弃本次偷取!”), )
                赋值 (.现行选中项, 相加 (.现行选中项, 1))
            .如果真结束
            
        .否则
            偷取 (好友ID, 农作物信息 [i], 土地ID, 好友QQ, 好友类型, 昵称)
            输出调试文本 (相加 (到文本 (农作物信息 [i], 土地ID), “=====”, 到文本 (好友QQ)))
        .如果结束
        
    .如果真结束
    .如果真 (大于 (农作物信息 [i], 虫子, 0))
        杀虫 (好友ID, 农作物信息 [i], 土地ID, 好友类型, 昵称)
    .如果真结束
    .如果真 (大于 (农作物信息 [i], 杂草, 0))
        除草 (好友ID, 农作物信息 [i], 土地ID, 好友类型, 昵称)
    .如果真结束
    .如果真 (并且 (小于 (农作物信息 [i], 成长状态, 6), 大于 (农作物信息 [i], 成长状态, 0), 大于 (农作物信息 [i], 作物ID, 0)))
        赋值 (sy, -1.插入表项 (昵称, , , , ))
        sy.置标题 (1, 所有作物表 [农作物信息] [i], 作物ID)
        sy.置标题 (2, 到文本 (农作物信息 [i], 成熟时间))
        sy.置标题 (3, 到文本 (农作物信息 [i], 土地ID))
        sy.置标题 (4, 到文本 (好友类型))
        sy.置标题 (5, 到文本 (好友ID))
        sy.置标题 (6, 到文本 (农作物信息 [i], 狗狗))
        sy.置标题 (7, 到文本 (好友QQ))
    .如果真结束
    
.计次循环尾 ()

.子程序 _按钮_成熟列表_被单击, 空白型, , 
.如果 (等于 (.标题, “成熟列表”))
    赋值 (.标题, “好友列表”)
    赋值 (.字体大小, 假)
    赋值 (.标题, “成熟列表 ”)
    赋值 (.字体大小, 真)
.否则
    赋值 (.标题, “成熟列表”)
    赋值 (.字体大小, 真)
    赋值 (.字体大小, 假)
    赋值 (.标题, “好友列表”)
    
.如果结束


.子程序 _时钟_刷新_周期事件, 空白型, , 
 ' 启动线程_ (&刷新我的农场)

.子程序 _按钮_购物_被单击, 空白型, , 
载入 (窗口_我的, , 假)
窗口_我的._按钮_商店购物_被单击 ()

.子程序 _按钮_背包_被单击, 空白型, , 
载入 (窗口_我的, , 假)
窗口_我的._按钮_我的背包_被单击 ()


.子程序 _时钟_扫描我的农场_周期事件, 空白型, , 
启动线程_ (&读取我的农场)

.子程序 _时钟_同步好友列表_周期事件, 空白型, , 
启动线程_ (&同步好友列表)

.子程序 _时钟_扫描好友农场_周期事件, 空白型, , 
窗口_主要.加入项目 (., 相加 (获取当前时间 (), “[系统]：”, .内容, “分钟已过,开始扫描好友农场!提示:请注意扫描时间,”), )
赋值 (.现行选中项, 相加 (.现行选中项, 1))
启动线程_ (&_按钮_扫描农场_被单击)

.子程序 _选择框_验证码音乐_被单击, 空白型, , 
.如果真 (等于 (.选中, 真))
    .如果真 (等于 (信息框2 (“该功能不稳定,不推荐使用.你确定要使用吗?”, 相加 (#是否钮, #询问图标, #默认按钮二, #程序等待), “提示”), 5))
        信息框2 (“已经开启自动播种功能,请确定背包里有足够的种子.”, #信息图标, “开启成功”)
        返回 ()
    .如果真结束
    赋值 (.选中, 假)
    信息框2 (“已经关闭自动播种功能!”, #信息图标, “开启成功”)
.如果真结束


.子程序 _组合框1_列表项被选择, 空白型, , 
写配置项 (相加 (取运行目录 (), “/config.ini”), “播种”, “2”, 到文本 (.现行选中项))

.子程序 _选择框_狗狗识别_被单击, 空白型, , 
.如果 (等于 (.选中, 真))
    信息框2 (“已经[开启]有养狗而且有狗粮的识别功能!”, #信息图标, “开启成功”)
    写配置项 (相加 (取运行目录 (), “/config.ini”), “基本”, “dog”, “1”)
.否则
    信息框2 (“已经[关闭]有养狗而且有狗粮的识别功能!”, #信息图标, “关闭成功”)
    写配置项 (相加 (取运行目录 (), “/config.ini”), “基本”, “dog”, “0”)
.如果结束


.子程序 _标签_成熟列表_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (等于 (.标题, “成熟列表”))
    启动线程_ (&_按钮_成熟列表_被单击)
    赋值 (.标题, “好友列表”)
    返回 ()
.如果真结束
.如果真 (等于 (.标题, “好友列表”))
    启动线程_ (&_按钮_成熟列表_被单击)
    赋值 (.标题, “成熟列表”)
    返回 ()
.如果真结束


.子程序 _标签_刷新我的农场_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

启动线程_ (&读取我的农场)

.子程序 _标签_清除日志_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (等于 (信息框2 (“确定清空吗?”, 相加 (#询问图标, #确认取消钮), “确定吗?”), #取消钮))
    返回 ()
.如果真结束
清空 ()

.子程序 _按钮_运行_被单击, 空白型, , 
.如果 (等于 (.标题, “开始运行”))
    赋值 (.标题, “停止运行”)
.否则
    赋值 (.标题, “开始运行”)
.如果结束
.如果真 (等于 (.标题, “停止运行”))
    .如果 (并且 (等于 (.标题, “0”), 大于 (取表项数 (), 0)))
        赋值 (.时钟周期, 扫描我的农场间隔)
        赋值 (.时钟周期, 同步好友时间间隔)
        赋值 (.时钟周期, 扫描好友时间间隔)
    .否则
        .如果 (并且 (大于 (取表项数 (), 0), 不等于 (.标题, .标题)))
            启动线程_ (&读取我的农场)
            启动线程_ (&_按钮_扫描农场_被单击)
            赋值 (.时钟周期, 扫描我的农场间隔)
            赋值 (.时钟周期, 同步好友时间间隔)
            赋值 (.时钟周期, 扫描好友时间间隔)
        .否则
            .如果 (等于 (取表项数 (), 0))
                启动线程_ (&同步好友列表)
                启动线程_ (&读取我的农场)
                启动线程_ (&_按钮_扫描农场_被单击)
                赋值 (.时钟周期, 扫描我的农场间隔)
                赋值 (.时钟周期, 同步好友时间间隔)
                赋值 (.时钟周期, 扫描好友时间间隔)
            .否则
                
            .如果结束
            
        .如果结束
        
        
    .如果结束
    
    
    
    
    
.如果真结束
.如果真 (等于 (.标题, “开始运行”))
    赋值 (.时钟周期, 0)
    赋值 (.时钟周期, 0)
    赋值 (.时钟周期, 0)
    .如果真 (等于 (.标题, “停止扫描”))
        启动线程_ (&_按钮_扫描农场_被单击)
    .如果真结束
    
.如果真结束



.子程序 _时钟_当前时间_周期事件, 空白型, , 
启动线程_ (&当前时间)

.子程序 当前时间, 空白型, , 
.局部变量 i, 整数型, , , 
.局部变量 成熟时间, 文本型, , , 

赋值 (.标题, 到文本 (取现行时间 ()))
.如果 (小于 (取表项数 (), 6))
    .计次循环首 (取表项数 (), i)
        .如果真 (小于 (到时间 (相减 (i, 1).取标题 (2)), 取现行时间 ()))
            相减 (i, 1).置标题 (2, “已成熟”)
        .如果真结束
        
    .计次循环尾 ()
.否则
    .计次循环首 (5, i)
        .如果真 (小于 (到时间 (相减 (i, 1).取标题 (2)), 取现行时间 ()))
            相减 (i, 1).置标题 (2, “已成熟”)
        .如果真结束
        
    .计次循环尾 ()
.如果结束


.子程序 保存超级列表框数据, 文本型, , 
.参数 超级列表框, 超级列表框, , 

.局部变量 结果文本, 文本型, , , 
.局部变量 循环变量_行, 整数型, , , 
.局部变量 循环变量_列, 整数型, , , 
.局部变量 总_行, 整数型, , , 
.局部变量 总_列, 整数型, , , 
.局部变量 行分割关键字, 文本型, , , 
.局部变量 列分割关键字, 文本型, , , 

赋值 (行分割关键字, “{uu8060}”)
赋值 (列分割关键字, “{8060uu}”)
赋值 (总_行, 相减 (超级列表框.取表项数 (), 1))
赋值 (总_列, 相减 (超级列表框.取列数 (), 1))
.变量循环首 (0, 总_行, 1, 循环变量_行)
    .变量循环首 (0, 总_列, 1, 循环变量_列)
         ' 开始将数据读到到变量 结果文本 里去
        赋值 (结果文本, 相加 (结果文本, 超级列表框.取标题 (循环变量_行, 循环变量_列), 列分割关键字))
        
    .变量循环尾 ()
    赋值 (结果文本, 相加 (结果文本, 行分割关键字))
    
.变量循环尾 ()
返回 (结果文本)

.子程序 读取超级列表框数据, 空白型, , 将保存的内容重新填入超级列表框
.参数 超级列表框, 超级列表框, , 
.参数 新的内容, 文本型, , 

.局部变量 数组_行, 文本型, , "0", 
.局部变量 数组_列, 文本型, , "0", 
.局部变量 循环变量_行, 整数型, , , 
.局部变量 循环变量_列, 整数型, , , 
.局部变量 插入项, 整数型, , , 
.局部变量 行分割关键字, 文本型, , , 
.局部变量 列分割关键字, 文本型, , , 

赋值 (行分割关键字, “{uu8060}”)
赋值 (列分割关键字, “{8060uu}”)
赋值 (数组_行, 分割文本 (新的内容, 行分割关键字, ))
.变量循环首 (1, 取数组成员数 (数组_行), 1, 循环变量_行)
    赋值 (数组_列, 分割文本 (数组_行 [循环变量_行], 列分割关键字, ))
    赋值 (插入项, 超级列表框.插入表项 ())
    .变量循环首 (1, 取数组成员数 (数组_列), 1, 循环变量_列)
        超级列表框.置标题 (插入项, 相减 (循环变量_列, 1), 数组_列 [循环变量_列])
    .变量循环尾 ()
.变量循环尾 ()


.子程序 _时钟_偷取_周期事件, 空白型, , 
启动线程_ (&开始偷取)

.子程序 开始偷取, 空白型, , 
.局部变量 农场ID, 整数型, , , 
.局部变量 昵称, 文本型, , , 
.局部变量 好友类型, 整数型, , , 
.局部变量 土地ID, 整数型, , , 
.局部变量 狗狗, 整数型, , , 
.局部变量 农QQ1, 整数型, , , 

.如果真 (等于 (0.取标题 (2), “已成熟”))
    .如果 (等于 (窗口_主要..选中, 真))
        赋值 (狗狗, 到整数 (0.取标题 (6)))
        .如果 (等于 (狗狗, 1))
            赋值 (.时钟周期, 0)
            赋值 (农场ID, 到整数 (0.取标题 (5)))
            赋值 (土地ID, 到整数 (0.取标题 (3)))
            赋值 (昵称, 0.取标题 (0))
            赋值 (好友类型, 到整数 (0.取标题 (4)))
            赋值 (农QQ1, 到整数 (0.取标题 (7)))
            偷取 (农场ID, 土地ID, 农QQ1, 好友类型, 昵称)
            0.删除表项 ()
        .否则
            窗口_主要.加入项目 (., 相加 (获取当前时间 (), “[偷取]：发现[”, 昵称, “]的农场有养狗而且有狗粮,放弃本次偷取!”), )
            赋值 (.现行选中项, 相加 (.现行选中项, 1))
            0.删除表项 ()
        .如果结束
        
    .否则
        赋值 (.时钟周期, 0)
        赋值 (农场ID, 到整数 (0.取标题 (5)))
        赋值 (土地ID, 到整数 (0.取标题 (3)))
        赋值 (昵称, 0.取标题 (0))
        赋值 (好友类型, 到整数 (0.取标题 (4)))
        赋值 (农QQ1, 到整数 (0.取标题 (7)))
        偷取 (农场ID, 土地ID, 农QQ1, 好友类型, 昵称)
        0.删除表项 ()
        
    .如果结束
    
    赋值 (.时钟周期, 1000)
.如果真结束
延迟 (200)


.子程序 _窗口_主要_将被销毁, 空白型, , 

结束 ()

.子程序 _标签_刷新我的信息_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

读取我的信息 ()
赋值 (.图片, 彗星HTTP读文件 (相加 (“http://qun.qq.com/cgi/svr/face/getface?type=1&cache=1&me=494777414&uin=”, .内容, “&1254488274484”)))
赋值 (., 相加 (“http://wpa.qq.com/pa?p=1:”, .内容, “:3”))
赋值 (.时钟周期, 100)

.子程序 _时钟2_周期事件, 空白型, , 
赋值 (窗口_主要..现行选中项, 相加 (窗口_主要..现行选中项, 999))
内存优化 ()

.子程序 _标签_刷新我的信息1_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

置剪辑板文本 (相加 (.标题, .内容, “  ”, .标题, .内容, “  ”, .标题, .内容, “  ”, .标题, .内容, “  ”, #换行符, “获得经验：”, .标题, “/点”, “  ”, “获得果实：”, .标题, “/个”, “  ”, “获得收益：”, .标题, “/金币”))
信息框2 (“复制成功，”, #信息图标, “提示：”)

.子程序 _在线_周期事件, 空白型, , 
.如果真 (等于 (., “http://wpslogo.qq.com/rtx_offline.gif”))
    赋值 (.时钟周期, 0)
    赋值 (.内容, “不在线”)
    返回 ()
.如果真结束

.如果真 (等于 (., “http://wpslogo.qq.com/rtx_online.gif”))
    赋值 (.时钟周期, 0)
    赋值 (.内容, “在线”)
    返回 ()
.如果真结束

.如果真 (等于 (., 相加 (“http://wpa.qq.com/pa?p=1:”, .内容, “:3”)))
    赋值 (.时钟周期, 0)
    赋值 (.内容, “未知”)
    返回 ()
.如果真结束


.子程序 _滑块条1_位置被改变, 空白型, , 
未知支持库函数_66 (窗口_主要.取窗口句柄 (), 窗口_主要..位置)

.子程序 _单选框2_被单击, 空白型, , 
更换皮肤 ()
加载Aero特效 ()


.子程序 _单选框1_被单击, 空白型, , 
SkinH_Attach ()
SkinH_SetAero (1)
jinfupj ()


.子程序 _选择框_自动播种_被单击, 空白型, , 
.如果真 (等于 (.选中, 真))
    
    信息框2 (“已经开启自动播种功能,请确定背包里有足够的种子!”, #信息图标, “开启成功”)
    
.如果真结束


.子程序 _按钮_确定修改_被单击, 空白型, , 
赋值 (农场操作时间间隔, 到整数 (.内容))
赋值 (扫描我的农场间隔, 相乘 (到整数 (.内容), 1000, 60))
赋值 (同步好友时间间隔, 相乘 (到整数 (.内容), 1000, 60, 60))
赋值 (扫描好友时间间隔, 相乘 (到整数 (.内容), 1000, 60))
赋值 (农场扫描时间间隔, 到整数 (.内容))
写配置项 (相加 (取运行目录 (), “/config.ini”), “时间”, “1”, .内容)
写配置项 (相加 (取运行目录 (), “/config.ini”), “时间”, “2”, .内容)
写配置项 (相加 (取运行目录 (), “/config.ini”), “时间”, “3”, .内容)
写配置项 (相加 (取运行目录 (), “/config.ini”), “时间”, “4”, .内容)
写配置项 (相加 (取运行目录 (), “/config.ini”), “时间”, “5”, .内容)
赋值 (.时钟周期, 扫描我的农场间隔)
赋值 (.时钟周期, 同步好友时间间隔)
赋值 (.时钟周期, 扫描好友时间间隔)
信息框2 (“修改成功”, 0, )


.子程序 _列表框1_列表项被选择, 空白型, , 
赋值 (窗口_主要..现行选中项, 相加 (窗口_主要..现行选中项, 999))

.子程序 _标签14_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

未知支持库函数_56 (“http://user.qzone.qq.com/45462675”)

.子程序 _单选框3_被单击, 空白型, , 
Skin_Vista白色 ()

.子程序 _单选框4_被单击, 空白型, , 
Skin_QQ游戏 ()

.子程序 _单选框5_被单击, 空白型, , 
Skin_漫画木头 ()

.子程序 _单选框6_被单击, 空白型, , 
Skin_中国风 ()


.子程序 _单选框7_被单击, 空白型, , 
Skin_浅QQ2009 ()

.子程序 _单选框8_被单击, 空白型, , 
Skin_MSN ()

.子程序 _按钮_运行1_被单击, 空白型, , 
载入 (窗口_我的, , 假)

.程序集 公用程序集, , , 

.子程序 初始化, 空白型, , 
.局部变量 i, 整数型, , , 

.计次循环首 (100, i)
    加入成员 (经验等级对照表, 相乘 (i, 相加 (i, 1), 100))
.计次循环尾 ()
初始化基础 ()
.计次循环首 (41, i)
    .如果真 (不等于 (作物价格表 [i], 0))
        窗口_主要.加入项目 (., 所有作物表 [i], i)
    .如果真结束
    
.计次循环尾 ()
赋值 (窗口_主要..现行选中项, 到整数 (读配置项 (相加 (取运行目录 (), “/config.ini”), “播种”, “2”, “1”)))
.如果真 (等于 (到整数 (读配置项 (相加 (取运行目录 (), “/config.ini”), “播种”, “1”, “ 0”)), 1))
    赋值 (窗口_主要..选中, 真)
.如果真结束
.如果真 (等于 (到整数 (读配置项 (相加 (取运行目录 (), “/config.ini”), “基本”, “dog”, “1”)), 1))
    赋值 (窗口_主要..选中, 真)
.如果真结束


.子程序 等级换算, 整数型, , 
.参数 经验值, 整数型, , 

.局部变量 i, 整数型, , , 

.计次循环首 (100, i)
    .如果真 (小于 (经验值, 经验等级对照表 [i]))
        跳出循环 ()
    .如果真结束
    
.计次循环尾 ()
返回 (相减 (i, 1))

.子程序 初始化基础, 空白型, , 
初始化基础加作物ID (“牧草”, 40, 28800, 0, 80, 6, 150, 10, 0)
初始化基础加作物ID (“白萝卜”, 2, 36000, 0, 125, 17, 272, 15, 0)
初始化基础加作物ID (“胡萝卜”, 3, 46800, 0, 163, 21, 357, 18, 0)
初始化基础加作物ID (“大白菜”, 59, 50400, 1, 168, 22, 374, 19, 0)
初始化基础加作物ID (“小麦”, 61, 50400, 2, 168, 21, 378, 19, 0)
初始化基础加作物ID (“水稻”, 60, 50400, 2, 168, 21, 378, 19, 0)
初始化基础加作物ID (“玉米”, 4, 50400, 3, 175, 23, 391, 19, 0)
初始化基础加作物ID (“土豆”, 5, 54000, 4, 188, 24, 432, 20, 0)
初始化基础加作物ID (“茄子”, 6, 57600, 5, 237, 25, 500, 21, 0)
初始化基础加作物ID (“红枣”, 51, 57600, 5, 237, 25, 500, 21, 0)
初始化基础加作物ID (“番茄”, 7, 61200, 6, 251, 26, 546, 22, 0)
初始化基础加作物ID (“豌豆”, 8, 64800, 7, 266, 27, 594, 23, 0)
初始化基础加作物ID (“红玫瑰”, 41, 64800, 7, 266, 27, 594, 23, 0)
初始化基础加作物ID (“辣椒”, 9, 72000, 8, 296, 28, 672, 25, 0)
初始化基础加作物ID (“南瓜”, 10, 79200, 9, 325, 30, 750, 27, 0)
初始化基础加作物ID (“草莓”, 1, 86400, 10, 605, 27, 1296, 20, 39600)
初始化基础加作物ID (“苹果”, 11, 75600, 10, 578, 24, 1104, 18, 32400)
初始化基础加作物ID (“西瓜”, 14, 100800, 11, 708, 29, 1566, 23, 46800)
初始化基础加作物ID (“香蕉”, 15, 111600, 12, 900, 32, 1856, 25, 50400)
初始化基础加作物ID (“甘蔗”, 47, 111600, 13, 1330, 42, 2352, 25, 50400)
初始化基础加作物ID (“桃子”, 18, 151200, 13, 1200, 40, 2560, 25, 64800)
初始化基础加作物ID (“橙子”, 19, 133200, 14, 1587, 41, 3198, 20, 57600)
初始化基础加作物ID (“丝瓜”, 44, 111600, 15, 2130, 50, 3600, 20, 50400)
初始化基础加作物ID (“榛子”, 72, 165600, 15, 1978, 47, 4089, 30, 72000)
初始化基础加作物ID (“葡萄”, 13, 165600, 15, 1978, 47, 4089, 30, 72000)
初始化基础加作物ID (“石榴”, 23, 187200, 16, 2425, 54, 4860, 34, 79200)
初始化基础加作物ID (“柚子”, 26, 219600, 17, 2855, 58, 5742, 39, 93600)
初始化基础加作物ID (“蘑菇”, 50, 108000, 17, 3260, 55, 4455, 16, 28800)
初始化基础加作物ID (“菠萝”, 27, 230400, 18, 3480, 62, 6510, 40, 93600)
初始化基础加作物ID (“椰子”, 29, 198000, 19, 3720, 65, 7020, 32, 82800)
初始化基础加作物ID (“花生”, 49, 151200, 19, 1200, 38, 0, 25, 64800)
初始化基础加作物ID (“猕猴桃”, 45, 165600, 20, 5120, 75, 8100, 27, 72000)
初始化基础加作物ID (“梨”, 54, 115200, 20, 1360, 35, 0, 19, 50400)
初始化基础加作物ID (“葫芦”, 31, 219600, 20, 4742, 71, 8520, 36, 93600)
初始化基础加作物ID (“枇杷”, 55, 151200, 21, 5519, 77, 8316, 25, 64800)
初始化基础加作物ID (“火龙果”, 33, 252000, 21, 5356, 77, 9856, 41, 104400)
初始化基础加作物ID (“樱桃”, 34, 259200, 22, 5527, 78, 10296, 42, 108000)
初始化基础加作物ID (“荔枝”, 35, 277200, 23, 6588, 86, 11696, 44, 111600)
初始化基础加作物ID (“桂圆”, 53, 11160, 24, 5130, 38, 0, 18, 50400)
初始化基础加作物ID (“木瓜”, 38, 165600, 24, 6975, 80, 0, 26, 72000)
初始化基础加作物ID (“杨桃”, 39, 165600, 25, 7576, 82, 0, 27, 72000)
初始化基础加作物ID (“芒果”, 57, 111600, 26, 2500, 40, 0, 18, 50400)
初始化基础加作物ID (“柠檬”, 42, 111600, 26, 7600, 83, 10790, 18, 50400)
初始化基础加作物ID (“杨梅”, 48, 111600, 27, 7700, 84, 10920, 18, 50400)
初始化基础加作物ID (“榴莲”, 58, 111600, 27, 5535, 50, 0, 18, 50400)
初始化基础加作物ID (“番石榴”, 79, 111600, 28, 2873, 42, 0, 18, 50400)
初始化基础加作物ID (“蓝莓”, 77, 111600, 29, 2976, 43, 0, 18, 50400)
初始化基础加作物ID (“山竹”, 76, 111600, 30, 3110, 44, 0, 18, 50400)
 ' 以上是商店可以购买的作物
初始化基础加作物ID (“薰衣草”, 101, 219600, 9999, 0, 58, 0, 34, 93600)
初始化基础加作物ID (“马蹄莲”, 102, 230400, 9999, 0, 62, 7998, 39, 93600)
初始化基础加作物ID (“天香百合”, 103, 72000, 9999, 0, 28, 672, 25, 0)
初始化基础加作物ID (“非洲菊”, 104, 75600, 9999, 0, 24, 1104, 18, 32400)
初始化基础加作物ID (“小雏菊”, 105, 61200, 9999, 0, 30, 750, 22, 75600)
初始化基础加作物ID (“爱心果”, 46, 111600, 9999, 0, 100, 7200, 27, 50400)
初始化基础加作物ID (“铃兰”, 108, 115200, 9999, 0, 43, 0, 25, 50400)
初始化基础加作物ID (“仙人掌”, 107, 115200, 9999, 0, 35, 0, 25, 50400)
 ' 以上是从地挖出来的作物
初始化基础加作物ID (“四叶草”, 62, 82800, 9999, 0, 24, 0, 17, 36000)
初始化基础加作物ID (“圣诞树”, 81, 46800, 9999, 0, 20, 0, 14, 0)
 ' 以上是活动获得的作物
初始化基础加作物ID (“哈密瓜”, 56, 111600, 9999, 0, 39, 5655, 90, 50400)
初始化基础加作物ID (“红薯”, 21, 93600, 9999, 0, 0, 0, 0, 0)
初始化基础加作物ID (“黄瓜”, 24, 198000, 9999, 0, 0, 0, 0, 0)
初始化基础加作物ID (“奇异果”, 36, 291600, 9999, 0, 0, 0, 0, 0)
初始化基础加作物ID (“大葱”, 64, 39600, 9999, 0, 0, 0, 0, 0)
初始化基础加作物ID (“鲜姜”, 66, 39600, 9999, 0, 0, 0, 0, 0)
初始化基础加作物ID (“小白菜”, 71, 39600, 9999, 0, 0, 0, 0, 0)
初始化基础加作物ID (“蒲公英”, 120, 57600, 0, 0, 0, 0, 0, 0)
初始化基础加作物ID (“菠菜”, 73, 61200, 9999, 0, 0, 0, 0, 0)
初始化基础加作物ID (“满天星”, 110, 79200, 9999, 0, 0, 0, 0, 0)
初始化基础加作物ID (“粉玫瑰”, 111, 100800, 9999, 0, 0, 0, 0, 0)
初始化基础加作物ID (“黄豆”, 70, 100800, 9999, 0, 0, 0, 0, 0)
初始化基础加作物ID (“月柿”, 80, 111600, 9999, 0, 0, 0, 0, 0)
初始化基础加作物ID (“桑葚”, 75, 111600, 9999, 0, 0, 0, 0, 0)
初始化基础加作物ID (“杏子”, 78, 111600, 9999, 0, 0, 0, 0, 0)
初始化基础加作物ID (“金桔”, 74, 111600, 9999, 0, 0, 0, 0, 0)
初始化基础加作物ID (“蝴蝶兰”, 109, 230400, 9999, 0, 62, 6510, 120, 0)
初始化基础加作物ID (“丁香花”, 122, 111600, 9999, 0, 0, 0, 0, 0)
初始化基础加作物ID (“风信子”, 112, 111600, 9999, 0, 0, 0, 0, 0)
初始化基础加作物ID (“水仙花”, 118, 111600, 9999, 0, 0, 0, 0, 0)
初始化基础加作物ID (“栀子花”, 113, 133200, 9999, 0, 0, 0, 0, 0)
初始化基础加作物ID (“兰花”, 115, 151200, 9999, 0, 0, 0, 0, 0)
初始化基础加作物ID (“蓝玫瑰”, 114, 151200, 9999, 0, 0, 0, 0, 0)
初始化基础加作物ID (“郁金香”, 106, 187200, 9999, 0, 54, 0, 0, 0)
初始化基础加作物ID (“莴笋”, 69, 198000, 9999, 0, 0, 0, 0, 0)
初始化基础加作物ID (“海棠花”, 123, 277200, 9999, 0, 0, 0, 0, 0)
初始化基础加作物ID (“香瓜”, 67, 277200, 9999, 0, 0, 0, 0, 0)
初始化基础加作物ID (“苦瓜”, 63, 111600, 9999, 0, 90, 0, 0, 50400)
初始化基础加作物ID (“冬瓜”, 68, 111600, 9999, 0, 88, 0, 0, 50400)
 ' 以上是尚未公开的作物

.子程序 初始化基础加作物ID, 空白型, , 
.参数 名称, 文本型, , 
.参数 ID, 整数型, , 
.参数 成熟时长, 整数型, , 
.参数 购买等级, 整数型, , 
.参数 购入价格, 整数型, , 
.参数 卖出单价, 整数型, , 
.参数 最高收益, 整数型, 可空, 
.参数 经验值, 整数型, , 
.参数 第二季, 整数型, , 

赋值 (所有作物表 [ID], 名称)
赋值 (作物时间表 [ID], 成熟时长)
赋值 (所需等级表 [ID], 购买等级)
赋值 (购入价格表 [ID], 购入价格)
赋值 (作物价格表 [ID], 卖出单价)
赋值 (作物经验表 [ID], 经验值)
赋值 (二季时间表 [ID], 第二季)
窗口_主要.加入项目 (., 名称, ID)

.子程序 经验处理, 文本型, , 
.参数 经验值, 整数型, , 

.局部变量 DJ, 整数型, , , 

赋值 (DJ, 等级换算 (经验值))
返回 (相加 (到文本 (相减 (相加 (相乘 (相加 (DJ, 1), 200), 经验值), 经验等级对照表 [相加 (DJ, 1)])), “/”, 到文本 (相乘 (相加 (DJ, 1), 200))))

.子程序 Unicode取中文, 文本型, , \u8499\u5176\u4f1f   %u6211
.参数 str, 文本型, , 

.局部变量 arr, 文本型, 静态, "0", 
.局部变量 result, 文本型, , , 
.局部变量 i, 整数型, , , 

赋值 (arr, 分割文本 (str, “\u”, ))
赋值 (result, “”)
.计次循环首 (取数组成员数 (arr), i)
    .如果 (大于 (取文本长度 (arr [i]), 4))
        赋值 (result, 相加 (result, USC2转ANSI (取文本左边 (arr [i], 4)), 取文本右边 (arr [i], 相减 (取文本长度 (arr [i]), 4))))
    .否则
        赋值 (result, 相加 (result, USC2转ANSI (arr [i])))
    .如果结束
    
.计次循环尾 ()
.如果真 (等于 (result, “”))
    返回 (str)
.如果真结束
返回 (result)

.子程序 取farmtime, 长整数型, 公开, 方法传回从 1970 年 1 月 1 日午夜开始计算的毫秒数
.参数 时间, 日期时间型, , 

返回 (取时间间隔 (时间, 到时间 (“1970/1/1”), #秒))

.子程序 反取farmtime, 日期时间型, , 
.参数 时间戳记值, 长整数型, , 要转换的时间戳记值

.局部变量 初始时间, 日期时间型, , , 

赋值 (初始时间, 到时间 (“1970-01-01”))
返回 (增减时间 (初始时间, #秒, 时间戳记值))

.子程序 取farmkey, 文本型, , 
.参数 farmtime, 长整数型, 可空, 

返回 (到小写 (未知支持库函数_2 (到字节集 (相加 (到文本 (farmtime), 取文本中间 (“sdoit78sdopig7w34057”, 相加 (求余数 (farmtime, 10), 1), 20))))))


.子程序 剩余时间, 整数型, , 
.参数 种植时间, 整数型, , 
.参数 作物ID, 整数型, , 
.参数 季度信息, 整数型, , 

.如果 (等于 (季度信息, 1))
    返回 (相减 (相加 (作物时间表 [作物ID], 种植时间, 28800), 取farmtime (取现行时间 ())))
.否则
    返回 (相减 (相加 (二季时间表 [作物ID], 种植时间, 28800), 取farmtime (取现行时间 ())))
.如果结束


.子程序 获取当前时间, 文本型, , 
.局部变量 时, 文本型, , , 
.局部变量 分, 文本型, , , 
.局部变量 秒, 文本型, , , 

.如果 (小于或等于 (取小时 (取现行时间 ()), 9))
    赋值 (时, 相加 (“0”, 到文本 (取小时 (取现行时间 ()))))
.否则
    赋值 (时, 到文本 (取小时 (取现行时间 ())))
.如果结束
.如果 (小于或等于 (取分钟 (取现行时间 ()), 9))
    赋值 (分, 相加 (“0”, 到文本 (取分钟 (取现行时间 ()))))
.否则
    赋值 (分, 到文本 (取分钟 (取现行时间 ())))
.如果结束
.如果 (小于或等于 (取秒 (取现行时间 ()), 9))
    赋值 (秒, 相加 (“0”, 到文本 (取秒 (取现行时间 ()))))
.否则
    赋值 (秒, 到文本 (取秒 (取现行时间 ())))
.如果结束
返回 (相加 (“[”, 时, “:”, 分, “:”, 秒, “]”))

.子程序 成熟时间, 日期时间型, , 
.参数 剩余时间, 整数型, , 

返回 (反取farmtime (相加 (取farmtime (取现行时间 ()), 剩余时间)))

.子程序 时间处理, 文本型, , 
.参数 运行时间, 整数型, , 

.局部变量 时, 整数型, , , 
.局部变量 分, 整数型, , , 
.局部变量 秒, 整数型, , , 
.局部变量 时间, 文本型, , , 
.局部变量 时数, 文本型, , , 
.局部变量 分数, 文本型, , , 
.局部变量 秒数, 文本型, , , 

.如果真 (大于或等于 (运行时间, 3600))
    赋值 (时, 取整 (四舍五入 (相除 (运行时间, 3600), 2)))
    赋值 (运行时间, 求余数 (运行时间, 3600))
.如果真结束
.如果真 (大于或等于 (运行时间, 60))
    赋值 (分, 取整 (四舍五入 (相除 (运行时间, 60), 2)))
    赋值 (运行时间, 求余数 (运行时间, 60))
.如果真结束
赋值 (秒, 运行时间)
.如果 (小于或等于 (时, 9))
    赋值 (时数, 相加 (“0”, 到文本 (时)))
.否则
    赋值 (时数, 到文本 (时))
.如果结束
.如果 (小于或等于 (分, 9))
    赋值 (分数, 相加 (“0”, 到文本 (分)))
.否则
    赋值 (分数, 到文本 (分))
.如果结束
.如果 (小于或等于 (秒, 9))
    赋值 (秒数, 相加 (“0”, 到文本 (秒)))
.否则
    赋值 (秒数, 到文本 (秒))
.如果结束
返回 (相加 (时数, “:”, 分数, “:”, 秒数))

.子程序 读取我的信息, 空白型, , 
.局部变量 网页文本, 文本型, , , 
.局部变量 操作时间, 整数型, , , 
.局部变量 操作KEY, 文本型, , , 
.局部变量 位置1, 整数型, , , 
.局部变量 位置2, 整数型, , , 
.局部变量 还剩经验, 整数型, , , 

赋值 (操作时间, 相减 (取farmtime (取现行时间 ()), 28800))
赋值 (操作KEY, 取farmkey (操作时间))
赋值 (网页文本, 到文本 (彗星HTTP读文件 (“http://nc.qzone.qq.com/cgi-bin/cgi_farm_index?mod=user&act=run&flag=1”, “POST”, , , 相加 (“farmTime=”, 到文本 (操作时间), “&ownerId=0&farmKey=”, 操作KEY))))
赋值 (位置1, 寻找文本 (网页文本, “uId”, , 假))
赋值 (位置2, 寻找文本 (网页文本, “,”, 位置1, 假))
赋值 (我的信息.ID, 到整数 (取文本中间 (网页文本, 相加 (位置1, 5), 相减 (位置2, 位置1, 5))))
赋值 (位置1, 寻找文本 (网页文本, “userName”, , 假))
赋值 (位置2, 寻找文本 (网页文本, “,”, 位置1, 假))
赋值 (我的信息.昵称, 取文本中间 (网页文本, 相加 (位置1, 10), 相减 (位置2, 位置1, 10)))
赋值 (位置1, 寻找文本 (网页文本, “exp”, , 假))
赋值 (位置2, 寻找文本 (网页文本, “,”, 位置1, 假))
赋值 (我的信息.经验, 到整数 (取文本中间 (网页文本, 相加 (位置1, 5), 相减 (位置2, 位置1, 5))))
赋值 (位置1, 寻找文本 (网页文本, “money”, , 假))
赋值 (位置2, 寻找文本 (网页文本, “,”, 位置1, 假))
赋值 (我的信息.现金, 到整数 (取文本中间 (网页文本, 相加 (位置1, 7), 相减 (位置2, 位置1, 7))))
赋值 (位置1, 寻找文本 (网页文本, “yellowstatus”, , 假))
赋值 (位置2, 寻找文本 (网页文本, “,”, 位置1, 假))
赋值 (我的信息.黄钻状态, 到整数 (取文本中间 (网页文本, 相加 (位置1, 14), 相减 (位置2, 位置1, 14))))
赋值 (位置1, 寻找文本 (网页文本, “yellowlevel”, , 假))
赋值 (位置2, 寻找文本 (网页文本, “,”, 位置1, 假))
赋值 (我的信息.黄钻等级, 到整数 (取文本中间 (网页文本, 相加 (位置1, 13), 相减 (位置2, 位置1, 13))))
 ' {"uId":87783775,"userName":null,"money":52,"headPic":null,"exp":22449,"yellowlevel":0,"yellowstatus":0,"canbad":50,"pf":false},"cacheControl":{"seed":7,"tool":1,"diy":2},"a":true,"b":0,"c":false,"task":{"taskId":0,"taskFlag":0}}”
赋值 (窗口_主要..内容, QQ账号)
赋值 (窗口_主要..内容, 到文本 (等级换算 (我的信息.经验)))
赋值 (窗口_主要..内容, 到文本 (我的信息.现金))
赋值 (窗口_主要..内容, 经验处理 (我的信息.经验))


.子程序 读取当前好友农作物信息, 空白型, , 
.参数 农场ID, 整数型, , 
.参数 好友类型, 整数型, , 

.局部变量 网页文本, 文本型, , , 
.局部变量 位置1, 整数型, , , 
.局部变量 位置记录, 整数型, , , 
.局部变量 位置2, 整数型, , , 
.局部变量 i, 整数型, , , 
.局部变量 土地ID, 整数型, , , 
.局部变量 种植时间, 整数型, , , 
.局部变量 狗狗, 整数型, , , 
.局部变量 地址, 文本型, , , 

.如果 (等于 (好友类型, 1))
    赋值 (地址, “http://nc.qzone.qq.com”)
.否则
    赋值 (地址, “http://nc.xiaoyou.qq.com”)
.如果结束

赋值 (网页文本, UTF8转ANSI (彗星HTTP读文件 (相加 (地址, “/cgi-bin/cgi_farm_index?mod=user&act=run&ownerId=”, 到文本 (农场ID)))))
调试输出 (相加 (“当前好友农作物####:”, 网页文本))
.如果真 (等于 (网页文本, #检测))
    .如果 (等于 (信息框2 (“你已被系统检测出多次使用外挂，系统将自动关闭你的农场一段时间,退出补助。”, 相加 (#是否钮, #询问图标, #默认按钮二, #程序等待), “提示”), 5))
        结束 ()
    .否则
        返回 ()
    .如果结束
    
.如果真结束
取文本中间 (网页文本, 相加 (位置1, 15), 相减 (位置2, 位置1, 18))
.判断循环首 (等于 (验证码, “请输入验证码”))
    载入 (窗口_验证码, , 假)
    赋值 (网页文本, UTF8转ANSI (彗星HTTP读文件 (相加 (地址, “/cgi-bin/cgi_farm_index?mod=user&act=run&validatemsg=”, 验证码, “&ownerId=”, 到文本 (农场ID)))))
    赋值 (位置1, 寻找文本 (网页文本, “errorContent”, , 真))
    赋值 (位置2, 寻找文本 (网页文本, “errorType”, 位置1, 假))
    赋值 (验证码, 取文本中间 (网页文本, 相加 (位置1, 15), 相减 (位置2, 位置1, 18)))
.判断循环尾 ()
赋值 (狗狗, 到整数 (取文本中间 (网页文本, 相加 (位置1, 7), 相减 (位置2, 位置1, 9))))
.如果 (等于 (狗狗, 0))
    赋值 (狗狗, 1)
.否则
    赋值 (位置1, 寻找文本 (网页文本, “isHungry”, , 假))
    赋值 (位置2, 寻找文本 (网页文本, “}”, 位置1, 假))
    赋值 (狗狗, 到整数 (取文本中间 (网页文本, 相加 (位置1, 10), 相减 (位置2, 位置1, 10))))
.如果结束
赋值 (位置1, 寻找文本 (网页文本, “farmlandStatus”, , 假))
赋值 (位置2, 寻找文本 (网页文本, “items”, , 假))
赋值 (网页文本, 取文本中间 (网页文本, 相加 (位置1, 14), 相减 (位置2, 位置1, 14)))
赋值 (位置1, 寻找文本 (网页文本, 相加 (“{”, #引号, “a”), , 真))
清除数组 (当前好友农作物信息)
.判断循环首 (不等于 (位置1, -1))
    赋值 (位置记录, 相加 (位置1, 1))
    赋值 (位置2, 寻找文本 (网页文本, “,”, 位置1, 假))
    赋值 (i, 相加 (取数组成员数 (当前好友农作物信息), 1))
    重定义数组 (当前好友农作物信息, 真, i)
    赋值 (当前好友农作物信息 [i], 土地ID, 土地ID)
    赋值 (当前好友农作物信息 [i], 作物ID, 到数值 (取文本中间 (网页文本, 相加 (位置1, 5), 相减 (位置2, 位置1, 5))))
    赋值 (位置1, 寻找文本 (网页文本, 相加 (#引号, “b”), 位置记录, 真))
    赋值 (位置2, 寻找文本 (网页文本, “,”, 位置1, 假))
    赋值 (当前好友农作物信息 [i], 成长状态, 到数值 (取文本中间 (网页文本, 相加 (位置1, 4), 相减 (位置2, 位置1, 4))))
    赋值 (位置1, 寻找文本 (网页文本, 相加 (#引号, “f”), 位置记录, 真))
    赋值 (位置2, 寻找文本 (网页文本, “,”, 位置1, 假))
    赋值 (当前好友农作物信息 [i], 杂草, 到数值 (取文本中间 (网页文本, 相加 (位置1, 4), 相减 (位置2, 位置1, 4))))
    赋值 (位置1, 寻找文本 (网页文本, 相加 (#引号, “g”), 位置记录, 真))
    赋值 (位置2, 寻找文本 (网页文本, “,”, 位置1, 假))
    赋值 (当前好友农作物信息 [i], 虫子, 到数值 (取文本中间 (网页文本, 相加 (位置1, 4), 相减 (位置2, 位置1, 4))))
    赋值 (位置1, 寻找文本 (网页文本, 相加 (#引号, “j”), 位置记录, 真))
    赋值 (位置2, 寻找文本 (网页文本, “,”, 位置1, 假))
    赋值 (当前好友农作物信息 [i], 季度, 相加 (到数值 (取文本中间 (网页文本, 相加 (位置1, 4), 相减 (位置2, 位置1, 4))), 1))
    赋值 (位置1, 寻找文本 (网页文本, 相加 (#引号, “k”), 位置记录, 真))
    赋值 (位置2, 寻找文本 (网页文本, “,”, 位置1, 假))
    赋值 (当前好友农作物信息 [i], 产量, 到数值 (取文本中间 (网页文本, 相加 (位置1, 4), 相减 (位置2, 位置1, 4))))
    赋值 (位置1, 寻找文本 (网页文本, 相加 (#引号, “m”), 位置记录, 真))
    赋值 (位置2, 寻找文本 (网页文本, “,”, 位置1, 假))
    赋值 (当前好友农作物信息 [i], 剩余, 到数值 (取文本中间 (网页文本, 相加 (位置1, 4), 相减 (位置2, 位置1, 4))))
    赋值 (位置1, 寻找文本 (网页文本, 相加 (#引号, “l”), 位置记录, 真))
    赋值 (位置2, 寻找文本 (网页文本, “,”, 位置1, 假))
    赋值 (当前好友农作物信息 [i], 最少剩余, 到数值 (取文本中间 (网页文本, 相加 (位置1, 4), 相减 (位置2, 位置1, 4))))
    赋值 (位置1, 寻找文本 (网页文本, 相加 (#引号, “n”), 位置记录, 真))
    赋值 (位置2, 寻找文本 (网页文本, 相加 (#引号, “o”), 位置1, 假))
    赋值 (当前好友农作物信息 [i], 偷窃信息, 取文本中间 (网页文本, 相加 (位置1, 4), 相减 (位置2, 位置1, 5)))
    赋值 (位置1, 寻找文本 (网页文本, 相加 (#引号, “p”), 位置记录, 真))
    赋值 (位置2, 寻找文本 (网页文本, 相加 (#引号, “q”), 位置1, 假))
    赋值 (当前好友农作物信息 [i], 灾害信息, 取文本中间 (网页文本, 相加 (位置1, 4), 相减 (位置2, 位置1, 5)))
    赋值 (当前好友农作物信息 [i], 狗狗, 狗狗)
    .如果 (等于 (当前好友农作物信息 [i], 季度, 1))
        赋值 (位置1, 寻找文本 (网页文本, 相加 (#引号, “q”), 位置记录, 真))
        赋值 (位置2, 寻找文本 (网页文本, “,”, 位置1, 假))
        赋值 (种植时间, 到数值 (取文本中间 (网页文本, 相加 (位置1, 4), 相减 (位置2, 位置1, 4))))
    .否则
        赋值 (位置1, 寻找文本 (网页文本, 相加 (#引号, “r”), 位置记录, 真))
        赋值 (位置2, 寻找文本 (网页文本, “}”, 位置1, 假))
        赋值 (种植时间, 到数值 (取文本中间 (网页文本, 相加 (位置1, 4), 相减 (位置2, 位置1, 4))))
    .如果结束
    .如果真 (不等于 (当前好友农作物信息 [i], 作物ID, 0))
        赋值 (当前好友农作物信息 [i], 剩余时间, 剩余时间 (种植时间, 当前好友农作物信息 [i], 作物ID, 当前好友农作物信息 [i], 季度))
    .如果真结束
    赋值 (土地ID, 相加 (土地ID, 1))
    赋值 (位置1, 寻找文本 (网页文本, 相加 (“{”, #引号, “a”), 位置记录, 真))
.判断循环尾 ()


.子程序 除草, 空白型, , 
.参数 农场ID, 整数型, , 
.参数 土地ID, 整数型, , 
.参数 好友类型, 整数型, , 1=空间 2=校友
.参数 好友昵称, 文本型, 可空, 

.局部变量 地址, 文本型, , , 
.局部变量 网页文本, 文本型, , , 
.局部变量 操作time, 整数型, , , 
.局部变量 操作key, 文本型, , , 
.局部变量 提交信息, 文本型, , , 
.局部变量 位置1, 整数型, , , 
.局部变量 位置2, 整数型, , , 
.局部变量 草, 文本型, , , 
.局部变量 经验, 文本型, , , 
.局部变量 金币, 文本型, , , 
.局部变量 成功, 整数型, , , 

.如果真 (等于 (窗口_主要..选中, 真))
    赋值 (操作time, 相减 (取farmtime (取现行时间 ()), 28800))
    赋值 (操作key, 取farmkey (操作time))
    .如果 (等于 (好友类型, 1))
        赋值 (地址, “http://nc.qzone.qq.com”)
    .否则
        赋值 (地址, “http://nc.xiaoyou.qq.com”)
    .如果结束
    .判断循环首 (不等于 (草, “0”))
        赋值 (提交信息, 相加 (“farmTime=”, 到文本 (操作time), “&place=”, 到文本 (土地ID), “&ownerId=”, 到文本 (农场ID), “&farmKey=”, 操作key))
        赋值 (网页文本, 到文本 (彗星HTTP读文件 (相加 (地址, “/cgi-bin/cgi_farm_opt?mod=farmlandstatus&act=clearWeed”), “POST”, , , 提交信息)))
        赋值 (位置1, 寻找文本 (网页文本, 相加 (“code”, #引号, “:”), , 假))
        赋值 (位置2, 寻找文本 (网页文本, “,”, 位置1, 假))
        赋值 (成功, 到整数 (取文本中间 (网页文本, 相加 (位置1, 6), 相减 (位置2, 位置1, 6))))
        .如果真 (等于 (成功, 1))
            赋值 (位置1, 寻找文本 (网页文本, 相加 (“exp”, #引号, “:”), , 假))
            赋值 (位置2, 寻找文本 (网页文本, “,”, 位置1, 假))
            赋值 (经验, 取文本中间 (网页文本, 相加 (位置1, 5), 相减 (位置2, 位置1, 5)))
            赋值 (位置1, 寻找文本 (网页文本, 相加 (“money”, #引号, “:”), , 假))
            赋值 (位置2, 寻找文本 (网页文本, “,”, 位置1, 假))
            赋值 (金币, 取文本中间 (网页文本, 相加 (位置1, 7), 相减 (位置2, 位置1, 7)))
            赋值 (窗口_主要..标题, 到文本 (相加 (到整数 (窗口_主要..标题), 到整数 (金币))))
            赋值 (窗口_主要..标题, 到文本 (相加 (到整数 (窗口_主要..标题), 到整数 (经验))))
            窗口_主要.加入项目 (., 相加 (获取当前时间 (), “[除草]：为[”, 好友昵称, “]的”, 到文本 (相加 (土地ID, 1)), “号农田除草成功，金币：+”, 金币, “，经验：+”, 经验, “。”), )
            赋值 (窗口_主要..现行选中项, 相加 (窗口_主要..现行选中项, 1))
            赋值 (位置1, 寻找文本 (网页文本, 相加 (“weed”, #引号, “:”), , 假))
            赋值 (位置2, 寻找文本 (网页文本, “}”, 位置1, 假))
            赋值 (草, 取文本中间 (网页文本, 相加 (位置1, 6), 相减 (位置2, 位置1, 6)))
        .如果真结束
        .如果真 (等于 (成功, 0))
            赋值 (草, “0”)
        .如果真结束
        延迟 (农场操作时间间隔)
        调试输出 (相加 (“除草返回信息----”, 网页文本))
    .判断循环尾 ()
.如果真结束


.子程序 杀虫, 空白型, , 
.参数 农场ID, 整数型, , 
.参数 土地ID, 整数型, , 
.参数 好友类型, 整数型, , 1=空间 2=校友
.参数 好友昵称, 文本型, 可空, 

.局部变量 地址, 文本型, , , 
.局部变量 网页文本, 文本型, , , 
.局部变量 操作time, 整数型, , , 
.局部变量 操作key, 文本型, , , 
.局部变量 提交信息, 文本型, , , 
.局部变量 位置1, 整数型, , , 
.局部变量 位置2, 整数型, , , 
.局部变量 虫, 文本型, , , 
.局部变量 经验, 文本型, , , 
.局部变量 金币, 文本型, , , 
.局部变量 成功, 整数型, , , 

.如果真 (等于 (窗口_主要..选中, 真))
    赋值 (操作time, 相减 (取farmtime (取现行时间 ()), 28800))
    赋值 (操作key, 取farmkey (操作time))
    .如果 (等于 (好友类型, 1))
        赋值 (地址, “http://nc.qzone.qq.com”)
    .否则
        赋值 (地址, “http://nc.xiaoyou.qq.com”)
    .如果结束
    .判断循环首 (不等于 (虫, “0”))
        赋值 (提交信息, 相加 (“farmTime=”, 到文本 (操作time), “&place=”, 到文本 (土地ID), “&ownerId=”, 到文本 (农场ID), “&farmKey=”, 操作key))
        赋值 (网页文本, 到文本 (彗星HTTP读文件 (相加 (地址, “/cgi-bin/cgi_farm_opt?mod=farmlandstatus&act=spraying”), “POST”, , , 提交信息)))
        赋值 (位置1, 寻找文本 (网页文本, 相加 (“code”, #引号, “:”), , 假))
        赋值 (位置2, 寻找文本 (网页文本, “,”, 位置1, 假))
        赋值 (成功, 到整数 (取文本中间 (网页文本, 相加 (位置1, 6), 相减 (位置2, 位置1, 6))))
        .如果真 (等于 (成功, 1))
            赋值 (位置1, 寻找文本 (网页文本, 相加 (“exp”, #引号, “:”), , 假))
            赋值 (位置2, 寻找文本 (网页文本, “,”, 位置1, 假))
            赋值 (经验, 取文本中间 (网页文本, 相加 (位置1, 5), 相减 (位置2, 位置1, 5)))
            赋值 (位置1, 寻找文本 (网页文本, 相加 (“money”, #引号, “:”), , 假))
            赋值 (位置2, 寻找文本 (网页文本, “,”, 位置1, 假))
            赋值 (金币, 取文本中间 (网页文本, 相加 (位置1, 7), 相减 (位置2, 位置1, 7)))
            赋值 (窗口_主要..标题, 到文本 (相加 (到整数 (窗口_主要..标题), 到整数 (金币))))
            赋值 (窗口_主要..标题, 到文本 (相加 (到整数 (窗口_主要..标题), 到整数 (经验))))
            窗口_主要.加入项目 (., 相加 (获取当前时间 (), “[杀虫]：为[”, 好友昵称, “]的”, 到文本 (相加 (土地ID, 1)), “号农田杀虫成功，金币：+”, 金币, “，经验：+”, 经验, “。”), )
            赋值 (窗口_主要..现行选中项, 相加 (窗口_主要..现行选中项, 1))
            赋值 (位置1, 寻找文本 (网页文本, 相加 (“pest”, #引号, “:”), , 假))
            赋值 (位置2, 寻找文本 (网页文本, “}”, 位置1, 假))
            赋值 (虫, 取文本中间 (网页文本, 相加 (位置1, 6), 相减 (位置2, 位置1, 6)))
        .如果真结束
        .如果真 (等于 (成功, 0))
            赋值 (虫, “0”)
        .如果真结束
        延迟 (农场操作时间间隔)
        调试输出 (相加 (“杀虫返回信息----”, 网页文本))
    .判断循环尾 ()
.如果真结束


.子程序 收获, 空白型, , 
.参数 土地ID, 整数型, , 

.局部变量 操作time, 整数型, , , 
.局部变量 操作key, 文本型, , , 
.局部变量 网页文本, 文本型, , , 
.局部变量 位置1, 整数型, , , 
.局部变量 位置2, 整数型, , , 
.局部变量 成功, 整数型, , , 
.局部变量 作物ID, 整数型, , , 
.局部变量 收获个数, 文本型, , , 

赋值 (操作time, 相减 (取farmtime (取现行时间 ()), 28800))
赋值 (操作key, 取farmkey (操作time))
赋值 (网页文本, UTF8转ANSI (彗星HTTP读文件 (“http://nc.qzone.qq.com/cgi-bin/cgi_farm_plant?mod=farmlandstatus&act=harvest”, “POST”, , , 相加 (“place=”, 到文本 (土地ID), “&ownerId=”, 到文本 (我的信息.ID), “&farmTime=”, 到文本 (操作time), “&farmKey=”, 操作key))))
调试输出 (相加 (“##########收获”, 网页文本))
赋值 (位置1, 寻找文本 (网页文本, 相加 (“code”, #引号, “:”), , 假))
赋值 (位置2, 寻找文本 (网页文本, “,”, 位置1, 假))
赋值 (成功, 到整数 (取文本中间 (网页文本, 相加 (位置1, 6), 相减 (位置2, 位置1, 6))))
.如果真 (等于 (成功, 1))
    赋值 (位置1, 寻找文本 (网页文本, 相加 (“cId”, #引号, “:”), , 假))
    赋值 (位置2, 寻找文本 (网页文本, “,”, 位置1, 假))
    赋值 (作物ID, 到整数 (取文本中间 (网页文本, 相加 (位置1, 5), 相减 (位置2, 位置1, 5))))
    赋值 (位置1, 寻找文本 (网页文本, 相加 (“harvest”, #引号, “:”), , 假))
    赋值 (位置2, 寻找文本 (网页文本, “,”, 位置1, 假))
    赋值 (收获个数, 取文本中间 (网页文本, 相加 (位置1, 9), 相减 (位置2, 位置1, 9)))
    赋值 (窗口_主要..标题, 到文本 (相加 (到整数 (窗口_主要..标题), 相乘 (到整数 (收获个数), 作物价格表 [作物ID]))))
    赋值 (窗口_主要..标题, 到文本 (相加 (到整数 (窗口_主要..标题), 作物经验表 [作物ID])))
    赋值 (窗口_主要..标题, 到文本 (相加 (到整数 (窗口_主要..标题), 到整数 (收获个数))))
    窗口_主要.加入项目 (., 相加 (获取当前时间 (), “[收获]：收获”, 到文本 (相加 (土地ID, 1)), “号农田果实成功，获得：”, 收获个数, “个[”, 所有作物表 [作物ID], “]，经验：+”, 到文本 (作物经验表 [作物ID]), “，金币：+”, 到文本 (相乘 (到整数 (收获个数), 作物价格表 [作物ID])), “。”), )
    赋值 (窗口_主要..现行选中项, 相加 (窗口_主要..现行选中项, 1))
    读取我的农场 ()
.如果真结束
延迟 (100)

.子程序 翻地, 空白型, , 
.参数 土地ID, 整数型, , 

.局部变量 操作time, 整数型, , , 
.局部变量 操作key, 文本型, , , 
.局部变量 网页文本, 文本型, , , 
.局部变量 位置1, 整数型, , , 
.局部变量 位置2, 整数型, , , 
.局部变量 成功, 整数型, , , 

赋值 (操作time, 相减 (取farmtime (取现行时间 ()), 28800))
赋值 (操作key, 取farmkey (操作time))
赋值 (网页文本, UTF8转ANSI (彗星HTTP读文件 (“http://nc.qzone.qq.com/cgi-bin/cgi_farm_plant?mod=farmlandstatus&act=scarify”, “POST”, , , 相加 (“place=”, 到文本 (土地ID), “&ownerId=”, 到文本 (我的信息.ID), “&farmTime=”, 到文本 (操作time), “&farmKey=”, 操作key))))
调试输出 (相加 (“##########翻地”, 网页文本))
赋值 (位置1, 寻找文本 (网页文本, 相加 (“code”, #引号, “:”), , 假))
赋值 (位置2, 寻找文本 (网页文本, “,”, 位置1, 假))
赋值 (成功, 到整数 (取文本中间 (网页文本, 相加 (位置1, 6), 相减 (位置2, 位置1, 6))))
.如果真 (等于 (成功, 1))
    赋值 (窗口_主要..标题, 到文本 (相加 (到整数 (窗口_主要..标题), 3)))
    窗口_主要.加入项目 (., 相加 (获取当前时间 (), “[翻地]：为自己的”, 到文本 (相加 (土地ID, 1)), “号农田翻地成功，经验：+3。”), )
    赋值 (窗口_主要..现行选中项, 相加 (窗口_主要..现行选中项, 1))
    读取我的农场 ()
.如果真结束
延迟 (农场操作时间间隔)

.子程序 播种, 空白型, , 
.参数 作物ID, 整数型, , 
.参数 土地ID, 整数型, , 

.局部变量 操作time, 整数型, , , 
.局部变量 操作key, 文本型, , , 
.局部变量 网页文本, 文本型, , , 
.局部变量 成功, 整数型, , , 
.局部变量 位置1, 整数型, , , 
.局部变量 位置2, 整数型, , , 
.局部变量 地址, 文本型, , , 
.局部变量 失败信息, 文本型, , , 
.局部变量 农场ID, 整数型, , , 
.局部变量 经验, 文本型, , , 

赋值 (操作time, 相减 (取farmtime (取现行时间 ()), 28800))
赋值 (操作key, 取farmkey (操作time))
赋值 (网页文本, UTF8转ANSI (彗星HTTP读文件 (“http://nc.qzone.qq.com/cgi-bin/cgi_farm_plant?mod=farmlandstatus&act=planting”, “POST”, , , 相加 (“cId=”, 到文本 (作物ID), “&place=”, 到文本 (土地ID), “&farmTime=”, 到文本 (操作time), “&ownerId=”, 到文本 (我的信息.ID), “&farmKey=”, 操作key))))
调试输出 (相加 (“##########播种”, 网页文本))
赋值 (位置1, 寻找文本 (网页文本, 相加 (“code”, #引号, “:”), , 假))
赋值 (位置2, 寻找文本 (网页文本, “,”, 位置1, 假))
赋值 (成功, 到整数 (取文本中间 (网页文本, 相加 (位置1, 6), 相减 (位置2, 位置1, 6))))
.如果真 (等于 (成功, 1))
    窗口_主要.加入项目 (., 相加 (获取当前时间 (), “[播种]：为自己的”, 到文本 (相加 (土地ID, 1)), “号农田播种成功，播下一棵[”, 所有作物表 [作物ID], “]种子。经验：+2”), )
    读取我的农场 ()
    赋值 (窗口_主要..现行选中项, 相加 (窗口_主要..现行选中项, 1))
    赋值 (窗口_主要..标题, 到文本 (相加 (到整数 (窗口_主要..标题), 2)))
.如果真结束
.如果真 (等于 (成功, 0))
    赋值 (位置1, 寻找文本 (网页文本, 相加 (“direction”, #引号, “:”), , 假))
    赋值 (位置2, 寻找文本 (网页文本, “}”, 位置1, 假))
    赋值 (失败信息, Unicode取中文 (取文本中间 (网页文本, 相加 (位置1, 12), 相减 (位置2, 位置1, 13))))
    窗口_主要.加入项目 (., 相加 (获取当前时间 (), “[播种]：为自己的”, 到文本 (相加 (土地ID, 1)), “号农田播种失败，”, 失败信息, #换行符), )
    读取我的农场 ()
    赋值 (窗口_主要..现行选中项, 相加 (窗口_主要..现行选中项, 1))
    .判断循环首 (等于 (验证码, “请输入验证码”))
        载入 (窗口_验证码, , 假)
        赋值 (网页文本, UTF8转ANSI (彗星HTTP读文件 (相加 (地址, “/cgi-bin/cgi_farm_index?mod=user&act=run&validatemsg=”, 验证码, “&ownerId=”, 到文本 (农场ID)))))
        赋值 (位置1, 寻找文本 (网页文本, “errorContent”, , 真))
        赋值 (位置2, 寻找文本 (网页文本, “errorType”, 位置1, 假))
        赋值 (验证码, 取文本中间 (网页文本, 相加 (位置1, 15), 相减 (位置2, 位置1, 18)))
    .判断循环尾 ()
    
.如果真结束
延迟 (农场操作时间间隔)
 ' {"cId":2,"farmlandIndex":1,"code":1,"poptype":0,"direction":"","exp":2,"levelUp":false}

.子程序 读取农作物信息, 空白型, , 
.参数 农场ID, 整数型, , 
.参数 好友类型, 整数型, , 

.局部变量 网页文本, 文本型, , , 
.局部变量 位置1, 整数型, , , 
.局部变量 位置记录, 整数型, , , 
.局部变量 位置2, 整数型, , , 
.局部变量 i, 整数型, , , 
.局部变量 土地ID, 整数型, , , 
.局部变量 种植时间, 整数型, , , 
.局部变量 狗狗, 整数型, , , 
.局部变量 地址, 文本型, , , 

.如果 (等于 (好友类型, 1))
    赋值 (地址, “http://nc.qzone.qq.com”)
.否则
    赋值 (地址, “http://nc.xiaoyou.qq.com”)
.如果结束

赋值 (网页文本, UTF8转ANSI (彗星HTTP读文件 (相加 (地址, “/cgi-bin/cgi_farm_index?mod=user&act=run&ownerId=”, 到文本 (农场ID)))))
输出调试文本 (相加 (“农作物信息###:”, 网页文本))
.如果真 (等于 (取文本左边 (网页文本, 21), #检测))
    窗口_主要.加入项目 (., 相加 (获取当前时间 (), “你已被系统检测出多次使用外挂,请重新登陆!”), )
.如果真结束

赋值 (位置1, 寻找文本 (网页文本, “errorContent”, , 真))
赋值 (位置2, 寻找文本 (网页文本, “errorType”, 位置1, 假))
赋值 (验证码, 取文本中间 (网页文本, 相加 (位置1, 15), 相减 (位置2, 位置1, 18)))
.判断循环首 (等于 (验证码, “请输入验证码”))
    载入 (窗口_验证码, , 真)
    赋值 (网页文本, UTF8转ANSI (彗星HTTP读文件 (相加 (地址, “/cgi-bin/cgi_farm_index?mod=user&act=run&validatemsg=”, 验证码, “&ownerId=”, 到文本 (农场ID)))))
    赋值 (位置1, 寻找文本 (网页文本, “errorContent”, , 真))
    赋值 (位置2, 寻找文本 (网页文本, “errorType”, 位置1, 假))
    赋值 (验证码, 取文本中间 (网页文本, 相加 (位置1, 15), 相减 (位置2, 位置1, 18)))
.判断循环尾 ()
赋值 (位置1, 寻找文本 (网页文本, “dogId”, , 假))
赋值 (位置2, 寻找文本 (网页文本, “isHungry”, 位置1, 假))
赋值 (狗狗, 到整数 (取文本中间 (网页文本, 相加 (位置1, 7), 相减 (位置2, 位置1, 9))))
.如果 (等于 (狗狗, 0))
    赋值 (狗狗, 1)
.否则
    赋值 (位置1, 寻找文本 (网页文本, “isHungry”, , 假))
    赋值 (位置2, 寻找文本 (网页文本, “}”, 位置1, 假))
    赋值 (狗狗, 到整数 (取文本中间 (网页文本, 相加 (位置1, 10), 相减 (位置2, 位置1, 10))))
.如果结束
赋值 (位置1, 寻找文本 (网页文本, “farmlandStatus”, , 假))
赋值 (位置2, 寻找文本 (网页文本, “items”, , 假))
赋值 (网页文本, 取文本中间 (网页文本, 相加 (位置1, 14), 相减 (位置2, 位置1, 14)))
调试输出 (网页文本)
赋值 (位置1, 寻找文本 (网页文本, 相加 (“{”, #引号, “a”), , 真))
清除数组 (农作物信息)
.判断循环首 (不等于 (位置1, -1))
    赋值 (位置记录, 相加 (位置1, 1))
    赋值 (位置2, 寻找文本 (网页文本, “,”, 位置1, 假))
    赋值 (i, 相加 (取数组成员数 (农作物信息), 1))
    重定义数组 (农作物信息, 真, i)
    赋值 (农作物信息 [i], 土地ID, 土地ID)
    赋值 (农作物信息 [i], 作物ID, 到数值 (取文本中间 (网页文本, 相加 (位置1, 5), 相减 (位置2, 位置1, 5))))
    赋值 (位置1, 寻找文本 (网页文本, 相加 (#引号, “b”), 位置记录, 真))
    赋值 (位置2, 寻找文本 (网页文本, “,”, 位置1, 假))
    赋值 (农作物信息 [i], 成长状态, 到数值 (取文本中间 (网页文本, 相加 (位置1, 4), 相减 (位置2, 位置1, 4))))
    赋值 (位置1, 寻找文本 (网页文本, 相加 (#引号, “j”), 位置记录, 真))
    赋值 (位置2, 寻找文本 (网页文本, “,”, 位置1, 假))
    赋值 (农作物信息 [i], 季度, 相加 (到数值 (取文本中间 (网页文本, 相加 (位置1, 4), 相减 (位置2, 位置1, 4))), 1))
    赋值 (位置1, 寻找文本 (网页文本, 相加 (#引号, “k”), 位置记录, 真))
    赋值 (位置2, 寻找文本 (网页文本, “,”, 位置1, 假))
    赋值 (农作物信息 [i], 产量, 到数值 (取文本中间 (网页文本, 相加 (位置1, 4), 相减 (位置2, 位置1, 4))))
    赋值 (位置1, 寻找文本 (网页文本, 相加 (#引号, “f”), 位置记录, 真))
    赋值 (位置2, 寻找文本 (网页文本, “,”, 位置1, 假))
    赋值 (农作物信息 [i], 杂草, 到数值 (取文本中间 (网页文本, 相加 (位置1, 4), 相减 (位置2, 位置1, 4))))
    赋值 (位置1, 寻找文本 (网页文本, 相加 (#引号, “g”), 位置记录, 真))
    赋值 (位置2, 寻找文本 (网页文本, “,”, 位置1, 假))
    赋值 (农作物信息 [i], 虫子, 到数值 (取文本中间 (网页文本, 相加 (位置1, 4), 相减 (位置2, 位置1, 4))))
    赋值 (位置1, 寻找文本 (网页文本, 相加 (#引号, “m”), 位置记录, 真))
    赋值 (位置2, 寻找文本 (网页文本, “,”, 位置1, 假))
    赋值 (农作物信息 [i], 剩余, 到数值 (取文本中间 (网页文本, 相加 (位置1, 4), 相减 (位置2, 位置1, 4))))
    赋值 (位置1, 寻找文本 (网页文本, 相加 (#引号, “l”), 位置记录, 真))
    赋值 (位置2, 寻找文本 (网页文本, “,”, 位置1, 假))
    赋值 (农作物信息 [i], 最少剩余, 到数值 (取文本中间 (网页文本, 相加 (位置1, 4), 相减 (位置2, 位置1, 4))))
    赋值 (位置1, 寻找文本 (网页文本, 相加 (#引号, “n”), 位置记录, 真))
    赋值 (位置2, 寻找文本 (网页文本, 相加 (#引号, “o”), 位置1, 假))
    赋值 (农作物信息 [i], 偷窃信息, 取文本中间 (网页文本, 相加 (位置1, 4), 相减 (位置2, 位置1, 5)))
    赋值 (位置1, 寻找文本 (网页文本, 相加 (#引号, “p”), 位置记录, 真))
    赋值 (位置2, 寻找文本 (网页文本, 相加 (#引号, “q”), 位置1, 假))
    赋值 (农作物信息 [i], 灾害信息, 取文本中间 (网页文本, 相加 (位置1, 4), 相减 (位置2, 位置1, 5)))
    赋值 (农作物信息 [i], 狗狗, 狗狗)
    .如果 (等于 (农作物信息 [i], 季度, 1))
        赋值 (位置1, 寻找文本 (网页文本, 相加 (#引号, “q”), 位置记录, 真))
        赋值 (位置2, 寻找文本 (网页文本, “,”, 位置1, 假))
        赋值 (种植时间, 到数值 (取文本中间 (网页文本, 相加 (位置1, 4), 相减 (位置2, 位置1, 4))))
    .否则
        赋值 (位置1, 寻找文本 (网页文本, 相加 (#引号, “r”), 位置记录, 真))
        赋值 (位置2, 寻找文本 (网页文本, “}”, 位置1, 假))
        赋值 (种植时间, 到数值 (取文本中间 (网页文本, 相加 (位置1, 4), 相减 (位置2, 位置1, 4))))
    .如果结束
    .如果真 (不等于 (农作物信息 [i], 作物ID, 0))
        赋值 (农作物信息 [i], 剩余时间, 剩余时间 (种植时间, 农作物信息 [i], 作物ID, 农作物信息 [i], 季度))
        赋值 (农作物信息 [i], 成熟时间, 成熟时间 (农作物信息 [i], 剩余时间))
    .如果真结束
    赋值 (土地ID, 相加 (土地ID, 1))
    赋值 (位置1, 寻找文本 (网页文本, 相加 (“{”, #引号, “a”), 位置记录, 真))
.判断循环尾 ()

.子程序 皮肤, 空白型, , 
.如果真 (等于 (_启动窗口..选中, 真))
    赋值 (窗口_主要..选中, 假)
    赋值 (窗口_主要..选中, 真)
    返回 ()
.如果真结束
.如果真 (等于 (_启动窗口..选中, 真))
    赋值 (窗口_主要..选中, 假)
    赋值 (窗口_主要..选中, 真)
    返回 ()
.如果真结束
.如果真 (等于 (_启动窗口..选中, 真))
    赋值 (窗口_主要..选中, 假)
    赋值 (窗口_主要..选中, 真)
    返回 ()
.如果真结束
.如果真 (等于 (_启动窗口..选中, 真))
    赋值 (窗口_主要..选中, 假)
    赋值 (窗口_主要..选中, 真)
    返回 ()
.如果真结束
.如果真 (等于 (_启动窗口..选中, 真))
    赋值 (窗口_主要..选中, 假)
    赋值 (窗口_主要..选中, 真)
    返回 ()
.如果真结束
.如果真 (等于 (_启动窗口..选中, 真))
    赋值 (窗口_主要..选中, 假)
    赋值 (窗口_主要..选中, 真)
    返回 ()
.如果真结束
.如果真 (等于 (_启动窗口..选中, 真))
    赋值 (窗口_主要..选中, 假)
    赋值 (窗口_主要..选中, 真)
    返回 ()
.如果真结束


.子程序 偷取, 空白型, , 
.参数 农场ID, 整数型, , 
.参数 土地ID, 整数型, , 
.参数 农场QQ, 整数型, , 
.参数 好友类型, 整数型, , 1=空间 2=校友
.参数 好友昵称, 文本型, 可空, 

.局部变量 操作time, 整数型, , , 
.局部变量 操作key, 文本型, , , 
.局部变量 地址, 文本型, , , 
.局部变量 网页文本, 文本型, , , 
.局部变量 位置1, 整数型, , , 
.局部变量 位置2, 整数型, , , 
.局部变量 成功, 整数型, , , 
.局部变量 作物ID, 整数型, , , 
.局部变量 偷取个数, 整数型, , , 

赋值 (操作time, 相减 (取farmtime (取现行时间 ()), 28800))
赋值 (操作key, 取farmkey (操作time))
.如果 (等于 (好友类型, 1))
    赋值 (地址, “http://nc.qzone.qq.com”)
.否则
    赋值 (地址, “http://nc.xiaoyou.qq.com”)
.如果结束
赋值 (网页文本, UTF8转ANSI (彗星HTTP读文件 (相加 (地址, “/cgi-bin/cgi_farm_steal?mod=farmlandstatus&act=scrounge”), “POST”, , , 相加 (“farmTime=”, 到文本 (操作time), “&place=”, 到文本 (土地ID), “&ownerId=”, 到文本 (农场ID), “&uinX”, 到文本 (农场QQ), “&farmKey=”, 操作key))))
调试输出 (相加 (“##########偷取”, 网页文本))
赋值 (位置1, 寻找文本 (网页文本, 相加 (“code”, #引号, “:”), , 假))
赋值 (位置2, 寻找文本 (网页文本, “,”, 位置1, 假))
赋值 (成功, 到整数 (取文本中间 (网页文本, 相加 (位置1, 6), 相减 (位置2, 位置1, 6))))
赋值 (位置1, 寻找文本 (网页文本, 相加 (“harvest”, #引号, “:”), , 假))
赋值 (位置2, 寻找文本 (网页文本, “,”, 位置1, 假))
赋值 (偷取个数, 到整数 (取文本中间 (网页文本, 相加 (位置1, 9), 相减 (位置2, 位置1, 9))))
.如果真 (并且 (等于 (成功, 1), 大于 (偷取个数, 0)))
    赋值 (位置1, 寻找文本 (网页文本, 相加 (“cId”, #引号, “:”), , 假))
    赋值 (位置2, 寻找文本 (网页文本, “,”, 位置1, 假))
    赋值 (作物ID, 到整数 (取文本中间 (网页文本, 相加 (位置1, 5), 相减 (位置2, 位置1, 5))))
    赋值 (位置1, 寻找文本 (网页文本, 相加 (“harvest”, #引号, “:”), , 假))
    赋值 (位置2, 寻找文本 (网页文本, “,”, 位置1, 假))
    赋值 (偷取个数, 到整数 (取文本中间 (网页文本, 相加 (位置1, 9), 相减 (位置2, 位置1, 9))))
    赋值 (窗口_主要..标题, 到文本 (相加 (到整数 (窗口_主要..标题), 相乘 (偷取个数, 作物价格表 [作物ID]))))
    赋值 (窗口_主要..标题, 到文本 (相加 (到整数 (窗口_主要..标题), 偷取个数)))
    窗口_主要.加入项目 (., 相加 (获取当前时间 (), “[偷取]：偷取好友[”, 好友昵称, “]”, 到文本 (相加 (土地ID, 1)), “号农田果实成功，获得：”, 到文本 (偷取个数), “个[”, 所有作物表 [作物ID], “]，金币：+”, 到文本 (相乘 (到整数 (偷取个数), 作物价格表 [作物ID])), “。”), )
    赋值 (窗口_主要..现行选中项, 相加 (窗口_主要..现行选中项, 1))
.如果真结束


.窗口程序集 窗口程序集3, , , 

.子程序 _窗口_验证码_创建完毕, 空白型, , 
未知支持库函数_66 (取窗口句柄 (), 240)
窗口_主要.加入项目 (., 相加 (获取当前时间 (), “[系统]：请输入验证码。”), )
赋值 (窗口_主要..现行选中项, 相加 (窗口_主要..现行选中项, 1))
窗口_验证码.激活 ()
赋值 (.底图, 彗星HTTP读文件 (“http://ptlogin2.qq.com/getimage”))
赋值 (.标题, 到文本 (取现行时间 ()))

.子程序 _编辑框1_内容被改变, 空白型, , 
.如果真 (等于 (取字节集长度 (到字节集 (.内容)), 4))
    赋值 (验证码, .内容)
    窗口_验证码.销毁 ()
.如果真结束


.子程序 _画板验证码_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.底图, 彗星HTTP读文件 (“http://ptlogin2.qq.com/getimage”))

.子程序 _时钟1_周期事件, 空白型, , 


.子程序 _窗口_验证码_将被销毁, 空白型, , 
赋值 (.时钟周期, 0)

.窗口程序集 窗口程序集4, , , 

.子程序 _按钮_商店购物_被单击, 空白型, , 
.局部变量 i, 整数型, , , 
.局部变量 sy, 整数型, , , 

赋值 (.可视, 真)
赋值 (.可视, 真)
赋值 (.禁止, 假)
赋值 (.可视, 真)
赋值 (.禁止, 假)
赋值 (.禁止, 真)
赋值 (窗口_我的., “商店购物”)
赋值 (.可视, 真)
赋值 (.字体大小, 真)
赋值 (.字体大小, 假)
赋值 (.字体大小, 假)
赋值 (.可视, 真)
赋值 (.可视, 真)
赋值 (.可视, 真)
赋值 (.可视, 真)
赋值 (.可视, 真)
赋值 (.可视, 假)
赋值 (.可视, 假)
赋值 (.可视, 假)
赋值 (.可视, 假)
全部删除 ()
.计次循环首 (112, i)
    .如果真 (不等于 (作物价格表 [i], 0))
        赋值 (sy, -1.插入表项 (所有作物表 [i], , , , ))
        sy.置标题 (1, 到文本 (所需等级表 [i]))
        sy.置标题 (2, 到文本 (购入价格表 [i]))
        sy.置标题 (3, 到文本 (作物价格表 [i]))
        sy.置标题 (4, 到文本 (i))
    .如果真结束
    
.计次循环尾 ()
超级列表框排序 (1, 真, 真, #整数型)

.子程序 _按钮_我的背包_被单击, 空白型, , 
.局部变量 操作time, 整数型, , , 
.局部变量 操作key, 文本型, , , 
.局部变量 临时文本, 文本型, , , 
.局部变量 表达式, 未知类型0x50001, , , 
.局部变量 搜索结果, 未知类型0x50002, , "0", 
.局部变量 i, 整数型, , , 
.局部变量 sy, 整数型, , , 

赋值 (.可视, 假)
赋值 (.可视, 假)
赋值 (.禁止, 假)
赋值 (.禁止, 真)
赋值 (.可视, 假)
赋值 (.禁止, 假)
赋值 (窗口_我的., “我的背包”)
赋值 (.可视, 假)
赋值 (.字体大小, 假)
赋值 (.字体大小, 真)
赋值 (.字体大小, 假)
赋值 (.可视, 假)
赋值 (.可视, 假)
赋值 (.可视, 假)
赋值 (.可视, 假)
赋值 (.可视, 假)
赋值 (.可视, 假)
赋值 (.可视, 假)
赋值 (.可视, 假)
赋值 (.可视, 假)
赋值 (操作time, 相减 (取farmtime (取现行时间 ()), 28800))
赋值 (操作key, 取farmkey (操作time))
赋值 (临时文本, 到文本 (彗星HTTP读文件 (“http://farm.qzone.qq.com/cgi-bin/cgi_farm_getuserseed?mod=repertory&act=getUserSeed”, “POST”, , , 相加 (“farmKey=”, 操作key, “&farmTime=”, 到文本 (操作time)))))
输出调试文本 (临时文本)
表达式.未知支持库函数_3 (相加 (“cName”, #引号, “:”, #引号, “(.*?)”, #引号), 假)
赋值 (搜索结果, 表达式.未知支持库函数_16 (临时文本))
全部删除 ()
.计次循环首 (取数组成员数 (搜索结果), i)
    赋值 (sy, -1.插入表项 (到文本 (i), , , , ))
    表达式.未知支持库函数_3 (相加 (“cId”, #引号, “:(.*?),”), 假)
    赋值 (搜索结果, 表达式.未知支持库函数_16 (临时文本))
    sy.置标题 (1, 所有作物表 [到整数 (搜索结果.未知支持库函数_12 ( [i], 临时文本, 1, ))])
    表达式.未知支持库函数_3 (相加 (“amount”, #引号, “:(.*?),”), 假)
    赋值 (搜索结果, 表达式.未知支持库函数_16 (临时文本))
    sy.置标题 (2, 搜索结果.未知支持库函数_12 ( [i], 临时文本, 1, ))
.计次循环尾 ()

.子程序 _按钮_我的仓库_被单击, 空白型, , 
赋值 (.可视, 假)
赋值 (.可视, 假)
赋值 (.禁止, 真)
赋值 (.禁止, 假)
赋值 (.禁止, 假)
赋值 (窗口_我的., “我的仓库”)
赋值 (.可视, 假)
赋值 (.字体大小, 假)
赋值 (.可视, 假)
赋值 (.字体大小, 假)
赋值 (.字体大小, 真)
赋值 (.可视, 假)
赋值 (.可视, 假)
赋值 (.可视, 假)
赋值 (.可视, 假)
赋值 (.可视, 假)
赋值 (.可视, 真)
赋值 (.可视, 真)
赋值 (.可视, 真)
赋值 (.可视, 真)
启动线程_ (&读取仓库)

.子程序 读取仓库, 空白型, , 
.局部变量 临时文本, 文本型, , , 
.局部变量 操作时间, 整数型, , , 
.局部变量 操作KEY, 文本型, , , 
.局部变量 表达式, 未知类型0x50001, , , 
.局部变量 搜索结果, 未知类型0x50002, , "0", 
.局部变量 i, 整数型, , , 
.局部变量 sy, 整数型, , , 
.局部变量 仓库果实, 果实信息结构, , "99", 
.局部变量 数量, 整数型, , , 
.局部变量 总价, 空白型, , , 

赋值 (操作时间, 相减 (取farmtime (取现行时间 ()), 28800))
赋值 (操作KEY, 取farmkey (操作时间))
赋值 (临时文本, 到文本 (彗星HTTP读文件 (“http://nc.qzone.qq.com/cgi-bin/cgi_farm_getusercrop?mod=repertory&act=getUserCrop”, “POST”, , , 相加 (“farmTime=”, 到文本 (操作时间), “&farmKey=”, 操作KEY))))
输出调试文本 (临时文本)
表达式.未知支持库函数_3 (相加 (“cName”, #引号, “:”, #引号, “(.*?)”, #引号), 假)
赋值 (搜索结果, 表达式.未知支持库函数_16 (临时文本))
赋值 (数量, 取数组成员数 (搜索结果))
.计次循环首 (数量, i)
    表达式.未知支持库函数_3 (相加 (“cId”, #引号, “:(.*?),”), 假)
    赋值 (搜索结果, 表达式.未知支持库函数_16 (临时文本))
    赋值 (仓库果实 [i], ID, 到整数 (搜索结果.未知支持库函数_12 ( [i], 临时文本, 1, )))
    赋值 (仓库果实 [i], 名称, 所有作物表 [仓库果实] [i], ID)
    表达式.未知支持库函数_3 (相加 (“amount”, #引号, “:(.*?),”), 假)
    赋值 (搜索结果, 表达式.未知支持库函数_16 (临时文本))
    赋值 (仓库果实 [i], 数量, 到整数 (搜索结果.未知支持库函数_12 ( [i], 临时文本, 1, )))
    表达式.未知支持库函数_3 (相加 (“price”, #引号, “:”, #引号, “(.*?)”, #引号), 假)
    赋值 (搜索结果, 表达式.未知支持库函数_16 (临时文本))
    赋值 (仓库果实 [i], 单价, 作物价格表 [仓库果实] [i], ID)
    赋值 (仓库果实 [i], 总价, 相乘 (仓库果实 [i], 单价, 仓库果实 [i], 数量))
    赋值 (总价, 相加 (总价, 仓库果实 [i], 总价))
.计次循环尾 ()
全部删除 ()
.计次循环首 (数量, i)
    赋值 (sy, -1.插入表项 (到文本 (i), , , , ))
    sy.置标题 (1, 仓库果实 [i], 名称)
    sy.置标题 (2, 到文本 (仓库果实 [i], 数量))
    sy.置标题 (3, 到文本 (仓库果实 [i], 单价))
    sy.置标题 (4, 到文本 (仓库果实 [i], 总价))
    sy.置标题 (5, 到文本 (仓库果实 [i], ID))
.计次循环尾 ()
赋值 (.标题, 到文本 (总价))
 ' [{"cId":7,"cName":"\u756a\u8304","amount":160,"price":"26"},
 ' {"cId":2,"cName":"\u767d\u841d\u535c","amount":77,"price":"17"},
 ' {"cId":3,"cName":"\u80e1\u841d\u535c","amount":90,"price":"21"},
 ' {"cId":8,"cName":"\u8c4c\u8c46","amount":56,"price":"27"},
 ' {"cId":4,"cName":"\u7389\u7c73","amount":10,"price":"23"},

.子程序 _超级列表框1_当前表项被改变, 空白型, , 
赋值 (.标题, .取标题 (., 0))
赋值 (.标题, 到文本 (相乘 (到整数 (.取标题 (., 2)), 到整数 (.内容))))
赋值 (.标题, .取标题 (., 4))

.子程序 _编辑框_商店_内容被改变, 空白型, , 
赋值 (.标题, 到文本 (相乘 (到整数 (.取标题 (., 2)), 到整数 (.内容))))

.子程序 _按钮_商店_被单击, 空白型, , 
.局部变量 临时文本, 文本型, , , 
.局部变量 操作time, 整数型, , , 
.局部变量 操作key, 文本型, , , 
.局部变量 表达式, 未知类型0x50001, , , 
.局部变量 搜索结果, 未知类型0x50002, , , 
.局部变量 成功, 文本型, , , 

赋值 (操作time, 相减 (取farmtime (取现行时间 ()), 28800))
赋值 (操作key, 取farmkey (操作time))

.如果真 (等于 (.标题, “-”))
    信息框2 (“请先选择你要购买的种子。”, #信息图标, )
    返回 ()
.如果真结束

.如果真 (等于 (信息框2 (相加 (“你确定要花费”, .标题, “金币，购买”, .内容, “个”, .标题, “种子吗？”), 1, “购买确认”), #确认钮))
    赋值 (临时文本, 到文本 (彗星HTTP读文件 (“http://farm.qzone.qq.com/cgi-bin/cgi_farm_buyseed?mod=repertory&act=buySeed”, “POST”, , , 相加 (“farmTime=”, 到文本 (操作time), “&cId=”, .标题, “&farmKey=”, 操作key, “&number=”, .内容))))
    表达式.未知支持库函数_3 (相加 (“code”, #引号, “:(.*?),”), 假)
    赋值 (搜索结果, 表达式.未知支持库函数_7 (临时文本, 1, ))
    赋值 (成功, 搜索结果.未知支持库函数_12 (临时文本, 1, ))
    .如果真 (等于 (成功, “0”))
        表达式.未知支持库函数_3 (相加 (“direction”, #引号, “:”, #引号, “(.*?)”, #引号), 假)
        赋值 (搜索结果, 表达式.未知支持库函数_7 (临时文本, 1, ))
        信息框2 (Unicode取中文 (搜索结果.未知支持库函数_12 (临时文本, 1, )), 0, )
    .如果真结束
    .如果真 (等于 (成功, “1”))
        信息框2 (相加 (“你共花费了”, .标题, “金币，购买了”, .内容, “个”, .标题, “种子。”), #信息图标, “购买成功”)
        窗口_主要.加入项目 (., 相加 (获取当前时间 (), “[购物]：”, “您共花费了”, .标题, “金币，购买了”, .内容, “个”, .标题, “种子。”), )
        赋值 (窗口_主要..现行选中项, 相加 (窗口_主要..现行选中项, 1))
    .如果真结束
    
.如果真结束


.子程序 _按钮_仓库_被单击, 空白型, , 
.局部变量 a, 文本型, , , 
.局部变量 bb, 文本型, , , 
.局部变量 锁定, 文本型, , , 
.局部变量 d, 整数型, , , 
.局部变量 f, 整数型, , , 

赋值 (d, 取表项数 ())
 ' 信息框 (d, 0, )
.计次循环首 (d, f)
    赋值 (a, 相减 (f, 1).取标题 (5))
    赋值 (bb, 相减 (f, 1).取标题 (2))
    赋值 (锁定, 相减 (f, 1).取标题 (6))
    .如果真 (不等于 (锁定, “锁定”))
        未知函数_67192801 (a, bb, “全部卖出”)
    .如果真结束
    延迟 (1000)
.计次循环尾 ()
未知函数_67192802 ()

.子程序 _图片框1_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (等于 (.标题, “-”))
    信息框2 (“请先选择你要购买的种子。”, #信息图标, )
    返回 ()
.如果真结束
.如果真 (等于 (.内容, “1”))
    返回 ()
.如果真结束
赋值 (.内容, 到文本 (相减 (到数值 (.内容), 到数值 (1))))

.子程序 _图片框2_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (等于 (.标题, “-”))
    信息框2 (“请先选择你要购买的种子。”, #信息图标, )
    返回 ()
.如果真结束
.如果真 (等于 (.内容, “99”))
    返回 ()
.如果真结束
赋值 (.内容, 到文本 (相加 (到数值 (.内容), 到数值 (1))))


.子程序 _窗口_我的_创建完毕, 空白型, , 
未知支持库函数_66 (取窗口句柄 (), 240)

.子程序 _超级列表框3_被双击, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果 (等于 (信息框2 (“确定卖出吗？”, 相加 (#是否钮, #询问图标, #默认按钮二, #程序等待), “提示”), 5))
    未知函数_67181280 (到文本 (.取标题 (., 5)), 到文本 (.取标题 (., 2)), “双击”)
.否则
    返回 ()
.如果结束



.子程序 卖出果实, 空白型, , 
.参数 cid, 文本型, , 
.参数 number, 文本型, , 
.参数 操作a, 文本型, , 

.局部变量 临时文本, 文本型, , , 
.局部变量 操作time, 整数型, , , 
.局部变量 操作key, 文本型, , , 
.局部变量 表达式, 未知类型0x50001, , , 
.局部变量 表达式2, 未知类型0x50001, , , 
.局部变量 搜索结果2, 未知类型0x50002, , , 
.局部变量 卖出个数, 未知类型0x50001, , , 
.局部变量 金钱, 未知类型0x50001, , , 
.局部变量 金钱2, 未知类型0x50002, , , 
.局部变量 卖出个数1, 未知类型0x50002, , , 
.局部变量 搜索结果, 未知类型0x50002, , , 

赋值 (操作time, 相减 (未知函数_67192787 (取现行时间 ()), 28800))
赋值 (操作key, 未知函数_67192788 (操作time))
赋值 (临时文本, 到文本 (未知函数_67192789 (“http://nc.qzone.qq.com/cgi-bin/cgi_farm_sale?mod=repertory&act=sale”, “POST”, , , 相加 (“farmKey=”, 操作key, “&farmTime=”, 到文本 (操作time), “&cId=”, cid, “&uIdx=”, , “&number=”, number))))
 ' {"cId":10,"code":1,"direction":"成功卖出<font color=\"#0099FF\"> <b>1</b> </font>个南瓜，得到金币<font color=\"#FF6600\"> <b>30</b> </font>","money":30}
表达式.未知支持库函数_3 (相加 (“direction”, #引号, “:”, #引号, “(.*?)”, “<font ”), )
卖出个数.未知支持库函数_3 (相加 (“<b>”, “(.*?)”, “</b>”), )
表达式2.未知支持库函数_3 (相加 (“</font>”, “(.*?)”, “<font”), )
金钱.未知支持库函数_3 (相加 (“<b>”, “(.*?)”, “</b>”), )
赋值 (搜索结果, 表达式.未知支持库函数_7 (临时文本, 1, ))
赋值 (卖出个数1, 卖出个数.未知支持库函数_7 (临时文本, 1, ))
赋值 (搜索结果2, 表达式2.未知支持库函数_7 (临时文本, 1, ))
赋值 (金钱2, 金钱.未知支持库函数_7 (临时文本, 100, ))
 ' 输出调试文本 (到文本 (UTF8转ANSI (到字节集 (搜索结果.取子匹配文本 (临时文本, 1, )))))
.如果 (大于 (到数值 (金钱2.未知支持库函数_12 (临时文本, 1, )), 5))
    窗口_主要.加入项目 (., 相加 (获取当前时间 (), “[系统]：”, 到文本 (UTF8转ANSI (到字节集 (搜索结果.未知支持库函数_12 (临时文本, 1, )))), 到文本 (UTF8转ANSI (到字节集 (卖出个数1.未知支持库函数_12 (临时文本, 1, )))), 到文本 (UTF8转ANSI (到字节集 (搜索结果2.未知支持库函数_12 (临时文本, 1, )))), 到文本 (UTF8转ANSI (到字节集 (金钱2.未知支持库函数_12 (临时文本, 1, )))), “个”, #换行符), )
.否则
    窗口_主要.加入项目 (., 相加 (“卖出失败！！！！”, #换行符), )
.如果结束
.如果真 (等于 (操作a, “双击”))
    未知函数_67192792 ()
.如果真结束


.窗口程序集 窗口程序集5, , , 

.子程序 _QQ_创建完毕, 空白型, , 
未知支持库函数_66 (取窗口句柄 (), 240)

.程序集 __HIDDEN_TEMP_MOD__, , , 

.子程序 UTF8转ANSI, 文本型, , 方圆软件工作室－林炳崇（进在眼前）出品
.参数 UTF8, 字节集, , 待转换UTF-8编码字节集



.子程序 UNICODE转ANSI, 文本型, , 方圆软件工作室－林炳崇（近在眼前）出品
.参数 Unicode数据, 字节集, , Unicode码字节集数据



.子程序 ANSI转UNICODE, 字节集, , 方圆软件工作室－林炳崇（近在眼前）出品
.参数 文本, 文本型, , Ansi码文本，只针对中文或双字节全角字符



.子程序 UTF8转UNICODE, 字节集, , 方圆软件工作室－林炳崇（近在眼前）出品
.参数 UTF8, 字节集, , 待转换UTF-8编码字节集



.子程序 UNICODE转UTF8, 字节集, , 方圆软件工作室－林炳崇（近在眼前）出品
.参数 UNICODE, 字节集, , 待转换UNICODE编码字节集



.子程序 ANSI转UTF8, 字节集, , 方圆软件工作室－林炳崇（进在眼前）出品
.参数 文本, 文本型, , 要转换为UTF8编码的文本



.子程序 BASE64编码, 文本型, , 方圆软件工作室－林炳崇（近在眼前）出品
.参数 待编码数据, 字节集, , 



.子程序 BASE64解码, 字节集, , 方圆软件工作室－林炳崇（近在眼前）出品
.参数 待解码数据, 文本型, , 



.子程序 文本加密, 文本型, , 方圆软件工作室－林炳崇（近在眼前）出品
.参数 文本, 文本型, , 待加密文本（本加密方法为动态随机加密，所以每次加密后的文本都不同）
.参数 密匙, 文本型, 可空, 长度为62任意不重复单字节可见字符，默认为：ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghijklmnopqrstuvwxyz



.子程序 文本解密, 文本型, , 方圆软件工作室－林炳崇（近在眼前）出品
.参数 文本, 文本型, , 待解密文本
.参数 密匙, 文本型, 可空, 必须跟加密时相同的密匙文本



.子程序 ANSI转USC2, 文本型, , 方圆软件工作室－林炳崇（近在眼前）出品
.参数 文本, 文本型, , 



.子程序 USC2转ANSI, 文本型, , 方圆软件工作室－林炳崇（近在眼前）出品
.参数 USC2, 文本型, , 



.程序集 __HIDDEN_TEMP_MOD__, , , 

.子程序 超级列表框排序, 文本型, , 对超级列表框按指定的列进行排序，返回文本形式的错误信息。使用的是选择排序法。曾劲松(古木,goomoo)　2004.6.27
.参数 某超级列表框, 超级列表框, , 指定要排序的超级列表框
.参数 列索引, 整数型, , 指定以哪一列作为基准
.参数 是否为从小到大, 逻辑型, 可空, 默认为从小到大
.参数 是否区分大小写, 逻辑型, 可空, 默认为不区分，仅对文本型排序有效
.参数 排序类型, 整数型, 可空, 可以为下列值：#文本型，#整数型，#长整数型，#双精度小数型，#日期时间型,默认为 #文本型。这些常量值与 取字段类型（）函数返回的常量值相对应



.程序集 __HIDDEN_TEMP_MOD__, , , 

.子程序 更换皮肤, 空白型, , 


.子程序 加载Aero特效, 空白型, , 


.子程序 卸载Aero特效, 空白型, , 


.程序集 __HIDDEN_TEMP_MOD__, , , 

.子程序 彗星URL编码, 文本型, , 返回已编码的URL
.参数 Bin_URL, 文本型, , 



.子程序 彗星URL编码_UTF8, 文本型, , 返回已编码的URL
.参数 Bin_URL, 文本型, , 



.子程序 彗星URL解码, 文本型, , 返回已解码的URL
.参数 Bin_URL, 文本型, , 



.子程序 彗星URL解码_UTF8, 文本型, , 返回已解码的URL
.参数 Bin_URL, 文本型, , 



.子程序 彗星HTTP读文件, 字节集, , 有可能线程阻塞,请在外部加超时判断
.参数 完整网址, 文本型, , 
.参数 访问方式, 文本型, 可空, "GET" or "POST",为空默认"GET"
.参数 代理地址, 文本型, 可空, 
.参数 附加协议头, 文本型, 可空, 
.参数 提交信息, 文本型, 可空, "POST"专用
.参数 网页头, 文本型, 参考 可空, 返回网页头部信息



.子程序 彗星HTTP读文本, 文本型, , 有可能线程阻塞,请在外部加超时判断
.参数 完整网址, 文本型, , 
.参数 访问方式, 文本型, 可空, "GET" or "POST",为空默认"GET"
.参数 代理地址, 文本型, 可空, 
.参数 附加协议头, 文本型, 可空, 
.参数 提交信息, 文本型, 可空, "POST"专用
.参数 网页头, 文本型, 参考 可空, 返回网页头部信息



.子程序 彗星打开指定网址, 空白型, , 调用默认浏览器打开指定网址
.参数 要打开的网址, 文本型, , 



.程序集 __HIDDEN_TEMP_MOD__, , , 

.子程序 Skin_MSN, 空白型, , 


.子程序 Skin_浅QQ2009, 空白型, , 


.子程序 Skin_漫画木头, 空白型, , 


.子程序 Skin_中国风, 空白型, , 


.子程序 Skin_QQ游戏, 空白型, , 


.子程序 Skin_Vista黑色, 空白型, , 


.子程序 Skin_Vista白色, 空白型, , 


.子程序 Skin_深QQ2009, 空白型, , 


.类模块 APIHOOK类, , , 2.0

.子程序 安装, 逻辑型, , 安装APIHOOK
.参数 动态链接库路径, 文本型, , 欲截获的函数名所在动态链接库的路径
.参数 函数名, 文本型, , 欲截获的函数名
.参数 新函数地址, 整数型, , 回调子程序指针地址.可以用 到整数(子程序指针) 获得



.子程序 安装2, 逻辑型, , 安装APIHOOK
.参数 动态链接库路径, 文本型, , 欲截获的函数名所在动态链接库的路径
.参数 函数名, 文本型, , 欲截获的函数名
.参数 新函数地址, 子程序指针, , 回调子程序指针



.子程序 继续, 空白型, , 取消暂停,继续进行拦截


.子程序 暂停, 空白型, , 暂停现在的拦截


.子程序 取地址, 整数型, , 取原始数据地址,回调原指针时使用


.子程序 卸载, 逻辑型, , 卸载APIHOOK (本命令会在类变量被销毁时自动被调用)


.类模块 指针类, , , 本类是对当前进程进行内存操作的函数库,操作外部进程需DLL注入

.子程序 动态调用子程序, 整数型, , 动态调用子程序,返回它的返回值,可能为空
.参数 子程序指针, 整数型, , 欲调用的子程序指针  到整数(子程序指针)
.参数 参数, 整数型, 可空 数组, 为整数数组，参数1为成员1…类推；文本型和字节集型（自定义结构）为指针



.子程序 动态调用子程序2, 整数型, , 动态调用子程序,返回它的返回值,可能为空
.参数 子程序指针, 整数型, , 欲调用的子程序指针  到整数(子程序指针)
.参数 参数1, 整数型, 可空, 参数指针地址,整数型除外
.参数 参数2, 整数型, 可空, 
.参数 参数3, 整数型, 可空, 
.参数 参数4, 整数型, 可空, 
.参数 参数5, 整数型, 可空, 
.参数 参数6, 整数型, 可空, 
.参数 参数7, 整数型, 可空, 
.参数 参数8, 整数型, 可空, 
.参数 参数9, 整数型, 可空, 
.参数 参数10, 整数型, 可空, 
.参数 参数11, 整数型, 可空, 
.参数 参数12, 整数型, 可空, 



.子程序 取库函数地址, 整数型, , 取出DLL动态链接库中函数地址,如果动态链接库未装载会被自动装载(成功返回函数地址,失败返回0)
.参数 库文件名, 文本型, , DLL命令所在动态链接库的文件名
.参数 函数名, 文本型, , DLL命令在其所在动态链接库中的名称



.子程序 是否有效地址, 逻辑型, , 判断指针地址是否有效!
.参数 指针地址, 整数型, , 



.子程序 取地址块大小, 整数型, , 返回指针地址指向的内存块大小
.参数 指针地址, 整数型, , 



.子程序 取地址尺寸, 整数型, , 获取变量地址中的数据尺寸
.参数 变量地址, 整数型, , 



.子程序 取字节型地址, 整数型, , 获取变量指针地址
.参数 变量, 字节型, , 



.子程序 取短整数型地址, 整数型, , 获取变量指针地址
.参数 变量, 短整数型, , 



.子程序 取整数型地址, 整数型, , 获取变量指针地址
.参数 变量, 整数型, , 



.子程序 取长整数型地址, 整数型, , 获取变量指针地址
.参数 变量, 长整数型, , 



.子程序 取小数型地址, 整数型, , 获取变量指针地址
.参数 变量, 小数型, , 



.子程序 取双精度小数型地址, 整数型, , 获取变量指针地址
.参数 变量, 双精度小数型, , 



.子程序 取日期时间型地址, 整数型, , 获取变量指针地址
.参数 变量, 日期时间型, , 



.子程序 取子程序地址, 整数型, , 获取变量指针地址
.参数 变量, 子程序指针, , 



.子程序 取文本型地址, 整数型, , 获取变量指针地址
.参数 变量, 文本型, , 



.子程序 取字节集地址, 整数型, , 获取变量指针地址
.参数 变量, 字节集, , 



.子程序 取坐标型地址, 整数型, , 获取变量指针地址
.参数 变量, 坐标型, 可空, 



.子程序 取整数型数组地址, 整数型, , 获取变量指针地址
.参数 变量, 整数型, 数组, 



.子程序 取文本型数组地址, 整数型, , 获取变量指针地址
.参数 变量, 文本型, 数组, 



.子程序 取字节集数组地址, 整数型, , 获取变量指针地址
.参数 变量, 字节集, 数组, 



.子程序 读字节集, 字节集, , 返回指定内存指针所指向地址处的一段数据或字节集变量或字节集参数数据
.参数 指针地址, 整数型, , 内存地址指针
.参数 数据长度, 整数型, 可空, 指定内存数据长度 (如果获取字节集变量或字节集参数的完整数据,请留空)



.子程序 读文本型, 文本型, , 返回指定内存指针所指向地址处的文本(可以是文本型变量或文本型参数的数据内容)
.参数 指针地址, 整数型, , 内存地址指针



.子程序 读整数型, 整数型, , 返回指定内存指针所指向地址处的整数
.参数 指针地址, 整数型, , 内存地址指针



.子程序 读子程序指针, 子程序指针, , 返回指定内存指针所指向地址处的子程序指针
.参数 指针地址, 整数型, , 内存地址指针



.子程序 读坐标型, 坐标型, , 返回指定内存指针所指向地址处坐标数据
.参数 指针地址, 整数型, , 



.子程序 读字节集数组, 整数型, , 返回数组成员数
.参数 指针地址, 整数型, , 
.参数 数组数据, 字节集, 数组, 



.子程序 读整数型数组, 整数型, , 返回数组成员数
.参数 指针地址, 整数型, , 
.参数 数组数据, 整数型, 数组, 



.子程序 读文本型数组, 整数型, , 返回数组成员数
.参数 指针地址, 整数型, , 
.参数 数组数据, 文本型, 数组, 



.子程序 读共享, 字节集, , 读取一个共享数据,由"写共享"创建(返回共享数据,失败返回空字节集)
.参数 对象名称, 文本型, , 共享内容的名字,用来读取该共享对象中的数据



.子程序 写共享, 逻辑型, , 创建一个文件映射对象来共享数据或在已存在的共享中写入数据,用来与DLL共享(创建成功返回真,失败返回假)
.参数 对象名称, 文本型, , 共享内容的名字,读共享时使用
.参数 共享数据, 字节集, , 欲共享的数据



.子程序 写字节集, 空白型, , 往内存指针地址中写入字节集数据,必须确保指针地址真实有效
.参数 地址, 整数型, , 
.参数 字节集, 字节集, , 欲写入的数据
.参数 长度, 整数型, 可空, 写入指定长度数据,默认为全部写入并加上易语言字节集结束标志



.子程序 写文本型, 空白型, , 往内存指针地址中写入整数型数据,必须确保指针地址真实有效
.参数 指针地址, 整数型, , 
.参数 内容, 文本型, , 欲写入的文本



.子程序 写整数型, 空白型, , 往内存指针地址中写入整数型数据,必须确保指针地址真实有效
.参数 地址, 整数型, , 
.参数 数值, 整数型, , 欲写入的数值



.类模块 数据库类, , , 

.子程序 连接ACCESS, 逻辑型, , 
.参数 私_数据库文件, 文本型, , 要连接的MDB数据库文件



.子程序 Execute, 对象, , 
.参数 CommandText, 文本型, , 
.参数 RecordsAffected, 变体型, 参考 可空, 类型为“变体型”，需要提供变量以取回方法所返回的数据
.参数 Options, 整数型, 可空, 参数默认值为“-1”



.子程序 查询, 逻辑型, , 
.参数 SQL, 文本型, , 



.子程序 移动, 空白型, , Move
.参数 NumRecords, 整数型, , 



.子程序 移动到上一条, 空白型, , MovePrevious


.子程序 移动到下一条, 空白型, , MoveNext


.子程序 移动到首记录, 空白型, , MoveFirst


.子程序 移动到尾记录, 空白型, , MoveLast


.子程序 更新, 空白型, , UpDate


.子程序 关闭, 空白型, , 关闭查询时打开的表


.子程序 GetRows, 变体型, , 
.参数 Rows, 整数型, 可空, 
.参数 Start, 整数型, 可空, 
.参数 Fields, 整数型, 可空, 



.子程序 断开, 空白型, , 断开数据库连接


.子程序 添加, 空白型, , 


.子程序 尾记录后, 逻辑型, , 


.子程序 取记录数, 整数型, , 


.子程序 读文本, 文本型, , 
.参数 字段名, 文本型, , 



.子程序 读整数, 整数型, , 
.参数 字段名, 文本型, , 



.子程序 读小数, 双精度小数型, , 
.参数 字段名, 文本型, , 



.子程序 读逻辑值, 逻辑型, , 
.参数 字段名, 文本型, , 



.子程序 读日期时间, 日期时间型, , 
.参数 字段名, 文本型, , 



.子程序 读字节集, 字节集, , 
.参数 字段名, 文本型, , 



.子程序 读变体型, 变体型, , 
.参数 字段名, 文本型, , 



.子程序 写文本, 空白型, , 
.参数 字段名, 文本型, , 
.参数 写入文本, 文本型, , 



.子程序 写整数, 空白型, , 
.参数 字段名, 文本型, , 
.参数 写入值, 整数型, , 



.子程序 写小数, 空白型, , 
.参数 字段名, 文本型, , 
.参数 写入值, 双精度小数型, , 



.子程序 写日期时间, 空白型, , 
.参数 字段名, 文本型, , 
.参数 写入值, 日期时间型, , 



.子程序 写字节集, 空白型, , 
.参数 字段名, 文本型, , 
.参数 写入值, 字节集, , 



.子程序 写变体型, 空白型, , 
.参数 字段名, 文本型, , 
.参数 写入值, 变体型, , 



.子程序 取最后错误, 文本型, , 


.类模块 HTTP类, , , 

.子程序 网络是否连接, 逻辑型, , 判断当前是否连网(连网返回真,否则返回假)


.子程序 取网络文件尺寸, 整数型, , 获取网络文件尺寸大小.失败返回-1 
.参数 网络地址, 文本型, , 欲获取尺寸的网络文件地址
.参数 重试次数, 整数型, 可空, 失败重试的次数,默认为5



.子程序 进度下载, 逻辑型, , 进度下载2G以内的网络文件,不支持多个线程(成功执行返回真,失败返回假)
.参数 进度指针, 子程序指针, , 用于回调下载进度信息的子程序指针   回调下载函数(总尺寸b,已下载b,百分比,速度KB/s)
.参数 下载地址, 文本型, , 欲下载的网络文件地址
.参数 文件名, 文本型, 可空, 欲保存到本地路径文件名,默认为运行目录+网络文件名,仅指定文件名则为运行目录,仅指定目录则为网络文件名
.参数 重试次数, 整数型, 可空, 失败重试的次数,默认为5



.子程序 停止下载, 空白型, , 停止当前正在下载的任务


.子程序 取网页链接, 整数型, , 获取页面指定链接,返回链接数
.参数 页面地址, 文本型, , 
.参数 页面链接, 网页链接, 数组, 
.参数 编码, 整数型, 可空, 默认为GBK



.子程序 网址到域名, 文本型, , 无效网址返回 http://
.参数 网址, 文本型, , 



.子程序 网址到子域名, 文本型, , 返回的子域名以 / 结尾
.参数 网址, 文本型, , 



.子程序 网址到文件名, 文本型, , 失败返回空
.参数 网址, 文本型, , 



.子程序 读网页, 文本型, , 读取GBK编码的网页源码(返回文本内容)
.参数 完整网址, 文本型, , 欲访问的网络地址
.参数 编码方式, 整数型, 可空, 默认GBK编码 1 Unicode



.子程序 访问网络, 字节集, , 可读取指定网络文件内容(返回读取的字节集内容) "写到文件"可查看其网页内容或得到网络文件
.参数 完整网址, 文本型, , 欲访问的网络地址
.参数 访问方式, 文本型, 可空, "GET" or "POST",为空默认"GET"
.参数 代理地址, 文本型, 可空, 
.参数 附加协议头, 文本型, 可空, 
.参数 提交信息, 文本型, 可空, "POST"专用



.子程序 取域名, 文本型, , 
.参数 网址, 文本型, , 



.子程序 取端口, 整数型, , 
.参数 网址, 文本型, , 



.子程序 取GET数据, 文本型, , 失败返回空
.参数 完整网址, 文本型, , 如: http://www.baidu.com/index.php?a=123&b=456&c=789
.参数 GET左值, 文本型, 可空, 根据上面的地址,a取出123，b取出456等，可空为返回全部



.子程序 取页面地址, 文本型, , 
.参数 网址, 文本型, , 



.子程序 设COOKIE, 逻辑型, , 
.参数 网址, 文本型, , 
.参数 COOKIE名称, 文本型, 可空, 为空清除所有
.参数 COOKIE内容, 文本型, 可空, 为空清除
.参数 有效期, 日期时间型, 可空, 为空不保存



.子程序 取COOKIE, 文本型, , 
.参数 网址, 文本型, , 
.参数 COOKIE名称, 文本型, 可空, 为空返回全部COOKIE



.子程序 清除COOKIE, 逻辑型, , 
.参数 域名, 文本型, , 



.子程序 删除COOKIE, 空白型, , 删除Cookie文件
.参数 域名, 文本型, 可空, 可空则清除所有Cookie



.子程序 时间到GMT格式, 文本型, , 将日期时间型数据转换为GMT格式
.参数 待转换时间, 日期时间型, , 



.类模块 热键类, , , 本类可能在今后的版本中删除!!

.子程序 注册, 整数型, , 注册一个全局热键. (成功返回热键ID,失败返回0)
.参数 窗口句柄, 整数型, , 通常为    取窗口句柄()
.参数 功能键, 整数型, 可空, 1 Alt  2 Ctrl  4 Shitf  8 Win 若要两个或以上的状态键按则把它们的值相加.
.参数 键代码, 整数型, , 
.参数 子程序指针, 子程序指针, , 响应热键事件的子程序指针,四个参数(窗口句柄,消息786,热键ID,参数)



.子程序 撤销, 整数型, , 撤销指定热键 (成功返回非0,失败返回0)
.参数 窗口句柄, 整数型, , 
.参数 HotKeyID, 整数型, , 



.子程序 卸载, 空白型, , 撤销所有热键并卸载,该命令会在本类销毁时自动被调用


.类模块 MD5类, , , 

.子程序 加密, 文本型, , 进行MD5加密运算,不可逆的加密算法(返回加密后的密文)
.参数 字节集, 字节集, , 欲进行MD5加密处理的字节集



.子程序 取高16位, 整数型, , 
.参数 参数, 整数型, , 



.子程序 取低16位, 整数型, , 
.参数 参数, 整数型, , 



.子程序 正整数加法, 整数型, , 
.参数 参数X, 整数型, , 
.参数 参数Y, 整数型, , 



.子程序 循环左移, 整数型, , 
.参数 欲移位数, 整数型, , 
.参数 位数, 整数型, , 



.子程序 取输出文本, 文本型, , 
.参数 数值, 整数型, , 



.子程序 到十六进制文本, 文本型, , 这个取十六进制文本没有去0
.参数 数值, 整数型, , 只能是255以内的数



.子程序 F, 整数型, , 
.参数 参数X, 整数型, , 
.参数 参数Y, 整数型, , 
.参数 参数Z, 整数型, , 



.子程序 G, 整数型, , 
.参数 参数X, 整数型, , 
.参数 参数Y, 整数型, , 
.参数 参数Z, 整数型, , 



.子程序 H, 整数型, , 
.参数 参数X, 整数型, , 
.参数 参数Y, 整数型, , 
.参数 参数Z, 整数型, , 



.子程序 I, 整数型, , 
.参数 参数X, 整数型, , 
.参数 参数Y, 整数型, , 
.参数 参数Z, 整数型, , 



.子程序 FF, 空白型, , 
.参数 参数A, 整数型, 参考, 
.参数 参数B, 整数型, , 
.参数 参数C, 整数型, , 
.参数 参数D, 整数型, , 
.参数 信息, 整数型, , 
.参数 移位数, 整数型, , 
.参数 轮参数, 整数型, , 



.子程序 GG, 空白型, , 
.参数 参数A, 整数型, 参考, 
.参数 参数B, 整数型, , 
.参数 参数C, 整数型, , 
.参数 参数D, 整数型, , 
.参数 信息, 整数型, , 
.参数 移位数, 整数型, , 
.参数 轮参数, 整数型, , 



.子程序 HH, 空白型, , 
.参数 参数A, 整数型, 参考, 
.参数 参数B, 整数型, , 
.参数 参数C, 整数型, , 
.参数 参数D, 整数型, , 
.参数 信息, 整数型, , 
.参数 移位数, 整数型, , 
.参数 轮参数, 整数型, , 



.子程序 II, 空白型, , 
.参数 参数A, 整数型, 参考, 
.参数 参数B, 整数型, , 
.参数 参数C, 整数型, , 
.参数 参数D, 整数型, , 
.参数 信息, 整数型, , 
.参数 移位数, 整数型, , 
.参数 轮参数, 整数型, , 



.子程序 轮函数, 空白型, , 
.参数 参数A, 整数型, 参考, 
.参数 参数B, 整数型, 参考, 
.参数 参数C, 整数型, 参考, 
.参数 参数D, 整数型, 参考, 
.参数 信息, 整数型, 数组, 



.类模块 内存共享类, , , 

.子程序 创建, 整数型, , 创建指定大小的内存空间,返回内存地址
.参数 大小, 整数型, , 指定大小



.子程序 写入, 整数型, , 返回内存地址
.参数 地址, 整数型, 可空, 指定写入地址,如果为空将自动创建
.参数 数据, 字节集, 参考, 欲写入的字节集数据



.子程序 读取, 字节集, , 读取地址数据！！注意，也可以调用核心库方法 指针到字节集(地址,内存共享.取内存长度(地址)) 来同样取得数据
.参数 地址, 整数型, , 由内存映射返回的地址
.参数 读取位置, 整数型, 可空, 从1开始到结束,如果留空则从首地址开始,超出作用范围将指定0
.参数 长度, 整数型, 可空, 若读取位置+长度超过总数据长度,将自动指定0



.子程序 释放, 逻辑型, , 释放内存
.参数 地址, 整数型, , 由内存映射返回的地址



.子程序 取内存长度, 整数型, , 取指定内存地址的长度
.参数 地址, 整数型, , 内存地址



.子程序 自动释放, 空白型, , 在类销毁时是否将自动释放所有已申请的内存地址
.参数 是否自动释放, 逻辑型, , 



.子程序 全部释放, 空白型, , 忽略自动释放属性,直接释放所有地址


.类模块 表达式运算类, , , 

.子程序 表达式运算, 文本型, , 对混合表达式进行运算 支持运算符号 +-\%*/() 支持负数小数(返回运算结果,计算错误返回空文本)
.参数 表达式, 文本型, , 欲计算的表达式. 对错误的表达式会自动报错!
.参数 信息框提示标题, 文本型, 可空, 可空:仅输出调试文本报错!  建意编译时设置标题:信息框提示错误原因!



.子程序 是否合法, 逻辑型, , 
.参数 表达式, 文本型, , 



.子程序 计算表达式处理, 文本型, , 
.参数 表达式, 文本型, , 



.子程序 计算单表达式, 文本型, , 计算一个单运算符的表达式
.参数 表达式, 文本型, , 单运算表达式
.参数 符号位置, 整数型, , 



.子程序 取单表达式, 文本型, , 
.参数 文本, 文本型, , 
.参数 优先级, 整数型, 可空, 1 乘除 2 整除取余 3 加减
.参数 符号位置, 整数型, 参考, 取出来的单表达式符号的位置



.子程序 是否有符号, 逻辑型, , 
.参数 文本, 文本型, , 
.参数 符号, 文本型, , 参考的符号组合



.子程序 合并符号, 文本型, , 合并表达式中的+-连续的符号
.参数 表达式, 文本型, , 



.子程序 取文本内段, 文本型, , 
.参数 文本, 文本型, , 欲取文本段的文本
.参数 左文本, 文本型, , 左特征文本
.参数 右文本, 文本型, , 右特征文本



.子程序 取文本外段, 文本型, , 
.参数 文本, 文本型, , 欲取文本段的文本
.参数 左文本, 文本型, , 左特征文本
.参数 右文本, 文本型, , 右特征文本



.类模块 文件操作类, , , 

.子程序 取尺寸, 文本型, , 可以取大于2G文件尺寸(返回文件大小K)
.参数 文件名, 文本型, , 欲取尺寸的文件名称



.子程序 打开, 整数型, , 打开一个文件(成功返回文件号,失败返回0)
.参数 文件名称, 文本型, , 欲打开的文件名称
.参数 方式, 整数型, 可空, 可空:默认为读写 详情同系统核心支持库"打开文件"



.子程序 关闭, 空白型, , 关闭文件号(无返回值)
.参数 文件号, 整数型, , 欲关闭的文件号



.子程序 移动, 整数型, , 
.参数 FromFile, 文本型, , 被移动文件名
.参数 ToFile, 文本型, , 移动到文件名



.子程序 复制, 整数型, , 
.参数 FromFile, 文本型, , 被复制文件名
.参数 ToFile, 文本型, , 复制到文件名



.子程序 删除, 整数型, , 
.参数 FromFile, 文本型, , 欲删除的文件名



.子程序 改名, 整数型, , 
.参数 FromFile, 文本型, , 文件名或目录名
.参数 ToFile, 文本型, , 新文件名或目录名



.子程序 创建, 整数型, , 
.参数 文件名, 文本型, , 要创建文件路径加名称后缀
.参数 文件类型, 整数型, 可空, 0,文件能够读写　1,创建只读文件 2,创建隐藏文件 3,创建系统文件;默认0



.子程序 运行, 整数型, , 
.参数 文件名, 文本型, , 路径+文件名
.参数 运行方式, 整数型, 可空, 0为隐藏运行 1 为正常运行



.类模块 腾讯QQ类, , , 

.子程序 是否在线, 逻辑型, , 判断指定QQ在线状态(在线:返回真.否则返回假)
.参数 QQ号, 文本型, , 欲判断的QQ号码



.子程序 登录, 逻辑型, , 自动登陆腾讯QQ (成功返回真,失败返回假)
.参数 QQ路径, 文本型, 可空, 可空为取注册表路径的注册
.参数 帐号, 文本型, , QQ号
.参数 密码, 文本型, , QQ密码
.参数 是否隐身, 逻辑型, 可空, 可空为假:正常登陆  真:隐身登陆



.子程序 密码到MD5, 文本型, , 将QQ密码转换为MD5密码,QQ2008及以上版本
.参数 密码, 文本型, , 



.子程序 密码到MD5_2009, 文本型, , 将QQ密码转换为MD5密码,QQ2009版本,主要用于登陆腾讯网站
.参数 密码, 文本型, , 
.参数 验证码, 文本型, 可空, 



.子程序 取路径, 文本型, , 取QQ.exe路径,失败返回空文本


.子程序 取目录路径, 文本型, , 取QQ安装目录路径,失败返回空文本


.子程序 取号码, 整数型, , 取本机的QQ号码(返回QQ号码数量,找不到QQ号返回0)
.参数 QQ号码数组, 文本型, 数组, 取出来滴QQ号码数组
.参数 全部号码, 逻辑型, 可空, 默认为假:取使用中的所有QQ号码  真:取本机所使用过的所有QQ号码



.子程序 创建迷你门户快捷方式, 逻辑型, , (详情访问:QQ迷你门户网)
.参数 保存路径, 文本型, , 保存全路径文件名 (路径+文件名,无需后缀)
.参数 门户号, 文本型, , 迷你门户号.(如:29961)



.子程序 创建在线交谈快捷方式, 逻辑型, , QQ交谈快捷方式.(此快捷方式为腾讯QQ专用,不会占用网页!直接打开聊天窗口)
.参数 保存路径, 文本型, , 保存全路径文件名 (路径+文件名,无需后缀)
.参数 QQ号, 文本型, , QQ/TM号码
.参数 网站名称, 文本型, 可空, 留言的网站名称



.子程序 创建快速登陆快捷方式, 逻辑型, , 通过此快捷方式可以不必再输入QQ号与QQ密码.直接登陆QQ.其中的QQ密码经过MD5加密处理
.参数 保存路径, 文本型, , 保存快捷方式的全路径文件名
.参数 QQ路径, 文本型, 可空, 可空:取注册表QQ路径
.参数 QQ号, 文本型, , 
.参数 QQ密码, 文本型, , 
.参数 是否隐身, 逻辑型, 可空, 可空为假:正常登陆 真:隐身登陆



.子程序 强行聊天, 空白型, , 直接打开聊天窗口,不占用网页
.参数 QQ号码, 文本型, , 对方的QQ号码
.参数 网站名称, 文本型, 可空, 留言的网站名称



.子程序 登陆_2009, 空白型, , 
.参数 QQ路径, 文本型, , 
.参数 QQ号, 文本型, , 
.参数 QQ密码, 文本型, , 



.类模块 特效类, , , 

.子程序 打字效果, 空白型, , 自动向指定句柄的控件中输入文字效果
.参数 句柄, 整数型, , 欲接收打字的控件句柄 (-句柄 撤消指定打字效果  -1 撤消所有)
.参数 文字内容, 文本型, 可空, 欲打入的文字内容 (内容为空,暂停或恢复该句柄的打字效果)
.参数 间隔, 整数型, 可空, 单个文字的等待时间(单位:毫秒) 可空为50毫秒



.子程序 编辑框打字效果, 空白型, , 在编辑框中输入文字效果(不支持多个同时打字效果)
.参数 编辑框a, 编辑框, , 展现打字效果的编辑框
.参数 文字内容, 文本型, , 欲打入的文字内容
.参数 间隔, 整数型, 可空, 单个文字的等待时间(单位:毫秒) 可空为50毫秒
.参数 是否全角, 逻辑型, 可空, 默认为显示半角文字,真:显示全角文字



.子程序 编辑框打字效果控制, 空白型, , 控制正在使用的打字效果
.参数 打字状态, 整数型, 可空, 0 继续打字  1 暂停打字  2:结束打字  
.参数 间隔, 整数型, 可空, 单个文字的等待时间(单位:毫秒)   可空:保持原速度不变



.子程序 渐隐渐现, 空白型, , 窗口控件渐隐渐现效果(注:使用前必须先使用"窗口透明" 延时一定时间后再使用此功能)
.参数 句柄, 整数型, , 欲渐隐渐现效果的窗口,编辑框,按钮等的句柄
.参数 渐隐or渐现, 逻辑型, 可空, 渐隐效果还是渐现效果(真:渐现 可空为假:渐隐)
.参数 时间, 整数型, , 渐隐渐现所展示的时间(单位毫秒)



.子程序 窗口抖动, 空白型, , 模仿QQ抖动窗口效果(无返回值)
.参数 临时句柄, 整数型, , 欲移动窗口的句柄
.参数 抖动次数, 整数型, 可空, 最低抖动次数为3,低于这个值则为3
.参数 抖动速度, 整数型, 可空, 最低抖动速度为10,低于这个值则为10



.子程序 仿QQ隐藏窗口, 逻辑型, , 模仿QQ隐藏窗口效果(不支持多个窗口)特效已经开启:返回真 特效成功关闭:返回假
.参数 窗口句柄, 整数型, 可空, 欲产生效果的窗口(可空:则去掉特效! 注:销毁窗口前请卸载特效功能!)
.参数 露出, 整数型, 可空, 默认为露出3像素,如果小于1则为默认值(单位像素)



.类模块 RC4类, , , 

.子程序 加密, 文本型, , 用RC4算法对文本进行加密.(返回加密后的密文)
.参数 instr, 文本型, , 欲加密的文本
.参数 key, 文本型, 可空, 用作加密的密钥 (解密时必须有密钥才能解开密文)



.子程序 解密, 文本型, , 对RC4算法加密过的文本进行解密(返回解密后的文本)
.参数 instr, 文本型, , 欲解密的密文
.参数 key, 文本型, 可空, 用作解密的密钥(加密时使用的)



.类模块 BASE64类, , , 

.子程序 编码, 文本型, , BASE64编码处理(返回编码后的文本)
.参数 待编码数据, 字节集, , 待编码字节集



.子程序 解码, 字节集, , BASE64解码处理(返回解码后的字节集数据)
.参数 编码文本, 文本型, 参考, 待解码的文本



.类模块 软件类, , , 

.子程序 是否被调试, 逻辑型, , 判断进程是否被调试(如果从其它进程启动返回真,否则返回假)
.参数 进程ID, 整数型, 可空, 默认为自进程



.子程序 调试器脱钩, 空白型, , 检测调试器,脱离调试器的调试!如果你直接运行这段代码的话,由于易编辑环境也是一个调试器,所以程序会马上脱离,然后你按"终止"是没有用的


.子程序 禁止重复运行, 空白型, , 禁止程序重复运行,还原已经运行的程序窗口 | 此功能应加在 __启动窗口_创建完毕 子程序下
.参数 临时句柄, 整数型, 可空, 再次运行_欲还原的窗口的句柄(可空则不还原已经运行的此程序窗口)
.参数 项名, 文本型, 可空, 如果有多个程序用到禁止重复运行功能,建意给每个程序定个不同的项名.任意文本



.子程序 删除自身, 空白型, , 程序删除自身EXE文件(无返回值)


.子程序 验证注册码, 逻辑型, , 进行软件注册验证(注册成功返回真 注册失败返回假)
.参数 注册码, 文本型, 可空, 用作验证注册身份的注册码(可空则判断是否已经注册)  注册码的计算方法请使用子程序“注册码生成”
.参数 载入窗口, 窗口, 可空, 注册成功后载入的窗口,可空则不载入窗口
.参数 加密文本, 文本型, 可空, 用作处理注册码的文本(任意) 可空则不作加密处理
.参数 注册账号, 文本型, 可空, 用作生成对应注册码的注册账号,可空则取硬盘特字(建意用"取硬盘特征字()",将使用者的硬盘特征字发给软件作者,用"注册码生成()",生成注册码后发给使用方)



.子程序 生成注册码, 文本型, , 返回所生成的注册码(此命令仅供软件作者生成注册码,参数必须与"注册码验证"参数相同)
.参数 加密文本, 文本型, 可空, 用作处理注册码的文本(任意) 可空则不作加密处理
.参数 注册账号, 文本型, 可空, 用作生成对应注册码的注册账号,可空则取硬盘特字



.子程序 关联后缀, 空白型, , 关联指定后缀名到指定文件 (打开该后缀名文件,该后缀名文件路径将作为参数传递给指定文件)
.参数 程序路径, 文本型, 可空, 关联到程序的路径 可空:取此执行文件的路径
.参数 后缀, 文本型, , 欲关联的后缀名,多个后缀用|分开 (如: asp|htm|html)
.参数 ICO图标路径, 文本型, 可空, 被关联文件的图标 可空为执行文件(程序)图标
.参数 文件类型, 文本型, 可空, 关联文件的说明 被关联文件属性中的文件类型
.参数 关联名, 文本型, 可空, 可空为后缀



.子程序 删除后缀关联, 空白型, , 删除指定文件后缀关联
.参数 后缀, 文本型, , 欲删除已经关联的后缀 ( 如 html )



.子程序 后缀是否已关联, 整数型, , 判断指定后缀名是否被关联(未关联返回-1 关联文件不存在返回0 已经关联返回1)
.参数 后缀, 文本型, , 欲判断是否已经关联的后缀 ( 如 html )



.子程序 修改版权信息, 空白型, , 修改指定EXE文件版权信息
.参数 文件名, 文本型, , 
.参数 版本信息, 版权信息型, , 



.类模块 WinIo类, , , 使用本类功能后,驱动会在程序运行时自动被安装驱动,程序关闭时自动卸载驱动!但只能在系统Admin权限下运行!

.子程序 是否安装成功, 逻辑型, , 判断当前驱动是否安装成功 (安装驱动成功返回真,失败返回假)


.子程序 释放按键, 逻辑型, , 模拟按键winio需暂停时,调用此功能释放功能按键


.子程序 按键, 逻辑型, , 驱动级模拟按键
.参数 键代码, 整数型, , 键代码
.参数 状态, 整数型, 可空, 为空:默认为按键(按下_+放开_)   3 #按下_  4 #放开_
.参数 间隔, 整数型, 可空, 可空默认为:0 (毫秒) 按下放开之间的间隔时间



.子程序 功能按键, 逻辑型, , 驱动级模拟功能按键,如:#左光标键
.参数 键代码, 整数型, , 功能键代码
.参数 状态, 整数型, 可空, 为空:默认为按键(按下_+放开_)   3 #按下_  4 #放开_
.参数 间隔, 整数型, 可空, 可空默认为:0 (毫秒) 按下放开之间的间隔时间



.子程序 组合按键, 逻辑型, , 驱动级模拟组合按键
.参数 键代码, 整数型, , 
.参数 功能键码, 整数型, , 
.参数 间隔, 整数型, 可空, 可空默认为:0  (毫秒) 按下放开之间的间隔时间



.子程序 鼠标偏移, 逻辑型, , 模拟鼠标偏移,目标坐标与实际坐标有一像素点误差属正常现象!
.参数 横偏移量, 整数型, , 鼠标横坐标偏移距离,负数左移,正数右移(移动后坐标=当前坐标+偏移量)
.参数 纵偏移量, 整数型, , 鼠标纵坐标偏移距离,负数上移,正数下移



.子程序 鼠标移动, 逻辑型, , 模拟鼠标移动,目标坐标与实际坐标有一像素点误差属正常现象!
.参数 窗口句柄, 整数型, 可空, 可空:相对桌面移动鼠标  句柄有效则相对窗口中坐标移动
.参数 水平坐标, 整数型, , 
.参数 垂直坐标, 整数型, , 



.子程序 鼠标归位, 逻辑型, , 恢复当前鼠标坐标到"鼠标记录"的坐标点或移动鼠标到指定点
.参数 坐标, 坐标型, 可空, 可空:恢复到上次记录的坐标点



.子程序 鼠标按键, 逻辑型, , 驱动级模拟鼠标按键
.参数 键, 整数型, 可空, 可空:为左键_  1 #左键_   2 #右键_   3 #中键_
.参数 状态, 整数型, 可空, 可空:为单击_  1 #单击_   2 #双击_   3 #按下_  4 #放开_
.参数 间隔, 整数型, 可空, 默认为0 无间隔 某些情况下需要增加一点间隔(毫秒)



.子程序 写指令, 逻辑型, , 本命令为高级命令,对IO操作不精通者慎用,否则死机难免!!
.参数 指令, 整数型, , 
.参数 参一, 整数型, 可空, 
.参数 参二, 整数型, 可空, 
.参数 参三, 整数型, 可空, 
.参数 参四, 整数型, 可空, 



.子程序 锁定键盘, 逻辑型, , (解除)禁止键盘接口,外部无法操作键盘,只有本类命令可以控制键盘
.参数 解锁, 逻辑型, 可空, 默认为假 锁定  真 解锁 (最后千万别忘了自动解锁)



.子程序 锁定鼠标, 逻辑型, , (解除)禁止鼠标接口,外部无法操作鼠标,只有本类命令可以控制鼠标
.参数 解锁, 逻辑型, 可空, 默认为假 锁定  真 解锁 (最后千万别忘了自动解锁)



.子程序 系统变速, 逻辑型, , 双核下无效!
.参数 数值, 短整数型, , 



.类模块 HOOK类, , , 

.子程序 注册热键, 整数型, , 注册一个全局热键(成功返回热键ID,失败返回0)
.参数 窗口句柄, 整数型, 可空, 响应热键事件的标签句柄.在标签反馈事件中响应热键(双击标签).参数一为响应的热键ID
.参数 键代码, 整数型, 可空, 需要注册的热键
.参数 功能键, 整数型, 可空, 1 Alt  2 Ctrl  4 Shitf  8 Win 若要两个或以上的状态键按则把它们的值相加.



.子程序 撤销热键, 逻辑型, , 撤销指定热键 (成功返回真,失败返回假,本命令会在类变量销毁时自动被调用)
.参数 热键ID, 整数型, 可空, 撤消指定热键.如果本参数为空,则卸载全部热键



.子程序 卸载钩子, 空白型, , 卸载指定钩子
.参数 钩子ID, 整数型, , 



.子程序 安装键盘钩子, 逻辑型, , 安装一个键盘钩子,可同时安装多个钩子指针,后加入的指针具有优先权(成功返回真,失败返回假)
.参数 回调指针, 子程序指针, , 回调钩子子程序指针,回调指针(键代码,状态).返回真:吃掉消息.返回假:放行消息



.子程序 卸载键盘钩子, 空白型, , 卸载已安装的键盘钩子集 (本命令会在类变量销毁时自动被调用)


.子程序 安装鼠标钩子, 逻辑型, , 安装一个鼠标钩子,可同时安装多个钩子指针,后加入的指针具有优先权(成功返回真,失败返回假)
.参数 回调指针, 子程序指针, , 回调钩子子程序指针,子程序只一个参数为鼠标标识(事件常量).返回真:吃掉消息.返回假:放行消息



.子程序 卸载鼠标钩子, 空白型, , 卸载已安装的鼠标钩子集 (本命令会在类变量销毁时自动被调用)


.子程序 注册全局事件, 逻辑型, , 安装一个全局事件钩子(成功返回真,失败返回假)
.参数 事件指针, 子程序指针, , 响应事件的子程序(该子程序应含有三个参数[窗口句柄,未知,键代码]或[窗口句柄,横坐标,纵坐标])
.参数 事件类型, 整数型, , 



.子程序 撤消全局事件, 逻辑型, , 可以撤消已经注册的指定事件,或全部事件 (本命令会在类变量销毁时自动被调用)
.参数 事件类型, 整数型, 可空, 欲撤消事件的类型,可空则撤消全部事件



.子程序 等待按键, 整数型, , 暂停当前程序线程,按任意键后继续,返回被按下的键码


.子程序 等待鼠标, 整数型, , 暂停当前程序线程,按任意鼠标键后继续,返回被按下的鼠标键


.子程序 按键, 空白型, , 通过回放钩子模拟按键(无返回值)
.参数 键代码, 整数型, , 
.参数 状态, 整数型, 可空, 可空:按键(按下+放开)   3 #按下   4 #放开



.子程序 鼠标移动, 空白型, , 通过回放钩子模拟鼠标移动(无返回值)
.参数 窗口句柄, 整数型, 可空, 可空:相对桌面移动鼠标  句柄有效则相对窗口中坐标移动
.参数 水平坐标, 整数型, , 
.参数 垂直坐标, 整数型, , 



.子程序 鼠标键, 空白型, , 通过回放钩子模拟鼠标按键(无返回值)
.参数 键, 整数型, 可空, 可空:为左键  1 #左键   2 #右键   3 #中键  4 #中键上滚动 5 #中键下滚动(滚动前后请按下放开中键)
.参数 控制, 整数型, 可空, 可空:为单击  1 #单击   2 #双击   3 #按下  4 #放开



.子程序 回放鼠键, 空白型, , 通过回放钩子模拟鼠标键盘操作(该命令为高级命令)
.参数 hwnd, 整数型, , 句柄
.参数 message, 整数型, , 消息值
.参数 paramL, 整数型, , 参数一
.参数 paramH, 整数型, , 参数二



.子程序 安装记录钩子, 整数型, , 安装一个记录鼠标键盘事件的钩子,返回钩子ID(该命令为高级命令)
.参数 回调指针, 子程序指针, , 接收记录鼠键事件的回调函数指针,回调指针(hwnd,message,paramL,paramH),返回0:放行,返回1:拦截,返回键代码:换键



.类模块 DLL类, , , 

.子程序 调用库函数, 整数型, , 动态调用DLL中的函数命令,支持传址参数,返回函数的返回值(变量地址)
.参数 库函数地址, 整数型, , 欲调用函数的地址,通过"取库函数地址"获得
.参数 参数, 整数型, 可空 数组, 整数型数组中参数1为成员1…类推;文本型和字节集型(自定义结构)以及传址参数均为指针 (指针与数据类型的转换可使用"指针类"命令)



.子程序 调用库函数2, 整数型, , 动态调用DLL中的函数命令,返回函数的返回值(变量地址)
.参数 库函数地址, 整数型, , 欲调用函数的地址,通过"取库函数地址"获得
.参数 参数一, 整数型, 可空, DLL命令的参数或指针地址
.参数 参数二, 整数型, 可空, 
.参数 参数三, 整数型, 可空, 
.参数 参数四, 整数型, 可空, 
.参数 参数五, 整数型, 可空, 
.参数 参数六, 整数型, 可空, 
.参数 参数七, 整数型, 可空, 
.参数 参数八, 整数型, 可空, 
.参数 参数九, 整数型, 可空, 



.子程序 取库函数序号, 整数型, , 取出指定DLL动态链接库中某个函数的序号,失败返回0
.参数 库文件名, 文本型, , Dll命令所在动态链接库的文件名
.参数 库函数名, 文本型, , Dll命令在其所在动态链接库中的名称



.子程序 取库函数数目, 整数型, , 取出指定DLL动态链接库中公开函数的数目,失败返回0
.参数 库文件名, 文本型, , Dll命令所在动态链接库的文件名



.子程序 取库函数地址, 整数型, , 取DLL动态链接库中某个函数的地址,动态链接库将被自动加载到当前进程中(成功返回函数地址,失败返回0)
.参数 库文件名, 文本型, 可空, Dll命令所在动态链接库的文件名 (如果留空,则默认在Kernel32.dll,Gdi32.dll,User32.dll,Mpr.dll,Advapi32.dll,Shell32.dll等Windows系统的基本应用程序界面函数(API)库中搜寻指定命令)
.参数 库函数名, 文本型, , Dll命令在其所在动态链接库中的名称



.子程序 取库函数地址2, 整数型, , 取DLL动态链接库中某个函数的地址,动态链接库将被自动加载当前进程中(成功返回函数地址,失败返回0)
.参数 库文件名, 文本型, , Dll命令所在动态链接库的文件名
.参数 库函数序号, 整数型, , Dll命令在其所在动态链接库中的序号



.子程序 卸载库, 逻辑型, , 卸载当前进程中已经装载的DLL动态链接库(成功返回真,失败返回假)
.参数 库文件名, 文本型, , 欲卸载的动态链接库的文件名



.子程序 搜索库函数, 文本型, , 在所有DLL中搜索库函数(返回库函数所在DLL的文件名,失败返回空)
.参数 库函数名, 文本型, , Dll命令在其所在动态链接库中的名称



.类模块 易语言类, , , 

.子程序 取安装目录, 文本型, , 取易语言安装文件目录.未安装易语言返回空


.子程序 取支持库目录, 文本型, , 取出指定易语言进程所调用的支持库文件所在目录,失败返回空
.参数 进程ID, 整数型, 可空, 默认为自进程ID



.子程序 取所有易进程, 整数型, , 取出当前进程列表中由易语言编写的程序进程(返回易语言进程数,无易语言进程返回0)
.参数 易进程列表, 文本型, 数组, 返回易语言所编写的程序的进程名



.子程序 是否易进程, 逻辑型, , 判断指定进程是否为易语言所编写的程序进程(如果是则返回真,不是返回假)
.参数 进程ID, 整数型, , 欲检测的程序进程
.参数 核心库路径, 文本型, 可空, 返回进程调用的核心支持库所在路径



.子程序 是否易模块, 逻辑型, , 判断指定文件是否为易语言模块(是易语言模块返回真,不是返回假)
.参数 模块文件, 文本型, , 易模块文件路径



.子程序 取易模块信息, 逻辑型, , 取出易语言模块或源代码文件的版权信息(成功返回真,失败返回假)
.参数 文件名, 文本型, , 易代码或易模块
.参数 易模块信息, 易模块信息, 可空, 返回的易语言模块版权信息



.子程序 置支持库目录, 逻辑型, , 把易语言支持库与在的路径写入注册表,让DLL可以去调用(成功返回真,失败返回假)
.参数 目录, 文本型, 可空, 默认为当前所调用的支持库所在目录



.类模块 位图操作类, , , 

.子程序 载入位图, 整数型, , 从位图字节集载入位图数据(成功返回位图句柄,失败返回0)
.参数 位图数据, 字节集, , 



.子程序 载入数据, 整数型, , 从bmp文件载入位图数据(成功返回位图句柄,失败返回0)
.参数 文件名, 文本型, , 位图文件路径



.子程序 创建位图, 整数型, , 根据指定窗口的设备环境创建出一个位图(返回位图句柄,失败返回0)
.参数 窗口句柄, 整数型, 可空, 欲创建位图所在窗口的句柄  默认为屏幕
.参数 位深度, 整数型, 可空, 默认当前环境下的位深度(16,24,32等)



.子程序 创建空白位图, 整数型, , 在内存中创建一个空白位图(返回位图句柄,失败返回0)
.参数 宽度, 整数型, , 
.参数 高度, 整数型, , 



.子程序 取位图数据, 字节集, , 取得该位图的二进制数据,数据格式为BMP文件格式(成功返回位图字节集数据,失败返回空字节集)
.参数 位图句柄, 整数型, , 欲取位图数据的位图句柄



.子程序 转换位深度, 整数型, , 将指定位图位深度转换到指定位深度(返回转换后新位图句柄,失败返回0)
.参数 位图句柄, 整数型, , 欲转换位图数据的位图句柄
.参数 位深度, 整数型, , 转换后的位图深度(16,24,32)



.子程序 复制到, 逻辑型, , 将指定位图复制到另一个位图场景中(成功返回真,失败返回假)
.参数 源_位图句柄, 整数型, , 
.参数 目标_位图句柄, 整数型, 参考, 复制到的目的位图,如果目的位图不存在则会自动创建
.参数 左边, 整数型, 可空, 默认为0 复制源位图区域的左边
.参数 顶边, 整数型, 可空, 默认为0 复制源位图区域的顶边
.参数 宽度, 整数型, 可空, 默认为源位图最大有效宽度 复制源位图的宽度
.参数 高度, 整数型, 可空, 默认为源位图最大有效高度 复制源位图的高度
.参数 目标左边, 整数型, 可空, 默认为0 复制到目标位图的横坐标
.参数 目标顶边, 整数型, 可空, 默认为0 复制到目标位图的纵坐标



.子程序 置窗口, 逻辑型, , 将位图画入指定窗口中(成功返回真,失败返回假)
.参数 位图句柄, 整数型, , 欲画入位图句柄
.参数 窗口句柄, 整数型, , 



.子程序 置剪辑板位图, 逻辑型, , 将指定位图存放到当前Windows系统剪辑板中,剪辑板中的原有内容被覆盖(成功返回真,失败返回假)
.参数 位图句柄, 整数型, , 准备置入剪辑板位图的句柄



.子程序 取剪辑板位图, 整数型, , 取得剪辑板中位图(返回位图句柄,剪辑板中没有位图返回0)


.子程序 取位深度, 整数型, , 取得该位图中颜色的位深度(返回位深度,无效位图返回0)
.参数 位图句柄, 整数型, , 



.子程序 取宽度, 整数型, , 取得该位图的宽度(返回位深度,无效位图返回0)
.参数 位图句柄, 整数型, , 



.子程序 取高度, 整数型, , 取得该位图的深度(返回位深度,无效位图返回0)
.参数 位图句柄, 整数型, , 



.子程序 取某点颜色, 整数型, , 取得位图中某点颜色值(成功返回十进制颜色值,失败返回-1)
.参数 位图句柄, 整数型, , 欲取颜色的位图句柄
.参数 横坐标, 整数型, , 
.参数 纵坐标, 整数型, , 



.子程序 置某点颜色, 逻辑型, , 设置位图中某点颜色值(成功返回真,失败返回假)
.参数 位图句柄, 整数型, , 欲取颜色的位图句柄
.参数 横坐标, 整数型, , 
.参数 纵坐标, 整数型, , 
.参数 颜色值, 整数型, , 十进制RGB颜色值



.子程序 释放位图, 空白型, , DeleteObject
.参数 位图句柄, 整数型, , 



.类模块 加密解密类, , , 

.子程序 取数据摘要, 文本型, , 支持的种类有：sha1,md2,crc32,md4,md5
.参数 要取数据摘要的数据, 字节集, , 
.参数 类型, 整数型, 可空, 默认为5 md5  4 md4  3 crc32  2 md2  1 sha1



.子程序 crc32, 文本型, , 返回结果为16进制文本
.参数 原文, 字节集, , 要取CRC32数据字节集
.参数 是否为小写, 逻辑型, 可空, 默认为大写，为真小写。



.子程序 rc4, 字节集, , 
.参数 原文, 字节集, , 需要加密解密的字节集
.参数 密码, 文本型, , 输入相应的密码



.子程序 md5, 文本型, , 
.参数 原文, 字节集, , 要取数据摘要的字节集
.参数 是否为16位, 逻辑型, 可空, 默认为32位的，真为16位
.参数 是否为小写, 逻辑型, 可空, 默认为大写，真为小写



.子程序 md4, 文本型, , 
.参数 原文, 字节集, , 要取数据摘要的字节集
.参数 是否为16位, 逻辑型, 可空, 默认为32位的，真为16位
.参数 是否为小写, 逻辑型, 可空, 默认为大写，真为小写



.子程序 md2, 文本型, , 
.参数 原文, 字节集, , 要取数据摘要的字节集
.参数 是否为16位, 逻辑型, 可空, 默认为32位的，真为16位
.参数 是否为小写, 逻辑型, 可空, 默认为大写，真为小写



.子程序 sha1, 文本型, , 
.参数 原文, 字节集, , 要取数据摘要的字节集
.参数 是否为小写, 逻辑型, 可空, 默认为大写，真为小写



.类模块 编码转换类, , , 

.子程序 QP编码, 字节集, , 用于Quoted-Printable编码、URL编码
.参数 原文, 字节集, , 要进行编码的字节集
.参数 编码类型, 逻辑型, 可空, 真为URL，假为QP，默认为QP



.子程序 QP解码, 字节集, , 用于Quoted-Printable解码,也可用来解码URL
.参数 原文, 字节集, , 要进行解码的字节集



.子程序 URL编码2, 文本型, , 将URL中的中文进行编码(返回编码后的文本)
.参数 URL, 文本型, , 欲编码的文本



.子程序 URL编码, 文本型, , 将普通文本转换成网址编码(返回编码后的文本)
.参数 原文本, 文本型, , 



.子程序 URL解码, 文本型, , 将URL文本进行解码(返回解码后的文本)
.参数 URL, 文本型, , 欲解码的文本



.子程序 Base64编码, 字节集, , 
.参数 原文, 字节集, , 



.子程序 Base64解码, 字节集, , 
.参数 原文, 字节集, , 



.子程序 Ansi转Unicode, 字节集, , 
.参数 Ansi文本, 文本型, , 



.子程序 Unicode转Ansi, 文本型, , 
.参数 Unicode字节集, 字节集, , 



.子程序 Utf8转Unicode, 字节集, , 
.参数 utf8字节集, 字节集, , 



.子程序 Unicode转Utf8, 字节集, , 
.参数 Unicode字节集, 字节集, , 



.子程序 Ansi转Utf8, 字节集, , 
.参数 ansi文本, 文本型, , 



.子程序 Utf8转Ansi, 文本型, , 
.参数 utf8字节集, 字节集, , 



.子程序 Ansi转USC2, 文本型, , USC2也就是unicode be
.参数 文本, 文本型, , 



.子程序 USC2转Ansi, 文本型, , USC2也就是unicode be
.参数 usc2文本, 文本型, , 



.子程序 GBK简体到GBK繁体, 文本型, , 
.参数 简体文本, 文本型, , 



.子程序 GBK繁体到GBK简体, 文本型, , 
.参数 繁体文本, 文本型, , 



.子程序 BIG5到GBK繁体, 文本型, , 
.参数 待转换文本, 文本型, , 



.子程序 BIG5到GBK简体, 文本型, , 
.参数 待转换文本, 文本型, , 



.子程序 GBK繁体到BIG5, 文本型, , 
.参数 待转换文本, 文本型, , 



.子程序 GBK简体到BIG5, 文本型, , 
.参数 待转换文本, 文本型, , 



.类模块 内存操作类, , , 

.子程序 关闭进程, 逻辑型, , "创建进程"或"打开进程"后,不再需要进行内存等操作时,"关闭进程",该命令会在本类销毁时自动被调用


.子程序 提升权限, 逻辑型, , 提升自进程到调试级权限


.子程序 结束进程, 逻辑型, , 结束已经打开或创建的进程


.子程序 置已有进程, 空白型, , 设置一个已经打开的进程,然后可直接进行本类其它操作,本类原操作句柄会自动释放
.参数 进程句柄, 整数型, , 



.子程序 取操作句柄, 整数型, , 取出已打开的进程句柄


.子程序 打开进程, 逻辑型, , 通过进程ID来打开进程,成功后可直接进行本类其它操作,本类原操作句柄会自动释放
.参数 进程ID, 整数型, 可空, 如果为空则打开当前进程



.子程序 打开窗口进程, 逻辑型, , 通过窗口对象来打开进程,成功后可直接进行本类其它操作,本类原操作句柄会自动释放
.参数 窗口句柄, 整数型, , 



.子程序 创建进程, 逻辑型, , 从文件创建进程,成功后可直接进行本类其它操作,本类原操作句柄会自动释放
.参数 程序目录, 文本型, , 欲创建进程的执行路径
.参数 命令行, 文本型, 可空, 



.子程序 是否有效地址, 逻辑型, , 判断进程中指定内存地址的有效性!(成功返回真,失败返回假)
.参数 地址, 整数型, , 



.子程序 创建内存, 整数型, , 在目标进程中创建内存空间(成功返回内存指针地址,失败返回0)
.参数 数据长度, 整数型, , 分配的数据长度



.子程序 释放内存, 空白型, , 在目标进程中释放内存空间
.参数 地址, 整数型, , 



.子程序 读取, 字节集, , 读取内存中数据(返回字节集,失败返回空字节集)
.参数 地址, 整数型, , 内存指针地址
.参数 长度, 整数型, 可空, 读取的长度,读取文本型可留空,字节型1,短整数型2,整数型4,长整数型8



.子程序 读文本, 文本型, , 从内存中读取文本(返回文本,失败返回空“”)
.参数 内存地址, 整数型, , 



.子程序 读整数, 整数型, , 从内存中读取整数型数据,失败返回-1
.参数 内存地址, 整数型, , 



.子程序 写入, 逻辑型, , 向内存中写入数据
.参数 地址, 整数型, , 内存指针地址
.参数 数据, 字节集, , 欲写入的数据
.参数 长度, 整数型, 可空, 欲写入长度,默认为数据长度



.子程序 写文本, 逻辑型, , 往内存中写入文本(成功返回真,失败返回假)
.参数 地址, 整数型, , 内存地址
.参数 内容, 文本型, , 欲写入的文本



.子程序 写整数, 逻辑型, , 往内存中写入整数(成功返回真,失败返回假)
.参数 地址, 整数型, , 内存地址
.参数 整数, 整数型, , 欲写入的整数



.子程序 搜索, 整数型, , 进行内存搜索(返回结果数目,失败或没有返回0)
.参数 搜索内容, 字节集, , 欲搜索的内容  其他类型-需自行转换为字节集类型
.参数 结果地址, 整数型, 数组, 用来保存搜索的结果
.参数 回调进度, 子程序指针, 可空, 回调进度(进度值%) 如果有返回值返回真则停止搜索



.子程序 再次搜索, 整数型, , 在已经搜索过的情况下进行再一次搜索(返回结果数目,失败或没有返回0)
.参数 搜索内容, 字节集, , 欲搜索的内容  其他类型-需自行转换为字节集类型
.参数 结果地址, 整数型, 数组, 用来保存搜索的结果
.参数 回调进度, 子程序指针, 可空, 回调进度(进度值%) 如果有返回值返回真则停止搜索



.子程序 线程注入, 逻辑型, , 通过创建远程线程方式注入DLL到指定进程中(成功返回真,失败返回假)
.参数 DLL文件名, 文本型, , 欲注入的DLL名称



.类模块 驱动过TX类, , , 

.子程序 InstallDriver, 逻辑型, , 
.参数 cszDriverName, 文本型, , 
.参数 cszDriverFullPath, 文本型, , 



.子程序 CreateDriver, 逻辑型, , 
.参数 cszDriverName, 文本型, , 
.参数 cszDriverFullPath, 文本型, , 



.子程序 StartDriver, 逻辑型, , 
.参数 cszDriverName, 文本型, , 
.参数 cszDriverFullPath, 文本型, , 



.子程序 StopDriver, 逻辑型, , 
.参数 cszDriverName, 文本型, , 
.参数 cszDriverFullPath, 文本型, , 



.子程序 RemoveDriver, 逻辑型, , 没写`
.参数 cszDriverName, 文本型, , 
.参数 cszDriverFullPath, 文本型, , 



.子程序 安装, 逻辑型, , 在游戏运行后调用本命令安装驱动


.子程序 卸载, 逻辑型, , 在使用后程序关闭时需要卸载,否则有蓝屏的危险


.类模块 FTP类, , , 

.子程序 连接, 逻辑型, , 
.参数 FTP服务器地址, 文本型, , 可以是域名或IP
.参数 用户名, 文本型, 可空, 默认为 anonymous
.参数 密码, 文本型, 可空, 
.参数 端口号, 整数型, 可空, 默认为21
.参数 是否使用被动语义, 逻辑型, 可空, 



.子程序 断开, 空白型, , 本类被销毁前会自动调用该命令


.子程序 下载, 逻辑型, , 
.参数 欲下载的FTP文件, 文本型, , 
.参数 本地文件名, 文本型, , 
.参数 是否使用ASCII码方式, 逻辑型, 可空, 



.子程序 上传, 逻辑型, , 
.参数 欲上传的本地文件, 文本型, , 
.参数 FTP文件路径, 文本型, , 
.参数 是否使用ASCII码方式, 逻辑型, 可空, 



.子程序 删除文件, 逻辑型, , 
.参数 欲删除的FTP文件, 文本型, , 



.子程序 改名, 逻辑型, , 
.参数 欲改名的FTP文件, 文本型, , 
.参数 新文件名称, 文本型, , 



.子程序 创建目录, 逻辑型, , 
.参数 欲创建的目录名, 文本型, , 



.子程序 删除目录, 逻辑型, , 
.参数 欲删除的目录名, 文本型, , 



.子程序 置现行目录, 逻辑型, , 
.参数 FTP目录路径, 文本型, , 



.子程序 取现行目录, 文本型, , 


.类模块 拨号类, , , 

.子程序 取拨号连接数量, 整数型, , 取系统中已经建立的连接数量


.子程序 是否有指定连接, 逻辑型, , 如果存在指定的连接名称返回真,反之假
.参数 连接名称, 文本型, , 要查询的连接名称



.子程序 取拨号连接名称, 文本型, , 取出系统中拨号连接的名称,失败返回空文本
.参数 拨号连接索引, 整数型, , 欲取名称的连接索引,该值只能在1至10
.参数 取所有名称, 文本型, 参考 可空 数组, 提供一个动态文本数组,以便储存连接名称,注意:此时将忽略第一参数,并且返回值改变成"连接个数"



.子程序 创建拨号连接, 逻辑型, , 建立一个PPPoE拨号连接
.参数 连接名称, 文本型, , 拨号连接的名称
.参数 用户名, 文本型, 可空, 用于拨号的用户名,留空将不写入连接中
.参数 密码, 文本型, 可空, 用于拨号的密码,如果用户名留空,该值无效
.参数 拨号类型, 整数型, 可空, 1,PPPoE虚拟拨号;2,电话拨号.默认为1



.子程序 设置拨号连接, 逻辑型, , 设置已经存在的连接的用户名或密码
.参数 连接名称, 文本型, , 已建立的拨号连接的名称
.参数 用户名, 文本型, , 用于拨号的用户名,留空将不写入连接中
.参数 密码, 文本型, 可空, 用于拨号的密码



.子程序 开始拨号, 整数型, , 开始拨号并试图建立网络连接,成功返回连接句柄,失败返回0
.参数 连接名称, 文本型, , 已建立的拨号连接的名称
.参数 用户名, 文本型, , 用于拨号的用户名
.参数 密码, 文本型, , 用于拨号的密码
.参数 提示句柄, 整数型, 可空, 提供一个控件句柄用于反馈连接提示,空为不接受状态提示



.子程序 挂断拨号, 逻辑型, , 挂断当前拨号网络连接
.参数 连接句柄, 整数型, , 由开始拨号返回的连接句柄
.参数 连接名称, 文本型, , 



.子程序 删除拨号连接, 空白型, , 
.参数 连接名称, 文本型, , 



.子程序 挂断所有连接, 空白型, , 


.子程序 判断拨号连接状态, 逻辑型, , 
.参数 连接名称, 文本型, , 



.类模块 GDI操作类, , , 

.子程序 取颜色值, 整数型, , 
.参数 R, 整数型, , 
.参数 G, 整数型, , 
.参数 B, 整数型, , 



.子程序 销毁设备, 逻辑型, , 本命令会在类变量销毁时自动被调用


.子程序 初始化, 逻辑型, , 进行GDI操作时必须先初始化设备
.参数 窗口句柄, 整数型, 可空, 获取GDI操作区域窗口句柄 默认为屏幕句柄
.参数 方法, 逻辑型, 可空, 默认为假GetDC 真为GetWindowDC



.子程序 画点, 整数型, , 返回指定点的实际RGB颜色
.参数 X, 整数型, , 
.参数 Y, 整数型, , 
.参数 颜色值, 整数型, , 



.子程序 取点, 整数型, , 返回颜色值
.参数 X, 整数型, , 
.参数 Y, 整数型, , 



.子程序 画弧线, 逻辑型, , 
.参数 区域左边, 整数型, , 
.参数 区域顶边, 整数型, , 
.参数 区域右边, 整数型, , 
.参数 区域底边, 整数型, , 
.参数 开始左边, 整数型, , 
.参数 开始顶边, 整数型, , 
.参数 结束左边, 整数型, , 
.参数 结束顶边, 整数型, , 



.子程序 画填充弧线, 逻辑型, , 
.参数 区域左边, 整数型, , 
.参数 区域顶边, 整数型, , 
.参数 区域右边, 整数型, , 
.参数 区域底边, 整数型, , 
.参数 开始左边, 整数型, , 
.参数 开始顶边, 整数型, , 
.参数 结束左边, 整数型, , 
.参数 结束顶边, 整数型, , 



.子程序 画椭圆, 逻辑型, , 
.参数 左边, 整数型, , 
.参数 顶边, 整数型, , 
.参数 右边, 整数型, , 
.参数 底边, 整数型, , 



.子程序 填充多边形, 逻辑型, , 
.参数 点集合, 坐标型, 数组, 
.参数 数量, 整数型, , 



.子程序 多点连接, 逻辑型, , 
.参数 点集合, 坐标型, 数组, 
.参数 数量, 整数型, , 



.子程序 画矩形, 逻辑型, , 
.参数 左边, 整数型, , 
.参数 顶边, 整数型, , 
.参数 右边, 整数型, , 
.参数 底边, 整数型, , 



.子程序 画带圆角矩形, 逻辑型, , 
.参数 矩形, 矩形坐标, , 
.参数 圆角宽度, 整数型, , 
.参数 圆角高度, 整数型, , 



.子程序 画饼形, 逻辑型, , 
.参数 矩形, 矩形坐标, , 
.参数 弧线起始左边, 整数型, , 
.参数 弧线起始顶边, 整数型, , 
.参数 弧线结束左边, 整数型, , 
.参数 弧线结束顶边, 整数型, , 



.子程序 画桌面壁纸, 整数型, , 


.子程序 画文本, 整数型, , 返回描绘文字的高度
.参数 文本, 文本型, , 
.参数 字节数, 整数型, 可空, 默认为-1
.参数 矩形范围, 矩形坐标, , 
.参数 格式, 长整数型, , 见常量表 画文本_



.子程序 取文字长宽度, 逻辑型, , 
.参数 文本, 文本型, , 
.参数 字节数, 整数型, 可空, 默认为-1
.参数 得到宽度, 整数型, , 
.参数 得到高度, 整数型, , 



.类模块 DES类, , , 标准加密解密

.子程序 加密, 字节集, , 
.参数 字节集数据, 字节集, , 
.参数 密码文本, 文本型, , 



.子程序 解密, 字节集, , 
.参数 字节集数据, 字节集, , 
.参数 密码文本, 文本型, , 



.类模块 驱动操作类, , , 

.子程序 取驱动句柄, 整数型, , 


.子程序 加载, 逻辑型, , 安装一个驱动程序(成功返回真,失败返回假)
.参数 驱动路径, 文本型, , sys驱动程序完整路径
.参数 服务名, 文本型, 可空, 留空则为路径文件名(表示服务名称的字符串,名称中不允许使用"/"或"\"字符)
.参数 显示名, 文本型, 可空, 留空则与服务名相同(表示服务名称的字符串,这个名称是供用户界面程序识别函数时使用的)
.参数 驱动名, 文本型, 可空, 留空则与服务名相同(欲创建的驱动名)



.子程序 加载2, 逻辑型, , 
.参数 驱动路径, 文本型, , sys驱动程序完整路径
.参数 服务名, 文本型, 可空, 留空则为路径文件名(表示服务名称的字符串,名称中不允许使用"/"或"\"字符)
.参数 显示名, 文本型, 可空, 留空则与服务名相同(表示服务名称的字符串,这个名称是供用户界面程序识别函数时使用的)
.参数 驱动名, 文本型, 可空, 留空则与服务名相同(欲创建的驱动名)



.子程序 卸载, 逻辑型, , 卸载驱动并删除服务(成功返回真,失败返回假)本命令会在类销毁时自动被调用
.参数 是否删除服务, 逻辑型, 可空, 



.子程序 通信, 逻辑型, , 操作驱动程序
.参数 驱动控制码, 整数型, , 与驱动程序通信的控制码,十进制
.参数 输入指针, 整数型, 可空, 欲输入数据的指针,可留空
.参数 输入指针长度, 整数型, 可空, 默为0,不指定长度
.参数 输出指针, 整数型, 可空, 欲输出数据的指针,可留空
.参数 输出指针长度, 整数型, 可空, 默为0,不指定长度



.类模块 数据压缩类, , , 

.子程序 压缩, 字节集, , 成功返回压缩后数据,错误返回空字节集
.参数 待压数据, 字节集, , 



.子程序 解压, 字节集, , 成功返回解压后数据,错误返回空字节集
.参数 待解压数据, 字节集, , 



.类模块 RSA类, , , 

.子程序 数字签名, 文本型, , 与易的"数字签名"功能一样,支持到4096位RSA
.参数 待签数据, 字节集, , 待签署字节集数据
.参数 私钥文本, 文本型, , 十六进制数值文本
.参数 公共模数, 文本型, , 十六进制数值文本



.子程序 签名验证, 逻辑型, , 与易的"签名验证"功能一样,支持到4096位RSA
.参数 待验证数据, 字节集, , 待验证被签署字节集
.参数 签署结果文本, 文本型, , 为“数字签名_dtcser”命令所返回的结果
.参数 公钥文本, 文本型, , 十六进制数值文本
.参数 公共模数, 文本型, , 十六进制数值文本



.类模块 进程通信类, , , 

.子程序 取窗口句柄, 整数型, , 本类组件句柄


.子程序 开始监听, 逻辑型, , 建立一个与外界通信的监听机制,用于DLL&窗口&控制台等程序间的相互通信(使用本类功能必须先调用本命令,成功返回真,失败返回假)
.参数 事件, 子程序指针, , 收到消息后自动触发的事件
.参数 消息口, 整数型, , 用于监听数据到达的消息口(正整数标识,不能雷同)



.子程序 停止监听, 逻辑型, , 停止当前监听机制服务(该命令会在本类被销毁时自动被调用)


.子程序 发送数据, 逻辑型, , 向开始监听的类发送数据(成功返回真,失败返回假)
.参数 数据, 字节集, , 欲发送的数据
.参数 消息口, 整数型, 可空, 目标开始监听,用来接收数据的消息口(唯一标识) 如果为空则发送到所有开始监听的类



.子程序 取回数据, 字节集, , 触发事件后,取回接收到的数据


.子程序 取回对方, 整数型, , 触发事件后,取回发送者的消息口,用于回复对方,失败返回0


.子程序 搜索, 整数型, , 搜索外界所有开始监听的类,返回消息口的数目
.参数 消息口, 整数型, 可空 数组, 获取所有开启监听类的消息口数组



.类模块 注册表类, , , 

.子程序 是否存在, 逻辑型, , 判断指定注册项名称(键名)是否存在(存在返回真,否则返回假)
.参数 项名称, 文本型, , 欲判断的项名称
.参数 键名, 文本型, 可空, 欲判断的键名.如果为空则只判断项名称是否存在



.子程序 刷新项, 逻辑型, , 将对项和它的子项作出的改动实际写入磁盘
.参数 项名称, 文本型, , 



.子程序 取文本型, 文本型, , 
.参数 项名称, 文本型, , 
.参数 键名, 文本型, , 



.子程序 取整数型, 整数型, , 
.参数 项名称, 文本型, , 
.参数 键名, 文本型, , 



.子程序 取字节集, 字节集, , 
.参数 项名称, 文本型, , 
.参数 键名, 文本型, , 
.参数 类型, 整数型, 参考 可空, 取出数据的类型



.子程序 写字符串值, 逻辑型, , 
.参数 项名称, 文本型, , 
.参数 键名, 文本型, , 
.参数 写入值, 文本型, , 



.子程序 写多字符串值, 逻辑型, , 
.参数 项名称, 文本型, , 
.参数 键名, 文本型, , 
.参数 写入值, 文本型, , 



.子程序 写可扩充字符串值, 逻辑型, , 
.参数 项名称, 文本型, , 
.参数 键名, 文本型, , 
.参数 写入值, 文本型, , 



.子程序 写二进制值, 逻辑型, , 
.参数 项名称, 文本型, , 
.参数 键名, 文本型, , 
.参数 写入值, 字节集, , 



.子程序 写DWORD值, 逻辑型, , 
.参数 项名称, 文本型, , 
.参数 键名, 文本型, , 
.参数 写入值, 整数型, , 



.子程序 写字节集, 逻辑型, , 
.参数 项名称, 文本型, , 
.参数 键名, 文本型, , 
.参数 写入值, 字节集, , 
.参数 类型, 整数型, 可空, 详见注册表相关资料



.子程序 删除键名, 逻辑型, , 删除指定项下的某个键名
.参数 项名称, 文本型, , 欲删除键名所在的项名称
.参数 键名, 文本型, , 欲删除的键名



.子程序 删除项, 逻辑型, , 删除指定项名称以及它的所有子项与键值
.参数 项名称, 文本型, , 欲删除的项名称,尾部不要加"\"



.子程序 枚举子项, 整数型, , 枚举指定项名称下的子项(成功返回子项目数,失败返回-1)
.参数 项名称, 文本型, , 
.参数 子项, 文本型, 可空 数组, 获取的子项数组



.子程序 枚举键名, 整数型, , 枚举指定项名称下的键名(成功返回键名数,失败返回-1)
.参数 项名称, 文本型, , 
.参数 键名, 文本型, 可空 数组, 获取的键名数组
.参数 键值, 字节集, 可空 数组, 对应键名的键值
.参数 类型, 整数型, 可空 数组, 对应键值的类型



.类模块 加密配置类, , , 如需操作多个配置文件,需创建多个类变量.

.子程序 关闭配置, 空白型, , 关闭本类打开的配置文件(本命令会在类变量销毁时自动被调用)


.子程序 设置密码, 逻辑型, , 为已经打开的配置文件设置一个安全密码,并以新的密码打开(成功返回真)
.参数 新密码, 文本型, , 为空则无密码



.子程序 打开配置文件, 逻辑型, , 打开指定配置文件,如果配置文件不存在则自动创建(成功返回真)
.参数 文件名, 文本型, , 指定配置文件的名称,通常以.ini作为文件名后缀
.参数 密码, 文本型, 可空, 保护配置文件使用的密码,默认为空无密码 (如果密码错误将出现程序假死)



.子程序 打开配置数据, 逻辑型, , 在内存中打开配置文件,不能有密码(成功返回真)
.参数 配置文件数据, 字节集, , 指定配置文件数据(文本内容),可用于存于特殊地方的配置文件数据,如网络,扇区等



.子程序 另存为, 逻辑型, , 将已经打开的配置文件保存到新的文件中(成功返回真)
.参数 文件名, 文本型, , 指定配置文件的名称,通常以.ini作为文件名后缀
.参数 密码, 文本型, 可空, 保护配置文件使用的密码,默认为空无密码



.子程序 枚举节名称, 整数型, , 获取配置文件中所有节名称(返回节名称的数目)
.参数 所有节名称, 文本型, 数组, 存放节名称的数组变量



.子程序 枚举项名称, 整数型, , 获取配置文件中所有项名称(返回项名称的数目)
.参数 节名称, 文本型, , 
.参数 所有项名称, 文本型, 数组, 存放项名称的数组变量



.子程序 读配置项, 文本型, , 读取配置文件中指定项目的文本内容(项目不存在返回默认文本)
.参数 节名称, 文本型, , 
.参数 项名称, 文本型, , 
.参数 默认文本, 文本型, 可空, 如果指定配置项不存在:返回此默认文本,否则返回空文本



.子程序 写配置项, 逻辑型, , 将指定文本内容写入指定配置项中或者删除指定的配置项或节(成功返回真,失败返回假)
.参数 节名称, 文本型, , 
.参数 项名称, 文本型, 可空, 如果参数被省略,则删除本节名称下的所有项名称
.参数 欲写入值, 文本型, 可空, 如果参数被省略,则删除所指定配置项名称 (支持多行文本内容)



.子程序 读配置项_逻辑值, 逻辑型, , 读取配置文件中指定项目的逻辑值(项目不存在返回默认值)
.参数 节名称, 文本型, , 
.参数 项名称, 文本型, , 
.参数 默认值, 逻辑型, 可空, 如果指定配置项不存在:返回此默认值,否则返回假



.子程序 写配置项_逻辑值, 逻辑型, , 将指定逻辑值写入指定配置项中或者删除指定的配置项或节(成功返回真,失败返回假)
.参数 节名称, 文本型, , 
.参数 项名称, 文本型, , 
.参数 欲写入值, 逻辑型, , 



.子程序 读配置项_字节集, 字节集, , 读取配置文件中指定项目的字节集数据(项目不存在返回默认数据)
.参数 节名称, 文本型, , 
.参数 项名称, 文本型, , 
.参数 默认数据, 字节集, 可空, 如果指定配置项不存在:返回此默认数据,否则返回空字节集



.子程序 写配置项_字节集, 逻辑型, , 将指定字节集数据写入指定配置项中或者删除指定的配置项或节(成功返回真,失败返回假)
.参数 节名称, 文本型, , 
.参数 项名称, 文本型, , 
.参数 欲写入数据, 字节集, , 



.子程序 读配置项_数值, 双精度小数型, , 读取配置文件中指定项目的数值(项目不存在返回默认值)
.参数 节名称, 文本型, , 
.参数 项名称, 文本型, , 
.参数 默认值, 双精度小数型, 可空, 如果指定配置项不存在:返回此默认值,否则返回0



.子程序 写配置项_数值, 逻辑型, , 将指定逻辑值写入指定配置项中或者删除指定的配置项或节(成功返回真,失败返回假)
.参数 节名称, 文本型, , 
.参数 项名称, 文本型, , 
.参数 欲写入值, 双精度小数型, , 



.类模块 时间钩子类, , , 消息口 1009983

.子程序 卸载, 空白型, , 卸载timeHOOK (本命令会在类变量销毁时自动被调用)


.子程序 变速, 逻辑型, , 
.参数 变速倍数, 双精度小数型, , 欲改变时间的倍数(原速×变速倍数,必须是正数,1表示原速×1倍) 如果变速倍数为0,则时间停留!
.参数 同步, 逻辑型, 可空, 命令同步,将会引响到系统中所有使用本类的程序



.子程序 安装, 逻辑型, , 安装timeHOOK


.类模块 拖放事件类, , , 

.子程序 注册文件拖放事件, 逻辑型, , 注册一个监视文件拖放的事件(成功返回真,失败返回假)
.参数 窗口句柄, 整数型, , 接收拖放事件的窗口组件句柄
.参数 响应事件, 子程序指针, , 响应事件(位置[整数型],文件名[文本型])



.子程序 撤消文件拖放事件, 逻辑型, , 撤消指定拖放事件(本命令会在类变量销毁时自动被调用)
.参数 窗口句柄, 整数型, 可空, 指定已经注册的窗口句柄,如果为空则撤消本类注册的全部文件拖放事件



.类模块 数据库_连接类, , , 

.子程序 连接, 逻辑型, , 连接到数据源，如果连接成功返回真，失败返回假。
.参数 连接文本, 文本型, , 本参数提供连接时使用的连接文本。



.子程序 连接Access, 逻辑型, , 连接Access数据库，如果连接成功返回真，失败返回假。
.参数 文件名, 文本型, , 本参数提供Access数据库文件的完整路径名。
.参数 密码, 文本型, 可空, 本参数提供Access数据库的访问密码。可以为空，若为空，表示Access数据库没有密码。



.子程序 连接SQLServer, 逻辑型, , 连接SQL Server数据库，如果连接成功返回真，失败返回假。
.参数 服务器名, 文本型, , 
.参数 数据库名, 文本型, , 
.参数 用户名, 文本型, , 
.参数 密码, 文本型, , 



.子程序 关闭, 逻辑型, , 断开当前数据库连接，成功返回真，失败返回假。


.子程序 执行SQL, 逻辑型, , 执行指定的查询、SQL 语句、存储过程等，执行成功返回真，否则返回假。
.参数 SQL语句, 文本型, , 本参数提供要执行的SQL语句。有关SQL语句的具体内容请参看SQL的专业手册。



.子程序 取得权限, 整数型, , 取得访问及相关权限，返回“数据库权限_”开头常量


.子程序 设置权限, 逻辑型, , 设置访问及相关权限，并返回一个逻辑型值，如果设置成功，即返回真，如果设置不成功，即返回假。注意，该方法只能在连接处于关闭状态的时候才可以使用。
.参数 模式, 整数型, , “数据库权限_”开头常量



.子程序 取超时时间, 整数型, , 取得超时时间，以毫秒为单位，1000毫秒为1秒钟。
.参数 类型, 整数型, 可空, 0：连接超时，1：执行命令超时。默认为0。



.子程序 设超时时间, 逻辑型, , 设置超时时间，以毫秒为单位，1000毫秒为1秒钟，若时间超出，会取消相关命令，并弹出信息提示框。
.参数 时间, 整数型, , 本参数指定准备设置的时间（毫秒）。
.参数 类型, 整数型, 可空, 0：连接超时，1：执行命令超时。默认为0。



.子程序 开始事务, 整数型, , 开始新事务，返回一个整数型值，该数值表示当前事务嵌套的层数，譬如如果返回1，则表明为顶层事务。


.子程序 保存事务, 逻辑型, , 保存任何更改并结束当前事务


.子程序 回滚事务, 逻辑型, , 取消当前事务中所作的任何更改并结束事务


.子程序 取最后错误, 文本型, ,  获取最后错误文本。


.子程序 是否已连接, 逻辑型, , 是否已经连接。


.子程序 取对象提供者, 文本型, , 返回对象提供者名称。


.子程序 取引擎版本, 文本型, , 返回数据引擎版本。


.子程序 取连接对象, 对象, , 取回自身的数据库连接对象。


.子程序 置连接对象, 空白型, , 置入数据库连接对象。
.参数 对象, 对象, , 



.类模块 数据库_记录集类, , , 

.子程序 置连接, 逻辑型, , 设置数据库连接。
.参数 数据库连接, 数据库_连接类, , 本参数提供要设置的数据库连接对象。



.子程序 取连接, 数据库_连接类, , 取得数据库连接。


.子程序 打开, 逻辑型, , 打开数据库表，用于具体指定是操作那一个表，返回一个逻辑值，如果打开表成功返回真，否则返回假。必须使用数据库连接组件先进行数据库连接，再用“置连接”方法连接到本对象，最后才能打开表。
.参数 命令文本, 文本型, , 本参数可以提供数据库中的某一个数据表名或SQL语句。
.参数 命令类型, 整数型, 可空, 1、#打开记录_SQL语句； 2、#打开记录_数据表名。默认为1、#打开记录_SQL语句



.子程序 打开并排序, 逻辑型, , 打开数据表，并且以指定条件排序。返回一个逻辑型值，如果排序成功返回真，否则返回假。
.参数 表名, 文本型, , 本参数提供数据库表的名称。
.参数 排序条件, 文本型, , 本参数指定排序条件，ASC为升序，DESC为降序例如让学生姓名字段按照升序排，成绩字段按照降序排，那排序条件可以为 "学生姓名 ASC,成绩 DESC"。



.子程序 打开并过滤, 逻辑型, , 用指定过滤条件打开一个表。
.参数 表名, 文本型, , 数据库表名。
.参数 过滤条件, 文本型, , 过滤的条件，例如："文本字段 = 'abc' and 整数字段 > 1"。



.子程序 关闭, 逻辑型, , 关闭当前打开的数据库表，打开一个数据表并使用后必须进行关闭操作。


.子程序 添加, 逻辑型, , 添加一个新的空记录，返回一个逻辑值。如果添加成功返回真，否则返回假。


.子程序 更新, 逻辑型, , 更新记录，刷新显示，返回一个逻辑值。如果更新成功返回真，否则返回假。


.子程序 删除, 逻辑型, , 删除记录，返回一个逻辑值。如果删除成功返回真，否则返回假，选项可为删除当前记录，或全部记录。
.参数 删除选项, 整数型, , 1、#记录删除_当前；3、#记录删除_全部。



.子程序 写文本, 逻辑型, , 通过序号或字段名写入文本。返回一个逻辑型值，如果写成功返回真，否则返回假。
.参数 字段名, 文本型, 可空, 字段名和序号两者选其一。
.参数 序号, 整数型, 可空, 字段名和序号两者选其一。
.参数 文本, 文本型, , 本参数提供所要写入的文本。



.子程序 写双精度, 逻辑型, , 通过序号或字段名写入双精度值。返回一个逻辑型值，如果写成功返回真，否则返回假。
.参数 字段名, 文本型, 可空, 字段名和序号两者选其一。
.参数 序号, 整数型, 可空, 字段名和序号两者选其一。
.参数 双精度, 双精度小数型, , 本参数提供要写入的双精度小数值。



.子程序 写单精度, 逻辑型, , 通过序号或字段名写入单精度值。返回一个逻辑型值，如果写成功返回真，否则返回假。
.参数 字段名, 文本型, 可空, 字段名和序号两者选其一。
.参数 序号, 整数型, 可空, 字段名和序号两者选其一。
.参数 单精度, 小数型, , 本参数提供要写入的单精度小数值。



.子程序 写整数, 逻辑型, , 通过序号或字段名写入整型值。返回一个逻辑型值，如果写成功返回真，否则返回假。
.参数 字段名, 文本型, 可空, 字段名和序号两者选其一。
.参数 序号, 整数型, 可空, 字段名和序号两者选其一。
.参数 整数, 整数型, , 本参数提供要写入的整数值。



.子程序 写逻辑值, 逻辑型, , 通过序号或字段名写入逻辑值。返回一个逻辑型值，如果写成功返回真，否则返回假。
.参数 字段名, 文本型, 可空, 字段名和序号两者选其一。
.参数 序号, 整数型, 可空, 字段名和序号两者选其一。
.参数 逻辑值, 逻辑型, , 本参数提供要写入的逻辑值。



.子程序 写日期时间, 逻辑型, , 通过序号或字段名写入日期型数据。返回一个逻辑型值，如果写成功返回真，否则返回假。
.参数 字段名, 文本型, 可空, 字段名和序号两者选其一。
.参数 序号, 整数型, 可空, 字段名和序号两者选其一。
.参数 日期时间, 日期时间型, , 本参数提供要写入的日期型数据。



.子程序 写字节集, 逻辑型, , 通过序号或字段名写入字节集数据到变量中。返回一个逻辑型值，如果读成功返回真，否则返回假。
.参数 字段名, 文本型, 可空, 字段名和序号两者选其一。
.参数 序号, 整数型, 可空, 字段名和序号两者选其一。
.参数 字节集, 字节集, , 本参数提供要写入的字节集数据。



.子程序 读文本, 文本型, , 通过序号或字段名读取文本数据。
.参数 字段名, 文本型, 可空, 字段名和序号两者选其一。
.参数 序号, 整数型, 可空, 字段名和序号两者选其一。



.子程序 读双精度, 双精度小数型, , 通过序号或字段名读取双精度数据。
.参数 字段名, 文本型, 可空, 字段名和序号两者选其一。
.参数 序号, 整数型, 可空, 字段名和序号两者选其一。



.子程序 读单精度, 小数型, , 通过序号或字段名读取单精度数据。
.参数 字段名, 文本型, 可空, 字段名和序号两者选其一。
.参数 序号, 整数型, 可空, 字段名和序号两者选其一。



.子程序 读整数, 整数型, , 通过序号或字段名读取整型数据。
.参数 字段名, 文本型, 可空, 字段名和序号两者选其一。
.参数 序号, 整数型, 可空, 字段名和序号两者选其一。



.子程序 读逻辑值, 逻辑型, , 通过序号或字段名读取逻辑型数据。
.参数 字段名, 文本型, 可空, 字段名和序号两者选其一。
.参数 序号, 整数型, 可空, 字段名和序号两者选其一。



.子程序 读日期时间, 日期时间型, , 通过序号或字段名读取日期数据。
.参数 字段名, 文本型, 可空, 字段名和序号两者选其一。
.参数 序号, 整数型, 可空, 字段名和序号两者选其一。



.子程序 读字节集, 字节集, , 通过序号或字段名读取字节集数据
.参数 字段名, 文本型, 可空, 字段名和序号两者选其一。
.参数 序号, 整数型, 可空, 字段名和序号两者选其一。



.子程序 保存到XML, 逻辑型, , 将数据库表保存到XML文本文件，以作为交换通用数据表
.参数 XML文件名, 文本型, , 本参数提供要写出到的XML文件名。



.子程序 保存到ADTG, 逻辑型, , 将数据库表用专用的"Advanced Data Tablegram"格式保存
.参数 ADTG文件名, 文本型, , 本参数提供要写出到的ADTG文件名。



.子程序 到首记录, 逻辑型, , 移动到表的第一条记录，返回一个逻辑值，如果移动成功返回真，否则返回假。操作本命令之前要确保数据库及表打开。


.子程序 到尾记录, 逻辑型, , 移动到表的最后一条记录，返回一个逻辑值，如果移动成功返回真，否则返回假。操作本命令之前要确保数据库及表打开。


.子程序 到下一条, 逻辑型, , 移动到下一条记录，返回一个逻辑值，如果移动成功返回真，否则返回假。操作本命令之前要确保数据库及表打开。


.子程序 到前一条, 逻辑型, , 移动到前一条记录，返回一个逻辑值，如果移动成功返回真，否则返回假。操作本命令之前要确保数据库及表打开。


.子程序 移到, 逻辑型, , 移到指定记录。
.参数 目标记录号, 整数型, , 本参数提供目标记录号值，该值从 0 开始



.子程序 取字段名, 文本型, , 取得指定序号字段的名称，返回一个文本型值，为字段名称文本。
.参数 字段序号, 整数型, , 本参数提供当前表中指定字段的序号值，从 0 开始。



.子程序 取字段属性, 整数型, , 通过序号或字段名取得字段属性，返回一个整数值。为以下常量“字段属性_”开头常量之一或之和
.参数 字段名, 文本型, 可空, 字段名和序号两者选其一。
.参数 序号, 整数型, 可空, 字段名和序号两者选其一。



.子程序 取字段定义长度, 整数型, , 通过序号或字段名取得字段定义长度，本命令返回一个整数值。
.参数 字段名, 文本型, 可空, 字段名和序号两者选其一。
.参数 序号, 整数型, 可空, 字段名和序号两者选其一。



.子程序 取字段实际长度, 整数型, , 通过序号或字段名取得字段实际长度，返回一个整数型值。
.参数 字段名, 文本型, 可空, 字段名和序号两者选其一。
.参数 序号, 整数型, 可空, 字段名和序号两者选其一。



.子程序 取字段类型, 整数型, , 通过序号或字段名取得字段类型，返回以“字段类型_”开头常量。
.参数 字段名, 文本型, 可空, 字段名和序号两者选其一。
.参数 序号, 整数型, 可空, 字段名和序号两者选其一。



.子程序 字段是否为空, 逻辑型, , 判断指定字段是否为空。返回一个逻辑型值，如果为空即为真，否则为假。
.参数 字段名, 文本型, 可空, 字段名和序号两者选其一。
.参数 序号, 整数型, 可空, 字段名和序号两者选其一。



.子程序 查找, 逻辑型, , 查找满足条件的记录，返回一个逻辑型值，如果找到记录即返回真，并停留在满足条件的记录上，否则返回假。找到第一个满足条件的记录后，以后可以用"查找下一个"方法继续进行查找。
.参数 查找条件, 文本型, , 本参数提供在数据表中查找的条件。
.参数 查找方向, 整数型, , 本参数指定在数据表中查找的方向。可以为以下数值或常量之一：1、查找方向_正向搜索； -1、查找方向_反向搜索。



.子程序 查找下一个, 逻辑型, , 查找下一个满足条件的记录。此命令用于"查找"命令之后使用，可继续按查找命令找到下一个满足条件的记录。返回一个逻辑型值，如果找到返回真，否则返回假。


.子程序 过滤记录, 逻辑型, , 过滤出满足条件的记录，返回一个逻辑型值，如果过滤成功返回真，否则返回假。注意：在不使用过滤的时候，一定要再次调用本函数并将过滤条件指定为空文本。
.参数 过滤条件, 文本型, , 本参数提供过滤的条件。



.子程序 是否已打开, 逻辑型, , 判断是否已经打开。


.子程序 取操作状态, 整数型, , 取得当前操作状态，更新成功。


.子程序 取记录数量, 整数型, , 取得记录的数量。如果为-1，表示ADO当前无法判断记录的数量，或者数据提供者不支持这个属性。


.子程序 取字段数量, 整数型, , 取得字段的数量。


.子程序 首记录前, 逻辑型, , 判断当前记录指针是否已在首记录前。


.子程序 尾记录后, 逻辑型, , 判断当前记录指针是否已在记录尾后。


.子程序 取当前位置, 整数型, , 当前记录在记录集中的位置，0为第一条记录。如果为-1表示位置未知（多数由于数据提供者 (Provider)不支持IRowsetScroll接口），如为-3表示处于文件开头，如为-4表示文件结尾。


.类模块 新位图操作类, , , 

.子程序 从数据创建, 逻辑型, , 从位图字节集载入位图数据创建位图(成功返回真,失败返回假,本类原有位图将自动被释放)
.参数 位图文件数据, 字节集, , 



.子程序 从文件创建, 逻辑型, , 从bmp文件载入位图数据创建位图(成功返回真,失败返回假,本类原有位图将自动被释放)
.参数 文件名, 文本型, , 位图文件路径



.子程序 从屏幕创建, 逻辑型, , 从屏幕创建位图,抓取屏幕画面(成功返回真,失败返回假,本类原有位图将自动被释放)
.参数 左边, 整数型, 可空, 抓取的屏幕区域左边  默认为0
.参数 顶边, 整数型, 可空, 抓取的屏幕区域顶边  默认为0
.参数 宽度, 整数型, 可空, 创建位图的宽度  默认为屏幕宽度-左边
.参数 高度, 整数型, 可空, 创建位图的高度  默认为屏幕高度-顶边
.参数 位深度, 整数型, 可空, 位深度:  1, 4, 8, 16, 24, 32  默认为当前屏幕色深



.子程序 从窗口创建, 逻辑型, , 从窗口创建位图,获取窗口客户区画面(成功返回真,失败返回假,本类原有位图将自动被释放)
.参数 窗口句柄, 整数型, , 欲获取窗口位图的窗口句柄,必须保证窗口可视性,且不能是最小化窗口
.参数 左边, 整数型, 可空, 抓取的窗口客户区域左边  默认为0
.参数 顶边, 整数型, 可空, 抓取的窗口客户区域顶边  默认为0
.参数 宽度, 整数型, 可空, 创建位图的宽度  默认为窗口客户区域的宽度-左边
.参数 高度, 整数型, 可空, 创建位图的高度  默认为窗口客户区域的高度-顶边
.参数 位深度, 整数型, 可空, 位深度:  1, 4, 8, 16, 24, 32  默认为24位



.子程序 从场景创建, 逻辑型, , 从DC场景创建位图,复制DC上的内容到DIB获取场景中画面(成功返回真,失败返回假,本类原有位图将自动被释放)
.参数 DC场景句柄, 整数型, , 已经的DC场景
.参数 区域, 矩形坐标, , 欲获取场景的区域范围
.参数 位深度, 整数型, , 位深度:  1, 4, 8, 16, 24, 32



.子程序 从剪辑板创建, 逻辑型, , 取得剪辑板中位图(成功返回真,剪辑板中没有位图或失败返回假,本类原有位图将自动被释放)
.参数 位深度, 整数型, 可空, 位深度:  1, 4, 8, 16, 24, 32  默认为系统色深



.子程序 从位图句柄创建, 逻辑型, , 通过已有的位图句柄创建新的位图存于本类中(成功返回真,失败返回假,本类原有位图将自动被释放)
.参数 已知的位图句柄, 整数型, , 已经获得的位图句柄,该句柄需另外删除!
.参数 位深度, 整数型, 可空, 位深度:  1, 4, 8, 16, 24, 32  默认为原来的位深度



.子程序 从图标句柄创建, 逻辑型, , 通过文件图标句柄创建图标位图(成功返回真,失败返回假,本类原有位图将自动被释放)
.参数 图标句柄, 整数型, , 文件图标句柄
.参数 图标宽度, 整数型, 可空, 默认为32
.参数 图标高度, 整数型, 可空, 默认为32
.参数 位深度, 整数型, 可空, 位深度:  1, 4, 8, 16, 24, 32  默认为32位



.子程序 创建空白位图, 逻辑型, , 创建一幅指定大小与位深度的空白位图(成功返回真,失败返回假,本类原有位图将自动被释放)
.参数 宽度, 整数型, , 
.参数 高度, 整数型, , 
.参数 位深度, 整数型, , 位深度:  1, 4, 8, 16, 24, 32



.子程序 更新位图, 空白型, , 强制立即更新位图中所作的操作(通常不使用)


.子程序 转换位深度, 逻辑型, , 转换当前类中位图的位深度(成功返回真,失败返回假)
.参数 新的位深度, 整数型, , 位深度:  1, 4, 8, 16, 24, 32



.子程序 复制到, 逻辑型, , 将当前类中位图复制到目标位图类中(成功返回真,失败返回假)
.参数 目标位图, 新位图操作类, 参考, 复制到的目标位图
.参数 左边, 整数型, 可空, 复制源位图区域的左边 默认为0
.参数 顶边, 整数型, 可空, 复制源位图区域的顶边 默认为0
.参数 宽度, 整数型, 可空, 复制源位图的宽度 默认为源位图最大有效宽度
.参数 高度, 整数型, 可空, 复制源位图的高度 默认为源位图最大有效高度
.参数 目标左边, 整数型, 可空, 复制到目标位图的横坐标 默认为0
.参数 目标顶边, 整数型, 可空, 复制到目标位图的纵坐标 默认为0



.子程序 取位图句柄, 整数型, , 取得当前类中位图的位图句柄(返回位图句柄,本类中没有位图返回0)


.子程序 取场景句柄, 整数型, , 取得当前类中位图所在DC场景句柄(返回场景句柄,本类中没有位图返回0)


.子程序 取宽度, 整数型, , (数据方式)取位图宽度,失败返回0


.子程序 取高度, 整数型, , (数据方式)取位图高度,失败返回0


.子程序 取位深度, 整数型, , (数据方式)取位图颜色位数,失败返回0


.子程序 取宽度2, 整数型, , (函数方式)取位图宽度,失败返回0


.子程序 取高度2, 整数型, , (函数方式)取位图高度,失败返回0


.子程序 取位深度2, 整数型, , (函数方式)取位图颜色位数,失败返回0


.子程序 取指针, 整数型, , 取位图数据BITMAPINFO指针,失败返回0


.子程序 取颜色点阵地址, 整数型, , 取颜色点阵地址,失败返回0


.子程序 取颜色点阵大小, 整数型, , 取颜色点阵大小,失败返回0


.子程序 取颜色表指针, 整数型, , 取颜色表指针,失败返回0,大于256色的位图不使用颜色表


.子程序 取颜色表大小, 整数型, , 取颜色表大小,失败返回0


.子程序 取行字节数, 整数型, , 取得位图颜色数据一行的字节数


.子程序 取出位图数据, 字节集, , 返回位图文件数据(写到文件后就是.BMP图片)


.子程序 取出颜色数据, 字节集, , 不含文件头的颜色部分的数据


.子程序 取某点颜色, 整数型, , 取得位图中某点颜色值(成功返回十进制颜色值,失败返回-1)
.参数 横坐标, 整数型, , 
.参数 纵坐标, 整数型, , 



.子程序 置某点颜色, 逻辑型, , 设置位图中某点颜色值(成功返回真,失败返回假)
.参数 横坐标, 整数型, , 
.参数 纵坐标, 整数型, , 
.参数 颜色值, 整数型, , 十进制RGB颜色值



.子程序 置剪辑板位图, 逻辑型, , 将指定位图存放到当前Windows系统剪辑板中,剪辑板中的原有内容被覆盖(成功返回真,失败返回假)


.子程序 置窗口位图, 逻辑型, , 将位图画入指定窗口中(成功返回真,失败返回假)
.参数 窗口句柄, 整数型, , 



.类模块 线程注入类, , , 本类命令用于让目标进程去执行某函数命令,实现跨进程函数调用!

.子程序 打开进程, 整数型, , 通过进程ID来打开进程(成功返回进程句柄,失败返回0) 进程句柄不需要再使用时一定要用"_关闭对象"命令关闭该句柄
.参数 进程ID, 整数型, 可空, 如果为空则打开自身进程



.子程序 装载模块, 逻辑型, , 在目标进程中装载DLL动态链接库模块(成功返回真,失败返回假)
.参数 进程句柄, 整数型, , 目标进程句柄,通过打开进程获得
.参数 文件名, 文本型, , 欲装载到目标进程中的DLL动态链接库的文件名



.子程序 卸载模块, 逻辑型, , 在目标进程中卸载DLL动态链接库模块(成功返回真,失败返回假)
.参数 进程句柄, 整数型, , 目标进程句柄,通过打开进程获得
.参数 文件名, 文本型, , 目标进程中装载的DLL动态链接库的文件名



.子程序 调用函数, 整数型, , 在目标进程中调用库函数命令,如果目标进程未装载该DLL动态链接库模块则会自动装载(成功返回库命令的返回值,失败返回0)
.参数 进程句柄, 整数型, , 目标进程句柄,通过打开进程获得
.参数 文件名, 文本型, , 已装载到目标进程中的DLL动态链接库的文件名
.参数 函数名, 文本型, , DLL命令所在动态链接库中的名称
.参数 参数一, 字节集, 可空, DLL命令参数,使用命令"到字节集()"转换,非整数参数则不能为4字节!
.参数 参数二, 字节集, 可空, 
.参数 参数三, 字节集, 可空, 
.参数 参数四, 字节集, 可空, 
.参数 参数五, 字节集, 可空, 
.参数 参数六, 字节集, 可空, 
.参数 参数七, 字节集, 可空, 
.参数 参数八, 字节集, 可空, 
.参数 参数九, 字节集, 可空, 
.参数 立即返回, 逻辑型, 可空, 真:函数执行就立即返回,失败返回0  默认为假:等函数执行完成后返回并返回函数的返回值



.子程序 _装载模块, 整数型, , 在目标进程中调用"GetModuleHandleA"函数取已装载的DLL动态链接库的模块句柄,如果未装载该模块则会调用"LoadLibraryA"函数装载(成功返回模块句柄,失败返回0)
.参数 进程句柄, 整数型, , 目标进程句柄,通过打开进程获得
.参数 文件名, 文本型, , 欲装载到目标进程中的DLL动态链接库的文件名



.子程序 _取函数地址, 整数型, , 在目标进程中调用"GetProcAddress"函数取出已装载的DLL动态链接库的某个库函数的地址(成功返回函数地址,失败返回0)
.参数 进程句柄, 整数型, , 目标进程句柄,通过打开进程获得
.参数 模块句柄, 整数型, , 已经装载到目标进程中的DLL动态链接库的模块句柄,使用"_装载模块"命令获得
.参数 函数名, 文本型, , 



.子程序 _卸载模块, 整数型, , 在目标进程中调用"FreeLibrary"函数卸载已经装载的DLL动态链接库(成功返回该函数的返回值,失败返回0)
.参数 进程句柄, 整数型, , 目标进程句柄,通过打开进程获得
.参数 模块句柄, 整数型, , 目标进程中装载的DLL动态链接库的模块句柄,使用"_装载模块"命令获得



.子程序 _调用子程序, 整数型, , 在目标进程中调用某个已知的子程序(成功返回子程序的返回值,失败返回0)
.参数 进程句柄, 整数型, , 目标进程句柄,通过打开进程获得
.参数 子程序指针, 整数型, , 目标进程中存在的子程序的地址,必须保证该地址的有效性!
.参数 参数一, 字节集, 可空, 子程序的参数,使用命令"到字节集()"转换,非整数参数则不能为4字节!
.参数 参数二, 字节集, 可空, 
.参数 参数三, 字节集, 可空, 
.参数 参数四, 字节集, 可空, 
.参数 参数五, 字节集, 可空, 
.参数 参数六, 字节集, 可空, 
.参数 参数七, 字节集, 可空, 
.参数 参数八, 字节集, 可空, 
.参数 参数九, 字节集, 可空, 
.参数 立即返回, 逻辑型, 可空, 真:函数执行就立即返回,失败返回0  默认为假:等函数执行完成后返回并返回函数的返回值



.子程序 _调用API函数, 整数型, , 在目标进程中调用标准API函数命令(成功返回函数命令的返回值,失败返回0)
.参数 进程句柄, 整数型, , 目标进程句柄,通过打开进程获得
.参数 文件名, 文本型, , 已装载到目标进程中的DLL动态链接库的文件名
.参数 函数名, 文本型, , DLL命令所在动态链接库中的名称
.参数 参数一, 字节集, 可空, DLL命令参数,使用命令"到字节集()"转换,非整数参数则不能为4字节!
.参数 参数二, 字节集, 可空, 
.参数 参数三, 字节集, 可空, 
.参数 参数四, 字节集, 可空, 
.参数 参数五, 字节集, 可空, 
.参数 参数六, 字节集, 可空, 
.参数 参数七, 字节集, 可空, 
.参数 参数八, 字节集, 可空, 
.参数 参数九, 字节集, 可空, 
.参数 立即返回, 逻辑型, 可空, 真:函数执行就立即返回,失败返回0  默认为假:等函数执行完成后返回并返回函数的返回值



.子程序 _调用API函数_整数, 整数型, , 在目标进程中调用标准API函数命令(成功返回函数命令的返回值,失败返回0)
.参数 进程句柄, 整数型, , 目标进程句柄,通过打开进程获得
.参数 文件名, 文本型, , 已装载到目标进程中的DLL动态链接库的文件名
.参数 函数名, 文本型, , DLL命令所在动态链接库中的名称
.参数 参数, 整数型, 可空, DLL命令参数,只能为整数型数值,若为指针地址则必须保证该地址在远程进程中真实有效!
.参数 立即返回, 逻辑型, 可空, 真:函数执行就立即返回,失败返回0  默认为假:等函数执行完成后返回并返回函数的返回值



.子程序 _调用API函数_文本, 整数型, , 在目标进程中调用标准API函数命令(成功返回函数命令的返回值,失败返回0)
.参数 进程句柄, 整数型, , 目标进程句柄,通过打开进程获得
.参数 文件名, 文本型, , 已装载到目标进程中的DLL动态链接库的文件名
.参数 函数名, 文本型, , DLL命令所在动态链接库中的名称
.参数 参数, 文本型, 可空, DLL命令参数文本
.参数 立即返回, 逻辑型, 可空, 真:函数执行就立即返回,失败返回0  默认为假:等函数执行完成后返回并返回函数的返回值



.子程序 _植入代码, 空白型, , 在目标进程中植入代码,通过"_执行代码"命令进行一次性调用所有被植入的代码,如果目标进程与上次不符则自动释放上次植入的代码
.参数 进程句柄, 整数型, , 目标进程句柄,通过打开进程获得
.参数 子程序指针, 整数型, , 目标进程中存在的子程序的地址,可以是已加载的动态链接库函数地址,必须保证该地址的有效性!
.参数 参数一, 字节集, 可空, 子程序的参数,使用命令"到字节集()"转换,非整数参数则不能为4字节!
.参数 参数二, 字节集, 可空, 
.参数 参数三, 字节集, 可空, 
.参数 参数四, 字节集, 可空, 
.参数 参数五, 字节集, 可空, 
.参数 参数六, 字节集, 可空, 
.参数 参数七, 字节集, 可空, 
.参数 参数八, 字节集, 可空, 
.参数 参数九, 字节集, 可空, 



.子程序 _执行代码, 整数型, , 在目标进程中执行被植入的代码(返回代码返回值,失败返回0)
.参数 立即返回, 逻辑型, 可空, 如果参数为空,则释放植入的代码



.子程序 下载, 逻辑型, , 在目标进程中调用URLDownloadToFileA函数命令进行下载(成功返回真,失败返回假)
.参数 进程句柄, 整数型, , 目标进程句柄,通过打开进程获得
.参数 下载地址, 文本型, , 网络URL文件下载地址
.参数 保存地址, 文本型, , 保存到本地文件名



.类模块 全局共享类, , , 

.子程序 _远程创建地址, 整数型, , LocalAlloc 远程创建一个指定大小的共享地址,返回地址
.参数 进程句柄, 整数型, , 
.参数 共享大小, 整数型, , 



.子程序 _远程释放地址, 逻辑型, , LocalFree 远程释放指定共享内存地址
.参数 进程句柄, 整数型, , 
.参数 共享地址, 整数型, , 



.子程序 创建共享, 逻辑型, , 在指定进程中创建一个共享资源,用来供系统中的进程共享访问(成功返回真,失败返回假)
.参数 进程ID, 整数型, , 提供共享服务的进程的标识符
.参数 共享名称, 文本型, , 定义共享资源的名称



.子程序 释放共享, 逻辑型, , 释放指定进程中已经创建的共享资源(成功返回真,失败返回假)
.参数 进程ID, 整数型, , 提供共享服务的进程的标识符
.参数 共享名称, 文本型, , 定义共享资源的名称



.子程序 写共享, 逻辑型, , 在指定进程中写入共享数据,如果共享名称不存在则自动创建(成功返回真,失败返回假)
.参数 进程ID, 整数型, , 提供共享服务的进程的标识符
.参数 共享名称, 文本型, , 定义共享资源的名称
.参数 写入数据, 字节集, , 欲写入共享中的数据
.参数 写入长度, 整数型, 可空, 默认为写入数据的长度



.子程序 写共享文本, 逻辑型, , 在指定进程中写入共享文本,如果共享名称不存在则自动创建(成功返回真,失败返回假)
.参数 进程ID, 整数型, , 提供共享服务的进程的标识符
.参数 共享名称, 文本型, , 定义共享资源的名称
.参数 写入文本, 文本型, , 欲写入共享中的文本



.子程序 写共享数值, 逻辑型, , 在指定进程中写入共享数值,如果共享名称不存在则自动创建(成功返回真,失败返回假)
.参数 进程ID, 整数型, , 提供共享服务的进程的标识符
.参数 共享名称, 文本型, , 定义共享资源的名称
.参数 写入数值, 双精度小数型, , 欲写入共享中的数值



.子程序 读共享, 字节集, , 读取指定进程中的共享数据(成功返回数据,失败返回空字节集)
.参数 进程ID, 整数型, , 提供共享服务的进程的标识符
.参数 共享名称, 文本型, , 定义共享资源的名称



.子程序 读共享文本, 文本型, , 读取指定进程中的共享文本(成功返回文本,失败返回空)
.参数 进程ID, 整数型, , 提供共享服务的进程的标识符
.参数 共享名称, 文本型, , 定义共享资源的名称



.子程序 读共享数值, 双精度小数型, , 读取指定进程中的共享数值(成功返回数值,失败返回空)
.参数 进程ID, 整数型, , 提供共享服务的进程的标识符
.参数 共享名称, 文本型, , 定义共享资源的名称



.类模块 线程操作类, , , 

.子程序 取线程句柄, 整数型, , 取得本类正在操作的线程句柄


.子程序 置线程句柄, 空白型, , 设置一个已知的线程句柄供本类操作,本类原有操作的线程句柄将被自动关闭(成功返回真,失败返回假)
.参数 已知线程句柄, 整数型, , 



.子程序 打开当前线程, 逻辑型, , 打开一个线程供本类操作,本类原有操作的线程句柄将被自动关闭(成功返回真,失败返回假)


.子程序 创建, 逻辑型, , 创建一个线程子程序,本类原有操作的线程句柄将被自动关闭(成功返回真,失败返回假)
.参数 线程子程序, 子程序指针, , 欲启动的线程子程序指针
.参数 传递参数, 整数型, 可空, 



.子程序 远程创建, 逻辑型, , 将在远程进程中创建线程,必须保证函数在远程进程中存在!本类原有操作的线程句柄将被自动关闭(成功返回真,失败返回假)
.参数 进程句柄, 整数型, , 
.参数 线程子程序, 整数型, , 欲启动的线程子程序指针,必须在目标进程中存在
.参数 传递参数, 整数型, 可空, 



.子程序 销毁, 空白型, , 强行销毁线程,如果线程正在执行关键性操作将可能产生不可预知的错误


.子程序 挂起, 整数型, , 将指定线程的执行挂起


.子程序 恢复, 整数型, , 恢复执行挂起的一个线程,只有全部被挂起的线程都被恢复才恢复


.子程序 等待, 逻辑型, , 等待线程到指定时间
.参数 等待时间, 整数型, 可空, 默认为-1:无限等待 (单位为毫秒)



.子程序 置优先级, 逻辑型, , 设置线程优先级
.参数 优先级, 整数型, , 



.子程序 取优先级, 整数型, , 返回线程优先级


.子程序 取创建时间, 日期时间型, , 取得线程创建时的时间


.子程序 取启动时间, 整数型, , 取得线程启动到现在的毫秒级时间


.子程序 取返回值, 整数型, , 取线程子程序返回值,为其他数据类型将返回指针,调用该命令会自动等待线程执行完毕再返回


.子程序 _创建进入许可证, 多线程许可证, , 创建并返回一个进入许可证数值,此许可证值用作进入程序中的指定许可代码区,以避免多线程冲突


.子程序 _删除进入许可证, 空白型, , 删除由"创建进入许可证"命令所创建返回的进入许可证(该命令会在本类被销毁时自动被调用)
.参数 进入许可证, 多线程许可证, 可空, 留空则删除所有许可证



.子程序 _进入许可区, 空白型, , 根据已经创建的许可证进入指定许可代码区,在此线程未退出之前,其它线程如要通过同一个进入许可证进入该许可代码区则必须先等待此线程退出许可代码区,从而保证了指定许可代码区在任何时候都只能有一条线程进入并执行
.参数 进入许可证, 多线程许可证, , 



.子程序 _退出许可区, 空白型, , 指示当前线程将退出许可代码区,并允许其它使用同一进入许可证的线程进入此许可代码区
.参数 进入许可证, 多线程许可证, , 



.类模块 颜色处理类, , , 

.子程序 到十进制色, 整数型, , 将十六进制颜色文本转换成十进制颜色值
.参数 颜色文本, 文本型, , 十六进制颜色



.子程序 到十六进制色, 文本型, , 将十进制颜色值转换成十六进制颜色文本
.参数 颜色值, 整数型, , 十进制颜色值



.子程序 取R色, 字节型, , 取出颜色中红色成分,以字节表示
.参数 颜色值, 整数型, , 



.子程序 取G色, 字节型, , 取出颜色中绿色成分,以字节表示
.参数 颜色值, 整数型, , 



.子程序 取B色, 字节型, , 取出颜色中蓝色成分,以字节表示
.参数 颜色值, 整数型, , 



.子程序 取R色2, 文本型, , 取出颜色中红色成分,以双字节十六进制文本表示
.参数 颜色值, 整数型, , 



.子程序 取G色2, 文本型, , 取出颜色中绿色成分,以双字节十六进制文本表示
.参数 颜色值, 整数型, , 



.子程序 取B色2, 文本型, , 取出颜色中蓝色成分,以双字节十六进制文本表示
.参数 颜色值, 整数型, , 



.子程序 取颜色值, 整数型, , 返回一个整数,用来表示一个红绿蓝颜色值
.参数 红色, 整数型, , 数值范围从 0-255 表示颜色中的红色成份
.参数 绿色, 整数型, , 数值范围从 0-255 表示颜色中的绿色成份
.参数 蓝色, 整数型, , 数值范围从 0-255 表示颜色中的蓝色成份



.子程序 取灰度, 字节型, , 取出颜色中平均色
.参数 颜色值, 整数型, , 



.子程序 取色彩度, 字节型, , 取出颜色中色彩度
.参数 颜色值, 整数型, , 



.类模块 NTIO类, , , 

.子程序 释放按键, 逻辑型, , 模拟NT按键需暂停时,调用此功能释放功能按键


.子程序 按键, 逻辑型, , NT模拟按键,暂不支持"机打"
.参数 键代码, 整数型, , 键代码
.参数 状态, 整数型, 可空, 为空:默认为按键(按下_+放开_)   3 #按下_  4 #放开_
.参数 间隔, 整数型, 可空, 可空默认为:0 (毫秒) 按下放开之间的间隔时间



.子程序 功能按键, 逻辑型, , NT模拟功能按键,如:#左光标键
.参数 键代码, 整数型, , 功能键代码
.参数 状态, 整数型, 可空, 为空:默认为按键(按下_+放开_)   3 #按下_  4 #放开_
.参数 间隔, 整数型, 可空, 可空默认为:0 (毫秒) 按下放开之间的间隔时间



.子程序 组合按键, 逻辑型, , NT模拟组合按键
.参数 键代码, 整数型, , 
.参数 功能键码, 整数型, , 
.参数 间隔, 整数型, 可空, 可空默认为:0  (毫秒) 按下放开之间的间隔时间



.子程序 鼠标偏移, 逻辑型, , NT模拟鼠标偏移,目标坐标与实际坐标有一像素点误差属正常现象!
.参数 横偏移量, 整数型, , 鼠标横坐标偏移距离,负数左移,正数右移(移动后坐标=当前坐标+偏移量)
.参数 纵偏移量, 整数型, , 鼠标纵坐标偏移距离,负数上移,正数下移



.子程序 鼠标移动, 逻辑型, , NT模拟鼠标移动,目标坐标与实际坐标有一像素点误差属正常现象!
.参数 窗口句柄, 整数型, 可空, 可空:相对桌面移动鼠标  句柄有效则相对窗口中坐标移动
.参数 水平坐标, 整数型, , 
.参数 垂直坐标, 整数型, , 



.子程序 鼠标归位, 逻辑型, , NT恢复当前鼠标坐标到"鼠标记录"的坐标点或移动鼠标到指定点
.参数 坐标, 坐标型, 可空, 可空:恢复到上次记录的坐标点



.子程序 鼠标按键, 逻辑型, , NT模拟鼠标按键
.参数 键, 整数型, 可空, 可空:为左键_  1 #左键_   2 #右键_   3 #中键_
.参数 状态, 整数型, 可空, 可空:为单击_  1 #单击_   2 #双击_   3 #按下_  4 #放开_
.参数 间隔, 整数型, 可空, 默认为0 无间隔 某些情况下需要增加一点间隔(毫秒)



.子程序 写指令, 逻辑型, , 本命令为高级命令,对IO操作不精通者慎用,否则死机难免!!
.参数 指令, 整数型, , 
.参数 参一, 整数型, 可空, 
.参数 参二, 整数型, 可空, 
.参数 参三, 整数型, 可空, 
.参数 参四, 整数型, 可空, 



.子程序 锁定键盘, 逻辑型, , (解除)禁止键盘接口,外部无法操作键盘,只有本类命令可以控制键盘
.参数 解锁, 逻辑型, 可空, 默认为假 锁定  真 解锁 (最后千万别忘了自动解锁)



.子程序 锁定鼠标, 逻辑型, , (解除)禁止鼠标接口,外部无法操作鼠标,只有本类命令可以控制鼠标
.参数 解锁, 逻辑型, 可空, 默认为假 锁定  真 解锁 (最后千万别忘了自动解锁)



.子程序 系统变速, 逻辑型, , 双核下无效!
.参数 数值, 短整数型, , 



.类模块 名称匹配类, , , 

.子程序 是否已存在, 逻辑型, , 判断指定命令名称是否已经存在(存在返回真,否则返回假)
.参数 命令名, 文本型, , 



.子程序 取出, 整数型, , 取出命令名称,返回数目
.参数 命令名, 文本型, 数组, 存放命令名称的变量



.子程序 添加, 空白型, , 添加命令名称到列表中
.参数 命令名, 文本型, 可空, 多命令名称以"|"分开



.子程序 添加2, 空白型, , 添加命令名称到列表中
.参数 命令名, 文本型, 数组, 



.子程序 清空, 空白型, , 清空命令名称列表


.子程序 匹配命令名, 整数型, , 将中英文符号混合输入的名称与标准名称进行匹配,返回吻合的名称数目,匹配前必须先使用"添加"命令
.参数 命令名称, 文本型, , 欲判断的伪名称
.参数 吻合名称, 文本型, 数组, 用于存放吻合名称的数组变量
.参数 支持南方音, 逻辑型, 可空, 



.类模块 驱动模拟类, , , 

.子程序 是否安装成功, 逻辑型, , 判断当前驱动是否安装成功 (安装驱动成功返回真,失败返回假)


.子程序 释放按键, 逻辑型, , 模拟按键需暂停时,调用此功能释放功能按键


.子程序 按键, 逻辑型, , 驱动级模拟按键
.参数 键代码, 整数型, , 键代码
.参数 状态, 整数型, 可空, 为空:默认为按键(按下_+放开_)   3 #按下_  4 #放开_
.参数 间隔, 整数型, 可空, 可空默认为:0 (毫秒) 按下放开之间的间隔时间



.子程序 功能按键, 逻辑型, , 驱动级模拟功能按键,如:#左光标键
.参数 键代码, 整数型, , 功能键代码
.参数 状态, 整数型, 可空, 为空:默认为按键(按下_+放开_)   3 #按下_  4 #放开_
.参数 间隔, 整数型, 可空, 可空默认为:0 (毫秒) 按下放开之间的间隔时间



.子程序 组合按键, 逻辑型, , 驱动级模拟组合按键
.参数 键代码, 整数型, , 
.参数 功能键码, 整数型, , 
.参数 间隔, 整数型, 可空, 可空默认为:0  (毫秒) 按下放开之间的间隔时间



.子程序 鼠标偏移, 逻辑型, , 模拟鼠标偏移,目标坐标与实际坐标有一像素点误差属正常现象!
.参数 横偏移量, 整数型, , 鼠标横坐标偏移距离,负数左移,正数右移(移动后坐标=当前坐标+偏移量)
.参数 纵偏移量, 整数型, , 鼠标纵坐标偏移距离,负数上移,正数下移



.子程序 鼠标移动, 逻辑型, , 模拟鼠标移动,目标坐标与实际坐标有一像素点误差属正常现象!
.参数 窗口句柄, 整数型, 可空, 可空:相对桌面移动鼠标  句柄有效则相对窗口中坐标移动
.参数 水平坐标, 整数型, , 
.参数 垂直坐标, 整数型, , 



.子程序 鼠标归位, 逻辑型, , 恢复当前鼠标坐标到"鼠标记录"的坐标点或移动鼠标到指定点
.参数 坐标, 坐标型, 可空, 可空:恢复到上次记录的坐标点



.子程序 鼠标按键, 逻辑型, , 驱动级模拟鼠标按键
.参数 键, 整数型, 可空, 可空:为左键_  1 #左键_   2 #右键_   3 #中键_
.参数 状态, 整数型, 可空, 可空:为单击_  1 #单击_   2 #双击_   3 #按下_  4 #放开_
.参数 间隔, 整数型, 可空, 默认为0 无间隔 某些情况下需要增加一点间隔(毫秒)



.子程序 写指令, 逻辑型, , 本命令为高级命令,对IO操作不精通者慎用,否则死机难免!!
.参数 指令, 整数型, , 
.参数 参一, 整数型, 可空, 
.参数 参二, 整数型, 可空, 
.参数 参三, 整数型, 可空, 
.参数 参四, 整数型, 可空, 



.子程序 锁定键盘, 逻辑型, , (解除)禁止键盘接口,外部无法操作键盘,只有本类命令可以控制键盘
.参数 解锁, 逻辑型, 可空, 默认为假 锁定  真 解锁 (最后千万别忘了自动解锁)



.子程序 锁定鼠标, 逻辑型, , (解除)禁止鼠标接口,外部无法操作鼠标,只有本类命令可以控制鼠标
.参数 解锁, 逻辑型, 可空, 默认为假 锁定  真 解锁 (最后千万别忘了自动解锁)



.子程序 系统变速, 逻辑型, , 双核下无效!
.参数 数值, 短整数型, , 



.类模块 内存_多条件搜索类, , , 

.子程序 清除上次搜索, 空白型, , 清除缓存


.子程序 添加搜索条件, 空白型, , 添加搜索,条件第三步
.参数 条件, 字节集, , 需要搜索的内容,自行转换为字节集
.参数 偏移地址, 整数型, , 搜索参数的相对地址,即偏移地址



.子程序 搜索, 整数型, , 进行搜索,第三步,返回搜索到的地址数,
.参数 进程ID, 整数型, , 
.参数 返回数据, 整数型, 参考 数组, 



.类模块 内存_驱动读写1类, , , 

.子程序 是否安装成功, 逻辑型, , 


.子程序 读整数型, 整数型, , 失败返回-1
.参数 进程ID, 整数型, , 
.参数 内存地址, 整数型, , 



.子程序 写整数型, 逻辑型, , 成功返回真,失败返回假
.参数 进程ID, 整数型, , 
.参数 内存地址, 整数型, , 
.参数 欲写入值, 整数型, , 



.子程序 读字节集, 字节集, , 失败返回空字节集 必须内存_驱动加载
.参数 进程ID, 整数型, , 
.参数 读取地址, 整数型, , 
.参数 读取长度, 整数型, , 



.子程序 写字节集, 逻辑型, , 必须内存_驱动加载
.参数 进程ID, 整数型, , 
.参数 内存地址, 整数型, , 
.参数 字节集数据, 字节集, , 



.类模块 线程钩子类, , , 线程钩子,本类命令仅钩于当前线程所在进程窗口,通常写于DLL中注入后使用

.子程序 安装键盘钩子, 逻辑型, , 安装一个键盘钩子,可同时安装多个钩子指针,后加入的指针具有优先权(成功返回真,失败返回假)
.参数 回调指针, 子程序指针, , 回调钩子子程序指针,回调指针(键代码,状态).返回真:吃掉消息.返回假:放行消息



.子程序 卸载键盘钩子, 空白型, , 卸载已安装的键盘钩子集 (本命令会在类变量销毁时自动被调用)


.子程序 安装鼠标钩子, 逻辑型, , 安装一个鼠标钩子,可同时安装多个钩子指针,后加入的指针具有优先权(成功返回真,失败返回假)
.参数 回调指针, 子程序指针, , 回调钩子子程序指针,回调指针(窗口句柄,鼠标标识,鼠标横坐标,鼠标纵坐标).返回真:吃掉消息.返回假:放行消息



.子程序 卸载鼠标钩子, 空白型, , 卸载已安装的鼠标钩子集 (本命令会在类变量销毁时自动被调用)


.子程序 等待按键, 整数型, , 暂停当前程序线程,按任意键后继续,返回被按下的键码


.子程序 等待鼠标, 整数型, , 暂停当前程序线程,按任意鼠标键后继续,返回被按下的鼠标键


.子程序 设置呼出窗口, 逻辑型, , 设置一个由热键来呼入呼出的窗口(成功返回真,失败返回假)
.参数 呼出窗口, 窗口, 可空, 欲设置呼出的窗口,如果为空则卸载
.参数 呼出热键, 整数型, 可空, 呼入呼出窗口的热键代码,如果为空则卸载



.类模块 许可证类, , , 需要多个许可证请定义多个类变量

.子程序 进入, 空白型, , 进入指定许可代码区,在此线程未退出之前,其它线程如要进入该许可代码区则必须先等待此线程退出许可代码区,从而保证了指定许可代码区在任何时候都只能有一条线程进入并执行


.子程序 退出, 空白型, , 指示当前线程将退出许可代码区,并允许其它使用同一进入许可证的线程进入此许可代码区


.类模块 系统服务类, , , 

.子程序 注册EXE, 逻辑型, , 可以设置任何EXE程序为系统服务
.参数 服务名称, 文本型, , 
.参数 服务程序地址, 文本型, , 
.参数 启动类型, 整数型, 可空, 默认为1 demand  2 auto  3 disabled
.参数 显示名称, 文本型, 可空, 
.参数 服务描述, 文本型, 可空, 



.子程序 注册DLL, 逻辑型, , 可以设置任何DLL为系统服务
.参数 服务名称, 文本型, , 
.参数 DLL地址, 文本型, , 
.参数 执行函数, 文本型, , 
.参数 启动类型, 整数型, 可空, 默认为1 demand  2 auto  3 disabled
.参数 显示名称, 文本型, 可空, 
.参数 服务描述, 文本型, 可空, 



.子程序 启动, 空白型, , 
.参数 服务名称, 文本型, , 



.子程序 删除, 空白型, , 
.参数 服务名称, 文本型, , 



.子程序 停止, 空白型, , 
.参数 服务名称, 文本型, , 



.类模块 网页模拟类, , , 

.子程序 初始化, 逻辑型, , 使用本类前必须先初始化(成功返回真,失败返回假)
.参数 进程名, 文本型, 可空, 浏览器进程名
.参数 窗口标题, 文本型, 可空, 可以是窗口标题的关键字



.子程序 从句柄初始化, 逻辑型, , 使用本类前必须先初始化(成功返回真,失败返回假)
.参数 窗口句柄, 整数型, , 



.子程序 按键, 空白型, , 在网页中后台模拟键盘动作
.参数 键代码, 整数型, , 按键的键代码
.参数 状态, 整数型, 可空, 可空:按键(3+4)  1 #按键_  2 功能键方式(按下+放开)  3 #按下_  4 #放开_



.子程序 鼠标键, 空白型, , 在网页中后台模拟鼠标动作
.参数 键, 整数型, 可空, 可空:为左键_  1 #左键_   2 #右键_   3 #中键_  4 #中键上滚动_ 5 #中键下滚动_(滚动前后请按下放开中键)
.参数 控制, 整数型, 可空, 可空:为单击_  1 #单击_   2 #双击_   3 #按下_  4 #放开_



.子程序 鼠标移动, 空白型, , 在网页中后台模拟鼠标移动
.参数 水平坐标, 整数型, 可空, 可空:为原水平坐标不变  移动目标鼠标水平坐标
.参数 垂直坐标, 整数型, 可空, 可空:为原垂直坐标不变  移动目标鼠标垂直坐标



.子程序 鼠标记位, 坐标型, , 记录鼠标在网页中的坐标


.子程序 鼠标归位, 空白型, , 恢复网页中鼠标坐标到"鼠标记位"所记录的坐标
.参数 目标坐标, 坐标型, 可空, 如果指定参数,则移动到指定坐标



.子程序 取鼠标水平位置, 整数型, , 取出鼠标在网页中的横坐标


.子程序 取鼠标垂直位置, 整数型, , 取出鼠标在网页中的纵坐标


.子程序 取窗口句柄, 整数型, , 返回当前浏览框句柄,失败返回0


.子程序 快照, 字节集, , 获取网页图象快照,返回位图字节集
.参数 左边, 整数型, 可空, 默认为0
.参数 顶边, 整数型, 可空, 默认为0
.参数 宽度, 整数型, 可空, 默认为到最右边
.参数 高度, 整数型, 可空, 默认为到最底边
.参数 位深度, 整数型, 可空, 默认为24



.类模块 全局注入类, , , 

.子程序 安装钩子, 整数型, , 安装一个全局注入钩子(成功返回钩子句柄,失败返回0) 注:该命令所在进程被结束时,它所注入的钩子将被自动停止!
.参数 DLL文件名, 文本型, , DLL文件全路径文件名,DLL中必须有一个公开函数,且只能有一个公开函数
.参数 线程标识符, 整数型, 可空, 如果不指定线程标识符则默认为全局



.子程序 安装线程钩子, 整数型, , 返回安装成功后的线程钩子句柄
.参数 窗口句柄, 整数型, , 
.参数 钩子处理DLL, 文本型, , 
.参数 入口函数, 文本型, , 



.子程序 卸载钩子, 逻辑型, , 卸载已经注入的全局钩子


.子程序 发送退出消息, 逻辑型, , 发送退出消息给所有被本类所注入DLL的线程,目标线程收到消息后会自动调用退出处理函数并卸载DLL


.子程序 发送消息, 逻辑型, , 发送消息给所有被本类所注入DLL的线程
.参数 消息标识, 整数型, , 
.参数 消息值一, 整数型, , 
.参数 消息值二, 整数型, , 



.子程序 DLL初始化, 整数型, , 在DLL中公开函数下调用本命令,对DLL进行初始化处理,返回值需要继续返回给公开函数
.参数 一, 整数型, , 传入DLL中公开接口函数的第一个参数 nCode
.参数 二, 整数型, , 传入DLL中公开接口函数的第二个参数 wParam
.参数 三, 整数型, , 传入DLL中公开接口函数的第三个参数 lParam
.参数 初始处理, 子程序指针, , 无参数无返回值的一个子程序,用来初始化DLL
.参数 退出处理, 子程序指针, , 无参数无返回值的一个子程序,用来DLL退出时卸载各类HOOK
.参数 判断进程ID, 整数型, 可空, 如果指定该参数则判断进程ID是否与当前进程标识符所相符,全局注入时限定仅注入某个进程所使用!



.子程序 _事件_窗口最小化, 空白型, , 在DLL中初始处理函数下调用本命令
.参数 事件子程序, 子程序指针, 可空, 



.子程序 _事件_窗口最大化, 空白型, , 在DLL中初始处理函数下调用本命令
.参数 事件子程序, 子程序指针, 可空, 



.子程序 _事件_窗口关闭, 空白型, , 在DLL中初始处理函数下调用本命令
.参数 事件子程序, 子程序指针, 可空, 



.子程序 _事件_鼠标消息, 空白型, , 在DLL中初始处理函数下调用本命令
.参数 事件子程序, 子程序指针, 可空, 事件子程序(窗口句柄,消息标识,横坐标,纵坐标)



.子程序 _事件_按下某键, 空白型, , 在DLL中初始处理函数下调用本命令
.参数 事件子程序, 子程序指针, 可空, 事件子程序(键代码,空,空,空)



.子程序 _事件_放开某键, 空白型, , 在DLL中初始处理函数下调用本命令
.参数 事件子程序, 子程序指针, 可空, 事件子程序(键代码,空,空,空)



.子程序 _事件_全部消息, 空白型, , 在DLL中初始处理函数下调用本命令
.参数 事件子程序, 子程序指针, 可空, 事件子程序(窗口句柄,消息标识,消息值一,消息值二)



.子程序 设置呼出窗口, 空白型, , 在DLL中初始处理函数下调用本命令,设置一个由热键来呼入呼出的窗口
.参数 呼出窗口, 窗口, , 欲设置呼出的窗口
.参数 呼出热键, 整数型, , 呼入呼出窗口的热键代码



.子程序 全局DLL注入, 逻辑型, , 
.参数 DLL全路径, 文本型, , 
.参数 DLL公开函数名, 文本型, , 



.子程序 全局DLL卸载, 逻辑型, , 


.子程序 注入DLL, 整数型, , 成功返回0,失败返回负值.
.参数 目标进程ID, 整数型, , 即PID
.参数 DLL文件全名, 文本型, , 不含路径,含扩展名,如:MyDLL.dll
.参数 DLL装载路径, 文本型, , 不含名称,如:C:\WINDOWS\SYSTEM32\
.参数 DLL函数名, 文本型, , 子程序的实际名称即可,文本型,区分大小写
.参数 隐藏错误信息, 逻辑型, 可空, 是否在出错时自动调用错误信息框



.子程序 卸载DLL, 整数型, , Uninst-DLL,成功返回0,失败返回负值
.参数 目标进程ID, 整数型, , 即PID
.参数 DLL文件全名, 文本型, , 不含路径,含扩展名,如:MyDLL.dll
.参数 DLL装载路径, 文本型, , 不含名称,如:C:\WINDOWS\SYSTEM32\
.参数 隐藏错误信息, 逻辑型, 可空, 是否在出错时自动调用错误信息框,若为真则不调用



.子程序 局部_UnHookDLL, 整数型, , Uninst-DLL,成功返回0,失败返回负值
.参数 目标进程ID, 整数型, , 即PID
.参数 DLL文件全名, 文本型, , 不含路径,含扩展名,如:MyDLL.dll
.参数 DLL装载路径, 文本型, , 不含名称,如:C:\WINDOWS\SYSTEM32\
.参数 隐藏错误信息, 逻辑型, 可空, 是否在出错时自动调用错误信息框



.类模块 网页文档类, , , 

.子程序 初始化, 逻辑型, , 提供网页文档或浏览器窗口句柄初始化
.参数 网页文档对象, 对象, 可空, 
.参数 浏览器窗口句柄, 整数型, 可空, 



.子程序 取网页属性, 文本型, , 取网页文档的属性
.参数 属性类型, 文本型, , 请提供“#网页属性_”开头的常量值



.子程序 点击链接, 逻辑型, , 点击网页上特定的超链接
.参数 元素标识, 文本型, , 要点击链接的名称、ID、索引、标题或地址
.参数 标识类型, 整数型, , 0.元素标识类型_名称,1.元素标识类型_ID,2.元素标识类型_索引,3.元素标识类型_标题,4.元素标识类型_地址
.参数 完全匹配, 逻辑型, 可空, 是否完全匹配元素标识,默认为假



.子程序 点击按钮, 逻辑型, , 点击网页上的普通按钮或图片按钮
.参数 元素标识, 文本型, , 要点击按钮的名称、ID、索引、标题
.参数 标识类型, 整数型, , 0.元素标识类型_名称,1.元素标识类型_ID,2.元素标识类型_索引,3.元素标识类型_标题,4.元素标识类型_地址
.参数 完全匹配, 逻辑型, 可空, 是否完全匹配元素标识,默认为假



.子程序 填写表单, 逻辑型, , 本方法支持的组件：文本框(Text)、多行文本框(TextArea)、隐藏表单(hidden)、文件域(file)
.参数 元素标识, 文本型, , 元素名称或ID
.参数 标识类型, 整数型, , 0.元素标识类型_名称,1.元素标识类型_ID
.参数 填写内容, 文本型, , 



.子程序 取表单值, 文本型, , 本方法支持的组件：文本框(Text)、多行文本框(TextArea)、隐藏表单(hidden)、文件域(file)
.参数 元素标识, 文本型, , 元素名称或ID
.参数 标识类型, 整数型, , 0.元素标识类型_名称,1.元素标识类型_ID



.子程序 屏蔽信息框, 空白型, , 屏蔽常见的网页信息框、对话框


.子程序 取所有网页框句柄, 逻辑型, , 取已打开的所有网页窗口句柄
.参数 父句柄, 整数型, , 要取网页窗口的父窗口，要取整个系统的网页窗口请提供0
.参数 欲装载的数组, 整数型, 参考 数组, 返回的句柄数组，只能提供数组型变量



.子程序 取选中内容, 文本型, , 取当前网页上选中的内容
.参数 返回类型, 整数型, 可空, 0.文本 1.HTML代码 默认为0



.子程序 替换选中内容, 空白型, , 选中区替换为...
.参数 被替换为, 文本型, , 



.子程序 取单选框元素, 网页单选框类, , 
.参数 单选框名称, 文本型, , 元素名称name



.子程序 取复选框元素, 网页复选框类, , 
.参数 复选框名称, 文本型, , 元素名称name



.子程序 取组合框元素, 网页组合框类, , 
.参数 元素标识, 文本型, , 元素名称或ID
.参数 标识类型, 整数型, , 0.元素标识类型_名称,1.元素标识类型_ID,2.元素标识类型_索引



.子程序 取元素对象, 对象, , 按标题或ID取网页元素对象
.参数 元素标识, 文本型, , 元素名称或ID
.参数 标识类型, 整数型, , 0.元素标识类型_名称,1.元素标识类型_ID



.子程序 取元素对象_按坐标, 对象, , 返回指定 x 和 y 坐标的网页元素(elementFromPoint)
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 



.子程序 取元素代码, 文本型, , 返回网页元素里的HTML代码(innerHTML)
.参数 元素对象, 对象, , 网页元素对象，可以通过“取元素对象()”获取



.子程序 取元素文本, 文本型, , 返回网页元素里的文本(innerText)
.参数 元素对象, 对象, , 网页元素对象，可以通过“取元素对象()”获取



.子程序 取元素引用代码, 文本型, , 返回网页元素的引用代码(outerHTML)
.参数 元素对象, 对象, , 网页元素对象，可以通过“取元素对象()”获取



.子程序 取元素引用文本, 文本型, , 返回网页元素的引用文本(outerText)
.参数 元素对象, 对象, , 网页元素对象，可以通过“取元素对象()”获取



.子程序 取框架数量, 整数型, , 取网页内框架(frame)数量


.子程序 取框架对象, 对象, , 取网页内框架(frame)
.参数 元素标识, 文本型, , 元素名称、ID、索引(1,2,3,..)
.参数 标识类型, 整数型, , 0.元素标识类型_名称,1.元素标识类型_ID,2.元素标识类型_索引



.子程序 取框架文档, 对象, , 取网页内框架(frame)的文档对象(Document)
.参数 元素标识, 文本型, , 元素名称、ID、索引(1,2,3,..)
.参数 标识类型, 整数型, , 0.元素标识类型_名称,1.元素标识类型_ID,2.元素标识类型_索引



.子程序 网页导航, 空白型, , 跳转到指定网址
.参数 网页地址, 文本型, , 



.子程序 写超文本流, 空白型, , 直接在Webbroswer或外部网页框内写入一个完整的网页
.参数 超文本流, 文本型, , 网页HTML代码，最好包含<html>与</html>



.子程序 执行脚本, 空白型, , 在当前网页上执行指定的脚本命令
.参数 脚本代码, 文本型, , 
.参数 脚本类型, 文本型, 可空, #脚本类型_JavaScript、#脚本类型_VBScript，默认为JavaScript



.子程序 执行事件函数, 逻辑型, , 执行某个网页元素相关的脚本方法
.参数 事件元素, 对象, , 网页元素对象，可以通过“取元素对象()”获取
.参数 事件名称, 文本型, , 请使用“#网页事件_”开头的常量，一般是 #网页事件_onclick



.子程序 置元素代码, 逻辑型, , 设置网页元素里的HTML代码(innerHTML)
.参数 元素对象, 对象, , 网页元素对象，可以通过“取元素对象()”获取
.参数 待写入值, 文本型, , 



.子程序 置元素文本, 逻辑型, , 设置网页元素里的文本(innerText)
.参数 元素对象, 对象, , 网页元素对象，可以通过“取元素对象()”获取
.参数 待写入值, 文本型, , 



.子程序 置元素引用代码, 逻辑型, , 设置网页元素的引用代码(outerHTML)
.参数 元素对象, 对象, , 网页元素对象，可以通过“取元素对象()”获取
.参数 待写入值, 文本型, , 



.子程序 置元素引用文本, 逻辑型, , 设置网页元素的引用文本(outerText)
.参数 元素对象, 对象, , 网页元素对象，可以通过“取元素对象()”获取
.参数 待写入值, 文本型, , 



.子程序 置焦点, 空白型, , 设置网页元素获取焦点
.参数 元素对象, 对象, , 网页元素对象，可以通过“取元素对象()”获取



.子程序 置可视状态, 逻辑型, , 设置网页元素是否可视
.参数 元素对象, 对象, , 网页元素对象，可以通过“取元素对象()”获取
.参数 是否可视, 逻辑型, , 



.子程序 置网页属性, 文本型, , 指定网页文档的属性
.参数 属性类型, 文本型, , 请提供“#网页属性_”开头的常量值
.参数 待写入值, 文本型, , 



.子程序 取表单对象, 对象, , 取网页上的表单对象(Form)
.参数 元素标识, 文本型, , 元素名称、ID、索引(1,2,3,..)
.参数 标识类型, 整数型, , 0.元素标识类型_名称,1.元素标识类型_ID,2.元素标识类型_索引



.子程序 提交表单, 逻辑型, , Form.submit()
.参数 元素标识, 文本型, , 元素名称、ID、索引(1,2,3,..)
.参数 标识类型, 整数型, , 0.元素标识类型_名称,1.元素标识类型_ID,2.元素标识类型_索引



.子程序 显示弹出窗口, 对象, , 在屏幕上显示弹出窗口(popup.show)，返回弹出窗口对象
.参数 横向位置, 整数型, , 指定弹出窗口( popup )左上角横坐标。单位为像素( px )。 
.参数 纵向位置, 整数型, , 指定弹出窗口( popup )左上角纵坐标。单位为像素( px )。 
.参数 窗口宽度, 整数型, , 指定弹出窗口( popup )宽度。单位为像素( px )。
.参数 窗口高度, 整数型, , 指定弹出窗口( popup )高度。单位为像素( px )。
.参数 窗口内容, 文本型, , 待弹出窗口的内容
.参数 背景颜色, 整数型, 可空, 可选项。指定弹出窗口( popup )背景颜色，默认为白色
.参数 边框粗细, 整数型, 可空, 可选项。指定弹出窗口( popup )边框粗细。默认为1像素( px )。
.参数 边框颜色, 整数型, 可空, 可选项。指定弹出窗口( popup )边框颜色。默认为1浅灰色。
.参数 相对元素, 对象, 可空, 可选项。对象(Element)。指定 iX 和 iY 坐标所相对于的对象。如果忽略此参数，则默认相对于桌面(Desktop)。



.子程序 隐藏弹出窗口, 空白型, , popup.hide
.参数 弹出窗口对象, 对象, , 



.子程序 取网页颜色值, 文本型, , 将整数型的颜色值转换为网页支持的格式
.参数 待转换颜色值, 整数型, , 



.子程序 取元素集合, 对象, , 获取基于指定元素名称的对象集合(getElementsByTagName)
.参数 元素名称, 文本型, , 如：“a”、“table”、“div”、“img”..



.类模块 网页单选框类, , , 

.子程序 初始化, 空白型, , 
.参数 单选框集合, 对象, , 



.子程序 取数量, 整数型, , 返回单选框(radio)的数量


.子程序 取选中状态, 逻辑型, , 
.参数 单选框索引, 整数型, , 第几个单选框(radio)。1为第一个,2为第二个…



.子程序 选中, 空白型, , 
.参数 单选框索引, 整数型, , 第几个单选框(radio)。1为第一个,2为第二个…



.子程序 取消选中, 空白型, , 
.参数 单选框索引, 整数型, , 第几个单选框(radio)。1为第一个,2为第二个…



.子程序 取选中值, 文本型, , 
.参数 单选框索引, 整数型, , 第几个单选框(radio)。1为第一个,2为第二个…



.类模块 网页复选框类, , , 

.子程序 初始化, 空白型, , 
.参数 单选框集合, 对象, , 



.子程序 取数量, 整数型, , 返回复选框(checkbox)的数量


.子程序 取选中状态, 逻辑型, , 
.参数 复选框索引, 整数型, , 第几个复选框(checkbox)。1为第一个,2为第二个…



.子程序 选中, 空白型, , 
.参数 复选框索引, 整数型, , 第几个复选框(checkbox)。1为第一个,2为第二个…



.子程序 取消选中, 空白型, , 
.参数 复选框索引, 整数型, , 第几个复选框(checkbox)。1为第一个,2为第二个…



.子程序 取选中值, 文本型, , 
.参数 复选框索引, 整数型, , 第几个复选框(checkbox)。1为第一个,2为第二个…



.类模块 网页组合框类, , , 

.子程序 初始化, 空白型, , 
.参数 组合框对象, 对象, , 



.子程序 取项目数, 整数型, , 


.子程序 取项目文本, 文本型, , 
.参数 项目索引, 整数型, , 第几个项目(options)，1为第一项,2为第二个……



.子程序 置项目文本, 逻辑型, , 
.参数 项目索引, 整数型, , 第几个项目(options)，1为第一项,2为第二个……
.参数 待写入值, 文本型, , 



.子程序 取项目值, 文本型, , 
.参数 项目索引, 整数型, , 第几个项目(options)，1为第一项,2为第二个……



.子程序 置项目值, 逻辑型, , 
.参数 项目索引, 整数型, , 第几个项目(options)，1为第一项,2为第二个……
.参数 待写入值, 文本型, , 



.子程序 取现行选中项, 整数型, , 取列表框中现行被选中的列表项目(options)的索引，位置值从 0 开始， -1 表示现行没有被选中的列表项


.子程序 置现行选中项, 逻辑型, , 设置列表框中现行被选中的列表项目(options)的索引，位置值从 0 开始， -1 表示现行没有被选中的列表项
.参数 项目索引, 整数型, , 第几个项目(options)，1为第一项,2为第二个……



.类模块 封包拦截类, , , 

.子程序 安装send, 逻辑型, , TCP封包拦截类功能
.参数 封包处理, 子程序指针, , 该子程序有三个整型参数与一个整型返回值,封包处理函数(套接字,封包指针,封包长度),返回值为实际需发送的长度,0为全部,-1为拦截



.子程序 卸载send, 空白型, , 


.子程序 安装recv, 逻辑型, , TCP封包拦截类功能
.参数 封包处理, 子程序指针, , 该子程序有三个整型参数与一个整型返回值,封包处理函数(套接字,封包指针,封包长度),返回值为实际需发送的长度,0为全部,-1为拦截



.子程序 卸载recv, 空白型, , 


.子程序 安装WSASend, 逻辑型, , TCP封包拦截类功能
.参数 封包处理, 子程序指针, , 该子程序有三个整型参数与一个整型返回值,封包处理函数(套接字,封包指针,封包长度),返回值为实际需发送的长度,0为全部,-1为拦截



.子程序 卸载WSASend, 空白型, , 


.子程序 安装WSARecv, 逻辑型, , TCP封包拦截类功能
.参数 封包处理, 子程序指针, , 该子程序有三个整型参数与一个整型返回值,封包处理函数(套接字,封包指针,封包长度),返回值为实际需发送的长度,0为全部,-1为拦截



.子程序 卸载WSARecv, 空白型, , 


.子程序 安装sendto, 逻辑型, , UDP封包拦截类功能
.参数 封包处理, 子程序指针, , 该子程序有三个整型参数与一个整型返回值,封包处理函数(套接字,封包指针,封包长度),返回值为实际需发送的长度,0为全部,-1为拦截



.子程序 卸载sendto, 空白型, , 


.子程序 安装recvfrom, 逻辑型, , UDP封包拦截类功能
.参数 封包处理, 子程序指针, , 该子程序有三个整型参数与一个整型返回值,封包处理函数(套接字,封包指针,封包长度),返回值为实际需发送的长度,0为全部,-1为拦截



.子程序 卸载recvfrom, 空白型, , 


.子程序 安装WSASendTo, 逻辑型, , UDP封包拦截类功能
.参数 封包处理, 子程序指针, , 该子程序有三个整型参数与一个整型返回值,封包处理函数(套接字,封包指针,封包长度),返回值为实际需发送的长度,0为全部,-1为拦截



.子程序 卸载WSASendTo, 空白型, , 


.子程序 安装WSARecvFrom, 逻辑型, , UDP封包拦截类功能
.参数 封包处理, 子程序指针, , 该子程序有三个整型参数与一个整型返回值,封包处理函数(套接字,封包指针,封包长度),返回值为实际需发送的长度,0为全部,-1为拦截



.子程序 卸载WSARecvFrom, 空白型, , 


.子程序 安装网络重定向, 逻辑型, , 设置多组欲拦截的网络连接,且改为其连接
.参数 原IP地址, 文本型, 可空, 要截获的连接IP,可选其一
.参数 原连接端口, 短整数型, 可空, 要截获的连接端口,可选其一
.参数 新IP地址, 文本型, , 重定向连接到一个新的IP地址
.参数 新连接端口, 短整数型, 可空, 得定向连接到一个新的端口



.子程序 卸截网络重定向, 空白型, , 卸截网络重定向功能


.类模块 MIDI演奏类, , , 

.子程序 关闭, 空白型, , 


.子程序 停奏, 逻辑型, , 
.参数 音符, 整数型, , 乐器从0~127,鼓从35~81
.参数 音量, 整数型, 可空, 0~127
.参数 通道, 整数型, 可空, 1~16,其中第10组通道为鼓组



.子程序 奏乐, 逻辑型, , 
.参数 音符, 整数型, , 乐器从0~127,鼓从35~81
.参数 音量, 整数型, 可空, 0~127
.参数 通道, 整数型, 可空, 1~16,其中第10组通道为鼓组



.子程序 取设备, 整数型, , 
.参数 设备名, 文本型, 数组, 从0开始



.子程序 打开, 逻辑型, , 
.参数 设备值, 整数型, , 
.参数 通道, 整数型, 可空, 



.子程序 置乐器, 逻辑型, , 
.参数 乐器值, 整数型, , 0~127
.参数 通道, 整数型, 可空, 1~16,其中第10组通道为鼓组



.子程序 取乐器名, 整数型, , 
.参数 乐器, 乐器数据类型, 参考 数组, 
.参数 鼓组, 逻辑型, 可空, 默认为假,真为取出第十鼓组乐器名



.类模块 XML类, , , 

.子程序 导入, 逻辑型, , 
.参数 参数_XML数据, 字节集, , 



.子程序 导出, 字节集, , 


.子程序 取父节点名, 文本型, , 
.参数 参数_节点路径, 文本型, , 



.子程序 取根节点名, 文本型, , 


.子程序 取子节点名称, 空白型, , 
.参数 参数_节点路径, 文本型, , 
.参数 参数_子节点名称, 文本型, 数组, 



.子程序 删除节点, 逻辑型, , 
.参数 参数_节点路径, 文本型, , 



.子程序 添加节点, 逻辑型, , 
.参数 参数_节点路径, 文本型, , 
.参数 参数_节点名称, 文本型, , 
.参数 参数_节点内容, 文本型, , 



.子程序 取节点文本, 文本型, , 
.参数 参数_节点路径, 文本型, , 



.子程序 取节点字节集, 字节集, , 
.参数 参数_节点路径, 文本型, , 



.子程序 置节点文本, 逻辑型, , 
.参数 参数_节点路径, 文本型, , 
.参数 参数_节点内容, 文本型, , 



.子程序 置节点字节集, 逻辑型, , 
.参数 参数_节点路径, 文本型, , 
.参数 参数_节点内容, 字节集, , 



.子程序 取子节点数, 整数型, , 
.参数 参数_节点路径, 文本型, , /A/B/C/D



.类模块 脚本控制类, , , 

.子程序 _创建, 逻辑型, , 把这个方法放到类“_初始化”命令里就不用自己创建了


.子程序 _取Language, 文本型, , 返回正在使用的 Script 语言名称。可读写。


.子程序 _置Language, 空白型, , 设置正在使用的 Script 语言名称。可读写。VBScript或JScript
.参数 属性值, 文本型, , 



.子程序 _取Timeout, 整数型, , 设置或返回时间（毫秒），此时间后用户可选择中止 Script 代码的执行或允许代码继续执行。可读写。


.子程序 _置Timeout, 空白型, , 
.参数 属性值, 整数型, , 



.子程序 _取AllowUI, 逻辑型, , 设置或返回 Boolean 值，指明是否允许正在运行的 Script 或者 ScriptControl 本身显示用户界面元素。可读写。


.子程序 _置AllowUI, 空白型, , 
.参数 属性值, 逻辑型, , 



.子程序 _取UseSafeSubset, 逻辑型, , 设置或返回 Boolean 值。如果宿主应用程序需要安全控制，则 UseSafeSubset 为 True，否则为 False。可读写。


.子程序 _置UseSafeSubset, 空白型, , 
.参数 属性值, 逻辑型, , 



.子程序 _取CodeObject, 对象, , 返回对象，该对象用于调用指定模块的公用成员。只读。


.子程序 _取Procedures, 对象, , 返回在指定模块中定义的过程集合。只读。


.子程序 _最后错误, 文本型, , 取回每次操作失败的原因


.子程序 AddObject, 整数型, , 使主机对象模型对 Script 引擎可用。
.参数 Name, 文本型, , 
.参数 Object, 对象, , 
.参数 AddMembers, 逻辑型, 可空, 默认值:0;



.子程序 Reset, 整数型, , 放弃所有已经添加到 ScriptControl 中的 Script 代码和对象。


.子程序 AddCode, 整数型, , 向模块添加指定代码。
.参数 Code, 文本型, , 



.子程序 Eval, 变体型, , 计算表达式并返回结果。
.参数 Expression, 文本型, , 



.子程序 ExecuteStatement, 整数型, , 执行指定的语句。
.参数 Statement, 文本型, , 



.子程序 Run, 变体型, , 运行指定过程。
.参数 ProcedureName, 文本型, , 
.参数 Parameters, 变体型, 可空, 



.类模块 汇编类, , , 

.子程序 _置代码, 空白型, , 


.子程序 _取代码, 字节集, , 


.子程序 Leave, 空白型, , 


.子程序 Pushad, 空白型, , 60


.子程序 Popad, 空白型, , 


.子程序 Nop, 空白型, , 


.子程序 Ret, 空白型, , 


.子程序 RetA, 空白型, , 
.参数 i, 整数型, 参考, 



.子程序 IN_AL_DX, 空白型, , 


.子程序 TEST_EAX_EAX, 空白型, , 


.子程序 Add_EAX_EDX, 空白型, , 


.子程序 Add_EBX_EAX, 空白型, , 


.子程序 Add_EAX_DWORD_Ptr, 空白型, , 
.参数 i, 整数型, , 



.子程序 Add_EBX_DWORD_Ptr, 空白型, , 
.参数 i, 整数型, , 



.子程序 Add_EBP_DWORD_Ptr, 空白型, , 
.参数 i, 整数型, , 



.子程序 Add_EAX, 空白型, , 
.参数 i, 整数型, , 



.子程序 Add_EBX, 空白型, , 
.参数 i, 整数型, , 



.子程序 Add_ECX, 空白型, , 
.参数 i, 整数型, , 



.子程序 Add_EDX, 空白型, , 
.参数 i, 整数型, , 



.子程序 Add_ESI, 空白型, , 
.参数 i, 整数型, , 



.子程序 Add_ESP, 空白型, , 
.参数 i, 整数型, , 



.子程序 Call_EAX, 空白型, , 


.子程序 Call, 空白型, , 
.参数 i, 整数型, , 



.子程序 Call_EBX, 空白型, , 


.子程序 Call_ECX, 空白型, , 


.子程序 Call_EDX, 空白型, , 


.子程序 Call_ESI, 空白型, , 


.子程序 Call_ESP, 空白型, , 


.子程序 Call_EBP, 空白型, , 


.子程序 Call_EDI, 空白型, , 


.子程序 Call_DWORD_Ptr, 空白型, , 
.参数 i, 整数型, , 



.子程序 Call_DWORD_Ptr_EAX, 空白型, , 


.子程序 Call_DWORD_Ptr_EBX, 空白型, , 


.子程序 Cmp_EAX, 空白型, , 
.参数 i, 整数型, , 



.子程序 Cmp_EAX_EDX, 空白型, , 


.子程序 Cmp_EAX_DWORD_Ptr, 空白型, , 
.参数 i, 整数型, , 



.子程序 Cmp_DWORD_Ptr_EAX, 空白型, , 
.参数 i, 整数型, , 



.子程序 Dec_EAX, 空白型, , 


.子程序 Dec_EBX, 空白型, , 


.子程序 Dec_ECX, 空白型, , 


.子程序 Dec_EDX, 空白型, , 


.子程序 Idiv_EAX, 空白型, , 


.子程序 Idiv_EBX, 空白型, , 


.子程序 Idiv_ECX, 空白型, , 


.子程序 Idiv_EDX, 空白型, , 


.子程序 Imul_EAX_EDX, 空白型, , 


.子程序 Imul_EAX, 空白型, , 
.参数 i, 整数型, , 



.子程序 ImulB_EAX, 空白型, , 
.参数 i, 整数型, , 



.子程序 Inc_EAX, 空白型, , 


.子程序 Inc_EBX, 空白型, , 


.子程序 Inc_ECX, 空白型, , 


.子程序 Inc_EDX, 空白型, , 


.子程序 Inc_EDI, 空白型, , 


.子程序 Inc_ESI, 空白型, , 


.子程序 Inc_DWORD_Ptr_EAX, 空白型, , 


.子程序 Inc_DWORD_Ptr_EBX, 空白型, , 


.子程序 Inc_DWORD_Ptr_ECX, 空白型, , 


.子程序 Inc_DWORD_Ptr_EDX, 空白型, , 


.子程序 JMP_EAX, 空白型, , 


.子程序 Mov_DWORD_Ptr_EAX, 空白型, , 
.参数 i, 整数型, , 



.子程序 Mov_EAX, 空白型, , 
.参数 i, 整数型, , 



.子程序 Mov_EBX, 空白型, , 
.参数 i, 整数型, , 



.子程序 Mov_ECX, 空白型, , 
.参数 i, 整数型, , 



.子程序 Mov_EDX, 空白型, , 
.参数 i, 整数型, , 



.子程序 Mov_ESI, 空白型, , 
.参数 i, 整数型, , 



.子程序 Mov_ESP, 空白型, , 
.参数 i, 整数型, , 



.子程序 Mov_EBP, 空白型, , 
.参数 i, 整数型, , 



.子程序 Mov_EDI, 空白型, , 
.参数 i, 整数型, , 



.子程序 Mov_EBX_DWORD_Ptr, 空白型, , 
.参数 i, 整数型, , 



.子程序 Mov_ECX_DWORD_Ptr, 空白型, , 
.参数 i, 整数型, , 



.子程序 Mov_EAX_DWORD_Ptr, 空白型, , A1
.参数 i, 整数型, , 



.子程序 Mov_EDX_DWORD_Ptr, 空白型, , 
.参数 i, 整数型, , 



.子程序 Mov_ESI_DWORD_Ptr, 空白型, , 
.参数 i, 整数型, , 



.子程序 Mov_ESI_DWORD_EAXADD, 空白型, , 
.参数 i, 整数型, , 



.子程序 Mov_ESP_DWORD_Ptr, 空白型, , 
.参数 i, 整数型, , 



.子程序 Mov_EBP_DWORD_Ptr, 空白型, , 
.参数 i, 整数型, , 



.子程序 Mov_EAX_DWORD_Ptr_EAX, 空白型, , 


.子程序 Mov_EAX_DWORD_Ptr_EBP, 空白型, , 


.子程序 Mov_EAX_DWORD_Ptr_EBX, 空白型, , 


.子程序 Mov_EAX_DWORD_Ptr_ECX, 空白型, , 


.子程序 Mov_EAX_DWORD_Ptr_EDX, 空白型, , 


.子程序 Mov_EAX_DWORD_Ptr_EDI, 空白型, , 


.子程序 Mov_EAX_DWORD_Ptr_ESP, 空白型, , 


.子程序 Mov_EAX_DWORD_Ptr_ESI, 空白型, , 


.子程序 Mov_EAX_DWORD_Ptr_EAX_Add, 空白型, , 
.参数 i, 整数型, , 



.子程序 Mov_EAX_DWORD_Ptr_ESP_Add, 空白型, , 
.参数 i, 整数型, , 



.子程序 Mov_EAX_DWORD_Ptr_EBX_Add, 空白型, , 
.参数 i, 整数型, , 



.子程序 Mov_EAX_DWORD_Ptr_ECX_Add, 空白型, , 
.参数 i, 整数型, , 



.子程序 Mov_EAX_DWORD_Ptr_EDX_Add, 空白型, , 
.参数 i, 整数型, , 



.子程序 Mov_EAX_DWORD_Ptr_EDI_Add, 空白型, , 
.参数 i, 整数型, , 



.子程序 Mov_EAX_DWORD_Ptr_EBP_Add, 空白型, , 
.参数 i, 整数型, , 



.子程序 Mov_EAX_DWORD_Ptr_ESI_Add, 空白型, , 
.参数 i, 整数型, , 



.子程序 Mov_EBX_DWORD_Ptr_EAX_Add, 空白型, , 
.参数 i, 整数型, , 



.子程序 Mov_EBX_DWORD_Ptr_ESP_Add, 空白型, , 
.参数 i, 整数型, , 



.子程序 Mov_EBX_DWORD_Ptr_EBX_Add, 空白型, , 
.参数 i, 整数型, , 



.子程序 Mov_EBX_DWORD_Ptr_ECX_Add, 空白型, , 
.参数 i, 整数型, , 



.子程序 Mov_EBX_DWORD_Ptr_EDX_Add, 空白型, , 
.参数 i, 整数型, , 



.子程序 Mov_EBX_DWORD_Ptr_EDI_Add, 空白型, , 
.参数 i, 整数型, , 



.子程序 Mov_EBX_DWORD_Ptr_EBP_Add, 空白型, , 
.参数 i, 整数型, , 



.子程序 Mov_EBX_DWORD_Ptr_ESI_Add, 空白型, , 
.参数 i, 整数型, , 



.子程序 Mov_ECX_DWORD_Ptr_EAX_Add, 空白型, , 
.参数 i, 整数型, , 



.子程序 Mov_ECX_DWORD_Ptr_ESP_Add, 空白型, , 
.参数 i, 整数型, , 



.子程序 Mov_ECX_DWORD_Ptr_EBX_Add, 空白型, , 
.参数 i, 整数型, , 



.子程序 Mov_ECX_DWORD_Ptr_ECX_Add, 空白型, , 
.参数 i, 整数型, , 



.子程序 Mov_ECX_DWORD_Ptr_EDX_Add, 空白型, , 
.参数 i, 整数型, , 



.子程序 Mov_ECX_DWORD_Ptr_EDI_Add, 空白型, , 
.参数 i, 整数型, , 



.子程序 Mov_ECX_DWORD_Ptr_EBP_Add, 空白型, , 
.参数 i, 整数型, , 



.子程序 Mov_ECX_DWORD_Ptr_ESI_Add, 空白型, , 
.参数 i, 整数型, , 



.子程序 Mov_EDX_DWORD_Ptr_EAX_Add, 空白型, , 
.参数 i, 整数型, , 



.子程序 Mov_EDX_DWORD_Ptr_ESP_Add, 空白型, , 
.参数 i, 整数型, , 



.子程序 Mov_EDX_DWORD_Ptr_EBX_Add, 空白型, , 
.参数 i, 整数型, , 



.子程序 Mov_EDX_DWORD_Ptr_ECX_Add, 空白型, , 
.参数 i, 整数型, , 



.子程序 Mov_EDX_DWORD_Ptr_EDX_Add, 空白型, , 
.参数 i, 整数型, , 



.子程序 Mov_EDI_DWORD_Ptr_ECX_Add, 空白型, , 
.参数 i, 整数型, , 



.子程序 Mov_EDX_DWORD_Ptr_EDI_Add, 空白型, , 
.参数 i, 整数型, , 



.子程序 Mov_EDX_DWORD_Ptr_EBP_Add, 空白型, , 
.参数 i, 整数型, , 



.子程序 Mov_EDX_DWORD_Ptr_ESI_Add, 空白型, , 
.参数 i, 整数型, , 



.子程序 Mov_EBX_DWORD_Ptr_EAX, 空白型, , 


.子程序 Mov_EBX_DWORD_Ptr_EBP, 空白型, , 


.子程序 Mov_EBX_DWORD_Ptr_EBX, 空白型, , 


.子程序 Mov_EBX_DWORD_Ptr_ECX, 空白型, , 


.子程序 Mov_EBX_DWORD_Ptr_EDX, 空白型, , 


.子程序 Mov_EBX_DWORD_Ptr_EDI, 空白型, , 


.子程序 Mov_EBX_DWORD_Ptr_ESP, 空白型, , 


.子程序 Mov_EBX_DWORD_Ptr_ESI, 空白型, , 


.子程序 Mov_ECX_DWORD_Ptr_EAX, 空白型, , 


.子程序 Mov_ECX_DWORD_Ptr_EBP, 空白型, , 


.子程序 Mov_ECX_DWORD_Ptr_EBX, 空白型, , 


.子程序 Mov_ECX_DWORD_Ptr_ECX, 空白型, , 


.子程序 Mov_ECX_DWORD_Ptr_EDX, 空白型, , 


.子程序 Mov_ECX_DWORD_Ptr_EDI, 空白型, , 


.子程序 Mov_ECX_DWORD_Ptr_ESP, 空白型, , 


.子程序 Mov_ECX_DWORD_Ptr_ESI, 空白型, , 


.子程序 Mov_EDX_DWORD_Ptr_EAX, 空白型, , 


.子程序 Mov_EDX_DWORD_Ptr_EBP, 空白型, , 


.子程序 Mov_EDX_DWORD_Ptr_EBX, 空白型, , 


.子程序 Mov_EDX_DWORD_Ptr_ECX, 空白型, , 


.子程序 Mov_EDX_DWORD_Ptr_EDX, 空白型, , 


.子程序 Mov_EDX_DWORD_Ptr_EDI, 空白型, , 


.子程序 Mov_EDX_DWORD_Ptr_ESI, 空白型, , 


.子程序 Mov_EDX_DWORD_Ptr_ESP, 空白型, , 


.子程序 Mov_EAX_EBP, 空白型, , 


.子程序 Mov_EAX_EBX, 空白型, , 


.子程序 Mov_EAX_ECX, 空白型, , 


.子程序 Mov_EAX_EDI, 空白型, , 


.子程序 Mov_EAX_EDX, 空白型, , 


.子程序 Mov_EAX_ESI, 空白型, , 


.子程序 Mov_EAX_ESP, 空白型, , 


.子程序 Mov_EBX_EBP, 空白型, , 


.子程序 Mov_EBX_EAX, 空白型, , 


.子程序 Mov_EBX_ECX, 空白型, , 


.子程序 Mov_EBX_EDI, 空白型, , 


.子程序 Mov_EBX_EDX, 空白型, , 


.子程序 Mov_EBX_ESI, 空白型, , 


.子程序 Mov_EBX_ESP, 空白型, , 


.子程序 Mov_ECX_EBP, 空白型, , 


.子程序 Mov_ECX_EAX, 空白型, , 


.子程序 Mov_ECX_EBX, 空白型, , 


.子程序 Mov_ECX_EDI, 空白型, , 


.子程序 Mov_ECX_EDX, 空白型, , 


.子程序 Mov_ECX_ESI, 空白型, , 


.子程序 Mov_ECX_ESP, 空白型, , 


.子程序 Mov_EDX_EBP, 空白型, , 


.子程序 Mov_EDX_EBX, 空白型, , 


.子程序 Mov_EDX_ECX, 空白型, , 


.子程序 Mov_EDX_EDI, 空白型, , 


.子程序 Mov_EDX_EAX, 空白型, , 


.子程序 Mov_EDX_ESI, 空白型, , 


.子程序 Mov_EDX_ESP, 空白型, , 


.子程序 Mov_ESI_EBP, 空白型, , 


.子程序 Mov_ESI_EBX, 空白型, , 


.子程序 Mov_ESI_ECX, 空白型, , 


.子程序 Mov_ESI_EDI, 空白型, , 


.子程序 Mov_ESI_EAX, 空白型, , 


.子程序 Mov_ESI_EDX, 空白型, , 


.子程序 Mov_ESI_ESP, 空白型, , 


.子程序 Mov_ESP_EBP, 空白型, , 


.子程序 Mov_ESP_EBX, 空白型, , 


.子程序 Mov_ESP_ECX, 空白型, , 


.子程序 Mov_ESP_EDI, 空白型, , 


.子程序 Mov_ESP_EAX, 空白型, , 


.子程序 Mov_ESP_EDX, 空白型, , 


.子程序 Mov_ESP_ESI, 空白型, , 


.子程序 Mov_EDI_EBP, 空白型, , 


.子程序 Mov_EDI_EAX, 空白型, , 


.子程序 Mov_EDI_EBX, 空白型, , 


.子程序 Mov_EDI_ECX, 空白型, , 


.子程序 Mov_EDI_EDX, 空白型, , 


.子程序 Mov_EDI_ESI, 空白型, , 


.子程序 Mov_EDI_ESP, 空白型, , 


.子程序 Mov_EBP_EDI, 空白型, , 


.子程序 Mov_EBP_EAX, 空白型, , 


.子程序 Mov_EBP_EBX, 空白型, , 


.子程序 Mov_EBP_ECX, 空白型, , 


.子程序 Mov_EBP_EDX, 空白型, , 


.子程序 Mov_EBP_ESI, 空白型, , 


.子程序 Mov_EBP_ESP, 空白型, , 


.子程序 Push, 空白型, , 
.参数 i, 整数型, , 



.子程序 Push_DWORD_Ptr, 空白型, ,   
.参数 i, 整数型, , 



.子程序 Push_EAX, 空白型, , 


.子程序 Push_ECX, 空白型, , 


.子程序 Push_EDX, 空白型, , 


.子程序 Push_EBX, 空白型, , 


.子程序 Push_ESP, 空白型, , 


.子程序 Push_EBP, 空白型, , 


.子程序 Push_ESI, 空白型, , 


.子程序 Push_EDI, 空白型, , 


.子程序 Lea_EAX_DWORD_Ptr_EAX_Add, 空白型, , 
.参数 i, 整数型, , 



.子程序 Lea_EAX_DWORD_Ptr_EBX_Add, 空白型, , 
.参数 i, 整数型, , 



.子程序 Lea_EAX_DWORD_Ptr_ECX_Add, 空白型, , 
.参数 i, 整数型, , 



.子程序 Lea_EAX_DWORD_Ptr_EDX_Add, 空白型, , 
.参数 i, 整数型, , 



.子程序 Lea_EAX_DWORD_Ptr_ESI_Add, 空白型, , 
.参数 i, 整数型, , 



.子程序 Lea_EAX_DWORD_Ptr_ESP_Add, 空白型, , 
.参数 i, 整数型, , 



.子程序 Lea_EAX_DWORD_Ptr_EBP_Add, 空白型, , 
.参数 i, 整数型, , 



.子程序 Lea_EAX_DWORD_Ptr_EDI_Add, 空白型, , 
.参数 i, 整数型, , 



.子程序 Lea_EBX_DWORD_Ptr_EAX_Add, 空白型, , 
.参数 i, 整数型, , 



.子程序 Lea_EBX_DWORD_Ptr_ESP_Add, 空白型, , 
.参数 i, 整数型, , 



.子程序 Lea_EBX_DWORD_Ptr_EBX_Add, 空白型, , 
.参数 i, 整数型, , 



.子程序 Lea_EBX_DWORD_Ptr_EDX_Add, 空白型, , 
.参数 i, 整数型, , 



.子程序 Lea_EBX_DWORD_Ptr_EDI_Add, 空白型, , 
.参数 i, 整数型, , 



.子程序 Lea_EBX_DWORD_Ptr_EBP_Add, 空白型, , 
.参数 i, 整数型, , 



.子程序 Lea_EBX_DWORD_Ptr_ESI_Add, 空白型, , 
.参数 i, 整数型, , 



.子程序 Lea_ECX_DWORD_Ptr_EAX_Add, 空白型, , 
.参数 i, 整数型, , 



.子程序 Lea_ECX_DWORD_Ptr_ESP_Add, 空白型, , 
.参数 i, 整数型, , 



.子程序 Lea_ECX_DWORD_Ptr_EBX_Add, 空白型, , 
.参数 i, 整数型, , 



.子程序 Lea_ECX_DWORD_Ptr_ECX_Add, 空白型, , 
.参数 i, 整数型, , 



.子程序 Lea_ECX_DWORD_Ptr_EDX_Add, 空白型, , 
.参数 i, 整数型, , 



.子程序 Lea_ECX_DWORD_Ptr_EDI_Add, 空白型, , 
.参数 i, 整数型, , 



.子程序 Lea_ECX_DWORD_Ptr_EBP_Add, 空白型, , 
.参数 i, 整数型, , 



.子程序 Lea_ECX_DWORD_Ptr_ESI_Add, 空白型, , 
.参数 i, 整数型, , 



.子程序 Lea_EDX_DWORD_Ptr_EAX_Add, 空白型, , 
.参数 i, 整数型, , 



.子程序 Lea_EDX_DWORD_Ptr_ESP_Add, 空白型, , 
.参数 i, 整数型, , 



.子程序 Lea_EDX_DWORD_Ptr_EBX_Add, 空白型, , 
.参数 i, 整数型, , 



.子程序 Lea_EDX_DWORD_Ptr_ECX_Add, 空白型, , 
.参数 i, 整数型, , 



.子程序 Lea_EDX_DWORD_Ptr_EDX_Add, 空白型, , 
.参数 i, 整数型, , 



.子程序 Lea_EDX_DWORD_Ptr_EDI_Add, 空白型, , 
.参数 i, 整数型, , 



.子程序 Lea_EDX_DWORD_Ptr_EBP_Add, 空白型, , 
.参数 i, 整数型, , 



.子程序 Lea_EDX_DWORD_Ptr_ESI_Add, 空白型, , 
.参数 i, 整数型, , 



.子程序 Pop_EAX, 空白型, , 


.子程序 Pop_EBX, 空白型, , 


.子程序 Pop_ECX, 空白型, , 


.子程序 Pop_EDX, 空白型, , 


.子程序 Pop_ESI, 空白型, , 


.子程序 Pop_ESP, 空白型, , 


.子程序 Pop_EDI, 空白型, , 


.子程序 Pop_EBP, 空白型, , 


.子程序 Mov_DWORD_Ptr_EAX_EAX, 空白型, , 


.子程序 Mov_DWORD_Ptr_EAX_EBX, 空白型, , 


.子程序 Mov_DWORD_Ptr_EAX_ECX, 空白型, , 


.子程序 Mov_DWORD_Ptr_EAX_EDX, 空白型, , 


.子程序 Mov_DWORD_Ptr_EBX_EAX, 空白型, , 


.子程序 Mov_DWORD_Ptr_EBX_EBX, 空白型, , 


.子程序 Mov_DWORD_Ptr_EBX_ECX, 空白型, , 


.子程序 Mov_DWORD_Ptr_EBX_EDX, 空白型, , 


.子程序 Mov_DWORD_Ptr_ECX_EAX, 空白型, , 


.子程序 Mov_DWORD_Ptr_ECX_EBX, 空白型, , 


.子程序 Mov_DWORD_Ptr_ECX_ECX, 空白型, , 


.子程序 Mov_DWORD_Ptr_ECX_EDX, 空白型, , 


.子程序 Mov_DWORD_Ptr_EDX_EAX, 空白型, , 


.子程序 Mov_DWORD_Ptr_EDX_EBX, 空白型, , 


.子程序 Mov_DWORD_Ptr_EDX_ECX, 空白型, , 


.子程序 Mov_DWORD_Ptr_EDX_EDX, 空白型, , 
.参数 i, 整数型, , 



.子程序 SUB_ESP, 空白型, , 
.参数 i, 整数型, , 



.子程序 Mov_DWORD_Ptr_ESP, 空白型, , 
.参数 i, 整数型, , 



.子程序 Mov_DWORD_Ptr_ESP_ADD_EAX, 空白型, , 
.参数 i, 整数型, , 



.子程序 Mov_DWORD_Ptr_ESP_ADD, 空白型, , 
.参数 x, 整数型, , 
.参数 y, 整数型, , 



.子程序 Mov_DWORD_Ptr_EAX_ADD, 空白型, , 
.参数 x, 整数型, , 
.参数 y, 整数型, , 



.子程序 Mov_DWORD_Ptr_ECX_ADD_EAX, 空白型, , 
.参数 i, 整数型, , 



.子程序 Xor_EDI_EDI, 空白型, , 


.子程序 字节集还原, 字节集, , 网络游戏_公用转换_将一串十六进制文本还原为字节集
.参数 文本, 文本型, , 如“00BFAD00AFD4FD4F9E054F9FF91FC5FF2076FBAFDB071044”，或者是“{206,210,202,199}”之类
.参数 十六进制, 逻辑型, 可空, 如果未指明则为十六进制文本，如果为假则为十进制文本



.子程序 查看字节集, 文本型, , 以文本表示字节集，适合于字节集的调试用
.参数 字节集, 字节集, , 要查看的字节集



.子程序 取出汇编代码, 字节集, , 取出汇编代码：重要说明：如未执行->运行汇编代码 时，请不进行清空汇编代码
.参数 是否清空, 逻辑型, 可空, 取出时是否进行清空



.子程序 运行汇编代码, 整数型, , 执行->运行汇编代码 时，将清空汇编代码
.参数 参数个数, 整数型, 可空, 
.参数 参数数组, 整数型, 可空 数组, 



.类模块 驱动隐藏进程类, , , 

.子程序 隐藏进程, 逻辑型, , 
.参数 进程ID, 整数型, 可空, 如果空为隐藏自身进程



.子程序 显示进程, 逻辑型, , 


.子程序 是否安装成功, 逻辑型, , 


.子程序 驱动卸载, 逻辑型, , 


.类模块 输入法注入类, , , 

.子程序 输入法注入, 逻辑型, , 公开DLL子程序必须为：RunDllHostCallBack
.参数 注入DLL, 文本型, , 被注入DLL目录 如：C：\1.dll
.参数 输入法名称, 文本型, 可空, 空为：“Windows标准输入法扩展服务”



.子程序 注入卸载, 空白型, , 


.子程序 停止注入, 空白型, , 


.子程序 设置默认输入法, 空白型, , 
.参数 输入法句柄, 整数型, , 



.子程序 句柄卸载输入法, 整数型, , 
.参数 输入法句柄, 整数型, , 



.子程序 获得输入法标识, 文本型, , 
.参数 输入法句柄, 整数型, , 



.程序集 __HIDDEN_TEMP_MOD__, , , 

.子程序 文本投递, 空白型, , 向指定窗口句柄的窗口中后台发送文本内容,对游戏有效!(无返回值)
.参数 窗口句柄, 整数型, , 接收消息的窗口句柄
.参数 文本内容, 文本型, , 发送的文本内容



.子程序 文本发送, 空白型, , 向指定编辑框后台发送文本内容(无返回值)
.参数 临时句柄, 整数型, , 接收消息的编辑框的句柄
.参数 临时内容, 文本型, , 发送的文本内容



.子程序 文本全选, 空白型, , 选定指定文本 必要时会自动激活窗口(无返回值)
.参数 句柄, 整数型, 可空, 文本所在处的窗口句柄   可空为当前窗口焦点处
.参数 是否全选, 逻辑型, 可空, 可空为假:取消全选  真:全选



.子程序 文本复制, 文本型, , 复制指定文本 必要时会自动激活窗口
.参数 句柄, 整数型, 可空, 文本所在处的窗口句柄   可空为当前窗口焦点处



.子程序 文本粘贴, 空白型, , 粘贴指定文本 必要时会自动激活窗口(无返回值)
.参数 句柄, 整数型, 可空, 欲粘贴文本处的窗口句柄  可空为当前窗口焦点处
.参数 文本内容, 文本型, 可空, 欲粘贴的文本内容   可空:清除内容



.子程序 按下控件, 空白型, , 向指定按钮(控件)发送按钮鼠标单击的消息(无返回值)
.参数 临时按钮句柄, 整数型, , 按钮控件的句柄
.参数 临时状态, 整数型, 可空, 可空:单击_  3 #按下_ 4 #放开_



.子程序 按键消息, 空白型, , 向指定窗口句柄的窗口中发送按键消息(无返回值)
.参数 窗口句柄, 整数型, , 接收消息的窗口句柄
.参数 键代码, 整数型, , 按键的键代码
.参数 状态, 整数型, 可空, 可空:按键(3+4)  1 #按键_  2 功能键方式(按下+放开)  3 #按下_  4 #放开_
.参数 继承, 逻辑型, 可空, 默认为假:不继到子窗口 真:继承到所有子级窗口



.子程序 按组合键消息, 空白型, , 向指定窗口句柄的窗口中发送组合按键的消息,游戏中有效!(无返回值)
.参数 窗口句柄, 整数型, , 接收消息的窗口句柄
.参数 键代码, 整数型, , 按键的键代码
.参数 功能键码1, 整数型, , 功能键的键代码
.参数 功能键码2, 整数型, 可空, 功能键的键代码(可选)
.参数 功能键码3, 整数型, 可空, 功能键的键代码(可选)
.参数 继承, 逻辑型, 可空, 默认为假:不继到子窗口 真:继承到所有子级窗口



.子程序 按键, 空白型, , 执行模拟按键(无返回值)
.参数 键代码, 整数型, , 键代码
.参数 状态, 整数型, 可空, 可空:按键(按下+放开)  1 #按键_  3 #按下_  4 #放开_  如果状态大于等于5则为按下与放开之间的延时,可解决某些屏蔽
.参数 功能键方式, 逻辑型, 可空, 默认为普通键, 真:功能键方式模拟,如ctrl键win键home键光标键等



.子程序 按组合键, 空白型, , 执行模拟组合按键(无返回值)
.参数 键码, 整数型, , 键代码
.参数 功能键码1, 整数型, , 功能键代码
.参数 功能键码2, 整数型, 可空, 功能键代码(可选)
.参数 功能键码3, 整数型, 可空, 功能键代码(可选)



.子程序 鼠标移动, 空白型, , 模拟鼠标移动(无返回值)
.参数 窗口句柄, 整数型, 可空, 可空:相对桌面移动鼠标  句柄有效则相对窗口中坐标移动
.参数 水平坐标, 整数型, , 水平坐标
.参数 垂直坐标, 整数型, , 垂直坐标



.子程序 鼠标键, 空白型, , 模拟鼠标按键
.参数 键, 整数型, 可空, 可空:为左键  1 #左键_   2 #右键_   3 #中键_
.参数 控制, 整数型, 可空, 可空:为单击  1 #单击_   2 #双击_   3 #按下_  4 #放开_



.子程序 鼠标消息, 空白型, , 向指定窗口发送鼠标动作消息
.参数 窗口句柄, 整数型, 可空, 可空:为桌面超级列表框句柄  接收鼠标消息窗口句柄
.参数 水平坐标, 整数型, 可空, 可空:为原水平坐标不变  移动目标鼠标水平坐标 (注:坐标为参数一窗口句柄中的坐标)
.参数 垂直坐标, 整数型, 可空, 可空:为原垂直坐标不变  移动目标鼠标垂直坐标
.参数 键, 整数型, 可空, 可空:为左键_  1 #左键_   2 #右键_   3 #中键_  4 #中键上滚动_ 5 #中键下滚动_(滚动前后请按下放开中键)
.参数 控制, 整数型, 可空, 可空:为单击_  1 #单击_   2 #双击_   3 #按下_  4 #放开_



.子程序 鼠标记位, 坐标型, , 记录当前鼠标坐标(返回所记录的当前鼠标 坐标_)


.子程序 鼠标归位, 空白型, , 恢复当前鼠标坐标到"鼠标记录"的坐标点或移动鼠标到指定点
.参数 坐标, 坐标型, 可空, 可空:恢复到上次记录的坐标点



.子程序 鼠标限制, 空白型, , 限制鼠标的活动范围
.参数 临时左边, 整数型, 可空, 可空为0
.参数 临时顶边, 整数型, 可空, 可空为0
.参数 临时右边, 整数型, 可空, 可空为屏幕宽度
.参数 临时底边, 整数型, 可空, 可空为屏幕高度



.子程序 句柄是否有效, 逻辑型, , 判断窗口句柄是否有效(返回真,无效返回假)
.参数 窗口句柄, 整数型, , 



.子程序 取句柄, 整数型, , 通过进程,类名或标题关键字来取窗口句柄(返回第一个符合条件的句柄,失败返回-1)
.参数 进程名, 文本型, 可空, 欲取窗口句柄的窗口程序进程名(注意大小写)
.参数 类名, 文本型, 可空, 欲取窗口句柄的窗口类名
.参数 标题, 文本型, 可空, 欲取窗口句柄的窗口标题关键字,模糊匹配



.子程序 取句柄数组, 整数型, , 通过进程,类名或标题关键字来取窗口句柄(返回符合条件的句柄数目,失败返回0)
.参数 句柄数组, 整数型, 数组, 返回的窗口句柄数组
.参数 进程名, 文本型, 可空, 欲取窗口句柄的窗口程序进程名(注意大小写)
.参数 类名, 文本型, 可空, 欲取窗口句柄的窗口类名
.参数 标题, 文本型, 可空, 欲取窗口句柄的窗口标题关键字



.子程序 取坐标句柄, 整数型, , 取指定坐标位置所在窗口组件的句柄(返回句柄)
.参数 水平位置, 整数型, , 句柄组件的x坐标“X轴光标”
.参数 垂直位置, 整数型, , 句柄组件的y坐标“Y轴光标”



.子程序 取焦点句柄, 整数型, , 取光标焦点处窗口句柄(返回句柄,失败返回0)


.子程序 取子窗口, 整数型, , 查找指定窗口的子级窗口(返回子窗口句柄)
.参数 父句柄, 整数型, 可空, 指定父窗口句柄  可空:为桌面.找顶级窗口
.参数 子类名, 文本型, 可空, 欲查找的子窗口类名
.参数 子标题, 文本型, 可空, 
.参数 起始句柄, 整数型, 可空, 从该句柄后开始查找, 可空:找第一个符合条件的



.子程序 枚举窗口, 整数型, , 枚举所有窗口,返回窗口句柄数目,失败返回0
.参数 句柄数组, 整数型, 可空 数组, 返回的所有窗口句柄数组



.子程序 枚举窗口信息, 整数型, , 枚举所有可见窗口的句柄的窗口信息(返回数组数目,失败返回0)
.参数 临时窗口信息, 窗口信息型, 数组, 枚举出来的窗口信息数组



.子程序 窗口是否当前, 逻辑型, , 判断指定窗口是否为当前窗口(为当前接收按键消息的窗口返回真,否则返回假)
.参数 进程名, 文本型, 可空, 欲判断窗口的程序进程名(注意区分大小写)
.参数 窗口类名, 文本型, 可空, 欲判断窗口的类名(注意区分大小写)
.参数 窗口标题, 文本型, 可空, 欲判断窗口的标题关键字



.子程序 取窗口内顶点, 坐标型, , 取指定窗口句柄的窗口客户区(左上角)顶点位置
.参数 窗口句柄, 整数型, 可空, 可空:则取当前窗口句柄的位置



.子程序 取窗口内大小, 空白型, , 取指定窗口句柄的窗口客户区的大小
.参数 窗口句柄, 整数型, 可空, 可空:则取当前窗口大小
.参数 临时宽度, 整数型, 参考, 返回的窗口宽度
.参数 临时高度, 整数型, 参考, 指定的窗口高度



.子程序 取标题, 文本型, , 取指定窗口句柄的窗口标题(返回窗口标题,失败返回空文本)
.参数 窗口句柄, 整数型, , 指定的窗口句柄



.子程序 取类名, 文本型, , 取指定窗口句柄的窗口类名(返回窗口类名,失败返回空)
.参数 窗口句柄, 整数型, , 指定的窗口句柄



.子程序 取窗口进程, 文本型, , 取指定窗口句柄的窗口程序进程名(返回进程名,失败返回空文本)
.参数 窗口句柄, 整数型, , 



.子程序 取窗口进程ID, 整数型, , 取指定窗口句柄的窗口进程ID(返回进程ID,失败返回-1)
.参数 窗口句柄, 整数型, , 



.子程序 取点标题, 文本型, , 取出指定点的组件上的文字内容或标题(返回文字内容)
.参数 水平位置, 整数型, 可空, (可空为鼠标当前坐标x)   文字所在的x坐标“X轴光标”
.参数 垂直位置, 整数型, 可空, (可空为鼠标当前坐标y)   文字所以的y坐标“Y轴光标”



.子程序 更改标题, 逻辑型, , 更改指定窗口句柄的窗口标题(成功返回真,失败返回假)
.参数 窗口句柄, 整数型, 可空, 可空:则更改当前窗口的标题
.参数 新标题, 文本型, , 新的窗口标题



.子程序 窗口状态控制, 逻辑型, , 控制窗口状态(成功返回真,失败返回假)
.参数 临时句柄, 整数型, , 窗口句柄
.参数 状态, 整数型, , 0 隐藏取消激活 1 还原激活 2 最小化激活 3 最大化激活 4 还原 6 最小化取消激活 7 最小化 9 还原激活



.子程序 窗口隐藏显示, 逻辑型, , 显示隐藏指定句柄的窗口(如果显示则隐藏:返回假,如果隐藏则显示:返回真)
.参数 窗口句柄, 整数型, 可空, 要显示/隐藏的窗口句柄(可空:则显示/隐藏上次的窗口,如果为初次使用则为当前窗口)



.子程序 窗口透明化, 逻辑型, , 设置窗口透明状态(成功返回真,失败返回假)
.参数 临时句柄, 整数型, , 设置透明化窗口的句柄
.参数 临时透明度, 字节型, 可空, 设置整个窗口的透明度  取值范围是[0,255] 可空为不设定此参数
.参数 临时透明色, 整数型, 可空, (#颜色)指定某颜色为完全透明(完全透明处不属于该窗口)  可空为不指定
.参数 鼠标穿透, 逻辑型, 可空, 可空为假   真:窗口被鼠标穿透



.子程序 窗口移动, 空白型, , 移动指定窗口(无返回值)
.参数 临时句柄, 整数型, , 欲移动窗口的句柄
.参数 窗口新左边, 整数型, 可空, 可空:原左边不变
.参数 窗口新顶边, 整数型, 可空, 可空:原顶边不变
.参数 窗口新宽度, 整数型, 可空, 可空:原宽度不变
.参数 窗口新高度, 整数型, 可空, 可空:原高度不变



.子程序 窗口最大化, 空白型, , 将指定窗口最大化(无返回值)
.参数 临时句柄, 整数型, , 欲最大化窗口的句柄



.子程序 窗口最小化, 空白型, , 将指定窗口最小化(无返回值)
.参数 临时句柄, 整数型, , 欲最小化窗口的句柄



.子程序 窗口置焦点, 逻辑型, , 将输入焦点设到指定的窗口。如有必要,会激活窗口.不能对最小化窗口设置(成功返回真,失败返回假)
.参数 句柄, 整数型, , 欲置焦点的窗口句柄



.子程序 窗口置父, 整数型, , 指定一个窗口的新父(返回前一个父窗口的句柄)
.参数 窗口句柄, 整数型, , 子窗口句柄
.参数 新父, 整数型, 可空, 新的父窗口句柄  默认为0:置顶级窗口  -1:嵌入桌面



.子程序 窗口最前, 空白型, , 将指定窗口设为总在最前.(注意参数2,真:总在最前)
.参数 句柄, 整数型, , 欲设置的窗口句柄
.参数 是否总在最前, 逻辑型, 可空, 默认为假:取消总在最前  真:总在最前



.子程序 窗口禁止关闭, 逻辑型, , 控制窗口关闭按钮,(允许/禁止)关闭窗口 (成功返回真,失败返回假)
.参数 窗口句柄, 整数型, , 欲禁止或解除禁止的窗口句柄
.参数 禁止关闭, 逻辑型, 可空, 可空为禁止关闭, 假:允许关闭, 真:禁止关闭



.子程序 窗口销毁, 空白型, , 将指定窗口销毁(无返回值)
.参数 临时句柄, 整数型, , 欲销毁窗口的句柄



.子程序 取鼠标坐标, 坐标型, , 取当前鼠标所在坐标(返回坐标)
.参数 句柄, 整数型, 可空, 鼠标坐标所在的窗口句柄,取出鼠标所在窗口中的坐标 可空为:在屏幕中的坐标



.子程序 取坐标距离, 整数型, , 返回两坐标点之间的距离
.参数 坐标1, 坐标型, , 
.参数 坐标2, 坐标型, , 



.子程序 超级延时, 空白型, , 高精度延时,cpu占用低,窗口不卡死,一次最大可延时几年 (无返回值)
.参数 延时间隔, 整数型, , 1000微秒 = 1毫秒 ； 1000毫秒 = 1秒
.参数 延时单位, 整数型, 可空, 可空:毫秒  0 毫秒  1 微秒  2 秒  3 分  4 小时  5 天



.子程序 置分辨率, 空白型, , 设置屏幕分辨率(无返回值)
.参数 色深, 短整数型, 可空, 新的色深 可空:不改变原先设定
.参数 屏幕宽度, 短整数型, 可空, 新的屏幕宽度 可空:不改变原先设定
.参数 屏幕高度, 短整数型, 可空, 新的屏幕高度 可空:不改变原先设定
.参数 屏幕刷新率, 短整数型, 可空, 新的屏幕刷新率 可空:不改变原先设定



.子程序 取分辨率, 空白型, , 获取屏幕分辨率(无返回值)
.参数 色深, 短整数型, 参考 可空, 
.参数 屏幕宽度, 短整数型, 参考 可空, 
.参数 屏幕高度, 短整数型, 参考 可空, 
.参数 屏幕刷新率, 短整数型, 参考 可空, 



.子程序 取特殊目录, 文本型, , 取特定的目录(返回所要取的指定目录名 无效返回空)
.参数 欲获取目录类型, 整数型, 可空, 0我的桌面 1临时目录 5我的文档 6我的收藏夹 7我的启动 11我的开始菜单 20系统字体 36Windows安装目录 37系统目录  [99更多]



.子程序 执行文件, 逻辑型, , 执行文件夹或文件或命令(成功返回真,失败返回假)
.参数 欲操作文件名, 文本型, , 欲操作(文件)或(文件夹的名称)或(网址)
.参数 命令行, 文本型, 可空, 执行文件的命令行,没有则设为空
.参数 窗口方式, 整数型, 可空, 可空为0:普通激活方式  1 隐藏窗口 2 最小化窗口



.子程序 下载, 字节集, , 读网络文件,并下载文件到本地(成功返回网络文件字节集数据,失败返回空字节集)
.参数 网址, 文本型, , 欲访问的网络地址
.参数 保存路径, 文本型, 可空, 可空:仅返回字节集数据,将下载的内容保存到本地文件



.子程序 创建网页快捷方式, 逻辑型, , 创建网页快捷方式 (成功返回真,失败返回假)
.参数 保存路径, 文本型, , 全路径文件名
.参数 网页地址, 文本型, , URL
.参数 ico图标, 文本型, 可空, 图标路径 可空:默认为网页快捷方式图标
.参数 快捷键, 整数型, 可空, CTRL+ALT+? (A=1601 B=1602 C=1603 ...)



.子程序 进程是否存在, 逻辑型, , 判断指定进程是否存在(此判断与进程其它信息无关联)(存在返回真,不存在或失败返回假)
.参数 进程名, 文本型, , 欲检测的进程名



.子程序 进程枚举, 整数型, , 失败返回0，成功返回进程数量(该命令为高级成员命令)
.参数 进程信息, 进程信息型, 可空 数组, 返回的进程信息 数组



.子程序 进程取ID, 整数型, , 取指定进程的进程ID(返回第一个进程ID,失败返回-1)
.参数 进程名, 文本型, , 程序进程名
.参数 区分大小写, 逻辑型, 可空, 默认不区分进程名大小写



.子程序 进程暂停, 逻辑型, , 将指定进程暂停(成功返回真,失败返回假)
.参数 进程ID, 整数型, , 欲被暂停进程的进程ID
.参数 状态, 逻辑型, 可空, 可空为真:暂停进程  假:恢复进程



.子程序 进程结束, 逻辑型, , 终止一个进程(成功返回真,失败返回假)
.参数 进程ID, 整数型, , 欲结束的进程ID



.子程序 取程序命令行, 文本型, , 取指定程序的命令行参数,要求取命令行程序权限不低于被取程序的权限(返回命令行参数,无命令行或失败返回空文本)
.参数 进程名, 文本型, , 欲取命令行参数的进程名
.参数 区分大小写, 逻辑型, 可空, 默认不区分进程名大小写



.子程序 取进程路径及命令行, 文本型, , 获取目标进程的映像路径及命令行参数。(失败返回空文本)
.参数 进程ID, 整数型, , 



.子程序 到任意进制, 文本型, , 可以将从二进制到三十六进制的数值随意进行转换(返回转换后的文本)
.参数 被转换文本, 文本型, , 欲被转换的文本(不可以转换负数以及小数)
.参数 被转换进制, 整数型, , 被转换文本的进制(2-36之间)
.参数 转换的进制, 整数型, , 要转换到的进制(2-36之间)



.子程序 到十进制, 整数型, , 将2,8,16进制文件转换到10进制数值(返回十进制数)
.参数 文本, 文本型, , 2,8,16进制文件
.参数 进制, 整数型, 可空, 默认为十六进制 2为二进制，8为八进制，16为16进制



.子程序 十六到十, 整数型, , 将十六进制转换成十进制(返回十进制文本)
.参数 十六进制文本, 文本型, , 待转换的十六进制文本
.参数 返回结果, 文本型, 参考 可空, 返回文本结果(如十进制数超出整数范围,可通过返回结果获得十进制文本)



.子程序 十到十六, 文本型, , 将十进制转换成十六进制(返回十六进制文本)
.参数 十进制数, 长整数型, , 待转换的十进制数
.参数 是否不去零, 逻辑型, 可空, 默认为假:去0  真:不去0



.子程序 十到二, 文本型, , 将十进制转换成二进制(返回二进制文本)
.参数 十进制数, 整数型, , 欲转换的十进制



.子程序 二到十, 整数型, , 将二进制转换成十进制(返回十进制整数)
.参数 二进制文本, 文本型, , 欲转换的二进制



.子程序 十到八, 文本型, , 将十进制转换成八进制(返回八进制文本)
.参数 十进制数, 长整数型, , 欲转换的十进制数



.子程序 八到十, 整数型, , 将八进制转换成十进制(返回十进制整数)
.参数 八进制文本, 文本型, , 欲转换的八进制文本



.子程序 创建线程, 整数型, , 创建一个线程来启动子程序(返回线程句柄)
.参数 线程子程序, 子程序指针, , 欲启动的线程子程序指针
.参数 传递参数, 整数型, 可空, 



.子程序 销毁线程, 逻辑型, , 强制结束指定线程,不推荐使用(无返回值)
.参数 线程句柄, 整数型, , 欲结束的线程号



.子程序 提升进程权限, 逻辑型, , 提升进程到指定权限( #备份_  #启动_  #关机_  #调试_)
.参数 目标进程, 整数型, 可空, 为空表示当前线程
.参数 权限类别, 文本型, 可空, 为空:#调试



.子程序 提升进程权限D, 逻辑型, , 成功返回真，把一个进程的权限提升到调试级权限
.参数 进程ID, 整数型, 可空, 可空为提升当前进程



.子程序 读内存字节型, 字节型, , 从内存中读取一个字节,失败返回失败内容(0-255)
.参数 进程ID, 整数型, , 进程ID
.参数 地址, 整数型, , 内存地址
.参数 失败内容, 字节型, 可空, 读内存失败后返回的内容 默认为0



.子程序 读内存短整数型, 短整数型, , 从内存中读取短整数型数据,失败返回失败内容
.参数 进程ID, 整数型, , 进程ID
.参数 地址, 整数型, , 内存地址
.参数 失败内容, 短整数型, 可空, 读内存失败后返回值的内容 默认为-1



.子程序 读内存整数型, 整数型, , 从内存中读取整数型数据,失败返回失败内容
.参数 进程ID, 整数型, , 
.参数 内存地址, 整数型, , 
.参数 失败内容, 整数型, 可空, 读内存失败后返回值的内容 默认为-1



.子程序 读内存长整数型, 长整数型, , 从内存中读取长整数型数据,失败返回失败内容
.参数 进程ID, 整数型, , 进程ID
.参数 地址, 整数型, , 内存地址
.参数 失败内容, 长整数型, 可空, 读内存失败后返回值的内容 默认为-1



.子程序 读内存小数型, 小数型, , 从内存中读取小数型数据,失败返回失败内容
.参数 进程ID, 整数型, , 进程ID
.参数 地址, 整数型, , 内存地址
.参数 失败内容, 小数型, 可空, 读内存失败后返回值的内容 默认为-1



.子程序 读内存双精度小数型, 双精度小数型, , 从内存中读取双精度小数型数据,失败返回失败内容
.参数 进程ID, 整数型, , 进程ID
.参数 地址, 整数型, , 内存地址
.参数 失败内容, 双精度小数型, 可空, 读内存失败后返回值的内容 默认为-1



.子程序 读内存日期时间型, 日期时间型, , 从内存中读取日期时间型数据,失败将返回100年1月1日
.参数 进程ID, 整数型, , 进程ID
.参数 地址, 整数型, , 内存地址



.子程序 读内存子程序指针, 子程序指针, , 从内存中读取子程序指针,失败返回空指针
.参数 进程ID, 整数型, , 进程ID
.参数 地址, 整数型, , 内存地址



.子程序 写内存文本型, 逻辑型, , 往内存中写入文本数据(成功返回真,失败返回假)
.参数 进程ID, 整数型, , 进程ID
.参数 地址, 整数型, , 内存地址
.参数 内容, 文本型, , 写入数据



.子程序 写内存整数型, 逻辑型, , 往内存中写入四字节数据(成功返回真,失败返回假)
.参数 进程ID, 整数型, , 进程ID
.参数 地址, 整数型, , 内存地址
.参数 变量, 整数型, , 写入数据



.子程序 写内存字节集, 逻辑型, , 往内存中写入字节集数据(成功返回真,失败返回假)
.参数 进程ID, 整数型, , 进程ID
.参数 地址, 整数型, , 内存地址
.参数 数据, 字节集, , 写入数据 如果为其它数据类型,可以用 到字节集() 将数据转换为字节集
.参数 写入长度, 整数型, 可空, 默认为全部数据,(参考: 1字节型 2短整数型 4长整数型,小数型,指针 8长整数型,双精度小数型,日期时间型)



.子程序 读游戏内存整数, 整数型, , 读取内存地址数据
.参数 进程ID, 整数型, , 游戏进程标识符
.参数 基址, 文本型, , 欲读取的内存基址(十六进制)
.参数 偏移1, 文本型, 可空, 没有请留空 (十六进制)
.参数 偏移2, 文本型, 可空, 没有请留空 (十六进制)
.参数 偏移3, 文本型, 可空, 没有请留空 (十六进制)
.参数 偏移4, 文本型, 可空, 没有请留空 (十六进制)



.子程序 读游戏内存文本, 文本型, , 读取内存地址数据
.参数 进程ID, 整数型, , 游戏进程标识符
.参数 基址, 文本型, , 欲读取的内存基址(十六进制)
.参数 偏移1, 文本型, 可空, 没有请留空 (十六进制)
.参数 偏移2, 文本型, 可空, 没有请留空 (十六进制)
.参数 偏移3, 文本型, 可空, 没有请留空 (十六进制)
.参数 偏移4, 文本型, 可空, 没有请留空 (十六进制)



.子程序 文件夹浏览, 文本型, , 浏览文件夹内支持创建文件夹 支持显示文件 编辑框 (返回被选择文件或文件夹路径)
.参数 标题, 文本型, 可空, 设置标题
.参数 显示文件, 逻辑型, 可空, 默认为假。
.参数 初始目录, 文本型, 可空, 设置一个初始目录,默认为我的电脑
.参数 地址栏, 逻辑型, 可空, 是否包含编辑框,可编辑,默认为假
.参数 新样式, 逻辑型, 可空, 有新建按钮及右键菜单,默认为真



.子程序 创建程序快捷方式, 逻辑型, , 创建程序快捷方式 (成功返回真,失败返回假)
.参数 lnk名称, 文本型, , 快捷方式保存全路径文件名
.参数 目标, 文本型, , 指向的文件全路径文件名
.参数 参数文本, 文本型, 可空, 执行文件的参数
.参数 图标文件, 文本型, 可空, 图标文件的路径  可空:为空时用目标的第一个图标
.参数 运行方式, 整数型, 可空, 1,常规方式，3,最大化，7,最小化
.参数 备注, 文本型, 可空, 快方式的备注信息
.参数 快捷键, 文本型, 可空, 启动快捷方式的快捷键  如“Ctrl+Alt+Y”



.子程序 文件搜索, 文本型, , 在指定目录下搜索文件,返回第一个符合条件的文件路径
.参数 临时目录, 文本型, , 欲寻找的目录
.参数 文件名, 文本型, , 欲寻找文件名
.参数 显示标签, 标签, , 用来显示搜索路径的标签



.子程序 文件夹同步, 空白型, , 将一个目录与另一个目录同步(自动将文件大小不同,多余的文件或目录删除,缺少的文件复制.)
.参数 服务器目录, 文本型, , 参考目录
.参数 本地目录, 文本型, , 欲被同步的目录



.子程序 文件夹进度同步, 空白型, , 将一个目录与另一个目录同步(自动复制本地缺少的文件,替换掉大小不同的文件)
.参数 服务器目录, 文本型, , 参考目录
.参数 本地目录, 文本型, , 欲被同步的目录
.参数 显示标签, 标签, , 显示当前同步文件的标签
.参数 进度条, 进度条, , 显示同步进度的进度条



.子程序 文件夹双进度同步, 空白型, , 将一个目录与另一个目录同步(自动复制本地缺少的文件,替换掉大小不同的文件)
.参数 服务器目录, 文本型, , 参考目录
.参数 本地目录, 文本型, , 欲被同步的目录
.参数 总进度, 进度条, , 显示同步进度的进度条
.参数 单进度, 进度条, , 
.参数 显示总进度, 标签, , 
.参数 显示单进度, 标签, , 
.参数 显示当前目录, 标签, , 
.参数 显示当前文件, 标签, , 
.参数 更新数, 标签, 可空, 



.子程序 文件夹同步清理, 空白型, , 将本地目录中多余的或不同的文件删除
.参数 服务器目录, 文本型, , 参考目录
.参数 本地目录, 文本型, , 欲清理的目录



.子程序 目录是否存在, 逻辑型, , 判断指定目录是否存在(存在返回真,不存在返回假)
.参数 目录名, 文本型, , 欲判断的目录



.子程序 取路径文件名, 文本型, , 取指定路径中的文件名(返回文件名)
.参数 路径, 文本型, , 完整路径



.子程序 路径收缩, 文本型, , 将指定路径收缩(返回收缩后的路径,无效返回空文本)如: c:\program files\ 收缩后为:c:\progra~1\ 
.参数 路径, 文本型, , 欲收缩的路径



.子程序 转换URL编码, 文本型, , 将URL文本进行编码(返回编码后的文本)
.参数 URL, 文本型, , 欲编码的文本



.子程序 转换URL解码, 文本型, , 将URL文本进行解码(返回解码后的文本)
.参数 URL, 文本型, , 欲解码的文本



.子程序 转换ASCII转Unicode, 字节集, , 将ASCII码转换为Unicode码 (返回转换后的字节集) [斩月]
.参数 ASCII文本, 文本型, , 欲转换的ASCII文本



.子程序 转换Unicode转Ansi, 文本型, , 将Unicode码转换为Ansi码 (返回转换后的文本)
.参数 Unicode, 字节集, , 欲转换的Unicode字节集



.子程序 转换Ansi转Unicode, 字节集, , 将Ansi码转换为Unicode码 (返回转换后的字节集)
.参数 Ansi, 文本型, , 欲转换的Ansi文本



.子程序 转换简体到繁体, 文本型, , 将简体中文转换成繁体中文(返回转换后的繁体内容) [斩月]
.参数 简体文本, 文本型, , 欲转换的文本内容



.子程序 转换繁体到简体, 文本型, , 将繁体中文转换成简体中文(返回转换后的简体内容) [斩月]
.参数 繁体文本, 文本型, , 欲转换的文本内容



.子程序 转换取键码, 整数型, , 取指定键码的按键名(返回键名,无效返回空文本)
.参数 键名, 文本型, , 欲取键码的键名(键名为按键后显示的内容 比如:A=65,a=97,$=36)



.子程序 转换取键名, 文本型, , 取指定按键名的键码(返回键码,无效返回零)
.参数 键码, 整数型, , 欲取键名的键码(键名为按键后显示的内容 比如:A=65,a=97,$=36)



.子程序 转换取区位码, 文本型, , 例：取区位码 (“吕”)
.参数 汉字, 文本型, , 



.子程序 转换取机内码, 文本型, , 例：取机内码 (“吕”)
.参数 汉字, 文本型, , 



.子程序 枚举子窗口, 整数型, , 枚举指定窗口的所有子级窗口或控件句柄,支持不可见子窗口或子控件,返回句柄数目,失败返回0
.参数 父窗口句柄, 整数型, 可空, 指定父窗口句柄.如果父窗口为0,则取出所有顶级窗口(含不可见窗口)
.参数 句柄数组, 整数型, 可空 数组, 返回的所有窗口句柄数组



.子程序 枚举任务窗口, 整数型, , 枚举指定窗口线程相关联的窗体句柄,返回窗口句柄数目,失败返回0
.参数 窗口句柄, 整数型, , 
.参数 句柄数组, 整数型, 可空 数组, 返回的所有窗口句柄数组



.子程序 查看字节集, 文本型, , 以易语言文本方式查看字节集,返回文本内容   如:{ 102, 204, 14, 5 }
.参数 字节集, 字节集, , 欲查看的字节集
.参数 起始位置, 整数型, 可空, 查看字节集的起始查看位置
.参数 查看长度, 整数型, 可空, 查看的长度,默认为查看全部



.子程序 还原字节集, 字节集, , 还原易语言形式字节集的文本到字节集
.参数 文本, 文本型, , 如: { 102, 204, 14, 5 }



.子程序 转换取按键码, 整数型, , 取按键名的按键码(返回按键码)
.参数 按键名, 文本型, , 按键名



.子程序 转换取按键名, 文本型, , 取按键码的按键名(返回按键名)
.参数 键代码, 整数型, , 按键码



.子程序 创建定时器, 整数型, , 返回成功创建定时器的标志
.参数 窗口句柄, 整数型, 可空, 为空则为系统级定时器(通常为空)
.参数 时钟周期, 整数型, , 毫秒级单位 1秒=1000毫秒
.参数 定时器事件处理, 子程序指针, , 定时器触发事件



.子程序 销毁定时器, 整数型, , 销毁已经创建的定时器(定时器不使用了一定要销毁!)
.参数 窗口句柄, 整数型, 可空, 创建定时器时指定的句柄
.参数 标志, 整数型, , 创建定时器时所返回的标志



.子程序 打开网页, 逻辑型, , 打开指定网址(成功返回真,失败返回假)
.参数 网址, 文本型, , 欲打开的网页地址



.子程序 查看字节集2, 文本型, , 以十六进制文本方式查看字节集,返回文本内容   如:45 3F 58 1D 0A
.参数 字节集, 字节集, , 欲查看的字节集
.参数 起始位置, 整数型, 可空, 查看字节集的起始查看位置
.参数 查看长度, 整数型, 可空, 查看的长度,默认为查看全部



.子程序 还原字节集2, 字节集, , 还原十六进制字符串形式字节集的文本到字节集
.参数 文本, 文本型, , 如: 45 3F 58 1D 0A



.子程序 更改类名, 文本型, , 更改一次指定类名(必须在欲更改的类名的程序运行前-执行)(如果成功则返回更改后的类名)
.参数 新类名, 文本型, 可空, 更改后的新类名 可空为随机类名5-20位随机字母数字的组合
.参数 旧类名, 文本型, 可空, 欲更改的类名 可空则默认为易语言程序窗口类名“Afx:10000000:b:10011:1900015:0”



.子程序 取本机IP, 整数型, , 返回IP数
.参数 欲装载的数组, 文本型, 可空 数组, 取出来的IP



.子程序 取操作系统, 文本型, , 获取操作系统信息
.参数 版本号, 文本型, 可空, 获取的操作系统的版本号
.参数 内部版本号, 文本型, 可空, 获取的操作系统的内部版本号



.子程序 取浏览器版本, 文本型, ,  获得IE的版本(返回IE版本)
.参数 内部版本号, 文本型, 可空, 获以的内部版本号



.子程序 取计算机名, 文本型, , 获取计算机名


.子程序 取系统用户名, 文本型, , 获取当前系统的用户名


.子程序 取配置项名称, 整数型, , 取配置文件指定节名中所有配置项名称(成功返回配置项名称数目,失败返回-1)
.参数 配置文件名, 文本型, , 指定配置文件的名称，通常以.ini作为文件名后缀(可为任意后缀)
.参数 节名称, 文本型, , 包含欲读入配置项所处节的名称。
.参数 配置项名称, 文本型, 参考 数组, 返回节名中所有配置项名称的文本数组



.子程序 取DOS返回, 文本型, , 取出一个dos命令的返回信息
.参数 dos命令, 文本型, , 欲执行的dos命令
.参数 即时回显, 子程序指针, 可空, DOS即时回显信息回调函数 回调DOS函数(回显信息) 返回逻辑值,真:停止,假:继续



.子程序 进程隐藏, 整数型, , 通过断链方式隐藏进程(返回链表值,用于恢复该进程,失败返回-1)
.参数 进程ID, 整数型, 可空, 目的进程ID (默认自进程ID)
.参数 链表值, 整数型, 可空, 欲还原的进程链表地址值  如果隐藏进程请留空



.子程序 枚举窗口2, 整数型, , 通过窗口任务关系来枚举所有窗口,返回窗口句柄数目,失败返回0
.参数 句柄数组, 整数型, 可空 数组, 返回的所有窗口句柄数组



.子程序 取句柄2, 整数型, , 通过任务关系的所有窗口与类名标题关键字来判断获取句柄(返回第一个符合条件的句柄,失败返回-1)(至少指定两个条件,以确保准确性)
.参数 进程名, 文本型, 可空, 欲取窗口句柄的窗口程序进程名(注意大小写)
.参数 类名, 文本型, 可空, 欲取窗口句柄的窗口类名
.参数 标题, 文本型, 可空, 欲取窗口句柄的窗口标题关键字,模糊匹配



.子程序 取句柄数组2, 整数型, , 通过任务关系的所有窗口与类名标题关键字来判断获取句柄(返回符合条件的句柄数目,失败返回0)(勿必指定多个条件,以确保准确性)
.参数 句柄数组, 整数型, 数组, 返回的窗口句柄数组
.参数 进程名, 文本型, 可空, 欲取窗口句柄的窗口程序进程名(注意大小写)
.参数 类名, 文本型, 可空, 欲取窗口句柄的窗口类名
.参数 标题, 文本型, 可空, 欲取窗口句柄的窗口标题关键字



.子程序 枚举窗口信息2, 整数型, , 枚举所有顶级窗口的句柄的窗口信息(返回数组数目,失败返回0)
.参数 临时窗口信息, 窗口信息型, 数组, 枚举出来的窗口信息数组
.参数 可见性, 逻辑型, 可空, 默认为真:所有可见窗口  假:所有窗口



.子程序 取进程窗口, 整数型, , 通过进程ID取出指定进程的所有顶级窗口句柄(返回该进程中所有顶级窗口句柄的数目,失败返回0)
.参数 进程ID, 整数型, , 窗口所在进程ID
.参数 所有窗口, 整数型, 可空 数组, 返回该进程中所有顶级窗口句柄



.子程序 内存搜索, 整数型, , 进行首次内存搜索(返回结果数目,失败或没有返回0)
.参数 进程ID, 整数型, , 进程ID
.参数 搜索内容, 字节集, , 欲搜索的内容  其他类型-需自行转换为字节集类型
.参数 结果地址, 整数型, 数组, 用来保存搜索的结果



.子程序 读内存文本型, 文本型, , 从内存中读取文本型数据(返回文本,失败返回0字节长度空内容)
.参数 进程ID, 整数型, , 
.参数 内存地址, 整数型, , 



.子程序 读内存字节集, 字节集, , 从内存中读取字节集数据(返回字节集,失败返回0字节长度的空字节集)
.参数 进程ID, 整数型, , 进程ID
.参数 地址, 整数型, , 内存地址
.参数 长度, 整数型, 可空, 欲读取内存数据的长度 (留空则智能读取)



.子程序 内存再次搜索, 整数型, , 针对上次的搜索进行再一次搜索(返回结果数目,失败或没有返回0)
.参数 结果地址, 整数型, 数组, 用来保存搜索的结果
.参数 搜索的数据, 字节集, , 从上一次搜索结果地址中再次搜索的数据内容



.子程序 内存搜索整数, 整数型, , 针对上次的搜索进行对内存数值的变化进行再一次搜索(返回结果数目,失败或没有返回0)
.参数 结果地址, 整数型, 数组, 用来保存搜索的结果
.参数 搜索的整数, 整数型, , 从上一次搜索结果地址中再次搜索的整数,也可以是模糊搜索 #内存_不变的数值 #内存_变大的数值 #内存_变小的数值 #内存_改变的数值



.子程序 文本输入, 空白型, , 向指定窗口句柄中窗口中后台输入文本内容,并等待输入完毕后返回,对特殊屏蔽的游戏有效!(无返回值)
.参数 句柄, 整数型, , 接收消息的窗口句柄
.参数 文本, 文本型, , 发送的文本内容
.参数 速, 字节型, 可空, 默认为3 如出现乱码现象,请将该值设大一点



.子程序 强力打开进程, 整数型, , 
.参数 dwDesiredAccess, 整数型, , 
.参数 bInhert, 逻辑型, , 
.参数 ProcessId, 整数型, , 



.子程序 强力结束进程, 逻辑型, , 
.参数 hProcess, 整数型, , 
.参数 ExitStatus, 整数型, , 0



.子程序 超级截图, 字节集, , 截取窗口或屏幕中指定区域图片(返回图片字节集,失败返回空字节集)
.参数 窗口句柄, 整数型, 可空, 默认为屏幕中.指定窗口句柄,则以窗口客户区内坐标点
.参数 左上顶点_X, 整数型, 可空, 截取图片范围的左上角横坐标,留空为0
.参数 左上顶点_Y, 整数型, 可空, 截取图片范围的左上角纵坐标,留空为0
.参数 右下顶点_X, 整数型, 可空, 截取图片范围的右下角横坐标,小于左上顶点_X则为最大值-1 默认为最大值
.参数 右下顶点_Y, 整数型, 可空, 截取图片范围的右下角纵坐标,小于左上顶点_Y则为最大值-1 默认为最大值
.参数 是否后台, 逻辑型, 可空, 默认为假:可见到的颜色点 真:后台窗口内颜色点
.参数 色深, 整数型, 可空, 所截取的图片位深度,默认为16位(8,16,24,32)



.子程序 创建进程, 整数型, , 创建一个程序进程(成功返回进程ID,失败返回0)
.参数 程序路径, 文本型, , 欲创建进程的执行路径
.参数 命令行, 文本型, 可空, 附加上程序路径后的命令行参数
.参数 运行目录, 文本型, 可空, 通常留空,特殊情况下使用
.参数 进程结构, 进程结构, 参考 可空, 接收进程结构信息的变量



.子程序 到短路径, 文本型, , 取指定路径的短路径名(返回收缩后的路径,无效返回空文本)如: c:\program files\ 收缩后为:C:\PROGRA~1\
.参数 文件名, 文本型, , 原路径



.子程序 取MAC地址, 文本型, , 获取网卡MAC地址(如：00:53:45:00:00:00)


.子程序 取CPU序列号, 文本型, , 获取CPU序列号


.子程序 取硬件信息码, 文本型, , 通过CPU硬盘等硬件综合信息,取得本机独特的硬件信息码(成功返回32位码,失败返回4位码)(内置多种复杂混合算法)
.参数 密码, 文本型, , 输入相应的密码



.子程序 取硬件信息码2, 文本型, , 
.参数 CPU, 文本型, , 
.参数 HD2, 整数型, , 
.参数 密码, 文本型, , 



.子程序 文本投递2, 空白型, , 向指定窗口句柄的窗口中后台发送文本内容,对游戏有效!(无返回值)
.参数 窗口句柄, 整数型, , 接收消息的窗口句柄
.参数 内容, 字节集, , 发送的文本内容



.子程序 文件进度复制, 逻辑型, , 
.参数 被复制的文件名, 文本型, , 
.参数 复制到的文件名, 文本型, , 
.参数 回调进度函数, 子程序指针, 可空, 回调函数(总尺寸,已复制,进度%) 回调函数的返回值可以为空,如果回调函数的返回值为真或不等0则停止复制



.子程序 转换图像格式, 字节集, , (返回转换后图像数据,失败返回空字节集)
.参数 图像数据, 字节集, , 支持bmp、jpg、gif、tiff
.参数 转换格式, 整数型, 可空, 转换后的图片格式。0、bmp；1、jpg；2、gif；3、tiff；4、png



.子程序 控件消息, 空白型, , 向指定控件中投递消息,更多常量可参考windows消息大全
.参数 窗口句柄, 整数型, , 
.参数 消息类型, 整数型, , #消息_复制 #消息_粘贴 #消息_全选 #消息_清空 #消息_删除 #消息_剪切 #消息_撤销 #消息_获得焦点 #消息_失去焦点 #消息_单击 #消息_右击 #消息_销毁 #消息_退出 #消息_结束



.子程序 取点颜色, 整数型, , 取屏幕中或窗口区域某点颜色值或颜色属性
.参数 窗口句柄, 整数型, 可空, 默认为屏幕
.参数 X, 整数型, , 
.参数 Y, 整数型, , 
.参数 类型, 整数型, 可空, 默认为0颜色值  1 #R色  2 #G色  3 #B色  6 #色彩度



.子程序 信息框2, 整数型, , 同"信息框"用法相同
.参数 提示信息, 文本型, 可空, 
.参数 按钮值, 整数型, 可空, 
.参数 窗口标题, 文本型, 可空, 
.参数 窗口句柄, 整数型, 可空, 信息框父窗口,默认为系统级
.参数 时长, 整数型, 可空, 默认为0 不关闭  指定信息框在毫秒级时间过后自动关闭



.子程序 按键2, 空白型, , SendInput执行模拟按键(无返回值)
.参数 键代码, 整数型, , 
.参数 状态, 整数型, 可空, 可空:按键(按下+放开)   3 #按下_   4 #放开_   如果状态大于等于5则为按下与放开之间的延时,可解决某些屏蔽
.参数 功能键方式, 逻辑型, 可空, 默认为普通键, 真:功能键方式模拟,如ctrl键win键home键光标键等



.子程序 鼠标键2, 空白型, , SendInput模拟鼠标按键
.参数 键, 整数型, 可空, 可空:为左键  1 #左键_   2 #右键_   3 #中键_
.参数 控制, 整数型, 可空, 可空:为单击  1 #单击_   2 #双击_   3 #按下_  4 #放开_



.子程序 鼠标移动2, 空白型, , SendInput模拟鼠标移动 目标坐标与实际坐标有一像素点误差属正常现象!
.参数 窗口句柄, 整数型, 可空, 可空:相对桌面移动鼠标  句柄有效则相对窗口中坐标移动
.参数 水平坐标, 整数型, , 
.参数 垂直坐标, 整数型, , 



.子程序 取进程名, 文本型, , 通进进程ID取得该进程文件名
.参数 进程ID, 整数型, , 



.子程序 取父进程ID, 整数型, , 取得父级进程ID,失败返回-1
.参数 进程ID, 整数型, , 



.子程序 取快捷方式指向, 文本型, , 获取指定快捷方式指向的文件路径
.参数 lnk名称, 文本型, , 快捷方式文件名全路径文件名



.子程序 关闭系统, 空白型, , 提供关闭或重新启动计算机
.参数 关闭方式, 整数型, 可空, 默认为1 关机  2 重启  3 注销
.参数 是否强制执行, 逻辑型, 可空, 是否不等待其它程序退出，直接执行，默认为假



.子程序 超级延迟, 空白型, , 无资源占用的延时(无返回值)
.参数 等待时间, 整数型, , 



.子程序 取系统目录, 文本型, , 


.子程序 写启动项, 逻辑型, , 写入系统启动项(成功返回真,失败返回假)
.参数 启动文件, 文本型, 可空, 需要加入启动项的文件名 如果为空则删除启动项
.参数 启动方式, 整数型, 可空, 0 Run项启动 1 Load项启动 2 Shell项启动



.子程序 取系统进程, 整数型, , NT方式取得系统中所有进程,返回进程数
.参数 进程名数组, 文本型, 参考 数组, 存放进程名的数组变量



.子程序 取驱动器列表, 整数型, , 返回驱动器数量
.参数 保存驱动器列表, 文本型, 可空 数组, 
.参数 类型, 整数型, 可空, 默认为0所有驱动器  1 硬盘驱动器  2 光盘驱动器  3 可移动驱动器  4 网络驱动器。



.子程序 读磁盘扇区, 逻辑型, , 
.参数 扇区号, 整数型, , 
.参数 扇区内容, 字节集, , 



.子程序 写磁盘扇区, 逻辑型, , 
.参数 扇区号, 整数型, , 
.参数 扇区内容, 字节集, , 



.子程序 取汉字笔画, 整数型, , 返回指定单个汉字的笔画数，支持6725个常用汉字。
.参数 汉字, 文本型, , 



.子程序 复制文件夹, 逻辑型, , 成功返回真，失败返回假
.参数 被复制的文件夹, 文本型, , 
.参数 复制到的文件夹, 文本型, , 
.参数 是否处理事件, 逻辑型, 可空, 



.子程序 创建多级目录, 逻辑型, , 成功返回真,失败返回假
.参数 目录路径, 文本型, , 



.子程序 取文件夹尺寸, 双精度小数型, , (成功返回文件夹尺寸,失败返回-1)
.参数 文件夹路径, 文本型, , 
.参数 子文件夹数量, 整数型, 参考 可空, 保存子文件夹数量
.参数 子文件数量, 整数型, 参考 可空, 保存子文件数量
.参数 是否处理事件, 逻辑型, 可空, 



.子程序 十六到十2, 整数型, , 将十六进制转换成十进制(返回十进制文本)
.参数 十六进制转换数据, 文本型, , 



.子程序 转换Ansi转Unicode2, 字节集, , 将Ansi码转换为Unicode码 (返回转换后的字节集)
.参数 欲转换的文本, 文本型, , 



.子程序 文件夹停止同步, 空白型, , 停止一些同步命令: "文件搜索","文件夹同步","文件夹进度同步","文件夹双进度同步","文件夹同步清理"


.子程序 取磁盘序列号, 整数型, , 取得指定磁盘的序列号(成功返回磁盘的序列号,失败返回0,如果是读卡器或光驱或软驱等没有插入卡或光盘或软盘将会失败)
.参数 盘符, 文本型, , 欲取序列号的磁盘盘符 (如: F:)
.参数 卷标, 文本型, 参考 可空, 用于存放卷名(卷标)的变量
.参数 系统名称, 文本型, 参考 可空, 用于存放文件系统名称的变量 (如FAT,NTFS以及其他)



.子程序 取文件创建时间, 日期时间型, , 
.参数 文件名, 文本型, , 



.子程序 取文件访问时间, 日期时间型, , 
.参数 文件名, 文本型, , 



.子程序 取文件修改时间, 日期时间型, , 
.参数 文件名, 文本型, , 



.子程序 重启后删除文件, 空白型, , 
.参数 文件名, 文本型, , 欲删除的文件名



.子程序 取System32目录, 文本型, , 


.子程序 进程枚举2, 整数型, , 失败返回0，成功返回进程数量(该命令为高级成员命令)
.参数 进程信息列表, 进程信息型2, 可空 数组, 



.子程序 取进程用户名, 文本型, , 通进进程ID取得该进程权限的用户名
.参数 进程ID, 整数型, , 



.子程序 进程是否有效, 逻辑型, , 判断进程ID是否有效(有效返回真,无效或失败返回假)
.参数 进程ID, 整数型, , 欲检测的进程标识



.子程序 取进程路径, 文本型, , 取指定进程的程序启动路径(成功返回路径,失败或进程不存在返回空)
.参数 进程ID, 整数型, , 



.子程序 取程序路径, 文本型, , 取指定进程名的程序启动路径(成功返回路径,失败或进程不存在返回空)
.参数 进程名, 文本型, , 程序进程名
.参数 区分大小写, 逻辑型, 可空, 默认不区分进程名大小写



.子程序 取进程模块, 整数型, , 失败为0，成功返回模块数量(该命令为高级成员命令)
.参数 进程ID, 整数型, 可空, 为空 则取当前进程模块
.参数 模块信息数组, 模块信息型, 可空 数组, 返回的模块信息 数组



.子程序 取进程命令行, 文本型, , 取指定进程的命令行参数,要求取命令行程序权限不低于被取程序的权限(返回命令行参数,无命令行或失败返回空文本)
.参数 进程ID, 整数型, , 



.子程序 进程取ID数组, 整数型, , 取指定进程名称的所有进程的进程ID(返回进程ID数目,没有返回0)
.参数 进程ID数组, 整数型, 可空 数组, 存放进程ID数组变量
.参数 进程名, 文本型, , 程序进程名
.参数 区分大小写, 逻辑型, 可空, 默认不区分进程名大小写



.子程序 爆力取句柄, 整数型, , 爆力穷举窗口句柄,不得以而为之.(成功返回窗口句柄,失败返回-1)
.参数 窗口标题, 文本型, 可空, 可以是窗口标题的关键字.如果重复上次获取下一个窗口请留空.



.子程序 爆力枚举窗口, 整数型, , 爆力穷举窗口句柄,不得以而为之.(成功返回有效窗口句柄的数目,失败返回0)
.参数 窗口句柄, 整数型, 可空 数组, 用于存放窗口句柄的数组变量



.子程序 发送字符串, 空白型, , sendkeys 将一个或多个按键消息发送到活动窗口,就如同用键盘进行输入一样 (无返回值)
.参数 文本, 文本型, , 字符串表达式,指定要发送的按键消息(详情见百度sendkeys词条)
.参数 等待, 逻辑型, 可空, 指定等待方式的值  默认为假:按键发送出去立刻返回  真:按键消息在返回到过程之前加以处理



.子程序 发送字符串2, 空白型, , sendkeys 将一个或多个按键消息发送到指定窗口,就如同用键盘进行输入一样 (无返回值)
.参数 窗口标题, 文本型, 可空, 向指定窗口发送.窗口标题关键字
.参数 文本, 文本型, , 字符串表达式,指定要发送的按键消息(详情见百度sendkeys词条)
.参数 等待, 逻辑型, 可空, 指定等待方式的值  默认为假:按键发送出去立刻返回  真:按键消息在返回到过程之前加以处理



.子程序 取当前窗口, 整数型, , 取得当前位于前台窗口句柄(返回句柄,失败返回0)


.子程序 取当前父窗口, 整数型, , 取得当前位于前台的父级窗口句柄(返回句柄,失败返回0)


.子程序 窗口激活, 逻辑型, , 激活指定窗口,将窗口设置到前台
.参数 句柄, 整数型, , 欲带到前台的窗口



.子程序 取进程ID, 整数型, , 取指定进程的进程ID(返回第一个进程ID,失败返回0)
.参数 进程名, 文本型, , 区分大小写



.子程序 以SYSTEM权限运行, 逻辑型, , 在Administrator系统权限下以SYSTEM权限运行指定程序(成功返回真,失败返回假)
.参数 文件名, 文本型, , 欲创建进程全路径文件名



.子程序 取线程窗口, 整数型, , 通过窗口的线程标识符获取窗口句柄(成功返回窗口句柄,失败返回0)
.参数 线程ID, 整数型, 可空, 如果线程ID为空,则取当前线程



.子程序 内存优化, 空白型, , 内存优化,其实就是将实际内存转移至虚拟内存,以减少内存占用,周期中使用


.子程序 提升进程权限D2, 逻辑型, , 成功返回真，把一个进程的权限提升到调试级权限


.子程序 取模块路径, 文本型, , 取出当前进程模块所在目录路径,失败返回空
.参数 模块名, 文本型, 可空, 默认为执行文件名 模块名如:krnln.fne,kernel32.dll,User32.dll



.子程序 打开网页2, 空白型, , 打开一个新网页显示指定网站
.参数 网址, 文本型, , 欲打开的网页地址



.子程序 运行程序, 空白型, , 通过对象来运行一个指定的应用程序
.参数 执行程序, 文本型, , 一个欲被执行的程序全路径名或执行程序名
.参数 启动参数, 文本型, 可空, 可以传递程序的启动参数,但要注意参数间隔符不能少
.参数 窗口显示, 整数型, 可空, 默认为激活窗口  0 隐藏窗口  1 激活窗口  7 最小化  3 最大化
.参数 等待返回, 逻辑型, 可空, 是否需要等持被运行的程序运行结束后



.子程序 系统变速, 空白型, , NT,2000,XP系统原速 =11941; ME,98系统原速=5954; XP.SP2=1200
.参数 新速值, 整数型, , 值小加速,值大减速



.子程序 取运行目录2, 文本型, , 取当前被执行的程序文件所处的目录,调试时为执行文件所释放到的目录而不是易语言源代码目录!


.子程序 取窗口线程ID, 整数型, , 取指定窗口句柄的窗口线程ID(返回进程ID,失败返回0)
.参数 窗口句柄, 整数型, , 



.子程序 枚举窗口线程, 整数型, , 枚举所有窗口线程标识符,返回窗口线程标识符数目,失败返回0
.参数 线程数组, 整数型, 可空 数组, 返回的所有窗口线程ID数组



.子程序 取API错误信息, 文本型, , 针对之前调用的api函数,用这个函数取得扩展错误信息


.子程序 鼠标捕获, 整数型, , 将鼠标捕获设置到指定的窗口.在鼠标按钮按下的时候,这个窗口会为当前应用程序或整个系统接收所有鼠标输入(返回之前拥有鼠标捕获的窗口的句柄)
.参数 窗口句柄, 整数型, 可空, 要接收所有鼠标输入的窗口的句柄,如果留空则释放鼠标捕获



.子程序 取进程窗口信息, 整数型, , 获取指定进程的窗口信息(返回进程的主窗口句柄,失败返回0)
.参数 进程ID, 整数型, , 
.参数 焦点窗口, 整数型, 参考 可空, 在窗口非激活状态没有获得焦点,将得到0值
.参数 焦点横坐标, 整数型, 参考 可空, 在窗口非激活状态没有获得焦点,将得到0值
.参数 焦点纵坐标, 整数型, 参考 可空, 在窗口非激活状态没有获得焦点,将得到0值



.子程序 窗口禁止, 逻辑型, , 在窗口中允许或禁止所有鼠标及键盘输入(成功返回真,失败返回假)
.参数 窗口句柄, 整数型, , 欲禁止鼠标键盘输入的窗口或控件的句柄
.参数 是否禁止, 逻辑型, 可空, 默认为真:禁止 假:取消禁止



.子程序 置计算机名, 逻辑型, , 设置计算机名,一般要重新启动才生效(成功返回真,失败返回假)
.参数 计算机名, 文本型, 参考, 新的计算机名称  



.子程序 弹出光驱, 逻辑型, , 弹出光驱门。 mciSendString


.子程序 关闭光驱, 逻辑型, , 关闭光驱门。 mciSendString


.子程序 _启动子程序, 整数型, , 请在本子程序中放置易模块初始化代码


.子程序 启动线程_, 逻辑型, , 
.参数 欲执行的子程序, 子程序指针, , 
.参数 参数数据, 整数型, 可空, 
.参数 线程句柄, 整数型, 参考 可空, 



.子程序 汇编_打开进程, 整数型, , 2035711 全部权限 汇编
.参数 进程对象, 整数型, , dwDesiredAccess  2035711 全部权限
.参数 继承句柄, 整数型, , bInheritHandle  0
.参数 进程标识符, 整数型, , dwProcessId  某进程PID



.子程序 汇编_读整型内存, 逻辑型, , 汇编
.参数 进程操作句柄, 整数型, , 被读内存的进程句柄
.参数 开始读取地址, 整数型, , 开始读的地址
.参数 保存数值变量, 整数型, 参考, 用于放数据的缓存地址
.参数 读取长度, 整数型, , 读取的字节数4
.参数 实际长度, 整数型, 参考, 



.子程序 汇编_写字节集, 空白型, , 
.参数 进程操作句柄, 整数型, , 被读内存的进程句柄
.参数 开始读取地址, 整数型, , 开始读的地址
.参数 写入数值变量, 整数型, , 用于放数据的缓存地址
.参数 写入长度, 整数型, , 读取的字节数4
.参数 实际长度, 整数型, 参考, 



.子程序 取ASCII, 文本型, , 
.参数 文本, 文本型, , 
.参数 类型, 整数型, , 



.子程序 字节集到十进制, 文本型, , 若参数一不为空,将返回空文本
.参数 字节集数据, 字节集, 参考, 
.参数 分隔符号, 文本型, 可空, 默认分隔符号为 “,”



.子程序 十进制到字节集, 字节集, , 若参数一不为空,将返回空字节集
.参数 文本数据, 文本型, 参考, 
.参数 分隔符号, 文本型, 可空, 默认分隔符号为 “,”



.子程序 字节集到十六进制, 文本型, , 若参数一不为空,将返回空文本
.参数 字节集数据, 字节集, 参考, 
.参数 分隔符号, 文本型, 可空, 默认分隔符号为 “,”



.子程序 十六进制到字节集, 字节集, , 若参数一不为空,将返回空字节集
.参数 十六进制文本, 文本型, 参考, 
.参数 分隔符号, 文本型, 可空, 默认分隔符号为 “,”



.子程序 api设置时钟, 空白型, , api时钟 关闭记得用api销毁时钟
.参数 窗口句柄, 整数型, , 
.参数 时钟周期, 整数型, , 为毫秒 1秒=1000
.参数 子程序, 子程序指针, , 



.子程序 api销毁时钟, 空白型, , api销毁时钟
.参数 窗口句柄, 整数型, , 




 ' 不属于任何一个程序集、类模块的函数：
