 ' 文件类型：Windows窗口程序

 ' 程序名称：准编辑框
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 窗口2
    左边 = 50
    顶边 = 50
    宽度 = 619
    高度 = 304
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 1
    底图方式 = 3
    底色 = 16777215 '  0xFFFFFF
    最大化按钮 = 真
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    窗口类名 = “”
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “”
    帮助文件名 = “”



.常量 窗口扩展风格之接受拖曳文件, "16", 公开, 指定以该风格创建的窗口接受一个拖拽文件, WS_EX_ACCEPTFILES
.常量 窗口扩展风格之任务栏显示, "262144", 公开, 当窗口可见时，将一个顶层窗口放置到任务条上,WS_EX_APPWINDOW
.常量 窗口扩展风格之镜框式, "521", 公开, 指定窗口客户区边框为凹入式_EX_CLIENTEDGE
.常量 窗口扩展风格之帮助上下文, "1024", 公开, 在窗口的标题条包含一个问号标志。当用户点击了问号时，鼠标光标变为一个问号的指针、如果点击了一个子窗口，则子窗日接收到WM_HELP消息。子窗口应该将这个消息传递给父窗口过程，父窗口再通过HELP_WM_HELP命令调用WinHelp函数。这个Help应用程序显示一个包含子窗口帮助信息的弹出式窗口。 WS_EX_CONTEXTHELP不能与WS_MAXIMIZEBOX和WS_MINIMIZEBOX同时使用。WS_EX_CONTEXTHELP
.常量 窗口扩展风格之可Tab键寻找, "65536", 公开, 允许用户使用Tab键在窗口的子窗口间搜索，    WS_EX_CONTROLPARENT
.常量 窗口扩展风格之双边框, "1", 公开, 创建一个带双边的窗口；该窗口可以在dwStyle中指定WS_CAPTION风格来创建一个标题栏。 WS_EX_DLGMODALFRAME
.常量 窗口扩展风格之左对齐, "0", 公开, WS_EX_LEFT：窗口具有左对齐属性，这是缺省设置的
.常量 窗口扩展风格之左滚动条, "16384", 公开, WS_EX_LEFTSCROLLBAR：如果外壳语言是如Hebrew，Arabic，或其他支持reading order alignment的语言，则标题条（如果存在）则在客户区的左部分。若是其他语言，在该风格被忽略并且不作为错误处理。
.常量 窗口扩展风格之文本自左向右显示, "0", 公开, WS_EX_LTRREADING：窗口文本以LEFT到RIGHT（自左向右）属性的顺序显示。这是缺省设置的。
.常量 窗口扩展风格之多文档子窗口, "64", 公开,  WS_EX_MDICHILD：创建一个MD子窗口。
.常量 窗口扩展风格之不发送父窗口需要调整消息, "4", 公开, WS_EX_NOPATARENTNOTIFY：指明以这个风格创建的窗口在被创建和销毁时不向父窗口发送WM_PARENTNOTFY消息
.常量 窗口扩展风格之凹入式, "768", 公开, WS_EX_OVERLAPPED：WS_EX_CLIENTEDGE和WS_EX_WINDOWEDGE的组合
.常量 窗口扩展风格之始终置顶且右靠齐的工具窗口, "392", 公开, WS_EX_PALETTEWINDOW：WS_EX_WINDOWEDGE, WS_EX_TOOLWINDOW和WS_WX_TOPMOST风格的组合WS_EX_RIGHT:窗口具有普通的右对齐属性，这依赖于窗口类。只有在外壳语言是如Hebrew,Arabic或其他支持读顺序对齐（reading order alignment）的语言时该风格才有效，否则，忽略该标志并且不作为错误处理
.常量 窗口扩展风格之右滚动条, "0", 公开,  WS_EX_RIGHTSCROLLBAR：垂直滚动条在窗口的右边界。这是缺省设置的
.常量 窗口扩展风格之右对齐, "4096", 公开, WS_EX_RIGHT：窗口具有右对齐属性
.常量 窗口扩展风格之文本自右向左显示, "8192", 公开, WS_EX_RTLREADING：如果外壳语言是如Hebrew，Arabic，或其他支持读顺序对齐（reading order alignment）的语言，则窗口文本是一自左向右）RIGHT到LEFT顺序的读出顺序。若是其他语言，在该风格被忽略并且不作为错误处理
.常量 窗口扩展风格之静态项三维边界, "131072", 公开, WS_EX_STATICEDGE：为不接受用户输入的项创建一个3一维边界风格
.常量 窗口扩展风格之工具窗口, "128", 公开, WS_EX_TOOLWIDOW：创建工具窗口，即窗口是一个游动的工具条。工具窗口的标题条比一般窗口的标题条短，并且窗口标题以小字体显示。工具窗口不在任务栏里显示，当用户按下alt＋Tab键时工具窗口不在对话框里显示。如果工具窗口有一个系统菜单，它的图标也不会显示在标题栏里，但是，可以通过点击鼠标右键或Alt＋Space来显示菜单
.常量 窗口扩展风格之始终置顶, "8", 公开, WS_EX_TOPMOST：指明以该风格创建的窗口应放置在所有非最高层窗口的上面并且停留在其L，即使窗口未被激活。使用函数SetWindowPos来设置和移去这个风格
.常量 窗口扩展风格之透明窗口, "32", 公开, WS_EX_TRANSPARENT：指定以这个风格创建的窗口在窗口下的同属窗口已重画时，该窗口才可以重画。由于其下的同属富日已被重画，该窗口是透明的
.常量 窗口扩展风格之窗口边界, "256", 公开, 
.常量 窗口风格之线边框, "8388608", 公开, WS_BORDER  0x00800000
.常量 窗口风格之任务栏显示, "0", 公开, 
.常量 窗口风格之有标题栏, "12582912", 公开, WS_CAPTION 0x00C00000
.常量 窗口风格之叠标菜调大小闭, "1769472", 公开, WS_OVERLAPPERWINDOW 可重叠、有标题栏、有系统菜单、可调整、有最大、小按钮、有关闭按钮
.常量 窗口风格之父不重绘子覆盖, "33554432", 公开, WS_ClIPCHILDREG当在父窗口中绘图时，将会避开子窗口遮盖的部分不画Ox02000000
.常量 窗口风格之不重绘兄覆盖, "67108864", 公开, WS_CLIPSIBLINGS子窗口受到重绘消息时，将不会重绘被其他子窗口覆盖的部分Ox04000000
.常量 窗口风格之不接受消息, "134217728", 公开, WS_DISABLED 0x08000000
.常量 窗口风格之粗边框, "4194304", 公开, WS_DLFRAME 0x0040000
.常量 窗口风格之第一控件, "131072", 公开, WS_GROUP 将窗口设置为第一个控件 0x00020000
.常量 窗口风格之有水平滚动条, "1048576", 公开, WS_HSCROLL 0x00100000
.常量 窗口风格之初始最大化, "16777216", 公开, WS_Maximize 0x01000000
.常量 窗口风格之有最大化按钮, "65536", 公开, WS_Maximizebox 0x00010000
.常量 窗口风格之有最小化按钮, "2097152", 公开, WS_minximizebox 0x00200000
.常量 窗口风格之初始最小化, "536870912", 公开, WS_Miximize  0x10000000
.常量 窗口风格之可重叠, "0", 公开, WS_OVERLAPPED
.常量 窗口风格之无边框, "2147483648", 公开, 不可与WS_子窗口 WS_POPUP
.常量 窗口风格之嵌入式子窗口, "1073741824", 公开, 不可与WS_可弹出
.常量 窗口风格之有系统菜单, "524288", 公开, WS_sysmenu,最大化按纽、最小化按纽和关闭按纽也属于系统菜单，但最大化按纽和最小化按纽如果要显现（或有效），除了要添加有系统菜单风格外，还要分别添加相应的风格。不添加有系统菜单而单独添加最大化或（和）最小化按纽风格，则不会显示最大化或（和）最小化按纽。系统菜单有效，必须存在标题栏。
.常量 窗口风格之TAB移动, "24576", 公开, 可用tab键在窗口的控件中移动
.常量 窗口风格之可调整大小, "262144", 公开, WS_THICKFRAME 0x0004000
.常量 窗口风格之可视, "268435456", 公开, 设置窗口一开始即显示在屏幕上
.常量 窗口风格之有垂直滚动条, "2097152", 公开, 
.常量 窗口风格之一般形式窗口, "13565952", 公开, WW_TILEDWINDO，在任务栏显示
.常量 窗口风格之粗边框固定不可调窗口, "-2143289344", 公开, 
.常量 窗口风格之无边框固定不可调窗口, "2147483648", 公开, 
.常量 窗口风格之普通边框不可调窗口, "4194304", 公开, 
.常量 窗口风格之线边框固定不可调窗口, "-2139095040", 公开, 
.常量 窗口风格之粗边框固定可调窗口, "-2143027200", 公开, 
.常量 窗口风格之普通边框可调窗口, "262144", 公开, 
.常量 窗口风格之对话框窗口, "13107200", 公开, 
.常量 窗口信息之扩展风格, "-20", 公开, GWL_EXISTYLE：设定一个新的扩展风格
.常量 窗口信息之窗口风格, "-16", 公开, GWL_STYLE：设定一个新的窗口风格
.常量 窗口信息之窗口过程, "-4", 公开, GWL_WNDPROC：为窗口过程设定一个新的地址
.常量 窗口信息之标志符, "-12", 公开, GWL_ID：设置一个新的窗口标识符
.常量 窗口信息之事例句柄, "-8", 公开, GWL_HINSTANCE：设置一个新的应用程序事例句柄
.常量 窗口信息之自定义数据, "-21", 公开, 
.常量 窗口显示之最大化, "3", 公开,  SW_MAXIMIZE：最大化指定的窗口
.常量 窗口显示之最小化, "6", 公开, 最小化指定的窗口并且激活在Z序中的下一个顶层窗口
.常量 窗口显示之激活显示, "9", 公开, 激活并显示窗口。如果窗口最小化或最大化，则系统将窗口恢复到原来的尺寸和位置。在恢复最小化窗口时，应用程序应该指定这个标志
.常量 窗口显示之显示, "5", 公开, SW_SHOW：在窗口原来的位置以原来的尺寸激活和显示窗口
.常量 窗口显示之激活且最大化, "3", 公开, 
.常量 窗口显示之激活且最小化, "2", 公开, 
.常量 窗口显示之最小化且维持原激活状态, "7", 公开, SW_SHOWMINNOACTIVATE：窗口最小化，激活窗口仍然维持激活状态
.常量 窗口显示之维持原激活状态显示, "8", 公开, SW_SHOWNA：以窗口原来的状态显示窗口。激活窗口仍然维持激活状态
.常量 窗口显示之取最近并维原持激活状态显示, "4", 公开, SW_SHOWNOACTIVATE：以窗口最近一次的大小和状态显示窗口。激活窗口仍然维持激活状态
.常量 窗口显示之正常显示, "1", 公开, SW_SHOWNOMAL：激活并显示一个窗口。如果窗口被最小化或最大化，系统将其恢复到原来的尺寸和大小。应用程序在第一次显示窗口的时候应该指定此标志
.常量 窗口显示之平滑显示, "16", 公开, 
.常量 窗口空间位置之最底层, "1", 公开, HWND_BOTTOM,将窗口定位在Z序的底部。如果hWnd参数指定的是一个最顶层窗口，则该窗口将失去顶级位置而被排在所有其他窗口的底部
.常量 窗口空间位置之顶层, "0", 公开, HWND_TOP：将窗口放置在Z序的顶部
.常量 窗口空间位置之最顶层, "-1", 公开, HWND_TOPMOST：将窗口放置在所有非顶层窗口的顶部、即使未被激活，窗口仍保持顶级位置。如果在uFlagS参数中指定了SWP_NOZORDER标志则本参数将被忽略
.常量 窗口空间位置之次顶层, "-2", 公开, HWND_NOTOPMOST：将窗口放置在所有顶层窗口的顶部（即在所有顶层窗口的后面）。如果窗口已经是一个非顶层窗口则此参数不起作用
.常量 窗口空间位置标志之画边框, "32", 公开, SWP_DRAWFRAME：在窗口周围画一个边框（定义在窗口类描述中）。
.常量 窗口空间位置标志之延迟重绘, "8192", 公开, SWP_DEFERERASE：防止产生WM_SYNCPAINT消息
.常量 窗口空间位置标志之防死锁, "16384", 公开, SWP_ASNCWINDOWPOS：如果调用进程不拥有窗口，系统会向拥有窗口的线程发出需求。这就防止调用线程在其他线程处理需求的时候发生死锁
.常量 窗口空间位置标志之客户区核算, "32", 公开, SWP_FRAMECHANGED：给窗口发送WM_NCCALCSIZE消息，即使窗口尺寸没有改变也会发送该消息。如果未指定这个标志，只有在改变了窗口尺寸时才发送WM_NCCALCSIZE
.常量 窗口空间位置标志之隐藏窗口, "128", 公开, SWP_HIDEWINDOW;隐藏窗口
.常量 窗口空间位置标志之不激活, "16", 公开, SWP_NOACTIVATE：不激活窗口
.常量 窗口空间位置标志之清空客户区, "256", 公开, SWP_NOCOPYBITS：清除客户区的所有内容。如果未设置该标志，客户区的有效内容被保存并且在窗口尺寸更新和重定位后拷贝回客户区
.常量 窗口空间位置标志之不改变位置, "2", 公开, SWP_NOMOVE：维持当前位置（忽略X和Y参数）。
.常量 窗口空间位置标志之维持自有排序, "512", 公开, SWP_NOOWNERZORDER：不改变z序中的所有者窗口的位置
.常量 窗口空间位置标志之不发送窗口位置改变消息, "1024", 公开, 
.常量 窗口空间位置标志之维持原尺寸, "1", 公开, 
.常量 窗口空间位置标志之维持排序, "4", 公开, 
.常量 窗口空间位置标志之显示窗口, "64", 公开, 
.常量 无边框平面式, "0", 公开, 
.常量 无边框凹入式, "1", 公开, 
.常量 凸出式, "2", 公开, 
.常量 镜框式, "3", 公开, 
.常量 线边框平面式, "4", 公开, 
.常量 线边框凹入式, "5", 公开, 
.常量 排列方式之并排, "1", 公开, 
.常量 排列方式之并列, "", 公开, 
.常量 关系窗口之第一子窗口, "5", 公开, GW_Child
.常量 关系窗口之第一兄弟窗口, "0", 公开, GW_HWNDFIRST 为一个源子窗口寻找第一个兄弟（同级）窗口，或寻找第一个顶级窗口 
.常量 关系窗口之最后一个兄弟窗口, "1", 公开, GW_HWNDLAST 为一个源子窗口寻找最后一个兄弟（同级）窗口，或寻找最后一个顶级窗口 
.常量 关系窗口之下一兄弟窗口, "2", 公开, GW_HWNDNEXT 为源窗口寻找下一个兄弟窗口 
.常量 关系窗口之上一兄弟窗口, "3", 公开, GW_HWNDPREV 为源窗口寻找前一个兄弟窗口 
.常量 关系窗口之所有者, "4", 公开, GW_OWNER 寻找窗口的所有者 
.常量 窗口消息之窗口激活, "6", 公开, WM_ACTIVE
.常量 混合模式_替换, "0", 隐藏, CompositingModeSourceOver
.常量 混合模式_复制, "1", 隐藏, CompositingModeSourceCopy
.常量 混合品质_无效, "-1", 隐藏, CompositingQualityInvalid
.常量 混合品质_默认, "0", 隐藏, CompositingQualityDefault
.常量 混合品质_最佳性能, "1", 隐藏, CompositingQualityHighSpeed
.常量 混合品质_最佳质量, "2", 隐藏, CompositingQualityHighQuality
.常量 混合品质_伽玛校正, "3", 隐藏, CompositingQualityGammaCorrected
.常量 混合品质_假定线性, "4", 隐藏, CompositingQualityAssumeLinear
.常量 平滑模式_无效, "-1", 隐藏, SmoothingModeInvalid
.常量 平滑模式_默认, "0", 隐藏, SmoothingModeDefault
.常量 平滑模式_最佳性能, "1", 隐藏, SmoothingModeHighSpeed
.常量 平滑模式_最佳质量, "2", 隐藏, SmoothingModeHighQuality
.常量 平滑模式_不抗锯齿, "3", 隐藏, SmoothingModeNone
.常量 平滑模式_抗锯齿, "4", 隐藏, SmoothingModeAntiAlias
.常量 文本渲染模式_系统默认, "0", 隐藏, TextRenderingHintSystemDefault
.常量 文本渲染模式_符号位图和hinting技术, "1", 隐藏, TextRenderingHintSingleBitPerPixelGridFit
.常量 文本渲染模式_符号位图, "2", 隐藏, TextRenderingHintSingleBitPerPixel
.常量 文本渲染模式_抗锯齿和hinting技术, "3", 隐藏, TextRenderingHintAntiAliasGridFit
.常量 文本渲染模式_抗锯齿, "4", 隐藏, TextRenderingHintAntiAlias
.常量 文本渲染模式_ClearType文本和hinting技术, "5", 隐藏, TextRenderingHintClearTypeGridFit
.常量 算法模式_无效, "-1", 隐藏, InterpolationModeInvalid
.常量 算法模式_默认, "0", 隐藏, InterpolationModeDefault
.常量 算法模式_低质量, "1", 隐藏, InterpolationModeLowQuality
.常量 算法模式_高质量, "2", 隐藏, InterpolationModeHighQuality
.常量 算法模式_双线性, "3", 隐藏, InterpolationModeBilinear
.常量 算法模式_双三次, "4", 隐藏, InterpolationModeBicubic
.常量 算法模式_邻近, "5", 隐藏, InterpolationModeNearestNeighbor
.常量 算法模式_高质量双线性, "6", 隐藏, InterpolationModeHighQualityBilinear
.常量 算法模式_高质量双三次, "7", 隐藏, InterpolationModeHighQualityBicubic
.常量 像素偏移模式_无效, "-1", 隐藏, PixelOffsetModeInvalid
.常量 像素偏移模式_默认, "0", 隐藏, PixelOffsetModeDefault
.常量 像素偏移模式_高性能, "1", 隐藏, PixelOffsetModeHighSpeed
.常量 像素偏移模式_高质量, "2", 隐藏, PixelOffsetModeHighQuality
.常量 像素偏移模式_不偏移, "3", 隐藏, PixelOffsetModeNone
.常量 像素偏移模式_一半, "4", 隐藏, PixelOffsetModeHalf
.常量 单位_世界坐标, "0", 隐藏, UnitWorld
.常量 单位_显示器, "1", 隐藏, UnitDisplay
.常量 单位_像素, "2", 隐藏, UnitPixel
.常量 单位_点, "3", 隐藏, UnitPoint
.常量 单位_英寸, "4", 隐藏, UnitInch
.常量 单位_文档, "5", 隐藏, UnitDocument。1/300英寸
.常量 单位_毫米, "6", 隐藏, UnitMillimeter。
.常量 坐标空间_世界, "0", 隐藏, CoordinateSpaceWorld
.常量 坐标空间_页, "1", 隐藏, CoordinateSpacePage
.常量 坐标空间_设备, "2", 隐藏, CoordinateSpaceDevice
.常量 字体风格_普通, "0", 隐藏, 
.常量 字体风格_加粗, "1", 隐藏, 
.常量 字体风格_倾斜, "2", 隐藏, 
.常量 字体风格_加粗倾斜, "3", 隐藏, 
.常量 字体风格_下划线, "4", 隐藏, 
.常量 字体风格_删除线, "8", 隐藏, 
.常量 填充模式_交替, "0", 隐藏, Alternate 指定交替填充模式。  
.常量 填充模式_环绕, "1", 隐藏, Winding 指定环绕填充模式。  
.常量 合并模式_替代, "0", 隐藏, Replace 一个剪辑区域被另一个剪辑区域替代。
.常量 合并模式_交集, "1", 隐藏, Intersect 通过采用两个剪辑区域的交集组合两个剪辑区域。
.常量 合并模式_并集, "2", 隐藏, Union 通过采用两个剪辑区域的联合组合两个剪辑区域。
.常量 合并模式_并集减交集, "3", 隐藏, Xor 两者的并集减去两者的交集。通过只采纳单独由其中一个区域（而非两个区域一起）包括的范围来组合两个剪辑区域。
.常量 合并模式_排除新区域, "4", 隐藏, Exclude 指定由从现有区域移除的新区域的结果替代现有区域。换言之，从现有区域中排除新区域。
.常量 合并模式_排除旧区域, "5", 隐藏, Complement 指定由从新区域移除的现有区域的结果替代现有区域。换言之，从新区域中排除现有区域。
.常量 颜色调整类型_默认, "0", 隐藏, ColorAdjustTypeDefault。适应用各类型
.常量 颜色调整类型_位图, "1", 隐藏, ColorAdjustTypeBitmap。用于位图
.常量 颜色调整类型_画刷, "2", 隐藏, ColorAdjustTypeBrush。用于图元文件中的画刷
.常量 颜色调整类型_画笔, "3", 隐藏, ColorAdjustTypePen。用于图元文件中的画笔
.常量 颜色调整类型_文本, "4", 隐藏, ColorAdjustTypeText。用于图元文件中的文本的画刷
.常量 颜色调整类型_总数, "5", 隐藏, ColorAdjustTypeCount，内部使用
.常量 颜色调整类型_通用, "6", 隐藏, ColorAdjustTypeAny，保留，不使用
.常量 输出通道_C, "0", 隐藏, ColorChannelFlagsC
.常量 输出通道_M, "1", 隐藏, ColorChannelFlagsM
.常量 输出通道_Y, "2", 隐藏, ColorChannelFlagsY
.常量 输出通道_K, "3", 隐藏, ColorChannelFlagsK
.常量 输出通道_Last, "4", 隐藏, ColorChannelFlagsLast
.常量 调色板标志_含透明色, "1", 隐藏, PaletteFlagsHasAlpha
.常量 调色板标志_灰度, "2", 隐藏, PaletteFlagsGrayScale
.常量 调色板标志_半色, "4", 隐藏, PaletteFlagsHalftone
.常量 矩阵顺序_预先计算, "0", 隐藏, Prepend 在旧操作前应用新操作。 
.常量 矩阵顺序_追加, "1", 隐藏, Append 在旧操作后应用新操作。 
.常量 颜色矩阵标志_默认, "0", 隐藏, ColorMatrixFlagsDefault。所有的颜色值（包括灰度）是由相同的颜色调整矩阵调整的指定
.常量 颜色矩阵标志_忽略灰度, "1", 隐藏, ColorMatrixFlagsSkipGrays。不对灰度进行调整
.常量 颜色矩阵标志_分别, "2", 隐藏, ColorMatrixFlagsAltGray。颜色是一个矩阵，灰度是另一个矩阵。
.常量 图像格式_内存BMP, "“{B96B3CAA-0728-11D3-9D7B-0000F81EF32E}”", 隐藏, ImageFormatMemoryBMP
.常量 图像格式_BMP, "“{B96B3CAB-0728-11D3-9D7B-0000F81EF32E}”", 隐藏, ImageFormatBMP
.常量 图像格式_JPEG, "“{B96B3CAE-0728-11D3-9D7B-0000F81EF32E}”", 隐藏, ImageFormatJPEG
.常量 图像格式_GIF, "“{B96B3CB0-0728-11D3-9D7B-0000F81EF32E}”", 隐藏, ImageFormatGIF
.常量 图像格式_EMF, "“{B96B3CAC-0728-11D3-9D7B-0000F81EF32E}”", 隐藏, ImageFormatEMF
.常量 图像格式_WMF, "“{B96B3CAD-0728-11D3-9D7B-0000F81EF32E}”", 隐藏, ImageFormatWMF
.常量 图像格式_TIFF, "“{B96B3CB1-0728-11D3-9D7B-0000F81EF32E}”", 隐藏, ImageFormatTIFF
.常量 图像格式_PNG, "“{B96B3CAF-0728-11D3-9D7B-0000F81EF32E}”", 隐藏, ImageFormatPNG
.常量 图像格式_ICO, "“{B96B3CB5-0728-11D3-9D7B-0000F81EF32E}”", 隐藏, ImageFormatIcon
.常量 图像类型_未知, "0", 隐藏, ImageTypeUnknown
.常量 图像类型_位图, "1", 隐藏, ImageTypeBitmap
.常量 图像类型_图元文件, "2", 隐藏, ImageTypeMetafile
.常量 图像属性_无, "0", 隐藏, ImageFlagsNone
.常量 图像属性_可缩放, "1", 隐藏, ImageFlagsScalable
.常量 图像属性_含透明, "2", 隐藏, ImageFlagsHasAlpha
.常量 图像属性_含半透明, "4", 隐藏, ImageFlagsHasTranslucent
.常量 图像属性_可部分缩放, "8", 隐藏, ImageFlagsPartiallyScalable
.常量 图像属性_色彩空间RGB, "16", 隐藏, ImageFlagsColorSpaceRGB
.常量 图像属性_色彩空间CMYK, "32", 隐藏, ImageFlagsColorSpaceCMYK
.常量 图像属性_色彩空间灰度, "64", 隐藏, ImageFlagsColorSpaceGRAY
.常量 图像属性_色彩空间YCBCR, "128", 隐藏, ImageFlagsColorSpaceYCBCR
.常量 图像属性_色彩空间YCCK, "256", 隐藏, ImageFlagsColorSpaceYCCK
.常量 图像属性_含DPI, "4096", 隐藏, ImageFlagsHasRealDPI
.常量 图像属性_含像素尺寸, "8192", 隐藏, ImageFlagsHasRealPixelSize
.常量 图像属性_只读, "65536", 隐藏, ImageFlagsReadOnly
.常量 图像属性_高速缓存, "131072", 隐藏, ImageFlagsCaching
.常量 像素格式_Indexed, "65536", 隐藏, Indexed 该像素数据包含颜色索引值，这意味着这些值是系统颜色表中颜色的索引，而不是单个颜色值。
.常量 像素格式_GDI, "131072", 隐藏, Gdi 像素数据包含 GDI 颜色。
.常量 像素格式_Alpha, "262144", 隐藏, Alpha 像素数据包含没有进行过自左乘的 alpha 值。
.常量 像素格式_PAlpha, "524288", 隐藏, PAlpha 像素格式包含自左乘的 alpha 值。
.常量 像素格式_Extended, "1048576", 隐藏, Extended 保留。
.常量 像素格式_Canonical, "2097152", 隐藏, Canonical 保留。
.常量 像素格式_Undefined, "0", 隐藏, Undefined 未定义像素格式。
.常量 像素格式_1bppIndexed, "196865", 隐藏, Format1bppIndexed 指定像素格式为每像素 1 位，并指定它使用索引颜色。因此颜色表中有两种颜色。
.常量 像素格式_4bppIndexed, "197634", 隐藏, Format4bppIndexed 指定格式为每像素 4 位而且已创建索引。
.常量 像素格式_8bppIndexed, "198659", 隐藏, Format8bppIndexed 指定格式为每像素 8 位而且已创建索引。因此颜色表中有 256 种颜色。
.常量 像素格式_16bppGrayScale, "1052676", 隐藏, Format16bppGrayScale 像素格式为每像素 16 位。该颜色信息指定 65536 种灰色调。
.常量 像素格式_16bppRGB555, "135173", 隐藏, Format16bppRgb555 指定格式为每像素 16 位；红色、绿色和蓝色分量各使用 5 位。剩余的 1 位未使用。
.常量 像素格式_16bppRGB565, "135174", 隐藏, Format16bppRgb565 指定格式为每像素 16 位；红色分量使用 5 位，绿色分量使用 6 位，蓝色分量使用 5 位。
.常量 像素格式_16bppARGB1555, "397319", 隐藏, Format16bppArgb1555 像素格式为每像素 16 位。该颜色信息指定 32
.常量 像素格式_24bppRGB, "137224", 隐藏, Format24bppRgb 指定格式为每像素 24 位；红色、绿色和蓝色分量各使用 8 位。
.常量 像素格式_32bppRGB, "139273", 隐藏, Format32bppRgb 指定格式为每像素 32 位；红色、绿色和蓝色分量各使用 8 位。剩余的 8 位未使用。
.常量 像素格式_32bppARGB, "2498570", 隐藏, Format32bppArgb 指定格式为每像素 32 位；alpha、红色、绿色和蓝色分量各使用 8 位。
.常量 像素格式_32bppPARGB, "925707", 隐藏, Format32bppPArgb 指定格式为每像素 32 位；alpha、红色、绿色和蓝色分量各使用 8 位。根据 alpha 分量，对红色、绿色和蓝色分量进行自左乘。
.常量 像素格式_48bppRGB, "1060876", 隐藏, Format48bppRgb 指定格式为每像素 48 位；红色、绿色和蓝色分量各使用 16 位。
.常量 像素格式_64bppARGB, "3424269", 隐藏, Format64bppArgb 指定格式为每像素 64 位；alpha、红色、绿色和蓝色分量各使用 16 位。
.常量 像素格式_64bppPARGB, "1851406", 隐藏, Format64bppPArgb 指定格式为每像素 64 位；alpha、红色、绿色和蓝色分量各使用 16 位。根据 alpha 分量，对红色、绿色和蓝色分量进行自左乘。
.常量 帧维面_时间, "“{6AEDBD6D-3FB5-418A-83A6-7F45229DC872}”", 隐藏, 用于 GIF
.常量 帧维面_分辨率, "“{84236F7B-3BD3-428F-8DAB-4EA1439CA315}”", 隐藏, 
.常量 帧维面_页, "“{7462DC86-6180-4C7E-8E3F-EE7333A7A483}”", 隐藏, 用于 TIFF
.常量 属性值类型_字节型, "1", 隐藏, PropertyTagTypeByte
.常量 属性值类型_字符型, "2", 隐藏, PropertyTagTypeASCII
.常量 属性值类型_短整数型, "3", 隐藏, PropertyTagTypeShort
.常量 属性值类型_整数型, "4", 隐藏, PropertyTagTypeLong
.常量 属性值类型_整数型对, "5", 隐藏, PropertyTagTypeRational。表示成对的整数数组
.常量 属性值类型_未定义, "7", 隐藏, PropertyTagTypeUndefined
.常量 属性值类型_小数型, "9", 隐藏, PropertyTagTypeSLONG
.常量 属性值类型_小数型对, "10", 隐藏, PropertyTagTypeSRational。表示成对的小数数组
.常量 属性标签_新子文件, "254", 隐藏, PropertyTagNewSubfileType
.常量 属性标签_子文件, "255", 隐藏, PropertyTagSubfileType
.常量 属性标签_图像宽度, "256", 隐藏, PropertyTagImageWidth
.常量 属性标签_图像高度, "257", 隐藏, PropertyTagImageHeight
.常量 属性标签_位深, "258", 隐藏, PropertyTagBitsPerSample
.常量 属性标签_压缩, "259", 隐藏, PropertyTagCompression
.常量 属性标签_光度测量解释, "262", 隐藏, PropertyTagPhotometricInterp
.常量 属性标签_分离黑白, "263", 隐藏, PropertyTagThreshHolding
.常量 属性标签_抖动或半色调宽, "264", 隐藏, PropertyTagCellWidth
.常量 属性标签_抖动或半色调高, "265", 隐藏, PropertyTagCellHeight
.常量 属性标签_填充顺序, "266", 隐藏, PropertyTagFillOrder
.常量 属性标签_文档名称, "269", 隐藏, PropertyTagDocumentName
.常量 属性标签_图像描述, "270", 隐藏, PropertyTagImageDescription
.常量 属性标签_设备制造商, "271", 隐藏, PropertyTagEquipMake
.常量 属性标签_设备型号, "272", 隐藏, PropertyTagEquipModel
.常量 属性标签_字节偏移量, "273", 隐藏, PropertyTagStripOffsets
.常量 属性标签_方向定位, "274", 隐藏, PropertyTagOrientation
.常量 属性标签_每像素颜色分量, "277", 隐藏, PropertyTagSamplesPerPixel
.常量 属性标签_每行字节数, "278", 隐藏, PropertyTagRowsPerStrip
.常量 属性标签_字节总数, "279", 隐藏, PropertyTagStripBytesCount
.常量 属性标签_最小采样值, "280", 隐藏, PropertyTagMinSampleValue
.常量 属性标签_最大采样值, "281", 隐藏, PropertyTagMaxSampleValue
.常量 属性标签_水平分辨率, "282", 隐藏, PropertyTagXResolution
.常量 属性标签_垂直分辨率, "283", 隐藏, PropertyTagYResolution
.常量 属性标签_数据配置, "284", 隐藏, PropertyTagPlanarConfig
.常量 属性标签_页名称, "285", 隐藏, PropertyTagPageName
.常量 属性标签_水平位置, "286", 隐藏, PropertyTagXPosition
.常量 属性标签_垂直位置, "287", 隐藏, PropertyTagYPosition
.常量 属性标签_释放偏移, "288", 隐藏, PropertyTagFreeOffset
.常量 属性标签_释放字节偏移, "289", 隐藏, PropertyTagFreeByteCounts
.常量 属性标签_灰度单位, "290", 隐藏, PropertyTagGrayResponseUnit
.常量 属性标签_灰度密度, "291", 隐藏, PropertyTagGrayResponseCurve
.常量 属性标签_T4选项, "292", 隐藏, PropertyTagT4Option
.常量 属性标签_T6选项, "293", 隐藏, PropertyTagT6Option
.常量 属性标签_分辨率单位, "296", 隐藏, PropertyTagResolutionUnit
.常量 属性标签_页码, "297", 隐藏, PropertyTagPageNumber
.常量 属性标签_传输功能, "301", 隐藏, PropertyTagTransferFuncition
.常量 属性标签_软件名, "305", 隐藏, PropertyTagSoftwareUsed
.常量 属性标签_创建时间, "306", 隐藏, PropertyTagDateTime
.常量 属性标签_作者, "315", 隐藏, PropertyTagArtist
.常量 属性标签_主机名, "316", 隐藏, PropertyTagHostComputer
.常量 属性标签_预测, "317", 隐藏, PropertyTagPredictor
.常量 属性标签_白点色度, "318", 隐藏, PropertyTagWhitePoint
.常量 属性标签_重要颜色, "319", 隐藏, PropertyTagPrimaryChromaticities
.常量 属性标签_调色板, "320", 隐藏, PropertyTagColorMap
.常量 属性标签_半色调, "321", 隐藏, PropertyTagHalftoneHints
.常量 属性标签_平铺宽度, "322", 隐藏, PropertyTagTileWidth
.常量 属性标签_平铺长度, "323", 隐藏, PropertyTagTileLength
.常量 属性标签_平铺偏移量, "324", 隐藏, PropertyTagTileOffset
.常量 属性标签_平铺字节总数, "325", 隐藏, PropertyTagTileByteCounts
.常量 属性标签_置墨水, "332", 隐藏, PropertyTagInkSet
.常量 属性标签_墨水名, "333", 隐藏, PropertyTagInkNames
.常量 属性标签_墨水数, "334", 隐藏, PropertyTagNumberOfInks
.常量 属性标签_颜色成分, "336", 隐藏, PropertyTagDotRange
.常量 属性标签_打印环境, "337", 隐藏, PropertyTagTargetPrinter
.常量 属性标签_额外颜色分量, "338", 隐藏, PropertyTagExtraSamples
.常量 属性标签_采样格式, "339", 隐藏, PropertyTagSampleFormat
.常量 属性标签_采样最小值, "340", 隐藏, PropertyTagSMinSampleValue
.常量 属性标签_采样最大值, "341", 隐藏, PropertyTagSMaxSampleValue
.常量 属性标签_传输范围, "342", 隐藏, PropertyTagTransferRange
.常量 属性标签_JPEG压缩, "512", 隐藏, PropertyTagJPEGProc
.常量 属性标签_JPEG格式, "513", 隐藏, PropertyTagJPEGInterFormat
.常量 属性标签_JPEG长度, "514", 隐藏, PropertyTagJPEGInterLength
.常量 属性标签_JPEG重置间隔, "515", 隐藏, PropertyTagJPEGRestartInterval
.常量 属性标签_JPEG无损预测, "517", 隐藏, PropertyTagJPEGLosslessPredictors
.常量 属性标签_JPEG点变化值, "518", 隐藏, PropertyTagJPEGPointTransforms
.常量 属性标签_JPEG量化表, "519", 隐藏, PropertyTagJPEGQTables
.常量 属性标签_JPEGdc表, "520", 隐藏, PropertyTagJPEGDCTables
.常量 属性标签_JPEGac表, "521", 隐藏, PropertyTagJPEGACTables
.常量 属性标签_伽玛值, "769", 隐藏, PropertyTagGamma
.常量 属性标签_ICC配置文件, "770", 隐藏, PropertyTagICCProfileDescriptor
.常量 属性标签_SRGB渲染, "771", 隐藏, PropertyTagSRGBRenderingIntent
.常量 属性标签_图像标题, "800", 隐藏, PropertyTagImageTitle
.常量 属性标签_版权, "33432", 隐藏, PropertyTagCopyright
.常量 属性标签_水平分辨率单位, "20481", 隐藏, PropertyTagResolutionXUnit。1、每英寸，2.每厘米
.常量 属性标签_垂直分辨率单位, "20482", 隐藏, PropertyTagResolutionYUnit。1、每英寸，2.每厘米
.常量 属性标签_宽度单位, "20483", 隐藏, PropertyTagResolutionXLengthUnit。1、英寸，2、厘米，3、点，4、派卡，5、列
.常量 属性标签_高度单位, "20484", 隐藏, PropertyTagResolutionYLengthUnit。1、英寸，2、厘米，3、点，4、派卡，5、列
.常量 属性标签_打印选项, "20485", 隐藏, PropertyTagPrintFlags
.常量 属性标签_打印版本, "20486", 隐藏, PropertyTagPrintFlagsVersion
.常量 属性标签_打印裁剪标志, "20487", 隐藏, PropertyTagPrintFlagsCrop
.常量 属性标签_打印宽度, "20488", 隐藏, PropertyTagPrintFlagsBleedWidth
.常量 属性标签_打印宽度比例, "20489", 隐藏, PropertyTagPrintFlagsBleedWidthScale
.常量 属性标签_网格频率, "20490", 隐藏, PropertyTagHalftoneLPI
.常量 属性标签_网格频率单位, "20491", 隐藏, PropertyTagHalftoneLPIUnit
.常量 属性标签_网格角度, "20492", 隐藏, PropertyTagHalftoneDegree
.常量 属性标签_网格形状, "20493", 隐藏, PropertyTagHalftoneShape
.常量 属性标签_网格杂项, "20494", 隐藏, PropertyTagHalftoneMisc
.常量 属性标签_网格是否默认屏幕, "20495", 隐藏, PropertyTagHalftoneScreen
.常量 属性标签_JPEG品质_Adobe, "20496", 隐藏, PropertyTagJPEGQuality
.常量 属性标签_网格大小, "20497", 隐藏, PropertyTagGridSize
.常量 属性标签_缩略图格式, "20498", 隐藏, PropertyTagThumbnailFormat。0、原始RGB，1、JPEG
.常量 属性标签_缩略图宽度, "20499", 隐藏, PropertyTagThumbnailWidth
.常量 属性标签_缩略图高度, "20500", 隐藏, PropertyTagThumbnailHeight
.常量 属性标签_缩略图位深, "20501", 隐藏, PropertyTagThumbnailColorDepth
.常量 属性标签_缩略图色板数量, "20502", 隐藏, PropertyTagThumbnailPlanes
.常量 属性标签_缩略图行字节数, "20503", 隐藏, PropertyTagThumbnailRawBytes
.常量 属性标签_缩略图大小, "20504", 隐藏, PropertyTagThumbnailSize。总字节大小。
.常量 属性标签_缩略图压缩大小, "20505", 隐藏, PropertyTagThumbnailCompressedSize。
.常量 属性标签_颜色传输功能, "20506", 隐藏, PropertyTagColorTransferFunction
.常量 属性标签_缩略图数据, "20507", 隐藏, PropertyTagThumbnailData
.常量 属性标签_缩略图_宽度, "20512", 隐藏, PropertyTagThumbnailImageWidth
.常量 属性标签_缩略图_高度, "20513", 隐藏, PropertyTagThumbnailImageHeight
.常量 属性标签_缩略图_位深, "20514", 隐藏, PropertyTagThumbnailBitsPerSample
.常量 属性标签_缩略图_压缩, "20515", 隐藏, PropertyTagThumbnailCompression
.常量 属性标签_缩略图_光度测量解释, "20516", 隐藏, PropertyTagThumbnailPhotometricInterp
.常量 属性标签_缩略图_描述, "20517", 隐藏, PropertyTagThumbnailImageDescription
.常量 属性标签_缩略图_设备制造商, "20518", 隐藏, PropertyTagThumbnailEquipMake
.常量 属性标签_缩略图_设备制型号, "20519", 隐藏, PropertyTagThumbnailEquipModel
.常量 属性标签_缩略图_字节偏移量, "20520", 隐藏, PropertyTagThumbnailStripOffsets
.常量 属性标签_缩略图_方向定位, "20521", 隐藏, PropertyTagThumbnailOrientation
.常量 属性标签_缩略图_每像素颜色分量, "20522", 隐藏, PropertyTagThumbnailSamplesPerPixel
.常量 属性标签_缩略图_每行字节数, "20523", 隐藏, PropertyTagThumbnailRowsPerStrip
.常量 属性标签_缩略图_字节总数, "20524", 隐藏, PropertyTagThumbnailStripBytesCount
.常量 属性标签_缩略图_水平分辨率, "20525", 隐藏, PropertyTagThumbnailResolutionX
.常量 属性标签_缩略图_垂直分辨率, "20526", 隐藏, PropertyTagThumbnailResolutionY
.常量 属性标签_缩略图_数据配置, "20527", 隐藏, PropertyTagThumbnailPlanarConfig
.常量 属性标签_缩略图_分辨率单位, "20528", 隐藏, PropertyTagThumbnailResolutionUnit
.常量 属性标签_缩略图_传输功能, "20529", 隐藏, PropertyTagThumbnailTransferFunction
.常量 属性标签_缩略图_软件名, "20530", 隐藏, PropertyTagThumbnailSoftwareUsed
.常量 属性标签_缩略图_更改时间, "20531", 隐藏, PropertyTagThumbnailDateTime
.常量 属性标签_缩略图_作者, "20532", 隐藏, PropertyTagThumbnailArtist
.常量 属性标签_缩略图_白点色度, "20533", 隐藏, PropertyTagThumbnailWhitePoint
.常量 属性标签_缩略图_重要颜色, "20534", 隐藏, PropertyTagThumbnailPrimaryChromaticities
.常量 属性标签_缩略图_YCbCr数据, "20535", 隐藏, PropertyTagThumbnailYCbCrCoefficients
.常量 属性标签_缩略图_YCbCr采样, "20536", 隐藏, PropertyTagThumbnailYCbCrSubsampling
.常量 属性标签_缩略图_YCbCr配置, "20537", 隐藏, PropertyTagThumbnailYCbCrPositioning
.常量 属性标签_缩略图_黑白参考, "20538", 隐藏, PropertyTagThumbnailRefBlackWhite
.常量 属性标签_缩略图_版权信息, "20539", 隐藏, PropertyTagThumbnailCopyRight
.常量 属性标签_亮度表, "20624", 隐藏, PropertyTagLuminanceTable
.常量 属性标签_色度表, "20625", 隐藏, PropertyTagChrominanceTable
.常量 属性标签_帧延时, "20736", 隐藏, PropertyTagFrameDelay
.常量 属性标签_循环次数, "20737", 隐藏, PropertyTagLoopCount。0、无限。
.常量 属性标签_像素单位, "20752", 隐藏, PropertyTagPixelUnit
.常量 属性标签_水平像素单位, "20753", 隐藏, PropertyTagPixelPerUnitX
.常量 属性标签_垂直像素单位, "20754", 隐藏, PropertyTagPixelPerUnitY
.常量 属性标签_直方图调色板, "20755", 隐藏, PropertyTagPaletteHistogram
.常量 属性标签_曝光时间, "33434", 隐藏, PropertyTagLuminanceTable。单位秒
.常量 属性标签_焦距, "33437", 隐藏, PropertyTagExifFNumber
.常量 属性标签_曝光模式, "34850", 隐藏, PropertyTagExifExposureProg。0.没有定义，1.手动，2.正常程序，3.光圈优先，4.快门优先，5.创意程序，6.运动模式，7.人像模式，8.风景模式
.常量 属性标签_测光, "34852", 隐藏, PropertyTagExifSpectralSense
.常量 属性标签_感光度, "34855", 隐藏, PropertyTagExifISOSpeed
.常量 属性标签_光转换能力, "34856", 隐藏, PropertyTagExifOECF
.常量 属性标签_版本, "36864", 隐藏, PropertyTagExifVer
.常量 属性标签_原始时间, "36867", 隐藏, PropertyTagExifDTOrig
.常量 属性标签_数字时间, "36868", 隐藏, PropertyTagExifDTDigitized
.常量 属性标签_扩展压缩, "37121", 隐藏, PropertyTagExifCompConfig
.常量 属性标签_压缩BPP, "37122", 隐藏, PropertyTagExifCompBPP
.常量 属性标签_快门速度, "37377", 隐藏, PropertyTagExifShutterSpeed
.常量 属性标签_光圈, "37378", 隐藏, PropertyTagExifAperture
.常量 属性标签_亮度, "37379", 隐藏, PropertyTagExifBrightness。-99.99到99.99
.常量 属性标签_曝光偏差, "37380", 隐藏, PropertyTagExifExposureBias。-99.99到99.99
.常量 属性标签_最大光圈, "37381", 隐藏, PropertyTagExifMaxAperture。00.00到99.99
.常量 属性标签_自动对焦, "37382", 隐藏, PropertyTagExifSubjectDist
.常量 属性标签_测光模式, "37383", 隐藏, PropertyTagExifMeteringMode。0.未知，1.正常，2.中央重点测光，3.点测光，4.多分区，5.平均测光，6.局部测光。
.常量 属性标签_白平衡, "37384", 隐藏, PropertyTagExifLightSource。0.未知，1.日光，2.荧光灯，3.钨丝灯，17.标准A，18.标准B，19.标准C，20.D55，21.D65，22.D75。
.常量 属性标签_闪光灯, "37385", 隐藏, PropertyTagExifFlash
.常量 属性标签_实际焦距, "37386", 隐藏, PropertyTagExifFocalLength
.常量 属性标签_制造商记录, "37500", 隐藏, PropertyTagExifMakerNote
.常量 属性标签_注释标记, "37510", 隐藏, PropertyTagExifUserComment
.常量 属性标签_创建时间2, "37520", 隐藏, PropertyTagExifDTSubsec
.常量 属性标签_原始时间2, "37521", 隐藏, PropertyTagExifDTOrigSS
.常量 属性标签_数字时间2, "37522", 隐藏, PropertyTagExifDTDigSS
.常量 属性标签_格式版本, "40960", 隐藏, PropertyTagExifFPXVer
.常量 属性标签_颜色空间, "40961", 隐藏, PropertyTagExifColorSpace
.常量 属性标签_有效宽度, "40962", 隐藏, PropertyTagExifPixXDim
.常量 属性标签_有效高度, "40963", 隐藏, PropertyTagExifPixYDim
.常量 属性标签_相关音频文件, "40964", 隐藏, PropertyTagExifRelatedWav
.常量 属性标签_偏移块, "40965", 隐藏, PropertyTagExifInterop
.常量 属性标签_闪光量, "41483", 隐藏, PropertyTagExifFlashEnergy
.常量 属性标签_空间频率表, "41484", 隐藏, PropertyTagExifSpatialFR
.常量 属性标签_焦平面X分辨率, "41486", 隐藏, PropertyTagExifFocalXRes
.常量 属性标签_焦平面Y分辨率, "41487", 隐藏, PropertyTagExifFocalYRes
.常量 属性标签_焦平面分辨率单位, "41488", 隐藏, PropertyTagExifFocalResUnit
.常量 属性标签_主要线路, "41492", 隐藏, PropertyTagExifSubjectLoc
.常量 属性标签_曝光指数, "41493", 隐藏, PropertyTagExifExposureIndex
.常量 属性标签_感光元件, "41495", 隐藏, PropertyTagExifSensingMethod。1.未定义，2.单芯片，3.双芯片，4.三芯片，5.连续色彩，7.三线，8.线性连续色彩
.常量 属性标签_图像源, "41728", 隐藏, PropertyTagExifFileSource
.常量 属性标签_作品类型, "41729", 隐藏, PropertyTagExifSceneType
.常量 属性标签_色彩滤镜阵列, "41730", 隐藏, PropertyTagExifCfaPattern
.常量 旋转翻转_不旋转不翻转, "0", 隐藏, RotateNoneFlipNone
.常量 旋转翻转_旋转90度不翻转, "1", 隐藏, Rotate90FlipNone
.常量 旋转翻转_旋转180度不翻转, "2", 隐藏, Rotate180FlipNone
.常量 旋转翻转_旋转270度不翻转, "3", 隐藏, Rotate270FlipNone
.常量 旋转翻转_不旋转水平翻转, "4", 隐藏, RotateNoneFlipX
.常量 旋转翻转_旋转90度水平翻转, "5", 隐藏, Rotate90FlipX
.常量 旋转翻转_旋转180度水平翻转, "6", 隐藏, Rotate180FlipX
.常量 旋转翻转_旋转270度水平翻转, "7", 隐藏, Rotate270FlipX
.常量 旋转翻转_不旋转垂直翻转, "6", 隐藏, RotateNoneFlipY
.常量 旋转翻转_旋转90度垂直翻转, "7", 隐藏, Rotate90FlipY
.常量 旋转翻转_旋转180度垂直翻转, "4", 隐藏, Rotate180FlipY
.常量 旋转翻转_旋转270度垂直翻转, "5", 隐藏, Rotate270FlipY
.常量 旋转翻转_不旋转水平和垂直翻转, "2", 隐藏, RotateNoneFlipXY
.常量 旋转翻转_旋转90度水平和垂直翻转, "3", 隐藏, Rotate90FlipXY
.常量 旋转翻转_旋转180度水平和垂直翻转, "0", 隐藏, Rotate180FlipXY
.常量 旋转翻转_旋转270度水平和垂直翻转, "1", 隐藏, Rotate270FlipXY
.常量 编码器_压缩, "“{E09D739D-CCD4-44EE-8EBA-3FBF8BE4FC58}”", 隐藏, EncoderCompression
.常量 编码器_色深, "“{66087055-AD66-4C7C-9A18-38A2310B8337}”", 隐藏, EncoderColorDepth
.常量 编码器_扫描方式, "“{3A4E2661-3109-4E56-8536-42C156E7DCFA}”", 隐藏, EncoderScanMethod
.常量 编码器_版本, "“{24D18C76-814A-41A4-BF53-1C219CCCF797}”", 隐藏, EncoderVersion
.常量 编码器_呈现方式, "“{6D42C53A-229A-4825-8BB7-5C99E2B9A8B8}”", 隐藏, EncoderRenderMethod
.常量 编码器_品质, "“{1D5BE4B5-FA4A-452D-9CDD-5DB35105E7EB}”", 隐藏, EncoderQuality
.常量 编码器_转换, "“{8D0EB2D1-A58E-4EA8-AA14-108074B7B6F9}”", 隐藏, EncoderTransformation
.常量 编码器_亮度表, "“{EDB33BCE-0266-4A77-B904-27216099E717}”", 隐藏, EncoderLuminanceTable
.常量 编码器_色度表, "“{F2E455DC-09B3-4316-8260-676ADA32481C}”", 隐藏, EncoderChrominanceTable
.常量 编码器_保存标志, "“{292266FC-AC40-47BF-8CFC-A85B89A655DE}”", 隐藏, EncoderSaveFlag
.常量 编码器参数值类型_字节型, "1", 隐藏, EncoderParameterValueTypeByte
.常量 编码器参数值类型_字符型, "2", 隐藏, EncoderParameterValueTypeASCII
.常量 编码器参数值类型_短整数型, "3", 隐藏, EncoderParameterValueTypeShort
.常量 编码器参数值类型_整数型, "4", 隐藏, EncoderParameterValueTypeLong
.常量 编码器参数值类型_整数对, "5", 隐藏, EncoderParameterValueTypeRational。为整数型数组，有两个成员。第一个表示最小值，第二个表示最大值。
.常量 编码器参数值类型_整数范围, "6", 隐藏, EncoderParameterValueTypeLongRange。为整数型数组，有两个成员。第一个表示低32位，第二个表示高32位。
.常量 编码器参数值类型_未定义, "7", 隐藏, EncoderParameterValueTypeUndefined。
.常量 编码器参数值类型_整数对范围, "8", 隐藏, EncoderParameterValueTypeRationalRange。
.常量 编码器值_颜色类型CMYK, "0", 隐藏, EncoderValueColorTypeCMYK。GDI+1.0没有使用。
.常量 编码器值_颜色类型YCCK, "1", 隐藏, EncoderValueColorTypeYCCK。GDI+1.0没有使用。
.常量 编码器值_压缩LZW, "2", 隐藏, EncoderValueCompressionLZW。对于TIF图像的LZW压缩方法
.常量 编码器值_压缩CCITT3, "3", 隐藏, EncoderValueCompressionCCITT3。对于TIF图像的CCITT3压缩方法
.常量 编码器值_压缩CCITT4, "4", 隐藏, EncoderValueCompressionCCITT4。对于TIF图像的CCITT4压缩方法
.常量 编码器值_压缩RLE, "5", 隐藏, EncoderValueCompressionRle。对于TIF图像的RLE压缩方法
.常量 编码器值_压缩无, "6", 隐藏, EncoderValueCompressionNone。对于TIF图像指定无压缩
.常量 编码器值_扫描方式隔行扫描, "7", 隐藏, EncoderValueScanMethodInterlaced。GDI+1.0没有使用。
.常量 编码器值_扫描方式逐行扫描, "8", 隐藏, EncoderValueScanMethodNonInterlaced。GDI+1.0没有使用。
.常量 编码器值_版本GIF87, "9", 隐藏, EncoderValueVersionGif87。GDI+1.0没有使用。
.常量 编码器值_版本GIF89, "10", 隐藏, EncoderValueVersionGif89。GDI+1.0没有使用。
.常量 编码器值_渲染, "11", 隐藏, EncoderValueRenderProgressive。GDI+1.0没有使用。
.常量 编码器值_不渲染, "12", 隐藏, EncoderValueRenderNonProgressive。GDI+1.0没有使用。
.常量 编码器值_旋转90度, "13", 隐藏, EncoderValueTransformRotate90。对于JPEG图像无损逆时针旋转90度。
.常量 编码器值_旋转180度, "14", 隐藏, EncoderValueTransformRotate180。对于JPEG图像无损旋转180度
.常量 编码器值_旋转270度, "15", 隐藏, EncoderValueTransformRotate270。对于JPEG图像无损逆时针旋转270度。
.常量 编码器值_水平翻转, "16", 隐藏, EncoderValueTransformFlipHorizontal。对于JPEG图像无损水平翻转。
.常量 编码器值_垂直翻转, "17", 隐藏, EncoderValueTransformFlipVertical。对于JPEG图像无损垂直翻转。
.常量 编码器值_多帧编码, "18", 隐藏, EncoderValueMultiFrame
.常量 编码器值_最后一帧, "19", 隐藏, EncoderValueLastFrame
.常量 编码器值_刷新, "20", 隐藏, EncoderValueFlush。指定的编码对象是被关闭的
.常量 编码器值_帧维面延时, "21", 隐藏, EncoderValueFrameDimensionTime。GDI+1.0没有使用。
.常量 编码器值_帧维面分辨率, "22", 隐藏, EncoderValueFrameDimensionResolution。GDI+1.0没有使用。
.常量 编码器值_帧维面页, "23", 隐藏, EncoderValueFrameDimensionPage。对于TIF图像指定页。
.常量 画刷类型_固定色, "0", 隐藏, BrushTypeSolidColor
.常量 画刷类型_阴影, "1", 隐藏, BrushTypeHatchFill
.常量 画刷类型_图像纹理, "2", 隐藏, BrushTypeTextureFill
.常量 画刷类型_路径渐变, "3", 隐藏, BrushTypePathGradient
.常量 画刷类型_线性渐变, "4", 隐藏, BrushTypeLinearGradient
.常量 阴影风格_水平线, "0", 隐藏, Horizontal 水平线的图案。
.常量 阴影风格_垂直线, "1", 隐藏, Vertical 垂直线的图案。
.常量 阴影风格_左斜线, "2", 隐藏, ForwardDiagonal 从左上到右下的对角线的线条图案。
.常量 阴影风格_右斜线, "3", 隐藏, BackwardDiagonal 从右上到左下的对角线的线条图案。
.常量 阴影风格_十字线, "4", 隐藏, Cross 指定交叉的水平线和垂直线。
.常量 阴影风格_交叉斜线, "5", 隐藏, DiagonalCross 指定互相交叉的正向对角线和反向对角线。这些直线是锯齿消除的。
.常量 阴影风格_百分05阴影, "6", 隐藏, Percent05 指定 5% 阴影。前景色与背景色的比例为 5:100。
.常量 阴影风格_百分10阴影, "7", 隐藏, Percent10 指定 10% 阴影。前景色与背景色的比例为 10:100。
.常量 阴影风格_百分20阴影, "8", 隐藏, Percent20 指定 20% 阴影。前景色与背景色的比例为 20:100。
.常量 阴影风格_百分25阴影, "9", 隐藏, Percent25 指定 25% 阴影。前景色与背景色的比例为 25:100。
.常量 阴影风格_百分30阴影, "10", 隐藏, Percent30 指定 30% 阴影。前景色与背景色的比例为 30:100。
.常量 阴影风格_百分40阴影, "11", 隐藏, Percent40 指定 40% 阴影。前景色与背景色的比例为 40:100。
.常量 阴影风格_百分50阴影, "12", 隐藏, Percent50 指定 50% 阴影。前景色与背景色的比例为 50:100。
.常量 阴影风格_百分60阴影, "13", 隐藏, Percent60 指定 60% 阴影。前景色与背景色的比例为 60:100。
.常量 阴影风格_百分70阴影, "14", 隐藏, Percent70 指定 70% 阴影。前景色与背景色的比例为 70:100。
.常量 阴影风格_百分75阴影, "15", 隐藏, Percent75 指定 75% 阴影。前景色与背景色的比例为 75:100。
.常量 阴影风格_百分80阴影, "16", 隐藏, Percent80 指定 80% 阴影。前景色与背景色的比例为 80:100。
.常量 阴影风格_百分90阴影, "17", 隐藏, Percent90 指定 90% 阴影。前景色与背景色的比例为 90:100。
.常量 阴影风格_细向下对角线, "18", 隐藏, LightDownwardDiagonal
.常量 阴影风格_细向上对角线, "19", 隐藏, LightUpwardDiagonal 指定从顶点到底点向左倾斜的对角线，其两边夹角比 BackwardDiagonal 小 50%，但这些直线不是锯齿消除的。
.常量 阴影风格_粗向下对角线, "20", 隐藏, DarkDownwardDiagonal 指定从顶点到底点向右倾斜的对角线，其两边夹角比 ForwardDiagonal 小 50%，宽度是其两倍。此阴影图案不是锯齿消除的。
.常量 阴影风格_粗向上对角线, "21", 隐藏, DarkUpwardDiagonal 指定从顶点到底点向左倾斜的对角线，其两边夹角比 BackwardDiagonal 小 50%，宽度是其两倍，但这些直线不是锯齿消除的。
.常量 阴影风格_宽向下对角线, "22", 隐藏, WideDownwardDiagonal 指定从顶点到底点向右倾斜的对角线，其间距与阴影样式 ForwardDiagonal 相同，宽度是其三倍，但它们不是锯齿消除的。
.常量 阴影风格_宽向上对角线, "23", 隐藏, WideUpwardDiagonal 指定从顶点到底点向左倾斜的对角线，其间距与阴影样式 BackwardDiagonal 相同，宽度是其三倍，但它们不是锯齿消除的。
.常量 阴影风格_细垂直线, "24", 隐藏, LightVertical 指定垂直线的两边夹角比 Vertical 小 50%。
.常量 阴影风格_细水平线, "25", 隐藏, LightHorizontal 指定水平线，其两边夹角比 Horizontal 小 50%。
.常量 阴影风格_密垂直线, "26", 隐藏, NarrowVertical 指定垂直线的两边夹角比阴影样式 Vertical 小 75%（或者比 LightVertical 小 25%）。
.常量 阴影风格_密水平线, "27", 隐藏, NarrowHorizontal 指定水平线的两边夹角比阴影样式 Horizontal 小 75%（或者比 LightHorizontal 小 25%）。
.常量 阴影风格_粗垂直线, "28", 隐藏, DarkVertical 指定垂直线的两边夹角比 Vertical 小 50% 并且宽度是其两倍。
.常量 阴影风格_粗水平线, "29", 隐藏, DarkHorizontal 指定水平线的两边夹角比水平小 50% 并且宽度是 HatchStyleHorizontal 的两倍。
.常量 阴影风格_右斜虚线, "30", 隐藏, DashedDownwardDiagonal 指定虚线对角线，这些对角线从顶点到底点向右倾斜。
.常量 阴影风格_左斜虚线, "31", 隐藏, DashedUpwardDiagonal 指定虚线对角线，这些对角线从顶点到底点向左倾斜。
.常量 阴影风格_水平虚线, "32", 隐藏, DashedHorizontal 指定虚线水平线。
.常量 阴影风格_垂直虚线, "33", 隐藏, DashedVertical 指定虚线垂直线。
.常量 阴影风格_小五彩纸屑, "34", 隐藏, SmallConfetti 指定带有五彩纸屑外观的阴影。
.常量 阴影风格_大五彩纸屑, "35", 隐藏, LargeConfetti 指定具有五彩纸屑外观的阴影，并且它是由比 SmallConfetti 更大的片构成的。
.常量 阴影风格_曲线, "36", 隐藏, ZigZag 指定由 Z 字形构成的水平线。
.常量 阴影风格_波浪线, "37", 隐藏, Wave 指定由代字号“~”构成的水平线。
.常量 阴影风格_对角砖块, "38", 隐藏, DiagonalBrick 指定具有分层砖块外观的阴影，它从顶点到底点向左倾斜。
.常量 阴影风格_水平砖块, "39", 隐藏, HorizontalBrick 指定具有水平分层砖块外观的阴影。
.常量 阴影风格_编织, "40", 隐藏, Weave 指定具有织物外观的阴影。
.常量 阴影风格_花格子, "41", 隐藏, Plaid 指定具有格子花呢材料外观的阴影。
.常量 阴影风格_草皮, "42", 隐藏, Divot 指定具有草皮层外观的阴影。
.常量 阴影风格_十字点线, "43", 隐藏, DottedGrid 指定互相交叉的水平线和垂直线，每一直线都是由点构成的。
.常量 阴影风格_交叉点线, "44", 隐藏, DottedDiamond 指定互相交叉的正向对角线和反向对角线，每一对角线都是由点构成的。
.常量 阴影风格_瓦片, "45", 隐藏, Shingle 指定带有对角分层鹅卵石外观的阴影，它从顶点到底点向右倾斜。
.常量 阴影风格_网格, "46", 隐藏, Trellis 指定具有格架外观的阴影。
.常量 阴影风格_球形, "47", 隐藏, Sphere 指定具有球体彼此相邻放置的外观的阴影。
.常量 阴影风格_小网格, "48", 隐藏, SmallGrid 指定互相交叉的水平线和垂直线，其两边夹角比阴影样式 Cross 小 50%。
.常量 阴影风格_小棋盘, "49", 隐藏, SmallCheckerBoard 指定带有棋盘外观的阴影。
.常量 阴影风格_大棋盘, "50", 隐藏, LargeCheckerBoard 指定具有棋盘外观的阴影，棋盘所具有的方格大小是 SmallCheckerBoard 大小的两倍。
.常量 阴影风格_边线金刚石, "51", 隐藏, OutlinedDiamond 指定互相交叉的正向对角线和反向对角线，但这些对角线不是锯齿消除的。
.常量 阴影风格_金刚石, "52", 隐藏, SolidDiamond 指定具有对角放置的棋盘外观的阴影。
.常量 阴影风格_大网格, "4", 隐藏, LargeGrid 指定阴影样式 Cross。
.常量 环绕模式_平铺, "0", 隐藏, Tile 平铺渐变或纹理。
.常量 环绕模式_平铺水平翻转, "1", 隐藏, TileFlipX 水平反转纹理或渐变，然后平铺该纹理或渐变。
.常量 环绕模式_平铺垂直翻转, "2", 隐藏, TileFlipY 垂直反转纹理或渐变，然后平铺该纹理或渐变。
.常量 环绕模式_平铺水平垂直翻转, "3", 隐藏, TileFlipXY 水平和垂直反转纹理或渐变，然后平铺该纹理或渐变。
.常量 环绕模式_固定, "4", 隐藏, Clamp 纹理或渐变没有平铺。
.常量 线性渐变模式_从左到右, "0", 隐藏, Horizontal 指定从左到右的渐变。
.常量 线性渐变模式_从上到下, "1", 隐藏, Vertical 指定从上到下的渐变。
.常量 线性渐变模式_从左上到右下, "2", 隐藏, ForwardDiagonal 指定从左上到右下的渐变。
.常量 线性渐变模式_从右上到左下, "3", 隐藏, BackwardDiagonal 指定从右上到左下的渐变。
.常量 线帽样式_平线帽, "0", 隐藏, LineCapFlat
.常量 线帽样式_方线帽, "1", 隐藏, LineCapSquare
.常量 线帽样式_圆线帽, "2", 隐藏, LineCapRound
.常量 线帽样式_三角线帽, "3", 隐藏, LineCapTriangle
.常量 线帽样式_没有锚, "16", 隐藏, LineCapNoAnchor
.常量 线帽样式_方锚头帽, "17", 隐藏, LineCapSquareAnchor
.常量 线帽样式_圆锚头帽, "18", 隐藏, LineCapRoundAnchor
.常量 线帽样式_菱形锚头帽, "19", 隐藏, LineCapDiamondAnchor
.常量 线帽样式_箭头状锚头帽, "20", 隐藏, LineCapArrowAnchor
.常量 线帽样式_自定义线帽, "255", 隐藏, LineCapCustom
.常量 虚线帽样式_方线帽, "0", 隐藏, DashCapFlat
.常量 虚线帽样式_圆线帽, "2", 隐藏, DashCapRound
.常量 虚线帽样式_三角线帽, "3", 隐藏, DashCapTriangle
.常量 连线方式_斜接, "0", 隐藏, LineJoinMiter
.常量 连线方式_斜角, "1", 隐藏, LineJoinBevel
.常量 连线方式_圆角, "2", 隐藏, LineJoinRound
.常量 连线方式_斜接截断, "3", 隐藏, LineJoinMiterClipped。1.0没有使用
.常量 画笔对齐方式_居中, "0", 隐藏, 
.常量 画笔对齐方式_内侧, "1", 隐藏, 
.常量 画笔对齐方式_外侧, "2", 隐藏, 1.0没有使用
.常量 画笔对齐方式_左侧, "3", 隐藏, 1.0没有使用
.常量 画笔对齐方式_右侧, "4", 隐藏, 1.0没有使用
.常量 画笔类型_固色, "0", 隐藏, 
.常量 画笔类型_阴影, "1", 隐藏, 
.常量 画笔类型_图像纹理, "2", 隐藏, 
.常量 画笔类型_路径渐变, "3", 隐藏, 
.常量 画笔类型_线性渐变, "4", 隐藏, 
.常量 画笔类型_未知, "-1", 隐藏, 
.常量 虚线类型_实线, "0", 隐藏, DashStyleSolid
.常量 虚线类型_划线, "1", 隐藏, DashStyleDash
.常量 虚线类型_点线, "2", 隐藏, DashStyleDot
.常量 虚线类型_点划线, "3", 隐藏, DashStyleDashDot
.常量 虚线类型_双点划线, "4", 隐藏, DashStyleDashDotDot
.常量 虚线类型_自定义, "5", 隐藏, DashStyleCustom
.常量 路径点类型_开始, "0", 隐藏, PathPointTypeStart
.常量 路径点类型_直线, "1", 隐藏, PathPointTypeLine
.常量 路径点类型_贝塞尔曲线, "3", 隐藏, PathPointTypeBezier
.常量 路径点类型_类型掩膜, "7", 隐藏, PathPointTypePathTypeMask
.常量 路径点类型_虚线模式, "16", 隐藏, PathPointTypePathDashMode。1.0没有使用
.常量 路径点类型_标记, "32", 隐藏, PathPointTypePathMarker
.常量 路径点类型_关闭子路径, "128", 隐藏, PathPointTypeCloseSubpath
.常量 路径点类型_贝塞尔曲线2, "2", 隐藏, PathPointTypeBezier2
.常量 路径点类型_贝塞尔曲线3, "3", 隐藏, PathPointTypeBezier3
.常量 路径点类型_贝塞尔曲线4, "4", 隐藏, PathPointTypeBezier4
.常量 路径点类型_贝塞尔曲线5, "5", 隐藏, PathPointTypeBezier5
.常量 路径点类型_贝塞尔曲线6, "6", 隐藏, PathPointTypeBezier6
.常量 文本格式标志_方向右到左, "1", 隐藏, StringFormatFlagsDirectionRightToLeft
.常量 文本格式标志_方向垂直, "2", 隐藏, StringFormatFlagsDirectionVertical
.常量 文本格式标志_允许部分延伸, "4", 隐藏, StringFormatFlagsNoFitBlackBox
.常量 文本格式标志_Unicode, "32", 隐藏, StringFormatFlagsDisplayFormatControl
.常量 文本格式标志_禁止不支持字符, "1024", 隐藏, StringFormatFlagsNoFontFallback
.常量 文本格式标志_包含结尾空字符, "2048", 隐藏, StringFormatFlagsMeasureTrailingSpaces
.常量 文本格式标志_不换行, "4096", 隐藏, StringFormatFlagsNoWrap
.常量 文本格式标志_整行布局, "8192", 隐藏, StringFormatFlagsLineLimit。若要确保看到的都是整行，请指定此值，并仔细地提供格式化矩形，使其高度至少为一个行高
.常量 文本格式标志_不裁剪, "16384", 隐藏, StringFormatFlagsNoClip
.常量 文本对齐_靠近, "0", 隐藏, StringAlignmentNear
.常量 文本对齐_居中, "1", 隐藏, StringAlignmentCenter 
.常量 文本对齐_远离, "2", 隐藏, StringAlignmentFar 
.常量 文本修整_无, "0", 隐藏, StringTrimmingNone。指定不进行任何修整。
.常量 文本修整_字符, "1", 隐藏, StringTrimmingCharacter。指定将文本修整成最接近的字符。
.常量 文本修整_单词, "2", 隐藏, StringTrimmingWord。指定将文本修整成最接近的单词。
.常量 文本修整_字符和省略号, "3", 隐藏, StringTrimmingEllipsisCharacter。指定将文本修整成最接近的字符，并在被修整的行的末尾插入一个省略号。 
.常量 文本修整_单词和省略号, "4", 隐藏, StringTrimmingEllipsisWord。指定将文本修整成最接近的单词，并在被修整的行的末尾插入一个省略号。
.常量 文本修整_路径和省略号, "5", 隐藏, StringTrimmingEllipsisPath。中心从被修整的行移除并用省略号替换。这种算法尽可能多地保留了行中的最后一个由斜杠分隔的段。
.常量 热键前缀_无, "0", 隐藏, HotkeyPrefixNone
.常量 热键前缀_显示, "1", 隐藏, HotkeyPrefixShow
.常量 热键前缀_隐藏, "2", 隐藏, HotkeyPrefixHide
.常量 文本数字替换_用户定义, "0", 隐藏, StringDigitSubstituteUser
.常量 文本数字替换_无, "1", 隐藏, StringDigitSubstituteNone 
.常量 文本数字替换_国家, "2", 隐藏, StringDigitSubstituteNational
.常量 文本数字替换_本地, "3", 隐藏, StringDigitSubstituteTraditional
.常量 扭曲模式_透视, "0", 隐藏, 
.常量 扭曲模式_双线性, "1", 隐藏, 
.常量 图像锁定模式_读, "1", 隐藏, ImageLockModeRead
.常量 图像锁定模式_写, "2", 隐藏, ImageLockModeWrite
.常量 图像锁定模式_用户分配缓冲区, "4", 隐藏, ImageLockModeUserInputBuf 
.常量 EMF类型_Emf, "3", 隐藏, EmfTypeEmfOnly
.常量 EMF类型_EmfPlusOnly, "4", 隐藏, EmfTypeEmfPlusOnly
.常量 EMF类型_EmfPlusDual, "5", 隐藏, EmfTypeEmfPlusDual
.常量 图元文件单位_像素, "2", 隐藏, MetafileFrameUnitPixel
.常量 图元文件单位_点, "3", 隐藏, MetafileFrameUnitPoint。1/72英寸
.常量 图元文件单位_英寸, "4", 隐藏, MetafileFrameUnitInch
.常量 图元文件单位_文档, "5", 隐藏, MetafileFrameUnitDocument。1/300英寸
.常量 图元文件单位_毫米, "6", 隐藏, MetafileFrameUnitMillimeter
.常量 图元文件单位_GDI, "7", 隐藏, MetafileFrameUnitGdi。0.01毫米
.常量 图元文件类型_无效, "0", 隐藏, MetafileTypeInvalid
.常量 图元文件类型_Wmf, "1", 隐藏, MetafileTypeWmf
.常量 图元文件类型_WmfAldus, "2", 隐藏, MetafileTypeWmfAldus
.常量 图元文件类型_Emf, "3", 隐藏, MetafileTypeEmf
.常量 图元文件类型_EmfPlusOnly, "4", 隐藏, MetafileTypeEmfPlusOnly
.常量 图元文件类型_EmfPlusDual, "5", 隐藏, MetafileTypeEmfPlusDual
.常量 控制文本标志_查找映射表, "1", 隐藏, DriverStringOptionsCmapLookup。必须包含此标志，原因暂时不明
.常量 控制文本标志_垂直显示, "2", 隐藏, DriverStringOptionsVertical
.常量 控制文本标志_预先实现, "4", 隐藏, DriverStringOptionsRealizedAdvance。只提供第一个字符的坐标。
.常量 控制文本标志_高质量, "8", 隐藏, DriverStringOptionsLimitSubpixel


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 5 0 系统核心支持库
 ' spec A512548E76954B6E92C21055517615B0 3 0 特殊功能支持库
 ' eAPI F7FC1AE45C5C4758AF03EF19F18A395D 3 0 应用接口支持库
 ' iext2 AF6AD80AA4244A59AFB3D83ECF5173CC 2 0 扩展界面支持库二



 ' 所需要的模块
 ' Gdiplus类模块 C:\Documents and Settings\Administrator\桌面\GDIPlus类.ec


数据类型 坐标_, , POINTAPI
    .成员 横向位置, 整数型, , , 
    .成员 纵向位置, 整数型, , , 

数据类型 混合函数结构, , 
    .成员 混合操作, 字节型, , , 
    .成员 混合标志, 字节型, , , 
    .成员 前景透明常量, 字节型, , , 0~255
    .成员 背景透明标志, 字节型, , , 取"1"为透明,0为不透明

数据类型 尺寸_, , 
    .成员 宽度, 整数型, , , 
    .成员 高度, 整数型, , , 

数据类型 矩形_, , RECT
    .成员 左边, 整数型, , , Left
    .成员 顶边, 整数型, , , Top
    .成员 右边, 整数型, , , Right
    .成员 底边, 整数型, , , Bottom

数据类型 窗口放置_, , WINDOWPLACEMENT
    .成员 长度, 整数型, , , 
    .成员 标志, 整数型, , , 
    .成员 窗口显示方式, 整数型, , , “窗口显示之”常数
    .成员 最小横坐标, 整数型, , , 
    .成员 最小纵坐标, 整数型, , , 
    .成员 最大横坐标, 整数型, , , 
    .成员 最大纵坐标, 整数型, , , 
    .成员 窗口左边位置, 整数型, , , 
    .成员 窗口顶边位置, 整数型, , , 
    .成员 窗口右边位置, 整数型, , , 
    .成员 窗口底边位置, 整数型, , , 

数据类型 设备初始设置_, , DEVMODE
    .成员 dmDeviceName, 字节型, , "32", 
    .成员 dmSpecVersion, 整数型, , , 
    .成员 dmDriverVersion, 整数型, , , 
    .成员 dmSize, 整数型, , , 
    .成员 dmDriverExtra, 整数型, , , 
    .成员 dmFields, 整数型, , , 
    .成员 dmOrientation, 整数型, , , 
    .成员 dmPaperSize, 整数型, , , 
    .成员 dmPaperLength, 整数型, , , 
    .成员 dmPaperWidth, 整数型, , , 
    .成员 dmScale, 整数型, , , 
    .成员 dmCopies, 整数型, , , 
    .成员 dmDefaultSource, 整数型, , , 
    .成员 dmPrintQuality, 整数型, , , 
    .成员 dmColor, 整数型, , , 
    .成员 dmDuplex, 整数型, , , 
    .成员 dmYResolution, 整数型, , , 
    .成员 dmTTOption, 整数型, , , 
    .成员 dmCollate, 整数型, , , 
    .成员 dmFormName, 字节型, , "32", 
    .成员 dmUnusedPadding, 整数型, , , 
    .成员 dmBitsPerPel, 整数型, , , 
    .成员 dmPelsWidth, 整数型, , , 
    .成员 dmPelsHeight, 整数型, , , 
    .成员 dmDisplayFlags, 整数型, , , 
    .成员 dmDisplayFrequency, 整数型, , , 

数据类型 绘制结构_, , 绘制结构
    .成员 设备场景, 整数型, , , 
    .成员 fErase, 整数型, , , 
    .成员 绘制矩形, 矩形_, , , 
    .成员 fRestore, 整数型, , , 
    .成员 fIncUpdate, 整数型, , , 
    .成员 rgbReserved, 字节型, , "32", 

数据类型 消息_, , Msg
    .成员 窗口句柄, 整数型, , , hWnd
    .成员 消息号, 整数型, , , Message
    .成员 附加参数1, 整数型, , , wParam
    .成员 附加参数2, 整数型, , , lParam
    .成员 发送时间, 整数型, , , time
    .成员 光标横坐标, 整数型, , , x
    .成员 光标纵坐标, 整数型, , , y

数据类型 滚动条信息, , 
    .成员 结构大小, 整数型, , , 
    .成员 标志, 整数型, , , 
    .成员 最小值, 整数型, , , 
    .成员 最大值, 整数型, , , 
    .成员 页, 整数型, , , 
    .成员 位置, 整数型, , , 
    .成员 跟踪位置, 整数型, , , 

数据类型 初始化组件扩展_, , InitCommonControlsExType
    .成员 结构大小, 整数型, , , dwSize
    .成员 标志, 整数型, , , dwICC

数据类型 坐标F, 公开, PointF
    .成员 x, 小数型, , , 
    .成员 y, 小数型, , , 

数据类型 坐标L, 公开, PointL
    .成员 x, 整数型, , , 
    .成员 y, 整数型, , , 

数据类型 矩形F, 公开, RectF
    .成员 左边, 小数型, , , left
    .成员 顶边, 小数型, , , top
    .成员 宽度, 小数型, , , Width
    .成员 高度, 小数型, , , Height

数据类型 矩形L, 公开, RectL
    .成员 左边, 整数型, , , left
    .成员 顶边, 整数型, , , top
    .成员 宽度, 整数型, , , Width
    .成员 高度, 整数型, , , Height

数据类型 矩形16, 公开, Rect16
    .成员 左边, 短整数型, , , left
    .成员 顶边, 短整数型, , , top
    .成员 宽度, 短整数型, , , Width
    .成员 高度, 短整数型, , , Height

数据类型 尺寸F, 公开, SizeF
    .成员 宽度, 小数型, , , Width
    .成员 高度, 小数型, , , Height

数据类型 尺寸L, 公开, SizeL
    .成员 宽度, 整数型, , , Width
    .成员 高度, 整数型, , , Height

数据类型 色彩映射表, 公开, ColorMap
    .成员 原颜色, 整数型, , , ARGB颜色
    .成员 新颜色, 整数型, , , ARGB颜色

数据类型 颜色调色板, 公开, ColorPalette
    .成员 标志, 整数型, , , “调色板标志_”开头常量。
    .成员 数量, 整数型, , , 
    .成员 ARGB颜色, 整数型, , "1", 

数据类型 编码器参数, 公开, EncoderParameter
    .成员 编码器Guid, 文本型, , , Guid。“编码器_”开头常量
    .成员 值成员数, 整数型, , , NumberOfValues
    .成员 值类型, 整数型, , , Type。“编码器参数值类型_”开头常量
    .成员 值, 字节集, , , Value。

数据类型 编码器参数集, 公开, EncoderParameters
    .成员 参数数量, 整数型, , , 
    .成员 编码器参数, 编码器参数, , "1", 

数据类型 属性项目, 公开, PropertyItem
    .成员 属性标签, 整数型, , , id“属性标签_”开头常量
    .成员 值大小, 整数型, , , length
    .成员 值类型, 整数型, , , type“属性值类型_”开头常量
    .成员 值, 字节集, , , value

数据类型 图像编解码信息, 公开, ImageCodecInfo
    .成员 Clsid, 文本型, , , 
    .成员 图像格式ID, 文本型, , , FormatID
    .成员 编码器名, 文本型, , , CodecName
    .成员 DLL名, 文本型, , , DllName
    .成员 格式描述, 文本型, , , FormatDescription
    .成员 文件扩展名, 文本型, , , FilenameExtension
    .成员 Mime类型, 文本型, , , MimeType
    .成员 标志, 整数型, , , Flags
    .成员 版本, 整数型, , , Version
    .成员 签名数, 整数型, , , SigCount
    .成员 签名大小, 整数型, , , SigSize
    .成员 签名模式, 字节集, , , SigPattern
    .成员 签名掩码, 字节集, , , SigMask

数据类型 路径数据, 公开, PathData
    .成员 总数, 整数型, , , Count
    .成员 坐标组, 坐标F, , "1", Points
    .成员 类型组, 字节型, , "1", Types

数据类型 位图数据, 公开, BitmapData
    .成员 宽度, 整数型, , , Width
    .成员 高度, 整数型, , , Height
    .成员 跨步, 整数型, , , Stride。指定相邻扫描行开始处之间字节偏移量的整数。这通常（但不一定）是以像素格式表示的字节数（例如，2 表示每像素 16 位）乘以位图的宽度。传递给此参数的值必须为 4 的倍数
    .成员 像素格式, 整数型, , , PixelFormat“像素格式_”开头常量。
    .成员 像素数据, 整数型, , , Scan0。指向包含像素数据的字节集指针。
    .成员 保留, 整数型, , , Reserved

数据类型 测试字符范围, 公开, CharacterRange
    .成员 起始位置, 整数型, , , First
    .成员 长度, 整数型, , , Length

数据类型 APM文件头, 公开, APMFileHeader
    .成员 标识, 整数型, , , Key。指示一个可放置图元文件头的存在。此值始终为2596720087
    .成员 句柄, 短整数型, , , hmf。当写入磁盘后，此句柄值为0。
    .成员 范围矩形, 矩形16, , , BoundingBox
    .成员 英寸, 短整数型, , , Inch。每英寸点数。通常为1440。
    .成员 保留, 整数型, , , Reserved
    .成员 校验, 短整数型, , , Checksum。该成员可以检测图元文件是否损坏。

数据类型 EMF文件头, 公开, 
    .成员 类型, 整数型, , , Type。EMR_HEADER
    .成员 大小, 整数型, , , Size
    .成员 边界矩形, 矩形L, , , rclBounds
    .成员 框架矩形, 矩形L, , , rclFrame
    .成员 签名, 整数型, , , dSignature。ENHMETA_SIGNATURE
    .成员 版本, 整数型, , , nVersion
    .成员 字节数, 整数型, , , nBytes
    .成员 记录数, 整数型, , , nRecords
    .成员 句柄数, 短整数型, , , nHandles
    .成员 保留, 短整数型, , , sReserved
    .成员 描述数, 整数型, , , nDescription
    .成员 描述偏移, 整数型, , , offDescription
    .成员 调色板项目数, 整数型, , , nPalEntries
    .成员 设备像素尺寸, 尺寸L, , , szlDevice
    .成员 设备毫米尺寸, 尺寸L, , , szlMillimeters

数据类型 图元文件头, 公开, MetafileHeader
    .成员 类型, 整数型, , , Type“图元文件类型_”开头常量。
    .成员 大小, 整数型, , , Size
    .成员 版本, 整数型, , , Version
    .成员 增强EMF标识, 整数型, , , EmfPlusFlags
    .成员 水平分辨率, 小数型, , , DpiX
    .成员 垂直分辨率, 小数型, , , DpiY
    .成员 左边, 整数型, , , X
    .成员 顶边, 整数型, , , Y
    .成员 宽度, 整数型, , , Width
    .成员 高度, 整数型, , , Height
    .成员 EMF文件头, EMF文件头, , , EmfHeader
    .成员 增强EMF大小, 整数型, , , EmfPlusHeaderSize
    .成员 逻辑水平分辨率, 整数型, , , LogicalDpiX
    .成员 逻辑垂直分辨率, 整数型, , , LogicalDpiY

.全局变量 全局_基窗口类默认窗口过程, 整数型, , , 

.DLL命令 取窗口信息_, 整数型, "C:\WINDOWS\system32\user32.dll", "GetWindowLongA", 公开, 从指定窗口的结构中取得信息  由nIndex决定。零表示出错。会设置GetLastError
    .参数 窗口句柄, 整数型, , 欲为其获取信息的窗口的句柄
    .参数 欲取的窗口信息索引, 整数型, , 欲取回的信息，可以是下述任何一个常数：;GWL_EXSTYLE：扩展窗口样式;GWL_STYLE：窗口样式;GWL_WNDPROC：该窗口的窗口函数的地址;GWL_HINSTANCE：拥有窗口的实例的句柄;GWL_HWNDPARENT：该窗口之父的句柄。不要用SetWindowWord来改变这个值;GWL_ID：对话框中一个子窗口的标识符;GWL_USERDATA：含义由应用程序规定;DWL_DLGPROC：这个窗口的对话框函数地址;DWL_MSGRESULT：在对话框函数中处理的一条消息返回的值;DWL_USER：含义由应用程序规定;

.DLL命令 设置窗口信息_, 整数型, "C:\WINDOWS\system32\user32.dll", "SetWindowLongA", 公开, 该函数改变指定窗口的属性．函数也将指定的一个32位值设置在窗口的额外存储空间的指定偏移位置
    .参数 窗口句柄, 整数型, , 窗口句柄及间接给出的窗口所属的类
    .参数 欲设置的窗口信息索引, 整数型, , “#窗口信息之”常数
    .参数 新窗口信息, 整数型, , 如果是新窗口过程,则可以由{到整数(&新窗口过程)}得到

.DLL命令 回调窗口过程_, 整数型, "C:\WINDOWS\system32\user32.dll", "CallWindowProcA", 公开, 该函数CallWindowProc将消息信息传送给指定的窗口过程.使用函数CallWindowsProc可进行窗口子分类。通常来说，同一类的所有窗口共享一个窗口过程。子类是一个窗口或者相同类的一套窗口，在其消息被传送到该类的窗口过程之前，这些消息是由另一个窗口过程进行解释和处理的.SetWindowLoog函数通过改变与特定窗口相关的窗日过程，使系统调用新的窗口过程来创建子类，新的窗口过程替换了以前的窗口过程。应用程序必须通过调用CallWindowsProc来将新窗日过程没有处理的任何消息传送到以前的窗口过程中，这样就允许应用程序创建一系列窗口过程
    .参数 旧窗口过程, 整数型, , 由取窗口信息_（窗口句柄，#窗口信息之窗口过程）获取
    .参数 窗口句柄, 整数型, , 
    .参数 消息类型, 整数型, , 指定消息类型
    .参数 参数一, 整数型, , 指定其余的、消息特定的信息。该参数的内容与Msg参数值有关
    .参数 参数二, 整数型, , 指定其余的、消息特定的信息。该参数的内容与Msg参数值有关

.DLL命令 更新窗口层_, 整数型, "C:\WINDOWS\system32\user32.dll", "UpdateLayeredWindow", , 可实现窗口背景透明
    .参数 窗口句柄, 整数型, , 当前窗口的句柄
    .参数 设备场景, 整数型, , 当前窗口获取的设备场景
    .参数 左上角位置, 坐标_, , 当前窗口在屏幕的左上角位置(相当于 ::SetWindowPos()函数)
    .参数 窗口尺寸, 尺寸_, , 当前窗口在的宽度和高度
    .参数 内存场景, 整数型, , 由设备场景创建而来内存场景
    .参数 内存场景左上角坐标, 坐标_, , 内存缓存的左上角坐标(可用于裁剪内存缓存)
    .参数 crKey, 整数型, , 
    .参数 混合样式, 混合函数结构, , 混合样式
    .参数 标志, 整数型, , 0，1，2，通常为2，伪则北京不透明，为1则前景不透明

.DLL命令 更新窗口_, 整数型, "C:\WINDOWS\system32\user32.dll", "UpdateWindow", , UpdateWindow
    .参数 窗口句柄, 整数型, , 

.DLL命令 显示窗口_, 整数型, "C:\WINDOWS\system32\user32.dll", "ShowWindow", , ShowWindowAsync
    .参数 窗口句柄, 整数型, , hwnd，欲接收ShowWindow命令的窗口
    .参数 窗口显示方式, 整数型, , nCmdShow，与ShowWindow相同，“#窗口显示之”常数

.DLL命令 创建窗口_, 整数型, "C:\WINDOWS\system32\user32.dll", "CreateWindowExA", 公开, 创建一个具有扩展风格的重叠式窗口、弹出式窗口或子窗口
    .参数 窗口扩展风格, 整数型, , 指定窗口的扩展风格,"窗口扩展风格之"常数
    .参数 窗口类名, 文本型, , 刚才注册的类名
    .参数 窗口标题, 文本型, , 
    .参数 窗口风格, 整数型, , “#窗口风格之”常数
    .参数 横坐标, 整数型, , 指定窗口的初始水平位置。对一个层叠或弹出式窗口，X参数是屏幕坐标系的窗口的左上角的初始X坐标。对于子富口，x是子窗口左上角相对父窗口客户区左上角的初始X坐标。如果该参数被设为CW_UCEDEFAULT则系统为窗口选择缺省的左上角坐标并忽略Y参数。CW_USEDEFAULT只对层叠窗口有效，如果为弹出式窗口或子窗口设定，则X和y参数被设为零
    .参数 纵坐标, 整数型, , 指定窗口的初始垂直位置。对一个层叠或弹出式窗日，y参数是屏幕坐标系的窗口的左上角的初始y坐标。对于子窗口，y是子窗口左上角相对父窗口客户区左上角的初始y坐标。对于列表框，y是列表框客户区左上角相对父窗口客户区左上角的初始y坐标。如果层叠窗口是使用WS_VISIBLE风格位创建的并且X参数被设为CW_USEDEFAULT，则系统将忽略y参数
    .参数 宽度, 整数型, , 以设备单元指明窗口的宽度。对于层叠窗口，nWidth或是屏幕坐标的窗口宽度或是CW_USEDEFAULT。若nWidth是CW_USEDEFAULT，则系统为窗口选择一个缺省的高度和宽度：缺省宽度为从初始X坐标开始到屏幕的右边界，缺省高度为从初始X坐标开始到目标区域的顶部。CW_USEDFEAULT只参层叠窗口有效；如果为弹出式窗口和子窗口设定CW_USEDEFAULT标志则nWidth和nHeight被设为零
    .参数 高度, 整数型, , 以设备单元指明窗口的高度。对于层叠窗口，nHeight是屏幕坐标的窗口宽度。若nWidth被设为CW_USEDEFAULT，则系统忽略nHeight参数
    .参数 父窗口句柄, 整数型, , 没有就写0
    .参数 菜单句柄, 整数型, , 没有就写0
    .参数 模块句柄, 整数型, , 没有就写0
    .参数 参数, 整数型, , 没有就写0。指向一个值的指针，该值传递给窗口 WM_CREATE消息。该值通过在IParam参数中的CREATESTRUCT结构传递。如果应用程序调用CreateWindow创建一个MDI客户窗口，则lpParam必须指向一个CLIENTCREATESTRUCT结构

.DLL命令 计算窗口矩形扩展_, 整数型, "C:\WINDOWS\system32\user32.dll", "AdjustWindowRectEx", , 如执行成功，则返回非零值；如失败，返回零值。该函数依据所需客户矩形大小，计算需要的窗口矩形的大小。计算出的窗口矩形随后可以传送给CreateWindowEx函数，用于创建一个客户区所需大小的窗口。成功则第一个参数即为窗口矩形。
    .参数 客户区, 矩形_, , lpRect,指向RECT结构的指针，该结构包含所需客户区域的左上角和右下角的坐标。函数返回时，该结构包含容纳所需客户区域的窗口的左上角和右下角的坐标
    .参数 窗口风格, 整数型, , dwStyle,“#窗口风格之”常数
    .参数 窗口菜单, 整数型, , bMenu,如窗口有菜单，则设为TRUE（非零）
    .参数 窗口扩展风格, 整数型, , dwEsStyle,“#窗口扩展风格之”常数

.DLL命令 窗口最小化_, 整数型, "C:\WINDOWS\system32\user32.dll", "CloseWindow", , CloseWindow,该函数最小化指定的窗口，但并不销毁该窗口
    .参数 窗口句柄, 整数型, , 

.DLL命令 窗口置顶_, 整数型, "C:\WINDOWS\system32\user32.dll", "BringWindowToTop", , 该函数将指定的窗口设置到Z序的顶部。如果窗口为顶层窗口，则该窗口被激活；如果窗口为了窗口，则相应的顶级父窗口被激活。
    .参数 窗口句柄, 整数型, , hwnd,欲带至顶部的那个窗口的句柄

.DLL命令 构建窗口空间位置结构_, 整数型, "C:\WINDOWS\system32\user32.dll", "BeginDeferWindowPos", , BeginDeferWindowPos,该函数为一个多窗口位置结构分配内存并且返回该结构的句柄。如果函数成功，返回多窗口位置结构。如果分配内存时内存不足，则返回值为NULL。空间位置指的是窗口平面位置以及该窗口的排序（Z序）
    .参数 初始窗口数量, 整数型, , nNumWindows,在结构中欲为其分配空间的初始窗口数量。如有必要，DeferWindowPos（更新窗口列表）函数可以增加该结构的大小

.DLL命令 设置窗口空间位置_, 整数型, "C:\WINDOWS\system32\user32.dll", "DeferWindowPos", , DeferWindowPos，该函数为指定的窗口更新指定的多窗口位置结构，然后函数返回该更新结构的句柄。EndDeferWindowPos函数使用该结构内的信息同时改变一些窗口的位置和大小。该结构由BeginDeferWindowPos函数创建
    .参数 内部结构句柄, 整数型, , hWinPosInfo,多窗口定位结构的句柄，该结构包含着一个或多个窗口的尺寸和定位信息，可以由函数BeginDeterWindowPos（构建窗口过程）返回该结构或是由最近一次调用的DeferWindowPos函数返回
    .参数 欲定位窗口句柄, 整数型, , hwnd,欲定位的窗口，该窗口的更新信息存储在结构中
    .参数 插入空间位置, 整数型, , hWndInsertAfter,被定位窗口的Z序的前一窗口的句柄。这个值为“窗口空间位置之”常数之一
    .参数 水平坐标, 整数型, , x,窗口新的x坐标
    .参数 垂直坐标, 整数型, , y,窗口新的y坐标
    .参数 窗口宽度, 整数型, , cx,指定新窗口宽度
    .参数 窗口高度, 整数型, , xy,指定新窗口高度
    .参数 窗口空间位置标志, 整数型, , wFlags,包含了旗标的一个整数，为“窗口空间位置标志之”常数

.DLL命令 更新窗口空间位置_, 整数型, "C:\WINDOWS\system32\user32.dll", "EndDeferWindowPos", , 同时更新DeferWindowPos调用时指定的所有窗口的位置及状态
    .参数 空间位置结构句柄, 整数型, , hWinPosInfo,参见相关帮助

.DLL命令 改变窗口空间位置_, 整数型, "C:\WINDOWS\system32\user32.dll", "SetWindowPos", , SetWindowPos,该函数改变一个子窗口，弹出式窗口式顶层窗口的尺寸，位置和Z序。子窗口，弹出式窗口，及顶层窗口根据它们在屏幕上出现的顺序排序、顶层窗口设置的级别最高，并且被设置为Z序的第一个窗口
    .参数 内部结构句柄, 整数型, , hWinPosInfo,多窗口定位结构的句柄，该结构包含着一个或多个窗口的尺寸和定位信息，可以由函数BeginDeterWindowPos（构建窗口过程）返回该结构或是由最近一次调用的DeferWindowPos函数返回
    .参数 欲定位窗口句柄, 整数型, , hwnd,欲定位的窗口，该窗口的更新信息存储在结构中
    .参数 定位空间位置, 整数型, , hWndInsertAfter,被定位窗口的Z序的前一窗口的句柄。这个值为“窗口空间位置之”常数之一
    .参数 水平坐标, 整数型, , x,窗口新的x坐标
    .参数 垂直坐标, 整数型, , y,窗口新的y坐标
    .参数 窗口宽度, 整数型, , cx,指定新窗口宽度
    .参数 窗口高度, 整数型, , xy,指定新窗口高度
    .参数 窗口空间位置标志, 整数型, , wFlags,包含了旗标的一个整数,为“窗口空间位置标志之”常数

.DLL命令 改变窗口位置及尺寸_, 整数型, "C:\WINDOWS\system32\user32.dll", "MoveWindow", , MoveWindow，该函数改变指定窗口的位置和尺寸。对于顶层窗口，位置和尺寸是相对于屏幕的左上角的：对于子窗口，位置和尺寸是相对于父窗口客户区的左上角坐标的
    .参数 窗口句柄, 整数型, , hwnd，欲移动窗口的句柄
    .参数 左侧位置, 整数型, , x，窗口新的左侧位置
    .参数 顶部位置, 整数型, , y，窗口新的顶部位置
    .参数 新宽度, 整数型, , nWidth，窗口的新宽度
    .参数 高宽度, 整数型, , nHeight，窗口的高宽度
    .参数 是否重画, 整数型, , bRepaint，如窗口此时应重画，则设为TRUE（非零）

.DLL命令 设置窗口标题_, 整数型, "C:\WINDOWS\system32\user32.dll", "SetWindowTextA", , 
    .参数 窗口句柄, 整数型, , 
    .参数 窗口标题, 文本型, , 

.DLL命令 设置窗口区域_, 整数型, "C:\WINDOWS\system32\user32.dll", "SetWindowRgn", , SetWindowRgn，该函数可以设置窗口为任意形状，该形状由参数区域确定
    .参数 窗口句柄, 整数型, , 
    .参数 区域, 整数型, , 区域句柄
    .参数 自动刷新, 逻辑型, , 

.DLL命令 是否子窗口_, 整数型, "C:\WINDOWS\system32\user32.dll", "IsChild", , 判断一个窗口是否为另一窗口的子或隶属窗口，非零则为子窗口
    .参数 父窗口句柄, 整数型, , hWndParent,父窗口的句柄
    .参数 欲测试的窗口句柄, 整数型, , hwnd,欲测试的窗口的句柄

.DLL命令 是否最小化_, 整数型, "C:\WINDOWS\system32\user32.dll", "IsIconic", , 判断窗口是否已最小化，非零则为最小化
    .参数 窗口句柄, 整数型, , hwnd,待检测窗口的句柄

.DLL命令 矩形是否为空_, 整数型, "C:\WINDOWS\system32\user32.dll", "IsRectEmpty", , 判断一个矩形是否为空
    .参数 要检查的矩形, 矩形_, , lpRect,要检查的矩形

.DLL命令 是否有效窗口句柄_, 整数型, "C:\WINDOWS\system32\user32.dll", "IsWindow", , 判断一个窗口句柄是否有效
    .参数 窗口句柄, 整数型, , hwnd,待检查窗口的句柄

.DLL命令 判断窗口活动状态_, 整数型, "C:\WINDOWS\system32\user32.dll", "IsWindowEnabled", , 判断窗口是否处于活动状态
    .参数 窗口句柄, 整数型, , hwnd,待检测窗口的句柄

.DLL命令 是否Unicode窗口_, 整数型, "C:\WINDOWS\system32\user32.dll", "IsWindowUnicode", , 判断一个窗口是否为Unicode窗口
    .参数 窗口句柄, 整数型, , hwnd,窗口句柄

.DLL命令 窗口是否可见_, 整数型, "C:\WINDOWS\system32\user32.dll", "IsWindowVisible", , 判断窗口是否可见
    .参数 窗口句柄, 整数型, , hwnd,要测试的那个窗口的句柄

.DLL命令 是否最大化_, 整数型, "C:\WINDOWS\system32\user32.dll", "IsZoomed", , 判断窗口是否最大化
    .参数 窗口句柄, 整数型, , hwnd,欲测试的窗口的句柄

.DLL命令 取顶级窗口_, 整数型, "C:\WINDOWS\system32\user32.dll", "GetTopWindow", , 该函数检查与特定父窗口相联的子窗口z序，并返回在z序顶部的子窗口的句柄。
    .参数 父窗口, 整数型, , 被查序的父窗口的句柄。如果该参数为NULL，函数返回Z序顶部的窗口句柄

.DLL命令 恢复最小化窗口_, 整数型, "C:\WINDOWS\system32\user32.dll", "OpenIcon", , 函数将一个最小化窗口恢复到原来的位置和尺寸并且激活该窗口
    .参数 窗口句柄, 整数型, , hwnd，窗口句柄

.DLL命令 取父窗口_, 整数型, "", "GetParent", , 该函数获得一个指定子窗口的父窗口句柄
    .参数 子窗口句柄, 整数型, , 

.DLL命令 添加父窗口_, 整数型, "", "SetParent", , 该函数改变指定子窗口的父窗口，返回原父窗口句柄
    .参数 子窗口句柄, 整数型, , 
    .参数 父窗口句柄, 整数型, , 

.DLL命令 取窗口矩形_, 整数型, "", "GetWindowRect", , 
    .参数 窗口句柄, 整数型, , 
    .参数 参考_矩形区域, 矩形_, , 

.DLL命令 取客户区矩形_, 整数型, "C:\WINDOWS\system32\user32.dll", "GetClientRect", , 
    .参数 窗口句柄, 整数型, , 
    .参数 参考_矩形区域, 矩形_, , 

.DLL命令 取窗口恢复位置信息_, 整数型, "C:\WINDOWS\system32\user32.dll", "GetWindowPlacement", , 
    .参数 窗口句柄, 整数型, , 
    .参数 情况, 窗口放置_, , 

.DLL命令 创建插入符_, 整数型, "C:\WINDOWS\system32\user32.dll", "CreateCaret", , CreateCaret，根据指定的信息创建一个插入符（光标），并将它选定为指定窗口的默认插入符。插入符可以是一根短线、一个方块或者一幅位图。通常用插入符指示文字在文字框中的插入位置
    .参数 窗口句柄, 整数型, , hwnd，窗口句柄
    .参数 位图句柄, 整数型, , hBitmap，位图句柄
    .参数 宽度, 整数型, , nWidth，宽度
    .参数 高度, 整数型, , nHeight，高度

.DLL命令 清除插入符_, 整数型, "C:\WINDOWS\system32\user32.dll", "DestroyCaret", , 清除（破坏）一个插入符

.DLL命令 插入符位置_, 整数型, "C:\WINDOWS\system32\user32.dll", "GetCaretPos", , 
    .参数 位置, 坐标_, 传址, 

.DLL命令 显示插入符_, 整数型, "C:\WINDOWS\system32\user32.dll", "ShowCaret", , ShowCaret，在指定的窗口里显示插入符（光标）
    .参数 窗口句柄, 整数型, , hwnd，包含了插入符的窗口的句柄。可以为零；此时，只有在插入符包含于由活动任务拥有的一个窗口时，它才会显示出来

.DLL命令 设置插入符位置_, 空白型, "C:\WINDOWS\system32\user32.dll", "SetCaretPos", , 
    .参数 横坐标, 整数型, , 
    .参数 纵坐标, 整数型, , 

.DLL命令 获取焦点_, 整数型, "C:\WINDOWS\system32\user32.dll", "SetFocus", , 
    .参数 窗口句柄, 整数型, , 

.DLL命令 取插入符位置_, 整数型, "C:\WINDOWS\system32\user32.dll", "GetCaretPos", , 
    .参数 位置, 坐标_, 传址, 

.DLL命令 获取文字输入场景_, 整数型, "C:\WINDOWS\system32\Imm32.dll", "ImmGetContext", , 获取与指定窗口相关联的输入环境，返回输入场景句柄。ImmGetContext
    .参数 窗口句柄, 整数型, , 

.DLL命令 删除文字输入场景_, 逻辑型, "C:\WINDOWS\system32\Imm32.dll", "ImmDestroyContext", , 文字输入场景不用了就要删除，ImmDestroyContext
    .参数 文字输入场景句柄, 整数型, , 

.DLL命令 取窗口标题_, 整数型, "C:\WINDOWS\system32\user32.dll", "GetWindowTextA", , 取得一个窗体的标题（caption）文字，或者一个控件的内容（在vb里使用：使用vb窗体或控件的caption或text属性）  复制到lpString的字串长度；不包括空中止字符。会设置GetLastError
    .参数 窗口句柄, 整数型, , 欲获取文字的那个窗口的句柄
    .参数 缓冲区, 文本型, , 预定义的一个缓冲区，至少有cch+1个字符大小；随同窗口文字载入
    .参数 缓冲尺寸, 整数型, , lp缓冲区的长度;

.DLL命令 取焦点窗口_, 整数型, "C:\WINDOWS\system32\user32.dll", "GetFocus", , GetFocus，获得拥有输入焦点的窗口的句柄

.DLL命令 发送消息_, 整数型, "C:\WINDOWS\system32\user32.dll", "SendMessageA", , 调用一个窗口的窗口函数，将一条消息发给那个窗口。除非消息处理完毕，否则该函数不会返回。SendMessageBynum， ;    SendMessageByString是该函数的“类型安全”声明形式  由具体的消息决定
    .参数 窗口句柄, 整数型, , 要接收消息的那个窗口的句柄
    .参数 信息值, 整数型, , 消息的标识符
    .参数 参数一, 整数型, , 具体取决于消息
    .参数 参数二, 整数型, , 具体取决于消息;

.DLL命令 投送消息_, 整数型, "C:\WINDOWS\system32\user32.dll", "PostMessageA", , 将一条消息投递到指定窗口的消息队列。投递的消息会在Windows事件处理过程中得到处理。在那个时候，会随同投递的消息调用指定窗口的窗口函数。特别适合那些不需要立即处理的窗口消息的发送
    .参数 窗口句柄, 整数型, , 要接收消息的那个窗口的句柄
    .参数 信息值, 整数型, , 消息的标识符
    .参数 参数一, 整数型, , 具体取决于消息
    .参数 参数二, 整数型, , 具体取决于消息;

.DLL命令 置为前台_, 空白型, "", "SetForegroundWindow", , 
    .参数 窗口句柄, 整数型, , 

.DLL命令 是否可视_, 整数型, "", "IsWindowVisible", , 
    .参数 窗口句柄, 整数型, , 

.DLL命令 显示滚动条_, 整数型, "C:\WINDOWS\system32\user32.dll", "ShowScrollBar", , ShowScrollBar
    .参数 窗口句柄, 整数型, , hwnd
    .参数 滚动条标志, 整数型, , wBar
    .参数 显示标志, 整数型, , bShow

.DLL命令 刷新窗口禁止区域_, 整数型, "C:\WINDOWS\system32\user32.dll", "InvalidateRgn", , 
    .参数 窗口句柄, 整数型, , hwnd,窗口句柄
    .参数 不活动区域句柄, 整数型, , hRgn,不活动区域句柄，该区域以窗口客户坐标定义
    .参数 重画前删除, 整数型, , bErase,为非零值则表示要在刷新前擦除

.DLL命令 刷新窗口有效区域_, 整数型, "C:\WINDOWS\system32\user32.dll", "ValidateRgn", , 
    .参数 窗口句柄, 整数型, , hwnd,窗口句柄
    .参数 区域句柄, 整数型, , hRgn,活动区域句柄，该区域以窗口客户坐标定义

.DLL命令 取窗口区域_, 整数型, "C:\WINDOWS\system32\user32.dll", "GetWindowRgn", , 
    .参数 窗口句柄, 整数型, , 
    .参数 区域, 整数型, 传址, 

.DLL命令 取区域矩形_, 整数型, "C:\WINDOWS\system32\gdi32.dll", "GetRgnBox", , 
    .参数 区域, 整数型, , 
    .参数 矩形区域, 矩形_, , 

.DLL命令 创建设备场景_, 整数型, "C:\WINDOWS\system32\gdi32.dll", "CreateDCA", , 
    .参数 驱动名称, 文本型, , lpDriverName，根据参数值而定
    .参数 设备名称, 文本型, , lpDeviceName，所要创建的设备场景名称
    .参数 参数, 文本型, , lpOutput，一般情况下为空
    .参数 场景结构, 设备初始设置_, 传址, lpInitData，0为使用默认设置

.DLL命令 创建阴影刷子_, 整数型, "C:\WINDOWS\system32\gdi32.dll", "CreateHatchBrush", , CreateHatchBrush
    .参数 刷子阴影类型, 整数型, , nIndex，请查看此参数的常量
    .参数 指定刷子的RGB前景色, 整数型, , crColor，指定刷子的前景颜色值

.DLL命令 创建纯色刷子_, 整数型, "C:\WINDOWS\system32\gdi32.dll", "CreateSolidBrush", , 
    .参数 颜色值, 整数型, , crColor，颜色值

.DLL命令 删除设备场景_, 整数型, "C:\WINDOWS\system32\gdi32.dll", "DeleteDC", , 
    .参数 设备场景句柄, 整数型, , hdc，将要删除的设备场景

.DLL命令 删除对象_, 整数型, "C:\WINDOWS\system32\gdi32.dll", "DeleteObject", , DeleteObject
    .参数 对象句柄, 整数型, , hObject,一个GDI对象的句柄

.DLL命令 填充矩形_, 整数型, "C:\WINDOWS\system32\user32.dll", "FillRect", , FillRect,用指定的刷子填充一个矩形
    .参数 设备场景, 整数型, , hdc，设备场景的句柄
    .参数 填充区域, 矩形_, , lpRect，对填充区域进行描述的一个矩形，采用逻辑坐标
    .参数 刷子句柄, 整数型, , hBrush，欲使用的刷子的句柄

.DLL命令 创建内存场景_, 整数型, "C:\WINDOWS\system32\Gdi32.dll", "CreateCompatibleDC", , 
    .参数 设备场景句柄, 整数型, , 

.DLL命令 选入设备场景_, 整数型, "C:\WINDOWS\system32\gdi32.dll", "SelectObject", , SelectObject
    .参数 场景句柄, 整数型, , hdc
    .参数 对象句柄, 整数型, , hobject

.DLL命令 取设备场景_, 整数型, "C:\WINDOWS\system32\user32.dll", "GetDC", , 获取指定窗口的设备场景  指定窗口的设备场景句柄，出错则为0
    .参数 窗口的句柄, 整数型, , 将获取其设备场景的窗口的句柄。若为0，则要获取整个屏幕的DC;

.DLL命令 创建设备位图_, 整数型, "C:\WINDOWS\system32\gdi32.dll", "CreateCompatibleBitmap", , 
    .参数 设备场景句柄, 整数型, , 
    .参数 宽度, 整数型, , 
    .参数 高度, 整数型, , 

.DLL命令 复制场景位图_, 整数型, "C:\WINDOWS\system32\gdi32.dll", "BitBlt", , 
    .参数 目标设备场景, 整数型, , hDestDC,目标设备场景
    .参数 目标横坐标, 整数型, , x,对目标设备场景中目标矩形左上角位置进行描述的那个点
    .参数 目标纵坐标, 整数型, , y,对目标设备场景中目标矩形左上角位置进行描述的那个点
    .参数 传输图像宽度, 整数型, , nWidth,欲传输图象的宽度
    .参数 传输图像高度, 整数型, , nHeight,欲传输图象的高度
    .参数 源设备场景, 整数型, , hSrcDC,源设备场景。如光栅运算未指定源，则应设为0
    .参数 源横坐标, 整数型, , xSrc,对源设备场景中源矩形左上角位置进行描述的那个点
    .参数 源纵坐标, 整数型, , ySrc,对源设备场景中源矩形左上角位置进行描述的那个点
    .参数 光栅运算方式, 整数型, , dwRop,传输过程要执行的光栅运算

.DLL命令 排列子窗口_, 空白型, "", "TileWindows", , 
    .参数 父窗口句柄, 整数型, , 
    .参数 排列方式, 整数型, , “#排列方式之”常数
    .参数 排列区域, 矩形_, , 
    .参数 排列子窗口数, 整数型, , 
    .参数 排列子窗口句柄, 整数型, 数组, 

.DLL命令 枚举子窗口_, 整数型, "", "EnumChildWindows", , 
    .参数 父窗口句柄, 整数型, , 
    .参数 子窗口回调函数, 子程序指针, , 
    .参数 自定义参数, 整数型, , 

.DLL命令 取需更新矩形_, 整数型, "", "GetUpdateRect", , 
    .参数 窗口句柄, 整数型, , 
    .参数 区域, 矩形_, , 
    .参数 清除, 逻辑型, , 

.DLL命令 取活动窗口_, 整数型, "", "GetActiveWindow", , 获得活动窗口的句柄

.DLL命令 到设备坐标_, 整数型, "C:\WINDOWS\system32\user32.dll", "ClientToScreen", , 非零表示成功，零表示失败
    .参数 窗口句柄, 整数型, , hwnd，要取出区域坐标的窗口句柄
    .参数 位置变量, 坐标_, , POINTAPI，用hwnd窗口的客户区坐标表示的点，这个参数会包含屏幕坐标系统中相同的点

.DLL命令 到客户区坐标_, 整数型, "C:\WINDOWS\system32\user32.dll", "ScreenToClient", , ScreenToClient，Long，非零表示成功，零表示失败
    .参数 窗口句柄, 整数型, , hwnd，Long，一个窗口的句柄，该窗口定义了要使用的客户区坐标系统
    .参数 点, 坐标_, , POINTAPI，屏幕坐标系统中包含了屏幕点的结构。这个函数会随同相应的客户区坐标（由hwnd决定）载入结构

.DLL命令 取捕获鼠标窗口_, 整数型, "C:\WINDOWS\system32\user32.dll", "GetCapture", , 

.DLL命令 激活窗口_, 整数型, "C:\WINDOWS\system32\user32.dll", "SetActiveWindow", , 
    .参数 窗口句柄, 整数型, , 

.DLL命令 取邻层窗口_, 整数型, "C:\WINDOWS\system32\user32.dll", "GetNextWindow", , 
    .参数 窗口句柄, 整数型, , 
    .参数 是上层还是下层, 整数型, , 2：下层；3：上层

.DLL命令 取关系窗口_, 整数型, "C:\WINDOWS\system32\user32.dll", "GetWindow", , 
    .参数 源窗口, 整数型, , 
    .参数 关系, 整数型, , “关系窗口之”常数

.DLL命令 屏蔽窗口矩形_, 整数型, "C:\WINDOWS\system32\user32.dll", "InvalidateRect", , 这个函数屏蔽一个窗口客户区的全部或部分区域
    .参数 窗口句柄, 整数型, , hwnd,待屏蔽窗口的句柄
    .参数 屏蔽矩形, 矩形_, , lpRect,用于描述待屏蔽矩形部分的一个矩形结构
    .参数 重画前删除, 整数型, , bErase,TRUE（非零）导致指定的区域在重画前先删除

.DLL命令 刷新窗口有效矩形_, 整数型, "C:\WINDOWS\system32\user32.dll", "ValidateRect", , 这个函数屏蔽一个窗口客户区的全部或部分区域
    .参数 窗口句柄, 整数型, , hwnd,待屏蔽窗口的句柄
    .参数 有效矩形, 矩形_, , lpRect,用于描述待屏蔽矩形部分的一个矩形结构

.DLL命令 获取消息_, 整数型, "C:\WINDOWS\system32\user32.dll", "GetMessageA", , GetMessage
    .参数 消息值, 消息_, , lpMsg
    .参数 窗口句柄, 整数型, , hwnd
    .参数 过滤消息最小值, 整数型, , wMsgFilterMin
    .参数 过滤消息最大值, 整数型, , wMsgFilterMax

.DLL命令 初始化公共控件_, 空白型, "C:\WINDOWS\system32\comctl32.dll", "InitCommonControls", , 

.DLL命令 开始绘制_, 整数型, "", "BeginPaint", 公开, 返回值是指定窗口的显示设备内容HANDLE
    .参数 窗口句柄, 整数型, , 
    .参数 绘制结构, 绘制结构_, , 

.DLL命令 结束绘制_, 整数型, "", "EndPaint", , 结束绘制_
    .参数 窗口句柄, 整数型, , 
    .参数 绘制结构, 绘制结构_, , 

.DLL命令 初始化公共控件扩展_, 整数型, "C:\WINDOWS\system32\comctl32.dll", "InitCommonControlsEx", , 
    .参数 控件扩展类型, 初始化组件扩展_, , 

.DLL命令 设置滚动条范围_, 整数型, "C:\WINDOWS\system32\user32.dll", "SetScrollRange", , 
    .参数 窗口句柄, 整数型, , 
    .参数 索引值, 整数型, , 
    .参数 最大值, 整数型, , 
    .参数 最大值, 整数型, , 
    .参数 重画, 逻辑型, , 

.DLL命令 设置滚动条位置_, 整数型, "C:\WINDOWS\system32\user32.dll", "SetScrollPos", , 
    .参数 窗口句柄, 整数型, , 
    .参数 索引值, 整数型, , 
    .参数 位置, 整数型, , 
    .参数 重画, 逻辑型, , 

.DLL命令 取滚动条信息_, 整数型, "C:\WINDOWS\system32\user32.dll", "GetScrollInfo", , 
    .参数 窗口句柄, 整数型, , 
    .参数 索引, 整数型, , 
    .参数 滚动条信息, 滚动条信息, , 

.DLL命令 设置滚动条信息_, 整数型, "C:\WINDOWS\system32\user32.dll", "SetScrollInfo", , 
    .参数 窗口句柄, 整数型, , 
    .参数 索引, 整数型, , 
    .参数 滚动条信息, 滚动条信息, , 
    .参数 真, 逻辑型, , 

.DLL命令 取组合字_, 整数型, "C:\WINDOWS\system32\Imm32.dll", "ImmGetCompositionStringA", , 
    .参数 输入场景, 整数型, , 
    .参数 索引, 整数型, , 
    .参数 组合字, 文本型, , 
    .参数 长度, 整数型, , 

.程序集 程序集1, , , 

.程序集变量 基窗口类甲, 基窗口类, , , 
.程序集变量 基窗口类乙, 基窗口类, , , 
.程序集变量 主画板滚动条信息, 滚动条信息, , , 
.子程序 _启动子程序, 整数型, , 请在本子程序中放置易模块初始化代码
未知函数_67206161 ()
 ' 位图.创建 (1024, 600, 32, #黑色)
临时子程序 () ' 在初始化代码执行完毕后调用测试代码
返回 (0) ' 可以根据您的需要返回任意数值

.子程序 临时子程序, 空白型, , 
.局部变量 窗口句柄0, 整数型, , , 
.局部变量 窗口句柄1, 整数型, , , 
.局部变量 窗口句柄2, 整数型, , , 
.局部变量 矩形, 矩形_, , , 
.局部变量 标题, 文本型, , , 
.局部变量 区域, 整数型, , , 
.局部变量 数组, 整数型, , "2", 

 ' 本名称子程序用作测试程序用，仅在开发及调试环境中有效，编译发布程序前将被系统自动清空，请将所有用作测试的临时代码放在本子程序中。 ***注意不要修改本子程序的名称、参数及返回值类型。
 ' 载入 (窗口2, , 假)
载入 (窗口2, , 假)


 ' 设置窗口透明度 (窗口2.取窗口句柄 (), 255)

赋值 (窗口句柄0, 基窗口类甲.创建 (位或 (#窗口扩展风格之可Tab键寻找, #窗口扩展风格之帮助上下文), , “窗口”, #窗口风格之一般形式窗口, 200, 100, 600, 300, ))
赋值 (窗口句柄1, 基窗口类乙.创建 (位或 (#窗口扩展风格之可Tab键寻找, #窗口扩展风格之左对齐), , , 位或 (#窗口风格之线边框固定不可调窗口, #窗口风格之有垂直滚动条, #窗口风格之不重绘兄覆盖, #窗口风格之嵌入式子窗口, #窗口风格之有水平滚动条), 200, 100, 600, 200, 窗口句柄0))
未知支持库函数_66 (窗口句柄0, 230)
未知支持库函数_66 (窗口句柄1, 200)
基窗口类乙.显示 (#窗口显示之正常显示)
基窗口类甲.显示 (#窗口显示之正常显示)

赋值 (主画板滚动条信息.标志, 23)
赋值 (主画板滚动条信息.最小值, 1)
赋值 (主画板滚动条信息.最大值, 1000)
赋值 (主画板滚动条信息.页, 50)
赋值 (主画板滚动条信息.位置, 1)
赋值 (主画板滚动条信息.跟踪位置, 100)
设置滚动条信息_ (窗口句柄1, 0, 主画板滚动条信息, 真)
 ' ******垂直滚动条*****
赋值 (主画板滚动条信息.标志, 23)
赋值 (主画板滚动条信息.最小值, 1)
赋值 (主画板滚动条信息.最大值, 1000)
赋值 (主画板滚动条信息.页, 50)
赋值 (主画板滚动条信息.位置, 1)
赋值 (主画板滚动条信息.跟踪位置, 100)
设置滚动条信息_ (窗口句柄1, 1, 主画板滚动条信息, 真)

获取焦点_ (窗口句柄1)
创建插入符_ (窗口句柄1, 0, 1, 21)
显示插入符_ (窗口句柄1)


.类模块 基窗口类, , , 

.程序集变量 私有_原窗口过程, 整数型, , , 
.程序集变量 私有_窗口句柄, 整数型, , , 
.程序集变量 私有_原窗口风格, 整数型, , , 
.程序集变量 私有_原窗口扩展风格, 整数型, , , 
.程序集变量 私有_禁止, 逻辑型, , , 
.程序集变量 私有_可视, 逻辑型, , , 
.程序集变量 私有_任务栏显示, 逻辑型, , , 
.程序集变量 私有_背景颜色, 整数型, , , 
.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用
赋值 (私有_禁止, 假)
赋值 (私有_可视, 假)
赋值 (私有_任务栏显示, 真)
赋值 (私有_背景颜色, #黑色)

.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 改变过程, 整数型, 公开, 
.参数 新窗口过程, 整数型, , 

赋值 (私有_原窗口过程, 设置窗口信息_ (私有_窗口句柄, #窗口信息之窗口过程, 新窗口过程))
返回 (私有_原窗口过程)


.子程序 取过程, 整数型, , 
赋值 (私有_原窗口过程, 取窗口信息_ (私有_窗口句柄, #窗口信息之窗口过程))
返回 (私有_原窗口过程)

.子程序 取风格, 整数型, , 
赋值 (私有_原窗口风格, 取窗口信息_ (私有_窗口句柄, #窗口信息之窗口风格))
返回 (私有_原窗口风格)

.子程序 设置风格, 整数型, , 
.参数 新窗口风格, 整数型, , 
.参数 立即生效, 逻辑型, 可空, 

显示 (#窗口显示之最小化且维持原激活状态)
赋值 (私有_原窗口风格, 设置窗口信息_ (私有_窗口句柄, #窗口信息之窗口风格, 新窗口风格))
.如果真 (或者 (等于 (是否为空 (立即生效), 真), 等于 (立即生效, 真)))
    显示 (#窗口显示之正常显示)
    赋值 (私有_可视, 真)
.如果真结束
返回 (私有_原窗口风格)

.子程序 设置扩展风格, 整数型, , 
.参数 新扩展风格, 整数型, , 
.参数 立即生效, 逻辑型, 可空, 

显示 (#窗口显示之最小化且维持原激活状态)
赋值 (私有_原窗口扩展风格, 设置窗口信息_ (私有_窗口句柄, #窗口信息之扩展风格, 新扩展风格))
.如果真 (或者 (等于 (是否为空 (立即生效), 真), 等于 (立即生效, 真)))
    显示 (#窗口显示之正常显示)
    赋值 (私有_可视, 真)
.如果真结束
返回 (私有_原窗口扩展风格)

.子程序 取扩展风格, 整数型, , 
赋值 (私有_原窗口扩展风格, 取窗口信息_ (私有_窗口句柄, #窗口信息之扩展风格))
返回 (私有_原窗口扩展风格)

.子程序 回调过程, 整数型, , 
.参数 窗口句柄, 整数型, , 
.参数 消息号, 整数型, , 
.参数 参数一, 整数型, , 
.参数 参数二, 整数型, , 

.局部变量 返回值, 整数型, , , 

赋值 (返回值, 回调窗口过程_ (私有_原窗口过程, 窗口句柄, 消息号, 参数一, 参数二))
 ' 返回 (返回值)

.子程序 创建自窗口句柄, 整数型, , 返回准编辑类对象句柄
.参数 窗口句柄, 整数型, , 适用于没有输入焦点的标准窗口控件如按钮、列表框、组合框等，没有子窗口的窗口也可以
.参数 启用透明功能, 逻辑型, 可空, 父窗口才能起用该功能，且会作用于子窗口，默认为假

赋值 (私有_窗口句柄, 窗口句柄)
.如果真 (等于 (取父窗口_ (窗口句柄), 0))
    .如果真 (等于 (是否为空 (启用透明功能), 真))
        赋值 (启用透明功能, 假)
    .如果真结束
    .如果真 (等于 (启用透明功能, 真))
        未知支持库函数_66 (私有_窗口句柄, 255)
    .如果真结束
    
.如果真结束
赋值 (全局_基窗口类默认窗口过程, 设置窗口信息_ (私有_窗口句柄, #窗口信息之窗口过程, 到整数 (&基窗口类默认窗口过程)))
返回 (私有_窗口句柄)



.子程序 创建, 整数型, , 返回准编辑类对象句柄
.参数 窗口扩展风格, 整数型, , “#窗口扩展风格之”常数之一或组合
.参数 窗口类名, 文本型, 可空, 可空则为默认为普通窗口类
.参数 窗口标题, 文本型, 可空, 
.参数 窗口风格, 整数型, , “#窗口风格之”常数之一或组合
.参数 横坐标, 整数型, , 
.参数 纵坐标, 整数型, , 
.参数 宽度, 整数型, , 
.参数 高度, 整数型, , 
.参数 父窗口句柄, 整数型, 可空, 空则表示没有父窗口
.参数 菜单句柄, 整数型, 可空, 空则表示没有菜单

.如果真 (是否为空 (窗口类名))
    赋值 (窗口类名, “WTWindow”)
.如果真结束
.如果真 (是否为空 (窗口标题))
    赋值 (窗口标题, “”)
.如果真结束
.如果真 (是否为空 (父窗口句柄))
    赋值 (父窗口句柄, 0)
.如果真结束
.如果真 (是否为空 (菜单句柄))
    赋值 (菜单句柄, 0)
.如果真结束
赋值 (私有_窗口句柄, 创建窗口_ (窗口扩展风格, 窗口类名, 窗口标题, 窗口风格, 横坐标, 纵坐标, 宽度, 高度, 父窗口句柄, 菜单句柄, 0, 0))
更新窗口_ (私有_窗口句柄)
赋值 (全局_基窗口类默认窗口过程, 设置窗口信息_ (私有_窗口句柄, #窗口信息之窗口过程, 到整数 (&基窗口类默认窗口过程)))
.如果真 (或者 (等于 (父窗口句柄, 0), 等于 (是否为空 (父窗口句柄), 真))) ' 自己本身是父窗口，则可以启用透明背景功能，并可以在后面设置透明度
    未知支持库函数_66 (私有_窗口句柄, 255)
.如果真结束

返回 (私有_窗口句柄)


.子程序 创建为控件, 整数型, , 
.参数 父窗口句柄, 整数型, , 拥有被创建控件的窗口或容器控件句柄
.参数 左边, 整数型, , 
.参数 顶边, 整数型, , 
.参数 宽度, 整数型, , 
.参数 高度, 整数型, , 
.参数 边框形式, 整数型, 可空, 0：无边框平面式；1：无边框凹入式；2：凸出式；3：镜框式；4：线边框平面式；5：线边框凹入式
.参数 显示水平滚动条, 逻辑型, 可空, 
.参数 显示垂直滚动条, 逻辑型, 可空, 

.局部变量 菜单句柄, 整数型, , , 
.局部变量 窗口扩展风格, 整数型, , , 
.局部变量 窗口风格, 整数型, , , 

.如果真 (等于 (是否为空 (边框形式), 真))
    赋值 (边框形式, 0)
.如果真结束
.判断开始 (等于 (边框形式, 0)) ' 无边框平面式
    赋值 (窗口扩展风格, 65552)
    赋值 (窗口风格, 1073741824)
.判断 (等于 (边框形式, 1)) ' 无边框凹入式
    赋值 (窗口扩展风格, 66320)
    赋值 (窗口风格, 1073741824)
.判断 (等于 (边框形式, 2))
    赋值 (窗口扩展风格, 65553) ' 凸出式
    赋值 (窗口风格, 1073741824)
.判断 (等于 (边框形式, 3)) ' 镜框式
    赋值 (窗口扩展风格, 66073)
    赋值 (窗口风格, 1073741824)
.判断 (等于 (边框形式, 4)) ' 线边框平面式
    赋值 (窗口风格, 1082130432)
    赋值 (窗口扩展风格, 65552)
.判断 (等于 (边框形式, 5)) ' 线边框凹入式
    赋值 (窗口风格, 1082130432)
    赋值 (窗口扩展风格, 66320)
.默认
    
.判断结束
.如果真 (等于 (是否为空 (显示水平滚动条), 假))
    赋值 (窗口风格, 位或 (窗口风格, 1048576))
.如果真结束
.如果真 (等于 (是否为空 (显示垂直滚动条), 假))
    赋值 (窗口风格, 位或 (窗口风格, 2097152))
.如果真结束

赋值 (私有_窗口句柄, 创建窗口_ (窗口扩展风格, “WTwindow”, “”, 窗口风格, 左边, 顶边, 宽度, 高度, 父窗口句柄, 0, 0, 0))
更新窗口_ (私有_窗口句柄)
赋值 (全局_基窗口类默认窗口过程, 设置窗口信息_ (私有_窗口句柄, #窗口信息之窗口过程, 到整数 (&基窗口类默认窗口过程)))
返回 (私有_窗口句柄)

.子程序 显示, 空白型, , 
.参数 显示方式, 整数型, 可空, 

.如果真 (等于 (私有_禁止, 真))
    解禁 ()
.如果真结束
.如果真 (等于 (是否为空 (显示方式), 真))
    赋值 (显示方式, #窗口显示之正常显示)
.如果真结束
显示窗口_ (私有_窗口句柄, 显示方式)
赋值 (私有_可视, 真)


.子程序 隐藏, 空白型, , 
.如果真 (等于 (私有_可视, 真))
    显示 (#窗口显示之最小化且维持原激活状态)
    赋值 (私有_可视, 假)
.如果真结束


.子程序 禁止, 空白型, , 
设置风格 (位或 (取风格 (), #窗口风格之不接受消息), )
赋值 (私有_禁止, 真)


.子程序 解禁, 空白型, , 
.如果真 (等于 (私有_禁止, 真))
    设置风格 (私有_原窗口风格, )
    赋值 (私有_禁止, 假)
.如果真结束



.子程序 最大化, 空白型, , 
显示窗口_ (私有_窗口句柄, #窗口显示之激活且最大化)


.子程序 最小化, 空白型, , 
显示窗口_ (私有_窗口句柄, #窗口显示之最小化)

.子程序 始终置顶, 空白型, , 
窗口置顶_ (私有_窗口句柄)


.子程序 置为前台, 空白型, , 
置为前台_ (私有_窗口句柄)


.子程序 获取焦点, 整数型, , 
返回 (获取焦点_ (私有_窗口句柄))


.子程序 添加父窗口, 整数型, , 返回原父窗口句柄
.参数 父窗口句柄, 整数型, , 

返回 (添加父窗口_ (私有_窗口句柄, 父窗口句柄))


.子程序 是否最大化, 整数型, , 
返回 (是否最大化_ (私有_窗口句柄))


.子程序 是否最小化, 整数型, , 
返回 (是否最小化_ (私有_窗口句柄))


.子程序 是否可视, 整数型, , 
返回 (是否可视_ (私有_窗口句柄))


.子程序 取父窗口, 整数型, , 
返回 (取父窗口_ (私有_窗口句柄))


.子程序 取客户区矩形, 空白型, , 
.参数 客户区矩形, 矩形_, 参考, 

取客户区矩形_ (私有_窗口句柄, 客户区矩形)


.子程序 取窗口矩形, 空白型, , 
.参数 窗口矩形, 矩形_, 参考, 

取窗口矩形_ (私有_窗口句柄, 窗口矩形)


.子程序 取标题, 文本型, , 
.局部变量 窗口标题, 文本型, , , 

赋值 (窗口标题, 取空白文本 (255))
取窗口标题_ (私有_窗口句柄, 窗口标题, 255)
返回 (窗口标题)

.子程序 设置标题, 空白型, , 
.参数 标题, 文本型, , 

设置窗口标题_ (私有_窗口句柄, 标题)


.子程序 显示水平滚动条, 空白型, , 
显示滚动条_ (私有_窗口句柄, 0, 1)

.子程序 隐藏水平滚动条, 空白型, , 
显示滚动条_ (私有_窗口句柄, 0, 0)

.子程序 显示垂直滚动条, 空白型, , 
显示滚动条_ (私有_窗口句柄, 1, 1)

.子程序 隐藏垂直滚动条, 空白型, , 
显示滚动条_ (私有_窗口句柄, 1, 0)

.子程序 控件化, 逻辑型, , 子窗口（必须是窗口形式的子窗口）变为父窗口的控件形式,
.参数 控件形式, 整数型, 可空, 0：无边框平面式；1：无边框凹入式；2：凸出式；3：镜框式；4：线边框平面式；5：线边框凹入式
.参数 左边, 整数型, 可空, 位置和尺寸是相对于父窗口客户区的左上角坐标的，为空则为0
.参数 顶边, 整数型, 可空, 位置和尺寸是相对于父窗口客户区的左上角坐标的，为空则为0
.参数 宽度, 整数型, 可空, 位置和尺寸是相对于父窗口客户区的左上角坐标的，为空则为原窗口客户区宽度
.参数 高度, 整数型, 可空, 位置和尺寸是相对于父窗口客户区的左上角坐标的，为空则为原窗口客户区高度
.参数 显示水平滚动条, 逻辑型, 可空, 默认为显示
.参数 显示垂直滚动条, 逻辑型, 可空, 默认为显示
.参数 立即生效, 逻辑型, 可空, 默认为真

.局部变量 窗口风格, 整数型, , , 
.局部变量 窗口扩展风格, 整数型, , , 
.局部变量 客户区矩形, 矩形_, , , 
.局部变量 窗口矩形, 矩形_, , , 
.局部变量 父窗口矩形, 矩形_, , , 

.如果真 (等于 (是否为空 (立即生效), 真))
    赋值 (立即生效, 真)
.如果真结束
.如果真 (等于 (是否为空 (控件形式), 真))
    赋值 (控件形式, 0)
.如果真结束
.判断开始 (等于 (控件形式, 0)) ' 无边框平面式
    赋值 (窗口扩展风格, 65552)
    赋值 (窗口风格, 位或 (1073741824, #窗口风格之不重绘兄覆盖))
.判断 (等于 (控件形式, 1)) ' 无边框凹入式
    赋值 (窗口扩展风格, 66320)
    赋值 (窗口风格, 位或 (1073741824, #窗口风格之不重绘兄覆盖))
.判断 (等于 (控件形式, 2))
    赋值 (窗口扩展风格, 65553) ' 凸出式
    赋值 (窗口风格, 位或 (1073741824, #窗口风格之不重绘兄覆盖))
.判断 (等于 (控件形式, 3)) ' 镜框式
    赋值 (窗口扩展风格, 66073)
    赋值 (窗口风格, 位或 (1073741824, #窗口风格之不重绘兄覆盖))
.判断 (等于 (控件形式, 4)) ' 线边框平面式
    赋值 (窗口风格, 位或 (1082130432, #窗口风格之不重绘兄覆盖))
    赋值 (窗口扩展风格, 65552)
.判断 (等于 (控件形式, 5)) ' 线边框凹入式
    赋值 (窗口风格, 位或 (1082130432, #窗口风格之不重绘兄覆盖))
    赋值 (窗口扩展风格, 66320)
.默认
    
.判断结束
.如果真 (等于 (是否为空 (显示水平滚动条), 真))
    赋值 (窗口风格, 位或 (窗口风格, 1048576))
.如果真结束
.如果真 (等于 (是否为空 (显示垂直滚动条), 真))
    赋值 (窗口风格, 位或 (窗口风格, 2097152))
.如果真结束
.如果真 (等于 (是否为空 (左边), 真))
    取窗口矩形_ (取父窗口 (), 父窗口矩形)
    取窗口矩形 (窗口矩形)
    赋值 (左边, 相减 (窗口矩形.左边, 父窗口矩形.左边))
.如果真结束
.如果真 (等于 (是否为空 (顶边), 真))
    取窗口矩形_ (取父窗口 (), 父窗口矩形)
    取窗口矩形 (窗口矩形)
    赋值 (顶边, 相减 (窗口矩形.顶边, 父窗口矩形.顶边))
.如果真结束
.如果真 (等于 (是否为空 (宽度), 真))
    取客户区矩形 (客户区矩形)
    赋值 (宽度, 相减 (客户区矩形.右边, 客户区矩形.左边))
.如果真结束
.如果真 (等于 (是否为空 (高度), 真))
    取客户区矩形 (客户区矩形)
    赋值 (高度, 相减 (客户区矩形.底边, 客户区矩形.顶边))
.如果真结束
.如果真 (等于 (是否有效窗口句柄_ (取父窗口 ()), 1))
    设置风格 (窗口风格, 假)
    设置扩展风格 (窗口扩展风格, 立即生效)
    改变窗口位置及尺寸_ (私有_窗口句柄, 左边, 顶边, 宽度, 高度, 1)
    返回 (真)
.如果真结束
返回 (假)


.子程序 窗口化, 逻辑型, , 控件形式子窗口变为父窗口的窗口形式子窗口
.参数 窗口形式, 整数型, 可空, 0：无边框平面式；1：无边框凹入式；2：凸出式；3：镜框式；4：线边框平面式；5：线边框凹入式
.参数 左边, 整数型, 可空, 位置和尺寸是相对于父窗口客户区的左上角坐标的，为空则为0
.参数 顶边, 整数型, 可空, 位置和尺寸是相对于父窗口客户区的左上角坐标的，为空则为0
.参数 宽度, 整数型, 可空, 位置和尺寸是相对于父窗口客户区的左上角坐标的，为空则为原窗口客户区宽度
.参数 高度, 整数型, 可空, 位置和尺寸是相对于父窗口客户区的左上角坐标的，为空则为原窗口客户区高度
.参数 显示水平滚动条, 逻辑型, 可空, 默认为显示
.参数 显示垂直滚动条, 逻辑型, 可空, 默认为显示
.参数 立即生效, 逻辑型, 可空, 默认为真

.局部变量 窗口风格, 整数型, , , 
.局部变量 窗口扩展风格, 整数型, , , 
.局部变量 矩形, 矩形_, , , 


.如果真 (等于 (是否为空 (立即生效), 真))
    赋值 (立即生效, 真)
.如果真结束
.如果真 (等于 (是否为空 (窗口形式), 真))
    赋值 (窗口形式, 0)
.如果真结束
.判断开始 (等于 (窗口形式, 0)) ' 一般窗口形式
    赋值 (窗口扩展风格, 65576)
    赋值 (窗口风格, 位或 (1087307776, #窗口风格之不重绘兄覆盖))
.判断 (等于 (窗口形式, 1)) ' 对话窗口形式
    赋值 (窗口扩展风格, 65536)
    赋值 (窗口风格, 位或 (1086849024, #窗口风格之不重绘兄覆盖))
.判断 (等于 (窗口形式, 2))
    赋值 (窗口扩展风格, 65576) ' 有帮助对话框形式
    赋值 (窗口风格, 位或 (1086849024, #窗口风格之不重绘兄覆盖))
.判断 (等于 (窗口形式, 3)) ' 工具窗口形式
    赋值 (窗口扩展风格, 65680)
    赋值 (窗口风格, 位或 (1087307776, #窗口风格之不重绘兄覆盖))
.默认
    
.判断结束
.如果真 (等于 (是否为空 (显示水平滚动条), 真))
    赋值 (窗口风格, 位或 (窗口风格, 1048576))
.如果真结束
.如果真 (等于 (是否为空 (显示垂直滚动条), 真))
    赋值 (窗口风格, 位或 (窗口风格, 2097152))
.如果真结束
取窗口矩形 (矩形)
计算窗口矩形扩展_ (矩形, 窗口风格, 1, 窗口扩展风格)

.如果真 (等于 (是否为空 (左边), 真))
    赋值 (左边, 矩形.左边)
    调试输出 (左边)
.如果真结束
.如果真 (等于 (是否为空 (顶边), 真))
    赋值 (顶边, 矩形.顶边)
    调试输出 (顶边)
.如果真结束
.如果真 (等于 (是否为空 (宽度), 真))
    赋值 (宽度, 相减 (矩形.右边, 矩形.左边))
    调试输出 (宽度)
.如果真结束
.如果真 (等于 (是否为空 (高度), 真))
    赋值 (高度, 相减 (矩形.底边, 矩形.顶边))
.如果真结束
.如果真 (等于 (是否有效窗口句柄_ (取父窗口 ()), 1))
    设置风格 (窗口风格, 假)
    设置扩展风格 (窗口扩展风格, 立即生效)
    改变窗口位置及尺寸_ (私有_窗口句柄, 左边, 顶边, 宽度, 高度, 1)
    返回 (真)
.如果真结束
返回 (假)



.子程序 设置背景颜色, 整数型, , 只有父窗口才能设置背景颜色和起用透明功能，且会作用于子窗口；子窗口若要单独设置背景，则要使用绘图命令绘制
.参数 颜色, 整数型, , 
.参数 窗口透明度, 整数型, 可空, 0~255,为空表示不启用透明功能

赋值 (私有_背景颜色, 颜色)
.如果 (等于 (取父窗口_ (私有_窗口句柄), 0))
    发送消息_ (私有_窗口句柄, 15, 颜色, 999) ' 参数二为999则表示参数一为颜色值
    .如果真 (等于 (是否为空 (窗口透明度), 假))
        未知支持库函数_66 (私有_窗口句柄, 窗口透明度)
    .如果真结束
    返回 (私有_背景颜色)
.否则
    返回 (0)
.如果结束



.子程序 设置透明度, 整数型, , 只有父窗口才能有效设置窗口的透明度，且会作用于子窗口；如果是子窗口，则设置透明度无效。窗口透明包括背景透明和前景透明。
.参数 透明度, 整数型, 可空, 0~255,为空为255

.如果 (等于 (取父窗口_ (私有_窗口句柄), 0))
    .如果真 (等于 (是否为空 (透明度), 真))
        赋值 (透明度, 255)
    .如果真结束
    未知支持库函数_66 (私有_窗口句柄, 透明度)
    返回 (1)
.否则
    返回 (0)
.如果结束


.程序集 模板程序集, , , 

.子程序 基窗口类默认窗口过程, 整数型, , 
.参数 窗口句柄, 整数型, , 
.参数 消息号, 整数型, , 
.参数 参数一, 整数型, , 
.参数 参数二, 整数型, , 

.判断开始 (等于 (消息号, 15)) ' 重绘
    返回 (回调窗口过程_ (全局_基窗口类默认窗口过程, 窗口句柄, 消息号, 参数一, 参数二))
.判断 (等于 (消息号, 534)) ' 位置改变中
    
.判断 (等于 (消息号, 3)) ' 位置改变
    
.判断 (等于 (消息号, 532)) ' 尺寸改变中
    
.判断 (等于 (消息号, 5)) ' 尺寸改变
    
.判断 (等于 (消息号, 6)) ' 窗口激活
    
.判断 (等于 (消息号, 28)) ' 取消激活
    
.判断 (等于 (消息号, 7)) ' 获取焦点
    
.判断 (等于 (消息号, 8)) ' 失去焦点
    
.判断 (等于 (消息号, 513)) ' 鼠标左键按下
     ' 获取焦点_ (窗口句柄)
    创建插入符_ (窗口句柄, 0, 1, 21)
    设置插入符位置_ (34, 78)
    显示插入符_ (窗口句柄)
    
.判断 (等于 (消息号, 514)) ' 鼠标左键释放
    
.判断 (等于 (消息号, 515)) ' 鼠标左键双击
    
.判断 (等于 (消息号, 516)) ' 鼠标右键按下
    
.判断 (等于 (消息号, 517)) ' 鼠标右键释放
    
.判断 (等于 (消息号, 512)) ' 鼠标移动
    
.判断 (等于 (消息号, 519)) ' 鼠标中键按下
    
.判断 (等于 (消息号, 520)) ' 鼠标中键释放
    
.判断 (等于 (消息号, 521)) ' 鼠标中键双击
    
.判断 (等于 (消息号, 17)) ' 窗口关闭
    
.判断 (等于 (消息号, 256)) ' 某键按下
     ' 调试输出 (“某键按下”, 字符 (参数一))
.判断 (等于 (消息号, 257)) ' 某键释放
    
.判断 (等于 (消息号, 258)) ' 字符输入
    调试输出 (“字符输入”, 字符 (参数一))
.判断 (等于 (消息号, 269)) ' 输入法_组字开始
    调试输出 (“组字开始”)
.判断 (等于 (消息号, 642)) ' 输入场景改变
    调试输出 (“输入场景改变”, 参数一, 参数二)
    返回 (回调窗口过程_ (全局_基窗口类默认窗口过程, 窗口句柄, 消息号, 参数一, 参数二))
.判断 (等于 (消息号, 271)) ' 输入法_组字中
    绘文本 (窗口句柄, 获取组合字 (窗口句柄, 1))
.判断 (等于 (消息号, 270)) ' 输入法_组字结束
    调试输出 (“组字结束”, 获取组合字 (窗口句柄, 2048))
    绘文本 (窗口句柄, 获取组合字 (窗口句柄, 2048))
.判断 (等于 (消息号, 276)) ' 水平滚动条
    水平滚动条自身响应 (窗口句柄, 参数一, 5)
.判断 (等于 (消息号, 277)) ' 垂直滚动条
    垂直滚动条自身响应 (窗口句柄, 参数一, 5)
.判断 (等于 (消息号, 522)) ' 滚轮滚动
    调试输出 (“滚轮滚动”, 参数一, 参数二)
.默认
    返回 (回调窗口过程_ (全局_基窗口类默认窗口过程, 窗口句柄, 消息号, 参数一, 参数二))
.判断结束
返回 (0)

.子程序 获取组合字, 文本型, , 
.参数 窗口句柄, 整数型, , 
.参数 组合字参数, 整数型, , 

.局部变量 组合字缓冲, 文本型, , , 
.局部变量 组合字缓冲字节数, 短整数型, , , 

赋值 (组合字缓冲, 取空白文本 (255))
赋值 (组合字缓冲字节数, 取组合字_ (获取文字输入场景_ (窗口句柄), 组合字参数, 组合字缓冲, 255))
返回 (取文本左边 (组合字缓冲, 组合字缓冲字节数))


.子程序 绘文本, 空白型, , 
.参数 窗口句柄, 整数型, , 
.参数 文本, 文本型, , 

.局部变量 图形, 未知类型0x49017C15, , , 
.局部变量 画刷, 未知类型0x49017C1E, , , 
.局部变量 字体, 未知类型0x49017C18, , , 


图形.未知函数_67205440 (窗口句柄)
 ' 图形.清除 (RGB到ARGB (#白色, 10))
画刷.未知函数_67205848 (未知函数_67206146 (#红色))
字体.未知函数_67205669 (“宋体”, 12)

.子程序 判断字符编码类型, 整数型, , 1:简体中文GB2312字符，2：ASCII字符，3：其他
.参数 单个文本, 文本型, , 

.判断开始 (并且 (等于 (文本比较 (单个文本, 到文本 ({ 161, 160 }), 真), 1), 等于 (文本比较 (到文本 ({ 247, 255 }), 单个文本, 真), 1)))
    返回 (1)
.判断 (并且 (等于 (文本比较 (单个文本, 到文本 ({ 1 }), 真), 1), 等于 (文本比较 (到文本 ({ 255 }), 单个文本, 真), 1)))
    返回 (2)
.默认
    返回 (3)
.判断结束


.子程序 判断大小写, 整数型, , 1:大写，2：小写，3不是英文字符
.参数 英文字符, 文本型, , 

赋值 (英文字符, 到半角 (英文字符))
.判断开始 (并且 (小于或等于 (取代码 (“A”, ), 取代码 (英文字符, )), 小于或等于 (取代码 (英文字符, ), 取代码 (“Z”, ))))
    返回 (1)
.判断 (并且 (小于或等于 (取代码 (“a”, ), 取代码 (英文字符, )), 小于或等于 (取代码 (英文字符, ), 取代码 (“z”, ))))
    返回 (2)
.默认
    返回 (3)
.判断结束



.子程序 判断是否汉字, 整数型, , 1：是，0：否
.参数 单个文本, 文本型, , 

.判断开始 (并且 (等于 (文本比较 (单个文本, 到文本 ({ 176, 160 }), 真), 1), 等于 (文本比较 (到文本 ({ 247, 255 }), 单个文本, 真), 1)))
    返回 (1)
.默认
    返回 (0)
.判断结束


.子程序 判断是否希腊字符, 整数型, , 1：是，0：否
.参数 单个文本, 文本型, , 

.判断开始 (并且 (等于 (文本比较 (单个文本, 到文本 ({ 166, 160 }), 真), 1), 等于 (文本比较 (到文本 ({ 166, 217 }), 单个文本, 真), 1)))
    返回 (1)
.默认
    返回 (0)
.判断结束


.子程序 判断是否数字, 整数型, , 1:是；2：否
.参数 英文字符, 文本型, , 

赋值 (英文字符, 到半角 (英文字符))
.判断开始 (并且 (小于或等于 (取代码 (“0”, ), 取代码 (英文字符, )), 小于或等于 (取代码 (英文字符, ), 取代码 (“9”, ))))
    返回 (1)
.默认
    返回 (0)
.判断结束


.子程序 判断字符类型, 空白型, , 
.参数 字符, 文本型, , 

.局部变量 字符类型, 字节型, , , 

赋值 (字符类型, 判断字符编码类型 (字符))
.判断开始 (等于 (字符类型, 1)) ' 为GB2312字符
    .如果 (等于 (判断是否汉字 (字符), 1))
        调试输出 (“汉字”)
    .否则
        
        
        .如果 (等于 (判断是否希腊字符 (字符), 1))
            调试输出 (“希腊字符”)
        .否则
            .判断开始 (等于 (判断大小写 (字符), 1))
                调试输出 (“全角大写英文字符”)
            .判断 (等于 (判断大小写 (字符), 2))
                调试输出 (“全角小写英文字符”)
            .默认
                .如果 (等于 (判断是否数字 (字符), 1))
                    调试输出 (“全角数字”)
                .否则
                    调试输出 (“GB2312其他”)
                .如果结束
                
            .判断结束
            
        .如果结束
        
    .如果结束
    
.判断 (等于 (字符类型, 2)) ' 为ASCII字符
    .如果 (等于 (判断是否数字 (字符), 1))
        调试输出 (“数字”)
    .否则
        .判断开始 (等于 (判断大小写 (字符), 1))
            调试输出 (“大写英文字符”)
        .判断 (等于 (判断大小写 (字符), 2))
            调试输出 (“小写英文字符”)
        .默认
            
        .判断结束
        
    .如果结束
    
.默认
    
.判断结束


.子程序 水平滚动条自身响应, 空白型, , 针对水平滚动条自身做出的响应
.参数 窗口句柄, 整数型, , 
.参数 参数一, 整数型, , 
.参数 滚动步长, 整数型, , 

.局部变量 局部_位置, 短整数型, , , 
.局部变量 局部_滚动条操作, 字节型, , , 0：按下滚动条左边（或上边）按钮；1：按下滚动条右边（或下边）按钮；2：鼠标单击前台（向左（或上）翻页）：3鼠标单击后台（向右（或下）翻页；4：滚动至鼠标处；5：拉动滚动条中台（按钮）；6：滚动至左（或上）边缘；7：滚动至右（或下）边缘；8：操作完毕
.局部变量 滚动条信息, 滚动条信息, , , 

赋值 (局部_位置, 右移 (参数一, 16))
赋值 (局部_滚动条操作, 位与 (参数一, 65535))
.判断开始 (等于 (局部_滚动条操作, 0)) ' 水平滚动条左边按钮被按下（向左滚动）
    赋值 (滚动条信息.标志, 4)
    取滚动条信息_ (窗口句柄, 0, 滚动条信息)
    赋值 (滚动条信息.标志, 4)
    赋值 (滚动条信息.位置, 相减 (滚动条信息.位置, 滚动步长))
    设置滚动条信息_ (窗口句柄, 0, 滚动条信息, 真)
.判断 (等于 (局部_滚动条操作, 1)) ' 水平滚动条右边按钮被按下（向右滚动）
    赋值 (滚动条信息.标志, 4) ' 取与设置信息之前都要设置这个标志，它用来指定要取或设置的信息项
    取滚动条信息_ (窗口句柄, 0, 滚动条信息)
    赋值 (滚动条信息.标志, 4)
    赋值 (滚动条信息.位置, 相加 (滚动条信息.位置, 滚动步长))
    设置滚动条信息_ (窗口句柄, 0, 滚动条信息, 真)
.判断 (等于 (局部_滚动条操作, 2)) ' 水平滚动条前台被单击（向前翻页）
    赋值 (滚动条信息.标志, 23)
    取滚动条信息_ (窗口句柄, 0, 滚动条信息)
    赋值 (滚动条信息.标志, 4)
    赋值 (滚动条信息.位置, 相减 (滚动条信息.位置, 滚动条信息.页))
    设置滚动条信息_ (窗口句柄, 0, 滚动条信息, 真)
.判断 (等于 (局部_滚动条操作, 3)) ' 水平滚动条后台被单击（向后翻页）
    赋值 (滚动条信息.标志, 23)
    取滚动条信息_ (窗口句柄, 0, 滚动条信息)
    赋值 (滚动条信息.标志, 4)
    赋值 (滚动条信息.位置, 相加 (滚动条信息.位置, 滚动条信息.页))
    设置滚动条信息_ (窗口句柄, 0, 滚动条信息, 真)
    
.判断 (等于 (局部_滚动条操作, 4)) ' 右键菜单之滚动至此处（鼠标位置）
    赋值 (滚动条信息.标志, 4)
    赋值 (滚动条信息.位置, 局部_位置)
    设置滚动条信息_ (窗口句柄, 0, 滚动条信息, 真)
.判断 (等于 (局部_滚动条操作, 5)) ' 拉动中台（按钮）
    赋值 (滚动条信息.标志, 4)
    赋值 (滚动条信息.位置, 局部_位置)
    设置滚动条信息_ (窗口句柄, 0, 滚动条信息, 真)
.判断 (等于 (局部_滚动条操作, 6)) ' 右键菜单之滚动至左边缘
    赋值 (滚动条信息.标志, 1)
    取滚动条信息_ (窗口句柄, 0, 滚动条信息)
    赋值 (滚动条信息.标志, 4)
    赋值 (滚动条信息.位置, 滚动条信息.最小值)
    设置滚动条信息_ (窗口句柄, 0, 滚动条信息, 真)
.判断 (等于 (局部_滚动条操作, 7)) ' 右键菜单之滚动至右边缘
    赋值 (滚动条信息.标志, 23)
    取滚动条信息_ (窗口句柄, 0, 滚动条信息)
    赋值 (滚动条信息.标志, 4)
    赋值 (滚动条信息.位置, 相加 (相减 (滚动条信息.最大值, 滚动条信息.页), 1))
    设置滚动条信息_ (窗口句柄, 0, 滚动条信息, 真)
.默认
    
.判断结束


.子程序 垂直滚动条自身响应, 空白型, , 针对垂直滚动条自身做出的响应
.参数 窗口句柄, 整数型, , 
.参数 参数一, 整数型, , 
.参数 滚动步长, 整数型, , 

.局部变量 局部_位置, 短整数型, , , 
.局部变量 局部_滚动条操作, 字节型, , , 0：按下滚动条左边（或上边）按钮；1：按下滚动条右边（或下边）按钮；2：鼠标单击前台（向左（或上）翻页）：3鼠标单击后台（向右（或下）翻页；4：滚动至鼠标处；5：拉动滚动条中台（按钮）；6：滚动至左（或上）边缘；7：滚动至右（或下）边缘；8：操作完毕
.局部变量 滚动条信息, 滚动条信息, , , 

赋值 (局部_位置, 右移 (参数一, 16))
赋值 (局部_滚动条操作, 位与 (参数一, 65535))
.判断开始 (等于 (局部_滚动条操作, 0)) ' 水平滚动条左边按钮被按下（向左滚动）
    赋值 (滚动条信息.标志, 4)
    取滚动条信息_ (窗口句柄, 1, 滚动条信息)
    赋值 (滚动条信息.标志, 4)
    赋值 (滚动条信息.位置, 相减 (滚动条信息.位置, 滚动步长))
    设置滚动条信息_ (窗口句柄, 1, 滚动条信息, 真)
.判断 (等于 (局部_滚动条操作, 1)) ' 垂直滚动条右边按钮被按下（向右滚动）
    赋值 (滚动条信息.标志, 4) ' 取与设置信息之前都要设置这个标志，它用来指定要取或设置的信息项
    取滚动条信息_ (窗口句柄, 1, 滚动条信息)
    赋值 (滚动条信息.标志, 4)
    赋值 (滚动条信息.位置, 相加 (滚动条信息.位置, 滚动步长))
    设置滚动条信息_ (窗口句柄, 1, 滚动条信息, 真)
.判断 (等于 (局部_滚动条操作, 2)) ' 垂直滚动条前台被单击（向上翻页）
    赋值 (滚动条信息.标志, 23)
    取滚动条信息_ (窗口句柄, 1, 滚动条信息)
    赋值 (滚动条信息.标志, 4)
    赋值 (滚动条信息.位置, 相减 (滚动条信息.位置, 滚动条信息.页))
    设置滚动条信息_ (窗口句柄, 1, 滚动条信息, 真)
.判断 (等于 (局部_滚动条操作, 3)) ' 垂直滚动条后台被单击（向下翻页）
    赋值 (滚动条信息.标志, 23)
    取滚动条信息_ (窗口句柄, 1, 滚动条信息)
    赋值 (滚动条信息.标志, 4)
    赋值 (滚动条信息.位置, 相加 (滚动条信息.位置, 滚动条信息.页))
    设置滚动条信息_ (窗口句柄, 1, 滚动条信息, 真)
    
.判断 (等于 (局部_滚动条操作, 4)) ' 右键菜单之滚动至此处（鼠标位置）
    赋值 (滚动条信息.标志, 4)
    赋值 (滚动条信息.位置, 局部_位置)
    设置滚动条信息_ (窗口句柄, 1, 滚动条信息, 真)
.判断 (等于 (局部_滚动条操作, 5)) ' 拉动中台（按钮）
    赋值 (滚动条信息.标志, 4)
    赋值 (滚动条信息.位置, 局部_位置)
    设置滚动条信息_ (窗口句柄, 1, 滚动条信息, 真)
.判断 (等于 (局部_滚动条操作, 6)) ' 右键菜单之滚动至顶部
    赋值 (滚动条信息.标志, 1)
    取滚动条信息_ (窗口句柄, 1, 滚动条信息)
    赋值 (滚动条信息.标志, 4)
    赋值 (滚动条信息.位置, 滚动条信息.最小值)
    设置滚动条信息_ (窗口句柄, 1, 滚动条信息, 真)
.判断 (等于 (局部_滚动条操作, 7)) ' 右键菜单之滚动至底部
    赋值 (滚动条信息.标志, 23)
    取滚动条信息_ (窗口句柄, 1, 滚动条信息)
    赋值 (滚动条信息.标志, 4)
    赋值 (滚动条信息.位置, 相加 (相减 (滚动条信息.最大值, 滚动条信息.页), 1))
    设置滚动条信息_ (窗口句柄, 1, 滚动条信息, 真)
.默认
    
.判断结束


.程序集 公共程序集, , , 

.子程序 判断窗口辈份, 空白型, , 
.参数 窗口句柄, 整数型, , 



.子程序 取长辈窗口, 空白型, , 


.子程序 取平辈窗口, 空白型, , 


.子程序 取晚辈窗口, 空白型, , 


.窗口程序集 窗口程序集2, , , 

.程序集变量 窗口过程, 整数型, , , 
.子程序 _窗口2_创建完毕, 空白型, , 
赋值 (窗口过程, 设置窗口信息_ (取窗口句柄 (), -4, 到整数 (&窗口过程)))


.子程序 窗口过程, 整数型, , 
.参数 窗口句柄, 整数型, , 
.参数 消息号, 整数型, , 
.参数 参数一, 整数型, , 
.参数 参数二, 整数型, , 

 ' 调试输出 (消息号)

.判断开始 (等于 (消息号, 258)) ' 字符输入
    调试输出 (“字符输入”, 字符 (参数一))
    返回 (回调窗口过程_ (窗口过程, 窗口句柄, 消息号, 参数一, 参数二))
.判断 (等于 (消息号, 269)) ' 输入法_组字开始
    调试输出 (“组字开始”)
.判断 (等于 (消息号, 642)) ' 输入场景改变
    调试输出 (“输入场景改变”, 参数一, 参数二)
    返回 (回调窗口过程_ (全局_基窗口类默认窗口过程, 窗口句柄, 消息号, 参数一, 参数二))
.判断 (等于 (消息号, 271)) ' 输入法_组字中
    绘文本 (窗口句柄, 获取组合字 (窗口句柄, 1))
.判断 (等于 (消息号, 270)) ' 输入法_组字结束
    调试输出 (“组字结束”, 获取组合字 (窗口句柄, 2048))
    绘文本 (窗口句柄, 获取组合字 (窗口句柄, 2048))
.判断 (等于 (消息号, 276)) ' 水平滚动条
    调试输出 (“水平”, 参数一, 参数二)
.判断 (等于 (消息号, 277)) ' 垂直滚动条
    调试输出 (“垂直”, 参数一, 参数二)
.判断 (等于 (消息号, 522)) ' 滚轮滚动
    调试输出 (“滚轮滚动”, 参数一, 参数二)
.默认
    返回 (回调窗口过程_ (窗口过程, 窗口句柄, 消息号, 参数一, 参数二))
.判断结束
返回 (0)

.类模块 GP图形, , , Graphics

.子程序 取指针, 整数型, , 


.子程序 置指针, 空白型, , 
.参数 参数_指针, 整数型, , 



.子程序 销毁, 逻辑型, , GdipDeleteGraphics。


.子程序 创建自窗口句柄, 逻辑型, , GdipCreateFromHWND。
.参数 参数_窗口句柄, 整数型, , 
.参数 参数_是否ICM, 逻辑型, 可空, 默认为假。如果为真表示使用ICC文件调整颜色。



.子程序 创建自DC, 逻辑型, , GdipCreateFromHDC。
.参数 参数_hDC, 整数型, , 
.参数 参数_hdevice, 整数型, 可空, 



.子程序 创建自图像, 逻辑型, , GdipGetImageGraphicsContext。
.参数 参数_Gdiplus图像, GP图像, , 



.子程序 获取DC, 整数型, , GdipGetDC。返回当前图形对象的DC句柄。不用后用“对象.释放DC”释放设备场景句柄


.子程序 释放DC, 逻辑型, , GdipReleaseDC。释放由方法“对象.获取DC”返回的设备场景句柄
.参数 参数_DC句柄, 整数型, , 



.子程序 取混合模式, 整数型, , GdipGetCompositingMode。“混合模式_”开头常量。


.子程序 置混合模式, 逻辑型, , GdipSetCompositingMode
.参数 参数_混合模式, 整数型, , “混合模式_”开头常量。



.子程序 取渲染原点, 逻辑型, , GdipGetRenderingOrigin
.参数 参数_x, 整数型, 参考, 只能提供变量，装载数据
.参数 参数_y, 整数型, 参考, 只能提供变量，装载数据



.子程序 置渲染原点, 逻辑型, , GdipSetRenderingOrigin
.参数 参数_x, 整数型, , 
.参数 参数_y, 整数型, , 



.子程序 取混合品质, 整数型, , GdipGetCompositingQuality。“混合品质_”开头常量。


.子程序 置混合品质, 逻辑型, , GdipSetCompositingQuality
.参数 参数_混合模式, 整数型, , “混合品质_”开头常量。



.子程序 置平滑模式, 逻辑型, , GdipSetSmoothingMode
.参数 参数_呈现模式, 整数型, , “平滑模式_”开头常量。



.子程序 取平滑模式, 整数型, , GdipGetSmoothingMode。“平滑模式_”开头常量。


.子程序 置文本渲染模式, 逻辑型, , GdipSetTextRenderingHint
.参数 参数_文本呈现模式, 整数型, , “文本渲染模式_”开头常量。



.子程序 取文本渲染模式, 整数型, , GdipGetTextRenderingHint。“文本渲染模式_”开头常量。


.子程序 置算法模式, 逻辑型, , GdipSetInterpolationMode。设置在缩放或旋转图像时使用的算法
.参数 参数_算法模式, 整数型, , “算法模式_”开头常量。



.子程序 取算法模式, 整数型, , GdipGetInterpolationMode。“算法模式_”开头常量。


.子程序 置像素偏移模式, 逻辑型, , GdipSetPixelOffsetMode。设置在缩放或旋转图像时使用的算法
.参数 参数_像素偏移模式, 整数型, , “像素偏移模式_”开头常量。



.子程序 取像素偏移模式, 整数型, , GdipGetTextRenderingHint。“像素偏移模式_”开头常量。


.子程序 变形置矩阵, 逻辑型, , GdipSetWorldTransform
.参数 参数_矩阵, GP矩阵, , 



.子程序 变形取矩阵, 逻辑型, , GdipGetWorldTransform
.参数 参数_矩阵, GP矩阵, 参考, 



.子程序 变形重置, 逻辑型, , GdipResetWorldTransform


.子程序 变形相乘, 逻辑型, , GdipMultiplyWorldTransform
.参数 参数_矩阵, GP矩阵, , 
.参数 参数_矩阵顺序, 整数型, 可空, “矩阵顺序_”开头常量。默认为“#矩阵顺序_预先计算”



.子程序 变形平移, 逻辑型, , GdipTranslateWorldTransform。
.参数 参数_水平偏移量, 小数型, , 
.参数 参数_垂直偏移量, 小数型, , 
.参数 参数_矩阵顺序, 整数型, 可空, “矩阵顺序_”开头常量。默认为“ #矩阵顺序_预先计算”



.子程序 变形缩放, 逻辑型, , GdipScaleWorldTransform
.参数 参数_水平缩放倍数, 小数型, , 
.参数 参数_垂直缩放倍数, 小数型, , 
.参数 参数_矩阵顺序, 整数型, 可空, “矩阵顺序_”开头常量。默认为“ #矩阵顺序_预先计算”



.子程序 变形旋转, 逻辑型, , GdipRotateWorldTransform
.参数 参数_角度, 小数型, , 
.参数 参数_矩阵顺序, 整数型, 可空, “矩阵顺序_”开头常量。默认为“#矩阵顺序_预先计算



.子程序 置页单位, 逻辑型, , GdipSetPageUnit。设置当前页的变形单位。
.参数 参数_单位, 整数型, , “单位_”开头常量。



.子程序 取页单位, 整数型, , GdipGetPageUnit。“单位_”开头常量。


.子程序 置页比例, 逻辑型, , GdipSetPageScale
.参数 参数_比例, 小数型, , 



.子程序 取页比例, 小数型, , GdipGetPageUnit。


.子程序 取水平分辨率, 小数型, , GdipGetDpiX


.子程序 取垂直分辨率, 小数型, , GdipGetDpiY


.子程序 转换坐标空间, 逻辑型, , GdipTransformPoints
.参数 参数_目标坐标空间, 整数型, , “坐标空间_”开头常量。
.参数 参数_源坐标空间, 整数型, , “坐标空间_”开头常量。
.参数 参数_坐标组, 坐标F, 参考 数组, 



.子程序 转换坐标空间I, 逻辑型, , GdipTransformPoints
.参数 参数_目标坐标空间, 整数型, , “坐标空间_”开头常量。
.参数 参数_源坐标空间, 整数型, , “坐标空间_”开头常量。
.参数 参数_坐标组, 坐标L, 参考 数组, 



.子程序 取最近颜色, 整数型, , GdipGetNearestColor。返回最近的ARGB颜色。
.参数 参数_参考颜色, 整数型, , 



.子程序 画直线, 逻辑型, , GdipDrawLine
.参数 参数_画笔, GP画笔, , 
.参数 参数_起始x, 小数型, , 
.参数 参数_起始y, 小数型, , 
.参数 参数_结束x, 小数型, , 
.参数 参数_结束y, 小数型, , 



.子程序 画直线I, 逻辑型, , GdipDrawLineI
.参数 参数_画笔, GP画笔, , 
.参数 参数_起始x, 整数型, , 
.参数 参数_起始y, 整数型, , 
.参数 参数_结束x, 整数型, , 
.参数 参数_结束y, 整数型, , 



.子程序 画直线组, 逻辑型, , GdipDrawLines
.参数 参数_画笔, GP画笔, , 
.参数 参数_坐标组, 坐标F, 数组, 



.子程序 画直线组I, 逻辑型, , GdipDrawLinesI
.参数 参数_画笔, GP画笔, , 
.参数 参数_坐标组, 坐标L, 数组, 



.子程序 画圆弧, 逻辑型, , GdipDrawArc。以顺时针方向画一个圆弧
.参数 参数_画笔, GP画笔, , 
.参数 参数_左边, 小数型, , 
.参数 参数_顶边, 小数型, , 
.参数 参数_宽度, 小数型, , 
.参数 参数_高度, 小数型, , 
.参数 参数_开始角度, 小数型, , 
.参数 参数_扫描角度, 小数型, , 



.子程序 画圆弧I, 逻辑型, , GdipDrawArcI。以顺时针方向画一个圆弧
.参数 参数_画笔, GP画笔, , 
.参数 参数_左边, 整数型, , 
.参数 参数_顶边, 整数型, , 
.参数 参数_宽度, 整数型, , 
.参数 参数_高度, 整数型, , 
.参数 参数_开始角度, 小数型, , 
.参数 参数_扫描角度, 小数型, , 



.子程序 画贝塞尔曲线, 逻辑型, , GdipDrawBezier。
.参数 参数_画笔, GP画笔, , 
.参数 参数_x1, 小数型, , 
.参数 参数_y1, 小数型, , 
.参数 参数_x2, 小数型, , 
.参数 参数_y2, 小数型, , 
.参数 参数_x3, 小数型, , 
.参数 参数_y3, 小数型, , 
.参数 参数_x4, 小数型, , 
.参数 参数_y4, 小数型, , 



.子程序 画贝塞尔曲线I, 逻辑型, , GdipDrawBezierI。
.参数 参数_画笔, GP画笔, , 
.参数 参数_x1, 整数型, , 
.参数 参数_y1, 整数型, , 
.参数 参数_x2, 整数型, , 
.参数 参数_y2, 整数型, , 
.参数 参数_x3, 整数型, , 
.参数 参数_y3, 整数型, , 
.参数 参数_x4, 整数型, , 
.参数 参数_y4, 整数型, , 



.子程序 画贝塞尔曲线组, 逻辑型, , GdipDrawBeziers。“参数_坐标组”的成员数必须4个以上。
.参数 参数_画笔, GP画笔, , 
.参数 参数_坐标组, 坐标F, 数组, 



.子程序 画贝塞尔曲线组I, 逻辑型, , GdipDrawBeziersI。“参数_坐标组”的成员数必须4个以上。
.参数 参数_画笔, GP画笔, , 
.参数 参数_坐标组, 坐标L, 数组, 



.子程序 画矩形, 逻辑型, , GdipDrawRectangle
.参数 参数_画笔, GP画笔, , 
.参数 参数_左边, 小数型, , 
.参数 参数_顶边, 小数型, , 
.参数 参数_宽度, 小数型, , 
.参数 参数_高度, 小数型, , 



.子程序 画矩形I, 逻辑型, , GdipDrawRectangleI
.参数 参数_画笔, GP画笔, , 
.参数 参数_左边, 整数型, , 
.参数 参数_顶边, 整数型, , 
.参数 参数_宽度, 整数型, , 
.参数 参数_高度, 整数型, , 



.子程序 画矩形组, 逻辑型, , GdipDrawRectangles
.参数 参数_画笔, GP画笔, , 
.参数 参数_矩形组, 矩形F, 数组, 



.子程序 画矩形组I, 逻辑型, , GdipDrawRectanglesI
.参数 参数_画笔, GP画笔, , 
.参数 参数_矩形组, 矩形L, 数组, 



.子程序 画椭圆, 逻辑型, , GdipDrawEllipse。
.参数 参数_画笔, GP画笔, , 
.参数 参数_左边, 小数型, , 
.参数 参数_顶边, 小数型, , 
.参数 参数_宽度, 小数型, , 
.参数 参数_高度, 小数型, , 



.子程序 画椭圆I, 逻辑型, , GdipDrawEllipseI。
.参数 参数_画笔, GP画笔, , 
.参数 参数_左边, 整数型, , 
.参数 参数_顶边, 整数型, , 
.参数 参数_宽度, 整数型, , 
.参数 参数_高度, 整数型, , 



.子程序 画饼, 逻辑型, , GdipDrawPie。
.参数 参数_画笔, GP画笔, , 
.参数 参数_左边, 小数型, , 
.参数 参数_顶边, 小数型, , 
.参数 参数_宽度, 小数型, , 
.参数 参数_高度, 小数型, , 
.参数 参数_开始角度, 小数型, , 
.参数 参数_扫描角度, 小数型, , 



.子程序 画饼I, 逻辑型, , GdipDrawPieI。
.参数 参数_画笔, GP画笔, , 
.参数 参数_左边, 整数型, , 
.参数 参数_顶边, 整数型, , 
.参数 参数_宽度, 整数型, , 
.参数 参数_高度, 整数型, , 
.参数 参数_开始角度, 小数型, , 
.参数 参数_扫描角度, 小数型, , 



.子程序 画多边形, 逻辑型, , GdipDrawPolygon
.参数 参数_画笔, GP画笔, , 
.参数 参数_坐标组, 坐标F, 数组, 



.子程序 画多边形I, 逻辑型, , GdipDrawPolygonI
.参数 参数_画笔, GP画笔, , 
.参数 参数_坐标组, 坐标L, 数组, 



.子程序 画路径, 逻辑型, , GdipDrawPath
.参数 参数_画笔, GP画笔, , 
.参数 参数_路径, GP路径, , 



.子程序 画曲线, 逻辑型, , GdipDrawCurve。
.参数 参数_画笔, GP画笔, , 
.参数 参数_坐标组, 坐标F, 数组, 



.子程序 画曲线I, 逻辑型, , GdipDrawCurveI。
.参数 参数_画笔, GP画笔, , 
.参数 参数_坐标组, 坐标L, 数组, 



.子程序 画曲线2, 逻辑型, , GdipDrawCurve2。
.参数 参数_画笔, GP画笔, , 
.参数 参数_坐标组, 坐标F, 数组, 
.参数 参数_张力, 小数型, , 



.子程序 画曲线2I, 逻辑型, , GdipDrawCurve2I。
.参数 参数_画笔, GP画笔, , 
.参数 参数_坐标组, 坐标L, 数组, 
.参数 参数_张力, 小数型, , 



.子程序 画曲线3, 逻辑型, , GdipDrawCurve3。
.参数 参数_画笔, GP画笔, , 
.参数 参数_坐标组, 坐标F, 数组, 
.参数 参数_偏移量, 整数型, , 从0开始
.参数 参数_段数, 整数型, , 从0开始
.参数 参数_张力, 小数型, , 



.子程序 画曲线3I, 逻辑型, , GdipDrawCurve3I。
.参数 参数_画笔, GP画笔, , 
.参数 参数_坐标组, 坐标L, 数组, 
.参数 参数_偏移量, 整数型, , 从0开始
.参数 参数_段数, 整数型, , 从0开始
.参数 参数_张力, 小数型, , 



.子程序 画闭合曲线, 逻辑型, , GdipDrawClosedCurve。最后一点将和起始点自动连接。
.参数 参数_画笔, GP画笔, , 
.参数 参数_坐标组, 坐标F, 数组, 



.子程序 画闭合曲线I, 逻辑型, , GdipDrawClosedCurveI。最后一点将和起始点自动连接。
.参数 参数_画笔, GP画笔, , 
.参数 参数_坐标组, 坐标L, 数组, 



.子程序 画闭合曲线2, 逻辑型, , GdipDrawClosedCurve2。最后一点将和起始点自动连接。
.参数 参数_画笔, GP画笔, , 
.参数 参数_坐标组, 坐标F, 数组, 
.参数 参数_张力, 小数型, , 



.子程序 画闭合曲线2I, 逻辑型, , GdipDrawClosedCurve2I。最后一点将和起始点自动连接。
.参数 参数_画笔, GP画笔, , 
.参数 参数_坐标组, 坐标L, 数组, 
.参数 参数_张力, 小数型, , 



.子程序 清除, 逻辑型, , GdipGraphicsClear。清除整个绘图面，并以指定色填充。
.参数 参数_ARGB颜色, 整数型, 可空, 默认为-1。



.子程序 填充矩形, 逻辑型, , GdipFillRectangle
.参数 参数_画刷, 未知类型0x49019565, , 
.参数 参数_左边, 小数型, , 
.参数 参数_顶边, 小数型, , 
.参数 参数_宽度, 小数型, , 
.参数 参数_高度, 小数型, , 



.子程序 填充矩形2, 逻辑型, , GdipFillRectangle
.参数 参数_画刷, 未知类型0x49019565, , 
.参数 参数_矩形, 矩形F, , 



.子程序 填充矩形I, 逻辑型, , GdipFillRectangleI
.参数 参数_画刷, 未知类型0x49019565, , 
.参数 参数_左边, 整数型, , 
.参数 参数_顶边, 整数型, , 
.参数 参数_宽度, 整数型, , 
.参数 参数_高度, 整数型, , 



.子程序 填充矩形组, 逻辑型, , GdipFillRectangles
.参数 参数_画刷, 未知类型0x49019565, , 
.参数 参数_矩形组, 矩形F, 数组, 



.子程序 填充矩形组I, 逻辑型, , GdipFillRectanglesI
.参数 参数_画刷, 未知类型0x49019565, , 
.参数 参数_矩形组, 矩形L, 数组, 



.子程序 填充多边形, 逻辑型, , GdipFillPolygon
.参数 参数_画刷, 未知类型0x49019565, , 
.参数 参数_坐标组, 坐标F, 数组, 
.参数 参数_填充模式, 整数型, 可空, “填充模式_”开头常量，默认为：“#填充模式_交替”



.子程序 填充多边形I, 逻辑型, , GdipFillPolygonI
.参数 参数_画刷, 未知类型0x49019565, , 
.参数 参数_坐标组, 坐标L, 数组, 
.参数 参数_填充模式, 整数型, 可空, “填充模式_”开头常量，默认为：“#填充模式_交替”



.子程序 填充椭圆, 逻辑型, , GdipFillEllipse
.参数 参数_画刷, 未知类型0x49019565, , 
.参数 参数_左边, 小数型, , 
.参数 参数_顶边, 小数型, , 
.参数 参数_宽度, 小数型, , 
.参数 参数_高度, 小数型, , 



.子程序 填充椭圆I, 逻辑型, , GdipFillEllipseI
.参数 参数_画刷, 未知类型0x49019565, , 
.参数 参数_左边, 整数型, , 
.参数 参数_顶边, 整数型, , 
.参数 参数_宽度, 整数型, , 
.参数 参数_高度, 整数型, , 



.子程序 填充饼, 逻辑型, , GdipFillPie
.参数 参数_画刷, 未知类型0x49019565, , 
.参数 参数_左边, 小数型, , 
.参数 参数_顶边, 小数型, , 
.参数 参数_宽度, 小数型, , 
.参数 参数_高度, 小数型, , 
.参数 参数_开始角度, 小数型, , 
.参数 参数_扫描角度, 小数型, , 



.子程序 填充饼I, 逻辑型, , GdipFillPieI
.参数 参数_画刷, 未知类型0x49019565, , 
.参数 参数_左边, 整数型, , 
.参数 参数_顶边, 整数型, , 
.参数 参数_宽度, 整数型, , 
.参数 参数_高度, 整数型, , 
.参数 参数_开始角度, 小数型, , 
.参数 参数_扫描角度, 小数型, , 



.子程序 填充路径, 逻辑型, , GdipFillPath
.参数 参数_画刷, 未知类型0x49019565, , 
.参数 参数_路径, GP路径, , 



.子程序 填充闭合曲线, 逻辑型, , GdipFillClosedCurve
.参数 参数_画刷, 未知类型0x49019565, , 
.参数 参数_坐标组, 坐标F, 数组, 



.子程序 填充闭合曲线2, 逻辑型, , GdipFillClosedCurve2
.参数 参数_画刷, 未知类型0x49019565, , 
.参数 参数_坐标组, 坐标F, 数组, 
.参数 参数_张力, 小数型, , 
.参数 参数_填充模式, 整数型, 可空, “填充模式_”开头常量，默认为：“#填充模式_交替”



.子程序 填充闭合曲线I, 逻辑型, , GdipFillClosedCurveI
.参数 参数_画刷, 未知类型0x49019565, , 
.参数 参数_坐标组, 坐标L, 数组, 



.子程序 填充闭合曲线2I, 逻辑型, , GdipFillClosedCurve2I
.参数 参数_画刷, 未知类型0x49019565, , 
.参数 参数_坐标组, 坐标L, 数组, 
.参数 参数_张力, 小数型, , 
.参数 参数_填充模式, 整数型, 可空, “填充模式_”开头常量，默认为：“#填充模式_交替”



.子程序 填充区域, 逻辑型, , GdipFillRegion
.参数 参数_画刷, 未知类型0x49019565, , 
.参数 参数_区域, GP区域, , 



.子程序 画文本, 逻辑型, , GdipDrawString
.参数 参数_文本, 文本型, , 
.参数 参数_字体, GP字体, , 
.参数 参数_画刷, 未知类型0x49019565, , 
.参数 参数_矩形, 矩形F, 可空, 
.参数 参数_文本格式, GP文本格式, 可空, 



.子程序 测量文本矩形, 逻辑型, , GdipMeasureString
.参数 参数_文本, 文本型, , 
.参数 参数_字体, GP字体, , 
.参数 参数_参考矩形, 矩形F, 可空, 
.参数 参数_文本格式, GP文本格式, 可空, 
.参数 参数_测量矩形, 矩形F, 参考, 返回测量“参数_文本”所需要的矩形。



.子程序 测量文本区域, 逻辑型, , GdipMeasureCharacterRanges
.参数 参数_文本, 文本型, , 
.参数 参数_字体, GP字体, , 
.参数 参数_参考矩形, 矩形F, 可空, 
.参数 参数_文本格式, GP文本格式, 可空, 
.参数 参数_区域数, 整数型, , 
.参数 参数_区域集, GP区域, 参考 数组, 返回区域数组。



.子程序 画控制文本, 逻辑型, , GdipDrawDriverString
.参数 参数_文本, 文本型, , 
.参数 参数_字体, GP字体, , 
.参数 参数_画刷, 未知类型0x49019565, , 
.参数 参数_坐标集, 坐标F, 数组, 每一个坐标指定每个文本所在的位置。
.参数 参数_标志, 整数型, 可空, “控制文本标志_”开头常量组合。默认为：“控制文本标志_映射查找”
.参数 参数_矩阵, GP矩阵, 可空, 



.子程序 置文本对比度, 逻辑型, , GdipSetTextContrast
.参数 参数_对比度, 整数型, , 



.子程序 取文本对比度, 整数型, , GdipGetTextContrast


.子程序 画图像, 逻辑型, , GdipDrawImage。
.参数 参数_图像, GP图像, , 
.参数 参数_左边, 小数型, , 
.参数 参数_顶边, 小数型, , 



.子程序 画图像I, 逻辑型, , GdipDrawImageI。
.参数 参数_图像, GP图像, , 
.参数 参数_左边, 整数型, , 
.参数 参数_顶边, 整数型, , 



.子程序 画缓存位图, 逻辑型, , GdipDrawCachedBitmap
.参数 参数_缓存位图, GP缓存位图, , 
.参数 参数_左边, 小数型, , 
.参数 参数_顶边, 小数型, , 



.子程序 画图像缩放, 逻辑型, , GdipDrawImageRect。按照指定的矩形缩放图像。
.参数 参数_图像, GP图像, , 
.参数 参数_左边, 小数型, , 
.参数 参数_顶边, 小数型, , 
.参数 参数_宽度, 小数型, , 
.参数 参数_高度, 小数型, , 



.子程序 画图像缩放I, 逻辑型, , GdipDrawImageRectI。按照指定的矩形缩放图像。
.参数 参数_图像, GP图像, , 
.参数 参数_左边, 整数型, , 
.参数 参数_顶边, 整数型, , 
.参数 参数_宽度, 整数型, , 
.参数 参数_高度, 整数型, , 



.子程序 画图像变形, 逻辑型, , GdipDrawImagePoints，可以画出平行四边形的图像。
.参数 参数_图像, GP图像, , 
.参数 参数_左上角X, 小数型, , 
.参数 参数_左上角Y, 小数型, , 
.参数 参数_右上角X, 小数型, , 
.参数 参数_右上角Y, 小数型, , 
.参数 参数_左下角X, 小数型, , 
.参数 参数_左下角Y, 小数型, , 



.子程序 画图像变形I, 逻辑型, , GdipDrawImagePointsI，可以画出平行四边形的图像。
.参数 参数_图像, GP图像, , 
.参数 参数_左上角X, 整数型, , 
.参数 参数_左上角Y, 整数型, , 
.参数 参数_右上角X, 整数型, , 
.参数 参数_右上角Y, 整数型, , 
.参数 参数_左下角X, 整数型, , 
.参数 参数_左下角Y, 整数型, , 



.子程序 画图像部分, 逻辑型, , GdipDrawImagePointRect。可以画出源图像的一部分或全部。
.参数 参数_图像, GP图像, , 
.参数 参数_左边, 小数型, , 
.参数 参数_顶边, 小数型, , 
.参数 参数_原图左边, 小数型, , 
.参数 参数_原图顶边, 小数型, , 
.参数 参数_原图宽度, 小数型, , 
.参数 参数_原图高度, 小数型, , 
.参数 参数_单位, 整数型, 可空, 默认为“单位_像素”



.子程序 画图像部分I, 逻辑型, , GdipDrawImagePointRectI。可以画出源图像的一部分或全部。
.参数 参数_图像, GP图像, , 
.参数 参数_左边, 整数型, , 
.参数 参数_顶边, 整数型, , 
.参数 参数_原图左边, 整数型, , 
.参数 参数_原图顶边, 整数型, , 
.参数 参数_原图宽度, 整数型, , 
.参数 参数_原图高度, 整数型, , 
.参数 参数_单位, 整数型, 可空, 默认为“单位_像素”



.子程序 画图像缩放部分, 逻辑型, , GdipDrawImageRectRect。按照指定的矩形缩放图像，并且可以是源图像的一部分或全部
.参数 参数_图像, GP图像, , 
.参数 参数_左边, 小数型, , 
.参数 参数_顶边, 小数型, , 
.参数 参数_宽度, 小数型, , 
.参数 参数_高度, 小数型, , 
.参数 参数_原图左边, 小数型, , 
.参数 参数_原图顶边, 小数型, , 
.参数 参数_原图宽度, 小数型, , 
.参数 参数_原图高度, 小数型, , 
.参数 参数_原图单位, 整数型, 可空, 默认为“单位_像素”
.参数 参数_图像属性, GP图像属性, 可空, 



.子程序 画图像缩放部分I, 逻辑型, , GdipDrawImageRectRectI。按照指定的矩形缩放图像，并且可以是源图像的一部分或全部
.参数 参数_图像, GP图像, , 
.参数 参数_左边, 整数型, , 
.参数 参数_顶边, 整数型, , 
.参数 参数_宽度, 整数型, , 
.参数 参数_高度, 整数型, , 
.参数 参数_原图左边, 整数型, , 
.参数 参数_原图顶边, 整数型, , 
.参数 参数_原图宽度, 整数型, , 
.参数 参数_原图高度, 整数型, , 
.参数 参数_原图单位, 整数型, 可空, 默认为“单位_像素”
.参数 参数_图像属性, GP图像属性, 可空, 



.子程序 画图像变形部分, 逻辑型, , GdipDrawImagePointsRect。可以画出平行四边形的图像，并且可以是源图像的一部分或全部
.参数 参数_图像, GP图像, , 
.参数 参数_左上角X, 小数型, , 
.参数 参数_左上角Y, 小数型, , 
.参数 参数_右上角X, 小数型, , 
.参数 参数_右上角Y, 小数型, , 
.参数 参数_左下角X, 小数型, , 
.参数 参数_左下角Y, 小数型, , 
.参数 参数_原图左边, 小数型, , 
.参数 参数_原图顶边, 小数型, , 
.参数 参数_原图宽度, 小数型, , 
.参数 参数_原图高度, 小数型, , 
.参数 参数_原图单位, 整数型, 可空, 默认为“单位_像素”
.参数 参数_图像属性, GP图像属性, 可空, 



.子程序 画图像变形部分I, 逻辑型, , GdipDrawImagePointsRectI。可以画出平行四边形的图像，并且可以是源图像的一部分或全部
.参数 参数_图像, GP图像, , 
.参数 参数_左上角X, 整数型, , 
.参数 参数_左上角Y, 整数型, , 
.参数 参数_右上角X, 整数型, , 
.参数 参数_右上角Y, 整数型, , 
.参数 参数_左下角X, 整数型, , 
.参数 参数_左下角Y, 整数型, , 
.参数 参数_原图左边, 整数型, , 
.参数 参数_原图顶边, 整数型, , 
.参数 参数_原图宽度, 整数型, , 
.参数 参数_原图高度, 整数型, , 
.参数 参数_原图单位, 整数型, 可空, 默认为“单位_像素”
.参数 参数_图像属性, GP图像属性, 可空, 



.子程序 列举图元文件目的坐标, 逻辑型, , GdipEnumerateMetafileDestPoint。这个方法可以在回调函数中使用回放图元文件。
.参数 参数_图元文件, GP图元文件, , 
.参数 参数_目的坐标, 坐标F, , 
.参数 参数_回调函数, 整数型, , 参数1 整数型：记录类型，参数2 整数型：标志，参数3 整数型：数据大小，参数4 整数型：数据指针，参数5 整数型：自定义数值。返回值 逻辑型。
.参数 参数_自定义数值, 整数型, 可空, 
.参数 参数_图像属性, GP图像属性, 可空, 



.子程序 列举图元文件目的坐标I, 逻辑型, , GdipEnumerateMetafileDestPointI。这个方法可以在回调函数中使用回放图元文件。
.参数 参数_图元文件, GP图元文件, , 
.参数 参数_目的坐标, 坐标L, , 
.参数 参数_回调函数, 整数型, , 参数1 整数型：记录类型，参数2 整数型：标志，参数3 整数型：数据大小，参数4 整数型：数据指针，参数5 整数型：自定义数值。返回值 逻辑型。
.参数 参数_自定义数值, 整数型, 可空, 
.参数 参数_图像属性, GP图像属性, 可空, 



.子程序 列举图元文件目的坐标集, 逻辑型, , GdipEnumerateMetafileDestPoints。这个方法可以在回调函数中使用回放图元文件。
.参数 参数_图元文件, GP图元文件, , 
.参数 参数_目的坐标组, 坐标F, 数组, 
.参数 参数_回调函数, 整数型, , 参数1 整数型：记录类型，参数2 整数型：标志，参数3 整数型：数据大小，参数4 整数型：数据指针，参数5 整数型：自定义数值。返回值 逻辑型。
.参数 参数_自定义数值, 整数型, 可空, 
.参数 参数_图像属性, GP图像属性, 可空, 



.子程序 列举图元文件目的坐标集I, 逻辑型, , GdipEnumerateMetafileDestPointsI。这个方法可以在回调函数中使用回放图元文件。
.参数 参数_图元文件, GP图元文件, , 
.参数 参数_目的坐标组, 坐标L, 数组, 
.参数 参数_回调函数, 整数型, , 参数1 整数型：记录类型，参数2 整数型：标志，参数3 整数型：数据大小，参数4 整数型：数据指针，参数5 整数型：自定义数值。返回值 逻辑型。
.参数 参数_自定义数值, 整数型, 可空, 
.参数 参数_图像属性, GP图像属性, 可空, 



.子程序 列举图元文件目的矩形, 逻辑型, , GdipEnumerateMetafileDestRect。这个方法可以在回调函数中使用回放图元文件。
.参数 参数_图元文件, GP图元文件, , 
.参数 参数_目的矩形, 矩形F, , 
.参数 参数_回调函数, 整数型, , 参数1 整数型：记录类型，参数2 整数型：标志，参数3 整数型：数据大小，参数4 整数型：数据指针，参数5 整数型：自定义数值。返回值 逻辑型。
.参数 参数_自定义数值, 整数型, 可空, 
.参数 参数_图像属性, GP图像属性, 可空, 



.子程序 列举图元文件目的矩形I, 逻辑型, , GdipEnumerateMetafileDestRectI。这个方法可以在回调函数中使用回放图元文件。
.参数 参数_图元文件, GP图元文件, , 
.参数 参数_目的矩形, 矩形L, , 
.参数 参数_回调函数, 整数型, , 参数1 整数型：记录类型，参数2 整数型：标志，参数3 整数型：数据大小，参数4 整数型：数据指针，参数5 整数型：自定义数值。返回值 逻辑型。
.参数 参数_自定义数值, 整数型, 可空, 
.参数 参数_图像属性, GP图像属性, 可空, 



.子程序 列举图元文件源矩形目的坐标, 逻辑型, , GdipEnumerateMetafileSrcRectDestPoint。这个方法可以在回调函数中使用回放图元文件。
.参数 参数_图元文件, GP图元文件, , 
.参数 参数_目的坐标, 坐标F, , 
.参数 参数_源矩形, 矩形F, , 
.参数 参数_源单位, 整数型, , “单位_”开头常量。
.参数 参数_回调函数, 整数型, , 参数1 整数型：记录类型，参数2 整数型：标志，参数3 整数型：数据大小，参数4 整数型：数据指针，参数5 整数型：自定义数值。返回值 逻辑型。
.参数 参数_自定义数值, 整数型, 可空, 
.参数 参数_图像属性, GP图像属性, 可空, 



.子程序 列举图元文件源矩形目的坐标I, 逻辑型, , GdipEnumerateMetafileSrcRectDestPointI。这个方法可以在回调函数中使用回放图元文件。
.参数 参数_图元文件, GP图元文件, , 
.参数 参数_目的坐标, 坐标L, , 
.参数 参数_源矩形, 矩形L, , 
.参数 参数_源单位, 整数型, , “单位_”开头常量。
.参数 参数_回调函数, 整数型, , 参数1 整数型：记录类型，参数2 整数型：标志，参数3 整数型：数据大小，参数4 整数型：数据指针，参数5 整数型：自定义数值。返回值 逻辑型。
.参数 参数_自定义数值, 整数型, 可空, 
.参数 参数_图像属性, GP图像属性, 可空, 



.子程序 列举图元文件源矩形目的坐标集, 逻辑型, , GdipEnumerateMetafileSrcRectDestPoints。这个方法可以在回调函数中使用回放图元文件。
.参数 参数_图元文件, GP图元文件, , 
.参数 参数_目的坐标组, 坐标F, 数组, 
.参数 参数_源矩形, 矩形F, , 
.参数 参数_源单位, 整数型, , “单位_”开头常量。
.参数 参数_回调函数, 整数型, , 参数1 整数型：记录类型，参数2 整数型：标志，参数3 整数型：数据大小，参数4 整数型：数据指针，参数5 整数型：自定义数值。返回值 逻辑型。
.参数 参数_自定义数值, 整数型, 可空, 
.参数 参数_图像属性, GP图像属性, 可空, 



.子程序 列举图元文件源矩形目的坐标集I, 逻辑型, , GdipEnumerateMetafileSrcRectDestPointsI。这个方法可以在回调函数中使用回放图元文件。
.参数 参数_图元文件, GP图元文件, , 
.参数 参数_目的坐标, 坐标L, 数组, 
.参数 参数_源矩形, 矩形L, , 
.参数 参数_源单位, 整数型, , “单位_”开头常量。
.参数 参数_回调函数, 整数型, , 参数1 整数型：记录类型，参数2 整数型：标志，参数3 整数型：数据大小，参数4 整数型：数据指针，参数5 整数型：自定义数值。返回值 逻辑型。
.参数 参数_自定义数值, 整数型, 可空, 
.参数 参数_图像属性, GP图像属性, 可空, 



.子程序 列举图元文件源矩形目的矩形, 逻辑型, , GdipEnumerateMetafileSrcRectDestRect。这个方法可以在回调函数中使用回放图元文件。
.参数 参数_图元文件, GP图元文件, , 
.参数 参数_目的矩形, 矩形F, , 
.参数 参数_源矩形, 矩形F, , 
.参数 参数_源单位, 整数型, , “单位_”开头常量。
.参数 参数_回调函数, 整数型, , 参数1 整数型：记录类型，参数2 整数型：标志，参数3 整数型：数据大小，参数4 整数型：数据指针，参数5 整数型：自定义数值。返回值 逻辑型。
.参数 参数_自定义数值, 整数型, 可空, 
.参数 参数_图像属性, GP图像属性, 可空, 



.子程序 列举图元文件源矩形目的矩形I, 逻辑型, , GdipEnumerateMetafileSrcRectDestRectI。这个方法可以在回调函数中使用回放图元文件。
.参数 参数_图元文件, GP图元文件, , 
.参数 参数_目的矩形, 矩形L, , 
.参数 参数_源矩形, 矩形L, , 
.参数 参数_源单位, 整数型, , “单位_”开头常量。
.参数 参数_回调函数, 整数型, , 参数1 整数型：记录类型，参数2 整数型：标志，参数3 整数型：数据大小，参数4 整数型：数据指针，参数5 整数型：自定义数值。返回值 逻辑型。
.参数 参数_自定义数值, 整数型, 可空, 
.参数 参数_图像属性, GP图像属性, 可空, 



.子程序 置剪辑区自图形, 逻辑型, , GdipSetClipGraphics
.参数 参数_源图形, GP图形, , 
.参数 参数_合并模式, 整数型, 可空, 默认为“#合并模式_替代”。



.子程序 置剪辑区自路径, 逻辑型, , GdipSetClipPath
.参数 参数_路径, GP路径, , 
.参数 参数_合并模式, 整数型, 可空, 默认为“#合并模式_替代”。



.子程序 置剪辑区自矩形, 逻辑型, , GdipSetClipRect
.参数 参数_左边, 小数型, , 
.参数 参数_顶边, 小数型, , 
.参数 参数_宽度, 小数型, , 
.参数 参数_高度, 小数型, , 
.参数 参数_合并模式, 整数型, 可空, 默认为“#合并模式_替代”。



.子程序 置剪辑区自矩形I, 逻辑型, , GdipSetClipRectI
.参数 参数_左边, 整数型, , 
.参数 参数_顶边, 整数型, , 
.参数 参数_宽度, 整数型, , 
.参数 参数_高度, 整数型, , 
.参数 参数_合并模式, 整数型, 可空, 默认为“#合并模式_替代”。



.子程序 置剪辑区自区域, 逻辑型, , GdipSetClipRegion
.参数 参数_区域, GP区域, , 
.参数 参数_合并模式, 整数型, 可空, 默认为“#合并模式_替代”。



.子程序 置剪辑区自区域句柄, 逻辑型, , GdipSetClipRegion
.参数 参数_区域句柄, 整数型, , hRgn
.参数 参数_合并模式, 整数型, 可空, 默认为“#合并模式_替代”。



.子程序 重置剪辑区, 逻辑型, , GdipResetClip。重置为无限区域。


.子程序 平移剪辑区, 逻辑型, , GdipTranslateClip
.参数 参数_水平偏移量, 小数型, , 
.参数 参数_垂直偏移量, 小数型, , 



.子程序 平移剪辑区I, 逻辑型, , GdipTranslateClipI
.参数 参数_水平偏移量, 整数型, , 
.参数 参数_垂直偏移量, 整数型, , 



.子程序 取剪辑区, 逻辑型, , GdipGetClip
.参数 参数_区域, GP区域, 参考, 返回的区域。



.子程序 取剪辑区边界, 矩形F, , GdipGetClipBounds


.子程序 取剪辑区边界I, 矩形L, , GdipGetClipBoundsI


.子程序 取可见剪辑区边界, 矩形F, , GdipGetVisibleClipBounds


.子程序 取可见剪辑区边界I, 矩形L, , GdipGetVisibleClipBoundsI


.子程序 是否为空剪辑区, 逻辑型, , GdipIsClipEmpty


.子程序 是否为空可见剪辑区, 逻辑型, , GdipIsVisibleClipEmpty


.子程序 是否可见坐标, 逻辑型, , GdipIsVisiblePoint
.参数 参数_x, 小数型, , 
.参数 参数_y, 小数型, , 



.子程序 是否可见坐标I, 逻辑型, , GdipIsVisiblePointI
.参数 参数_x, 整数型, , 
.参数 参数_y, 整数型, , 



.子程序 是否可见矩形, 逻辑型, , GdipIsVisibleRect
.参数 参数_左边, 小数型, , 
.参数 参数_顶边, 小数型, , 
.参数 参数_宽度, 小数型, , 
.参数 参数_高度, 小数型, , 



.子程序 是否可见矩形I, 逻辑型, , GdipIsVisibleRectI
.参数 参数_左边, 整数型, , 
.参数 参数_顶边, 整数型, , 
.参数 参数_宽度, 整数型, , 
.参数 参数_高度, 整数型, , 



.子程序 保存, 整数型, , GdipSaveGraphics。返回状态


.子程序 恢复, 逻辑型, , GdipRestoreGraphics
.参数 参数_状态, 整数型, , 由“保存()”返回的值。



.子程序 开始容器, 整数型, , GdipBeginContainer。返回状态。
.参数 参数_目标矩形, 矩形F, , 
.参数 参数_源矩形, 矩形F, , 
.参数 参数_单位, 整数型, 可空, 



.子程序 开始容器I, 整数型, , GdipBeginContainerI。建一个新绘图状态，返回状态。
.参数 参数_目标矩形, 矩形L, , 
.参数 参数_源矩形, 矩形L, , 
.参数 参数_单位, 整数型, 可空, 



.子程序 开始容器2, 整数型, , GdipBeginContainer2。建一个新绘图状态，返回状态。


.子程序 结束容器, 逻辑型, , GdipEndContainer。结束一个绘制状态。
.参数 参数_状态, 整数型, , 



.子程序 添加图元文件注译, 逻辑型, , GdipComment
.参数 参数_数据, 字节集, , 



.类模块 GP图像, , , Image

.子程序 取指针, 整数型, , 


.子程序 置指针, 空白型, , 
.参数 参数_指针, 整数型, , 



.子程序 销毁, 逻辑型, , GdipDisposeImage。


.子程序 创建自文件, 逻辑型, , GdipLoadImageFromFile
.参数 参数_文件名, 文本型, , 
.参数 参数_是否ICM, 逻辑型, 可空, 默认为假。如果为真表示使用已嵌入颜色管理信息来进行颜色校正。



.子程序 创建自字节集, 逻辑型, , GdipLoadImageFromStream
.参数 参数_字节集, 字节集, , 
.参数 参数_是否ICM, 逻辑型, 可空, 默认为假。如果为真表示使用已嵌入颜色管理信息来进行颜色校正。



.子程序 复制, 逻辑型, , GdipCloneImage
.参数 参数_图像, GP图像, 参考, 



.子程序 保存到文件, 逻辑型, , GdipSaveImageToFile
.参数 参数_文件名, 文本型, , 
.参数 参数_图像格式, 文本型, 可空, “图像格式_”开头常量。
.参数 参数_编码器参数集, 编码器参数集, 可空, 



.子程序 保存到字节集, 字节集, , GdipSaveImageToStream
.参数 参数_图像格式, 文本型, 可空, “图像格式_”开头常量
.参数 参数_编码器参数集, 编码器参数集, 可空, 



.子程序 保存添加, 逻辑型, , GdipSaveAdd
.参数 参数_编码器参数集, 编码器参数集, , 



.子程序 保存添加图像, 逻辑型, , GdipSaveAddImage
.参数 参数_图像, GP图像, , 
.参数 参数_编码器参数集, 编码器参数集, , 



.子程序 取编码器参数列表, 逻辑型, , GdipGetEncoderParameterList。
.参数 参数_图像格式, 文本型, , “图像格式_”开头常量。
.参数 参数_编码器, 编码器参数集, 参考, 



.子程序 取原始格式, 文本型, , GdipGetImageRawFormat。返回“图像格式_”开头常量。


.子程序 取边界矩形, 矩形F, , GdipGetImageBounds。返回矩形范围
.参数 参数_单位, 整数型, 参考 可空, 提供整数型变量取返回值,指定该矩形的单位。“单位_”开头常量。



.子程序 取物理尺寸, 尺寸F, , GdipGetImageDimension


.子程序 取类型, 整数型, , GdipGetImageType。返回“图像类型_”开头常量。


.子程序 取宽度, 整数型, , GdipGetImageWidth


.子程序 取高度, 整数型, , GdipGetImageHeight


.子程序 取水平分辨率, 小数型, , GdipGetImageHorizontalResolution。以“像素/英寸”为单位


.子程序 取垂直分辨率, 小数型, , GdipGetImageVerticalResolution。以“像素/英寸”为单位


.子程序 取图像属性, 整数型, , GdipGetImageFlags。返回“图像属性_”开头常量。


.子程序 取像素格式, 整数型, , GdipGetImagePixelFormat。返回“像素格式_”开头常量。


.子程序 取图像缩略图, 逻辑型, , GdipGetImageThumbnail
.参数 参数_缩略图宽度, 整数型, , 
.参数 参数_缩略图高度, 整数型, , 
.参数 参数_缩略图, GP图像, 参考, 返回一个缩略图的Gdip图像。



.子程序 取帧数, 整数型, , GdipImageGetFrameCount
.参数 参数_帧维面, 文本型, , “帧维面_”开头常量。



.子程序 取帧维面列表, 逻辑型, , GdipImageGetFrameDimensionsList
.参数 参数_帧惟面, 文本型, 数组, “帧维面_”开头常量。



.子程序 置活动帧, 逻辑型, , GdipImageSelectActiveFrame
.参数 参数_帧维面, 文本型, , “帧维面_”开头常量。
.参数 参数_索引, 整数型, , 



.子程序 取各帧延时, 逻辑型, , 
.参数 参数_延时, 整数型, 数组, 



.子程序 取属性项目, 逻辑型, , GdipGetPropertyItem
.参数 参数_属性标签, 整数型, , “属性标签_”开头常量。通常是通过“取属性标签列表()”方法来查看此图像有哪些属性。
.参数 参数_属性项目, 属性项目, 参考, 



.子程序 置属性项目, 逻辑型, , GdipSetPropertyItem
.参数 参数_属性项目, 属性项目, , 



.子程序 移除属性项目, 逻辑型, , GdipRemovePropertyItem
.参数 参数_属性标签, 整数型, , “属性标签_”开头常量。通常是通过“取属性标签列表()”方法来查看此图像有哪些属性。



.子程序 取属性标签列表, 整数型, , GdipGetPropertyIdList。返回属性标签数。
.参数 参数_属性标签数组, 整数型, 数组, 



.子程序 旋转翻转, 逻辑型, , GdipImageRotateFlip
.参数 参数_旋转翻转类型, 整数型, , “旋转翻转_”开头常量。



.子程序 取颜色调色板, 逻辑型, , GdipGetImagePalette
.参数 参数_颜色调色板, 颜色调色板, 参考, 



.子程序 置颜色调色板, 逻辑型, , GdipSetImagePalette
.参数 参数_颜色调色板, 颜色调色板, , 



.类模块 GP画笔, , , Pen

.子程序 取指针, 整数型, , 


.子程序 置指针, 空白型, , 
.参数 参数_指针, 整数型, , 



.子程序 销毁, 逻辑型, , GdipDeletePen。


.子程序 创建自颜色, 逻辑型, , GdipCreatePen1
.参数 参数_ARGB颜色, 整数型, , 需要将RGB颜色转换为ARGB颜色。
.参数 参数_宽度, 小数型, , 
.参数 参数_单位, 整数型, 可空, “单位_”开头常量。默认为：“单位_世界坐标”



.子程序 创建自画刷, 逻辑型, , GdipCreatePen2
.参数 参数_画刷, 未知类型0x49019565, 参考, 
.参数 参数_宽度, 小数型, , 
.参数 参数_单位, 整数型, 可空, “单位_”开头常量。默认为：“单位_世界坐标”



.子程序 复制, 逻辑型, , GdipClonePen
.参数 参数_画笔, GP画笔, 参考, 



.子程序 取宽度, 小数型, , GdipGetPenWidth


.子程序 置宽度, 逻辑型, , GdipSetPenWidth
.参数 参数_宽度, 小数型, , 



.子程序 取单位, 整数型, , GdipGetPenUnit。返回“单位_”开头常量。


.子程序 置单位, 逻辑型, , GdipSetPenUnit
.参数 参数_单位, 小数型, , “单位_”开头常量。



.子程序 置线帽197819, 逻辑型, , GdipSetPenLineCap197819
.参数 参数_起点帽, 整数型, , “线帽样式_”开头常量。
.参数 参数_终点帽, 整数型, , “线帽样式_”开头常量。
.参数 参数_虚线帽, 整数型, , “虚线帽样式_”开头常量。



.子程序 置线帽, 逻辑型, , GdipSetPenLineCap
.参数 参数_起点帽, 整数型, , “线帽样式_”开头常量。
.参数 参数_终点帽, 整数型, , “线帽样式_”开头常量。
.参数 参数_虚线帽, 整数型, , “虚线帽样式_”开头常量。



.子程序 置起点线帽, 逻辑型, , GdipSetPenStartCap
.参数 参数_线帽样式, 整数型, , “线帽样式_”开头常量。



.子程序 置终点线帽, 逻辑型, , GdipSetPenEndCap
.参数 参数_线帽样式, 整数型, , “线帽样式_”开头常量。



.子程序 置虚线帽, 逻辑型, , GdipSetPenDashCap
.参数 参数_虚线帽样式, 整数型, , “虚线帽样式_”开头常量



.子程序 取起点线帽, 整数型, , GdipGetPenStartCap


.子程序 取终点线帽, 整数型, , GdipGetPenEndCap


.子程序 取虚线帽197819, 整数型, , GdipGetPenDashCap197819


.子程序 取虚线帽, 整数型, , GdipGetPenDashCap


.子程序 置连线方式, 逻辑型, , GdipSetPenLineJoin
.参数 参数_连线方式, 整数型, , “连线方式_”开头常量。



.子程序 取连线方式, 整数型, , GdipGetPenLineJoin。返回“连线方式_”开头常量。


.子程序 置自定起点线帽, 逻辑型, , GdipSetPenCustomStartCap
.参数 参数_自定义线帽, GP自定义线帽, , 



.子程序 取自定起点线帽, 逻辑型, , GdipSetPenCustomStartCap
.参数 参数_自定义线帽, GP自定义线帽, 参考, 



.子程序 置自定终点线帽, 逻辑型, , GdipSetPenCustomEndCap
.参数 参数_自定义线帽, GP自定义线帽, , 



.子程序 取自定终点线帽, 逻辑型, , GdipGetPenCustomEndCap
.参数 参数_自定义线帽, GP自定义线帽, 参考, 



.子程序 置斜接限制, 逻辑型, , GdipSetPenMiterLimit
.参数 参数_斜接限制, 小数型, , 



.子程序 取斜接限制, 小数型, , GdipGetPenMiterLimit


.子程序 置对齐方式, 逻辑型, , GdipSetPenMode
.参数 参数_对齐方式, 整数型, , “画笔对齐方式_”开头常量。



.子程序 取对齐方式, 整数型, , GdipGetPenMode。返回“画笔对齐方式_”开头常量。


.子程序 变形置矩阵, 逻辑型, , GdipSetPenTransform
.参数 参数_矩阵, GP矩阵, , 



.子程序 变形取矩阵, 逻辑型, , GdipGetpenTransform
.参数 参数_矩阵, GP矩阵, 参考, 



.子程序 变形重置, 逻辑型, , GdipResetPenTransform


.子程序 变形相乘, 逻辑型, , GdipMultiplyPenTransform
.参数 参数_矩阵, GP矩阵, , 
.参数 参数_矩阵顺序, 整数型, 可空, “矩阵顺序_”开头常量。默认为“#矩阵顺序_预先计算”



.子程序 变形旋转, 逻辑型, , GdipRotatePenTransform
.参数 参数_角度, 小数型, , 
.参数 参数_矩阵顺序, 整数型, 可空, “矩阵顺序_”开头常量。默认为“#矩阵顺序_预先计算



.子程序 变形缩放, 逻辑型, , GdipScalePenTransform
.参数 参数_水平缩放倍数, 小数型, , 
.参数 参数_垂直缩放倍数, 小数型, , 
.参数 参数_矩阵顺序, 整数型, 可空, “矩阵顺序_”开头常量。默认为“ #矩阵顺序_预先计算”



.子程序 变形平移, 逻辑型, , GdipTranslatePenTransform。
.参数 参数_水平偏移量, 小数型, , 
.参数 参数_垂直偏移量, 小数型, , 
.参数 参数_矩阵顺序, 整数型, 可空, “矩阵顺序_”开头常量。默认为“ #矩阵顺序_预先计算”



.子程序 取颜色, 整数型, , GdipGetPenColor。返回ARGB颜色值。


.子程序 置颜色, 逻辑型, , GdipSetPenColor。
.参数 参数_ARGB颜色, 整数型, , 



.子程序 置画刷, 逻辑型, , GdipSetPenBrushFill
.参数 参数_画刷, 未知类型0x49019565, , 



.子程序 取画刷, 逻辑型, , GdipGetPenBrushFill
.参数 参数_画刷, 未知类型0x49019565, 参考, 



.子程序 取填充类型, 整数型, , GdipGetPenFillType。返回“画笔类型_”开头常量。


.子程序 置虚线类型, 逻辑型, , GdipSetPenDashStyle
.参数 参数_虚线类型, 整数型, , “虚线类型_”开头常量。



.子程序 取虚线类型, 整数型, , GdipGetPenDashStyle。返回“虚线类型_”开头常量。


.子程序 取虚线偏移, 小数型, , GdipGetPenDashOffset。


.子程序 置虚线偏移, 逻辑型, , GdipSetPenDashOffset。
.参数 参数_偏移, 小数型, , 



.子程序 取虚线格式, 整数型, , GdipGetPenDashArray。返回虚线格式数量。
.参数 参数_虚线格式, 小数型, 参考 数组, 



.子程序 置虚线格式, 逻辑型, , GdipSetPenDashArray。
.参数 参数_虚线格式, 小数型, 数组, 第一个成员表示虚线长度，第二个成员表示空白长度，以此类推。



.子程序 置分割数组, 逻辑型, , GdipSetPenCompoundArray。将画笔画出的线分割成若干条。
.参数 参数_分割数组, 小数型, 数组, 成员值必须是0到1之间的小数，且必须是升序。如：{0,0.2,0.7,1}，表示分割成两条线，第1条线宽度为20%，中间的空白宽度为50%，第2条线宽度为30%



.子程序 取分割数组, 整数型, , GdipGetPenCompoundArray。返回分割数。
.参数 参数_分割数组, 小数型, 参考 数组, 



.类模块 GP字体, , , Font

.子程序 取指针, 整数型, , 


.子程序 置指针, 空白型, , 
.参数 参数_指针, 整数型, , 



.子程序 销毁, 逻辑型, , GdipDeleteFont


.子程序 创建, 逻辑型, , GdipCreateFont
.参数 参数_字体族, GP字体族, , 
.参数 参数_字体大小, 小数型, , 字体大小
.参数 参数_风格, 整数型, 可空, “字体风格_”开头常量。
.参数 参数_单位, 整数型, 可空, “单位_”开头常量。



.子程序 创建自默认字体, 逻辑型, , 


.子程序 创建自名称, 逻辑型, , GdipCreateFont
.参数 参数_名称, 文本型, , 
.参数 参数_尺寸, 小数型, , 字体大小
.参数 参数_风格, 整数型, 可空, “字体风格_”开头常量。
.参数 参数_单位, 整数型, 可空, “单位_”开头常量。



.子程序 创建自DC, 逻辑型, , GdipCreateFontFromDC
.参数 参数_hdc, 整数型, , 设备场景句柄。



.子程序 创建自hFont, 逻辑型, , 
.参数 参数_hdc, 整数型, , 设备场景句柄
.参数 参数_hFont, 整数型, , 字体句柄



.子程序 创建自逻辑字体, 逻辑型, , GdipCreateFontFromLogfontA
.参数 参数_hdc, 整数型, , 设备场景句柄。
.参数 参数_pLogfont, 整数型, , logfont的指针。



.子程序 复制, 逻辑型, , GdipCloneFont
.参数 参数_字体, GP字体, 参考, 



.子程序 取字体族, 逻辑型, , GdipGetFamily
.参数 参数_字体族, GP字体族, 参考, 



.子程序 取风格, 整数型, , GdipGetFontStyle。返回“字体风格_”开头常量。


.子程序 取尺寸, 小数型, , GdipGetFontSize


.子程序 取单位, 整数型, , GdipGetFontUnit。“单位_”开头常量。


.子程序 取高度, 小数型, , GdipGetFontHeight
.参数 参数_图形, GP图形, 可空, 参数为空时，字体单位必须是像素。



.子程序 取高度自分辨率, 小数型, , GdipGetFontHeightGivenDPI
.参数 参数_分辨率, 小数型, , 



.子程序 取逻辑字体, 逻辑型, , GdipGetLogFontA
.参数 参数_图形, GP图形, , 
.参数 参数_逻辑字体, 字节集, 参考, LogFontA结构的字节集形式，长度60。



.类模块 GP字体族, , , FontFamily

.子程序 取指针, 整数型, , 


.子程序 置指针, 空白型, , 
.参数 参数_指针, 整数型, , 



.子程序 销毁, 逻辑型, , GdipDeleteFontFamily。


.子程序 创建自名称, 逻辑型, , GdipCreateFontFamilyFromName
.参数 参数_名称, 文本型, , 
.参数 参数_字体集, 未知类型0x49019566, 可空, 



.子程序 创建自通用无衬线, 逻辑型, , GdipGetGenericFontFamilySansSerif


.子程序 创建自通用衬线, 逻辑型, , GdipGetGenericFontFamilySerif


.子程序 创建自通用等宽, 逻辑型, , GdipGetGenericFontFamilyMonospace


.子程序 复制, 逻辑型, , GdipCloneFontFamily
.参数 参数_字体族, GP字体族, 参考, 



.子程序 取名称, 文本型, , GdipGetFamilyName


.子程序 是否有效风格, 逻辑型, , GdipIsStyleAvailable
.参数 参数_字体风格, 整数型, , “字体风格_”开头常量。



.子程序 取EM高度, 短整数型, , GdipGetEmHeight。以字体设计单位为单位
.参数 参数_字体风格, 整数型, , “字体风格_”开头常量。



.子程序 取上区高度, 短整数型, , GdipGetCellAscent。以字体设计单位为单位
.参数 参数_字体风格, 整数型, , “字体风格_”开头常量。



.子程序 取下区高度, 短整数型, , GdipGetCellDescent。以字体设计单位为单位
.参数 参数_字体风格, 整数型, , “字体风格_”开头常量。



.子程序 取行间距, 短整数型, , GdipGetCellDescent。以字体设计单位为单位
.参数 参数_字体风格, 整数型, , “字体风格_”开头常量。



.类模块 GP区域, , , Region

.子程序 取指针, 整数型, , 


.子程序 置指针, 空白型, , 
.参数 参数_指针, 整数型, , 



.子程序 销毁, 逻辑型, , GdipDeleteRegion。


.子程序 创建, 逻辑型, , GdipCreateRegion


.子程序 创建自矩形, 逻辑型, , GdipCreateRegionRect
.参数 参数_矩形, 矩形F, , 



.子程序 创建自矩形I, 逻辑型, , GdipCreateRegionRectI
.参数 参数_矩形, 矩形L, , 



.子程序 创建自路径, 逻辑型, , GdipCreateRegionPath
.参数 参数_路径, GP路径, , 



.子程序 创建自句柄, 逻辑型, , GdipCreateRegionHrgn
.参数 参数_hRgn, 整数型, , 区域句柄



.子程序 创建自数据, 逻辑型, , GdipCreateRegionRgnData
.参数 参数_数据, 字节集, , 
.参数 参数_数据大小, 整数型, , 



.子程序 复制, 逻辑型, , GdipCloneRegion
.参数 参数_区域, GP区域, 参考, 



.子程序 置为无限, 逻辑型, , GdipSetInfinite


.子程序 置为空, 逻辑型, , GdipSetEmpty


.子程序 合并矩形, 逻辑型, , GdipCombineRegionRect
.参数 参数_矩形, 矩形F, , 
.参数 参数_合并模式, 整数型, 可空, “合并模式_”开头常量



.子程序 合并矩形I, 逻辑型, , GdipCombineRegionRectI
.参数 参数_矩形, 矩形L, , 
.参数 参数_合并模式, 整数型, 可空, “合并模式_”开头常量



.子程序 合并区域, 逻辑型, , GdipCombineRegionRegion
.参数 参数_区域, GP区域, , 
.参数 参数_合并模式, 整数型, 可空, “合并模式_”开头常量



.子程序 合并路径, 逻辑型, , GdipCombineRegionPath
.参数 参数_路径, GP路径, , 
.参数 参数_合并模式, 整数型, 可空, “合并模式_”开头常量



.子程序 平移区域, 逻辑型, , GdipTranslateRegion
.参数 参数_水平偏移量, 小数型, , 水平偏移的量。
.参数 参数_垂直偏移量, 小数型, , 垂直偏移的量。



.子程序 平移区域I, 逻辑型, , GdipTranslateRegionI
.参数 参数_水平偏移量, 整数型, , 水平偏移的量。
.参数 参数_垂直偏移量, 整数型, , 垂直偏移的量。



.子程序 变换区域, 逻辑型, , GdipTransformRegion
.参数 参数_矩阵, GP矩阵, , 



.子程序 取矩形边界, 矩形F, , GdipGetRegionBounds
.参数 参数_图形, GP图形, , 



.子程序 取矩形边界I, 矩形L, , GdipGetRegionBoundsI
.参数 参数_图形, GP图形, , 



.子程序 取数据大小, 整数型, , GdipGetRegionDataSize


.子程序 取数据, 字节集, , GdipGetRegionData
.参数 参数_数据大小, 整数型, , 
.参数 参数_填充大小, 整数型, 参考 可空, 



.子程序 取区域句柄, 整数型, , GdipGetRegionHRgn。返回区域句柄。
.参数 参数_图形, GP图形, , 



.子程序 是否为空, 逻辑型, , GdipIsEmptyRegion
.参数 参数_图形, GP图形, , 



.子程序 是否为无限, 逻辑型, , GdipIsInfiniteRegion
.参数 参数_图形, GP图形, , 



.子程序 是否相等, 逻辑型, , GdipIsEqualRegion
.参数 参数_区域, GP区域, , 
.参数 参数_图形, GP图形, , 



.子程序 是否可见坐标, 逻辑型, , GdipIsVisibleRegionPoint
.参数 参数_坐标, 坐标F, , 
.参数 参数_图形, GP图形, 可空, 



.子程序 是否可见坐标I, 逻辑型, , GdipIsVisibleRegionPointI
.参数 参数_坐标, 坐标L, , 
.参数 参数_图形, GP图形, 可空, 



.子程序 是否可见矩形, 逻辑型, , GdipIsVisibleRegionRect
.参数 参数_矩形, 矩形F, , 
.参数 参数_图形, GP图形, 可空, 



.子程序 是否可见矩形I, 逻辑型, , GdipIsVisibleRegionRectI
.参数 参数_矩形, 矩形L, , 
.参数 参数_图形, GP图形, 可空, 



.子程序 取扫描数, 整数型, , GdipGetRegionScansCount
.参数 参数_矩阵, GP矩阵, , 



.子程序 取扫描矩形, 整数型, , GdipGetRegionScans
.参数 参数_矩阵, GP矩阵, , 
.参数 参数_矩形, 矩形F, 数组, 



.子程序 取扫描矩形I, 整数型, , GdipGetRegionScansI
.参数 参数_矩阵, GP矩阵, , 
.参数 参数_矩形, 矩形L, 数组, 



.类模块 GP路径, , , Path

.子程序 取指针, 整数型, , 


.子程序 置指针, 空白型, , 
.参数 参数_指针, 整数型, , 



.子程序 销毁, 逻辑型, , GdipDeletePath。


.子程序 创建, 逻辑型, , GdipCreatePath
.参数 参数_填充模式, 整数型, 可空, “填充模式_”开头常量。默认为“#填充模式_交替”



.子程序 创建自坐标组, 逻辑型, , GdipCreatePath2
.参数 参数_坐标, 坐标F, 数组, 
.参数 参数_类型, 字节型, 数组, “路径点类型_”开头常量。
.参数 参数_填充模式, 整数型, 可空, “填充模式_”开头常量。默认为“#填充模式_交替”



.子程序 创建自坐标组I, 逻辑型, , GdipCreatePath2
.参数 参数_坐标, 坐标L, 数组, 
.参数 参数_类型, 字节型, 数组, “路径点类型_”开头常量。
.参数 参数_填充模式, 整数型, 可空, “填充模式_”开头常量。默认为“#填充模式_交替”



.子程序 复制, 逻辑型, , GdipClonePath
.参数 参数_路径, GP路径, 参考, 



.子程序 重置, 逻辑型, , GdipResetPath


.子程序 取填充模式, 整数型, , GdipGetPathFillMode。返回“填充模式_”开头常量


.子程序 置填充模式, 逻辑型, , GdipSetPathFillMode
.参数 参数_填充模式, 整数型, , “填充模式_”开头常量



.子程序 取路径数据, 逻辑型, , GdipGetPathData。
.参数 参数_路径数据, 路径数据, 参考, 



.子程序 取路径类型组, 逻辑型, , GdipGetPathTypes
.参数 参数_类型, 字节型, 参考 数组, 返回“路径点类型_”开头常量。
.参数 参数_总数, 整数型, 可空, 默认为“取坐标数()”的返回值。



.子程序 取路径坐标组, 逻辑型, , GdipGetPathPoints
.参数 参数_坐标, 坐标F, 参考 数组, 
.参数 参数_总数, 整数型, 可空, 默认为“取坐标数()”的返回值。



.子程序 开始图形, 逻辑型, , GdipStartPathFigure。不闭合当前图形即开始一个新图形。后面添加到该路径的所有点都被添加到此新图形中。


.子程序 关闭图形, 逻辑型, , GdipClosePathFigure。闭合当前图形并开始新的图形。如果当前图形包含一系列相互连接的直线和曲线，该方法通过连接一条从终结点到起始点的直线，闭合该环回。


.子程序 关闭所有图形, 逻辑型, , GdipClosePathFigures。闭合此路径中所有开放的图形并开始一个新图形。它通过连接一条从图形的终结点到起始点的直线，闭合每一开放的图形。 


.子程序 置标记, 逻辑型, , GdipSetPathMarker。


.子程序 清除标记, 逻辑型, , GdipClearPathMarkers


.子程序 反向, 逻辑型, , GdipReversePath


.子程序 取最后坐标, 坐标F, , GdipGetPathLastPoint


.子程序 添加直线, 逻辑型, , GdipAddPathLine
.参数 参数_起点X, 小数型, , 
.参数 参数_起点Y, 小数型, , 
.参数 参数_终点X, 小数型, , 
.参数 参数_终点Y, 小数型, , 



.子程序 添加直线I, 逻辑型, , GdipAddPathLineI
.参数 参数_起点X, 整数型, , 
.参数 参数_起点Y, 整数型, , 
.参数 参数_终点X, 整数型, , 
.参数 参数_终点Y, 整数型, , 



.子程序 添加直线组, 逻辑型, , GdipAddPathLine2
.参数 参数_坐标, 坐标F, 数组, 



.子程序 添加直线组I, 逻辑型, , GdipAddPathLine2I
.参数 参数_坐标, 坐标L, 数组, 



.子程序 添加圆弧, 逻辑型, , GdipAddPathArc
.参数 参数_左边, 小数型, , 
.参数 参数_顶边, 小数型, , 
.参数 参数_宽度, 小数型, , 
.参数 参数_高度, 小数型, , 
.参数 参数_开始角度, 小数型, , 
.参数 参数_扫描角度, 小数型, , 



.子程序 添加圆弧I, 逻辑型, , GdipAddPathArcI
.参数 参数_左边, 整数型, , 
.参数 参数_顶边, 整数型, , 
.参数 参数_宽度, 整数型, , 
.参数 参数_高度, 整数型, , 
.参数 参数_开始角度, 小数型, , 
.参数 参数_扫描角度, 小数型, , 



.子程序 添加贝塞尔曲线, 逻辑型, , GdipAddPathBezier
.参数 参数_x1, 小数型, , 
.参数 参数_y1, 小数型, , 
.参数 参数_x2, 小数型, , 
.参数 参数_y2, 小数型, , 
.参数 参数_x3, 小数型, , 
.参数 参数_y3, 小数型, , 
.参数 参数_x4, 小数型, , 
.参数 参数_y4, 小数型, , 



.子程序 添加贝塞尔曲线I, 逻辑型, , GdipAddPathBezierI
.参数 参数_x1, 整数型, , 
.参数 参数_y1, 整数型, , 
.参数 参数_x2, 整数型, , 
.参数 参数_y2, 整数型, , 
.参数 参数_x3, 整数型, , 
.参数 参数_y3, 整数型, , 
.参数 参数_x4, 整数型, , 
.参数 参数_y4, 整数型, , 



.子程序 添加贝塞尔曲线组, 逻辑型, , GdipAddPathBeziers。“参数_坐标组”的成员数必须4个以上。
.参数 参数_坐标组, 坐标F, 数组, 



.子程序 添加贝塞尔曲线组I, 逻辑型, , GdipAddPathBeziersI。“参数_坐标组”的成员数必须4个以上。
.参数 参数_坐标组, 坐标L, 数组, 



.子程序 添加曲线, 逻辑型, , GdipAddPathCurve。
.参数 参数_坐标组, 坐标F, 数组, 



.子程序 添加曲线2, 逻辑型, , GdipAddPathCurve2。
.参数 参数_坐标组, 坐标F, 数组, 
.参数 参数_张力, 小数型, , 



.子程序 添加曲线3, 逻辑型, , GdipAddPathCurve3。
.参数 参数_坐标组, 坐标F, 数组, 
.参数 参数_偏移量, 整数型, , 从0开始
.参数 参数_段数, 整数型, , 从0开始
.参数 参数_张力, 小数型, , 



.子程序 添加曲线I, 逻辑型, , GdipAddPathCurveI
.参数 参数_坐标组, 坐标L, 数组, 



.子程序 添加曲线2I, 逻辑型, , GdipAddPathCurve2I
.参数 参数_坐标组, 坐标L, 数组, 
.参数 参数_张力, 小数型, , 



.子程序 添加曲线3I, 逻辑型, , GdipAddPathCurve3I
.参数 参数_坐标组, 坐标L, 数组, 
.参数 参数_偏移量, 整数型, , 从0开始
.参数 参数_段数, 整数型, , 从0开始
.参数 参数_张力, 小数型, , 



.子程序 添加闭合曲线, 逻辑型, , GdipAddPathClosedCurve。最后一点将和起始点自动连接。
.参数 参数_坐标组, 坐标F, 数组, 



.子程序 添加闭合曲线2, 逻辑型, , GdipAddPathClosedCurve2。最后一点将和起始点自动连接。
.参数 参数_坐标组, 坐标F, 数组, 
.参数 参数_张力, 小数型, , 



.子程序 添加闭合曲线I, 逻辑型, , GdipAddPathClosedCurveI。最后一点将和起始点自动连接。
.参数 参数_坐标组, 坐标L, 数组, 



.子程序 添加闭合曲线2I, 逻辑型, , GdipAddPathClosedCurve2I。最后一点将和起始点自动连接。
.参数 参数_坐标组, 坐标L, 数组, 
.参数 参数_张力, 小数型, , 



.子程序 添加矩形, 逻辑型, , GdipAddPathRectangle
.参数 参数_左边, 小数型, , 
.参数 参数_顶边, 小数型, , 
.参数 参数_宽度, 小数型, , 
.参数 参数_高度, 小数型, , 



.子程序 添加矩形组, 逻辑型, , GdipAddPathRectangles
.参数 参数_矩形组, 矩形F, 数组, 



.子程序 添加矩形I, 逻辑型, , GdipAddPathRectangleI
.参数 参数_左边, 整数型, , 
.参数 参数_顶边, 整数型, , 
.参数 参数_宽度, 整数型, , 
.参数 参数_高度, 整数型, , 



.子程序 添加矩形组I, 逻辑型, , GdipAddPathRectanglesI
.参数 参数_矩形组, 矩形L, 数组, 



.子程序 添加椭圆, 逻辑型, , GdipAddPathEllipse。
.参数 参数_左边, 小数型, , 
.参数 参数_顶边, 小数型, , 
.参数 参数_宽度, 小数型, , 
.参数 参数_高度, 小数型, , 



.子程序 添加椭圆I, 逻辑型, , GdipAddPathEllipseI。
.参数 参数_左边, 整数型, , 
.参数 参数_顶边, 整数型, , 
.参数 参数_宽度, 整数型, , 
.参数 参数_高度, 整数型, , 



.子程序 添加饼I, 逻辑型, , GdipAddPathPieI。
.参数 参数_左边, 整数型, , 
.参数 参数_顶边, 整数型, , 
.参数 参数_宽度, 整数型, , 
.参数 参数_高度, 整数型, , 
.参数 参数_开始角度, 小数型, , 
.参数 参数_扫描角度, 小数型, , 



.子程序 添加多边形, 逻辑型, , GdipAddPathPolygon
.参数 参数_坐标组, 坐标F, 数组, 



.子程序 添加多边形I, 逻辑型, , GdipAddPathPolygonI
.参数 参数_坐标组, 坐标L, 数组, 



.子程序 添加路径, 逻辑型, , GdipAddPathPath
.参数 参数_路径, GP路径, , 
.参数 参数_连接, 逻辑型, 可空, 它指定添加的路径中的第一个图形是否是该路径中最后一个图形的一部分。真 的值指定（如果可能）添加的路径中的第一个图形是该路径中最后一个图形的一部分。假 的值指定添加的路径中的第一个图形与该路径中最后一个图形不同。默认为：假。



.子程序 添加文本, 逻辑型, , GdipAddPathString
.参数 参数_文本, 文本型, , 
.参数 参数_字体族, GP字体族, , 
.参数 参数_EM大小, 整数型, , 世界坐标单位
.参数 参数_矩形, 矩形F, 可空, 
.参数 参数_字体风格, 整数型, 可空, “字体风格_”开头常量。
.参数 参数_文本格式, GP文本格式, 可空, 



.子程序 添加文本I, 逻辑型, , GdipAddPathStringI
.参数 参数_文本, 文本型, , 
.参数 参数_字体族, GP字体族, , 
.参数 参数_EM大小, 整数型, , 世界坐标单位
.参数 参数_矩形, 矩形L, 可空, 
.参数 参数_字体风格, 整数型, 可空, “字体风格_”开头常量。
.参数 参数_文本格式, GP文本格式, 可空, 



.子程序 变形置矩阵, 逻辑型, , GdipTransformPath
.参数 参数_矩阵, GP矩阵, , 



.子程序 变平, 逻辑型, , GdipFlattenPath
.参数 参数_矩阵, GP矩阵, 可空, 
.参数 参数_展平值, 小数型, 可空, 一个介于 0 到 1 之间的值，它指定如何展平最终路径。默认为：0.25



.子程序 扩大, 逻辑型, , GdipWidenPath
.参数 参数_画笔, GP画笔, , 
.参数 参数_矩阵, GP矩阵, 可空, 
.参数 参数_展平值, 小数型, 可空, 一个介于 0 到 1 之间的值，它指定如何展平最终路径。默认为：0.25



.子程序 轮廓线, 逻辑型, , GdipWindingModeOutline
.参数 参数_矩阵, GP矩阵, 可空, 
.参数 参数_展平值, 小数型, 可空, 一个介于 0 到 1 之间的值，它指定如何展平最终路径。默认为：0.25



.子程序 扭曲, 逻辑型, , GdipWarpPath
.参数 参数_坐标, 坐标F, 数组, 一个 坐标F 结构的数组，它们定义由 “参数_源矩形” 定义的矩形将变形到的平行四边形。该数组可以包含三个或四个元素。如果该数组包含三个元素，则平行四边形的右下角位置的点可从前三个点导出。
.参数 参数_源矩形, 矩形F, , 一个 矩形F 结构，它表示将变形为 destPoints 定义的平行四边形的矩形
.参数 参数_矩阵, GP矩阵, 可空, 
.参数 参数_扭曲模式, 整数型, 可空, “扭曲模式_”开头常量。默认为：“扭曲模式_透视”
.参数 参数_展平值, 小数型, 可空, 一个介于 0 到 1 之间的值，它指定如何展平最终路径。默认为：0.25



.子程序 取坐标数, 整数型, , GdipGetPointCount


.子程序 取边界矩形, 矩形F, , GdipGetPathWorldBounds
.参数 参数_矩阵, GP矩阵, 可空, 
.参数 参数_画笔, GP画笔, 可空, 



.子程序 是否可见坐标, 逻辑型, , GdipIsVisiblePathPoint
.参数 参数_x, 小数型, , 
.参数 参数_y, 小数型, , 
.参数 参数_图形, GP图形, 可空, 



.子程序 是否可见坐标I, 逻辑型, , GdipIsVisiblePathPointI
.参数 参数_x, 整数型, , 
.参数 参数_y, 整数型, , 
.参数 参数_图形, GP图形, 可空, 



.子程序 是否可见坐标轮廓, 逻辑型, , GdipIsOutlineVisiblePathPoint
.参数 参数_x, 小数型, , 
.参数 参数_y, 小数型, , 
.参数 参数_画笔, GP画笔, , 
.参数 参数_图形, GP图形, 可空, 



.子程序 是否可见坐标轮廓I, 逻辑型, , GdipIsOutlineVisiblePathPointI
.参数 参数_x, 整数型, , 
.参数 参数_y, 整数型, , 
.参数 参数_画笔, GP画笔, , 
.参数 参数_图形, GP图形, 可空, 



.类模块 GP图像属性, , , ImageAttribute

.子程序 取指针, 整数型, , 


.子程序 置指针, 空白型, , 
.参数 参数_指针, 整数型, , 



.子程序 销毁, 逻辑型, , GdipDisposeImageAttributes


.子程序 创建, 逻辑型, , GdipCreateImageAttributes


.子程序 复制, 逻辑型, , GdipCloneImageAttributes。复制本图像属性到 参数_图像属性。
.参数 参数_图像属性, GP图像属性, 参考, 



.子程序 置类型, 逻辑型, , GdipSetImageAttributesToIdentity。
.参数 参数_颜色调整类型, 整数型, , “颜色调整类型_”开头常量。



.子程序 重置, 逻辑型, , GdipResetImageAttributes
.参数 参数_颜色调整类型, 整数型, 可空, “颜色调整类型_”开头常量。



.子程序 置临界值, 逻辑型, , GdipSetImageAttributesThreshold。
.参数 参数_临界值, 小数型, , 临界值是一个从0到1，指定每个颜色成分分界点。例如，假设临界值为0.7，假设你是提供一种颜色的红，绿，蓝230，50，220。红色部分，230>0.7 × 255，因此红色成分将改为255（全强度）。绿色部分，50<0.7 × 255，所以绿色成分将被更改为0。蓝色的部分，220>0.7 × 255，所以蓝色部分将改为255
.参数 参数_颜色调整类型, 整数型, 可空, “颜色调整类型_”开头常量。默认为：“颜色调整类型_默认”



.子程序 清除临界值, 逻辑型, , GdipSetImageAttributesThreshold
.参数 参数_颜色调整类型, 整数型, 可空, “颜色调整类型_”开头常量。。默认为：“颜色调整类型_默认”



.子程序 禁用, 逻辑型, , GdipSetImageAttributesNoOp。可以用 恢复() 方法恢复被禁用的颜色调整类型。
.参数 参数_颜色调整类型, 整数型, 可空, “颜色调整类型_”开头常量。默认为：“颜色调整类型_默认”



.子程序 恢复, 逻辑型, , GdipSetImageAttributesNoOp。恢复禁用的颜色调整类型。
.参数 参数_颜色调整类型, 整数型, 可空, “颜色调整类型_”开头常量。默认为：“颜色调整类型_默认”



.子程序 置伽玛值, 逻辑型, , GdipSetImageAttributesGamma。可以用它调整亮度
.参数 参数_伽玛值, 小数型, , 一般是1.0到2.2之间，有时候0.1到5.0也有效。
.参数 参数_颜色调整类型, 整数型, 可空, “颜色调整类型_”开头常量。默认为：“颜色调整类型_默认”



.子程序 清除伽玛值, 逻辑型, , GdipSetImageAttributesGamma
.参数 参数_颜色调整类型, 整数型, 可空, “颜色调整类型_”开头常量。默认为：“颜色调整类型_默认”



.子程序 置透明色范围, 逻辑型, , GdipSetImageAttributesColorKeys。在 参数_低颜色 和 参数_高颜色 之间的颜色值将是透明的。
.参数 参数_低颜色, 整数型, , ARGB颜色
.参数 参数_高颜色, 整数型, , ARGB颜色
.参数 参数_颜色调整类型, 整数型, 可空, “颜色调整类型_”开头常量。默认为：“颜色调整类型_默认”



.子程序 清除透明色范围, 逻辑型, , GdipSetImageAttributesColorKeys
.参数 参数_颜色调整类型, 整数型, 可空, “颜色调整类型_”开头常量。默认为：“颜色调整类型_默认”



.子程序 置输出通道, 逻辑型, , GdipSetImageAttributesOutputChannel。设置CMYK输出通道。
.参数 参数_输出通道, 整数型, , “输出通道_”开头常量。
.参数 参数_颜色调整类型, 整数型, 可空, “颜色调整类型_”开头常量。默认为：“颜色调整类型_默认”



.子程序 清除输出通道, 逻辑型, , GdipSetImageAttributesOutputChannel
.参数 参数_颜色调整类型, 整数型, 可空, “颜色调整类型_”开头常量。默认为：“颜色调整类型_默认”



.子程序 置输出通道配置文件, 逻辑型, , GdipSetImageAttributesOutputChannel
.参数 参数_颜色配置文件, 文本型, , *.ICM
.参数 参数_颜色调整类型, 整数型, 可空, “颜色调整类型_”开头常量。默认为：“颜色调整类型_默认”



.子程序 清除出通道配置文件, 逻辑型, , GdipSetImageAttributesOutputChannel
.参数 参数_颜色调整类型, 整数型, 可空, “颜色调整类型_”开头常。默认为：“颜色调整类型_默认”。



.子程序 置色彩映射表, 逻辑型, , GdipSetImageAttributesRemapTable。将原来的颜色映射成为新的颜色。
.参数 参数_色彩映射表, 色彩映射表, 数组, 
.参数 参数_颜色调整类型, 整数型, 可空, “颜色调整类型_”开头常量。默认为：“颜色调整类型_默认”



.子程序 清除色彩映射表, 逻辑型, , GdipSetImageAttributesRemapTable。
.参数 参数_颜色调整类型, 整数型, 可空, “颜色调整类型_”开头常量。默认为：“颜色调整类型_默认”



.子程序 置环绕模式, 逻辑型, , GdipSetImageAttributesWrapMode。设置空白区域的覆盖模式。
.参数 参数_环绕模式, 整数型, , “环绕模式_”开头常量。
.参数 参数_背景颜色, 整数型, 可空, ARGB颜色，当环绕模式为“环绕模式_固定”时，指定用什么颜色来填充空白区域。



.子程序 取调整调色板, 逻辑型, , GdipGetImageAttributesAdjustedPalette。获取变换后的调色板
.参数 参数_颜色调色板, 颜色调色板, 参考, 输入\输出，
.参数 参数_颜色调整类型, 整数型, 可空, “颜色调整类型_”开头常量。默认为：“颜色调整类型_默认”



.子程序 置颜色矩阵, 逻辑型, , GdipSetImageAttributesColorMatrix
.参数 参数_颜色矩阵, 小数型, 数组, 颜色矩阵是一个5x5的二维数组。
.参数 参数_灰度矩阵, 小数型, 可空 数组, 同上。
.参数 参数_颜色矩阵标志, 整数型, 可空, “颜色矩阵标志_”开头常量。默认为：“颜色矩阵标志_默认”
.参数 参数_颜色调整类型, 整数型, 可空, “颜色调整类型_”开头常量。默认为：“颜色调整类型_默认”



.子程序 清除颜色矩阵, 逻辑型, , 
.参数 参数_颜色调整类型, 整数型, 可空, “颜色调整类型_”开头常量。默认为：“颜色调整类型_默认”



.类模块 GP矩阵, , , Matrix。对象是一个3X3的矩阵，元素只有6个，因为都有相同的第三列0,0,1。

.子程序 取指针, 整数型, , 


.子程序 置指针, 空白型, , 
.参数 参数_指针, 整数型, , 



.子程序 销毁, 逻辑型, , GdipDeleteMatrix。


.子程序 创建, 逻辑型, , GdipCreateMatrix。创建一个默认矩阵。


.子程序 创建2, 逻辑型, , GdipCreateMatrix2
.参数 参数_m11, 小数型, , 第一行，第一列
.参数 参数_m12, 小数型, , 第一行，第二列
.参数 参数_m21, 小数型, , 第二行，第一列
.参数 参数_m22, 小数型, , 第二行，第二列
.参数 参数_dx, 小数型, , 第三行，第一列
.参数 参数_dy, 小数型, , 第三行，第二列



.子程序 创建3, 逻辑型, , GdipCreateMatrix3
.参数 参数_矩形, 矩形F, , 
.参数 参数_坐标, 坐标F, , 



.子程序 创建3I, 逻辑型, , GdipCreateMatrix3I
.参数 参数_矩形, 矩形L, , 
.参数 参数_坐标, 坐标L, , 



.子程序 复制, 逻辑型, , GdipCloneImageAttributes。将本矩阵复制到 参数_矩阵。
.参数 参数_矩阵, GP矩阵, 参考, 



.子程序 置元素, 逻辑型, , GdipSetMatrixElements。设置矩阵元素。
.参数 参数_m11, 小数型, , 第一行，第一列
.参数 参数_m12, 小数型, , 第一行，第二列
.参数 参数_m21, 小数型, , 第二行，第一列
.参数 参数_m22, 小数型, , 第二行，第二列
.参数 参数_dx, 小数型, , 第三行，第一列
.参数 参数_dy, 小数型, , 第三行，第二列



.子程序 取元素, 逻辑型, , GdipGetMatrixElements
.参数 参数_元素组, 小数型, 数组, 返回值。



.子程序 相乘, 逻辑型, , GdipMultiplyMatrix。如果指定的顺序是“#矩阵顺序_预先计算”，则按预先计算的顺序将此 矩阵 对象乘以指定的矩阵。如果指定的顺序是“#矩阵顺序_追加”，则按追加的顺序将此 矩阵 对象乘以指定的矩阵。
.参数 参数_矩阵, GP矩阵, , 
.参数 参数_矩阵顺序, 整数型, 可空, “矩阵顺序_”开头常量。默认为“#矩阵顺序_预先计算”



.子程序 平移, 逻辑型, , GdipTranslateMatrix。
.参数 参数_水平偏移量, 小数型, , 
.参数 参数_垂直偏移量, 小数型, , 
.参数 参数_矩阵顺序, 整数型, 可空, “矩阵顺序_”开头常量。默认为“ #矩阵顺序_预先计算”



.子程序 取水平偏移, 小数型, , GetOffsetX


.子程序 取垂直偏移, 小数型, , GetOffsetY


.子程序 旋转, 逻辑型, , GdipRotateMatrix
.参数 参数_角度, 小数型, , 
.参数 参数_矩阵顺序, 整数型, 可空, “矩阵顺序_”开头常量。默认为“ #矩阵顺序_预先计算”



.子程序 逆转, 逻辑型, , GdipInvertMatrix。设置旋转方向为逆向。


.子程序 缩放, 逻辑型, , GdipScaleMatrix
.参数 参数_水平缩放倍数, 小数型, , 
.参数 参数_垂直缩放倍数, 小数型, , 
.参数 参数_矩阵顺序, 整数型, 可空, “矩阵顺序_”开头常量。默认为“ #矩阵顺序_预先计算”



.子程序 切变, 逻辑型, , GdipShearMatrix
.参数 参数_x, 小数型, , 
.参数 参数_y, 小数型, , 
.参数 参数_矩阵顺序, 整数型, 可空, “矩阵顺序_”开头常量。默认为“ #矩阵顺序_预先计算”



.子程序 重置, 逻辑型, , ResetMatrix


.子程序 变换坐标组, 逻辑型, , GdipTransformMatrixPoints。对坐标数组应用此　矩阵　变换
.参数 参数_坐标组, 坐标F, 数组, [in, out]输入时提供仿射点，输出时为仿射后结果。



.子程序 变换坐标组I, 逻辑型, , GdipTransformMatrixPointsI。对坐标数组应用此　矩阵　变换
.参数 参数_坐标组, 坐标L, 数组, [in, out]输入时提供仿射点，输出时为仿射后结果。



.子程序 变换坐标组向量, 逻辑型, , GdipVectorTransformMatrixPoints。对坐标数组应用此　矩阵　变换中的缩放和旋转变换
.参数 参数_坐标组, 坐标F, 数组, [in, out]输入时提供仿射点，输出时为仿射后结果。



.子程序 变换坐标组向量I, 逻辑型, , GdipVectorTransformMatrixPointsI。对坐标数组应用此　矩阵　变换中的缩放和旋转变换
.参数 参数_坐标组, 坐标L, 数组, [in, out]输入时提供仿射点，输出时为仿射后结果。



.子程序 是否逆转, 逻辑型, , GdipIsMatrixInvertible


.子程序 是否单位矩阵, 逻辑型, , GdipIsMatrixIdentity。斜对角线是1其他是0


.子程序 是否相等, 逻辑型, , GdipIsMatrixEqual
.参数 参数_矩阵, GP矩阵, , 



.类模块 GP纯色画刷, , , SolidBrush。基类：GP画刷

.子程序 取指针, 整数型, , 


.子程序 置指针, 空白型, , 
.参数 参数_指针, 整数型, , 



.子程序 销毁, 逻辑型, , GdipDeleteBrush。


.子程序 复制, 逻辑型, , GdipCloneBrush。将当前画刷复制到“参数_画刷”。
.参数 参数_画刷, 未知类型0x49019565, 参考, 



.子程序 取类型, 整数型, , GdipGetBrushType。返回“#画刷类型_”开头常量。


.子程序 创建, 逻辑型, , GdipCreateSolidFill
.参数 参数_ARGB颜色, 整数型, , 需要将RGB颜色转换为ARGB颜色。



.子程序 置颜色, 逻辑型, , GdipSetSolidFillColor
.参数 参数_ARGB颜色, 整数型, , 



.子程序 取颜色, 整数型, , GdipGetSolidFillColor


.类模块 GP阴影画刷, , , HatchBrush。基类：GP画刷

.子程序 取指针, 整数型, , 


.子程序 置指针, 空白型, , 
.参数 参数_指针, 整数型, , 



.子程序 销毁, 逻辑型, , GdipDeleteBrush。


.子程序 复制, 逻辑型, , GdipCloneBrush。将当前画刷复制到“参数_画刷”。
.参数 参数_画刷, 未知类型0x49019565, 参考, 



.子程序 取类型, 整数型, , GdipGetBrushType。返回“#画刷类型_”开头常量。


.子程序 创建, 逻辑型, , GdipCreateHatchBrush
.参数 参数_阴影风格, 整数型, , “阴影风格_”开头常量。
.参数 参数_前景ARGB颜色, 整数型, , 
.参数 参数_背景ARGB颜色, 整数型, , 



.子程序 取阴影风格, 整数型, , GdipGetHatchStyle。返回“阴影风格_”开头常量。


.子程序 取前景色, 整数型, , GdipGetHatchForegroundColor。返回前景ARGB颜色。


.子程序 取背景色, 整数型, , GdipGetHatchBackgroundColor。返回背景ARGB颜色。


.类模块 GP纹理画刷, , , TextureBrush。基类：GP画刷

.子程序 取指针, 整数型, , 


.子程序 置指针, 空白型, , 
.参数 参数_指针, 整数型, , 



.子程序 销毁, 逻辑型, , GdipDeleteBrush。


.子程序 复制, 逻辑型, , GdipCloneBrush。将当前画刷复制到“参数_画刷”。
.参数 参数_画刷, 未知类型0x49019565, 参考, 



.子程序 取类型, 整数型, , GdipGetBrushType。返回“#画刷类型_”开头常量。


.子程序 创建, 逻辑型, , GdipCreateTexture
.参数 参数_图像, GP图像, , 
.参数 参数_环绕模式, 整数型, 可空, “环绕模式_”开头常量。默认为：“环绕模式_平铺”



.子程序 创建自矩形, 逻辑型, , GdipCreateTexture2
.参数 参数_图像, GP图像, , 
.参数 参数_左边, 小数型, , 
.参数 参数_顶边, 小数型, , 
.参数 参数_宽度, 小数型, , 
.参数 参数_高度, 小数型, , 
.参数 参数_环绕模式, 整数型, 可空, “环绕模式_”开头常量。



.子程序 创建自矩形I, 逻辑型, , GdipCreateTexture2I
.参数 参数_图像, GP图像, , 
.参数 参数_左边, 整数型, , 
.参数 参数_顶边, 整数型, , 
.参数 参数_宽度, 整数型, , 
.参数 参数_高度, 整数型, , 
.参数 参数_环绕模式, 整数型, 可空, “环绕模式_”开头常量。



.子程序 创建自图像属性, 逻辑型, , GdipCreateTextureIA
.参数 参数_图像, GP图像, , 
.参数 参数_左边, 小数型, , 
.参数 参数_顶边, 小数型, , 
.参数 参数_宽度, 小数型, , 
.参数 参数_高度, 小数型, , 
.参数 参数_图像属性, GP图像属性, 可空, 



.子程序 创建自图像属性I, 逻辑型, , GdipCreateTextureIAI
.参数 参数_图像, GP图像, , 
.参数 参数_左边, 整数型, , 
.参数 参数_顶边, 整数型, , 
.参数 参数_宽度, 整数型, , 
.参数 参数_高度, 整数型, , 
.参数 参数_图像属性, GP图像属性, 可空, 



.子程序 变形取矩阵, 逻辑型, , GdipGetTextureTransform
.参数 参数_矩阵, GP矩阵, 参考, 



.子程序 变形置矩阵, 逻辑型, , GdipSetTextureTransform
.参数 参数_矩阵, GP矩阵, , 



.子程序 变形重置, 逻辑型, , GdipResetTextureTransform


.子程序 变形相乘, 逻辑型, , GdipMultiplyTextureTransform
.参数 参数_矩阵, GP矩阵, , 
.参数 参数_矩阵顺序, 整数型, 可空, “矩阵顺序_”开头常量。默认为“#矩阵顺序_预先计算”



.子程序 变形平移, 逻辑型, , GdipTranslateTextureTransform。
.参数 参数_水平偏移量, 小数型, , 
.参数 参数_垂直偏移量, 小数型, , 
.参数 参数_矩阵顺序, 整数型, 可空, “矩阵顺序_”开头常量。默认为“ #矩阵顺序_预先计算”



.子程序 变形缩放, 逻辑型, , GdipScaleTextureTransform
.参数 参数_水平缩放倍数, 小数型, , 
.参数 参数_垂直缩放倍数, 小数型, , 
.参数 参数_矩阵顺序, 整数型, 可空, “矩阵顺序_”开头常量。默认为“ #矩阵顺序_预先计算”



.子程序 变形旋转, 逻辑型, , GdipRotateTextureTransform
.参数 参数_角度, 小数型, , 
.参数 参数_矩阵顺序, 整数型, 可空, “矩阵顺序_”开头常量。默认为“#矩阵顺序_预先计算



.子程序 取环绕模式, 整数型, , GdipGetTextureWrapMode。返回“环绕模式_”开头常量。


.子程序 置环绕模式, 逻辑型, , GdipSetTextureWrapMode
.参数 参数_环绕模式, 整数型, , “环绕模式_”开头常量。



.子程序 取图像, 逻辑型, , GdipGetTextureImage
.参数 参数_图像, GP图像, 参考, 



.类模块 GP线性渐变画刷, , , LinearGradientBrush。基类：GP画刷

.子程序 取指针, 整数型, , 


.子程序 置指针, 空白型, , 
.参数 参数_指针, 整数型, , 



.子程序 销毁, 逻辑型, , GdipDeleteBrush。


.子程序 复制, 逻辑型, , GdipCloneBrush。将当前画刷复制到“参数_画刷”。
.参数 参数_画刷, 未知类型0x49019565, 参考, 



.子程序 取类型, 整数型, , GdipGetBrushType。返回“#画刷类型_”开头常量。


.子程序 创建, 逻辑型, , GdipCreateLineBrush
.参数 参数_起点坐标, 坐标F, , 
.参数 参数_终点坐标, 坐标F, , 
.参数 参数_起点ARGB颜色, 整数型, , 
.参数 参数_终点ARGB颜色, 整数型, , 



.子程序 创建I, 逻辑型, , GdipCreateLineBrushI
.参数 参数_起点坐标, 坐标L, , 
.参数 参数_终点坐标, 坐标L, , 
.参数 参数_起点ARGB颜色, 整数型, , 
.参数 参数_终点ARGB颜色, 整数型, , 



.子程序 创建自矩形, 逻辑型, , GdipCreateLineBrushFromRect
.参数 参数_矩形, 矩形F, , 
.参数 参数_起点ARGB颜色, 整数型, , 
.参数 参数_终点ARGB颜色, 整数型, , 
.参数 参数_线性渐变模式, 整数型, 可空, “线性渐变模式_”开头常量。



.子程序 创建自矩形I, 逻辑型, , GdipCreateLineBrushFromRectI
.参数 参数_矩形, 矩形L, , 
.参数 参数_起点ARGB颜色, 整数型, , 
.参数 参数_终点ARGB颜色, 整数型, , 
.参数 参数_线性渐变模式, 整数型, 可空, “线性渐变模式_”开头常量。



.子程序 创建自矩形角度, 逻辑型, , GdipCreateLineBrushFromRectWithAngle
.参数 参数_矩形, 矩形F, , 
.参数 参数_起点ARGB颜色, 整数型, , 
.参数 参数_终点ARGB颜色, 整数型, , 
.参数 参数_角度, 小数型, , 
.参数 参数_角度是否可扩展, 逻辑型, 可空, 



.子程序 创建自矩形角度I, 逻辑型, , GdipCreateLineBrushFromRectWithAngleI
.参数 参数_矩形, 矩形L, , 
.参数 参数_起点ARGB颜色, 整数型, , 
.参数 参数_终点ARGB颜色, 整数型, , 
.参数 参数_角度, 小数型, , 
.参数 参数_角度是否可扩展, 逻辑型, 可空, 



.子程序 取线性渐变色, 逻辑型, , GdipGetLineColors
.参数 参数_起点ARGB颜色, 整数型, 参考, 
.参数 参数_终点ARGB颜色, 整数型, 参考, 



.子程序 置线性渐变色, 逻辑型, , GdipSetLineColors
.参数 参数_起点ARGB颜色, 整数型, , 
.参数 参数_终点ARGB颜色, 整数型, , 



.子程序 取矩形, 矩形F, , GdipGetLineRect


.子程序 取矩形I, 矩形L, , GdipGetLineRectI


.子程序 置伽玛校正, 逻辑型, , GdipSetLineGammaCorrection
.参数 参数_是否启用校正, 逻辑型, , 



.子程序 取伽玛校正, 逻辑型, , GdipSetLineGammaCorrection


.子程序 置混合, 逻辑型, , GdipSetLineBlend
.参数 参数_颜色比例, 小数型, 数组, 如：{0，0.5，1}
.参数 参数_位置比例, 小数型, 数组, 如：{0，0.2，1}



.子程序 取混合, 整数型, , GdipGetLineBlend。返回总数。
.参数 参数_颜色比例, 小数型, 数组, 提供小数型数组变量，装载数据。
.参数 参数_位置比例, 小数型, 数组, 同上。



.子程序 置预设混合, 逻辑型, , GdipSetLinePresetBlend
.参数 参数_ARGB颜色, 整数型, 数组, ARGB颜色数组。
.参数 参数_位置比例, 小数型, 数组, 如{0，0.3，1}



.子程序 取预设混合, 整数型, , GdipGetLineBlend。返回总数。
.参数 参数_ARGB颜色, 整数型, 数组, 提供整数型数组变量，装载数据。
.参数 参数_位置比例, 小数型, 数组, 提供小数型数组变量，装载数据。



.子程序 置钟形混合, 逻辑型, , GdipSetLineSigmaBlend
.参数 参数_焦点, 小数型, , 0到1之间的小数。
.参数 参数_比例, 小数型, , 0到1之间的小数。



.子程序 置线性混合, 逻辑型, , GdipSetLineLinearBlend
.参数 参数_焦点, 小数型, , 0到1之间的小数。
.参数 参数_比例, 小数型, , 0到1之间的小数。



.子程序 取环绕模式, 整数型, , GdipGetLineWrapMode。返回“环绕模式_”开头常量。


.子程序 置环绕模式, 逻辑型, , GdipSetLineWrapMode
.参数 参数_环绕模式, 整数型, , “环绕模式_”开头常量。



.子程序 变形取矩阵, 逻辑型, , GdipGetLineTransform
.参数 参数_矩阵, GP矩阵, 参考, 



.子程序 变形置矩阵, 逻辑型, , GdipSetLineTransform
.参数 参数_矩阵, GP矩阵, , 



.子程序 变形重置, 逻辑型, , GdipResetLineTransform


.子程序 变形相乘, 逻辑型, , GdipMultiplyLineTransform
.参数 参数_矩阵, GP矩阵, , 
.参数 参数_矩阵顺序, 整数型, 可空, “矩阵顺序_”开头常量。默认为“#矩阵顺序_预先计算”



.子程序 变形平移, 逻辑型, , GdipTranslateLineTransform。
.参数 参数_水平偏移量, 小数型, , 
.参数 参数_垂直偏移量, 小数型, , 
.参数 参数_矩阵顺序, 整数型, 可空, “矩阵顺序_”开头常量。默认为“ #矩阵顺序_预先计算”



.子程序 变形缩放, 逻辑型, , GdipScaleLineTransform
.参数 参数_水平缩放倍数, 小数型, , 
.参数 参数_垂直缩放倍数, 小数型, , 
.参数 参数_矩阵顺序, 整数型, 可空, “矩阵顺序_”开头常量。默认为“ #矩阵顺序_预先计算”



.子程序 变形旋转, 逻辑型, , GdipRotateLineTransform
.参数 参数_角度, 小数型, , 
.参数 参数_矩阵顺序, 整数型, 可空, “矩阵顺序_”开头常量。默认为“#矩阵顺序_预先计算



.类模块 GP路径渐变画刷, , , PathGradientBrush。基类：GP画刷

.子程序 取指针, 整数型, , 


.子程序 置指针, 空白型, , 
.参数 参数_指针, 整数型, , 



.子程序 销毁, 逻辑型, , GdipDeleteBrush。


.子程序 复制, 逻辑型, , GdipCloneBrush。将当前画刷复制到“参数_画刷”。
.参数 参数_画刷, 未知类型0x49019565, 参考, 



.子程序 取类型, 整数型, , GdipGetBrushType。返回“#画刷类型_”开头常量。


.子程序 创建, 逻辑型, , GdipCreatePathGradient
.参数 参数_坐标组, 坐标F, 数组, 
.参数 参数_环绕模式, 整数型, 可空, “环绕模式_”开头常量。默认为：#环绕模式_固定



.子程序 创建I, 逻辑型, , GdipCreatePathGradientI
.参数 参数_坐标组, 坐标L, 数组, 
.参数 参数_环绕模式, 整数型, 可空, “环绕模式_”开头常量。默认为：#环绕模式_固定



.子程序 创建自路径, 逻辑型, , GdipCreatePathGradientFromPath
.参数 参数_路径, GP路径, , 



.子程序 取中心点颜色, 整数型, , GdipGetPathGradientCenterColor。返回ARGB颜色。


.子程序 置中心点颜色, 逻辑型, , GdipSetPathGradientCenterColor
.参数 参数_ARGB颜色, 整数型, , 



.子程序 取坐标数, 整数型, , GdipGetPathGradientPointCount


.子程序 取周围颜色数, 整数型, , GdipGetPathGradientSurroundColorCount


.子程序 取周围颜色, 逻辑型, , GdipGetPathGradientSurroundColorsWithCount
.参数 参数_ARGB颜色, 整数型, 参考 数组, 
.参数 参数_数量, 整数型, 参考, [in/out]



.子程序 置周围颜色, 逻辑型, , GdipSetPathGradientSurroundColorsWithCount
.参数 参数_ARGB颜色, 整数型, 数组, 
.参数 参数_数量, 整数型, 参考 可空, [in/out]



.子程序 取路径, 逻辑型, , GdipGetPathGradientPath
.参数 参数_路径, GP路径, 参考, 



.子程序 置路径, 逻辑型, , GdipGetPathGradientPath
.参数 参数_路径, GP路径, , 



.子程序 取中心点, 坐标F, , GdipGetPathGradientCenterPoint


.子程序 取中心点I, 坐标L, , GdipGetPathGradientCenterPointI


.子程序 置中心点, 逻辑型, , GdipSetPathGradientCenterPoint
.参数 参数_坐标, 坐标F, , 



.子程序 置中心点I, 逻辑型, , GdipSetPathGradientCenterPointI
.参数 参数_坐标, 坐标L, , 



.子程序 取矩形, 矩形F, , GdipGetPathGradientRect


.子程序 取矩形I, 矩形L, , GdipGetPathGradientRectI


.子程序 置伽玛校正, 逻辑型, , GdipSetPathGradientGammaCorrection
.参数 参数_是否启用校正, 逻辑型, , 



.子程序 取伽玛校正, 逻辑型, , GdipGetPathGradientGammaCorrection


.子程序 置混合, 逻辑型, , GdipSetPathGradientBlend
.参数 参数_颜色比例, 小数型, 数组, 如：{0，0.5，1}
.参数 参数_位置比例, 小数型, 数组, 如：{0，0.2，1}



.子程序 取混合, 整数型, , GdipGetPathGradientBlend。返回总数。
.参数 参数_颜色比例, 小数型, 数组, 提供小数型数组变量，装载数据。
.参数 参数_位置比例, 小数型, 数组, 同上。



.子程序 取中心点比例, 逻辑型, , GdipGetPathGradientFocusScales
.参数 参数_比例X, 小数型, 参考, 
.参数 参数_比例Y, 小数型, 参考, 



.子程序 置中心点比例, 逻辑型, , GdipGetPathGradientFocusScales
.参数 参数_比例X, 小数型, , 0到1之间的小数。
.参数 参数_比例Y, 小数型, , 0到1之间的小数。



.子程序 置预设颜色, 逻辑型, , GdipSetPathGradientPresetBlend
.参数 参数_ARGB颜色, 整数型, 数组, ARGB颜色数组。
.参数 参数_位置比例, 小数型, 数组, 如{0，0.3，1}



.子程序 取预设颜色, 整数型, , GdipGetPathGradientPresetBlend。返回总数。
.参数 参数_ARGB颜色, 整数型, 数组, 提供整数型数组变量，装载数据。
.参数 参数_位置比例, 小数型, 数组, 提供小数型数组变量，装载数据。



.子程序 置钟形混合, 逻辑型, , GdipSetPathGradientSigmaBlend
.参数 参数_焦点, 小数型, , 0到1之间的小数。
.参数 参数_比例, 小数型, , 0到1之间的小数。



.子程序 置线性混合, 逻辑型, , GdipSetPathGradientLinearBlend
.参数 参数_焦点, 小数型, , 0到1之间的小数。
.参数 参数_比例, 小数型, , 0到1之间的小数。



.子程序 取环绕模式, 整数型, , GdipGetPathGradientWrapMode。返回“环绕模式_”开头常量。


.子程序 置环绕模式, 逻辑型, , GdipSetPathGradientWrapMode
.参数 参数_环绕模式, 整数型, , “环绕模式_”开头常量。



.子程序 变形取矩阵, 逻辑型, , GdipGetPathGradientTransform
.参数 参数_矩阵, GP矩阵, 参考, 



.子程序 变形置矩阵, 逻辑型, , GdipSetPathGradientTransform
.参数 参数_矩阵, GP矩阵, , 



.子程序 变形重置, 逻辑型, , GdipResetPathGradientTransform


.子程序 变形相乘, 逻辑型, , GdipMultiplyPathGradientTransform
.参数 参数_矩阵, GP矩阵, , 
.参数 参数_矩阵顺序, 整数型, 可空, “矩阵顺序_”开头常量。默认为“#矩阵顺序_预先计算”



.子程序 变形平移, 逻辑型, , GdipTranslatePathGradientTransform。
.参数 参数_水平偏移量, 小数型, , 
.参数 参数_垂直偏移量, 小数型, , 
.参数 参数_矩阵顺序, 整数型, 可空, “矩阵顺序_”开头常量。默认为“ #矩阵顺序_预先计算”



.子程序 变形缩放, 逻辑型, , GdipScalePathGradientTransform
.参数 参数_水平缩放倍数, 小数型, , 
.参数 参数_垂直缩放倍数, 小数型, , 
.参数 参数_矩阵顺序, 整数型, 可空, “矩阵顺序_”开头常量。默认为“ #矩阵顺序_预先计算”



.子程序 变形旋转, 逻辑型, , GdipRotatePathGradientTransform
.参数 参数_角度, 小数型, , 
.参数 参数_矩阵顺序, 整数型, 可空, “矩阵顺序_”开头常量。默认为“#矩阵顺序_预先计算



.类模块 GP自定义线帽, , , CustomLineCap

.子程序 取指针, 整数型, , 


.子程序 置指针, 空白型, , 
.参数 参数_指针, 整数型, , 



.子程序 销毁, 逻辑型, , GdipDeleteCustomLineCap


.子程序 创建自定义线帽, 逻辑型, , GdipCreateCustomLineCap
.参数 参数_填充路径, GP路径, 可空, “参数_填充路径”和“参数_笔画路径”二选一，如果两参数都是非空，将忽略“参数_填充路径”
.参数 参数_笔画路径, GP路径, 可空, 
.参数 参数_基线帽, 整数型, 可空, 默认为：“线帽样式_平线帽”
.参数 参数_基距离, 小数型, 可空, 默认为：0



.子程序 复制, 逻辑型, , GdipCloneCustomLineCap
.参数 参数_自定义线帽, GP自定义线帽, 参考, 



.子程序 置笔画线帽, 逻辑型, , GdipSetCustomLineCapStrokeCaps
.参数 参数_起点线帽, 整数型, , “线帽样式_”开头常量
.参数 参数_终点线帽, 整数型, , “线帽样式_”开头常量



.子程序 取笔画线帽, 逻辑型, , GdipSetCustomLineCapStrokeCaps
.参数 参数_起点线帽, 整数型, 参考, 只能提供变量，装载数据。
.参数 参数_终点线帽, 整数型, 参考, 只能提供变量，装载数据。



.子程序 置笔画连线方式, 逻辑型, , GdipSetCustomLineCapStrokeJoin
.参数 参数_连线方式, 整数型, , “连线方式_”开头常量。



.子程序 取笔画连线方式, 整数型, , GdipGetCustomLineCapStrokeJoin。返回“连线方式_”开头常量。


.子程序 置基线帽, 逻辑型, , GdipSetCustomLineCapBaseCap
.参数 参数_线帽样式, 整数型, , “线帽样式_”开头常量



.子程序 取基线帽, 整数型, , GdipGetCustomLineCapBaseCap。返回“线帽样式_”开头常量


.子程序 置基距离, 逻辑型, , GdipSetCustomLineCapBaseInset
.参数 参数_基距离, 小数型, , 



.子程序 取基距离, 小数型, , GdipGetCustomLineCapBaseInset。返回“线帽样式_”开头常量


.子程序 置宽比例, 逻辑型, , GdipSetCustomLineCapWidthScale
.参数 参数_宽比例, 小数型, , 



.子程序 取宽比例, 小数型, , GdipGetCustomLineCapWidthScale。


.类模块 GP系统字体集, , , InstalledFontCollection。基类：GP字体集

.子程序 取指针, 整数型, , 


.子程序 置指针, 空白型, , 
.参数 参数_指针, 整数型, , 



.子程序 取字体族数, 整数型, , GdipGetFontCollectionFamilyCount。


.子程序 取字体族列表, 整数型, , GdipGetFontCollectionFamilyList。成功返回实际字体族数量。
.参数 参数_数量, 整数型, , 
.参数 参数_字体族, GP字体族, 参考 数组, 



.子程序 创建, 逻辑型, , GdipNewInstalledFontCollection


.类模块 GP私有字体集, , , PrivateFontCollection。基类：GP字体集

.子程序 取指针, 整数型, , 


.子程序 置指针, 空白型, , 
.参数 参数_指针, 整数型, , 



.子程序 取字体族数, 整数型, , GdipGetFontCollectionFamilyCount。


.子程序 取字体族列表, 整数型, , GdipGetFontCollectionFamilyList。成功返回实际字体族数量。
.参数 参数_数量, 整数型, , 
.参数 参数_字体族, GP字体族, 参考 数组, 



.子程序 创建, 逻辑型, , GdipNewPrivateFontCollection


.子程序 销毁, 逻辑型, , GdipDeletePrivateFontCollection


.子程序 添加字体文件, 逻辑型, , GdipPrivateAddFontFile
.参数 参数_字体文件名, 文本型, , 



.子程序 添加字体字节集, 逻辑型, , 
.参数 参数_字体字节集, 字节集, , 



.类模块 GP文本格式, , , StringFormat

.子程序 取指针, 整数型, , 


.子程序 置指针, 空白型, , 
.参数 参数_指针, 整数型, , 



.子程序 销毁, 逻辑型, , GdipDeleteStringFormat


.子程序 创建, 逻辑型, , GdipCreateStringFormat
.参数 参数_格式标志, 整数型, 可空, “文本格式标志_”开头常量。
.参数 参数_语言, 短整数型, 可空, 默认为：LANG_NEUTRAL=0



.子程序 创建自通用默认, 逻辑型, , GdipStringFormatGetGenericDefault


.子程序 创建自通用印刷, 逻辑型, , GdipStringFormatGetGenericTypographic


.子程序 复制, 逻辑型, , GdipCloneStringFormat
.参数 参数_文本格式, GP文本格式, 参考, 



.子程序 置格式标志, 逻辑型, , GdipSetStringFormatFlags
.参数 参数_格式标志, 整数型, , “文本格式标志_”开头常量。



.子程序 取格式标志, 整数型, , GdipGetStringFormatFlags。返回“文本格式标志_”开头常量。


.子程序 置对齐, 逻辑型, , GdipSetStringFormatAlign
.参数 参数_对齐方式, 整数型, , “文本对齐_”开头常量。



.子程序 取对齐, 整数型, , GdipGetStringFormatAlign。返回“文本对齐_”开头常量。


.子程序 置行对齐, 逻辑型, , GdipSetStringFormatLineAlign
.参数 参数_对齐方式, 整数型, , “文本对齐_”开头常量。



.子程序 取行对齐, 整数型, , GdipGetStringFormatLineAlign。返回“文本对齐_”开头常量。


.子程序 置修整, 逻辑型, , GdipSetStringFormatTrimming
.参数 参数_修整方式, 整数型, , “文本修整_”开头常量。



.子程序 取修整, 整数型, , GdipGetStringFormatTrimming。返回“文本修整_”开头常量。


.子程序 置热键前缀, 逻辑型, , GdipSetStringFormatHotkeyPrefix。字符(&)
.参数 参数_热键前缀, 整数型, , “热键前缀_”开头常量。



.子程序 取热键前缀, 整数型, , GdipGetStringFormatHotkeyPrefix。返回“热键前缀_”开头常量。


.子程序 置制表位偏移, 逻辑型, , GdipSetStringFormatTabStops
.参数 参数_初始偏移量, 小数型, , 文本行开头和第一个制表位之间的空格数
.参数 参数_偏移距离, 小数型, 数组, 数组中的每个制表位偏移量（第一个除外）都是相对于前一个的。第一个制表位偏移量相对于由 “参数_初始偏移量” 指定的初始偏移位置。例如，如果初始偏移位置是 8，第一个制表位偏移量是 50，则第一个制表位的位置是 58。如果初始偏移位置是零，则第一个制表位偏移量相对于位置 0（即原点字符串）。



.子程序 取制表位偏移, 整数型, , GdipGetStringFormatTabStops。返回制表位偏移总数。
.参数 参数_初始偏移量, 小数型, 参考, 文本行开头和第一个制表位之间的空格数
.参数 参数_偏移距离, 小数型, 参考 数组, 数组中的每个制表位偏移量（第一个除外）都是相对于前一个的。第一个制表位偏移量相对于由 “参数_初始偏移量” 指定的初始偏移位置。例如，如果初始偏移位置是 8，第一个制表位偏移量是 50，则第一个制表位的位置是 58。如果初始偏移位置是零，则第一个制表位偏移量相对于位置 0（即原点字符串）。



.子程序 置数字替换, 逻辑型, , GdipSetStringFormatDigitSubstitution
.参数 参数_数字替换, 整数型, , “文本数字替换_”开头常量。
.参数 参数_语言, 短整数型, 可空, 默认为：LANG_NEUTRAL



.子程序 取数字替换, 逻辑型, , GdipGetStringFormatDigitSubstitution
.参数 参数_数字替换, 整数型, 参考, 返回“文本数字替换_”开头常量。
.参数 参数_语言, 短整数型, 参考 可空, 



.子程序 置测量字符范围, 逻辑型, , GdipSetStringFormatMeasurableCharacterRanges
.参数 参数_字符范围, 测试字符范围, 数组, 



.子程序 取测量字符范围数, 整数型, , GdipGetStringFormatMeasurableCharacterRangeCount


.类模块 GP位图, , , Bitmap。基类：GP图像

.子程序 取指针, 整数型, , 


.子程序 置指针, 空白型, , 
.参数 参数_指针, 整数型, , 



.子程序 销毁, 逻辑型, , GdipDisposeImage。


.子程序 创建自文件, 逻辑型, , GdipCreateBitmapFromFile
.参数 参数_文件名, 文本型, , 
.参数 参数_是否ICM, 逻辑型, 可空, 默认为假。如果为真表示使用已嵌入颜色管理信息来进行颜色校正。



.子程序 创建自字节集, 逻辑型, , GdipCreateBitmapFromStream
.参数 参数_字节集, 字节集, , 
.参数 参数_是否ICM, 逻辑型, 可空, 默认为假。如果为真表示使用已嵌入颜色管理信息来进行颜色校正。



.子程序 复制, 逻辑型, , GdipCloneImage
.参数 参数_图像, GP图像, 参考, 



.子程序 保存到文件, 逻辑型, , GdipSaveImageToFile
.参数 参数_文件名, 文本型, , 
.参数 参数_图像格式, 文本型, 可空, “图像格式_”开头常量。
.参数 参数_编码器参数集, 编码器参数集, 可空, 



.子程序 保存到字节集, 字节集, , GdipSaveImageToStream
.参数 参数_图像格式, 文本型, 可空, “图像格式_”开头常量
.参数 参数_编码器参数集, 编码器参数集, 可空, 



.子程序 保存添加, 逻辑型, , GdipSaveAdd
.参数 参数_编码器参数集, 编码器参数集, , 



.子程序 保存添加图像, 逻辑型, , GdipSaveAddImage
.参数 参数_图像, GP图像, , 
.参数 参数_编码器参数集, 编码器参数集, , 



.子程序 取编码器参数列表, 逻辑型, , GdipGetEncoderParameterList。
.参数 参数_图像格式, 文本型, , “图像格式_”开头常量。
.参数 参数_编码器, 编码器参数集, 参考, 



.子程序 取原始格式, 文本型, , GdipGetImageRawFormat。返回“图像格式_”开头常量。


.子程序 取边界矩形, 矩形F, , GdipGetImageBounds。返回矩形范围
.参数 参数_单位, 整数型, 参考 可空, 提供整数型变量取返回值,指定该矩形的单位。“单位_”开头常量。



.子程序 取物理尺寸, 尺寸F, , GdipGetImageDimension


.子程序 取类型, 整数型, , GdipGetImageType。返回“图像类型_”开头常量。


.子程序 取宽度, 整数型, , GdipGetImageWidth


.子程序 取高度, 整数型, , GdipGetImageHeight


.子程序 取水平分辨率, 小数型, , GdipGetImageHorizontalResolution。以“像素/英寸”为单位


.子程序 取垂直分辨率, 小数型, , GdipGetImageVerticalResolution。以“像素/英寸”为单位


.子程序 取图像属性, 整数型, , GdipGetImageFlags。返回“图像属性_”开头常量。


.子程序 取像素格式, 整数型, , GdipGetImagePixelFormat。返回“像素格式_”开头常量。


.子程序 取图像缩略图, 逻辑型, , GdipGetImageThumbnail
.参数 参数_缩略图宽度, 整数型, , 
.参数 参数_缩略图高度, 整数型, , 
.参数 参数_缩略图, GP图像, 参考, 返回一个缩略图的Gdip图像。



.子程序 取帧数, 整数型, , GdipImageGetFrameCount
.参数 参数_帧维面, 文本型, , “帧维面_”开头常量。



.子程序 取帧维面列表, 逻辑型, , GdipImageGetFrameDimensionsList
.参数 参数_帧惟面, 文本型, 数组, “帧维面_”开头常量。



.子程序 置活动帧, 逻辑型, , GdipImageSelectActiveFrame
.参数 参数_帧维面, 文本型, , “帧维面_”开头常量。
.参数 参数_索引, 整数型, , 



.子程序 取各帧延时, 逻辑型, , 
.参数 参数_延时, 整数型, 数组, 



.子程序 取属性项目, 逻辑型, , GdipGetPropertyItem
.参数 参数_属性标签, 整数型, , “属性标签_”开头常量。通常是通过“取属性标签列表()”方法来查看此图像有哪些属性。
.参数 参数_属性项目, 属性项目, 参考, 



.子程序 置属性项目, 逻辑型, , GdipSetPropertyItem
.参数 参数_属性项目, 属性项目, , 



.子程序 移除属性项目, 逻辑型, , GdipRemovePropertyItem
.参数 参数_属性标签, 整数型, , “属性标签_”开头常量。通常是通过“取属性标签列表()”方法来查看此图像有哪些属性。



.子程序 取属性标签列表, 整数型, , GdipGetPropertyIdList。返回属性标签数。
.参数 参数_属性标签数组, 整数型, 数组, 



.子程序 旋转翻转, 逻辑型, , GdipImageRotateFlip
.参数 参数_旋转翻转类型, 整数型, , “旋转翻转_”开头常量。



.子程序 取颜色调色板, 逻辑型, , GdipGetImagePalette
.参数 参数_颜色调色板, 颜色调色板, 参考, 



.子程序 置颜色调色板, 逻辑型, , GdipSetImagePalette
.参数 参数_颜色调色板, 颜色调色板, , 



.子程序 创建自扫描行, 逻辑型, , GdipCreateBitmapFromScan0
.参数 参数_宽度, 整数型, , 
.参数 参数_高度, 整数型, , 
.参数 参数_跨步, 整数型, , 指定相邻扫描行开始处之间字节偏移量的整数。这通常（但不一定）是以像素格式表示的字节数（例如，2 表示每像素 16 位）乘以位图的宽度。传递给此参数的值必须为 4 的倍数。提供一个公式：左移(右移(参数_宽度*位深+31,5),2)
.参数 参数_像素格式, 整数型, , “像素格式_”开头常量。
.参数 参数_像素数据, 整数型, 可空, 指向包含像素数据的字节集指针。



.子程序 创建自像素格式, 逻辑型, , GdipCreateBitmapFromScan0
.参数 参数_宽度, 整数型, , 
.参数 参数_高度, 整数型, , 
.参数 参数_像素格式, 整数型, 可空, “像素格式_”开头常量。默认为：“像素格式_32bppARGB”



.子程序 创建自图形, 逻辑型, , GdipCreateBitmapFromGraphics
.参数 参数_宽度, 整数型, , 
.参数 参数_高度, 整数型, , 
.参数 参数_图形, GP图形, , 使用其分辨率



.子程序 创建自GDI对象, 逻辑型, , GdipCreateBitmapFromGdiDib
.参数 参数_BITMAPINFO, 整数型, , BITMAPINFO结构指针。
.参数 参数_位图数据, 整数型, , 位图数据指针。



.子程序 创建自位图句柄, 逻辑型, , GdipCreateBitmapFromHBITMAP
.参数 参数_位图句柄, 整数型, , hBitmap
.参数 参数_调色板句柄, 整数型, 可空, 如果位图句柄不是一个设备无关位图，则用于定义位图颜色。



.子程序 创建自图标句柄, 逻辑型, , GdipCreateBitmapFromHICON
.参数 参数_图标句柄, 整数型, , hIcon



.子程序 创建自资源, 逻辑型, , GdipCreateBitmapFromResource
.参数 参数_实例句柄, 整数型, , 
.参数 参数_资源ID, 整数型, , 



.子程序 取位图句柄, 整数型, , GdipCreateHBITMAPFromBitmap。返回位图句柄。需要调用 DeleteObject 释放。
.参数 参数_背景ARGB颜色, 整数型, 可空, 指定背景色。如果位图完全不透明，则忽略此参数。



.子程序 取图标句柄, 整数型, , GdipCreateHICONFromBitmap。返回图标句柄。需要调用 DestroyIcon 释放。


.子程序 复制部分, 逻辑型, , GdipCloneBitmapArea
.参数 参数_矩形, 矩形F, , 
.参数 参数_像素格式, 整数型, , “像素格式_”开头常量。
.参数 参数_位图, GP位图, 参考, 返回新的位图对象。



.子程序 锁定数据, 逻辑型, , GdipBitmapLockBits
.参数 参数_锁定矩形, 矩形L, , 被锁定的矩形范围。
.参数 参数_锁定模式, 整数型, , “图像锁定模式_”开头常量。
.参数 参数_像素格式, 整数型, , “像素格式_”开头常量。
.参数 参数_位图数据, 位图数据, 参考, [in,out]



.子程序 解锁数据, 逻辑型, , GdipBitmapUnlockBits
.参数 参数_位图数据, 位图数据, , 



.子程序 取某点颜色, 整数型, , GdipBitmapGetPixel。返回ARGB颜色值。
.参数 参数_x, 整数型, , 
.参数 参数_y, 整数型, , 



.子程序 置某点颜色, 逻辑型, , GdipBitmapSetPixel
.参数 参数_x, 整数型, , 
.参数 参数_y, 整数型, , 
.参数 参数_ARGB颜色, 整数型, , 



.子程序 置分辨率, 逻辑型, , GdipBitmapSetResolution
.参数 参数_水平分辨率, 小数型, , 
.参数 参数_垂直分辨率, 小数型, , 



.类模块 GP图元文件, , , Metafile。基类：GP图像

.子程序 取指针, 整数型, , 


.子程序 置指针, 空白型, , 
.参数 参数_指针, 整数型, , 



.子程序 销毁, 逻辑型, , GdipDisposeImage。


.子程序 创建自文件, 逻辑型, , GdipCreateMetafileFromFile
.参数 参数_文件名, 文本型, , 
.参数 参数_保留, 逻辑型, 可空, 



.子程序 创建自字节集, 逻辑型, , GdipCreateMetafileFromStream
.参数 参数_字节集, 字节集, , 
.参数 参数_保留, 逻辑型, 可空, 



.子程序 复制, 逻辑型, , GdipCloneImage
.参数 参数_图像, GP图像, 参考, 



.子程序 保存到文件, 逻辑型, , GdipSaveImageToFile
.参数 参数_文件名, 文本型, , 
.参数 参数_图像格式, 文本型, 可空, “图像格式_”开头常量。
.参数 参数_编码器参数集, 编码器参数集, 可空, 



.子程序 保存到字节集, 字节集, , GdipSaveImageToStream
.参数 参数_图像格式, 文本型, 可空, “图像格式_”开头常量
.参数 参数_编码器参数集, 编码器参数集, 可空, 



.子程序 保存添加, 逻辑型, , GdipSaveAdd
.参数 参数_编码器参数集, 编码器参数集, , 



.子程序 保存添加图像, 逻辑型, , GdipSaveAddImage
.参数 参数_图像, GP图像, , 
.参数 参数_编码器参数集, 编码器参数集, , 



.子程序 取编码器参数列表, 逻辑型, , GdipGetEncoderParameterList。
.参数 参数_图像格式, 文本型, , “图像格式_”开头常量。
.参数 参数_编码器, 编码器参数集, 参考, 



.子程序 取原始格式, 文本型, , GdipGetImageRawFormat。返回“图像格式_”开头常量。


.子程序 取边界矩形, 矩形F, , GdipGetImageBounds。返回矩形范围
.参数 参数_单位, 整数型, 参考 可空, 提供整数型变量取返回值,指定该矩形的单位。“单位_”开头常量。



.子程序 取物理尺寸, 尺寸F, , GdipGetImageDimension


.子程序 取类型, 整数型, , GdipGetImageType。返回“图像类型_”开头常量。


.子程序 取宽度, 整数型, , GdipGetImageWidth


.子程序 取高度, 整数型, , GdipGetImageHeight


.子程序 取水平分辨率, 小数型, , GdipGetImageHorizontalResolution。以“像素/英寸”为单位


.子程序 取垂直分辨率, 小数型, , GdipGetImageVerticalResolution。以“像素/英寸”为单位


.子程序 取图像属性, 整数型, , GdipGetImageFlags。返回“图像属性_”开头常量。


.子程序 取像素格式, 整数型, , GdipGetImagePixelFormat。返回“像素格式_”开头常量。


.子程序 取图像缩略图, 逻辑型, , GdipGetImageThumbnail
.参数 参数_缩略图宽度, 整数型, , 
.参数 参数_缩略图高度, 整数型, , 
.参数 参数_缩略图, GP图像, 参考, 返回一个缩略图的Gdip图像。



.子程序 取帧数, 整数型, , GdipImageGetFrameCount
.参数 参数_帧维面, 文本型, , “帧维面_”开头常量。



.子程序 取帧维面列表, 逻辑型, , GdipImageGetFrameDimensionsList
.参数 参数_帧惟面, 文本型, 数组, “帧维面_”开头常量。



.子程序 置活动帧, 逻辑型, , GdipImageSelectActiveFrame
.参数 参数_帧维面, 文本型, , “帧维面_”开头常量。
.参数 参数_索引, 整数型, , 



.子程序 取各帧延时, 逻辑型, , 
.参数 参数_延时, 整数型, 数组, 



.子程序 取属性项目, 逻辑型, , GdipGetPropertyItem
.参数 参数_属性标签, 整数型, , “属性标签_”开头常量。通常是通过“取属性标签列表()”方法来查看此图像有哪些属性。
.参数 参数_属性项目, 属性项目, 参考, 



.子程序 置属性项目, 逻辑型, , GdipSetPropertyItem
.参数 参数_属性项目, 属性项目, , 



.子程序 移除属性项目, 逻辑型, , GdipRemovePropertyItem
.参数 参数_属性标签, 整数型, , “属性标签_”开头常量。通常是通过“取属性标签列表()”方法来查看此图像有哪些属性。



.子程序 取属性标签列表, 整数型, , GdipGetPropertyIdList。返回属性标签数。
.参数 参数_属性标签数组, 整数型, 数组, 



.子程序 旋转翻转, 逻辑型, , GdipImageRotateFlip
.参数 参数_旋转翻转类型, 整数型, , “旋转翻转_”开头常量。



.子程序 取颜色调色板, 逻辑型, , GdipGetImagePalette
.参数 参数_颜色调色板, 颜色调色板, 参考, 



.子程序 置颜色调色板, 逻辑型, , GdipSetImagePalette
.参数 参数_颜色调色板, 颜色调色板, , 



.子程序 创建自hWMF, 逻辑型, , GdipCreateMetafileFromWmf
.参数 参数_WMF句柄, 整数型, , 
.参数 参数_APM文件头, APM文件头, , 
.参数 参数_是否删除句柄, 逻辑型, 可空, 指定是否自动删除图元文件句柄。



.子程序 创建自hEMF, 逻辑型, , GdipCreateMetafileFromEmf
.参数 参数_EMF句柄, 整数型, , 
.参数 参数_是否删除句柄, 逻辑型, 可空, 指定是否自动删除图元文件句柄。



.子程序 创建自WMF文件, 逻辑型, , GdipCreateMetafileFromWmfFile
.参数 参数_文件名, 文本型, , 
.参数 参数_APM文件头, APM文件头, , 



.子程序 创建自记录, 逻辑型, , GdipRecordMetafile
.参数 参数_hdc, 整数型, , 设备上下文句柄。
.参数 参数_框架矩形, 矩形F, 可空, 
.参数 参数_框架单位, 整数型, 可空, “图元文件单位_”开头常量。默认为：图元文件单位_GDI
.参数 参数_EMF类型, 整数型, 可空, “EMF类型_”开头常量。默认为：EMF类型_EmfPlusDual
.参数 参数_描述文本, 文本型, 可空, 



.子程序 创建自记录I, 逻辑型, , GdipRecordMetafileI
.参数 参数_hdc, 整数型, , 设备上下文句柄。
.参数 参数_框架矩形, 矩形L, 可空, 
.参数 参数_框架单位, 整数型, 可空, “图元文件单位_”开头常量。默认为：图元文件单位_GDI
.参数 参数_EMF类型, 整数型, 可空, “EMF类型_”开头常量。默认为：EMF类型_EmfPlusDual
.参数 参数_描述文本, 文本型, 可空, 



.子程序 创建自记录文件名, 逻辑型, , GdipRecordMetafileFileName
.参数 参数_文件名, 文本型, , 
.参数 参数_hdc, 整数型, , 设备上下文句柄。
.参数 参数_框架矩形, 矩形F, 可空, 
.参数 参数_框架单位, 整数型, 可空, “图元文件单位_”开头常量。默认为：图元文件单位_GDI
.参数 参数_EMF类型, 整数型, 可空, “EMF类型_”开头常量。默认为：EMF类型_适合
.参数 参数_描述文本, 文本型, 可空, 



.子程序 创建自记录文件名I, 逻辑型, , GdipRecordMetafileFileNameI
.参数 参数_文件名, 文本型, , 
.参数 参数_hdc, 整数型, , 设备上下文句柄。
.参数 参数_框架矩形, 矩形L, 可空, 
.参数 参数_框架单位, 整数型, 可空, “图元文件单位_”开头常量。默认为：图元文件单位_GDI
.参数 参数_EMF类型, 整数型, 可空, “EMF类型_”开头常量。默认为：EMF类型_适合
.参数 参数_描述文本, 文本型, 可空, 



.子程序 创建自记录字节集, 逻辑型, , GdipRecordMetafileStream
.参数 参数_字节集, 字节集, , 
.参数 参数_hdc, 整数型, , 设备上下文句柄。
.参数 参数_框架矩形, 矩形F, 可空, 
.参数 参数_框架单位, 整数型, 可空, “图元文件单位_”开头常量。默认为：图元文件单位_GDI
.参数 参数_EMF类型, 整数型, 可空, “EMF类型_”开头常量。默认为：EMF类型_EmfPlusDual
.参数 参数_描述文本, 文本型, 可空, 



.子程序 创建自记录字节集I, 逻辑型, , GdipRecordMetafileStreamI
.参数 参数_字节集, 字节集, , 
.参数 参数_hdc, 整数型, , 设备上下文句柄。
.参数 参数_框架矩形, 矩形L, 可空, 
.参数 参数_框架单位, 整数型, 可空, “图元文件单位_”开头常量。默认为：图元文件单位_GDI
.参数 参数_EMF类型, 整数型, 可空, “EMF类型_”开头常量。默认为：EMF类型_EmfPlusDual
.参数 参数_描述文本, 文本型, 可空, 



.子程序 取图元文件头自hWMF, 图元文件头, , GdipGetMetafileHeaderFromWmf
.参数 参数_hWMF, 整数型, , 
.参数 参数_APM文件头, APM文件头, , 



.子程序 取图元文件头自hEMF, 图元文件头, , GdipGetMetafileHeaderFromEmf
.参数 参数_hEMF, 整数型, , 



.子程序 取图元文件头自文件, 图元文件头, , GdipGetMetafileHeaderFromFile
.参数 参数_文件名, 文本型, , 



.子程序 取图元文件头自字节集, 图元文件头, , GdipGetMetafileHeaderFromStream
.参数 参数_字节集, 字节集, , 



.子程序 取图元文件头, 图元文件头, , GdipGetMetafileHeaderFromMetafile


.子程序 置栅格化限制, 逻辑型, , GdipSetMetafileDownLevelRasterizationLimit
.参数 参数_栅格化限制DPI, 整数型, , 



.子程序 取栅格化限制, 整数型, , GdipGetMetafileDownLevelRasterizationLimit


.子程序 取EMF句柄, 整数型, , GdipGetHemfFromMetafile。需要使用 DeleteEnhMetafile 释放。


.子程序 播放记录, 逻辑型, , GdipPlayMetafileRecord
.参数 参数_记录类型, 整数型, , 
.参数 参数_标志, 整数型, , 0
.参数 参数_数据大小, 整数型, , 
.参数 参数_数据指针, 整数型, , 



.类模块 GP缓存位图, , , CachedBitmap

.子程序 取指针, 整数型, , 


.子程序 置指针, 空白型, , 
.参数 参数_指针, 整数型, , 



.子程序 销毁, 逻辑型, , GdipDeleteCachedBitmap


.子程序 创建, 逻辑型, , GdipCreateCachedBitmap
.参数 参数_位图, GP位图, , 
.参数 参数_图形, GP图形, , 



.类模块 GP箭头线帽, , , AdjustableArrowCap

.子程序 取指针, 整数型, , 


.子程序 置指针, 空白型, , 
.参数 参数_指针, 整数型, , 



.子程序 销毁, 逻辑型, , GdipDeleteCustomLineCap


.子程序 创建自定义线帽, 逻辑型, , GdipCreateCustomLineCap
.参数 参数_填充路径, GP路径, 可空, “参数_填充路径”和“参数_笔画路径”二选一，如果两参数都是非空，将忽略“参数_填充路径”
.参数 参数_笔画路径, GP路径, 可空, 
.参数 参数_基线帽, 整数型, 可空, 默认为：“线帽样式_平线帽”
.参数 参数_基距离, 小数型, 可空, 默认为：0



.子程序 复制, 逻辑型, , GdipCloneCustomLineCap
.参数 参数_自定义线帽, GP自定义线帽, 参考, 



.子程序 置笔画线帽, 逻辑型, , GdipSetCustomLineCapStrokeCaps
.参数 参数_起点线帽, 整数型, , “线帽样式_”开头常量
.参数 参数_终点线帽, 整数型, , “线帽样式_”开头常量



.子程序 取笔画线帽, 逻辑型, , GdipSetCustomLineCapStrokeCaps
.参数 参数_起点线帽, 整数型, 参考, 只能提供变量，装载数据。
.参数 参数_终点线帽, 整数型, 参考, 只能提供变量，装载数据。



.子程序 置笔画连线方式, 逻辑型, , GdipSetCustomLineCapStrokeJoin
.参数 参数_连线方式, 整数型, , “连线方式_”开头常量。



.子程序 取笔画连线方式, 整数型, , GdipGetCustomLineCapStrokeJoin。返回“连线方式_”开头常量。


.子程序 置基线帽, 逻辑型, , GdipSetCustomLineCapBaseCap
.参数 参数_线帽样式, 整数型, , “线帽样式_”开头常量



.子程序 取基线帽, 整数型, , GdipGetCustomLineCapBaseCap。返回“线帽样式_”开头常量


.子程序 置基距离, 逻辑型, , GdipSetCustomLineCapBaseInset
.参数 参数_基距离, 小数型, , 



.子程序 取基距离, 小数型, , GdipGetCustomLineCapBaseInset。返回“线帽样式_”开头常量


.子程序 置宽比例, 逻辑型, , GdipSetCustomLineCapWidthScale
.参数 参数_宽比例, 小数型, , 



.子程序 取宽比例, 小数型, , GdipGetCustomLineCapWidthScale。


.子程序 创建箭头线帽, 逻辑型, , GdipCreateAdjustableArrowCap
.参数 参数_高度, 小数型, , 
.参数 参数_宽度, 小数型, , 
.参数 参数_是否填充, 逻辑型, 可空, 默认为真。



.子程序 置高度, 逻辑型, , GdipSetAdjustableArrowCapHeight
.参数 参数_高度, 小数型, , 



.子程序 取高度, 小数型, , GdipGetAdjustableArrowCapHeight


.子程序 置宽度, 逻辑型, , GdipSetAdjustableArrowCapWidth
.参数 参数_宽度, 小数型, , 



.子程序 取宽度, 小数型, , GdipGetAdjustableArrowCapWidth


.子程序 置填充状态, 逻辑型, , GdipSetAdjustableArrowCapFillState
.参数 参数_是否可填充, 逻辑型, , 



.子程序 是否可填充, 逻辑型, , GdipGetAdjustableArrowCapFillState


.子程序 置中心点, 逻辑型, , GdipSetAdjustableArrowCapMiddleInset
.参数 参数_偏移, 小数型, , 



.子程序 取中心点, 小数型, , GdipGetAdjustableArrowCapMiddleInset


.类模块 GP路径迭代器, , , PathIterator

.子程序 取指针, 整数型, , 


.子程序 置指针, 空白型, , 
.参数 参数_指针, 整数型, , 



.子程序 创建, 逻辑型, , GdipCreatePathIter
.参数 参数_路径, GP路径, , 



.子程序 销毁, 逻辑型, , GdipDeletePathIter


.子程序 下一子路径, 整数型, , GdipPathIterNextSubpath。返回下一个子路径的数据坐标数，如果没有下一个子路径，返回0。
.参数 参数_开始索引, 整数型, 参考 可空, 返回开始索引
.参数 参数_结束索引, 整数型, 参考 可空, 返回结束索引
.参数 参数_是否关闭, 逻辑型, 参考 可空, 返回是否子路径已经关闭。



.子程序 下一子路径自路径, 整数型, , GdipPathIterNextSubpath。根据指定的路径返回下一个子路径的数据坐标数，如果没有下一个子路径，返回0。
.参数 参数_路径, GP路径, , 
.参数 参数_是否关闭, 逻辑型, 参考 可空, 返回是否子路径已经关闭。



.子程序 下一点类型, 整数型, , GdipPathIterNextPathType。返回下一个路径的数据点类型数，如果没有点类型，返回0。
.参数 参数_点类型, 字节型, 参考 可空, 返回“路径点类型_”开头常量组合。
.参数 参数_开始索引, 整数型, 参考 可空, 返回开始索引
.参数 参数_结束索引, 整数型, 参考 可空, 返回结束索引



.子程序 下一标记, 整数型, , GdipPathIterNextMarker。返回下一个路径标记的数据坐标数，如果没有下一个标记，返回0。
.参数 参数_开始索引, 整数型, 参考 可空, 返回开始索引
.参数 参数_结束索引, 整数型, 参考 可空, 返回结束索引



.子程序 下一标记自路径, 整数型, , GdipPathIterNextMarker。返回下一个路径标记的数据坐标数，如果没有下一个标记，返回0。
.参数 参数_路径, GP路径, , 



.子程序 取总数, 整数型, , GdipPathIterGetCount。返回路径的数据坐标数


.子程序 取子路径总数, 整数型, , GdipPathIterGetSubpathCount。返回子路径数。


.子程序 是否有曲线, 逻辑型, , GdipPathIterHasCurve。如果路径中至少有一个曲线，返回真，否则返回假。


.子程序 重置, 逻辑型, , GdipPathIterRewind。将迭代器返回到起点。


.子程序 枚举, 整数型, , GdipPathIterEnumerate
.参数 参数_坐标组, 坐标F, 参考 数组, 
.参数 参数_类型组, 字节型, 参考 数组, 
.参数 参数_总数, 整数型, 可空, 默认为：对象.取总数() 的返回值



.子程序 复制数据, 整数型, , GdipPathIterGetCount
.参数 参数_开始索引, 整数型, , 
.参数 参数_结束索引, 整数型, , 
.参数 参数_坐标组, 坐标F, 参考 数组, 
.参数 参数_类型组, 字节型, 参考 数组, 



.程序集 __HIDDEN_TEMP_MOD__, , , 

.子程序 Gdiplus初始化, 逻辑型, , GdiplusStartup。初始化GDI+。使用GID+之前必须初始化。整个程序只能调用一次。
.参数 参数_版本, 整数型, 可空, 默认为1



.子程序 Gdiplus关闭, 空白型, , GdiplusShutdown。整个程序只能调用一次


.子程序 RGB到ARGB, 整数型, , 
.参数 参数_RGB, 整数型, , 
.参数 参数_透明度, 字节型, 可空, 默认为255，不透明。



.子程序 ARGB到RGB, 整数型, , 
.参数 参数_ARGB, 整数型, , 
.参数 参数_透明度, 字节型, 参考 可空, 



.子程序 Gdiplus取最后错误, 整数型, , GdiplusGetLastStatus


.子程序 Gdiplus取最后错误文本, 文本型, , GdiplusGetLastStatusText


.子程序 W2A, 文本型, , 将Unicode转成Ansi
.参数 参数_Unicode文本指针, 整数型, , 



.子程序 A2W, 字节集, , 将Ansi转成Unicode
.参数 参数_Ansi文本, 文本型, , 



.子程序 取宽文本长度, 整数型, , lstrlenw
.参数 参数_Unicode文本, 字节集, , 



.子程序 取图像编码列表, 整数型, , GdipGetImageEncoders。返回图像编码列表数。
.参数 参数_图像编码信息, 图像编解码信息, 数组, 



.子程序 取图像编码CLSID自Mime, 文本型, , GetCodecClsid
.参数 参数_Mime, 文本型, , 只能是如下值：“image/bmp”、“image/jpeg”、“image/gif”、“image/tiff”、“image/png”



.子程序 取图像编码CLSID自图像格式, 文本型, , GetCodecClsid
.参数 参数_图像格式, 文本型, , “图像格式_”开头常量



.子程序 GUID到文本, 文本型, , StringFromGUID2
.参数 参数_CLSID, 字节集, , 



.子程序 文本到GUDI, 字节集, , CLSIDFromString
.参数 参数_文本, 文本型, , 



.子程序 制坐标F, 坐标F, , MakePointF
.参数 参数_x, 小数型, , 
.参数 参数_y, 小数型, , 



.子程序 制矩形F, 矩形F, , MakeRectF
.参数 参数_左边, 小数型, , 
.参数 参数_顶边, 小数型, , 
.参数 参数_宽度, 小数型, 可空, 
.参数 参数_高度, 小数型, 可空, 



.子程序 制坐标L, 坐标L, , MakePointL
.参数 参数_x, 整数型, , 
.参数 参数_y, 整数型, , 



.子程序 制矩形L, 矩形L, , MakeRectL
.参数 参数_左边, 整数型, , 
.参数 参数_顶边, 整数型, , 
.参数 参数_宽度, 整数型, 可空, 
.参数 参数_高度, 整数型, 可空, 



.子程序 取图像解码列表, 整数型, , GdipGetImageEncoders。返回图像解码列表数。
.参数 参数_信息, 图像编解码信息, 数组, 




 ' 不属于任何一个程序集、类模块的函数：
