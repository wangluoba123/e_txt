 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 455
    高度 = 339
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “15选6”
    帮助文件名 = “”





 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 5 0 系统核心支持库





.窗口程序集 窗口程序集1, , , 

.程序集变量 数组组合, 整数型, , "100", 将数组定义足够长
.程序集变量 计次, 整数型, , , 
.程序集变量 位数, 整数型, , , 
.程序集变量 匿名程序集变量_375, 空白型, , , 
.程序集变量 文本个数, 空白型, , , 
.程序集变量 组选数, 空白型, , , 
.子程序 __启动窗口_创建完毕, 空白型, , 
赋值 (组选数, 相加 (到整数 (.), 到整数 (.)))
赋值 (., 到文本 (组选数))


.子程序 _按钮1_被单击, 空白型, , 
.局部变量 文本数组, 文本型, , "0", 
.局部变量 数据编号数组, 整数型, , "0", 
.局部变量 数据编号组合数组, 文本型, , "0", 
.局部变量 i, 整数型, , , 
.局部变量 j, 整数型, , , 
.局部变量 可能组合, 整数型, , "0", 
.局部变量 临时数组, 文本型, , "0", 
.局部变量 奇数, 整数型, , , 
.局部变量 偶数, 整数型, , , 
.局部变量 奇偶比结果数组, 整数型, , "0", 
.局部变量 和, 整数型, , , 
.局部变量 和结果数组, 整数型, , "0", 
.局部变量 k, 整数型, , , 
.局部变量 分解数结果数组, 整数型, , "0", 
.局部变量 符合分解数要求, 逻辑型, , , 
.局部变量 m, 整数型, , , 
.局部变量 文本, 文本型, , , 
.局部变量 开始时间, 整数型, , , 

赋值 (., “”)

赋值 (开始时间, 取启动时间 ())

赋值 (文本数组, 分割文本 (., , ))
赋值 (文本个数, 取数组成员数 (文本数组))
.判断开始 (大于 (组选数, 文本个数))
    信息框 (“组选数 超出范围!”, 0, )
    返回 ()
.默认
    
.判断结束

冒泡排序 (文本数组) ' 将待选数排序

重定义数组 (数据编号数组, 假, 文本个数, 1)
.变量循环首 (1, 文本个数, 1, i)
    赋值 (数据编号数组 [i] [1], 到整数 (文本数组 [i])) ' 将排序后的数据存入数组，第一维是数据的编号
.变量循环尾 ()
 ' 暂停 ()

赋值 (位数, 组选数)
计算分组子程序 (文本个数, 组选数, 数据编号组合数组) ' 对数据的编号按要求进行组合，得到自然数（编号）M选N的所有组合
 ' 暂停 ()
重定义数组 (可能组合, 假, 取数组成员数 (数据编号组合数组), 组选数, 1) ' 定义一个数组，一维存放组别，二维存放数据编号，三维存放数据
.计次循环首 (取数组成员数 (数据编号组合数组), i) ' 存入数组
    赋值 (临时数组, 分割文本 (数据编号组合数组 [i], “，”, 组选数))
    .变量循环首 (1, 组选数, 1, j)
        赋值 (可能组合 [i] [j] [1], 到整数 (临时数组 [j]))
    .变量循环尾 ()
.计次循环尾 ()


.计次循环首 (到整数 (相除 (取数组成员数 (可能组合), 组选数)), i) ' 奇偶条件
    赋值 (奇数, 0)
    赋值 (偶数, 0)
    .计次循环首 (组选数, j)
        .判断开始 (等于 (是否奇数 (数据编号数组 [可能组合] [i] [j] [1] [1]), 1))
            赋值 (奇数, 相加 (奇数, 1))
        .默认
            赋值 (偶数, 相加 (偶数, 1))
        .判断结束
        
    .计次循环尾 ()
    .判断开始 (等于 (相除 (奇数, 偶数), 相除 (到整数 (.), 到整数 (.))))
        .计次循环首 (组选数, j)
            加入成员 (奇偶比结果数组, 数据编号数组 [可能组合] [i] [j] [1] [1])
        .计次循环尾 ()
        
    .默认
        
    .判断结束
    
.计次循环尾 ()

.判断开始 (大于 (取数组成员数 (奇偶比结果数组), 0))
    重定义数组 (奇偶比结果数组, 真, 到整数 (相除 (取数组成员数 (奇偶比结果数组), 组选数)), 组选数, 1)
.默认
    信息框 (“没有符合奇偶比要求的结果!”, 0, )
    返回 ()
.判断结束



.计次循环首 (到整数 (相除 (取数组成员数 (奇偶比结果数组), 组选数)), i) ' 结果之和 条件
    赋值 (和, 0)
    .计次循环首 (组选数, j)
        赋值 (和, 相加 (和, 奇偶比结果数组 [i] [j] [1]))
    .计次循环尾 ()
    .判断开始 (并且 (大于 (和, 到整数 (.)), 小于 (和, 到整数 (.))))
        .计次循环首 (组选数, j)
            加入成员 (和结果数组, 奇偶比结果数组 [i] [j] [1])
        .计次循环尾 ()
    .默认
        
    .判断结束
    
.计次循环尾 ()
.判断开始 (大于 (取数组成员数 (和结果数组), 0))
    重定义数组 (和结果数组, 真, 到整数 (相除 (取数组成员数 (和结果数组), 组选数)), 组选数, 1)
.默认
    信息框 (“没有符合结果之和要求的结果!”, 0, )
    返回 ()
.判断结束


赋值 (符合分解数要求, 假) ' 分解数条件
.计次循环首 (到整数 (相除 (取数组成员数 (和结果数组), 组选数)), i) ' 第i组
    赋值 (j, 0)
    .循环判断首 () ' 第i组内某2个数的组合
        赋值 (j, 相加 (j, 1))
        赋值 (k, 相加 (j, 1))
        .判断循环首 (小于或等于 (k, 组选数))
            .判断开始 (等于 (相加 (和结果数组 [i] [j] [1], 和结果数组 [i] [k] [1]), 到整数 (.)))
                赋值 (符合分解数要求, 真)
                跳出循环 () ' 找到一个就跳出本层
            .默认
                
            .判断结束
            赋值 (k, 相加 (k, 1))
        .判断循环尾 ()
        .判断开始 (等于 (符合分解数要求, 真))
            跳出循环 () ' 再跳出一层
        .默认
            
        .判断结束
        
    .循环判断尾 (小于 (j, 组选数))
    .判断开始 (等于 (符合分解数要求, 真)) ' 将第i组加入分解数结果数组
        .计次循环首 (组选数, m)
            加入成员 (分解数结果数组, 和结果数组 [i] [m] [1])
        .计次循环尾 ()
        赋值 (符合分解数要求, 假) ' 复位
    .默认
        
    .判断结束
    
.计次循环尾 ()
.判断开始 (大于 (取数组成员数 (分解数结果数组), 0))
    重定义数组 (分解数结果数组, 真, 到整数 (相除 (取数组成员数 (分解数结果数组), 组选数)), 组选数, 1)
.默认
    信息框 (“没有符合分解数要求的结果!”, 0, )
    返回 ()
.判断结束



赋值 (., 相加 (“耗  时：”, 到文本 (相减 (取启动时间 (), 开始时间)), “ 毫秒”, #换行符, “共找到：”, 到文本 (相除 (取数组成员数 (分解数结果数组), 组选数)), “ 组”))


.变量循环首 (1, 到整数 (相除 (取数组成员数 (分解数结果数组), 组选数)), 1, i)
    .变量循环首 (1, 组选数, 1, j)
        赋值 (文本, 相加 (文本, 到文本 (分解数结果数组 [i] [j] [1]), “,”))
    .变量循环尾 ()
    输出调试文本 (文本)
    赋值 (文本, “”)
.变量循环尾 ()
输出调试文本 (“完成”)
 ' 暂停 ()

.子程序 计算分组子程序, 空白型, , 
.参数 参数自然数, 整数型, , 
.参数 参数组合数个数, 整数型, , 
.参数 参数结果数组, 文本型, 参考 数组, 

.局部变量 循环变量甲, 整数型, , , 
.局部变量 循环变量乙, 整数型, , , 
.局部变量 储存文本, 文本型, , , 


赋值 (循环变量甲, 参数自然数)
 ' 顺序选组合的最大数
.判断循环首 (大于或等于 (循环变量甲, 参数组合数个数))
    赋值 (数组组合 [参数组合数个数], 循环变量甲)
     ' 组合中还有其他元素
    .如果 (大于 (参数组合数个数, 1))
        计算分组子程序 (相减 (循环变量甲, 1), 相减 (参数组合数个数, 1), 参数结果数组)
    .否则
         ' 将数组数位定位
        赋值 (循环变量乙, 位数)
        赋值 (储存文本, “”)
         ' 找到一个组合将其循环显示分组的数
        .判断循环首 (大于或等于 (循环变量乙, 1))
             ' 得到储存文本
            赋值 (储存文本, 相加 (储存文本, 到文本 (数组组合 [循环变量乙]), “，”))
            赋值 (循环变量乙, 相减 (循环变量乙, 1))
        .判断循环尾 ()
         ' 显示列表框.加入项目 (储存文本, )
        加入成员 (参数结果数组, 储存文本)
         ' 累计个数
        赋值 (计次, 相加 (计次, 1))
    .如果结束
    赋值 (循环变量甲, 相减 (循环变量甲, 1))
.判断循环尾 ()

.子程序 是否奇数, 整数型, , 
.参数 参数, 整数型, , 

.如果 (等于 (求余数 (参数, 2), 1))
    返回 (1)
.否则
    返回 (0)
.如果结束



.子程序 冒泡排序, 空白型, , 
.参数 参数数据组, 文本型, 参考 数组, 

.局部变量 交换, 逻辑型, , , 
.局部变量 未比数据数量, 整数型, 静态, , 
.局部变量 交换变量, 文本型, , , 
.局部变量 位置变量, 整数型, , , 

 ' 如果不为真，下面不会进入判断循环
赋值 (交换, 真)
 ' 也就是下面变量循环第一次的变量目标值
赋值 (未比数据数量, 取数组成员数 (参数数据组))
.判断循环首 (等于 (交换, 真))
    赋值 (交换, 假)
     ' 比较的次数比数据数量少一
    .变量循环首 (1, 相减 (未比数据数量, 1), 1, 位置变量)
         ' 前一个数小于后一个数，就将两数的位置交换
        .如果真 (小于 (到整数 (参数数据组 [位置变量]), 到整数 (参数数据组 [相加 (位置变量, 1)])))
             ' 数据组可以是变量、文件、数据库（这里用的是变量）
            赋值 (交换变量, 参数数据组 [位置变量])
            赋值 (参数数据组 [位置变量], 参数数据组 [相加 (位置变量, 1)])
             ' 以上3行代码是交换用的
            赋值 (参数数据组 [相加 (位置变量, 1)], 交换变量)
            赋值 (交换, 真)
        .如果真结束
        
    .变量循环尾 ()
    赋值 (未比数据数量, 相减 (未比数据数量, 1))
.判断循环尾 ()

.子程序 _奇数编辑框_内容被改变, 空白型, , 
赋值 (组选数, 相加 (到整数 (.), 到整数 (.)))
赋值 (., 到文本 (组选数))

.子程序 _偶数编辑框_内容被改变, 空白型, , 
赋值 (组选数, 相加 (到整数 (.), 到整数 (.)))
赋值 (., 到文本 (组选数))


 ' 不属于任何一个程序集、类模块的函数：
