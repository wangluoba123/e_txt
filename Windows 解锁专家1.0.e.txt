 ' 文件类型：Windows窗口程序

 ' 程序名称：超极多功能任务管理器
 ' 程序描述：内部测试版

 ' 程序作者：hacker0058
 ' 邮政编码：433022
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：hacker0058.sina.com
 ' 主页地址：
 ' 版权声明：QQ:23453161
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 0
    宽度 = 493
    高度 = 451
    鼠标指针 = { 0,127,0,0 }
    标记 = “”
    可视 = 假
    禁止 = 假
    边框 = 0
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 假
    随意移动 = 假
    外形 = 0
    总在最前 = 真
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 已保存到：D:\易语言学习\Data\Windows 解锁专家1.0.e\_启动窗口_图标.ico
    背景音乐 =  ' 空
    标题 = “”
    帮助文件名 = “”

窗口 窗口新任务
    左边 = 50
    顶边 = 50
    宽度 = 369
    高度 = 162
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 真
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “创建新任务”
    帮助文件名 = “”

窗口 窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 369
    高度 = 426
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 0
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “”
    帮助文件名 = “”



.图片 文件夹16, " ' 已保存到：D:\易语言学习\Data\Windows 解锁专家1.0.e\文件夹16", , 
.图片 com, " ' 已保存到：D:\易语言学习\Data\Windows 解锁专家1.0.e\com", , 
.图片 dll, " ' 已保存到：D:\易语言学习\Data\Windows 解锁专家1.0.e\dll", , 
.常量 PAGE_READWRITE, "4", , 
.常量 PAGE_EXECUTE_READWRITE, "64", , 
.常量 PAGE_EXECUTE_READ, "32", , 
.常量 WH_GETMESSAGE, "3", , 
.常量 FILE_MAP_ALL_ACCESS, "983071", , 
.常量 WM_HOTKEY, "786", , 
.常量 PM_REMOVE, "1", , 
.常量 WM_QUIT, "18", ,  
.常量 WM_CLOSE, "16", , 
.常量 逗号, "“"”", , 
.常量 树形框插入项目_在根部插入, "1", 隐藏, 
.常量 树形框插入项目_在列表首部插入, "2", 隐藏, 
.常量 树形框插入项目_在列表尾部插入, "3", 隐藏, 
.常量 树形框插入项目_按字母顺序排列插入, "4", 隐藏, 
.常量 SE_BACKUP_NAME, "“SeBackupPrivilege”", 隐藏, 
.常量 SE_RESTORE_NAME, "“SeRestorePrivilege”", 隐藏, 
.常量 SE_SHUTDOWN_NAME, "“SeShutdownPrivilege”", 隐藏, 关机
.常量 SE_DEBUG_NAME, "“SeDebugPrivilege”", 隐藏, 调试
.常量 TB_HIDEBUTTON, "1028", 隐藏, 
.常量 TB_GETBUTTONTEXTA, "1069", 隐藏, 
.常量 TB_BUTTONCOUNT, "1048", 隐藏, 
.常量 TB_GETBUTTONINFOA, "1089", 隐藏, 
.常量 STANDARD_RIGHTS_REQUIRED, "983040", 隐藏, 
.常量 SYNCHRONIZE, "1048576", 隐藏, 
.常量 PROCESS_ALL_ACCESS, "2035711", 隐藏, STANDARD_RIGHTS_REQUIRED or SYNCHRONIZE or 4095
.常量 PAGE_READWRITE, "4", 隐藏, 
.常量 TBIF_BYINDEX, "2147483648", 隐藏, 
.常量 TBIF_COMMAND, "32", 隐藏, 
.常量 TBIF_STATE, "4", 隐藏, 
.常量 TBIF_STYLE, "8", 隐藏, 
.常量 TBIF_IMAGE, "1", 隐藏, 
.常量 TBIF_LPARAM, "16", 隐藏, 
.常量 TBIF_SIZE, "64", 隐藏, 
.常量 TBIF_TEXT, "2", 隐藏, 
.常量 MEM_COMMIT, "4096", 隐藏, 
.常量 MEM_DECOMMIT, "16384", 隐藏, 
.常量 _快照类型_线程, "4", 隐藏, 
.常量 _线程入口结构长度, "28", 隐藏, 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 4 系统核心支持库
 ' iext2 AF6AD80AA4244A59AFB3D83ECF5173CC 1 1 扩展界面支持库二
 ' iext3 {B6F7542F-B8FE-46a8-9605-98856A687097} 2 6 扩展界面支持库三
 ' iext 27bb20fdd3e145e4bee3db39ddd6e64c 1 2 扩展界面支持库一
 ' shell 52F260023059454187AF826A3C07AF2A 1 0 操作系统界面功能支持库
 ' shellEx DA19AC3ADD2F4121AAD84AC5FBCAFC71 2 1 扩展功能支持库一
 ' EThread 5F99C1642A2F4e03850721B4F5D7C3F8 1 1 多线程支持库
 ' xplib 7F54B9CE8887428dBA9CEEB94CEF4C72 1 6 XP风格界面库



 ' 所需要的模块
 ' 树型框操作类 $树型框操作类.ec
 ' 模块_提升进程权限 $提升进程权限.ec
 ' 超级列表快速排序 D:\Program Files\e\ecom\模块_超级列表框.ec
 ' 模块_隐藏托盘图标 $模块_隐藏托盘图标.ec
 ' 进程与线程操作模块 $进程与线程操作.ec
 ' 控制台交互操作模块 $控制台交互操作模块.ec
 ' 禁止多次运行程序并可选择是否还原已最小化运行窗口 $模块_禁止多次运行.ec


数据类型 模块信息输出, , 
    .成员 结构大小, 整数型, , , 指定结构的大小,在调用Module32First前需要设置，否则将会失败(我们直接使用已知大小548)
    .成员 模块标识, 整数型, , , 模块号
    .成员 模块进程标识, 整数型, , , 包含本模块的进程号
    .成员 模块全局计数, 整数型, , , 本模块的全局引用计数
    .成员 上下引用计数, 整数型, , , 包含模块的进程上下文中的模块引用计数
    .成员 模块地址, 整数型, , , 模块基地址
    .成员 模块大小, 整数型, , , 模块大小（字节数）
    .成员 模块句柄, 整数型, , , 包含模块的进程上下文中的hModule句柄
    .成员 模块名称, 字节型, , "256", 模块名称
    .成员 模块对应文件名, 字节型, , "256", 模块对应的文件名和路径

数据类型 进程信息输出, , 
    .成员 结构大小, 整数型, , , 结构的大小(这里使用已知大小296)
    .成员 引用次数, 整数型, , , 引用计数
    .成员 进程标识, 整数型, , , 进程号
    .成员 进程堆栈标识, 整数型, , , 进程的堆号，只对Toolhelp函数有意义，并不是一个有效句柄
    .成员 进程模块标识, 整数型, , , 进程的模块号，只对Toolhelp函数有意义，并不是一个有效句柄
    .成员 调用线程数, 整数型, , , 进程中包括的线程数
    .成员 母进程标识, 整数型, , , 进程的母进程
    .成员 线程优先级, 整数型, , , 进程的线程的基优先级，所有此进程创建的线程将基于此优先级
    .成员 线程标志, 整数型, , , 保留，没有使用
    .成员 进程对应文件名, 字节型, , "256", 进程所对应的文件及路径

数据类型 虚拟信息, , MEMORY_BASIC_INFORMATION
    .成员 BaseAddress, 整数型, , , 
    .成员 AllocationBase, 整数型, , , 
    .成员 AllocationProtect, 整数型, , , 
    .成员 RegionSize, 整数型, , , 
    .成员 State, 整数型, , , 
    .成员 Protect, 整数型, , , 
    .成员 lType, 整数型, , , 

数据类型 文件属性, , 
    .成员 cbSize, 空白型, , , 
    .成员 fMask, 空白型, , , 
    .成员 hwnd, 空白型, , , 
    .成员 lpVerb, 文本型, , , 
    .成员 lpFile, 文本型, , , 
    .成员 lpParameters, 文本型, , , 
    .成员 lpDirectory, 文本型, , , 
    .成员 nShow, 空白型, , , 
    .成员 hInstApp, 空白型, , , 
    .成员 lpIDList, 空白型, , , 
    .成员 lpClass, 文本型, , , 
    .成员 hkeyClass, 空白型, , , 
    .成员 dwHotKey, 空白型, , , 
    .成员 hIcon, 空白型, , , 
    .成员 hProcess, 空白型, , , 

数据类型 进程内存统计_, , PROCESS_MEMORY_COUNTERS
    .成员 结构大小, 整数型, , , cb
    .成员 页错误数量, 整数型, , , PageFaultCount
    .成员 最高工作设置大小, 整数型, , , PeakWorkingSetSize
    .成员 当前工作设置大小, 整数型, , , WorkingSetSize
    .成员 最高页使用, 整数型, , , QuotaPeakPagedPoolUsage
    .成员 当前页使用, 整数型, , , QuotaPagedPoolUsage
    .成员 最高非页使用, 整数型, , , QuotaPeakNonPagedPoolUsage
    .成员 当前非页使用, 整数型, , , QuotaPeakNonPagedPoolUsage
    .成员 页文件使用, 整数型, , , PagefileUsage
    .成员 最高页文件使用, 整数型, , , PeakPagefileUsage

数据类型 GUI线程信息_, , GUITHREADINFO
    .成员 结构大小, 整数型, , , cbSize
    .成员 标志, 整数型, , , flags
    .成员 当前句柄, 整数型, , , hwndActive
    .成员 焦点句柄, 整数型, , , hwndFocus
    .成员 捕获句柄, 整数型, , , hwndCapture
    .成员 当前菜单句柄, 整数型, , , hwndMenuOwner
    .成员 移动大小句柄, 整数型, , , hwndMoveSize
    .成员 插入符句柄, 整数型, , , hwndCaret
    .成员 左边, 整数型, , , Left
    .成员 顶边, 整数型, , , Top
    .成员 右边, 整数型, , , Right
    .成员 底边, 整数型, , , Bottom

数据类型 隐藏监视信息, , 
    .成员 标题, 文本型, , , 
    .成员 类型, 整数型, , , 0为托盘,1为窗口

数据类型 矩形数据_, , 
    .成员 左边, 整数型, , , 
    .成员 顶边, 整数型, , , 
    .成员 右边, 整数型, , , 
    .成员 底边, 整数型, , , 

数据类型 鼠标位置, , 
    .成员 横向位置, 空白型, , , 
    .成员 纵向位置, 空白型, , , 

数据类型 格式文本, , 
    .成员 左边, 文本型, , , 左,文件名
    .成员 右边, 文本型, , , 右,文件类型

数据类型 树型框结构, 公开, 
    .成员 项目文本, 文本型, , , 
    .成员 图片索引, 整数型, , , 
    .成员 选中图片索引, 整数型, , , 
    .成员 项目数值, 整数型, , , 
    .成员 加粗扩展, 整数型, , , 0、普通，1、加粗，2、扩展，3、加粗+扩展
    .成员 缩进层次, 整数型, , , 

数据类型 项目数据, 公开, 
    .成员 项目文本, 文本型, , , 项目文本
    .成员 图片索引, 整数型, , , 图象
    .成员 选中图片索引, 整数型, , , 选择图象
    .成员 项目数值, 整数型, , , 项目数值

数据类型 TBBUTTONINFO, 公开, 
    .成员 cbSize, 整数型, , , 32
    .成员 dwMask, 整数型, , , 
    .成员 idCommand, 整数型, , , 
    .成员 iImage, 整数型, , , 
    .成员 fsState, 字节型, , , 
    .成员 fsStyle, 字节型, , , 
    .成员 cx, 短整数型, , , 
    .成员 lParam, 整数型, , , 
    .成员 pszText, 整数型, , , 
    .成员 cchText, 整数型, , , 

数据类型 基本进程信息, 公开, 
    .成员 进程ID, 整数型, , , 
    .成员 进程句柄, 整数型, , , 
    .成员 进程名, 文本型, , , 
    .成员 进程全路径名, 文本型, , , 

数据类型 进程信息参考, 公开, 
    .成员 窗口标题, 文本型, , , 
    .成员 窗口句柄, 整数型, , , 
    .成员 进程ID, 整数型, , , 
    .成员 父进程ID, 整数型, , , 
    .成员 进程句柄, 整数型, , , 
    .成员 线程数, 整数型, , , 
    .成员 文件名, 文本型, , , 
    .成员 文件路径, 文本型, , , 

数据类型 基本窗口信息, 公开, 
    .成员 窗口句柄, 整数型, , , 
    .成员 窗口标题, 文本型, , , 

数据类型 基本DLL模块信息, 公开, 
    .成员 模块基址, 整数型, , , 
    .成员 模块基址大小, 整数型, , , 
    .成员 模块句柄, 整数型, , , 
    .成员 模块文件名, 文本型, , , 
    .成员 模块完整路径, 文本型, , , 

.全局变量 倒记时, 日期时间型, , , 
.全局变量 监视内容, 隐藏监视信息, , "0", 
.全局变量 打开记录, 文本型, , "0", 
.全局变量 图片组_活动窗口, 字节集, , , 
.全局变量 进程管理类, 进程管理类, , , 
.全局变量 隐藏窗口类, 隐藏窗口类, , , 
.全局变量 图片组_隐藏窗口, 字节集, , , 
.全局变量 系统类别, 整数型, , , 
.全局变量 窗口界面热键, 整数型, , , 
.全局变量 鼠标句柄热键, 整数型, , , 
.全局变量 鼠标位置, 鼠标位置, , , 
.全局变量 CMD进程, 整数型, , , 
.全局变量 按钮, 整数型, , , 

.DLL命令 创建进程快照, 整数型, "", "CreateToolhelp32Snapshot", , 
    .参数 快照类型, 整数型, , 
    .参数 进程标识, 整数型, , 

.DLL命令 开始进程快照, 整数型, "", "Process32First", , 
    .参数 快照句柄, 整数型, , 
    .参数 线程信息输出变量, 进程信息输出, , 

.DLL命令 关闭句柄, 空白型, "", "CloseHandle", , 
    .参数 线程句柄, 整数型, , 

.DLL命令 继续进程快照, 整数型, "", "Process32Next", , 
    .参数 快照句柄, 整数型, , 
    .参数 线程信息输出变量, 进程信息输出, , 

.DLL命令 获取模块完整路径, 整数型, "", "GetModuleFileNameA", , 
    .参数 实例句柄, 整数型, , 模块的句柄/DLL模块/应用程序的实例句柄
    .参数 字串缓冲区, 文本型, , 指定一个存放路径的文本变量
    .参数 缓冲区长度, 整数型, , 指定字串缓冲区(返回的文件路径)长度

.DLL命令 打开进程句柄, 整数型, "", "OpenProcess", , 
    .参数 访问方法, 整数型, , 
    .参数 子程序继承, 逻辑型, , 是否由子程序继承
    .参数 进程标识符, 整数型, , 

.DLL命令 继续模块快照, 整数型, "", "Module32Next", , 
    .参数 快照句柄, 整数型, , 
    .参数 模块信息输出变量, 模块信息输出, , 

.DLL命令 开始模块快照, 整数型, "", "Module32First", , 
    .参数 快照句柄, 整数型, , 
    .参数 模块信息输出变量, 模块信息输出, , 

.DLL命令 内存复制, 空白型, "", "RtlMoveMemory", , 
    .参数 目标数据, 字节集, 传址, 
    .参数 源数据, 整数型, , 
    .参数 内存长度, 整数型, , 

.DLL命令 判断取版本信息缓冲区大小, 整数型, "VERSION.DLL", "GetFileVersionInfoSizeA", , 
    .参数 文件名称, 文本型, , 
    .参数 文件句柄, 整数型, , 添入0

.DLL命令 取模块文件版本信息, 整数型, "VERSION.DLL", "GetFileVersionInfoA", , 
    .参数 文件名称, 文本型, , 
    .参数 指定句柄, 整数型, , win32中未用
    .参数 缓冲变量长度, 整数型, , 
    .参数 装载缓冲变量, 字节集, 传址, 

.DLL命令 取版本信息, 整数型, "VERSION.DLL", "VerQueryValueA", , 
    .参数 内存块首区域位置, 字节集, 传址, 
    .参数 版本信息相对路径, 文本型, 传址, 
    .参数 装载缓冲变量, 整数型, 传址, 
    .参数 缓冲变量长度, 整数型, 传址, 

.DLL命令 结束进程, 逻辑型, "", "TerminateProcess", , 
    .参数 指定进程, 整数型, , 
    .参数 退出标记, 整数型, , 

.DLL命令 API_取得进程完整路径, 整数型, "Psapi.dll", "GetModuleFileNameExA", , 
    .参数 hProcess, 整数型, , 进程句柄
    .参数 hModule, 整数型, , 模块句柄,这里为0
    .参数 lpFilename, 文本型, , 缓存
    .参数 nSize, 整数型, , 缓存大小

.DLL命令 取得Win目录_, 整数型, "kernel32.dll", "GetWindowsDirectoryA", , 
    .参数 缓冲区, 文本型, , 
    .参数 尺寸, 整数型, , 

.DLL命令 判断窗口状态_, 逻辑型, "user32.dll", "IsWindowEnabled", , 判断窗口是否处于活动状态
    .参数 窗口句柄, 整数型, , hwnd,待检测窗口的句柄

.DLL命令 判断窗口可见性_, 逻辑型, "user32.dll", "IsWindowVisible", , 判断窗口是否可见
    .参数 窗口句柄, 整数型, , hwnd,要测试的那个窗口的句柄

.DLL命令 ShowWindow, 空白型, "user32", "ShowWindow", , 
    .参数 hwnd, 整数型, , 注明：窗口句柄，要向这个窗口应用由nCmdShow指定的命令。
    .参数 nCmdShow, 整数型, , 为窗口指定可视性方面的一个命令。请用下述任何一个常数;SW_HIDE(0)：隐藏窗口，活动状态给令一个窗口;SW_MINIMIZE：最小化窗口，活动状态给令一个窗口;SW_RESTORE(9)：用原来的大小和位置显示一个窗口，同时令其进入活动状态;SW_SHOW：用当前的大小和位置显示一个窗口，同时令其进入活动状态;SW_SHOWMAXIMIZED：最大化窗口，并将其激活;SW_SHOWMINIMIZED：最小化窗口，并将其激活;SW_SHOWMINNOACTIVE：最小化一个窗口，同时不改变活动窗口;SW_SHOWNA：用当前的大小和位置显示一个窗口，不改变活动窗口;SW_SHOWNOACTIVATE：用最近的大小和位置显示一个窗口，同时不改变活动窗口;SW_SHOWNORMAL：与SW_RESTORE相同;。

.DLL命令 判断窗口句柄_, 逻辑型, "user32.dll", "IsWindow", , 判断一个窗口句柄是否有效
    .参数 窗口句柄, 整数型, , hwnd,待检查窗口的句柄

.DLL命令 WindowFromPoint, 整数型, "", "WindowFromPoint", , 
    .参数 xPoint, 整数型, , 
    .参数 yPoint, 整数型, , 

.DLL命令 SendMessage, 整数型, "user32", "SendMessageA", , 
    .参数 hwnd, 整数型, , 
    .参数 wMsg, 整数型, , 
    .参数 wParam, 整数型, , 
    .参数 lParam, 文本型, , 

.DLL命令 PostMessage, 整数型, "user32", "PostMessageA", , 
    .参数 hwnd, 整数型, , 
    .参数 wMsg, 整数型, , 
    .参数 wParam, 整数型, , 
    .参数 lParam, 整数型, , 

.DLL命令 取进程标识符, 整数型, "user32", "GetWindowThreadProcessId", , 公开
    .参数 窗口句柄, 整数型, , 指定窗口句柄
    .参数 进程ID, 整数型, 传址, 

.DLL命令 修改虚拟保护, 逻辑型, "kernel32", "VirtualProtectEx", , 
    .参数 hProcess, 整数型, , 对象的进程句柄,可以使用函数 OpenProcess() 返回。
    .参数 lpAddress, 整数型, , 虚拟信息.BaseAddress
    .参数 dwSize, 整数型, , 虚拟信息.RegionSize
    .参数 flNewProtect, 整数型, , 修改类型,#PAGE_EXECUTE_READWRITE 64为可读写模式
    .参数 lpflOldProtect, 整数型, 传址, 虚拟信息.Protect

.DLL命令 返回虚拟信息, 整数型, "kernel32", "VirtualQueryEx", , 
    .参数 hProcess, 整数型, , 对象的进程句柄,可以使用函数 OpenProcess() 返回。
    .参数 lpAddress, 整数型, , 对象指针地址
    .参数 lpBuffer, 虚拟信息, , 返回的虚拟信息
    .参数 dwLength, 整数型, , 信息长度,已知 28

.DLL命令 取程序或DLL句柄, 整数型, "kernel32", "GetModuleHandleA", , 获取一个应用程序或动态链接库的模块句柄  如执行成功成功，则返回模块句柄。零表示失败。会设置GetLastError
    .参数 模块名, 文本型, , 指定模块名，这通常是与模块的文件名相同的一个名字。例如，NOTEPAD.EXE程序的模块文件名就叫作NOTEPAD;

.DLL命令 取DLL函数地址, 整数型, "kernel32", "GetProcAddress", , 返回函数地址  成功返回DLL库模块内函数地址
    .参数 DLL句柄, 整数型, , DLL库模块的句柄，可以调用 LoadLibrary 函数返回。
    .参数 DLL库模块内函数名, 文本型, , DLL库模块内函数名

.DLL命令 写内存字节, 逻辑型, "kernel32", "WriteProcessMemory", , 在指定进程中写内存
    .参数 hProcess, 整数型, , 对象的进程句柄,可以使用函数 OpenProcess() 返回。
    .参数 起始写入地址, 整数型, , 起始写入地址
    .参数 要写入的内容, 字节集, , 本参数的类型也能是“字节”型。
    .参数 写入长度, 整数型, , 写入的数据长度。
    .参数 实际写入长度, 整数型, , 实际写入的数据长度，为0则忽略。

.DLL命令 api_GetProcAddress, 子程序指针, "", "GetProcAddress", , 
    .参数 hMod, 整数型, , 
    .参数 lpFileName, 文本型, , 

.DLL命令 api_SetWindowsHookEx, 整数型, "", "SetWindowsHookExA", , 
    .参数 idHook, 整数型, , 
    .参数 lpfn, 子程序指针, , 
    .参数 nMod, 整数型, , 
    .参数 dwThreadID, 整数型, , 

.DLL命令 释放动态链接库_, 整数型, "kernel32", "FreeLibrary", , 
    .参数 库句柄, 整数型, , hLibModule，要释放的一个库句柄

.DLL命令 api_LoadLibraryA, 整数型, "", "LoadLibraryA", , 
    .参数 lpFileName, 文本型, , 

.DLL命令 api_ExitWindowsEx, 整数型, "user32.dll", "ExitWindowsEx", , 退出windows，并用特定的选项重新启动
    .参数 标志, 整数型, , 0.注销; 1.关机; 2.重启; 3.待机
    .参数 保留值, 整数型, , dwReserved,保留，设为零

.DLL命令 取当前进程伪句柄, 整数型, "kernel32", "GetCurrentProcess", , 

.DLL命令 释放内存空间, 整数型, "kernel32.dll", "VirtualFreeEx", , 释放申请的内存地址空间
    .参数 线程标识, 整数型, , 可以使用函数 OpenProcess() 返回。
    .参数 内存空间地址, 整数型, , 用 VirtualAllocEx() 申请的内存空间地址。
    .参数 dwSize, 整数型, 传址, 0
    .参数 dwFreeType, 整数型, , 32768

.DLL命令 申请内存空间, 整数型, "kernel32.dll", "VirtualAllocEx", , 申请内存地址空间  成功返回申请的内存空间的起始地址。
    .参数 线程标识, 整数型, , 可以使用函数 OpenProcess() 返回。
    .参数 lpAddress, 整数型, , 
    .参数 空间大小, 整数型, 传址, 申请的内存空间大小
    .参数 flAllocationType, 整数型, , 
    .参数 共享方式, 整数型, , 申请的内存空间共享方式，PAGE_READWRITE（可读写方式）；

.DLL命令 枚举窗口, 逻辑型, "", "EnumWindows", , 
    .参数 枚举过程, 子程序指针, , 
    .参数 参数, 文本型, , 

.DLL命令 EnumChildWindows, 空白型, "", "EnumChildWindows", , 
    .参数 窗口句柄, 整数型, , 欲枚举子窗口的父窗口的句柄
    .参数 枚举过程, 子程序指针, , 
    .参数 参数, 整数型, , 

.DLL命令 EnableWindow, 整数型, "", "EnableWindow", , 
    .参数 窗口句柄, 整数型, , 窗口句柄
    .参数 参数, 整数型, , 非零允许窗口，零禁止

.DLL命令 关闭全局钩子, 逻辑型, "", "UnhookWindowsHookEx", , 
    .参数 hhook, 整数型, , 

.DLL命令 系统对话框, 空白型, "", "ShellExecuteEx", , 
    .参数 属性, 文件属性, 传址, 

.DLL命令 退出线程_, 整数型, "kernel32", "ExitThread", , 
    .参数 线程句柄, 整数型, , 

.DLL命令 取进程内存信息_, 整数型, "psapi.dll", "GetProcessMemoryInfo", , 
    .参数 进程句柄, 整数型, , 
    .参数 进程内存结构, 进程内存统计_, , 
    .参数 结构大小, 整数型, , 

.DLL命令 运行远程线程, 整数型, "kernel32", "CreateRemoteThread", , 在另一进程中建立并运行一个远程的线程  成功返回新线程句柄，失败返回NULL，并且可调用GetLastError获得错误值。
    .参数 进程句柄, 整数型, , 进程句柄
    .参数 线程安全描述字, 整数型, , 线程安全描述字，指向SECURITY_ATTRIBUTES结构的指针
    .参数 线程栈大小, 整数型, , 线程栈大小，以字节表示
    .参数 远程进程指针, 整数型, , 一个LPTHREAD_START_ROUTINE类型的指针，指向在远程进程中执行的函数地址
    .参数 传入参数, 整数型, , 传入参数
    .参数 其它标志, 整数型, , 创建线程的其它标志
    .参数 线程身份标志, 整数型, , 线程身份标志，如果为NULL

.DLL命令 监测对象, 整数型, "kernel32", "WaitForSingleObject", , 监测一个对象
    .参数 hHandle, 整数型, , 
    .参数 dwMilliseconds, 整数型, , 

.DLL命令 api_PostThreadMessage, 整数型, "user32", "PostThreadMessageA", , 将一条消息投递给应用程序
    .参数 idThread, 空白型, , 用于接收消息的那个线程的标识符 
    .参数 msg, 空白型, , 消息标识符 
    .参数 wParam, 空白型, , 具体由消息决定
    .参数 ByVal, 空白型, , 具体由消息决定

.DLL命令 取菜单_, 整数型, "user32", "GetMenu", , 
    .参数 窗口句柄, 整数型, , 

.DLL命令 取窗口标题_, 整数型, "user32.dll", "GetWindowTextA", , 
    .参数 窗口句柄, 整数型, , 
    .参数 缓冲区, 文本型, , 
    .参数 缓冲尺寸, 整数型, , 

.DLL命令 寻找顶级窗口_, 整数型, "user32.dll", "FindWindowA", , FindWindow,寻找窗口列表中第一个符合指定条件的顶级窗口
    .参数 窗口类名, 文本型, , lpClassName，参见相关帮助
    .参数 窗口文本, 文本型, , lpWindowName，参见相关帮助

.DLL命令 寻找子窗口_, 整数型, "user32.dll", "FindWindowExA", , FindWindowEx,在窗口列表中寻找与指定条件相符的第一个子窗口
    .参数 窗口句柄1, 整数型, , hWnd1，参见相关帮助
    .参数 窗口句柄2, 整数型, , hWnd2，参见相关帮助
    .参数 欲搜索的类名1, 文本型, , lpsz1，欲搜索的类名。“”表示忽略
    .参数 欲搜索的类名2, 文本型, , lpsz2，欲搜索的类名。“”表示忽略

.DLL命令 api_OpenProcess, 整数型, "", "OpenProcess", 公开, 
    .参数 访问方法, 整数型, , 指定这个句柄要求的访问方法
    .参数 子进程继承, 整数型, , 如句柄能够由子进程继承，则为TRUE，0
    .参数 进程标识符, 整数型, , 要打开那个进程的进程标识符

.DLL命令 解除鼠标限制, 整数型, "user32", "ClipCursor", , 
    .参数 lpRect, 整数型, 传址, RECT，指定一个矩形，用像素屏幕坐标系统表示。鼠标指针必须在这个区域内运动

.DLL命令 限制鼠标指针, 整数型, "user32", "ClipCursor", , 
    .参数 lpRect, 矩形数据_, 传址, RECT，指定一个矩形，用像素屏幕坐标系统表示。鼠标指针必须在这个区域内运动

.DLL命令 GetClassName, 整数型, "user32", "GetClassNameA", , 
    .参数 窗口句柄, 整数型, , 
    .参数 缓冲区, 文本型, 传址, 
    .参数 缓冲区长度, 整数型, , 

.DLL命令 消息列队是否存在待决事件_, 逻辑型, "user32", "GetQueueStatus", , 
    .参数 标志, 整数型, , 

.DLL命令 API_SendMessageCallback, 空白型, "", "SendMessageCallbackA", , 
    .参数 hwnd, 整数型, , 
    .参数 wMsg, 整数型, , 
    .参数 wParam, 整数型, , 
    .参数 lParam, 整数型, , 
    .参数 lpResultCallBack, 子程序指针, , 指定函数地址
    .参数 dwData, 整数型, , 用户自定义值

.DLL命令 取父窗口, 整数型, "", "GetParent", , 
    .参数 窗口句柄, 整数型, , 欲测试的窗口的句柄

.DLL命令 判断文件是否可以执行, 逻辑型, "kernel32", "GetBinaryTypeA", , 
    .参数 文件名, 文本型, , 
    .参数 文件类型, 整数型, 传址, 

.DLL命令 查找关联文件名_, 整数型, "shell32.dll", "FindExecutableA", , 
    .参数 程序名, 文本型, , lpFile，参见相关帮助
    .参数 完整路径, 文本型, , lpDirectory，要使用的默认目录的完整路径
    .参数 字串缓冲区, 文本型, , lpResult，参见相关帮助

.DLL命令 HideProcess, 整数型, "HideProcess.dll", "HideProcess", , 隐藏进程

.DLL命令 安装反关机勾子, 整数型, "AntiShutDown.dll", "InstallHook", , 

.DLL命令 御载反关机勾子, 整数型, "AntiShutDown.dll", "UninstallHook", , 

.DLL命令 打开进程, 整数型, "", "OpenProcess", 公开, 
    .参数 访问方法, 整数型, , 指定这个句柄要求的访问方法,PROCESS_CREATE_THREAD（允许远程创建线程）；PROCESS_VM_OPERATION （允许远程VM操作）；PROCESS_VM_WRITE（允许远程VM写）；2035711 完全访问
    .参数 子进程继承, 整数型, , 如句柄能够由子进程继承，则为TRUE，0
    .参数 进程标识符, 整数型, , 要打开那个进程的进程标识符,使用一个变量装载进程ID。

.DLL命令 关闭内核对象, 整数型, "kernel32", "CloseHandle", 公开, 关闭一个内核对象。其中包括文件、文件映射、进程、线程、安全和同步对象等。涉及文件处理时，这个函数通常与vb的close命令相似。应尽可能的使用close，因为它支持vb的差错控制。注意这个函数使用的文件句柄与vb的文件编号是完全不同的  非零表示成功，零表示失败。会设置GetLastError
    .参数 对象句柄, 整数型, , 欲关闭的一个对象的句柄;

.DLL命令 FindWindow, 整数型, "user32", "FindWindowA", 公开, 
    .参数 lpClassName, 文本型, , 
    .参数 lpWindowName, 整数型, , 

.DLL命令 FindWindowEx, 整数型, "user32", "FindWindowExA", 公开, 
    .参数 hWnd1, 整数型, , 
    .参数 hWnd2, 整数型, , 
    .参数 lpsz1, 文本型, , 
    .参数 lpsz2, 整数型, , 

.DLL命令 SendMessage, 整数型, "user32", "SendMessageA", 公开, 
    .参数 hwnd, 整数型, , 
    .参数 wMsg, 整数型, , 
    .参数 wParam, 整数型, , 要隐藏的图标，从0开始
    .参数 lParam, 整数型, , Any型,根据需要可以设置成不同的类型

.DLL命令 OpenProcess, 整数型, "kernel32.dll", "OpenProcess", 公开, 
    .参数 dwDesiredAccessas, 整数型, , 
    .参数 bInheritHandle, 整数型, , 
    .参数 dwProcId, 整数型, , 

.DLL命令 DuplicateHandle, 整数型, "kernel32.dll", "DuplicateHandle", 公开, 
    .参数 hSourceProcessHandle, 整数型, , 
    .参数 hSourceHandle, 整数型, , 
    .参数 hTargetProcessHandle, 整数型, , 
    .参数 lpTargetHandle, 整数型, 传址, 
    .参数 dwDesiredAccess, 整数型, , 
    .参数 bInheritHandle, 整数型, , 
    .参数 dwOptions, 整数型, , 

.DLL命令 GetCurrentProcess, 整数型, "kernel32.dll", "GetCurrentProcess", 公开, 

.DLL命令 VirtualAllocEx, 整数型, "kernel32.dll", "VirtualAllocEx", 公开, 
    .参数 hProcess, 整数型, , 
    .参数 lpAddress, 整数型, , any
    .参数 dwSize, 整数型, , 
    .参数 flAllocationType, 整数型, , 
    .参数 flProtect, 整数型, , 

.DLL命令 WriteProcessMemory, 整数型, "kernel32.dll", "WriteProcessMemory", 公开, 
    .参数 hProcess, 整数型, , 
    .参数 lpBaseAddress, 整数型, , any
    .参数 lpBuffer, 整数型, , 
    .参数 nSize, 整数型, , 
    .参数 lpNumberOfBytesWritten, 整数型, , 

.DLL命令 ReadProcessMemory, 整数型, "kernel32.dll", "ReadProcessMemory", 公开, 
    .参数 hProcess, 整数型, , 
    .参数 lpBaseAddress, 整数型, , any
    .参数 lpBuffer, 整数型, , any
    .参数 nSize, 整数型, , 
    .参数 lpNumberOfBytesWritten, 整数型, 传址, 

.DLL命令 VirtualFreeEx2, 整数型, "kernel32.dll", "VirtualFreeEx", 公开, 
    .参数 hProcess, 整数型, , 
    .参数 lpAddress, 整数型, , 
    .参数 dwSize, 整数型, , 
    .参数 dwFreeType, 整数型, , 

.DLL命令 第一个线程, 逻辑型, "Kernel32.dll", "Thread32Next", 公开, 
    .参数 快照句柄, 整数型, , 
    .参数 线程入口结构, 未知类型0x41018477, , 

.DLL命令 下一个线程, 逻辑型, "Kernel32.dll", "Thread32Next", 公开, 
    .参数 快照句柄, 整数型, , 
    .参数 线程入口结构, 未知类型0x41018477, , 

.窗口程序集 窗口程序集1, , , 

.程序集变量 表项数, 整数型, , , 
.程序集变量 函数地址, 整数型, , , 
.程序集变量 API_BAK, 字节集, , , 
.程序集变量 进入许可证, 整数型, , , 
.程序集变量 重复运行, 整数型, , , 
.程序集变量 Tools, 逻辑型, , , 
.程序集变量 表项, 文本型, , , 
.子程序 __启动窗口_创建完毕, 空白型, , 
.局部变量 CMD, 文本型, , , 
.局部变量 运行目录, 文本型, , , 
.局部变量 返回值, 逻辑型, , , 
.局部变量 图标_, 字节集, , , 

赋值 (系统类别, 取操作系统类别 ())
.如果真 (不等于 (系统类别, 3))
    信息框 (“Windows系统的版本过低,点确定后程序将退出!”, 相加 (#警告图标, #确认钮), “警告”)
    结束 ()
.如果真结束
HideProcess ()
赋值 (重复运行, 是否能重复运行 ())
.如果真 (等于 (重复运行, 0))
    模块_禁止程序重复运行 (“@$#%^%&(^%^Windows 解锁专家 V1.0”)
.如果真结束
.如果真 (等于 (重复运行, -1))
    模块_禁止程序重复运行 (“@$#%^%&(^%^Windows 解锁专家 V1.0”, _启动窗口.取窗口句柄 ())
.如果真结束
 ' 模块_隐藏自身进程 ()
复制透明标签 (10)
提升进程权限 ()
.如果真 (是否显示程序界面 ())
    赋值 (函数地址, 取DLL函数地址 (取程序或DLL句柄 (“user32.dll”), “ExitWindowsEx”))
     ' 写入前先备份一下
    赋值 (API_BAK, 指针到字节集 (函数地址, 8))
    未知支持库函数_0 (#)
    赋值 (运行目录, 相加 (取运行目录 (), “\Tools”))
    .如果真 (等于 (取文件属性 (相加 (取运行目录 (), “\Tools”)), -1))
        .如果真 (等于 (创建目录 (相加 (取运行目录 (), “\Tools”)), 假))
            赋值 (运行目录, 未知支持库函数_7 (10))
        .如果真结束
        
    .如果真结束
    .如果 (文件是否存在 (“cmd.exe”))
        赋值 (CMD, “cmd.exe”)
    .否则
        赋值 (CMD, 相加 (取运行目录 (), “\Tools\cmd.exe”))
    .如果结束
    赋值 (CMD进程, 控制台_连接 (CMD, 运行目录))
    .如果 (等于 (CMD进程, 0))
        3.未知支持库函数_69 (真)
    .否则
        赋值 (.背景颜色, #绿色)
    .如果结束
    进程管理类._初始化类 ()
    隐藏窗口类._初始化类 ()
    赋值 (., 402)
    赋值 (.顶边, 相减 (., 2))
    赋值 (窗口界面热键, 未知支持库函数_10 (_启动窗口.取窗口句柄 (), _启动窗口.取窗口句柄 (.), 1, #F1键))
    赋值 (鼠标句柄热键, 未知支持库函数_10 (_启动窗口.取窗口句柄 (), 取窗口句柄 (), 4, 0))
    _刷新窗口_被选择 ()
    延时 (100)
    检查自启动 ()
.如果真结束
赋值 (进入许可证, 未知支持库函数_1 ())
读托盘监视文件 ()
赋值 (按钮, 取窗口句柄 ())
赋值 (.禁止, 真)
 ' ============================下面是公共函数部分===========================

.子程序 _高级选择夹1_子夹被改变, 空白型, , 
.局部变量 临时变量, 基本进程信息, , , 
.局部变量 ID, 整数型, , , 

.如果 (等于 (., 0))
    _刷新窗口_被选择 ()
    赋值 (.时钟周期, 1000)
.否则
    赋值 (.时钟周期, 0)
.如果结束
.如果真 (等于 (., 1))
    _刷新进程_被选择 ()
    赋值 (ID, 0.查找表项数值 (到进程ID (到整数 (.内容))))
    .如果真 (并且 (等于 (ID, -1), 判断窗口句柄_ (到整数 (.内容))))
        进程管理类.加入隐藏进程 (到整数 (.内容))
        赋值 (.字体大小, 真)
        赋值 (.删除线, 132)
        0.选择表项 ()
        获取焦点 ()
        _超级列表框_隐藏进程_获得焦点 ()
        返回 ()
    .如果真结束
    ID.保证显示 ()
    ID.选择表项 ()
    获取焦点 ()
    .如果真 (等于 (取表项数 (), 0))
        赋值 (.字体大小, 假)
        赋值 (.删除线, 180)
    .如果真结束
    
.如果真结束
.如果 (等于 (., 2))
    取托盘 (假, “未操作”)
    _启动窗口.置文本 (., 1, 相加 (“托盘区共有图标”, 到文本 (取表项数 ()), “个,”, “监视列表中共有”, 到文本 (取数组成员数 (监视内容)), “个在监视”))
    
.否则
    
.如果结束
.如果真 (等于 (., 3))
    控制台_取回结果 ()
    获取焦点 ()
    .如果 (文件是否存在 (相加 (取运行目录 (), “\Tools\psexec.exe”)))
        1.置文本 (“PsTools已经安装,可以执行psexec命令”)
    .否则
        1.置文本 (“您尚未安装PsTools,请在www.sysinternals.com下载!”)
    .如果结束
    
.如果真结束
.如果真 (等于 (., 4))
    1.置文本 (相加 (“共有”, 到文本 (相加 (取表项数 (), _启动窗口.取表项数 (.))), “个窗口，”, “其中隐藏的窗口有”, 到文本 (取表项数 ()), “个”))
.如果真结束
.如果真 (等于 (., 5))
    1.置文本 (“这个功能项保留,如果你有什么好的建议,可以来信告诉我”)
.如果真结束


.子程序 _选择框_总在最前_被单击, 空白型, , 这个选择框在特殊功能部分
.如果 (.选中)
    赋值 (_启动窗口., 真)
.否则
    赋值 (_启动窗口., 假)
    
.如果结束


.子程序 __启动窗口_被激活, 空白型, , 
.如果真 (等于 (., 0))
    _刷新窗口_被选择 ()
.如果真结束


.子程序 __启动窗口_可否被关闭, 逻辑型, , 
.局部变量 i, 整数型, , , 
.局部变量 临时变量, 文本型, , , 
.局部变量 返回值, 整数型, , , 

.如果真 (等于 (.背景颜色, #绿色))
    .如果真 (等于 (xx (“是否要停止对其它程序的关机监视?”, 相加 (#询问图标, #是否钮), “询问”), #是钮))
        _选择框_开始监视API_被单击 ()
    .如果真结束
    
.如果真结束
赋值 (返回值, 取表项数 ())
.如果真 (大于 (返回值, 0))
    赋值 (临时变量, 相加 (“有”, 到文本 (返回值), “个窗口还在隐藏中,”))
.如果真结束
.如果真 (不等于 (xx (相加 (临时变量, “您确定要退出程序吗?”), 36, “询问”), 5))
    返回 (假)
.如果真结束
 ' 未知支持库函数_2 (进入许可证)

.如果真 (大于 (重复运行, 0))
    模块_关闭对象 ()
.如果真结束
.如果真 (等于 (系统类别, 3))
    控制台_断开连接 ()
.如果真结束
结束 ()

 ' ==============================进程管理部分=============================================================


.子程序 _属性_被选择, 空白型, , 
.局部变量 进程号, 整数型, , , 
.局部变量 完整路径, 文本型, , , 
.局部变量 临时列表框, 超级列表框, , , 
.局部变量 i, 整数型, , , 

.判断开始 (可有焦点 ())
    赋值 (临时列表框, )
    赋值 (进程号, 临时列表框.取表项数值 (临时列表框.))
    赋值 (完整路径, 到完整路径 (进程号))
    .如果真 (等于 (文件是否存在 (完整路径), 假))
        赋值 (完整路径, 相加 (未知支持库函数_7 (10), 临时列表框.取标题 (临时列表框., 0)))
    .如果真结束
    
.默认
    赋值 (临时列表框, )
    赋值 (完整路径, 临时列表框.取标题 (临时列表框., 0))
.判断结束
输出调试文本 (完整路径)
进程管理类.查看文件属性 (完整路径)

.子程序 _刷新进程_被选择, 空白型, , 
进程管理类.刷新进程信息 ()
 ' 进程管理类.刷新进程信息 ()
1.置文本 (相加 (“共有进程”, 到文本 (相加 (取表项数 (), 1)), “个”))

.子程序 _结束线程_被选择, 空白型, , 
.局部变量 线程标识符, 整数型, , , 
.局部变量 选择表项, 整数型, , "0", 
.局部变量 i, 整数型, , , 

.判断开始 (等于 (系统类别, 3))
    赋值 (选择表项, 取被选择表项 ())
    .计次循环首 (取数组成员数 (选择表项), i)
        赋值 (线程标识符, 选择表项.取表项数值 ( [i]))
        api_PostThreadMessage (线程标识符, #WM_QUIT, 0, 0)
    .计次循环尾 ()
    处理事件 ()
    _刷新线程_被选择 ()
.默认
    
.判断结束


.子程序 _刷新线程_被选择, 空白型, , 
.局部变量 进程ID, 整数型, , , 
.局部变量 临时列表框, 超级列表框, , , 

.判断开始 (可有焦点 ())
    赋值 (临时列表框, )
.默认
    赋值 (临时列表框, )
.判断结束
赋值 (进程ID, 临时列表框.取表项数值 (临时列表框.))
进程管理类.刷新线程列表 (进程ID)

.子程序 _刷新模块_被选择, 空白型, , 
.局部变量 进程号, 整数型, , , 
.局部变量 临时列表框, 超级列表框, , , 

.判断开始 (可有焦点 ())
    赋值 (临时列表框, )
.默认
    赋值 (临时列表框, )
.判断结束
赋值 (进程号, 临时列表框.取表项数值 (临时列表框.))
进程管理类.刷新模块引用 (进程号)


.子程序 _卸载模块_被选择, 空白型, , 
.局部变量 卸载, 逻辑型, 静态, , 
.局部变量 进程标识符, 整数型, , , 
.局部变量 选择表项, 整数型, , "0", 
.局部变量 参数, 整数型, , , 
.局部变量 i, 整数型, , , 

.如果真 (等于 (卸载, 假))
    .如果 (并且 (等于 (xx (“卸载模块可能会使应用程序无法正常工作,您确定要继续吗?”, 相加 (#警告图标, #是否钮), “警告”), 5), 等于 (系统类别, 3)))
        赋值 (卸载, 真)
    .否则
        返回 ()
    .如果结束
    
.如果真结束
赋值 (选择表项, 取被选择表项 ())
赋值 (进程标识符, .取表项数值 (.))
.计次循环首 (取数组成员数 (选择表项), i)
    赋值 (参数, 到整数 (选择表项.取表项数值 ( [i])))
    进程管理类.远程执行API (进程标识符, “kernel32”, “FreeLibrary”, 参数)
.计次循环尾 ()
处理事件 ()
_刷新线程_被选择 ()
_刷新模块_被选择 ()

.子程序 _模块属性_被选择, 空白型, , 
.局部变量 进程号, 整数型, , , 
.局部变量 完整路径, 文本型, , , 

赋值 (完整路径, .取标题 (., 4))
.如果真 (等于 (文件是否存在 (完整路径), 假))
    赋值 (完整路径, 相加 (未知支持库函数_7 (10), .取标题 (., 0)))
.如果真结束
进程管理类.查看文件属性 (完整路径)




.子程序 _结束进程_被选择, 空白型, , 
进程管理类.结束系统进程 ()

.子程序 _结束并删除程序_被选择, 空白型, , 
.局部变量 完整路径, 文本型, , , 
.局部变量 输入, 文本型, , , 
.局部变量 返回值, 逻辑型, , , 
.局部变量 临时列表框, 超级列表框, , , 

.判断开始 (可有焦点 ())
    赋值 (临时列表框, )
.默认
    赋值 (临时列表框, )
.判断结束
.判断开始 (等于 (系统类别, 3))
    赋值 (完整路径, 到完整路径 (临时列表框.取表项数值 (临时列表框.)))
.默认
    赋值 (完整路径, 临时列表框.取标题 (临时列表框., ))
.判断结束
.如果真 (并且 (输入框 (相加 (“真的要删除下面的文件吗?删除后不可恢复!请键入OK以确认:”, #换行符, 完整路径), “删除文件”, , 输入, ), 等于 (到大写 (输入), “OK”)))
    _结束进程_被选择 ()
    赋值 (返回值, 删除文件 (完整路径))
    .判断开始 (返回值)
        xx (“删除成功!”, 64, “提示”)
    .默认
        xx (“删除失败!”, 48, “提示”)
    .判断结束
    
.如果真结束


.子程序 _刷新进程按钮_被单击, 空白型, , 
_刷新进程_被选择 ()

.子程序 _按钮_新建任务_被单击, 空白型, , 
载入 (窗口新任务, _启动窗口, 真)


.子程序 _按钮_结束进程_被单击, 空白型, , 
_结束进程_被选择 ()

.子程序 _拷贝路径到剪切板_被选择, 空白型, , 
.局部变量 进程ID, 整数型, , , 
.局部变量 完整路径, 文本型, , , 
.局部变量 临时列表框, 超级列表框, , , 

.判断开始 (可有焦点 ())
    赋值 (临时列表框, )
.默认
    赋值 (临时列表框, )
.判断结束
.判断开始 (等于 (系统类别, 3))
    赋值 (进程ID, 临时列表框.取表项数值 (.))
    赋值 (完整路径, 到完整路径 (进程ID))
    .如果真 (等于 (文件是否存在 (完整路径), 假))
        赋值 (完整路径, 相加 (未知支持库函数_7 (10), 临时列表框.取标题 (临时列表框., )))
    .如果真结束
    
.默认
    赋值 (完整路径, 临时列表框.取标题 (临时列表框., ))
.判断结束
置剪辑板文本 (完整路径)

.子程序 _超级列表框_进程信息_右键单击表项, 空白型, , 
.局部变量 被选择表项, 空白型, , "0", 

赋值 (被选择表项, 取被选择表项 ())
.判断开始 (大于 (取数组成员数 (被选择表项), 1))
    连续赋值 (假, .可视, .可视, .可视, .可视)
.默认
    连续赋值 (真, .可视, .可视, .可视, .可视)
.判断结束
弹出菜单 ()


.子程序 _超级列表框_进程信息_当前表项被改变, 空白型, , 
.局部变量 进程完整路径, 文本型, , , 

_刷新线程_被选择 ()
_刷新模块_被选择 ()
 ' 进程完整路径 ＝ 进程管理类.到完整路径 (超级列表框_进程信息.取表项数值 (超级列表框_进程信息.现行选中项))
 ' ' api取文件版本信息 (超级列表框_进程信息.取标题 (超级列表框_进程信息.现行选中项, 0), 列表框_版本信息)
 ' 进程管理类.显示文件版本信息 (超级列表框_进程信息.取标题 (超级列表框_进程信息.现行选中项, 0), 列表框_版本信息, 进程完整路径)
 ' 列表框_版本信息.加入项目 (“产品路径：  ” ＋ 进程完整路径, )




.子程序 _超级列表框_线程信息_右键单击表项, 空白型, , 
.如果 (等于 (., -1))
    赋值 (.禁止, 真)
.否则
    赋值 (.禁止, 假)
.如果结束
弹出菜单 ()


.子程序 _超级列表框_模块信息_右键单击表项, 空白型, , 
.如果 (小于或等于 (., 0))
    赋值 (.禁止, 真)
.否则
    赋值 (.禁止, 假)
.如果结束
弹出菜单 ()

 ' ===============================================窗口管理部分==========================================


.子程序 _刷新窗口_被选择, 空白型, , 
隐藏窗口类.刷新活动窗口 (图片组_活动窗口)
隐藏窗口类.刷新隐藏窗口 (图片组_隐藏窗口)
1.置文本 (相加 (“共有”, 到文本 (相加 (取表项数 (), _启动窗口.取表项数 (.))), “个窗口，”, “其中隐藏的窗口有”, 到文本 (取表项数 ()), “个”))



.子程序 _隐藏_被选择, 空白型, , 
.局部变量 句柄, 整数型, , , 

赋值 (句柄, 到整数 (.内容))
.如果真 (判断窗口句柄_ (句柄))
    .如果真 (或者 (等于 (句柄, _启动窗口.取窗口句柄 ()), 等于 (判断窗口句柄_ (句柄), 假)))
        返回 ()
    .如果真结束
    隐藏窗口类.隐藏窗口 (句柄)
    _刷新窗口_被选择 ()
    
.如果真结束


.子程序 _还原_被选择, 空白型, , 
隐藏窗口类.还原窗口 (到整数 (.内容))
_刷新窗口_被选择 ()



.子程序 _最小化_被选择, 空白型, , 
ShowWindow (到整数 (.内容), 7)


.子程序 _最大化_被选择, 空白型, , 
ShowWindow (到整数 (.内容), 3)


.子程序 _转到进程_被选择, 空白型, , 
赋值 (., 1)
延时 (100)
5.选择表项 ()


.子程序 _结束窗口_被选择, 空白型, , 
.局部变量 窗口句柄, 整数型, , , 
.局部变量 进程ID, 整数型, , , 
.局部变量 进程句柄, 空白型, , , 

.如果真 (不等于 (.内容, “”))
    赋值 (窗口句柄, 到整数 (.内容))
    PostMessage (窗口句柄, #WM_CLOSE, 0, 0)
    处理事件 ()
    _刷新窗口_被选择 ()
.如果真结束


.子程序 _超级列表框_窗口_被双击, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (不等于 (., -1))
    _隐藏_被选择 ()
.如果真结束


.子程序 _超级列表框_隐藏窗口_被双击, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

_还原_被选择 ()

.子程序 _按钮_结束窗口_被单击, 空白型, , 
_结束窗口_被选择 ()

.子程序 _按钮_隐藏_被单击, 空白型, , 
_隐藏_被选择 ()

.子程序 _时钟_窗口_周期事件, 空白型, , 
.局部变量 i, 整数型, , , 
.局部变量 窗口句柄, 整数型, , , 

.计次循环首 (取表项数 (), i)
    赋值 (窗口句柄, 相减 (i, 1).取表项数值 ())
    .如果 (并且 (判断窗口句柄_ (窗口句柄), 判断窗口可见性_ (窗口句柄)))
        相减 (i, 1).置标题 (0, API取窗口标题 (窗口句柄))
    .否则
        相减 (i, 1).删除表项 ()
        赋值 (i, 相减 (i, 1))
    .如果结束
    
.计次循环尾 ()
.计次循环首 (取表项数 (), i)
    赋值 (窗口句柄, 相减 (i, 1).取表项数值 ())
    .如果 (并且 (判断窗口句柄_ (窗口句柄), 等于 (判断窗口可见性_ (窗口句柄), 假)))
        相减 (i, 1).置标题 (0, API取窗口标题 (窗口句柄))
    .否则
        相减 (i, 1).删除表项 ()
        赋值 (i, 相减 (i, 1))
    .如果结束
    
.计次循环尾 ()
解除鼠标限制 (0)

.子程序 _刷新窗口按钮_被单击, 空白型, , 
_刷新窗口_被选择 ()

.子程序 _按钮_隐藏窗口_被单击, 空白型, , 
_隐藏_被选择 ()


.子程序 _按钮_隐藏全部窗口_被单击, 空白型, , 
隐藏窗口类.全部隐藏 (取窗口句柄 ())
_刷新窗口_被选择 ()


.子程序 _按钮_全部还原窗口_被单击, 空白型, , 
隐藏窗口类.全部还原 ()
_刷新窗口_被选择 ()

.子程序 _超级列表框_窗口_右键单击表项, 空白型, , 
.如果 (等于 (., -1))
    连续赋值 (真, .禁止, .禁止, .禁止, .禁止, .禁止, .禁止)
.否则
    连续赋值 (假, .禁止, .禁止, .禁止, .禁止, .禁止, .禁止)
.如果结束
连续赋值 (真, .可视, .可视, .可视)
赋值 (.可视, 假)
弹出菜单 ()

.子程序 _超级列表框_窗口_当前表项被改变, 空白型, , 
.局部变量 窗口句柄, 整数型, , , 

赋值 (窗口句柄, .取表项数值 (.))
赋值 (.内容, 到文本 (窗口句柄))


 ' ==========================控制台部分====================================


.子程序 _按钮3_被单击, 空白型, , 
.如果真 (等于 (.现行选中项, 1))
     ' psexec \\192.168.0.1 -u Administrator -p "" cmd.exe
    .判断开始 (文件是否存在 (相加 (取运行目录 (), “\Tools\psexec.exe”)))
        控制台_发送命令 (相加 (“psexec \\”, .内容, “ -u ”, #逗号, .内容, #逗号, “ -p ”, #逗号, .内容, #逗号, “ cmd.exe”))
    .默认
        xx (“请复制Pstools远程管理包中的psexec.exe到本程序的Tools目录下”, 64, “文件不存在”)
    .判断结束
    
.如果真结束
.如果真 (等于 (.现行选中项, 0))
     ' net use \\192.168.0.1\ipc$ "" /user:Administrator
    控制台_发送命令 (相加 (“net use \\”, .内容, “\ipc$ ”, #逗号, .内容, #逗号, “ /user:”, #逗号, .内容, #逗号))
.如果真结束





.子程序 _输出编辑框_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 输出, 文本型, , "10", 
.局部变量 命令, 文本型, , , 

.如果真 (等于 (键代码, #回车键))
    赋值 (输出, 分割文本 (.内容, “>”, )) ' 用命令分隔符判断命令
    赋值 (命令, 输出 [取数组成员数 (输出)])
    .如果真 (不等于 (倒找文本 (命令, #换行符, , 假), -1)) ' 有些命令并没有返回命令分隔符,如:time
        赋值 (输出, 分割文本 (命令, “: ”, ))
        赋值 (命令, 输出 [取数组成员数 (输出)])
    .如果真结束
    .如果 (大于 (取数组成员数 (输出), 1)) ' 如果不为空
         ' 特殊命令处理
        .如果真 (等于 (到大写 (删首尾空 (命令)), 到大写 (“exit”))) ' 退出命令
            销毁 ()
        .如果真结束
        .如果真 (等于 (到大写 (删首尾空 (命令)), 到大写 (“cls”))) ' 清屏命令
            赋值 (.内容, “”)
        .如果真结束
        控制台_发送命令 (命令)
    .否则
        控制台_发送命令 (“”)
    .如果结束
    控制台_取回结果 ()
.如果真结束


.子程序 _输入组合框_列表项被选择, 空白型, , 
.取项目文本 (.现行选中项).加入文本 ()
获取焦点 ()

 ' ======================================特殊功能部分=====================================


.子程序 _复制_被选择, 空白型, , 
.如果真 (等于 (., “句柄”))
    置剪辑板文本 (.标题)
.如果真结束
.如果真 (等于 (., “文本”))
    置剪辑板文本 (.标题)
.如果真结束
.如果真 (等于 (., “类名”))
    置剪辑板文本 (.标题)
.如果真结束
.如果真 (等于 (., “密码”))
    置剪辑板文本 (.标题)
.如果真结束




.子程序 _编辑框_激活_放开某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (等于 (键代码, #Shift键))
    .如果 (.选中)
        赋值 (.背景颜色, #绿色)
    .否则
        赋值 (.背景颜色, #红色)
    .如果结束
    
    
    
    
.如果真结束


.子程序 _标签_鼠标句柄_反馈事件, 整数型, , 
.参数 参数一, 整数型, , 
.参数 参数二, 整数型, , 

.如果真 (并且 (等于 (参数一, 鼠标句柄热键), 等于 (., 4)))
    .如果 (等于 (.时钟周期, 0))
        赋值 (.时钟周期, 100)
    .否则
        赋值 (.时钟周期, 0)
        .判断开始 (.选中)
            赋值 (.背景颜色, #绿色)
        .默认
            赋值 (.背景颜色, #红色)
        .判断结束
        
    .如果结束
    
.如果真结束
.如果真 (等于 (参数一, 窗口界面热键))
    .判断开始 (等于 (_启动窗口., 真))
        赋值 (_启动窗口., 假)
    .默认
        赋值 (_启动窗口., 0)
        赋值 (_启动窗口., 真)
    .判断结束
    
.如果真结束


.子程序 _时钟_鼠标句柄_周期事件, 空白型, , 
取星号密码 (.内容, , , , )
.如果 (等于 (.背景颜色, #红色))
    赋值 (.背景颜色, #绿色)
.否则
    赋值 (.背景颜色, #红色)
.如果结束



.子程序 _标签_窗口句柄_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (., “句柄”)
弹出菜单 ()


.子程序 _标签_星号密码_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (., “密码”)
弹出菜单 ()


.子程序 _标签_窗口类名_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (., “类名”)
弹出菜单 ()


.子程序 _标签_窗口文本_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (., “文本”)
弹出菜单 ()


.子程序 _按钮_应用计划_被单击, 空白型, , 
.如果真 (或者 (等于 (.内容, “0”), 等于 (.内容, “”)))
    返回 ()
.如果真结束
.如果 (等于 (.标题, “应用”))
    赋值 (.时钟周期, 100)
    赋值 (倒记时, 增减时间 (取现行时间 (), #秒, 到整数 (.内容)))
    赋值 (.标题, 相加 (.内容, “秒”))
    赋值 (.标题, “停止”)
.否则
    赋值 (.时钟周期, 0)
    赋值 (.标题, “0秒”)
    赋值 (.标题, “应用”)
    赋值 (.背景颜色, #红色)
.如果结束


.子程序 _选择框_开始监视API_被单击, 空白型, , 
.如果 (等于 (.标题, “开始监视”))
    安装反关机勾子 ()
    赋值 (.背景颜色, #绿色)
    赋值 (.标题, “停止监视”)
    xx (“禁止关机成功,现有程序的关机动作都将被取消!”, 64, “恭喜”)
.否则
    御载反关机勾子 ()
    赋值 (.背景颜色, #红色)
    赋值 (.标题, “开始监视”)
    xx (“还原成功,现在您可以关闭计算机了”, 64, “恭喜”)
.如果结束


.子程序 _时钟_计划_周期事件, 空白型, , 
.局部变量 时间, 整数型, , , 
.局部变量 提示, 逻辑型, , , 

.如果 (等于 (.背景颜色, #红色))
    赋值 (.背景颜色, #绿色)
.否则
    赋值 (.背景颜色, #红色)
.如果结束
赋值 (时间, 取时间间隔 (倒记时, 取现行时间 (), 8))
.如果真 (等于 (时间, 0))
    .如果真 (等于 (.选中, 假))
        赋值 (.时钟周期, 0)
    .如果真结束
    .如果真 (.选中)
        _按钮_隐藏全部窗口_被单击 ()
    .如果真结束
    .如果真 (.选中)
        隐藏窗口类.全部还原 ()
        _刷新窗口_被选择 ()
    .如果真结束
    .如果真 (.选中)
        赋值 (提示, 真)
    .如果真结束
    .如果真 (.选中)
        结束 ()
    .如果真结束
    .如果 (等于 (.选中, 假))
        赋值 (.标题, “应用”)
        赋值 (.内容, “0”)
        赋值 (.标题, “0秒”)
        赋值 (.背景颜色, #红色)
    .否则
        赋值 (倒记时, 增减时间 (取现行时间 (), #秒, 到整数 (.内容)))
        
    .如果结束
    
.如果真结束
 ' 赋值 (.标题, 相加 (到文本 (时间), “秒”))
.如果真 (并且 (提示, 等于 (.选中, 假)))
    鸣叫 ()
    赋值 (., 假)
    xx (“您计划的时间已经到了！”, 64, “解锁作家”)
    赋值 (., 真)
.如果真结束


.子程序 _选择框_激活_被单击, 空白型, , 
.如果 (.选中)
    赋值 (.时钟周期, 100)
    赋值 (.背景颜色, #绿色)
.否则
    赋值 (.时钟周期, 0)
    赋值 (.背景颜色, #红色)
.如果结束



.子程序 _时钟_激活_周期事件, 空白型, , 
枚举窗口 (&枚举父窗口过程, 字符 (0))

.子程序 _编辑框1_失去焦点, 空白型, , 
.如果真 (等于 (.内容, “”))
    赋值 (.内容, “0”)
    
.如果真结束

 ' ==========================控制面板部分====================================



.子程序 _超级列表框_托盘_被双击, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.判断开始 (等于 (.取标题 (., 2), “隐藏”))
    _显示托盘_被选择 ()
.默认
    _隐藏托盘_被选择 ()
.判断结束


.子程序 _按钮_添加托盘监视_被单击, 空白型, , 
.局部变量 i, 空白型, , , 
.局部变量 表项索引, 空白型, , , 

.如果真 (不等于 (.内容, “”))
    .如果真 (等于 (.内容, “拖盘标题”))
        添加到监视列表 (.内容, , 16)
    .如果真结束
    .如果真 (并且 (等于 (.内容, “窗口标题”), 等于 (.内容, “隐藏”)))
        添加到监视列表 (.内容, , 17)
    .如果真结束
    .如果真 (并且 (等于 (.内容, “进程名称”), 等于 (.内容, “隐藏”)))
        添加到监视列表 (.内容, , 18)
    .如果真结束
    .如果真 (并且 (等于 (.内容, “窗口标题”), 等于 (.内容, “结束”)))
        添加到监视列表 (.内容, , 33)
    .如果真结束
    .如果真 (并且 (等于 (.内容, “进程名称”), 等于 (.内容, “结束”)))
        添加到监视列表 (.内容, , 34)
    .如果真结束
    
    
    
.如果真结束



.子程序 _按钮_删除托盘监视_被单击, 空白型, , 
.局部变量 现行选中项, 空白型, , , 

赋值 (现行选中项, .)
.如果真 (等于 (现行选中项, -1))
    返回 ()
.如果真结束
.如果 (等于 (., 相减 (取表项数 (), 1)))
    相减 (现行选中项, 1).选择表项 ()
.否则
    相加 (现行选中项, 1).选择表项 ()
.如果结束
现行选中项.删除表项 ()
赋值 (.禁止, 假)
获取焦点 ()

.子程序 _超级列表框_监视列表_右键单击表项, 空白型, , 
.如果 (不等于 (., -1))
    .进入编辑 (.)
.否则
    
.如果结束


.子程序 _按钮_应用托盘监视_被单击, 空白型, , 
赋值 (.禁止, 真)
保存文件 (真)

.子程序 _时钟_托盘_周期事件, 空白型, , 
.如果真 (大于 (取数组成员数 (监视内容), 0))
    未知支持库函数_0 (&监视子程序, )
.如果真结束


.子程序 监视子程序, 空白型, , 
.局部变量 i, 整数型, , , 
.局部变量 窗口句柄, 整数型, , , 
.局部变量 基本窗口信息, 基本窗口信息, , , 
.局部变量 基本进程信息, 基本进程信息, , , 

未知支持库函数_3 (进入许可证)
.计次循环首 (取数组成员数 (监视内容), i)
    .如果真 (等于 (监视内容 [i], 类型, 16)) ' 隐藏托盘
        模块_隐藏托盘图标 (模块_取托盘序号 (监视内容 [i], 标题), 1)
    .如果真结束
    .如果真 (等于 (监视内容 [i], 类型, 17)) ' 隐藏窗口
        隐藏窗口类.隐藏或结束窗口 (监视内容 [i], 标题, 0)
    .如果真结束
    .如果真 (等于 (监视内容 [i], 类型, 18)) ' 隐藏进程名的窗口
        隐藏窗口类.隐藏指定进程的窗口 (监视内容 [i], 标题)
    .如果真结束
    .如果真 (等于 (监视内容 [i], 类型, 33)) ' 结束窗口
        隐藏窗口类.隐藏或结束窗口 (监视内容 [i], 标题, 1)
    .如果真结束
    .如果真 (等于 (监视内容 [i], 类型, 34)) ' 结束进程
        赋值 (基本进程信息, 按进程名取进程信息 (监视内容 [i], 标题))
        隐藏窗口类.结束指定进程 (基本进程信息.进程ID)
    .如果真结束
    
.计次循环尾 ()
未知支持库函数_4 (进入许可证)

.子程序 _按钮_隐藏托盘_被单击, 空白型, , 
_隐藏托盘_被选择 ()

.子程序 _组合框1_列表被关闭, 空白型, , 
.如果 (等于 (.内容, “拖盘标题”))
    赋值 (.现行选中项, 0)
    赋值 (.禁止, 真)
.否则
    赋值 (.禁止, 假)
.如果结束


.子程序 _显示托盘_被选择, 空白型, , 
隐藏托盘图标 (假)

.子程序 _隐藏托盘_被选择, 空白型, , 
隐藏托盘图标 (真)

.子程序 _按钮_显示托盘_被单击, 空白型, , 
_显示托盘_被选择 ()


.子程序 _按钮_开机自启动_被单击, 空白型, , 

.判断开始 (等于 (_启动窗口..标题, “开机自启动”))
    写注册项 (3, “Software\Microsoft\Windows\CurrentVersion\Run\SendMessage.exe”, 相加 (取运行目录 (), “\”, 取执行文件名 ()))
    赋值 (_启动窗口..标题, “取消自启动”)
.默认
    删除注册项 (3, “Software\Microsoft\Windows\CurrentVersion\Run\SendMessage.exe”)
    赋值 (_启动窗口..标题, “开机自启动”)
    
.判断结束


.子程序 _按钮_托盘全部显示_被单击, 空白型, , 
取托盘 (真, “显示”)


.子程序 _超级列表框_隐藏窗口_当前表项被改变, 空白型, , 
赋值 (.内容, 到文本 (.取表项数值 (.)))

.子程序 _超级列表框_隐藏窗口_右键单击表项, 空白型, , 
.如果 (等于 (., -1))
    连续赋值 (真, .禁止, .禁止, .禁止, .禁止, .禁止, .禁止)
.否则
    连续赋值 (假, .禁止, .禁止, .禁止, .禁止, .禁止, .禁止)
.如果结束
连续赋值 (假, .可视, .可视, .可视)
赋值 (.可视, 真)
弹出菜单 ()


.子程序 _超级列表框_隐藏窗口_左键单击表项, 空白型, , 
赋值 (.内容, 到文本 (.取表项数值 (.)))


.子程序 _按钮1_被单击, 空白型, , 
xx (“使用方法:上面的编辑框里输入命令,回车即可执行”, 64, “提示”)


.子程序 _超级列表框_进程信息_获得焦点, 空白型, , 
_超级列表框_进程信息_当前表项被改变 ()

.子程序 __启动窗口_尺寸被改变, 空白型, , 
.如果真 (等于 (., 3))
    赋值 (., 0)
.如果真结束


.子程序 _超级列表框_托盘_右键单击表项, 空白型, , 
.判断开始 (等于 (., -1))
    连续赋值 (真, .禁止, .禁止, .禁止)
.默认
    连续赋值 (假, .禁止, .禁止, .禁止)
.判断结束
弹出菜单 ()


.子程序 _刷新_被选择, 空白型, , 
取托盘 (假, “未操作”)

.子程序 _添加到监视列表_托盘_被选择, 空白型, , 
添加到监视列表 (.取标题 (., ), , 16)
.置标题 (., 2, “隐藏”)
_按钮_应用托盘监视_被单击 ()

.子程序 _添加到监视列表_窗口_被选择, 空白型, , 
.局部变量 表项索引, 空白型, , , 

.如果 (.可视)
    添加到监视列表 (.取标题 (., ), , 17)
.否则
    添加到监视列表 (.取标题 (., ), , 17)
.如果结束
_按钮_应用托盘监视_被单击 ()


.子程序 _添加到监视列表_被选择, 空白型, , 
.局部变量 窗口标题, 文本型, , , 
.局部变量 临时列表框, 超级列表框, , , 
.局部变量 临时变量, 空白型, , "0", 
.局部变量 i, 整数型, , , 

.判断开始 (可有焦点 ())
    赋值 (临时列表框, )
.默认
    赋值 (临时列表框, )
.判断结束
赋值 (临时变量, 临时列表框.取被选择表项 ())
.计次循环首 (取数组成员数 (临时变量), i)
    添加到监视列表 (临时列表框.取标题 (临时变量 [i], 0), , 18)
.计次循环尾 ()
_按钮_应用托盘监视_被单击 ()

.子程序 _按钮_隐藏托盘1_被单击, 空白型, , 
赋值 (_启动窗口., 假)

.子程序 _组合框2_列表项被选择, 空白型, , 
.局部变量 项目索引, 整数型, , , 

赋值 (项目索引, .取项目数值 (.现行选中项))
.如果真 (等于 (项目索引, 16))
    赋值 (.现行选中项, 2)
    赋值 (.现行选中项, 0)
.如果真结束
.如果真 (等于 (项目索引, 17))
    赋值 (.现行选中项, 0)
    赋值 (.现行选中项, 0)
.如果真结束
.如果真 (等于 (项目索引, 18))
    赋值 (.现行选中项, 1)
    赋值 (.现行选中项, 0)
.如果真结束
.如果真 (等于 (项目索引, 33))
    赋值 (.现行选中项, 0)
    赋值 (.现行选中项, 1)
.如果真结束
.如果真 (等于 (项目索引, 34))
    赋值 (.现行选中项, 1)
    赋值 (.现行选中项, 1)
.如果真结束
.如果 (等于 (.现行选中项, 2))
    赋值 (.禁止, 真)
.否则
    赋值 (.禁止, 假)
.如果结束


.子程序 _按钮2_被单击, 空白型, , 
.局部变量 矩形数据, 矩形数据_, , , 

载入 (窗口, _启动窗口, 假)
 ' ==============================下面是模拟窗口事件=====================================


.子程序 _超级按钮_退出_被单击, 空白型, , 
__启动窗口_可否被关闭 ()

.子程序 _超级按钮_隐藏_被单击, 空白型, , 
赋值 (., 假)

.子程序 _透明标签_窗口标题_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

鼠标左键被按下 (相加 (横向位置, .左边), 相加 (纵向位置, .顶边))

.子程序 _透明标签_窗口标题_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.时钟周期, 0)

.子程序 _时钟_移动_周期事件, 空白型, , 
_启动窗口.移动 (相减 (取鼠标水平位置 (), 鼠标位置.横向位置), 相减 (取鼠标垂直位置 (), 鼠标位置.纵向位置), , )

.子程序 _透明标签_窗口标题_鼠标右键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.时钟周期, 0)

.子程序 _标签_右边_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

鼠标左键被按下 (横向位置, 纵向位置)

.子程序 _标签_右边_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.时钟周期, 0)

.子程序 _标签_左边_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

鼠标左键被按下 (横向位置, 纵向位置)


.子程序 _标签_左边_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.时钟周期, 0)


.子程序 _高级选择夹1_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

鼠标左键被按下 (相加 (横向位置, .), 相加 (纵向位置, .))


.子程序 _高级选择夹1_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.时钟周期, 0)



.子程序 _状态条1_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

鼠标左键被按下 (相加 (横向位置, .), 相加 (纵向位置, .))

.子程序 _状态条1_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.时钟周期, 0)

.子程序 _透明标签_窗口标题_被双击, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (., 2)

.子程序 _标签_顶边_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

鼠标左键被按下 (横向位置, 纵向位置)

.子程序 _标签_顶边_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.时钟周期, 0)

.子程序 __启动窗口_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

鼠标左键被按下 (横向位置, 纵向位置)

.子程序 __启动窗口_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.时钟周期, 0)

.子程序 鼠标左键被按下, 空白型, , 
.参数 标签, 标签, 可空, 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 

.判断开始 (是否为空 (标签))
    赋值 (鼠标位置.横向位置, 横向位置)
    赋值 (鼠标位置.纵向位置, 纵向位置)
.默认
    赋值 (鼠标位置.横向位置, 相加 (标签.左边, 横向位置))
    赋值 (鼠标位置.纵向位置, 相加 (标签.顶边, 纵向位置))
.判断结束
赋值 (.时钟周期, 10)






.子程序 _高级选择夹1_将改变子夹, 逻辑型, , 
.参数 子夹索引, 整数型, , 

.如果真 (并且 (等于 (.禁止, 假), 等于 (., 2)))
    赋值 (.时钟周期, 0)
    .如果真 (等于 (xx (“是否保存对监视列表的修改?”, 36, “配置已修改”), 5))
        _按钮_应用托盘监视_被单击 ()
    .如果真结束
    
.如果真结束


.子程序 _超级列表框_监视列表_开始编辑, 逻辑型, , 
.参数 表项索引, 整数型, , 

.局部变量 标题_, 文本型, , , 

赋值 (表项, 表项索引.取标题 (0))

.子程序 _超级列表框_监视列表_结束编辑, 逻辑型, , 
.参数 表项索引, 整数型, , 

.如果真 (不等于 (文本比较 (., 表项, 真), 0))
    赋值 (.禁止, 假)
.如果真结束



.子程序 _超级列表框_隐藏进程_右键单击表项, 空白型, , 
.如果真 (等于 (., -1))
    返回 ()
.如果真结束
连续赋值 (假, .可视, .可视)
弹出菜单 ()

.子程序 _超级列表框_隐藏进程_当前表项被改变, 空白型, , 
_刷新线程_被选择 ()
_刷新模块_被选择 ()

.子程序 _超级列表框_隐藏进程_获得焦点, 空白型, , 
_超级列表框_隐藏进程_当前表项被改变 ()

.窗口程序集 窗口_新任务程序集, , , 

.子程序 _按钮_确定_被单击, 空白型, , 
.局部变量 临时变量, 文本型, , , 

赋值 (临时变量, .内容)
未知支持库函数_6 (临时变量, , )
.如果真 (等于 (检查记录 (真, 临时变量), 假))
    加入成员 (打开记录, 临时变量)
.如果真结束
销毁 ()

.子程序 运行文件, 逻辑型, , 
.参数 文件名, 文本型, , 

.局部变量 临时变量, 文本型, , , 

赋值 (临时变量, 文件名)
.如果 (运行 (临时变量, 假, ))
    返回 (真)
.否则
    .如果 (运行 (相加 (查找关联文件名 (临时变量), “ ”, #逗号, 临时变量, #逗号), 假, ))
        返回 (真)
    .否则
        .如果真 (运行 (相加 (“explorer ”, #逗号, 临时变量, #逗号), 假, ))
            返回 (真)
        .如果真结束
        
    .如果结束
    
.如果结束
返回 (假)





.子程序 检查记录, 逻辑型, , 
.参数 检查重复, 逻辑型, , 
.参数 加入文本, 文本型, 可空, 检查重复用

.局部变量 i, 整数型, , , 
.局部变量 结果, 逻辑型, , , 

.如果 (检查重复)
    .计次循环首 (取数组成员数 (打开记录), i)
        .如果真 (等于 (到小写 (打开记录 [i]), 到小写 (加入文本)))
            赋值 (结果, 真)
            跳出循环 ()
        .如果真结束
        
    .计次循环尾 ()
    返回 (结果)
.否则
    清空 ()
    .计次循环首 (取数组成员数 (打开记录), i)
        打开记录.加入项目 ( [i], )
    .计次循环尾 ()
    返回 (假)
.如果结束



.子程序 _按钮3_被单击, 空白型, , 
.局部变量 临时文本变量, 文本型, , , 

赋值 (.内容, 未知支持库函数_2 (“请选择要打开的程序/文件”, 真))
_组合框1_编辑内容被改变 ()
获取焦点 ()

.子程序 _按钮2_被单击, 空白型, , 
销毁 ()

.子程序 _组合框1_编辑内容被改变, 空白型, , 
.如果 (不等于 (删首尾空 (.内容), “”))
    赋值 (.禁止, 假)
.否则
    赋值 (.禁止, 真)
.如果结束


.子程序 _组合框1_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (等于 (键代码, #回车键))
    _按钮_确定_被单击 ()
.如果真结束


.子程序 _组合框1_将弹出列表, 空白型, , 
检查记录 (假)


.子程序 _组合框1_列表项被选择, 空白型, , 
_组合框1_编辑内容被改变 ()

.子程序 _窗口新任务_创建完毕, 空白型, , 
.如果真 (等于 (检查记录 (真, “Explorer.exe”), 假))
    加入成员 (打开记录, “Explorer.exe”)
.如果真结束
.如果 (不等于 (.内容, “”))
    赋值 (.禁止, 假)
.否则
    赋值 (.禁止, 真)
.如果结束


.程序集 接口程序集, , , 

.程序集变量 可见句柄列表, 整数型, , "0", 
.程序集变量 老句柄, 整数型, , , 
.子程序 取星号密码, 空白型, , 
.参数 密码遮盖符, 文本型, , 
.参数 标签_鼠标句柄, 标签, , 
.参数 标签_窗口类名, 标签, , 
.参数 标签_星号密码, 标签, , 
.参数 标签_窗口文本, 标签, , 

.局部变量 文本, 文本型, , , 
.局部变量 句柄, 整数型, , , 
.局部变量 遮盖符, 整数型, , , 

赋值 (句柄, WindowFromPoint (取鼠标水平位置 (), 取鼠标垂直位置 ()))
.如果真 (或者 (等于 (句柄, 老句柄), 等于 (句柄, 0)))
    返回 ()
.如果真结束
赋值 (老句柄, 句柄)
赋值 (标签_鼠标句柄.标题, 到文本 (句柄))
赋值 (标签_窗口类名.标题, api_取窗口类名 (句柄))
赋值 (标签_窗口文本.标题, API取窗口标题 (句柄))
赋值 (遮盖符, SendMessage (句柄, 210, 0, 字符 (0))) ' 取得密码框密码遮盖符代码
.如果真 (等于 (字符 (遮盖符), 密码遮盖符)) ' 判断编辑框是否密码输入属性
    PostMessage (句柄, 204, 0, 0) ' 去掉密码输入属性
    赋值 (文本, 取空白文本 (255)) ' 分配内存
    SendMessage (句柄, 13, 255, 文本) ' 取得编辑框文本
    PostMessage (句柄, 204, 遮盖符, 0) ' 恢复编辑框密码输入属性
.如果真结束
赋值 (标签_星号密码.标题, 文本)


.子程序 添加到监视列表, 空白型, , 
.参数 标题, 文本型, , IN
.参数 监视列表框, 超级列表框, , OUT,监视列表框
.参数 类型, 整数型, , 第一组:0为托盘标题,1为窗口标题,2为进程名称,第二组:16为隐藏窗口,32为结束程序

.局部变量 表项索引, 整数型, , , 
.局部变量 列表标题, 文本型, , , 

赋值 (列表标题, 标题)
.如果真 (等于 (类型, 16))
    赋值 (表项索引, 监视列表框.插入表项 (-1, 列表标题, , , , 16))
    监视列表框.置标题 (表项索引, 1, “托盘标题”)
    监视列表框.置标题 (表项索引, 2, “隐藏”)
.如果真结束
.如果真 (等于 (类型, 17))
    赋值 (表项索引, 监视列表框.插入表项 (-1, 列表标题, , , , 17))
    监视列表框.置标题 (表项索引, 1, “窗口标题”)
    监视列表框.置标题 (表项索引, 2, “隐藏”)
.如果真结束
.如果真 (等于 (类型, 18))
    赋值 (表项索引, 监视列表框.插入表项 (-1, 列表标题, , , , 18))
    监视列表框.置标题 (表项索引, 1, “进程名称”)
    监视列表框.置标题 (表项索引, 2, “隐藏”)
.如果真结束
.如果真 (等于 (类型, 33))
    赋值 (表项索引, 监视列表框.插入表项 (-1, 列表标题, , , , 33))
    监视列表框.置标题 (表项索引, 1, “窗口标题”)
    监视列表框.置标题 (表项索引, 2, “结束”)
.如果真结束
.如果真 (等于 (类型, 34))
    赋值 (表项索引, 监视列表框.插入表项 (-1, 列表标题, , , , 34))
    监视列表框.置标题 (表项索引, 1, “进程名称”)
    监视列表框.置标题 (表项索引, 2, “结束”)
.如果真结束
_启动窗口.加入项目 (., 标题, 类型)
赋值 (_启动窗口..禁止, 假)





.子程序 到进程ID, 整数型, , 
.参数 窗口句柄, 整数型, , 

.局部变量 进程标识, 整数型, , , 

取进程标识符 (窗口句柄, 进程标识)
返回 (进程标识)

.子程序 到完整路径, 文本型, , 
.参数 进程ID, 整数型, , 

.局部变量 缓存, 文本型, , , 
.局部变量 进程句柄, 整数型, , , 
.局部变量 返回值, 文本型, , , 

.判断开始 (等于 (系统类别, 3))
    赋值 (缓存, 取空白文本 (260))
    赋值 (进程句柄, api_OpenProcess (2035711, 0, 进程ID))
    API_取得进程完整路径 (进程句柄, 0, 缓存, 260)
    关闭句柄 (进程句柄)
    赋值 (返回值, 删首尾空 (缓存))
.默认
    赋值 (返回值, api取系统进程文件名 (进程ID))
.判断结束
返回 (返回值)

.子程序 取标准八位十六进制文本, 文本型, , 如:16进制文本2A,则调用本子程序将返回0000002A
.参数 十六进制文本, 文本型, , 

返回 (相加 (取重复文本 (相减 (8, 取文本长度 (十六进制文本)), “0”), 十六进制文本))

.子程序 安装全局钩子, 整数型, , 安装全局消息钩子
.参数 DLLPath, 文本型, , 

.局部变量 lpProc, 子程序指针, , , 
.局部变量 hook, 整数型, , , 
.局部变量 hMod, 整数型, , , 

赋值 (hMod, api_LoadLibraryA (DLLPath))
赋值 (lpProc, api_GetProcAddress (hMod, “GetMsgProc”))
赋值 (hook, api_SetWindowsHookEx (#WH_GETMESSAGE, lpProc, hMod, 0))
返回 (hook)


.子程序 HOOK_API, 空白型, , Api Hook现所有进程
.参数 Papi, 整数型, , 要修改的API函数地址
.参数 Type, 字节集, , 要改写的内容,字节集

.局部变量 进程信息, 进程信息参考, , "0", 
.局部变量 进程句柄, 整数型, , , 
.局部变量 i, 整数型, , , 
.局部变量 结果, 逻辑型, , , 
.局部变量 修改内容, 整数型, , , 

.如果真 (不等于 (Type, { 0 }))
    取进程信息列表 (进程信息)
    .计次循环首 (取数组成员数 (进程信息), i)
        赋值 (进程句柄, OpenProcess (2035711, 0, 进程信息 [i], 进程ID))
        赋值 (结果, WriteApi (进程句柄, Papi, Type))
        赋值 (修改内容, 取字节集数据 (Type, 3, ))
        输出调试文本 (相加 (到文本 (进程信息 [i], 进程ID), “|”, 到文本 (进程句柄), “|”, “{”, 到文本 (修改内容), “}”, “|”, 到文本 (结果)))
        关闭句柄 (进程句柄)
    .计次循环尾 ()
    
.如果真结束


.子程序 WriteApi, 逻辑型, , 单进程Api Hook
.参数 Process, 整数型, , 目标进程句柄
.参数 Papi, 整数型, , 要修改的API函数地址
.参数 Type, 字节集, , 要改写的内容,字节集

.局部变量 mbi, 虚拟信息, , , 
.局部变量 结果, 逻辑型, , , 
.局部变量 MyAPI, 整数型, , , 
.局部变量 Ptype, 字节集, , , 

.如果真 (等于 (Papi, 0))
    返回 (假)
.如果真结束
.如果真 (等于 (返回虚拟信息 (Process, Papi, mbi, 28), 0))
    返回 (假)
.如果真结束
.如果真 (等于 (修改虚拟保护 (Process, mbi.BaseAddress, 相加 (取字节集长度 (Type), 1), #PAGE_EXECUTE_READWRITE, mbi.Protect), 假))
    返回 (假)
.如果真结束
赋值 (结果, 写内存字节 (Process, Papi, Type, 取字节集长度 (Type), 0))
修改虚拟保护 (Process, mbi.BaseAddress, 相加 (取字节集长度 (Type), 1), #PAGE_EXECUTE_READ, mbi.Protect) ' 改回只读模式
返回 (结果)


.子程序 枚举父窗口过程, 逻辑型, , 激活窗口用
.参数 hwand, 整数型, , 

.如果真 (不等于 (hwand, 0))
    EnumChildWindows (hwand, &枚举子窗口过程, 0)
    返回 (真)
.如果真结束
返回 (假)


.子程序 枚举子窗口过程, 逻辑型, , 
.参数 句柄, 整数型, , 

.局部变量 窗口标题, 文本型, , , 

.如果真 (不等于 (句柄, 按钮))
    EnableWindow (句柄, 1)
    返回 (真)
.如果真结束
返回 (假)

.子程序 xx, 整数型, ,   
.参数 提示信息, 文本型, , 
.参数 按钮, 整数型, ,  0、#确认钮； 1、#确认取消钮； 2、#放弃重试忽略钮； 3、#取消是否钮；     4、#是否钮； 5、#重试取消钮16、#错误图标； 32、#询问图标； 48、#警告图标； 64、#信息图标
.参数 窗口标题, 文本型, , 参数值指定显示在对话框标题栏中的文本

.局部变量 总在最前, 逻辑型, , , 
.局部变量 结果, 整数型, , , 

.如果真 (_启动窗口.)
    赋值 (总在最前, 真)
    赋值 (_启动窗口., 假)
.如果真结束
赋值 (结果, 信息框 (提示信息, 按钮, 窗口标题))
赋值 (_启动窗口., 总在最前)
返回 (结果)

.子程序 API取窗口标题, 文本型, , 
.参数 句柄, 整数型, , 

.局部变量 缓冲, 文本型, , , 

赋值 (缓冲, 取空白文本 (1000))
取窗口标题_ (句柄, 缓冲, 1000)
返回 (缓冲)


.子程序 取可见句柄列表, 空白型, , 
.参数 句柄列表, 整数型, 数组, 

清除数组 (可见句柄列表)
枚举窗口 (&枚举窗口过程, 字符 (0))
复制数组 (句柄列表, 可见句柄列表)

.子程序 枚举窗口过程, 逻辑型, , 
.参数 hwnd, 整数型, , 

.局部变量 索引, 整数型, , , 
.局部变量 标题, 文本型, , , 

.如果真 (判断窗口可见性_ (hwnd))
    加入成员 (可见句柄列表, hwnd)
.如果真结束
返回 (真)


.子程序 寻找桌面窗口句柄, 整数型, , 
返回 (寻找顶级窗口_ (“Progman”, 字符 (0)))


.子程序 寻找任务栏句柄, 整数型, , 
返回 (寻找顶级窗口_ (“Shell_TrayWnd”, 字符 (0)))


.子程序 寻找开始按钮句柄, 整数型, , 
返回 (寻找子窗口_ (寻找任务栏句柄 (), 0, “Button”, 字符 (0)))


.子程序 寻找系统时钟句柄, 整数型, , 
返回 (寻找子窗口_ (寻找子窗口_ (寻找任务栏句柄 (), 0, “TrayNotifyWnd”, 字符 (0)), 0, “TrayClockWClass”, 字符 (0)))


.子程序 api取系统进程文件名, 文本型, , 用于98
.参数 进程ID, 整数型, , 

.局部变量 临时变量, 整数型, , , 
.局部变量 临时变量B, 整数型, , , 
.局部变量 线程基本优先级, 整数型, , "0", 
.局部变量 临时进程信息, 进程信息输出, , , 
.局部变量 返回值, 文本型, , , 

赋值 (临时变量, 创建进程快照 (2, 0))
赋值 (临时进程信息.结构大小, 296)
赋值 (临时变量B, 开始进程快照 (临时变量, 临时进程信息))
.判断循环首 (不等于 (临时变量B, 0))
    .如果真 (等于 (临时进程信息.进程标识, 进程ID))
        赋值 (返回值, 到文本 (临时进程信息.进程对应文件名))
        跳出循环 ()
    .如果真结束
    赋值 (临时变量B, 继续进程快照 (临时变量, 临时进程信息))
.判断循环尾 ()
返回 (返回值)


.子程序 api_取窗口类名, 文本型, , 
.参数 hwnd, 整数型, , 

.局部变量 缓冲, 文本型, , , 

赋值 (缓冲, 取空白文本 (260))
GetClassName (hwnd, 缓冲, 255)
返回 (缓冲)




.子程序 是否显示程序界面, 逻辑型, , 
.判断开始 (等于 (读配置项 (相加 (取运行目录 (), “\EditWindows.INI”), “start”, “showWindow”, “1”), “1”))
    返回 (真)
.默认
    返回 (假)
.判断结束


.子程序 是否能重复运行, 整数型, , 0为不允许重复运行,1表示允许重复运行,-1表示不能重复运行且显示已经运行的程序窗口.
.局部变量 结果, 文本型, , , 

赋值 (结果, 读配置项 (相加 (取运行目录 (), “\EditWindows.INI”), “start”, “string”, “0”))
返回 (到整数 (结果))


.子程序 取文件关联图标, 整数型, , 返回图标在文件图片组中的图片索引,如果没找到,返回-1.不知道可不可以再优化一下,应该有这方面的API
.参数 后缀名, 文本型, , In,如:dat
.参数 文件图片组, 字节集, , Out,输出加入图标后的文件图片组

.局部变量 类型注册项名, 文本型, , , 
.局部变量 图片索引, 整数型, , , 
.局部变量 文件图标索引, 文本型, , , 
.局部变量 临时变量, 格式文本, , , 
.局部变量 文件图标信息, 文本型, , , 

赋值 (类型注册项名, 取文本注册项 (1, 相加 (“.”, 到小写 (后缀名), “\”), “”))
.如果真 (等于 (类型注册项名, “”))
    返回 (-1)
.如果真结束
赋值 (文件图标信息, 删首尾空 (取文本注册项 (1, 相加 (类型注册项名, “\DefaultIcon\”), “”)))
.如果真 (等于 (文件图标信息, “”))
    返回 (-1)
.如果真结束
分割指定文本 (文件图标信息, “,”, 临时变量)
赋值 (图片索引, 未知支持库函数_26 (文件图片组, 临时变量.左边, 到整数 (临时变量.右边)))
返回 (图片索引)

.子程序 分割指定文本, 空白型, , 
.参数 文本, 文本型, , 
.参数 分隔符, 文本型, , 
.参数 格式文本, 格式文本, , OUT

.局部变量 左边, 文本型, , , 
.局部变量 右边, 文本型, , , 
.局部变量 分割点, 整数型, , , 

赋值 (分割点, 倒找文本 (文本, 分隔符, , 假))
赋值 (左边, 取文本左边 (文本, 相减 (分割点, 1)))
.如果真 (等于 (取文本左边 (左边, 1), #逗号))
    赋值 (左边, 取文本中间 (左边, 2, 相减 (取文本长度 (左边), 2)))
.如果真结束
赋值 (格式文本.左边, 左边)
赋值 (格式文本.右边, 取文本右边 (文本, 相减 (取文本长度 (文本), 分割点)))

.子程序 复制透明标签, 空白型, , 复制透明标签并标记透明标签的句柄,以后可以取鼠标处句柄结合"取标记组件"判断所点击的透明标签
.参数 待复制标签, 透明标签, 参考, IN,欲被复制的窗口组件
.参数 新标签的变量, 透明标签, 参考 可空, OUT,存放新按钮组件的变量
.参数 复制数, 整数型, , IN,要复制的个数

.局部变量 总距离, 整数型, , , 
.局部变量 临时按钮, 透明标签, , , 
.局部变量 结果, 逻辑型, , , 
.局部变量 i, 整数型, , , 

.计次循环首 (复制数, )
    复制窗口组件 (待复制标签, 新标签的变量)
    赋值 (新标签的变量.可视, 真)
    赋值 (新标签的变量.标记, 到文本 (新标签的变量.取窗口句柄 ()))
.计次循环尾 ()



.子程序 枚举父窗口ID, 逻辑型, , 
.参数 hwand, 整数型, , 
.参数 c, 文本型, , 

.局部变量 临时变量, 文本型, , , 
.局部变量 c_进程名, 文本型, , , 

赋值 (c_进程名, c)
.如果真 (判断窗口可见性_ (hwand))
    赋值 (临时变量, 到完整路径 (到进程ID (hwand)))
    .如果真 (并且 (不等于 (倒找文本 (临时变量, c_进程名, , 真), -1), 不等于 (hwand, 寻找桌面窗口句柄 ()), 不等于 (hwand, 寻找任务栏句柄 ())))
        隐藏窗口类.隐藏窗口 (hwand)
    .如果真结束
    
.如果真结束
返回 (真)


.子程序 查找关联文件名, 文本型, , 
.参数 文件名, 文本型, , 

.局部变量 缓冲, 文本型, , , 

赋值 (缓冲, 取空白文本 (200))
查找关联文件名_ (文件名, 字符 (0), 缓冲)
返回 (删首尾空 (缓冲))


.程序集 托盘管理程序集, , , 

.子程序 取托盘, 空白型, , 
.参数 是否全部显示, 逻辑型, 可空, 默认为假
.参数 显示标题, 文本型, 可空, 状态列标题

.局部变量 数据数组, 文本型, , "0", 
.局部变量 i, 整数型, , , 

模块_取托盘序号 (数据数组)

_启动窗口.全部删除 (.)
输出调试文本 (相加 (“托盘图标:”, 到文本 (相除 (取数组成员数 (数据数组), 2)), “个”))
.计次循环首 (相除 (取数组成员数 (数据数组), 2), i)
    _启动窗口.插入表项 (., , 数据数组 [i] [2], , , , )
    _启动窗口.置标题 (., 相减 (i, 1), 1, 数据数组 [i] [1])
    .如果真 (并且 (不等于 (是否为空 (是否全部显示), 真), 等于 (是否全部显示, 真)))
        模块_隐藏托盘图标 (相减 (i, 1), 0)
    .如果真结束
    .如果真 (不等于 (是否为空 (显示标题), 真))
        _启动窗口.置标题 (., 相减 (i, 1), 2, 显示标题)
    .如果真结束
    
.计次循环尾 ()
模块_超级列表框排序 (_启动窗口., 1, 0, )

.子程序 检查自启动, 空白型, , 
.如果 (等于 (注册项是否存在 (3, “Software\Microsoft\Windows\CurrentVersion\Run\SendMessage.exe”), 真))
    赋值 (_启动窗口..标题, “取消自启动”)
    赋值 (_启动窗口., 假)
.否则
    赋值 (_启动窗口..标题, “开机自启动”)
    赋值 (_启动窗口., 真)
.如果结束


.子程序 读托盘监视文件, 空白型, , 
.局部变量 text, 文本型, , , 
.局部变量 分割文本, 文本型, , "2", 
.局部变量 临时变量, 隐藏监视信息, , , 
.局部变量 表项索引, 整数型, , , 
.局部变量 文件号, 整数型, , , 

赋值 (文件号, 打开文件 (相加 (取运行目录 (), “\EnableList.dat”), 1, ))
.如果真 (等于 (文件号, 0))
    返回 ()
.如果真结束
移到文件首 (文件号)
.循环判断首 ()
    赋值 (text, 读入一行 (文件号))
    .如果真 (不等于 (text, “”))
        赋值 (分割文本, 分割文本 (text, “=”, 2))
        赋值 (临时变量.标题, 分割文本 [1])
        赋值 (临时变量.类型, 到整数 (分割文本 [2]))
        加入成员 (监视内容, 临时变量)
        添加到监视列表 (临时变量.标题, _启动窗口., 临时变量.类型)
    .如果真结束
    
.循环判断尾 (等于 (是否在文件尾 (文件号, 真), 假))
关闭文件 (文件号)

.子程序 保存文件, 逻辑型, , 
.参数 对象, 超级列表框, , 超级列表框
.参数 是否应用, 逻辑型, 可空, 默认为假

.局部变量 i, 整数型, , , 
.局部变量 结果, 逻辑型, , , 
.局部变量 临时变量, 隐藏监视信息, , , 
.局部变量 文件号, 整数型, , , 

赋值 (文件号, 打开文件 (相加 (取运行目录 (), “\EnableList.dat”), 4, ))
.如果真 (并且 (等于 (是否为空 (是否应用), 假), 等于 (是否应用, 真)))
    赋值 (_启动窗口..时钟周期, 0)
    延时 (100)
    清除数组 (监视内容)
.如果真结束
移到文件首 (文件号)
删除数据 (文件号, 取文件长度 (文件号))
移到文件首 (文件号)
.计次循环首 (对象.取表项数 (), i)
    .如果真 (不等于 (对象.取标题 (相减 (i, 1), 0), “”))
        赋值 (临时变量.标题, 对象.取标题 (相减 (i, 1), 0))
        赋值 (临时变量.类型, 对象.取表项数值 (相减 (i, 1)))
        赋值 (结果, 写文本行 (文件号, 相加 (临时变量.标题, “=”, 到文本 (临时变量.类型))))
        .如果真 (并且 (等于 (是否为空 (是否应用), 假), 等于 (是否应用, 真)))
            加入成员 (监视内容, 临时变量)
        .如果真结束
        
    .如果真结束
    
.计次循环尾 ()
关闭文件 (文件号)
_启动窗口.置文本 (., 1, 相加 (“监视列表中共有”, 到文本 (取数组成员数 (监视内容)), “个在监视中”))
.如果真 (大于 (_启动窗口.取表项数 (.), 0))
    赋值 (_启动窗口..时钟周期, 100)
.如果真结束
返回 (结果)


.子程序 隐藏托盘图标, 空白型, , 
.参数 超级列表框, 超级列表框, 可空, 超级列表框_托盘
.参数 是否隐藏, 逻辑型, , 

.局部变量 现行选中项, 整数型, , , 
.局部变量 索引, 整数型, , , 

.如果 (不等于 (超级列表框., -1))
    赋值 (现行选中项, 超级列表框.)
    赋值 (索引, 到数值 (超级列表框.取标题 (超级列表框., 1)))
    .如果 (是否隐藏)
        模块_隐藏托盘图标 (到数值 (超级列表框.取标题 (超级列表框., 1)), 1)
        超级列表框.置标题 (超级列表框., 2, “隐藏”)
    .否则
        模块_隐藏托盘图标 (到数值 (超级列表框.取标题 (超级列表框., 1)), 0)
        超级列表框.置标题 (超级列表框., 2, “显示”)
    .如果结束
    超级列表框.选择表项 (超级列表框.)
    超级列表框.获取焦点 ()
    
.否则
    
.如果结束


.类模块 隐藏窗口类, , , 

.程序集变量 隐藏窗口列表框, 超级列表框, , , 
.程序集变量 活动窗口列表框, 超级列表框, , , 
.程序集变量 进程名, 文本型, , , 
.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _初始化类, 空白型, 公开, 
.参数 活动列表框, 超级列表框, , 
.参数 隐藏列表框, 超级列表框, , 

赋值 (活动窗口列表框, 活动列表框)
赋值 (隐藏窗口列表框, 隐藏列表框)


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 隐藏窗口, 空白型, 公开, 
.参数 句柄, 整数型, , 

.局部变量 临时图片组, 字节集, , , 
.局部变量 窗口标题, 文本型, , , 
.局部变量 进程ID, 整数型, , , 
.局部变量 图片索引, 整数型, , , 
.局部变量 i, 整数型, , , 

.计次循环首 (隐藏窗口列表框.取表项数 (), i)
    .如果真 (等于 (隐藏窗口列表框.取表项数值 (相减 (i, 1)), 句柄))
        ShowWindow (句柄, 0)
        返回 ()
    .如果真结束
    
.计次循环尾 ()
.如果真 (不等于 (句柄, _启动窗口.取窗口句柄 ()))
    ShowWindow (句柄, 0)
    赋值 (窗口标题, API取窗口标题 (句柄))
    赋值 (进程ID, 到进程ID (句柄))
    赋值 (图片索引, 未知支持库函数_26 (图片组_隐藏窗口, 到完整路径 (进程ID), ))
    .如果真 (或者 (等于 (图片索引, -1), 并且 (不等于 (取文件属性 (窗口标题), -1), 等于 (文件是否存在 (窗口标题), 假))))
        赋值 (图片索引, 0)
    .如果真结束
    隐藏窗口列表框.插入表项 (-1, 窗口标题, 图片索引, , , 句柄)
    赋值 (隐藏窗口列表框., 图片组_隐藏窗口)
    隐藏窗口列表框.刷新显示 ()
.如果真结束


.子程序 还原窗口, 空白型, , 
.参数 句柄, 整数型, , 

ShowWindow (句柄, 5)


.子程序 全部还原, 空白型, , 
.局部变量 i, 空白型, , , 

.计次循环首 (隐藏窗口列表框.取表项数 (), i)
    ShowWindow (隐藏窗口列表框.取表项数值 (相减 (i, 1)), 5)
.计次循环尾 ()
ShowWindow (寻找桌面窗口句柄 (), 5)
ShowWindow (寻找任务栏句柄 (), 5)
ShowWindow (寻找开始按钮句柄 (), 5)
ShowWindow (寻找系统时钟句柄 (), 5)


.子程序 刷新活动窗口, 空白型, 公开, 
.参数 图片组, 字节集, , 

.局部变量 窗口句柄列表, 整数型, , "0", 
.局部变量 窗口句柄, 整数型, , , 
.局部变量 窗口标题, 文本型, , , 
.局部变量 i, 整数型, , , 
.局部变量 进程ID, 整数型, , , 
.局部变量 图片索引, 整数型, , , 
.局部变量 进程管理类, 进程管理类, , , 
.局部变量 列表索引, 整数型, , , 

活动窗口列表框.全部删除 ()
赋值 (图片组, 未知支持库函数_30 (16, 16))
.如果真 (不等于 (取字节集长度 (图片组), 0))
    未知支持库函数_24 (图片组, #文件夹16, #白色)
.如果真结束
取可见句柄列表 (窗口句柄列表)
.计次循环首 (取数组成员数 (窗口句柄列表), i)
    赋值 (窗口句柄, 窗口句柄列表 [i])
    赋值 (窗口标题, API取窗口标题 (窗口句柄))
    赋值 (图片索引, 通过句柄取图片索引 (窗口句柄, 窗口标题, 图片组))
    .如果真 (不等于 (窗口句柄, _启动窗口.取窗口句柄 ()))
        赋值 (列表索引, 活动窗口列表框.插入表项 (-1, 窗口标题, 图片索引, , , 窗口句柄))
        .如果 (判断窗口状态_ (窗口句柄))
            活动窗口列表框.置标题 (列表索引, 1, “√”)
        .否则
            活动窗口列表框.置标题 (列表索引, 1, “×”)
        .如果结束
        
    .如果真结束
    
.计次循环尾 ()
赋值 (活动窗口列表框., 图片组)
活动窗口列表框.刷新显示 ()

.子程序 刷新隐藏窗口, 空白型, , 
.参数 图片组, 字节集, , 

.局部变量 窗口列表, 整数型, , "0", 
.局部变量 句柄, 整数型, , , 
.局部变量 i, 整数型, , , 
.局部变量 窗口标题, 文本型, , , 
.局部变量 进程ID, 整数型, , , 
.局部变量 图片索引, 整数型, , , 

.计次循环首 (隐藏窗口列表框.取表项数 (), i)
    赋值 (句柄, 隐藏窗口列表框.取表项数值 (相减 (i, 1)))
    .如果真 (并且 (等于 (判断窗口可见性_ (句柄), 假), 判断窗口句柄_ (句柄)))
        加入成员 (窗口列表, 句柄)
    .如果真结束
    
.计次循环尾 ()
隐藏窗口列表框.全部删除 ()
赋值 (图片组, 未知支持库函数_30 (16, 16))
.如果真 (不等于 (取字节集长度 (图片组), 0))
    未知支持库函数_24 (图片组, #文件夹16, #白色)
.如果真结束
.计次循环首 (取数组成员数 (窗口列表), i)
    赋值 (句柄, 窗口列表 [i])
    赋值 (窗口标题, API取窗口标题 (句柄))
    赋值 (图片索引, 通过句柄取图片索引 (句柄, 窗口标题, 图片组))
    隐藏窗口列表框.插入表项 (-1, 窗口标题, 图片索引, , , 句柄)
.计次循环尾 ()
赋值 (隐藏窗口列表框., 图片组)
隐藏窗口列表框.刷新显示 ()


.子程序 全部隐藏, 空白型, , 
.参数 排除的窗口, 整数型, 可空, 

.局部变量 窗口列表, 整数型, , "0", 
.局部变量 句柄, 整数型, , , 
.局部变量 i, 整数型, , , 
.局部变量 桌面窗口句柄, 整数型, , , 
.局部变量 任务栏句柄, 整数型, , , 

取可见句柄列表 (窗口列表)
赋值 (桌面窗口句柄, 寻找桌面窗口句柄 ())
赋值 (任务栏句柄, 寻找任务栏句柄 ())
.计次循环首 (取数组成员数 (窗口列表), i)
    赋值 (句柄, 窗口列表 [i])
    .如果真 (并且 (不等于 (句柄, 排除的窗口), 不等于 (句柄, _启动窗口.取窗口句柄 ()), 不等于 (句柄, 桌面窗口句柄), 不等于 (句柄, 任务栏句柄)))
         ' ShowWindow (句柄, 7)
        隐藏窗口 (句柄)
        
    .如果真结束
    
.计次循环尾 ()
ShowWindow (桌面窗口句柄, 5)
ShowWindow (任务栏句柄, 5)
ShowWindow (寻找开始按钮句柄 (), 5)
ShowWindow (寻找系统时钟句柄 (), 5)

.子程序 结束指定进程, 逻辑型, , 
.参数 标识, 整数型, , 进程ID或窗口句柄

.局部变量 进程ID, 空白型, , , 
.局部变量 进程句柄, 整数型, , , 
.局部变量 返回值, 逻辑型, , , 

.判断开始 (判断窗口句柄_ (标识))
    赋值 (进程ID, 到进程ID (标识))
.默认
    赋值 (进程ID, 标识)
.判断结束
赋值 (进程句柄, api_OpenProcess (2035711, 0, 进程ID))
.如果真 (等于 (进程句柄, 0))
    返回 (假)
.如果真结束
赋值 (返回值, 结束进程 (进程句柄, 3389))
关闭句柄 (进程句柄)
返回 (返回值)


.子程序 隐藏或结束窗口, 空白型, , 
.参数 窗口标题, 文本型, , 窗口标题
.参数 类型, 整数型, , 0,隐藏,1,结束

.局部变量 窗口列表, 整数型, , "0", 
.局部变量 窗口句柄, 整数型, , , 
.局部变量 i, 整数型, , , 

取可见句柄列表 (窗口列表)
.计次循环首 (取数组成员数 (窗口列表), i)
    赋值 (窗口句柄, 到整数 (窗口列表 [i]))
    .如果真 (不等于 (寻找文本 (API取窗口标题 (窗口句柄), 窗口标题, , 真), -1))
        .如果真 (并且 (等于 (类型, 0), 判断窗口可见性_ (窗口句柄)))
            隐藏窗口 (窗口句柄)
        .如果真结束
        .如果真 (等于 (类型, 1))
            PostMessage (窗口句柄, 16, 0, 0)
            延时 (100)
            结束指定进程 (窗口句柄)
        .如果真结束
        
    .如果真结束
    
.计次循环尾 ()


.子程序 通过句柄取图片索引, 整数型, , 
.参数 句柄, 整数型, , 
.参数 窗口标题, 文本型, , 
.参数 图片组, 字节集, , 

.局部变量 图片索引, 整数型, , , 
.局部变量 进程ID, 整数型, , , 

赋值 (进程ID, 到进程ID (句柄))
赋值 (图片索引, 未知支持库函数_26 (图片组, 到完整路径 (进程ID), ))
.如果真 (或者 (等于 (图片索引, -1), 并且 (不等于 (取文件属性 (窗口标题), -1), 等于 (文件是否存在 (窗口标题), 假))))
    赋值 (图片索引, 0)
.如果真结束
返回 (图片索引)



.子程序 隐藏指定进程的窗口, 逻辑型, , 
.参数 c_进程名, 文本型, , 

返回 (枚举窗口 (&枚举父窗口ID, c_进程名))


.类模块 进程管理类, , , 进程管理类

.程序集变量 进程列表框, 超级列表框, , , 
.程序集变量 隐藏进程列表框, 超级列表框, , , 
.程序集变量 线程列表框, 超级列表框, , , 
.程序集变量 模块列表框, 超级列表框, , , 
.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 _初始化类, 空白型, 公开, 
.参数 进程信息列表框, 超级列表框, , 超级列表框_进程信息
.参数 隐藏进程信息框, 超级列表框, , 
.参数 线程信息列表框, 超级列表框, , 超级列表框_线程信息
.参数 模块信息列表框, 超级列表框, , 超级列表框_模块信息

赋值 (进程列表框, 进程信息列表框)
赋值 (线程列表框, 线程信息列表框)
赋值 (模块列表框, 模块信息列表框)
赋值 (隐藏进程列表框, 隐藏进程信息框)


.子程序 结束系统进程, 空白型, 公开, 超级列表框_进程信息
.局部变量 临时列表框, 超级列表框, , , 
.局部变量 临时整数变量, 整数型, , , 
.局部变量 临时整数数组, 整数型, , "0", 
.局部变量 进程号, 整数型, , , 
.局部变量 进程句柄, 整数型, , , 
.局部变量 返回值, 逻辑型, , , 

.如果 (进程列表框.可有焦点 ())
    赋值 (临时列表框, 进程列表框)
.否则
    赋值 (临时列表框, 隐藏进程列表框)
.如果结束
赋值 (临时整数数组, 临时列表框.取被选择表项 ())
.变量循环首 (1, 取数组成员数 (临时整数数组), 1, 临时整数变量)
    赋值 (进程号, 临时列表框.取表项数值 (临时整数数组 [临时整数变量]))
    赋值 (进程句柄, 打开进程句柄 (2035711, 假, 进程号))
    赋值 (返回值, 结束进程 (进程句柄, 3389))
    关闭句柄 (进程句柄)
    .如果真 (返回值)
        临时列表框.删除表项 (临时整数数组 [临时整数变量])
    .如果真结束
    
.变量循环尾 ()

.子程序 显示文件版本信息, 空白型, , 
.参数 文件名称, 文本型, , 
.参数 显示列表框, 列表框, , 文件版本信息显示在的列表框
.参数 备用文件名, 文本型, 可空, 

.局部变量 文件版本信息, 空白型, , , 文件版本信息
.局部变量 文件名, 文本型, , , 

显示列表框.清空 ()
赋值 (文件名, 文件名称)
.如果真 (小于或等于 (判断取版本信息缓冲区大小 (文件名, 0), 0))
    .如果 (小于或等于 (判断取版本信息缓冲区大小 (备用文件名, 0), 0))
        返回 ()
    .否则
        赋值 (文件名, 备用文件名)
    .如果结束
    
.如果真结束
 ' 取文件版本信息 (文件名, 文件版本信息)
 ' .如果真 () ' <!!!>

.子程序 api取文件版本信息, 空白型, , 
.参数 文件名称, 文本型, , 
.参数 显示列表框, 列表框, , 文件版本信息显示在的列表框

.局部变量 临时文本变量, 文本型, , , 
.局部变量 临时文本变量B, 文本型, , , 
.局部变量 版本信息位置, 字节集, , , 
.局部变量 版本信息长度, 整数型, , , 
.局部变量 内存复制长度, 整数型, , , 
.局部变量 内存复制首位置, 整数型, , , 
.局部变量 版本信息真实位置, 文本型, , , 
.局部变量 临时内存数据存放变量, 字节集, , , 

显示列表框.清空 ()
赋值 (版本信息长度, 判断取版本信息缓冲区大小 (文件名称, 0))
.如果 (小于或等于 (版本信息长度, 0))
    返回 ()
.否则
    赋值 (版本信息位置, 取空白字节集 (版本信息长度))
    取模块文件版本信息 (文件名称, 0, 版本信息长度, 版本信息位置)
    .如果真 (等于 (取版本信息 (版本信息位置, “\VarFileInfo\Translation”, 内存复制首位置, 内存复制长度), 0))
        返回 ()
    .如果真结束
    赋值 (临时内存数据存放变量, 取空白字节集 (内存复制长度))
    内存复制 (临时内存数据存放变量, 内存复制首位置, 内存复制长度)
    赋值 (版本信息真实位置, 取标准八位十六进制文本 (取十六进制文本 (取字节集数据 (临时内存数据存放变量, 3))))
    赋值 (版本信息真实位置, 相加 (取文本右边 (版本信息真实位置, 4), 取文本左边 (版本信息真实位置, 4)))
    .变量循环首 (1, 12, 1, 版本信息长度)
        .如果真 (不等于 (取版本信息 (版本信息位置, 相加 (“\StringFileInfo\”, 版本信息真实位置, “\”, 多项选择 (版本信息长度, “Comments”, “CompanyName”, “FileDescription”, “FileVersion”, “InternalName”, “LegalCopyright”, “LegalTrademarks”, “OriginalFilename”, “PrivateBuild”, “ProductName”, “ProductVersion”, “SpecialBuild”)), 内存复制首位置, 内存复制长度), 0))
            赋值 (临时内存数据存放变量, 取空白字节集 (内存复制长度))
            内存复制 (临时内存数据存放变量, 内存复制首位置, 内存复制长度)
            赋值 (临时文本变量, 取字节集数据 (临时内存数据存放变量, 10))
            .如果真 (不等于 (临时文本变量, “”))
                赋值 (临时文本变量B, 相加 (多项选择 (版本信息长度, “备注”, “公司名”, “描述”, “文件版本”, “内部名称”, “版权”, “合法商标”, “原文件名”, “个人用编译版说明”, “产品名称”, “产品版本”, “特殊编译版说明”), “：”))
                显示列表框.加入项目 (相加 (临时文本变量B, 取重复文本 (相减 (12, 取文本长度 (临时文本变量B)), “ ”), 临时文本变量), )
                
            .如果真结束
            
        .如果真结束
        
    .变量循环尾 ()
.如果结束


.子程序 查看文件属性, 空白型, , 查看文件属性
.参数 文件名, 文本型, , 

.局部变量 当前文件属性, 文件属性, , , 

赋值 (当前文件属性.cbSize, 60)
赋值 (当前文件属性.fMask, 1100)
赋值 (当前文件属性.hwnd, _启动窗口.取窗口句柄 ())
赋值 (当前文件属性.lpVerb, “properties”)
赋值 (当前文件属性.lpFile, 文件名)
赋值 (当前文件属性.lpParameters, “”)
赋值 (当前文件属性.lpDirectory, “”)
赋值 (当前文件属性.nShow, 0)
赋值 (当前文件属性.hInstApp, 0)
赋值 (当前文件属性.lpIDList, 0)
系统对话框 (当前文件属性)


.子程序 刷新线程列表, 空白型, , 
.参数 进程ID, 整数型, , 

.局部变量 线程数组, 整数型, , "0", 
.局部变量 局部_变量, 整数型, , , 
.局部变量 模块信息_数组, 基本DLL模块信息, , "0", 

 ' 以下取线程ID列表
取线程ID列表 (进程ID, 线程数组)
线程列表框.全部删除 ()
.计次循环首 (取数组成员数 (线程数组), 局部_变量)
    线程列表框.插入表项 (-1, 到文本 (线程数组 [局部_变量]), , , , 线程数组 [局部_变量])
.计次循环尾 ()
线程列表框.刷新显示 ()

.子程序 刷新模块引用, 空白型, , 
.参数 进程ID, 整数型, , 

.局部变量 线程数组, 整数型, , "0", 
.局部变量 局部_变量, 整数型, , , 
.局部变量 表行, 整数型, , , 
.局部变量 模块信息_数组, 基本DLL模块信息, , "0", 
.局部变量 临时图片组, 字节集, , , 
.局部变量 图标索引, 整数型, , , 
.局部变量 完整路径, 文本型, , , 
.局部变量 文件关联, 文本型, , , 
.局部变量 文件名, 文本型, , , 

 ' 以下取模块信息列表
赋值 (临时图片组, 未知支持库函数_30 (16, 16))
.如果真 (或者 (等于 (取字节集长度 (临时图片组), 0), 不等于 (未知支持库函数_24 (临时图片组, #dll, #白色), 0)))
    返回 ()
.如果真结束
取调用模块列表 (进程ID, 模块信息_数组)
模块列表框.全部删除 ()
.计次循环首 (取数组成员数 (模块信息_数组), 局部_变量)
    赋值 (文件名, 模块信息_数组 [局部_变量], 模块文件名)
    赋值 (文件关联, 到小写 (取文本右边 (文件名, 3)))
    赋值 (完整路径, 模块信息_数组 [局部_变量], 模块完整路径)
    .如果 (等于 (文件关联, “exe”))
        .如果真 (等于 (文件是否存在 (完整路径), 假))
            赋值 (完整路径, 相加 (未知支持库函数_7 (10), 文件名))
        .如果真结束
        赋值 (图标索引, 未知支持库函数_26 (临时图片组, 完整路径, ))
        .如果真 (等于 (图标索引, -1))
            赋值 (图标索引, 未知支持库函数_24 (临时图片组, #com, #白色))
        .如果真结束
        
    .否则
        .如果 (等于 (文件关联, “dll”))
            赋值 (图标索引, 0)
        .否则
            赋值 (图标索引, 取文件关联图标 (文件关联, 临时图片组))
        .如果结束
        
    .如果结束
    .如果真 (等于 (图标索引, -1))
        赋值 (图标索引, 未知支持库函数_26 (临时图片组, “shell32.dll”, ))
    .如果真结束
    赋值 (表行, 模块列表框.插入表项 (图标索引, , , 模块信息_数组 [局部_变量], 模块句柄))
    模块列表框.置标题 (表行, 0, 模块信息_数组 [局部_变量], 模块文件名)
    模块列表框.置标题 (表行, 1, 取标准八位十六进制文本 (取十六进制文本 (模块信息_数组 [局部_变量], 模块句柄)))
    模块列表框.置标题 (表行, 2, 取标准八位十六进制文本 (取十六进制文本 (模块信息_数组 [局部_变量], 模块基址)))
    模块列表框.置标题 (表行, 3, 取标准八位十六进制文本 (取十六进制文本 (模块信息_数组 [局部_变量], 模块基址大小)))
    
    模块列表框.置标题 (表行, 4, 模块信息_数组 [局部_变量], 模块完整路径)
.计次循环尾 ()
赋值 (模块列表框., 临时图片组)
模块列表框.刷新显示 ()


.子程序 刷新进程信息, 空白型, 公开, 
.局部变量 临时进程信息, 进程信息输出, , , 
.局部变量 临时图片组, 字节集, , , 
.局部变量 文件名, 文本型, , , 
.局部变量 文件关联, 文本型, , , 
.局部变量 完整路径, 文本型, , , 
.局部变量 快照句柄, 整数型, , , 
.局部变量 图标索引, 整数型, , , 
.局部变量 进程标识, 整数型, , , 
.局部变量 返回值, 整数型, , , 
.局部变量 表项索引, 整数型, , , 
.局部变量 i, 整数型, , , 

赋值 (快照句柄, 创建进程快照 (2, 0))
赋值 (临时进程信息.结构大小, 296)
赋值 (返回值, 开始进程快照 (快照句柄, 临时进程信息))
进程列表框.全部删除 ()
赋值 (临时图片组, 未知支持库函数_30 (16, 16))
.如果真 (或者 (等于 (取字节集长度 (临时图片组), 0), 不等于 (未知支持库函数_24 (临时图片组, #com, #白色), 0)))
    返回 ()
.如果真结束
.判断循环首 (不等于 (返回值, 0))
    赋值 (进程标识, 临时进程信息.进程标识)
    赋值 (文件名, 到文本 (临时进程信息.进程对应文件名))
    赋值 (文件关联, 到小写 (取文本右边 (文件名, 3)))
    .如果 (等于 (文件关联, “exe”))
        赋值 (完整路径, 到完整路径 (进程标识))
        .如果真 (等于 (文件是否存在 (完整路径), 假))
            赋值 (完整路径, 相加 (未知支持库函数_7 (10), 文件名))
        .如果真结束
        赋值 (图标索引, 未知支持库函数_26 (临时图片组, 完整路径, ))
        .如果真 (等于 (图标索引, -1))
            赋值 (图标索引, 0)
        .如果真结束
        
    .否则
        赋值 (图标索引, 取文件关联图标 (文件关联, 临时图片组))
    .如果结束
    .如果真 (等于 (图标索引, -1))
        .如果 (等于 (倒找文本 (文件名, “.”, , 真), -1))
            赋值 (图标索引, 0)
        .否则
            赋值 (图标索引, 未知支持库函数_26 (临时图片组, 相加 (未知支持库函数_7 (10), “shell32.dll”), ))
        .如果结束
        
    .如果真结束
    .如果真 (不等于 (进程标识, CMD进程))
        赋值 (表项索引, 进程列表框.插入表项 (-1, 文件名, 图标索引, , , 进程标识))
        进程列表框.置标题 (表项索引, 1, 到文本 (临时进程信息.进程标识))
        进程列表框.置标题 (表项索引, 2, 到文本 (临时进程信息.调用线程数))
        进程列表框.置标题 (表项索引, 3, 到文本 (临时进程信息.母进程标识))
    .如果真结束
    赋值 (返回值, 继续进程快照 (快照句柄, 临时进程信息))
.判断循环尾 ()
关闭句柄 (快照句柄)
赋值 (进程列表框., 临时图片组)
进程列表框.刷新显示 ()


.子程序 加入隐藏进程, 空白型, 公开, 
.参数 窗口句柄, 整数型, , 

.局部变量 临时图片组, 字节集, , , 
.局部变量 临时变量, 基本进程信息, , , 
.局部变量 图标索引, 整数型, , , 
.局部变量 表项索引, 整数型, , , 

隐藏进程列表框.全部删除 ()
赋值 (临时变量.进程ID, 到进程ID (窗口句柄))
输出调试文本 (相加 (“临时变量.进程ID=”, 到文本 (临时变量.进程ID)))

 ' 赋值 (临时变量.进程全路径名, 到完整路径 (临时变量.进程ID))
赋值 (临时图片组, 未知支持库函数_30 (16, 16))
.如果真 (或者 (等于 (取字节集长度 (临时图片组), 0), 不等于 (未知支持库函数_24 (临时图片组, #com, #白色), 0)))
    返回 ()
.如果真结束
赋值 (图标索引, 未知支持库函数_26 (临时图片组, 临时变量.进程全路径名, ))
.如果真 (等于 (图标索引, -1))
    赋值 (图标索引, 0)
.如果真结束
赋值 (表项索引, 隐藏进程列表框.插入表项 (-1, 临时变量.进程全路径名, 图标索引, , , 临时变量.进程ID))
隐藏进程列表框.置标题 (表项索引, 1, 到文本 (临时变量.进程ID))
赋值 (隐藏进程列表框., 临时图片组)
隐藏进程列表框.刷新显示 ()



.子程序 远程执行API, 整数型, , 返回远程线程句柄
.参数 远程进程ID, 整数型, , 
.参数 DLL名称, 文本型, , 
.参数 API函数名称, 文本型, , 
.参数 函数传入参数, 整数型, , 

.局部变量 进程句柄, 整数型, , , 
.局部变量 线程句柄, 整数型, , , 
.局部变量 地址, 整数型, , , 

赋值 (地址, 取DLL函数地址 (取程序或DLL句柄 (DLL名称), API函数名称))
赋值 (进程句柄, OpenProcess (2035711, 0, 远程进程ID))
赋值 (线程句柄, 运行远程线程 (进程句柄, 0, 0, 地址, 函数传入参数, 0, 0))
监测对象 (线程句柄, 4294967295)
关闭句柄 (线程句柄)
关闭句柄 (进程句柄)
返回 (线程句柄)



.子程序 api取系统进程信息, 逻辑型, , 
.参数 进程信息输出, 进程信息输出, 数组, 

.局部变量 临时变量, 整数型, , , 
.局部变量 临时变量B, 整数型, , , 
.局部变量 线程基本优先级, 整数型, , "0", 
.局部变量 临时进程信息, 进程信息输出, , , 

清除数组 (进程信息输出)
赋值 (临时变量, 创建进程快照 (2, 0))
赋值 (临时进程信息.结构大小, 296)
赋值 (临时变量B, 开始进程快照 (临时变量, 临时进程信息))
.判断循环首 (不等于 (临时变量B, 0))
    加入成员 (进程信息输出, 临时进程信息)
    赋值 (临时变量B, 继续进程快照 (临时变量, 临时进程信息))
.判断循环尾 ()
关闭句柄 (临时变量)
.如果真 (大于 (取数组成员数 (进程信息输出), 0))
    返回 (真)
.如果真结束
返回 (假)

.子程序 刷新进程信息2, 空白型, , 
.局部变量 临时图片组, 字节集, , , 
.局部变量 完整路径, 文本型, , , 
.局部变量 进程信息, 进程信息参考, , "0", 
.局部变量 图标索引, 整数型, , , 
.局部变量 表项索引, 整数型, , , 
.局部变量 i, 整数型, , , 

赋值 (临时图片组, 未知支持库函数_30 (16, 16))
.如果真 (或者 (等于 (取字节集长度 (临时图片组), 0), 不等于 (未知支持库函数_24 (临时图片组, #com, #白色), 0)))
    返回 ()
.如果真结束
取进程信息列表 (进程信息)
进程列表框.全部删除 ()
.变量循环首 (1, 取数组成员数 (进程信息), 1, i)
    .如果 (等于 (进程信息 [i], 进程ID, 0))
        赋值 (图标索引, 未知支持库函数_24 (临时图片组, #文件夹16, #白色))
    .否则
        赋值 (完整路径, 进程信息 [i], 文件路径)
        .如果真 (等于 (文件是否存在 (完整路径), 假))
            赋值 (完整路径, 相加 (未知支持库函数_7 (10), 到文本 (进程信息 [i], 文件名)))
        .如果真结束
        赋值 (图标索引, 未知支持库函数_26 (临时图片组, 完整路径, ))
        .如果真 (等于 (图标索引, -1))
            赋值 (图标索引, 0)
        .如果真结束
        
    .如果结束
    .如果真 (不等于 (进程信息 [i], 进程ID, CMD进程))
        赋值 (表项索引, 进程列表框.插入表项 (-1, 到文本 (进程信息 [i], 文件名), 图标索引, , , 进程信息 [i], 进程ID))
        进程列表框.置标题 (表项索引, 1, 到文本 (进程信息 [i], 进程ID))
        进程列表框.置标题 (表项索引, 2, 到文本 (进程信息 [i], 线程数))
        进程列表框.置标题 (表项索引, 3, 到文本 (进程信息 [i], 父进程ID))
        
    .如果真结束
    
.变量循环尾 ()
赋值 (进程列表框., 临时图片组)
进程列表框.刷新显示 ()


.窗口程序集 窗口程序集2, , , 

.程序集变量 树型框操作类, 树型框操作类, , , 
.子程序 _窗口_创建完毕, 空白型, , 
树型框操作类._初始化类 ()
赋值 (., 338)
赋值 (.顶边, 相减 (., 2))
赋值 (., 真)
枚举窗口 (&枚举父窗口过程_, 字符 (0))
刷新显示 ()

.子程序 枚举父窗口过程_, 逻辑型, , 
.参数 hwnd, 整数型, , 

.局部变量 局部_临时项目, 项目数据, , , 
.局部变量 索引, 整数型, , , 

.如果真 (不等于 (hwnd, 0))
    赋值 (局部_临时项目.项目文本, 相加 (取标准八位十六进制文本 (取十六进制文本 (hwnd)), 取空白文本 (2), API取窗口标题 (hwnd)))
    赋值 (局部_临时项目.项目数值, hwnd)
    赋值 (索引, -1.加入项目 (局部_临时项目.项目文本, , , hwnd))
    
     ' 索引 ＝ 树型框操作类.数据_加入项目_API方式加入 (-1, 局部_临时项目, , , 假, )
    EnumChildWindows (hwnd, &枚举子窗口过程_, 索引)
     ' 调试输出 (hwnd, EnableWindow (hwnd, 1))
    返回 (真)
.如果真结束
返回 (假)


.子程序 枚举子窗口过程_, 逻辑型, , 
.参数 hwnd, 整数型, , 
.参数 p, 整数型, , 

.局部变量 局部_临时项目, 项目数据, , , 
.局部变量 窗口标题, 文本型, , , 

.如果真 (不等于 (hwnd, 0))
    赋值 (局部_临时项目.项目文本, 相加 (取标准八位十六进制文本 (取十六进制文本 (hwnd)), 取空白文本 (2), API取窗口标题 (hwnd)))
    赋值 (局部_临时项目.项目数值, hwnd)
    树型框操作类.数据_加入项目_API方式加入 (p, 局部_临时项目, , , , 真)
    返回 (真)
.如果真结束
返回 (假)


.子程序 _树型框1_项目被选择, 空白型, , 
.参数 选择方式, 整数型, , 

.局部变量 hwnd, 空白型, , , 

赋值 (hwnd, .取项目数值 (.最大化按钮))
.如果真 (等于 (判断窗口句柄_ (hwnd), 假))
    .删除项目 (.最大化按钮)
    返回 ()
.如果真结束
.置项目文本 (.最大化按钮, 相加 (取标准八位十六进制文本 (取十六进制文本 (hwnd)), 取空白文本 (2), API取窗口标题 (hwnd)))
.如果 (判断窗口可见性_ (hwnd))
    赋值 (.选中, 假)
.否则
    赋值 (.选中, 真)
.如果结束
赋值 (.内容, api_取窗口类名 (hwnd))
赋值 (.内容, 到完整路径 (到进程ID (hwnd)))

.子程序 _选择框_隐藏_被单击, 空白型, , 
.局部变量 hwnd, 空白型, , , 

赋值 (hwnd, .取项目数值 (.最大化按钮))
输出调试文本 (hwnd)
.判断开始 (判断窗口可见性_ (hwnd))
    .如果真 (或者 (不等于 (hwnd, 窗口.取窗口句柄 ()), 不等于 (取父窗口 (hwnd), 取窗口句柄 ())))
        ShowWindow (hwnd, 0)
    .如果真结束
    
.默认
    ShowWindow (hwnd, 5)
.判断结束


.子程序 _树型框1_右键单击项目, 空白型, , 
.局部变量 hwnd, 空白型, , , 

赋值 (hwnd, .取项目数值 (.最大化按钮))
.判断开始 (判断窗口可见性_ (hwnd))
    赋值 (.可视, 真)
    赋值 (.可视, 假)
.默认
    赋值 (.可视, 假)
    赋值 (.可视, 真)
.判断结束
弹出菜单 ()


.子程序 _隐藏窗口_被选择, 空白型, , 
.局部变量 hwnd, 空白型, , , 

赋值 (hwnd, .取项目数值 (.最大化按钮))
.如果真 (并且 (不等于 (hwnd, 窗口.取窗口句柄 ()), 不等于 (取父窗口 (hwnd), 窗口.取窗口句柄 ())))
    ShowWindow (hwnd, 0)
    赋值 (.选中, 真)
.如果真结束


.子程序 _显示窗口_被选择, 空白型, , 
.局部变量 hwnd, 空白型, , , 

赋值 (hwnd, .取项目数值 (.最大化按钮))
ShowWindow (hwnd, 5)
赋值 (.选中, 假)


.子程序 _转到进程_被选择, 空白型, , 
.局部变量 父窗口, 整数型, , , 
.局部变量 hwnd, 空白型, , , 

赋值 (hwnd, .取项目数值 (.最大化按钮))
赋值 (父窗口, 取父窗口 (hwnd))
.如果 (不等于 (父窗口, 0))
    赋值 (_启动窗口..内容, 到文本 (父窗口))
.否则
    赋值 (_启动窗口..内容, 到文本 (hwnd))
.如果结束
赋值 (_启动窗口.., 1)
销毁 ()


.子程序 _添加到监视列表_被选择, 空白型, , 
.局部变量 hwnd, 整数型, , , 
.局部变量 标题, 文本型, , , 
.局部变量 索引, 整数型, , , 

赋值 (索引, .取父项目 (.最大化按钮))
.如果 (不等于 (索引, -1))
    赋值 (hwnd, 索引.取项目数值 ())
.否则
    赋值 (hwnd, .取项目数值 (.最大化按钮))
.如果结束
赋值 (标题, API取窗口标题 (hwnd))
.判断开始 (等于 (删首尾空 (标题), “”))
    添加到监视列表 (.内容, _启动窗口., 18)
.默认
    添加到监视列表 (标题, _启动窗口., 17)
.判断结束
_启动窗口._按钮_应用托盘监视_被单击 ()

.子程序 _结束窗口_被选择, 空白型, , 
.局部变量 hwnd, 整数型, , , 

赋值 (hwnd, .取项目数值 (.最大化按钮))
PostMessage (hwnd, #WM_CLOSE, 0, 0)




.子程序 _按钮_刷新_被单击, 空白型, , 
清空 ()
枚举窗口 (&枚举父窗口过程_, 字符 (0))
刷新显示 ()


.子程序 _按钮_关闭_被单击, 空白型, , 
销毁 ()

.子程序 _树型框1_获得焦点, 空白型, , 
连续赋值 (假, .禁止, .禁止)


.子程序 _时钟1_周期事件, 空白型, , 
.局部变量 hwnd, 空白型, , , 

赋值 (hwnd, .取项目数值 (.最大化按钮))
.如果真 (等于 (判断窗口句柄_ (hwnd), 假))
    .删除项目 (.最大化按钮)
    返回 ()
.如果真结束
.置项目文本 (.最大化按钮, 相加 (取标准八位十六进制文本 (取十六进制文本 (hwnd)), 取空白文本 (2), API取窗口标题 (hwnd)))


.子程序 _标签_左边_反馈事件, 整数型, , 
.参数 参数一, 整数型, , 
.参数 参数二, 整数型, , 



.子程序 _超级按钮_退出_被单击, 空白型, , 
销毁 ()

.子程序 _透明标签_窗口标题_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (鼠标位置.横向位置, 相加 (横向位置, .左边))
赋值 (鼠标位置.纵向位置, 相加 (纵向位置, .顶边))
赋值 (.时钟周期, 10)

.子程序 _透明标签_窗口标题_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.时钟周期, 0)

.子程序 _时钟_移动_周期事件, 空白型, , 
窗口.移动 (相减 (取鼠标水平位置 (), 鼠标位置.横向位置), 相减 (取鼠标垂直位置 (), 鼠标位置.纵向位置), , )


.子程序 _窗口_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (鼠标位置.横向位置, 横向位置)
赋值 (鼠标位置.纵向位置, 纵向位置)
赋值 (.时钟周期, 10)


.子程序 _窗口_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.时钟周期, 0)

.类模块 树型框操作类, , , 

.子程序 数据_取项目数, 整数型, , 返回树型框中所有项目的数目。


.子程序 数据_取缩进层次, 整数型, , 返回指定项目所处缩进层次，层次值从1开始。如果未找到指定项目，返回 0 。
.参数 参数_项目索引, 整数型, , 0 为项目一，1 为项目二，如此类推。
.参数 参数_是否自动更新数据, 逻辑型, 可空, 可以被省略。选择是否自动进行数据更新。当为真时，每次读取数据时都会对数据进行刷新，可能会因此而减慢速度。默认值为“置自动更新状态”方法所设置的状态。



.子程序 数据_取项目文本, 文本型, , 返回指定项目的文本。如果该项目不存在，将返回空文本。
.参数 参数_项目索引, 整数型, , 0 为项目一，1 为项目二，如此类推。
.参数 参数_是否自动更新数据, 逻辑型, 可空, 可以被省略。选择是否自动进行数据更新。当为真时，每次读取数据时都会对数据进行刷新，可能会因此而减慢速度。默认值为“置自动更新状态”方法所设置的状态。



.子程序 数据_取图片, 整数型, , 返回指定项目的图片索引。如果该项目不存在，将返回 -1 
.参数 参数_项目索引, 整数型, , 0 为项目一，1 为项目二，如此类推。
.参数 参数_是否自动更新数据, 逻辑型, 可空, 可以被省略。选择是否自动进行数据更新。当为真时，每次读取数据时都会对数据进行刷新，可能会因此而减慢速度。默认值为“置自动更新状态”方法所设置的状态。



.子程序 数据_取选中图片, 整数型, , 返回指定项目被选中后的图片索引。如果该项目不存在，将返回 -1 。
.参数 参数_项目索引, 整数型, , 0 为项目一，1 为项目二，如此类推。
.参数 参数_是否自动更新数据, 逻辑型, 可空, 可以被省略。选择是否自动进行数据更新。当为真时，每次读取数据时都会对数据进行刷新，可能会因此而减慢速度。默认值为“置自动更新状态”方法所设置的状态。



.子程序 数据_取项目数值, 整数型, , 返回与指定项目相关联的数值。如果该项目不存在，将返回 0 。
.参数 参数_项目索引, 整数型, , 0 为项目一，1 为项目二，如此类推。
.参数 参数_是否自动更新数据, 逻辑型, 可空, 可以被省略。选择是否自动进行数据更新。当为真时，每次读取数据时都会对数据进行刷新，可能会因此而减慢速度。默认值为“置自动更新状态”方法所设置的状态。



.子程序 数据_置图片, 逻辑型, , 设置在指定项目首部所显示图片的索引。成功返回真，失败返回假。
.参数 参数_项目索引, 整数型, , 0 为项目一，1 为项目二，如此类推。
.参数 参数_图片索引, 整数型, , 图片索引用于指定图片组属性中的某张图片，从 0 开始。
.参数 参数_是否自动更新数据, 逻辑型, 可空, 可以被省略。选择是否自动进行数据更新。当为真时，每次读取数据时都会对数据进行刷新，可能会因此而减慢速度。默认值为“置自动更新状态”方法所设置的状态。



.子程序 数据_置选中图片, 逻辑型, , 设置指定项目被选中后所显示图片的索引。成功返回真，失败返回假。
.参数 参数_项目索引, 整数型, , 0 为项目一，1 为项目二，如此类推。
.参数 参数_图片索引, 整数型, , 图片索引用于指定图片组属性中的某张图片，从 0 开始。
.参数 参数_是否自动更新数据, 逻辑型, 可空, 可以被省略。选择是否自动进行数据更新。当为真时，每次读取数据时都会对数据进行刷新，可能会因此而减慢速度。默认值为“置自动更新状态”方法所设置的状态。



.子程序 数据_置项目数值, 逻辑型, , 设置与指定项目相关联的数值。成功返回真，失败返回假。
.参数 参数_项目索引, 整数型, , 0 为项目一，1 为项目二，如此类推。
.参数 参数_欲置入的项目数值, 整数型, 可空, 可以被省略。该数值与指定项目相关联。如果本参数被省略，默认值为 0 。
.参数 参数_是否自动更新数据, 逻辑型, 可空, 可以被省略。选择是否自动进行数据更新。当为真时，每次读取数据时都会对数据进行刷新，可能会因此而减慢速度。默认值为“置自动更新状态”方法所设置的状态。



.子程序 数据_置项目文本, 逻辑型, , 设置指定项目的文本。成功返回真，失败返回假。
.参数 参数_项目索引, 整数型, , 0 为项目一，1 为项目二，如此类推。
.参数 参数_欲置入的项目文本, 文本型, , 
.参数 参数_是否自动更新数据, 逻辑型, 可空, 可以被省略。选择是否自动进行数据更新。当为真时，每次读取数据时都会对数据进行刷新，可能会因此而减慢速度。默认值为“置自动更新状态”方法所设置的状态。



.子程序 动作_保证显示, 空白型, , 
.参数 参数_项目索引, 整数型, , 0 为项目一，1 为项目二，如此类推。
.参数 参数_是否自动更新数据, 逻辑型, 可空, 可以被省略。选择是否自动进行数据更新。当为真时，每次读取数据时都会对数据进行刷新，可能会因此而减慢速度。默认值为“置自动更新状态”方法所设置的状态。



.子程序 状态_扩展, 空白型, , 将指打开指定项目的下属分枝。
.参数 参数_项目索引, 整数型, , 0 为项目一，1 为项目二，如此类推。
.参数 参数_是否自动更新数据, 逻辑型, 可空, 可以被省略。选择是否自动进行数据更新。当为真时，每次读取数据时都会对数据进行刷新，可能会因此而减慢速度。默认值为“置自动更新状态”方法所设置的状态。



.子程序 状态_收缩, 空白型, , 缩回指定项目的下属分枝。
.参数 参数_项目索引, 整数型, , 0 为项目一，1 为项目二，如此类推。
.参数 参数_是否自动更新数据, 逻辑型, 可空, 可以被省略。选择是否自动进行数据更新。当为真时，每次读取数据时都会对数据进行刷新，可能会因此而减慢速度。默认值为“置自动更新状态”方法所设置的状态。



.子程序 数据_加入项目_API方式加入, 整数型, , 将单个或一批项目加入到树型框中，如果仅加入一个项目，成功返回加入后该项目所处的位置，失败返回 -1 。如果成批加入项目，成功返回 0 ，失败返回 -1 。成批加入项目可以用作一次性快速加入大量项目到树型框中。
.参数 参数_父项目索引, 整数型, 可空, 可以被省略。指定欲加入项目所处的父项目，0 为项目一，1 为项目二，如此类推。如果没有父项目（即欲加入项目为顶层项目），请提供值 -1 。如果本参数被省略，默认值为 -1 。
.参数 参数_项目数据1, 项目数据, 可空, 用于只加入一个项目，如欲批量加入，请留空
.参数 参数_项目数据2, 项目数据, 可空 数组, 用于批量加入项目
.参数 参数_加入方式, 整数型, 可空, 可以被省略。默认为 #树形框插入项目_在列表尾部插入
.参数 参数_是否自动更新数据, 逻辑型, 可空, 可以被省略。选择是否自动进行数据更新。当为真时，每次读取数据时都会对数据进行刷新，可能会因此而减慢速度。默认值为“置自动更新状态”方法所设置的状态。
.参数 参数_是否使用高速插入, 逻辑型, 可空, 可以被省略。当使用高速插入时，最高可提速5倍。默认为真高速加入。



.子程序 数据_删除项目, 逻辑型, , 删除树型框中的指定项目。成功返回真，失败返回假。
.参数 参数_项目索引, 整数型, , 0 为项目一，1 为项目二，如此类推。
.参数 参数_是否自动更新数据, 逻辑型, 可空, 可以被省略。选择是否自动进行数据更新。当为真时，每次读取数据时都会对数据进行刷新，可能会因此而减慢速度。默认值为“置自动更新状态”方法所设置的状态。



.子程序 数据_清空, 空白型, , 删除树型框中的所有项目。


.子程序 数据_取父项目, 整数型, , 返回指定项目的父项目索引。如果该项目为顶层项目，将返回 -1 。
.参数 参数_项目索引, 整数型, , 0 为项目一，1 为项目二，如此类推。
.参数 参数_是否自动更新数据, 逻辑型, 可空, 可以被省略。选择是否自动进行数据更新。当为真时，每次读取数据时都会对数据进行刷新，可能会因此而减慢速度。默认值为“置自动更新状态”方法所设置的状态。



.子程序 状态_是否有子项目, 逻辑型, , 如果指定项目存在子项目，返回真，否则返回假。如果本命令返回真，意味着指定项目的下一项即为此项目的第一个子项目。
.参数 参数_项目索引, 整数型, , 0 为项目一，1 为项目二，如此类推。
.参数 参数_是否自动更新数据, 逻辑型, 可空, 可以被省略。选择是否自动进行数据更新。当为真时，每次读取数据时都会对数据进行刷新，可能会因此而减慢速度。默认值为“置自动更新状态”方法所设置的状态。



.子程序 状态_是否已扩展, 逻辑型, , 如果树型框中的指定项目具有子项目并已扩展显示，返回真，否则返回假。
.参数 参数_项目索引, 整数型, , 0 为项目一，1 为项目二，如此类推。
.参数 参数_是否自动更新数据, 逻辑型, 可空, 可以被省略。选择是否自动进行数据更新。当为真时，每次读取数据时都会对数据进行刷新，可能会因此而减慢速度。默认值为“置自动更新状态”方法所设置的状态。



.子程序 样式_背景色_置, 空白型, , 
.参数 参数_背景颜色, 整数型, , 



.子程序 样式_背景色_取, 整数型, , 


.子程序 样式_项目间隔_置, 空白型, , 
.参数 参数_间隔距离, 整数型, 可空, 默认为16



.子程序 样式_项目间隔_取, 整数型, , 


.子程序 样式_文本颜色_置, 空白型, , 
.参数 参数_文本颜色, 整数型, , 



.子程序 样式_文本颜色_取, 整数型, , 


.子程序 样式_连线颜色_置, 空白型, , 
.参数 参数_连线颜色, 整数型, , 



.子程序 样式_连线颜色_取, 整数型, , 


.子程序 样式_使用复选框, 空白型, , 


.子程序 样式_使用热点跟踪, 空白型, , 


.子程序 样式_禁止滚动条, 逻辑型, , 返回禁止的状态
.参数 参数_禁止, 逻辑型, 可空, 真为禁止，假为解除禁止。默认为真



.子程序 样式_禁止水平滚动条, 逻辑型, , 返回禁止的状态
.参数 参数_禁止, 逻辑型, 可空, 真为禁止，假为解除禁止。默认为真



.子程序 样式_使用整行选择, 逻辑型, , 要使用本功能，就不能使用显示连线。
.参数 参数_是否使用, 逻辑型, 可空, 真为使用，假为不使用。默认为真。



.子程序 状态_是否选中, 逻辑型, , 
.参数 参数_项目索引, 整数型, , 0 为项目一，1 为项目二，如此类推。
.参数 参数_是否自动更新数据, 逻辑型, 可空, 可以被省略。选择是否自动进行数据更新。当为真时，每次读取数据时都会对数据进行刷新，可能会因此而减慢速度。默认值为“置自动更新状态”方法所设置的状态。



.子程序 状态_选中项目, 逻辑型, , 操作成功返回真
.参数 参数_项目索引, 整数型, , 0 为项目一，1 为项目二，如此类推。
.参数 参数_是否选中, 逻辑型, 可空, 可以被省略。设置项目的选中状态，默认为真。
.参数 参数_是否自动更新数据, 逻辑型, 可空, 可以被省略。选择是否自动进行数据更新。当为真时，每次读取数据时都会对数据进行刷新，可能会因此而减慢速度。默认值为“置自动更新状态”方法所设置的状态。



.子程序 状态_加粗, 空白型, , 
.参数 参数_项目索引, 整数型, , 0 为项目一，1 为项目二，如此类推。
.参数 参数_是否自动更新数据, 逻辑型, 可空, 可以被省略。选择是否自动进行数据更新。当为真时，每次读取数据时都会对数据进行刷新，可能会因此而减慢速度。默认值为“置自动更新状态”方法所设置的状态。



.子程序 状态_取消加粗, 空白型, , 将指定项目的标题取消加粗显示。
.参数 参数_项目索引, 整数型, , 0 为项目一，1 为项目二，如此类推。
.参数 参数_是否自动更新数据, 逻辑型, 可空, 可以被省略。选择是否自动进行数据更新。当为真时，每次读取数据时都会对数据进行刷新，可能会因此而减慢速度。默认值为“置自动更新状态”方法所设置的状态。



.子程序 数据_现行选中项_置, 空白型, , 
.参数 参数_项目索引, 整数型, , 0 为项目一，1 为项目二，如此类推。
.参数 参数_是否自动更新数据, 逻辑型, 可空, 可以被省略。选择是否自动进行数据更新。当为真时，每次读取数据时都会对数据进行刷新，可能会因此而减慢速度。默认值为“置自动更新状态”方法所设置的状态。



.子程序 数据_取可显示数量, 整数型, , 取当前在树形框的用户区中大约可以显示的项目数量
.参数 参数_是否自动更新数据, 逻辑型, 可空, 可以被省略。选择是否自动进行数据更新。当为真时，每次读取数据时都会对数据进行刷新，可能会因此而减慢速度。默认值为“置自动更新状态”方法所设置的状态。



.子程序 数据_取第一项索引, 整数型, , 取在当前树形框中显示的第一条项目的索引。失败返回-1
.参数 参数_是否自动更新数据, 逻辑型, 可空, 可以被省略。选择是否自动进行数据更新。当为真时，每次读取数据时都会对数据进行刷新，可能会因此而减慢速度。默认值为“置自动更新状态”方法所设置的状态。



.子程序 数据_现行选中项_取, 整数型, , 
.参数 局部_是否自动更新数据, 逻辑型, 可空, 可以被省略。选择是否自动进行数据更新。当为真时，每次读取数据时都会对数据进行刷新，可能会因此而减慢速度。默认值为“置自动更新状态”方法所设置的状态。



.子程序 数据_取全部选中项, 变体型, , 返回选中项索引数组
.参数 参数_是否自动更新数据, 逻辑型, 可空, 可以被省略。选择是否自动进行数据更新。当为真时，每次读取数据时都会对数据进行刷新，可能会因此而减慢速度。默认值为“置自动更新状态”方法所设置的状态。



.子程序 置自动更新状态, 空白型, , 本方法决定了各个其它方法中“是否自动更新数据”参数的默认值。默认状态下，如果不使用本方法进行操作，“是否自动更新数据”参数的默认值将自动设置为真。
.参数 局部_自动更新, 逻辑型, , 



.子程序 查询自动更新状态, 逻辑型, , 


.子程序 _初始化类, 空白型, , 
.参数 参数_树型框, 树型框, , 



.子程序 _更新数据, 空白型, , 当某些操作没有使用自动更新时，可在这里以手动方式进行数据更新


.子程序 数据_加入项目_字节集方式加入, 整数型, , 将单个或一批项目加入到树型框中，如果仅加入一个项目，成功返回加入后该项目所处的位置，失败返回 -1 。如果成批加入项目，成功返回 0 ，失败返回 -1 。成批加入项目可以用作一次性快速加入大量项目到树型框中。注意，加入数据后，树形框的句柄将会改变。
.参数 参数_父项目索引, 整数型, 可空, 可以被省略。指定欲加入项目所处的父项目，0 为项目一，1 为项目二，如此类推。如果没有父项目（即欲加入项目为顶层项目），请提供值 -1 。如果本参数被省略，默认值为 -1 。
.参数 参数_项目文本, 文本型, 数组, 如果欲只加入一个项目，请提供一个成员的数组数据。
.参数 参数_图片索引, 整数型, 可空 数组, 可以被省略。图片索引用于指定图片组属性中的某张图片，从 0 开始。如果本参数被省略，所有被加入项目的图片索引都默认为 0 。如果欲只加入一个项目，请提供一个成员的数组数据。
.参数 参数_选中图片索引, 整数型, 可空 数组, 可以被省略。选中图片索引用于指定项目被选中后所显示的图片，-1 表示与图片索引一致。如果本参数被省略，所有被加入项目的选中图片索引都默认为 -1 。如果欲只加入一个项目，请提供一个成员的数组数据。
.参数 参数_项目数值, 整数型, 可空 数组, 可以被省略。指定与本项目相关联的数值。如果本参数被省略，所有被加入项目的项目数值都默认为 0 。如果欲只加入一个项目，请提供一个成员的数组数据。
.参数 参数_是否自动更新数据, 逻辑型, 可空, 可以被省略。选择是否自动进行数据更新。当为真时，每次读取数据时都会对数据进行刷新，可能会因此而减慢速度。默认值为真。



.子程序 数据_读树形框, 空白型, , 
.参数 参数_项目数据, 字节集, , 
.参数 参数_树型框结构数据, 树型框结构, 参考 数组, 



.类模块 树型框句柄操作类, , , 

.子程序 数据_取项目数, 整数型, , 返回树型框中所有项目的数目。


.子程序 数据_取缩进层次, 整数型, , 返回指定项目所处缩进层次，层次值从1开始。如果未找到指定项目，返回 0 。
.参数 参数_项目索引, 整数型, , 0 为项目一，1 为项目二，如此类推。
.参数 参数_是否自动更新数据, 逻辑型, 可空, 可以被省略。选择是否自动进行数据更新。当为真时，每次读取数据时都会对数据进行刷新，可能会因此而减慢速度。默认值为“置自动更新状态”方法所设置的状态。



.子程序 数据_取项目文本, 文本型, , 返回指定项目的文本。如果该项目不存在，将返回空文本。
.参数 参数_项目索引, 整数型, , 0 为项目一，1 为项目二，如此类推。
.参数 参数_是否自动更新数据, 逻辑型, 可空, 可以被省略。选择是否自动进行数据更新。当为真时，每次读取数据时都会对数据进行刷新，可能会因此而减慢速度。默认值为“置自动更新状态”方法所设置的状态。



.子程序 数据_取图片, 整数型, , 返回指定项目的图片索引。如果该项目不存在，将返回 -1 
.参数 参数_项目索引, 整数型, , 0 为项目一，1 为项目二，如此类推。
.参数 参数_是否自动更新数据, 逻辑型, 可空, 可以被省略。选择是否自动进行数据更新。当为真时，每次读取数据时都会对数据进行刷新，可能会因此而减慢速度。默认值为“置自动更新状态”方法所设置的状态。



.子程序 数据_取选中图片, 整数型, , 返回指定项目被选中后的图片索引。如果该项目不存在，将返回 -1 。
.参数 参数_项目索引, 整数型, , 0 为项目一，1 为项目二，如此类推。
.参数 参数_是否自动更新数据, 逻辑型, 可空, 可以被省略。选择是否自动进行数据更新。当为真时，每次读取数据时都会对数据进行刷新，可能会因此而减慢速度。默认值为“置自动更新状态”方法所设置的状态。



.子程序 数据_取项目数值, 整数型, , 返回与指定项目相关联的数值。如果该项目不存在，将返回 0 。
.参数 参数_项目索引, 整数型, , 0 为项目一，1 为项目二，如此类推。
.参数 参数_是否自动更新数据, 逻辑型, 可空, 可以被省略。选择是否自动进行数据更新。当为真时，每次读取数据时都会对数据进行刷新，可能会因此而减慢速度。默认值为“置自动更新状态”方法所设置的状态。



.子程序 数据_置图片, 逻辑型, , 设置在指定项目首部所显示图片的索引。成功返回真，失败返回假。
.参数 参数_项目索引, 整数型, , 0 为项目一，1 为项目二，如此类推。
.参数 参数_图片索引, 整数型, , 图片索引用于指定图片组属性中的某张图片，从 0 开始。
.参数 参数_是否自动更新数据, 逻辑型, 可空, 可以被省略。选择是否自动进行数据更新。当为真时，每次读取数据时都会对数据进行刷新，可能会因此而减慢速度。默认值为“置自动更新状态”方法所设置的状态。



.子程序 数据_置选中图片, 逻辑型, , 设置指定项目被选中后所显示图片的索引。成功返回真，失败返回假。
.参数 参数_项目索引, 整数型, , 0 为项目一，1 为项目二，如此类推。
.参数 参数_图片索引, 整数型, , 图片索引用于指定图片组属性中的某张图片，从 0 开始。
.参数 参数_是否自动更新数据, 逻辑型, 可空, 可以被省略。选择是否自动进行数据更新。当为真时，每次读取数据时都会对数据进行刷新，可能会因此而减慢速度。默认值为“置自动更新状态”方法所设置的状态。



.子程序 数据_置项目数值, 逻辑型, , 设置与指定项目相关联的数值。成功返回真，失败返回假。
.参数 参数_项目索引, 整数型, , 0 为项目一，1 为项目二，如此类推。
.参数 参数_欲置入的项目数值, 整数型, 可空, 可以被省略。该数值与指定项目相关联。如果本参数被省略，默认值为 0 。
.参数 参数_是否自动更新数据, 逻辑型, 可空, 可以被省略。选择是否自动进行数据更新。当为真时，每次读取数据时都会对数据进行刷新，可能会因此而减慢速度。默认值为“置自动更新状态”方法所设置的状态。



.子程序 数据_置项目文本, 逻辑型, , 设置指定项目的文本。成功返回真，失败返回假。
.参数 参数_项目索引, 整数型, , 0 为项目一，1 为项目二，如此类推。
.参数 参数_欲置入的项目文本, 文本型, , 
.参数 参数_是否自动更新数据, 逻辑型, 可空, 可以被省略。选择是否自动进行数据更新。当为真时，每次读取数据时都会对数据进行刷新，可能会因此而减慢速度。默认值为“置自动更新状态”方法所设置的状态。



.子程序 动作_保证显示, 空白型, , 
.参数 参数_项目索引, 整数型, , 0 为项目一，1 为项目二，如此类推。
.参数 参数_是否自动更新数据, 逻辑型, 可空, 可以被省略。选择是否自动进行数据更新。当为真时，每次读取数据时都会对数据进行刷新，可能会因此而减慢速度。默认值为“置自动更新状态”方法所设置的状态。



.子程序 状态_扩展, 空白型, , 将指打开指定项目的下属分枝。
.参数 参数_项目索引, 整数型, , 0 为项目一，1 为项目二，如此类推。
.参数 参数_是否自动更新数据, 逻辑型, 可空, 可以被省略。选择是否自动进行数据更新。当为真时，每次读取数据时都会对数据进行刷新，可能会因此而减慢速度。默认值为“置自动更新状态”方法所设置的状态。



.子程序 状态_收缩, 空白型, , 缩回指定项目的下属分枝。
.参数 参数_项目索引, 整数型, , 0 为项目一，1 为项目二，如此类推。
.参数 参数_是否自动更新数据, 逻辑型, 可空, 可以被省略。选择是否自动进行数据更新。当为真时，每次读取数据时都会对数据进行刷新，可能会因此而减慢速度。默认值为“置自动更新状态”方法所设置的状态。



.子程序 数据_加入项目_API方式加入, 整数型, , 将单个或一批项目加入到树型框中，如果仅加入一个项目，成功返回加入后该项目所处的位置，失败返回 -1 。如果成批加入项目，成功返回 0 ，失败返回 -1 。成批加入项目可以用作一次性快速加入大量项目到树型框中。
.参数 参数_父项目索引, 整数型, 可空, 可以被省略。指定欲加入项目所处的父项目，0 为项目一，1 为项目二，如此类推。如果没有父项目（即欲加入项目为顶层项目），请提供值 -1 。如果本参数被省略，默认值为 -1 。
.参数 参数_项目数据1, 项目数据, 可空, 用于只加入一个项目，如欲批量加入，请留空
.参数 参数_项目数据2, 项目数据, 可空 数组, 用于批量加入项目
.参数 参数_加入方式, 整数型, 可空, 可以被省略。默认为 #树形框插入项目_在列表尾部插入
.参数 参数_是否自动更新数据, 逻辑型, 可空, 可以被省略。选择是否自动进行数据更新。当为真时，每次读取数据时都会对数据进行刷新，可能会因此而减慢速度。默认值为“置自动更新状态”方法所设置的状态。
.参数 参数_是否使用高速插入, 逻辑型, 可空, 可以被省略。当使用高速插入时，最高可提速5倍。默认为真高速加入。



.子程序 数据_删除项目, 逻辑型, , 删除树型框中的指定项目。成功返回真，失败返回假。
.参数 参数_项目索引, 整数型, , 0 为项目一，1 为项目二，如此类推。
.参数 参数_是否自动更新数据, 逻辑型, 可空, 可以被省略。选择是否自动进行数据更新。当为真时，每次读取数据时都会对数据进行刷新，可能会因此而减慢速度。默认值为“置自动更新状态”方法所设置的状态。



.子程序 数据_清空, 空白型, , 删除树型框中的所有项目。


.子程序 数据_取父项目, 整数型, , 返回指定项目的父项目索引。如果该项目为顶层项目，将返回 -1 。
.参数 参数_项目索引, 整数型, , 0 为项目一，1 为项目二，如此类推。
.参数 参数_是否自动更新数据, 逻辑型, 可空, 可以被省略。选择是否自动进行数据更新。当为真时，每次读取数据时都会对数据进行刷新，可能会因此而减慢速度。默认值为“置自动更新状态”方法所设置的状态。



.子程序 状态_是否有子项目, 逻辑型, , 如果指定项目存在子项目，返回真，否则返回假。如果本命令返回真，意味着指定项目的下一项即为此项目的第一个子项目。
.参数 参数_项目索引, 整数型, , 0 为项目一，1 为项目二，如此类推。
.参数 参数_是否自动更新数据, 逻辑型, 可空, 可以被省略。选择是否自动进行数据更新。当为真时，每次读取数据时都会对数据进行刷新，可能会因此而减慢速度。默认值为“置自动更新状态”方法所设置的状态。



.子程序 状态_是否已扩展, 逻辑型, , 如果树型框中的指定项目具有子项目并已扩展显示，返回真，否则返回假。
.参数 参数_项目索引, 整数型, , 0 为项目一，1 为项目二，如此类推。
.参数 参数_是否自动更新数据, 逻辑型, 可空, 可以被省略。选择是否自动进行数据更新。当为真时，每次读取数据时都会对数据进行刷新，可能会因此而减慢速度。默认值为“置自动更新状态”方法所设置的状态。



.子程序 样式_背景色_置, 空白型, , 
.参数 参数_背景颜色, 整数型, , 



.子程序 样式_背景色_取, 整数型, , 


.子程序 样式_项目间隔_置, 空白型, , 
.参数 参数_间隔距离, 整数型, 可空, 默认为16



.子程序 样式_项目间隔_取, 整数型, , 


.子程序 样式_文本颜色_置, 空白型, , 
.参数 参数_文本颜色, 整数型, , 



.子程序 样式_文本颜色_取, 整数型, , 


.子程序 样式_连线颜色_置, 空白型, , 
.参数 参数_连线颜色, 整数型, , 



.子程序 样式_连线颜色_取, 整数型, , 


.子程序 样式_使用复选框, 空白型, , 


.子程序 样式_使用热点跟踪, 空白型, , 


.子程序 样式_禁止滚动条, 逻辑型, , 返回禁止的状态
.参数 参数_禁止, 逻辑型, 可空, 真为禁止，假为解除禁止。默认为真



.子程序 样式_禁止水平滚动条, 逻辑型, , 返回禁止的状态
.参数 参数_禁止, 逻辑型, 可空, 真为禁止，假为解除禁止。默认为真



.子程序 样式_使用整行选择, 逻辑型, , 要使用本功能，就不能使用显示连线。
.参数 参数_是否使用, 逻辑型, 可空, 真为使用，假为不使用。默认为真。



.子程序 状态_是否选中, 逻辑型, , 
.参数 参数_项目索引, 整数型, , 0 为项目一，1 为项目二，如此类推。
.参数 参数_是否自动更新数据, 逻辑型, 可空, 可以被省略。选择是否自动进行数据更新。当为真时，每次读取数据时都会对数据进行刷新，可能会因此而减慢速度。默认值为“置自动更新状态”方法所设置的状态。



.子程序 状态_选中项目, 逻辑型, , 操作成功返回真
.参数 参数_项目索引, 整数型, , 0 为项目一，1 为项目二，如此类推。
.参数 参数_是否选中, 逻辑型, 可空, 可以被省略。设置项目的选中状态，默认为真。
.参数 参数_是否自动更新数据, 逻辑型, 可空, 可以被省略。选择是否自动进行数据更新。当为真时，每次读取数据时都会对数据进行刷新，可能会因此而减慢速度。默认值为“置自动更新状态”方法所设置的状态。



.子程序 状态_加粗, 空白型, , 
.参数 参数_项目索引, 整数型, , 0 为项目一，1 为项目二，如此类推。
.参数 参数_是否自动更新数据, 逻辑型, 可空, 可以被省略。选择是否自动进行数据更新。当为真时，每次读取数据时都会对数据进行刷新，可能会因此而减慢速度。默认值为“置自动更新状态”方法所设置的状态。



.子程序 状态_取消加粗, 空白型, , 将指定项目的标题取消加粗显示。
.参数 参数_项目索引, 整数型, , 0 为项目一，1 为项目二，如此类推。
.参数 参数_是否自动更新数据, 逻辑型, 可空, 可以被省略。选择是否自动进行数据更新。当为真时，每次读取数据时都会对数据进行刷新，可能会因此而减慢速度。默认值为“置自动更新状态”方法所设置的状态。



.子程序 数据_现行选中项_置, 空白型, , 
.参数 参数_项目索引, 整数型, , 0 为项目一，1 为项目二，如此类推。
.参数 参数_是否自动更新数据, 逻辑型, 可空, 可以被省略。选择是否自动进行数据更新。当为真时，每次读取数据时都会对数据进行刷新，可能会因此而减慢速度。默认值为“置自动更新状态”方法所设置的状态。



.子程序 数据_取可显示数量, 整数型, , 取当前在树形框的用户区中大约可以显示的项目数量
.参数 参数_是否自动更新数据, 逻辑型, 可空, 可以被省略。选择是否自动进行数据更新。当为真时，每次读取数据时都会对数据进行刷新，可能会因此而减慢速度。默认值为“置自动更新状态”方法所设置的状态。



.子程序 数据_取第一项索引, 整数型, , 取在当前树形框中显示的第一条项目的索引。失败返回-1
.参数 参数_是否自动更新数据, 逻辑型, 可空, 可以被省略。选择是否自动进行数据更新。当为真时，每次读取数据时都会对数据进行刷新，可能会因此而减慢速度。默认值为“置自动更新状态”方法所设置的状态。



.子程序 数据_现行选中项_取, 整数型, , 
.参数 局部_是否自动更新数据, 逻辑型, 可空, 可以被省略。选择是否自动进行数据更新。当为真时，每次读取数据时都会对数据进行刷新，可能会因此而减慢速度。默认值为“置自动更新状态”方法所设置的状态。



.子程序 数据_取全部选中项, 变体型, , 返回选中项索引数组
.参数 参数_是否自动更新数据, 逻辑型, 可空, 可以被省略。选择是否自动进行数据更新。当为真时，每次读取数据时都会对数据进行刷新，可能会因此而减慢速度。默认值为“置自动更新状态”方法所设置的状态。



.子程序 置自动更新状态, 空白型, , 本方法决定了各个其它方法中“是否自动更新数据”参数的默认值。默认状态下，如果不使用本方法进行操作，“是否自动更新数据”参数的默认值将自动设置为真。
.参数 局部_自动更新, 逻辑型, , 



.子程序 查询自动更新状态, 逻辑型, , 


.子程序 _初始化类, 逻辑型, , 成功返回真
.参数 树型框句柄, 整数型, , 
.参数 是否为外部进程的树形框, 逻辑型, 可空, 可以被省略。当为真时，可对这个外部进程一树形框进行操作。默认为假。



.子程序 _更新数据, 空白型, , 当某些操作没有使用自动更新时，可在这里以手动方式进行数据更新


.子程序 _取消外部操作, 空白型, , 当要取消对外部树形框的操作，而转向使用内部树形框时，可使用此方法。


.子程序 _使用外部操作, 空白型, , 当要取消对内部树形框的操作，而转向使用外部树形框时，可使用此方法。


.程序集 __HIDDEN_TEMP_MOD__, , , 

.子程序 提升进程权限, 逻辑型, , 成功返回真，失败返回假
.参数 目标进程, 整数型, 可空, 要提升的进程，目标进程,默认为本进程
.参数 权限类别, 文本型, 可空, 要提升到的特权，目标特权，有以下几种常量：#SE_BACKUP_NAME，#SE_RESTORE_NAME，#SE_SHUTDOWN_NAME（关机），#SE_DEBUG_NAME（调试），默认为#SE_DEBUG_NAME



.程序集 __HIDDEN_TEMP_MOD__, , , 

.子程序 模块_超级列表框排序, 整数型, , 返回排序时间,选中后排序还选中，必须项目数值不为0 没有默认为1
.参数 对象, 超级列表框, , 
.参数 列索引, 整数型, , 索引值从 0 开始。
.参数 类型, 整数型, 可空, 0=数值;1=文本;2=日期时间;3=逻辑
.参数 区分大小写, 逻辑型, 可空, 真为区分,默认为真
.参数 排序方式, 逻辑型, 可空, 真为小到大,默认为真



.程序集 __HIDDEN_TEMP_MOD__, , , 

.子程序 模块_隐藏托盘图标, 空白型, , 
.参数 序号, 整数型, , 可以由模块_取托盘序号获得
.参数 是否隐藏, 整数型, , 1真 0假



.子程序 模块_取托盘区句柄, 整数型, , 


.子程序 模块_取托盘序号, 整数型, , 返回托盘标题关键字对应的托盘序号,两个参数只能有一个为空
.参数 托盘标题关键字, 文本型, 可空, 托盘标题关键字,返回对应托盘序号,如果要取托盘区数据(托盘序号和标题),请将此项留空
.参数 托盘区数据数组, 文本型, 可空 数组, 提供一个单维文本数组,用于存放托盘区数据(托盘序号和标题的2维文本数组).如果要取托盘标题关键字对应的托盘序号,请将此项留空.



.程序集 __HIDDEN_TEMP_MOD__, , , 

.子程序 取进程信息列表, 整数型, , 成功返回1，失败返回0
.参数 进程信息数组, 进程信息参考, 数组, 用于存储进程信息的数组，类型为：进程信息参考



.子程序 按窗口句柄取进程信息, 基本进程信息, , 返回进程ID；进程名；进程全路径名,数据类型为：基本进程信息
.参数 句柄, 整数型, , 



.子程序 按进程名获取窗口信息, 基本窗口信息, , 返回数据类型为：基本窗口信息
.参数 进程名称, 文本型, , 



.子程序 按进程名取进程信息, 基本进程信息, , 返回：基本进程信息
.参数 进程名称, 文本型, , 进程的文件名，不分大小写



.子程序 取线程ID列表, 整数型, , 成功返回1,失败返回0
.参数 需要列表的进程ID, 整数型, , 进程标识符
.参数 线程ID数组, 整数型, 数组, 存储线程ID的整数型数组



.子程序 取调用模块列表, 整数型, , 成功返回1,失败返回0
.参数 进程ID, 整数型, , 进程标识符
.参数 模块信息数组, 基本DLL模块信息, 数组, 用于存储模块句柄、文件名、路径的数组



.子程序 获取内存使用情况, 整数型, , 返回进程的内存使用数KB
.参数 进程句柄, 整数型, , 要取内存占用的进程句柄



.程序集 __HIDDEN_TEMP_MOD__, , , 

.子程序 控制台_连接, 整数型, , 连接到创建的一个隐式CMD进程,以实现对控制台的标准输入与输出操作.返回CMD进程的进程ID,0意味着失败,非0表示成功.
.参数 CMD名称, 文本型, 可空, 默认名称是CMD.EXE,如果被改名,请在这里改为相应名称,备注:要创建一个CMD进程,程序必须要知道它的名称.
.参数 运行目录, 文本型, 可空, 创建CMD进程时的默认目录,这里默认在系统目录,如果要指定其它目录,请在目录名后加上"\"



.子程序 控制台_发送命令, 整数型, , 向已经连接的控制台发送命令(标准输入),返回输入命令的实际长度,返回0意味着失败,非0表示成功.
.参数 命令名, 文本型, , 可以是任何控制台命令,注意:已经对exit命令做了处理,输入命令"exit"可以达到断开连接的目地.



.子程序 控制台_取回结果, 逻辑型, , 取回已连接控制台的命令提示(控制台标准输出与标准错误输出,也就是"回显"),成功返回真,失败返回假..
.参数 输出编辑框, 编辑框, , 要输出到的编辑框.



.子程序 控制台_断开连接, 逻辑型, , 断开一个已经连接的控制台,成功返回真,失败返回假.注意:在标准输入里输入命令"exit"也可以达到断开连接的目地.


.程序集 __HIDDEN_TEMP_MOD__, , , 

.子程序 模块_禁止程序重复运行, 空白型, , 
.参数 标志文本, 文本型, , 可以是任何文本，但是最好要长一点以保证和系统中已有其他事件对象的名称不相冲突。
.参数 本窗口句柄, 整数型, 可空, 可以由"取窗口句柄()"命令返回,如果此项为空表示不还原已最小化运行窗口,否则反之.



.子程序 模块_关闭对象, 空白型, , 窗口将被销毁时调用,做清理工作.请务必在启动窗口_将被销毁子程序里调用,以删除或关闭模块调用时残留在系统里的信息.



 ' 不属于任何一个程序集、类模块的函数：
