 ' 文件类型：Windows窗口程序

 ' 程序名称：安装软件
 ' 程序描述：本程序解读mksetup.e所生成的用户数据包，并进行安装。
 ' 程序作者：飞扬工作室 吴涛
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 380
    高度 = 250
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 假
    禁止 = 假
    边框 = 1
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 假
    位置 = 0
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “”
    帮助文件名 = “”

窗口 主窗口
    左边 = 50
    顶边 = 50
    宽度 = 480
    高度 = 337
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假



.常量 安装文件标志, "45872376", , 用作标志安装记录文件
.常量 安装文件版本号, "4", , 目前所生成的安装记录文件的版本号
.常量 安装文件后缀, "“log”", , 
.常量 校验文件后缀, "“md5”", , 
.常量 , , , 
.常量 安装程序执行文件, "1", , 记录文件的类型
.常量 用户程序执行文件, "2", , 
.常量 支持库文件, "3", , 
.常量 支持库依赖文件, "4", , 
.常量 其它文件, "5", , 
.常量 OCX文件, "6", , 
.常量 , , , 
.常量 子目录类型, "0", , 
.常量 文件类型, "1", , 
.常量 , , , 
.常量 CSIDL_DESKTOPDIRECTORY, "16", , 
.常量 常量_卸载配置项, "“uninstall.ini”", , 
.常量 常量_卸载树型框名称, "“ 卸载文件 ”", , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 5 系统核心支持库
 ' xplib 7F54B9CE8887428dBA9CEEB94CEF4C72 1 6 XP风格界面库




.全局变量 全局_运行目录, 文本型, , , 
.全局变量 全局_当前目录, 文本型, , , 
.全局变量 全局_程序版本, 整数型, , , 
.全局变量 软件标题, 文本型, , , 
.全局变量 自述文本, 文本型, , , 
.全局变量 协议文本, 文本型, , , 
.全局变量 匿名全局变量_105, 空白型, , , 
.全局变量 安装目录, 文本型, , , 
.全局变量 标准目录选中, 逻辑型, , , 
.全局变量 支持卸载选中, 逻辑型, , , 
.全局变量 登记菜单选中, 逻辑型, , , 
.全局变量 快捷方式选中, 逻辑型, , , 
.全局变量 询问启动选中, 逻辑型, , , 
.全局变量 匿名全局变量_113, 空白型, , , 
.全局变量 数据文件名, 文本型, , , 
.全局变量 数据文件位置, 整数型, , , 
.全局变量 匿名全局变量_402, 空白型, , , 
.全局变量 全局_可执行文件快捷方式, 逻辑型, , , 
.全局变量 全局_开始菜单组, 文本型, , "0", 
.全局变量 全局_快捷方式路径组, 文本型, , "0", 
.全局变量 全局_快捷方式文件类型组, 整数型, , "0", 
.全局变量 匿名全局变量_403, 空白型, , , 

.DLL命令 取视窗安装目录, 整数型, "", "GetWindowsDirectoryA", , 
    .参数 缓冲区, 字节集, , 
    .参数 缓冲区尺寸, 整数型, , 

.DLL命令 登记菜单和快捷方式, 空白型, "setup.dll", "reg", , 如果支持卸载，本命令会同时生成安装记录文件。
    .参数 软件标题, 文本型, , 
    .参数 安装目录, 文本型, , 
    .参数 可执行文件名, 文本型, , 全路径
    .参数 是否登记菜单, 逻辑型, , 是否在系统菜单中登记。
    .参数 是否放置到桌面, 逻辑型, , 是否生成桌面快捷方式。
    .参数 是否支持卸载, 逻辑型, , 卸载文件名称固定为uninstall.exe

.DLL命令 注册OCX, 逻辑型, "setup.dll", "regocx", , 如果所提供的文件为OCX组件，则本命令自动将其注册到Windows系统。
    .参数 欲注册文件名, 文本型, , 全路径
    .参数 类标志, 文本型, , 

.DLL命令 浏览目录, 空白型, "setup.dll", "ViewDir", , 
    .参数 所属窗口句柄, 整数型, , 
    .参数 标题, 文本型, , 
    .参数 返回目录缓冲区, 文本型, , 

.DLL命令 SHGetSpecialFolderPath, 整数型, "", "SHGetSpecialFolderPathA", , 
    .参数 hwndOwner, 整数型, , 
    .参数 lpszPath, 文本型, , 
    .参数 nFolder, 整数型, , 
    .参数 fCreate, 整数型, , 

.窗口程序集 启动窗口程序集, , , 请将本程序编译为setup.exe然后存放到易语言系统的setup子目录中.

.程序集变量 宣传板位置, 整数型, , , 
.程序集变量 宣传板图片宽度, 整数型, , , 
.程序集变量 宣传板图片高度, 整数型, , , 
.程序集变量 主窗口左图数据, 字节集, , , 
.程序集变量 主窗口顶图数据, 字节集, , , 
.程序集变量 窗口xp化, 逻辑型, , , 真为xp化
.程序集变量 xp类型, 整数型, , , 
.子程序 __启动窗口_创建完毕, 空白型, , 
.局部变量 梯度填充选中, 逻辑型, , , 
.局部变量 梯度填充方式, 整数型, , , 
.局部变量 起始颜色, 整数型, , , 
.局部变量 中间颜色, 整数型, , , 
.局部变量 结束颜色, 整数型, , , 
.局部变量 图片平铺选中, 逻辑型, , , 
.局部变量 平铺图片数据, 字节集, , , 
.局部变量 颜色填充选中, 逻辑型, , , 
.局部变量 填充颜色, 整数型, , , 
.局部变量 具有标题栏, 逻辑型, , , 
.局部变量 宣传板图片数据, 字节集, , , 
.局部变量 不显示背景屏幕, 逻辑型, , , 
.局部变量 匿名局部变量_115, 空白型, , , 
.局部变量 文本数组, 文本型, , "0", 
.局部变量 文件号, 整数型, , , 
.局部变量 整数变量数组, 整数型, , "2", 
.局部变量 图片号, 整数型, , , 
.局部变量 局部_数组数量, 整数型, , , 
.局部变量 i, 整数型, , , 

 ' 本安装程序可以由用户根据需要自行更改，更改完毕后请将其编译为setup.exe连同源程序一起存放到易语言系统的setup目录中覆盖原有文件即可被系统自动使用。需要注意的是修改后的程序要求能够正确处理setup目录中mksetup.e程序所生成的用户数据。
赋值 (全局_运行目录, 取运行目录 ())
.如果真 (不等于 (取文本右边 (全局_运行目录, 1), “\”))
    赋值 (全局_运行目录, 相加 (全局_运行目录, “\”))
.如果真结束
赋值 (全局_当前目录, 取运行目录 ())
.如果真 (不等于 (取文本右边 (全局_当前目录, 1), “\”))
    赋值 (全局_当前目录, 相加 (全局_当前目录, “\”))
.如果真结束

移动 (0, 0, 取屏幕宽度 (), 取屏幕高度 ()) ' 放大到全屏
.如果真 (等于 (是否为调试版 (), 假))
    取命令行 (文本数组)
    .如果真 (不等于 (取数组成员数 (文本数组), 1))
        报错退出 (“命令行错误!”)
    .如果真结束
    赋值 (数据文件名, 文本数组 [1])
    .如果真 (等于 (文件是否存在 (数据文件名), 假))
        报错退出 (“数据文件名不存在!”)
    .如果真结束
    
    赋值 (文件号, 打开文件 (数据文件名, #读入, #禁止写))
    .如果真 (等于 (文件号, 0))
        报错退出 (“打开数据文件失败!”)
    .如果真结束
    
    .如果真 (或者 (等于 (读入数据 (文件号, 整数变量数组), 假), 不等于 (整数变量数组 [1], #安装文件标志), 大于 (整数变量数组 [2], #安装文件版本号)))
        关闭文件 (文件号)
        报错退出 (“读取或解析数据文件失败!”)
    .如果真结束
    赋值 (全局_程序版本, 整数变量数组 [2])
.如果真结束

赋值 (软件标题, 删首尾空 (读入一段文本 (文件号)))
赋值 (自述文本, 读入一段文本 (文件号))
赋值 (协议文本, 读入一段文本 (文件号))

赋值 (梯度填充选中, 读入逻辑值 (文件号))
赋值 (梯度填充方式, 读入整数 (文件号))
赋值 (起始颜色, 读入整数 (文件号))
赋值 (中间颜色, 读入整数 (文件号))
赋值 (结束颜色, 读入整数 (文件号))
赋值 (图片平铺选中, 读入逻辑值 (文件号))
读入数据 (文件号, 平铺图片数据)
赋值 (颜色填充选中, 读入逻辑值 (文件号))
赋值 (填充颜色, 读入整数 (文件号))
赋值 (具有标题栏, 读入逻辑值 (文件号))
读入数据 (文件号, 宣传板图片数据)
赋值 (宣传板位置, 读入整数 (文件号))
赋值 (不显示背景屏幕, 读入逻辑值 (文件号))
读入数据 (文件号, 主窗口左图数据)
读入数据 (文件号, 主窗口顶图数据)
读入数据 (文件号, 窗口xp化)
读入数据 (文件号, xp类型)
.如果真 (等于 (窗口xp化, 真))
    未知支持库函数_0 (xp类型)
.如果真结束

 ' 增加于：2008.08.14 by：季翔 版本号：3
 ' ////////////////增加了开始菜单组
.如果真 (大于或等于 (整数变量数组 [2], 3))
    .如果真 (大于或等于 (整数变量数组 [2], 4))
        读入数据 (文件号, 全局_可执行文件快捷方式)
    .如果真结束
    
    读入数据 (文件号, 局部_数组数量)
    .如果真 (大于 (局部_数组数量, 0))
        重定义数组 (全局_开始菜单组, 假, 局部_数组数量)
        重定义数组 (全局_快捷方式路径组, 假, 局部_数组数量)
        重定义数组 (全局_快捷方式文件类型组, 假, 局部_数组数量)
        .计次循环首 (局部_数组数量, i)
            读入数据 (文件号, 全局_开始菜单组 [i])
            读入数据 (文件号, 全局_快捷方式路径组 [i])
            读入数据 (文件号, 全局_快捷方式文件类型组 [i])
        .计次循环尾 ()
    .如果真结束
    
.如果真结束
 ' ////////////////增加开始菜单组 结束


赋值 (安装目录, 删首尾空 (读入一段文本 (文件号)))
赋值 (标准目录选中, 读入逻辑值 (文件号))
赋值 (支持卸载选中, 读入逻辑值 (文件号))
赋值 (登记菜单选中, 读入逻辑值 (文件号))
赋值 (快捷方式选中, 读入逻辑值 (文件号))
赋值 (询问启动选中, 读入逻辑值 (文件号))

赋值 (数据文件位置, 取读写位置 (文件号)) ' 记录下位置以备后面继续读取.

关闭文件 (文件号)

 ' 开始构造背景
.如果真 (具有标题栏)
    赋值 (., 相加 (软件标题, “ 安装”))
.如果真结束

.判断开始 (梯度填充选中)
    赋值 (.渐变背景方式, 相加 (梯度填充方式, 1))
    赋值 (.渐变背景颜色1, 起始颜色)
    赋值 (.渐变背景颜色2, 中间颜色)
    赋值 (.渐变背景颜色3, 结束颜色)
.判断 (图片平铺选中)
    赋值 (.底图, 平铺图片数据)
.判断 (颜色填充选中)
    赋值 (.背景颜色, 填充颜色)
.默认
    
.判断结束

.如果 (并且 (大于或等于 (宣传板位置, 0), 大于 (取字节集长度 (宣传板图片数据), 0)))
    赋值 (图片号, 载入图片 (宣传板图片数据))
    .如果 (不等于 (图片号, 0))
        赋值 (宣传板图片宽度, 图片号.取图片宽度 ())
        赋值 (宣传板图片高度, 图片号.取图片高度 ())
        卸载图片 (图片号)
        赋值 (.宽度, 宣传板图片宽度)
        赋值 (.高度, 宣传板图片高度)
        赋值 (.图片, 宣传板图片数据)
        赋值 (.可视, 真) ' 将宣传板显示出来
    .否则
        赋值 (宣传板位置, -1)
    .如果结束
    
.否则
    赋值 (宣传板位置, -1)
.如果结束
.如果 (等于 (不显示背景屏幕, 假))
    赋值 (_启动窗口., 真)
    载入 (主窗口, _启动窗口, 真)
.否则
    载入 (主窗口, , 假)
.如果结束


.子程序 __启动窗口_首次激活, 空白型, , 


.子程序 __启动窗口_尺寸被改变, 空白型, , 
.局部变量 用户区宽度, 整数型, , , 
.局部变量 用户区高度, 整数型, , , 
.局部变量 水平位置, 整数型, , , 
.局部变量 垂直位置, 整数型, , , 

赋值 (用户区宽度, 取用户区宽度 ())
赋值 (用户区高度, 取用户区高度 ())

赋值 (.宽度, 用户区宽度)
赋值 (.高度, 用户区高度)

.如果真 (大于或等于 (宣传板位置, 0))
    .判断开始 (或者 (等于 (宣传板位置, 0), 等于 (宣传板位置, 3), 等于 (宣传板位置, 6)))
        赋值 (水平位置, 0)
    .判断 (或者 (等于 (宣传板位置, 1), 等于 (宣传板位置, 4), 等于 (宣传板位置, 7)))
        赋值 (水平位置, 相除 (相减 (用户区宽度, 宣传板图片宽度), 2))
    .默认
        赋值 (水平位置, 相减 (用户区宽度, 宣传板图片宽度))
    .判断结束
    
    .判断开始 (小于 (宣传板位置, 3))
        赋值 (垂直位置, 0)
    .判断 (小于 (宣传板位置, 6))
        赋值 (垂直位置, 相除 (相减 (用户区高度, 宣传板图片高度), 2))
    .默认
        赋值 (垂直位置, 相减 (用户区高度, 宣传板图片高度))
    .判断结束
    
    赋值 (.左边, 水平位置)
    赋值 (.顶边, 垂直位置)
.如果真结束


.子程序 __启动窗口_将被销毁, 空白型, , 
删除文件 (数据文件名) ' 删除安装启动程序所传递过来的数据文件

.程序集 实用程序集, , , 

.子程序 读入整数, 整数型, , 
.参数 文件号, 整数型, , 

.局部变量 整数, 整数型, , , 

读入数据 (文件号, 整数)
返回 (整数)

.子程序 读入逻辑值, 逻辑型, , 
.参数 文件号, 整数型, , 

.局部变量 逻辑值, 逻辑型, , , 

读入数据 (文件号, 逻辑值)
返回 (逻辑值)

.子程序 读入一段文本, 文本型, , 
.参数 文件号, 整数型, , 

.局部变量 字节集, 字节集, , , 

读入数据 (文件号, 字节集)
返回 (到文本 (字节集))

.子程序 报错退出, 空白型, , 
.参数 错误信息, 文本型, , 

信息框 (错误信息, #错误图标, “错误”)
结束 ()

.子程序 写数据到文件, 空白型, , 
.参数 文件名, 文本型, , 
.参数 文件数据, 字节集, , 

.局部变量 文件号, 整数型, , , 

赋值 (文件号, 打开文件 (文件名, #重写, #禁止读写))
.如果真 (等于 (文件号, 0))
    报错退出 (相加 (“创建文件”, #左引号, 文件名, #右引号, “失败!”))
.如果真结束
.如果真 (等于 (写出字节集 (文件号, 文件数据), 假))
    报错退出 (相加 (“写出文件”, #左引号, 文件名, #右引号, “失败!”))
.如果真结束
关闭文件 (文件号)

.子程序 子程序_取开始菜单路径, 文本型, , 最后有\
.局部变量 局部_文本, 文本型, , , 

赋值 (局部_文本, 取文本注册项 (#现行用户, “Software\Microsoft\Windows\CurrentVersion\Explorer\Shell Folders\Programs”, “”))
.如果真 (等于 (局部_文本, “”))
    返回 (“”)
.如果真结束
.如果真 (不等于 (取文本右边 (局部_文本, 1), “\”))
    赋值 (局部_文本, 相加 (局部_文本, “\”))
.如果真结束
返回 (局部_文本)

.子程序 子程序_创建快捷方式, 空白型, , 
.参数 快捷方式文件名, 文本型, , 
.参数 指向文件路径, 文本型, , 
.参数 工作目录, 文本型, 可空, 
.参数 备注信息, 文本型, 可空, 
.参数 命令行文本, 文本型, 可空, 
.参数 图标文件名, 文本型, 可空, 
.参数 快捷键, 文本型, 可空, 
.参数 运行方式, 整数型, 可空, 

.局部变量 oWScript, 对象, , , 
.局部变量 oLink, 对象, , , 

.如果真 (不等于 (到小写 (取文本右边 (快捷方式文件名, 4)), “.lnk”))
    赋值 (快捷方式文件名, 相加 (快捷方式文件名, “.lnk”))
.如果真结束
oWScript.创建 (“WScript.Shell”, )
赋值 (oLink, oWScript.对象型方法 (“CreateShortcut”, 快捷方式文件名))
oLink.写属性 (“TargetPath”, 指向文件路径)
.如果真 (等于 (是否为空 (备注信息), 假))
    oLink.写属性 (“Description”, 备注信息)
.如果真结束
.如果真 (等于 (是否为空 (快捷键), 假))
    oLink.写属性 (“HotKey”, 快捷键)
.如果真结束
.如果真 (等于 (是否为空 (图标文件名), 假))
    oLink.写属性 (“IconLocation”, 图标文件名)
.如果真结束
.如果真 (等于 (是否为空 (运行方式), 假))
    oLink.写属性 (“WindowStyle”, 运行方式)
.如果真结束
.如果真 (等于 (是否为空 (工作目录), 假))
    oLink.写属性 (“WorkingDirectory”, 工作目录)
.如果真结束
.如果真 (等于 (是否为空 (命令行文本), 假))
    oLink.写属性 (“Arguments”, 命令行文本)
.如果真结束
oLink.方法 (“Save”, )
 ' 释放资源
oLink.清除 ()
oWScript.清除 ()

.子程序 子程序_取路径文件名, 文本型, , 
.参数 参数_路径, 文本型, , 

.局部变量 局部_位置, 整数型, , , 

赋值 (局部_位置, 倒找文本 (参数_路径, “\”, , 假))
.如果真 (等于 (局部_位置, -1))
    返回 (参数_路径)
.如果真结束
返回 (取文本右边 (参数_路径, 相减 (取文本长度 (参数_路径), 局部_位置)))

.子程序 子程序_取路径中路径, 文本型, , 最后没有\
.参数 参数_路径, 文本型, , 

.局部变量 局部_位置, 整数型, , , 

赋值 (局部_位置, 倒找文本 (参数_路径, “\”, , 假))
.如果真 (等于 (局部_位置, -1))
    返回 (参数_路径)
.如果真结束
返回 (取文本左边 (参数_路径, 相减 (局部_位置, 1)))


.窗口程序集 主窗口程序集, , , 

.程序集变量 实际安装目录, 文本型, , , 最后有"\"
.程序集变量 正在复制文件, 逻辑型, , , 
.程序集变量 用户可执行文件名, 文本型, , , 用户的主执行文件
.程序集变量 安装成功, 逻辑型, , , 
.程序集变量 程序集_需要复制卸载文件, 逻辑型, , , 
.子程序 _主窗口_创建完毕, 空白型, , 
.局部变量 字节集, 字节集, , , 

赋值 (主窗口., 取反 (_启动窗口.))
赋值 (.图片, _启动窗口.)
赋值 (.可视, 假)

赋值 (.背景颜色, 取默认底色 ()) ' 避免透明色背景
赋值 (., 软件标题)
赋值 (.标题, 相加 (“欢迎使用”, #左引号, 软件标题, #右引号, “！”))
赋值 (.标题, 相加 (“本程序将安装”, #左引号, 软件标题, #右引号, “到您的计算机，强烈建议您在运行本安装程序之前退出所有其它运行中的程序。”, #换行符, #换行符, “单击”, #左引号, “取消”, #右引号, “可以关闭本程序。”, #换行符, “单击”, #左引号, “下一步”, #右引号, “继续进行安装。”, #换行符, #换行符, “警告：本计算机程序受版权法和国际条约保护。”, #换行符, #换行符, “未经授权复制或散播本计算机程序或其中的一部分，将受到最严厉的民事或刑事处罚，并将在法律许可范围内受到最大可能的起诉。”))
赋值 (.内容, 协议文本)
赋值 (.内容, 自述文本)
赋值 (.标题, 相加 (“安装程序将安装”, #左引号, 软件标题, #右引号, “到下面的目录中。”, #换行符, #换行符, “若想安装到不同的目录，请直接在编辑框中输入新的目录路径。”, #换行符, #换行符, “您可以选择”, #左引号, “取消”, #右引号, “退出安装程序从而不安装”, #左引号, 软件标题, #右引号))

赋值 (实际安装目录, 安装目录)
.如果真 (并且 (标准目录选中, 等于 (寻找文本 (安装目录, “:”, , 真), -1), 不等于 (取文本左边 (安装目录, 1), “\”)))
    赋值 (字节集, 取空白字节集 (256))
    取视窗安装目录 (字节集, 取字节集长度 (字节集))
    .如果真 (不等于 (字节集 [1], 0))
        赋值 (字节集 [2], 0)
        赋值 (实际安装目录, 相加 (到文本 (字节集), “:\Program Files\”, 安装目录))
    .如果真结束
    
.如果真结束
.如果真 (等于 (寻找文本 (实际安装目录, “:”, , 真), -1))
    .判断开始 (等于 (取文本左边 (实际安装目录, 1), “\”))
        赋值 (实际安装目录, 相加 (“c:”, 实际安装目录))
    .默认
        赋值 (实际安装目录, 相加 (“c:\”, 实际安装目录))
    .判断结束
    
.如果真结束
赋值 (.内容, 实际安装目录)

赋值 (.标题, 相加 (“现在准备安装”, #左引号, 软件标题, #右引号, “。”, #换行符, #换行符, “单击”, #左引号, “下一步”, #右引号, “按钮开始安装或单击”, #左引号, “上一步”, #右引号, “按钮重新输入安装信息。”))
赋值 (.标题, 相加 (#左引号, 软件标题, #右引号, “已经被成功安装。”, #换行符, #换行符, “单击”, #左引号, “完成”, #右引号, “按钮退出安装程序。”))

.子程序 _主窗口_可否被关闭, 逻辑型, , 
.如果真 (询问是否继续 ())
    返回 (假)
.如果真结束


.子程序 _取消按钮_被单击, 空白型, , 
.如果真 (正在复制文件)
    赋值 (正在复制文件, 假)
    返回 ()
.如果真结束

.如果真 (等于 (询问是否继续 (), 假))
    .如果真 (并且 (安装成功, .选中, 不等于 (用户可执行文件名, “”)))
        改变目录 (实际安装目录) ' 改变现行目录，此目录将被即将启动的用户程序所继承使用。
        运行 (用户可执行文件名, 假, )
    .如果真结束
    
    销毁 ()
.如果真结束


.子程序 询问是否继续, 逻辑型, , 继续返回真，退出返回假。
返回 (并且 (等于 (安装成功, 假), 等于 (信息框 (相加 (“您确定要退出吗？”, #换行符, #换行符, “安装还没有完成，如果您现在关闭安装程序，本软件将不会被安装到您的计算机中。”, #换行符, #换行符, “您也可以稍后运行安装程序来完成安装。”, #换行符, #换行符, “要继续安装，请单击”, #左引号, “否”, #右引号, “按钮。”, #换行符, “要退出安装，请单击”, #左引号, “是”, #右引号, “按钮。”), 相加 (#是否钮, #询问图标, #默认按钮二), “询问”), #否钮)))

.子程序 _主窗口_空闲, 逻辑型, , 
.参数 已空闲时间, 整数型, , 

设置按钮状态 ()

.子程序 设置按钮状态, 空白型, , 
.局部变量 现行子夹, 整数型, , , 
.局部变量 是否禁止, 逻辑型, , , 

赋值 (现行子夹, .现行子夹)
赋值 (是否禁止, 或者 (等于 (现行子夹, 0), 大于 (现行子夹, 4)))
.如果真 (不等于 (.禁止, 是否禁止))
    赋值 (.禁止, 是否禁止)
.如果真结束
赋值 (是否禁止, 或者 (等于 (现行子夹, 5), 并且 (等于 (现行子夹, 1), 等于 (.选中, 假))))
.如果真 (不等于 (.禁止, 是否禁止))
    赋值 (.禁止, 是否禁止)
.如果真结束


.子程序 _下一步按钮_被单击, 空白型, , 
.判断开始 (小于 (.现行子夹, 4))
    跳过选择夹 (真)
.判断 (等于 (.现行子夹, 4))
    开始安装 ()
.默认
    
.判断结束
赋值 (.可视, 真)
画顶图 (多项选择 (.现行子夹, “许可协议”, “自述文本”, “安装目录”, “开始安装”, “正在复制文件...”, “安装成功!”))
赋值 (.可视, 真)
赋值 (.可视, 真)


.子程序 _上一步按钮_被单击, 空白型, , 
.如果真 (小于或等于 (.现行子夹, 4))
    跳过选择夹 (假)
.如果真结束
.如果真 (等于 (是否已创建 (_启动窗口), 真))
    .如果 (等于 (.现行子夹, 0))
        赋值 (.可视, 假)
        赋值 (.可视, 假)
        赋值 (.可视, 假)
        
    .否则
        画顶图 (多项选择 (.现行子夹, “许可协议”, “自述文本”, “安装目录”, “开始安装”, “正在复制文件...”, “安装成功!”))
    .如果结束
    
.如果真结束


.子程序 跳过选择夹, 空白型, , 
.参数 是否后移, 逻辑型, , 

.局部变量 现行子夹, 整数型, , , 
.局部变量 新子夹, 整数型, , , 

赋值 (新子夹, .现行子夹)
赋值 (现行子夹, 新子夹)
.判断循环首 (真)
    .如果 (是否后移)
        赋值 (新子夹, 相加 (新子夹, 1))
    .否则
        赋值 (新子夹, 相减 (新子夹, 1))
    .如果结束
    
    .如果真 (并且 (或者 (不等于 (新子夹, 1), 不等于 (协议文本, “”)), 或者 (不等于 (新子夹, 2), 不等于 (自述文本, “”))))
        跳出循环 ()
    .如果真结束
    
.判断循环尾 ()

.如果真 (小于 (新子夹, 0))
    赋值 (新子夹, 0)
.如果真结束
.如果真 (大于 (新子夹, 5))
    赋值 (新子夹, 5)
.如果真结束

.如果真 (等于 (新子夹, 现行子夹))
    返回 ()
.如果真结束

.如果真 (并且 (等于 (现行子夹, 1), 等于 (.选中, 假)))
    .如果真 (等于 (询问是否继续 (), 假))
        销毁 ()
    .如果真结束
    返回 ()
.如果真结束

.如果真 (等于 (新子夹, 1))
    赋值 (.选中, 假)
    赋值 (.选中, 真)
.如果真结束

赋值 (.现行子夹, 新子夹)

.子程序 开始安装, 空白型, , 
.局部变量 文件号, 整数型, , , 
.局部变量 数目, 整数型, , , 
.局部变量 父项目, 整数型, , , 
.局部变量 类型, 整数型, , , 
.局部变量 文本数据, 文本型, , , 
.局部变量 文本数据长度, 整数型, , , 
.局部变量 变量1, 整数型, , , 
.局部变量 变量2, 整数型, , , 
.局部变量 复制到文件名, 文本型, , , 无目录的文件组
.局部变量 文件名, 文本型, , , 带目录的文件组
.局部变量 文件名长度, 整数型, , , 
.局部变量 数据尺寸, 整数型, , , 
.局部变量 文件数据, 字节集, , , 
.局部变量 父项目数组, 整数型, , "0", 
.局部变量 项目名数组, 文本型, , "0", 
.局部变量 目录, 文本型, , , 
.局部变量 安装记录文件, 文本型, , , 
.局部变量 安装总文件名组, 文本型, , "0", 复制到文件名+文件名
.局部变量 安装总文件夹组, 文本型, , "0", 
.局部变量 局部_目录结构, 文本型, , "0", 
.局部变量 局部_计次, 整数型, , , 
.局部变量 局部_临时目录, 文本型, , , 
.局部变量 i, 整数型, , , 
.局部变量 局部_开始菜单路径, 文本型, , , 
.局部变量 局部_桌面路径, 文本型, , , 
.局部变量 局部_安装目录组, 文本型, , "0", 添加到卸载ini使用
.局部变量 局部_文件属性, 整数型, , , 

赋值 (实际安装目录, 删首尾空 (.内容))
.如果真 (等于 (取文本右边 (实际安装目录, 1), “\”))
    赋值 (实际安装目录, 取文本左边 (实际安装目录, 相减 (取文本长度 (实际安装目录), 1)))
.如果真结束
.如果真 (等于 (实际安装目录, “”))
    信息框 (“所输入安装目录不能为空。”, #错误图标, “错误”)
    返回 ()
.如果真结束
 ' .如果真 (等于 (取文本右边 (实际安装目录, 1), “\”))
     ' 信息框 (“所输入安装目录不能为根目录或以” ＋ #左引号 ＋ “\” ＋ #右引号 ＋ “符号结束。”, #错误图标, “错误”)
     ' 返回 ()
.如果真结束

赋值 (.可视, 假)
赋值 (.可视, 假)
赋值 (.现行子夹, 5)

赋值 (局部_目录结构, 分割文本 (实际安装目录, “\”, ))
.计次循环首 (取数组成员数 (局部_目录结构), 局部_计次)
    赋值 (局部_临时目录, 相加 (局部_临时目录, 局部_目录结构 [局部_计次]))
    .如果真 (大于 (取文本长度 (局部_临时目录), 2))
        赋值 (局部_文件属性, 取文件属性 (局部_临时目录))
        .如果真 (并且 (等于 (寻找文件 (局部_临时目录, #子目录), “”), 或者 (等于 (局部_文件属性, -1), 小于或等于 (位与 (局部_文件属性, #子目录), 0))))
            创建目录 (局部_临时目录)
            插入成员 (局部_安装目录组, 1, 局部_临时目录)
        .如果真结束
        
    .如果真结束
    赋值 (局部_临时目录, 相加 (局部_临时目录, “\”))
.计次循环尾 ()
.如果真 (不等于 (取文本右边 (实际安装目录, 1), “\”))
    赋值 (实际安装目录, 相加 (实际安装目录, “\”))
.如果真结束

赋值 (安装记录文件, 相加 (实际安装目录, #常量_卸载配置项))
.如果真 (文件是否存在 (安装记录文件))
    删除文件 (安装记录文件)
.如果真结束

赋值 (文件号, 打开文件 (数据文件名, #读入, #禁止写))
.如果真 (等于 (文件号, 0))
    报错退出 (“打开数据文件失败!”)
.如果真结束
移动读写位置 (文件号, , 数据文件位置)

赋值 (正在复制文件, 真)
赋值 (数目, 读入整数 (文件号))
.计次循环首 (数目, 变量1)
    处理事件 () ' 让系统有时间处理“取消”按钮被单击的事件
    .如果真 (等于 (正在复制文件, 假)) ' 是否已经按下了“取消”按钮？
        .如果 (等于 (询问是否继续 (), 假))
            关闭文件 (文件号)
            销毁 ()
            返回 ()
        .否则
            赋值 (正在复制文件, 真)
        .如果结束
        
    .如果真结束
    
    赋值 (类型, 读入整数 (文件号))
    赋值 (文件名长度, 读入整数 (文件号))
    赋值 (文件名, 到文本 (读入字节集 (文件号, 文件名长度)))
    赋值 (文本数据长度, 读入整数 (文件号))
    赋值 (文本数据, 到文本 (读入字节集 (文件号, 文本数据长度)))
    赋值 (复制到文件名, 相加 (实际安装目录, 文件名))
    加入成员 (安装总文件名组, 复制到文件名) ' 删除时用
    赋值 (.标题, 复制到文件名)
    刷新显示 ()
    赋值 (.位置, 相除 (相乘 (变量1, 50), 数目))
    刷新显示 ()
    .如果真 (等于 (类型, #用户程序执行文件)) ' 是否为用户程序的主执行文件？
        赋值 (用户可执行文件名, 复制到文件名)
    .如果真结束
    
    赋值 (数据尺寸, 读入整数 (文件号))
    .如果 (大于或等于 (数据尺寸, 0))
        写数据到文件 (复制到文件名, 读入字节集 (文件号, 数据尺寸))
    .否则
         ' 否则该文件必定已经在安装启动程序中被包含
        .如果真 (等于 (复制文件 (文件名, 复制到文件名), 假))
            报错退出 (相加 (“复制文件”, #左引号, 复制到文件名, #右引号, “失败!”))
        .如果真结束
        
    .如果结束
    
    .如果真 (并且 (等于 (类型, #OCX文件), 大于 (文本数据长度, 0)))
        .如果真 (注册OCX (复制到文件名, 文本数据)) ' 如果复制成功，且该文件为OCX组件，则自动将其注册到Windows系统，文本数据为CLSID。
            赋值 (变量2, 寻找文本 (文本数据, “#”, , 假))
            .如果真 (不等于 (变量2, -1))
                赋值 (文本数据, 取文本左边 (文本数据, 相减 (变量2, 1)))
            .如果真结束
            写配置项 (安装记录文件, “ocx”, 到文本 (变量1), 文本数据)
        .如果真结束
        
    .如果真结束
    
.计次循环尾 ()

赋值 (数目, 读入整数 (文件号))
.计次循环首 (数目, 变量1)
    处理事件 () ' 让系统有时间处理“取消”按钮被单击的事件
    .如果真 (等于 (正在复制文件, 假)) ' 是否已经按下了“取消”按钮？
        .如果 (等于 (询问是否继续 (), 假))
            关闭文件 (文件号)
            销毁 ()
            返回 ()
        .否则
            赋值 (正在复制文件, 真)
        .如果结束
        
    .如果真结束
    
    赋值 (父项目, 读入整数 (文件号))
    赋值 (类型, 读入整数 (文件号))
    赋值 (文件名, 读入一段文本 (文件号))
    加入成员 (项目名数组, 文件名)
    加入成员 (父项目数组, 父项目)
    
    赋值 (目录, “”)
    .判断循环首 (大于 (父项目, 0))
        赋值 (目录, 相加 (项目名数组 [父项目], “\”, 目录))
        赋值 (父项目, 父项目数组 [父项目])
    .判断循环尾 ()
    赋值 (文件名, 相加 (实际安装目录, 目录, 文件名))
    赋值 (.标题, 文件名)
    刷新显示 ()
    赋值 (.位置, 相加 (50, 相除 (相乘 (变量1, 50), 数目)))
    刷新显示 ()
    
    .如果 (等于 (类型, 0))
         ' 必定为子目录
        创建目录 (文件名)
        加入成员 (安装总文件夹组, 文件名) ' 删除时用
    .否则
        加入成员 (安装总文件名组, 文件名) ' 删除时用
        读入数据 (文件号, 文件数据)
        写数据到文件 (文件名, 文件数据)
    .如果结束
    
.计次循环尾 ()
 ' 文件数据复制完毕
关闭文件 (文件号)
赋值 (正在复制文件, 假)

 ' 开始生成菜单登记项和快捷方式。
 ' 修改于：2008.08.14 by：季翔 版本号：3
 ' ////////////////增加了开始菜单组
赋值 (变量1, 0)
.判断开始 (小于 (全局_程序版本, 3))
    登记菜单和快捷方式 (软件标题, 实际安装目录, 用户可执行文件名, 登记菜单选中, 快捷方式选中, 支持卸载选中) ' 实际安装目录必须以“\”结束。
.判断 (大于或等于 (全局_程序版本, 3)) ' ///////////////以后修改版本需要考虑此处
    .判断开始 (等于 (取数组成员数 (全局_开始菜单组), 0))
        登记菜单和快捷方式 (软件标题, 实际安装目录, 用户可执行文件名, 并且 (登记菜单选中, 全局_可执行文件快捷方式), 快捷方式选中, 支持卸载选中) ' 实际安装目录必须以“\”结束。
    .默认
         ' /////////////如果需要登记菜单，而且有菜单数组，则调用新版本接口
        .判断开始 (等于 (登记菜单选中, 真))
            登记菜单和快捷方式 (软件标题, 实际安装目录, 用户可执行文件名, 假, 快捷方式选中, 假) ' 实际安装目录必须以“\”结束。
            赋值 (局部_开始菜单路径, 子程序_取开始菜单路径 ())
            .计次循环首 (取数组成员数 (全局_开始菜单组), i)
                .判断开始 (并且 (等于 (子程序_取路径文件名 (全局_开始菜单组 [i]), #常量_卸载树型框名称), 等于 (支持卸载选中, 假)))
                    赋值 (程序集_需要复制卸载文件, 真)
                    子程序_创建快捷方式 (相加 (局部_开始菜单路径, 子程序_取路径中路径 (全局_开始菜单组 [i]), “\卸载”), 相加 (实际安装目录, “uninstall.exe”))
                    赋值 (变量1, 相加 (变量1, 1))
                    写配置项 (相加 (实际安装目录, #常量_卸载配置项), “uninstall”, 到文本 (变量1), 相加 (局部_开始菜单路径, 子程序_取路径中路径 (全局_开始菜单组 [i]), “\卸载.lnk”))
                    赋值 (变量1, 相加 (变量1, 1))
                    写配置项 (相加 (实际安装目录, #常量_卸载配置项), “uninstall”, 到文本 (变量1), 相加 (局部_开始菜单路径, 子程序_取路径中路径 (全局_开始菜单组 [i])))
                    
                .判断 (等于 (全局_快捷方式文件类型组 [i], #子目录类型))
                    创建目录 (相加 (局部_开始菜单路径, 全局_快捷方式路径组 [i]))
                .默认
                    子程序_创建快捷方式 (相加 (局部_开始菜单路径, 全局_开始菜单组 [i]), 相加 (实际安装目录, 全局_快捷方式路径组 [i]))
                .判断结束
                 ' 登记开始菜单 (全局_开始菜单组 [i], 全局_快捷方式路径组 [i], 全局_快捷方式文件类型组 [i])
            .计次循环尾 ()
            .如果真 (等于 (全局_可执行文件快捷方式, 真))
                子程序_创建快捷方式 (相加 (局部_开始菜单路径, 全局_开始菜单组 [1], “\”, 软件标题), 用户可执行文件名)
                赋值 (相加 (1))
                写配置项 (相加 (实际安装目录, #常量_卸载配置项), “uninstall”, 到文本 (变量1), 相加 (局部_开始菜单路径, 全局_开始菜单组 [1], “\”, 软件标题, “.lnk”))
                
            .如果真结束
            
             ' //////////////////判断并复制卸载文件
            .如果真 (或者 (等于 (程序集_需要复制卸载文件, 真), 等于 (支持卸载选中, 真)))
                .如果真 (等于 (支持卸载选中, 真)) ' 默认卸载
                    .判断开始 (等于 (全局_快捷方式文件类型组 [1], #子目录类型))
                        子程序_创建快捷方式 (相加 (局部_开始菜单路径, 全局_开始菜单组 [1], “\卸载”), 相加 (实际安装目录, “uninstall.exe”))
                    .默认
                        子程序_创建快捷方式 (相加 (局部_开始菜单路径, “\卸载”), 相加 (实际安装目录, “uninstall.exe”))
                    .判断结束
                    
                .如果真结束
                 ' ////////////////////创建卸载ini
                写配置项 (相加 (实际安装目录, #常量_卸载配置项), “Info”, “title”, 软件标题)
                写配置项 (相加 (实际安装目录, #常量_卸载配置项), “Info”, “InstallDir”, 取文本左边 (实际安装目录, 相减 (取文本长度 (实际安装目录), 1)))
                .如果真 (等于 (快捷方式选中, 真))
                    赋值 (局部_桌面路径, 取空白文本 (256))
                    SHGetSpecialFolderPath (0, 局部_桌面路径, #CSIDL_DESKTOPDIRECTORY, 0)
                    .如果真 (不等于 (取文本右边 (局部_桌面路径, 1), “\”))
                        赋值 (局部_桌面路径, 相加 (局部_桌面路径, “\”))
                    .如果真结束
                    写配置项 (相加 (实际安装目录, #常量_卸载配置项), “Info”, “LinkFileName”, 相加 (局部_桌面路径, 软件标题, “.lnk”))
                .如果真结束
                
                 ' 判断 (全局_快捷方式文件类型组 [1] ＝ #子目录类型)
                 ' 写配置项 (实际安装目录 ＋ #常量_卸载配置项, “Info”, “MenuGroupName”, 局部_开始菜单路径 ＋ 全局_开始菜单组 [1])
                .变量循环首 (取数组成员数 (全局_开始菜单组), 1, -1, i)
                    赋值 (变量1, 相加 (变量1, 1))
                    .判断开始 (等于 (全局_快捷方式文件类型组 [i], #子目录类型))
                        写配置项 (相加 (实际安装目录, #常量_卸载配置项), “uninstall”, 到文本 (变量1), 相加 (局部_开始菜单路径, 全局_快捷方式路径组 [i]))
                    .默认
                        写配置项 (相加 (实际安装目录, #常量_卸载配置项), “uninstall”, 到文本 (变量1), 相加 (局部_开始菜单路径, 全局_开始菜单组 [i], “.lnk”))
                    .判断结束
                    
                .变量循环尾 ()
                
                .如果真 (等于 (支持卸载选中, 真)) ' 默认卸载
                    赋值 (变量1, 相加 (变量1, 1))
                    .判断开始 (等于 (全局_快捷方式文件类型组 [1], #子目录类型))
                        写配置项 (相加 (实际安装目录, #常量_卸载配置项), “uninstall”, 到文本 (变量1), 相加 (局部_开始菜单路径, 全局_开始菜单组 [1], “\卸载.lnk”))
                        赋值 (变量1, 相加 (变量1, 1))
                        写配置项 (相加 (实际安装目录, #常量_卸载配置项), “uninstall”, 到文本 (变量1), 相加 (局部_开始菜单路径, 全局_开始菜单组 [1]))
                        
                    .默认
                        写配置项 (相加 (实际安装目录, #常量_卸载配置项), “uninstall”, 到文本 (变量1), 相加 (局部_开始菜单路径, “卸载.lnk”))
                    .判断结束
                    
                .如果真结束
                
            .如果真结束
             ' /////////////////////打开开始菜单
            .判断开始 (等于 (全局_快捷方式文件类型组 [1], #子目录类型))
                运行 (相加 (“explorer.exe ”, #引号, 局部_开始菜单路径, 全局_开始菜单组 [1], #引号), 假, )
            .默认
                运行 (相加 (“explorer.exe ”, #引号, 局部_开始菜单路径, #引号), 假, )
            .判断结束
            
        .默认
            登记菜单和快捷方式 (软件标题, 实际安装目录, 用户可执行文件名, 登记菜单选中, 快捷方式选中, 支持卸载选中) ' 实际安装目录必须以“\”结束。
        .判断结束
        
    .判断结束
    
.默认
    
.判断结束

 ' 复制卸载文件
.如果真 (或者 (等于 (程序集_需要复制卸载文件, 真), 等于 (支持卸载选中, 真)))
    赋值 (文件名, “uninstall.exe”)
    赋值 (复制到文件名, 相加 (实际安装目录, 文件名))
    .如果真 (等于 (复制文件 (文件名, 复制到文件名), 假))
        报错退出 (相加 (“复制文件”, #左引号, 复制到文件名, #右引号, “失败!”))
    .如果真结束
    删除文件 (文件名)
.如果真结束

 ' ////////////////修改结束

.计次循环首 (取数组成员数 (安装总文件名组), i) ' 删除时用
    赋值 (变量1, 相加 (变量1, 1))
    写配置项 (相加 (实际安装目录, #常量_卸载配置项), “uninstall”, 到文本 (变量1), 安装总文件名组 [i])
.计次循环尾 ()
赋值 (变量1, 相加 (变量1, 1))
写配置项 (相加 (实际安装目录, #常量_卸载配置项), “uninstall”, 到文本 (变量1), 相加 (实际安装目录, “uninstall.exe”))
赋值 (变量1, 相加 (变量1, 1))
写配置项 (相加 (实际安装目录, #常量_卸载配置项), “uninstall”, 到文本 (变量1), 相加 (实际安装目录, #常量_卸载配置项))
赋值 (变量1, 相加 (变量1, 1))

.变量循环首 (取数组成员数 (安装总文件夹组), 1, -1, 变量2)
    写配置项 (相加 (实际安装目录, #常量_卸载配置项), “uninstall”, 到文本 (变量1), 安装总文件夹组 [变量2])
    赋值 (变量1, 相加 (变量1, 1))
.变量循环尾 ()

.计次循环首 (取数组成员数 (局部_安装目录组), i)
    写配置项 (相加 (实际安装目录, #常量_卸载配置项), “uninstall”, 到文本 (变量1), 局部_安装目录组 [i])
    赋值 (变量1, 相加 (变量1, 1))
.计次循环尾 ()

.如果真 (等于 (支持卸载选中, 真))
    写配置项 (相加 (实际安装目录, #常量_卸载配置项), “unreg”, “1”, 相加 (“SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\”, 软件标题))
    
    写注册项 (#本地机器, 相加 (“SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\”, 软件标题, “\DisplayIcon”), 相加 (用户可执行文件名, “,-0”))
    写注册项 (#本地机器, 相加 (“SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\”, 软件标题, “\DisplayName”), 软件标题)
    写注册项 (#本地机器, 相加 (“SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\”, 软件标题, “\UninstallString”), 相加 (实际安装目录, “uninstall.exe”))
.如果真结束

.如果真 (询问启动选中)
    赋值 (.可视, 真)
.如果真结束
赋值 (安装成功, 真)
赋值 (.标题, “完成(&F)”)
赋值 (.现行子夹, 6)
画顶图 (“安装成功!”)

.子程序 _浏览目录按钮_被单击, 空白型, , 
.局部变量 返回目录, 文本型, , , 

赋值 (返回目录, 取空白文本 (256))
浏览目录 (取窗口句柄 (), “请输入欲安装到的目录:”, 返回目录)
.如果真 (不等于 (返回目录, “”))
    赋值 (.内容, 返回目录)
.如果真结束
获取焦点 ()

.子程序 画顶图, 空白型, , 
.参数 输出文字, 文本型, , 

.局部变量 图片号, 整数型, , , 

赋值 (图片号, 载入图片 (_启动窗口.))
图片号.画图片 (0, 0, .宽度, .高度, )
20.定位写出 (15, 输出文字)
卸载图片 (图片号)

.子程序 _主窗口_将被销毁, 空白型, , 
_启动窗口.销毁 ()

.子程序 _目录编辑框_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (等于 (键代码, #回车键))
    _下一步按钮_被单击 ()
.如果真结束




 ' 不属于任何一个程序集、类模块的函数：
