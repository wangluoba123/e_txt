 ' 文件类型：Windows窗口程序

 ' 程序名称：易语言经典算法 - 黑洞数
 ' 程序描述：　　任意一个四位数(每位上的数字都不相同)，经有限次“重排求差”操作，得到的黑洞数为6174。编写程序验证。
 ' 程序作者：大有吴涛易语言软件公司
 ' 邮政编码：116001
 ' 联系地址：辽宁省大连市中山区人民路55号亚太国际金融中心
 ' 联系电话：+86(0411)88995831
 ' 传真号码：+86(0411)88995834
 ' 电子信箱：service@dywt.com.cn
 ' 主页地址：http://www.dywt.com.cn
 ' 版权声明：祝您一帆风顺，心想事成！
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 400
    高度 = 281
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “易语言经典算法 - 黑洞数”
    帮助文件名 = “”





 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 4 系统核心支持库
 ' iext3 {B6F7542F-B8FE-46a8-9605-98856A687097} 2 0 扩展界面支持库三





.窗口程序集 启动窗口程序集, , , 

.子程序 __启动窗口_创建完毕, 空白型, , 
 ' 使用算法：选择排序
 ' 问题：黑洞数
 ' 问题描述：
 ' 任意一个四位数(每位上的数字都不相同),经有限次“重排求差”操作,得到的黑洞数为6174。编写程序验证。
 ' 问题分析：
 ' 黑洞数又称陷阱数，是类具有奇特转换特性的整数。任何一个数字不全相同整数，经有限次'重排求差'操作，
 ' 总会得某一个或一些数，这些数即为黑洞数。'重排求差'操作即组成该数的数字重排的最大数减去重排的最小数。
 ' 如：1234重排后得最大数4321，最小数1234，有它们两个相减，将得到的差再进行重排求差，一直到差数为6174或0。
 ' 通过上面规律可以推导出结果。
 ' 备注：

.子程序 _计算图形按钮_被单击, 空白型, , 
.局部变量 四位数, 整数型, , , 接收输入的四位数
.局部变量 中间变量, 整数型, , , 用于中间代换的变量

赋值 (.内容, “”)
 ' 接收输入的数字
赋值 (四位数, 到数值 (.内容))
 ' 判断输入的数字是否为四位数
.如果 (并且 (大于或等于 (四位数, 1000), 小于或等于 (四位数, 9999)))
    .判断循环首 (并且 (不等于 (四位数, 6174), 不等于 (四位数, 0)))
         ' 开始验证
        赋值 (中间变量, 验证程序 (四位数))
        赋值 (四位数, 中间变量)
         ' 输出结果
        到文本 (中间变量).加入文本 ()
        #换行符.加入文本 ()
    .判断循环尾 ()
.否则
    信息框 (“输入的数不符合要求！”, 0, )
.如果结束


.子程序 验证程序, 整数型, , 
.参数 验证数字, 整数型, , 

.局部变量 差值, 整数型, , , 最大数与最小数之差
.局部变量 循环变量1, 整数型, , , 
.局部变量 循环变量2, 整数型, , , 
.局部变量 中间变量, 整数型, , , 用于中间代换
.局部变量 最大数, 整数型, , , 数字重排后的最大数
.局部变量 最小数, 整数型, , , 数字重排后的最小数
.局部变量 数字数组, 整数型, , "4", 存放输入的四位数每一个位上的数字

 ' 取出四位数每一位上的数字
赋值 (数字数组 [1], 相除 (验证数字, 1000))
赋值 (数字数组 [2], 求余数 (相除 (验证数字, 100), 10))
赋值 (数字数组 [3], 相除 (求余数 (验证数字, 100), 10))
赋值 (数字数组 [4], 求余数 (验证数字, 10))
 ' 将四位数每一位上的数字按从大到小的顺序排列
.变量循环首 (1, 3, 1, 循环变量1)
    .变量循环首 (相加 (循环变量1, 1), 4, 1, 循环变量2)
        .如果真 (小于 (数字数组 [循环变量1], 数字数组 [循环变量2]))
            赋值 (中间变量, 数字数组 [循环变量1])
            赋值 (数字数组 [循环变量1], 数字数组 [循环变量2])
            赋值 (数字数组 [循环变量2], 中间变量)
        .如果真结束
        
    .变量循环尾 ()
.变量循环尾 ()
 ' 生成最大数和最小数
赋值 (最大数, 相加 (相乘 (数字数组 [1], 1000), 相乘 (数字数组 [2], 100), 相乘 (数字数组 [3], 10), 数字数组 [4]))
赋值 (最小数, 相加 (相乘 (数字数组 [4], 1000), 相乘 (数字数组 [3], 100), 相乘 (数字数组 [2], 10), 数字数组 [1]))
到文本 (最大数).加入文本 (“-”, 到文本 (最小数), “=”)
 ' 求最大数和最小数之差
赋值 (差值, 相减 (最大数, 最小数))
返回 (差值)


 ' 不属于任何一个程序集、类模块的函数：
