 ' 文件类型：Windows模块源码

 ' 程序名称：文件目录操作模块
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0





 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 4 系统核心支持库
 ' spec A512548E76954B6E92C21055517615B0 2 1 特殊功能支持库
 ' shellEx DA19AC3ADD2F4121AAD84AC5FBCAFC71 2 1 扩展功能支持库一




数据类型 文件时间, , 
    .成员 Low, 整数型, , , 
    .成员 Hight, 整数型, , , 

数据类型 搜索文件目录结构, 公开, 
    .成员 主目录, 文本型, , , 
    .成员 子目录, 文本型, , , 

数据类型 系统时间, , 
    .成员 年, 短整数型, , , 
    .成员 月, 短整数型, , , 
    .成员 星期, 短整数型, , , 
    .成员 日, 短整数型, , , 
    .成员 小时, 短整数型, , , 
    .成员 分钟, 短整数型, , , 
    .成员 秒, 短整数型, , , 
    .成员 毫秒, 短整数型, , , 

数据类型 文件结构信息_, , OFSTRUCT
    .成员 结构长度, 字节型, , , cBytes,设置成结构的长度（目前是136）
    .成员 文件盘符, 字节型, , , fFixedDisk,参见相关帮助
    .成员 错误代码, 整数型, , , nErrCode，参见相关帮助
    .成员 保留1, 整数型, , , Reserved1,保留不用
    .成员 保留2, 整数型, , , Reserved2,保留不用
    .成员 文件路径, 文本型, , "128", szPathName,文件的完整路径名


.DLL命令 CreateFile, 整数型, "kernel32.dll", "CreateFileA", , 打开或创建文件，返回文件句柄
    .参数 lpFileName, 文本型, , 文件路径
    .参数 dwDesiredAccess, 整数型, , 打开方式
    .参数 dwShareMode, 整数型, , 共享方式
    .参数 lpSecurityAttributes, 整数型, , 安全属性
    .参数 dwCreationDisposition, 整数型, , 创建方式
    .参数 dwFlagsAndAttributes, 整数型, , 文件属性
    .参数 hTemplateFile, 整数型, , 用于复制文件句柄

.DLL命令 CloseHandle, 逻辑型, "kernel32.dll", "CloseHandle", , 关闭一个内核对象
    .参数 hObject, 整数型, , 文件句柄

.DLL命令 GetFileSize, 整数型, "kernel32", "GetFileSize", , 取出文件的长度
    .参数 文件句柄, 整数型, , 
    .参数 尺寸大小, 整数型, 传址, 

.DLL命令 RtlMoveMemory, 空白型, "kernel32", "RtlMoveMemory", , 复制内存
    .参数 目的变量, 整数型, , pTo
    .参数 源, 整数型, 传址, uFrom
    .参数 尺寸, 整数型, , lSize

.DLL命令 lstrcpyn, 整数型, "kernel32", "lstrcpynA", , 取长整数型地址
    .参数 数据1, 长整数型, 传址, lpString1
    .参数 数据2, 长整数型, 传址, lpString2
    .参数 数据长度, 整数型, , iMaxLength

.DLL命令 WriteFile_, 逻辑型, "kernel32.dll", "WriteFile", , 从文件缓冲区写出数据到文件
    .参数 hFile, 整数型, , 文件句柄
    .参数 Buffer, 字节集, , 写的字节
    .参数 nNumberOfBytesToWrite, 整数型, , 写的数量
    .参数 lpNumberOfBytesWritten, 整数型, 传址, 实际写的数量
    .参数 lpOverlapped, 整数型, , 

.DLL命令 ReadFile_, 逻辑型, "kernel32.dll", "ReadFile", , 从文件读入数据到文件缓冲区
    .参数 hFile, 整数型, , 文件句柄
    .参数 Buffer, 字节集, , 读的字节
    .参数 nNumberOfBytesToRead, 整数型, , 读的数量
    .参数 lpNumberOfBytesRead, 整数型, 传址, 实际读的数量
    .参数 lpOverlapped, 整数型, , 

.DLL命令 FlushFileBuffers, 整数型, "kernel32", "FlushFileBuffers", , 
    .参数 hFile, 整数型, , 

.DLL命令 SetFilePointer, 整数型, "kernel32.dll", "SetFilePointer", , 设置当前读写位置，返回当前指针
    .参数 hFile, 整数型, , 文件句柄
    .参数 lDistanceToMove, 整数型, , 低位偏移字节
    .参数 lpDistanceToMoveHigh, 整数型, , 高位偏移指针
    .参数 dwMoveMethod, 整数型, , 方式, 0 从头, 1 当前, 2 文件尾

.DLL命令 GetFileTime, 逻辑型, "kernel32", "GetFileTime", , 取出指定文件时间，非0表示成功
    .参数 文件号, 整数型, , 
    .参数 创建时间, 文件时间, , UTC格式的文件时间，下同
    .参数 访问时间, 文件时间, , 
    .参数 修改时间, 文件时间, , 

.DLL命令 SystemTimeToFileTime, 整数型, "kernel32", "SystemTimeToFileTime", , 系统时间转换为本地时间，把系统时间转换为本地格式的文件时间，非0表示成功
    .参数 系统时间, 系统时间, , 
    .参数 文件时间, 文件时间, , 本地格式的文件时间

.DLL命令 FileTimeToSystemTime, 整数型, "kernel32", "FileTimeToSystemTime", , 把本地格式的文件时间转换为系统时间，非0表示成功
    .参数 文件时间, 文件时间, , 本地格式的文件时间
    .参数 系统时间, 系统时间, , 

.DLL命令 LocalFileTimeToFileTime, 整数型, "kernel32", "LocalFileTimeToFileTime", , 本地时间转换为文件时间，把本地格式的文件时间转换为UTC格式的文件时间，非0表示成功
    .参数 本地时间, 文件时间, , 本地格式的文件时间
    .参数 文件时间, 文件时间, , UTC格式的文件时间

.DLL命令 FileTimeToLocalFileTime, 整数型, "kernel32", "FileTimeToLocalFileTime", , 文件时间转换为本地时间，把UTC格式的文件时间转换为本地格式的文件时间，非0表示成功
    .参数 文件时间, 文件时间, , UTC格式的文件时间
    .参数 本地时间, 文件时间, , 本地格式的文件时间

.DLL命令 PathIsDirectory, 逻辑型, "shlwapi.dll", "PathIsDirectoryA", , 目录是否存在,存在返回真，不存在返回假
    .参数 路径文本, 文本型, , pszPath

.DLL命令 SetFileTime, 逻辑型, "kernel32", "SetFileTime", , 设置指定文件时间，非0表示成功。
    .参数 文件号, 整数型, , 
    .参数 创建时间, 文件时间, , 本地格式的文件时间，下同
    .参数 访问时间, 文件时间, , 
    .参数 修改时间, 文件时间, , 

.DLL命令 SetEndOfFile, 逻辑型, "kernel32.dll", "SetEndOfFile", , 文件截断, 截断当前指针
    .参数 hFile, 整数型, , 文件句柄

.程序集 程序集1, , , 

.子程序 _启动子程序, 整数型, , 请在本子程序中放置易模块初始化代码

_临时子程序 () ' 在初始化代码执行完毕后调用测试代码
返回 (0) ' 可以根据您的需要返回任意数值

.子程序 _临时子程序, 空白型, , 
.局部变量 文件句柄, 整数型, , , 
.局部变量 aaa, 日期时间型, , , 

 ' 本名称子程序用作测试程序用，仅在开发及调试环境中有效，编译发布程序前将被系统自动清空，请将所有用作测试的临时代码放在本子程序中。 ***注意不要修改本子程序的名称、参数及返回值类型。
赋值 (文件句柄, 模块_打开文件 (“D:\1.txt”, #读写, #无限制))

 ' 模块_读入字节集 (文件句柄, 4096)
 ' 调试输出 (模块_取当前读写位置 (文件句柄))
 ' 调试输出 (模块_取文件时间 (文件句柄, aaa))
 ' 调试输出 (aaa)
 ' 调试输出 (模块_置文件时间 (文件句柄, 取现行时间 ()))

同步对比目录 (“G:\更新\网络游戏\QQ幻想\”, “G:\dddd\”, 真, )


.程序集 文件操作接口程序集, , , 

.子程序 模块_打开文件, 整数型, 公开, 返回文件句柄，兼容易打开文件命令中的常量
.参数 文件名称, 文本型, , 
.参数 打开方式, 整数型, 可空, 
.参数 共享方式, 整数型, 可空, 

.局部变量 API共享方式, 整数型, , , 
.局部变量 API打开方式, 整数型, , , 
.局部变量 API创建方式, 整数型, , , 
.局部变量 文件句柄, 整数型, , , 

.判断开始 (等于 (打开方式, #读入))
    赋值 (API打开方式, 2147483648)
    赋值 (API创建方式, 3)
.判断 (等于 (打开方式, #写出))
    赋值 (API打开方式, 1073741824)
    赋值 (API创建方式, 3)
.判断 (等于 (打开方式, #读写))
    赋值 (API打开方式, 3221225472)
    赋值 (API创建方式, 3)
.判断 (等于 (打开方式, #重写))
    赋值 (API打开方式, 3221225472)
    赋值 (API创建方式, 4)
.判断 (等于 (打开方式, #改写))
    赋值 (API打开方式, 1073741824)
    赋值 (API创建方式, 4)
.判断 (等于 (打开方式, #改读))
    赋值 (API打开方式, 3221225472)
    赋值 (API创建方式, 4)
.默认
    
    赋值 (API打开方式, 3221225472)
    赋值 (API创建方式, 3)
.判断结束

.判断开始 (等于 (共享方式, #无限制))
    赋值 (API共享方式, 3)
.判断 (等于 (共享方式, #禁止读))
    赋值 (API共享方式, 2)
.判断 (等于 (共享方式, #禁止写))
    赋值 (API共享方式, 1)
.判断 (等于 (共享方式, #禁止读写))
    赋值 (API共享方式, 0)
.默认
    
    赋值 (API共享方式, 3)
.判断结束
赋值 (文件句柄, CreateFile (文件名称, API打开方式, API共享方式, 0, API创建方式, 128, 0))
返回 (文件句柄)



.子程序 模块_关闭文件, 逻辑型, 公开, 
.参数 文件句柄, 整数型, , 

 ' SetEndOfFile (文件句柄)
返回 (CloseHandle (文件句柄))


.子程序 模块_取文件长度, 长整数型, , 
.参数 文件句柄, 整数型, , 

.局部变量 执行结果, 文件结构信息_, , , 
.局部变量 长度低位, 整数型, , , 
.局部变量 长度高位, 整数型, , , 
.局部变量 长度, 长整数型, , , 
.局部变量 地址, 整数型, , , 

.如果真 (小于或等于 (文件句柄, 0))
    返回 (-1)
    
.如果真结束
赋值 (长度低位, GetFileSize (文件句柄, 长度高位))

赋值 (地址, lstrcpyn (长度, 长度, 0))

RtlMoveMemory (地址, 长度低位, 4) ' 复制低32位

RtlMoveMemory (相加 (地址, 4), 长度高位, 4) ' 复制高32位

返回 (长度)


.子程序 模块_读入字节集, 字节集, , 
.参数 文件句柄, 整数型, , 
.参数 数据长度, 整数型, , 

.局部变量 缓冲区, 字节集, , , 
.局部变量 实际长度, 整数型, , , 

赋值 (缓冲区, 取空白字节集 (数据长度))
ReadFile_ (文件句柄, 缓冲区, 数据长度, 实际长度, 0)
赋值 (缓冲区, 取字节集左边 (缓冲区, 实际长度))
返回 (缓冲区)



.子程序 模块_写出字节集, 逻辑型, 公开, 
.参数 文件句柄, 整数型, , 
.参数 数据内容, 字节集, , 

.局部变量 实际长度, 整数型, , , 
.局部变量 写入状态, 逻辑型, , , 

赋值 (实际长度, 取字节集长度 (数据内容))
赋值 (写入状态, WriteFile_ (文件句柄, 数据内容, 实际长度, 实际长度, 0))
FlushFileBuffers (文件句柄)
返回 (写入状态)


.子程序 模块_到文件首, 长整数型, , 
.参数 文件句柄, 整数型, , 

返回 (模块_移动读写位置 (文件句柄, 0, 0))


.子程序 模块_到文件尾, 长整数型, , 
.参数 文件句柄, 整数型, , 

返回 (模块_移动读写位置 (文件句柄, 0, 2))


.子程序 模块_取当前读写位置, 长整数型, , 
.参数 文件句柄, 整数型, , 

返回 (模块_移动读写位置 (文件句柄, 0, 1))


.子程序 模块_移动读写位置, 长整数型, , 
.参数 文件句柄, 空白型, , 
.参数 移动长度, 长整数型, , 
.参数 起始位置, 整数型, , 0文件头，1当前，2文件尾

.局部变量 高位, 整数型, , , 
.局部变量 低位, 整数型, , , 
.局部变量 地址, 整数型, , , 
.局部变量 当前位置, 长整数型, , , 

赋值 (高位, 取字节集数据 (取字节集右边 (到字节集 (移动长度), 4), #整数型, )) ' 易语言的移位不支持长整数型所以用这个方法
赋值 (低位, 取字节集数据 (取字节集左边 (到字节集 (移动长度), 4), #整数型, )) ' 同上，其它整数型、短整数也可以
赋值 (低位, SetFilePointer (文件句柄, 低位, 取变量地址 (高位), 起始位置))
赋值 (地址, lstrcpyn (当前位置, 当前位置, 0))
RtlMoveMemory (地址, 低位, 4) ' 复制低32位
RtlMoveMemory (相加 (地址, 4), 高位, 4) ' 复制高32位
返回 (当前位置)


.子程序 模块_取文件时间, 逻辑型, , 非0表示成功
.参数 文件句柄, 整数型, , “打开指定文件”所返回的文件句柄
.参数 修改时间, 日期时间型, 参考 可空, 
.参数 创建时间, 日期时间型, 参考 可空, 参数为空，则不取出该时间，下同。
.参数 访问时间, 日期时间型, 参考 可空, 

.局部变量 文件创建, 文件时间, , , 
.局部变量 文件访问, 文件时间, , , 
.局部变量 文件修改, 文件时间, , , 
.局部变量 本地创建, 文件时间, , , 
.局部变量 本地访问, 文件时间, , , 
.局部变量 本地修改, 文件时间, , , 
.局部变量 系统创建, 系统时间, , , 
.局部变量 系统访问, 系统时间, , , 
.局部变量 系统修改, 系统时间, , , 
.局部变量 返回值, 逻辑型, , , 

赋值 (返回值, GetFileTime (文件句柄, 文件创建, 文件访问, 文件修改))
.如果 (返回值)
    .如果真 (等于 (是否为空 (创建时间), 假))
        .如果真 (等于 (FileTimeToLocalFileTime (文件创建, 本地创建), 0))
            返回 (假)
        .如果真结束
        .如果真 (等于 (FileTimeToSystemTime (本地创建, 系统创建), 0))
            返回 (假)
        .如果真结束
        赋值 (创建时间, 指定时间 (系统创建.年, 系统创建.月, 系统创建.日, 系统创建.小时, 系统创建.分钟, 系统创建.秒))
    .如果真结束
    .如果真 (等于 (是否为空 (访问时间), 假))
        .如果真 (等于 (FileTimeToLocalFileTime (文件访问, 本地访问), 0))
            返回 (假)
        .如果真结束
        .如果真 (等于 (FileTimeToSystemTime (本地访问, 系统访问), 0))
            返回 (假)
        .如果真结束
        赋值 (访问时间, 指定时间 (系统访问.年, 系统访问.月, 系统访问.日, 系统访问.小时, 系统访问.分钟, 系统访问.秒))
    .如果真结束
    .如果真 (等于 (是否为空 (修改时间), 假))
        .如果真 (等于 (FileTimeToLocalFileTime (文件修改, 本地修改), 0))
            返回 (假)
        .如果真结束
        .如果真 (等于 (FileTimeToSystemTime (本地修改, 系统修改), 0))
            返回 (假)
        .如果真结束
        赋值 (修改时间, 指定时间 (系统修改.年, 系统修改.月, 系统修改.日, 系统修改.小时, 系统修改.分钟, 系统修改.秒))
    .如果真结束
    返回 (返回值)
.否则
    返回 (返回值)
    
.如果结束


.子程序 模块_置文件时间, 逻辑型, 公开, 非0表示成功
.参数 文件句柄, 整数型, , “打开指定文件”所返回的文件句柄
.参数 修改时间, 日期时间型, 可空, 
.参数 创建时间, 日期时间型, 可空, 参数为空，则不改变该时间，下同。
.参数 访问时间, 日期时间型, 可空, 

.局部变量 文件创建, 文件时间, , , 
.局部变量 文件访问, 文件时间, , , 
.局部变量 文件修改, 文件时间, , , 
.局部变量 本地创建, 文件时间, , , 
.局部变量 本地访问, 文件时间, , , 
.局部变量 本地修改, 文件时间, , , 
.局部变量 系统创建, 系统时间, , , 
.局部变量 系统访问, 系统时间, , , 
.局部变量 系统修改, 系统时间, , , 

.如果真 (等于 (是否为空 (创建时间), 假))
    赋值 (系统创建.年, 取时间部分 (创建时间, #年份))
    赋值 (系统创建.月, 取时间部分 (创建时间, #月份))
    赋值 (系统创建.日, 取时间部分 (创建时间, #日))
    赋值 (系统创建.小时, 取时间部分 (创建时间, #小时))
    赋值 (系统创建.分钟, 取时间部分 (创建时间, #分钟))
    赋值 (系统创建.秒, 取时间部分 (创建时间, #秒))
    SystemTimeToFileTime (系统创建, 本地创建)
    LocalFileTimeToFileTime (本地创建, 文件创建)
.如果真结束
.如果真 (等于 (是否为空 (修改时间), 假))
    赋值 (系统修改.年, 取时间部分 (修改时间, #年份))
    赋值 (系统修改.月, 取时间部分 (修改时间, #月份))
    赋值 (系统修改.日, 取时间部分 (修改时间, #日))
    赋值 (系统修改.小时, 取时间部分 (修改时间, #小时))
    赋值 (系统修改.分钟, 取时间部分 (修改时间, #分钟))
    赋值 (系统修改.秒, 取时间部分 (修改时间, #秒))
    SystemTimeToFileTime (系统修改, 本地修改)
    LocalFileTimeToFileTime (本地修改, 文件修改)
.如果真结束
.如果真 (等于 (是否为空 (访问时间), 假))
    赋值 (系统访问.年, 取时间部分 (访问时间, #年份))
    赋值 (系统访问.月, 取时间部分 (访问时间, #月份))
    赋值 (系统访问.日, 取时间部分 (访问时间, #日))
    赋值 (系统访问.小时, 取时间部分 (访问时间, #小时))
    赋值 (系统访问.分钟, 取时间部分 (访问时间, #分钟))
    赋值 (系统访问.秒, 取时间部分 (访问时间, #秒))
    SystemTimeToFileTime (系统访问, 本地访问)
    LocalFileTimeToFileTime (本地访问, 文件访问)
.如果真结束
调试输出 (文件访问.Low)

返回 (SetFileTime (文件句柄, 文件创建, 文件访问, 文件修改))

.子程序 模块_对比文件, 逻辑型, 公开, 
.参数 A句柄, 整数型, , 
.参数 B句柄, 整数型, , 

.局部变量 A修改时间, 日期时间型, , , 
.局部变量 B修改时间, 日期时间型, , , 

.如果真 (不等于 (模块_取文件长度 (A句柄), 模块_取文件长度 (B句柄)))
    返回 (假)
.如果真结束
模块_取文件时间 (A句柄, A修改时间)
模块_取文件时间 (B句柄, B修改时间)
返回 (时间比较 (A修改时间, B修改时间))


.子程序 时间类型转换, 系统时间, , 
.参数 时间值, 日期时间型, , 

.局部变量 返回值, 系统时间, , , 

赋值 (返回值.年, 取时间部分 (时间值, #年份))
赋值 (返回值.月, 取时间部分 (时间值, #月份))
赋值 (返回值.日, 取时间部分 (时间值, #日))
赋值 (返回值.小时, 取时间部分 (时间值, #小时))
赋值 (返回值.分钟, 取时间部分 (时间值, #分钟))
赋值 (返回值.秒, 取时间部分 (时间值, #秒))
返回 (返回值)

.子程序 时间比较, 逻辑型, , 
.参数 a1, 日期时间型, , 
.参数 b1, 日期时间型, , 

.局部变量 a, 系统时间, , , 
.局部变量 b, 系统时间, , , 

赋值 (a, 时间类型转换 (a1))
赋值 (b, 时间类型转换 (b1))

.如果真 (不等于 (a.年, b.年))
    返回 (假)
.如果真结束
.如果真 (不等于 (a.月, b.月))
    返回 (假)
.如果真结束
.如果真 (不等于 (a.日, b.日))
    返回 (假)
.如果真结束
.如果真 (不等于 (a.小时, b.小时))
    返回 (假)
.如果真结束
.如果真 (不等于 (a.分钟, b.分钟))
    返回 (假)
.如果真结束
.如果真 (不等于 (a.秒, b.秒))
    返回 (假)
.如果真结束
返回 (真)


.程序集 目录操作接口程序集, , , 

.子程序 模块_搜索目录, 整数型, , 返回目录数量
.参数 目录名, 文本型, , 要搜索的目录路径文本
.参数 反馈子程序, 子程序指针, 可空, 接收搜索结果的子程序,包含1个参数,参数内容为当前搜索到的子目录名

赋值 (目录名, 选择 (等于 (取文本右边 (目录名, 1), “\”), 目录名, 相加 (目录名, “\”)))
返回 (归递搜索目录 (目录名, “”, 反馈子程序))


.子程序 归递搜索目录, 整数型, , 
.参数 目录, 文本型, , 
.参数 子目录, 文本型, , 
.参数 反馈子程序, 子程序指针, , 

.局部变量 目录名, 文本型, , , 
.局部变量 数量, 整数型, , , 

赋值 (目录名, 寻找文件 (相加 (目录, 子目录, “*”), #子目录))
.判断循环首 (不等于 (目录名, “”))
    .如果真 (并且 (不等于 (目录名, “.”), 不等于 (目录名, “..”)))
        赋值 (数量, 相加 (数量, 1))
        赋值 (数量, 相加 (数量, 归递搜索目录 (目录, 相加 (子目录, 目录名, “\”), 反馈子程序)))
        
    .如果真结束
    赋值 (目录名, 寻找文件 (#子目录))
.判断循环尾 ()
未知支持库函数_13 (反馈子程序, 子目录)
返回 (数量)

.子程序 模块_目录是否存在, 逻辑型, , 
.参数 目录名, 文本型, , 

返回 (PathIsDirectory (目录名))


.子程序 模块_创建多级目录, 空白型, , 
.参数 目录名称, 文本型, , "a\b\c"或"c:\a\b\c"

.局部变量 当前路径, 文本型, , , 
.局部变量 目录名, 文本型, , "0", 
.局部变量 索引, 整数型, , , 
.局部变量 返回值, 逻辑型, , , 

赋值 (目录名, 分割文本 (目录名称, “\”, ))
.计次循环首 (取数组成员数 (目录名), 索引)
    创建目录 (相加 (当前路径, 目录名 [索引]))
    赋值 (当前路径, 相加 (当前路径, 目录名 [索引], “\”))
.计次循环尾 ()

.子程序 模块_搜索文件, 整数型, , 返回搜索到的文件数量
.参数 目录, 搜索文件目录结构, , 要搜索的目录路径文本
.参数 反馈子程序, 子程序指针, 可空, 包含1个参数,用来接收搜索到的文件名

.局部变量 文件名, 文本型, , , 
.局部变量 数量, 整数型, , , 



赋值 (文件名, 寻找文件 (相加 (目录.主目录, 目录.子目录, “*.*”), ))

.判断循环首 (并且 (不等于 (文件名, “”), 不等于 (文件名, “.”)))
    赋值 (数量, 相加 (数量, 1))
    .如果真 (大于 (到整数 (反馈子程序), 0))
        未知支持库函数_13 (反馈子程序, 相加 (目录.子目录, 文件名))
    .如果真结束
    赋值 (文件名, 寻找文件 ())
.判断循环尾 ()
返回 (数量)

.程序集 目录对比程序集, , , 提供简单功能的目录对比操作

.程序集变量 全局参照目录, 文本型, , , 
.程序集变量 全局目的目录, 文本型, , , 
.程序集变量 全局反馈子程序, 子程序指针, , , 
.子程序 同步对比目录, 空白型, 公开, 
.参数 参照目录, 文本型, , 
.参数 目的目录, 文本型, , 
.参数 是否删除多余文件, 逻辑型, 可空, 1.
.参数 进度反馈, 子程序指针, 可空, 

赋值 (全局参照目录, 选择 (等于 (取文本右边 (参照目录, 1), “\”), 参照目录, 相加 (参照目录, “\”)))
赋值 (全局目的目录, 选择 (等于 (取文本右边 (目的目录, 1), “\”), 目的目录, 相加 (目的目录, “\”)))
赋值 (全局反馈子程序, 进度反馈)
.如果真 (等于 (是否删除多余文件, 真))
    模块_搜索目录 (全局目的目录, &删除多余)
.如果真结束
模块_搜索目录 (全局参照目录, &复制差异)


.子程序 删除多余, 空白型, , 
.参数 子目录, 文本型, , 

.局部变量 文件信息, 搜索文件目录结构, , , 

赋值 (文件信息.主目录, 全局目的目录)

赋值 (文件信息.子目录, 子目录)
调试输出 (子目录)

模块_搜索文件 (文件信息, &删除多余文件)

.如果真 (等于 (模块_目录是否存在 (相加 (全局参照目录, 子目录)), 假))
    删除目录 (相加 (全局参照目录, 子目录))
.如果真结束


.子程序 删除多余文件, 空白型, , 
.参数 文件名, 文本型, , 

.如果真 (等于 (文件是否存在 (相加 (全局参照目录, 文件名)), 假))
    置文件属性 (相加 (全局目的目录, 文件名), #存档文件)
    删除文件 (相加 (全局目的目录, 文件名))
    
.如果真结束


.子程序 复制差异, 空白型, , 
.参数 子目录, 文本型, , 

.局部变量 目录信息, 搜索文件目录结构, , , 

调试输出 (子目录)

.如果真 (等于 (模块_目录是否存在 (相加 (全局目的目录, 子目录)), 假))
    模块_创建多级目录 (相加 (全局目的目录, 子目录))
.如果真结束
赋值 (目录信息.主目录, 全局参照目录)
赋值 (目录信息.子目录, 子目录)
模块_搜索文件 (目录信息, &检查差异文件)

.子程序 检查差异文件, 空白型, , 
.参数 文件名, 文本型, , 

.局部变量 参照文件句柄, 整数型, , , 
.局部变量 目标文件句柄, 整数型, , , 
.局部变量 文件长度, 长整数型, , , 
.局部变量 参照文件名, 文本型, , , 
.局部变量 目的文件名, 文本型, , , 
.局部变量 缓冲数据, 字节集, , , 
.局部变量 缓冲区大小, 整数型, , , 
.局部变量 已复制长度, 长整数型, , , 
.局部变量 进度, 整数型, , , 
.局部变量 文件时间, 日期时间型, , , 

赋值 (参照文件名, 相加 (全局参照目录, 文件名))
赋值 (目的文件名, 相加 (全局目的目录, 文件名))
赋值 (参照文件句柄, 模块_打开文件 (参照文件名, #读入, #禁止写))

.如果真 (小于或等于 (参照文件句柄, 0))
    返回 ()
.如果真结束
赋值 (目标文件句柄, 模块_打开文件 (目的文件名, #重写, #无限制))

.如果真 (小于或等于 (目标文件句柄, 0))
    返回 ()
.如果真结束
.如果真 (等于 (模块_对比文件 (参照文件句柄, 目标文件句柄), 真))
    返回 ()
.如果真结束
赋值 (文件长度, 模块_取文件长度 (参照文件句柄))
赋值 (已复制长度, 0)
赋值 (缓冲区大小, 相乘 (1024, 1024, 5))
模块_取文件时间 (参照文件句柄, 文件时间)
调试输出 (文件时间)

.循环判断首 ()
    赋值 (缓冲数据, 模块_读入字节集 (参照文件句柄, 缓冲区大小))
    模块_写出字节集 (目标文件句柄, 缓冲数据)
    赋值 (已复制长度, 相加 (已复制长度, 取字节集长度 (缓冲数据)))
    调试输出 (已复制长度, 文件长度)
    
    赋值 (进度, 四舍五入 (相乘 (相除 (已复制长度, 文件长度), 100), 0))
    .如果真 (大于 (到整数 (全局反馈子程序), 0))
        调用子程序 (全局反馈子程序, , , 目的文件名, 进度)
    .如果真结束
    
.循环判断尾 (小于 (已复制长度, 文件长度))
调试输出 (模块_置文件时间 (目标文件句柄, 文件时间))

模块_关闭文件 (参照文件句柄)
模块_关闭文件 (目标文件句柄)


 ' 不属于任何一个程序集、类模块的函数：
