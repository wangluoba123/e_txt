 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 181
    高度 = 448
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 0
    底图方式 = 1
    底色 = 16754943 '  0xFFA8FF
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 0
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 真
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “辅助工具”
    帮助文件名 = “”

窗口 小化窗口
    左边 = 50
    顶边 = 50
    宽度 = 640
    高度 = 20
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 0
    底图方式 = 1
    底色 = 8421376 '  0x808000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 假
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 假
    随意移动 = 真
    外形 = 0
    总在最前 = 真
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “”
    帮助文件名 = “”



.常量 SE_BACKUP_NAME, "“SeBackupPrivilege”", 公开, 
.常量 SE_RESTORE_NAME, "“SeRestorePrivilege”", 公开, 
.常量 SE_SHUTDOWN_NAME, "“SeShutdownPrivilege”", 公开, 关机
.常量 PROCESS_QUERY_INFORMATION, "1024", , 
.常量 PROCESS_VM_READ, "16", , 
.常量 MEM_PRIVATE, "131072", , 
.常量 PAGE_READWRITE, "4", , 
.常量 TH32CS_SNAPHEAPLIST, "1", , 
.常量 TH32CS_SNAPPROCESS, "2", , 
.常量 TH32CS_SNAPTHREAD, "4", , 
.常量 TH32CS_SNAPMODULE, "8", , 
.常量 TH32CS_SNAPALL, "15", , 
.常量 TH32CS_INHERIT, "-2147483648", , 
.常量 SE_DEBUG_NAME, "“SeDebugPrivilege”", 公开, 调试


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 4 系统核心支持库
 ' shellEx DA19AC3ADD2F4121AAD84AC5FBCAFC71 2 0 扩展功能支持库一
 ' eAPI F7FC1AE45C5C4758AF03EF19F18A395D 1 1 应用接口支持库
 ' xplib 7F54B9CE8887428dBA9CEEB94CEF4C72 1 6 XP风格界面库
 ' eDB 46E94341933A462383A4DE26B146322C 1 3 数据库操作支持库
 ' iext2 AF6AD80AA4244A59AFB3D83ECF5173CC 1 1 扩展界面支持库二
 ' spec A512548E76954B6E92C21055517615B0 2 1 特殊功能支持库




数据类型 LuID, , 
    .成员 lowpart, 整数型, , , 
    .成员 highpart, 整数型, , , 

数据类型 PROCESSENTRY32, , 
    .成员 dwSize, 整数型, , , 
    .成员 cntUsage, 整数型, , , 
    .成员 th32ProcessID, 整数型, , , 
    .成员 th32DefaultHeapID, 整数型, , , 
    .成员 th32ModuleID, 整数型, , , 
    .成员 cntThreads, 整数型, , , 
    .成员 th32ParentProcessID, 整数型, , , 
    .成员 pcPriClassBase, 整数型, , , 
    .成员 dwFlags, 整数型, , , 
    .成员 szExeFile, 字节型, , "256", 

数据类型 MEMORY_BASIC_INFORMATION, , 
    .成员 BaseAddress, 整数型, , , 
    .成员 AllocationBase, 整数型, , , 应用程序可用的最小地址
    .成员 AllocattionProtect, 整数型, , , 应用程序可用的最大地址
    .成员 RegionSize, 整数型, , , 
    .成员 State, 整数型, , , 
    .成员 Protect, 整数型, , , 
    .成员 Type, 整数型, , , 

数据类型 TOKEN_PRIVILEGES, , From:AdjustTokenPrivileges
    .成员 PrivilegeCount, 整数型, , , 
    .成员 lowpart, 整数型, , , 
    .成员 highpart, 整数型, , , 
    .成员 Attributes, 整数型, , , 

数据类型 rect, , 
    .成员 l, 整数型, , , 
    .成员 t, 整数型, , , 
    .成员 r, 整数型, , , 
    .成员 b, 整数型, , , 


.DLL命令 取扫描码, 整数型, "user32.dll", "MapVirtualKeyA", , 
    .参数 虚拟码, 整数型, , 定义一个键的扫描码或虚拟键码。该值如何解释依赖于uMapType参数的值。
    .参数 a, 整数型, ,    0：代表uCodee是一虚拟键码且被翻译为一扫描码。若一虚拟键码不区分左右，则返回左键的扫描码。若未进行翻译，则函数返回O。1：代表uCode是一扫描码且被翻译为一虚拟键码，且此虚拟键码不区分左右。若未进行翻译，则函数返回0。2：代表uCode为一虚拟键码且被翻译为一未被移位的字符值存放于返回值的低序字中。死键（发音符号）则通过设置返回值的最高位来表示。若未进行翻译，则函数返回0。3：代表uCode为一扫描码且被翻译为区分左右键的一虚拟键码。若未进行翻译，则函数返回0。

.DLL命令 取活动窗口, 整数型, "", "GetForegroundWindow", , 

.DLL命令 前台窗口, 整数型, "user32", "SetForegroundWindow", , 将窗口设为系统的前台窗口。这个函数可用于改变用户目前正在操作的应用程序  非零表示成功，零表示失败。会设置GetLastError
    .参数 窗口句柄, 整数型, , 

.DLL命令 api_GetCurrentProcess, 整数型, "kernel32.dll", "GetCurrentProcess", , 获取线程

.DLL命令 api_OpenProcessToken, 整数型, "advapi32.dll", "OpenProcessToken", , NT/XP关机操作
    .参数 ProcessHandle, 整数型, , 
    .参数 DesiredAccess, 整数型, , 
    .参数 TokenHandle, 整数型, 传址, 

.DLL命令 api_LookupPrivilegeValue, 逻辑型, "advapi32.dll", "LookupPrivilegeValueA", , 在NT/XP恢复权限
    .参数 lpSystemName, 文本型, , 
    .参数 lpName, 文本型, , 
    .参数 lpLuid, LuID, 传址, 

.DLL命令 api_AdjustTokenPrivileges, 逻辑型, "advapi32.dll", "AdjustTokenPrivileges", , 在NT/XP中拥有最高权限
    .参数 TokenHandle, 整数型, , 
    .参数 DisableAllPrivileges, 整数型, , 
    .参数 NewState, TOKEN_PRIVILEGES, 传址, 
    .参数 BufferLength, 整数型, , 
    .参数 PreviousState, TOKEN_PRIVILEGES, 传址, 
    .参数 ReturnLength, 整数型, 传址, 

.DLL命令 枚举窗口, 逻辑型, "", "EnumWindows", , 
    .参数 枚举过程, 子程序指针, , 
    .参数 参数, 整数型, , 

.DLL命令 整数_ReadProcessMemory, 整数型, "kernel32.dll", "ReadProcessMemory", , 
    .参数 hProcess, 整数型, , 
    .参数 lpBaseAddress, 整数型, , 内存地址
    .参数 lpBuffer, 整数型, 传址, 数据指针
    .参数 nSize, 整数型, , 
    .参数 lpNumberOfBytesWritten, 整数型, , 

.DLL命令 单精度数_ReadProcessMemory, 整数型, "kernel32.dll", "ReadProcessMemory", , 
    .参数 hProcess, 整数型, , 
    .参数 lpBaseAddress, 整数型, , 内存地址
    .参数 lpBuffer, 整数型, , 数据指针
    .参数 nSize, 整数型, , 
    .参数 lpNumberOfBytesWritten, 整数型, , 

.DLL命令 找标题, 整数型, "", "SendMessageA", , 
    .参数 hwnd, 整数型, , 
    .参数 wMsg, 整数型, , 
    .参数 wParam, 整数型, , 
    .参数 lParam, 文本型, 传址, any

.DLL命令 找上级窗口, 整数型, "user32.dll", "GetParent", , 
    .参数 hwnd, 整数型, , 

.DLL命令 查找窗口, 整数型, "user32.dll", "FindWindowA", , 
    .参数 pClassName, 空白型, , 
    .参数 lpWindowName, 文本型, , 

.DLL命令 取进程ID, 整数型, "user32.dll", "GetWindowThreadProcessId", , 
    .参数 hwnd, 整数型, , 
    .参数 lpdwProcessId, 整数型, 传址, 

.DLL命令 OpenProcess, 整数型, "", "", , 
    .参数 dwDesiredAccess, 整数型, , 
    .参数 bInheritHandle, 整数型, , 
    .参数 dwProcessId, 整数型, , 

.DLL命令 VirtualQueryEx, 整数型, "", "", , 
    .参数 hProcess, 整数型, , 
    .参数 lpAddress, 整数型, , 
    .参数 info, MEMORY_BASIC_INFORMATION, 传址, 
    .参数 dwLength, 整数型, , 
    .参数 匿名参数_235, 空白型, , 

.DLL命令 字节集_ReadProcessMemory, 整数型, "kernel32.dll", "ReadProcessMemory", , 
    .参数 hProcess, 整数型, , 
    .参数 lpBaseAddress, 整数型, , 
    .参数 lpBuffer, 字节集, 传址, 
    .参数 nSize, 整数型, , 
    .参数 lpNumberOfBytesWritten, 整数型, , 

.DLL命令 CloseHandle, 整数型, "", "", , 
    .参数 hObject, 整数型, , 

.DLL命令 按键, 空白型, "", "keybd_event", , 
    .参数 虚拟键代码, 整数型, , 
    .参数 扫描码, 整数型, , 
    .参数 设置标识, 整数型, , 
    .参数 扩展信息, 整数型, , 

.DLL命令 取窗口坐标, 整数型, "user32.dll", "GetWindowRect", , 
    .参数 hwnd, 整数型, , 
    .参数 rect, rect, , 

.DLL命令 载入外窗口, 整数型, "", "SetParent", , 
    .参数 hWndChild, 整数型, , 
    .参数 hWndNewParent, 整数型, , 

.DLL命令 移动主窗口, 整数型, "user32.dll", "MoveWindow", , 
    .参数 窗口句柄, 整数型, , hwnd，欲移动窗口的句柄
    .参数 左侧位置, 整数型, , x，窗口新的左侧位置
    .参数 顶部位置, 整数型, , y，窗口新的顶部位置
    .参数 新宽度, 整数型, , nWidth，窗口的新宽度
    .参数 高宽度, 整数型, , nHeight，窗口的高宽度
    .参数 是否重画, 整数型, , bRepaint，如窗口此时应重画，则设为TRUE（非零）

.DLL命令 发送消息_, 整数型, "user32", "SendMessageA", , 
    .参数 窗口句柄, 整数型, , 
    .参数 信息值, 整数型, , 
    .参数 参数一, 整数型, , 
    .参数 参数二, 整数型, , 

.DLL命令 投送消息_, 整数型, "user32", "PostMessageA", , 
    .参数 窗口句柄, 整数型, , 
    .参数 信息值, 整数型, , 
    .参数 参数一, 整数型, , 
    .参数 参数二, 整数型, , 

.DLL命令 GetPixel, 整数型, "gdi32.dll", "GetPixel", , 
    .参数 hDC, 整数型, , 
    .参数 dwX, 整数型, , 
    .参数 dwY, 整数型, , 

.DLL命令 GetDC, 整数型, "user32.dll", "GetDC", , 
    .参数 hwnd, 整数型, , 

.DLL命令 ReleaseDC, 空白型, "user32.dll", "ReleaseDC", , 
    .参数 hwnd, 整数型, , 
    .参数 aa, 整数型, , 

.DLL命令 DLL命令1, 空白型, "", "", , 

.窗口程序集 窗口程序集1, , , 

.程序集变量 人物生命, 整数型, , , 
.程序集变量 内存值, 字节集, , , 
.程序集变量 进程id, 整数型, , , 
.程序集变量 人物地址, 整数型, , , 
.程序集变量 红地址, 整数型, , , 
.程序集变量 蓝地址, 整数型, , , 
.程序集变量 坐标X, 整数型, , , 
.程序集变量 经验地址, 整数型, , , 
.程序集变量 句柄, 整数型, , , 
.程序集变量 关联ID, 整数型, , , 
.程序集变量 获取文本, 文本型, , , 
.程序集变量 操作句柄, 整数型, , , 
.程序集变量 主窗口句柄, 整数型, , , 
.程序集变量 进程表, 未知类型0x30009, , "0", 
.程序集变量 聊天内容, 文本型, , , 
.程序集变量 聊天内容组, 文本型, , "0", 
.程序集变量 聊天变量, 整数型, , , 
.程序集变量 分类现行项, 整数型, , , 
.程序集变量 聊天计数, 整数型, , , 
.程序集变量 人特内, 文本型, , , 
.程序集变量 地图地址, 整数型, , , 
.程序集变量 城地址, 整数型, , , 
.程序集变量 历炼地址, 整数型, , , 
.程序集变量 金钱地址, 整数型, , , 
.程序集变量 键F1地址, 整数型, , , 
.程序集变量 蓝数量, 整数型, , , 
.程序集变量 红数量, 整数型, , , 
.程序集变量 红, 整数型, , , 
.程序集变量 红大, 整数型, , , 
.程序集变量 是否已检, 逻辑型, , , 
.程序集变量 蓝, 整数型, , , 
.程序集变量 蓝大, 整数型, , , 
.程序集变量 经, 整数型, , , 
.程序集变量 经大, 整数型, , , 
.程序集变量 标1, 整数型, , , 
.程序集变量 标2, 整数型, , , 
.程序集变量 点坐标, 整数型, , "2,30", 
.程序集变量 职业地址, 整数型, , , 
.程序集变量 职业名称, 文本型, , , 
.程序集变量 怪地址组, 整数型, , "0", 
.程序集变量 怪1地址组, 整数型, , "0", 
.程序集变量 怪2地址组, 整数型, , "0", 
.程序集变量 查找值, 文本型, , "6", 
.子程序 __启动窗口_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

弹出菜单 ()


.子程序 __启动窗口_创建完毕, 空白型, , 
.局部变量 总偏移, 文本型, , , 
.局部变量 名称, 文本型, , "0", 
.局部变量 b, 整数型, , , 

未知支持库函数_10 (_启动窗口.取窗口句柄 (), 取窗口句柄 (), 0, #Home键) ' 自动打怪
未知支持库函数_10 (_启动窗口.取窗口句柄 (), 取窗口句柄 (), 0, #End键)
未知支持库函数_10 (_启动窗口.取窗口句柄 (), 取窗口句柄 (), 0, #PageUp键) ' 显示隐藏窗口
未知支持库函数_10 (_启动窗口.取窗口句柄 (), 取窗口句柄 (), 0, #PageDown键)
赋值 (是否已检, 假)
赋值 (.现行子夹, 4)
.如果真 (等于 (_提升进程权限 (), 假))
    信息框 (“提升权限失败”, 0, )
    结束 ()
.如果真结束
未知支持库函数_0 (1)
赋值 (_启动窗口., 相减 (取屏幕宽度 (), _启动窗口.))
赋值 (_启动窗口., 180)
赋值 (_启动窗口., 真)
.如果 (相加 (取运行目录 (), “\jianghu.mdb”).未知支持库函数_1 (“&e%§№ ◎▲すぬйω”))
    #.未知支持库函数_6 ()
    .未知支持库函数_12 ()
.否则
    鸣叫 ()
    信息框 (“打开数据库失败！”, 0, )
.如果结束

.如果 (等于 (“配置”.未知支持库函数_14 (#), 真))
    .如果真 (“项目='偏量'”.未知支持库函数_45 (#))
        “地址”.未知支持库函数_26 (总偏移) ' 54-96-100-108-112-120-128-140-192 这是数据库中的偏移量
        赋值 (名称, 分割文本 (总偏移, “-”, ))
        .如果真 (等于 (取数组成员数 (名称), 10))
            赋值 (.内容, 名称 [1])
            赋值 (.内容, 名称 [2])
            赋值 (.内容, 名称 [3])
            赋值 (.内容, 名称 [6])
            赋值 (.内容, 名称 [8])
            赋值 (.内容, 名称 [9])
            赋值 (.内容, 名称 [10])
        .如果真结束
        
    .如果真结束
    .如果真 (“项目='人特'”.未知支持库函数_45 (#))
        “地址”.未知支持库函数_26 (人特内) ' 21965920 这是人物名字地址，
    .如果真结束
    未知支持库函数_16 ()
.否则
    赋值 (.标题, “读取偏移量失败”)
.如果结束

赋值 (进程表, 未知支持库函数_10 ())
.计次循环首 (取数组成员数 (进程表), b)
    相加 (进程表 [b], , “[”, 到文本 (进程表 [b], ), “]”).加入项目 ()
.计次循环尾 ()
载入 (小化窗口, , 假)
赋值 (小化窗口., 假)


.子程序 _热标_反馈事件, 整数型, , 
.参数 参数一, 整数型, , 
.参数 参数二, 整数型, , 

.如果真 (等于 (参数一, 33001)) ' 热键在江湖中没有用
    
.如果真结束
.如果真 (等于 (参数一, 33002))
    
.如果真结束
.如果真 (等于 (参数一, 33003))
    .如果 (等于 (_启动窗口., 真))
        赋值 (_启动窗口., 假)
        赋值 (小化窗口., 真)
    .否则
        赋值 (_启动窗口., 真)
        赋值 (小化窗口., 假)
    .如果结束
    
.如果真结束
.如果真 (等于 (参数一, 33004))
    
.如果真结束


.子程序 _进程组合框1_列表项被选择, 空白型, , 
.局部变量 I, 整数型, , , 
.局部变量 b, rect, , , 
.局部变量 新高1, 整数型, , , 
.局部变量 当选进程, 文本型, , "2", 

赋值 (.标题, “”)
.如果真 (不等于 (操作句柄, 0))
    CloseHandle (操作句柄)
.如果真结束
赋值 (当选进程, 分割文本 (.取项目文本 (.现行选中项), “[”, ))
.计次循环首 (取数组成员数 (进程表), I)
    .如果真 (并且 (等于 (进程表 [I], , 当选进程 [1]), 等于 (到文本 (进程表 [I], ), 取文本左边 (当选进程 [2], 相减 (取文本长度 (当选进程 [2]), 1)))))
        赋值 (进程id, 进程表 [I], )
        赋值 (操作句柄, OpenProcess (相加 (#PROCESS_VM_READ, #PROCESS_QUERY_INFORMATION), 0, 进程id))
        .如果真 (等于 (操作句柄, 0))
            信息框 (“不能打开进程 .”, #信息图标, “提示”)
            返回 ()
        .如果真结束
        
    .如果真结束
    
.计次循环尾 ()
.如果 (枚举窗口 (&枚举窗口过程, 1))
    赋值 (.标题, “此进程没有窗口”)
.否则
    .如果 (不等于 (.取项目文本 (.现行选中项), “”))
        赋值 (.时钟周期, 0)
        赋值 (.时钟周期, 0)
        赋值 (.标题, “0/0”)
        赋值 (.标题, “0/0”)
        赋值 (.标题, “0/0”)
        赋值 (.标题, “0/0”)
        赋值 (.标题, “0”)
        赋值 (.标题, “0”)
        .如果真 (搜索人物 ())
            读取配置 ()
            赋值 (.现行子夹, 4) ' 启动后到找坐标窗口
        .如果真结束
        
    .否则
        信息框 (相加 (“游戏没有运行啊！！！！！！！！”, #换行符, “请选择进程！”, #换行符, “哈哈哈！！嘿嘿！！”), 相加 (0, 48), “傻了”)
        
    .如果结束
    
.如果结束


.子程序 搜索人物, 逻辑型, , 
.局部变量 地址, 整数型, , "0", 

清除数组 (地址)
.如果 (不等于 (人特内, “”))
    赋值 (人物地址, 到数值 (人特内))
    赋值 (内存值, 取空白字节集 (20))
    .如果真 (等于 (字节集_ReadProcessMemory (操作句柄, 人物地址, 内存值, 20, 0), 0))
        信息框 (“读取内存失败！”, 0, )
        返回 (假)
    .如果真结束
    到文本 (内存值).加入项目 (0)
    赋值 (.现行选中项, 相减 (取项目数 (), 1))
    
    赋值 (.标题, 相加 (“[”, 到文本 (内存值), “]”))
    赋值 (内存值, 取空白字节集 (10))
    赋值 (职业地址, 相加 (人物地址, 到数值 (.内容)))
    .如果真 (等于 (字节集_ReadProcessMemory (操作句柄, 职业地址, 内存值, 10, 0), 0))
        信息框 (“读取内存失败！”, 0, )
        返回 (假)
    .如果真结束
    赋值 (职业名称, 到文本 (内存值))
    赋值 (.标题, 相加 (.标题, “[”, 职业名称, “]”))
    赋值 (红地址, 相加 (人物地址, 到数值 (.内容))) ' 60
    赋值 (蓝地址, 相加 (人物地址, 到数值 (.内容))) ' 2202
     ' 坐标X ＝ 人物地址 ＋ 到数值 (坐标偏编辑框5.内容)  ' 40
    赋值 (经验地址, 相加 (人物地址, 到数值 (.内容))) ' 2250
    赋值 (历炼地址, 相加 (人物地址, 到数值 (.内容)))
    赋值 (金钱地址, 相加 (人物地址, 到数值 (.内容)))
    赋值 (键F1地址, 相加 (人物地址, 到数值 (.内容)))
    赋值 (.时钟周期, 300)
    赋值 (.时钟周期, 1000)
    返回 (真)
.否则
    返回 (假)
.如果结束


.子程序 枚举窗口过程, 逻辑型, , 
.参数 窗口句柄, 整数型, , 
.参数 参数, 整数型, , 

.局部变量 进程标识2, 整数型, , , 
.局部变量 id, 整数型, , , 

赋值 (获取文本, 取空白文本 (255))
找标题 (窗口句柄, 13, 256, 获取文本)
赋值 (id, 查找窗口 (0, 获取文本))
取进程ID (id, 进程标识2)
.如果 (等于 (进程id, 进程标识2))
    .如果 (等于 (找上级窗口 (窗口句柄), 0))
        赋值 (主窗口句柄, 窗口句柄)
        赋值 (.标题, 获取文本)
        返回 (假)
    .否则
        返回 (真)
    .如果结束
    
.否则
    返回 (真)
.如果结束


.子程序 读取配置, 空白型, , 
.局部变量 BZ, 文本型, , , 
.局部变量 人配, 文本型, , "0", 

.如果真 (“配置”.未知支持库函数_14 (#))
    .如果真 (相加 (“项目='”, .取项目文本 (.现行选中项), “'”).未知支持库函数_45 (#))
        “地址”.未知支持库函数_26 (BZ)
        赋值 (人配, 分割文本 (BZ, “-”, ))
        .如果真 (等于 (取数组成员数 (人配), 16))
             ' 魔法1编辑框.内容 ＝ 人配 [1]
             ' 魔法1组合框.现行选中项 ＝ 到数值 (人配 [2])
             ' 魔法2编辑框.内容 ＝ 人配 [3]
             ' 魔法2组合框.现行选中项 ＝ 到数值 (人配 [4])
             ' 魔法3编辑框.内容 ＝ 人配 [5]
             ' 魔法3组合框.现行选中项 ＝ 到数值 (人配 [6])
             ' 魔法4编辑框.内容 ＝ 人配 [7]
             ' 魔法4组合框.现行选中项 ＝ 到数值 (人配 [8])
            赋值 (.内容, 人配 [9])
            赋值 (.现行选中项, 到数值 (人配 [10]))
             ' 加血2编辑框.内容 ＝ 人配 [11]
             ' 加血2组合框.现行选中项 ＝ 到数值 (人配 [12])
            赋值 (.内容, 人配 [13])
            赋值 (.现行选中项, 到数值 (人配 [14]))
             ' 医生技能时间编辑框.内容 ＝ 人配 [15]
             ' 医生组合框1.现行选中项 ＝ 到数值 (人配 [16])
            
        .如果真结束
        未知支持库函数_16 ()
    .如果真结束
    
.如果真结束


.子程序 _进程刷新按钮1_被单击, 空白型, , 
.局部变量 b, 整数型, , , 

清空 ()
赋值 (进程表, 未知支持库函数_10 ())
.计次循环首 (取数组成员数 (进程表), b)
    相加 (进程表 [b], , “[”, 到文本 (进程表 [b], ), “]”).加入项目 ()
.计次循环尾 ()



.子程序 _时钟1_周期事件, 空白型, , 读红蓝时钟
.局部变量 历炼, 整数型, , , 
.局部变量 金钱, 整数型, , , 
.局部变量 国家城, 文本型, , , 
.局部变量 国家字, 字节集, , , 
.局部变量 匿名局部变量_597, 空白型, , , 
.局部变量 XXXXXX, 整数型, , , 

整数_ReadProcessMemory (操作句柄, 红地址, 红, 4, 0)
整数_ReadProcessMemory (操作句柄, 相加 (红地址, 12), 红大, 4, 0)
整数_ReadProcessMemory (操作句柄, 蓝地址, 蓝, 4, 0)
整数_ReadProcessMemory (操作句柄, 相加 (蓝地址, 12), 蓝大, 4, 0)
整数_ReadProcessMemory (操作句柄, 经验地址, 经, 4, 0)
整数_ReadProcessMemory (操作句柄, 相加 (经验地址, 8), 经大, 4, 0)
整数_ReadProcessMemory (操作句柄, 历炼地址, 历炼, 4, 0)
整数_ReadProcessMemory (操作句柄, 金钱地址, 金钱, 4, 0)
.如果真 (大于 (坐标X, 0))
    整数_ReadProcessMemory (操作句柄, 坐标X, 标1, 4, 0)
    整数_ReadProcessMemory (操作句柄, 相加 (坐标X, 4), 标2, 4, 0)
    赋值 (.标题, 相加 (到文本 (标1), “/”, 到文本 (相减 (0, 标2))))
     ' 整数_ReadProcessMemory (操作句柄, 坐标X, 取变量地址 (XXXXXX), 4, 0)
     ' 提示标签5.标题 ＝ “坐标变量地址” ＋ 到文本 (XXXXXX)
.如果真结束

赋值 (.标题, 相加 (到文本 (红), “/”, 到文本 (红大)))
赋值 (.标题, 相加 (到文本 (蓝), “/”, 到文本 (蓝大)))
赋值 (.标题, 相加 (到文本 (经), “/”, 到文本 (经大)))
赋值 (.标题, 到文本 (历炼))
赋值 (.标题, 到文本 (金钱))
.如果真 (并且 (是否已创建 (小化窗口), 等于 (小化窗口., 真)))
    赋值 (小化窗口..标题, 相加 (“生命==”, 到文本 (红), “/”, 到文本 (红大), “|蓝==”, 到文本 (蓝), “/”, 到文本 (蓝大), “|经验==”, 到文本 (经), “/”, 到文本 (经大), “[”, 到文本 (四舍五入 (相乘 (相除 (经, 经大), 100), 2)), “%]|历炼===”, 到文本 (历炼), “|钱===”, 到文本 (金钱), “|坐标===”, 到文本 (标1), “/”, 到文本 (相减 (0, 标2))))
.如果真结束

 ' .如果真 (并且 (等于 (.选中, 真), 小于 (红, 到数值 (.内容)), 大于 (红, 1)))
     ' 发送 (加血2组合框.取项目数值 (加血2组合框.现行选中项))
    
.如果真结束
.如果真 (并且 (等于 (.选中, 真), 小于 (红, 相乘 (红大, 0.01, 到数值 (.内容))), 大于 (红, 1)))
    发送 (.取项目数值 (.现行选中项))
    
.如果真结束
.如果真 (并且 (等于 (.选中, 真), 小于 (蓝, 到数值 (.内容)), 大于 (红, 1)))
    发送 (.取项目数值 (.现行选中项))
    
.如果真结束


.子程序 _时钟2_周期事件, 空白型, , 补红补蓝  
.局部变量 m1, 整数型, 静态, , 
.局部变量 m2, 整数型, 静态, , 
.局部变量 m3, 整数型, 静态, , 
.局部变量 m4, 整数型, 静态, , 

.如果真 (等于 (.选中, 真))
    赋值 (m1, 相加 (m1, 1))
    赋值 (.标题, 到文本 (m1))
    .如果真 (大于或等于 (m1, 到数值 (.内容)))
        发送2 (.取项目数值 (.现行选中项))
        赋值 (m1, 0)
    .如果真结束
    
.如果真结束
.如果真 (等于 (.选中, 真))
    赋值 (m2, 相加 (m2, 1))
    赋值 (.标题, 到文本 (m2))
    .如果真 (大于或等于 (m2, 到数值 (.内容)))
        发送2 (.取项目数值 (.现行选中项))
        赋值 (m2, 0)
    .如果真结束
    
.如果真结束
 ' .如果真 (等于 (.选中, 真))
     ' m3 ＝ m3 ＋ 1
     ' 魔法3标签.标题 ＝ 到文本 (m3)
     ' .如果真 (大于或等于 (m3, 到数值 (.内容)))
         ' .如果 (等于 (.选中, 真))
             ' 发送2 (魔法3组合框.取项目数值 (魔法3组合框.现行选中项))
        .否则
             ' 发送 (魔法3组合框.取项目数值 (魔法3组合框.现行选中项))
        .如果结束
         ' m3 ＝ 0
    .如果真结束
    
.如果真结束
 ' .如果真 (等于 (.选中, 真))
     ' m4 ＝ m4 ＋ 1
     ' 魔法4标签.标题 ＝ 到文本 (m4)
     ' .如果真 (大于或等于 (m4, 到数值 (.内容)))
         ' .如果 (等于 (.选中, 真))
             ' 发送2 (魔法4组合框.取项目数值 (魔法4组合框.现行选中项))
        .否则
             ' 发送 (魔法4组合框.取项目数值 (魔法4组合框.现行选中项))
        .如果结束
         ' m4 ＝ 0
    .如果真结束
    
.如果真结束


.子程序 _时钟3_周期事件, 空白型, , QY专用技能
.局部变量 消息, 整数型, , , 

赋值 (消息, .取项目数值 (.现行选中项))
按键 (消息, 取扫描码 (消息, 0), 0, 0)
延时 (50)
按键 (消息, 取扫描码 (消息, 0), 2, 0)
延时 (50)


.子程序 _搜索按钮2_被单击, 空白型, , 
.局部变量 坐标11, 字节集, , , 
.局部变量 坐标22, 整数型, , , 
.局部变量 地址组, 整数型, , "0", 
.局部变量 I, 整数型, , , 
.局部变量 坐标10, 整数型, , , 

赋值 (.禁止, 真)
赋值 (.内容, “”)
赋值 (坐标X, 0)
清除数组 (地址组)
.如果 (不等于 (.内容, “”))
    
.否则
    .如果 (并且 (不等于 (到数值 (.内容), 0), 不等于 (到数值 (.内容), 0)))
        赋值 (坐标10, 到数值 (.内容))
        赋值 (坐标11, 到字节集 (坐标10))
        .如果 (搜索坐标 (进程id, 坐标11, 地址组))
            .计次循环首 (取数组成员数 (地址组), I)
                相加 (到文本 (地址组 [I]), #换行符).加入文本 ()
                整数_ReadProcessMemory (操作句柄, 相加 (地址组 [I], 4), 坐标22, 4, 0)
                
                .如果真 (等于 (坐标22, 相减 (0, 到数值 (.内容))))
                    赋值 (坐标X, 地址组 [I])
                    赋值 (.标题, 相加 (.标题, “坐标地址=”, 到文本 (地址组 [I])))
                    .判断开始 (或者 (等于 (职业名称, “医师”), 等于 (职业名称, “巫医”)))
                        赋值 (.禁止, 假)
                        赋值 (.现行子夹, 0)
                    .判断 (或者 (等于 (职业名称, “刀杰”), 等于 (职业名称, “刀杰”)))
                        赋值 (.禁止, 假)
                        赋值 (.现行子夹, 1)
                    .默认
                        
                        
                        
                        
                        
                        
                        
                        
                    .判断结束
                    跳出循环 ()
                .如果真结束
                
            .计次循环尾 ()
            
        .否则
            赋值 (.标题, “查找坐标失败”)
            赋值 (.禁止, 假)
        .如果结束
        
    .否则
        赋值 (.标题, “请输入当疥坐标”)
        赋值 (.禁止, 假)
    .如果结束
    
    
    
.如果结束
赋值 (.禁止, 假)


.子程序 _医生技能按钮1_被单击, 空白型, , 
.局部变量 消息, 整数型, , , 

.如果真 (等于 (.时钟周期, 0))
    返回 ()
.如果真结束
前台窗口 (主窗口句柄)
延时 (200)
_时钟3_周期事件 ()
.如果 (等于 (.标题, “医生技能关”))
    赋值 (.标题, “医生技能开”)
    赋值 (.时钟周期, 0)
.否则
    赋值 (.标题, “医生技能关”)
    赋值 (.时钟周期, 到数值 (.内容))
.如果结束



.子程序 _怪攻击选择框2_被单击, 空白型, , 
.如果真 (等于 (.时钟周期, 0))
    赋值 (.选中, 假)
    返回 ()
.如果真结束
.如果 (或者 (等于 (.选中, 真), 等于 (.选中, 真)))
    赋值 (.时钟周期, 5000)
    赋值 (.时钟周期, 10000)
.否则
    赋值 (.时钟周期, 0)
    赋值 (.时钟周期, 0)
.如果结束


.子程序 _蓝少于选择框1_被单击, 空白型, , 
.如果真 (等于 (.时钟周期, 0))
    赋值 (.选中, 假)
    返回 ()
.如果真结束
.如果 (或者 (等于 (.选中, 真), 等于 (.选中, 真)))
    赋值 (.时钟周期, 5000)
    赋值 (.时钟周期, 10000)
.否则
    赋值 (.时钟周期, 0)
    赋值 (.时钟周期, 0)
.如果结束


.子程序 _时钟4_周期事件, 空白型, , 无蓝怪攻喊话
.局部变量 喊话文本, 文本型, , , 
.局部变量 经验检查1, 整数型, 静态, , 
.局部变量 统计次数, 整数型, 静态, , 

.如果真 (或者 (等于 (.时钟周期, 0), 等于 (.时钟周期, 0)))
    返回 ()
.如果真结束
整数_ReadProcessMemory (操作句柄, 相加 (键F1地址, 8), 蓝数量, 2, 0)
输出调试文本 (蓝数量)
.如果真 (等于 (蓝数量, 0)) ' 没有蓝停止工作并回城'''''''
    赋值 (喊话文本, “都是小气鬼,给个蓝都不愿意,8888886”)
    江湖输出文本 (主窗口句柄, 喊话文本)
    停止工作回城 ()
.如果真结束
.如果真 (并且 (等于 (是否已检, 真), 大于 (蓝数量, 到数值 (.内容)))) ' 如果蓝有了就继续
    赋值 (喊话文本, 相加 (“蓝现在已有”, 到文本 (蓝数量), “个了,可以继续开打,谢谢给蓝的朋友”, 到文本 (取随机数 (1, 10))))
    赋值 (是否已检, 假)
    江湖输出文本 (主窗口句柄, 喊话文本)
.如果真结束
.如果真 (并且 (等于 (.选中, 真), 小于 (蓝数量, 到数值 (.内容)))) ' 蓝少于指定数量喊话检
    赋值 (是否已检, 真)
    赋值 (喊话文本, 相加 (“蓝只有”, 到文本 (蓝数量), “个了,如要继续请把蓝扔在我身边地上,会检”, 到文本 (取随机数 (1, 10))))
    江湖输出文本 (主窗口句柄, 喊话文本)
    .计次循环首 (3, )
        延时 (50)
        按键 (#F9键, 取扫描码 (#F9键, 0), 0, 0)
        延时 (50)
        按键 (#F9键, 取扫描码 (#F9键, 0), 2, 0)
        延时 (100)
    .计次循环尾 ()
.如果真结束
.如果真 (并且 (等于 (.选中, 真), 小于 (红, 红大))) ' 如果生命不等于最大生命
    赋值 (喊话文本, 相加 (“有怪在攻击我啊,请求支授,!!!!!!!!!!!”, 到文本 (取随机数 (1, 10))))
    江湖输出文本 (主窗口句柄, 喊话文本)
.如果真结束
.如果 (不等于 (经验检查1, 经)) ' 判断是不是有经验或是不是挂了
    .如果真 (并且 (小于 (经, 经验检查1), 大于 (相除 (红, 经验检查1), 20)))
        赋值 (喊话文本, “晕,都不救我,我挂了,886”)
        江湖输出文本 (主窗口句柄, 喊话文本)
        赋值 (.标题, “医生技能开”)
        赋值 (.选中, 假)
        赋值 (.选中, 假)
        赋值 (.时钟周期, 0)
        赋值 (.时钟周期, 0)
    .如果真结束
    赋值 (经验检查1, 经)
    赋值 (统计次数, 0)
.否则
    赋值 (统计次数, 相加 (统计次数, 1))
    .如果真 (等于 (统计次数, 12))
        赋值 (喊话文本, “兄弟们加油啊,不要停,再3分钟没经验升就停Q了啊”)
        江湖输出文本 (主窗口句柄, 喊话文本)
    .如果真结束
    .如果真 (大于或等于 (统计次数, 30))
        赋值 (喊话文本, “没人打了,那就回去了,8888888888888”)
        江湖输出文本 (主窗口句柄, 喊话文本)
        停止工作回城 ()
        赋值 (统计次数, 0)
    .如果真结束
    
.如果结束



.子程序 停止工作回城, 空白型, , 
赋值 (.标题, “医生技能开”)
赋值 (.时钟周期, 0)
赋值 (.时钟周期, 0)
赋值 (.选中, 假)
赋值 (.选中, 假)
延时 (50)
按键 (#F10键, 取扫描码 (#F10键, 0), 0, 0)
延时 (50)
按键 (#F10键, 取扫描码 (#F10键, 0), 2, 0)
延时 (100)


.子程序 _没红蓝选择框1_被单击, 空白型, , 
 ' 消息=#F10键
 ' 按键 (消息, 取扫描码 (消息, 0), 0, 0)
 ' 延时 (50)
 ' 按键 (消息, 取扫描码 (消息, 0), 2, 0)
 ' 延时 (50)


.子程序 _关闭按钮3_被单击, 空白型, , 
结束 ()


.子程序 _小化按钮2_被单击, 空白型, , 
赋值 (_启动窗口., 假)
赋值 (小化窗口., 真)


.子程序 __启动窗口_将被销毁, 空白型, , 
未知支持库函数_16 ()
未知支持库函数_3 ()


.子程序 _找怪按钮_被单击, 空白型, , 
赋值 (.现行子夹, 5)


.子程序 _搜索怪按钮_被单击, 空白型, , 
.局部变量 查找字1, 字节集, , , 
.局部变量 查找字2, 字节集, , , 
.局部变量 I, 整数型, , , 
.局部变量 X, 整数型, , , 
.局部变量 Y, 整数型, , , 
.局部变量 XX, 整数型, , , 
.局部变量 选中地址, 整数型, , , 
.局部变量 是否选中, 整数型, , , 
.局部变量 怪血量, 整数型, , , 
.局部变量 怪血地址, 整数型, , , 
.局部变量 R, 整数型, , , 
.局部变量 X1, 整数型, , , 
.局部变量 Y1, 整数型, , , 
.局部变量 I2, 整数型, , , 
.局部变量 怪距离地址, 整数型, , , 
.局部变量 怪距离, 小数型, , , 
.局部变量 范围半径, 整数型, , , 
.局部变量 打怪中点坐标X, 整数型, , , 
.局部变量 打怪中点坐标Y, 整数型, , , 
.局部变量 当前半径, 整数型, , , 
.局部变量 上次半径, 整数型, , , 
.局部变量 次数, 整数型, , , 
.局部变量 中点Y, 整数型, , , 
.局部变量 定点半径, 整数型, , , 
.局部变量 SIN角1, 双精度小数型, , , 
.局部变量 对边长, 整数型, , , 
.局部变量 小角对边长, 整数型, , , 
.局部变量 小R, 整数型, , , 
.局部变量 CON角1, 双精度小数型, , , 
.局部变量 小角另边长, 整数型, , , 
.局部变量 X加, 整数型, , , 
.局部变量 中点X, 整数型, , , 
.局部变量 X减, 整数型, , , 
.局部变量 Y加, 整数型, , , 
.局部变量 Y减, 整数型, , , 
.局部变量 X结, 整数型, , , 
.局部变量 Y结, 整数型, , , 

.如果 (等于 (.标题, “开”)) ' 选择好地方，选好是那二种怪，点一下这个按键就能乱点打怪
    赋值 (.标题, “关”)
.否则
    赋值 (.标题, “开”)
    返回 ()
.如果结束
赋值 (小R, 100)
刷新显示 ()
赋值 (.内容, “”)
清除数组 (怪地址组)
清除数组 (怪1地址组)
清除数组 (怪2地址组)
清除数组 (查找值)
.如果真 (等于 (.取项目文本 (.现行选中项), “”))
    返回 ()
.如果真结束
赋值 (查找值, 分割文本 (.取项目文本 (.现行选中项), “,”, ))
赋值 (范围半径, 到数值 (.内容))
赋值 (打怪中点坐标X, 标1)
赋值 (打怪中点坐标Y, 相减 (0, 标2))
赋值 (查找字1, 相加 (到字节集 (查找值 [1]), { 0, 0 }))
赋值 (查找字2, 相加 (到字节集 (查找值 [2]), { 0, 0 }))
.如果真 (搜索内存 (进程id, 查找字1, 怪1地址组))
    .如果真 (大于 (取数组成员数 (怪1地址组), 0))
        .如果真 (搜索内存 (进程id, 查找字2, 怪2地址组))
            .如果真 (大于 (取数组成员数 (怪2地址组), 0))
                .计次循环首 (取数组成员数 (怪1地址组), I)
                    .如果真 (大于 (怪1地址组 [I], 40841216))
                        加入成员 (怪地址组, 怪1地址组 [I])
                    .如果真结束
                    
                .计次循环尾 ()
                .计次循环首 (取数组成员数 (怪2地址组), I)
                    .如果真 (大于 (怪2地址组 [I], 40841216))
                        加入成员 (怪地址组, 怪2地址组 [I])
                    .如果真结束
                    
                .计次循环尾 ()
                赋值 (.标题, 到文本 (取数组成员数 (怪地址组)))
                 ' 启动线程 (&_时钟5_周期事件, )
                 ' 时钟5.时钟周期 ＝ 500
                赋值 (XX, 1)
                .循环判断首 ()
                    未知支持库函数_2 (相加 (相减 (X, X1), 510), 相加 (相减 (Y, Y1), 400), #.)
                    赋值 (X1, 0)
                    赋值 (Y1, 0)
                    处理事件 ()
                    延时 (相加 (500, 相乘 (XX, 1)))
                    .如果真 (或者 (等于 (次数, 1), 等于 (次数, 2)))
                        赋值 (次数, 相加 (次数, 1))
                        到循环尾 ()
                    .如果真结束
                    .如果真 (等于 (次数, 3))
                        赋值 (次数, 0)
                        赋值 (上次半径, 0)
                    .如果真结束
                     ' 园周点鼠标 (X ＋ 510, Y ＋ 320)
                    .计次循环首 (取数组成员数 (怪地址组), I2)
                        .如果真 (等于 (.标题, “开”))
                            跳出循环 ()
                        .如果真结束
                        处理事件 ()
                        赋值 (选中地址, 相减 (怪地址组 [I2], 12))
                        整数_ReadProcessMemory (操作句柄, 选中地址, 是否选中, 4, 0)
                        赋值 (怪血地址, 相加 (怪地址组 [I2], 104))
                        整数_ReadProcessMemory (操作句柄, 怪血地址, 怪血量, 4, 0)
                        .如果真 (并且 (等于 (是否选中, 1), 大于 (怪血量, 0), 小于 (怪血量, 5000)))
                            .循环判断首 ()
                                处理事件 ()
                                发送 (#F5键)
                                延时 (100)
                                赋值 (怪血地址, 相加 (怪地址组 [I2], 104))
                                整数_ReadProcessMemory (操作句柄, 怪血地址, 怪血量, 4, 0)
                                赋值 (怪距离地址, 相减 (怪地址组 [I2], 4))
                                单精度数_ReadProcessMemory (操作句柄, 怪距离地址, 取变量地址 (怪距离), 4, 0)
                                赋值 (.内容, 相加 (“怪血量=”, 到文本 (怪血量), “怪距离=”, 到文本 (怪距离), #换行符, “地址=”, 到文本 (怪地址组 [I2]), “数组号=”, 到文本 (I2)))
                            .循环判断尾 (并且 (大于 (怪血量, 0), 小于 (取整 (怪距离), 100), 大于 (取整 (怪距离), 0)))
                            延时 (1000)
                            发送 (#F9键)
                            延时 (100)
                            发送 (#F9键)
                            赋值 (XX, 1)
                            赋值 (X1, 0)
                            赋值 (Y1, 0)
                            跳出循环 ()
                        .如果真结束
                        
                    .计次循环尾 ()
                    赋值 (当前半径, 取整 (求平方根 (相加 (求次方 (相减 (标1, 打怪中点坐标X), 2), 求次方 (相减 (标2, 打怪中点坐标Y), 2)))))
                    赋值 (.标题, 相加 (“上次半径=”, 到文本 (上次半径), “当前半径”, 到文本 (当前半径), “-”, 到文本 (X), “-”, 到文本 (Y)))
                    
                    .如果真 (大于 (当前半径, 范围半径))
                        '此处没好办法，有高手一起来研究！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！
                         ' 中点X ＝ 标1
                         ' 中点Y ＝ 0 － 标2
                         ' 对边长 ＝ 取绝对值 (中点Y － 打怪中点坐标Y)
                         ' 定点半径 ＝ 当前半径
                         ' SIN角1 ＝ 对边长 ÷ 定点半径
                         ' 小角对边长 ＝ SIN角1 × 小R
                         ' CON角1 ＝ 求平方根 (1 － 求次方 (SIN角1, 2))
                         ' 小角另边长 ＝ CON角1 × 小R
                         ' X加 ＝ 中点X ＋ 小角另边长
                         ' X减 ＝ 中点X － 小角另边长
                         ' Y加 ＝ 中点Y ＋ 小角对边长
                         ' Y减 ＝ 中点Y － 小角对边长
                         ' .判断开始 (并且 (小于或等于 (X加, 打怪中点坐标X), 大于或等于 (X加, 中点X), 小于或等于 (Y加, 打怪中点坐标Y), 大于或等于 (Y加, 中点Y)))
                             ' X结 ＝ X加
                             ' Y结 ＝ Y加
                         ' .判断 (并且 (大于或等于 (X减, 打怪中点坐标X), 小于或等于 (X减, 中点X), 小于或等于 (Y加, 打怪中点坐标Y), 大于或等于 (Y加, 中点Y)))
                             ' X结 ＝ X减
                             ' Y结 ＝ Y加
                         ' .判断 (并且 (小于或等于 (X加, 打怪中点坐标X), 大于或等于 (X加, 中点X), 大于或等于 (Y减, 打怪中点坐标Y), 小于或等于 (Y减, 中点Y)))
                             ' X结 ＝ X加
                             ' Y结 ＝ Y减
                         ' .判断 (并且 (大于或等于 (X减, 打怪中点坐标X), 小于或等于 (X减, 中点X), 大于或等于 (Y减, 打怪中点坐标Y), 小于或等于 (Y减, 中点Y)))
                             ' X结 ＝ X减
                             ' Y结 ＝ Y减
                        .默认
                            
                        .判断结束
                         ' X ＝ X结 － 中点X
                         ' Y ＝ Y结 － 中点Y
                         ' X1 ＝ 0
                         ' Y1 ＝ 0
                         ' 到循环尾 ()
                    .如果真结束
                    .如果真 (大于 (XX, 相乘 (11, 25)))
                        赋值 (XX, 1)
                        赋值 (X1, 0)
                        赋值 (Y1, 0)
                        延时 (5000)
                    .如果真结束
                    赋值 (R, 相乘 (40, 相加 (1, 相乘 (XX, 0.004))))
                    赋值 (X, 相乘 (R, 求余弦 (相乘 (XX, 160))))
                    赋值 (Y, 相乘 (R, 求正弦 (相乘 (XX, 160))))
                    
                     ' R ＝ 10 × (1 ＋ XX × 0.4)
                     ' X ＝ R × 求余弦 (XX × 360)
                     ' Y ＝ R × 求正弦 (XX × 360)
                    赋值 (XX, 相加 (XX, 11))
                .循环判断尾 (等于 (.标题, “关”))
                
            .如果真结束
            
        .如果真结束
        
    .如果真结束
    
.如果真结束
赋值 (.标题, “开”)

.程序集 过程程序集, , , 

.子程序 读内存_字节集, 字节集, , 
.参数 内_句柄, 整数型, , 
.参数 内_地址, 整数型, , 
.参数 内_长度, 整数型, , 

.局部变量 内存值, 字节集, , , 

.如果真 (或者 (等于 (内_句柄, 0), 等于 (内_地址, 0), 等于 (内_长度, 0)))
    返回 ({  })
.如果真结束
赋值 (内存值, 取空白字节集 (内_长度))
.如果 (不等于 (字节集_ReadProcessMemory (内_句柄, 内_地址, 内存值, 内_长度, 0), 0))
    返回 (内存值)
.否则
    返回 ({  })
.如果结束



.子程序 搜索内存, 逻辑型, , 
.参数 内进程ID, 整数型, , 
.参数 内搜索值, 字节集, , 
.参数 搜索结果, 整数型, 数组, 

.局部变量 内操作句柄, 整数型, , , 
.局部变量 内存块长度, 整数型, , , 
.局部变量 内存地址, 整数型, , , 
.局部变量 内存块信息, MEMORY_BASIC_INFORMATION, , , 
.局部变量 读取结果, 整数型, , , 
.局部变量 数据缓冲区, 字节集, , , 
.局部变量 开始地址, 整数型, , , 
.局部变量 其他地址, 整数型, , , 
.局部变量 首字节, 字节集, , , 
.局部变量 长度, 整数型, , , 

.如果真 (小于或等于 (取字节集长度 (内搜索值), 1))
    返回 (假)
.如果真结束

清除数组 (搜索结果)
赋值 (首字节, 取字节集左边 (内搜索值, 1))
赋值 (长度, 取字节集长度 (内搜索值))
赋值 (内操作句柄, OpenProcess (相加 (#PROCESS_VM_READ, #PROCESS_QUERY_INFORMATION), 0, 内进程ID))
.如果真 (等于 (内操作句柄, 0))
    返回 (假)
.如果真结束
赋值 (内存块长度, 28)
.判断循环首 (不等于 (VirtualQueryEx (内操作句柄, 内存地址, 内存块信息, 内存块长度), 0))
    .如果真 (并且 (等于 (内存块信息.Type, #MEM_PRIVATE), 等于 (内存块信息.Protect, #PAGE_READWRITE)))
        赋值 (数据缓冲区, 取空白字节集 (内存块信息.RegionSize))
        赋值 (读取结果, 字节集_ReadProcessMemory (内操作句柄, 内存地址, 数据缓冲区, 内存块信息.RegionSize, 0))
        .如果 (不等于 (读取结果, 0))
            赋值 (开始地址, 寻找字节集 (数据缓冲区, 内搜索值, )) ' 查找是否有要搜索的数据
            .如果 (不等于 (开始地址, -1))
                加入成员 (搜索结果, 到数值 (相减 (相加 (内存地址, 开始地址), 1)))
            .否则
                
            .如果结束
            .判断循环首 (不等于 (-1, 寻找字节集 (数据缓冲区, 内搜索值, 相加 (开始地址, 长度))))
                赋值 (其他地址, 寻找字节集 (数据缓冲区, 内搜索值, 相加 (开始地址, 长度)))
                加入成员 (搜索结果, 到数值 (相减 (相加 (内存地址, 其他地址), 1)))
                赋值 (开始地址, 其他地址)
            .判断循环尾 ()
        .否则
            
        .如果结束
        
    .如果真结束
    赋值 (内存地址, 相加 (内存地址, 内存块信息.RegionSize))
.判断循环尾 ()
CloseHandle (内操作句柄)
返回 (真)

.子程序 搜索坐标, 逻辑型, , 
.参数 内进程ID, 整数型, , 
.参数 内搜索值1, 字节集, , 
.参数 搜索坐标结果, 整数型, 数组, 

.局部变量 内操作句柄, 整数型, , , 
.局部变量 内存块长度, 整数型, , , 
.局部变量 内存地址, 整数型, , , 
.局部变量 内存块信息, MEMORY_BASIC_INFORMATION, , , 
.局部变量 读取结果, 整数型, , , 
.局部变量 数据缓冲区, 字节集, , , 
.局部变量 开始地址, 整数型, , , 
.局部变量 其他地址, 整数型, , , 
.局部变量 首字节, 字节集, , , 
.局部变量 长度, 整数型, , , 
.局部变量 I, 整数型, , , 
.局部变量 内标2, 整数型, , , 

.如果真 (小于或等于 (取字节集长度 (内搜索值1), 1))
    返回 (假)
.如果真结束

清除数组 (搜索坐标结果)
赋值 (首字节, 取字节集左边 (内搜索值1, 1))
赋值 (长度, 取字节集长度 (内搜索值1))
赋值 (内操作句柄, OpenProcess (相加 (#PROCESS_VM_READ, #PROCESS_QUERY_INFORMATION), 0, 内进程ID))
.如果真 (等于 (内操作句柄, 0))
    返回 (假)
.如果真结束
赋值 (内存块长度, 28)
.判断循环首 (不等于 (VirtualQueryEx (内操作句柄, 内存地址, 内存块信息, 内存块长度), 0))
    .如果真 (并且 (等于 (内存块信息.Type, #MEM_PRIVATE), 等于 (内存块信息.Protect, #PAGE_READWRITE)))
        赋值 (数据缓冲区, 取空白字节集 (内存块信息.RegionSize))
        赋值 (读取结果, 字节集_ReadProcessMemory (内操作句柄, 内存地址, 数据缓冲区, 内存块信息.RegionSize, 0))
        .如果 (不等于 (读取结果, 0))
            赋值 (开始地址, 寻找字节集 (数据缓冲区, 内搜索值1, )) ' 查找是否有要搜索的数据
            .如果 (不等于 (开始地址, -1))
                加入成员 (搜索坐标结果, 到数值 (相减 (相加 (内存地址, 开始地址), 1)))
            .否则
                
            .如果结束
            .判断循环首 (不等于 (-1, 寻找字节集 (数据缓冲区, 内搜索值1, 相加 (开始地址, 长度))))
                赋值 (其他地址, 寻找字节集 (数据缓冲区, 内搜索值1, 相加 (开始地址, 长度)))
                加入成员 (搜索坐标结果, 到数值 (相减 (相加 (内存地址, 其他地址), 1)))
                赋值 (开始地址, 其他地址)
            .判断循环尾 ()
        .否则
            
        .如果结束
        
    .如果真结束
    赋值 (内存地址, 相加 (内存地址, 内存块信息.RegionSize))
.判断循环尾 ()
CloseHandle (内操作句柄)
返回 (真)


.子程序 _提升进程权限, 逻辑型, , 
.局部变量 hdlProcessHandle, 整数型, , , 
.局部变量 权限类别, 文本型, , , 
.局部变量 hdlTokenHandle, 整数型, , , 
.局部变量 tmpLuid, LuID, , , 
.局部变量 tkp, TOKEN_PRIVILEGES, , , 
.局部变量 tkpNewButIgnored, TOKEN_PRIVILEGES, , , 

赋值 (hdlProcessHandle, api_GetCurrentProcess ())
赋值 (权限类别, #SE_DEBUG_NAME)
api_OpenProcessToken (hdlProcessHandle, 40, hdlTokenHandle)
api_LookupPrivilegeValue (“”, 权限类别, tmpLuid)
赋值 (tkp.PrivilegeCount, 1)
赋值 (tkp.lowpart, tmpLuid.lowpart)
赋值 (tkp.highpart, tmpLuid.highpart)
赋值 (tkp.Attributes, 2)
.如果 (等于 (api_AdjustTokenPrivileges (hdlTokenHandle, 0, tkp, 28, tkpNewButIgnored, 0), 真))
    返回 (真)
.否则
    返回 (假)
.如果结束



.子程序 江湖输出文本, 空白型, , 
.参数 句柄内, 整数型, , 
.参数 内容文本, 文本型, , 

.局部变量 喊话字节内, 字节集, , , 
.局部变量 I, 整数型, , , 

.如果真 (或者 (小于或等于 (句柄内, 0), 等于 (内容文本, “”)))
    返回 ()
.如果真结束
按键 (#回车键, 取扫描码 (#回车键, 0), 0, 0)
延时 (20)
按键 (#回车键, 取扫描码 (#回车键, 0), 2, 0)
延时 (20)
赋值 (喊话字节内, 到字节集 (内容文本))
.计次循环首 (取字节集长度 (喊话字节内), I)
    投送消息_ (句柄内, 258, 喊话字节内 [I], 0)
    
.计次循环尾 ()
按键 (#回车键, 取扫描码 (#回车键, 0), 0, 0)
延时 (20)
按键 (#回车键, 取扫描码 (#回车键, 0), 2, 0)
延时 (20)


.子程序 发送, 空白型, , 
.参数 消息, 整数型, , 

 ' 前台窗口 (主窗口句柄)
按键 (消息, 取扫描码 (消息, 0), 0, 0)
延时 (50)
按键 (消息, 取扫描码 (消息, 0), 2, 0)
延时 (50)

.子程序 发送2, 空白型, , 
.参数 消息2, 空白型, , 


按键 (消息2, 取扫描码 (消息2, 0), 0, 0)
延时 (50)
按键 (消息2, 取扫描码 (消息2, 0), 2, 0)
延时 (50)


.窗口程序集 窗口程序集2, , , 

.子程序 _超级按钮1_被单击, 空白型, , 
赋值 (_启动窗口., 真)
赋值 (小化窗口., 假)


.子程序 _小化窗口_创建完毕, 空白型, , 
赋值 (小化窗口., 230)
赋值 (小化窗口., 3)
赋值 (.宽度, 相减 (小化窗口., .))
赋值 (., 相减 (小化窗口., .))


 ' 不属于任何一个程序集、类模块的函数：
