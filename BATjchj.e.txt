 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 569
    高度 = 503
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    窗口类名 = “”
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “易语言・批处理 集成环境 V2.0  BATCH IDE 2.0  让我们用中文写批处理！     许宏旭”
    帮助文件名 = “”



.常量 常量1, "“易语言・批处理模块第1版第5改版”", , 
.常量 常量2, "“易语言・批处理的子程序”", , 
.常量 常量3, "“开始项，必须执行的”", , 
.常量 常量4, "“初始化：在使用易语言・批处理时必须首先运行此命令”", , 
.常量 常量5, "“基本命令：易语言・批处理的最基本的核心命令”", , 
.常量 常量6, "“输出：ECHO，格式 输出（文本）”", , 
.常量 常量7, "“注释：REM，格式 注释（文本）”", , 
.常量 常量8, "“调用：CALL，调用其它批处理文件。格式 调用（批处理路径）”", , 
.常量 常量9, "“^ 将本命令后的有意义的符号格式化为文本格式（如：@echo test ^> 1.txt不是传递到1.txt，而是返回test ^> 1.txt） 格式 格式化符号（包括符号以后的文本）本命令应在某命令之后，并且可以穿插在文本中。（如：输出("dir")  格式化符号(">1.txt")）”", , 
.常量 常量10, "“|  注意：管道传输的命令仅包含刚刚写的命令。格式 管道传输（因技术问题，此处为英文代码）”", , 
.常量 常量11, "“IF  格式判断（条件【此处可能含有英文ERRORLEVEL，EXIST等】，条件成立后代码【技术问题，此处为英文代码】）”", , 
.常量 常量12, "“IF NOT 格式”判断否（条件【此处可能含有英文ERRORLEVEL，EXIST等】，条件成立后代码【技术问题，此处为英文代码】）”", , 
.常量 常量13, "“FOR /L 提示：提供循环的数值（不是第几次，而是数值，因为有时会有每次递增2次以上的可能）的变量名称为%i。格式 循环（循环初始值【第一次从几开始循环】，每次递增数【每次增加几，为负数则为减少几】，循环次数【一共循环多少次】，每次循环的代码【技术问题，此处只能写英文代码】）”", , 
.常量 常量14, "“CLS 格式 清屏（）”", , 
.常量 常量15, "“SET 格式 设置变量（变量名【不必加%】，赋予变量的值【不论数值型值还是别的类型均改写成文本】）”", , 
.常量 常量16, "“GOTO 格式 跳转（欲跳转到的子程序名【子程序名格式为 :XXX冒号+名称】）”", , 
.常量 常量17, "“运行程序 格式 运行程序（程序路径）”", , 
.常量 常量18, "“PAUSE 会显示 请按任意键继续 . . . 格式 暂停执行（）”", , 
.常量 常量19, "“传递信息文件”", , 
.常量 常量20, "“> 注意：传递的文本仅包含刚刚写的命令，且传递后源文件内容将被覆盖。 格式 传递并覆盖到文件（路径）”", , 
.常量 常量21, "“>> 注意：传递的文本仅包含刚刚写的命令，且传递后源文件内容不被覆盖，而是将文本追加到原文本后边 格式 传递并追加到文件（路径）”", , 
.常量 常量22, "“关于磁盘的操作”", , 
.常量 常量23, "“md 格式 创建目录（路径）”", , 
.常量 常量24, "“xcopy 格式 拷贝目录（源目录，新目录）”", , 
.常量 常量25, "“rd 格式 删除目录（目录路径）”", , 
.常量 常量26, "“deltree 与dr不同，该命令可以一步就将目录及其下的所有文件、子目录、更下层的子目录一并删除，而且不管文件的属性为隐藏、系统或只读。 格式 强删目录（目录路径）”", , 
.常量 常量27, "“cd 当前目录转到指定目标 格式 转到目标（目录路径）”", , 
.常量 常量28, "“copy 格式 拷贝文件（原始文件路径，新文件路径）”", , 
.常量 常量29, "“del 格式 删除文件（文件路径）”", , 
.常量 常量30, "“undelete 格式 恢复删除（文件路径）”", , 
.常量 常量31, "“format 危险 格式 格式化硬盘（盘符【无反斜杠】）”", , 
.常量 常量32, "“unformat 危险 格式 恢复格式化（盘符【无反斜杠】）”", , 
.常量 常量33, "“scandisk 格式 检修磁盘（盘符【无反斜杠】）”", , 
.常量 常量34, "“defrag /f 格式 重整磁盘（盘符【无反斜杠】）”", , 
.常量 常量35, "“label 格式 建立卷标（盘符【无反斜杠】，卷标）”", , 
.常量 常量36, "“vol 格式 显示卷标（盘符【无反斜杠】）”", , 
.常量 常量37, "“dir 格式 显示磁盘目录（目录路径）”", , 
.常量 常量38, "“tree 格式 树型显示目录（目录路径）”", , 
.常量 常量39, "“ren 格式 文件改名（路径【不包括文件名，务必加上最后一个\斜杠符号】，原文件名，新文件名）”", , 
.常量 常量40, "“关于文件的查看”", , 
.常量 常量41, "“type 格式 显示文本文件（路径）”", , 
.常量 常量42, "“fc 格式 文本比较（第一文本路径，第二文本路径）”", , 
.常量 常量43, "“关于系统的操作”", , 
.常量 常量44, "“taskkill 格式 强制终止进程（进程名【包括扩展名】）”", , 
.常量 常量45, "“ver 格式 系统版本（）”", , 
.常量 常量46, "“date 格式 显示设置日期（新日期【格式：月月――日日――年年。若为空，则为显示日期】）”", , 
.常量 常量47, "“time 格式 显示设置时间（新时间【格式为（小时：分钟：秒：百分之几秒）无括号。若为空，则为显示时间】）”", , 
.常量 常量48, "“其它命令”", , 
.常量 常量49, "“其它命令 格式 其它命令（命令名及参数【英文代码及所有参数】，译文【建议填写！但可以不填，因为没有用处，只是为了帮助编者！】，帮助【建议填写！但可以不填，因为没有用处，只是为了帮助编者！】）”", , 
.常量 常量50, "“最后的命令”", , 
.常量 常量51, "“格式 生成批处理（保存的路径【包括文件名，务必加上扩展名（*.bat））】”", , 
.图片 图片1, " ' 已保存到：D:\易语言学习\Data\BATjchj.e\图片1", , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 6 系统核心支持库
 ' iext 27bb20fdd3e145e4bee3db39ddd6e64c 1 3 扩展界面支持库一
 ' xplib 7F54B9CE8887428dBA9CEEB94CEF4C72 1 6 XP风格界面库
 ' DialogEx A9836B8C89D84BDFAFA37E056AA27211 1 2 通用对话框扩展



 ' 所需要的模块
 ' 世宝脚本语言引擎 免费版 F:\易语言\易脚本免费版2\易脚本 1.1 免费版\易脚本.ec
 ' 易语言・批处理 F:\好程序之易语言\东升工作室\BAT\易语言・批处理.ec


.全局变量 路径, 文本型, , , 
.全局变量 最终文本, 文本型, 公开, , 

.窗口程序集 窗口程序集1, , , 

.子程序 _树型框1_项目被选择, 空白型, , 
.参数 选择方式, 整数型, , 

.判断开始 (等于 (.最大化按钮, 0))
    赋值 (.内容, #常量1)
.判断 (等于 (.最大化按钮, 1))
    赋值 (.内容, #常量2)
.判断 (等于 (.最大化按钮, 2))
    赋值 (.内容, #常量3)
.判断 (等于 (.最大化按钮, 3))
    赋值 (.内容, #常量4)
.判断 (等于 (.最大化按钮, 4))
    赋值 (.内容, #常量5)
.判断 (等于 (.最大化按钮, 5))
    赋值 (.内容, #常量6)
.判断 (等于 (.最大化按钮, 6))
    赋值 (.内容, #常量7)
.判断 (等于 (.最大化按钮, 7))
    赋值 (.内容, #常量8)
.判断 (等于 (.最大化按钮, 8))
    赋值 (.内容, #常量9)
.判断 (等于 (.最大化按钮, 9))
    赋值 (.内容, #常量10)
.判断 (等于 (.最大化按钮, 10))
    赋值 (.内容, #常量11)
.判断 (等于 (.最大化按钮, 11))
    赋值 (.内容, #常量12)
.判断 (等于 (.最大化按钮, 12))
    赋值 (.内容, #常量13)
.判断 (等于 (.最大化按钮, 13))
    赋值 (.内容, #常量14)
.判断 (等于 (.最大化按钮, 14))
    赋值 (.内容, #常量15)
.判断 (等于 (.最大化按钮, 15))
    赋值 (.内容, #常量16)
.判断 (等于 (.最大化按钮, 16))
    赋值 (.内容, #常量17)
.判断 (等于 (.最大化按钮, 17))
    赋值 (.内容, #常量18)
.判断 (等于 (.最大化按钮, 18))
    赋值 (.内容, #常量19)
.判断 (等于 (.最大化按钮, 19))
    赋值 (.内容, #常量20)
.判断 (等于 (.最大化按钮, 20))
    赋值 (.内容, #常量21)
.判断 (等于 (.最大化按钮, 21))
    赋值 (.内容, #常量22)
.判断 (等于 (.最大化按钮, 22))
    赋值 (.内容, #常量23)
.判断 (等于 (.最大化按钮, 23))
    赋值 (.内容, #常量24)
.判断 (等于 (.最大化按钮, 24))
    赋值 (.内容, #常量25)
.判断 (等于 (.最大化按钮, 25))
    赋值 (.内容, #常量26)
.判断 (等于 (.最大化按钮, 26))
    赋值 (.内容, #常量27)
.判断 (等于 (.最大化按钮, 27))
    赋值 (.内容, #常量28)
.判断 (等于 (.最大化按钮, 28))
    赋值 (.内容, #常量29)
.判断 (等于 (.最大化按钮, 29))
    赋值 (.内容, #常量30)
.判断 (等于 (.最大化按钮, 30))
    赋值 (.内容, #常量31)
.判断 (等于 (.最大化按钮, 31))
    赋值 (.内容, #常量32)
.判断 (等于 (.最大化按钮, 32))
    赋值 (.内容, #常量33)
.判断 (等于 (.最大化按钮, 33))
    赋值 (.内容, #常量34)
.判断 (等于 (.最大化按钮, 34))
    赋值 (.内容, #常量35)
.判断 (等于 (.最大化按钮, 35))
    赋值 (.内容, #常量36)
.判断 (等于 (.最大化按钮, 36))
    赋值 (.内容, #常量37)
.判断 (等于 (.最大化按钮, 37))
    赋值 (.内容, #常量38)
.判断 (等于 (.最大化按钮, 38))
    赋值 (.内容, #常量39)
.判断 (等于 (.最大化按钮, 39))
    赋值 (.内容, #常量40)
.判断 (等于 (.最大化按钮, 40))
    赋值 (.内容, #常量41)
.判断 (等于 (.最大化按钮, 41))
    赋值 (.内容, #常量42)
.判断 (等于 (.最大化按钮, 42))
    赋值 (.内容, #常量43)
.判断 (等于 (.最大化按钮, 43))
    赋值 (.内容, #常量44)
.判断 (等于 (.最大化按钮, 44))
    赋值 (.内容, #常量45)
.判断 (等于 (.最大化按钮, 45))
    赋值 (.内容, #常量46)
.判断 (等于 (.最大化按钮, 46))
    赋值 (.内容, #常量47)
.判断 (等于 (.最大化按钮, 47))
    赋值 (.内容, #常量48)
.判断 (等于 (.最大化按钮, 48))
    赋值 (.内容, #常量49)
.判断 (等于 (.最大化按钮, 49))
    赋值 (.内容, #常量50)
.判断 (等于 (.最大化按钮, 50))
    赋值 (.内容, #常量51)
.默认
    
.判断结束


.子程序 _树型框1_双击项目, 空白型, , 
.如果 (等于 (.内容, “”))
    相加 (.取项目文本 (.最大化按钮), “()”).加入文本 ()
.否则
    相加 (#换行符, .取项目文本 (.最大化按钮), “()”).加入文本 ()
.如果结束


.子程序 _按钮1_被单击, 空白型, , 
赋值 (.内容, 脚本整理 (.内容))
 ' 脚本运行 (“初始化（）”)
脚本运行 (.内容)
.如果 (等于 (脚本错误信息 (), “”))
    信息框 (“执行成功！”, 0, “恭喜：”)
.否则
    信息框 (相加 (“执行出错！原因：”, 脚本错误信息 ()), 0, “恭喜：”)
.如果结束


.子程序 子程序_输出, 空白型, , 
.参数 线程号, 整数型, , 

.如果 (不等于 (调用参数值 (线程号, 1, 真), “”))
    输出 (调用参数值 (线程号, 1, 真))
.否则
    调用错误信息 (线程号, “缺少参数！”)
.如果结束


.子程序 子程序_格式化符号, 空白型, , 
.参数 线程号, 整数型, , 

.如果 (不等于 (调用参数值 (线程号, 1, 真), “”))
    格式化符号 (调用参数值 (线程号, 1, 真))
.否则
    调用错误信息 (线程号, “缺少参数”)
.如果结束


.子程序 子程序_判断否, 空白型, , 
.参数 线程号, 整数型, , 

.如果 (并且 (不等于 (调用参数值 (线程号, 1, 真), “”), 不等于 (调用参数值 (线程号, 1, 真), “”)))
    判断否 (调用参数值 (线程号, 1, 真), 调用参数值 (线程号, 2, 真))
.否则
    调用错误信息 (线程号, “缺少参数”)
.如果结束


.子程序 子程序_清屏, 空白型, , 
.参数 线程号, 整数型, , 

清屏 ()

.子程序 子程序_设置变量, 空白型, , 
.参数 线程号, 整数型, , 

.如果真 (或者 (等于 (调用参数值 (线程号, 1, 真), “”), 等于 (调用参数值 (线程号, 2, 真), “”)))
    调用错误信息 (线程号, “缺少参数”)
    返回 ()
.如果真结束
设置变量 (调用参数值 (线程号, 1, 真), 调用参数值 (线程号, 2, 真))

.子程序 子程序_跳转, 空白型, , 
.参数 线程号, 整数型, , 

.如果真 (等于 (调用参数值 (线程号, 1, 真), “”))
    调用错误信息 (线程号, “缺少参数”)
    返回 ()
.如果真结束
跳转 (调用参数值 (线程号, 1, 真))

.子程序 子程序_运行程序, 空白型, , 
.参数 线程号, 整数型, , 

.如果真 (等于 (调用参数值 (线程号, 1, 真), “”))
    调用错误信息 (线程号, “缺少参数”)
    返回 ()
.如果真结束
运行程序 (调用参数值 (线程号, 1, 真))

.子程序 子程序_暂停执行, 空白型, , 
.参数 线程号, 整数型, , 

暂停执行 ()

.子程序 子程序_传递并覆盖到文件, 空白型, , 
.参数 线程号, 整数型, , 

.如果真 (等于 (调用参数值 (线程号, 1, 真), “”))
    调用错误信息 (线程号, “缺少参数”)
    返回 ()
.如果真结束
传递并覆盖到文件 (调用参数值 (线程号, 1, 真))

.子程序 子程序_传递并追加到文件, 空白型, , 
.参数 线程号, 整数型, , 

.如果真 (等于 (调用参数值 (线程号, 1, 真), “”))
    调用错误信息 (线程号, “缺少参数”)
    返回 ()
.如果真结束
传递并追加到文件 (调用参数值 (线程号, 1, 真))

.子程序 子程序_创建目录, 空白型, , 
.参数 线程号, 整数型, , 

.如果真 (等于 (调用参数值 (线程号, 1, 真), “”))
    调用错误信息 (线程号, “缺少参数”)
    返回 ()
.如果真结束
创建目录 (调用参数值 (线程号, 1, 真))

.子程序 子程序_拷贝目录, 空白型, , 
.参数 线程号, 整数型, , 

.如果真 (或者 (等于 (调用参数值 (线程号, 1, 真), “”), 等于 (调用参数值 (线程号, 2, 真), “”)))
    调用错误信息 (线程号, “缺少参数”)
    返回 ()
.如果真结束
拷贝目录 (调用参数值 (线程号, 1, 真), 调用参数值 (线程号, 2, 真))

.子程序 子程序_删除目录, 空白型, , 
.参数 线程号, 整数型, , 

.如果真 (等于 (调用参数值 (线程号, 1, 真), “”))
    调用错误信息 (线程号, “缺少参数”)
    返回 ()
.如果真结束
删除目录 (调用参数值 (线程号, 1, 真))

.子程序 子程序_强删目录, 空白型, , 
.参数 线程号, 整数型, , 

.如果真 (等于 (调用参数值 (线程号, 1, 真), “”))
    调用错误信息 (线程号, “缺少参数”)
    返回 ()
.如果真结束
强删目录 (调用参数值 (线程号, 1, 真))

.子程序 子程序_转到目标, 空白型, , 
.参数 线程号, 整数型, , 

.如果真 (等于 (调用参数值 (线程号, 1, 真), “”))
    调用错误信息 (线程号, “缺少参数”)
    返回 ()
.如果真结束
转到目标 (调用参数值 (线程号, 1, 真))

.子程序 子程序_拷贝文件, 空白型, , 
.参数 线程号, 整数型, , 

.如果真 (或者 (等于 (调用参数值 (线程号, 1, 真), “”), 等于 (调用参数值 (线程号, 2, 真), “”)))
    调用错误信息 (线程号, “缺少参数”)
    返回 ()
.如果真结束
拷贝文件 (调用参数值 (线程号, 1, 真), 调用参数值 (线程号, 2, 真))

.子程序 子程序_删除文件, 空白型, , 
.参数 线程号, 整数型, , 

.如果真 (等于 (调用参数值 (线程号, 1, 真), “”))
    调用错误信息 (线程号, “缺少参数”)
    返回 ()
.如果真结束
删除文件 (调用参数值 (线程号, 1, 真))

.子程序 子程序_恢复删除, 空白型, , 
.参数 线程号, 整数型, , 

.如果真 (等于 (调用参数值 (线程号, 1, 真), “”))
    调用错误信息 (线程号, “缺少参数”)
    返回 ()
.如果真结束
恢复删除 (调用参数值 (线程号, 1, 真))

.子程序 子程序_循环, 空白型, , 
.参数 线程号, 整数型, , 

.如果真 (或者 (等于 (调用参数值 (线程号, 1, 真), “”), 等于 (调用参数值 (线程号, 2, 真), “”), 等于 (调用参数值 (线程号, 3, 真), “”), 等于 (调用参数值 (线程号, 4, 真), “”)))
    调用错误信息 (线程号, “缺少参数”)
    返回 ()
.如果真结束
循环 (到数值 (调用参数值 (线程号, 1, 真)), 到数值 (调用参数值 (线程号, 2, 真)), 到数值 (调用参数值 (线程号, 3, 真)), 调用参数值 (线程号, 4, 真))

.子程序 子程序_格式化硬盘, 空白型, , 
.参数 线程号, 整数型, , 

.如果真 (等于 (调用参数值 (线程号, 1, 真), “”))
    调用错误信息 (线程号, “缺少参数”)
    返回 ()
.如果真结束
格式化硬盘 (调用参数值 (线程号, 1, 真))

.子程序 子程序_恢复格式化, 空白型, , 
.参数 线程号, 整数型, , 

.如果真 (等于 (调用参数值 (线程号, 1, 真), “”))
    调用错误信息 (线程号, “缺少参数”)
    返回 ()
.如果真结束
恢复格式化 (调用参数值 (线程号, 1, 真))

.子程序 子程序_检修磁盘, 空白型, , 
.参数 线程号, 整数型, , 

.如果真 (等于 (调用参数值 (线程号, 1, 真), “”))
    调用错误信息 (线程号, “缺少参数”)
    返回 ()
.如果真结束
检修磁盘 (调用参数值 (线程号, 1, 真))

.子程序 子程序_重整磁盘, 空白型, , 
.参数 线程号, 整数型, , 

.如果真 (等于 (调用参数值 (线程号, 1, 真), “”))
    调用错误信息 (线程号, “缺少参数”)
    返回 ()
.如果真结束
重整磁盘 (调用参数值 (线程号, 1, 真))

.子程序 子程序_建立卷标, 空白型, , 
.参数 线程号, 整数型, , 

.如果真 (或者 (等于 (调用参数值 (线程号, 1, 真), “”), 等于 (调用参数值 (线程号, 2, 真), “”)))
    调用错误信息 (线程号, “缺少参数”)
    返回 ()
.如果真结束
建立卷标 (调用参数值 (线程号, 1, 真), 调用参数值 (线程号, 2, 真))

.子程序 子程序_显示卷标, 空白型, , 
.参数 线程号, 整数型, , 

.如果真 (等于 (调用参数值 (线程号, 1, 真), “”))
    调用错误信息 (线程号, “缺少参数”)
    返回 ()
.如果真结束
显示卷标 (调用参数值 (线程号, 1, 真))

.子程序 子程序_显示磁盘目录, 空白型, , 
.参数 线程号, 整数型, , 

.如果真 (等于 (调用参数值 (线程号, 1, 真), “”))
    调用错误信息 (线程号, “缺少参数”)
    返回 ()
.如果真结束
显示磁盘目录 (调用参数值 (线程号, 1, 真))

.子程序 子程序_树型显示目录, 空白型, , 
.参数 线程号, 整数型, , 

.如果真 (等于 (调用参数值 (线程号, 1, 真), “”))
    调用错误信息 (线程号, “缺少参数”)
    返回 ()
.如果真结束
树形显示目录 (调用参数值 (线程号, 1, 真))

.子程序 子程序_文件改名, 空白型, , 
.参数 线程号, 整数型, , 

.如果真 (或者 (等于 (调用参数值 (线程号, 1, 真), “”), 等于 (调用参数值 (线程号, 2, 真), “”), 等于 (调用参数值 (线程号, 3, 真), “”)))
    调用错误信息 (线程号, “缺少参数”)
    返回 ()
.如果真结束
文件改名 (调用参数值 (线程号, 1, 真), 调用参数值 (线程号, 2, 真), 调用参数值 (线程号, 3, 真))

.子程序 子程序_显示文本文件, 空白型, , 
.参数 线程号, 整数型, , 

.如果真 (等于 (调用参数值 (线程号, 1, 真), “”))
    调用错误信息 (线程号, “缺少参数”)
    返回 ()
.如果真结束
显示文本文件 (调用参数值 (线程号, 1, 真))

.子程序 子程序_文本比较, 空白型, , 
.参数 线程号, 整数型, , 

.如果真 (或者 (等于 (调用参数值 (线程号, 1, 真), “”), 等于 (调用参数值 (线程号, 2, 真), “”)))
    调用错误信息 (线程号, “缺少参数”)
    返回 ()
.如果真结束
文本比较 (调用参数值 (线程号, 1, 真), 调用参数值 (线程号, 2, 真))

.子程序 子程序_强制终止进程, 空白型, , 
.参数 线程号, 整数型, , 

.如果真 (等于 (调用参数值 (线程号, 1, 真), “”))
    调用错误信息 (线程号, “缺少参数”)
    返回 ()
.如果真结束
强制终止进程 (调用参数值 (线程号, 1, 真))

.子程序 子程序_系统版本, 空白型, , 
.参数 线程号, 整数型, , 

系统版本 ()

.子程序 子程序_管道传输, 空白型, , 
.参数 线程号, 整数型, , 

.如果真 (等于 (调用参数值 (线程号, 1, 真), “”))
    调用错误信息 (线程号, “缺少参数”)
    返回 ()
.如果真结束
管道传输 (调用参数值 (线程号, 1, 真))

.子程序 子程序_显示设置日期, 空白型, , 
.参数 线程号, 整数型, , 

显示设置日期 (调用参数值 (线程号, 1, 真))

.子程序 子程序_显示设置时间, 空白型, , 
.参数 线程号, 整数型, , 

显示设置时间 (调用参数值 (线程号, 1, 真))

.子程序 子程序_其它命令, 空白型, , 
.参数 线程号, 整数型, , 

.如果真 (等于 (调用参数值 (线程号, 1, 真), “”))
    调用错误信息 (线程号, “缺少参数”)
    返回 ()
.如果真结束
其它命令 (调用参数值 (线程号, 1, 真), 调用参数值 (线程号, 2, 真), 调用参数值 (线程号, 3, 真))

.子程序 子程序_生成批处理, 空白型, , 
.参数 线程号, 整数型, , 

.如果真 (等于 (调用参数值 (线程号, 1, 真), “”))
    调用错误信息 (线程号, “缺少参数”)
    返回 ()
.如果真结束
生成批处理 (调用参数值 (线程号, 1, 真))
赋值 (路径, 调用参数值 (线程号, 1, 真))

.子程序 子程序_判断, 空白型, , 
.参数 线程号, 整数型, , 

.如果真 (或者 (等于 (调用参数值 (线程号, 1, 真), “”), 等于 (调用参数值 (线程号, 2, 真), “”)))
    调用错误信息 (线程号, “缺少参数”)
    返回 ()
.如果真结束
判断 (调用参数值 (线程号, 1, 真), 调用参数值 (线程号, 2, 真))

.子程序 子程序_注释, 空白型, , 
.参数 线程号, 整数型, , 

.如果真 (等于 (调用参数值 (线程号, 1, 真), “”))
    调用错误信息 (线程号, “缺少参数”)
    返回 ()
.如果真结束
注释 (调用参数值 (线程号, 1, 真))

.子程序 子程序_调用, 空白型, , 
.参数 线程号, 整数型, , 

.如果真 (等于 (调用参数值 (线程号, 1, 真), “”))
    调用错误信息 (线程号, “缺少参数”)
    返回 ()
.如果真结束
调用 (调用参数值 (线程号, 1, 真))

.子程序 子程序_初始化, 空白型, , 
.参数 线程号, 整数型, , 

初始化 ()

.子程序 __启动窗口_创建完毕, 空白型, , 
.局部变量 命令行, 文本型, , "0", 

取命令行 (命令行)
.如果真 (大于 (取数组成员数 (命令行), 0))
    赋值 (.内容, 到文本 (读入文件 (命令行 [1])))
.如果真结束
写到文件 (“C:\Windows\system32\blue.ico”, #图片1)
文件关联 (相加 (取当前目录 (), “\易语言・批处理 集成开发环境 V 2.0.exe”), “zwb”, “C:\Windows\system32\blue.ico”)
写注册项 (#根类, “.zwb\ShellNew\FileName”, “新建中文批处理文档.zwb”)
未知支持库函数_0 (1)
引擎初始化 ()
函数注销 (“判断”)
函数注册 (“初始化”, &子程序_初始化)
函数注册 (“输出”, &子程序_输出)
函数注册 (“判断否”, &子程序_判断否)
函数注册 (“清屏”, &子程序_清屏)
函数注册 (“设置变量”, &子程序_设置变量)
函数注册 (“跳转”, &子程序_跳转)
函数注册 (“运行程序”, &子程序_运行程序)
函数注册 (“暂停执行”, &子程序_暂停执行)
函数注册 (“传递并覆盖到文件”, &子程序_传递并覆盖到文件)
函数注册 (“传递并追加到文件”, &子程序_传递并追加到文件)
函数注册 (“创建目录”, &子程序_创建目录)
函数注册 (“拷贝目录”, &子程序_拷贝目录)
函数注册 (“删除目录”, &子程序_删除目录)
函数注册 (“强删目录”, &子程序_强删目录)
函数注册 (“转到目标”, &子程序_转到目标)
函数注册 (“拷贝文件”, &子程序_拷贝文件)
函数注册 (“删除文件”, &子程序_删除文件)
函数注册 (“恢复删除”, &子程序_恢复删除)
函数注册 (“循环”, &子程序_循环)
函数注册 (“格式化硬盘”, &子程序_格式化硬盘)
函数注册 (“恢复格式化”, &子程序_恢复格式化)
函数注册 (“检修磁盘”, &子程序_检修磁盘)
函数注册 (“重整磁盘”, &子程序_重整磁盘)
函数注册 (“建立卷标”, &子程序_建立卷标)
函数注册 (“显示卷标”, &子程序_显示卷标)
函数注册 (“显示磁盘目录”, &子程序_显示磁盘目录)
函数注册 (“树型显示目录”, &子程序_树型显示目录)
函数注册 (“文件改名”, &子程序_文件改名)
函数注册 (“显示文本文件”, &子程序_显示文本文件)
函数注册 (“文本比较”, &子程序_文本比较)
函数注册 (“强制终止进程”, &子程序_强制终止进程)
函数注册 (“系统版本”, &子程序_系统版本)
函数注册 (“管道传输”, &子程序_管道传输)
函数注册 (“格式化符号”, &子程序_格式化符号)
函数注册 (“显示设置日期”, &子程序_显示设置日期)
函数注册 (“显示设置时间”, &子程序_显示设置时间)
函数注册 (“其它命令”, &子程序_其它命令)
函数注册 (“生成批处理”, &子程序_生成批处理)
函数注册 (“判断”, &子程序_判断)
函数注册 (“注释”, &子程序_注释)
函数注册 (“调用”, &子程序_调用)
函数注册 (“初始化”, &子程序_初始化)


.子程序 文件关联, 逻辑型, 公开, 
.参数 关联应用程序, 文本型, 可空, 当双击对应的文件时就运行该应用程序打开
.参数 关联文件类型, 文本型, 可空, 欲关联的文件类型，如“ABC”
.参数 关联文件图标, 文本型, 可空, ICQ文件路径或EXE文件路径，注销后才有效

.如果真 (或者 (是否为空 (关联应用程序), 是否为空 (关联文件类型), 是否为空 (关联文件图标)))
    删除注册项 (#根类, 相加 (“.”, “关联文件类型”))
    删除注册项 (#根类, 相加 (关联文件类型, “file\DefaultIcon”))
    删除注册项 (#根类, 相加 (关联文件类型, “file\shell\open\command”))
    删除注册项 (#根类, 相加 (关联文件类型, “file\shell\open”))
    删除注册项 (#根类, 相加 (关联文件类型, “file\shell”))
    删除注册项 (#根类, 相加 (关联文件类型, “file”))
    返回 (假)
.如果真结束

.如果真 (并且 (等于 (写注册项 (#根类, 相加 (“.”, 关联文件类型, “\”), 相加 (关联文件类型, “file”)), 真), 等于 (写注册项 (#根类, 相加 (关联文件类型, “file\”), 关联文件类型), 真), 等于 (写注册项 (#根类, 相加 (关联文件类型, “file\DefaultIcon\”), 关联文件图标), 真), 等于 (写注册项 (#根类, 相加 (关联文件类型, “file\shell\open\command\”), 相加 (关联应用程序, “ %1”)), 真)))
    返回 (真)
.如果真结束
返回 (假)

.子程序 _按钮3_被单击, 空白型, , 
打开 ()
.如果真 (不等于 (.文件名, “”))
    写到文件 (相加 (.文件名, “.zwb”), 到字节集 (.内容))
.如果真结束


.子程序 _按钮4_被单击, 空白型, , 
打开 ()
.如果真 (不等于 (.文件名, “”))
    赋值 (.内容, 到文本 (读入文件 (.文件名)))
.如果真结束


.子程序 _按钮2_被单击, 空白型, , 
运行 (路径, 假, )

.子程序 _按钮5_被单击, 空白型, , 
未知支持库函数_4 (“易语言・批处理 集成开发环境V2.0 关于”, “宋体”, 9, 相加 (“易语言・批处理 集成开发环境V2.0 ”, #换行符, “宗旨：中文写批处理”, #换行符, “内核：易语言・批处理V1.5”, #换行符, “作者：许宏旭”), “宋体”, 12, “https://sites.google.com/site/xhxprogram”, 10, 10, 16, 2, 16764057, 16777215)


.程序集 __HIDDEN_TEMP_MOD__, , , 

.子程序 脚本运行, 文本型, , 脚本执行后可获取“返回( 返回值 )”的“返回值”，也可只用于表达式计算，如：“返回( 1 + 2 )”
.参数 脚本代码, 文本型, , 



.子程序 变量插入成员, 空白型, , 将数据插入到指定数组变量的指定位置
.参数 线程号, 整数型, , 
.参数 变量名, 文本型, , 
.参数 插入位置, 整数型, , 位置值从 1 开始，如果小于 1 或大于第一个参数所指定数组变量的成员数目 + 1，将不会插入任何数据。
.参数 新成员值, 文本型, , 



.子程序 变量定义数组, 空白型, , 定义单维数组成员数量。
.参数 线程号, 整数型, , 
.参数 变量名, 文本型, , 
.参数 成员数量, 整数型, , 成员数



.子程序 变量复制数组, 空白型, , 
.参数 线程号, 整数型, , 
.参数 被复制数组, 文本型, , 
.参数 新数组名称, 文本型, , 



.子程序 变量赋值, 空白型, , 可新建变量 或 赋值
.参数 线程号, 整数型, , 
.参数 变量名, 文本型, , 
.参数 变量值, 文本型, , 



.子程序 变量加入成员, 空白型, , 将新成员加入到指定数组变量的尾部
.参数 线程号, 整数型, , 
.参数 变量名, 文本型, , 
.参数 新成员值, 文本型, , 



.子程序 变量清除数组, 空白型, , 删除指定数组变量中的所有成员。
.参数 线程号, 整数型, , 
.参数 变量名, 文本型, , 



.子程序 变量取成员数, 整数型, , 
.参数 线程号, 整数型, , 
.参数 变量名, 文本型, , 



.子程序 变量取值, 文本型, , 
.参数 线程号, 整数型, , 
.参数 变量名, 文本型, , 



.子程序 变量删除成员, 整数型, , 返回所实际删除的成员数目。删除指定数组变量中的成员，并通过定义数组自动减少其成员数目。
.参数 线程号, 整数型, , 
.参数 变量名, 文本型, , 
.参数 删除位置, 整数型, , 位置值从 1 开始，如果小于 1 或大于第一个参数所指定数组变量的成员数目，将不会删除任何数据。
.参数 删除数目, 整数型, , 



.子程序 变量数组排序, 空白型, , 对指定数值数组变量内的所有数组成员进行快速排序
.参数 线程号, 整数型, , 
.参数 变量名, 文本型, , 
.参数 是否从小到大, 逻辑型, , 



.子程序 变量数组清值, 空白型, , 将指定数组变量内的所有成员值全部设置为空 ""
.参数 线程号, 整数型, , 
.参数 变量名, 文本型, , 



.子程序 脚本整理, 文本型, , 整理脚本代码
.参数 代码文本, 文本型, , 



.子程序 引擎工作目录, 逻辑型, , 成功返回，真。默认为引擎环境运行目录
.参数 绝对路径, 文本型, , 例： "c:\U235"



.子程序 引擎授权信息, 空白型, , 免费版 此命令无效！
.参数 授权信息, 文本型, , 如何获取授权授权信息请访问 www.shibao.net
.参数 密码, 文本型, , 



.子程序 脚本继续, 空白型, , 脚本暂停 后 ，可通过本命令 继续执行
.参数 是否单步继续, 逻辑型, , 



.子程序 脚本进度, 文本型, , 返回 当前行号,脚本名称  注意中间有逗号！


.子程序 脚本暂停, 空白型, , 


.子程序 变量清空全局, 空白型, , 若再次执行脚本时，不需要调用前次执行中使用的全局变量，则可通过本命令清除。


.子程序 脚本编译, 逻辑型, , 成功返回,真。编译后的伪指令文件首次调用的速度略快一点！
.参数 预编译代码, 文本型, , 
.参数 输出文件名, 文本型, , 



.子程序 脚本终止, 空白型, , 


.子程序 调用参数个数, 整数型, , 系统调用注册的函数时，通过本命令获取参数的数量。
.参数 线程号, 整数型, , 



.子程序 调用参数值, 文本型, , 系统调用注册的函数时，通过本命令获取参数的值，或变量名。
.参数 线程号, 整数型, , 
.参数 参数编号, 整数型, , 表示第几个参数
.参数 是否取值, 逻辑型, , 真，取值。假，取变量名。



.子程序 调用错误信息, 空白型, , 调用外部函数时，本命令可传递出错信息给脚本引擎。
.参数 线程号, 整数型, , 
.参数 错误信息, 文本型, , 



.子程序 调用返回值, 空白型, , 系统调用注册的函数时，通过本命令返回函数计算后的值。
.参数 线程号, 整数型, , 
.参数 返回值, 文本型, , 预返回的值，或变量名。
.参数 是否为值, 逻辑型, , 真，表示值。假，表示变量名。



.子程序 函数注册, 空白型, , 预注册的函数，无返回值，但必须有一个整数型参数（线程号）。
.参数 函数名称, 文本型, , 
.参数 函数指针, 子程序指针, , 



.子程序 函数注销, 空白型, , 可注销任意系统内外部函数。
.参数 函数名, 文本型, , 



.子程序 脚本错误信息, 文本型, , 执行正确 返回  空白文本  ""


.子程序 引擎启动提示, 空白型, , 显示版权提示窗口


.子程序 引擎初始化, 空白型, , 启动脚本引擎。本函数也可重新启动引擎。


.程序集 __HIDDEN_TEMP_MOD__, , , 

.子程序 初始化, 空白型, , 使用易・批处理时必须先运行此命令


.子程序 注释, 空白型, , REM
.参数 注释文本, 文本型, , 



.子程序 输出, 空白型, , ECHO配合格式化符号时，请务必只在欲输出文本中写欲格式化的符号之前的文本
.参数 欲输出文本, 文本型, , 请注意，输出变量时务必在变量名前后加上%



.子程序 跳转, 空白型, , GOTO
.参数 欲跳转到的子程序名, 文本型, , :子程序名



.子程序 调用, 空白型, , CALL调用其它批处理
.参数 欲调用批处理文件名, 文本型, , 



.子程序 暂停执行, 空白型, , PAUSE会显示“请按任意键继续 . . .”


.子程序 判断, 空白型, , IF
.参数 判断条件, 文本型, , 内容可能含有英文ERRORLEVEL，EXIST等
.参数 条件成立后代码, 文本型, , 技术问题，此处只能写英文代码



.子程序 循环, 空白型, , FOR /L 提示：提供循环的数值（不是第几次，而是数值，因为有时会有每次递增2次以上的可能）的变量名称为%%i
.参数 循环初始值, 整数型, , 第一次从几开始循环
.参数 每次递增数, 整数型, , 每次增加几，为负数则为减少几
.参数 循环次数, 整数型, , 一共循环多少次
.参数 每次循环的代码, 文本型, , 技术问题，此处只能写英文代码



.子程序 判断否, 空白型, , IF not
.参数 判断条件, 文本型, , 内容可能含有英文ERRORLEVEL，EXIST等
.参数 条件成立后代码, 文本型, , 技术问题，此处只能写英文代码



.子程序 设置变量, 空白型, , SET
.参数 变量名, 文本型, , 不必加%
.参数 赋予变量的值, 文本型, , 不论数值型值还是别的类型均改写成文本



.子程序 传递并覆盖到文件, 空白型, , >
.参数 文件路径, 文本型, , 注意：传递的文本仅包含刚刚写的命令，且传递后源文件内容将被覆盖



.子程序 传递并追加到文件, 空白型, , >>
.参数 文件路径, 文本型, , 注意：传递的文本仅包含刚刚写的命令，且传递后源文件内容不被覆盖，而是将文本追加到原文本后边



.子程序 管道传输, 空白型, , |  注意：管道传输的命令仅包含刚刚写的命令
.参数 传输后代码, 文本型, , 技术问题，此处只能写英文代码



.子程序 格式化符号, 空白型, , ^ 将本命令后的有意义的符号格式化为文本格式（如：@echo test ^> 1.txt不是传递到1.txt，而是返回test ^> 1.txt）
.参数 本命令后的符号以及文本, 文本型, , 本命令应在某命令之后，并且可以穿插在文本中。（如：输出("dir")  格式化符号(">1.txt")）



.子程序 转到目标, 空白型, , cd 当前目录转到指定目标
.参数 目标路径, 文本型, , 如  （C：）不包括括号



.子程序 创建目录, 空白型, , md
.参数 目录路径, 文本型, , 



.子程序 删除目录, 空白型, , rd
.参数 目录路径, 文本型, , 



.子程序 显示磁盘目录, 空白型, , dir
.参数 欲显示的路径, 文本型, , 



.子程序 树形显示目录, 空白型, , tree
.参数 欲显示的路径, 文本型, , 



.子程序 强删目录, 空白型, , deltree 与dr不同，该命令可以一步就将目录及其下的所有文件、子目录、更下层的子目录一并删除，而且不管文件的属性为隐藏、系统或只读
.参数 欲强删的目录, 文本型, , 



.子程序 格式化硬盘, 空白型, , format 危险
.参数 盘符, 文本型, , 如C:



.子程序 恢复格式化, 空白型, , unformat 危险
.参数 盘符, 文本型, , 



.子程序 恢复删除, 空白型, , undelete
.参数 路径, 文本型, , 



.子程序 建立卷标, 空白型, , label
.参数 盘符, 文本型, , 
.参数 卷标, 文本型, , 



.子程序 显示卷标, 空白型, , vol
.参数 盘符, 文本型, , 



.子程序 检修磁盘, 空白型, , scandisk
.参数 盘符, 文本型, , 



.子程序 重整磁盘, 空白型, , defrag /f
.参数 盘符, 文本型, , 



.子程序 拷贝文件, 空白型, , copy
.参数 原始文件路径, 文本型, , 
.参数 目标文件路径, 文本型, , 



.子程序 拷贝目录, 空白型, , xcopy
.参数 原目录, 文本型, , 
.参数 目标目录, 文本型, , 



.子程序 显示文本文件, 空白型, , type
.参数 路径, 文本型, , 



.子程序 文件改名, 空白型, , ren
.参数 路径, 文本型, , 不包括文件名，务必加上最后一个\斜杠符号
.参数 原文件名, 文本型, , 
.参数 新文件名, 文本型, , 



.子程序 文本比较, 空白型, , fc
.参数 一路径, 文本型, , 
.参数 二路径, 文本型, , 



.子程序 删除文件, 空白型, , del
.参数 路径, 文本型, , 



.子程序 清屏, 空白型, , cls


.子程序 系统版本, 空白型, , ver


.子程序 显示设置日期, 空白型, , date
.参数 新日期, 文本型, 可空, 格式：月月――日日――年年。若为空，则为显示日期并提示输入新的日期，不修改则可直接按回车键。



.子程序 显示设置时间, 空白型, , time
.参数 新时间, 文本型, 可空, 格式为（小时：分钟：秒：百分之几秒）无括号。若为空，则为显示时间并提示输入新的时间，不修改则可直接按回车键。



.子程序 生成批处理, 空白型, , 
.参数 保存路径, 文本型, , 包括文件名，务必加上扩展名（*.bat）



.子程序 运行程序, 空白型, , 
.参数 程序路径, 文本型, , 可执行文件.exe……



.子程序 其它命令, 空白型, , 如有补充，请将英文命令名填入参数中
.参数 命令名及参数, 文本型, , 英文
.参数 译文, 文本型, , 建议填写！但可以不填，因为没有用处，只是为了帮助编者！
.参数 帮助, 文本型, , 建议填写！但可以不填，因为没有用处，只是为了帮助编者！



.子程序 强制终止进程, 空白型, , taskkill
.参数 进程名称, 文本型, , 一定加上扩展名




 ' 不属于任何一个程序集、类模块的函数：
