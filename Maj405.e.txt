 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 关于窗口
    左边 = 50
    顶边 = 50
    宽度 = 300
    高度 = 112
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 假
    禁止 = 假
    边框 = 0
    底图方式 = 1
    底色 = 33023 '  0x80FF
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 假
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 假
    随意移动 = 假
    外形 = 2
    总在最前 = 假
    保持标题栏激活 = 假
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “”
    帮助文件名 = “”

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 551
    高度 = 558
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 1
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 真
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    图标 =  ' 已保存到：D:\易语言学习\Data\Maj405.e\_启动窗口_图标.ico
    背景音乐 =  ' 空
    标题 = “滁州麻将局（难不死你就怪）”
    帮助文件名 = “”



.图片 b_1, " ' 已保存到：D:\易语言学习\Data\Maj405.e\b_1", , 
.图片 b_2, " ' 已保存到：D:\易语言学习\Data\Maj405.e\b_2", , 
.图片 b_3, " ' 已保存到：D:\易语言学习\Data\Maj405.e\b_3", , 
.图片 b_4, " ' 已保存到：D:\易语言学习\Data\Maj405.e\b_4", , 
.图片 b_5, " ' 已保存到：D:\易语言学习\Data\Maj405.e\b_5", , 
.图片 b_6, " ' 已保存到：D:\易语言学习\Data\Maj405.e\b_6", , 
.图片 b_7, " ' 已保存到：D:\易语言学习\Data\Maj405.e\b_7", , 
.图片 b_8, " ' 已保存到：D:\易语言学习\Data\Maj405.e\b_8", , 
.图片 b_9, " ' 已保存到：D:\易语言学习\Data\Maj405.e\b_9", , 
.图片 t_1, " ' 已保存到：D:\易语言学习\Data\Maj405.e\t_1", , 
.图片 t_2, " ' 已保存到：D:\易语言学习\Data\Maj405.e\t_2", , 
.图片 t_3, " ' 已保存到：D:\易语言学习\Data\Maj405.e\t_3", , 
.图片 t_4, " ' 已保存到：D:\易语言学习\Data\Maj405.e\t_4", , 
.图片 t_5, " ' 已保存到：D:\易语言学习\Data\Maj405.e\t_5", , 
.图片 t_6, " ' 已保存到：D:\易语言学习\Data\Maj405.e\t_6", , 
.图片 t_7, " ' 已保存到：D:\易语言学习\Data\Maj405.e\t_7", , 
.图片 t_8, " ' 已保存到：D:\易语言学习\Data\Maj405.e\t_8", , 
.图片 t_9, " ' 已保存到：D:\易语言学习\Data\Maj405.e\t_9", , 
.图片 w_1, " ' 已保存到：D:\易语言学习\Data\Maj405.e\w_1", , 
.图片 w_2, " ' 已保存到：D:\易语言学习\Data\Maj405.e\w_2", , 
.图片 w_3, " ' 已保存到：D:\易语言学习\Data\Maj405.e\w_3", , 
.图片 w_4, " ' 已保存到：D:\易语言学习\Data\Maj405.e\w_4", , 
.图片 w_5, " ' 已保存到：D:\易语言学习\Data\Maj405.e\w_5", , 
.图片 w_6, " ' 已保存到：D:\易语言学习\Data\Maj405.e\w_6", , 
.图片 w_7, " ' 已保存到：D:\易语言学习\Data\Maj405.e\w_7", , 
.图片 w_8, " ' 已保存到：D:\易语言学习\Data\Maj405.e\w_8", , 
.图片 w_9, " ' 已保存到：D:\易语言学习\Data\Maj405.e\w_9", , 
.图片 f_d, " ' 已保存到：D:\易语言学习\Data\Maj405.e\f_d", , 
.图片 f_n, " ' 已保存到：D:\易语言学习\Data\Maj405.e\f_n", , 
.图片 f_x, " ' 已保存到：D:\易语言学习\Data\Maj405.e\f_x", , 
.图片 f_b, " ' 已保存到：D:\易语言学习\Data\Maj405.e\f_b", , 
.图片 s_z, " ' 已保存到：D:\易语言学习\Data\Maj405.e\s_z", , 
.图片 s_f, " ' 已保存到：D:\易语言学习\Data\Maj405.e\s_f", , 
.图片 s_b, " ' 已保存到：D:\易语言学习\Data\Maj405.e\s_b", , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 4 系统核心支持库




数据类型 牌, , 
    .成员 i, 整数型, , , 
    .成员 j, 整数型, , , 

数据类型 牌组, , 
    .成员 牌, 牌, , , 
    .成员 索引, 字节型, , , 

.全局变量 剩余牌数, 字节型, , , 
.全局变量 牌图像, 字节集, , "34", 
.全局变量 牌局, 整数型, , "8,17", 
.全局变量 牌图片框, 图片框, , "8,17", 
.全局变量 被点牌1, 牌, , , 
.全局变量 被点牌2, 牌, , , 
.全局变量 移动起点, 牌, , , 
.全局变量 移动终点, 牌, , , 
.全局变量 可否移动, 逻辑型, , , 
.全局变量 移动否, 逻辑型, , , 
.全局变量 横或竖移, 逻辑型, , , 为真横，为假竖
.全局变量 原始牌组, 牌组, , "0", 记录移动前的牌位置与牌图像索引信息
.全局变量 现行牌组, 牌组, , "0", 记录正在移动的牌位置与牌图像索引信息
.全局变量 选择有效, 逻辑型, , , 
.全局变量 开始时间, 整数型, , , 
.全局变量 上张牌, 图片框, , , 
.全局变量 鼠标右键, 逻辑型, , , 

.窗口程序集 窗口程序集1, , , 

.子程序 __启动窗口_创建完毕, 空白型, , 
赋值 (牌图像 [1], #b_1)
赋值 (牌图像 [2], #b_2)
赋值 (牌图像 [3], #b_3)
赋值 (牌图像 [4], #b_4)
赋值 (牌图像 [5], #b_5)
赋值 (牌图像 [6], #b_6)
赋值 (牌图像 [7], #b_7)
赋值 (牌图像 [8], #b_8)
赋值 (牌图像 [9], #b_9)
赋值 (牌图像 [10], #t_1)
赋值 (牌图像 [11], #t_2)
赋值 (牌图像 [12], #t_3)
赋值 (牌图像 [13], #t_4)
赋值 (牌图像 [14], #t_5)
赋值 (牌图像 [15], #t_6)
赋值 (牌图像 [16], #t_7)
赋值 (牌图像 [17], #t_8)
赋值 (牌图像 [18], #t_9)
赋值 (牌图像 [19], #w_1)
赋值 (牌图像 [20], #w_2)
赋值 (牌图像 [21], #w_3)
赋值 (牌图像 [22], #w_4)
赋值 (牌图像 [23], #w_5)
赋值 (牌图像 [24], #w_6)
赋值 (牌图像 [25], #w_7)
赋值 (牌图像 [26], #w_8)
赋值 (牌图像 [27], #w_9)
赋值 (牌图像 [28], #f_d)
赋值 (牌图像 [29], #f_n)
赋值 (牌图像 [30], #f_x)
赋值 (牌图像 [31], #f_b)
赋值 (牌图像 [32], #s_z)
赋值 (牌图像 [33], #s_f)
赋值 (牌图像 [34], #s_b)
分割图片 (牌图像, 16, 32, #牌集, 34)
初始化牌局 ()
布置随机牌局 ()
牌局赋图片值 ()
工作区位置 ()
赋值 (移动否, 假)
赋值 (上张牌, )

.子程序 __启动窗口_尺寸被改变, 空白型, , 
工作区位置 ()

.子程序 工作区位置, 空白型, , 
.如果真 (小于 (_启动窗口., 551))
    赋值 (_启动窗口., 551)
.如果真结束
.如果真 (小于 (_启动窗口., 558))
    赋值 (_启动窗口., 558)
.如果真结束
赋值 (., 相减 (取整 (相除 (相减 (_启动窗口., .), 2)), 3))
赋值 (., 取整 (相除 (相减 (_启动窗口., 45, .), 2)))

.子程序 __启动窗口_可否被关闭, 逻辑型, , 
.如果真 (等于 (信息框 (“您真的要退出吗？”, 相加 (#询问图标, #是否钮), “请示您一下...”), #是钮))
    返回 (真)
.如果真结束
返回 (假)

.子程序 _编辑框1_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (等于 (选择有效, 真))
    .如果 (等于 (横或竖移, 真))
        .如果 (等于 (键代码, 37)) ' 选中的牌组向左移动
            移动 (1)
        .否则
            .如果真 (等于 (键代码, 39)) ' 选中的牌组向右移动
                移动 (2)
            .如果真结束
            
        .如果结束
        
    .否则
        .如果 (等于 (键代码, 38))
            移动 (3)
        .否则
            .如果真 (等于 (键代码, 40)) ' 选中的牌组向上移动
                移动 (4)
            .如果真结束
            
        .如果结束
        
    .如果结束
    
.如果真结束


.子程序 _打开牌局_被选择, 空白型, , 
.局部变量 index, 字节型, , , 

.如果 (并且 (小于 (剩余牌数, 136), 大于 (剩余牌数, 0)))
    赋值 (index, 信息框 (“本局游戏还没有结束，您真的要重来吗？”, 相加 (#询问图标, #是否钮), “请示您一下...”))
    .如果真 (等于 (index, #是钮))
        .如果真 (并且 (打开 (), 不等于 (., “”)))
            打开牌局操作 (.)
        .如果真结束
        
    .如果真结束
    
.否则
    .如果真 (并且 (打开 (), 不等于 (., “”)))
        打开牌局操作 (.)
    .如果真结束
    
.如果结束


.子程序 _关闭按钮_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (., 假)

.子程序 _关于_被选择, 空白型, , 
载入 (关于窗口, _启动窗口, 真)

.子程序 _结束游戏_被选择, 空白型, , 
.如果真 (等于 (信息框 (“您真的要退出吗？”, 相加 (#询问图标, #是否钮), “请示您一下...”), #是钮))
    结束 ()
.如果真结束


.子程序 _牌框_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 被点牌, 图片框, , , 

.如果真 (等于 (移动否, 假))
    赋值 (被点牌, 取事件组件 ())
    .如果真 (或者 (等于 (选择有效, 假), 小于 (被点牌., .), 大于 (被点牌., 相加 (., .)), 小于 (被点牌., .), 大于 (被点牌., 相加 (., .))))
        赋值 (., #红色)
        赋值 (选择有效, 假)
        赋值 (., 假)
        清除数组 (原始牌组)
        清除数组 (现行牌组)
        赋值 (可否移动, 真)
    .如果真结束
    赋值 (移动起点.i, 相加 (纵向位置, 被点牌.))
    赋值 (移动起点.j, 相加 (横向位置, 被点牌.))
.如果真结束
赋值 (鼠标右键, 真)

.子程序 _牌框_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 被点牌, 牌, , , 
.局部变量 dx, 空白型, , , 
.局部变量 dy, 空白型, , , 
.局部变量 当前牌, 图片框, , , 

赋值 (当前牌, 取事件组件 ())
赋值 (被点牌.i, 相减 (移动起点.i, 求余数 (移动起点.i, 64)))
赋值 (被点牌.j, 相减 (移动起点.j, 求余数 (移动起点.j, 32)))
.如果 (等于 (当前牌, 上张牌))
    .如果真 (并且 (等于 (当前牌., 被点牌.i), 等于 (当前牌., 被点牌.j), 可否移动))
        赋值 (dy, 相加 (相减 (纵向位置, 移动起点.i), 被点牌.i))
        赋值 (dx, 相加 (相减 (横向位置, 移动起点.j), 被点牌.j))
        输出调试文本 (相加 (到文本 (dy), “,”, 到文本 (dx)))
        .如果 (大于 (取绝对值 (dx), 取绝对值 (dy))) ' 横向移动
            .如果 (大于 (dx, 0)) ' 右
                赋值 (移动终点, 取可移动牌 (被点牌, 1, 0))
            .否则
                赋值 (移动终点, 取可移动牌 (被点牌, -1, 0))
            .如果结束
            赋值 (横或竖移, 真)
            赋值 (., 8)
            赋值 (., min (被点牌.j, 相乘 (相减 (移动终点.j, 1), 32)))
            赋值 (., 被点牌.i)
            赋值 (., 相加 (取绝对值 (相减 (被点牌.j, 相乘 (相减 (移动终点.j, 1), 32))), 32))
            赋值 (., 真)
        .否则
            .如果真 (小于 (取绝对值 (dx), 取绝对值 (dy))) ' 纵向移动
                .如果 (大于 (dy, 0)) ' 下
                    赋值 (移动终点, 取可移动牌 (被点牌, 0, 1))
                .否则
                    赋值 (移动终点, 取可移动牌 (被点牌, 0, -1))
                .如果结束
                赋值 (横或竖移, 假)
                赋值 (., 8)
                赋值 (., min (被点牌.i, 相乘 (相减 (移动终点.i, 1), 64)))
                赋值 (., 相加 (取绝对值 (相减 (被点牌.i, 相乘 (相减 (移动终点.i, 1), 64))), 64))
                赋值 (., 被点牌.j)
                赋值 (., 真)
            .如果真结束
            
        .如果结束
        输出调试文本 (相加 (到文本 (.), “,”, 到文本 (.), “;”, 到文本 (.), “,”, 到文本 (.)))
    .如果真结束
    
.否则
    .如果 (并且 (选择有效, 鼠标右键))
        赋值 (dy, 相减 (当前牌., 被点牌.i))
        赋值 (dx, 相减 (当前牌., 被点牌.j))
        .如果 (横或竖移) ' 横向移动
            .如果 (小于 (dx, 0))
                移动 (1)
            .否则
                .如果真 (大于 (dx, 0))
                    移动 (2)
                .如果真结束
                
            .如果结束
            
        .否则
            .如果 (小于 (dy, 0))
                移动 (3)
            .否则
                .如果真 (大于 (dy, 0))
                    移动 (4)
                .如果真结束
                
            .如果结束
            
        .如果结束
        赋值 (移动起点.i, 当前牌.)
        赋值 (移动起点.j, 当前牌.)
    .否则
        赋值 (上张牌., 0)
        赋值 (当前牌., 5)
        当前牌.刷新显示 ()
        赋值 (上张牌, 当前牌)
        
    .如果结束
    
.如果结束


.子程序 取可移动牌, 牌, , 
.参数 起点, 牌, , 
.参数 横向, 空白型, , 1:右,-1:左,0:不变
.参数 纵向, 空白型, , 1:下,-1:上,0:不变

.局部变量 i, 空白型, , , 
.局部变量 j, 空白型, , , 
.局部变量 结果, 牌, , , 

赋值 (i, 相加 (相除 (起点.i, 64), 1))
赋值 (j, 相加 (相除 (起点.j, 32), 1))
赋值 (结果.i, i)
赋值 (结果.j, j)
.判断循环首 (真)
    赋值 (i, 相加 (i, 纵向))
    赋值 (j, 相加 (j, 横向))
    .如果真 (或者 (小于 (i, 1), 大于 (i, 8), 小于 (j, 1), 大于 (j, 17)))
        跳出循环 ()
    .如果真结束
    .如果真 (等于 (牌局 [i] [j], 0))
        跳出循环 ()
    .如果真结束
    赋值 (结果.i, i)
    赋值 (结果.j, j)
.判断循环尾 ()
返回 (结果)

.子程序 _牌框_鼠标右键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 临时牌组, 牌组, , , 
.局部变量 count, 整数型, , , 
.局部变量 起点牌, 牌, , , 

赋值 (鼠标右键, 假)
.如果真 (等于 (移动否, 假))
    赋值 (可否移动, 假)
    赋值 (起点牌.i, 相加 (取整 (相除 (移动起点.i, 64)), 1))
    赋值 (起点牌.j, 相加 (取整 (相除 (移动起点.j, 32)), 1))
    .如果 (并且 (等于 (., 真), 或者 (不等于 (起点牌.i, 移动终点.i), 不等于 (起点牌.j, 移动终点.j))))
        清除数组 (原始牌组)
        清除数组 (现行牌组)
        .如果 (等于 (横或竖移, 真))
            .变量循环首 (min (起点牌.j, 移动终点.j), max (起点牌.j, 移动终点.j), 1, count)
                赋值 (临时牌组.牌.i, 起点牌.i)
                赋值 (临时牌组.牌.j, count)
                赋值 (临时牌组.索引, 牌局 [起点牌].i [count])
                加入成员 (原始牌组, 临时牌组)
            .变量循环尾 ()
        .否则
            .变量循环首 (min (起点牌.i, 移动终点.i), max (起点牌.i, 移动终点.i), 1, count)
                赋值 (临时牌组.牌.i, count)
                赋值 (临时牌组.牌.j, 起点牌.j)
                赋值 (临时牌组.索引, 牌局 [count] [起点牌].j)
                加入成员 (原始牌组, 临时牌组)
            .变量循环尾 ()
        .如果结束
        赋值 (选择有效, 真)
        .变量循环首 (1, 取数组成员数 (原始牌组), 1, count)
            .如果真 (等于 (原始牌组 [count], 索引, 0))
                赋值 (选择有效, 假)
            .如果真结束
            
        .变量循环尾 ()
        .如果 (选择有效)
            赋值 (., #黄色)
            复制数组 (现行牌组, 原始牌组)
        .否则
            赋值 (., 假)
        .如果结束
        
    .否则
        赋值 (选择有效, 假)
        赋值 (可否移动, 假)
        清除数组 (原始牌组)
        清除数组 (现行牌组)
        赋值 (., 假)
    .如果结束
    
.如果真结束


.子程序 _牌框_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 被点牌, 图片框, , , 
.局部变量 临时牌, 牌, , , 

赋值 (鼠标右键, 假)
.如果真 (等于 (开始时间, 0))
    赋值 (开始时间, 取启动时间 ())
    输出调试文本 (“用户开始操作，纪录开始时间。”)
.如果真结束
赋值 (被点牌, 取事件组件 ())
赋值 (临时牌.i, 相加 (取整 (相除 (被点牌., 64)), 1))
赋值 (临时牌.j, 相加 (取整 (相除 (被点牌., 32)), 1))
.如果 (等于 (相加 (被点牌1.i, 被点牌1.j), 0))
    赋值 (被点牌1.i, 临时牌.i)
    赋值 (被点牌1.j, 临时牌.j)
    赋值 (., 被点牌.)
    赋值 (., 被点牌.)
    赋值 (., 真)
.否则
    .如果 (或者 (不等于 (被点牌1.i, 临时牌.i), 不等于 (被点牌1.j, 临时牌.j)))
        赋值 (被点牌2.i, 临时牌.i)
        赋值 (被点牌2.j, 临时牌.j)
        赋值 (., 被点牌.)
        赋值 (., 被点牌.)
        赋值 (., 真)
        刷新显示 ()
    .否则
        赋值 (被点牌1.i, 0)
        赋值 (被点牌1.j, 0)
        赋值 (., 假)
    .如果结束
    
.如果结束
.如果真 (并且 (不等于 (被点牌1.j, 0), 不等于 (被点牌1.j, 0), 不等于 (被点牌2.i, 0), 不等于 (被点牌2.j, 0)))
    吃牌识别 () ' 执行识别操作
    赋值 (被点牌1.i, 0)
    赋值 (被点牌1.j, 0)
    赋值 (被点牌2.i, 0)
    赋值 (被点牌2.j, 0)
    延时 (100)
.如果真结束


.子程序 _随机牌局_被选择, 空白型, , 
.局部变量 index, 字节型, , , 

赋值 (index, #是钮)
.如果 (并且 (小于 (剩余牌数, 136), 大于 (剩余牌数, 0)))
    输出调试文本 (到文本 (剩余牌数))
    赋值 (index, 信息框 (“本局游戏还没有结束，您真的要重来吗？”, 相加 (#询问图标, #是否钮), “请示您一下...”))
.否则
    
.如果结束
.如果真 (等于 (index, #是钮))
    清除数组 (原始牌组)
    清除数组 (现行牌组)
    布置随机牌局 ()
    牌局赋图片值 ()
.如果真结束


.子程序 _选择标签1_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (被点牌1.i, 0)
赋值 (被点牌1.j, 0)
赋值 (., 假)

.子程序 _游戏规则_被选择, 空白型, , 
赋值 (., 相减 (取整 (相除 (相减 (_启动窗口., .), 2)), 3))
赋值 (., 取整 (相除 (相减 (_启动窗口., 49, .), 2)))
赋值 (., 真)

.子程序 min, 整数型, , 
.参数 num1, 整数型, , 
.参数 num2, 整数型, , 

.如果 (小于 (num1, num2))
    返回 (num1)
.否则
    返回 (num2)
.如果结束


.子程序 max, 整数型, , 
.参数 num1, 整数型, , 
.参数 num2, 整数型, , 

.如果 (大于 (num1, num2))
    返回 (num1)
.否则
    返回 (num2)
.如果结束


.子程序 布置随机牌局, 空白型, , 
.局部变量 当前牌, 字节型, , , 
.局部变量 出牌历史, 整数型, , "34", 记录出牌次数
.局部变量 有效, 逻辑型, , , 
.局部变量 i, 整数型, , , 
.局部变量 j, 整数型, , , 
.局部变量 txt, 文本型, , , 调试期间使用

数组清零 (牌局)
赋值 (当前牌, 0)
数组清零 (出牌历史)
置随机数种子 ()
.变量循环首 (1, 8, 1, i)
    .变量循环首 (1, 17, 1, j)
        赋值 (有效, 真)
        .判断循环首 (等于 (有效, 真))
            赋值 (当前牌, 取随机数 (1, 34))
            .如果真 (小于 (出牌历史 [当前牌], 4))
                赋值 (有效, 假)
                赋值 (出牌历史 [当前牌], 相加 (出牌历史 [当前牌], 1))
                赋值 (牌局 [i] [j], 当前牌)
            .如果真结束
            
        .判断循环尾 ()
    .变量循环尾 ()
.变量循环尾 ()
.如果真 (等于 (是否为调试版 (), 真)) ' 调试版本输出牌局文件内容
    .计次循环首 (8, i)
        赋值 (txt, “”)
        .计次循环首 (17, j)
            .如果 (小于 (牌局 [i] [j], 10))
                赋值 (txt, 相加 (txt, “0”, 到文本 (牌局 [i] [j])))
            .否则
                赋值 (txt, 相加 (txt, 到文本 (牌局 [i] [j])))
            .如果结束
            
        .计次循环尾 ()
        输出调试文本 (txt)
    .计次循环尾 ()
.如果真结束
赋值 (剩余牌数, 136)

.子程序 撤消移动, 空白型, , 
.局部变量 移动方向, 逻辑型, , , 真为横，假为竖
.局部变量 count, 整数型, , , 
.局部变量 最小值, 字节型, , , 
.局部变量 最大值, 字节型, , , 

.如果真 (大于或等于 (取数组成员数 (原始牌组), 2))
    .如果 (等于 (原始牌组 [1].牌.i, 原始牌组 [2].牌.i))
        赋值 (移动方向, 真)
    .否则
        赋值 (移动方向, 假)
    .如果结束
    .如果 (移动方向)
        赋值 (最小值, min (原始牌组 [1].牌.j, 现行牌组 [1].牌.j))
        赋值 (最大值, max (原始牌组 [取数组成员数 (原始牌组)].牌.j, 现行牌组 [取数组成员数 (现行牌组)].牌.j))
        .变量循环首 (最小值, 最大值, 1, count)
            赋值 (牌图片框 [原始牌组] [1].牌.i [count], , 假)
            赋值 (牌局 [原始牌组] [1].牌.i [count], 0)
        .变量循环尾 ()
        .变量循环首 (1, 取数组成员数 (原始牌组), 1, count)
            赋值 (牌图片框 [原始牌组] [count], 牌.i [原始牌组] [count], 牌.j, , 牌图像 [原始牌组] [count], 索引)
            赋值 (牌局 [原始牌组] [count], 牌.i [原始牌组] [count], 牌.j, 原始牌组 [count], 索引)
            赋值 (牌图片框 [原始牌组] [count], 牌.i [原始牌组] [count], 牌.j, , 真)
        .变量循环尾 ()
    .否则
        赋值 (最小值, min (原始牌组 [1].牌.i, 现行牌组 [1].牌.i))
        赋值 (最大值, max (原始牌组 [取数组成员数 (原始牌组)].牌.i, 现行牌组 [取数组成员数 (现行牌组)].牌.i))
        .变量循环首 (最小值, 最大值, 1, count)
            赋值 (牌图片框 [count] [原始牌组] [1].牌.j, , 假)
            赋值 (牌局 [count] [原始牌组] [1].牌.j, 0)
        .变量循环尾 ()
        .变量循环首 (1, 取数组成员数 (原始牌组), 1, count)
            赋值 (牌图片框 [原始牌组] [count], 牌.i [原始牌组] [count], 牌.j, , 牌图像 [原始牌组] [count], 索引)
            赋值 (牌局 [原始牌组] [count], 牌.i [原始牌组] [count], 牌.j, 原始牌组 [count], 索引)
            赋值 (牌图片框 [原始牌组] [count], 牌.i [原始牌组] [count], 牌.j, , 真)
        .变量循环尾 ()
    .如果结束
    赋值 (移动否, 假)
.如果真结束


.子程序 吃牌识别, 空白型, , 
.局部变量 牌位置类型, 字节型, , , i,j不同为1、i或j同为2、相邻为3
.局部变量 可吃否, 逻辑型, , , 
.局部变量 逻辑1, 逻辑型, , , 逻辑1-4用于附属判断可吃否，且逻辑1、2配对，逻辑3、4配对
.局部变量 逻辑2, 逻辑型, , , 
.局部变量 逻辑3, 逻辑型, , , 
.局部变量 逻辑4, 逻辑型, , , 

输出调试文本 (“进入吃牌识别模块”)
赋值 (可吃否, 假)
.如果真 (等于 (牌局 [被点牌1].i [被点牌1].j, 牌局 [被点牌2].i [被点牌2].j))
    .如果 (并且 (不等于 (被点牌1.i, 被点牌2.i), 不等于 (被点牌1.j, 被点牌2.j)))
        赋值 (牌位置类型, 1)
    .否则
        .如果 (或者 (等于 (取绝对值 (相减 (被点牌1.i, 被点牌2.i)), 1), 等于 (取绝对值 (相减 (被点牌1.j, 被点牌2.j)), 1)))
            赋值 (牌位置类型, 3)
        .否则
            赋值 (牌位置类型, 2)
        .如果结束
        
    .如果结束
    .如果真 (等于 (牌位置类型, 1)) ' i,j不同
        .如果 (小于 (被点牌1.i, 被点牌2.i))
            .如果 (小于 (被点牌1.j, 被点牌2.j)) ' 被点牌1在左上位置
                赋值 (逻辑1, 行判断 (被点牌1.i, 相加 (被点牌1.j, 1), 被点牌2.j))
                赋值 (逻辑2, 列判断 (被点牌2.j, 被点牌1.i, 相减 (被点牌2.i, 1)))
                赋值 (逻辑3, 行判断 (被点牌2.i, 被点牌1.j, 相减 (被点牌2.j, 1)))
                赋值 (逻辑4, 列判断 (被点牌1.j, 相加 (被点牌1.i, 1), 被点牌2.i))
            .否则
                赋值 (逻辑1, 行判断 (被点牌1.i, 被点牌2.j, 相减 (被点牌1.j, 1))) ' 被点牌1在右上位置
                赋值 (逻辑2, 列判断 (被点牌2.j, 被点牌1.i, 相减 (被点牌2.i, 1)))
                赋值 (逻辑3, 行判断 (被点牌2.i, 相加 (被点牌2.j, 1), 被点牌1.j))
                赋值 (逻辑4, 列判断 (被点牌1.j, 相加 (被点牌1.i, 1), 被点牌2.i))
            .如果结束
            
        .否则
            .如果 (小于 (被点牌1.j, 被点牌2.j)) ' 被点牌1在左下位置
                赋值 (逻辑1, 行判断 (被点牌1.i, 相加 (被点牌1.j, 1), 被点牌2.j))
                赋值 (逻辑2, 列判断 (被点牌2.j, 相加 (被点牌2.i, 1), 被点牌1.i))
                赋值 (逻辑3, 行判断 (被点牌2.i, 被点牌1.j, 相减 (被点牌2.j, 1)))
                赋值 (逻辑4, 列判断 (被点牌1.j, 被点牌2.i, 相减 (被点牌1.i, 1)))
            .否则
                赋值 (逻辑1, 行判断 (被点牌1.i, 被点牌2.j, 相减 (被点牌1.j, 1))) ' 被点牌1在右下位置
                赋值 (逻辑2, 列判断 (被点牌2.j, 相加 (被点牌2.i, 1), 被点牌1.i))
                赋值 (逻辑3, 行判断 (被点牌2.i, 相加 (被点牌2.j, 1), 被点牌1.j))
                赋值 (逻辑4, 列判断 (被点牌1.j, 被点牌2.i, 相减 (被点牌1.i, 1)))
            .如果结束
            
        .如果结束
        .如果真 (或者 (并且 (逻辑1, 逻辑2), 并且 (逻辑3, 逻辑4)))
            赋值 (可吃否, 真)
        .如果真结束
        
    .如果真结束
    .如果真 (等于 (牌位置类型, 2)) ' i或j同
        .如果 (等于 (被点牌1.i, 被点牌2.i)) ' 同行，用行判断
            .如果 (小于 (被点牌1.j, 被点牌2.j)) ' 被点牌1在左
                赋值 (逻辑1, 行判断 (被点牌1.i, 相加 (被点牌1.j, 1), 相减 (被点牌2.j, 1)))
            .否则
                赋值 (逻辑1, 行判断 (被点牌1.i, 相加 (被点牌2.j, 1), 相减 (被点牌1.j, 1))) ' 被点牌1在右
            .如果结束
            
        .否则
            .如果真 (等于 (被点牌1.j, 被点牌2.j)) ' 同列，用列判断
                .如果 (小于 (被点牌1.i, 被点牌2.i)) ' 被点牌1在上
                    赋值 (逻辑1, 列判断 (被点牌1.j, 相加 (被点牌1.i, 1), 相减 (被点牌2.i, 1)))
                .否则
                    赋值 (逻辑1, 列判断 (被点牌1.j, 相加 (被点牌2.i, 1), 相减 (被点牌1.i, 1)))
                .如果结束
                
            .如果真结束
            
        .如果结束
        .如果真 (逻辑1)
            赋值 (可吃否, 真)
        .如果真结束
        
    .如果真结束
    .如果真 (等于 (牌位置类型, 3)) ' 两牌相邻
        赋值 (可吃否, 真)
    .如果真结束
    
.如果真结束
.如果真 (等于 (移动否, 真))
    .如果真 (并且 (等于 (判断选择点是否在移动牌组内 (被点牌1), 假), 等于 (判断选择点是否在移动牌组内 (被点牌2), 假)))
        赋值 (可吃否, 假)
    .如果真结束
    
.如果真结束
.如果 (可吃否)
    赋值 (牌图片框 [被点牌1].i [被点牌1].j, , 假)
    赋值 (牌局 [被点牌1].i [被点牌1].j, 0)
    赋值 (牌图片框 [被点牌2].i [被点牌2].j, , 假)
    赋值 (牌局 [被点牌2].i [被点牌2].j, 0)
    赋值 (选择有效, 假)
    清除数组 (原始牌组)
    清除数组 (现行牌组)
    赋值 (., 假)
    赋值 (., 假)
    赋值 (., 假)
    赋值 (移动否, 假)
    赋值 (剩余牌数, 相减 (剩余牌数, 2))
    .如果真 (小于 (剩余牌数, 1))
        .如果真 (等于 (信息框 (相加 (“恭喜你，把牌拾完了！”, 字符 (13), 字符 (10), “耗时：”, 到文本 (取整 (相除 (相减 (取启动时间 (), 开始时间), 1000))), “秒！”, 字符 (13), 字符 (10), “继续玩请按确认”), 相加 (#信息图标, #确认取消钮), “完成任务！”), #确认钮))
            _随机牌局_被选择 ()
        .如果真结束
        
    .如果真结束
    
.否则
    赋值 (., 假)
    赋值 (., 假)
    .如果真 (并且 (等于 (., 真), 等于 (., #黄色)))
        撤消移动 ()
        赋值 (选择有效, 假)
        清除数组 (原始牌组)
        清除数组 (现行牌组)
        赋值 (., 假)
    .如果真结束
    
.如果结束


.子程序 行判断, 逻辑型, , 
.参数 行号, 字节型, , 
.参数 列起, 字节型, , 
.参数 列止, 字节型, , 

.局部变量 列, 整数型, , , 
.局部变量 有效否, 逻辑型, , , 

赋值 (有效否, 真)
.变量循环首 (列起, 列止, 1, 列)
    .如果真 (不等于 (牌局 [行号] [列], 0))
        赋值 (有效否, 假)
        跳出循环 ()
    .如果真结束
    
.变量循环尾 ()
返回 (有效否)

.子程序 列判断, 逻辑型, , 
.参数 列号, 字节型, , 
.参数 行起, 字节型, , 
.参数 行止, 字节型, , 

.局部变量 行, 整数型, , , 
.局部变量 有效否, 逻辑型, , , 

赋值 (有效否, 真)
.变量循环首 (行起, 行止, 1, 行)
    .如果真 (不等于 (牌局 [行] [列号], 0))
        赋值 (有效否, 假)
        跳出循环 ()
    .如果真结束
    
.变量循环尾 ()
返回 (有效否)

.子程序 初始化牌局, 空白型, , 
.局部变量 i, 整数型, , , 
.局部变量 j, 整数型, , , 

.计次循环首 (8, i)
    .计次循环首 (17, j)
        复制窗口组件 (牌图片框 [i] [j])
        赋值 (牌图片框 [i] [j], , 相乘 (相减 (j, 1), .))
        赋值 (牌图片框 [i] [j], , 相乘 (相减 (i, 1), .))
    .计次循环尾 ()
.计次循环尾 ()

.子程序 牌局赋图片值, 空白型, , 
.局部变量 i, 整数型, , , 
.局部变量 j, 整数型, , , 

.计次循环首 (8, i)
    .计次循环首 (17, j)
        赋值 (牌图片框 [i] [j], , 牌图像 [牌局] [i] [j])
        赋值 (牌图片框 [i] [j], , 真)
    .计次循环尾 ()
.计次循环尾 ()
赋值 (开始时间, 0)
赋值 (剩余牌数, 136)
输出调试文本 (“开始时间归零”)

.子程序 判断选择点是否在移动牌组内, 逻辑型, , 
.参数 牌, 牌, , 

.局部变量 count, 整数型, , , 

.变量循环首 (1, 取数组成员数 (现行牌组), 1, count)
    .如果真 (并且 (等于 (牌.i, 现行牌组 [count], 牌.i), 等于 (牌.j, 现行牌组 [count], 牌.j)))
        返回 (真)
    .如果真结束
    
.变量循环尾 ()
返回 (假)

.子程序 __启动窗口_可否被关闭1, 逻辑型, , 
.如果真 (等于 (信息框 (“您真的要退出吗？”, 相加 (#询问图标, #是否钮), “请示您一下...”), #是钮))
    返回 (真)
.如果真结束
返回 (假)

.子程序 打开牌局操作, 逻辑型, , 
.参数 文件名, 文本型, , 

.局部变量 临时牌局, 整数型, , "8,17", 
.局部变量 牌局历史, 整数型, , "34", 
.局部变量 文件句柄, 整数型, , , 
.局部变量 txt, 文本型, , , 
.局部变量 count1, 整数型, , , 
.局部变量 count2, 整数型, , , 
.局部变量 文件合法, 逻辑型, , , 

赋值 (文件句柄, 打开文件 (文件名, #读入, #禁止写))
移到文件首 (文件句柄)
.计次循环首 (8, count1)
    赋值 (txt, 读入一行 (文件句柄))
    赋值 (txt, 删首尾空 (txt))
    .计次循环首 (17, count2)
        赋值 (临时牌局 [count1] [count2], 到数值 (取文本中间 (txt, 相加 (1, 相乘 (相减 (count2, 1), 2)), 2)))
    .计次循环尾 ()
.计次循环尾 ()
数组清零 (牌局历史)
.计次循环首 (8, count1)
    .计次循环首 (17, count2)
        .如果真 (或者 (大于 (临时牌局 [count1] [count2], 0), 小于或等于 (临时牌局 [count1] [count2], 34)))
            赋值 (牌局历史 [临时牌局] [count1] [count2], 相加 (牌局历史 [临时牌局] [count1] [count2], 1))
        .如果真结束
        
    .计次循环尾 ()
.计次循环尾 ()
赋值 (文件合法, 真)
.计次循环首 (34, count1)
    .如果真 (不等于 (牌局历史 [count1], 4))
        赋值 (文件合法, 假)
        跳出循环 ()
    .如果真结束
    
.计次循环尾 ()
.如果 (文件合法)
    复制数组 (牌局, 临时牌局)
    重定义数组 (牌局, 真, 8, 17)
    牌局赋图片值 ()
    返回 (真)
.否则
    信息框 (“牌局文件不符合规定，无法读入！”, #错误图标, “Error...”)
    返回 (假)
.如果结束


.子程序 移动, 逻辑型, , 
.参数 方向, 字节型, , 1向左，2向右，3向上，4向下

.局部变量 count, 整数型, , , 

.如果真 (等于 (方向, 1))
    .如果 (等于 (现行牌组 [1].牌.j, 1))
        返回 (假)
    .否则
        .如果 (不等于 (牌局 [现行牌组] [1].牌.i [相减 (现行牌组 [1].牌.j, 1)], 0))
            返回 (假)
        .否则
            .变量循环首 (1, 取数组成员数 (现行牌组), 1, count)
                赋值 (牌图片框 [现行牌组] [count], 牌.i [相减 (现行牌组 [count], 牌.j, 1)]., 牌图像 [现行牌组] [count], 索引)
                赋值 (牌图片框 [现行牌组] [count], 牌.i [相减 (现行牌组 [count], 牌.j, 1)]., 真)
                赋值 (牌图片框 [现行牌组] [count], 牌.i [现行牌组] [count], 牌.j, , 假)
                赋值 (牌局 [现行牌组] [count], 牌.i [现行牌组] [count], 牌.j, 0)
                赋值 (牌局 [现行牌组] [count], 牌.i [相减 (现行牌组 [count], 牌.j, 1)], 现行牌组 [count], 索引)
                赋值 (现行牌组 [count], 牌.j, 相减 (现行牌组 [count], 牌.j, 1))
            .变量循环尾 ()
            赋值 (., 相减 (., 32))
            赋值 (移动否, 真)
            返回 (真)
        .如果结束
        
    .如果结束
    
.如果真结束
.如果真 (等于 (方向, 2))
    .如果 (等于 (现行牌组 [取数组成员数 (现行牌组)].牌.j, 17))
        返回 (假)
    .否则
        .如果 (不等于 (牌局 [现行牌组] [取数组成员数 (现行牌组)].牌.i [相加 (现行牌组 [取数组成员数 (现行牌组)].牌.j, 1)], 0))
            返回 (假)
        .否则
            .变量循环首 (取数组成员数 (现行牌组), 1, -1, count)
                赋值 (牌图片框 [现行牌组] [count], 牌.i [相加 (现行牌组 [count], 牌.j, 1)]., 牌图像 [现行牌组] [count], 索引)
                赋值 (牌图片框 [现行牌组] [count], 牌.i [相加 (现行牌组 [count], 牌.j, 1)]., 真)
                赋值 (牌图片框 [现行牌组] [count], 牌.i [现行牌组] [count], 牌.j, , 假)
                赋值 (牌局 [现行牌组] [count], 牌.i [现行牌组] [count], 牌.j, 0)
                赋值 (牌局 [现行牌组] [count], 牌.i [相加 (现行牌组 [count], 牌.j, 1)], 现行牌组 [count], 索引)
                赋值 (现行牌组 [count], 牌.j, 相加 (现行牌组 [count], 牌.j, 1))
            .变量循环尾 ()
            赋值 (., 相加 (., 32))
            赋值 (移动否, 真)
            返回 (真)
        .如果结束
        
    .如果结束
    
.如果真结束
.如果真 (等于 (方向, 3))
    .如果 (等于 (现行牌组 [1].牌.i, 1))
        返回 (假)
    .否则
        .如果 (不等于 (牌局 [相减 (现行牌组 [1].牌.i, 1)] [现行牌组] [1].牌.j, 0))
            返回 (假)
        .否则
            .变量循环首 (1, 取数组成员数 (现行牌组), 1, count)
                赋值 (牌图片框 [相减 (现行牌组 [count], 牌.i, 1)] [现行牌组] [count], 牌.j, , 牌图像 [现行牌组] [count], 索引)
                赋值 (牌图片框 [相减 (现行牌组 [count], 牌.i, 1)] [现行牌组] [count], 牌.j, , 真)
                赋值 (牌图片框 [现行牌组] [count], 牌.i [现行牌组] [count], 牌.j, , 假)
                赋值 (牌局 [现行牌组] [count], 牌.i [现行牌组] [count], 牌.j, 0)
                赋值 (牌局 [相减 (现行牌组 [count], 牌.i, 1)] [现行牌组] [count], 牌.j, 现行牌组 [count], 索引)
                赋值 (现行牌组 [count], 牌.i, 相减 (现行牌组 [count], 牌.i, 1))
            .变量循环尾 ()
            赋值 (., 相减 (., 64))
            赋值 (移动否, 真)
            返回 (真)
        .如果结束
        
    .如果结束
    
.如果真结束
.如果真 (等于 (方向, 4))
    .如果 (等于 (现行牌组 [取数组成员数 (现行牌组)].牌.i, 8))
        返回 (假)
    .否则
        .如果 (不等于 (牌局 [相加 (现行牌组 [取数组成员数 (现行牌组)].牌.i, 1)] [现行牌组] [取数组成员数 (现行牌组)].牌.j, 0))
            返回 (假)
        .否则
            .变量循环首 (取数组成员数 (现行牌组), 1, -1, count)
                赋值 (牌图片框 [相加 (现行牌组 [count], 牌.i, 1)] [现行牌组] [count], 牌.j, , 牌图像 [现行牌组] [count], 索引)
                赋值 (牌图片框 [相加 (现行牌组 [count], 牌.i, 1)] [现行牌组] [count], 牌.j, , 真)
                赋值 (牌图片框 [现行牌组] [count], 牌.i [现行牌组] [count], 牌.j, , 假)
                赋值 (牌局 [现行牌组] [count], 牌.i [现行牌组] [count], 牌.j, 0)
                赋值 (牌局 [相加 (现行牌组 [count], 牌.i, 1)] [现行牌组] [count], 牌.j, 现行牌组 [count], 索引)
                赋值 (现行牌组 [count], 牌.i, 相加 (现行牌组 [count], 牌.i, 1))
            .变量循环尾 ()
            赋值 (., 相加 (., 64))
            赋值 (移动否, 真)
            返回 (真)
        .如果结束
        
    .如果结束
    
.如果真结束
返回 (假)

.子程序 数组清零, 空白型, , 
.参数 数组, 整数型, 数组, 

.局部变量 i, 整数型, , , 
.局部变量 k, 整数型, , , 
.局部变量 j, 整数型, , , 

赋值 (k, 取数组下标 (数组, 2))
.如果 (大于 (k, 0))
    .计次循环首 (取数组下标 (数组, 1), i)
         ' .计次循环首 (k, j)
            赋值 (数组 [i] [j], 0)
        .计次循环尾 ()
    .计次循环尾 ()
.否则
    .计次循环首 (取数组成员数 (数组), i)
        赋值 (数组 [i], 0)
    .计次循环尾 ()
.如果结束


.子程序 _牌框_被双击, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (鼠标右键, 假)
赋值 (移动否, 假)
赋值 (., 假)
.如果真 (并且 (等于 (., 真), 等于 (., #黄色)))
    撤消移动 ()
    赋值 (选择有效, 假)
    清除数组 (原始牌组)
    清除数组 (现行牌组)
    赋值 (., 假)
.如果真结束


.子程序 _嫩绿_被选择, 空白型, , 
赋值 (., #嫩绿)

.子程序 _红色_被选择, 空白型, , 
赋值 (., #红色)

.子程序 _绿色_被选择, 空白型, , 
赋值 (., #绿色)

.子程序 _蓝色_被选择, 空白型, , 
赋值 (., #蓝色)

.子程序 _黑色_被选择, 空白型, , 
赋值 (., #黑色)

.子程序 _粉红_被选择, 空白型, , 
赋值 (., #粉红)

.窗口程序集 窗口程序集2, , , 

.子程序 _关于窗口_创建完毕, 空白型, , 
赋值 (., #s_z)
赋值 (., #s_f)
赋值 (., #s_b)
赋值 (关于窗口., 真)

.子程序 _关于窗口_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

关于窗口.销毁 ()


 ' 不属于任何一个程序集、类模块的函数：
