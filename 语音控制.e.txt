 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 630
    高度 = 508
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 1
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 真
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “语音控制”
    帮助文件名 = “”





 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 4 系统核心支持库
 ' ESpeechEngine 4AA6F3ADE9264fbe8B618A1FCD60364F 1 1 文本语音转换支持库
 ' ELogoPanel {23A4E57BA5304de090D70C8962302C3B} 1 0 易Logo支持库
 ' iext 27bb20fdd3e145e4bee3db39ddd6e64c 1 2 扩展界面支持库一





.窗口程序集 窗口程序集1, , , 

.程序集变量 常用语句1, 文本型, , "18", 
.程序集变量 常用语句2, 文本型, , "11", 
.程序集变量 步数, 整数型, , , 
.子程序 __启动窗口_创建完毕, 空白型, , 
_启动窗口.获取焦点 ()
赋值 (常用语句1, { “前进”, “后退”, “左转”, “右转”, “零”, “一”, “二”, “三”, “四”, “五”, “六”, “七”, “八”, “九”, “十”, “确定”, “取消” })
赋值 (常用语句2, { “一”, “二”, “三”, “四”, “五”, “六”, “七”, “八”, “九”, “十”, “零” })
赋值 (_启动窗口.可视, 真)
.如果 (等于 (信息框 (相加 (“请确定是否立即开始语音控制？”, #换行符, “运行本程序必须安装语言功能或WORD2003，及话筒！”), #确认取消钮, ), #确认钮))
    _开始按钮_被单击 ()
.否则
    
.如果结束
 ' 把常用的词汇加入到数组变量中

.子程序 _开始按钮_被单击, 空白型, , 
0.未知支持库函数_11 (0)
常用语句1.未知支持库函数_14 ()
 ' 把我们保存在常用语句中的词汇加入到常用语句中。

.子程序 _语音识别1_识别到语音, 空白型, , 
.参数 识别文本, 文本型, , 

赋值 (., 识别文本)
.如果真 (或者 (等于 (识别文本, “前进”), 发音比较 (“前进”, 取文本左边 (识别文本, 4), 真, 真)))
    赋值 (.标题, 识别文本)
    返回 ()
.如果真结束
.如果真 (或者 (等于 (识别文本, “后退”), 发音比较 (“后退”, 取文本左边 (识别文本, 4), 真, 真)))
    赋值 (.标题, 识别文本)
    返回 ()
.如果真结束
.如果真 (或者 (等于 (识别文本, “左转”), 发音比较 (“左转”, 取文本左边 (识别文本, 4), 真, 真)))
    赋值 (.标题, 识别文本)
    返回 ()
.如果真结束
.如果真 (或者 (等于 (识别文本, “右转”), 发音比较 (“右转”, 取文本左边 (识别文本, 4), 真, 真)))
    赋值 (.标题, 识别文本)
    返回 ()
.如果真结束
.如果真 (或者 (等于 (识别文本, “确定”), 发音比较 (“确定”, 取文本左边 (识别文本, 4), 真, 真)))
    _确定按钮_被单击 ()
    返回 ()
.如果真结束
.如果真 (或者 (等于 (识别文本, “取消”), 发音比较 (“取消”, 取文本左边 (识别文本, 4), 真, 真)))
    连续赋值 (“”, .标题, .标题)
    返回 ()
.如果真结束


.如果 (大于 (取代码 (识别文本, 1), 0)) ' 这里直接判断是不是数字,如果是,就加上,否则去除
    赋值 (.标题, 相加 (.标题, 到文本 (到数值 (取文本中间 (识别文本, 1, 1)))))
    返回 ()
.否则
    
.如果结束

.如果真 (或者 (等于 (识别文本, “一”), 发音比较 (“一”, 取文本左边 (识别文本, 2), 真, 真)))
    赋值 (.标题, 相加 (.标题, “1”))
.如果真结束
.如果真 (或者 (等于 (识别文本, “二”), 发音比较 (“二”, 取文本左边 (识别文本, 2), 真, 真)))
    赋值 (.标题, 相加 (.标题, “2”))
.如果真结束
.如果真 (或者 (等于 (识别文本, “三”), 发音比较 (“三”, 取文本左边 (识别文本, 2), 真, 真)))
    赋值 (.标题, 相加 (.标题, “3”))
.如果真结束
.如果真 (或者 (等于 (识别文本, “四”), 发音比较 (“四”, 取文本左边 (识别文本, 2), 真, 真)))
    赋值 (.标题, 相加 (.标题, “4”))
.如果真结束
.如果真 (或者 (等于 (识别文本, “五”), 发音比较 (“五”, 取文本左边 (识别文本, 2), 真, 真)))
    赋值 (.标题, 相加 (.标题, “5”))
.如果真结束
.如果真 (或者 (等于 (识别文本, “六”), 发音比较 (“六”, 取文本左边 (识别文本, 2), 真, 真)))
    赋值 (.标题, 相加 (.标题, “6”))
.如果真结束
.如果真 (或者 (等于 (识别文本, “七”), 发音比较 (“七”, 取文本左边 (识别文本, 2), 真, 真)))
    赋值 (.标题, 相加 (.标题, “7”))
.如果真结束
.如果真 (或者 (等于 (识别文本, “八”), 发音比较 (“八”, 取文本左边 (识别文本, 2), 真, 真)))
    赋值 (.标题, 相加 (.标题, “8”))
.如果真结束
.如果真 (或者 (等于 (识别文本, “九”), 发音比较 (“九”, 取文本左边 (识别文本, 2), 真, 真)))
    赋值 (.标题, 相加 (.标题, “9”))
.如果真结束
.如果真 (或者 (等于 (识别文本, “十”), 发音比较 (“十”, 取文本左边 (识别文本, 2), 真, 真)))
    赋值 (.标题, 相加 (.标题, “0”))
.如果真结束
.如果真 (或者 (等于 (识别文本, “零”), 发音比较 (“零”, 取文本左边 (识别文本, 2), 真, 真)))
    赋值 (.标题, 相加 (.标题, “0”))
.如果真结束


.子程序 __启动窗口_可否被关闭, 逻辑型, , 
未知支持库函数_12 ()

.子程序 _训练按钮_被单击, 空白型, , 
未知支持库函数_13 ()

.子程序 _按钮1_被单击, 空白型, , 
赋值 (.标题, 相加 (.标题, “1”))

.子程序 _按钮2_被单击, 空白型, , 
赋值 (.标题, 相加 (.标题, “2”))

.子程序 _按钮3_被单击, 空白型, , 
赋值 (.标题, 相加 (.标题, “3”))

.子程序 _按钮4_被单击, 空白型, , 
赋值 (.标题, 相加 (.标题, “4”))

.子程序 _按钮5_被单击, 空白型, , 
赋值 (.标题, 相加 (.标题, “5”))

.子程序 _按钮6_被单击, 空白型, , 
赋值 (.标题, 相加 (.标题, “6”))

.子程序 _按钮7_被单击, 空白型, , 
赋值 (.标题, 相加 (.标题, “7”))

.子程序 _按钮8_被单击, 空白型, , 
赋值 (.标题, 相加 (.标题, “8”))

.子程序 _按钮9_被单击, 空白型, , 
赋值 (.标题, 相加 (.标题, “9”))

.子程序 _按钮0_被单击, 空白型, , 
赋值 (.标题, 相加 (.标题, “0”))

.子程序 _确定按钮_被单击, 空白型, , 
.如果真 (或者 (等于 (.标题, “”), 等于 (.标题, “”)))
    返回 ()
.如果真结束

.判断开始 (等于 (.标题, “前进”))
    到数值 (.标题).未知支持库函数_1 ()
.判断 (等于 (.标题, “后退”))
    到数值 (.标题).未知支持库函数_2 ()
.判断 (等于 (.标题, “左转”))
    到数值 (.标题).未知支持库函数_3 ()
.判断 (等于 (.标题, “右转”))
    到数值 (.标题).未知支持库函数_4 ()
.默认
    
.判断结束
连续赋值 (“”, .标题, .标题)

.子程序 _前进按钮_被单击, 空白型, , 
赋值 (.标题, “前进”)

.子程序 _后退按钮_被单击, 空白型, , 
赋值 (.标题, “后退”)

.子程序 _左转按钮_被单击, 空白型, , 
赋值 (.标题, “左转”)

.子程序 _右转按钮_被单击, 空白型, , 
赋值 (.标题, “右转”)

.子程序 _取消按钮_被单击, 空白型, , 
连续赋值 (“”, .标题, .标题)

.子程序 _图片框2_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

161.发送信息 (2, 0)


.子程序 __启动窗口_尺寸被改变, 空白型, , 
2.移动 (2, 相减 (_启动窗口.宽度, 3), 相减 (_启动窗口.高度, 3))

.子程序 _训练按钮1_被单击, 空白型, , 
信息框 (相加 (“1：由于本软件使用了微软公司提供的语音识别引擎，所以，您在使用之前必须安装语音识别引擎。”, #换行符, “2.请到如下地址下载语音识别引擎：http://www.ie5.net/speechsoft/speechsdk51.exe.”, #换行符, “3.安装完成后，会在控制面板里出现[语音]选项，不过，现在的语音识别引擎只能识别英文，要想识别中文，还要安装中文语音包。”, #换行符, “4.中文语音包的下载地址：http://www.ie5.net/speechsoft/SpeechSDK51LangPack.exe。要注意的是，后者的安装路径必须与前者相同。”, #换行符, “5.执行[控制面板→语音]，打开语音属性对话框，在[语言]下选择[Microsoft Simplified Chinese…](简体中文)，再单击[训练配置文件]，按提示一步一步地进行语音训练就可完成语音配置。”, #换行符, “6.如果您已安装了Word 2003 那么就不用安装以上,语音包已自动安装。”, #换行符, “7.使用中直接对着话筒读出[前进]、[后退]、[左转]、[右转]、[确定]、[取消],系统会自动接收,读入数字时可以单读也可以连读，读[确定]后就可执行指令。”), 0, )



 ' 不属于任何一个程序集、类模块的函数：
