 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 410
    高度 = 371
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假



.常量 向上, "1", , 
.常量 向下, "2", , 
.常量 向左, "3", , 
.常量 向右, "4", , 
.常量 蛇蛋颜色, "255", , 
.常量 蛇颜色, "8445952", , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 5 系统核心支持库





.窗口程序集 窗口程序集1, , , 

.程序集变量 蛇长度, 整数型, , , 
.程序集变量 背景颜色, 整数型, , , 
.程序集变量 蛇数据, 整数型, , "0", 
.程序集变量 方向, 整数型, , , 
.程序集变量 开始, 整数型, , , 
.程序集变量 蛋位置, 整数型, , , 
.程序集变量 历史最长, 整数型, , , 
.程序集变量 蛋被吃掉, 逻辑型, , , 
.子程序 __启动窗口_创建完毕, 空白型, , 
.局部变量 x, 整数型, , , 

赋值 (蛇长度, 3)
赋值 (背景颜色, 取默认底色 ())
赋值 (., #蛇颜色)
赋值 (., #蛇颜色)
赋值 (., #蛇颜色)
赋值 (蛇数据, { 208, 207, 206 })
赋值 (方向, #向右)
赋值 (开始, 0)
赋值 (蛋被吃掉, 真)
刷新 ()

.子程序 刷新, 空白型, , 
.局部变量 所有编辑, 编辑框, , , 
.局部变量 i, 整数型, , , 

.计次循环首 (400, i)
    赋值 (所有编辑, 取标记组件 (i))
    赋值 (所有编辑., 背景颜色)
.计次循环尾 ()

.子程序 _开始按钮_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果 (并且 (等于 (字符 (键代码), “&”), 不等于 (方向, #向下)))
    赋值 (方向, #向上)
.否则
    .如果 (并且 (等于 (字符 (键代码), “(”), 不等于 (方向, #向上)))
        赋值 (方向, #向下)
    .否则
        .如果 (并且 (等于 (字符 (键代码), “%”), 不等于 (方向, #向右)))
            赋值 (方向, #向左)
        .否则
            .如果真 (并且 (等于 (字符 (键代码), “'”), 不等于 (方向, #向左)))
                赋值 (方向, #向右)
            .如果真结束
            
        .如果结束
        
    .如果结束
    
.如果结束


.子程序 _时钟1_周期事件, 空白型, , 
.局部变量 x, 整数型, , , 
.局部变量 所有编辑, 编辑框, , , 

.如果真 (等于 (开始, 1))
    刷新 ()
    .如果真 (等于 (蛋被吃掉, 真))
        刷蛋 ()
    .如果真结束
    显示蛋位置 ()
    赋值 (., 到文本 (取数组成员数 (蛇数据)))
    .如果真 (大于 (到数值 (.), 到数值 (.)))
        赋值 (., .)
    .如果真结束
    .计次循环首 (取数组成员数 (蛇数据), x)
        赋值 (所有编辑, 取标记组件 (蛇数据 [x]))
        赋值 (所有编辑., #蛇颜色)
    .计次循环尾 ()
    .计次循环首 (相减 (取数组成员数 (蛇数据), 1), x)
        赋值 (蛇数据 [相减 (相加 (取数组成员数 (蛇数据), 1), x)], 蛇数据 [相减 (取数组成员数 (蛇数据), x)])
    .计次循环尾 ()
    赋值 (蛋被吃掉, 假)
    .如果 (等于 (方向, #向上))
        赋值 (蛇数据 [1], 相减 (蛇数据 [2], 20))
    .否则
        .如果 (等于 (方向, #向下))
            赋值 (蛇数据 [1], 相加 (蛇数据 [2], 20))
        .否则
            .如果 (等于 (方向, #向左))
                赋值 (蛇数据 [1], 相减 (蛇数据 [2], 1))
                .如果真 (或者 (等于 (蛇数据 [1], 20), 等于 (蛇数据 [1], 40), 等于 (蛇数据 [1], 60), 等于 (蛇数据 [1], 80), 等于 (蛇数据 [1], 100), 等于 (蛇数据 [1], 120), 等于 (蛇数据 [1], 140), 等于 (蛇数据 [1], 160), 等于 (蛇数据 [1], 180), 等于 (蛇数据 [1], 200), 等于 (蛇数据 [1], 220), 等于 (蛇数据 [1], 240), 等于 (蛇数据 [1], 260), 等于 (蛇数据 [1], 280), 等于 (蛇数据 [1], 300), 等于 (蛇数据 [1], 320), 等于 (蛇数据 [1], 340), 等于 (蛇数据 [1], 360), 等于 (蛇数据 [1], 380), 等于 (蛇数据 [1], 400)))
                    赋值 (开始, 0)
                    赋值 (., “重新开始”)
                .如果真结束
                
            .否则
                .如果 (等于 (方向, #向右))
                    赋值 (蛇数据 [1], 相加 (蛇数据 [2], 1))
                    .如果真 (或者 (等于 (蛇数据 [1], 21), 等于 (蛇数据 [1], 41), 等于 (蛇数据 [1], 61), 等于 (蛇数据 [1], 81), 等于 (蛇数据 [1], 101), 等于 (蛇数据 [1], 121), 等于 (蛇数据 [1], 141), 等于 (蛇数据 [1], 161), 等于 (蛇数据 [1], 181), 等于 (蛇数据 [1], 201), 等于 (蛇数据 [1], 221), 等于 (蛇数据 [1], 241), 等于 (蛇数据 [1], 261), 等于 (蛇数据 [1], 281), 等于 (蛇数据 [1], 301), 等于 (蛇数据 [1], 321), 等于 (蛇数据 [1], 341), 等于 (蛇数据 [1], 361), 等于 (蛇数据 [1], 381), 等于 (蛇数据 [1], 401)))
                        赋值 (开始, 0)
                        赋值 (., “重新开始”)
                    .如果真结束
                    
                .否则
                    
                .如果结束
                
            .如果结束
            
        .如果结束
        
    .如果结束
    .计次循环首 (相减 (取数组成员数 (蛇数据), 1), x)
        .如果真 (等于 (蛇数据 [相加 (x, 1)], 蛇数据 [1]))
            赋值 (开始, 0)
            赋值 (., “重新开始”)
            跳出循环 ()
        .如果真结束
        
    .计次循环尾 ()
    .如果真 (等于 (蛇数据 [1], 蛋位置))
        加入成员 (蛇数据, 0)
        .计次循环首 (相减 (取数组成员数 (蛇数据), 1), x)
            赋值 (蛇数据 [相减 (相加 (取数组成员数 (蛇数据), 1), x)], 蛇数据 [相减 (取数组成员数 (蛇数据), x)])
        .计次循环尾 ()
        赋值 (蛇数据 [1], 蛋位置)
        赋值 (蛋被吃掉, 真)
    .如果真结束
    .如果真 (或者 (小于 (蛇数据 [1], 1), 大于 (蛇数据 [1], 400)))
        赋值 (开始, 0)
        赋值 (., “重新开始”)
    .如果真结束
    
.如果真结束


.子程序 _开始按钮_被单击, 空白型, , 
.如果真 (等于 (., “重新开始”))
    __启动窗口_创建完毕 ()
.如果真结束
.如果 (等于 (开始, 0))
    赋值 (开始, 1)
    赋值 (., “暂停”)
.否则
    赋值 (开始, 0)
    赋值 (., “开始”)
.如果结束


.子程序 刷蛋, 整数型, , 
.局部变量 x, 整数型, , , 
.局部变量 y, 整数型, , , 

.循环判断首 ()
    置随机数种子 ()
    赋值 (蛋位置, 取随机数 (1, 400))
    赋值 (y, 0)
    .计次循环首 (取数组成员数 (蛇数据), x)
        .如果真 (等于 (蛇数据 [x], 蛋位置))
            跳出循环 ()
        .如果真结束
        赋值 (y, 相加 (y, 1))
    .计次循环尾 ()
.循环判断尾 (不等于 (y, 取数组成员数 (蛇数据)))
返回 (蛋位置)

.子程序 显示蛋位置, 空白型, , 
.局部变量 所有编辑, 编辑框, , , 

赋值 (所有编辑, 取标记组件 (蛋位置))
赋值 (所有编辑., #蛇蛋颜色)

.子程序 _组合框1_列表项被选择, 空白型, , 
.如果 (等于 (., 0))
    赋值 (., 700)
.否则
    .如果 (等于 (., 1))
        赋值 (., 600)
    .否则
        .如果 (等于 (., 2))
            赋值 (., 500)
        .否则
            .如果 (等于 (., 4))
                赋值 (., 400)
            .否则
                .如果 (等于 (., 5))
                    赋值 (., 300)
                .否则
                    .如果 (等于 (., 6))
                        赋值 (., 250)
                    .否则
                        .如果 (等于 (., 7))
                            赋值 (., 200)
                        .否则
                            .如果 (等于 (., 8))
                                赋值 (., 150)
                            .否则
                                .如果 (等于 (., 9))
                                    赋值 (., 100)
                                .否则
                                    .如果 (等于 (., 10))
                                        赋值 (., 50)
                                    .否则
                                        
                                    .如果结束
                                    
                                .如果结束
                                
                            .如果结束
                            
                        .如果结束
                        
                    .如果结束
                    
                .如果结束
                
            .如果结束
            
        .如果结束
        
    .如果结束
    
.如果结束



 ' 不属于任何一个程序集、类模块的函数：
