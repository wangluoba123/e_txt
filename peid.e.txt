 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 窗口_导入表查看器 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 600
    高度 = 464
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    窗口类名 = “”
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “导入表查看器”
    帮助文件名 = “”

窗口 _启动窗口
    左边 = 50
    顶边 = 50
    宽度 = 373
    高度 = 218
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    窗口类名 = “”
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “PE 查看器”
    帮助文件名 = “”

窗口 窗口_导出表查看器
    左边 = 50
    顶边 = 50
    宽度 = 500
    高度 = 393
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    窗口类名 = “”
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “导出表查看器”
    帮助文件名 = “”

窗口 窗口_区段查看器
    左边 = 50
    顶边 = 50
    宽度 = 500
    高度 = 250
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    窗口类名 = “”
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “区段查看器”
    帮助文件名 = “”

窗口 窗口_详情
    左边 = 50
    顶边 = 50
    宽度 = 422
    高度 = 443
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    窗口类名 = “”
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “PE 详情”
    帮助文件名 = “”

窗口 窗口_tls表查看器
    左边 = 50
    顶边 = 50
    宽度 = 261
    高度 = 250
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    窗口类名 = “”
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “TLS 表查看器”
    帮助文件名 = “”

窗口 窗口_调试表查看器
    左边 = 50
    顶边 = 50
    宽度 = 267
    高度 = 312
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    窗口类名 = “”
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “调试表查看器”
    帮助文件名 = “”



.常量 MZ, "23117", , 
.常量 PE, "17744", , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 5 0 系统核心支持库
 ' iext 27bb20fdd3e145e4bee3db39ddd6e64c 2 0 扩展界面支持库一
 ' spec A512548E76954B6E92C21055517615B0 3 0 特殊功能支持库
 ' eAPI F7FC1AE45C5C4758AF03EF19F18A395D 3 0 应用接口支持库




数据类型 IMAGE_DOS_HEADER, , 
    .成员 e_magic, 短整数型, , , 
    .成员 e_cblp, 短整数型, , , 
    .成员 e_cp, 短整数型, , , 
    .成员 e_crlc, 短整数型, , , 
    .成员 e_cparhdr, 短整数型, , , 
    .成员 e_minalloc, 短整数型, , , 
    .成员 e_maxalloc, 短整数型, , , 
    .成员 e_ss, 短整数型, , , 
    .成员 e_sp, 短整数型, , , 
    .成员 e_csum, 短整数型, , , 
    .成员 e_ip, 短整数型, , , 
    .成员 e_cs, 短整数型, , , 
    .成员 e_lfarlc, 短整数型, , , 
    .成员 e_ovno, 短整数型, , , 
    .成员 e_res, 短整数型, , "4", 
    .成员 e_oemid, 短整数型, , , 
    .成员 e_oeminfo, 短整数型, , , 
    .成员 e_res2, 短整数型, , "10", 
    .成员 e_lfanew, 整数型, , , 

数据类型 IMAGE_FILE_HEADER, , 
    .成员 Machine, 短整数型, , , 
    .成员 NumberOfSections, 短整数型, , , 
    .成员 TimeDateStamp, 整数型, , , 
    .成员 PointerToSymbolTable, 整数型, , , 
    .成员 NumberOfSymbols, 整数型, , , 
    .成员 SizeOfOptionalHeader, 短整数型, , , 
    .成员 Characteristics, 短整数型, , , 

数据类型 IMAGE_DATA_DIRECTORY, , 
    .成员 VirtualAddress, 整数型, , , 
    .成员 Size, 整数型, , , 

数据类型 IMAGE_OPTIONAL_HEADER32, , 
    .成员 Magic, 短整数型, , , 
    .成员 MajorLinkerVersion, 字节型, , , 
    .成员 MinorLinkerVersion, 字节型, , , 
    .成员 SizeOfCode, 整数型, , , 
    .成员 SizeOfInitializedData, 整数型, , , 
    .成员 SizeOfUninitializedData, 整数型, , , 
    .成员 AddressOfEntryPoint, 整数型, , , 
    .成员 BaseOfCode, 整数型, , , 
    .成员 BaseOfData, 整数型, , , 
    .成员 ImageBase, 整数型, , , 
    .成员 SectionAlignment, 整数型, , , 
    .成员 FileAlignment, 整数型, , , 
    .成员 MajorOperatingSystemVersion, 短整数型, , , 
    .成员 MinorOperatingSystemVersion, 短整数型, , , 
    .成员 MajorImageVersion, 短整数型, , , 
    .成员 MinorImageVersion, 短整数型, , , 
    .成员 MajorSubsystemVersion, 短整数型, , , 
    .成员 MinorSubsystemVersion, 短整数型, , , 
    .成员 Win32VersionValue, 整数型, , , 
    .成员 SizeOfImage, 整数型, , , 
    .成员 SizeOfHeaders, 整数型, , , 
    .成员 CheckSum, 整数型, , , 
    .成员 Subsystem, 短整数型, , , 
    .成员 DllCharacteristics, 短整数型, , , 
    .成员 SizeOfStackReserve, 整数型, , , 
    .成员 SizeOfStackCommit, 整数型, , , 
    .成员 SizeOfHeapReserve, 整数型, , , 
    .成员 SizeOfHeapCommit, 整数型, , , 
    .成员 LoaderFlags, 整数型, , , 
    .成员 NumberOfRvaAndSizes, 整数型, , , 
    .成员 DataDirectory, IMAGE_DATA_DIRECTORY, , "16", 

数据类型 IMAGE_NT_HEADERS32, , 
    .成员 Signature, 整数型, , , 
    .成员 FileHeader, IMAGE_FILE_HEADER, , , 
    .成员 OptionalHeader, IMAGE_OPTIONAL_HEADER32, , , 

数据类型 IMAGE_IMPORT_DESCRIPTOR, , 
    .成员 OriginalFirstThunk, 整数型, , , 
    .成员 TimeDateStamp, 整数型, , , 
    .成员 ForwarderChain, 整数型, , , 
    .成员 Name, 整数型, , , 
    .成员 FirstThunk, 整数型, , , 

数据类型 IMAGE_EXPORT_DIRECTORY, , 
    .成员 Characteristics, 整数型, , , 
    .成员 TimeDateStamp, 整数型, , , 
    .成员 MajorVersion, 短整数型, , , 
    .成员 MinorVersion, 短整数型, , , 
    .成员 Name, 整数型, , , 
    .成员 Base, 整数型, , , 
    .成员 NumberOfFunctions, 整数型, , , 
    .成员 NumberOfNames, 整数型, , , 
    .成员 AddressOfFunctions, 整数型, , , 
    .成员 AddressOfNames, 整数型, , , 
    .成员 AddressOfNameOrdinals, 整数型, , , 

数据类型 IMAGE_TLS_DIRECTORY32, , 
    .成员 StartAddressOfRawData, 整数型, , , 
    .成员 EndAddressOfRawData, 整数型, , , 
    .成员 AddressOfIndex, 整数型, , , 
    .成员 AddressOfCallBacks, 整数型, , , 
    .成员 SizeOfZeroFill, 整数型, , , 
    .成员 Characteristics, 整数型, , , 

数据类型 IMAGE_DEBUG_DIRECTORY, , 
    .成员 Characteristics, 整数型, , , 
    .成员 TimeDateStamp, 整数型, , , 
    .成员 MajorVersion, 短整数型, , , 
    .成员 MinorVersion, 短整数型, , , 
    .成员 Type, 整数型, , , 
    .成员 SizeOfData, 整数型, , , 
    .成员 AddressOfRawData, 整数型, , , 
    .成员 PointerToRawData, 整数型, , , 

数据类型 IMAGE_SECTION_HEADER, , 
    .成员 Name, 字节型, , "8", 
    .成员 VirtualSize, 整数型, , , 
    .成员 VirtualAddress, 整数型, , , 
    .成员 SizeOfRawData, 整数型, , , 
    .成员 PointerToRawData, 整数型, , , 
    .成员 PointerToRelocations, 整数型, , , 
    .成员 PointerToLinenumbers, 整数型, , , 
    .成员 NumberOfRelocations, 短整数型, , , 
    .成员 NumberOfLinenumbers, 短整数型, , , 
    .成员 Characteristics, 整数型, , , 

数据类型 函数信息, , 
    .成员 模块索引, 整数型, , , 
    .成员 ThunkRav, 文本型, , , 
    .成员 Thunk偏移, 文本型, , , 
    .成员 Thunk值, 文本型, , , 
    .成员 序数, 文本型, , , 
    .成员 名称, 文本型, , , 

.全局变量 IMAGE_DOS_HEADER, IMAGE_DOS_HEADER, , , 
.全局变量 IMAGE_NT_HEADERS32, IMAGE_NT_HEADERS32, , , 
.全局变量 IMAGE_SECTION_HEADER, IMAGE_SECTION_HEADER, , "0", 

.DLL命令 RtlMoveMemory_IMAGE_DOS_HEADER, 空白型, "", "RtlMoveMemory", , 
    .参数 Destination, IMAGE_DOS_HEADER, , 
    .参数 Source, 整数型, , 
    .参数 Length, 整数型, , 

.DLL命令 RtlMoveMemory_IMAGE_NT_HEADERS32, 空白型, "", "RtlMoveMemory", , 
    .参数 Destination, IMAGE_NT_HEADERS32, , 
    .参数 Source, 整数型, , 
    .参数 Length, 整数型, , 

.DLL命令 RtlMoveMemory_IMAGE_IMPORT_DESCRIPTOR, 空白型, "", "RtlMoveMemory", , 
    .参数 Destination, IMAGE_IMPORT_DESCRIPTOR, , 
    .参数 Source, 整数型, , 
    .参数 Length, 整数型, , 

.DLL命令 RtlMoveMemory_IMAGE_EXPORT_DIRECTORY, 空白型, "", "RtlMoveMemory", , 
    .参数 Destination, IMAGE_EXPORT_DIRECTORY, , 
    .参数 Source, 整数型, , 
    .参数 Length, 整数型, , 

.DLL命令 RtlMoveMemory_IMAGE_TLS_DIRECTORY32, 空白型, "", "RtlMoveMemory", , 
    .参数 Destination, IMAGE_TLS_DIRECTORY32, , 
    .参数 Source, 整数型, , 
    .参数 Length, 整数型, , 

.DLL命令 RtlMoveMemory_IMAGE_DEBUG_DIRECTORY, 空白型, "", "RtlMoveMemory", , 
    .参数 Destination, IMAGE_DEBUG_DIRECTORY, , 
    .参数 Source, 整数型, , 
    .参数 Length, 整数型, , 

.DLL命令 RtlMoveMemory_IMAGE_SECTION_HEADER, 空白型, "", "RtlMoveMemory", , 
    .参数 Destination, IMAGE_SECTION_HEADER, 数组, 
    .参数 Source, 整数型, , 
    .参数 Length, 整数型, , 

.窗口程序集 窗口_导入表查看器, , , 

.程序集变量 函数列表, 函数信息, , "0", 
.子程序 _窗口_导入表查看器_尺寸被改变, 空白型, , 
赋值 (.倾斜, 取用户区宽度 ())
赋值 (.删除线, 相除 (取用户区高度 (), 2))
赋值 (.加粗, .删除线)
赋值 (.倾斜, .倾斜)
赋值 (.删除线, 相减 (取用户区高度 (), .删除线))

.子程序 查看导入表, 空白型, , 
.参数 PE文件, 文本型, , 

.局部变量 文件号, 整数型, , , 
.局部变量 tmp, 字节集, , , 
.局部变量 IMAGE_IMPORT_DESCRIPTOR, IMAGE_IMPORT_DESCRIPTOR, , , 
.局部变量 i, 整数型, , , 
.局部变量 模块索引, 整数型, , , 
.局部变量 Thunk, 整数型, , , 
.局部变量 OriginalThunk, 整数型, , , 
.局部变量 序数, 短整数型, , , 
.局部变量 偏移, 整数型, , , 
.局部变量 函数索引, 整数型, , , 
.局部变量 j, 整数型, , , 
.局部变量 str, 文本型, , , 
.局部变量 偏差1, 整数型, , , 
.局部变量 偏差2, 整数型, , , 

载入 (窗口_导入表查看器, _启动窗口, 假)
全部删除 ()


赋值 (文件号, 打开文件 (PE文件, #读入, #无限制))
.如果真 (等于 (文件号, 0))
    返回 ()
.如果真结束

.如果真 (大于 (IMAGE_NT_HEADERS32.OptionalHeader.DataDirectory [2].Size, 0))
    
    清除数组 (函数列表)
    赋值 (i, 0)
    赋值 (偏差1, 计算偏差 (IMAGE_NT_HEADERS32.OptionalHeader.DataDirectory [2].VirtualAddress))
    
    .判断循环首 (真)
        
        移动读写位置 (文件号, #文件首, 相加 (相减 (IMAGE_NT_HEADERS32.OptionalHeader.DataDirectory [2].VirtualAddress, 偏差1), j))
        赋值 (tmp, 读入字节集 (文件号, 20))
        .如果真 (等于 (取字节集长度 (tmp), 20))
            赋值 (j, 相加 (j, 20))
            
            RtlMoveMemory_IMAGE_IMPORT_DESCRIPTOR (IMAGE_IMPORT_DESCRIPTOR, 取变量数据地址 (tmp), 20)
            
            .如果真 (等于 (IMAGE_IMPORT_DESCRIPTOR.Name, 0))
                跳出循环 ()
            .如果真结束
            
            
            赋值 (i, 相加 (i, 1))
            
            移动读写位置 (文件号, #文件首, 相减 (IMAGE_IMPORT_DESCRIPTOR.Name, 计算偏差 (IMAGE_IMPORT_DESCRIPTOR.Name)))
            读入数据 (文件号, str)
            赋值 (模块索引, .插入表项 (str, , , , ))
            
            模块索引.置标题 (1, 未知支持库函数_84 (“%.8X”, IMAGE_IMPORT_DESCRIPTOR.OriginalFirstThunk))
            模块索引.置标题 (2, 未知支持库函数_84 (“%.8X”, IMAGE_IMPORT_DESCRIPTOR.TimeDateStamp))
            模块索引.置标题 (3, 未知支持库函数_84 (“%.8X”, IMAGE_IMPORT_DESCRIPTOR.ForwarderChain))
            模块索引.置标题 (4, 未知支持库函数_84 (“%.8X”, IMAGE_IMPORT_DESCRIPTOR.Name))
            模块索引.置标题 (5, 未知支持库函数_84 (“%.8X”, IMAGE_IMPORT_DESCRIPTOR.FirstThunk))
            
            赋值 (偏移, 0)
            赋值 (偏差2, 计算偏差 (IMAGE_IMPORT_DESCRIPTOR.FirstThunk))
            
            .循环判断首 ()
                
                移动读写位置 (文件号, #文件首, 相加 (相减 (IMAGE_IMPORT_DESCRIPTOR.FirstThunk, 偏差2), 偏移))
                读入数据 (文件号, Thunk)
                
                .如果 (等于 (IMAGE_IMPORT_DESCRIPTOR.OriginalFirstThunk, 0))
                    赋值 (OriginalThunk, Thunk)
                .否则
                    移动读写位置 (文件号, #文件首, 相加 (相减 (IMAGE_IMPORT_DESCRIPTOR.OriginalFirstThunk, 计算偏差 (IMAGE_IMPORT_DESCRIPTOR.OriginalFirstThunk)), 偏移))
                    读入数据 (文件号, OriginalThunk)
                .如果结束
                
                
                .如果真 (不等于 (Thunk, 0))
                    赋值 (函数索引, 相加 (取数组成员数 (函数列表), 1))
                    重定义数组 (函数列表, 真, 函数索引)
                    
                    赋值 (函数列表 [函数索引], 模块索引, i)
                    赋值 (函数列表 [函数索引], ThunkRav, 未知支持库函数_84 (“%.8X”, 到整数 (相加 (IMAGE_IMPORT_DESCRIPTOR.FirstThunk, 偏移))))
                    赋值 (函数列表 [函数索引], Thunk偏移, 未知支持库函数_84 (“%.8X”, 到整数 (相加 (相减 (IMAGE_IMPORT_DESCRIPTOR.FirstThunk, 偏差2), 偏移))))
                    赋值 (函数列表 [函数索引], Thunk值, 未知支持库函数_84 (“%.8X”, Thunk))
                    
                    
                    .如果 (等于 (位与 (OriginalThunk, 2147483648), 0))
                        移动读写位置 (文件号, #文件首, 相减 (OriginalThunk, 计算偏差 (OriginalThunk)))
                        读入数据 (文件号, 序数, str)
                        赋值 (函数列表 [函数索引], 序数, 未知支持库函数_84 (“%.4X”, 序数))
                        赋值 (函数列表 [函数索引], 名称, str)
                        
                    .否则
                        
                        赋值 (序数, 位与 (OriginalThunk, 65535))
                        赋值 (函数列表 [函数索引], 序数, 未知支持库函数_84 (“%.4X”, 序数))
                        赋值 (函数列表 [函数索引], 名称, “(按序数)”)
                    .如果结束
                    
                .如果真结束
                
                赋值 (偏移, 相加 (偏移, 4))
            .循环判断尾 (不等于 (Thunk, 0))
            
        .如果真结束
        
        
    .判断循环尾 ()
    
    赋值 (., 0)
    
    
    
    
.如果真结束





关闭文件 (文件号)

.子程序 _超级列表框_模块列表_当前表项被改变, 空白型, , 
.局部变量 函数索引, 整数型, , , 
.局部变量 i, 整数型, , , 
.局部变量 j, 整数型, , , 

.如果真 (不等于 (., -1))
    
    .计次循环首 (取数组成员数 (函数列表), i)
        .如果真 (等于 (函数列表 [i], 模块索引, 相加 (., 1)))
            .如果 (小于或等于 (j, 相减 (取表项数 (), 1)))
                赋值 (函数索引, j)
                函数索引.置标题 (0, 函数列表 [i], ThunkRav)
                
            .否则
                
                赋值 (函数索引, .插入表项 (函数列表 [i], ThunkRav, , , , ))
            .如果结束
            
            函数索引.置标题 (1, 函数列表 [i], Thunk偏移)
            函数索引.置标题 (2, 函数列表 [i], Thunk值)
            函数索引.置标题 (3, 函数列表 [i], 序数)
            函数索引.置标题 (4, 函数列表 [i], 名称)
            
            赋值 (j, 相加 (j, 1))
        .如果真结束
        
    .计次循环尾 ()
    
    .计次循环首 (相减 (取表项数 (), j), )
        j.删除表项 ()
    .计次循环尾 ()
.如果真结束


.窗口程序集 窗口_启动窗口, , , 

.子程序 _按钮_打开_被单击, 空白型, , 
.如果真 (打开 ())
    赋值 (.内容, .文件名)
    查看基本信息 (.文件名)
    查壳 (.文件名)
.如果真结束


.子程序 查看基本信息, 空白型, , 
.参数 PE文件, 文本型, , 

.局部变量 文件号, 整数型, , , 
.局部变量 tmp, 字节集, , , 
.局部变量 j, 整数型, , , 

赋值 (文件号, 打开文件 (PE文件, #读入, #无限制))
.如果真 (等于 (文件号, 0))
    返回 ()
.如果真结束

赋值 (tmp, 读入字节集 (文件号, 64))
.如果真 (等于 (取字节集长度 (tmp), 64))
    
    RtlMoveMemory_IMAGE_DOS_HEADER (IMAGE_DOS_HEADER, 取变量数据地址 (tmp), 64)
    
    .如果真 (等于 (IMAGE_DOS_HEADER.e_magic, #MZ))
        
        移动读写位置 (文件号, #文件首, IMAGE_DOS_HEADER.e_lfanew)
        赋值 (tmp, 读入字节集 (文件号, 248))
        .如果真 (等于 (取字节集长度 (tmp), 248))
            
            RtlMoveMemory_IMAGE_NT_HEADERS32 (IMAGE_NT_HEADERS32, 取变量数据地址 (tmp), 248)
            
            .如果真 (等于 (IMAGE_NT_HEADERS32.Signature, #PE))
                .如果真 (大于 (IMAGE_NT_HEADERS32.OptionalHeader.DataDirectory [2].Size, 0))
                    
                    重定义数组 (IMAGE_SECTION_HEADER, 假, IMAGE_NT_HEADERS32.FileHeader.NumberOfSections)
                    
                    移动读写位置 (文件号, #文件首, 相加 (IMAGE_DOS_HEADER.e_lfanew, 248))
                    赋值 (tmp, 读入字节集 (文件号, 相乘 (IMAGE_NT_HEADERS32.FileHeader.NumberOfSections, 40)))
                    .如果真 (等于 (取字节集长度 (tmp), 相乘 (IMAGE_NT_HEADERS32.FileHeader.NumberOfSections, 40)))
                        
                        RtlMoveMemory_IMAGE_SECTION_HEADER (IMAGE_SECTION_HEADER, 取变量数据地址 (tmp), 相乘 (IMAGE_NT_HEADERS32.FileHeader.NumberOfSections, 40))
                        
                        .计次循环首 (IMAGE_NT_HEADERS32.FileHeader.NumberOfSections, j)
                            .如果真 (并且 (大于或等于 (IMAGE_NT_HEADERS32.OptionalHeader.AddressOfEntryPoint, IMAGE_SECTION_HEADER [j], VirtualAddress), 小于或等于 (IMAGE_NT_HEADERS32.OptionalHeader.AddressOfEntryPoint, 相加 (IMAGE_SECTION_HEADER [j], VirtualAddress, IMAGE_SECTION_HEADER [j], VirtualSize))))
                                赋值 (.内容, 未知支持库函数_84 (“%.8X”, IMAGE_NT_HEADERS32.OptionalHeader.AddressOfEntryPoint))
                                赋值 (.内容, 未知支持库函数_84 (“%.8X”, 到整数 (相减 (IMAGE_NT_HEADERS32.OptionalHeader.AddressOfEntryPoint, 相减 (IMAGE_SECTION_HEADER [j], VirtualAddress, IMAGE_SECTION_HEADER [j], PointerToRawData)))))
                                赋值 (.内容, 未知支持库函数_84 (“%d.%d”, IMAGE_NT_HEADERS32.OptionalHeader.MajorLinkerVersion, IMAGE_NT_HEADERS32.OptionalHeader.MinorLinkerVersion))
                                赋值 (.内容, 到文本 (IMAGE_SECTION_HEADER [j], Name))
                                
                                移动读写位置 (文件号, #文件首, 相减 (IMAGE_NT_HEADERS32.OptionalHeader.AddressOfEntryPoint, 相减 (IMAGE_SECTION_HEADER [j], VirtualAddress, IMAGE_SECTION_HEADER [j], PointerToRawData)))
                                赋值 (tmp, 读入字节集 (文件号, 4))
                                .如果真 (等于 (取字节集长度 (tmp), 4))
                                    赋值 (.内容, 未知支持库函数_84 (“%.2X,%.2X,%.2X,%.2X”, tmp [1], tmp [2], tmp [3], tmp [4]))
                                .如果真结束
                                
                                赋值 (.内容, 未知支持库函数_84 (“%.4X”, IMAGE_NT_HEADERS32.OptionalHeader.Subsystem))
                                
                                
                                跳出循环 ()
                            .如果真结束
                            
                        .计次循环尾 ()
                    .如果真结束
                    
                .如果真结束
                
            .如果真结束
            
        .如果真结束
        
    .如果真结束
    
.如果真结束



关闭文件 (文件号)

.子程序 _按钮_区段查看_被单击, 空白型, , 
查看区段 ()

.子程序 _按钮_PE详情_被单击, 空白型, , 
查看详情 ()

.子程序 查壳, 空白型, , 
.参数 PE文件, 文本型, , 



.子程序 计算偏差, 整数型, , 
.参数 虚拟地址, 整数型, , 

.局部变量 i, 整数型, , , 

.计次循环首 (IMAGE_NT_HEADERS32.FileHeader.NumberOfSections, i)
    .如果真 (并且 (大于或等于 (虚拟地址, IMAGE_SECTION_HEADER [i], VirtualAddress), 小于或等于 (虚拟地址, 相加 (IMAGE_SECTION_HEADER [i], VirtualAddress, IMAGE_SECTION_HEADER [i], VirtualSize))))
        返回 (相减 (IMAGE_SECTION_HEADER [i], VirtualAddress, IMAGE_SECTION_HEADER [i], PointerToRawData))
    .如果真结束
    
.计次循环尾 ()
返回 (0)

.窗口程序集 窗口_区段查看器, , , 

.子程序 _窗口_区段查看器_尺寸被改变, 空白型, , 
赋值 (.倾斜, 取用户区宽度 ())
赋值 (.删除线, 取用户区高度 ())

.子程序 查看区段, 空白型, , 
.局部变量 i, 整数型, , , 
.局部变量 区段索引, 整数型, , , 

载入 (窗口_区段查看器, _启动窗口, 假)
全部删除 ()
.计次循环首 (取数组成员数 (IMAGE_SECTION_HEADER), i)
    赋值 (区段索引, .插入表项 (到文本 (IMAGE_SECTION_HEADER [i], Name), , , , ))
    区段索引.置标题 (1, 未知支持库函数_84 (“%.8X”, IMAGE_SECTION_HEADER [i], VirtualAddress))
    区段索引.置标题 (2, 未知支持库函数_84 (“%.8X”, IMAGE_SECTION_HEADER [i], VirtualSize))
    区段索引.置标题 (3, 未知支持库函数_84 (“%.8X”, IMAGE_SECTION_HEADER [i], PointerToRawData))
    区段索引.置标题 (4, 未知支持库函数_84 (“%.8X”, IMAGE_SECTION_HEADER [i], SizeOfRawData))
    区段索引.置标题 (5, 未知支持库函数_84 (“%.8X”, IMAGE_SECTION_HEADER [i], Characteristics))
.计次循环尾 ()

.窗口程序集 窗口_详情, , , 

.子程序 查看详情, 空白型, , 
载入 (窗口_详情, _启动窗口, 假)

赋值 (.内容, 未知支持库函数_84 (“%.8X”, IMAGE_NT_HEADERS32.OptionalHeader.AddressOfEntryPoint))
赋值 (.内容, 未知支持库函数_84 (“%.8X”, IMAGE_NT_HEADERS32.OptionalHeader.ImageBase))
赋值 (.内容, 未知支持库函数_84 (“%.8X”, IMAGE_NT_HEADERS32.OptionalHeader.SizeOfImage))
赋值 (.内容, 未知支持库函数_84 (“%.8X”, IMAGE_NT_HEADERS32.OptionalHeader.BaseOfCode))
赋值 (.内容, 未知支持库函数_84 (“%.8X”, IMAGE_NT_HEADERS32.OptionalHeader.BaseOfData))
赋值 (.内容, 未知支持库函数_84 (“%.8X”, IMAGE_NT_HEADERS32.OptionalHeader.SectionAlignment))
赋值 (.内容, 未知支持库函数_84 (“%.8X”, IMAGE_NT_HEADERS32.OptionalHeader.FileAlignment))
赋值 (.内容, 未知支持库函数_84 (“%.4X”, IMAGE_NT_HEADERS32.OptionalHeader.Magic))

赋值 (.内容, 未知支持库函数_84 (“%.4X”, IMAGE_NT_HEADERS32.OptionalHeader.Subsystem))
赋值 (.内容, 未知支持库函数_84 (“%.4X”, IMAGE_NT_HEADERS32.FileHeader.NumberOfSections))
赋值 (.内容, 未知支持库函数_84 (“%.8X”, IMAGE_NT_HEADERS32.FileHeader.TimeDateStamp))
赋值 (.内容, 未知支持库函数_84 (“%.8X”, IMAGE_NT_HEADERS32.OptionalHeader.SizeOfHeaders))
赋值 (.内容, 未知支持库函数_84 (“%.4X”, IMAGE_NT_HEADERS32.FileHeader.Characteristics))
赋值 (.内容, 未知支持库函数_84 (“%.8X”, IMAGE_NT_HEADERS32.OptionalHeader.CheckSum))
赋值 (.内容, 未知支持库函数_84 (“%.4X”, IMAGE_NT_HEADERS32.FileHeader.SizeOfOptionalHeader))
赋值 (.内容, 未知支持库函数_84 (“%.8X”, IMAGE_NT_HEADERS32.OptionalHeader.NumberOfRvaAndSizes))


赋值 (.内容, 未知支持库函数_84 (“%.8X”, IMAGE_NT_HEADERS32.OptionalHeader.DataDirectory [1].VirtualAddress))
赋值 (.内容, 未知支持库函数_84 (“%.8X”, IMAGE_NT_HEADERS32.OptionalHeader.DataDirectory [1].Size))

赋值 (.内容, 未知支持库函数_84 (“%.8X”, IMAGE_NT_HEADERS32.OptionalHeader.DataDirectory [2].VirtualAddress))
赋值 (.内容, 未知支持库函数_84 (“%.8X”, IMAGE_NT_HEADERS32.OptionalHeader.DataDirectory [2].Size))

赋值 (.内容, 未知支持库函数_84 (“%.8X”, IMAGE_NT_HEADERS32.OptionalHeader.DataDirectory [3].VirtualAddress))
赋值 (.内容, 未知支持库函数_84 (“%.8X”, IMAGE_NT_HEADERS32.OptionalHeader.DataDirectory [3].Size))

赋值 (.内容, 未知支持库函数_84 (“%.8X”, IMAGE_NT_HEADERS32.OptionalHeader.DataDirectory [10].VirtualAddress))
赋值 (.内容, 未知支持库函数_84 (“%.8X”, IMAGE_NT_HEADERS32.OptionalHeader.DataDirectory [10].Size))

赋值 (.内容, 未知支持库函数_84 (“%.8X”, IMAGE_NT_HEADERS32.OptionalHeader.DataDirectory [7].VirtualAddress))
赋值 (.内容, 未知支持库函数_84 (“%.8X”, IMAGE_NT_HEADERS32.OptionalHeader.DataDirectory [7].Size))


.子程序 _按钮_导出表_被单击, 空白型, , 
查看导出表 (_启动窗口..文件名)

.子程序 _按钮_导入表_被单击, 空白型, , 
查看导入表 (_启动窗口..文件名)

.子程序 _按钮_资源_被单击, 空白型, , 


.子程序 _按钮_tls_被单击, 空白型, , 
查看TLS表 (_启动窗口..文件名)

.子程序 _按钮_调试_被单击, 空白型, , 
查看调试表 (_启动窗口..文件名)

.窗口程序集 窗口_导出表查看器, , , 

.子程序 查看导出表, 空白型, , 
.参数 PE文件, 文本型, , 

.局部变量 文件号, 整数型, , , 
.局部变量 i, 整数型, , , 
.局部变量 IMAGE_EXPORT_DIRECTORY, IMAGE_EXPORT_DIRECTORY, , , 
.局部变量 tmp, 字节集, , , 
.局部变量 str, 文本型, , , 
.局部变量 Ordinal, 短整数型, , , 
.局部变量 Name, 整数型, , , 
.局部变量 函数索引, 整数型, , , 
.局部变量 Function, 整数型, , , 
.局部变量 偏差1, 整数型, , , 
.局部变量 偏差2, 整数型, , , 

载入 (窗口_导出表查看器, _启动窗口, 假)
全部删除 ()

赋值 (文件号, 打开文件 (PE文件, #读入, #无限制))
.如果真 (等于 (文件号, 0))
    返回 ()
.如果真结束


.如果真 (大于 (IMAGE_NT_HEADERS32.OptionalHeader.DataDirectory [1].Size, 0))
    
    
    
    
    移动读写位置 (文件号, #文件首, 相减 (IMAGE_NT_HEADERS32.OptionalHeader.DataDirectory [1].VirtualAddress, 计算偏差 (IMAGE_NT_HEADERS32.OptionalHeader.DataDirectory [1].VirtualAddress)))
    赋值 (tmp, 读入字节集 (文件号, 40))
    .如果真 (等于 (取字节集长度 (tmp), 40))
        
        RtlMoveMemory_IMAGE_EXPORT_DIRECTORY (IMAGE_EXPORT_DIRECTORY, 取变量数据地址 (tmp), 40)
        .如果真 (不等于 (IMAGE_EXPORT_DIRECTORY.Name, 0))
            
            赋值 (.内容, 未知支持库函数_84 (“%.8X”, IMAGE_EXPORT_DIRECTORY.Characteristics))
            赋值 (.内容, 未知支持库函数_84 (“%.8X”, IMAGE_EXPORT_DIRECTORY.TimeDateStamp))
            赋值 (.内容, 未知支持库函数_84 (“%d.%d”, IMAGE_EXPORT_DIRECTORY.MajorVersion, IMAGE_EXPORT_DIRECTORY.MinorVersion))
            赋值 (.内容, 未知支持库函数_84 (“%.8X”, IMAGE_EXPORT_DIRECTORY.Name))
            移动读写位置 (文件号, #文件首, 相减 (IMAGE_EXPORT_DIRECTORY.Name, 计算偏差 (IMAGE_EXPORT_DIRECTORY.Name)))
            读入数据 (文件号, str)
            赋值 (.内容, str)
            赋值 (.内容, 未知支持库函数_84 (“%.8X”, IMAGE_EXPORT_DIRECTORY.Base))
            
            赋值 (.内容, 未知支持库函数_84 (“%.8X”, IMAGE_EXPORT_DIRECTORY.NumberOfFunctions))
            赋值 (.内容, 未知支持库函数_84 (“%.8X”, IMAGE_EXPORT_DIRECTORY.NumberOfNames))
            赋值 (.内容, 未知支持库函数_84 (“%.8X”, IMAGE_EXPORT_DIRECTORY.AddressOfFunctions))
            赋值 (.内容, 未知支持库函数_84 (“%.8X”, IMAGE_EXPORT_DIRECTORY.AddressOfNames))
            赋值 (.内容, 未知支持库函数_84 (“%.8X”, IMAGE_EXPORT_DIRECTORY.AddressOfNameOrdinals))
            
            赋值 (偏差1, 计算偏差 (IMAGE_EXPORT_DIRECTORY.AddressOfNameOrdinals))
            赋值 (偏差2, 计算偏差 (IMAGE_EXPORT_DIRECTORY.AddressOfFunctions))
            
            .计次循环首 (IMAGE_EXPORT_DIRECTORY.NumberOfNames, i)
                
                移动读写位置 (文件号, #文件首, 相减 (相加 (相减 (IMAGE_EXPORT_DIRECTORY.AddressOfNameOrdinals, 偏差1), 相乘 (i, 2)), 2))
                读入数据 (文件号, Ordinal)
                移动读写位置 (文件号, #文件首, 相加 (相减 (IMAGE_EXPORT_DIRECTORY.AddressOfFunctions, 偏差2), 相乘 (Ordinal, 4)))
                读入数据 (文件号, Function)
                
                移动读写位置 (文件号, #文件首, 相减 (相加 (相减 (IMAGE_EXPORT_DIRECTORY.AddressOfNames, 计算偏差 (IMAGE_EXPORT_DIRECTORY.AddressOfNames)), 相乘 (i, 4)), 4))
                读入数据 (文件号, Name)
                移动读写位置 (文件号, #文件首, 相减 (Name, 计算偏差 (Name)))
                读入数据 (文件号, str)
                
                赋值 (函数索引, .插入表项 (未知支持库函数_84 (“%.4X”, 到整数 (相加 (Ordinal, 1))), , , , ))
                函数索引.置标题 (1, 未知支持库函数_84 (“%.8X”, Function))
                函数索引.置标题 (2, 未知支持库函数_84 (“%.8X”, 到整数 (相减 (Function, 计算偏差 (Function)))))
                函数索引.置标题 (3, str)
                
            .计次循环尾 ()
            
        .如果真结束
        
    .如果真结束
    
    
.如果真结束

关闭文件 (文件号)

.窗口程序集 窗口_tls表查看器, , , 

.子程序 查看TLS表, 空白型, , 
.参数 PE文件, 文本型, , 

.局部变量 文件号, 整数型, , , 
.局部变量 i, 整数型, , , 
.局部变量 tmp, 字节集, , , 
.局部变量 IMAGE_TLS_DIRECTORY32, IMAGE_TLS_DIRECTORY32, , , 

载入 (窗口_tls表查看器, _启动窗口, 假)

赋值 (文件号, 打开文件 (PE文件, #读入, #无限制))
.如果真 (等于 (文件号, 0))
    返回 ()
.如果真结束

.如果真 (大于 (IMAGE_NT_HEADERS32.OptionalHeader.DataDirectory [10].Size, 0))
    
    移动读写位置 (文件号, #文件首, 相减 (IMAGE_NT_HEADERS32.OptionalHeader.DataDirectory [10].VirtualAddress, 计算偏差 (IMAGE_NT_HEADERS32.OptionalHeader.DataDirectory [10].VirtualAddress)))
    赋值 (tmp, 读入字节集 (文件号, 24))
    .如果真 (等于 (取字节集长度 (tmp), 24))
        
        RtlMoveMemory_IMAGE_TLS_DIRECTORY32 (IMAGE_TLS_DIRECTORY32, 取变量数据地址 (tmp), 24)
        
        赋值 (.内容, 未知支持库函数_84 (“%.8X”, IMAGE_TLS_DIRECTORY32.StartAddressOfRawData))
        赋值 (.内容, 未知支持库函数_84 (“%.8X”, IMAGE_TLS_DIRECTORY32.EndAddressOfRawData))
        赋值 (.内容, 未知支持库函数_84 (“%.8X”, IMAGE_TLS_DIRECTORY32.AddressOfIndex))
        赋值 (.内容, 未知支持库函数_84 (“%.8X”, IMAGE_TLS_DIRECTORY32.AddressOfCallBacks))
        赋值 (.内容, 未知支持库函数_84 (“%.8X”, IMAGE_TLS_DIRECTORY32.SizeOfZeroFill))
        赋值 (.内容, 未知支持库函数_84 (“%.8X”, IMAGE_TLS_DIRECTORY32.Characteristics))
        
    .如果真结束
    
.如果真结束

关闭文件 (文件号)

.窗口程序集 窗口_调试表查看器, , , 

.子程序 查看调试表, 空白型, , 
.参数 PE文件, 文本型, , 

.局部变量 文件号, 整数型, , , 
.局部变量 i, 整数型, , , 
.局部变量 tmp, 字节集, , , 
.局部变量 IMAGE_DEBUG_DIRECTORY, IMAGE_DEBUG_DIRECTORY, , , 

载入 (窗口_调试表查看器, _启动窗口, 假)

赋值 (文件号, 打开文件 (PE文件, #读入, #无限制))
.如果真 (等于 (文件号, 0))
    返回 ()
.如果真结束

.如果真 (大于 (IMAGE_NT_HEADERS32.OptionalHeader.DataDirectory [7].Size, 0))
    
    移动读写位置 (文件号, #文件首, 相减 (IMAGE_NT_HEADERS32.OptionalHeader.DataDirectory [7].VirtualAddress, 计算偏差 (IMAGE_NT_HEADERS32.OptionalHeader.DataDirectory [7].VirtualAddress)))
    赋值 (tmp, 读入字节集 (文件号, 28))
    .如果真 (等于 (取字节集长度 (tmp), 28))
        
        RtlMoveMemory_IMAGE_DEBUG_DIRECTORY (IMAGE_DEBUG_DIRECTORY, 取变量数据地址 (tmp), 28)
        
        赋值 (.内容, 未知支持库函数_84 (“%.8X”, IMAGE_DEBUG_DIRECTORY.Characteristics))
        赋值 (.内容, 未知支持库函数_84 (“%.8X”, IMAGE_DEBUG_DIRECTORY.TimeDateStamp))
        赋值 (.内容, 未知支持库函数_84 (“%.8X”, IMAGE_DEBUG_DIRECTORY.MajorVersion))
        赋值 (.内容, 未知支持库函数_84 (“%.8X”, IMAGE_DEBUG_DIRECTORY.MinorVersion))
        赋值 (.内容, 未知支持库函数_84 (“%.8X”, IMAGE_DEBUG_DIRECTORY.Type))
        赋值 (.内容, 未知支持库函数_84 (“%.8X”, IMAGE_DEBUG_DIRECTORY.SizeOfData))
        赋值 (.内容, 未知支持库函数_84 (“%.8X”, IMAGE_DEBUG_DIRECTORY.AddressOfRawData))
        赋值 (.内容, 未知支持库函数_84 (“%.8X”, IMAGE_DEBUG_DIRECTORY.PointerToRawData))
    .如果真结束
    
.如果真结束

关闭文件 (文件号)


 ' 不属于任何一个程序集、类模块的函数：
