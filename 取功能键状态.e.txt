 ' 文件类型：Windows窗口程序

 ' 程序名称：√功能键状态√
 ' 程序描述：√功能键状态√
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 窗口1
    左边 = 50
    顶边 = 50
    宽度 = 380
    高度 = 250
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 389
    高度 = 269
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “测试按键代码”
    帮助文件名 = “”



.图片 图片1, " ' 已保存到：D:\易语言学习\Data\取功能键状态.e\图片1", , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 4 系统核心支持库





.DLL命令 取功能键状态, 整数型, "", "GetKeyState", , 
    .参数 nVirtKey, 空白型, , 

.DLL命令 取键状态, 整数型, "", "GetAsyncKeyState", , 
    .参数 key, 整数型, , 

.DLL命令 取状态, 整数型, "", "GetAsyncKeyState", , 
    .参数 key, 整数型, , 

.程序集 程序集1, , , 

.子程序 _启动子程序, 整数型, , 请在本子程序中放置易模块初始化代码

_临时子程序 () ' 在模块初始化代码执行完毕后调用模块测试代码
返回 (0) ' 可以根据您的需要返回任意数值

.子程序 _临时子程序, 空白型, , 
 ' 本名称子程序用作测试程序用，仅在开发及调试环境中有效，编译发布程序前将被系统自动清空，请将所有用作测试的临时代码放在本子程序中。 ***注意不要修改本子程序的参数及返回值类型。
载入 (窗口1, , 真)

.程序集 _接口程序集, , , 在本程序集中定义的子程序可被模块外部程序访问，注意如果不存在本程序集就不能作为易模块编译。

.子程序 取大写锁定键状态, 逻辑型, , 检查功能键是否被按下，是返回真
.局部变量 binit, 逻辑型, 静态, , 
.局部变量 bon, 逻辑型, 静态, , 

.如果 (等于 (binit, 假))
    .判断循环首 (不等于 (取键状态 (20), 0))
    .判断循环尾 ()
    赋值 (bon, 选择 (不等于 (取功能键状态 (20), 0), 真, 假))
    赋值 (binit, 真)
.否则
    .如果真 (不等于 (取键状态 (20), 0))
        .判断循环首 (不等于 (取键状态 (20), 0))
        .判断循环尾 ()
        赋值 (bon, 取反 (bon))
    .如果真结束
    
.如果结束
返回 (bon)

.子程序 取小键盘锁定键状态, 逻辑型, , 检查功能键是否被按下，是返回真
.局部变量 binit, 逻辑型, 静态, , 
.局部变量 bon, 逻辑型, 静态, , 

.如果 (等于 (binit, 假))
    .判断循环首 (不等于 (取键状态 (144), 0))
    .判断循环尾 ()
    赋值 (bon, 选择 (不等于 (取功能键状态 (144), 0), 真, 假))
    赋值 (binit, 真)
.否则
    .如果真 (不等于 (取键状态 (144), 0))
        .判断循环首 (不等于 (取键状态 (144), 0))
        .判断循环尾 ()
        赋值 (bon, 取反 (bon))
    .如果真结束
    
.如果结束
返回 (bon)

.子程序 取ScrollLokc锁定键状态, 逻辑型, , 检查功能键是否被按下，是返回真
.局部变量 binit, 逻辑型, 静态, , 
.局部变量 bon, 逻辑型, 静态, , 

.如果 (等于 (binit, 假))
    .判断循环首 (不等于 (取键状态 (145), 0))
    .判断循环尾 ()
    赋值 (bon, 选择 (不等于 (取功能键状态 (145), 0), 真, 假))
    赋值 (binit, 真)
.否则
    .如果真 (不等于 (取键状态 (145), 0))
        .判断循环首 (不等于 (取键状态 (145), 0))
        .判断循环尾 ()
        赋值 (bon, 取反 (bon))
    .如果真结束
    
.如果结束
返回 (bon)

.子程序 左Shift键是否按下, 逻辑型, , 
返回 (选择 (不等于 (取键状态 (160), 0), 真, 假)) ' 检查SHIFT键是否被按下。


.子程序 右Shift键是否按下, 逻辑型, , 
返回 (选择 (不等于 (取键状态 (161), 0), 真, 假)) ' 检查SHIFT键是否被按下。

.子程序 左Ctrl键是否按下, 逻辑型, , 
返回 (选择 (不等于 (取键状态 (162), 0), 真, 假)) ' 检查SHIFT键是否被按下。

.子程序 右Ctrl键是否按下, 逻辑型, , 
返回 (选择 (不等于 (取键状态 (163), 0), 真, 假)) ' 检查SHIFT键是否被按下。

.子程序 左Win键是否按下, 逻辑型, , 
返回 (选择 (不等于 (取键状态 (91), 0), 真, 假)) ' 检查SHIFT键是否被按下。

.子程序 右Win键是否按下, 逻辑型, , 
返回 (选择 (不等于 (取键状态 (92), 0), 真, 假)) ' 检查SHIFT键是否被按下。

.子程序 左Alt键是否按下, 逻辑型, , 
返回 (选择 (不等于 (取键状态 (164), 0), 真, 假)) ' 检查SHIFT键是否被按下。

.子程序 右Alt键是否按下, 逻辑型, , 
返回 (选择 (不等于 (取键状态 (165), 0), 真, 假)) ' 检查SHIFT键是否被按下。

.子程序 测试按键代码, 空白型, , 
.参数 是否采用对话框方式, 逻辑型, 可空, 

.如果 (是否为空 (是否采用对话框方式))
    载入 (_启动窗口, , 真)
.否则
    载入 (_启动窗口, , 是否采用对话框方式)
    
.如果结束


.窗口程序集 窗口程序集1, , , 

.子程序 _时钟1_周期事件, 空白型, , 
.如果 (左Shift键是否按下 ())
    赋值 (., “SHIFT按下”)
.否则
    赋值 (., “SHIFT按88”)
    
.如果结束
.如果 (左Ctrl键是否按下 ())
    赋值 (., “CTRL键按下”)
.否则
    赋值 (., “CTRL键按下888”)
    
.如果结束


.窗口程序集 窗口程序集2, , , 

.子程序 _时钟1_周期事件, 空白型, , 
.局部变量 i, 整数型, , , 
.局部变量 z, 整数型, , , 

.变量循环首 (1, 180, 1, i)
    赋值 (z, 取状态 (i))
    .如果真 (等于 (z, -32767))
        赋值 (., 到文本 (i))
        赋值 (., 相加 (., 到小写 (字符 (i))))
    .如果真结束
    
.变量循环尾 ()

下面为测试用代码
.如果 (取大写锁定键状态 ())
    赋值 (., “大写-开”)
.否则
    赋值 (., “大写-关”)
    
.如果结束

.如果 (取小键盘锁定键状态 ())
    赋值 (., “小键盘-开”)
.否则
    赋值 (., “小键盘-关”)
.如果结束

.如果 (取ScrollLokc锁定键状态 ())
    赋值 (., “ScrollLokc-开”)
.否则
    赋值 (., “ScrollLokc-关”)
.如果结束

.如果 (左Shift键是否按下 ())
    赋值 (., “左Shift键按下”)
.否则
    赋值 (., “左Shift键抬起”)
.如果结束

.如果 (左Ctrl键是否按下 ())
    赋值 (., “左Ctrl键按下”)
.否则
    赋值 (., “左Ctrl键抬起”)
.如果结束

.如果 (左Alt键是否按下 ())
    赋值 (., “左Alt键按下”)
.否则
    赋值 (., “左Alt键抬起”)
.如果结束

.如果 (左Win键是否按下 ())
    赋值 (., “左WIN键按下”)
.否则
    赋值 (., “左win键抬起”)
.如果结束


.子程序 _按钮1_被单击, 空白型, , 
.如果 (写到文件 (“C:\取功能键状态.e”, #图片1))
    信息框 (“已成功保存程序源代码到>>>>C:\取功能键状态.e<<<”, 0, “恭喜”)
.否则
    信息框 (“保存程序源代码到>>>C:\取功能键状态.e<<<失败”, 0, “失败”)
    
.如果结束



 ' 不属于任何一个程序集、类模块的函数：
