 ' 文件类型：Windows窗口程序

 ' 程序名称：易语言经典算法 - 求回文数
 ' 程序描述：　　显示所有位数不超过8位的其平方具有对称性质的数(也称回文数)。 例如：11×11=121，121就是回文数。
 ' 程序作者：大有吴涛易语言软件公司
 ' 邮政编码：116001
 ' 联系地址：辽宁省大连市中山区人民路55号亚太国际金融中心
 ' 联系电话：+86-0411-88995831
 ' 传真号码：+86-0411-88995834
 ' 电子信箱：service@dywt.com.cn
 ' 主页地址：http://www.dywt.com.cn
 ' 版权声明：祝您一帆风顺，心想事成！
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 400
    高度 = 296
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “易语言经典算法 - 求回文数”
    帮助文件名 = “”





 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 4 系统核心支持库
 ' iext3 {B6F7542F-B8FE-46a8-9605-98856A687097} 2 0 扩展界面支持库三
 ' iext 27bb20fdd3e145e4bee3db39ddd6e64c 1 2 扩展界面支持库一





.窗口程序集 启动窗口程序集, , , 

.程序集变量 数组, 整数型, , "16", 存放拆分出来的每一位数字
.程序集变量 循环变量, 整数型, , , 变量循环的循环变量
.程序集变量 数组下标, 整数型, , , 记录‘数组’的数组下标
.程序集变量 累计变量, 整数型, , , 
.程序集变量 计数, 整数型, , , 
.程序集变量 两数商, 整数型, , , 存放某数除以10的商
.程序集变量 余数, 整数型, , , 存放某数除以10的余数
.子程序 __启动窗口_创建完毕, 空白型, , 
 ' 问题：显示所有位数不超过8位的其平方具有对称性质的数(也称回文数)。 例如：11×11=121，121就是回文数。
 ' 问题描述：显示一个自然数，要求这个自然数的平方具有对称性质(也称回文数)；如１１的平方１２１，２２的平方４８４
 ' 如果将某个自然数的各位数字顺序倒过来，得到的数仍为它本身，则称这个自然数为回文数。
 ' 问题分析：
 ' 对于要判断的数，计算出其平方后，将其的每一位进行分解，再按它的从低到高的顺序将其恢复成一个数k(如n=13，则a=169且' k=961)，若a等于k则可判定n为回文数。

赋值 (数组下标, 1) ' 初始化数组下标。

.子程序 _计算图形按钮_被单击, 空白型, , 
.局部变量 输入数, 整数型, , , 

赋值 (输入数, 到数值 (.内容))
.如果 (小于或等于 (输入数, 999999)) ' 判断输入数是否过大
    计算子程序 (输入数)
.否则
    信息框 (“您输入的数过大！”, #错误图标, “出现错误了：”)
.如果结束


.子程序 计算子程序, 空白型, , 判断是否是回文数
.参数 参数, 整数型, , 

.局部变量 表项位置, 整数型, , , 

赋值 (计数, 0)
全部删除 ()
.变量循环首 (1, 参数, 1, 循环变量) ' *穷举n的取值范围*
    赋值 (余数, 0)
    赋值 (累计变量, 1)
    赋值 (两数商, 相乘 (循环变量, 循环变量)) ' 计算 循环变量 的平方
    .判断循环首 (不等于 (两数商, 0))
        赋值 (数组 [数组下标], 求余数 (两数商, 10)) ' 从低到高分解数变量1的每一位数值存于数组
        赋值 (两数商, 相除 (两数商, 10))
        赋值 (数组下标, 相加 (数组下标, 1))
    .判断循环尾 ()
    .判断循环首 (大于 (数组下标, 1)) ' 将分解后的数字从低到高重新排序成新的数字
        赋值 (余数, 相加 (余数, 相乘 (数组 [相减 (数组下标, 1)], 累计变量)))
        赋值 (累计变量, 相乘 (累计变量, 10))
        赋值 (数组下标, 相减 (数组下标, 1))
    .判断循环尾 ()
    .如果真 (等于 (余数, 相乘 (循环变量, 循环变量)))
        赋值 (计数, 相加 (计数, 1))
        赋值 (表项位置, .插入表项 ()) ' 显示结果
        表项位置.置标题 (0, 到文本 (计数))
        表项位置.置标题 (1, 到文本 (循环变量))
        表项位置.置标题 (2, 到文本 (相乘 (循环变量, 循环变量)))
    .如果真结束
    
.变量循环尾 ()


 ' 不属于任何一个程序集、类模块的函数：
