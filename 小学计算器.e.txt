 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 249
    高度 = 234
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “四则表达式计算器”
    帮助文件名 = “”

窗口 窗口1
    左边 = 50
    顶边 = 50
    宽度 = 97
    高度 = 159
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “次方计算器”
    帮助文件名 = “”



.图片 皮肤文件, " ' 已保存到：D:\易语言学习\Data\小学计算器.e\皮肤文件", , 
.图片 DLL, " ' 已保存到：D:\易语言学习\Data\小学计算器.e\DLL", , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 4 系统核心支持库
 ' EDataStructure 0AFF5F28B2CB42ce906AA27D6E485457 1 1 数据结构支持库





.DLL命令 加载皮肤, 逻辑型, "SkinPlusPlusE.dll", "sppLoadSkin", , 
    .参数 strSkinFilePath, 文本型, , 皮肤路径
    .参数 fWithOutHook, 逻辑型, , 该参数指定加载皮肤时是否开启Hook功能

.窗口程序集 窗口程序集1, , , 

.程序集变量 按键, 按钮, , "19", 
.程序集变量 算符堆栈, 未知类型0x20003, , , 
.程序集变量 数据堆栈, 未知类型0x20003, , , 
.子程序 __启动窗口_创建完毕, 空白型, , 
.局部变量 变量, 整数型, , , 

.计次循环首 (19, 变量)
    复制窗口组件 (按键 [变量])
    赋值 (按键 [变量], 左边, 相加 (.左边, 相乘 (求余数 (变量, 4), 43)))
    赋值 (按键 [变量], 顶边, 相加 (.顶边, 相乘 (整除 (变量, 4), 34)))
    赋值 (按键 [变量], 标题, 多项选择 (变量, “)”, “退格”, “清除”, “7”, “8”, “9”, “/”, “4”, “5”, “6”, “*”, “1”, “2”, “3”, “-”, “0”, “.”, “=”, “+”))
    赋值 (按键 [变量], 可视, 真)
.计次循环尾 ()
获取焦点 ()
写到文件 (相加 (取运行目录 (), “\SkinPlusPlusE.dll”), #DLL)
写到文件 (相加 (取运行目录 (), “\PixOS.ssk”), #皮肤文件)
加载皮肤 (“PixOS.ssk”, 假)

.子程序 _数字按钮_被单击, 空白型, , 
.局部变量 临时按钮, 按钮, , , 
.局部变量 变量, 整数型, , , 
.局部变量 已存在, 逻辑型, , , 
.局部变量 文本, 文本型, , , 

赋值 (临时按钮, 取事件组件 ())
.判断开始 (等于 (临时按钮.标题, “退格”))
    赋值 (.内容, 取文本左边 (.内容, 相减 (取文本长度 (.内容), 1)))
.判断 (等于 (临时按钮.标题, “清除”))
    赋值 (.内容, “”)
.判断 (等于 (临时按钮.标题, “=”))
    赋值 (.内容, 计算表达式 (.内容))
.默认
    赋值 (.内容, 相加 (.内容, 临时按钮.标题))
.判断结束


.子程序 计算表达式, 文本型, , 
.参数 表达式, 文本型, , 

.局部变量 变量, 整数型, , , 
.局部变量 数据, 文本型, , , 
.局部变量 优先级, 文本型, , , 
.局部变量 操作数1, 整数型, , , 
.局部变量 操作数2, 整数型, , , 
.局部变量 负头, 逻辑型, , , 

算符堆栈.未知支持库函数_39 ()
数据堆栈.未知支持库函数_39 ()
赋值 (表达式, 相加 (子文本替换 (删全部空 (到半角 (表达式)), “(-”, “(0-”, 1, , 假), “#”))
赋值 (数据, 取文本左边 (表达式, 1))
赋值 (负头, 选择 (等于 (数据, “-”), 真, 假))
.判断循环首 (或者 (不等于 (数据, “#”), 不等于 (取算符栈顶 (算符堆栈), “#”)))
    .如果 (并且 (或者 (等于 (数据, “+”), 等于 (数据, “-”), 等于 (数据, “*”), 等于 (数据, “/”), 等于 (数据, “(”), 等于 (数据, “)”), 等于 (数据, “#”)), 等于 (负头, 假)))
        赋值 (表达式, 选择 (不等于 (数据, “#”), 文本替换 (表达式, 1, 1, ), 表达式))
        .循环判断首 ()
            赋值 (优先级, 比较优先级 (取算符栈顶 (算符堆栈), 数据))
            .判断开始 (等于 (优先级, “<”))
                算符入栈 (算符堆栈, 数据)
            .判断 (等于 (优先级, “=”))
                算符出栈 (算符堆栈)
            .判断 (等于 (优先级, “>”))
                赋值 (操作数2, 数据出栈 (数据堆栈))
                赋值 (操作数1, 数据出栈 (数据堆栈))
                数据入栈 (数据堆栈, 计算 (操作数1, 算符出栈 (算符堆栈), 操作数2))
            .默认
                
            .判断结束
            
        .循环判断尾 (等于 (优先级, “>”))
    .否则
        赋值 (数据, 到文本 (到数值 (表达式)))
        赋值 (表达式, 文本替换 (表达式, 1, 取文本长度 (数据), ))
        数据入栈 (数据堆栈, 到数值 (数据))
        赋值 (负头, 假)
    .如果结束
    赋值 (数据, 选择 (等于 (数据, “#”), “#”, 取文本左边 (表达式, 1)))
.判断循环尾 ()
返回 (到文本 (数据出栈 (数据堆栈)))

.子程序 数据出栈, 整数型, , 
.参数 堆栈, 未知类型0x20003, , 

.局部变量 节点, 未知类型0x20001, , , 
.局部变量 数据, 整数型, , , 

堆栈.未知支持库函数_42 (节点)
节点.未知支持库函数_8 (“数据”, 数据)
返回 (数据)

.子程序 数据入栈, 逻辑型, , 
.参数 堆栈, 未知类型0x20003, , 
.参数 数据, 整数型, , 

.局部变量 节点, 未知类型0x20001, , , 

节点.未知支持库函数_3 (“数据”, 数据)
返回 (堆栈.未知支持库函数_41 (节点))

.子程序 算符出栈, 文本型, , 
.参数 堆栈, 未知类型0x20003, , 

.局部变量 节点, 未知类型0x20001, , , 
.局部变量 算符, 文本型, , , 

堆栈.未知支持库函数_42 (节点)
节点.未知支持库函数_11 (“算符”, 算符)
返回 (算符)

.子程序 算符入栈, 逻辑型, , 
.参数 堆栈, 未知类型0x20003, , 
.参数 算符, 文本型, , 

.局部变量 节点, 未知类型0x20001, , , 

节点.未知支持库函数_3 (“算符”, 算符)
返回 (堆栈.未知支持库函数_41 (节点))

.子程序 取数据栈顶, 整数型, , 
.参数 堆栈, 未知类型0x20003, , 

.局部变量 节点, 未知类型0x20001, , , 
.局部变量 数据, 整数型, , , 

堆栈.未知支持库函数_40 (节点)
节点.未知支持库函数_8 (“数据”, 数据)
返回 (数据)

.子程序 取算符栈顶, 文本型, , 
.参数 堆栈, 未知类型0x20003, , 

.局部变量 节点, 未知类型0x20001, , , 
.局部变量 算符, 文本型, , , 

堆栈.未知支持库函数_40 (节点)
节点.未知支持库函数_11 (“算符”, 算符)
返回 (算符)

.子程序 比较优先级, 文本型, , 
.参数 算符1, 文本型, , 
.参数 算符2, 文本型, , 

.判断开始 (或者 (等于 (算符1, “+”), 等于 (算符1, “-”)))
    返回 (选择 (或者 (等于 (算符2, “+”), 等于 (算符2, “-”), 等于 (算符2, “)”), 等于 (算符2, “#”)), “>”, “<”))
.判断 (或者 (等于 (算符1, “*”), 等于 (算符1, “/”)))
    返回 (选择 (等于 (算符2, “(”), “<”, “>”))
.判断 (等于 (算符1, “(”))
    返回 (选择 (或者 (等于 (算符2, “)”), 等于 (算符2, “#”)), “=”, “<”))
.判断 (等于 (算符1, “)”))
    返回 (“>”)
.判断 (等于 (算符1, “#”))
    返回 (选择 (等于 (算符2, “#”), “=”, “<”))
.默认
    返回 (“<”)
.判断结束


.子程序 计算, 整数型, , 
.参数 数据1, 整数型, , 
.参数 算符, 文本型, , 
.参数 数据2, 整数型, , 

.判断开始 (等于 (算符, “+”))
    返回 (相加 (数据1, 数据2))
.判断 (等于 (算符, “-”))
    返回 (相减 (数据1, 数据2))
.判断 (等于 (算符, “*”))
    返回 (相乘 (数据1, 数据2))
.默认
    返回 (相除 (数据1, 数据2))
.判断结束


.子程序 _按钮1_被单击, 空白型, , 
运行 (“calc.exe”, 假, #普通激活)


.子程序 _按钮2_被单击, 空白型, , 
赋值 (.内容, 到文本 (求平方根 (到数值 (.内容))))

.子程序 _按钮3_被单击, 空白型, , 
载入 (窗口1, , 真)



.窗口程序集 窗口程序集2, , , 

.子程序 _按钮1_被单击, 空白型, , 
赋值 (.内容, 到文本 (求次方 (到数值 (.内容), 到数值 (.内容))))





 ' 不属于任何一个程序集、类模块的函数：
