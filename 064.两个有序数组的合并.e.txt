 ' 文件类型：Windows窗口程序

 ' 程序名称：易语言经典算法 - 合并有序数列
 ' 程序描述：　　有两组不同长度的数列分别为从小到大排列，设计一种算法把两列数合并成一列从小到大排列的数列。
 ' 程序作者：大有吴涛易语言软件公司
 ' 邮政编码：116001
 ' 联系地址：辽宁省大连市中山区人民路55号亚太国际金融中心
 ' 联系电话：+86-0411-88995831
 ' 传真号码：+86-0411-88995834
 ' 电子信箱：service@dywt.com.cn
 ' 主页地址：http://www.dywt.com.cn
 ' 版权声明：祝您一帆风顺，心想事成！
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 400
    高度 = 280
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “易语言经典算法 - 合并有序数列”
    帮助文件名 = “”





 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 4 系统核心支持库
 ' iext3 {B6F7542F-B8FE-46a8-9605-98856A687097} 2 0 扩展界面支持库三





.窗口程序集 启动窗口程序集, , , 

.程序集变量 有序数组1, 整数型, , "0", 存储第一组数
.程序集变量 有序数组2, 整数型, , "0", 存储第二组数
.程序集变量 是否初始化, 逻辑型, , , 第一次按下计算按钮不初始化
.子程序 __启动窗口_创建完毕, 空白型, , 
 ' 问题：合并有序数列
 ' 问题描述：
 ' 有两组不同长度的数列分别为从小到大排列，设计一种算法把两列数合并成一列从小到大排列的数列
 ' 问题分析：
 ' 首先，比较两列数的第一个数，选出较小的数存储并用该组的下一个数继续与较大数比较。(两数相等按第一组的数大为准)
 ' 然后，每次选出一个较小的数后都继续用该组的下一个数与上一次比较后的较大数比较
 ' 依此类推，直至有一组数列全部被比较完。把有剩余组的数按顺序加入到结果数列的尾部
 ' 备注

初始化子程序 ()
赋值 (是否初始化, 假) ' 第一次按下计算按钮不初始化

.子程序 初始化子程序, 空白型, , 
.局部变量 开始值, 整数型, , , 设计一个递增数列的基数
.局部变量 循环次数, 整数型, , , 随机产生数列的长度

清除数组 (有序数组1)
清除数组 (有序数组2)
赋值 (.内容, “”)
赋值 (.内容, “”)
赋值 (.内容, “”)
赋值 (开始值, 1) ' 生成的所有数都比1大
置随机数种子 ()
赋值 (循环次数, 取随机数 (6, 11)) ' 获得数列1的长度
.计次循环首 (循环次数, )
    赋值 (开始值, 相加 (开始值, 取随机数 (1, 10)))
    加入成员 (有序数组1, 开始值)
    相加 (到文本 (开始值), “,”).加入文本 ()
.计次循环尾 ()
赋值 (开始值, 1) ' 生成的所有数都比1大
赋值 (循环次数, 取随机数 (6, 11)) ' 获得数列2的长度
.计次循环首 (循环次数, )
    赋值 (开始值, 相加 (开始值, 取随机数 (1, 10)))
    加入成员 (有序数组2, 开始值)
    相加 (到文本 (开始值), “,”).加入文本 ()
.计次循环尾 ()


.子程序 _计算图形按钮_被单击, 空白型, , 
.如果真 (等于 (是否初始化, 真))
    初始化子程序 ()
.如果真结束
合并子程序 ()

.子程序 合并子程序, 空白型, , 合并两个有序数列
.局部变量 数组1下标, 整数型, , , 有序数组1的当前比较数标记
.局部变量 数组2下标, 整数型, , , 有序数组2的当前比较数标记
.局部变量 结果数组, 整数型, , "0", 存储排列结果的数组
.局部变量 局部计次变量, 整数型, , , 

 ' 从第一个数开始比较
赋值 (数组1下标, 1)
赋值 (数组2下标, 1)
.计次循环首 (相加 (取数组成员数 (有序数组1), 取数组成员数 (有序数组2)), ) ' 循环次数为两组数的个数的和
    .判断开始 (大于 (有序数组1 [数组1下标], 有序数组2 [数组2下标])) ' 如果第二组的比较数小
        加入成员 (结果数组, 有序数组2 [数组2下标])
        赋值 (数组2下标, 相加 (数组2下标, 1)) ' 比较下一个数
    .默认
         ' 如果第一组的数大或两数相等
        加入成员 (结果数组, 有序数组1 [数组1下标])
        赋值 (数组1下标, 相加 (数组1下标, 1)) ' 比较下一个数
    .判断结束
    .如果真 (大于 (数组1下标, 取数组成员数 (有序数组1))) ' 如果第一组书全部比较完
        .判断循环首 (小于或等于 (数组2下标, 取数组成员数 (有序数组2))) ' 把第二组剩余数加入结果尾部
            加入成员 (结果数组, 有序数组2 [数组2下标])
            赋值 (数组2下标, 相加 (数组2下标, 1))
        .判断循环尾 ()
        跳出循环 ()
    .如果真结束
    .如果真 (大于 (数组2下标, 取数组成员数 (有序数组2))) ' 如果第二组书全部比较完
        .判断循环首 (小于或等于 (数组1下标, 取数组成员数 (有序数组1))) ' 把第一组剩余数加入结果尾部
            加入成员 (结果数组, 有序数组1 [数组1下标])
            赋值 (数组1下标, 相加 (数组1下标, 1))
        .判断循环尾 ()
        跳出循环 ()
    .如果真结束
    
.计次循环尾 ()
.计次循环首 (取数组成员数 (结果数组), 局部计次变量) ' 显示结果
    相加 (到文本 (结果数组 [局部计次变量]), “,”).加入文本 ()
.计次循环尾 ()
赋值 (.内容, 取文本左边 (.内容, 相减 (取文本长度 (.内容), 1)))

赋值 (是否初始化, 真)



 ' 不属于任何一个程序集、类模块的函数：
