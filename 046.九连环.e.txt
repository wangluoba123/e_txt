 ' 文件类型：Windows窗口程序

 ' 程序名称：易语言经典算法 - 九连环(递归)
 ' 程序描述：    九连环游戏是中国人自己发明的，它的历史非常悠久，据说是起源于战国时期。九连环主要是由一个框架和九个圆环组成：每个圆环上连有一个直杆，而这个直杆则在后面一个圆环内穿过，九个直杆的另一端用一块木板或圆环相对固定。
 ' 程序作者：大有吴涛易语言软件公司
 ' 邮政编码：116001
 ' 联系地址：辽宁省大连市中山区人民路55号亚太国际金融中心
 ' 联系电话：+86(0411)88995831
 ' 传真号码：+86(0411)88995834
 ' 电子信箱：service@dywt.com.cn
 ' 主页地址：http://www.dywt.com.cn
 ' 版权声明：祝您一帆风顺，心想事成！
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 400
    高度 = 280
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “易语言经典算法 - 九连环(递归法)”
    帮助文件名 = “”





 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 4 系统核心支持库
 ' iext3 {B6F7542F-B8FE-46a8-9605-98856A687097} 2 0 扩展界面支持库三





.窗口程序集 启动窗口程序集, , , 

.程序集变量 拆环的步数, 整数型, , , 
.子程序 __启动窗口_创建完毕, 空白型, , 
 ' 使用算法：递归法
 ' 问题：九连环
 ' 问题描述：
 ' 九连环游戏是中国人自己发明的，它的历史非常悠久，据说是起源于战国时期。
 ' 九连环主要是由一个框架和九个圆环组成：每个圆环上连有一个直杆，
 ' 而这个直杆则在后面一个圆环内穿过，九个直杆的另一端用一块木板或圆环相对固定。
 ' 计算九连环游戏中取下某一个环需要几步？
 ' 问题分析：
 ' 正确的拆解是先以第 9 环为目标，先拆下它，简化为拆一个 8 连环。接着再也第 8 环为目标，拆下它，
 ' 简化为拆一个 7 连环。以此类推，直至全部拆解。深刻的理解了上面所说的规律后，就会发现，
 ' 安装上第 9 环后，问题可以被简化为装一个 7 连环，而当装上第 7 环后，问题就被简化为装一个 5 连环了...,
 ' 最后找出九连环跟递归一定有联系。那么整个游戏所需步数=取下第1个环所需步数+...+取下第9个环所需步数。
 ' 我们就用递归来实现这个问题。
 ' 备注：

.子程序 _计算图形按钮_被单击, 空白型, , 
.局部变量 要拆的环位置, 整数型, , , 存放拆解的环在九连环中的位置
.局部变量 循环变量, 整数型, , , 

 ' 将存放拆环的步数清零
赋值 (拆环的步数, 0)
 ' 接收输入的环位置
赋值 (要拆的环位置, 到数值 (.内容))
 ' 开始拆解
.如果 (并且 (大于 (要拆的环位置, 0), 小于或等于 (要拆的环位置, 9)))
    拆解九连环 (相加 (要拆的环位置, 1))
.否则
    信息框 (“输入的数值介于１－９之间！”, 0, )
.如果结束
 ' 显示结果
赋值 (.内容, 到文本 (拆环的步数))


.子程序 拆解九连环, 空白型, , 拆解九连环的过程，递归过程
.参数 拆环的位置, 整数型, , 拆解的环在九连环中的位置

.局部变量 循环变量1, 整数型, , , 
.局部变量 循环变量2, 整数型, , , 

 ' 判断要拆的环的位置
.如果 (或者 (等于 (拆环的位置, 1), 等于 (拆环的位置, 2)))
    赋值 (拆环的步数, 相加 (拆环的步数, 1))
.否则
     ' 如果要拆的环不是第一个和第二个，则进入递归过程
    .变量循环首 (1, 相减 (拆环的位置, 2), 1, 循环变量2)
        拆解九连环 (循环变量2)
    .变量循环尾 ()
    赋值 (拆环的步数, 相加 (拆环的步数, 1))
    .变量循环首 (1, 相减 (拆环的位置, 2), 1, 循环变量1)
        拆解九连环 (循环变量1)
    .变量循环尾 ()
.如果结束




 ' 不属于任何一个程序集、类模块的函数：
