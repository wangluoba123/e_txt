 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 651
    高度 = 476
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = 12632256 '  0xC0C0C0
    最大化按钮 = 假
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    背景音乐 =  ' 已保存到：D:\易语言学习\Data\Kx10.e\_启动窗口_背景音乐
    标题 = “西风纸牌之[ 嵌线 ] 1.0”
    帮助文件名 = “”

窗口 信息窗口
    左边 = 50
    顶边 = 50
    宽度 = 431
    高度 = 250
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 0
    底图方式 = 1
    底色 = 16744576 '  0xFF8080
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 真
    外形 = 17
    总在最前 = 假
    保持标题栏激活 = 假
    背景音乐 =  ' 空
    标题 = “”
    帮助文件名 = “”

窗口 关于窗口
    左边 = 50
    顶边 = 50
    宽度 = 368
    高度 = 250
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = 12632256 '  0xC0C0C0
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 假
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 假
    随意移动 = 真
    外形 = 0
    总在最前 = 真
    保持标题栏激活 = 真
    背景音乐 =  ' 已保存到：D:\易语言学习\Data\Kx10.e\关于窗口_背景音乐
    标题 = “”
    帮助文件名 = “”

窗口 排行榜
    左边 = 50
    顶边 = 50
    宽度 = 338
    高度 = 250
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = 12632256 '  0xC0C0C0
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    背景音乐 =  ' 空
    标题 = “玩家排行榜”
    帮助文件名 = “”



.声音 滚动, " ' 已保存到：D:\易语言学习\Data\Kx10.e\滚动", , 
.图片 纸牌背景, " ' 已保存到：D:\易语言学习\Data\Kx10.e\纸牌背景", , 
.图片 窗口底图, " ' 已保存到：D:\易语言学习\Data\Kx10.e\窗口底图", , 
.图片 看牌2, " ' 已保存到：D:\易语言学习\Data\Kx10.e\看牌2", , 
.图片 看牌1, " ' 已保存到：D:\易语言学习\Data\Kx10.e\看牌1", , 
.图片 不看1, " ' 已保存到：D:\易语言学习\Data\Kx10.e\不看1", , 
.图片 不看2, " ' 已保存到：D:\易语言学习\Data\Kx10.e\不看2", , 
.图片 黑桃1, " ' 已保存到：D:\易语言学习\Data\Kx10.e\黑桃1", , 
.图片 黑桃13, " ' 已保存到：D:\易语言学习\Data\Kx10.e\黑桃13", , 
.图片 黑桃12, " ' 已保存到：D:\易语言学习\Data\Kx10.e\黑桃12", , 
.图片 黑桃11, " ' 已保存到：D:\易语言学习\Data\Kx10.e\黑桃11", , 
.图片 黑桃10, " ' 已保存到：D:\易语言学习\Data\Kx10.e\黑桃10", , 
.图片 黑桃9, " ' 已保存到：D:\易语言学习\Data\Kx10.e\黑桃9", , 
.图片 黑桃8, " ' 已保存到：D:\易语言学习\Data\Kx10.e\黑桃8", , 
.图片 黑桃7, " ' 已保存到：D:\易语言学习\Data\Kx10.e\黑桃7", , 
.图片 黑桃6, " ' 已保存到：D:\易语言学习\Data\Kx10.e\黑桃6", , 
.图片 黑桃5, " ' 已保存到：D:\易语言学习\Data\Kx10.e\黑桃5", , 
.图片 黑桃4, " ' 已保存到：D:\易语言学习\Data\Kx10.e\黑桃4", , 
.图片 黑桃3, " ' 已保存到：D:\易语言学习\Data\Kx10.e\黑桃3", , 
.图片 黑桃2, " ' 已保存到：D:\易语言学习\Data\Kx10.e\黑桃2", , 
.图片 红心1, " ' 已保存到：D:\易语言学习\Data\Kx10.e\红心1", , 
.图片 红心13, " ' 已保存到：D:\易语言学习\Data\Kx10.e\红心13", , 
.图片 红心12, " ' 已保存到：D:\易语言学习\Data\Kx10.e\红心12", , 
.图片 红心11, " ' 已保存到：D:\易语言学习\Data\Kx10.e\红心11", , 
.图片 红心10, " ' 已保存到：D:\易语言学习\Data\Kx10.e\红心10", , 
.图片 红心9, " ' 已保存到：D:\易语言学习\Data\Kx10.e\红心9", , 
.图片 红心8, " ' 已保存到：D:\易语言学习\Data\Kx10.e\红心8", , 
.图片 红心7, " ' 已保存到：D:\易语言学习\Data\Kx10.e\红心7", , 
.图片 红心6, " ' 已保存到：D:\易语言学习\Data\Kx10.e\红心6", , 
.图片 红心5, " ' 已保存到：D:\易语言学习\Data\Kx10.e\红心5", , 
.图片 红心4, " ' 已保存到：D:\易语言学习\Data\Kx10.e\红心4", , 
.图片 红心3, " ' 已保存到：D:\易语言学习\Data\Kx10.e\红心3", , 
.图片 红心2, " ' 已保存到：D:\易语言学习\Data\Kx10.e\红心2", , 
.图片 梅花1, " ' 已保存到：D:\易语言学习\Data\Kx10.e\梅花1", , 
.图片 梅花13, " ' 已保存到：D:\易语言学习\Data\Kx10.e\梅花13", , 
.图片 梅花12, " ' 已保存到：D:\易语言学习\Data\Kx10.e\梅花12", , 
.图片 梅花11, " ' 已保存到：D:\易语言学习\Data\Kx10.e\梅花11", , 
.图片 梅花10, " ' 已保存到：D:\易语言学习\Data\Kx10.e\梅花10", , 
.图片 梅花9, " ' 已保存到：D:\易语言学习\Data\Kx10.e\梅花9", , 
.图片 梅花8, " ' 已保存到：D:\易语言学习\Data\Kx10.e\梅花8", , 
.图片 梅花7, " ' 已保存到：D:\易语言学习\Data\Kx10.e\梅花7", , 
.图片 梅花6, " ' 已保存到：D:\易语言学习\Data\Kx10.e\梅花6", , 
.图片 梅花5, " ' 已保存到：D:\易语言学习\Data\Kx10.e\梅花5", , 
.图片 梅花4, " ' 已保存到：D:\易语言学习\Data\Kx10.e\梅花4", , 
.图片 梅花3, " ' 已保存到：D:\易语言学习\Data\Kx10.e\梅花3", , 
.图片 梅花2, " ' 已保存到：D:\易语言学习\Data\Kx10.e\梅花2", , 
.图片 方块1, " ' 已保存到：D:\易语言学习\Data\Kx10.e\方块1", , 
.图片 方块13, " ' 已保存到：D:\易语言学习\Data\Kx10.e\方块13", , 
.图片 方块12, " ' 已保存到：D:\易语言学习\Data\Kx10.e\方块12", , 
.图片 方块11, " ' 已保存到：D:\易语言学习\Data\Kx10.e\方块11", , 
.图片 方块10, " ' 已保存到：D:\易语言学习\Data\Kx10.e\方块10", , 
.图片 方块9, " ' 已保存到：D:\易语言学习\Data\Kx10.e\方块9", , 
.图片 方块8, " ' 已保存到：D:\易语言学习\Data\Kx10.e\方块8", , 
.图片 方块7, " ' 已保存到：D:\易语言学习\Data\Kx10.e\方块7", , 
.图片 方块6, " ' 已保存到：D:\易语言学习\Data\Kx10.e\方块6", , 
.图片 方块5, " ' 已保存到：D:\易语言学习\Data\Kx10.e\方块5", , 
.图片 方块4, " ' 已保存到：D:\易语言学习\Data\Kx10.e\方块4", , 
.图片 方块3, " ' 已保存到：D:\易语言学习\Data\Kx10.e\方块3", , 
.图片 方块2, " ' 已保存到：D:\易语言学习\Data\Kx10.e\方块2", , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 6 系统核心支持库




.全局变量 玩家姓名, 文本型, , , 
.全局变量 临时库, 文本型, , , 
.全局变量 结果, 文本型, , , 
.全局变量 排行文件, 文本型, , , 

.DLL命令 打开关联文件, 空白型, "shell32.dll", "ShellExecuteA", , 
    .参数 句柄, 整数型, , 调用API的窗口句柄
    .参数 操作, 文本型, , 操作符：打开“open”；打印“print”
    .参数 文件名, 文本型, , 欲打开的文件名
    .参数 参数, 文本型, , 运行参数
    .参数 路径, 文本型, , 关联程序的完整路径
    .参数 运行状态, 整数型, , 关联程序的窗口状态

.窗口程序集 主程序集, , , 

.程序集变量 图片, 字节集, , "4,13", 
.程序集变量 洗牌顺序, 图片框, , "52", 
.程序集变量 南, 短整数型, , "2", 
.程序集变量 西, 短整数型, , "2", 
.程序集变量 北, 短整数型, , "2", 
.程序集变量 东, 短整数型, , "2", 
.程序集变量 牌数, 整数型, , , 
.程序集变量 轮过, 字节型, , , 
.程序集变量 玩家, 字节型, , , 
.程序集变量 首家, 字节型, , , 
.程序集变量 开始积分, 短整数型, , , 
.子程序 __启动窗口_创建完毕, 空白型, , 
.局部变量 花色, 整数型, , , 
.局部变量 牌点, 整数型, , , 
.局部变量 临时文件, 文本型, , , 

赋值 (临时文件, 寻找文件 (相加 (选择 (等于 (取文本右边 (取运行目录 (), 1), “\”), 取运行目录 (), 相加 (取运行目录 (), “\”)), “*.edb”), ))
.判断循环首 (不等于 (临时文件, “”))
    删除文件 (临时文件)
    赋值 (临时文件, 寻找文件 ())
.判断循环尾 ()
赋值 (玩家姓名, “西风”)
显示背面 ()
赋值 (图片 [1] [1], #方块1)
赋值 (图片 [1] [2], #方块2)
赋值 (图片 [1] [3], #方块3)
赋值 (图片 [1] [4], #方块4)
赋值 (图片 [1] [5], #方块5)
赋值 (图片 [1] [6], #方块6)
赋值 (图片 [1] [7], #方块7)
赋值 (图片 [1] [8], #方块8)
赋值 (图片 [1] [9], #方块9)
赋值 (图片 [1] [10], #方块10)
赋值 (图片 [1] [11], #方块11)
赋值 (图片 [1] [12], #方块12)
赋值 (图片 [1] [13], #方块13)
赋值 (图片 [2] [1], #梅花1)
赋值 (图片 [2] [2], #梅花2)
赋值 (图片 [2] [3], #梅花3)
赋值 (图片 [2] [4], #梅花4)
赋值 (图片 [2] [5], #梅花5)
赋值 (图片 [2] [6], #梅花6)
赋值 (图片 [2] [7], #梅花7)
赋值 (图片 [2] [8], #梅花8)
赋值 (图片 [2] [9], #梅花9)
赋值 (图片 [2] [10], #梅花10)
赋值 (图片 [2] [11], #梅花11)
赋值 (图片 [2] [12], #梅花12)
赋值 (图片 [2] [13], #梅花13)
赋值 (图片 [3] [1], #红心1)
赋值 (图片 [3] [2], #红心2)
赋值 (图片 [3] [3], #红心3)
赋值 (图片 [3] [4], #红心4)
赋值 (图片 [3] [5], #红心5)
赋值 (图片 [3] [6], #红心6)
赋值 (图片 [3] [7], #红心7)
赋值 (图片 [3] [8], #红心8)
赋值 (图片 [3] [9], #红心9)
赋值 (图片 [3] [10], #红心10)
赋值 (图片 [3] [11], #红心11)
赋值 (图片 [3] [12], #红心12)
赋值 (图片 [3] [13], #红心13)
赋值 (图片 [4] [1], #黑桃1)
赋值 (图片 [4] [2], #黑桃2)
赋值 (图片 [4] [3], #黑桃3)
赋值 (图片 [4] [4], #黑桃4)
赋值 (图片 [4] [5], #黑桃5)
赋值 (图片 [4] [6], #黑桃6)
赋值 (图片 [4] [7], #黑桃7)
赋值 (图片 [4] [8], #黑桃8)
赋值 (图片 [4] [9], #黑桃9)
赋值 (图片 [4] [10], #黑桃10)
赋值 (图片 [4] [11], #黑桃11)
赋值 (图片 [4] [12], #黑桃12)
赋值 (图片 [4] [13], #黑桃13)
.变量循环首 (1, 4, 1, 花色)
    .变量循环首 (1, 13, 1, 牌点)
        .如果真 (不等于 (相加 (到文本 (花色), 取文本右边 (相加 (“0”, 到文本 (牌点)), 2)), “101”))
            事件转移 (取标记组件 (到数值 (相加 (到文本 (花色), 取文本右边 (相加 (“0”, 到文本 (牌点)), 2)))), )
        .如果真结束
        显示背面 (取标记组件 (到数值 (相加 (到文本 (花色), 取文本右边 (相加 (“0”, 到文本 (牌点)), 2)))))
    .变量循环尾 ()
.变量循环尾 ()
赋值 (排行文件, “kx2.dat”)
置排行库 ()
载入 (关于窗口, _启动窗口, 真)

.子程序 显示背面, 空白型, , 
.参数 扑克牌, 图片框, , 

赋值 (扑克牌., #纸牌背景)

.子程序 显示正面, 空白型, , 
.参数 扑克牌, 图片框, , 

赋值 (扑克牌., 图片 [到数值 (取文本左边 (扑克牌., 1))] [到数值 (取文本右边 (扑克牌., 2))])

.子程序 _新游戏_被选择, 空白型, , 
赋值 (., 假)
刷新显示 ()
赋值 (轮过, 0)
赋值 (玩家, 0)
赋值 (首家, 0)
赋值 (牌数, 0)
.如果真 (.)
    赋值 (开始积分, 1000)
.如果真结束
.如果真 (.)
    赋值 (开始积分, 500)
.如果真结束
.如果真 (.)
    赋值 (开始积分, 200)
.如果真结束
赋值 (., 真)
连续赋值 (到文本 (开始积分), ., ., ., .)
赋值 (., “0”)
赋值 (., 玩家姓名)
赋值 (., “李寻欢”)
赋值 (., “楚留香”)
赋值 (., “陆小凤”)
连续赋值 (真, ., ., ., ., ., ., ., ., .)
刷新显示 ()
赋值 (., 真)
赋值 (., 假)
开始 ()

.子程序 开始, 空白型, , 
.如果真 (等于 (., 假))
    洗牌 ()
    发牌并排序 ()
    游戏过程 ()
.如果真结束


.子程序 洗牌, 空白型, , 
.局部变量 未洗牌, 图片框, , "52", 
.局部变量 花色, 整数型, , , 
.局部变量 牌点, 整数型, , , 
.局部变量 容器1, 字节型, , , 
.局部变量 容器2, 字节型, , , 

赋值 (首家, 相加 (首家, 1))
.如果真 (等于 (首家, 5))
    赋值 (首家, 1)
.如果真结束
赋值 (容器2, 53)
.变量循环首 (1, 4, 1, 花色)
    .变量循环首 (1, 13, 1, 牌点)
        赋值 (容器1, 相加 (容器1, 1))
        赋值 (未洗牌 [容器1], 取标记组件 (到数值 (相加 (到文本 (花色), 取文本右边 (相加 (“0”, 到文本 (牌点)), 2)))))
        赋值 (未洗牌 [容器1], , 真)
        显示背面 (未洗牌 [容器1])
    .变量循环尾 ()
.变量循环尾 ()
置随机数种子 ()
.判断循环首 (大于 (取数组成员数 (未洗牌), 0))
    赋值 (容器1, 取随机数 (1, 取数组成员数 (未洗牌)))
    未洗牌.移动 ( [容器1], 287, 168, , )
    未洗牌.调整层次 ( [容器1], #顶层)
    赋值 (容器2, 相减 (容器2, 1))
    赋值 (洗牌顺序 [容器2], 未洗牌 [容器1])
    删除成员 (未洗牌, 容器1, 1)
.判断循环尾 ()
刷新显示 ()
延时 (50)

.子程序 发牌并排序, 空白型, , 
.局部变量 方位, 字节型, , , 
.局部变量 扑克, 图片框, , , 

赋值 (., 到文本 (相减 (到数值 (.), 10)))
赋值 (., 到文本 (相减 (到数值 (.), 10)))
赋值 (., 到文本 (相减 (到数值 (.), 10)))
赋值 (., 到文本 (相减 (到数值 (.), 10)))
赋值 (., 到文本 (相加 (到数值 (.), 40)))
赋值 (方位, 相减 (首家, 1))
.变量循环首 (1, 8, 1, 牌数)
    处理事件 ()
    赋值 (方位, 相加 (方位, 1))
    .如果真 (等于 (方位, 5))
        赋值 (方位, 1)
    .如果真结束
    .如果真 (等于 (方位, 1))
        .如果 (小于或等于 (牌数, 4))
            显示正面 (洗牌顺序 [牌数])
            .如果 (.)
                洗牌顺序.移动 ( [牌数], 286, 170, , )
                .变量循环首 (1, 12, 1, )
                    洗牌顺序.移动 ( [牌数], 相减 (洗牌顺序 [牌数], , 3), 相加 (洗牌顺序 [牌数], , 12), , )
                    刷新显示 ()
                .变量循环尾 ()
            .否则
                洗牌顺序.移动 ( [牌数], 250, 314, , )
                刷新显示 ()
            .如果结束
            赋值 (南 [1], 到数值 (洗牌顺序 [牌数], ))
        .否则
            显示正面 (洗牌顺序 [牌数])
            洗牌顺序.调整层次 ( [牌数], #顶层)
            .如果 (.)
                洗牌顺序.移动 ( [牌数], 282, 170, , )
                .变量循环首 (1, 12, 1, )
                    洗牌顺序.移动 ( [牌数], 相加 (洗牌顺序 [牌数], , 4), 相加 (洗牌顺序 [牌数], , 12), , )
                    刷新显示 ()
                .变量循环尾 ()
            .否则
                洗牌顺序.移动 ( [牌数], 330, 314, , )
                刷新显示 ()
            .如果结束
            赋值 (南 [2], 到数值 (洗牌顺序 [牌数], ))
        .如果结束
        洗牌顺序.调整层次 ( [牌数], #顶层)
        刷新显示 ()
    .如果真结束
    .如果真 (等于 (方位, 2))
        .如果 (小于或等于 (牌数, 4))
            .如果 (.)
                洗牌顺序.移动 ( [牌数], 286, 164, , )
                .变量循环首 (1, 12, 1, )
                    洗牌顺序.移动 ( [牌数], 相减 (洗牌顺序 [牌数], , 22), 相减 (洗牌顺序 [牌数], , 4), , )
                    刷新显示 ()
                .变量循环尾 ()
            .否则
                洗牌顺序.移动 ( [牌数], 22, 116, , )
                刷新显示 ()
            .如果结束
            赋值 (西 [1], 到数值 (洗牌顺序 [牌数], ))
        .否则
            .如果 (.)
                洗牌顺序.调整层次 ( [牌数], #顶层)
                洗牌顺序.移动 ( [牌数], 286, 170, , )
                .变量循环首 (1, 12, 1, )
                    洗牌顺序.移动 ( [牌数], 相减 (洗牌顺序 [牌数], , 22), 相加 (洗牌顺序 [牌数], , 4), , )
                    刷新显示 ()
                .变量循环尾 ()
            .否则
                洗牌顺序.移动 ( [牌数], 22, 218, , )
                刷新显示 ()
            .如果结束
            赋值 (西 [2], 到数值 (洗牌顺序 [牌数], ))
        .如果结束
        洗牌顺序.调整层次 ( [牌数], #顶层)
        刷新显示 ()
    .如果真结束
    .如果真 (等于 (方位, 3))
        .如果 (小于或等于 (牌数, 4))
            .如果 (.)
                洗牌顺序.移动 ( [牌数], 286, 164, , )
                .变量循环首 (1, 12, 1, )
                    洗牌顺序.移动 ( [牌数], 相减 (洗牌顺序 [牌数], , 3), 相减 (洗牌顺序 [牌数], , 12), , )
                    刷新显示 ()
                .变量循环尾 ()
            .否则
                洗牌顺序.移动 ( [牌数], 250, 20, , )
                刷新显示 ()
            .如果结束
            赋值 (北 [1], 到数值 (洗牌顺序 [牌数], ))
        .否则
            .如果 (.)
                洗牌顺序.调整层次 ( [牌数], #顶层)
                洗牌顺序.移动 ( [牌数], 282, 164, , )
                .变量循环首 (1, 12, 1, )
                    洗牌顺序.移动 ( [牌数], 相加 (洗牌顺序 [牌数], , 4), 相减 (洗牌顺序 [牌数], , 12), , )
                    刷新显示 ()
                .变量循环尾 ()
            .否则
                洗牌顺序.移动 ( [牌数], 330, 20, , )
                刷新显示 ()
            .如果结束
            赋值 (北 [2], 到数值 (洗牌顺序 [牌数], ))
        .如果结束
        洗牌顺序.调整层次 ( [牌数], #顶层)
        刷新显示 ()
    .如果真结束
    .如果真 (等于 (方位, 4))
        .如果 (小于或等于 (牌数, 4))
            .如果 (.)
                洗牌顺序.移动 ( [牌数], 290, 164, , )
                .变量循环首 (1, 12, 1, )
                    洗牌顺序.移动 ( [牌数], 相加 (洗牌顺序 [牌数], , 22), 相减 (洗牌顺序 [牌数], , 4), , )
                    刷新显示 ()
                .变量循环尾 ()
            .否则
                洗牌顺序.移动 ( [牌数], 554, 116, , )
                刷新显示 ()
            .如果结束
            赋值 (东 [1], 到数值 (洗牌顺序 [牌数], ))
        .否则
            .如果 (.)
                洗牌顺序.移动 ( [牌数], 290, 170, , )
                洗牌顺序.调整层次 ( [牌数], #顶层)
                .变量循环首 (1, 12, 1, )
                    洗牌顺序.移动 ( [牌数], 相加 (洗牌顺序 [牌数], , 22), 相加 (洗牌顺序 [牌数], , 4), , )
                    刷新显示 ()
                .变量循环尾 ()
            .否则
                洗牌顺序.移动 ( [牌数], 554, 218, , )
                刷新显示 ()
            .如果结束
            赋值 (东 [2], 到数值 (洗牌顺序 [牌数], ))
        .如果结束
        洗牌顺序.调整层次 ( [牌数], #顶层)
        刷新显示 ()
    .如果真结束
    
.变量循环尾 ()
.如果真 (大于 (到数值 (取文本右边 (到文本 (南 [1]), 2)), 到数值 (取文本右边 (到文本 (南 [2]), 2))))
    赋值 (扑克, 取标记组件 (南 [2]))
    扑克.移动 (250, 314, , )
    赋值 (扑克, 取标记组件 (南 [1]))
    扑克.移动 (330, 314, , )
.如果真结束
.如果真 (大于 (到数值 (取文本右边 (到文本 (北 [1]), 2)), 到数值 (取文本右边 (到文本 (北 [2]), 2))))
    赋值 (扑克, 取标记组件 (北 [2]))
    扑克.移动 (250, 20, , )
    赋值 (扑克, 取标记组件 (北 [1]))
    扑克.移动 (330, 20, , )
.如果真结束
.如果真 (大于 (到数值 (取文本右边 (到文本 (西 [1]), 2)), 到数值 (取文本右边 (到文本 (西 [2]), 2))))
    赋值 (扑克, 取标记组件 (西 [2]))
    扑克.移动 (22, 116, , )
    赋值 (扑克, 取标记组件 (西 [1]))
    扑克.移动 (22, 218, , )
.如果真结束
.如果真 (大于 (到数值 (取文本右边 (到文本 (东 [1]), 2)), 到数值 (取文本右边 (到文本 (东 [2]), 2))))
    赋值 (扑克, 取标记组件 (东 [2]))
    扑克.移动 (554, 116, , )
    赋值 (扑克, 取标记组件 (东 [1]))
    扑克.移动 (554, 218, , )
.如果真结束
刷新显示 ()
赋值 (轮过, 1)
赋值 (玩家, 首家)
延时 (500)

.子程序 游戏过程, 空白型, , 
.局部变量 差值, 字节型, , , 
.局部变量 投注金额, 短整数型, , , 
.局部变量 积分, 标签, , , 
.局部变量 投注, 标签, , , 
.局部变量 牌, 短整数型, , "2", 
.局部变量 分数, 整数型, , , 
.局部变量 姓名, 文本型, , , 

.如果真 (等于 (., 假))
    置随机数种子 ()
    .判断循环首 (小于或等于 (轮过, 4))
        处理事件 ()
        .如果真 (等于 (玩家, 5))
            赋值 (玩家, 1)
        .如果真结束
        .如果 (等于 (玩家, 1))
            赋值 (., #看牌1)
            赋值 (., #不看1)
            清空 ()
            .变量循环首 (10, 选择 (大于 (到数值 (.), 到数值 (.)), 到数值 (.), 到数值 (.)), 10, 分数)
                到文本 (分数).加入项目 ()
            .变量循环尾 ()
            赋值 (., 0)
            连续赋值 (真, ., ., .)
            跳出循环 ()
        .否则
            .如果真 (等于 (玩家, 2))
                .如果 (等于 (., “0”))
                    赋值 (玩家, 相加 (玩家, 1))
                    赋值 (轮过, 相加 (轮过, 1))
                    到循环尾 ()
                .否则
                    赋值 (积分, )
                    赋值 (投注, )
                    赋值 (牌 [1], 西 [1])
                    赋值 (牌 [2], 西 [2])
                .如果结束
                
            .如果真结束
            .如果真 (等于 (玩家, 3))
                .如果 (等于 (., “0”))
                    赋值 (玩家, 相加 (玩家, 1))
                    赋值 (轮过, 相加 (轮过, 1))
                    到循环尾 ()
                .否则
                    赋值 (积分, )
                    赋值 (投注, )
                    赋值 (牌 [1], 北 [1])
                    赋值 (牌 [2], 北 [2])
                .如果结束
                
            .如果真结束
            .如果真 (等于 (玩家, 4))
                .如果 (等于 (., “0”))
                    赋值 (玩家, 相加 (玩家, 1))
                    赋值 (轮过, 相加 (轮过, 1))
                    到循环尾 ()
                .否则
                    赋值 (积分, )
                    赋值 (投注, )
                    赋值 (牌 [1], 东 [1])
                    赋值 (牌 [2], 东 [2])
                .如果结束
                
            .如果真结束
            赋值 (差值, 取绝对值 (相减 (求余数 (牌 [1], 100), 求余数 (牌 [2], 100))))
            .如果 (小于或等于 (差值, 3))
                赋值 (投注., 多项选择 (取随机数 (1, 4), “我不看”, “下轮再说”, “过去过去”, “臭牌两只”))
                赋值 (投注., 真)
                播放音乐 (#滚动, )
                赋值 (积分., 到文本 (相减 (到数值 (积分.), 10)))
                赋值 (., 到文本 (相加 (到数值 (.), 10)))
                刷新显示 ()
                延时 (500)
                赋值 (投注., 假)
                刷新显示 ()
            .否则
                .如果真 (并且 (大于或等于 (差值, 4), 小于或等于 (差值, 6)))
                    赋值 (投注金额, 相除 (到数值 (选择 (大于 (到数值 (.), 到数值 (积分.)), 积分., .)), 4))
                    .如果真 (不等于 (求余数 (投注金额, 10), 0))
                        赋值 (投注金额, 相加 (相乘 (整除 (投注金额, 10), 10), 10))
                    .如果真结束
                    .如果真 (等于 (投注金额, 0))
                        赋值 (投注金额, 10)
                    .如果真结束
                    赋值 (投注., 相加 (多项选择 (取随机数 (1, 3), “我出”, “投注”, “扔掉”), 到文本 (投注金额)))
                    赋值 (投注., 真)
                    刷新显示 ()
                    延时 (1000)
                .如果真结束
                .如果真 (并且 (大于或等于 (差值, 7), 小于或等于 (差值, 8)))
                    赋值 (投注金额, 相除 (到数值 (选择 (大于 (到数值 (.), 到数值 (积分.)), 积分., .)), 2))
                    .如果真 (不等于 (求余数 (投注金额, 10), 0))
                        赋值 (投注金额, 相加 (相乘 (整除 (投注金额, 10), 10), 10))
                    .如果真结束
                    赋值 (投注., 相加 (多项选择 (取随机数 (1, 3), “我出”, “投注”, “扔掉”), 到文本 (投注金额)))
                    赋值 (投注., 真)
                    刷新显示 ()
                    延时 (1000)
                .如果真结束
                .如果真 (并且 (大于或等于 (差值, 9), 小于或等于 (差值, 10)))
                    赋值 (投注金额, 相乘 (相除 (到数值 (选择 (大于 (到数值 (.), 到数值 (积分.)), 积分., .)), 4), 3))
                    .如果真 (不等于 (求余数 (投注金额, 10), 0))
                        赋值 (投注金额, 相加 (相乘 (整除 (投注金额, 10), 10), 10))
                    .如果真结束
                    赋值 (投注., 相加 (多项选择 (取随机数 (1, 3), “我出”, “投注”, “扔掉”), 到文本 (投注金额)))
                    赋值 (投注., 真)
                    刷新显示 ()
                    延时 (1000)
                .如果真结束
                .如果真 (并且 (大于或等于 (差值, 11), 小于或等于 (差值, 12)))
                    赋值 (投注金额, 到数值 (选择 (小于 (到数值 (.), 到数值 (积分.)), ., 积分.)))
                    赋值 (投注., 多项选择 (取随机数 (1, 4), “我清台了”, “全拿来吧”, “多多益善”, “舍命一搏”))
                    赋值 (投注., 真)
                    刷新显示 ()
                    延时 (1000)
                .如果真结束
                赋值 (投注., 假)
                刷新显示 ()
                延时 (100)
                显示正面 (取标记组件 (牌 [1]))
                显示正面 (取标记组件 (牌 [2]))
                显示正面 (洗牌顺序 [牌数])
                .如果 (并且 (大于 (到数值 (取文本右边 (洗牌顺序 [牌数], , 2)), 选择 (小于 (求余数 (牌 [1], 100), 求余数 (牌 [2], 100)), 求余数 (牌 [1], 100), 求余数 (牌 [2], 100))), 小于 (到数值 (取文本右边 (洗牌顺序 [牌数], , 2)), 选择 (小于 (求余数 (牌 [1], 100), 求余数 (牌 [2], 100)), 求余数 (牌 [2], 100), 求余数 (牌 [1], 100)))))
                    赋值 (投注., 真)
                    赋值 (投注., 多项选择 (取随机数 (1, 6), “我赢了”, “小菜一碟”, “承让承让”, “太棒了”, “多谢各位”, “我得意地笑”))
                    刷新显示 ()
                    播放音乐 (#滚动, 真)
                    .变量循环首 (10, 投注金额, 10, )
                        赋值 (., 到文本 (相减 (到数值 (.), 10)))
                        赋值 (积分., 到文本 (相加 (到数值 (积分.), 10)))
                        刷新显示 ()
                        延时 (50)
                    .变量循环尾 ()
                    刷新显示 ()
                    停止播放 ()
                    延时 (500)
                    赋值 (投注., 假)
                    刷新显示 ()
                .否则
                    赋值 (投注., 真)
                    刷新显示 ()
                    赋值 (投注., 多项选择 (取随机数 (1, 5), “完蛋了”, “天哪……”, “太不公平了”, “我要报仇”, “输就输吧”))
                    刷新显示 ()
                    播放音乐 (#滚动, 真)
                    .变量循环首 (10, 投注金额, 10, )
                        赋值 (积分., 到文本 (相减 (到数值 (积分.), 10)))
                        赋值 (., 到文本 (相加 (到数值 (.), 10)))
                        刷新显示 ()
                        延时 (50)
                    .变量循环尾 ()
                    刷新显示 ()
                    停止播放 ()
                    延时 (1000)
                    赋值 (投注., 假)
                    刷新显示 ()
                .如果结束
                显示背面 (取标记组件 (牌 [1]))
                显示背面 (取标记组件 (牌 [2]))
                .如果 (.)
                    洗牌顺序.调整层次 ( [牌数], #顶层)
                    .变量循环首 (1, 12, 1, )
                        洗牌顺序.移动 ( [牌数], 相减 (洗牌顺序 [牌数], , 16), 相减 (洗牌顺序 [牌数], , 13), , )
                        刷新显示 ()
                    .变量循环尾 ()
                .否则
                    洗牌顺序.调整层次 ( [牌数], #顶层)
                    洗牌顺序.移动 ( [牌数], 95, 12, , )
                .如果结束
                显示背面 (洗牌顺序 [牌数])
                赋值 (牌数, 相加 (牌数, 1))
                刷新显示 ()
                延时 (500)
                .如果真 (等于 (., “0”))
                    跳出循环 ()
                .如果真结束
                
            .如果结束
            赋值 (玩家, 相加 (玩家, 1))
            赋值 (轮过, 相加 (轮过, 1))
            延时 (500)
        .如果结束
        
    .判断循环尾 ()
    .如果真 (大于 (玩家, 1))
        赋值 (姓名, “”)
        .如果 (或者 (小于或等于 (到数值 (.), 0), 小于或等于 (到数值 (.), 0), 小于或等于 (到数值 (.), 0), 小于或等于 (到数值 (.), 0)))
            改变排行 ()
            .如果真 (小于或等于 (到数值 (.), 0))
                赋值 (姓名, 相加 (姓名, ., “、”))
            .如果真结束
            .如果真 (小于或等于 (到数值 (.), 0))
                赋值 (姓名, 相加 (姓名, ., “、”))
            .如果真结束
            .如果真 (小于或等于 (到数值 (.), 0))
                赋值 (姓名, 相加 (姓名, ., “、”))
            .如果真结束
            .如果真 (小于或等于 (到数值 (.), 0))
                赋值 (姓名, 相加 (姓名, ., “、”))
            .如果真结束
            .如果真 (等于 (取文本右边 (姓名, 2), “、”))
                赋值 (姓名, 取文本左边 (姓名, 相减 (取文本长度 (姓名), 2)))
            .如果真结束
            .如果 (等于 (信息框 (相加 (姓名, “已经输光了所有积分。要重新开始游戏吗？”), #是否钮, “太可惜了！”), #是钮))
                _结束_被选择 ()
                刷新显示 ()
                _新游戏_被选择 ()
                 ' 跳出循环 ()
            .否则
                _结束_被选择 ()
            .如果结束
            
        .否则
            开始 ()
        .如果结束
        
    .如果真结束
    
.如果真结束


.子程序 _看牌_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (., #看牌2)

.子程序 _不看_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (., #不看2)

.子程序 _看牌_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 投注金额, 短整数型, , , 
.局部变量 姓名, 文本型, , , 

赋值 (., #看牌1)
赋值 (投注金额, 到数值 (.取项目文本 (.)))
连续赋值 (假, ., ., .)
显示正面 (洗牌顺序 [牌数])
.如果 (并且 (大于 (到数值 (取文本右边 (洗牌顺序 [牌数], , 2)), 选择 (小于 (求余数 (南 [1], 100), 求余数 (南 [2], 100)), 求余数 (南 [1], 100), 求余数 (南 [2], 100))), 小于 (到数值 (取文本右边 (洗牌顺序 [牌数], , 2)), 选择 (小于 (求余数 (南 [1], 100), 求余数 (南 [2], 100)), 求余数 (南 [2], 100), 求余数 (南 [1], 100)))))
    赋值 (结果, 相加 (., “：恭喜恭喜，你赢了”, 到文本 (投注金额), “！”))
    载入 (信息窗口, , 真)
    播放音乐 (#滚动, 真)
    .变量循环首 (10, 投注金额, 10, )
        赋值 (., 到文本 (相减 (到数值 (.), 10)))
        赋值 (., 到文本 (相加 (到数值 (.), 10)))
        刷新显示 ()
        延时 (50)
    .变量循环尾 ()
    刷新显示 ()
    停止播放 ()
    延时 (500)
.否则
    赋值 (结果, 相加 (“唉呀，”, ., “：你怎么又输了”, 到文本 (投注金额), “！”))
    载入 (信息窗口, , 真)
    播放音乐 (#滚动, 真)
    .变量循环首 (10, 投注金额, 10, )
        赋值 (., 到文本 (相减 (到数值 (.), 10)))
        赋值 (., 到文本 (相加 (到数值 (.), 10)))
        刷新显示 ()
        延时 (50)
    .变量循环尾 ()
    刷新显示 ()
    停止播放 ()
    延时 (500)
.如果结束
.如果 (.)
    洗牌顺序.调整层次 ( [牌数], #顶层)
    .变量循环首 (1, 12, 1, )
        洗牌顺序.移动 ( [牌数], 相减 (洗牌顺序 [牌数], , 16), 相减 (洗牌顺序 [牌数], , 13), , )
        刷新显示 ()
    .变量循环尾 ()
.否则
    洗牌顺序.调整层次 ( [牌数], #顶层)
    洗牌顺序.移动 ( [牌数], 95, 12, , )
.如果结束
显示背面 (洗牌顺序 [牌数])
赋值 (牌数, 相加 (牌数, 1))
刷新显示 ()
延时 (500)
赋值 (姓名, “”)
.如果 (或者 (小于或等于 (到数值 (.), 0), 小于或等于 (到数值 (.), 0), 小于或等于 (到数值 (.), 0), 小于或等于 (到数值 (.), 0)))
    改变排行 ()
    .如果真 (小于或等于 (到数值 (.), 0))
        赋值 (姓名, 相加 (姓名, ., “、”))
    .如果真结束
    .如果真 (小于或等于 (到数值 (.), 0))
        赋值 (姓名, 相加 (姓名, ., “、”))
    .如果真结束
    .如果真 (小于或等于 (到数值 (.), 0))
        赋值 (姓名, 相加 (姓名, ., “、”))
    .如果真结束
    .如果真 (小于或等于 (到数值 (.), 0))
        赋值 (姓名, 相加 (姓名, ., “、”))
    .如果真结束
    .如果真 (等于 (取文本右边 (姓名, 2), “、”))
        赋值 (姓名, 取文本左边 (姓名, 相减 (取文本长度 (姓名), 2)))
    .如果真结束
    .如果 (等于 (信息框 (相加 (姓名, “已经输光了所有积分。要重新开始游戏吗？”), #是否钮, “太可惜了！”), #是钮))
        _结束_被选择 ()
        刷新显示 ()
        _新游戏_被选择 ()
    .否则
        _结束_被选择 ()
    .如果结束
    
.否则
    .如果 (或者 (等于 (轮过, 4), 等于 (., “0”)))
        开始 ()
    .否则
        赋值 (轮过, 相加 (轮过, 1))
        赋值 (玩家, 相加 (玩家, 1))
        游戏过程 ()
    .如果结束
    
.如果结束


.子程序 _不看_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (., #不看1)
连续赋值 (假, ., ., .)
播放音乐 (#滚动, )
赋值 (., 到文本 (相减 (到数值 (.), 10)))
赋值 (., 到文本 (相加 (到数值 (.), 10)))
刷新显示 ()
延时 (500)
赋值 (轮过, 相加 (轮过, 1))
赋值 (玩家, 相加 (玩家, 1))
游戏过程 ()

.子程序 _结束_被选择, 空白型, , 
.局部变量 容器1, 空白型, , , 

连续赋值 (假, ., ., ., ., ., ., ., ., ., ., ., ., ., ., .)
.变量循环首 (1, 52, 1, 容器1)
    赋值 (洗牌顺序 [容器1], , 假)
.变量循环尾 ()
刷新显示 ()
赋值 (., 真)
赋值 (., 假)
赋值 (., 假)
赋值 (., 真)
刷新显示 ()

.子程序 _排行榜_被选择, 空白型, , 
载入 (排行榜, , 真)

.子程序 _退出_被选择, 空白型, , 
销毁 ()

.子程序 _玩家_被选择, 空白型, , 
载入 (关于窗口, , 真)
赋值 (., 玩家姓名)

.子程序 _高_被选择, 空白型, , 
赋值 (., 真)
赋值 (., 假)
赋值 (., 假)
赋值 (开始积分, 1000)
赋值 (排行文件, “kx1.dat”)
删除文件 (临时库)
置排行库 ()

.子程序 _中_被选择, 空白型, , 
赋值 (., 假)
赋值 (., 真)
赋值 (., 假)
赋值 (开始积分, 500)
赋值 (排行文件, “kx2.dat”)
删除文件 (临时库)
置排行库 ()

.子程序 _低_被选择, 空白型, , 
赋值 (., 假)
赋值 (., 假)
赋值 (., 真)
赋值 (开始积分, 200)
赋值 (排行文件, “kx3.dat”)
删除文件 (临时库)
置排行库 ()

.子程序 _音乐_被选择, 空白型, , 
赋值 (., 取反 (.))
.如果 (.)
    赋值 (_启动窗口., 0)
.否则
    赋值 (_启动窗口., 2)
.如果结束


.子程序 _音效_被选择, 空白型, , 
赋值 (., 取反 (.))

.子程序 _发牌动画_被选择, 空白型, , 
赋值 (., 取反 (.))

.子程序 _使用帮助_被选择, 空白型, , 
打开关联文件 (_启动窗口.取窗口句柄 (), “open”, “kxhelp.chm”, “”, “”, 1)

.子程序 _联系作者_被选择, 空白型, , 
跳转 ()

.子程序 _关于_被选择, 空白型, , 
赋值 (结果, “about”)
载入 (关于窗口, , 真)

.子程序 _图片框1_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 作弊扑克, 图片框, , , 

赋值 (作弊扑克, 取事件组件 ())
.如果真 (并且 (等于 (功能键状态, #Shift键状态), 等于 (作弊扑克., 洗牌顺序 [牌数], )))
    显示正面 (作弊扑克)
.如果真结束


.子程序 _图片框1_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 作弊扑克, 图片框, , , 

赋值 (作弊扑克, 取事件组件 ())
.如果真 (等于 (作弊扑克., 洗牌顺序 [牌数], ))
    显示背面 (作弊扑克)
.如果真结束


.子程序 __启动窗口_将被销毁, 空白型, , 
删除文件 (临时库)
结束 ()

.子程序 置排行库, 空白型, , 
.局部变量 文件号, 整数型, , , 
.局部变量 名次, 字节型, , , 
.局部变量 读入文本, 文本型, , , 
.局部变量 排行文本, 文本型, , , 
.局部变量 字段, 字段信息, , "3", 

赋值 (文件号, 打开文件 (排行文件, #改读, #禁止读写))
赋值 (字段 [1]., “名字”)
赋值 (字段 [1]., #文本型)
赋值 (字段 [1]., 10)
赋值 (字段 [2]., “积分”)
赋值 (字段 [2]., #整数型)
赋值 (字段 [3]., “日期”)
赋值 (字段 [3]., #文本型)
赋值 (字段 [3]., 14)
置随机数种子 ()
赋值 (临时库, 相加 (到文本 (取随机数 (1234567, 9876543)), “.edb”))
创建 (临时库, 字段)
打开 (临时库, , , , , , )
.判断循环首 (等于 (是否在文件尾 (文件号, ), 假))
    赋值 (读入文本, 读入一行 (文件号))
    加记录 (删首尾空 (取文本左边 (读入文本, 16)), 到数值 (删首尾空 (取文本中间 (读入文本, 17, 8))), 删首尾空 (取文本右边 (读入文本, 14)))
.判断循环尾 ()
关闭 ()
关闭文件 (文件号)

.子程序 改变排行, 空白型, , 
.局部变量 文件号, 整数型, , , 
.局部变量 排行文本, 文本型, , , 
.局部变量 上一名积分, 整数型, , "2", 
.局部变量 名次, 字节型, , , 

.如果 (打开 (临时库, , , , , , ))
    加记录 (玩家姓名, 到数值 (.), 时间到文本 (取现行时间 (), #日期部分))
    排序 (相加 (“9”, 临时库), “积分”, 假, , )
    关闭 ()
    复制文件 (相加 (“9”, 临时库), 临时库)
    删除文件 (相加 (“9”, 临时库))
    .如果 (打开 (临时库, , , , , , ))
        .判断循环首 (大于 (取记录数 (), 99))
            到尾记录 ()
            删除 ()
            彻底删除 ()
        .判断循环尾 ()
        赋值 (文件号, 打开文件 (排行文件, #重写, #禁止读写))
        赋值 (上一名积分 [2], 1)
        跳到 (1)
        .判断循环首 (等于 (尾记录后 (), 假))
            .如果 (等于 (读 (2), 上一名积分 [1]))
                赋值 (名次, 上一名积分 [2])
            .否则
                赋值 (名次, 取记录号 ())
                赋值 (上一名积分 [1], 读 (2))
                赋值 (上一名积分 [2], 取记录号 ())
            .如果结束
            赋值 (排行文本, 相加 (“ ”, 取文本左边 (相加 (读 (1), 取空白文本 (15)), 15), 取文本右边 (相加 (取空白文本 (5), 到文本 (读 (2)), 取空白文本 (5)), 10), “第”, 取文本右边 (相加 (取空白文本 (2), 到文本 (名次)), 2), “名”, 取空白文本 (4), 取文本左边 (相加 (读 (3), 取空白文本 (1)), 14)))
            写文本行 (文件号, 排行文本)
            跳过 (1)
        .判断循环尾 ()
        关闭文件 (文件号)
        关闭 ()
    .否则
        信息框 (相加 (“读取临时文件出错，本次记录将不能被保存。”, #换行符, “请重新启动本程序以修复临时文件错误。”), 0, )
        结束 ()
    .如果结束
    
.否则
    信息框 (相加 (“读取临时文件出错，本次记录将不能被保存。”, #换行符, “请重新启动本程序以修复临时文件错误。”), 0, )
    结束 ()
.如果结束


.窗口程序集 玩家输赢信息, , , 

.子程序 _信息窗口_创建完毕, 空白型, , 
赋值 (., 结果)

.子程序 _时钟1_周期事件, 空白型, , 
销毁 ()

.窗口程序集 关于, , , 

.子程序 _关于窗口_创建完毕, 空白型, , 
.如果真 (不等于 (结果, “about”))
    赋值 (., 真)
    赋值 (., 真)
    赋值 (., 玩家姓名)
    赋值 (., 取文本长度 (.))
    获取焦点 ()
.如果真结束


.子程序 _按钮1_被单击, 空白型, , 
.如果真 (不等于 (结果, “about”))
    赋值 (玩家姓名, .)
.如果真结束
销毁 ()

.窗口程序集 显示排行榜, , , 

.子程序 _排行榜_创建完毕, 空白型, , 
.局部变量 文件号, 整数型, , , 
.局部变量 排行文本, 文本型, , , 

赋值 (., 相加 (“玩家排行榜”, 多项选择 (到数值 (取文本中间 (排行文件, 3, 1)), “（1000分）”, “（500分）”, “（200分）”)))
赋值 (文件号, 打开文件 (排行文件, #读写, #禁止读写))
.判断循环首 (等于 (是否在文件尾 (文件号, ), 假))
    赋值 (排行文本, 读入一行 (文件号))
    排行文本.加入项目 ()
.判断循环尾 ()
关闭文件 (文件号)

.子程序 _清空按钮_被单击, 空白型, , 
.局部变量 文件号, 整数型, , , 

.如果真 (等于 (信息框 (“排行榜清除后将无法恢复，确实要清空玩家排行榜吗？”, #是否钮, “清空排行傍”), #是钮))
    清空 ()
    赋值 (文件号, 打开文件 (排行文件, #重写, #禁止读写))
    关闭文件 (文件号)
.如果真结束


.子程序 _返回按钮_被单击, 空白型, , 
销毁 ()


 ' 不属于任何一个程序集、类模块的函数：
