 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 380
    高度 = 250
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “易语言文件夹整理助手”
    帮助文件名 = “”

窗口 窗口1
    左边 = 50
    顶边 = 50
    宽度 = 257
    高度 = 338
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假





 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 4 系统核心支持库
 ' xplib 7F54B9CE8887428dBA9CEEB94CEF4C72 1 6 XP风格界面库




数据类型 文本数组, , 
    .成员 文本, 文本型, , "1", 

.全局变量 路径类型, 空白型, , , 
.全局变量 匿名全局变量_33, 空白型, , , 

.窗口程序集 窗口程序集1, , , 

.程序集变量 整理文件类型, 文本型, , , 
.程序集变量 目录树, 文本型, , "0", 
.程序集变量 目录树2, 文本数组, , , 
.程序集变量 寻找结果, 文本型, , , 
.程序集变量 a, 整数型, , , 
.程序集变量 递归次数, 空白型, , , 
.程序集变量 停止, 逻辑型, , , 
.子程序 _按钮1_被单击, 空白型, , 
进行 ()

.子程序 进行, 空白型, , 
.局部变量 寻找结果0, 文本型, , , 
.局部变量 次序, 空白型, , , 
.局部变量 临时目录树, 文本数组, , , 
.局部变量 b, 整数型, , , 

.如果真 (并且 (大于 (取文本长度 (.内容), 3), 等于 (寻找文件 (.内容, 16), “”)))
    信息框 (“找不到目录!”, 0, )
    返回 ()
.如果真结束
.如果真 (等于 (整理文件类型, “”))
    信息框 (“请选择整理文件类型!”, 0, )
    返回 ()
.如果真结束
赋值 (.禁止, 真)
赋值 (.禁止, 假)
.如果真 (并且 (等于 (取文本右边 (.内容, 1), “\”), 大于 (取文本长度 (.内容), 3)))
    赋值 (.内容, 取文本左边 (.内容, 相减 (取文本长度 (.内容), 1)))
.如果真结束
.如果真 (并且 (等于 (取文本右边 (.内容, 1), “\”), 大于 (取文本长度 (.内容), 3)))
    赋值 (.内容, 取文本左边 (.内容, 相减 (取文本长度 (.内容), 1)))
.如果真结束
.如果真 (小于 (取文本长度 (.内容), 3))
    赋值 (.内容, 相加 (.内容, “\”))
.如果真结束
.如果真 (小于 (取文本长度 (.内容), 3))
    赋值 (.内容, 相加 (.内容, “\”))
.如果真结束
.如果真 (等于 (寻找文件 (.内容, 16), “”))
    .如果 (等于 (信息框 (“目录不存在,是否创建”, 4, ), 5))
        创建目录 (.内容)
    .否则
        信息框 (“整理失败”, 0, )
        返回 ()
    .如果结束
    
.如果真结束
赋值 (.标题, 相加 (“整理文件类型:”, 整理文件类型, #换行符, “整理到路径:”, .内容, #换行符, “待整理路径:”, .内容, #换行符, “是否包括子文件夹:”, 到文本 (.选中), #换行符, “是否按次序编编号:”, 到文本 (.选中), .内容))
输出调试文本 (整理文件类型)
输出调试文本 (.内容)
输出调试文本 (.内容)
输出调试文本 (到文本 (.选中))
.如果 (等于 (.选中, 真))
    重定义数组 (目录树, 假, 0)
    赋值 (递归次数, 1)
    搜寻文件夹 (.内容)
    处理事件 ()
    信息框 (相加 (“初始化成功!文件夹数=”, 到文本 (取数组成员数 (目录树))), 0, )
    输出调试文本 (相加 (目录树 [1], “  ”, 目录树 [取数组成员数 (目录树)]))
     ' 计次循环sh ()
     ' 输出调试文本 (目录树 [b])
     ' 计次循环尾 ()
    .计次循环首 (取数组成员数 (目录树), a)
        赋值 (寻找结果0, 寻找文件 (相加 (目录树 [a], “\*.”, 整理文件类型), ))
         ' 信息框 (目录树 [a], 0, )
        .判断循环首 (不等于 (寻找结果0, “”))
            处理事件 ()
            .如果真 (等于 (停止, 真))
                跳出循环 ()
            .如果真结束
            .判断开始 (等于 (.标题, “\”))
                赋值 (.标题, “/”)
            .判断 (等于 (.标题, “/”))
                赋值 (.标题, “-”)
            .判断 (等于 (.标题, “-”))
                赋值 (.标题, “\”)
            .默认
                
            .判断结束
            
            输出调试文本 (相加 (目录树 [a], 寻找结果0))
            输出调试文本 (相加 (.内容, “\”, 寻找结果0))
            .如果 (等于 (.选中, 假))
                .判断开始 (.选中)
                    复制文件 (相加 (目录树 [a], 寻找结果0), 相加 (.内容, “\”, 寻找结果0))
                .判断 (.选中)
                    移动文件 (相加 (目录树 [a], 寻找结果0), 相加 (.内容, “\”, 寻找结果0))
                .判断 (.选中)
                    删除文件 (相加 (目录树 [a], 寻找结果0))
                .默认
                    
                .判断结束
                
            .否则
                赋值 (次序, 相加 (次序, 1))
                .判断开始 (.选中)
                    复制文件 (相加 (目录树 [a], 寻找结果0), 相加 (.内容, “\”, .内容, 到文本 (次序), “.”, 整理文件类型))
                .判断 (.选中)
                    移动文件 (相加 (目录树 [a], 寻找结果0), 相加 (.内容, “\”, .内容, 到文本 (次序), “.”, 整理文件类型))
                .判断 (.选中)
                    删除文件 (相加 (目录树 [a], 寻找结果0))
                .默认
                    
                .判断结束
                
            .如果结束
            赋值 (寻找结果0, 寻找文件 ())
        .判断循环尾 ()
    .计次循环尾 ()
    .如果 (等于 (停止, 假))
        信息框 (“成功!”, 0, )
        赋值 (.标题, 相加 (.标题, #换行符, “成功!”))
    .否则
        信息框 (“终止!”, 0, )
        赋值 (.标题, 相加 (.标题, #换行符, “终止!”))
    .如果结束
    
.否则
    赋值 (寻找结果0, 寻找文件 (相加 (.内容, “\*.”, 整理文件类型), ))
    
    .判断循环首 (不等于 (寻找结果0, “”))
        处理事件 ()
        .如果真 (等于 (停止, 真))
            跳出循环 ()
        .如果真结束
        
        .判断开始 (等于 (.标题, “\”))
            赋值 (.标题, “/”)
        .判断 (等于 (.标题, “/”))
            赋值 (.标题, “-”)
        .判断 (等于 (.标题, “-”))
            赋值 (.标题, “\”)
        .默认
            
        .判断结束
        输出调试文本 (相加 (.内容, “\”, 寻找结果0))
        输出调试文本 (相加 (.内容, “\”, 寻找结果0))
        .如果 (等于 (.选中, 假))
            .判断开始 (.选中)
                复制文件 (相加 (.内容, “\”, 寻找结果0), 相加 (.内容, “\”, 寻找结果0))
            .判断 (.选中)
                移动文件 (相加 (.内容, “\”, 寻找结果0), 相加 (.内容, “\”, 寻找结果0))
            .判断 (.选中)
                删除文件 (相加 (.内容, “\”, 寻找结果0))
            .默认
                
            .判断结束
            
        .否则
            赋值 (次序, 相加 (次序, 1))
            .判断开始 (.选中)
                复制文件 (相加 (.内容, “\”, 寻找结果0), 相加 (.内容, “\”, .内容, 到文本 (次序), “.”, 整理文件类型))
            .判断 (.选中)
                移动文件 (相加 (.内容, “\”, 寻找结果0), 相加 (.内容, “\”, .内容, 到文本 (次序), “.”, 整理文件类型))
            .判断 (.选中)
                删除文件 (相加 (.内容, “\”, 寻找结果0))
            .默认
                
            .判断结束
            
        .如果结束
        赋值 (寻找结果0, 寻找文件 ())
    .判断循环尾 ()
    .如果 (等于 (停止, 假))
        信息框 (“成功!”, 0, )
        赋值 (.标题, 相加 (.标题, #换行符, “成功!”))
    .否则
        信息框 (“终止!”, 0, )
        赋值 (.标题, 相加 (.标题, #换行符, “终止!”))
    .如果结束
    
.如果结束

赋值 (.禁止, 假)
赋值 (.禁止, 真)
赋值 (停止, 假)

.子程序 搜寻文件夹, 空白型, , 
.参数 待整理路径内容, 文本型, , 

.局部变量 参数, 文本型, , , 
.局部变量 逻辑值, 空白型, , , 

 ' 信息框 (“hgf”, 0, )
赋值 (参数, 待整理路径内容)
赋值 (寻找结果, 寻找文件 (相加 (参数, “*”), 16))
.循环判断首 ()
    .判断开始 (等于 (.标题, “\”))
        赋值 (.标题, “/”)
    .判断 (等于 (.标题, “/”))
        赋值 (.标题, “-”)
    .判断 (等于 (.标题, “-”))
        赋值 (.标题, “\”)
    .默认
        
    .判断结束
    处理事件 ()
    .如果真 (并且 (不等于 (寻找结果, “.”), 不等于 (寻找结果, “..”)))
        赋值 (寻找结果, 相加 (参数, 寻找结果, “\”))
        .如果真 (等于 (寻找文本 (寻找结果, “System Volume Information”, , 假), -1))
            加入成员 (目录树, 寻找结果)
        .如果真结束
        
    .如果真结束
    赋值 (寻找结果, 寻找文件 (16))
.循环判断尾 (不等于 (寻找结果, “”))
.变量循环首 (递归次数, 取数组成员数 (目录树), 1, a)
    .如果 (小于 (递归次数, 取数组成员数 (目录树)))
        赋值 (递归次数, 相加 (递归次数, 1))
    .否则
        跳出循环 ()
    .如果结束
    .如果真 (或者 (不等于 (目录树 [递归次数], “.”), 不等于 (目录树 [递归次数], “..”)))
        搜寻文件夹 (目录树 [递归次数])
    .如果真结束
    
.变量循环尾 ()

.子程序 _按钮2_被单击, 空白型, , 
赋值 (路径类型, 0)
载入 (窗口1, , 真)

.子程序 __启动窗口_创建完毕, 空白型, , 
赋值 (递归次数, 1)
未知支持库函数_0 (1)

.子程序 _按钮3_被单击, 空白型, , 
赋值 (路径类型, 1)
载入 (窗口1, , 真)

.子程序 _组合框1_列表项被选择, 空白型, , 
赋值 (整理文件类型, .内容)

.子程序 _编辑框1_内容被改变, 空白型, , 
.如果 (不等于 (.内容, “”))
    赋值 (整理文件类型, .内容)
    赋值 (.禁止, 真)
.否则
    赋值 (.禁止, 假)
.如果结束


.子程序 _选择框2_被单击, 空白型, , 
.如果 (.禁止)
    赋值 (.禁止, 假)
.否则
    赋值 (.禁止, 真)
.如果结束


.子程序 _单选框3_被单击, 空白型, , 
赋值 (.禁止, 真)
赋值 (.禁止, 真)
赋值 (.禁止, 真)
赋值 (.禁止, 真)
信息框 (“三思!”, 0, )

.子程序 _单选框2_被单击, 空白型, , 
赋值 (.禁止, 假)
赋值 (.禁止, 假)
赋值 (.禁止, 假)
赋值 (.禁止, 假)

.子程序 _单选框1_被单击, 空白型, , 
赋值 (.禁止, 假)
赋值 (.禁止, 假)
赋值 (.禁止, 假)
赋值 (.禁止, 假)

.子程序 _按钮4_被单击, 空白型, , 
信息框 (相加 (“该程序是用易语言编写的!!!请支持易语言!!!”, #换行符, “                   删除文件请务必谨慎!”, #换行符, “                        by 木比白”, #换行符, “                        qq:501926947”), 0, )

.子程序 _按钮5_被单击, 空白型, , 
赋值 (停止, 真)

.窗口程序集 窗口程序集2, , , 

.子程序 _驱动器框1_驱动器被改变, 空白型, , 
赋值 (.目录, 相加 (.驱动器, “:\”))

.子程序 _目录框1_目录被改变, 空白型, , 


.子程序 _按钮1_被单击, 空白型, , 
.如果 (等于 (路径类型, 0))
    赋值 (_启动窗口..内容, .目录)
    输出调试文本 (.目录)
.否则
    赋值 (_启动窗口..内容, .目录)
.如果结束
销毁 ()


.子程序 _按钮2_被单击, 空白型, , 



 ' 不属于任何一个程序集、类模块的函数：
