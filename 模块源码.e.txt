 ' 文件类型：Windows窗口程序

 ' 程序名称：统计表模块
 ' 程序描述：可以用画板画出类似于Offic里面的柱形统计表图。

作者：寞客软件（李东明）网名：小石头
2004年2月8日
 ' 程序作者：寞客软件工作室（李东明）
 ' 邮政编码：135200
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：ldm1979719@21cn.com
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0





 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 3 3 系统核心支持库




.全局变量 DATA, 整数型, , "0", 
.全局变量 文本, 文本型, , "0", 
.全局变量 位置, 整数型, , , 
.全局变量 合格, 逻辑型, , , 
.全局变量 x, 整数型, , , 
.全局变量 y, 整数型, , , 
.全局变量 y1, 整数型, , , 
.全局变量 x1, 整数型, , , 
.全局变量 i, 整数型, , , 
.全局变量 画板1, 画板, , , 
.全局变量 个数1, 整数型, , , 
.全局变量 深度1, 整数型, , , 
.全局变量 单位1, 文本型, , , 
.全局变量 单位2, 文本型, , , 

.程序集 程序集1, , , 

.子程序 _启动子程序, 整数型, , 请在本子程序中放置易模块初始化代码

_临时子程序 () ' 在模块初始化代码执行完毕后调用模块测试代码
返回 (0) ' 可以根据您的需要返回任意数值

.子程序 _临时子程序, 空白型, , 
 ' 本名称子程序用作测试程序用，仅在开发及调试环境中有效，编译发布程序前将被系统自动清空，请将所有用作测试的临时代码放在本子程序中。 ***注意不要修改本子程序的参数及返回值类型。

.程序集 _接口程序集, , , 在本程序集中定义的子程序可被模块外部程序访问，注意如果不存在本程序集就不能作为易模块编译。

.子程序 初始化表, 空白型, , 必须首先使用这条使命，再使用其它命令。
.参数 画板, 画板, , 在程序中，指定要显示图表的画板名
.参数 x点, 整数型, , 在画板上原点x
.参数 y点, 整数型, , 在画板上原点y
.参数 长, 整数型, , 图表长度，请自行调整到适合自己的大小
.参数 宽, 整数型, , 图表宽度，请自行调整到适合自己的大小
.参数 个数, 整数型, , 图表要显示的项目个数，要与“数据”所指定的数组维数相同
.参数 深度, 整数型, , 在柱形表中，柱形的立体深度值。请自行调整到适合自己的大小
.参数 数据, 整数型, 数组, 用于记录每个项目的数值。必须为数组。维数要与“个数”值相同
.参数 每项文本, 文本型, 可空 数组, 用于记录每个项目在X轴的文本名。必须为数组。维数要与“个数”值相同。可以为空，为空时，X轴标注为数值序列
.参数 文本位置, 整数型, 可空, 如果你输入了项目文本，可用这个数值来调整表中文本的位置。为负数时，向左调整。可空
.参数 X轴单位, 文本型, 可空, 在X轴尾部显示的数量单位。可以为空
.参数 Y轴单位, 文本型, 可空, 在Y轴尾部显示的数量单位。可以为空

.局部变量 a, 整数型, , , 

赋值 (画板., {  })
赋值 (x点)
赋值 (y点)
赋值 (宽)
赋值 (长)
赋值 (个数1, 个数)
赋值 (深度1, 深度)
赋值 (位置, 文本位置)
赋值 (单位1, X轴单位)
赋值 (单位2, Y轴单位)
重定义数组 (DATA, 假, 取数组成员数 (数据))
.计次循环首 (取数组成员数 (数据), a)
    赋值 (DATA [a], 数据 [a])
.计次循环尾 ()
重定义数组 (文本, 假, 取数组成员数 (每项文本))
.计次循环首 (取数组成员数 (每项文本), a)
    赋值 (文本 [a], 每项文本 [a])
.计次循环尾 ()
赋值 (画板., 真)
赋值 (画板)
画坐标 (个数, 深度)
赋值 (画板., 画板.取图片 ())

.子程序 画柱形, 空白型, , 画柱形表图
.参数 柱宽, 整数型, , 每个图表柱的横向宽度

.局部变量 a, 整数型, , "8", 
.局部变量 b, 整数型, , , 
.局部变量 c, 整数型, , , 
.局部变量 d, 整数型, , , 

.清除 ()
赋值 (b, 检查 (个数1))
赋值 (c, 1)
赋值 (d, 1)
.计次循环首 (个数1, i)
    .判断开始 (等于 (相加 (1, 相乘 (3, 相减 (c, 1))), i))
        赋值 (., #红色)
    .判断 (等于 (相加 (2, 相乘 (3, 相减 (d, 1))), i))
        赋值 (., #蓝色)
    .默认
        赋值 (., #黄色)
    .判断结束
    画板1.画矩形 (相减 (相加 (x, 相除 (相乘 (x1, i), 相加 (个数1, 1))), 相除 (柱宽, 2)), 相减 (y, 相除 (相乘 (y1, DATA [i]), b)), 相加 (x, 相除 (相乘 (x1, i), 相加 (个数1, 1)), 相除 (柱宽, 2)), y)
    .判断开始 (等于 (相加 (1, 相乘 (3, 相减 (c, 1))), i))
        赋值 (., #红褐)
        赋值 (., #红褐)
    .判断 (等于 (相加 (2, 相乘 (3, 相减 (d, 1))), i))
        赋值 (., #藏青)
        赋值 (., #藏青)
    .默认
        赋值 (., #黄褐)
        赋值 (., #黄褐)
    .判断结束
    赋值 (a [1], 相加 (x, 相除 (相乘 (x1, i), 相加 (个数1, 1)), 相除 (柱宽, 2)))
    赋值 (a [2], )
    赋值 (a [3], 相加 (x, 相除 (相乘 (x1, i), 相加 (个数1, 1)), 相除 (柱宽, 2), 深度1))
    赋值 (a [4], 相减 (y, 相除 (深度1, 2)))
    赋值 (a [5], 相加 (x, 相除 (相乘 (x1, i), 相加 (个数1, 1)), 相除 (柱宽, 2), 深度1))
    赋值 (a [6], 相减 (y, 相除 (相乘 (y1, DATA [i]), b), 相除 (深度1, 2)))
    赋值 (a [7], 相加 (x, 相除 (相乘 (x1, i), 相加 (个数1, 1)), 相除 (柱宽, 2)))
    赋值 (a [8], 相减 (y, 相除 (相乘 (y1, DATA [i]), b)))
    a.画多边形 (4)
    .判断开始 (等于 (相加 (1, 相乘 (3, 相减 (c, 1))), i))
        赋值 (., 6447871)
        赋值 (., 6447871)
    .判断 (等于 (相加 (2, 相乘 (3, 相减 (d, 1))), i))
        赋值 (., #青蓝)
        赋值 (., #青蓝)
    .默认
        赋值 (., #嫩黄)
        赋值 (., #嫩黄)
    .判断结束
    赋值 (a [1], 相减 (相加 (x, 相除 (相乘 (x1, i), 相加 (个数1, 1))), 相除 (柱宽, 2)))
    赋值 (a [2], 相减 (y, 相除 (相乘 (y1, DATA [i]), b)))
    赋值 (a [3], 相加 (x, 相除 (相乘 (x1, i), 相加 (个数1, 1)), 相除 (柱宽, 2)))
    赋值 (a [4], 相减 (y, 相除 (相乘 (y1, DATA [i]), b), 1))
    赋值 (a [5], 相加 (x, 相除 (相乘 (x1, i), 相加 (个数1, 1)), 相除 (柱宽, 2), 深度1))
    赋值 (a [6], 相减 (y, 相除 (相乘 (y1, DATA [i]), b), 相除 (深度1, 2)))
    赋值 (a [7], 相加 (相减 (相加 (x, 相除 (相乘 (x1, i), 相加 (个数1, 1))), 相除 (柱宽, 2)), 深度1))
    赋值 (a [8], 相减 (y, 相除 (相乘 (y1, DATA [i]), b), 相除 (深度1, 2)))
    a.画多边形 (4)
    .判断开始 (等于 (相加 (1, 相乘 (3, 相减 (c, 1))), i))
        赋值 (., #红色)
        赋值 (., #红色)
        赋值 (c, 相加 (c, 1))
    .判断 (等于 (相加 (2, 相乘 (3, 相减 (d, 1))), i))
        赋值 (., #蓝色)
        赋值 (., #蓝色)
        赋值 (d, 相加 (d, 1))
    .默认
        赋值 (., #黄色)
        赋值 (., #黄色)
        
    .判断结束
    画板1.填充矩形 (相减 (相加 (x, 相除 (相乘 (x1, i), 相加 (个数1, 1))), 相除 (柱宽, 2)), 相减 (y, 相除 (相乘 (y1, DATA [i]), b)), 相加 (x, 相除 (相乘 (x1, i), 相加 (个数1, 1)), 相除 (柱宽, 2)), y)
    赋值 (., #黑色)
    .如果 (不等于 ( [0]))
        画板1.定位写出 (相加 (x, 相除 (相乘 (x1, i), 相加 (个数1, 1))), 相减 (y, 相除 (相乘 (y1, DATA [i]), b), 相除 (深度1, 2), 10), 到文本 (DATA [i]))
    .否则
        
    .如果结束
    
.计次循环尾 ()

.子程序 画曲线, 空白型, , 画曲线图表
.局部变量 b, 整数型, , , 

.清除 ()
赋值 (b, 检查 (个数1))
.计次循环首 (相减 (个数1, 1), i)
    赋值 (画板1., #蓝色)
    画板1.画直线 (相加 (x, 相除 (相乘 (x1, i), 相加 (个数1, 1))), 相减 (y, 相除 (相乘 (y1, DATA [i]), b)), 相加 (x, 相除 (相乘 (x1, 相加 (i, 1)), 相加 (个数1, 1))), 相减 (y, 相除 (相乘 (y1, DATA [相加 (i, 1)]), b)))
.计次循环尾 ()
.计次循环首 (个数1, i)
    赋值 (., #红色)
    画板1.画矩形 (相减 (相加 (x, 相除 (相乘 (x1, i), 相加 (个数1, 1))), 2), 相减 (y, 相除 (相乘 (y1, DATA [i]), b), 2), 相加 (x, 相除 (相乘 (x1, i), 相加 (个数1, 1)), 2), 相加 (相减 (y, 相除 (相乘 (y1, DATA [i]), b)), 2))
    赋值 (., #红色)
    画板1.填充矩形 (相减 (相加 (x, 相除 (相乘 (x1, i), 相加 (个数1, 1))), 2), 相减 (y, 相除 (相乘 (y1, DATA [i]), b), 2), 相加 (x, 相除 (相乘 (x1, i), 相加 (个数1, 1)), 2), 相加 (相减 (y, 相除 (相乘 (y1, DATA [i]), b)), 2))
    赋值 (., #黑色)
    .如果 (不等于 ( [0]))
        画板1.定位写出 (相减 (相加 (x, 相除 (相乘 (x1, i), 相加 (个数1, 1))), 15), 相减 (y, 相除 (相乘 (y1, DATA [i]), b), 13), 到文本 (DATA [i]))
    .否则
        
    .如果结束
    
.计次循环尾 ()

.窗口程序集 程序集2, , , 

.子程序 检查, 整数型, , 
.参数 个数, 整数型, , 

.局部变量 a, 整数型, , , 

.计次循环首 (个数, )
    .如果真 (小于 (a,  [)]))

.子程序 画坐标, 空白型, , 
.参数 横坐标数, 整数型, , 
.参数 深度, 整数型, , 

.局部变量 a, 整数型, , "8", 
.局部变量 b, 整数型, , , 

画板1.清除 ()
画板1.画直线 (x, y, 相加 (x, 相除 (相乘 (x1, 13), 13)), y)
画板1.画直线 (x, y, x, 相减 (y, 相除 (相乘 (y1, 11), 10)))
画板1.画直线 (相加 (x, 深度), 相减 (y, 相除 (相乘 (y1, 11), 10), 相除 (深度, 2)), 相加 (x, 相除 (相乘 (x1, 13), 13), 深度, 1), 相减 (y, 相除 (相乘 (y1, 11), 10), 相除 (深度, 2)))
画板1.画直线 (相加 (x, 相除 (相乘 (x1, 13), 13), 深度), 相减 (y, 相除 (深度, 2)), 相加 (x, 相除 (相乘 (x1, 13), 13), 深度), 相减 (y, 相除 (相乘 (y1, 11), 10), 相除 (深度, 2)))
赋值 (画板1., #白色)
赋值 (a [1], )
赋值 (a [2], )
赋值 (a [3], 相加 (相除 (相乘 (13), 13)))
赋值 (a [4], )
赋值 (a [5], 相加 (相除 (相乘 (13), 13), 深度))
赋值 (a [6], 相减 (相除 (深度, 2)))
赋值 (a [7], 相加 (深度))
赋值 (a [8], 相减 (相除 (深度, 2)))
画板1.画多边形 (a, 4)
赋值 (画板1., #粉红)
赋值 (a [1], )
赋值 (a [2], )
赋值 (a [3], 相加 (深度))
赋值 (a [4], 相减 (相除 (深度, 2)))
赋值 (a [5], 相加 (深度))
赋值 (a [6], 相减 (相除 (相乘 (11), 10), 相除 (深度, 2)))
赋值 (a [7], )
赋值 (a [8], 相减 (相除 (相乘 (11), 10)))
画板1.画多边形 (a, 4)
赋值 (b, 相除 (检查 (横坐标数), 10))
.计次循环首 (10, )
    赋值 (画板1., #黑色)
    画板1.画直线 (相减 (x, 5), 相减 (y, 相除 (相乘 (y1, i), 10)), x, 相减 (y, 相除 (相乘 (y1, i), 10)))
    画板1.定位写出 (相减 (x, 30), 相减 (y, 相除 (相乘 (y1, i), 10), 5), 到文本 (相乘 (b, i)))
    赋值 (画板1., #灰色)
    画板1.画直线 (x, 相减 (y, 相除 (相乘 (y1, i), 10)), 相加 (x, 深度), 相减 (y, 相除 (相乘 (y1, i), 10), 相除 (深度, 2)))
    画虚线 (相加 (x, 深度), 相减 (y, 相除 (相乘 (y1, i), 10), 相除 (深度, 2)), 相加 (x, 相除 (相乘 (x1, 13), 13), 深度))
.计次循环尾 ()
画板1.定位写出 (相减 (x, 30), 相减 (y, 相除 (相乘 (y1, 11), 10), 5), 单位2)
.计次循环首 (横坐标数, )
    赋值 (画板1., #黑色)
    画板1.画直线 (相加 (x, 相除 (相乘 (x1, i), 相加 (横坐标数, 1))), 相减 (y, 3), 相加 (x, 相除 (相乘 (x1, i), 相加 (横坐标数, 1))), 相加 (y, 5))
    .判断开始 (不等于 (取数组成员数 (文本), 0))
        画板1.定位写出 (相加 (相减 (相加 (x, 相除 (相乘 (x1, i), 相加 (横坐标数, 1))), 8), 位置), 相加 (y, 8), 文本 [i])
    .默认
        画板1.定位写出 (相减 (相加 (x, 相除 (相乘 (x1, i), 相加 (横坐标数, 1))), 8), 相加 (y, 8), 到文本 (i))
    .判断结束
    
.计次循环尾 ()
画板1.定位写出 (相减 (相加 (x, 相除 (相乘 (x1, i), 相加 (横坐标数, 1))), 8), 相加 (y, 8), 单位1)

.子程序 画虚线, 空白型, , 
.参数 x, 整数型, , 
.参数 y, 整数型, , 
.参数 x1, 整数型, , 

.局部变量 a, 整数型, , , 
.局部变量 b, 整数型, , , 
.局部变量 c, 整数型, , , 


赋值 (b, x)
赋值 (c, 相加 (x, 3))
.计次循环首 (相除 (取绝对值 (相减 (x, x1)), 3), a)
    .判断开始 (小于或等于 (c, x1))
        画板1.画直线 (b, y, c, y)
        赋值 (b, 相加 (c, 2))
        赋值 (c, 相加 (c, 5))
    .默认
        画板1.画直线 (b, y, x1, y)
    .判断结束
    
.计次循环尾 ()


 ' 不属于任何一个程序集、类模块的函数：
