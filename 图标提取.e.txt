 ' 文件类型：Windows窗口程序

 ' 程序名称：图标工具
 ' 程序描述：图标转换、提取
 ' 程序作者：韦锋
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：http://uu2008.bibidu.com
 ' 版权声明：             易语言资源网注意事项
--============   www.5A5X.com  =============--
* 易语言资源网为易语言官方站、易语言官方论坛提供辅助资源站；本易语言资源网( www.5A5X.com)所有软件和资料均为软件作者提供和网友推荐发布而来，其版权归该软件和程序源码的合法拥有者所有，本站易语言资源网整理收集仅供易语言用户学习和易语言技术研究探讨使用，不得用于任何商业用途。如果由于以上原因造成的版权纠纷本站概不负责！
* 本站资源未经许可,任何网站不得非法盗链及抄袭本站资源；如引用，请注明来自易语言资源网，谢谢合作！
--============   www.5A5X.com  =============--
 ' 版本号：1.1
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 523
    高度 = 377
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “图标工具”
    帮助文件名 = “”



.常量 GWL_WNDPROC, "-4", 隐藏, 
.常量 WM_PAINT, "15", 隐藏, 
.常量 呈现模式_无效, "-1", 隐藏, 指定一个无效模式。
.常量 呈现模式_默认, "0", 隐藏, 指定默认模式。
.常量 呈现模式_高速度低质量, "1", 隐藏, 指定高速度、低质量呈现。
.常量 呈现模式_高质量低速度, "2", 隐藏, 指定高质量、低速度呈现。
.常量 呈现模式_不消除锯齿, "3", 隐藏, 指定不消除锯齿。
.常量 呈现模式_消除锯齿, "4", 隐藏, 指定消除锯齿的呈现。
.常量 文本呈现模式_SystemDefault, "0", 隐藏, 指定在有系统默认呈现提示的情况下使用每个字符的标志符号位图来绘制字符。将采用用户为系统选择的所有字体修匀设置来绘制文本。
.常量 文本呈现模式_SingleBitPerPixelGridFit, "1", 隐藏, 指定使用每个字符的标志符号位图来绘制字符。提示用于改善字符在主干和弯曲部分的外观。
.常量 文本呈现模式_SingleBitPerPixel, "2", 隐藏, 指定使用每个字符的标志符号位图来绘制字符。不使用提示。
.常量 文本呈现模式_AntiAliasGridFit, "3", 隐藏, 指定在有提示的情况下使用每个字符的 AntiAlias 标志符号位图来绘制字符。由于采用了 AntiAlias，质量会得到大大改善，但同时会增加性能成本。
.常量 文本呈现模式_AntiAlias, "4", 隐藏, 指定在无提示的情况下使用每个字符的 AntiAlias 标志符号位图来绘制字符。由于采用了 AntiAlias，质量会得到改善。由于关闭了提示，主干宽度差可能会比较明显。
.常量 文本呈现模式_ClearTypeGridFit, "5", 隐藏, 指定在有提示的情况下使用每个字符的标志符号 CT 位图来绘制字符。这是质量最高的设置。用于利用 ClearType 字体功能。
.常量 单位_世界坐标, "0", 隐藏, // 0 -- World coordinate (non-physical unit)
.常量 单位_Display, "1", 隐藏, // 1 -- Variable -- for PageTransform only
.常量 单位_像素, "2", 隐藏, // 2 -- Each unit is one device pixel.像素
.常量 单位_点, "3", 隐藏, // 3 -- Each unit is a printer's point 点
.常量 单位_英寸, "4", 隐藏, // 4 -- Each unit is 1 inch.英寸
.常量 单位_Document, "5", 隐藏, // 5 -- Each unit is 1/300 inch.
.常量 单位_毫米, "6", 隐藏, // 6 -- Each unit is 1 millimeter.毫米
.常量 字体风格_普通, "0", 隐藏, 
.常量 字体风格_加粗, "1", 隐藏, 
.常量 字体风格_倾斜, "2", 隐藏, 
.常量 字体风格_加粗倾斜, "3", 隐藏, 
.常量 字体风格_带下划线, "4", 隐藏, 
.常量 字体风格_带中间线, "8", 隐藏, 
.常量 填充模式_交替, "0", 隐藏, Alternate 指定交替填充模式。  
.常量 填充模式_环绕, "1", 隐藏, Winding 指定环绕填充模式。  
.常量 线帽样式_平线帽, "0", 隐藏, 0 // 指定平线帽。
.常量 线帽样式_方线帽, "1", 隐藏, 1 // 指定方线帽。
.常量 线帽样式_圆线帽, "2", 隐藏, 2 // 指定圆线帽。
.常量 线帽样式_三角线帽, "3", 隐藏, 3 // 指定三角线帽。
.常量 线帽样式_没有锚, "16", 隐藏, 0x10 // 指定没有锚。
.常量 线帽样式_方锚头帽, "17", 隐藏, 0x11 // 指定方锚头帽。
.常量 线帽样式_圆锚头帽, "18", 隐藏, 0x12 // 指定圆锚头帽。
.常量 线帽样式_菱形锚头帽, "19", 隐藏, 0x13 // 指定菱形锚头帽。
.常量 线帽样式_箭头状锚头帽, "20", 隐藏, 0x14 // 指定箭头状锚头帽。
.常量 线帽样式_自定义线帽, "255", 隐藏, 0xff // 指定自定义线帽。
.常量 线帽样式_AnchorMask, "240", 隐藏, 0xf0 // 指定用于检查线帽是否为锚头帽的掩码。
.常量 CustomLineCapType_Default, "0", 隐藏, 
.常量 CustomLineCapType_AdjustableArrow, "1", 隐藏, 
.常量 线条联接方式_Miter, "0", 隐藏, 指定斜联接。这将产生一个锐角或切除角，具体取决于斜联接的长度是否超过斜联接限制。
.常量 线条联接方式_斜角, "1", 隐藏, 指定成斜角的联接。这将产生一个斜角。
.常量 线条联接方式_圆角, "2", 隐藏, 指定圆形联接。这将在两条线之间产生平滑的圆弧。
.常量 线条联接方式_MiterClipped, "3", 隐藏, 指定斜联接。这将产生一个锐角或斜角，具体取决于斜联接的长度是否超过斜联接限制。
.常量 虚线线帽样式_方线帽, "0", 隐藏, 
.常量 虚线线帽样式_圆线帽, "2", 隐藏, 
.常量 虚线线帽样式_三角线帽, "3", 隐藏, 
.常量 画笔对齐方式_中心, "0", 隐藏, 
.常量 画笔对齐方式_内侧, "1", 隐藏, 
.常量 画笔对齐方式_外侧, "2", 隐藏, 
.常量 画笔对齐方式_左侧, "3", 隐藏, 
.常量 画笔对齐方式_右侧, "4", 隐藏, 
.常量 画笔类型_固定色, "0", 隐藏, 
.常量 画笔类型_阴影, "1", 隐藏, 
.常量 画笔类型_位图纹理, "2", 隐藏, 
.常量 画笔类型_路径渐变, "3", 隐藏, 
.常量 画笔类型_线性渐变, "4", 隐藏, 
.常量 画笔类型_未知, "-1", 隐藏, 
.常量 虚线风格_实线, "0", 隐藏, 
.常量 虚线风格_划线, "1", 隐藏, 
.常量 虚线风格_点, "2", 隐藏, 
.常量 虚线风格_划线点, "3", 隐藏, 
.常量 虚线风格_划线点点, "4", 隐藏, 
.常量 虚线风格_自定义, "5", 隐藏, 
.常量 画刷类型_固定色, "0", 隐藏, 
.常量 画刷类型_阴影, "1", 隐藏, 
.常量 画刷类型_位图纹理, "2", 隐藏, 
.常量 画刷类型_路径渐变, "3", 隐藏, 
.常量 画刷类型_线性渐变, "4", 隐藏, 
.常量 阴影风格_水平线, "0", 隐藏, Horizontal 水平线的图案。
.常量 阴影风格_垂直线, "1", 隐藏, Vertical 垂直线的图案。
.常量 阴影风格_左斜线, "2", 隐藏, ForwardDiagonal 从左上到右下的对角线的线条图案。
.常量 阴影风格_右斜线, "3", 隐藏, BackwardDiagonal 从右上到左下的对角线的线条图案。
.常量 阴影风格_十字线, "4", 隐藏, Cross 指定交叉的水平线和垂直线。
.常量 阴影风格_交叉斜线, "5", 隐藏, DiagonalCross 指定互相交叉的正向对角线和反向对角线。这些直线是锯齿消除的。
.常量 阴影风格_百分05阴影, "6", 隐藏, Percent05 指定 5% 阴影。前景色与背景色的比例为 5:100。
.常量 阴影风格_百分10阴影, "7", 隐藏, Percent10 指定 10% 阴影。前景色与背景色的比例为 10:100。
.常量 阴影风格_百分20阴影, "8", 隐藏, Percent20 指定 20% 阴影。前景色与背景色的比例为 20:100。
.常量 阴影风格_百分25阴影, "9", 隐藏, Percent25 指定 25% 阴影。前景色与背景色的比例为 25:100。
.常量 阴影风格_百分30阴影, "10", 隐藏, Percent30 指定 30% 阴影。前景色与背景色的比例为 30:100。
.常量 阴影风格_百分40阴影, "11", 隐藏, Percent40 指定 40% 阴影。前景色与背景色的比例为 40:100。
.常量 阴影风格_百分50阴影, "12", 隐藏, Percent50 指定 50% 阴影。前景色与背景色的比例为 50:100。
.常量 阴影风格_百分60阴影, "13", 隐藏, Percent60 指定 60% 阴影。前景色与背景色的比例为 60:100。
.常量 阴影风格_百分70阴影, "14", 隐藏, Percent70 指定 70% 阴影。前景色与背景色的比例为 70:100。
.常量 阴影风格_百分75阴影, "15", 隐藏, Percent75 指定 75% 阴影。前景色与背景色的比例为 75:100。
.常量 阴影风格_百分80阴影, "16", 隐藏, Percent80 指定 80% 阴影。前景色与背景色的比例为 80:100。
.常量 阴影风格_百分90阴影, "17", 隐藏, Percent90 指定 90% 阴影。前景色与背景色的比例为 90:100。
.常量 阴影风格_细向下对角线, "18", 隐藏, LightDownwardDiagonal
.常量 阴影风格_细向上对角线, "19", 隐藏, LightUpwardDiagonal 指定从顶点到底点向左倾斜的对角线，其两边夹角比 BackwardDiagonal 小 50%，但这些直线不是锯齿消除的。
.常量 阴影风格_粗向下对角线, "20", 隐藏, DarkDownwardDiagonal 指定从顶点到底点向右倾斜的对角线，其两边夹角比 ForwardDiagonal 小 50%，宽度是其两倍。此阴影图案不是锯齿消除的。
.常量 阴影风格_粗向上对角线, "21", 隐藏, DarkUpwardDiagonal 指定从顶点到底点向左倾斜的对角线，其两边夹角比 BackwardDiagonal 小 50%，宽度是其两倍，但这些直线不是锯齿消除的。
.常量 阴影风格_宽向下对角线, "22", 隐藏, WideDownwardDiagonal 指定从顶点到底点向右倾斜的对角线，其间距与阴影样式 ForwardDiagonal 相同，宽度是其三倍，但它们不是锯齿消除的。
.常量 阴影风格_宽向上对角线, "23", 隐藏, WideUpwardDiagonal 指定从顶点到底点向左倾斜的对角线，其间距与阴影样式 BackwardDiagonal 相同，宽度是其三倍，但它们不是锯齿消除的。
.常量 阴影风格_细垂直线, "24", 隐藏, LightVertical 指定垂直线的两边夹角比 Vertical 小 50%。
.常量 阴影风格_细水平线, "25", 隐藏, LightHorizontal 指定水平线，其两边夹角比 Horizontal 小 50%。
.常量 阴影风格_密垂直线, "26", 隐藏, NarrowVertical 指定垂直线的两边夹角比阴影样式 Vertical 小 75%（或者比 LightVertical 小 25%）。
.常量 阴影风格_密水平线, "27", 隐藏, NarrowHorizontal 指定水平线的两边夹角比阴影样式 Horizontal 小 75%（或者比 LightHorizontal 小 25%）。
.常量 阴影风格_粗垂直线, "28", 隐藏, DarkVertical 指定垂直线的两边夹角比 Vertical 小 50% 并且宽度是其两倍。
.常量 阴影风格_粗水平线, "29", 隐藏, DarkHorizontal 指定水平线的两边夹角比水平小 50% 并且宽度是 HatchStyleHorizontal 的两倍。
.常量 阴影风格_右斜虚线, "30", 隐藏, DashedDownwardDiagonal 指定虚线对角线，这些对角线从顶点到底点向右倾斜。
.常量 阴影风格_左斜虚线, "31", 隐藏, DashedUpwardDiagonal 指定虚线对角线，这些对角线从顶点到底点向左倾斜。
.常量 阴影风格_水平虚线, "32", 隐藏, DashedHorizontal 指定虚线水平线。
.常量 阴影风格_垂直虚线, "33", 隐藏, DashedVertical 指定虚线垂直线。
.常量 阴影风格_五彩纸屑, "34", 隐藏, SmallConfetti 指定带有五彩纸屑外观的阴影。
.常量 阴影风格_大五彩纸屑, "35", 隐藏, LargeConfetti 指定具有五彩纸屑外观的阴影，并且它是由比 SmallConfetti 更大的片构成的。
.常量 阴影风格_波浪线, "36", 隐藏, ZigZag 指定由 Z 字形构成的水平线。
.常量 阴影风格_波浪号水平线, "37", 隐藏, Wave 指定由代字号“~”构成的水平线。
.常量 阴影风格_左斜分层砖块, "38", 隐藏, DiagonalBrick 指定具有分层砖块外观的阴影，它从顶点到底点向左倾斜。
.常量 阴影风格_水平分层砖块, "39", 隐藏, HorizontalBrick 指定具有水平分层砖块外观的阴影。
.常量 阴影风格_织物外观, "40", 隐藏, Weave 指定具有织物外观的阴影。
.常量 阴影风格_格子花呢材料, "41", 隐藏, Plaid 指定具有格子花呢材料外观的阴影。
.常量 阴影风格_草皮层, "42", 隐藏, Divot 指定具有草皮层外观的阴影。
.常量 阴影风格_十字点线, "43", 隐藏, DottedGrid 指定互相交叉的水平线和垂直线，每一直线都是由点构成的。
.常量 阴影风格_交叉点线, "44", 隐藏, DottedDiamond 指定互相交叉的正向对角线和反向对角线，每一对角线都是由点构成的。
.常量 阴影风格_对角分层鹅卵石, "45", 隐藏, Shingle 指定带有对角分层鹅卵石外观的阴影，它从顶点到底点向右倾斜。
.常量 阴影风格_网格, "46", 隐藏, Trellis 指定具有格架外观的阴影。
.常量 阴影风格_球体相邻放置, "47", 隐藏, Sphere 指定具有球体彼此相邻放置的外观的阴影。
.常量 阴影风格_小网格, "48", 隐藏, SmallGrid 指定互相交叉的水平线和垂直线，其两边夹角比阴影样式 Cross 小 50%。
.常量 阴影风格_小棋盘, "49", 隐藏, SmallCheckerBoard 指定带有棋盘外观的阴影。
.常量 阴影风格_大棋盘, "50", 隐藏, LargeCheckerBoard 指定具有棋盘外观的阴影，棋盘所具有的方格大小是 SmallCheckerBoard 大小的两倍。
.常量 阴影风格_有锯齿交叉斜线, "51", 隐藏, OutlinedDiamond 指定互相交叉的正向对角线和反向对角线，但这些对角线不是锯齿消除的。
.常量 阴影风格_对角棋盘, "52", 隐藏, SolidDiamond 指定具有对角放置的棋盘外观的阴影。
.常量 阴影风格_大网格, "4", 隐藏, LargeGrid 指定阴影样式 Cross。
.常量 阴影风格_Min, "0", 隐藏, Min 指定阴影样式 Horizonal。
.常量 阴影风格_Max, "52", 隐藏, Max 指定阴影样式 SolidDiamond。
.常量 环绕模式_平铺, "0", 隐藏, Tile 平铺渐变或纹理。
.常量 环绕模式_水平反转后平铺, "1", 隐藏, TileFlipX 水平反转纹理或渐变，然后平铺该纹理或渐变。
.常量 环绕模式_垂直反转后平铺, "2", 隐藏, TileFlipY 垂直反转纹理或渐变，然后平铺该纹理或渐变。
.常量 环绕模式_水平垂直反转后平铺, "3", 隐藏, TileFlipXY 水平和垂直反转纹理或渐变，然后平铺该纹理或渐变。
.常量 环绕模式_不平铺, "4", 隐藏, Clamp 纹理或渐变没有平铺。
.常量 线性渐变模式_从左到右, "0", 隐藏, Horizontal 指定从左到右的渐变。
.常量 线性渐变模式_从上到下, "1", 隐藏, Vertical 指定从上到下的渐变。
.常量 线性渐变模式_从左上到右下, "2", 隐藏, ForwardDiagonal 指定从左上到右下的渐变。
.常量 线性渐变模式_从右上到左下, "3", 隐藏, BackwardDiagonal 指定从右上到左下的渐变。
.常量 路径点类型_Start, "0", 隐藏, Start GraphicsPath 对象的起始点。
.常量 路径点类型_Line, "1", 隐藏, Line 连线线段。
.常量 路径点类型_Bezier, "3", 隐藏, Bezier 默认贝塞尔曲线。
.常量 路径点类型_PathTypeMask, "7", 隐藏, PathTypeMask 遮盖点。
.常量 路径点类型_DashMode, "16", 隐藏, DashMode 对应线段为虚线。
.常量 路径点类型_PathMarker, "32", 隐藏, PathMarker 路径标记。
.常量 路径点类型_CloseSubpath, "128", 隐藏, CloseSubpath 子路径的终结点。
.常量 路径点类型_Bezier3, "3", 隐藏, Bezier3 立体贝塞尔曲线。
.常量 合并模式_替代, "0", 隐藏, Replace 一个剪辑区域被另一个剪辑区域替代。
.常量 合并模式_交集, "1", 隐藏, Intersect 通过采用两个剪辑区域的交集组合两个剪辑区域。
.常量 合并模式_并集, "2", 隐藏, Union 通过采用两个剪辑区域的联合组合两个剪辑区域。
.常量 合并模式_并集减交集, "3", 隐藏, Xor 两者的并集减去两者的交集。通过只采纳单独由其中一个区域（而非两个区域一起）包括的范围来组合两个剪辑区域。
.常量 合并模式_排除新区域, "4", 隐藏, Exclude 指定由从现有区域移除的新区域的结果替代现有区域。换言之，从现有区域中排除新区域。
.常量 合并模式_排除旧区域, "5", 隐藏, Complement 指定由从新区域移除的现有区域的结果替代现有区域。换言之，从新区域中排除现有区域。
.常量 图像类型_Unknown, "0", 隐藏, 
.常量 图像类型_Bitmap, "1", 隐藏, 
.常量 图像类型_Metafile, "2", 隐藏, 
.常量 像素格式_Indexed, "65536", 隐藏, Indexed 该像素数据包含颜色索引值，这意味着这些值是系统颜色表中颜色的索引，而不是单个颜色值。
.常量 像素格式_GDI, "131072", 隐藏, Gdi 像素数据包含 GDI 颜色。
.常量 像素格式_Alpha, "262144", 隐藏, Alpha 像素数据包含没有进行过自左乘的 alpha 值。
.常量 像素格式_PAlpha, "524288", 隐藏, PAlpha 像素格式包含自左乘的 alpha 值。
.常量 像素格式_Extended, "1048576", 隐藏, Extended 保留。
.常量 像素格式_Canonical, "2097152", 隐藏, Canonical 保留。
.常量 像素格式_Undefined, "0", 隐藏, Undefined 未定义像素格式。
.常量 像素格式_DontCare, "0", 隐藏, DontCare 没有指定像素格式。
.常量 像素格式_1bppIndexed, "196865", 隐藏, Format1bppIndexed 指定像素格式为每像素 1 位，并指定它使用索引颜色。因此颜色表中有两种颜色。
.常量 像素格式_4bppIndexed, "197634", 隐藏, Format4bppIndexed 指定格式为每像素 4 位而且已创建索引。
.常量 像素格式_8bppIndexed, "198659", 隐藏, Format8bppIndexed 指定格式为每像素 8 位而且已创建索引。因此颜色表中有 256 种颜色。
.常量 像素格式_16bppGrayScale, "1052676", 隐藏, Format16bppGrayScale 像素格式为每像素 16 位。该颜色信息指定 65536 种灰色调。
.常量 像素格式_16bppRGB555, "135173", 隐藏, Format16bppRgb555 指定格式为每像素 16 位；红色、绿色和蓝色分量各使用 5 位。剩余的 1 位未使用。
.常量 像素格式_16bppRGB565, "135174", 隐藏, Format16bppRgb565 指定格式为每像素 16 位；红色分量使用 5 位，绿色分量使用 6 位，蓝色分量使用 5 位。
.常量 像素格式_16bppARGB1555, "397319", 隐藏, Format16bppArgb1555 像素格式为每像素 16 位。该颜色信息指定 32
.常量 像素格式_24bppRGB, "137224", 隐藏, Format24bppRgb 指定格式为每像素 24 位；红色、绿色和蓝色分量各使用 8 位。
.常量 像素格式_32bppRGB, "139273", 隐藏, Format32bppRgb 指定格式为每像素 32 位；红色、绿色和蓝色分量各使用 8 位。剩余的 8 位未使用。
.常量 像素格式_32bppARGB, "2498570", 隐藏, Format32bppArgb 指定格式为每像素 32 位；alpha、红色、绿色和蓝色分量各使用 8 位。
.常量 像素格式_32bppPARGB, "925707", 隐藏, Format32bppPArgb 指定格式为每像素 32 位；alpha、红色、绿色和蓝色分量各使用 8 位。根据 alpha 分量，对红色、绿色和蓝色分量进行自左乘。
.常量 像素格式_48bppRGB, "1060876", 隐藏, Format48bppRgb 指定格式为每像素 48 位；红色、绿色和蓝色分量各使用 16 位。
.常量 像素格式_64bppARGB, "3424269", 隐藏, Format64bppArgb 指定格式为每像素 64 位；alpha、红色、绿色和蓝色分量各使用 16 位。
.常量 像素格式_64bppPARGB, "1851406", 隐藏, Format64bppPArgb 指定格式为每像素 64 位；alpha、红色、绿色和蓝色分量各使用 16 位。根据 alpha 分量，对红色、绿色和蓝色分量进行自左乘。
.常量 像素格式_Max, "15", 隐藏, Max 此枚举的最大值。
.常量 矩阵顺序_预先计算, "0", 隐藏, Prepend 在旧操作前应用新操作。 
.常量 矩阵顺序_追加, "1", 隐藏, Append 在旧操作后应用新操作。 
.常量 扭曲模式_透视环绕, "0", 隐藏, Perspective 指定透视环绕。 
.常量 扭曲模式_双线性环绕, "1", 隐藏, Bilinear 指定双线性环绕。 
.常量 jpg, "1", 隐藏, 
.常量 gif, "2", 隐藏, 
.常量 tiff, "3", 隐藏, 
.常量 png, "4", 隐藏, 
.常量 bmp, "0", 隐藏, 
.常量 注销, "0", 隐藏, .
.常量 强制注销, "1", 隐藏, 
.常量 重启, "2", 隐藏, 
.常量 强制重启, "3", 隐藏, 
.常量 关机, "4", 隐藏, 
.常量 强制关机, "5", 隐藏, 
.常量 备份权限, "“SeBackupPrivilege”", 隐藏, 系统权限
.常量 启动权限, "“SeRestorePrivilege”", 隐藏, 系统权限
.常量 关机权限, "“SeShutdownPrivilege”", 隐藏, 系统权限
.常量 调试权限, "“SeDebugPrivilege”", 隐藏, 系统权限
.常量 消息_双击鼠标左键, "515", 隐藏, 
.常量 消息_按下鼠标左键, "513", 隐藏, 
.常量 消息_放开鼠标左键, "514", 隐藏, 
.常量 消息_鼠标位置移动, "512", 隐藏, 
.常量 消息_将要关闭窗口, "16", 隐藏, 
.常量 消息_关闭窗口, "2", 隐藏, 
.常量 消息_按下某键, "256", 隐藏, 
.常量 消息_某键释放, "257", 隐藏, 
.常量 消息_输入字符, "258", 隐藏, 
.常量 消息_获取焦点, "7", 隐藏, 
.常量 消息_失去焦点, "8", 隐藏, 
.常量 消息_按下鼠标右键, "516", 隐藏, 
.常量 消息_放开鼠标右键, "517", 隐藏, 
.常量 消息_大小被改变, "5", 隐藏, 
.常量 消息_创建完毕, "1", 隐藏, 
.常量 消息_位置改变, "274", 隐藏, 
.常量 风格_细线边框, "8388608", 隐藏, 
.常量 风格_带标题栏, "12582912", 隐藏, 
.常量 风格_子窗口, "1073741824", 隐藏, 
.常量 风格_不重绘子窗口区域, "33554432", 隐藏, 
.常量 风格_禁止, "134217728", 隐藏, 
.常量 风格_带话框边框, "4194304", 隐藏, 带有此样式的窗口不能有标题栏
.常量 风格_第一控件, "131072", 隐藏, 
.常量 风格_带垂直滚动条, "2097152", 隐藏, 
.常量 风格_最小化, "536870912", 隐藏, 
.常量 风格_最小化按钮, "131072", 隐藏, 
.常量 风格_最大化, "16777216", 隐藏, 
.常量 风格_最大化按钮, "65536", 隐藏, 
.常量 风格_带控制按钮可调, "13565952", 隐藏, 创建一个重叠式有标题栏, 菜单,可调整, 最大化按钮, 和 最小化按钮 样式的窗口
.常量 风格_弹出式窗口, "-2147483648", 隐藏, 
.常量 风格_可调, "262144", 隐藏, 
.常量 风格_系统菜单, "524288", 隐藏, 
.常量 风格_可停留焦点, "65536", 隐藏, 
.常量 风格_可视, "268435456", 隐藏, 
.常量 风格_带横向滚动条, "1048576", 隐藏, 
.常量 风格_弹出式细边线边框窗口, "-2138570752", 隐藏, 必须同时指定＃风格_带标题栏
.常量 风格_窗口类_响应鼠标双击, "8", 隐藏, 
.常量 风格_窗口类_共享画布, "64", 隐藏, 
.常量 风格_窗口类_全局类, "16384", 隐藏, 
.常量 风格_窗口类_宽度改变重画, "2", 隐藏, 
.常量 风格_窗口类_独立画布, "32", 隐藏, 
.常量 风格_窗口类_高度改变重画, "1", 隐藏, 
.常量 风格_窗口类_保存位图, "2048", 隐藏, 保存窗口被遮盖的部分为位图。
.常量 HKEY_CLASSES_ROOT, "-2147483648", 隐藏, 
.常量 HKEY_CURRENT_USER, "-2147483647", 隐藏, 
.常量 HKEY_LOCAL_MACHINE, "-2147483646", 隐藏, 
.常量 HKEY_USERS, "-2147483645", 隐藏, 
.常量 文件操作_移动, "1", 隐藏, 移动文件
.常量 文件操作_拷贝, "2", 隐藏, 
.常量 文件操作_删除, "3", 隐藏, 
.常量 文件操作_改名, "4", 隐藏, 
.常量 文件操作标识_允许撤销, "64", 隐藏, 移入回收站
.常量 文件操作标识_仅文件, "128", 隐藏, 
.常量 文件操作标识_删除不需确认, "16", 隐藏, 
.常量 文件操作标识_建目录不需确认, "512", 隐藏, 
.常量 文件操作标识_不显示进度, "4", 隐藏, 
.常量 文件操作标识_冲突改名, "8", 隐藏, 
.常量 文件操作标识_没有出错画面, "1024", 隐藏, 
.常量 工具条_标准按钮, "0", 隐藏, TBSTYLE_BUTTON
.常量 工具条_复选按钮, "2", 隐藏, TBSTYLE_CHECK
.常量 工具条_分隔线, "1", 隐藏, TBSTYLE_SEP
.常量 工具条_下拉按钮, "128", 隐藏, TBSTYLE_EX_DOUBLEBUFFER


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 5 0 系统核心支持库
 ' eAPI F7FC1AE45C5C4758AF03EF19F18A395D 3 0 应用接口支持库



 ' 所需要的模块
 ' GDI+图像类 $GDI+图像类.ec
 ' 综合应用模块 E:\Program Files\我的软件\图标提取\综合应用模块.ec


数据类型 图标信息, , 
    .成员 宽度, 字节型, , , 
    .成员 高度, 字节型, , , 
    .成员 颜色数, 短整数型, , , 
    .成员 位面数, 短整数型, , , 
    .成员 位深度, 短整数型, , , 
    .成员 位图大小, 空白型, , , 
    .成员 数据位置, 空白型, , , 1. 图标数× 16 ＋ 6 ; 2.上一大小+上一位置

数据类型 图标数据, , 
    .成员 宽度, 字节型, , , 
    .成员 位深度, 短整数型, , , 
    .成员 大小, 整数型, , , 
    .成员 位图数据, 字节集, , , 
    .成员 文件路径, 文本型, , , 

数据类型 位图信息2, , 设备无关位图;
    .成员 结构, 整数型, , , biSize  40
    .成员 宽度, 整数型, , , btm.bmWidth
    .成员 高度, 整数型, , , btm.bmHeight
    .成员 位面数, 短整数型, , , biPlanes  1
    .成员 位深度, 短整数型, , , btm.bmBitsPixel
    .成员 压缩率, 整数型, , , biCompression 0
    .成员 位图大小, 整数型, , , biSizeImage (btm.bmWidth*24+31)/8*btm.bmHeight
    .成员 水平折像度, 整数型, , , biXPelsPerMeter  0
    .成员 垂直折像度, 整数型, , , biYPelsPerMeter 0
    .成员 位图颜色表索引, 整数型, , , biClrUsed 0 24色取0
    .成员 位图显示索引, 整数型, , , biClrImportant  0
    .成员 蓝色值, 字节型, , , rgbBlue
    .成员 绿色值, 字节型, , , rgbGreen
    .成员 红色值, 字节型, , , rgbRed
    .成员 保留参数, 字节型, , , rgbReserved

数据类型 图标信息_, , ICONINFO
    .成员 fIcon, 整数型, , , 
    .成员 xHotspot, 整数型, , , 
    .成员 yHotspot, 整数型, , , 
    .成员 hbmMask, 整数型, , , 
    .成员 hbmColor, 整数型, , , 

数据类型 PointF, 公开, 
    .成员 x, 小数型, , , 
    .成员 y, 小数型, , , 

数据类型 坐标, 公开, 
    .成员 x, 整数型, , , 
    .成员 y, 整数型, , , 

数据类型 矩形F, 公开, 
    .成员 X, 小数型, , , 
    .成员 Y, 小数型, , , 
    .成员 Width, 小数型, , , 
    .成员 Height, 小数型, , , 

数据类型 矩形, 公开, 
    .成员 X, 整数型, , , 
    .成员 Y, 整数型, , , 
    .成员 Width, 整数型, , , 
    .成员 Height, 整数型, , , 

数据类型 SizeF, 公开, 
    .成员 Width, 小数型, , , 
    .成员 Height, 小数型, , , 

数据类型 Size, 公开, 
    .成员 Width, 整数型, , , 
    .成员 Height, 整数型, , , 

数据类型 PathData, 公开, 
    .成员 Count, 整数型, , , 路径中点的数量
    .成员 Points, 整数型, , , Count个成员的PointF数组内存地址
    .成员 Types, 整数型, , , Count个字节的内存地址

数据类型 编码器信息, 公开, 图像编解码器信息
    .成员 Clsid, 字节型, , "16", 
    .成员 FormatID, 字节型, , "16", 
    .成员 CodecName, 文本型, , , WCHAR*
    .成员 DllName, 文本型, , , WCHAR*
    .成员 描述, 文本型, , , WCHAR* FormatDescription 扩展名
    .成员 扩展名, 文本型, , , WCHAR* FilenameExtension
    .成员 MimeType, 文本型, , , WCHAR* 多用途网际邮件扩充协议
    .成员 Flags, 整数型, , , 
    .成员 Version, 整数型, , , 
    .成员 SigCount, 整数型, , , 
    .成员 SigSize, 整数型, , , 
    .成员 SigPattern, 字节集, , , BYTE*
    .成员 SigMask, 字节集, , , BYTE*

数据类型 图元数据, 公开, 
    .成员 id, 整数型, , , 
    .成员 数据长度, 整数型, , , 
    .成员 数据类型, 整数型, , , 
    .成员 数据指针, 整数型, , , 已知gif帧延时保存于此

数据类型 GUID, 公开, 
    .成员 guid, 字节型, , "16", 

数据类型 编码器, 公开, 
    .成员 Count, 整数型, , , 编码器参数数量
    .成员 编码器参数, 未知类型0x4102477F, , "1", 

数据类型 系统时间_, 公开, SYSTEMTIME
    .成员 年, 短整数型, , , wYear
    .成员 月, 短整数型, , , wMonth
    .成员 星期, 短整数型, , , wDayOfWeek
    .成员 日, 短整数型, , , wDay
    .成员 小时, 短整数型, , , wHour
    .成员 分, 短整数型, , , wMinute
    .成员 秒, 短整数型, , , wSecond
    .成员 毫秒, 短整数型, , , wMilliseconds

数据类型 逻辑字体_, 公开, LOGFONT
    .成员 高度, 整数型, , , lfHeight
    .成员 宽度, 整数型, , , lfWidth
    .成员 控制摆, 整数型, , , lfEscapement
    .成员 定方位, 整数型, , , lfOrientation
    .成员 加粗, 整数型, , , lfWeight
    .成员 斜体, 字节型, , , lfItalic
    .成员 下划线, 字节型, , , lfUnderline
    .成员 删除线, 字节型, , , lfStrikeOut
    .成员 零碎工作组合, 字节型, , , lfCharSet
    .成员 出自精确, 字节型, , , lfOutPrecision
    .成员 修剪精确, 字节型, , , lfClipPrecision
    .成员 性质, 字节型, , , lfQuality
    .成员 间距, 字节型, , , lfPitchAndFamily
    .成员 字体名称, 字节型, , "32", 用LF_FACESIZE,lfFaceName?

数据类型 消息_, 公开, Msg
    .成员 窗口句柄, 整数型, , , hWnd
    .成员 消息号, 整数型, , , Message
    .成员 附加参数1, 整数型, , , wParam
    .成员 附加参数2, 整数型, , , lParam
    .成员 发送时间, 整数型, , , time
    .成员 光标横坐标, 整数型, , , x
    .成员 光标纵坐标, 整数型, , , y

数据类型 坐标_, 公开, POINTAPI
    .成员 横, 整数型, , , x，横向位置
    .成员 纵, 整数型, , , y，纵向位置

数据类型 矩形_, 公开, RECT
    .成员 左, 整数型, , , Left
    .成员 顶, 整数型, , , Top
    .成员 右, 整数型, , , Right
    .成员 底, 整数型, , , Bottom

数据类型 窗口放置_, 公开, WINDOWPLACEMENT
    .成员 结构长度, 整数型, , , 这个结构的长度（size），必须是44
    .成员 flags, 整数型, , , 1.叙述ptMinPosition  2. 可视常量 叁数被指定。 
    .成员 可视常量, 整数型, , , showCmd
    .成员 ptMinPosition_x, 整数型, , , 
    .成员 ptMinPosition_y, 整数型, , , 
    .成员 ptMaxPosition_x, 整数型, , , 
    .成员 ptMaxPosition_y, 整数型, , , 
    .成员 左边, 整数型, , , 
    .成员 顶边, 整数型, , , 
    .成员 右边, 整数型, , , 
    .成员 底边, 整数型, , , 

数据类型 热键, 公开, 
    .成员 功能键, 整数型, , , 
    .成员 键代码, 整数型, , , 

数据类型 热键数据, 公开, 
    .成员 热键号, 整数型, , , 
    .成员 键代码, 整数型, , "1", 
    .成员 监视, 逻辑型, , , 保留

数据类型 版本信息_, 公开, $(a)OSVERSIONINFO
    .成员 信息大小, 整数型, , , dwOSVersionInfoSize
    .成员 主版本, 整数型, , , dwMajorVersion
    .成员 次版本, 整数型, , , dwMinorVersion
    .成员 内部版本, 整数型, , , dwBuildNumber
    .成员 平台标识, 整数型, , , 1.98,2.NT
    .成员 CSD版本, 字节型, , "128", szCSDVersion

数据类型 文件表, 公开, 
    .成员 目录, 文本型, , , 
    .成员 文件名, 文本型, , "1", 

数据类型 进程信息, 公开, 
    .成员 类型大小, 整数型, , , 296
    .成员 引用次数, 整数型, , , 
    .成员 进程ID, 整数型, , , 
    .成员 默认堆标识, 整数型, , , 只能被此类API使用
    .成员 模块标识, 整数型, , , 同上
    .成员 线程数, 整数型, , , 
    .成员 父进程标识, 整数型, , , 
    .成员 基类优先级, 整数型, , , 由该进程创建的线程的基优先级
    .成员 标识, 整数型, , , 系统保留保留，不用
    .成员 执行文件名, 字节型, , "260", 

数据类型 模块地址_, 公开, MODULEENTRY32
    .成员 结构大小, 整数型, , , dwSize
    .成员 模块标识符, 整数型, , , th32ModuleID
    .成员 进程标识符, 整数型, , , th32ProcessID
    .成员 模块数, 整数型, , , GlblcntUsage
    .成员 进程数, 整数型, , , ProccntUsage
    .成员 模块基址, 整数型, , , modBaseAddr
    .成员 模块基址大小, 整数型, , , modBaseSize
    .成员 模块句柄, 整数型, , , hModule
    .成员 模块名称, 字节型, , "256", szModule
    .成员 文件路径, 字节型, , "260", szExePath

数据类型 查找的文件信息_, 公开, WIN32_FIND_DATA
    .成员 文件属性, 整数型, , , dwFileAttributes
    .成员 创建时间, 文件时间_, , , 
    .成员 访问时间, 文件时间_, , , 
    .成员 修改时间, 文件时间_, , , 
    .成员 nFileSizeHigh, 整数型, , , 
    .成员 文件尺寸, 整数型, , , 文件尺寸
    .成员 dwReserved0, 整数型, , , 
    .成员 dwReserved1, 整数型, , , 
    .成员 文件名称, 字节型, , "260", 
    .成员 短文件名, 字节型, , "14", 短文件名

数据类型 图片数据, 公开, 
    .成员 类型, 整数型, , , ulFlags
    .成员 hbm, 整数型, , , 没有使用,置0
    .成员 图片路径, 文本型, 传址, , pszImage
    .成员 最大长度, 整数型, , , cchImageMax
    .成员 X补偿百分比, 整数型, , , xOffsetPercent
    .成员 Y补偿百分比, 整数型, , , yOffsetPercent

数据类型 列表框信息, 公开, 
    .成员 标题, 文本型, 传址, , 本参数指定表项的标题文本(也即是第0列的标题)。
    .成员 图片索引, 整数型, , , 图片索引用于指定“图片组”属性中的某张图片。索引值从 0 开始，-1 表示无图片。
    .成员 状态图片索引, 整数型, , , 状态图片索引用于指定“状态图片组”属性中的某张图片。索引值从 0 开始，-1 表示无图片。
    .成员 表项数值, 整数型, , , 该数值与指定表项相关联。
    .成员 缩进数目, 整数型, , , “缩进数目”仅在报表型列表框才有效，用作指定显示时在表项首部增加的空白数。
    .成员 列标题, 文本型, , "1", 从第1列开始计起的列标题，多列请按列索引次序依次写到相应的数组成员中
    .成员 列图片索引, 整数型, , "1", 从第1列开始计起，可以被省略。图片索引用于指定“图片组”属性中的某张图片。索引值从 0 开始，-1 表示无图片。如果本参数被省略，默认值为 -1 。

数据类型 表项数据, 公开, LVITEM
    .成员 掩码, 整数型, , , 掩码
    .成员 项目, 整数型, , , 项目
    .成员 子项目, 整数型, , , 子项目
    .成员 状态, 整数型, , , 状态
    .成员 状态掩码, 整数型, , , 状态掩码
    .成员 项目文本, 文本型, 传址, , 项目文本
    .成员 项目文本长度, 整数型, , , 项目文本长度
    .成员 图片索引, 整数型, , , 图片索引
    .成员 项目数值, 整数型, , , 项目数值
    .成员 缩进, 整数型, , , 缩进

数据类型 列数据, 公开, LVCOLUMN
    .成员 mask, 整数型, , , 
    .成员 对齐方式, 整数型, , , fmt
    .成员 列宽度, 整数型, , , CX
    .成员 列标题, 文本型, 传址, , pszText
    .成员 缓冲区长度, 整数型, , , cchTextMax
    .成员 列索引, 整数型, , , iSubItem
    .成员 列图标, 整数型, , , iImage
    .成员 iOrder, 整数型, , , 

数据类型 文件时间_, 公开, FILETIME,size = 8
    .成员 底部时间数据, 整数型, , , dwLowDateTime,
    .成员 顶部时间数据, 整数型, , , dwHighDateTime,

数据类型 文件信息1, 公开, 包含：名称，图标，类型，属性，时间，尺寸
    .成员 图标句柄, 整数型, , , hIcon
    .成员 图标索引, 整数型, , , iIcon
    .成员 图标属性, 整数型, , , dwAttributes
    .成员 文件名称, 文本型, , , 
    .成员 显示名称, 文本型, , , 
    .成员 短文件名, 文本型, , , 
    .成员 文件类型, 文本型, , , 
    .成员 文件属性, 整数型, , , 
    .成员 创建时间, 文本型, , , 
    .成员 访问时间, 文本型, , , 
    .成员 修改时间, 文本型, , , 
    .成员 文件尺寸, 长整数型, , , 

数据类型 文件信息2, 公开, 
    .成员 文件属性, 整数型, , , 
    .成员 创建时间, 文本型, , , 
    .成员 访问时间, 文本型, , , 
    .成员 修改时间, 文本型, , , 
    .成员 文件名称, 文本型, , , 
    .成员 短文件名, 文本型, , , 
    .成员 文件尺寸, 长整数型, , , 

数据类型 设定执行文件信息_, 公开, SHELLEXECUTEINFO
    .成员 结构大小, 整数型, , , cbSize
    .成员 标志, 整数型, , , fMask
    .成员 窗口句柄, 整数型, , , hwnd
    .成员 操作命令, 文本型, , , lpVerb
    .成员 文件名, 文本型, , , lpFile
    .成员 应用程序参数, 文本型, , , lpParameters
    .成员 目录, 文本型, , , lpDirectory
    .成员 显示标志, 整数型, , , nShow
    .成员 实例句柄, 整数型, , , hInstApp
    .成员 项目标识符列表结构指针, 整数型, , , lpIDList
    .成员 文件类别, 文本型, , , lpClass
    .成员 热键句柄, 整数型, , , hkeyClass
    .成员 热键, 整数型, , , dwHotKey
    .成员 图标句柄, 整数型, , , hIcon
    .成员 进程句柄, 整数型, , , hProcess

数据类型 工作状态区域信息_, 公开, 
    .成员 结构大小, 整数型, , , 
    .成员 窗口句柄, 整数型, , , 
    .成员 标识符, 整数型, , , 
    .成员 标志, 整数型, , , 
    .成员 返回信息, 整数型, , , 
    .成员 图标句柄, 整数型, , , 
    .成员 提示文本, 字节型, , "128", 
    .成员 dwState, 整数型, , , 
    .成员 dwStateMask, 整数型, , , 
    .成员 提示信息, 字节型, , "256", 
    .成员 uTimeoutAndVersion, 整数型, , , 
    .成员 标题, 字节型, , "64", 
    .成员 提示图标, 整数型, , , 

数据类型 位图结构_, 公开, 
    .成员 bmType, 整数型, , , 一定是0
    .成员 宽度, 整数型, , , bmWidth
    .成员 高度, 整数型, , , bmHeight
    .成员 每行像素字节数, 整数型, , , 
    .成员 位面数, 整数型, , , 
    .成员 位深度, 整数型, , , 
    .成员 像素点阵指针, 整数型, , , 

数据类型 位图文件头_, 公开, 
    .成员 文件类型, 短整数型, , , 19778-BM
    .成员 位图文件大小, 整数型, , , 14+btm.bmWidthBytes* btm.bmHeight+40 
    .成员 bfReserved1, 短整数型, , , 0
    .成员 bfReserved2, 短整数型, , , 0
    .成员 结构大小, 整数型, , , 20+40 

数据类型 位图信息_, 公开, 设备无关位图;
    .成员 结构, 整数型, , , biSize  40
    .成员 宽度, 整数型, , , btm.bmWidth
    .成员 高度, 整数型, , , btm.bmHeight
    .成员 位面数, 短整数型, , , biPlanes  1
    .成员 位深度, 短整数型, , , btm.bmBitsPixel
    .成员 压缩率, 整数型, , , biCompression 0
    .成员 位图大小, 整数型, , , biSizeImage (btm.bmWidth*24+31)/8*btm.bmHeight
    .成员 水平折像度, 整数型, , , biXPelsPerMeter  0
    .成员 垂直折像度, 整数型, , , biYPelsPerMeter 0
    .成员 位图颜色表索引, 整数型, , , biClrUsed 0 24色取0
    .成员 位图显示索引, 整数型, , , biClrImportant  0
    .成员 蓝色值, 字节型, , , rgbBlue
    .成员 绿色值, 字节型, , , rgbGreen
    .成员 红色值, 字节型, , , rgbRed
    .成员 保留参数, 字节型, , , rgbReserved

数据类型 网络适配器信息, 公开, 
    .成员 索引, 整数型, , , 
    .成员 类型, 整数型, , , 
    .成员 描述, 文本型, , , 
    .成员 实际地址, 文本型, , , 
    .成员 IPv4IP地址, 文本型, , , 
    .成员 IPv4子掩码, 文本型, , , 
    .成员 IPv4默认网关, 文本型, , , 
    .成员 已启用DHCP, 逻辑型, , , 

.全局变量 旧文件, 文本型, , , 

.DLL命令 拷贝内存_图标, 空白型, "kernel32.dll", "RtlMoveMemory", , 　
    .参数 pBlock, 字节集, 传址, 
    .参数 缓冲区, 图标信息, 传址, 
    .参数 尺寸, 整数型, , 

.DLL命令 清除图标_, 整数型, "user32.dll", "DestroyIcon", , 清除图标
    .参数 图标句柄, 整数型, , hIcon

.DLL命令 取得图标信息_, 整数型, "user32", "GetIconInfo", , 
    .参数 图标句柄, 整数型, , 
    .参数 图标信息, 图标信息_, , 

.DLL命令 拷贝内存_位图, 空白型, "kernel32.dll", "RtlMoveMemory", , 　
    .参数 pBlock, 字节集, 传址, 
    .参数 缓冲区, 位图信息2, 传址, 
    .参数 尺寸, 整数型, , 

.DLL命令 提取图标扩展_, 整数型, "shell32.dll", "ExtractIconExA", , 
    .参数 文件名, 文本型, , lpszFile
    .参数 图标索引, 整数型, , nIconIndex
    .参数 大图标句柄, 整数型, 传址, phiconLarge
    .参数 小图标句柄, 整数型, 传址, phiconSmall
    .参数 图标数量, 整数型, , nIcons

.DLL命令 透明位图效果_, 整数型, "msimg32.dll", "TransparentBlt", , 
    .参数 目标设备场景句柄, 整数型, , hdc
    .参数 目标横坐标, 整数型, , x
    .参数 目标纵坐标, 整数型, , y
    .参数 目标宽度, 整数型, , nWidth
    .参数 目标高度, 整数型, , nHeight
    .参数 源设备场景句柄, 整数型, , hSrcDC
    .参数 源横坐标, 整数型, , xSrc
    .参数 源纵坐标, 整数型, , ySrc
    .参数 源宽度, 整数型, , nSrcWidth
    .参数 源高度, 整数型, , nSrcHeight
    .参数 透明值, 整数型, , crTransparent

.DLL命令 填充矩形_, 整数型, "user32.dll", "FillRect", , FillRect
    .参数 设备场景, 整数型, , hdc，设备场景的句柄
    .参数 填充区域, 矩形_, , lpRect，对填充区域进行描述的一个矩形，采用逻辑坐标
    .参数 刷子句柄, 整数型, , hBrush，欲使用的刷子的句柄

.DLL命令 创建纯色刷子_, 整数型, "gdi32.dll", "CreateSolidBrush", , 
    .参数 颜色值, 整数型, , crColor，颜色值

.DLL命令 取文本长度_, 整数型, "kernel32.dll", "lstrlenA", 公开, lstrlenA
    .参数 文本, 文本型, , Ptr

.DLL命令 读整数_, 整数型, "", "ReadProcessMemory", 公开, 关闭句柄
    .参数 进程句柄, 整数型, , 
    .参数 地址, 整数型, , 
    .参数 变量, 整数型, 传址, 
    .参数 长度, 整数型, , 
    .参数 lpNumberOfBytesWritten, 整数型, , 

.DLL命令 取实例句柄_, 整数型, "", "GetModuleHandleA", 公开, 
    .参数 程序名, 文本型, , 

.DLL命令 载入鼠标指针_, 整数型, "user32.dll", "LoadCursorA", 公开, 从指定的模块或应用程序实例中载入一个鼠标指针
    .参数 实例句柄, 整数型, , hInstance,参见相关帮助
    .参数 鼠标指针标识, 整数型, , lpCursorName,参见相关帮助

.DLL命令 创建窗口_, 整数型, "user32.dll", "CreateWindowExA", 公开, 
    .参数 扩展风格, 整数型, , 
    .参数 类名, 文本型, , 刚才注册的类名
    .参数 窗口标题, 文本型, , 
    .参数 风格, 整数型, , 
    .参数 屏幕横坐标, 整数型, , 
    .参数 屏幕纵坐标, 整数型, , 
    .参数 宽度, 整数型, , 
    .参数 高度, 整数型, , 
    .参数 父窗口句柄, 整数型, , 没有就写0
    .参数 菜单句柄, 整数型, , 
    .参数 模块句柄, 整数型, , 
    .参数 参数, 整数型, , 

.DLL命令 中断获取消息_, 空白型, "user32", "PostQuitMessage", 公开, 通知WINDOWS线索将中断　
    .参数 nExitCode, 整数型, , 

.DLL命令 调用窗口过程, 整数型, "user32", "DefWindowProcA", 公开, 调用缺省窗口过程　
    .参数 窗口句柄, 整数型, , DefFrameProcA
    .参数 消息, 整数型, , 
    .参数 参数1, 整数型, , 
    .参数 参数2, 整数型, , 

.DLL命令 获取消息_, 整数型, "user32.dll", "GetMessageA", 公开, GetMessage
    .参数 消息值, 消息_, , lpMsg
    .参数 窗口句柄, 整数型, , hwnd
    .参数 过滤消息最小值, 整数型, , wMsgFilterMin
    .参数 过滤消息最大值, 整数型, , wMsgFilterMax

.DLL命令 解释消息_, 整数型, "user32.dll", "TranslateMessage", 公开, 
    .参数 消息结构, 消息_, , lpMsg

.DLL命令 设置窗口状态和位置信息, 空白型, "user32.dll", "SetWindowPlacement", 公开, 
    .参数 窗口句柄, 整数型, , 
    .参数 位置信息, 窗口放置_, , 

.DLL命令 分派消息_, 空白型, "user32.dll", "DispatchMessageA", 公开, 
    .参数 消息结构, 消息_, , lpMsg

.DLL命令 发送消息_文本, 整数型, "user32", "SendMessageA", 公开, 调用一个窗口的窗口函数，将一条消息发给那个窗口。除非消息处理完毕，否则该函数不会返回。SendMessageBynum， ;    SendMessageByString是该函数的“类型安全”声明形式  由具体的消息决定
    .参数 窗口句柄, 整数型, , 要接收消息的那个窗口的句柄
    .参数 信息值, 整数型, , 消息的标识符
    .参数 参数一, 整数型, , 具体取决于消息
    .参数 参数二, 文本型, , 具体取决于消息;

.DLL命令 发送消息_整数, 整数型, "user32", "SendMessageA", 公开, 调用一个窗口的窗口函数，将一条消息发给那个窗口。除非消息处理完毕，否则该函数不会返回。SendMessageBynum， ;    SendMessageByString是该函数的“类型安全”声明形式  由具体的消息决定
    .参数 窗口句柄, 整数型, , 要接收消息的那个窗口的句柄
    .参数 信息值, 整数型, , 消息的标识符
    .参数 参数一, 整数型, , 具体取决于消息
    .参数 参数二, 整数型, , 具体取决于消息;

.DLL命令 设置窗口信息_指针, 子程序指针, "user32", "SetWindowLongA", 公开, 在窗口结构中为指定的窗口设置信息  指定数据的前一个值
    .参数 窗口句柄, 整数型, , hwnd，欲为其取得信息的窗口的句柄
    .参数 要置的特征, 整数型, , nIndex，请参考GetWindowLong函数的nIndex参数的说明
    .参数 新特征, 子程序指针, , dwNewLong，由nIndex指定的窗口信息的新值

.DLL命令 取客户区矩形_, 整数型, "user32", "GetClientRect", 公开, 
    .参数 窗口句柄, 整数型, , 
    .参数 矩形区域, 矩形_, , 

.DLL命令 取屏幕句柄_, 整数型, "user32", "GetDesktopWindow", 公开, 

.DLL命令 删除对象_, 整数型, "gdi32.dll", "DeleteObject", 公开, DeleteObject
    .参数 对象句柄, 整数型, , hObject,一个GDI对象的句柄

.DLL命令 测试虚拟键_, 整数型, "user32", "GetAsyncKeyState", 公开, 
    .参数 键代码, 整数型, , vKey Long，欲测试的虚拟键的键码 

.DLL命令 最近的输入虚拟键状态_, 整数型, "user32.dll", "GetKeyState", 公开, GetKeyState，针对已处理过的按键，在最近一次输入信息时，判断指定虚拟键的状态
    .参数 键代码, 整数型, , nVirtKey，欲测试的虚拟键键码。对字母、数字字符（A-Z、a-z、0-9），用它们实际的ASCII值

.DLL命令 设置窗口标题_, 整数型, "user32", "SetWindowTextA", 公开, 
    .参数 窗口句柄, 整数型, , 
    .参数 窗口标题, 文本型, , 

.DLL命令 设置时钟_, 整数型, "user32.dll", "SetTimer", 公开, 
    .参数 窗口句柄, 整数型, , hwnd
    .参数 事件标识符, 整数型, , nIDEvent
    .参数 时钟周期, 整数型, , uElapse
    .参数 回调函数地址, 整数型, , lpTimerFunc

.DLL命令 销毁时钟_, 整数型, "user32.dll", "KillTimer", 公开, 
    .参数 窗口句柄, 整数型, , hwnd
    .参数 事件标识符, 整数型, , nIDEvent

.DLL命令 取前台窗口_, 整数型, "user32", "GetForegroundWindow", 公开, 

.DLL命令 打开文件_, 整数型, "kernel32", "_lopen", 公开, 
    .参数 文件名, 文本型, , 
    .参数 访问模式, 整数型, , 4096.创建文件;512.删除文件;0.只读;1.只写;2.读写;16.其他任何一个程序都不能再打开这个文件;64.可打开文件，以便由其他程序读写;48.禁止其他程序读写文件内容;32.其他程序可以读文件，但不能写文件;

.DLL命令 取格式化时间_, 整数型, "kernel32.dll", "GetTimeFormatA", 公开, GetTimeFormatA针对指定的“当地”格式，对一个系统日期进行格式化  格式化过后的字串的长度。零表示出错，会将GetLastError设置为下述值之一：ERROR_INSUFFICIENT_BUFFER，ERROR_INVALID_FLAGS，ERROR_INVALID_PARAMETER
    .参数 地方ID, 整数型, , Locale，用于决定格式的地方ID。lpFormat参数中指定的任何信息（倘若不是NULL）都优先于特定于地方的信息
    .参数 标志, 整数型, , dwFlags，如指定了lpFormat，那么该参数应该为零。否则，可设为LOCALE_NOUSEROVERRIDE，强制使用系统地方参数――即使它们已由用户取代。用DATE_SHORTDATE 或 DATE_LONGDATE选择不同的日期格式
    .参数 日期结构, 系统时间_, 传址, lpDate，包含了一个系统日期的结构
    .参数 格式化, 文本型, 传址, lpFormat，可设为NULL，使用特定于不同地方的值（用vbNull传递一个NULL）。否则包含一个日期格式字串。对d
    .参数 缓冲区文本, 文本型, , lpDateStr，指定一个缓冲区，用于容纳格式化过后的字串。注意事先对字串进行初始化
    .参数 缓冲区文本长度, 整数型, , cchDate，缓冲区的长度。如为零，表示函数会返回需要缓冲区的大小;

.DLL命令 关闭句柄_, 空白型, "", "CloseHandle", 公开, 
    .参数 线程句柄, 整数型, , 

.DLL命令 结束进程_, 逻辑型, "kernel32.dll", "TerminateProcess", 公开, TerminateProcess,WinStationTerminateProcess
    .参数 进程的句柄, 整数型, , 
    .参数 进程退出码, 整数型, , 

.DLL命令 取命令行_, 文本型, "kernel32", "GetCommandLineA", 公开, 

.DLL命令 取内存变量地址_长整数, 整数型, "kernel32", "lstrcpynA", 公开, 
    .参数 数据1, 长整数型, 传址, lpString1
    .参数 数据2, 长整数型, 传址, lpString2
    .参数 数据长度, 整数型, , iMaxLength

.DLL命令 设置窗口位置_, 整数型, "user32.dll", "SetWindowPos", 公开, Long，非零表示成功，零表示失败。会设置GetLastError
    .参数 窗口句柄, 整数型, , Long，欲定位的窗口
    .参数 定位类型, 整数型, , Long，窗口句柄。在窗口列表中，窗口hwnd会置于这个窗口句柄的后面。HWND_BOTTOM将窗口置于窗口列表底部HWND_TOP将窗口置于Z序列的顶部；Z序列代表在分级结构中，窗口针对一个给定级别的窗口显示的顺序HWND_TOPMOST将窗口置于列表顶部，并位于任何最顶部窗口的前面HWND_NOTOPMOST将窗口置于列表顶部，并位于任何最顶部窗口的后面
    .参数 窗口新横坐标, 整数型, , Long，窗口新的x坐标。如hwnd是一个子窗口，则x用父窗口的客户区坐标表示
    .参数 窗口新纵坐标, 整数型, , Long，窗口新的y坐标。如hwnd是一个子窗口，则y用父窗口的客户区坐标表示
    .参数 窗口新宽度, 整数型, , Long，指定新的窗口宽度
    .参数 窗口新高度, 整数型, , Long，指定新的窗口高度
    .参数 显示方式, 整数型, , Long，包含了旗标的一个整数SWP_DRAWFRAME围绕窗口画一个框SWP_HIDEWINDOW隐藏窗口等等

.DLL命令 取设备场景_, 整数型, "user32", "GetDC", 公开, 获取指定窗口的设备场景  指定窗口的设备场景句柄，出错则为0,使用 释放设备场景_ 释放
    .参数 窗口的句柄, 整数型, , 

.DLL命令 释放设备场景_, 整数型, "user32", "ReleaseDC", 公开, ReleaseDC
    .参数 窗口句柄, 整数型, , hwnd，要释放的设备场景相关的窗口句柄
    .参数 设备场景, 整数型, , hdc，要释放的设备场景句柄

.DLL命令 延时_, 整数型, "kernel32.dll", "Sleep", 公开, 
    .参数 延时时间, 整数型, , 毫秒

.DLL命令 枚举父窗口_, 整数型, "user32.dll", "EnumWindows", 公开, 枚举窗口列表中的所有父窗口（顶级和被所有窗口）
    .参数 函数指针, 子程序指针, , lpEnumFunc,指向为每个子窗口都调用的一个函数的指针
    .参数 自定义数值, 整数型, , lParam,参见相关帮助

.DLL命令 取父窗口_, 整数型, "user32", "GetParent", 公开, 判断指定窗口的父窗口  父窗口的句柄。如窗口没有父，或遇到错误，则返回零。会设置GetLastError
    .参数 窗口句柄, 整数型, , 欲测试的窗口的句柄;

.DLL命令 取线程退出代码_, 空白型, "kernel32.dll", "GetExitCodeThread", 公开, 
    .参数 线程句柄, 整数型, , 
    .参数 退出代码, 整数型, , 

.DLL命令 控制鼠标_, 空白型, "user32", "mouse_event", 公开, 
    .参数 dwFlags, 整数型, , 
    .参数 dx, 整数型, , 
    .参数 dy, 整数型, , 
    .参数 cButtons, 整数型, , 
    .参数 dwExtraInfo, 整数型, , 

.DLL命令 回调函数_指针, 整数型, "", "CallWindowProcA", 公开, 
    .参数 程序指针, 子程序指针, , 
    .参数 窗口句柄, 整数型, , 
    .参数 消息, 整数型, , 
    .参数 参数1, 整数型, , 
    .参数 参数2, 整数型, , 

.DLL命令 回调函数_整数, 整数型, "", "CallWindowProcA", 公开, 
    .参数 程序指针, 整数型, , 
    .参数 窗口句柄, 整数型, , 
    .参数 消息, 整数型, , 
    .参数 参数1, 整数型, , 
    .参数 参数2, 整数型, , 

.DLL命令 查找文件_, 整数型, "kernel32.dll", "FindFirstFileA", 公开, 返回搜索句柄，不用时用“关闭搜索句柄_”关闭
    .参数 文件名, 文本型, , lpFileName，欲搜索的文件名
    .参数 文件信息, 查找的文件信息_, , lpFindFileData，参见相关帮助

.DLL命令 关闭搜索句柄_, 整数型, "kernel32.dll", "FindClose", 公开, FindClose,关闭由FindFirstFile函数创建的一个搜索句柄
    .参数 搜索句柄, 整数型, , hFindFile，由FindFirstFile函数提供的搜索句柄

.DLL命令 移动文件_, 整数型, "kernel32.dll", "MoveFileExA", 公开, MoveFileA,移动文件,可以是文件或目录
    .参数 文件名, 文本型, , lpExistingFileName，欲移动的文件名
    .参数 新文件名, 文本型, , lpNewFileName，新文件名
    .参数 常数, 整数型, , 1.如目标文件存在，则将其替换,2.如移动到一个不同的卷，则复制文件并删除原来的文件,3.移动操作在系统下次重新启动时正式进行。这样便可在Windows NT中改换系统文件

.DLL命令 复制文件_, 逻辑型, "kernel32.dll", "CopyFileA", 公开, 
    .参数 源文件, 文本型, , lpExistingFileName，被复制的文件名
    .参数 目标文件, 文本型, , lpNewFileName，目标文件名
    .参数 不覆目标文件, 逻辑型, , bFailIfExists，真，不覆盖，假，覆盖

.DLL命令 取得窗口信息_, 整数型, "user32", "GetWindowLongA", 公开, $(b)从指定窗口的结构中取得信息  由nIndex决定。零表示出错。会设置GetLastError
    .参数 窗口句柄, 整数型, , 欲为其获取信息的窗口的句柄
    .参数 属性, 整数型, , 欲取回的信息，可以是下述任何一个常数：;GWL_EXSTYLE：扩展窗口样式;GWL_STYLE：窗口样式;GWL_WNDPROC：该窗口的窗口函数的地址;GWL_HINSTANCE：拥有窗口的实例的句柄;GWL_HWNDPARENT：该窗口之父的句柄。不要用SetWindowWord来改变这个值;GWL_ID：对话框中一个子窗口的标识符;GWL_USERDATA：含义由应用程序规定;DWL_DLGPROC：这个窗口的对话框函数地址;DWL_MSGRESULT：在对话框函数中处理的一条消息返回的值;DWL_USER：含义由应用程序规定;

.DLL命令 设置窗口信息_整数, 整数型, "user32", "SetWindowLongA", 公开, 在窗口结构中为指定的窗口设置信息  指定数据的前一个值
    .参数 窗口句柄, 整数型, , hwnd，欲为其取得信息的窗口的句柄
    .参数 窗口信息值, 整数型, , nIndex，请参考GetWindowLong函数的nIndex参数的说明
    .参数 窗口信息新值, 整数型, , dwNewLong，由nIndex指定的窗口信息的新值

.DLL命令 取当前进程ID_, 整数型, "kernel32.dll", "GetCurrentProcessId", 公开, 获取当前进程一个唯一的标识符

.DLL命令 取当前线程ID_, 整数型, "kernel32", "GetCurrentThreadId", 公开, 

.DLL命令 取窗口情况_, 整数型, "user32.dll", "GetWindowPlacement", 公开, 
    .参数 窗口句柄, 整数型, , 
    .参数 情况, 窗口放置_, , 

.DLL命令 取窗口矩形_, 整数型, "", "GetWindowRect", 公开, 
    .参数 窗口句柄, 整数型, , 
    .参数 区域, 矩形_, , 

.DLL命令 判断窗口可见性_, 整数型, "user32.dll", "IsWindowVisible", 公开, 判断窗口是否可见
    .参数 窗口句柄, 整数型, , hwnd,要测试的那个窗口的句柄

.DLL命令 置窗口状态_, 整数型, "", "ShowWindow", 公开, 控制窗口的状态（在vb里使用：针对vb窗体及控件，请使用对应的vb属性） 成功:返回TRUE（非零），失败:返回FALSE（零）
    .参数 hwnd, 整数型, , 窗口句柄，要向这个窗口应用由命令
    .参数 nCmdShow, 整数型, , 0 隐藏  1 还原激活 2 最小化激活 3 最大化激活 4 还原（可视） 5 还原激活 6 最小化 7 最小化 8还原非激活 9 还原激活

.DLL命令 申请内存_, 整数型, "", "VirtualAllocEx", 公开, 
    .参数 进程句柄, 整数型, , hProcess
    .参数 lpAddress, 整数型, , 
    .参数 dwSize, 整数型, , 
    .参数 flAllocationType, 整数型, , 
    .参数 flProtect, 整数型, , 

.DLL命令 写内存_, 逻辑型, "", "WriteProcessMemory", 公开, 
    .参数 进程句柄, 整数型, , hProcess
    .参数 写入地址, 整数型, , 
    .参数 写入内容, 字节集, , 
    .参数 写入长度, 整数型, , 写入的数据长度
    .参数 写入长度, 整数型, , 实际读出的数据长度，为0则忽略

.DLL命令 运行远程线程_, 整数型, "kernel32.dll", "CreateRemoteThread", 公开, 
    .参数 进程句柄, 整数型, , 进程句柄
    .参数 线程安全描述字, 整数型, , 线程安全描述字，指向SECURITY_ATTRIBUTES结构的指针
    .参数 线程栈大小, 整数型, , 线程栈大小，以字节表示
    .参数 远程进程指针, 整数型, , 一个LPTHREAD_START_ROUTINE类型的指针，指向在远程进程中执行的函数地址
    .参数 传入参数, 整数型, , 传入参数
    .参数 其它标志, 整数型, , 创建线程的其它标志
    .参数 线程身份标志, 整数型, , 线程身份标志，如果为NULL

.DLL命令 等待执行返回_, 整数型, "kernel32.dll", "WaitForSingleObject", 公开, 
    .参数 hHandle, 整数型, , 
    .参数 dwMilliseconds, 整数型, , 

.DLL命令 释放内存_, 整数型, "kernel32.dll", "VirtualFreeEx", 公开, 
    .参数 进程句柄, 整数型, , 可以使用函数 OpenProcess() 返回。
    .参数 内存空间地址, 整数型, , 用 VirtualAllocEx() 申请的内存空间地址。
    .参数 dwSize, 整数型, 传址, 
    .参数 dwFreeType, 整数型, , 

.DLL命令 取当前线程伪句柄_, 整数型, "kernel32", "GetCurrentThread", 公开, 获取当前线程的一个伪句柄  当前线程的伪句柄

.DLL命令 投递消息_, 空白型, "", "PostMessageA", 公开, 向指定窗口句柄发送消息
    .参数 h, 整数型, , 
    .参数 m, 整数型, , 
    .参数 p, 整数型, , 
    .参数 p, 整数型, , 

.DLL命令 _判断鼠标双击间隔, 整数型, "", "GetDoubleClickTime", 公开, 判断连续两次鼠标单击之间会被处理成双击事件的间隔时间 以毫秒表示的双击时间

.DLL命令 取鼠标位置_, 整数型, "user32", "GetCursorPos", 公开, 
    .参数 位置, 坐标_, , 

.DLL命令 闪烁显示指定窗口_, 整数型, "user32.dll", "FlashWindow", 公开, FlashWindow,闪烁显示指定窗口
    .参数 窗口句柄, 整数型, , hwnd，要闪烁显示的窗口的句柄
    .参数 状态, 整数型, , TRUE（非零）表示切换窗口标题；FALSE返回最初状态

.DLL命令 置父窗口_, 整数型, "user32", "SetParent", 公开, 指定一个窗口的新父
    .参数 窗口句柄, 整数型, , 
    .参数 父窗口, 整数型, , 新父

.DLL命令 取当前进程伪句柄_, 整数型, "kernel32.dll", "GetCurrentProcess", 公开, GetCurrentProcess

.DLL命令 读取字节_, 整数型, "", "ReadProcessMemory", 公开, 关闭句柄
    .参数 进程句柄, 整数型, , 
    .参数 地址, 整数型, , 
    .参数 变量, 字节集, 传址, 
    .参数 长度, 整数型, , 
    .参数 lpNumberOfBytesWritten, 整数型, , 0

.DLL命令 读取文本_, 整数型, "", "ReadProcessMemory", 公开, 关闭句柄
    .参数 进程句柄, 整数型, , 
    .参数 地址, 整数型, , 
    .参数 变量, 文本型, 传址, 
    .参数 长度, 整数型, , 
    .参数 lpNumberOfBytesWritten, 整数型, , 0

.DLL命令 设置输入焦点, 整数型, "user32.dll", "SetFocus", 公开, 
    .参数 hwnd, 整数型, , 

.DLL命令 定义图标列表_, 整数型, "comctl32.dll", "ImageList_Create", 公开, 
    .参数 宽度, 整数型, , 
    .参数 高度, 整数型, , 
    .参数 色彩, 整数型, , 
    .参数 cInitial, 整数型, , 
    .参数 cGrow, 整数型, , 

.DLL命令 添加图标到列表_, 整数型, "comctl32.dll", "ImageList_AddIcon", 公开, 
    .参数 图标列表, 整数型, , 
    .参数 图标句柄, 整数型, , 

.DLL命令 定义图标列表背景颜色_, 整数型, "comctl32.dll", "ImageList_SetBkColor", 公开, 
    .参数 图片列表, 整数型, , 
    .参数 背景颜色, 整数型, , 

.DLL命令 清空图标列表_, 整数型, "comctl32.dll", "ImageList_Destroy", 公开, 
    .参数 图标列表, 整数型, , 

.DLL命令 判断窗口句柄_, 逻辑型, "user32.dll", "IsWindow", 公开, 判断一个窗口句柄是否有效
    .参数 窗口句柄, 整数型, , hwnd,待检查窗口的句柄

.DLL命令 寻找顶级窗口_, 整数型, "user32.dll", "FindWindowA", 公开, FindWindow,寻找窗口列表中第一个符合指定条件的顶级窗口
    .参数 窗口类名, 文本型, , lpClassName，参见相关帮助
    .参数 窗口文本, 文本型, , lpWindowName，参见相关帮助

.DLL命令 系统时间到文件时间_, 整数型, "kernel32.dll", "SystemTimeToFileTime", 公开, SystemTimeToFileTime
    .参数 系统时间结构, 系统时间_, , lpSystemTime
    .参数 文件时间结构, 文件时间_, , lpFileTime

.DLL命令 文件时间到系统时间_, 整数型, "kernel32.dll", "FileTimeToSystemTime", 公开, 
    .参数 文件时间结构, 文件时间_, , lpFileTime，包含了文件时间的一个结构
    .参数 系统时间结构, 系统时间_, , lpSystemTime，用于装载系统时间信息的一个结构

.DLL命令 提取文件图标_, 整数型, "shell32.dll", "ExtractIconA", 公开, 判断一个可执行文件或DLL中是否有图标存在，并将其提取出来
    .参数 程序句柄, 整数型, , hInst,当前应用程序的实例句柄
    .参数 文件名, 文本型, , lpszExeFileName,在其中提取图标的那个程序的全名
    .参数 图标索引, 整数型, , nIconIndex,欲获取的图标的索引

.DLL命令 获取消息编号_, 整数型, "user32", "RegisterWindowMessageA", 公开, 
    .参数 消息名称, 文本型, , 

.DLL命令 扩展_图标通报_, 逻辑型, "", "Shell_NotifyIconA", 公开, 
    .参数 消息值, 整数型, , 
    .参数 图标通报结构, 工作状态区域信息_, , 

.DLL命令 打开剪辑板_, 整数型, "user32.dll", "OpenClipboard", 公开, 打开CLIPBOARD
    .参数 剪贴板句柄, 整数型, , 

.DLL命令 取剪辑板窗口句柄_, 整数型, "user32.dll", "GetOpenClipboardWindow", 公开, 返回打开CLIPBOARD的窗口句柄

.DLL命令 删除设备场景_, 整数型, "gdi32.dll", "DeleteDC", 公开, 
    .参数 设备场景句柄, 整数型, , hdc，将要删除的设备场景

.DLL命令 创建内存场景_, 整数型, "Gdi32", "CreateCompatibleDC", 公开, 
    .参数 设备场景句柄, 整数型, , 

.DLL命令 创建设备位图_, 整数型, "gdi32", "CreateCompatibleBitmap", 公开, 
    .参数 设备场景句柄, 整数型, , 
    .参数 宽度, 整数型, , 
    .参数 高度, 整数型, , 

.DLL命令 选入设备场景_, 整数型, "gdi32.dll", "SelectObject", 公开, SelectObject
    .参数 场景句柄, 整数型, , hdc
    .参数 对象句柄, 整数型, , hobject

.DLL命令 载入图象_, 整数型, "user32.dll", "LoadImageA", 公开, 载入一个位图、图标或指针
    .参数 实例句柄, 整数型, , hInst,要从其中载入图象的DLL或应用程序模块或实例句柄 0
    .参数 图象标志符, 文本型, , lpsz,欲载入图象的名字
    .参数 图象类型, 整数型, , un1,指定了欲载入的图象类型 0,位图 1,图标 2,鼠标  
    .参数 图象宽度, 整数型, , n1,要求的图象宽度 0 默认宽度
    .参数 图象高度, 整数型, , n2,要求的图象高度 0,默认高度
    .参数 常数组合, 整数型, , un2,常数的任意组合  0,常规;16,实例句柄为0载入文件  64,图象默认大小; 32,与图象中第一个像素相符的所有像素都由系统替换 1,将图象转换成单色

.DLL命令 复制场景位图_, 整数型, "gdi32", "BitBlt", 公开, 将一幅位图从一个设备场景复制到另一个。源和目标DC相互间必须兼容  非零表示成功，零表示失败。会设置GetLastError
    .参数 目标设备场景, 整数型, , 目标设备场景
    .参数 目标横坐标, 整数型, , 对目标DC中目标矩形左上角位置进行描述的那个点。用目标DC的逻辑坐标表示
    .参数 目标纵坐标, 整数型, , 同上
    .参数 传输图像宽度, 整数型, , 欲传输图象的宽度和高度
    .参数 传输图像高度, 整数型, , 同上
    .参数 源设备场景, 整数型, , 源设备场景。如光栅运算未指定源，则应设为0
    .参数 源横坐标, 整数型, , 对源DC中源矩形左上角位置进行描述的那个点。用源DC的逻辑坐标表示
    .参数 源纵坐标, 整数型, , 同上
    .参数 光栅运算方式, 整数型, , 传输过程要执行的光栅运算;

.DLL命令 复制位图_, 整数型, "gdi32.dll", "StretchBlt", 公开, StretchBlt，将一幅位图从一个设备场景复制到另一个。源和目标DC相互间必须兼容。这个函数会在设备场景中定义一个目标矩形，并在位图中定义一个源图象。源矩形会根据需要进行伸缩，以便与目标矩形的大小相符
    .参数 目标设备场景句柄, 整数型, , hdc，目标设备场景
    .参数 目标横坐标, 整数型, , x，目标矩形左上角的x,y坐标，以逻辑坐标表示
    .参数 目标纵坐标, 整数型, , y，目标矩形左上角的x,y坐标，以逻辑坐标表示
    .参数 目标宽度, 整数型, , nWidth，目标矩形的宽度和高度，以逻辑坐标表示
    .参数 目标高度, 整数型, , nHeight，目标矩形的宽度和高度，以逻辑坐标表示
    .参数 源设备场景句柄, 整数型, , hSrcDC，源设备场景。如光栅运算未指定一个源，则这个参数应为零
    .参数 源横坐标, 整数型, , xSrc，用源DC的逻辑坐标表示的源矩形左上角位置
    .参数 源纵坐标, 整数型, , ySrc，用源DC的逻辑坐标表示的源矩形左上角位置
    .参数 源宽度, 整数型, , nSrcWidth，分别指定用逻辑单位（以源DC为基础）传输的一幅图象的宽度和高度。如其中有一个参数的符号（指正负号）与对应的目标参数不符，位图就会在对应的轴上作镜像转换处理
    .参数 源高度, 整数型, , nSrcHeight，分别指定用逻辑单位（以源DC为基础）传输的一幅图象的宽度和高度。如其中有一个参数的符号（指正负号）与对应的目标参数不符，位图就会在对应的轴上作镜像转换处理
    .参数 光栅运算, 整数型, , dwRop，传输过程中进行的光栅运算。如刷子属于光栅运算的一部分，就使用选入目标DC的刷子

.DLL命令 置时间_, 整数型, "kernel32.dll", "SetLocalTime", 公开, 设置当前系统时间
    .参数 时间结构, 系统时间_, , 这个结构指定了新的地方时间。其中的wDayOfWeek条目会被忽略

.DLL命令 取运行时间_, 整数型, "kernel32", "GetTickCount", 公开, 

.DLL命令 取现行时间_, 整数型, "kernel32", "GetLocalTime", 公开, 
    .参数 系统时间格式, 系统时间_, 传址, 

.DLL命令 创建GDI对象_, 整数型, "gdi32.dll", "CreateDIBSection", 公开, 
    .参数 设备场景句柄, 整数型, , 
    .参数 pBitmapInfo, 位图信息_, 传址, 
    .参数 常数, 整数型, , 
    .参数 内存地址, 整数型, , 
    .参数 文件映射句柄, 整数型, , 
    .参数 偏移量, 整数型, , 

.DLL命令 创建设备有关位图_, 整数型, "gdi32.dll", "CreateBitmapIndirect", 公开, 
    .参数 位图信息, 位图结构_, 传址, lpBitmap，位图信息

.DLL命令 取内存变量地址_位图信息, 整数型, "kernel32", "lstrcpynA", 公开, 
    .参数 数据1, 位图信息_, 传址, lpString1
    .参数 数据2, 位图信息_, 传址, lpString2
    .参数 数据长度, 整数型, , iMaxLength

.DLL命令 置伸缩模式_, 整数型, "gdi32", "SetStretchBltMode", 公开, 指定StretchBlt 和 StretchDIBits函数的伸缩模式。这种伸缩模式定义了Windows如何对伸缩过程中剔除的扫描线进行控制。对于VB窗体和控件，倘若在API绘图过程中使用这个函数，建议恢复原来的StretchBlt模式  上一次伸缩模式的值，零表示失败
    .参数 设备场景句柄, 整数型, , hdc
    .参数 伸缩模式, 整数型, , nStretchMode

.DLL命令 画图标_, 整数型, "user32.dll", "DrawIcon", 公开, 在指定的位置画一个图标  非零表示成功，零表示失败。会设置GetLastError
    .参数 设备场景句柄, 整数型, , hdc Long，设备场景 
    .参数 横坐标, 整数型, , x,y Long，想描绘图标的位置（逻辑坐标） 
    .参数 纵坐标, 整数型, , 同上
    .参数 图标句柄, 整数型, , hIcon Long，欲描绘图标的句柄 

.DLL命令 载入动态链接库_, 整数型, "kernel32.dll", "LoadLibraryA", 公开, 载入指定的动态链接库，并将它映射到当前进程使用的地址空间
    .参数 动态链接库名称, 文本型, , lpLibFileName,指定要载入的动态链接库的名称

.DLL命令 取内存变量地址_整数数组, 整数型, "kernel32", "lstrcpynA", 公开, 
    .参数 数据1, 整数型, 传址 数组, lpString1
    .参数 数据2, 整数型, 传址 数组, lpString2
    .参数 数据长度, 整数型, , iMaxLength

.DLL命令 设置时钟_指针, 整数型, "user32.dll", "SetTimer", 公开, 
    .参数 窗口句柄, 整数型, , hwnd
    .参数 事件标识符, 整数型, , nIDEvent
    .参数 时钟周期, 整数型, , uElapse
    .参数 回调函数地址, 子程序指针, , lpTimerFunc

.DLL命令 画图标扩展_, 整数型, "user32.dll", "DrawIconEx", 公开, 描绘一个图标或鼠标指针
    .参数 设备场景句柄, 整数型, , hdc，要在其中画图的一个设备场景的句柄 
    .参数 左边尽头, 整数型, , xLeft,yTop，图标左上角的位置，用逻辑坐标表示 
    .参数 顶边尽头, 整数型, , 
    .参数 图标句柄, 整数型, , hIcon，要描绘的图标的句柄 
    .参数 描绘宽度, 整数型, , cxWidth,cyWidth，希望的图标宽度和高度
    .参数 描绘高度, 整数型, , 
    .参数 描绘的帧, 整数型, , istepIfAniCur，参见相关帮助
    .参数 刷子句柄, 整数型, , hbrFlickerFreeDraw，参见相关帮助
    .参数 描绘标志, 整数型, , diFlags

.DLL命令 复制图片_, 整数型, "user32.dll", "CopyImage", 公开, 
    .参数 源资源句柄, 整数型, , handle，欲复制的图象的句柄
    .参数 资源类型, 整数型, , un1，根据资源而定
    .参数 目标宽度, 整数型, , n1，副本以像素表示的宽度
    .参数 目标高度, 整数型, , n2，副本以像素表示的高度
    .参数 处理参数, 整数型, , un2，复制过程中所做的处理，根据参数不同而作用不同

.DLL命令 下载文件_, 整数型, "shdocvw.dll", "DoFileDownload", 公开, IE下载
    .参数 url, 文本型, , 

.窗口程序集 窗口程序集1, , , 

.程序集变量 超级列表框, 超级列表框类, , , 
.程序集变量 集_返回函数, 子程序指针, , , 
.程序集变量 集_图标数据组, 图标数据, , "0", 
.程序集变量 集_设备场景句柄, 空白型, , , 
.程序集变量 集_设备场景句柄2, 空白型, , , 
.程序集变量 集_提取文件, 文本型, , , 
.程序集变量 集_图标计次, 空白型, , , 
.程序集变量 集_图标数, 空白型, , , 
.程序集变量 上次选中项, 空白型, , , 
.子程序 消息处理, 整数型, , 不要修改该子程序的返回值及参数的类型！
.参数 窗口句柄, 整数型, , 
.参数 消息, 整数型, , 
.参数 参数1, 整数型, , 热键号
.参数 参数2, 整数型, , 

.局部变量 局_文件名, 文本型, , , 
.局部变量 后缀, 文本型, , , 
.局部变量 Gdi图像, Gdi图像, , , 
.局部变量 图标句柄, 空白型, , , 
.局部变量 i, 空白型, 静态, , 
.局部变量 被选择, 逻辑型, , , 
.局部变量 现行选中项, 空白型, , , 

 ' --========  易语言资源网  (www.5A5X.com)  ======--
 ' 努力创建完善、持续更新的易语言学习例程源码资源站
 ' --================   www.5A5X.com  ===========--
 ' --==================   易语言资源网注意事项  ================--
 ' * 易语言资源网为易语言官方站、易语言官方论坛提供辅助资源站；
 ' 本易语言资源网( www.5A5X.com)所有软件和资料均为软件作者提
 ' 供和网友推荐发布而来，其版权归该软件和程序源码的合法拥有者所
 ' 有，本站易语言资源网整理收集仅供易语言用户学习和易语言技术研
 ' 究探讨使用，不得用于任何商业用途。如果由于以上原因造成的版权
 ' 纠纷本站概不负责！
 ' * 本站资源未经许可，任何网站不得非法盗链及抄袭本站资源；如引用
 ' 页面，请注明来自易语言资源网，谢谢合作！
 ' --=====================   www.5A5X.com  ================--

.如果真 (等于 (消息, 4289)) ' 热消息
    
.如果真结束
.如果真 (并且 (不等于 (消息, 32770), 不等于 (消息, 132), 不等于 (消息, 512), 不等于 (消息, 32), 不等于 (消息, 275), 不等于 (消息, 15), 不等于 (消息, 256), 不等于 (消息, 20), 不等于 (消息, 257), 不等于 (消息, 513)))
    
.如果真结束
.如果真 (等于 (消息, #消息_某键释放))
    .如果真 (或者 (等于 (参数1, 38), 等于 (参数1, 40)))
        赋值 (被选择, 真)
    .如果真结束
    
.如果真结束
.如果真 (或者 (等于 (消息, 533), 等于 (消息, #消息_按下鼠标左键), 等于 (消息, #消息_按下鼠标右键)))
    赋值 (被选择, 真)
.如果真结束

.判断开始 (被选择)
    赋值 (现行选中项, 超级列表框.现行选中项 ())
    .如果真 (并且 (不等于 (现行选中项, -1), 不等于 (现行选中项, 上次选中项), 等于 (超级列表框.取表项数值 (现行选中项), 0)))
        赋值 (局_文件名, .内容)
        .如果真 (不等于 (取文本右边 (局_文件名, 1), “\”))
            赋值 (局_文件名, 相加 (局_文件名, “\”))
        .如果真结束
        赋值 (局_文件名, 相加 (局_文件名, 超级列表框.取标题 (现行选中项)))
        Gdi图像.载入图像文件 (局_文件名)
        Gdi图像.缩放图像 (128, 128, 真)
         ' 赋值 (.底图, Gdi图像.取回字节集 (0, , #银白, 255, 真))
     ' .如果真结束
    赋值 (上次选中项, 现行选中项)
    
.判断 (等于 (消息, #消息_双击鼠标左键))
    赋值 (现行选中项, 超级列表框.现行选中项 ())
    .如果真 (等于 (超级列表框.取表项数值 (现行选中项), 1))
        赋值 (局_文件名, .内容)
        .如果真 (不等于 (取文本右边 (局_文件名, 1), “\”))
            赋值 (局_文件名, 相加 (局_文件名, “\”))
        .如果真结束
        赋值 (局_文件名, 相加 (局_文件名, 超级列表框.取标题 (现行选中项)))
        赋值 (.内容, 局_文件名)
        _组合框2_列表项被选择 ()
    .如果真结束
    
.默认
    
.判断结束
返回 (回调函数_指针 (集_返回函数, 窗口句柄, 消息, 参数1, 参数2)) ' 手动修改 <返回函数> 变量名称,为注册热键时返回的程序指针

.子程序 __启动窗口_创建完毕, 空白型, , 
.局部变量 驱动器列表, 文本型, , "0", 
.局部变量 磁盘卷标, 文本型, , , 
.局部变量 类型, 空白型, , , 
.局部变量 i, 空白型, , , 
.局部变量 hd, 空白型, , , 

赋值 (hd, 超级列表框.创建 (取窗口句柄 (), 0, 0, .宽度, .高度, 1))
超级列表框.整行选择 (真)
超级列表框.插入列 (“图片文件”, 200)
赋值 (集_返回函数, 设置窗口信息_指针 (hd, -4, &消息处理))
取驱动器列表_M (驱动器列表, 3)
取特定目录_M (16).加入项目 ()
取特定目录_M (39).加入项目 ()
取特定目录_M (5).加入项目 ()
.计次循环首 (取数组成员数 (驱动器列表), i)
    驱动器列表.加入项目 ( [i], )
.计次循环尾 ()
赋值 (.现行选中项, 1)
_组合框2_列表项被选择 ()
GDI启动 ()

.子程序 _添加按钮_被单击, 空白型, , 
.局部变量 图标数据头1, 图标数据, , , 
.局部变量 GDI图像, Gdi图像, , , 
.局部变量 目录, 文本型, , , 
.局部变量 文件, 文本型, , , 
.局部变量 位图数据, 字节集, , , 
.局部变量 位图宽度, 空白型, , , 
.局部变量 图标宽度, 空白型, , , 
.局部变量 位图高度, 空白型, , , 
.局部变量 位图句柄, 空白型, , , 
.局部变量 后缀, 文本型, , , 
.局部变量 图标信息, 图标信息_, , , 
.局部变量 像素格式, 空白型, , , 

置等待鼠标 ()
赋值 (图标宽度, .取项目数值 (.现行选中项))
赋值 (图标数据头1.宽度, 图标宽度)
赋值 (图标数据头1.位深度, 32)
赋值 (目录, .内容)
.如果真 (不等于 (取文本右边 (目录, 1), “\”))
    赋值 (目录, 相加 (目录, “\”))
.如果真结束
赋值 (文件, 相加 (目录, 超级列表框.取标题 (超级列表框.现行选中项 ())))
.如果真 (等于 (文件是否存在_M (文件), 假))
    信息框 (“请选择图片！”, 0, )
    返回 ()
.如果真结束
GDI图像.载入图像文件 (文件)
GDI图像.取图像高度宽度 (位图宽度, 位图高度)

.如果 (等于 (图标宽度, 0))
    .如果 (或者 (不等于 (位图宽度, 256), 不等于 (位图高度, 256)))
        GDI图像.缩放图像 (256, 256, 真)
        赋值 (位图数据, GDI图像.取回字节集 (4))
    .否则
        .如果 (等于 (取后缀_M (文件), “.png”))
            赋值 (位图数据, 读入文件 (文件))
        .否则
            赋值 (位图数据, GDI图像.取回字节集 (4))
        .如果结束
         ' 本源码来自易语言资源网(www.5A5X.com)
    .如果结束
    
    .如果真 (大于 (取字节集长度 (位图数据), 23))
        赋值 (位图数据 [23], 到字节 (0))
    .如果真结束
    赋值 (图标数据头1.位图数据, 位图数据)
    赋值 (图标数据头1.大小, 取字节集长度 (图标数据头1.位图数据))
    赋值 (图标数据头1.文件路径, 文件)
    .加入项目 (.内容, )
.否则
    .如果真 (或者 (不等于 (位图宽度, 图标宽度), 不等于 (位图高度, 图标宽度)))
        GDI图像.缩放图像 (图标宽度, 图标宽度, 真)
    .如果真结束
    赋值 (位图数据, GDI图像.取回字节集 (0))
    赋值 (图标数据头1.位图数据, 位图数据)
    赋值 (图标数据头1.大小, 相加 (相减 (取字节集长度 (图标数据头1.位图数据), 14), 填空 (图标宽度)))
    赋值 (图标数据头1.文件路径, 文件)
    相加 (.内容, “(”, 到文本 (图标数据头1.位深度), “)”).加入项目 ()
.如果结束
加入成员 (集_图标数据组, 图标数据头1)
未知支持库函数_73 ()

.子程序 _删除按钮_被单击, 空白型, , 
.如果真 (不等于 (.现行选中项, -1))
    删除成员 (集_图标数据组, 相加 (.现行选中项, 1), 1)
    .删除项目 (.现行选中项)
.如果真结束


.子程序 _转换按钮_被单击, 空白型, , 
.局部变量 字节集, 字节集, , , 
.局部变量 文件名, 文本型, , , 

赋值 (文件名, 保存文件对话框_M (“图标文件|*.ico”, 取运行目录 ()))
.如果真 (不等于 (文件名, “”))
    赋值 (字节集, 构建图标 (集_图标数据组))
    .如果 (写到文件 (文件名, 字节集))
        .如果真 (.选中)
            执行_M (“explorer.exe”, 相加 (“/select,”, 文件名))
        .如果真结束
        赋值 (旧文件, 文件名)
    .否则
        信息框 (“抱歉！转换失败。”, 0, )
    .如果结束
    
.如果真结束


.子程序 _列表框1_列表项被选择, 空白型, , 
.局部变量 GDI图像, Gdi图像, , , 
.局部变量 i, 空白型, , , 

.如果真 (不等于 (.现行选中项, -1))
    赋值 (i, 相加 (.现行选中项, 1))
    GDI图像.载入图像文件 (集_图标数据组 [i], 文件路径)
    GDI图像.缩放图像 (集_图标数据组 [i], 宽度, 集_图标数据组 [i], 宽度, 真)
    赋值 (.底图, GDI图像.取回字节集 (0, , #银白, 255))
    
.如果真结束


.子程序 _提取图标按钮_被单击, 空白型, , 
.局部变量 局_图标数, 空白型, , , 
.局部变量 图标句柄, 空白型, , , 
.局部变量 i, 空白型, , , 
.局部变量 窗口放置, 窗口放置_, , , 
.局部变量 内存场景, 空白型, , , 
.局部变量 位图句柄, 空白型, , , 
.局部变量 局_设备场景, 空白型, , , 
.局部变量 刷子, 空白型, , , 
.局部变量 矩形, 矩形_, , , 
.局部变量 文件名, 文本型, , , 

赋值 (文件名, 打开文件对话框_M (“全部文件|*.*|执行文件(exe)|*.exe|DLL文件|*.dll|CPL文件|*.cpl”))
.如果真 (不等于 (文件名, “”))
    赋值 (.内容, 相加 (取运行目录 (), “\”, .内容, “\”, 取文件名_M (文件名)))
    赋值 (集_提取文件, 文件名)
    赋值 (集_图标数, 取文件图标2_M (集_提取文件))
    赋值 (.宽度, 相乘 (集_图标数, 32))
    赋值 (.左边, 0)
    处理事件 ()
    赋值 (局_设备场景, 取设备场景_ (0))
    赋值 (内存场景, 创建内存场景_ (局_设备场景))
    赋值 (位图句柄, 创建设备位图_ (局_设备场景, 相乘 (集_图标数, 32), 32))
    选入设备场景_ (内存场景, 位图句柄)
    赋值 (矩形.右, 相乘 (集_图标数, 32))
    赋值 (矩形.底, 32)
    赋值 (刷子, 创建纯色刷子_ (#白色))
    填充矩形_ (内存场景, 矩形, 刷子)
    删除对象_ (刷子)
    .如果 (小于 (集_图标数, 1))
        赋值 (.标题, 相加 (“‘”, 取文件名_M (集_提取文件, 真), “’中没有图标！可提取其关联文件图标。”))
        赋值 (图标句柄, 取文件图标_M (文件名))
        赋值 (.图片, 取图标数据_M (图标句柄, 32, 32, 0, .背景颜色))
        赋值 (.宽度, 32)
        赋值 (.底图, .图片)
        清除图标_ (图标句柄)
        赋值 (.禁止, 真)
        赋值 (.禁止, 假)
    .否则
        赋值 (.标题, 相加 (“‘”, 取文件名_M (集_提取文件, 真), “’有”, 到文本 (集_图标数), “个图标。”))
        赋值 (.禁止, 假)
        赋值 (.禁止, 假)
        .计次循环首 (集_图标数, i)
            赋值 (图标句柄, 取文件图标2_M (文件名, 相减 (i, 1)))
            .如果真 (等于 (i, 1))
                赋值 (.图片, 取图标数据_M (图标句柄, 32, 32, 0, .背景颜色))
            .如果真结束
            画图标_ (内存场景, 相乘 (32, 相减 (i, 1)), 0, 图标句柄)
            清除图标_ (图标句柄)
        .计次循环尾 ()
        赋值 (.底图, 取位图数据_M (位图句柄))
    .如果结束
    
    删除对象_ (位图句柄)
    删除设备场景_ (内存场景)
    释放设备场景_ (0, 局_设备场景)
    
.如果真结束


.子程序 _全部提取按钮_被单击, 空白型, , 
.局部变量 i, 空白型, , , 
.局部变量 目录, 文本型, , , 
.局部变量 序号, 文本型, , , 
.局部变量 a, 空白型, , , 
.局部变量 图标句柄, 空白型, , , 
.局部变量 图标1, 图标数据, , "1", 
.局部变量 GDI图像, Gdi图像, , , 
.局部变量 字节集, 字节集, , , 

.如果真 (大于 (集_图标数, 0))
    赋值 (目录, .内容)
    .如果真 (目录是否存在_M (目录))
        .判断循环首 (真)
            赋值 (a, 相加 (a, 1))
            .如果真 (等于 (目录是否存在_M (相加 (目录, “(”, 到文本 (a), “)”)), 假))
                赋值 (目录, 相加 (目录, “(”, 到文本 (a), “)”))
                跳出循环 ()
            .如果真结束
            
        .判断循环尾 ()
    .如果真结束
    创建目录_M (目录)
    .计次循环首 (集_图标数, i)
        .判断开始 (大于 (集_图标数, 999))
            .判断开始 (小于 (i, 10))
                赋值 (序号, 相加 (“000”, 到文本 (i)))
            .判断 (并且 (大于 (i, 9), 小于 (i, 100)))
                赋值 (序号, 相加 (“00”, 到文本 (i)))
            .判断 (并且 (大于 (i, 99), 小于 (i, 1000)))
                赋值 (序号, 相加 (“0”, 到文本 (i)))
            .默认
                赋值 (序号, 到文本 (i))
            .判断结束
            
        .判断 (大于 (集_图标数, 99))
            .判断开始 (小于 (i, 10))
                赋值 (序号, 相加 (“00”, 到文本 (i)))
            .判断 (并且 (大于 (i, 9), 小于 (i, 100)))
                赋值 (序号, 相加 (“0”, 到文本 (i)))
            .默认
                赋值 (序号, 到文本 (i))
            .判断结束
            
        .判断 (大于 (集_图标数, 9))
            .如果 (小于 (i, 10))
                赋值 (序号, 相加 (“0”, 到文本 (i)))
            .否则
                赋值 (序号, 到文本 (i))
            .如果结束
            
        .默认
            赋值 (序号, 到文本 (i))
        .判断结束
        .如果 (等于 (.现行选中项, 5))
            .如果真 (等于 (未知支持库函数_33 (集_提取文件, 0, 相加 (目录, “\”, .内容, 序号, “.ico”), i), 0))
                赋值 (图标句柄, 取文件图标2_M (集_提取文件, 相减 (i, 1)))
                赋值 (图标1 [1].宽度, 32)
                赋值 (图标1 [1].位深度, 32)
                赋值 (图标1 [1].大小, 4264)
                赋值 (图标1 [1].位图数据, 取图标数据_M (图标句柄, 32, 32))
                赋值 (字节集, 构建图标 (图标1))
                写到文件 (相加 (目录, “\”, .内容, 序号, “.ico”), 字节集)
                清除图标_ (图标句柄)
                赋值 (.标题, 相加 (“提取图标失败！序号：”, 序号, “  根据句柄创建.”))
                
            .如果真结束
            
        .否则
            赋值 (图标句柄, 取文件图标2_M (集_提取文件, 相减 (i, 1)))
            GDI图像.载入图标句柄 (图标句柄)
            .判断开始 (等于 (.现行选中项, 0))
                GDI图像.保存到文件 (相加 (目录, “\”, .内容, 序号, “.bmp”), .现行选中项, #白色, 255)
            .判断 (等于 (.现行选中项, 1))
                GDI图像.保存到文件 (相加 (目录, “\”, .内容, 序号, “.jpg”), .现行选中项, #白色, 255)
            .判断 (等于 (.现行选中项, 2))
                GDI图像.保存到文件 (相加 (目录, “\”, .内容, 序号, “.gif”), .现行选中项, #白色, 255)
            .判断 (等于 (.现行选中项, 3))
                GDI图像.保存到文件 (相加 (目录, “\”, .内容, 序号, “.tiff”), .现行选中项)
            .默认
                GDI图像.保存到文件 (相加 (目录, “\”, .内容, 序号, “.png”), .现行选中项)
            .判断结束
            清除图标_ (图标句柄)
        .如果结束
        处理事件 ()
    .计次循环尾 ()
    .如果真 (等于 (信息框 (“提取完毕！是否打开文件夹查看文件？”, 36, ), 5))
        执行_M (目录)
    .如果真结束
    
    
    
.如果真结束


.子程序 _调节器1_调节钮被按下, 空白型, , 
.参数 按钮值, 整数型, , 

.局部变量 i, 空白型, , , 

赋值 (i, 相加 (到数值 (.内容), 按钮值)) ' 卵啊,编辑框调节器变成白色
.如果真 (小于 (i, 1))
    赋值 (i, 集_图标数)
.如果真结束
.如果真 (大于 (i, 集_图标数))
    赋值 (i, 1)
.如果真结束
.如果真 (等于 (i, 0))
    赋值 (i, 1)
.如果真结束
赋值 (.内容, 到文本 (i))

.子程序 _编辑框2_内容被改变, 空白型, , 
.局部变量 i, 空白型, , , 
.局部变量 图标句柄, 空白型, , , 

赋值 (i, 到数值 (.内容))
.如果真 (大于 (集_图标数, 0))
    处理事件 ()
    赋值 (图标句柄, 取文件图标2_M (集_提取文件, 相减 (i, 1)))
    赋值 (.图片, 取图标数据_M (图标句柄, 32, 32, 0, .背景颜色))
    清除图标_ (图标句柄)
.如果真结束


.子程序 _提取按钮_被单击, 空白型, , 
.局部变量 i, 空白型, , , 
.局部变量 目录, 文本型, , , 
.局部变量 序号, 文本型, , , 
.局部变量 图标句柄, 空白型, , , 
.局部变量 GDI图像, Gdi图像, , , 
.局部变量 字节集, 字节集, , , 
.局部变量 位图数据, 字节集, , , 
.局部变量 位图信息, 位图信息_, , , 
.局部变量 图标数据, 图标数据, , "1", 
.局部变量 a, 空白型, , , 
.局部变量 txt, 文本型, , "0", 

.如果 (大于 (集_图标数, 0))
    赋值 (目录, .内容)
    .如果真 (等于 (目录是否存在_M (目录), 假))
        创建目录_M (目录)
    .如果真结束
    赋值 (i, 到数值 (.内容))
    .判断开始 (大于 (集_图标数, 999))
        .判断开始 (小于 (i, 10))
            赋值 (序号, 相加 (“000”, 到文本 (i)))
        .判断 (并且 (大于 (i, 9), 小于 (i, 100)))
            赋值 (序号, 相加 (“00”, 到文本 (i)))
        .判断 (并且 (大于 (i, 99), 小于 (i, 1000)))
            赋值 (序号, 相加 (“0”, 到文本 (i)))
        .默认
            赋值 (序号, 到文本 (i))
        .判断结束
         ' 本源码来自易语言资源网(www.5A5X.com)
    .判断 (大于 (集_图标数, 99))
        .判断开始 (小于 (i, 10))
            赋值 (序号, 相加 (“00”, 到文本 (i)))
        .判断 (并且 (大于 (i, 9), 小于 (i, 100)))
            赋值 (序号, 相加 (“0”, 到文本 (i)))
        .默认
            赋值 (序号, 到文本 (i))
        .判断结束
        
    .判断 (大于 (集_图标数, 9))
        .如果 (小于 (i, 10))
            赋值 (序号, 相加 (“0”, 到文本 (i)))
        .否则
            赋值 (序号, 到文本 (i))
        .如果结束
        
    .默认
        赋值 (序号, 到文本 (i))
    .判断结束
    赋值 (图标句柄, 取文件图标2_M (集_提取文件, 相减 (i, 1)))
    .判断开始 (等于 (.现行选中项, 5))
        .如果 (等于 (未知支持库函数_33 (集_提取文件, 0, 相加 (目录, “\”, .内容, 序号, “.ico”), i), 0))
            赋值 (图标数据 [1].宽度, 32)
            赋值 (图标数据 [1].位深度, 32)
            赋值 (图标数据 [1].大小, 4264)
            赋值 (图标数据 [1].位图数据, 取图标数据_M (图标句柄, 32, 32))
            赋值 (字节集, 构建图标 (图标数据))
            写到文件 (相加 (目录, “\”, .内容, 序号, “.ico”), 字节集)
            赋值 (.标题, 相加 (“提取图标失败！序号：”, 序号, “  根据句柄创建.”))
        .否则
            赋值 (.标题, 相加 (“提取图标成功！序号：”, 序号))
        .如果结束
        
    .判断 (等于 (.现行选中项, 6))
        .如果 (写到文件 (相加 (目录, “\”, .内容, 序号, “.bmp”), 取图标数据_M (图标句柄, 32, 32)))
            赋值 (.标题, 相加 (“保存BMP图片成功！序号：”, 序号))
        .否则
            赋值 (.标题, 相加 (“保存BMP图片失败！序号：”, 序号))
        .如果结束
        
    .判断 (等于 (.现行选中项, 0))
        .如果 (写到文件 (相加 (目录, “\”, .内容, 序号, “.bmp”), 取图标数据_M (图标句柄, 32, 32, 0, #白色)))
            赋值 (.标题, 相加 (“保存BMP图片成功！序号：”, 序号))
        .否则
            赋值 (.标题, 相加 (“保存BMP图片失败！序号：”, 序号))
        .如果结束
        
    .判断 (等于 (.现行选中项, 1))
        GDI图像.载入图像字节集 (取图标数据_M (图标句柄, 32, 32, 0, #白色))
        
        .如果 (GDI图像.保存到文件 (相加 (目录, “\”, .内容, 序号, “.jpg”), 1))
            赋值 (.标题, 相加 (“保存JPG图片成功！序号：”, 序号))
        .否则
            赋值 (.标题, 相加 (“保存JPG图片失败！序号：”, 序号))
        .如果结束
        
    .判断 (等于 (.现行选中项, 2))
        GDI图像.载入图像字节集 (取图标数据_M (图标句柄, 32, 32, 0, #白色))
        .如果 (GDI图像.保存到文件 (相加 (目录, “\”, .内容, 序号, “.gif”), 2))
            赋值 (.标题, 相加 (“保存GIF图片成功！序号：”, 序号))
        .否则
            赋值 (.标题, 相加 (“保存GIF图片失败！序号：”, 序号))
        .如果结束
        
    .判断 (等于 (.现行选中项, 3))
        GDI图像.载入图标句柄 (图标句柄)
        .如果 (GDI图像.保存到文件 (相加 (目录, “\”, .内容, 序号, “.tiff”), 3))
            赋值 (.标题, 相加 (“保存TIFF图片成功！序号：”, 序号))
        .否则
            赋值 (.标题, 相加 (“保存TIFF图片失败！序号：”, 序号))
        .如果结束
        
    .默认
        GDI图像.载入图标句柄 (图标句柄)
        .如果 (GDI图像.保存到文件 (相加 (目录, “\”, .内容, 序号, “.png”), 4))
            赋值 (.标题, 相加 (“保存PNG图片成功！序号：”, 序号))
        .否则
            赋值 (.标题, 相加 (“保存PNG图片失败！序号：”, 序号))
        .如果结束
        
    .判断结束
    清除图标_ (图标句柄)
.否则
    赋值 (图标句柄, 取文件图标_M (集_提取文件))
    .如果真 (不等于 (图标句柄, 0))
        赋值 (.过滤器, .取项目文本 (.现行选中项))
        赋值 (txt, 分割文本 (.过滤器, “|”, ))
        赋值 (.默认文件后缀, txt [2])
        .如果真 (打开 ())
            .判断开始 (等于 (.现行选中项, 5))
                赋值 (图标数据 [1].宽度, 32)
                赋值 (图标数据 [1].位深度, 32)
                赋值 (图标数据 [1].大小, 4264)
                赋值 (图标数据 [1].位图数据, 取图标数据_M (图标句柄, 32, 32))
                赋值 (字节集, 构建图标 (图标数据))
                .如果 (写到文件 (.文件名, 字节集))
                    信息框 (“提取图标成功！”, 0, )
                .否则
                    信息框 (“提取图标失败！”, 0, )
                .如果结束
                
            .判断 (等于 (.现行选中项, 6))
                .如果 (写到文件 (.文件名, 取图标数据_M (图标句柄, 32, 32)))
                    信息框 (“保存BMP图片成功！”, 0, )
                .否则
                    信息框 (“保存BMP图片失败！”, 0, )
                .如果结束
                
            .判断 (等于 (.现行选中项, 0))
                .如果 (写到文件 (.文件名, 取图标数据_M (图标句柄, 32, 32, 0, #白色)))
                    信息框 (“保存BMP图片成功！”, 0, )
                .否则
                    信息框 (“保存BMP图片失败！”, 0, )
                .如果结束
                
            .判断 (等于 (.现行选中项, 1))
                GDI图像.载入图像字节集 (取图标数据_M (图标句柄, 32, 32, 0, #白色))
                .如果 (GDI图像.保存到文件 (.文件名, 1))
                    信息框 (“保存JPG图片成功！”, 0, )
                .否则
                    信息框 (“保存JPG图片失败！”, 0, )
                .如果结束
                
            .判断 (等于 (.现行选中项, 2))
                GDI图像.载入图像字节集 (取图标数据_M (图标句柄, 32, 32, 0, #白色))
                .如果 (GDI图像.保存到文件 (.文件名, 2))
                    信息框 (“保存GIF图片成功！”, 0, )
                .否则
                    信息框 (“保存GIF图片失败！”, 0, )
                .如果结束
                
            .判断 (等于 (.现行选中项, 3))
                GDI图像.载入图标句柄 (图标句柄)
                .如果 (GDI图像.保存到文件 (.文件名, 3))
                    信息框 (“保存TIFF图片成功！”, 0, )
                .否则
                    信息框 (“保存TIFF图片失败！”, 0, )
                .如果结束
                
            .默认
                GDI图像.载入图标句柄 (图标句柄)
                .如果 (GDI图像.保存到文件 (.文件名, 4))
                    信息框 (“保存PNG图片成功！”, 0, )
                .否则
                    信息框 (“保存PNG图片失败！”, 0, )
                .如果结束
                
            .判断结束
            
        .如果真结束
        
    .如果真结束
    清除图标_ (图标句柄)
.如果结束


.子程序 _取文件夹图标按钮_被单击, 空白型, , 
.局部变量 文件夹, 文本型, , , 
.局部变量 文件名, 文本型, , , 
.局部变量 图标句柄, 空白型, , , 
.局部变量 图标数据, 图标数据, , "1", 

 ' 赋值 (文件夹, 浏览文件夹_M (取窗口句柄 (), , , , 假, , ))
.如果真 (不等于 (文件夹, “”))
    赋值 (文件名, 保存文件对话框_M (“图标文件|*.ico”, 取运行目录 ()))
    .如果真 (不等于 (文件名, “”))
        赋值 (图标句柄, 取文件图标_M (文件夹))
        赋值 (图标数据 [1].宽度, 32)
        赋值 (图标数据 [1].位深度, 32)
        赋值 (图标数据 [1].大小, 4264)
        赋值 (图标数据 [1].位图数据, 取图标数据_M (图标句柄, 32, 32))
        .如果 (写到文件 (文件名, 构建图标 (图标数据)))
            .如果真 (等于 (信息框 (“提取图标成功！是否打开文件所在目录?”, 相加 (#信息图标, #是否钮), ), #是钮))
                执行_M (“explorer.exe”, 相加 (“/select,”, 文件名))
            .如果真结束
            
        .否则
            信息框 (“提取图标失败！”, 0, )
        .如果结束
        
    .如果真结束
    
.如果真结束


.子程序 _分割图标按钮_被单击, 空白型, , 
.局部变量 字节集, 字节集, , , 
.局部变量 图标头, 字节集, , , 
.局部变量 图标头1, 字节集, , , 
.局部变量 图标头2, 字节集, , , 
.局部变量 数据组, 图标数据, , "0", 
.局部变量 数据, 字节集, , , 
.局部变量 图标数, 空白型, , , 
.局部变量 图标头长度, 空白型, , , 
.局部变量 数据长, 空白型, , , 
.局部变量 i, 空白型, , , 
.局部变量 开始位置, 空白型, , , 
.局部变量 位深度, 空白型, , , 
.局部变量 图标宽度, 字节型, , , 
.局部变量 图标数据1, 图标数据, , , 
.局部变量 图标1, 空白型, , , 
.局部变量 文件, 文本型, , , 
.局部变量 长度, 空白型, , , 
.局部变量 目录, 文本型, , , 
.局部变量 gif, 字节集, , , 
.局部变量 位图句柄, 空白型, , , 
.局部变量 文件名, 文本型, , , 

赋值 (文件名, 打开文件对话框_M (“图标文件|*.ico”))
.如果真 (不等于 (文件名, “”))
     ' 赋值 (目录, 浏览文件夹_M (取窗口句柄 (), “选择保存图标的位置”, , , 真, 真, ))
    .如果真 (不等于 (目录, “”))
        .如果真 (不等于 (取文本右边 (目录, 1), “\”))
            赋值 (目录, 相加 (目录, “\”))
        .如果真结束
        赋值 (目录, 相加 (目录, 取文件名_M (文件名), “\”))
        创建目录_M (目录)
        赋值 (字节集, 读入文件 (文件名))
        赋值 (图标数, 取字节集数据 (字节集, 2, 5))
        赋值 (图标头长度, 取字节集数据 (字节集, 3, 19))
        赋值 (开始位置, 相加 (图标头长度, 1))
        赋值 (图标头, { 0, 0, 1, 0, 1, 0 })
        .计次循环首 (图标数, i)
            赋值 (位深度, 取字节集数据 (字节集, 1, 相减 (相乘 (i, 16), 3)))
            赋值 (图标头1, 取字节集中间 (字节集, 相减 (相乘 (i, 16), 9), 12))
            赋值 (图标宽度, 取字节集数据 (字节集, 1, 相减 (相乘 (i, 16), 9)))
            赋值 (数据长, 取字节集数据 (字节集, 3, 相减 (相乘 (i, 16), 1)))
            赋值 (数据, 取字节集中间 (字节集, 开始位置, 数据长))
            赋值 (图标头2, 相加 (图标头, 图标头1, { 22, 0, 0, 0 }))
            赋值 (文件, 相加 (目录, “Par”, 到文本 (i), “.ico”))
            写到文件 (文件, 相加 (图标头2, 数据))
            赋值 (图标1, 载入图象_M (文件, 1))
            .如果 (不等于 (图标1, 0))
                .如果真 (并且 (大于或等于 (位深度, 32), 大于或等于 (图标宽度, 8)))
                    赋值 (图标数据1.宽度, 图标宽度)
                    赋值 (图标数据1.位深度, 32)
                    赋值 (图标数据1.位图数据, 取图标数据_M (图标1, 图标宽度, 32))
                    赋值 (图标数据1.大小, 相加 (相减 (取字节集长度 (图标数据1.位图数据), 14), 填空 (图标宽度)))
                    加入成员 (数据组, 图标数据1)
                .如果真结束
                
            .否则
                .如果真 (大于 (取字节集长度 (数据), 23))
                    赋值 (数据 [23], 到字节 (1))
                .如果真结束
                写到文件 (相加 (目录, 到文本 (i), “.png”), 数据)
                删除文件 (文件)
            .如果结束
            赋值 (开始位置, 相加 (开始位置, 数据长))
            清除图标_ (图标1)
        .计次循环尾 ()
        .如果 (大于 (取数组成员数 (数据组), 0))
            写到文件 (相加 (目录, “new.ico”), 构建图标 (数据组))
            .如果真 (等于 (信息框 (“分割完毕！并重新创建了一个新的图标。是否查看？”, 36, ), 5))
                执行_M (目录)
            .如果真结束
            
        .否则
            .如果真 (等于 (信息框 (“分割完毕！是否查看？”, 36, ), 5))
                执行_M (目录)
            .如果真结束
            
        .如果结束
        
    .如果真结束
    
.如果真结束


.子程序 _提取图标按钮2_被单击, 空白型, , 
.局部变量 字节集, 字节集, , , 
.局部变量 新图标, 文本型, , , 
.局部变量 文件名1, 文本型, , , 
.局部变量 文件名2, 文本型, , , 

赋值 (文件名1, 打开文件对话框_M (“图标文件|*.ico”))
.如果真 (不等于 (文件名1, “”))
    赋值 (文件名2, 保存文件对话框_M (“图标文件|*.ico”))
    .如果真 (不等于 (文件名2, “”))
        赋值 (新图标, 文件名2)
        赋值 (字节集, 读入文件 (文件名1))
        赋值 (字节集, 重建图标 (字节集))
        .如果真 (大于 (取字节集长度 (字节集), 22))
            写到文件 (新图标, 字节集)
            .如果真 (等于 (信息框 (“重新创建图标完毕。是否查看？”, 36, ), 5))
                执行_M (取目录_M (新图标))
            .如果真结束
            
        .如果真结束
        
    .如果真结束
    
.如果真结束


.子程序 _提取图标按钮1_被单击, 空白型, , 
.局部变量 目录, 文本型, , , 
.局部变量 目录2, 文本型, , , 
.局部变量 文件名, 文本型, , , 
.局部变量 图标数据, 字节集, , , 

赋值 (目录, 浏览文件夹_M (取窗口句柄 (), “选择保存有图标的文件夹”, , , , , ))
.如果真 (不等于 (目录, “”))
    赋值 (目录2, 浏览文件夹_M (取窗口句柄 (), “选择保存新图标的文件夹”, , , , , 真))
    .如果真 (不等于 (目录2, “”))
        .如果真 (不等于 (取文本右边 (目录, 1), “\”))
            赋值 (目录, 相加 (目录, “\”))
        .如果真结束
        .如果真 (不等于 (取文本右边 (目录2, 1), “\”))
            赋值 (目录2, 相加 (目录2, “\”))
        .如果真结束
        置等待鼠标 ()
        赋值 (文件名, 寻找文件 (相加 (目录, “*.ico”), ))
        .判断循环首 (不等于 (文件名, “”))
            赋值 (图标数据, 重建图标 (读入文件 (相加 (目录, 文件名))))
            .如果真 (大于 (取字节集长度 (图标数据), 22))
                写到文件 (相加 (目录2, 文件名), 图标数据)
            .如果真结束
            赋值 (文件名, 寻找文件 ())
            处理事件 ()
        .判断循环尾 ()
        恢复鼠标 ()
        .如果真 (等于 (信息框 (“重新创建图标完毕。是否查看？”, 36, ), 5))
            执行_M (目录2)
        .如果真结束
         ' 本源码来自易语言资源网(www.5A5X.com)
    .如果真结束
    
.如果真结束


.子程序 _调节器2_调节钮被按下, 空白型, , 
.参数 按钮值, 整数型, , 

.局部变量 i, 空白型, , , 

.如果真 (大于 (.宽度, .宽度))
    赋值 (i, 相加 (.左边, 相乘 (按钮值, .宽度)))
    .如果 (大于 (i, 0))
        赋值 (.左边, 0)
    .否则
        .如果 (小于 (i, 相减 (.宽度, .宽度)))
            赋值 (.左边, 相减 (.宽度, .宽度))
        .否则
            赋值 (.左边, i)
        .如果结束
        
    .如果结束
    
.如果真结束


.子程序 _图标画板_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (大于 (集_图标数, 0))
    赋值 (.内容, 到文本 (取绝对值 (取整 (相除 (相加 (横向位置, 32), 32)))))
.如果真结束


.子程序 _按钮2_被单击, 空白型, , 
.局部变量 前缀, 文本型, , , 
.局部变量 目录, 文本型, , , 
.局部变量 文件名, 文本型, , , 
.局部变量 i, 空白型, , , 

赋值 (目录, 浏览文件夹_M ())
.如果真 (不等于 (目录, “”))
    .如果真 (输入框 (“文件名前缀”, , , 前缀, ))
        .如果真 (不等于 (取文本右边 (目录, 1), “\”))
            赋值 (目录, 相加 (目录, “\”))
        .如果真结束
        赋值 (文件名, 寻找文件 (相加 (目录, “*.ico”), #存档文件))
        
        .判断循环首 (不等于 (文件名, “”))
            赋值 (i, 相加 (i, 1))
            文件操作_M (相加 (目录, 文件名), 相加 (目录, 前缀, 到文本 (i), “.ico”), 4, #文件操作标识_冲突改名)
            赋值 (文件名, 寻找文件 ())
        .判断循环尾 ()
        执行_M (目录)
    .如果真结束
    
.如果真结束


.子程序 _组合框2_列表项被选择, 空白型, , 
.局部变量 选中目录, 文本型, , , 
.局部变量 文件名, 文本型, , , 
.局部变量 后缀, 文本型, , , 
.局部变量 图片句柄, 空白型, , , 
.局部变量 i, 空白型, , , 
.局部变量 文件属性, 空白型, , , 
.局部变量 组合框, 组合框类, , , 
.局部变量 a, 空白型, , , 

.如果真 (等于 (目录是否存在_M (.内容), 假))
    返回 ()
.如果真结束

超级列表框.允许重画 ()
处理事件 ()
超级列表框.禁止重画 ()
赋值 (.标题, “查找图片……请稍等……”)
超级列表框.新建图片组 (24, 24, 24, 超级列表框.取背景颜色 ())
超级列表框.全部删除 ()
赋值 (选中目录, .内容)
.如果真 (不等于 (取文本右边 (选中目录, 1), “\”))
    赋值 (选中目录, 相加 (选中目录, “\”))
.如果真结束
赋值 (文件名, 寻找文件 (相加 (选中目录, “*.*”), 相加 (#子目录, #存档文件)))
.判断循环首 (不等于 (文件名, “”))
    处理事件 ()
    .如果真 (并且 (不等于 (文件名, “.”), 不等于 (文件名, “..”)))
        赋值 (文件属性, 取文件属性 (相加 (选中目录, 文件名)))
        .如果真 (并且 (等于 (位与 (文件属性, #隐藏文件), 0), 等于 (取后缀_M (文件名), “”)))
            赋值 (图片句柄, 取文件图标_M (相加 (选中目录, 文件名)))
            赋值 (i, 超级列表框.添加图片组图片 (图片句柄))
            超级列表框.插入表项 (文件名, i, , , 1)
            清除图标_ (图片句柄)
        .如果真结束
        
    .如果真结束
    赋值 (文件名, 寻找文件 (#子目录))
.判断循环尾 ()

赋值 (文件名, 寻找文件 (相加 (选中目录, “*.*”), 39))

.判断循环首 (不等于 (文件名, “”))
    处理事件 ()
    .如果真 (并且 (不等于 (文件名, “.”), 不等于 (文件名, “..”)))
        赋值 (后缀, 取后缀_M (文件名))
        .如果真 (或者 (等于 (后缀, “.bmp”), 等于 (后缀, “.jpg”), 等于 (后缀, “.jpeg”), 等于 (后缀, “.gif”), 等于 (后缀, “.png”), 等于 (后缀, “.tiff”)))
            赋值 (图片句柄, 取文件图标_M (相加 (选中目录, 文件名)))
            赋值 (i, 超级列表框.添加图片组图片 (图片句柄))
            超级列表框.插入表项 (文件名, i)
            清除图标_ (图片句柄)
            赋值 (a, 1)
        .如果真结束
        
    .如果真结束
    赋值 (文件名, 寻找文件 ())
.判断循环尾 ()
超级列表框.允许重画 ()
.如果真 (等于 (a, 1))
    组合框.置句柄 (取窗口句柄 ())
    .如果真 (并且 (等于 (组合框.查找项目 (.内容), -1), 小于 (取项目数 (), 20)))
        .加入项目 (.内容, )
    .如果真结束
    
.如果真结束
赋值 (.标题, “就绪”)


.子程序 _按钮1_被单击, 空白型, , 
.局部变量 选中目录, 文本型, , , 
.局部变量 文件名, 文本型, , , 

赋值 (选中目录, .内容)
.如果真 (大于 (取文本长度 (选中目录), 3))
    赋值 (.内容, 取目录_M (选中目录))
    _组合框2_列表项被选择 ()
.如果真结束


.子程序 _按钮3_被单击, 空白型, , 
.如果真 (文件是否存在 (旧文件))
    执行_M (“explorer.exe”, 相加 (“/select,”, 旧文件))
.如果真结束
' 本源码来自易语言资源网(www.5A5X.com)

.子程序 _打开按钮2_被单击, 空白型, , 
执行_M (.内容)

.子程序 _浏览按钮1_被单击, 空白型, , 
赋值 (.内容, 浏览文件夹_M (取窗口句柄 (), , , , 假, 真, 真, ))

.子程序 _按钮4_被单击, 空白型, , 
赋值 (.内容, 浏览文件夹_M (取窗口句柄 (), “请选择图片目录”, , , , 真))
_组合框2_列表项被选择 ()

.程序集 程序集1, , , 

.子程序 填空, 整数型, , 
.参数 k, 空白型, , 

返回 (相乘 (k, 四舍五入 (相除 (k, 32), ), 4))
 ' 本源码来自易语言资源网(www.5A5X.com)

.子程序 重建位图信息, 字节集, , 
.参数 k, 空白型, , 
.参数 位深度, 短整数型, , 
.参数 位图大小, 空白型, , 

.局部变量 位图信息, 位图信息2, , , 
.局部变量 字节集, 字节集, , , 

赋值 (位图信息.结构, 40)
赋值 (位图信息.宽度, k)
赋值 (位图信息.高度, 相乘 (k, 2))
赋值 (位图信息.位面数, 1)
赋值 (位图信息.位深度, 位深度)
赋值 (位图信息.位图大小, 位图大小)
赋值 (字节集, 取空白字节集 (40))
拷贝内存_位图 (字节集, 位图信息, 40)
返回 (字节集)

.子程序 构建图标, 字节集, , 
.参数 图标数据, 图标数据, 数组, 
.参数 是否图标, 逻辑型, 可空, 

.局部变量 数据头, 字节集, , , 
.局部变量 数据头1, 字节集, , , 
.局部变量 图标信息, 图标信息, , , 
.局部变量 i, 空白型, , , 
.局部变量 数据, 字节集, , , 
.局部变量 数据1, 字节集, , , 
.局部变量 数据2, 字节集, , , 
.局部变量 数据3, 字节集, , , 
.局部变量 n, 空白型, , , 

赋值 (n, 取数组成员数 (图标数据))
赋值 (数据头, 相加 ({ 0, 0, 1, 0 }, 到字节集 (到字节 (n)), { 0 }))
.计次循环首 (n, i)
    赋值 (图标信息.宽度, 图标数据 [i], 宽度)
    赋值 (图标信息.高度, 图标数据 [i], 宽度)
    赋值 (图标信息.颜色数, 0)
    赋值 (图标信息.位面数, 1)
    赋值 (图标信息.位深度, 图标数据 [i], 位深度)
    赋值 (图标信息.位图大小, 图标数据 [i], 大小)
    .如果 (等于 (i, 1))
        赋值 (图标信息.数据位置, 相加 (相乘 (n, 16), 6))
    .否则
        赋值 (图标信息.数据位置, 相加 (图标数据 [相减 (i, 1)].大小, 图标信息.数据位置))
    .如果结束
    赋值 (数据头1, 取空白字节集 (16))
    拷贝内存_图标 (数据头1, 图标信息, 16)
    
    .判断开始 (是否图标)
        赋值 (数据, 相加 (数据, 图标数据 [i], 位图数据))
        
    .判断 (大于 (图标信息.宽度, 0))
        .如果真 (小于 (取字节集长度 (图标数据 [i], 位图数据), 54))
            赋值 (图标数据 [i], 位图数据, 相加 (图标数据 [i], 位图数据, 取空白字节集 (相减 (图标数据 [i], 大小, 取字节集长度 (图标数据 [i], 位图数据)))))
        .如果真结束
        赋值 (数据1, 取字节集右边 (图标数据 [i], 位图数据, 相减 (取字节集长度 (图标数据 [i], 位图数据), 54)))
        赋值 (数据2, 重建位图信息 (图标数据 [i], 宽度, 图标数据 [i], 位深度, 相减 (图标数据 [i], 大小, 填空 (图标数据 [i], 宽度))))
        赋值 (数据1, 相加 (数据2, 数据1))
        赋值 (数据1, 相加 (数据1, 取空白字节集 (相减 (图标数据 [i], 大小, 取字节集长度 (数据1)))))
        赋值 (数据, 相加 (数据, 数据1))
        
    .默认
        赋值 (数据头1 [1], 到字节 (13))
        赋值 (数据1, 相加 (取字节集左边 (数据头1, 4), 到字节集 (“IHDR”)))
        赋值 (数据头1, 相加 (数据1, 取字节集右边 (数据头1, 8)))
        赋值 (数据, 相加 (数据, 图标数据 [i], 位图数据))
    .判断结束
    
    赋值 (数据头, 相加 (数据头, 数据头1))
.计次循环尾 ()
赋值 (数据, 相加 (数据头, 数据))
返回 (数据)

.子程序 重建图标, 字节集, , 
.参数 字节集, 字节集, , 

.局部变量 图标头, 字节集, , , 
.局部变量 图标头1, 字节集, , , 
.局部变量 图标头2, 字节集, , , 
.局部变量 数据, 字节集, , , 
.局部变量 图标数, 空白型, , , 
.局部变量 图标头长度, 空白型, , , 
.局部变量 数据长, 空白型, , , 
.局部变量 i, 空白型, , , 
.局部变量 开始位置, 空白型, , , 
.局部变量 位深度, 空白型, , , 
.局部变量 图标宽度, 字节型, , , 
.局部变量 图标1, 空白型, , , 
.局部变量 文件, 文本型, , , 
.局部变量 长度, 空白型, , , 
.局部变量 位图句柄, 空白型, , , 
.局部变量 图标头组, 字节集, , "0", 
.局部变量 图标数据, 字节集, , , 
.局部变量 长度组, 整数型, , "0", 
.局部变量 位置1, 整数型, , , 

赋值 (文件, 取临时文件路径 ())
.如果真 (不等于 (取文本右边 (文件, 1), “\”))
    赋值 (文件, 相加 (文件, “\”))
.如果真结束
赋值 (文件, 相加 (文件, “tmp.ico”))
赋值 (图标数, 取字节集数据 (字节集, 2, 5))
赋值 (图标头长度, 取字节集数据 (字节集, 3, 19))
赋值 (开始位置, 相加 (图标头长度, 1))
赋值 (图标头, { 0, 0, 1, 0, 1, 0 })
.计次循环首 (图标数, i)
    赋值 (位深度, 取字节集数据 (字节集, 1, 相减 (相乘 (i, 16), 3)))
    赋值 (图标头1, 取字节集中间 (字节集, 相减 (相乘 (i, 16), 9), 12))
    赋值 (图标宽度, 取字节集数据 (字节集, 1, 相减 (相乘 (i, 16), 9)))
    赋值 (数据长, 取字节集数据 (字节集, 3, 相减 (相乘 (i, 16), 1)))
    赋值 (数据, 取字节集中间 (字节集, 开始位置, 数据长))
    赋值 (图标头2, 相加 (图标头, 图标头1, { 22, 0, 0, 0 }))
    写到文件 (文件, 相加 (图标头2, 数据))
    赋值 (图标1, 载入图象_M (文件, 1))
    .如果真 (不等于 (图标1, 0))
        加入成员 (图标头组, 图标头1)
        赋值 (图标数据, 相加 (图标数据, 数据))
        加入成员 (长度组, 数据长)
    .如果真结束
    删除文件 (文件)
    赋值 (开始位置, 相加 (开始位置, 数据长))
    清除图标_ (图标1)
.计次循环尾 ()
赋值 (图标头, 相加 ({ 0, 0, 1, 0 }, 到字节集 (到字节 (取数组成员数 (长度组))), { 0 }))
.计次循环首 (取数组成员数 (长度组), i)
    .如果 (等于 (i, 1))
        赋值 (位置1, 相加 (相乘 (取数组成员数 (长度组), 16), 6))
        赋值 (图标头, 相加 (图标头, 图标头组 [i], 到字节集 (位置1)))
    .否则
        赋值 (位置1, 相加 (长度组 [相减 (i, 1)], 位置1))
        赋值 (图标头, 相加 (图标头, 图标头组 [i], 到字节集 (位置1)))
    .如果结束
    ' 本源码来自易语言资源网(www.5A5X.com)
.计次循环尾 ()
返回 (相加 (图标头, 图标数据))


.类模块 Gdi图像, , , 

.子程序 销毁_, 空白型, , 销毁图像


.子程序 是否已创建, 逻辑型, , 


.子程序 取错误代码, 整数型, , 


.子程序 取图像, 整数型, , 取内定的图像


.子程序 置图像, 空白型, , 
.参数 Image, 整数型, , 



.子程序 创建位图_自图形, 逻辑型, , 
.参数 width, 整数型, , 
.参数 height, 整数型, , 
.参数 target, Gdi图形, , 以此图形的分辨率初始化位图。 



.子程序 载入图像文件, 逻辑型, , 
.参数 文件名, 文本型, , 



.子程序 载入图像字节集, 逻辑型, , 
.参数 图像字节集, 字节集, , 



.子程序 取回字节集, 字节集, , 
.参数 转换格式, 整数型, 可空, 转换后的图片格式。0.bmp；1.jpg；2.gif；3.tiff；4.png；默认bmp
.参数 JPG质量, 整数型, 可空, 
.参数 填充底色, 整数型, 可空, 如果为空以下参数省略.
.参数 透明度, 整数型, 可空, 
.参数 保留原像素格式, 逻辑型, 可空, 填充底色时会重建一个图像,如省略为32位,如果为真低于16位会转换失败



.子程序 取图像类型, 整数型, , 以 #图像类型_ 开头的常量 失败返回-1


.子程序 载入位图文件, 逻辑型, , 
.参数 位图, 文本型, , 



.子程序 取图像宽度, 整数型, , 失败返回-1


.子程序 取图像高度, 整数型, , 失败返回-1


.子程序 载入位图句柄, 逻辑型, , 
.参数 位图句柄, 整数型, , 要从其创建 Bitmap 对象的 GDI 位图句柄。 
.参数 hpal, 整数型, , 如果在 hBitmap 参数中指定的位图不是与设备无关的位图 (DIB)，则为用于定义位图颜色的 GDI 调色板的句柄。



.子程序 载入图标句柄, 逻辑型, , 
.参数 hicon, 整数型, , 



.子程序 取位图句柄_RGB, 整数型, , 需要调用 DeleteObject 以释放 hBitmap。
.参数 透明颜色, 整数型, 可空, 指定背景色。如果位图完全不透明，则忽略此参数。
.参数 透明度, 整数型, 可空, 不透明255



.子程序 取位图句柄_ARGB, 整数型, , 需要调用 DeleteObject 以释放 hBitmap。
.参数 ARGB颜色, 整数型, 可空, 指定背景色。如果位图完全不透明，则忽略此参数。



.子程序 取图标句柄, 整数型, , 


.子程序 置位图点, 逻辑型, , 
.参数 x, 整数型, , 
.参数 y, 整数型, , 
.参数 颜色, 整数型, , RGB颜色
.参数 透明度, 整数型, 可空, 空为255



.子程序 取位图点, 整数型, , ARGB颜色 失败返回-1
.参数 x, 整数型, , 
.参数 y, 整数型, , 



.子程序 置分辨率, 逻辑型, , 
.参数 xdpi, 小数型, , Bitmap 的水平分辨率，以每英寸的点数为单位。 
.参数 ydpi, 小数型, , Bitmap 的垂直分辨率，以每英寸的点数为单位。 



.子程序 取图像原始格式, 字节集, , 失败返回{}


.子程序 保存到文件, 逻辑型, , 
.参数 文件名, 文本型, , 如果转换为bmp，原像素格式>32需要转换，否则失败。
.参数 转换格式, 整数型, 可空, 转换后的图片格式。0.bmp；1.jpg；2.gif；3.tiff；4.png
.参数 JPG质量, 整数型, 可空, 
.参数 填充底色, 整数型, 可空, 如果为空以下参数省略.
.参数 透明度, 整数型, 可空, 
.参数 保留原像素格式, 逻辑型, 可空, 填充底色时会重建一个图像,如省略为32位,如果为真低于16位会转换失败



.子程序 取图像高度宽度, 逻辑型, , 获取此图像的宽度和高度。
.参数 图像宽度, 整数型, 参考, 
.参数 图像高度, 整数型, 参考, 



.子程序 取图像边界矩形, 逻辑型, , 以指定的单位获取此 Image 对象的边框。
.参数 srcRect, 矩形F, , 提供RectF变量取返回值
.参数 srcUnit, 整数型, 参考, 提供整数型变量取返回值,指定该矩形的单位。#单位_XXXX



.子程序 取水平分辨率, 整数型, , 获取此 Image 对象的水平分辨率（以“像素/英寸”为单位）。


.子程序 取垂直分辨率, 整数型, , 获取此 Image 对象的垂直分辨率（以“像素/英寸”为单位）。


.子程序 取属性标记, 整数型, , 获取此 Image 对象的属性标记。


.子程序 取像素格式, 整数型, , 指定图像中每个像素的颜色数据的格式。#像素格式_XXXX


.子程序 取图像编码器信息, 逻辑型, , 
.参数 encoders, 编码器信息, 数组, 



.子程序 取图像编码器参数, 整数型, , 
.参数 图像格式, 整数型, , 0.bmp；1.jpg；2.gif；3.tiff；4.png
.参数 buffer, 未知类型0x4102477F, 数组, 



.子程序 复制, 整数型, , 


.子程序 缩放图像, 整数型, , 返回新图像 失败返回-1
.参数 宽度, 小数型, , 
.参数 高度, 小数型, , 
.参数 替换源图, 逻辑型, 可空, 
.参数 插值, 整数型, 可空, 严重影响速度,常量不明(0~5)?



.子程序 创建缩略图, 整数型, , 返回新图像 失败返回-1(速度稍快,失真)
.参数 宽度, 整数型, , 
.参数 高度, 整数型, , 
.参数 替换源图, 逻辑型, 可空, 



.子程序 翻转, 逻辑型, , 
.参数 方式, 整数型, , 1,顺时针90度 2,180度 3,逆时针90度 4,水平 5,逆时针90度+垂直  6,垂直 7.顺时针90度+垂直



.子程序 取图元数据大小, 逻辑型, , 
.参数 图元数据大小, 整数型, 参考, 
.参数 图元数, 整数型, 参考, 



.子程序 取图元ID列表, 逻辑型, , 
.参数 图元ID数组, 整数型, 参考 数组, 



.子程序 取图元, 图元数据, , 
.参数 图元ID, 整数型, , 



.子程序 转换像素格式, 逻辑型, , 
.参数 像素格式, 整数型, , 



.子程序 取帧延时数组, 整数型, , 返回帧数
.参数 图元, 图元数据, , 
.参数 帧延时数组, 整数型, 数组, 



.子程序 取帧数, 整数型, , 失败返回-1


.子程序 取GUID列表, 逻辑型, , 
.参数 GUID, GUID, 参考 数组, 



.子程序 置活动帧, 逻辑型, , 
.参数 帧, 整数型, , 从0开始
.参数 图像类型, 整数型, 可空, 0.gif；1.tiff



.类模块 Gdi图形, , , 

.子程序 取错误代码, 整数型, , 


.子程序 是否创建, 逻辑型, , 


.子程序 置图形, 空白型, , 
.参数 图形, 整数型, , 



.子程序 创建_自图像, 逻辑型, , 
.参数 图像, Gdi图像, , 



.子程序 创建_自窗口, 逻辑型, , 成功返回0,用 取错误描述() 来获取错误信息
.参数 窗口句柄, 整数型, , 



.子程序 创建_自场景, 逻辑型, , 
.参数 场景句柄, 整数型, , 



.子程序 取图形, 整数型, , 


.子程序 画曲线, 逻辑型, , 绘制经过一组指定的 Point 结构的基数样条。
.参数 画笔, Gdi画笔, , 线条画笔
.参数 点数组, PointF, 数组, 点数组,
.参数 点数组成员数, 整数型, 可空, 点数组成员数
.参数 开始位置, 整数型, 可空, 点数组中,开始绘制的点位置,从0开始计算
.参数 结束位置, 整数型, 可空, 点数组中,结束绘制的点位置,
.参数 张力, 小数型, 可空, 默认0.5



.子程序 画直线组, 逻辑型, , 成功返回0,绘制一系列连接一组 Point 结构的线段。 
.参数 画笔, Gdi画笔, , 
.参数 点数组, PointF, 数组, 



.子程序 画直线, 逻辑型, , 绘制一条连接由坐标对指定的两个点的线条。 
.参数 画笔, Gdi画笔, , 
.参数 x1, 小数型, , 
.参数 y1, 小数型, , 
.参数 x2, 小数型, , 
.参数 y2, 小数型, , 



.子程序 置呈现模式, 逻辑型, , 
.参数 呈现模式, 整数型, , 



.子程序 取呈现模式, 整数型, , 


.子程序 置文本呈现模式, 逻辑型, , 
.参数 TextRenderingHint, 整数型, , 



.子程序 取文本呈现模式, 整数型, , 


.子程序 画文本, 逻辑型, , 
.参数 文本, 文本型, , 
.参数 x, 小数型, , 
.参数 y, 小数型, , 
.参数 字体, Gdi字体, , 
.参数 画刷, Gdi画刷, , 



.子程序 取场景句柄, 整数型, , 取回HDC,不用后请释放设备场景句柄


.子程序 释放场景, 逻辑型, , 
.参数 场景句柄, 整数型, , 



.子程序 填充矩形, 逻辑型, , 
.参数 画刷, Gdi画刷, , 
.参数 x, 小数型, , 
.参数 y, 小数型, , 
.参数 width, 小数型, , 
.参数 height, 小数型, , 



.子程序 清除颜色, 逻辑型, , 清除整个绘图面并以指定背景色填充。 
.参数 RGB颜色, 整数型, , 
.参数 透明度, 整数型, , 



.子程序 画闭合曲线, 逻辑型, , 
.参数 画笔, Gdi画笔, , 
.参数 点数组, PointF, 数组, 
.参数 count, 整数型, 可空, 
.参数 tension, 小数型, 可空, 



.子程序 画圆弧, 逻辑型, , 
.参数 画笔, Gdi画笔, , 
.参数 x, 小数型, , 
.参数 y, 小数型, , 
.参数 width, 小数型, , 
.参数 height, 小数型, , 
.参数 startAngle, 小数型, , 
.参数 sweepAngle, 小数型, , 



.子程序 画贝赛尔曲线, 逻辑型, , 
.参数 画笔, Gdi画笔, , 
.参数 x1, 小数型, , 
.参数 y1, 小数型, , 
.参数 x2, 小数型, , 
.参数 y2, 小数型, , 
.参数 x3, 小数型, , 
.参数 y3, 小数型, , 
.参数 x4, 小数型, , 
.参数 y4, 小数型, , 



.子程序 画贝赛尔曲线组, 逻辑型, , 
.参数 画笔, Gdi画笔, , 
.参数 点数组, PointF, 数组, 



.子程序 画矩形, 逻辑型, , 
.参数 画笔, Gdi画笔, , 
.参数 x, 小数型, , 
.参数 y, 小数型, , 
.参数 width, 小数型, , 
.参数 height, 小数型, , 



.子程序 画矩形组, 逻辑型, , 
.参数 画笔, Gdi画笔, , 
.参数 矩形数组, 矩形F, 数组, 



.子程序 画椭圆, 逻辑型, , 
.参数 画笔, Gdi画笔, , 
.参数 x, 小数型, , 
.参数 y, 小数型, , 
.参数 width, 小数型, , 
.参数 height, 小数型, , 



.子程序 画圆饼, 逻辑型, , 
.参数 画笔, Gdi画笔, , 
.参数 x, 小数型, , 
.参数 y, 小数型, , 
.参数 width, 小数型, , 
.参数 height, 小数型, , 
.参数 startAngle, 小数型, , 
.参数 sweepAngle, 小数型, , 



.子程序 画多边形, 逻辑型, , 
.参数 画笔, Gdi画笔, , 
.参数 点数组, PointF, 数组, 



.子程序 填充矩形组, 逻辑型, , 
.参数 画刷, Gdi画刷, , 
.参数 矩形组, 矩形F, 数组, 



.子程序 填充多边形, 逻辑型, , 
.参数 画刷, Gdi画刷, , 
.参数 点数组, PointF, 数组, 
.参数 填充模式, 整数型, , 



.子程序 填充椭圆, 逻辑型, , 
.参数 画刷, Gdi画刷, , 
.参数 x, 小数型, , 
.参数 y, 小数型, , 
.参数 width, 小数型, , 
.参数 height, 小数型, , 



.子程序 填充圆饼, 逻辑型, , 
.参数 画刷, Gdi画刷, , 
.参数 x, 小数型, , 
.参数 y, 小数型, , 
.参数 width, 小数型, , 
.参数 height, 小数型, , 
.参数 startAngle, 小数型, , 
.参数 sweepAngle, 小数型, , 



.子程序 填充闭合曲线, 逻辑型, , 
.参数 画刷, Gdi画刷, , 
.参数 点数组, PointF, 数组, 
.参数 张力, 小数型, 可空, 默认 0.5
.参数 填充模式, 整数型, 可空, 默认 #填充模式_交替



.子程序 画路径, 逻辑型, , 
.参数 画刷, Gdi画刷, , 
.参数 路径, Gdi路径, , 



.子程序 填充路径, 逻辑型, , 
.参数 画刷, Gdi画刷, , 
.参数 路径, Gdi路径, , 



.子程序 填充区域, 逻辑型, , 
.参数 画刷, Gdi画刷, , 
.参数 区域, Gdi区域, , 



.子程序 画图像, 逻辑型, , 画为原始大小图像
.参数 图像, Gdi图像, , 
.参数 x, 小数型, , 
.参数 y, 小数型, , 



.子程序 画图像_缩放, 逻辑型, , 画为宽高可变的矩形
.参数 图像, Gdi图像, , 
.参数 x, 小数型, , 
.参数 y, 小数型, , 
.参数 width, 小数型, , 
.参数 height, 小数型, , 



.子程序 画图像_扭曲, 逻辑型, , 画为一个平行四边形。
.参数 图像, Gdi图像, , 
.参数 左上角x, 小数型, , 图片左上角画出位置
.参数 左上角y, 小数型, , 
.参数 右上角x, 小数型, , 图片右上角画出位置
.参数 右上角y, 小数型, , 
.参数 左下角x, 小数型, , 图片左下角画出位置
.参数 左下角y, 小数型, , 



.子程序 画图像_局部, 逻辑型, , 把图像的一部分画出为矩形
.参数 图像, Gdi图像, , 
.参数 画出位置x, 小数型, , 
.参数 画出位置y, 小数型, , 
.参数 图像局部起点x, 小数型, , 
.参数 图像局部起点y, 小数型, , 
.参数 图像局部宽度, 小数型, , 
.参数 图像局部高度, 小数型, , 
.参数 图像单位, 整数型, , ,默认 #单位_像素



.子程序 置剪辑区域_自图形, 逻辑型, , 将此 图形 的剪辑区域设置为指定 图形 的 剪辑区域 属性。
.参数 图形, Gdi图形, , 从该对象中获取新剪辑区域。
.参数 合并模式, 整数型, 可空, 默认:  #合并模式_替代



.子程序 置剪辑区域_自矩形, 逻辑型, , 将此 图形 的剪辑区域设置为指定的矩形。
.参数 x, 小数型, , 表示新的剪辑区域x
.参数 y, 小数型, , 表示新的剪辑区域y
.参数 width, 小数型, , 表示新的剪辑区域宽
.参数 height, 小数型, , 表示新的剪辑区域高
.参数 合并模式, 整数型, 可空, 默认:  #合并模式_替代



.子程序 置剪辑区域_自路径, 逻辑型, , 将此 图形 的剪辑区域设置为指定的 路径。
.参数 路径, Gdi路径, , 表示新的剪辑区域。
.参数 合并模式, 整数型, 可空, 默认:  #合并模式_替代



.子程序 置剪辑区域_自区域, 逻辑型, , 将此 图形 的剪辑区域设置为指定的 区域。
.参数 区域句柄, 整数型, , 表示新的剪辑区域
.参数 合并模式, 整数型, 可空, 默认:  #合并模式_替代



.子程序 置剪辑区域_自hRgn, 逻辑型, , 将此 图形 的剪辑区域设置为指定的 hRgn
.参数 hRgn, 整数型, , 表示新的剪辑区域
.参数 合并模式, 整数型, 可空, 默认:  #合并模式_替代



.子程序 重置剪辑区域, 逻辑型, , 将此 图形 的剪辑区域重置为无限区域。


.子程序 平移剪辑区域, 逻辑型, , 将此 图形 的剪辑区域沿水平方向和垂直方向平移指定的量。
.参数 dx, 小数型, , 
.参数 dy, 小数型, , 



.子程序 取剪辑区域, 整数型, , 


.子程序 取剪辑区域矩形边界, 矩形F, , 


.子程序 剪辑区域是否为空, 逻辑型, , 


.子程序 取可见剪辑区域矩形边界, 矩形F, , 获取或设置此 Graphics 对象的可见剪辑区域的边框。


.子程序 可见剪辑区域是否为空, 逻辑型, , 获取一个值，该值指示此 Graphics 对象的可见剪辑区域是否为空。


.子程序 是否可见_点, 逻辑型, , 
.参数 x, 小数型, , 
.参数 y, 小数型, , 



.子程序 是否可见_矩形, 逻辑型, , 
.参数 x, 小数型, , 
.参数 y, 小数型, , 
.参数 width, 小数型, , 
.参数 height, 小数型, , 



.子程序 变形_置矩阵, 逻辑型, , 
.参数 矩阵句柄, 整数型, , 



.子程序 变形_取矩阵, 整数型, , 


.子程序 变形_重置, 逻辑型, , 


.子程序 变形_平移, 逻辑型, , 
.参数 dx, 小数型, , 
.参数 dy, 小数型, , 
.参数 order, 整数型, 可空, 默认 #矩阵顺序_预先计算



.子程序 变形_缩放, 逻辑型, , 
.参数 sx, 小数型, , 
.参数 sy, 小数型, , 
.参数 order, 整数型, 可空, 默认 #矩阵顺序_预先计算



.子程序 变形_旋转, 逻辑型, , 
.参数 角度, 小数型, , 
.参数 order, 整数型, 可空, 默认 #矩阵顺序_预先计算



.子程序 变形_相乘, 逻辑型, , 
.参数 矩阵, Gdi矩阵, , 
.参数 order, 整数型, 可空, 



.子程序 取水平分辨率, 整数型, , 


.子程序 取垂直分辨率, 整数型, , 


.类模块 Gdi画笔, , , 

.子程序 是否已创建, 逻辑型, , 


.子程序 取错误代码, 整数型, , 


.子程序 创建_自RGB颜色, 逻辑型, , 
.参数 RGB颜色, 整数型, , 
.参数 宽度, 小数型, , 



.子程序 创建_自ARGB颜色, 逻辑型, , 
.参数 ARGB颜色, 整数型, , 
.参数 宽度, 小数型, , 



.子程序 创建_自画刷, 逻辑型, , 
.参数 画刷, Gdi画刷, , 
.参数 宽度, 小数型, , 



.子程序 复制画笔, 逻辑型, , 
.参数 复制的画笔, Gdi画刷, 参考, 



.子程序 取画笔, 整数型, , 


.子程序 置画笔, 空白型, , 
.参数 画笔句柄, 整数型, , 



.子程序 置画笔宽度, 整数型, , 
.参数 画笔宽度, 小数型, , 



.子程序 取画笔宽度, 小数型, , 


.子程序 置线帽, 逻辑型, , 
.参数 起点线帽, 整数型, , 使用 #线帽样式_ 开头的常量
.参数 终点线帽, 整数型, , 使用 #线帽样式_ 开头的常量
.参数 虚线线帽, 整数型, , 使用 #虚线线帽样式_ 开头的常量



.子程序 置起点线帽, 逻辑型, , 
.参数 起点线帽, 整数型, , 使用 #线帽样式_ 开头的常量



.子程序 置终点线帽, 逻辑型, , 
.参数 终点线帽, 整数型, , 使用 #线帽样式_ 开头的常量



.子程序 置虚线线帽, 整数型, , 
.参数 虚线线帽, 整数型, , 使用 #虚线线帽样式_ 开头的常量



.子程序 取起点线帽, 整数型, , 


.子程序 取终点线帽, 整数型, , 


.子程序 取虚线线帽, 整数型, , 


.子程序 置线条联接方式, 逻辑型, , 
.参数 线条联接方式, 整数型, , 以 #线条联接方式_ 开头的常量



.子程序 取线条联接方式, 整数型, , 


.子程序 置斜接长度限制, 逻辑型, , 设置斜接角上联接宽度的限制。 
.参数 miterLimit, 小数型, , 



.子程序 取斜接长度限制, 小数型, , 获取斜接角上联接宽度的限制。 


.子程序 置对齐方式, 逻辑型, , 
.参数 penMode, 整数型, , 以 #画笔对齐方式_ 开头的常量



.子程序 取对齐方式, 整数型, , 


.子程序 取填充类型, 整数型, , 为以 #画笔类型_ 开头的常量


.子程序 置ARGB颜色, 逻辑型, , 
.参数 ARGB颜色, 整数型, , 



.子程序 取ARGB颜色, 整数型, , 


.子程序 置画刷, 逻辑型, , 
.参数 Gdi画刷, 整数型, , 



.子程序 取画刷, 整数型, , 失败返回-1


.子程序 置虚线风格, 逻辑型, , 设置划出的是否虚线
.参数 dashstyle, 整数型, , 以 #虚线风格_ 开头的常量



.子程序 取虚线风格, 整数型, , 


.子程序 置虚线偏移, 逻辑型, , 获取或设置直线的起点到短划线图案起始处的距离。
.参数 offset, 小数型, , 



.子程序 取虚线偏移, 整数型, , 获取或设置直线的起点到短划线图案起始处的距离。


.子程序 置虚线格式, 逻辑型, , 获取或设置自定义的短划线和空白区域的数组。
.参数 dashArray, 小数型, 数组, 



.子程序 取虚线格式, 逻辑型, , 获取或设置自定义的短划线和空白区域的数组。
.参数 dashArray, 小数型, 数组, 
.参数 count, 整数型, , 



.子程序 取虚线格式数, 整数型, , 


.子程序 置复合数组, 逻辑型, , 获取或设置用于指定复合钢笔的值数组。复合钢笔绘制由平行直线和空白区域组成的复合直线。 
.参数 compoundArray, 小数型, 数组, 用于指定复合数组的实数组。该数组中的元素必须按升序排列，不能小于 0，也不能大于 1。



.子程序 取复合数组, 逻辑型, , 获取或设置用于指定复合钢笔的值数组。复合钢笔绘制由平行直线和空白区域组成的复合直线。
.参数 compoundArray, 小数型, 数组, 
.参数 count, 整数型, , 



.子程序 取复合数组数, 整数型, , 


.子程序 变形_置矩阵, 逻辑型, , 
.参数 矩阵, Gdi矩阵, , 



.子程序 变形_取矩阵, Gdi矩阵, , 


.子程序 变形_重置, 逻辑型, , 


.子程序 变形_相乘, 逻辑型, , 
.参数 矩阵, Gdi矩阵, , 
.参数 矩阵顺序, 整数型, 可空, 



.子程序 变形_平移, 逻辑型, , 
.参数 dx, 小数型, , 
.参数 dy, 小数型, , 
.参数 矩阵顺序, 整数型, 可空, 



.子程序 变形_缩放, 逻辑型, , 
.参数 sx, 小数型, , 
.参数 sy, 小数型, , 
.参数 矩阵顺序, 整数型, 可空, 



.子程序 变形_旋转, 逻辑型, , 
.参数 angle, 小数型, , 
.参数 矩阵顺序, 整数型, 可空, 



.类模块 Gdi画刷, , , 

.子程序 是否已创建, 逻辑型, , 


.子程序 取错误代码, 整数型, , 


.子程序 创建_自ARGB颜色, 逻辑型, , 
.参数 ARGB颜色, 整数型, , 要通过 RGB到ARGB() 转换



.子程序 创建_自RGB颜色, 逻辑型, , 
.参数 RGB颜色, 整数型, , 
.参数 透明度, 整数型, 可空, 空为255



.子程序 取画刷, 整数型, , 


.子程序 置画刷, 空白型, , 
.参数 brush, 整数型, , 



.子程序 复制画刷, 整数型, , 失败返回-1 成功返回画刷句柄


.子程序 取画刷类型, 整数型, , 失败返回-1


.子程序 置画刷ARGB颜色, 逻辑型, , 
.参数 ARGB颜色, 整数型, , 



.子程序 置画刷RGB颜色, 逻辑型, , 
.参数 RGB颜色, 整数型, , 
.参数 透明度, 整数型, , 



.子程序 取ARGB颜色, 整数型, ,  失败返回-1


.子程序 创建_阴影画刷, 逻辑型, , 
.参数 阴影风格, 整数型, , 以 #阴影风格_ 开头的常量
.参数 前景ARGB颜色, 整数型, , 要通过 RGB到ARGB() 转换
.参数 背景ARGB颜色, 整数型, , 要通过 RGB到ARGB() 转换



.子程序 取阴影风格, 整数型, ,  失败返回-1


.子程序 取阴影前景色, 整数型, , ARGB颜色 失败返回-1


.子程序 取阴影背景色, 整数型, , ARGB颜色 失败返回-1


.子程序 创建_线性渐变画刷, 逻辑型, , 
.参数 起始点, PointF, , 线性渐变起始点
.参数 终结点, PointF, , 线性渐变终结点
.参数 起始ARGB颜色, 整数型, , 线性渐变起始色
.参数 结束ARGB颜色, 整数型, , 线性渐变结束色



.子程序 创建_线性渐变画刷_自矩形, 逻辑型, , 
.参数 线性渐变界限矩形, 矩形F, , 线性渐变的界限。 
.参数 起始ARGB颜色, 整数型, , 线性渐变起始色
.参数 结束ARGB颜色, 整数型, , 线性渐变结束色
.参数 线性渐变模式, 整数型, , #线性渐变模式_XXXX



.子程序 创建_线性渐变画刷_自矩形角度, 逻辑型, , 
.参数 线性渐变界限矩形, 矩形F, , 线性渐变的界限
.参数 起始ARGB颜色, 整数型, , 线性渐变起始色
.参数 结束ARGB颜色, 整数型, , 线性渐变结束色
.参数 角度, 小数型, , 渐变方向线的角度（从 X 轴以顺时针角度计算）。
.参数 角度缩放, 逻辑型, , 设置为真，指定角度受与此 线性渐变画刷 关联的变换所影响；否则为 假。



.子程序 置线性渐变颜色, 逻辑型, , 
.参数 起始ARGB颜色, 整数型, , 线性渐变起始色
.参数 结束ARGB颜色, 整数型, , 线性渐变结束色



.子程序 取线性渐变颜色, 逻辑型, , 
.参数 起始ARGB颜色, 整数型, 参考, 提供一个整数型变量接受返回数值
.参数 结束ARGB颜色, 整数型, 参考, 提供一个整数型变量接受返回数值



.子程序 取线性渐变矩形, 矩形F, , 


.子程序 置线性渐变灰度校正, 逻辑型, , 
.参数 是否启用灰度校正, 逻辑型, , 设置为真,为该 线性渐变画刷 启用了灰度校正。



.子程序 取线性渐变灰度校正, 逻辑型, , 


.子程序 取线性渐变自定过渡数, 整数型, , 失败返回-1


.子程序 置线性渐变自定过渡, 逻辑型, , 一个 Blend，表示渐变的自定义过渡 ，其中包含混合因子和位置的相应数组。混合因子指定在相应位置处使用的起始色和结束色的百分比。该位置作为沿渐变线的距离的百分比给出。
.参数 自定过渡因子, 小数型, 数组, 
.参数 自定过渡位置, 小数型, 数组, 
.参数 数量, 整数型, , 



.子程序 取线性渐变自定过渡, 逻辑型, , 获取或设置一个 Blend，它指定定义渐变自定义过渡的位置和因子。 
.参数 自定过渡因子, 小数型, 数组, 
.参数 自定过渡位置, 小数型, 数组, 
.参数 数量, 整数型, , 



.子程序 取线性渐变插值颜色数, 整数型, , 失败返回-1


.子程序 置线性渐变插值颜色, 逻辑型, , 一个 ColorBlend，定义多色线性渐变,包含颜色和位置的相应数组。这些位置是介于 0 到 1 之间的值，指定沿定位相应颜色的渐变线的距离的百分比。设置该属性将在沿渐变线的每一位置创建具有一种颜色的多色渐变。设置该属性将使该 线性渐变画刷 以前的所有颜色、位置和过渡设置无效。
.参数 argbs, 整数型, 数组, 
.参数 blendPositions, 小数型, 数组, 
.参数 count, 整数型, , 



.子程序 取线性渐变插值颜色, 逻辑型, , 一个 ColorBlend，定义多色线性渐变,包含颜色和位置的相应数组。这些位置是介于 0 到 1 之间的值，指定沿定位相应颜色的渐变线的距离的百分比。设置该属性将在沿渐变线的每一位置创建具有一种颜色的多色渐变。设置该属性将使该 线性渐变画刷 以前的所有颜色、位置和过渡设置无效。
.参数 argbs, 整数型, 数组, 
.参数 blendPositions, 小数型, 数组, 
.参数 count, 整数型, , 



.子程序 置线性渐变钟形共混, 逻辑型, , 创建基于钟形曲线的渐变过渡过程。 
.参数 focus, 小数型, , 介于 0 到 1 之间的一个值，它指定渐变中心（渐变中只由结束色构成的点）。 
.参数 scale, 小数型, , 介于 0 到 1 之间的一个值，它指定颜色从 focus 过渡的过渡速度。



.子程序 置线性渐变线性共混, 逻辑型, , 创建一个从中心色向两端单个颜色线性过渡的线性渐变过程。
.参数 focus, 小数型, , 介于 0 到 1 之间的一个值，它指定渐变中心（渐变中只由结束色构成的点）。 
.参数 scale, 小数型, , 介于 0 到 1 之间的一个值，它指定颜色从起始色过渡到 focus（结束色）的过渡速度。 



.子程序 置线性渐变环绕模式, 逻辑型, , 
.参数 wrapmode, 整数型, , 以 #环绕模式_ 开头的常量



.子程序 取线性渐变环绕模式, 整数型, , 


.子程序 创建_图像纹理画刷, 逻辑型, , 
.参数 图像, Gdi图像, , 
.参数 wrapmode, 整数型, 可空, #环绕模式_XXXX,指定此 TextureBrush 对象的平铺方式。 #环绕模式_平铺



.子程序 创建_图像纹理画刷_局部, 逻辑型, , 把图像的一部分创建为画刷
.参数 图像, Gdi图像, , 
.参数 环绕模式, 整数型, 可空, #环绕模式_XXXX,指定此 TextureBrush 对象的平铺方式。#环绕模式_平铺
.参数 起点x, 小数型, , 图像局部起点x
.参数 起点y, 小数型, , 图像局部起点y
.参数 width, 小数型, , 图像局部宽度
.参数 height, 小数型, , 图像局部高度



.子程序 置图像纹理环绕模式, 逻辑型, , 
.参数 wrapmode, 整数型, , #环绕模式_XXXX



.子程序 取图像纹理环绕模式, 整数型, , #环绕模式_XXXX ,失败返回-1


.子程序 取图像纹理画刷图像, 整数型, , 成功返回图像,失败返回-1


.子程序 变形_图像纹理_置矩阵, 逻辑型, , 
.参数 矩阵, Gdi矩阵, , 



.子程序 变形_图像纹理_取矩阵, 整数型, , 失败返回-1


.子程序 变形_图像纹理_重置, 逻辑型, , 


.子程序 变形_图像纹理_相乘, 逻辑型, , 
.参数 矩阵, 整数型, , matrix
.参数 矩阵顺序, 整数型, 可空, 



.子程序 变形_图像纹理_平移, 逻辑型, , 
.参数 dx, 小数型, , 
.参数 dy, 小数型, , 
.参数 矩阵顺序, 整数型, 可空, #矩阵顺序_预先计算



.子程序 变形_图像纹理_缩放, 逻辑型, , 
.参数 sx, 小数型, , 
.参数 sy, 小数型, , 
.参数 矩阵顺序, 整数型, 可空, #矩阵顺序_预先计算



.子程序 变形_图像纹理_旋转, 逻辑型, , 
.参数 angle, 小数型, , 
.参数 矩阵顺序, 整数型, 可空, #矩阵顺序_预先计算



.子程序 变形_线性渐变_置矩阵, 逻辑型, , 
.参数 矩阵, Gdi矩阵, , matrix



.子程序 变形_线性渐变_取矩阵, 逻辑型, , 
.参数 矩阵, Gdi矩阵, , matrix



.子程序 变形_线性渐变_重置, 逻辑型, , 


.子程序 变形_线性渐变_相乘, 逻辑型, , 
.参数 矩阵, Gdi矩阵, , 
.参数 矩阵顺序, 整数型, 可空, #矩阵顺序_预先计算



.子程序 变形_线性渐变_平移, 逻辑型, , 
.参数 dx, 小数型, , 
.参数 dy, 小数型, , 
.参数 矩阵顺序, 整数型, 可空, #矩阵顺序_预先计算



.子程序 变形_线性渐变_缩放, 逻辑型, , 
.参数 sx, 小数型, , 
.参数 sy, 小数型, , 
.参数 矩阵顺序, 整数型, 可空, #矩阵顺序_预先计算



.子程序 变形_线性渐变_旋转, 逻辑型, , 
.参数 angle, 小数型, , 
.参数 矩阵顺序, 整数型, 可空, #矩阵顺序_预先计算



.子程序 创建_路径渐变画刷, 逻辑型, , 
.参数 points, PointF, 数组, 
.参数 count, 整数型, , 
.参数 wrapMode, 整数型, 可空, #环绕模式_XXXX,指定此 TextureBrush 对象的平铺方式。#环绕模式_不平铺 



.子程序 创建_路径渐变画刷_自路径, 逻辑型, , 
.参数 路径, Gdi路径, , 



.子程序 置路径渐变中心点颜色_RGB, 逻辑型, , 
.参数 RGB颜色, 整数型, , 
.参数 透明度, 整数型, 可空, 空为255



.子程序 置路径渐变中心点颜色_ARGB, 逻辑型, , 
.参数 ARGB颜色, 整数型, , 



.子程序 取路径渐变中心点颜色, 整数型, , ARGB颜色,失败返回-1


.子程序 变形_路径渐变_取矩阵, 整数型, , 失败返回-1


.子程序 变形_路径渐变_置矩阵, 逻辑型, , 
.参数 matrix, Gdi矩阵, , 



.子程序 变形_路径渐变_重置, 逻辑型, , 


.子程序 变形_路径渐变_相乘, 逻辑型, , 
.参数 matrix, Gdi矩阵, , 
.参数 order, 整数型, 可空, #矩阵顺序_预先计算



.子程序 变形_路径渐变_平移, 逻辑型, , 
.参数 dx, 小数型, , 
.参数 dy, 小数型, , 
.参数 order, 整数型, 可空, #矩阵顺序_预先计算



.子程序 变形_路径渐变_缩放, 逻辑型, , 
.参数 sx, 小数型, , 
.参数 sy, 小数型, , 
.参数 order, 整数型, 可空, #矩阵顺序_预先计算



.子程序 变形_路径渐变_旋转, 逻辑型, , 
.参数 angle, 小数型, , 
.参数 order, 整数型, 可空, #矩阵顺序_预先计算



.子程序 置路径渐变路径, 逻辑型, , 
.参数 路径, Gdi路径, , 



.子程序 取路径渐变路径, 整数型, , 失败返回-1


.子程序 置路径渐变中心点, 逻辑型, , 
.参数 points, PointF, , 



.子程序 取路径渐变中心点, PointF, , 


.子程序 取路径渐变矩形边界, 矩形F, , 


.子程序 置路径渐变环绕模式, 逻辑型, , 
.参数 wrapmode, 整数型, , 



.子程序 取路径渐变环绕模式, 整数型, , 失败返回-1


.类模块 Gdi字体, , , 

.子程序 取错误代码, 整数型, , 


.子程序 是否创建, 逻辑型, , 


.子程序 创建字体, 逻辑型, , 
.参数 字体名称, 文本型, , 字体名称
.参数 字体尺寸, 小数型, , 字体尺寸
.参数 字体风格, 整数型, , 字体风格
.参数 单位, 整数型, , 字体度量单位



.子程序 创建_自场景, 逻辑型, , 
.参数 场景, 整数型, , 



.子程序 取字体, 整数型, , 


.子程序 置字体, 空白型, , 
.参数 Font, 整数型, , 



.子程序 取字体风格, 整数型, , 


.子程序 取字体尺寸, 整数型, , 


.子程序 取字体单位, 整数型, , 


.子程序 取字体图形高度, 整数型, , 
.参数 图形, Gdi图形, , 



.类模块 Gdi路径, , , 

.子程序 取错误代码, 整数型, , 


.子程序 是否创建, 逻辑型, , 


.子程序 取路径, 整数型, , 


.子程序 置路径, 空白型, , 
.参数 path, 整数型, , 



.子程序 创建, 逻辑型, , 
.参数 填充模式, 整数型, 可空, 以 #填充模式_ 开头的常量, 默认 #填充模式_交替



.子程序 创建2, 逻辑型, , 
.参数 points, PointF, 数组, 
.参数 types, 字节型, 数组, 
.参数 count, 整数型, , 
.参数 填充模式, 整数型, 可空, #填充模式_交替



.子程序 加入直线, 逻辑型, , 
.参数 x1, 小数型, , 
.参数 y1, 小数型, , 
.参数 x2, 小数型, , 
.参数 y2, 小数型, , 



.子程序 加入直线组, 逻辑型, , 
.参数 points, PointF, 数组, 
.参数 count, 整数型, , 



.子程序 加入圆弧, 逻辑型, , 
.参数 x, 小数型, , 
.参数 y, 小数型, , 
.参数 width, 小数型, , 
.参数 height, 小数型, , 
.参数 startAngle, 小数型, , 
.参数 sweepAngle, 小数型, , 



.子程序 加入贝赛尔曲线, 逻辑型, , 
.参数 x1, 小数型, , 
.参数 y1, 小数型, , 
.参数 x2, 小数型, , 
.参数 y2, 小数型, , 
.参数 x3, 小数型, , 
.参数 y3, 小数型, , 
.参数 x4, 小数型, , 
.参数 y4, 小数型, , 



.子程序 加入贝赛尔曲线组, 逻辑型, , 
.参数 points, PointF, 数组, 



.子程序 加入曲线, 逻辑型, , 
.参数 points, PointF, 数组, 
.参数 offset, 整数型, 可空, 
.参数 张力, 小数型, 可空, 默认0.5



.子程序 加入闭合曲线, 逻辑型, , 
.参数 points, PointF, 数组, 
.参数 张力, 小数型, 可空, 默认0.5



.子程序 加入矩形, 逻辑型, , 
.参数 x, 小数型, , 
.参数 y, 小数型, , 
.参数 width, 小数型, , 
.参数 height, 小数型, , 



.子程序 加入矩形组, 逻辑型, , 
.参数 rects, 矩形F, 数组, 



.子程序 加入椭圆, 逻辑型, , 
.参数 x, 小数型, , 
.参数 y, 小数型, , 
.参数 width, 小数型, , 
.参数 height, 小数型, , 



.子程序 加入圆饼, 逻辑型, , 
.参数 x, 小数型, , 
.参数 y, 小数型, , 
.参数 width, 小数型, , 
.参数 height, 小数型, , 
.参数 startAngle, 小数型, , 
.参数 sweepAngle, 小数型, , 



.子程序 加入多边形, 逻辑型, , 
.参数 points, PointF, 数组, 



.子程序 加入路径, 逻辑型, , 
.参数 addingPath, Gdi路径, , 
.参数 connect, 逻辑型, , 指定添加的路径中的第一个图形是否是该路径中最后一个图形的一部分。为 真 指定（如果可能）添加的路径中的第一个图形是该路径中最后一个图形的一部分。为 假 指定添加的路径中的第一个图形与该路径中最后一个图形不同。



.子程序 加入文本, 逻辑型, , 
.参数 文本, 文本型, , 
.参数 x, 整数型, , 
.参数 y, 整数型, , 
.参数 字体名称, 文本型, , 
.参数 style, 整数型, , 
.参数 emSize, 小数型, , 



.子程序 复制到, 逻辑型, , 
.参数 clonePath, Gdi路径, , 



.子程序 重设路径, 逻辑型, , 清空 PathPoints 和 PathTypes 数组并将 FillMode 设置为 Alternate。


.子程序 置填充模式, 逻辑型, , 
.参数 fillmode, 整数型, , #填充模式_XXXX



.子程序 取填充模式, 整数型, , 


.子程序 取点数量, 整数型, , 


.子程序 取路径数据, 逻辑型, , 
.参数 pathData, PathData, , 



.子程序 开始新路径, 逻辑型, , 不闭合当前图形即开始一个新图形。后面添加到该路径的所有点都被添加到此新图形中。 


.子程序 闭合当前路径, 逻辑型, , 闭合当前图形并开始新的图形。如果当前图形包含一系列相互连接的直线和曲线，该方法通过连接一条从终结点到起始点的直线，闭合该环回。


.子程序 闭合所有路径, 逻辑型, , 闭合此路径中所有开放的图形并开始一个新图形。它通过连接一条从图形的终结点到起始点的直线，闭合每一开放的图形。 


.子程序 设置标记, 逻辑型, , 创建路径上的标记，标记可用于分隔该路径的各部分。然后可以使用 NextMarker 方法循环访问路径中的标记。标记用来分隔各组子路径。在路径的两个标记间可含有一个或多个子路径。


.子程序 清除标记, 逻辑型, , 清除此路径的所有标记。 


.子程序 反转路径点顺序, 逻辑型, , 反转此 GraphicsPath 的 PathPoints 数组中各点的顺序。


.子程序 取最终点, 逻辑型, , 获取此 GraphicsPath 的 PathPoints 数组中的最后的点。 
.参数 lastPoint, PointF, 参考, 提供一个PointF变量接受返回值



.子程序 取路径点类型数组, 逻辑型, , 获取 PathPoints 数组中相应点的类型。指定路径中相应点的类型的字节数组。 
.参数 types, 字节型, 参考 数组, 
.参数 count, 整数型, , 



.子程序 取路径点坐标数组, 逻辑型, , 
.参数 points, PointF, 参考 数组, 
.参数 count, 整数型, , 



.子程序 是否在路径内部, 逻辑型, , 指示指定点是否包含在此 GraphicsPath 内，它位于指定的 Graphics 的可见剪辑区域内。
.参数 x, 小数型, , 测试点的 X 坐标。
.参数 y, 小数型, , 测试点的 Y 坐标。
.参数 graphics, Gdi图形, , 要对其测试可见性的 Graphics。



.子程序 是否在路径轮廓, 整数型, , 指示当使用指定的 Pen 和 Graphics 绘制此 GraphicsPath 时，指定点是否包含在后者的轮廓内（下）。 
.参数 x, 小数型, , 测试点的 X 坐标。
.参数 y, 小数型, , 测试点的 Y 坐标。
.参数 pen, Gdi画笔, , 要测试的 Pen。绘制路径边界的画笔粗细
.参数 graphics, Gdi图形, , 要对其测试可见性的 Graphics。



.子程序 平展路径, 逻辑型, , 此 GraphicsPath 对象中的各段曲线转换成相连的线段序列。
.参数 matrix, Gdi矩阵, 可空, 用来在展平前对此 GraphicsPath 进行变形的 Matrix 对象。
.参数 flatness, 小数型, 可空, 指定曲线和其展平的近似直线之间的最大允许误差。值 0.25 是默认值。降低该展平值将增加近似直线中线段的数目。



.子程序 变换路径, 逻辑型, , 
.参数 matrix, Gdi矩阵, , 



.子程序 取路径矩形边界, 逻辑型, , 取得限定此 GraphicsPath 对象的矩形。
.参数 bounds, 矩形F, , 
.参数 matrix, Gdi矩阵, 可空, 
.参数 pen, Gdi画笔, 可空, 



.子程序 扩展路径, 逻辑型, , 在用指定的画笔绘制此路径时，用包含所填充区域的曲线代替此路径。
.参数 pen, Gdi画笔, , 指定路径原始轮廓和此方法创建的新轮廓之间的宽度。 
.参数 matrix, Gdi矩阵, 可空, 指定扩展前应用于路径的变形。
.参数 flatness, 小数型, 可空, 指定曲线展平的值。默认0.25,降低该展平值将增加近似直线中线段的数目。



.子程序 轮廓, 逻辑型, , 
.参数 matrix, Gdi矩阵, 可空, 
.参数 flatness, 小数型, 可空, 



.子程序 扭曲路径, 逻辑型, , 一个 PointF 结构的数组，它们定义由 srcRect 定义的矩形将变形到的平行四边形。该数组可以包含三个或四个元素。如果该数组包含三个元素，则平行四边形的右下角位置的点可从前三个点导出。
.参数 matrix, Gdi矩阵, 可空, 
.参数 points, PointF, 数组, 一个 PointF 结构的数组，它们定义由 srcRect 定义的矩形将变形到的平行四边形。该数组可以包含三个或四个元素。如果该数组包含三个元素，则平行四边形的右下角位置的点可从前三个点导出。
.参数 count, 整数型, , PointF 数组成员数
.参数 srcx, 小数型, , 一个 RectangleF 结构，它表示将变形为 destPoints 定义的平行四边形的矩形。 
.参数 srcy, 小数型, , 同上
.参数 srcwidth, 小数型, , 同上
.参数 srcheight, 小数型, , 同上
.参数 warpMode, 整数型, 可空, 一个 WarpMode 枚举，它指定此扭曲操作是使用透视模式还是双线性模式。 
.参数 flatness, 小数型, 可空, 一个介于 0 到 1 之间的值，它指定如何展平最终路径。



.类模块 Gdi区域, , , 

.子程序 取错误代码, 整数型, , 


.子程序 是否创建, 逻辑型, , 


.子程序 取区域, 整数型, , 


.子程序 置区域, 空白型, , 
.参数 region, 整数型, , 



.子程序 创建_无限区域, 逻辑型, , 创建一个无限大小的区域


.子程序 创建_自矩形, 逻辑型, , 
.参数 rect, 矩形F, , 



.子程序 创建_自路径, 逻辑型, , 
.参数 path, Gdi路径, , 



.子程序 创建_自区域数据, 逻辑型, , 
.参数 regionData, 字节型, 数组, 区域数据数组
.参数 size, 整数型, , 数组大小



.子程序 创建_自区域句柄, 逻辑型, , 
.参数 hRgn, 整数型, , 区域句柄



.子程序 复制到, 逻辑型, , 
.参数 cloneRegion, Gdi区域, , 



.子程序 合并路径, 逻辑型, , 
.参数 path, Gdi路径, , 要合并的路径
.参数 合并模式, 整数型, , 以 #合并模式_ 开头的常量



.子程序 合并矩形, 逻辑型, , 
.参数 rect, 矩形F, , 要合并的矩形
.参数 合并模式, 整数型, , 以 #合并模式_ 开头的常量



.子程序 合并区域, 逻辑型, , 
.参数 region, Gdi区域, , 要合并的区域
.参数 合并模式, 整数型, , 以 #合并模式_ 开头的常量



.子程序 置为无限, 逻辑型, , 将此 区域 初始化为无限大小的内部。


.子程序 置为空, 逻辑型, , 将此 区域 初始化为空内部。


.子程序 平移区域, 逻辑型, , 使此 区域 的坐标偏移指定的量。
.参数 dx, 小数型, , 水平偏移的量。
.参数 dy, 小数型, , 垂直偏移的量。



.子程序 取区域矩形边界, 整数型, , 获取一个表示矩形的 RectangleF 结构，该矩形形成 Graphics 对象的绘制表面上此 Region 对象的边界。
.参数 graphics, Gdi图形, , 区域所在的图形对象
.参数 rect, 矩形F, 参考, 提供一个RectF变量接受返回值



.子程序 取区域HRGN, 整数型, , 返回指定图形上下文中此 Region 对象的 Windows 句柄。
.参数 graphics, Gdi图形, , 区域所在的图形对象



.子程序 是否空区域, 逻辑型, , 测试此 Region 对象在指定的绘制表面上是否有空的内部。
.参数 graphics, Gdi图形, , 区域所在的图形对象



.子程序 是否无限区域, 逻辑型, , 测试此 Region 对象在指定的绘制表面上是否有无限内部。
.参数 graphics, Gdi图形, , 



.子程序 是否相等, 逻辑型, , 比较两个区域是否相等
.参数 region, Gdi区域, , 要比较的区域
.参数 graphics, Gdi图形, , 区域所在的图形对象



.子程序 取区域数据尺寸, 整数型, , 


.子程序 取区域数据, 整数型, , 返回真实取回多少个数据
.参数 buffer, 字节型, 参考 数组, 取回数据的存放数组
.参数 bufferSize, 整数型, , 要取回多少个数据



.子程序 是否在区域内_点, 逻辑型, , 判断一个点是否在区域内
.参数 x, 小数型, , 
.参数 y, 小数型, , 
.参数 graphics, Gdi图形, , 



.子程序 是否在区域内_矩形, 逻辑型, , 判断一个矩形是否在区域内,只要有任何重叠,就认为是真
.参数 x, 小数型, , 
.参数 y, 小数型, , 
.参数 width, 小数型, , 
.参数 height, 小数型, , 
.参数 graphics, Gdi图形, , 



.子程序 变换区域, 逻辑型, , 用指定的 Matrix 对象变换此 Region 对象。
.参数 matrix, Gdi矩阵, , 



.子程序 取区域扫描矩形数组, 逻辑型, , 返回与此 Region 对象近似的 RectangleF 结构的数组。
.参数 rects, 矩形F, 参考 数组, 
.参数 count, 整数型, 参考, 
.参数 matrix, Gdi矩阵, , 



.子程序 取区域扫描矩形数量, 整数型, , 
.参数 matrix, Gdi矩阵, , 



.类模块 Gdi矩阵, , , 

.子程序 取矩阵, 整数型, , 


.子程序 取错误代码, 整数型, , 


.子程序 是否创建, 逻辑型, , 


.子程序 置矩阵, 空白型, , 
.参数 Matrix, 整数型, , 



.子程序 创建, 逻辑型, , 


.子程序 创建2, 逻辑型, , 
.参数 m11, 小数型, , 
.参数 m12, 小数型, , 
.参数 m21, 小数型, , 
.参数 m22, 小数型, , 
.参数 dx, 小数型, , 
.参数 dy, 小数型, , 



.子程序 创建3, 逻辑型, , 
.参数 rect, 矩形F, , 
.参数 dstplg, PointF, , 



.子程序 复制到, 逻辑型, , 
.参数 cloneMatrix, Gdi矩阵, , 



.子程序 平移, 逻辑型, , 按指定的顺序将指定的转换向量应用到此 Matrix 对象。
.参数 offsetX, 小数型, , 
.参数 offsetY, 小数型, , 
.参数 order, 整数型, 可空, 默认 #矩阵顺序_预先计算



.子程序 旋转, 逻辑型, , 
.参数 角度, 小数型, , 
.参数 order, 整数型, 可空, 默认 #矩阵顺序_预先计算



.子程序 逆转, 逻辑型, , 


.子程序 缩放, 逻辑型, , 
.参数 scaleX, 小数型, , 
.参数 scaleY, 小数型, , 
.参数 order, 整数型, 可空, 默认 #矩阵顺序_预先计算



.子程序 相乘, 逻辑型, , 如果指定的顺序是 MatrixOrder.Prepend，则按预先计算的顺序将此 Matrix 对象乘以指定的矩阵。如果指定的顺序是 MatrixOrder.Append，则按追加的顺序将此 Matrix 对象乘以指定的矩阵。
.参数 matrix, Gdi矩阵, , 
.参数 order, 整数型, 可空, 默认 #矩阵顺序_预先计算



.子程序 切变, 逻辑型, , 仅当其中一个参数为 0 时此方法中应用的变形才是纯切变。当 shearY 因子为 0 时，应用于原始矩形的变形将下边缘水平移动矩形高度的 shearX 倍。当 shearX 因子为 0 时，会将右边缘垂直移动矩形宽度的 shearY 倍。请注意两个参数均不为零时这种情况，因为结果很难预料。例如，如果两个因子均为 1，则变形非常特殊（因此不可逆），将整个平面挤压成一条直线。
.参数 shearX, 小数型, , 
.参数 shearY, 小数型, , 
.参数 order, 整数型, 可空, 默认 #矩阵顺序_预先计算



.子程序 置矩阵元素, 逻辑型, , 
.参数 m11, 小数型, , 
.参数 m12, 小数型, , 
.参数 m21, 小数型, , 
.参数 m22, 小数型, , 
.参数 dx, 小数型, , 
.参数 dy, 小数型, , 



.子程序 取矩阵元素, 逻辑型, , 
.参数 matrixOut, 小数型, 数组, 提供小数数组接受返回值



.子程序 重置矩阵, 逻辑型, , 


.子程序 转换点数组, 逻辑型, , 
.参数 pts, PointF, 数组, 
.参数 count, 整数型, 可空, 



.子程序 转换矢量数组, 逻辑型, , 将数组中的每个矢量与矩阵相乘。该矩阵的转换元素（第三行）被忽略。
.参数 pts, PointF, 数组, 
.参数 count, 整数型, 可空, 



.子程序 是否可逆转, 逻辑型, , 


.子程序 是否单位矩阵, 逻辑型, , 


.子程序 是否相等, 逻辑型, , 
.参数 matrix, Gdi矩阵, , 



.程序集 __HIDDEN_TEMP_MOD__, , , 

.子程序 GDI启动, 整数型, , 整个程序只能调用一次


.子程序 GDIPlus卸载, 整数型, , 整个程序只能调用一次


.子程序 A2W, 字节集, , 将Ansi转成Unicode
.参数 欲转换的文本, 文本型, , 



.子程序 RGB到ARGB, 整数型, , 
.参数 RGB颜色, 整数型, , 
.参数 透明度, 整数型, 可空, 



.子程序 取错误描述, 文本型, , 
.参数 返回码, 整数型, , 



.子程序 W2A, 文本型, , 将Unicode转成Ansi
.参数 欲转换的文本, 整数型, , Unicode文本内存地址



.子程序 输出调试文本_字节集, 空白型, , 
.参数 字节集, 字节集, , 
.参数 十六进制, 逻辑型, 可空, 



.子程序 ARGB到RGB, 整数型, , 
.参数 ARGB颜色, 整数型, , 
.参数 透明度, 整数型, , 



.子程序 查询常量, 整数型, , ＋ #换行符
.参数 常量, 文本型, , 
.参数 输出调试文本, 逻辑型, 可空, 



.类模块 工具提示类, , , 

.子程序 创建, 整数型, , 成功返回工具提示控件句柄，失败返回0
.参数 是否支持多行, 逻辑型, 可空, 默认为假
.参数 是否为气泡提示, 逻辑型, 可空, 默认为假



.子程序 添加工具提示, 整数型, , 成功返回非0，失败返回0
.参数 控件句柄, 整数型, , 
.参数 提示内容, 文本型, , 
.参数 提示工具位置, 逻辑型, 可空, 注明：为真表示总显示在控件的中下方，为假表示跟随鼠标。默认为假



.子程序 删除工具提示, 空白型, , 没有返回值
.参数 控件句柄, 整数型, , 



.子程序 取提示背景颜色, 整数型, , 返回颜色值


.子程序 置提示背景颜色, 整数型, , 返回值没有意义
.参数 颜色值, 整数型, , 



.子程序 取提示文本颜色, 整数型, , 


.子程序 置提示文本颜色, 整数型, , 返回值没有意义
.参数 颜色值, 整数型, , 



.子程序 更新提示文本, 空白型, , 没有返回值
.参数 控件句柄, 整数型, , 
.参数 提示内容, 文本型, , 



.子程序 置提示延时, 整数型, , 返回值没有意义
.参数 弹出延时, 整数型, , 
.参数 显示延时, 整数型, , 



.子程序 销毁_, 整数型, , 销毁工具提示


.子程序 取回句柄, 整数型, , 


.子程序 移除工具提示, 整数型, , 没有意义的返回值


.子程序 置入句柄, 整数型, , 
.参数 欲置入的句柄, 整数型, , 



.子程序 置提示宽度, 整数型, , 返回之前提示的宽度。注：一般在工具提示控件具有“多行”属性时使用。
.参数 宽度, 整数型, , 以像素为单位



.子程序 取控件总数, 整数型, , 返回控件数目


.子程序 取所有控件句柄, 空白型, , 没有返回值
.参数 控件句柄数组, 整数型, 参考 数组, 



.子程序 取提示文本, 整数型, , 成功返回非0，失败返回0
.参数 控件句柄, 整数型, , 
.参数 缓冲区, 文本型, 参考, 
.参数 缓冲区大小, 整数型, , 



.类模块 媒体播放类, , , 

.子程序 打开, 逻辑型, , 
.参数 文件名, 文本型, , 
.参数 目标窗口句柄, 整数型, 可空, 如果为空且媒体文件为视频文件，将自动创建一个窗口.
.参数 媒体类型, 文本型, 可空, 



.子程序 播放, 空白型, , 


.子程序 取媒体路径, 文本型, , 


.子程序 取播放状态, 整数型, , 0.未知或未就绪，1.播放，2.暂停，3.停止


.子程序 关闭左声道, 空白型, , 


.子程序 关闭右声道, 空白型, , 


.子程序 打开右声道, 空白型, , 


.子程序 关闭音频输出, 空白型, , 


.子程序 打开音频输出, 空白型, , 


.子程序 取样值, 整数型, , 仅WAV


.子程序 取样本大小, 整数型, , 仅WAV


.子程序 取设备描述, 文本型, , 


.子程序 取设备版本, 文本型, , 


.子程序 取样频率, 整数型, , 仅WAV


.子程序 取样格式, 整数型, , 仅WAV


.子程序 取当前音轨, 整数型, , 仅WAV


.子程序 设置时间格式, 逻辑型, , 
.参数 格式, 整数型, 可空, 0.毫秒，1.帧，2.小时,分钟,秒，3.分钟,秒,帧，4.取样频率



.子程序 取媒体长度, 文本型, , 设置时间格式


.子程序 取媒体高度, 整数型, , 


.子程序 取媒体宽度, 整数型, , 


.子程序 暂停, 逻辑型, , 


.子程序 停止, 逻辑型, , 


.子程序 继续, 逻辑型, , 


.子程序 循环播放, 逻辑型, , 


.子程序 取播放速度, 整数型, , 


.子程序 设置当前播放速度, 逻辑型, , 
.参数 数值, 整数型, , 



.子程序 取最小播放速度, 整数型, , 帧每秒


.子程序 取正常播放速度, 整数型, , 帧每秒


.子程序 取最大播放速度, 整数型, , 帧每秒


.子程序 关闭媒体, 逻辑型, , 


.子程序 关闭所有媒体, 逻辑型, , 


.子程序 调整左声道, 逻辑型, , 
.参数 音量, 整数型, , 



.子程序 调整右声道, 逻辑型, , 
.参数 音量, 整数型, , 



.子程序 调整音量, 逻辑型, , 
.参数 音量, 整数型, , 



.子程序 取左声道音量, 整数型, , 


.子程序 取右声道音量, 整数型, , 


.子程序 取音量, 整数型, , 


.子程序 取当前播放位置, 整数型, , 


.子程序 跳到播放位置, 逻辑型, , 
.参数 位置, 整数型, , 



.子程序 弹出光驱, 逻辑型, , 


.子程序 关闭光驱, 逻辑型, , 


.子程序 移动视频窗口, 逻辑型, , 
.参数 左边, 整数型, 可空, 
.参数 顶边, 整数型, 可空, 
.参数 宽度, 整数型, , 
.参数 高度, 整数型, , 



.子程序 取驱动类型, 文本型, , 


.类模块 控制面板类, , , 

.子程序 系统面板, 空白型, , 控制面板VISTA


.子程序 控制面板, 空白型, , 控制面板XP.VISTA


.子程序 网络面板, 空白型, , 控制面板VISTA


.子程序 网上邻居面板, 空白型, , 控制面板XP.VISTA,(VISTA请使用网络面板)


.子程序 计算机面板, 空白型, , 控制面板XP.VISTA


.子程序 默认程序面板, 空白型, , 控制面板VISTA


.子程序 打印机面板, 空白型, , 控制面板VISTA


.子程序 系统还原面板, 空白型, , 控制面板VISTA


.子程序 自动升级面板, 空白型, , 控制面板VISTA


.子程序 语音识别面板, 空白型, , 控制面板VISTA


.子程序 用户帐号面板, 空白型, , 控制面板VISTA


.子程序 性能信息和工具面板, 空白型, , 控制面板VISTA


.子程序 程序和功能面板, 空白型, , 控制面板VISTA


.子程序 网络和共享中心面板, 空白型, , 控制面板VISTA


.子程序 家长控制面板, 空白型, , 控制面板VISTA


.子程序 自动播放面板, 空白型, , 控制面板VISTA


.子程序 同步中心面板, 空白型, , 控制面板VISTA


.子程序 欢迎中心面板, 空白型, , 控制面板VISTA


.子程序 轻松访问中心面板, 空白型, , 控制面板VISTA


.子程序 驱动器加密面板, 空白型, , 控制面板VISTA


.子程序 WindowsSideShow面板, 空白型, , 控制面板VISTA


.子程序 个性化面板, 空白型, , 控制面板VISTA


.子程序 回收站, 空白型, , 控制面板XP.VISTA


.子程序 已安装更新面板, 空白型, , 控制面板VISTA


.子程序 获得程序面板, 空白型, , 控制面板VISTA


.子程序 控制面板项, 空白型, , 
.参数 面板项, 整数型, , 0,添加删除程序;1.网络邻居;2.显示设置;3.防火墙;4.添加硬件;5.INTERNET属性,6.语言;7.游戏控制器;8.鼠标;9.声音;10.网络连接;11.电源选项;12.系统属性,13.笔和输入设备;14.地区;15.日期时间;16.安全中心



.子程序 Internet控制面板, 空白型, , 
.参数 项目, 整数型, , 0:属性面板;1:连接对话框;2:证书对话框;3:安全对话框;4:删除历史记录



.类模块 超级列表框类, , , 

.子程序 创建, 整数型, , 
.参数 父窗口句柄, 整数型, , 
.参数 左边, 整数型, , 
.参数 顶边, 整数型, , 
.参数 宽度, 整数型, , 
.参数 高度, 整数型, , 
.参数 类型, 整数型, , 0大图标1报表2小图标3普通



.子程序 取句柄, 整数型, , 


.子程序 整行选择, 空白型, , 
.参数 是否整行选择, 逻辑型, , 



.子程序 插入列, 整数型, , 在报表型列表框中指定位置插入新的列，成功返回新列的位置索引，失败返回 -1 。
.参数 插入位置, 整数型, 可空, 可以被省略。指定新列插入时的位置索引，索引值从 0 开始。如果提供 -1 ，则插入到尾部。如果本参数被省略，默认值为 -1 。
.参数 标题, 文本型, 可空, 可以被省略。本参数指定报表列的标题文本。如果被省略，默认值为空文本。
.参数 列宽度, 整数型, 可空, 可以被省略。本参数指定报表列的宽度，单位为像素。如果被省略，默认值为 80 。
.参数 对齐方式, 整数型, 可空, 可以被省略。参数可以为以下常量之一： 0：左对齐； 1：中间对齐； 2：右对齐。如果本参数被省略，默认值为0。
.参数 图片索引, 整数型, 可空, 可以被省略。图片索引用于指定“表头图片组”属性中的某张图片。索引值从 0 开始，-1 表示无图片。如果本参数被省略，默认值为 -1 。
.参数 图片是否居右, 逻辑型, 可空, 可以被省略。指定图片是否显示在右边，如果本参数被省略，默认值为假。



.子程序 插入表项, 整数型, , 
.参数 插入位置, 整数型, 可空, 可以被省略。指定新表项插入时的位置索引，索引值从 0 开始。如果提供 -1 ，则插入到列表框的尾部。如果本参数被省略，默认值为 -1 。
.参数 标题, 文本型, 可空, 可以被省略。本参数指定表项的标题文本。如果被省略，默认值为空文本。
.参数 图片索引, 整数型, 可空, 可以被省略。图片索引用于指定“图片组”属性中的某张图片。索引值从 0 开始，-1 表示无图片。如果本参数被省略，默认值为 -1 。
.参数 状态图片索引, 整数型, 可空, 可以被省略。状态图片索引用于指定“状态图片组”属性中的某张图片。索引值从 0 开始，-1 表示无图片。如果本参数被省略，默认值为 -1 。
.参数 缩进数目, 整数型, 可空, 可以被省略。“缩进数目”仅在报表型列表框才有效，用作指定显示时在表项首部增加的空白数。如果本参数被省略，默认值为 0 。
.参数 表项数值, 整数型, 可空, 可以被省略。该数值与指定表项相关联。如果本参数被省略，默认值为 0 。



.子程序 显示表格线, 空白型, , 
.参数 是否显示, 逻辑型, , 



.子程序 热点跟踪, 空白型, , 
.参数 是否跟踪, 逻辑型, , 



.子程序 自动选择, 空白型, , 
.参数 是否自动选择, 逻辑型, , 



.子程序 下划线, 空白型, , 
.参数 是否有下划线, 逻辑型, , 



.子程序 图标对齐方式, 空白型, , 本属性指定大图标和小图标列表框中的图标对齐方式。
.参数 对齐方式, 整数型, , 0顶部对齐，1.左边对齐



.子程序 标题自动换行, 空白型, , 本属性指定在大图标和小图标列表框中是否自动排列图标。
.参数 是否自动换行, 逻辑型, , 



.子程序 置类型, 空白型, , 
.参数 类型, 整数型, , 0大图标1报表2小图标3普通



.子程序 置表头, 空白型, , 本属性指定报表列表框中是否没有表头。
.参数 是否有表头, 逻辑型, , 



.子程序 表头可单击, 空白型, , 如果报表列表框中有表头，本属性指定表头列是否可以被作为按钮单击。
.参数 可否单击, 逻辑型, , 



.子程序 表头可拖动, 空白型, , 
.参数 可拖动, 逻辑型, , 



.子程序 允许编辑, 空白型, , 本属性指定是否允许编辑表项标题，仅在“热点跟踪”属性为假时才有效。
.参数 是否允许编辑, 逻辑型, , 



.子程序 排序方式, 空白型, , 
.参数 方式, 整数型, , 0.不排,1.正向,2.逆向
.参数 重新排序, 逻辑型, 可空, 重新排序现有项目,默认为假



.子程序 取排序方式, 整数型, , 


.子程序 是否有检查框, 空白型, , 
.参数 是否有, 逻辑型, , 



.子程序 单一选择, 逻辑型, , 
.参数 是否单一选择, 逻辑型, 可空, 可以被省略。当被省略时，只返回当前的单一选择设置状态，而不改变其状态。



.子程序 保证显示, 空白型, , 
.参数 表项索引, 整数型, , 



.子程序 进入编辑, 空白型, , 让指定表项进入编辑状态，执行本命令成功的前提是“允许编辑”属性为真。
.参数 表项索引, 整数型, , 用于指定列表框中的某一项目，索引值从 0 开始。



.子程序 排列图标, 空白型, , 自动排列大图标或小图标列表框中的图标。


.子程序 取消表项选择, 空白型, , 取消对指定表项的选择。
.参数 表项索引, 整数型, , 用于指定列表框中的某一项目，索引值从 0 开始。



.子程序 查找表项, 整数型, , 
.参数 标题, 文本型, , 本参数指定欲查找表项的标题文本。
.参数 起始查找位置, 整数型, 可空, 可以被省略。本参数指定查找表项的起始位置。如果本参数被省略，默认值为 0  ，即从首项开始查找。
.参数 是否精确匹配, 逻辑型, 可空, 可以被省略。本参数指定匹配标题文本时是否为精确匹配，如果本参数为假，则只要表项标题首部包含指定文本即认为匹配成功。如果本参数被省略，默认值为真。
.参数 如果查找不到是否从头开始, 逻辑型, 可空, 可以被省略。本参数指定在查找标题文本时，如果从“起始查找位置”查找不到，是否从头开始查找。默认值为假。



.子程序 查找表项数值, 整数型, , 
.参数 起始查找位置, 整数型, 可空, 可以被省略。本参数指定查找表项的起始位置。如果本参数被省略，默认值为 0  ，即从首项开始查找。
.参数 表项数值, 整数型, 可空, 可以被省略。该数值与指定表项相关联。如果本参数被省略，默认值为 0 。
.参数 如果查找不到是否从头开始, 逻辑型, 可空, 可以被省略。本参数指定在查找标题文本时，如果从“起始查找位置”查找不到，是否从头开始查找。默认值为假。



.子程序 取标题, 文本型, , 取指定表项或子项的标题。
.参数 表项索引, 整数型, , 用于指定列表框中的某一项目，索引值从 0 开始。
.参数 列索引, 整数型, 可空, 可以被省略。用作指定报表型列表框中项目所处的列，索引值从 0 开始，如果当前列表框类型不是报表型列表框，提供 0 值即可。如果本参数被省略，默认值为 0 。



.子程序 取表项数, 整数型, , 返回列表框中所有表项的数目


.子程序 取表项数值, 整数型, , 
.参数 表项索引, 整数型, , 用于指定列表框中的某一项目，索引值从 0 开始。



.子程序 取状态图片, 整数型, , 取回指定表项的当前状态图片索引，图片索引指向状态图片组属性中的某一图片，从 0 开始，-1 表示无图片。如果“是否有检查框”属性为真，返回值是当前检查框的选中状态，1表示被选中，0表示未选中。
.参数 表项索引, 整数型, , 用于指定列表框中的某一项目，索引值从 0 开始。



.子程序 取第一项索引, 整数型, , 取在当前超级列表框中显示的第一条项目的索引。失败返回-1


.子程序 取可显示数量, 整数型, , 取当前在超级列表框的用户区中大约可以显示的项目数量


.子程序 取列标题, 文本型, , 返回报表型列表框中指定列的标题。
.参数 列索引, 整数型, , 用作指定报表型列表框中项目所处的列，索引值从 0 开始。



.子程序 取列对齐方式, 整数型, , 取回报表型列表框中指定列的对齐方式。返回值为以下常量之一： 0：左对齐； 1：中间对齐； 2：右对齐；失败返回-1。
.参数 列索引, 整数型, , 用作指定报表型列表框中项目所处的列，索引值从 0 开始。



.子程序 取列宽, 整数型, , 返回报表型列表框中指定列的宽度，如指定列不存在，返回 0 。
.参数 列索引, 整数型, , 用作指定报表型列表框中项目所处的列，索引值从 0 开始。



.子程序 取列数, 整数型, , 返回报表型列表框中列的总数


.子程序 取列图片索引, 整数型, , 返回报表型列表框中指定列的图片索引
.参数 列索引, 整数型, , 用作指定报表型列表框中项目所处的列，索引值从 0 开始。



.子程序 取鼠标所在索引, 整数型, , 如果鼠标指针在超级列表框范围内，取当前其指向的项目索引


.子程序 取缩进数目, 整数型, , 
.参数 表项索引, 整数型, , 。用于指定列表框中的某一项目，索引值从 0 开始。



.子程序 取图片索引, 整数型, , 
.参数 表项索引, 整数型, , 用于指定列表框中的某一项目，索引值从 0 开始。
.参数 列索引, 整数型, 可空, 可以被省略。用作指定报表型列表框中项目所处的列，索引值从 0 开始，如果当前列表框类型不是报表型列表框，提供 0 值即可。如果本参数被省略，默认值为 0 。



.子程序 全部删除, 空白型, , 


.子程序 删除表项, 空白型, , 
.参数 表项索引, 整数型, , 用于指定列表框中的某一项目，索引值从 0 开始。



.子程序 删除列, 空白型, , 删除报表型列表框中指定位置处的列。
.参数 列索引, 整数型, , 用作指定报表型列表框中项目所处的列，索引值从 0 开始。



.子程序 是否被选择, 逻辑型, , 判断指定表项是否已经被选择，如已被选择，返回真，否则返回假。
.参数 表项索引, 整数型, , 用于指定列表框中的某一项目，索引值从 0 开始。



.子程序 图片是否居右, 逻辑型, , 如果报表型列表框中指定列的图片居右显示，返回真，否则返回假
.参数 列索引, 整数型, , 用作指定报表型列表框中项目所处的列，索引值从 0 开始。



.子程序 选择表项, 空白型, , 
.参数 表项索引, 整数型, , 用于指定列表框中的某一项目，索引值从 0 开始。



.子程序 置标题, 空白型, , 设置指定表项或子项的标题。
.参数 表项索引, 整数型, 可空, 用于指定列表框中的某一项目，索引值从 0 开始。
.参数 列索引, 整数型, 可空, 可以被省略。用作指定报表型列表框中项目所处的列，索引值从 0 开始，如果当前列表框类型不是报表型列表框，提供 0 值即可。如果本参数被省略，默认值为 0 。
.参数 标题, 文本型, 可空, 可以被省略。本参数指定表项或子项的标题文本。如果被省略，默认值为空文本。



.子程序 置表项数值, 空白型, , 设置与指定表项相关联的数值
.参数 表项索引, 整数型, 可空, 用于指定列表框中的某一项目，索引值从 0 开始。
.参数 表项数值, 整数型, 可空, 可以被省略。该数值与指定表项相关联。如果本参数被省略，默认值为 0 。



.子程序 置列标题, 空白型, , 设置报表型列表框中指定列的标题
.参数 列索引, 整数型, , 用作指定报表型列表框中项目所处的列，索引值从 0 开始。
.参数 标题, 文本型, 可空, 可以被省略。本参数指定报表列的标题文本。如果被省略，默认值为空文本。
.参数 图片索引, 整数型, 可空, 可以被省略。图片索引用于指定“表头图片组”属性中的某张图片。索引值从 0 开始，-1 表示无图片。如果本参数被省略，默认值为 -1 。



.子程序 置列宽, 空白型, , 设置报表型列表框中指定列的宽度
.参数 列索引, 整数型, , 用作指定报表型列表框中项目所处的列，索引值从 0 开始。
.参数 列宽, 整数型, 可空, 可以被省略。本参数指定报表列的宽度，单位为像素。如果参数值提供为 -1 ，则根据列数据最大宽度自动调整列尺寸，如果参数值提供为 -2 ，则根据列标题宽度自动调整列尺寸。如果本参数被省略，默认值为 -1 。



.子程序 置列图片, 空白型, , 设置报表型列表框中指定列的标志图片。
.参数 列索引, 整数型, , 用作指定报表型列表框中项目所处的列，索引值从 0 开始。
.参数 图片索引, 整数型, 可空, 可以被省略。图片索引用于指定“表头图片组”属性中的某张图片。索引值从 0 开始，-1 表示无图片。如果本参数被省略，默认值为 -1 。



.子程序 置缩进数目, 空白型, , 设置指定表项的缩进数目。
.参数 表项索引, 整数型, , 用于指定列表框中的某一项目，索引值从 0 开始。
.参数 缩进数目, 整数型, 可空, 可以被省略。“缩进数目”仅在报表型列表框才有效，用作指定显示时在表项首部增加的空白数。如果本参数被省略，默认值为 0 。



.子程序 置图片, 空白型, , 
.参数 表项索引, 整数型, , 用于指定列表框中的某一项目，索引值从 0 开始。
.参数 列索引, 整数型, 可空, 可以被省略。用作指定报表型列表框中项目所处的列，索引值从 0 开始，如果当前列表框类型不是报表型列表框，提供 0 值即可。如果本参数被省略，默认值为 0 。
.参数 图片索引, 整数型, 可空, 可以被省略。图片索引用于指定“图片组”属性中的某张图片。索引值从 0 开始，-1 表示无图片。如果本参数被省略，默认值为 -1 。



.子程序 置状态图片, 空白型, , 
.参数 表项索引, 整数型, , 用于指定列表框中的某一项目，索引值从 0 开始。
.参数 状态图片索引, 整数型, 可空, 可以被省略。状态图片索引用于指定“状态图片组”属性中的某张图片。索引值从 0 开始，-1 表示无图片。如果本参数被省略，默认值为 -1 。



.子程序 现行选中项, 整数型, , 
.参数 选中项, 整数型, 可空, 如果为空返回现行选中项,不为空置现行选中项



.子程序 取背景图片, 文本型, , 返回图片文件名路径


.子程序 置背景图片, 空白型, , 设置背景图片
.参数 图片文件名, 文本型, , 
.参数 是否平铺, 逻辑型, 可空, 可以省略。默认为真。



.子程序 取背景颜色, 整数型, , 


.子程序 置背景颜色, 空白型, , 
.参数 背景颜色, 整数型, , 



.子程序 刷新显示, 空白型, , 


.子程序 取表项间距, 空白型, , 
.参数 水平间距, 整数型, 参考, 用于返回表项的水平间距
.参数 垂直间距, 整数型, 参考, 用于返回表项的垂直间距
.参数 列表框类型, 逻辑型, 可空, 可以被省略。当为真时取回小图标列表框的项目间距。当为假时取回大图标列表框的项目间距。默认为假。



.子程序 取文本背景颜色, 整数型, , 


.子程序 置文本背景颜色, 空白型, , 
.参数 背景颜色, 整数型, , 



.子程序 取文本颜色, 整数型, , 


.子程序 置文本颜色, 空白型, , 
.参数 参数_文本颜色, 整数型, , 



.子程序 取项目行距, 整数型, , 


.子程序 取编辑框句柄, 整数型, , 当列表框在进行编辑时，返回这个编辑框的句柄


.子程序 禁止重画, 空白型, , 


.子程序 允许重画, 空白型, , 


.子程序 取图片组句柄, 整数型, , 


.子程序 取状态图片组句柄, 整数型, , 


.子程序 新建图片组, 整数型, , 返回图片组
.参数 宽度, 整数型, , 
.参数 高度, 整数型, , 
.参数 色深, 整数型, , 
.参数 背景色, 整数型, , 



.子程序 新建状态图片组, 整数型, , 返回图片组
.参数 宽度, 整数型, , 
.参数 高度, 整数型, , 
.参数 色深, 整数型, , 
.参数 背景色, 整数型, , 



.子程序 添加图片组图片, 整数型, , 返回图片索引
.参数 图标句柄, 整数型, , 



.子程序 添加状态图片组图片, 整数型, , 返回图片索引
.参数 图标句柄, 整数型, , 



.子程序 清空图片组, 空白型, , 


.子程序 清空状态图片组, 空白型, , 


.子程序 移动, 空白型, , 
.参数 左边, 整数型, 可空, 
.参数 顶边, 整数型, 可空, 
.参数 宽度, 整数型, 可空, 
.参数 高度, 整数型, 可空, 



.子程序 取宽度, 整数型, , 


.子程序 取高度, 整数型, , 


.子程序 取顶边, 整数型, , 


.子程序 取左边, 整数型, , 


.子程序 是否已创建, 逻辑型, , 


.子程序 取底边, 整数型, , 


.子程序 取右边, 整数型, , 


.子程序 置句柄, 空白型, , 控制程序中超级列表框
.参数 窗口句柄, 整数型, , 



.子程序 禁止, 空白型, , 
.参数 禁止, 逻辑型, , 



.子程序 置可视, 空白型, , 
.参数 是否可视, 逻辑型, , 



.子程序 列排序, 空白型, , 
.参数 列索引, 整数型, , 索引值从 0 开始。
.参数 排列方式, 逻辑型, 可空, 真为小到大,默认为真



.类模块 编辑框类, , , 

.子程序 创建, 空白型, , 
.参数 父窗口句柄, 整数型, , 
.参数 左边, 整数型, , 
.参数 顶边, 整数型, , 
.参数 宽度, 整数型, , 
.参数 高度, 整数型, , 
.参数 类型, 整数型, , 



.子程序 取行数, 整数型, , 


.子程序 取行文本, 文本型, , 
.参数 行号, 整数型, , 从0开始



.子程序 上卷, 空白型, , 


.子程序 下卷, 空白型, , 


.子程序 取文本, 文本型, , 取回编辑框全部文本


.子程序 取光标行和列号, 空白型, , 取得选定字符或光标所在行号和列号
.参数 行号, 整数型, 参考, 调用前设置一个变量用于装载返回的行号，从0开始
.参数 列号, 整数型, 参考, 调用前设置一个变量用于装载返回的列号



.子程序 置句柄, 空白型, , 
.参数 编辑框句柄, 整数型, , 



.类模块 组合框类, , , 

.子程序 添加项目, 空白型, , 给组合框添加项目
.参数 项目文本, 文本型, , 要添加的项目外部



.子程序 插入项目, 空白型, , 指定位置插入项目
.参数 项目索引, 整数型, , 插入位置
.参数 项目文本, 文本型, , 要插入的项目文本



.子程序 取项目文本, 文本型, , 取回组合框指定索引项目文本
.参数 项目索引, 整数型, , 项目索引，0表示第一行



.子程序 选中指定项, 空白型, , 选中指定项目
.参数 项目索引, 整数型, , 0表示第一项



.子程序 取项目数, 整数型, , 取回组合框总项目数


.子程序 取选中项, 整数型, , 取回组合框现行选中项


.子程序 取项目数值, 整数型, , 取组合框指定项目数值
.参数 项目索引, 整数型, , 0表示第一项



.子程序 置项目数值, 空白型, , 置组合框指定项目数值
.参数 项目索引, 整数型, , 0表示第一项
.参数 数值, 整数型, , 要置的项目数值



.子程序 删除项目, 空白型, , 删除指定索引项目
.参数 项目索引, 整数型, , 要删除的项目索引



.子程序 清空, 空白型, , 删除组合框所有项目


.子程序 下拉列表, 空白型, , 打开组合框下拉列表


.子程序 查找项目, 整数型, , 返回组合框项目索引
.参数 项目文本, 文本型, , 



.子程序 置句柄, 空白型, , 
.参数 组合框句柄, 整数型, , 



.类模块 列表框类, , , 

.子程序 查找项目, 整数型, , 返回列表框项目索引
.参数 项目文本, 文本型, , 



.子程序 取项目数, 整数型, , 取列表框总项目数


.子程序 清空, 空白型, , 清空列表框


.子程序 添加项目, 空白型, , 添加新项目
.参数 项目文本, 文本型, , 要添加的项目文本



.子程序 插入项目, 空白型, , 插入新项目
.参数 项目索引, 整数型, , 0表示第一项
.参数 项目文本, 文本型, , 要插入的项目文本



.子程序 删除项目, 空白型, , 删除指定项目
.参数 项目索引, 整数型, , 0表示第一项



.子程序 取项目文本, 文本型, , 取列表框指定项的项目文本
.参数 项目索引, 整数型, , 0表示第一项



.子程序 取项目数值, 整数型, , 取得指定项目数值
.参数 项目索引, 整数型, , 0表示第一项



.子程序 置项目数值, 空白型, , 置指定项目数值
.参数 项目索引, 整数型, , 
.参数 项目数值, 整数型, , 



.子程序 取选中项, 整数型, , 取列表框现行选中项


.子程序 置选中项, 空白型, , 置列表框现行选中项
.参数 项目索引, 整数型, , 0表示第一项



.子程序 置句柄, 空白型, , 
.参数 列表框句柄, 整数型, , 



.类模块 托盘类, , , 

.子程序 初始化_, 逻辑型, , 
.参数 窗口句柄, 整数型, 可空, 尽量不为空,非窗口程序使用系统创建的临时窗口.
.参数 托盘图标句柄, 整数型, 可空, 
.参数 托盘提示信息, 文本型, 可空, 
.参数 托盘事件, 子程序指针, 可空, 一个参数： 1、#单击左键；2、#双击；3、#单击右键；4、气泡提示被关闭；5、气泡提示被单击。



.子程序 弹出信息_, 逻辑型, , 
.参数 提示标题, 文本型, , 
.参数 提示内容, 文本型, , 
.参数 提示图标, 整数型, 可空, 0表示无图标,信息图标=1,警告图标=2,错误图标=3



.子程序 销毁_, 逻辑型, , 


.类模块 时钟热键类, , , 时钟监视

.子程序 初始化_, 空白型, , 
.参数 热键处理程序, 子程序指针, , 一个参数，接收热键号



.子程序 注册_, 空白型, , 加入或修改热键(应避免使用<左 Shift>与小键盘数字键组合,虽然这种组合可能性很小.)
.参数 热键号, 整数型, , 必须大于0
.参数 键码1, 整数型, , 
.参数 键码2, 整数型, 可空, 
.参数 键码3, 整数型, 可空, 
.参数 键码4, 整数型, 可空, 



.子程序 取消_, 逻辑型, , 取消一个或所有热键。成功返回真，否则返回假。
.参数 热键号, 整数型, 可空, 如果参数为空则取消所有热键并停止监视！



.子程序 查找_, 热键数据, , 失败返回一个初始状态热键数据
.参数 热键号, 整数型, , 



.子程序 监视_, 空白型, , 监视热键。
.参数 时钟周期, 整数型, 可空, 默认50



.子程序 暂停监视, 空白型, , 


.类模块 系统热键类, , , 只能创建一个类

.子程序 初始化_, 空白型, , 不要重复初始化
.参数 热键处理程序, 子程序指针, , 两个参数：第一个参数，接收热键号。第二个参数接收附加参数（可省略）
.参数 窗口句柄, 整数型, , 
.参数 附加参数, 整数型, 可空, 



.子程序 注册, 逻辑型, , 
.参数 热键ID, 整数型, , 
.参数 功能键, 整数型, , alt＝1 ctrl＝2 shift＝4
.参数 键值, 整数型, , 虚拟键值



.子程序 注销_, 逻辑型, , 取消一个热键
.参数 热键ID, 整数型, , 



.子程序 销毁_, 空白型, , 取消所有热键，重新创建必须重新初始化。


.类模块 钩子类, , , 

.子程序 键盘钩子, 逻辑型, , 
.参数 钩子函数, 子程序指针, , 两个参数，第一参数接收键码，第二参数接收键状态
.参数 窗口句柄, 整数型, 可空, 当前进程，空为全局钩子



.子程序 卸载键盘钩子, 整数型, , 


.子程序 鼠标钩子, 逻辑型, , 
.参数 钩子函数, 子程序指针, , 三个参数，第一参数接收状态，第二参数接收横坐标，第三个参数接收纵坐标
.参数 窗口句柄, 整数型, 可空, 当前进程，空为全局钩子



.子程序 卸载鼠标钩子, 整数型, , 


.类模块 MDB数据库类, , , 

.子程序 输出数据类型, 空白型, , 输出调试文本


.子程序 修改密码, 逻辑型, , 
.参数 原密码, 文本型, , 
.参数 新密码, 文本型, , 



.子程序 取时间数值, 文本型, , 将日期时间型转换为数值
.参数 时间, 日期时间型, , 



.子程序 压缩, 逻辑型, , 
.参数 数据库, 文本型, , 
.参数 密码, 文本型, 可空, 
.参数 备份, 逻辑型, 可空, 



.类模块 xp防火墙类, , , 

.子程序 取状态, 逻辑型, , 


.子程序 关闭, 逻辑型, , 


.子程序 打开, 逻辑型, , 


.子程序 添加例外, 逻辑型, , 
.参数 显示名称, 文本型, , 
.参数 程序完整路径, 文本型, , 



.子程序 删除例外, 逻辑型, , 
.参数 程序完整路径, 文本型, , 



.类模块 文件夹信息类, , , 

.子程序 取文件夹大小, 双精度小数型, , 
.参数 文件夹, 文本型, , 文件夹不存在会出错



.子程序 取文件夹类型, 文本型, , 
.参数 文件夹, 文本型, , 文件夹不存在会出错



.子程序 是否引导目录, 逻辑型, , 
.参数 文件夹, 文本型, , 文件夹不存在会出错



.子程序 取创建时间, 日期时间型, , 
.参数 文件夹, 文本型, , 文件夹不存在会出错



.子程序 取修改时间, 日期时间型, , 
.参数 文件夹, 文本型, , 文件夹不存在会出错



.子程序 取存取时间, 日期时间型, , 
.参数 文件夹, 文本型, , 文件夹不存在会出错



.子程序 取名称, 文本型, , 
.参数 文件夹, 文本型, , 文件夹不存在会出错



.类模块 录音类, , , 

.子程序 录音, 空白型, , 
.参数 采样大小, 整数型, 可空, 8,16
.参数 采样率, 整数型, 可空, 11025;16384;22050;32768;44100



.子程序 停止录音, 空白型, , 


.子程序 保存, 空白型, , 
.参数 文件名, 文本型, , 



.程序集 __HIDDEN_TEMP_MOD__, , , 

.子程序 浏览文件夹_M, 文本型, , 
.参数 窗口句柄, 整数型, 可空, 
.参数 标题, 文本型, 可空, 
.参数 初始目录, 文本型, 可空, 
.参数 显示目录, 整数型, 可空, 0.全部 1.计算机 2.文档 3.桌面 4.音乐 5.图片 6.视频 7.收藏夹 8.Windows 9.系统 10.Program Files
.参数 显示文件, 逻辑型, 可空, 
.参数 地址栏, 逻辑型, 可空, 
.参数 是否创建文件夹, 逻辑型, 可空, 如果为“真”，“显示目录”则为“0”
.参数 返回显示名称, 逻辑型, 可空, 如果取回路径失败返回显示名称,如“计算机”(旧系统为“我的电脑”,)、“桌面”等，默认返回空文本



.子程序 毫秒到文本_M, 文本型, , 把一个代表毫秒数的整数转换为“xx小时xx分钟xx秒”形式的文本。
.参数 待转换的毫秒数, 整数型, , 



.子程序 取临时文件路径, 文本型, , 尾部带“\”


.子程序 取字节数, 文本型, , 把一个表示字节数的整数转换为“xx 字节”、“xx KB”、“xx MB”或“xx GB”的形式的文本。
.参数 字节数, 长整数型, , 



.子程序 信息框_M, 整数型, ,  0、#确认钮； 1、#取消钮； 2、#放弃钮； 3、#重试钮； 4、#忽略钮； 5、#是钮； 6、#否钮;9重试(T);10继续
.参数 信息文本, 文本型, , 
.参数 标志, 整数型, 可空, 0、#确认钮；1、#确认取消钮；2、#放弃重试忽略钮；3、#取消是否钮；4、#是否钮；5、#重试取消钮；6、#取消重试继续；16、#错误图标；32、#询问图标；48、#警告图标；64、#信息图标；0、#默认按钮一； 256、#默认按钮二； 512、#默认按钮三； 768、#默认按钮四；0、#程序等待； 4096、#系统等待；65536、#位于前台； 524288、#文本右对齐；默认0、#确认钮
.参数 标题文本, 文本型, 可空, 默认标题“信息：”
.参数 句柄, 整数型, 可空, 



.子程序 注册窗口类_M, 逻辑型, , 
.参数 窗口函数, 子程序指针, , 
.参数 风格, 整数型, 可空, 
.参数 类名, 文本型, 可空, 默认 mywindows



.子程序 取特定目录_M, 文本型, , 取特定的目录(返回所要取的指定目录名 无效返回空)
.参数 欲获取目录类型, 整数型, 可空, 0我的桌面 1临时目录 5我的文档 6我的收藏夹 7我的启动 11我的开始菜单 20系统字体 36Windows安装目录 37系统目录 38文件安装目录 39我的图片 40用户目录 41系统目录 46文档 [99更多]



.子程序 设置字体_M, 空白型, , 给指定的窗口设置字体
.参数 参窗口句柄, 整数型, , 
.参数 参字号大小, 整数型, 可空, 默认14
.参数 参字体名, 文本型, 可空, 默认宋体
.参数 参加粗, 整数型, 可空, 400~900
.参数 参倾斜, 整数型, 可空, 0或1
.参数 参下划线, 整数型, 可空, 0或1
.参数 参删除线, 整数型, 可空, 0或1



.子程序 取键名_M, 文本型, , 取按键码的按键名(返回按键名)
.参数 键代码, 整数型, , 按键码



.子程序 取功能键, 文本型, , 
.参数 功能键常量, 整数型, , 



.子程序 执行子程序_M, 空白型, , 可包含三个参数
.参数 程序指针, 子程序指针, , 要执行的子程序
.参数 参数一, 整数型, 可空, 子程序的参数一
.参数 参数二, 整数型, 可空, 子程序的参数二
.参数 参数三, 文本型, 可空, 子程序的参数三



.子程序 取系统版本信息_M, 版本信息_, , 


.子程序 取系统平台标识_M, 整数型, , 1.9x;2.nt


.子程序 取系统版本_M, 文本型, , 


.子程序 取系统内部版本_M, 整数型, , 


.子程序 打开文件_M, 整数型, , 如执行成功，则返回文件句柄。
.参数 打开文件名, 文本型, , 
.参数 访问权限, 整数型, 可空, 1.#读入、2.#写出、3.#读写,默认#读写
.参数 创建方式, 整数型, 可空, 1.创建文件；如文件存在则会出错;2.创建文件，会改写前一个文件;3.文件必须已经存在。;4.如文件不存在则创建它;5.将现有文件缩短为零长度,默认4
.参数 共享方式, 整数型, 可空, 0.不共享;1.#读入、2.#写出、3.#读写,默认#读写



.子程序 取文件尺寸_M, 长整数型, , 
.参数 文件名, 文本型, , 



.子程序 取盘符_M, 文本型, , 
.参数 路径, 文本型, , 



.子程序 取窗口标题_M, 文本型, , 
.参数 句柄, 整数型, , 



.子程序 格式化日期_M, 文本型, , 
.参数 系统时间, 系统时间_, , 
.参数 格式文本, 文本型, 可空, 默认:yyyy'年'M'月'd'日'



.子程序 格式化时间_M, 文本型, , 
.参数 系统时间, 系统时间_, , 
.参数 格式文本, 文本型, 可空, 默认空文本(H:m:s),例:ttH时m分s秒,tt表示上午下午可省略



.子程序 关闭系统_M, 空白型, , 
.参数 参数, 整数型, , 0.#注销 1.#强制注销 2.#重启 3.#强制重启 4.#关机 5.#强制关机 



.子程序 提升权限_M, 逻辑型, , 
.参数 权限, 文本型, , #备份权限,#启动权限,#关机权限,#调试权限



.子程序 执行_M, 逻辑型, , 
.参数 命令, 文本型, , 
.参数 参数, 文本型, 可空, 如文件名是一个可执行文件，传递给执行程序.
.参数 默认路径, 文本型, 可空, 
.参数 显示, 整数型, 可空, 0.隐藏窗口,1.正常激活,2.激活最小化3.激活最大化,4.通常不激活,5.通常激活,6.最小化窗口,7.最小化不激活,8.还原不激活9.激活还原,



.子程序 取目录_M, 文本型, , 文件目录路径,尾部无“\”
.参数 文件路径, 文本型, , 



.子程序 取文本指针_M, 整数型, , 
.参数 文本, 文本型, , 



.子程序 取小数指针_M, 整数型, , 
.参数 小数, 小数型, 参考, 



.子程序 取整数指针_M, 整数型, , 
.参数 整数, 整数型, 参考, 



.子程序 取子程序指针_M, 整数型, , 
.参数 子程序, 子程序指针, 参考, 



.子程序 取字节集指针_M, 整数型, , 
.参数 字节集, 字节集, , 



.子程序 执行字节集_M, 整数型, , 可以进行c调用 
.参数 字节集, 字节集, , 



.子程序 执行函数_M, 整数型, , 可以进行c调用 
.参数 地址, 整数型, , 



.子程序 调用函数_M, 整数型, , 可以进行c调用 
.参数 地址, 整数型, , 指针
.参数 参数组, 整数型, 可空 数组, 其他数据传递指针



.子程序 子程序指针到整数型_M, 整数型, , 
.参数 子程序指针, 子程序指针, , 



.子程序 十六到十_M, 长整数型, , 〖核心替代库〗将指定的十六进制文本转换为长整数型，返回转换后的结果。
.参数 欲转换的文本, 文本型, , 欲转换的十六进制文本可带正负号“+-”及前缀“0x”，但不能超过长整数型的数值范围±0x7FFFFFFFFFFFFFFF，否则返回的结果会不正确。



.子程序 取二进制位_M, 整数型, , 返回一个32位整数的指定二进制位的数值(0或1)；返回-1表示错误
.参数 三十二位整数, 整数型, , 
.参数 二进制位, 整数型, , 1至32



.子程序 到十进制_M, 长整数型, , 如果错误返回0
.参数 欲转换的文本, 文本型, , 不可带正负号“+-”及前缀“0x”
.参数 进制, 整数型, 可空, 4、十六进制；3、八进制；1、二进制； 默认十六进制



.子程序 取十六进制文本_M, 文本型, , 返回长度为8的十六进制文本
.参数 十进制整数, 整数型, , 



.子程序 取高字_M, 整数型, , 
.参数 x, 整数型, , 



.子程序 取低字_M, 整数型, , 
.参数 x, 整数型, , 



.子程序 循环左移_M, 整数型, , 
.参数 要循环左移的整数, 整数型, , 
.参数 左移位数, 整数型, , <255



.子程序 循环右移_M, 整数型, , 
.参数 要循环右移的整数, 整数型, , 
.参数 右移位数, 整数型, , <255



.子程序 取系统类别_M, 整数型, , 返回值：0～8代表：“未知”, “Win95”, “Win98”, “WinME”, “ WinNT”, “Win2000”, “WinXP”, “Win2003”, “Vista”


.子程序 加密_RC4, 字节集, , RC4加解密，与易的输出形式一样，可能和其它加解密程序输出形式不一样，可自行进行相应调整。
.参数 原文, 字节集, , 需要加、解密的字节集
.参数 密码, 字节集, , 输入相应的密码



.子程序 解密_RC4, 字节集, , 
.参数 密文, 字节集, , 
.参数 密码, 字节集, , 



.子程序 加密_md5, 文本型, , 
.参数 原文, 字节集, , 要取数据摘要的字节集
.参数 是否为16位, 逻辑型, 可空, 默认为32位的，真为16位
.参数 是否为小写, 逻辑型, 可空, 默认为大写，真为小写



.子程序 加密_md4, 文本型, , 
.参数 原文, 字节集, , 要取数据摘要的字节集
.参数 是否为16位, 逻辑型, 可空, 默认为32位的，真为16位
.参数 是否为小写, 逻辑型, 可空, 默认为大写，真为小写



.子程序 加密_md2, 文本型, , 
.参数 原文, 字节集, , 要取数据摘要的字节集
.参数 是否为16位, 逻辑型, 可空, 默认为32位的，真为16位
.参数 是否为小写, 逻辑型, 可空, 默认为大写，真为小写



.子程序 加密_sha1, 文本型, , 
.参数 原文, 字节集, , 要取数据摘要的字节集
.参数 是否为小写, 逻辑型, 可空, 默认为大写，真为小写



.子程序 文本到字节组_M, 空白型, , 
.参数 文本, 文本型, , 
.参数 字节组, 字节型, 参考 数组, 
.参数 填充长度, 整数型, 可空, 
.参数 填充字符, 字节型, 可空, "0"=48



.子程序 置自动运行_M, 逻辑型, , 


.子程序 取消自动运行_M, 逻辑型, , 


.子程序 删除注册项_M, 逻辑型, , 
.参数 根目录, 整数型, , 1、#根类； 2、#现行设置； 3、#现行用户； 4、#本地机器； 5、#所有用户。
.参数 子项名称, 文本型, , 



.子程序 删除注册项值_M, 逻辑型, , 
.参数 根目录, 整数型, , 1、#根类； 2、#现行设置； 3、#现行用户； 4、#本地机器； 5、#所有用户。
.参数 子项名称, 文本型, , 
.参数 删除的值名, 文本型, , 



.子程序 写注册项文本_M, 逻辑型, , 
.参数 根目录, 整数型, , 1、#根类； 2、#现行设置； 3、#现行用户； 4、#本地机器； 5、#所有用户。
.参数 子项名称, 文本型, , 
.参数 值名称, 文本型, 可空, 欲写参数_子项名称默认值设为空
.参数 欲写入值, 文本型, , 
.参数 类型, 整数型, 可空, 文本.#REG_SZ;可扩充文本.#REG_EXPAND_SZ;多文本.REG_MULTI_SZ,默认#REG_SZ



.子程序 写注册项字节集_M, 逻辑型, , 
.参数 根目录, 整数型, , 1、#根类； 2、#现行设置； 3、#现行用户； 4、#本地机器； 5、#所有用户。
.参数 子项名称, 文本型, , 
.参数 值名称, 文本型, , 
.参数 欲写入值, 字节集, , 



.子程序 写注册项整数_M, 逻辑型, , 
.参数 根目录, 整数型, , 1、#根类； 2、#现行设置； 3、#现行用户； 4、#本地机器； 5、#所有用户。
.参数 子项名称, 文本型, , 
.参数 值名称, 文本型, , 
.参数 欲写入值, 整数型, , 



.子程序 写注册项长整数_M, 逻辑型, , 
.参数 根目录, 整数型, , 1、#根类； 2、#现行设置； 3、#现行用户； 4、#本地机器； 5、#所有用户。
.参数 子项名称, 文本型, , 
.参数 值名称, 文本型, , 
.参数 欲写入值, 长整数型, , 



.子程序 读注册项文本_M, 文本型, , 
.参数 根目录, 整数型, , 1、#根类； 2、#现行设置； 3、#现行用户； 4、#本地机器； 5、#所有用户。
.参数 子项名称, 文本型, , 
.参数 值名称, 文本型, 可空, 欲取参数_子项名称默认值设为“”



.子程序 读注册项整数_M, 整数型, , 
.参数 根目录, 整数型, , 1、#根类； 2、#现行设置； 3、#现行用户； 4、#本地机器； 5、#所有用户。
.参数 子项名称, 文本型, , 
.参数 值名称, 文本型, , 



.子程序 读注册项长整数_M, 长整数型, , 
.参数 根目录, 整数型, , 1、#根类； 2、#现行设置； 3、#现行用户； 4、#本地机器； 5、#所有用户。
.参数 子项名称, 文本型, , 
.参数 值名称, 文本型, , 



.子程序 读注册项字节集_M, 字节集, , 
.参数 根目录, 整数型, , 1、#根类； 2、#现行设置； 3、#现行用户； 4、#本地机器； 5、#所有用户。
.参数 子项名称, 文本型, , 
.参数 值名称, 文本型, , 



.子程序 取短文件名_M, 文本型, , 
.参数 文件名, 文本型, , 



.子程序 多选对话框_M, 整数型, , 返回数组成员数
.参数 文件数组, 文本型, 参考 数组, 选择多个文件时，第一个数组为路径名，后面为不包括路径的文件名
.参数 窗口标题, 文本型, 可空, 对话框窗口标题
.参数 过滤器, 文本型, 可空, 格式：“MP3文件(*.mp3)|*.mp3|媒体文件(*.mpg)|*.mpg”
.参数 初始路径, 文本型, 可空, 默认从“我的文档”开始。否则，请给出盘符，如“d:”
.参数 窗口风格, 整数型, 可空, 0.工具栏、只读选择框－未选中；1.工具栏、只读选择框－选中；2.工具栏；3.工具栏、只读选择框－未选中，帮助按钮；4.工具栏、只读选择框－选中，帮助按钮；5.工具栏，帮助按钮；6.普通风格、只读选择框－未选中；7.普通风格、只读选择框－选中；8.普通风格；9.普通风格、只读选择框－未选中，帮助按钮；10.普通风格、只读选择框－选中，帮助按钮；11.普通风格、帮助按钮。



.子程序 取文件名_M, 文本型, , 
.参数 文件路径, 文本型, , 
.参数 是否带后缀, 逻辑型, 可空, 真，带后缀



.子程序 取后缀_M, 文本型, , 返回小写扩展名;如：.bmp
.参数 文件路径, 文本型, , 



.子程序 关联文件_M, 逻辑型, , 编译后执行；可用： 取命令行（）取得关联文件名称.
.参数 关联文件后缀, 文本型, , 欲关联的文件类型，如“txt”
.参数 关联文件, 文本型, 可空, 如"txtfile"
.参数 关联程序, 文本型, 可空, 关联执行程序完整路径,如“d:\aa.exe”;提供空数据为自身。
.参数 关联文件类型, 文本型, 可空, 如“文本文档”



.子程序 枚举注册表项_M, 整数型, , 返回数组成员数。
.参数 根目录, 整数型, , 1、#根类(HKEY_CLASSES_ROOT)； 2、#现行设置(HKEY_CURRENT_CONFIG)； 3、#现行用户(HKEY_CURRENT_USER)； 4、#本地机器(HKEY_LOCAL_MACHINE)； 5、#所有用户(HKEY_USERS)。
.参数 全路径注册项名, 文本型, , 如：“SOFTWARE\Microsoft”
.参数 注册表项, 文本型, 参考 数组, 



.子程序 取消关联_M, 逻辑型, , 编译后执行
.参数 关联文件后缀, 文本型, , 关联的文件类型，如“txt”
.参数 关联文件, 文本型, , 如"txtfile"
.参数 关联程序, 文本型, 可空, 关联执行程序名称,如“aa.exe”;提供空数据为自身。



.子程序 枚举注册项值_M, 整数型, , 
.参数 根目录, 整数型, , 1、#根类(HKEY_CLASSES_ROOT)； 2、#现行设置(HKEY_CURRENT_CONFIG)； 3、#现行用户(HKEY_CURRENT_USER)； 4、#本地机器(HKEY_LOCAL_MACHINE)； 5、#所有用户(HKEY_USERS)。
.参数 全路径注册项名, 文本型, , 如：“SOFTWARE\Microsoft”
.参数 注册表键名, 文本型, 参考 数组, 
.参数 注册表项值, 字节集, 参考 数组, 



.子程序 枚举字体_M, 空白型, , 
.参数 字体数组, 文本型, 参考 数组, 接收字体名称的数组



.子程序 目录是否存在_M, 逻辑型, , 
.参数 目录, 文本型, , 



.子程序 目录是否为空_M, 逻辑型, , 不存在或不是空目录返回
.参数 参_目录, 文本型, , 



.子程序 取系统目录_M, 文本型, , system32 尾部无“\”


.子程序 取系统安装目录_M, 文本型, , windows 尾部无“\”


.子程序 是否为管理员_M, 逻辑型, , 


.子程序 安装重启提示_M, 空白型, , 
.参数 窗口句柄, 整数型, 可空, 



.子程序 程序自杀_M, 空白型, , 


.子程序 写出文本文件_M, 逻辑型, , 如文件不存在则创建它
.参数 文件名, 文本型, , 
.参数 欲写出的文本, 文本型, , 
.参数 覆盖文件, 逻辑型, 可空, 真：覆盖；假：写到文件尾部；默认：假



.子程序 到文件尾_M, 逻辑型, , 
.参数 文件句柄, 整数型, , 



.子程序 到文件首_M, 逻辑型, , 
.参数 文件句柄, 整数型, , 



.子程序 到读写位置_M, 逻辑型, , 
.参数 文件句柄, 整数型, , 
.参数 移动距离, 整数型, , 
.参数 起始移动位置, 整数型, 可空, 1、#文件首； 2、#文件尾； 3、#现行位置。如果本参数被省略，默认值为“#文件首”。



.子程序 是否在文件尾_M, 逻辑型, , 
.参数 文件句柄, 整数型, , 



.子程序 取读写位置_M, 整数型, , 
.参数 文件句柄, 整数型, , 



.子程序 取文件长度_M, 长整数型, , 
.参数 文件句柄, 整数型, , 



.子程序 写出文本_M, 逻辑型, , 写出到当前读写位置处。
.参数 文件句柄, 整数型, , 
.参数 欲写出的文本, 文本型, , 



.子程序 写出字节集_M, 逻辑型, , 写出到当前读写位置处。
.参数 文件句柄, 整数型, , 
.参数 数据, 字节集, , 



.子程序 执行DOS命令_M, 文本型, , 
.参数 命令行文本, 文本型, , 
.参数 返回执行结果, 逻辑型, 可空, 如果真等待执行完毕返回执行结果,如果为空或假返回空文本.
.参数 等待执行完毕, 逻辑型, 可空, 返回执行结果为空可选参数



.子程序 查看字节集_M, 文本型, , 以"EBCE001234"(16进制)显示字节集或"{0,1,2,3}"(10进制)的形式显示字节集
.参数 字节集, 字节集, , 要查看的字节集，不要太长
.参数 显示格式, 逻辑型, 可空, 为真以"{0,1,2,3}"的形式显示字节集，为假以"EBCE001234"显示字节集，默认为真



.子程序 还原字节集_M, 字节集, , 将"EBCE001234"(16进制)格式文本或"{0,1,2,3}"(10进制)的格式文本转换为字节集
.参数 文本, 文本型, , 如"00 BF AD 00"或者是"{0,1,2,3}"
.参数 文本格式, 逻辑型, 可空, 为真为"{0,1,2,3}"格式文本，为假为"EBCE001234"格式文本，默认为真



.子程序 ANSI转UNICODE, 字节集, , 
.参数 待转字节集, 字节集, , 



.子程序 UNICODE转ANSI, 字节集, , 
.参数 待转字节集, 字节集, , 



.子程序 QB编码, 字节集, , 用于Quoted-Printable编码、URL编码
.参数 原文, 字节集, , 要进行编码的字节集
.参数 编码类型, 逻辑型, 可空, 真为URL，假为QP，默认为QP



.子程序 QP解码, 字节集, , 用于Quoted-Printable解码,也可用来解码URL
.参数 原文, 字节集, , 要进行解码的字节集



.子程序 取窗口句柄_M, 整数型, , 
.参数 窗口类名, 文本型, 可空, 
.参数 窗口标题, 文本型, , 



.子程序 取窗口进程ID_M, 整数型, , 返回进程ID
.参数 句柄, 整数型, , 窗口句柄



.子程序 进程ID取窗口_M, 整数型, , 
.参数 进程ID, 整数型, , 



.子程序 打开进程_M, 整数型, , OpenProcess (2035711, 0, 进程ID)
.参数 进程ID, 整数型, , 



.子程序 进程名取进程ID句柄_M, 空白型, , 通过进程名称传递窗口句柄数组，进程ID数组
.参数 进程名称, 文本型, , 要查找的进程名称，忽略大小写、空格。
.参数 进程ID, 整数型, 参考 可空 数组, 传递进程ID数组
.参数 窗口句柄, 整数型, 参考 可空 数组, 传递窗口句柄数组



.子程序 标题取进程ID句柄_M, 空白型, , 
.参数 窗口标题, 文本型, , 
.参数 进程ID数组, 整数型, 参考 可空 数组, 传递进程ID数组
.参数 窗口句柄数组, 整数型, 参考 可空 数组, 传递窗口句柄数组



.子程序 进程ID取路径_M, 文本型, , 
.参数 进程ID, 整数型, , 



.子程序 枚举模块路径_M, 空白型, , 
.参数 进程ID, 整数型, , 
.参数 模块地址, 模块地址_, 参考 数组, 



.子程序 取窗口线程ID_M, 整数型, , 
.参数 窗口句柄, 整数型, , 



.子程序 取进程列表_M, 空白型, , 
.参数 进程信息, 进程信息, 参考 数组, 
.参数 文件路径, 文本型, 参考 可空 数组, 真，同时枚举文件路径，默认不枚举
.参数 忽略无路径进程, 逻辑型, 可空, 提供第二参数，此参数才有效。



.子程序 取进程退出代码_M, 整数型, , 
.参数 进程句柄, 整数型, , 



.子程序 取线程退出代码_M, 整数型, , 
.参数 线程句柄, 整数型, , 



.子程序 创建线程_M, 整数型, , 
.参数 子程序, 子程序指针, , 
.参数 子程序参数, 整数型, 可空, 其他数据可用内存指针，



.子程序 模拟键盘_M, 空白型, , API_执行按键(无返回值)
.参数 键代码, 整数型, , 键代码
.参数 状态, 整数型, 可空, 可空:按键(按下+放开)   3 #按下   4 #放开



.子程序 模拟鼠标_M, 空白型, , 模拟鼠标按键(无返回值)
.参数 键, 整数型, 可空, 可空:为左键  1 #左键   2 #右键   3 #中键
.参数 控制, 整数型, 可空, 可空:为单击  1 #单击   2 #双击   3 #按下  4 #放开



.子程序 虚拟磁盘_M, 逻辑型, , 
.参数 虚拟盘, 文本型, , 盘符
.参数 虚拟目录, 文本型, , 



.子程序 删除虚拟磁盘_M, 逻辑型, , 
.参数 虚拟盘, 文本型, , 



.子程序 注册拖放, 整数型, , 
.参数 控件句柄, 整数型, , 接收的控件句柄
.参数 拖放处理程序, 子程序指针, , 两个参数，第一参数接收控件句柄，第二参数接收拖放文件名



.子程序 取消拖放, 整数型, , 
.参数 控件句柄, 整数型, , 
.参数 还原窗口信息, 逻辑型, 可空, 



.子程序 程序是否运行_M, 整数型, , 返回事件句柄, 0表示已经运行，假表示还未运行,程序销毁时请调用“关闭句柄_”。
.参数 标志文本, 文本型, , 可以是任何文本，但是最好要长一点以保证和系统中已有其他事件对象的名称不相冲突。



.子程序 创建目录_M, 逻辑型, , 创建多级目录,假：创建失败或目录已经存在 真：创建成功
.参数 目录完整路径, 文本型, , 



.子程序 文件打开方式对话框_M, 空白型, , 文件打开方式对话框
.参数 文件, 文本型, , 



.子程序 取文件属性名称_M, 文本型, , 返回属性名称
.参数 属性, 整数型, , 



.子程序 文件是否存在_M, 逻辑型, , 判断文件或文件夹是否存在
.参数 文件名, 文本型, , 



.子程序 文件操作_M, 整数型, , 可以是文件或目录
.参数 源文件, 文本型, , 进行操作的文件
.参数 目标文件, 文本型, 可空, 为空＝源文件
.参数 功能, 整数型, , 文件操作常量，1.移动 2.复制 3.删除 4.重命名
.参数 操作标识, 整数型, , 文件操作标识常量组合；如#文件操作标识_冲突改名



.子程序 弹出窗口_M, 整数型, , 返回弹出窗口句柄
.参数 父窗口, 整数型, 可空, 父窗口句柄
.参数 地址, 文本型, , 
.参数 横坐标, 整数型, , 
.参数 纵坐标, 整数型, , 
.参数 窗口宽度, 整数型, , 
.参数 窗口高度, 整数型, , 
.参数 风格, 整数型, 可空, 默认#风格_可视+#风格_弹出式细边线边框窗口



.子程序 添加右键菜单_M, 逻辑型, , 编译后执行
.参数 菜单, 文本型, , 名称
.参数 命令, 文本型, 可空, 提供空数据为执行自身。
.参数 全局, 逻辑型, 可空, 假，只在文件夹中创建



.子程序 取消右键菜单_M, 逻辑型, , 编译后执行
.参数 菜单, 文本型, , 
.参数 全局, 逻辑型, 可空, 假，只在文件夹中创建



.子程序 重起系统对话框_M, 整数型, , 
.参数 命令, 整数型, , 0.注销，1.关机，2.重起
.参数 提示信息, 文本型, 可空, 



.子程序 取窗口扩展风格_M, 整数型, , 
.参数 窗口句柄, 整数型, , 



.子程序 取窗口风格_M, 整数型, , 
.参数 窗口句柄, 整数型, , 



.子程序 置窗口扩展风格_M, 整数型, , 返回旧扩展风格
.参数 窗口句柄, 整数型, , 
.参数 扩展风格, 整数型, , 



.子程序 置窗口风格_M, 整数型, , 返回旧风格
.参数 窗口句柄, 整数型, , 
.参数 风格, 整数型, , 



.子程序 取当前进程窗口句柄_M, 整数型, , 


.子程序 取窗口类名_M, 文本型, , 
.参数 窗口句柄, 整数型, , 



.子程序 取窗口情况_M, 窗口放置_, , 
.参数 窗口句柄, 整数型, , 



.子程序 是否可视_M, 逻辑型, , 
.参数 窗口句柄, 整数型, , 



.子程序 去窗口边框_M, 空白型, , 
.参数 窗口句柄, 整数型, , 
.参数 保留边框宽度, 整数型, 可空, 



.子程序 注入DLL_M, 逻辑型, , 执行远程DLL中的一个公开函数 ..请先提升权限
.参数 进程句柄, 整数型, , 
.参数 DLL路径, 文本型, , 
.参数 初始函数名, 文本型, , 
.参数 参数, 字节集, 可空 数组, 



.子程序 结束进程中DLL_M, 逻辑型, , 不是所有的DLL都能结束，本函数可能造成被结束DLL的进程异常退出，请小心使用
.参数 进程句柄, 整数型, , 需要结束其中DLL的进程ID号
.参数 Dll名称, 文本型, , 需要结束的DLL的名称



.子程序 窗口置顶_M, 空白型, , 首次激活后使用
.参数 窗口句柄, 整数型, , 
.参数 置顶, 逻辑型, 可空, 默认真



.子程序 取键码_M, 整数型, , 取按键名的按键码(返回按键码)
.参数 按键名, 文本型, , 按键名



.子程序 文本投递_M, 空白型, , 向指定窗口句柄的窗口中后台发送文本内容,对游戏有效!(无返回值) 作者:无限复活
.参数 窗口句柄, 整数型, , 接收消息的窗口句柄
.参数 文本内容, 文本型, , 发送的文本内容



.子程序 按键消息_M, 空白型, , 向指定窗口句柄的窗口中发送按键消息(无返回值) [斩月]
.参数 窗口句柄, 整数型, , 接收消息的窗口句柄
.参数 键代码, 整数型, , 按键的键代码
.参数 状态, 整数型, 可空, 可空:按键(按下+放开) 1 输入字符  3 #按下   4 #放开
.参数 是否功能键, 逻辑型, 可空, 可空为真,假:普通键   真:功能键 (为功能键可用于热键技能不输入字符)



.子程序 鼠标消息_M, 空白型, , 向指定窗口发送鼠标动作消息(无返回值) [斩月]
.参数 窗口句柄, 整数型, , 
.参数 键, 整数型, 可空, 可空:为左键  1 #左键   2 #右键   3 #中键  4 #中键上滚动 5 #中键下滚动(滚动前后请按下放开中键)
.参数 控制, 整数型, 可空, 可空:为单击  1 #单击   2 #双击   3 #按下  4 #放开
.参数 水平坐标, 整数型, 可空, 可空:为原水平坐标不变  移动目标鼠标水平坐标 (注:坐标为参数一窗口句柄中的坐标)
.参数 垂直坐标, 整数型, 可空, 可空:为原垂直坐标不变  移动目标鼠标垂直坐标



.子程序 指针到整数_M, 整数型, , 
.参数 内存地址, 整数型, , 



.子程序 读内存文本, 文本型, , 
.参数 进程句柄, 整数型, , 进程句柄
.参数 内存地址, 整数型, , 
.参数 文本长度, 整数型, , 中文2,英文1
.参数 转换字符, 逻辑型, 可空, UNICODE转ANSI,默认:真



.子程序 读内存小数, 小数型, , 
.参数 进程句柄, 整数型, , 
.参数 内存地址, 整数型, , 



.子程序 读内存整数, 整数型, , 4字节
.参数 进程句柄, 整数型, , 
.参数 内存地址, 整数型, , 



.子程序 读内存字节集, 字节集, , 
.参数 进程句柄, 整数型, , 
.参数 内存地址, 整数型, , 
.参数 长度, 整数型, , 



.子程序 读内存双精度小数, 双精度小数型, , 
.参数 进程句柄, 整数型, , 
.参数 内存地址, 整数型, , 



.子程序 读内存长整数, 长整数型, , 8字节
.参数 进程句柄, 整数型, , 
.参数 内存地址, 整数型, , 



.子程序 取内存短整数型, 短整数型, , 
.参数 进程句柄, 整数型, , 
.参数 内存地址, 整数型, , 



.子程序 读内存十六进制文本, 文本型, , 
.参数 进程句柄, 整数型, , 
.参数 内存地址, 整数型, , 
.参数 长度, 整数型, , 



.子程序 取窗口列表_M, 空白型, , 
.参数 句柄数组, 整数型, 参考 可空 数组, 
.参数 标题数组, 文本型, 参考 可空 数组, 
.参数 路径数组, 文本型, 参考 可空 数组, 
.参数 进程ID数组, 整数型, 参考 可空 数组, 
.参数 忽略系统路径, 逻辑型, 可空, 默认:假



.子程序 延时_M, 空白型, , .
.参数 延时间隔, 整数型, , 1000微秒 = 1毫秒 ； 1000毫秒 = 1秒
.参数 延时单位, 整数型, 可空, 可空:毫秒  0 毫秒  1 微秒  2 秒



.子程序 取目录文件_M, 逻辑型, , 取文件夹数量和文件数量
.参数 文件夹路径, 文本型, , 目录
.参数 子文件夹, 文本型, 参考 可空 数组, 目录中文件夹数组
.参数 文件, 文本型, 参考 可空 数组, 目录中子文件数组
.参数 文件后缀, 文本型, 可空, 如*.bmp； 默认*.*全部文件
.参数 尾部, 逻辑型, 可空, 为“真”子文件夹路径以“\”结束



.子程序 取目录所有文件_M, 长整数型, , 返回一个文件夹的长度，单位是字节,如文件数组为空返回0
.参数 文件夹路径, 文本型, , 
.参数 子文件夹数组, 文本型, 参考 可空 数组, 所有子文件夹数组
.参数 文件数组, 文本型, 参考 可空 数组, 所有文件数组
.参数 文件后缀, 文本型, 可空, 如*.bmp； 默认*.*全部文件
.参数 尾部, 逻辑型, 可空, 为“真”子文件夹路径以“\”结束。



.子程序 取文件信息1_M, 逻辑型, , 包含：长短名称，图标，类型，属性，创建，修改，访问，尺寸
.参数 文件, 文本型, , 
.参数 文件信息, 文件信息1, 参考, 



.子程序 取文件信息3_M, 逻辑型, , 包含：长短名称，属性，创建，修改，访问，尺寸
.参数 文件, 文本型, , 
.参数 文件信息, 文件信息2, 参考, 



.子程序 文件时间到文本_M, 文本型, , 
.参数 文件时间, 文件时间_, , 
.参数 日期格式, 文本型, 可空, 默认:yyyy'年'M'月'd'日'
.参数 时间格式, 文本型, 可空, 默认:H时m分s秒



.子程序 取文件类型_M, 文本型, , 
.参数 文件, 文本型, , 



.子程序 取文件信息2_M, 逻辑型, , 包含：长短名称，类型，属性，创建，修改，访问，尺寸
.参数 文件, 文本型, , 
.参数 文件信息, 文件信息1, 参考, 



.子程序 查找关联文件_M, 文本型, , 
.参数 文件名, 文本型, , 



.子程序 文件属性对话框_M, 整数型, , 
.参数 文件名, 文本型, , 
.参数 窗口句柄, 整数型, , 



.子程序 消息循环, 空白型, , 


.子程序 截取窗口_M, 字节集, , 
.参数 窗口句柄, 整数型, , 
.参数 位深度, 整数型, 可空, 色深(16;24;32),默认24
.参数 鼠标指针, 整数型, 可空, 



.子程序 取剪辑板位图_M, 字节集, , 
.参数 位深度, 整数型, 可空, 色深(16;24;32),默认24



.子程序 取图片宽度_M, 整数型, , 
.参数 位图, 文本型, , 



.子程序 截取屏幕区域_M, 字节集, , 
.参数 位深度, 整数型, 可空, 
.参数 横坐标, 整数型, 可空, 
.参数 纵坐标, 整数型, 可空, 
.参数 输出宽度, 整数型, 可空, 空为屏幕宽度,忽略横坐标
.参数 输出高度, 整数型, 可空, 空为屏幕高度,忽略纵坐标
.参数 鼠标指针, 整数型, 可空, 如果提供则绘制鼠标



.子程序 截取屏幕_M, 字节集, , 
.参数 位深度, 整数型, 可空, 
.参数 输出宽度, 整数型, 可空, 伸缩,空为屏幕宽度
.参数 输出高度, 整数型, 可空, 伸缩,空为屏幕高度
.参数 鼠标指针, 整数型, 可空, 如果提供则绘制鼠标



.子程序 取桌面句柄_M, 整数型, , 


.子程序 截取桌面_M, 字节集, , 
.参数 位深度, 整数型, 可空, 
.参数 输出宽度, 整数型, 可空, 伸缩,空为屏幕宽度,压缩会失真
.参数 输出高度, 整数型, 可空, 伸缩,空为屏幕高度



.子程序 取网络Ip列表_M, 空白型, , 非斩月
.参数 Ip列表, 文本型, 参考 可空 数组, 
.参数 网卡地址列表, 文本型, 参考 可空 数组, 



.子程序 Ping_M, 逻辑型, , 
.参数 被测试主机地址, 文本型, , 
.参数 最长等待时间, 整数型, 可空, 5000



.子程序 取网络主机列表_M, 空白型, , 
.参数 主机列表, 文本型, 参考 数组, 



.子程序 取本机IP列表_M, 整数型, , 
.参数 IP数组, 文本型, 参考 数组, 
.参数 过滤本地地址, 逻辑型, 可空, 过滤127.0.0.1



.子程序 取现行时间_M, 系统时间_, , 


.子程序 取工作组_M, 文本型, , 


.子程序 取用户名_M, 文本型, , 失败返回空文本


.子程序 取驱动器列表_M, 空白型, , 非斩月
.参数 驱动器列表, 文本型, 参考 数组, 
.参数 驱动器类型, 整数型, 可空, 2.U盘,3.硬盘,5.光驱(DRIVE_REMOVABLE， DRIVE_FIXED， DRIVE_REMOTE， DRIVE_CDROM 或 DRIVE_RAMDISK)负数排除,如:-5排除光驱



.子程序 取位图数据_M, 字节集, , 
.参数 位图句柄, 整数型, , 不用时请释放,"删除对象_()"
.参数 位深度, 整数型, 可空, 色深,默认色深



.子程序 载入位图数据_M, 整数型, , 返回位图句柄,不用时请释放,"删除对象_()"
.参数 位图数据, 字节集, , 



.子程序 置位图数据到设备_M, 逻辑型, , 
.参数 位图数据, 字节集, , 
.参数 设备场景, 整数型, , 
.参数 目标宽度, 整数型, 可空, 
.参数 目标高度, 整数型, 可空, 



.子程序 取刷新率_M, 整数型, , 


.子程序 取位图高度_M, 整数型, , 
.参数 位图句柄, 整数型, , 



.子程序 载入图象_M, 整数型, , 句柄
.参数 位图, 文本型, , 
.参数 图象类型, 整数型, 可空, 0,位图 1,图标 2,鼠标
.参数 图象宽度, 整数型, 可空, 
.参数 图象高度, 整数型, 可空, 



.子程序 取图片高度_M, 整数型, , 
.参数 位图, 文本型, , 



.子程序 截取屏幕二进制位图_M, 字节集, , 
.参数 位深度, 整数型, 可空, 
.参数 输出宽度, 整数型, 参考 可空, 空为屏幕宽度
.参数 输出高度, 整数型, 参考 可空, 空为屏幕高度
.参数 鼠标指针, 整数型, 可空, 如果提供则绘制鼠标



.子程序 置二进制位图数据到设备_M, 逻辑型, , 
.参数 位图数据, 字节集, , 
.参数 设备场景, 整数型, , 
.参数 位图信息, 位图信息_, , 



.子程序 截取窗口区域_M, 字节集, , 
.参数 窗口句柄, 整数型, , 
.参数 位深度, 整数型, 可空, 色深(16;24;32),默认24
.参数 横坐标, 整数型, 可空, 
.参数 纵坐标, 整数型, 可空, 
.参数 输出宽度, 整数型, 可空, 空为屏幕宽度,忽略横坐标
.参数 输出高度, 整数型, 可空, 空为屏幕高度,忽略纵坐标
.参数 鼠标指针, 整数型, 可空, 



.子程序 注册控件_M, 逻辑型, , 
.参数 控件, 文本型, , 
.参数 窗口句柄, 整数型, , 



.子程序 注销控件_M, 逻辑型, , 
.参数 控件, 文本型, , 
.参数 窗口句柄, 整数型, , 



.子程序 选择颜色, 逻辑型, , 
.参数 初始颜色, 整数型, 参考, 初始化对话框的颜色，对话框结束后返回用户选择的颜色
.参数 窗口句柄, 整数型, , 拥有该对话框的窗口的句柄
.参数 标识, 整数型, 可空, 0或2



.子程序 是否自动运行_M, 逻辑型, , 


.子程序 取本机IP_M, 文本型, , 


.子程序 取适配器名称_M, 文本型, , 


.子程序 取适配器信息_M, 网络适配器信息, , 


.子程序 窗口透明_M, 空白型, , 
.参数 窗口句柄, 整数型, , 
.参数 透明色, 整数型, 可空, 
.参数 透明度, 整数型, 可空, 
.参数 作用, 整数型, , 1=透明色起作用，2=透明度起作用，3=两者共同起作用



.子程序 取关联文件图标_M, 整数型, , 
.参数 文件, 文本型, , 



.子程序 取文件图标_M, 整数型, , 返回文件指向图标的图标句柄
.参数 文件, 文本型, , 
.参数 标识符, 整数型, 参考 可空, 



.子程序 提取文件图标_M, 整数型, , 判断一个可执行文件或DLL中是否有图标存在，并将其提取出来。如果图标索引设为-1，就返回文件中的图标总数
.参数 文件, 文本型, , 
.参数 图标索引, 整数型, 可空, 空,返回图标总数



.子程序 取图标数据_M, 字节集, , 返回位图数据
.参数 图标句柄, 整数型, , 
.参数 图标宽度, 整数型, 可空, 
.参数 位深度, 整数型, 可空, 色深,默认32
.参数 数据类型, 整数型, 可空, 0、位图数据，非0二进制位图数据
.参数 填充底色, 整数型, 可空, 



.子程序 转换位图宽高_M, 字节集, , 返回新位图
.参数 位图数据, 字节集, , 
.参数 转换后位图宽度, 整数型, , 
.参数 转换后位图高度, 整数型, , 
.参数 转换后位深度, 整数型, 可空, 默认32



.子程序 取位图信息_M, 位图信息_, , 
.参数 位图数据, 字节集, , 



.子程序 取设备位图_M, 字节集, , 
.参数 设备场景, 整数型, , 
.参数 横向坐标, 整数型, 可空, 
.参数 纵向坐标, 整数型, 可空, 
.参数 位图宽度, 整数型, , 
.参数 位图高度, 整数型, , 
.参数 输出宽度, 整数型, 可空, 伸缩,空为位图宽度
.参数 输出高度, 整数型, 可空, 伸缩,空为位图高度
.参数 位深度, 整数型, 可空, 色深(16;24;32)



.子程序 转换位图宽高_句柄, 字节集, , 返回新位图
.参数 位图句柄, 整数型, , 
.参数 转换后位图宽度, 整数型, , 
.参数 转换后位图高度, 整数型, , 
.参数 转换后位深度, 整数型, 可空, 默认32



.子程序 转换位深度_M, 字节集, , 
.参数 位图数据, 字节集, , 
.参数 位深度, 整数型, 可空, 大于8位
.参数 透明色, 整数型, , 



.子程序 执行子程序_M1, 空白型, , 可包含三个参数
.参数 程序指针, 子程序指针, , 要执行的子程序
.参数 参数一, 整数型, 可空, 子程序的参数一
.参数 参数二, 整数型, 可空, 子程序的参数二
.参数 参数三, 整数型, 可空, 子程序的参数三



.子程序 加密_动态, 字节集, , 
.参数 原文, 字节集, , 
.参数 密码, 字节集, 可空, 



.子程序 解密_动态, 字节集, , 
.参数 密文, 字节集, , 
.参数 密码, 字节集, 可空, 



.子程序 保存文件对话框_M, 文本型, , 有工具栏
.参数 窗口标题, 文本型, 可空, 对话框窗口标题
.参数 过滤器, 文本型, 可空, 格式：“MP3文件(*.mp3)|*.mp3|媒体文件(*.mpg)|*.mpg”
.参数 初始路径, 文本型, 可空, 默认从“我的文档”开始。否则，请给出盘符，如“d:”
.参数 过滤器索引, 整数型, 可空, 
.参数 文件名, 文本型, 可空, 
.参数 文件存在提示, 逻辑型, 可空, 默认真
.参数 标志, 整数型, 可空, 默认524288类似资源管理器;(位或)16帮助按钮,2097152长文件名,32768不能具有只读属性,256允许非法字符,2确认覆盖,1只读
.参数 窗口句柄, 整数型, 可空, 



.子程序 打开文件对话框_M, 文本型, , 有工具栏
.参数 窗口标题, 文本型, 可空, 对话框窗口标题
.参数 过滤器, 文本型, 可空, 格式：“MP3文件(*.mp3)|*.mp3|媒体文件(*.mpg)|*.mpg”
.参数 初始路径, 文本型, 可空, 默认从“我的文档”开始。否则，请给出盘符，如“d:”
.参数 过滤器索引, 整数型, 可空, 
.参数 文件名, 文本型, 可空, 
.参数 文件必须存在, 逻辑型, 可空, 默认真，文件不存在返回空文本
.参数 窗口句柄, 整数型, 可空, 



.子程序 取文件图标2_M, 整数型, , ExtractIconA判断一个可执行文件或DLL中是否有图标存在，并将其提取出来。如果图标索引设为-1，就返回文件中的图标总数
.参数 文件, 文本型, , 
.参数 图标索引, 整数型, 可空, 空,返回图标总数




 ' 不属于任何一个程序集、类模块的函数：
