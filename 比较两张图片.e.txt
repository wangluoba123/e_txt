 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 416
    高度 = 418
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “所用时间：到文本(取启动时间()－开始时间)毫秒”
    帮助文件名 = “”





 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 4 系统核心支持库





.窗口程序集 窗口程序集1, , , 

.程序集变量 开始时间, 整数型, , , 
.子程序 _按钮1_被单击, 空白型, , 
.局部变量 计次, 整数型, , , 
.局部变量 计数, 整数型, , , 
.局部变量 图片号, 整数型, , , 
.局部变量 x轴, 整数型, , , 
.局部变量 y轴, 整数型, , , 
.局部变量 匿名局部变量_76, 空白型, , , 
.局部变量 r红, 整数型, , , 
.局部变量 g绿, 整数型, , , 
.局部变量 b兰, 整数型, , , 
.局部变量 值1, 整数型, , , 
.局部变量 值2, 整数型, , , 

 ' d ＝ 到数值 (编辑框1.内容)
赋值 (开始时间, 取启动时间 ())
赋值 (图片号, 载入图片 (.))
赋值 (x轴, 图片号.取图片宽度 ())
赋值 (y轴, 图片号.取图片高度 ())
卸载图片 (图片号)
.计次循环首 (y轴, 计次)
    .计次循环首 (x轴, 计数)
        赋值 (值1, 计数.取点 (计次))
        赋值 (值2, 计数.取点 (计次))
        
        .如果真 (不等于 (值1, 值2))
            计数.画点 (计次, 值2)
        .如果真结束
        
    .计次循环尾 ()
.计次循环尾 ()
赋值 (_启动窗口., 相加 (“所用时间：”, 到文本 (相减 (取启动时间 (), 开始时间)), “毫秒”))

.子程序 _按钮2_被单击, 空白型, , 
.局部变量 r红, 整数型, , , 原图字集中的红色部分
.局部变量 g绿, 整数型, , , 原图字集中的绿色部分
.局部变量 b兰, 整数型, , , 原图字集中的蓝色部分
.局部变量 x, 整数型, , , 绿颜色处于文件图像的第56位之后,这样从56位开始进行操作,每间隔3位都是处理绿色
.局部变量 y, 整数型, , , 兰颜色处于文件图像的第55位之后,这样从55位开始进行操作,每间隔3位都是处理兰色
.局部变量 z, 整数型, , , 红颜色处于文件图像的第57位之后,这样从57位开始进行操作,每间隔3位都是处理红色
.局部变量 原图字集, 字节集, , , 将原图片作为字节集读入内容中处理
.局部变量 比照字集, 字节集, , , 将比照图片作为字节集读入内容中处理
.局部变量 新图字集, 字节集, , , 将对比后的内容生成到这个内容字节集中,以后再一次性显示
.局部变量 r红1, 整数型, , , 比照图字集中的红色部分
.局部变量 g绿1, 整数型, , , 比照图字集中的绿色部分
.局部变量 b兰1, 整数型, , , 比照图字集中的蓝色部分
.局部变量 纠正位, 整数型, , , 因为图象数据中的每一个扫描行字节数必须为4的倍数，所以对图象宽度进行修正
.局部变量 容错率, 整数型, , , 容错率正值-用于容错率计算,这样对于JPEG类的图片来说可以去除干扰.
.局部变量 负容错率, 整数型, , , 容错率负值-用于容错率计算,范围在0-255之间较好!
.局部变量 计算值, 整数型, , , 将原图三原色数值相加后减去比照图的三原色数值-用于容错率计算

赋值 (开始时间, 取启动时间 ())
赋值 (., {  }) ' 清图片框3中的内容
赋值 (容错率, 到数值 (.)) ' 从编辑框中取得容错率,这样对于JPEG类的图片来说,有一定的容错较好.
赋值 (负容错率, 负 (容错率)) ' 这两个都是容错的前后范围

赋值 (原图字集, .取图片 ()) ' 先将两幅图读为字节集在内存中处理,这样较快速
赋值 (比照字集, .取图片 ()) ' 先将两幅图读为字节集在内存中处理,这样较快速
赋值 (新图字集, .取图片 ()) ' 这里是将结果图片初始化一下.否则会因没有放入数据,数组下标会超出

赋值 (x, 56) ' 绿颜色处于文件图像的第56位之后,这样从56位开始进行操作,每间隔3位都是处理绿色
赋值 (y, 55) ' 兰颜色处于文件图像的第55位之后,这样从55位开始进行操作,每间隔3位都是处理兰色
赋值 (z, 57) ' 红颜色处于文件图像的第57位之后,这样从57位开始进行操作,每间隔3位都是处理红色
赋值 (纠正位, 选择 (等于 (求余数 (相乘 (., 3), 4), 0), 0, 相减 (4, 求余数 (相乘 (., 3), 4)))) ' 利用图像宽度计算纠正位为几个字节
.计次循环首 (., ) ' 字节集的55位后是各扫描行的数据,用图片的高可以得到扫描行的总数
    .计次循环首 (., ) ' 每一个扫描行是由各像素点（三个字节）数据组成，可以用图片的宽度得像素的数目
        赋值 (r红, 原图字集 [z]) ' 在原图中,从第57位开始,每三位读一次,读出的是红色的数据
        赋值 (g绿, 原图字集 [x]) ' 在原图中,从第56位开始,每三位读一次,读出的是绿色的数据
        赋值 (b兰, 原图字集 [y]) ' 在原图中,从第55位开始,每三位读一次,读出的是兰色的数据
        赋值 (r红1, 比照字集 [z]) ' 在比照图中,从第57位开始,每三位读一次,读出的是红色的数据
        赋值 (g绿1, 比照字集 [x]) ' 在比照图中,从第56位开始,每三位读一次,读出的是绿色的数据
        赋值 (b兰1, 比照字集 [y]) ' 在比照图中,从第55位开始,每三位读一次,读出的是兰色的数据
        
        赋值 (计算值, 相减 (相加 (r红, g绿, b兰), 相加 (r红1, g绿1, b兰1)))
        .如果 (或者 (大于 (计算值, 容错率), 小于 (计算值, 负容错率))) ' 比较两张图-原图片与比照图片的三原色各有什么不同,如果不同就显示不同的地方,否则用白颜色填充
            赋值 (新图字集 [z], r红1) ' 新图片取到以上两图不同的地方就取值,以便于显示不同处.这里取的是其中之一颜色
            赋值 (新图字集 [x], g绿1) ' 新图片取到以上两图不同的地方就取值,以便于显示不同处.这里取的是其中之一颜色
            赋值 (新图字集 [y], b兰1) ' 新图片取到以上两图不同的地方就取值,以便于显示不同处.这里取的是其中之一颜色
            
        .否则
            赋值 (新图字集 [z], 255) ' 如果是相同处,就用白颜色填充
            赋值 (新图字集 [x], 255) ' 如果是相同处,就用白颜色填充
            赋值 (新图字集 [y], 255) ' 如果是相同处,就用白颜色填充
        .如果结束
        
        赋值 (x, 相加 (x, 3)) ' 前面已经说了,每间隔三位是一种颜色,现在就是其中一种颜色的位置进3位
        赋值 (y, 相加 (y, 3)) ' 前面已经说了,每间隔三位是一种颜色,现在就是其中一种颜色的位置进3位
        赋值 (z, 相加 (z, 3)) ' 前面已经说了,每间隔三位是一种颜色,现在就是其中一种颜色的位置进3位
        
    .计次循环尾 ()
    赋值 (x, 相加 (x, 纠正位)) ' 因为每一扫描行的字节数必须是4的整数倍，所以加入纠正位
    赋值 (y, 相加 (y, 纠正位)) ' 因为每一扫描行的字节数必须是4的整数倍，所以加入纠正位
    赋值 (z, 相加 (z, 纠正位)) ' 因为每一扫描行的字节数必须是4的整数倍，所以加入纠正位
.计次循环尾 ()
赋值 (., 新图字集) ' 通过上述取到了不同内容的新图片字节集,这时就可以显示出来了,字节集在内容中处理,速度非常快.
赋值 (_启动窗口., 相加 (“所用时间：”, 到文本 (相减 (取启动时间 (), 开始时间)), “毫秒”))

.子程序 _按钮3_被单击, 空白型, , 
赋值 (., {  }) ' 清图片框3中的内容



 ' 不属于任何一个程序集、类模块的函数：
