 ' 文件类型：Windows窗口程序

 ' 程序名称：推箱子 2.2
 ' 程序描述：    推箱子2.2版在以前的基础上增加了无限撤消功能和游戏录像播放功能。

    推箱子2.1版在1.6版的基础上增加了方案管理功能：有了它你就可以自已定制游戏中所用的图片，从而改变游戏的风格。另外还对一些功能进行了优化。将所有用到的资源、图片和地图都用数据库管理起来，使游戏文件更精简。还使用了新的易语言控件：工具条和状态条。      


    推箱子1.6版在1.5版的基础上增加了人工智能:自动寻路程序.
 ' 程序作者：zl
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：zlk6233@21cn.com
 ' 主页地址：
 ' 版权声明：推箱子 2.2是我写的第一个游戏.
如有BUG的话请告诉我.
让大家来一起提高编程水平.


    ZZZZZZZz   Ll
         Zz    Ll
       ZZ      Ll
     zZ        Ll
    zZZZZZZZ   LLLLLL
2002.12.23 增加无限撤消功能和游戏录像播放功能
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 488
    高度 = 534
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = 12632256 '  0xC0C0C0
    最大化按钮 = 假
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “”
    帮助文件名 = “”

窗口 设计窗口
    左边 = 50
    顶边 = 50
    宽度 = 580
    高度 = 447
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = 12632256 '  0xC0C0C0
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “设计关卡”
    帮助文件名 = “”

窗口 关于窗口
    左边 = 50
    顶边 = 50
    宽度 = 217
    高度 = 303
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = 12632256 '  0xC0C0C0
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “”
    帮助文件名 = “”

窗口 选关窗口
    左边 = 50
    顶边 = 50
    宽度 = 246
    高度 = 115
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = 12632256 '  0xC0C0C0
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    背景音乐 =  ' 空
    标题 = “选关”
    帮助文件名 = “”

窗口 方案设计窗口
    左边 = 50
    顶边 = 50
    宽度 = 573
    高度 = 374
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “方案设计”
    帮助文件名 = “”

窗口 选择方案窗口
    左边 = 50
    顶边 = 50
    宽度 = 267
    高度 = 183
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “选择方案”
    帮助文件名 = “”



.图片 设计画板背景图, " ' 已保存到：D:\易语言学习\Data\推箱子.e\设计画板背景图", , 
.图片 背景图, " ' 已保存到：D:\易语言学习\Data\推箱子.e\背景图", , 
.图片 墙图, " ' 已保存到：D:\易语言学习\Data\推箱子.e\墙图", , 
.图片 地板图, " ' 已保存到：D:\易语言学习\Data\推箱子.e\地板图", , 
.图片 黄箱子图, " ' 已保存到：D:\易语言学习\Data\推箱子.e\黄箱子图", , 
.图片 箱子位置图, " ' 已保存到：D:\易语言学习\Data\推箱子.e\箱子位置图", , 
.图片 红箱子图, " ' 已保存到：D:\易语言学习\Data\推箱子.e\红箱子图", , 
.图片 上1, " ' 已保存到：D:\易语言学习\Data\推箱子.e\上1", , 
.图片 上2, " ' 已保存到：D:\易语言学习\Data\推箱子.e\上2", , 
.图片 左1, " ' 已保存到：D:\易语言学习\Data\推箱子.e\左1", , 
.图片 左2, " ' 已保存到：D:\易语言学习\Data\推箱子.e\左2", , 
.图片 右1, " ' 已保存到：D:\易语言学习\Data\推箱子.e\右1", , 
.图片 右2, " ' 已保存到：D:\易语言学习\Data\推箱子.e\右2", , 
.图片 下1, " ' 已保存到：D:\易语言学习\Data\推箱子.e\下1", , 
.图片 下2, " ' 已保存到：D:\易语言学习\Data\推箱子.e\下2", , 
.图片 , , , 
.图片 地图数据, " ' 已保存到：D:\易语言学习\Data\推箱子.e\地图数据", , 
.声音 移动音乐, " ' 已保存到：D:\易语言学习\Data\推箱子.e\移动音乐", , 小人移动
.声音 结束音乐, " ' 已保存到：D:\易语言学习\Data\推箱子.e\结束音乐", , 一局结束
.声音 推箱音乐, " ' 已保存到：D:\易语言学习\Data\推箱子.e\推箱音乐", , 推动箱子
.声音 重来音乐, " ' 已保存到：D:\易语言学习\Data\推箱子.e\重来音乐", , 重新来过
.声音 禁止音乐, " ' 已保存到：D:\易语言学习\Data\推箱子.e\禁止音乐", , 不能移动
.声音 点击音乐, " ' 已保存到：D:\易语言学习\Data\推箱子.e\点击音乐", , 点击菜单
.声音 撤消音乐, " ' 已保存到：D:\易语言学习\Data\推箱子.e\撤消音乐", , 撤消一步
.声音 背景音乐, " ' 已保存到：D:\易语言学习\Data\推箱子.e\背景音乐", , 关于背景音乐
.常量 游戏版本号, "“推箱子2.2”", , 
.常量 数据库名, "“E-BOX”", , 
.常量 方案类型, "“方案类型”", , 
.常量 方案名称, "“方案名称”", , 
.常量 数据1, "“数据1”", , 
.常量 数据2, "“数据2”", , 
.常量 数据3, "“数据3”", , 
.常量 数据4, "“数据4”", , 
.常量 数据5, "“数据5”", , 
.常量 数据6, "“数据6”", , 
.常量 数据7, "“数据7”", , 
.常量 数据8, "“数据8”", , 
.常量 场景方案, "“场景方案”", , 
.常量 小人方案, "“小人方案”", , 
.常量 音乐方案, "“音乐方案”", , 
.常量 游戏地图, "“游戏地图”", , 
.常量 默认方案, "“默认方案”", , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 3 4 系统核心支持库
 ' iext 27bb20fdd3e145e4bee3db39ddd6e64c 1 1 扩展界面支持库一




数据类型 撤消类型, , 
    .成员 x, 整数型, , , 
    .成员 y, 整数型, , , 
    .成员 ifmove, 逻辑型, , , 

数据类型 位置类型, , 
    .成员 x, 整数型, , , 
    .成员 y, 整数型, , , 

数据类型 数据类型2, , 
    .成员 步数, 整数型, , , 
    .成员 位置, 位置类型, , , 
    .成员 方向, 整数型, , , 
    .成员 上一步, 位置类型, , , 

.全局变量 保存标志, 整数型, , , 
.全局变量 背景数组, 整数型, , "14,16", 背景数组
.全局变量 总图片号组, 整数型, , "256", 用来保存游戏中用到的图片的图片号
.全局变量 撤消数组, 撤消类型, , "0", 用来实现多次撤消操作
.全局变量 正在录像中, 逻辑型, , , 
.全局变量 录像播放中, 逻辑型, , , 
.全局变量 录像数组, 整数型, , "0", 
.全局变量 录像地图数据, 字节集, , , 
.全局变量 临时地图数据, 字节集, , , 
.全局变量 第一次画, 逻辑型, , , 
.全局变量 选择关卡, 整数型, , , 
.全局变量 移动音乐, 字节集, , , 
.全局变量 结束音乐, 字节集, , , 
.全局变量 推箱音乐, 字节集, , , 
.全局变量 重来音乐, 字节集, , , 
.全局变量 禁止音乐, 字节集, , , 
.全局变量 点击音乐, 字节集, , , 
.全局变量 撤消音乐, 字节集, , , 
.全局变量 背景音乐, 字节集, , , 
.全局变量 小人方案名, 文本型, , , 
.全局变量 场景方案名, 文本型, , , 
.全局变量 音乐方案名, 文本型, , , 
.全局变量 方案被改变, 逻辑型, , , 

.DLL命令 写配置文件, 整数型, "", "WritePrivateProfileStringA", , 如果配置文件不存在则将被创建
    .参数 小节名, 文本型, , 就是用中括号括起来的内容
    .参数 项目名, 文本型, , 就是等号前边的内容
    .参数 项目值, 文本型, , 就是等号后面的内容
    .参数 文件名, 文本型, , 就是你要写入的那个文件

.DLL命令 读配置整数, 整数型, "", "GetPrivateProfileIntA", , 
    .参数 小节名, 文本型, , 
    .参数 项目名, 文本型, , 
    .参数 默认值, 整数型, , 如果找不到对应的项目则返回该值
    .参数 文件名, 文本型, , 

.DLL命令 运行文件, 整数型, "shell32.dll", "ShellExecuteA", , 
    .参数 hwnd, 整数型, , 
    .参数 lpOperation, 文本型, , "open","print","explore"	
    .参数 lpFile, 文本型, , 
    .参数 pParameters, 文本型, , 
    .参数 lpDirectory, 文本型, , 
    .参数 nShowCmd, 整数型, , 9

.DLL命令 读配置文本, 整数型, "", "GetPrivateProfileStringA", , 备注：该函数返回的值是被读文本的字符个数，实际上该文本被存放在参数“缓冲容器”里面，利用“取文本左边”命令可以得到需要的文本。
    .参数 小节名, 文本型, , 
    .参数 项目名, 文本型, , 
    .参数 默认值, 文本型, , 可以为“”
    .参数 缓冲容器, 文本型, , 一般将容器的大小设定为255
    .参数 缓冲容积, 整数型, , 应与缓冲容器的大小相等255
    .参数 文件名, 文本型, , 

.窗口程序集 启动窗口程序集, , , 

.程序集变量 上步横坐标, 整数型, , , 上一次走的坐标x
.程序集变量 上步纵坐标, 整数型, , , 上一次走的坐标y
.程序集变量 当前横坐标, 整数型, , , 当前位置x
.程序集变量 当前纵坐标, 整数型, , , 当前位置y
.程序集变量 上步箱子移到, 逻辑型, , , 上一次走时是否移动了箱子
.程序集变量 当前目录, 文本型, , , 当前目录
.程序集变量 当前关数, 整数型, , , 当前关数
.程序集变量 错误箱子数, 整数型, , , 未正确放置的箱子数
.程序集变量 小人步数, 整数型, , , 小人走的步数
.程序集变量 行走路径, 整数型, , "0", 小人的自动寻路路径数组
.程序集变量 不自动寻路, 逻辑型, , , 在小人行走时不自动寻路
.程序集变量 行走计数, 整数型, , , 小人行走计数
.程序集变量 声音效果, 逻辑型, , , 是否开启声音效果
.程序集变量 移动音乐开关, 整数型, , , N 0为播放 1为不播放
.子程序 读取文件, 整数型, , 
.局部变量 文件号, 整数型, , , 
.局部变量 循环变量1, 整数型, , , 
.局部变量 循环变量2, 整数型, , , 
.局部变量 字节集长度, 整数型, , , 
.局部变量 变量, 整数型, , , funre
.局部变量 关数名称, 文本型, , , 当前关数
.局部变量 字节集变量, 字节集, , , 
.局部变量 记次变量, 整数型, , , 
.局部变量 地图字节集, 字节集, , , 

赋值 (变量, 1)
赋值 (小人步数, 0)
赋值 (关数名称, 到文本 (当前关数))
跳到 (1)
.如果真 (等于 (查找 (并且 (等于 (读 (#方案类型), #游戏地图), 等于 (读 (#方案名称), 关数名称))), 假))
    如果 (filenum ＝ 1)
    如果真 (加记录 (#游戏地图, “1”, #数据1) ＝ 假)
    funre ＝ 0
    .如果真 (大于 (当前关数, 100))
        赋值 (当前关数, 1)
    .如果真结束
    跳到 (1)
    .如果真 (等于 (查找 (并且 (等于 (读 (#方案类型), #游戏地图), 等于 (读 (#方案名称), 到文本 (当前关数)))), 假))
        赋值 (地图字节集, 取字节集中间 (#地图数据, 相加 (相乘 (相减 (当前关数, 1), 896), 1), 896))
        .如果真 (等于 (加记录 (#游戏地图, 到文本 (当前关数), 地图字节集), 假))
            赋值 (变量, 0)
        .如果真结束
        
    .如果真结束
    
    
.如果真结束
.如果 (不等于 (变量, 0))
    赋值 (错误箱子数, 0)
    赋值 (字节集变量, 读 (#数据1))
    赋值 (字节集长度, 取字节集长度 (字节集变量))
    .如果 (不等于 (字节集长度, 相乘 (224, 4)))
        赋值 (变量, 0)
    .否则
        赋值 (_启动窗口.标题, 相加 (#游戏版本号, “ 你现在推的是”, 到文本 (当前关数), “关”))
        赋值 (记次变量, 0)
        .计次循环首 (14, 循环变量1)
            .计次循环首 (16, 循环变量2)
                赋值 (地图字节集, 取字节集中间 (字节集变量, 相加 (相乘 (记次变量, 4), 1), 4))
                赋值 (背景数组 [循环变量1] [循环变量2], 取字节集数据 (地图字节集, #整数型))
                .判断开始 (或者 (等于 (背景数组 [循环变量1] [循环变量2], 57), 等于 (背景数组 [循环变量1] [循环变量2], 58)))
                    赋值 (当前横坐标, 循环变量1)
                    赋值 (当前纵坐标, 循环变量2)
                .判断 (等于 (背景数组 [循环变量1] [循环变量2], 3))
                    赋值 (错误箱子数, 相加 (错误箱子数, 1))
                .默认
                    
                .判断结束
                赋值 (记次变量, 相加 (记次变量, 1))
            .计次循环尾 ()
        .计次循环尾 ()
    .如果结束
    
.否则
    赋值 (当前关数, 0)
.如果结束
赋值 (.禁止, 真)
0.加入状态 (#禁止)
清除数组 (撤消数组)
赋值 (正在录像中, 假)
赋值 (录像播放中, 假)
赋值 (.禁止, 假)
赋值 (.禁止, 真)
赋值 (.禁止, 真)
赋值 (.禁止, 真)
赋值 (.禁止, 真)
赋值 (.禁止, 真)
赋值 (.禁止, 假)

返回 (变量)
以下是旧程序,不使用
返回 (变量)
赋值 (变量, 1)
赋值 (小人步数, 0)
赋值 (关数名称, 相加 (当前目录, “\bbk\box”, 到文本 (当前关数), “.bbk”))
.如果真 (等于 (文件是否存在 (关数名称), 假))
    .如果 (等于 (当前关数, 1))
        赋值 (变量, 0)
    .否则
        赋值 (当前关数, 1)
        赋值 (关数名称, 相加 (当前目录, “\bbk\box1.bbk”))
        .如果真 (等于 (文件是否存在 (关数名称), 假))
            赋值 (变量, 0)
        .如果真结束
        
    .如果结束
    
.如果真结束
.如果 (不等于 (变量, 0))
    赋值 (错误箱子数, 0)
    赋值 (文件号, 打开文件 (关数名称, #读入, ))
    移到文件首 (文件号)
    赋值 (字节集长度, 取文件长度 (文件号))
    .如果 (不等于 (字节集长度, 相乘 (224, 4)))
        赋值 (变量, 0)
    .否则
        赋值 (_启动窗口.标题, 相加 (#游戏版本号, “ 你现在推的是”, 到文本 (当前关数), “关”))
        .计次循环首 (14, 循环变量1)
            .计次循环首 (16, 循环变量2)
                读入数据 (文件号, 背景数组 [循环变量1] [循环变量2])
                .判断开始 (或者 (等于 (背景数组 [循环变量1] [循环变量2], 57), 等于 (背景数组 [循环变量1] [循环变量2], 58)))
                    赋值 (当前横坐标, 循环变量1)
                    赋值 (当前纵坐标, 循环变量2)
                .判断 (等于 (背景数组 [循环变量1] [循环变量2], 3))
                    赋值 (错误箱子数, 相加 (错误箱子数, 1))
                .默认
                    
                .判断结束
                
            .计次循环尾 ()
        .计次循环尾 ()
    .如果结束
    关闭文件 (文件号)
.否则
    赋值 (当前关数, 0)
.如果结束
赋值 (.禁止, 真)
0.加入状态 (#禁止)

返回 (变量)

.子程序 __启动窗口_创建完毕, 空白型, , 
.局部变量 返回结果, 整数型, , , 
.局部变量 循环变量1, 整数型, , , 
.局部变量 循环变量2, 整数型, , , 
.局部变量 场景方案名长度, 整数型, , , 

.如果真 (等于 (创建数据库 (), 真))
    跳到 (1)
    .如果真 (等于 (查找 (并且 (等于 (读 (#方案类型), #场景方案), 等于 (读 (#方案名称), #默认方案))), 假))
        加记录 (#场景方案, #默认方案, #背景图, #墙图, #地板图, #黄箱子图, #箱子位置图, #红箱子图)
    .如果真结束
    跳到 (1)
    .如果真 (等于 (查找 (并且 (等于 (读 (#方案类型), #小人方案), 等于 (读 (#方案名称), #默认方案))), 假))
        加记录 (#小人方案, #默认方案, #上1, #上2, #下1, #下2, #左1, #左2, #右1, #右2)
    .如果真结束
    跳到 (1)
    .如果真 (等于 (查找 (并且 (等于 (读 (#方案类型), #音乐方案), 等于 (读 (#方案名称), #默认方案))), 假))
        加记录 (#音乐方案, #默认方案, #移动音乐, #结束音乐, #推箱音乐, #重来音乐, #禁止音乐, #点击音乐, #撤消音乐, #背景音乐)
    .如果真结束
    
.如果真结束

赋值 (当前目录, 取当前目录 ())
.如果真 (等于 (倒找文本 (当前目录, “\”, , 真), 取文本长度 (当前目录)))
    赋值 (当前目录, 子文本替换 (当前目录, “\”, “”, 取文本长度 (当前目录), 1, 假))
.如果真结束
赋值 (当前目录, 删尾空 (当前目录))
.如果真 (等于 (是否为调试版 (), 真))
    改变目录 (comdir)
.如果真结束
创建目录 (“bbk”)

赋值 (小人方案名, 取空白文本 (255))
赋值 (场景方案名, 取空白文本 (255))
赋值 (音乐方案名, 取空白文本 (255))
赋值 (场景方案名长度, 读配置文本 (“config”, “ren”, #默认方案, 小人方案名, 255, 相加 (当前目录, “\box.ini”)))
赋值 (小人方案名, 取文本左边 (小人方案名, 场景方案名长度))
.如果真 (等于 (载入图片号 (#小人方案, 小人方案名), 假))
    信息框 (“小人图片载入失败!”, 0, “退出”)
    结束 ()
.如果真结束
 ' 赋值 (场景方案名长度, 读配置文本 (“config”, “gui”, #默认方案, 场景方案名, 255, 相加 (当前目录, “\box.ini”)))
赋值 (场景方案名, 取文本左边 (场景方案名, 场景方案名长度))
.如果真 (等于 (载入图片号 (#场景方案, 场景方案名), 假))
    信息框 (“场景图片载入失败!”, 0, “退出”)
    结束 ()
.如果真结束
赋值 (场景方案名长度, 读配置文本 (“config”, “sound”, #默认方案, 音乐方案名, 255, 相加 (当前目录, “\box.ini”)))
赋值 (音乐方案名, 取文本左边 (音乐方案名, 场景方案名长度))
载入音乐 ()

重定义数组 (背景数组, 假, 14, 16)
画背景 (假)
赋值 (_启动窗口.宽度, 488)
赋值 (上步横坐标, 0)
赋值 (上步纵坐标, 0)
赋值 (当前横坐标, 0)
赋值 (当前纵坐标, 0)
赋值 (当前关数, 读配置整数 (“score”, “lastscore”, 1, 相加 (当前目录, “\box.ini”)))
.如果 (等于 (读配置整数 (“sound”, “sound”, 1, 相加 (当前目录, “\box.ini”)), 1))
    赋值 (声音效果, 真)
.否则
    赋值 (声音效果, 假)
.如果结束
赋值 (.选中, 声音效果)
.如果 (等于 (.选中, 真))
    2.加入状态 (#选中)
.否则
    2.去除状态 (#选中)
.如果结束
赋值 (返回结果, 读取文件 ())
.如果 (等于 (返回结果, 0))
    赋值 (.时钟周期, 0)
    信息框 (“没有可以过的关!”, 0, “一个很严重的问题:”)
    赋值 (当前关数, 0)
.否则
    赋值 (第一次画, 真)
    画背景 (假)
    赋值 (_启动窗口.标题, 相加 (#游戏版本号, “ 你现在推的是第”, 到文本 (当前关数), “关”))
    赋值 (.时钟周期, 500)
.如果结束
播放音乐 (重来音乐, )

.子程序 _时钟1_周期事件, 空白型, , 
赋值 (.时钟周期, 0)
.如果真 (等于 (总图片号组 [相加 (背景数组 [当前横坐标] [当前纵坐标], 1)], 0))
    返回 ()
.如果真结束
.如果 (等于 (求余数 (背景数组 [当前横坐标] [当前纵坐标], 2), 0))
    赋值 (背景数组 [当前横坐标] [当前纵坐标], 相减 (背景数组 [当前横坐标] [当前纵坐标], 1))
.否则
    赋值 (背景数组 [当前横坐标] [当前纵坐标], 相加 (背景数组 [当前横坐标] [当前纵坐标], 1))
.如果结束
总图片号组.画图片 ( [相加 (背景数组 [当前横坐标] [当前纵坐标], 1)], 相乘 (相减 (当前纵坐标, 1), 30), 相乘 (相减 (当前横坐标, 1), 30), 30, 30, 1)
赋值 (.标题, 相加 (“X:”, 到文本 (当前横坐标), “  ”, “Y:”, 到文本 (当前纵坐标)))
0.置文本 (相加 (“X:”, 到文本 (当前横坐标), “  ”, “Y:”, 到文本 (当前纵坐标)))
赋值 (.时钟周期, 500)

.子程序 _撤消_被选择, 空白型, , 单次撤消
.局部变量 循环变量1, 整数型, , , 
.局部变量 循环变量2, 整数型, , , 

赋值 (.时钟周期, 0)
.如果真 (等于 (.禁止, 真))
    _撤消_被选择1 ()
.如果真结束
赋值 (.时钟周期, 500)
返回 ()
.如果真 (等于 (声音效果, 真))
    播放音乐 (撤消音乐, )
.如果真结束
赋值 (.禁止, 真)
0.加入状态 (#禁止)
.判断开始 (等于 (背景数组 [上步横坐标] [上步纵坐标], 2))
    赋值 (背景数组 [上步横坐标] [上步纵坐标], 57)
    画图片 (上步横坐标, 上步纵坐标, 57)
.判断 (等于 (背景数组 [上步横坐标] [上步纵坐标], 4))
    赋值 (背景数组 [上步横坐标] [上步纵坐标], 67)
    画图片 (上步横坐标, 上步纵坐标, 67)
.默认
    返回 ()
.判断结束
赋值 (小人步数, 相减 (小人步数, 1))
赋值 (.标题, 相加 (“你的移动步数为:”, 到文本 (小人步数)))
1.置文本 (相加 (“你的移动步数为:”, 到文本 (小人步数)))
.如果 (等于 (上步箱子移到, 真))
    .判断开始 (并且 (大于或等于 (背景数组 [当前横坐标] [当前纵坐标], 51), 小于或等于 (背景数组 [当前横坐标] [当前纵坐标], 58)))
        赋值 (背景数组 [当前横坐标] [当前纵坐标], 3)
        画图片 (当前横坐标, 当前纵坐标, 3)
    .判断 (并且 (大于或等于 (背景数组 [当前横坐标] [当前纵坐标], 61), 小于或等于 (背景数组 [当前横坐标] [当前纵坐标], 68)))
        赋值 (背景数组 [当前横坐标] [当前纵坐标], 7)
        画图片 (当前横坐标, 当前纵坐标, 7)
    .默认
        
    .判断结束
    
.否则
    .判断开始 (并且 (大于或等于 (背景数组 [当前横坐标] [当前纵坐标], 51), 小于或等于 (背景数组 [当前横坐标] [当前纵坐标], 58)))
        赋值 (背景数组 [当前横坐标] [当前纵坐标], 2)
        画图片 (当前横坐标, 当前纵坐标, 2)
        
    .判断 (并且 (大于或等于 (背景数组 [当前横坐标] [当前纵坐标], 61), 小于或等于 (背景数组 [当前横坐标] [当前纵坐标], 68)))
        赋值 (背景数组 [当前横坐标] [当前纵坐标], 4)
    .默认
        画图片 (当前横坐标, 当前纵坐标, 4)
    .判断结束
    
.如果结束
.如果真 (并且 (等于 (上步横坐标, 当前横坐标), 等于 (上步纵坐标, 相减 (当前纵坐标, 1))))
    .如果真 (等于 (上步箱子移到, 真))
         ' .判断开始 (等于 (背景数组 [当前横坐标] [相加 (当前纵坐标, 1)], 7))
            赋值 (背景数组 [当前横坐标] [相加 (当前纵坐标, 1)], 4)
            画图片 (当前横坐标, 相加 (当前纵坐标, 1), 4)
        .判断 (等于 (背景数组 [当前横坐标] [相加 (当前纵坐标, 1)], 3))
            赋值 (背景数组 [当前横坐标] [相加 (当前纵坐标, 1)], 2)
            画图片 (当前横坐标, 相加 (当前纵坐标, 1), 2)
        .默认
            
        .判断结束
        
    .如果真结束
    
.如果真结束
.如果真 (并且 (等于 (上步横坐标, 当前横坐标), 等于 (上步纵坐标, 相加 (当前纵坐标, 1))))
    .如果真 (等于 (上步箱子移到, 真))
        .判断开始 (等于 (背景数组 [当前横坐标] [相减 (当前纵坐标, 1)], 7))
            赋值 (背景数组 [当前横坐标] [相减 (当前纵坐标, 1)], 4)
            画图片 (当前横坐标, 相减 (当前纵坐标, 1), 4)
        .判断 (等于 (背景数组 [当前横坐标] [相减 (当前纵坐标, 1)], 3))
            赋值 (背景数组 [当前横坐标] [相减 (当前纵坐标, 1)], 2)
            画图片 (当前横坐标, 相减 (当前纵坐标, 1), 2)
        .默认
            
        .判断结束
        
    .如果真结束
    
.如果真结束
.如果真 (并且 (等于 (上步横坐标, 相减 (当前横坐标, 1)), 等于 (上步纵坐标, 当前纵坐标)))
    .如果真 (等于 (上步箱子移到, 真))
        .判断开始 (等于 (背景数组 [相加 (当前横坐标, 1)] [当前纵坐标], 7))
            赋值 (背景数组 [相加 (当前横坐标, 1)] [当前纵坐标], 4)
            画图片 (相加 (当前横坐标, 1), 当前纵坐标, 4)
        .判断 (等于 (背景数组 [相加 (当前横坐标, 1)] [当前纵坐标], 3))
            赋值 (背景数组 [相加 (当前横坐标, 1)] [当前纵坐标], 2)
            画图片 (相加 (当前横坐标, 1), 当前纵坐标, 2)
        .默认
            
        .判断结束
        
    .如果真结束
    
.如果真结束
.如果真 (并且 (等于 (上步横坐标, 相加 (当前横坐标, 1)), 等于 (上步纵坐标, 当前纵坐标)))
    .如果真 (等于 (上步箱子移到, 真))
        .判断开始 (等于 (背景数组 [相减 (当前横坐标, 1)] [当前纵坐标], 7))
            赋值 (背景数组 [相减 (当前横坐标, 1)] [当前纵坐标], 4)
            画图片 (相减 (当前横坐标, 1), 当前纵坐标, 4)
        .判断 (等于 (背景数组 [相减 (当前横坐标, 1)] [当前纵坐标], 3))
            赋值 (背景数组 [相减 (当前横坐标, 1)] [当前纵坐标], 2)
            画图片 (相减 (当前横坐标, 1), 当前纵坐标, 2)
        .默认
            
        .判断结束
        
    .如果真结束
    
.如果真结束
赋值 (当前横坐标, 上步横坐标)
赋值 (当前纵坐标, 上步纵坐标)
赋值 (上步横坐标, 0)
赋值 (上步纵坐标, 0)
赋值 (错误箱子数, 0)
.计次循环首 (14, 循环变量1)
    .计次循环首 (16, 循环变量2)
        .如果真 (等于 (背景数组 [循环变量1] [循环变量2], 3))
            赋值 (错误箱子数, 相加 (错误箱子数, 1))
        .如果真结束
        
    .计次循环尾 ()
.计次循环尾 ()

.子程序 _撤消_被选择1, 空白型, , 多次撤消
.局部变量 循环变量1, 整数型, , , 
.局部变量 循环变量2, 整数型, , , 
.局部变量 记次变量, 整数型, , , 数组成员数

.如果真 (等于 (录像播放中, 真))
    返回 ()
.如果真结束
.如果真 (等于 (声音效果, 真))
    播放音乐 (撤消音乐, )
.如果真结束
赋值 (记次变量, 取数组成员数 (撤消数组))
.如果真 (等于 (记次变量, 0))
    返回 ()
.如果真结束
.如果真 (等于 (记次变量, 1))
    赋值 (.禁止, 真)
    0.加入状态 (#禁止)
.如果真结束
赋值 (上步横坐标, 撤消数组 [记次变量], x)
赋值 (上步纵坐标, 撤消数组 [记次变量], y)
赋值 (上步箱子移到, 撤消数组 [记次变量], ifmove)
.判断开始 (等于 (背景数组 [上步横坐标] [上步纵坐标], 2))
    赋值 (背景数组 [上步横坐标] [上步纵坐标], 57)
    画图片 (上步横坐标, 上步纵坐标, 57)
.判断 (等于 (背景数组 [上步横坐标] [上步纵坐标], 4))
    赋值 (背景数组 [上步横坐标] [上步纵坐标], 67)
    画图片 (上步横坐标, 上步纵坐标, 67)
.默认
    删除成员 (撤消数组, 记次变量, 1)
    .如果真 (等于 (正在录像中, 真))
        删除成员 (录像数组, 取数组成员数 (录像数组), 1)
    .如果真结束
    返回 ()
.判断结束
赋值 (小人步数, 相减 (小人步数, 1))
赋值 (.标题, 相加 (“你的移动步数为:”, 到文本 (小人步数)))
1.置文本 (相加 (“你的移动步数为:”, 到文本 (小人步数)))
.如果 (等于 (上步箱子移到, 真))
    .判断开始 (并且 (大于或等于 (背景数组 [当前横坐标] [当前纵坐标], 51), 小于或等于 (背景数组 [当前横坐标] [当前纵坐标], 58)))
        赋值 (背景数组 [当前横坐标] [当前纵坐标], 3)
        画图片 (当前横坐标, 当前纵坐标, 3)
    .判断 (并且 (大于或等于 (背景数组 [当前横坐标] [当前纵坐标], 61), 小于或等于 (背景数组 [当前横坐标] [当前纵坐标], 68)))
        赋值 (背景数组 [当前横坐标] [当前纵坐标], 7)
        画图片 (当前横坐标, 当前纵坐标, 7)
    .默认
        
    .判断结束
    
.否则
    .判断开始 (并且 (大于或等于 (背景数组 [当前横坐标] [当前纵坐标], 51), 小于或等于 (背景数组 [当前横坐标] [当前纵坐标], 58)))
        赋值 (背景数组 [当前横坐标] [当前纵坐标], 2)
        画图片 (当前横坐标, 当前纵坐标, 2)
        
    .判断 (并且 (大于或等于 (背景数组 [当前横坐标] [当前纵坐标], 61), 小于或等于 (背景数组 [当前横坐标] [当前纵坐标], 68)))
        赋值 (背景数组 [当前横坐标] [当前纵坐标], 4)
    .默认
        画图片 (当前横坐标, 当前纵坐标, 4)
    .判断结束
    
.如果结束
.如果真 (并且 (等于 (上步横坐标, 当前横坐标), 等于 (上步纵坐标, 相减 (当前纵坐标, 1))))
    .如果真 (等于 (上步箱子移到, 真))
        .判断开始 (等于 (背景数组 [当前横坐标] [相加 (当前纵坐标, 1)], 7))
            赋值 (背景数组 [当前横坐标] [相加 (当前纵坐标, 1)], 4)
            画图片 (当前横坐标, 相加 (当前纵坐标, 1), 4)
        .判断 (等于 (背景数组 [当前横坐标] [相加 (当前纵坐标, 1)], 3))
            赋值 (背景数组 [当前横坐标] [相加 (当前纵坐标, 1)], 2)
            画图片 (当前横坐标, 相加 (当前纵坐标, 1), 2)
        .默认
            
        .判断结束
        
    .如果真结束
    
.如果真结束
.如果真 (并且 (等于 (上步横坐标, 当前横坐标), 等于 (上步纵坐标, 相加 (当前纵坐标, 1))))
    .如果真 (等于 (上步箱子移到, 真))
        .判断开始 (等于 (背景数组 [当前横坐标] [相减 (当前纵坐标, 1)], 7))
            赋值 (背景数组 [当前横坐标] [相减 (当前纵坐标, 1)], 4)
            画图片 (当前横坐标, 相减 (当前纵坐标, 1), 4)
        .判断 (等于 (背景数组 [当前横坐标] [相减 (当前纵坐标, 1)], 3))
            赋值 (背景数组 [当前横坐标] [相减 (当前纵坐标, 1)], 2)
            画图片 (当前横坐标, 相减 (当前纵坐标, 1), 2)
        .默认
            
        .判断结束
        
    .如果真结束
    
.如果真结束
.如果真 (并且 (等于 (上步横坐标, 相减 (当前横坐标, 1)), 等于 (上步纵坐标, 当前纵坐标)))
    .如果真 (等于 (上步箱子移到, 真))
        .判断开始 (等于 (背景数组 [相加 (当前横坐标, 1)] [当前纵坐标], 7))
            赋值 (背景数组 [相加 (当前横坐标, 1)] [当前纵坐标], 4)
            画图片 (相加 (当前横坐标, 1), 当前纵坐标, 4)
        .判断 (等于 (背景数组 [相加 (当前横坐标, 1)] [当前纵坐标], 3))
            赋值 (背景数组 [相加 (当前横坐标, 1)] [当前纵坐标], 2)
            画图片 (相加 (当前横坐标, 1), 当前纵坐标, 2)
        .默认
            
        .判断结束
        
    .如果真结束
    
.如果真结束
.如果真 (并且 (等于 (上步横坐标, 相加 (当前横坐标, 1)), 等于 (上步纵坐标, 当前纵坐标)))
    .如果真 (等于 (上步箱子移到, 真))
        .判断开始 (等于 (背景数组 [相减 (当前横坐标, 1)] [当前纵坐标], 7))
            赋值 (背景数组 [相减 (当前横坐标, 1)] [当前纵坐标], 4)
            画图片 (相减 (当前横坐标, 1), 当前纵坐标, 4)
        .判断 (等于 (背景数组 [相减 (当前横坐标, 1)] [当前纵坐标], 3))
            赋值 (背景数组 [相减 (当前横坐标, 1)] [当前纵坐标], 2)
            画图片 (相减 (当前横坐标, 1), 当前纵坐标, 2)
        .默认
            
        .判断结束
        
    .如果真结束
    
.如果真结束
赋值 (当前横坐标, 上步横坐标)
赋值 (当前纵坐标, 上步纵坐标)
赋值 (上步横坐标, 0)
赋值 (上步纵坐标, 0)
赋值 (错误箱子数, 0)
删除成员 (撤消数组, 记次变量, 1)
.如果真 (等于 (正在录像中, 真))
    删除成员 (录像数组, 取数组成员数 (录像数组), 1)
.如果真结束
.计次循环首 (14, 循环变量1)
    .计次循环首 (16, 循环变量2)
        .如果真 (等于 (背景数组 [循环变量1] [循环变量2], 3))
            赋值 (错误箱子数, 相加 (错误箱子数, 1))
        .如果真结束
        
    .计次循环尾 ()
.计次循环尾 ()

.子程序 _重来_被选择, 空白型, , 
.如果真 (等于 (声音效果, 真))
    播放音乐 (重来音乐, )
.如果真结束
赋值 (小人步数, 0)
赋值 (.标题, 相加 (“你的移动步数为:”, 到文本 (小人步数)))
1.置文本 (相加 (“你的移动步数为:”, 到文本 (小人步数)))
赋值 (上步横坐标, 0)
赋值 (上步纵坐标, 0)
赋值 (当前横坐标, 0)
赋值 (当前纵坐标, 0)
读取文件 ()
赋值 (第一次画, 真)
画背景 (假)

.子程序 __启动窗口_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (等于 (声音效果, 真))
    播放音乐 (点击音乐, )
.如果真结束
重来.禁止 ＝ 假
撤消.禁止 ＝ 真
工具条1.加入状态 (0, #禁止)
.如果真 (不等于 (上步横坐标, 0))
    撤消.禁止 ＝ 假
    工具条1.加入状态 (0,0)
    
.如果真结束


.子程序 _帮助文件_被选择, 空白型, , 
运行文件 (0, “open”, 相加 (当前目录, “\box.chm”), “”, “”, 9)

.子程序 _声音_被选择, 空白型, , 
赋值 (声音效果, 取反 (声音效果))
赋值 (.选中, 声音效果)
.如果 (等于 (.选中, 真))
    2.加入状态 (#选中)
.否则
    2.去除状态 (#选中)
.如果结束


.子程序 _退出_被选择, 空白型, , 
卸载图片号 ()
.如果真 (等于 (小人方案名, “”))
    赋值 (小人方案名, #默认方案)
.如果真结束
.如果真 (等于 (音乐方案名, “”))
    赋值 (音乐方案名, #默认方案)
.如果真结束
.如果真 (等于 (场景方案名, “”))
    赋值 (场景方案名, #默认方案)
.如果真结束
写配置文件 (“score”, “lastscore”, 到文本 (当前关数), 相加 (当前目录, “\box.ini”))
写配置文件 (“config”, “ren”, 小人方案名, 相加 (当前目录, “\box.ini”))
写配置文件 (“config”, “sound”, 音乐方案名, 相加 (当前目录, “\box.ini”))
写配置文件 (“config”, “gui”, 场景方案名, 相加 (当前目录, “\box.ini”))
.如果 (等于 (声音效果, 真))
    写配置文件 (“sound”, “sound”, “1”, 相加 (当前目录, “\box.ini”))
.否则
    写配置文件 (“sound”, “sound”, “0”, 相加 (当前目录, “\box.ini”))
.如果结束
关闭 ()
结束 ()

.子程序 _新的想法_被选择, 空白型, , 
载入 (设计窗口, , 真)
.如果真 (并且 (等于 (保存标志, 2), 等于 (当前关数, 0)))
    赋值 (当前关数, 相加 (当前关数, 1))
    赋值 (上步横坐标, 0)
    赋值 (上步纵坐标, 0)
    赋值 (当前横坐标, 0)
    赋值 (当前纵坐标, 0)
    读取文件 ()
    赋值 (第一次画, 真)
    画背景 (假)
    赋值 (_启动窗口.标题, 相加 (#游戏版本号, “ 你现在推的是”, 到文本 (当前关数), “关”))
.如果真结束


.子程序 _编辑方案_被选择, 空白型, , 
载入 (方案设计窗口, , 真)

.子程序 _选择方案_被选择, 空白型, , 
载入 (选择方案窗口, , 真)
.如果真 (等于 (方案被改变, 真))
    卸载图片号 ()
    载入图片号 (#小人方案, 小人方案名)
    载入图片号 (#场景方案, 场景方案名)
    载入音乐 ()
    画背景 (假)
.如果真结束


.子程序 __启动窗口_将被销毁, 空白型, , 
赋值 (.时钟周期, 0)
_退出_被选择 ()

.子程序 _关于_被选择, 空白型, , 
载入 (关于窗口, , 真)

.子程序 _选关_被选择, 空白型, , 
赋值 (选择关卡, 当前关数)
载入 (选关窗口, , 真)
.如果真 (等于 (选择关卡, 当前关数))
    返回 ()
.如果真结束
赋值 (当前关数, 选择关卡)
赋值 (小人步数, 0)
赋值 (.标题, 相加 (“你的移动步数为:”, 到文本 (小人步数)))
1.置文本 (相加 (“你的移动步数为:”, 到文本 (小人步数)))
赋值 (上步横坐标, 0)
赋值 (上步纵坐标, 0)
赋值 (当前横坐标, 0)
赋值 (当前纵坐标, 0)
读取文件 ()
赋值 (第一次画, 真)
画背景 (假)

.子程序 __启动窗口_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 步数配置变量, 整数型, , , bestmove
.局部变量 上下光标键, 整数型, , , xflag
.局部变量 左右光标键, 整数型, , , 
.局部变量 位置, 撤消类型, , , 

.判断开始 (等于 (键代码, #左光标键))
    赋值 (上下光标键, 0)
    赋值 (左右光标键, -1)
.判断 (等于 (键代码, #上光标键))
    赋值 (上下光标键, -1)
    赋值 (左右光标键, 0)
.判断 (等于 (键代码, #右光标键))
    赋值 (上下光标键, 0)
    赋值 (左右光标键, 1)
.判断 (等于 (键代码, #下光标键))
    赋值 (上下光标键, 1)
    赋值 (左右光标键, 0)
.默认
    .如果真 (等于 (声音效果, 真))
        播放音乐 (点击音乐, )
    .如果真结束
    返回 (真)
.判断结束
.如果真 (等于 (.禁止, 假))
    返回 (真)
.如果真结束
赋值 (上步箱子移到, 假)
.判断开始 (等于 (背景数组 [相加 (当前横坐标, 上下光标键)] [相加 (当前纵坐标, 左右光标键)], 2))
    .如果真 (等于 (声音效果, 真))
        .如果真 (等于 (移动音乐开关, 0))
            播放音乐 (移动音乐, 真)
        .如果真结束
        
    .如果真结束
    赋值 (背景数组 [相加 (当前横坐标, 上下光标键)] [相加 (当前纵坐标, 左右光标键)], 相加 (54, 相乘 (3, 上下光标键), 左右光标键))
    画图片 (相加 (当前横坐标, 上下光标键), 相加 (当前纵坐标, 左右光标键), 相加 (54, 相乘 (3, 上下光标键), 左右光标键))
    .判断开始 (并且 (大于或等于 (背景数组 [当前横坐标] [当前纵坐标], 51), 小于或等于 (背景数组 [当前横坐标] [当前纵坐标], 58)))
        赋值 (背景数组 [当前横坐标] [当前纵坐标], 2)
        画图片 (当前横坐标, 当前纵坐标, 2)
    .判断 (并且 (大于或等于 (背景数组 [当前横坐标] [当前纵坐标], 61), 小于或等于 (背景数组 [当前横坐标] [当前纵坐标], 68)))
        赋值 (背景数组 [当前横坐标] [当前纵坐标], 4)
        画图片 (当前横坐标, 当前纵坐标, 4)
    .默认
        
    .判断结束
    赋值 (上步箱子移到, 假)
.判断 (等于 (背景数组 [相加 (当前横坐标, 上下光标键)] [相加 (当前纵坐标, 左右光标键)], 4))
    .如果真 (等于 (声音效果, 真))
        .如果真 (等于 (移动音乐开关, 0))
            播放音乐 (移动音乐, 真)
        .如果真结束
        
    .如果真结束
    赋值 (背景数组 [相加 (当前横坐标, 上下光标键)] [相加 (当前纵坐标, 左右光标键)], 相加 (64, 相乘 (3, 上下光标键), 左右光标键))
    画图片 (相加 (当前横坐标, 上下光标键), 相加 (当前纵坐标, 左右光标键), 相加 (64, 相乘 (3, 上下光标键), 左右光标键))
    .判断开始 (并且 (大于或等于 (背景数组 [当前横坐标] [当前纵坐标], 51), 小于或等于 (背景数组 [当前横坐标] [当前纵坐标], 58)))
        赋值 (背景数组 [当前横坐标] [当前纵坐标], 2)
        画图片 (当前横坐标, 当前纵坐标, 2)
    .判断 (并且 (大于或等于 (背景数组 [当前横坐标] [当前纵坐标], 61), 小于或等于 (背景数组 [当前横坐标] [当前纵坐标], 68)))
        赋值 (背景数组 [当前横坐标] [当前纵坐标], 4)
        画图片 (当前横坐标, 当前纵坐标, 4)
    .默认
        
    .判断结束
    赋值 (上步箱子移到, 假)
.判断 (等于 (背景数组 [相加 (当前横坐标, 上下光标键)] [相加 (当前纵坐标, 左右光标键)], 3))
    .判断开始 (等于 (背景数组 [相加 (当前横坐标, 上下光标键, 上下光标键)] [相加 (当前纵坐标, 左右光标键, 左右光标键)], 2))
        .如果真 (等于 (声音效果, 真))
            播放音乐 (推箱音乐, )
        .如果真结束
        赋值 (背景数组 [相加 (当前横坐标, 上下光标键, 上下光标键)] [相加 (当前纵坐标, 左右光标键, 左右光标键)], 3)
        画图片 (相加 (当前横坐标, 上下光标键, 上下光标键), 相加 (当前纵坐标, 左右光标键, 左右光标键), 3)
        赋值 (背景数组 [相加 (当前横坐标, 上下光标键)] [相加 (当前纵坐标, 左右光标键)], 相加 (54, 相乘 (3, 上下光标键), 左右光标键))
        画图片 (相加 (当前横坐标, 上下光标键), 相加 (当前纵坐标, 左右光标键), 相加 (54, 相乘 (3, 上下光标键), 左右光标键))
        .判断开始 (并且 (大于或等于 (背景数组 [当前横坐标] [当前纵坐标], 51), 小于或等于 (背景数组 [当前横坐标] [当前纵坐标], 58)))
            赋值 (背景数组 [当前横坐标] [当前纵坐标], 2)
            画图片 (当前横坐标, 当前纵坐标, 2)
        .判断 (并且 (大于或等于 (背景数组 [当前横坐标] [当前纵坐标], 61), 小于或等于 (背景数组 [当前横坐标] [当前纵坐标], 68)))
            赋值 (背景数组 [当前横坐标] [当前纵坐标], 4)
            画图片 (当前横坐标, 当前纵坐标, 4)
        .默认
            
        .判断结束
        赋值 (上步箱子移到, 真)
    .判断 (等于 (背景数组 [相加 (当前横坐标, 上下光标键, 上下光标键)] [相加 (当前纵坐标, 左右光标键, 左右光标键)], 4))
        .如果真 (等于 (声音效果, 真))
            播放音乐 (推箱音乐, )
        .如果真结束
        赋值 (背景数组 [相加 (当前横坐标, 上下光标键, 上下光标键)] [相加 (当前纵坐标, 左右光标键, 左右光标键)], 7)
        画图片 (相加 (当前横坐标, 上下光标键, 上下光标键), 相加 (当前纵坐标, 左右光标键, 左右光标键), 7)
        赋值 (背景数组 [相加 (当前横坐标, 上下光标键)] [相加 (当前纵坐标, 左右光标键)], 相加 (54, 相乘 (3, 上下光标键), 左右光标键))
        画图片 (相加 (当前横坐标, 上下光标键), 相加 (当前纵坐标, 左右光标键), 相加 (54, 相乘 (3, 上下光标键), 左右光标键))
        赋值 (错误箱子数, 相减 (错误箱子数, 1))
        .判断开始 (并且 (大于或等于 (背景数组 [当前横坐标] [当前纵坐标], 51), 小于或等于 (背景数组 [当前横坐标] [当前纵坐标], 58)))
            赋值 (背景数组 [当前横坐标] [当前纵坐标], 2)
            画图片 (当前横坐标, 当前纵坐标, 2)
        .判断 (并且 (大于或等于 (背景数组 [当前横坐标] [当前纵坐标], 61), 小于或等于 (背景数组 [当前横坐标] [当前纵坐标], 68)))
            赋值 (背景数组 [当前横坐标] [当前纵坐标], 4)
            画图片 (当前横坐标, 当前纵坐标, 4)
            
        .默认
            
        .判断结束
        赋值 (上步箱子移到, 真)
    .默认
        .如果真 (等于 (声音效果, 真))
            播放音乐 (禁止音乐, )
        .如果真结束
        赋值 (上下光标键, 0)
        赋值 (左右光标键, 0)
    .判断结束
    
.判断 (等于 (背景数组 [相加 (当前横坐标, 上下光标键)] [相加 (当前纵坐标, 左右光标键)], 7))
    .判断开始 (等于 (背景数组 [相加 (当前横坐标, 上下光标键, 上下光标键)] [相加 (当前纵坐标, 左右光标键, 左右光标键)], 2))
        .如果真 (等于 (声音效果, 真))
            播放音乐 (推箱音乐, )
        .如果真结束
        赋值 (背景数组 [相加 (当前横坐标, 上下光标键, 上下光标键)] [相加 (当前纵坐标, 左右光标键, 左右光标键)], 3)
        画图片 (相加 (当前横坐标, 上下光标键, 上下光标键), 相加 (当前纵坐标, 左右光标键, 左右光标键), 3)
        赋值 (背景数组 [相加 (当前横坐标, 上下光标键)] [相加 (当前纵坐标, 左右光标键)], 相加 (64, 相乘 (3, 上下光标键), 左右光标键))
        画图片 (相加 (当前横坐标, 上下光标键), 相加 (当前纵坐标, 左右光标键), 相加 (64, 相乘 (3, 上下光标键), 左右光标键))
        赋值 (错误箱子数, 相加 (错误箱子数, 1))
        .判断开始 (并且 (大于或等于 (背景数组 [当前横坐标] [当前纵坐标], 51), 小于或等于 (背景数组 [当前横坐标] [当前纵坐标], 58)))
            赋值 (背景数组 [当前横坐标] [当前纵坐标], 2)
            画图片 (当前横坐标, 当前纵坐标, 2)
        .判断 (并且 (大于或等于 (背景数组 [当前横坐标] [当前纵坐标], 61), 小于或等于 (背景数组 [当前横坐标] [当前纵坐标], 68)))
            赋值 (背景数组 [当前横坐标] [当前纵坐标], 4)
            画图片 (当前横坐标, 当前纵坐标, 4)
        .默认
            
        .判断结束
        赋值 (上步箱子移到, 真)
    .判断 (等于 (背景数组 [相加 (当前横坐标, 上下光标键, 上下光标键)] [相加 (当前纵坐标, 左右光标键, 左右光标键)], 4))
        .如果真 (等于 (声音效果, 真))
            播放音乐 (推箱音乐, )
        .如果真结束
        赋值 (背景数组 [相加 (当前横坐标, 上下光标键, 上下光标键)] [相加 (当前纵坐标, 左右光标键, 左右光标键)], 7)
        画图片 (相加 (当前横坐标, 上下光标键, 上下光标键), 相加 (当前纵坐标, 左右光标键, 左右光标键), 7)
        赋值 (背景数组 [相加 (当前横坐标, 上下光标键)] [相加 (当前纵坐标, 左右光标键)], 相加 (64, 相乘 (3, 上下光标键), 左右光标键))
        画图片 (相加 (当前横坐标, 上下光标键), 相加 (当前纵坐标, 左右光标键), 相加 (64, 相乘 (3, 上下光标键), 左右光标键))
        .判断开始 (并且 (大于或等于 (背景数组 [当前横坐标] [当前纵坐标], 51), 小于或等于 (背景数组 [当前横坐标] [当前纵坐标], 58)))
            赋值 (背景数组 [当前横坐标] [当前纵坐标], 2)
            画图片 (当前横坐标, 当前纵坐标, 2)
        .判断 (并且 (大于或等于 (背景数组 [当前横坐标] [当前纵坐标], 61), 小于或等于 (背景数组 [当前横坐标] [当前纵坐标], 68)))
            赋值 (背景数组 [当前横坐标] [当前纵坐标], 4)
            画图片 (当前横坐标, 当前纵坐标, 4)
        .默认
            
        .判断结束
        赋值 (上步箱子移到, 真)
    .默认
        .如果真 (等于 (声音效果, 真))
            播放音乐 (禁止音乐, )
        .如果真结束
        赋值 (上下光标键, 0)
        赋值 (左右光标键, 0)
    .判断结束
    
.默认
    .如果真 (等于 (声音效果, 真))
        播放音乐 (禁止音乐, )
    .如果真结束
    赋值 (上下光标键, 0)
    赋值 (左右光标键, 0)
.判断结束
赋值 (上步横坐标, 当前横坐标)
赋值 (上步纵坐标, 当前纵坐标)
赋值 (当前横坐标, 相加 (当前横坐标, 上下光标键))
赋值 (当前纵坐标, 相加 (当前纵坐标, 左右光标键))
赋值 (位置., 上步横坐标)
赋值 (位置., 上步纵坐标)
赋值 (位置.ifmove, 上步箱子移到)
.如果真 (等于 (.禁止, 真))
    .如果真 (等于 (录像播放中, 假))
        加入成员 (撤消数组, 位置)
    .如果真结束
    
.如果真结束
.如果真 (等于 (正在录像中, 真))
    加入成员 (录像数组, 键代码)
.如果真结束
赋值 (.标题, 相加 (“X:”, 到文本 (当前横坐标), “  ”, “Y:”, 到文本 (当前纵坐标)))
0.置文本 (相加 (“X:”, 到文本 (当前横坐标), “  ”, “Y:”, 到文本 (当前纵坐标)))
输出调试文本 (到文本 (lastx) ＋ 字符 (9) ＋ 到文本 (lasty))
输出调试文本 (到文本 (localx) ＋ 字符 (9) ＋ 到文本 (localy) ＋ #换行符)
赋值 (.时钟周期, 0)
赋值 (小人步数, 相加 (小人步数, 取绝对值 (相加 (上下光标键, 左右光标键))))
赋值 (.标题, 相加 (“你的移动步数为:”, 到文本 (小人步数)))
1.置文本 (相加 (“你的移动步数为:”, 到文本 (小人步数)))
赋值 (.禁止, 假)
0.去除状态 (#禁止)
赋值 (移动音乐开关, 1)
.如果 (并且 (等于 (错误箱子数, 0), 等于 (正在录像中, 假), 等于 (录像播放中, 假)))
    .如果真 (等于 (声音效果, 真))
        播放音乐 (结束音乐, )
    .如果真结束
    赋值 (步数配置变量, 读配置整数 (“box”, 相加 (“box”, 到文本 (当前关数)), 0, 相加 (当前目录, “\box.ini”)))
    .如果 (或者 (小于 (小人步数, 步数配置变量), 等于 (步数配置变量, 0)))
        写配置文件 (“box”, 相加 (“box”, 到文本 (当前关数)), 到文本 (小人步数), 相加 (当前目录, “\box.ini”))
        信息框 (“你做的真不错!我佩服你!继续努力吧!”, 0, “恭喜”)
    .否则
        .如果 (等于 (小人步数, 步数配置变量))
            信息框 (“你这次的成绩和上次一样，继续努力吧!”, 0, “没进步”)
        .否则
            信息框 (“你还要继续锻炼!一定要打破以前的记录!”, 0, “你的成绩......”)
        .如果结束
        
    .如果结束
    赋值 (小人步数, 0)
    赋值 (.标题, 相加 (“你的移动步数为:”, 到文本 (小人步数)))
    1.置文本 (相加 (“你的移动步数为:”, 到文本 (小人步数)))
    赋值 (当前关数, 相加 (当前关数, 1))
    赋值 (上步横坐标, 0)
    赋值 (上步纵坐标, 0)
    赋值 (当前横坐标, 0)
    赋值 (当前纵坐标, 0)
    读取文件 ()
    赋值 (第一次画, 真)
    画背景 (假)
.否则
    赋值 (.时钟周期, 500)
.如果结束


.子程序 获取移动路径, 逻辑型, , 已 OK!    2001.11.30.00:10 "程序配制"还未更新
.参数 当前x, 整数型, , 
.参数 当前y, 整数型, , 
.参数 目标x, 整数型, , 
.参数 目标y, 整数型, , 

.局部变量 地图数据, 数据类型2, , "14,16", 探索路径时用的临时地图
.局部变量 节点1, 整数型, , "0", 保存每次找到的节点
.局部变量 节点2, 整数型, , "0", 保存每次找到的节点
.局部变量 数量, 整数型, , , 
.局部变量 完成, 逻辑型, , , 是否已经完成探索
.局部变量 步数, 整数型, , , 当前步数
.局部变量 变量1, 整数型, , , 
.局部变量 变量2, 整数型, , , 
.局部变量 循环变量1, 整数型, , , 
.局部变量 循环变量2, 整数型, , , 
.局部变量 最大次数, 整数型, , , 要搜索的最大次数

.如果真 (大于 (取数组成员数 (行走路径), 0))
    返回 (假)
.如果真结束
.如果真 (等于 (不自动寻路, 真))
    返回 (假)
.如果真结束
.如果真 (并且 (等于 (当前x, 目标x), 等于 (当前y, 目标y)))
    返回 (假)
.如果真结束
.如果真 (或者 (大于 (目标x, 14), 大于 (目标y, 16)))
    返回 (假)
.如果真结束
赋值 (完成, 假)

赋值 (最大次数, 0)
.计次循环首 (14, 循环变量1)
    .计次循环首 (16, 循环变量2)
        .如果真 (或者 (等于 (背景数组 [循环变量1] [循环变量2], 0), 等于 (背景数组 [循环变量1] [循环变量2], 1)))
            赋值 (最大次数, 相加 (最大次数, 1))
        .如果真结束
        
    .计次循环尾 ()
.计次循环尾 ()
赋值 (最大次数, 相减 (相乘 (14, 16), 最大次数))
清除数组 (节点1)
清除数组 (节点2)
加入成员 (节点1, 当前x)
加入成员 (节点2, 当前y)
赋值 (地图数据 [当前x] [当前y], 步数, 99999)
赋值 (地图数据 [当前x] [当前y], 位置., 节点1 [1])
赋值 (地图数据 [当前x] [当前y], 位置., 节点2 [1])
map [p1 [rq1] ＋ 1] [p2 [rq1]].方向 ＝ #下光标键
赋值 (地图数据 [当前x] [当前y], 上一步., 节点1 [1])
赋值 (地图数据 [当前x] [当前y], 上一步., 节点2 [1])
赋值 (步数, 1)

.计次循环首 (最大次数, 变量1)
    赋值 (数量, 取数组成员数 (节点1))
    .计次循环首 (数量, 变量2)
        .如果真 (或者 (等于 (背景数组 [相加 (节点1 [变量2], 1)] [节点2] [变量2], 2), 等于 (背景数组 [相加 (节点1 [变量2], 1)] [节点2] [变量2], 4)))
            .如果真 (等于 (地图数据 [相加 (节点1 [变量2], 1)] [节点2] [变量2], 步数, 0))
                加入成员 (节点1, 相加 (节点1 [变量2], 1))
                加入成员 (节点2, 节点2 [变量2])
                赋值 (地图数据 [相加 (节点1 [变量2], 1)] [节点2] [变量2], 步数, 步数)
                赋值 (地图数据 [相加 (节点1 [变量2], 1)] [节点2] [变量2], 位置., 节点1 [变量2])
                赋值 (地图数据 [相加 (节点1 [变量2], 1)] [节点2] [变量2], 位置., 节点2 [变量2])
                赋值 (地图数据 [相加 (节点1 [变量2], 1)] [节点2] [变量2], 方向, #下光标键)
                赋值 (地图数据 [相加 (节点1 [变量2], 1)] [节点2] [变量2], 上一步., 节点1 [变量2])
                赋值 (地图数据 [相加 (节点1 [变量2], 1)] [节点2] [变量2], 上一步., 节点2 [变量2])
                画板1.定位写出 ((p2 [rq1] － 1) × 30, (p1 [rq1] ＋ 1 － 1) × 30, step)
            .如果真结束
            .如果真 (并且 (等于 (目标x, 相加 (节点1 [变量2], 1)), 等于 (目标y, 节点2 [变量2])))
                赋值 (完成, 真)
                跳出循环 ()
            .如果真结束
            
        .如果真结束
        .如果真 (或者 (等于 (背景数组 [相减 (节点1 [变量2], 1)] [节点2] [变量2], 2), 等于 (背景数组 [相减 (节点1 [变量2], 1)] [节点2] [变量2], 4)))
            .如果真 (等于 (地图数据 [相减 (节点1 [变量2], 1)] [节点2] [变量2], 步数, 0))
                加入成员 (节点1, 相减 (节点1 [变量2], 1))
                加入成员 (节点2, 节点2 [变量2])
                赋值 (地图数据 [相减 (节点1 [变量2], 1)] [节点2] [变量2], 步数, 步数)
                赋值 (地图数据 [相减 (节点1 [变量2], 1)] [节点2] [变量2], 位置., 相减 (节点1 [变量2], 1))
                赋值 (地图数据 [相减 (节点1 [变量2], 1)] [节点2] [变量2], 位置., 节点2 [变量2])
                赋值 (地图数据 [相减 (节点1 [变量2], 1)] [节点2] [变量2], 方向, #上光标键)
                赋值 (地图数据 [相减 (节点1 [变量2], 1)] [节点2] [变量2], 上一步., 节点1 [变量2])
                赋值 (地图数据 [相减 (节点1 [变量2], 1)] [节点2] [变量2], 上一步., 节点2 [变量2])
                画板1.定位写出 ((p2 [rq1] － 1) × 30, (p1 [rq1] － 1 － 1) × 30, step)
            .如果真结束
            .如果真 (并且 (等于 (目标x, 相减 (节点1 [变量2], 1)), 等于 (目标y, 节点2 [变量2])))
                赋值 (完成, 真)
                跳出循环 ()
            .如果真结束
            
        .如果真结束
        .如果真 (或者 (等于 (背景数组 [节点1] [变量2] [相加 (节点2 [变量2], 1)], 2), 等于 (背景数组 [节点1] [变量2] [相加 (节点2 [变量2], 1)], 4)))
            .如果真 (等于 (地图数据 [节点1] [变量2] [相加 (节点2 [变量2], 1)].步数, 0))
                加入成员 (节点1, 节点1 [变量2])
                加入成员 (节点2, 相加 (节点2 [变量2], 1))
                赋值 (地图数据 [节点1] [变量2] [相加 (节点2 [变量2], 1)].步数, 步数)
                赋值 (地图数据 [节点1] [变量2] [相加 (节点2 [变量2], 1)].位置., 节点1 [变量2])
                赋值 (地图数据 [节点1] [变量2] [相加 (节点2 [变量2], 1)].位置., 相加 (节点2 [变量2], 1))
                赋值 (地图数据 [节点1] [变量2] [相加 (节点2 [变量2], 1)].方向, #右光标键)
                赋值 (地图数据 [节点1] [变量2] [相加 (节点2 [变量2], 1)].上一步., 节点1 [变量2])
                赋值 (地图数据 [节点1] [变量2] [相加 (节点2 [变量2], 1)].上一步., 节点2 [变量2])
                画板1.定位写出 ((p2 [rq1] － 1 ＋ 1) × 30, (p1 [rq1] － 1) × 30, step)
            .如果真结束
            .如果真 (并且 (等于 (目标x, 节点1 [变量2]), 等于 (目标y, 相加 (节点2 [变量2], 1))))
                赋值 (完成, 真)
                跳出循环 ()
            .如果真结束
            
        .如果真结束
        .如果真 (或者 (等于 (背景数组 [节点1] [变量2] [相减 (节点2 [变量2], 1)], 2), 等于 (背景数组 [节点1] [变量2] [相减 (节点2 [变量2], 1)], 4)))
            .如果真 (等于 (地图数据 [节点1] [变量2] [相减 (节点2 [变量2], 1)].步数, 0))
                加入成员 (节点1, 节点1 [变量2])
                加入成员 (节点2, 相减 (节点2 [变量2], 1))
                赋值 (地图数据 [节点1] [变量2] [相减 (节点2 [变量2], 1)].步数, 步数)
                赋值 (地图数据 [节点1] [变量2] [相减 (节点2 [变量2], 1)].位置., 节点1 [变量2])
                赋值 (地图数据 [节点1] [变量2] [相减 (节点2 [变量2], 1)].位置., 相减 (节点2 [变量2], 1))
                赋值 (地图数据 [节点1] [变量2] [相减 (节点2 [变量2], 1)].方向, #左光标键)
                赋值 (地图数据 [节点1] [变量2] [相减 (节点2 [变量2], 1)].上一步., 节点1 [变量2])
                赋值 (地图数据 [节点1] [变量2] [相减 (节点2 [变量2], 1)].上一步., 节点2 [变量2])
                画板1.定位写出 ((p2 [rq1] － 1 － 1) × 30, (p1 [rq1] － 1) × 30, step)
            .如果真结束
            .如果真 (并且 (等于 (目标x, 节点1 [变量2]), 等于 (目标y, 相减 (节点2 [变量2], 1))))
                赋值 (完成, 真)
                跳出循环 ()
            .如果真结束
            
        .如果真结束
        
    .计次循环尾 ()
    删除成员 (节点1, 1, 数量) ' 删除旧节点
    删除成员 (节点2, 1, 数量)
    .如果真 (或者 (等于 (取数组成员数 (节点1), 0), 等于 (完成, 真)))
        跳出循环 ()
    .如果真结束
    赋值 (步数, 相加 (步数, 1))
.计次循环尾 ()

.如果 (等于 (完成, 真))
    倒推出小人的行走路径
    重定义数组 (行走路径, 假, 步数)
    赋值 (行走路径 [步数], 地图数据 [目标x] [目标y], 方向)
    赋值 (变量2, 目标x)
    赋值 (目标x, 地图数据 [变量2] [目标y], 上一步.)
    赋值 (目标y, 地图数据 [变量2] [目标y], 上一步.)
    .变量循环首 (相减 (步数, 1), 1, -1, 变量1)
        .如果真 (等于 (地图数据 [目标x] [目标y], 方向, 99999))
            跳出循环 ()
        .如果真结束
        赋值 (行走路径 [变量1], 地图数据 [目标x] [目标y], 方向)
        赋值 (变量2, 目标x)
        赋值 (目标x, 地图数据 [变量2] [目标y], 上一步.)
        赋值 (目标y, 地图数据 [变量2] [目标y], 上一步.)
    .变量循环尾 ()
    返回 (真)
.否则
    返回 (假)
.如果结束


.子程序 _画板1_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 横坐标, 整数型, , , 
.局部变量 纵坐标, 整数型, , , 


赋值 (移动音乐开关, 0)
.如果真 (等于 (不自动寻路, 假))
    赋值 (横坐标, 取整 (相加 (相除 (纵向位置, 30), 1)))
    赋值 (纵坐标, 取整 (相加 (相除 (横向位置, 30), 1)))
    输出调试文本 (到文本 (box [x] [y]))
    .判断开始 (或者 (等于 (背景数组 [横坐标] [纵坐标], 2), 等于 (背景数组 [横坐标] [纵坐标], 4)))
        小人自动移动
        .如果真 (等于 (获取移动路径 (当前横坐标, 当前纵坐标, 横坐标, 纵坐标), 真))
            .计次循环首 (取数组成员数 (行走路径), 行走计数)
                赋值 (不自动寻路, 真)
                __启动窗口_按下某键 (行走路径 [行走计数], 0)
                赋值 (移动音乐开关, 1)
                赋值 (不自动寻路, 真)
                延时 (50)
            .计次循环尾 ()
            停止播放 ()
            赋值 (移动音乐开关, 0)
            赋值 (不自动寻路, 假)
            清除数组 (行走路径)
        .如果真结束
        赋值 (不自动寻路, 假)
    .判断 (或者 (等于 (背景数组 [横坐标] [纵坐标], 3), 等于 (背景数组 [横坐标] [纵坐标], 7)))
        小人自动推箱子
        .判断开始 (并且 (等于 (相加 (当前横坐标, 1), 横坐标), 等于 (当前纵坐标, 纵坐标)))
            __启动窗口_按下某键 (#下光标键, 0)
        .判断 (并且 (等于 (相减 (当前横坐标, 1), 横坐标), 等于 (当前纵坐标, 纵坐标)))
            __启动窗口_按下某键 (#上光标键, 0)
        .判断 (并且 (等于 (当前横坐标, 横坐标), 等于 (相加 (当前纵坐标, 1), 纵坐标)))
            __启动窗口_按下某键 (#右光标键, 0)
        .判断 (并且 (等于 (当前横坐标, 横坐标), 等于 (相减 (当前纵坐标, 1), 纵坐标)))
            __启动窗口_按下某键 (#左光标键, 0)
        .默认
            
        .判断结束
        
    .默认
        
    .判断结束
    
.如果真结束


.子程序 __启动窗口_放开某键, 逻辑型, , N
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果 (等于 (错误箱子数, 0))
    
.否则
    .判断开始 (等于 (键代码, #左光标键))
        赋值 (.时钟周期, 200)
        赋值 (移动音乐开关, 0)
    .判断 (等于 (键代码, #上光标键))
        赋值 (.时钟周期, 200)
        赋值 (移动音乐开关, 0)
    .判断 (等于 (键代码, #右光标键))
        赋值 (.时钟周期, 200)
        赋值 (移动音乐开关, 0)
    .判断 (等于 (键代码, #下光标键))
        赋值 (.时钟周期, 200)
        赋值 (移动音乐开关, 0)
    .默认
        
    .判断结束
    
.如果结束


.子程序 _时钟2_周期事件, 空白型, , N
赋值 (.时钟周期, 0)
停止播放 ()

.子程序 _画板1_鼠标右键被按下, 逻辑型, , N
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 变量, 空白型, , , 
.局部变量 移动步数, 空白型, , , 
.局部变量 移动x1, 空白型, , , 
.局部变量 移动y1, 空白型, , , 


.如果真 (等于 (不自动寻路, 假))
    赋值 (移动x1, 取整 (相加 (相除 (纵向位置, 30), 1)))
    赋值 (移动y1, 取整 (相加 (相除 (横向位置, 30), 1)))
.如果真结束
小人自动推箱子
.判断开始 (并且 (小于 (当前横坐标, 相减 (移动x1, 1)), 等于 (当前纵坐标, 移动y1)))
    赋值 (移动步数, 相减 (移动x1, 当前横坐标, 1))
    .判断开始 (或者 (等于 (背景数组 [相加 (当前横坐标, 1)] [移动y1], 3), 等于 (背景数组 [相加 (当前横坐标, 1)] [移动y1], 7)))
        .变量循环首 (1, 移动步数, 1, 变量)
            __启动窗口_按下某键 (#下光标键, 0)
        .变量循环尾 ()
    .默认
        
    .判断结束
    
.判断 (并且 (大于 (当前横坐标, 相加 (移动x1, 1)), 等于 (当前纵坐标, 移动y1)))
    赋值 (移动步数, 相减 (当前横坐标, 移动x1, 1))
    .判断开始 (或者 (等于 (背景数组 [相减 (当前横坐标, 1)] [移动y1], 3), 等于 (背景数组 [相减 (当前横坐标, 1)] [移动y1], 7)))
        .变量循环首 (1, 移动步数, 1, 变量)
            __启动窗口_按下某键 (#上光标键, 0)
        .变量循环尾 ()
    .默认
        
    .判断结束
    
.判断 (并且 (小于 (当前纵坐标, 相减 (移动y1, 1)), 等于 (当前横坐标, 移动x1)))
    赋值 (移动步数, 相减 (移动y1, 当前纵坐标, 1))
    .判断开始 (或者 (等于 (背景数组 [当前横坐标] [相加 (当前纵坐标, 1)], 3), 等于 (背景数组 [当前横坐标] [相加 (当前纵坐标, 1)], 7)))
        .变量循环首 (1, 移动步数, 1, 变量)
            __启动窗口_按下某键 (#右光标键, 0)
        .变量循环尾 ()
    .默认
        
    .判断结束
    
.判断 (并且 (大于 (当前纵坐标, 相加 (移动y1, 1)), 等于 (当前横坐标, 移动x1)))
    赋值 (移动步数, 相减 (当前纵坐标, 移动y1, 1))
    .判断开始 (或者 (等于 (背景数组 [当前横坐标] [相减 (当前纵坐标, 1)], 3), 等于 (背景数组 [当前横坐标] [相减 (当前纵坐标, 1)], 7)))
        .变量循环首 (1, 移动步数, 1, 变量)
            __启动窗口_按下某键 (#左光标键, 0)
        .变量循环尾 ()
    .默认
        
    .判断结束
    
.默认
    
.判断结束


.子程序 _工具条1_被单击, 空白型, , 
.参数 按钮索引, 整数型, , 

.判断开始 (等于 (按钮索引, 0))
    _撤消_被选择 ()
.判断 (等于 (按钮索引, 1))
    _重来_被选择 ()
.判断 (等于 (按钮索引, 2))
    _声音_被选择 ()
.判断 (等于 (按钮索引, 3))
    _选关_被选择 ()
.判断 (等于 (按钮索引, 4))
    _退出_被选择 ()
.判断 (等于 (按钮索引, 6))
    _新的想法_被选择 ()
.判断 (等于 (按钮索引, 7))
    _编辑方案_被选择 ()
.判断 (等于 (按钮索引, 8))
    _选择方案_被选择 ()
.默认
    
.判断结束


.子程序 _开始录像_被选择, 空白型, , 
.局部变量 循环变量1, 整数型, , , 
.局部变量 循环变量2, 整数型, , , 

赋值 (.时钟周期, 0)
赋值 (正在录像中, 真)
赋值 (.禁止, 真)
赋值 (.禁止, 假)
赋值 (.禁止, 真)
赋值 (.禁止, 真)
赋值 (.禁止, 真)
赋值 (.禁止, 真)
赋值 (.禁止, 真)
赋值 (.禁止, 真)
赋值 (.禁止, 真)
赋值 (.禁止, 真)
清除数组 (录像数组)
赋值 (录像地图数据, {  }) ' 保存地图
.计次循环首 (14, 循环变量1)
    .计次循环首 (16, 循环变量2)
        赋值 (录像地图数据, 相加 (录像地图数据, 到字节集 (背景数组 [循环变量1] [循环变量2])))
    .计次循环尾 ()
.计次循环尾 ()
赋值 (.时钟周期, 500)

.子程序 _停止录像_被选择, 空白型, , 
赋值 (.时钟周期, 0)
赋值 (正在录像中, 假)
.如果真 (大于 (取数组成员数 (录像数组), 0))
    赋值 (.禁止, 假)
    赋值 (.禁止, 真)
.如果真结束
赋值 (.禁止, 假)
赋值 (.禁止, 真)
赋值 (.禁止, 假)
赋值 (.禁止, 假)
赋值 (.禁止, 真)
赋值 (.禁止, 假)
赋值 (.禁止, 真)
赋值 (.禁止, 假)
赋值 (.禁止, 假)
赋值 (.禁止, 假)
赋值 (.时钟周期, 500)

.子程序 _播放录像_被选择, 空白型, , 
.局部变量 循环变量1, 整数型, , , 
.局部变量 循环变量2, 整数型, , , 
.局部变量 记次变量, 整数型, , , 
.局部变量 临时字节集, 字节集, , , 

.如果真 (等于 (取数组成员数 (录像数组), 0))
    返回 ()
.如果真结束
赋值 (.时钟周期, 0)
赋值 (录像播放中, 真)
赋值 (.禁止, 真)
赋值 (.禁止, 假)
赋值 (.禁止, 真)
赋值 (.禁止, 真)
赋值 (.禁止, 真)
赋值 (.禁止, 真)
赋值 (.禁止, 真)
赋值 (.禁止, 真)
赋值 (.禁止, 真)
赋值 (.禁止, 真)
赋值 (.禁止, 真)
.如果真 (等于 (临时地图数据, {  }))
    .计次循环首 (14, 循环变量1)
        .计次循环首 (16, 循环变量2)
            赋值 (临时地图数据, 相加 (临时地图数据, 到字节集 (背景数组 [循环变量1] [循环变量2])))
        .计次循环尾 ()
    .计次循环尾 ()
.如果真结束
赋值 (上步横坐标, 0)
赋值 (上步纵坐标, 0)
赋值 (当前横坐标, 0)
赋值 (当前纵坐标, 0)
赋值 (错误箱子数, 0)
赋值 (记次变量, 0)
.计次循环首 (14, 循环变量1)
    .计次循环首 (16, 循环变量2)
        赋值 (临时字节集, 取字节集中间 (录像地图数据, 相加 (相乘 (记次变量, 4), 1), 4))
        赋值 (背景数组 [循环变量1] [循环变量2], 取字节集数据 (临时字节集, #整数型))
        .判断开始 (或者 (等于 (背景数组 [循环变量1] [循环变量2], 57), 等于 (背景数组 [循环变量1] [循环变量2], 58)))
            赋值 (当前横坐标, 循环变量1)
            赋值 (当前纵坐标, 循环变量2)
        .判断 (等于 (背景数组 [循环变量1] [循环变量2], 3))
            赋值 (错误箱子数, 相加 (错误箱子数, 1))
        .默认
            
        .判断结束
        赋值 (记次变量, 相加 (记次变量, 1))
    .计次循环尾 ()
.计次循环尾 ()
.清除 ()
赋值 (第一次画, 真)
画背景 (假)
赋值 (_启动窗口.标题, 相加 (#游戏版本号, “ 你现在推的是第”, 到文本 (当前关数), “关”))
赋值 (.禁止, 真)
赋值 (_启动窗口.禁止, 真)
.计次循环首 (取数组成员数 (录像数组), 循环变量1)
    赋值 (不自动寻路, 真)
    __启动窗口_按下某键 (录像数组 [循环变量1], 0)
    赋值 (移动音乐开关, 1)
    赋值 (不自动寻路, 真)
    延时 (200)
.计次循环尾 ()
赋值 (不自动寻路, 假)
_停止播放_被选择 ()
赋值 (.禁止, 假)
赋值 (_启动窗口.禁止, 假)
赋值 (.时钟周期, 500)

.子程序 _停止播放_被选择, 空白型, , 
赋值 (.时钟周期, 0)
赋值 (录像播放中, 假)
.如果 (大于 (取数组成员数 (撤消数组), 0))
    赋值 (.禁止, 假)
.否则
    赋值 (.禁止, 真)
.如果结束
赋值 (.禁止, 假)
赋值 (.禁止, 真)
赋值 (.禁止, 假)
赋值 (.禁止, 假)
赋值 (.禁止, 真)
赋值 (.禁止, 假)
赋值 (.禁止, 假)
赋值 (.禁止, 假)
赋值 (.禁止, 假)
赋值 (.禁止, 假)
赋值 (.时钟周期, 500)

.子程序 _保存录像_被选择, 空白型, , 
.局部变量 临时字节集, 字节集, , , 
.局部变量 循环变量, 整数型, , , 
.局部变量 标志, 字节集, , , 

赋值 (.时钟周期, 0)
赋值 (.类型, 1)
赋值 (.初始目录, 当前目录)
赋值 (.标题, “保存游戏录像”)
赋值 (.文件必须存在, 真)
赋值 (.文件覆盖提示, 真)
.如果真 (等于 (打开 (), 真))
    赋值 (临时字节集, {  })
    .计次循环首 (取数组成员数 (录像数组), 循环变量)
        赋值 (临时字节集, 相加 (临时字节集, 到字节集 (录像数组 [循环变量])))
    .计次循环尾 ()
    赋值 (标志, 到字节集 (“E-box Recoder”))
    写到文件 (.文件名, 相加 (标志, 录像地图数据, 临时字节集))
.如果真结束
赋值 (.时钟周期, 500)

.子程序 _打开录像文件_被选择, 空白型, , 
.局部变量 标志, 文本型, , , 
.局部变量 变量, 整数型, , , 
.局部变量 临时字节集, 字节集, , , 
.局部变量 临时判断, 逻辑型, , , 
.局部变量 临时字节集1, 字节集, , , 
.局部变量 临时字节集2, 字节集, , , 
.局部变量 记次变量, 整数型, , , 

赋值 (.时钟周期, 0)
赋值 (.类型, 0)
赋值 (.初始目录, 当前目录)
赋值 (.标题, “打开游戏录像”)
赋值 (.文件必须存在, 真)
赋值 (.文件覆盖提示, 真)
.如果真 (等于 (打开 (), 真))
    赋值 (临时字节集, 读入文件 (.文件名))
    赋值 (临时判断, 假)
    .如果真 (大于或等于 (取字节集长度 (临时字节集), 相加 (相乘 (224, 4), 14)))
        赋值 (标志, 取字节集数据 (取字节集左边 (临时字节集, 14), #文本型))
        .如果真 (等于 (标志, “E-box Recoder”))
            赋值 (临时字节集1, 取字节集中间 (临时字节集, 15, 相乘 (224, 4)))
            .如果真 (等于 (取字节集长度 (临时字节集1), 相乘 (224, 4)))
                赋值 (临时判断, 真)
                赋值 (临时字节集2, 取字节集中间 (临时字节集, 相加 (相乘 (224, 4), 14, 1), 相加 (相减 (取字节集长度 (临时字节集), 相乘 (224, 4)), 14)))
                赋值 (记次变量, 相除 (取字节集长度 (临时字节集2), 4))
                清除数组 (录像数组)
                .如果真 (大于 (记次变量, 0))
                    .计次循环首 (记次变量, 变量)
                        加入成员 (录像数组, 取字节集数据 (取字节集中间 (临时字节集2, 相加 (相乘 (相减 (变量, 1), 4), 1), 4), #整数型))
                    .计次循环尾 ()
                .如果真结束
                
            .如果真结束
            
        .如果真结束
        
    .如果真结束
    .如果 (等于 (临时判断, 真))
        赋值 (录像地图数据, 临时字节集1)
        _停止录像_被选择 ()
    .否则
        信息框 (“选定的文件不是推箱子的录像文件”, 0, “错误”)
    .如果结束
    
.如果真结束
赋值 (.时钟周期, 500)

.子程序 _返回游戏_被选择, 空白型, , 
.局部变量 循环变量1, 整数型, , , 
.局部变量 循环变量2, 整数型, , , 
.局部变量 临时字节集, 字节集, , , 
.局部变量 记次变量, 整数型, , , 

赋值 (.时钟周期, 0)
赋值 (正在录像中, 假)
赋值 (录像播放中, 假)
赋值 (上步横坐标, 0)
赋值 (上步纵坐标, 0)
赋值 (当前横坐标, 0)
赋值 (当前纵坐标, 0)
赋值 (错误箱子数, 0)
赋值 (记次变量, 0)
.计次循环首 (14, 循环变量1)
    .计次循环首 (16, 循环变量2)
        赋值 (临时字节集, 取字节集中间 (临时地图数据, 相加 (相乘 (记次变量, 4), 1), 4))
        赋值 (背景数组 [循环变量1] [循环变量2], 取字节集数据 (临时字节集, #整数型))
        .判断开始 (并且 (大于或等于 (背景数组 [循环变量1] [循环变量2], 52), 小于或等于 (背景数组 [循环变量1] [循环变量2], 59)))
            赋值 (当前横坐标, 循环变量1)
            赋值 (当前纵坐标, 循环变量2)
        .判断 (等于 (背景数组 [循环变量1] [循环变量2], 3))
            赋值 (错误箱子数, 相加 (错误箱子数, 1))
        .默认
            
        .判断结束
        赋值 (记次变量, 相加 (记次变量, 1))
    .计次循环尾 ()
.计次循环尾 ()
赋值 (临时地图数据, {  })
.清除 ()
赋值 (第一次画, 真)
画背景 (假)
赋值 (_启动窗口.标题, 相加 (#游戏版本号, “ 你现在推的是第”, 到文本 (当前关数), “关”))
赋值 (.禁止, 真)
赋值 (.时钟周期, 500)

.窗口程序集 设计窗口程序集, , , 

.程序集变量 背景数组, 整数型, , "14,16", 背景数组
.程序集变量 图片类型, 整数型, , , 选中的图片类型
.程序集变量 黄箱数量, 整数型, , , 黄箱子数
.程序集变量 红箱数量, 整数型, , , 红箱子数
.程序集变量 小人横坐标, 整数型, , , 小人坐标
.程序集变量 小人纵坐标, 整数型, , , 小人坐标
.程序集变量 循环变量1, 整数型, , , 循环变量
.程序集变量 循环变量2, 整数型, , , 循环变量
.子程序 _设计窗口_创建完毕, 空白型, , 
.局部变量 临时变量, 整数型, , , 

.计次循环首 (6, 临时变量)
    事件转移 (取标记组件 (临时变量), )
.计次循环尾 ()
赋值 (保存标志, 1)
.清除 ()
重定义数组 (背景数组, 假, 14, 16)
总图片号组.画图片 ( [1], 0, 0, , , )
总图片号组.画图片 ( [5], 0, 0, , , )
总图片号组.画图片 ( [4], 0, 0, , , )
总图片号组.画图片 ( [3], 0, 0, , , )
总图片号组.画图片 ( [58], 0, 0, , , )
总图片号组.画图片 ( [8], 0, 0, , , )
总图片号组.画图片 ( [2], 0, 0, , , )
总图片号组.画图片 ( [2], 0, 0, , , )
总图片号组.画图片 ( [3], 0, 0, , , )
赋值 (图片类型, 0)
赋值 (黄箱数量, 0)
赋值 (红箱数量, 0)
赋值 (小人横坐标, 0)
赋值 (小人纵坐标, 0)
赋值 (.底图, #设计画板背景图)
刷新组合框 ()

.子程序 _画板1_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 横坐标, 整数型, , , 
.局部变量 纵坐标, 整数型, , , 

赋值 (横坐标, 取整 (相除 (横向位置, 30)))
赋值 (纵坐标, 取整 (相除 (纵向位置, 30)))
输出调试文本 (到文本 (lx) ＋ 字符 (9) ＋ 到文本 (ly))
0.复制 (0, 30, 30, , 相乘 (横坐标, 30), 相乘 (纵坐标, 30), 1)
.如果真 (等于 (背景数组 [相加 (纵坐标, 1)] [相加 (横坐标, 1)], 57))
    赋值 (小人横坐标, 0)
    赋值 (小人纵坐标, 0)
.如果真结束
赋值 (背景数组 [相加 (纵坐标, 1)] [相加 (横坐标, 1)], 图片类型)
.如果真 (等于 (图片类型, 57))
    .如果真 (不等于 (小人横坐标, 0))
        0.复制 (0, 30, 30, , 相减 (相乘 (小人横坐标, 30), 30), 相减 (相乘 (小人纵坐标, 30), 30), 1)
        赋值 (背景数组 [小人纵坐标] [小人横坐标], 2)
    .如果真结束
    赋值 (小人横坐标, 相加 (横坐标, 1))
    赋值 (小人纵坐标, 相加 (纵坐标, 1))
.如果真结束


.子程序 _画板1_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 横坐标, 整数型, , , 
.局部变量 纵坐标, 整数型, , , 

赋值 (横坐标, 取整 (相除 (横向位置, 30)))
赋值 (纵坐标, 取整 (相除 (纵向位置, 30)))
输出调试文本 (到文本 (lx) ＋ 字符 (9) ＋ 到文本 (ly))
0.复制 (0, 30, 30, , 相乘 (横坐标, 30), 相乘 (纵坐标, 30), 1)
.如果真 (等于 (背景数组 [相加 (纵坐标, 1)] [相加 (横坐标, 1)], 57))
    赋值 (小人横坐标, 0)
    赋值 (小人纵坐标, 0)
.如果真结束
赋值 (背景数组 [相加 (纵坐标, 1)] [相加 (横坐标, 1)], 图片类型)
.如果真 (等于 (图片类型, 57))
    .如果真 (不等于 (小人横坐标, 0))
        0.复制 (0, 30, 30, , 相减 (相乘 (小人横坐标, 30), 30), 相减 (相乘 (小人纵坐标, 30), 30), 1)
        赋值 (背景数组 [小人纵坐标] [小人横坐标], 2)
    .如果真结束
    赋值 (小人横坐标, 相加 (横坐标, 1))
    赋值 (小人纵坐标, 相加 (纵坐标, 1))
.如果真结束


.子程序 _保存设计按钮_被单击, 空白型, , 
.局部变量 文件号, 整数型, , , 
.局部变量 临时数量, 整数型, , , 
.局部变量 文件名, 文本型, , , 
.局部变量 临时字节集1, 字节集, , , 
.局部变量 临时字节集2, 字节集, , , 

.如果真 (等于 (小人横坐标, 0))
    信息框 (“没有人的游戏!”, 0, )
    返回 ()
.如果真结束
赋值 (黄箱数量, 0)
赋值 (红箱数量, 0)
.计次循环首 (14, 循环变量1)
    .计次循环首 (16, 循环变量2)
        .如果真 (等于 (背景数组 [循环变量1] [循环变量2], 4))
            赋值 (红箱数量, 相加 (红箱数量, 1))
        .如果真结束
        .如果真 (等于 (背景数组 [循环变量1] [循环变量2], 3))
            赋值 (黄箱数量, 相加 (黄箱数量, 1))
        .如果真结束
        
    .计次循环尾 ()
.计次循环尾 ()
.如果真 (不等于 (黄箱数量, 红箱数量))
    信息框 (“箱子数和放箱子的地方数不等!”, 0, )
    返回 ()
.如果真结束

地图名大于100的为自编地图
赋值 (临时数量, 101)
跳到 (1)
.判断循环首 (等于 (查找 (并且 (等于 (读 (#方案类型), #游戏地图), 等于 (读 (#方案名称), 到文本 (临时数量)))), 真))
    赋值 (临时数量, 相加 (临时数量, 1))
.判断循环尾 ()
赋值 (临时字节集1, {  })
赋值 (临时字节集2, {  })
.计次循环首 (14, 循环变量1)
    .计次循环首 (16, 循环变量2)
        赋值 (临时字节集2, 到字节集 (背景数组 [循环变量1] [循环变量2]))
        赋值 (临时字节集1, 相加 (临时字节集1, 临时字节集2))
    .计次循环尾 ()
.计次循环尾 ()
.如果真 (等于 (加记录 (#游戏地图, 到文本 (临时数量), 临时字节集1), 真))
    信息框 (相加 (“已添加为第”, 到文本 (临时数量), “号地图”), 0, )
.如果真结束
_重新设计按钮_被单击 ()
赋值 (保存标志, 2)
刷新组合框 ()

.子程序 _重新设计按钮_被单击, 空白型, , 
_设计窗口_创建完毕 ()

.子程序 _退出按钮_被单击, 空白型, , 
设计窗口.销毁 ()

.子程序 _画板8_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 临时画板, 画板, , , 

赋值 (临时画板, 取事件组件 ())
临时画板.复制 ()
.判断开始 (等于 (临时画板, ))
    赋值 (图片类型, 1)
.判断 (等于 (临时画板, ))
    赋值 (图片类型, 7)
.判断 (等于 (临时画板, ))
    赋值 (图片类型, 57)
.判断 (等于 (临时画板, ))
    赋值 (图片类型, 2)
.判断 (等于 (临时画板, ))
    赋值 (图片类型, 3)
.判断 (等于 (临时画板, ))
    赋值 (图片类型, 4)
.判断 (等于 (临时画板, ))
    赋值 (图片类型, 0)
.默认
    
.判断结束


.子程序 _画板8_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 临时画板, 画板, , , 

赋值 (临时画板, 取事件组件 ())
临时画板.复制 ()
.判断开始 (等于 (临时画板, ))
    赋值 (图片类型, 1)
.判断 (等于 (临时画板, ))
    赋值 (图片类型, 7)
.判断 (等于 (临时画板, ))
    赋值 (图片类型, 57)
.判断 (等于 (临时画板, ))
    赋值 (图片类型, 2)
.判断 (等于 (临时画板, ))
    赋值 (图片类型, 3)
.判断 (等于 (临时画板, ))
    赋值 (图片类型, 4)
.判断 (等于 (临时画板, ))
    赋值 (图片类型, 0)
.默认
    
.判断结束


.子程序 刷新组合框, 空白型, , 
.局部变量 临时变量, 整数型, , , 
.局部变量 临时记次变量, 整数型, , , 

清空 ()
跳到 (1)
赋值 (.自动排序, 真)
赋值 (.高度, 152)
.计次循环首 (取记录数 (), 临时变量)
    .如果真 (等于 (查找 (等于 (读 (#方案类型), #游戏地图)), 真))
        赋值 (临时记次变量, 到数值 (读 (#方案名称)))
        .如果真 (大于或等于 (临时记次变量, 101))
            读 (#方案名称).加入项目 (取记录号 ())
        .如果真结束
        
    .如果真结束
    .如果真 (等于 (跳过 (), 假))
        跳出循环 ()
    .如果真结束
    
.计次循环尾 ()
赋值 (.现行选中项, -1)

.子程序 _更新当前地图按钮_被单击, 空白型, , 
.局部变量 记次变量, 整数型, , , 
.局部变量 临时字节集1, 字节集, , , 
.局部变量 临时字节集2, 字节集, , , 

.如果 (等于 (.现行选中项, -1))
    _保存设计按钮_被单击 ()
    返回 ()
.否则
    .如果真 (等于 (信息框 (相加 (“这个操作将会覆盖第”, .取项目文本 (.现行选中项), “号地图,确定吗?”), 1, ), 1))
        返回 ()
    .如果真结束
    赋值 (记次变量, .取项目数值 (.现行选中项))
    跳到 (记次变量)
    .如果真 (等于 (读 (#方案类型), #游戏地图))
        赋值 (临时字节集1, {  })
        赋值 (临时字节集2, {  })
        .计次循环首 (14, 循环变量1)
            .计次循环首 (16, 循环变量2)
                赋值 (临时字节集2, 到字节集 (背景数组 [循环变量1] [循环变量2]))
                赋值 (临时字节集1, 相加 (临时字节集1, 临时字节集2))
            .计次循环尾 ()
        .计次循环尾 ()
        写 (#数据1, 临时字节集1)
    .如果真结束
    
.如果结束


.子程序 _删除地图按钮_被单击, 空白型, , 
.局部变量 临时记次变量, 整数型, , , 

.如果 (等于 (.现行选中项, -1))
    返回 ()
.否则
    .如果真 (等于 (信息框 (相加 (“这个操作将会删除第”, .取项目文本 (.现行选中项), “号地图,确定吗?”), 1, ), 1))
        返回 ()
    .如果真结束
    赋值 (临时记次变量, .取项目数值 (.现行选中项))
    跳到 (1)
    .如果真 (等于 (删除 (并且 (等于 (读 (#方案类型), #游戏地图), 等于 (读 (#方案名称), .取项目文本 (.现行选中项)))), 真))
        彻底删除 ()
        刷新组合框 ()
    .如果真结束
    
.如果结束


.子程序 _组合框1_列表项被选择, 空白型, , 
.局部变量 临时横坐标, 整数型, , , 
.局部变量 临时纵坐标, 整数型, , , 
.局部变量 临时字节集长度, 整数型, , , 
.局部变量 临时字节集1, 字节集, , , 
.局部变量 临时记次变量, 整数型, , , 
.局部变量 临时字节集2, 字节集, , , 

跳到 (1)
.如果真 (等于 (查找 (并且 (等于 (读 (#方案类型), #游戏地图), 等于 (读 (#方案名称), .取项目文本 (.现行选中项)))), 真))
    赋值 (临时字节集1, 读 (#数据1))
    赋值 (临时字节集长度, 取字节集长度 (临时字节集1))
    .如果真 (等于 (临时字节集长度, 896))
        赋值 (临时记次变量, 0)
        赋值 (小人横坐标, 0)
        赋值 (小人纵坐标, 0)
        赋值 (红箱数量, 0)
        赋值 (黄箱数量, 0)
        .计次循环首 (14, 临时横坐标)
            .计次循环首 (16, 临时纵坐标)
                赋值 (临时字节集2, 取字节集中间 (临时字节集1, 相加 (相乘 (临时记次变量, 4), 1), 4))
                赋值 (背景数组 [临时横坐标] [临时纵坐标], 取字节集数据 (临时字节集2, #整数型))
                .如果真 (等于 (背景数组 [临时横坐标] [临时纵坐标], 57))
                    赋值 (小人横坐标, 临时横坐标)
                    赋值 (小人纵坐标, 临时纵坐标)
                .如果真结束
                .如果真 (等于 (背景数组 [临时横坐标] [临时纵坐标], 4))
                    赋值 (红箱数量, 相加 (红箱数量, 1))
                .如果真结束
                .如果真 (等于 (背景数组 [临时横坐标] [临时纵坐标], 3))
                    赋值 (黄箱数量, 相加 (黄箱数量, 1))
                .如果真结束
                总图片号组.画图片 ( [相加 (背景数组 [临时横坐标] [临时纵坐标], 1)], 相乘 (相减 (临时纵坐标, 1), 30), 相乘 (相减 (临时横坐标, 1), 30), 30, 30, 1)
                赋值 (临时记次变量, 相加 (临时记次变量, 1))
            .计次循环尾 ()
        .计次循环尾 ()
    .如果真结束
    
.如果真结束


.窗口程序集 关于窗口程序集, , , 

.程序集变量 背景数组, 整数型, , "7,7", 背景数组
.程序集变量 退出标记, 逻辑型, , , 退出标记
.程序集变量 循环变量1, 整数型, , , 循环变量
.程序集变量 循环变量2, 整数型, , , 循环变量
.程序集变量 时钟周期, 整数型, , , 时钟周期
.子程序 _关于窗口_创建完毕, 空白型, , 
.局部变量 临时地图数据, 字节集, , , 
.局部变量 临时字节集, 字节集, , , 
.局部变量 临时变量1, 整数型, , , 
.局部变量 临时变量2, 整数型, , , 
.局部变量 记次变量, 整数型, , , 

赋值 (关于窗口.背景音乐, 背景音乐)
赋值 (关于窗口.播放次数, 0)
赋值 (关于窗口.标题, 相加 (“关于 ”, #游戏版本号))
赋值 (退出标记, 真)
赋值 (.时钟周期, 0)
赋值 (.标记, “0”)
重定义数组 (背景数组, 假, 7, 7)
赋值 (临时字节集, { 0, 1, 1, 1, 1, 0, 0, 0, 1, 2, 2, 1, 1, 1, 1, 1, 2, 4, 3, 57, 1, 1, 2, 4, 1, 4, 2, 1, 1, 2, 2, 4, 2, 1, 1, 1, 1, 1, 2, 2, 1, 0, 0, 0, 1, 1, 1, 1, 0 }) ' 为背景数组赋值
赋值 (记次变量, 1)
.计次循环首 (7, 临时变量2)
    .计次循环首 (7, 临时变量1)
        赋值 (背景数组 [临时变量2] [临时变量1], 取字节集数据 (取字节集中间 (临时字节集, 记次变量, 1), #整数型))
        赋值 (记次变量, 相加 (记次变量, 1))
    .计次循环尾 ()
.计次循环尾 ()
重画 ()
赋值 (时钟周期, 200)
赋值 (.时钟周期, 时钟周期)

.子程序 重画, 空白型, , 
.局部变量 画片编号, 整数型, , , 

.计次循环首 (7, 循环变量1)
    .计次循环首 (7, 循环变量2)
        赋值 (画片编号, 背景数组 [循环变量1] [循环变量2])
        .如果真 (等于 (总图片号组 [相加 (画片编号, 1)], 0))
            返回 ()
        .如果真结束
        总图片号组.画图片 ( [相加 (画片编号, 1)], 相乘 (相减 (循环变量2, 1), 30), 相乘 (相减 (循环变量1, 1), 30), 30, 30, 1)
    .计次循环尾 ()
.计次循环尾 ()

.子程序 _时钟1_周期事件, 空白型, , 
.局部变量 临时标记, 整数型, , , 

赋值 (.时钟周期, 0)
赋值 (临时标记, 相加 (到数值 (.标记), 1))
赋值 (.标记, 到文本 (临时标记))
.判断开始 (等于 (临时标记, 1))
    赋值 (背景数组 [3] [4], 7)
    赋值 (背景数组 [3] [5], 53)
    赋值 (背景数组 [3] [6], 2)
.判断 (等于 (临时标记, 2))
    赋值 (背景数组 [3] [3], 3)
    赋值 (背景数组 [3] [4], 53)
    赋值 (背景数组 [3] [5], 2)
.判断 (等于 (临时标记, 3))
    赋值 (背景数组 [3] [4], 4)
    赋值 (背景数组 [2] [4], 55)
.判断 (等于 (临时标记, 4))
    赋值 (背景数组 [2] [3], 53)
    赋值 (背景数组 [2] [4], 2)
.判断 (等于 (临时标记, 5))
    赋值 (背景数组 [2] [3], 2)
    赋值 (背景数组 [3] [3], 57)
    赋值 (背景数组 [4] [3], 7)
.判断 (等于 (临时标记, 6))
    赋值 (背景数组 [3] [3], 2)
    赋值 (背景数组 [4] [3], 57)
    赋值 (背景数组 [5] [3], 3)
.判断 (等于 (临时标记, 7))
    赋值 (背景数组 [4] [3], 4)
    赋值 (背景数组 [4] [2], 53)
.判断 (等于 (临时标记, 8))
    赋值 (背景数组 [4] [2], 2)
    赋值 (背景数组 [5] [2], 57)
.判断 (等于 (临时标记, 9))
    赋值 (背景数组 [5] [2], 2)
    赋值 (背景数组 [5] [3], 51)
    赋值 (背景数组 [5] [4], 7)
.判断 (等于 (临时标记, 10))
    赋值 (背景数组 [5] [3], 2)
    赋值 (背景数组 [5] [4], 51)
    赋值 (背景数组 [5] [5], 3)
.判断 (等于 (临时标记, 11))
    赋值 (背景数组 [5] [4], 4)
    赋值 (背景数组 [6] [4], 57)
.判断 (等于 (临时标记, 12))
    赋值 (背景数组 [6] [4], 2)
    赋值 (背景数组 [6] [5], 51)
.判断 (等于 (临时标记, 13))
    赋值 (背景数组 [6] [5], 2)
    赋值 (背景数组 [5] [5], 55)
    赋值 (背景数组 [4] [5], 7)
.判断 (等于 (临时标记, 14))
    赋值 (背景数组 [5] [5], 2)
    赋值 (背景数组 [4] [5], 55)
    赋值 (背景数组 [3] [5], 3)
.判断 (等于 (临时标记, 15))
    赋值 (背景数组 [4] [5], 4)
    赋值 (背景数组 [4] [6], 51)
.判断 (等于 (临时标记, 16))
    赋值 (背景数组 [4] [6], 2)
    赋值 (背景数组 [3] [6], 55)
    赋值 (临时标记, 0)
    赋值 (.标记, “0”)
.默认
    
.判断结束
重画 ()
赋值 (.时钟周期, 时钟周期)

.子程序 _按钮1_被单击, 空白型, , 
赋值 (.时钟周期, 0)
关于窗口.销毁 ()

.子程序 _关于窗口_将被销毁, 空白型, , 
赋值 (退出标记, 假)
赋值 (关于窗口.播放次数, 2)

.子程序 _标签1_被双击, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.时钟周期, 0)
输入框 (“请输入动画设置的时间(1-1000):”, “输入”, “200”, 时钟周期, 2)
.如果真 (并且 (大于 (时钟周期, 0), 小于 (时钟周期, 1001)))
    赋值 (.时钟周期, 时钟周期)
    返回 (假)
.如果真结束
赋值 (时钟周期, 200)
赋值 (.时钟周期, 时钟周期)

.程序集 图形处理程序集, , , 

.程序集变量 循环变量1, 整数型, , , 循环变量
.程序集变量 循环变量2, 整数型, , , 循环变量
.子程序 载入图片号, 逻辑型, , 返回真则图片全部载入成功
.参数 类型, 文本型, , 
.参数 方案, 文本型, , 

.局部变量 画片数, 整数型, , , 

重定义数组 (总图片号组, 真, 256)
.判断开始 (等于 (类型, #场景方案))
    .如果 (等于 (场景方案名, “”))
        赋值 (场景方案名, #默认方案)
        赋值 (总图片号组 [1], 载入图片 (#背景图))
        赋值 (总图片号组 [2], 载入图片 (#墙图))
        赋值 (总图片号组 [3], 载入图片 (#地板图))
        赋值 (总图片号组 [4], 载入图片 (#黄箱子图))
        赋值 (总图片号组 [5], 载入图片 (#箱子位置图))
        赋值 (总图片号组 [8], 载入图片 (#红箱子图))
    .否则
        跳到 (1)
        .如果 (等于 (查找 (并且 (等于 (读 (#方案类型), #场景方案), 等于 (读 (#方案名称), 场景方案名))), 真))
            输出调试文本 (到文本 (取记录号 ()))
            赋值 (总图片号组 [1], 载入图片 (读 (#数据1)))
            赋值 (总图片号组 [2], 载入图片 (读 (#数据2)))
            赋值 (总图片号组 [3], 载入图片 (读 (#数据3)))
            赋值 (总图片号组 [4], 载入图片 (读 (#数据4)))
            赋值 (总图片号组 [5], 载入图片 (读 (#数据5)))
            赋值 (总图片号组 [8], 载入图片 (读 (#数据6)))
        .否则
            赋值 (总图片号组 [1], 载入图片 (#背景图))
            赋值 (总图片号组 [2], 载入图片 (#墙图))
            赋值 (总图片号组 [3], 载入图片 (#地板图))
            赋值 (总图片号组 [4], 载入图片 (#黄箱子图))
            赋值 (总图片号组 [5], 载入图片 (#箱子位置图))
            赋值 (总图片号组 [8], 载入图片 (#红箱子图))
        .如果结束
        
    .如果结束
    .如果真 (或者 (等于 (总图片号组 [1], 0), 等于 (总图片号组 [2], 0), 等于 (总图片号组 [3], 0), 等于 (总图片号组 [4], 0), 等于 (总图片号组 [5], 0), 等于 (总图片号组 [8], 0)))
        返回 (假)
    .如果真结束
    返回 (真)
.判断 (等于 (类型, #小人方案))
    .如果 (等于 (小人方案名, “”))
        赋值 (小人方案名, #默认方案)
        赋值 (总图片号组 [52], 载入图片 (#上1))
        赋值 (总图片号组 [53], 载入图片 (#上2))
        赋值 (总图片号组 [54], 载入图片 (#左1))
        赋值 (总图片号组 [55], 载入图片 (#左2))
        赋值 (总图片号组 [56], 载入图片 (#右1))
        赋值 (总图片号组 [57], 载入图片 (#右2))
        赋值 (总图片号组 [58], 载入图片 (#下1))
        赋值 (总图片号组 [59], 载入图片 (#下2))
    .否则
        跳到 (1)
        .如果 (等于 (查找 (并且 (等于 (读 (#方案类型), #小人方案), 等于 (读 (#方案名称), 小人方案名))), 真))
            输出调试文本 (到文本 (取记录号 ()))
            赋值 (总图片号组 [52], 载入图片 (读 (#数据1)))
            赋值 (总图片号组 [53], 载入图片 (读 (#数据2)))
            赋值 (总图片号组 [54], 载入图片 (读 (#数据3)))
            赋值 (总图片号组 [55], 载入图片 (读 (#数据4)))
            赋值 (总图片号组 [56], 载入图片 (读 (#数据5)))
            赋值 (总图片号组 [57], 载入图片 (读 (#数据6)))
            赋值 (总图片号组 [58], 载入图片 (读 (#数据7)))
            赋值 (总图片号组 [59], 载入图片 (读 (#数据8)))
        .否则
            赋值 (总图片号组 [52], 载入图片 (#上1))
            赋值 (总图片号组 [53], 载入图片 (#上2))
            赋值 (总图片号组 [54], 载入图片 (#左1))
            赋值 (总图片号组 [55], 载入图片 (#左2))
            赋值 (总图片号组 [56], 载入图片 (#右1))
            赋值 (总图片号组 [57], 载入图片 (#右2))
            赋值 (总图片号组 [58], 载入图片 (#下1))
            赋值 (总图片号组 [59], 载入图片 (#下2))
        .如果结束
        
    .如果结束
    .如果真 (或者 (等于 (总图片号组 [52], 0), 等于 (总图片号组 [53], 0), 等于 (总图片号组 [54], 0), 等于 (总图片号组 [55], 0), 等于 (总图片号组 [56], 0), 等于 (总图片号组 [57], 0), 等于 (总图片号组 [58], 0), 等于 (总图片号组 [59], 0)))
        返回 (假)
    .如果真结束
    赋值 (总图片号组 [62], 总图片号组 [52])
    赋值 (总图片号组 [63], 总图片号组 [53])
    赋值 (总图片号组 [64], 总图片号组 [54])
    赋值 (总图片号组 [65], 总图片号组 [55])
    赋值 (总图片号组 [66], 总图片号组 [56])
    赋值 (总图片号组 [67], 总图片号组 [57])
    赋值 (总图片号组 [68], 总图片号组 [58])
    赋值 (总图片号组 [69], 总图片号组 [59])
    返回 (真)
.默认
    返回 (假)
.判断结束
返回 (真)
赋值 (画片数, 0)
.计次循环首 (256, 循环变量1)
    .如果真 (大于 (总图片号组 [循环变量1], 0))
        赋值 (画片数, 相加 (画片数, 1))
    .如果真结束
    
.计次循环尾 ()
.如果 (不等于 (画片数, 相加 (14, 8)))
    返回 (假)
.否则
    返回 (真)
.如果结束


.子程序 载入音乐, 逻辑型, , 
.如果 (等于 (音乐方案名, “”))
    赋值 (音乐方案名, #默认方案)
    赋值 (移动音乐, #移动音乐)
    赋值 (结束音乐, #结束音乐)
    赋值 (推箱音乐, #推箱音乐)
    赋值 (重来音乐, #重来音乐)
    赋值 (禁止音乐, #禁止音乐)
    赋值 (点击音乐, #点击音乐)
    赋值 (撤消音乐, #撤消音乐)
    赋值 (背景音乐, #背景音乐)
.否则
    跳到 (1)
    .如果 (等于 (查找 (并且 (等于 (读 (#方案类型), #音乐方案), 等于 (读 (#方案名称), 音乐方案名))), 真))
        输出调试文本 (到文本 (取记录号 ()))
        赋值 (移动音乐, 读 (#数据1))
        赋值 (结束音乐, 读 (#数据2))
        赋值 (推箱音乐, 读 (#数据3))
        赋值 (重来音乐, 读 (#数据4))
        赋值 (禁止音乐, 读 (#数据5))
        赋值 (点击音乐, 读 (#数据6))
        赋值 (撤消音乐, 读 (#数据7))
        赋值 (背景音乐, 读 (#数据8))
    .否则
        赋值 (移动音乐, #移动音乐)
        赋值 (结束音乐, #结束音乐)
        赋值 (推箱音乐, #推箱音乐)
        赋值 (重来音乐, #重来音乐)
        赋值 (禁止音乐, #禁止音乐)
        赋值 (点击音乐, #点击音乐)
        赋值 (撤消音乐, #撤消音乐)
        赋值 (背景音乐, #背景音乐)
    .如果结束
    
.如果结束
返回 (真)

.子程序 画图片, 空白型, , 
.参数 横坐标, 整数型, , 
.参数 纵坐标, 整数型, , 
.参数 画片编号, 整数型, , 

.如果真 (等于 (总图片号组 [相加 (画片编号, 1)], 0))
    返回 ()
.如果真结束
_启动窗口.画图片 (., 总图片号组 [相加 (画片编号, 1)], 相乘 (相减 (纵坐标, 1), 30), 相乘 (相减 (横坐标, 1), 30), 30, 30, 1)

.子程序 画背景, 空白型, , 这个过程占用时间太多,起码用去"_画板1_按下某键"事件99%的时间,造成了画面延时,需改进.
.参数 快速画, 逻辑型, , 

.局部变量 临时循环变量1, 整数型, , , 
.局部变量 临时循环变量2, 整数型, , , 

处理事件 ()
赋值 (_启动窗口..时钟周期, 0)
.计次循环首 (14, 循环变量1)
    .计次循环首 (16, 循环变量2)
        .如果真 (等于 (快速画, 真))
            .如果真 (或者 (等于 (背景数组 [循环变量1] [循环变量2], 0), 等于 (背景数组 [循环变量1] [循环变量2], 1)))
                到循环尾 ()
                因在我的机子上画面延时太严重了!所以在这里搞了这一段小程序,使之不画墙和背景图,以加快速度.
            .如果真结束
            
        .如果真结束
        画图片 (循环变量1, 循环变量2, 背景数组 [循环变量1] [循环变量2])
    .计次循环尾 ()
.计次循环尾 ()
赋值 (第一次画, 假)
赋值 (_启动窗口..时钟周期, 500)

.子程序 卸载图片号, 空白型, , 
.计次循环首 (256, 循环变量1)
    .如果真 (大于 (总图片号组 [循环变量1], 0))
        卸载图片 (总图片号组 [循环变量1])
    .如果真结束
    
.计次循环尾 ()

.子程序 创建数据库, 逻辑型, , 
.局部变量 字段, 字段信息, , "10", 

.如果真 (等于 (文件是否存在 (相加 (#数据库名, “.edb”)), 假))
    赋值 (字段 [1].名称, #方案类型)
    赋值 (字段 [1].类型, #文本型)
    赋值 (字段 [1].最大文本长度, 8)
    赋值 (字段 [2].名称, #方案名称)
    赋值 (字段 [2].类型, #文本型)
    赋值 (字段 [2].最大文本长度, 128)
    赋值 (字段 [3].名称, #数据1)
    赋值 (字段 [3].类型, #字节集型)
    赋值 (字段 [4].名称, #数据2)
    赋值 (字段 [4].类型, #字节集型)
    赋值 (字段 [5].名称, #数据3)
    赋值 (字段 [5].类型, #字节集型)
    赋值 (字段 [6].名称, #数据4)
    赋值 (字段 [6].类型, #字节集型)
    赋值 (字段 [7].名称, #数据5)
    赋值 (字段 [7].类型, #字节集型)
    赋值 (字段 [8].名称, #数据6)
    赋值 (字段 [8].类型, #字节集型)
    赋值 (字段 [9].名称, #数据7)
    赋值 (字段 [9].类型, #字节集型)
    赋值 (字段 [10].名称, #数据8)
    赋值 (字段 [10].类型, #字节集型)
    .如果真 ()

.窗口程序集 选关窗口程序集, , , 

.子程序 _选关窗口_创建完毕, 空白型, , 
赋值 (.内容, 到文本 (选择关卡))
赋值 (.被选择字符数, -1)
赋值 (.时钟周期, 500)

.子程序 _按钮1_被单击, 空白型, , 
赋值 (选择关卡, 到数值 (.内容))
选关窗口.销毁 ()

.子程序 _按钮2_被单击, 空白型, , 
选关窗口.销毁 ()

.子程序 _时钟1_周期事件, 空白型, , 
.局部变量 临时判断变量, 逻辑型, 静态, , 

.如果 (等于 (临时判断变量, 真))
    赋值 (.图片, #下1)
.否则
    赋值 (.图片, #下2)
.如果结束
赋值 (临时判断变量, 取反 (临时判断变量))

.窗口程序集 方案设计窗口程序集, , , 

.程序集变量 音乐数据, 字节集, , "8", 
.程序集变量 当前音乐, 整数型, , , 
.子程序 _方案设计窗口_创建完毕, 空白型, , 
.局部变量 临时变量, 整数型, , , 
.局部变量 临时数值, 整数型, , , 

.计次循环首 (13, 临时变量)
    事件转移 (取标记组件 (临时变量), )
.计次循环尾 ()
.变量循环首 (101, 107, 1, 临时变量)
    事件转移 (取标记组件 (临时变量), )
.变量循环尾 ()

跳到 (1)
.如果真 (等于 (查找 (并且 (等于 (读 (#方案类型), #场景方案), 等于 (读 (#方案名称), #默认方案))), 假))
    加记录 (#场景方案, #默认方案, #背景图, #墙图, #地板图, #黄箱子图, #箱子位置图, #红箱子图)
.如果真结束
刷新组合框 ()

跳到 (1)
.如果真 (等于 (查找 (并且 (等于 (读 (#方案类型), #小人方案), 等于 (读 (#方案名称), #默认方案))), 假))
    加记录 (#小人方案, #默认方案, #上1, #上2, #下1, #下2, #左1, #左2, #右1, #右2)
.如果真结束
刷新组合框 ()

跳到 (1)
.如果真 (等于 (查找 (并且 (等于 (读 (#方案类型), #音乐方案), 等于 (读 (#方案名称), #默认方案))), 假))
    加记录 (#音乐方案, #默认方案, #移动音乐, #结束音乐, #推箱音乐, #重来音乐, #禁止音乐, #点击音乐, #撤消音乐, #背景音乐)
.如果真结束
刷新组合框 ()

.子程序 刷新组合框, 空白型, , 
.参数 组合框, 组合框, , 

.局部变量 临时记录号, 整数型, , , 
.局部变量 临时变量, 整数型, , , 

.判断开始 (等于 (组合框, ))
    跳到 (1)
    清空 ()
    .计次循环首 (取记录数 (), 临时变量)
        .如果真 (等于 (查找 (等于 (读 (#方案类型), #场景方案)), 真))
            读 (#方案名称).加入项目 (取记录号 ())
            .如果真 (等于 (跳过 (), 假))
                跳出循环 ()
            .如果真结束
            
        .如果真结束
        赋值 (.现行选中项, 0)
    .计次循环尾 ()
    .如果真 (大于 (取项目数 (), 0))
        .计次循环首 (取项目数 (), 临时变量)
            赋值 (临时记录号, 相减 (临时变量, 1).取项目数值 ())
            跳到 (临时记录号)
            .如果真 (并且 (等于 (读 (#方案类型), #场景方案), 等于 (读 (#方案名称), #默认方案)))
                赋值 (.现行选中项, 相减 (临时变量, 1))
                赋值 (.图片, 读 (#数据1))
                赋值 (.图片, 读 (#数据2))
                赋值 (.图片, 读 (#数据3))
                赋值 (.图片, 读 (#数据4))
                赋值 (.图片, 读 (#数据5))
                赋值 (.图片, 读 (#数据6))
            .如果真结束
            
        .计次循环尾 ()
    .如果真结束
    
.判断 (等于 (组合框, ))
    跳到 (1)
    清空 ()
    .计次循环首 (取记录数 (), 临时变量)
        .如果真 (等于 (查找 (等于 (读 (#方案类型), #小人方案)), 真))
            读 (#方案名称).加入项目 (取记录号 ())
            .如果真 (等于 (跳过 (), 假))
                跳出循环 ()
            .如果真结束
            
        .如果真结束
        赋值 (.现行选中项, 0)
    .计次循环尾 ()
    .如果真 (大于 (取项目数 (), 0))
        .计次循环首 (取项目数 (), 临时变量)
            赋值 (临时记录号, 相减 (临时变量, 1).取项目数值 ())
            跳到 (临时记录号)
            .如果真 (并且 (等于 (读 (#方案类型), #小人方案), 等于 (读 (#方案名称), #默认方案)))
                赋值 (.现行选中项, 相减 (临时变量, 1))
                赋值 (.图片, 读 (#数据1))
                赋值 (.图片, 读 (#数据2))
                赋值 (.图片, 读 (#数据3))
                赋值 (.图片, 读 (#数据4))
                赋值 (.图片, 读 (#数据5))
                赋值 (.图片, 读 (#数据6))
                赋值 (.图片, 读 (#数据7))
                赋值 (.图片, 读 (#数据8))
            .如果真结束
            
        .计次循环尾 ()
    .如果真结束
    
.判断 (等于 (组合框, ))
    跳到 (1)
    清空 ()
    .计次循环首 (取记录数 (), 临时变量)
        .如果真 (等于 (查找 (等于 (读 (#方案类型), #音乐方案)), 真))
            读 (#方案名称).加入项目 (取记录号 ())
            .如果真 (等于 (跳过 (), 假))
                跳出循环 ()
            .如果真结束
            
        .如果真结束
        赋值 (.现行选中项, 0)
    .计次循环尾 ()
    .如果真 (大于 (取项目数 (), 0))
        .计次循环首 (取项目数 (), 临时变量)
            赋值 (临时记录号, 相减 (临时变量, 1).取项目数值 ())
            跳到 (临时记录号)
            .如果真 (并且 (等于 (读 (#方案类型), #音乐方案), 等于 (读 (#方案名称), #默认方案)))
                赋值 (.现行选中项, 相减 (临时变量, 1))
                重定义数组 (音乐数据, 假, 8)
                赋值 (音乐数据 [1], 读 (#数据1))
                赋值 (音乐数据 [2], 读 (#数据2))
                赋值 (音乐数据 [3], 读 (#数据3))
                赋值 (音乐数据 [4], 读 (#数据4))
                赋值 (音乐数据 [5], 读 (#数据5))
                赋值 (音乐数据 [6], 读 (#数据6))
                赋值 (音乐数据 [7], 读 (#数据7))
                赋值 (音乐数据 [8], 读 (#数据8))
                赋值 (当前音乐, 1)
            .如果真结束
            
        .计次循环尾 ()
    .如果真结束
    
.默认
    
.判断结束


.子程序 _单选框8_被单击, 空白型, , 
.局部变量 临时单选框, 单选框, , , 
.局部变量 临时标记, 整数型, , , 

赋值 (临时单选框, 取事件组件 ())
赋值 (临时标记, 相减 (到数值 (临时单选框.标记), 100))
输出调试文本 (到文本 (临时标记))
赋值 (当前音乐, 临时标记)
播放音乐 (音乐数据 [当前音乐], )

.子程序 _更改音乐_被单击, 空白型, , 
.局部变量 临时字节集, 字节集, , , 

赋值 (.类型, 0)
赋值 (.标题, “请选择一个声音文件”)
赋值 (.过滤器, “声音文件(*.wav;*.mid)|*.WAV;*.MID”)
.如果真 (等于 (打开 (), 真))
    赋值 (临时字节集, 读入文件 (.文件名))
    .如果真 (不等于 (临时字节集, {  }))
        赋值 (音乐数据 [当前音乐], 临时字节集)
    .如果真结束
    
.如果真结束


.子程序 _音乐方案组合框_列表项被选择, 空白型, , 
更新显示 ()

.子程序 _小人方案组合框_列表项被选择, 空白型, , 
更新显示 ()

.子程序 _场景方案组合框_列表项被选择, 空白型, , 
更新显示 ()

.子程序 更新显示, 空白型, , 
.参数 组合框, 组合框, , 

.局部变量 临时记录号, 整数型, , , 

.如果真 (大于 (组合框.取项目数 (), 0))
    赋值 (临时记录号, 组合框.取项目数值 (组合框.现行选中项))
    跳到 (临时记录号)
    .判断开始 (等于 (组合框, ))
        赋值 (.图片, 读 (#数据1))
        赋值 (.图片, 读 (#数据2))
        赋值 (.图片, 读 (#数据3))
        赋值 (.图片, 读 (#数据4))
        赋值 (.图片, 读 (#数据5))
        赋值 (.图片, 读 (#数据6))
    .判断 (等于 (组合框, ))
        赋值 (.图片, 读 (#数据1))
        赋值 (.图片, 读 (#数据2))
        赋值 (.图片, 读 (#数据3))
        赋值 (.图片, 读 (#数据4))
        赋值 (.图片, 读 (#数据5))
        赋值 (.图片, 读 (#数据6))
        赋值 (.图片, 读 (#数据7))
        赋值 (.图片, 读 (#数据8))
    .判断 (等于 (组合框, ))
        重定义数组 (音乐数据, 假, 8)
        赋值 (音乐数据 [1], 读 (#数据1))
        赋值 (音乐数据 [2], 读 (#数据2))
        赋值 (音乐数据 [3], 读 (#数据3))
        赋值 (音乐数据 [4], 读 (#数据4))
        赋值 (音乐数据 [5], 读 (#数据5))
        赋值 (音乐数据 [6], 读 (#数据6))
        赋值 (音乐数据 [7], 读 (#数据7))
        赋值 (音乐数据 [8], 读 (#数据8))
    .默认
        
    .判断结束
    
.如果真结束


.子程序 _删除小人方案按钮_被单击, 空白型, , 
.局部变量 h, 整数型, , , 

赋值 (h, .取项目数值 (.现行选中项))
删除 (等于 (取记录号 (), h))
彻底删除 ()
刷新组合框 ()

.子程序 _删除场景方案按钮_被单击, 空白型, , 
.局部变量 临时数值变量, 整数型, , , 

赋值 (临时数值变量, .取项目数值 (.现行选中项))
删除 (等于 (取记录号 (), 临时数值变量))
彻底删除 ()
刷新组合框 ()

.子程序 _删除音乐方案_被单击, 空白型, , 
.局部变量 临时数值变量, 整数型, , , 

赋值 (临时数值变量, .取项目数值 (.现行选中项))
删除 (等于 (取记录号 (), 临时数值变量))
彻底删除 ()
刷新组合框 ()

.子程序 _更新小人数据按钮_被单击, 空白型, , 
.局部变量 临时数值变量, 整数型, , , 
.局部变量 临时文本变量, 文本型, , , 

赋值 (临时数值变量, .取项目数值 (.现行选中项))
赋值 (临时文本变量, .取项目文本 (.现行选中项))
跳到 (临时数值变量)
.如果真 (等于 (读 (#方案类型), #小人方案))
    写 (#方案类型, #小人方案)
    写 (#方案名称, 临时文本变量)
    写 (#数据1, .图片)
    写 (#数据2, .图片)
    写 (#数据3, .图片)
    写 (#数据4, .图片)
    写 (#数据5, .图片)
    写 (#数据6, .图片)
    写 (#数据7, .图片)
    写 (#数据8, .图片)
.如果真结束
刷新组合框 ()

.子程序 _更新场景数据按钮_被单击, 空白型, , 
.局部变量 临时数值变量, 整数型, , , 
.局部变量 临时文本变量, 文本型, , , 

赋值 (临时数值变量, .取项目数值 (.现行选中项))
赋值 (临时文本变量, .取项目文本 (.现行选中项))
跳到 (临时数值变量)
.如果真 (等于 (读 (#方案类型), #场景方案))
    写 (#方案类型, #场景方案)
    写 (#方案名称, 临时文本变量)
    写 (#数据1, .图片)
    写 (#数据2, .图片)
    写 (#数据3, .图片)
    写 (#数据4, .图片)
    写 (#数据5, .图片)
    写 (#数据6, .图片)
.如果真结束
刷新组合框 ()

.子程序 _更新音乐数据按钮_被单击, 空白型, , 
.局部变量 临时数值变量, 整数型, , , 
.局部变量 临时文本变量, 文本型, , , 

赋值 (临时数值变量, .取项目数值 (.现行选中项))
赋值 (临时文本变量, .取项目文本 (.现行选中项))
跳到 (临时数值变量)
.如果真 (等于 (读 (#方案类型), #音乐方案))
    写 (#方案类型, #音乐方案)
    写 (#方案名称, 临时文本变量)
    写 (#数据1, 音乐数据 [1])
    写 (#数据2, 音乐数据 [2])
    写 (#数据3, 音乐数据 [3])
    写 (#数据4, 音乐数据 [4])
    写 (#数据5, 音乐数据 [5])
    写 (#数据6, 音乐数据 [6])
    写 (#数据7, 音乐数据 [7])
    写 (#数据8, 音乐数据 [8])
.如果真结束
刷新组合框 ()

.子程序 _新建场景方案按钮_被单击, 空白型, , 
.局部变量 文本变量, 文本型, , , 

输入框 (“输入一个新的方案名:”, “新的方案”, “”, 文本变量, #输入文本)
跳到 (1)
.如果真 (等于 (文本变量, “”))
    返回 ()
.如果真结束
.如果真 (等于 (查找 (并且 (等于 (读 (#方案类型), #场景方案), 等于 (读 (#方案名称), 文本变量))), 真))
    信息框 (相加 (#引号, 文本变量, #引号, “方案已存在”), 0, “注意”)
    返回 ()
.如果真结束
加记录 (#场景方案, 文本变量, #背景图, #墙图, #地板图, #黄箱子图, #箱子位置图, #红箱子图)
刷新组合框 ()

.子程序 _新建小人方案按钮_被单击, 空白型, , 
.局部变量 文本变量, 文本型, , , 

输入框 (“输入一个新的方案名:”, “新的方案”, “”, 文本变量, #输入文本)
跳到 (1)
.如果真 (等于 (文本变量, “”))
    返回 ()
.如果真结束
.如果真 (等于 (查找 (并且 (等于 (读 (#方案类型), #小人方案), 等于 (读 (#方案名称), 文本变量))), 真))
    信息框 (相加 (#引号, 文本变量, #引号, “方案已存在”), 0, “注意”)
    返回 ()
.如果真结束
加记录 (#小人方案, 文本变量, #上1, #上2, #下1, #下2, #左1, #左2, #右1, #右2)
刷新组合框 ()

.子程序 _新建音乐方案_被单击, 空白型, , 
.局部变量 文本变量, 文本型, , , 

输入框 (“输入一个新的方案名:”, “新的方案”, “”, 文本变量, #输入文本)
跳到 (1)
.如果真 (等于 (文本变量, “”))
    返回 ()
.如果真结束
.如果真 (等于 (查找 (并且 (等于 (读 (#方案类型), #音乐方案), 等于 (读 (#方案名称), 文本变量))), 真))
    信息框 (相加 (#引号, 文本变量, #引号, “方案已存在”), 0, “注意”)
    返回 ()
.如果真结束
加记录 (#音乐方案, 文本变量, #移动音乐, #结束音乐, #推箱音乐, #重来音乐, #禁止音乐, #点击音乐, #撤消音乐, #背景音乐)
刷新组合框 ()

.子程序 _图片框14_被双击, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 临时图片框, 图片框, , , 
.局部变量 临时字节集, 字节集, , , 
.局部变量 临时图片号, 整数型, , , 

赋值 (临时图片框, 取事件组件 ())
赋值 (.类型, 0)
赋值 (.标题, “请选择一个图片文件”)
赋值 (.过滤器, “图片文件(*.bmp;*.jpg;*.gif;*.ico;*.cur)|*.bmp;*.jpg;*.gif;*.ico;*.cur”)
.如果真 (等于 (打开 (), 真))
    赋值 (临时字节集, 读入文件 (.文件名))
    .如果真 (不等于 (临时字节集, {  }))
        赋值 (临时图片号, 载入图片 (临时字节集))
        .如果真 (等于 (临时图片号, 0))
            返回 ()
        .如果真结束
        .如果 (并且 (不等于 (临时图片号.取图片宽度 (), 30), 不等于 (临时图片号.取图片高度 (), 30)))
            临时图片号.画图片 (0, 0, 29, 29, )
            图片框15.图片 ＝ zjj
            赋值 (临时图片框.图片, 快照 (取窗口句柄 (), , ))
            临时图片框.刷新显示 ()
        .否则
            赋值 (临时图片框.图片, 临时字节集)
        .如果结束
        卸载图片 (临时图片号)
    .如果真结束
    
.如果真结束


.窗口程序集 选择方案窗口程序集, , , 

.子程序 _选择方案窗口_创建完毕, 空白型, , 
跳到 (1)
.如果真 (等于 (查找 (并且 (等于 (读 (#方案类型), #场景方案), 等于 (读 (#方案名称), #默认方案))), 假))
    加记录 (#场景方案, #默认方案, #背景图, #墙图, #地板图, #黄箱子图, #箱子位置图, #红箱子图)
.如果真结束
更新 (#场景方案)

跳到 (1)
.如果真 (等于 (查找 (并且 (等于 (读 (#方案类型), #小人方案), 等于 (读 (#方案名称), #默认方案))), 假))
    加记录 (#小人方案, #默认方案, #上1, #上2, #下1, #下2, #左1, #左2, #右1, #右2)
.如果真结束
更新 (#小人方案)

跳到 (1)
.如果真 (等于 (查找 (并且 (等于 (读 (#方案类型), #音乐方案), 等于 (读 (#方案名称), #默认方案))), 假))
    加记录 (#音乐方案, #默认方案, #移动音乐, #结束音乐, #推箱音乐, #重来音乐, #禁止音乐, #点击音乐, #撤消音乐, #背景音乐)
.如果真结束
更新 (#音乐方案)

赋值 (方案被改变, 假)

.子程序 更新, 空白型, , 
.参数 组合框, 组合框, , 
.参数 类型, 文本型, , 

.局部变量 临时变量, 整数型, , , 

跳到 (1)
组合框.清空 ()
.计次循环首 (取记录数 (), 临时变量)
    .如果真 (等于 (查找 (等于 (读 (#方案类型), 类型)), 真))
        组合框.加入项目 (读 (#方案名称), 取记录号 ())
        .如果真 (等于 (跳过 (), 假))
            跳出循环 ()
        .如果真结束
        
    .如果真结束
    赋值 (组合框.现行选中项, 0)
.计次循环尾 ()

.子程序 _按钮1_被单击, 空白型, , 
赋值 (场景方案名, .取项目文本 (.现行选中项))
赋值 (小人方案名, .取项目文本 (.现行选中项))
赋值 (音乐方案名, .取项目文本 (.现行选中项))
赋值 (方案被改变, 真)
销毁 ()

.子程序 _按钮2_被单击, 空白型, , 
赋值 (方案被改变, 假)
销毁 ()


 ' 不属于任何一个程序集、类模块的函数：
