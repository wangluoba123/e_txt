 ' 文件类型：Windows模块源码

 ' 程序名称：文件读写
 ' 程序描述：文件读写
@备注:
文件读写
 ' 程序作者：李光
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：李光
 ' 版本号：1.0
 ' 创建号：0.0



.常量 GENERIC_WRITE, "1073741824", , GENERIC_WRITE
.常量 GENERIC_READ, "2147483648", , GENERIC_READ
.常量 打开方式_读写, "4", 公开, OPEN_ALWAYS' 如文件不存在则创建它。
.常量 打开方式_重写, "5", 公开, TRUNCATE_EXISTING' 文件必须已经存在。
.常量 打开方式_创建, "1", 公开, CREATE_NEW' 如文件存在则会出错。
.常量 共享方式_不共享, "0", 公开, 
.常量 共享方式_可读, "1", 公开, FILE_SHARE_READ
.常量 共享方式_可写, "2", 公开, FILE_SHARE_WRITE
.常量 FILE_BEGIN, "0", , 
.常量 FILE_CURRENT, "1", , 
.常量 FILE_END, "2", , 
.常量 HFILE_ERROR, "-1", , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 5 0 系统核心支持库




数据类型 OVERLAPPED, , 
    .成员 Internal, 整数型, , , 
    .成员 InternalHigh, 整数型, , , 
    .成员 Pointer, 整数型, , , 
    .成员 hEvent, 整数型, , , 


.DLL命令 CreateFile, 整数型, "", "CreateFileA", , 
    .参数 lpFileName, 文本型, , 
    .参数 dwDesiredAccess, 整数型, , 
    .参数 dwShareMode, 整数型, , 
    .参数 lpSecurityAttributes, 整数型, , 
    .参数 dwCreationDisposition, 整数型, , 
    .参数 dwFlagsAndAttributes, 整数型, , 
    .参数 hTemplateFile, 整数型, , 

.DLL命令 CloseHandle, 整数型, "", "", , 
    .参数 hObject, 整数型, , 

.DLL命令 llseek, 整数型, "", "_llseek", , 
    .参数 hFile, 整数型, , 
    .参数 lOffset, 整数型, , 
    .参数 iOrigin, 整数型, , 

.DLL命令 GetFileSizeEx, 整数型, "", "GetFileSizeEx", , 
    .参数 hFile, 整数型, , 
    .参数 lpFileSize, 长整数型, 传址, 

.DLL命令 SetFilePointerEx, 逻辑型, "", "", , 
    .参数 hFile, 整数型, , 
    .参数 liDistanceToMove, 长整数型, , 
    .参数 lpNewFilePointer, 长整数型, 传址, 
    .参数 dwMoveMethod, 整数型, , 

.DLL命令 ReadFile, 整数型, "", "", , 
    .参数 hFile, 整数型, , 
    .参数 lpBuffer, 字节集, 传址, 
    .参数 nNumberOfBytes, 整数型, , 
    .参数 lpNumberOfBytesRead, 整数型, 传址, 
    .参数 lpOverlapped, 整数型, , 

.DLL命令 WriteFile, 整数型, "", "", , 
    .参数 hFile, 整数型, , 
    .参数 lpBuffer, 字节集, 传址, 
    .参数 nNumberOfBytesToWrite, 整数型, , 
    .参数 lpNumberOfBytesWritten, 整数型, 传址, 
    .参数 lpOverlapped, 整数型, , 

.DLL命令 WriteFileEx, 整数型, "", "", , 
    .参数 hFile, 整数型, , 
    .参数 lpBuffer, 字节集, , 
    .参数 nNumberOfBytesToWrite, 整数型, , 
    .参数 lpOverlapped, OVERLAPPED, 传址, 
    .参数 lpCompletionRoutine, 整数型, , 

.程序集 程序集1, , , 

.子程序 _启动子程序, 整数型, , 请在本子程序中放置易模块初始化代码

_临时子程序 () ' 在初始化代码执行完毕后调用测试代码
返回 (0) ' 可以根据您的需要返回任意数值

.子程序 _临时子程序, 空白型, , 
 ' 本名称子程序用作测试程序用，仅在开发及调试环境中有效，编译发布程序前将被系统自动清空，请将所有用作测试的临时代码放在本子程序中。 ***注意不要修改本子程序的名称、参数及返回值类型。

.类模块 文件读写, , , 

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用
 ' --========  易语言资源网  (www.wodesoft.com)  ======--
 ' 努力创建完善、持续更新的易语言学习例程源码资源站
 ' --================   www.wodesoft.com  ===========--
 ' --==================   易语言资源网注意事项  ================--
 ' * 易语言资源网为易语言官方站、易语言官方论坛提供辅助资源站；
 ' 本易语言资源网( www.wodesoft.com)所有软件和资料均为软件作者提
 ' 供和网友推荐发布而来，其版权归该软件和程序源码的合法拥有者所
 ' 有，本站易语言资源网整理收集仅供易语言用户学习和易语言技术研
 ' 究探讨使用，不得用于任何商业用途。如果由于以上原因造成的版权
 ' 纠纷本站概不负责！
 ' * 本站资源未经许可，任何网站不得非法盗链及抄袭本站资源；如引用
 ' 页面，请注明来自易语言资源网，谢谢合作！
 ' --=====================   www.wodesoft.com  ================--


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 打开文件, 整数型, 公开, 成功返回文件句柄 ,失败返回 -1  .  会设置GetLastError
.参数 文件名, 文本型, , 欲打开的文件名称
.参数 打开方式, 整数型, 可空, 默认 #打开方式_读写
.参数 共享方式, 整数型, 可空, 默认 #共享方式_不共享

.如果真 (并且 (不等于 (打开方式, #打开方式_读写), 不等于 (打开方式, #打开方式_创建), 不等于 (打开方式, #打开方式_重写)))
    赋值 (打开方式, #打开方式_读写)
.如果真结束
.如果真 (并且 (不等于 (共享方式, #共享方式_不共享), 不等于 (共享方式, #共享方式_可读), 不等于 (共享方式, #共享方式_可写)))
    赋值 (共享方式, #共享方式_不共享)
.如果真结束
返回 (CreateFile (文件名, 位或 (#GENERIC_READ, #GENERIC_WRITE), 共享方式, 0, 打开方式, 0, 0))

.子程序 关闭文件, 空白型, 公开, 关闭一个已打开的文件
.参数 文件句柄, 整数型, , 该句柄由“打开文件”命令所返回。

CloseHandle (文件句柄)

.子程序 移动读写位置, 长整数型, 公开, 成功返回新位置, 失败返回 -1 . 会设置GetLastError
.参数 文件句柄, 整数型, , 该句柄由“打开文件”命令所返回。
.参数 起始移动位置, 整数型, 可空, 参数值指定从文件中开始移动的位置。可以为以下常量之一：1、#文件首； 2、#文件尾； 3、#现行位置。如果本参数被省略，默认值为“#文件首”。
.参数 移动距离, 长整数型, , 参数值指定相对于起始移动位置的移动长度。

.局部变量 新位置, 长整数型, , , 

.判断开始 (等于 (起始移动位置, #文件首))
    赋值 (起始移动位置, #FILE_BEGIN)
.判断 (等于 (起始移动位置, #现行位置))
    赋值 (起始移动位置, #FILE_CURRENT)
.判断 (等于 (起始移动位置, #文件尾))
    赋值 (起始移动位置, #FILE_END)
.默认
    赋值 (起始移动位置, #FILE_BEGIN)
.判断结束
.如果 (SetFilePointerEx (文件句柄, 移动距离, 新位置, 起始移动位置))
    返回 (新位置)
.否则
    返回 (-1)
.如果结束
 ' 本源码来自易语言资源网(www.wodesoft.com)

.子程序 取文件长度, 长整数型, 公开, 成功返回文件长度 ,失败返回 -1 .会设置GetLastError
.参数 文件句柄, 整数型, , 该句柄由“打开文件”命令所返回。

.局部变量 长度, 长整数型, , , 

.如果 (等于 (GetFileSizeEx (文件句柄, 长度), 0))
    返回 (-1)
.否则
    返回 (长度)
.如果结束


.子程序 读入字节集, 整数型, 公开, 成功返回 实际读入的字节数 ,失败返回 -1 . 会设置GetLastError
.参数 文件句柄, 整数型, , 该句柄由“打开文件”命令所返回。
.参数 存放数据的变量, 字节集, 参考, 
.参数 欲读入数据的长度, 整数型, , 

.局部变量 读入的字符数, 整数型, , , 

赋值 (存放数据的变量, 取空白字节集 (欲读入数据的长度))
.如果 (等于 (ReadFile (文件句柄, 存放数据的变量, 欲读入数据的长度, 读入的字符数, 0), 0))
    赋值 (存放数据的变量, {  })
    返回 (-1)
.否则
    返回 (读入的字符数)
.如果结束
 ' 本源码来自易语言资源网(www.wodesoft.com)

.子程序 写出字节集, 整数型, 公开, 成功返回 实际写出字节数, 失败返回 -1 . 会设置GetLastError
.参数 文件句柄, 整数型, , 该句柄由“打开文件”命令所返回。
.参数 欲写出的字节集数据, 字节集, , 

.局部变量 实际写出字节数, 整数型, , , 

.如果 (等于 (WriteFile (文件句柄, 欲写出的字节集数据, 取字节集长度 (欲写出的字节集数据), 实际写出字节数, 0), 0))
    返回 (-1)
.否则
    返回 (实际写出字节数)
.如果结束


.子程序 取读写位置, 长整数型, 公开, 成功返回 当前读写位置 , 失败返回 -1 . 会设置GetLastError
.参数 文件句柄, 整数型, , 该句柄由“打开文件”命令所返回。

.局部变量 读写位置, 长整数型, , , 

.如果 (SetFilePointerEx (文件句柄, 0, 读写位置, #FILE_CURRENT))
    返回 (读写位置)
.否则
    返回 (-1)
.如果结束
' 本源码来自易语言资源网(www.wodesoft.com)

.子程序 是否在文件尾, 逻辑型, 公开, 
.参数 文件句柄, 整数型, , 该句柄由“打开文件”命令所返回。

.局部变量 长度, 长整数型, , , 
.局部变量 读写位置, 长整数型, , , 

GetFileSizeEx (文件句柄, 长度)
SetFilePointerEx (文件句柄, 0, 读写位置, #FILE_CURRENT)
返回 (小于或等于 (长度, 读写位置))

.子程序 移到文件首, 逻辑型, 公开, 成功返回真 , 失败返回假
.参数 文件句柄, 整数型, , 该句柄由“打开文件”命令所返回。

.局部变量 读写位置, 长整数型, , , 
.局部变量 长度, 长整数型, , , 

GetFileSizeEx (文件句柄, 长度)
返回 (SetFilePointerEx (文件句柄, 负 (长度), 读写位置, #FILE_END))

.子程序 移到文件尾, 逻辑型, 公开, 成功返回真 , 失败返回假
.参数 文件句柄, 整数型, , 该句柄由“打开文件”命令所返回。

.局部变量 长度, 长整数型, , , 
.局部变量 读写位置, 长整数型, , , 

GetFileSizeEx (文件句柄, 长度)
返回 (SetFilePointerEx (文件句柄, 长度, 读写位置, #FILE_BEGIN))


 ' 不属于任何一个程序集、类模块的函数：
