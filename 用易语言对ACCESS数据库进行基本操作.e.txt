 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 420
    高度 = 389
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “用易语言对ACCESS数据库进行基本操作”
    帮助文件名 = “”





 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 4 系统核心支持库
 ' iext 27bb20fdd3e145e4bee3db39ddd6e64c 1 2 扩展界面支持库一





.窗口程序集 用易语言对ACCESS数据库进行基本操作, , , 

.程序集变量 查询变量, 整数型, , , 
.程序集变量 排序变量, 整数型, , , 
.子程序 说明, 空白型, , 例程说明
 ' 这里是说明部分。
 ' 本人弄这个例程前，对数据库知道的不多，仅会一些简单的操作，根本不懂SQL的命令，可以说，在这方面的知识就是一空二白。
 ' 在易语言的论坛里，我能找到许多关于易语言应用数据库的例程，但可惜都是没什么说明的，而我人又比较笨，高手们在回答我们这些新手时又解释的太少了，我经常是看得一头暮水，不知所言，这个样子别说能成为什么高手了，能学会点皮毛就很不错了。
 ' 还好，我人虽不机灵，还是知道笨鸟当先飞的道理，所以平时就先把能够找到的资料收集起来，然后集中时间一起看，看得多了，知道要如何比较了，才慢慢地懂得了些许皮毛，而今，我在弄自己的一些东西时，思前想后，突然觉得，其实，我当初不必这样辛苦的，只是因为没有一个在这方面比较熟悉的人帮忙整理一下这些资料，使我们这些新手面对这么多的资料时，不知所措，无从下手，才会越看越糊涂，越学越不明白，最后惟有望洋兴叹，只恨自己为什么没那个命，不是这个才，无法一鸣通天，展翅而翔，在逍遥云外，一窥这知识海洋里的夏威屿。
 ' 想到这里，我一下子掉进了牛角尖里，再无法拐过弯来――我为何不自己去整理呢？好歹兴许能让一些和我一样的人少受些罪，少走些弯路呢！于是，我的那颗心顿时豪情万丈，不知天高地厚，就这样忙乎开了。不过，丑小鸭终归不是白天鹅，无法翱翔蓝天，就算有朝一日它会变成白天鹅，可现在它却还是只丑小鸭罢了，更何况它就是只丑小鸭。我没学过数据库，所学的专业不是计算机，硬要扯也扯不上什么大的关系，现在只是看了那么几天的有关数据库的例子或文章，从理论方面下手整理，我做不到，除非我用个十年八载地去把这些东西给学习一遍――但我又没那个耐心，也没有这个坚持不懈的精神，更不想牺牲我那已经够平凡的青春――罢了罢了，只好再做回“小矮人”，东拼西凑了这么个“用易语言对ACCESS数据库进行基本操作”的小东西，顾不得被人贻笑大方了，仅表心意……
 ' 呵呵，如有不妥之处，还望各位看官见谅见谅！

.子程序 与初学数据库的朋友说说SQL语句, 空白型, , 数据库基础知识
 ' 以下内容并非我所写，而是我在易语言论坛里找到的，我能完成这个例程，得益于这篇文章，故辛苦一点也要把它附上。
 ' ****************************************************************************************************************
 ' 近半个月来我才开始学习使用数据库。为了学习数据库，我写了两个软件，一个是日记本，一个是通讯录。前一个软件应该说是在朋友们的帮助下才完成的。
 ' 学习使用数据库，难免要使用SQL语句。外部数据库使用SQL语句可以快速地完成对数据库的种种操作，如：查询、修改、插入记录、删除记录等。至于更多的，比如：创建表、删除表、加密数据等等，等我们能够比较熟练地掌握数据库的操作再研究。
 ' 一、基本命令格式
 ' 1、查询记录
 ' 基本格式：select 字段名 from 表名 where 条件
 ' 例如：要查询“员工表”中“张三”的信息，可以这么写：“select * from 员工表 where 姓名='张三'”。这里，“员工表”是要查询的表的名称，“姓名”是字段名称。
 ' 如果要查询的是张三的电话呢？就得这么写：“select 电话 from 员工表 where 姓名='张三'”。“电话”也是该表中的字段。
 ' 如果要查询整个表的信息，就不需要加“where”。比如，要查询“员工表”中所有员工的全部信息，就可以这么写：“select * from 员工表”。
 ' 2、删除记录
 ' 基本格式：delete from 表名 where 条件
 ' 例如：要删除“学生表”中“成绩”小于50的学生名字，可以这么写：“delete from 学生表 where 成绩<50”
 ' 如果不加条件，就会删除该表中所有记录，该表就变成一个没有记录的空表，以后还可以向表中添加记录。本命令与删除表“drop table”不同，“drop table”删除的是被操作的表，删除后，整个表都不存在，也就不可以再添加记录了。
 ' 3、添加记录
 ' 基本格式：insert into 表名（字段1,字段2,字段3) values (字段1的值,字段2的值,字段3的值)
 ' 本命令是往指定的表中添加记录。要注意，“表名”后面括号中是被操作的字段名称，“values”后面括号中是对应的字段值，不要弄错了位置的先后顺序。还有，本命令不可以跟“where”,因为你要添加的记录在表中根本没有，所以也就不可以有什么条件了。
 ' 4、修改记录
 ' 基本格式：update 表名 set 欲修改的字段名1=该字段的新值,欲修改的字段名2=该字段的新值 where 条件
 ' 该命令是修改表中已经存在的记录数据。如果不加“where”条件，就会把所有指定的字段都改成新值。
 ' 比如：要修改“员工表”中“张三”的工资为1500，应该这么写：“update 员工表 set 工资=1500 where 姓名='张三'”。
 ' 二、易语言命令操作数据库
 ' 在易语言中，对外部数据库，比如ACCESS的操作，有如下方法：
 ' 一个是用“外部数据库”，另一个是用“数据库连接”和“记录集”。前一种是我这段时间正在学习的，操作起来比较方便。后一种我还没有用过，不敢多讲。不过，我觉得记录集就象一张表格，只是这表格是看不见的，是动态的。在这里，我只说一下“外部数据库”。
 ' 1、查询操作
 ' 基本命令：外部数据库控件名称.查询(SQL命令语句)
 ' 这一命令只可以用来进行查询操作。使用的时候要注意SQL语句是否正确。
 ' 如果查询的记录存在，则返回满足查询条件的记录的条数，否则返回0。
 ' 2、非查询操作
 ' 基本命令：外部数据库控件名称.执行(SQL命令语句,操作的数据)
 ' 这一命令可以完成对数据的添加、删除、修改等操作，也可以完成对数据库中表的创建、删除。此命令有两个参数，第一个是SQL命令，后一个是你要操作的数据。第二个参数是可以省略的，只在对表中的备注型、OLE型字段进行操作时才用。
 ' 本命令执行成功返回真，否则返回假。这样我们就可以通过执行的结果来判断操作是否正确了。
 ' 比如，你想把一张图片放入数据库，应该这么做：
 ' 外部数据库1.执行(“insert into 图片表(图片名,图片) values ('美丽的图片',?)”,读入文件(你要放入的图片的文件名称))
 ' 其中，“图片表”是你的数据库中存放图片的表的名称，“图片名”和“图片”是字段名称，前一字段是文本型的，后一字段是OLE型，也就是易语言中字节集型的。
 ' “美丽的图片”是在表中插入的新记录中“图片名”字段所对应的值，在SQL语句中要用单引号括起来。“?”表示你要操作的数据，如果你操作的数据中有字节集型的，应该用“?”代替，在后面的第二参数中写入真正的数据内容。如果你同时操作多个字节集型的数据，应该用多个“?”，并且后面按照顺序放置相应的值。
 ' 3、读数据库数据
 ' 读数据的时候，首先要用查询命令，要不然是没法读数据的。
 ' 建立一个变量，存放查询的结果。如：查询结果，整数型。
 ' 查询结果＝外部数据库控件名称.查询(查询类的SQL语句)
 ' 外部数据库控件名称.到首记录(查询结果)
 ' 存放数据的变量＝外部数据库控件名称.读(查询结果,要读的字段名称)
 ' 好了，以上是我学习数据库以来的一点体会，与朋友们一同分享。朋友们也可以看一下我最近发的软件《小小日记本》、《易用通讯录》和例程《图片导入数据库》，里面用了SQL语句对ACCESS数据库进行记录的增删、修改、查询等操作。

.子程序 __启动窗口_创建完毕, 空白型, , 程序创建完毕
相加 (取运行目录 (), “\db1.mdb”).打开MDB数据库 ()
 ' 在程序创建完毕时就预先打开数据库。
 ' 这个数据库（db1.mdb）在创建时并没有定义 自动编号 这个主键。
赋值 (排序变量, 0)
 ' 用于后面按升降排列。

.子程序 _录入_被单击, 空白型, , 录入新的数据
.如果 (并且 (不等于 (.内容, “”), 不等于 (.内容, “”), 不等于 (.内容, “”)))
    相加 (“insert into 表1(编号,姓名,性别) values ('”, .内容, “' , '”, .内容, “','”, .内容, “' )”).执行 ()
.否则
    信息框 (“还有资料没有填写完呢！”, #信息图标, “录入错误提示”)
    返回 ()
.如果结束
 ' 本功能完成录入的操作。

.子程序 _修改_被单击, 空白型, , 修改原有数据
.如果 (不等于 (.内容, “”))
    相加 (“update 表1 set 编号='”, .内容, “' where 姓名='”, .内容, “'”).执行 ()
.否则
    
.如果结束
.如果 (不等于 (.内容, “”))
    相加 (“update 表1 set 编号='”, .内容, “' where 性别='”, .内容, “'”).执行 ()
.否则
    
.如果结束

 ' 一个简单的判断：如果 编号编辑框 的 内容 不是空的话，
 ' 就对where （条件）所给出的条件内容（如 姓名编辑框 或 性别编辑框 的内容）进行相应内容（编号）的修改，
 ' 修改的内容是：把 姓名编辑框 或 性别编辑框 给出的记录中相应的内容修改为你填写在 编号编辑框 的内容。
 ' ******************************************************************************************************
 ' 注意：如果 姓名编辑框 和 性别编辑框 的内容填写的是不同的两个记录的数据，那么这两个记录的相关内容都会被修改掉！

.子程序 _删除_被单击, 空白型, , 删除数据
相加 (“delete from 表1 where 编号='”, .内容, “'”).执行 ()
 ' 这里只根据 where （条件）所给出的条件内容（这里只有 编号）进行删除，没有考虑其他的要求。

.子程序 _降序_被单击, 空白型, , 按照降序排列数据
赋值 (排序变量, 1)
排序条件判断 ()

.子程序 _升序_被单击, 空白型, , 按照升序排列数据
赋值 (排序变量, 2)
排序条件判断 ()

.子程序 排序条件判断, 空白型, , 升降序的判断
.局部变量 计次, 整数型, , , 
.局部变量 排序结果, 空白型, , , 

.如果 (小于 (排序变量, 1))
    返回 ()
.否则
    
.如果结束
.计次循环首 (取列数 (), 计次)
    相减 (取列数 (), 1).删除列 ()
.计次循环尾 ()
.插入列 (“编号”, 36, , , )
.插入列 (“姓名”, 60, , , )
.插入列 (“性别”, 36, , , )
全部删除 ()
.如果 (等于 (排序变量, 1))
    赋值 (排序结果, “select * from 表1 order by 编号 desc”.查询 ())
     ' 这个是降序。
.否则
    
.如果结束
.如果 (等于 (排序变量, 2))
    赋值 (排序结果, “select * from 表1 order by 编号”.查询 ())
     ' 这个是升序。
.否则
    
.如果结束
排序结果.到首记录 ()
.判断循环首 (等于 (排序结果.尾记录后 (), 假))
    .插入表项 (排序结果.读 (1), , , , )
    相减 (取表项数 (), 1).置标题 (1, 排序结果.读 (2))
    相减 (取表项数 (), 1).置标题 (2, 排序结果.读 (3))
    
    排序结果.到后一记录 ()
.判断循环尾 ()
排序结果.关闭记录集 ()

.子程序 _统计_被单击, 空白型, , 统计总数
.局部变量 统计记录, 整数型, , , 

赋值 (统计记录, “select count(*) as 编号 from 表1”.查询 ())
信息框 (相加 (“记录数共有”, 到文本 (统计记录.读 (“编号”)), “条”), 0, “统计结果”)
 ' 简单地统计总数。

.子程序 _查询_被单击, 空白型, , 按条件查询数据
.局部变量 计次, 整数型, , , 
.局部变量 查询结果, 整数型, , , 
.局部变量 查询条件, 文本型, , , 

查询条件判断 ()
赋值 (查询结果, “select * from 表1”.查询 ())
.如果 (等于 (查询变量, 0))
    信息框 (“您还没有填写查询条件呢！”, #信息图标, “查询错误提示”)
    返回 ()
.否则
    
.如果结束
.计次循环首 (取列数 (), 计次)
    相减 (取列数 (), 1).删除列 ()
.计次循环尾 ()
.插入列 (“编号”, 36, , , )
.插入列 (“姓名”, 60, , , )
.插入列 (“性别”, 36, , , )
全部删除 ()
.如果 (等于 (查询变量, 1))
    赋值 (查询结果, 相加 (“select * from 表1 where 编号  like '%”, .内容, “%'”).查询 ())
     ' like '%  %' 表示按 编号 关键字模糊地查询。
.否则
    
.如果结束
.如果 (等于 (查询变量, 2))
    赋值 (查询结果, 相加 (“select * from 表1 where 姓名 like '%”, .内容, “%'”).查询 ())
     ' like '%  %' 表示按 姓名 关键字模糊地查询。
.否则
    
.如果结束
.如果 (等于 (查询变量, 3))
    赋值 (查询结果, 相加 (“select * from 表1 where 性别 like '%”, .内容, “%'”).查询 ())
     ' like '%  %' 表示按 性别 （分男女）关键字模糊地查询。
     ' ********************************************************
     ' 我还没弄明白没有  like '%  %' 它就没办法实现查询性别（按男或女）。
     ' 而且，我也没解决当 编号（姓名）与 性别 一起作为查询条件时，它只按照关键字模糊地查询，结果与这个一样，无法准确定位的问题。
.否则
    
.如果结束
.如果 (等于 (查询变量, 4))
    赋值 (查询结果, 相加 (“select * from 表1 where 性别 like '%”, .内容, “%'”).查询 ())
.否则
    
.如果结束
查询结果.到首记录 ()
.判断循环首 (等于 (查询结果.尾记录后 (), 假))
    .插入表项 (查询结果.读 (1), , , , )
    相减 (取表项数 (), 1).置标题 (1, 查询结果.读 (2))
    相减 (取表项数 (), 1).置标题 (2, 查询结果.读 (3))
    
    查询结果.到后一记录 ()
.判断循环尾 ()
查询结果.关闭记录集 ()


.子程序 查询条件判断, 空白型, , 查询条件的判断
.如果 (并且 (等于 (.内容, “”), 等于 (.内容, “”), 等于 (.内容, “”)))
    赋值 (查询变量, 0)
.否则
    
.如果结束
.如果 (不等于 (.内容, “”))
    赋值 (查询变量, 1)
.否则
    
.如果结束
.如果 (不等于 (.内容, “”))
    赋值 (查询变量, 2)
.否则
    
.如果结束
.如果 (等于 (.内容, “女”))
    赋值 (查询变量, 3)
.否则
    
.如果结束
.如果 (等于 (.内容, “男”))
    赋值 (查询变量, 4)
.否则
    
.如果结束
 ' 设置各种查询的条件。

.子程序 _显示_被单击, 空白型, , 在列表框显示数据
.局部变量 显示数据, 整数型, , , 
.局部变量 计次, 整数型, , , 

 ' 计次，这个变量用来判断实际列数，以防止不断单击而导致项目不断重复地出现，只有第一次出现的实际项目下有数据外。
.计次循环首 (取列数 (), 计次)
    相减 (取列数 (), 1).删除列 ()
.计次循环尾 ()
 ' 这一段便是用来判断实际列数并把多余的删去。
.插入列 (“编号”, 36, , , )
.插入列 (“姓名”, 60, , , )
.插入列 (“性别”, 36, , , )
 ' 以上三个就是加入项目，也就是你数据库中的字段。
全部删除 ()
 ' 这句与 计次 的作用刚好相反，它是用来删去因不断单击而重复出现的数据内容，这些重复的数据只出现在第一次出现的项目下。
赋值 (显示数据, “select * from 表1 ”.查询 ())
显示数据.到首记录 ()
.判断循环首 (等于 (显示数据.尾记录后 (), 假))
    .插入表项 (显示数据.读 (1), , , , )
     ' 这个是读入数据，没有它，除了项目（列数），什么内容也没有，但它只能显示出第一个项目（第一列）的数据。
    相减 (取表项数 (), 1).置标题 (1, 显示数据.读 (2))
    相减 (取表项数 (), 1).置标题 (2, 显示数据.读 (3))
     ' 这些就是把其他项目的数据显示出来，一句对应一个项目（列）。
    显示数据.到后一记录 ()
.判断循环尾 ()
显示数据.关闭记录集 ()

.子程序 _打印_被单击, 空白型, , 打印数据
真.开始打印 (真, , , , )
' 这个没试用过，不知道对不对，感觉这样是不行的。


 ' 不属于任何一个程序集、类模块的函数：
