 ' 文件类型：Linux控制台程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0



.常量 主界面, "1", , 
.常量 下载界面, "2", , 
.常量 FTP界面, "3", , 
.常量 , , , 
.常量 下载界面_下载信息输入, "1", , 
.常量 下载界面_下载时信息, "2", , 
.常量 下载界面_详细交互信息, "3", , 
.常量 , , , 
.常量 FTP界面_选择界面, "4", , 
.常量 FTP界面_登陆信息输入, "5", , 
.常量 FTP界面_上传信息输入, "6", , 
.常量 FTP界面_上传时界面, "7", , 
.常量 , , , 
.常量 , , , 
.常量 下载_选择状态, "0", , 
.常量 下载_填写下载信息状态, "1", , 
.常量 下载_正在下载状态, "2", , 
.常量 下载_停止下载状态, "3", , 
.常量 , , , 
.常量 FTP_填写登陆信息状态, "0", , 
.常量 FTP_填写删除文件名状态, "1", , 
.常量 FTP_填写改名状态, "2", , 
.常量 FTP_创建目录, "3", , 
.常量 FTP_删除目录, "4", , 
.常量 FTP_设置当前目录, "5", , 
.常量 FTP_取当前目录, "6", , 
.常量 FTP_移动文件, "7", , 
.常量 FTP_执行命令, "8", , 
.常量 FTP_显示目录, "9", , 
.常量 FTP上传_填写上传信息, "10", , 
.常量 FTP上传_正在上传, "10", , 
.常量 , , , 
.常量 , , , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 2 系统核心支持库
 ' downlib 80CF4A6B3E09425bA57935A3A0E4C473 2 0 网络传送支持库
 ' console 1E86AA0150514527BB567CD22F3733C8 1 0 控制台操作支持库
 ' EThread 5F99C1642A2F4e03850721B4F5D7C3F8 1 1 多线程支持库




数据类型 线程信息, , 
    .成员 线程状态, 文本型, , , 
    .成员 线程信息, 整数型, , , 
    .成员 开始位置, 整数型, , , 
    .成员 已下载大小, 整数型, , , 

.全局变量 下载核心对象, 未知类型0x20001, , , 
.全局变量 FTP上传核心对象, 未知类型0x20002, , , 
.全局变量 FTP辅助核心对象, 未知类型0x20003, , , 
.全局变量 操作系统, 整数型, , , 
.全局变量 屏幕, 控制台类, , , 
.全局变量 屏幕长, 整数型, , , 
.全局变量 屏幕宽, 整数型, , , 
.全局变量 当前界面位置, 整数型, , , 
.全局变量 子界面位置, 整数型, , , 
.全局变量 位置标题, 文本型, , "3", 
.全局变量 命令输入横坐标, 整数型, , , 
.全局变量 命令输入纵坐标, 整数型, , , 
.全局变量 当前位置横坐标, 整数型, , , 
.全局变量 当前位置纵坐标, 整数型, , , 
.全局变量 信息区域开始纵坐标, 整数型, , , 
.全局变量 最后信息位置横坐标, 整数型, , , 
.全局变量 最后信息位置纵坐标, 整数型, , , 
.全局变量 光标常规停留位置, 整数型, , , 
.全局变量 输出锁, 整数型, , , 
.全局变量 匿名全局变量_1967, 空白型, , , 
.全局变量 退格键, 整数型, , , 
.全局变量 回车键, 整数型, , , 
.全局变量 上键, 整数型, , , 
.全局变量 下键, 整数型, , , 
.全局变量 左键, 整数型, , , 
.全局变量 右键, 整数型, , , 
.全局变量 其它键, 整数型, , , 
.全局变量 默认背景色, 整数型, , , 
.全局变量 匿名全局变量_2142, 空白型, , , 

.程序集 主程序集, , , 

.子程序 _启动子程序, 整数型, , 本子程序在程序启动后最先执行
主程序 ()
返回 (0) ' 可以根据您的需要返回任意数值

.子程序 主程序, 空白型, , 
初始化信息 ()
创建资源 ()
未知支持库函数_0 (20480, 5000, 100)
屏幕.清屏 ()
屏幕.取屏幕大小 (屏幕长, 屏幕宽)
初始化位置标题 ()
输出主程序头 ()
设置当前界面位置 (#主界面)
输出当前界面位置 ()
屏幕.取光标位置 (命令输入横坐标, 命令输入纵坐标)
清除命令区域 ()
清楚信息区域 ()
设置信息区域开始位置 (相加 (命令输入纵坐标, 4))
命令接收 ()
清除资源 ()


.子程序 初始化信息, 空白型, , 
赋值 (操作系统, 取操作系统类别 ())
.判断开始 (等于 (操作系统, 4))
    赋值 (上键, 259)
    赋值 (下键, 258)
    赋值 (左键, 260)
    赋值 (右键, 261)
    赋值 (退格键, 263)
    赋值 (回车键, 10)
    
.默认
    
    赋值 (上键, 72)
    赋值 (下键, 80)
    赋值 (左键, 75)
    赋值 (右键, 77)
    赋值 (退格键, 8)
    赋值 (回车键, 13)
    
.判断结束
赋值 (其它键, -1)
赋值 (默认背景色, #.)


.子程序 创建资源, 空白型, , 
赋值 (输出锁, 未知支持库函数_1 ())
创建调试文件 ()


.子程序 清除资源, 空白型, , 
未知支持库函数_2 (输出锁)
关闭调试文件 ()


.子程序 初始化位置标题, 空白型, , 
赋值 (位置标题 [1], “Main”)
赋值 (位置标题 [2], “DownSubSystem”)
赋值 (位置标题 [3], “FtpSubSystem”)

.子程序 输出主程序头, 空白型, , 
.局部变量 横坐标, 整数型, , , 
.局部变量 纵坐标, 整数型, , , 
.局部变量 临时纵坐标, 整数型, , , 


屏幕.填充背景色 (0, 0, 默认背景色, 相乘 (屏幕长, 屏幕宽))

屏幕.带颜色输出文本 (#., 默认背景色, “EDownConsole For Linux (0.01)”)
屏幕.取光标位置 (横坐标, 纵坐标)
屏幕.输出换行 (1)
屏幕.带颜色输出一行文本 (#., 默认背景色, “2004/4/22 -- 2004/5/31 (v111)”)
屏幕.带颜色输出文本 (#., 默认背景色, “m (mainSubSystem)   d (DownSubSystem)”)
屏幕.取光标位置 (横坐标, 临时纵坐标)
屏幕.输出换行 (1)
屏幕.带颜色输出一行文本 (#., 默认背景色, “f (FtpSubSystem)    c (Clear)”)
屏幕.带颜色输出一行文本 (#., 默认背景色, “q (quit)”)
屏幕.输出换行 (1)
写调试信息 (相加 (“输出易开始位置的纵坐标(”, 到文本 (纵坐标), “)”))
输出易 (相加 (横坐标, 相除 (相减 (屏幕长, 横坐标), 3)), 0)
屏幕.输出文本 (“                  Place: ”)
屏幕.取光标位置 (当前位置横坐标, 当前位置纵坐标)
屏幕.输出换行 (1)


.子程序 输出当前界面位置, 空白型, , 
.参数 匿名参数_266, 空白型, , 

.局部变量 横坐标, 整数型, , , 
.局部变量 纵坐标, 整数型, , , 
.局部变量 匿名局部变量_247, 空白型, , , 


屏幕.取光标位置 (横坐标, 纵坐标)
屏幕.指定位置与颜色输出文本 (当前位置横坐标, 当前位置纵坐标, #., #., 位置标题 [当前界面位置])
屏幕.置光标位置 (横坐标, 纵坐标)


.子程序 命令接收, 整数型, , 
.局部变量 输入命令, 文本型, , , 

.判断循环首 (真)
    未知支持库函数_3 (输出锁)
    屏幕.指定位置输出文本 (命令输入横坐标, 命令输入纵坐标, “Input Command:”)
    屏幕.取光标位置 (光标常规停留位置, 命令输入纵坐标)
    未知支持库函数_4 (输出锁)
    
    赋值 (输入命令, 屏幕.带背景色输入 (#., 默认背景色))
    .判断开始 (等于 (输入命令, “q”))
        返回 (0)
        
    .判断 (等于 (输入命令, “d”))
        设置当前界面位置 (#下载界面)
        输出当前界面位置 ()
        下载_打印常规信息 ()
        
    .判断 (等于 (输入命令, “f”))
        设置当前界面位置 (#FTP界面)
        输出当前界面位置 ()
        FTP_打印常规信息 ()
        
    .判断 (等于 (输入命令, “c”))
        清楚信息区域 ()
        
    .判断 (等于 (输入命令, “m”))
        设置当前界面位置 (#主界面)
        输出当前界面位置 ()
        清楚信息区域 ()
        
        
    .判断 (等于 (当前界面位置, #下载界面))
        下载_接收命令 (输入命令)
        
    .判断 (等于 (当前界面位置, #FTP界面))
        FTP_接收命令 (输入命令)
    .默认
        
    .判断结束
    
    
    清除命令区域 ()
.判断循环尾 ()

返回 (0)

.子程序 清除命令区域, 空白型, , 
.参数 匿名参数_117, 空白型, , 

屏幕.清楚指定区域 (命令输入横坐标, 命令输入纵坐标, 屏幕长, 命令输入纵坐标)


.子程序 设置当前界面位置, 空白型, , 
.参数 位置, 整数型, , 

赋值 (当前界面位置, 位置)


.子程序 设置子界面位置, 空白型, , 
.参数 位置, 整数型, , 

赋值 (子界面位置, 位置)


.子程序 设置信息区域开始位置, 空白型, , 
.参数 纵坐标, 整数型, , 

赋值 (信息区域开始纵坐标, 纵坐标)



.子程序 清楚信息区域, 空白型, , 
屏幕.清楚区域 (0, 相加 (命令输入纵坐标, 1))
画信息区域分割条 ()


.子程序 画信息区域分割条, 空白型, , 
屏幕.填充字符 (0, 相加 (命令输入纵坐标, 2), “-”, 屏幕长)
屏幕.指定位置与颜色输出文本 (相减 (相除 (屏幕长, 2), 8), 相加 (命令输入纵坐标, 2), #., #., “Information”)


.子程序 更新最后信息坐标, 空白型, , 
.局部变量 横坐标, 整数型, , , 
.局部变量 纵坐标, 整数型, , , 

屏幕.取光标位置 (横坐标, 纵坐标)
.如果真 (大于 (纵坐标, 最后信息位置纵坐标))
    赋值 (最后信息位置纵坐标, 纵坐标)
.如果真结束
.如果真 (大于 (横坐标, 最后信息位置横坐标))
    赋值 (最后信息位置横坐标, 横坐标)
    
.如果真结束


.子程序 输出易, 空白型, , 
.参数 开始横坐标, 整数型, , 
.参数 开始纵坐标, 整数型, , 

.局部变量 当前横坐标, 整数型, , , 
.局部变量 当前纵坐标, 整数型, , , 
.局部变量 记次变量, 整数型, , , 

屏幕.取光标位置 (当前位置横坐标, 当前位置纵坐标)
赋值 (开始横坐标, 相减 (开始横坐标, 2))
屏幕.置光标位置 (开始横坐标, 开始纵坐标)
赋值 (记次变量, 相加 (记次变量, 1))
屏幕.带颜色输出文本 (#., 默认背景色, “    __   ”)
屏幕.置光标位置 (开始横坐标, 相加 (开始纵坐标, 记次变量))
赋值 (记次变量, 相加 (记次变量, 1))
屏幕.带颜色输出文本 (#., 默认背景色, “   /  \  ”)
屏幕.置光标位置 (开始横坐标, 相加 (开始纵坐标, 记次变量))
赋值 (记次变量, 相加 (记次变量, 1))
屏幕.带颜色输出文本 (#., 默认背景色, “  |----| ”)
屏幕.置光标位置 (开始横坐标, 相加 (开始纵坐标, 记次变量))
赋值 (记次变量, 相加 (记次变量, 1))
屏幕.带颜色输出文本 (#., 默认背景色, “   \__/  ”)
屏幕.置光标位置 (开始横坐标, 相加 (开始纵坐标, 记次变量))
赋值 (记次变量, 相加 (记次变量, 1))
屏幕.带颜色输出文本 (#., 默认背景色, “  /-----\”)
屏幕.置光标位置 (开始横坐标, 相加 (开始纵坐标, 记次变量))
赋值 (记次变量, 相加 (记次变量, 1))
屏幕.带颜色输出文本 (#., 默认背景色, “/  / /  |”)
屏幕.置光标位置 (开始横坐标, 相加 (开始纵坐标, 记次变量))
赋值 (记次变量, 相加 (记次变量, 1))
屏幕.带颜色输出文本 (#., 默认背景色, “ / / \__|”)

屏幕.置光标位置 (当前位置横坐标, 当前位置纵坐标)



.子程序 确认提示框, 逻辑型, , 
.参数 目的横坐标, 整数型, , 
.参数 目的纵坐标, 整数型, , 

.局部变量 横坐标, 整数型, , , 
.局部变量 纵坐标, 整数型, , , 
.局部变量 横坐标1, 整数型, , , 
.局部变量 纵坐标1, 整数型, , , 
.局部变量 接收文本, 文本型, , , 

屏幕.取光标位置 (横坐标, 纵坐标)
屏幕.置光标位置 (目的横坐标, 目的纵坐标)

赋值 (接收文本, 屏幕.带背景色输入且画输入条 (“Input 'n' Next ,'b' Back: ”, #., #., 1))
.判断循环首 (并且 (不等于 (接收文本, “n”), 不等于 (接收文本, “b”)))
    屏幕.置光标位置 (目的横坐标, 目的纵坐标)
    赋值 (接收文本, 屏幕.带背景色输入且画输入条 (“Input 'n' Next ,'b' Back: ”, #., #., 1))
.判断循环尾 ()
屏幕.取光标位置 (横坐标1, 纵坐标1)
屏幕.填充默认背景色字符 (目的横坐标, 目的纵坐标, 横坐标1, 纵坐标1)

屏幕.置光标位置 (横坐标, 纵坐标)
.如果 (等于 (接收文本, “n”))
    返回 (真)
.否则
    返回 (假)
.如果结束


.程序集 下载程序集, , , 

.程序集变量 信息输入位置开始纵坐标, 整数型, , , 
.程序集变量 网络地址输入位置横坐标, 整数型, , , 
.程序集变量 网络地址纵坐标, 整数型, , , 
.程序集变量 保存位置输入横坐标, 整数型, , , 
.程序集变量 保存位置纵坐标, 整数型, , , 
.程序集变量 初始化线程数输入横坐标, 整数型, , , 
.程序集变量 初始化线程数纵坐标, 整数型, , , 
.程序集变量 用户名输入横坐标, 整数型, , , 
.程序集变量 用户名纵坐标, 整数型, , , 
.程序集变量 密码输入横坐标, 整数型, , , 
.程序集变量 密码纵坐标, 整数型, , , 
.程序集变量 匿名程序集变量_482, 空白型, , , 
.程序集变量 下载信息_文件名横, 整数型, , , 
.程序集变量 下载信息_文件名纵, 整数型, , , 
.程序集变量 下载信息_大小横, 整数型, , , 
.程序集变量 下载信息_大小纵, 整数型, , , 
.程序集变量 下载信息_完成数横, 整数型, , , 
.程序集变量 下载信息_完成数纵, 整数型, , , 
.程序集变量 下载信息_百分比横, 整数型, , , 
.程序集变量 下载信息_百分比纵, 整数型, , , 
.程序集变量 下载信息_块数横, 整数型, , , 
.程序集变量 下载信息_块数纵, 整数型, , , 
.程序集变量 下载信息_重试横, 整数型, , , 
.程序集变量 下载信息_重试纵, 整数型, , , 
.程序集变量 下载信息_速度横, 整数型, , , 
.程序集变量 下载信息_速度纵, 整数型, , , 
.程序集变量 下载信息_交互消息横, 整数型, , , 
.程序集变量 下载信息_交互消息纵, 整数型, , , 
.程序集变量 匿名程序集变量_745, 空白型, , , 
.程序集变量 文件名, 文本型, , , 
.程序集变量 总长度, 整数型, , , 
.程序集变量 总块数, 整数型, , , 
.程序集变量 活动块数, 整数型, , , 
.程序集变量 匿名程序集变量_799, 空白型, , , 
.程序集变量 线程信息数组, 线程信息, , "0", 
.程序集变量 交互信息数组, 文本型, , "0", 
.程序集变量 匿名程序集变量_910, 空白型, , , 
.程序集变量 统计线程退出, 逻辑型, , , 
.程序集变量 任务信息, 字节集, , , 
.程序集变量 任务参数, 未知类型0x20004, , , 
.程序集变量 当前状态, 整数型, , , 
.子程序 下载_打印常规信息, 空白型, , 
.局部变量 横坐标, 整数型, , , 

清楚信息区域 ()
下载_输出键盘控制信息 ()
屏幕.取光标位置 (横坐标, 信息输入位置开始纵坐标)
赋值 (信息输入位置开始纵坐标, 相加 (信息输入位置开始纵坐标, 1))

.判断开始 (等于 (当前状态, #下载_选择状态))
    
.判断 (等于 (当前状态, #下载_正在下载状态))
    屏幕.置光标位置 (0, 相加 (信息输入位置开始纵坐标, 1))
    显示下载信息框 ()
    设置下载_文件名 (文件名)
    设置下载信息_大小 (总长度)
    设置下载信息_块数 (活动块数, 总块数)
    
.判断 (等于 (当前状态, #下载_填写下载信息状态))
    
.默认
    
.判断结束


.子程序 下载_输出键盘控制信息, 空白型, , 

屏幕.指定位置与颜色输出文本 (0, 信息区域开始纵坐标, #., 默认背景色, “  1 (start downtloadask)”)
屏幕.带颜色输出文本 (#., 默认背景色, “    2 (stop downloadtask)”)
屏幕.带颜色输出文本 (#., 默认背景色, “    3 (Continue downloadtask)”)
屏幕.输出换行 (1)
屏幕.带颜色输出文本 (#., 默认背景色, “  4 (add thread)”)
屏幕.带颜色输出文本 (#., 默认背景色, “            5 (decrease thread)”)
屏幕.带颜色输出文本 (#., 默认背景色, “      6 (Particular Info)”)
更新最后信息坐标 ()


.子程序 下载_接收命令, 空白型, , 
.参数 命令文本, 文本型, , 

.判断开始 (等于 (命令文本, “1”))
    开始任务 ()
    
.判断 (等于 (命令文本, “2”))
    停止任务 ()
    
.判断 (等于 (命令文本, “3”))
    继续任务 ()
    
.判断 (等于 (命令文本, “4”))
    增加线程 ()
    
.判断 (等于 (命令文本, “5”))
    减少线程 ()
    
.判断 (等于 (命令文本, “6”))
    显示详细交互信息 ()
.默认
    
.判断结束


.子程序 开始任务, 空白型, , 1

.判断开始 (等于 (当前状态, #下载_选择状态))
    屏幕.置光标位置 (0, 相加 (信息输入位置开始纵坐标, 1))
    显示下载参数输入框 ()
    
    屏幕.置光标位置 (网络地址输入位置横坐标, 网络地址纵坐标)
    赋值 (任务参数., 屏幕.带背景色输入 (#., #.))
    屏幕.置光标位置 (保存位置输入横坐标, 保存位置纵坐标)
    赋值 (任务参数., 屏幕.带背景色输入 (#., #.))
    屏幕.置光标位置 (初始化线程数输入横坐标, 初始化线程数纵坐标)
    赋值 (任务参数., 到数值 (屏幕.带背景色输入 (#., #.)))
    屏幕.置光标位置 (用户名输入横坐标, 用户名纵坐标)
    赋值 (任务参数., 屏幕.带背景色输入 (#., #.))
    屏幕.置光标位置 (密码输入横坐标, 密码纵坐标)
    赋值 (任务参数., 屏幕.带背景色且指定会显字符输入 (#., #., “*”))
    
    .如果真 (等于 (确认提示框 (相加 (相除 (屏幕长, 2), 5), 初始化线程数纵坐标), 假))
        屏幕.填充默认背景色字符 (0, 相加 (信息输入位置开始纵坐标, 1), 屏幕长, 相加 (密码纵坐标, 1))
        屏幕.置光标位置 (0, 相加 (信息输入位置开始纵坐标, 1))
        赋值 (当前状态, #下载_选择状态)
        返回 ()
    .如果真结束
    
    赋值 (任务参数., #.)
    赋值 (任务参数., 90000)
    赋值 (任务参数., 9000)
    赋值 (任务参数., 9000)
    赋值 (任务参数., 20400)
    赋值 (任务参数., 20400)
    赋值 (任务参数., 6000)
    赋值 (任务参数., &下载_交互回调函数)
    
    屏幕.填充默认背景色字符 (0, 相加 (信息输入位置开始纵坐标, 1), 屏幕长, 相加 (密码纵坐标, 1))
    屏幕.置光标位置 (0, 相加 (信息输入位置开始纵坐标, 1))
    显示下载信息框 ()
    
    下载核心对象.未知支持库函数_19 (任务参数)
    写调试信息 (“开始任务()”)
    
.默认
    
.判断结束




.子程序 停止任务, 空白型, , 2
.参数 匿名参数_950, 空白型, , 

.局部变量 任务数据, 字节集, , , 
.局部变量 待下载文件总长度, 整数型, , , 1
.局部变量 已下载总长度, 整数型, , , 2
.局部变量 块个数, 整数型, , , 3

.判断开始 (等于 (当前状态, #下载_正在下载状态))
    下载核心对象.未知支持库函数_20 (任务信息, 2)
    赋值 (待下载文件总长度, 下载核心对象.未知支持库函数_31 (任务信息, 1, 0))
    赋值 (已下载总长度, 下载核心对象.未知支持库函数_31 (任务信息, 2, 0))
    赋值 (块个数, 下载核心对象.未知支持库函数_31 (任务信息, 3, 0))
    设置下载信息_大小 (待下载文件总长度)
    设置下载信息_完成数 (已下载总长度)
    设置下载信息_块数 (0, 块个数)
    写调试信息 (“停止任务().等待统计线程结束..”)
    .判断循环首 (不等于 (统计线程退出, 真))
        延时 (10)
    .判断循环尾 ()
    写调试信息 (“停止任务().统计线程结束完毕..”)
    赋值 (当前状态, #下载_停止下载状态)
.默认
    
.判断结束


.子程序 继续任务, 空白型, , 3

.判断开始 (等于 (当前状态, #下载_停止下载状态))
    下载核心对象.未知支持库函数_21 (任务参数, 任务信息)
    赋值 (当前状态, #下载_正在下载状态)
.默认
    
.判断结束


.子程序 增加线程, 空白型, , 4

.判断开始 (等于 (当前状态, #下载_正在下载状态))
    下载核心对象.未知支持库函数_22 ()
.默认
    
.判断结束


.子程序 减少线程, 空白型, , 5

.判断开始 (等于 (当前状态, #下载_正在下载状态))
    下载核心对象.未知支持库函数_23 ()
.默认
    
.判断结束


.子程序 显示详细交互信息, 空白型, , 6
.判断开始 (等于 (当前状态, #下载_正在下载状态))
    设置子界面位置 (#下载界面_详细交互信息)
    清除命令区域 ()
    清楚信息区域 ()
    
    屏幕.置光标位置 (0, 相加 (信息输入位置开始纵坐标, 1))
    屏幕.指定位置与颜色输出文本 (相减 (相除 (屏幕长, 2), 5), 信息区域开始纵坐标, #., #., “All Info”)
    
.默认
    
.判断结束


.子程序 显示下载参数输入框, 空白型, , 
.参数 匿名参数_437, 空白型, , 

赋值 (当前状态, #下载_填写下载信息状态)
设置子界面位置 (#下载界面_下载信息输入)
屏幕.输出文本 (“ Url: ”)
屏幕.取光标位置 (网络地址输入位置横坐标, 网络地址纵坐标)
.变量循环首 (1, 相减 (屏幕长, 10), 1, )
    屏幕.带颜色输出文本 (#., #., “ ”)
.变量循环尾 ()
屏幕.输出换行 (2)

屏幕.输出文本 (“ SavePath: ”)
屏幕.取光标位置 (保存位置输入横坐标, 保存位置纵坐标)
.变量循环首 (1, 相减 (屏幕长, 15), 1, )
    屏幕.带颜色输出文本 (#., #., “ ”)
.变量循环尾 ()
屏幕.输出换行 (2)

屏幕.输出文本 (“ ThreadNumber: ”)
屏幕.取光标位置 (初始化线程数输入横坐标, 初始化线程数纵坐标)
.变量循环首 (1, 5, 1, )
    屏幕.带颜色输出文本 (#., #., “ ”)
.变量循环尾 ()
屏幕.输出换行 (2)


屏幕.输出文本 (“ UserName: ”)
屏幕.取光标位置 (用户名输入横坐标, 用户名纵坐标)
.变量循环首 (1, 25, 1, )
    屏幕.带颜色输出文本 (#., #., “ ”)
.变量循环尾 ()
屏幕.输出换行 (2)

屏幕.输出文本 (“ Password: ”)
屏幕.取光标位置 (密码输入横坐标, 密码纵坐标)
.变量循环首 (1, 25, 1, )
    屏幕.带颜色输出文本 (#., #., “ ”)
.变量循环尾 ()
屏幕.输出换行 (2)

更新最后信息坐标 ()



.子程序 显示下载信息框, 空白型, , 
赋值 (当前状态, #下载_正在下载状态)
设置子界面位置 (#下载界面_下载时信息)
屏幕.输出文本 (“ FileName:”)
屏幕.取光标位置 (下载信息_文件名横, 下载信息_文件名纵)
.变量循环首 (1, 20, 1, )
    屏幕.带颜色输出文本 (#., #., “ ”)
.变量循环尾 ()
屏幕.置光标位置 (相除 (屏幕长, 2), 下载信息_文件名纵)

屏幕.输出文本 (“ FileSize:”)
屏幕.取光标位置 (下载信息_大小横, 下载信息_大小纵)
.变量循环首 (1, 10, 1, )
    屏幕.带颜色输出文本 (#., #., “ ”)
.变量循环尾 ()
屏幕.输出换行 (2)

屏幕.输出文本 (“ DoneSize:”)
屏幕.取光标位置 (下载信息_完成数横, 下载信息_完成数纵)
.变量循环首 (1, 10, 1, )
    屏幕.带颜色输出文本 (#., #., “ ”)
.变量循环尾 ()
屏幕.置光标位置 (相除 (屏幕长, 2), 下载信息_完成数纵)


屏幕.输出文本 (“ Percent:”)
屏幕.取光标位置 (下载信息_百分比横, 下载信息_百分比纵)
.变量循环首 (1, 4, 1, )
    屏幕.带颜色输出文本 (#., #., “ ”)
.变量循环尾 ()
屏幕.输出换行 (2)

屏幕.输出文本 (“ ThreadNum:”)
屏幕.取光标位置 (下载信息_块数横, 下载信息_块数纵)
.变量循环首 (1, 7, 1, )
    屏幕.带颜色输出文本 (#., #., “ ”)
.变量循环尾 ()
屏幕.置光标位置 (相除 (屏幕长, 2), 下载信息_块数纵)

屏幕.输出文本 (“ Retry:”)
屏幕.取光标位置 (下载信息_重试横, 下载信息_重试纵)
.变量循环首 (1, 4, 1, )
    屏幕.带颜色输出文本 (#., #., “ ”)
.变量循环尾 ()
屏幕.输出换行 (2)

屏幕.输出文本 (“ Rate:”)
屏幕.取光标位置 (下载信息_速度横, 下载信息_速度纵)
.变量循环首 (1, 20, 1, )
    屏幕.带颜色输出文本 (#., #., “ ”)
.变量循环尾 ()
屏幕.置光标位置 (相除 (屏幕长, 2), 下载信息_速度纵)

屏幕.输出文本 (“ RecvInfo:”)
屏幕.取光标位置 (下载信息_交互消息横, 下载信息_交互消息纵)
.变量循环首 (1, 20, 1, )
    屏幕.带颜色输出文本 (#., #., “ ”)
.变量循环尾 ()

更新最后信息坐标 ()


.子程序 清除输入条, 空白型, , 
.参数 输入条长度, 整数型, , 

.变量循环首 (1, 输入条长度, 1, )
    屏幕.带颜色输出文本 (#., #., “ ”)
.变量循环尾 ()





.子程序 下载信息是否显示, 逻辑型, , 
.如果真 (并且 (等于 (当前界面位置, #下载界面), 等于 (子界面位置, #下载界面_下载时信息)))
    返回 (真)
.如果真结束
返回 (假)


.子程序 设置下载_文件名, 空白型, , 
.参数 文件名1, 文本型, , 

.如果真 (等于 (下载信息是否显示 (), 假))
    返回 ()
.如果真结束

未知支持库函数_3 (输出锁)
屏幕.置光标位置 (下载信息_文件名横, 下载信息_文件名纵)
清除输入条 (20)
屏幕.置光标位置 (下载信息_文件名横, 下载信息_文件名纵)
屏幕.带颜色输出文本 (#., #., 文件名1)
屏幕.置光标位置 (光标常规停留位置, 命令输入纵坐标)

未知支持库函数_4 (输出锁)


.子程序 设置下载信息_大小, 空白型, , 
.参数 大小, 整数型, , 

.如果真 (等于 (下载信息是否显示 (), 假))
    返回 ()
.如果真结束

未知支持库函数_3 (输出锁)
屏幕.置光标位置 (下载信息_大小横, 下载信息_大小纵)
清除输入条 (10)
屏幕.置光标位置 (下载信息_大小横, 下载信息_大小纵)
屏幕.带颜色输出文本 (#., #., 到文本 (大小))
屏幕.置光标位置 (光标常规停留位置, 命令输入纵坐标)

未知支持库函数_4 (输出锁)


.子程序 设置下载信息_完成数, 空白型, , 
.参数 完成数, 整数型, , 

.如果真 (等于 (下载信息是否显示 (), 假))
    返回 ()
.如果真结束

未知支持库函数_3 (输出锁)
屏幕.置光标位置 (下载信息_完成数横, 下载信息_完成数纵)
清除输入条 (10)
屏幕.置光标位置 (下载信息_完成数横, 下载信息_完成数纵)
屏幕.带颜色输出文本 (#., #., 到文本 (完成数))
屏幕.置光标位置 (光标常规停留位置, 命令输入纵坐标)

未知支持库函数_4 (输出锁)


.子程序 设置下载信息_百分比, 空白型, , 
.参数 百分比, 整数型, , 

.如果真 (等于 (下载信息是否显示 (), 假))
    返回 ()
.如果真结束

未知支持库函数_3 (输出锁)
屏幕.置光标位置 (下载信息_百分比横, 下载信息_百分比纵)
清除输入条 (4)
屏幕.置光标位置 (下载信息_百分比横, 下载信息_百分比纵)
屏幕.带颜色输出文本 (#., #., 相加 (到文本 (百分比), “%”))
屏幕.置光标位置 (光标常规停留位置, 命令输入纵坐标)

未知支持库函数_4 (输出锁)


.子程序 设置下载信息_块数, 空白型, , 
.参数 总块数1, 整数型, , 
.参数 活动块数1, 整数型, , 

.如果真 (等于 (下载信息是否显示 (), 假))
    返回 ()
.如果真结束

未知支持库函数_3 (输出锁)
屏幕.置光标位置 (下载信息_块数横, 下载信息_块数纵)
清除输入条 (7)
屏幕.置光标位置 (下载信息_块数横, 下载信息_块数纵)
屏幕.带颜色输出文本 (#., #., 相加 (到文本 (活动块数1), “/”, 到文本 (总块数1)))
屏幕.置光标位置 (光标常规停留位置, 命令输入纵坐标)

未知支持库函数_4 (输出锁)



.子程序 设置下载信息_重试, 空白型, , 
.参数 次数, 整数型, , 

.如果真 (等于 (下载信息是否显示 (), 假))
    返回 ()
.如果真结束

未知支持库函数_3 (输出锁)
屏幕.置光标位置 (下载信息_重试横, 下载信息_重试纵)
清除输入条 (4)
屏幕.置光标位置 (下载信息_重试横, 下载信息_重试纵)
屏幕.带颜色输出文本 (#., #., 到文本 (次数))
屏幕.置光标位置 (光标常规停留位置, 命令输入纵坐标)

未知支持库函数_4 (输出锁)


.子程序 设置下载信息_速度, 空白型, , 
.参数 速度, 整数型, , 

.如果真 (等于 (下载信息是否显示 (), 假))
    返回 ()
.如果真结束

未知支持库函数_3 (输出锁)
屏幕.置光标位置 (下载信息_速度横, 下载信息_速度纵)
清除输入条 (20)
屏幕.置光标位置 (下载信息_速度横, 下载信息_速度纵)
屏幕.带颜色输出文本 (#., #., 相加 (到文本 (速度), “byte/s”))
屏幕.置光标位置 (光标常规停留位置, 命令输入纵坐标)

未知支持库函数_4 (输出锁)


.子程序 设置下载信息_交互消息, 空白型, , 
.参数 信息, 文本型, , 

.如果真 (等于 (下载信息是否显示 (), 假))
    返回 ()
.如果真结束

未知支持库函数_3 (输出锁)
输出调试文本 (信息)
屏幕.置光标位置 (下载信息_交互消息横, 下载信息_交互消息纵)
清除输入条 (20)
屏幕.置光标位置 (下载信息_交互消息横, 下载信息_交互消息纵)
屏幕.带颜色输出文本 (#., #., 信息)
屏幕.置光标位置 (光标常规停留位置, 命令输入纵坐标)

未知支持库函数_4 (输出锁)


.子程序 获得线程信息数组序号, 整数型, , 
.参数 线程信息, 整数型, , 

.局部变量 记次变量, 整数型, , , 

.变量循环首 (1, 取数组成员数 (线程信息数组), 1, 记次变量)
    .如果真 (等于 (线程信息数组 [记次变量], 线程信息, 线程信息))
        返回 (记次变量)
    .如果真结束
    
.变量循环尾 ()
返回 (-1)



.子程序 下载_交互回调函数, 整数型, , 
.参数 消息类型, 整数型, , 
.参数 线程信息, 整数型, , 
.参数 参数3, 整数型, , 
.参数 参数4, 整数型, , 
.参数 对象信息, 整数型, , 

.局部变量 对象序号, 整数型, , , 
.局部变量 线程序号, 整数型, , , 
.局部变量 线程数组, 整数型, , "0", 
.局部变量 本地文件路径, 文本型, , , 
.局部变量 路径数组, 文本型, , "0", 
.局部变量 新文件名, 文本型, , , 
.局部变量 匿名局部变量_831, 空白型, , , 
.局部变量 线程信息成员, 线程信息, , , 


.判断开始 (等于 (消息类型, #.))
     ' 一个下载任务的首个下载线程开始下载时收到本消息，可以做与统计整个任务想关的操作
    写调试信息 (“收到 下载上传开始消息..”)
    赋值 (总长度, 参数3)
    设置下载信息_大小 (参数3)
    赋值 (本地文件路径, 下载核心对象.未知支持库函数_32 ())
    .如果真 (等于 (本地文件路径, “”))
        返回 (0)
    .如果真结束
    
    赋值 (路径数组, 分割文本 (本地文件路径, “\”, ))
    赋值 (文件名, 路径数组 [取数组成员数 (路径数组)])
    设置下载_文件名 (路径数组 [取数组成员数 (路径数组)])
    设置下载信息_交互消息 (“down start..”)
    
    赋值 (统计线程退出, 假)
    未知支持库函数_0 (&统计线程, )
    
.判断 (等于 (消息类型, #.))
     ' 一个下载任务所有下载线程都结束时收到本消息，可以做与统计整个任务想关的操作
    
    写调试信息 (“收到下载上传结束消息...”)
    设置下载信息_完成数 (参数3)
    设置下载信息_百分比 (相乘 (相除 (参数3, 总长度), 100))
    设置下载信息_交互消息 (“close down...”)
    赋值 (统计线程退出, 真)
    
    
.判断 (等于 (消息类型, #.))
     ' 一个任务开启一个新线程时收到本消息
     ' 创建新线程
     ' 在线程树上增加一个节点
    
    写调试信息 (“收到 新下载线程启动消息..”)
    赋值 (线程信息成员.线程信息, 线程信息)
    赋值 (线程信息成员.线程状态, “线程开始下载”)
    加入成员 (线程信息数组, 线程信息成员)
    下载核心对象.未知支持库函数_30 (线程数组)
    赋值 (总块数, 取数组下标 (线程数组, ))
    赋值 (活动块数, 相加 (活动块数, 1))
    设置下载信息_块数 (总块数, 活动块数)
    设置下载信息_交互消息 (“new thread start...”)
    
    
.判断 (等于 (消息类型, #.))
     ' 一个线程正式下载数据时收到本消息，与继续下载消息互斥
     ' 可以用来通知用户线程正式开始下载以及确定范围等操作
    
    写调试信息 (相加 (“收到下载数据范围消息 ”, 到文本 (参数3), “  ”, 到文本 (参数4)))
    赋值 (线程序号, 获得线程信息数组序号 (线程信息))
    .如果真 (等于 (线程序号, -1))
        返回 (0)
    .如果真结束
    
    赋值 (线程信息数组 [线程序号], 开始位置, 参数3)
    赋值 (线程信息数组 [线程序号], 已下载大小, 参数3)
    
    
    
.判断 (等于 (消息类型, #.))
     ' 当一个线程正常结束后会搜索是否存在继续下载的断点块，如果找到则发送本消息。与下载数据范围消息互斥
    
    写调试信息 (“收到 下载线程继续下载消息..”)
    赋值 (线程序号, 获得线程信息数组序号 (线程信息))
    .如果真 (等于 (线程序号, -1))
        返回 (0)
    .如果真结束
    
    
    赋值 (线程信息数组 [线程序号], 开始位置, 参数3)
    赋值 (线程信息数组 [线程序号], 已下载大小, 参数3)
    赋值 (线程信息数组 [线程序号], 线程状态, “线程继续下载”)
    
    
.判断 (等于 (消息类型, #.))
     ' 下载线程完成任务后，正常结束时发送本消息
    
    写调试信息 (“收到线程正常结束消息...”)
    赋值 (线程序号, 获得线程信息数组序号 (线程信息))
    .如果真 (等于 (线程序号, -1))
        返回 (0)
    .如果真结束
    
    赋值 (线程信息数组 [线程序号], 线程状态, “线程正常结束”)
    赋值 (活动块数, 相减 (活动块数, 1))
    设置下载信息_块数 (总块数, 活动块数)
    
    
.判断 (等于 (消息类型, #.))
     ' 下载线程没有完成下载任务就结束时发送本消息
    
    写调试信息 (“收到线程异常结束消息..”)
    赋值 (线程序号, 获得线程信息数组序号 (线程信息))
    .如果真 (等于 (线程序号, -1))
        返回 (0)
    .如果真结束
    
    赋值 (线程信息数组 [线程序号], 线程状态, “线程正常结束”)
    赋值 (活动块数, 相减 (活动块数, 1))
    设置下载信息_块数 (总块数, 活动块数)
    
    
.判断 (等于 (消息类型, #.))
     ' 系统下载指定大小的数据后发送本消息通知用户
    
    赋值 (线程序号, 获得线程信息数组序号 (线程信息))
    .如果真 (等于 (线程序号, -1))
        返回 (0)
    .如果真结束
    
.默认
    
.判断结束
返回 (0)


.子程序 统计线程, 空白型, , 
.局部变量 已下载长度, 整数型, , , 
.局部变量 下载速度, 整数型, , , 
.局部变量 百分比, 整数型, , , 
.局部变量 重试次数, 整数型, , , 

写调试信息 (“统计线程开始..”)
.判断循环首 (不等于 (统计线程退出, 真))
    未知支持库函数_3 (输出锁)
    屏幕.置光标位置 (光标常规停留位置, 命令输入纵坐标)
    未知支持库函数_4 (输出锁)
    赋值 (已下载长度, 下载核心对象.未知支持库函数_26 ())
    赋值 (下载速度, 下载核心对象.未知支持库函数_25 ())
    赋值 (百分比, 相乘 (相除 (已下载长度, 总长度), 100))
    赋值 (重试次数, 下载核心对象.未知支持库函数_28 ())
    设置下载信息_完成数 (已下载长度)
    设置下载信息_百分比 (百分比)
    设置下载信息_速度 (下载速度)
    设置下载信息_重试 (重试次数)
    延时 (1000)
.判断循环尾 ()
写调试信息 (“统计线程结束..”)
设置下载信息_速度 (0)
屏幕.指定位置输出文本 (命令输入横坐标, 命令输入纵坐标, “Input Command:”)


.程序集 FTP辅助程序集, , , 

.程序集变量 信息输入位置开始纵坐标, 整数型, , , 
.程序集变量 网络地址输入横坐标, 整数型, , , 
.程序集变量 网络地址纵坐标, 整数型, , , 
.程序集变量 端口输入横坐标, 整数型, , , 
.程序集变量 端口纵坐标, 整数型, , , 
.程序集变量 用户名输入横坐标, 整数型, , , 
.程序集变量 用户名纵坐标, 整数型, , , 
.程序集变量 密码输入横坐标, 整数型, , , 
.程序集变量 密码纵坐标, 整数型, , , 
.程序集变量 匿名程序集变量_1095, 空白型, , , 
.程序集变量 删除文件名输入横坐标, 整数型, , , 
.程序集变量 删除文件名纵坐标, 整数型, , , 
.程序集变量 匿名程序集变量_1159, 空白型, , , 
.程序集变量 改名_旧名输入横坐标, 整数型, , , 
.程序集变量 改名_旧名纵坐标, 整数型, , , 
.程序集变量 改名_新名输入横坐标, 整数型, , , 
.程序集变量 改名_新名纵坐标, 整数型, , , 
.程序集变量 匿名程序集变量_1160, 空白型, , , 
.程序集变量 创建目录输入横坐标, 整数型, , , 
.程序集变量 创建目录纵坐标, 整数型, , , 
.程序集变量 匿名程序集变量_1211, 空白型, , , 
.程序集变量 删除目录输入横坐标, 整数型, , , 
.程序集变量 删除目录纵坐标, 整数型, , , 
.程序集变量 匿名程序集变量_1225, 空白型, , , 
.程序集变量 设置当前目录输入横坐标, 整数型, , , 
.程序集变量 设置当前目录纵坐标, 整数型, , , 
.程序集变量 匿名程序集变量_1234, 空白型, , , 
.程序集变量 移动文件_源位置输入横坐标, 整数型, , , 
.程序集变量 移动文件_源位置纵坐标, 整数型, , , 
.程序集变量 匿名程序集变量_1260, 空白型, , , 
.程序集变量 移动文件_目的位置输入横坐标, 整数型, , , 
.程序集变量 移动文件_目的位置纵坐标, 整数型, , , 
.程序集变量 匿名程序集变量_1269, 空白型, , , 
.程序集变量 执行命令输入横坐标, 整数型, , , 
.程序集变量 执行命令纵坐标, 整数型, , , 
.程序集变量 匿名程序集变量_1282, 空白型, , , 
.程序集变量 显示目录列表输入横坐标, 整数型, , , 
.程序集变量 显示目录列表纵坐标, 整数型, , , 
.程序集变量 匿名程序集变量_1311, 空白型, , , 
.程序集变量 FTP上传_本机文件输入横坐标, 整数型, , , 
.程序集变量 FTP上传_本机文件纵坐标, 整数型, , , 
.程序集变量 FTP上传_服务器文件输入横坐标, 整数型, , , 
.程序集变量 FTP上传_服务器文件纵坐标, 整数型, , , 
.程序集变量 匿名程序集变量_1518, 空白型, , , 
.程序集变量 上传信息_大小横, 整数型, , , 
.程序集变量 上传信息_大小纵, 整数型, , , 
.程序集变量 上传信息_完成数横, 整数型, , , 
.程序集变量 上传信息_完成数纵, 整数型, , , 
.程序集变量 上传信息_百分比横, 整数型, , , 
.程序集变量 上传信息_百分比纵, 整数型, , , 
.程序集变量 上传信息_重试横, 整数型, , , 
.程序集变量 上传信息_重试纵, 整数型, , , 
.程序集变量 上传信息_速度横, 整数型, , , 
.程序集变量 上传信息_速度纵, 整数型, , , 
.程序集变量 上传信息_交互消息横, 整数型, , , 
.程序集变量 上传信息_交互消息纵, 整数型, , , 
.程序集变量 匿名程序集变量_1656, 空白型, , , 
.程序集变量 网络地址, 文本型, , , 
.程序集变量 端口, 整数型, , , 
.程序集变量 用户名, 文本型, , , 
.程序集变量 密码, 文本型, , , 
.程序集变量 匿名程序集变量_1664, 空白型, , , 
.程序集变量 当前状态, 整数型, , , 
.程序集变量 统计线程退出, 逻辑型, , , 
.程序集变量 匿名程序集变量_1788, 空白型, , , 
.程序集变量 总长度, 整数型, , , 
.程序集变量 上传总长度, 整数型, , , 
.子程序 FTP_打印常规信息, 空白型, , 
.局部变量 横坐标, 整数型, , , 

设置子界面位置 (#FTP界面_选择界面)
清楚信息区域 ()
FTP_输出键盘控制信息 ()
屏幕.取光标位置 (横坐标, 信息输入位置开始纵坐标)
赋值 (信息输入位置开始纵坐标, 相加 (信息输入位置开始纵坐标, 1))


.子程序 FTP_输出键盘控制信息, 空白型, , 

屏幕.指定位置与颜色输出文本 (0, 信息区域开始纵坐标, #., 默认背景色, “  1 (Connect to Ftp Server)”)
屏幕.带颜色输出文本 (#., 默认背景色, “    2 (Close Connect)”)
屏幕.带颜色输出文本 (#., 默认背景色, “    3 (Del File)”)
屏幕.输出换行 (1)
屏幕.带颜色输出文本 (#., 默认背景色, “  4 (Rename)”)
屏幕.带颜色输出文本 (#., 默认背景色, “                   5 (Create Dir)”)
屏幕.带颜色输出文本 (#., 默认背景色, “       6 (Del Dir)”)
屏幕.输出换行 (1)
屏幕.带颜色输出文本 (#., 默认背景色, “  7 (Set Dir)”)
屏幕.带颜色输出文本 (#., 默认背景色, “                  8 (Get Dir)”)
屏幕.带颜色输出文本 (#., 默认背景色, “          9 (Dir List)”)
屏幕.输出换行 (1)
屏幕.带颜色输出文本 (#., 默认背景色, “  10 (Move File)”)
屏幕.带颜色输出文本 (#., 默认背景色, “               11 (Up File)”)
屏幕.带颜色输出文本 (#., 默认背景色, “         12 (Run Ftp Cmd)”)

更新最后信息坐标 ()



.子程序 FTP_接收命令, 空白型, , 
.参数 命令文本, 文本型, , 

.判断开始 (等于 (命令文本, “1”))
    连接FTP服务器 ()
    
.判断 (等于 (命令文本, “2”))
    断开连接 ()
    
.判断 (等于 (命令文本, “3”))
    删除文件 ()
    
.判断 (等于 (命令文本, “4”))
    文件改名 ()
    
.判断 (等于 (命令文本, “5”))
    创建目录 ()
    
.判断 (等于 (命令文本, “6”))
    删除目录 ()
    
.判断 (等于 (命令文本, “7”))
    设置当前目录 ()
    
.判断 (等于 (命令文本, “8”))
    取当前目录 ()
    
.判断 (等于 (命令文本, “9”))
    显示目录列表 ()
    
.判断 (等于 (命令文本, “10”))
    移动文件 ()
    
.判断 (等于 (命令文本, “11”))
    .判断开始 (等于 (当前状态, #FTP上传_正在上传))
        屏幕.置光标位置 (0, 相加 (信息输入位置开始纵坐标, 1))
        显示上传信息框 ()
        设置上传信息_大小 (总长度)
        
    .默认
        
        FTP上传_上传文件 ()
    .判断结束
    
.判断 (等于 (命令文本, “12”))
    执行命令 ()
.默认
    
.判断结束


.子程序 连接FTP服务器, 空白型, , 
.局部变量 是否连接成功, 逻辑型, , , 


屏幕.填充默认背景色字符 (0, 相加 (信息输入位置开始纵坐标, 1), 屏幕长, 相减 (最后信息位置纵坐标, 1))
屏幕.置光标位置 (0, 相加 (信息输入位置开始纵坐标, 1))

显示FTP连接参数输入框 ()
屏幕.置光标位置 (网络地址输入横坐标, 网络地址纵坐标)
赋值 (网络地址, 屏幕.带背景色输入 (#., #.))
屏幕.置光标位置 (端口输入横坐标, 端口纵坐标)
赋值 (端口, 到数值 (屏幕.带背景色输入 (#., #.)))
屏幕.置光标位置 (用户名输入横坐标, 用户名纵坐标)
赋值 (用户名, 屏幕.带背景色输入 (#., #.))
屏幕.置光标位置 (密码输入横坐标, 密码纵坐标)
赋值 (密码, 屏幕.带背景色且指定会显字符输入 (#., #., “*”))

.如果真 (等于 (确认提示框 (相加 (相除 (屏幕长, 2), 5), 端口纵坐标), 假))
    屏幕.填充默认背景色字符 (0, 相加 (信息输入位置开始纵坐标, 1), 屏幕长, 相加 (密码纵坐标, 1))
    屏幕.置光标位置 (0, 相加 (信息输入位置开始纵坐标, 1))
    返回 ()
.如果真结束



赋值 (是否连接成功, FTP辅助核心对象.未知支持库函数_54 (网络地址, 用户名, 密码, 端口, , 6000))
屏幕.填充默认背景色字符 (0, 相加 (信息输入位置开始纵坐标, 1), 屏幕长, 相加 (密码纵坐标, 1))
屏幕.置光标位置 (0, 相加 (信息输入位置开始纵坐标, 1))

.如果 (等于 (是否连接成功, 真))
    屏幕.指定位置与颜色输出文本 (相减 (相除 (屏幕长, 2), 10), 相加 (信息输入位置开始纵坐标, 2), #., 默认背景色, “Connect Succeed!”)
.否则
    屏幕.指定位置与颜色输出文本 (相减 (相除 (屏幕长, 2), 10), 相加 (信息输入位置开始纵坐标, 2), #., 默认背景色, “Connect Error!”)
.如果结束



.子程序 显示FTP连接参数输入框, 空白型, , 
.参数 匿名参数_1061, 空白型, , 


赋值 (当前状态, #FTP_填写登陆信息状态)
设置子界面位置 (#FTP界面_登陆信息输入)
屏幕.输出文本 (“ Url: ”)
屏幕.取光标位置 (网络地址输入横坐标, 网络地址纵坐标)
.变量循环首 (1, 相减 (屏幕长, 10), 1, )
    屏幕.带颜色输出文本 (#., #., “ ”)
.变量循环尾 ()
屏幕.输出换行 (2)

屏幕.输出文本 (“ Port: ”)
屏幕.取光标位置 (端口输入横坐标, 端口纵坐标)
.变量循环首 (1, 7, 1, )
    屏幕.带颜色输出文本 (#., #., “ ”)
.变量循环尾 ()
屏幕.输出换行 (2)


屏幕.输出文本 (“ UserName: ”)
屏幕.取光标位置 (用户名输入横坐标, 用户名纵坐标)
.变量循环首 (1, 25, 1, )
    屏幕.带颜色输出文本 (#., #., “ ”)
.变量循环尾 ()
屏幕.输出换行 (2)

屏幕.输出文本 (“ Password: ”)
屏幕.取光标位置 (密码输入横坐标, 密码纵坐标)
.变量循环首 (1, 25, 1, )
    屏幕.带颜色输出文本 (#., #., “ ”)
.变量循环尾 ()
屏幕.输出换行 (2)

更新最后信息坐标 ()



.子程序 断开连接, 空白型, , 
屏幕.填充默认背景色字符 (0, 相加 (信息输入位置开始纵坐标, 1), 屏幕长, 相减 (最后信息位置纵坐标, 1))
屏幕.置光标位置 (0, 相加 (信息输入位置开始纵坐标, 1))

.如果 (等于 (FTP辅助核心对象.未知支持库函数_55 (), 真))
    屏幕.指定位置与颜色输出文本 (相减 (相除 (屏幕长, 2), 10), 相加 (信息输入位置开始纵坐标, 2), #., 默认背景色, “Close Succeed!”)
.否则
    
    屏幕.指定位置与颜色输出文本 (相减 (相除 (屏幕长, 2), 10), 相加 (信息输入位置开始纵坐标, 2), #., 默认背景色, “Close Error!”)
    
.如果结束




.子程序 删除文件, 空白型, , 
.局部变量 待删除文件名, 文本型, , , 
.局部变量 删除是否成功, 逻辑型, , , 
.局部变量 匿名局部变量_1180, 空白型, , , 

屏幕.填充默认背景色字符 (0, 相加 (信息输入位置开始纵坐标, 1), 屏幕长, 相减 (最后信息位置纵坐标, 1))
屏幕.置光标位置 (0, 相加 (信息输入位置开始纵坐标, 1))

显示输入待删除文件名输入框 ()

屏幕.置光标位置 (删除文件名输入横坐标, 删除文件名纵坐标)
赋值 (待删除文件名, 屏幕.带背景色输入 (#., #.))
赋值 (删除是否成功, FTP辅助核心对象.未知支持库函数_56 (待删除文件名))
屏幕.填充默认背景色字符 (0, 相加 (信息输入位置开始纵坐标, 1), 屏幕长, 相减 (最后信息位置纵坐标, 1))
屏幕.置光标位置 (0, 相加 (信息输入位置开始纵坐标, 1))
.如果 (等于 (删除是否成功, 真))
    屏幕.指定位置与颜色输出文本 (相减 (相除 (屏幕长, 2), 10), 相加 (信息输入位置开始纵坐标, 2), #., 默认背景色, “Delete File Succeed!”)
.否则
    
    屏幕.指定位置与颜色输出文本 (相减 (相除 (屏幕长, 2), 10), 相加 (信息输入位置开始纵坐标, 2), #., 默认背景色, “Delete File Error!”)
.如果结束



.子程序 显示输入待删除文件名输入框, 空白型, , 
赋值 (当前状态, #FTP_填写删除文件名状态)
屏幕.输出文本 (“ Delete File Name: ”)
屏幕.取光标位置 (删除文件名输入横坐标, 删除文件名纵坐标)
.变量循环首 (1, 相减 (屏幕长, 25), 1, )
    屏幕.带颜色输出文本 (#., #., “ ”)
.变量循环尾 ()
屏幕.输出换行 (2)


.子程序 文件改名, 空白型, , 
.局部变量 旧文件名, 文本型, , , 
.局部变量 新文件名, 文本型, , , 
.局部变量 改名是否成功, 逻辑型, , , 
.局部变量 匿名局部变量_1187, 空白型, , , 

屏幕.填充默认背景色字符 (0, 相加 (信息输入位置开始纵坐标, 1), 屏幕长, 相减 (最后信息位置纵坐标, 1))
屏幕.置光标位置 (0, 相加 (信息输入位置开始纵坐标, 1))

显示待改名输入框 ()

屏幕.置光标位置 (改名_旧名输入横坐标, 改名_旧名纵坐标)
赋值 (旧文件名, 屏幕.带背景色输入 (#., #.))
屏幕.置光标位置 (改名_新名输入横坐标, 改名_新名纵坐标)
赋值 (新文件名, 屏幕.带背景色输入 (#., #.))

赋值 (改名是否成功, FTP辅助核心对象.未知支持库函数_57 (旧文件名, 新文件名))
屏幕.填充默认背景色字符 (0, 相加 (信息输入位置开始纵坐标, 1), 屏幕长, 相减 (最后信息位置纵坐标, 1))
屏幕.置光标位置 (0, 相加 (信息输入位置开始纵坐标, 1))
.如果 (等于 (改名是否成功, 真))
    屏幕.指定位置与颜色输出文本 (相减 (相除 (屏幕长, 2), 10), 相加 (信息输入位置开始纵坐标, 2), #., 默认背景色, “ReName Succeed!”)
.否则
    
    屏幕.指定位置与颜色输出文本 (相减 (相除 (屏幕长, 2), 10), 相加 (信息输入位置开始纵坐标, 2), #., 默认背景色, “ReName Error!”)
.如果结束



.子程序 显示待改名输入框, 空白型, , 
赋值 (当前状态, #FTP_填写改名状态)
屏幕.输出文本 (“ Old File Name: ”)
屏幕.取光标位置 (改名_旧名输入横坐标, 改名_旧名纵坐标)
.变量循环首 (1, 相减 (屏幕长, 25), 1, )
    屏幕.带颜色输出文本 (#., #., “ ”)
.变量循环尾 ()
屏幕.输出换行 (2)

屏幕.输出文本 (“ New File Name: ”)
屏幕.取光标位置 (改名_新名输入横坐标, 改名_新名纵坐标)
.变量循环首 (1, 相减 (屏幕长, 25), 1, )
    屏幕.带颜色输出文本 (#., #., “ ”)
.变量循环尾 ()
屏幕.输出换行 (2)



.子程序 创建目录, 空白型, , 
.局部变量 目录名, 文本型, , , 
.局部变量 创建目录是否成功, 逻辑型, , , 

屏幕.填充默认背景色字符 (0, 相加 (信息输入位置开始纵坐标, 1), 屏幕长, 相减 (最后信息位置纵坐标, 1))
屏幕.置光标位置 (0, 相加 (信息输入位置开始纵坐标, 1))

显示创建目录输入框 ()

屏幕.置光标位置 (创建目录输入横坐标, 创建目录纵坐标)
赋值 (目录名, 屏幕.带背景色输入 (#., #.))

赋值 (创建目录是否成功, FTP辅助核心对象.未知支持库函数_58 (目录名))
屏幕.填充默认背景色字符 (0, 相加 (信息输入位置开始纵坐标, 1), 屏幕长, 相减 (最后信息位置纵坐标, 1))
屏幕.置光标位置 (0, 相加 (信息输入位置开始纵坐标, 1))
.如果 (等于 (创建目录是否成功, 真))
    屏幕.指定位置与颜色输出文本 (相减 (相除 (屏幕长, 2), 10), 相加 (信息输入位置开始纵坐标, 2), #., 默认背景色, “Create Dir Succeed!”)
.否则
    
    屏幕.指定位置与颜色输出文本 (相减 (相除 (屏幕长, 2), 10), 相加 (信息输入位置开始纵坐标, 2), #., 默认背景色, “Create Dir Error!”)
.如果结束



.子程序 显示创建目录输入框, 空白型, , 
赋值 (当前状态, #FTP_创建目录)
屏幕.输出文本 (“ Create Dir: ”)
屏幕.取光标位置 (创建目录输入横坐标, 创建目录纵坐标)
.变量循环首 (1, 相减 (屏幕长, 25), 1, )
    屏幕.带颜色输出文本 (#., #., “ ”)
.变量循环尾 ()
屏幕.输出换行 (2)



.子程序 删除目录, 空白型, , 
.局部变量 目录名, 文本型, , , 
.局部变量 删除目录是否成功, 逻辑型, , , 

屏幕.填充默认背景色字符 (0, 相加 (信息输入位置开始纵坐标, 1), 屏幕长, 相减 (最后信息位置纵坐标, 1))
屏幕.置光标位置 (0, 相加 (信息输入位置开始纵坐标, 1))

显示删除目录输入框 ()

屏幕.置光标位置 (删除目录输入横坐标, 删除目录纵坐标)
赋值 (目录名, 屏幕.带背景色输入 (#., #.))

赋值 (删除目录是否成功, FTP辅助核心对象.未知支持库函数_59 (目录名))
屏幕.填充默认背景色字符 (0, 相加 (信息输入位置开始纵坐标, 1), 屏幕长, 相减 (最后信息位置纵坐标, 1))
屏幕.置光标位置 (0, 相加 (信息输入位置开始纵坐标, 1))
.如果 (等于 (删除目录是否成功, 真))
    屏幕.指定位置与颜色输出文本 (相减 (相除 (屏幕长, 2), 10), 相加 (信息输入位置开始纵坐标, 2), #., 默认背景色, “Delete Dir Succeed!”)
.否则
    
    屏幕.指定位置与颜色输出文本 (相减 (相除 (屏幕长, 2), 10), 相加 (信息输入位置开始纵坐标, 2), #., 默认背景色, “Delete Dir Error!”)
.如果结束



.子程序 显示删除目录输入框, 空白型, , 
赋值 (当前状态, #FTP_删除目录)
屏幕.输出文本 (“ Delete Dir: ”)
屏幕.取光标位置 (删除目录输入横坐标, 删除目录纵坐标)
.变量循环首 (1, 相减 (屏幕长, 25), 1, )
    屏幕.带颜色输出文本 (#., #., “ ”)
.变量循环尾 ()
屏幕.输出换行 (2)


.子程序 设置当前目录, 空白型, , 
.局部变量 目录名, 文本型, , , 
.局部变量 设置当前目录是否成功, 逻辑型, , , 

屏幕.填充默认背景色字符 (0, 相加 (信息输入位置开始纵坐标, 1), 屏幕长, 相减 (最后信息位置纵坐标, 1))
屏幕.置光标位置 (0, 相加 (信息输入位置开始纵坐标, 1))

显示设置当前目录输入框 ()

屏幕.置光标位置 (设置当前目录输入横坐标, 设置当前目录纵坐标)
赋值 (目录名, 屏幕.带背景色输入 (#., #.))

赋值 (设置当前目录是否成功, FTP辅助核心对象.未知支持库函数_60 (目录名))
屏幕.填充默认背景色字符 (0, 相加 (信息输入位置开始纵坐标, 1), 屏幕长, 相减 (最后信息位置纵坐标, 1))
屏幕.置光标位置 (0, 相加 (信息输入位置开始纵坐标, 1))
.如果 (等于 (设置当前目录是否成功, 真))
    屏幕.指定位置与颜色输出文本 (相减 (相除 (屏幕长, 2), 10), 相加 (信息输入位置开始纵坐标, 2), #., 默认背景色, “Set Current Dir Succeed!”)
.否则
    
    屏幕.指定位置与颜色输出文本 (相减 (相除 (屏幕长, 2), 10), 相加 (信息输入位置开始纵坐标, 2), #., 默认背景色, “Set Current Dir Error!”)
.如果结束



.子程序 显示设置当前目录输入框, 空白型, , 
赋值 (当前状态, #FTP_设置当前目录)
屏幕.输出文本 (“ Set Current Dir: ”)
屏幕.取光标位置 (设置当前目录输入横坐标, 设置当前目录纵坐标)
.变量循环首 (1, 相减 (屏幕长, 25), 1, )
    屏幕.带颜色输出文本 (#., #., “ ”)
.变量循环尾 ()
屏幕.输出换行 (2)


.子程序 取当前目录, 空白型, , 
.局部变量 目录名, 文本型, , , 

屏幕.填充默认背景色字符 (0, 相加 (信息输入位置开始纵坐标, 1), 屏幕长, 相减 (最后信息位置纵坐标, 1))
屏幕.置光标位置 (0, 相加 (信息输入位置开始纵坐标, 1))

赋值 (目录名, FTP辅助核心对象.未知支持库函数_61 ())
屏幕.填充默认背景色字符 (0, 相加 (信息输入位置开始纵坐标, 1), 屏幕长, 相减 (最后信息位置纵坐标, 1))
屏幕.置光标位置 (0, 相加 (信息输入位置开始纵坐标, 1))
.如果 (不等于 (目录名, “”))
    屏幕.指定位置与颜色输出文本 (相减 (相除 (屏幕长, 2), 10), 相加 (信息输入位置开始纵坐标, 2), #., 默认背景色, 相加 (“Current Dir: ”, 目录名))
.否则
    
    屏幕.指定位置与颜色输出文本 (相减 (相除 (屏幕长, 2), 10), 相加 (信息输入位置开始纵坐标, 2), #., 默认背景色, “Get Current Dir Error!”)
.如果结束




.子程序 移动文件, 空白型, , 
.局部变量 源位置, 文本型, , , 
.局部变量 目的位置, 文本型, , , 
.局部变量 移动文件是否成功, 逻辑型, , , 

屏幕.填充默认背景色字符 (0, 相加 (信息输入位置开始纵坐标, 1), 屏幕长, 相减 (最后信息位置纵坐标, 1))
屏幕.置光标位置 (0, 相加 (信息输入位置开始纵坐标, 1))

显示移动文件输入框 ()

屏幕.置光标位置 (移动文件_源位置输入横坐标, 移动文件_源位置纵坐标)
赋值 (源位置, 屏幕.带背景色输入 (#., #.))

屏幕.置光标位置 (移动文件_目的位置输入横坐标, 移动文件_目的位置纵坐标)
赋值 (目的位置, 屏幕.带背景色输入 (#., #.))

赋值 (移动文件是否成功, FTP辅助核心对象.未知支持库函数_63 (源位置, 目的位置))
屏幕.填充默认背景色字符 (0, 相加 (信息输入位置开始纵坐标, 1), 屏幕长, 相减 (最后信息位置纵坐标, 1))
屏幕.置光标位置 (0, 相加 (信息输入位置开始纵坐标, 1))
.如果 (等于 (移动文件是否成功, 真))
    屏幕.指定位置与颜色输出文本 (相减 (相除 (屏幕长, 2), 10), 相加 (信息输入位置开始纵坐标, 2), #., 默认背景色, “Move File Succeed!”)
.否则
    
    屏幕.指定位置与颜色输出文本 (相减 (相除 (屏幕长, 2), 10), 相加 (信息输入位置开始纵坐标, 2), #., 默认背景色, “Move File Error!”)
.如果结束



.子程序 显示移动文件输入框, 空白型, , 
赋值 (当前状态, #FTP_移动文件)
屏幕.输出文本 (“ From: ”)
屏幕.取光标位置 (移动文件_源位置输入横坐标, 移动文件_源位置纵坐标)
.变量循环首 (1, 相减 (屏幕长, 25), 1, )
    屏幕.带颜色输出文本 (#., #., “ ”)
.变量循环尾 ()
屏幕.输出换行 (2)

屏幕.输出文本 (“ To: ”)
屏幕.取光标位置 (移动文件_目的位置输入横坐标, 移动文件_目的位置纵坐标)
.变量循环首 (1, 相减 (屏幕长, 25), 1, )
    屏幕.带颜色输出文本 (#., #., “ ”)
.变量循环尾 ()
屏幕.输出换行 (2)



.子程序 执行命令, 空白型, , 
.局部变量 命令名, 文本型, , , 
.局部变量 返回文本, 文本型, , , 
.局部变量 执行命令返回, 整数型, , , 

屏幕.填充默认背景色字符 (0, 相加 (信息输入位置开始纵坐标, 1), 屏幕长, 相减 (最后信息位置纵坐标, 1))
屏幕.置光标位置 (0, 相加 (信息输入位置开始纵坐标, 1))

显示执行命令输入框 ()

屏幕.置光标位置 (执行命令输入横坐标, 执行命令纵坐标)
赋值 (命令名, 屏幕.带背景色输入 (#., #.))

赋值 (执行命令返回, FTP辅助核心对象.未知支持库函数_64 (命令名, 返回文本))
屏幕.填充默认背景色字符 (0, 相加 (信息输入位置开始纵坐标, 1), 屏幕长, 相减 (最后信息位置纵坐标, 1))
屏幕.置光标位置 (0, 相加 (信息输入位置开始纵坐标, 1))
.如果 (不等于 (执行命令返回, 0))
    屏幕.指定位置与颜色输出文本 (相减 (相除 (屏幕长, 2), 10), 相加 (信息输入位置开始纵坐标, 2), #., 默认背景色, 返回文本)
.否则
    
    屏幕.指定位置与颜色输出文本 (相减 (相除 (屏幕长, 2), 10), 相加 (信息输入位置开始纵坐标, 2), #., 默认背景色, “Run Cmd Error!”)
.如果结束



.子程序 显示执行命令输入框, 空白型, , 
赋值 (当前状态, #FTP_执行命令)
屏幕.输出文本 (“ Cmd: ”)
屏幕.取光标位置 (执行命令输入横坐标, 执行命令纵坐标)
.变量循环首 (1, 相减 (屏幕长, 25), 1, )
    屏幕.带颜色输出文本 (#., #., “ ”)
.变量循环尾 ()
屏幕.输出换行 (2)



.子程序 显示目录列表, 空白型, , 
.局部变量 文件个数, 整数型, , , 
.局部变量 目录名, 文本型, , , 
.局部变量 文件名数组, 文本型, , "0", 
.局部变量 文件大小数组, 长整数型, , "0", 

屏幕.填充默认背景色字符 (0, 相加 (信息输入位置开始纵坐标, 1), 屏幕长, 相减 (最后信息位置纵坐标, 1))
屏幕.置光标位置 (0, 相加 (信息输入位置开始纵坐标, 1))

显示目录列表输入框 ()

屏幕.置光标位置 (显示目录列表输入横坐标, 显示目录列表纵坐标)
赋值 (目录名, 屏幕.带背景色输入 (#., #.))

.如果真 (等于 (目录名, “”))
    赋值 (目录名, FTP辅助核心对象.未知支持库函数_61 ())
.如果真结束

赋值 (文件个数, FTP辅助核心对象.未知支持库函数_62 (目录名, 文件名数组, , 文件大小数组, ))
屏幕.填充默认背景色字符 (0, 相加 (信息输入位置开始纵坐标, 1), 屏幕长, 相减 (最后信息位置纵坐标, 1))
屏幕.置光标位置 (0, 相加 (信息输入位置开始纵坐标, 1))
.如果 (不等于 (文件个数, -1))
    屏幕.输出文本 (相加 (“FileCount: ”, 到文本 (文件个数)))
    屏幕.置光标位置 (5, 相加 (信息输入位置开始纵坐标, 2))
    显示_目录列表 (文件个数, 文件名数组, 文件大小数组)
    
.否则
    
    屏幕.指定位置与颜色输出文本 (相减 (相除 (屏幕长, 2), 10), 相加 (信息输入位置开始纵坐标, 2), #., 默认背景色, “Show Dir List Error!”)
.如果结束



.子程序 显示目录列表输入框, 空白型, , 
赋值 (当前状态, #FTP_显示目录)
屏幕.输出文本 (“ Directory: ”)
屏幕.取光标位置 (显示目录列表输入横坐标, 显示目录列表纵坐标)
.变量循环首 (1, 相减 (屏幕长, 25), 1, )
    屏幕.带颜色输出文本 (#., #., “ ”)
.变量循环尾 ()
屏幕.输出换行 (2)



.子程序 显示_目录列表, 空白型, , 
.参数 文件个数, 整数型, , 
.参数 文件名数组, 文本型, 数组,  
.参数 文件大小数组, 长整数型, 数组, 

.局部变量 输出纵坐标, 整数型, , , 
.局部变量 横坐标, 整数型, , , 
.局部变量 纵坐标, 整数型, , , 
.局部变量 记次变量, 整数型, , , 


赋值 (输出纵坐标, 相加 (信息输入位置开始纵坐标, 2))
写调试信息 (相加 (“屏幕长(”, 到文本 (屏幕长), “) 屏幕宽(”, 到文本 (屏幕宽), “)”))
.变量循环首 (1, 文件个数, 1, 记次变量)
    屏幕.取光标位置 (横坐标, 纵坐标)
    写调试信息 (相加 (“当前横坐标(”, 到文本 (横坐标), “) 当前纵坐标(”, 到文本 (纵坐标), “) 输出纵坐标(”, 到文本 (输出纵坐标), “)”))
    .如果真 (大于 (相加 (横坐标, 取文本长度 (文件名数组 [记次变量])), 相减 (屏幕长, 5)))
        赋值 (输出纵坐标, 相加 (输出纵坐标, 1))
        赋值 (横坐标, 5)
    .如果真结束
    .如果 (小于 (输出纵坐标, 相减 (屏幕宽, 3)))
        .如果 (等于 (文件大小数组 [记次变量], -1))
            屏幕.指定位置与颜色输出文本 (横坐标, 输出纵坐标, #., 默认背景色, 相加 (文件名数组 [记次变量], “  ”))
        .否则
            屏幕.指定位置输出文本 (横坐标, 输出纵坐标, 相加 (文件名数组 [记次变量], “  ”))
            
        .如果结束
        
    .否则
        
        屏幕.输出换行 (1)
        屏幕.输出文本 (“...”)
        返回 ()
    .如果结束
    
.变量循环尾 ()

 ' ...
 ' ...



.子程序 FTP上传_上传文件, 空白型, , 
.局部变量 上传任务信息, 未知类型0x20004, , , 

屏幕.填充默认背景色字符 (0, 相加 (信息输入位置开始纵坐标, 1), 屏幕长, 相减 (最后信息位置纵坐标, 1))
屏幕.置光标位置 (0, 相加 (信息输入位置开始纵坐标, 1))

FTP上传_显示上传参数输入框 ()

屏幕.置光标位置 (FTP上传_本机文件输入横坐标, FTP上传_本机文件纵坐标)
赋值 (上传任务信息., 屏幕.带背景色输入 (#., #.))

屏幕.置光标位置 (FTP上传_服务器文件输入横坐标, FTP上传_服务器文件纵坐标)
赋值 (上传任务信息., 相加 (网络地址, 屏幕.带背景色输入 (#., #.)))

赋值 (上传任务信息., #.)
赋值 (上传任务信息., 90000)
赋值 (上传任务信息., 9000)
赋值 (上传任务信息., 9000)
赋值 (上传任务信息., 20400)
赋值 (上传任务信息., 20400)
赋值 (上传任务信息., 6000)
赋值 (上传任务信息., &FTP上传_交互回调函数)
赋值 (上传任务信息., 用户名)
赋值 (上传任务信息., 密码)

屏幕.填充默认背景色字符 (0, 相加 (信息输入位置开始纵坐标, 1), 屏幕长, 相减 (最后信息位置纵坐标, 1))
屏幕.置光标位置 (0, 相加 (信息输入位置开始纵坐标, 1))

显示上传信息框 ()

.如果 (等于 (FTP上传核心对象.未知支持库函数_40 (上传任务信息), 真))
    设置上传信息_交互消息 (“Connect...”)
.否则
    设置上传信息_交互消息 (“Init Error...”)
.如果结束



.子程序 FTP上传_显示上传参数输入框, 空白型, , 
赋值 (当前状态, #FTP上传_填写上传信息)
设置子界面位置 (#FTP界面_上传信息输入)
屏幕.输出文本 (“ Loacl File: ”)
屏幕.取光标位置 (FTP上传_本机文件输入横坐标, FTP上传_本机文件纵坐标)
.变量循环首 (1, 相减 (屏幕长, 25), 1, )
    屏幕.带颜色输出文本 (#., #., “ ”)
.变量循环尾 ()
屏幕.输出换行 (2)

屏幕.输出文本 (“ Ftp Server File: ”)
屏幕.取光标位置 (FTP上传_服务器文件输入横坐标, FTP上传_服务器文件纵坐标)
.变量循环首 (1, 相减 (屏幕长, 25), 1, )
    屏幕.带颜色输出文本 (#., #., “ ”)
.变量循环尾 ()
屏幕.输出换行 (2)
更新最后信息坐标 ()


.子程序 显示上传信息框, 空白型, , 
赋值 (当前状态, #FTP上传_正在上传)
设置子界面位置 (#FTP界面_上传时界面)
屏幕.输出文本 (“ FileSize:”)
屏幕.取光标位置 (上传信息_大小横, 上传信息_大小纵)
.变量循环首 (1, 10, 1, )
    屏幕.带颜色输出文本 (#., #., “ ”)
.变量循环尾 ()
屏幕.置光标位置 (相除 (屏幕长, 2), 上传信息_大小纵)

屏幕.输出文本 (“ DoneSize:”)
屏幕.取光标位置 (上传信息_完成数横, 上传信息_完成数纵)
.变量循环首 (1, 10, 1, )
    屏幕.带颜色输出文本 (#., #., “ ”)
.变量循环尾 ()
屏幕.输出换行 (2)

屏幕.输出文本 (“ Percent:”)
屏幕.取光标位置 (上传信息_百分比横, 上传信息_百分比纵)
.变量循环首 (1, 4, 1, )
    屏幕.带颜色输出文本 (#., #., “ ”)
.变量循环尾 ()
屏幕.置光标位置 (相除 (屏幕长, 2), 上传信息_百分比纵)

屏幕.输出文本 (“ Retry:”)
屏幕.取光标位置 (上传信息_重试横, 上传信息_重试纵)
.变量循环首 (1, 4, 1, )
    屏幕.带颜色输出文本 (#., #., “ ”)
.变量循环尾 ()
屏幕.输出换行 (2)

屏幕.输出文本 (“ Rate:”)
屏幕.取光标位置 (上传信息_速度横, 上传信息_速度纵)
.变量循环首 (1, 20, 1, )
    屏幕.带颜色输出文本 (#., #., “ ”)
.变量循环尾 ()
屏幕.置光标位置 (相除 (屏幕长, 2), 上传信息_速度纵)

屏幕.输出文本 (“ RecvInfo:”)
屏幕.取光标位置 (上传信息_交互消息横, 上传信息_交互消息纵)
.变量循环首 (1, 20, 1, )
    屏幕.带颜色输出文本 (#., #., “ ”)
.变量循环尾 ()

更新最后信息坐标 ()

.子程序 FTP上传_交互回调函数, 整数型, , 
.参数 消息类型, 整数型, , 
.参数 线程信息, 整数型, , 
.参数 参数3, 整数型, , 
.参数 参数4, 整数型, , 
.参数 对象信息, 整数型, , 

.局部变量 对象序号, 整数型, , , 
.局部变量 线程序号, 整数型, , , 
.局部变量 线程数组, 整数型, , "0", 
.局部变量 本地文件路径, 文本型, , , 
.局部变量 路径数组, 文本型, , "0", 
.局部变量 新文件名, 文本型, , , 
.局部变量 匿名局部变量_1563, 空白型, , , 
.局部变量 线程信息成员, 线程信息, , , 


.判断开始 (等于 (消息类型, #.))
     ' 一个上传任务开始时收到本消息
    写调试信息 (“收到 下载上传开始消息..”)
    赋值 (总长度, 参数3)
    设置上传信息_大小 (参数3)
    设置上传信息_交互消息 (“down start..”)
    
    赋值 (统计线程退出, 假)
    未知支持库函数_0 (&上传统计线程, )
    
.判断 (等于 (消息类型, #.))
     ' 一个上传任务结束时收到本消息
    赋值 (上传总长度, 参数3)
    写调试信息 (“收到下载上传结束消息...”)
    设置上传信息_完成数 (上传总长度)
    设置上传信息_百分比 (相乘 (相除 (上传总长度, 总长度), 100))
    设置上传信息_交互消息 (“close down...”)
    赋值 (统计线程退出, 真)
    写调试信息 (相加 (“收到上传结束消息,完成数(”, 到文本 (参数3), “)”))
.判断 (等于 (消息类型, #.))
    返回 (#.)
.默认
    
.判断结束
返回 (0)



.子程序 设置上传信息_大小, 空白型, , 
.参数 大小, 整数型, , 

.如果真 (等于 (上传信息是否显示 (), 假))
    返回 ()
.如果真结束

未知支持库函数_3 (输出锁)
屏幕.置光标位置 (上传信息_大小横, 上传信息_大小纵)
清除输入条 (10)
屏幕.置光标位置 (上传信息_大小横, 上传信息_大小纵)
屏幕.带颜色输出文本 (#., #., 到文本 (大小))
屏幕.置光标位置 (光标常规停留位置, 命令输入纵坐标)
未知支持库函数_4 (输出锁)



.子程序 设置上传信息_完成数, 空白型, , 
.参数 完成数, 整数型, , 

.如果真 (等于 (上传信息是否显示 (), 假))
    返回 ()
.如果真结束

未知支持库函数_3 (输出锁)
屏幕.置光标位置 (上传信息_完成数横, 上传信息_完成数纵)
清除输入条 (10)
屏幕.置光标位置 (上传信息_完成数横, 上传信息_完成数纵)
屏幕.带颜色输出文本 (#., #., 到文本 (完成数))
屏幕.置光标位置 (光标常规停留位置, 命令输入纵坐标)
未知支持库函数_4 (输出锁)





.子程序 设置上传信息_百分比, 空白型, , 
.参数 百分比, 整数型, , 

.如果真 (等于 (上传信息是否显示 (), 假))
    返回 ()
.如果真结束

未知支持库函数_3 (输出锁)
屏幕.置光标位置 (上传信息_百分比横, 上传信息_百分比纵)
清除输入条 (4)
屏幕.置光标位置 (上传信息_百分比横, 上传信息_百分比纵)
屏幕.带颜色输出文本 (#., #., 相加 (到文本 (百分比), “%”))
屏幕.置光标位置 (光标常规停留位置, 命令输入纵坐标)
未知支持库函数_4 (输出锁)



.子程序 设置上传信息_重试, 空白型, , 
.参数 次数, 整数型, , 

.如果真 (等于 (上传信息是否显示 (), 假))
    返回 ()
.如果真结束

未知支持库函数_3 (输出锁)
屏幕.置光标位置 (上传信息_重试横, 上传信息_重试纵)
清除输入条 (4)
屏幕.置光标位置 (上传信息_重试横, 上传信息_重试纵)
屏幕.带颜色输出文本 (#., #., 到文本 (次数))
屏幕.置光标位置 (光标常规停留位置, 命令输入纵坐标)
未知支持库函数_4 (输出锁)



.子程序 设置上传信息_速度, 空白型, , 
.参数 速度, 整数型, , 

.如果真 (等于 (上传信息是否显示 (), 假))
    返回 ()
.如果真结束

未知支持库函数_3 (输出锁)
屏幕.置光标位置 (上传信息_速度横, 上传信息_速度纵)
清除输入条 (20)
屏幕.置光标位置 (上传信息_速度横, 上传信息_速度纵)
屏幕.带颜色输出文本 (#., #., 相加 (到文本 (速度), “byte/s”))
屏幕.置光标位置 (光标常规停留位置, 命令输入纵坐标)
未知支持库函数_4 (输出锁)




.子程序 设置上传信息_交互消息, 空白型, , 
.参数 信息, 文本型, , 

.如果真 (等于 (上传信息是否显示 (), 假))
    返回 ()
.如果真结束

未知支持库函数_3 (输出锁)
输出调试文本 (信息)
屏幕.置光标位置 (上传信息_交互消息横, 上传信息_交互消息纵)
清除输入条 (20)
屏幕.置光标位置 (上传信息_交互消息横, 上传信息_交互消息纵)
屏幕.带颜色输出文本 (#., #., 信息)
屏幕.置光标位置 (光标常规停留位置, 命令输入纵坐标)
未知支持库函数_4 (输出锁)




.子程序 上传统计线程, 空白型, , 
.局部变量 已上传长度, 整数型, , , 
.局部变量 上传速度, 整数型, , , 
.局部变量 百分比, 整数型, , , 
.局部变量 重试次数, 整数型, , , 

写调试信息 (“上传统计线程开始..”)
.判断循环首 (不等于 (统计线程退出, 真))
    未知支持库函数_3 (输出锁)
    屏幕.置光标位置 (光标常规停留位置, 命令输入纵坐标)
    未知支持库函数_4 (输出锁)
    赋值 (已上传长度, FTP上传核心对象.未知支持库函数_44 ())
    赋值 (上传速度, FTP上传核心对象.未知支持库函数_43 ())
    赋值 (百分比, 相乘 (相除 (已上传长度, 总长度), 100))
    赋值 (重试次数, FTP上传核心对象.未知支持库函数_45 ())
    设置上传信息_完成数 (已上传长度)
    设置上传信息_百分比 (百分比)
    设置上传信息_速度 (上传速度)
    设置上传信息_重试 (重试次数)
    延时 (1000)
.判断循环尾 ()
写调试信息 (“上传统计线程结束..”)
设置上传信息_速度 (0)
屏幕.指定位置输出文本 (命令输入横坐标, 命令输入纵坐标, “Input Command:”)


.子程序 上传信息是否显示, 逻辑型, , 
.如果真 (并且 (等于 (当前界面位置, #FTP界面), 等于 (子界面位置, #FTP界面_上传时界面)))
    返回 (真)
.如果真结束
返回 (假)


.类模块 控制台类, , , 

.程序集变量 控制台对象, 未知类型0x30001, , , 
.程序集变量 已输出数据, 文本型, , "0", 
.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 清空已输出数据, 空白型, 公开, 
清除数组 (已输出数据)

.子程序 取已输出数据数, 整数型, 公开, 
返回 (取数组成员数 (已输出数据))


.子程序 输出文本, 空白型, 公开, 
.参数 输出数据, 文本型, , 

控制台对象.未知支持库函数_4 (假, 8, 默认背景色, 输出数据)




.子程序 带颜色输出文本, 空白型, 公开, 
.参数 前景色, 整数型, , 
.参数 背景色, 整数型, , 
.参数 输出数据, 文本型, , 

控制台对象.未知支持库函数_4 (假, 前景色, 背景色, 输出数据)


.子程序 指定位置输出文本, 空白型, 公开, 
.参数 横坐标, 整数型, , 
.参数 纵坐标, 整数型, , 
.参数 输出数据, 文本型, , 

控制台对象.未知支持库函数_4 (横坐标, 纵坐标, 假, 8, 默认背景色, 输出数据)



.子程序 指定位置与颜色输出文本, 空白型, 公开, 
.参数 横坐标, 整数型, , 
.参数 纵坐标, 整数型, , 
.参数 前景色, 整数型, , 
.参数 背景色, 整数型, , 
.参数 输出数据, 文本型, , 

控制台对象.未知支持库函数_4 (横坐标, 纵坐标, 假, 前景色, 背景色, 输出数据)


.子程序 输出一行文本, 空白型, 公开, 
.参数 输出数据, 文本型, , 

控制台对象.未知支持库函数_4 (假, 8, 1, 输出数据)
屏幕.输出换行 (1)


.子程序 带颜色输出一行文本, 空白型, 公开, 
.参数 前景色, 整数型, , 
.参数 背景色, 整数型, , 
.参数 输出数据, 文本型, , 

控制台对象.未知支持库函数_4 (假, 前景色, 背景色, 输出数据)
屏幕.输出换行 (1)



.子程序 指定文本带颜色输出, 空白型, 公开, 
.参数 前景色, 整数型, , 
.参数 背景色, 整数型, , 
.参数 输出数据, 文本型, , 
.参数 文本, 文本型, , 

.局部变量 分割后文本, 文本型, , "0", 
.局部变量 记次变量, 整数型, , , 
.局部变量 文本个数, 整数型, , , 


赋值 (分割后文本, 分割文本 (输出数据, 文本, ))
赋值 (文本个数, 取数组成员数 (分割后文本))
.变量循环首 (1, 相减 (文本个数, 1), 1, 记次变量)
    控制台对象.未知支持库函数_4 (假, 8, 默认背景色, 分割后文本 [记次变量])
    控制台对象.未知支持库函数_4 (假, 前景色, 背景色, 文本)
.变量循环尾 ()
控制台对象.未知支持库函数_4 (假, 前景色, 背景色, 分割后文本 [文本个数])

.子程序 指定文本带颜色输出且换行, 空白型, 公开, 
.参数 前景色, 整数型, , 
.参数 背景色, 整数型, , 
.参数 输出数据, 文本型, , 
.参数 文本, 文本型, , 

.局部变量 分割后文本, 文本型, , "0", 
.局部变量 记次变量, 整数型, , , 
.局部变量 文本个数, 整数型, , , 


赋值 (分割后文本, 分割文本 (输出数据, 文本, ))
赋值 (文本个数, 取数组成员数 (分割后文本))
.变量循环首 (1, 相减 (文本个数, 1), 1, 记次变量)
    控制台对象.未知支持库函数_4 (假, 8, 默认背景色, 分割后文本 [记次变量])
    控制台对象.未知支持库函数_4 (假, 前景色, 背景色, 文本)
.变量循环尾 ()
控制台对象.未知支持库函数_4 (假, 前景色, 背景色, 分割后文本 [文本个数])
屏幕.输出换行 (1)

.子程序 输出文本且记录, 空白型, 公开, 
.参数 输出数据, 文本型, , 

加入成员 (已输出数据, 输出数据)
控制台对象.未知支持库函数_4 (假, 8, 默认背景色, 输出数据)


.子程序 输出一行文本且记录, 空白型, 公开, 
.参数 输出数据, 文本型, , 

加入成员 (已输出数据, 输出数据)
屏幕.输出换行 (1)
控制台对象.未知支持库函数_4 (假, 8, 默认背景色, 相加 (输出数据, #换行符))


.子程序 取已输出数据, 文本型, 公开, 
.局部变量 记次变量, 整数型, , , 
.局部变量 数据, 文本型, , , 

.变量循环首 (1, 取数组成员数 (已输出数据), 1, 记次变量)
    赋值 (数据, 相加 (数据, 已输出数据 [记次变量]))
.变量循环尾 ()
返回 (数据)


.子程序 获得输入数据, 文本型, 公开, 
返回 (标准输入 (真))

 ' 返回 (控制台对象.输入 (, , 假, 真, , 真, 1024))




.子程序 带背景色输入且画输入条, 文本型, 公开, 
.参数 提示文本, 文本型, , 
.参数 前景颜色, 整数型, , 
.参数 背景颜色, 整数型, , 
.参数 颜色信息长度, 整数型, , 

.局部变量 横坐标, 整数型, , , 
.局部变量 纵坐标, 整数型, , , 
.局部变量 返回数据, 文本型, , , 
.局部变量 输入数据, 文本型, , , 

输出文本 (提示文本)
取光标位置 (横坐标, 纵坐标)
.变量循环首 (1, 颜色信息长度, 1, )
    控制台对象.未知支持库函数_4 (假, 背景颜色, 背景颜色, “ ”)
.变量循环尾 ()

控制台对象.未知支持库函数_5 (横坐标, 纵坐标)
.判断循环首 (真)
    赋值 (输入数据, 控制台对象.未知支持库函数_3 (假, 假, , 假, 0))
    .如果真 (或者 (等于 (输入数据, 字符 (13)), 等于 (输入数据, 字符 (10))))
        跳出循环 ()
    .如果真结束
    赋值 (返回数据, 相加 (返回数据, 输入数据))
    控制台对象.未知支持库函数_4 (假, 前景颜色, 背景颜色, 输入数据)
.判断循环尾 ()
返回 (返回数据)



.子程序 带背景色输入, 文本型, 公开, 
.参数 前景颜色, 整数型, , 
.参数 背景颜色, 整数型, , 

.局部变量 返回数据, 文本型, , , 
.局部变量 输入数据, 文本型, , , 
.局部变量 中间数据, 文本型, , "0", 
.局部变量 当前位置, 整数型, , , 
.局部变量 返回键值, 整数型, , , 
.局部变量 横坐标, 整数型, , , 
.局部变量 纵坐标, 整数型, , , 
.局部变量 记次变量, 整数型, , , 

赋值 (当前位置, 1)

.判断循环首 (真)
    赋值 (输入数据, 控制台对象.未知支持库函数_3 (假, 假, , 假, 0))
    .如果 (等于 (是否是控制键 (输入数据), 真))
        赋值 (返回键值, 处理控制键 (输入数据, 中间数据))
        .判断开始 (等于 (返回键值, 回车键))
            跳出循环 ()
            
        .判断 (等于 (返回键值, 退格键))
            .如果真 (不等于 (当前位置, 1))
                屏幕.取光标位置 (横坐标, 纵坐标)
                屏幕.置光标位置 (相减 (横坐标, 1), 纵坐标)
                屏幕.带颜色输出文本 (前景颜色, 背景颜色, “ ”)
                屏幕.置光标位置 (相减 (横坐标, 1), 纵坐标)
                赋值 (当前位置, 相减 (当前位置, 1))
                删除成员 (中间数据, 当前位置, 1)
            .如果真结束
            
        .默认
            
        .判断结束
        
    .否则
        
        加入成员 (中间数据, 输入数据)
        赋值 (当前位置, 相加 (当前位置, 1))
        控制台对象.未知支持库函数_4 (假, 前景颜色, 背景颜色, 输入数据)
    .如果结束
    
.判断循环尾 ()

.变量循环首 (1, 相减 (当前位置, 1), 1, 记次变量)
    赋值 (返回数据, 相加 (返回数据, 中间数据 [记次变量]))
.变量循环尾 ()

返回 (返回数据)



.子程序 带背景色且指定会显字符输入, 文本型, 公开, 
.参数 前景颜色, 整数型, , 
.参数 背景颜色, 整数型, , 
.参数 会显字符, 文本型, , 

.局部变量 返回数据, 文本型, , , 
.局部变量 输入数据, 文本型, , , 
.局部变量 中间数据, 文本型, , "0", 
.局部变量 当前位置, 整数型, , , 
.局部变量 返回键值, 整数型, , , 
.局部变量 横坐标, 整数型, , , 
.局部变量 纵坐标, 整数型, , , 
.局部变量 记次变量, 整数型, , , 

赋值 (当前位置, 1)

.判断循环首 (真)
    赋值 (输入数据, 控制台对象.未知支持库函数_3 (假, 假, , 假, 0))
    .如果 (等于 (是否是控制键 (输入数据), 真))
        赋值 (返回键值, 处理控制键 (输入数据, 中间数据))
        .判断开始 (等于 (返回键值, 回车键))
            跳出循环 ()
            
        .判断 (等于 (返回键值, 退格键))
            .如果真 (不等于 (当前位置, 1))
                屏幕.取光标位置 (横坐标, 纵坐标)
                屏幕.置光标位置 (相减 (横坐标, 1), 纵坐标)
                屏幕.带颜色输出文本 (前景颜色, 背景颜色, “ ”)
                屏幕.置光标位置 (相减 (横坐标, 1), 纵坐标)
                赋值 (当前位置, 相减 (当前位置, 1))
                删除成员 (中间数据, 当前位置, 1)
            .如果真结束
            
        .默认
            
        .判断结束
        
    .否则
        
        加入成员 (中间数据, 输入数据)
        赋值 (当前位置, 相加 (当前位置, 1))
        控制台对象.未知支持库函数_4 (假, 前景颜色, 背景颜色, 会显字符)
    .如果结束
    
.判断循环尾 ()

.变量循环首 (1, 相减 (当前位置, 1), 1, 记次变量)
    赋值 (返回数据, 相加 (返回数据, 中间数据 [记次变量]))
.变量循环尾 ()

返回 (返回数据)


.子程序 清屏, 空白型, 公开, 
控制台对象.未知支持库函数_2 ()


.子程序 取屏幕大小, 空白型, 公开, 
.参数 长, 整数型, 参考, 
.参数 宽, 整数型, 参考, 
.参数 匿名参数_131, 空白型, , 

控制台对象.未知支持库函数_7 (长, 宽)


.子程序 取光标位置, 空白型, 公开, 
.参数 横坐标, 整数型, 参考, 
.参数 纵坐标, 整数型, 参考, 
.参数 匿名参数_148, 空白型, , 

控制台对象.未知支持库函数_6 (横坐标, 纵坐标)



.子程序 置光标位置, 空白型, 公开, 
.参数 横坐标, 整数型, 参考, 
.参数 纵坐标, 整数型, 参考, 
.参数 匿名参数_253, 空白型, , 

控制台对象.未知支持库函数_5 (横坐标, 纵坐标)


.子程序 清楚区域, 空白型, 公开, 
.参数 横坐标, 整数型, , 
.参数 纵坐标, 整数型, , 
.参数 匿名参数_158, 空白型, , 

填充默认背景色字符 (横坐标, 纵坐标, 最后信息位置横坐标, 最后信息位置纵坐标)


.子程序 清楚指定区域, 空白型, 公开, 
.参数 横坐标, 整数型, , 
.参数 纵坐标, 整数型, , 
.参数 横坐标1, 整数型, , 
.参数 纵坐标1, 整数型, , 

填充默认背景色字符 (横坐标, 纵坐标, 横坐标1, 纵坐标1)


.子程序 填充默认背景色字符, 空白型, 公开, 
.参数 横坐标, 整数型, , 
.参数 纵坐标, 整数型, , 
.参数 横坐标1, 整数型, , 
.参数 纵坐标1, 整数型, , 

.局部变量 清除个数, 整数型, , , 
.局部变量 长度, 整数型, , , 


赋值 (清除个数, 相减 (纵坐标1, 纵坐标))
.如果真 (等于 (清除个数, 0))
    赋值 (清除个数, 1)
.如果真结束

控制台对象.未知支持库函数_5 (横坐标, 纵坐标)
赋值 (长度, 相加 (相乘 (清除个数, 屏幕长), 相减 (横坐标1, 横坐标)))
.变量循环首 (1, 长度, 1, )
    控制台对象.未知支持库函数_4 (假, 8, 默认背景色, “ ”)
.变量循环尾 ()



.子程序 无回显输入单个字符, 文本型, 公开, 
返回 (控制台对象.未知支持库函数_3 (假, 假, , 假, 1024))


.子程序 填充字符, 空白型, 公开, 
.参数 横坐标, 整数型, , 
.参数 纵坐标, 整数型, , 
.参数 字符, 文本型, , 
.参数 填充长度, 整数型, , 

控制台对象.未知支持库函数_5 (横坐标, 纵坐标)
.变量循环首 (1, 填充长度, 1, )
    控制台对象.未知支持库函数_4 (假, 8, 默认背景色, 字符)
.变量循环尾 ()



.子程序 填充背景色, 空白型, 公开, 
.参数 横坐标, 整数型, , 
.参数 纵坐标, 整数型, , 
.参数 颜色, 整数型, , 
.参数 长度, 整数型, , 

控制台对象.未知支持库函数_10 (横坐标, 纵坐标, 颜色, 长度)



.子程序 输出换行, 空白型, 公开, 
.参数 行数, 整数型, , 
.参数 匿名参数_2148, 空白型, , 

.局部变量 横坐标, 整数型, , , 
.局部变量 纵坐标, 整数型, , , 

控制台对象.未知支持库函数_6 (横坐标, 纵坐标)
赋值 (纵坐标, 相加 (纵坐标, 行数))
置光标位置 (0, 纵坐标)

.程序集 键盘, , , 

.子程序 是否是控制键, 逻辑型, , 
.参数 键值, 文本型, , 

.判断开始 (等于 (操作系统, 4))
    .如果真 (或者 (等于 (键值, 字符 (退格键)), 等于 (键值, 字符 (回车键)), 等于 (键值, 字符 (上键)), 等于 (键值, 字符 (下键)), 等于 (键值, 字符 (左键)), 等于 (键值, 字符 (右键))))
        返回 (真)
    .如果真结束
    返回 (假)
    
.默认
    .如果真 (或者 (等于 (键值, 字符 (回车键)), 等于 (键值, 字符 (退格键)), 等于 (键值, 字符 (224))))
        返回 (真)
    .如果真结束
    返回 (假)
    
.判断结束




.子程序 处理控制键, 整数型, , 
.参数 键值, 文本型, , 
.参数 数据, 文本型, 参考 数组, 

.局部变量 确定键, 文本型, , , 

.判断开始 (等于 (操作系统, 4))
    .判断开始 (等于 (键值, 字符 (上键)))
        返回 (上键)
        
    .判断 (等于 (键值, 字符 (下键)))
        返回 (下键)
        
    .判断 (等于 (键值, 字符 (左键)))
        返回 (左键)
        
    .判断 (等于 (键值, 字符 (右键)))
        返回 (右键)
        
    .判断 (等于 (键值, 字符 (退格键)))
        返回 (退格键)
        
    .判断 (等于 (键值, 字符 (回车键)))
        返回 (回车键)
    .默认
        
    .判断结束
    
    返回 (其它键)
    
.默认
    
    .判断开始 (等于 (键值, 字符 (224)))
        赋值 (确定键, 屏幕.无回显输入单个字符 ())
        
        .判断开始 (等于 (确定键, 字符 (上键))) ' 上
            返回 (上键)
            
        .判断 (等于 (确定键, 字符 (下键))) ' 下
            返回 (下键)
            
        .判断 (等于 (确定键, 字符 (左键))) ' 左
            返回 (左键)
            
        .判断 (等于 (确定键, 字符 (右键))) ' 右
            返回 (右键)
            
        .默认
            
        .判断结束
        
        
    .判断 (或者 (等于 (键值, 字符 (10)), 等于 (键值, 字符 (13))))
        返回 (回车键)
        
    .判断 (等于 (键值, 字符 (退格键))) ' 退格
        返回 (退格键)
        
    .默认
        
    .判断结束
    
    
    返回 (其它键)
    
.判断结束


.程序集 调试, , , 

.程序集变量 文件, 整数型, , , 
.子程序 创建调试文件, 空白型, , 
赋值 (文件, 打开文件 (“edebug”, #重写, ))


.子程序 关闭调试文件, 空白型, , 
关闭文件 (文件)


.子程序 写调试信息, 空白型, , 
.参数 文本, 文本型, , 

写文本行 (文件, 文本)



 ' 不属于任何一个程序集、类模块的函数：
