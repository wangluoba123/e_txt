 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 484
    高度 = 455
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 已保存到：D:\易语言学习\Data\tQz1RiKH.e\_启动窗口_图标.ico
    背景音乐 =  ' 空
    标题 = “组合服务器”
    帮助文件名 = “”





 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 5 系统核心支持库
 ' iext 27bb20fdd3e145e4bee3db39ddd6e64c 1 2 扩展界面支持库一
 ' EThread 5F99C1642A2F4e03850721B4F5D7C3F8 1 1 多线程支持库
 ' shell 52F260023059454187AF826A3C07AF2A 1 0 操作系统界面功能支持库
 ' RegEx 684944CB04624eb7BD5412A519421D34 1 2 正则表达式支持库
 ' sock A6B983789F624b2cBDFD7D671249C097 1 0 网络通讯支持库



 ' 所需要的模块
 ' socket连接 D:\01工作目录\模块开发\socket连接.ec



.DLL命令 Sleep, 整数型, "kernel32.dll", "Sleep", , Sleep
    .参数 延迟秒数, 整数型, , dwMilliseconds

.窗口程序集 窗口程序集1, , , 

.程序集变量 web服务, socket服务端, , , 
.程序集变量 ftp服务, socket服务端, , , 
.程序集变量 w客户数组, 文本型, , "0", 
.程序集变量 f客户数组, 文本型, , "0", 
.程序集变量 删除许可证, 整数型, , , 
.程序集变量 默认首页, 文本型, , , 
.程序集变量 数据尺寸, 整数型, , , 
.程序集变量 网站路径, 文本型, , , 
.程序集变量 FTP路径, 文本型, , , 
.程序集变量 FTP目录, 文本型, , , 
.程序集变量 FTP用户, 文本型, , , 
.程序集变量 FTP密码, 文本型, , , 
.程序集变量 匿名登陆, 逻辑型, , , 
.子程序 __启动窗口_创建完毕, 空白型, , 
赋值 (删除许可证, 未知支持库函数_1 ())
赋值 (数据尺寸, 4096)
赋值 (FTP目录, “/”)

.子程序 _按钮2_被单击, 空白型, , 
赋值 (.内容, 未知支持库函数_2 (“选择网站路径”, 假))

.子程序 _启动按钮_被单击, 空白型, , 
.如果 (等于 (.标题, “停止服务”))
    全部删除 ()
    web服务.关闭服务 ()
    1.置文本 (“关闭”)
    赋值 (.标题, “启动服务”)
.否则
    .如果真 (web服务.初始化socket ())
        .如果真 (web服务.创建socket (假))
            .如果真 (web服务.绑定bind (到整数 (.内容), ))
                .如果真 (web服务.监听listen (200))
                    赋值 (网站路径, .内容)
                    赋值 (默认首页, “index.htm;index.html;default.htm;default.html”)
                    1.置文本 (“正在运行”)
                    赋值 (.标题, “停止服务”)
                    未知支持库函数_0 (&等待进入, )
                    返回 ()
                .如果真结束
                
            .如果真结束
            
        .如果真结束
        
    .如果真结束
    赋值 (.标题, “启动服务”)
    信息框 (“启动服务失败”, 0, )
    web服务.关闭服务 ()
    
.如果结束


.子程序 等待进入, 空白型, , 
.局部变量 _连接判断, 逻辑型, , , 
.局部变量 _位置, 整数型, , , 
.局部变量 _句柄, 整数型, , , 
.局部变量 i, 整数型, , , 
.局部变量 _是否存在, 逻辑型, , , 
.局部变量 _客户IP, 文本型, , , 

赋值 (_连接判断, 真)
.判断循环首 (_连接判断)
    赋值 (_句柄, web服务.等待连接accept ())
    .如果 (大于 (_句柄, 0))
        赋值 (_是否存在, 假)
        赋值 (_客户IP, web服务.取客户IP (_句柄))
        .计次循环首 (取数组成员数 (w客户数组), i)
            .如果真 (等于 (w客户数组 [i], _客户IP))
                赋值 (_是否存在, 真)
                跳出循环 ()
            .如果真结束
            
        .计次循环尾 ()
        .如果真 (等于 (_是否存在, 假))
            加入成员 (w客户数组, _客户IP)
            赋值 (_位置, .插入表项 (_客户IP, , , , ))
            _位置.置标题 (1, 到文本 (取现行时间 ()))
             ' web超级列表框.置表项数值 (_位置, _句柄)
            
        .如果真结束
        未知支持库函数_0 (&接收数据, _句柄)
    .否则
        赋值 (_连接判断, 假)
        1.置文本 (“关闭”)
        web服务.关闭服务 ()
    .如果结束
    处理事件 ()
.判断循环尾 ()


.子程序 接收数据, 空白型, , 
.参数 _句柄, 整数型, , 

.局部变量 _接收判断, 逻辑型, , , 
.局部变量 _收到数据, 字节集, , , 
.局部变量 _断开客户, 逻辑型, , , 

赋值 (_接收判断, 真)
.判断循环首 (_接收判断)
    赋值 (_收到数据, web服务.收数据_recv (_句柄))
    .如果 (不等于 (_收到数据, {  }))
        处理客户数据 (_收到数据, _句柄)
        赋值 (_接收判断, 假)
    .否则
        删除断开列表 (_句柄)
        web服务.断开客户 (_句柄)
        赋值 (_接收判断, 假)
    .如果结束
    处理事件 ()
.判断循环尾 ()

.子程序 删除断开列表, 空白型, , 
.参数 _句柄, 整数型, , 

.局部变量 i, 整数型, , , 
.局部变量 _成员数, 整数型, , , 


.计次循环首 (取表项数 (), i)
    .如果真 (等于 (i.取表项数值 (), _句柄))
        未知支持库函数_3 (删除许可证)
        i.删除表项 ()
        未知支持库函数_4 (删除许可证)
        返回 ()
    .如果真结束
    
.计次循环尾 ()

.子程序 处理客户数据, 空白型, 公开, 返回文件路径
.参数 _封包, 字节集, , 
.参数 _句柄, 整数型, , 

.局部变量 _当前文件, 文本型, , , 
.局部变量 _当前位置, 整数型, , , 
.局部变量 _文件大小, 整数型, , , 
.局部变量 _文件句柄, 整数型, , , 
.局部变量 _文件数据, 字节集, , , 
.局部变量 _文件判断, 逻辑型, , , 
.局部变量 _位置, 整数型, , , 

赋值 (_当前文件, 格式化文件路径 (相加 (格式化目录路径 (网站路径), 从封包取文件名 (_封包))))
.如果真 (等于 (文件是否存在 (_当前文件), 假))
    赋值 (_当前文件, 取首页文件 (_当前文件, 默认首页))
    .如果真 (等于 (文件是否存在 (_当前文件), 假))
        web服务.断开客户 (_句柄)
        返回 ()
    .如果真结束
    
.如果真结束
赋值 (_文件句柄, 打开文件 (_当前文件, #读入, #无限制))
赋值 (_文件大小, 取文件长度 (_文件句柄))
赋值 (_当前位置, 0)
移到文件首 (_文件句柄)
赋值 (_文件判断, 真)
.判断循环首 (_文件判断)
    .如果 (小于或等于 (相减 (_文件大小, _当前位置), 数据尺寸))
        移动读写位置 (_文件句柄, #文件首, _当前位置)
        web服务.发数据_send (_句柄, 读入字节集 (_文件句柄, 相减 (_文件大小, _当前位置)))
        web服务.断开客户 (_句柄)
        返回 ()
    .否则
        移动读写位置 (_文件句柄, #文件首, _当前位置)
        web服务.发数据_send (_句柄, 读入字节集 (_文件句柄, 数据尺寸))
        赋值 (_当前位置, 相加 (_当前位置, 数据尺寸))
    .如果结束
    处理事件 ()
.判断循环尾 ()


.子程序 取首页文件, 文本型, , 
.参数 文件目录, 文本型, , 
.参数 默认首页, 文本型, , 

.局部变量 临时文本, 文本型, , , 
.局部变量 文件路径, 文本型, , , 
.局部变量 首页名称, 文本型, , "0", 
.局部变量 循环次数, 整数型, , , 

赋值 (临时文本, 格式化目录路径 (文件目录))
赋值 (首页名称, 分割文本 (默认首页, “;”, ))
.如果真 (小于 (取数组成员数 (首页名称), 1))
    加入成员 (首页名称, 默认首页)
.如果真结束
.计次循环首 (取数组成员数 (首页名称), 循环次数)
    赋值 (文件路径, 格式化文件路径 (相加 (临时文本, 首页名称 [循环次数])))
    .如果真 (文件是否存在 (文件路径))
        返回 (文件路径)
    .如果真结束
    
.计次循环尾 ()
返回 (“”)


.子程序 从封包取文件名, 文本型, 公开, 
.参数 数据封包, 字节集, 参考, 

.局部变量 RegEx, 未知类型0x50001, , , 
.局部变量 RegBack, 未知类型0x50002, , , 

RegEx.未知支持库函数_3 (“(GET )([^\n]*)( HTTP/1.)”, 假)
赋值 (RegBack, RegEx.未知支持库函数_7 (到文本 (数据封包), 1, ))
.如果真 (RegBack.未知支持库函数_10 ())
    RegEx.未知支持库函数_3 (“(POST )([^\n]*)(HTTP/1.)”, 假)
    赋值 (RegBack, RegEx.未知支持库函数_7 (到文本 (数据封包), 1, ))
    .如果真 (RegBack.未知支持库函数_10 ())
        返回 (“”)
    .如果真结束
    
.如果真结束
返回 (RegBack.未知支持库函数_12 (到文本 (数据封包), 2, ))


.子程序 格式化目录路径, 文本型, , 
.参数 目录, 文本型, , 

.局部变量 临时文本, 文本型, , , 

赋值 (临时文本, 子文本替换 (目录, “\”, “/”, , , 真))
.如果真 (不等于 (取文本右边 (临时文本, 1), “/”))
    赋值 (临时文本, 相加 (临时文本, “/”))
.如果真结束
返回 (临时文本)


.子程序 格式化文件路径, 文本型, , 
.参数 文件名, 文本型, , 

.局部变量 临时文本, 文本型, , , 

赋值 (临时文本, 子文本替换 (文件名, “\”, “/”, , , 真))
返回 (子文本替换 (临时文本, “//”, “/”, , , 真))


.子程序 __启动窗口_可否被关闭, 逻辑型, , 
置托盘图标 (_启动窗口., )
赋值 (_启动窗口., 假)
返回 (假)

.子程序 _退出程序_被选择, 空白型, , 
置托盘图标 ({  }, )
web服务.关闭服务 ()
ftp服务.关闭服务 ()
结束 ()

.子程序 __启动窗口_托盘事件, 空白型, , 
.参数 操作类型, 整数型, , 

.判断开始 (等于 (操作类型, 1))
    赋值 (_启动窗口., 真)
.判断 (等于 (操作类型, 3))
    弹出菜单 ()
.默认
    
.判断结束


.子程序 _按钮3_被单击, 空白型, , 
_退出程序_被选择 ()

.子程序 _F启动按钮_被单击, 空白型, , 
.如果 (等于 (.标题, “停止服务”))
    全部删除 ()
    ftp服务.关闭服务 ()
    3.置文本 (“关闭”)
    赋值 (.标题, “启动服务”)
.否则
    .如果真 (ftp服务.初始化socket ())
        .如果真 (ftp服务.创建socket (假))
            .如果真 (ftp服务.绑定bind (到整数 (.内容), ))
                .如果真 (ftp服务.监听listen (200))
                    赋值 (FTP路径, .内容)
                    赋值 (FTP用户, .内容)
                    赋值 (FTP密码, .内容)
                    .如果真 (.选中)
                        赋值 (匿名登陆, 真)
                    .如果真结束
                    3.置文本 (“正在运行”)
                    赋值 (.标题, “停止服务”)
                    未知支持库函数_0 (&F等待进入, )
                    返回 ()
                .如果真结束
                
            .如果真结束
            
        .如果真结束
        
    .如果真结束
    赋值 (.标题, “启动服务”)
    web服务.关闭服务 ()
    
.如果结束


.子程序 F等待进入, 空白型, , 
.局部变量 _连接判断, 逻辑型, , , 
.局部变量 _位置, 整数型, , , 
.局部变量 _句柄, 整数型, , , 
.局部变量 i, 整数型, , , 
.局部变量 _是否存在, 逻辑型, , , 
.局部变量 _客户IP, 文本型, , , 

赋值 (_连接判断, 真)
.判断循环首 (_连接判断)
    赋值 (_句柄, ftp服务.等待连接accept ())
    .如果 (大于 (_句柄, 0))
        ftp服务.发数据_send (_句柄, 到字节集 (相加 (“220 ”, #换行符)))
         ' _是否存在 ＝ 假
        赋值 (_客户IP, ftp服务.取客户IP (_句柄))
         ' .计次循环首 (取数组成员数 (f客户数组), i)
             ' .如果真 (等于 (f客户数组 [i], _客户IP))
                 ' _是否存在 ＝ 真
                 ' 跳出循环 ()
            .如果真结束
            
         ' .计次循环尾 ()
         ' .如果真 (等于 (_是否存在, 假))
             ' 加入成员 (f客户数组, _客户IP)
            赋值 (_位置, .插入表项 (_客户IP, , , , ))
            _位置.置标题 (1, 到文本 (取现行时间 ()))
             ' web超级列表框.置表项数值 (_位置, _句柄)
            
        .如果真结束
        未知支持库函数_0 (&F接收数据, _句柄)
    .否则
        赋值 (_连接判断, 假)
        1.置文本 (“关闭”)
        ftp服务.关闭服务 ()
    .如果结束
    处理事件 ()
.判断循环尾 ()


.子程序 F接收数据, 空白型, , 
.参数 _句柄, 整数型, , 

.局部变量 _接收判断, 逻辑型, , , 
.局部变量 _收到数据, 字节集, , , 
.局部变量 _断开客户, 逻辑型, , , 

赋值 (_接收判断, 真)
.判断循环首 (_接收判断)
    赋值 (_收到数据, ftp服务.收数据_recv (_句柄))
    .如果 (不等于 (_收到数据, {  }))
        FTP处理数据 (_收到数据, _句柄)
        输出调试文本 (到文本 (_收到数据))
    .否则
        删除断开列表 (_句柄)
        ftp服务.断开客户 (_句柄)
        赋值 (_接收判断, 假)
    .如果结束
    处理事件 ()
.判断循环尾 ()

.子程序 FTP处理数据, 空白型, , 
.参数 _数据, 字节集, , 
.参数 _句柄, 整数型, , 

.局部变量 命令文本, 文本型, , , 
.局部变量 _文件号, 整数型, , , 
.局部变量 _本机信息, 文本型, , "0", 
.局部变量 _本机IP, 文本型, , , 

赋值 (命令文本, 到小写 (到文本 (_数据)))
赋值 (命令文本, 子文本替换 (命令文本, #换行符, , , , 真))
.判断开始 (等于 (取文本左边 (命令文本, 4), “user”)) ' 用户名
    .如果 (等于 (取文本右边 (命令文本, 相减 (取文本长度 (命令文本), 5)), “anonymous”))
        .如果 (匿名登陆)
            ftp服务.发数据_send (_句柄, 到字节集 (相加 (“331 ”, #换行符)))
            返回 ()
        .否则
            ftp服务.发数据_send (_句柄, 到字节集 (相加 (“332 ”, #换行符)))
            返回 ()
        .如果结束
        
    .否则
        .如果真 (验证登陆 (命令文本))
            ftp服务.发数据_send (_句柄, 到字节集 (相加 (“331 ”, #换行符)))
            返回 ()
        .如果真结束
        ftp服务.发数据_send (_句柄, 到字节集 (相加 (“530 ”, #换行符)))
        返回 ()
        
    .如果结束
    
.判断 (等于 (取文本左边 (命令文本, 4), “pass”)) ' 密码，这里采用匿名的方式登陆
    .如果 (匿名登陆)
        ftp服务.发数据_send (_句柄, 到字节集 (相加 (“230 ”, #换行符)))
        返回 ()
    .否则
        .如果真 (验证登陆 (命令文本))
            ftp服务.发数据_send (_句柄, 到字节集 (相加 (“230 ”, #换行符)))
            返回 ()
        .如果真结束
        ftp服务.发数据_send (_句柄, 到字节集 (相加 (“530 ”, #换行符)))
        返回 ()
        
    .如果结束
    
.判断 (等于 (命令文本, “opts utf8 on”)) ' 路径采用UTF8编码
    ftp服务.发数据_send (_句柄, 到字节集 (相加 (“503 ”, #换行符))) ' 暂时不支持utf8编码
    返回 ()
.判断 (等于 (命令文本, “pwd”))
    ftp服务.发数据_send (_句柄, 到字节集 (相加 (“257 ”, #引号, FTP目录, #引号, #换行符)))
.判断 (等于 (命令文本, “type a”))
    .如果真 (不等于 (_文件号, 0))
        关闭文件 (_文件号)
        赋值 (_文件号, 0)
    .如果真结束
    ftp服务.发数据_send (_句柄, 到字节集 (相加 (“200 ”, #换行符)))
.判断 (等于 (取文本左边 (命令文本, 3), “cwd”)) ' 改变工作目录
    .如果 (大于 (取文本长度 (命令文本), 5))
        ftp服务.发数据_send (_句柄, 到字节集 (相加 (“550 目前还不支持改变目录！”, #换行符)))
    .否则
        ftp服务.发数据_send (_句柄, 到字节集 (相加 (“250 ”, #引号, FTP目录, #引号, #换行符)))
    .如果结束
    
.判断 (等于 (命令文本, “pasv”)) ' 采用被动方式连接
    赋值 (_本机信息, 未知支持库函数_17 ())
    .如果真 (大于 (取数组成员数 (_本机信息), 0))
        赋值 (_本机IP, _本机信息 [1])
    .如果真结束
    ftp服务.发数据_send (_句柄, 到字节集 (相加 (“227 Entering Passive Mode (”, _本机IP, “21”, “)”, #换行符)))
.默认
    
.判断结束



.子程序 验证登陆, 逻辑型, , 
.参数 _文本, 文本型, , 

.局部变量 _接收数据, 文本型, , , 

赋值 (_接收数据, 取文本右边 (_文本, 相减 (取文本长度 (_文本), 5)))
.如果 (等于 (取文本左边 (_文本, 4), “USER”))
    .如果真 (等于 (_接收数据, FTP用户))
        返回 (真)
    .如果真结束
    返回 (假)
    
.否则
    .如果真 (等于 (_接收数据, FTP密码))
        返回 (真)
    .如果真结束
    返回 (假)
    
.如果结束


.子程序 __启动窗口_将被销毁, 空白型, , 
web服务.关闭服务 ()
ftp服务.关闭服务 ()


.类模块 socket服务端, , , 

.子程序 初始化socket, 逻辑型, , 初始化socketDLL动态链接库


.子程序 创建socket, 逻辑型, , 创建套接字
.参数 _是否为UDP协议, 逻辑型, 可空, 默认为TCP协议



.子程序 绑定bind, 逻辑型, , 将创建好的套接字绑定,用于与本地地址相连,客户端无须绑定
.参数 _端口, 整数型, , 服务器使用的端口
.参数 _IP地址, 文本型, 可空, 多网卡绑定指定IP



.子程序 取服务句柄, 整数型, , 


.子程序 监听listen, 逻辑型, , 通知TCP服务准备好,监听前要绑定
.参数 _连接数, 整数型, , 标示连接队列的最大长度



.子程序 等待连接accept, 整数型, , 如为阻塞连接，必须在线程里启动本子程序,返回连接客户端句柄,-1为失败


.子程序 收数据_recv, 字节集, , 返回收到的数据，断开连接或失败返回空字节集
.参数 _句柄, 整数型, , 



.子程序 收UDP数据_recvfrom, 字节集, , 返回收到的数据，断开连接或失败返回空字节集
.参数 _句柄, 整数型, , 



.子程序 发UDP数据_sendTo, 逻辑型, , 
.参数 _句柄, 整数型, , 
.参数 _IP地址, 文本型, , 
.参数 _端口, 整数型, , 
.参数 _数据, 字节集, , 



.子程序 发数据_send, 空白型, , 
.参数 _客户端句柄, 整数型, , 
.参数 _数据, 字节集, , 



.子程序 取客户IP, 文本型, , 返回取到的IP，失败返回空
.参数 _客户端句柄, 整数型, , 



.子程序 取客户端口, 整数型, , 返回取到的端口，失败返回空
.参数 _客户端句柄, 整数型, , 



.子程序 断开客户, 空白型, , 
.参数 _客户端句柄, 整数型, , 



.子程序 关闭服务, 空白型, , 


.类模块 socket客户端, , , 

.子程序 初始化socket, 逻辑型, , 初始化socketDLL动态链接库


.子程序 创建socket, 逻辑型, , 创建套接字
.参数 _是否为UDP协议, 逻辑型, 可空, 默认为TCP协议



.子程序 连接服务_connect, 逻辑型, , 
.参数 _IP地址, 文本型, , 
.参数 _端口, 整数型, , 



.子程序 收数据_recv, 字节集, , 返回收到的数据，断开连接或失败返回空字节集
.参数 _句柄, 整数型, , 



.子程序 发数据_send, 空白型, , 
.参数 _数据, 字节集, , 



.子程序 收UDP数据_recvfrom, 字节集, , 返回收到的数据，断开连接或失败返回空字节集
.参数 _句柄, 整数型, , 



.子程序 发UDP数据_sendTo, 逻辑型, , 
.参数 _句柄, 整数型, , 
.参数 _IP地址, 文本型, , 
.参数 _端口, 整数型, , 
.参数 _数据, 字节集, , 



.子程序 断开连接, 空白型, , 


.程序集 __HIDDEN_TEMP_MOD__, , , 

.子程序 启动_服务, 逻辑型, , 初始化socketDLL动态链接库
.参数 _端口, 整数型, , 服务器使用的端口
.参数 _IP地址, 文本型, 可空, 多网卡绑定指定IP



.子程序 等待客户进入accept, 整数型, , 如为阻塞连接，必须在线程里启动本子程序,返回客户端句柄


.子程序 收数据_recv, 字节集, , 返回收到的数据，断开连接返回空字节集,想用非阻塞试请在此之前使用WSAAsyncSelect
.参数 _句柄, 整数型, , 



.子程序 断开客户, 空白型, , 
.参数 _客户端句柄, 整数型, , 



.子程序 关闭服务, 空白型, , 


.子程序 取客户IP, 文本型, , 返回取到的IP，失败返回空
.参数 _客户端句柄, 整数型, , 



.子程序 取客户端口, 整数型, , 返回取到的端口，失败返回空
.参数 _客户端句柄, 整数型, , 



.子程序 取本机IP, 文本型, , 



 ' 不属于任何一个程序集、类模块的函数：
