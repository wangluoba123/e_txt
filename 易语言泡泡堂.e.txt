 ' 文件类型：Windows窗口程序

 ' 程序名称：Demo
 ' 程序描述：Demo
 ' 程序作者：本源码来自易语言资源网(www.5A5X.com)
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：             易语言资源网注意事项
--============   www.5A5X.com  =============--
* 易语言资源网为易语言官方站、易语言官方论坛提供辅助资源站；本易语言资源网( www.5A5X.com)所有软件和资料均为软件作者提供和网友推荐发布而来，其版权归该软件和程序源码的合法拥有者所有，本站易语言资源网整理收集仅供易语言用户学习和易语言技术研究探讨使用，不得用于任何商业用途。如果由于以上原因造成的版权纠纷本站概不负责！
* 本站资源未经许可,任何网站不得非法盗链及抄袭本站资源；如引用，请注明来自易语言资源网，谢谢合作！
--============   www.5A5X.com  =============--
 ' 版本号：1.0
 ' 创建号：0.0



.常量 引擎风格_全屏模式, "1", 隐藏, 
.常量 引擎风格_隐藏鼠标, "2", 隐藏, 
.常量 引擎风格_反走样_点, "4", 隐藏, 开启反走样点后，对于像素点的描绘将更平滑细腻
.常量 引擎风格_反走样_线, "8", 隐藏, 开启反走样线后，对于线条的描绘将更平滑细腻
.常量 引擎风格_反走样_面, "16", 隐藏, 开启反走样面后，对于矩形的描绘将更平滑细腻
.常量 引擎风格_反走样_压缩纹理, "32", 隐藏, 开启反走样压缩纹理后，对于压缩纹理的描绘将更平滑细腻
.常量 引擎事件_按键按下, "1", 隐藏, 参数一：按键代码（整数型）
.常量 引擎事件_按键弹起, "2", 隐藏, 参数一：按键代码（整数型）
.常量 引擎事件_鼠标滚轮事件, "3", 隐藏, 参数一：转动量（整数型）
.常量 引擎事件_获得焦点, "4", 隐藏, 
.常量 引擎事件_失去焦点, "5", 隐藏, 
.常量 引擎事件_大小被改变, "6", 隐藏, 
.常量 引擎事件_将被销毁, "7", 隐藏, 
.常量 引擎事件_预处理资源动画, "8", 隐藏, 参数一：资源数据指针（整数型），参数二：资源数据长度（整数型），参数三：资源数据标志（整数型 参考），返回值：FJ_纹理结构的指针（整数型）
.常量 鼠标左键, "1", 隐藏, 
.常量 鼠标右键, "2", 隐藏, 
.常量 鼠标中键, "4", 隐藏, 
.常量 编辑框事件_内容被改变, "1", 隐藏, 参数一：现行内容（文本型），参数三：是否为删除内容（逻辑型）
.常量 编辑框事件_光标位置被移动, "2", 隐藏, 参数一：新光标位置（整数型），参数二：旧光标位置（整数型），参数三：起始选择位置（整数型），参数三：旧起始选择位置（整数型）
.常量 编码类型_RGB, "6407", 隐藏, 
.常量 编码类型_BGR, "32992", 隐藏, 
.常量 编码类型_RGBA, "6408", 隐藏, 
.常量 编码类型_BGRA, "32993", 隐藏, 
.常量 编码类型_Alpha, "6406", 隐藏, 
.常量 编码类型_压缩_RGB, "34029", 隐藏, 
.常量 编码类型_压缩_RGBA, "34030", 隐藏, 
.常量 编码标志_DXT1_RGB, "33776", 隐藏, 
.常量 编码标志_DXT1_RGBA, "33777", 隐藏, 
.常量 编码标志_DXT3, "33778", 隐藏, 
.常量 编码标志_DXT5, "33779", 隐藏, 
.常量 压缩标志_DXT1, "1", 隐藏, 
.常量 压缩标志_DXT3, "2", 隐藏, 
.常量 压缩标志_DXT5, "4", 隐藏, 
.常量 资源动画标志_RGBA, "0", 隐藏, 
.常量 资源动画标志_DXT1_RGBA, "1", 隐藏, 
.常量 资源动画标志_RGB, "2", 隐藏, 
.常量 资源动画标志_DXT3, "3", 隐藏, 
.常量 资源动画标志_DXT5, "4", 隐藏, 
.常量 资源动画标志_BGRA, "5", 隐藏, 
.常量 资源动画标志_BGR, "6", 隐藏, 
.常量 资源动画标志_自定义, "7", 隐藏, 
.常量 纹理信息_宽度, "4096", 隐藏, 
.常量 纹理信息_高度, "4097", 隐藏, 
.常量 纹理信息_位深度, "32881", 隐藏, 
.常量 纹理信息_数据大小, "34464", 隐藏, 
.常量 纹理信息_INTERNAL_FORMAT, "4099", 隐藏, 
.常量 纹理信息_BORDER, "4101", 隐藏, 
.常量 混合模式_源色源色, "50332416", 隐藏, 
.常量 混合模式_源色源色反, "50397952", 隐藏, 
.常量 混合模式_源色源通, "50463488", 隐藏, 
.常量 混合模式_源色源通反, "50529024", 隐藏, 
.常量 混合模式_源色目通, "50594560", 隐藏, 
.常量 混合模式_源色目通反, "50660096", 隐藏, 
.常量 混合模式_源色目色, "50725632", 隐藏, 
.常量 混合模式_源色目色反, "50791168", 隐藏, 
.常量 混合模式_源色反源色, "50332417", 隐藏, 
.常量 混合模式_源色反源色反, "50397953", 隐藏, 
.常量 混合模式_源色反源通, "50463489", 隐藏, 
.常量 混合模式_源色反源通反, "50529025", 隐藏, 
.常量 混合模式_源色反目通, "50594561", 隐藏, 
.常量 混合模式_源色反目通反, "50660097", 隐藏, 
.常量 混合模式_源色反目色, "50725633", 隐藏, 
.常量 混合模式_源色反目色反, "50791169", 隐藏, 
.常量 混合模式_源通源色, "50332418", 隐藏, 
.常量 混合模式_源通源色反, "50397954", 隐藏, 
.常量 混合模式_源通源通, "50463490", 隐藏, 
.常量 混合模式_源通源通反, "50529026", 隐藏, 
.常量 混合模式_源通目通, "50594562", 隐藏, 
.常量 混合模式_源通目通反, "50660098", 隐藏, 
.常量 混合模式_源通目色, "50725634", 隐藏, 
.常量 混合模式_源通目色反, "50791170", 隐藏, 
.常量 混合模式_源通反源色, "50332419", 隐藏, 
.常量 混合模式_源通反源色反, "50397955", 隐藏, 
.常量 混合模式_源通反源通, "50463491", 隐藏, 
.常量 混合模式_源通反源通反, "50529027", 隐藏, 
.常量 混合模式_源通反目通, "50594563", 隐藏, 
.常量 混合模式_源通反目通反, "50660099", 隐藏, 
.常量 混合模式_源通反目色, "50725635", 隐藏, 
.常量 混合模式_源通反目色反, "50791171", 隐藏, 
.常量 混合模式_目通源色, "50332420", 隐藏, 
.常量 混合模式_目通源色反, "50397956", 隐藏, 
.常量 混合模式_目通源通, "50463492", 隐藏, 
.常量 混合模式_目通源通反, "50529028", 隐藏, 
.常量 混合模式_目通目通, "50594564", 隐藏, 
.常量 混合模式_目通目通反, "50660100", 隐藏, 
.常量 混合模式_目通目色, "50725636", 隐藏, 
.常量 混合模式_目通目色反, "50791172", 隐藏, 
.常量 混合模式_目通反源色, "50332421", 隐藏, 
.常量 混合模式_目通反源色反, "50397957", 隐藏, 
.常量 混合模式_目通反源通, "50463493", 隐藏, 
.常量 混合模式_目通反源通反, "50529029", 隐藏, 
.常量 混合模式_目通反目通, "50594565", 隐藏, 
.常量 混合模式_目通反目通反, "50660101", 隐藏, 
.常量 混合模式_目通反目色, "50725637", 隐藏, 
.常量 混合模式_目通反目色反, "50791173", 隐藏, 
.常量 混合模式_目色源色, "50332422", 隐藏, 
.常量 混合模式_目色源色反, "50397958", 隐藏, 
.常量 混合模式_目色源通, "50463494", 隐藏, 
.常量 混合模式_目色源通反, "50529030", 隐藏, 
.常量 混合模式_目色目通, "50594566", 隐藏, 
.常量 混合模式_目色目通反, "50660102", 隐藏, 
.常量 混合模式_目色目色, "50725638", 隐藏, 
.常量 混合模式_目色目色反, "50791174", 隐藏, 
.常量 混合模式_目色反源色, "50332423", 隐藏, 
.常量 混合模式_目色反源色反, "50397959", 隐藏, 
.常量 混合模式_目色反源通, "50463495", 隐藏, 
.常量 混合模式_目色反源通反, "50529031", 隐藏, 
.常量 混合模式_目色反目通, "50594567", 隐藏, 
.常量 混合模式_目色反目通反, "50660103", 隐藏, 
.常量 混合模式_目色反目色, "50725639", 隐藏, 
.常量 混合模式_目色反目色反, "50791175", 隐藏, 
.常量 常用混合模式_默认, "50529026", 隐藏, 等效于混合模式_源通源通反
.常量 常用混合模式_高光, "50594562", 隐藏, 等效于混合模式_源通目通
.常量 文字对齐方式_左顶, "9", 隐藏, 
.常量 文字对齐方式_左中, "17", 隐藏, 
.常量 文字对齐方式_左底, "33", 隐藏, 
.常量 文字对齐方式_中顶, "10", 隐藏, 
.常量 文字对齐方式_中中, "18", 隐藏, 
.常量 文字对齐方式_中底, "34", 隐藏, 
.常量 文字对齐方式_右顶, "12", 隐藏, 
.常量 文字对齐方式_右中, "20", 隐藏, 
.常量 文字对齐方式_右底, "36", 隐藏, 
.常量 功能_混合, "3042", 隐藏, 
.常量 功能_Alpha通道, "3008", 隐藏, 
.常量 功能_色相, "33880", 隐藏, 
.常量 功能_二维纹理, "3553", 隐藏, 
.常量 功能_光滑点, "2832", 隐藏, 
.常量 功能_光滑线, "2848", 隐藏, 
.常量 功能_光滑面, "2881", 隐藏, 
.常量 播放状态_停止, "0", 隐藏, 
.常量 播放状态_播放, "1", 隐藏, 
.常量 播放状态_失速, "2", 隐藏, 
.常量 播放状态_暂停, "3", 隐藏, 
.常量 标题画面, "0", , 
.常量 地图画面, "1", , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 5 0 系统核心支持库



 ' 所需要的模块
 ' Fijoy飞游OpenGL引擎 G:\Fijoy\FijoyEngine.ec


数据类型 泡泡属性, , 
    .成员 位置, FJ_位置, , , 
    .成员 时间, 整数型, , , 

数据类型 FJ_颜色, 公开, 
    .成员 r, 字节型, , , 
    .成员 g, 字节型, , , 
    .成员 b, 字节型, , , 
    .成员 a, 字节型, , , 

数据类型 FJ_点, 公开, 
    .成员 x, 小数型, , , 
    .成员 y, 小数型, , , 

数据类型 FJ_矩形, 公开, 
    .成员 x, 整数型, , , 
    .成员 y, 整数型, , , 
    .成员 w, 整数型, , , 
    .成员 h, 整数型, , , 

数据类型 FJ_位置, 公开, 
    .成员 x, 整数型, , , 
    .成员 y, 整数型, , , 

数据类型 FJ_纹理, 公开, 
    .成员 纹理指针, 整数型, , , 
    .成员 宽度, 整数型, , , 
    .成员 高度, 整数型, , , 

数据类型 FJ_色相, 公开, 
    .成员 r, 小数型, , , 
    .成员 g, 小数型, , , 
    .成员 b, 小数型, , , 

.全局变量 鼠标位置, FJ_位置, , , 
.全局变量 文字, FJ_纹理字体, , , 
.全局变量 资源包, FJ_资源包, , , 
.全局变量 当前画面, 整数型, , , 

.程序集 程序集1, , , 

.程序集变量 子弹图片, FJ_资源_动画, , , 
.程序集变量 背景图片, FJ_资源_动画, , , 
.子程序 _启动子程序, 整数型, , 请在本子程序中放置动态链接库初始化代码
引擎_创建 (“易语言泡泡堂”, , , 640, 480)
.如果真 (等于 (资源包.创建 (相加 (取当前目录 (), “\data.fpk”), “我是密码”), 假))
    信息框 (“游戏目录下缺少资源包data.fpk，请确认您已经解压整个游戏再运行。”, #错误图标, “易语言泡泡堂”)
    返回 (0)
.如果真结束
文字.创建 (16, , , , , , 800)
文字.置启用渐变色 (真)
 ' 本源码来自易语言资源网(www.5A5X.com)
引擎_显示Fijoy片头 () ' 如果您支持Fijoy，请发布时保留此行
初始化标题画面 ()
引擎_启动循环 (到整数 (&消息循环))
返回 (0) ' 返回值被忽略。

.子程序 消息循环, 空白型, , 
引擎_清屏 ()
赋值 (鼠标位置, 引擎_取鼠标位置 ())
.判断开始 (等于 (当前画面, #标题画面))
    渲染标题画面 ()
.判断 (等于 (当前画面, #地图画面))
    渲染地图画面 ()
.默认
    ' 本源码来自易语言资源网(www.5A5X.com)
.判断结束
引擎_更新屏幕 ()

.类模块 FJ_编辑框, , , 

.子程序 创建, 逻辑型, , 
.参数 字体指针, 整数型, , 请用“公共_取矢量字体指针”、“公共_取点阵字体指针”或“公共_取纹理字体指针”获得，并确保此对象已经创建，否则将渲染文字失败
.参数 编辑框宽高, FJ_点, , 
.参数 是否自动响应鼠标, 逻辑型, 可空, 
.参数 是否允许多行, 逻辑型, 可空, 
.参数 是否为密码模式, 逻辑型, 可空, 
.参数 是否只允许输入数值, 逻辑型, 可空, 
.参数 光标的宽度, 小数型, 可空, 默认为1
.参数 最大输入长度, 整数型, 可空, 小于等于0为无限
.参数 光标闪烁毫秒数, 整数型, 可空, 默认为500，该值小于等于0时不会闪烁
.参数 选中背景色, 整数型, 可空, 默认为R：32，G：128，B：255，A：255
.参数 光标的颜色, 整数型, 可空, 默认为R：0，G：0，B：0，A：255



.子程序 是否已创建, 逻辑型, , 


.子程序 置焦点, 空白型, , 
.参数 焦点值, 逻辑型, , 



.子程序 取焦点, 逻辑型, , 


.子程序 取内容, 文本型, , 


.子程序 置内容, 空白型, , 使用该指令后光标自动移动到最后，此指令不会响应挂接事件
.参数 新内容, 文本型, , 



.子程序 加入内容, 空白型, , 在当前光标处加入内容，如果光标有选中文字，则替换文本
.参数 欲加入的内容, 文本型, , 



.子程序 置光标位置, 空白型, , 可以直接使用-1移动到文本末尾
.参数 新光标位置, 整数型, , 
.参数 起始选择位置, 整数型, 可空, 若此参数不为空且不等于光标位置，则会选中从起始选择位置到光标位置的文本
.参数 若光标位于双字符中间则后移, 逻辑型, 可空, 为真时，若光标位于双字符中间则后移，否则若光标位于双字符中间则前移



.子程序 取光标位置, 整数型, , 


.子程序 取起始选中位置, 整数型, , 


.子程序 取选中文本, 文本型, , 


.子程序 显示, 空白型, , 
.参数 显示坐标, FJ_点, , 
.参数 显示颜色, 整数型, , 



.子程序 挂接事件, 空白型, , 
.参数 挂接事件编号, 整数型, , 请使用“编辑框事件_”开头的常量，关于函数内容请详细参阅常量说明
.参数 子程序指针, 整数型, , 



.子程序 销毁, 逻辑型, , 


.子程序 碰撞检测, 逻辑型, , 
.参数 点, FJ_点, , 



.子程序 置光标宽度, 空白型, , 
.参数 光标的宽度, 小数型, , 



.子程序 取光标宽度, 小数型, , 


.子程序 置选中文字背景色, 空白型, , 
.参数 颜色值, 整数型, , 



.子程序 取选中文字背景色, 整数型, , 


.子程序 置光标颜色, 空白型, , 
.参数 颜色值, 整数型, , 



.子程序 取光标颜色, 整数型, , 


.子程序 置光标闪烁毫秒数, 空白型, , 
.参数 光标闪烁毫秒数, 整数型, , 



.子程序 取光标闪烁毫秒数, 整数型, , 


.子程序 取指针, 整数型, , 


.子程序 置指针, 空白型, , 
.参数 指针, 整数型, , 



.子程序 退格, 空白型, , 清除当前光标前的一个字符


.子程序 删除, 空白型, , 清除当前光标后的一个字符


.子程序 是否允许多行, 逻辑型, , 


.类模块 FJ_显示列表, , , 纯静态显示类。运用显示列表把显示的内容加载到缓存中的显示技术，显示效率高。使用这种方式显示可以把显示效率提高几百倍甚至几千倍。

.子程序 开始录制, 逻辑型, , 
.参数 是否立即执行, 逻辑型, , 



.子程序 结束录制, 逻辑型, , 


.子程序 是否已创建, 逻辑型, , 


.子程序 显示, 逻辑型, , 


.子程序 销毁, 逻辑型, , 


.子程序 取指针, 整数型, , 


.类模块 FJ_精灵, , , 给不需要频繁变换的纹理一个提高效率的类

.子程序 创建, 逻辑型, , 
.参数 纹理指针, FJ_纹理, , 



.子程序 置坐标, 空白型, , 
.参数 坐标, FJ_点, , 



.子程序 取坐标, FJ_点, , 


.子程序 置纹理, 空白型, , 
.参数 纹理指针, FJ_纹理, , 



.子程序 取纹理, FJ_纹理, , 


.子程序 置缩放比例, 空白型, , 缩放比例只对于普通的“显示”方法才有效，“显示_拉伸”则不根据缩放比例，直接根据四个顶点定位
.参数 缩放比例, FJ_点, , 



.子程序 取缩放比例, FJ_点, , 


.子程序 置渲染色, 空白型, , 
.参数 渲染色, 整数型, , 



.子程序 取渲染色, 整数型, , 


.子程序 置旋转角度, 空白型, , 
.参数 旋转角度, 小数型, , 



.子程序 取旋转角度, 小数型, , 


.子程序 置混合模式, 空白型, , 
.参数 混合模式, 整数型, , 请用“混合模式”或“常用混合模式”开头的常量



.子程序 取混合模式, 整数型, , 


.子程序 显示, 逻辑型, , 
.参数 渲染坐标, FJ_点, 可空, 
.参数 渲染的颜色, 整数型, 可空, 



.子程序 销毁, 逻辑型, , 


.子程序 置渲染区域, 空白型, , 
.参数 渲染区域, FJ_矩形, , 



.子程序 取渲染区域, FJ_矩形, , 


.子程序 是否已创建, 逻辑型, , 


.子程序 取宽度, 整数型, , 


.子程序 取高度, 整数型, , 


.子程序 碰撞检测, 逻辑型, , 
.参数 点, FJ_点, , 



.子程序 置色相, 空白型, , 
.参数 欲改变的色相, FJ_色相, , 



.子程序 取辅助色, FJ_色相, , 


.类模块 FJ_资源包, , , 

.子程序 取资源动画头信息, 逻辑型, , 
.参数 资源序列, 整数型, , 
.参数 横帧数, 字节型, 参考, 
.参数 纵帧数, 字节型, 参考, 
.参数 X坐标偏移, 短整数型, 参考, 
.参数 Y坐标偏移, 短整数型, 参考, 
.参数 单帧纹理宽度, 短整数型, 参考, 
.参数 单帧纹理高度, 短整数型, 参考, 



.子程序 取单帧资源数据, 整数型, , 
.参数 资源序列, 整数型, , 
.参数 要提取的帧序列, 整数型, , 
.参数 返回数据, 字节集, 参考, 



.子程序 创建, 逻辑型, , 
.参数 资源包路径, 文本型, , 
.参数 密码, 文本型, , 



.子程序 读取, 字节集, , 
.参数 资源序列, 整数型, , 



.子程序 销毁, 逻辑型, , 


.子程序 是否已创建, 逻辑型, , 


.子程序 取文件数量, 整数型, , 


.子程序 取指针, 整数型, , 


.子程序 置指针, 空白型, , 
.参数 指针, 整数型, , 



.子程序 取资源数据大小, 整数型, , 
.参数 资源序列, 整数型, , 



.类模块 FJ_资源_动画, , , 

.子程序 创建, 逻辑型, , 
.参数 资源包指针, 整数型, , 
.参数 资源序列, 整数型, , 
.参数 是否自动偏移坐标, 逻辑型, 可空, 如果为真，则显示时自动偏移打包时的坐标偏移数据，否则可以自行处理
.参数 帧率, 整数型, 可空, 默认为8，FPS，每秒帧数递增量，如果只有一帧，则此项无效
.参数 是否需要精确像素的碰撞检测, 逻辑型, 可空, 如果为真，则创建纹理时把Alpha通道缩到1bit保存一份，在不影响效率的同时不占用内存



.子程序 销毁, 逻辑型, , 
.参数 是否保留纹理, 逻辑型, 可空, 



.子程序 置帧率, 空白型, , 
.参数 帧率, 整数型, , 



.子程序 取帧率, 整数型, , 


.子程序 置当前帧, 空白型, , 
.参数 当前帧, 整数型, , 



.子程序 取当前帧, 整数型, , 


.子程序 置坐标, 空白型, , 
.参数 坐标, FJ_点, , 



.子程序 取坐标, FJ_点, , 


.子程序 置纹理, 空白型, , FJ_资源_动画不只一帧的纹理，置纹理时必须指定给哪一帧置，置纹理后立即启用新纹理，慎用
.参数 纹理指针, FJ_纹理, , 
.参数 欲置纹理的帧数, 整数型, 可空, 



.子程序 取纹理, FJ_纹理, , 
.参数 欲取纹理的帧数, 整数型, 可空, 



.子程序 置全部纹理, 空白型, , 
.参数 纹理指针, FJ_纹理, 数组, 



.子程序 取全部纹理, 空白型, , 
.参数 纹理指针, FJ_纹理, 参考 数组, 



.子程序 释放全部纹理, 空白型, , 


.子程序 置缩放比例, 空白型, , 缩放比例只对于普通的“显示”方法才有效，“显示_拉伸”则不根据缩放比例，直接根据四个顶点定位
.参数 缩放比例, FJ_点, , 



.子程序 取缩放比例, FJ_点, , 


.子程序 置渲染色, 空白型, , 
.参数 渲染色, 整数型, , 



.子程序 取渲染色, 整数型, , 


.子程序 置旋转角度, 空白型, , 
.参数 旋转角度, 小数型, , 



.子程序 取旋转角度, 小数型, , 


.子程序 显示, 空白型, , 
.参数 渲染坐标, FJ_点, 可空, 
.参数 渲染的颜色, 整数型, 可空, 



.子程序 更新, 空白型, , 


.子程序 取横帧数, 整数型, , 


.子程序 取纵帧数, 整数型, , 


.子程序 取坐标偏移, FJ_点, , 


.子程序 取单帧宽度, 整数型, , 


.子程序 取单帧高度, 整数型, , 


.子程序 是否已创建, 逻辑型, , 


.子程序 碰撞检测, 逻辑型, , 
.参数 点, FJ_点, , 



.子程序 置混合模式, 空白型, , 
.参数 混合模式, 整数型, , 请用“混合模式”或“常用混合模式”开头的常量



.子程序 取混合模式, 整数型, , 


.子程序 预载入帧, 空白型, , 
.参数 欲预载入的帧数, 整数型, 可空, 



.子程序 置色相, 空白型, , 
.参数 辅助色, FJ_色相, , 



.子程序 取色相, FJ_色相, , 


.子程序 置渲染区域, 空白型, , 
.参数 渲染区域, FJ_矩形, , 



.子程序 取渲染区域, FJ_矩形, , 


.类模块 FJ_资源_按钮, , , 资源动画中，第一帧为正常状态，第二帧为点燃状态，第三帧为按下状态，第四帧为禁止状态，该类会自动根据帧数加载状态

.子程序 创建, 逻辑型, , 
.参数 资源包指针, 整数型, , 
.参数 资源序列, 整数型, , 
.参数 是否自动偏移坐标, 逻辑型, 可空, 如果为真，则显示时自动偏移打包时的坐标偏移数据，否则可以自行处理
.参数 是否需要精确像素的碰撞检测, 逻辑型, 可空, 如果为真，则创建纹理时把Alpha通道缩到1bit保存一份，在不影响效率的同时不占用内存



.子程序 销毁, 逻辑型, , 
.参数 是否保留纹理, 逻辑型, 可空, 



.子程序 显示, 空白型, , 
.参数 渲染坐标, FJ_点, 可空, 



.子程序 置禁止, 空白型, , 
.参数 是否禁止, 逻辑型, , 



.子程序 取禁止, 逻辑型, , 


.子程序 置坐标, 空白型, , 
.参数 坐标, FJ_点, , 



.子程序 取坐标, FJ_点, , 


.子程序 释放全部纹理, 空白型, , 


.子程序 置缩放比例, 空白型, , 缩放比例只对于普通的“显示”方法才有效，“显示_拉伸”则不根据缩放比例，直接根据四个顶点定位
.参数 缩放比例, FJ_点, , 



.子程序 取缩放比例, FJ_点, , 


.子程序 置渲染色, 空白型, , 
.参数 渲染色, 整数型, , 



.子程序 取渲染色, 整数型, , 


.子程序 置旋转角度, 空白型, , 
.参数 旋转角度, 小数型, , 



.子程序 取旋转角度, 小数型, , 


.子程序 取按下, 逻辑型, , 


.子程序 取弹起, 逻辑型, , 


.子程序 取状态, 逻辑型, , 


.子程序 取点燃, 逻辑型, , 


.子程序 是否已创建, 逻辑型, , 


.子程序 置混合模式, 空白型, , 
.参数 混合模式, 整数型, , 请用“混合模式”或“常用混合模式”开头的常量



.子程序 取混合模式, 整数型, , 


.子程序 取横帧数, 整数型, , 


.子程序 取纵帧数, 整数型, , 


.子程序 取坐标偏移, FJ_点, , 


.子程序 取单帧宽度, 整数型, , 


.子程序 取单帧高度, 整数型, , 


.子程序 置辅助色, 空白型, , 
.参数 辅助色, FJ_色相, , 



.子程序 取辅助色, FJ_色相, , 


.子程序 置渲染区域, 空白型, , 
.参数 渲染区域, FJ_矩形, , 



.子程序 取渲染区域, FJ_矩形, , 


.类模块 FJ_点阵字体, , , 

.子程序 创建, 逻辑型, , 
.参数 字体大小, 整数型, 可空, 
.参数 字体名, 文本型, 可空, 
.参数 旋转角度, 小数型, 可空, 
.参数 是否倾斜, 逻辑型, 可空, 
.参数 是否加下划线, 逻辑型, 可空, 
.参数 是否加删除线, 逻辑型, 可空, 
.参数 加粗值, 整数型, 可空, 越大字体越粗，0为不加粗，1000是最粗。默认加粗是700。
.参数 字体宽度, 整数型, 可空, 留空为Windows默认值，也可以自行调节设置得更宽或更窄



.子程序 是否已创建, 逻辑型, , 


.子程序 显示, 逻辑型, , 
.参数 文本内容, 文本型, , 
.参数 渲染坐标, FJ_点, , 
.参数 渲染颜色, 整数型, 可空, 



.子程序 销毁, 逻辑型, , 


.子程序 取宽度, 整数型, , 


.子程序 取高度, 整数型, , 


.子程序 取字体句柄, 整数型, , 


.子程序 取指针, 整数型, , 


.子程序 置指针, 空白型, , 
.参数 指针, 整数型, , 



.类模块 FJ_纹理字体, , , 

.子程序 创建, 逻辑型, , 
.参数 字体大小, 整数型, 可空, 
.参数 字体名, 文本型, 可空, 
.参数 旋转角度, 小数型, 可空, 
.参数 是否倾斜, 逻辑型, 可空, 
.参数 是否加下划线, 逻辑型, 可空, 
.参数 是否加删除线, 逻辑型, 可空, 
.参数 加粗值, 整数型, 可空, 越大字体越粗，0为不加粗，1000是最粗。默认加粗是700。
.参数 字体宽度, 整数型, 可空, 留空为Windows默认值，也可以自行调节设置得更宽或更窄



.子程序 是否已创建, 逻辑型, , 


.子程序 显示, 逻辑型, , 
.参数 文本内容, 文本型, , 
.参数 渲染坐标, FJ_点, , 
.参数 渲染颜色, 整数型, 可空, 



.子程序 销毁, 逻辑型, , 


.子程序 取宽度, 整数型, , 


.子程序 取高度, 整数型, , 


.子程序 取字体句柄, 整数型, , 


.子程序 取指针, 整数型, , 


.子程序 置指针, 空白型, , 
.参数 指针, 整数型, , 



.子程序 置缩放比例, 空白型, , 
.参数 缩放比例, FJ_点, , 



.子程序 置平滑, 空白型, , 
.参数 是否平滑, 逻辑型, , 



.子程序 取平滑, 逻辑型, , 


.子程序 置旋转角度, 空白型, , 
.参数 旋转角度, 小数型, , 



.子程序 取旋转角度, 小数型, , 


.子程序 置混合模式, 空白型, , 
.参数 混合模式, 整数型, , 请用“混合模式”或“常用混合模式”开头的常量



.子程序 取混合模式, 整数型, , 


.子程序 置启用渐变色, 空白型, , 
.参数 是否启用渐变色, 逻辑型, , 



.子程序 取启用渐变色, 逻辑型, , 


.子程序 置渐变色, 空白型, , 必须使用“置启用渐变色（真）”方法打开渐变色开关，显示时才有效
.参数 左上角颜色, 整数型, , 
.参数 右上角颜色, 整数型, , 
.参数 左下角颜色, 整数型, , 
.参数 右下角颜色, 整数型, , 



.子程序 取渐变色, 空白型, , 
.参数 左上角颜色, 整数型, 参考, 
.参数 右上角颜色, 整数型, 参考, 
.参数 左下角颜色, 整数型, 参考, 
.参数 右下角颜色, 整数型, 参考, 



.类模块 FJ_开资源包, , , 

.子程序 取资源动画头信息, 逻辑型, , 
.参数 资源序列, 整数型, , 
.参数 横帧数, 字节型, 参考, 
.参数 纵帧数, 字节型, 参考, 
.参数 X坐标偏移, 短整数型, 参考, 
.参数 Y坐标偏移, 短整数型, 参考, 
.参数 单帧纹理宽度, 短整数型, 参考, 
.参数 单帧纹理高度, 短整数型, 参考, 



.子程序 取单帧资源数据, 整数型, , 
.参数 资源序列, 整数型, , 
.参数 要提取的帧序列, 整数型, , 
.参数 返回数据, 字节集, 参考, 



.子程序 创建, 逻辑型, , 
.参数 资源包路径, 文本型, , 
.参数 密码, 文本型, , 



.子程序 读取, 字节集, , 
.参数 资源序列, 整数型, , 



.子程序 销毁, 逻辑型, , 


.子程序 是否已创建, 逻辑型, , 


.子程序 取文件数量, 整数型, , 


.子程序 取指针, 整数型, , 


.子程序 置指针, 空白型, , 
.参数 指针, 整数型, , 



.子程序 取资源数据大小, 整数型, , 
.参数 资源序列, 整数型, , 



.子程序 删除资源, 空白型, , 
.参数 资源序列, 整数型, , 



.子程序 修改资源信息, 逻辑型, , 
.参数 资源序列, 短整数型, , 
.参数 横帧数, 字节型, , 
.参数 纵帧数, 字节型, , 
.参数 X偏移, 短整数型, , 
.参数 Y偏移, 短整数型, , 



.程序集 __HIDDEN_TEMP_MOD__, , , 

.子程序 公共_取高16位, 整数型, , 
.参数 参数, 整数型, , 



.子程序 公共_取低16位, 整数型, , 
.参数 参数, 整数型, , 



.子程序 公共_取高24位, 整数型, , 
.参数 参数, 整数型, , 



.子程序 公共_取低24位, 整数型, , 
.参数 参数, 整数型, , 



.子程序 引擎_是否已创建, 逻辑型, , 引擎是否已经被创建，引擎被创建后返回真，销毁后返回假


.子程序 引擎_取启动时间, 整数型, , 取引擎启动时的系统时间，可以用核心库的“取启动时间（）”减这个命令取到的时间差算出引擎启动的逻辑时间


.子程序 引擎_取窗口句柄, 整数型, , 取回引擎窗口的句柄（hwnd）


.子程序 引擎_置窗口可视, 整数型, , 置引擎窗口的可视性，ShowWindow
.参数 可视性, 逻辑型, , 



.子程序 引擎_取窗口可视, 逻辑型, , IsWindowVisible


.子程序 引擎_清屏, 逻辑型, , 


.子程序 引擎_调节屏幕大小, 逻辑型, , 
.参数 屏幕宽度, 整数型, , 
.参数 屏幕高度, 整数型, , 



.子程序 引擎_取着色描述表, 整数型, , Get OpenGL Reanding Context，这个函数主要给需要自己拓展高级功能的人使用，一般不需要用到


.子程序 引擎_置屏幕背景色, 空白型, , 
.参数 屏幕的背景色, 整数型, , 



.子程序 引擎_更新屏幕, 逻辑型, , 结束渲染，把渲染的内容更新到屏幕上


.子程序 公共_取错误代码对应内容, 文本型, , 根据返回的错误提示代码返回错误内容。之所以要单独写一个函数取内容，是想避免把这些字符编译出去。建议大家不要在正式程序中使用这个函数，建议调试使用
.参数 错误代码, 整数型, , 81



.子程序 公共_置错误回调函数, 整数型, , 当引发错误时将执行回调函数指针，错误回调函数可以接受到一个整数型参数，再用“公共_取错误代码对应内容”函数可以取到描述错误的详细内容，返回原函数指针
.参数 错误回调函数指针, 整数型, , 



.子程序 公共_取最后错误, 整数型, , 取得引擎运行的最后错误


.子程序 引擎_启动循环, 逻辑型, , 启动引擎开始消息循环（有能力者也可以不使用此函数自己构造消息循环）
.参数 函数地址, 整数型, , 每次想要执行的函数地址
.参数 FPS, 小数型, 可空, 每秒执行次数，不可过高，默认为60



.子程序 引擎_取FPS, 整数型, , 取实际运行的FPS值（只有使用了引擎自带的循环才可以取到，自己构造消息循环此函数无效）
.参数 是否为平均FPS, 逻辑型, 可空, 假：普通FPS（得到的是一秒内的实际运行FPS），真：平均FPS（得到的是消息循环函数的总执行次数除以总执行时间的值），关于平均FPS和瞬时FPS的理解可以参考高中物理必修一第一章。



.子程序 引擎_挂接事件, 空白型, , 
.参数 事件ID, 整数型, , 可以用“引擎事件_”开头的常量，注意这些常量的备注说明了各个挂接事件的参数
.参数 执行的函数指针, 整数型, , 



.子程序 引擎_取按键状态, 逻辑型, , 检测某个按键是否被按着
.参数 按键代码, 整数型, , 



.子程序 引擎_销毁, 逻辑型, , 销毁引擎，释放占用内存


.子程序 引擎_创建, 逻辑型, , 创建引擎，成功返回真，失败返回假，并可以使用“公共_取最后错误()”取得创建失败的原因。
.参数 窗口标题, 文本型, 可空, 
.参数 窗口图标句柄, 整数型, 可空, 
.参数 窗口句柄, 整数型, 可空, 为空或为零时则默认自行创建窗口，可以绑定窗口控件句柄
.参数 屏幕宽度, 整数型, 可空, 为空或为零时则默认800
.参数 屏幕高度, 整数型, 可空, 为空或为零时则默认600
.参数 引擎风格, 整数型, 可空, 使用“位或()”把“#引擎风格_”开头的常量并起来



.子程序 引擎_取鼠标位置, FJ_位置, , 


.子程序 引擎_置标题, 逻辑型, , 
.参数 标题文本, 文本型, , 



.子程序 公共_到矩形, FJ_矩形, , 
.参数 横坐标, 整数型, , 横坐标
.参数 纵坐标, 整数型, , 纵坐标
.参数 宽度, 整数型, , 宽度
.参数 高度, 整数型, , 高度



.子程序 公共_到位置, FJ_位置, , 
.参数 x, 整数型, , 
.参数 y, 整数型, , 



.子程序 公共_到点, FJ_点, , 
.参数 x, 小数型, , 
.参数 y, 小数型, , 



.子程序 引擎_窗口置焦点, 逻辑型, , 
.参数 焦点, 逻辑型, , 



.子程序 引擎_窗口设为活动窗口, 逻辑型, , 


.子程序 引擎_移动窗口, 逻辑型, , 
.参数 左边, 整数型, , 
.参数 顶边, 整数型, , 
.参数 宽度, 整数型, , 
.参数 高度, 整数型, , 



.子程序 引擎_取OpenGL版本号, 文本型, , 其实这个完全可以用来计算硬盘特征字，这个是显卡上的硬件特征，不会随系统改变


.子程序 引擎_取OpenGL拓展兼容性, 文本型, , 其实这个完全可以用来计算硬盘特征字，这个是显卡上的硬件特征，不会随系统改变


.子程序 引擎_取OpenGL厂商, 文本型, , 其实这个完全可以用来计算硬盘特征字，这个是显卡上的硬件特征，不会随系统改变


.子程序 引擎_取OpenGL渲染设备名, 文本型, , 显卡名，其实这个完全可以用来计算硬盘特征字，这个是显卡上的硬件特征，不会随系统改变


.子程序 引擎_画矩形, 空白型, , 其实也可以用“纹理_描绘”来描绘一个纹理指针为0的纹理达到相同的效果，只不过这个是调用最底层的OpenGL矩形描绘函数，效率更高
.参数 矩形, FJ_矩形, 可空, 
.参数 渲染颜色, 整数型, 可空, 
.参数 旋转角度, 小数型, 可空, 



.子程序 公共_取反色, 整数型, , 
.参数 颜色值, 整数型, , 



.子程序 公共_BGRA2RGBA, 空白型, , 汇编版
.参数 待转字节集, 字节集, 参考, 



.子程序 公共_BGR2RGB, 空白型, , 汇编版
.参数 字节集, 字节集, 参考, 



.子程序 引擎_截图, 字节集, , 截图得到的不是图片数据，而是图像编码，图像编码可以直接使用“纹理_载入_图像编码”载入到纹理，也可以使用“公共_编码到BMP”转换为BMP字节集再输出
.参数 编码类型, 整数型, 可空, 请使用以“编码类型_”开头的常量
.参数 字节对齐, 整数型, 可空, 默认为1字节对齐（即不对齐），在输出BMP时请使用4字节对齐，否则可能错位



.子程序 公共_编码到BMP, 字节集, , 
.参数 BGR编码, 字节集, , 
.参数 图片宽度, 整数型, , 
.参数 图片高度, 整数型, , 



.子程序 引擎_截图到BMP, 字节集, , 


.子程序 公共_通用碰撞检测, 逻辑型, , 如果点含于矩形就返回真
.参数 矩形, FJ_矩形, , 
.参数 点, FJ_点, , 



.子程序 引擎_置FPS, 空白型, , 动态置帧率（只有使用了引擎自带的循环才可以取到，自己构造消息循环此函数无效）
.参数 新FPS, 整数型, , 



.子程序 公共_取高32位, 整数型, , 
.参数 参数, 长整数型, , 



.子程序 公共_取高8位, 字节型, , 
.参数 参数, 短整数型, , 



.子程序 公共_取低8位, 字节型, , 
.参数 参数, 短整数型, , 



.子程序 公共_取低32位, 整数型, , 
.参数 参数, 长整数型, , 



.子程序 公共_含于, 逻辑型, , 汇编版，如果变量大于或等于最小值且小于或等于最大值，就返回真
.参数 变量值, 整数型, , 
.参数 最小值, 整数型, , 
.参数 最大值, 整数型, , 



.子程序 公共_取小, 整数型, , 汇编版，返回两个数中的较小的值
.参数 变量一, 整数型, , 
.参数 变量二, 整数型, , 



.子程序 公共_取大, 整数型, , 汇编版，返回两个数中的较大的值
.参数 变量一, 整数型, , 
.参数 变量二, 整数型, , 



.子程序 纹理_释放, 空白型, , 销毁纹理，释放占用内存
.参数 纹理指针, 整数型, , 



.子程序 纹理_载入_图像编码, FJ_纹理, , 
.参数 图像编码, 字节集, , 
.参数 编码类型, 整数型, , 请使用以“编码类型_”开头的常量
.参数 纹理宽度, 整数型, , 
.参数 纹理高度, 整数型, , 
.参数 红色比例, 小数型, 可空, 
.参数 绿色比例, 小数型, 可空, 
.参数 蓝色比例, 小数型, 可空, 
.参数 红色映射表, 小数型, 可空 数组, 
.参数 绿色映射表, 小数型, 可空 数组, 
.参数 蓝色映射表, 小数型, 可空 数组, 
.参数 不透明度映射表, 小数型, 可空 数组, 
.参数 字节对齐数, 整数型, 可空, 
.参数 纹理标志, 整数型, 可空, 请留空，不熟悉OpenGl内部的不需要用到



.子程序 纹理_渲染, 逻辑型, , 
.参数 纹理, FJ_纹理, , 
.参数 渲染坐标, FJ_点, 可空, 
.参数 渲染颜色, 整数型, 可空, 
.参数 缩放比例, FJ_点, 可空, 
.参数 旋转角度, 小数型, 可空, 
.参数 渲染的区域, FJ_矩形, 可空, 
.参数 混合模式, 整数型, 可空, 
.参数 色相, FJ_色相, 可空, 



.子程序 纹理_渲染_拉伸, 逻辑型, , 自动拉伸到四个端点，不过似乎不是一个平面内的了
.参数 纹理, FJ_纹理, , 
.参数 渲染坐标_左上角, FJ_点, 可空, 
.参数 渲染坐标_右上角, FJ_点, 可空, 
.参数 渲染坐标_左下角, FJ_点, 可空, 
.参数 渲染坐标_右下角, FJ_点, 可空, 
.参数 渲染颜色, 整数型, 可空, 
.参数 旋转角度, 小数型, 可空, 
.参数 渲染区域, FJ_矩形, 可空, 
.参数 混合模式, 整数型, 可空, 
.参数 色相, FJ_色相, 可空, 



.子程序 纹理_取纹理信息, 整数型, , 
.参数 纹理, FJ_纹理, , 
.参数 欲获取的信息, 整数型, , 请使用以“纹理信息_”开头的常量



.子程序 纹理_取纹理图像编码, 字节集, , 
.参数 纹理, FJ_纹理, , 
.参数 编码类型, 整数型, 可空, 请使用以“编码类型_”开头的常量
.参数 图像宽度, 整数型, 可空, 建议留空，将自动获取
.参数 图像高度, 整数型, 可空, 建议留空，将自动获取



.子程序 引擎_取屏幕宽度, 整数型, , 


.子程序 引擎_取屏幕高度, 整数型, , 


.子程序 公共_取每日一贴, 文本型, , 
.参数 索引, 整数型, , 



.子程序 公共_取随机数, 整数型, , 汇编版，无需置随机数种子，支持负数
.参数 最小值, 整数型, , 
.参数 最大值, 整数型, , 



.子程序 公共_点是否相等, 逻辑型, , 返回 (点1.x ＝ 点2.x 且 点1.y ＝ 点2.y)
.参数 点1, FJ_点, , 
.参数 点2, FJ_点, , 



.子程序 引擎_取最后错误, 整数型, , 


.子程序 纹理_设置优先级别, 空白型, , 设置纹理的优先级别，OpenGL有自释放机制，当内存足够时，最优先的纹理被储存到内存，内存不足时，不优先的将被暂时自动释放。可将常用的纹理设置优先级别为1优化性能。
.参数 纹理指针, 整数型, 数组, 
.参数 优先级别, 小数型, 数组, 取值范围0～1，



.子程序 纹理_渲染_拉伸_附颜色, 逻辑型, , 附带四个端点的不同的颜色
.参数 纹理, FJ_纹理, , 
.参数 渲染坐标_左上角, FJ_点, 可空, 
.参数 渲染坐标_右上角, FJ_点, 可空, 
.参数 渲染坐标_左下角, FJ_点, 可空, 
.参数 渲染坐标_右下角, FJ_点, 可空, 
.参数 渲染颜色_左上角, 整数型, 可空, 
.参数 渲染颜色_右上角, 整数型, 可空, 
.参数 渲染颜色_左下角, 整数型, 可空, 
.参数 渲染颜色_右下角, 整数型, 可空, 
.参数 旋转角度, 小数型, 可空, 
.参数 渲染区域, FJ_矩形, 可空, 
.参数 混合模式, 整数型, 可空, 
.参数 色相, FJ_色相, 可空, 



.子程序 公共_矩形是否相等, 逻辑型, , 
.参数 矩形1, FJ_矩形, , 
.参数 矩形2, FJ_矩形, , 



.子程序 纹理_渲染_附颜色, 逻辑型, , 
.参数 纹理, FJ_纹理, , 
.参数 渲染坐标, FJ_点, 可空, 
.参数 渲染颜色_左上角, 整数型, 可空, 
.参数 渲染颜色_右上角, 整数型, 可空, 
.参数 渲染颜色_左下角, 整数型, 可空, 
.参数 渲染颜色_右下角, 整数型, 可空, 
.参数 缩放比例, FJ_点, 可空, 
.参数 旋转角度, 小数型, 可空, 
.参数 渲染区域, FJ_矩形, 可空, 
.参数 混合模式, 整数型, 可空, 
.参数 色相, FJ_色相, 可空, 



.子程序 公共_压缩图像, 字节集, , 
.参数 图像编码, 字节集, , 
.参数 图像宽度, 整数型, , 
.参数 图像高度, 整数型, , 
.参数 压缩标志, 整数型, , 请使用以“压缩标志_”开头的常量



.子程序 公共_解压缩图像, 字节集, , 
.参数 图像编码, 字节集, , 
.参数 图像宽度, 整数型, , 
.参数 图像高度, 整数型, , 
.参数 压缩标志, 整数型, , 请使用以“压缩标志_”开头的常量



.子程序 纹理_载入_压缩图像编码, FJ_纹理, , 
.参数 图像编码, 字节集, , 
.参数 编码标志, 整数型, , 请使用以“编码标志_”开头的常量
.参数 纹理宽度, 整数型, , 
.参数 纹理高度, 整数型, , 
.参数 红色比例, 小数型, 可空, 
.参数 绿色比例, 小数型, 可空, 
.参数 蓝色比例, 小数型, 可空, 
.参数 红色映射表, 小数型, 可空 数组, 
.参数 绿色映射表, 小数型, 可空 数组, 
.参数 蓝色映射表, 小数型, 可空 数组, 
.参数 不透明度映射表, 小数型, 可空 数组, 



.子程序 引擎_显示Fijoy片头, 空白型, , 


.子程序 公共_补足4倍数, 整数型, , 汇编版，返回大于该数的最小的4的整倍数
.参数 整数型, 整数型, , 



.子程序 公共_到整点, FJ_点, , 
.参数 x, 整数型, , 
.参数 y, 整数型, , 



.子程序 公共_点到位置, FJ_位置, , 
.参数 点, FJ_点, , 



.子程序 公共_位置到点, FJ_点, , 
.参数 位置, FJ_位置, , 



.子程序 引擎_取按键按下, 逻辑型, , 检测某个按键是否被按下（瞬间，一次）
.参数 按键代码, 整数型, , 



.子程序 引擎_取按键弹起, 逻辑型, , 检测某个按键是否被弹起（瞬间，一次）
.参数 按键代码, 整数型, , 



.子程序 公共_整数加密, 整数型, , 纯汇编版加密算法
.参数 数据, 整数型, , 
.参数 密码, 整数型, , 



.子程序 公共_整数解密, 整数型, , 纯汇编版加密算法
.参数 数据, 整数型, , 
.参数 密码, 整数型, , 



.子程序 公共_短整数加密, 短整数型, , 纯汇编版加密算法
.参数 数据, 短整数型, , 
.参数 密码, 整数型, , 



.子程序 公共_短整数解密, 短整数型, , 纯汇编版加密算法
.参数 数据, 短整数型, , 
.参数 密码, 整数型, , 



.子程序 公共_字节加密, 字节型, , 纯汇编版加密算法
.参数 数据, 字节型, , 
.参数 密码, 整数型, , 



.子程序 公共_字节解密, 字节型, , 纯汇编版加密算法
.参数 数据, 字节型, , 
.参数 密码, 整数型, , 



.子程序 公共_点相加, FJ_点, , 
.参数 被加点, FJ_点, , 
.参数 加点, FJ_点, , 



.子程序 引擎_跳出消息循环, 空白型, , 必须用Fijoy的消息循环才能生效，不能用于自己构造的消息循环


.子程序 公共_点相减, FJ_点, , 
.参数 被减点, FJ_点, , 
.参数 减点, FJ_点, , 



.子程序 公共_位置相加, FJ_位置, , 
.参数 被加位置, FJ_位置, , 
.参数 加位置, FJ_位置, , 



.子程序 公共_位置相减, FJ_位置, , 
.参数 被减位置, FJ_位置, , 
.参数 减位置, FJ_位置, , 



.子程序 公共_取位, 逻辑型, , 汇编版，取一段字节集中某个位的值，引用序列从0开始，为了效率，没有考虑越界访问，要自己注意欲取的位序列必须小于字节集长度*8。
.参数 字节集, 字节集, , 
.参数 欲取的位序列, 整数型, , 



.子程序 引擎_文字描绘, 空白型, , 
.参数 字体指针, 整数型, , 请用“公共_取矢量字体指针”、“公共_取点阵字体指针”或“公共_取纹理字体指针”获得
.参数 内容, 文本型, , 
.参数 渲染坐标, FJ_点, , 
.参数 渲染颜色, 整数型, , 
.参数 描边方向, 整数型, , 
.参数 描边色, 整数型, , 
.参数 对齐方式, 整数型, 可空, 默认为8。请使用“文字对齐方式”开头的常量或位或：1左对齐 2横向居中对齐 4右对齐 8顶对齐 16纵向居中对齐 32底对齐



.子程序 公共_Bit2Byte, 空白型, , 把位变成一个字节，比如{255}变成{1,1,1,1,1,1,1,1}
.参数 待转字节集, 字节集, , 
.参数 转后字节集, 字节集, , 



.子程序 公共_Byte2Bit, 空白型, , 把字节变成一个位，比如{1,1,1,1,1,1,1,1}变成{255}，非零视为1
.参数 待转字节集, 字节集, , 待转字节集以8位对齐，不足8位在最前面补0，如： { 1, 1, 1 }视为：{ 0, 0, 0, 0, 0, 1, 1, 1 }
.参数 转后字节集, 字节集, , 



.子程序 引擎_取字符轮廓数据, 字节集, , 
.参数 字符编码, 整数型, , 用“取代码（）”把文字变成整数型后传过来
.参数 字体句柄, 整数型, , 请用任意字体类的“取字体句柄（）”方法获得
.参数 lm, 未知类型0x41014358, 参考 可空, 



.子程序 引擎_生成字符纹理, FJ_纹理, , 取得字符的图像编码，用于生成纹理
.参数 欲取图像编码的字符, 整数型, , 
.参数 字体句柄, 整数型, , 



.子程序 公共_补足2次幂, 整数型, , 汇编版，返回大于该数的最小的2的整次幂倍数
.参数 整数型, 整数型, , 



.子程序 公共_置位, 空白型, , 汇编版，取一段字节集中某个位的值，引用序列从0开始，为了效率，没有考虑越界访问，要自己注意欲取的位序列必须小于字节集长度*8。
.参数 字节集, 字节集, , 
.参数 欲置的位序列, 整数型, , 
.参数 位, 逻辑型, , 



.子程序 引擎_安装字体, 整数型, , 如果函数调用成功，则返回值为增加的字体数；如果函数调用失败，返回值是0。 
.参数 欲安装的字体路径, 文本型, , 



.子程序 公共_取临时目录, 文本型, , 


.子程序 引擎_发送消息, 整数型, , 
.参数 消息号, 整数型, , 消息标识。
.参数 消息参数1, 整数型, , 消息的参数，其含义取决于一定的消息。
.参数 消息参数2, 整数型, , 消息的参数，其含义取决于一定的消息。



.子程序 引擎_卸载字体, 逻辑型, , 
.参数 欲卸载的字体路径, 文本型, , 



.子程序 RGBA, 整数型, , 
.参数 Red_红色分量, 字节型, , 
.参数 Green_绿色分量, 字节型, , 
.参数 Blue_蓝色分量, 字节型, , 
.参数 Alpha_不透明度, 字节型, , 



.子程序 ARGB, 整数型, , 
.参数 Alpha_不透明度, 字节型, , 
.参数 Red_红色分量, 字节型, , 
.参数 Green_绿色分量, 字节型, , 
.参数 Blue_蓝色分量, 字节型, , 



.子程序 ERGB, 整数型, , 为兼容易语言常用颜色值常量，Alpha自动转为255
.参数 颜色值, 整数型, , rgb颜色值



.子程序 引擎_画线, 空白型, , 
.参数 起点, FJ_点, , 
.参数 终点, FJ_点, , 
.参数 渲染颜色, 整数型, 可空, 



.子程序 公共_分解颜色, FJ_颜色, , 为兼容易语言常用颜色值常量，Alpha通道若为0则会自动转为255
.参数 颜色值, 整数型, , 



.子程序 公共_RC4, 空白型, , 
.参数 待加密数据, 字节集, , 
.参数 返回数据, 字节集, , 
.参数 密码文本, 文本型, , 



.子程序 公共_载入数据库, 逻辑型, , 
.参数 数据库数据, 字节集, , 
.参数 密码, 文本型, , 
.参数 数据库结构指针, 整数型, , 



.子程序 公共_取数据摘要, 文本型, , 汇编版，取数据MD5校验
.参数 数据, 字节集, , 



.子程序 公共_取数据摘要字节集, 字节集, , 汇编版，取数据MD5校验
.参数 数据, 字节集, , 



.子程序 引擎_窗口取焦点, 逻辑型, , 


.子程序 公共_字符, 文本型, , 
.参数 字符ANSI编码, 整数型, , 



.子程序 引擎_取鼠标滚轮事件, 整数型, , 


.子程序 纹理_渲染_拉伸_附颜色_附色相, 逻辑型, , 附带四个端点的不同的颜色和辅助色
.参数 纹理, FJ_纹理, , 
.参数 渲染坐标_左上角, FJ_点, 可空, 
.参数 渲染坐标_右上角, FJ_点, 可空, 
.参数 渲染坐标_左下角, FJ_点, 可空, 
.参数 渲染坐标_右下角, FJ_点, 可空, 
.参数 渲染颜色_左上角, 整数型, 可空, 
.参数 渲染颜色_右上角, 整数型, 可空, 
.参数 渲染颜色_左下角, 整数型, 可空, 
.参数 渲染颜色_右下角, 整数型, 可空, 
.参数 色相_左上角, FJ_色相, 可空, 
.参数 色相_右上角, FJ_色相, 可空, 
.参数 色相_左下角, FJ_色相, 可空, 
.参数 色相_右下角, FJ_色相, 可空, 
.参数 旋转角度, 小数型, 可空, 
.参数 渲染区域, FJ_矩形, 可空, 
.参数 混合模式, 整数型, 可空, 



.子程序 公共_到色相, FJ_色相, , 
.参数 红色色相, 小数型, , 
.参数 绿色色相, 小数型, , 
.参数 蓝色色相, 小数型, , 



.子程序 引擎_启用功能, 空白型, , 
.参数 功能, 整数型, , 



.子程序 引擎_停用功能, 空白型, , 
.参数 功能, 整数型, , 



.子程序 引擎_置全屏模式, 逻辑型, , 
.参数 是否全屏, 逻辑型, , 



.子程序 引擎_取全屏模式, 逻辑型, , 


.子程序 引擎_修改窗口客户区大小, 空白型, , 
.参数 屏幕宽度, 整数型, , 
.参数 屏幕高度, 整数型, , 



.子程序 引擎_置全局色相, 空白型, , 修改全局的色相，全局色相不作用于文字
.参数 红色色相, 小数型, , 
.参数 绿色色相, 小数型, , 
.参数 蓝色色相, 小数型, , 
.参数 不透明度, 小数型, , 



.子程序 公共_到矩形2, FJ_矩形, , 
.参数 左边, 整数型, , 左边
.参数 顶边, 整数型, , 顶边
.参数 右边, 整数型, , 右边
.参数 底边, 整数型, , 高度



.子程序 引擎_置鼠标是否隐藏, 空白型, , 
.参数 鼠标是否隐藏, 逻辑型, , 



.子程序 引擎_取鼠标是否隐藏, 逻辑型, , 


.子程序 公共_通用碰撞检测_矩形, 逻辑型, , 如果两个矩形存在公共部分，就返回真
.参数 矩形, FJ_矩形, , 
.参数 矩形二, FJ_矩形, , 



.程序集 标题画面, , , 

.程序集变量 按钮1, FJ_资源_按钮, , , 
.程序集变量 按钮2, FJ_资源_按钮, , , 
.程序集变量 标题图片, FJ_资源_动画, , , 
.子程序 初始化标题画面, 空白型, , 
赋值 (当前画面, #标题画面)
标题图片.创建 (资源包.取指针 (), 1)
按钮1.创建 (资源包.取指针 (), 2)
按钮2.创建 (资源包.取指针 (), 2)
 ' --========  易语言资源网  (www.5A5X.com)  ======--
 ' 努力创建完善、持续更新的易语言学习例程源码资源站
 ' --================   www.5A5X.com  ===========--
 ' --==================   易语言资源网注意事项  ================--
 ' * 易语言资源网为易语言官方站、易语言官方论坛提供辅助资源站；
 ' 本易语言资源网( www.5A5X.com)所有软件和资料均为软件作者提
 ' 供和网友推荐发布而来，其版权归该软件和程序源码的合法拥有者所
 ' 有，本站易语言资源网整理收集仅供易语言用户学习和易语言技术研
 ' 究探讨使用，不得用于任何商业用途。如果由于以上原因造成的版权
 ' 纠纷本站概不负责！
 ' * 本站资源未经许可，任何网站不得非法盗链及抄袭本站资源；如引用
 ' 页面，请注明来自易语言资源网，谢谢合作！
 ' --=====================   www.5A5X.com  ================--


.子程序 渲染标题画面, 空白型, , 
标题图片.显示 ()
按钮1.显示 (公共_到点 (相减 (506, 32), 相加 (287, 32)))
按钮2.显示 (公共_到点 (相减 (506, 32), 相加 (337, 32)))
文字.置渐变色 (RGBA (128, 255, 255, 255), RGBA (128, 255, 255, 255), RGBA (128, 128, 255, 255), RGBA (128, 128, 255, 255))
文字.显示 (“开始游戏”, 公共_到点 (相减 (542, 32), 相加 (297, 32)))
文字.显示 (“退出游戏”, 公共_到点 (相减 (542, 32), 相加 (347, 32)))
.如果真 (按钮2.取弹起 ())
    引擎_跳出消息循环 ()
    返回 ()
.如果真结束
.如果真 (按钮1.取弹起 ())
    销毁标题画面 ()
    初始化地图画面 ()
.如果真结束
' 本源码来自易语言资源网(www.5A5X.com)

.子程序 销毁标题画面, 空白型, , 
标题图片.销毁 ()
按钮1.销毁 ()
按钮2.销毁 ()

.程序集 地图画面, , , 

.程序集变量 地图背景, FJ_资源_动画, , , 
.程序集变量 人物, FJ_资源_动画, , , 
.程序集变量 泡泡图片, FJ_资源_动画, , , 
.程序集变量 泡泡动画, FJ_资源_动画, , , 
.程序集变量 人物坐标, FJ_点, , , 
.程序集变量 人物朝向, 整数型, , , 
.程序集变量 箱子数组, FJ_点, , "0", 
.程序集变量 泡泡数组, 泡泡属性, , "0", 
.程序集变量 箱子动画, FJ_资源_动画, , , 
.程序集变量 人物移动, 逻辑型, , , 
.子程序 初始化地图画面, 空白型, , 
.局部变量 n, 整数型, , , 
.局部变量 i, 整数型, , , 

 ' --========  易语言资源网  (www.5A5X.com)  ======--
 ' 努力创建完善、持续更新的易语言学习例程源码资源站
 ' --================   www.5A5X.com  ===========--
 ' --==================   易语言资源网注意事项  ================--
 ' * 易语言资源网为易语言官方站、易语言官方论坛提供辅助资源站；
 ' 本易语言资源网( www.5A5X.com)所有软件和资料均为软件作者提
 ' 供和网友推荐发布而来，其版权归该软件和程序源码的合法拥有者所
 ' 有，本站易语言资源网整理收集仅供易语言用户学习和易语言技术研
 ' 究探讨使用，不得用于任何商业用途。如果由于以上原因造成的版权
 ' 纠纷本站概不负责！
 ' * 本站资源未经许可，任何网站不得非法盗链及抄袭本站资源；如引用
 ' 页面，请注明来自易语言资源网，谢谢合作！
 ' --=====================   www.5A5X.com  ================--

清除数组 (箱子数组)
清除数组 (泡泡数组)
赋值 (当前画面, #地图画面)
地图背景.创建 (资源包.取指针 (), 4)
人物.创建 (资源包.取指针 (), 3)
箱子动画.创建 (资源包.取指针 (), 5)
泡泡图片.创建 (资源包.取指针 (), 6)
泡泡动画.创建 (资源包.取指针 (), 7)
重定义数组 (箱子数组, 假, 公共_取随机数 (公共_取随机数 (6, 18), 公共_取随机数 (24, 40)))
赋值 (n, 1)
 ' 以下代码是为了使生成的随机坐标不相同
.判断循环首 (公共_含于 (n, 1, 取数组成员数 (箱子数组)))
    赋值 (箱子数组 [n], x, 公共_取随机数 (公共_取随机数 (0, 12), 公共_取随机数 (12, 相减 (相除 (640, 32), 1))))
    赋值 (箱子数组 [n], y, 公共_取随机数 (公共_取随机数 (0, 8), 公共_取随机数 (8, 相减 (相除 (480, 32), 1))))
    赋值 (i, 1)
    .判断循环首 (公共_含于 (i, 1, 取数组成员数 (箱子数组)))
        .如果真 (并且 (不等于 (i, n), 等于 (箱子数组 [i], x, 箱子数组 [n], x), 等于 (箱子数组 [i], y, 箱子数组 [n], y)))
            赋值 (n, 相减 (n, 1))
             ' 本源码来自易语言资源网(www.5A5X.com)
            跳出循环 ()
        .如果真结束
        赋值 (i, 相加 (i, 1))
    .判断循环尾 ()
    赋值 (n, 相加 (n, 1))
.判断循环尾 ()
赋值 (n, 1)
.判断循环首 (等于 (n, 1))
    赋值 (人物坐标.x, 公共_取随机数 (公共_取随机数 (32, 64), 公共_取随机数 (480, 640)))
    赋值 (人物坐标.y, 公共_取随机数 (公共_取随机数 (32, 64), 公共_取随机数 (320, 480)))
    赋值 (i, 1)
    .判断循环首 (公共_含于 (i, 1, 取数组成员数 (箱子数组)))
        .如果真 (并且 (等于 (箱子数组 [i], x, 人物坐标.x), 等于 (箱子数组 [i], y, 人物坐标.y)))
            赋值 (n, 相减 (n, 1))
            跳出循环 ()
        .如果真结束
        赋值 (i, 相加 (i, 1))
    .判断循环尾 ()
    赋值 (n, 相加 (n, 1))
.判断循环尾 ()
地图背景.置渲染区域 (公共_到矩形 (0, 0, 640, 480)) ' 原图只有32*32的大小，这样其实是让他重复拖到640*480

.子程序 渲染地图画面, 空白型, , 
.局部变量 n, 整数型, , , 
.局部变量 i, 整数型, , , 

地图背景.显示 ()
赋值 (人物移动, 假)
.判断开始 (引擎_取按键状态 (#右光标键))
    .如果真 (等于 (判定是否可以通行 (2), 假))
        赋值 (人物坐标.x, 相加 (人物坐标.x, 3))
    .如果真结束
    .如果真 (不等于 (人物朝向, 2))
        赋值 (人物朝向, 2)
        更新人物朝向 ()
         ' 本源码来自易语言资源网(www.5A5X.com)
    .如果真结束
    赋值 (人物移动, 真)
.判断 (引擎_取按键状态 (#左光标键))
    .如果真 (等于 (判定是否可以通行 (1), 假))
        赋值 (人物坐标.x, 相减 (人物坐标.x, 3))
    .如果真结束
    .如果真 (不等于 (人物朝向, 1))
        赋值 (人物朝向, 1)
        更新人物朝向 ()
    .如果真结束
    赋值 (人物移动, 真)
.判断 (引擎_取按键状态 (#上光标键))
    .如果真 (等于 (判定是否可以通行 (3), 假))
        赋值 (人物坐标.y, 相减 (人物坐标.y, 3))
    .如果真结束
    .如果真 (不等于 (人物朝向, 3))
        赋值 (人物朝向, 3)
        更新人物朝向 ()
    .如果真结束
    赋值 (人物移动, 真)
.判断 (引擎_取按键状态 (#下光标键))
    .如果真 (等于 (判定是否可以通行 (0), 假))
        赋值 (人物坐标.y, 相加 (人物坐标.y, 3))
    .如果真结束
    .如果真 (不等于 (人物朝向, 0))
        赋值 (人物朝向, 0)
        更新人物朝向 ()
    .如果真结束
    赋值 (人物移动, 真)
.默认
     ' 本源码来自易语言资源网(www.5A5X.com)
.判断结束
.如果真 (引擎_取按键按下 (#空格键))
    .计次循环首 (相加 (取数组成员数 (泡泡数组), 1), n)
        .如果真 (等于 (n, 相加 (取数组成员数 (泡泡数组), 1)))
            加入泡泡 ()
            跳出循环 ()
        .如果真结束
        .如果真 (并且 (等于 (泡泡数组 [n], 位置.x, 相除 (人物坐标.x, 32)), 等于 (泡泡数组 [n], 位置.y, 相除 (人物坐标.y, 32))))
            跳出循环 ()
        .如果真结束
        
    .计次循环尾 ()
.如果真结束
 ' 本源码来自易语言资源网(www.5A5X.com)
.如果 (人物移动)
    人物.更新 ()
    .如果真 (或者 (大于 (人物.取当前帧 (), 相乘 (相加 (人物朝向, 1), 4)), 并且 (等于 (人物朝向, 3), 等于 (人物.取当前帧 (), 1))))
        更新人物朝向 ()
    .如果真结束
    
.否则
    更新人物朝向 ()
.如果结束
.计次循环首 (取数组成员数 (箱子数组), n)
    箱子动画.显示 (公共_到点 (相乘 (箱子数组 [n], x, 32), 相乘 (箱子数组 [n], y, 32)))
.计次循环尾 ()
赋值 (n, 1)
.判断循环首 (公共_含于 (n, 0, 取数组成员数 (泡泡数组)))
    泡泡图片.更新 ()
    泡泡图片.显示 (公共_到点 (相乘 (泡泡数组 [n], 位置.x, 32), 相乘 (泡泡数组 [n], 位置.y, 32)))
    赋值 (泡泡数组 [n], 时间, 相减 (泡泡数组 [n], 时间, 1))
    .如果真 (小于 (泡泡数组 [n], 时间, 0))
        泡泡动画.更新 ()
        .如果真 (等于 (泡泡动画.取当前帧 (), 1))
            赋值 (i, 1)
            .判断循环首 (公共_含于 (i, 0, 取数组成员数 (箱子数组)))
                .如果真 (或者 (并且 (等于 (箱子数组 [i], x, 泡泡数组 [n], 位置.x), 小于 (取绝对值 (相减 (箱子数组 [i], y, 泡泡数组 [n], 位置.y)), 2)), 并且 (等于 (箱子数组 [i], y, 泡泡数组 [n], 位置.y), 小于 (取绝对值 (相减 (箱子数组 [i], x, 泡泡数组 [n], 位置.x)), 2))))
                    删除成员 (箱子数组, i, )
                    赋值 (i, 相减 (i, 1))
                .如果真结束
                赋值 (i, 相加 (i, 1))
            .判断循环尾 ()
            .如果真 (或者 (并且 (等于 (取整 (相除 (人物坐标.x, 32)), 泡泡数组 [n], 位置.x), 小于 (取绝对值 (相减 (取整 (相除 (人物坐标.y, 32)), 泡泡数组 [n], 位置.y)), 2)), 并且 (等于 (取整 (相除 (人物坐标.y, 32)), 泡泡数组 [n], 位置.y), 小于 (取绝对值 (相减 (取整 (相除 (人物坐标.x, 32)), 泡泡数组 [n], 位置.x)), 2))))
                信息框 (“你被自己的泡泡杀死了！！”, #信息图标, “Game Over”)
                销毁地图画面 ()
                 ' 本源码来自易语言资源网(www.5A5X.com)
                初始化标题画面 ()
                返回 ()
            .如果真结束
            删除成员 (泡泡数组, n, )
            到循环尾 ()
        .如果真结束
        赋值 (泡泡数组 [n], 时间, 负 (泡泡动画.取当前帧 ()))
        泡泡动画.显示 (公共_到点 (相减 (相乘 (泡泡数组 [n], 位置.x, 32), 32), 相减 (相乘 (泡泡数组 [n], 位置.y, 32), 32)))
    .如果真结束
    赋值 (n, 相加 (n, 1))
.判断循环尾 ()

人物.显示 (公共_到点 (相减 (人物坐标.x, 相除 (人物.取单帧宽度 (), 2)), 相减 (相加 (人物坐标.y, 16), 人物.取单帧高度 ())))
 ' 本源码来自易语言资源网(www.5A5X.com)

.子程序 销毁地图画面, 空白型, , 
地图背景.销毁 ()
人物.销毁 ()

.子程序 更新人物朝向, 空白型, , 
人物.置当前帧 (相加 (相乘 (人物朝向, 4), 1))

.子程序 判定是否可以通行, 逻辑型, , 
.参数 朝向, 整数型, , 

.局部变量 临时坐标, FJ_位置, , , 
.局部变量 n, 整数型, , , 

赋值 (临时坐标.x, 相除 (人物坐标.x, 32))
赋值 (临时坐标.y, 相除 (人物坐标.y, 32))
.判断开始 (等于 (朝向, 0))
    赋值 (临时坐标.y, 相加 (临时坐标.y, 1))
.判断 (等于 (朝向, 1))
    赋值 (临时坐标.x, 相减 (临时坐标.x, 1))
.判断 (等于 (朝向, 2))
    赋值 (临时坐标.x, 相加 (临时坐标.x, 1))
.默认
    赋值 (临时坐标.y, 相减 (临时坐标.y, 1))
.判断结束
.计次循环首 (取数组成员数 (箱子数组), n)
    .如果真 (并且 (等于 (箱子数组 [n], x, 临时坐标.x), 等于 (箱子数组 [n], y, 临时坐标.y)))
        返回 (真)
    .如果真结束
    ' 本源码来自易语言资源网(www.5A5X.com)
.计次循环尾 ()
.计次循环首 (取数组成员数 (泡泡数组), n)
    .如果真 (并且 (等于 (泡泡数组 [n], 位置.x, 临时坐标.x), 等于 (泡泡数组 [n], 位置.y, 临时坐标.y)))
        返回 (真)
    .如果真结束
    
.计次循环尾 ()
返回 (假)

.子程序 加入泡泡, 空白型, , 
.局部变量 临时泡泡, 泡泡属性, , , 

赋值 (临时泡泡.位置.x, 相除 (人物坐标.x, 32))
赋值 (临时泡泡.位置.y, 相除 (人物坐标.y, 32))
赋值 (临时泡泡.时间, 180)
加入成员 (泡泡数组, 临时泡泡)


 ' 不属于任何一个程序集、类模块的函数：
