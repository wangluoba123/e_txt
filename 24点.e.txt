 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 0
    顶边 = 0
    宽度 = 988
    高度 = 499
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = 16777215 '  0xFFFFFF
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “”
    帮助文件名 = “”

窗口 验算 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 380
    高度 = 288
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 真
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “24点”
    帮助文件名 = “”



.图片 牌1, " ' 已保存到：D:\易语言学习\Data\24点.e\牌1", , 
.图片 牌2, " ' 已保存到：D:\易语言学习\Data\24点.e\牌2", , 
.图片 牌3, " ' 已保存到：D:\易语言学习\Data\24点.e\牌3", , 
.图片 牌4, " ' 已保存到：D:\易语言学习\Data\24点.e\牌4", , 
.图片 牌5, " ' 已保存到：D:\易语言学习\Data\24点.e\牌5", , 
.图片 牌6, " ' 已保存到：D:\易语言学习\Data\24点.e\牌6", , 
.图片 牌7, " ' 已保存到：D:\易语言学习\Data\24点.e\牌7", , 
.图片 牌8, " ' 已保存到：D:\易语言学习\Data\24点.e\牌8", , 
.图片 牌9, " ' 已保存到：D:\易语言学习\Data\24点.e\牌9", , 
.图片 牌10, " ' 已保存到：D:\易语言学习\Data\24点.e\牌10", , 
.图片 牌11, " ' 已保存到：D:\易语言学习\Data\24点.e\牌11", , 
.图片 牌12, " ' 已保存到：D:\易语言学习\Data\24点.e\牌12", , 
.图片 牌13, " ' 已保存到：D:\易语言学习\Data\24点.e\牌13", , 
.图片 牌14, " ' 已保存到：D:\易语言学习\Data\24点.e\牌14", , 
.图片 牌15, " ' 已保存到：D:\易语言学习\Data\24点.e\牌15", , 
.图片 牌16, " ' 已保存到：D:\易语言学习\Data\24点.e\牌16", , 
.图片 牌17, " ' 已保存到：D:\易语言学习\Data\24点.e\牌17", , 
.图片 牌18, " ' 已保存到：D:\易语言学习\Data\24点.e\牌18", , 
.图片 牌19, " ' 已保存到：D:\易语言学习\Data\24点.e\牌19", , 
.图片 牌20, " ' 已保存到：D:\易语言学习\Data\24点.e\牌20", , 
.图片 牌21, " ' 已保存到：D:\易语言学习\Data\24点.e\牌21", , 
.图片 牌22, " ' 已保存到：D:\易语言学习\Data\24点.e\牌22", , 
.图片 牌23, " ' 已保存到：D:\易语言学习\Data\24点.e\牌23", , 
.图片 牌24, " ' 已保存到：D:\易语言学习\Data\24点.e\牌24", , 
.图片 牌25, " ' 已保存到：D:\易语言学习\Data\24点.e\牌25", , 
.图片 牌26, " ' 已保存到：D:\易语言学习\Data\24点.e\牌26", , 
.图片 牌27, " ' 已保存到：D:\易语言学习\Data\24点.e\牌27", , 
.图片 牌28, " ' 已保存到：D:\易语言学习\Data\24点.e\牌28", , 
.图片 牌29, " ' 已保存到：D:\易语言学习\Data\24点.e\牌29", , 
.图片 牌30, " ' 已保存到：D:\易语言学习\Data\24点.e\牌30", , 
.图片 牌31, " ' 已保存到：D:\易语言学习\Data\24点.e\牌31", , 
.图片 牌32, " ' 已保存到：D:\易语言学习\Data\24点.e\牌32", , 
.图片 牌33, " ' 已保存到：D:\易语言学习\Data\24点.e\牌33", , 
.图片 牌34, " ' 已保存到：D:\易语言学习\Data\24点.e\牌34", , 
.图片 牌35, " ' 已保存到：D:\易语言学习\Data\24点.e\牌35", , 
.图片 牌36, " ' 已保存到：D:\易语言学习\Data\24点.e\牌36", , 
.图片 back, " ' 已保存到：D:\易语言学习\Data\24点.e\back", , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 4 系统核心支持库
 ' script EDF19861DC454d15BA0B9E3FF9CA4F57 1 3 脚本语言支持组件
 ' xwx CBF69520-5300-43C4-B6D6-C2CF3F2A169B 1 0 xwxyh无限扩展库





.窗口程序集 窗口程序集1, , , 

.程序集变量 pp, 字节集, , , 
.程序集变量 牌点, 整数型, , "0", 
.程序集变量 qq, 整数型, , , 
.程序集变量 qq1, 整数型, , , 
.程序集变量 qq4, 整数型, , , 
.程序集变量 qq2, 整数型, , , 
.程序集变量 qq3, 整数型, , , 
.程序集变量 qw, 字节集, , "36", 
.程序集变量 数字排列, 整数型, , "0", 
.程序集变量 方法数组, 整数型, , "0", 
.程序集变量 方法类型数组, 整数型, , "0", 
.子程序 _图片框1_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 取鼠标位置, 整数型, , , 

.如果真 (并且 (不等于 (.图片, pp), 等于 (.图片, pp)))
    赋值 (.可视, 真)
    赋值 (.图片, .图片)
    赋值 (.图片, pp)
    赋值 (.左边, 相减 (取鼠标水平位置 (), 相乘 (.宽度, 0.85)))
    赋值 (.顶边, 相减 (取鼠标垂直位置 (), 相乘 (.高度, 1.5)))
    
.如果真结束



.子程序 _图片框1_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.左边, 相减 (取鼠标水平位置 (), 相乘 (.宽度, 0.85)))
赋值 (.顶边, 相减 (取鼠标垂直位置 (), 相乘 (.高度, 1.5)))

.子程序 _图片框1_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (等于 (.图片, pp))
    赋值 (.图片, .图片)
    赋值 (.图片, pp)
    赋值 (.可视, 假)
    
.如果真结束


.子程序 _图片框2_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 取鼠标位置, 整数型, , , 

.如果真 (并且 (不等于 (.图片, pp), 等于 (.图片, pp)))
    赋值 (.可视, 真)
    赋值 (.图片, .图片)
    赋值 (.图片, pp)
    赋值 (.左边, 相减 (取鼠标水平位置 (), 相乘 (.宽度, 0.85)))
    赋值 (.顶边, 相减 (取鼠标垂直位置 (), 相乘 (.高度, 1.5)))
    
.如果真结束



.子程序 _图片框2_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.左边, 相减 (取鼠标水平位置 (), 相乘 (.宽度, 0.85)))
赋值 (.顶边, 相减 (取鼠标垂直位置 (), 相乘 (.高度, 1.5)))

.子程序 _图片框2_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (等于 (.图片, pp))
    赋值 (.图片, .图片)
    赋值 (.图片, pp)
    赋值 (.可视, 假)
    
.如果真结束


.子程序 _图片框3_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 取鼠标位置, 整数型, , , 

.如果真 (并且 (不等于 (.图片, pp), 等于 (.图片, pp)))
    赋值 (.可视, 真)
    赋值 (.图片, .图片)
    赋值 (.图片, pp)
    赋值 (.左边, 相减 (取鼠标水平位置 (), 相乘 (.宽度, 0.85)))
    赋值 (.顶边, 相减 (取鼠标垂直位置 (), 相乘 (.高度, 1.5)))
    
.如果真结束



.子程序 _图片框3_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.左边, 相减 (取鼠标水平位置 (), 相乘 (.宽度, 0.85)))
赋值 (.顶边, 相减 (取鼠标垂直位置 (), 相乘 (.高度, 1.5)))

.子程序 _图片框3_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (等于 (.图片, pp))
    赋值 (.图片, .图片)
    赋值 (.图片, pp)
    赋值 (.可视, 假)
    
.如果真结束


.子程序 _图片框4_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 取鼠标位置, 整数型, , , 

.如果真 (并且 (不等于 (.图片, pp), 等于 (.图片, pp)))
    赋值 (.可视, 真)
    赋值 (.图片, .图片)
    赋值 (.图片, pp)
    赋值 (.左边, 相减 (取鼠标水平位置 (), 相乘 (.宽度, 0.85)))
    赋值 (.顶边, 相减 (取鼠标垂直位置 (), 相乘 (.高度, 1.5)))
    
.如果真结束



.子程序 _图片框4_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.左边, 相减 (取鼠标水平位置 (), 相乘 (.宽度, 0.85)))
赋值 (.顶边, 相减 (取鼠标垂直位置 (), 相乘 (.高度, 1.5)))

.子程序 _图片框4_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (等于 (.图片, pp))
    赋值 (.图片, .图片)
    赋值 (.图片, pp)
    赋值 (.可视, 假)
    
.如果真结束


.子程序 _图片框5_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 取鼠标位置, 整数型, , , 

.如果真 (并且 (不等于 (.图片, pp), 等于 (.图片, pp)))
    赋值 (.可视, 真)
    赋值 (.图片, .图片)
    赋值 (.图片, pp)
    赋值 (.左边, 相减 (取鼠标水平位置 (), 相乘 (.宽度, 0.85)))
    赋值 (.顶边, 相减 (取鼠标垂直位置 (), 相乘 (.高度, 1.5)))
    
.如果真结束



.子程序 _图片框5_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.左边, 相减 (取鼠标水平位置 (), 相乘 (.宽度, 0.85)))
赋值 (.顶边, 相减 (取鼠标垂直位置 (), 相乘 (.高度, 1.5)))

.子程序 _图片框5_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (等于 (.图片, pp))
    赋值 (.图片, .图片)
    赋值 (.图片, pp)
    赋值 (.可视, 假)
    
.如果真结束


.子程序 _图片框6_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 取鼠标位置, 整数型, , , 

.如果真 (并且 (不等于 (.图片, pp), 等于 (.图片, pp)))
    赋值 (.可视, 真)
    赋值 (.图片, .图片)
    赋值 (.图片, pp)
    赋值 (.左边, 相减 (取鼠标水平位置 (), 相乘 (.宽度, 0.85)))
    赋值 (.顶边, 相减 (取鼠标垂直位置 (), 相乘 (.高度, 1.5)))
    
.如果真结束



.子程序 _图片框6_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.左边, 相减 (取鼠标水平位置 (), 相乘 (.宽度, 0.85)))
赋值 (.顶边, 相减 (取鼠标垂直位置 (), 相乘 (.高度, 1.5)))

.子程序 _图片框6_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (等于 (.图片, pp))
    赋值 (.图片, .图片)
    赋值 (.图片, pp)
    赋值 (.可视, 假)
.如果真结束


.子程序 _图片框7_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 取鼠标位置, 整数型, , , 

.如果真 (并且 (不等于 (.图片, pp), 等于 (.图片, pp)))
    赋值 (.可视, 真)
    赋值 (.图片, .图片)
    赋值 (.图片, pp)
    赋值 (.左边, 相减 (取鼠标水平位置 (), 相乘 (.宽度, 0.85)))
    赋值 (.顶边, 相减 (取鼠标垂直位置 (), 相乘 (.高度, 1.5)))
.如果真结束


.子程序 _图片框7_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.左边, 相减 (取鼠标水平位置 (), 相乘 (.宽度, 0.85)))
赋值 (.顶边, 相减 (取鼠标垂直位置 (), 相乘 (.高度, 1.5)))

.子程序 _图片框7_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (等于 (.图片, pp))
    赋值 (.图片, .图片)
    赋值 (.图片, pp)
    赋值 (.可视, 假)
    
.如果真结束


.子程序 _图片框8_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 取鼠标位置, 整数型, , , 

.如果真 (并且 (不等于 (.图片, pp), 等于 (.图片, pp)))
    赋值 (.可视, 真)
    赋值 (.图片, .图片)
    赋值 (.图片, pp)
    赋值 (.左边, 相减 (取鼠标水平位置 (), 相乘 (.宽度, 0.85)))
    赋值 (.顶边, 相减 (取鼠标垂直位置 (), 相乘 (.高度, 1.5)))
    
.如果真结束



.子程序 _图片框8_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.左边, 相减 (取鼠标水平位置 (), 相乘 (.宽度, 0.85)))
赋值 (.顶边, 相减 (取鼠标垂直位置 (), 相乘 (.高度, 1.5)))


.子程序 _图片框8_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (等于 (.图片, pp))
    赋值 (.图片, .图片)
    赋值 (.图片, pp)
    赋值 (.可视, 假)
    
.如果真结束


.子程序 __启动窗口_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.左边, 相减 (取鼠标水平位置 (), 相乘 (.宽度, 0.85)))
赋值 (.顶边, 相减 (取鼠标垂直位置 (), 相乘 (.高度, 1.5)))




.子程序 __启动窗口_创建完毕, 空白型, , 
赋值 (qw [1], #牌1)
赋值 (qw [2], #牌2)
赋值 (qw [3], #牌3)
赋值 (qw [4], #牌4)
赋值 (qw [5], #牌5)
赋值 (qw [6], #牌6)
赋值 (qw [7], #牌7)
赋值 (qw [8], #牌8)
赋值 (qw [9], #牌9)
赋值 (qw [10], #牌10)
赋值 (qw [11], #牌11)
赋值 (qw [12], #牌12)
赋值 (qw [13], #牌13)
赋值 (qw [14], #牌14)
赋值 (qw [15], #牌15)
赋值 (qw [16], #牌16)
赋值 (qw [17], #牌17)
赋值 (qw [18], #牌18)
赋值 (qw [19], #牌19)
赋值 (qw [20], #牌20)
赋值 (qw [21], #牌21)
赋值 (qw [22], #牌22)
赋值 (qw [23], #牌23)
赋值 (qw [24], #牌24)
赋值 (qw [25], #牌25)
赋值 (qw [26], #牌26)
赋值 (qw [27], #牌27)
赋值 (qw [28], #牌28)
赋值 (qw [29], #牌29)
赋值 (qw [30], #牌30)
赋值 (qw [31], #牌31)
赋值 (qw [32], #牌32)
赋值 (qw [33], #牌33)
赋值 (qw [34], #牌34)
赋值 (qw [35], #牌35)
赋值 (qw [36], #牌36)
赋值 (pp, #back)
连续赋值 (#back, .图片, .图片, .图片, .图片, .图片, .图片, .图片, .图片, .图片)
还原 ()
赋值 (_启动窗口., 相加 (“还剩”, 到文本 (取数组成员数 (牌点)), “牌 丁亥年末乘兴之作”))

.子程序 还原, 空白型, , 
.局部变量 p, 整数型, , , 

.计次循环首 (36, p)
    
    加入成员 (牌点, p)
    
.计次循环尾 ()


.子程序 出牌, 空白型, , 
置随机数种子 ()
赋值 (qq1, 取随机数 (1, 取数组成员数 (牌点)))
赋值 (.图片, qw [牌点] [qq1])
删除成员 (牌点, qq1, 1)
赋值 (qq2, 取随机数 (1, 取数组成员数 (牌点)))
赋值 (.图片, qw [牌点] [qq2])
删除成员 (牌点, qq2, 1)
赋值 (qq3, 取随机数 (1, 取数组成员数 (牌点)))
赋值 (.图片, qw [牌点] [qq3])
删除成员 (牌点, qq3, 1)
赋值 (qq4, 取随机数 (1, 取数组成员数 (牌点)))
赋值 (.图片, qw [牌点] [qq4])
删除成员 (牌点, qq4, 1)
连续赋值 (pp, .图片, .图片, .图片, .图片)
连续赋值 (“”, .内容, .内容, .内容, .内容, .内容)
赋值 (_启动窗口., 相加 (“还剩”, 到文本 (取数组成员数 (牌点)), “牌 丁亥年末乘兴之作”))
.如果真 (等于 (取数组成员数 (牌点), 0))
    .如果 (等于 (信息框 (“你是否想继续下一局？”, 相加 (#确认取消钮, #询问图标), ), 0))
        还原 ()
    .否则
        未知支持库函数_6 ()
    .如果结束
    
.如果真结束




.子程序 牌到数, 整数型, , 
.参数 图片框, 图片框, , 

.局部变量 i, 整数型, , , 
.局部变量 tt, 整数型, , , 

.计次循环首 (36, i)
    .如果真 (等于 (图片框.图片, qw [i]))
        赋值 (tt, i)
    .如果真结束
    
.计次循环尾 ()
赋值 (tt, 求余数 (tt, 9))
.如果真 (等于 (tt, 0))
    赋值 (tt, 9)
.如果真结束
返回 (tt)


.子程序 _验算按钮_被单击, 空白型, , 
.局部变量 数字排列, 整数型, , "0", 
.局部变量 方法数组, 整数型, , "0", 
.局部变量 方法类型数组, 整数型, , "0", 

 ' 调试输出 (组合框1.内容 ＋ 到文本 (牌到数 (图片框5)) ＋ 组合框2.内容 ＋ 到文本 (牌到数 (图片框6)) ＋ 组合框3.内容 ＋ 到文本 (牌到数 (图片框7)) ＋ 组合框4.内容 ＋ 到文本 (牌到数 (图片框8)) ＋ 组合框5.内容)
.如果 (或者 (等于 (.图片, pp), 等于 (.图片, pp), 等于 (.图片, pp), 等于 (.图片, pp), 等于 (.内容, “”), 等于 (.内容, “”), 等于 (.内容, “”), 等于 (.内容, “”)))
    信息框 (“☆请选择扑克牌及运算符！☆”, 相加 (0, #警告图标), “↑提示↑”)
    返回 ()
.否则
    .如果真 (等于 (到数值 (相加 (.内容, 到文本 (牌到数 ()), .内容, 到文本 (牌到数 ()), .内容, 到文本 (牌到数 ()), .内容, 到文本 (牌到数 ()), .内容).未知支持库函数_1 ()), 24))
        信息框 (“★您的算法正确！★”, 相加 (0, #信息图标), “◇恭喜你◇”)
        出牌 ()
    .如果真结束
    
.如果结束


.子程序 _按钮1_被单击, 空白型, , 
出牌 ()

.子程序 _按钮3_被单击, 空白型, , 
.如果 (或者 (等于 (.图片, pp), 等于 (.图片, pp), 等于 (.图片, pp), 等于 (.图片, pp)))
    信息框 (“☆请选择扑克牌！☆”, 相加 (0, #警告图标), “↑提示↑”)
    返回 ()
.否则
    载入 (验算, , 真)
.如果结束


.窗口程序集 窗口程序集2, , , 

.程序集变量 数字排列, 整数型, , "0", 
.程序集变量 方法数组, 整数型, , "0", 
.程序集变量 方法类型数组, 整数型, , "0", 
.子程序 _按钮2_被单击, 空白型, , 

赋值 (.内容, 到文本 (牌到数 (_启动窗口.)))
赋值 (.内容, 到文本 (牌到数 (_启动窗口.)))
赋值 (.内容, 到文本 (牌到数 (_启动窗口.)))
赋值 (.内容, 到文本 (牌到数 (_启动窗口.)))


.子程序 _按钮1_被单击, 空白型, , 
.局部变量 循环变量, 整数型, , , 
.局部变量 a, 整数型, , , 
.局部变量 b, 整数型, , , 
.局部变量 c, 整数型, , , 
.局部变量 d, 整数型, , , 
.局部变量 方法1, 整数型, , , 
.局部变量 方法2, 整数型, , , 
.局部变量 方法3, 整数型, , , 
.局部变量 循环变量1, 整数型, , , 
.局部变量 循环变量2, 整数型, , , 
.局部变量 表达式, 文本型, , , 
.局部变量 返回值, 文本型, , , 
.局部变量 文本, 文本型, , , 

清空 ()
清空 ()
赋值 (.内容, “”)


方法数组初始化 ()
数组初始化 ()

.计次循环首 (24, 循环变量1)
    赋值 (a, 数字排列 [相减 (相乘 (循环变量1, 4), 3)])
    赋值 (b, 数字排列 [相减 (相乘 (循环变量1, 4), 2)])
    赋值 (c, 数字排列 [相减 (相乘 (循环变量1, 4), 1)])
    赋值 (d, 数字排列 [相乘 (循环变量1, 4)])
    .计次循环首 (相除 (取数组成员数 (方法数组), 3), 循环变量2)
        赋值 (方法1, 方法数组 [相减 (相乘 (循环变量2, 3), 2)])
        赋值 (方法2, 方法数组 [相减 (相乘 (循环变量2, 3), 1)])
        赋值 (方法3, 方法数组 [相乘 (循环变量2, 3)])
        .计次循环首 (6, 循环变量)
            .如果真 (等于 (表达式计算 (a, b, c, d, 方法1, 方法2, 方法3, 循环变量), 24))
                赋值 (表达式, 格式化输出 (到文本 (a), 到文本 (b), 到文本 (c), 到文本 (d), 方法1, 方法2, 方法3, 循环变量))
                .如果真 (等于 (表达式.选择 (), -1))
                    表达式.加入项目 ()
                    .判断开始 (等于 (表达式.未知支持库函数_1 (), “24”))
                        赋值 (返回值, 过滤重复排列 ())
                        .判断开始 (等于 (寻找文本 (文本, 返回值, , 假), -1))
                            赋值 (文本, 相加 (文本, 返回值))
                            相加 (表达式, “=24”).加入项目 ()
                        .默认
                            赋值 (.内容, 相加 (.内容, “过滤：”, #换行符, 表达式, “=”, 表达式.未知支持库函数_1 (), #换行符))
                        .判断结束
                        
                    .默认
                        赋值 (.内容, 相加 (.内容, “错误：”, #换行符, 表达式, #换行符, “顺序：”, 到文本 (循环变量), #换行符))
                    .判断结束
                    
                .如果真结束
                
            .如果真结束
            
        .计次循环尾 ()
    .计次循环尾 ()
.计次循环尾 ()

赋值 (.标题, 相加 (“所有算法：”, 到文本 (取项目数 ())))
赋值 (.标题, 相加 (“筛选结果：”, 到文本 (取项目数 ())))
.如果真 (等于 (取项目数 (), 0))
    “没有答案”.加入项目 ()
    赋值 (.标题, 相加 (“筛选结果：”, “0”))
.如果真结束


.子程序 方法数组初始化, 空白型, , 
.局部变量 循环变量1, 整数型, , , 
.局部变量 方法1, 整数型, , , 
.局部变量 循环变量2, 整数型, , , 
.局部变量 方法2, 整数型, , , 
.局部变量 循环变量3, 整数型, , , 
.局部变量 方法3, 整数型, , , 

清除数组 (方法数组)
.计次循环首 (4, 循环变量1)
    赋值 (方法1, 循环变量1)
    .计次循环首 (4, 循环变量2)
        赋值 (方法2, 循环变量2)
        .计次循环首 (4, 循环变量3)
            赋值 (方法3, 循环变量3)
            加入成员 (方法数组, 方法1)
            加入成员 (方法数组, 方法2)
            加入成员 (方法数组, 方法3)
        .计次循环尾 ()
    .计次循环尾 ()
.计次循环尾 ()

.子程序 优先级, 整数型, , 
.参数 方法, 整数型, , 

.判断开始 (或者 (等于 (方法, 1), 等于 (方法, 2)))
    返回 (1)
.判断 (或者 (等于 (方法, 3), 等于 (方法, 4)))
    返回 (2)
.默认
    
.判断结束
返回 (0)

.子程序 数组初始化, 空白型, , 
.局部变量 数组, 整数型, , "0", 
.局部变量 临时数组1, 整数型, , "0", 
.局部变量 循环变量1, 整数型, , , 
.局部变量 a, 整数型, , , 
.局部变量 临时数组2, 整数型, , "0", 
.局部变量 循环变量2, 整数型, , , 
.局部变量 b, 整数型, , , 
.局部变量 临时数组3, 整数型, , "0", 
.局部变量 循环变量3, 整数型, , , 
.局部变量 c, 整数型, , , 
.局部变量 d, 整数型, , , 

 ' 清除数组 (数组)
清除数组 (数字排列)

加入成员 (数组, 到数值 (.内容))
加入成员 (数组, 到数值 (.内容))
加入成员 (数组, 到数值 (.内容))
加入成员 (数组, 到数值 (.内容))

赋值 (临时数组1, 数组)
.计次循环首 (取数组成员数 (临时数组1), 循环变量1)
    赋值 (a, 临时数组1 [循环变量1])
    删除成员 (临时数组1, 循环变量1, )
    赋值 (临时数组2, 临时数组1)
    .计次循环首 (取数组成员数 (临时数组2), 循环变量2)
        赋值 (b, 临时数组2 [循环变量2])
        删除成员 (临时数组2, 循环变量2, )
        赋值 (临时数组3, 临时数组2)
        .计次循环首 (取数组成员数 (临时数组3), 循环变量3)
            赋值 (c, 临时数组3 [循环变量3])
            删除成员 (临时数组3, 循环变量3, )
            赋值 (d, 临时数组3 [1])
            加入成员 (数字排列, a)
            加入成员 (数字排列, b)
            加入成员 (数字排列, c)
            加入成员 (数字排列, d)
            赋值 (临时数组3, 临时数组2)
        .计次循环尾 ()
        赋值 (临时数组2, 临时数组1)
    .计次循环尾 ()
    赋值 (临时数组1, 数组)
.计次循环尾 ()

.子程序 格式化输出, 文本型, , 
.参数 a, 文本型, , 
.参数 b, 文本型, , 
.参数 c, 文本型, , 
.参数 d, 文本型, , 
.参数 方法1, 整数型, , 
.参数 方法2, 整数型, , 
.参数 方法3, 整数型, , 
.参数 顺序, 整数型, , 

.局部变量 方法a, 文本型, , , 
.局部变量 方法b, 文本型, , , 
.局部变量 方法c, 文本型, , , 
.局部变量 前, 文本型, , , 
.局部变量 后, 文本型, , , 
.局部变量 类型, 整数型, , , 
.局部变量 文本, 文本型, , , 
.局部变量 优先1, 整数型, , , 
.局部变量 优先2, 整数型, , , 
.局部变量 优先3, 整数型, , , 

清除数组 (方法类型数组)
赋值 (方法a, 方法文本 (方法1))
赋值 (方法b, 方法文本 (方法2))
赋值 (方法c, 方法文本 (方法3))
赋值 (前, “(”)
赋值 (后, “)”)
赋值 (优先1, 优先级 (方法1))
赋值 (优先2, 优先级 (方法2))
赋值 (优先3, 优先级 (方法3))
.判断开始 (等于 (顺序, 1))
    赋值 (类型, 8)
.判断 (或者 (等于 (顺序, 2), 等于 (顺序, 5)))
    赋值 (类型, 7)
.判断 (等于 (顺序, 3))
    赋值 (类型, 9)
.判断 (等于 (顺序, 4))
    赋值 (类型, 10)
.判断 (等于 (顺序, 6))
    赋值 (类型, 11)
.默认
    赋值 (类型, 100)
.判断结束
.如果真 (等于 (类型, 11)) ' a+(b+(c+d))
    .判断开始 (小于 (优先2, 优先3))
        赋值 (类型, 6)
    .判断 (等于 (优先2, 优先3))
        .如果真 (或者 (等于 (方法2, 2), 等于 (方法2, 4)))
            赋值 (方法3, 相反方法 (方法3))
            赋值 (方法c, 方法文本 (方法3))
        .如果真结束
        赋值 (类型, 6)
    .判断 (小于 (优先1, 优先2))
        赋值 (类型, 4)
    .判断 (等于 (优先1, 优先2))
        .如果真 (或者 (等于 (方法1, 2), 等于 (方法1, 4)))
            赋值 (方法2, 相反方法 (方法2))
            赋值 (方法b, 方法文本 (方法2))
        .如果真结束
        赋值 (类型, 4)
    .默认
        赋值 (文本, 相加 (a, 方法a, 前, b, 方法b, 前, c, 方法c, d, 后, 后))
    .判断结束
    
.如果真结束
.如果真 (等于 (类型, 10)) ' a+((b+c)+d)
    .判断开始 (大于或等于 (优先2, 优先3))
        赋值 (类型, 6)
    .判断 (小于 (优先1, 优先3))
        赋值 (类型, 3)
    .判断 (等于 (优先1, 优先3))
        .如果真 (或者 (等于 (方法1, 2), 等于 (方法1, 4)))
            赋值 (方法3, 相反方法 (方法3))
            赋值 (方法c, 方法文本 (方法3))
        .如果真结束
        赋值 (类型, 3)
    .默认
        赋值 (文本, 相加 (a, 方法a, 前, 前, b, 方法b, c, 后, 方法c, d, 后))
    .判断结束
    
.如果真结束
.如果真 (等于 (类型, 9)) ' (a+(b+c))+d
    .判断开始 (小于 (优先1, 优先2))
        赋值 (类型, 5)
    .判断 (等于 (优先1, 优先2))
        .如果真 (或者 (等于 (方法1, 2), 等于 (方法1, 4)))
            赋值 (方法2, 相反方法 (方法2))
            赋值 (方法b, 方法文本 (方法2))
        .如果真结束
        赋值 (类型, 5)
    .判断 (大于或等于 (优先1, 优先3))
        赋值 (类型, 3)
    .默认
        赋值 (文本, 相加 (前, a, 方法a, 前, b, 方法b, c, 后, 后, 方法c, d))
    .判断结束
    
.如果真结束
.如果真 (等于 (类型, 8)) ' ((a+b)+c)+d
    .判断开始 (大于或等于 (优先1, 优先2))
        赋值 (类型, 5)
    .判断 (大于或等于 (优先2, 优先3))
        赋值 (类型, 2)
    .默认
        赋值 (文本, 相加 (前, 前, a, 方法a, b, 后, 方法b, c, 后, 方法c, d))
    .判断结束
    
.如果真结束
.如果真 (等于 (类型, 7)) ' (a+b)+(c+d)
    .判断开始 (大于或等于 (优先1, 优先2))
        赋值 (类型, 4)
    .判断 (小于 (优先2, 优先3))
        赋值 (类型, 2)
    .判断 (等于 (优先2, 优先3))
        .如果真 (或者 (等于 (方法2, 2), 等于 (方法2, 4)))
            赋值 (方法3, 相反方法 (方法3))
            赋值 (方法c, 方法文本 (方法3))
        .如果真结束
        赋值 (类型, 2)
    .默认
        赋值 (文本, 相加 (前, a, 方法a, b, 后, 方法b, 前, c, 方法c, d, 后))
    .判断结束
    
.如果真结束
.如果真 (等于 (类型, 6)) ' a+(b+c+d)
    .判断开始 (并且 (小于 (优先1, 优先2), 小于 (优先1, 优先3)))
        赋值 (类型, 1)
    .判断 (并且 (等于 (优先1, 优先2), 小于 (优先1, 优先3)))
        .如果真 (或者 (等于 (方法1, 2), 等于 (方法1, 4)))
            赋值 (方法2, 相反方法 (方法2))
            赋值 (方法b, 方法文本 (方法2))
        .如果真结束
        赋值 (类型, 1)
    .判断 (并且 (等于 (优先1, 优先2), 等于 (优先1, 优先3)))
        .如果真 (或者 (等于 (方法1, 2), 等于 (方法1, 4)))
            赋值 (方法2, 相反方法 (方法2))
            赋值 (方法b, 方法文本 (方法2))
            赋值 (方法3, 相反方法 (方法3))
            赋值 (方法c, 方法文本 (方法3))
        .如果真结束
        赋值 (类型, 1)
    .默认
        赋值 (文本, 相加 (a, 方法a, 前, b, 方法b, c, 方法c, d, 后))
    .判断结束
    
.如果真结束
.如果真 (等于 (类型, 5)) ' (a+b+c)+d
    .判断开始 (并且 (大于或等于 (优先1, 优先3), 大于或等于 (优先2, 优先3)))
        赋值 (类型, 1)
    .默认
        赋值 (文本, 相加 (前, a, 方法a, b, 方法b, c, 后, 方法c, d))
    .判断结束
    
.如果真结束
.如果真 (等于 (类型, 4)) ' a+b+(c+d)
    .判断开始 (小于 (优先2, 优先3))
        赋值 (类型, 1)
    .判断 (等于 (优先2, 优先3))
        .如果真 (或者 (等于 (方法2, 2), 等于 (方法2, 4)))
            赋值 (方法3, 相反方法 (方法3))
            赋值 (方法c, 方法文本 (方法3))
        .如果真结束
        赋值 (类型, 1)
    .默认
        赋值 (文本, 相加 (a, 方法a, b, 方法b, 前, c, 方法c, d, 后))
    .判断结束
    
.如果真结束
.如果真 (等于 (类型, 3)) ' a+(b+c)+d
    .判断开始 (并且 (小于 (优先1, 优先2), 大于或等于 (优先2, 优先3)))
        赋值 (类型, 1)
    .判断 (并且 (等于 (优先1, 优先2), 大于或等于 (优先2, 优先3)))
        .如果真 (或者 (等于 (方法1, 2), 等于 (方法1, 4)))
            赋值 (方法2, 相反方法 (方法2))
            赋值 (方法b, 方法文本 (方法2))
        .如果真结束
        赋值 (类型, 1)
    .默认
        赋值 (文本, 相加 (a, 方法a, 前, b, 方法b, c, 后, 方法c, d))
    .判断结束
    
.如果真结束
.如果真 (等于 (类型, 2)) ' (a+b)+c+d
    .判断开始 (大于或等于 (优先1, 优先2))
        赋值 (类型, 1)
    .默认
        赋值 (文本, 相加 (前, a, 方法a, b, 后, 方法b, c, 方法c, d))
    .判断结束
    
.如果真结束
.如果真 (等于 (类型, 1)) ' a+b+c+d
    赋值 (文本, 相加 (a, 方法a, b, 方法b, c, 方法c, d))
.如果真结束
加入成员 (方法类型数组, 方法1)
加入成员 (方法类型数组, 方法2)
加入成员 (方法类型数组, 方法3)
加入成员 (方法类型数组, 类型)
返回 (文本)

.子程序 计算, 双精度小数型, , 
.参数 方法, 整数型, , 1:+,2:-,3:*,4:/
.参数 x, 双精度小数型, , 
.参数 y, 双精度小数型, , 

.判断开始 (等于 (方法, 1))
    返回 (相加 (x, y))
.判断 (等于 (方法, 2))
    返回 (相减 (x, y))
.判断 (等于 (方法, 3))
    返回 (相乘 (x, y))
.判断 (等于 (方法, 4))
    .如果 (等于 (y, 0))
        返回 (0)
    .否则
        返回 (相除 (x, y))
    .如果结束
    
.默认
    
.判断结束
返回 (0)

.子程序 表达式计算, 双精度小数型, , 
.参数 a, 整数型, , 
.参数 b, 整数型, , 
.参数 c, 整数型, , 
.参数 d, 整数型, , 
.参数 方法1, 整数型, , 
.参数 方法2, 整数型, , 
.参数 方法3, 整数型, , 
.参数 顺序, 整数型, , 

.局部变量 结果, 双精度小数型, , , 
.局部变量 结果1, 双精度小数型, , , 

 ' 顺序：1=123、2=132、3=213、4=231、5=312、6=321
.判断开始 (等于 (顺序, 1))
    赋值 (结果, 计算 (方法1, a, b))
    赋值 (结果, 计算 (方法2, 结果, c))
    赋值 (结果, 计算 (方法3, 结果, d))
.判断 (等于 (顺序, 3))
    赋值 (结果, 计算 (方法2, b, c))
    赋值 (结果, 计算 (方法1, a, 结果))
    赋值 (结果, 计算 (方法3, 结果, d))
.判断 (或者 (等于 (顺序, 5), 等于 (顺序, 2)))
    赋值 (结果1, 计算 (方法3, c, d))
    赋值 (结果, 计算 (方法1, a, b))
    赋值 (结果, 计算 (方法2, 结果, 结果1))
.判断 (等于 (顺序, 4))
    赋值 (结果, 计算 (方法2, b, c))
    赋值 (结果, 计算 (方法3, 结果, d))
    赋值 (结果, 计算 (方法1, a, 结果))
.判断 (等于 (顺序, 6))
    赋值 (结果, 计算 (方法3, c, d))
    赋值 (结果, 计算 (方法2, b, 结果))
    赋值 (结果, 计算 (方法1, a, 结果))
.默认
    
.判断结束
返回 (结果)

.子程序 过滤重复排列, 文本型, , 
.局部变量 优先1, 整数型, , , 
.局部变量 优先2, 整数型, , , 
.局部变量 优先3, 整数型, , , 
.局部变量 方法1, 整数型, , , 
.局部变量 方法2, 整数型, , , 
.局部变量 方法3, 整数型, , , 
.局部变量 类型, 整数型, , , 
.局部变量 文本, 文本型, , , 

赋值 (方法1, 方法类型数组 [1])
赋值 (方法2, 方法类型数组 [2])
赋值 (方法3, 方法类型数组 [3])
赋值 (类型, 方法类型数组 [4])
赋值 (优先1, 优先级 (方法1))
赋值 (优先2, 优先级 (方法2))
赋值 (优先3, 优先级 (方法3))
.判断开始 (或者 (等于 (类型, 11), 等于 (类型, 10), 等于 (类型, 8), 等于 (类型, 9)))
    赋值 (文本, “a”)
.判断 (等于 (类型, 7))
    赋值 (文本, “b”)
.判断 (或者 (等于 (类型, 5), 等于 (类型, 6)))
    赋值 (文本, “c”)
.判断 (或者 (等于 (类型, 2), 等于 (类型, 3), 等于 (类型, 4)))
    赋值 (文本, “d”)
.判断 (等于 (类型, 1))
    赋值 (文本, “e”)
.默认
    
.判断结束
赋值 (文本, 相加 (文本, 到文本 (不同 (优先1, 优先2, 优先3)), 到文本 (不同 (方法1, 方法2, 方法3)), 到文本 (相同 (方法1, 方法2, 方法3))))
返回 (文本)

.子程序 方法文本, 文本型, , 
.参数 方法, 整数型, , 

.局部变量 方法名, 文本型, , , 

.判断开始 (等于 (方法, 1))
    赋值 (方法名, “+”)
.判断 (等于 (方法, 2))
    赋值 (方法名, “-”)
.判断 (等于 (方法, 3))
    赋值 (方法名, “*”)
.默认
    赋值 (方法名, “/”)
.判断结束
返回 (方法名)


.子程序 相反方法, 整数型, , 
.参数 方法, 整数型, , 

.判断开始 (等于 (方法, 1))
    赋值 (方法, 2)
.判断 (等于 (方法, 2))
    赋值 (方法, 1)
.判断 (等于 (方法, 3))
    赋值 (方法, 4)
.判断 (等于 (方法, 4))
    赋值 (方法, 3)
.默认
    
.判断结束
返回 (方法)

.子程序 不同, 整数型, , 
.参数 参数1, 整数型, , 
.参数 参数2, 整数型, , 
.参数 参数3, 整数型, , 

.判断开始 (并且 (等于 (参数1, 参数2), 等于 (参数2, 参数3)))
    返回 (0)
.判断 (并且 (等于 (参数1, 参数2), 不等于 (参数1, 参数3)))
    返回 (参数3)
.判断 (并且 (等于 (参数1, 参数3), 不等于 (参数1, 参数2)))
    返回 (参数2)
.判断 (并且 (不等于 (参数1, 参数2), 等于 (参数2, 参数3)))
    返回 (参数1)
.默认
    返回 (5)
.判断结束


.子程序 相同, 整数型, , 
.参数 参数1, 整数型, , 
.参数 参数2, 整数型, , 
.参数 参数3, 整数型, , 

.判断开始 (并且 (等于 (参数1, 参数2), 等于 (参数2, 参数3)))
    返回 (参数1)
.判断 (并且 (等于 (参数1, 参数2), 不等于 (参数1, 参数3)))
    返回 (参数1)
.判断 (并且 (等于 (参数1, 参数3), 不等于 (参数1, 参数2)))
    返回 (参数1)
.判断 (并且 (不等于 (参数1, 参数2), 等于 (参数2, 参数3)))
    返回 (参数2)
.默认
    返回 (0)
.判断结束


.子程序 _验算_创建完毕, 空白型, , 

赋值 (.内容, 到文本 (牌到数 (_启动窗口.)))
赋值 (.内容, 到文本 (牌到数 (_启动窗口.)))
赋值 (.内容, 到文本 (牌到数 (_启动窗口.)))
赋值 (.内容, 到文本 (牌到数 (_启动窗口.)))
_按钮1_被单击 ()



 ' 不属于任何一个程序集、类模块的函数：
