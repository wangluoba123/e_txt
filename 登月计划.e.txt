 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 555
    高度 = 555
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “登月计划 V 1.1”
    帮助文件名 = “”



.图片 登月仓, " ' 已保存到：D:\易语言学习\Data\登月计划.e\登月仓", , 
.图片 月球, " ' 已保存到：D:\易语言学习\Data\登月计划.e\月球", , 
.图片 底图, " ' 已保存到：D:\易语言学习\Data\登月计划.e\底图", , 
.图片 燃料, " ' 已保存到：D:\易语言学习\Data\登月计划.e\燃料", , 
.图片 爆炸, " ' 已保存到：D:\易语言学习\Data\登月计划.e\爆炸", , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 4 系统核心支持库
 ' ELogoPanel {23A4E57BA5304de090D70C8962302C3B} 1 0 易Logo支持库





.窗口程序集 窗口程序集1, , , 

.程序集变量 能量, 整数型, , , 
.程序集变量 速度, 小数型, , , 飞船的下降速度
.程序集变量 速度最大值, 小数型, , , 
.程序集变量 爆炸值, 小数型, , , 
.程序集变量 停止, 逻辑型, , , 
.程序集变量 爆炸时间, 整数型, , , 
.程序集变量 火焰, 逻辑型, , , 
.程序集变量 排行文件名, 文本型, , , 取运行目录 () ＋ “排行板.INI”
.子程序 __启动窗口_创建完毕, 空白型, , 
0.移动 (0, 取用户区宽度 (), 取用户区高度 ())
.移动 (相加 (相减 (取用户区高度 (), .高度), 6), , )

1.未知支持库函数_28 ()
赋值 (., 1)
赋值 (., 0)
赋值 (., #登月仓)
未知支持库函数_6 ()
230.未知支持库函数_13 ()
赋值 (., 0)
赋值 (., 0)
赋值 (., #燃料)
未知支持库函数_6 ()
未知支持库函数_22 ()
赋值 (., 50)
200.未知支持库函数_13 ()

赋值 (排行文件名, 相加 (取运行目录 (), “\排行板.INI”))
排行板预处理 ()
赋值 (能量, 100)
赋值 (速度, 1)
赋值 (速度最大值, 20)
赋值 (爆炸值, 15)
赋值 (.时钟周期, 100)

.子程序 _时钟1_周期事件, 空白型, , 
.局部变量 飞船的竖坐标, 整数型, , , 

.如果 (等于 (停止, 假))
    赋值 (., 0)
    相除 (速度, 2).未知支持库函数_2 ()
    赋值 (., 1)
    相除 (速度, 2).未知支持库函数_2 ()
    .如果 (等于 (火焰, 真))
        赋值 (., 0)
        未知支持库函数_21 ()
        赋值 (火焰, 假)
        赋值 (., 1)
    .否则
        
        赋值 (., 0)
        未知支持库函数_22 ()
        赋值 (., 1)
    .如果结束
    
    .如果真 (小于 (速度, 速度最大值))
        赋值 (速度, 相加 (速度, 0.5))
        .如果真 (大于或等于 (速度, 0))
            相加 (449, 相乘 (速度, 4)).移动 (相减 (80, 相乘 (速度, 4)), )
        .如果真结束
        
    .如果真结束
    
     ' Logo对象1.置当前对象 ＝ 1
     ' 输出调试文本 (Logo对象1.取竖坐标 ())
    输出调试文本 (速度)
     ' 飞船接触月球
    .如果真 (小于或等于 (未知支持库函数_24 (), -165))
        .如果 (大于或等于 (速度, 爆炸值))
             ' 爆炸
            赋值 (停止, 真)
            赋值 (., #爆炸)
            赋值 (., 50)
            赋值 (.时钟周期, 1000)
            
        .否则
            
            赋值 (停止, 真)
             ' Logo对象1.置当前对象 ＝ 2
             ' Logo对象1.画笔颜色 ＝ #红色
             ' Logo对象1.画笔尺寸 ＝ 10
             ' Logo对象1.右转 (90)
            赋值 (.标题, “登月成功”)
            赋值 (., 0)
            赋值 (.可视, 真)
            赋值 (., 0)
            未知支持库函数_22 ()
            赋值 (., 1)
            排行板登记 ()
            
        .如果结束
        
    .如果真结束
    
.否则
    
    赋值 (爆炸时间, 相加 (爆炸时间, 1))
    .如果真 (大于 (爆炸时间, 10))
        赋值 (爆炸时间, 0)
    .如果真结束
    
.如果结束

.如果真 (等于 (.时钟周期, 2000))
    输出调试文本 (1)
    赋值 (., 1)
    未知支持库函数_22 ()
    赋值 (., 0)
    输出调试文本 (2)
    赋值 (., 0)
    未知支持库函数_22 ()
    赋值 (., 0)
    赋值 (.标题, “登月失败”)
    赋值 (.可视, 真)
    赋值 (.时钟周期, 0)
.如果真结束

.如果真 (等于 (.时钟周期, 1000))
    赋值 (.时钟周期, 2000)
.如果真结束

 ' 输出调试文本 (“时钟......................”)
 ' Logo对象1.置当前对象 ＝ 3
赋值 (.标题, 到文本 (能量))
 ' 输出调试文本 (Logo对象1.取竖坐标 ())

.子程序 _Logo对象1_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 


.如果真 (等于 (键代码, #空格键))
    .如果真 (大于 (能量, 0))
        .如果真 (大于 (速度, 负 (速度最大值)))
            赋值 (速度, 相减 (速度, 1))
        .如果真结束
        
    .如果真结束
    .如果真 (等于 (.可视, 假))
        赋值 (能量, 相减 (能量, 1))
    .如果真结束
    赋值 (火焰, 真)
.如果真结束

 ' 速度 ＝ 速度 － 1
 ' Logo对象1.前进 (1)

 ' 输出调试文本 (能量)
 ' 输出调试文本 (时钟1.时钟周期)
 ' 输出调试文本 (“按键.....”)

.如果真 (等于 (键代码, #F2键))
    赋值 (., 1)
    赋值 (., #登月仓)
    未知支持库函数_21 ()
    230.未知支持库函数_13 ()
    赋值 (能量, 100)
    赋值 (.可视, 假)
    
    赋值 (速度, 1)
    赋值 (停止, 假)
    
    赋值 (., 0)
    200.未知支持库函数_13 ()
    赋值 (.时钟周期, 100)
.如果真结束



.子程序 __启动窗口_将被销毁, 空白型, , 
结束 ()


.子程序 排行板预处理, 空白型, , 
.局部变量 排行数目, 整数型, , , 
.局部变量 计数, 整数型, , , 
.局部变量 姓名, 文本型, , , 
.局部变量 排行分数, 文本型, , , 

赋值 (排行数目, 到数值 (读配置项 (排行文件名, “排行列表”, “总数”, “0”)))
赋值 (.可视, 假)
赋值 (.可视, 假)
赋值 (.可视, 假)
赋值 (.可视, 假)
赋值 (.可视, 假)
赋值 (.可视, 假)
赋值 (.可视, 假)
赋值 (.可视, 假)
赋值 (.可视, 假)
赋值 (.可视, 假)
赋值 (.高度, 相加 (24, 相乘 (16, 排行数目)))

.如果真 (大于或等于 (排行数目, 1))
    赋值 (姓名, 读配置项 (排行文件名, “排行列表”, “排名1姓名”, “0”))
    赋值 (排行分数, 读配置项 (排行文件名, “排行列表”, “排名1分数”, “0”))
    赋值 (.标题, 相加 (“①”, 姓名, “”, 排行分数))
    赋值 (.可视, 真)
.如果真结束

.如果真 (大于或等于 (排行数目, 2))
    赋值 (姓名, 读配置项 (排行文件名, “排行列表”, “排名2姓名”, “0”))
    赋值 (排行分数, 读配置项 (排行文件名, “排行列表”, “排名2分数”, “0”))
    赋值 (.标题, 相加 (“②”, 姓名, “”, 排行分数))
    赋值 (.可视, 真)
.如果真结束

.如果真 (大于或等于 (排行数目, 3))
    赋值 (姓名, 读配置项 (排行文件名, “排行列表”, “排名3姓名”, “0”))
    赋值 (排行分数, 读配置项 (排行文件名, “排行列表”, “排名3分数”, “0”))
    赋值 (.标题, 相加 (“③”, 姓名, “”, 排行分数))
    赋值 (.可视, 真)
.如果真结束

.如果真 (大于或等于 (排行数目, 4))
    赋值 (姓名, 读配置项 (排行文件名, “排行列表”, “排名4姓名”, “0”))
    赋值 (排行分数, 读配置项 (排行文件名, “排行列表”, “排名4分数”, “0”))
    赋值 (.标题, 相加 (“④”, 姓名, “”, 排行分数))
    赋值 (.可视, 真)
.如果真结束

.如果真 (大于或等于 (排行数目, 5))
    赋值 (姓名, 读配置项 (排行文件名, “排行列表”, “排名5姓名”, “0”))
    赋值 (排行分数, 读配置项 (排行文件名, “排行列表”, “排名5分数”, “0”))
    赋值 (.标题, 相加 (“⑤”, 姓名, “”, 排行分数))
    赋值 (.可视, 真)
.如果真结束

.如果真 (大于或等于 (排行数目, 6))
    赋值 (姓名, 读配置项 (排行文件名, “排行列表”, “排名6姓名”, “0”))
    赋值 (排行分数, 读配置项 (排行文件名, “排行列表”, “排名6分数”, “0”))
    赋值 (.标题, 相加 (“⑥”, 姓名, “”, 排行分数))
    赋值 (.可视, 真)
.如果真结束

.如果真 (大于或等于 (排行数目, 7))
    赋值 (姓名, 读配置项 (排行文件名, “排行列表”, “排名7姓名”, “0”))
    赋值 (排行分数, 读配置项 (排行文件名, “排行列表”, “排名7分数”, “0”))
    赋值 (.标题, 相加 (“⑦”, 姓名, “”, 排行分数))
    赋值 (.可视, 真)
.如果真结束

.如果真 (大于或等于 (排行数目, 8))
    赋值 (姓名, 读配置项 (排行文件名, “排行列表”, “排名8姓名”, “0”))
    赋值 (排行分数, 读配置项 (排行文件名, “排行列表”, “排名8分数”, “0”))
    赋值 (.标题, 相加 (“⑧”, 姓名, “”, 排行分数))
    赋值 (.可视, 真)
.如果真结束

.如果真 (大于或等于 (排行数目, 9))
    赋值 (姓名, 读配置项 (排行文件名, “排行列表”, “排名9姓名”, “0”))
    赋值 (排行分数, 读配置项 (排行文件名, “排行列表”, “排名9分数”, “0”))
    赋值 (.标题, 相加 (“⑨”, 姓名, “”, 排行分数))
    赋值 (.可视, 真)
.如果真结束

.如果真 (大于或等于 (排行数目, 10))
    赋值 (姓名, 读配置项 (排行文件名, “排行列表”, “排名10姓名”, “0”))
    赋值 (排行分数, 读配置项 (排行文件名, “排行列表”, “排名10分数”, “0”))
    赋值 (.标题, 相加 (“⑩”, 姓名, “”, 排行分数))
    赋值 (.可视, 真)
.如果真结束




.子程序 排行板登记, 空白型, , 
.局部变量 排行数目, 整数型, , , 
.局部变量 计数, 整数型, , , 
.局部变量 姓名, 文本型, , , 
.局部变量 排行分数, 整数型, , , 
.局部变量 分数1, 整数型, , , 
.局部变量 分数2, 整数型, , , 
.局部变量 分数3, 整数型, , , 
.局部变量 姓名1, 文本型, , , 
.局部变量 姓名2, 文本型, , , 
.局部变量 姓名3, 文本型, , , 

赋值 (排行数目, 到数值 (读配置项 (排行文件名, “排行列表”, “总数”, “0”)))
 ' 姓名 ＝ 读配置项 (排行文件名, “排行列表”, “排名” ＋ 到文本 (排行数目) ＋ “姓名”, “0”)
赋值 (排行分数, 到数值 (读配置项 (排行文件名, “排行列表”, 相加 (“排名”, 到文本 (排行数目), “分数”), “0”)))
.如果真 (或者 (小于 (到数值 (.标题), 到数值 (排行分数)), 等于 (排行数目, 0))) ' 最新的分数小于排行表中的分数
    .如果 (大于 (排行数目, 10)) ' 如果排行表中已有10个人,就不进行处理,否则小于10个人的话,就可以加入排行记录.
        返回 ()
    .否则
        输入框 (“登录成功,名次超前,请输入您的姓名:”, “排行板”, , 姓名, )
        写配置项 (排行文件名, “排行列表”, “总数”, 到文本 (相加 (排行数目, 1)))
        写配置项 (排行文件名, “排行列表”, 相加 (“排名”, 到文本 (相加 (排行数目, 1)), “姓名”), 姓名)
        写配置项 (排行文件名, “排行列表”, 相加 (“排名”, 到文本 (相加 (排行数目, 1)), “分数”), .标题)
        排行板预处理 ()
        返回 ()
    .如果结束
    
.如果真结束

.如果真 (大于 (到数值 (.标题), 到数值 (排行分数))) ' 数据最新的分数大于最后一名的分数,那么有可能重新排序插入原先的数据中,更新排名列表
    输入框 (“登录成功,名次超前,请输入您的姓名:   ”, “排行板”, , 姓名, )
    赋值 (排行分数, 到数值 (.标题))
    .如果 (等于 (排行数目, 10)) ' 如果已有10个排名列表,就直接插入到第10个,然后再排序,否则插入加一个的排序.
        写配置项 (排行文件名, “排行列表”, 相加 (“排名”, 到文本 (排行数目), “姓名”), 姓名)
        写配置项 (排行文件名, “排行列表”, 相加 (“排名”, 到文本 (排行数目), “分数”), .标题)
    .否则
        写配置项 (排行文件名, “排行列表”, “总数”, 到文本 (相加 (排行数目, 1)))
        写配置项 (排行文件名, “排行列表”, 相加 (“排名”, 到文本 (相加 (排行数目, 1)), “姓名”), 姓名)
        写配置项 (排行文件名, “排行列表”, 相加 (“排名”, 到文本 (相加 (排行数目, 1)), “分数”), .标题)
    .如果结束
     ' 下面进行重新排序
    赋值 (排行数目, 到数值 (读配置项 (排行文件名, “排行列表”, “总数”, “0”)))
    .计次循环首 (相减 (排行数目, 1), )
        .计次循环首 (相减 (排行数目, 1), 计数) ' 读前一个与后一个的分数进行比较,如果后面的比前面的高,那么就交换位置.
            赋值 (分数1, 到数值 (读配置项 (排行文件名, “排行列表”, 相加 (“排名”, 到文本 (计数), “分数”), “0”)))
            赋值 (分数2, 到数值 (读配置项 (排行文件名, “排行列表”, 相加 (“排名”, 到文本 (相加 (计数, 1)), “分数”), “0”)))
            .如果真 (小于 (分数1, 分数2))
                赋值 (姓名1, 读配置项 (排行文件名, “排行列表”, 相加 (“排名”, 到文本 (计数), “姓名”), “0”))
                赋值 (姓名2, 读配置项 (排行文件名, “排行列表”, 相加 (“排名”, 到文本 (相加 (计数, 1)), “姓名”), “0”))
                写配置项 (排行文件名, “排行列表”, 相加 (“排名”, 到文本 (计数), “姓名”), 姓名2)
                写配置项 (排行文件名, “排行列表”, 相加 (“排名”, 到文本 (计数), “分数”), 到文本 (分数2))
                写配置项 (排行文件名, “排行列表”, 相加 (“排名”, 到文本 (相加 (计数, 1)), “姓名”), 姓名1)
                写配置项 (排行文件名, “排行列表”, 相加 (“排名”, 到文本 (相加 (计数, 1)), “分数”), 到文本 (分数1))
            .如果真结束
            
        .计次循环尾 ()
    .计次循环尾 ()
     ' 排序完成,下面显示排序后的结果
    排行板预处理 ()
.如果真结束


赋值 (排行数目, 到数值 (读配置项 (排行文件名, “排行列表”, “总数”, “0”)))
赋值 (.高度, 相加 (24, 相乘 (16, 排行数目)))


.子程序 _标签_排行1_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (等于 (信息框 (“真的清除排行板记录吗?”, #确认取消钮, “清除排行板记录”), #确认钮))
    写配置项 (排行文件名, “排行列表”, “总数”, “0”)
    赋值 (.高度, 24)
.如果真结束





 ' 不属于任何一个程序集、类模块的函数：
