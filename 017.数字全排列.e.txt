 ' 文件类型：Windows窗口程序

 ' 程序名称：易语言经典算法 - 数字全排列（回溯法）
 ' 程序描述：　　任意给出从1到N的一个自然数，求出这N个自然数的各种全排列。如N=3时，共有以下6种排列方式：123，132，213，231，312，321。
本程序就是让用户自己任意输入一个从1到9之间的数字，然后求出这些个自然数的全排列。
 ' 程序作者：大有吴涛易语言软件公司
 ' 邮政编码：116001
 ' 联系地址：辽宁省大连市中山区人民路55号亚太国际金融中心
 ' 联系电话：+86(0411)88995831
 ' 传真号码：+86(0411)88995834
 ' 电子信箱：service@dywt.com.cn
 ' 主页地址：http://dywt.com.cn
 ' 版权声明：祝您一帆风顺，心想事成！
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 400
    高度 = 283
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “易语言经典算法 - 数字全排列(回溯法)”
    帮助文件名 = “”





 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 4 系统核心支持库
 ' iext3 {B6F7542F-B8FE-46a8-9605-98856A687097} 2 0 扩展界面支持库三





.窗口程序集 启动窗口程序集, , , 

.程序集变量 数字数组, 整数型, , "9", 存放从１开始到输入的数字之间的所有数字
.程序集变量 排列方案个数, 整数型, , , 存放找到的排列方案个数
.程序集变量 长度, 整数型, , , 存放数字排列的长度
.程序集变量 输入的数字, 整数型, , , 存放从键盘输入的数字
.子程序 __启动窗口_创建完毕, 空白型, , 
 ' 使用算法：回溯法
 ' 问题：数学全排列
 ' 问题描述：
 ' 任意给出从1到N的N个连续的自然数，求出这N个自然数的各种全排列。如N=3时，共有以下6种排列方式：
 ' 123，132，213，231，312，321。
 ' 注意：数字不能重复，N由键盘输入（N<=9）。
 ' 现在我们要求出任意一个１到９自然数的各种全排列

 ' 问题分析：
 ' 应用回溯法，每个数的取法都有N个方向（1――N），当取够N个数时，输出一个排列，然后退后一步，
 ' 取前一个数的下一个方向（即前一个数+1），并且要保证所有数字不能重复。当前数字的所有方向都取完时，
 ' 继续退一步，一直重复到第一个数为止。
 ' 备注：

 ' 初始化，将排列方案个数和长度两个变量清０
赋值 (排列方案个数, 0)
赋值 (长度, 0)

.子程序 _计算图形按钮_被单击, 空白型, , 
.局部变量 询问返回, 整数型, , , 

 ' 接收在输入数字编辑框中输入的数字，并且这个数字只能在１－９之间
.如果 (并且 (大于或等于 (到数值 (.内容), 1), 小于或等于 (到数值 (.内容), 9)))
    .如果真 (大于 (到数值 (.内容), 6))
        赋值 (询问返回, 信息框 (“您输入的数值过大，处理数据时程序将会有一段时间无响应，是否继续？”, 相加 (#是否钮, #询问图标), “请问：”))
        .如果真 (等于 (询问返回, #否钮))
            返回 ()
        .如果真结束
        
    .如果真结束
    清空 () ' 将“显示结果框”清空
     ' 赋值 (输入的数字, 到数值 (.内容))
    
     ' 开始找方案，从１开始
    找排列方案 (1)
     ' 如果输入的数字不在１－９之间，则给出提示信息
.否则
    信息框 (“注意：输入的数字只能在１－９之间！”, 0, )
.如果结束
赋值 (排列方案个数, 0)

.子程序 找排列方案, 空白型, , 寻找排列方案
.参数 数字参数, 整数型, , 

.局部变量 循环变量1, 空白型, , , 
.局部变量 循环变量2, 空白型, , , 
.局部变量 全排列, 文本型, , , 存放一个全排列

 ' 将"全排列"变量清空
赋值 (全排列, “”)
.变量循环首 (1, 输入的数字, 1, 循环变量1)
    .如果真 (等于 (判断数字 (循环变量1, 数字参数), 真))
         ' 判断为真，则能够赋值，且长度加１
        赋值 (数字数组 [数字参数], 循环变量1)
        赋值 (长度, 相加 (长度, 1))
         ' 如果长度达到输入的数字大小，则表示一种组合已经完成，输出结果，相反则继续查找
        .如果 (等于 (长度, 输入的数字))
             ' 显示方案
            .变量循环首 (1, 输入的数字, 1, 循环变量2)
                赋值 (全排列, 相加 (全排列, 到文本 (数字数组 [循环变量2])))
            .变量循环尾 ()
            全排列.加入项目 ()
             ' 找到了一个方案，则方案个数加１
            赋值 (排列方案个数, 相加 (排列方案个数, 1))
        .否则
            找排列方案 (相加 (数字参数, 1))
        .如果结束
         ' 递归的时候一定要把长度减１
        赋值 (长度, 相减 (长度, 1))
    .如果真结束
    
.变量循环尾 ()
赋值 (.内容, 到文本 (排列方案个数))


.子程序 判断数字, 逻辑型, , 判断当前数字是否能赋值给当前数组元素
.参数 当前数字, 整数型, , 存放当前数字
.参数 当前数组值, 整数型, , 存放当前数组的最大成员数

.局部变量 循环变量, 整数型, , , 

 ' 依次判断当前数字是否和数字数组中已经存在的数字相同
.变量循环首 (1, 相减 (当前数组值, 1), 1, 循环变量)
     ' 如果发现数字相同，则返回一个假值
    .如果真 (等于 (数字数组 [循环变量], 当前数字))
        返回 (假)
    .如果真结束
    
.变量循环尾 ()
 ' 找遍后没有发现有相同数字，则返回真
返回 (真)



 ' 不属于任何一个程序集、类模块的函数：
