 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 640
    高度 = 480
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 真
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    窗口类名 = “”
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “DEELX正则表达式测试”
    帮助文件名 = “”



.常量 提示_忽略大小写, "“忽略大小写(IGNORECASE)
匹配时忽略大小写。默认情况下，正则表达式是要区分大小写的。
不管是否指定忽略大小写模式，字符类，比如 [A-Z] 是要区分大小写的。”", , 
.常量 提示_单行模式, "“单行模式(SINGLELINE)
使小数点 "." 可以匹配包含换行符（\n）在内的任意字符。
默认情况下，小数点只匹配换行符以外的任意字符，不匹配换行符。”", , 
.常量 提示_多行模式, "“多行模式(MULTILINE)
使 ^ 符号除了能够匹配字符串开始位置外，还能匹配换行符（\n）之后的位置；
使 $ 符号除了能够匹配字符串结束位置外，还能匹配换行符之前的位置。”", , 
.常量 提示_全局模式, "“全局模式(GLOBAL)
使 \G 可以用来匹配本次查找匹配的开始位置，
对于连续的匹配来说，也就是上次匹配的结束位置。
默认情况下， \G 没有作用。”", , 
.常量 提示_从右向左, "“从右向左(RIGHTTOLEFT)
从右向左的进行匹配。从被匹配字符串的结束位置向前进行查
找匹配，同时，在表达式中也是右侧的表达式先进行匹配。”", , 
.常量 提示_扩展模式, "“扩展模式(EXTENDED)
使本正则支持库忽略表达式中的空白字符，并且把从 # 开始
到该行行末的内容视为注释。默认情况下，正则表达式中的
空格，换行等字符将可以匹配相应的字符。”", , 
.常量 , , , 
.常量 , , , 
.常量 TTS_ALWAYSTIP, "1", , 
.常量 TTS_NOPREFIX, "2", , 
.常量 TTM_ACTIVATE, "1025", , 
.常量 TTM_ADDTOOL, "1028", , 
.常量 TTM_ADDTOOLW, "1074", , 
.常量 TTM_DELTOOL, "1029", , 
.常量 TTM_DELTOOLW, "1075", , 
.常量 TTM_ENUMTOOLS, "1038", , 
.常量 TTM_ENUMTOOLSW, "1082", , 
.常量 TTM_GETCURRENTTOOL, "1039", , 
.常量 TTM_GETCURRENTTOOLW, "1083", , 
.常量 TTM_GETTEXT, "1035", , 
.常量 TTM_GETTEXTW, "1080", , 
.常量 TTM_GETTOOLCOUNT, "1037", , 
.常量 TTM_GETTOOLINFO, "1032", , 
.常量 TTM_GETTOOLINFOW, "1077", , 
.常量 TTM_HITTEST, "1034", , 
.常量 TTM_HITTESTW, "1079", , 
.常量 TTM_NEWTOOLRECT, "1030", , 
.常量 TTM_NEWTOOLRECTW, "1076", , 
.常量 TTM_RELAYEVENT, "1031", , 
.常量 TTM_SETDELAYTIME, "1027", , 
.常量 TTM_SETTOOLINFO, "1033", , 
.常量 TTM_SETTOOLINFOW, "1078", , 
.常量 TTM_UPDATETIPTEXT, "1036", , 
.常量 TTM_UPDATETIPTEXTW, "1081", , 
.常量 TTM_WINDOWFROMPOINT, "1040", , 
.常量 WS_EX_TOPMOST, "8", , 
.常量 TTS_BALLOON, "64", , 气泡提示
.常量 TTM_SETMAXTIPWIDTH, "1048", , 置最大宽度
.常量 TTF_CENTERTIP, "2", , 
.常量 TTF_DI_SETITEM, "32768", , 
.常量 TTF_IDISHWND, "1", , 
.常量 TTF_RTLREADING, "4", , 
.常量 TTF_SUBCLASS, "16", , 
.常量 TTM_GETTIPBKCOLOR, "1046", , 取背景颜色
.常量 TTM_SETTIPBKCOLOR, "1043", , 置背景颜色
.常量 TTM_GETTIPTEXTCOLOR, "1047", , 取文本颜色
.常量 TTM_SETTIPTEXTCOLOR, "1044", , 置文本颜色
.常量 TTDT_AUTOPOP, "2", , 
.常量 TTDT_INITIAL, "3", , 
.常量 TTDT_RESHOW, "1", , 
.常量 TTM_POP, "1052", , 移除气泡提示


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 5 2 系统核心支持库
 ' iext 27bb20fdd3e145e4bee3db39ddd6e64c 2 0 扩展界面支持库一
 ' DeelxRegEx 6CE139EAF3484af3AE10E402BB263AB8 2 1 正则表达式支持库(Deelx版)




数据类型 TOOLINFO, , 
    .成员 cbSize, 整数型, , , 
    .成员 uFlags, 整数型, , , 
    .成员 hwnd, 整数型, , , 
    .成员 uId, 整数型, , , 
    .成员 rect, RECT, , , 
    .成员 hinst, 整数型, , , 
    .成员 lpszText, 文本型, , , 
    .成员 lParam, 整数型, , , 

数据类型 RECT, , 区域
    .成员 Left, 整数型, , , 左
    .成员 Top, 整数型, , , 上
    .成员 Right, 整数型, , , 右
    .成员 Bottom, 整数型, , , 下


.DLL命令 SendMessage_TOOLINFO, 整数型, "user32.dll", "SendMessageA", , 
    .参数 hWnd, 整数型, , 
    .参数 Msg, 整数型, , 
    .参数 wParam, 整数型, , 
    .参数 lParam, TOOLINFO, , 

.DLL命令 CreateWindowEx, 整数型, "user32.dll", "CreateWindowExA", , 
    .参数 dwExStyle, 整数型, , 
    .参数 lpClassName, 文本型, , 
    .参数 lpWindowName, 文本型, , 
    .参数 dwStyle, 整数型, , 
    .参数 x, 整数型, , 
    .参数 y, 整数型, , 
    .参数 nWidth, 整数型, , 
    .参数 nHeight, 整数型, , 
    .参数 hWndParent, 整数型, , 
    .参数 hMenu, 整数型, , 
    .参数 hInstance, 整数型, , 
    .参数 lpParam, 整数型, , 

.DLL命令 GetClientRect, 整数型, "user32.dll", "GetClientRect", , 
    .参数 hwnd, 整数型, , 
    .参数 lpRect, RECT, 传址, 

.DLL命令 SendMessage, 整数型, "user32", "SendMessageA", , 
    .参数 hwnd, 整数型, , 
    .参数 wMsg, 整数型, , 
    .参数 wParam, 整数型, , 
    .参数 lParam, 整数型, , 

.DLL命令 DestroyWindow, 整数型, "user32", "DestroyWindow", , 破坏（即清除）指定的窗口以及它的所有子窗口（在vb里使用：用处不大。原文：it ;    is unlikely to be of much use.）　非零表示成功，零表示失败。会设置GetLastError
    .参数 hwnd, 整数型, , 欲清除的窗口的句柄;

.窗口程序集 窗口程序集_启动窗口, , , 

.程序集变量 工具提示, 工具提示类, , , 
.子程序 __启动窗口_创建完毕, 空白型, , 
工具提示.创建 (真, 假)
工具提示.添加工具提示 (取窗口句柄 (), #提示_忽略大小写, 真, 假)
工具提示.添加工具提示 (取窗口句柄 (), #提示_单行模式, 真, 假)
工具提示.添加工具提示 (取窗口句柄 (), #提示_多行模式, 真, 假)
工具提示.添加工具提示 (取窗口句柄 (), #提示_全局模式, 真, 假)
工具提示.添加工具提示 (取窗口句柄 (), #提示_从右向左, 真, 假)
工具提示.添加工具提示 (取窗口句柄 (), #提示_扩展模式, 真, 假)
.置父窗口 ()

.子程序 __启动窗口_尺寸被改变, 空白型, , 
.局部变量 y, 整数型, , , 
.局部变量 h, 整数型, , , 

赋值 (.宽度, 相除 (取用户区宽度 (), 3))
赋值 (.顶边, .顶边)
赋值 (.左边, 相减 (取用户区宽度 (), .宽度, 8))
赋值 (.高度, 相减 (., .顶边, 8))
连续赋值 (8, .左边, .左边)
连续赋值 (相减 (.左边, 16), .宽度, .宽度)
赋值 (y, 相加 (.顶边, .高度, 5))
赋值 (h, 相减 (., y, 8))
赋值 (.顶边, y)
赋值 (.高度, h)
赋值 (y, 相加 (y, h, 8))
连续赋值 (相减 (.宽度, 16), .宽度, .宽度)
赋值 (.高度, 相减 (.高度, 28))
8.移动 (20, 相减 (.宽度, 16), 相减 (.高度, 28))
0.置宽度 (相减 (.左边, 4))
相加 (.左边, 相除 (相减 (.宽度, .宽度), 2)).移动 (相除 (相减 (., .高度), 2), , )

.子程序 开始匹配, 空白型, , 
赋值 (.图标, {  })
0.置文本 (“正在查找...”)
处理事件 ()

.子程序 结束匹配, 空白型, , 
.参数 匹配数量, 整数型, , 

0.置文本 (相加 (“共搜索到 ”, 到文本 (匹配数量), “ 个匹配结果”))
0.扩展 ()
处理事件 ()

.子程序 _按钮_匹配_被单击, 空白型, , 
.局部变量 DEELX正则, 未知类型0x30001, , , 
.局部变量 搜索结果, 未知类型0x30002, , , 
.局部变量 匹配模式, 整数型, , , 
.局部变量 正则表达式文本, 文本型, , , 
.局部变量 用来匹配的文本, 文本型, , , 
.局部变量 临时文本, 文本型, , , 
.局部变量 n, 整数型, , , 
.局部变量 i, 整数型, , , 
.局部变量 x, 整数型, , , 

开始匹配 ()
.如果真 (等于 (判断输入 (匹配模式), 假))
    结束匹配 (0)
    返回 ()
.如果真结束
赋值 (正则表达式文本, .内容)
赋值 (用来匹配的文本, .内容)
 ' //--------------------------------------
.如果真 (等于 (DEELX正则.未知支持库函数_2 (正则表达式文本, 匹配模式), 假))
    结束匹配 (0)
    信息框 (“创建正则表达式失败”, #信息图标, “错误”)
    返回 ()
.如果真结束
 ' //--------------------------------------
赋值 (搜索结果, DEELX正则.未知支持库函数_5 (用来匹配的文本, ))
.如果真 (搜索结果.未知支持库函数_6 ())
    结束匹配 (0)
    信息框 (“未查找到匹配结果”, #信息图标, “错误”)
    返回 ()
.如果真结束
 ' //--------------------------------------
赋值 (n, 搜索结果.未知支持库函数_19 ())
赋值 (临时文本, 搜索结果.未知支持库函数_20 ())
赋值 (x, .加入项目 (相加 (“[匹配文本] ”, 临时文本), 0, 0, , , ))
.计次循环首 (n, i)
    赋值 (临时文本, 搜索结果.未知支持库函数_21 (i))
    赋值 (临时文本, 相加 (“[子匹配文本”, 到文本 (i), “] ”, 临时文本))
    x.加入项目 (临时文本, 1, 1, , , )
.计次循环尾 ()
结束匹配 (1)

.子程序 _按钮_全部匹配_被单击, 空白型, , 
.局部变量 DEELX正则, 未知类型0x30001, , , 
.局部变量 搜索结果, 未知类型0x30002, , , 
.局部变量 匹配模式, 整数型, , , 
.局部变量 正则表达式文本, 文本型, , , 
.局部变量 用来匹配的文本, 文本型, , , 
.局部变量 临时文本, 文本型, , , 
.局部变量 匹配数量, 整数型, , , 
.局部变量 n, 整数型, , , 
.局部变量 i, 整数型, , , 
.局部变量 x, 整数型, , , 

开始匹配 ()
.如果真 (等于 (判断输入 (匹配模式), 假))
    结束匹配 (0)
    返回 ()
.如果真结束
赋值 (正则表达式文本, .内容)
赋值 (用来匹配的文本, .内容)
 ' //--------------------------------------
.如果真 (等于 (DEELX正则.未知支持库函数_2 (正则表达式文本, 匹配模式), 假))
    结束匹配 (0)
    信息框 (“创建正则表达式失败”, #信息图标, “错误”)
    返回 ()
.如果真结束
 ' //--------------------------------------
赋值 (搜索结果, DEELX正则.未知支持库函数_23 (用来匹配的文本, ))
.如果真 (搜索结果.未知支持库函数_6 ())
    结束匹配 (0)
    信息框 (“未查找到匹配结果”, #信息图标, “错误”)
    返回 ()
.如果真结束
 ' //--------------------------------------
赋值 (n, 搜索结果.未知支持库函数_19 ())
.判断循环首 (等于 (搜索结果.未知支持库函数_6 (), 假))
    赋值 (匹配数量, 相加 (匹配数量, 1))
    赋值 (x, .加入项目 (搜索结果.未知支持库函数_20 (), 0, 0, , , ))
    .计次循环首 (n, i)
        赋值 (临时文本, 搜索结果.未知支持库函数_21 (i))
        x.加入项目 (临时文本, 1, 1, , , )
    .计次循环尾 ()
    赋值 (搜索结果, DEELX正则.未知支持库函数_24 ())
.判断循环尾 ()
结束匹配 (匹配数量)
信息框 (相加 (“共搜索到”, 到文本 (匹配数量), “个匹配结果”), #信息图标, “提示”)

.子程序 判断输入, 逻辑型, , 
.参数 匹配模式, 整数型, 参考, 

.局部变量 正则表达式文本, 文本型, , , 

赋值 (正则表达式文本, .内容)
.如果真 (.选中)
    赋值 (匹配模式, 位或 (匹配模式, #))
.如果真结束
.如果真 (.选中)
    赋值 (匹配模式, 位或 (匹配模式, #))
.如果真结束
.如果真 (.选中)
    赋值 (匹配模式, 位或 (匹配模式, #))
.如果真结束
.如果真 (.选中)
    赋值 (匹配模式, 位或 (匹配模式, #))
.如果真结束
.如果真 (.选中)
    赋值 (匹配模式, 位或 (匹配模式, #))
.如果真结束
.如果真 (.选中)
    赋值 (匹配模式, 位或 (匹配模式, #))
.如果真结束
 ' //------------------------------------------
.如果真 (等于 (正则表达式文本, “”))
    信息框 (“请输入正则表达式文本”, #信息图标, “错误”)
    获取焦点 ()
    返回 (假)
.如果真结束
 ' //------------------------------------------
返回 (真)

.子程序 _按钮_搜索全部_被单击, 空白型, , 
.局部变量 DEELX正则, 未知类型0x30001, , , 
.局部变量 搜索结果数组, 未知类型0x30002, , "0", 
.局部变量 匹配模式, 整数型, , , 
.局部变量 匹配数量, 整数型, , , 
.局部变量 正则表达式文本, 文本型, , , 
.局部变量 用来匹配的文本, 文本型, , , 
.局部变量 临时文本, 文本型, , , 
.局部变量 n, 整数型, , , 
.局部变量 i, 整数型, , , 
.局部变量 x, 整数型, , , 
.局部变量 y, 整数型, , , 

开始匹配 ()
.如果真 (等于 (判断输入 (匹配模式), 假))
    结束匹配 (0)
    返回 ()
.如果真结束
赋值 (正则表达式文本, .内容)
赋值 (用来匹配的文本, .内容)
 ' //--------------------------------------
.如果真 (等于 (DEELX正则.未知支持库函数_2 (正则表达式文本, 匹配模式), 假))
    结束匹配 (0)
    信息框 (“创建正则表达式失败”, #信息图标, “错误”)
    返回 ()
.如果真结束
 ' //--------------------------------------
赋值 (搜索结果数组, DEELX正则.未知支持库函数_25 (用来匹配的文本, ))
赋值 (匹配数量, 取数组成员数 (搜索结果数组))
.如果真 (等于 (匹配数量, 0))
    结束匹配 (0)
    信息框 (“未查找到匹配结果”, #信息图标, “错误”)
    返回 ()
.如果真结束
输出调试文本 (相加 (“搜索结果数量”, 到文本 (匹配数量)))
 ' //--------------------------------------
赋值 (n, 搜索结果数组.未知支持库函数_19 ( [1]))
.计次循环首 (匹配数量, y)
    赋值 (x, .加入项目 (搜索结果数组.未知支持库函数_20 ( [y]), 0, 0, , , ))
    .计次循环首 (n, i)
        赋值 (临时文本, 搜索结果数组.未知支持库函数_21 ( [y], i))
        x.加入项目 (临时文本, 1, 1, , , )
    .计次循环尾 ()
.计次循环尾 ()
未知函数_67174737 ()
信息框 (相加 (“共搜索到”, 到文本 (匹配数量), “个匹配结果”), #信息图标, “提示”)

.类模块 工具提示类, , , 

.程序集变量 hToolTips, 整数型, , , 
.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用
赋值 (hToolTips, 0)

.子程序 创建, 整数型, 公开, 成功返回工具提示控件句柄，失败返回0
.参数 是否支持多行, 逻辑型, 可空, 默认为假
.参数 是否为气泡提示, 逻辑型, 可空, 默认为假

.局部变量 style, 整数型, , , 

.如果真 (不等于 (hToolTips, 0))
    返回 (0)
.如果真结束
赋值 (style, #TTS_ALWAYSTIP)
.如果真 (是否为气泡提示)
    赋值 (style, 位或 (style, #TTS_BALLOON))
.如果真结束
赋值 (hToolTips, CreateWindowEx (#WS_EX_TOPMOST, “tooltips_class32”, “”, style, 0, 0, 0, 0, 0, 0, 0, 0))
.如果真 (并且 (不等于 (hToolTips, 0), 是否支持多行))
    SendMessage (hToolTips, #TTM_SETMAXTIPWIDTH, 0, 1024)
.如果真结束
返回 (hToolTips)

.子程序 添加工具提示, 整数型, 公开, 成功返回非0，失败返回0
.参数 控件句柄, 整数型, , 
.参数 提示内容, 文本型, , 
.参数 提示工具位置, 逻辑型, 可空, 注明：为真表示总显示在控件的中下方，为假表示跟随鼠标。默认为假
.参数 支持转义符, 逻辑型, 可空, 为真时,支持\r、\n、\t等转义符

.局部变量 tip, TOOLINFO, , , 
.局部变量 strText, 文本型, , , 

赋值 (strText, 提示内容)
.如果真 (支持转义符)
    赋值 (strText, 子文本替换 (strText, “\r”, 字符 (13), , , 真))
    赋值 (strText, 子文本替换 (strText, “\n”, 字符 (10), , , 真))
    赋值 (strText, 子文本替换 (strText, “\t”, 字符 (9), , , 真))
.如果真结束

.如果真 (不等于 (hToolTips, 0))
    赋值 (tip.cbSize, 相乘 (11, 4))
    赋值 (tip.uFlags, #TTF_SUBCLASS)
    .如果真 (提示工具位置)
        赋值 (tip.uFlags, 位或 (#TTF_SUBCLASS, #TTF_CENTERTIP))
    .如果真结束
    赋值 (tip.hwnd, 控件句柄)
    赋值 (tip.uId, 0)
    赋值 (tip.hinst, 0)
    赋值 (tip.lpszText, strText)
    GetClientRect (控件句柄, tip.rect)
    返回 (SendMessage_TOOLINFO (hToolTips, #TTM_ADDTOOL, 0, tip))
.如果真结束
返回 (0)

.子程序 删除工具提示, 空白型, 公开, 没有返回值
.参数 控件句柄, 整数型, , 

.局部变量 info, TOOLINFO, , , 

.如果真 (不等于 (hToolTips, 0))
    赋值 (info.hwnd, 控件句柄)
    SendMessage_TOOLINFO (hToolTips, #TTM_DELTOOL, 0, info)
.如果真结束


.子程序 取提示背景颜色, 整数型, 公开, 返回颜色值
.如果真 (不等于 (hToolTips, 0))
    返回 (SendMessage (hToolTips, #TTM_GETTIPBKCOLOR, 0, 0))
.如果真结束
返回 (0)

.子程序 置提示背景颜色, 整数型, 公开, 返回值没有意义
.参数 颜色值, 整数型, , 

.如果真 (不等于 (hToolTips, 0))
    返回 (SendMessage (hToolTips, #TTM_SETTIPBKCOLOR, 颜色值, 0))
.如果真结束
返回 (0)

.子程序 取提示文本颜色, 整数型, 公开, 
.如果真 (不等于 (hToolTips, 0))
    返回 (SendMessage (hToolTips, #TTM_GETTIPTEXTCOLOR, 0, 0))
.如果真结束
返回 (0)

.子程序 置提示文本颜色, 整数型, 公开, 返回值没有意义
.参数 颜色值, 整数型, , 

.如果真 (不等于 (hToolTips, 0))
    返回 (SendMessage (hToolTips, #TTM_SETTIPTEXTCOLOR, 颜色值, 0))
.如果真结束
返回 (0)

.子程序 更新提示文本, 空白型, 公开, 没有返回值
.参数 控件句柄, 整数型, , 
.参数 提示内容, 文本型, , 

.局部变量 info, TOOLINFO, , , 

.如果真 (不等于 (hToolTips, 0))
    赋值 (info.hwnd, 控件句柄)
    赋值 (info.lpszText, 提示内容)
    SendMessage_TOOLINFO (hToolTips, #TTM_UPDATETIPTEXT, 0, info)
.如果真结束


.子程序 置提示延时, 整数型, 公开, 返回值没有意义
.参数 弹出延时, 整数型, , 
.参数 显示延时, 整数型, , 

.如果真 (不等于 (hToolTips, 0))
    .如果真 (大于 (弹出延时, 0))
        SendMessage (hToolTips, #TTM_SETDELAYTIME, #TTDT_INITIAL, 弹出延时)
    .如果真结束
    .如果真 (大于 (显示延时, 0))
        返回 (SendMessage (hToolTips, #TTM_SETDELAYTIME, #TTDT_AUTOPOP, 显示延时))
    .如果真结束
    
.如果真结束
返回 (0)

.子程序 销毁, 整数型, 公开, 销毁工具提示
.局部变量 ret, 整数型, , , 

.如果真 (不等于 (hToolTips, 0))
    赋值 (ret, DestroyWindow (hToolTips))
    .如果真 (不等于 (ret, 0))
        赋值 (hToolTips, 0)
    .如果真结束
    
.如果真结束
返回 (ret)

.子程序 取回句柄, 整数型, 公开, 
返回 (hToolTips)

.子程序 移除工具提示, 整数型, , 没有意义的返回值
.如果真 (不等于 (hToolTips, 0))
    返回 (SendMessage (hToolTips, #TTM_POP, 0, 0))
.如果真结束
返回 (0)

.子程序 置入句柄, 整数型, 公开, 
.参数 欲置入的句柄, 整数型, , 

.局部变量 ret, 整数型, , , 

赋值 (ret, hToolTips)
赋值 (hToolTips, 欲置入的句柄)
返回 (ret)

.子程序 置提示宽度, 整数型, 公开, 返回之前提示的宽度。注：一般在工具提示控件具有“多行”属性时使用。
.参数 宽度, 整数型, , 以像素为单位

.如果真 (不等于 (hToolTips, 0))
    返回 (SendMessage (hToolTips, #TTM_SETMAXTIPWIDTH, 0, 宽度))
.如果真结束
返回 (0)

.子程序 取控件总数, 整数型, 公开, 返回控件数目
.如果真 (不等于 (hToolTips, 0))
    返回 (SendMessage (hToolTips, #TTM_GETTOOLCOUNT, 0, 0))
.如果真结束
返回 (0)

.子程序 取所有控件句柄, 空白型, 公开, 没有返回值
.参数 控件句柄数组, 整数型, 参考 数组, 

.局部变量 info, TOOLINFO, , , 
.局部变量 count, 整数型, , , 
.局部变量 n, 整数型, , , 

.如果真 (不等于 (hToolTips, 0))
    赋值 (count, 取控件总数 ())
    .如果真 (大于 (count, 0))
        重定义数组 (控件句柄数组, 假, 0)
        赋值 (info.cbSize, 相乘 (11, 4))
        .计次循环首 (count, n)
            SendMessage_TOOLINFO (hToolTips, #TTM_ENUMTOOLS, 相减 (n, 1), info)
            .如果真 (不等于 (info.hwnd, 0))
                加入成员 (控件句柄数组, info.hwnd)
            .如果真结束
            
        .计次循环尾 ()
    .如果真结束
    
.如果真结束


.子程序 取提示文本, 整数型, 公开, 成功返回非0，失败返回0
.参数 控件句柄, 整数型, , 
.参数 缓冲区, 文本型, 参考, 
.参数 缓冲区大小, 整数型, , 

.局部变量 info, TOOLINFO, , , 
.局部变量 ret, 整数型, , , 

.如果真 (不等于 (hToolTips, 0))
    赋值 (info.cbSize, 相乘 (11, 4))
    赋值 (info.hwnd, 控件句柄)
    赋值 (info.lpszText, 取空白文本 (缓冲区大小))
    赋值 (ret, SendMessage_TOOLINFO (hToolTips, #TTM_GETTOOLINFO, 0, info))
    赋值 (缓冲区, info.lpszText)
.如果真结束
返回 (ret)

.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用
.如果真 (不等于 (hToolTips, 0))
    DestroyWindow (hToolTips)
.如果真结束



 ' 不属于任何一个程序集、类模块的函数：
