 ' 文件类型：Windows模块源码

 ' 程序名称：禁止重复运行
 ' 程序描述：
 ' 程序作者：本源码来自易语言资源网(www.5A5X.com)
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：             易语言资源网注意事项
--============   www.5A5X.com  =============--
* 易语言资源网为易语言官方站、易语言官方论坛提供辅助资源站；本易语言资源网( www.5A5X.com)所有软件和资料均为软件作者提供和网友推荐发布而来，其版权归该软件和程序源码的合法拥有者所有，本站易语言资源网整理收集仅供易语言用户学习和易语言技术研究探讨使用，不得用于任何商业用途。如果由于以上原因造成的版权纠纷本站概不负责！
* 本站资源未经许可,任何网站不得非法盗链及抄袭本站资源；如引用，请注明来自易语言资源网，谢谢合作！
--============   www.5A5X.com  =============--
 ' 版本号：1.0
 ' 创建号：0.0



.常量 ERROR_ALREADY_EXISTS, "183", , 不能创建一个文件因为该文件已经存在
.常量 GW_CHILD, "5", , 
.常量 SW_RESTORE, "9", , 用原来的大小和位置显示一个窗口
.常量 GW_HWNDNEXT, "2", , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 5 0 系统核心支持库





.DLL命令 API_释放互斥体, 整数型, "kernel32", "ReleaseMutex", , 
    .参数 hMutex, 整数型, , 

.DLL命令 API_取错误信息, 整数型, "", "GetLastError", , 针对之前调用的api函数，用这个函数取得扩展错误信息（在vb里使用：在vb中，用Err对象的GetLastError属性获取GetLastError的值。这样做是必要的，因为在api调用返回以及vb调用继续执行期间，vb有时会重设GetLastError的值）  由api函数决定。请参考api32.txt文件，其中列出了一系列错误常数；都以ERROR_前缀起头。常用的错误代码见下表

.DLL命令 API_关闭内核对象, 整数型, "kernel32", "CloseHandle", , 关闭一个内核对象。其中包括文件、文件映射、进程、线程、安全和同步对象等。涉及文件处理时，这个函数通常与vb的close命令相似。应尽可能的使用close，因为它支持vb的差错控制。注意这个函数使用的文件句柄与vb的文件编号是完全不同的  非零表示成功，零表示失败。会设置GetLastError
    .参数 对象句柄, 整数型, , 欲关闭的一个对象的句柄;

.DLL命令 API_创建一个互斥体, 整数型, "kernel32", "CreateMutexA", , 创建一个互斥体（MUTEX）  如执行成功，就返回互斥体对象的句柄；零表示出错。会设置GetLastError。即使返回的是一个有效句柄，但倘若指定的名字已经存在，GetLastError也会设为ERROR_ALREADY_EXISTS
    .参数 互斥体结构, 整数型, , SECURITY_ATTRIBUTES，指定一个SECURITY_ATTRIBUTES结构，或传递零值（将参数声明为ByVal As 并传递零值），表示使用不允许继承的默认描述符
    .参数 拥有互斥体, 整数型, , 如创建进程希望立即拥有互斥体，则设为TRUE。一个互斥体同时只能由一个线程拥有
    .参数 互斥体对象的名字, 文本型, 传址, 指定互斥体对象的名字。用vbNull创建一个未命名的互斥体对象。如已经存在拥有这个名字的一个事件，则打开现有的已命名互斥体。这个名字可能不与现有的事件、信号机、可等待计时器或文件映射相符;

.DLL命令 API_置属性列项, 整数型, "user32", "SetPropA", , 增加或修改属性列项
    .参数 hwnd, 整数型, , 
    .参数 lpString, 文本型, , 
    .参数 hData, 整数型, , 

.DLL命令 API_取得窗口, 整数型, "user32", "GetWindow", , 获得一个窗口的句柄，该窗口与某源窗口有特定的关系  由wCmd决定的一个窗口的句柄。如没有找到相符窗口，或者遇到错误，则返回零值。会设置GetLastError
    .参数 源窗口, 整数型, , 源窗口
    .参数 关系, 整数型, , 指定结果窗口与源窗口的关系，它们建立在下述常数基础上：;GW_CHILD：寻找源窗口的第一个子窗口;GW_HWNDFIRST：为一个源子窗口寻找第一个兄弟（同级）窗口，或寻找第一个顶级窗口;GW_HWNDLAST：为一个源子窗口寻找最后一个兄弟（同级）窗口，或寻找最后一个顶级窗口;GW_HWNDNEXT：为源窗口寻找下一个兄弟窗口;GW_HWNDPREV：为源窗口寻找前一个兄弟窗口;GW_OWNER：寻找窗口的所有者;

.DLL命令 API_取屏幕句柄, 整数型, "user32", "GetDesktopWindow", , 获得代表整个屏幕的一个窗口（桌面窗口）句柄  桌面窗口的句柄

.DLL命令 API_取属性列项, 整数型, "user32", "GetPropA", , 从窗口属性表列中返回数据句柄
    .参数 hwnd, 整数型, , 
    .参数 lpString, 文本型, , 

.DLL命令 API_判断窗口最小化, 整数型, "user32", "IsIconic", , 判断窗口是否已最小化  非零表示成功，零表示失败
    .参数 窗口句柄, 整数型, , 待检测窗口的句柄;

.DLL命令 API_设为前台窗口, 整数型, "user32", "SetForegroundWindow", , 将窗口设为系统的前台窗口。这个函数可用于改变用户目前正在操作的应用程序  非零表示成功，零表示失败。会设置GetLastError
    .参数 hwnd, 整数型, , 带到前台的窗口;

.DLL命令 API_显示窗口, 整数型, "user32", "ShowWindow", , 控制窗口的可见性（在vb里使用：针对vb窗体及控件，请使用对应的vb属性）  如窗口之前是可见的，则返回TRUE（非零），否则返回FALSE（零）
    .参数 hwnd, 整数型, , 窗口句柄，要向这个窗口应用由nCmdShow指定的命令
    .参数 nCmdShow, 整数型, , 为窗口指定可视性方面的一个命令。请用下述任何一个常数;SW_HIDE：隐藏窗口，活动状态给令一个窗口;SW_MINIMIZE：最小化窗口，活动状态给令一个窗口;SW_RESTORE：用原来的大小和位置显示一个窗口，同时令其进入活动状态;SW_SHOW：用当前的大小和位置显示一个窗口，同时令其进入活动状态;SW_SHOWMAXIMIZED：最大化窗口，并将其激活;SW_SHOWMINIMIZED：最小化窗口，并将其激活;SW_SHOWMINNOACTIVE：最小化一个窗口，同时不改变活动窗口;SW_SHOWNA：用当前的大小和位置显示一个窗口，不改变活动窗口;SW_SHOWNOACTIVATE：用最近的大小和位置显示一个窗口，同时不改变活动窗口;SW_SHOWNORMAL：与SW_RESTORE相同;

.DLL命令 API_创建事件对象, 整数型, "kernel32", "CreateEventA", , 创建一个事件对象  如执行成功，返回事件对象句柄；零表示出错。会设置GetLastError。即使返回一个有效的句柄，但同时指出指定的名字已经存在，GetLastError也会设为ERROR_ALREADY_EXISTS
    .参数 安全性结构, 整数型, , SECURITY_ATTRIBUTES，指定一个结构，用于设置对象的安全特性。如变成ByVal As 并传递零值，则表明使用对象默认的安全设置
    .参数 人工或自动事件, 逻辑型, , 如果为TRUE，表示创建一个人工重设事件；如果为FALSE，表示创建一个自动重设事件
    .参数 是否内部触发, 逻辑型, , 如事件应内部进入触发状态，则为TRUE
    .参数 事件对象名, 文本型, , 指定事件对象的名字。用vbNull创建一个未命名事件对象。如已经存在拥有这个名字的一个事件，则现有的命名事件就会打开。这个名字可能不与一个现有互斥体、信号机、可等待计时器或文件映射的名字相符;

.程序集 程序集1, , , 

.子程序 _启动子程序, 整数型, , 请在本子程序中放置易模块初始化代码
 ' --========  易语言资源网  (www.5A5X.com)  ======--
 ' 努力创建完善、持续更新的易语言学习例程源码资源站
 ' --================   www.5A5X.com  ===========--
 ' --==================   易语言资源网注意事项  ================--
 ' * 易语言资源网为易语言官方站、易语言官方论坛提供辅助资源站；
 ' 本易语言资源网( www.5A5X.com)所有软件和资料均为软件作者提
 ' 供和网友推荐发布而来，其版权归该软件和程序源码的合法拥有者所
 ' 有，本站易语言资源网整理收集仅供易语言用户学习和易语言技术研
 ' 究探讨使用，不得用于任何商业用途。如果由于以上原因造成的版权
 ' 纠纷本站概不负责！
 ' * 本站资源未经许可，任何网站不得非法盗链及抄袭本站资源；如引用
 ' 页面，请注明来自易语言资源网，谢谢合作！
 ' --=====================   www.5A5X.com  ================--

_临时子程序 () ' 在初始化代码执行完毕后调用测试代码
返回 (0) ' 可以根据您的需要返回任意数值

.子程序 _临时子程序, 空白型, , 
 ' 本名称子程序用作测试程序用，仅在开发及调试环境中有效，编译发布程序前将被系统自动清空，请将所有用作测试的临时代码放在本子程序中。 ***注意不要修改本子程序的名称、参数及返回值类型。

 ' {0-0===两个判断是否重复运行，其实就是通过获取它的错误信息来判断的，如果同名标识句柄之前已经创建过的，就会出现ERROR_ALREADY_EXISTS(183)的错误信息，通过此来进行判断比较准确===0-0}

.子程序 是否重复运行1, 逻辑型, 公开, 利用互斥对象
.参数 标识, 文本型, 可空, 默认为51A8F107-E6FA-4352-BC49-C1A68523C650，可以使用工具来获取一个新的guid

.局部变量 互斥体句柄, 整数型, , , 
.局部变量 运行名, 文本型, , , 
.局部变量 句柄, 整数型, , , 
.局部变量 错误信息, 整数型, , , 

.如果真 (是否为空 (标识))
    赋值 (标识, “51A8F107-E6FA-4352-BC49-C1A68523C650”) ' 这里使用guid实现无重复
.如果真结束
赋值 (互斥体句柄, API_创建一个互斥体 (0, 1, 相加 (标识, 字符 (0))))
赋值 (错误信息, API_取错误信息 ())
.如果真 (等于 (错误信息, #ERROR_ALREADY_EXISTS))
    API_释放互斥体 (互斥体句柄)
    API_关闭内核对象 (互斥体句柄)
    返回 (真)
     ' 本源码来自易语言资源网(www.5A5X.com)
.如果真结束


返回 (假)


 ' #ERROR_ALREADY_EXISTS 值是183，意思：不能创建一个文件因为该文件已经存在。

 ' 进程的互斥运行

 ' 正常情况下，一个进程的运行一般是不会影响到其他正在运行的进程的。但是对于某些有特殊要求的如以独占方式使用串行口等硬件设备的程序就要求在其进程运行期间不允许其他试图使用此端口设备的程序运行的，而且此类程序通常也不允许运行同一个程序的多个实例。这就引出了进程互斥的问题。

 ' 实现进程互斥的核心思想比较简单：进程在启动时首先检查当前系统是否已经存在有此进程的实例，如果没有，进程将成功创建并设置标识实例已经存在的标记。此后再创建进程时将会通过该标记而知晓其实例已经存在，从而保证进程在系统中只能存在一个实例。具体可以采取内存映射文件、有名事件量、有名互斥量以及全局共享变量等多种方法来实现。下面就分别对其中具有代表性的有名互斥量和全局共享变量这两种方法进行介绍：

 ' // 创建互斥量
 ' HANDLE m_hMutex = CreateMutex(NULL, FALSE, "Sample07");
 ' // 检查错误代码
 ' if (GetLastError() == ERROR_ALREADY_EXISTS) {
 ' // 如果已有互斥量存在则释放句柄并复位互斥量
 ' CloseHandle(m_hMutex);
 ' m_hMutex = NULL;
 ' // 程序退出
 ' return FALSE;
 ' }


 ' 上面这段代码演示了有名互斥量在进程互斥中的用法。代码的核心是CreateMutex（）对有名互斥量的创建。CreateMutex（）函数可用来创建一个有名或无名的互斥量对象，其函数原型为：

 ' HANDLE CreateMutex(
 ' LPSECURITY_ATTRIBUTES lpMutexAttributes, // 指向安全属性的指针
 ' BOOL bInitialOwner, // 初始化互斥对象的所有者
 ' LPCTSTR lpName // 指向互斥对象名的指针
 ' );


 ' 如果函数成功执行，将返回一个互斥量对象的句柄。如果在CreateMutex（）执行前已经存在有相同名字的互斥量，函数将返回这个已经存在互斥量的句柄，并且可以通过GetLastError（）得到错误代码ERROR_ALREADY_EXIST。可见，通过对错误代码ERROR_ALREADY_EXIST的检测可以实现CreateMutex（）对进程的互斥。

 ' 建立互斥体，用来同步。如果一个线程获取了互斥体，则要获取该互斥体的第二个线程将被挂起，直到第一个线程释放该互斥体。
 ' 参数
 ' lpMutexAttributes
 ' 指向一个SECURITY_ATTRIBUTES结构的指针，这个结构决定互斥体句柄是否被子进程继承。
 ' bInitialOwner
 ' 布尔类型，决定互斥体的创建者是否为拥有者
 ' lpName
 ' 指向互斥体名字字符串的指针。互斥体可以有名字。
 ' 互斥体的好处是可以在进程间共享

 ' 心得体会：
 ' CreateMutex() 用于有独占要求的程序 (在其进程运行期间不允许其他使用此端口设备的程序运行，或不允许同名程序运行)。
 ' 如有同名程序运行，则通过 GetLastError（）得到错误代码 ERROR_ALREADY_EXIST。
 ' 一般情况下：一进入调试阶段，进程管理器中就出现了samp进程，执行到CreateMutex时返回进程句柄，执行到if(GetLastError() == ERROR_ALREADY_EXISTS ) 进行判断时，跳过不执行if中的内容，所以表示没有互斥。
 ' 调试之前先运行debug中的.exe再调试：一进入调试阶段，进程管理器中就出现了两个samp进程，执行到CreateMutex时返回进程句柄，执行到if(GetLastError() == ERROR_ALREADY_EXISTS ) 进行判断时，执行if中的内容，表示有互斥。


.子程序 是否重复运行2, 逻辑型, 公开, 利用事件对象
.参数 标识, 文本型, 可空, 默认为51A8F107-E6FA-4352-BC49-C1A68523C650，可以使用工具来获取一个新的guid

.局部变量 事件对象句柄, 整数型, , , 
.局部变量 运行名, 文本型, , , 
.局部变量 句柄, 整数型, , , 
.局部变量 错误信息, 整数型, , , 

.如果真 (是否为空 (标识))
    赋值 (标识, “51A8F107-E6FA-4352-BC49-C1A68523C650”) ' 这里使用guid实现无重复
.如果真结束
赋值 (事件对象句柄, API_创建事件对象 (0, 假, 假, 标识))
赋值 (错误信息, API_取错误信息 ())
.如果真 (等于 (错误信息, #ERROR_ALREADY_EXISTS))
    API_关闭内核对象 (事件对象句柄)
    返回 (真)
.如果真结束
 ' 本源码来自易语言资源网(www.5A5X.com)

返回 (假)
 ' API_创建事件对象
 ' 该函数创建一个事件同步对象,并返回该对象的句柄

 ' 安全性结构     一般为空，易里赋值0
 ' 人工或自动事件               创建的事件是自动复位还是人工复位     ,如果真,人工复位,
 ' 一旦该事件被设置为有信号,则它一直会等到Reset事件()API被调用时才会恢复为无信号.     如果为假,事件被设置为有信号,则当有一个wait到它的Thread时, 该事件就会自动复位,变成无信号.
 ' 初始状态             初始状态,真,有信号,假无信号
 ' 名称                           事件对象名

 ' 一个事件被创建以后,可以用OpenEventA()API来获得它的句柄,用CloseHandle() 来关闭它,用SetEvent()或PulseEvent()来设置它使其有信号,用ResetEvent() 来使其无信号,用WaitForSingleObject()或WaitForMultipleObjects()来等待 其变为有信号.

 ' PulseEvent()是一个比较有意思的使用方法,正如这个API的名字,它使一个事件 对象的状态发生一次脉冲变化,从无信号变成有信号再变成无信号,而整个操作是原子的. 对自动复位的事件对象,它仅释放第一个等到该事件的thread（如果有),而对于 人工复位的事件对象,它释放所有等待的thread.
 ' GetLastError
 ' 针对之前调用的api函数，用这个函数取得扩展错误信息（在vb里使用：在vb中，用Err对象的GetLastError属性获取GetLastError的值。这样做是必要的，因为在api调用返回以及vb调用继续执行期间，vb有时会重设GetLastError的值）  由api函数决定。请参考api32.txt文件，其中列出了一系列错误常数；都以ERROR_前缀起头


.子程序 显示窗口, 空白型, 公开, 
.参数 标识, 文本型, , 这个必须和“置属性列项”子程序的一致
.参数 数据, 整数型, 可空, 这个必须和“置属性列项”子程序的一致

.局部变量 窗口句柄, 整数型, , , 

.如果真 (是否为空 (数据))
    赋值 (数据, 123456789)
.如果真结束
赋值 (窗口句柄, API_取得窗口 (API_取屏幕句柄 (), #GW_CHILD)) ' 获取屏幕的一个窗口
.判断循环首 (大于 (窗口句柄, 0))
    .如果真 (等于 (API_取属性列项 (窗口句柄, 标识), 数据)) ' 取句柄的属性
        .如果真 (大于 (API_判断窗口最小化 (窗口句柄), 0)) ' 是否最小化
            API_显示窗口 (窗口句柄, #SW_RESTORE) ' 用原来的大小和位置显示一个窗口
        .如果真结束
        API_设为前台窗口 (窗口句柄)
        跳出循环 ()
    .如果真结束
    赋值 (窗口句柄, API_取得窗口 (窗口句柄, #GW_HWNDNEXT))
.判断循环尾 ()
' 本源码来自易语言资源网(www.5A5X.com)

.子程序 置属性列项, 空白型, 公开, 
.参数 窗口句柄, 整数型, , 
.参数 标识, 文本型, , 这个必须和“显示窗口”子程序的一致
.参数 数据, 整数型, 可空, 这个必须和“显示窗口”子程序的一致

.如果真 (是否为空 (数据))
    赋值 (数据, 123456789)
.如果真结束
API_置属性列项 (窗口句柄, 标识, 数据)


 ' 不属于任何一个程序集、类模块的函数：
