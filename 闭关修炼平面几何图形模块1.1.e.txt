 ' 文件类型：Windows模块源码

 ' 程序名称：闭关修炼几何图形模块1.1
 ' 程序描述：本模块完全采用易语言实现，作者汤东林，联系电话：1368610323。
目前本程序还处于底层开发之中，暂不打算开放或出卖源代码。开放部分程序接口仅供试用验证。
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.1
 ' 创建号：0.0

窗口 窗口前台
    左边 = 0
    顶边 = 0
    宽度 = 791
    高度 = 523
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 3
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 3
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    窗口类名 = “”
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “”
    帮助文件名 = “”

窗口 窗口后台
    左边 = 50
    顶边 = 50
    宽度 = 367
    高度 = 202
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 假
    禁止 = 假
    边框 = 0
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    窗口类名 = “”
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “”
    帮助文件名 = “”



.常量 零4, "0.0001", , 1e-004已偏大了点，精度应该还可以吧。
.常量 零5, "1e-005", , 1e-005已足够小了，推荐使用这个常数。
.常量 零6, "1e-006", , 1e-006目前还能用，将使用1e-007的程序修改为1e-006，往往就没有问题了。
.常量 零7, "1e-007", , 1e-007 太小了，程序经常出错，使用时要特别注意。
.常量 不可能距离, "1e+014", , 
.常量 命令_隐藏菜单, "“隐藏菜单”", 公开, 
.常量 命令_空, "“”", 公开, 
.常量 命令_绘线段, "“绘线段”", 公开, 
.常量 命令_绘线段_空, "“”", 公开, 
.常量 命令_绘线段_输入起点, "“输入起点：”", 公开, 
.常量 命令_绘线段_输入下一点, "“输入下一点：”", 公开, 
.常量 命令_绘线段_撤消, "“撤消”", 公开, 
.常量 命令_绘线段_确认, "“确认”", 公开, 
.常量 命令_绘圆, "“绘圆”", 公开, 
.常量 , , , 
.常量 命令_绘圆方式_圆心加半径, "1", , 
.常量 命令_绘圆方式_两点, "2", , 
.常量 命令_绘圆方式_三点, "3", , 
.常量 命令_绘圆_第一点, "4", , 
.常量 命令_绘圆_第二点, "5", , 
.常量 命令_绘圆_第三点, "6", , 
.常量 图元_点, "1", 公开, 
.常量 图元_直线, "2", 公开, 
.常量 图元_线段, "3", 公开, 
.常量 图元_圆, "4", , 
.常量 图元_圆弧, "5", , 
.常量 图元_三角形, "6", , 
.常量 图元_矩形, "7", , 
.常量 两直线关系_重合, "1", , 
.常量 两直线关系_平行, "2", , 
.常量 两直线关系_相交, "3", , 
.常量 两直线关系_垂直, "4", , 
.常量 线段_两端延伸, "0", , 
.常量 线段_起点延伸, "1", , 
.常量 线段_尾点延伸, "2", , 
.常量 点在线段上_在起点, "0", , 
.常量 点在线段上_在尾点, "1", , 
.常量 点在线段上_在中点, "2", , 
.常量 点在线段上_在三分点, "3", , 
.常量 点在线段上_在四分点, "4", , 
.常量 点在线段上_在五分点, "5", , 
.常量 点与直线_关系不清, "0", , 
.常量 点与直线_点在直线左侧, "1", , 
.常量 点与直线_点在直线上, "2", , 
.常量 点与直线_点在直线右侧, "4", , 
.常量 点与线段_关系不清, "0", , 
.常量 点与线段_点在线段前面, "7", , 
.常量 点与线段_点在端点之间, "56", , 
.常量 点与线段_点在线段后面, "448", , 
.常量 点与线段_点在线段左侧, "73", , 
.常量 点与线段_点在线段右侧, "146", , 
.常量 点与线段_点在直线上, "292", , 
.常量 点与线段_点在线段左前侧, "1", , 
.常量 点与线段_点在线段正前面, "2", , 
.常量 点与线段_点在线段右前侧, "4", , 
.常量 点与线段_点在线段左正侧, "8", , 
.常量 点与线段_点在线段上, "16", , 
.常量 点与线段_点在线段右正侧, "32", , 
.常量 点与线段_点在线段左后侧, "64", , 
.常量 点与线段_点在线段正后面, "128", , 
.常量 点与线段_点在线段右后侧, "256", , 
.常量 点与三角形_点在三角形形心上, "1", , 
.常量 点与三角形_点在三角形上, "2", , 
.常量 点与三角形_点在三角形内, "3", , 
.常量 点与三角形_点在三角形外, "4", , 
.常量 点与矩形_点在矩形形心上, "1", , 
.常量 点与矩形_点在矩形上, "2", , 
.常量 点与矩形_点在矩形内, "3", , 
.常量 点与矩形_点在矩形外, "4", , 
.常量 点与圆_点在圆心, "1", , 
.常量 点与圆_点在圆上, "2", , 
.常量 点与圆_点在圆内, "3", , 
.常量 点与圆_点在圆外, "4", , 
.常量 直线与圆_直线经过圆心, "1", , 
.常量 直线与圆_直线与圆相交, "2", , 
.常量 直线与圆_直线与圆相切, "3", , 
.常量 直线与圆_直线与圆相离, "4", , 
.常量 线段与圆_圆心在线段起点上且线段尾点在圆内, "1", , 
.常量 线段与圆_圆心在线段起点上且线段尾点在圆上, "2", , 
.常量 线段与圆_圆心在线段起点上且线段尾点在圆外, "3", , 
.常量 线段与圆_圆心在线段尾点上且线段起点在圆内, "4", , 
.常量 线段与圆_圆心在线段尾点上且线段起点在圆上, "5", , 
.常量 线段与圆_圆心在线段尾点上且线段起点在圆外, "6", , 
.常量 线段与圆_圆心在线段一端点上且另一起点在圆内, "7", , 
.常量 线段与圆_圆心在线段一端点上且另一起点在圆上, "8", , 
.常量 线段与圆_圆心在线段一端点上且另一起点在圆外, "9", , 
.常量 线段与圆_圆心在线段起点上, "10", , 
.常量 线段与圆_圆心在线段尾点上, "11", , 
.常量 线段与圆_圆心在线段一端点上, "12", , 
.常量 线段与圆_圆心在线段上且线段两端点都在圆内, "13", , 
.常量 线段与圆_圆心在线段上且线段起点在圆内尾点在圆上, "14", , 
.常量 线段与圆_圆心在线段上且线段起点在圆上尾点在圆内, "15", , 
.常量 线段与圆_圆心在线段上且线段一端点圆内一端点在圆上, "16", , 
.常量 线段与圆_圆心在线段上且线段两端点都在圆上, "17", , 
.常量 线段与圆_圆心在线段上且线段起点在圆内尾点在圆外, "18", , 
.常量 线段与圆_圆心在线段上且线段起点在圆外尾点在圆内, "19", , 
.常量 线段与圆_圆心在线段上且线段一端点圆内一端点在圆外, "20", , 
.常量 线段与圆_圆心在线段上且线段起点在圆上尾点在圆外, "21", , 
.常量 线段与圆_圆心在线段上且线段起点在圆外尾点在圆上, "22", , 
.常量 线段与圆_圆心在线段上且线段一端点圆上一端点在圆外, "23", , 
.常量 线段与圆_圆心在线段上且线段两端点都在圆外, "24", , 
.常量 线段与圆_圆心在线段上且起点在圆内, "25", , 
.常量 线段与圆_圆心在线段上且起点在圆上, "26", , 
.常量 线段与圆_圆心在线段上且起点在圆外, "27", , 
.常量 线段与圆_圆心在线段上且尾点在圆内, "28", , 
.常量 线段与圆_圆心在线段上且尾点在圆上, "29", , 
.常量 线段与圆_圆心在线段上且尾点在圆外, "30", , 
.常量 线段与圆_圆心在线段上且一端点在圆内, "31", , 
.常量 线段与圆_圆心在线段上且一端点在圆上, "32", , 
.常量 线段与圆_圆心在线段上且一端点在圆外, "33", , 
.常量 线段与圆_圆心在线段上, "34", , 
.常量 线段与圆_圆心在直线上且线段两端点都在圆内, "35", , 
.常量 线段与圆_圆心在直线上且线段起点在圆内尾点在圆上, "36", , 
.常量 线段与圆_圆心在直线上且线段起点在圆上尾点在圆内, "37", , 
.常量 线段与圆_圆心在直线上且线段一端点圆内一端点在圆上, "38", , 
.常量 线段与圆_圆心在直线上且线段两端点都在圆上, "39", , 
.常量 线段与圆_圆心在直线上且线段起点在圆内尾点在圆外, "40", , 
.常量 线段与圆_圆心在直线上且线段起点在圆外尾点在圆内, "41", , 
.常量 线段与圆_圆心在直线上且线段一端点圆内一端点在圆外, "42", , 
.常量 线段与圆_圆心在直线上且线段起点在圆上尾点在圆外, "43", , 
.常量 线段与圆_圆心在直线上且线段起点在圆外尾点在圆上, "44", , 
.常量 线段与圆_圆心在直线上且线段一端点圆上一端点在圆外, "45", , 
.常量 线段与圆_圆心在直线上且线段两端点都在圆外, "46", , 
.常量 线段与圆_圆心在直线上且起点在圆内, "47", , 
.常量 线段与圆_圆心在直线上且起点在圆上, "48", , 
.常量 线段与圆_圆心在直线上且起点在圆外, "49", , 
.常量 线段与圆_圆心在直线上且尾点在圆内, "50", , 
.常量 线段与圆_圆心在直线上且尾点在圆上, "51", , 
.常量 线段与圆_圆心在直线上且尾点在圆外, "52", , 
.常量 线段与圆_圆心在直线上且一端点在圆内, "53", , 
.常量 线段与圆_圆心在直线上且一端点在圆上, "54", , 
.常量 线段与圆_圆心在直线上且一端点在圆外, "55", , 
.常量 线段与圆_圆心在直线上, "56", , 
.常量 线段与圆_线段两端点都在圆内, "57", , 
.常量 线段与圆_线段起点在圆内尾点在圆上, "58", , 
.常量 线段与圆_线段起点在圆上尾点在圆内, "59", , 
.常量 线段与圆_线段一端点圆内一端点在圆上, "60", , 
.常量 线段与圆_线段两端点都在圆上, "61", , 
.常量 线段与圆_线段起点在圆内尾点在圆外, "62", , 
.常量 线段与圆_线段起点在圆外尾点在圆内, "63", , 
.常量 线段与圆_线段一端点圆内一端点在圆外, "64", , 
.常量 线段与圆_线段起点在圆上尾点在圆外且线段与圆相切, "65", , 
.常量 线段与圆_线段起点在圆上尾点在圆外, "66", , 
.常量 线段与圆_线段起点在圆外尾点在圆上且线段与圆相切, "67", , 
.常量 线段与圆_线段起点在圆外尾点在圆上, "68", , 
.常量 线段与圆_线段一端点圆上一端点在圆外且线段与圆相切, "69", , 
.常量 线段与圆_线段一端点圆上一端点在圆外, "70", , 
.常量 线段与圆_线段两端点都在圆外且线段与圆相交, "71", , 
.常量 线段与圆_线段两端点都在圆外且直线与圆相交, "72", , 
.常量 线段与圆_线段两端点都在圆外且线段与圆相切, "73", , 
.常量 线段与圆_线段两端点都在圆外且直线与圆相切, "74", , 
.常量 线段与圆_线段两端点都在圆外且线段与圆相离, "75", , 
.常量 线段与圆_线段两端点都在圆外且直线与圆相离, "76", , 
.常量 线段与圆_线段两端点都在圆外, "77", , 
.常量 线段与圆_线段与圆有交点, "78", , 
.常量 线段与圆_圆在线段前面, "79", , 
.常量 线段与圆_圆在线段后面, "80", , 
.常量 线段与圆_圆在线段左侧, "81", , 
.常量 线段与圆_圆在线段右侧, "82", , 
.常量 线段与圆_圆在线段左前侧, "83", , 
.常量 线段与圆_圆在线段正前面, "84", , 
.常量 线段与圆_圆在线段右前侧, "85", , 
.常量 线段与圆_圆在线段左正侧, "86", , 
.常量 线段与圆_圆在线段右正侧, "87", , 
.常量 线段与圆_圆在线段左后侧, "88", , 
.常量 线段与圆_圆在线段正后面, "89", , 
.常量 线段与圆_圆在线段右后侧, "90", , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 5 0 系统核心支持库
 ' EDataStructure 0AFF5F28B2CB42ce906AA27D6E485457 2 0 数据结构支持库
 ' eCalc 306AA9E31B5940399723021A0D782077 2 0 数值计算支持库
 ' EXMLParser BE2297B7415349c8A55BC9DFEB6DD11A 2 0 XML解析支持库




数据类型 特性, , 
    .成员 句柄, 整数型, , , 
    .成员 存在, 逻辑型, , , 
    .成员 修改, 逻辑型, , , 一个图元的顶点等控制数据是否允许被修改。当前图形空间中的子图形中的图元都是不允许被修改的。如果要修改子图形中的图元，必须打开子图形，将真实数据映射出来，才能与用户进行数据交互。
    .成员 可见, 逻辑型, , , 
    .成员 颜色, 整数型, , , 
    .成员 图层, 整数型, , , 

数据类型 图形空间, , 图形空间是画板空间的子空间，也是数据空间的局部映射，是数据空间到图像空间之间的最终接口空间，只有经由顶层空间，才能将数据空间中的图形图像信息显示出来。
    .成员 空间, 空间, , , 
    .成员 子空间, 整数型, , "1", 一个空间可以包含很多子空间，可以通过类的方法打开这些子空间，以便获取或更新子空间中的数据。
    .成员 图形集, 图形集, , , 在一个空间内，可以有多个图元，这个单个的图元全部组成一个集合，并在系统中注册一个集合句柄。
    .成员 子图形集集合, 子图形集集合, , , 子空间传来的图元信息被注册处理后的对象，有可能和其本来的信息不一致。同一个子空间的所有图元被注册为同一个集合句柄。
    .成员 临时图形集集合, 子图形集集合, , , 临时图形集之所以采用图形集集合的方式，是因为进行复杂图形的临时定位时，需要这种结构。在进行临时绘图时，应尽量采用临时坐标集，而不要采用临时图形集。如果采用临时图形集，使用之前要进行重定义，使用之后要立即清空或至少应将其存在属性置为假，以免被系统再次调用。
    .成员 临时坐标集, 坐标集, , , 临时坐标集如何被系统处理，由其类型值确定，如果为直线类型数据，就顺序画出连续直线，如果为圆，就每两个点表达一个圆，依次为圆心，半径(忽略第二个结构Y)，如此方法来使用。

数据类型 空间, 公开, 访问图形的数据时，除了访问图形自身的图元数据外，还要访问子图形中的图元映射数据。修改图形的图元数据时，不能修改其子图形的图元映射数据，修改了也没有意义。要修改子图元的图元映射数据，必须打开子图形，然后修改其树结构中的数据。
    .成员 坐标系图形, 坐标系图形, , , 空间的坐标原点在母空间坐标系中的位置
    .成员 比例, 坐标比例, , , 缩放因子，影响空间尺长度量相对于在母空间内量度比值的物理量，此缩放系数不改变物体的实际尺寸。在提取图形信息时是从最低层子空间逐层向上级母空间转换的，转换的仪依据就是子母空间的相对特性，此系数就是影向空间各轴向的缩放比例。
    .成员 时间, 双精度小数型, , , 时间因子，影响空间作用范围内物质世界运动快慢的物理量。时间因子是一个比值，是对母空间时间流失速度的修改。
    .成员 能量, 双精度小数型, , , 能量因子，影响空间时间变化快慢的物理量，一般应置为1，表示时间即不加速流失，也不减速流失。

数据类型 图元, , 无论是图形的图元，或是图形中子图形映射出来的图元，都要在系统中注册一个句柄，以便进行集中管理，子图形的所有图元映射与子图形一起拥用一个句柄。
    .成员 句柄, 整数型, , , 
    .成员 常规, 特性, , , 
    .成员 类别, 整数型, , , 每一个图形都有一个类别，属常量。暂设为：0,图形;1点;2,直线;3,线段;4,圆;5,圆弧。
    .成员 属性, 未知类型0x20001, , , 属性用节点来表示，可能通可属性名来访问。
    .成员 顶点, 坐标, , "1", 一个图形至少应该有一个控制顶点，如果是图形对象而不是基本图元，可将其置为原点位置。

数据类型 选择集, , 
    .成员 句柄, 整数型, , , 
    .成员 图形集, 图形集, , , 
    .成员 子图形集集合, 子图形集集合, , , 

数据类型 子图形集集合, , 
    .成员 句柄, 整数型, , , 
    .成员 存在, 整数型, , , 
    .成员 名称, 文本型, , , 
    .成员 图形集, 图形集, , "1", 

数据类型 图形集, , 图形集有三种存在方式，一是作为顶级空间的全部图元的集合，二是作为一个选择集中全部图元的集合，三是某一个子空间映射到母空间中的全部子图元的集合。
    .成员 句柄, 整数型, , , 如果是顶级空间自身的图元组成的集合或为选择集中的图形集，本句柄应置为0，如果为某个子图形映射到母空间中的图元集合，此句柄应为子图形的句柄。
    .成员 点图形集, 点图形集, , , 
    .成员 线段图形集, 线段图形集, , , 
    .成员 三角形图形集, 三角形集, , , 
    .成员 矩形图形集, 矩形集, , , 
    .成员 圆集, 圆集, , , 

数据类型 坐标系图形, , 
    .成员 句柄, 整数型, , , 
    .成员 存在, 逻辑型, , , 一个几何图形是否合法的判断。
    .成员 特性, 特性, , , 
    .成员 坐标系, 坐标系, , , 

数据类型 坐标系, , 
    .成员 原点, 坐标, , , 
    .成员 旋转角, 双精度小数型, , , 
    .成员 X轴点, 坐标, , , 
    .成员 Y轴点, 坐标, , , 

数据类型 坐标, 公开, 
    .成员 x, 双精度小数型, , , 
    .成员 y, 双精度小数型, , , 

数据类型 坐标集, 公开, 
    .成员 句柄, 整数型, , , 
    .成员 名称, 文本型, , , 
    .成员 坐标, 坐标, , "1", 

数据类型 坐标比例, 公开, 
    .成员 SX, 双精度小数型, , , 
    .成员 SY, 双精度小数型, , , 

数据类型 度分秒, , 
    .成员 度, 双精度小数型, , , 
    .成员 分, 双精度小数型, , , 
    .成员 秒, 双精度小数型, , , 

数据类型 直线一般式, 公开, 一般式
    .成员 A, 双精度小数型, , , 
    .成员 B, 双精度小数型, , , 
    .成员 C, 双精度小数型, , , 
    .成员 J, 双精度小数型, , , 直线的方位角，在标准方程式里面，没有这一概念。有了它就可以给直线定义一个参考正方向了，然后转动直线时就很方便写程序代码。

数据类型 直线法线式, , 
    .成员 角, 双精度小数型, , , 法线角
    .成员 P, 双精度小数型, , , 直线到原点距离

数据类型 点, , 
    .成员 坐标, 坐标, , , 

数据类型 点图形, , 
    .成员 句柄, 整数型, , , 
    .成员 存在, 逻辑型, , , 一个几何图形是否合法的判断。
    .成员 特性, 特性, , , 
    .成员 坐标, 坐标, , , 

数据类型 点图形集, , 
    .成员 句柄, 整数型, , , 
    .成员 特性, 特性, , , 
    .成员 点, 点图形, , "1", 

数据类型 线段图形, , 
    .成员 句柄, 整数型, , , 
    .成员 存在, 逻辑型, , , 一个几何图形是否合法的判断。
    .成员 特性, 特性, , , 
    .成员 线段, 线段, , , 

数据类型 线段图形集, , 
    .成员 句柄, 整数型, , , 
    .成员 特性, 特性, , , 
    .成员 线段图形, 线段图形, , "1", 

数据类型 线段, 公开, 
    .成员 起点, 坐标, , , 
    .成员 尾点, 坐标, , , 
    .成员 直线, 直线一般式, , , 线段作为直线的一部分，应该具备直线所应有的一般定义信息，此法也使得即便是线段的起点和尾点相重合后，仍然可以进行各种变换运算。

数据类型 线段集, , 
    .成员 句柄, 整数型, , , 
    .成员 特性, 特性, , , 
    .成员 线段, 线段, , "1", 

数据类型 三角形图形, , 
    .成员 句柄, 整数型, , , 
    .成员 存在, 逻辑型, , , 一个几何图形是否合法的判断。
    .成员 特性, 特性, , , 
    .成员 三角形, 三角形, , , 

数据类型 三角形图形集, , 
    .成员 句柄, 整数型, , , 
    .成员 特性, 特性, , , 
    .成员 三角形图形, 三角形图形, , "1", 

数据类型 三角形, , 
    .成员 句柄, 整数型, , , 
    .成员 存在, 逻辑型, , , 一个几何图形是否合法的判断。
    .成员 特性, 特性, , , 
    .成员 顶点A, 坐标, , , 
    .成员 顶点B, 坐标, , , 
    .成员 顶点C, 坐标, , , 

数据类型 三角形集, , 
    .成员 句柄, 整数型, , , 
    .成员 特性, 特性, , , 
    .成员 三角形, 三角形, , "1", 

数据类型 三角形信息, , 三角形在实际几何计算中有非常重要的作用,可以大规模地简化程序代码量,但也会因此计算大量的无用信息
    .成员 边长a, 双精度小数型, , , 
    .成员 边长b, 双精度小数型, , , 
    .成员 边长c, 双精度小数型, , , 
    .成员 角A, 双精度小数型, , , 
    .成员 角B, 双精度小数型, , , 
    .成员 角C, 双精度小数型, , , 
    .成员 边线AB, 线段, , , 
    .成员 边线BC, 线段, , , 
    .成员 边线CA, 线段, , , 
    .成员 高线A, 线段, , , 垂线
    .成员 高线B, 线段, , , 垂线
    .成员 高线C, 线段, , , 垂线
    .成员 中线A, 线段, , , 
    .成员 中线B, 线段, , , 
    .成员 中线C, 线段, , , 
    .成员 角平分线A, 线段, , , 
    .成员 角平分线B, 线段, , , 
    .成员 角平分线C, 线段, , , 
    .成员 边垂点a, 坐标, , , 
    .成员 边垂点b, 坐标, , , 
    .成员 边垂点c, 坐标, , , 
    .成员 边中点a, 坐标, , , 
    .成员 边中点b, 坐标, , , 
    .成员 边中点c, 坐标, , , 
    .成员 形心O, 坐标, , , 
    .成员 内圆心, 坐标, , , 内切圆圆心.在角平分线交点上.
    .成员 外圆心, 坐标, , , 外接圆圆心
    .成员 内径r, 双精度小数型, , , 内切圆半径
    .成员 外径R, 双精度小数型, , , 外接圆半径
    .成员 周长L, 双精度小数型, , , 
    .成员 面积S, 双精度小数型, , , 

数据类型 圆图形, , 
    .成员 句柄, 整数型, , , 
    .成员 存在, 逻辑型, , , 一个几何图形是否合法的判断。
    .成员 特性, 特性, , , 
    .成员 圆, 圆, , , 

数据类型 圆图形集, , 
    .成员 句柄, 整数型, , , 
    .成员 特性, 特性, , , 
    .成员 圆图形, 圆图形, , "1", 

数据类型 圆, , 一般式 X*X+Y*Y+DX+EY+F=0
    .成员 句柄, 整数型, , , 
    .成员 存在, 逻辑型, , , 一个几何图形是否合法的判断。
    .成员 特性, 特性, , , 
    .成员 圆心, 坐标, , , 圆心
    .成员 半径, 双精度小数型, , , 半径
    .成员 D, 双精度小数型, , , 
    .成员 E, 双精度小数型, , , 
    .成员 F, 双精度小数型, , , 

数据类型 圆集, , 
    .成员 句柄, 整数型, , , 
    .成员 特性, 特性, , , 
    .成员 圆, 圆, , "1", 

数据类型 矩形图形, , 
    .成员 句柄, 整数型, , , 
    .成员 存在, 逻辑型, , , 一个几何图形是否合法的判断。
    .成员 特性, 特性, , , 
    .成员 矩形, 矩形, , , 

数据类型 矩形图形集, , 
    .成员 句柄, 整数型, , , 
    .成员 特性, 特性, , , 
    .成员 矩形图形, 矩形图形, , "1", 

数据类型 矩形, , 
    .成员 句柄, 整数型, , , 
    .成员 存在, 逻辑型, , , 一个几何图形是否合法的判断。
    .成员 特性, 特性, , , 
    .成员 顶点A, 坐标, , , 
    .成员 顶点B, 坐标, , , 
    .成员 顶点C, 坐标, , , 
    .成员 顶点D, 坐标, , , 

数据类型 矩形集, , 
    .成员 句柄, 整数型, , , 
    .成员 常规, 特性, , , 
    .成员 矩形, 矩形, , "1", 

数据类型 亿位点, , 
    .成员 格点, 格点, , , 
    .成员 百万位点, 百万位点, , "1", 

数据类型 百万位点, , 
    .成员 格点, 格点, , , 
    .成员 万位点, 万位点, , "1", 

数据类型 万位点, , 
    .成员 格点, 格点, , , 
    .成员 百位点, 百位点, , "1", 

数据类型 百位点, , 
    .成员 格点, 坐标, , , 
    .成员 个位点, 个位点, , "1", 

数据类型 个位点, , 
    .成员 网格点, 格点, , "1", 

数据类型 格点, , 
    .成员 句柄, 长整数型, , , 
    .成员 坐标, 坐标, , , 

数据类型 系统状态, , 
    .成员 捕捉, 捕捉, , , 
    .成员 鼠标, 鼠标, , , 
    .成员 命令, 命令, , , 

数据类型 命令, , 
    .成员 绘图命令, 绘图命令, , , 
    .成员 透明命令, 透明命令, , , 

数据类型 绘图命令, , 
    .成员 允许绘图, 逻辑型, , , 
    .成员 接收命令, 逻辑型, , , 
    .成员 当前命令, 文本型, , , 
    .成员 当前命令状态, 文本型, , , 

数据类型 透明命令, , 
    .成员 允许使用, 逻辑型, , , 
    .成员 接收命令, 逻辑型, , , 
    .成员 当前命令, 文本型, , , 
    .成员 当前命令状态, 文本型, , , 

数据类型 鼠标, , 
    .成员 画板位置, 坐标, , , 在画板中的位置
    .成员 空间位置, 坐标, , , 

数据类型 捕捉, , 
    .成员 启动, 逻辑型, , , 
    .成员 成功, 逻辑型, , , 
    .成员 标记, 捕捉标记, , , 
    .成员 到, 捕捉到, , , 
    .成员 坐标, 坐标, , , 

数据类型 捕捉到, , 
    .成员 启动, 逻辑型, , , 
    .成员 端点, 逻辑型, , , 
    .成员 最近点, 逻辑型, , , 
    .成员 垂足点, 逻辑型, , , 

数据类型 捕捉标记, , 
    .成员 比例, 双精度小数型, , , 只能为正数
    .成员 端点, 标记, , , 
    .成员 最近点, 标记, , , 
    .成员 垂足点, 标记, , , 

数据类型 标记, , 
    .成员 颜色, 整数型, , , 
    .成员 线段, 线段, , "1", 

数据类型 系统组件, , 
    .成员 画板后台, 画板, , , 
    .成员 画板前台, 画板, , , 
    .成员 列表框菜单, 列表框, , , 

数据类型 绘图功能, 公开, 实时绘图功能类集合
    .成员 绘图, 类绘图接口, , , 
    .成员 线段, 类绘线段, , , 绘线段

.全局变量 _图形空间, 图形空间, 公开, , 顶层空间保存了系统正在处理的全部图形图像信息，它是数据空间的局部映射，数据空间中的数据需经过顶层空间才能显示到屏幕上。但不是所有的数据空间都一定要显示到屏幕上，所以不是所有的数据空间中的数据都一定要转换到顶层空间。并且，在进行数据空间中的数据向顶层空间转换时，不需要确保真实性和完整性。比如数据空间中的一个子图元因为比例问题在顶层空间中显得过小，可以将其全部或部分转化为一个点来考虑。
.全局变量 _系统组件, 系统组件, , , 
.全局变量 _系统状态, 系统状态, , , 
.全局变量 _绘, 绘图功能, , , 
.全局变量 _类数据空间, 类数据空间, , , 
.全局变量 _类图形空间, 类图形空间, , , 
.全局变量 _类图形空间缩放, 类图形空间缩放, , , 
.全局变量 _类图形空间查找, 类图形空间查找, , , 
.全局变量 _类绘图后台, 类绘图后台, , , 
.全局变量 _类绘图前台, 类绘图前台, , , 

.程序集 程序集1, , , 本方法已包装了最常规的程序初始化程序，可以直接调用绘图子程序进行绘图。

.子程序 _启动子程序, 整数型, , 请在本子程序中放置易模块初始化代码
_临时子程序 () ' 在初始化代码执行完毕后调用测试代码
返回 (0) ' 可以根据您的需要返回任意数值

.子程序 _临时子程序, 空白型, , 
 ' 本名称子程序用作测试程序用，仅在开发及调试环境中有效，编译发布程序前将被系统自动清空，请将所有用作测试的临时代码放在本子程序中。 ***注意不要修改本子程序的名称、参数及返回值类型。
载入 (窗口前台, , 假)

.类模块 类角度, , , 

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 求象限, 整数型, , 返回值为1、2、3、4，对应四个象限
.参数 参dx, 双精度小数型, , 横坐标增量,可以为负数
.参数 参dy, 双精度小数型, , 纵坐标增量,可以为负数

.判断开始 (大于或等于 (参dx, 0))
    .如果 (大于或等于 (参dy, 0))
        返回 (1)
    .否则
        返回 (4)
    .如果结束
    
.判断 (大于或等于 (参dy, 0))
    返回 (2)
.默认
    返回 (3)
.判断结束


.子程序 到弧度, 双精度小数型, , 返回弧度,
.参数 参角度, 双精度小数型, , 

返回 (相除 (相乘 (参角度, #pi), 180))

.子程序 到度数, 双精度小数型, , 度分秒的形式转为十进制度数
.参数 参度分秒, 度分秒, , 

.局部变量 整部, 整数型, , , 
.局部变量 小部, 双精度小数型, , , 

赋值 (参度分秒.度, 相加 (参度分秒.度, 相除 (参度分秒.分, 60), 相除 (参度分秒.秒, 3600)))
赋值 (整部, 绝对取整 (取绝对值 (参度分秒.度)))
赋值 (小部, 相减 (取绝对值 (参度分秒.度), 整部))
.判断开始 (小于 (整部, 360))
    
.默认
    赋值 (整部, 求余数 (整部, 360))
.判断结束
赋值 (参度分秒.度, 相乘 (取符号 (参度分秒.度), 相加 (整部, 小部)))
返回 (参度分秒.度)

.子程序 到度分秒, 度分秒, , 十进制度数转为度分秒的形式
.参数 参角度, 双精度小数型, , 

.局部变量 度分秒, 度分秒, 静态, , 这里返回度数部分

赋值 (度分秒.度, 绝对取整 (参角度))
赋值 (度分秒.分, 绝对取整 (相乘 (相减 (参角度, 度分秒.度), 60)))
赋值 (度分秒.秒, 四舍五入 (相乘 (相减 (参角度, 度分秒.度, 相除 (度分秒.分, 60)), 3600), ))
.判断开始 (不等于 (度分秒.秒, 60))
    
.默认
    赋值 (度分秒.秒, 0)
    赋值 (度分秒.分, 相加 (度分秒.分, 1))
.判断结束

.判断开始 (不等于 (度分秒.分, 60))
    
.默认
    赋值 (度分秒.分, 0)
    赋值 (度分秒.度, 相加 (度分秒.度, 1))
.判断结束

.判断开始 (不等于 (度分秒.度, 360))
    
.默认
    赋值 (度分秒.度, 0)
.判断结束

返回 (度分秒)

.类模块 类弧度, , , 

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 到角度, 双精度小数型, , 返回角度,
.参数 参弧度, 双精度小数型, , 

返回 (相除 (相乘 (参弧度, 180), #pi))

.子程序 反正弦, 双精度小数型, , ［0，π］
.参数 正弦值, 双精度小数型, , ［-1，1］

.局部变量 x, 双精度小数型, , , 
.局部变量 y, 双精度小数型, , , 
.局部变量 A, 双精度小数型, , , 

.判断开始 (等于 (正弦值, 0))
    返回 (0)
.默认
    赋值 (y, 正弦值)
    赋值 (x, 求平方根 (相减 (1, 相乘 (y, y))))
    赋值 (A, 求反正切 (相除 (取绝对值 (y), x)))
    .判断开始 (大于或等于 (y, 0))
        返回 (A)
    .默认
        返回 (负 (A))
    .判断结束
    
.判断结束


.子程序 反余弦, 双精度小数型, , ［0，π］
.参数 余弦值, 双精度小数型, , ［-1，1］

.局部变量 x, 双精度小数型, , , 
.局部变量 y, 双精度小数型, , , 
.局部变量 A, 双精度小数型, , , 

.判断开始 (等于 (余弦值, 0))
    返回 (相除 (#pi, 2))
.默认
    赋值 (x, 余弦值)
    赋值 (y, 求平方根 (相减 (1, 相乘 (x, x))))
    赋值 (A, 求反正切 (相除 (y, 取绝对值 (x))))
    .判断开始 (大于 (x, 0))
        返回 (A)
    .默认
        返回 (相减 (#pi, A))
    .判断结束
    
.判断结束


.子程序 反正切, 双精度小数型, , 
.参数 正切值, 双精度小数型, , 

返回 (求反正切 (正切值))

.类模块 类数, , , 

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.类模块 类坐标, , , 

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 对称316, 坐标, , 
.参数 参被对称点, 坐标, , 
.参数 参对称参照点, 坐标, 可空, 如果未提供坐标对称参照点，将以坐标原点进行对称操作。

.局部变量 对称点, 坐标, , , 

赋值 (对称点.x, 相减 (参对称参照点.x, 相减 (参被对称点.x, 参对称参照点.x)))
赋值 (对称点.y, 相减 (参对称参照点.y, 相减 (参被对称点.y, 参对称参照点.y)))
 ' 对称点.z ＝ 参对称参照点.z － (参被对称点.z － 参对称参照点.z)
返回 (对称点)

.子程序 平移316, 坐标, , 
.参数 参被平移点, 坐标, , 
.参数 参平移分量, 坐标, , 

.局部变量 平移点, 坐标, , , 

赋值 (平移点.x, 相加 (参被平移点.x, 参平移分量.x))
赋值 (平移点.y, 相加 (参被平移点.y, 参平移分量.y))
 ' 平移点.z ＝ 参被平移点.z ＋ 参平移分量.z
返回 (平移点)

.子程序 求平移量316, 坐标, , 
.参数 参起点, 坐标, , 
.参数 参尾点, 坐标, , 

.局部变量 平移量, 坐标, , , 

赋值 (平移量.x, 相减 (参尾点.x, 参起点.x))
赋值 (平移量.y, 相减 (参尾点.y, 参起点.y))
返回 (平移量)

.子程序 缩放316, 坐标, , 
.参数 参被缩放的点, 坐标, , 
.参数 参缩放中心点, 坐标, 可空, 
.参数 参缩放比例, 坐标比例, , 

.局部变量 被缩放的点, 坐标, , , 
.局部变量 缩放中心点, 坐标, , , 
.局部变量 缩放比例, 坐标比例, , , 
.局部变量 缩放后的点, 坐标, , , 
.局部变量 矩阵运算, 未知类型0x30002, , , 
.局部变量 坐标矩阵, 双精度小数型, , "1,3", 
.局部变量 变换矩阵, 双精度小数型, , "3,3", 

赋值 (被缩放的点, 参被缩放的点)
赋值 (缩放中心点, 参缩放中心点)
赋值 (缩放比例, 参缩放比例)
 ' 求坐标矩阵-----------------------------------------------------------------------------------------
赋值 (坐标矩阵 [1], 被缩放的点.x)
赋值 (坐标矩阵 [2], 被缩放的点.y)
赋值 (坐标矩阵 [3], 1)
 ' 平移坐标系到缩放中心.-----------------------------------------------------------------------------------------
赋值 (变换矩阵 [1] [1], 1)
赋值 (变换矩阵 [1] [2], 0)
赋值 (变换矩阵 [1] [3], 0)

赋值 (变换矩阵 [2] [1], 0)
赋值 (变换矩阵 [2] [2], 1)
赋值 (变换矩阵 [2] [3], 0)

赋值 (变换矩阵 [3] [1], 负 (缩放中心点.x))
赋值 (变换矩阵 [3] [2], 负 (缩放中心点.y))
赋值 (变换矩阵 [3] [3], 1)

赋值 (坐标矩阵, 矩阵运算.未知支持库函数_13 (坐标矩阵, 变换矩阵))


 ' 开始缩放操作-----------------------------------------------------------------------------------------
赋值 (变换矩阵 [1] [1], 缩放比例.SX)
赋值 (变换矩阵 [1] [2], 0)
赋值 (变换矩阵 [1] [3], 0)

赋值 (变换矩阵 [2] [1], 0)
赋值 (变换矩阵 [2] [2], 缩放比例.SY)
赋值 (变换矩阵 [2] [3], 0)

赋值 (变换矩阵 [3] [1], 0)
赋值 (变换矩阵 [3] [2], 0)
赋值 (变换矩阵 [3] [3], 1)
赋值 (坐标矩阵, 矩阵运算.未知支持库函数_13 (坐标矩阵, 变换矩阵))

 ' 平移坐标系到原来的位置-----------------------------------------------------------------------------------------
赋值 (变换矩阵 [1] [1], 1)
赋值 (变换矩阵 [1] [2], 0)
赋值 (变换矩阵 [1] [3], 0)

赋值 (变换矩阵 [2] [1], 0)
赋值 (变换矩阵 [2] [2], 1)
赋值 (变换矩阵 [2] [3], 0)

赋值 (变换矩阵 [3] [1], 缩放中心点.x)
赋值 (变换矩阵 [3] [2], 缩放中心点.y)
赋值 (变换矩阵 [3] [3], 1)
赋值 (坐标矩阵, 矩阵运算.未知支持库函数_13 (坐标矩阵, 变换矩阵))

 ' 取出结果-----------------------------------------------------------------------------------------
赋值 (缩放后的点.x, 坐标矩阵 [1])
赋值 (缩放后的点.y, 坐标矩阵 [2])
返回 (缩放后的点)

.子程序 缩放, 坐标, , 
.参数 参被缩放的点, 坐标, , 
.参数 参缩放中心点, 坐标, 可空, 
.参数 参缩放比例, 坐标比例, , 

.局部变量 被缩放的点, 坐标, , , 
.局部变量 缩放中心点, 坐标, , , 
.局部变量 缩放比例, 坐标比例, , , 
.局部变量 缩放后的点, 坐标, , , 

赋值 (被缩放的点, 参被缩放的点)
赋值 (缩放中心点, 参缩放中心点)
赋值 (缩放比例, 参缩放比例)
赋值 (缩放后的点, 平移316 (被缩放的点, 对称316 (缩放中心点)))
赋值 (缩放后的点.x, 相乘 (缩放后的点.x, 参缩放比例.SX))
赋值 (缩放后的点.y, 相乘 (缩放后的点.y, 参缩放比例.SY))
赋值 (缩放后的点, 平移316 (缩放后的点, 缩放中心点))
返回 (缩放后的点)

.子程序 复角316, 双精度小数型, , 返回弧度值。如果点与坐标原点重合，返回的值无意义，当然也可以理解为初始方向0。
.参数 参坐标, 坐标, , 

.局部变量 dx, 双精度小数型, 静态, , 横坐标增量
.局部变量 dy, 双精度小数型, 静态, , 纵坐标增量
.局部变量 方位角, 双精度小数型, 静态, , 

赋值 (dx, 参坐标.x)
赋值 (dy, 参坐标.y)
.判断开始 (并且 (等于 (dx, 0), 等于 (dy, 0))) ' 与原点重合，无指向，将零值作为初始值。
    赋值 (方位角, 0)
.判断 (并且 (大于 (dx, 0), 等于 (dy, 0))) ' X正轴
    赋值 (方位角, 0)
.判断 (并且 (大于 (dx, 0), 大于 (dy, 0))) ' 第一象限
    赋值 (方位角, 求反正切 (相除 (dy, dx)))
.判断 (并且 (等于 (dx, 0), 大于 (dy, 0))) ' Y正轴
    赋值 (方位角, 相除 (#pi, 2))
.判断 (并且 (小于 (dx, 0), 大于 (dy, 0))) ' 第二象限
    赋值 (方位角, 相加 (#pi, 求反正切 (相除 (dy, dx))))
.判断 (并且 (小于 (dx, 0), 等于 (dy, 0))) ' X负轴
    赋值 (方位角, #pi)
.判断 (并且 (小于 (dx, 0), 小于 (dy, 0))) ' 第三象限
    赋值 (方位角, 相加 (#pi, 求反正切 (相除 (dy, dx))))
.判断 (并且 (等于 (dx, 0), 小于 (dy, 0))) ' Y负轴
    赋值 (方位角, 相乘 (相除 (#pi, 2), 3))
.判断 (并且 (大于 (dx, 0), 小于 (dy, 0))) ' 第四象限
    赋值 (方位角, 相加 (相乘 (#pi, 2), 求反正切 (相除 (dy, dx))))
.默认
    信息框 (“计算方位角时出现错误，请检查源程序。”, 0, )
.判断结束
返回 (方位角)

.子程序 模r316, 双精度小数型, , 实际上是求点到原点的距离，引用了复数中模的根念。
.参数 参坐标, 坐标, , 

返回 (求平方根 (相加 (求次方 (参坐标.x, 2), 求次方 (参坐标.y, 2))))

.子程序 旋转316, 坐标, , 求一点绕参照点旋转后的位置。
.参数 参被旋转的点, 坐标, , 
.参数 参旋转中心, 坐标, 可空, 
.参数 参旋转角度, 双精度小数型, , 

.局部变量 被旋转的点, 坐标, , , 
.局部变量 旋转中心, 坐标, , , 
.局部变量 坐标, 坐标, , , 
.局部变量 正弦, 双精度小数型, , , 
.局部变量 余弦, 双精度小数型, , , 

赋值 (被旋转的点, 参被旋转的点)
赋值 (旋转中心, 参旋转中心)
 ' 平移坐标系到转动中心
赋值 (坐标, 平移316 (被旋转的点, 对称316 (参旋转中心)))
 ' 旋转点
赋值 (正弦, 求正弦 (参旋转角度))
赋值 (余弦, 求余弦 (参旋转角度))
赋值 (坐标.x, 相减 (相乘 (被旋转的点.x, 余弦), 相乘 (被旋转的点.y, 正弦)))
赋值 (坐标.y, 相加 (相乘 (被旋转的点.x, 正弦), 相乘 (被旋转的点.y, 余弦)))
 ' 平移坐标系到原来的位置
赋值 (坐标, 平移316 (坐标, 旋转中心))
返回 (坐标)

.子程序 旋转_矩阵变换法316, 坐标, , 求一点绕参照点旋转后的位置，采用矩阵变换的方式。
.参数 参被旋转的点, 坐标, , 
.参数 参旋转中心, 坐标, 可空, 
.参数 参旋转角度, 双精度小数型, , 

.局部变量 平移dx, 双精度小数型, , , 
.局部变量 平移dy, 双精度小数型, , , 
.局部变量 坐标, 坐标, , , 
.局部变量 矩阵运算, 未知类型0x30002, , , 
.局部变量 矩阵1, 双精度小数型, , "1,3", 
.局部变量 矩阵2, 双精度小数型, , "3,3", 
.局部变量 结果矩阵, 双精度小数型, , "3", 

 ' 平移坐标系
赋值 (平移dx, 参旋转中心.x)
赋值 (平移dy, 参旋转中心.y)
赋值 (矩阵1 [1] [1], 参被旋转的点.x)
赋值 (矩阵1 [1] [2], 参被旋转的点.y)
赋值 (矩阵1 [1] [3], 1)
赋值 (矩阵2 [1] [1], 1)
赋值 (矩阵2 [1] [2], 0)
赋值 (矩阵2 [1] [3], 0)
赋值 (矩阵2 [2] [1], 0)
赋值 (矩阵2 [2] [2], 1)
赋值 (矩阵2 [2] [3], 0)
赋值 (矩阵2 [3] [1], 负 (平移dx))
赋值 (矩阵2 [3] [2], 负 (平移dy))
赋值 (矩阵2 [3] [3], 1)
赋值 (结果矩阵, 矩阵运算.未知支持库函数_13 (矩阵1, 矩阵2)) ' 得到被旋转点旋转前在新坐标系里面的坐标
 ' 实施旋转变换
赋值 (矩阵2 [1] [1], 求余弦 (参旋转角度))
赋值 (矩阵2 [1] [2], 求正弦 (参旋转角度))
赋值 (矩阵2 [1] [3], 0)
赋值 (矩阵2 [2] [1], 负 (求正弦 (参旋转角度)))
赋值 (矩阵2 [2] [2], 求余弦 (参旋转角度))
赋值 (矩阵2 [2] [3], 0)
赋值 (矩阵2 [3] [1], 0)
赋值 (矩阵2 [3] [2], 0)
赋值 (矩阵2 [3] [3], 1)
赋值 (结果矩阵, 矩阵运算.未知支持库函数_13 (结果矩阵, 矩阵2)) ' 得到被旋转点旋转后在新坐标系里面的的坐标
 ' 平移坐标系
赋值 (矩阵2 [1] [1], 1)
赋值 (矩阵2 [1] [2], 0)
赋值 (矩阵2 [1] [3], 0)
赋值 (矩阵2 [2] [1], 0)
赋值 (矩阵2 [2] [2], 1)
赋值 (矩阵2 [2] [3], 0)
赋值 (矩阵2 [3] [1], 平移dx)
赋值 (矩阵2 [3] [2], 平移dy)
赋值 (矩阵2 [3] [3], 1)
赋值 (结果矩阵, 矩阵运算.未知支持库函数_13 (结果矩阵, 矩阵2)) ' 得到被旋转点旋转后在原坐标系里面的坐标
 ' 输出结果
赋值 (坐标.x, 结果矩阵 [1])
赋值 (坐标.y, 结果矩阵 [2])
返回 (坐标)

.子程序 前进316, 坐标, , 二维坐标系有两个轴正方向，所以在二维坐标系统中，对于自身没有方向性的图元，其方向的唯一性只能从坐标原点引出到要移动的图元的形心点的射线指向，前进与后退都是相对于原点而言。
.参数 参坐标, 坐标, , 坐标不能与原点重合，否则将沿着初始0方向前进。
.参数 参前进量, 双精度小数型, , 应提供正数，表示坐标继续远离原点，如果提供负数，则和后退是一样的效果。

.局部变量 坐标, 坐标, , , 
.局部变量 模r, 双精度小数型, , , 

赋值 (模r, 模r316 (参坐标))
.判断开始 (等于 (模r, 0))
    赋值 (坐标.x, 参前进量)
.默认
    赋值 (坐标.x, 相加 (参坐标.x, 相除 (相乘 (参前进量, 参坐标.x), 模r)))
    赋值 (坐标.y, 相加 (参坐标.y, 相除 (相乘 (参前进量, 参坐标.y), 模r)))
.判断结束
返回 (坐标)

.子程序 后退316, 坐标, , 二维坐标系有两个轴正方向，所以在二维坐标系统中，对于自身没有方向性的图元，其方向的唯一性只能从坐标原点引出到要移动的图元的形心点的射线指向，前进与后退都是相对于原点而言。
.参数 参坐标, 坐标, , 坐标不能与原点重合，否则将沿着初始0方向前进。
.参数 参前进量, 双精度小数型, , 应提供正数，表示向坐标原点靠近，如果提供负数，则和前进是一样的效果。

.局部变量 坐标, 坐标, , , 
.局部变量 模r, 双精度小数型, , , 

赋值 (模r, 模r316 (参坐标))
.判断开始 (等于 (模r, 0))
    赋值 (坐标.x, 负 (参前进量))
.默认
    赋值 (坐标.x, 相减 (参坐标.x, 相除 (相乘 (参前进量, 参坐标.x), 模r)))
    赋值 (坐标.y, 相减 (参坐标.y, 相除 (相乘 (参前进量, 参坐标.y), 模r)))
.判断结束
返回 (坐标)

.子程序 远离316, 坐标, , 远离方法总是先确定移动方向，然后在该方向上移动指定的距离。
.参数 参被移动点, 坐标, , 
.参数 参相对点, 坐标, 可空, 如果未提供相对参照点变量，表示相对于坐标原点进行移动。
.参数 参移动量, 双精度小数型, , 一般就提供正值，使两点之间的距离按移动量进行加长，直到移动到无限远。如果提供了负数，达到的效果和靠近一样的效果。

.局部变量 被移动点, 坐标, , , 
.局部变量 相对点, 坐标, , , 
.局部变量 距离, 双精度小数型, , , 
.局部变量 坐标, 坐标, , , 

赋值 (被移动点, 参被移动点)
赋值 (相对点, 参相对点)
赋值 (距离, 距离316 (被移动点, 相对点))
.判断开始 (等于 (距离, 0))
    返回 (被移动点)
.默认
     ' 坐标.x ＝ 相对点.x ＋ (被移动点.x － 相对点.x) ÷ 距离 × (距离 ＋ 参移动量)
     ' 坐标.y ＝ 相对点.y ＋ (被移动点.y － 相对点.y) ÷ 距离 × (距离 ＋ 参移动量)
    赋值 (坐标.x, 相加 (被移动点.x, 相除 (相乘 (参移动量, 相减 (被移动点.x, 相对点.x)), 距离)))
    赋值 (坐标.y, 相加 (被移动点.y, 相除 (相乘 (参移动量, 相减 (被移动点.y, 相对点.y)), 距离)))
.判断结束
返回 (坐标)

.子程序 靠近316, 坐标, , 靠近方法总是先确定移动方向，然后在该方向上移动指定的距离。所以在两点相距离很小而移动量又很大量，就会移动到相反的方向上去了。
.参数 参被移动点, 坐标, , 
.参数 参相对点, 坐标, 可空, 如果未提供相对参照点变量，表示相对于坐标原点进行移动。
.参数 参移动量, 双精度小数型, , 一般就提供正值，使两点之间的距离按移动量进行缩短，直到移动到了相反的方向或两点重合在一起了。如果提供了负数，达到的效果和远离一样效果。

.局部变量 被移动点, 坐标, , , 
.局部变量 相对点, 坐标, , , 
.局部变量 距离, 双精度小数型, , , 
.局部变量 坐标, 坐标, , , 

赋值 (被移动点, 参被移动点)
赋值 (相对点, 参相对点)
赋值 (距离, 距离316 (被移动点, 相对点))
.判断开始 (等于 (距离, 0))
    返回 (被移动点)
.默认
     ' 坐标.x ＝ 相对点.x ＋ (被移动点.x － 相对点.x) ÷ 距离 × (距离 － 参移动量)
     ' 坐标.y ＝ 相对点.y ＋ (被移动点.y － 相对点.y) ÷ 距离 × (距离 － 参移动量)
    赋值 (坐标.x, 相减 (被移动点.x, 相乘 (相除 (相减 (被移动点.x, 相对点.x), 距离), 参移动量)))
    赋值 (坐标.y, 相减 (被移动点.y, 相乘 (相除 (相减 (被移动点.y, 相对点.y), 距离), 参移动量)))
.判断结束
返回 (坐标)

.子程序 偏离316, 坐标, , 偏离方法总是先进行远离操作，然后进行转动操作，虽然移动量有可能出现负值的情况，但偏的方向总是按离开作为正方向进行考虑的，负数只影响移动方向而不影响偏转方向。一般来说，连续的偏离操作画出来的是近是螺旋线的形状。
.参数 参被移动点, 坐标, , 
.参数 参相对点, 坐标, 可空, 如果未提供相对点，表示相对于坐标原点进行偏离操作。
.参数 参角度, 双精度小数型, 可空, 当角度为正数时，表示向前进方向左边偏离，当角度为负数时，表示向前进方向右边偏离。当角度为零时，表示不偏向远离。
.参数 参移动量, 双精度小数型, , 当移动量为正数时，表示离目标点越来越远，当移动量为负数时，表示离目标点越来越近。当移动量为零时，表示不动。移动量的正负符号，是否有必要影响前进方向的符号，有待研究，本程序暂按不影响考虑。即先按照正向移动计算，如果为负数，就进行对称计算。

.局部变量 被移动点, 坐标, , , 
.局部变量 相对点, 坐标, , , 
.局部变量 坐标, 坐标, , , 

赋值 (被移动点, 参被移动点)
赋值 (相对点, 参相对点)
.判断开始 (等于 (参移动量, 0))
     ' 在浮点计算模式下，是否有必要验证移动量很难为零的情况，有待深入研究。暂时按能为零考虑。
    返回 (被移动点)
.默认
    赋值 (坐标, 远离316 (被移动点, 相对点, 取绝对值 (参移动量)))
    赋值 (坐标, 旋转316 (坐标, 被移动点, 参角度))
    .如果真 (小于 (参移动量, 0))
        赋值 (坐标, 对称316 (坐标, 被移动点))
    .如果真结束
    
.判断结束

返回 (坐标)

.子程序 距离316, 双精度小数型, , 求平面内两点的距离。
.参数 参起点, 坐标, , 
.参数 参尾点, 坐标, , 

返回 (求平方根 (相加 (求次方 (相减 (参尾点.x, 参起点.x), 2), 求次方 (相减 (参尾点.y, 参起点.y), 2))))

.子程序 平移_定向316, 坐标, , 求一点朝指定方向平移后的位置。此方法为已知移动方向及移动距离的平移计算。测量学专用,根据已知点、方位角和导线长求下一点的坐标
.参数 参被平移的点, 坐标, , 基点
.参数 参方位角, 双精度小数型, , 弧度,测量学上叫做方位角
.参数 参平移距离, 双精度小数型, , 测量学上叫做导线长度

.局部变量 点, 坐标, , , 线段终点

.判断开始 (等于 (参平移距离, 0))
    返回 (参被平移的点)
.默认
    赋值 (点.x, 相加 (参被平移的点.x, 相乘 (参平移距离, 求余弦 (参方位角))))
    赋值 (点.y, 相加 (参被平移的点.y, 相乘 (参平移距离, 求正弦 (参方位角))))
.判断结束
返回 (点)

.子程序 平移_两点定向316, 坐标, , 以直线段自身为参照，指定其位移分量进行移动，得到新的直线段。如果未提供方向点，将按照给定的移动量以线段的前进方向为准进行移动。如果提供的方向点两点重合，将无法对线段进行移动。
.参数 参被平移点, 坐标, , 
.参数 参方向基点, 坐标, , 
.参数 参方向目标点, 坐标, , 
.参数 参移动量, 双精度小数型, 可空, 如果移动量为零，将参照方向目标点与方向基点之间的距离计算移动量

.局部变量 被平移点, 坐标, , , 
.局部变量 方向基点, 坐标, , , 
.局部变量 方向目标点, 坐标, , , 
.局部变量 二维点, 类坐标, , , 
.局部变量 平移量, 坐标, , , 
.局部变量 坐标, 坐标, , , 
.局部变量 线段, 坐标, , , 

赋值 (被平移点, 参被平移点)
赋值 (方向基点, 参方向基点)
赋值 (方向目标点, 参方向目标点)
赋值 (平移量.x, 相减 (方向目标点.x, 方向基点.x))
赋值 (平移量.y, 相减 (方向目标点.y, 方向基点.y))
.如果 (并且 (等于 (平移量.x, 0), 等于 (平移量.y, 0)))
     ' 虽然提供了方向点，但提供的方向点无法计算位移方向。所以无法完成平移操作。
.否则
    .判断开始 (等于 (参移动量, 0))
         ' 提供的移动量零，问题得到简化。直接按给定方向点的坐标增量进行平移。
        赋值 (被平移点, 二维点.平移316 (被平移点, 平移量))
    .默认
         ' 移动量不零,将按照移动量进行移动
        赋值 (坐标, 二维点.靠近316 (方向基点, 方向目标点, 参移动量))
        赋值 (平移量.x, 相减 (坐标.x, 方向基点.x))
        赋值 (平移量.y, 相减 (坐标.y, 方向基点.y))
        赋值 (被平移点, 二维点.平移316 (被平移点, 平移量))
    .判断结束
    
.如果结束

返回 (被平移点)

.子程序 投影到X轴316, 坐标, , 被投影点与投影方向点连线不能与X轴平行，否则将无法完成参照投影操作，返回为无参照点的X轴投影。
.参数 参被投影点, 坐标, , 
.参数 参投影方向点, 坐标, 可空, 

.局部变量 坐标, 坐标, , , 

.判断开始 (是否为空 (参投影方向点))
    赋值 (坐标.x, 参被投影点.x)
.判断 (等于 (相减 (参投影方向点.y, 参被投影点.y), 0))
    赋值 (坐标.x, 参被投影点.x)
.默认
    赋值 (坐标.x, 相减 (参被投影点.x, 相除 (相乘 (参被投影点.y, 相减 (参投影方向点.x, 参被投影点.x)), 相减 (参投影方向点.y, 参被投影点.y))))
.判断结束
返回 (坐标)

.子程序 投影到Y轴316, 坐标, , 被投影点与投影方向点连线不能与Y轴平行，否则将无法完成参照投影操作，返回为无参照点的X轴投影。
.参数 参被投影点, 坐标, , 
.参数 参投影方向点, 坐标, 可空, 

.局部变量 坐标, 坐标, , , 

.判断开始 (是否为空 (参投影方向点))
    赋值 (坐标.y, 参被投影点.y)
.判断 (等于 (相减 (参投影方向点.x, 参被投影点.x), 0))
    赋值 (坐标.y, 参被投影点.y)
.默认
    赋值 (坐标.y, 相减 (参被投影点.y, 相除 (相乘 (参被投影点.x, 相减 (参投影方向点.y, 参被投影点.y)), 相减 (参投影方向点.x, 参被投影点.x))))
.判断结束
返回 (坐标)

.子程序 投影到线段316, 坐标, , 与投影到直线的方法相似，只不过有时它要求投影点必须落到线段上，否则返回为投影方向点的坐标值。如果被投影点就在目标直线上，投影结果就与投影方向点没有关系了，而是直接返回被投影点如果，如果被投影点与投诮方向点连线与目标线段平行，则无法完成投影操作，所以直接返回被投影点。
.参数 参被投影点, 坐标, , 
.参数 参投影方向点, 坐标, , 
.参数 参目标线段, 线段, , 
.参数 参投影到线段外时也合法, 逻辑型, 可空, 
.参数 参考投影成功, 逻辑型, 参考 可空, 

.局部变量 被投影点, 坐标, , , 
.局部变量 投影方向点, 坐标, , , 
.局部变量 目标线段, 线段, , , 
.局部变量 二维_点与线段, 类关系_点与线段, , , 
.局部变量 二维_点与直线, 类关系_点与直线, , , 
.局部变量 坐标, 坐标, , , 

赋值 (被投影点, 参被投影点)
赋值 (投影方向点, 参投影方向点)
赋值 (目标线段, 参目标线段)
.如果 (参投影到线段外时也合法)
    .如果真 (二维_点与直线.点在直线上 (被投影点, 目标线段.直线))
        赋值 (参考投影成功, 真)
        返回 (被投影点)
    .如果真结束
    
    返回 (投影到直线316 (被投影点, 目标线段.直线, 投影方向点, 参考投影成功))
.否则
    赋值 (坐标, 投影到直线316 (被投影点, 目标线段.直线, 投影方向点, 参考投影成功))
    .如果 (参考投影成功)
        .如果 (二维_点与线段.点在线段上 (坐标, 目标线段)) ' 浮点计算的影响，这样的比较结果只是在表达，如果非常靠近线段，就当成在线段上。
            返回 (坐标)
        .否则
            赋值 (参考投影成功, 假)
            返回 (被投影点)
        .如果结束
        
    .否则
        返回 (被投影点)
    .如果结束
    
.如果结束


.子程序 投影到直线316, 坐标, , 将点按照投影方向点的指向投影到直线，本质上是连接投影方向点与被投影点成一条直线，然后计算与目标直线的交点。如果没有交点，就无法成生投影点。所以被投影点与投影方向点连线如果与目标直线重合就返回被投影点本身，如果平行还是返回投影点本身，因为无法完成参照投影操作。
.参数 参被投影点, 坐标, , 
.参数 参目标直线, 直线一般式, , 
.参数 参投影方向点, 坐标, , 
.参数 参考投影成功, 逻辑型, 参考 可空, 

.局部变量 被投影点, 坐标, , , 
.局部变量 目标直线, 直线一般式, , , 
.局部变量 投影方向点, 坐标, , , 
.局部变量 二维线段, 类线段, , , 
.局部变量 二维直线, 类直线一般式, , , 
.局部变量 线段, 线段, , , 

赋值 (被投影点, 参被投影点)
赋值 (目标直线, 参目标直线)
赋值 (投影方向点, 参投影方向点)
赋值 (线段, 二维线段.创建_两点316 (被投影点, 投影方向点))
.判断开始 (二维直线.两直线重合 (线段.直线, 目标直线, ))
    赋值 (参考投影成功, 真)
    返回 (被投影点)
.判断 (二维直线.两直线平行 (线段.直线, 目标直线, , ))
    赋值 (参考投影成功, 假)
    返回 (被投影点)
.默认
    赋值 (参考投影成功, 真)
    返回 (二维直线.两直线交点 (参目标直线, 线段.直线))
.判断结束


.子程序 对称于X轴316, 坐标, , 使坐标点相对于X轴对称，将坐标值的分量Y值进行反号操作。
.参数 参坐标, 坐标, , 

.局部变量 坐标点, 坐标, , , 

赋值 (坐标点, 参坐标)
赋值 (坐标点.y, 负 (坐标点.y))
返回 (坐标点)

.子程序 对称于Y轴316, 坐标, , 使坐标点相对于Y轴对称，将坐标值的分量X值进行反号操作。
.参数 参坐标, 坐标, , 

.局部变量 坐标点, 坐标, , , 

赋值 (坐标点, 参坐标)
赋值 (坐标点.x, 负 (坐标点.x))
返回 (坐标点)

.子程序 对称于两点316, 坐标, , 将被对称点相对于所参照的两点的连线作对称操作。对称时只考虑给定点在XY平面内的相对关系,不改变旋转点的Z值..如果这两对称参照点是重合的，将无法按对称轴方式对称，只能按对称于点作对称操作
.参数 参被对称点坐标, 坐标, , 
.参数 参相对点起点, 坐标, , 
.参数 参相对点尾点, 坐标, , 

.局部变量 被对称点坐标, 双精度小数型, , "1,3", 
.局部变量 矩阵运算, 未知类型0x30002, , , 
.局部变量 坐标矩阵, 双精度小数型, , "1,3", 
.局部变量 变换矩阵, 双精度小数型, , "3,3", 
.局部变量 旋转角度, 双精度小数型, , , 
.局部变量 尾点坐标矩阵, 双精度小数型, , "1,3", 
.局部变量 尾点坐标, 坐标, , , 
.局部变量 结果坐标, 坐标, , , 
.局部变量 复数, 未知类型0x30001, , , 

 ' 0、------------------------- 如果这两对称参照点是重合的，将无法按对称轴方式对称，只能按对称于点作对称操作--------------------------------
.如果真 (等于 (距离316 (参相对点起点, 参相对点尾点), 0))
    返回 (对称316 (参被对称点坐标, 参相对点起点))
.如果真结束

 ' 1、------------------------- 平移坐标系到第一点--------------------------------
 ' 求变换矩阵
赋值 (变换矩阵 [1] [1], 1)
赋值 (变换矩阵 [1] [2], 0)
赋值 (变换矩阵 [1] [3], 0)
赋值 (变换矩阵 [2] [1], 0)
赋值 (变换矩阵 [2] [2], 1)
赋值 (变换矩阵 [2] [3], 0)
赋值 (变换矩阵 [3] [1], 负 (参相对点起点.x))
赋值 (变换矩阵 [3] [2], 负 (参相对点起点.y))
赋值 (变换矩阵 [3] [3], 1)
 ' 求坐标矩阵,对相对点尾点进行变换，是为了求出方位角度。
赋值 (坐标矩阵 [1], 参相对点尾点.x)
赋值 (坐标矩阵 [2], 参相对点尾点.y)
赋值 (坐标矩阵 [3], 1)
 ' 实施变换
赋值 (尾点坐标矩阵, 矩阵运算.未知支持库函数_13 (坐标矩阵, 变换矩阵))
赋值 (尾点坐标.x, 尾点坐标矩阵 [1])
赋值 (尾点坐标.y, 尾点坐标矩阵 [2])
复数.未知支持库函数_11 (尾点坐标.x)
复数.未知支持库函数_12 (尾点坐标.y)
赋值 (旋转角度, 复数.未知支持库函数_8 (复数))
 ' 求坐标矩阵
赋值 (坐标矩阵 [1], 参被对称点坐标.x)
赋值 (坐标矩阵 [2], 参被对称点坐标.y)
赋值 (坐标矩阵 [3], 1)
 ' 实施变换
赋值 (被对称点坐标, 矩阵运算.未知支持库函数_13 (坐标矩阵, 变换矩阵))
 ' 2、-------------------------旋转坐标系，使其X轴与第二点重合-------------------------
 ' 求变换矩阵
赋值 (变换矩阵 [1] [1], 求余弦 (负 (旋转角度)))
赋值 (变换矩阵 [1] [2], 求正弦 (负 (旋转角度)))
赋值 (变换矩阵 [1] [3], 0)
赋值 (变换矩阵 [2] [1], 负 (求正弦 (负 (旋转角度))))
赋值 (变换矩阵 [2] [2], 求余弦 (负 (旋转角度)))
赋值 (变换矩阵 [2] [3], 0)
赋值 (变换矩阵 [3] [1], 0)
赋值 (变换矩阵 [3] [2], 0)
赋值 (变换矩阵 [3] [3], 1)
 ' 实施变换
赋值 (被对称点坐标, 矩阵运算.未知支持库函数_13 (被对称点坐标, 变换矩阵))
 ' 3、-------------------------将被对称点相对于X轴对称-------------------------
赋值 (被对称点坐标 [2], 负 (被对称点坐标 [2]))
 ' 4、-------------------------反向旋转坐标系，使其保持原来的方向-------------------------
 ' 求变换矩阵
赋值 (变换矩阵 [1] [1], 求余弦 (旋转角度))
赋值 (变换矩阵 [1] [2], 求正弦 (旋转角度))
赋值 (变换矩阵 [1] [3], 0)
赋值 (变换矩阵 [2] [1], 负 (求正弦 (旋转角度)))
赋值 (变换矩阵 [2] [2], 求余弦 (旋转角度))
赋值 (变换矩阵 [2] [3], 0)
赋值 (变换矩阵 [3] [1], 0)
赋值 (变换矩阵 [3] [2], 0)
赋值 (变换矩阵 [3] [3], 1)
 ' 实施变换
赋值 (被对称点坐标, 矩阵运算.未知支持库函数_13 (被对称点坐标, 变换矩阵))
 ' 5、-------------------------平移坐标系到原来的位置。-------------------------
 ' 求变换矩阵
赋值 (变换矩阵 [1] [1], 1)
赋值 (变换矩阵 [1] [2], 0)
赋值 (变换矩阵 [1] [3], 0)
赋值 (变换矩阵 [2] [1], 0)
赋值 (变换矩阵 [2] [2], 1)
赋值 (变换矩阵 [2] [3], 0)
赋值 (变换矩阵 [3] [1], 参相对点起点.x)
赋值 (变换矩阵 [3] [2], 参相对点起点.y)
赋值 (变换矩阵 [3] [3], 1)
 ' 实施变换
赋值 (被对称点坐标, 矩阵运算.未知支持库函数_13 (被对称点坐标, 变换矩阵))
 ' 5、-------------------------输出结果。-------------------------
赋值 (结果坐标.x, 被对称点坐标 [1])
赋值 (结果坐标.y, 被对称点坐标 [2])
返回 (结果坐标)

.子程序 对称于线段316, 坐标, , ok.。对称于线段和对称于两点本质上是一致的，所以直接将线段的两端点取出作为对称点即可。但线段也有起点和尾点重合的情况，这时应调用其直线信息进行对称操作，如果没有直线信息，就只好进行点对称了。
.参数 参被对称的坐标, 坐标, , 
.参数 参对称轴线段, 线段, , 

.局部变量 被对称的坐标, 坐标, , , 
.局部变量 对称轴线段, 线段, , , 

赋值 (被对称的坐标, 参被对称的坐标)
赋值 (对称轴线段, 参对称轴线段)
.如果 (并且 (等于 (对称轴线段.直线.A, 0), 等于 (对称轴线段.直线.B, 0)))
    返回 (对称316 (被对称的坐标, 对称轴线段.起点))
.否则
    返回 (对称于直线316 (被对称的坐标, 对称轴线段.直线))
.如果结束


.子程序 对称于直线316, 坐标, , ok.。将坐标点相对于一般式直线作对称操作，调用前先检查A，B是否同时等于零。
.参数 参坐标, 坐标, , 直线外的点
.参数 参直线, 直线一般式, , 直线方程的一般式中系数A、B不能同时为零．

.局部变量 分子, 双精度小数型, , , 
.局部变量 分母, 双精度小数型, , , 
.局部变量 比值, 双精度小数型, , , 
.局部变量 坐标, 坐标, , , 

赋值 (分母, 相加 (求次方 (参直线.A, 2), 求次方 (参直线.B, 2)))
.判断开始 (等于 (分母, 0))
    返回 (坐标)
.默认
    赋值 (分子, 相乘 (2, 相加 (相乘 (参直线.A, 参坐标.x), 相乘 (参直线.B, 参坐标.y), 参直线.C)))
    .如果真 (等于 (分子, 0))
        返回 (参坐标)
    .如果真结束
    
    赋值 (比值, 相除 (分子, 分母))
    赋值 (坐标.x, 相减 (参坐标.x, 相乘 (参直线.A, 比值)))
    赋值 (坐标.y, 相减 (参坐标.y, 相乘 (参直线.B, 比值)))
    返回 (坐标)
.判断结束


.子程序 到线段垂线段316, 线段, , 返回的线段是以所提供的参数点为起点的，尾点为垂足点。线段也有起点和尾点重合的情况，这时应调用其直线信息进行垂向操作，如果没有直线信息，就只能直接连接两点了。最极端的情况是，连接两点后生成的线段，其尾点和起点还是重合，这样就只好连接坐标原点到该点所形成的直线信息赋给线段，极端得不能再极端的时候，坐标原点与该点也重合，这时就只好赋予其X轴的直线信息了。
.参数 参点, 坐标, , 
.参数 参目标线段, 线段, , 

.局部变量 点, 坐标, , , 
.局部变量 目标线段, 线段, , , 
.局部变量 二维点, 类坐标, , , 
.局部变量 二维线段, 类线段, , , 
.局部变量 线段, 线段, , , 

赋值 (点, 参点)
赋值 (目标线段, 参目标线段)

.判断开始 (并且 (等于 (目标线段.尾点.x, 目标线段.起点.x), 等于 (目标线段.尾点.y, 目标线段.起点.y)))
    .如果 (并且 (等于 (目标线段.直线.A, 0), 等于 (目标线段.直线.B, 0)))
        赋值 (线段.起点, 点)
        赋值 (线段.尾点, 目标线段.起点)
         ' 新生成的线段，还是可能出现起点尾点重合的情况，由于原有目标线段没有直线一般式定义信息，将无法用两点来生成新直线一般式信息
         ' 所以只好将保留一个初始方向的直线信息，从坐标原点引向该点的直线信息。
        .判断开始 (并且 (等于 (线段.尾点.x, 线段.起点.x), 等于 (线段.尾点.y, 线段.起点.y)))
            .判断开始 (并且 (等于 (线段.起点.x, 0), 等于 (线段.起点.y, 0)))
                赋值 (线段.直线.A, 0)
                赋值 (线段.直线.B, 1)
                赋值 (线段.直线.C, 0)
            .默认
                赋值 (点.x, 0)
                赋值 (点.y, 0)
                赋值 (线段.直线,  [二维线段.创建_两点316 (点, 线段.起点)].直线)
            .判断结束
            
        .默认
            赋值 (线段.直线, 二维线段.求直线316 (线段))
        .判断结束
        
    .否则
        赋值 (线段, 二维点.到直线垂线段316 (点, 目标线段.直线))
    .如果结束
    
.默认
    赋值 (线段, 二维点.到直线垂线段316 (参点, 目标线段.直线))
.判断结束

返回 (线段)

.子程序 到线段垂足点316, 坐标, , 本程序是对点到直线垂足点方法的调用，无本质区别。若线段的一般式信息合法，就直接调用一般式信息求垂足点；如果线段的一般式信息不合法，就查看线段的起始点是否重合，如果重合就直接返回线段的起点，如果不重合，就进行直线式信息的计算，然后再依据一般式信息求得垂足点。
.参数 参点, 坐标, , 直线外的点
.参数 参目标线段, 线段, , 直线方程的一般式中系数A、B不能同时为零．

.局部变量 点, 坐标, , , 
.局部变量 目标线段, 线段, , , 
.局部变量 二维线段类, 类线段, , , 
.局部变量 直线, 直线一般式, , , 
.局部变量 二维点, 类坐标, , , 

赋值 (点, 参点)
赋值 (目标线段, 参目标线段)
.如果 (或者 (不等于 (目标线段.直线.A, 0), 不等于 (目标线段.直线.B, 0)))
    返回 (二维点.到直线垂足点316 (点, 目标线段.直线))
.否则
    .如果 (并且 (等于 (目标线段.尾点.x, 目标线段.起点.x), 等于 (目标线段.尾点.y, 目标线段.起点.y)))
        返回 (目标线段.起点)
    .否则
        赋值 (目标线段.直线, 二维线段类.求直线316 (目标线段))
        返回 (二维点.到直线垂足点316 (点, 目标线段.直线))
    .如果结束
    
.如果结束


.子程序 到线段垂距316, 双精度小数型, , ok.求点到直线的垂线段长度,即过点向直线引垂线,计算点到该垂足点的距离。
.参数 参点, 坐标, , 直线外的点
.参数 参线段, 线段, , 包含起点和终点的直线段

返回 (相除 (求平方根 (求次方 (相减 (相乘 (相减 (参线段.起点.x, 参点.x), 相减 (参线段.尾点.y, 参点.y)), 相乘 (相减 (参线段.起点.y, 参点.y), 相减 (参线段.尾点.x, 参点.x))), 2)), 求平方根 (相加 (求次方 (相减 (参线段.尾点.x, 参线段.起点.x), 2), 求次方 (相减 (参线段.尾点.y, 参线段.起点.y), 2)))))

.子程序 到线段距离316, 双精度小数型, , ok.求点到直线的垂线段长度,即过点向直线引垂线,计算点到该垂足点的距离，但如果该垂足点不在线段上，则计算点到线段最近一个端点的距离。
.参数 参点, 坐标, , 直线外的点
.参数 参线段, 线段, , 包含起点和终点的直线段
.参数 参极小值, 双精度小数型, 可空, 如果没有给极小值，程序在进行计算时，总是偏向于认为是有距离的。默认：参极小值 ＝ #零5，一般情况下忽略。如果给定了一个值，则不大于该距离时将被认为距离为零，而作返零处理。

.局部变量 点, 坐标, , , 
.局部变量 线段, 线段, , , 
.局部变量 二维_点与线段, 类关系_点与线段, , , 
.局部变量 垂足点, 坐标, , , 
.局部变量 垂距, 双精度小数型, , , 
.局部变量 起点距离, 双精度小数型, , , 
.局部变量 尾点距离, 双精度小数型, , , 
.局部变量 距离, 双精度小数型, , , 

赋值 (点, 参点)
赋值 (线段, 参线段)
 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果真 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.如果真结束
赋值 (参极小值, 取绝对值 (参极小值))

赋值 (垂距, 到线段垂距316 (点, 线段))
赋值 (垂足点, 到线段垂足点316 (点, 线段))

.判断开始 (二维_点与线段.点在线段上 (垂足点, 线段, 参极小值))
     ' 浮点计算的影响，这样的比较结果只是在表达，如果非常靠近线段，就当成在线段上。
     ' 如果垂足点在线段上或非常靠近线段，就认为距离等于垂距。
    .如果 (是否为空 (参极小值))
        赋值 (距离, 垂距)
    .否则
        .如果真 (小于或等于 (距离, 参极小值))
            赋值 (距离, 0)
        .如果真结束
        
    .如果结束
    
.默认
    赋值 (起点距离, 距离316 (线段.起点, 点))
    赋值 (尾点距离, 距离316 (线段.尾点, 点))
    .如果 (小于 (起点距离, 尾点距离))
        赋值 (距离, 起点距离)
    .否则
        赋值 (距离, 尾点距离)
    .如果结束
    
    .如果真 (等于 (是否为空 (参极小值), 假))
        .如果真 (小于或等于 (距离, 参极小值))
            赋值 (距离, 0)
        .如果真结束
        
    .如果真结束
    
.判断结束

返回 (距离)

.子程序 到线段最近点316, 坐标, , 在一条线段上找到离指定点最近的点，可设置捕获特殊点，如端点，中点，三分点，四分点，五分点。如果线段的起点和尾点重合，则直接返回线段的起点作为最近点。
.参数 参被检查点, 坐标, , 直线外的点
.参数 参被检查线段, 线段, , 包含起点和终点的直线段
.参数 参极小值, 双精度小数型, 可空, 如果没有给极小值，程序在进行计算时，总是偏向于认为是有距离的。默认：参极小值 ＝ #零5，一般情况下忽略。合理的设置本值和并赋最近点性质参考变量，将达到捕获特殊点的效果。
.参数 参考捕获特殊点, 整数型, 参考 可空, 0线段上点_在起点，1线段上点_在尾点，2线段上点_在中点，3线段上点_在三分点，4线段上点_在四分点，5线段上点_在五分点。如果不希望捕获特殊点，就应将本参数设为空，不要赋任何变量和值。进行捕获时，先捕获端点及中点，然后捕获三分点、四分点、五分点

.局部变量 被检查点, 坐标, , , 
.局部变量 被检查线段, 线段, , , 
.局部变量 二维_点与线段, 类关系_点与线段, , , 
.局部变量 二维点, 类坐标, , , 
.局部变量 垂足点, 坐标, , , 
.局部变量 垂距, 双精度小数型, , , 
.局部变量 起点距离, 双精度小数型, , , 
.局部变量 尾点距离, 双精度小数型, , , 
.局部变量 距离, 双精度小数型, , , 
.局部变量 最近点, 坐标, , , 
.局部变量 中点, 坐标, , , 
.局部变量 五十分之一, 双精度小数型, , , 
.局部变量 三分点集, 坐标集, , , 
.局部变量 四分点集, 坐标集, , , 
.局部变量 五分点集, 坐标集, , , 
.局部变量 i, 整数型, , , 

赋值 (被检查点, 参被检查点)
赋值 (被检查线段, 参被检查线段)
 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果真 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.如果真结束
赋值 (参极小值, 取绝对值 (参极小值))

.如果真 (并且 (等于 (被检查线段.起点.x, 被检查线段.尾点.x), 等于 (被检查线段.起点.y, 被检查线段.尾点.y)))
     ' 如果线段起点和尾点重合，就直接以捕捉到起点的方式返回线段起点
    赋值 (参考捕获特殊点, #点在线段上_在起点)
    赋值 (最近点, 被检查线段.起点)
    返回 (最近点)
.如果真结束

赋值 (垂距, 到线段垂距316 (被检查点, 被检查线段))
赋值 (垂足点, 到线段垂足点316 (被检查点, 被检查线段))
赋值 (最近点, 垂足点)
 ' 浮点计算的影响，这样的比较结果只是在表达，如果非常靠近线段，就当成在线段上。
.判断开始 (二维_点与线段.点在线段上 (垂足点, 被检查线段, 参极小值))
     ' 如果垂足点在线段上或非常靠近线段，就认为距离等于垂距。
    赋值 (距离, 垂距)
    .如果真 (等于 (是否为空 (参考捕获特殊点), 假))
         ' 调用程序要求,进行捕获操作。
        赋值 (五十分之一, 相除 (距离316 (被检查线段.起点, 被检查线段.尾点), 50))
        .如果真 (小于或等于 (距离316 (最近点, 被检查线段.起点), 五十分之一)) ' 优先捕捉端点和中点
            赋值 (参考捕获特殊点, #点在线段上_在起点)
            赋值 (最近点, 被检查线段.起点)
            返回 (最近点)
        .如果真结束
        
        .如果真 (小于或等于 (距离316 (最近点, 被检查线段.尾点), 五十分之一))
            赋值 (参考捕获特殊点, #点在线段上_在尾点)
            赋值 (最近点, 被检查线段.尾点)
            返回 (最近点)
        .如果真结束
        
        赋值 (中点, 中间点316 (被检查线段.起点, 被检查线段.尾点))
        .如果真 (小于或等于 (距离316 (最近点, 中点), 五十分之一))
            赋值 (参考捕获特殊点, #点在线段上_在尾点)
            赋值 (最近点, 中点)
        .如果真结束
        
        赋值 (三分点集, 求三分点集316 (被检查线段.起点, 被检查线段.尾点))
        .判断开始 (小于或等于 (距离316 (三分点集.坐标 [1], 最近点), 五十分之一))
            赋值 (参考捕获特殊点, #点在线段上_在三分点)
            赋值 (最近点, 三分点集.坐标 [1])
        .判断 (小于或等于 (距离316 (三分点集.坐标 [2], 最近点), 五十分之一))
            赋值 (参考捕获特殊点, #点在线段上_在三分点)
            赋值 (最近点, 三分点集.坐标 [2])
        .默认
            赋值 (四分点集, 求四分点集316 (被检查线段.起点, 被检查线段.尾点))
            .判断开始 (小于或等于 (距离316 (四分点集.坐标 [1], 最近点), 五十分之一))
                赋值 (参考捕获特殊点, #点在线段上_在四分点)
                赋值 (最近点, 四分点集.坐标 [1])
            .判断 (小于或等于 (距离316 (四分点集.坐标 [3], 最近点), 五十分之一))
                赋值 (参考捕获特殊点, #点在线段上_在四分点)
                赋值 (最近点, 四分点集.坐标 [3])
            .默认
                赋值 (五分点集, 求五分点集316 (被检查线段.起点, 被检查线段.尾点))
                .计次循环首 (4, i)
                    .如果真 (小于或等于 (距离316 (五分点集.坐标 [i], 最近点), 五十分之一))
                        赋值 (参考捕获特殊点, #点在线段上_在五分点)
                        赋值 (最近点, 五分点集.坐标 [i])
                        跳出循环 ()
                    .如果真结束
                    
                .计次循环尾 ()
            .判断结束
            
        .判断结束
        
        
    .如果真结束
    
.默认
    赋值 (起点距离, 二维点.距离316 (被检查线段.起点, 被检查点))
    赋值 (尾点距离, 二维点.距离316 (被检查线段.尾点, 被检查点))
    .如果 (小于 (起点距离, 尾点距离))
        赋值 (距离, 起点距离)
        赋值 (最近点, 被检查线段.起点)
        赋值 (参考捕获特殊点, #点在线段上_在起点)
    .否则
        赋值 (距离, 尾点距离)
        赋值 (最近点, 被检查线段.尾点)
        赋值 (参考捕获特殊点, #点在线段上_在尾点)
    .如果结束
    
.判断结束

返回 (最近点)

.子程序 到直线垂足点316, 坐标, , 
.参数 参点, 坐标, 可空, 直线外的点
.参数 参直线, 直线一般式, , 直线方程的一般式中系数A、B不能同时为零．

.局部变量 分子x, 双精度小数型, , , 
.局部变量 分子y, 双精度小数型, , , 
.局部变量 分母, 双精度小数型, , , 
.局部变量 坐标, 坐标, , , 

赋值 (坐标, 参点)
.如果真 (并且 (等于 (参直线.A, 0), 等于 (参直线.B, 0)))
    信息框 (“错误，求点到直线垂足点时，直线信息不正确，A与B同时为零！”, 0, )
    返回 (坐标)
.如果真结束

赋值 (分母, 相加 (求次方 (参直线.A, 2), 求次方 (参直线.B, 2)))
.判断开始 (等于 (分母, 0))
    返回 (坐标)
.默认
    赋值 (分子x, 相减 (相乘 (求次方 (参直线.B, 2), 坐标.x), 相乘 (参直线.A, 参直线.B, 坐标.y), 相乘 (参直线.A, 参直线.C)))
    赋值 (分子y, 相减 (相乘 (求次方 (参直线.A, 2), 坐标.y), 相乘 (参直线.A, 参直线.B, 坐标.x), 相乘 (参直线.B, 参直线.C)))
    .如果 (等于 (分子x, 0))
        赋值 (坐标.x, 0)
    .否则
        赋值 (坐标.x, 相除 (分子x, 分母))
    .如果结束
    
    .如果 (等于 (分子y, 0))
        赋值 (坐标.y, 0)
    .否则
        赋值 (坐标.y, 相除 (分子y, 分母))
    .如果结束
    返回 (坐标)
.判断结束


.子程序 到直线垂距316, 双精度小数型, , |Ax+By+C|/sqrt(A^2+B^2)  调用前先检查A，B是否同时等于零。
.参数 参点, 坐标, , 直线外的点
.参数 参直线, 直线一般式, , 直线方程的一般式中系数A、B不能同时为零．可先在程序中对直线的合法性进行检查，调用：检查直线()命令即可。

.局部变量 分母, 双精度小数型, , , 
.局部变量 分子, 双精度小数型, , , 

赋值 (分母, 求平方根 (相加 (求次方 (参直线.A, 2), 求次方 (参直线.B, 2))))
.判断开始 (等于 (分母, 0))
    信息框 (“求点到直线垂距时，所给直线信息不合法：A，B同时为零”, 0, )
    返回 (0)
.默认
    赋值 (分子, 取绝对值 (相加 (相乘 (参点.x, 参直线.A), 相乘 (参点.y, 参直线.B), 参直线.C)))
    .判断开始 (等于 (分子, 0))
        返回 (0)
    .默认
        返回 (相除 (分子, 分母))
    .判断结束
    
.判断结束


.子程序 到直线垂线段316, 线段, , 注意：返回的线段是以所提供的参数点为起点的，尾点为垂足点。调用前先检查A，B是否同时等于零。如果所给定的直线一般式信息不合法，将生成起始点重合的线段，线段的指向为从坐标原点引向坐标点的直线信息，如果此点又与坐标原点重合，将返回与X轴重合的直线信息。
.参数 参点, 坐标, , 直线外的点，如果点在直线上，将以通过该点的直线的法线的一般式信息，赋给起始点重合的线段。
.参数 参直线, 直线一般式, , 直线方程的一般式中系数A、B不能同时为零．

.局部变量 点, 坐标, , , 
.局部变量 二维线段类, 类线段, , , 
.局部变量 直线类, 类直线一般式, , , 
.局部变量 线段, 线段, , , 

赋值 (点, 参点)
赋值 (线段.起点, 参点)
赋值 (线段.尾点, 到直线垂足点316 (点, 参直线))
.如果 (并且 (等于 (线段.起点.x, 线段.尾点.x), 等于 (线段.起点.y, 线段.尾点.y)))
     ' 新生成的线段，由于起始点重合，无法用线段本身来求得直线一般式信息，所以应依据其生成的方式来求得直线一般式信息。
    .判断开始 (并且 (等于 (参直线.A, 0), 等于 (参直线.B, 0)))
        .如果真 (并且 (等于 (点.x, 0), 等于 (点.y, 0)))
            赋值 (点.x, 1)
        .如果真结束
        
        赋值 (线段.直线,  [二维线段类.创建_两点316 (点)].直线)
    .默认
        赋值 (线段.直线, 直线类.旋转 (参直线, 线段.起点, 相除 (#pi, 2)))
    .判断结束
    
.否则
    赋值 (线段.直线, 二维线段类.求直线316 (线段))
.如果结束
返回 (线段)

.子程序 中间点316, 坐标, , 求位于两点之间的中间点位置.
.参数 参起点, 坐标, , 
.参数 参尾点, 坐标, , 

.局部变量 中间点, 坐标, , , 

赋值 (中间点.x, 相加 (参起点.x, 相除 (相减 (参尾点.x, 参起点.x), 2)))
赋值 (中间点.y, 相加 (参起点.y, 相除 (相减 (参尾点.y, 参起点.y), 2)))
返回 (中间点)

.子程序 求三分点316, 坐标, , 求位于两点之间的三分点位置，这样的点共两个，以起点方向向尾点方向开始编号。根据所指定的序号选择返回点的位置.默认第1点。
.参数 参起点, 坐标, , 
.参数 参尾点, 坐标, , 
.参数 参序号, 整数型, 可空, 常量，1或2，小于等于是1时就会返回第一点，大于1时就会返回第二点。

.局部变量 分点, 坐标, , , 
.局部变量 距离, 双精度小数型, , , 

赋值 (距离, 距离316 (参起点, 参尾点))
.如果真 (小于或等于 (距离, #零5))
    赋值 (分点, 参起点)
    返回 (分点)
.如果真结束

.判断开始 (小于或等于 (参序号, 1))
    赋值 (分点.x, 相加 (参起点.x, 相除 (相减 (参尾点.x, 参起点.x), 3)))
    赋值 (分点.y, 相加 (参起点.y, 相除 (相减 (参尾点.y, 参起点.y), 3)))
.默认
    赋值 (分点.x, 相加 (参起点.x, 相乘 (相除 (相减 (参尾点.x, 参起点.x), 3), 2)))
    赋值 (分点.y, 相加 (参起点.y, 相乘 (相除 (相减 (参尾点.y, 参起点.y), 3), 2)))
.判断结束
返回 (分点)

.子程序 求三分点集316, 坐标集, , 求位于两点之间的三分点位置，这样的点共两个.，以起点方向向尾点方向开始编号。
.参数 参起点, 坐标, , 
.参数 参尾点, 坐标, , 
.参数 参包含起点, 逻辑型, 可空, 
.参数 参包含尾点, 逻辑型, 可空, 

.局部变量 dx, 双精度小数型, , , 
.局部变量 dy, 双精度小数型, , , 
.局部变量 分点, 坐标集, , , 
.局部变量 距离, 双精度小数型, , , 

赋值 (距离, 距离316 (参起点, 参尾点))
.如果真 (小于或等于 (距离, #零5))
    赋值 (分点.坐标 [1], 参起点)
    返回 (分点)
.如果真结束

.判断开始 (并且 (参包含起点, 参包含尾点))
    重定义数组 (分点.坐标, 假, 4)
.判断 (或者 (参包含起点, 参包含尾点))
    重定义数组 (分点.坐标, 假, 3)
.默认
    重定义数组 (分点.坐标, 假, 2)
.判断结束
赋值 (dx, 相除 (相减 (参尾点.x, 参起点.x), 3))
赋值 (dy, 相除 (相减 (参尾点.y, 参起点.y), 3))
.判断开始 (并且 (参包含起点, 参包含尾点))
    赋值 (分点.坐标 [1], 参起点)
    赋值 (分点.坐标 [2].x, 相加 (参起点.x, dx))
    赋值 (分点.坐标 [2].y, 相加 (参起点.y, dy))
    赋值 (分点.坐标 [3].x, 相加 (参起点.x, 相乘 (dx, 2)))
    赋值 (分点.坐标 [3].y, 相加 (参起点.y, 相乘 (dy, 2)))
    赋值 (分点.坐标 [4], 参尾点)
.判断 (或者 (参包含起点, 参包含尾点))
    .判断开始 (参包含起点)
        赋值 (分点.坐标 [1], 参起点)
        赋值 (分点.坐标 [2].x, 相加 (参起点.x, dx))
        赋值 (分点.坐标 [2].y, 相加 (参起点.y, dy))
        赋值 (分点.坐标 [3].x, 相加 (参起点.x, 相乘 (dx, 2)))
        赋值 (分点.坐标 [3].y, 相加 (参起点.y, 相乘 (dy, 2)))
    .默认
        赋值 (分点.坐标 [1].x, 相加 (参起点.x, dx))
        赋值 (分点.坐标 [1].y, 相加 (参起点.y, dy))
        赋值 (分点.坐标 [2].x, 相加 (参起点.x, 相乘 (dx, 2)))
        赋值 (分点.坐标 [2].y, 相加 (参起点.y, 相乘 (dy, 2)))
        赋值 (分点.坐标 [3], 参尾点)
    .判断结束
    
.默认
    赋值 (分点.坐标 [1].x, 相加 (参起点.x, dx))
    赋值 (分点.坐标 [1].y, 相加 (参起点.y, dy))
    赋值 (分点.坐标 [2].x, 相加 (参起点.x, 相乘 (dx, 2)))
    赋值 (分点.坐标 [2].y, 相加 (参起点.y, 相乘 (dy, 2)))
.判断结束

返回 (分点)

.子程序 求四分点316, 坐标, , 求位于两点之间的四分点位置，这样的点共三个，，以起点方向向尾点方向开始编号。根据所指定的序号选择返回点的位置.默认第1点。
.参数 参起点, 坐标, , 
.参数 参尾点, 坐标, , 
.参数 参序号, 整数型, 可空, 常量，1,2,3，小于等于是1时就会返回第一点，等于2时返回第2点，大于2时就会返回第3点。

.局部变量 分点, 坐标, , , 
.局部变量 距离, 双精度小数型, , , 

赋值 (距离, 距离316 (参起点, 参尾点))
.如果真 (小于或等于 (距离, #零5))
    赋值 (分点, 参起点)
    返回 (分点)
.如果真结束

.判断开始 (小于或等于 (参序号, 1))
    赋值 (分点.x, 相加 (参起点.x, 相除 (相减 (参尾点.x, 参起点.x), 4)))
    赋值 (分点.y, 相加 (参起点.y, 相除 (相减 (参尾点.y, 参起点.y), 4)))
.判断 (等于 (参序号, 2))
    赋值 (分点.x, 相加 (参起点.x, 相乘 (相除 (相减 (参尾点.x, 参起点.x), 4), 2)))
    赋值 (分点.y, 相加 (参起点.y, 相乘 (相除 (相减 (参尾点.y, 参起点.y), 4), 2)))
.默认
    赋值 (分点.x, 相加 (参起点.x, 相乘 (相除 (相减 (参尾点.x, 参起点.x), 4), 3)))
    赋值 (分点.y, 相加 (参起点.y, 相乘 (相除 (相减 (参尾点.y, 参起点.y), 4), 3)))
.判断结束
返回 (分点)

.子程序 求四分点集316, 坐标集, , 求位于两点之间的四分点位置，这样的点共三个，以起点方向向尾点方向开始编号。
.参数 参起点, 坐标, , 
.参数 参尾点, 坐标, , 
.参数 参包含起点, 逻辑型, 可空, 
.参数 参包含尾点, 逻辑型, 可空, 

.局部变量 dx, 双精度小数型, , , 
.局部变量 dy, 双精度小数型, , , 
.局部变量 分点, 坐标集, , , 
.局部变量 距离, 双精度小数型, , , 

赋值 (距离, 距离316 (参起点, 参尾点))
.如果真 (小于或等于 (距离, #零5))
    赋值 (分点.坐标 [1], 参起点)
    返回 (分点)
.如果真结束

.判断开始 (并且 (参包含起点, 参包含尾点))
    重定义数组 (分点.坐标, 假, 5)
.判断 (或者 (参包含起点, 参包含尾点))
    重定义数组 (分点.坐标, 假, 4)
.默认
    重定义数组 (分点.坐标, 假, 3)
.判断结束
赋值 (dx, 相除 (相减 (参尾点.x, 参起点.x), 4))
赋值 (dy, 相除 (相减 (参尾点.y, 参起点.y), 4))
.判断开始 (并且 (参包含起点, 参包含尾点))
    赋值 (分点.坐标 [1], 参起点)
    赋值 (分点.坐标 [2].x, 相加 (参起点.x, dx))
    赋值 (分点.坐标 [2].y, 相加 (参起点.y, dy))
    赋值 (分点.坐标 [3].x, 相加 (参起点.x, 相乘 (dx, 2)))
    赋值 (分点.坐标 [3].y, 相加 (参起点.y, 相乘 (dy, 2)))
    赋值 (分点.坐标 [4].x, 相加 (参起点.x, 相乘 (dx, 3)))
    赋值 (分点.坐标 [4].y, 相加 (参起点.y, 相乘 (dy, 3)))
    赋值 (分点.坐标 [5], 参尾点)
.判断 (或者 (参包含起点, 参包含尾点))
    .判断开始 (参包含起点)
        赋值 (分点.坐标 [1], 参起点)
        赋值 (分点.坐标 [2].x, 相加 (参起点.x, dx))
        赋值 (分点.坐标 [2].y, 相加 (参起点.y, dy))
        赋值 (分点.坐标 [3].x, 相加 (参起点.x, 相乘 (dx, 2)))
        赋值 (分点.坐标 [3].y, 相加 (参起点.y, 相乘 (dy, 2)))
        赋值 (分点.坐标 [4].x, 相加 (参起点.x, 相乘 (dx, 3)))
        赋值 (分点.坐标 [4].y, 相加 (参起点.y, 相乘 (dy, 3)))
        
    .默认
        赋值 (分点.坐标 [1].x, 相加 (参起点.x, dx))
        赋值 (分点.坐标 [1].y, 相加 (参起点.y, dy))
        赋值 (分点.坐标 [2].x, 相加 (参起点.x, 相乘 (dx, 2)))
        赋值 (分点.坐标 [2].y, 相加 (参起点.y, 相乘 (dy, 2)))
        赋值 (分点.坐标 [3].x, 相加 (参起点.x, 相乘 (dx, 3)))
        赋值 (分点.坐标 [3].y, 相加 (参起点.y, 相乘 (dy, 3)))
        赋值 (分点.坐标 [4], 参尾点)
    .判断结束
    
.默认
    赋值 (分点.坐标 [1].x, 相加 (参起点.x, dx))
    赋值 (分点.坐标 [1].y, 相加 (参起点.y, dy))
    赋值 (分点.坐标 [2].x, 相加 (参起点.x, 相乘 (dx, 2)))
    赋值 (分点.坐标 [2].y, 相加 (参起点.y, 相乘 (dy, 2)))
    赋值 (分点.坐标 [3].x, 相加 (参起点.x, 相乘 (dx, 3)))
    赋值 (分点.坐标 [3].y, 相加 (参起点.y, 相乘 (dy, 3)))
.判断结束

返回 (分点)

.子程序 求五分点316, 坐标, , 求位于两点之间的五分点位置，这样的点共四个，，以起点方向向尾点方向开始编号。根据所指定的序号选择返回点的位置.默认第1点。
.参数 参起点, 坐标, , 
.参数 参尾点, 坐标, , 
.参数 参序号, 整数型, 可空, 常量，1,2,3,4，小于等于是1时就会返回第一点，等于2时返回第2点，等于3时返回第3点，大于3时就会返回第4点。

.局部变量 分点, 坐标, , , 
.局部变量 距离, 双精度小数型, , , 

赋值 (距离, 距离316 (参起点, 参尾点))
.如果真 (小于或等于 (距离, #零5))
    赋值 (分点, 参起点)
    返回 (分点)
.如果真结束

.判断开始 (小于或等于 (参序号, 1))
    赋值 (分点.x, 相加 (参起点.x, 相除 (相减 (参尾点.x, 参起点.x), 5)))
    赋值 (分点.y, 相加 (参起点.y, 相除 (相减 (参尾点.y, 参起点.y), 5)))
.判断 (等于 (参序号, 2))
    赋值 (分点.x, 相加 (参起点.x, 相乘 (相除 (相减 (参尾点.x, 参起点.x), 5), 2)))
    赋值 (分点.y, 相加 (参起点.y, 相乘 (相除 (相减 (参尾点.y, 参起点.y), 5), 2)))
.判断 (等于 (参序号, 3))
    赋值 (分点.x, 相加 (参起点.x, 相乘 (相除 (相减 (参尾点.x, 参起点.x), 5), 3)))
    赋值 (分点.y, 相加 (参起点.y, 相乘 (相除 (相减 (参尾点.y, 参起点.y), 5), 3)))
.默认
    赋值 (分点.x, 相加 (参起点.x, 相乘 (相除 (相减 (参尾点.x, 参起点.x), 5), 4)))
    赋值 (分点.y, 相加 (参起点.y, 相乘 (相除 (相减 (参尾点.y, 参起点.y), 5), 4)))
.判断结束
返回 (分点)

.子程序 求五分点集316, 坐标集, , 求位于两点之间的五分点位置，这样的点共四个.，以起点方向向尾点方向开始编号。
.参数 参起点, 坐标, , 
.参数 参尾点, 坐标, , 
.参数 参包含起点, 逻辑型, 可空, 
.参数 参包含尾点, 逻辑型, 可空, 

.局部变量 dx, 双精度小数型, , , 
.局部变量 dy, 双精度小数型, , , 
.局部变量 分点, 坐标集, , , 
.局部变量 距离, 双精度小数型, , , 

赋值 (距离, 距离316 (参起点, 参尾点))
.如果真 (小于或等于 (距离, #零5))
    赋值 (分点.坐标 [1], 参起点)
    返回 (分点)
.如果真结束

.判断开始 (并且 (参包含起点, 参包含尾点))
    重定义数组 (分点.坐标, 假, 6)
.判断 (或者 (参包含起点, 参包含尾点))
    重定义数组 (分点.坐标, 假, 5)
.默认
    重定义数组 (分点.坐标, 假, 4)
.判断结束
赋值 (dx, 相除 (相减 (参尾点.x, 参起点.x), 5))
赋值 (dy, 相除 (相减 (参尾点.y, 参起点.y), 5))
.判断开始 (并且 (参包含起点, 参包含尾点))
    赋值 (分点.坐标 [1], 参起点)
    赋值 (分点.坐标 [2].x, 相加 (参起点.x, dx))
    赋值 (分点.坐标 [2].y, 相加 (参起点.y, dy))
    赋值 (分点.坐标 [3].x, 相加 (参起点.x, 相乘 (dx, 2)))
    赋值 (分点.坐标 [3].y, 相加 (参起点.y, 相乘 (dy, 2)))
    赋值 (分点.坐标 [4].x, 相加 (参起点.x, 相乘 (dx, 3)))
    赋值 (分点.坐标 [4].y, 相加 (参起点.y, 相乘 (dy, 3)))
    赋值 (分点.坐标 [5].x, 相加 (参起点.x, 相乘 (dx, 4)))
    赋值 (分点.坐标 [5].y, 相加 (参起点.y, 相乘 (dy, 4)))
    赋值 (分点.坐标 [6], 参尾点)
.判断 (或者 (参包含起点, 参包含尾点))
    .判断开始 (参包含起点)
        赋值 (分点.坐标 [1], 参起点)
        赋值 (分点.坐标 [2].x, 相加 (参起点.x, dx))
        赋值 (分点.坐标 [2].y, 相加 (参起点.y, dy))
        赋值 (分点.坐标 [3].x, 相加 (参起点.x, 相乘 (dx, 2)))
        赋值 (分点.坐标 [3].y, 相加 (参起点.y, 相乘 (dy, 2)))
        赋值 (分点.坐标 [4].x, 相加 (参起点.x, 相乘 (dx, 3)))
        赋值 (分点.坐标 [4].y, 相加 (参起点.y, 相乘 (dy, 3)))
        赋值 (分点.坐标 [5].x, 相加 (参起点.x, 相乘 (dx, 4)))
        赋值 (分点.坐标 [5].y, 相加 (参起点.y, 相乘 (dy, 4)))
        
    .默认
        赋值 (分点.坐标 [1].x, 相加 (参起点.x, dx))
        赋值 (分点.坐标 [1].y, 相加 (参起点.y, dy))
        赋值 (分点.坐标 [2].x, 相加 (参起点.x, 相乘 (dx, 2)))
        赋值 (分点.坐标 [2].y, 相加 (参起点.y, 相乘 (dy, 2)))
        赋值 (分点.坐标 [3].x, 相加 (参起点.x, 相乘 (dx, 3)))
        赋值 (分点.坐标 [3].y, 相加 (参起点.y, 相乘 (dy, 3)))
        赋值 (分点.坐标 [4].x, 相加 (参起点.x, 相乘 (dx, 4)))
        赋值 (分点.坐标 [4].y, 相加 (参起点.y, 相乘 (dy, 4)))
        赋值 (分点.坐标 [5], 参尾点)
    .判断结束
    
.默认
    赋值 (分点.坐标 [1].x, 相加 (参起点.x, dx))
    赋值 (分点.坐标 [1].y, 相加 (参起点.y, dy))
    赋值 (分点.坐标 [2].x, 相加 (参起点.x, 相乘 (dx, 2)))
    赋值 (分点.坐标 [2].y, 相加 (参起点.y, 相乘 (dy, 2)))
    赋值 (分点.坐标 [3].x, 相加 (参起点.x, 相乘 (dx, 3)))
    赋值 (分点.坐标 [3].y, 相加 (参起点.y, 相乘 (dy, 3)))
    赋值 (分点.坐标 [4].x, 相加 (参起点.x, 相乘 (dx, 4)))
    赋值 (分点.坐标 [4].y, 相加 (参起点.y, 相乘 (dy, 4)))
.判断结束

返回 (分点)

.子程序 求N分点316, 坐标, , 求位于两点之间的五分点位置，这样的点共n-1个，，以起点方向向尾点方向开始编号。根据所指定的序号选择返回点的位置.默认第1点。
.参数 参起点, 坐标, , 
.参数 参尾点, 坐标, , 
.参数 参等分数N, 整数型, , 不能为零和负数，如果为负数将自动反号，如果绝对值为0、1、2就返回中分点。
.参数 参序号, 整数型, 可空, 常量，1,2,3,4,....n-1，小于等于是1时就会返回第一点，等于2时返回第2点，等于3时返回第3点，....大于等于n-1时就会返回第n-1点。

.局部变量 分点, 坐标, , , 
.局部变量 距离, 双精度小数型, , , 

赋值 (距离, 距离316 (参起点, 参尾点))
.如果真 (小于或等于 (距离, #零5))
    赋值 (分点, 参起点)
    返回 (分点)
.如果真结束

赋值 (参等分数N, 取绝对值 (参等分数N))
.如果真 (或者 (等于 (参等分数N, 0), 等于 (参等分数N, 1), 等于 (参等分数N, 2)))
    赋值 (分点.x, 相加 (参起点.x, 相除 (相减 (参尾点.x, 参起点.x), 2)))
    赋值 (分点.y, 相加 (参起点.y, 相除 (相减 (参尾点.y, 参起点.y), 2)))
    返回 (分点)
.如果真结束

.判断开始 (小于或等于 (参序号, 1))
    赋值 (分点.x, 相加 (参起点.x, 相除 (相减 (参尾点.x, 参起点.x), 参等分数N)))
    赋值 (分点.y, 相加 (参起点.y, 相除 (相减 (参尾点.y, 参起点.y), 参等分数N)))
.判断 (大于或等于 (参序号, 相减 (参等分数N, 1)))
    赋值 (分点.x, 相加 (参起点.x, 相乘 (相除 (相减 (参尾点.x, 参起点.x), 参等分数N), 相减 (参等分数N, 1))))
    赋值 (分点.y, 相加 (参起点.y, 相乘 (相除 (相减 (参尾点.y, 参起点.y), 参等分数N), 相减 (参等分数N, 1))))
.默认
    赋值 (分点.x, 相加 (参起点.x, 相乘 (相除 (相减 (参尾点.x, 参起点.x), 参等分数N), 参序号)))
    赋值 (分点.y, 相加 (参起点.y, 相乘 (相除 (相减 (参尾点.y, 参起点.y), 参等分数N), 参序号)))
.判断结束
返回 (分点)

.子程序 求N分点集316, 坐标集, , 求位于两点之间的五分点位置，这样的点共n-1个.，以起点方向向尾点方向开始编号。
.参数 参起点, 坐标, , 
.参数 参尾点, 坐标, , 
.参数 参等分数N, 整数型, , 不能为零和负数，如果为负数将自动反号，如果绝对值为0、1、2就返回中分点。
.参数 参包含起点, 逻辑型, 可空, 
.参数 参包含尾点, 逻辑型, 可空, 

.局部变量 dx, 双精度小数型, , , 
.局部变量 dy, 双精度小数型, , , 
.局部变量 i, 整数型, , , 
.局部变量 分点, 坐标集, , , 
.局部变量 距离, 双精度小数型, , , 

赋值 (距离, 距离316 (参起点, 参尾点))
.如果真 (小于或等于 (距离, #零5))
    赋值 (分点.坐标 [1], 参起点)
    返回 (分点)
.如果真结束

赋值 (参等分数N, 取绝对值 (参等分数N))
.如果真 (或者 (等于 (参等分数N, 0), 等于 (参等分数N, 1), 等于 (参等分数N, 2)))
    .判断开始 (并且 (参包含起点, 参包含尾点))
        重定义数组 (分点.坐标, 假, 3)
    .判断 (或者 (参包含起点, 参包含尾点))
        重定义数组 (分点.坐标, 假, 2)
    .默认
        重定义数组 (分点.坐标, 假, 1)
    .判断结束
    
    .判断开始 (并且 (参包含起点, 参包含尾点))
        赋值 (分点.坐标 [1], 参起点)
        赋值 (分点.坐标 [2].x, 相加 (参起点.x, 相除 (相减 (参尾点.x, 参起点.x), 2)))
        赋值 (分点.坐标 [2].y, 相加 (参起点.y, 相除 (相减 (参尾点.y, 参起点.y), 2)))
        赋值 (分点.坐标 [3], 参尾点)
    .判断 (或者 (参包含起点, 参包含尾点))
        .判断开始 (参包含起点)
            赋值 (分点.坐标 [1], 参起点)
            赋值 (分点.坐标 [2].x, 相加 (参起点.x, 相除 (相减 (参尾点.x, 参起点.x), 2)))
            赋值 (分点.坐标 [2].y, 相加 (参起点.y, 相除 (相减 (参尾点.y, 参起点.y), 2)))
        .默认
            赋值 (分点.坐标 [1].x, 相加 (参起点.x, 相除 (相减 (参尾点.x, 参起点.x), 2)))
            赋值 (分点.坐标 [1].y, 相加 (参起点.y, 相除 (相减 (参尾点.y, 参起点.y), 2)))
            赋值 (分点.坐标 [2], 参尾点)
        .判断结束
        
    .默认
        赋值 (分点.坐标 [1].x, 相加 (参起点.x, 相除 (相减 (参尾点.x, 参起点.x), 2)))
        赋值 (分点.坐标 [1].y, 相加 (参起点.y, 相除 (相减 (参尾点.y, 参起点.y), 2)))
    .判断结束
    
    返回 (分点)
.如果真结束

.判断开始 (并且 (参包含起点, 参包含尾点))
    重定义数组 (分点.坐标, 假, 相加 (参等分数N, 2))
.判断 (或者 (参包含起点, 参包含尾点))
    重定义数组 (分点.坐标, 假, 相加 (参等分数N, 1))
.默认
    重定义数组 (分点.坐标, 假, 参等分数N)
.判断结束

赋值 (dx, 相除 (相减 (参尾点.x, 参起点.x), 参等分数N))
赋值 (dy, 相除 (相减 (参尾点.y, 参起点.y), 参等分数N))
.判断开始 (并且 (参包含起点, 参包含尾点))
    赋值 (分点.坐标 [1], 参起点)
    .计次循环首 (参等分数N, i)
        赋值 (分点.坐标 [相加 (i, 1)].x, 相加 (参起点.x, 相乘 (dx, i)))
        赋值 (分点.坐标 [相加 (i, 1)].y, 相加 (参起点.y, 相乘 (dy, i)))
    .计次循环尾 ()
    赋值 (分点.坐标 [相加 (参等分数N, 2)], 参尾点)
.判断 (或者 (参包含起点, 参包含尾点))
    .判断开始 (参包含起点)
        赋值 (分点.坐标 [1], 参起点)
        .计次循环首 (参等分数N, i)
            赋值 (分点.坐标 [相加 (i, 1)].x, 相加 (参起点.x, 相乘 (dx, i)))
            赋值 (分点.坐标 [相加 (i, 1)].y, 相加 (参起点.y, 相乘 (dy, i)))
        .计次循环尾 ()
        
    .默认
        .计次循环首 (参等分数N, i)
            赋值 (分点.坐标 [i], x, 相加 (参起点.x, 相乘 (dx, i)))
            赋值 (分点.坐标 [i], y, 相加 (参起点.y, 相乘 (dy, i)))
        .计次循环尾 ()
        赋值 (分点.坐标 [相加 (参等分数N, 1)], 参尾点)
    .判断结束
    
.默认
    .计次循环首 (参等分数N, i)
        赋值 (分点.坐标 [i], x, 相加 (参起点.x, 相乘 (dx, i)))
        赋值 (分点.坐标 [i], y, 相加 (参起点.y, 相乘 (dy, i)))
    .计次循环尾 ()
.判断结束

返回 (分点)

.子程序 求比例分点316, 坐标, , 求位于两点之间的比例分点位置，这样的点共两个，以起点方向向尾点方向开始编号。根据所指定的序号选择返回点的位置.默认第1点。
.参数 参起点, 坐标, , 
.参数 参尾点, 坐标, , 
.参数 参比例一分量, 双精度小数型, , 比如要二八分段就录入2。总比重为一二段之录入值之和。比例必须为正数，且两个比例分量之后不能为零。
.参数 参比例二分量, 双精度小数型, , 比如要二八分段就录入8。总比重为一二段之录入值之和。比例必须为正数，且两个比例分量之后不能为零。
.参数 参序号, 整数型, 可空, 常量，1或2，小于等于是1时就会返回第一点，大于1时就会返回第二点。

.局部变量 总比重, 双精度小数型, , , 
.局部变量 dx, 双精度小数型, , , 
.局部变量 dy, 双精度小数型, , , 
.局部变量 坐标, 坐标, , , 
.局部变量 分点, 坐标, , , 
.局部变量 距离, 双精度小数型, , , 

赋值 (距离, 距离316 (参起点, 参尾点))
.如果真 (小于或等于 (距离, #零5))
    赋值 (分点, 参起点)
    返回 (分点)
.如果真结束

赋值 (总比重, 相加 (参比例一分量, 参比例二分量))
.判断开始 (小于或等于 (参序号, 1))
    赋值 (dx, 相除 (相乘 (相减 (参尾点.x, 参起点.x), 参比例一分量), 总比重))
    赋值 (dy, 相除 (相乘 (相减 (参尾点.y, 参起点.y), 参比例一分量), 总比重))
    赋值 (坐标.x, 相加 (参起点.x, dx))
    赋值 (坐标.y, 相加 (参起点.y, dy))
.默认
    赋值 (dx, 相除 (相乘 (相减 (参起点.x, 参尾点.x), 参比例一分量), 总比重))
    赋值 (dy, 相除 (相乘 (相减 (参起点.y, 参尾点.y), 参比例一分量), 总比重))
    赋值 (坐标.x, 相加 (参尾点.x, dx))
    赋值 (坐标.y, 相加 (参尾点.y, dy))
.判断结束
返回 (坐标)

.子程序 求黄金分割点316, 坐标, , 黄金分割比例有待查证。位于两点之间的黄金分割点位置，这样的点共两个，以起点方向向尾点方向开始编号。根据所指定的序号选择返回点的位置.默认第1点。
.参数 参起点, 坐标, , 
.参数 参尾点, 坐标, , 
.参数 参序号, 整数型, 可空, 常量，1或2，小于等于是1时就会返回第一点，大于1时就会返回第二点。

返回 (求比例分点316 (参起点, 参尾点, 3.72, 6.28, 参序号))

.子程序 求定长插点集316, 坐标集, , 求位于两点之间的五分点位置，这样的点共n-1个.，以起点方向向尾点方向开始编号。
.参数 参起点, 坐标, , 
.参数 参尾点, 坐标, , 
.参数 参丈量单位长度, 整数型, , 不能为零和负数，也不应小于两点间的距离，如果为负数将自动反号，如果绝对值为0将返回9个比例分点，也就是十等分，数量不包含起点和尾点。
.参数 参包含起点, 逻辑型, 可空, 
.参数 参包含尾点, 逻辑型, 可空, 
.参数 参等分调整, 逻辑型, 可空, 如果给定的丈量单位长度不能等分两点间的距离，是否允许进行微量调整，使其等距离插入点。如果为假，最后一个插入点到尾点的距离将小于其它插入点间的距离。

.局部变量 标准丈量总长, 双精度小数型, , , 
.局部变量 等分数, 整数型, , , 
.局部变量 新尾点, 坐标, , , 
.局部变量 分点, 坐标集, , , 
.局部变量 距离, 双精度小数型, , , 

赋值 (距离, 距离316 (参起点, 参尾点))
.如果真 (小于或等于 (距离, #零5))
    赋值 (分点.坐标 [1], 参起点)
    返回 (分点)
.如果真结束

赋值 (参丈量单位长度, 取绝对值 (参丈量单位长度))

.如果真 (等于 (参丈量单位长度, 0))
    返回 (求N分点集316 (参起点, 参尾点, 10, 参包含起点, 参包含尾点))
.如果真结束


赋值 (等分数, 相除 (距离, 参丈量单位长度)) ' 自动取整数部分
赋值 (标准丈量总长, 相乘 (等分数, 参丈量单位长度))
.判断开始 (大于 (相减 (距离, 标准丈量总长), #零5))
    .判断开始 (参等分调整)
        返回 (求N分点集316 (参起点, 参尾点, 等分数, 参包含起点, 参包含尾点))
    .默认
        赋值 (新尾点, 靠近316 (参尾点, 参起点, 相减 (距离, 标准丈量总长)))
        赋值 (分点, 求N分点集316 (参起点, 新尾点, 等分数, , ))
        .如果真 (参包含起点)
            插入成员 (分点.坐标, 1, 参起点)
        .如果真结束
        
        .如果真 (参包含尾点)
            加入成员 (分点.坐标, 参尾点)
        .如果真结束
        返回 (分点)
    .判断结束
    
.默认
    返回 (求N分点集316 (参起点, 参尾点, 等分数, 参包含起点, 参包含尾点))
.判断结束


.子程序 求最近自然整数空间点集316, 坐标集, , 将整个空间系统进行整数点位置分区，每个区间用一个X、Y、Z均为整数的坐标来表示，并且相临两个整数点之间的距离保持为1。一个空间坐标总可以找到一个或多个最近的整数点.一个空间点最多可能离八个空间整数点一样近，最少也有一个最近整数点。
.参数 参点, 坐标, , 

.局部变量 点, 坐标, , , 
.局部变量 整部x, 整数型, , , 
.局部变量 整部y, 整数型, , , 
.局部变量 整部z, 整数型, , , 
.局部变量 小部, 坐标, , , 
.局部变量 最近点, 坐标集, , , 
.局部变量 X, 整数型, , "1", 
.局部变量 Y, 整数型, , "1", 
.局部变量 ix, 整数型, , , 
.局部变量 iy, 整数型, , , 

赋值 (点, 参点)
赋值 (整部x, 点.x)
赋值 (整部y, 点.y)
赋值 (小部.x, 相减 (点.x, 整部x))
赋值 (小部.y, 相减 (点.y, 整部y))
.判断开始 (小于 (取绝对值 (小部.x), 0.5))
    赋值 (X [1], 整部x)
.判断 (大于 (取绝对值 (小部.x), 0.5))
    赋值 (X [1], 相加 (整部x, 取符号 (小部.x)))
.默认
    重定义数组 (X, 假, 2)
    赋值 (X [1], 整部x)
    赋值 (X [2], 相加 (整部x, 取符号 (小部.x)))
.判断结束

.判断开始 (小于 (取绝对值 (小部.y), 0.5))
    赋值 (Y [1], 整部y)
.判断 (大于 (取绝对值 (小部.y), 0.5))
    赋值 (Y [1], 相加 (整部y, 取符号 (小部.y)))
.默认
    重定义数组 (Y, 假, 2)
    赋值 (Y [1], 整部y)
    赋值 (Y [2], 相加 (整部y, 取符号 (小部.y)))
.判断结束


重定义数组 (最近点.坐标, 假, 0)
.计次循环首 (取数组成员数 (X), ix)
    .计次循环首 (取数组成员数 (Y), iy)
        赋值 (点.x, X [ix])
        赋值 (点.y, Y [iy])
        加入成员 (最近点.坐标, 点)
    .计次循环尾 ()
.计次循环尾 ()
返回 (最近点)

.子程序 求最近单位整数空间点集316, 坐标集, , 将整个空间系统进行整数点位置分区，每个区间用一个X、Y、Z均为整数的坐标来表示，并且相临两个整数点之间的距离保持为一个固定的长度单位 ，空间点的分布总是坐标原点开始向四面八方扩散。一个空间坐标总可以找到一个或多个最近的单位空间点.一个空间点最多可能离八个单位空间点一样近，最少也有一个最近单位空间点。
.参数 参点, 坐标, , 
.参数 参单位距离, 整数型, 可空, 应提供正值，并应大于0，如果提供了负值，将自动反号。如果提供了零值，将按默认值100处理。

.局部变量 点, 坐标, , , 
.局部变量 单位距离, 整数型, , , 
.局部变量 半距, 双精度小数型, , , 
.局部变量 整部x, 整数型, , , 
.局部变量 整部y, 整数型, , , 
.局部变量 整部z, 整数型, , , 
.局部变量 小部, 坐标, , , 
.局部变量 最近点, 坐标集, , , 
.局部变量 X, 整数型, , "1", 
.局部变量 Y, 整数型, , "1", 
.局部变量 ix, 整数型, , , 
.局部变量 iy, 整数型, , , 

赋值 (点, 参点)
赋值 (单位距离, 取绝对值 (参单位距离))
.如果真 (等于 (单位距离, 0))
    赋值 (单位距离, 100)
.如果真结束
赋值 (半距, 相除 (单位距离, 2))

赋值 (整部x, 相乘 (整除 (点.x, 单位距离), 单位距离))
赋值 (整部y, 相乘 (整除 (点.y, 单位距离), 单位距离))
赋值 (小部.x, 相减 (点.x, 整部x))
赋值 (小部.y, 相减 (点.y, 整部y))
.判断开始 (小于 (取绝对值 (小部.x), 半距))
    赋值 (X [1], 整部x)
.判断 (大于 (取绝对值 (小部.x), 半距))
    赋值 (X [1], 相加 (整部x, 相乘 (取符号 (小部.x), 单位距离)))
.默认
    重定义数组 (X, 假, 2)
    赋值 (X [1], 整部x)
    赋值 (X [2], 相加 (整部x, 相乘 (取符号 (小部.x), 单位距离)))
.判断结束

.判断开始 (小于 (取绝对值 (小部.y), 半距))
    赋值 (Y [1], 整部y)
.判断 (大于 (取绝对值 (小部.y), 半距))
    赋值 (Y [1], 相加 (整部y, 相乘 (取符号 (小部.y), 单位距离)))
.默认
    重定义数组 (Y, 假, 2)
    赋值 (Y [1], 整部y)
    赋值 (Y [2], 相加 (整部y, 相乘 (取符号 (小部.y), 单位距离)))
.判断结束


重定义数组 (最近点.坐标, 假, 0)
.计次循环首 (取数组成员数 (X), ix)
    .计次循环首 (取数组成员数 (Y), iy)
        赋值 (点.x, X [ix])
        赋值 (点.y, Y [iy])
        加入成员 (最近点.坐标, 点)
    .计次循环尾 ()
.计次循环尾 ()
返回 (最近点)

.子程序 到三角形距离, 双精度小数型, , 
.参数 参点, 坐标, , 
.参数 参三角形, 三角形, , 

.局部变量 边线AB, 线段, , , 
.局部变量 边线BC, 线段, , , 
.局部变量 边线CA, 线段, , , 
.局部变量 距离, 双精度小数型, , , 
.局部变量 最小距离, 双精度小数型, , , 

赋值 (边线AB.起点, 参三角形.顶点A)
赋值 (边线AB.尾点, 参三角形.顶点B)
赋值 (边线BC.起点, 参三角形.顶点B)
赋值 (边线BC.尾点, 参三角形.顶点C)
赋值 (边线CA.起点, 参三角形.顶点C)
赋值 (边线CA.尾点, 参三角形.顶点A)
赋值 (距离, 到线段距离316 (参点, 边线AB))
赋值 (最小距离, 到线段距离316 (参点, 边线BC))
.如果真 (大于 (距离, 最小距离))
    赋值 (距离, 最小距离)
.如果真结束

赋值 (最小距离, 到线段距离316 (参点, 边线CA))
.如果真 (大于 (距离, 最小距离))
    赋值 (距离, 最小距离)
.如果真结束

返回 (距离)

.子程序 到圆垂距, 双精度小数型, , 
.参数 参点, 坐标, , 
.参数 参圆, 圆, , 

.局部变量 点与圆关系类, 类关系_点与圆, , , 
.局部变量 二维点, 类坐标, , , 
.局部变量 点与圆关系, 整数型, , , 

赋值 (点与圆关系, 点与圆关系类.点与圆关系 (参点, 参圆, ))
.判断开始 (等于 (点与圆关系, #点与圆_点在圆心))
    返回 (参圆.半径)
.判断 (等于 (点与圆关系, #点与圆_点在圆内))
    返回 (相减 (参圆.半径, 二维点.距离316 (参圆.圆心, 参点)))
.判断 (等于 (点与圆关系, #点与圆_点在圆上))
    返回 (0)
.默认
     ' 判断 (点与圆关系 ＝ #点与圆_点在圆外)
    返回 (相减 (二维点.距离316 (参圆.圆心, 参点), 参圆.半径))
.判断结束


.子程序 到圆垂线段, 线段, , 
.参数 参点, 坐标, , 点与圆心重合时，将返回与X轴正方向一致的线段。
.参数 参圆, 圆, , 

.局部变量 点与圆关系类, 类关系_点与圆, , , 
.局部变量 二维点, 类坐标, , , 
.局部变量 二维线段类, 类线段, , , 
.局部变量 点与圆关系, 整数型, , , 
.局部变量 坐标, 坐标, , , 
.局部变量 线段, 线段, , , 

赋值 (点与圆关系, 点与圆关系类.点与圆关系 (参点, 参圆, ))
.判断开始 (等于 (点与圆关系, #点与圆_点在圆心))
    赋值 (坐标.x, 相加 (参圆.圆心.x, 参圆.半径))
    赋值 (坐标.y, 参圆.圆心.y)
    返回 (二维线段类.创建_两点316 (参点, 坐标))
.判断 (等于 (点与圆关系, #点与圆_点在圆内))
    返回 (二维线段类.创建_两点316 (参点, 二维点.平移_两点定向316 (参点, 参圆.圆心, 参点, 相减 (参圆.半径, 二维点.距离316 (参圆.圆心, 参点)))))
.判断 (等于 (点与圆关系, #点与圆_点在圆上))
    赋值 (线段, 二维线段类.创建_两点316 (参点, 参点))
    赋值 (线段.直线,  [二维线段类.创建_两点316 (参圆.圆心, 参点)].直线)
    返回 (线段)
.默认
     ' 判断 (点与圆关系 ＝ #点与圆_点在圆外)
    返回 (二维线段类.创建_两点316 (参点, 二维点.平移_两点定向316 (参点, 参点, 参圆.圆心, 相减 (二维点.距离316 (参圆.圆心, 参点), 参圆.半径))))
.判断结束


.子程序 到圆垂足点, 坐标, , 
.参数 参点, 坐标, , 点与圆心重合时，将返回与X轴正方向一致的线段。
.参数 参圆, 圆, , 

.局部变量 点与圆关系类, 类关系_点与圆, , , 
.局部变量 二维点, 类坐标, , , 
.局部变量 点与圆关系, 整数型, , , 
.局部变量 坐标, 坐标, , , 

赋值 (点与圆关系, 点与圆关系类.点与圆关系 (参点, 参圆, ))
.判断开始 (等于 (点与圆关系, #点与圆_点在圆心))
    赋值 (坐标.x, 相加 (参圆.圆心.x, 参圆.半径))
    赋值 (坐标.y, 参圆.圆心.y)
    返回 (坐标)
.判断 (等于 (点与圆关系, #点与圆_点在圆内))
    返回 (二维点.平移_两点定向316 (参点, 参圆.圆心, 参点, 相减 (参圆.半径, 二维点.距离316 (参圆.圆心, 参点))))
.判断 (等于 (点与圆关系, #点与圆_点在圆上))
    返回 (参点)
.默认
     ' 判断 (点与圆关系 ＝ #点与圆_点在圆外)
    返回 (二维点.平移_两点定向316 (参点, 参点, 参圆.圆心, 相减 (二维点.距离316 (参圆.圆心, 参点), 参圆.半径)))
.判断结束


.子程序 到圆左切点, 坐标, , 
.参数 参点, 坐标, , 点只能在圆外，否则不能产生左右切点。如果点在圆上或在圆内，将返回点本身。
.参数 参圆, 圆, , 

.局部变量 点与圆关系类, 类关系_点与圆, , , 
.局部变量 二维点, 类坐标, , , 
.局部变量 点与圆关系, 整数型, , , 
.局部变量 坐标, 坐标, , , 

赋值 (点与圆关系, 点与圆关系类.点与圆关系 (参点, 参圆, ))
.判断开始 (等于 (点与圆关系, #点与圆_点在圆心))
    返回 (参点)
.判断 (等于 (点与圆关系, #点与圆_点在圆内))
    返回 (参点)
.判断 (等于 (点与圆关系, #点与圆_点在圆上))
    返回 (参点)
.默认
     ' 判断 (点与圆关系 ＝ #点与圆_点在圆外)
    返回 (坐标)
    
    
    
    
    
.判断结束


.类模块 类直线一般式, , , 一般式直线简称直线，系数A、B不能同时为零。Ax+By+C=0 (其中A、B不同时为0)

.子程序 创建直线, 直线一般式, , 
.参数 参A, 双精度小数型, , 
.参数 参B, 双精度小数型, , 
.参数 参C, 双精度小数型, , 

.局部变量 二维直线一般式, 直线一般式, , , 

赋值 (二维直线一般式.A, 参A)
赋值 (二维直线一般式.B, 参B)
赋值 (二维直线一般式.C, 参C)
返回 (二维直线一般式)

.子程序 创建直线_两点, 直线一般式, , 
.参数 参起点, 坐标, , 
.参数 参尾点, 坐标, , 

.局部变量 二维线段, 类线段, , , 

返回 ( [二维线段.创建_两点316 (参起点, 参尾点)].直线)

.子程序 求Y, 双精度小数型, , 调用前先检查B是否等于零。Y=-A/B*X-C/B,B<>0
.参数 参直线, 直线一般式, , 直线方程的一般式中系数A、B不能同时为零．要求出Y值，必须保证B不为零。
.参数 参x, 双精度小数型, 可空, 

.判断开始 (等于 (参直线.B, 0))
    返回 (0)
.默认
    返回 (相减 (相乘 (相除 (负 (参直线.A), 参直线.B), 参x), 相除 (参直线.C, 参直线.B)))
.判断结束


.子程序 求X, 双精度小数型, , 调用前先检查A是否等于零。X=-B/A*Y-C/A,A<>0
.参数 参直线, 直线一般式, , 直线方程的一般式中系数A、B不能同时为零．要求出X值，必须保证A不为零。
.参数 参y, 双精度小数型, 可空, 

.判断开始 (等于 (参直线.A, 0))
    返回 (0)
.默认
    返回 (相减 (相乘 (相除 (负 (参直线.B), 参直线.A), 参y), 相除 (参直线.C, 参直线.A)))
.判断结束


.子程序 求斜率K, 双精度小数型, , 调用前先检查B是否等于零。
.参数 参直线, 直线一般式, , 直线方程的一般式中系数A、B不能同时为零．要求取斜率，必须保证B不为零。

.判断开始 (等于 (参直线.B, 0))
    返回 (0)
.默认
    返回 (相除 (负 (参直线.A), 参直线.B))
.判断结束


.子程序 靠近点, 直线一般式, , ok.靠近方法总是先确定移动方向，然后在该方向上移动指定的距离。所以在两点相距离很小而移动量又很大量，就会移动到相反的方向上去了。
.参数 参被移动直线, 直线一般式, , 
.参数 参相对点, 坐标, 可空, 如果未提供相对参照点变量，表示相对于坐标原点进行移动。
.参数 参移动量, 双精度小数型, , 一般就提供正值，使两点之间的距离按移动量进行缩短，直到移动到了相反的方向或两点重合在一起了。如果提供了负数，达到的效果和远离一样效果。

.局部变量 C增量, 双精度小数型, , , 
.局部变量 距离, 双精度小数型, , , 
.局部变量 直线, 直线一般式, , , 

赋值 (直线, 平移经过点 (参被移动直线, 参相对点)) ' 求出经过相对点位置的C值
赋值 (C增量, 相减 (直线.C, 参被移动直线.C))
 ' 距离 ＝ 计算.点类.到直线垂距 (参被移动直线, 参相对点)

赋值 (直线.C, 相减 (参被移动直线.C, 相乘 (相除 (C增量, 距离), 参移动量)))
赋值 (直线.A, 参被移动直线.A)
赋值 (直线.B, 参被移动直线.B)
返回 (直线)

.子程序 远离点, 直线一般式, , ok.远离方法总是先确定移动方向，然后在该方向上移动指定的距离。
.参数 参被移动直线, 直线一般式, , 
.参数 参相对点, 坐标, 可空, 如果未提供相对参照点变量，表示相对于坐标原点进行移动。
.参数 参移动量, 双精度小数型, , 提供正值，使两点之间的距离按移动量进行加长，直到移动到无限远。如果提供了负值，将被自动修改为正值。

.局部变量 C增量, 双精度小数型, , , 
.局部变量 距离, 双精度小数型, , , 
.局部变量 直线, 直线一般式, , , 

赋值 (直线, 平移经过点 (参被移动直线, 参相对点)) ' 求出经过相对点位置的C值
赋值 (C增量, 相减 (直线.C, 参被移动直线.C))
 ' 距离 ＝ 计算.点类.到直线垂距 (参被移动直线, 参相对点)

赋值 (直线.C, 相加 (参被移动直线.C, 相乘 (相除 (C增量, 距离), 参移动量)))
赋值 (直线.A, 参被移动直线.A)
赋值 (直线.B, 参被移动直线.B)
返回 (直线)

.子程序 左移, 空白型, , 


.子程序 右移, 空白型, , 


.子程序 旋转, 直线一般式, , ok.求一点绕原点旋转后的位置。
.参数 参被旋转的直线, 直线一般式, , 
.参数 参旋转中心, 坐标, 可空, 
.参数 参旋转角度, 双精度小数型, , 

.局部变量 二维点, 类坐标, , , 
.局部变量 垂足点, 坐标, , , 
.局部变量 直线法线式, 直线法线式, , , 

.如果真 (并且 (等于 (参被旋转的直线.A, 0), 等于 (参被旋转的直线.B, 0)))
    信息框 (“进行直线绕原点旋转运算时，所给定的直线系数有错误！”, 0, )
    返回 (参被旋转的直线)
.如果真结束

 ' --------------------------------------平移坐标系到旋转中心-------------------------------------------------------
平移 (参被旋转的直线, 负 (参旋转中心.x), 负 (参旋转中心.y))
 ' ---------------------------------------计算坐标原点到直线的垂足点------------------------------------------------
赋值 (垂足点, 二维点.到直线垂足点316 (参被旋转的直线))
 ' -----------------------------------------求法线式方程--------------------------------------------------------
赋值 (直线法线式.角, 相加 (参被旋转的直线.J, 相除 (#pi, 2)))
赋值 (直线法线式.P, 求平方根 (相加 (求次方 (垂足点.x, 2), 求次方 (垂足点.y, 2))))
 ' -----------------------------------------转动法线式方程--------------------------------------------------------
赋值 (直线法线式.角, 相加 (直线法线式.角, 参旋转角度))
 ' -----------------------------------------转为一般式方程--------------------------------------------------------
赋值 (参被旋转的直线.A, 求余弦 (直线法线式.角))
赋值 (参被旋转的直线.B, 求正弦 (直线法线式.角))
赋值 (参被旋转的直线.C, 负 (直线法线式.P))
赋值 (参被旋转的直线.J, 相减 (直线法线式.角, 相除 (#pi, 2)))
 ' ------------------------平移坐标系到原来的位置，等效于平移被旋转后的直线-----------------------------------------
平移 (参被旋转的直线, 参旋转中心.x, 参旋转中心.y)
返回 (参被旋转的直线)

.子程序 旋转经过点, 直线一般式, , 
.参数 参被旋转的直线, 直线一般式, , 
.参数 参旋转中心, 坐标, 可空, 
.参数 参目标点, 坐标, , 

.局部变量 二维点, 类坐标, , , 
.局部变量 垂足点, 坐标, , , 
.局部变量 直线法线式, 直线法线式, , , 

.如果真 (并且 (等于 (参被旋转的直线.A, 0), 等于 (参被旋转的直线.B, 0)))
    信息框 (“进行直线绕原点旋转运算时，所给定的直线系数有错误！”, 0, )
    返回 (参被旋转的直线)
.如果真结束

 ' --------------------------------------平移坐标系到旋转中心-------------------------------------------------------
平移 (参被旋转的直线, 负 (参旋转中心.x), 负 (参旋转中心.y))





 ' ------------------------平移坐标系到原来的位置，等效于平移被旋转后的直线-----------------------------------------
平移 (参被旋转的直线, 参旋转中心.x, 参旋转中心.y)
返回 (参被旋转的直线)

.子程序 平移, 直线一般式, , ok.求一直线平移后的位置。此方法为已知两个轴向平移分量的平移计算。由于移动直线不改变直线的斜率，所以在平移值确定的情况下，只要改变相应的C值，就能改变相应的位置。平移直线后，不会改变直线的正方向，所以不对直线的正方向进行修改。
.参数 参被平移的直线, 直线一般式, , 
.参数 参平移量dx, 双精度小数型, , 直线上的每一个坐标点都会发生这个平移分量
.参数 参平移量dy, 双精度小数型, , 直线上的每一个坐标点都会发生这个平移分量

 ' AX+BY+C=0 ' C=-AX-BY
 ' 先将C保存起来（最后一项），然后将直线移到原点（就是使得直线的C变为0），然后再计算出移动到指定增量点的C值，最后将两个C值进行相加。
赋值 (参被平移的直线.C, 相加 (相减 (相乘 (负 (参被平移的直线.A), 参平移量dx), 相乘 (参被平移的直线.B, 参平移量dy)), 参被平移的直线.C))
返回 (参被平移的直线)

.子程序 平移经过点, 直线一般式, , ok.求一直线平移后的位置。直线的平移实质上是改变直线的C值。平移到定点，实际上是把A，B，X，Y都当成已知量，把C当成未知量来求解。' AX+BY+C=0 ' C=-AX-BY
.参数 参被移动直线, 直线一般式, , 
.参数 参要经过的点, 坐标, 可空, 

 ' AX+BY+C=0 ' C=-AX-BY
赋值 (参被移动直线.C, 相减 (相乘 (负 (参被移动直线.A), 参要经过的点.x), 相乘 (参被移动直线.B, 参要经过的点.y)))
返回 (参被移动直线)

.子程序 平移按两点, 直线一般式, , 指定两点，第一点为基点，第二个点为目标点，直线按照目标点相对于基点的位置变化，对所给定的直线作同样的位置变换。
.参数 参被平移的直线, 直线一般式, , 
.参数 参平移参照基点, 坐标, , 
.参数 参平移参照目标点, 坐标, , 

.局部变量 dx, 双精度小数型, , , 
.局部变量 dy, 双精度小数型, , , 

赋值 (dx, 相减 (参平移参照目标点.x, 参平移参照基点.x))
赋值 (dy, 相减 (参平移参照目标点.y, 参平移参照基点.y))
赋值 (参被平移的直线, 平移 (参被平移的直线, dx, dy))
返回 (参被平移的直线)

.子程序 平移按线段, 直线一般式, , 指定一条线段，起点为基点，尾点为目标点，直线按照目标点相对于基点的位置变化，对所给定的直线作同样的位置变换。
.参数 参被平移的直线, 直线一般式, , 
.参数 参线段, 线段, , 

.局部变量 dx, 双精度小数型, , , 
.局部变量 dy, 双精度小数型, , , 

赋值 (dx, 相减 (参线段.尾点.x, 参线段.起点.x))
赋值 (dy, 相减 (参线段.尾点.y, 参线段.起点.y))
赋值 (参被平移的直线, 平移 (参被平移的直线, dx, dy))
返回 (参被平移的直线)

.子程序 平移按方向, 直线一般式, , 指定一个方向，将直线按照指定方向进行定量平移。
.参数 参被平移的直线, 直线一般式, , 
.参数 参方位角, 双精度小数型, , 弧度,测量学上叫做方位角
.参数 参平移距离, 双精度小数型, , 

.局部变量 dx, 双精度小数型, , , 
.局部变量 dy, 双精度小数型, , , 

赋值 (dx, 相乘 (参平移距离, 求余弦 (参方位角)))
赋值 (dy, 相乘 (参平移距离, 求正弦 (参方位角)))
赋值 (参被平移的直线, 平移 (参被平移的直线, dx, dy))
返回 (参被平移的直线)

.子程序 两直线关系, 整数型, , 返回值：#直线关系_重合，#直线关系_平行，#直线关系_相交，#直线关系_垂直。说明：直线方程的一般式中系数A、B不能同时为零
.参数 参直线1, 直线一般式, , 直线方程的一般式中系数A、B不能同时为零．
.参数 参直线2, 直线一般式, , 直线方程的一般式中系数A、B不能同时为零．
.参数 参极小值, 双精度小数型, 可空, 小于该值，就当成零处理。如果未提供此参数，默认为1e-005。一般情况不必理会此参数。请提供极小的正数。
.参数 参重合时也按平行处理, 逻辑型, 可空, 默认为假，即重合时不按平行处理。如果提供真值，将会在重合时也按平行进行判断。

.局部变量 极小值, 双精度小数型, , , 

.如果 (是否为空 (参极小值))
    赋值 (极小值, #零5)
.否则
    赋值 (极小值, 取绝对值 (参极小值))
.如果结束

.如果真 (或者 (并且 (等于 (参直线1.A, 0), 等于 (参直线1.B, 0)), 并且 (等于 (参直线2.A, 0), 等于 (参直线2.B, 0))))
    信息框 (“进行两直线关系判断时，所给定的两直线系数有错误！”, 0, )
    返回 (0)
.如果真结束

 ' 在计算机的浮点计算方式中，要绝对等于0基本上是很难的，所以只要小于某一个值，就认为是零值了。
.判断开始 (小于 (取绝对值 (相减 (相乘 (参直线1.A, 参直线2.B), 相乘 (参直线2.A, 参直线1.B))), 极小值))
     ' 此处判断斜率是否相同，只要斜率之差小于某一个值，就认为斜率之差为零，就认为斜率是相等的了。
    .判断开始 (小于 (取绝对值 (相减 (相乘 (参直线1.A, 参直线2.C), 相乘 (参直线2.A, 参直线1.C))), 极小值))
         ' 如果常数项也对应成正比，就认为是重合的了。
        .判断开始 (参重合时也按平行处理)
            返回 (#两直线关系_平行)
        .默认
            返回 (#两直线关系_重合) ' 两直线重合时：A1/A2=B1/B2=C1/C2
        .判断结束
        
    .默认
        返回 (#两直线关系_平行) ' 两直线平行时：A1/A2=B1/B2≠C1/C2
         ' 如果常数项不对对应成正比，就不认为是重合的。
    .判断结束
    
.判断 (小于 (取绝对值 (相加 (相乘 (参直线1.A, 参直线2.A), 相乘 (参直线1.B, 参直线2.B))), 极小值))
     ' 不平行又不重合就一定相交吧，但相交也有很多种不同的情况，最常用的情况就是垂直相交，所以先检测是否垂直相交，如果不是垂直相交，那就是一般的相交情况了。
    返回 (#两直线关系_垂直) ' 两直线垂直时：A1A2+B1B2=0
.默认
    返回 (#两直线关系_相交) ' 两直线相交时：A1/A2≠B1/B2
.判断结束


.子程序 两直线垂直, 逻辑型, , 
.参数 参直线1, 直线一般式, , 直线方程的一般式中系数A、B不能同时为零．
.参数 参直线2, 直线一般式, , 直线方程的一般式中系数A、B不能同时为零．
.参数 参极小值, 双精度小数型, 可空, 小于该值，就当成零处理。如果未提供此参数，默认为1e-005。一般情况不必理会此参数。请提供极小的正数。

.局部变量 极小值, 双精度小数型, , , 

.如果 (是否为空 (参极小值))
    赋值 (极小值, #零5)
.否则
    赋值 (极小值, 取绝对值 (参极小值))
.如果结束

.如果真 (或者 (并且 (等于 (参直线1.A, 0), 等于 (参直线1.B, 0)), 并且 (等于 (参直线2.A, 0), 等于 (参直线2.B, 0))))
    信息框 (“进行两直线重合关系判断时，所给定的两直线系数有错误！”, 0, )
    返回 (假)
.如果真结束

.判断开始 (小于 (取绝对值 (相加 (相乘 (参直线1.A, 参直线2.A), 相乘 (参直线1.B, 参直线2.B))), 极小值)) ' 两直线垂直时：A1A2+B1B2=0
    返回 (真)
.默认
    返回 (假)
.判断结束


.子程序 两直线相交, 逻辑型, , 
.参数 参直线1, 直线一般式, , 直线方程的一般式中系数A、B不能同时为零．
.参数 参直线2, 直线一般式, , 直线方程的一般式中系数A、B不能同时为零．
.参数 参极小值, 双精度小数型, 可空, 小于该值，就当成零处理。如果未提供此参数，默认为1e-005。一般情况不必理会此参数。请提供极小的正数。

.局部变量 极小值, 双精度小数型, , , 

.如果 (是否为空 (参极小值))
    赋值 (极小值, #零5)
.否则
    赋值 (极小值, 取绝对值 (参极小值))
.如果结束

.如果真 (或者 (并且 (等于 (参直线1.A, 0), 等于 (参直线1.B, 0)), 并且 (等于 (参直线2.A, 0), 等于 (参直线2.B, 0))))
    信息框 (“进行两直线相交关系判断时，所给定的两直线系数有错误！”, 0, )
    返回 (假)
.如果真结束

.判断开始 (大于 (取绝对值 (相减 (相乘 (参直线1.A, 参直线2.B), 相乘 (参直线2.A, 参直线1.B))), 极小值)) ' 两直线相交时：A1/A2≠B1/B2
    返回 (真)
.默认
    返回 (假)
.判断结束


.子程序 两直线平行, 逻辑型, , 
.参数 参直线1, 直线一般式, , 直线方程的一般式中系数A、B不能同时为零．
.参数 参直线2, 直线一般式, , 直线方程的一般式中系数A、B不能同时为零．
.参数 参极小值, 双精度小数型, 可空, 小于该值，就当成零处理。如果未提供此参数，默认为1e-005。一般情况不必理会此参数。请提供极小的正数。
.参数 参重合时也按平行处理, 逻辑型, 可空, 默认为假，即重合时不按平行处理。如果提供真值，将会在重合时也按平行进行判断。

.局部变量 极小值, 双精度小数型, , , 

.如果 (是否为空 (参极小值))
    赋值 (极小值, #零5)
.否则
    赋值 (极小值, 取绝对值 (参极小值))
.如果结束

.如果真 (或者 (并且 (等于 (参直线1.A, 0), 等于 (参直线1.B, 0)), 并且 (等于 (参直线2.A, 0), 等于 (参直线2.B, 0))))
    信息框 (“进行两直线平行关系判断时，所给定的两直线系数有错误！”, 0, )
    返回 (假)
.如果真结束

.判断开始 (小于 (取绝对值 (相减 (相乘 (参直线1.A, 参直线2.B), 相乘 (参直线2.A, 参直线1.B))), 极小值))
    .判断开始 (小于 (取绝对值 (相减 (相乘 (参直线1.A, 参直线2.C), 相乘 (参直线2.A, 参直线1.C))), 极小值)) ' 两直线重合时：A1/A2=B1/B2=C1/C2
        .判断开始 (参重合时也按平行处理)
            返回 (真)
        .默认
            返回 (假)
        .判断结束
        
    .默认
        返回 (真) ' 两直线平行时：A1/A2=B1/B2≠C1/C2
    .判断结束
    
.默认
    返回 (假)
.判断结束


.子程序 两直线重合, 逻辑型, , 
.参数 参直线1, 直线一般式, , 直线方程的一般式中系数A、B不能同时为零．
.参数 参直线2, 直线一般式, , 直线方程的一般式中系数A、B不能同时为零．
.参数 参极小值, 双精度小数型, 可空, 小于该值，就当成零处理。如果未提供此参数，默认为1e-005。一般情况不必理会此参数。请提供极小的正数。如果希望偏向于判断两直线重合，应给一个较大的极小值。

.局部变量 极小值, 双精度小数型, , , 

.如果 (是否为空 (参极小值))
    赋值 (极小值, #零5)
.否则
    赋值 (极小值, 取绝对值 (参极小值))
.如果结束

.如果真 (或者 (并且 (等于 (参直线1.A, 0), 等于 (参直线1.B, 0)), 并且 (等于 (参直线2.A, 0), 等于 (参直线2.B, 0))))
    信息框 (“进行两直线重合关系判断时，所给定的两直线系数有错误！”, 0, )
    返回 (假)
.如果真结束

.判断开始 (小于 (取绝对值 (相减 (相乘 (参直线1.A, 参直线2.B), 相乘 (参直线2.A, 参直线1.B))), 极小值))
    .判断开始 (小于 (取绝对值 (相减 (相乘 (参直线1.A, 参直线2.C), 相乘 (参直线2.A, 参直线1.C))), 极小值)) ' 两直线重合时：A1/A2=B1/B2=C1/C2
        返回 (真)
    .默认
        返回 (假)
    .判断结束
    
.默认
    返回 (假)
.判断结束


.子程序 两直线夹角, 双精度小数型, , 调用前先检查A，B是否同时等于零。返回值为弧度。计算两直线夹角时，可以依据两直线的正方向进行计算，也可以用两直线夹角的最小值进行计算，这是正统教材的计算方法。
.参数 参直线1, 直线一般式, , 直线方程的一般式中系数A、B不能同时为零．
.参数 参直线2, 直线一般式, , 直线方程的一般式中系数A、B不能同时为零．
.参数 参照正方向计算, 逻辑型, 可空, 默认为假,即按传统教材所规定的方法进行计算，如果提供逻辑真，将按直线的正方向进行计算。

.局部变量 分子, 双精度小数型, , , 
.局部变量 分母, 双精度小数型, , , 

.判断开始 (参照正方向计算)
    返回 (取绝对值 (相减 (参直线2.J, 参直线1.J)))
.默认
    
    .如果真 (或者 (并且 (等于 (参直线1.A, 0), 等于 (参直线1.B, 0)), 并且 (等于 (参直线2.A, 0), 等于 (参直线2.B, 0))))
        信息框 (“进行两直线夹角计算时，所给定的两直线系数有错误！”, 0, )
        返回 (0)
    .如果真结束
    
    赋值 (分子, 相减 (相乘 (参直线1.A, 参直线2.B), 相乘 (参直线1.B, 参直线2.A)))
    赋值 (分母, 相加 (相乘 (参直线1.A, 参直线2.A), 相乘 (参直线1.B, 参直线2.B)))
    .判断开始 (等于 (分母, 0))
        .判断开始 (等于 (分子, 0))
            返回 (0)
        .默认
            返回 (相除 (#pi, 2))
        .判断结束
        
    .默认
        返回 (求反正切 (相除 (分子, 分母)))
    .判断结束
    
.判断结束


.子程序 两直线距离, 双精度小数型, , 调用前先检查A，B是否同时等于零。两直线应平行，如果不平行，或为重合或为相交，距离都为零。|C1-C2|/sqrt(A^2+B^2) 
.参数 参直线1, 直线一般式, , 直线方程的一般式中系数A、B不能同时为零．
.参数 参直线2, 直线一般式, , 直线方程的一般式中系数A、B不能同时为零．
.参数 参极小值, 双精度小数型, 可空, 两平行直线，距离只要小于这个极小值，就认为距离为零了。默认情况下，总是尽可能偏向于有距离的判断。

.局部变量 分子, 双精度小数型, , , 
.局部变量 分母, 双精度小数型, , , 
.局部变量 距离, 双精度小数型, , , 

.如果真 (或者 (并且 (等于 (参直线1.A, 0), 等于 (参直线1.B, 0)), 并且 (等于 (参直线2.A, 0), 等于 (参直线2.B, 0))))
    信息框 (“进行两直线距离计算时，所给定的两直线系数有错误！”, 0, )
    返回 (0)
.如果真结束

.判断开始 (两直线平行 (参直线1, 参直线2, , 真))
    赋值 (分子, 取绝对值 (相减 (参直线1.C, 参直线2.C)))
    .如果真 (等于 (分子, 0))
        返回 (0)
    .如果真结束
    
    赋值 (分母, 求平方根 (相加 (求次方 (参直线1.A, 2), 求次方 (参直线1.B, 2))))
    赋值 (距离, 相除 (分子, 分母))
    
    .如果 (小于或等于 (距离, 取绝对值 (参极小值)))
        返回 (0)
    .否则
        返回 (距离)
    .如果结束
    
.默认
    返回 (0)
.判断结束


.子程序 两直线交点, 坐标, , 两直线应相交，如果不相交或完全重合，交点无意义。 
.参数 参直线1, 直线一般式, , 直线方程的一般式中系数A、B不能同时为零．
.参数 参直线2, 直线一般式, , 直线方程的一般式中系数A、B不能同时为零．

.局部变量 分子x, 双精度小数型, , , 
.局部变量 分子y, 双精度小数型, , , 
.局部变量 分母, 双精度小数型, , , 
.局部变量 坐标, 坐标, , , 

.如果真 (或者 (并且 (等于 (参直线1.A, 0), 等于 (参直线1.B, 0)), 并且 (等于 (参直线2.A, 0), 等于 (参直线2.B, 0))))
    信息框 (“进行两直线交点计算时，所给定的两直线系数有错误！”, 0, )
    返回 (坐标)
.如果真结束

.如果真 (两直线平行 (参直线1, 参直线2, , 真))
    返回 (坐标)
.如果真结束

赋值 (分子x, 相减 (相乘 (参直线2.C, 参直线1.B), 相乘 (参直线1.C, 参直线2.B)))
赋值 (分子y, 相减 (相乘 (参直线1.C, 参直线2.A), 相乘 (参直线2.C, 参直线1.A)))
赋值 (分母, 相减 (相乘 (参直线1.A, 参直线2.B), 相乘 (参直线1.B, 参直线2.A)))

赋值 (坐标.x, 相除 (分子x, 分母))
赋值 (坐标.y, 相除 (分子y, 分母))
返回 (坐标)

.子程序 直线平移到点, 直线一般式, , ok.求一直线平移后的位置。直线的平移实质上是改变直线的C值。平移到定点，实际上是把A，B，X，Y都当成已知量，把C当成未知量来求解。' AX+BY+C=0 ' C=-AX-BY
.参数 参被移动直线, 直线一般式, , 
.参数 参要经过的点, 坐标, 可空, 

.局部变量 直线, 直线一般式, , , 

 ' AX+BY+C=0 ' C=-AX-BY
赋值 (参被移动直线.C, 相减 (相乘 (负 (参被移动直线.A), 参要经过的点.x), 相乘 (参被移动直线.B, 参要经过的点.y)))
返回 (参被移动直线)

.子程序 直线平移参照两点, 直线一般式, , 指定两点，第一点为基点，第二个点为目标点，直线按照目标点相对于基点的位置变化，对所给定的直线作同样的位置变换。
.参数 参被平移的直线, 直线一般式, , 
.参数 参平移参照基点, 坐标, , 
.参数 参平移参照目标点, 坐标, , 

.局部变量 平移量dx, 双精度小数型, , , 直线上的每一个坐标点都会发生这个平移分量
.局部变量 平移量dy, 双精度小数型, , , 直线上的每一个坐标点都会发生这个平移分量

赋值 (平移量dx, 相减 (参平移参照目标点.x, 参平移参照基点.x))
赋值 (平移量dy, 相减 (参平移参照目标点.y, 参平移参照基点.y))
赋值 (参被平移的直线.C, 相加 (相减 (相乘 (负 (参被平移的直线.A), 平移量dx), 相乘 (参被平移的直线.B, 平移量dy)), 参被平移的直线.C))
返回 (参被平移的直线)

.子程序 直线绕点旋转, 直线一般式, , ok.求一点绕参照点旋转后的位置。
.参数 参被旋转的直线, 直线一般式, , 
.参数 参旋转中心, 坐标, 可空, 
.参数 参旋转角度, 双精度小数型, , 

.局部变量 平移量dx, 双精度小数型, , , 
.局部变量 平移量dy, 双精度小数型, , , 
.局部变量 垂足点, 坐标, , , 
.局部变量 分母, 双精度小数型, , , 
.局部变量 分子x, 双精度小数型, , , 
.局部变量 分子y, 双精度小数型, , , 
.局部变量 复数, 未知类型0x30001, , , 
.局部变量 直线法线式, 直线法线式, , , 

 ' 移动坐标系到旋转中心，等效于将被旋转直线反向移动--------------------------------------------------------------------
赋值 (平移量dx, 负 (参旋转中心.x))
赋值 (平移量dy, 负 (参旋转中心.y))
赋值 (参被旋转的直线.C, 相加 (相减 (相乘 (负 (参被旋转的直线.A), 平移量dx), 相乘 (参被旋转的直线.B, 平移量dy)), 参被旋转的直线.C))

 ' 计算坐标原点到直线的垂足点---------------------------------------------------------------------------------------
赋值 (分母, 相加 (求次方 (参被旋转的直线.A, 2), 求次方 (参被旋转的直线.B, 2)))
赋值 (分子x, 相乘 (负 (参被旋转的直线.A), 参被旋转的直线.C))
赋值 (分子y, 相乘 (负 (参被旋转的直线.B), 参被旋转的直线.C))
.如果 (等于 (分子x, 0))
    赋值 (垂足点.x, 0)
.否则
    赋值 (垂足点.x, 相除 (分子x, 分母))
.如果结束

.如果 (等于 (分子y, 0))
    赋值 (垂足点.y, 0)
.否则
    赋值 (垂足点.y, 相除 (分子y, 分母))
.如果结束
 ' 求法线式方程---------------------------------------------------------------------------------------
赋值 (直线法线式.角, 相加 (参被旋转的直线.J, 相除 (#pi, 2)))
赋值 (直线法线式.P, 求平方根 (相加 (求次方 (垂足点.x, 2), 求次方 (垂足点.y, 2))))
 ' 转动法线式方程---------------------------------------------------------------------------------------
赋值 (直线法线式.角, 相加 (直线法线式.角, 参旋转角度))
 ' 转为一般式方程---------------------------------------------------------------------------------------
赋值 (参被旋转的直线.A, 求余弦 (直线法线式.角))
赋值 (参被旋转的直线.B, 求正弦 (直线法线式.角))
赋值 (参被旋转的直线.C, 负 (直线法线式.P))
赋值 (参被旋转的直线.J, 相减 (直线法线式.角, 相除 (#pi, 2)))
 ' 平移坐标系到原来的位置，等效于平移被旋转的直线---------------------------------------------------------------------------------------
赋值 (平移量dx, 参旋转中心.x)
赋值 (平移量dy, 参旋转中心.y)
赋值 (参被旋转的直线.C, 相加 (相减 (相乘 (负 (参被旋转的直线.A), 平移量dx), 相乘 (参被旋转的直线.B, 平移量dy)), 参被旋转的直线.C))
返回 (参被旋转的直线)

.子程序 对称于X轴, 直线一般式, , 
.参数 参直线, 直线一般式, , 

.局部变量 直线, 直线一般式, , , 

返回 (直线)

.子程序 对称于Y轴, 直线一般式, , 
.参数 参直线, 直线一般式, , 

.局部变量 直线, 直线一般式, , , 

返回 (直线)

.子程序 对称于直线, 直线一般式, , 
.参数 参被对称直线, 直线一般式, , 
.参数 参对称轴直线, 直线一般式, , 

.局部变量 直线, 直线一般式, , , 

返回 (直线)

.子程序 截取线段_定长度且位置随机, 空白型, , 
.参数 参直线, 直线一般式, , 



.子程序 截取线段_定长度且指定中点, 线段, , 
.参数 参直线, 直线一般式, , 
.参数 参长度, 双精度小数型, , 
.参数 参中点, 坐标, , 

.局部变量 线段, 线段, , , 

返回 (线段)

.类模块 类直线法线式, , , XcosA+YsinA-P=0;法线式方程。

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 到直线一般式, 直线一般式, , XcosA+YsinA-P=0;法线式方程。
.参数 参直线, 直线法线式, , 

.局部变量 直线, 直线一般式, , , 

赋值 (直线.A, 求余弦 (参直线.角))
赋值 (直线.B, 求正弦 (参直线.角))
赋值 (直线.C, 负 (参直线.P))
返回 (直线)

.子程序 外移, 直线法线式, , 直线垂直于指向原点的法线向外移动一段距离。
.参数 参直线, 直线法线式, , 
.参数 参外移距离, 双精度小数型, , 

赋值 (参直线.P, 相加 (参直线.P, 参外移距离))
返回 (参直线)

.子程序 内移, 直线法线式, , 直线垂直于指向原点的法线向外移动一段距离。
.参数 参直线, 直线法线式, , 
.参数 参内移距离, 双精度小数型, , 

赋值 (参直线.P, 相减 (参直线.P, 参内移距离))
.如果真 (小于 (参直线.P, 0))
    赋值 (参直线.P, 0)
.如果真结束
返回 (参直线)

.子程序 定点, 直线法线式, , 直线与法线的交点都经过指定的点。
.参数 参点坐标, 坐标, , 

.局部变量 复数, 未知类型0x30001, , , 
.局部变量 直线, 直线法线式, , , 

复数.未知支持库函数_11 (参点坐标.x)
复数.未知支持库函数_12 (参点坐标.y)
赋值 (直线.角, 复数.未知支持库函数_8 (复数))
赋值 (直线.P, 复数.未知支持库函数_7 (复数))
返回 (直线)

.类模块 类线段, , , 

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 创建_两点316, 线段, , 依据两端点坐标创建一线段。同时赋予其直线一般式信息。如果没有赋给直线信息，将依据线段两端点来计算直线信息，如果线段两端点又处理重合状态，将从原点引一条直线经过线段端点，并将该直线信息赋给线段，如果两重合的线段端点又位于坐标原点，将X轴的直线信息赋给线段。如果赋给了直线信息，将以给定极小值检查线段是否在直线上，如果在直线上，将线段的端点修正为其到直线的垂足点，同时赋给直线信息，如果不在直线上，但两端点重合，将直线平移到端点后然后赋给线段直线信息，如果两端点不重合，将不理采所给定的直线信息，而直接以给定端点计算直线信息。
.参数 参起点, 坐标, 可空, 如果起点为空，将以坐标原点为起点创建线段
.参数 参尾点, 坐标, 可空, 如果尾点为空，将以坐标原点为尾点创建线段
.参数 参直线, 直线一般式, 可空, 当提供的尾点与起点重合时，程序无法计算线段的一般式信息，所以此时可以借助此参数将一般式信息赋予线段，但所给的直线一般式信息必须合法，并且必须保证线段的点能落到一般式所规定的直线上。如果不合法，将按没有给定直线信息进行考虑。
.参数 参极小值, 双精度小数型, 可空, 小于该值，就当成零处理。如果未提供此参数，默认为1e-005。一般情况不必理会此参数。请提供极小的正数，如果提供了负数，将被自动反号。当

.局部变量 直线, 直线一般式, , , 
.局部变量 直线类, 类直线一般式, , , 
.局部变量 二维_点与直线, 类关系_点与直线, , , 
.局部变量 二维点, 类坐标, , , 
.局部变量 临时线段, 线段, , , 
.局部变量 线段, 线段, , , 
.局部变量 起点距离, 双精度小数型, , , 
.局部变量 尾点距离, 双精度小数型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果真 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.如果真结束
 ' 在浮点计算模式下，要使理论上计算应等于零值的计算刚好等于零，是很困难的，
 ' 所以只要计算出来的距离小于某个规定的值，就认为点与直线的距离为零，就认为这个点在这个直线上。
赋值 (参极小值, 取绝对值 (参极小值))

赋值 (线段.起点, 参起点)
赋值 (线段.尾点, 参尾点)
.判断开始 (是否为空 (参直线))
     ' 未提供直线信息
    .判断开始 (并且 (等于 (线段.尾点.x, 线段.起点.x), 等于 (线段.尾点.y, 线段.起点.y)))
         ' 线段两端点重合的情况
        .如果 (并且 (等于 (线段.起点.x, 0), 等于 (线段.起点.y, 0)))
             ' 线段两端点都落在了原点上。
            赋值 (线段.直线.A, 0)
            赋值 (线段.直线.B, 1)
            赋值 (线段.直线.C, 0)
        .否则
             ' 线段两端点没有落在原点上
            赋值 (临时线段.尾点, 线段.起点)
            赋值 (线段.直线, 求直线316 (临时线段))
        .如果结束
        
    .默认
         ' 线段两端点不重合的情况
        赋值 (线段.直线, 求直线316 (线段))
    .判断结束
    
.默认
    赋值 (直线, 参直线)
     ' 检查直线是否合法
    .如果 (并且 (等于 (直线.A, 0), 等于 (直线.B, 0)))
         ' 直线不合法，只能纯依据两点来创建线段
        .判断开始 (并且 (等于 (线段.尾点.x, 线段.起点.x), 等于 (线段.尾点.y, 线段.起点.y)))
             ' 线段两端点重合的情况
            .如果 (并且 (等于 (线段.起点.x, 0), 等于 (线段.起点.y, 0)))
                 ' 线段两端点都落在了原点上。
                赋值 (线段.直线.A, 0)
                赋值 (线段.直线.B, 1)
                赋值 (线段.直线.C, 0)
            .否则
                 ' 线段两端点没有落在原点上
                赋值 (临时线段.尾点, 线段.起点)
                赋值 (线段.直线, 求直线316 (临时线段))
            .如果结束
            
        .默认
             ' 线段两端点不重合的情况
            赋值 (线段.直线, 求直线316 (线段))
        .判断结束
        
    .否则
         ' 直线合法，将必须考虑线段与直线的关系
        赋值 (起点距离, 二维点.到直线垂距316 (线段.起点, 直线))
        赋值 (尾点距离, 二维点.到直线垂距316 (线段.尾点, 直线))
        .如果 (并且 (小于或等于 (起点距离, 参极小值), 小于或等于 (尾点距离, 参极小值)))
             ' 线段应该在直线上
            赋值 (线段.起点, 二维点.到直线垂足点316 (线段.起点, 直线))
            赋值 (线段.尾点, 二维点.到直线垂足点316 (线段.尾点, 直线))
            赋值 (线段.直线, 直线)
        .否则
             ' 线段不在直线上
            .判断开始 (并且 (等于 (线段.尾点.x, 线段.起点.x), 等于 (线段.尾点.y, 线段.起点.y)))
                 ' 线段两端点重合的情况
                赋值 (线段.直线, 直线类.平移经过点 (直线))
            .默认
                 ' 线段两端点不重合的情况
                赋值 (线段.直线, 求直线316 (线段))
            .判断结束
            
        .如果结束
        
    .如果结束
    
.判断结束

返回 (线段)

.子程序 创建_起点加长度316, 线段, , 依据起点、方位角、长度创建一线段
.参数 参起点, 坐标, 可空, 如果未指定起点，将以坐标原点为起点
.参数 参方位角, 双精度小数型, 可空, 如果未指定方位角，将默认为0方向。
.参数 参长度, 双精度小数型, 可空, 如果长度为0，将以默认长度1创建线段，如果为负数，表示将给定方位角旋转180度，起点还是不变。

.局部变量 二维点, 类坐标, , , 
.局部变量 线段, 线段, , , 

.如果真 (等于 (参长度, 0))
    赋值 (参长度, 1)
.如果真结束

.判断开始 (大于 (参长度, 0))
    赋值 (线段.起点, 参起点)
    赋值 (线段.尾点, 二维点.平移_定向316 (线段.起点, 参方位角, 参长度))
    赋值 (线段.直线, 求直线316 (线段))
.默认
    赋值 (线段.起点, 参起点)
    赋值 (线段.尾点, 二维点.平移_定向316 (线段.起点, 相加 (参方位角, #pi), 取绝对值 (参长度)))
    赋值 (线段.直线, 求直线316 (线段))
.判断结束
返回 (线段)

.子程序 创建_尾点加长度316, 线段, , 依据尾点、方位角、长度创建一线段
.参数 参尾点, 坐标, 可空, 如果未指定起点，将以坐标原点为起点
.参数 参方位角, 双精度小数型, 可空, 如果未指定方位角，将默认为0方向。
.参数 参长度, 双精度小数型, 可空, 如果长度为0，将以默认长度1创建线段，如果为负数，表示将给定方位角旋转180度，起点还是不变。

.局部变量 二维点, 类坐标, , , 
.局部变量 线段, 线段, , , 

.如果真 (等于 (参长度, 0))
    赋值 (参长度, 1)
.如果真结束

.判断开始 (大于 (参长度, 0))
    赋值 (线段.尾点, 参尾点)
    赋值 (线段.起点, 二维点.平移_定向316 (线段.尾点, 相加 (参方位角, #pi), 参长度))
    赋值 (线段.直线, 求直线316 (线段))
.默认
    赋值 (线段.尾点, 参尾点)
    赋值 (线段.起点, 二维点.平移_定向316 (线段.尾点, 参方位角, 取绝对值 (参长度)))
    赋值 (线段.直线, 求直线316 (线段))
.判断结束
返回 (线段)

.子程序 转图元, 图元, , 
.参数 参线段, 线段, , 

.局部变量 图形空间, 类图形空间, , , 
.局部变量 图元, 图元, , , 
.局部变量 节点, 未知类型0x20001, , , 

赋值 (图元.句柄, _类数据空间.获取图元句柄 ())
赋值 (图元.类别, #图元_线段)
赋值 (图元.属性, 节点)
重定义数组 (图元.顶点, 假, 2)
赋值 (图元.顶点 [1], 参线段.起点)
赋值 (图元.顶点 [2], 参线段.尾点)
赋值 (图元.常规.修改, 真)
返回 (图元)

.子程序 求DX316, 双精度小数型, , 
.参数 参直线段, 线段, , 

返回 (相减 (参直线段.尾点.x, 参直线段.起点.x))

.子程序 求DY316, 双精度小数型, , 
.参数 参直线段, 线段, , 

返回 (相减 (参直线段.尾点.y, 参直线段.起点.y))

.子程序 求直线316, 直线一般式, , 求直线一般式定义信息。如果所给的线段起点与尾点重合，将判断线段所包含的直线信息是否合法，如果合法且线段在直线上，就返回该直线信息；如果不在直线上，就将该直线平移经过线段，返回直线信息；如果直线信息不合法，就判断端点有没有落在原点上，如果不在原点，就以返回原到到经过端点的直线，如果在原点，就返回X轴的直线信息。如果线段两端点不重合，还是要检查直线信息是否合法，如果不合法，就直接用两端点计算直线信息，如果合法，就要检查线段是否在直线上，如果在直线上就不必计算，而是直接返回直线信息，如果不在才用两点计算直线信息，这时说明给定的直线信息与给定的两点有冲突，将以给定的两端点为准。
.参数 参线段, 线段, , 线段的直线一般式信息，被赋予给参考变量中。
.参数 参极小值, 双精度小数型, 可空, 此给定的极小值用于判断线段的端点距离直线多远之内就认为在直线上。一般情况上不应理会。

.局部变量 线段, 线段, , , 
.局部变量 临时线段, 线段, , , 
.局部变量 二维点类, 类坐标, , , 
.局部变量 直线类, 类直线一般式, , , 
.局部变量 dx, 双精度小数型, 静态, , 横坐标增量
.局部变量 dy, 双精度小数型, 静态, , 纵坐标增量

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果真 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.如果真结束

赋值 (线段, 参线段)

.判断开始 (并且 (等于 (线段.尾点.x, 线段.起点.x), 等于 (线段.尾点.y, 线段.起点.y)))
     ' 线段两端点处于重合状态
    .判断开始 (并且 (等于 (线段.直线.A, 0), 等于 (线段.直线.B, 0)))
         ' 线段直线信息不合法
        .如果 (并且 (等于 (线段.起点.x, 0), 等于 (线段.起点.y, 0)))
             ' 线段两端点都落在了原点上。
            赋值 (线段.直线.A, 0)
            赋值 (线段.直线.B, 1)
            赋值 (线段.直线.C, 0)
        .否则
             ' 线段两端点没有落在原点上
            赋值 (dx, 线段.起点.x)
            赋值 (dy, 线段.起点.y)
            赋值 (线段.直线.A, dy)
            赋值 (线段.直线.B, 负 (dx))
            赋值 (线段.直线.C, 相减 (相乘 (dx, 线段.起点.y), 相乘 (dy, 线段.起点.x)))
        .如果结束
        
    .默认
         ' 线段直线信息合法
        .如果 (小于或等于 (二维点类.到直线垂距316 (线段.起点, 线段.直线), 参极小值))
             ' 线段在直线上
        .否则
             ' 线段不在直线上
            赋值 (线段.直线, 直线类.平移经过点 (线段.直线, 线段.起点)) ' 保持线段位置不变，将直线平移到线段位置
        .如果结束
        
    .判断结束
    
.默认
     ' 线段两端点不重合
    .判断开始 (并且 (等于 (线段.直线.A, 0), 等于 (线段.直线.B, 0)))
         ' 线段直线信息不合法
        赋值 (dx, 求DX316 (线段))
        赋值 (dy, 求DY316 (线段))
        赋值 (线段.直线.A, dy)
        赋值 (线段.直线.B, 负 (dx))
        赋值 (线段.直线.C, 相减 (相乘 (dx, 线段.起点.y), 相乘 (dy, 线段.起点.x)))
    .默认
         ' 线段直线信息合法
        .如果 (并且 (小于或等于 (二维点类.到直线垂距316 (线段.起点, 线段.直线), 参极小值), 小于或等于 (二维点类.到直线垂距316 (线段.尾点, 线段.直线), 参极小值)))
             ' 线段在直线上
        .否则
             ' 线段不在直线上
            赋值 (dx, 求DX316 (线段))
            赋值 (dy, 求DY316 (线段))
            赋值 (线段.直线.A, dy)
            赋值 (线段.直线.B, 负 (dx))
            赋值 (线段.直线.C, 相减 (相乘 (dx, 线段.起点.y), 相乘 (dy, 线段.起点.x)))
        .如果结束
        
    .判断结束
    
.判断结束

返回 (线段.直线)

.子程序 求方位角316, 双精度小数型, , 返回弧度值。首先检查线段的一般式定义是否合法，如果不合法，将依据线段两端点的关系来计算线段方位角，如果线段两端点重合，就返回从原点引向端点的线段的方位角，如果线段两端点又位于原点上，就返回X正方向的方位角，也就是0。如果所给定的直线信息合法，也要判断线段两端点是否重合，如果重合就参照直线信息来计算方位角，但要先把直线平移经过线段，如果不重合就检查线段是否在直线上，在直线上就参照直线信息来计算方位角，如果不在直线上，就要以线段两端点来计算方位角。
.参数 参直线段, 线段, , 
.参数 参极小值, 双精度小数型, 可空, 

.局部变量 线段, 线段, , , 
.局部变量 二维点类, 类坐标, , , 
.局部变量 直线类, 类直线一般式, , , 
.局部变量 以增量计算方位角, 逻辑型, , , 
.局部变量 dx, 双精度小数型, 静态, , 横坐标增量
.局部变量 dy, 双精度小数型, 静态, , 纵坐标增量
.局部变量 方位角, 双精度小数型, 静态, , 

赋值 (线段, 参直线段)
.如果 (并且 (等于 (线段.直线.A, 0), 等于 (线段.直线.B, 0)))
     ' 直线信息不合法
    赋值 (dx, 求DX316 (线段))
    赋值 (dy, 求DY316 (线段))
    .判断开始 (并且 (等于 (dx, 0), 等于 (dy, 0))) ' 起始点重合，无指向，将零值作为初始值。
        赋值 (方位角, 0)
        赋值 (以增量计算方位角, 假)
    .默认
        赋值 (以增量计算方位角, 真)
    .判断结束
    
.否则
     ' 直线信息合法
    .如果 (并且 (等于 (线段.起点.x, 线段.尾点.x), 等于 (线段.起点.y, 线段.尾点.y)))
         ' 线段起点和尾点重合,以直线信息来计算方位角
        .判断开始 (等于 (线段.直线.A, 0))
             ' y=-c/b,说明Y是常数，与X轴平行，方位角为0
            赋值 (方位角, 0)
            赋值 (以增量计算方位角, 假)
        .判断 (等于 (线段.直线.B, 0))
             ' x=-c/a,说明X是常数，与Y轴平行，方位角为#pi/2
            赋值 (方位角, 相除 (#pi, 2))
            赋值 (以增量计算方位角, 假)
        .默认
             ' a,b都不为零。
             ' y=(-c-ax)/b
            赋值 (线段.直线, 直线类.平移经过点 (线段.直线, 线段.起点))
            赋值 (线段.尾点.x, 相加 (线段.起点.x, 1))
            赋值 (线段.尾点.y, 相除 (相减 (负 (线段.直线.C), 相乘 (线段.直线.A, 线段.尾点.x)), 线段.直线.B))
            赋值 (dx, 求DX316 (线段))
            赋值 (dy, 求DY316 (线段))
            赋值 (以增量计算方位角, 真)
        .判断结束
        
    .否则
         ' 线段起点和尾点不重合
        .如果 (并且 (小于或等于 (二维点类.到直线垂距316 (线段.起点, 线段.直线), 参极小值), 小于或等于 (二维点类.到直线垂距316 (线段.尾点, 线段.直线), 参极小值)))
             ' 线段在直线上,以直线信息来计算方位角
            赋值 (线段.起点, 二维点类.到直线垂足点316 (线段.起点, 线段.直线))
            赋值 (线段.尾点, 二维点类.到直线垂足点316 (线段.尾点, 线段.直线))
            赋值 (dx, 求DX316 (线段))
            赋值 (dy, 求DY316 (线段))
        .否则
            赋值 (dx, 求DX316 (线段))
            赋值 (dy, 求DY316 (线段))
        .如果结束
        
        赋值 (以增量计算方位角, 真)
    .如果结束
    
.如果结束

.如果真 (以增量计算方位角)
    .判断开始 (并且 (大于 (dx, 0), 等于 (dy, 0))) ' X正轴
        赋值 (方位角, 0)
    .判断 (并且 (大于 (dx, 0), 大于 (dy, 0))) ' 第一象限
        赋值 (方位角, 求反正切 (相除 (dy, dx)))
    .判断 (并且 (等于 (dx, 0), 大于 (dy, 0))) ' Y正轴
        赋值 (方位角, 相除 (#pi, 2))
    .判断 (并且 (小于 (dx, 0), 大于 (dy, 0))) ' 第二象限
        赋值 (方位角, 相加 (#pi, 求反正切 (相除 (dy, dx))))
    .判断 (并且 (小于 (dx, 0), 等于 (dy, 0))) ' X负轴
        赋值 (方位角, #pi)
    .判断 (并且 (小于 (dx, 0), 小于 (dy, 0))) ' 第三象限
        赋值 (方位角, 相加 (#pi, 求反正切 (相除 (dy, dx))))
    .判断 (并且 (等于 (dx, 0), 小于 (dy, 0))) ' Y负轴
        赋值 (方位角, 相乘 (相除 (#pi, 2), 3))
    .判断 (并且 (大于 (dx, 0), 小于 (dy, 0))) ' 第四象限
        赋值 (方位角, 相加 (相乘 (#pi, 2), 求反正切 (相除 (dy, dx))))
    .默认
        信息框 (“计算方位角时出现错误，请检查源程序。”, 0, )
    .判断结束
    
.如果真结束
返回 (方位角)

.子程序 求长度316, 双精度小数型, , 
.参数 参直线段, 线段, , 

.局部变量 二维点, 类坐标, , , 

返回 (二维点.距离316 (参直线段.起点, 参直线段.尾点))

.子程序 中点316, 坐标, , ok.
.参数 参线段, 线段, , 

.局部变量 中点, 坐标, , , 

赋值 (中点.x, 相加 (参线段.起点.x, 相除 (相减 (参线段.尾点.x, 参线段.起点.x), 2)))
赋值 (中点.y, 相加 (参线段.起点.y, 相除 (相减 (参线段.尾点.y, 参线段.起点.y), 2)))
返回 (中点)

.子程序 伸缩点316, 坐标, , 线段两个端点，有固定的长度，可以通过此方法进行伸缩，使其变短或变长。由于线段是具有方向性的，所以缩短和延长操作总是相对于前进方向而言，总是移动尾点的位置。如果提供的伸缩值为0，则不管线段本身的情况如何，都直接返回线段的尾点。如果提供的伸缩值为负数，表示将反向180度进行移动。如果提供的伸缩值为正数，就要看线段的起点与尾点是否重合，如果不重合，将以线段两端点所确定的线性变化量来进行伸缩，如果起点和尾点重合，就要检查线段的一般式定义信息是否合法，如果合法，就将直线平移经过线段，然后以直线计算方位角，角度范围为0至#PI，如果不合法，就以坐标原点引向端点的直线来计算方位角，如果端点又落在了原点上，就以X轴正方向为方位角，即0度。然后，将线段的尾点在所计算出的方位角上移动指定的距离，得到一个新的坐标点。
.参数 参线段, 线段, , 
.参数 参伸缩值, 双精度小数型, , 如果为正数，表示延长， 如果为负数，表示缩短

.局部变量 线段, 线段, , , 
.局部变量 二维点类, 类坐标, , , 
.局部变量 直线类, 类直线一般式, , , 
.局部变量 L, 双精度小数型, , , 
.局部变量 dx, 双精度小数型, , , 
.局部变量 dy, 双精度小数型, , , 
.局部变量 dL, 双精度小数型, , , 
.局部变量 伸缩点, 坐标, , , 
.局部变量 方位角, 双精度小数型, , , 

赋值 (线段, 参线段)
.如果 (等于 (参伸缩值, 0))
    赋值 (伸缩点, 线段.尾点)
    
.否则
    赋值 (L, 求长度316 (线段))
    .如果 (等于 (L, 0))
         ' 线段的起点和尾点重合
        .如果 (并且 (等于 (线段.直线.A, 0), 等于 (线段.直线.B, 0)))
             ' 线段一般式信息也不合法
            .如果 (等于 (线段.起点.x, 线段.尾点.x))
                 ' 线段两端点在原点上
                赋值 (伸缩点.x, 参伸缩值)
            .否则
                赋值 (dx, 线段.起点.x)
                赋值 (dy, 线段.起点.y)
                赋值 (dL, 求平方根 (相加 (求次方 (dx, 2), 求次方 (dy, 2))))
                赋值 (伸缩点.x, 相加 (线段.起点.x, 相乘 (相除 (参伸缩值, dL), dx)))
                赋值 (伸缩点.y, 相加 (线段.起点.y, 相乘 (相除 (参伸缩值, dL), dy)))
            .如果结束
            
        .否则
             ' 线段一般式信息也合法
            赋值 (线段.直线, 直线类.平移经过点 (线段.直线, 线段.起点)) ' 保持线段位置不变，将直线平移到线段位置
            .判断开始 (等于 (线段.直线.A, 0))
                 ' y=-c/b,说明Y是常数，与X轴平行，方位角为0
                赋值 (方位角, 0)
            .判断 (等于 (线段.直线.B, 0))
                 ' x=-c/a,说明X是常数，与Y轴平行，方位角为#pi/2
                赋值 (方位角, 相除 (#pi, 2))
            .默认
                赋值 (线段.尾点.x, 相加 (线段.起点.x, 1))
                赋值 (线段.尾点.y, 相除 (相减 (负 (线段.直线.C), 相乘 (线段.直线.A, 线段.尾点.x)), 线段.直线.B))
                赋值 (方位角, 求方位角316 (线段))
            .判断结束
            
            赋值 (伸缩点, 二维点类.平移_定向316 (线段.尾点, 方位角, 参伸缩值))
        .如果结束
        
    .否则
        赋值 (dx, 求DX316 (线段))
        赋值 (dy, 求DY316 (线段))
        赋值 (伸缩点.x, 相加 (线段.起点.x, 相乘 (相除 (相加 (L, 参伸缩值), L), dx)))
        赋值 (伸缩点.y, 相加 (线段.起点.y, 相乘 (相除 (相加 (L, 参伸缩值), L), dy)))
    .如果结束
    
.如果结束

返回 (伸缩点)

.子程序 延长, 线段, , 
.参数 参被延长线段, 线段, , 
.参数 参延伸值, 双精度小数型, , 应为正值，则沿着线段的尾点方向延长而得到新的线段，若为负值，则和缩短的效果一样。由于线段是具有方向性的，所以缩短和延长操作总是相对于前进方向而言，总是移动尾点的位置
.参数 参缩放中心点, 坐标, 可空, 如果提供了缩放中心点参数，将以此中心点为基准对线段进行缩放操作，而不在局限于起点或尾点的特定方向上，有可能两上方向同时要进行缩短操作。如果未提供此缩放中心，将以线段起点为中心进行延长操作。

.局部变量 被延长线段, 线段, , , 
.局部变量 缩放中心点, 坐标, , , 
.局部变量 二维点, 类坐标, , , 
.局部变量 直线类, 类直线一般式, , , 
.局部变量 点与直线关系类, 类关系_点与直线, , , 
.局部变量 点与线段关系类, 类关系_点与线段, , , 
.局部变量 垂线段, 线段, , , 
.局部变量 垂足点, 坐标, , , 
.局部变量 线段, 线段, , , 
.局部变量 长度, 双精度小数型, , , 
.局部变量 长度延伸后, 双精度小数型, , , 
.局部变量 比例, 坐标比例, , , 
.局部变量 起点伸缩点, 坐标, , , 
.局部变量 尾点伸缩点, 坐标, , , 
.局部变量 垂线段长度, 整数型, , , 

赋值 (被延长线段, 参被延长线段)
赋值 (缩放中心点, 参缩放中心点)

.判断开始 (是否为空 (参缩放中心点))
     ' 在直线上延伸，不受线段长度影响
    赋值 (线段.起点, 被延长线段.起点)
    赋值 (线段.尾点, 伸缩点316 (被延长线段, 参延伸值))
    .判断开始 (并且 (等于 (被延长线段.直线.A, 0), 等于 (被延长线段.直线.B, 0)))
        赋值 (线段.直线, 求直线316 (线段))
    .默认
        赋值 (线段.直线, 被延长线段.直线)
    .判断结束
    
.默认
     ' 以参照缩放中心的方式来缩放，必须考虑线段长度的影响，也就是考虑线段的起点与尾点重合的情况。
    赋值 (长度, 求长度316 (被延长线段))
    .如果 (等于 (长度, 0))
         ' 被延长线段的起点和尾点重合
        赋值 (被延长线段.直线, 求直线316 (被延长线段)) ' 修正被延长线段的一般式信息
        赋值 (垂线段, 二维点.到直线垂线段316 (缩放中心点, 被延长线段.直线)) ' 将缩放中心点向直线引垂线得到垂足点
        .如果 (并且 (等于 (垂线段.尾点.x, 被延长线段.起点.x), 等于 (垂线段.尾点.y, 被延长线段.起点.y)))
             ' 缩放中心点到直线的垂足点与线段端点重合，向两头延伸
            赋值 (线段, 直线类.截取线段_定长度且指定中点 (被延长线段.直线, 参延伸值, 垂线段.尾点))
            赋值 (垂线段长度, 二维点.距离316 (垂线段.起点, 垂线段.尾点))
            .如果真 (大于 (垂线段长度, 0))
                平移_两点定向316 (线段, 垂线段.尾点, 伸缩点316 (垂线段, 参延伸值), 参延伸值)
            .如果真结束
            
        .否则
             ' 缩放中心点到直线的垂足点在线段的一侧，向一头延伸
            
             ' 通过对线段的一端的延长而得到一条新的线段，如果没有提供缩放中心点，将以线段起点为中心按线段的方位角进行延长，如果线段两端点不重合，则方位角以线段两端点位置关系进行计算，如果两端点重合，将修正其直线一般式信息，然后以缩放中心点向直线作垂线，如果垂足点与线段端点重合，则将线段往两端等量延长，然后远离缩放中心点一定距离，远离距离与垂线段的长度有关，如果垂线段长度为0，将不移动线段，如果垂线段长度大于0，则新的垂线段长度为旧垂线段长度+延长量。
        .如果结束
        
    .否则
        赋值 (长度延伸后, 相加 (长度, 参延伸值))
        连续赋值 (相除 (长度延伸后, 长度), 比例.SX, 比例.SY)
        赋值 (线段.起点, 二维点.缩放316 (被延长线段.起点, 缩放中心点, 比例))
        赋值 (线段.尾点, 二维点.缩放316 (被延长线段.尾点, 缩放中心点, 比例))
        求直线316 (线段)
    .如果结束
    
.判断结束
返回 (线段)

.子程序 缩短, 线段, , 对线段进行缩短操作，有可能超出了线段本身的长度，从而改变了线段的方向。线段长度为能为零。
.参数 参线段, 线段, , 
.参数 参缩短值, 双精度小数型, , 应为正值，则沿着线段的尾点方向缩短而得到新的线段，若为负值，则和延长的效果一样。由于线段是具有方向性的，所以缩短和延长操作总是相对于前进方向而言，总是移动尾点的位置
.参数 参缩放中心点, 坐标, 可空, 如果提供了缩放中心点参数，将以此中心点为基准对线段进行缩放操作，而不在局限于起点或尾点的特定方向上，有可能两上方向同时要进行缩短操作。

.局部变量 二维点, 类坐标, , , 
.局部变量 线段, 线段, , , 
.局部变量 长度, 双精度小数型, , , 
.局部变量 长度缩短后, 双精度小数型, , , 
.局部变量 比例, 坐标比例, , , 

.判断开始 (是否为空 (参缩放中心点))
    赋值 (线段.起点, 参线段.起点)
    赋值 (线段.尾点, 伸缩点316 (参线段, 负 (参缩短值)))
    赋值 (线段.直线, 参线段.直线)
.默认
    赋值 (长度, 求长度316 (参线段))
    赋值 (长度缩短后, 相减 (长度, 参缩短值))
    赋值 (比例.SX, 相除 (长度缩短后, 长度))
    赋值 (比例.SY, 相除 (长度缩短后, 长度))
    赋值 (线段.起点, 二维点.缩放316 (参线段.起点, 参缩放中心点, 比例))
    赋值 (线段.尾点, 二维点.缩放316 (参线段.尾点, 参缩放中心点, 比例))
    求直线316 (线段)
.判断结束

返回 (线段)

.子程序 缩放长短, 线段, , 线段的缩放本质上就是对线段端点的缩放后而连接生成新的线段。
.参数 参线段, 线段, , 
.参数 参缩放中心点, 坐标, 可空, 可以是任意平面点，为空时将参照原点进行缩放操作。
.参数 参比例, 双精度小数型, , 缩放后的的线段长度相对于原来的长度的比值。比例不应该为零，否则返回起始点重合在垂足点的线段。如果比例出现负数，将进行对称操作。

.局部变量 二维点, 类坐标, , , 
.局部变量 线段, 线段, , , 
.局部变量 比例, 坐标比例, , , 

赋值 (比例.SX, 参比例)
赋值 (比例.SY, 参比例)
赋值 (线段.起点, 二维点.缩放316 (参线段.起点, 参缩放中心点, 比例))
赋值 (线段.尾点, 二维点.缩放316 (参线段.尾点, 参缩放中心点, 比例))
赋值 (线段.直线, 参线段.直线)
返回 (线段)

.子程序 缩放, 线段, , 线段的缩放本质上就是对线段端点的缩放后而连接生成新的线段。
.参数 参线段, 线段, , 
.参数 参缩放中心点, 坐标, 可空, 可以是任意平面点，为空时将参照原点进行缩放操作。
.参数 参比例, 坐标比例, , 缩放后的的线段长度相对于原来的长度的比值。比例不应该为零，否则返回起始点重合在垂足点的线段。如果比例出现负数，将进行对称操作。

.局部变量 二维点, 类坐标, , , 
.局部变量 线段, 线段, , , 

赋值 (线段.起点, 二维点.缩放316 (参线段.起点, 参缩放中心点, 参比例))
赋值 (线段.尾点, 二维点.缩放316 (参线段.尾点, 参缩放中心点, 参比例))
赋值 (线段.直线, 参线段.直线)
返回 (线段)

.子程序 定长, 线段, , 
.参数 参线段, 线段, , 
.参数 参最终长度, 双精度小数型, , 如果最终长度录入负值，将以参照中心作对称操作。
.参数 参缩放中心点, 坐标, 可空, 如果未提供缩放中心点，将以线段的起点为中心进行定长操作。

.局部变量 二维点, 类坐标, , , 
.局部变量 长度变化量, 双精度小数型, , , 
.局部变量 线段, 线段, , , 
.局部变量 长度, 双精度小数型, , , 
.局部变量 比例, 坐标比例, , , 

赋值 (长度, 求长度316 (参线段))
.判断开始 (是否为空 (参缩放中心点))
    赋值 (长度变化量, 相减 (参最终长度, 长度))
    赋值 (线段.起点, 参线段.起点)
    赋值 (线段.尾点, 伸缩点316 (参线段, 长度变化量))
    赋值 (线段.直线, 参线段.直线)
.默认
    赋值 (比例.SX, 相除 (参最终长度, 长度))
    赋值 (比例.SY, 相除 (参最终长度, 长度))
    赋值 (线段.起点, 二维点.缩放316 (参线段.起点, 参缩放中心点, 比例))
    赋值 (线段.尾点, 二维点.缩放316 (参线段.尾点, 参缩放中心点, 比例))
    求直线316 (线段)
.判断结束

返回 (线段)

.子程序 旋转316, 线段, , 求一线段绕坐标任意参照点旋转后的位置。
.参数 参被旋转的线段, 线段, , 
.参数 参旋转中心, 坐标, 可空, 
.参数 参旋转角度, 双精度小数型, , 

.局部变量 被旋转的线段, 线段, , , 
.局部变量 旋转中心, 坐标, , , 
.局部变量 二维点, 类坐标, , , 
.局部变量 直线类, 类直线一般式, , , 
.局部变量 线段, 线段, , , 

赋值 (被旋转的线段, 参被旋转的线段)
赋值 (旋转中心, 参旋转中心)

赋值 (线段.起点, 二维点.旋转316 (被旋转的线段.起点, 旋转中心, 参旋转角度))
赋值 (线段.尾点, 二维点.旋转316 (被旋转的线段.尾点, 旋转中心, 参旋转角度))
.如果 (并且 (等于 (线段.起点.x, 线段.尾点.x), 等于 (线段.起点.y, 线段.尾点.y)))
     ' 起点和尾点重合，将无法直接计算直线信息
    .如果 (并且 (等于 (被旋转的线段.直线.A, 0), 等于 (被旋转的线段.直线.B, 0)))
         ' 如果给定的直线段起点和尾点重合并且没有一般式定义，返回的线段也不会有一般式定义。
    .否则
        赋值 (线段.直线, 直线类.直线绕点旋转 (被旋转的线段.直线, 旋转中心, 参旋转角度))
    .如果结束
    
.否则
    .如果 (并且 (等于 (被旋转的线段.直线.A, 0), 等于 (被旋转的线段.直线.B, 0)))
        赋值 (线段.直线, 求直线316 (线段))
    .否则
        赋值 (线段.直线, 直线类.直线绕点旋转 (被旋转的线段.直线, 旋转中心, 参旋转角度))
    .如果结束
    
.如果结束

返回 (线段)

.子程序 旋转向点, 线段, , 求一线段绕坐标任意参照点旋转，并且旋转后其前进方向指向目标点的位置。
.参数 参被旋转的线段, 线段, , 
.参数 参旋转中心, 坐标, 可空, 
.参数 参方向点, 坐标, 可空, 

.局部变量 旋转半径, 双精度小数型, , , 
.局部变量 二维点, 类坐标, , , 
.局部变量 被旋转的线段, 线段, , , 
.局部变量 方向点, 坐标, , , 
.局部变量 方向点r, 双精度小数型, , , 
.局部变量 交点, 坐标, , , 

 ' ----------------------------首先要检查方向点是否在旋转半径之内------------------------------------------------------
 ' 如果在旋转半径之内，将是不可能完成的任务。
赋值 (旋转半径, 二维点.距离316 (参旋转中心, 参被旋转的线段.尾点))
.如果真 (小于 (二维点.距离316 (参旋转中心, 参方向点), 旋转半径))
    返回 (参被旋转的线段)
.如果真结束
 ' ----------------------------平移坐标系到旋转中心---------------------------------------------------------------------
赋值 (被旋转的线段, 平移316 (参被旋转的线段, 二维点.对称316 (参旋转中心)))
赋值 (方向点, 二维点.平移316 (参方向点, 二维点.对称316 (参旋转中心)))
 ' 现在相当于绕原点旋转，但由于旋转中心还没有在线段上，所以计算还是比较复杂，用到圆的知识，才能解决。
 ' ----------------------------计算旋转角度---------------------------------------------------------------------
赋值 (方向点r, 二维点.模r316 (方向点))


 ' ----------------------------旋转被旋转的线段---------------------------------------------------------------------







 ' ----------------------------平移坐标系回原来的位置---------------------------------------------------------------------
赋值 (被旋转的线段, 平移316 (参被旋转的线段, 参旋转中心))

求直线316 (被旋转的线段)
返回 (被旋转的线段)

.子程序 旋转左转, 线段, , 以起点为基准不动，以直线段前进方向为准左转一定角度，长度不变，得到一条新的线段。
.参数 参线段, 线段, , 
.参数 参转角, 双精度小数型, , 弧度，应提供正值，如果提供了负值，实则为右转。

.局部变量 二维点, 类坐标, , , 
.局部变量 线段, 线段, , , 

赋值 (线段.起点, 参线段.起点)
赋值 (线段.尾点, 二维点.旋转316 (参线段.尾点, 参线段.起点, 参转角))
求直线316 (线段)
返回 (线段)

.子程序 旋转右转, 线段, , 以起点为基准不动，以直线段前进方向为准右转一定角度，长度不变，得到一条新的线段。
.参数 参线段, 线段, , 
.参数 参转角, 双精度小数型, , 弧度，应提供正值，如果提供了负值，实则为左转。

.局部变量 二维点, 类坐标, , , 
.局部变量 线段, 线段, , , 

赋值 (线段.起点, 参线段.起点)
赋值 (线段.尾点, 二维点.旋转316 (参线段.尾点, 参线段.起点, 负 (参转角)))
求直线316 (线段)
返回 (线段)

.子程序 反向316, 线段, , 
.参数 参线段, 线段, , 

.局部变量 线段, 线段, , , 

赋值 (线段.起点, 参线段.尾点)
赋值 (线段.尾点, 参线段.起点)
赋值 (线段.直线, 参线段.直线)
返回 (线段)

.子程序 前进316, 线段, , 
.参数 参被前进线段, 线段, , 
.参数 参前进距离, 双精度小数型, , 应提供正负符号，如果为正数，线段将沿尾点方向平移前进所要求的距离，否则将沿起点方向后退相应的距离值。

.局部变量 被前进线段, 线段, , , 
.局部变量 反向线段, 线段, , , 
.局部变量 线段, 线段, , , 

赋值 (被前进线段, 参被前进线段)
.判断开始 (等于 (参前进距离, 0))
    返回 (被前进线段)
.默认
    赋值 (线段.尾点, 伸缩点316 (被前进线段, 参前进距离))
    
    赋值 (反向线段, 反向316 (被前进线段))
    赋值 (线段.起点, 伸缩点316 (反向线段, 负 (参前进距离)))
.判断结束
赋值 (线段.直线, 被前进线段.直线)
返回 (线段)

.子程序 后退316, 线段, , 
.参数 参被后退线段, 线段, , 
.参数 参后退距离, 双精度小数型, , 应提供正负符号，如果为正数，线段将沿起点方向平移后退所要求的距离，否则将沿尾点方向前进相应的距离值。

.局部变量 被后退线段, 线段, , , 
.局部变量 反向线段, 线段, , , 
.局部变量 线段, 线段, , , 

赋值 (被后退线段, 参被后退线段)
.判断开始 (等于 (参后退距离, 0))
    返回 (被后退线段)
.默认
    赋值 (线段.尾点, 伸缩点316 (被后退线段, 负 (参后退距离)))
    赋值 (反向线段, 反向316 (被后退线段))
    赋值 (线段.起点, 伸缩点316 (反向线段, 参后退距离))
.判断结束
赋值 (线段.直线, 被后退线段.直线)
返回 (线段)

.子程序 平移316, 线段, , 以直线段自身为参照，指定其位移分量进行移动，得到新的直线段。
.参数 参被平移线段, 线段, , 
.参数 参平移分量, 坐标, , 

.局部变量 被平移线段, 线段, , , 
.局部变量 平移分量, 坐标, , , 
.局部变量 直线类, 类直线一般式, , , 
.局部变量 二维点, 类坐标, , , 
.局部变量 线段, 线段, , , 

赋值 (被平移线段, 参被平移线段)
赋值 (平移分量, 参平移分量)
赋值 (线段.起点, 二维点.平移316 (被平移线段.起点, 平移分量))
赋值 (线段.尾点, 二维点.平移316 (被平移线段.尾点, 平移分量))
.如果 (并且 (等于 (线段.起点.x, 线段.尾点.x), 等于 (线段.起点.y, 线段.尾点.y)))
     ' 起点和尾点重合，将无法直接计算直线信息
    .如果 (并且 (等于 (被平移线段.直线.A, 0), 等于 (被平移线段.直线.B, 0)))
         ' 如果给定的直线段起点和尾点重合并且没有一般式定义，返回的线段也不会有一般式定义。
    .否则
        赋值 (线段.直线, 直线类.平移 (被平移线段.直线, 平移分量.x, 平移分量.y))
    .如果结束
    
.否则
    .如果 (并且 (等于 (被平移线段.直线.A, 0), 等于 (被平移线段.直线.B, 0)))
        赋值 (线段.直线, 求直线316 (线段))
    .否则
        赋值 (线段.直线, 直线类.平移 (被平移线段.直线, 平移分量.x, 平移分量.y))
    .如果结束
    
.如果结束

返回 (线段)

.子程序 平移_定向316, 线段, , 以直线段自身为参照，指定其位移方向角和移动距离，得到新的直线段。
.参数 参被平移线段, 线段, , 
.参数 参角度, 双精度小数型, , 
.参数 参移动量, 双精度小数型, , 

.局部变量 被平移线段, 线段, , , 
.局部变量 直线类, 类直线一般式, , , 
.局部变量 二维点, 类坐标, , , 
.局部变量 线段, 线段, , , 

赋值 (被平移线段, 参被平移线段)
赋值 (线段.起点, 二维点.平移_定向316 (被平移线段.起点, 参角度, 参移动量))
赋值 (线段.尾点, 二维点.平移_定向316 (被平移线段.尾点, 参角度, 参移动量))
.如果 (并且 (等于 (线段.起点.x, 线段.尾点.x), 等于 (线段.起点.y, 线段.尾点.y)))
     ' 起点和尾点重合，将无法直接计算直线信息
    .如果 (并且 (等于 (被平移线段.直线.A, 0), 等于 (被平移线段.直线.B, 0)))
         ' 如果给定的直线段起点和尾点重合并且没有一般式定义，返回的线段也不会有一般式定义。
    .否则
        赋值 (线段.直线, 直线类.平移按方向 (被平移线段.直线, 参角度, 参移动量))
    .如果结束
    
.否则
    .如果 (并且 (等于 (被平移线段.直线.A, 0), 等于 (被平移线段.直线.B, 0)))
        赋值 (线段.直线, 求直线316 (线段))
    .否则
        赋值 (线段.直线, 直线类.平移按方向 (被平移线段.直线, 参角度, 参移动量))
    .如果结束
    
.如果结束

返回 (线段)

.子程序 平移_两点定向316, 线段, , 以直线段自身为参照，指定其位移分量进行移动，得到新的直线段。如果未提供方向点，将按照给定的移动量以线段的前进方向为准进行移动。如果提供的方向点两点重合，将无法对线段进行移动。
.参数 参被平移线段, 线段, , 
.参数 参方向基点, 坐标, 可空, 
.参数 参方向目标点, 坐标, 可空, 
.参数 参移动量, 双精度小数型, 可空, 如果移动量为零，将参照方向目标点与方向基点之间的距离计算移动量

.局部变量 被平移线段, 线段, , , 
.局部变量 方向基点, 坐标, , , 
.局部变量 方向目标点, 坐标, , , 
.局部变量 二维点, 类坐标, , , 
.局部变量 直线类, 类直线一般式, , , 
.局部变量 平移量, 坐标, , , 
.局部变量 坐标, 坐标, , , 
.局部变量 线段, 线段, , , 

赋值 (被平移线段, 参被平移线段)
赋值 (方向基点, 参方向基点)
赋值 (方向目标点, 参方向目标点)

.判断开始 (并且 (等于 (是否为空 (参方向基点), 真), 等于 (是否为空 (参方向目标点), 真)))
     ' 如果一个方向点也没有提供，就认为只需要将线段进行前进后退操作。
    .判断开始 (不等于 (参移动量, 0))
        返回 (前进316 (被平移线段, 参移动量))
    .默认
        返回 (被平移线段)
    .判断结束
    
.判断 (并且 (等于 (是否为空 (参方向基点), 假), 等于 (是否为空 (参方向目标点), 假)))
     ' 同时提供了方向基点和方向目标点，将按照给目标点相对于基点的移动量进行移动。
    赋值 (平移量.x, 相减 (方向目标点.x, 方向基点.x))
    赋值 (平移量.y, 相减 (方向目标点.y, 方向基点.y))
    .如果 (并且 (等于 (平移量.x, 0), 等于 (平移量.y, 0)))
        返回 (被平移线段)
    .否则
        返回 (平移316 (被平移线段, 平移量))
    .如果结束
    
.默认
     ' 只要提供了一个方向点，就认为要按照给定的方向点相对于坐标原点方向进行移动。
    .判断开始 (等于 (是否为空 (参方向基点), 真))
        赋值 (平移量.x, 方向目标点.x)
        赋值 (平移量.y, 方向目标点.y)
    .默认
        赋值 (平移量.x, 方向基点.x)
        赋值 (平移量.y, 方向基点.y)
    .判断结束
    
    .如果 (并且 (等于 (平移量.x, 0), 等于 (平移量.y, 0)))
         ' 虽然提供了方向点，但提供的方向点无法计算位移方向。所以无法完成平移操作。
        返回 (被平移线段)
    .否则
        .判断开始 (等于 (参移动量, 0))
             ' 提供的移动量零，按给定两个方向点的坐标增量进行平移。
            返回 (平移316 (被平移线段, 平移量))
            返回 (线段)
        .默认
             ' 移动量不为零,将按照定两个方向点确定的方向以指定的移动量进行移动
            返回 (平移_定向316 (被平移线段, 二维点.复角316 (平移量), 参移动量))
        .判断结束
        
    .如果结束
    
.判断结束


.子程序 平移_线段定向316, 线段, , 以另一条直线段指向为参照，指定其移动距离，得到新的直线段。如果未提供定向线段，将按照给定的移动量以线段的前进方向为准进行移动。如果提供的线段两端点两点重合，将无法对线段进行移动。
.参数 参被平移线段, 线段, , 
.参数 参方向线段, 线段, , 将按照方向线段规定的方向结合给定的移动量进行移动，如果此时移动量为零，将以方向线段为准计算移动量进行移动。
.参数 参移动量, 双精度小数型, 可空, 

.局部变量 被平移线段, 线段, , , 
.局部变量 方向线段, 线段, , , 
.局部变量 二维点, 类坐标, , , 
.局部变量 线段, 线段, , , 
.局部变量 角度, 双精度小数型, , , 
.局部变量 平移量, 坐标, , , 
.局部变量 坐标, 坐标, , , 

赋值 (被平移线段, 参被平移线段)
赋值 (方向线段, 参方向线段)

赋值 (平移量.x, 相减 (方向线段.尾点.x, 方向线段.起点.x))
赋值 (平移量.y, 相减 (方向线段.尾点.y, 方向线段.起点.y))
.判断开始 (等于 (参移动量, 0))
    .如果 (并且 (等于 (平移量.x, 0), 等于 (平移量.y, 0)))
        返回 (被平移线段)
    .否则
        返回 (平移316 (被平移线段, 平移量))
    .如果结束
    
.默认
     ' 移动量不零,将按照移动量进行移动
    .如果 (并且 (等于 (平移量.x, 0), 等于 (平移量.y, 0)))
        .如果 (并且 (等于 (线段.直线.A, 0), 等于 (线段.直线.B, 0)))
            .如果 (并且 (等于 (线段.起点.x, 0), 等于 (线段.起点.y, 0)))
                返回 (平移_定向316 (被平移线段, 0, 参移动量))
            .否则
                返回 (平移_定向316 (被平移线段, 二维点.复角316 (线段.起点), 参移动量))
            .如果结束
            
        .否则
            返回 (平移_定向316 (被平移线段, 线段.直线.J, 参移动量))
        .如果结束
        
    .否则
        返回 (平移_定向316 (被平移线段, 二维点.复角316 (平移量), 参移动量))
    .如果结束
    
.判断结束


.子程序 偏移, 线段, , 此计算方案还可以优化为直接使用数学公式。左侧为正,右侧为负，以直线段前进方向为准。
.参数 参线段, 线段, , 
.参数 参方向, 整数型, , 1或-1，请提供正负符号,左侧为正,右侧为负，以直线段前进方向为准。
.参数 参距离, 双精度小数型, , 

.局部变量 线段, 线段, , , 

.判断开始 (大于或等于 (参方向, 0))
    赋值 (线段.起点, 转折偏头点 (反向316 (参线段), 负 (相除 (#pi, 2)), 参距离))
    赋值 (线段.尾点, 转折偏头点 (参线段, 相除 (#pi, 2), 参距离))
    
.默认
    赋值 (线段.起点, 转折偏头点 (反向316 (参线段), 相除 (#pi, 2), 参距离))
    赋值 (线段.尾点, 转折偏头点 (参线段, 负 (相除 (#pi, 2)), 参距离))
.判断结束
求直线316 (线段)
返回 (线段)

.子程序 偏移向左, 线段, , 此计算方案还可以优化为直接使用数学公式。左侧为正,右侧为负，以直线段前进方向为准。
.参数 参线段, 线段, , 
.参数 参距离, 双精度小数型, , 

.局部变量 线段, 线段, , , 

赋值 (线段.起点, 转折偏头点 (反向316 (参线段), 负 (相除 (#pi, 2)), 参距离))
赋值 (线段.尾点, 转折偏头点 (参线段, 相除 (#pi, 2), 参距离))
求直线316 (线段)
返回 (线段)

.子程序 偏移向右, 线段, , 左侧为正,右侧为负，以直线段前进方向为准。
.参数 参线段, 线段, , 
.参数 参距离, 双精度小数型, , 

.局部变量 线段, 线段, , , 

赋值 (线段.起点, 转折偏头点 (反向316 (参线段), 相除 (#pi, 2), 参距离))
赋值 (线段.尾点, 转折偏头点 (参线段, 负 (相除 (#pi, 2)), 参距离))
求直线316 (线段)
返回 (线段)

.子程序 偏移向点, 线段, , 以线段外的一点作为参照方向进行偏移，但该参照点只决定偏移方向是左还是右。
.参数 参线段, 线段, , 
.参数 参照点, 坐标, 可空, 如果未指定，将参照坐标原点进行偏移。
.参数 参距离, 双精度小数型, , 

.局部变量 二维_点与线段, 类关系_点与线段, , , 
.局部变量 二维点, 类坐标, , , 
.局部变量 线段, 线段, , , 
.局部变量 原点, 坐标, , , 
.局部变量 关系_参照点与偏移线段, 整数型, , , 
.局部变量 关系_原点与偏移线段, 空白型, , , 


赋值 (关系_参照点与偏移线段, 二维_点与线段.点与线段关系 (参照点, 参线段))
.如果 (等于 (关系_参照点与偏移线段, #点与线段_点在线段上))
     ' 点在直线上，将不知道往何方向偏，所以只好往坐标原点进行偏移了。
    赋值 (关系_原点与偏移线段, 二维_点与线段.点与线段关系 (原点, 参线段))
    .如果 (等于 (关系_原点与偏移线段, #点与线段_点在线段上))
         ' 如果直线段又要经过坐标原点，就不能偏移了，只好返回它自身。
        返回 (参线段)
    .否则
        .判断开始 (或者 (等于 (关系_原点与偏移线段, #点与线段_点在线段左正侧), 等于 (关系_原点与偏移线段, #点与线段_点在线段左前侧), 等于 (关系_原点与偏移线段, #点与线段_点在线段左后侧)))
            赋值 (线段, 偏移向左 (参线段, 参距离))
        .默认
            赋值 (线段, 偏移向右 (参线段, 参距离))
        .判断结束
        
    .如果结束
    
.否则
    .判断开始 (或者 (等于 (关系_参照点与偏移线段, #点与线段_点在线段左正侧), 等于 (关系_参照点与偏移线段, #点与线段_点在线段左前侧), 等于 (关系_参照点与偏移线段, #点与线段_点在线段左后侧)))
        赋值 (线段, 偏移向左 (参线段, 参距离))
    .默认
        赋值 (线段, 偏移向右 (参线段, 参距离))
    .判断结束
    
.如果结束

求直线316 (线段)
返回 (线段)

.子程序 偏移离点, 线段, , 以线段外的一点作为参照方向进行偏移，但该参照点只决定偏移方向是左还是右。
.参数 参线段, 线段, , 
.参数 参照点, 坐标, 可空, 如果未指定，将参照坐标原点进行偏移。
.参数 参距离, 双精度小数型, , 

.局部变量 二维_点与线段, 类关系_点与线段, , , 
.局部变量 二维点, 类坐标, , , 
.局部变量 线段, 线段, , , 
.局部变量 原点, 坐标, , , 
.局部变量 关系_参照点与偏移线段, 整数型, , , 
.局部变量 关系_原点与偏移线段, 空白型, , , 


赋值 (关系_参照点与偏移线段, 二维_点与线段.点与线段关系 (参照点, 参线段))
.如果 (等于 (关系_参照点与偏移线段, #点与线段_点在线段上))
     ' 点在直线上，将不知道往何方向偏，所以只好往坐标原点进行偏移了。
    赋值 (关系_原点与偏移线段, 二维_点与线段.点与线段关系 (原点, 参线段))
    .如果 (等于 (关系_原点与偏移线段, #点与线段_点在线段上))
         ' 如果直线段又要经过坐标原点，就不能偏移了，只好返回它自身。
        返回 (参线段)
    .否则
        .判断开始 (或者 (等于 (关系_原点与偏移线段, #点与线段_点在线段左正侧), 等于 (关系_原点与偏移线段, #点与线段_点在线段左前侧), 等于 (关系_原点与偏移线段, #点与线段_点在线段左后侧)))
            赋值 (线段, 偏移向右 (参线段, 参距离))
        .默认
            赋值 (线段, 偏移向左 (参线段, 参距离))
        .判断结束
        
    .如果结束
    
.否则
    .判断开始 (或者 (等于 (关系_参照点与偏移线段, #点与线段_点在线段左正侧), 等于 (关系_参照点与偏移线段, #点与线段_点在线段左前侧), 等于 (关系_参照点与偏移线段, #点与线段_点在线段左后侧)))
        赋值 (线段, 偏移向右 (参线段, 参距离))
    .默认
        赋值 (线段, 偏移向左 (参线段, 参距离))
    .判断结束
    
.如果结束

求直线316 (线段)
返回 (线段)

.子程序 投影到X轴316, 线段, , 被投影线段的端点与投影方向点连线不能与X轴平行，否则将无法完成参照投影操作，返回为无参照点的X轴投影。
.参数 参被投影线段, 线段, , 
.参数 参投影方向点, 坐标, 可空, 如果未提供投影方向点，将正投影到X轴上。

.局部变量 被投影线段, 线段, , , 
.局部变量 投影方向点, 坐标, , , 
.局部变量 二维点, 类坐标, , , 
.局部变量 线段, 线段, , , 

赋值 (被投影线段, 参被投影线段)
赋值 (投影方向点, 参投影方向点)

.判断开始 (是否为空 (参投影方向点))
    赋值 (线段.起点.x, 被投影线段.起点.x)
    赋值 (线段.尾点.x, 被投影线段.尾点.x)
.默认
    赋值 (线段.起点, 二维点.投影到X轴316 (被投影线段.起点, 投影方向点))
    赋值 (线段.尾点, 二维点.投影到X轴316 (被投影线段.尾点, 投影方向点))
.判断结束
赋值 (线段.直线.B, 1)
返回 (线段)

.子程序 投影到Y轴316, 线段, , 被投影线段的端点与投影方向点连线不能与Y轴平行，否则将无法完成参照投影操作，返回为无参照点的Y轴投影。
.参数 参被投影线段, 线段, , 
.参数 参投影方向点, 坐标, 可空, 如果未提供投影方向点，将正投影到Y轴上。

.局部变量 被投影线段, 线段, , , 
.局部变量 投影方向点, 坐标, , , 
.局部变量 二维点, 类坐标, , , 
.局部变量 线段, 线段, , , 

赋值 (被投影线段, 参被投影线段)
赋值 (投影方向点, 参投影方向点)

.判断开始 (是否为空 (参投影方向点))
    赋值 (线段.起点.y, 被投影线段.起点.y)
    赋值 (线段.尾点.y, 被投影线段.尾点.y)
.默认
    赋值 (线段.起点, 二维点.投影到Y轴316 (被投影线段.起点, 投影方向点))
    赋值 (线段.尾点, 二维点.投影到Y轴316 (被投影线段.尾点, 投影方向点))
.判断结束
赋值 (线段.直线.A, 1)
返回 (线段)

.子程序 投影到线段, 线段, , 与投影到直线的方法相似，只不过它更要求投影点必须落到线段上，如果投影到了线段外，多余的部分将被切除掉。
.参数 参被投影线段, 线段, , 
.参数 参投影方向点, 坐标, 可空, 如果未提供投影方向点，将正投影到线段上。即由线段的两个端点向直线引垂线，从而得到两个垂足点。
.参数 参目标线段, 线段, , 

.局部变量 二维点类, 类坐标, , , 
.局部变量 二维_点与线段, 类关系_点与线段, , , 
.局部变量 线段, 线段, , , 
.局部变量 关系起点, 整数型, , , 
.局部变量 关系尾点, 整数型, , , 

 ' -----------------------------------------获得被投影线段在目标线段所在直线上的投影线段-----------------------------------------------------
.判断开始 (是否为空 (参投影方向点))
     ' 未提供投影方向点的情况
    赋值 (线段.起点, 二维点类.到线段垂足点316 (参被投影线段.起点, 参目标线段))
    赋值 (线段.尾点, 二维点类.到线段垂足点316 (参被投影线段.尾点, 参目标线段))
.默认
     ' 提供了提影方向点的情况
    赋值 (线段.起点, 二维点类.投影到线段316 (参被投影线段.起点, 参投影方向点, 参目标线段))
    赋值 (线段.尾点, 二维点类.投影到线段316 (参被投影线段.尾点, 参投影方向点, 参目标线段))
.判断结束
 ' 前面两种情况都获得了在线段所在直线上的投影线段。

 ' -----------------------------------------获得两个投影点与目标线段的关系-----------------------------------------------------
赋值 (关系起点, 二维_点与线段.点与线段关系 (线段.起点, 参目标线段))
赋值 (关系尾点, 二维_点与线段.点与线段关系 (线段.尾点, 参目标线段))
 ' 获得了直线上的投影点与目标线段的关系。
.判断开始 (或者 (并且 (等于 (关系起点, #点与线段_点在线段正后面), 等于 (关系尾点, #点与线段_点在线段正后面)), 并且 (等于 (关系起点, #点与线段_点在线段正前面), 等于 (关系尾点, #点与线段_点在线段正前面))))
     ' 说明两个投影点都在线段外，所以返回被投影线段本身。
    返回 (参被投影线段)
.判断 (并且 (等于 (关系起点, #点与线段_点在线段上), 等于 (关系尾点, #点与线段_点在线段上)))
     ' 两个端点都在目标线段上，不管。
.判断 (并且 (等于 (关系起点, #点与线段_点在线段正后面), 等于 (关系尾点, #点与线段_点在线段正前面)))
     ' 说明投影两端都长于目标线段，多余部分被切除。
    赋值 (线段.起点, 参目标线段.起点)
    赋值 (线段.尾点, 参目标线段.尾点)
.判断 (并且 (等于 (关系起点, #点与线段_点在线段正前面), 等于 (关系尾点, #点与线段_点在线段正后面)))
     ' 说明投影两端都长于目标线段，多余部分被切除。
    赋值 (线段.起点, 参目标线段.尾点)
    赋值 (线段.尾点, 参目标线段.起点)
.判断 (并且 (等于 (关系起点, #点与线段_点在线段正后面), 等于 (关系尾点, #点与线段_点在线段上)))
     ' 说明投影一端长于目标线段，多余部分被切除。
    赋值 (线段.起点, 参目标线段.起点)
.判断 (并且 (等于 (关系起点, #点与线段_点在线段上), 等于 (关系尾点, #点与线段_点在线段正前面)))
     ' 说明投影一端长于目标线段，多余部分被切除。
    赋值 (线段.尾点, 参目标线段.尾点)
.默认
    信息框 (“投影到线段 程序出错，可能是 判断 点与线段的关系 的程序有误！”, 0, )
     ' 由于是投影形成的线段，只能在目标线段所在的直线上，否则就有程序错误。
.判断结束
求直线316 (线段)
返回 (线段)

.子程序 投影到直线316, 线段, , 将线段的端点按照投影方向点的指向投影到直线，本质上是连接投影方向点与被投影点成一条直线，然后计算与目标直线的交点。如果没有交点，就无法成生投影点。所以被投影点与投影方向点连线不能与目标直线重合或平行，否则将无法完成参照投影操作，返回为投影方向点的坐标值。
.参数 参被投影线段, 线段, , 
.参数 参投影方向点, 坐标, 可空, 如果未提供投影方向点，将正投影到直线上。即由线段的两个端点向直线引垂线，从而得到两个垂足点。
.参数 参目标直线, 直线一般式, , 如果提供的直线信息不合法，将返回原线段，无法完成投影操作。

.局部变量 被投影线段, 线段, , , 
.局部变量 投影方向点, 坐标, , , 
.局部变量 目标直线, 直线一般式, , , 
.局部变量 二维点, 类坐标, , , 
.局部变量 线段, 线段, , , 

赋值 (被投影线段, 参被投影线段)
赋值 (投影方向点, 参投影方向点)
赋值 (目标直线, 参目标直线)

.如果真 (并且 (等于 (目标直线.A, 0), 等于 (目标直线.B, 0)))
    返回 (被投影线段)
.如果真结束

.判断开始 (是否为空 (参投影方向点))
    赋值 (线段.起点, 二维点.到直线垂足点316 (被投影线段.起点, 目标直线))
    赋值 (线段.尾点, 二维点.到直线垂足点316 (被投影线段.尾点, 目标直线))
.默认
    赋值 (线段.起点, 二维点.投影到直线316 (被投影线段.起点, 目标直线, 投影方向点))
    赋值 (线段.尾点, 二维点.投影到直线316 (被投影线段.尾点, 目标直线, 投影方向点))
.判断结束
赋值 (线段.直线, 目标直线)
返回 (线段)

.子程序 延伸到X轴316, 线段, , 将线段沿着前进方向延伸到与X轴相交，如果与X轴没有交点或原本就已相交，将返回线段本身，而无任何动作。
.参数 参被延伸线段, 线段, , 调用前一定要确保被正确设置了直线信息，如果没有，程序将自动进行计算。
.参数 参方向, 整数型, 可空, 常量值：#线段_两端延伸，#线段_起点延伸，#线段_尾点延伸，默认两头都可以延伸。

.局部变量 被延伸线段, 线段, , , 
.局部变量 二维_点与线段, 类关系_点与线段, , , 
.局部变量 坐标, 坐标, , , 
.局部变量 线段, 线段, , , 
.局部变量 关系, 整数型, , , 

赋值 (被延伸线段, 参被延伸线段)
.如果真 (并且 (等于 (被延伸线段.直线.A, 0), 等于 (被延伸线段.直线.B, 0)))
    赋值 (被延伸线段.直线, 求直线316 (被延伸线段))
.如果真结束

.判断开始 (等于 (被延伸线段.直线.A, 0))
     ' 与X轴平行的直线，永远也不可以延伸到X轴上去。
    返回 (被延伸线段)
.默认
    赋值 (坐标.y, 0)
    赋值 (坐标.x, 相除 (负 (被延伸线段.直线.C), 被延伸线段.直线.A))
     ' 求得了线段所在直线与X轴的交点，但是否需要延伸，怎么延伸，需要计算。
    
    赋值 (关系, 二维_点与线段.点与线段关系 (坐标, 被延伸线段, #零6))
     ' 修改极小值，使计算偏向于要延伸。
    .判断开始 (等于 (关系, #点与线段_点在线段上))
        返回 (被延伸线段)
    .判断 (等于 (关系, #点与线段_点在线段正前面))
        .如果 (或者 (等于 (参方向, #线段_两端延伸), 等于 (参方向, #线段_尾点延伸)))
            赋值 (线段, 被延伸线段)
            赋值 (线段.尾点, 坐标)
        .否则
            返回 (被延伸线段)
        .如果结束
        
    .判断 (等于 (关系, #点与线段_点在线段正后面))
        .如果 (或者 (等于 (参方向, #线段_两端延伸), 等于 (参方向, #线段_起点延伸)))
            赋值 (线段, 被延伸线段)
            赋值 (线段.起点, 坐标)
        .否则
            返回 (被延伸线段)
        .如果结束
        
    .默认
         ' 不应该出现的程序分支
        信息框 (“程序计算出错，线段向X轴延伸时出现了不应该出现的情况！”, 0, )
        返回 (被延伸线段)
    .判断结束
    
.判断结束
赋值 (线段.直线, 被延伸线段.直线)
返回 (线段)

.子程序 延伸到Y轴316, 线段, , 将线段沿着前进方向延伸到与Y轴相交，如果与Y轴没有交点或原本就已相交，将返回线段本身，而无任何动作。B不能等于零。
.参数 参被延伸线段, 线段, , 调用前一定要确保被正确设置了直线信息，如果没有，程序将自动进行计算。
.参数 参方向, 整数型, 可空, 常量值：#线段_两端延伸，#线段_起点延伸，#线段_尾点延伸，默认两头都可以延伸。

.局部变量 被延伸线段, 线段, , , 
.局部变量 二维_点与线段, 类关系_点与线段, , , 
.局部变量 坐标, 坐标, , , 
.局部变量 线段, 线段, , , 
.局部变量 关系, 整数型, , , 

赋值 (被延伸线段, 参被延伸线段)
.如果真 (并且 (等于 (被延伸线段.直线.A, 0), 等于 (被延伸线段.直线.B, 0)))
    赋值 (被延伸线段.直线, 求直线316 (被延伸线段))
.如果真结束

.判断开始 (等于 (被延伸线段.直线.B, 0))
     ' 与Y轴平行的直线，永远也不可以延伸到Y轴上去。
    返回 (被延伸线段)
.默认
    赋值 (坐标.x, 0)
    赋值 (坐标.y, 相除 (负 (被延伸线段.直线.C), 被延伸线段.直线.B))
     ' 求得了线段所在直线与Y轴的交点，但是否需要延伸，怎么延伸，需要计算。
    
    赋值 (关系, 二维_点与线段.点与线段关系 (坐标, 被延伸线段, #零6))
     ' 修改极小值，使计算偏向于要延伸。
    .判断开始 (等于 (关系, #点与线段_点在线段上))
         ' 如果延伸点就在线段上，就不需要延伸了。
        返回 (被延伸线段)
    .判断 (等于 (关系, #点与线段_点在线段正前面))
        .如果 (或者 (等于 (参方向, #线段_两端延伸), 等于 (参方向, #线段_尾点延伸)))
            赋值 (线段, 被延伸线段)
            赋值 (线段.尾点, 坐标)
        .否则
            返回 (被延伸线段)
        .如果结束
        
    .判断 (等于 (关系, #点与线段_点在线段正后面))
        .如果 (或者 (等于 (参方向, #线段_两端延伸), 等于 (参方向, #线段_起点延伸)))
            赋值 (线段, 被延伸线段)
            赋值 (线段.起点, 坐标)
        .否则
            返回 (被延伸线段)
        .如果结束
        
    .默认
         ' 不应该出现的程序分支
        信息框 (“程序计算出错，线段向Y轴延伸时出现了不应该出现的情况！”, 0, )
        返回 (被延伸线段)
    .判断结束
    
.判断结束

赋值 (线段.直线, 被延伸线段.直线)
返回 (线段)

.子程序 延伸到点, 线段, , 将线段延伸到与点最近的位置。如果指定距离大于垂线段的长度，将有两个延伸点供选择，本程序选择延伸量最小的一个点，第二次延伸才会选择延伸量较大的点。如果这两个点都在线段上，将不会有任何动作，直接返回原参数。
.参数 参被延伸的线段, 线段, , 
.参数 参目标点, 坐标, 可空, 如果未提供参数，表示将向坐标原点方向延伸。
.参数 参与目标点距离, 双精度小数型, 可空, 如果未提供参数，默认延伸到点线垂足的位置，这应该是最常用的情况。否则将按照指定距离进行延伸，除非指定距离小于垂线段的长度。
.参数 参方向, 整数型, 可空, 常量值：#线段_两端延伸，#线段_起点延伸，#线段_尾点延伸，默认两头都可以延伸。

.局部变量 被延伸的线段, 线段, , , 
.局部变量 目标点, 坐标, , , 
.局部变量 二维_点与线段, 类关系_点与线段, , , 
.局部变量 二维直线, 类直线一般式, , , 
.局部变量 二维点, 类坐标, , , 
.局部变量 垂距, 双精度小数型, , , 
.局部变量 伸缩量, 双精度小数型, , , 
.局部变量 垂足, 坐标, , , 
.局部变量 点垂足, 坐标, , "2", 
.局部变量 关系_垂足与被延伸线段, 整数型, , , 
.局部变量 关系_点1与被延伸线段, 整数型, , , 
.局部变量 关系_点2与被延伸线段, 整数型, , , 
.局部变量 临时线段, 线段, , , 
.局部变量 线段, 线段, , , 
.局部变量 点坐标, 坐标, , "2", 
.局部变量 点距离, 双精度小数型, , "2", _与被延伸线段

赋值 (被延伸的线段, 参被延伸的线段)
赋值 (目标点, 参目标点)

赋值 (垂距, 二维点.到线段垂距316 (目标点, 被延伸的线段))
赋值 (垂足, 二维点.到线段垂足点316 (目标点, 被延伸的线段))
.判断开始 (小于或等于 (参与目标点距离, 垂距))
    赋值 (关系_垂足与被延伸线段, 二维_点与线段.点与线段关系 (垂足, 被延伸的线段, #零6))
     ' 修改极小值，使计算结果偏向于垂足点不在线段上，从为尽可能延伸线段。
    .判断开始 (等于 (关系_垂足与被延伸线段, #点与线段_点在线段上))
        赋值 (线段, 参被延伸的线段)
    .判断 (等于 (关系_垂足与被延伸线段, #点与线段_点在线段正前面))
        .如果 (或者 (等于 (参方向, #线段_两端延伸), 等于 (参方向, #线段_尾点延伸)))
            赋值 (线段, 被延伸的线段)
            赋值 (线段.尾点, 垂足)
        .否则
            赋值 (线段, 被延伸的线段)
        .如果结束
        
    .判断 (等于 (关系_垂足与被延伸线段, #点与线段_点在线段正后面))
        .如果 (或者 (等于 (参方向, #线段_两端延伸), 等于 (参方向, #线段_起点延伸)))
            赋值 (线段, 被延伸的线段)
            赋值 (线段.起点, 垂足)
        .否则
            赋值 (线段, 被延伸的线段)
        .如果结束
        
    .默认
         ' 不应该出现的程序分支
        信息框 (“程序计算出错，线段向点延伸时出现了不应该出现的情况！”, 0, )
        赋值 (线段, 参被延伸的线段)
    .判断结束
    
.默认
     ' 根据勾股定理算伸缩量
    赋值 (伸缩量, 求平方根 (相加 (求次方 (参与目标点距离, 2), 求次方 (垂距, 2))))
    赋值 (点坐标 [1], 二维点.偏离316 (垂足, 参目标点, 伸缩量, 相除 (#pi, 2)))
    赋值 (点坐标 [2], 二维点.偏离316 (垂足, 参目标点, 伸缩量, 负 (相除 (#pi, 2))))
    赋值 (点垂足 [1], 二维点.到线段垂足点316 (点坐标 [1], 被延伸的线段))
    赋值 (点垂足 [2], 二维点.到线段垂足点316 (点坐标 [2], 被延伸的线段))
     ' 由这种算法得出来的坐标点，有可能在浮点计算模式下，而出现不在直线上的情况，所以这里还是有点少量的差值，可以通过由坐标[]向线段作垂点来修正。
    赋值 (关系_点1与被延伸线段, 二维_点与线段.点与线段关系 (点垂足 [1], 被延伸的线段, #零6))
    赋值 (关系_点2与被延伸线段, 二维_点与线段.点与线段关系 (点垂足 [2], 被延伸的线段, #零6))
     ' 修改极小值，使线段尽可能被延伸。但也存在一个问题，就是可能始终不能延伸到第二个点上去，因为第一个点老是不能延伸到位。
     ' 所以在进行延伸目标点的选择时，光选择较近的点还不行，还要看这个较近的点的距离是否太小了。如果太小，就选择较远的点进行延伸。
    .判断开始 (并且 (等于 (关系_点1与被延伸线段, #点与线段_点在线段上), 等于 (关系_点2与被延伸线段, #点与线段_点在线段上)))
         ' 都在线段上的情况被排除。
        赋值 (线段, 被延伸的线段)
    .判断 (或者 (等于 (关系_点1与被延伸线段, #点与线段_点在线段上), 等于 (关系_点2与被延伸线段, #点与线段_点在线段上)))
         ' 这是一个在线段上一个不在线段上的情况
        .如果 (等于 (关系_点1与被延伸线段, #点与线段_点在线段上))
             ' 点2不在线段上的情况
            .如果 (等于 (关系_点2与被延伸线段, #点与线段_点在线段正前面))
                .如果 (或者 (等于 (参方向, #线段_两端延伸), 等于 (参方向, #线段_尾点延伸)))
                    赋值 (线段, 被延伸的线段)
                    赋值 (线段.尾点, 点垂足 [2])
                .否则
                    赋值 (线段, 被延伸的线段)
                .如果结束
                
            .否则
                .如果 (或者 (等于 (参方向, #线段_两端延伸), 等于 (参方向, #线段_起点延伸)))
                    赋值 (线段, 被延伸的线段)
                    赋值 (线段.起点, 点垂足 [2])
                .否则
                    赋值 (线段, 被延伸的线段)
                .如果结束
                
            .如果结束
            
        .否则
             ' 点1不在线段上的情况
            .如果 (等于 (关系_点1与被延伸线段, #点与线段_点在线段正前面))
                .如果 (或者 (等于 (参方向, #线段_两端延伸), 等于 (参方向, #线段_尾点延伸)))
                    赋值 (线段, 被延伸的线段)
                    赋值 (线段.尾点, 点垂足 [1])
                .否则
                    赋值 (线段, 被延伸的线段)
                .如果结束
                
            .否则
                .如果 (或者 (等于 (参方向, #线段_两端延伸), 等于 (参方向, #线段_起点延伸)))
                    赋值 (线段, 被延伸的线段)
                    赋值 (线段.起点, 点垂足 [1])
                .否则
                    赋值 (线段, 被延伸的线段)
                .如果结束
                
            .如果结束
            
        .如果结束
        
    .判断 (并且 (不等于 (关系_点1与被延伸线段, #点与线段_点在线段上), 不等于 (关系_点2与被延伸线段, #点与线段_点在线段上)))
         ' 两个点都不在线段上的情况
        赋值 (点距离 [1], 二维点.到线段距离316 (点垂足 [1], 被延伸的线段))
        赋值 (点距离 [2], 二维点.到线段距离316 (点垂足 [2], 被延伸的线段))
        .判断开始 (等于 (点距离 [1], 点距离 [2]))
             ' 说明两个点都在线段的两端。
            .判断开始 (等于 (参方向, #线段_两端延伸))
                 ' 两端都可以延伸，以位于线段前进方向上的点为优先。
                .判断开始 (等于 (关系_点1与被延伸线段, #点与线段_点在线段正前面))
                    赋值 (线段, 被延伸的线段)
                    赋值 (线段.尾点, 点垂足 [1])
                .默认
                     ' 关系_点2与被延伸线段 ＝ #点在线段前面
                    赋值 (线段, 被延伸的线段)
                    赋值 (线段.尾点, 点垂足 [2])
                .判断结束
                
            .判断 (等于 (参方向, #线段_起点延伸))
                .判断开始 (等于 (关系_点1与被延伸线段, #点与线段_点在线段正后面))
                    赋值 (线段, 被延伸的线段)
                    赋值 (线段.起点, 点垂足 [1])
                .默认
                     ' 关系_点2与被延伸线段 ＝ #点在线段后面
                    赋值 (线段, 被延伸的线段)
                    赋值 (线段.起点, 点垂足 [2])
                .判断结束
                
            .默认
                 ' 参方向 > 1
                .判断开始 (等于 (关系_点1与被延伸线段, #点与线段_点在线段正前面))
                    赋值 (线段, 被延伸的线段)
                    赋值 (线段.尾点, 点垂足 [1])
                .默认
                     ' 关系_点2与被延伸线段 ＝ #点在线段前面
                    赋值 (线段, 被延伸的线段)
                    赋值 (线段.尾点, 点垂足 [2])
                .判断结束
                
            .判断结束
            
        .判断 (大于 (点距离 [1], 点距离 [2]))
            .如果 (等于 (关系_点2与被延伸线段, #点与线段_点在线段正前面))
                .如果 (或者 (等于 (参方向, #线段_两端延伸), 等于 (参方向, #线段_尾点延伸)))
                    赋值 (线段, 被延伸的线段)
                    赋值 (线段.尾点, 点垂足 [2])
                .否则
                    赋值 (线段, 被延伸的线段)
                .如果结束
                
            .否则
                .如果 (或者 (等于 (参方向, #线段_两端延伸), 等于 (参方向, #线段_起点延伸)))
                    赋值 (线段, 被延伸的线段)
                    赋值 (线段.起点, 点垂足 [2])
                .否则
                    赋值 (线段, 被延伸的线段)
                .如果结束
                
            .如果结束
            
        .默认
            .如果 (等于 (关系_点1与被延伸线段, #点与线段_点在线段正前面))
                .如果 (或者 (等于 (参方向, #线段_两端延伸), 等于 (参方向, #线段_尾点延伸)))
                    赋值 (线段, 被延伸的线段)
                    赋值 (线段.尾点, 点垂足 [1])
                .否则
                    赋值 (线段, 被延伸的线段)
                .如果结束
                
            .否则
                .如果 (或者 (等于 (参方向, #线段_两端延伸), 等于 (参方向, #线段_起点延伸)))
                    赋值 (线段, 被延伸的线段)
                    赋值 (线段.起点, 点垂足 [1])
                .否则
                    赋值 (线段, 被延伸的线段)
                .如果结束
                
            .如果结束
            
        .判断结束
        
    .默认
         ' 不应该出现的程序分支
        信息框 (“程序计算出错，线段向点延伸时出现了不应该出现的情况！”, 0, )
        赋值 (线段, 被延伸的线段)
    .判断结束
    
.判断结束

返回 (线段)

.子程序 延伸到线段316, 线段, , 将线段延伸到与线段相交，如果与线段没有交点或原本就已相交，将返回线段本身，而无任何动作；换句话说，只有当与目标线段有交点且交点在线段的长度范围以外的时候，才延伸线段到线段。但要注意的时，如果两条线段在一条直线上，是可以进行延伸的。这与向直线的延伸有区别。
.参数 参被延伸的线段, 线段, , 
.参数 参目标线段, 线段, , 
.参数 参方向, 整数型, 可空, 常量值：#线段_两端延伸，#线段_起点延伸，#线段_尾点延伸，默认两头都可以延伸。

.局部变量 被延伸的线段, 线段, , , 
.局部变量 目标线段, 线段, , , 
.局部变量 二维_点与线段, 类关系_点与线段, , , 
.局部变量 二维直线, 类直线一般式, , , 
.局部变量 二维点类, 类坐标, , , 
.局部变量 关系_起点与目标线段, 整数型, , , 
.局部变量 关系_尾点与目标线段, 整数型, , , 
.局部变量 关系_交点与被延伸线段, 整数型, , , 
.局部变量 起点距离, 双精度小数型, , , 
.局部变量 尾点距离, 双精度小数型, , , 
.局部变量 交点, 坐标, , , 
.局部变量 线段, 线段, , , 

赋值 (被延伸的线段, 参被延伸的线段)
赋值 (目标线段, 参目标线段)

.判断开始 (二维直线.两直线重合 (被延伸的线段.直线, 目标线段.直线, #零4))
     ' 由于两直线要完全重合是很不容易的，所以浮点计算时应偏向于两直线重合的取定。
     ' 在一条直线的情况，虽然没有正常交点，但可以作延伸操作，关键是看线段本身有没有重合，如果重合，就直接返回原参数而不必延伸。
    赋值 (关系_起点与目标线段, 二维_点与线段.点与线段关系 (被延伸的线段.起点, 目标线段, #零6))
    赋值 (关系_尾点与目标线段, 二维_点与线段.点与线段关系 (被延伸的线段.尾点, 目标线段, #零6))
     ' 修改极小值为更小，点在线段外的可能性提高，使线段延伸的可能性提高。
    
    .判断开始 (或者 (等于 (关系_起点与目标线段, #点与线段_点在线段上), 等于 (关系_尾点与目标线段, #点与线段_点在线段上)))
         ' 哪怕有一个点在目标线段上，都说明有重合。
        赋值 (线段, 被延伸的线段)
    .判断 (并且 (等于 (关系_起点与目标线段, #点与线段_点在线段正前面), 等于 (关系_尾点与目标线段, #点与线段_点在线段正前面)))
         ' 如果不重合，就定有两个条件同时满足，或同时不满足。
        赋值 (起点距离, 二维点类.距离316 (被延伸的线段.起点, 目标线段.尾点))
        赋值 (尾点距离, 二维点类.距离316 (被延伸的线段.尾点, 目标线段.尾点))
        .如果 (大于或等于 (尾点距离, 起点距离))
            .如果 (或者 (等于 (参方向, #线段_两端延伸), 等于 (参方向, #线段_起点延伸)))
                赋值 (线段.起点, 二维点类.到线段垂足点316 (目标线段.尾点, 被延伸的线段))
                 ' 由于浮点计算差值，不能直接引用参照对象的数据，经免修改了直线的A，B参数，改变了倾斜程度。
                赋值 (线段.尾点, 被延伸的线段.尾点)
                赋值 (线段.直线, 被延伸的线段.直线)
            .否则
                赋值 (线段, 被延伸的线段)
            .如果结束
            
        .否则
            .如果 (或者 (等于 (参方向, #线段_两端延伸), 等于 (参方向, #线段_尾点延伸)))
                赋值 (线段.起点, 被延伸的线段.起点)
                赋值 (线段.尾点, 二维点类.到线段垂足点316 (目标线段.尾点, 被延伸的线段))
                赋值 (线段.直线, 被延伸的线段.直线)
            .否则
                赋值 (线段, 被延伸的线段)
            .如果结束
            
        .如果结束
        
    .判断 (并且 (等于 (关系_起点与目标线段, #点与线段_点在线段正后面), 等于 (关系_尾点与目标线段, #点与线段_点在线段正后面)))
        赋值 (起点距离, 二维点类.距离316 (被延伸的线段.起点, 目标线段.起点))
        赋值 (尾点距离, 二维点类.距离316 (被延伸的线段.尾点, 目标线段.起点))
        .如果 (小于或等于 (尾点距离, 起点距离))
            .如果 (或者 (等于 (参方向, #线段_两端延伸), 等于 (参方向, #线段_起点延伸)))
                赋值 (线段.起点, 被延伸的线段.起点)
                赋值 (线段.尾点, 二维点类.到线段垂足点316 (目标线段.起点, 被延伸的线段))
                赋值 (线段.直线, 被延伸的线段.直线)
            .否则
                赋值 (线段, 被延伸的线段)
            .如果结束
            
        .否则
            .如果 (或者 (等于 (参方向, #线段_两端延伸), 等于 (参方向, #线段_起点延伸)))
                赋值 (线段.起点, 二维点类.到线段垂足点316 (目标线段.起点, 被延伸的线段))
                赋值 (线段.尾点, 被延伸的线段.尾点)
                赋值 (线段.直线, 被延伸的线段.直线)
            .否则
                赋值 (线段, 被延伸的线段)
            .如果结束
            
        .如果结束
        
    .默认
         ' 不应该出现的程序分支
        信息框 (“计算线段延伸到目标线段时出现错误的程序分支，发生不可能的情况。”, 0, )
        赋值 (线段, 被延伸的线段)
    .判断结束
    
.判断 (二维直线.两直线平行 (被延伸的线段.直线, 目标线段.直线, #零6, 假))
     ' 为了尽量提高延伸线段的可能性，将两直线平行关系的判断降低，相交的可能性提高。
     ' 平行的情况，不可能有交点，所以直接返回原参数。
    赋值 (线段, 被延伸的线段)
    
    
.默认
     ' 两直线一定相交的情况
    赋值 (交点, 二维直线.两直线交点 (被延伸的线段.直线, 目标线段.直线))
     ' 所在直线有相交的情况，虽然有交点，但也要看交点有没有在目标线段上，如果没有就直接返回原参数，
     ' 如果交点在目标线段上，又要区分交点是否在被延伸线段上，如果是的话又要直接返回原参数。
     ' 如果交点在被延伸的线段的两头，才分析情况进行延伸或不延伸。
    .判断开始 (等于 (二维_点与线段.点在线段上 (交点, 参目标线段, #零4), 假))
         ' 为了尽可能偏向于交点落在了目标线段上，所以将极小值进行修正为更大的值，使交点在线段外判断的可能性降低。
         ' 浮点模式计算说明，如果点即不在线段上，又不能很靠近线段，就只能定性为 点不在线段上 了。
        赋值 (线段, 被延伸的线段)
        
    .默认
         ' 交点确实落在了目标线段上。
        赋值 (关系_交点与被延伸线段, 二维_点与线段.点与线段关系 (交点, 被延伸的线段, #零6))
         ' 为了尽可能偏向于延伸操作，所以将极小值进行修正为更小的值，使交点在线段上判断的可能性降低。
        .判断开始 (等于 (关系_交点与被延伸线段, #点与线段_点在线段上))
             ' 交点在被延伸线段上，就不需要延伸了。
            赋值 (线段, 被延伸的线段)
        .判断 (等于 (关系_交点与被延伸线段, #点与线段_点在线段正前面))
            .判断开始 (或者 (等于 (参方向, #线段_两端延伸), 等于 (参方向, #线段_尾点延伸)))
                赋值 (线段.起点, 被延伸的线段.起点)
                赋值 (线段.尾点, 交点) ' 交点一定在线段所在的直线上吧，所以不需要得进行垂点计算了。
                赋值 (线段.直线, 被延伸的线段.直线)
            .默认
                赋值 (线段, 被延伸的线段)
            .判断结束
            
        .判断 (等于 (关系_交点与被延伸线段, #点与线段_点在线段正后面))
            .判断开始 (或者 (等于 (参方向, #线段_两端延伸), 等于 (参方向, #线段_起点延伸)))
                赋值 (线段.起点, 交点)
                赋值 (线段.尾点, 被延伸的线段.尾点)
                赋值 (线段.直线, 被延伸的线段.直线)
            .默认
                赋值 (线段, 被延伸的线段)
            .判断结束
            
        .默认
            信息框 (“计算线段延伸到目标线段时出现错误的程序分支，发生不可能的情况。”, 0, )
            赋值 (线段, 被延伸的线段)
        .判断结束
        
    .判断结束
    
.判断结束

返回 (线段)

.子程序 延伸到直线316, 线段, , 将线段延伸到与线段相交，如果与线段没有交点或原本就已相交，将返回线段本身，而无任何动作；换句话说，只有当与目标线段有交点且交点在线段的长度范围以外的时候，才延伸线段到线段。但要注意的时，如果两条线段在一条直线上，是可以进行延伸的。这与向直线的延伸有区别。
.参数 参被延伸的线段, 线段, , 
.参数 参目标直线, 直线一般式, , 
.参数 参方向, 整数型, 可空, 常量值：#线段_两端延伸，#线段_起点延伸，#线段_尾点延伸，默认两头都可以延伸。

.局部变量 被延伸的线段, 线段, , , 
.局部变量 目标直线, 直线一般式, , , 
.局部变量 二维_点与线段, 类关系_点与线段, , , 
.局部变量 二维直线, 类直线一般式, , , 
.局部变量 二维点类, 类坐标, , , 
.局部变量 关系_交点与被延伸线段, 整数型, , , 
.局部变量 起点距离, 双精度小数型, , , 
.局部变量 尾点距离, 双精度小数型, , , 
.局部变量 交点, 坐标, , , 
.局部变量 线段, 线段, , , 

赋值 (被延伸的线段, 参被延伸的线段)
赋值 (目标直线, 参目标直线)

.判断开始 (二维直线.两直线平行 (被延伸的线段.直线, 目标直线, #零6, 真))
     ' 由于两直线要重合使得程序计算时偏向于不延伸，所以浮点计算时应偏向于两直线不重合的取定。如果重合，就直接返回原参数而不必延伸。
     ' 同时也为了尽量提高延伸线段的可能性，将两直线平行关系的判断降低，相交的可能性提高。平行的情况，不可能有交点，所以直接返回原参数。
    赋值 (线段, 参被延伸的线段)
    
.默认
     ' 两直线一定相交的情况
    赋值 (交点, 二维直线.两直线交点 (被延伸的线段.直线, 目标直线))
    .判断开始 (二维_点与线段.点在线段上 (交点, 被延伸的线段, #零6))
         ' 所在直线有相交的情况，虽然有交点，但也要看交点是否在被延伸线段上，如果是的话又要直接返回原参数。
         ' 为了尽可能偏向于延伸操作，所以将极小值进行修正为更小的值，使交点在线段上判断的可能性降低。
         ' 如果交点在被延伸的线段的两头，才分析情况进行延伸或不延伸。
         ' 交点在被延伸线段上，就不需要延伸了。
        赋值 (线段, 被延伸的线段)
    .判断 (二维_点与线段.点在线段前面 (交点, 被延伸的线段, #零6))
        .判断开始 (或者 (等于 (参方向, #线段_两端延伸), 等于 (参方向, #线段_尾点延伸)))
            赋值 (线段.起点, 被延伸的线段.起点)
            赋值 (线段.尾点, 交点) ' 交点一定在线段所在的直线上吧，所以不需要得进行垂点计算了。
            赋值 (线段.直线, 被延伸的线段.直线)
        .默认
            赋值 (线段, 被延伸的线段)
        .判断结束
        
        
    .默认
         ' 点在线段后面
        .判断开始 (或者 (等于 (参方向, #线段_两端延伸), 等于 (参方向, #线段_起点延伸)))
            赋值 (线段.起点, 交点)
            赋值 (线段.尾点, 被延伸的线段.尾点)
            赋值 (线段.直线, 被延伸的线段.直线)
        .默认
            赋值 (线段, 被延伸的线段)
        .判断结束
        
    .判断结束
    
.判断结束

返回 (线段)

.子程序 对称于X轴316, 线段, , 如果给定的直线段起点和尾点重合并且没有一般式定义，返回的线段也不会有一般式定义。
.参数 参被对称线段, 线段, , 

.局部变量 被对称线段, 线段, , , 
.局部变量 线段, 线段, , , 
.局部变量 直线类, 类直线一般式, , , 

赋值 (被对称线段, 参被对称线段)
赋值 (线段.起点.x, 被对称线段.起点.x)
赋值 (线段.起点.y, 负 (被对称线段.起点.y))
赋值 (线段.尾点.x, 被对称线段.尾点.x)
赋值 (线段.尾点.y, 负 (被对称线段.尾点.y))
.如果 (并且 (等于 (线段.起点.x, 线段.尾点.x), 等于 (线段.起点.y, 线段.尾点.y)))
     ' 起点和尾点重合，将无法直接计算直线信息
    .如果 (并且 (等于 (被对称线段.直线.A, 0), 等于 (被对称线段.直线.B, 0)))
         ' 如果给定的直线段起点和尾点重合并且没有一般式定义，返回的线段也不会有一般式定义。
    .否则
        赋值 (线段.直线, 直线类.对称于X轴 (被对称线段.直线))
    .如果结束
    
.否则
    赋值 (线段.直线, 求直线316 (线段))
.如果结束

返回 (线段)

.子程序 对称于Y轴316, 线段, , 如果给定的直线段起点和尾点重合并且没有一般式定义，返回的线段也不会有一般式定义。
.参数 参被对称线段, 线段, , 
.参数 参线段, 线段, , 

.局部变量 被对称线段, 线段, , , 
.局部变量 线段, 线段, , , 
.局部变量 直线类, 类直线一般式, , , 

赋值 (被对称线段, 参被对称线段)
赋值 (线段.起点.x, 负 (被对称线段.起点.x))
赋值 (线段.起点.y, 被对称线段.起点.y)
赋值 (线段.尾点.x, 负 (被对称线段.尾点.x))
赋值 (线段.尾点.y, 被对称线段.尾点.y)
.如果 (并且 (等于 (线段.起点.x, 线段.尾点.x), 等于 (线段.起点.y, 线段.尾点.y)))
     ' 起点和尾点重合，将无法直接计算直线信息
    .如果 (并且 (等于 (被对称线段.直线.A, 0), 等于 (被对称线段.直线.B, 0)))
         ' 如果给定的直线段起点和尾点重合并且没有一般式定义，返回的线段也不会有一般式定义。
    .否则
        赋值 (线段.直线, 直线类.对称于Y轴 (被对称线段.直线))
    .如果结束
    
.否则
    赋值 (线段.直线, 求直线316 (线段))
.如果结束

返回 (线段)

.子程序 对称于点316, 线段, , 线段对称于点，是将线段端点分别关于参照点进行对称后形成新的线段。线段对称于点后，其朝向有变化，新生成的直线与原直线平行。
.参数 参被对称线段, 线段, , 
.参数 参对称参照点, 坐标, 可空, 

.局部变量 被对称线段, 线段, , , 
.局部变量 对称参照点, 坐标, , , 
.局部变量 直线类, 类直线一般式, , , 
.局部变量 二维点, 类坐标, , , 
.局部变量 线段, 线段, , , 

赋值 (被对称线段, 参被对称线段)
赋值 (对称参照点, 参对称参照点)
赋值 (线段.起点, 二维点.对称316 (被对称线段.起点, 对称参照点))
赋值 (线段.尾点, 二维点.对称316 (被对称线段.尾点, 对称参照点))
.如果 (并且 (等于 (线段.起点.x, 线段.尾点.x), 等于 (线段.起点.y, 线段.尾点.y)))
     ' 起点和尾点重合，将无法直接计算直线信息
    .如果 (并且 (等于 (被对称线段.直线.A, 0), 等于 (被对称线段.直线.B, 0)))
         ' 如果给定的直线段起点和尾点重合并且没有一般式定义，返回的线段也不会有一般式定义。
    .否则
        赋值 (线段.直线, 直线类.平移经过点 (被对称线段.直线, 线段.起点))
    .如果结束
    
.否则
    .如果 (并且 (等于 (被对称线段.直线.A, 0), 等于 (被对称线段.直线.B, 0)))
        赋值 (线段.直线, 求直线316 (线段))
    .否则
        赋值 (线段.直线, 直线类.平移经过点 (被对称线段.直线, 线段.起点))
    .如果结束
    
.如果结束

返回 (线段)

.子程序 对称于两点316, 线段, , 线段对称于两点，是将线段参照这两点所连接成的直线对称轴对称后形成新的线段，如果这两点重合，就不必连线了，而是直接将线段参照点进行对称操作。
.参数 参被对称的线段, 线段, , 
.参数 参对称起点, 坐标, , 
.参数 参对称尾点, 坐标, , 

.局部变量 被对称的线段, 线段, , , 
.局部变量 对称起点, 坐标, , , 
.局部变量 对称尾点, 坐标, , , 

赋值 (被对称的线段, 参被对称的线段)
赋值 (对称起点, 参对称起点)
赋值 (对称尾点, 参对称尾点)
.如果 (并且 (等于 (对称起点.x, 对称尾点.x), 等于 (对称起点.y, 对称尾点.y)))
    返回 (对称于点316 (被对称的线段, 对称起点))
.否则
    返回 (对称于线段316 (被对称的线段, 创建_两点316 (对称起点, 对称尾点)))
.如果结束


.子程序 对称于线段316, 线段, , 对称于线段实质上是对称于直线方法的调用。对称操作方法只有对称点和对称轴的理念，所以不会有部分丢失的现象，如果需要部分丢失的算法，应使用镜像方法。
.参数 参被对称线段, 线段, , 
.参数 参对称轴线段, 线段, , 

.局部变量 被对称线段, 线段, , , 
.局部变量 对称轴线段, 线段, , , 
.局部变量 直线类, 类直线一般式, , , 
.局部变量 二维点, 类坐标, , , 
.局部变量 线段, 线段, , , 

赋值 (被对称线段, 参被对称线段)
赋值 (对称轴线段, 参对称轴线段)
赋值 (线段.起点, 二维点.对称于直线316 (被对称线段.起点, 求直线316 (对称轴线段)))
赋值 (线段.尾点, 二维点.对称于直线316 (被对称线段.尾点, 求直线316 (对称轴线段)))
.如果 (并且 (等于 (线段.起点.x, 线段.尾点.x), 等于 (线段.起点.y, 线段.尾点.y)))
     ' 起点和尾点重合，将无法直接计算直线信息
    .如果 (并且 (等于 (被对称线段.直线.A, 0), 等于 (被对称线段.直线.B, 0)))
         ' 如果给定的直线段起点和尾点重合并且没有一般式定义，返回的线段也不会有一般式定义。
    .否则
        赋值 (线段.直线, 直线类.对称于直线 (被对称线段.直线, 对称轴线段.直线)) ' 就应当将直线信息求出
    .如果结束
    
.否则
    .如果 (并且 (等于 (被对称线段.直线.A, 0), 等于 (被对称线段.直线.B, 0)))
        赋值 (线段.直线, 求直线316 (线段))
    .否则
        赋值 (线段.直线, 直线类.对称于直线 (被对称线段.直线, 对称轴线段.直线))
    .如果结束
    
.如果结束

返回 (线段)

.子程序 对称于直线316, 线段, , 线段关于直线的对称，就是线段两个端点分别关于直线的对称而连接成的线段。
.参数 参被对称线段, 线段, , 
.参数 参对称轴直线, 直线一般式, , 

.局部变量 被对称线段, 线段, , , 
.局部变量 对称轴直线, 直线一般式, , , 
.局部变量 直线类, 类直线一般式, , , 
.局部变量 二维线段, 类线段, , , 
.局部变量 二维点, 类坐标, , , 
.局部变量 线段, 线段, , , 

赋值 (被对称线段, 参被对称线段)
赋值 (对称轴直线, 参对称轴直线)

.判断开始 (并且 (等于 (对称轴直线.A, 0), 等于 (对称轴直线.B, 0)))
     ' 提供的对称直线不合法时，返回原线段。
    赋值 (线段, 参被对称线段)
.默认
    赋值 (线段.起点, 二维点.对称于直线316 (被对称线段.起点, 对称轴直线))
    赋值 (线段.尾点, 二维点.对称于直线316 (被对称线段.尾点, 对称轴直线))
    .如果 (并且 (等于 (线段.起点.x, 线段.尾点.x), 等于 (线段.起点.y, 线段.尾点.y)))
         ' 起点和尾点重合，将无法直接计算直线信息
        .如果 (并且 (等于 (被对称线段.直线.A, 0), 等于 (被对称线段.直线.B, 0)))
             ' 如果给定的直线段起点和尾点重合并且没有一般式定义，返回的线段也不会有一般式定义。
        .否则
            赋值 (线段.直线, 直线类.对称于直线 (被对称线段.直线, 对称轴直线)) ' 就应当将直线信息求出
        .如果结束
        
    .否则
        .如果 (并且 (等于 (被对称线段.直线.A, 0), 等于 (被对称线段.直线.B, 0)))
            赋值 (线段.直线, 求直线316 (线段))
        .否则
            赋值 (线段.直线, 直线类.对称于直线 (被对称线段.直线, 对称轴直线))
        .如果结束
        
    .如果结束
    
.判断结束

返回 (线段)

.子程序 镜像于线段, 线段, , ok.。线段关于线段的镜像，与线段关于直线的镜像的区别在于，作为镜像参照的线段是有长度的，所以镜像后可能会有部分丢失。平面镜像方法必须提供一条镜像线，立体镜像方法必须提供一个镜像面。镜像线和镜像面是用来呈象用的，镜像与原图元对应位置连线必须与镜像线和面垂直，所以如果镜像线和面是有尺寸限制的情况，会发生不能完全镜像的情况。
.参数 参被镜像的线段, 线段, , 
.参数 参镜像轴线段, 线段, , 

.局部变量 二维_点与线段, 类关系_点与线段, , , 
.局部变量 二维点, 类坐标, , , 
.局部变量 新线段, 线段, , , 
.局部变量 垂足起点, 坐标, , , 
.局部变量 垂足尾点, 坐标, , , 
.局部变量 距离起点, 双精度小数型, , , 
.局部变量 距离尾点, 双精度小数型, , , 
.局部变量 临时线段, 线段, , , 
.局部变量 关系_垂足起点, 整数型, , , 
.局部变量 关系_垂足尾点, 整数型, , , 

 ' 先求得关于直线的镜像
赋值 (新线段, 对称于直线316 (参被镜像的线段, 参镜像轴线段.直线))

 ' 因为要被截断的是新生成的线段，为了避免误差带的一影响，所以计算垂足点时用新生成的线段端点
赋值 (垂足起点, 二维点.到线段垂足点316 (新线段.起点, 参镜像轴线段))
赋值 (垂足尾点, 二维点.到线段垂足点316 (新线段.尾点, 参镜像轴线段))

 ' 增大极小值，作偏向于在线段上的判断，尽量不截断镜像。
赋值 (关系_垂足起点, 二维_点与线段.点与线段关系 (垂足起点, 参镜像轴线段, #零4))
赋值 (关系_垂足尾点, 二维_点与线段.点与线段关系 (垂足尾点, 参镜像轴线段, #零4))

.判断开始 (等于 (关系_垂足起点, #点与线段_点在线段正前面))
    .判断开始 (等于 (关系_垂足尾点, #点与线段_点在线段正前面)) ' ok
         ' 都在前面，因为扩大了极小值，必然都在前面。返回镜像前原线段本身。
        赋值 (新线段, 参被镜像的线段)
    .判断 (等于 (关系_垂足尾点, #点与线段_点在线段上))
         ' 起点截断。因为前面扩大了在线段上的可能，在线段上的不一定真在线段上，所以需进行重新检查。
        赋值 (关系_垂足尾点, 二维_点与线段.点与线段关系 (垂足尾点, 参镜像轴线段, #零6))
        .判断开始 (等于 (关系_垂足尾点, #点与线段_点在线段正前面)) ' ok
            赋值 (新线段, 参被镜像的线段)
        .判断 (等于 (关系_垂足尾点, #点与线段_点在线段上)) ' ok
             ' 确实尾点在线段上，开始截断程序。
            赋值 (距离起点, 二维点.距离316 (垂足起点, 参被镜像的线段.尾点))
            赋值 (距离尾点, 二维点.距离316 (垂足尾点, 参被镜像的线段.尾点))
            赋值 (新线段.起点, 求比例分点316 (新线段, 距离起点, 距离尾点))
        .判断 (等于 (关系_垂足尾点, #点与线段_点在线段正后面)) ' ok
            赋值 (距离起点, 二维点.距离316 (垂足起点, 参被镜像的线段.尾点))
            赋值 (距离尾点, 二维点.距离316 (垂足尾点, 参被镜像的线段.尾点))
            赋值 (临时线段.起点, 求比例分点316 (新线段, 距离起点, 距离尾点))
            赋值 (距离起点, 二维点.距离316 (垂足起点, 参被镜像的线段.起点))
            赋值 (距离尾点, 二维点.距离316 (垂足尾点, 参被镜像的线段.起点))
            赋值 (临时线段.尾点, 求比例分点316 (新线段, 距离起点, 距离尾点))
            赋值 (临时线段.直线, 新线段.直线)
            赋值 (新线段, 临时线段)
        .默认
             ' 多余分支。
        .判断结束
        
    .判断 (等于 (关系_垂足尾点, #点与线段_点在线段正后面)) ' ok
         ' 同时截断。因为前面扩大了在线段上的可能，起点和尾点都还不在线段上，所以一定要做截断处理。
        赋值 (距离起点, 二维点.距离316 (垂足起点, 参被镜像的线段.尾点))
        赋值 (距离尾点, 二维点.距离316 (垂足尾点, 参被镜像的线段.尾点))
        赋值 (临时线段.起点, 求比例分点316 (新线段, 距离起点, 距离尾点))
        赋值 (距离起点, 二维点.距离316 (垂足起点, 参被镜像的线段.起点))
        赋值 (距离尾点, 二维点.距离316 (垂足尾点, 参被镜像的线段.起点))
        赋值 (临时线段.尾点, 求比例分点316 (新线段, 距离起点, 距离尾点))
        赋值 (临时线段.直线, 新线段.直线)
        赋值 (新线段, 临时线段)
    .默认
         ' 多余分支。
    .判断结束
    
.判断 (等于 (关系_垂足起点, #点与线段_点在线段上))
    .判断开始 (等于 (关系_垂足尾点, #点与线段_点在线段正前面))
         ' 尾点截断。
        赋值 (关系_垂足起点, 二维_点与线段.点与线段关系 (垂足起点, 参镜像轴线段, #零6))
        .判断开始 (等于 (关系_垂足起点, #点与线段_点在线段正前面)) ' ok
            赋值 (新线段, 参被镜像的线段)
        .判断 (等于 (关系_垂足起点, #点与线段_点在线段上)) ' ok
            赋值 (距离起点, 二维点.距离316 (垂足起点, 参被镜像的线段.尾点))
            赋值 (距离尾点, 二维点.距离316 (垂足尾点, 参被镜像的线段.尾点))
            赋值 (新线段.尾点, 求比例分点316 (新线段, 距离起点, 距离尾点))
        .判断 (等于 (关系_垂足起点, #点与线段_点在线段正后面)) ' ok
            赋值 (距离起点, 二维点.距离316 (垂足起点, 参被镜像的线段.起点))
            赋值 (距离尾点, 二维点.距离316 (垂足尾点, 参被镜像的线段.起点))
            赋值 (临时线段.起点, 求比例分点316 (新线段, 距离起点, 距离尾点))
            赋值 (距离起点, 二维点.距离316 (垂足起点, 参被镜像的线段.尾点))
            赋值 (距离尾点, 二维点.距离316 (垂足尾点, 参被镜像的线段.尾点))
            赋值 (临时线段.尾点, 求比例分点316 (新线段, 距离起点, 距离尾点))
            赋值 (临时线段.直线, 新线段.直线)
            赋值 (新线段, 临时线段)
        .默认
             ' 多余分支。
        .判断结束
        
    .判断 (等于 (关系_垂足尾点, #点与线段_点在线段上)) ' ok
         ' 均不载断。
    .判断 (等于 (关系_垂足尾点, #点与线段_点在线段正后面))
         ' 尾点截断。
        赋值 (关系_垂足起点, 二维_点与线段.点与线段关系 (垂足起点, 参镜像轴线段, #零6))
        .判断开始 (等于 (关系_垂足起点, #点与线段_点在线段正前面))
            赋值 (距离起点, 二维点.距离316 (垂足起点, 参被镜像的线段.尾点))
            赋值 (距离尾点, 二维点.距离316 (垂足尾点, 参被镜像的线段.尾点))
            赋值 (临时线段.起点, 求比例分点316 (新线段, 距离起点, 距离尾点))
            赋值 (距离起点, 二维点.距离316 (垂足起点, 参被镜像的线段.起点))
            赋值 (距离尾点, 二维点.距离316 (垂足尾点, 参被镜像的线段.起点))
            赋值 (临时线段.尾点, 求比例分点316 (新线段, 距离起点, 距离尾点))
            赋值 (临时线段.直线, 新线段.直线)
            赋值 (新线段, 临时线段)
        .判断 (等于 (关系_垂足起点, #点与线段_点在线段上))
            赋值 (距离起点, 二维点.距离316 (垂足起点, 参被镜像的线段.起点))
            赋值 (距离尾点, 二维点.距离316 (垂足尾点, 参被镜像的线段.起点))
            赋值 (新线段.尾点, 求比例分点316 (新线段, 距离起点, 距离尾点))
        .判断 (等于 (关系_垂足起点, #点与线段_点在线段正后面)) ' ok
            赋值 (新线段, 参被镜像的线段)
        .默认
             ' 多余分支。
        .判断结束
        
    .默认
         ' 多余分支。
    .判断结束
    
.判断 (等于 (关系_垂足起点, #点与线段_点在线段正后面))
    .判断开始 (等于 (关系_垂足尾点, #点与线段_点在线段正前面)) ' ok
         ' 同时截断。因为前面扩大了在线段上的可能，起点和尾点都还不在线段上，所以一定要做截断处理。
        赋值 (距离起点, 二维点.距离316 (垂足起点, 参被镜像的线段.起点))
        赋值 (距离尾点, 二维点.距离316 (垂足尾点, 参被镜像的线段.起点))
        赋值 (临时线段.起点, 求比例分点316 (新线段, 距离起点, 距离尾点))
        赋值 (距离起点, 二维点.距离316 (垂足起点, 参被镜像的线段.尾点))
        赋值 (距离尾点, 二维点.距离316 (垂足尾点, 参被镜像的线段.尾点))
        赋值 (临时线段.尾点, 求比例分点316 (新线段, 距离起点, 距离尾点))
        赋值 (临时线段.直线, 新线段.直线)
        赋值 (新线段, 临时线段)
    .判断 (等于 (关系_垂足尾点, #点与线段_点在线段上)) ' ok
         ' 起点截断。
        赋值 (关系_垂足尾点, 二维_点与线段.点与线段关系 (垂足尾点, 参镜像轴线段, #零6))
        .判断开始 (等于 (关系_垂足尾点, #点与线段_点在线段正前面)) ' ok
            赋值 (距离起点, 二维点.距离316 (垂足起点, 参被镜像的线段.起点))
            赋值 (距离尾点, 二维点.距离316 (垂足尾点, 参被镜像的线段.起点))
            赋值 (临时线段.起点, 求比例分点316 (新线段, 距离起点, 距离尾点))
            赋值 (距离起点, 二维点.距离316 (垂足起点, 参被镜像的线段.尾点))
            赋值 (距离尾点, 二维点.距离316 (垂足尾点, 参被镜像的线段.尾点))
            赋值 (临时线段.尾点, 求比例分点316 (新线段, 距离起点, 距离尾点))
            赋值 (临时线段.直线, 新线段.直线)
            赋值 (新线段, 临时线段)
        .判断 (不等于 (关系_垂足尾点, #点与线段_点在线段上)) ' ok
            赋值 (距离起点, 二维点.距离316 (垂足起点, 参被镜像的线段.起点))
            赋值 (距离尾点, 二维点.距离316 (垂足尾点, 参被镜像的线段.起点))
            赋值 (新线段.起点, 求比例分点316 (新线段, 距离起点, 距离尾点))
        .判断 (等于 (关系_垂足尾点, #点与线段_点在线段正后面)) ' ok
            赋值 (新线段, 参被镜像的线段)
        .默认
             ' 多余分支。
        .判断结束
        
    .判断 (等于 (关系_垂足尾点, #点与线段_点在线段正后面)) ' ok
         ' 返回镜像前原线段本身。
        赋值 (新线段, 参被镜像的线段)
    .默认
         ' 多余分支。
    .判断结束
    
.默认
     ' 多余分支。
.判断结束
返回 (新线段)

.子程序 转折偏头点, 坐标, , 已知一直线段及前进方向(包含在起点及尾点的定义中)，在前进方向上再加上一直线段与现有直线共端点，已知转折角度及延伸长度，求该直线段尾点坐标。
.参数 参直线, 线段, , 线段起点
.参数 参转角, 双精度小数型, , 弧度,请提供正负符号,左转为正,右转为负
.参数 参长度, 双精度小数型, , 折线长度,从转折点开始计算至新增的折线末端，长度应提供正值。

.局部变量 二维点, 类坐标, , , 

返回 (二维点.旋转316 (伸缩点316 (参直线, 参长度), 参直线.尾点, 参转角))

.子程序 转折偏头, 线段, , 从线段尾端点为起点，向前创建一条新的线段，该线段前进方向与原有线段前进方向成一定的偏角，偏角的正负号以原有线段前进方向为准，向左转为正，右转为负。
.参数 参原直线段, 线段, , 
.参数 参转角, 双精度小数型, 可空, 弧度,请提供正负符号,左转为正,右转为负
.参数 参长度, 双精度小数型, , 折线长度,从转折点开始计算至新增的折线末端，应提供正数。如果提供了负数，也将先按正值计算，然后相对于起点作对称操作。

.局部变量 二维点, 类坐标, , , 
.局部变量 线段, 线段, , , 

.如果 (等于 (参转角, 0))
     ' 如果没有提供转角或转角为0，将直接按照给定的线段长度进行延伸操作。
    赋值 (线段.起点, 参原直线段.尾点)
    赋值 (线段.尾点, 二维点.远离316 (参原直线段.尾点, 参原直线段.起点, 取绝对值 (参长度)))
    求直线316 (线段)
.否则
    .判断开始 (等于 (参长度, 0))
         ' 长度为能为零，如果为零，将直接返回原来的直线段。此处算法还有待研究。
        赋值 (线段, 参原直线段)
    .默认
        赋值 (线段.起点, 参原直线段.尾点)
        赋值 (线段.尾点, 转折偏头点 (参原直线段, 参转角, 取绝对值 (参长度)))
         ' 如果长度小于零，将时行对称操作。
        .如果真 (小于 (参长度, 0))
            赋值 (线段, 旋转316 (线段, 线段.起点, #pi))
        .如果真结束
        求直线316 (线段)
    .判断结束
    
.如果结束
返回 (线段)

.子程序 转折摆尾点, 坐标, , 已知一直线段及前进方向(包含在起点及尾点的定义中)，在前进反方向上再加上一直线段与现有直线共端点，已知转折角度及延伸长度，求该直线段尾点坐标。
.参数 参直线, 线段, , 
.参数 参转角, 双精度小数型, , 弧度,请提供正负符号,从原有线段左侧转为负,右侧为正，计算时绝对值是以偏离后退方向的夹角为准。
.参数 参长度, 双精度小数型, , 折线长度,从转折点开始计算至新增的折线末端，长度应提供正值。

.局部变量 二维点, 类坐标, , , 
.局部变量 线段, 线段, , , 

赋值 (线段, 反向316 (参直线))
返回 (二维点.旋转316 (伸缩点316 (线段, 参长度), 线段.尾点, 参转角))

.子程序 转折摆尾, 线段, , 从线段尾端点为起点，向前创建一条新的线段，该线段前进方向与原有线段前进方向成一定的偏角，偏角的正负号以原有线段前进方向为准，向左转为正，右转为负。
.参数 参原直线段, 线段, , 
.参数 参转角, 双精度小数型, 可空, 弧度,请提供正负符号,从原有线段左侧转为负,右侧为正，计算方法是以后退方向的夹角为准。
.参数 参长度, 双精度小数型, , 折线长度,从转折点开始计算至新增的折线末端，应提供正数。如果提供了负数，也将先按正值计算，然后相对于起点作对称操作。

.局部变量 二维点, 类坐标, , , 
.局部变量 线段, 线段, , , 

.如果 (等于 (参转角, 0))
     ' 如果没有提供转角或转角为0，将直接按照给定的线段长度进行延伸操作。
    赋值 (线段.起点, 二维点.远离316 (参原直线段.起点, 参原直线段.尾点, 取绝对值 (参长度)))
    赋值 (线段.尾点, 参原直线段.起点)
    求直线316 (线段)
.否则
    .判断开始 (等于 (参长度, 0))
         ' 长度为能为零，如果为零，将直接返回原来的直线段。此处算法还有待研究。
        赋值 (线段, 参原直线段)
    .默认
        赋值 (线段.起点, 转折摆尾点 (参原直线段, 参转角, 取绝对值 (参长度)))
        赋值 (线段.尾点, 参原直线段.起点)
         ' 如果长度小于零，将时行对称操作。
        .如果真 (小于 (参长度, 0))
            赋值 (线段, 旋转316 (线段, 线段.尾点, #pi))
        .如果真结束
        
        求直线316 (线段)
    .判断结束
    
.如果结束
返回 (线段)

.子程序 求三分点316, 坐标, , 求位于两点之间的三分点位置，这样的点共两个，以起点方向向尾点方向开始编号。根据所指定的序号选择返回点的位置.默认第1点。
.参数 参直线段, 线段, , 
.参数 参序号, 整数型, 可空, 常量，1或2，小于等于是1时就会返回第一点，大于1时就会返回第二点。

.局部变量 二维点类, 类坐标, , , 

返回 (二维点类.求三分点316 (参直线段.起点, 参直线段.尾点, 参序号))

.子程序 求三分点集316, 坐标集, , 
.参数 参直线段, 线段, , 
.参数 参包含起点, 逻辑型, 可空, 
.参数 参包含尾点, 逻辑型, 可空, 

.局部变量 二维点类, 类坐标, , , 

返回 (二维点类.求三分点集316 (参直线段.起点, 参直线段.尾点, 参包含起点, 参包含尾点))

.子程序 求四分点316, 坐标, , 求位于两点之间的四分点位置，这样的点共三个，，以起点方向向尾点方向开始编号。根据所指定的序号选择返回点的位置.默认第1点。
.参数 参直线段, 线段, , 
.参数 参序号, 整数型, 可空, 常量，1,2,3，小于等于是1时就会返回第一点，等于2时返回第2点，大于2时就会返回第3点。

.局部变量 二维点类, 类坐标, , , 

返回 (二维点类.求四分点316 (参直线段.起点, 参直线段.尾点, 参序号))

.子程序 求四分点集316, 坐标集, , 求位于两点之间的四分点位置，这样的点共三个，以起点方向向尾点方向开始编号。
.参数 参直线段, 线段, , 
.参数 参包含起点, 逻辑型, 可空, 
.参数 参包含尾点, 逻辑型, 可空, 

.局部变量 二维点类, 类坐标, , , 

返回 (二维点类.求四分点集316 (参直线段.起点, 参直线段.尾点, 参包含起点, 参包含尾点))

.子程序 求五分点316, 坐标, , 求位于两点之间的五分点位置，这样的点共四个，，以起点方向向尾点方向开始编号。根据所指定的序号选择返回点的位置.默认第1点。
.参数 参直线段, 线段, , 
.参数 参序号, 整数型, 可空, 常量，1,2,3,4，小于等于是1时就会返回第一点，等于2时返回第2点，等于3时返回第3点，大于3时就会返回第4点。

.局部变量 二维点类, 类坐标, , , 

返回 (二维点类.求五分点316 (参直线段.起点, 参直线段.尾点, 参序号))

.子程序 求五分点集316, 坐标集, , 求位于两点之间的五分点位置，这样的点共四个.，以起点方向向尾点方向开始编号。
.参数 参直线段, 线段, , 
.参数 参包含起点, 逻辑型, 可空, 
.参数 参包含尾点, 逻辑型, 可空, 

.局部变量 二维点类, 类坐标, , , 

返回 (二维点类.求五分点集316 (参直线段.起点, 参直线段.尾点, 参包含起点, 参包含尾点))

.子程序 求N分点316, 坐标, , 求位于两点之间的五分点位置，这样的点共n-1个，，以起点方向向尾点方向开始编号。根据所指定的序号选择返回点的位置.默认第1点。
.参数 参直线段, 线段, , 
.参数 参等分数N, 整数型, , 不能为零和负数，如果为负数将自动反号，如果绝对值为0、1、2就返回中分点。
.参数 参序号, 整数型, 可空, 常量，1,2,3,4,....n-1，小于等于是1时就会返回第一点，等于2时返回第2点，等于3时返回第3点，....大于等于n-1时就会返回第n-1点。

.局部变量 二维点类, 类坐标, , , 

返回 (二维点类.求N分点316 (参直线段.起点, 参直线段.尾点, 参等分数N, 参序号))

.子程序 求N分点集316, 坐标集, , 求位于两点之间的五分点位置，这样的点共n-1个.，以起点方向向尾点方向开始编号。
.参数 参直线段, 线段, , 
.参数 参等分数N, 整数型, , 不能为零和负数，如果为负数将自动反号，如果绝对值为0、1、2就返回中分点。
.参数 参包含起点, 逻辑型, 可空, 
.参数 参包含尾点, 逻辑型, 可空, 

.局部变量 二维点类, 类坐标, , , 

返回 (二维点类.求N分点集316 (参直线段.起点, 参直线段.尾点, 参等分数N, 参包含起点, 参包含尾点))

.子程序 求比例分点316, 坐标, , 求位于两点之间的比例分点位置，这样的点共两个，以起点方向向尾点方向开始编号。根据所指定的序号选择返回点的位置.默认第1点。
.参数 参直线段, 线段, , 
.参数 参比例一分量, 双精度小数型, , 比如要二八分段就录入2。总比重为一二段之录入值之和。比例必须为正数，且两个比例分量之后不能为零。
.参数 参比例二分量, 双精度小数型, , 比如要二八分段就录入8。总比重为一二段之录入值之和。比例必须为正数，且两个比例分量之后不能为零。
.参数 参序号, 整数型, 可空, 常量，1或2，小于等于是1时就会返回第一点，大于1时就会返回第二点。

.局部变量 二维点类, 类坐标, , , 

返回 (二维点类.求比例分点316 (参直线段.起点, 参直线段.尾点, 参比例一分量, 参比例二分量, 参序号))

.子程序 求黄金分割点316, 坐标, , 黄金分割比例有待查证。位于两点之间的黄金分割点位置，这样的点共两个，以起点方向向尾点方向开始编号。根据所指定的序号选择返回点的位置.默认第1点。
.参数 参直线段, 线段, , 
.参数 参序号, 整数型, 可空, 常量，1或2，小于等于是1时就会返回第一点，大于1时就会返回第二点。

.局部变量 二维点类, 类坐标, , , 

返回 (二维点类.求黄金分割点316 (参直线段.起点, 参直线段.尾点, 参序号))

.子程序 求定长插点集316, 坐标集, , 。
.参数 参直线段, 线段, , 
.参数 参丈量单位长度, 整数型, , 不能为零和负数，也不应小于两点间的距离，如果为负数将自动反号，如果绝对值为0将返回9个比例分点，也就是十等分，数量不包含起点和尾点。
.参数 参包含起点, 逻辑型, 可空, 
.参数 参包含尾点, 逻辑型, 可空, 
.参数 参等分调整, 逻辑型, 可空, 如果给定的丈量单位长度不能等分两点间的距离，是否允许进行微量调整，使其等距离插入点。如果为假，最后一个插入点到尾点的距离将小于其它插入点间的距离。

.局部变量 二维点类, 类坐标, , , 

返回 (二维点类.求定长插点集316 (参直线段.起点, 参直线段.尾点, 参丈量单位长度, 参包含起点, 参包含尾点, 参等分调整))


.类模块 类三角形, , , 

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 创建_三点, 三角形, 公开, 
.参数 参第一点, 坐标, , 
.参数 参第二点, 坐标, , 
.参数 参第三点, 坐标, , 

.局部变量 三角形, 三角形, , , 
.局部变量 D12, 双精度小数型, , , 
.局部变量 D23, 双精度小数型, , , 
.局部变量 D31, 双精度小数型, , , 
.局部变量 二维点, 类坐标, , , 

赋值 (三角形.顶点A, 参第一点)
赋值 (三角形.顶点B, 参第二点)
赋值 (三角形.顶点C, 参第三点)
赋值 (D12, 二维点.距离316 (三角形.顶点A, 三角形.顶点B))
赋值 (D23, 二维点.距离316 (三角形.顶点B, 三角形.顶点C))
赋值 (D31, 二维点.距离316 (三角形.顶点C, 三角形.顶点A))
.判断开始 (或者 (大于或等于 (D12, 相加 (D23, D31)), 大于或等于 (D23, 相加 (D12, D31)), 大于或等于 (D31, 相加 (D12, D23))))
    赋值 (三角形.存在, 假)
.默认
    赋值 (三角形.存在, 真)
.判断结束
返回 (三角形)

.子程序 创建_三条直线, 三角形, 公开, 
.参数 参第一条直线, 直线一般式, , 
.参数 参第二条直线, 直线一般式, , 
.参数 参第三条直线, 直线一般式, , 

.局部变量 三角形, 三角形, , , 
.局部变量 D12, 双精度小数型, , , 
.局部变量 D23, 双精度小数型, , , 
.局部变量 D31, 双精度小数型, , , 
.局部变量 二维点, 类坐标, , , 
.局部变量 直线, 类直线一般式, , , 

赋值 (三角形.顶点A, 直线.两直线交点 (参第一条直线, 参第三条直线))
赋值 (三角形.顶点B, 直线.两直线交点 (参第二条直线, 参第一条直线))
赋值 (三角形.顶点C, 直线.两直线交点 (参第三条直线, 参第二条直线))
赋值 (D12, 二维点.距离316 (三角形.顶点A, 三角形.顶点B))
赋值 (D23, 二维点.距离316 (三角形.顶点B, 三角形.顶点C))
赋值 (D31, 二维点.距离316 (三角形.顶点C, 三角形.顶点A))
.判断开始 (或者 (大于或等于 (D12, 相加 (D23, D31)), 大于或等于 (D23, 相加 (D12, D31)), 大于或等于 (D31, 相加 (D12, D23))))
    赋值 (三角形.存在, 假)
.默认
    赋值 (三角形.存在, 真)
.判断结束
返回 (三角形)

.子程序 创建_三条线段, 三角形, 公开, 
.参数 参第一条线段, 线段, , 
.参数 参第二条线段, 线段, , 
.参数 参第三条线段, 线段, , 
.参数 参允许延伸, 逻辑型, 可空, 

.局部变量 三角形, 三角形, , , 
.局部变量 D12, 双精度小数型, , , 
.局部变量 D23, 双精度小数型, , , 
.局部变量 D31, 双精度小数型, , , 
.局部变量 二维点, 类坐标, , , 
.局部变量 直线, 类直线一般式, , , 
.局部变量 点与线段, 类关系_点与线段, , , 
.局部变量 A, 整数型, , , 
.局部变量 B, 整数型, , , 
.局部变量 C, 整数型, , , 

赋值 (三角形.顶点A, 直线.两直线交点 (参第一条线段.直线, 参第三条线段.直线))
赋值 (三角形.顶点B, 直线.两直线交点 (参第二条线段.直线, 参第一条线段.直线))
赋值 (三角形.顶点C, 直线.两直线交点 (参第三条线段.直线, 参第二条线段.直线))
.判断开始 (参允许延伸)
    赋值 (D12, 二维点.距离316 (三角形.顶点A, 三角形.顶点B))
    赋值 (D23, 二维点.距离316 (三角形.顶点B, 三角形.顶点C))
    赋值 (D31, 二维点.距离316 (三角形.顶点C, 三角形.顶点A))
    .判断开始 (或者 (大于或等于 (D12, 相加 (D23, D31)), 大于或等于 (D23, 相加 (D12, D31)), 大于或等于 (D31, 相加 (D12, D23))))
        赋值 (三角形.存在, 假)
    .默认
        赋值 (三角形.存在, 真)
    .判断结束
    
.默认
    .如果真 (点与线段.点在线段上 (三角形.顶点A, 参第一条线段))
        赋值 (A, 相加 (A, 1))
    .如果真结束
    .如果真 (点与线段.点在线段上 (三角形.顶点A, 参第二条线段))
        赋值 (A, 相加 (A, 1))
    .如果真结束
    .如果真 (点与线段.点在线段上 (三角形.顶点A, 参第三条线段))
        赋值 (A, 相加 (A, 1))
    .如果真结束
    .如果真 (点与线段.点在线段上 (三角形.顶点B, 参第一条线段))
        赋值 (B, 相加 (B, 1))
    .如果真结束
    .如果真 (点与线段.点在线段上 (三角形.顶点B, 参第二条线段))
        赋值 (B, 相加 (B, 1))
    .如果真结束
    .如果真 (点与线段.点在线段上 (三角形.顶点B, 参第三条线段))
        赋值 (B, 相加 (B, 1))
    .如果真结束
    .如果真 (点与线段.点在线段上 (三角形.顶点C, 参第一条线段))
        赋值 (C, 相加 (C, 1))
    .如果真结束
    .如果真 (点与线段.点在线段上 (三角形.顶点C, 参第二条线段))
        赋值 (C, 相加 (C, 1))
    .如果真结束
    .如果真 (点与线段.点在线段上 (三角形.顶点C, 参第三条线段))
        赋值 (C, 相加 (C, 1))
    .如果真结束
     ' ------------------------------要求每个顶点都必须在两条直线上.-----------------------
    .判断开始 (或者 (不等于 (A, 2), 不等于 (B, 2), 不等于 (C, 2)))
        赋值 (三角形.存在, 假)
    .默认
        赋值 (三角形.存在, 真)
    .判断结束
    
.判断结束

返回 (三角形)

.子程序 创建_线段加一点, 三角形, 公开, 
.参数 参线段, 线段, , 
.参数 参点, 坐标, , 

.局部变量 三角形, 三角形, , , 
.局部变量 D12, 双精度小数型, , , 
.局部变量 D23, 双精度小数型, , , 
.局部变量 D31, 双精度小数型, , , 
.局部变量 二维点, 类坐标, , , 

赋值 (三角形.顶点A, 参线段.起点)
赋值 (三角形.顶点B, 参线段.尾点)
赋值 (三角形.顶点C, 参点)
赋值 (D12, 二维点.距离316 (三角形.顶点A, 三角形.顶点B))
赋值 (D23, 二维点.距离316 (三角形.顶点B, 三角形.顶点C))
赋值 (D31, 二维点.距离316 (三角形.顶点C, 三角形.顶点A))
.判断开始 (或者 (大于或等于 (D12, 相加 (D23, D31)), 大于或等于 (D23, 相加 (D12, D31)), 大于或等于 (D31, 相加 (D12, D23))))
    赋值 (三角形.存在, 假)
.默认
    赋值 (三角形.存在, 真)
.判断结束
返回 (三角形)

.子程序 平移, 三角形, , 
.参数 参三角形, 三角形, , 
.参数 参平移量, 坐标, , 

.局部变量 点, 类坐标, , , 

赋值 (参三角形.顶点A, 点.平移316 (参三角形.顶点A, 参平移量))
赋值 (参三角形.顶点B, 点.平移316 (参三角形.顶点B, 参平移量))
赋值 (参三角形.顶点C, 点.平移316 (参三角形.顶点C, 参平移量))
返回 (参三角形)

.子程序 平移_定向, 三角形, , 
.参数 参被平移三角形, 三角形, , 
.参数 参角度, 双精度小数型, , 
.参数 参移动量, 双精度小数型, , 

.局部变量 二维点, 类坐标, , , 

赋值 (参被平移三角形.顶点A, 二维点.平移_定向316 (参被平移三角形.顶点A, 参角度, 参移动量))
赋值 (参被平移三角形.顶点B, 二维点.平移_定向316 (参被平移三角形.顶点B, 参角度, 参移动量))
赋值 (参被平移三角形.顶点C, 二维点.平移_定向316 (参被平移三角形.顶点C, 参角度, 参移动量))
返回 (参被平移三角形)

.子程序 平移_两点定向, 三角形, , 
.参数 参被平移三角形, 三角形, , 
.参数 参方向基点, 坐标, , 
.参数 参方向目标点, 坐标, , 
.参数 参移动量, 双精度小数型, , 如果移动量为零，将参照方向目标点与方向基点之间的距离计算移动量

.局部变量 二维点, 类坐标, , , 
.局部变量 平移量, 坐标, , , 
.局部变量 坐标, 坐标, , , 
.局部变量 三角形, 三角形, , , 

.判断开始 (等于 (参移动量, 0))
     ' 提供的移动量零，问题得到简化。直接按给定方向点的坐标增量进行平移。
    赋值 (平移量.x, 相减 (参方向目标点.x, 参方向基点.x))
    赋值 (平移量.y, 相减 (参方向目标点.y, 参方向基点.y))
    赋值 (三角形.顶点A, 二维点.平移316 (参被平移三角形.顶点A, 平移量))
    赋值 (三角形.顶点B, 二维点.平移316 (参被平移三角形.顶点B, 平移量))
    赋值 (三角形.顶点C, 二维点.平移316 (参被平移三角形.顶点C, 平移量))
.默认
     ' 移动量不零,将按照移动量进行移动
    赋值 (坐标, 二维点.靠近316 (参方向基点, 参方向目标点, 参移动量))
    赋值 (平移量.x, 相减 (坐标.x, 参方向基点.x))
    赋值 (平移量.y, 相减 (坐标.y, 参方向基点.y))
    赋值 (三角形.顶点A, 二维点.平移316 (参被平移三角形.顶点A, 平移量))
    赋值 (三角形.顶点B, 二维点.平移316 (参被平移三角形.顶点B, 平移量))
    赋值 (三角形.顶点C, 二维点.平移316 (参被平移三角形.顶点C, 平移量))
.判断结束

返回 (三角形)

.子程序 平移_线段定向, 三角形, , 
.参数 参被平移三角形, 三角形, , 
.参数 参方向线段, 线段, , 
.参数 参移动量, 双精度小数型, , 如果移动量为零，将参照方向目标点与方向基点之间的距离计算移动量

.局部变量 二维点, 类坐标, , , 
.局部变量 平移量, 坐标, , , 
.局部变量 坐标, 坐标, , , 
.局部变量 三角形, 三角形, , , 

.判断开始 (等于 (参移动量, 0))
     ' 提供的移动量零，问题得到简化。直接按给定方向点的坐标增量进行平移。
    赋值 (平移量, 二维点.求平移量316 (参方向线段.尾点, 参方向线段.起点))
    赋值 (三角形.顶点A, 二维点.平移316 (参被平移三角形.顶点A, 平移量))
    赋值 (三角形.顶点B, 二维点.平移316 (参被平移三角形.顶点B, 平移量))
    赋值 (三角形.顶点C, 二维点.平移316 (参被平移三角形.顶点C, 平移量))
.默认
     ' 移动量不零,将按照移动量进行移动
    赋值 (坐标, 二维点.靠近316 (参方向线段.起点, 参方向线段.尾点, 参移动量))
    赋值 (平移量, 二维点.求平移量316 (坐标, 参方向线段.起点))
    赋值 (三角形.顶点A, 二维点.平移316 (参被平移三角形.顶点A, 平移量))
    赋值 (三角形.顶点B, 二维点.平移316 (参被平移三角形.顶点B, 平移量))
    赋值 (三角形.顶点C, 二维点.平移316 (参被平移三角形.顶点C, 平移量))
.判断结束

返回 (三角形)

.子程序 偏移, 三角形, , 
.参数 参三角形, 三角形, , 
.参数 参方向, 整数型, , 1或-1，请提供正负符号,外侧为正,内侧为负。
.参数 参距离, 双精度小数型, , 

.局部变量 边线AB, 线段, , , 
.局部变量 边线BC, 线段, , , 
.局部变量 边线CA, 线段, , , 
.局部变量 形心0, 坐标, , , 
.局部变量 新边线AB, 线段, , , 
.局部变量 新边线BC, 线段, , , 
.局部变量 新边线CA, 线段, , , 
.局部变量 二维线段, 类线段, , , 
.局部变量 直线, 类直线一般式, , , 
.局部变量 三角形, 三角形, , , 

赋值 (边线AB.起点, 参三角形.顶点A)
赋值 (边线AB.尾点, 参三角形.顶点B)
赋值 (边线BC.起点, 参三角形.顶点B)
赋值 (边线BC.尾点, 参三角形.顶点C)
赋值 (边线CA.起点, 参三角形.顶点C)
赋值 (边线CA.尾点, 参三角形.顶点A)
赋值 (形心0, 求形心O (参三角形))
.判断开始 (小于 (参方向, 0))
    赋值 (新边线AB, 二维线段.偏移向点 (边线AB, 形心0, 参距离))
    赋值 (新边线BC, 二维线段.偏移向点 (边线BC, 形心0, 参距离))
    赋值 (新边线CA, 二维线段.偏移向点 (边线CA, 形心0, 参距离))
.默认
    赋值 (新边线AB, 二维线段.偏移离点 (边线AB, 形心0, 参距离))
    赋值 (新边线BC, 二维线段.偏移离点 (边线BC, 形心0, 参距离))
    赋值 (新边线CA, 二维线段.偏移离点 (边线CA, 形心0, 参距离))
.判断结束
赋值 (三角形.顶点A, 直线.两直线交点 (新边线AB.直线, 新边线CA.直线))
赋值 (三角形.顶点B, 直线.两直线交点 (新边线BC.直线, 新边线AB.直线))
赋值 (三角形.顶点C, 直线.两直线交点 (新边线CA.直线, 新边线BC.直线))
返回 (三角形)

.子程序 偏移向外, 三角形, , 
.参数 参三角形, 三角形, , 
.参数 参距离, 双精度小数型, , 

.局部变量 边线AB, 线段, , , 
.局部变量 边线BC, 线段, , , 
.局部变量 边线CA, 线段, , , 
.局部变量 形心0, 坐标, , , 
.局部变量 新边线AB, 线段, , , 
.局部变量 新边线BC, 线段, , , 
.局部变量 新边线CA, 线段, , , 
.局部变量 二维线段, 类线段, , , 
.局部变量 直线, 类直线一般式, , , 
.局部变量 三角形, 三角形, , , 

赋值 (边线AB.起点, 参三角形.顶点A)
赋值 (边线AB.尾点, 参三角形.顶点B)
赋值 (边线BC.起点, 参三角形.顶点B)
赋值 (边线BC.尾点, 参三角形.顶点C)
赋值 (边线CA.起点, 参三角形.顶点C)
赋值 (边线CA.尾点, 参三角形.顶点A)
赋值 (形心0, 求形心O (参三角形))
赋值 (新边线AB, 二维线段.偏移离点 (边线AB, 形心0, 参距离))
赋值 (新边线BC, 二维线段.偏移离点 (边线BC, 形心0, 参距离))
赋值 (新边线CA, 二维线段.偏移离点 (边线CA, 形心0, 参距离))
赋值 (三角形.顶点A, 直线.两直线交点 (新边线AB.直线, 新边线CA.直线))
赋值 (三角形.顶点B, 直线.两直线交点 (新边线BC.直线, 新边线AB.直线))
赋值 (三角形.顶点C, 直线.两直线交点 (新边线CA.直线, 新边线BC.直线))
返回 (三角形)

.子程序 偏移向内, 三角形, , 
.参数 参三角形, 三角形, , 
.参数 参距离, 双精度小数型, , 

.局部变量 边线AB, 线段, , , 
.局部变量 边线BC, 线段, , , 
.局部变量 边线CA, 线段, , , 
.局部变量 形心0, 坐标, , , 
.局部变量 新边线AB, 线段, , , 
.局部变量 新边线BC, 线段, , , 
.局部变量 新边线CA, 线段, , , 
.局部变量 二维线段, 类线段, , , 
.局部变量 直线, 类直线一般式, , , 
.局部变量 三角形, 三角形, , , 

赋值 (边线AB.起点, 参三角形.顶点A)
赋值 (边线AB.尾点, 参三角形.顶点B)
赋值 (边线BC.起点, 参三角形.顶点B)
赋值 (边线BC.尾点, 参三角形.顶点C)
赋值 (边线CA.起点, 参三角形.顶点C)
赋值 (边线CA.尾点, 参三角形.顶点A)
赋值 (形心0, 求形心O (参三角形))
赋值 (新边线AB, 二维线段.偏移向点 (边线AB, 形心0, 参距离))
赋值 (新边线BC, 二维线段.偏移向点 (边线BC, 形心0, 参距离))
赋值 (新边线CA, 二维线段.偏移向点 (边线CA, 形心0, 参距离))
赋值 (三角形.顶点A, 直线.两直线交点 (新边线AB.直线, 新边线CA.直线))
赋值 (三角形.顶点B, 直线.两直线交点 (新边线BC.直线, 新边线AB.直线))
赋值 (三角形.顶点C, 直线.两直线交点 (新边线CA.直线, 新边线BC.直线))
返回 (三角形)

.子程序 偏移向点, 三角形, , 
.参数 参三角形, 三角形, , 
.参数 参目标方向点, 坐标, , 点的位置,决定了三角形是向内偏还是向外偏.
.参数 参偏移距离, 双精度小数型, 可空, 

.局部变量 点, 类坐标, , , 
.局部变量 点与三角形关系, 类关系_点与三角形, , , 
.局部变量 点与三角形, 整数型, , , 

赋值 (点与三角形, 点与三角形关系.点与三角形关系 (参目标方向点, 参三角形, #零6))
.如果真 (等于 (参偏移距离, 0))
    赋值 (参偏移距离, 点.到三角形距离 (参目标方向点, 参三角形))
.如果真结束
.如果真 (等于 (参偏移距离, 0))
    返回 (参三角形)
.如果真结束

.判断开始 (等于 (点与三角形, #点与三角形_点在三角形上))
    返回 (参三角形)
.判断 (等于 (点与三角形, #点与三角形_点在三角形内))
    返回 (偏移向内 (参三角形, 参偏移距离))
.默认
    返回 (偏移向外 (参三角形, 参偏移距离))
.判断结束


.子程序 偏移离点, 三角形, , 
.参数 参三角形, 三角形, , 
.参数 参目标方向点, 坐标, , 点的位置,决定了三角形是向内偏还是向外偏.
.参数 参偏移距离, 双精度小数型, 可空, 

.局部变量 点, 类坐标, , , 
.局部变量 点与三角形关系, 类关系_点与三角形, , , 
.局部变量 点与三角形, 整数型, , , 

赋值 (点与三角形, 点与三角形关系.点与三角形关系 (参目标方向点, 参三角形, #零6))
.如果真 (等于 (参偏移距离, 0))
    赋值 (参偏移距离, 点.到三角形距离 (参目标方向点, 参三角形))
.如果真结束
.如果真 (等于 (参偏移距离, 0))
    返回 (参三角形)
.如果真结束

.判断开始 (等于 (点与三角形, #点与三角形_点在三角形上))
    返回 (偏移向外 (参三角形, 参偏移距离))
.判断 (等于 (点与三角形, #点与三角形_点在三角形内))
    返回 (偏移向外 (参三角形, 参偏移距离))
.默认
    返回 (偏移向内 (参三角形, 参偏移距离))
.判断结束


.子程序 旋转, 三角形, , 
.参数 参三角形, 三角形, , 
.参数 参旋转中心, 坐标, , 
.参数 参旋转角度, 双精度小数型, , 

.局部变量 点, 类坐标, , , 

赋值 (参三角形.顶点A, 点.旋转316 (参三角形.顶点A, 参旋转中心, 参旋转角度))
赋值 (参三角形.顶点B, 点.旋转316 (参三角形.顶点B, 参旋转中心, 参旋转角度))
赋值 (参三角形.顶点C, 点.旋转316 (参三角形.顶点C, 参旋转中心, 参旋转角度))
返回 (参三角形)

.子程序 缩放, 三角形, , 
.参数 参三角形, 三角形, , 
.参数 参缩放中心点, 坐标, 可空, 可以是任意平面点，为空时将参照原点进行缩放操作。
.参数 参比例, 坐标比例, , 允许在X方向和Y方向有不同的比例

.局部变量 二维点, 类坐标, , , 
.局部变量 三角形, 三角形, , , 

赋值 (三角形.顶点A, 二维点.缩放316 (参三角形.顶点A, 参缩放中心点, 参比例))
赋值 (三角形.顶点B, 二维点.缩放316 (参三角形.顶点B, 参缩放中心点, 参比例))
赋值 (三角形.顶点C, 二维点.缩放316 (参三角形.顶点C, 参缩放中心点, 参比例))
返回 (三角形)

.子程序 对称于X轴, 三角形, , 
.参数 参三角形, 三角形, , 

.局部变量 点, 类坐标, , , 

赋值 (参三角形.顶点A, 点.对称于X轴316 (参三角形.顶点A))
赋值 (参三角形.顶点B, 点.对称于X轴316 (参三角形.顶点B))
赋值 (参三角形.顶点C, 点.对称于X轴316 (参三角形.顶点C))
返回 (参三角形)

.子程序 对称于Y轴, 三角形, , 
.参数 参三角形, 三角形, , 

.局部变量 点, 类坐标, , , 

赋值 (参三角形.顶点A, 点.对称于Y轴316 (参三角形.顶点A))
赋值 (参三角形.顶点B, 点.对称于Y轴316 (参三角形.顶点B))
赋值 (参三角形.顶点C, 点.对称于Y轴316 (参三角形.顶点C))
返回 (参三角形)

.子程序 对称于点, 三角形, , 
.参数 参三角形, 三角形, , 
.参数 参对称中心, 坐标, , 

.局部变量 点, 类坐标, , , 

赋值 (参三角形.顶点A, 点.对称316 (参三角形.顶点A, 参对称中心))
赋值 (参三角形.顶点B, 点.对称316 (参三角形.顶点B, 参对称中心))
赋值 (参三角形.顶点C, 点.对称316 (参三角形.顶点C, 参对称中心))
返回 (参三角形)

.子程序 对称两点, 三角形, , 
.参数 参三角形, 三角形, , 
.参数 参相对点1, 坐标, , 
.参数 参相对点2, 坐标, , 

.局部变量 点, 类坐标, , , 

赋值 (参三角形.顶点A, 点.对称于两点316 (参三角形.顶点A, 参相对点1, 参相对点2))
赋值 (参三角形.顶点B, 点.对称于两点316 (参三角形.顶点B, 参相对点1, 参相对点2))
赋值 (参三角形.顶点C, 点.对称于两点316 (参三角形.顶点C, 参相对点1, 参相对点2))
返回 (参三角形)

.子程序 对称于线段, 三角形, , 
.参数 参三角形, 三角形, , 
.参数 参对称线段, 线段, , 

.局部变量 点, 类坐标, , , 

赋值 (参三角形.顶点A, 点.对称于线段316 (参三角形.顶点A, 参对称线段))
赋值 (参三角形.顶点B, 点.对称于线段316 (参三角形.顶点B, 参对称线段))
赋值 (参三角形.顶点C, 点.对称于线段316 (参三角形.顶点C, 参对称线段))
返回 (参三角形)

.子程序 对称于直线, 三角形, , 
.参数 参三角形, 三角形, , 
.参数 参对称直线, 直线一般式, , 

.局部变量 点, 类坐标, , , 

赋值 (参三角形.顶点A, 点.对称于直线316 (参三角形.顶点A, 参对称直线))
赋值 (参三角形.顶点B, 点.对称于直线316 (参三角形.顶点B, 参对称直线))
赋值 (参三角形.顶点C, 点.对称于直线316 (参三角形.顶点C, 参对称直线))
返回 (参三角形)

.子程序 求边长a, 双精度小数型, , 
.参数 参三角形, 三角形, , 

.局部变量 二维点类, 类坐标, , , 

返回 (二维点类.距离316 (参三角形.顶点B, 参三角形.顶点C))

.子程序 求边长b, 双精度小数型, , 
.参数 参三角形, 三角形, , 

.局部变量 二维点类, 类坐标, , , 

返回 (二维点类.距离316 (参三角形.顶点A, 参三角形.顶点C))

.子程序 求边长c, 双精度小数型, , 
.参数 参三角形, 三角形, , 

.局部变量 二维点类, 类坐标, , , 

返回 (二维点类.距离316 (参三角形.顶点A, 参三角形.顶点B))

.子程序 求角A, 双精度小数型, , 
.参数 参三角形, 三角形, , 

.局部变量 弧度, 类弧度, , , 
.局部变量 二维点类, 类坐标, , , 
.局部变量 三角形信息, 三角形信息, , , 

赋值 (三角形信息.边长a, 二维点类.距离316 (参三角形.顶点B, 参三角形.顶点C))
赋值 (三角形信息.边长b, 二维点类.距离316 (参三角形.顶点C, 参三角形.顶点A))
赋值 (三角形信息.边长c, 二维点类.距离316 (参三角形.顶点A, 参三角形.顶点B))
赋值 (三角形信息.周长L, 相加 (三角形信息.边长a, 三角形信息.边长b, 三角形信息.边长c))
赋值 (三角形信息.角A, 弧度.反余弦 (相除 (相减 (相加 (相乘 (三角形信息.边长b, 三角形信息.边长b), 相乘 (三角形信息.边长c, 三角形信息.边长c)), 相乘 (三角形信息.边长a, 三角形信息.边长a)), 相乘 (2, 三角形信息.边长b, 三角形信息.边长c))))
返回 (三角形信息.角A)

.子程序 求角B, 双精度小数型, , 
.参数 参三角形, 三角形, , 

.局部变量 弧度, 类弧度, , , 
.局部变量 二维点类, 类坐标, , , 
.局部变量 三角形信息, 三角形信息, , , 

赋值 (三角形信息.边长a, 二维点类.距离316 (参三角形.顶点B, 参三角形.顶点C))
赋值 (三角形信息.边长b, 二维点类.距离316 (参三角形.顶点C, 参三角形.顶点A))
赋值 (三角形信息.边长c, 二维点类.距离316 (参三角形.顶点A, 参三角形.顶点B))
赋值 (三角形信息.周长L, 相加 (三角形信息.边长a, 三角形信息.边长b, 三角形信息.边长c))
赋值 (三角形信息.角B, 弧度.反余弦 (相除 (相减 (相加 (相乘 (三角形信息.边长c, 三角形信息.边长c), 相乘 (三角形信息.边长a, 三角形信息.边长a)), 相乘 (三角形信息.边长b, 三角形信息.边长b)), 相乘 (2, 三角形信息.边长c, 三角形信息.边长a))))
返回 (三角形信息.角B)

.子程序 求角C, 双精度小数型, , 
.参数 参三角形, 三角形, , 

.局部变量 弧度, 类弧度, , , 
.局部变量 二维点类, 类坐标, , , 
.局部变量 三角形信息, 三角形信息, , , 

赋值 (三角形信息.边长a, 二维点类.距离316 (参三角形.顶点B, 参三角形.顶点C))
赋值 (三角形信息.边长b, 二维点类.距离316 (参三角形.顶点C, 参三角形.顶点A))
赋值 (三角形信息.边长c, 二维点类.距离316 (参三角形.顶点A, 参三角形.顶点B))
赋值 (三角形信息.周长L, 相加 (三角形信息.边长a, 三角形信息.边长b, 三角形信息.边长c))
赋值 (三角形信息.角C, 弧度.反余弦 (相除 (相减 (相加 (相乘 (三角形信息.边长a, 三角形信息.边长a), 相乘 (三角形信息.边长b, 三角形信息.边长b)), 相乘 (三角形信息.边长c, 三角形信息.边长c)), 相乘 (2, 三角形信息.边长a, 三角形信息.边长b))))
返回 (三角形信息.角C)

.子程序 求边线AB, 线段, , 
.参数 参三角形, 三角形, , 

.局部变量 二维线段, 类线段, , , 
.局部变量 线段, 线段, , , 

赋值 (线段.起点, 参三角形.顶点A)
赋值 (线段.尾点, 参三角形.顶点B)
二维线段.求直线316 (线段)
返回 (线段)

.子程序 求边线BC, 线段, , 
.参数 参三角形, 三角形, , 

.局部变量 二维线段, 类线段, , , 
.局部变量 线段, 线段, , , 

赋值 (线段.起点, 参三角形.顶点B)
赋值 (线段.尾点, 参三角形.顶点C)
二维线段.求直线316 (线段)
返回 (线段)

.子程序 求边线CA, 线段, , 
.参数 参三角形, 三角形, , 

.局部变量 二维线段, 类线段, , , 
.局部变量 线段, 线段, , , 

赋值 (线段.起点, 参三角形.顶点C)
赋值 (线段.尾点, 参三角形.顶点A)
二维线段.求直线316 (线段)
返回 (线段)

.子程序 求高线A, 线段, , 
.参数 参三角形, 三角形, , 

.局部变量 二维线段, 类线段, , , 
.局部变量 点, 类坐标, , , 
.局部变量 线段, 线段, , , 

赋值 (线段, 点.到线段垂线段316 (参三角形.顶点A, 求边线BC (参三角形)))
二维线段.求直线316 (线段)
返回 (线段)

.子程序 求高线B, 线段, , 
.参数 参三角形, 三角形, , 

.局部变量 二维线段, 类线段, , , 
.局部变量 线段, 线段, , , 
.局部变量 点, 类坐标, , , 

赋值 (线段, 点.到线段垂线段316 (参三角形.顶点B, 求边线CA (参三角形)))
二维线段.求直线316 (线段)
返回 (线段)

.子程序 求高线C, 线段, , 
.参数 参三角形, 三角形, , 

.局部变量 二维线段, 类线段, , , 
.局部变量 线段, 线段, , , 
.局部变量 点, 类坐标, , , 

赋值 (线段, 点.到线段垂线段316 (参三角形.顶点C, 求边线AB (参三角形)))
二维线段.求直线316 (线段)
返回 (线段)

.子程序 求中线A, 线段, , 
.参数 参三角形, 三角形, , 

.局部变量 二维线段, 类线段, , , 
.局部变量 线段, 线段, , , 
.局部变量 点, 类坐标, , , 

赋值 (线段.起点, 参三角形.顶点A)
赋值 (线段.尾点, 点.中间点316 (参三角形.顶点B, 参三角形.顶点C))
二维线段.求直线316 (线段)
返回 (线段)

.子程序 求中线B, 线段, , 
.参数 参三角形, 三角形, , 

.局部变量 二维线段, 类线段, , , 
.局部变量 线段, 线段, , , 
.局部变量 点, 类坐标, , , 

赋值 (线段.起点, 参三角形.顶点B)
赋值 (线段.尾点, 点.中间点316 (参三角形.顶点C, 参三角形.顶点A))
二维线段.求直线316 (线段)
返回 (线段)

.子程序 求中线C, 线段, , 
.参数 参三角形, 三角形, , 

.局部变量 线段, 线段, , , 
.局部变量 点, 类坐标, , , 
.局部变量 二维线段, 类线段, , , 

赋值 (线段.起点, 参三角形.顶点C)
赋值 (线段.尾点, 点.中间点316 (参三角形.顶点A, 参三角形.顶点B))
二维线段.求直线316 (线段)
返回 (线段)

.子程序 求角平分线A, 线段, , 
.参数 参三角形, 三角形, , 

.局部变量 二维线段, 类线段, , , 
.局部变量 对边线段, 线段, , , 
.局部变量 线段, 线段, , , 
.局部变量 点, 类坐标, , , 

赋值 (对边线段.起点, 参三角形.顶点B)
赋值 (对边线段.尾点, 参三角形.顶点C)
二维线段.求直线316 (对边线段)
赋值 (线段.起点, 参三角形.顶点A)
赋值 (线段.尾点, 点.投影到线段316 (点.中间点316 (点.靠近316 (参三角形.顶点A, 参三角形.顶点B, 100), 点.靠近316 (参三角形.顶点A, 参三角形.顶点C, 100)), 线段.起点, 对边线段))
二维线段.求直线316 (线段)
返回 (线段)

.子程序 求角平分线B, 线段, , 
.参数 参三角形, 三角形, , 

.局部变量 二维线段, 类线段, , , 
.局部变量 对边线段, 线段, , , 
.局部变量 线段, 线段, , , 
.局部变量 点, 类坐标, , , 

赋值 (对边线段.起点, 参三角形.顶点C)
赋值 (对边线段.尾点, 参三角形.顶点A)
二维线段.求直线316 (对边线段)
赋值 (线段.起点, 参三角形.顶点B)
赋值 (线段.尾点, 点.投影到线段316 (点.中间点316 (点.靠近316 (参三角形.顶点B, 参三角形.顶点C, 100), 点.靠近316 (参三角形.顶点B, 参三角形.顶点A, 100)), 线段.起点, 对边线段))
二维线段.求直线316 (线段)
返回 (线段)

.子程序 求角平分线C, 线段, , 
.参数 参三角形, 三角形, , 

.局部变量 二维线段, 类线段, , , 
.局部变量 对边线段, 线段, , , 
.局部变量 线段, 线段, , , 
.局部变量 点, 类坐标, , , 

赋值 (对边线段.起点, 参三角形.顶点A)
赋值 (对边线段.尾点, 参三角形.顶点B)
二维线段.求直线316 (对边线段)
赋值 (线段.起点, 参三角形.顶点C)
赋值 (线段.尾点, 点.投影到线段316 (点.中间点316 (点.靠近316 (参三角形.顶点C, 参三角形.顶点A, 100), 点.靠近316 (参三角形.顶点C, 参三角形.顶点B, 100)), 线段.起点, 对边线段))
二维线段.求直线316 (线段)
返回 (线段)

.子程序 求边垂点a, 坐标, , 
.参数 参三角形, 三角形, , 

.局部变量 点, 类坐标, , , 

返回 (点.到线段垂足点316 (参三角形.顶点A, 求边线BC (参三角形)))

.子程序 求边垂点b, 坐标, , 
.参数 参三角形, 三角形, , 

.局部变量 点, 类坐标, , , 

返回 (点.到线段垂足点316 (参三角形.顶点B, 求边线CA (参三角形)))

.子程序 求边垂点c, 坐标, , 
.参数 参三角形, 三角形, , 

.局部变量 点, 类坐标, , , 

返回 (点.到线段垂足点316 (参三角形.顶点C, 求边线AB (参三角形)))

.子程序 求边中点a, 坐标, , 
.参数 参三角形, 三角形, , 

.局部变量 点, 类坐标, , , 

返回 (点.中间点316 (参三角形.顶点B, 参三角形.顶点C))

.子程序 求边中点b, 坐标, , 
.参数 参三角形, 三角形, , 

.局部变量 点, 类坐标, , , 

返回 (点.中间点316 (参三角形.顶点C, 参三角形.顶点A))

.子程序 求边中点c, 坐标, , 
.参数 参三角形, 三角形, , 

.局部变量 点, 类坐标, , , 

返回 (点.中间点316 (参三角形.顶点A, 参三角形.顶点B))

.子程序 求形心O, 坐标, , 
.参数 参三角形, 三角形, , 

.局部变量 坐标, 坐标, , , 
.局部变量 二维点, 类坐标, , , 
.局部变量 中线A, 线段, , , 
.局部变量 二维线段, 类线段, , , 

赋值 (中线A.起点, 二维点.中间点316 (参三角形.顶点A, 参三角形.顶点B))
赋值 (中线A.尾点, 参三角形.顶点C)
赋值 (坐标, 二维线段.求比例分点316 (中线A, 1, 2))
返回 (坐标)

.子程序 求内圆心, 坐标, , 
.参数 参三角形, 三角形, , 

.局部变量 直线, 类直线一般式, , , 

返回 (直线.两直线交点 ( [求角平分线A (参三角形)].直线,  [求角平分线B (参三角形)].直线))

.子程序 求外圆心, 坐标, , 
.参数 参三角形, 三角形, , 

.局部变量 线段AB, 线段, , , 
.局部变量 线段AC, 线段, , , 
.局部变量 二维线段, 类线段, , , 
.局部变量 直线, 类直线一般式, , , 

赋值 (线段AB.起点, 参三角形.顶点A)
赋值 (线段AB.尾点, 参三角形.顶点B)
赋值 (线段AC.起点, 参三角形.顶点A)
赋值 (线段AC.尾点, 参三角形.顶点C)
返回 (直线.两直线交点 ( [二维线段.旋转316 (线段AB, 二维线段.中点316 (线段AB), 相除 (#pi, 2))].直线,  [二维线段.旋转316 (线段AC, 二维线段.中点316 (线段AC), 相除 (#pi, 2))].直线))

.子程序 求内径r, 双精度小数型, , 
.参数 参三角形, 三角形, , 

.局部变量 二维点类, 类坐标, , , 
.局部变量 三角形信息, 三角形信息, , , 
.局部变量 半周长, 双精度小数型, , , 

赋值 (三角形信息.边长a, 二维点类.距离316 (参三角形.顶点B, 参三角形.顶点C))
赋值 (三角形信息.边长b, 二维点类.距离316 (参三角形.顶点C, 参三角形.顶点A))
赋值 (三角形信息.边长c, 二维点类.距离316 (参三角形.顶点A, 参三角形.顶点B))
赋值 (三角形信息.周长L, 相加 (三角形信息.边长a, 三角形信息.边长b, 三角形信息.边长c))
赋值 (半周长, 相除 (三角形信息.周长L, 2))
赋值 (三角形信息.面积S, 求平方根 (相乘 (半周长, 相减 (半周长, 三角形信息.边长a), 相减 (半周长, 三角形信息.边长b), 相减 (半周长, 三角形信息.边长c))))
赋值 (三角形信息.内径r, 相除 (三角形信息.面积S, 半周长))
返回 (三角形信息.内径r)

.子程序 求外径R, 双精度小数型, , 
.参数 参三角形, 三角形, , 

.局部变量 二维点类, 类坐标, , , 
.局部变量 三角形信息, 三角形信息, , , 
.局部变量 半周长, 双精度小数型, , , 

赋值 (三角形信息.边长a, 二维点类.距离316 (参三角形.顶点B, 参三角形.顶点C))
赋值 (三角形信息.边长b, 二维点类.距离316 (参三角形.顶点C, 参三角形.顶点A))
赋值 (三角形信息.边长c, 二维点类.距离316 (参三角形.顶点A, 参三角形.顶点B))
赋值 (三角形信息.周长L, 相加 (三角形信息.边长a, 三角形信息.边长b, 三角形信息.边长c))
赋值 (半周长, 相除 (三角形信息.周长L, 2))
赋值 (三角形信息.面积S, 求平方根 (相乘 (半周长, 相减 (半周长, 三角形信息.边长a), 相减 (半周长, 三角形信息.边长b), 相减 (半周长, 三角形信息.边长c))))
赋值 (三角形信息.外径R, 相除 (相乘 (三角形信息.边长a, 三角形信息.边长b, 三角形信息.边长c), 三角形信息.面积S, 4))
返回 (三角形信息.外径R)

.子程序 求周长L, 双精度小数型, , 
.参数 参三角形, 三角形, , 

.局部变量 二维点类, 类坐标, , , 

返回 (相加 (二维点类.距离316 (参三角形.顶点A, 参三角形.顶点B), 二维点类.距离316 (参三角形.顶点B, 参三角形.顶点C), 二维点类.距离316 (参三角形.顶点C, 参三角形.顶点A)))

.子程序 求面积S, 双精度小数型, , 
.参数 参三角形, 三角形, , 

.局部变量 二维点类, 类坐标, , , 
.局部变量 三角形信息, 三角形信息, , , 
.局部变量 半周长, 双精度小数型, , , 

赋值 (三角形信息.边长a, 二维点类.距离316 (参三角形.顶点B, 参三角形.顶点C))
赋值 (三角形信息.边长b, 二维点类.距离316 (参三角形.顶点C, 参三角形.顶点A))
赋值 (三角形信息.边长c, 二维点类.距离316 (参三角形.顶点A, 参三角形.顶点B))
赋值 (三角形信息.周长L, 相加 (三角形信息.边长a, 三角形信息.边长b, 三角形信息.边长c))
赋值 (半周长, 相除 (三角形信息.周长L, 2))
赋值 (三角形信息.面积S, 求平方根 (相乘 (半周长, 相减 (半周长, 三角形信息.边长a), 相减 (半周长, 三角形信息.边长b), 相减 (半周长, 三角形信息.边长c))))
返回 (三角形信息.面积S)

.子程序 求三角形信息, 三角形信息, , 
.参数 参三角形, 三角形, , 

.局部变量 半周长, 双精度小数型, , , 
.局部变量 弧度, 类弧度, , , 
.局部变量 点, 类坐标, , , 
.局部变量 二维线段, 类线段, , , 
.局部变量 三角形信息, 三角形信息, , , 

赋值 (三角形信息.边长a, 点.距离316 (参三角形.顶点B, 参三角形.顶点C))
赋值 (三角形信息.边长b, 点.距离316 (参三角形.顶点C, 参三角形.顶点A))
赋值 (三角形信息.边长c, 点.距离316 (参三角形.顶点A, 参三角形.顶点B))

赋值 (三角形信息.角A, 弧度.反余弦 (相除 (相减 (相加 (相乘 (三角形信息.边长b, 三角形信息.边长b), 相乘 (三角形信息.边长c, 三角形信息.边长c)), 相乘 (三角形信息.边长a, 三角形信息.边长a)), 相乘 (2, 三角形信息.边长b, 三角形信息.边长c))))
赋值 (三角形信息.角B, 弧度.反余弦 (相除 (相减 (相加 (相乘 (三角形信息.边长c, 三角形信息.边长c), 相乘 (三角形信息.边长a, 三角形信息.边长a)), 相乘 (三角形信息.边长b, 三角形信息.边长b)), 相乘 (2, 三角形信息.边长c, 三角形信息.边长a))))
赋值 (三角形信息.角C, 弧度.反余弦 (相除 (相减 (相加 (相乘 (三角形信息.边长a, 三角形信息.边长a), 相乘 (三角形信息.边长b, 三角形信息.边长b)), 相乘 (三角形信息.边长c, 三角形信息.边长c)), 相乘 (2, 三角形信息.边长a, 三角形信息.边长b))))

赋值 (三角形信息.边线AB.起点, 参三角形.顶点A)
赋值 (三角形信息.边线AB.尾点, 参三角形.顶点B)
二维线段.求直线316 (三角形信息.边线AB)
赋值 (三角形信息.边线BC.起点, 参三角形.顶点B)
赋值 (三角形信息.边线BC.尾点, 参三角形.顶点C)
二维线段.求直线316 (三角形信息.边线BC)
赋值 (三角形信息.边线CA.起点, 参三角形.顶点C)
赋值 (三角形信息.边线CA.尾点, 参三角形.顶点A)
二维线段.求直线316 (三角形信息.边线CA)

赋值 (三角形信息.高线A, 点.到线段垂线段316 (参三角形.顶点A, 三角形信息.边线BC))
二维线段.求直线316 (三角形信息.高线A)
赋值 (三角形信息.高线B, 点.到线段垂线段316 (参三角形.顶点B, 三角形信息.边线CA))
二维线段.求直线316 (三角形信息.高线B)
赋值 (三角形信息.高线C, 点.到线段垂线段316 (参三角形.顶点C, 三角形信息.边线AB))
二维线段.求直线316 (三角形信息.高线C)

赋值 (三角形信息.中线A.起点, 参三角形.顶点A)
赋值 (三角形信息.中线A.尾点, 点.中间点316 (参三角形.顶点B, 参三角形.顶点C))
二维线段.求直线316 (三角形信息.中线A)
赋值 (三角形信息.中线B.起点, 参三角形.顶点B)
赋值 (三角形信息.中线B.尾点, 点.中间点316 (参三角形.顶点C, 参三角形.顶点A))
二维线段.求直线316 (三角形信息.中线B)
赋值 (三角形信息.中线C.起点, 参三角形.顶点C)
赋值 (三角形信息.中线C.尾点, 点.中间点316 (参三角形.顶点A, 参三角形.顶点B))
二维线段.求直线316 (三角形信息.中线C)

赋值 (三角形信息.高线A, 点.到线段垂线段316 (参三角形.顶点A, 三角形信息.边线BC))
二维线段.求直线316 (三角形信息.高线A)
赋值 (三角形信息.高线B, 点.到线段垂线段316 (参三角形.顶点B, 三角形信息.边线CA))
二维线段.求直线316 (三角形信息.高线B)
赋值 (三角形信息.高线C, 点.到线段垂线段316 (参三角形.顶点C, 三角形信息.边线AB))
二维线段.求直线316 (三角形信息.高线C)

赋值 (三角形信息.中线A.起点, 参三角形.顶点A)
赋值 (三角形信息.中线A.尾点, 点.中间点316 (参三角形.顶点B, 参三角形.顶点C))
二维线段.求直线316 (三角形信息.中线A)
赋值 (三角形信息.中线B.起点, 参三角形.顶点B)
赋值 (三角形信息.中线B.尾点, 点.中间点316 (参三角形.顶点C, 参三角形.顶点A))
二维线段.求直线316 (三角形信息.中线B)
赋值 (三角形信息.中线C.起点, 参三角形.顶点C)
赋值 (三角形信息.中线C.尾点, 点.中间点316 (参三角形.顶点A, 参三角形.顶点B))
二维线段.求直线316 (三角形信息.中线C)

赋值 (三角形信息.角平分线A, 求角平分线A (参三角形))
赋值 (三角形信息.角平分线B, 求角平分线B (参三角形))
赋值 (三角形信息.角平分线C, 求角平分线C (参三角形))

赋值 (三角形信息.边垂点a, 点.到线段垂足点316 (参三角形.顶点A, 三角形信息.边线BC))
赋值 (三角形信息.边垂点b, 点.到线段垂足点316 (参三角形.顶点B, 三角形信息.边线CA))
赋值 (三角形信息.边垂点c, 点.到线段垂足点316 (参三角形.顶点C, 三角形信息.边线AB))

赋值 (三角形信息.边中点a, 点.中间点316 (参三角形.顶点B, 参三角形.顶点C))
赋值 (三角形信息.边中点b, 点.中间点316 (参三角形.顶点C, 参三角形.顶点A))
赋值 (三角形信息.边中点c, 点.中间点316 (参三角形.顶点A, 参三角形.顶点B))

赋值 (三角形信息.形心O, 二维线段.求比例分点316 (三角形信息.中线A, 2, 1))
赋值 (三角形信息.内圆心, 求内圆心 (参三角形))
赋值 (三角形信息.外圆心, 求外圆心 (参三角形))

赋值 (三角形信息.周长L, 相加 (三角形信息.边长a, 三角形信息.边长b, 三角形信息.边长c))
赋值 (半周长, 相除 (三角形信息.周长L, 2))
赋值 (三角形信息.面积S, 求平方根 (相乘 (半周长, 相减 (半周长, 三角形信息.边长a), 相减 (半周长, 三角形信息.边长b), 相减 (半周长, 三角形信息.边长c))))
赋值 (三角形信息.内径r, 相除 (三角形信息.面积S, 半周长))
赋值 (三角形信息.外径R, 相除 (相乘 (三角形信息.边长a, 三角形信息.边长b, 三角形信息.边长c), 三角形信息.面积S, 4))
返回 (三角形信息)

.类模块 类矩形, , , 

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 创建_四点, 矩形, , 
.参数 参第一点, 坐标, , 
.参数 参第二点, 坐标, , 
.参数 参第三点, 坐标, , 
.参数 参第四点, 坐标, , 
.参数 参极小值, 双精度小数型, 可空, 

.局部变量 二维点, 类坐标, , , 
.局部变量 矩形, 矩形, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束

赋值 (矩形.顶点A, 参第一点)
赋值 (矩形.顶点B, 参第二点)
赋值 (矩形.顶点C, 参第三点)
赋值 (矩形.顶点D, 参第四点)
.如果真 (并且 (小于 (取绝对值 (相减 (二维点.距离316 (矩形.顶点A, 矩形.顶点C), 二维点.距离316 (矩形.顶点B, 矩形.顶点D))), 参极小值), 小于 (取绝对值 (相减 (二维点.距离316 (矩形.顶点A, 矩形.顶点B), 二维点.距离316 (矩形.顶点C, 矩形.顶点D))), 参极小值), 小于 (取绝对值 (相减 (二维点.距离316 (矩形.顶点A, 矩形.顶点D), 二维点.距离316 (矩形.顶点B, 矩形.顶点C))), 参极小值)))
    赋值 (矩形.存在, 真)
.如果真结束
返回 (矩形)

.子程序 求形心, 坐标, , 
.参数 参矩形, 矩形, , 

.局部变量 形心, 坐标, , , 
.局部变量 二维点, 类坐标, , , 

返回 (二维点.中间点316 (二维点.中间点316 (参矩形.顶点A, 参矩形.顶点C), 二维点.中间点316 (参矩形.顶点B, 参矩形.顶点D)))

.子程序 求面积, 双精度小数型, , 
.参数 参矩形, 矩形, , 

.局部变量 形心, 坐标, , , 
.局部变量 二维点, 类坐标, , , 

.判断开始 (参矩形.存在)
    返回 (相乘 (二维点.距离316 (参矩形.顶点A, 参矩形.顶点B), 二维点.距离316 (参矩形.顶点B, 参矩形.顶点C)))
.默认
    信息框 (“不规范矩形，计算面积的代码还没有写。”, 0, )
    返回 (0)
.判断结束


.类模块 类圆, , , 

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 创建_一般式参数, 圆, 公开, 
.参数 参D, 双精度小数型, 可空, 
.参数 参E, 双精度小数型, 可空, 
.参数 参F, 双精度小数型, 可空, 

.局部变量 圆, 圆, , , 
.局部变量 判断式, 双精度小数型, , , 

赋值 (判断式, 相减 (相加 (相乘 (参D, 参D), 相乘 (参E, 参E)), 相乘 (4, 参F)))
赋值 (圆.D, 参D)
赋值 (圆.E, 参E)
赋值 (圆.F, 参F)
.判断开始 (小于 (判断式, 0))
     ' 不表示任何图形
    赋值 (圆.存在, 假)
.判断 (等于 (判断式, 0))
    赋值 (圆.存在, 真)
.默认
    赋值 (圆.半径, 相乘 (0.5, 求平方根 (判断式)))
    赋值 (圆.存在, 真)
.判断结束
赋值 (圆.圆心.x, 相除 (负 (参D), 2))
赋值 (圆.圆心.y, 相除 (负 (参E), 2))
返回 (圆)

.子程序 创建_圆心加半径, 圆, 公开, 
.参数 参圆心, 坐标, , 
.参数 参半径, 双精度小数型, , 不能提供负数，否则程序将自动去掉符号。

.局部变量 D, 双精度小数型, 静态, , 
.局部变量 E, 双精度小数型, 静态, , 
.局部变量 F, 双精度小数型, 静态, , 
.局部变量 圆, 圆, , , 

赋值 (圆.圆心, 参圆心)
赋值 (圆.半径, 取绝对值 (参半径))
赋值 (圆.D, 相乘 (负 (圆.圆心.x), 2))
赋值 (圆.E, 相乘 (负 (圆.圆心.y), 2))
赋值 (圆.F, 相除 (相减 (相加 (相乘 (圆.D, 圆.D), 相乘 (圆.E, 圆.E)), 求次方 (相乘 (圆.半径, 2), 2)), 4))
赋值 (圆.存在, 真)
返回 (圆)

.子程序 创建_圆心加直径, 圆, , 
.参数 参圆心, 坐标, , 
.参数 参直径, 双精度小数型, , 不能提供负数，否则程序将自动去掉符号。

返回 (创建_圆心加半径 (参圆心, 相除 (参直径, 2)))

.子程序 创建_圆心加周长, 圆, , 
.参数 参圆心, 坐标, , 
.参数 参周长, 双精度小数型, , 不能提供负数，否则程序将自动去掉符号。

返回 (创建_圆心加半径 (参圆心, 相除 (参周长, 2, #pi)))

.子程序 创建_圆心加面积, 圆, , 
.参数 参圆心, 坐标, , 
.参数 参面积, 双精度小数型, , 不能提供负数，否则程序将自动去掉符号。

返回 (创建_圆心加半径 (参圆心, 求平方根 (相除 (取绝对值 (参面积), #pi))))

.子程序 创建_圆心加与直线相切, 圆, 公开, 
.参数 参圆心, 坐标, , 
.参数 参直线, 直线一般式, , 

.局部变量 点与直线关系, 类关系_点与直线, , , 
.局部变量 点, 类坐标, , , 
.局部变量 半径, 双精度小数型, , , 
.局部变量 圆, 圆, , , 

赋值 (半径, 点.到直线垂距316 (参圆心, 参直线))
赋值 (圆, 创建_圆心加半径 (参圆心, 半径))
赋值 (圆.存在, 真)
返回 (圆)

.子程序 创建_二点共圆, 圆, , 
.参数 参第一点, 坐标, , 给定直径上的第一个端点
.参数 参第二点, 坐标, , 给定直径上的第二个端点

.局部变量 二维点, 类坐标, , , 

返回 (创建_圆心加半径 (二维点.中间点316 (参第一点, 参第二点), 相除 (二维点.距离316 (参第一点, 参第二点), 2)))

.子程序 创建_二点加与直线相切, 圆, , 两点连线与直线存在三种极端情况，重合时按两点方式创建假圆，垂直时按两点方式创建真圆，平行时按三点方式创建真圆。
.参数 参圆上第一点, 坐标, , 
.参数 参圆上第二点, 坐标, , 
.参数 参与圆相切的直线, 直线一般式, , 

.局部变量 直线, 类直线一般式, , , 

.判断开始 (直线.两直线重合 (参与圆相切的直线, 直线.创建直线_两点 (参圆上第一点, 参圆上第二点)))
    返回 (创建_三点共圆 (参圆上第一点, 参圆上第二点, 直线.两直线交点 (直线.创建直线_两点 (参圆上第一点, 参圆上第二点), 参与圆相切的直线), 假))
.默认
    返回 (创建_三点共圆 (参圆上第一点, 参圆上第二点, 直线.两直线交点 (直线.创建直线_两点 (参圆上第一点, 参圆上第二点), 参与圆相切的直线), 真))
.判断结束


.子程序 创建_三点共圆, 圆, 公开, 三点不能在一条直线上
.参数 参第一点, 坐标, , 
.参数 参第二点, 坐标, , 
.参数 参第三点, 坐标, , 
.参数 参三点在一条线上是按两点方式创建圆, 逻辑型, 可空, 按两点方式创建圆，并且以相距最远的两点为准。其实不管你是否同意，它都将按两点方式创建圆，只是圆的存在性不一样了。

.局部变量 二维点, 类坐标, , , 
.局部变量 三角形类, 类三角形, , , 
.局部变量 三角形, 三角形, , , 
.局部变量 d12, 双精度小数型, , , 
.局部变量 d13, 双精度小数型, , , 
.局部变量 d23, 双精度小数型, , , 
.局部变量 圆, 圆, , , 

赋值 (三角形, 三角形类.创建_三点 (参第一点, 参第二点, 参第三点))
.如果 (三角形.存在)
    返回 (创建_圆心加半径 (三角形类.求外圆心 (三角形), 三角形类.求外径R (三角形)))
.否则
    
    赋值 (d12, 二维点.距离316 (参第一点, 参第二点))
    赋值 (d13, 二维点.距离316 (参第一点, 参第三点))
    赋值 (d23, 二维点.距离316 (参第二点, 参第三点))
    .判断开始 (并且 (大于或等于 (d12, d13), 大于或等于 (d12, d23)))
        赋值 (圆, 创建_二点共圆 (参第一点, 参第二点))
    .判断 (大于或等于 (d13, d23))
        赋值 (圆, 创建_二点共圆 (参第一点, 参第三点))
    .默认
        赋值 (圆, 创建_二点共圆 (参第二点, 参第三点))
    .判断结束
    
    .判断开始 (参三点在一条线上是按两点方式创建圆)
        赋值 (圆.存在, 真)
    .默认
        赋值 (圆.存在, 假)
    .判断结束
    
    返回 (圆)
.如果结束


.子程序 创建_三角形内切, 圆, , 
.参数 参三角形, 三角形, , 应提供合法的三角形

.局部变量 三角形, 类三角形, , , 

返回 (创建_圆心加半径 (三角形.求内圆心 (参三角形), 三角形.求内径r (参三角形)))

.子程序 创建_三条直线相切, 圆, 公开, 三直线不能重合或平行。如果重合或平行，将以坐标原点为中心向这三条直线引垂线得到三个垂足点，然后以这三个垂足点为准，用三点方式创建圆
.参数 参第一直线, 直线一般式, , 
.参数 参第二直线, 直线一般式, , 
.参数 参第三直线, 直线一般式, , 
.参数 参允许三点方式创建圆, 逻辑型, 可空, 

.局部变量 二维点, 类坐标, , , 
.局部变量 三角形, 三角形, , , 
.局部变量 三角形类, 类三角形, , , 
.局部变量 圆, 圆, , , 

赋值 (三角形, 三角形类.创建_三条直线 (参第一直线, 参第二直线, 参第三直线))
.判断开始 (三角形.存在)
    返回 (创建_圆心加半径 (三角形类.求内圆心 (三角形), 三角形类.求内径r (三角形)))
.默认
    
    赋值 (圆, 创建_三点共圆 (二维点.到直线垂足点316 (参第一直线), 二维点.到直线垂足点316 (参第二直线), 二维点.到直线垂足点316 (参第三直线), ))
    .判断开始 (参允许三点方式创建圆)
        赋值 (圆.存在, 真)
    .默认
        赋值 (圆.存在, 假)
    .判断结束
    返回 (圆)
.判断结束


.子程序 创建_三条线段相切, 圆, 公开, 三直线不能重合或平行。如果重合或平行，将以坐标原点为中心向这三条直线引垂线得到三个垂足点，然后以这三个垂足点为准，用三点方式创建圆
.参数 参第一线段, 线段, , 
.参数 参第二线段, 线段, , 
.参数 参第三线段, 线段, , 
.参数 参允许三点方式创建圆, 逻辑型, 可空, 

.局部变量 二维点, 类坐标, , , 
.局部变量 三角形, 三角形, , , 
.局部变量 三角形类, 类三角形, , , 
.局部变量 圆, 圆, , , 

赋值 (三角形, 三角形类.创建_三条线段 (参第一线段, 参第二线段, 参第三线段, 真))
.判断开始 (三角形.存在)
    返回 (创建_圆心加半径 (三角形类.求内圆心 (三角形), 三角形类.求内径r (三角形)))
.默认
    
    赋值 (圆, 创建_三点共圆 (二维点.到直线垂足点316 (参第一线段), 二维点.到直线垂足点316 (参第二线段), 二维点.到直线垂足点316 (参第三线段), ))
    .判断开始 (参允许三点方式创建圆)
        赋值 (圆.存在, 真)
    .默认
        赋值 (圆.存在, 假)
    .判断结束
    返回 (圆)
.判断结束


.子程序 创建_三角形外接, 圆, , 
.参数 参三角形, 三角形, , 应提供合法的三角形

.局部变量 三角形类, 类三角形, , , 

返回 (创建_圆心加半径 (三角形类.求外圆心 (参三角形), 三角形类.求外径R (参三角形)))

.子程序 对称, 圆, , 
.参数 参被对称圆, 圆, , 
.参数 参对称参照点, 坐标, 可空, 

.局部变量 二维点, 类坐标, , , 

.判断开始 (是否为空 (参对称参照点))
    赋值 (参被对称圆.圆心, 二维点.对称316 (参被对称圆.圆心, ))
.默认
    赋值 (参被对称圆.圆心, 二维点.对称316 (参被对称圆.圆心, 参对称参照点))
.判断结束
返回 (参被对称圆)

.子程序 平移, 圆, , 
.参数 参被平移圆, 圆, , 
.参数 参坐标平移分量, 坐标, , 

.局部变量 二维点, 类坐标, , , 

赋值 (参被平移圆.圆心, 二维点.平移316 (参被平移圆.圆心, 参坐标平移分量))
返回 (参被平移圆)

.子程序 缩放, 圆, , 暂时不支持缩放操作，主要是解决方案没有想好。如果有不同的比例，将产生椭圆。
.参数 参被缩放的圆, 圆, , 
.参数 参缩放中心点, 坐标, 可空, 
.参数 参缩放比例, 坐标比例, , 


返回 (参被缩放的圆)

.子程序 旋转, 圆, , 
.参数 参被旋转的圆, 圆, , 
.参数 参旋转中心, 圆, 可空, 
.参数 参旋转角度, 双精度小数型, , 

.局部变量 二维点, 类坐标, , , 

.判断开始 (是否为空 (参旋转中心))
    赋值 (参被旋转的圆.圆心, 二维点.旋转316 (参被旋转的圆.圆心, , 参旋转角度))
.默认
    赋值 (参被旋转的圆.圆心, 二维点.旋转316 (参被旋转的圆.圆心, 参旋转中心, 参旋转角度))
.判断结束
返回 (参被旋转的圆)

.子程序 前进, 圆, , 
.参数 参圆, 圆, , 
.参数 参前进量, 双精度小数型, , 

.局部变量 二维点, 类坐标, , , 

赋值 (参圆.圆心, 二维点.前进316 (参圆.圆心, 参前进量))
返回 (参圆)

.子程序 后退, 圆, , 
.参数 参圆, 圆, , 
.参数 参前进量, 双精度小数型, , 

.局部变量 二维点, 类坐标, , , 

赋值 (参圆.圆心, 二维点.后退316 (参圆.圆心, 参前进量))
返回 (参圆)

.子程序 远离, 圆, , 
.参数 参被移动圆, 圆, , 
.参数 参相对点, 坐标, 可空, 
.参数 参移动量, 双精度小数型, , 

.局部变量 二维点, 类坐标, , , 

.判断开始 (是否为空 (参相对点))
    赋值 (参被移动圆.圆心, 二维点.远离316 (参被移动圆.圆心, , 参移动量))
.默认
    赋值 (参被移动圆.圆心, 二维点.远离316 (参被移动圆.圆心, 参相对点, 参移动量))
.判断结束
返回 (参被移动圆)

.子程序 靠近, 圆, , 
.参数 参被移动圆, 圆, , 
.参数 参相对点, 坐标, 可空, 
.参数 参移动量, 双精度小数型, , 

.局部变量 二维点, 类坐标, , , 

.判断开始 (是否为空 (参相对点))
    赋值 (参被移动圆.圆心, 二维点.靠近316 (参被移动圆.圆心, , 参移动量))
.默认
    赋值 (参被移动圆.圆心, 二维点.靠近316 (参被移动圆.圆心, 参相对点, 参移动量))
.判断结束
返回 (参被移动圆)

.子程序 偏离, 圆, , 
.参数 参被移动圆, 圆, , 
.参数 参相对点, 坐标, 可空, 
.参数 参角度, 双精度小数型, 可空, 
.参数 参移动量, 双精度小数型, , 

.局部变量 二维点, 类坐标, , , 

.判断开始 (是否为空 (参相对点))
    赋值 (参被移动圆.圆心, 二维点.偏离316 (参被移动圆.圆心, , 参角度, 参移动量))
.默认
    赋值 (参被移动圆.圆心, 二维点.偏离316 (参被移动圆.圆心, 参相对点, 参角度, 参移动量))
.判断结束
返回 (参被移动圆)

.子程序 平移_定向, 圆, , 
.参数 参被移动圆, 圆, , 
.参数 参方位角, 双精度小数型, 可空, 
.参数 参移动量, 双精度小数型, , 

.局部变量 二维点, 类坐标, , , 

赋值 (参被移动圆.圆心, 二维点.平移_定向316 (参被移动圆.圆心, 参方位角, 参移动量))
返回 (参被移动圆)

.子程序 平移_两点定向, 圆, , 
.参数 参被移动圆, 圆, , 
.参数 参方向基点, 坐标, , 
.参数 参方向目标点, 坐标, , 
.参数 参移动量, 双精度小数型, , 

.局部变量 二维点, 类坐标, , , 

赋值 (参被移动圆.圆心, 二维点.平移_两点定向316 (参被移动圆.圆心, 参方向基点, 参方向目标点, 参移动量))
返回 (参被移动圆)

.子程序 对称于X轴, 圆, , 
.参数 参被移动圆, 圆, , 

.局部变量 二维点, 类坐标, , , 

赋值 (参被移动圆.圆心, 二维点.对称于X轴316 (参被移动圆.圆心))
返回 (参被移动圆)

.子程序 对称于Y轴, 圆, , 
.参数 参被移动圆, 圆, , 

.局部变量 二维点, 类坐标, , , 

赋值 (参被移动圆.圆心, 二维点.对称于Y轴316 (参被移动圆.圆心))
返回 (参被移动圆)

.子程序 对称于两点, 圆, , 
.参数 参被移动圆, 圆, , 
.参数 参相对点1, 坐标, , 
.参数 参相对点2, 坐标, , 

.局部变量 二维点, 类坐标, , , 

赋值 (参被移动圆.圆心, 二维点.对称于两点316 (参被移动圆.圆心, 参相对点1, 参相对点2))
返回 (参被移动圆)

.子程序 对称于线段, 圆, , 
.参数 参被移动圆, 圆, , 
.参数 参对称轴线段, 线段, , 

.局部变量 二维点, 类坐标, , , 

赋值 (参被移动圆.圆心, 二维点.对称于线段316 (参被移动圆.圆心, 参对称轴线段))
返回 (参被移动圆)

.子程序 对称于直线, 圆, , 
.参数 参被移动圆, 圆, , 
.参数 参对称轴直线, 直线一般式, , 

.局部变量 二维点, 类坐标, , , 

赋值 (参被移动圆.圆心, 二维点.对称于直线316 (参被移动圆.圆心, 参对称轴直线))
返回 (参被移动圆)

.类模块 类圆弧, , , 

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.类模块 类关系_点与直线, , , 

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 点与直线关系, 整数型, , 点与线段的关系，和点与直线的关系的区别在于，线段是有限长的，所以即使点在线段所在的直线上，也有可能不在线段上。另一方面，线段是有方向的，所以点可能在线段前进方向的某一侧或左或右，而直线是没有方向的，所以点在直线的一侧时不能用左右来表达。
.参数 参点, 坐标, , 
.参数 参直线, 直线一般式, , 如果所提供的直线参数错误，将返回-1
.参数 参极小值, 双精度小数型, 可空, 小于该值，就当成零处理。如果未提供此参数，默认为1e-005。一般情况不必理会此参数。请提供极小的正数。

.局部变量 二维点, 类坐标, , , 
.局部变量 二维线段, 类线段, , , 
.局部变量 二维直线, 类直线一般式, , , 
.局部变量 极小值, 双精度小数型, , , 
.局部变量 线段, 线段, , , 
.局部变量 线段方位角, 双精度小数型, , , 
.局部变量 坐标, 坐标, , , 
.局部变量 平移量, 坐标, , , 
.局部变量 x, 双精度小数型, , , 
.局部变量 y, 双精度小数型, , , 

.如果 (是否为空 (参极小值))
    赋值 (极小值, #零5)
.否则
    赋值 (极小值, 参极小值)
.如果结束

 ' 首先要求得直线的方位角，然后将坐标系旋转至X轴正方向与直线前进方向重合，
 ' 然后检查点的Y值是正值还是负值，如果是正值，说明是在直线的左边，如果是负值，说明是在直线的右边。
 ' 如果是零值，说明是在直线上。

 ' 由于直线没有给定端点，所以必须指定一个端点，以便进行坐标变换。
.判断开始 (并且 (等于 (参直线.A, 0), 等于 (参直线.B, 0)))
     ' 直线不存在，无法判断关系，返回-1作无意义值。
    返回 (-1)
.判断 (等于 (参直线.A, 0))
     ' 说明Y值为一个常数，只要计算出Y值就行了。
    赋值 (y, 相减 (参点.y, 二维直线.求Y (参直线, 0)))
    .判断开始 (小于 (取绝对值 (y), 极小值))
        返回 (#点与直线_点在直线上)
    .判断 (大于 (y, 0))
        返回 (#点与直线_点在直线左侧)
         ' 由于直线与X轴平行，所以参照X轴的前进方向，返回在直线左侧的判断。
    .默认
        返回 (#点与直线_点在直线右侧)
    .判断结束
    
.判断 (等于 (参直线.B, 0))
     ' 说明X值为一个常数，只要计算出X值就行了。
    赋值 (x, 相减 (参点.x, 二维直线.求X (参直线)))
    .判断开始 (小于 (取绝对值 (x), 极小值))
        返回 (#点与直线_点在直线上)
    .判断 (大于 (x, 0))
        返回 (#点与直线_点在直线右侧)
         ' 由于直线与Y轴平行，所以参照Y轴的前进方向，返回在直线左侧的判断。
    .默认
        返回 (#点与直线_点在直线左侧)
    .判断结束
    
.默认
    赋值 (线段.起点.x, 0) ' 由于A，B都不等于零，所以这样定义是合法的。
    赋值 (线段.起点.y, 二维直线.求Y (参直线, 线段.起点.x))
    赋值 (线段.尾点.x, 1000000) ' 给定一个较大值，可以求得比较精确的小数位。
    赋值 (线段.尾点.y, 二维直线.求Y (参直线, 线段.尾点.x))
    赋值 (线段方位角, 二维线段.求方位角316 (线段))
     ' 平移坐标系到转动中心
    赋值 (平移量.x, 负 (线段.起点.x))
    赋值 (平移量.y, 负 (线段.起点.y))
    赋值 (坐标, 二维点.平移316 (参点, 平移量))
     ' 旋转点
    赋值 (坐标, 二维点.旋转316 (坐标, , 负 (线段方位角)))
    .判断开始 (小于 (取绝对值 (坐标.y), 极小值))
         ' 要严格地等于零，在浮点计算方式下几乎是不可能的，所以只要小于某个值，就认为等于零了，就认为在直线上。
        返回 (#点与直线_点在直线上)
    .判断 (大于 (坐标.y, 0))
        返回 (#点与直线_点在直线左侧)
    .默认
        返回 (#点与直线_点在直线右侧)
    .判断结束
    
.判断结束


.子程序 点在直线上, 逻辑型, , 点与直线的关系，理论上有二种情况，即在直线上或不在直线上。如果将直线看成有方向的线，将X轴和Y轴正方向看成直线的正方向，点与直线的关系就有三种情况，即在直线上，在直线左，在直线右。
.参数 参点, 坐标, , 
.参数 参直线, 直线一般式, , 如果所提供的直线参数错误，将返回假
.参数 参极小值, 双精度小数型, 可空, 小于该值，就当成零处理。如果未提供此参数，默认为1e-005。一般情况不必理会此参数。请提供极小的正数。如果欲使计算结果偏向于在直线上，可提供较大的数值；如果欲使计算结果偏向于不在直线上，可提供较小的数值。

.局部变量 关系, 双精度小数型, , , 

.判断开始 (是否为空 (参极小值))
    赋值 (关系, 点与直线关系 (参点, 参直线, ))
.默认
    赋值 (关系, 点与直线关系 (参点, 参直线, 参极小值))
.判断结束

.判断开始 (等于 (关系, #点与直线_点在直线上))
    返回 (真)
.默认
    返回 (假)
.判断结束


.子程序 点在直线左侧, 逻辑型, , 点与直线的关系，理论上有二种情况，即在直线上或不在直线上。如果将直线看成有方向的线，将X轴和Y轴正方向看成直线的正方向，点与直线的关系就有三种情况，即在直线上，在直线左，在直线右。
.参数 参点, 坐标, , 
.参数 参直线, 直线一般式, , 如果所提供的直线参数错误，将返回假
.参数 参极小值, 双精度小数型, 可空, 小于该值，就当成零处理。如果未提供此参数，默认为1e-005。一般情况不必理会此参数。请提供极小的正数。如果欲使计算结果偏向于在直线左侧，可提供较小的数值；如果欲使计算结果偏向于不在直线左侧，可提供较大的数值。

.局部变量 关系, 双精度小数型, , , 

.判断开始 (是否为空 (参极小值))
    赋值 (关系, 点与直线关系 (参点, 参直线, ))
.默认
    赋值 (关系, 点与直线关系 (参点, 参直线, 参极小值))
.判断结束

.判断开始 (等于 (关系, #点与直线_点在直线左侧))
    返回 (真)
.默认
    返回 (假)
.判断结束


.子程序 点在直线右侧, 逻辑型, , 点与直线的关系，理论上有二种情况，即在直线上或不在直线上。如果将直线看成有方向的线，将X轴和Y轴正方向看成直线的正方向，点与直线的关系就有三种情况，即在直线上，在直线左，在直线右。
.参数 参点, 坐标, , 
.参数 参直线, 直线一般式, , 如果所提供的直线参数错误，将返回假
.参数 参极小值, 双精度小数型, 可空, 小于该值，就当成零处理。如果未提供此参数，默认为1e-005。一般情况不必理会此参数。请提供极小的正数。如果欲使计算结果偏向于在直线右侧，可提供较小的数值；如果欲使计算结果偏向于不在直线右侧，可提供较大的数值。

.局部变量 关系, 双精度小数型, , , 

.判断开始 (是否为空 (参极小值))
    赋值 (关系, 点与直线关系 (参点, 参直线, ))
.默认
    赋值 (关系, 点与直线关系 (参点, 参直线, 参极小值))
.判断结束

.判断开始 (等于 (关系, #点与直线_点在直线右侧))
    返回 (真)
.默认
    返回 (假)
.判断结束


.类模块 类关系_点与线段, , , 

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 点与线段关系, 整数型, , 特别注意：左侧和右侧都有正侧和斜侧的区别。点与线段的关系，理论上有九种情况，即点在线段上、前、后、左、右、左前、右前、左后、右后。即用垂线将线段周围的空间分成了八个区间，再加上线段自身所在区间，共九种情况。这九种情况还可以组合成复合情况。。点与线段的关系，和点与直线的关系的区别在于，线段是有限长的，所以即使点在线段所在的直线上，也有可能不在线段上。另一方面，线段是有方向的，所以点可能在线段前进方向的某一侧或左或右，而直线是没有方向的，所以点在直线的一侧时不能用左右来表达。
.参数 参点, 坐标, , 点与线段的关系，由于担心浮小算术的影响，总是尽可能地偏向于判断为靠近线段，在线段上，而不是偏向于离得更远。
.参数 参线段, 线段, , 
.参数 参极小值, 双精度小数型, 可空, 小于该值，就当成零处理。如果未提供此参数，默认为1e-005。一般情况不必理会此参数。请提供极小的正数。

.局部变量 二维点, 类坐标, , , 
.局部变量 二维线段, 类线段, , , 
.局部变量 二维直线, 类直线一般式, , , 
.局部变量 极小值, 双精度小数型, , , 
.局部变量 线段方位角, 双精度小数型, , , 
.局部变量 平移量, 坐标, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (极小值, #零5)
.否则
    赋值 (极小值, 参极小值)
.如果结束
 ' ---------------------------------------------------平移坐标系-------------------------------------------------------------------------
 ' 平移坐标系到转动中心
赋值 (平移量, 二维点.对称316 (参线段.起点))
赋值 (参线段.起点, 二维点.平移316 (参线段.起点, 平移量))
赋值 (参线段.尾点, 二维点.平移316 (参线段.尾点, 平移量))
赋值 (参点, 二维点.平移316 (参点, 平移量))
 ' ---------------------------------------------------旋转坐标系-------------------------------------------------------------------------
 ' 首先要求得直线的方位角，然后将坐标系旋转至X轴正方向与直线前进方向重合，
 ' 然后检查点的Y值是正值还是负值，如果是正值，说明是在直线的左边，如果是负值，说明是在直线的右边。 如果是零值，说明是在直线上。
赋值 (线段方位角, 二维线段.求方位角316 (参线段))
赋值 (参线段.尾点, 二维点.旋转316 (参线段.尾点, , 负 (线段方位角)))
赋值 (参点, 二维点.旋转316 (参点, , 负 (线段方位角)))
 ' ---------------------------------------------------开始判断关系-------------------------------------------------------------------------
.判断开始 (小于 (取绝对值 (参点.y), 极小值))
     ' 要严格地等于零，在浮点计算方式下几乎是不可能的，所以只要小于某个值，就认为等于零了，就认为在直线上。
     ' 但在直线上不等同于在线段上，所以要增加是否在线段上的判断。
    .判断开始 (小于 (参点.x, 负 (极小值)))
         ' 浮点计算时，尽量偏向于落在线段上的判断。由于四舍五入的原因，有可能出现理论上应该落在X正轴，而实际计算结果确落在了负轴上。
        返回 (#点与线段_点在线段正后面)
    .判断 (大于 (参点.x, 相加 (参线段.尾点.x, 极小值)))
        返回 (#点与线段_点在线段正前面)
    .默认
        返回 (#点与线段_点在线段上)
    .判断结束
    
.判断 (大于 (参点.y, 0))
    .判断开始 (小于 (参点.x, 负 (极小值)))
        返回 (#点与线段_点在线段左后侧)
    .判断 (大于 (参点.x, 相加 (参线段.尾点.x, 极小值)))
        返回 (#点与线段_点在线段左前侧)
    .默认
        返回 (#点与线段_点在线段左正侧)
    .判断结束
    
.默认
     ' 参点.y < 0
    .判断开始 (小于 (参点.x, 负 (极小值)))
        返回 (#点与线段_点在线段右后侧)
    .判断 (大于 (参点.x, 相加 (参线段.尾点.x, 极小值)))
        返回 (#点与线段_点在线段右前侧)
    .默认
        返回 (#点与线段_点在线段右正侧)
    .判断结束
    
.判断结束


.子程序 点在线段上, 逻辑型, , 点与线段的关系，理论上有九种情况，即点在线段上、前、后、左、右、左前、右前、左后、右后。即用垂线将线段周围的空间分成了八个区间，再加上线段自身所在区间，共九种情况。这九种情况还可以组合成复合情况。
.参数 参点, 坐标, , 点与线段的关系，由于担心浮小算术的影响，总是尽可能地偏向于判断为靠近线段，在线段上，而不是偏向于离得更远。
.参数 参线段, 线段, , 
.参数 参极小值, 双精度小数型, 可空, 小于该值，就当成零处理。如果未提供此参数，默认为1e-005。一般情况不必理会此参数。请提供极小的正数。如果欲使计算结果偏向于在线段上，可提供较大的数值；如果欲使计算结果偏向于不在线段上，可提供较小的数值。

.局部变量 点坐标, 坐标, , , 
.局部变量 线段, 线段, , , 
.局部变量 二维点, 类坐标, , , 
.局部变量 二维线段, 类线段, , , 
.局部变量 极小值, 双精度小数型, , , 
.局部变量 线段方位角, 双精度小数型, , , 
.局部变量 平移量, 坐标, , , 
.局部变量 度, 双精度小数型, , , 

赋值 (线段, 参线段)
赋值 (点坐标, 参点)
 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (极小值, #零5)
.否则
    赋值 (极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------平移坐标系-------------------------------------------------------------------------
赋值 (平移量, 二维点.对称316 (线段.起点))
赋值 (线段.起点, 二维点.平移316 (线段.起点, 平移量))
赋值 (线段.尾点, 二维点.平移316 (线段.尾点, 平移量))
赋值 (点坐标, 二维点.平移316 (点坐标, 平移量))
 ' ---------------------------------------------------旋转坐标系-------------------------------------------------------------------------
赋值 (线段方位角, 二维线段.求方位角316 (线段))
赋值 (线段.尾点, 二维点.旋转316 (线段.尾点, , 负 (线段方位角)))
赋值 (点坐标, 二维点.旋转316 (点坐标, , 负 (线段方位角)))
 ' ---------------------------------------------------开始判断关系-------------------------------------------------------------------------
.判断开始 (并且 (小于或等于 (取绝对值 (点坐标.y), 极小值), 小于或等于 (相减 (线段.起点.x, 极小值), 点坐标.x), 小于或等于 (点坐标.x, 相加 (线段.尾点.x, 极小值))))
    返回 (真)
.默认
    返回 (假)
.判断结束


.子程序 点在线段前面, 逻辑型, , 点与线段的关系，理论上有九种情况，即点在线段上、前、后、左、右、左前、右前、左后、右后。即用垂线将线段周围的空间分成了八个区间，再加上线段自身所在区间，共九种情况。这九种情况还可以组合成复合情况。
.参数 参点, 坐标, , 点与线段的关系，由于担心浮小算术的影响，总是尽可能地偏向于判断为靠近线段，在线段上，而不是偏向于离得更远。
.参数 参线段, 线段, , 
.参数 参极小值, 双精度小数型, 可空, 小于该值，就当成零处理。如果未提供此参数，默认为1e-005。一般情况不必理会此参数。请提供极小的正数。如果欲使计算结果偏向于在线段前面，可提供较小的数值；如果欲使计算结果偏向于不在线段前面，可提供较大的数值。

.局部变量 二维点, 类坐标, , , 
.局部变量 二维线段, 类线段, , , 
.局部变量 极小值, 双精度小数型, , , 
.局部变量 线段方位角, 双精度小数型, , , 
.局部变量 平移量, 坐标, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (极小值, #零5)
.否则
    赋值 (极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------平移坐标系-------------------------------------------------------------------------
赋值 (平移量, 二维点.对称316 (参线段.起点))
赋值 (参线段.起点, 二维点.平移316 (参线段.起点, 平移量))
赋值 (参线段.尾点, 二维点.平移316 (参线段.尾点, 平移量))
赋值 (参点, 二维点.平移316 (参点, 平移量))
 ' ---------------------------------------------------旋转坐标系-------------------------------------------------------------------------
赋值 (线段方位角, 二维线段.求方位角316 (参线段))
赋值 (参线段.尾点, 二维点.旋转316 (参线段.尾点, , 负 (线段方位角)))
赋值 (参点, 二维点.旋转316 (参点, , 负 (线段方位角)))
 ' ---------------------------------------------------开始判断关系-------------------------------------------------------------------------
.判断开始 (大于 (参点.x, 相加 (参线段.尾点.x, 极小值)))
    返回 (真)
.默认
    返回 (假)
.判断结束


.子程序 点在线段后面, 逻辑型, , 点与线段的关系，理论上有九种情况，即点在线段上、前、后、左、右、左前、右前、左后、右后。即用垂线将线段周围的空间分成了八个区间，再加上线段自身所在区间，共九种情况。这九种情况还可以组合成复合情况。
.参数 参点, 坐标, , 点与线段的关系，由于担心浮小算术的影响，总是尽可能地偏向于判断为靠近线段，在线段上，而不是偏向于离得更远。
.参数 参线段, 线段, , 
.参数 参极小值, 双精度小数型, 可空, 小于该值，就当成零处理。如果未提供此参数，默认为1e-005。一般情况不必理会此参数。请提供极小的正数。如果欲使计算结果偏向于在线段后面，可提供较小的数值；如果欲使计算结果偏向于不在线段后面，可提供较大的数值。

.局部变量 二维点, 类坐标, , , 
.局部变量 二维线段, 类线段, , , 
.局部变量 极小值, 双精度小数型, , , 
.局部变量 线段方位角, 双精度小数型, , , 
.局部变量 平移量, 坐标, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (极小值, #零5)
.否则
    赋值 (极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------平移坐标系-------------------------------------------------------------------------
赋值 (平移量, 二维点.对称316 (参线段.起点))
赋值 (参线段.起点, 二维点.平移316 (参线段.起点, 平移量))
赋值 (参线段.尾点, 二维点.平移316 (参线段.尾点, 平移量))
赋值 (参点, 二维点.平移316 (参点, 平移量))
 ' ---------------------------------------------------旋转坐标系-------------------------------------------------------------------------
赋值 (线段方位角, 二维线段.求方位角316 (参线段))
赋值 (参线段.尾点, 二维点.旋转316 (参线段.尾点, , 负 (线段方位角)))
赋值 (参点, 二维点.旋转316 (参点, , 负 (线段方位角)))
 ' ---------------------------------------------------开始判断关系-------------------------------------------------------------------------
.判断开始 (小于 (参点.x, 负 (极小值)))
    返回 (真)
.默认
    返回 (假)
.判断结束


.子程序 点在线段左面, 逻辑型, , 点与线段的关系，理论上有九种情况，即点在线段上、前、后、左、右、左前、右前、左后、右后。即用垂线将线段周围的空间分成了八个区间，再加上线段自身所在区间，共九种情况。这九种情况还可以组合成复合情况。
.参数 参点, 坐标, , 点与线段的关系，由于担心浮小算术的影响，总是尽可能地偏向于判断为靠近线段，在线段上，而不是偏向于离得更远。
.参数 参线段, 线段, , 
.参数 参极小值, 双精度小数型, 可空, 小于该值，就当成零处理。如果未提供此参数，默认为1e-005。一般情况不必理会此参数。请提供极小的正数。如果欲使计算结果偏向于在线段左面，可提供较小的数值；如果欲使计算结果偏向于不在线段左面，可提供较大的数值。

.局部变量 二维点, 类坐标, , , 
.局部变量 二维线段, 类线段, , , 
.局部变量 极小值, 双精度小数型, , , 
.局部变量 线段方位角, 双精度小数型, , , 
.局部变量 平移量, 坐标, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (极小值, #零5)
.否则
    赋值 (极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------平移坐标系-------------------------------------------------------------------------
赋值 (平移量, 二维点.对称316 (参线段.起点))
赋值 (参线段.起点, 二维点.平移316 (参线段.起点, 平移量))
赋值 (参线段.尾点, 二维点.平移316 (参线段.尾点, 平移量))
赋值 (参点, 二维点.平移316 (参点, 平移量))
 ' ---------------------------------------------------旋转坐标系-------------------------------------------------------------------------
赋值 (线段方位角, 二维线段.求方位角316 (参线段))
赋值 (参线段.尾点, 二维点.旋转316 (参线段.尾点, , 负 (线段方位角)))
赋值 (参点, 二维点.旋转316 (参点, , 负 (线段方位角)))
 ' ---------------------------------------------------开始判断关系-------------------------------------------------------------------------
.判断开始 (并且 (大于 (取绝对值 (参点.y), 极小值), 大于 (参点.y, 0)))
    返回 (真)
.默认
    返回 (假)
.判断结束


.子程序 点在线段右面, 逻辑型, , 点与线段的关系，理论上有九种情况，即点在线段上、前、后、左、右、左前、右前、左后、右后。即用垂线将线段周围的空间分成了八个区间，再加上线段自身所在区间，共九种情况。这九种情况还可以组合成复合情况。
.参数 参点, 坐标, , 点与线段的关系，由于担心浮小算术的影响，总是尽可能地偏向于判断为靠近线段，在线段上，而不是偏向于离得更远。
.参数 参线段, 线段, , 
.参数 参极小值, 双精度小数型, 可空, 小于该值，就当成零处理。如果未提供此参数，默认为1e-005。一般情况不必理会此参数。请提供极小的正数。如果欲使计算结果偏向于在线段右面，可提供较小的数值；如果欲使计算结果偏向于不在线段右面，可提供较大的数值。

.局部变量 二维点, 类坐标, , , 
.局部变量 二维线段, 类线段, , , 
.局部变量 极小值, 双精度小数型, , , 
.局部变量 线段方位角, 双精度小数型, , , 
.局部变量 平移量, 坐标, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (极小值, #零5)
.否则
    赋值 (极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------平移坐标系-------------------------------------------------------------------------
赋值 (平移量, 二维点.对称316 (参线段.起点))
赋值 (参线段.起点, 二维点.平移316 (参线段.起点, 平移量))
赋值 (参线段.尾点, 二维点.平移316 (参线段.尾点, 平移量))
赋值 (参点, 二维点.平移316 (参点, 平移量))

 ' ---------------------------------------------------旋转坐标系-------------------------------------------------------------------------
赋值 (线段方位角, 二维线段.求方位角316 (参线段))
赋值 (参线段.尾点, 二维点.旋转316 (参线段.尾点, , 负 (线段方位角)))
赋值 (参点, 二维点.旋转316 (参点, , 负 (线段方位角)))
 ' ---------------------------------------------------开始判断关系-------------------------------------------------------------------------
.判断开始 (并且 (大于 (取绝对值 (参点.y), 极小值), 小于 (参点.y, 0)))
    返回 (真)
.默认
    返回 (假)
.判断结束


.子程序 点在线段正前面, 逻辑型, , 点与线段的关系，理论上有九种情况，即点在线段上、前、后、左、右、左前、右前、左后、右后。即用垂线将线段周围的空间分成了八个区间，再加上线段自身所在区间，共九种情况。这九种情况还可以组合成复合情况。
.参数 参点, 坐标, , 点与线段的关系，由于担心浮小算术的影响，总是尽可能地偏向于判断为靠近线段，在线段上，而不是偏向于离得更远。
.参数 参线段, 线段, , 
.参数 参极小值, 双精度小数型, 可空, 小于该值，就当成零处理。如果未提供此参数，默认为1e-005。一般情况不必理会此参数。请提供极小的正数。如果欲使计算结果偏向于在线段正前面，可提供较小的数值；如果欲使计算结果偏向于不在线段正前面，可提供较大的数值。

.局部变量 二维点, 类坐标, , , 
.局部变量 二维线段, 类线段, , , 
.局部变量 极小值, 双精度小数型, , , 
.局部变量 线段方位角, 双精度小数型, , , 
.局部变量 平移量, 坐标, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (极小值, #零5)
.否则
    赋值 (极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------平移坐标系-------------------------------------------------------------------------
赋值 (平移量, 二维点.对称316 (参线段.起点))
赋值 (参线段.起点, 二维点.平移316 (参线段.起点, 平移量))
赋值 (参线段.尾点, 二维点.平移316 (参线段.尾点, 平移量))
赋值 (参点, 二维点.平移316 (参点, 平移量))
 ' ---------------------------------------------------旋转坐标系-------------------------------------------------------------------------
赋值 (线段方位角, 二维线段.求方位角316 (参线段))
赋值 (参线段.尾点, 二维点.旋转316 (参线段.尾点, , 负 (线段方位角)))
赋值 (参点, 二维点.旋转316 (参点, , 负 (线段方位角)))
 ' ---------------------------------------------------开始判断关系-------------------------------------------------------------------------
.判断开始 (并且 (小于或等于 (取绝对值 (参点.y), 极小值), 大于 (参点.x, 相加 (参线段.尾点.x, 极小值))))
    返回 (真)
.默认
    返回 (假)
.判断结束


.子程序 点在线段正后面, 逻辑型, , 点与线段的关系，理论上有九种情况，即点在线段上、前、后、左、右、左前、右前、左后、右后。即用垂线将线段周围的空间分成了八个区间，再加上线段自身所在区间，共九种情况。这九种情况还可以组合成复合情况。
.参数 参点, 坐标, , 点与线段的关系，由于担心浮小算术的影响，总是尽可能地偏向于判断为靠近线段，在线段上，而不是偏向于离得更远。
.参数 参线段, 线段, , 
.参数 参极小值, 双精度小数型, 可空, 小于该值，就当成零处理。如果未提供此参数，默认为1e-005。一般情况不必理会此参数。请提供极小的正数。如果欲使计算结果偏向于在线段正后面，可提供较小的数值；如果欲使计算结果偏向于不在线段正后面，可提供较大的数值。

.局部变量 二维点, 类坐标, , , 
.局部变量 二维线段, 类线段, , , 
.局部变量 极小值, 双精度小数型, , , 
.局部变量 线段方位角, 双精度小数型, , , 
.局部变量 平移量, 坐标, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (极小值, #零5)
.否则
    赋值 (极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------平移坐标系-------------------------------------------------------------------------
赋值 (平移量, 二维点.对称316 (参线段.起点))
赋值 (参线段.起点, 二维点.平移316 (参线段.起点, 平移量))
赋值 (参线段.尾点, 二维点.平移316 (参线段.尾点, 平移量))
赋值 (参点, 二维点.平移316 (参点, 平移量))
 ' ---------------------------------------------------旋转坐标系-------------------------------------------------------------------------
赋值 (线段方位角, 二维线段.求方位角316 (参线段))
赋值 (参线段.尾点, 二维点.旋转316 (参线段.尾点, , 负 (线段方位角)))
赋值 (参点, 二维点.旋转316 (参点, , 负 (线段方位角)))
 ' ---------------------------------------------------开始判断关系-------------------------------------------------------------------------
.判断开始 (并且 (小于或等于 (取绝对值 (参点.y), 极小值), 小于 (参点.x, 相加 (参线段.起点.x, 极小值))))
    返回 (真)
.默认
    返回 (假)
.判断结束


.子程序 点在线段左正侧, 逻辑型, , 点与线段的关系，理论上有九种情况，即点在线段上、前、后、左、右、左前、右前、左后、右后。即用垂线将线段周围的空间分成了八个区间，再加上线段自身所在区间，共九种情况。这九种情况还可以组合成复合情况。
.参数 参点, 坐标, , 点与线段的关系，由于担心浮小算术的影响，总是尽可能地偏向于判断为靠近线段，在线段上，而不是偏向于离得更远。
.参数 参线段, 线段, , 
.参数 参极小值, 双精度小数型, 可空, 小于该值，就当成零处理。如果未提供此参数，默认为1e-005。一般情况不必理会此参数。请提供极小的正数。如果欲使计算结果偏向于在线段左正侧，可提供较小的数值；如果欲使计算结果偏向于不在线段左正侧，可提供较大的数值。

.局部变量 二维点, 类坐标, , , 
.局部变量 二维线段, 类线段, , , 
.局部变量 极小值, 双精度小数型, , , 
.局部变量 线段方位角, 双精度小数型, , , 
.局部变量 平移量, 坐标, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (极小值, #零5)
.否则
    赋值 (极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------平移坐标系-------------------------------------------------------------------------
赋值 (平移量, 二维点.对称316 (参线段.起点))
赋值 (参线段.起点, 二维点.平移316 (参线段.起点, 平移量))
赋值 (参线段.尾点, 二维点.平移316 (参线段.尾点, 平移量))
赋值 (参点, 二维点.平移316 (参点, 平移量))
 ' ---------------------------------------------------旋转坐标系-------------------------------------------------------------------------
赋值 (线段方位角, 二维线段.求方位角316 (参线段))
赋值 (参线段.尾点, 二维点.旋转316 (参线段.尾点, , 负 (线段方位角)))
赋值 (参点, 二维点.旋转316 (参点, , 负 (线段方位角)))
 ' ---------------------------------------------------开始判断关系-------------------------------------------------------------------------
.判断开始 (并且 (大于 (取绝对值 (参点.y), 极小值), 大于 (参点.y, 0), 大于 (参点.x, 负 (极小值)), 小于 (参点.x, 相加 (参线段.尾点.x, 极小值))))
    返回 (真)
.默认
    返回 (假)
.判断结束


.子程序 点在线段右正侧, 逻辑型, , 点与线段的关系，理论上有九种情况，即点在线段上、前、后、左、右、左前、右前、左后、右后。即用垂线将线段周围的空间分成了八个区间，再加上线段自身所在区间，共九种情况。这九种情况还可以组合成复合情况。
.参数 参点, 坐标, , 点与线段的关系，由于担心浮小算术的影响，总是尽可能地偏向于判断为靠近线段，在线段上，而不是偏向于离得更远。
.参数 参线段, 线段, , 
.参数 参极小值, 双精度小数型, 可空, 小于该值，就当成零处理。如果未提供此参数，默认为1e-005。一般情况不必理会此参数。请提供极小的正数。如果欲使计算结果偏向于在线段右正侧，可提供较小的数值；如果欲使计算结果偏向于不在线段右正侧，可提供较大的数值。

.局部变量 二维点, 类坐标, , , 
.局部变量 二维线段, 类线段, , , 
.局部变量 极小值, 双精度小数型, , , 
.局部变量 线段方位角, 双精度小数型, , , 
.局部变量 平移量, 坐标, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (极小值, #零5)
.否则
    赋值 (极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------平移坐标系-------------------------------------------------------------------------
赋值 (平移量, 二维点.对称316 (参线段.起点))
赋值 (参线段.起点, 二维点.平移316 (参线段.起点, 平移量))
赋值 (参线段.尾点, 二维点.平移316 (参线段.尾点, 平移量))
赋值 (参点, 二维点.平移316 (参点, 平移量))
 ' ---------------------------------------------------旋转坐标系-------------------------------------------------------------------------
赋值 (线段方位角, 二维线段.求方位角316 (参线段))
赋值 (参线段.尾点, 二维点.旋转316 (参线段.尾点, , 负 (线段方位角)))
赋值 (参点, 二维点.旋转316 (参点, , 负 (线段方位角)))
 ' ---------------------------------------------------开始判断关系-------------------------------------------------------------------------
.判断开始 (并且 (大于 (取绝对值 (参点.y), 极小值), 小于 (参点.y, 0), 大于 (参点.x, 负 (极小值)), 小于 (参点.x, 相加 (参线段.尾点.x, 极小值))))
    返回 (真)
.默认
    返回 (假)
.判断结束


.子程序 点在线段左前侧, 逻辑型, , 点与线段的关系，理论上有九种情况，即点在线段上、前、后、左、右、左前、右前、左后、右后。即用垂线将线段周围的空间分成了八个区间，再加上线段自身所在区间，共九种情况。这九种情况还可以组合成复合情况。
.参数 参点, 坐标, , 点与线段的关系，由于担心浮小算术的影响，总是尽可能地偏向于判断为靠近线段，在线段上，而不是偏向于离得更远。
.参数 参线段, 线段, , 
.参数 参极小值, 双精度小数型, 可空, 小于该值，就当成零处理。如果未提供此参数，默认为1e-005。一般情况不必理会此参数。请提供极小的正数。如果欲使计算结果偏向于在线段左前侧，可提供较小的数值；如果欲使计算结果偏向于不在线段左前侧，可提供较大的数值。

.局部变量 二维点, 类坐标, , , 
.局部变量 二维线段, 类线段, , , 
.局部变量 极小值, 双精度小数型, , , 
.局部变量 线段方位角, 双精度小数型, , , 
.局部变量 平移量, 坐标, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (极小值, #零5)
.否则
    赋值 (极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------平移坐标系-------------------------------------------------------------------------
赋值 (平移量, 二维点.对称316 (参线段.起点))
赋值 (参线段.起点, 二维点.平移316 (参线段.起点, 平移量))
赋值 (参线段.尾点, 二维点.平移316 (参线段.尾点, 平移量))
赋值 (参点, 二维点.平移316 (参点, 平移量))
 ' ---------------------------------------------------旋转坐标系-------------------------------------------------------------------------
赋值 (线段方位角, 二维线段.求方位角316 (参线段))
赋值 (参线段.尾点, 二维点.旋转316 (参线段.尾点, , 负 (线段方位角)))
赋值 (参点, 二维点.旋转316 (参点, , 负 (线段方位角)))
 ' ---------------------------------------------------开始判断关系-------------------------------------------------------------------------
.判断开始 (并且 (大于 (取绝对值 (参点.y), 极小值), 大于 (参点.y, 0), 大于 (参点.x, 相加 (参线段.尾点.x, 极小值))))
    返回 (真)
.默认
    返回 (假)
.判断结束


.子程序 点在线段右前侧, 逻辑型, , 点与线段的关系，理论上有九种情况，即点在线段上、前、后、左、右、左前、右前、左后、右后。即用垂线将线段周围的空间分成了八个区间，再加上线段自身所在区间，共九种情况。这九种情况还可以组合成复合情况。
.参数 参点, 坐标, , 点与线段的关系，由于担心浮小算术的影响，总是尽可能地偏向于判断为靠近线段，在线段上，而不是偏向于离得更远。
.参数 参线段, 线段, , 
.参数 参极小值, 双精度小数型, 可空, 小于该值，就当成零处理。如果未提供此参数，默认为1e-005。一般情况不必理会此参数。请提供极小的正数。如果欲使计算结果偏向于在线段右前侧，可提供较小的数值；如果欲使计算结果偏向于不在线段右前侧，可提供较大的数值。

.局部变量 二维点, 类坐标, , , 
.局部变量 二维线段, 类线段, , , 
.局部变量 极小值, 双精度小数型, , , 
.局部变量 线段方位角, 双精度小数型, , , 
.局部变量 平移量, 坐标, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (极小值, #零5)
.否则
    赋值 (极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------平移坐标系-------------------------------------------------------------------------
赋值 (平移量, 二维点.对称316 (参线段.起点))
赋值 (参线段.起点, 二维点.平移316 (参线段.起点, 平移量))
赋值 (参线段.尾点, 二维点.平移316 (参线段.尾点, 平移量))
赋值 (参点, 二维点.平移316 (参点, 平移量))
 ' ---------------------------------------------------旋转坐标系-------------------------------------------------------------------------
赋值 (线段方位角, 二维线段.求方位角316 (参线段))
赋值 (参线段.尾点, 二维点.旋转316 (参线段.尾点, , 负 (线段方位角)))
赋值 (参点, 二维点.旋转316 (参点, , 负 (线段方位角)))
 ' ---------------------------------------------------开始判断关系-------------------------------------------------------------------------
.判断开始 (并且 (大于 (取绝对值 (参点.y), 极小值), 小于 (参点.y, 0), 大于 (参点.x, 相加 (参线段.尾点.x, 极小值))))
    返回 (真)
.默认
    返回 (假)
.判断结束


.子程序 点在线段左后侧, 逻辑型, , 点与线段的关系，理论上有九种情况，即点在线段上、前、后、左、右、左前、右前、左后、右后。即用垂线将线段周围的空间分成了八个区间，再加上线段自身所在区间，共九种情况。这九种情况还可以组合成复合情况。
.参数 参点, 坐标, , 点与线段的关系，由于担心浮小算术的影响，总是尽可能地偏向于判断为靠近线段，在线段上，而不是偏向于离得更远。
.参数 参线段, 线段, , 
.参数 参极小值, 双精度小数型, 可空, 小于该值，就当成零处理。如果未提供此参数，默认为1e-005。一般情况不必理会此参数。请提供极小的正数。如果欲使计算结果偏向于在线段左后侧，可提供较小的数值；如果欲使计算结果偏向于不在线段左后侧，可提供较大的数值。

.局部变量 二维点, 类坐标, , , 
.局部变量 二维线段, 类线段, , , 
.局部变量 极小值, 双精度小数型, , , 
.局部变量 线段方位角, 双精度小数型, , , 
.局部变量 平移量, 坐标, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (极小值, #零5)
.否则
    赋值 (极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------平移坐标系-------------------------------------------------------------------------
赋值 (平移量, 二维点.对称316 (参线段.起点))
赋值 (参线段.起点, 二维点.平移316 (参线段.起点, 平移量))
赋值 (参线段.尾点, 二维点.平移316 (参线段.尾点, 平移量))
赋值 (参点, 二维点.平移316 (参点, 平移量))
 ' ---------------------------------------------------旋转坐标系-------------------------------------------------------------------------
赋值 (线段方位角, 二维线段.求方位角316 (参线段))
赋值 (参线段.尾点, 二维点.旋转316 (参线段.尾点, , 负 (线段方位角)))
赋值 (参点, 二维点.旋转316 (参点, , 负 (线段方位角)))
 ' ---------------------------------------------------开始判断关系-------------------------------------------------------------------------
.判断开始 (并且 (大于 (取绝对值 (参点.y), 极小值), 大于 (参点.y, 0), 小于 (参点.x, 负 (极小值))))
    返回 (真)
.默认
    返回 (假)
.判断结束


.子程序 点在线段右后侧, 逻辑型, , 点与线段的关系，理论上有九种情况，即点在线段上、前、后、左、右、左前、右前、左后、右后。即用垂线将线段周围的空间分成了八个区间，再加上线段自身所在区间，共九种情况。这九种情况还可以组合成复合情况。
.参数 参点, 坐标, , 点与线段的关系，由于担心浮小算术的影响，总是尽可能地偏向于判断为靠近线段，在线段上，而不是偏向于离得更远。
.参数 参线段, 线段, , 
.参数 参极小值, 双精度小数型, 可空, 小于该值，就当成零处理。如果未提供此参数，默认为1e-005。一般情况不必理会此参数。请提供极小的正数。如果欲使计算结果偏向于在线段右后侧，可提供较小的数值；如果欲使计算结果偏向于不在线段右后侧，可提供较大的数值。

.局部变量 二维点, 类坐标, , , 
.局部变量 二维线段, 类线段, , , 
.局部变量 极小值, 双精度小数型, , , 
.局部变量 线段方位角, 双精度小数型, , , 
.局部变量 平移量, 坐标, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (极小值, #零5)
.否则
    赋值 (极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------平移坐标系-------------------------------------------------------------------------
赋值 (平移量, 二维点.对称316 (参线段.起点))
赋值 (参线段.起点, 二维点.平移316 (参线段.起点, 平移量))
赋值 (参线段.尾点, 二维点.平移316 (参线段.尾点, 平移量))
赋值 (参点, 二维点.平移316 (参点, 平移量))
 ' ---------------------------------------------------旋转坐标系-------------------------------------------------------------------------
赋值 (线段方位角, 二维线段.求方位角316 (参线段))
赋值 (参线段.尾点, 二维点.旋转316 (参线段.尾点, , 负 (线段方位角)))
赋值 (参点, 二维点.旋转316 (参点, , 负 (线段方位角)))
 ' ---------------------------------------------------开始判断关系-------------------------------------------------------------------------
.判断开始 (并且 (大于 (取绝对值 (参点.y), 极小值), 小于 (参点.y, 0), 小于 (参点.x, 负 (极小值))))
    返回 (真)
.默认
    返回 (假)
.判断结束


.类模块 类关系_点与三角形, , , 

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 点与三角形关系, 整数型, , 
.参数 参点, 坐标, , 
.参数 参三角形, 三角形, , 
.参数 参极小值, 双精度小数型, 可空, 

.局部变量 点类, 类坐标, , , 
.局部变量 三角形类, 类三角形, , , 
.局部变量 距离, 双精度小数型, , , 
.局部变量 边线AB, 线段, , , 
.局部变量 边线BC, 线段, , , 
.局部变量 边线CA, 线段, , , 
.局部变量 点与线段关系, 类关系_点与线段, , , 
.局部变量 极小值, 双精度小数型, , , 
.局部变量 在AB上, 逻辑型, , , 
.局部变量 在BC上, 逻辑型, , , 
.局部变量 在CA上, 逻辑型, , , 
.局部变量 在AB左, 逻辑型, , , 
.局部变量 在BC左, 逻辑型, , , 
.局部变量 在CA左, 逻辑型, , , 
.局部变量 在AB右, 逻辑型, , , 
.局部变量 在BC右, 逻辑型, , , 
.局部变量 在CA右, 逻辑型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (极小值, #零5)
.否则
    赋值 (极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------先判断是否在形心上-------------------------------------------------------------------------
赋值 (距离, 点类.距离316 (参点, 三角形类.求形心O (参三角形)))
.如果真 (小于或等于 (距离, 参极小值))
    返回 (#点与三角形_点在三角形形心上)
.如果真结束
 ' ---------------------------------------------------借助线段来完成其它判断-------------------------------------------------------------------------
赋值 (边线AB.起点, 参三角形.顶点A)
赋值 (边线AB.尾点, 参三角形.顶点B)
赋值 (边线BC.起点, 参三角形.顶点B)
赋值 (边线BC.尾点, 参三角形.顶点C)
赋值 (边线CA.起点, 参三角形.顶点C)
赋值 (边线CA.尾点, 参三角形.顶点A)
赋值 (在AB上, 点与线段关系.点在线段左面 (参点, 边线AB, 极小值))
赋值 (在BC上, 点与线段关系.点在线段左面 (参点, 边线BC, 极小值))
赋值 (在CA上, 点与线段关系.点在线段左面 (参点, 边线CA, 极小值))
.如果真 (或者 (在AB上, 在BC上, 在CA上))
    返回 (#点与三角形_点在三角形上)
.如果真结束

赋值 (在AB左, 点与线段关系.点在线段左面 (参点, 边线AB, 极小值))
赋值 (在BC左, 点与线段关系.点在线段左面 (参点, 边线BC, 极小值))
赋值 (在CA左, 点与线段关系.点在线段左面 (参点, 边线CA, 极小值))
.如果真 (并且 (在AB左, 在BC左, 在CA左))
    返回 (#点与三角形_点在三角形内)
.如果真结束

赋值 (在AB右, 点与线段关系.点在线段右面 (参点, 边线AB, 极小值))
赋值 (在BC右, 点与线段关系.点在线段右面 (参点, 边线BC, 极小值))
赋值 (在CA右, 点与线段关系.点在线段右面 (参点, 边线CA, 极小值))
.如果真 (并且 (在AB右, 在BC右, 在CA右))
    返回 (#点与三角形_点在三角形内)
.如果真结束

返回 (#点与三角形_点在三角形外)

.子程序 点在三角形形心上, 逻辑型, , 
.参数 参点, 坐标, , 
.参数 参三角形, 三角形, , 
.参数 参极小值, 双精度小数型, 可空, 
.参数 参在三角形内也按在三角形上考虑, 逻辑型, 可空, 

.局部变量 点类, 类坐标, , , 
.局部变量 三角形类, 类三角形, , , 
.局部变量 距离, 双精度小数型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
赋值 (距离, 点类.距离316 (参点, 三角形类.求形心O (参三角形)))
.判断开始 (小于或等于 (距离, 参极小值))
    返回 (真)
.默认
    返回 (假)
.判断结束


.子程序 点在三角形上, 逻辑型, , 
.参数 参点, 坐标, , 
.参数 参三角形, 三角形, , 
.参数 参极小值, 双精度小数型, 可空, 
.参数 参在三角形内也按在三角形上考虑, 逻辑型, 可空, 

.局部变量 边线AB, 线段, , , 
.局部变量 边线BC, 线段, , , 
.局部变量 边线CA, 线段, , , 
.局部变量 点与线段关系, 类关系_点与线段, , , 
.局部变量 极小值, 双精度小数型, , , 
.局部变量 在AB上, 逻辑型, , , 
.局部变量 在BC上, 逻辑型, , , 
.局部变量 在CA上, 逻辑型, , , 
.局部变量 在AB左, 逻辑型, , , 
.局部变量 在BC左, 逻辑型, , , 
.局部变量 在CA左, 逻辑型, , , 
.局部变量 在AB右, 逻辑型, , , 
.局部变量 在BC右, 逻辑型, , , 
.局部变量 在CA右, 逻辑型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (极小值, #零5)
.否则
    赋值 (极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------借助线段来完成判断-------------------------------------------------------------------------
赋值 (边线AB.起点, 参三角形.顶点A)
赋值 (边线AB.尾点, 参三角形.顶点B)
赋值 (边线BC.起点, 参三角形.顶点B)
赋值 (边线BC.尾点, 参三角形.顶点C)
赋值 (边线CA.起点, 参三角形.顶点C)
赋值 (边线CA.尾点, 参三角形.顶点A)
赋值 (在AB上, 点与线段关系.点在线段上 (参点, 边线AB, 极小值))
赋值 (在BC上, 点与线段关系.点在线段上 (参点, 边线BC, 极小值))
赋值 (在CA上, 点与线段关系.点在线段上 (参点, 边线CA, 极小值))
.如果真 (或者 (在AB上, 在BC上, 在CA上))
    返回 (真)
.如果真结束

.如果真 (参在三角形内也按在三角形上考虑)
    赋值 (在AB左, 点与线段关系.点在线段左面 (参点, 边线AB, 极小值))
    赋值 (在BC左, 点与线段关系.点在线段左面 (参点, 边线BC, 极小值))
    赋值 (在CA左, 点与线段关系.点在线段左面 (参点, 边线CA, 极小值))
    .如果真 (并且 (在AB左, 在BC左, 在CA左))
        返回 (真)
    .如果真结束
    赋值 (在AB右, 点与线段关系.点在线段右面 (参点, 边线AB, 极小值))
    赋值 (在BC右, 点与线段关系.点在线段右面 (参点, 边线BC, 极小值))
    赋值 (在CA右, 点与线段关系.点在线段右面 (参点, 边线CA, 极小值))
    .如果真 (并且 (在AB右, 在BC右, 在CA右))
        返回 (真)
    .如果真结束
    
.如果真结束

返回 (假)

.子程序 点在三角形内, 逻辑型, , 
.参数 参点, 坐标, , 
.参数 参三角形, 三角形, , 
.参数 参极小值, 双精度小数型, 可空, 
.参数 参在三角形上也按在三角形内考虑, 逻辑型, 可空, 

.局部变量 边线AB, 线段, , , 
.局部变量 边线BC, 线段, , , 
.局部变量 边线CA, 线段, , , 
.局部变量 点与线段关系, 类关系_点与线段, , , 
.局部变量 极小值, 双精度小数型, , , 
.局部变量 在AB上, 逻辑型, , , 
.局部变量 在BC上, 逻辑型, , , 
.局部变量 在CA上, 逻辑型, , , 
.局部变量 在AB左, 逻辑型, , , 
.局部变量 在BC左, 逻辑型, , , 
.局部变量 在CA左, 逻辑型, , , 
.局部变量 在AB右, 逻辑型, , , 
.局部变量 在BC右, 逻辑型, , , 
.局部变量 在CA右, 逻辑型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (极小值, #零5)
.否则
    赋值 (极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------借助线段来完成判断-------------------------------------------------------------------------
赋值 (边线AB.起点, 参三角形.顶点A)
赋值 (边线AB.尾点, 参三角形.顶点B)
赋值 (边线BC.起点, 参三角形.顶点B)
赋值 (边线BC.尾点, 参三角形.顶点C)
赋值 (边线CA.起点, 参三角形.顶点C)
赋值 (边线CA.尾点, 参三角形.顶点A)

赋值 (在AB左, 点与线段关系.点在线段左面 (参点, 边线AB, 极小值))
赋值 (在BC左, 点与线段关系.点在线段左面 (参点, 边线BC, 极小值))
赋值 (在CA左, 点与线段关系.点在线段左面 (参点, 边线CA, 极小值))
.如果真 (并且 (在AB左, 在BC左, 在CA左))
    返回 (真)
.如果真结束

赋值 (在AB右, 点与线段关系.点在线段右面 (参点, 边线AB, 极小值))
赋值 (在BC右, 点与线段关系.点在线段右面 (参点, 边线BC, 极小值))
赋值 (在CA右, 点与线段关系.点在线段右面 (参点, 边线CA, 极小值))
.如果真 (并且 (在AB右, 在BC右, 在CA右))
    返回 (真)
.如果真结束

.如果真 (参在三角形上也按在三角形内考虑)
    赋值 (在AB上, 点与线段关系.点在线段左面 (参点, 边线AB, 极小值))
    赋值 (在BC上, 点与线段关系.点在线段左面 (参点, 边线BC, 极小值))
    赋值 (在CA上, 点与线段关系.点在线段左面 (参点, 边线CA, 极小值))
    .如果真 (或者 (在AB上, 在BC上, 在CA上))
        返回 (真)
    .如果真结束
    
.如果真结束

返回 (假)

.子程序 点在三角形外, 逻辑型, , 
.参数 参点, 坐标, , 
.参数 参三角形, 三角形, , 
.参数 参极小值, 双精度小数型, 可空, 
.参数 参在三角形上也按在三角形外考虑, 逻辑型, 可空, 

.局部变量 边线AB, 线段, , , 
.局部变量 边线BC, 线段, , , 
.局部变量 边线CA, 线段, , , 
.局部变量 点与线段关系, 类关系_点与线段, , , 
.局部变量 极小值, 双精度小数型, , , 
.局部变量 在AB上, 逻辑型, , , 
.局部变量 在BC上, 逻辑型, , , 
.局部变量 在CA上, 逻辑型, , , 
.局部变量 在AB左, 逻辑型, , , 
.局部变量 在BC左, 逻辑型, , , 
.局部变量 在CA左, 逻辑型, , , 
.局部变量 在AB右, 逻辑型, , , 
.局部变量 在BC右, 逻辑型, , , 
.局部变量 在CA右, 逻辑型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (极小值, #零5)
.否则
    赋值 (极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------借助线段来完成判断-------------------------------------------------------------------------
赋值 (边线AB.起点, 参三角形.顶点A)
赋值 (边线AB.尾点, 参三角形.顶点B)
赋值 (边线BC.起点, 参三角形.顶点B)
赋值 (边线BC.尾点, 参三角形.顶点C)
赋值 (边线CA.起点, 参三角形.顶点C)
赋值 (边线CA.尾点, 参三角形.顶点A)

赋值 (在AB左, 点与线段关系.点在线段左面 (参点, 边线AB, 极小值))
赋值 (在BC左, 点与线段关系.点在线段左面 (参点, 边线BC, 极小值))
赋值 (在CA左, 点与线段关系.点在线段左面 (参点, 边线CA, 极小值))
.如果真 (并且 (在AB左, 在BC左, 在CA左))
    返回 (假)
.如果真结束

赋值 (在AB右, 点与线段关系.点在线段右面 (参点, 边线AB, 极小值))
赋值 (在BC右, 点与线段关系.点在线段右面 (参点, 边线BC, 极小值))
赋值 (在CA右, 点与线段关系.点在线段右面 (参点, 边线CA, 极小值))
.如果真 (并且 (在AB右, 在BC右, 在CA右))
    返回 (假)
.如果真结束

.如果真 (参在三角形上也按在三角形外考虑)
    赋值 (在AB上, 点与线段关系.点在线段上 (参点, 边线AB, 极小值))
    赋值 (在BC上, 点与线段关系.点在线段上 (参点, 边线BC, 极小值))
    赋值 (在CA上, 点与线段关系.点在线段上 (参点, 边线CA, 极小值))
    .如果 (或者 (在AB上, 在BC上, 在CA上))
        
    .否则
        返回 (假)
    .如果结束
    
.如果真结束

返回 (真)

.类模块 类关系_点与圆, , , 

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 点与圆关系, 整数型, , 点与圆的关系总是优先判断为在圆上，而不是在圆内或在圆外。
.参数 参点, 坐标, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 

.局部变量 点, 类坐标, , , 
.局部变量 距离, 双精度小数型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
赋值 (距离, 点.距离316 (参点, 参圆.圆心))
.判断开始 (小于或等于 (距离, 参极小值))
    返回 (#点与圆_点在圆心)
.判断 (并且 (小于或等于 (距离, 相加 (参圆.半径, 参极小值)), 大于或等于 (距离, 相减 (参圆.半径, 参极小值))))
    返回 (#点与圆_点在圆上)
.判断 (小于 (距离, 相减 (参圆.半径, 参极小值)))
    返回 (#点与圆_点在圆内)
.默认
    返回 (#点与圆_点在圆外)
.判断结束


.子程序 点在圆心, 逻辑型, , 
.参数 参点, 坐标, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 

.局部变量 点, 类坐标, , , 
.局部变量 距离, 双精度小数型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
赋值 (距离, 点.距离316 (参点, 参圆.圆心))
.判断开始 (小于或等于 (距离, 参极小值))
    返回 (真)
.默认
    返回 (假)
.判断结束


.子程序 点在圆上, 逻辑型, , 
.参数 参点, 坐标, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 
.参数 参在圆内也按在圆上考虑, 逻辑型, 可空, 

.局部变量 点, 类坐标, , , 
.局部变量 距离, 双精度小数型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
赋值 (距离, 点.距离316 (参点, 参圆.圆心))
.如果真 (并且 (小于或等于 (距离, 相加 (参圆.半径, 参极小值)), 大于或等于 (距离, 相减 (参圆.半径, 参极小值))))
    返回 (真)
.如果真结束

.如果真 (参在圆内也按在圆上考虑)
    .如果真 (小于 (距离, 相减 (参圆.半径, 参极小值)))
        返回 (真)
    .如果真结束
    
.如果真结束

返回 (假)

.子程序 点在圆内, 逻辑型, , 
.参数 参点, 坐标, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 
.参数 参在圆上也按在圆内考虑, 逻辑型, 可空, 

.局部变量 点, 类坐标, , , 
.局部变量 距离, 双精度小数型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
赋值 (距离, 点.距离316 (参点, 参圆.圆心))
.如果真 (小于 (距离, 相减 (参圆.半径, 参极小值)))
    返回 (真)
.如果真结束

.如果真 (参在圆上也按在圆内考虑)
    .如果真 (并且 (小于或等于 (距离, 相加 (参圆.半径, 参极小值)), 大于或等于 (距离, 相减 (参圆.半径, 参极小值))))
        返回 (真)
    .如果真结束
    
.如果真结束

返回 (假)

.子程序 点在圆外, 逻辑型, , 
.参数 参点, 坐标, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 
.参数 参在圆上也按在圆外考虑, 逻辑型, 可空, 

.局部变量 点, 类坐标, , , 
.局部变量 距离, 双精度小数型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
赋值 (距离, 点.距离316 (参点, 参圆.圆心))
.如果真 (大于 (距离, 相加 (参圆.半径, 参极小值)))
    返回 (真)
.如果真结束

.如果真 (参在圆上也按在圆外考虑)
    .如果真 (并且 (小于或等于 (距离, 相加 (参圆.半径, 参极小值)), 大于或等于 (距离, 相减 (参圆.半径, 参极小值))))
        返回 (真)
    .如果真结束
    
.如果真结束

返回 (假)


.类模块 类关系_点与矩形, , , 

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 点与矩形关系, 整数型, , 先判断是否在形心上，接着判断是否在四边上，然后判断是否在矩形里面，如果上述三种情况都不是，就一定在矩形外面了。
.参数 参点, 坐标, , 
.参数 参矩形, 矩形, , 
.参数 参极小值, 双精度小数型, 可空, 

.局部变量 点类, 类坐标, , , 
.局部变量 矩形类, 类矩形, , , 
.局部变量 距离, 双精度小数型, , , 
.局部变量 点与线段, 类关系_点与线段, , , 
.局部变量 线段AB, 线段, , , 
.局部变量 线段BC, 线段, , , 
.局部变量 线段CD, 线段, , , 
.局部变量 线段DA, 线段, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束

 ' ---------------------------------------------------先判断是否在形心上-------------------------------------------------------------------------
赋值 (距离, 点类.距离316 (参点, 矩形类.求形心 (参矩形)))
.如果真 (小于或等于 (距离, 参极小值))
    返回 (#点与矩形_点在矩形形心上)
.如果真结束
 ' ---------------------------------------------------借助线段来完成其它判断-------------------------------------------------------------------------
赋值 (线段AB.起点, 参矩形.顶点A)
赋值 (线段AB.尾点, 参矩形.顶点B)
赋值 (线段BC.起点, 参矩形.顶点B)
赋值 (线段BC.尾点, 参矩形.顶点C)
赋值 (线段CD.起点, 参矩形.顶点C)
赋值 (线段CD.尾点, 参矩形.顶点D)
赋值 (线段DA.起点, 参矩形.顶点D)
赋值 (线段DA.尾点, 参矩形.顶点A)
.如果真 (或者 (点与线段.点在线段上 (参点, 线段AB, 参极小值), 点与线段.点在线段上 (参点, 线段BC, 参极小值), 点与线段.点在线段上 (参点, 线段CD, 参极小值), 点与线段.点在线段上 (参点, 线段DA, 参极小值)))
    返回 (#点与矩形_点在矩形上)
.如果真结束

.如果真 (并且 (点与线段.点在线段左面 (参点, 线段AB, 参极小值), 点与线段.点在线段左面 (参点, 线段BC, 参极小值), 点与线段.点在线段左面 (参点, 线段CD, 参极小值), 点与线段.点在线段左面 (参点, 线段DA, 参极小值)))
    返回 (#点与矩形_点在矩形内)
.如果真结束

.如果真 (并且 (点与线段.点在线段右面 (参点, 线段AB, 参极小值), 点与线段.点在线段右面 (参点, 线段BC, 参极小值), 点与线段.点在线段右面 (参点, 线段CD, 参极小值), 点与线段.点在线段右面 (参点, 线段DA, 参极小值)))
    返回 (#点与矩形_点在矩形内)
.如果真结束

返回 (#点与矩形_点在矩形外)

.子程序 点在矩形形心上, 逻辑型, , 
.参数 参点, 坐标, , 
.参数 参矩形, 矩形, , 
.参数 参极小值, 双精度小数型, 可空, 

.局部变量 点类, 类坐标, , , 
.局部变量 矩形类, 类矩形, , , 
.局部变量 距离, 双精度小数型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
赋值 (距离, 点类.距离316 (参点, 矩形类.求形心 (参矩形)))
.判断开始 (小于或等于 (距离, 参极小值))
    返回 (真)
.默认
    返回 (假)
.判断结束


.子程序 点在矩形内, 逻辑型, , 
.参数 参点, 坐标, , 
.参数 参矩形, 矩形, , 
.参数 参极小值, 双精度小数型, 可空, 
.参数 参在矩形上也按在矩形内考虑, 逻辑型, 可空, 

.局部变量 点与线段, 类关系_点与线段, , , 
.局部变量 线段AB, 线段, , , 
.局部变量 线段BC, 线段, , , 
.局部变量 线段CD, 线段, , , 
.局部变量 线段DA, 线段, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束

 ' ---------------------------------------------------借助线段来完成判断-------------------------------------------------------------------------
赋值 (线段AB.起点, 参矩形.顶点A)
赋值 (线段AB.尾点, 参矩形.顶点B)
赋值 (线段BC.起点, 参矩形.顶点B)
赋值 (线段BC.尾点, 参矩形.顶点C)
赋值 (线段CD.起点, 参矩形.顶点C)
赋值 (线段CD.尾点, 参矩形.顶点D)
赋值 (线段DA.起点, 参矩形.顶点D)
赋值 (线段DA.尾点, 参矩形.顶点A)

.如果真 (并且 (点与线段.点在线段左面 (参点, 线段AB, 参极小值), 点与线段.点在线段左面 (参点, 线段BC, 参极小值), 点与线段.点在线段左面 (参点, 线段CD, 参极小值), 点与线段.点在线段左面 (参点, 线段DA, 参极小值)))
    返回 (真)
.如果真结束

.如果真 (并且 (点与线段.点在线段右面 (参点, 线段AB, 参极小值), 点与线段.点在线段右面 (参点, 线段BC, 参极小值), 点与线段.点在线段右面 (参点, 线段CD, 参极小值), 点与线段.点在线段右面 (参点, 线段DA, 参极小值)))
    返回 (真)
.如果真结束

.如果真 (参在矩形上也按在矩形内考虑)
    .如果真 (或者 (点与线段.点在线段上 (参点, 线段AB, 参极小值), 点与线段.点在线段上 (参点, 线段BC, 参极小值), 点与线段.点在线段上 (参点, 线段CD, 参极小值), 点与线段.点在线段上 (参点, 线段DA, 参极小值)))
        返回 (真)
    .如果真结束
    
.如果真结束

返回 (假)

.子程序 点在矩形上, 逻辑型, , 
.参数 参点, 坐标, , 
.参数 参矩形, 矩形, , 
.参数 参极小值, 双精度小数型, 可空, 
.参数 参在矩形内也按在矩形上考虑, 逻辑型, 可空, 

.局部变量 点与线段, 类关系_点与线段, , , 
.局部变量 线段AB, 线段, , , 
.局部变量 线段BC, 线段, , , 
.局部变量 线段CD, 线段, , , 
.局部变量 线段DA, 线段, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束

 ' ---------------------------------------------------借助线段来完成判断-------------------------------------------------------------------------
赋值 (线段AB.起点, 参矩形.顶点A)
赋值 (线段AB.尾点, 参矩形.顶点B)
赋值 (线段BC.起点, 参矩形.顶点B)
赋值 (线段BC.尾点, 参矩形.顶点C)
赋值 (线段CD.起点, 参矩形.顶点C)
赋值 (线段CD.尾点, 参矩形.顶点D)
赋值 (线段DA.起点, 参矩形.顶点D)
赋值 (线段DA.尾点, 参矩形.顶点A)
.如果真 (或者 (点与线段.点在线段上 (参点, 线段AB, 参极小值), 点与线段.点在线段上 (参点, 线段BC, 参极小值), 点与线段.点在线段上 (参点, 线段CD, 参极小值), 点与线段.点在线段上 (参点, 线段DA, 参极小值)))
    返回 (真)
.如果真结束

.如果真 (参在矩形内也按在矩形上考虑)
    .如果真 (并且 (点与线段.点在线段左面 (参点, 线段AB, 参极小值), 点与线段.点在线段左面 (参点, 线段BC, 参极小值), 点与线段.点在线段左面 (参点, 线段CD, 参极小值), 点与线段.点在线段左面 (参点, 线段DA, 参极小值)))
        返回 (真)
    .如果真结束
    
    .如果真 (并且 (点与线段.点在线段右面 (参点, 线段AB, 参极小值), 点与线段.点在线段右面 (参点, 线段BC, 参极小值), 点与线段.点在线段右面 (参点, 线段CD, 参极小值), 点与线段.点在线段右面 (参点, 线段DA, 参极小值)))
        返回 (真)
    .如果真结束
    
.如果真结束

返回 (假)

.子程序 点在矩形外, 逻辑型, , 
.参数 参点, 坐标, , 
.参数 参矩形, 矩形, , 
.参数 参极小值, 双精度小数型, 可空, 
.参数 参在矩形上也按在矩形外考虑, 逻辑型, 可空, 

.局部变量 点与线段, 类关系_点与线段, , , 
.局部变量 线段AB, 线段, , , 
.局部变量 线段BC, 线段, , , 
.局部变量 线段CD, 线段, , , 
.局部变量 线段DA, 线段, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束

 ' ---------------------------------------------------借助线段来完成判断-------------------------------------------------------------------------
赋值 (线段AB.起点, 参矩形.顶点A)
赋值 (线段AB.尾点, 参矩形.顶点B)
赋值 (线段BC.起点, 参矩形.顶点B)
赋值 (线段BC.尾点, 参矩形.顶点C)
赋值 (线段CD.起点, 参矩形.顶点C)
赋值 (线段CD.尾点, 参矩形.顶点D)
赋值 (线段DA.起点, 参矩形.顶点D)
赋值 (线段DA.尾点, 参矩形.顶点A)

.如果真 (并且 (点与线段.点在线段左面 (参点, 线段AB, 参极小值), 点与线段.点在线段左面 (参点, 线段BC, 参极小值), 点与线段.点在线段左面 (参点, 线段CD, 参极小值), 点与线段.点在线段左面 (参点, 线段DA, 参极小值)))
    返回 (假)
.如果真结束

.如果真 (并且 (点与线段.点在线段右面 (参点, 线段AB, 参极小值), 点与线段.点在线段右面 (参点, 线段BC, 参极小值), 点与线段.点在线段右面 (参点, 线段CD, 参极小值), 点与线段.点在线段右面 (参点, 线段DA, 参极小值)))
    返回 (假)
.如果真结束

.如果真 (参在矩形上也按在矩形外考虑)
    .如果 (或者 (点与线段.点在线段上 (参点, 线段AB, 参极小值), 点与线段.点在线段上 (参点, 线段BC, 参极小值), 点与线段.点在线段上 (参点, 线段CD, 参极小值), 点与线段.点在线段上 (参点, 线段DA, 参极小值)))
        
    .否则
        返回 (假)
    .如果结束
    
.如果真结束

返回 (真)


.类模块 类关系_直线与圆, , , 

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 直线与圆关系, 整数型, , 直线与圆的关系总是优先判断为直线与圆相切，而不是与圆相交或与圆相离。相交的情况优先判断为直线经过圆心。
.参数 参直线, 直线一般式, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 

.局部变量 点, 类坐标, , , 
.局部变量 距离, 双精度小数型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
赋值 (距离, 点.到直线垂距316 (参圆.圆心, 参直线))
.判断开始 (小于或等于 (距离, 参极小值))
    返回 (#直线与圆_直线经过圆心)
.判断 (并且 (大于 (距离, 参极小值), 小于 (距离, 相减 (参圆.半径, 参极小值))))
    返回 (#直线与圆_直线与圆相交)
.判断 (并且 (小于或等于 (距离, 相加 (参圆.半径, 参极小值)), 大于或等于 (距离, 相减 (参圆.半径, 参极小值))))
    返回 (#直线与圆_直线与圆相切)
.默认
    返回 (#直线与圆_直线与圆相离)
.判断结束


.子程序 直线经过圆心, 逻辑型, , 
.参数 参直线, 直线一般式, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 

.局部变量 点, 类坐标, , , 
.局部变量 距离, 双精度小数型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
赋值 (距离, 点.到直线垂距316 (参圆.圆心, 参直线))
.如果真 (小于或等于 (距离, 参极小值))
    返回 (真)
.如果真结束

返回 (假)

.子程序 直线与圆相交, 逻辑型, , 
.参数 参直线, 直线一般式, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 
.参数 参直线经过圆心也按相交考虑, 逻辑型, 可空, 
.参数 参直线与圆相切也按相交考虑, 逻辑型, 可空, 

.局部变量 点, 类坐标, , , 
.局部变量 距离, 双精度小数型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
赋值 (距离, 点.到直线垂距316 (参圆.圆心, 参直线))
.如果真 (并且 (大于 (距离, 参极小值), 小于 (距离, 相减 (参圆.半径, 参极小值))))
    返回 (真)
.如果真结束

.如果真 (参直线经过圆心也按相交考虑)
    .如果真 (小于或等于 (距离, 参极小值))
        返回 (真)
    .如果真结束
    
.如果真结束

.如果真 (参直线与圆相切也按相交考虑)
    .如果真 (并且 (大于或等于 (距离, 相减 (参圆.半径, 参极小值)), 小于或等于 (距离, 相加 (参圆.半径, 参极小值))))
        返回 (真)
    .如果真结束
    
.如果真结束

返回 (假)

.子程序 直线与圆相切, 逻辑型, , 
.参数 参直线, 直线一般式, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 

.局部变量 点, 类坐标, , , 
.局部变量 距离, 双精度小数型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
赋值 (距离, 点.到直线垂距316 (参圆.圆心, 参直线))
.如果真 (并且 (大于或等于 (距离, 相减 (参圆.半径, 参极小值)), 小于或等于 (距离, 相加 (参圆.半径, 参极小值))))
    返回 (真)
.如果真结束
返回 (假)

.子程序 直线与圆相离, 逻辑型, , 
.参数 参直线, 直线一般式, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 
.参数 参直线与圆相切也按相离考虑, 逻辑型, 可空, 

.局部变量 点, 类坐标, , , 
.局部变量 距离, 双精度小数型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
赋值 (距离, 点.到直线垂距316 (参圆.圆心, 参直线))
.如果真 (大于 (距离, 相加 (参圆.半径, 参极小值)))
    返回 (真)
.如果真结束

.如果真 (参直线与圆相切也按相离考虑)
    .如果真 (并且 (大于或等于 (距离, 相减 (参圆.半径, 参极小值)), 小于或等于 (距离, 相加 (参圆.半径, 参极小值))))
        返回 (真)
    .如果真结束
    
.如果真结束

返回 (假)

.子程序 求圆心到直线垂距, 双精度小数型, , 
.参数 参圆, 圆, , 
.参数 参直线, 直线一般式, , 

.局部变量 二维点, 类坐标, , , 

返回 (二维点.到直线垂距316 (参圆.圆心, 参直线))

.子程序 求圆心到直线垂足点, 坐标, , 
.参数 参圆, 圆, , 
.参数 参直线, 直线一般式, , 

.局部变量 二维点, 类坐标, , , 

返回 (二维点.到直线垂足点316 (参圆.圆心, 参直线))

.子程序 求圆心到直线垂线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参直线, 直线一般式, , 

.局部变量 二维点, 类坐标, , , 

返回 (二维点.到直线垂线段316 (参圆.圆心, 参直线))

.子程序 求圆到直线垂线段, 线段, , 如果圆与直线相离，返回圆上与直线最近的点到直线的垂线段；如果圆与直线相切，返回起始点重合的线段，如果圆与直线相且不过圆心，则以圆心向直线引垂线并延伸到圆上，以垂点到圆上点为起点和尾点作线段；如果直线过圆心，从圆心引与直线垂直的直线，与圆形成新的交点，以该交点形成线段，线段的起点将是复角最小的点，如果复角相同将是离坐标原点最近的点。
.参数 参圆, 圆, , 
.参数 参直线, 直线一般式, , 

.局部变量 二维点, 类坐标, , , 

返回 (二维点.到直线垂线段316 (参圆.圆心, 参直线))

.类模块 类关系_线段与圆, , , 线段与圆的关系比较复杂，宜对每种判断方法分开使用。

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 圆心在线段起点上且线段尾点在圆内, 逻辑型, , 
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 
.参数 参在圆上也按在圆内考虑, 逻辑型, 可空, 

.局部变量 二维点, 类坐标, , , 
.局部变量 圆心在线段起点上, 逻辑型, , , 
.局部变量 点与圆关系, 类关系_点与圆, , , 
.局部变量 起点在圆内, 逻辑型, , , 
.局部变量 尾点在圆内, 逻辑型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
赋值 (圆心在线段起点上, 选择 (小于或等于 (二维点.距离316 (参圆.圆心, 参线段.起点), 参极小值), 真, 假))
.如果 (圆心在线段起点上)
    .判断开始 (是否为空 (参极小值))
        赋值 (尾点在圆内, 点与圆关系.点在圆内 (参线段.尾点, 参圆, , 参在圆上也按在圆内考虑))
    .默认
        赋值 (尾点在圆内, 点与圆关系.点在圆内 (参线段.尾点, 参圆, 参极小值, 参在圆上也按在圆内考虑))
    .判断结束
    
    .如果 (尾点在圆内)
        返回 (真)
    .否则
        返回 (假)
    .如果结束
    
.否则
    返回 (假)
.如果结束


.子程序 圆心在线段起点上且线段尾点在圆上, 逻辑型, , 
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 
.参数 参在圆内也按在圆上考虑, 逻辑型, 可空, 

.局部变量 二维点, 类坐标, , , 
.局部变量 圆心在线段起点上, 逻辑型, , , 
.局部变量 点与圆关系, 类关系_点与圆, , , 
.局部变量 尾点在圆上, 逻辑型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
赋值 (圆心在线段起点上, 选择 (小于或等于 (二维点.距离316 (参圆.圆心, 参线段.起点), 参极小值), 真, 假))
.如果 (圆心在线段起点上)
    .判断开始 (是否为空 (参极小值))
        赋值 (尾点在圆上, 点与圆关系.点在圆上 (参线段.尾点, 参圆, , 参在圆内也按在圆上考虑))
    .默认
        赋值 (尾点在圆上, 点与圆关系.点在圆上 (参线段.尾点, 参圆, 参极小值, 参在圆内也按在圆上考虑))
    .判断结束
    
    .如果 (尾点在圆上)
        返回 (真)
    .否则
        返回 (假)
    .如果结束
    
.否则
    返回 (假)
.如果结束


.子程序 圆心在线段起点上且线段尾点在圆外, 逻辑型, , 
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 
.参数 参在圆上也按在圆外考虑, 逻辑型, 可空, 

.局部变量 二维点, 类坐标, , , 
.局部变量 圆心在线段起点上, 逻辑型, , , 
.局部变量 点与圆关系, 类关系_点与圆, , , 
.局部变量 尾点在圆外, 逻辑型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
赋值 (圆心在线段起点上, 选择 (小于或等于 (二维点.距离316 (参圆.圆心, 参线段.起点), 参极小值), 真, 假))
.如果 (圆心在线段起点上)
    .判断开始 (是否为空 (参极小值))
        赋值 (尾点在圆外, 点与圆关系.点在圆外 (参线段.尾点, 参圆, , 参在圆上也按在圆外考虑))
    .默认
        赋值 (尾点在圆外, 点与圆关系.点在圆外 (参线段.尾点, 参圆, 参极小值, 参在圆上也按在圆外考虑))
    .判断结束
    
    .如果 (尾点在圆外)
        返回 (真)
    .否则
        返回 (假)
    .如果结束
    
.否则
    返回 (假)
.如果结束


.子程序 圆心在线段尾点上且线段起点在圆内, 逻辑型, , 
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 
.参数 参在圆上也按在圆内考虑, 逻辑型, 可空, 

.局部变量 二维点, 类坐标, , , 
.局部变量 圆心在线段尾点上, 逻辑型, , , 
.局部变量 点与圆关系, 类关系_点与圆, , , 
.局部变量 起点在圆内, 逻辑型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
赋值 (圆心在线段尾点上, 选择 (小于或等于 (二维点.距离316 (参圆.圆心, 参线段.尾点), 参极小值), 真, 假))
.如果 (圆心在线段尾点上)
    .判断开始 (是否为空 (参极小值))
        赋值 (起点在圆内, 点与圆关系.点在圆内 (参线段.起点, 参圆, , 参在圆上也按在圆内考虑))
    .默认
        赋值 (起点在圆内, 点与圆关系.点在圆内 (参线段.起点, 参圆, 参极小值, 参在圆上也按在圆内考虑))
    .判断结束
    
    .如果 (起点在圆内)
        返回 (真)
    .否则
        返回 (假)
    .如果结束
    
.否则
    返回 (假)
.如果结束


.子程序 圆心在线段尾点上且线段起点在圆上, 逻辑型, , 
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 
.参数 参在圆内也按在圆上考虑, 逻辑型, 可空, 

.局部变量 二维点, 类坐标, , , 
.局部变量 圆心在线段尾点上, 逻辑型, , , 
.局部变量 点与圆关系, 类关系_点与圆, , , 
.局部变量 起点在圆上, 逻辑型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
赋值 (圆心在线段尾点上, 选择 (小于或等于 (二维点.距离316 (参圆.圆心, 参线段.尾点), 参极小值), 真, 假))
.如果 (圆心在线段尾点上)
    .判断开始 (是否为空 (参极小值))
        赋值 (起点在圆上, 点与圆关系.点在圆上 (参线段.起点, 参圆, , 参在圆内也按在圆上考虑))
    .默认
        赋值 (起点在圆上, 点与圆关系.点在圆上 (参线段.起点, 参圆, 参极小值, 参在圆内也按在圆上考虑))
    .判断结束
    
    .如果 (起点在圆上)
        返回 (真)
    .否则
        返回 (假)
    .如果结束
    
.否则
    返回 (假)
.如果结束


.子程序 圆心在线段尾点上且线段起点在圆外, 逻辑型, , 
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 
.参数 参在圆上也按在圆外考虑, 逻辑型, 可空, 

.局部变量 二维点, 类坐标, , , 
.局部变量 圆心在线段尾点上, 逻辑型, , , 
.局部变量 点与圆关系, 类关系_点与圆, , , 
.局部变量 起点在圆外, 逻辑型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
赋值 (圆心在线段尾点上, 选择 (小于或等于 (二维点.距离316 (参圆.圆心, 参线段.尾点), 参极小值), 真, 假))
.如果 (圆心在线段尾点上)
    .判断开始 (是否为空 (参极小值))
        赋值 (起点在圆外, 点与圆关系.点在圆外 (参线段.起点, 参圆, , 参在圆上也按在圆外考虑))
    .默认
        赋值 (起点在圆外, 点与圆关系.点在圆外 (参线段.起点, 参圆, 参极小值, 参在圆上也按在圆外考虑))
    .判断结束
    
    .如果 (起点在圆外)
        返回 (真)
    .否则
        返回 (假)
    .如果结束
    
.否则
    返回 (假)
.如果结束


.子程序 圆心在线段一端点上且另一起点在圆内, 逻辑型, , 
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 
.参数 参在圆内也按在圆上考虑, 逻辑型, 可空, 

.判断开始 (是否为空 (参极小值))
    .如果 (或者 (圆心在线段尾点上且线段起点在圆内 (参线段, 参圆, , 参在圆内也按在圆上考虑), 圆心在线段起点上且线段尾点在圆内 (参线段, 参圆, , 参在圆内也按在圆上考虑)))
        返回 (真)
    .否则
        返回 (假)
    .如果结束
    
.默认
    .如果 (或者 (圆心在线段尾点上且线段起点在圆内 (参线段, 参圆, 参极小值, 参在圆内也按在圆上考虑), 圆心在线段起点上且线段尾点在圆内 (参线段, 参圆, 参极小值, 参在圆内也按在圆上考虑)))
        返回 (真)
    .否则
        返回 (假)
    .如果结束
    
.判断结束


.子程序 圆心在线段一端点上且另一起点在圆上, 逻辑型, , 
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 
.参数 参在圆内也按在圆上考虑, 逻辑型, 可空, 

.判断开始 (是否为空 (参极小值))
    .如果 (或者 (圆心在线段尾点上且线段起点在圆上 (参线段, 参圆, , 参在圆内也按在圆上考虑), 圆心在线段起点上且线段尾点在圆上 (参线段, 参圆, , 参在圆内也按在圆上考虑)))
        返回 (真)
    .否则
        返回 (假)
    .如果结束
    
.默认
    .如果 (或者 (圆心在线段尾点上且线段起点在圆上 (参线段, 参圆, 参极小值, 参在圆内也按在圆上考虑), 圆心在线段起点上且线段尾点在圆上 (参线段, 参圆, 参极小值, 参在圆内也按在圆上考虑)))
        返回 (真)
    .否则
        返回 (假)
    .如果结束
    
.判断结束


.子程序 圆心在线段一端点上且另一起点在圆外, 逻辑型, , 
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 
.参数 参在圆内也按在圆上考虑, 逻辑型, 可空, 

.判断开始 (是否为空 (参极小值))
    .如果 (或者 (圆心在线段尾点上且线段起点在圆外 (参线段, 参圆, , 参在圆内也按在圆上考虑), 圆心在线段起点上且线段尾点在圆外 (参线段, 参圆, , 参在圆内也按在圆上考虑)))
        返回 (真)
    .否则
        返回 (假)
    .如果结束
    
.默认
    .如果 (或者 (圆心在线段尾点上且线段起点在圆外 (参线段, 参圆, 参极小值, 参在圆内也按在圆上考虑), 圆心在线段起点上且线段尾点在圆外 (参线段, 参圆, 参极小值, 参在圆内也按在圆上考虑)))
        返回 (真)
    .否则
        返回 (假)
    .如果结束
    
.判断结束


.子程序 圆心在线段起点上, 逻辑型, , 
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 

.局部变量 二维点, 类坐标, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
.如果 (小于或等于 (二维点.距离316 (参圆.圆心, 参线段.起点), 参极小值))
    返回 (真)
.否则
    返回 (假)
.如果结束


.子程序 圆心在线段尾点上, 逻辑型, , 
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 

.局部变量 二维点, 类坐标, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
.如果 (小于或等于 (二维点.距离316 (参圆.圆心, 参线段.尾点), 参极小值))
    返回 (真)
.否则
    返回 (假)
.如果结束


.子程序 圆心在线段一端点上, 逻辑型, , 
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 

.局部变量 二维点, 类坐标, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
.如果 (或者 (小于或等于 (二维点.距离316 (参圆.圆心, 参线段.起点), 参极小值), 小于或等于 (二维点.距离316 (参圆.圆心, 参线段.尾点), 参极小值)))
    返回 (真)
.否则
    返回 (假)
.如果结束


.子程序 圆心在线段上且线段两端点都在圆内, 逻辑型, , 
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 
.参数 参在圆上也按在圆内考虑, 逻辑型, 可空, 

.局部变量 点与线段关系, 类关系_点与线段, , , 
.局部变量 圆心在线段上, 逻辑型, , , 
.局部变量 点与圆关系, 类关系_点与圆, , , 
.局部变量 起点在圆内, 逻辑型, , , 
.局部变量 尾点在圆内, 逻辑型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
.判断开始 (是否为空 (参极小值))
    赋值 (圆心在线段上, 点与线段关系.点在线段上 (参圆.圆心, 参线段, ))
.默认
    赋值 (圆心在线段上, 点与线段关系.点在线段上 (参圆.圆心, 参线段, 参极小值))
.判断结束

.如果 (圆心在线段上)
    .判断开始 (是否为空 (参极小值))
        赋值 (起点在圆内, 点与圆关系.点在圆内 (参线段.起点, 参圆, , 参在圆上也按在圆内考虑))
        赋值 (尾点在圆内, 点与圆关系.点在圆内 (参线段.尾点, 参圆, , 参在圆上也按在圆内考虑))
    .默认
        赋值 (起点在圆内, 点与圆关系.点在圆内 (参线段.起点, 参圆, 参极小值, 参在圆上也按在圆内考虑))
        赋值 (尾点在圆内, 点与圆关系.点在圆内 (参线段.尾点, 参圆, 参极小值, 参在圆上也按在圆内考虑))
    .判断结束
    
    .如果 (并且 (起点在圆内, 尾点在圆内))
        返回 (真)
    .否则
        返回 (假)
    .如果结束
    
.否则
    返回 (假)
.如果结束


.子程序 圆心在线段上且线段起点在圆内尾点在圆上, 逻辑型, , 
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 

.局部变量 点与线段关系, 类关系_点与线段, , , 
.局部变量 圆心在线段上, 逻辑型, , , 
.局部变量 点与圆关系, 类关系_点与圆, , , 
.局部变量 尾点在圆上, 逻辑型, , , 
.局部变量 起点在圆内, 逻辑型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
.判断开始 (是否为空 (参极小值))
    赋值 (圆心在线段上, 点与线段关系.点在线段上 (参圆.圆心, 参线段, ))
.默认
    赋值 (圆心在线段上, 点与线段关系.点在线段上 (参圆.圆心, 参线段, 参极小值))
.判断结束

.如果 (圆心在线段上)
    .判断开始 (是否为空 (参极小值))
        赋值 (尾点在圆上, 点与圆关系.点在圆上 (参线段.尾点, 参圆, ))
        赋值 (起点在圆内, 点与圆关系.点在圆内 (参线段.起点, 参圆, ))
    .默认
        赋值 (尾点在圆上, 点与圆关系.点在圆上 (参线段.尾点, 参圆, 参极小值))
        赋值 (起点在圆内, 点与圆关系.点在圆内 (参线段.起点, 参圆, 参极小值))
    .判断结束
    
    .如果 (并且 (起点在圆内, 尾点在圆上))
        返回 (真)
    .否则
        返回 (假)
    .如果结束
    
.否则
    返回 (假)
.如果结束


.子程序 圆心在线段上且线段起点在圆上尾点在圆内, 逻辑型, , 
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 

.局部变量 点, 类坐标, , , 
.局部变量 点与线段关系, 类关系_点与线段, , , 
.局部变量 点在线段上, 逻辑型, , , 
.局部变量 点与圆关系, 类关系_点与圆, , , 
.局部变量 起点在圆上, 逻辑型, , , 
.局部变量 尾点在圆内, 逻辑型, , , 
.局部变量 距离, 双精度小数型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
.判断开始 (是否为空 (参极小值))
    赋值 (点在线段上, 点与线段关系.点在线段上 (参圆.圆心, 参线段, ))
.默认
    赋值 (点在线段上, 点与线段关系.点在线段上 (参圆.圆心, 参线段, 参极小值))
.判断结束

.如果 (点在线段上)
    .判断开始 (是否为空 (参极小值))
        赋值 (起点在圆上, 点与圆关系.点在圆上 (参线段.起点, 参圆, ))
        赋值 (尾点在圆内, 点与圆关系.点在圆内 (参线段.尾点, 参圆, ))
    .默认
        赋值 (起点在圆上, 点与圆关系.点在圆上 (参线段.起点, 参圆, 参极小值))
        赋值 (尾点在圆内, 点与圆关系.点在圆内 (参线段.尾点, 参圆, 参极小值))
    .判断结束
    
    .如果 (并且 (起点在圆上, 尾点在圆内))
        返回 (真)
    .否则
        返回 (假)
    .如果结束
    
.否则
    返回 (假)
.如果结束


.子程序 圆心在线段上且线段一端点圆内一端点在圆上, 逻辑型, , 
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 

.局部变量 点与线段关系, 类关系_点与线段, , , 
.局部变量 圆心在线段上, 逻辑型, , , 
.局部变量 点与圆关系, 类关系_点与圆, , , 
.局部变量 起点在圆上, 逻辑型, , , 
.局部变量 尾点在圆上, 逻辑型, , , 
.局部变量 起点在圆内, 逻辑型, , , 
.局部变量 尾点在圆内, 逻辑型, , , 
.局部变量 距离, 双精度小数型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
.判断开始 (是否为空 (参极小值))
    赋值 (圆心在线段上, 点与线段关系.点在线段上 (参圆.圆心, 参线段, ))
.默认
    赋值 (圆心在线段上, 点与线段关系.点在线段上 (参圆.圆心, 参线段, 参极小值))
.判断结束

.如果 (圆心在线段上)
    .判断开始 (是否为空 (参极小值))
        赋值 (起点在圆上, 点与圆关系.点在圆上 (参线段.起点, 参圆, ))
        赋值 (尾点在圆上, 点与圆关系.点在圆上 (参线段.尾点, 参圆, ))
        赋值 (起点在圆内, 点与圆关系.点在圆内 (参线段.起点, 参圆, ))
        赋值 (尾点在圆内, 点与圆关系.点在圆内 (参线段.尾点, 参圆, ))
    .默认
        赋值 (起点在圆上, 点与圆关系.点在圆上 (参线段.起点, 参圆, 参极小值))
        赋值 (尾点在圆上, 点与圆关系.点在圆上 (参线段.尾点, 参圆, 参极小值))
        赋值 (起点在圆内, 点与圆关系.点在圆内 (参线段.起点, 参圆, 参极小值))
        赋值 (尾点在圆内, 点与圆关系.点在圆内 (参线段.尾点, 参圆, 参极小值))
    .判断结束
    
    .如果 (或者 (并且 (起点在圆内, 尾点在圆上), 并且 (起点在圆上, 尾点在圆内)))
        返回 (真)
    .否则
        返回 (假)
    .如果结束
    
.否则
    返回 (假)
.如果结束




.子程序 圆心在线段上且线段两端点都在圆上, 逻辑型, , 
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 
.参数 参在圆内也按在圆上考虑, 逻辑型, 可空, 

.局部变量 点与线段关系, 类关系_点与线段, , , 
.局部变量 圆心在线段上, 逻辑型, , , 
.局部变量 点与圆关系, 类关系_点与圆, , , 
.局部变量 起点在圆上, 逻辑型, , , 
.局部变量 尾点在圆上, 逻辑型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
.判断开始 (是否为空 (参极小值))
    赋值 (圆心在线段上, 点与线段关系.点在线段上 (参圆.圆心, 参线段, ))
.默认
    赋值 (圆心在线段上, 点与线段关系.点在线段上 (参圆.圆心, 参线段, 参极小值))
.判断结束

.如果 (圆心在线段上)
    .判断开始 (是否为空 (参极小值))
        赋值 (起点在圆上, 点与圆关系.点在圆上 (参线段.起点, 参圆, , 参在圆内也按在圆上考虑))
        赋值 (尾点在圆上, 点与圆关系.点在圆上 (参线段.尾点, 参圆, , 参在圆内也按在圆上考虑))
    .默认
        赋值 (起点在圆上, 点与圆关系.点在圆上 (参线段.起点, 参圆, 参极小值, 参在圆内也按在圆上考虑))
        赋值 (尾点在圆上, 点与圆关系.点在圆上 (参线段.尾点, 参圆, 参极小值, 参在圆内也按在圆上考虑))
    .判断结束
    
    .如果 (并且 (起点在圆上, 尾点在圆上))
        返回 (真)
    .否则
        返回 (假)
    .如果结束
    
.否则
    返回 (假)
.如果结束


.子程序 圆心在线段上且线段起点在圆内尾点在圆外, 逻辑型, , 
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 

.局部变量 点与线段关系, 类关系_点与线段, , , 
.局部变量 圆心在线段上, 逻辑型, , , 
.局部变量 点与圆关系, 类关系_点与圆, , , 
.局部变量 尾点在圆外, 逻辑型, , , 
.局部变量 起点在圆内, 逻辑型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
.判断开始 (是否为空 (参极小值))
    赋值 (圆心在线段上, 点与线段关系.点在线段上 (参圆.圆心, 参线段, ))
.默认
    赋值 (圆心在线段上, 点与线段关系.点在线段上 (参圆.圆心, 参线段, 参极小值))
.判断结束

.如果 (圆心在线段上)
    .判断开始 (是否为空 (参极小值))
        赋值 (尾点在圆外, 点与圆关系.点在圆外 (参线段.尾点, 参圆, ))
        赋值 (起点在圆内, 点与圆关系.点在圆内 (参线段.起点, 参圆, ))
    .默认
        赋值 (尾点在圆外, 点与圆关系.点在圆外 (参线段.尾点, 参圆, 参极小值))
        赋值 (起点在圆内, 点与圆关系.点在圆内 (参线段.起点, 参圆, 参极小值))
    .判断结束
    
    .如果 (并且 (起点在圆内, 尾点在圆外))
        返回 (真)
    .否则
        返回 (假)
    .如果结束
    
.否则
    返回 (假)
.如果结束


.子程序 圆心在线段上且线段起点在圆外尾点在圆内, 逻辑型, , 
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 

.局部变量 点与线段关系, 类关系_点与线段, , , 
.局部变量 圆心在线段上, 逻辑型, , , 
.局部变量 点与圆关系, 类关系_点与圆, , , 
.局部变量 尾点在圆内, 逻辑型, , , 
.局部变量 起点在圆外, 逻辑型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
.判断开始 (是否为空 (参极小值))
    赋值 (圆心在线段上, 点与线段关系.点在线段上 (参圆.圆心, 参线段, ))
.默认
    赋值 (圆心在线段上, 点与线段关系.点在线段上 (参圆.圆心, 参线段, 参极小值))
.判断结束

.如果 (圆心在线段上)
    .判断开始 (是否为空 (参极小值))
        赋值 (尾点在圆内, 点与圆关系.点在圆内 (参线段.尾点, 参圆, ))
        赋值 (起点在圆外, 点与圆关系.点在圆外 (参线段.起点, 参圆, ))
    .默认
        赋值 (尾点在圆内, 点与圆关系.点在圆内 (参线段.尾点, 参圆, 参极小值))
        赋值 (起点在圆外, 点与圆关系.点在圆外 (参线段.起点, 参圆, 参极小值))
    .判断结束
    
    .如果 (并且 (起点在圆外, 尾点在圆内))
        返回 (真)
    .否则
        返回 (假)
    .如果结束
    
.否则
    返回 (假)
.如果结束


.子程序 圆心在线段上且线段一端点圆内一端点在圆外, 逻辑型, , 
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 

.局部变量 点与线段关系, 类关系_点与线段, , , 
.局部变量 圆心在线段上, 逻辑型, , , 
.局部变量 点与圆关系, 类关系_点与圆, , , 
.局部变量 起点在圆内, 逻辑型, , , 
.局部变量 尾点在圆内, 逻辑型, , , 
.局部变量 起点在圆外, 逻辑型, , , 
.局部变量 尾点在圆外, 逻辑型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
.判断开始 (是否为空 (参极小值))
    赋值 (圆心在线段上, 点与线段关系.点在线段上 (参圆.圆心, 参线段, ))
.默认
    赋值 (圆心在线段上, 点与线段关系.点在线段上 (参圆.圆心, 参线段, 参极小值))
.判断结束

.如果 (圆心在线段上)
    .判断开始 (是否为空 (参极小值))
        赋值 (起点在圆内, 点与圆关系.点在圆内 (参线段.起点, 参圆, ))
        赋值 (起点在圆外, 点与圆关系.点在圆外 (参线段.起点, 参圆, ))
        赋值 (尾点在圆内, 点与圆关系.点在圆内 (参线段.尾点, 参圆, ))
        赋值 (尾点在圆外, 点与圆关系.点在圆外 (参线段.尾点, 参圆, ))
    .默认
        赋值 (起点在圆内, 点与圆关系.点在圆内 (参线段.起点, 参圆, 参极小值))
        赋值 (起点在圆外, 点与圆关系.点在圆外 (参线段.起点, 参圆, 参极小值))
        赋值 (尾点在圆内, 点与圆关系.点在圆内 (参线段.尾点, 参圆, 参极小值))
        赋值 (尾点在圆外, 点与圆关系.点在圆外 (参线段.尾点, 参圆, 参极小值))
    .判断结束
    
    .如果 (或者 (并且 (起点在圆内, 尾点在圆外), 并且 (起点在圆外, 尾点在圆内)))
        返回 (真)
    .否则
        返回 (假)
    .如果结束
    
.否则
    返回 (假)
.如果结束


.子程序 圆心在线段上且线段起点在圆上尾点在圆外, 逻辑型, , 
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 

.局部变量 点与线段关系, 类关系_点与线段, , , 
.局部变量 圆心在线段上, 逻辑型, , , 
.局部变量 点与圆关系, 类关系_点与圆, , , 
.局部变量 起点在圆上, 逻辑型, , , 
.局部变量 尾点在圆外, 逻辑型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
.判断开始 (是否为空 (参极小值))
    赋值 (圆心在线段上, 点与线段关系.点在线段上 (参圆.圆心, 参线段, ))
.默认
    赋值 (圆心在线段上, 点与线段关系.点在线段上 (参圆.圆心, 参线段, 参极小值))
.判断结束

.如果 (圆心在线段上)
    .判断开始 (是否为空 (参极小值))
        赋值 (起点在圆上, 点与圆关系.点在圆上 (参线段.起点, 参圆, ))
        赋值 (尾点在圆外, 点与圆关系.点在圆外 (参线段.尾点, 参圆, ))
    .默认
        赋值 (起点在圆上, 点与圆关系.点在圆上 (参线段.起点, 参圆, 参极小值))
        赋值 (尾点在圆外, 点与圆关系.点在圆外 (参线段.尾点, 参圆, 参极小值))
    .判断结束
    
    .如果 (并且 (起点在圆上, 尾点在圆外))
        返回 (真)
    .否则
        返回 (假)
    .如果结束
    
.否则
    返回 (假)
.如果结束


.子程序 圆心在线段上且线段起点在圆外尾点在圆上, 逻辑型, , 
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 

.局部变量 点与线段关系, 类关系_点与线段, , , 
.局部变量 圆心在线段上, 逻辑型, , , 
.局部变量 点与圆关系, 类关系_点与圆, , , 
.局部变量 尾点在圆上, 逻辑型, , , 
.局部变量 起点在圆外, 逻辑型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
.判断开始 (是否为空 (参极小值))
    赋值 (圆心在线段上, 点与线段关系.点在线段上 (参圆.圆心, 参线段, ))
.默认
    赋值 (圆心在线段上, 点与线段关系.点在线段上 (参圆.圆心, 参线段, 参极小值))
.判断结束

.如果 (圆心在线段上)
    .判断开始 (是否为空 (参极小值))
        赋值 (起点在圆外, 点与圆关系.点在圆外 (参线段.起点, 参圆, ))
        赋值 (尾点在圆上, 点与圆关系.点在圆上 (参线段.尾点, 参圆, ))
    .默认
        赋值 (起点在圆外, 点与圆关系.点在圆外 (参线段.起点, 参圆, 参极小值))
        赋值 (尾点在圆上, 点与圆关系.点在圆上 (参线段.尾点, 参圆, 参极小值))
    .判断结束
    
    .如果 (并且 (起点在圆外, 尾点在圆上))
        返回 (真)
    .否则
        返回 (假)
    .如果结束
    
.否则
    返回 (假)
.如果结束


.子程序 圆心在线段上且线段一端点圆上一端点在圆外, 逻辑型, , 
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 

.局部变量 点与线段关系, 类关系_点与线段, , , 
.局部变量 圆心在线段上, 逻辑型, , , 
.局部变量 点与圆关系, 类关系_点与圆, , , 
.局部变量 起点在圆上, 逻辑型, , , 
.局部变量 尾点在圆上, 逻辑型, , , 
.局部变量 起点在圆外, 逻辑型, , , 
.局部变量 尾点在圆外, 逻辑型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
.判断开始 (是否为空 (参极小值))
    赋值 (圆心在线段上, 点与线段关系.点在线段上 (参圆.圆心, 参线段, ))
.默认
    赋值 (圆心在线段上, 点与线段关系.点在线段上 (参圆.圆心, 参线段, 参极小值))
.判断结束

.如果 (圆心在线段上)
    .判断开始 (是否为空 (参极小值))
        赋值 (起点在圆上, 点与圆关系.点在圆上 (参线段.起点, 参圆, ))
        赋值 (起点在圆外, 点与圆关系.点在圆外 (参线段.起点, 参圆, ))
        赋值 (尾点在圆上, 点与圆关系.点在圆上 (参线段.尾点, 参圆, ))
        赋值 (尾点在圆外, 点与圆关系.点在圆外 (参线段.尾点, 参圆, ))
    .默认
        赋值 (起点在圆上, 点与圆关系.点在圆上 (参线段.起点, 参圆, 参极小值))
        赋值 (起点在圆外, 点与圆关系.点在圆外 (参线段.起点, 参圆, 参极小值))
        赋值 (尾点在圆上, 点与圆关系.点在圆上 (参线段.尾点, 参圆, 参极小值))
        赋值 (尾点在圆外, 点与圆关系.点在圆外 (参线段.尾点, 参圆, 参极小值))
    .判断结束
    
    .如果 (或者 (并且 (起点在圆上, 尾点在圆外), 并且 (起点在圆外, 尾点在圆上)))
        返回 (真)
    .否则
        返回 (假)
    .如果结束
    
.否则
    返回 (假)
.如果结束


.子程序 圆心在线段上且线段两端点都在圆外, 逻辑型, , 
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 
.参数 参在圆上也按在圆外考虑, 逻辑型, 可空, 

.局部变量 点与线段关系, 类关系_点与线段, , , 
.局部变量 圆心在线段上, 逻辑型, , , 
.局部变量 点与圆关系, 类关系_点与圆, , , 
.局部变量 起点在圆外, 逻辑型, , , 
.局部变量 尾点在圆外, 逻辑型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
.判断开始 (是否为空 (参极小值))
    赋值 (圆心在线段上, 点与线段关系.点在线段上 (参圆.圆心, 参线段, ))
.默认
    赋值 (圆心在线段上, 点与线段关系.点在线段上 (参圆.圆心, 参线段, 参极小值))
.判断结束

.如果 (圆心在线段上)
    .判断开始 (是否为空 (参极小值))
        赋值 (起点在圆外, 点与圆关系.点在圆外 (参线段.起点, 参圆, , 参在圆上也按在圆外考虑))
        赋值 (尾点在圆外, 点与圆关系.点在圆外 (参线段.尾点, 参圆, , 参在圆上也按在圆外考虑))
    .默认
        赋值 (起点在圆外, 点与圆关系.点在圆外 (参线段.起点, 参圆, 参极小值, 参在圆上也按在圆外考虑))
        赋值 (尾点在圆外, 点与圆关系.点在圆外 (参线段.尾点, 参圆, 参极小值, 参在圆上也按在圆外考虑))
    .判断结束
    
    .如果 (并且 (起点在圆外, 尾点在圆外))
        返回 (真)
    .否则
        返回 (假)
    .如果结束
    
.否则
    返回 (假)
.如果结束


.子程序 圆心在线段上且线段起点在圆内, 逻辑型, , 
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 
.参数 参在圆上也按在圆外考虑, 逻辑型, 可空, 

.局部变量 点与线段关系, 类关系_点与线段, , , 
.局部变量 圆心在线段上, 逻辑型, , , 
.局部变量 点与圆关系, 类关系_点与圆, , , 
.局部变量 起点在圆内, 逻辑型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
.判断开始 (是否为空 (参极小值))
    赋值 (圆心在线段上, 点与线段关系.点在线段上 (参圆.圆心, 参线段, ))
.默认
    赋值 (圆心在线段上, 点与线段关系.点在线段上 (参圆.圆心, 参线段, 参极小值))
.判断结束

.如果 (圆心在线段上)
    .判断开始 (是否为空 (参极小值))
        赋值 (起点在圆内, 点与圆关系.点在圆内 (参线段.起点, 参圆, , 参在圆上也按在圆外考虑))
    .默认
        赋值 (起点在圆内, 点与圆关系.点在圆内 (参线段.起点, 参圆, 参极小值, 参在圆上也按在圆外考虑))
    .判断结束
    
    .如果 (起点在圆内)
        返回 (真)
    .否则
        返回 (假)
    .如果结束
    
.否则
    返回 (假)
.如果结束


.子程序 圆心在线段上且线段起点在圆上, 逻辑型, , 
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 
.参数 参在圆上也按在圆外考虑, 逻辑型, 可空, 

.局部变量 点与线段关系, 类关系_点与线段, , , 
.局部变量 圆心在线段上, 逻辑型, , , 
.局部变量 点与圆关系, 类关系_点与圆, , , 
.局部变量 起点在圆上, 逻辑型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
.判断开始 (是否为空 (参极小值))
    赋值 (圆心在线段上, 点与线段关系.点在线段上 (参圆.圆心, 参线段, ))
.默认
    赋值 (圆心在线段上, 点与线段关系.点在线段上 (参圆.圆心, 参线段, 参极小值))
.判断结束

.如果 (圆心在线段上)
    .判断开始 (是否为空 (参极小值))
        赋值 (起点在圆上, 点与圆关系.点在圆上 (参线段.起点, 参圆, , 参在圆上也按在圆外考虑))
    .默认
        赋值 (起点在圆上, 点与圆关系.点在圆上 (参线段.起点, 参圆, 参极小值, 参在圆上也按在圆外考虑))
    .判断结束
    
    .如果 (起点在圆上)
        返回 (真)
    .否则
        返回 (假)
    .如果结束
    
.否则
    返回 (假)
.如果结束


.子程序 圆心在线段上且线段起点在圆外, 逻辑型, , 
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 
.参数 参在圆上也按在圆外考虑, 逻辑型, 可空, 

.局部变量 点与线段关系, 类关系_点与线段, , , 
.局部变量 圆心在线段上, 逻辑型, , , 
.局部变量 点与圆关系, 类关系_点与圆, , , 
.局部变量 起点在圆外, 逻辑型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
.判断开始 (是否为空 (参极小值))
    赋值 (圆心在线段上, 点与线段关系.点在线段上 (参圆.圆心, 参线段, ))
.默认
    赋值 (圆心在线段上, 点与线段关系.点在线段上 (参圆.圆心, 参线段, 参极小值))
.判断结束

.如果 (圆心在线段上)
    .判断开始 (是否为空 (参极小值))
        赋值 (起点在圆外, 点与圆关系.点在圆外 (参线段.起点, 参圆, , 参在圆上也按在圆外考虑))
    .默认
        赋值 (起点在圆外, 点与圆关系.点在圆外 (参线段.起点, 参圆, 参极小值, 参在圆上也按在圆外考虑))
    .判断结束
    
    .如果 (起点在圆外)
        返回 (真)
    .否则
        返回 (假)
    .如果结束
    
.否则
    返回 (假)
.如果结束


.子程序 圆心在线段上且线段尾点在圆内, 逻辑型, , 
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 
.参数 参在圆上也按在圆外考虑, 逻辑型, 可空, 

.局部变量 点与线段关系, 类关系_点与线段, , , 
.局部变量 圆心在线段上, 逻辑型, , , 
.局部变量 点与圆关系, 类关系_点与圆, , , 
.局部变量 尾点在圆内, 逻辑型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
.判断开始 (是否为空 (参极小值))
    赋值 (圆心在线段上, 点与线段关系.点在线段上 (参圆.圆心, 参线段, ))
.默认
    赋值 (圆心在线段上, 点与线段关系.点在线段上 (参圆.圆心, 参线段, 参极小值))
.判断结束

.如果 (圆心在线段上)
    .判断开始 (是否为空 (参极小值))
        赋值 (尾点在圆内, 点与圆关系.点在圆内 (参线段.尾点, 参圆, , 参在圆上也按在圆外考虑))
    .默认
        赋值 (尾点在圆内, 点与圆关系.点在圆内 (参线段.尾点, 参圆, 参极小值, 参在圆上也按在圆外考虑))
    .判断结束
    
    .如果 (尾点在圆内)
        返回 (真)
    .否则
        返回 (假)
    .如果结束
    
.否则
    返回 (假)
.如果结束


.子程序 圆心在线段上且线段尾点在圆上, 逻辑型, , 
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 
.参数 参在圆上也按在圆外考虑, 逻辑型, 可空, 

.局部变量 点与线段关系, 类关系_点与线段, , , 
.局部变量 圆心在线段上, 逻辑型, , , 
.局部变量 点与圆关系, 类关系_点与圆, , , 
.局部变量 尾点在圆上, 逻辑型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
.判断开始 (是否为空 (参极小值))
    赋值 (圆心在线段上, 点与线段关系.点在线段上 (参圆.圆心, 参线段, ))
.默认
    赋值 (圆心在线段上, 点与线段关系.点在线段上 (参圆.圆心, 参线段, 参极小值))
.判断结束

.如果 (圆心在线段上)
    .判断开始 (是否为空 (参极小值))
        赋值 (尾点在圆上, 点与圆关系.点在圆上 (参线段.尾点, 参圆, , 参在圆上也按在圆外考虑))
    .默认
        赋值 (尾点在圆上, 点与圆关系.点在圆上 (参线段.尾点, 参圆, 参极小值, 参在圆上也按在圆外考虑))
    .判断结束
    
    .如果 (尾点在圆上)
        返回 (真)
    .否则
        返回 (假)
    .如果结束
    
.否则
    返回 (假)
.如果结束


.子程序 圆心在线段上且线段尾点在圆外, 逻辑型, , 
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 
.参数 参在圆上也按在圆外考虑, 逻辑型, 可空, 

.局部变量 点与线段关系, 类关系_点与线段, , , 
.局部变量 圆心在线段上, 逻辑型, , , 
.局部变量 点与圆关系, 类关系_点与圆, , , 
.局部变量 尾点在圆外, 逻辑型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
.判断开始 (是否为空 (参极小值))
    赋值 (圆心在线段上, 点与线段关系.点在线段上 (参圆.圆心, 参线段, ))
.默认
    赋值 (圆心在线段上, 点与线段关系.点在线段上 (参圆.圆心, 参线段, 参极小值))
.判断结束

.如果 (圆心在线段上)
    .判断开始 (是否为空 (参极小值))
        赋值 (尾点在圆外, 点与圆关系.点在圆外 (参线段.尾点, 参圆, , 参在圆上也按在圆外考虑))
    .默认
        赋值 (尾点在圆外, 点与圆关系.点在圆外 (参线段.尾点, 参圆, 参极小值, 参在圆上也按在圆外考虑))
    .判断结束
    
    .如果 (尾点在圆外)
        返回 (真)
    .否则
        返回 (假)
    .如果结束
    
.否则
    返回 (假)
.如果结束


.子程序 圆心在线段上且至少有一端点在圆内, 逻辑型, , 
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 
.参数 参在圆上也按在圆外考虑, 逻辑型, 可空, 

.局部变量 点与线段关系, 类关系_点与线段, , , 
.局部变量 圆心在线段上, 逻辑型, , , 
.局部变量 点与圆关系, 类关系_点与圆, , , 
.局部变量 端点在圆内, 逻辑型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
.判断开始 (是否为空 (参极小值))
    赋值 (圆心在线段上, 点与线段关系.点在线段上 (参圆.圆心, 参线段, ))
.默认
    赋值 (圆心在线段上, 点与线段关系.点在线段上 (参圆.圆心, 参线段, 参极小值))
.判断结束

.如果 (圆心在线段上)
    .判断开始 (是否为空 (参极小值))
        赋值 (端点在圆内, 或者 (点与圆关系.点在圆内 (参线段.起点, 参圆, , 参在圆上也按在圆外考虑), 点与圆关系.点在圆内 (参线段.尾点, 参圆, , 参在圆上也按在圆外考虑)))
    .默认
        赋值 (端点在圆内, 或者 (点与圆关系.点在圆内 (参线段.起点, 参圆, 参极小值, 参在圆上也按在圆外考虑), 点与圆关系.点在圆内 (参线段.尾点, 参圆, 参极小值, 参在圆上也按在圆外考虑)))
    .判断结束
    
    .如果 (端点在圆内)
        返回 (真)
    .否则
        返回 (假)
    .如果结束
    
.否则
    返回 (假)
.如果结束


.子程序 圆心在线段上且至少有一端点在圆上, 逻辑型, , 
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 
.参数 参在圆上也按在圆外考虑, 逻辑型, 可空, 

.局部变量 点与线段关系, 类关系_点与线段, , , 
.局部变量 圆心在线段上, 逻辑型, , , 
.局部变量 点与圆关系, 类关系_点与圆, , , 
.局部变量 端点在圆上, 逻辑型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
.判断开始 (是否为空 (参极小值))
    赋值 (圆心在线段上, 点与线段关系.点在线段上 (参圆.圆心, 参线段, ))
.默认
    赋值 (圆心在线段上, 点与线段关系.点在线段上 (参圆.圆心, 参线段, 参极小值))
.判断结束

.如果 (圆心在线段上)
    .判断开始 (是否为空 (参极小值))
        赋值 (端点在圆上, 或者 (点与圆关系.点在圆上 (参线段.起点, 参圆, , 参在圆上也按在圆外考虑), 点与圆关系.点在圆上 (参线段.尾点, 参圆, , 参在圆上也按在圆外考虑)))
    .默认
        赋值 (端点在圆上, 或者 (点与圆关系.点在圆上 (参线段.起点, 参圆, 参极小值, 参在圆上也按在圆外考虑), 点与圆关系.点在圆上 (参线段.尾点, 参圆, 参极小值, 参在圆上也按在圆外考虑)))
    .判断结束
    
    .如果 (端点在圆上)
        返回 (真)
    .否则
        返回 (假)
    .如果结束
    
.否则
    返回 (假)
.如果结束


.子程序 圆心在线段上且至少有一端点在圆外, 逻辑型, , 
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 
.参数 参在圆上也按在圆外考虑, 逻辑型, 可空, 

.局部变量 点与线段关系, 类关系_点与线段, , , 
.局部变量 圆心在线段上, 逻辑型, , , 
.局部变量 点与圆关系, 类关系_点与圆, , , 
.局部变量 端点在圆外, 逻辑型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
.判断开始 (是否为空 (参极小值))
    赋值 (圆心在线段上, 点与线段关系.点在线段上 (参圆.圆心, 参线段, ))
.默认
    赋值 (圆心在线段上, 点与线段关系.点在线段上 (参圆.圆心, 参线段, 参极小值))
.判断结束

.如果 (圆心在线段上)
    .判断开始 (是否为空 (参极小值))
        赋值 (端点在圆外, 或者 (点与圆关系.点在圆外 (参线段.起点, 参圆, , 参在圆上也按在圆外考虑), 点与圆关系.点在圆外 (参线段.尾点, 参圆, , 参在圆上也按在圆外考虑)))
    .默认
        赋值 (端点在圆外, 或者 (点与圆关系.点在圆外 (参线段.起点, 参圆, 参极小值, 参在圆上也按在圆外考虑), 点与圆关系.点在圆外 (参线段.尾点, 参圆, 参极小值, 参在圆上也按在圆外考虑)))
    .判断结束
    
    .如果 (端点在圆外)
        返回 (真)
    .否则
        返回 (假)
    .如果结束
    
.否则
    返回 (假)
.如果结束


.子程序 圆心在线段上, 逻辑型, , 
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 

.局部变量 点与线段关系, 类关系_点与线段, , , 
.局部变量 圆心在线段上, 逻辑型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
.判断开始 (是否为空 (参极小值))
    赋值 (圆心在线段上, 点与线段关系.点在线段上 (参圆.圆心, 参线段, ))
.默认
    赋值 (圆心在线段上, 点与线段关系.点在线段上 (参圆.圆心, 参线段, 参极小值))
.判断结束

.如果 (圆心在线段上)
    返回 (真)
.否则
    返回 (假)
.如果结束


.子程序 圆心在直线上且线段两端点都在圆内, 逻辑型, , 
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 
.参数 参在圆上也按在圆内考虑, 逻辑型, 可空, 

.局部变量 点与直线关系, 类关系_点与直线, , , 
.局部变量 圆心在直线上, 逻辑型, , , 
.局部变量 点与圆关系, 类关系_点与圆, , , 
.局部变量 起点在圆内, 逻辑型, , , 
.局部变量 尾点在圆内, 逻辑型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
.判断开始 (是否为空 (参极小值))
    赋值 (圆心在直线上, 点与直线关系.点在直线上 (参圆.圆心, 参线段.直线, ))
.默认
    赋值 (圆心在直线上, 点与直线关系.点在直线上 (参圆.圆心, 参线段.直线, 参极小值))
.判断结束

.如果 (圆心在直线上)
    .判断开始 (是否为空 (参极小值))
        赋值 (起点在圆内, 点与圆关系.点在圆内 (参线段.起点, 参圆, , 参在圆上也按在圆内考虑))
        赋值 (尾点在圆内, 点与圆关系.点在圆内 (参线段.尾点, 参圆, , 参在圆上也按在圆内考虑))
    .默认
        赋值 (起点在圆内, 点与圆关系.点在圆内 (参线段.起点, 参圆, 参极小值, 参在圆上也按在圆内考虑))
        赋值 (尾点在圆内, 点与圆关系.点在圆内 (参线段.尾点, 参圆, 参极小值, 参在圆上也按在圆内考虑))
    .判断结束
    
    .如果 (并且 (起点在圆内, 尾点在圆内))
        返回 (真)
    .否则
        返回 (假)
    .如果结束
    
.否则
    返回 (假)
.如果结束


.子程序 圆心在直线上且线段起点在圆内尾点在圆上, 逻辑型, , 
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 

.局部变量 点与直线关系, 类关系_点与直线, , , 
.局部变量 圆心在直线上, 逻辑型, , , 
.局部变量 点与圆关系, 类关系_点与圆, , , 
.局部变量 尾点在圆上, 逻辑型, , , 
.局部变量 起点在圆内, 逻辑型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
.判断开始 (是否为空 (参极小值))
    赋值 (圆心在直线上, 点与直线关系.点在直线上 (参圆.圆心, 参线段.直线, ))
.默认
    赋值 (圆心在直线上, 点与直线关系.点在直线上 (参圆.圆心, 参线段.直线, 参极小值))
.判断结束

.如果 (圆心在直线上)
    .判断开始 (是否为空 (参极小值))
        赋值 (尾点在圆上, 点与圆关系.点在圆上 (参线段.尾点, 参圆, ))
        赋值 (起点在圆内, 点与圆关系.点在圆内 (参线段.起点, 参圆, ))
    .默认
        赋值 (尾点在圆上, 点与圆关系.点在圆上 (参线段.尾点, 参圆, 参极小值))
        赋值 (起点在圆内, 点与圆关系.点在圆内 (参线段.起点, 参圆, 参极小值))
    .判断结束
    
    .如果 (并且 (起点在圆内, 尾点在圆上))
        返回 (真)
    .否则
        返回 (假)
    .如果结束
    
.否则
    返回 (假)
.如果结束


.子程序 圆心在直线上且线段起点在圆上尾点在圆内, 逻辑型, , 
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 

.局部变量 点, 类坐标, , , 
.局部变量 点与直线关系, 类关系_点与直线, , , 
.局部变量 圆心在直线上, 逻辑型, , , 
.局部变量 点与圆关系, 类关系_点与圆, , , 
.局部变量 起点在圆上, 逻辑型, , , 
.局部变量 尾点在圆内, 逻辑型, , , 
.局部变量 距离, 双精度小数型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
.判断开始 (是否为空 (参极小值))
    赋值 (圆心在直线上, 点与直线关系.点在直线上 (参圆.圆心, 参线段.直线, ))
.默认
    赋值 (圆心在直线上, 点与直线关系.点在直线上 (参圆.圆心, 参线段.直线, 参极小值))
.判断结束

.如果 (圆心在直线上)
    .判断开始 (是否为空 (参极小值))
        赋值 (起点在圆上, 点与圆关系.点在圆上 (参线段.起点, 参圆, ))
        赋值 (尾点在圆内, 点与圆关系.点在圆内 (参线段.尾点, 参圆, ))
    .默认
        赋值 (起点在圆上, 点与圆关系.点在圆上 (参线段.起点, 参圆, 参极小值))
        赋值 (尾点在圆内, 点与圆关系.点在圆内 (参线段.尾点, 参圆, 参极小值))
    .判断结束
    
    .如果 (并且 (起点在圆上, 尾点在圆内))
        返回 (真)
    .否则
        返回 (假)
    .如果结束
    
.否则
    返回 (假)
.如果结束


.子程序 圆心在直线上且线段一端点圆内一端点在圆上, 逻辑型, , 
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 

.局部变量 点与直线关系, 类关系_点与直线, , , 
.局部变量 圆心在直线上, 逻辑型, , , 
.局部变量 点与圆关系, 类关系_点与圆, , , 
.局部变量 起点在圆上, 逻辑型, , , 
.局部变量 尾点在圆上, 逻辑型, , , 
.局部变量 起点在圆内, 逻辑型, , , 
.局部变量 尾点在圆内, 逻辑型, , , 
.局部变量 距离, 双精度小数型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
.判断开始 (是否为空 (参极小值))
    赋值 (圆心在直线上, 点与直线关系.点在直线上 (参圆.圆心, 参线段.直线, ))
.默认
    赋值 (圆心在直线上, 点与直线关系.点在直线上 (参圆.圆心, 参线段.直线, 参极小值))
.判断结束

.如果 (圆心在直线上)
    .判断开始 (是否为空 (参极小值))
        赋值 (起点在圆上, 点与圆关系.点在圆上 (参线段.起点, 参圆, ))
        赋值 (尾点在圆上, 点与圆关系.点在圆上 (参线段.尾点, 参圆, ))
        赋值 (起点在圆内, 点与圆关系.点在圆内 (参线段.起点, 参圆, ))
        赋值 (尾点在圆内, 点与圆关系.点在圆内 (参线段.尾点, 参圆, ))
    .默认
        赋值 (起点在圆上, 点与圆关系.点在圆上 (参线段.起点, 参圆, 参极小值))
        赋值 (尾点在圆上, 点与圆关系.点在圆上 (参线段.尾点, 参圆, 参极小值))
        赋值 (起点在圆内, 点与圆关系.点在圆内 (参线段.起点, 参圆, 参极小值))
        赋值 (尾点在圆内, 点与圆关系.点在圆内 (参线段.尾点, 参圆, 参极小值))
    .判断结束
    
    .如果 (或者 (并且 (起点在圆内, 尾点在圆上), 并且 (起点在圆上, 尾点在圆内)))
        返回 (真)
    .否则
        返回 (假)
    .如果结束
    
.否则
    返回 (假)
.如果结束




.子程序 圆心在直线上且线段两端点都在圆上, 逻辑型, , 
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 
.参数 参在圆内也按在圆上考虑, 逻辑型, 可空, 

.局部变量 点与直线关系, 类关系_点与直线, , , 
.局部变量 圆心在直线上, 逻辑型, , , 
.局部变量 点与圆关系, 类关系_点与圆, , , 
.局部变量 起点在圆上, 逻辑型, , , 
.局部变量 尾点在圆上, 逻辑型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
.判断开始 (是否为空 (参极小值))
    赋值 (圆心在直线上, 点与直线关系.点在直线上 (参圆.圆心, 参线段.直线, ))
.默认
    赋值 (圆心在直线上, 点与直线关系.点在直线上 (参圆.圆心, 参线段.直线, 参极小值))
.判断结束

.如果 (圆心在直线上)
    .判断开始 (是否为空 (参极小值))
        赋值 (起点在圆上, 点与圆关系.点在圆上 (参线段.起点, 参圆, , 参在圆内也按在圆上考虑))
        赋值 (尾点在圆上, 点与圆关系.点在圆上 (参线段.尾点, 参圆, , 参在圆内也按在圆上考虑))
    .默认
        赋值 (起点在圆上, 点与圆关系.点在圆上 (参线段.起点, 参圆, 参极小值, 参在圆内也按在圆上考虑))
        赋值 (尾点在圆上, 点与圆关系.点在圆上 (参线段.尾点, 参圆, 参极小值, 参在圆内也按在圆上考虑))
    .判断结束
    
    .如果 (并且 (起点在圆上, 尾点在圆上))
        返回 (真)
    .否则
        返回 (假)
    .如果结束
    
.否则
    返回 (假)
.如果结束


.子程序 圆心在直线上且线段起点在圆内尾点在圆外, 逻辑型, , 
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 

.局部变量 点与直线关系, 类关系_点与直线, , , 
.局部变量 圆心在直线上, 逻辑型, , , 
.局部变量 点与圆关系, 类关系_点与圆, , , 
.局部变量 尾点在圆外, 逻辑型, , , 
.局部变量 起点在圆内, 逻辑型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
.判断开始 (是否为空 (参极小值))
    赋值 (圆心在直线上, 点与直线关系.点在直线上 (参圆.圆心, 参线段.直线, ))
.默认
    赋值 (圆心在直线上, 点与直线关系.点在直线上 (参圆.圆心, 参线段.直线, 参极小值))
.判断结束

.如果 (圆心在直线上)
    .判断开始 (是否为空 (参极小值))
        赋值 (尾点在圆外, 点与圆关系.点在圆外 (参线段.尾点, 参圆, ))
        赋值 (起点在圆内, 点与圆关系.点在圆内 (参线段.起点, 参圆, ))
    .默认
        赋值 (尾点在圆外, 点与圆关系.点在圆外 (参线段.尾点, 参圆, 参极小值))
        赋值 (起点在圆内, 点与圆关系.点在圆内 (参线段.起点, 参圆, 参极小值))
    .判断结束
    
    .如果 (并且 (起点在圆内, 尾点在圆外))
        返回 (真)
    .否则
        返回 (假)
    .如果结束
    
.否则
    返回 (假)
.如果结束


.子程序 圆心在直线上且线段起点在圆外尾点在圆内, 逻辑型, , 
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 

.局部变量 点与直线关系, 类关系_点与直线, , , 
.局部变量 圆心在直线上, 逻辑型, , , 
.局部变量 点与圆关系, 类关系_点与圆, , , 
.局部变量 尾点在圆内, 逻辑型, , , 
.局部变量 起点在圆外, 逻辑型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
.判断开始 (是否为空 (参极小值))
    赋值 (圆心在直线上, 点与直线关系.点在直线上 (参圆.圆心, 参线段.直线, ))
.默认
    赋值 (圆心在直线上, 点与直线关系.点在直线上 (参圆.圆心, 参线段.直线, 参极小值))
.判断结束

.如果 (圆心在直线上)
    .判断开始 (是否为空 (参极小值))
        赋值 (尾点在圆内, 点与圆关系.点在圆内 (参线段.尾点, 参圆, ))
        赋值 (起点在圆外, 点与圆关系.点在圆外 (参线段.起点, 参圆, ))
    .默认
        赋值 (尾点在圆内, 点与圆关系.点在圆内 (参线段.尾点, 参圆, 参极小值))
        赋值 (起点在圆外, 点与圆关系.点在圆外 (参线段.起点, 参圆, 参极小值))
    .判断结束
    
    .如果 (并且 (起点在圆外, 尾点在圆内))
        返回 (真)
    .否则
        返回 (假)
    .如果结束
    
.否则
    返回 (假)
.如果结束


.子程序 圆心在直线上且线段一端点圆内一端点在圆外, 逻辑型, , 
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 

.局部变量 点与直线关系, 类关系_点与直线, , , 
.局部变量 圆心在直线上, 逻辑型, , , 
.局部变量 点与圆关系, 类关系_点与圆, , , 
.局部变量 起点在圆内, 逻辑型, , , 
.局部变量 尾点在圆内, 逻辑型, , , 
.局部变量 起点在圆外, 逻辑型, , , 
.局部变量 尾点在圆外, 逻辑型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
.判断开始 (是否为空 (参极小值))
    赋值 (圆心在直线上, 点与直线关系.点在直线上 (参圆.圆心, 参线段.直线, ))
.默认
    赋值 (圆心在直线上, 点与直线关系.点在直线上 (参圆.圆心, 参线段.直线, 参极小值))
.判断结束

.如果 (圆心在直线上)
    .判断开始 (是否为空 (参极小值))
        赋值 (起点在圆内, 点与圆关系.点在圆内 (参线段.起点, 参圆, ))
        赋值 (起点在圆外, 点与圆关系.点在圆外 (参线段.起点, 参圆, ))
        赋值 (尾点在圆内, 点与圆关系.点在圆内 (参线段.尾点, 参圆, ))
        赋值 (尾点在圆外, 点与圆关系.点在圆外 (参线段.尾点, 参圆, ))
    .默认
        赋值 (起点在圆内, 点与圆关系.点在圆内 (参线段.起点, 参圆, 参极小值))
        赋值 (起点在圆外, 点与圆关系.点在圆外 (参线段.起点, 参圆, 参极小值))
        赋值 (尾点在圆内, 点与圆关系.点在圆内 (参线段.尾点, 参圆, 参极小值))
        赋值 (尾点在圆外, 点与圆关系.点在圆外 (参线段.尾点, 参圆, 参极小值))
    .判断结束
    
    .如果 (或者 (并且 (起点在圆内, 尾点在圆外), 并且 (起点在圆外, 尾点在圆内)))
        返回 (真)
    .否则
        返回 (假)
    .如果结束
    
.否则
    返回 (假)
.如果结束


.子程序 圆心在直线上且线段起点在圆上尾点在圆外, 逻辑型, , 
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 

.局部变量 点与直线关系, 类关系_点与直线, , , 
.局部变量 圆心在直线上, 逻辑型, , , 
.局部变量 点与圆关系, 类关系_点与圆, , , 
.局部变量 起点在圆上, 逻辑型, , , 
.局部变量 尾点在圆外, 逻辑型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
.判断开始 (是否为空 (参极小值))
    赋值 (圆心在直线上, 点与直线关系.点在直线上 (参圆.圆心, 参线段.直线, ))
.默认
    赋值 (圆心在直线上, 点与直线关系.点在直线上 (参圆.圆心, 参线段.直线, 参极小值))
.判断结束

.如果 (圆心在直线上)
    .判断开始 (是否为空 (参极小值))
        赋值 (起点在圆上, 点与圆关系.点在圆上 (参线段.起点, 参圆, ))
        赋值 (尾点在圆外, 点与圆关系.点在圆外 (参线段.尾点, 参圆, ))
    .默认
        赋值 (起点在圆上, 点与圆关系.点在圆上 (参线段.起点, 参圆, 参极小值))
        赋值 (尾点在圆外, 点与圆关系.点在圆外 (参线段.尾点, 参圆, 参极小值))
    .判断结束
    
    .如果 (并且 (起点在圆上, 尾点在圆外))
        返回 (真)
    .否则
        返回 (假)
    .如果结束
    
.否则
    返回 (假)
.如果结束


.子程序 圆心在直线上且线段起点在圆外尾点在圆上, 逻辑型, , 
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 

.局部变量 点与直线关系, 类关系_点与直线, , , 
.局部变量 圆心在直线上, 逻辑型, , , 
.局部变量 点与圆关系, 类关系_点与圆, , , 
.局部变量 尾点在圆上, 逻辑型, , , 
.局部变量 起点在圆外, 逻辑型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
.判断开始 (是否为空 (参极小值))
    赋值 (圆心在直线上, 点与直线关系.点在直线上 (参圆.圆心, 参线段.直线, ))
.默认
    赋值 (圆心在直线上, 点与直线关系.点在直线上 (参圆.圆心, 参线段.直线, 参极小值))
.判断结束

.如果 (圆心在直线上)
    .判断开始 (是否为空 (参极小值))
        赋值 (起点在圆外, 点与圆关系.点在圆外 (参线段.起点, 参圆, ))
        赋值 (尾点在圆上, 点与圆关系.点在圆上 (参线段.尾点, 参圆, ))
    .默认
        赋值 (起点在圆外, 点与圆关系.点在圆外 (参线段.起点, 参圆, 参极小值))
        赋值 (尾点在圆上, 点与圆关系.点在圆上 (参线段.尾点, 参圆, 参极小值))
    .判断结束
    
    .如果 (并且 (起点在圆外, 尾点在圆上))
        返回 (真)
    .否则
        返回 (假)
    .如果结束
    
.否则
    返回 (假)
.如果结束


.子程序 圆心在直线上且线段一端点圆上一端点在圆外, 逻辑型, , 
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 

.局部变量 点与直线关系, 类关系_点与直线, , , 
.局部变量 圆心在直线上, 逻辑型, , , 
.局部变量 点与圆关系, 类关系_点与圆, , , 
.局部变量 起点在圆上, 逻辑型, , , 
.局部变量 尾点在圆上, 逻辑型, , , 
.局部变量 起点在圆外, 逻辑型, , , 
.局部变量 尾点在圆外, 逻辑型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
.判断开始 (是否为空 (参极小值))
    赋值 (圆心在直线上, 点与直线关系.点在直线上 (参圆.圆心, 参线段.直线, ))
.默认
    赋值 (圆心在直线上, 点与直线关系.点在直线上 (参圆.圆心, 参线段.直线, 参极小值))
.判断结束

.如果 (圆心在直线上)
    .判断开始 (是否为空 (参极小值))
        赋值 (起点在圆上, 点与圆关系.点在圆上 (参线段.起点, 参圆, ))
        赋值 (起点在圆外, 点与圆关系.点在圆外 (参线段.起点, 参圆, ))
        赋值 (尾点在圆上, 点与圆关系.点在圆上 (参线段.尾点, 参圆, ))
        赋值 (尾点在圆外, 点与圆关系.点在圆外 (参线段.尾点, 参圆, ))
    .默认
        赋值 (起点在圆上, 点与圆关系.点在圆上 (参线段.起点, 参圆, 参极小值))
        赋值 (起点在圆外, 点与圆关系.点在圆外 (参线段.起点, 参圆, 参极小值))
        赋值 (尾点在圆上, 点与圆关系.点在圆上 (参线段.尾点, 参圆, 参极小值))
        赋值 (尾点在圆外, 点与圆关系.点在圆外 (参线段.尾点, 参圆, 参极小值))
    .判断结束
    
    .如果 (或者 (并且 (起点在圆上, 尾点在圆外), 并且 (起点在圆外, 尾点在圆上)))
        返回 (真)
    .否则
        返回 (假)
    .如果结束
    
.否则
    返回 (假)
.如果结束


.子程序 圆心在直线上且线段两端点都在圆外, 逻辑型, , 
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 
.参数 参在圆上也按在圆外考虑, 逻辑型, 可空, 

.局部变量 点与直线关系, 类关系_点与直线, , , 
.局部变量 圆心在直线上, 逻辑型, , , 
.局部变量 点与圆关系, 类关系_点与圆, , , 
.局部变量 起点在圆外, 逻辑型, , , 
.局部变量 尾点在圆外, 逻辑型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
.判断开始 (是否为空 (参极小值))
    赋值 (圆心在直线上, 点与直线关系.点在直线上 (参圆.圆心, 参线段.直线, ))
.默认
    赋值 (圆心在直线上, 点与直线关系.点在直线上 (参圆.圆心, 参线段.直线, 参极小值))
.判断结束

.如果 (圆心在直线上)
    .判断开始 (是否为空 (参极小值))
        赋值 (起点在圆外, 点与圆关系.点在圆外 (参线段.起点, 参圆, , 参在圆上也按在圆外考虑))
        赋值 (尾点在圆外, 点与圆关系.点在圆外 (参线段.尾点, 参圆, , 参在圆上也按在圆外考虑))
    .默认
        赋值 (起点在圆外, 点与圆关系.点在圆外 (参线段.起点, 参圆, 参极小值, 参在圆上也按在圆外考虑))
        赋值 (尾点在圆外, 点与圆关系.点在圆外 (参线段.尾点, 参圆, 参极小值, 参在圆上也按在圆外考虑))
    .判断结束
    
    .如果 (并且 (起点在圆外, 尾点在圆外))
        返回 (真)
    .否则
        返回 (假)
    .如果结束
    
.否则
    返回 (假)
.如果结束


.子程序 圆心在直线上且线段起点在圆内, 逻辑型, , 
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 
.参数 参在圆上也按在圆外考虑, 逻辑型, 可空, 

.局部变量 点与直线关系, 类关系_点与直线, , , 
.局部变量 圆心在直线上, 逻辑型, , , 
.局部变量 点与圆关系, 类关系_点与圆, , , 
.局部变量 起点在圆内, 逻辑型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
.判断开始 (是否为空 (参极小值))
    赋值 (圆心在直线上, 点与直线关系.点在直线上 (参圆.圆心, 参线段.直线, ))
.默认
    赋值 (圆心在直线上, 点与直线关系.点在直线上 (参圆.圆心, 参线段.直线, 参极小值))
.判断结束

.如果 (圆心在直线上)
    .判断开始 (是否为空 (参极小值))
        赋值 (起点在圆内, 点与圆关系.点在圆内 (参线段.起点, 参圆, , 参在圆上也按在圆外考虑))
    .默认
        赋值 (起点在圆内, 点与圆关系.点在圆内 (参线段.起点, 参圆, 参极小值, 参在圆上也按在圆外考虑))
    .判断结束
    
    .如果 (起点在圆内)
        返回 (真)
    .否则
        返回 (假)
    .如果结束
    
.否则
    返回 (假)
.如果结束


.子程序 圆心在直线上且线段起点在圆上, 逻辑型, , 
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 
.参数 参在圆上也按在圆外考虑, 逻辑型, 可空, 

.局部变量 点与直线关系, 类关系_点与直线, , , 
.局部变量 圆心在直线上, 逻辑型, , , 
.局部变量 点与圆关系, 类关系_点与圆, , , 
.局部变量 起点在圆上, 逻辑型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
.判断开始 (是否为空 (参极小值))
    赋值 (圆心在直线上, 点与直线关系.点在直线上 (参圆.圆心, 参线段.直线, ))
.默认
    赋值 (圆心在直线上, 点与直线关系.点在直线上 (参圆.圆心, 参线段.直线, 参极小值))
.判断结束

.如果 (圆心在直线上)
    .判断开始 (是否为空 (参极小值))
        赋值 (起点在圆上, 点与圆关系.点在圆上 (参线段.起点, 参圆, , 参在圆上也按在圆外考虑))
    .默认
        赋值 (起点在圆上, 点与圆关系.点在圆上 (参线段.起点, 参圆, 参极小值, 参在圆上也按在圆外考虑))
    .判断结束
    
    .如果 (起点在圆上)
        返回 (真)
    .否则
        返回 (假)
    .如果结束
    
.否则
    返回 (假)
.如果结束


.子程序 圆心在直线上且线段起点在圆外, 逻辑型, , 
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 
.参数 参在圆上也按在圆外考虑, 逻辑型, 可空, 

.局部变量 点与直线关系, 类关系_点与直线, , , 
.局部变量 圆心在直线上, 逻辑型, , , 
.局部变量 点与圆关系, 类关系_点与圆, , , 
.局部变量 起点在圆外, 逻辑型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
.判断开始 (是否为空 (参极小值))
    赋值 (圆心在直线上, 点与直线关系.点在直线上 (参圆.圆心, 参线段.直线, ))
.默认
    赋值 (圆心在直线上, 点与直线关系.点在直线上 (参圆.圆心, 参线段.直线, 参极小值))
.判断结束

.如果 (圆心在直线上)
    .判断开始 (是否为空 (参极小值))
        赋值 (起点在圆外, 点与圆关系.点在圆外 (参线段.起点, 参圆, , 参在圆上也按在圆外考虑))
    .默认
        赋值 (起点在圆外, 点与圆关系.点在圆外 (参线段.起点, 参圆, 参极小值, 参在圆上也按在圆外考虑))
    .判断结束
    
    .如果 (起点在圆外)
        返回 (真)
    .否则
        返回 (假)
    .如果结束
    
.否则
    返回 (假)
.如果结束


.子程序 圆心在直线上且线段尾点在圆内, 逻辑型, , 
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 
.参数 参在圆上也按在圆外考虑, 逻辑型, 可空, 

.局部变量 点与直线关系, 类关系_点与直线, , , 
.局部变量 圆心在直线上, 逻辑型, , , 
.局部变量 点与圆关系, 类关系_点与圆, , , 
.局部变量 尾点在圆内, 逻辑型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
.判断开始 (是否为空 (参极小值))
    赋值 (圆心在直线上, 点与直线关系.点在直线上 (参圆.圆心, 参线段.直线, ))
.默认
    赋值 (圆心在直线上, 点与直线关系.点在直线上 (参圆.圆心, 参线段.直线, 参极小值))
.判断结束

.如果 (圆心在直线上)
    .判断开始 (是否为空 (参极小值))
        赋值 (尾点在圆内, 点与圆关系.点在圆内 (参线段.尾点, 参圆, , 参在圆上也按在圆外考虑))
    .默认
        赋值 (尾点在圆内, 点与圆关系.点在圆内 (参线段.尾点, 参圆, 参极小值, 参在圆上也按在圆外考虑))
    .判断结束
    
    .如果 (尾点在圆内)
        返回 (真)
    .否则
        返回 (假)
    .如果结束
    
.否则
    返回 (假)
.如果结束


.子程序 圆心在直线上且线段尾点在圆上, 逻辑型, , 
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 
.参数 参在圆上也按在圆外考虑, 逻辑型, 可空, 

.局部变量 点与直线关系, 类关系_点与直线, , , 
.局部变量 圆心在直线上, 逻辑型, , , 
.局部变量 点与圆关系, 类关系_点与圆, , , 
.局部变量 尾点在圆上, 逻辑型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
.判断开始 (是否为空 (参极小值))
    赋值 (圆心在直线上, 点与直线关系.点在直线上 (参圆.圆心, 参线段.直线, ))
.默认
    赋值 (圆心在直线上, 点与直线关系.点在直线上 (参圆.圆心, 参线段.直线, 参极小值))
.判断结束

.如果 (圆心在直线上)
    .判断开始 (是否为空 (参极小值))
        赋值 (尾点在圆上, 点与圆关系.点在圆上 (参线段.尾点, 参圆, , 参在圆上也按在圆外考虑))
    .默认
        赋值 (尾点在圆上, 点与圆关系.点在圆上 (参线段.尾点, 参圆, 参极小值, 参在圆上也按在圆外考虑))
    .判断结束
    
    .如果 (尾点在圆上)
        返回 (真)
    .否则
        返回 (假)
    .如果结束
    
.否则
    返回 (假)
.如果结束


.子程序 圆心在直线上且线段尾点在圆外, 逻辑型, , 
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 
.参数 参在圆上也按在圆外考虑, 逻辑型, 可空, 

.局部变量 点与直线关系, 类关系_点与直线, , , 
.局部变量 圆心在直线上, 逻辑型, , , 
.局部变量 点与圆关系, 类关系_点与圆, , , 
.局部变量 尾点在圆外, 逻辑型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
.判断开始 (是否为空 (参极小值))
    赋值 (圆心在直线上, 点与直线关系.点在直线上 (参圆.圆心, 参线段.直线, ))
.默认
    赋值 (圆心在直线上, 点与直线关系.点在直线上 (参圆.圆心, 参线段.直线, 参极小值))
.判断结束

.如果 (圆心在直线上)
    .判断开始 (是否为空 (参极小值))
        赋值 (尾点在圆外, 点与圆关系.点在圆外 (参线段.尾点, 参圆, , 参在圆上也按在圆外考虑))
    .默认
        赋值 (尾点在圆外, 点与圆关系.点在圆外 (参线段.尾点, 参圆, 参极小值, 参在圆上也按在圆外考虑))
    .判断结束
    
    .如果 (尾点在圆外)
        返回 (真)
    .否则
        返回 (假)
    .如果结束
    
.否则
    返回 (假)
.如果结束


.子程序 圆心在直线上且至少有一端点在圆内, 逻辑型, , 
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 
.参数 参在圆上也按在圆外考虑, 逻辑型, 可空, 

.局部变量 点与直线关系, 类关系_点与直线, , , 
.局部变量 圆心在直线上, 逻辑型, , , 
.局部变量 点与圆关系, 类关系_点与圆, , , 
.局部变量 端点在圆内, 逻辑型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
.判断开始 (是否为空 (参极小值))
    赋值 (圆心在直线上, 点与直线关系.点在直线上 (参圆.圆心, 参线段.直线, ))
.默认
    赋值 (圆心在直线上, 点与直线关系.点在直线上 (参圆.圆心, 参线段.直线, 参极小值))
.判断结束

.如果 (圆心在直线上)
    .判断开始 (是否为空 (参极小值))
        赋值 (端点在圆内, 或者 (点与圆关系.点在圆内 (参线段.起点, 参圆, , 参在圆上也按在圆外考虑), 点与圆关系.点在圆内 (参线段.尾点, 参圆, , 参在圆上也按在圆外考虑)))
    .默认
        赋值 (端点在圆内, 或者 (点与圆关系.点在圆内 (参线段.起点, 参圆, 参极小值, 参在圆上也按在圆外考虑), 点与圆关系.点在圆内 (参线段.尾点, 参圆, 参极小值, 参在圆上也按在圆外考虑)))
    .判断结束
    
    .如果 (端点在圆内)
        返回 (真)
    .否则
        返回 (假)
    .如果结束
    
.否则
    返回 (假)
.如果结束


.子程序 圆心在直线上且至少有一端点在圆上, 逻辑型, , 
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 
.参数 参在圆上也按在圆外考虑, 逻辑型, 可空, 

.局部变量 点与直线关系, 类关系_点与直线, , , 
.局部变量 圆心在直线上, 逻辑型, , , 
.局部变量 点与圆关系, 类关系_点与圆, , , 
.局部变量 端点在圆上, 逻辑型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
.判断开始 (是否为空 (参极小值))
    赋值 (圆心在直线上, 点与直线关系.点在直线上 (参圆.圆心, 参线段.直线, ))
.默认
    赋值 (圆心在直线上, 点与直线关系.点在直线上 (参圆.圆心, 参线段.直线, 参极小值))
.判断结束

.如果 (圆心在直线上)
    .判断开始 (是否为空 (参极小值))
        赋值 (端点在圆上, 或者 (点与圆关系.点在圆上 (参线段.起点, 参圆, , 参在圆上也按在圆外考虑), 点与圆关系.点在圆上 (参线段.尾点, 参圆, , 参在圆上也按在圆外考虑)))
    .默认
        赋值 (端点在圆上, 或者 (点与圆关系.点在圆上 (参线段.起点, 参圆, 参极小值, 参在圆上也按在圆外考虑), 点与圆关系.点在圆上 (参线段.尾点, 参圆, 参极小值, 参在圆上也按在圆外考虑)))
    .判断结束
    
    .如果 (端点在圆上)
        返回 (真)
    .否则
        返回 (假)
    .如果结束
    
.否则
    返回 (假)
.如果结束


.子程序 圆心在直线上且至少有一端点在圆外, 逻辑型, , 
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 
.参数 参在圆上也按在圆外考虑, 逻辑型, 可空, 

.局部变量 点与直线关系, 类关系_点与直线, , , 
.局部变量 圆心在直线上, 逻辑型, , , 
.局部变量 点与圆关系, 类关系_点与圆, , , 
.局部变量 端点在圆外, 逻辑型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
.判断开始 (是否为空 (参极小值))
    赋值 (圆心在直线上, 点与直线关系.点在直线上 (参圆.圆心, 参线段.直线, ))
.默认
    赋值 (圆心在直线上, 点与直线关系.点在直线上 (参圆.圆心, 参线段.直线, 参极小值))
.判断结束

.如果 (圆心在直线上)
    .判断开始 (是否为空 (参极小值))
        赋值 (端点在圆外, 或者 (点与圆关系.点在圆外 (参线段.起点, 参圆, , 参在圆上也按在圆外考虑), 点与圆关系.点在圆外 (参线段.尾点, 参圆, , 参在圆上也按在圆外考虑)))
    .默认
        赋值 (端点在圆外, 或者 (点与圆关系.点在圆外 (参线段.起点, 参圆, 参极小值, 参在圆上也按在圆外考虑), 点与圆关系.点在圆外 (参线段.尾点, 参圆, 参极小值, 参在圆上也按在圆外考虑)))
    .判断结束
    
    .如果 (端点在圆外)
        返回 (真)
    .否则
        返回 (假)
    .如果结束
    
.否则
    返回 (假)
.如果结束


.子程序 圆心在直线上, 逻辑型, , 
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 

.局部变量 点与直线关系, 类关系_点与直线, , , 
.局部变量 圆心在线段上, 逻辑型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
.判断开始 (是否为空 (参极小值))
    赋值 (圆心在线段上, 点与直线关系.点在直线上 (参圆.圆心, 参线段.直线, ))
.默认
    赋值 (圆心在线段上, 点与直线关系.点在直线上 (参圆.圆心, 参线段.直线, 参极小值))
.判断结束

.如果 (圆心在线段上)
    返回 (真)
.否则
    返回 (假)
.如果结束


.子程序 线段两端点都在圆内, 逻辑型, , 
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 
.参数 参在圆上也按在圆内考虑, 逻辑型, 可空, 

.局部变量 点与圆关系, 类关系_点与圆, , , 
.局部变量 起点在圆内, 逻辑型, , , 
.局部变量 尾点在圆内, 逻辑型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
.判断开始 (是否为空 (参极小值))
    赋值 (起点在圆内, 点与圆关系.点在圆内 (参线段.起点, 参圆, , 参在圆上也按在圆内考虑))
    赋值 (尾点在圆内, 点与圆关系.点在圆内 (参线段.尾点, 参圆, , 参在圆上也按在圆内考虑))
.默认
    赋值 (起点在圆内, 点与圆关系.点在圆内 (参线段.起点, 参圆, 参极小值, 参在圆上也按在圆内考虑))
    赋值 (尾点在圆内, 点与圆关系.点在圆内 (参线段.尾点, 参圆, 参极小值, 参在圆上也按在圆内考虑))
.判断结束

.如果 (并且 (起点在圆内, 尾点在圆内))
    返回 (真)
.否则
    返回 (假)
.如果结束


.子程序 线段起点在圆内尾点在圆上, 逻辑型, , 
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 

.局部变量 点与圆关系, 类关系_点与圆, , , 
.局部变量 尾点在圆上, 逻辑型, , , 
.局部变量 起点在圆内, 逻辑型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
.判断开始 (是否为空 (参极小值))
    赋值 (尾点在圆上, 点与圆关系.点在圆上 (参线段.尾点, 参圆, ))
    赋值 (起点在圆内, 点与圆关系.点在圆内 (参线段.起点, 参圆, ))
.默认
    赋值 (尾点在圆上, 点与圆关系.点在圆上 (参线段.尾点, 参圆, 参极小值))
    赋值 (起点在圆内, 点与圆关系.点在圆内 (参线段.起点, 参圆, 参极小值))
.判断结束

.如果 (并且 (起点在圆内, 尾点在圆上))
    返回 (真)
.否则
    返回 (假)
.如果结束


.子程序 线段起点在圆上尾点在圆内, 逻辑型, , 
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 

.局部变量 点与圆关系, 类关系_点与圆, , , 
.局部变量 起点在圆上, 逻辑型, , , 
.局部变量 尾点在圆内, 逻辑型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
.判断开始 (是否为空 (参极小值))
    赋值 (起点在圆上, 点与圆关系.点在圆上 (参线段.起点, 参圆, ))
    赋值 (尾点在圆内, 点与圆关系.点在圆内 (参线段.尾点, 参圆, ))
.默认
    赋值 (起点在圆上, 点与圆关系.点在圆上 (参线段.起点, 参圆, 参极小值))
    赋值 (尾点在圆内, 点与圆关系.点在圆内 (参线段.尾点, 参圆, 参极小值))
.判断结束

.如果 (并且 (起点在圆上, 尾点在圆内))
    返回 (真)
.否则
    返回 (假)
.如果结束


.子程序 线段一端点圆内一端点在圆上, 逻辑型, , 
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 

.局部变量 点与圆关系, 类关系_点与圆, , , 
.局部变量 起点在圆上, 逻辑型, , , 
.局部变量 尾点在圆上, 逻辑型, , , 
.局部变量 起点在圆内, 逻辑型, , , 
.局部变量 尾点在圆内, 逻辑型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
.判断开始 (是否为空 (参极小值))
    赋值 (起点在圆上, 点与圆关系.点在圆上 (参线段.起点, 参圆, ))
    赋值 (尾点在圆上, 点与圆关系.点在圆上 (参线段.尾点, 参圆, ))
    赋值 (起点在圆内, 点与圆关系.点在圆内 (参线段.起点, 参圆, ))
    赋值 (尾点在圆内, 点与圆关系.点在圆内 (参线段.尾点, 参圆, ))
.默认
    赋值 (起点在圆上, 点与圆关系.点在圆上 (参线段.起点, 参圆, 参极小值))
    赋值 (尾点在圆上, 点与圆关系.点在圆上 (参线段.尾点, 参圆, 参极小值))
    赋值 (起点在圆内, 点与圆关系.点在圆内 (参线段.起点, 参圆, 参极小值))
    赋值 (尾点在圆内, 点与圆关系.点在圆内 (参线段.尾点, 参圆, 参极小值))
.判断结束

.如果 (或者 (并且 (起点在圆内, 尾点在圆上), 并且 (起点在圆上, 尾点在圆内)))
    返回 (真)
.否则
    返回 (假)
.如果结束


.子程序 线段两端点都在圆上, 逻辑型, , 
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 
.参数 参在圆内也按在圆上考虑, 逻辑型, 可空, 

.局部变量 点与圆关系, 类关系_点与圆, , , 
.局部变量 起点在圆上, 逻辑型, , , 
.局部变量 尾点在圆上, 逻辑型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
.判断开始 (是否为空 (参极小值))
    赋值 (起点在圆上, 点与圆关系.点在圆上 (参线段.起点, 参圆, , 参在圆内也按在圆上考虑))
    赋值 (尾点在圆上, 点与圆关系.点在圆上 (参线段.尾点, 参圆, , 参在圆内也按在圆上考虑))
.默认
    赋值 (起点在圆上, 点与圆关系.点在圆上 (参线段.起点, 参圆, 参极小值, 参在圆内也按在圆上考虑))
    赋值 (尾点在圆上, 点与圆关系.点在圆上 (参线段.尾点, 参圆, 参极小值, 参在圆内也按在圆上考虑))
.判断结束

.如果 (并且 (起点在圆上, 尾点在圆上))
    返回 (真)
.否则
    返回 (假)
.如果结束


.子程序 线段起点在圆内尾点在圆外, 逻辑型, , 
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 

.局部变量 点与圆关系, 类关系_点与圆, , , 
.局部变量 尾点在圆外, 逻辑型, , , 
.局部变量 起点在圆内, 逻辑型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
.判断开始 (是否为空 (参极小值))
    赋值 (尾点在圆外, 点与圆关系.点在圆外 (参线段.尾点, 参圆, ))
    赋值 (起点在圆内, 点与圆关系.点在圆内 (参线段.起点, 参圆, ))
.默认
    赋值 (尾点在圆外, 点与圆关系.点在圆外 (参线段.尾点, 参圆, 参极小值))
    赋值 (起点在圆内, 点与圆关系.点在圆内 (参线段.起点, 参圆, 参极小值))
.判断结束

.如果 (并且 (起点在圆内, 尾点在圆外))
    返回 (真)
.否则
    返回 (假)
.如果结束


.子程序 线段起点在圆外尾点在圆内, 逻辑型, , 
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 

.局部变量 点与圆关系, 类关系_点与圆, , , 
.局部变量 尾点在圆内, 逻辑型, , , 
.局部变量 起点在圆外, 逻辑型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
.判断开始 (是否为空 (参极小值))
    赋值 (尾点在圆内, 点与圆关系.点在圆内 (参线段.尾点, 参圆, ))
    赋值 (起点在圆外, 点与圆关系.点在圆外 (参线段.起点, 参圆, ))
.默认
    赋值 (尾点在圆内, 点与圆关系.点在圆内 (参线段.尾点, 参圆, 参极小值))
    赋值 (起点在圆外, 点与圆关系.点在圆外 (参线段.起点, 参圆, 参极小值))
.判断结束

.如果 (并且 (起点在圆外, 尾点在圆内))
    返回 (真)
.否则
    返回 (假)
.如果结束


.子程序 线段一端点圆内一端点在圆外, 逻辑型, , 
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 

.局部变量 点与圆关系, 类关系_点与圆, , , 
.局部变量 起点在圆内, 逻辑型, , , 
.局部变量 尾点在圆内, 逻辑型, , , 
.局部变量 起点在圆外, 逻辑型, , , 
.局部变量 尾点在圆外, 逻辑型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
.判断开始 (是否为空 (参极小值))
    赋值 (起点在圆内, 点与圆关系.点在圆内 (参线段.起点, 参圆, ))
    赋值 (起点在圆外, 点与圆关系.点在圆外 (参线段.起点, 参圆, ))
    赋值 (尾点在圆内, 点与圆关系.点在圆内 (参线段.尾点, 参圆, ))
    赋值 (尾点在圆外, 点与圆关系.点在圆外 (参线段.尾点, 参圆, ))
.默认
    赋值 (起点在圆内, 点与圆关系.点在圆内 (参线段.起点, 参圆, 参极小值))
    赋值 (起点在圆外, 点与圆关系.点在圆外 (参线段.起点, 参圆, 参极小值))
    赋值 (尾点在圆内, 点与圆关系.点在圆内 (参线段.尾点, 参圆, 参极小值))
    赋值 (尾点在圆外, 点与圆关系.点在圆外 (参线段.尾点, 参圆, 参极小值))
.判断结束

.如果 (或者 (并且 (起点在圆内, 尾点在圆外), 并且 (起点在圆外, 尾点在圆内)))
    返回 (真)
.否则
    返回 (假)
.如果结束


.子程序 线段起点在圆上尾点在圆外且线段与圆相切, 逻辑型, , 
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 

.局部变量 点与圆关系, 类关系_点与圆, , , 
.局部变量 起点在圆上, 逻辑型, , , 
.局部变量 尾点在圆外, 逻辑型, , , 
.局部变量 直线与圆关系, 类关系_直线与圆, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
.判断开始 (是否为空 (参极小值))
    赋值 (起点在圆上, 点与圆关系.点在圆上 (参线段.起点, 参圆, ))
    赋值 (尾点在圆外, 点与圆关系.点在圆外 (参线段.尾点, 参圆, ))
.默认
    赋值 (起点在圆上, 点与圆关系.点在圆上 (参线段.起点, 参圆, 参极小值))
    赋值 (尾点在圆外, 点与圆关系.点在圆外 (参线段.尾点, 参圆, 参极小值))
.判断结束

.判断开始 (是否为空 (参极小值))
    .如果 (并且 (起点在圆上, 尾点在圆外, 直线与圆关系.直线与圆相切 (参线段.直线, 参圆, )))
        返回 (真)
    .否则
        返回 (假)
    .如果结束
    
.默认
    .如果 (并且 (起点在圆上, 尾点在圆外, 直线与圆关系.直线与圆相切 (参线段.直线, 参圆, 参极小值)))
        返回 (真)
    .否则
        返回 (假)
    .如果结束
    
.判断结束



.子程序 线段起点在圆上尾点在圆外, 逻辑型, , 
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 

.局部变量 点与圆关系, 类关系_点与圆, , , 
.局部变量 起点在圆上, 逻辑型, , , 
.局部变量 尾点在圆外, 逻辑型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
.判断开始 (是否为空 (参极小值))
    赋值 (起点在圆上, 点与圆关系.点在圆上 (参线段.起点, 参圆, ))
    赋值 (尾点在圆外, 点与圆关系.点在圆外 (参线段.尾点, 参圆, ))
.默认
    赋值 (起点在圆上, 点与圆关系.点在圆上 (参线段.起点, 参圆, 参极小值))
    赋值 (尾点在圆外, 点与圆关系.点在圆外 (参线段.尾点, 参圆, 参极小值))
.判断结束

.如果 (并且 (起点在圆上, 尾点在圆外))
    返回 (真)
.否则
    返回 (假)
.如果结束


.子程序 线段起点在圆外尾点在圆上且线段与圆相切, 逻辑型, , 
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 

.局部变量 点与圆关系, 类关系_点与圆, , , 
.局部变量 直线与圆关系, 类关系_直线与圆, , , 
.局部变量 尾点在圆上, 逻辑型, , , 
.局部变量 起点在圆外, 逻辑型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
.判断开始 (是否为空 (参极小值))
    赋值 (起点在圆外, 点与圆关系.点在圆外 (参线段.起点, 参圆, ))
    赋值 (尾点在圆上, 点与圆关系.点在圆上 (参线段.尾点, 参圆, ))
.默认
    赋值 (起点在圆外, 点与圆关系.点在圆外 (参线段.起点, 参圆, 参极小值))
    赋值 (尾点在圆上, 点与圆关系.点在圆上 (参线段.尾点, 参圆, 参极小值))
.判断结束

.判断开始 (是否为空 (参极小值))
    .如果 (并且 (起点在圆外, 尾点在圆上, 直线与圆关系.直线与圆相切 (参线段.直线, 参圆, )))
        返回 (真)
    .否则
        返回 (假)
    .如果结束
    
.默认
    .如果 (并且 (起点在圆外, 尾点在圆上, 直线与圆关系.直线与圆相切 (参线段.直线, 参圆, 参极小值)))
        返回 (真)
    .否则
        返回 (假)
    .如果结束
    
.判断结束


.子程序 线段起点在圆外尾点在圆上, 逻辑型, , 
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 

.局部变量 点与圆关系, 类关系_点与圆, , , 
.局部变量 尾点在圆上, 逻辑型, , , 
.局部变量 起点在圆外, 逻辑型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
.判断开始 (是否为空 (参极小值))
    赋值 (起点在圆外, 点与圆关系.点在圆外 (参线段.起点, 参圆, ))
    赋值 (尾点在圆上, 点与圆关系.点在圆上 (参线段.尾点, 参圆, ))
.默认
    赋值 (起点在圆外, 点与圆关系.点在圆外 (参线段.起点, 参圆, 参极小值))
    赋值 (尾点在圆上, 点与圆关系.点在圆上 (参线段.尾点, 参圆, 参极小值))
.判断结束

.如果 (并且 (起点在圆外, 尾点在圆上))
    返回 (真)
.否则
    返回 (假)
.如果结束


.子程序 线段一端点圆上一端点在圆外且线段与圆相切, 逻辑型, , 
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 

.局部变量 点与圆关系, 类关系_点与圆, , , 
.局部变量 直线与圆关系, 类关系_直线与圆, , , 
.局部变量 起点在圆上, 逻辑型, , , 
.局部变量 尾点在圆上, 逻辑型, , , 
.局部变量 起点在圆外, 逻辑型, , , 
.局部变量 尾点在圆外, 逻辑型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
.判断开始 (是否为空 (参极小值))
    赋值 (起点在圆上, 点与圆关系.点在圆上 (参线段.起点, 参圆, ))
    赋值 (起点在圆外, 点与圆关系.点在圆外 (参线段.起点, 参圆, ))
    赋值 (尾点在圆上, 点与圆关系.点在圆上 (参线段.尾点, 参圆, ))
    赋值 (尾点在圆外, 点与圆关系.点在圆外 (参线段.尾点, 参圆, ))
.默认
    赋值 (起点在圆上, 点与圆关系.点在圆上 (参线段.起点, 参圆, 参极小值))
    赋值 (起点在圆外, 点与圆关系.点在圆外 (参线段.起点, 参圆, 参极小值))
    赋值 (尾点在圆上, 点与圆关系.点在圆上 (参线段.尾点, 参圆, 参极小值))
    赋值 (尾点在圆外, 点与圆关系.点在圆外 (参线段.尾点, 参圆, 参极小值))
.判断结束

.判断开始 (是否为空 (参极小值))
    .如果 (直线与圆关系.直线与圆相切 (参线段.直线, 参圆, ))
        .如果 (或者 (并且 (起点在圆上, 尾点在圆外), 并且 (起点在圆外, 尾点在圆上)))
            返回 (真)
        .否则
            返回 (假)
        .如果结束
        
    .否则
        返回 (假)
    .如果结束
    
.默认
    .如果 (直线与圆关系.直线与圆相切 (参线段.直线, 参圆, 参极小值))
        .如果 (或者 (并且 (起点在圆上, 尾点在圆外), 并且 (起点在圆外, 尾点在圆上)))
            返回 (真)
        .否则
            返回 (假)
        .如果结束
        
    .否则
        返回 (假)
    .如果结束
    
.判断结束


.子程序 线段一端点圆上一端点在圆外, 逻辑型, , 
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 

.局部变量 点与圆关系, 类关系_点与圆, , , 
.局部变量 起点在圆上, 逻辑型, , , 
.局部变量 尾点在圆上, 逻辑型, , , 
.局部变量 起点在圆外, 逻辑型, , , 
.局部变量 尾点在圆外, 逻辑型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
.判断开始 (是否为空 (参极小值))
    赋值 (起点在圆上, 点与圆关系.点在圆上 (参线段.起点, 参圆, ))
    赋值 (起点在圆外, 点与圆关系.点在圆外 (参线段.起点, 参圆, ))
    赋值 (尾点在圆上, 点与圆关系.点在圆上 (参线段.尾点, 参圆, ))
    赋值 (尾点在圆外, 点与圆关系.点在圆外 (参线段.尾点, 参圆, ))
.默认
    赋值 (起点在圆上, 点与圆关系.点在圆上 (参线段.起点, 参圆, 参极小值))
    赋值 (起点在圆外, 点与圆关系.点在圆外 (参线段.起点, 参圆, 参极小值))
    赋值 (尾点在圆上, 点与圆关系.点在圆上 (参线段.尾点, 参圆, 参极小值))
    赋值 (尾点在圆外, 点与圆关系.点在圆外 (参线段.尾点, 参圆, 参极小值))
.判断结束

.如果 (或者 (并且 (起点在圆上, 尾点在圆外), 并且 (起点在圆外, 尾点在圆上)))
    返回 (真)
.否则
    返回 (假)
.如果结束


.子程序 线段两端点都在圆外且线段与圆相交, 逻辑型, , 
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 
.参数 参在圆上也按在圆外考虑, 逻辑型, 可空, 

.局部变量 二维点, 类坐标, , , 
.局部变量 点与线段关系, 类关系_点与线段, , , 
.局部变量 点与圆关系, 类关系_点与圆, , , 
.局部变量 直线与圆关系, 类关系_直线与圆, , , 
.局部变量 起点在圆外, 逻辑型, , , 
.局部变量 尾点在圆外, 逻辑型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
.判断开始 (是否为空 (参极小值))
    赋值 (起点在圆外, 点与圆关系.点在圆外 (参线段.起点, 参圆, , 参在圆上也按在圆外考虑))
    赋值 (尾点在圆外, 点与圆关系.点在圆外 (参线段.尾点, 参圆, , 参在圆上也按在圆外考虑))
.默认
    赋值 (起点在圆外, 点与圆关系.点在圆外 (参线段.起点, 参圆, 参极小值, 参在圆上也按在圆外考虑))
    赋值 (尾点在圆外, 点与圆关系.点在圆外 (参线段.尾点, 参圆, 参极小值, 参在圆上也按在圆外考虑))
.判断结束

.如果 (并且 (起点在圆外, 尾点在圆外))
    .判断开始 (是否为空 (参极小值))
        .如果 (直线与圆关系.直线与圆相交 (参线段.直线, 参圆, , 真, 真))
            .如果 (点与线段关系.点在线段上 (二维点.到线段垂足点316 (参圆.圆心, 参线段), 参线段, ))
                返回 (真)
            .否则
                返回 (假)
            .如果结束
            
        .否则
            返回 (假)
        .如果结束
        
    .默认
        .如果 (直线与圆关系.直线与圆相交 (参线段.直线, 参圆, 参极小值, 真, 真))
            .如果 (点与线段关系.点在线段上 (二维点.到线段垂足点316 (参圆.圆心, 参线段), 参线段, 参极小值))
                返回 (真)
            .否则
                返回 (假)
            .如果结束
            
        .否则
            返回 (假)
        .如果结束
        
    .判断结束
    
.否则
    返回 (假)
.如果结束


.子程序 线段两端点都在圆外且直线与圆相交, 逻辑型, , 
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 
.参数 参在圆上也按在圆外考虑, 逻辑型, 可空, 

.局部变量 点与圆关系, 类关系_点与圆, , , 
.局部变量 直线与圆关系, 类关系_直线与圆, , , 
.局部变量 起点在圆外, 逻辑型, , , 
.局部变量 尾点在圆外, 逻辑型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
.判断开始 (是否为空 (参极小值))
    赋值 (起点在圆外, 点与圆关系.点在圆外 (参线段.起点, 参圆, , 参在圆上也按在圆外考虑))
    赋值 (尾点在圆外, 点与圆关系.点在圆外 (参线段.尾点, 参圆, , 参在圆上也按在圆外考虑))
.默认
    赋值 (起点在圆外, 点与圆关系.点在圆外 (参线段.起点, 参圆, 参极小值, 参在圆上也按在圆外考虑))
    赋值 (尾点在圆外, 点与圆关系.点在圆外 (参线段.尾点, 参圆, 参极小值, 参在圆上也按在圆外考虑))
.判断结束

.如果 (并且 (起点在圆外, 尾点在圆外))
    .判断开始 (是否为空 (参极小值))
        .如果 (直线与圆关系.直线与圆相交 (参线段.直线, 参圆, , 真, 假))
            返回 (真)
        .否则
            返回 (假)
        .如果结束
        
    .默认
        .如果 (直线与圆关系.直线与圆相交 (参线段.直线, 参圆, 参极小值, 真, 假))
            返回 (真)
        .否则
            返回 (假)
        .如果结束
        
    .判断结束
    
.否则
    返回 (假)
.如果结束


.子程序 线段两端点都在圆外且线段与圆相切, 逻辑型, , 
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 
.参数 参在圆上也按在圆外考虑, 逻辑型, 可空, 

.局部变量 二维点, 类坐标, , , 
.局部变量 点与线段关系, 类关系_点与线段, , , 
.局部变量 圆心到线段垂点在线段上, 逻辑型, , , 
.局部变量 点与圆关系, 类关系_点与圆, , , 
.局部变量 直线与圆关系, 类关系_直线与圆, , , 
.局部变量 圆心到线段垂点, 坐标, , , 
.局部变量 起点在圆外, 逻辑型, , , 
.局部变量 尾点在圆外, 逻辑型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
.判断开始 (是否为空 (参极小值))
    赋值 (起点在圆外, 点与圆关系.点在圆外 (参线段.起点, 参圆, , 参在圆上也按在圆外考虑))
    赋值 (尾点在圆外, 点与圆关系.点在圆外 (参线段.尾点, 参圆, , 参在圆上也按在圆外考虑))
.默认
    赋值 (起点在圆外, 点与圆关系.点在圆外 (参线段.起点, 参圆, 参极小值, 参在圆上也按在圆外考虑))
    赋值 (尾点在圆外, 点与圆关系.点在圆外 (参线段.尾点, 参圆, 参极小值, 参在圆上也按在圆外考虑))
.判断结束

.判断开始 (是否为空 (参极小值))
    赋值 (圆心到线段垂点在线段上, 点与线段关系.点在线段上 (二维点.到线段垂足点316 (参圆.圆心, 参线段), 参线段, ))
.默认
    赋值 (圆心到线段垂点在线段上, 点与线段关系.点在线段上 (二维点.到线段垂足点316 (参圆.圆心, 参线段), 参线段, 参极小值))
.判断结束

.如果 (圆心到线段垂点在线段上)
    .判断开始 (是否为空 (参极小值))
        .如果 (直线与圆关系.直线与圆相切 (参线段.直线, 参圆, ))
            .如果 (并且 (起点在圆外, 尾点在圆外))
                返回 (真)
            .否则
                返回 (假)
            .如果结束
            
        .否则
            返回 (假)
        .如果结束
        
    .默认
        .如果 (直线与圆关系.直线与圆相切 (参线段.直线, 参圆, 参极小值))
            .如果 (并且 (起点在圆外, 尾点在圆外))
                返回 (真)
            .否则
                返回 (假)
            .如果结束
            
        .否则
            返回 (假)
        .如果结束
        
    .判断结束
    
.否则
    返回 (假)
.如果结束


.子程序 线段两端点都在圆外且直线与圆相切, 逻辑型, , 
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 
.参数 参在圆上也按在圆外考虑, 逻辑型, 可空, 

.局部变量 二维点, 类坐标, , , 
.局部变量 点与线段关系, 类关系_点与线段, , , 
.局部变量 点与圆关系, 类关系_点与圆, , , 
.局部变量 直线与圆关系, 类关系_直线与圆, , , 
.局部变量 圆心到线段垂点, 坐标, , , 
.局部变量 起点在圆外, 逻辑型, , , 
.局部变量 尾点在圆外, 逻辑型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
.判断开始 (是否为空 (参极小值))
    赋值 (起点在圆外, 点与圆关系.点在圆外 (参线段.起点, 参圆, , 参在圆上也按在圆外考虑))
    赋值 (尾点在圆外, 点与圆关系.点在圆外 (参线段.尾点, 参圆, , 参在圆上也按在圆外考虑))
.默认
    赋值 (起点在圆外, 点与圆关系.点在圆外 (参线段.起点, 参圆, 参极小值, 参在圆上也按在圆外考虑))
    赋值 (尾点在圆外, 点与圆关系.点在圆外 (参线段.尾点, 参圆, 参极小值, 参在圆上也按在圆外考虑))
.判断结束

.判断开始 (是否为空 (参极小值))
    .如果 (直线与圆关系.直线与圆相切 (参线段.直线, 参圆, ))
        .如果 (并且 (起点在圆外, 尾点在圆外))
            返回 (真)
        .否则
            返回 (假)
        .如果结束
        
    .否则
        返回 (假)
    .如果结束
    
.默认
    .如果 (直线与圆关系.直线与圆相切 (参线段.直线, 参圆, 参极小值))
        .如果 (并且 (起点在圆外, 尾点在圆外))
            返回 (真)
        .否则
            返回 (假)
        .如果结束
        
    .否则
        返回 (假)
    .如果结束
    
.判断结束


.子程序 线段两端点都在圆外且线段与圆相离, 逻辑型, , 
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 
.参数 参在圆上也按在圆外考虑, 逻辑型, 可空, 

.局部变量 二维点, 类坐标, , , 
.局部变量 点与线段关系, 类关系_点与线段, , , 
.局部变量 圆心到线段垂点在线段上, 逻辑型, , , 
.局部变量 点与圆关系, 类关系_点与圆, , , 
.局部变量 直线与圆关系, 类关系_直线与圆, , , 
.局部变量 圆心到线段垂点, 坐标, , , 
.局部变量 起点在圆外, 逻辑型, , , 
.局部变量 尾点在圆外, 逻辑型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
.判断开始 (是否为空 (参极小值))
    赋值 (起点在圆外, 点与圆关系.点在圆外 (参线段.起点, 参圆, , 参在圆上也按在圆外考虑))
    赋值 (尾点在圆外, 点与圆关系.点在圆外 (参线段.尾点, 参圆, , 参在圆上也按在圆外考虑))
.默认
    赋值 (起点在圆外, 点与圆关系.点在圆外 (参线段.起点, 参圆, 参极小值, 参在圆上也按在圆外考虑))
    赋值 (尾点在圆外, 点与圆关系.点在圆外 (参线段.尾点, 参圆, 参极小值, 参在圆上也按在圆外考虑))
.判断结束

.判断开始 (是否为空 (参极小值))
    赋值 (圆心到线段垂点在线段上, 点与线段关系.点在线段上 (二维点.到线段垂足点316 (参圆.圆心, 参线段), 参线段, ))
.默认
    赋值 (圆心到线段垂点在线段上, 点与线段关系.点在线段上 (二维点.到线段垂足点316 (参圆.圆心, 参线段), 参线段, 参极小值))
.判断结束


.判断开始 (是否为空 (参极小值))
    .如果 (并且 (起点在圆外, 尾点在圆外))
        .如果 (等于 (圆心到线段垂点在线段上, 假))
            返回 (真)
        .否则
            返回 (假)
        .如果结束
        
    .否则
        返回 (假)
    .如果结束
    
.默认
    .如果 (直线与圆关系.直线与圆相切 (参线段.直线, 参圆, 参极小值))
        .如果 (等于 (圆心到线段垂点在线段上, 假))
            返回 (真)
        .否则
            返回 (假)
        .如果结束
        
    .否则
        返回 (假)
    .如果结束
    
.判断结束


.子程序 线段两端点都在圆外且直线与圆相离, 逻辑型, , 
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 
.参数 参在圆上也按在圆外考虑, 逻辑型, 可空, 

.局部变量 直线与圆关系, 类关系_直线与圆, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
.判断开始 (是否为空 (参极小值))
    返回 (直线与圆关系.直线与圆相离 (参线段.直线, 参圆, , 参在圆上也按在圆外考虑))
.默认
    返回 (直线与圆关系.直线与圆相离 (参线段.直线, 参圆, 参极小值, 参在圆上也按在圆外考虑))
.判断结束


.子程序 线段两端点都在圆外, 逻辑型, , 
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 
.参数 参在圆上也按在圆外考虑, 逻辑型, 可空, 

.局部变量 点与圆关系, 类关系_点与圆, , , 
.局部变量 直线与圆关系, 类关系_直线与圆, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
.判断开始 (是否为空 (参极小值))
    返回 (并且 (点与圆关系.点在圆外 (参线段.起点, 参圆, , 参在圆上也按在圆外考虑), 点与圆关系.点在圆外 (参线段.尾点, 参圆, , 参在圆上也按在圆外考虑)))
.默认
    返回 (并且 (点与圆关系.点在圆外 (参线段.起点, 参圆, 参极小值, 参在圆上也按在圆外考虑), 点与圆关系.点在圆外 (参线段.尾点, 参圆, 参极小值, 参在圆上也按在圆外考虑)))
.判断结束


.子程序 线段与圆有交点, 逻辑型, , 
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 
.参数 参相切时也按相交考虑, 逻辑型, 可空, 

.局部变量 点与圆关系, 类关系_点与圆, , , 
.局部变量 直线与圆关系, 类关系_直线与圆, , , 
.局部变量 直线与圆有交点, 逻辑型, , , 
.局部变量 起点与圆关系, 整数型, , , 
.局部变量 尾点与圆关系, 整数型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
.如果真 (等于 (参相切时也按相交考虑, 假))
    .判断开始 (是否为空 (参极小值))
        .如果真 (等于 (直线与圆关系.直线与圆相切 (参线段.直线, 参圆), 真))
            返回 (假)
        .如果真结束
        
    .默认
        .如果真 (等于 (直线与圆关系.直线与圆相切 (参线段.直线, 参圆, 参极小值), 真))
            返回 (假)
        .如果真结束
        
    .判断结束
    
.如果真结束

.判断开始 (是否为空 (参极小值))
    赋值 (直线与圆有交点, 直线与圆关系.直线与圆相交 (参线段.直线, 参圆, , 真, 真))
.默认
    赋值 (直线与圆有交点, 直线与圆关系.直线与圆相交 (参线段.直线, 参圆, 参极小值, 真, 真))
.判断结束

.如果 (直线与圆有交点)
    .判断开始 (是否为空 (参极小值))
        赋值 (起点与圆关系, 点与圆关系.点与圆关系 (参线段.起点, 参圆))
        赋值 (尾点与圆关系, 点与圆关系.点与圆关系 (参线段.尾点, 参圆))
    .默认
        赋值 (起点与圆关系, 点与圆关系.点与圆关系 (参线段.起点, 参圆, 参极小值))
        赋值 (尾点与圆关系, 点与圆关系.点与圆关系 (参线段.尾点, 参圆, 参极小值))
    .判断结束
    
    .判断开始 (并且 (等于 (起点与圆关系, #点与圆_点在圆上), 等于 (尾点与圆关系, #点与圆_点在圆上)))
        返回 (真)
    .判断 (或者 (并且 (等于 (起点与圆关系, #点与圆_点在圆内), 等于 (尾点与圆关系, #点与圆_点在圆外)), 并且 (等于 (起点与圆关系, #点与圆_点在圆外), 等于 (尾点与圆关系, #点与圆_点在圆内))))
        返回 (真)
    .默认
        返回 (假)
    .判断结束
    
.否则
    返回 (假)
.如果结束


.子程序 圆在线段前面, 逻辑型, , 
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 
.参数 参圆与线段相接也按在线段前面考虑, 逻辑型, 可空, 

.局部变量 二维点, 类坐标, , , 
.局部变量 二维线段, 类线段, , , 
.局部变量 点与线段关系, 类关系_点与线段, , , 
.局部变量 直线与圆关系, 类关系_直线与圆, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------延长线段一个半径的距离-------------------------------------------------------------
赋值 (参线段, 二维线段.延长 (参线段, 参圆.半径, ))
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
.判断开始 (是否为空 (参极小值))
    .如果真 (点与线段关系.点在线段前面 (参圆.圆心, 参线段))
        返回 (真)
    .如果真结束
    
.默认
    .如果真 (点与线段关系.点在线段前面 (参圆.圆心, 参线段, 参极小值))
        返回 (真)
    .如果真结束
    
.判断结束

.如果 (参圆与线段相接也按在线段前面考虑)
    .如果 (小于或等于 (二维点.距离316 (参圆.圆心, 参线段.尾点), 参极小值))
        返回 (真)
    .否则
        返回 (假)
    .如果结束
    
.否则
    返回 (假)
.如果结束


.子程序 圆在线段后面, 逻辑型, , 
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 
.参数 参圆与线段相接也按在线段前面考虑, 逻辑型, 可空, 

.局部变量 二维点, 类坐标, , , 
.局部变量 二维线段, 类线段, , , 
.局部变量 点与线段关系, 类关系_点与线段, , , 
.局部变量 直线与圆关系, 类关系_直线与圆, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------延长线段一个半径的距离-------------------------------------------------------------
赋值 (参线段, 二维线段.延长 (二维线段.反向316 (参线段), 参圆.半径, ))
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
.判断开始 (是否为空 (参极小值))
    .如果真 (点与线段关系.点在线段前面 (参圆.圆心, 参线段))
        返回 (真)
    .如果真结束
    
.默认
    .如果真 (点与线段关系.点在线段前面 (参圆.圆心, 参线段, 参极小值))
        返回 (真)
    .如果真结束
    
.判断结束

.如果 (参圆与线段相接也按在线段前面考虑)
    .如果 (小于或等于 (二维点.距离316 (参圆.圆心, 参线段.尾点), 参极小值))
        返回 (真)
    .否则
        返回 (假)
    .如果结束
    
.否则
    返回 (假)
.如果结束


.子程序 圆在线段左侧, 逻辑型, , 
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 
.参数 参圆与线段相切也按在线段一侧考虑, 逻辑型, 可空, 

.局部变量 二维点, 类坐标, , , 
.局部变量 点与线段关系, 类关系_点与线段, , , 
.局部变量 直线与圆关系, 类关系_直线与圆, , , 
.局部变量 圆在直线一侧, 逻辑型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
.如果 (参圆与线段相切也按在线段一侧考虑)
    赋值 (圆在直线一侧, 大于或等于 (二维点.到直线垂距316 (参圆.圆心, 参线段.直线), 参圆.半径))
.否则
    赋值 (圆在直线一侧, 大于 (二维点.到直线垂距316 (参圆.圆心, 参线段.直线), 参圆.半径))
.如果结束


.如果 (圆在直线一侧)
    .判断开始 (是否为空 (参极小值))
        .如果 (点与线段关系.点在线段左面 (参圆.圆心, 参线段))
            返回 (真)
        .否则
            返回 (假)
        .如果结束
        
    .默认
        .如果 (点与线段关系.点在线段左面 (参圆.圆心, 参线段, 参极小值))
            返回 (真)
        .否则
            返回 (假)
        .如果结束
        
    .判断结束
    
.否则
    返回 (假)
.如果结束




.子程序 圆在线段右侧, 逻辑型, , 
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 
.参数 参圆与线段相切也按在线段一侧考虑, 逻辑型, 可空, 

.局部变量 二维点, 类坐标, , , 
.局部变量 点与线段关系, 类关系_点与线段, , , 
.局部变量 直线与圆关系, 类关系_直线与圆, , , 
.局部变量 圆在直线一侧, 逻辑型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
.如果 (参圆与线段相切也按在线段一侧考虑)
    赋值 (圆在直线一侧, 大于或等于 (二维点.到直线垂距316 (参圆.圆心, 参线段.直线), 参圆.半径))
.否则
    赋值 (圆在直线一侧, 大于 (二维点.到直线垂距316 (参圆.圆心, 参线段.直线), 参圆.半径))
.如果结束


.如果 (圆在直线一侧)
    .判断开始 (是否为空 (参极小值))
        .如果 (点与线段关系.点在线段右面 (参圆.圆心, 参线段))
            返回 (真)
        .否则
            返回 (假)
        .如果结束
        
    .默认
        .如果 (点与线段关系.点在线段右面 (参圆.圆心, 参线段, 参极小值))
            返回 (真)
        .否则
            返回 (假)
        .如果结束
        
    .判断结束
    
.否则
    返回 (假)
.如果结束




.子程序 圆在线段正前面, 逻辑型, , 
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 
.参数 参圆与线段相接也按在线段前面考虑, 逻辑型, 可空, 

.局部变量 点与线段关系, 类关系_点与线段, , , 
.局部变量 二维线段, 类线段, , , 
.局部变量 二维点, 类坐标, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
赋值 (参线段, 二维线段.延长 (参线段, 参圆.半径))
.判断开始 (是否为空 (参极小值))
    .如果 (点与线段关系.点在线段正前面 (参圆.圆心, 参线段, ))
        返回 (真)
    .否则
        .如果 (参圆与线段相接也按在线段前面考虑)
            .如果 (小于或等于 (二维点.距离316 (参圆.圆心, 参线段.尾点), 参极小值))
                返回 (真)
            .否则
                返回 (假)
            .如果结束
            
        .否则
            返回 (假)
        .如果结束
        
    .如果结束
    
.默认
    .如果 (点与线段关系.点在线段正前面 (参圆.圆心, 参线段, 参极小值))
        返回 (真)
    .否则
        .如果 (参圆与线段相接也按在线段前面考虑)
            .如果 (小于或等于 (二维点.距离316 (参圆.圆心, 参线段.尾点), 参极小值))
                返回 (真)
            .否则
                返回 (假)
            .如果结束
            
        .否则
            返回 (假)
        .如果结束
        
    .如果结束
    
.判断结束


.子程序 圆在线段正后面, 逻辑型, , 
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 
.参数 参圆与线段相接也按在线段后面考虑, 逻辑型, 可空, 

.局部变量 点与线段关系, 类关系_点与线段, , , 
.局部变量 二维线段, 类线段, , , 
.局部变量 二维点, 类坐标, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
赋值 (参线段, 二维线段.延长 (二维线段.反向316 (参线段), 参圆.半径))
.判断开始 (是否为空 (参极小值))
    .如果 (点与线段关系.点在线段正前面 (参圆.圆心, 参线段, ))
        返回 (真)
    .否则
        .如果 (参圆与线段相接也按在线段后面考虑)
            .如果 (小于或等于 (二维点.距离316 (参圆.圆心, 参线段.尾点), 参极小值))
                返回 (真)
            .否则
                返回 (假)
            .如果结束
            
        .否则
            返回 (假)
        .如果结束
        
    .如果结束
    
.默认
    .如果 (点与线段关系.点在线段正前面 (参圆.圆心, 参线段, 参极小值))
        返回 (真)
    .否则
        .如果 (参圆与线段相接也按在线段后面考虑)
            .如果 (小于或等于 (二维点.距离316 (参圆.圆心, 参线段.尾点), 参极小值))
                返回 (真)
            .否则
                返回 (假)
            .如果结束
            
        .否则
            返回 (假)
        .如果结束
        
    .如果结束
    
.判断结束


.子程序 圆在线段左前侧, 逻辑型, , 
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 
.参数 参圆与直线相切也按在线段一侧考虑, 逻辑型, 可空, 

.局部变量 二维点, 类坐标, , , 
.局部变量 二维线段, 类线段, , , 
.局部变量 点与线段关系, 类关系_点与线段, , , 
.局部变量 直线与圆关系, 类关系_直线与圆, , , 
.局部变量 圆在直线一侧, 逻辑型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
.如果 (参圆与直线相切也按在线段一侧考虑)
    赋值 (圆在直线一侧, 大于或等于 (二维点.到直线垂距316 (参圆.圆心, 参线段.直线), 参圆.半径))
.否则
    赋值 (圆在直线一侧, 大于 (二维点.到直线垂距316 (参圆.圆心, 参线段.直线), 参圆.半径))
.如果结束
赋值 (参线段, 二维线段.延长 (参线段, 参圆.半径))
.如果 (圆在直线一侧)
    .判断开始 (是否为空 (参极小值))
        .如果 (点与线段关系.点在线段左前侧 (参圆.圆心, 参线段))
            返回 (真)
        .否则
            返回 (假)
        .如果结束
        
    .默认
        .如果 (点与线段关系.点在线段左前侧 (参圆.圆心, 参线段, 参极小值))
            返回 (真)
        .否则
            返回 (假)
        .如果结束
        
    .判断结束
    
.否则
    返回 (假)
.如果结束




.子程序 圆在线段右前侧, 逻辑型, , 
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 
.参数 参圆与直线相切也按在线段一侧考虑, 逻辑型, 可空, 

.局部变量 二维点, 类坐标, , , 
.局部变量 二维线段, 类线段, , , 
.局部变量 点与线段关系, 类关系_点与线段, , , 
.局部变量 直线与圆关系, 类关系_直线与圆, , , 
.局部变量 圆在直线一侧, 逻辑型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
.如果 (参圆与直线相切也按在线段一侧考虑)
    赋值 (圆在直线一侧, 大于或等于 (二维点.到直线垂距316 (参圆.圆心, 参线段.直线), 参圆.半径))
.否则
    赋值 (圆在直线一侧, 大于 (二维点.到直线垂距316 (参圆.圆心, 参线段.直线), 参圆.半径))
.如果结束
赋值 (参线段, 二维线段.延长 (参线段, 参圆.半径))
.如果 (圆在直线一侧)
    .判断开始 (是否为空 (参极小值))
        .如果 (点与线段关系.点在线段右前侧 (参圆.圆心, 参线段))
            返回 (真)
        .否则
            返回 (假)
        .如果结束
        
    .默认
        .如果 (点与线段关系.点在线段右前侧 (参圆.圆心, 参线段, 参极小值))
            返回 (真)
        .否则
            返回 (假)
        .如果结束
        
    .判断结束
    
.否则
    返回 (假)
.如果结束




.子程序 圆在线段左正侧, 逻辑型, , 
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 
.参数 参圆与直线相切也按在线段一侧考虑, 逻辑型, 可空, 

.局部变量 二维点, 类坐标, , , 
.局部变量 二维线段, 类线段, , , 
.局部变量 点与线段关系, 类关系_点与线段, , , 
.局部变量 直线与圆关系, 类关系_直线与圆, , , 
.局部变量 圆在直线一侧, 逻辑型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
.如果 (参圆与直线相切也按在线段一侧考虑)
    赋值 (圆在直线一侧, 大于或等于 (二维点.到直线垂距316 (参圆.圆心, 参线段.直线), 参圆.半径))
.否则
    赋值 (圆在直线一侧, 大于 (二维点.到直线垂距316 (参圆.圆心, 参线段.直线), 参圆.半径))
.如果结束
赋值 (参线段, 二维线段.定长 (参线段, 相减 (二维线段.求长度316 (参线段), 相乘 (参圆.半径, 2)), 二维线段.中点316 (参线段)))
.如果 (圆在直线一侧)
    .判断开始 (是否为空 (参极小值))
        .如果 (点与线段关系.点在线段左正侧 (参圆.圆心, 参线段))
            返回 (真)
        .否则
            返回 (假)
        .如果结束
        
    .默认
        .如果 (点与线段关系.点在线段左正侧 (参圆.圆心, 参线段, 参极小值))
            返回 (真)
        .否则
            返回 (假)
        .如果结束
        
    .判断结束
    
.否则
    返回 (假)
.如果结束


.子程序 圆在线段右正侧, 逻辑型, , 
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 
.参数 参圆与直线相切也按在线段一侧考虑, 逻辑型, 可空, 

.局部变量 二维点, 类坐标, , , 
.局部变量 二维线段, 类线段, , , 
.局部变量 点与线段关系, 类关系_点与线段, , , 
.局部变量 直线与圆关系, 类关系_直线与圆, , , 
.局部变量 圆在直线一侧, 逻辑型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
.如果 (参圆与直线相切也按在线段一侧考虑)
    赋值 (圆在直线一侧, 大于或等于 (二维点.到直线垂距316 (参圆.圆心, 参线段.直线), 参圆.半径))
.否则
    赋值 (圆在直线一侧, 大于 (二维点.到直线垂距316 (参圆.圆心, 参线段.直线), 参圆.半径))
.如果结束
赋值 (参线段, 二维线段.定长 (参线段, 相减 (二维线段.求长度316 (参线段), 相乘 (参圆.半径, 2)), 二维线段.中点316 (参线段)))
.如果 (圆在直线一侧)
    .判断开始 (是否为空 (参极小值))
        .如果 (点与线段关系.点在线段右正侧 (参圆.圆心, 参线段))
            返回 (真)
        .否则
            返回 (假)
        .如果结束
        
    .默认
        .如果 (点与线段关系.点在线段右正侧 (参圆.圆心, 参线段, 参极小值))
            返回 (真)
        .否则
            返回 (假)
        .如果结束
        
    .判断结束
    
.否则
    返回 (假)
.如果结束




.子程序 圆在线段左后侧, 逻辑型, , 
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 
.参数 参圆与直线相切也按在线段一侧考虑, 逻辑型, 可空, 

.局部变量 二维点, 类坐标, , , 
.局部变量 二维线段, 类线段, , , 
.局部变量 点与线段关系, 类关系_点与线段, , , 
.局部变量 直线与圆关系, 类关系_直线与圆, , , 
.局部变量 圆在直线一侧, 逻辑型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
.如果 (参圆与直线相切也按在线段一侧考虑)
    赋值 (圆在直线一侧, 大于或等于 (二维点.到直线垂距316 (参圆.圆心, 参线段.直线), 参圆.半径))
.否则
    赋值 (圆在直线一侧, 大于 (二维点.到直线垂距316 (参圆.圆心, 参线段.直线), 参圆.半径))
.如果结束
赋值 (参线段, 二维线段.延长 (二维线段.反向316 (参线段), 参圆.半径))
.如果 (圆在直线一侧)
    .判断开始 (是否为空 (参极小值))
        .如果 (点与线段关系.点在线段右前侧 (参圆.圆心, 参线段))
            返回 (真)
        .否则
            返回 (假)
        .如果结束
        
    .默认
        .如果 (点与线段关系.点在线段右前侧 (参圆.圆心, 参线段, 参极小值))
            返回 (真)
        .否则
            返回 (假)
        .如果结束
        
    .判断结束
    
.否则
    返回 (假)
.如果结束




.子程序 圆在线段右后侧, 逻辑型, , 
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 
.参数 参圆与直线相切也按在线段一侧考虑, 逻辑型, 可空, 

.局部变量 二维点, 类坐标, , , 
.局部变量 二维线段, 类线段, , , 
.局部变量 点与线段关系, 类关系_点与线段, , , 
.局部变量 直线与圆关系, 类关系_直线与圆, , , 
.局部变量 圆在直线一侧, 逻辑型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
.如果 (参圆与直线相切也按在线段一侧考虑)
    赋值 (圆在直线一侧, 大于或等于 (二维点.到直线垂距316 (参圆.圆心, 参线段.直线), 参圆.半径))
.否则
    赋值 (圆在直线一侧, 大于 (二维点.到直线垂距316 (参圆.圆心, 参线段.直线), 参圆.半径))
.如果结束
赋值 (参线段, 二维线段.延长 (二维线段.反向316 (参线段), 参圆.半径))
.如果 (圆在直线一侧)
    .判断开始 (是否为空 (参极小值))
        .如果 (点与线段关系.点在线段左前侧 (参圆.圆心, 参线段))
            返回 (真)
        .否则
            返回 (假)
        .如果结束
        
    .默认
        .如果 (点与线段关系.点在线段左前侧 (参圆.圆心, 参线段, 参极小值))
            返回 (真)
        .否则
            返回 (假)
        .如果结束
        
    .判断结束
    
.否则
    返回 (假)
.如果结束




.子程序 线段与圆关系, 整数型, , 欲进行复杂关系的判断，请调用相应的方法。为提高速度，本程序还可以在稳定后进行优化。
.参数 参线段, 线段, , 
.参数 参圆, 圆, , 
.参数 参极小值, 双精度小数型, 可空, 

.局部变量 直线与圆关系类, 类关系_直线与圆, , , 
.局部变量 点与线段关系类, 类关系_点与线段, , , 
.局部变量 点与直线关系类, 类关系_点与直线, , , 
.局部变量 点与圆关系类, 类关系_点与圆, , , 
.局部变量 二维线段类, 类线段, , , 
.局部变量 二维点, 类坐标, , , 
.局部变量 直线与圆关系, 逻辑型, , , 
.局部变量 圆心在线段上, 逻辑型, , , 

 ' ---------------------------------------------------初始化极小值-------------------------------------------------------------------------
.如果 (是否为空 (参极小值))
    赋值 (参极小值, #零5)
.否则
    赋值 (参极小值, 取绝对值 (参极小值))
.如果结束
 ' ---------------------------------------------------判断关系-------------------------------------------------------------------------
赋值 (直线与圆关系, 直线与圆关系类.直线与圆关系 (参线段.直线, 参圆, 参极小值))
.判断开始 (等于 (直线与圆关系, #直线与圆_直线经过圆心))
    .判断开始 (点与线段关系类.点在线段上 (参圆.圆心, 参线段, 参极小值))
        .判断开始 (小于或等于 (二维点.距离316 (参圆.圆心, 参线段.起点), 参极小值))
            .判断开始 (点与圆关系类.点在圆内 (参线段.尾点, 参圆, 参极小值, 假))
                返回 (#线段与圆_圆心在线段起点上且线段尾点在圆内)
            .判断 (点与圆关系类.点在圆上 (参线段.尾点, 参圆, 参极小值, 假))
                返回 (#线段与圆_圆心在线段起点上且线段尾点在圆上)
            .默认
                返回 (#线段与圆_圆心在线段起点上且线段尾点在圆外)
            .判断结束
            
        .判断 (小于或等于 (二维点.距离316 (参圆.圆心, 参线段.尾点), 参极小值))
            .判断开始 (点与圆关系类.点在圆内 (参线段.起点, 参圆, 参极小值, 假))
                返回 (#线段与圆_圆心在线段尾点上且线段起点在圆内)
            .判断 (点与圆关系类.点在圆上 (参线段.起点, 参圆, 参极小值, 假))
                返回 (#线段与圆_圆心在线段尾点上且线段起点在圆上)
            .默认
                返回 (#线段与圆_圆心在线段尾点上且线段起点在圆外)
            .判断结束
            
        .判断 (并且 (小于 (二维点.距离316 (参圆.圆心, 参线段.起点), 参圆.半径), 小于 (二维点.距离316 (参圆.圆心, 参线段.尾点), 参圆.半径)))
            返回 (#线段与圆_圆心在线段上且线段两端点都在圆内)
        .判断 (并且 (小于 (二维点.距离316 (参圆.圆心, 参线段.起点), 参圆.半径), 大于或等于 (二维点.距离316 (参圆.圆心, 参线段.尾点), 相减 (参圆.半径, 参极小值)), 小于或等于 (二维点.距离316 (参圆.圆心, 参线段.尾点), 相加 (参圆.半径, 参极小值))))
            返回 (#线段与圆_圆心在线段上且线段起点在圆内尾点在圆上)
        .判断 (并且 (小于 (二维点.距离316 (参圆.圆心, 参线段.起点), 参圆.半径), 大于 (二维点.距离316 (参圆.圆心, 参线段.尾点), 相加 (参圆.半径, 参极小值))))
            返回 (#线段与圆_圆心在线段上且线段起点在圆内尾点在圆外)
        .判断 (并且 (大于或等于 (二维点.距离316 (参圆.圆心, 参线段.起点), 相减 (参圆.半径, 参极小值)), 小于或等于 (二维点.距离316 (参圆.圆心, 参线段.起点), 相加 (参圆.半径, 参极小值)), 小于 (二维点.距离316 (参圆.圆心, 参线段.尾点), 相减 (参圆.半径, 参极小值))))
            返回 (#线段与圆_圆心在线段上且线段起点在圆上尾点在圆内)
        .判断 (并且 (大于或等于 (二维点.距离316 (参圆.圆心, 参线段.起点), 相减 (参圆.半径, 参极小值)), 小于或等于 (二维点.距离316 (参圆.圆心, 参线段.起点), 相加 (参圆.半径, 参极小值)), 大于或等于 (二维点.距离316 (参圆.圆心, 参线段.尾点), 相减 (参圆.半径, 参极小值)), 小于或等于 (二维点.距离316 (参圆.圆心, 参线段.尾点), 相加 (参圆.半径, 参极小值))))
            返回 (#线段与圆_圆心在线段上且线段两端点都在圆上)
        .判断 (并且 (大于或等于 (二维点.距离316 (参圆.圆心, 参线段.起点), 相减 (参圆.半径, 参极小值)), 小于或等于 (二维点.距离316 (参圆.圆心, 参线段.起点), 相加 (参圆.半径, 参极小值)), 大于 (二维点.距离316 (参圆.圆心, 参线段.尾点), 相加 (参圆.半径, 参极小值))))
            返回 (#线段与圆_圆心在线段上且线段起点在圆上尾点在圆外)
        .判断 (并且 (大于 (二维点.距离316 (参圆.圆心, 参线段.起点), 相加 (参圆.半径, 参极小值)), 大于或等于 (二维点.距离316 (参圆.圆心, 参线段.尾点), 相减 (参圆.半径, 参极小值)), 小于或等于 (二维点.距离316 (参圆.圆心, 参线段.尾点), 相加 (参圆.半径, 参极小值))))
            返回 (#线段与圆_圆心在线段上且线段起点在圆外尾点在圆上)
        .判断 (并且 (大于 (二维点.距离316 (参圆.圆心, 参线段.起点), 相加 (参圆.半径, 参极小值)), 大于 (二维点.距离316 (参圆.圆心, 参线段.尾点), 相加 (参圆.半径, 参极小值))))
            返回 (#线段与圆_圆心在线段上且线段两端点都在圆外)
        .默认
            信息框 (“错误程序分支。”, 0, )
        .判断结束
        
    .默认
         ' 点与直线关系类.点在直线上 (参圆.圆心, 参线段.一般式, 参极小值)
        .判断开始 (并且 (小于 (二维点.距离316 (参圆.圆心, 参线段.起点), 参圆.半径), 小于 (二维点.距离316 (参圆.圆心, 参线段.尾点), 参圆.半径)))
            返回 (#线段与圆_圆心在直线上且线段两端点都在圆内)
        .判断 (并且 (小于 (二维点.距离316 (参圆.圆心, 参线段.起点), 参圆.半径), 大于或等于 (二维点.距离316 (参圆.圆心, 参线段.尾点), 相减 (参圆.半径, 参极小值)), 小于或等于 (二维点.距离316 (参圆.圆心, 参线段.尾点), 相加 (参圆.半径, 参极小值))))
            返回 (#线段与圆_圆心在直线上且线段起点在圆内尾点在圆上)
        .判断 (并且 (小于 (二维点.距离316 (参圆.圆心, 参线段.起点), 参圆.半径), 大于 (二维点.距离316 (参圆.圆心, 参线段.尾点), 相加 (参圆.半径, 参极小值))))
            返回 (#线段与圆_圆心在直线上且线段起点在圆内尾点在圆外)
        .判断 (并且 (大于或等于 (二维点.距离316 (参圆.圆心, 参线段.起点), 相减 (参圆.半径, 参极小值)), 小于或等于 (二维点.距离316 (参圆.圆心, 参线段.起点), 相加 (参圆.半径, 参极小值)), 小于 (二维点.距离316 (参圆.圆心, 参线段.尾点), 相减 (参圆.半径, 参极小值))))
            返回 (#线段与圆_圆心在直线上且线段起点在圆上尾点在圆内)
        .判断 (并且 (大于或等于 (二维点.距离316 (参圆.圆心, 参线段.起点), 相减 (参圆.半径, 参极小值)), 小于或等于 (二维点.距离316 (参圆.圆心, 参线段.起点), 相加 (参圆.半径, 参极小值)), 大于或等于 (二维点.距离316 (参圆.圆心, 参线段.尾点), 相减 (参圆.半径, 参极小值)), 小于或等于 (二维点.距离316 (参圆.圆心, 参线段.尾点), 相加 (参圆.半径, 参极小值))))
            返回 (#线段与圆_圆心在直线上且线段两端点都在圆上)
        .判断 (并且 (大于或等于 (二维点.距离316 (参圆.圆心, 参线段.起点), 相减 (参圆.半径, 参极小值)), 小于或等于 (二维点.距离316 (参圆.圆心, 参线段.起点), 相加 (参圆.半径, 参极小值)), 大于 (二维点.距离316 (参圆.圆心, 参线段.尾点), 相加 (参圆.半径, 参极小值))))
            返回 (#线段与圆_圆心在直线上且线段起点在圆上尾点在圆外)
        .判断 (并且 (大于 (二维点.距离316 (参圆.圆心, 参线段.起点), 相加 (参圆.半径, 参极小值)), 大于或等于 (二维点.距离316 (参圆.圆心, 参线段.尾点), 相减 (参圆.半径, 参极小值)), 小于或等于 (二维点.距离316 (参圆.圆心, 参线段.尾点), 相加 (参圆.半径, 参极小值))))
            返回 (#线段与圆_圆心在直线上且线段起点在圆外尾点在圆上)
        .判断 (并且 (大于 (二维点.距离316 (参圆.圆心, 参线段.起点), 相加 (参圆.半径, 参极小值)), 大于 (二维点.距离316 (参圆.圆心, 参线段.尾点), 相加 (参圆.半径, 参极小值))))
            返回 (#线段与圆_圆心在直线上且线段两端点都在圆外)
        .默认
            信息框 (“错误程序分支。”, 0, )
        .判断结束
        
    .判断结束
    
.判断 (等于 (直线与圆关系, #直线与圆_直线与圆相切))
    .判断开始 (并且 (大于或等于 (二维点.距离316 (参圆.圆心, 参线段.起点), 相减 (参圆.半径, 参极小值)), 小于或等于 (二维点.距离316 (参圆.圆心, 参线段.起点), 相加 (参圆.半径, 参极小值)), 大于 (二维点.距离316 (参圆.圆心, 参线段.尾点), 相加 (参圆.半径, 参极小值))))
        返回 (#线段与圆_线段起点在圆上尾点在圆外且线段与圆相切)
    .判断 (并且 (大于 (二维点.距离316 (参圆.圆心, 参线段.起点), 相加 (参圆.半径, 参极小值)), 大于或等于 (二维点.距离316 (参圆.圆心, 参线段.尾点), 相减 (参圆.半径, 参极小值)), 小于或等于 (二维点.距离316 (参圆.圆心, 参线段.尾点), 相加 (参圆.半径, 参极小值))))
        返回 (#线段与圆_线段起点在圆外尾点在圆上且线段与圆相切)
    .判断 (并且 (大于 (二维点.距离316 (参圆.圆心, 参线段.起点), 相加 (参圆.半径, 参极小值)), 大于 (二维点.距离316 (参圆.圆心, 参线段.尾点), 相加 (参圆.半径, 参极小值))))
        返回 (#线段与圆_线段两端点都在圆外且直线与圆相切)
    .默认
        信息框 (“错误程序分支。”, 0, )
    .判断结束
    
.判断 (等于 (直线与圆关系, #直线与圆_直线与圆相交))
    .判断开始 (并且 (小于 (二维点.距离316 (参圆.圆心, 参线段.起点), 参圆.半径), 小于 (二维点.距离316 (参圆.圆心, 参线段.尾点), 参圆.半径)))
        返回 (#线段与圆_线段两端点都在圆内)
    .判断 (并且 (小于 (二维点.距离316 (参圆.圆心, 参线段.起点), 参圆.半径), 大于或等于 (二维点.距离316 (参圆.圆心, 参线段.尾点), 相减 (参圆.半径, 参极小值)), 小于或等于 (二维点.距离316 (参圆.圆心, 参线段.尾点), 相加 (参圆.半径, 参极小值))))
        返回 (#线段与圆_线段起点在圆内尾点在圆上)
    .判断 (并且 (小于 (二维点.距离316 (参圆.圆心, 参线段.起点), 参圆.半径), 大于 (二维点.距离316 (参圆.圆心, 参线段.尾点), 相加 (参圆.半径, 参极小值))))
        返回 (#线段与圆_线段起点在圆内尾点在圆外)
    .判断 (并且 (大于或等于 (二维点.距离316 (参圆.圆心, 参线段.起点), 相减 (参圆.半径, 参极小值)), 小于或等于 (二维点.距离316 (参圆.圆心, 参线段.起点), 相加 (参圆.半径, 参极小值)), 小于 (二维点.距离316 (参圆.圆心, 参线段.尾点), 相减 (参圆.半径, 参极小值))))
        返回 (#线段与圆_线段起点在圆上尾点在圆内)
    .判断 (并且 (大于或等于 (二维点.距离316 (参圆.圆心, 参线段.起点), 相减 (参圆.半径, 参极小值)), 小于或等于 (二维点.距离316 (参圆.圆心, 参线段.起点), 相加 (参圆.半径, 参极小值)), 大于或等于 (二维点.距离316 (参圆.圆心, 参线段.尾点), 相减 (参圆.半径, 参极小值)), 小于或等于 (二维点.距离316 (参圆.圆心, 参线段.尾点), 相加 (参圆.半径, 参极小值))))
        返回 (#线段与圆_线段两端点都在圆上)
    .判断 (并且 (大于或等于 (二维点.距离316 (参圆.圆心, 参线段.起点), 相减 (参圆.半径, 参极小值)), 小于或等于 (二维点.距离316 (参圆.圆心, 参线段.起点), 相加 (参圆.半径, 参极小值)), 大于 (二维点.距离316 (参圆.圆心, 参线段.尾点), 相加 (参圆.半径, 参极小值))))
        返回 (#线段与圆_线段起点在圆上尾点在圆外)
    .判断 (并且 (大于 (二维点.距离316 (参圆.圆心, 参线段.起点), 相加 (参圆.半径, 参极小值)), 大于或等于 (二维点.距离316 (参圆.圆心, 参线段.尾点), 相减 (参圆.半径, 参极小值)), 小于或等于 (二维点.距离316 (参圆.圆心, 参线段.尾点), 相加 (参圆.半径, 参极小值))))
        返回 (#线段与圆_线段起点在圆外尾点在圆上)
    .判断 (并且 (大于 (二维点.距离316 (参圆.圆心, 参线段.起点), 相加 (参圆.半径, 参极小值)), 大于 (二维点.距离316 (参圆.圆心, 参线段.尾点), 相加 (参圆.半径, 参极小值))))
        返回 (#线段与圆_线段两端点都在圆外)
    .默认
        信息框 (“错误程序分支。”, 0, )
    .判断结束
    
    
    
.默认
     ' #线段与圆_线段两端点都在圆外且直线与圆相离
    .判断开始 (点与线段关系类.点在线段正前面 (参圆.圆心, 二维线段类.延长 (参线段, 参圆.半径), 参极小值))
        返回 (#线段与圆_圆在线段正前面)
    .判断 (点与线段关系类.点在线段正前面 (参圆.圆心, 二维线段类.延长 (二维线段类.反向316 (参线段), 参圆.半径), 参极小值))
        返回 (#线段与圆_圆在线段正后面)
    .判断 (并且 (点与线段关系类.点在线段左正侧 (参圆.圆心, 二维线段类.定长 (参线段, 相减 (二维线段类.求长度316 (参线段), 相乘 (参圆.半径, 2)), 二维线段类.中点316 (参线段)), 参极小值), 大于 (二维点.到线段垂距316 (参圆.圆心, 参线段, 参极小值), 参圆.半径)))
        返回 (#线段与圆_圆在线段左正侧)
    .判断 (并且 (点与线段关系类.点在线段右正侧 (参圆.圆心, 二维线段类.定长 (参线段, 相减 (二维线段类.求长度316 (参线段), 相乘 (参圆.半径, 2)), 二维线段类.中点316 (参线段)), 参极小值), 大于 (二维点.到线段垂距316 (参圆.圆心, 参线段, 参极小值), 参圆.半径)))
        返回 (#线段与圆_圆在线段右正侧)
    .判断 (并且 (点与线段关系类.点在线段前面 (参圆.圆心, 二维线段类.延长 (参线段, 参圆.半径), 参极小值), 点与线段关系类.点在线段左面 (参圆.圆心, 参线段, 参极小值), 大于 (二维点.到线段垂距316 (参圆.圆心, 参线段, 参极小值), 参圆.半径)))
        返回 (#线段与圆_圆在线段左前侧)
    .判断 (并且 (点与线段关系类.点在线段前面 (参圆.圆心, 二维线段类.延长 (参线段, 参圆.半径), 参极小值), 点与线段关系类.点在线段右面 (参圆.圆心, 参线段, 参极小值), 大于 (二维点.到线段垂距316 (参圆.圆心, 参线段, 参极小值), 参圆.半径)))
        返回 (#线段与圆_圆在线段右前侧)
    .判断 (并且 (点与线段关系类.点在线段前面 (参圆.圆心, 二维线段类.延长 (二维线段类.反向316 (参线段), 参圆.半径), 参极小值), 点与线段关系类.点在线段右面 (参圆.圆心, 二维线段类.反向316 (参线段), 参极小值), 大于 (二维点.到线段垂距316 (参圆.圆心, 参线段, 参极小值), 参圆.半径)))
        返回 (#线段与圆_圆在线段左后侧)
    .判断 (并且 (点与线段关系类.点在线段前面 (参圆.圆心, 二维线段类.延长 (二维线段类.反向316 (参线段), 参圆.半径), 参极小值), 点与线段关系类.点在线段左面 (参圆.圆心, 二维线段类.反向316 (参线段), 参极小值), 大于 (二维点.到线段垂距316 (参圆.圆心, 参线段, 参极小值), 参圆.半径)))
        返回 (#线段与圆_圆在线段右后侧)
    .默认
        返回 (#线段与圆_线段两端点都在圆外且直线与圆相离)
    .判断结束
    
.判断结束








.类模块 类关系_点与圆弧, , , 

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.类模块 类关系_线段与圆弧, , , 

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.类模块 类关系_直线与圆弧, , , 

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.类模块 类关系_圆与圆弧, , , 

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.类模块 类数据空间, , , 以XML树的形式保存了全部的空间层次结构和每一个子空间的全部数据。由于保存在本结构中的数据需要经过转换后才方便运算，所以为提高运行速度，另建立了一个图形空间类，该类以特定格式保存了本类的必要数据，运算时不需要经过转换，所以极大地提高了运算速度。

.程序集变量 私空间, 未知类型0x40001, , , 在XML树中，每一个节点就代表一个空间，节点下面的子节点就代表子空间。每个节点下面有若干个属性，分别代表不同的含义。属性共分三类，一类是空间特性，二类是空间自身包含的全部图元，三是从子空间映射出来的全部图元。这些图元信息在向当前空间提交信息时，分别采取不同的处理方式。
.程序集变量 私子空间, 未知类型0x40001, , , 
.程序集变量 私图元句柄, 整数型, , "0", 
.程序集变量 私空间句柄, 整数型, , "0", 
.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 XML树_创建顶层空间, 逻辑型, , 
.参数 参顶层空间名, 文本型, , 

.如果真 (等于 (参顶层空间名, “”))
    赋值 (参顶层空间名, “新空间”)
.如果真结束

返回 (私空间.未知支持库函数_0 (参顶层空间名))

.子程序 获取图元句柄, 整数型, ,  
.局部变量 i, 整数型, , , 

.判断开始 (等于 (取数组成员数 (私图元句柄), 0))
    加入成员 (私图元句柄, 1)
    加入成员 (私图元句柄, 0)
    返回 (1)
.默认
    .计次循环首 (取数组成员数 (私图元句柄), i)
        .如果真 (等于 (私图元句柄 [i], 0))
            赋值 (私图元句柄 [i], i)
            .如果真 (等于 (i, 取数组成员数 (私图元句柄)))
                加入成员 (私图元句柄, 0)
            .如果真结束
            跳出循环 ()
        .如果真结束
        
    .计次循环尾 ()
    返回 (i)
.判断结束


.子程序 删除图元句柄, 空白型, , 
.参数 参句柄, 整数型, , 

.局部变量 i, 整数型, , , 

.如果真 (小于或等于 (参句柄, 取数组成员数 (私图元句柄)))
    赋值 (私图元句柄 [参句柄], 0)
.如果真结束


.子程序 获取空间句柄, 整数型, ,  
.局部变量 i, 整数型, , , 

.判断开始 (等于 (取数组成员数 (私空间句柄), 0))
    加入成员 (私空间句柄, 1)
    加入成员 (私空间句柄, 0)
    返回 (1)
.默认
    .计次循环首 (取数组成员数 (私空间句柄), i)
        .如果真 (等于 (私空间句柄 [i], 0))
            赋值 (私空间句柄 [i], i)
            .如果真 (等于 (i, 取数组成员数 (私空间句柄)))
                加入成员 (私空间句柄, 0)
            .如果真结束
            跳出循环 ()
        .如果真结束
        
    .计次循环尾 ()
    返回 (i)
.判断结束


.子程序 删除空间句柄, 空白型, , 
.参数 参句柄, 整数型, , 

.局部变量 i, 整数型, , , 

.如果真 (小于或等于 (参句柄, 取数组成员数 (私空间句柄)))
    赋值 (私空间句柄 [参句柄], 0)
.如果真结束


.类模块 类图形空间, , , 负责将数据空间中的数据转换为图形图像，并以特定格式（便用提高系统效率）保存了必要的数据空间中的信息；负责将图形图像信息转换数据空间中保存。

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 置图形空间, 空白型, , 调用本类之前，一定要检查是否重置了图形空间，如果没有，将出现错误。改变图形空间时，也要使用本方法。
.参数 参图形空间, 图形空间, 可空, 

.如果 (是否为空 (参图形空间))
    重定义数组 (_图形空间.子空间, 假, 0)
    重定义数组 (_图形空间.子图形集集合.图形集, 假, 0)
    赋值 (_图形空间.空间.比例.SX, 1)
    赋值 (_图形空间.空间.比例.SY, 1)
    赋值 (_图形空间.空间.坐标系图形.坐标系.原点.x, 100)
    赋值 (_图形空间.空间.坐标系图形.坐标系.原点.y, 100)
    赋值 (_图形空间.空间.坐标系图形.坐标系.旋转角, 0)
    赋值 (_图形空间.空间.坐标系图形.坐标系.X轴点.x, 相加 (_图形空间.空间.坐标系图形.坐标系.原点.x, 100))
    赋值 (_图形空间.空间.坐标系图形.坐标系.X轴点.y, _图形空间.空间.坐标系图形.坐标系.原点.y)
    赋值 (_图形空间.空间.坐标系图形.坐标系.Y轴点.x, _图形空间.空间.坐标系图形.坐标系.原点.x)
    赋值 (_图形空间.空间.坐标系图形.坐标系.Y轴点.y, 相加 (_图形空间.空间.坐标系图形.坐标系.原点.y, 100))
.否则
    赋值 (_图形空间, 参图形空间)
.如果结束
重定义数组 (_图形空间.临时坐标集.坐标, 假, 0)
重定义数组 (_图形空间.临时图形集集合.图形集, 假, 0)

.子程序 显示, 空白型, , 将当前空间的全部图元显示到屏幕
.局部变量 z, 整数型, , , 
.局部变量 i, 整数型, , , 

_系统组件.清除 (.画板后台, , , , )
内部方法_显示图形集 (_图形空间.图形集)
.计次循环首 (取数组成员数 (_图形空间.子图形集集合.图形集), i)
    内部方法_显示图形集 (_图形空间.子图形集集合.图形集 [i])
.计次循环尾 ()
.计次循环首 (取数组成员数 (_图形空间.临时图形集集合.图形集), i)
    内部方法_显示图形集 (_图形空间.临时图形集集合.图形集 [i])
.计次循环尾 ()
显示坐标系 ()
_类绘图后台.显示 ()

.子程序 内部方法_显示图形集, 空白型, , 
.参数 参图形集, 图形集, , 

.局部变量 起点, 坐标, , , 
.局部变量 尾点, 坐标, , , 
.局部变量 i, 整数型, , , 

.计次循环首 (取数组成员数 (_图形空间.图形集.点图形集.点), i)
    _系统组件.画点 (.画板后台, _图形空间.图形集.点图形集.点 [i], 坐标.x, _图形空间.图形集.点图形集.点 [i], 坐标.y, #白色)
.计次循环尾 ()
.计次循环首 (取数组成员数 (_图形空间.图形集.线段图形集.线段图形), i)
    赋值 (起点, 转画板坐标 (_图形空间.图形集.线段图形集.线段图形 [i], 线段.起点))
    赋值 (尾点, 转画板坐标 (_图形空间.图形集.线段图形集.线段图形 [i], 线段.尾点))
    _系统组件.画直线 (.画板后台, 起点.x, 起点.y, 尾点.x, 尾点.y)
.计次循环尾 ()

.子程序 显示坐标系, 空白型, , 
.局部变量 原点, 坐标, , , 
.局部变量 X轴点, 坐标, , , 
.局部变量 Y轴点, 坐标, , , 

赋值 (原点, _图形空间.空间.坐标系图形.坐标系.原点)
赋值 (X轴点, _图形空间.空间.坐标系图形.坐标系.X轴点)
赋值 (Y轴点, _图形空间.空间.坐标系图形.坐标系.Y轴点)
_系统组件.画直线 (.画板后台, 原点.x, 原点.y, X轴点.x, X轴点.y)
_系统组件.画直线 (.画板后台, X轴点.x, X轴点.y, 相减 (X轴点.x, 20), 相加 (X轴点.y, 10))
_系统组件.画直线 (.画板后台, X轴点.x, X轴点.y, 相减 (X轴点.x, 20), 相减 (X轴点.y, 10))
赋值 (_系统组件.画板后台.字体.字体大小, 32)
_系统组件.定位写出 (.画板后台, 相加 (X轴点.x, 10), 相减 (X轴点.y, 20), “X”)

_系统组件.画直线 (.画板后台, 原点.x, 原点.y, Y轴点.x, Y轴点.y)
_系统组件.画直线 (.画板后台, Y轴点.x, Y轴点.y, 相减 (Y轴点.x, 10), 相减 (Y轴点.y, 20))
_系统组件.画直线 (.画板后台, Y轴点.x, Y轴点.y, 相加 (Y轴点.x, 10), 相减 (Y轴点.y, 20))
_系统组件.定位写出 (.画板后台, 相减 (Y轴点.x, 10), 相加 (Y轴点.y, 5), “Y”)

.子程序 取图形, 图形空间, , 
返回 (_图形空间)

.子程序 取空间, 空间, , 
返回 (_图形空间.空间)

.子程序 置空间, 空白型, , 
.参数 参空间, 空间, , 

赋值 (_图形空间.空间, 参空间)

.子程序 转空间坐标, 坐标, , 画板坐标转空间坐标，顶层图像空间被看成是画板空间的子空间
.参数 参画板坐标, 坐标, , 

.局部变量 空间坐标, 坐标, , , 

赋值 (空间坐标.x, 相除 (相减 (参画板坐标.x, _图形空间.空间.坐标系图形.坐标系.原点.x), _图形空间.空间.比例.SX))
赋值 (空间坐标.y, 相除 (相减 (参画板坐标.y, _图形空间.空间.坐标系图形.坐标系.原点.y), _图形空间.空间.比例.SY))
返回 (空间坐标)

.子程序 转画板坐标, 坐标, , 空间坐标转画板坐标，顶层图像空间被看成是画板空间的子空间
.参数 参空间坐标, 坐标, , 

.局部变量 画板坐标, 坐标, , , 

赋值 (画板坐标.x, 相加 (相乘 (参空间坐标.x, _图形空间.空间.比例.SX), _图形空间.空间.坐标系图形.坐标系.原点.x))
赋值 (画板坐标.y, 相加 (相乘 (参空间坐标.y, _图形空间.空间.比例.SY), _图形空间.空间.坐标系图形.坐标系.原点.y))
返回 (画板坐标)

.子程序 转画板坐标集, 坐标集, 公开, 
.参数 参空间坐标集, 坐标集, , 

.局部变量 画板坐标集, 坐标集, , , 
.局部变量 i, 整数型, , , 

重定义数组 (画板坐标集.坐标, 假, 取数组成员数 (参空间坐标集.坐标))
.计次循环首 (取数组成员数 (参空间坐标集.坐标), i)
    赋值 (画板坐标集.坐标 [i], 转画板坐标 (参空间坐标集.坐标 [i]))
.计次循环尾 ()
返回 (画板坐标集)

.子程序 添加线段, 空白型, , 
.参数 参线段, 线段, , 

.局部变量 二维线段方法, 类线段, , , 
.局部变量 线段图形, 线段图形, , , 

赋值 (线段图形.线段, 参线段)
 ' ！！！应写相应的注册代码
加入成员 (_图形空间.图形集.线段图形集.线段图形, 线段图形)

.类模块 类图形空间缩放, , , 

.程序集变量 私滚动放大系数, 坐标比例, , , 由于视觉显示的需要，将顶层空间中和数据在画板上显示时，需进行适当的比例调整，以达到方便查看和控制的目的。本比例系数主要应用于鼠标滚动操作时要求进行放大操作。
.程序集变量 私滚动缩小系数, 坐标比例, , , 由于视觉显示的需要，将顶层空间中和数据在画板上显示时，需进行适当的比例调整，以达到方便查看和控制的目的。本比例系数主要应用于鼠标滚动操作时要求进行缩小操作。
.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用
赋值 (私滚动放大系数.SX, 1.1)
赋值 (私滚动放大系数.SY, 1.1)
赋值 (私滚动缩小系数.SX, 相除 (1, 1.1))
赋值 (私滚动缩小系数.SY, 相除 (1, 1.1))

.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 滚动放大, 空白型, 公开, 
.局部变量 子空间, 空间, , , 
.局部变量 坐标类, 类坐标, , , 
.局部变量 旧原点, 坐标, , , 
.局部变量 新原点, 坐标, , , 
.局部变量 平移量, 坐标, , , 

赋值 (子空间, _类图形空间.取空间 ())
赋值 (子空间.比例.SX, 相乘 (子空间.比例.SX, 私滚动放大系数.SX))
赋值 (子空间.比例.SY, 相乘 (子空间.比例.SY, 私滚动放大系数.SY))
赋值 (旧原点, 子空间.坐标系图形.坐标系.原点)
赋值 (新原点, 坐标类.缩放316 (旧原点, _系统状态.鼠标.画板位置, 私滚动放大系数))
赋值 (平移量, 坐标类.求平移量316 (旧原点, 新原点))
赋值 (子空间.坐标系图形.坐标系.原点, 新原点)
赋值 (子空间.坐标系图形.坐标系.X轴点, 坐标类.平移316 (子空间.坐标系图形.坐标系.X轴点, 平移量))
赋值 (子空间.坐标系图形.坐标系.Y轴点, 坐标类.平移316 (子空间.坐标系图形.坐标系.Y轴点, 平移量))
_类图形空间.置空间 (子空间)

.子程序 滚动缩小, 空白型, 公开, 
.局部变量 子空间, 空间, , , 
.局部变量 坐标类, 类坐标, , , 
.局部变量 旧原点, 坐标, , , 
.局部变量 新原点, 坐标, , , 
.局部变量 平移量, 坐标, , , 

赋值 (子空间, _类图形空间.取空间 ())
赋值 (子空间.比例.SX, 相乘 (子空间.比例.SX, 私滚动缩小系数.SX))
赋值 (子空间.比例.SY, 相乘 (子空间.比例.SY, 私滚动缩小系数.SY))
赋值 (旧原点, 子空间.坐标系图形.坐标系.原点)
赋值 (新原点, 坐标类.缩放316 (旧原点, _系统状态.鼠标.画板位置, 私滚动缩小系数))
赋值 (平移量, 坐标类.求平移量316 (旧原点, 新原点))
赋值 (子空间.坐标系图形.坐标系.原点, 新原点)
赋值 (子空间.坐标系图形.坐标系.X轴点, 坐标类.平移316 (子空间.坐标系图形.坐标系.X轴点, 平移量))
赋值 (子空间.坐标系图形.坐标系.Y轴点, 坐标类.平移316 (子空间.坐标系图形.坐标系.Y轴点, 平移量))
_类图形空间.置空间 (子空间)

.类模块 类图形空间查找, , , 

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 查找最近点, 坐标, , 
.参数 参空间点, 坐标, , 查找最近点的空间点
.参数 参考最近点距离, 双精度小数型, 参考 可空, 查到的最近点距离
.参数 参考最近点类型, 整数型, 参考 可空, 查到的最近点类型

.局部变量 空间坐标, 坐标, , , 
.局部变量 i, 整数型, , , 
.局部变量 二维点, 类坐标, , , 
.局部变量 二维线段, 类线段, , , 
.局部变量 最近线段, 线段, , , 
.局部变量 线段, 线段, , , 
.局部变量 最近点, 坐标, , , 
.局部变量 距离, 双精度小数型, , , 
.局部变量 z, 整数型, , , 

赋值 (空间坐标, 参空间点)
 ' --------------------------------------在已有图形空间内查找-----------------------------------------------------------------
赋值 (参考最近点距离, #不可能距离)
 ' .计次循环首 (取数组成员数 (_图形空间.图形集.点图形集.点), )
 ' .计次循环尾 ()
.如果真 (大于或等于 (取数组成员数 (_图形空间.图形集.线段图形集.线段图形), 1))
    .计次循环首 (取数组成员数 (_图形空间.图形集.线段图形集.线段图形), i)
        赋值 (距离, 二维点.到线段距离316 (空间坐标, _图形空间.图形集.线段图形集.线段图形 [i], 线段))
        .如果真 (大于 (参考最近点距离, 距离))
            赋值 (参考最近点距离, 距离)
            赋值 (最近点, 二维点.到线段最近点316 (空间坐标, _图形空间.图形集.线段图形集.线段图形 [i], 线段))
        .如果真结束
        
    .计次循环尾 ()
    
.如果真结束

 ' --------------------------------------在已有子图形空间内查找-----------------------------------------------------------------
.计次循环首 (取数组成员数 (_图形空间.子图形集集合.图形集), z)
     ' .计次循环首 (取数组成员数 (_图形空间.图形集.点图形集.点), )
     ' .计次循环尾 ()
    
    .如果真 (大于或等于 (取数组成员数 (_图形空间.子图形集集合.图形集 [z], 线段图形集.线段图形), 1))
        .计次循环首 (取数组成员数 (_图形空间.子图形集集合.图形集 [z], 线段图形集.线段图形), i)
            赋值 (距离, 二维点.到线段距离316 (空间坐标, _图形空间.子图形集集合.图形集 [z], 线段图形集.线段图形 [i], 线段))
            .如果真 (大于 (参考最近点距离, 距离))
                赋值 (参考最近点距离, 距离)
                赋值 (最近点, 二维点.到线段最近点316 (空间坐标, _图形空间.子图形集集合.图形集 [z], 线段图形集.线段图形 [i], 线段))
            .如果真结束
            
        .计次循环尾 ()
    .如果真结束
    
.计次循环尾 ()

 ' --------------------------------------在临时图形空间内查找-----------------------------------------------------------------
 ' ！！！不建议在临时图形集合中查找，设计该集合的目的是为了批量移动图形，所以在根随鼠标移动状态下，没有必要进行查找。
 ' 但位于临时空间中刚绘制的图形，但命令还没有结束的情况下，应支持查找功能。
.如果真 (大于或等于 (取数组成员数 (_图形空间.临时坐标集.坐标), 2))
    .计次循环首 (相减 (取数组成员数 (_图形空间.临时坐标集.坐标), 1), i)
        赋值 (线段, 二维线段.创建_两点316 (_图形空间.临时坐标集.坐标 [i], _图形空间.临时坐标集.坐标 [相加 (i, 1)]))
        赋值 (距离, 二维点.到线段距离316 (空间坐标, 线段))
        
        .如果真 (大于 (参考最近点距离, 距离))
            赋值 (参考最近点距离, 距离)
            赋值 (最近点, 二维点.到线段最近点316 (空间坐标, 线段))
        .如果真结束
        
    .计次循环尾 ()
.如果真结束


 ' --------------------------------------返回找到的坐标点-----------------------------------------------------------------
 ' ！！！应升级为将找到的图元或图形集合一并返回。
返回 (最近点)

.类模块 类绘图接口, , , 本类负责进行系统消息的预处理和分配详细处理任务

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 开始任务, 空白型, 公开, 调用绘图模块进行图形绘制之前，必须先调用本程序。
.参数 参前台画板, 画板, , 
.参数 参屏幕菜单, 列表框, , 系统将列表框作为屏幕显示菜单，请确保列表框位于前台画板之上。

_类图形空间.置图形空间 ()
_类绘图前台.置绘图标记 (2, )
载入 (窗口后台, , 假)
置系统组件 (参前台画板, 窗口后台., 参屏幕菜单)
窗口后台.移动 (0, 0, 相加 (参前台画板.宽度, 10), 相加 (参前台画板.高度, 10))
赋值 (_系统状态.命令.绘图命令.允许绘图, 真)
赋值 (_系统状态.命令.绘图命令.接收命令, 真)
_类图形空间.显示 ()

.子程序 结束任务, 空白型, , 调用绘图模块结束图形绘制之后，必须调用本程序。
窗口后台.销毁 ()

.子程序 命令, 文本型, 公开, 向系统发送命令，系统根据命令文本及附加参数，决定下一步如何操作。
.参数 参命令, 文本型, 可空, 如果为空，表示继续当前命令；如果当前命令为空，表法新起动一个命令；如果当前命令不为空，表示继续或结束当前命令。
.参数 参预设值, 文本型, 可空, 通过该值，可以直接一次性完成整个命令操作，或指定命令的执行方式。

.判断开始 (等于 (_系统状态.命令.绘图命令.允许绘图, 真))
    .判断开始 (等于 (_系统状态.命令.绘图命令.接收命令, 真))
        .如果 (等于 (_系统状态.命令.绘图命令.当前命令, #命令_空))
            .判断开始 (等于 (参命令, #命令_绘线段))
                赋值 (_系统状态.命令.绘图命令.当前命令, 参命令)
                返回 (相加 (_系统状态.命令.绘图命令.当前命令, “:”, _绘.命令 (.线段)))
                
            .默认
                返回 (“未知命令”)
                
                
                
                
                
                
            .判断结束
            
        .否则
            .判断开始 (等于 (_系统状态.命令.绘图命令.当前命令, #命令_绘线段))
                .如果 (_绘.检测命令 (.线段, 参命令))
                    返回 (相加 (_系统状态.命令.绘图命令.当前命令, “:”, _绘.命令 (.线段, 参命令)))
                .否则
                    返回 (相加 (“数据不合法！提示：前一个命令：”, #左引号, _系统状态.命令.绘图命令.当前命令, #右引号, “  还没有结束，不能进行下一个命令操作。”))
                .如果结束
                
            .默认
                返回 (“未知当前命令”)
            .判断结束
            
            
            
        .如果结束
        
        
        
    .默认
        返回 (“不接收绘图命令”)
    .判断结束
    
    
.默认
    返回 (“不允许绘图”)
.判断结束



.子程序 保存图片, 逻辑型, , 
.参数 参文件名, 文本型, , 

返回 (写到文件 (参文件名, _系统组件.取图片 (.画板前台, , )))

.子程序 事件_鼠标左键被按下, 文本型, 公开, 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 坐标, 坐标, , , 

赋值 (坐标.x, 横向位置)
赋值 (坐标.y, 纵向位置)
赋值 (_系统状态.鼠标.画板位置, 坐标)
赋值 (_系统状态.鼠标.空间位置, _类图形空间.转空间坐标 (_系统状态.鼠标.画板位置))
.判断开始 (等于 (_系统状态.命令.绘图命令.允许绘图, 真))
    .判断开始 (等于 (_系统状态.命令.绘图命令.接收命令, 真))
        .判断开始 (等于 (_系统状态.命令.绘图命令.当前命令, #命令_绘线段))
            返回 (相加 (_系统状态.命令.绘图命令.当前命令, “:”, _绘.事件_鼠标左键被按下 (.线段, 横向位置, 纵向位置, 功能键状态)))
        .默认
            返回 (“无命令”)
        .判断结束
        
    .默认
        返回 (“不接收绘图命令”)
    .判断结束
    
    
.默认
    返回 (“不允许绘图”)
.判断结束




.子程序 事件_鼠标位置被移动, 文本型, 公开, 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 坐标, 坐标, , , 

赋值 (坐标.x, 横向位置)
赋值 (坐标.y, 纵向位置)
赋值 (_系统状态.鼠标.画板位置, 坐标)
赋值 (_系统状态.鼠标.空间位置, _类图形空间.转空间坐标 (_系统状态.鼠标.画板位置))
.判断开始 (等于 (_系统状态.命令.绘图命令.允许绘图, 真))
    .判断开始 (等于 (_系统状态.命令.绘图命令.接收命令, 真))
        .判断开始 (等于 (_系统状态.命令.绘图命令.当前命令, #命令_绘线段))
            返回 (相加 (_系统状态.命令.绘图命令.当前命令, “:”, _绘.事件_鼠标位置被移动 (.线段, 横向位置, 纵向位置, 功能键状态)))
        .默认
            返回 (“无命令”)
        .判断结束
        
    .默认
        返回 (“不接收绘图命令”)
    .判断结束
    
    
.默认
    返回 (“不允许绘图”)
.判断结束





.子程序 事件_鼠标右键被按下, 空白型, 公开, 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 坐标, 坐标, , , 

赋值 (坐标.x, 横向位置)
赋值 (坐标.y, 纵向位置)
赋值 (_系统状态.鼠标.画板位置, 坐标)
赋值 (_系统状态.鼠标.空间位置, _类图形空间.转空间坐标 (_系统状态.鼠标.画板位置))
.如果真 (等于 (_系统状态.命令.绘图命令.允许绘图, 真))
    .判断开始 (等于 (_系统状态.命令.绘图命令.接收命令, 真))
        .判断开始 (等于 (_系统状态.命令.绘图命令.当前命令, #命令_绘线段))
            _绘.事件_鼠标右键被按下 (.线段, 横向位置, 纵向位置, 功能键状态)
        .默认
            
        .判断结束
        
    .默认
        
    .判断结束
    
    
.如果真结束





.子程序 事件_鼠标滚轮被滚动, 空白型, 公开, 
.参数 滚动距离, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (_系统状态.鼠标.空间位置, _类图形空间.转空间坐标 (_系统状态.鼠标.画板位置))
.判断开始 (等于 (_系统状态.命令.绘图命令.允许绘图, 真))
    .判断开始 (等于 (_系统状态.命令.绘图命令.接收命令, 真))
        .判断开始 (等于 (_系统状态.命令.绘图命令.当前命令, #命令_绘线段))
            _绘.事件_滚轮被滚动 (.线段, 滚动距离, 功能键状态)
        .默认
            .如果 (小于 (滚动距离, 0))
                _类图形空间缩放.滚动缩小 ()
            .否则
                _类图形空间缩放.滚动放大 ()
            .如果结束
            _类图形空间.显示 () ' 显示子空间中的图形
        .判断结束
        
    .默认
        
    .判断结束
    
.默认
    
.判断结束

赋值 (_系统状态.鼠标.空间位置, _类图形空间.转空间坐标 (_系统状态.鼠标.画板位置))

.子程序 事件_屏幕菜单被选择, 文本型, , 
.局部变量 执行结果, 文本型, , , 

.判断开始 (等于 (_系统状态.命令.绘图命令.允许绘图, 真))
    .判断开始 (等于 (_系统状态.命令.绘图命令.接收命令, 真))
        .判断开始 (等于 (_系统状态.命令.绘图命令.当前命令, #命令_绘线段))
            赋值 (执行结果, _绘.事件_菜单被选择 (.线段))
            .如果真 (等于 (执行结果, #命令_绘线段_空))
                赋值 (_系统状态.命令.绘图命令.当前命令, “”)
                赋值 (_系统状态.命令.绘图命令.当前命令状态, “”)
            .如果真结束
            返回 (执行结果)
        .默认
            返回 (“错误，无命令时出现列表框！”)
        .判断结束
        
    .默认
        返回 (“不接收绘图命令”)
    .判断结束
    
.默认
    返回 (“不允许绘图”)
.判断结束




.子程序 事件_编辑框命令_放开某键, 文本型, 公开, 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 命令内容, 文本型, , , 

.判断开始 (等于 (键代码, 13))
    .判断开始 (等于 (_系统状态.命令.绘图命令.接收命令, 真))
        赋值 (命令内容, 窗口前台..内容)
        赋值 (窗口前台..内容, “”)
        返回 (命令 (命令内容))
    .默认
        返回 (“不接受命令”)
    .判断结束
    
.默认
    .判断开始 (不等于 (_系统状态.命令.绘图命令.当前命令状态, “”))
        返回 (_系统状态.命令.绘图命令.当前命令状态)
    .判断 (不等于 (_系统状态.命令.绘图命令.当前命令, “”))
        返回 (_系统状态.命令.绘图命令.当前命令)
    .默认
        返回 (“输入命令：”)
    .判断结束
    
.判断结束


.子程序 捕捉_到端点, 空白型, , 
.参数 参是否为真, 逻辑型, , 

赋值 (_系统状态.捕捉.到.端点, 参是否为真)

.子程序 捕捉_到垂足点, 空白型, , 
.参数 参是否为真, 逻辑型, , 

赋值 (_系统状态.捕捉.到.垂足点, 参是否为真)

.子程序 捕捉_到最近点, 空白型, , 
.参数 参是否为真, 逻辑型, , 

赋值 (_系统状态.捕捉.到.最近点, 参是否为真)
赋值 (_系统状态.捕捉.启动, 参是否为真)

.子程序 置系统组件, 空白型, , 
.参数 参画板前台, 画板, , 
.参数 参画板后台, 画板, , 
.参数 参菜单前台, 列表框, , 

赋值 (_系统组件.画板前台, 参画板前台)
赋值 (_系统组件.画板前台.可视, 真)
赋值 (_系统组件.画板前台.底图方式, 0)
赋值 (_系统组件.画板前台.自动重画, 真)
赋值 (_系统组件.画板前台.绘画单位, 0)
赋值 (_系统组件.画板前台.画笔类型, 1)
赋值 (_系统组件.画板前台.画出方式, 12) ' 15
赋值 (_系统组件.画板前台.画笔粗细, 0)
赋值 (_系统组件.画板前台.画笔颜色, #白色)
赋值 (_系统组件.画板前台.刷子类型, 1)
赋值 (_系统组件.画板前台.刷子颜色, #白色)
赋值 (_系统组件.画板前台.文本颜色, #白色)
赋值 (_系统组件.画板前台.画板背景色, #黑色)
赋值 (_系统组件.画板前台.文本背景颜色, #黑色)

赋值 (_系统组件.画板后台, 参画板后台)
赋值 (_系统组件.画板后台.边框, _系统组件.画板前台.边框)
赋值 (_系统组件.画板后台.底图, _系统组件.画板前台.底图)
赋值 (_系统组件.画板后台.宽度, _系统组件.画板前台.宽度)
赋值 (_系统组件.画板后台.高度, _系统组件.画板前台.高度)
赋值 (_系统组件.画板后台.底图方式, _系统组件.画板前台.底图方式)
赋值 (_系统组件.画板后台.自动重画, _系统组件.画板前台.自动重画)
赋值 (_系统组件.画板后台.绘画单位, _系统组件.画板前台.绘画单位)
赋值 (_系统组件.画板后台.画笔类型, _系统组件.画板前台.画笔类型)
赋值 (_系统组件.画板后台.画出方式, _系统组件.画板前台.画出方式)
赋值 (_系统组件.画板后台.画笔粗细, _系统组件.画板前台.画笔粗细)
赋值 (_系统组件.画板后台.画笔颜色, _系统组件.画板前台.画笔颜色)
赋值 (_系统组件.画板后台.刷子类型, _系统组件.画板前台.刷子类型)
赋值 (_系统组件.画板后台.刷子颜色, _系统组件.画板前台.刷子颜色)
赋值 (_系统组件.画板后台.文本颜色, _系统组件.画板前台.文本颜色)
赋值 (_系统组件.画板后台.画板背景色, _系统组件.画板前台.画板背景色)
赋值 (_系统组件.画板后台.文本背景颜色, _系统组件.画板前台.文本背景颜色)

赋值 (_系统组件.列表框菜单, 参菜单前台)
赋值 (_系统组件.列表框菜单.可视, 假)
赋值 (_系统组件.列表框菜单.边框, 2)
赋值 (_系统组件.列表框菜单.字体.字体大小, 12)
赋值 (_系统组件.列表框菜单.文本颜色, #白色)
赋值 (_系统组件.列表框菜单.背景颜色, #黑色)

.类模块 类绘图后台, , , 

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 画直线, 空白型, , 
.参数 参画板坐标起点, 坐标, , 
.参数 参画板坐标尾点, 坐标, , 
.参数 参显示到前台, 逻辑型, 可空, 

_系统组件.画直线 (.画板后台, 参画板坐标起点.x, 参画板坐标起点.y, 参画板坐标尾点.x, 参画板坐标尾点.y)
.如果真 (参显示到前台)
    显示 ()
.如果真结束


.子程序 画连续直线, 空白型, 公开, 
.参数 参画板点集, 坐标集, , 
.参数 参显示到前台, 逻辑型, 可空, 

.局部变量 i, 整数型, , , 

.计次循环首 (相减 (取数组成员数 (参画板点集.坐标), 1), i)
    _系统组件.画直线 (.画板后台, 参画板点集.坐标 [i], x, 参画板点集.坐标 [i], y, 参画板点集.坐标 [相加 (i, 1)].x, 参画板点集.坐标 [相加 (i, 1)].y)
.计次循环尾 ()
.如果真 (参显示到前台)
    显示 ()
.如果真结束


.子程序 显示, 空白型, , 显示后台到前台
_系统组件.复制 (.画板后台, , , , , _系统组件.画板前台, , , )

.类模块 类绘图前台, , , 

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 置绘图标记, 空白型, , 使用前台绘图画板之前，一定要先置绘图标记
.参数 参标记比例, 双精度小数型, 可空, 默认标记大小为10*10的方块内绘制，如果需要显示大一点，应设置此参数。如果提供了负数，将被忽略。
.参数 参标记角度, 双精度小数型, 可空, 默认标记参考方向为指向X轴正方向，如果需要调整，应设置此参数，单位为弧度。

.局部变量 二维点, 类坐标, , , 
.局部变量 左上, 坐标, , , 
.局部变量 右上, 坐标, , , 
.局部变量 左下, 坐标, , , 
.局部变量 右下, 坐标, , , 

.如果 (小于或等于 (参标记比例, 0))
    赋值 (_系统状态.捕捉.标记.比例, 1)
.否则
    赋值 (_系统状态.捕捉.标记.比例, 参标记比例)
.如果结束

赋值 (左上.x, 相乘 (-5, _系统状态.捕捉.标记.比例))
赋值 (左上.y, 相乘 (-5, _系统状态.捕捉.标记.比例))
赋值 (右上.x, 相乘 (5, _系统状态.捕捉.标记.比例))
赋值 (右上.y, 相乘 (-5, _系统状态.捕捉.标记.比例))
赋值 (左下.x, 相乘 (-5, _系统状态.捕捉.标记.比例))
赋值 (左下.y, 相乘 (5, _系统状态.捕捉.标记.比例))
赋值 (右下.x, 相乘 (5, _系统状态.捕捉.标记.比例))
赋值 (右下.y, 相乘 (5, _系统状态.捕捉.标记.比例))

.如果真 (不等于 (参标记角度, 0))
    赋值 (左上, 二维点.旋转316 (左上, , 参标记角度))
    赋值 (右上, 二维点.旋转316 (右上, , 参标记角度))
    赋值 (左下, 二维点.旋转316 (左下, , 参标记角度))
    赋值 (右下, 二维点.旋转316 (右下, , 参标记角度))
.如果真结束

重定义数组 (_系统状态.捕捉.标记.端点.线段, 假, 4)
赋值 (_系统状态.捕捉.标记.端点.线段 [1].起点, 左上)
赋值 (_系统状态.捕捉.标记.端点.线段 [1].尾点, 右上)
赋值 (_系统状态.捕捉.标记.端点.线段 [2].起点, 左下)
赋值 (_系统状态.捕捉.标记.端点.线段 [2].尾点, 右下)
赋值 (_系统状态.捕捉.标记.端点.线段 [3].起点, 左上)
赋值 (_系统状态.捕捉.标记.端点.线段 [3].尾点, 左下)
赋值 (_系统状态.捕捉.标记.端点.线段 [4].起点, 右上)
赋值 (_系统状态.捕捉.标记.端点.线段 [4].尾点, 右下)

重定义数组 (_系统状态.捕捉.标记.最近点.线段, 假, 4)
赋值 (_系统状态.捕捉.标记.最近点.线段 [1].起点, 左上)
赋值 (_系统状态.捕捉.标记.最近点.线段 [1].尾点, 右上)
赋值 (_系统状态.捕捉.标记.最近点.线段 [2].起点, 左下)
赋值 (_系统状态.捕捉.标记.最近点.线段 [2].尾点, 右下)
赋值 (_系统状态.捕捉.标记.最近点.线段 [3].起点, 左上)
赋值 (_系统状态.捕捉.标记.最近点.线段 [3].尾点, 右下)
赋值 (_系统状态.捕捉.标记.最近点.线段 [4].起点, 右上)
赋值 (_系统状态.捕捉.标记.最近点.线段 [4].尾点, 左下)


.子程序 画直线, 空白型, , 
.参数 参起点, 坐标, , 画板坐标
.参数 参尾点, 坐标, , 画板坐标

_系统组件.画直线 (.画板前台, 参起点.x, 参起点.y, 参尾点.x, 参尾点.y)

.子程序 画最近点, 空白型, , 
.参数 参坐标, 坐标, , 画板坐标，捕捉到的点是空间点，画到画板上时要使用画板坐标，这两者之间一定要转换。

.局部变量 i, 整数型, , , 

.计次循环首 (取数组成员数 (_系统状态.捕捉.标记.最近点.线段), i)
    _系统组件.画直线 (.画板前台, 相加 (参坐标.x, _系统状态.捕捉.标记.最近点.线段 [i], 起点.x), 相加 (参坐标.y, _系统状态.捕捉.标记.最近点.线段 [i], 起点.y), 相加 (参坐标.x, _系统状态.捕捉.标记.最近点.线段 [i], 尾点.x), 相加 (参坐标.y, _系统状态.捕捉.标记.最近点.线段 [i], 尾点.y))
.计次循环尾 ()

.子程序 画端点, 空白型, , 
.参数 参坐标, 坐标, , 画板坐标，捕捉到的点是空间点，画到画板上时要使用画板坐标，这两者之间一定要转换。

.局部变量 i, 整数型, , , 

.计次循环首 (取数组成员数 (_系统状态.捕捉.标记.最近点.线段), i)
    _系统组件.画直线 (.画板前台, 相加 (参坐标.x, _系统状态.捕捉.标记.端点.线段 [i], 起点.x), 相加 (参坐标.y, _系统状态.捕捉.标记.端点.线段 [i], 起点.y), 相加 (参坐标.x, _系统状态.捕捉.标记.端点.线段 [i], 尾点.x), 相加 (参坐标.y, _系统状态.捕捉.标记.端点.线段 [i], 尾点.y))
.计次循环尾 ()

.子程序 保存, 空白型, , 保存前台到后台
_系统组件.复制 (.画板前台, , , , , _系统组件.画板后台, , , )

.子程序 画密点线, 空白型, , 
.参数 x1, 整数型, , 
.参数 y1, 整数型, , 
.参数 x2, 整数型, , 
.参数 y2, 整数型, , 

.局部变量 Y, 整数型, , , 
.局部变量 X, 整数型, , , 

.如果真 (等于 (x1, x2)) ' 画垂直线
    .变量循环首 (y1, y2, 2, Y)
        _系统组件.画点 (.画板前台, x1, Y, #黑色)
    .变量循环尾 ()
    返回 ()
.如果真结束

.如果真 (等于 (y1, y2)) ' 画水平线
    .变量循环首 (x1, x2, 2, X)
        _系统组件.画点 (.画板前台, X, y1, #黑色)
    .变量循环尾 ()
    返回 ()
.如果真结束


.子程序 画十字线, 空白型, , 
.参数 参坐标, 坐标, , 画板坐标

.局部变量 上, 坐标, , , 
.局部变量 下, 坐标, , , 
.局部变量 左, 坐标, , , 
.局部变量 右, 坐标, , , 
.局部变量 画出方式, 整数型, , , 

赋值 (画出方式, _系统组件.画板前台.画出方式)
 ' _系统组件.私画板前台.画出方式 ＝ 4  ' 与笔非
 ' _系统组件.私画板前台.画出方式 ＝ 5  ' 反转
 ' _系统组件.私画板前台.画出方式 ＝ 6  ' 异或笔
 ' _系统组件.私画板前台.画出方式 ＝ 7  ' 非与笔
 ' _系统组件.私画板前台.画出方式 ＝ 12  ' 复制笔
 ' _系统组件.私画板前台.画出方式 ＝ 13  ' 或笔非
 ' _系统组件.私画板前台.画出方式 ＝ 14  ' 或笔
赋值 (_系统组件.画板前台.画出方式, 15) ' 白色
赋值 (上.x, 参坐标.x)
赋值 (上.y, 相减 (参坐标.y, 100))
赋值 (下.x, 参坐标.x)
赋值 (下.y, 相加 (参坐标.y, 100))
赋值 (左.x, 相减 (参坐标.x, 100))
赋值 (左.y, 参坐标.y)
赋值 (右.x, 相加 (参坐标.x, 100))
赋值 (右.y, 参坐标.y)
_系统组件.画直线 (.画板前台, 上.x, 上.y, 下.x, 下.y)
_系统组件.画直线 (.画板前台, 左.x, 左.y, 右.x, 右.y)
赋值 (_系统组件.画板前台.画出方式, 画出方式)

.类模块 类绘线段, , , 

.程序集变量 私最后一点坐标, 坐标, , , 
.程序集变量 私捕捉点, 坐标, , , 
.程序集变量 私捕捉成功, 逻辑型, , , 
.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 命令, 文本型, 公开, 
.参数 参命令, 文本型, 可空, 

.局部变量 子文本, 文本型, , "0", 
.局部变量 二维线段, 类线段, , , 
.局部变量 i, 整数型, , , 
.局部变量 空间坐标, 坐标, , , 
.局部变量 类坐标, 类坐标, , , 

.判断开始 (等于 (参命令, #命令_绘线段_空))
    .判断开始 (等于 (_系统状态.命令.绘图命令.当前命令状态, #命令_绘线段_空))
        重定义数组 (_图形空间.临时坐标集.坐标, 假, 0)
        赋值 (_系统状态.命令.绘图命令.当前命令状态, #命令_绘线段_输入起点)
        赋值 (私捕捉成功, 假)
        返回 (_系统状态.命令.绘图命令.当前命令状态)
    .默认
        返回 (_系统状态.命令.绘图命令.当前命令状态)
    .判断结束
    
.判断 (等于 (参命令, #命令_绘线段_撤消))
    .判断开始 (大于 (取数组成员数 (_图形空间.临时坐标集.坐标), 1))
        删除成员 (_图形空间.临时坐标集.坐标, 取数组成员数 (_图形空间.临时坐标集.坐标), 1)
        赋值 (私最后一点坐标, _图形空间.临时坐标集.坐标 [取数组成员数 (_图形空间.临时坐标集.坐标)])
         ' 重置绘直线以前的状态，并全部重画直线
        _类图形空间.显示 ()
         ' _类绘图后台.画连续直线 (_类图形空间.转画板坐标集 (_图形空间.临时坐标集), 真)
        
        赋值 (_系统状态.命令.绘图命令.当前命令状态, #命令_绘线段_输入下一点)
        返回 (_系统状态.命令.绘图命令.当前命令状态)
    .判断 (等于 (取数组成员数 (_图形空间.临时坐标集.坐标), 1))
        赋值 (私最后一点坐标, _图形空间.临时坐标集.坐标 [1])
        重定义数组 (_图形空间.临时坐标集.坐标, 假, 0)
         ' 重置绘直线以前的状态
        _类图形空间.显示 ()
        赋值 (_系统状态.命令.绘图命令.当前命令状态, #命令_绘线段_空)
        赋值 (私捕捉成功, 假)
        返回 (_系统状态.命令.绘图命令.当前命令状态)
    .默认
        返回 (“没有可再撤消的操作”)
    .判断结束
    
.判断 (等于 (参命令, #命令_绘线段_确认))
     ' ------------------先将线段保存到图形空间中----------------------------------------
    .如果真 (大于或等于 (取数组成员数 (_图形空间.临时坐标集.坐标), 2))
        .计次循环首 (相减 (取数组成员数 (_图形空间.临时坐标集.坐标), 1), i)
            _类图形空间.添加线段 (二维线段.创建_两点316 (_图形空间.临时坐标集.坐标 [i], _图形空间.临时坐标集.坐标 [相加 (i, 1)]))
        .计次循环尾 ()
    .如果真结束
    
    .如果真 (大于或等于 (取数组成员数 (_图形空间.临时坐标集.坐标), 1))
        赋值 (私最后一点坐标, _图形空间.临时坐标集.坐标 [取数组成员数 (_图形空间.临时坐标集.坐标)])
    .如果真结束
    
    重定义数组 (_图形空间.临时坐标集.坐标, 假, 0)
     ' 保存新生成的直线段并结束绘制.
    _类绘图后台.显示 ()
    赋值 (_系统状态.命令.绘图命令.当前命令状态, #命令_绘线段_空)
    返回 (_系统状态.命令.绘图命令.当前命令状态)
.默认
     ' 到这里来的命令一定是合法的。
    .判断开始 (等于 (_系统状态.命令.绘图命令.当前命令状态, #命令_绘线段_输入起点))
        赋值 (子文本, 分割文本 (参命令, “,”, ))
        .判断开始 (等于 (取数组成员数 (子文本), 1))
            赋值 (_系统状态.命令.绘图命令.当前命令状态, #命令_绘线段_输入下一点)
            返回 (_系统状态.命令.绘图命令.当前命令状态)
        .判断 (等于 (取数组成员数 (子文本), 2))
            赋值 (空间坐标.x, 到数值 (子文本 [1]))
            赋值 (空间坐标.y, 到数值 (子文本 [2]))
            加入成员 (_图形空间.临时坐标集.坐标, 空间坐标)
            赋值 (私最后一点坐标, 空间坐标)
            .如果真 (大于 (取数组成员数 (_图形空间.临时坐标集.坐标), 1))
                _类绘图后台.画直线 (_类图形空间.转画板坐标 (_图形空间.临时坐标集.坐标 [相减 (取数组成员数 (_图形空间.临时坐标集.坐标), 1)]), _类图形空间.转画板坐标 (_图形空间.临时坐标集.坐标 [取数组成员数 (_图形空间.临时坐标集.坐标)]), 真)
            .如果真结束
            
            赋值 (_系统状态.命令.绘图命令.当前命令状态, #命令_绘线段_输入下一点)
            返回 (_系统状态.命令.绘图命令.当前命令状态)
        .默认
            返回 (“参数过多”)
        .判断结束
        
    .判断 (等于 (_系统状态.命令.绘图命令.当前命令状态, #命令_绘线段_输入下一点))
        赋值 (子文本, 分割文本 (参命令, “,”, ))
        .判断开始 (等于 (取数组成员数 (子文本), 1))
            赋值 (空间坐标, 类坐标.远离316 (_系统状态.鼠标.空间位置, 私最后一点坐标, 到数值 (子文本 [1])))
            加入成员 (_图形空间.临时坐标集.坐标, 空间坐标)
            赋值 (私最后一点坐标, 空间坐标)
            _类绘图后台.画直线 (_类图形空间.转画板坐标 (_图形空间.临时坐标集.坐标 [相减 (取数组成员数 (_图形空间.临时坐标集.坐标), 1)]), _类图形空间.转画板坐标 (_图形空间.临时坐标集.坐标 [取数组成员数 (_图形空间.临时坐标集.坐标)]), 真)
            赋值 (_系统状态.命令.绘图命令.当前命令状态, #命令_绘线段_输入下一点)
            返回 (_系统状态.命令.绘图命令.当前命令状态)
        .判断 (等于 (取数组成员数 (子文本), 2))
            赋值 (空间坐标.x, 到数值 (子文本 [1]))
            赋值 (空间坐标.y, 到数值 (子文本 [2]))
            加入成员 (_图形空间.临时坐标集.坐标, 空间坐标)
            赋值 (私最后一点坐标, 空间坐标)
            _类绘图后台.画直线 (_类图形空间.转画板坐标 (_图形空间.临时坐标集.坐标 [相减 (取数组成员数 (_图形空间.临时坐标集.坐标), 1)]), _类图形空间.转画板坐标 (_图形空间.临时坐标集.坐标 [取数组成员数 (_图形空间.临时坐标集.坐标)]), 真)
            赋值 (_系统状态.命令.绘图命令.当前命令状态, #命令_绘线段_输入下一点)
            返回 (_系统状态.命令.绘图命令.当前命令状态)
        .默认
            返回 (“参数过多”)
        .判断结束
        返回 (_系统状态.命令.绘图命令.当前命令状态)
    .默认
        返回 (“未知命令”)
    .判断结束
    
.判断结束


.子程序 事件_鼠标位置被移动, 文本型, 公开, 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 画板坐标, 坐标, , , 鼠标位置画板坐标
.局部变量 空间坐标, 坐标, , , 鼠标位置空间坐标

赋值 (画板坐标.x, 横向位置)
赋值 (画板坐标.y, 纵向位置)
 ' _系统组件.画板前台.获取焦点 ()
赋值 (空间坐标, _类图形空间.转空间坐标 (画板坐标))
.判断开始 (等于 (_系统状态.命令.绘图命令.当前命令状态, #命令_绘线段_输入起点))
    .如果 (并且 (_系统状态.捕捉.启动, _系统状态.捕捉.到.最近点))
         ' 暂停 ()
        _类绘图后台.显示 ()
        _类绘图前台.画十字线 (画板坐标)
        赋值 (私捕捉成功, 捕捉最近点 (空间坐标, 私捕捉点))
    .否则
        赋值 (私捕捉成功, 假)
    .如果结束
    返回 (_系统状态.命令.绘图命令.当前命令状态)
.判断 (等于 (_系统状态.命令.绘图命令.当前命令状态, #命令_绘线段_输入下一点))
    _类绘图后台.显示 ()
    _类绘图前台.画直线 (_类图形空间.转画板坐标 (_图形空间.临时坐标集.坐标 [取数组成员数 (_图形空间.临时坐标集.坐标)]), 画板坐标)
    
    _类绘图前台.画十字线 (画板坐标)
    .如果 (并且 (_系统状态.捕捉.启动, _系统状态.捕捉.到.最近点))
        赋值 (私捕捉成功, 捕捉最近点 (空间坐标, 私捕捉点))
    .否则
        赋值 (私捕捉成功, 假)
    .如果结束
    
    返回 (_系统状态.命令.绘图命令.当前命令状态)
.默认
    返回 (_系统状态.命令.绘图命令.当前命令状态)
.判断结束


.子程序 事件_鼠标左键被按下, 文本型, 公开, 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 画板坐标, 坐标, , , 
.局部变量 空间坐标, 坐标, , , 

.如果 (并且 (等于 (_系统状态.捕捉.启动, 真), 私捕捉成功))
    赋值 (空间坐标, 私捕捉点)
.否则
    赋值 (画板坐标.x, 横向位置)
    赋值 (画板坐标.y, 纵向位置)
    赋值 (空间坐标, _类图形空间.转空间坐标 (画板坐标))
.如果结束

.如果真 (等于 (_系统组件.列表框菜单.标记, #命令_绘线段))
    赋值 (_系统组件.列表框菜单.可视, 假)
.如果真结束

.判断开始 (或者 (等于 (_系统状态.命令.绘图命令.当前命令状态, #命令_绘线段_输入下一点), 等于 (_系统状态.命令.绘图命令.当前命令状态, #命令_绘线段_输入起点)))
    加入成员 (_图形空间.临时坐标集.坐标, 空间坐标)
    赋值 (私最后一点坐标, 空间坐标)
    .如果真 (大于 (取数组成员数 (_图形空间.临时坐标集.坐标), 1))
        _类绘图后台.画直线 (_类图形空间.转画板坐标 (_图形空间.临时坐标集.坐标 [相减 (取数组成员数 (_图形空间.临时坐标集.坐标), 1)]), _类图形空间.转画板坐标 (_图形空间.临时坐标集.坐标 [取数组成员数 (_图形空间.临时坐标集.坐标)]), 真)
    .如果真结束
    
    赋值 (_系统状态.命令.绘图命令.当前命令状态, #命令_绘线段_输入下一点)
    返回 (_系统状态.命令.绘图命令.当前命令状态)
.默认
    返回 (_系统状态.命令.绘图命令.当前命令状态)
.判断结束


.子程序 事件_鼠标右键被按下, 空白型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

_系统组件.移动 (.列表框菜单, 相减 (横向位置, 20), 相减 (纵向位置, 3), , )
置列表框菜单 ()

.子程序 事件_滚轮被滚动, 空白型, 公开, 
.参数 滚动距离, 整数型, , 
.参数 功能键状态, 整数型, , 

.判断开始 (小于 (滚动距离, 0))
    _类图形空间缩放.滚动缩小 ()
.默认
    _类图形空间缩放.滚动放大 ()
.判断结束

_类图形空间.显示 () ' 显示子空间中的图形
_类绘图后台.画连续直线 (_类图形空间.转画板坐标集 (_图形空间.临时坐标集), 真) ' 显示临时空间中的图形

.子程序 事件_菜单被选择, 文本型, , 
.局部变量 命令, 文本型, , , 

赋值 (命令, _系统组件.取项目文本 (.列表框菜单, _系统组件.列表框菜单.现行选中项))
赋值 (_系统组件.列表框菜单.可视, 假)
.判断开始 (等于 (命令, #命令_隐藏菜单))
    返回 (#命令_隐藏菜单)
.默认
    返回 (命令 (命令))
.判断结束


.子程序 捕捉最近点, 逻辑型, , 
.参数 参空间点, 坐标, , 
.参数 参考捕捉点, 坐标, 参考, 捕捉到的点是空间点，画到画板上时要使用画板坐标，这两者之间一定要转换。

.局部变量 空间点, 坐标, , , 
.局部变量 最近距离, 双精度小数型, 静态, , 

赋值 (空间点, 参空间点)
赋值 (参考捕捉点, _类图形空间查找.查找最近点 (空间点, 最近距离))
.如果 (不等于 (最近距离, #不可能距离))
    _类绘图前台.画最近点 (_类图形空间.转画板坐标 (参考捕捉点))
    返回 (真)
.否则
    返回 (假)
.如果结束


.子程序 置列表框菜单, 空白型, , 
_系统组件.清空 (.列表框菜单)
赋值 (_系统组件.列表框菜单.标记, #命令_绘线段)
赋值 (_系统组件.列表框菜单.宽度, 90)
赋值 (_系统组件.列表框菜单.高度, 70)
_系统组件.插入项目 (.列表框菜单, 0, #命令_隐藏菜单, )
_系统组件.插入项目 (.列表框菜单, 0, #命令_绘线段_撤消, )
_系统组件.插入项目 (.列表框菜单, 0, #命令_绘线段_确认, )
赋值 (_系统组件.列表框菜单.可视, 真)

.子程序 检测命令, 逻辑型, 公开, 
.参数 参命令, 文本型, , 

.局部变量 子文本, 文本型, , "0", 

.判断开始 (等于 (_系统状态.命令.绘图命令.当前命令状态, #命令_绘线段_空))
    返回 (真)
.默认
     ' _系统状态.命令.绘图命令.当前命令状态 ＝ #命令_绘线段_输入起点 或 私状态 ＝ #命令_绘线段_输入下一点
     ' 不为空就一定为这两种状态，表求接收合法数据录入。
    赋值 (子文本, 分割文本 (参命令, “,”, ))
    .判断开始 (小于或等于 (取数组成员数 (子文本), 0))
        返回 (假)
    .判断 (等于 (取数组成员数 (子文本), 1))
        .判断开始 (等于 (到文本 (到数值 (子文本 [1])), 子文本 [1]))
            返回 (真)
        .默认
            返回 (假)
        .判断结束
        
    .判断 (等于 (取数组成员数 (子文本), 2))
        .判断开始 (并且 (等于 (到文本 (到数值 (子文本 [1])), 子文本 [1]), 等于 (到文本 (到数值 (子文本 [2])), 子文本 [2])))
            返回 (真)
        .默认
            返回 (假)
        .判断结束
        
    .默认
        返回 (假)
    .判断结束
    
.判断结束


.类模块 类测量数据, , , 

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 取千米数文本, 文本型, , 
.参数 参数值, 双精度小数型, , 

返回 (到文本 (绝对取整 (相除 (参数值, 1000))))

.子程序 取百米数文本, 文本型, , 
.参数 参数值, 双精度小数型, , 

返回 (到文本 (相减 (绝对取整 (参数值), 相乘 (绝对取整 (相除 (参数值, 1000)), 1000))))

.子程序 取小数文本, 文本型, , 
.参数 参数值, 双精度小数型, , 
.参数 参小数位数, 整数型, , 

.局部变量 小数文本, 文本型, , , 

赋值 (小数文本, 到文本 (绝对取整 (相乘 (相减 (参数值, 绝对取整 (参数值)), 求次方 (10, 参小数位数)))))
赋值 (小数文本, 相加 (小数文本, 取重复文本 (相减 (参小数位数, 取文本长度 (小数文本)), “0”)))
返回 (小数文本)

.子程序 取桩号文本, 文本型, , 
.参数 参桩号数值, 双精度小数型, , 
.参数 参小数位数, 整数型, , 

返回 (相加 (“K”, 取千米数文本 (参桩号数值), “+”, 取百米数文本 (参桩号数值), “.”, 取小数文本 (参桩号数值, 参小数位数)))

.窗口程序集 前台窗口程序集, , , 

.子程序 _窗口前台_创建完毕, 空白型, , 
赋值 (窗口前台., 真)
窗口前台.移动 (0, 0, 取屏幕宽度 (), 相减 (取屏幕高度 (), 50))
0.移动 (0, 相减 (窗口前台.取用户区宽度 (), 100), 相减 (窗口前台.取用户区高度 (), 50))
相减 (窗口前台.取用户区宽度 (), 90).移动 (20, 80, 40)
相减 (窗口前台.取用户区宽度 (), 90).移动 (相加 (.顶边, .高度, 10), 80, 40)
相减 (窗口前台.取用户区宽度 (), 90).移动 (相加 (.顶边, .高度, 10), 80, 40)
0.移动 (相加 (.顶边, .高度, 5), .宽度, 44)
2.移动 (相加 (.顶边, .高度, 7), 40, 40)
相减 (相加 (.左边, .宽度), 5).移动 (.顶边, 相减 (.宽度, .宽度), .高度)
_绘.开始任务 (.绘图, , )

.子程序 _画板前台_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

_绘.事件_鼠标左键被按下 (.绘图, 横向位置, 纵向位置, 功能键状态)
赋值 (窗口前台., 相加 (“X=”, 到文本 (_系统状态.鼠标.空间位置.x), “, Y=”, 到文本 (_系统状态.鼠标.空间位置.y)))

.子程序 _画板前台_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

 ' 画板前台.获取焦点 ()
赋值 (.内容, _绘.事件_鼠标位置被移动 (.绘图, 横向位置, 纵向位置, 功能键状态))
赋值 (窗口前台., 相加 (“X=”, 到文本 (_系统状态.鼠标.空间位置.x), “, Y=”, 到文本 (_系统状态.鼠标.空间位置.y)))

.子程序 _按钮绘直线_被单击, 空白型, , 
赋值 (.内容, _绘.命令 (.绘图, #命令_绘线段))

.子程序 _画板前台_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

_绘.事件_鼠标右键被按下 (.绘图, 横向位置, 纵向位置, 功能键状态)
赋值 (窗口前台., 相加 (“X=”, 到文本 (_系统状态.鼠标.空间位置.x), “, Y=”, 到文本 (_系统状态.鼠标.空间位置.y)))

.子程序 _列表框菜单_列表项被选择, 空白型, , 
赋值 (.内容, _绘.事件_屏幕菜单被选择 (.绘图))

.子程序 _窗口前台_将被销毁, 空白型, , 
_绘.结束任务 (.绘图)

.子程序 _选择框_捕捉到端点_被单击, 空白型, , 


.子程序 _选择框_捕捉最近点_被单击, 空白型, , 
_绘.捕捉_到最近点 (.绘图, .选中)

.子程序 _选择框_捕捉垂足点_被单击, 空白型, , 


.子程序 _画板前台_滚轮被滚动, 逻辑型, , 
.参数 滚动距离, 整数型, , 
.参数 功能键状态, 整数型, , 

_绘.事件_鼠标滚轮被滚动 (.绘图, 滚动距离, 功能键状态)
赋值 (窗口前台., 相加 (“X=”, 到文本 (_系统状态.鼠标.空间位置.x), “, Y=”, 到文本 (_系统状态.鼠标.空间位置.y)))

.子程序 _编辑框状态_内容被改变, 空白型, , 
赋值 (.宽度, 相加 (相乘 (取文本长度 (.内容), 6), 10))
相减 (相加 (.左边, .宽度), 5).移动 (.顶边, 相减 (.宽度, .宽度), .高度)

.子程序 _编辑框状态_获得焦点, 空白型, , 
获取焦点 ()

.子程序 _编辑框命令_放开某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.内容, _绘.事件_编辑框命令_放开某键 (.绘图, 键代码, 功能键状态))


.子程序 _画板前台_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

获取焦点 ()

.类模块 空间格点类, , , 

.程序集变量 私亿位点, 亿位点, , , 
.程序集变量 私空间句柄, 整数型, , "0", 
.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 获取空间句柄, 整数型, ,  
.局部变量 i, 整数型, , , 

.判断开始 (等于 (取数组成员数 (私空间句柄), 0))
    加入成员 (私空间句柄, 1)
    加入成员 (私空间句柄, 0)
    返回 (1)
.默认
    .计次循环首 (取数组成员数 (私空间句柄), i)
        .如果真 (等于 (私空间句柄 [i], 0))
            赋值 (私空间句柄 [i], i)
            .如果真 (等于 (i, 取数组成员数 (私空间句柄)))
                加入成员 (私空间句柄, 0)
            .如果真结束
            跳出循环 ()
        .如果真结束
        
    .计次循环尾 ()
    返回 (i)
.判断结束


.子程序 删除空间句柄, 空白型, , 
.参数 参句柄, 整数型, , 

.局部变量 i, 整数型, , , 

.如果真 (小于或等于 (参句柄, 取数组成员数 (私空间句柄)))
    赋值 (私空间句柄 [参句柄], 0)
.如果真结束


.子程序 注册点, 空白型, 公开, 
.参数 点, 坐标, , 



.子程序 注册线段, 空白型, 公开, 
.参数 参线段, 线段, , 




 ' 不属于任何一个程序集、类模块的函数：
