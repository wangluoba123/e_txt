 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 SOCKS5代理窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 380
    高度 = 250
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 假
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 假
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “SOCKS5 代理”
    帮助文件名 = “”

窗口 代理测试窗口
    左边 = 50
    顶边 = 50
    宽度 = 641
    高度 = 334
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “代理测试窗口”
    帮助文件名 = “”

窗口 _启动窗口
    左边 = 50
    顶边 = 50
    宽度 = 277
    高度 = 263
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假





 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 2 系统核心支持库
 ' shellEx DA19AC3ADD2F4121AAD84AC5FBCAFC71 2 0 扩展功能支持库一
 ' xplib 7F54B9CE8887428dBA9CEEB94CEF4C72 1 1 XP风格界面库




.全局变量 代理服务器_TCP_客户, 类模块_代理服务器_TCP_客户, , "0", 
.全局变量 代理服务器_TCP_服务器, 类模块_代理服务器_TCP_服务器, , "0", 
.全局变量 代理服务器_UDP_数据报, 类模块_代理服务器_UDP_数据报, , "0", 

.类模块 类模块_代理服务器_TCP_客户, , , 

.程序集变量 客户, 客户, , , 
.程序集变量 子程序, 子程序指针, , , 
.程序集变量 流程, 短整数型, , , 
.程序集变量 地址, 文本型, , , 
.程序集变量 端口, 整数型, , , 
.程序集变量 数据, 字节集, , , 
.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 连接, 空白型, 公开, 
.参数 处理子程序, 子程序指针, , 参见本子程序内部的注释部分
.参数 目的服务器地址, 文本型, , 可以为域名或ip地址
.参数 目的服务器端口, 整数型, , 

.如果真 (等于 (是否已创建 (SOCKS5代理窗口), 假))
    载入 (SOCKS5代理窗口, , 假)
.如果真结束
复制窗口组件 (SOCKS5代理窗口., 客户)
赋值 (客户.标记, 到文本 (相加 (取数组成员数 (代理服务器_TCP_客户), 1)))
赋值 (地址, 转换为IP地址 (目的服务器地址))
赋值 (端口, 目的服务器端口)
客户.连接 (SOCKS5代理窗口..内容, 到数值 (SOCKS5代理窗口..内容))
赋值 (子程序, 处理子程序)
赋值 (流程, 1)
客户.发送数据 ({ 5, 0 })
 ' 处理子程序 必须有一个文本型参数 参数的第一个文本是各种指令
 ' 可以使用 取指令标记(参数) 获得，具体指令意义参见下表：
 ' 0：实际数据 可用 取回数据() 返回实际数据
 ' 1：未知的连接方式（除无身份验证和用户名/密码方式以外的）
 ' 2：用户名或密码错误
 ' 3：连接目标服务器时错误
 ' 4：连接成功
 ' 9：连接断开
 ' 参数的剩余文本表示数组标记
 ' 可以使用 取指令数组标志(参数) 获得
 ' 例如 收到 0 指令表示有数据收到可以采用 代理服务器_TCP_客户[取指令数组标志(参数)].取回数据() 返回实际的数据

.子程序 收到数据, 空白型, 公开, 此子程序会自动运行，用户不需要更改或调用
.参数 代理服务器的数据, 字节集, , 

.局部变量 数据包, 字节型, , "10", 

.判断开始 (等于 (流程, 0))
    赋值 (数据, 代理服务器的数据)
    未知支持库函数_13 (子程序, 相加 (“0”, 客户.标记))
.判断 (等于 (流程, 1))
    .判断开始 (等于 (取字节集右边 (代理服务器的数据, 1), { 0 }))
        输出调试文本 (“无身份验证方式”)
        客户.发送数据 (返回连接字节集 ())
        赋值 (流程, 3)
    .判断 (等于 (取字节集右边 (代理服务器的数据, 1), { 2 }))
        输出调试文本 (“有密码验证方式”)
        
        客户.发送数据 (取密码连接 ())
        赋值 (流程, 2)
    .默认
        未知支持库函数_13 (子程序, 相加 (“1”, 客户.标记))
    .判断结束
    
.判断 (等于 (流程, 2))
    .如果 (等于 (代理服务器的数据, { 1, 0 }))
        客户.发送数据 (返回连接字节集 ())
        赋值 (流程, 3)
    .否则
        未知支持库函数_13 (子程序, 相加 (“2”, 客户.标记))
    .如果结束
    
.判断 (等于 (流程, 3))
    .如果 (等于 (取字节集中间 (代理服务器的数据, 2, 1), { 0 }))
        赋值 (流程, 0)
        未知支持库函数_13 (子程序, 相加 (“4”, 客户.标记))
    .否则
        未知支持库函数_13 (子程序, 相加 (“3”, 客户.标记))
    .如果结束
    
.默认
    
.判断结束


.子程序 取回数据, 字节集, 公开, 
返回 (数据)

.子程序 断开连接, 空白型, 公开, 此子程序会自动运行，用户不需要更改或调用
未知支持库函数_13 (子程序, 相加 (“9”, 客户.标记))

.子程序 返回连接字节集, 字节集, , 此子程序会自动运行，用户不需要更改或调用
.局部变量 ip, 文本型, , "4", 
.局部变量 数据包, 字节型, , "10", 

赋值 (ip, 分割文本 (地址, “.”, 4))
赋值 (数据包 [1], 5) ' 版本号
赋值 (数据包 [2], 1) ' 连接模式
赋值 (数据包 [3], 0) ' 保留
赋值 (数据包 [4], 1) ' ipv4地址类型
赋值 (数据包 [5], 到数值 (ip [1])) ' 地址1
赋值 (数据包 [6], 到数值 (ip [2])) ' 地址2
赋值 (数据包 [7], 到数值 (ip [3])) ' 地址3
赋值 (数据包 [8], 到数值 (ip [4])) ' 地址4
赋值 (数据包 [9], 整除 (端口, 256)) ' 端口1
赋值 (数据包 [10], 求余数 (端口, 256)) ' 端口2
返回 (到字节集 (数据包))

.子程序 发送数据, 逻辑型, 公开, 
.参数 数据, 字节集, , 

返回 (客户.发送数据 (数据))

.子程序 作废, 空白型, 公开, 
客户.断开连接 ()
客户.销毁 ()
赋值 (数据, {  })

.类模块 类模块_代理服务器_TCP_服务器, , , 

.程序集变量 客户, 客户, , , 
.程序集变量 子程序, 子程序指针, , , 
.程序集变量 流程, 短整数型, , , 
.程序集变量 地址, 文本型, , , 
.程序集变量 端口, 整数型, , , 
.程序集变量 数据, 字节集, , , 
.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 连接, 空白型, 公开, 
.参数 处理子程序, 子程序指针, , 参见本子程序内部的注释部分

.如果真 (等于 (是否已创建 (SOCKS5代理窗口), 假))
    载入 (SOCKS5代理窗口, , 假)
.如果真结束
复制窗口组件 (SOCKS5代理窗口., 客户)
赋值 (客户.标记, 到文本 (相加 (取数组成员数 (代理服务器_TCP_服务器), 1)))
客户.连接 (SOCKS5代理窗口..内容, 到数值 (SOCKS5代理窗口..内容))
赋值 (子程序, 处理子程序)
赋值 (流程, 1)
客户.发送数据 ({ 5, 0 })
 ' 0：实际数据 可用取回数据返回实际数据 1：未知的连接方式（除无身份验证和用户名/密码方式以外的）；2：用户名或密码错误；3：连接目标服务器时错误；4：绑定成功 可采用取回端口返回；5：客户进入 可采用取回地址返回

 ' 处理子程序 必须有一个文本型参数 参数的第一个文本各种指令
 ' 可以使用 取指令标记(参数) 获得，具体指令意义参见下表：
 ' 0：实际数据 可用 取回数据() 返回实际数据
 ' 1：未知的连接方式（除无身份验证和用户名/密码方式以外的）
 ' 2：用户名或密码错误
 ' 3：绑定失败
 ' 4：绑定成功 可采用 取回端口() 返回监听的窗口
 ' 5：客户进入 可采用 取回地址() 返回连接文本 和格式：“IP：端口”
 ' 9：连接断开
 ' 参数的剩余文本表示数组标记
 ' 可以使用 取指令数组标志(参数) 获得
 ' 例如 收到 0 指令表示有数据收到可以采用 代理服务器_TCP_服务器[取指令数组标志(参数)].取回数据() 返回实际的数据

.子程序 收到数据, 空白型, 公开, 此子程序会自动运行，用户不需要更改或调用
.参数 代理服务器的数据, 字节集, , 

.判断开始 (等于 (流程, 0))
    赋值 (数据, 代理服务器的数据)
    未知支持库函数_13 (子程序, 相加 (“0”, 客户.标记))
.判断 (等于 (流程, 1))
    .判断开始 (等于 (取字节集右边 (代理服务器的数据, 1), { 0 }))
        输出调试文本 (“无身份验证方式”)
        客户.发送数据 (返回连接字节集 ())
        赋值 (流程, 3)
    .判断 (等于 (取字节集右边 (代理服务器的数据, 1), { 2 }))
        输出调试文本 (“有密码验证方式”)
        客户.发送数据 (取密码连接 ())
        赋值 (流程, 2)
    .默认
        未知支持库函数_13 (子程序, 相加 (“1”, 客户.标记))
    .判断结束
    
.判断 (等于 (流程, 2))
    .如果 (等于 (代理服务器的数据, { 1, 0 }))
        客户.发送数据 (返回连接字节集 ())
        赋值 (流程, 3)
    .否则
        未知支持库函数_13 (子程序, 相加 (“2”, 客户.标记))
    .如果结束
    
.判断 (等于 (流程, 3))
    .如果 (等于 (取字节集中间 (代理服务器的数据, 2, 1), { 0 }))
        赋值 (端口, 相加 (相乘 (取字节集数据 (取字节集中间 (代理服务器的数据, 9, 1), #整数型), 256), 取字节集数据 (取字节集中间 (代理服务器的数据, 10, 1), #整数型)))
        赋值 (流程, 4)
        未知支持库函数_13 (子程序, 相加 (“4”, 客户.标记))
    .否则
        未知支持库函数_13 (子程序, 相加 (“3”, 客户.标记))
    .如果结束
    
.判断 (等于 (流程, 4))
    赋值 (地址, 相加 (到文本 (取字节集数据 (取字节集中间 (代理服务器的数据, 5, 1), #整数型)), “.”, 到文本 (取字节集数据 (取字节集中间 (代理服务器的数据, 6, 1), #整数型)), “.”, 到文本 (取字节集数据 (取字节集中间 (代理服务器的数据, 7, 1), #整数型)), “.”, 到文本 (取字节集数据 (取字节集中间 (代理服务器的数据, 8, 1), #整数型)), “:”, 到文本 (相加 (相乘 (取字节集数据 (取字节集中间 (代理服务器的数据, 9, 1), #整数型), 256), 取字节集数据 (取字节集中间 (代理服务器的数据, 10, 1), #整数型)))))
    未知支持库函数_13 (子程序, 相加 (“5”, 客户.标记))
    赋值 (流程, 0)
.默认
    
.判断结束


.子程序 取回地址, 文本型, 公开, 
返回 (地址)

.子程序 取回数据, 字节集, 公开, 
返回 (数据)

.子程序 取回端口, 整数型, 公开, 
返回 (端口)

.子程序 断开连接, 空白型, 公开, 此子程序会自动运行，用户不需要更改或调用
未知支持库函数_13 (子程序, 相加 (“9”, 客户.标记))

.子程序 返回连接字节集, 字节集, , 此子程序会自动运行，用户不需要更改或调用
.局部变量 数据包, 字节型, , "10", 

赋值 (数据包 [1], 5) ' 版本号
赋值 (数据包 [2], 2) ' 连接模式
赋值 (数据包 [3], 0) ' 保留
赋值 (数据包 [4], 1) ' ipv4地址类型
赋值 (数据包 [5], 0) ' 地址1
赋值 (数据包 [6], 0) ' 地址2
赋值 (数据包 [7], 0) ' 地址3
赋值 (数据包 [8], 0) ' 地址4
赋值 (数据包 [9], 0) ' 端口1
赋值 (数据包 [10], 0) ' 端口2
返回 (到字节集 (数据包))

.子程序 发送数据, 空白型, 公开, 
.参数 数据, 字节集, , 

客户.发送数据 (数据)

.子程序 作废, 空白型, 公开, 
客户.断开连接 ()
客户.销毁 ()
赋值 (数据, {  })

.类模块 类模块_代理服务器_UDP_数据报, , , 

.程序集变量 客户, 客户, , , 
.程序集变量 数据报, 数据报, , , 
.程序集变量 子程序, 子程序指针, , , 
.程序集变量 流程, 短整数型, , , 
.程序集变量 地址, 文本型, , , 
.程序集变量 端口, 空白型, , , 
.程序集变量 数据, 字节集, , , 
.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 连接, 空白型, 公开, 
.参数 处理子程序, 子程序指针, , 参见本子程序内部的注释部分
.参数 本地监听端口, 整数型, , 即本地数据报的端口，不是代理服务器的监听端口

.如果真 (等于 (是否已创建 (SOCKS5代理窗口), 假))
    载入 (SOCKS5代理窗口, , 假)
.如果真结束
复制窗口组件 (SOCKS5代理窗口., 客户)
赋值 (客户.标记, 到文本 (相加 (取数组成员数 (代理服务器_UDP_数据报), 1)))
复制窗口组件 (SOCKS5代理窗口., 数据报)
赋值 (数据报.标记, 到文本 (相加 (取数组成员数 (代理服务器_UDP_数据报), 1)))
赋值 (数据报.端口, 本地监听端口)
客户.连接 (SOCKS5代理窗口..内容, 到数值 (SOCKS5代理窗口..内容))
赋值 (子程序, 处理子程序)
赋值 (流程, 1)
客户.发送数据 ({ 5, 0 })
 ' 处理子程序 必须有一个文本型参数 参数的第一个文本各种指令
 ' 可以使用 取指令标记(参数) 获得，具体指令意义参见下表：
 ' 0：实际数据 可用 取回数据() 返回实际数据 同时可采用 取回地址() 返回数据发送端 格式：“IP：端口”
 ' 1：未知的连接方式（除无身份验证和用户名/密码方式以外的）
 ' 2：用户名或密码错误
 ' 3：绑定失败
 ' 4：绑定成功 可采用 取回端口() 返回监听的窗口
 ' 9：连接断开
 ' 参数的剩余文本表示数组标记
 ' 可以使用 取指令数组标志(参数) 获得
 ' 例如 收到 0 指令表示有数据收到可以采用 代理服务器_UDP_数据报[取指令数组标志(参数)].取回数据() 返回实际的数据

.子程序 收到数据, 空白型, 公开, 此子程序会自动运行，用户不需要更改或调用
.参数 代理服务器的数据, 字节集, , 

.判断开始 (等于 (流程, 1))
    .判断开始 (等于 (取字节集右边 (代理服务器的数据, 1), { 0 }))
        输出调试文本 (“无身份验证方式”)
        客户.发送数据 (返回连接字节集 ())
        赋值 (流程, 3)
    .判断 (等于 (取字节集右边 (代理服务器的数据, 1), { 2 }))
        输出调试文本 (“有密码验证方式”)
        客户.发送数据 (取密码连接 ())
        赋值 (流程, 2)
    .默认
        未知支持库函数_13 (子程序, 相加 (“1”, 客户.标记))
    .判断结束
    
.判断 (等于 (流程, 2))
    .如果 (等于 (代理服务器的数据, { 1, 0 }))
        客户.发送数据 (返回连接字节集 ())
        赋值 (流程, 3)
    .否则
        未知支持库函数_13 (子程序, 相加 (“2”, 客户.标记))
    .如果结束
    
.判断 (等于 (流程, 3))
    .如果 (等于 (取字节集中间 (代理服务器的数据, 2, 1), { 0 }))
        赋值 (端口, 相加 (相乘 (取字节集数据 (取字节集中间 (代理服务器的数据, 9, 1), #整数型), 256), 取字节集数据 (取字节集中间 (代理服务器的数据, 10, 1), #整数型)))
        赋值 (流程, 0)
        未知支持库函数_13 (子程序, 相加 (“4”, 客户.标记))
    .否则
        未知支持库函数_13 (子程序, 相加 (“3”, 客户.标记))
    .如果结束
    
.默认
    
.判断结束


.子程序 收到数据报, 空白型, 公开, 此子程序会自动运行，用户不需要更改或调用
.参数 代理服务器的数据, 字节集, , 

.判断开始 (等于 (流程, 0))
    赋值 (地址, 相加 (到文本 (取字节集数据 (取字节集中间 (代理服务器的数据, 5, 1), #整数型)), “.”, 到文本 (取字节集数据 (取字节集中间 (代理服务器的数据, 6, 1), #整数型)), “.”, 到文本 (取字节集数据 (取字节集中间 (代理服务器的数据, 7, 1), #整数型)), “.”, 到文本 (取字节集数据 (取字节集中间 (代理服务器的数据, 8, 1), #整数型)), “:”, 到文本 (相加 (相乘 (取字节集数据 (取字节集中间 (代理服务器的数据, 9, 1), #整数型), 256), 取字节集数据 (取字节集中间 (代理服务器的数据, 10, 1), #整数型)))))
    赋值 (数据, 取字节集右边 (代理服务器的数据, 相减 (取字节集长度 (代理服务器的数据), 10)))
    未知支持库函数_13 (子程序, 相加 (“0”, 客户.标记))
.默认
    
.判断结束


.子程序 取回数据, 字节集, 公开, 
返回 (数据)

.子程序 取回地址, 文本型, 公开, 
返回 (地址)

.子程序 取回端口, 整数型, 公开, 
返回 (端口)

.子程序 断开连接, 空白型, 公开, 此子程序会自动运行，用户不需要更改或调用
未知支持库函数_13 (子程序, 相加 (“9”, 客户.标记))

.子程序 返回连接字节集, 字节集, , 此子程序会自动运行，用户不需要更改或调用
.局部变量 数据包, 字节型, , "10", 

赋值 (数据包 [1], 5) ' 版本号
赋值 (数据包 [2], 3) ' 连接模式
赋值 (数据包 [3], 0) ' 保留
赋值 (数据包 [4], 1) ' ipv4地址类型
赋值 (数据包 [5], 0) ' 地址1
赋值 (数据包 [6], 0) ' 地址2
赋值 (数据包 [7], 0) ' 地址3
赋值 (数据包 [8], 0) ' 地址4
赋值 (数据包 [9], 整除 (数据报.端口, 256)) ' 端口1
赋值 (数据包 [10], 求余数 (数据报.端口, 256)) ' 端口2
返回 (到字节集 (数据包))

.子程序 发送数据, 空白型, 公开, 
.参数 数据, 字节集, , 
.参数 地址, 文本型, , 
.参数 端口, 整数型, , 

数据报.发送数据 (地址, 端口, 数据)

.子程序 作废, 空白型, 公开, 
客户.断开连接 ()
客户.销毁 ()
数据报.销毁 ()
赋值 (数据, {  })

.窗口程序集 SOCKS5代理窗口程序集, , , 

.子程序 取指令标记, 整数型, , 
.参数 指令文本, 文本型, , 

返回 (到数值 (取文本左边 (指令文本, 1)))

.子程序 取指令数组标志, 整数型, , 
.参数 指令文本, 文本型, , 

返回 (到数值 (取文本右边 (指令文本, 相减 (取文本长度 (指令文本), 1))))

.子程序 取密码连接, 字节集, , 
.局部变量 数据包, 字节型, , "2", 

赋值 (数据包 [1], 取字节集长度 (到字节集 (.内容)))
赋值 (数据包 [2], 取字节集长度 (到字节集 (.内容)))
返回 (相加 (到字节集 ({ 1 }), 到字节集 (数据包 [1]), 到字节集 (SOCKS5代理窗口..内容), 到字节集 (数据包 [2]), 到字节集 (SOCKS5代理窗口..内容)))

.子程序 _按钮1_被单击, 空白型, , 
赋值 (., 假)

.子程序 _TCP_客户_数据到达, 空白型, , 
.局部变量 实际组件, 客户, , , 

赋值 (实际组件, 取事件组件 ())
.如果真 (并且 (大于 (到数值 (实际组件.标记), 0), 小于或等于 (到数值 (实际组件.标记), 取数组成员数 (代理服务器_TCP_客户))))
    代理服务器_TCP_客户.收到数据 ( [到数值 (实际组件.标记)], 实际组件.取回数据 ())
.如果真结束


.子程序 _TCP_客户_连接断开, 空白型, , 
.局部变量 实际组件, 客户, , , 

赋值 (实际组件, 取事件组件 ())
.如果真 (并且 (大于 (到数值 (实际组件.标记), 0), 小于或等于 (到数值 (实际组件.标记), 取数组成员数 (代理服务器_TCP_客户))))
    代理服务器_TCP_客户.断开连接 ( [到数值 (实际组件.标记)])
.如果真结束


.子程序 _TCP_服务器_数据到达, 空白型, , 
.局部变量 实际组件, 客户, , , 

赋值 (实际组件, 取事件组件 ())
.如果真 (并且 (大于 (到数值 (实际组件.标记), 0), 小于或等于 (到数值 (实际组件.标记), 取数组成员数 (代理服务器_TCP_服务器))))
    代理服务器_TCP_服务器.收到数据 ( [到数值 (实际组件.标记)], 实际组件.取回数据 ())
.如果真结束


.子程序 _TCP_服务器_连接断开, 空白型, , 
.局部变量 实际组件, 客户, , , 

赋值 (实际组件, 取事件组件 ())
.如果真 (并且 (大于 (到数值 (实际组件.标记), 0), 小于或等于 (到数值 (实际组件.标记), 取数组成员数 (代理服务器_TCP_服务器))))
    代理服务器_TCP_服务器.断开连接 ( [到数值 (实际组件.标记)])
.如果真结束


.子程序 _UDP_数据报连接_数据到达, 空白型, , 
.局部变量 实际组件, 客户, , , 

赋值 (实际组件, 取事件组件 ())
.如果真 (并且 (大于 (到数值 (实际组件.标记), 0), 小于或等于 (到数值 (实际组件.标记), 取数组成员数 (代理服务器_UDP_数据报))))
    代理服务器_UDP_数据报.收到数据 ( [到数值 (实际组件.标记)], 实际组件.取回数据 ())
.如果真结束


.子程序 _UDP_数据报连接_连接断开, 空白型, , 
.局部变量 实际组件, 客户, , , 

赋值 (实际组件, 取事件组件 ())
.如果真 (并且 (大于 (到数值 (实际组件.标记), 0), 小于或等于 (到数值 (实际组件.标记), 取数组成员数 (代理服务器_UDP_数据报))))
    代理服务器_UDP_数据报.断开连接 ( [到数值 (实际组件.标记)])
.如果真结束


.子程序 _UDP_数据报_数据到达, 空白型, , 
.局部变量 实际组件, 数据报, , , 

赋值 (实际组件, 取事件组件 ())
.如果真 (并且 (大于 (到数值 (实际组件.标记), 0), 小于或等于 (到数值 (实际组件.标记), 取数组成员数 (代理服务器_UDP_数据报))))
    代理服务器_UDP_数据报.收到数据报 ( [到数值 (实际组件.标记)], 实际组件.取回数据 ())
.如果真结束


.窗口程序集 代理测试窗口程序集, , , 

.子程序 _连接模式测试_连接按钮_被单击, 空白型, , 
.局部变量 临时代理, 类模块_代理服务器_TCP_客户, , , 

临时代理.连接 (&连接模式测试_处理子程序, .内容, 到数值 (.内容))
加入成员 (代理服务器_TCP_客户, 临时代理)
赋值 (.内容, 到文本 (取数组成员数 (代理服务器_TCP_客户)))

.子程序 连接模式测试_处理子程序, 空白型, , 
.参数 标志, 文本型, , 

 ' 0：实际数据 可用 取回数据() 返回实际数据
 ' 1：未知的连接方式（除无身份验证和用户名/密码方式以外的）
 ' 2：用户名或密码错误
 ' 3：连接目标服务器时错误
 ' 4：连接成功
 ' 9：连接断开
.判断开始 (等于 (取指令标记 (标志), 0))
    信息框 (相加 (“收到数据 :”, 取字节集数据 (代理服务器_TCP_客户.取回数据 ( [取指令数组标志 (标志)]), #文本型)), 0, 相加 (“第”, 到文本 (取指令数组标志 (标志)), “个代理客户状态”))
.判断 (等于 (取指令标记 (标志), 1))
    信息框 (“未知的代理服务器的连接方式”, 0, 相加 (“第”, 到文本 (取指令数组标志 (标志)), “个代理客户状态”))
.判断 (等于 (取指令标记 (标志), 2))
    信息框 (“用户名/密码错误”, 0, 相加 (“第”, 到文本 (取指令数组标志 (标志)), “个代理客户状态”))
.判断 (等于 (取指令标记 (标志), 3))
    信息框 (“连接实际服务器失败”, 0, 相加 (“第”, 到文本 (取指令数组标志 (标志)), “个代理客户状态”))
.判断 (等于 (取指令标记 (标志), 4))
    信息框 (“连接成功”, 0, 相加 (“第”, 到文本 (取指令数组标志 (标志)), “个代理客户状态”))
.判断 (等于 (取指令标记 (标志), 9))
    信息框 (“与代理服务器断开连接”, 0, 相加 (“第”, 到文本 (取指令数组标志 (标志)), “个代理客户状态”))
.默认
    
.判断结束


.子程序 _监听模式测试_连接按钮_被单击, 空白型, , 
.局部变量 临时代理, 类模块_代理服务器_TCP_服务器, , , 

临时代理.连接 (&服务器模式测试_处理子程序)
加入成员 (代理服务器_TCP_服务器, 临时代理)
赋值 (.内容, 到文本 (取数组成员数 (代理服务器_TCP_服务器)))

.子程序 服务器模式测试_处理子程序, 空白型, , 
.参数 标志, 文本型, , 

.判断开始 (等于 (取指令标记 (标志), 0))
    信息框 (相加 (“收到数据 :”, 取字节集数据 (代理服务器_TCP_服务器.取回数据 ( [取指令数组标志 (标志)]), #文本型)), 0, 相加 (“第”, 到文本 (取指令数组标志 (标志)), “个代理服务器状态”))
.判断 (等于 (取指令标记 (标志), 1))
    信息框 (“未知的代理服务器的连接方式”, 0, 相加 (“第”, 到文本 (取指令数组标志 (标志)), “个代理服务器状态”))
.判断 (等于 (取指令标记 (标志), 2))
    信息框 (“用户名/密码错误”, 0, 相加 (“第”, 到文本 (取指令数组标志 (标志)), “个代理服务器状态”))
.判断 (等于 (取指令标记 (标志), 3))
    信息框 (“绑定失败”, 0, 相加 (“第”, 到文本 (取指令数组标志 (标志)), “个代理服务器状态”))
.判断 (等于 (取指令标记 (标志), 4))
    赋值 (.标题, 到文本 (代理服务器_TCP_服务器.取回端口 ( [取指令数组标志 (标志)])))
    信息框 (相加 (“绑定成功 监听端口:”, .标题), 0, 相加 (“第”, 到文本 (取指令数组标志 (标志)), “个代理服务器状态”))
.判断 (等于 (取指令标记 (标志), 5))
    信息框 (相加 (“有客户进入 连接文本:”, 代理服务器_TCP_服务器.取回地址 ( [取指令数组标志 (标志)]), #换行符, “此时不能有其他客户连接现在监听的端口，否则会迫使监听组建断开和代理服务器的连接”, #换行符, “可新建立个监听模式的代理端口”), 0, 相加 (“第”, 到文本 (取指令数组标志 (标志)), “个代理服务器状态”))
.判断 (等于 (取指令标记 (标志), 9))
    信息框 (“与代理服务器断开连接或者某个客户连接断开”, 0, 相加 (“第”, 到文本 (取指令数组标志 (标志)), “个代理服务器状态”))
.默认
    
.判断结束



.子程序 _UDP模式测试_连接按钮_被单击, 空白型, , 
.局部变量 临时代理, 类模块_代理服务器_UDP_数据报, , , 

临时代理.连接 (&UDP模式测试_处理子程序, 到数值 (.内容))
加入成员 (代理服务器_UDP_数据报, 临时代理)
赋值 (.内容, 到文本 (取数组成员数 (代理服务器_UDP_数据报)))

.子程序 UDP模式测试_处理子程序, 空白型, , 
.参数 标志, 文本型, , 

 ' 0：实际数据 可用 取回数据() 返回实际数据 同时可采用 取回地址() 返回数据发送端 格式：“IP：端口”
 ' 1：未知的连接方式（除无身份验证和用户名/密码方式以外的）
 ' 2：用户名或密码错误
 ' 3：绑定失败
 ' 4：绑定成功 可采用 取回端口() 返回监听的窗口
 ' 9：连接断开

.判断开始 (等于 (取指令标记 (标志), 0))
    信息框 (相加 (“收到数据 :”, 取字节集数据 (代理服务器_UDP_数据报.取回数据 ( [取指令数组标志 (标志)]), #文本型)), 0, 相加 (“第”, 到文本 (取指令数组标志 (标志)), “个代理数据报状态”))
.判断 (等于 (取指令标记 (标志), 1))
    信息框 (“未知的代理服务器的连接方式”, 0, 相加 (“第”, 到文本 (取指令数组标志 (标志)), “个代理数据报状态”))
.判断 (等于 (取指令标记 (标志), 2))
    信息框 (“用户名/密码错误”, 0, 相加 (“第”, 到文本 (取指令数组标志 (标志)), “个代理数据报状态”))
.判断 (等于 (取指令标记 (标志), 3))
    信息框 (“绑定失败”, 0, 相加 (“第”, 到文本 (取指令数组标志 (标志)), “个代理数据报状态”))
.判断 (等于 (取指令标记 (标志), 4))
    赋值 (.标题, 到文本 (代理服务器_UDP_数据报.取回端口 ( [取指令数组标志 (标志)])))
    信息框 (相加 (“绑定成功 监听端口:”, .标题), 0, 相加 (“第”, 到文本 (取指令数组标志 (标志)), “个代理数据报状态”))
.判断 (等于 (取指令标记 (标志), 9))
    信息框 (相加 (“第”, 到文本 (取指令数组标志 (标志)), “个代理数据报状态   ”, #换行符, “与代理服务器断开连接”), 0, 相加 (“第”, 到文本 (取指令数组标志 (标志)), “个代理数据报状态”))
.默认
    
.判断结束


.子程序 _代理测试窗口_创建完毕, 空白型, , 
载入 (SOCKS5代理窗口, , 假)
未知支持库函数_0 (1)

.子程序 _连接模式测试_发送按钮_被单击, 空白型, , 
.如果 (或者 (小于 (到数值 (.内容), 1), 大于 (到数值 (.内容), 取数组成员数 (代理服务器_TCP_客户))))
    信息框 (“没有这个客户”, 0, 取执行文件名 ())
.否则
    代理服务器_TCP_客户.发送数据 ( [到数值 (.内容)], 到字节集 (.内容))
.如果结束


.子程序 _监听模式测试_发送按钮_被单击, 空白型, , 
.如果 (或者 (小于 (到数值 (.内容), 1), 大于 (到数值 (.内容), 取数组成员数 (代理服务器_TCP_服务器))))
    信息框 (“没有这个服务器”, 0, 取执行文件名 ())
.否则
    代理服务器_TCP_服务器.发送数据 ( [到数值 (.内容)], 到字节集 (.内容))
.如果结束


.子程序 _UDP模式测试_发送按钮_被单击, 空白型, , 
.如果 (或者 (小于 (到数值 (.内容), 1), 大于 (到数值 (.内容), 取数组成员数 (代理服务器_UDP_数据报))))
    信息框 (“没有这个UDP”, 0, 取执行文件名 ())
.否则
    代理服务器_UDP_数据报.发送数据 ( [到数值 (.内容)], 到字节集 (.内容), .内容, 到数值 (.内容))
.如果结束


.子程序 _代理测试窗口_将被销毁, 空白型, , 
结束 ()


.窗口程序集 窗口程序集1, , , 

.子程序 _按钮1_被单击, 空白型, , 
载入 (SOCKS5代理窗口, , 假)
赋值 (SOCKS5代理窗口., 真)


.子程序 _按钮2_被单击, 空白型, , 
载入 (代理测试窗口, , 假)


.子程序 __启动窗口_创建完毕, 空白型, , 
未知支持库函数_0 (1)


.子程序 _按钮3_被单击, 空白型, , 
结束 ()



 ' 不属于任何一个程序集、类模块的函数：
