 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 499
    高度 = 440
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 1
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 真
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “简单的控制操作”
    帮助文件名 = “”





 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 1 系统核心支持库
 ' edroptarget {9DA96BF9CEBD45c5BFCF94CBE61671F5} 1 0 拖放支持库
 ' eAPI F7FC1AE45C5C4758AF03EF19F18A395D 1 0 应用接口支持库
 ' eCompress 7B68736E818E41c5A28B0AE4D43C128C 1 0 压缩解压支持库
 ' shell 52F260023059454187AF826A3C07AF2A 1 0 操作系统界面功能支持库




.全局变量 命令, 文本型, , , 用开记录，按下回车时的操作命令

.窗口程序集 操作窗口程序集, , , 

.程序集变量 程序集_个数, 整数型, , , 
.子程序 _编辑框_被双击, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.判断开始 (等于 (_启动窗口., 0)) ' 双击_启动窗口使其在无边框和有边框之间进行切换
    赋值 (_启动窗口., 1) ' 有边框
    赋值 (_启动窗口., 假) ' 有连框时，能够看见“开始”菜单
.默认
    赋值 (_启动窗口., 0) ' 无边框
    赋值 (_启动窗口., 真) ' 无边框时，相当于DOS下进行操作感觉好，所以让窗口下方的“开始”菜单隐藏
.判断结束

_启动窗口.移动 (0, 0, 取屏幕宽度 (), 取屏幕高度 ()) ' 双击时，使_启动窗口的在小为屏幕的大小
0.移动 (0, _启动窗口., _启动窗口.) ' 编辑框的大小正好是_启动窗口的大小
赋值 (.时钟周期, 0)

.子程序 __启动窗口_尺寸被改变, 空白型, , 
-2.移动 (-2, _启动窗口., _启动窗口.) ' 编辑框的大小正好是_启动窗口的大小
赋值 (.字体.字体大小, 10)
赋值 (.字体.加粗, 真)


取窗口句柄 ().未知支持库函数_0 () ' 使用拖放功能必须先注册拖放控件，否则无法实现拖放功能（这里，“_启动窗口”为拖放　　　　　　　　　　　　　　　　　　　　 控件）　
赋值 (., 真) ' 将拖放对象接收到的文本或文件，必须给予逻辑值“真”
赋值 (., 真)
赋值 (., 真)
赋值 (., 真)

.子程序 _编辑框_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.判断开始 (等于 (键代码, #回车键)) ' 按下回车键取得操作命令赋值给变量“命令”
    赋值 (命令, 取文本右边 (.内容, 相减 (取文本长度 (.内容), 倒找文本 (.内容, #换行符, , 假), 1)))
     ' '命令 ＝ 取文本左边 (命令, 取文本长度 (命令) － 倒找文本 (命令, #换行符, , 假))
.默认
    赋值 (命令, “”)
    返回 ()
.判断结束

.判断开始 (等于 (取文本左边 (命令, 4), “复制”)) ' 以下为文件操作类\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
    复制_子程序 ()
.判断 (等于 (取文本左边 (命令, 4), “移动”))
    移动_子程序 ()
.判断 (等于 (取文本左边 (命令, 4), “删除”))
    删除清空_子程序 ()
.判断 (等于 (取文本左边 (命令, 4), “创建”))
    创建_子程序 ()
.判断 (等于 (取文本左边 (命令, 8), “清空目录”))
    删除清空_子程序 ()
.判断 (等于 (取文本左边 (命令, 8), “清空文件”))
    删除清空_子程序 ()
.判断 (等于 (取文本左边 (命令, 4), “添加”))
    添加_子程序 ()
.判断 (等于 (取文本左边 (命令, 8), “文本替换”))
    修改_子程序 ()
.判断 (等于 (取文本左边 (命令, 4), “查寻”))
    查寻_子程序 ()
.判断 (等于 (取文本左边 (命令, 4), “压缩”))
    压缩_子程序 ()
.判断 (等于 (取文本左边 (命令, 4), “更名”))
    改名_子程序 ()
.判断 (等于 (取文本左边 (命令, 6), “置属性”))
    改属性_子程序 ()
.判断 (等于 (取文本左边 (命令, 8), “文本查寻”))
    修改_子程序 ()
.判断 (等于 (取文本左边 (命令, 4), “搜索”))
    搜索_子程序 ()
.判断 (或者 (等于 (取文本左边 (命令, 3), “CPU”), 等于 (取文本左边 (命令, 3), “cpu”), 等于 (取文本左边 (命令, 6), “处理器”))) ' 以下为应用接口操作类\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
    
    CPU_子程序 ()
.判断 (等于 (命令, “系统”))
    系统_子程序 ()
.判断 (等于 (命令, “驱动器”))
    驱动器_子程序 ()
.判断 (等于 (命令, “进程”))
    进程_子程序 ()
.判断 (等于 (命令, “网卡”))
    网卡_子程序 ()
.判断 (等于 (命令, “硬盘”))
    硬盘_子程序 ()
.判断 (或者 (等于 (命令, “BIOS”), 等于 (取文本左边 (命令, 4), “bios”)))
    BIOS_子程序 ()
.判断 (等于 (命令, “终止”))
    终止_子程序 ()
.判断 (等于 (命令, “内存”))
    内存_子程序 ()
.判断 (等于 (命令, “字体”))
    字体_子程序 ()
.判断 (等于 (命令, “文件信息”))
    文件信息_子程序 ()
.判断 (等于 (命令, “声卡”))
    声卡_子程序 ()
.判断 (等于 (命令, “远程”))
    远程_子程序 ()
.判断 (等于 (命令, “网络”))
    网络_子程序 ()
.判断 (等于 (命令, “互联网”))
    互联网_子程序 ()
.判断 (等于 (取文本左边 (命令, 8), “共享资源”))
    共享资源_子程序 ()
.判断 (等于 (取文本左边 (命令, 4), “发送”))
    发送_子程序 ()
.判断 (或者 (等于 (取文本左边 (命令, 2), “IP”), 等于 (取文本左边 (命令, 2), “ip”)))
    IP_子程序 ()
.判断 (等于 (取文本左边 (命令, 8), “端口检测”))
    端口检测_子程序 ()
.判断 (等于 (命令, “隐藏桌面图标”))
    未知支持库函数_57 ()
.判断 (等于 (命令, “显示桌面图标”))
    未知支持库函数_58 ()
.判断 (等于 (命令, “隐藏任务栏”))
    未知支持库函数_59 ()
.判断 (等于 (命令, “显示任务栏”))
    未知支持库函数_60 ()
.判断 (等于 (命令, “隐藏系统时钟”))
    未知支持库函数_61 ()
.判断 (等于 (命令, “显示系统时钟”))
    未知支持库函数_62 ()
.判断 (等于 (命令, “隐藏开始按钮”))
    未知支持库函数_63 ()
.判断 (等于 (命令, “显示开始按钮”))
    未知支持库函数_64 ()
.判断 (等于 (命令, “显示模式”))
    显示模式_子程序 ()
.判断 (等于 (命令, “当前显示模式”))
    当前显示模式_子程序 ()
.判断 (等于 (取文本左边 (命令, 6), “分辨率”))
    分辨率_子程序 ()
.判断 (等于 (取文本左边 (命令, 6), “透明度”))
    透明度_子程序 ()
.判断 (等于 (命令, “句柄”))
    赋值 (程序集_个数, 0)
    赋值 (.时钟周期, 2000)
.判断 (等于 (命令, “退出”))
    结束 ()
.判断 (等于 (命令, “关于”))
    关于_子程序 ()
.判断 (等于 (取文本左边 (命令, 2), “<>”)) ' 系统自身设置\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
    自身配置_子程序 ()
.默认
    系统辅助_子程序 () ' 辅助操作系统的控制及应用程序\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
    
.判断结束


.子程序 _拖放对象_得到文本, 空白型, , 
.参数 接收到的文本, 文本型, , 

相加 (接收到的文本, #换行符).加入文本 () ' 拖放对象接收到文本时,用编辑框将其显示出来

.子程序 _拖放对象_得到超文本, 空白型, , 
.参数 接收到的超文本, 文本型, , 

相加 (接收到的超文本, #换行符).加入文本 () ' 拖放对象接收到超文本时,用编辑框将其显示出来

.子程序 _拖放对象_得到URL, 空白型, , 
.参数 接收到的URL, 文本型, , 

相加 (接收到的URL, #换行符).加入文本 () ' 拖放对象接收到URL时,用编辑框将其显示出来

.子程序 _拖放对象_得到文件, 空白型, , 
.参数 接收到的文件路径, 文本型, , 

相加 (接收到的文件路径, #换行符).加入文本 () ' 拖放对象接收到文件时,用编辑框将其存放路径显示出来


.子程序 _时钟_周期事件, 空白型, , 
.局部变量 局部_句柄, 整数型, , , 

.判断开始 (小于或等于 (程序集_个数, 2))
    赋值 (程序集_个数, 相加 (程序集_个数, 1))
    赋值 (局部_句柄, 未知支持库函数_78 ())
    _启动窗口.加入文本 (., 相加 (#换行符, 未知支持库函数_76 (局部_句柄), “（”, 未知支持库函数_77 (局部_句柄), “）”, “：”, 到文本 (局部_句柄)))
.默认
    赋值 (.时钟周期, 0)
.判断结束
输出调试文本 (到文本 (程序集_个数))


.子程序 _编辑框_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.时钟周期, 0)


.子程序 _编辑框_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.时钟周期, 0)


.程序集 文件操作类_程序集, , , 

.程序集变量 程序集_被复制的父目录, 文本型, , , 用于系统检测被复制的目录或文件的父目录是否存在
.程序集变量 程序集_目标, 文本型, , , 用于记录到复制文件时的目标路径
.程序集变量 程序集_文件属性, 文本型, , , 记录取得的文件 的属性
.程序集变量 程序集_文件大小, 文本型, , , 记录查寻时，文件的大小
.程序集变量 程序集_目录大小, 整数型, , , 记录搜索后目录的大小
.程序集变量 程序集_搜索文件名, 文本型, , "0", 记录要操作的文件的名称
.程序集变量 程序集_搜索到的文件, 文本型, , "0", 记录搜索的所有被搜索的文件
.程序集变量 程序集_搜索到的目录, 文本型, , "0", 记录搜索的所有被搜索的目录
.程序集变量 程序集_取文件时间, 文本型, , , 
.子程序 复制_子程序, 空白型, , 
.局部变量 局部_复制类型, 文本型, , , 用于取出复制的文件类型（目录、文件）
.局部变量 局部_名称, 文本型, , "0", 用于记录被复制文件或目录的名称，支持批量操作
.局部变量 局部_复制源, 文本型, , , 用于记录被复制的源路径和文件或目录
.局部变量 局部_计次, 整数型, , , 用于子程序的计次循环
.局部变量 局部_目录数组, 文本型, , "0", 用于传递目录名给“复制目录_子程序”
.局部变量 局部_复制到, 文本型, , , 用于记录复制到的路径和目录

赋值 (程序集_被复制的父目录, 取文本中间 (命令, 9, 相减 (倒找文本 (命令, “>”, , 假), 9)))
赋值 (局部_名称, 分割文本 (取文本右边 (程序集_被复制的父目录, 相减 (取文本长度 (程序集_被复制的父目录), 倒找文本 (程序集_被复制的父目录, “\”, , 假))), “ ”, ))
赋值 (程序集_被复制的父目录, 取文本左边 (程序集_被复制的父目录, 相减 (倒找文本 (程序集_被复制的父目录, “\”, , 假), 1)))
.判断开始 (并且 (小于或等于 (取文本长度 (程序集_被复制的父目录), 3), 大于 (取文本长度 (程序集_被复制的父目录), 1))) ' 如果复制目录为某一磁盘下的第一根目录，必须判断此磁盘是否存在
    .如果真 (等于 (取磁盘总空间 (取文本左边 (程序集_被复制的父目录, 1)), -1))
        _启动窗口.加入文本 (., 相加 (#换行符, “磁盘”, 到大写 (取文本左边 (程序集_被复制的父目录, 1)), “不存在”)) ' 不存在则提示“磁盘X不存在”
    .如果真结束
    
.默认
    .如果真 (等于 (寻找文件 (程序集_被复制的父目录, #子目录), “”)) ' 检测被复制的目录或文件的父目录是否存在
        _启动窗口.加入文本 (., 相加 (#换行符, “系统找不到源文件”)) ' 不存在则提示“系统找不到源文件”
        返回 ()
    .如果真结束
    
.判断结束

赋值 (局部_复制到, 取文本右边 (命令, 相减 (取文本长度 (命令), 倒找文本 (命令, “>”, , 假))))

.判断开始 (并且 (小于或等于 (取文本长度 (局部_复制到), 3), 大于 (取文本长度 (局部_复制到), 1)))
    .如果真 (等于 (取磁盘总空间 (到大写 (取文本左边 (局部_复制到, 1))), -1))
        _启动窗口.加入文本 (., 相加 (#换行符, “系统找不到目标”)) ' 不存在则提示“系统找不到目标文件夹”
    .如果真结束
    
.默认
    .如果真 (等于 (寻找文件 (局部_复制到, #子目录), “”)) ' 检测复制到的目录是否存在
        _启动窗口.加入文本 (., 相加 (#换行符, “系统找不到目标文件夹”)) ' 不存在则提示“系统找不到目标文件夹”
        返回 ()
    .如果真结束
    
.判断结束

.如果真 (等于 (程序集_被复制的父目录, 局部_复制到)) ' 检测目标和源文件夹是否相同
    _启动窗口.加入文本 (., 相加 (#换行符, “目标和源文件夹相同，系统无法复制”)) ' 相同则提示“目标和源文件夹相同，系统无　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　 法复制”
    返回 ()
.如果真结束

赋值 (局部_复制类型, 取文本中间 (命令, 5, 4))
.判断开始 (等于 (局部_复制类型, “文件”)) ' 判断复制类型为文件
    .计次循环首 (取数组成员数 (局部_名称), 局部_计次) ' 进行批量复制文件
        .判断开始 (等于 (寻找文件 (相加 (程序集_被复制的父目录, “\”, 局部_名称 [局部_计次]), ), “”)) ' 判断被复制的文件是否存在
            _启动窗口.加入文本 (., 相加 (#换行符, 局部_名称 [局部_计次], “文件不存在”))
        .默认
            复制文件 (相加 (程序集_被复制的父目录, “\”, 局部_名称 [局部_计次]), 相加 (局部_复制到, “\”, 局部_名称 [局部_计次])) ' 文件存在则复制文件
        .判断结束
        
    .计次循环尾 ()
.判断 (等于 (局部_复制类型, “目录”)) ' 判断复制类型为目录
    赋值 (程序集_目标, 局部_复制到)
    .计次循环首 (取数组成员数 (局部_名称), 局部_计次)
        创建目录 (相加 (程序集_目标, “\”, 局部_名称 [局部_计次])) ' 调用子程序前，将第一目录先创建完毕
        加入成员 (局部_目录数组, 相加 (程序集_被复制的父目录, “\”, 局部_名称 [局部_计次])) ' 将被复制的目录加入数组，并传递给子程序
        复制文件_子程序 (局部_目录数组, 局部_复制到) ' 调用子程序“复制文件_子程序”
    .计次循环尾 ()
.默认
    
.判断结束


.子程序 复制目录_子程序, 空白型, , ’复制功能的复制目录
.参数 参数_目录, 文本型, 数组, 用来记录源目录
.参数 参数_目标, 文本型, , 用来记录目标目录

.局部变量 局部_计次, 整数型, , , 
.局部变量 局部_找到目录, 文本型, , , 用来记录找到的目录
.局部变量 局部参数_目录, 文本型, , "0", 用来记录所有找到的目录的路径及名称

.计次循环首 (取数组成员数 (参数_目录), 局部_计次) ' 对接收的目录进行“寻找文件”，类型为“＃子目录”
    赋值 (局部_找到目录, 寻找文件 (相加 (参数_目录 [局部_计次], “\*.*”), #子目录))
    .判断循环首 (不等于 (局部_找到目录, “”)) ' 判断找到了子目录
        .如果真 (并且 (不等于 (局部_找到目录, “.”), 不等于 (局部_找到目录, “..”))) ' 系统默认在第个文件夹下都有一个“.”和".."文件夹所以找到此类文件不对其进行复制
            赋值 (参数_目标, 相加 (程序集_目标, “\”, 取文本中间 (参数_目录 [局部_计次], 相加 (寻找文本 (参数_目录 [局部_计次], 程序集_被复制的父目录, , 假), 取文本长度 (程序集_被复制的父目录)), 相加 (相减 (倒找文本 (参数_目录 [局部_计次], “\”, , 假), 寻找文本 (参数_目录 [局部_计次], 程序集_被复制的父目录, , 假)), 取文本长度 (程序集_被复制的父目录))))) ' 规定复制到的目标
            创建目录 (相加 (参数_目标, “\”, 局部_找到目录))
            加入成员 (局部参数_目录, 相加 (参数_目录 [局部_计次], “\”, 局部_找到目录)) ' 为了深层查找，所以每次将找到的新子目录加入到“局部参数_目录”数组里
        .如果真结束
        赋值 (局部_找到目录, 寻找文件 (#子目录)) ' 连续查找
    .判断循环尾 ()
.计次循环尾 ()
复制数组 (参数_目录, 局部参数_目录) ' 将传递的数组“参数_目录”用新数组“局部参数_目录”覆盖
.如果真 (不等于 (取数组成员数 (参数_目录), 0)) ' 如果还存在深层的子目录，则调用“复制文件_子程序”查找文件
    复制文件_子程序 (参数_目录, 参数_目标)
.如果真结束


.子程序 复制文件_子程序, 空白型, , ‘复制功能的复制文件
.参数 参数_目录, 文本型, 数组, 用来记录源目录
.参数 参数_目标, 文本型, , 用来记录目标目录

.局部变量 局部_计次, 整数型, , , 
.局部变量 局部_找到文件, 文本型, , , 用来记录找到的文件
.局部变量 局部_复制到目标, 文本型, , , 用来记录复制到的目标目录

.计次循环首 (取数组成员数 (参数_目录), 局部_计次) ' 对接收的目录进行“寻找文件”，类型为非“＃子目录”的所有文件
    赋值 (局部_找到文件, 寻找文件 (相加 (参数_目录 [局部_计次], “\*.*”), ))
    .判断循环首 (不等于 (局部_找到文件, “”)) ' 判断找到了文件
        赋值 (局部_复制到目标, 相加 (程序集_目标, “\”, 取文本右边 (参数_目录 [局部_计次], 相减 (取文本长度 (参数_目录 [局部_计次]), 取文本长度 (程序集_被复制的父目录))), “\”, 局部_找到文件)) ' 在复制中，规定复制到的目标目录
        
        复制文件 (相加 (参数_目录 [局部_计次], “\”, 局部_找到文件), 局部_复制到目标) ' 进行复制
        赋值 (局部_找到文件, 寻找文件 ()) ' 连续查找
    .判断循环尾 ()
.计次循环尾 ()
复制目录_子程序 (参数_目录, 参数_目标)

.子程序 移动_子程序, 空白型, , 
.局部变量 局部_被移动的父目录, 文本型, , , 用于系统检测被移动的目录或文件的父目录是否存在
.局部变量 局部_名称, 文本型, , "0", 用于记录被移动文件或目录的名称，支持批量操作
.局部变量 局部_计次, 整数型, , , 
.局部变量 局部_删除, 文本型, , , 用于记录移动后被删除的源文件名

复制_子程序 ()
赋值 (局部_被移动的父目录, 取文本中间 (命令, 9, 相减 (倒找文本 (命令, “>”, , 假), 9)))
赋值 (局部_名称, 分割文本 (取文本右边 (局部_被移动的父目录, 相减 (取文本长度 (局部_被移动的父目录), 倒找文本 (局部_被移动的父目录, “\”, , 假))), “ ”, ))

.计次循环首 (取数组成员数 (局部_名称), 局部_计次)
    赋值 (局部_删除, 相加 (取文本左边 (局部_被移动的父目录, 倒找文本 (局部_被移动的父目录, “\”, , 假)), 局部_名称 [局部_计次]))
    .如果真 (等于 (删除目录 (局部_删除), 假)) ' 判断文件是否删除成功，不成功则可能是只读属性或受保护
        置文件属性 (局部_删除, #存档文件) ' 是只读文件则修改其属性
        .如果真 (等于 (删除目录 (局部_删除), 假)) ' 如果再删除不了，则是受保护文件，在此不多管，要么则可能是文件而不是目录
            .如果真 (等于 (删除文件 (局部_删除), 假))
                置文件属性 (局部_删除, #存档文件)
                删除文件 (局部_删除)
            .如果真结束
            
        .如果真结束
        
    .如果真结束
    
.计次循环尾 ()

.子程序 删除清空_子程序, 空白型, , 
.局部变量 局部_被移动的父目录, 文本型, , , 用于系统检测被移动的目录或文件的父目录是否存在
.局部变量 局部_名称, 文本型, , "0", 用于记录被移动文件或目录的名称，支持批量操作
.局部变量 局部_计次, 整数型, , , 
.局部变量 局部_删除, 文本型, , , 用于记录移动后被删除的源文件名

赋值 (局部_被移动的父目录, 取文本右边 (命令, 相减 (取文本长度 (命令), 4)))
赋值 (局部_名称, 分割文本 (取文本右边 (局部_被移动的父目录, 相减 (取文本长度 (局部_被移动的父目录), 倒找文本 (局部_被移动的父目录, “\”, , 假))), “ ”, ))

.判断开始 (等于 (取文本左边 (命令, 4), “删除”)) ' 判断对文件操作为“删除”
    .计次循环首 (取数组成员数 (局部_名称), 局部_计次)
        赋值 (局部_删除, 相加 (取文本左边 (局部_被移动的父目录, 倒找文本 (局部_被移动的父目录, “\”, , 假)), 局部_名称 [局部_计次]))
        .如果真 (并且 (等于 (寻找文件 (局部_删除, #子目录), “”), 等于 (寻找文件 (局部_删除, ), “”))) ' 判断删除的是否存在
            _启动窗口.加入文本 (., 相加 (#换行符, “系统找不到”, 局部_名称 [局部_计次]))
        .如果真结束
        
        .如果真 (并且 (等于 (删除目录 (局部_删除), 假), 等于 (删除文件 (局部_删除), 假))) ' 判断文件是否删除成功，不成功则可能是只读属性或受保护
            置文件属性 (局部_删除, #存档文件) ' 是只读文件则修改其属性
            .如果真 (等于 (删除目录 (局部_删除), 假)) ' 如果再删除不了，则是受保护文件，在此不多管，要么则可能是文件而不是目录
                删除文件 (局部_删除)
            .如果真结束
            
        .如果真结束
        
    .计次循环尾 ()
.判断 (等于 (取文本左边 (命令, 8), “清空目录”)) ' 判断对文件操作为“清空目录”
    .计次循环首 (取数组成员数 (局部_名称), 局部_计次)
        赋值 (局部_删除, 相加 (取文本左边 (局部_被移动的父目录, 倒找文本 (局部_被移动的父目录, “\”, , 假)), 局部_名称 [局部_计次]))
        .如果真 (等于 (寻找文件 (局部_删除, #子目录), “”)) ' 判断目录是否存在
            _启动窗口.加入文本 (., 相加 (#换行符, “系统找不到”, 局部_名称 [局部_计次]))
            返回 ()
        .如果真结束
        
        .判断开始 (等于 (删除目录 (局部_删除), 假)) ' 判断文件是否删除成功，不成功则可能是只读属性或受保护
            置文件属性 (局部_删除, #存档文件) ' 是只读文件则修改其属性
            .如果真 (等于 (删除目录 (局部_删除), 真)) ' 如果再删除不了，则是受保护文件，在此不多管
                创建目录 (局部_删除)
            .如果真结束
            
        .默认
            创建目录 (局部_删除)
        .判断结束
        
    .计次循环尾 ()
.判断 (等于 (取文本左边 (命令, 8), “清空文件”)) ' 判断对文件操作为“清空文件”
    .计次循环首 (取数组成员数 (局部_名称), 局部_计次)
        赋值 (局部_删除, 相加 (取文本左边 (局部_被移动的父目录, 倒找文本 (局部_被移动的父目录, “\”, , 假)), 局部_名称 [局部_计次]))
        .如果真 (等于 (寻找文件 (局部_删除, ), “”)) ' 判断文件是否存在
            _启动窗口.加入文本 (., 相加 (#换行符, “系统找不到”, 局部_名称 [局部_计次]))
            返回 ()
        .如果真结束
        
        赋值 (局部_删除, 相加 (取文本左边 (局部_被移动的父目录, 倒找文本 (局部_被移动的父目录, “\”, , 假)), 局部_名称 [局部_计次]))
        .判断开始 (等于 (删除文件 (局部_删除), 假)) ' 判断文件是否删除成功，不成功则可能是只读属性或受保护
            置文件属性 (局部_删除, #存档文件) ' 是只读文件则修改其属性
            .如果真 (等于 (删除文件 (局部_删除), 真)) ' 如果再删除不了，则是受保护文件，在此不多管
                写到文件 (局部_删除, {  })
            .如果真结束
            
        .默认
            写到文件 (局部_删除, {  })
        .判断结束
        
    .计次循环尾 ()
.默认
    
.判断结束


.子程序 创建_子程序, 空白型, , 
.局部变量 局部_创建类型, 文本型, , , 记录创建类型（文件、目录）
.局部变量 局部_创建路径, 文本型, , , 记录创建文件或目录的路径
.局部变量 局部_创建名称, 文本型, , "0", 记录要创建的文件或目录的名称
.局部变量 局部_计次, 整数型, , , 
.局部变量 局部_创建, 文本型, , , 记录创建的路径和名称

赋值 (局部_创建类型, 取文本中间 (命令, 5, 4))
赋值 (局部_创建路径, 取文本中间 (命令, 9, 相减 (倒找文本 (命令, “\”, , 假), 9)))
赋值 (局部_创建名称, 分割文本 (取文本右边 (命令, 相减 (取文本长度 (命令), 倒找文本 (命令, “\”, , 假))), “ ”, ))
.判断开始 (等于 (局部_创建类型, “文件”)) ' 判断操作类型为“创建文件”
    .计次循环首 (取数组成员数 (局部_创建名称), 局部_计次)
        赋值 (局部_创建, 相加 (局部_创建路径, “\”, 局部_创建名称 [局部_计次]))
        .判断开始 (不等于 (寻找文件 (局部_创建, ), “”)) ' 判断要创建的文件是否已存在，存在则不创建
            _启动窗口.加入文本 (., 相加 (#换行符, 局部_创建名称 [局部_计次], “已存在”))
        .默认
            写到文件 (局部_创建, {  }) ' 创建文件
        .判断结束
        
    .计次循环尾 ()
.判断 (等于 (局部_创建类型, “目录”)) ' 判断操作类型为“创建目录”
    .计次循环首 (取数组成员数 (局部_创建名称), 局部_计次)
        赋值 (局部_创建, 相加 (局部_创建路径, “\”, 局部_创建名称 [局部_计次]))
        .判断开始 (不等于 (寻找文件 (局部_创建, #子目录), “”)) ' 判断要创建的目录是否已存在，存在则不创建
            _启动窗口.加入文本 (., 相加 (#换行符, 局部_创建名称 [局部_计次], “已存在”))
        .默认
            创建目录 (局部_创建) ' 创建目录
        .判断结束
        
    .计次循环尾 ()
.默认
    
.判断结束



.子程序 添加_子程序, 空白型, , 
.局部变量 局部_添加路径, 文本型, , , 记录添加文件的路径
.局部变量 局部_添加文件名, 文本型, , "0", 记录要操作的文件的名称
.局部变量 局部_添加方向, 文本型, , , 记录要添加的方向，默认为文件后
.局部变量 局部_添加内容, 文本型, , , 记录要添加的内容
.局部变量 局部_锁定内容, 文本型, , , 记录要添加XXX文本之前或之后的变量
.局部变量 局部_添加, 文本型, , , 记录添加的文件路径及名称
.局部变量 局部_计次, 整数型, , , 
.局部变量 局部_文件内容, 文本型, , , 记录打开文本文件的内容
.局部变量 局部_修改后内容, 文本型, , , 记录修改后的内容

赋值 (局部_添加路径, 取文本中间 (命令, 5, 倒找文本 (取文本中间 (命令, 6, 相减 (寻找文本 (命令, “<”, , 假), 5)), “\”, , 假))) ' 寻找命令中的路径
赋值 (局部_添加文件名, 分割文本 (取文本中间 (命令, 相加 (寻找文本 (命令, 局部_添加路径, , 假), 取文本长度 (局部_添加路径), 1), 相减 (寻找文本 (命令, “<”, , 假), 取文本长度 (局部_添加路径), 6)), “ ”, )) ' 寻找命令中的操作文件，支持批量文件
赋值 (局部_添加方向, 取文本右边 (取文本中间 (命令, 相加 (寻找文本 (命令, “<”, , 假), 1), 相减 (寻找文本 (命令, “>”, 相加 (寻找文本 (命令, “<”, , 假), 1), 假), 寻找文本 (命令, “<”, , 假), 1)), 1)) ' 寻找添加方向1为前，2为后，默认为尾部
赋值 (局部_添加内容, 取文本右边 (命令, 相减 (取文本长度 (命令), 寻找文本 (命令, “>”, 相加 (寻找文本 (命令, “<”, , 假), 1), 假)))) ' 寻找命令中要添加的内容
赋值 (局部_锁定内容, 取文本左边 (取文本中间 (命令, 相加 (寻找文本 (命令, “<”, , 假), 1), 相减 (寻找文本 (命令, “>”, 相加 (寻找文本 (命令, “<”, , 假), 1), 假), 寻找文本 (命令, “<”, , 假), 1)), 相减 (取文本长度 (取文本中间 (命令, 相加 (寻找文本 (命令, “<”, , 假), 1), 相减 (寻找文本 (命令, “>”, 相加 (寻找文本 (命令, “<”, , 假), 1), 假), 寻找文本 (命令, “<”, , 假), 1))), 2))) ' 寻找被锁定的内容

.计次循环首 (取数组成员数 (局部_添加文件名), 局部_计次)
    赋值 (局部_添加, 相加 (局部_添加路径, “\”, 局部_添加文件名 [局部_计次]))
    .判断开始 (等于 (寻找文件 (局部_添加, ), “”)) ' 判断操作的文件是否存在
        _启动窗口.加入文本 (., 相加 (#换行符, “系统找不到”, 局部_添加文件名 [局部_计次]))
    .默认
        赋值 (局部_文件内容, 到文本 (读入文件 (局部_添加))) ' 将被操作的文本文件的内容全部读入到“局部_文件内容”变量中
        .判断开始 (等于 (寻找文本 (局部_文件内容, 局部_锁定内容, , 假), -1)) ' 判断操作的文本文件中是否存在锁定的内容
            _启动窗口.加入文本 (., 相加 (#换行符, 局部_添加文件名 [局部_计次], “中无”, 局部_锁定内容))
        .判断 (等于 (局部_添加方向, “1”)) ' 判断添加到被锁定文本的前边
            赋值 (局部_修改后内容, 相加 (取文本左边 (局部_文件内容, 相减 (寻找文本 (局部_文件内容, 局部_锁定内容, , 假), 1)), 局部_修改后内容, 局部_添加内容, 取文本右边 (局部_文件内容, 相加 (相减 (取文本长度 (局部_文件内容), 寻找文本 (局部_文件内容, 局部_锁定内容, , 假)), 1))))
            写到文件 (局部_添加, 到字节集 (局部_修改后内容))
        .判断 (等于 (局部_添加方向, “2”)) ' 判断添加到被锁定文本的后边
            赋值 (局部_修改后内容, 相加 (取文本左边 (局部_文件内容, 相减 (相加 (寻找文本 (局部_文件内容, 局部_锁定内容, , 假), 取文本长度 (局部_锁定内容)), 1)), 局部_修改后内容, 局部_添加内容, 取文本右边 (局部_文件内容, 相加 (相减 (取文本长度 (局部_文件内容), 寻找文本 (局部_文件内容, 局部_锁定内容, , 假), 取文本长度 (局部_锁定内容)), 1))))
            写到文件 (局部_添加, 到字节集 (局部_修改后内容))
        .默认
            赋值 (局部_修改后内容, 相加 (局部_文件内容, 局部_锁定内容)) ' 方向不为“前或后”时，默认为尾部
            写到文件 (局部_添加, 到字节集 (局部_修改后内容))
        .判断结束
        
    .判断结束
    
.计次循环尾 ()

.子程序 修改_子程序, 空白型, , 
.局部变量 局部_替换路径, 文本型, , , 记录添加文件的路径
.局部变量 局部_替换文件名, 文本型, , "0", 记录要操作的文件的名称
.局部变量 局部_替换内容, 文本型, , , 记录要替换的内容
.局部变量 局部_锁定内容, 文本型, , , 记录被替换的内容
.局部变量 局部_锁定内容1, 文本型, , , 记录被替换的内容
.局部变量 局部_替换, 文本型, , , 记录被替换文件的路径及名称
.局部变量 局部_计次, 整数型, , , 
.局部变量 局部_文件内容, 文本型, , , 记录打开文本文件的内容
.局部变量 匿名局部变量_315, 空白型, , , 
.局部变量 局部_查寻路径, 文本型, , , 记录查寻文件的路径
.局部变量 局部_查寻文件名, 文本型, , "0", 记录要操作的文件的名称
.局部变量 局部_查寻内容, 文本型, , , 记录要查寻的内容
.局部变量 局部_查寻文件内容, 文本型, , , 记录被查寻文件的内容
.局部变量 局部_查寻, 文本型, , , 记录被查寻文件的路径及名称
.局部变量 局部_存在个数, 文本型, , "0", 记录被查寻文件中存在的文本个数

.判断开始 (等于 (取文本中间 (命令, 5, 4), “替换”))
    赋值 (局部_替换路径, 取文本中间 (命令, 9, 相减 (倒找文本 (取文本中间 (命令, 9, 相减 (寻找文本 (命令, “<”, , 假), 5)), “\”, , 假), 1))) ' 寻找命令中的路径
    赋值 (局部_替换文件名, 分割文本 (取文本中间 (命令, 相加 (10, 取文本长度 (局部_替换路径)), 相减 (寻找文本 (命令, “<”, , 假), 10, 取文本长度 (局部_替换路径))), “ ”, ))
     ' 寻找命令中的操作文件，支持批量文件
    赋值 (局部_替换内容, 取文本右边 (命令, 相减 (取文本长度 (命令), 寻找文本 (命令, “>”, 相加 (寻找文本 (命令, “<”, , 假), 1), 假)))) ' 寻找命令中要替换的内容
    赋值 (局部_锁定内容, 取文本左边 (取文本中间 (命令, 相加 (寻找文本 (命令, “<”, , 假), 1), 相减 (寻找文本 (命令, “>”, 相加 (寻找文本 (命令, “<”, , 假), 1), 假), 寻找文本 (命令, “<”, , 假), 1)), 取文本长度 (取文本中间 (命令, 相加 (寻找文本 (命令, “<”, , 假), 1), 相减 (寻找文本 (命令, “>”, 相加 (寻找文本 (命令, “<”, , 假), 1), 假), 寻找文本 (命令, “<”, , 假), 1))))) ' 寻找被锁定的内容
    
    .计次循环首 (取数组成员数 (局部_替换文件名), 局部_计次)
        赋值 (局部_替换, 相加 (局部_替换路径, “\”, 局部_替换文件名 [局部_计次]))
        .判断开始 (等于 (寻找文件 (局部_替换, ), “”)) ' '判断被替换的文本文件是否存在
            _启动窗口.加入文本 (., 相加 (#换行符, “系统找不到”, 局部_替换文件名 [局部_计次]))
        .默认
            赋值 (局部_文件内容, 到文本 (读入文件 (局部_替换)))
            赋值 (局部_锁定内容1, 取文本左边 (局部_锁定内容, 相加 (相减 (取文本长度 (局部_锁定内容), 倒找文本 (局部_锁定内容, “ ”, , 假)), 1)))
            .判断开始 (等于 (寻找文本 (局部_文件内容, 局部_锁定内容1, , 真), -1))
                _启动窗口.加入文本 (., 相加 (#换行符, 局部_替换文件名 [局部_计次], “中无”, 局部_锁定内容))
            .判断 (等于 (取文本右边 (局部_锁定内容, 1), “{]”)) ' 如果为X则替换X个
                赋值 (局部_文件内容, 子文本替换 (局部_文件内容, 局部_锁定内容1, 局部_替换内容, , 到数值 (取文本左边 (取文本右边 (局部_锁定内容, 2), 1)), 真)) ' 进行X个子文本替换
                写到文件 (局部_替换, 到字节集 (局部_文件内容)) ' 替换后写到文件
            .默认
                 ' 否则替换全部
                赋值 (局部_文件内容, 子文本替换 (局部_文件内容, 局部_锁定内容, 局部_替换内容, , , 真)) ' 进行所有的子文本替换
                写到文件 (局部_替换, 到字节集 (局部_文件内容)) ' 替换后写到文件
            .判断结束
            
        .判断结束
        
    .计次循环尾 ()
.判断 (等于 (取文本中间 (命令, 5, 4), “查寻”))
    赋值 (局部_查寻路径, 取文本中间 (命令, 9, 相减 (倒找文本 (取文本左边 (命令, 寻找文本 (命令, “>”, , 假)), “\”, , 假), 9)))
    赋值 (局部_查寻文件名, 分割文本 (取文本中间 (命令, 相加 (寻找文本 (命令, 局部_查寻路径, , 假), 取文本长度 (局部_查寻路径), 1), 相减 (寻找文本 (命令, “>”, , 假), 10, 取文本长度 (局部_查寻路径))), “ ”, ))
    赋值 (局部_查寻内容, 取文本右边 (命令, 相减 (取文本长度 (命令), 寻找文本 (命令, “>”, , 假))))
    
    .计次循环首 (取数组成员数 (局部_查寻文件名), 局部_计次) ' 开始查寻，被操作的文件
        赋值 (局部_查寻, 相加 (局部_查寻路径, “\”, 局部_查寻文件名 [局部_计次]))
        赋值 (局部_查寻文件内容, 到文本 (读入文件 (局部_查寻)))
        赋值 (局部_存在个数, 分割文本 (局部_查寻文件内容, 局部_查寻内容, )) ' 用分割文本命令分割出文件中存在被查寻文本的个数
        .判断开始 (不等于 (取数组成员数 (局部_存在个数), 0))
            .判断开始 (等于 (取文本右边 (局部_查寻文件内容, 取文本长度 (局部_查寻内容)), 局部_查寻内容))
                _启动窗口.加入文本 (., 相加 (#换行符, 局部_查寻文件名 [局部_计次], “中存在”, 到文本 (取数组成员数 (局部_存在个数)), “个”, 局部_查寻内容)) ' 显示被查寻文件中存在被查寻文本的个数
            .默认
                _启动窗口.加入文本 (., 相加 (#换行符, 局部_查寻文件名 [局部_计次], “中存在”, 到文本 (相减 (取数组成员数 (局部_存在个数), 1)), “个”, 局部_查寻内容))
            .判断结束
            
        .默认
            _启动窗口.加入文本 (., 相加 (#换行符, 局部_查寻文件名 [局部_计次], “中不存在”, 局部_查寻内容))
        .判断结束
        
    .计次循环尾 ()
.默认
    
.判断结束


.子程序 查寻_子程序, 空白型, , 
.局部变量 局部_查寻路径, 文本型, , , 记录查寻文件的路径
.局部变量 局部_查寻文件名, 文本型, , "0", 记录要操作的文件的名称
.局部变量 局部_计次, 整数型, , , 
.局部变量 局部_查寻, 文本型, , , 
.局部变量 局部_文件大小, 整数型, , , 记录取出文件 的大小
.局部变量 局部_文件数量, 整数型, , , 记录被查寻目录下的文件数量
.局部变量 局部_目录数量, 整数型, , , 记录被查寻目录下的目录数量
.局部变量 局部_寻找文件, 文本型, , , 
.局部变量 局部_磁盘总, 整数型, , , 计算磁盘总空间
.局部变量 局部_磁盘总空间, 文本型, , , 反回磁盘总空间
.局部变量 局部_磁盘剩, 整数型, , , 计算磁盘剩余空间
.局部变量 局部_磁盘剩余空间, 文本型, , , 反回磁盘剩余空间

赋值 (局部_查寻路径, 取文本中间 (命令, 9, 相减 (倒找文本 (命令, “\”, , 假), 9)))
赋值 (局部_查寻文件名, 分割文本 (取文本右边 (命令, 相减 (取文本长度 (命令), 倒找文本 (命令, “\”, , 假))), “ ”, ))
.判断开始 (等于 (取文本中间 (命令, 5, 4), “文件”)) ' 判断查寻类型为文件
    .计次循环首 (取数组成员数 (局部_查寻文件名), 局部_计次)
        赋值 (局部_查寻, 相加 (局部_查寻路径, “\”, 局部_查寻文件名 [局部_计次]))
        .判断开始 (等于 (寻找文件 (局部_查寻, ), “”))
            _启动窗口.加入文本 (., 相加 (#换行符, “系统找不到”, 局部_查寻文件名 [局部_计次]))
        .默认
            .判断开始 (等于 (寻找文件 (局部_查寻, ), “”)) ' 判断被查寻的文件是否存在
                _启动窗口.加入文本 (., 相加 (#换行符, 局部_查寻文件名 [局部_计次], “文件不存在”))
            .默认
                文件属性_子程序 (局部_查寻)
                文件大小_子程序 (局部_查寻, “文件”)
                时间换算_子程序 (局部_查寻)
                _启动窗口.加入文本 (., 相加 (#换行符, “文件：”, 局部_查寻文件名 [局部_计次], “  ”, 程序集_取文件时间, “   ”, 程序集_文件大小, “   ”, 程序集_文件属性, #换行符))
            .判断结束
            
        .判断结束
        
    .计次循环尾 ()
.判断 (等于 (取文本中间 (命令, 5, 4), “目录”)) ' 判断查寻类型为目录
    .计次循环首 (取数组成员数 (局部_查寻文件名), 局部_计次)
        赋值 (局部_目录数量, 0)
        赋值 (局部_文件数量, 0)
        赋值 (局部_查寻, 相加 (局部_查寻路径, “\”, 局部_查寻文件名 [局部_计次]))
        赋值 (局部_寻找文件, 寻找文件 (相加 (局部_查寻, “\*.*”), #子目录))
        _启动窗口.加入文本 (., 相加 (#换行符, “文件夹：”, 局部_查寻文件名 [局部_计次]))
        
        .判断开始 (等于 (寻找文件 (局部_查寻, #子目录), “”))
            _启动窗口.加入文本 (., 相加 (“   系统找不到”, 局部_查寻文件名 [局部_计次]))
        .默认
            赋值 (局部_寻找文件, 寻找文件 (相加 (局部_查寻, “\*.*”), #子目录))
            .判断循环首 (不等于 (局部_寻找文件, “”)) ' 查寻目录
                .如果真 (并且 (不等于 (局部_寻找文件, “.”), 不等于 (局部_寻找文件, “..”)))
                    赋值 (局部_目录数量, 相加 (局部_目录数量, 1))
                     ' 由于文件夹，无法取得其属性（除了“＃子目录”以外），所以在些不取
                    文件大小_子程序 (相加 (局部_查寻, “\”, 局部_寻找文件), “目录”)
                    时间换算_子程序 (相加 (局部_查寻, “\”, 局部_寻找文件))
                    _启动窗口.加入文本 (., 相加 (#换行符, “目录： ”, 局部_寻找文件, “   ”, 程序集_取文件时间, “   ”, 程序集_文件大小))
                .如果真结束
                赋值 (局部_寻找文件, 寻找文件 (#子目录))
            .判断循环尾 ()
            
            赋值 (局部_寻找文件, 寻找文件 (相加 (局部_查寻, “\*.*”), ))
            .判断循环首 (不等于 (局部_寻找文件, “”)) ' 查寻文件
                赋值 (局部_文件数量, 相加 (局部_文件数量, 1))
                文件属性_子程序 (相加 (局部_查寻, “\”, 局部_寻找文件))
                文件大小_子程序 (相加 (局部_查寻, “\”, 局部_寻找文件), “文件”)
                时间换算_子程序 (相加 (局部_查寻, “\”, 局部_寻找文件))
                _启动窗口.加入文本 (., 相加 (#换行符, “文件： ”, 局部_寻找文件, “   ”, 程序集_取文件时间, “   ”, 程序集_文件大小, “   ”, 程序集_文件属性))
                赋值 (局部_寻找文件, 寻找文件 ())
            .判断循环尾 ()
            _启动窗口.加入文本 (., 相加 (#换行符, “目录：”, 到文本 (局部_目录数量), “个”))
            _启动窗口.加入文本 (., 相加 (#换行符, “文件：”, 到文本 (局部_文件数量), “个”))
        .判断结束
        
    .计次循环尾 ()
    
    赋值 (局部_磁盘总, 取磁盘总空间 (取文本左边 (局部_查寻路径, 1))) ' 计算磁盘总空间
    .判断开始 (小于或等于 (相除 (局部_磁盘总, 1024), 1024)) ' 换算磁盘总空间
        赋值 (局部_磁盘总空间, 相加 (到文本 (四舍五入 (相除 (局部_磁盘总, 1024), 2)), “MB”))
    .判断 (小于或等于 (相除 (局部_磁盘总, 1024), 相乘 (1024, 1024)))
        赋值 (局部_磁盘总空间, 相加 (到文本 (四舍五入 (相除 (局部_磁盘总, 1024, 1024), 2)), “GB”))
    .默认
        
    .判断结束
    _启动窗口.加入文本 (., 相加 (#换行符, “磁盘”, 到大写 (取文本左边 (局部_查寻路径, 1)), “总空间：”, 局部_磁盘总空间)) ' 显示磁盘总空间
    赋值 (局部_磁盘剩, 取磁盘剩余空间 (取文本左边 (局部_查寻路径, 1))) ' 计算磁盘剩余空间
    .判断开始 (小于或等于 (相除 (局部_磁盘剩, 1024), 1024)) ' 换算磁盘剩余空间
        赋值 (局部_磁盘剩余空间, 相加 (到文本 (四舍五入 (相除 (局部_磁盘剩, 1024), 2)), “MB”))
    .判断 (小于或等于 (相除 (局部_磁盘剩, 1024), 相乘 (1024, 1024)))
        赋值 (局部_磁盘剩余空间, 相加 (到文本 (四舍五入 (相除 (局部_磁盘剩, 1024, 1024), 2)), “GB”))
    .默认
        
    .判断结束
    _启动窗口.加入文本 (., 相加 (#换行符, “磁盘”, 到大写 (取文本左边 (局部_查寻路径, 1)), “剩余空间：”, 局部_磁盘剩余空间)) ' 显示磁盘剩余空间
.默认
    
.判断结束


.子程序 文件属性_子程序, 空白型, , ‘转换文件属性
.参数 参数_查寻, 文本型, , 记录查寻文件的路径及名称

.判断开始 (等于 (取文件属性 (参数_查寻), 1)) ' '判断文件的属性
    赋值 (程序集_文件属性, “只读文件”)
.判断 (等于 (取文件属性 (参数_查寻), 2))
    赋值 (程序集_文件属性, “隐藏文件”)
.判断 (等于 (取文件属性 (参数_查寻), 4))
    赋值 (程序集_文件属性, “系统文件”)
.判断 (等于 (取文件属性 (参数_查寻), 32))
    赋值 (程序集_文件属性, “存档文件”)
.判断 (等于 (取文件属性 (参数_查寻), 3))
    赋值 (程序集_文件属性, “只读、隐藏文件”)
.判断 (等于 (取文件属性 (参数_查寻), 5))
    赋值 (程序集_文件属性, “只读、系统文件”)
.判断 (等于 (取文件属性 (参数_查寻), 33))
    赋值 (程序集_文件属性, “只读、隐藏文件”)
.判断 (等于 (取文件属性 (参数_查寻), 6))
    赋值 (程序集_文件属性, “隐藏、系统文件”)
.判断 (等于 (取文件属性 (参数_查寻), 34))
    赋值 (程序集_文件属性, “隐藏、系统文件”)
.判断 (等于 (取文件属性 (参数_查寻), 36))
    赋值 (程序集_文件属性, “存档、系统文件”)
.默认
    
.判断结束


.子程序 文件大小_子程序, 空白型, , ’计算文件大小子程序
.参数 参数_名称, 文本型, , 记录被查寻文件的路径及名称
.参数 参数_类型, 文本型, , 记录被查寻文件的类型（文件、目录）

.局部变量 局部_文件大小, 整数型, , , 
.局部变量 局部_文件目录, 文本型, , "0", 

赋值 (程序集_文件大小, “”)
.判断开始 (等于 (参数_类型, “文件”))
    赋值 (局部_文件大小, 取文件尺寸 (参数_名称))
    换算_子程序 (局部_文件大小) ' 将找得的文件大小（字节）转换为“KB”、“MB”、“GB”
.判断 (等于 (参数_类型, “目录”))
    清除数组 (局部_文件目录)
    赋值 (程序集_目录大小, 0)
    加入成员 (局部_文件目录, 参数_名称)
    大小文件_子程序 (局部_文件目录) ' 找出被查寻目录下的所有文件，计算大小（所有文件大小之和）
     ' 输出调试文本 (到文本 (程序集_目录大小))
    换算_子程序 (程序集_目录大小) ' 将找得的文件大小（字节）转换为“KB”、“MB”、“GB”
.默认
    
.判断结束


.子程序 换算_子程序, 空白型, , ‘换算文件大小子程序
.参数 局部_文件大小, 整数型, , 

.判断开始 (小于或等于 (相除 (局部_文件大小, 1024), 1024)) ' 将文件夹大小进行转换
    赋值 (程序集_文件大小, 相加 (到文本 (四舍五入 (相除 (局部_文件大小, 1024), 2)), “KB”))
.判断 (小于或等于 (相除 (局部_文件大小, 1024), 相乘 (1024, 1024)))
    赋值 (程序集_文件大小, 相加 (到文本 (四舍五入 (相除 (局部_文件大小, 1024, 1024), 2)), “MB”))
.判断 (小于或等于 (相除 (局部_文件大小, 1024), 相乘 (1024, 1024, 1024)))
    赋值 (程序集_文件大小, 相加 (到文本 (四舍五入 (相除 (局部_文件大小, 1024, 1024, 1024), 2)), “GB”))
.默认
    
.判断结束


.子程序 大小目录_子程序, 空白型, , ’取出被查寻目录下的所有子目录
.参数 参数_文件, 文本型, 数组, 

.局部变量 局部_目录, 文本型, , , 
.局部变量 局部_计次, 整数型, , , 
.局部变量 局部_目录数组, 文本型, , "0", 记录被查寻目录下的所有子目录

清除数组 (局部_目录数组)
.计次循环首 (取数组成员数 (参数_文件), 局部_计次)
    赋值 (局部_目录, 寻找文件 (相加 (参数_文件 [局部_计次], “\*.*”), #子目录))
    .判断循环首 (不等于 (局部_目录, “”))
        .如果真 (并且 (不等于 (局部_目录, “.”), 不等于 (局部_目录, “..”)))
            加入成员 (局部_目录数组, 相加 (参数_文件 [局部_计次], “\”, 局部_目录))
        .如果真结束
        赋值 (局部_目录, 寻找文件 (#子目录))
    .判断循环尾 ()
.计次循环尾 ()
.如果真 (不等于 (取数组成员数 (局部_目录数组), 0))
    大小文件_子程序 (局部_目录数组)
.如果真结束


.子程序 大小文件_子程序, 空白型, , ‘取出被查寻目录下的所有文件大小之和
.参数 参数_文件, 文本型, 数组, 

.局部变量 局部_文件, 文本型, , , 
.局部变量 局部_计次, 整数型, , , 

.计次循环首 (取数组成员数 (参数_文件), 局部_计次)
    赋值 (局部_文件, 寻找文件 (相加 (参数_文件 [局部_计次], “\*.*”), #子目录))
    .判断循环首 (不等于 (局部_文件, “”))
        赋值 (程序集_目录大小, 相加 (程序集_目录大小, 取文件尺寸 (相加 (参数_文件 [局部_计次], “\”, 局部_文件))))
        赋值 (局部_文件, 寻找文件 ())
    .判断循环尾 ()
.计次循环尾 ()
大小目录_子程序 (参数_文件)


.子程序 时间换算_子程序, 空白型, , ‘换算文件大小子程序
.参数 参数_文件, 文本型, , 

.局部变量 局部_取文件时间, 日期时间型, , , 
.局部变量 局部_年, 整数型, , , 
.局部变量 局部_月, 整数型, , , 
.局部变量 局部_日, 整数型, , , 
.局部变量 局部_时, 整数型, , , 
.局部变量 局部_分, 整数型, , , 
.局部变量 局部_秒, 整数型, , , 

赋值 (局部_取文件时间, 取文件时间 (参数_文件))
赋值 (局部_年, 取年份 (局部_取文件时间))
赋值 (局部_月, 取月份 (局部_取文件时间))
赋值 (局部_日, 取日 (局部_取文件时间))
赋值 (局部_时, 取小时 (局部_取文件时间))
赋值 (局部_分, 取分钟 (局部_取文件时间))
赋值 (局部_秒, 取秒 (局部_取文件时间))
赋值 (程序集_取文件时间, 相加 (到文本 (局部_年), “.”, 到文本 (局部_月), “.”, 到文本 (局部_日), “-”, 到文本 (局部_时), “:”, 到文本 (局部_分), “:”, 到文本 (局部_秒)))

.子程序 搜索_子程序, 空白型, , 
.局部变量 局部_搜索路径, 文本型, , , 记录搜索文件的路径
.局部变量 我的电脑, 文本型, , "0", 如果搜索“我的电脑”时，用来记录所有磁盘
.局部变量 局部_计次1, 整数型, , , 
.局部变量 局部_计次, 整数型, , , 
.局部变量 局部_计次2, 整数型, , , 
.局部变量 局部_计次3, 整数型, , , 
.局部变量 匿名局部变量_529, 空白型, , , 
.局部变量 局部_搜索, 文本型, , "0", 记录被搜索文件的路径及名称
.局部变量 局部_取得搜索名称, 文本型, , , 
.局部变量 局部_目录大小, 文本型, , , 
.局部变量 局部_系统信息, 未知类型0x30004, , , 在此主要用于取出系统的安装目录
.局部变量 局部_搜索我的文档的目录, 文本型, , , 取出我的文档中的所有子目录
.局部变量 局部_搜索我的文档, 文本型, , "0", 
.局部变量 匿名局部变量_621, 空白型, , , 
.局部变量 局部_搜索网上邻居, 文本型, , "0", 取出局域网内的共享目录或文件
.局部变量 局部_磁盘是否存在, 逻辑型, , , 

赋值 (局部_搜索路径, 取文本中间 (命令, 9, 相减 (倒找文本 (命令, “\”, , 假), 9)))
赋值 (程序集_搜索文件名, 分割文本 (取文本右边 (命令, 相减 (取文本长度 (命令), 倒找文本 (命令, “\”, , 假))), “ ”, ))
.判断开始 (等于 (局部_搜索路径, “我的电脑”)) ' '判断搜索地址为我的电脑
    赋值 (我的电脑, 未知支持库函数_5 (0)) ' 取得我的电脑下所有，盘符
    .计次循环首 (未知支持库函数_4 (0), 局部_计次)
        .计次循环首 (取数组成员数 (程序集_搜索文件名), 局部_计次1)
            搜索_子程序子程序 (局部_搜索, 我的电脑 [局部_计次])
        .计次循环尾 ()
    .计次循环尾 ()
.判断 (等于 (局部_搜索路径, “我的文档”)) ' 判断搜索地址为我的文档
     ' 以下取出，“我的文档”中的所有目录
    未知支持库函数_14 (局部_系统信息)
    赋值 (局部_搜索我的文档的目录, 寻找文件 (相加 (取文本左边 (局部_系统信息., 1), “:\Documents and Settings\dywt\My Documents\*.*”), #子目录))
    .判断循环首 (不等于 (局部_搜索我的文档的目录, “”))
        .如果真 (并且 (不等于 (局部_搜索我的文档的目录, “.”), 不等于 (局部_搜索我的文档的目录, “..”)))
            加入成员 (局部_搜索我的文档, 相加 (取文本左边 (局部_系统信息., 1), “:\Documents and Settings\dywt\My Documents\”, 局部_搜索我的文档的目录))
        .如果真结束
        赋值 (局部_搜索我的文档的目录, 寻找文件 (#子目录))
    .判断循环尾 ()
     ' 以下开始全面搜索“我的文档”
    .计次循环首 (取数组成员数 (局部_搜索我的文档), 局部_计次)
        搜索_子程序子程序 (局部_搜索, 局部_搜索我的文档 [局部_计次])
    .计次循环尾 ()
.判断 (等于 (局部_搜索路径, “网上邻居”)) ' 判断搜索地址为网上邻居，只能对共享文件进行搜索
    赋值 (局部_搜索网上邻居, 未知支持库函数_81 (1))
    .计次循环首 (取数组成员数 (程序集_搜索文件名), 局部_计次)
        .判断开始 (等于 (取文本中间 (命令, 5, 4), “目录”))
            _启动窗口.加入文本 (., 相加 (#换行符, “目录：”, 程序集_搜索文件名 [局部_计次]))
            .计次循环首 (取数组成员数 (局部_搜索网上邻居), 局部_计次1)
                .如果真 (等于 (取文本右边 (局部_搜索网上邻居 [局部_计次1], 相减 (取文本长度 (局部_搜索网上邻居 [局部_计次1]), 倒找文本 (局部_搜索网上邻居 [局部_计次1], “\”, , 假))), 程序集_搜索文件名 [局部_计次]))
                    _启动窗口.加入文本 (., 相加 (#换行符, “路径：”, 局部_搜索网上邻居 [局部_计次1]))
                .如果真结束
                
            .计次循环尾 ()
        .默认
            
        .判断结束
        
    .计次循环尾 ()
    
.判断 (等于 (取文本长度 (局部_搜索路径), 1)) ' 指定在某一盘下搜索
    赋值 (我的电脑, 未知支持库函数_5 (0)) ' 取得我的电脑下所有，盘符
    赋值 (局部_磁盘是否存在, 假)
    .计次循环首 (未知支持库函数_4 (0), 局部_计次)
        .如果真 (等于 (相加 (到大写 (局部_搜索路径), “:”), 我的电脑 [局部_计次]))
            赋值 (局部_磁盘是否存在, 真)
        .如果真结束
        
    .计次循环尾 ()
    .如果真 (等于 (局部_磁盘是否存在, 假))
        _启动窗口.加入文本 (., 相加 (#换行符, “系统找不到指定路径：”, 局部_搜索路径))
        返回 ()
    .如果真结束
    
    .计次循环首 (取数组成员数 (程序集_搜索文件名), 局部_计次1)
        清除数组 (局部_搜索)
        输出调试文本 (相加 (局部_搜索路径, “:”))
        搜索_子程序子程序 (局部_搜索, 相加 (局部_搜索路径, “:”))
    .计次循环尾 ()
    
.判断 (不等于 (寻找文件 (局部_搜索路径, #子目录), “”))
    
    .计次循环首 (取数组成员数 (程序集_搜索文件名), 局部_计次1)
        清除数组 (局部_搜索)
        搜索_子程序子程序 (局部_搜索, 局部_搜索路径)
    .计次循环尾 ()
    
.默认
    _启动窗口.加入文本 (., 相加 (#换行符, “系统找不到指定路径：”, 局部_搜索路径))
    返回 ()
.判断结束




.计次循环首 (取数组成员数 (程序集_搜索文件名), 局部_计次3)
    .判断开始 (等于 (取文本中间 (命令, 5, 4), “目录”)) ' 判断搜索类型为“目录”
        _启动窗口.加入文本 (., 相加 (#换行符, “目录：”, 程序集_搜索文件名 [局部_计次3]))
        .计次循环首 (取数组成员数 (程序集_搜索到的目录), 局部_计次2)
            赋值 (局部_取得搜索名称, 取文本右边 (程序集_搜索到的目录 [局部_计次2], 相减 (取文本长度 (程序集_搜索到的目录 [局部_计次2]), 倒找文本 (程序集_搜索到的目录 [局部_计次2], “\”, , 假))))
            .如果真 (等于 (局部_取得搜索名称, 程序集_搜索文件名 [局部_计次3]))
                时间换算_子程序 (程序集_搜索到的目录 [局部_计次2]) ' 由于“取文件时间”取出的是“XXXX年XX月XX日XX时XX分XX秒”在此换算为“XXXX.XX.XX-XX:XX:XX”
                 ' 在《易语言》中，取出的目录属性只是“子目录”，所以在此取不出目录的其它属性
                文件大小_子程序 (程序集_搜索到的目录 [局部_计次2], “目录”) ' 算出目录的大小
                _启动窗口.加入文本 (., 相加 (#换行符, “地址： ”, 程序集_搜索到的目录 [局部_计次2], “  ”, 程序集_取文件时间, “  ”, 程序集_文件大小))
            .如果真结束
            
        .计次循环尾 ()
    .默认
        
    .判断结束
    
    .判断开始 (等于 (取文本中间 (命令, 5, 4), “文件”)) ' 判断搜索类型为“文件”
        _启动窗口.加入文本 (., 相加 (#换行符, “文件：”, 程序集_搜索文件名 [局部_计次3]))
        .计次循环首 (取数组成员数 (程序集_搜索到的文件), 局部_计次2)
            赋值 (局部_取得搜索名称, 取文本右边 (程序集_搜索到的文件 [局部_计次2], 相减 (取文本长度 (程序集_搜索到的文件 [局部_计次2]), 倒找文本 (程序集_搜索到的文件 [局部_计次2], “\”, , 假))))
            .如果真 (不等于 (寻找文本 (局部_取得搜索名称, 程序集_搜索文件名 [局部_计次3], , 假), -1))
                换算_子程序 (取文件尺寸 (程序集_搜索到的文件 [局部_计次2])) ' 由于“取文件尺寸”取出的大小是字节，所以在此换算为“KB、MB、GB”
                文件属性_子程序 (程序集_搜索到的文件 [局部_计次2]) ' 取出文件属性，但“取文件属性”是整数型，在此换算成文件型如 :“32”就是“存档文件”
                时间换算_子程序 (程序集_搜索到的文件 [局部_计次2]) ' 由于“取文件时间”取出的是“XXXX年XX月XX日XX时XX分XX秒”在此换算为“XXXX.XX.XX-XX:XX:XX”
                _启动窗口.加入文本 (., 相加 (#换行符, “地址： ”, 程序集_搜索到的文件 [局部_计次2], “  ”, 程序集_取文件时间, “  ”, 程序集_文件大小, “  ”, 程序集_文件属性))
            .如果真结束
            
        .计次循环尾 ()
    .默认
        
    .判断结束
    _启动窗口.加入文本 (., #换行符)
.计次循环尾 ()



.子程序 搜索_子程序子程序, 空白型, , 用于判断搜索的是目录还是文件用调用子程序
.参数 参数_搜索, 文本型, 数组, 
.参数 参数_欲加入的数据, 文本型, , 

.判断开始 (等于 (取文本中间 (命令, 5, 4), “文件”))
    清除数组 (程序集_搜索到的文件)
    加入成员 (参数_搜索, 参数_欲加入的数据)
    搜索文件_子程序 (参数_搜索, “文件”)
.判断 (等于 (取文本中间 (命令, 5, 4), “目录”))
    清除数组 (程序集_搜索到的目录)
    加入成员 (参数_搜索, 参数_欲加入的数据)
    搜索文件_子程序 (参数_搜索, “目录”)
.默认
    
.判断结束


.子程序 搜索目录_子程序, 空白型, , 
.参数 参数_搜索, 文本型, 数组, 
.参数 参数_类型, 文本型, , 

.局部变量 局部_计次, 整数型, , , 
.局部变量 局部_计次1, 整数型, , , 
.局部变量 局部_搜索的目录, 文本型, , , 
.局部变量 局部_搜索子目录, 文本型, , "0", 

.计次循环首 (取数组成员数 (参数_搜索), 局部_计次)
    赋值 (局部_搜索的目录, 寻找文件 (相加 (参数_搜索 [局部_计次], “\*.*”), #子目录))
    .判断循环首 (不等于 (局部_搜索的目录, “”))
        .如果真 (并且 (不等于 (局部_搜索的目录, “.”), 不等于 (局部_搜索的目录, “..”)))
            .如果真 (等于 (参数_类型, “目录”))
                加入成员 (程序集_搜索到的目录, 相加 (参数_搜索 [局部_计次], “\”, 局部_搜索的目录))
            .如果真结束
            加入成员 (局部_搜索子目录, 相加 (参数_搜索 [局部_计次], “\”, 局部_搜索的目录))
        .如果真结束
        赋值 (局部_搜索的目录, 寻找文件 (#子目录))
    .判断循环尾 ()
.计次循环尾 ()
.如果真 (不等于 (取数组成员数 (局部_搜索子目录), 0))
    搜索文件_子程序 (局部_搜索子目录, 参数_类型)
.如果真结束


.子程序 搜索文件_子程序, 空白型, , 
.参数 搜索, 文本型, 数组, 
.参数 类型, 文本型, , 

.局部变量 局部_计次, 整数型, , , 
.局部变量 局部_计次1, 整数型, , , 
.局部变量 局部_搜索的文件, 文本型, , , 

.计次循环首 (取数组成员数 (搜索), 局部_计次)
    赋值 (局部_搜索的文件, 寻找文件 (相加 (搜索 [局部_计次], “\*.*”), ))
    .判断循环首 (不等于 (局部_搜索的文件, “”))
        .如果真 (等于 (类型, “文件”))
            加入成员 (程序集_搜索到的文件, 相加 (搜索 [局部_计次], “\”, 局部_搜索的文件))
        .如果真结束
        赋值 (局部_搜索的文件, 寻找文件 ())
    .判断循环尾 ()
.计次循环尾 ()
搜索目录_子程序 (搜索, 类型)

.子程序 压缩_子程序, 空白型, , 
.局部变量 局部_路径, 文本型, , , 记录被压缩文件的路径
.局部变量 局部_文件名, 文本型, , "0", 记录批量文件名
.局部变量 局部_名称, 文本型, , , 记录压缩成的文件名
.局部变量 局部_计次, 整数型, , , 
.局部变量 局部_逻辑值, 逻辑型, , , 

赋值 (局部_路径, 取文本中间 (命令, 5, 相减 (倒找文本 (取文本左边 (命令, 寻找文本 (命令, “>”, , 假)), “\”, , 假), 5)))
赋值 (局部_文件名, 分割文本 (取文本右边 (取文本左边 (命令, 相减 (寻找文本 (命令, “>”, , 假), 1)), 相减 (取文本长度 (取文本左边 (命令, 相减 (寻找文本 (命令, “>”, , 假), 1))), 倒找文本 (取文本左边 (命令, 相减 (寻找文本 (命令, “>”, , 假), 1)), “\”, , 假))), “ ”, ))
赋值 (局部_名称, 取文本右边 (命令, 相减 (取文本长度 (命令), 倒找文本 (命令, “>”, , 假))))

.判断开始 (等于 (取文本长度 (取文本右边 (取文本左边 (局部_路径, 相减 (取文本长度 (局部_路径), 倒找文本 (局部_路径, “\”, , 假))), 1)), 1))
    .如果真 (等于 (取磁盘总空间 (到大写 (取文本右边 (取文本左边 (局部_路径, 相减 (取文本长度 (局部_路径), 倒找文本 (局部_路径, “\”, , 假))), 1))), -1))
        _启动窗口.加入文本 (., 相加 (#换行符, “系统找不到指定磁盘：”, 局部_路径))
        返回 ()
    .如果真结束
    
.默认
    .如果真 (等于 (寻找文件 (取文本左边 (局部_路径, 相减 (取文本长度 (局部_路径), 倒找文本 (局部_路径, “\”, , 假))), #子目录), “”))
        _启动窗口.加入文本 (., 相加 (#换行符, “系统找不到指定目录：”, 局部_路径))
        返回 ()
    .如果真结束
    
.判断结束

赋值 (局部_逻辑值, 假)
.判断开始 (小于或等于 (取数组成员数 (局部_文件名), 1)) ' 只压缩一个文件时
    _启动窗口.未知支持库函数_0 (., 相加 (局部_路径, “\”, 局部_文件名 [1]), 局部_名称)
.默认
    创建目录 (局部_名称) ' 压缩批量文件时
    .计次循环首 (取数组成员数 (局部_文件名), 局部_计次) ' 批量压缩时，必须将所有文件复制到指定目录，压缩指定目录
        .判断开始 (不等于 (寻找文件 (相加 (局部_路径, “\”, 局部_文件名 [局部_计次]), ), “”))
            赋值 (命令, 相加 (“复制文件”, 局部_路径, “\”, 局部_文件名 [局部_计次], “>”, 局部_名称))
            复制_子程序 ()
            赋值 (局部_逻辑值, 真)
        .判断 (不等于 (寻找文件 (相加 (局部_路径, “\”, 局部_文件名 [局部_计次]), #子目录), “”))
            赋值 (命令, 相加 (“复制目录”, 局部_路径, “\”, 局部_文件名 [局部_计次], “>”, 局部_名称))
            赋值 (局部_逻辑值, 真)
            复制_子程序 ()
        .默认
            _启动窗口.加入文本 (., 相加 (#换行符, “系统找不到：”, 局部_文件名 [局部_计次]))
            
        .判断结束
        
    .计次循环尾 ()
    .如果真 (等于 (局部_逻辑值, 真)) ' 判断是否复制成功
        _启动窗口.未知支持库函数_0 (., 局部_名称, 相加 (局部_名称, “.zip”))
    .如果真结束
    删除目录 (局部_名称) ' 无论压缩成功与否，都要将事先创建的目录删除
    
.判断结束


.子程序 改名_子程序, 空白型, , 
.局部变量 局部_目录1层, 文本型, , "0", 分割不同路径下的路径和所有文件
.局部变量 局部_路径, 文本型, , , 取出路径
.局部变量 局部_文件名, 文本型, , "0", 分割同一路径下的所有文件名
.局部变量 局部_更名为, 文本型, , , 取出更改成的文件名
.局部变量 局部_计次, 整数型, , , 
.局部变量 局部_计次1, 整数型, , , 
.局部变量 局部_重复文件名, 整数型, , , 当存在重复文件名时，在被改文件名后，扩展名前按顺序加上数字
.局部变量 局部_重复目录名, 整数型, , , 
.局部变量 局部_更名, 文本型, , , 合成被改名的文件或目录路径及名称
.局部变量 局部_更名成功, 文本型, , , 合成更改成的文件或目录路径及名称

 ' '更名e:\a.txt b b.txt*c:\e e.txt j.png*d:\f m.bmp c.edb>sd
赋值 (局部_目录1层, 分割文本 (取文本中间 (命令, 5, 相减 (倒找文本 (命令, “>”, , 假), 5)), “*”, ))
赋值 (局部_更名为, 取文本右边 (命令, 相减 (取文本长度 (命令), 倒找文本 (命令, “>”, , 假))))

.计次循环首 (取数组成员数 (局部_目录1层), 局部_计次)
    赋值 (局部_路径, 取文本左边 (局部_目录1层 [局部_计次], 相减 (倒找文本 (局部_目录1层 [局部_计次], “\”, , 假), 1))) ' 取得被改文件名的路径
    赋值 (局部_文件名, 分割文本 (取文本右边 (局部_目录1层 [局部_计次], 相减 (取文本长度 (局部_目录1层 [局部_计次]), 倒找文本 (局部_目录1层 [局部_计次], “\”, , 假))), “ ”, )) ' 取得被改所有文件的名称
    
    赋值 (局部_重复文件名, 0)
    赋值 (局部_重复目录名, 0)
    .计次循环首 (取数组成员数 (局部_文件名), 局部_计次1)
        赋值 (局部_更名, 相加 (局部_路径, “\”, 局部_文件名 [局部_计次1]))
        .判断开始 (并且 (等于 (寻找文件 (局部_更名, ), “”), 等于 (寻找文件 (局部_更名, #子目录), “”))) ' 判断被改文件或目录是否存在
            _启动窗口.加入文本 (., 相加 (#换行符, “系统找不到：”, 局部_更名))
        .判断 (不等于 (寻找文本 (局部_文件名 [局部_计次1], “.”, , 假), -1)) ' 判断此文件是文件还是目录
            赋值 (局部_更名成功, 相加 (局部_路径, “\”, 局部_更名为, 取文本右边 (局部_文件名 [局部_计次1], 相加 (相减 (取文本长度 (局部_文件名 [局部_计次1]), 倒找文本 (局部_文件名 [局部_计次1], “.”, , 假)), 1))))
        .默认
            赋值 (局部_更名成功, 相加 (局部_路径, “\”, 局部_更名为))
        .判断结束
        
        
        .判断开始 (不等于 (寻找文件 (局部_更名成功, #子目录), “”)) ' 判断当存在同名目录时
            赋值 (局部_重复目录名, 相加 (局部_重复目录名, 1))
            .判断开始 (小于 (局部_重复目录名, 10))
                文件更名 (局部_更名, 相加 (局部_更名成功, “0”, 到文本 (局部_重复目录名)))
            .默认
                文件更名 (局部_更名, 相加 (局部_更名成功, 到文本 (局部_重复目录名)))
            .判断结束
            
        .判断 (不等于 (寻找文件 (局部_更名成功, ), “”)) ' 判断当存在同名文件时
            赋值 (局部_重复文件名, 相加 (局部_重复文件名, 1))
            .判断开始 (小于 (局部_重复文件名, 10))
                赋值 (局部_更名成功, 相加 (局部_路径, “\”, 局部_更名为, “0”, 到文本 (局部_重复文件名), 取文本右边 (局部_文件名 [局部_计次1], 相加 (相减 (取文本长度 (局部_文件名 [局部_计次1]), 倒找文本 (局部_文件名 [局部_计次1], “.”, , 假)), 1))))
            .默认
                赋值 (局部_更名成功, 相加 (局部_路径, “\”, 局部_更名为, 到文本 (局部_重复文件名), 取文本右边 (局部_文件名 [局部_计次1], 相加 (相减 (取文本长度 (局部_文件名 [局部_计次1]), 倒找文本 (局部_文件名 [局部_计次1], “.”, , 假)), 1))))
            .判断结束
            文件更名 (局部_更名, 局部_更名成功)
        .默认
            文件更名 (局部_更名, 局部_更名成功) ' 判断当不存在同名目录或文件时
        .判断结束
        
        
    .计次循环尾 ()
.计次循环尾 ()

.子程序 改属性_子程序, 空白型, , 
.局部变量 局部_目录1层, 文本型, , "0", 分割不同路径下的路径和所有文件
.局部变量 局部_路径, 文本型, , , 取出路径
.局部变量 局部_文件名, 文本型, , "0", 分割同一路径下的所有文件名
.局部变量 局部_置为, 文本型, , , 取出更改成的文件名
.局部变量 局部_更名, 文本型, , , 
.局部变量 局部_计次, 整数型, , , 
.局部变量 局部_计次1, 整数型, , , 

 ' '置属性e:\a.txt b b.txt*c:\e e.txt j.png*d:\f m.bmp c.edb>sd
赋值 (局部_目录1层, 分割文本 (取文本中间 (命令, 7, 相减 (倒找文本 (命令, “>”, , 假), 7)), “*”, ))
赋值 (局部_置为, 取文本右边 (命令, 相减 (取文本长度 (命令), 倒找文本 (命令, “>”, , 假))))
.如果真 (并且 (不等于 (局部_置为, “只读”), 不等于 (局部_置为, “隐藏”), 不等于 (局部_置为, “存档”), 不等于 (局部_置为, “只读、隐藏”), 不等于 (局部_置为, “隐藏、只读”), 不等于 (局部_置为, “只读、存档”), 不等于 (局部_置为, “存档、只读”), 不等于 (局部_置为, “隐藏、存档”), 不等于 (局部_置为, “存档、隐藏”))) ' 判断给定属性是否正确
    _启动窗口.加入文本 (., 相加 (#换行符, “指定属性错误，属性只能为：”, “只读\”, “隐藏\”, “存档\”, “只读、隐藏\”, “隐藏、只读\”, “只读、存档\”, “存档、只读\”, “隐藏、存档\”, “存档、隐藏”))
    返回 ()
.如果真结束

.计次循环首 (取数组成员数 (局部_目录1层), 局部_计次)
    赋值 (局部_路径, 取文本左边 (局部_目录1层 [局部_计次], 相减 (倒找文本 (局部_目录1层 [局部_计次], “\”, , 假), 1))) ' 取得被置属性文件的路径
    赋值 (局部_文件名, 分割文本 (取文本右边 (局部_目录1层 [局部_计次], 相减 (取文本长度 (局部_目录1层 [局部_计次]), 倒找文本 (局部_目录1层 [局部_计次], “\”, , 假))), “ ”, )) ' 取得被置所有文件的名称
    .计次循环首 (取数组成员数 (局部_文件名), 局部_计次1)
        赋值 (局部_更名, 相加 (局部_路径, “\”, 局部_文件名 [局部_计次1]))
        .判断开始 (并且 (等于 (寻找文件 (局部_更名, ), “”), 等于 (寻找文件 (局部_更名, #子目录), “”))) ' 判断被置属性文件或目录是否存在
            _启动窗口.加入文本 (., 相加 (#换行符, “系统找不到：”, 局部_更名))
        .判断 (等于 (局部_置为, “只读”))
            置文件属性 (局部_更名, 1)
        .判断 (等于 (局部_置为, “隐藏”))
            置文件属性 (局部_更名, 2)
        .判断 (等于 (局部_置为, “存档”))
            置文件属性 (局部_更名, 32)
        .判断 (或者 (等于 (局部_置为, “只读、隐藏”), 等于 (局部_置为, “隐藏、只读”)))
            置文件属性 (局部_更名, 3)
        .判断 (或者 (等于 (局部_置为, “只读、存档”), 等于 (局部_置为, “存档、只读”)))
            置文件属性 (局部_更名, 33)
        .判断 (或者 (等于 (局部_置为, “隐藏、存档”), 等于 (局部_置为, “存档、隐藏”)))
            置文件属性 (局部_更名, 34)
        .默认
            
        .判断结束
        
    .计次循环尾 ()
.计次循环尾 ()

.程序集 应用接口_程序集, , , 

.程序集变量 程序集_缓存大小, 文本型, , , 
.程序集变量 程序集_容量大小, 文本型, , , 
.子程序 CPU_子程序, 空白型, , 
.局部变量 CPU信息, 未知类型0x30003, , , 

未知支持库函数_17 (CPU信息)
_启动窗口.加入文本 (., 相加 (#换行符, “名称：      ”, CPU信息.))
_启动窗口.加入文本 (., 相加 (#换行符, “制造商：     ”, CPU信息.))
_启动窗口.加入文本 (., 相加 (#换行符, “序列号：     ”, CPU信息.))
_启动窗口.加入文本 (., 相加 (#换行符, “时钟频率：    ”, 到文本 (CPU信息.), “MHz”))
_启动窗口.加入文本 (., 相加 (#换行符, “数据宽度：    ”, 到文本 (CPU信息.), “位”))
接口换算_子程序 (CPU信息.)
_启动窗口.加入文本 (., 相加 (#换行符, “一级缓存大小： ”, 程序集_缓存大小))
接口换算_子程序 (CPU信息.)
_启动窗口.加入文本 (., 相加 (#换行符, “二级缓存大小： ”, 程序集_缓存大小))


.子程序 接口换算_子程序, 空白型, , 
.参数 参数_文件大小, 整数型, , 

.判断开始 (小于或等于 (相除 (参数_文件大小, 1024), 1024))
    赋值 (程序集_缓存大小, 相加 (到文本 (四舍五入 (相除 (参数_文件大小, 1024), 2)), “MB”))
.判断 (小于或等于 (相除 (参数_文件大小, 1024), 相乘 (1024, 1024)))
    赋值 (程序集_缓存大小, 相加 (到文本 (四舍五入 (相除 (参数_文件大小, 1024, 1024), 2)), “GB”))
.默认
    
.判断结束


.子程序 硬盘_子程序, 空白型, , 
.局部变量 硬盘信息, 未知类型0x30007, , , 
.局部变量 局部_容量, 文本型, , , 

未知支持库函数_3 (硬盘信息, )
_启动窗口.加入文本 (., 相加 (#换行符, “型号：      ”, 硬盘信息.))
M换算_子程序 (硬盘信息.)
_启动窗口.加入文本 (., 相加 (#换行符, “容量：       ”, 程序集_容量大小))
_启动窗口.加入文本 (., 相加 (#换行符, “版本号：     ”, 硬盘信息.))
_启动窗口.加入文本 (., 相加 (#换行符, “序列号：     ”, 硬盘信息.))
_启动窗口.加入文本 (., 相加 (#换行符, “磁头数：     ”, 到文本 (硬盘信息.)))
_启动窗口.加入文本 (., 相加 (#换行符, “柱面数：     ”, 到文本 (硬盘信息.)))
M换算_子程序 (硬盘信息.)
_启动窗口.加入文本 (., 相加 (#换行符, “缓存大小：    ”, 程序集_容量大小))
_启动窗口.加入文本 (., 相加 (#换行符, “每磁道扇区数： ”, 到文本 (硬盘信息.)))


.子程序 驱动器_子程序, 空白型, , 
.局部变量 驱动器, 文本型, , "0", 
.局部变量 局部_计次, 整数型, , , 

赋值 (驱动器, 未知支持库函数_5 ())
_启动窗口.加入文本 (., #换行符)
.计次循环首 (取数组成员数 (驱动器), 局部_计次)
    _启动窗口.加入文本 (., 相加 (驱动器 [局部_计次], “  ”))
.计次循环尾 ()

.子程序 BIOS_子程序, 空白型, , 
.局部变量 BIOS信息, 未知类型0x30006, , , 

未知支持库函数_15 (BIOS信息)
_启动窗口.加入文本 (., 相加 (#换行符, “名称：        ”, BIOS信息.))
_启动窗口.加入文本 (., 相加 (#换行符, “日期：        ”, BIOS信息.))
_启动窗口.加入文本 (., 相加 (#换行符, “制造商：      ”, BIOS信息.))
_启动窗口.加入文本 (., 相加 (#换行符, “序列号：      ”, BIOS信息.))
_启动窗口.加入文本 (., 相加 (#换行符, “OEM信息：     ”, BIOS信息.))
_启动窗口.加入文本 (., 相加 (#换行符, “版权信息：    ”, BIOS信息.))

.子程序 进程_子程序, 空白型, , 
.局部变量 进程信息, 未知类型0x30009, , "0", 
.局部变量 局部_计次, 整数型, , , 

赋值 (进程信息, 未知支持库函数_10 ())
_启动窗口.加入文本 (., 相加 (#换行符, “进程名称――”, “线程数”, “――进程标识符”, “――线程优先权”, “――父进程标识符”, “――父进程标识符”))
.计次循环首 (取数组成员数 (进程信息), 局部_计次)
    _启动窗口.加入文本 (., 相加 (#换行符, 进程信息 [局部_计次], ))
    _启动窗口.加入文本 (., 相加 (“    ”, 到文本 (进程信息 [局部_计次], )))
    _启动窗口.加入文本 (., 相加 (“        ”, 到文本 (进程信息 [局部_计次], )))
    _启动窗口.加入文本 (., 相加 (“        ”, 到文本 (进程信息 [局部_计次], )))
    _启动窗口.加入文本 (., 相加 (“        ”, 到文本 (进程信息 [局部_计次], )))
    _启动窗口.加入文本 (., 相加 (“        ”, 到文本 (进程信息 [局部_计次], )))
.计次循环尾 ()

.子程序 系统_子程序, 空白型, , 
.局部变量 系统信息, 未知类型0x30004, , , 

未知支持库函数_14 (系统信息)
_启动窗口.加入文本 (., 相加 (#换行符, “版本：        ”, 系统信息.))
_启动窗口.加入文本 (., 相加 (#换行符, “代码：        ”, 到文本 (系统信息.)))
_启动窗口.加入文本 (., 相加 (#换行符, “国家：        ”, 系统信息.))
_启动窗口.加入文本 (., 相加 (#换行符, “时区：        ”, 系统信息.))
_启动窗口.加入文本 (., 相加 (#换行符, “操作系统：    ”, 系统信息.))
_启动窗口.加入文本 (., 相加 (#换行符, “建立号码：    ”, 到文本 (系统信息.)))
_启动窗口.加入文本 (., 相加 (#换行符, “当前用户：    ”, 系统信息.))
_启动窗口.加入文本 (., 相加 (#换行符, “系统目录：    ”, 系统信息.))
_启动窗口.加入文本 (., 相加 (#换行符, “本地语言：    ”, 系统信息.))
_启动窗口.加入文本 (., 相加 (#换行符, “国家代码：    ”, 到文本 (系统信息.)))
_启动窗口.加入文本 (., 相加 (#换行符, “O货币符号：   ”, 系统信息.))
_启动窗口.加入文本 (., 相加 (#换行符, “日期格式：    ”, 系统信息.))
_启动窗口.加入文本 (., 相加 (#换行符, “时间格式：    ”, 系统信息.))
_启动窗口.加入文本 (., 相加 (#换行符, “最后服务包：  ”, 系统信息.))
_启动窗口.加入文本 (., 相加 (#换行符, “系统安装目录： ”, 系统信息.))


.子程序 网卡_子程序, 空白型, , 
.局部变量 网卡信息, 未知类型0x30008, , "0", 
.局部变量 局部_计次, 整数型, , , 

赋值 (网卡信息, 未知支持库函数_42 ())
.计次循环首 (取数组成员数 (网卡信息), 局部_计次)
    _启动窗口.加入文本 (., 相加 (#换行符, “序号：           ”, 到文本 (网卡信息 [局部_计次], )))
    _启动窗口.加入文本 (., 相加 (#换行符, “IP地址：         ”, 网卡信息 [局部_计次], ))
    _启动窗口.加入文本 (., 相加 (#换行符, “网卡名称：       ”, 网卡信息 [局部_计次], ))
    _启动窗口.加入文本 (., 相加 (#换行符, “物理地址：       ”, 网卡信息 [局部_计次], ))
    _启动窗口.加入文本 (., 相加 (#换行符, “子网掩码：       ”, 网卡信息 [局部_计次], ))
    _启动窗口.加入文本 (., 相加 (#换行符, “默认网关)：      ”, 网卡信息 [局部_计次], ))
    _启动窗口.加入文本 (., 相加 (#换行符, “Wins服务器地址： ”, 网卡信息 [局部_计次], ))
    _启动窗口.加入文本 (., 相加 (#换行符, “DHCP服务器地址： ”, 网卡信息 [局部_计次], ))
.计次循环尾 ()


.子程序 终止_子程序, 空白型, , 
.局部变量 局部_名称, 文本型, , "0", 记录欲终止进程的名称
.局部变量 进程信息, 未知类型0x30009, , "0", 
.局部变量 局部_计次, 整数型, , , 

 ' 赋值 (进程信息, 未知支持库函数_10 ())
 ' '局部_名称 ＝ 分割文本 (取文本右边 (命令, 取文本长度 (命令) － 4), “ ”, )
 ' .计次循环首 (取数组成员数 (进程信息), 局部_计次)
     ' .如果真 (等于 (局部_名称, 到文本 (进程信息. [局部_计次])))
         ' 未知支持库函数_11 (进程信息. [局部_计次])
     ' .如果真结束
     ' 
 ' .计次循环尾 ()


.子程序 字体_子程序, 空白型, , 
.局部变量 局部_字体, 文本型, , "0", 
.局部变量 局部_计次, 整数型, , , 

赋值 (局部_字体, 未知支持库函数_28 ())
.判断开始 (等于 (求余数 (取数组成员数 (局部_字体), 2), 0))
    .计次循环首 (相除 (取数组成员数 (局部_字体), 2), 局部_计次)
        _启动窗口.加入文本 (., 相加 (#换行符, 局部_字体 [局部_计次], “     ”, 局部_字体 [相加 (局部_计次, 1)], “     ”, 局部_字体 [相加 (局部_计次, 2)], “     ”, 局部_字体 [相加 (局部_计次, 3)]))
    .计次循环尾 ()
.默认
    .计次循环首 (相除 (取数组成员数 (局部_字体), 3), 局部_计次)
        _启动窗口.加入文本 (., 相加 (#换行符, 局部_字体 [局部_计次], “  ”, 局部_字体 [相加 (局部_计次, 1)], “  ”, 局部_字体 [相加 (局部_计次, 2)]))
    .计次循环尾 ()
    
.判断结束


.子程序 文件信息_子程序, 空白型, , 
.局部变量 局部_名称, 文本型, , "0", 
.局部变量 局部_计次, 整数型, , , 
.局部变量 文件版本信息, 未知类型0x30005, , , 

赋值 (局部_名称, 分割文本 (取文本右边 (命令, 相减 (取文本长度 (命令), 8)), “*”, ))
.计次循环首 (取数组成员数 (局部_名称), 局部_计次)
    _启动窗口.加入文本 (., 相加 (#换行符, 局部_名称 [局部_计次]))
    未知支持库函数_16 (局部_名称 [局部_计次], 文件版本信息)
    _启动窗口.加入文本 (., 相加 (#换行符, “文件版本：”, 文件版本信息.))
    _启动窗口.加入文本 (., 相加 (#换行符, “文件描述：”, 文件版本信息.))
    _启动窗口.加入文本 (., 相加 (#换行符, “内部名称：”, 文件版本信息.))
    _启动窗口.加入文本 (., 相加 (#换行符, “公司名称：”, 文件版本信息.))
    _启动窗口.加入文本 (., 相加 (#换行符, “合法版权：”, 文件版本信息.))
    _启动窗口.加入文本 (., 相加 (#换行符, “合法商标：”, 文件版本信息.))
    _启动窗口.加入文本 (., 相加 (#换行符, “源文件名：”, 文件版本信息.))
    _启动窗口.加入文本 (., 相加 (#换行符, “产品名称：”, 文件版本信息.))
    _启动窗口.加入文本 (., 相加 (#换行符, “产品版本：”, 文件版本信息.))
    _启动窗口.加入文本 (., 相加 (#换行符, “语言：”, 文件版本信息.))
    _启动窗口.加入文本 (., 相加 (#换行符, “备注：”, 文件版本信息.))
.计次循环尾 ()


.子程序 内存_子程序, 空白型, , 
M换算_子程序 (未知支持库函数_19 (0))
_启动窗口.加入文本 (., 相加 (#换行符, “总物理内存：  ”, 程序集_容量大小))
M换算_子程序 (未知支持库函数_19 (1))
_启动窗口.加入文本 (., 相加 (#换行符, “可用物理内存：”, 程序集_容量大小))
M换算_子程序 (未知支持库函数_19 (2))
_启动窗口.加入文本 (., 相加 (#换行符, “总虚拟内存：  ”, 程序集_容量大小))
M换算_子程序 (未知支持库函数_19 (3))
_启动窗口.加入文本 (., 相加 (#换行符, “可用虚拟内存：”, 程序集_容量大小))
M换算_子程序 (未知支持库函数_19 (4))
_启动窗口.加入文本 (., 相加 (#换行符, “总页面文件：  ”, 程序集_容量大小))
M换算_子程序 (未知支持库函数_19 (5))
_启动窗口.加入文本 (., 相加 (#换行符, “可用页面文件：”, 程序集_容量大小))

.子程序 M换算_子程序, 空白型, , 
.参数 参数_大小, 整数型, , 

.判断开始 (大于或等于 (相除 (参数_大小, 1024), 1))
    赋值 (程序集_容量大小, 相加 (到文本 (四舍五入 (相除 (参数_大小, 1024), 2)), “GB”))
.默认
    赋值 (程序集_容量大小, 相加 (到文本 (参数_大小), “MB”))
.判断结束


.子程序 声卡_子程序, 空白型, , 
_启动窗口.加入文本 (., 相加 (#换行符, “声卡名称：”, 未知支持库函数_20 ()))

.子程序 远程_子程序, 空白型, , 
.局部变量 局部_IP, 文本型, , "0", 
.局部变量 局部_计次, 空白型, , , 

赋值 (局部_IP, 分割文本 (取文本右边 (命令, 相减 (取文本长度 (命令), 4)), “ ”, ))
.计次循环首 (取数组成员数 (局部_IP), 局部_计次)
    _启动窗口.加入文本 (., 相加 (#换行符, 局部_IP [局部_计次]))
    _启动窗口.加入文本 (., 相加 (#换行符, 局部_IP [局部_计次], “网卡物理地址：”, 未知支持库函数_45 (局部_IP [局部_计次])))
    _启动窗口.加入文本 (., 相加 (#换行符, 局部_IP [局部_计次], “机器名：”, 未知支持库函数_46 (局部_IP [局部_计次])))
.计次循环尾 ()

.子程序 网络_子程序, 空白型, , 
.局部变量 局部_网络类型, 文本型, , "0", 
.局部变量 局部_网络工作组, 文本型, , "0", 
.局部变量 局部_计算机, 文本型, , "0", 
.局部变量 局部_计次, 整数型, , , 

赋值 (局部_网络类型, 未知支持库函数_49 ())
赋值 (局部_网络工作组, 未知支持库函数_50 ())
赋值 (局部_计算机, 未知支持库函数_51 ())
_启动窗口.加入文本 (., 相加 (#换行符, “网络类型：”)) ' 取网络类型
.计次循环首 (取数组成员数 (局部_网络类型), 局部_计次)
    _启动窗口.加入文本 (., 相加 (#换行符, 局部_网络类型 [局部_计次]))
.计次循环尾 ()
_启动窗口.加入文本 (., 相加 (#换行符, #换行符, “网络工作组：”)) ' 取网络工作组
.计次循环首 (取数组成员数 (局部_网络工作组), 局部_计次)
    _启动窗口.加入文本 (., 相加 (#换行符, 局部_网络工作组 [局部_计次]))
.计次循环尾 ()
_启动窗口.加入文本 (., 相加 (#换行符, #换行符, “网络计算机：”)) ' 取网络计算机
.计次循环首 (取数组成员数 (局部_计算机), 局部_计次)
    _启动窗口.加入文本 (., 相加 (#换行符, 局部_计算机 [局部_计次]))
.计次循环尾 ()


.子程序 互联网_子程序, 空白型, , 
.局部变量 局部_是否与互联网连接, 文本型, , , 
.局部变量 局部_是否登入网络, 文本型, , , 

.如果真 (等于 (未知支持库函数_52 (), 真))
    赋值 (局部_是否与互联网连接, “已与互联网连接”)
.如果真结束

.如果真 (等于 (未知支持库函数_53 (), 真))
    赋值 (局部_是否登入网络, “已登入网络”)
.如果真结束
_启动窗口.加入文本 (., 相加 (#换行符, 局部_是否与互联网连接, “     ”, 局部_是否登入网络))

.子程序 共享资源_子程序, 空白型, , 
.局部变量 局部_计算机名, 文本型, , "0", 
.局部变量 局部_计次, 整数型, , , 
.局部变量 局部_计次1, 整数型, , , 
.局部变量 局部_共享资源, 文本型, , "0", 

赋值 (局部_计算机名, 分割文本 (取文本右边 (命令, 相减 (取文本长度 (命令), 8)), “ ”, ))
.判断开始 (等于 (取数组成员数 (局部_计算机名), 0)) ' 无指定机器名称时，则默认为全部共享资源
    赋值 (局部_共享资源, 未知支持库函数_81 (0))
    .计次循环首 (取数组成员数 (局部_共享资源), 局部_计次)
        _启动窗口.加入文本 (., 相加 (#换行符, 局部_共享资源 [局部_计次]))
    .计次循环尾 ()
.默认
    .计次循环首 (取数组成员数 (局部_计算机名), 局部_计次) ' 有指定机器名称时，则执照指定机器名称进行
        赋值 (局部_共享资源, 未知支持库函数_81 (局部_计算机名 [局部_计次], 0))
        _启动窗口.加入文本 (., 相加 (#换行符, 局部_计算机名 [局部_计次]))
        .计次循环首 (取数组成员数 (局部_共享资源), 局部_计次1)
            _启动窗口.加入文本 (., 相加 (#换行符, 局部_共享资源 [局部_计次1]))
        .计次循环尾 ()
    .计次循环尾 ()
.判断结束


.子程序 发送_子程序, 空白型, , 
.局部变量 局部_机器名, 文本型, , "0", 
.局部变量 局部_信息, 文本型, , , 
.局部变量 局部_计次, 整数型, , , 

赋值 (局部_机器名, 分割文本 (取文本中间 (命令, 5, 相减 (寻找文本 (命令, “>”, , 假), 5)), “ ”, ))
赋值 (局部_信息, 取文本右边 (命令, 相减 (取文本长度 (命令), 寻找文本 (命令, “>”, , 假))))
.计次循环首 (取数组成员数 (局部_机器名), 局部_计次)
    未知支持库函数_80 (局部_机器名 [局部_计次], 局部_信息, )
.计次循环尾 ()

.子程序 IP_子程序, 空白型, , 
.局部变量 局部_IP, 文本型, , "0", 
.局部变量 局部_计次, 整数型, , , 

赋值 (局部_IP, 分割文本 (取文本右边 (命令, 相减 (取文本长度 (命令), 2)), “ ”, ))
.计次循环首 (取数组成员数 (局部_IP), 局部_计次)
    _启动窗口.加入文本 (., 相加 (#换行符, 局部_IP [局部_计次], “：”, 未知支持库函数_47 (局部_IP [局部_计次])))
.计次循环尾 ()


.子程序 端口检测_子程序, 空白型, , 
.局部变量 局部_检测, 文本型, , "0", 
.局部变量 局部_端口, 文本型, , , 
.局部变量 局部_IP, 文本型, , , 
.局部变量 局部_计次, 整数型, , , 

赋值 (局部_检测, 分割文本 (取文本右边 (命令, 相减 (取文本长度 (命令), 8)), “*”, ))
.计次循环首 (取数组成员数 (局部_检测), 局部_计次)
    赋值 (局部_端口, 取文本左边 (局部_检测 [局部_计次], 寻找文本 (局部_检测 [局部_计次], “ ”, , 假)))
    赋值 (局部_IP, 取文本右边 (局部_检测 [局部_计次], 相减 (取文本长度 (局部_检测 [局部_计次]), 倒找文本 (局部_检测 [局部_计次], “ ”, , 假))))
    输出调试文本 (相加 (局部_端口, “     ”, 局部_IP))
    .判断开始 (并且 (等于 (局部_IP, “”), 不等于 (局部_端口, “”))) ' IP为空时则检测本机
        .如果真 (等于 (未知支持库函数_54 (到数值 (局部_端口), ), 真))
            _启动窗口.加入文本 (., 相加 (#换行符, “本机端口已开放”))
            跳出循环 ()
        .如果真结束
        
    .判断 (并且 (不等于 (局部_IP, “”), 不等于 (局部_端口, “”))) ' 当IP和端口都不为空时，正常检测
        .判断开始 (等于 (未知支持库函数_54 (到数值 (局部_端口), 局部_IP), 真))
            _启动窗口.加入文本 (., 相加 (#换行符, 局部_IP, “端口已开放”))
        .默认
            _启动窗口.加入文本 (., 相加 (#换行符, 局部_IP, “IP或端口错误”))
        .判断结束
        
    .默认
        _启动窗口.加入文本 (., 相加 (#换行符, 局部_IP, “IP或端口错误”))
    .判断结束
    
.计次循环尾 ()

.子程序 当前显示模式_子程序, 空白型, , 
.局部变量 局部_显示模式信息, 未知类型0x3000A, , , 

赋值 (局部_显示模式信息, 未知支持库函数_68 ())
_启动窗口.加入文本 (., 相加 (#换行符, “宽度：    ”, 到文本 (局部_显示模式信息.), “像素”))
_启动窗口.加入文本 (., 相加 (#换行符, “高度：    ”, 到文本 (局部_显示模式信息.), “像素”))
_启动窗口.加入文本 (., 相加 (#换行符, “颜色位数：”, 到文本 (局部_显示模式信息.), “位”))
_启动窗口.加入文本 (., 相加 (#换行符, “刷新频率：”, 到文本 (局部_显示模式信息.), “赫兹”))


.子程序 显示模式_子程序, 空白型, , 
.局部变量 局部_显示模式信息, 未知类型0x3000A, , "0", 
.局部变量 局部_计次, 整数型, , , 

赋值 (局部_显示模式信息, 未知支持库函数_67 ())
_启动窗口.加入文本 (., 相加 (#换行符, “宽度：(像素)  ”, “高度：(像素)  ”, “颜色位数：(位)  ”, “刷新频率：(赫兹)”))
.计次循环首 (取数组成员数 (局部_显示模式信息), 局部_计次)
    _启动窗口.加入文本 (., 相加 (#换行符, 到文本 (局部_显示模式信息 [局部_计次], ), “          ”, 到文本 (局部_显示模式信息 [局部_计次], ), “          ”, 到文本 (局部_显示模式信息 [局部_计次], ), “             ”, 到文本 (局部_显示模式信息 [局部_计次], )))
.计次循环尾 ()

.子程序 分辨率_子程序, 空白型, , 
.局部变量 局部_参数, 文本型, , "4", 

赋值 (局部_参数, 分割文本 (取文本右边 (命令, 相减 (取文本长度 (命令), 6)), “ ”, ))
.判断开始 (等于 (取数组成员数 (局部_参数), 4))
    未知支持库函数_69 (到数值 (局部_参数 [1]), 到数值 (局部_参数 [2]), 到数值 (局部_参数 [3]), 到数值 (局部_参数 [4]))
.默认
    _启动窗口.加入文本 (., 相加 (#换行符, “分辨率命令错误”))
.判断结束


.子程序 透明度_子程序, 空白型, , 
.局部变量 局部_参数, 文本型, , "2", 

赋值 (局部_参数, 分割文本 (取文本右边 (命令, 相减 (取文本长度 (命令), 6)), “ ”, ))
.判断开始 (等于 (取数组成员数 (局部_参数), 2))
    未知支持库函数_66 (到数值 (局部_参数 [1]), 到数值 (局部_参数 [2]))
.默认
    _启动窗口.加入文本 (., 相加 (#换行符, “透明度命令错误”))
.判断结束


.程序集 系统辅助窗口_程序集, , , 

.子程序 系统辅助_子程序, 空白型, , 
.局部变量 局部_系统安装目录, 文本型, , , 
.局部变量 系统信息, 未知类型0x30004, , , 

未知支持库函数_14 (系统信息)
赋值 (局部_系统安装目录, 系统信息.)
.判断开始 (或者 (等于 (命令, “计算器”), 等于 (命令, “calc”), 等于 (命令, “calc.exe”)))
    运行 (“calc.exe”, 假, )
.判断 (或者 (等于 (命令, “cmd”), 等于 (命令, “cmd.exe”)))
    运行 (“cmd.exe”, 假, )
.判断 (或者 (等于 (命令, “compmgmt.msc”), 等于 (命令, “计算机管理”), 等于 (命令, “compmgmt”)))
    未知支持库函数_6 (相加 (局部_系统安装目录, “\system32\compmgmt.msc”), , )
.判断 (或者 (等于 (命令, “accwiz.exe”), 等于 (命令, “协助功能向导”), 等于 (命令, “accwiz”)))
    运行 (“accwiz.exe”, 假, )
.判断 (或者 (等于 (命令, “msconfig”), 等于 (命令, “系统配置实用程序”), 等于 (命令, “msconfig.exe”)))
    未知支持库函数_6 (相加 (局部_系统安装目录, “\pchealth\helpctr\binaries\msconfig.exe”), , )
.判断 (或者 (等于 (取文本左边 (命令, 1), “e”), 等于 (取文本左边 (命令, 1), “E”)))
    未知支持库函数_56 (取文本右边 (命令, 相减 (取文本长度 (命令), 2)))
.判断 (或者 (等于 (命令, “regedit”), 等于 (命令, “注册表”), 等于 (命令, “regedit.exe”)))
    运行 (“regedit”, 假, )
.判断 (或者 (等于 (命令, “gpedit.msc”), 等于 (命令, “gpedit”), 等于 (命令, “组策略”)))
    未知支持库函数_6 (相加 (局部_系统安装目录, “\system32\gpedit.msc”), , )
.判断 (或者 (等于 (命令, “mmc”), 等于 (命令, “msc.exe”), 等于 (命令, “控制台”)))
    运行 (“mmc.exe”, 假, )
.判断 (或者 (等于 (命令, “wiaacmgr”), 等于 (命令, “wiaacmgr.exe”), 等于 (命令, “外部向导”)))
    运行 (“wiaacmgr.exe”, 假, )
.判断 (或者 (等于 (命令, “syskey”), 等于 (命令, “syskey.exe”), 等于 (命令, “密码”)))
    运行 (“syskey.exe”, 假, )
.判断 (或者 (等于 (命令, “sigverif.exe”), 等于 (命令, “sigverif”), 等于 (命令, “文件签名认证”), 等于 (命令, “文件签名”), 等于 (命令, “签名认证”)))
    运行 (“sigverif.exe”, 假, )
.判断 (或者 (等于 (命令, “setup.exe”), 等于 (命令, “setup”), 等于 (命令, “安装程序”)))
    运行 (“setup.exe”, 假, )
.判断 (或者 (等于 (命令, “services.msc”), 等于 (命令, “services”), 等于 (命令, “服务”)))
    未知支持库函数_6 (相加 (局部_系统安装目录, “\system32\services.msc”), , )
.判断 (或者 (等于 (命令, “secpol.msc”), 等于 (命令, “secpol”), 等于 (命令, “本地安全设置”), 等于 (命令, “安全设置”), 等于 (命令, “安全”)))
    未知支持库函数_6 (相加 (局部_系统安装目录, “\system32\secpol.msc”), , )
.判断 (或者 (等于 (命令, “rtcshare.exe”), 等于 (命令, “rtcshare”), 等于 (命令, “共享会话”), 等于 (命令, “会话”)))
    运行 (“rtcshare.exe”, 假, )
.判断 (或者 (等于 (命令, “rsop.msc”), 等于 (命令, “rsop”), 等于 (命令, “策略的结果集”)))
    未知支持库函数_6 (相加 (局部_系统安装目录, “\system32\rsop.msc”), , )
.判断 (或者 (等于 (命令, “rasphone.exe”), 等于 (命令, “rasphone”), 等于 (命令, “通讯薄”)))
    运行 (“rasphone.exe”, 假, )
.判断 (或者 (等于 (命令, “RACMGR32.EXE”), 等于 (命令, “RACMGR32”), 等于 (命令, “远程自动化连接管理器”), 等于 (命令, “远程自动化连接”), 等于 (命令, “远程自动化管理”), 等于 (命令, “远程自动化管理器”), 等于 (命令, “远程连接管理器”)))
    运行 (“RACMGR32.EXE”, 假, )
.判断 (或者 (等于 (命令, “perfmon.exe”), 等于 (命令, “perfmon”), 等于 (命令, “性能”)))
    运行 (“perfmon.exe”, 假, )
.判断 (或者 (等于 (命令, “packager.exe”), 等于 (命令, “packager”), 等于 (命令, “对象包装程序”), 等于 (命令, “对象包装”), 等于 (命令, “包装”)))
    运行 (“packager.exe”, 假, )
.判断 (或者 (等于 (命令, “odbcad32.exe”), 等于 (命令, “odbcad32”), 等于 (命令, “ODBC”), 等于 (命令, “odbc”), 等于 (命令, “ODBC”), 等于 (命令, “数据源管理”), 等于 (命令, “数据源”)))
    运行 (“odbcad32.exe”, 假, )
.判断 (或者 (等于 (命令, “ntsd.exe”), 等于 (命令, “ntsd”)))
    运行 (“ntsd.exe”, 假, )
.判断 (或者 (等于 (命令, “ntbackup.exe”), 等于 (命令, “ntbackup”), 等于 (命令, “备份或还原向导”), 等于 (命令, “备份向导”), 等于 (命令, “还原向导”), 等于 (命令, “备份”), 等于 (命令, “还原”), 等于 (命令, “备份或还原”)))
    运行 (“ntbackup.exe”, 假, )
.判断 (或者 (等于 (命令, “ntmsmgr.msc”), 等于 (命令, “ntmsmgr”), 等于 (命令, “可移动存储”), 等于 (命令, “移动存储”)))
    未知支持库函数_6 (相加 (局部_系统安装目录, “\system32\ntmsmgr.msc”), , )
.判断 (或者 (等于 (命令, “ntmsoprq.msc”), 等于 (命令, “ntmsoprq”), 等于 (命令, “可移动存储管理员操作请求”), 等于 (命令, “可移动存储管理员操作”), 等于 (命令, “可移动存储管理员”), 等于 (命令, “可移动存储操作请求”), 等于 (命令, “可移动存储请求”), 等于 (命令, “可移动存储管理员请求”), 等于 (命令, “移动存储管理员操作请求”), 等于 (命令, “移动存储管理员操作”), 等于 (命令, “移动存储管理员”), 等于 (命令, “移动存储操作请求”), 等于 (命令, “移动存储请求”), 等于 (命令, “移动存储管理员请求”)))
    未知支持库函数_6 (相加 (局部_系统安装目录, “\system32\ntmsoprq.msc”), , )
.默认
    
.判断结束


.程序集 自身配置_程序集, , , 

.程序集变量 程序集_颜色, 整数型, , , 
.子程序 自身配置_子程序, 空白型, , 
.局部变量 局部_颜色, 文本型, , , 

.判断开始 (等于 (取文本中间 (命令, 3, 8), “背景颜色”))
    颜色_子程序 (取文本右边 (命令, 相减 (取文本长度 (命令), 11)), “背景”)
.判断 (等于 (取文本中间 (命令, 3, 8), “字体颜色”))
    颜色_子程序 (取文本右边 (命令, 相减 (取文本长度 (命令), 11)), “字体”)
.判断 (等于 (取文本中间 (命令, 3, 8), “字体大小”))
    赋值 (_启动窗口..字体.字体大小, 到数值 (取文本右边 (命令, 相减 (取文本长度 (命令), 11))))
.判断 (等于 (取文本中间 (命令, 3, 10), “窗口透明度”))
    未知支持库函数_66 (_启动窗口.取窗口句柄 (), 到数值 (取文本右边 (命令, 相减 (取文本长度 (命令), 13))))
.判断 (等于 (取文本中间 (命令, 3, 4), “加粗”))
    赋值 (_启动窗口..字体.加粗, 真)
.判断 (等于 (取文本中间 (命令, 3, 8), “取消加粗”))
    赋值 (_启动窗口..字体.加粗, 假)
.判断 (等于 (取文本中间 (命令, 3, 4), “默认”))
    赋值 (_启动窗口..字体.加粗, 真)
    赋值 (_启动窗口..字体.字体大小, 10)
    赋值 (_启动窗口..文本颜色, #绿色)
    赋值 (_启动窗口..背景颜色, #黑色)
.判断 (等于 (取文本中间 (命令, 3, 8), “无滚动条”))
    赋值 (_启动窗口..滚动条, 0)
.判断 (等于 (取文本中间 (命令, 3, 10), “横向滚动条”))
    赋值 (_启动窗口..滚动条, 1)
.判断 (等于 (取文本中间 (命令, 3, 10), “纵向滚动条”))
    赋值 (_启动窗口..滚动条, 2)
.判断 (等于 (取文本中间 (命令, 3, 10), “全滚动条”))
    赋值 (_启动窗口..滚动条, 3)
.默认
    
.判断结束


.子程序 颜色_子程序, 空白型, , 
.参数 参数_颜色, 文本型, , 
.参数 参数_对象, 文本型, , 

.判断开始 (等于 (参数_颜色, “蓝色”))
    .判断开始 (等于 (参数_对象, “背景”))
        赋值 (_启动窗口..背景颜色, #蓝色)
    .判断 (等于 (参数_对象, “字体”))
        赋值 (_启动窗口..文本颜色, #蓝色)
    .默认
        
    .判断结束
    
.判断 (等于 (参数_颜色, “红色”))
    .判断开始 (等于 (参数_对象, “背景”))
        赋值 (_启动窗口..背景颜色, #红色)
    .判断 (等于 (参数_对象, “字体”))
        赋值 (_启动窗口..文本颜色, #红色)
    .默认
        
    .判断结束
    
.判断 (等于 (参数_颜色, “绿色”))
    .判断开始 (等于 (参数_对象, “背景”))
        赋值 (_启动窗口..背景颜色, #绿色)
    .判断 (等于 (参数_对象, “字体”))
        赋值 (_启动窗口..文本颜色, #绿色)
    .默认
        
    .判断结束
    
.判断 (等于 (参数_颜色, “黑色”))
    .判断开始 (等于 (参数_对象, “背景”))
        赋值 (_启动窗口..背景颜色, #黑色)
    .判断 (等于 (参数_对象, “字体”))
        赋值 (_启动窗口..文本颜色, #黑色)
    .默认
        
    .判断结束
    
.判断 (等于 (参数_颜色, “白色”))
    .判断开始 (等于 (参数_对象, “背景”))
        赋值 (_启动窗口..背景颜色, #白色)
    .判断 (等于 (参数_对象, “字体”))
        赋值 (_启动窗口..文本颜色, #白色)
    .默认
        
    .判断结束
    
.判断 (等于 (参数_颜色, “紫色”))
    .判断开始 (等于 (参数_对象, “背景”))
        赋值 (_启动窗口..背景颜色, #紫色)
    .判断 (等于 (参数_对象, “字体”))
        赋值 (_启动窗口..文本颜色, #紫色)
    .默认
        
    .判断结束
    
.判断 (等于 (参数_颜色, “黄色”))
    .判断开始 (等于 (参数_对象, “背景”))
        赋值 (_启动窗口..背景颜色, #黄色)
    .判断 (等于 (参数_对象, “字体”))
        赋值 (_启动窗口..文本颜色, #黄色)
    .默认
        
    .判断结束
    
.默认
    
.判断结束


.程序集 关于_程序集, , , 

.子程序 关于_子程序, 空白型, , 
_启动窗口.加入文本 (., 相加 (#换行符, “版本：1.0测试”))
_启动窗口.加入文本 (., 相加 (#换行符, “名称：纯文件电脑操作”))
_启动窗口.加入文本 (., 相加 (#换行符, “作者：changcheng”))
_启动窗口.加入文本 (., 相加 (#换行符, “OICQ：252796718”))
_启动窗口.加入文本 (., 相加 (#换行符, “邮件：gwchangcheng@yahoo.com.cn”))
_启动窗口.加入文本 (., 相加 (#换行符, “长城工作室版权所有”))



 ' 不属于任何一个程序集、类模块的函数：
