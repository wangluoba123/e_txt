 ' 文件类型：Windows窗口程序

 ' 程序名称：QQ在线状态查询器
 ' 程序描述：QQ online status query!
@备注:
QQ online status query!
 ' 程序作者：Lollipop
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：Copyright (C) 2007-2009 Lollipop
 ' 版本号：1.0
 ' 创建号：0.0



.图片 online, " ' 已保存到：D:\易语言学习\Data\斩月_QQ在线状态查询.e\online", , 
.常量 十六进制, "4", 隐藏, 
.常量 八进制, "3", 隐藏, 
.常量 二进制, "1", 隐藏, 
.常量 十进制, "10", 隐藏, 
.常量 IMAGE_BITMAP, "0", 隐藏, 位图
.常量 IMAGE_ICON, "1", 隐藏, 图标
.常量 IMAGE_CURSOR, "2", 隐藏, 指针
.常量 LR_LOADFROMFILE, "16", 隐藏, 
.常量 HKEY_CLASSES_ROOT, "-2147483648", 隐藏, 
.常量 HKEY_CURRENT_USER, "-2147483647", 隐藏, 
.常量 HKEY_LOCAL_MACHINE, "-2147483646", 隐藏, 
.常量 HKEY_USERS, "-2147483645", 隐藏, 
.常量 HKEY_PERFORMANCE_DATA, "-2147483644", 隐藏, 
.常量 HKEY_CURRENT_CONFIG, "-2147483643", 隐藏, 
.常量 HKEY_DYN_DATA, "-2147483642", 隐藏, 
.常量 编辑文档, "1", 隐藏, 
.常量 浏览文件夹, "2", 隐藏, 
.常量 寻找文件, "3", 隐藏, 
.常量 打开文件, "4", 隐藏, 
.常量 打印文档, "5", 隐藏, 
.常量 窗口初始最大化, "16777216", 隐藏, 
.常量 窗口单线边框, "8388608", 隐藏, 
.常量 窗口对话框类型边框, "4194304", 隐藏, 
.常量 窗口带垂直滚动条, "2097152", 隐藏, 
.常量 窗口带水平滚动条, "1048576", 隐藏, 
.常量 窗口初始可见, "268435456", 隐藏, 
.常量 窗口初始禁止, "134217728", 隐藏, 
.常量 窗口初始最小化, "536870912", 隐藏, 
.常量 窗口有最大化按钮, "65536", 隐藏, 
.常量 窗口有最小化按钮, "131072", 隐藏, 
.常量 窗口普通折叠式窗口, "0", 隐藏, 
.常量 窗口带系统菜单, "524288", 隐藏, 
.常量 窗口可以拖动调大小, "262144", 隐藏, 
.常量 窗口子窗口, "1073741824", 隐藏, 
.常量 窗口扩展_总在顶层, "8", 隐藏, 
.常量 菜单_浅灰禁止, "1", 隐藏, MF_GRAYED
.常量 菜单_分隔线, "2048", 隐藏, MF_SEPARATOR
.常量 菜单_文本, "0", 隐藏, MF_STRING
.常量 菜单_子菜单, "16", 隐藏, MF_POPUP
.常量 菜单_位图, "4", 隐藏, MF_BITMAP
.常量 工具条_标准按钮, "0", 隐藏, TBSTYLE_BUTTON
.常量 工具条_复选按钮, "2", 隐藏, TBSTYLE_CHECK
.常量 工具条_分隔线, "1", 隐藏, TBSTYLE_SEP
.常量 工具条_按钮允许, "4", 隐藏, TBSTATE_ENABLED
.常量 工具条_按下状态, "2", 隐藏, TBSTATE_PRESSED
.常量 工具条_下拉按钮, "128", 隐藏, TBSTYLE_EX_DOUBLEBUFFER
.常量 常用_普通按钮, "0", 隐藏, 
.常量 常用_默认按钮, "1", 隐藏, 
.常量 常用_自动复选框, "3", 隐藏, 
.常量 常用_自动3态复选框, "5", 隐藏, 
.常量 常用_自动单选钮, "7", 隐藏, 
.常量 常用_分组框, "8", 隐藏, 
.常量 大图标列表, "0", 隐藏, 
.常量 小图标列表, "1", 隐藏, 
.常量 普通列表框, "2", 隐藏, 
.常量 报表列表框, "3", 隐藏, 
.常量 普通列表框2, "4", 隐藏, 
.常量 静态_居中文本, "20", 隐藏, 
.常量 静态_左对齐文本, "21", 隐藏, 
.常量 静态_右对齐文本, "22", 隐藏, 
.常量 静态_图片框, "23", 隐藏, 
.常量 静态_横线, "24", 隐藏, 
.常量 静态_坚线, "25", 隐藏, 
.常量 类型_单行编辑框, "32", 隐藏, 
.常量 类型_多行编辑框, "33", 隐藏, 
.常量 类型_可编辑组合框, "36", 隐藏, 
.常量 类型_不可编辑组合框, "37", 隐藏, 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 5 0 系统核心支持库



 ' 所需要的模块
 ' HTTP访问模块_斩月版 C:\Documents and Settings\Administrator\桌面\斩月_QQ在线状态查询\Http访问模块_斩月.ec
 ' ZCL_核库函数1.01 C:\Documents and Settings\Administrator\桌面\斩月_QQ在线状态查询\ZCL_核库函数1.01.ec
 ' ZCL_控件类库1.01 C:\Documents and Settings\Administrator\桌面\斩月_QQ在线状态查询\ZCL_控件类库1.01.ec


数据类型 低层平台信息系统信息, 公开, SYSTEM_INFO
    .成员 dwOemID, 整数型, , , 
    .成员 dwPageSize, 整数型, , , 
    .成员 lpMinimumApplicationAddress, 整数型, , , 
    .成员 lpMaximumApplicationAddress, 整数型, , , 
    .成员 dwActiveProcessorMask, 整数型, , , 
    .成员 dwNumberOrfProcessors, 整数型, , , 
    .成员 dwProcessorType, 整数型, , , 
    .成员 dwAllocationGranularity, 整数型, , , 
    .成员 dwReserved, 整数型, , , 

数据类型 POINTAPI, 公开, 坐标
    .成员 横向位置, 整数型, , , x，横向位置
    .成员 纵向位置, 整数型, , , y，纵向位置

数据类型 SYSTEMTIME, 公开, 
    .成员 wYear, 短整数型, , , 
    .成员 wMonth, 短整数型, , , 
    .成员 wDayOfWeek, 短整数型, , , 
    .成员 wDay, 短整数型, , , 
    .成员 wHour, 短整数型, , , 
    .成员 wMinute, 短整数型, , , 
    .成员 wSecond, 短整数型, , , 
    .成员 wMilliseconds, 短整数型, , , 

数据类型 RECT, 公开, 
    .成员 左, 整数型, , , 
    .成员 顶, 整数型, , , 
    .成员 右, 整数型, , , 
    .成员 底, 整数型, , , 

数据类型 MSG, 公开, 
    .成员 hwnd, 整数型, , , 
    .成员 message, 整数型, , , 
    .成员 wParam, 整数型, , , 
    .成员 lParam, 整数型, , , 
    .成员 time, 整数型, , , 
    .成员 pt, POINTAPI, , , 

数据类型 进程结构, 公开, 
    .成员 结构长度, 整数型, , , 296字节
    .成员 引用计数, 整数型, , , 
    .成员 进程ID, 整数型, , , 
    .成员 默认堆ID, 整数型, , , 
    .成员 模块ID, 整数型, , , 
    .成员 线程数, 整数型, , , 
    .成员 父进程ID, 整数型, , , 
    .成员 线程优先级, 整数型, , , 
    .成员 保留, 整数型, , , 
    .成员 进程名, 字节型, , "256", 

数据类型 模块_字体信息, 公开, 
    .成员 字体名称, 文本型, , , 
    .成员 字体大小, 整数型, , , 
    .成员 字体颜色, 整数型, , , 
    .成员 字体类型, 整数型, , , 
    .成员 是否斜体, 整数型, , , 1为真,0为假
    .成员 是否下划线, 整数型, , , 1为真,0为假


.DLL命令 GetModuleFileName, 整数型, "", "GetModuleFileNameA", 公开, 
    .参数 hModule, 整数型, , 
    .参数 lpFileName, 文本型, , 
    .参数 nSize, 整数型, , 

.DLL命令 _取整型指针, 整数型, "", "lstrcpyn", 公开, 
    .参数 目的指针, 整数型, 传址, 
    .参数 源指针, 整数型, 传址, 
    .参数 复制长度, 整数型, , 0

.DLL命令 _取短整型指针, 整数型, "", "lstrcpyn", 公开, 
    .参数 目的指针, 短整数型, 传址, 
    .参数 源指针, 短整数型, 传址, 
    .参数 复制长度, 整数型, , 0

.DLL命令 _取字节指针, 整数型, "", "lstrcpyn", 公开, 
    .参数 目的指针, 字节型, 传址, 
    .参数 源指针, 字节型, 传址, 
    .参数 复制长度, 整数型, , 0

.DLL命令 _取双精度指针, 整数型, "", "lstrcpyn", 公开, 
    .参数 目的指针, 字节型, 传址, 
    .参数 源指针, 字节型, 传址, 
    .参数 复制长度, 整数型, , 0

.DLL命令 _取子程序指针, 整数型, "", "lstrcpyn", 公开, 返回整型子程序
    .参数 目的指针, 子程序指针, , 
    .参数 源指针, 子程序指针, , 
    .参数 复制长度, 整数型, , 0

.DLL命令 _取字节集指针, 整数型, "", "lstrcpyn", 公开, 
    .参数 目的指针, 字节集, 传址, 
    .参数 源指针, 字节集, 传址, 
    .参数 复制长度, 整数型, , 0

.DLL命令 _取文本指针, 整数型, "", "lstrcpyn", 公开, 
    .参数 目的指针, 文本型, 传址, 
    .参数 源指针, 文本型, 传址, 
    .参数 复制长度, 整数型, , 0

.DLL命令 lstrcpy, 整数型, "", "lstrcpy", 公开, _复制文本
    .参数 目的指针, 文本型, 传址, 
    .参数 源指针, 字节集, 传址, 

.DLL命令 GetCommandLine, 文本型, "", "GetCommandLineA", 公开, 

.DLL命令 HeapAlloc, 整数型, "", "HeapAlloc", 公开, 
    .参数 hHeap, 整数型, , 
    .参数 dwFlags, 整数型, , 
    .参数 dwBytes, 整数型, , 

.DLL命令 GetProcessHeap, 整数型, "", "GetProcessHeap", 公开, 

.DLL命令 HeapFree, 逻辑型, "", "HeapFree", 公开, 
    .参数 hHeap, 整数型, , 
    .参数 dwFlags, 整数型, , 
    .参数 lpMem, 整数型, , 

.DLL命令 ReadProcessMemory, 整数型, "", "ReadProcessMemory", 公开, 读内存指针整型内容
    .参数 hProcess, 整数型, , 
    .参数 lpBaseAddress, 整数型, , 
    .参数 lpBuffer, 整数型, , 
    .参数 nSize, 整数型, , 
    .参数 lpNumberOfBytesRead, 整数型, , 

.DLL命令 GetCurrentProcess, 整数型, "", "GetCurrentProcess", 公开, API_取当前进程句柄

.DLL命令 MoveMemory, 整数型, "", "RtlMoveMemory", 公开, API_复制内存
    .参数 Destination, 整数型, , 
    .参数 Source, 整数型, , 
    .参数 Length, 整数型, , 

.DLL命令 StrToInt64Ex, 整数型, "shlwapi.dll", "StrToInt64ExA", 公开, 进制文本转整数_64-bit integer
    .参数 pszString, 文本型, , 
    .参数 dwFlags, 整数型, , 
    .参数 piRet, 整数型, 传址, 

.DLL命令 GetComputerName, 整数型, "kernel32.dll", "GetComputerNameA", 公开, 取计算机名_TRUE（非零）表示成功，否则返回零。
    .参数 字串缓冲区, 文本型, , lpBuffer，随同计算机名载入的字串缓冲区
    .参数 缓冲区长度, 整数型, 传址, nSize，缓冲区的长度。这个变量随同返回计算机名的实际长度载入

.DLL命令 GetUserName, 整数型, "advapi32.dll", "GetUserNameA", 公开, 取用户名,TRUE（非零）表示成功，否则返回零。
    .参数 字串缓冲区, 文本型, , lpBuffer，随同用户名载入的字串缓冲区
    .参数 缓冲区长度, 整数型, 传址, nSize，缓冲区的长度。这个变量随同返回用户名的实际长度载入

.DLL命令 MessageBox, 整数型, "user32.dll", "MessageBoxA", 公开, 
    .参数 hwnd, 整数型, , 
    .参数 lpText, 文本型, , 
    .参数 lpCaption, 文本型, , 
    .参数 wType, 整数型, , 

.DLL命令 ShellExecuteA, 空白型, "", "ShellExecuteA", 公开, 
    .参数 窗口句柄, 整数型, , 父窗口句柄,可为0
    .参数 操作方式, 文本型, , "open" 或者 "print"
    .参数 链接地址, 文本型, , "Http://www.163.com"，"mailto:sst95@21cn.com",文件合路径
    .参数 命令行参数, 文本型, , 
    .参数 完整路径, 文本型, , 
    .参数 窗口显示方式, 整数型, , 

.DLL命令 GetCursorPos, 整数型, "user32", "GetCursorPos", 公开, 取鼠标位置_
    .参数 位置, POINTAPI, , 

.DLL命令 GetOpenFileName, 整数型, "comdlg32.dll", "GetOpenFileNameA", 公开, 打开多文件对话框
    .参数 OpenFile, 未知类型0x4101112B, , 

.DLL命令 GetSaveFileName, 整数型, "comdlg32.dll", "GetSaveFileNameA", 公开, 打开保存对话框
    .参数 OpenFile, 未知类型0x4101112B, , 

.DLL命令 LoadImage, 整数型, "user32.dll", "LoadImageA", 公开, 载入一个位图、图标或指针
    .参数 实例句柄, 整数型, , hInst,要从其中载入图象的DLL或应用程序模块或实例句柄
    .参数 图象标志符, 文本型, , lpsz,欲载入图象的名字
    .参数 图象类型, 整数型, , un1,指定了欲载入的图象类型
    .参数 图象宽度, 整数型, , n1,要求的图象宽度
    .参数 图象高度, 整数型, , n2,要求的图象高度
    .参数 常数组合, 整数型, , un2,常数的任意组合

.DLL命令 GetModuleHandle, 整数型, "kernel32", "GetModuleHandleA", 公开, 获取一个应用程序或动态链接库的模块句柄　如执行成功成功，则返回模块句柄。零表示失败。会设置GetLastError
    .参数 lpModuleName, 整数型, , 指定模块名，这通常是与模块的文件名相同的一个名字。例如，NOTEPAD.EXE程序的模块文件名就叫作NOTEPAD;  

.DLL命令 SendMessage, 整数型, "user32", "SendMessageA", 公开, 调用一个窗口的窗口函数，将一条消息发给那个窗口。除非消息处理完毕，否则该函数不会返回。SendMessageBynum， ;    SendMessageByString是该函数的“类型安全”声明形式  由具体的消息决定
    .参数 窗口句柄, 整数型, , 要接收消息的那个窗口的句柄
    .参数 信息值, 整数型, , 消息的标识符
    .参数 参数一, 整数型, , 具体取决于消息
    .参数 参数二, 整数型, , 具体取决于消息;

.DLL命令 CreateFont, 整数型, "gdi32", "CreateFontA", 公开, 用指定的属性创建一种逻辑字体　执行成功则返回逻辑字体的句柄，零表示失败。会设置GetLastError
    .参数 nHeight, 整数型, , IfHeight
    .参数 nWidth, 整数型, , IfWidth
    .参数 nEscapement, 整数型, , IfEscapement
    .参数 nOrientation, 整数型, , IfOrientation
    .参数 fnWeight, 整数型, , IfWeight
    .参数 fdwItalic, 整数型, , IfItalic
    .参数 fdwUnderline, 整数型, , IfUnderline
    .参数 fdwStrikeOut, 整数型, , IfStrikeOut
    .参数 fdwCharSet, 整数型, , IfCharSet
    .参数 OutputPrecision, 整数型, , IfOutputPrecision
    .参数 ClipPrecision, 整数型, , IfClipPrecision
    .参数 Quality, 整数型, , IfQuality
    .参数 PitchAndFamily, 整数型, , IfPitchAndFamily
    .参数 lpszFace, 文本型, , IfFaceName;  

.DLL命令 DeleteObject, 整数型, "gdi32", "DeleteObject", 公开, 用这个函数删除GDI对象，比如画笔、刷子、字体、位图、区域以及调色板等等。对象使用的所有系统资源都会被释放　非零表示成功，零表示失败
    .参数 对象句柄, 整数型, , 一个GDI对象的句柄;  

.DLL命令 FillMemory, 空白型, "kernel32.dll", "RtlFillMemory", 公开, 填充内存_
    .参数 目的内存, 整数型, , Destination
    .参数 长度, 整数型, , Length
    .参数 填充内容, 整数型, , Fill

.DLL命令 lstrlen, 整数型, "kernel32.dll", "lstrlenA", 公开, 取文本内容长度_
    .参数 文本, 文本型, , Ptr

.DLL命令 StrTrim, 整数型, "shlwapi.dll", "StrTrimA", 公开, 替换首尾文本
    .参数 psz, 文本型, , 
    .参数 pszTrimChars, 文本型, , 

.DLL命令 CharLower, 文本型, "", "CharLowerA", 公开, 到小写_
    .参数 str, 文本型, , 

.DLL命令 CharUpper, 文本型, "", "CharUpperA", 公开, 到大写_
    .参数 str, 文本型, , 

.DLL命令 GetCurrentDirectory, 整数型, "", "GetCurrentDirectoryA", 公开, 
    .参数 nBufferLength, 整数型, , 
    .参数 lpBuffer, 文本型, , 

.DLL命令 GetLastError, 整数型, "", "GetLastError", 公开, 取系统最后错误代码

.DLL命令 GetWindowRect, 空白型, "", "GetWindowRect", 公开, 取窗口非客户区范围_
    .参数 hwnd, 整数型, , 
    .参数 rect, RECT, , 

.DLL命令 GetDesktopWindow, 整数型, "", "GetDesktopWindow", 公开, 

.DLL命令 RegCloseKey, 整数型, "", "RegCloseKey", 公开, 关闭注册项
    .参数 hkey, 整数型, , 

.DLL命令 RegQueryValueExA, 整数型, "", "RegQueryValueExA", 公开, 取注册表项
    .参数 hKey, 整数型, , 
    .参数 lpValueName, 文本型, , 
    .参数 lpReserved, 整数型, , 
    .参数 lpType, 整数型, 传址, 
    .参数 lpData, 文本型, 传址, 
    .参数 lpcbData, 整数型, 传址, 

.DLL命令 RegOpenKeyExA, 整数型, "", "RegOpenKeyExA", 公开, 打开注册表项
    .参数 hKey, 整数型, , 
    .参数 lpSubKey, 文本型, , 
    .参数 ulOptions, 整数型, , 
    .参数 samDesired, 整数型, , 
    .参数 phkResult, 整数型, 传址, 

.DLL命令 RegSetValueExA, 整数型, "", "RegSetValueExA", 公开, 写注册表项
    .参数 hKey, 整数型, , 
    .参数 lpValueName, 文本型, , 
    .参数 Reserved, 整数型, , 
    .参数 dwType, 整数型, , 
    .参数 lpData, 文本型, 传址, 
    .参数 cbData, 整数型, , 

.DLL命令 RegDeleteKeyA, 整数型, "", "RegDeleteKeyA", 公开, 
    .参数 hKey, 整数型, , 
    .参数 lpSubKey, 文本型, , 

.DLL命令 RegDeleteValueA, 整数型, "", "RegDeleteValueA", 公开, 
    .参数 hKey, 整数型, , 
    .参数 lpValueKey, 文本型, , 

.DLL命令 RegCreateKeyA, 整数型, "", "RegCreateKeyA", 公开, 
    .参数 hKey, 整数型, , 一个打开项的句柄，或者一个标准项名
    .参数 lpSubKey, 文本型, , 欲创建的新子项的名字
    .参数 phkResult, 整数型, 传址, 

.DLL命令 Sleep, 整数型, "kernel32.dll", "Sleep", 公开, 
    .参数 延时时间, 整数型, , 毫秒

.DLL命令 GetInputState, 整数型, "user32", "GetInputState", 公开, 

.DLL命令 GetProcAddress, 整数型, "", "GetProcAddress", 公开, 根据加载DLL模块返回的句柄，取模块内部函数的指针地址
    .参数 hModule, 整数型, , 为HMODULE结构，是所调用DLL模块的句柄
    .参数 lpProcName, 文本型, , 为LPCSTR结构，是函数名称

.DLL命令 LoadLibrary, 整数型, "", "LoadLibraryA", 公开, 加载一个DLL，返回模块句柄
    .参数 name, 文本型, , 

.DLL命令 FreeLibrary, 整数型, "", "FreeLibrary", 公开, 释放一个DLL
    .参数 hddl, 整数型, , 

.DLL命令 WriteProcessMemory_Bin, 整数型, "kernel32", "WriteProcessMemory", 公开, 在指定进程中写内存
    .参数 hProcess, 整数型, , 使用函数 OpenProcess() 返回。
    .参数 起始写入地址, 整数型, , 
    .参数 要写入的内容, 字节集, , 本参数的类型也能是“字节”型。
    .参数 写入长度, 整数型, , 写入的数据长度。
    .参数 实际写入长度, 整数型, , 实际写入的数据长度，为0则忽略。

.DLL命令 WaitForSingleObject, 整数型, "kernel32", "WaitForSingleObject", 公开, 监测一个对象
    .参数 hHandle, 整数型, , 
    .参数 dwMilliseconds, 整数型, , 

.DLL命令 CloseHandle, 整数型, "kernel32.dll", "CloseHandle", 公开, 
    .参数 对象句柄, 整数型, , 

.DLL命令 CreateToolhelp32Snapshot, 整数型, "kernel32.dll", "CreateToolhelp32Snapshot", 公开, 创建系统快照TH32CS_INHERIT=2147483648  TH32CS_SNAPALL=位或(1,2,4,8)
    .参数 快照标志, 整数型, , 进程＝15，线程=4，DLL＝8，堆=1
    .参数 参数, 整数型, , TH32CS_SNAPHEAPLIST=1 TH32CS_SNAPPROCESS=2 TH32CS_SNAPTHREAD=4 TH32CS_SNAPMODULE=8

.DLL命令 Process32Next, 逻辑型, "kernel32.dll", "Process32Next", 公开, 下个进程结构
    .参数 快照句柄, 整数型, , 
    .参数 进程结构, 进程结构, 传址, 

.DLL命令 Process32First, 逻辑型, "kernel32.dll", "Process32First", 公开, 取进程快照第一个进程信息返回内存指针
    .参数 快照句柄, 整数型, , 
    .参数 进程结构, 进程结构, 传址, 

.DLL命令 OpenProcess, 整数型, "kernel32", "OpenProcess", 公开, 将句柄返回给过程对象
    .参数 操作方式, 整数型, , 操作方式，PROCESS_CREATE_THREAD（允许远程创建线程）；PROCESS_VM_OPERATION （允许远程VM操作）；PROCESS_VM_WRITE（允许远程VM写）；2035711 完全访问。
    .参数 bInheritHandle, 整数型, , 
    .参数 进程ID, 整数型, , 使用一个变量装载进程ID。

.DLL命令 PostThreadMessageA, 整数型, "user32.dll", "PostThreadMessageA", 公开, 发送线程消息_
    .参数 线程ID, 整数型, , 
    .参数 消息标识, 整数型, , 
    .参数 消息1, 整数型, , 
    .参数 消息2, 整数型, , 

.DLL命令 CallWindowProc, 整数型, "user32.dll", "CallWindowProcA", 公开, 执行窗口过程
    .参数 前一窗口函数地址, 整数型, , 
    .参数 窗口句柄, 整数型, , 
    .参数 消息值, 整数型, , 
    .参数 附加参数1, 整数型, , 
    .参数 附加参数2, 整数型, , 

.DLL命令 CallWindowProc_98, 整数型, "user32.dll", "CallWindowProcA", 公开, 执行子程序
    .参数 事件程序, 整数型, , 

.DLL命令 PostQuitMessage, 空白型, "user32", "PostQuitMessage", 公开, 通知WINDOWS线索将中断　
    .参数 nExitCode, 整数型, , 

.DLL命令 SetFocus, 整数型, "user32.dll", "SetFocus", 公开, SetFocus，设置得拥有输入焦点的窗口的句柄
    .参数 hwnd, 整数型, , 

.DLL命令 GetWindowLong, 整数型, "user32", "GetWindowLongA", 公开, 从指定窗口的结构中取得信息  由nIndex决定。零表示出错。会设置GetLastError
    .参数 窗口句柄, 整数型, , 欲为其获取信息的窗口的句柄
    .参数 属性, 整数型, , 欲取回的信息，可以是下述任何一个常数：;GWL_EXSTYLE：扩展窗口样式;GWL_STYLE：窗口样式;GWL_WNDPROC：该窗口的窗口函数的地址;GWL_HINSTANCE：拥有窗口的实例的句柄;GWL_HWNDPARENT：该窗口之父的句柄。不要用SetWindowWord来改变这个值;GWL_ID：对话框中一个子窗口的标识符;GWL_USERDATA：含义由应用程序规定;DWL_DLGPROC：这个窗口的对话框函数地址;DWL_MSGRESULT：在对话框函数中处理的一条消息返回的值;DWL_USER：含义由应用程序规定;

.DLL命令 SetWindowLong, 整数型, "user32", "SetWindowLongA", 公开, 在窗口结构中为指定的窗口设置信息  指定数据的前一个值
    .参数 窗口句柄, 整数型, , hwnd，欲为其取得信息的窗口的句柄
    .参数 窗口信息值, 整数型, , nIndex，请参考GetWindowLong函数的nIndex参数的说明
    .参数 窗口信息新值, 子程序指针, , dwNewLong，由nIndex指定的窗口信息的新值

.DLL命令 SetWindowLong_style, 整数型, "user32", "SetWindowLongA", 公开, 在窗口结构中为指定的窗口设置信息  指定数据的前一个值
    .参数 窗口句柄, 整数型, , hwnd，欲为其取得信息的窗口的句柄
    .参数 窗口信息值, 整数型, , nIndex，请参考GetWindowLong函数的nIndex参数的说明
    .参数 窗口信息新值, 整数型, , dwNewLong，由nIndex指定的窗口信息的新值

.DLL命令 ShowWindow, 整数型, "user32", "ShowWindow", 公开, 控制窗口的可见性（在vb里使用：针对vb窗体及控件，请使用对应的vb属性）　如窗口之前是可见的，则返回TRUE（非零），否则返回FALSE（零）
    .参数 hwnd, 整数型, , 窗口句柄，要向这个窗口应用由nCmdShow指定的命令
    .参数 nCmdShow, 整数型, , 为窗口指定可视性方面的一个命令。请用下述任何一个常数;SW_HIDE：隐藏窗口，活动状态给令一个窗口;SW_MINIMIZE：最小化窗口，活动状态给令一个窗口;SW_RESTORE：用原来的大小和位置显示一个窗口，同时令其进入活动状态;SW_SHOW：用当前的大小和位置显示一个窗口，同时令其进入活动状态;SW_SHOWMAXIMIZED：最大化窗口，并将其激活;SW_SHOWMINIMIZED：最小化窗口，并将其激活;SW_SHOWMINNOACTIVE：最小化一个窗口，同时不改变活动窗口;SW_SHOWNA：用当前的大小和位置显示一个窗口，不改变活动窗口;SW_SHOWNOACTIVATE：用最近的大小和位置显示一个窗口，同时不改变活动窗口;SW_SHOWNORMAL：与SW_RESTORE相同;

.DLL命令 UpdateWindow, 整数型, "user32", "UpdateWindow", 公开, 强制立即更新窗口，窗口中以前屏蔽的所有区域都会重画（在vb里使用：如vb窗体或控件的任何部分需要更新，可考虑直接使用refresh方法　非零表示成功，零表示失败
    .参数 hwnd, 整数型, , 欲更新窗口的句柄;

.DLL命令 GetWindowText, 整数型, "user32.dll", "GetWindowTextA", 公开, 取得一个窗体的标题（caption）文字，或者一个控件的内容（在vb里使用：使用vb窗体或控件的caption或text属性）  复制到lpString的字串长度；不包括空中止字符。会设置GetLastError
    .参数 窗口句柄, 整数型, , 欲获取文字的那个窗口的句柄
    .参数 缓冲区, 整数型, , 预定义的一个缓冲区，至少有cch+1个字符大小；随同窗口文字载入
    .参数 缓冲尺寸, 整数型, , lp缓冲区的长度;

.DLL命令 GetWindowTextLength, 整数型, "", "GetWindowTextLengthA", 公开, 取窗口标题长度_
    .参数 窗口句柄, 整数型, , 欲获取文字长度的那个窗口的句柄

.DLL命令 SetWindowTextA, 整数型, "user32", "SetWindowTextA", 公开, 设置窗口标题_
    .参数 窗口句柄, 整数型, , 
    .参数 窗口标题, 文本型, , 

.DLL命令 MoveWindow, 整数型, "user32.dll", "MoveWindow", 公开, 改变窗口_
    .参数 窗口句柄, 整数型, , hwnd，欲移动窗口的句柄
    .参数 左侧位置, 整数型, , x，窗口新的左侧位置
    .参数 顶部位置, 整数型, , y，窗口新的顶部位置
    .参数 新宽度, 整数型, , nWidth，窗口的新宽度
    .参数 高宽度, 整数型, , nHeight，窗口的高宽度
    .参数 是否重画, 整数型, , bRepaint，如窗口此时应重画，则设为TRUE（非零）

.DLL命令 CreateWindowEx, 整数型, "user32.dll", "CreateWindowExA", 公开, 
    .参数 dwExStyle, 整数型, , 
    .参数 lpClassName, 文本型, , 窗口实例的类的名字
    .参数 lpWindowName, 文本型, , 窗口标题名
    .参数 dwStyle, 整数型, , 新创建的窗口的样式
    .参数 X, 整数型, , 窗口左上角的横坐标
    .参数 Y, 整数型, , 窗口左上角的纵坐标
    .参数 nWidth, 整数型, , 窗口的宽度
    .参数 nHeight, 整数型, , 窗口的高度
    .参数 hWndParent, 整数型, , 该窗口的父窗口的句柄
    .参数 hMenu, 整数型, , 窗口主菜单句柄
    .参数 hInstance, 整数型, , 创建窗口的应用程序当前句柄
    .参数 lpParam, 整数型, , 指向一个传递给窗口的参数值的指针

.DLL命令 SetWindowPos, 整数型, "", "SetWindowPos", 公开, 
    .参数 窗口句柄, 整数型, , 
    .参数 最最前端, 整数型, , WND_TOPMOST=-1
    .参数 窗口新的x坐标, 整数型, , 0
    .参数 窗口新的y坐标, 整数型, , 0
    .参数 新的窗口宽度, 整数型, , 0
    .参数 新的窗口高度, 整数型, , 0
    .参数 保持大小, 整数型, , SWP_NOSIZE=1

.DLL命令 IsWindow, 整数型, "user32", "IsWindow", 公开, 判断窗口是否可见  如窗口可见则返回TRUE（非零）
    .参数 窗口句柄, 整数型, , 要测试的那个窗口的句柄;

.DLL命令 IsWindowVisible, 整数型, "user32", "IsWindowVisible", 公开, 判断窗口是否可见  如窗口可见则返回TRUE（非零）
    .参数 窗口句柄, 整数型, , 要测试的那个窗口的句柄;

.DLL命令 CreateMenu, 整数型, "user32.dll", "CreateMenu", 公开, 菜单_创建

.DLL命令 InsertMenu, 整数型, "user32.dll", "InsertMenuA", 公开, 菜单_插入条目
    .参数 菜单句柄, 整数型, , hMenu,菜单的句柄
    .参数 插入点标志符, 整数型, , nPosition,参见相关帮助
    .参数 常数标志, 整数型, , wFlags,常数标志的组合,参考ModifyMenu
    .参数 新条目ID, 整数型, , wIDNewItem,指定菜单条目的新菜单ID
    .参数 条目内容, 整数型, , lpNewItem,由wFlags参数决定

.DLL命令 InsertMenuItem, 整数型, "user32.dll", "InsertMenuItemA", 公开, 菜单_插入指定条目
    .参数 菜单句柄, 整数型, , hMenu,菜单的句柄
    .参数 菜单条目, 整数型, , un,菜单条目的菜单ID
    .参数 菜单条目标志, 逻辑型, , bool,参见相关帮助
    .参数 指定菜单条目结构, 未知类型0x41011573, , lpcMenuItemInfo,用于设置指定菜单条目的特征

.DLL命令 SetMenuItemInfo, 整数型, "user32.dll", "SetMenuItemInfoA", 公开, 为一个菜单条目设置指定的信息，具体信息保存于MENUITEMINFO结构中  TRUE（非零）表示成功，否则返回零。会设置GetLastError
    .参数 菜单句柄, 整数型, , hMenu
    .参数 菜单标识符或位置, 整数型, , un
    .参数 标识符或位置, 逻辑型, , bool，如un指定了条目的位置，就为TRUE；如指定的是菜单ID，就为FALSE
    .参数 菜单条目信息结构, 未知类型0x41011573, , lpcMenuItemInfo

.DLL命令 TrackPopupMenu, 整数型, "user32.dll", "TrackPopupMenu", 公开, 在屏幕的任意地方显示一个弹出式菜单
    .参数 菜单句柄, 整数型, , 弹出式菜单的句柄
    .参数 标志, 整数型, , 位置标志和鼠标追踪标志的组合，见下表
    .参数 横坐标, 整数型, , 这个点指定了弹出式菜单在屏幕坐标系统中的位置
    .参数 纵坐标, 整数型, , 这个点指定了弹出式菜单在屏幕坐标系统中的位置
    .参数 保留参数, 整数型, , 未使用，设为零
    .参数 窗口句柄, 整数型, , 用于接收弹出式菜单命令的窗口的句柄。应该使用窗体的窗口句柄――窗体中有一个菜单能象弹出式菜单那样接收相同的命令ID集
    .参数 矩形结构, 整数型, , 用屏幕坐标定义的一个矩形，如用户在这个矩形的范围内单击，则弹出式菜单不会关闭。如单击弹出式菜单之外的任何一个地方，则会关闭菜单。可以设为NULL

.DLL命令 AppendMenu, 整数型, "user32.dll", "AppendMenuA", 公开, 菜单_添加项非零表示成功，零表示失败
    .参数 菜单句柄, 整数型, , hMenu,菜单句柄
    .参数 菜单常数标志, 整数型, , wFlags,参见相关帮助
    .参数 新菜单条目ID, 整数型, , wIDNewItem,指定菜单条目的新命令ID
    .参数 标志值, 文本型, , lpNewItem,参见相关帮助

.DLL命令 DrawMenuBar, 整数型, "user32.dll", "DrawMenuBar", 公开, 为指定的窗口重画菜单
    .参数 窗口句柄, 整数型, , hwnd,要重画菜单栏的窗口的句柄 

.DLL命令 CreatePopupMenu, 整数型, "user32.dll", "CreatePopupMenu", 公开, 菜单_创建空白弹出式

.DLL命令 SetMenu, 整数型, "user32.dll", "SetMenu", 公开, 菜单_设置父
    .参数 窗口句柄, 整数型, , 
    .参数 菜单句柄, 整数型, , 

.DLL命令 CreateToolbarEx, 整数型, "Comctl32.dll", "CreateToolbarEx", 公开, 创建工具栏_
    .参数 hwnd, 整数型, , 
    .参数 ws, 整数型, , 风格
    .参数 wID, 整数型, , 
    .参数 nBitmaps, 整数型, , 位图数量
    .参数 hBMInst, 整数型, , 位置模块句柄或NULL
    .参数 wBMID, 整数型, , 位图标识或位图句柄
    .参数 lpButtons, 未知类型0x41011574, 数组, TB结构
    .参数 iNumButtons, 整数型, , 按钮数量
    .参数 dxButton, 整数型, , 按钮宽度
    .参数 dyButton, 整数型, , 按钮高度
    .参数 dxBitmap, 整数型, , 位图宽度
    .参数 dyBitmap, 整数型, , 位图高度
    .参数 uStructSize, 整数型, , TB结构长度

.DLL命令 ImageList_Create, 整数型, "comctl32.dll", "ImageList_Create", 公开, 创建图标列表_
    .参数 宽度, 整数型, , 
    .参数 高度, 整数型, , 
    .参数 颜色深度, 整数型, , 
    .参数 初始图标数目, 整数型, , 
    .参数 最大图标数目, 整数型, , 

.DLL命令 ImageList_Add, 整数型, "comctl32.dll", "ImageList_Add", 公开, 加入图标_
    .参数 图标列表句柄, 整数型, , 
    .参数 位图句柄, 整数型, , 
    .参数 掩码位位图句柄, 整数型, , 

.DLL命令 LoadBitmap, 整数型, "user32.dll", "LoadBitmapA", 公开, 从指定的模块或应用程序实例中载入一幅位图
    .参数 实例句柄, 整数型, , hInstance,参见相关帮助
    .参数 位图标识, 整数型, , lpBitmapName,参见相关帮助

.DLL命令 SendMessage_树形添加结构, 整数型, "user32", "SendMessageA", 公开, 调用一个窗口的窗口函数，将一条消息发给那个窗口。除非消息处理完毕，否则该函数不会返回。SendMessageBynum， ;    SendMessageByString是该函数的“类型安全”声明形式  由具体的消息决定
    .参数 窗口句柄, 整数型, , 要接收消息的那个窗口的句柄
    .参数 信息值, 整数型, , 消息的标识符
    .参数 参数一, 整数型, , 具体取决于消息
    .参数 参数二, 未知类型0x41011575, , 具体取决于消息;

.DLL命令 SendMessage_树形项目信息, 整数型, "user32", "SendMessageA", 公开, 调用一个窗口的窗口函数，将一条消息发给那个窗口。除非消息处理完毕，否则该函数不会返回。SendMessageBynum， ;    SendMessageByString是该函数的“类型安全”声明形式  由具体的消息决定
    .参数 窗口句柄, 整数型, , 要接收消息的那个窗口的句柄
    .参数 信息值, 整数型, , 消息的标识符
    .参数 参数一, 整数型, , 具体取决于消息
    .参数 参数二, 未知类型0x41011576, , 具体取决于消息;

.DLL命令 _取对象指针, 整数型, "", "lstrcpyn", 公开, 
    .参数 目的指针, 对象, 传址, 
    .参数 源指针, 对象, 传址, 
    .参数 复制长度, 整数型, , 0

.程序集 程序集1, , , 

.程序集变量 启动窗口, 类_窗口, , , 
.程序集变量 查询按钮, 类_按钮, , , 
.程序集变量 分组框1, 类_分组框, , , 
.程序集变量 标签5, 类_静态控件, , , 
.程序集变量 标签4, 类_静态控件, , , 
.程序集变量 标签3, 类_静态控件, , , 
.程序集变量 标签2, 类_静态控件, , , 
.程序集变量 QQ号码编辑框, 类_编辑框, , , 
.程序集变量 标签1, 类_静态控件, , , 
.程序集变量 标签9, 类_静态控件, , , 
.程序集变量 状态标签, 类_静态控件, , , 
.程序集变量 标签7, 类_静态控件, , , 
.程序集变量 标签6, 类_静态控件, , , 
.子程序 _启动子程序, 整数型, , 本子程序在程序启动后最先执行
 ' --========  易语言资源网  (www.wodesoft.com)  ======--
 ' 努力创建完善、持续更新的易语言学习例程源码资源站
 ' --================   www.wodesoft.com  ===========--
 ' --==================   易语言资源网注意事项  ================--
 ' * 易语言资源网为易语言官方站、易语言官方论坛提供辅助资源站；
 ' 本易语言资源网( www.wodesoft.com)所有软件和资料均为软件作者提
 ' 供和网友推荐发布而来，其版权归该软件和程序源码的合法拥有者所
 ' 有，本站易语言资源网整理收集仅供易语言用户学习和易语言技术研
 ' 究探讨使用，不得用于任何商业用途。如果由于以上原因造成的版权
 ' 纠纷本站概不负责！
 ' * 本站资源未经许可，任何网站不得非法盗链及抄袭本站资源；如引用
 ' 页面，请注明来自易语言资源网，谢谢合作！
 ' --=====================   www.wodesoft.com  ================--

启动窗口.未知函数_67174449 (“QQ在线状态查询器”, 320, 280, 316, 160, , 相加 (524288, 131072), 真, )
查询按钮.未知函数_67174514 (启动窗口.未知函数_67174432 (), “查 询(&G)”, 184, 56, 112, 27, )
分组框1.未知函数_67174582 (启动窗口.未知函数_67174432 (), “”, 8, 40, 160, 45)
标签5.未知函数_67174675 (启动窗口.未知函数_67174432 (), “Copyright (C) 2007-2009”, 136, 115, 144, 24, )
标签4.未知函数_67174675 (启动窗口.未知函数_67174432 (), “Email：Cracker001@vip.qq.com”, 128, 96, 176, 20, )
标签3.未知函数_67174675 (启动窗口.未知函数_67174432 (), “QQ：9108454”, 24, 115, 72, 24, )
标签2.未知函数_67174675 (启动窗口.未知函数_67174432 (), “作者：Lollipop”, 16, 96, 88, 20, )
QQ号码编辑框.未知函数_67174697 (启动窗口.未知函数_67174432 (), “340487270”, 176, 8, 120, 24, )
标签1.未知函数_67174675 (启动窗口.未知函数_67174432 (), “请输入你要查询的QQ号：”, 8, 14, 136, 24, )
标签9.未知函数_67174675 (分组框1.未知函数_67174565 (), “：”, 40, 19, 8, 24, )
状态标签.未知函数_67174675 (分组框1.未知函数_67174565 (), “等待查询...”, 55, 19, 88, 24, )
标签7.未知函数_67174675 (分组框1.未知函数_67174565 (), “状态”, 8, 26, 24, 16, )
标签6.未知函数_67174675 (分组框1.未知函数_67174565 (), “QQ”, 2, 11, 24, 16, )
查询按钮.未知函数_67174515 (&查询)
模块_消息循环 ()
 ' 本源码来自易语言资源网(www.wodesoft.com)
返回 (0)

.子程序 查询, 空白型, , 
.局部变量 临时数据, 字节集, , , 

.如果 (等于 (QQ号码编辑框.未知函数_67174698 (), “”))
    状态标签.未知函数_67174657 (“请输入QQ号码!”)
.否则
    .如果 (小于 (数值_十进制文本到整数 (QQ号码编辑框.未知函数_67174698 ()), 10000))
        状态标签.未知函数_67174657 (“Q太好没法查询!”)
    .否则
        状态标签.未知函数_67174657 (“正在查询中...”)
        查询按钮.未知函数_67174503 (真)
        赋值 (临时数据, 访问网页 (相加 (“http://wpa.qq.com/pa?p=1:”, QQ号码编辑框.未知函数_67174698 (), “:17”), , , , , , , ))
        .如果真 (不等于 (临时数据, {  }))
            .如果 (等于 (临时数据, #online))
                状态标签.未知函数_67174657 (相加 (QQ号码编辑框.未知函数_67174698 (), “在线”))
                查询按钮.未知函数_67174503 (假)
            .否则
                状态标签.未知函数_67174657 (相加 (QQ号码编辑框.未知函数_67174698 (), “离线”))
                查询按钮.未知函数_67174503 (假)
            .如果结束
            ' 本源码来自易语言资源网(www.wodesoft.com)
        .如果真结束
        
    .如果结束
    
.如果结束


.程序集 __HIDDEN_TEMP_MOD__, , , 

.子程序 访问网页, 字节集, , 最大读取64M文件
.参数 完整网址, 文本型, , 
.参数 访问方式, 文本型, 可空, "GET" or "POST",为空默认"GET"
.参数 代理地址, 文本型, 可空, 
.参数 用户名, 文本型, 可空, 
.参数 密码, 文本型, 可空, 
.参数 附加协议头, 文本型, 可空, 
.参数 提交信息, 文本型, 可空, "POST"专用
.参数 超时值, 整数型, 可空, 单位秒，默认90
.参数 返回状态文本, 文本型, 参考 可空, 在Send之后可以获取状态文本



.子程序 取域名, 文本型, , 
.参数 网址, 文本型, , 
.参数 不过滤端口, 逻辑型, 可空, 



.子程序 取端口, 整数型, , 
.参数 网址, 文本型, , 



.子程序 取页面地址, 文本型, , 
.参数 网址, 文本型, , 



.子程序 _取指针_字节集, 整数型, , 
.参数 字节集, 字节集, , 



.子程序 _取指针_字节型, 整数型, , 
.参数 字节, 字节型, 参考, 



.子程序 _取指针_文本型, 整数型, , 
.参数 文本, 文本型, , 



.子程序 _取指针_整数型, 整数型, , 
.参数 x, 整数型, 参考, 



.子程序 _取指针_子程序指针, 整数型, , 
.参数 x, 子程序指针, 参考, 



.子程序 _取指针_长整数型, 整数型, , 
.参数 x, 长整数型, 参考, 



.子程序 _取指针_双精度小数型, 整数型, , 
.参数 x, 双精度小数型, 参考, 



.子程序 文本_取空白文本, 文本型, , 支持斩月，但速度不是最快，不过简单，哈～～
.参数 len, 整数型, , 



.子程序 文本_取文本长度, 整数型, , 
.参数 文本, 文本型, , 



.子程序 文本_字符, 文本型, , 
.参数 欲取其字符的字符代码, 字节型, , 



.子程序 文本_取代码, 整数型, , 
.参数 欲取字符代码的文本, 文本型, , 
.参数 欲取其代码的字符位置, 整数型, 可空, 



.子程序 文本_到大写, 文本型, ,  
.参数 文本, 文本型, , 



.子程序 文本_到小写, 文本型, ,  
.参数 文本, 文本型, , 



.子程序 文本_字节集到文本, 文本型, , 
.参数 字节集, 字节集, , 



.子程序 文本_整数到文本, 文本型, , ' 这里只是个测试，其实用汇编是很简单的。哈哈～～，来个动态调用API吧。
.参数 整数, 整数型, , 



.子程序 文本_删首尾空, 文本型, , 
.参数 文本, 文本型, , 



.子程序 文本_倒找文本, 整数型, , 返回一个整数值，指定一文本在另一文本中最后出现的位置，位置值从 1 开始。如果未找到，返回-1。
.参数 被搜寻的文本, 文本型, , 
.参数 欲寻找的文本, 文本型, , 
.参数 起始搜寻位置, 整数型, 可空, 位置值从 1 开始。如果本参数被省略，默认为从被搜寻文本的尾部开始。
.参数 是否不区分大小写, 逻辑型, 可空, 初始值为“假”。为真不区分大小写，为假区分。



.子程序 文本_寻找文本, 整数型, , 返回一个整数值，指定一文本在另一文本中最先出现的位置，位置值从 1 开始。如果未找到，返回-1。
.参数 被搜寻的文本, 文本型, , 
.参数 欲寻找的文本, 文本型, , 
.参数 起始搜寻位置, 整数型, 可空, 位置值从 1 开始。如果本参数被省略，默认为 1 。
.参数 是否不区分大小写, 逻辑型, 可空, 初始值为“假”。为真不区分大小写，为假区分。



.子程序 文本_取文本左边, 文本型, , 
.参数 欲取其部分的文本, 文本型, , 
.参数 欲取出字符的数目, 整数型, , 



.子程序 文本_取文本右边, 文本型, , 
.参数 欲取其部分的文本, 文本型, , 
.参数 欲取出字符的数目, 整数型, , 



.子程序 文本_取文本中间, 文本型, , 
.参数 欲取其部分的文本, 文本型, , 
.参数 起始取出位置, 整数型, , 
.参数 欲取出字符的数目, 整数型, , 



.子程序 文本_分割文本, 整数型, , 返回实际的组数
.参数 待分割文本, 文本型, , 如果参数值是一个长度为零的文本，则返回一个空数组，即没有任何成员的数组
.参数 用作分割的文本, 文本型, 可空, 可以被省略。参数值用于标识子文本边界。如果被省略，则默认使用半角逗号字符作为分隔符。如果是一个长度为零的文本，则返回的数组仅包含一个成员，即完整的“待分割文本”
.参数 要返回的子文本数目, 整数型, 可空, 可以被省略。如果被省略，则默认返回所有的子文本
.参数 返回的文本数组, 文本型, 数组, 将指定文本进行分割，分割后的一维文本数组以参考方式传递



.子程序 文本_字节型数组到文本, 文本型, , 
.参数 字节型数组, 字节型, 数组, 



.子程序 文本_取重复文本, 文本型, , 速度慢，哈哈。
.参数 重复次数, 整数型, , 
.参数 待重复的文本, 文本型, , 



.子程序 文本_文本替换, 文本型, , 将指定文本的某一部分用其它的文本替换，然后返回替换后的结果。
.参数 欲替换其部分的文本, 文本型, , 
.参数 起始替换位置, 整数型, , 替换的起始位置，1为首位置，2为第2个位置，如此类推。
.参数 替换长度, 整数型, , 
.参数 用作替换的文本, 文本型, 可空, 可以被省略。如果本参数被省略，则删除文本中的指定部分。



.子程序 文本_子文本替换, 文本型, , 返回一个文本，该文本中指定的子文本已被替换成另一子文本，并且替换发生的次数也是被指定的。
.参数 欲被替换的文本, 文本型, , 
.参数 欲被替换的子文本, 文本型, , 
.参数 用作替换的子文本, 文本型, 可空, 可以被省略。如果本参数被省略，默认为空文本。
.参数 进行替换的起始位置, 整数型, 可空, 可以被省略。参数值指定被替换子文本的起始搜索位置。如果省略，默认从 1 开始。
.参数 替换进行的次数, 整数型, 可空, 可以被省略。参数值指定对子文本进行替换的次数。如果省略，默认进行所有可能的替换。
.参数 是否区分大小写, 逻辑型, 可空, 初始值为“真”。为真区分大小写，为假不区分。



.子程序 文本_删首空, 文本型, , 返回一个文本，其中包含被删除了首部全角或半角空格的指定文本。
.参数 欲删除空格的文本, 文本型, , 



.子程序 文本_删尾空, 文本型, , 返回一个文本，其中包含被删除了尾部全角或半角空格的指定文本。
.参数 欲删除空格的文本, 文本型, , 



.子程序 文本_删全部空, 文本型, , 返回一个文本，其中包含被删除了所有全角或半角空格的指定文本。
.参数 欲删除空格的文本, 文本型, , 



.子程序 文本_到全角, 文本型, , 将文本中的半角字母、空格或数字变换为全角，返回变换后的结果文本。
.参数 欲变换的文本, 文本型, , 



.子程序 文本_到半角, 文本型, , 将文本中的全角字母、空格或数字变换为半角，返回变换后的结果文本。
.参数 欲变换的文本, 文本型, , 



.子程序 字节集_取空白字节集, 字节集, , 支持斩月，但速度不是最快，不过简单，哈～～
.参数 len, 整数型, , 



.子程序 字节集_取字节集长度, 整数型, , 
.参数 字节集, 字节集, , 



.子程序 字节集_文本到字节集, 字节集, , 
.参数 文本, 文本型, , 



.子程序 字节集_整数到字节集, 字节集, , 
.参数 整数, 整数型, , 



.子程序 字节集_字节型到字节集, 字节集, , 
.参数 字节型, 字节型, , 



.子程序 字节集_寻找字节集, 整数型, , 返回一字节集在另一字节集中最先出现的位置，位置值从 1 开始。如果未找到，返回 -1。
.参数 被搜寻的字节集, 字节集, , 
.参数 欲寻找的字节集, 字节集, , 
.参数 起始搜寻位置, 整数型, 可空, 1为首位置，2为第2个位置，如此类推，如果被省略，则“寻找字节集”命令默认从首部开始，“倒找字节集”命令默认从尾部开始。



.子程序 字节集_倒找字节集, 整数型, , 返回一字节集在另一字节集中最后出现的位置，位置值从 1 开始。如果未找到，返回 -1。
.参数 被搜寻的字节集, 字节集, , 
.参数 欲寻找的字节集, 字节集, , 
.参数 起始搜寻位置, 整数型, 可空, 1为首位置，2为第2个位置，如此类推，如果被省略，则“寻找字节集”命令默认从首部开始，“倒找字节集”命令默认从尾部开始。



.子程序 字节集_取字节集左边, 字节集, , 
.参数 字节集, 字节集, , 
.参数 欲取出字节的数目, 整数型, , 



.子程序 字节集_取字节集右边, 字节集, , 
.参数 字节集, 字节集, , 
.参数 欲取出字节的数目, 整数型, , 



.子程序 字节集_取字节集中间, 字节集, , 
.参数 字节集, 字节集, , 
.参数 起始取出位置, 整数型, , 
.参数 欲取出字节的数目, 整数型, , 



.子程序 字节集_分割字节集, 整数型, , 返回实际的数组成员数
.参数 待分割字节集, 字节集, , 如果参数值是一个长度为零的字节集，则返回一个空数组，即没有任何成员的数组
.参数 用作分割的字节集, 字节集, 可空, 可以被省略。用于标识子字节集边界。本参数如果被省略，则默认使用字节 0 作为分隔符。
.参数 要返回的子字节集数目, 整数型, 可空, 可以被省略。如果被省略或小于等于0，则默认返回所有的子字节集。
.参数 返回的字节集数组, 字节集, 数组, 将指定字节集进行分割，分割后的一维字节集数组以参考方式传递



.子程序 字节集_取重复字节集, 字节集, , 速度慢，哈哈。
.参数 重复次数, 整数型, , 
.参数 待重复的字节集, 字节集, , 



.子程序 字节集_字节集替换, 字节集, , 将指定字节集的某一部分用其它的字节集替换，然后返回替换后的结果。
.参数 欲替换其部分的字节集, 字节集, , 
.参数 起始替换位置, 整数型, , 替换的起始位置，1为首位置，2为第2个位置，如此类推。
.参数 替换长度, 整数型, , 
.参数 用作替换的字节集, 字节集, 可空, 可以被省略。如果本参数被省略，则删除字节集中的指定部分。



.子程序 字节集_子字节集替换, 字节集, , 返回一个字节集，该字节集中指定的子字节集已被替换成另一子字节集，并且替换发生的次数也是被指定的。
.参数 欲被替换的字节集, 字节集, , 
.参数 欲被替换的子字节集, 字节集, , 
.参数 用作替换的子字节集, 字节集, 可空, 可以被省略。如果省略本参数，则默认为空字节集。
.参数 进行替换的起始位置, 整数型, 可空, 可以被省略。被替换子字节集的起始搜索位置。如果省略，默认从1开始。
.参数 替换进行的次数, 整数型, 可空, 可以被省略。对子字节集进行替换的次数。如果省略，默认进行所有可能的替换。



.子程序 数值_取十六进制文本, 文本型, , 
.参数 十进制整数, 整数型, , 



.子程序 数值_子程序指针到整数, 整数型, , 
.参数 x, 子程序指针, , 



.子程序 数值_字节集到整数, 整数型, , 
.参数 字节集, 字节集, , 
.参数 位置, 整数型, 可空, 默认为1



.子程序 数值_字节集到短整数, 短整数型, , 
.参数 字节集, 字节集, , 
.参数 位置, 整数型, 可空, 默认为1



.子程序 数值_取十进制, 长整数型, , 
.参数 欲转换的文本, 文本型, , 
.参数 进制, 整数型, , 文本的进制：#十六进制,#十进制,#八进制，#二进制



.子程序 数值_长整数到整数, 整数型, , 
.参数 x, 长整数型, , 



.子程序 数值_整数取高字, 整数型, , 
.参数 x, 整数型, , 



.子程序 数值_整数取低字, 整数型, , 
.参数 x, 整数型, , 



.子程序 数值_整除, 整数型, , 
.参数 被除数, 双精度小数型, , 
.参数 除数, 双精度小数型, , 



.子程序 数值_求余, 双精度小数型, , 
.参数 被除数, 双精度小数型, , 
.参数 除数, 双精度小数型, , 



.子程序 数值_求次方, 双精度小数型, , 
.参数 欲求次方数值, 双精度小数型, , 
.参数 次方数, 双精度小数型, , 



.子程序 数值_求平方根, 双精度小数型, , 
.参数 欲求其平方根的数值, 双精度小数型, , 



.子程序 数值_合并整数, 整数型, , 
.参数 用作合并的整数1, 整数型, , 
.参数 用作合并的整数2, 整数型, , 



.子程序 数值_合并短整数, 短整数型, , 
.参数 用作合并的整数1, 整数型, , 
.参数 用作合并的整数2, 整数型, , 



.子程序 数值_绝对取整, 整数型, , 
.参数 欲取整的小数, 双精度小数型, , 



.子程序 数值_取整, 整数型, , 
.参数 欲取整的小数, 双精度小数型, , 



.子程序 数值_求正弦, 双精度小数型, , 
.参数 欲进行计算的角, 双精度小数型, , 



.子程序 数值_求余弦, 双精度小数型, , 
.参数 欲进行计算的角, 双精度小数型, , 



.子程序 数值_求正切, 双精度小数型, , 
.参数 欲进行计算的角, 双精度小数型, , 



.子程序 数值_求反正切, 双精度小数型, , 
.参数 欲进行计算的角, 双精度小数型, , 



.子程序 数值_求反正弦, 双精度小数型, , 
.参数 正弦值, 双精度小数型, , -1到1，否则返回0



.子程序 数值_求反余弦, 双精度小数型, , 
.参数 余弦值, 双精度小数型, , -1到1，否则返回0



.子程序 数值_循环左移, 整数型, , 
.参数 要循环左移的整数, 整数型, , 
.参数 左移位数, 整数型, , <255



.子程序 数值_循环右移, 整数型, , 
.参数 要循环右移的整数, 整数型, , 
.参数 右移位数, 整数型, , <255



.子程序 系统_延时, 空白型, , 
.参数 时长, 整数型, , ms



.子程序 系统_动态调用子程序, 整数型, , 
.参数 子程序地址, 整数型, , 
.参数 参数, 整数型, 数组, 
.参数 是否为C调用方式, 逻辑型, 可空, 默认为标准调用方式



.子程序 系统_取操作系统类别, 整数型, , 返回值：0～8代表：“未知”, “Win95”, “Win98”, “WinME”, “ WinNT”, “Win2000”, “WinXP”, “Win2003”, “Vista”


.子程序 系统_信息框, 整数型, , 
.参数 提示信息, 文本型, , 
.参数 按钮, 整数型, 可空, 
.参数 窗口标题, 文本型, 可空, 



.子程序 系统_取颜色值, 整数型, , 
.参数 红色, 整数型, , 数值范围从 0 到 255，表示颜色中的红色成份。
.参数 绿色, 整数型, , 数值范围从 0 到 255，表示颜色中的绿色成份。
.参数 蓝色, 整数型, , 数值范围从 0 到 255，表示颜色中的蓝色成份。



.子程序 系统_取文件名, 文本型, , 
.参数 带路径文件名, 文本型, , 



.子程序 系统_取路径, 文本型, , 
.参数 带路径文件名, 文本型, , 



.子程序 系统_文件夹是否存在, 逻辑型, , 
.参数 路径, 文本型, , 



.子程序 系统_读配置项, 文本型, , 读取指定配置文件中指定项目的文本内容。
.参数 配置文件名, 文本型, , 指定配置文件的名称，通常以.ini作为文件名后缀。
.参数 节名称, 文本型, , 包含欲读入配置项所处节的名称。
.参数 配置项名称, 文本型, , 参数值指定欲读入配置项在其节中的名称。
.参数 默认文本, 文本型, 可空, 可以被省略。如果指定配置项不存在，将返回此默认文本。如果指定配置项不存在且本参数被省略，将返回空文本。



.子程序 系统_写配置项, 逻辑型, , 将指定文本内容写入指定配置项中或者删除指定的配置项或节，如果指定配置文件不存在，将会自动创建。成功返回真，失败返回假。
.参数 配置文件名, 文本型, , 指定配置文件的名称，通常以.ini作为文件名后缀。
.参数 节名称, 文本型, , 包含欲写入配置项所处节的名称。
.参数 配置项名称, 文本型, 可空, 可以被省略。参数值指定欲写入配置项在其节中的名称。如果参数值被省略，则删除指定节及其下的所有配置项。
.参数 欲写入值, 文本型, 可空, 可以被省略。参数值指定欲写入到指定配置项中的文本。如果参数值被省略，则删除所指定配置项。



.子程序 系统_取配置节名, 整数型, , 返回配置文件中所有已有节名的数量。
.参数 配置文件名, 文本型, , 指定配置文件的名称，通常以.ini作为文件名后缀。
.参数 返回的配置节名数组, 文本型, 数组, 返回指定配置文件中所有已有节名的文本数组。



.子程序 系统_取配置项名, 整数型, , 
.参数 配置文件名, 文本型, , 
.参数 节名称, 文本型, , 
.参数 返回的配置项名数组, 文本型, 数组, 



.子程序 系统_文件是否存在, 逻辑型, , 
.参数 欲测试的文件名称, 文本型, , 



.子程序 系统_取短路径, 文本型, , 
.参数 文件名, 文本型, , 



.子程序 环境_读环境变量, 文本型, , 
.参数 环境变量名称, 文本型, , 



.子程序 环境_写环境变量, 逻辑型, , 
.参数 环境变量名称, 文本型, , 
.参数 欲写入内容, 文本型, , 



.子程序 环境_取运行目录, 文本型, , 


.子程序 环境_取执行文件名, 文本型, , 


.子程序 环境_取命令行, 文本型, , 


.子程序 加解密_crc32, 文本型, , 用于取crc32，结果为16进制文本
.参数 原文, 字节集, , 要取CRC32数据字节集
.参数 是否为小写, 逻辑型, 可空, 默认为大写，为真小写。



.子程序 加解密_rc4, 字节集, , RC4加解密，与易的输出形式一样，可能和其它加解密程序输出形式不一样，可自行进行相应调整。
.参数 原文, 字节集, , 需要加、解密的字节集
.参数 密码, 文本型, , 输入相应的密码



.子程序 加解密_md5, 文本型, , 
.参数 原文, 字节集, , 要取数据摘要的字节集
.参数 是否为16位, 逻辑型, 可空, 默认为32位的，真为16位
.参数 是否为小写, 逻辑型, 可空, 默认为大写，真为小写



.子程序 加解密_md4, 文本型, , 
.参数 原文, 字节集, , 要取数据摘要的字节集
.参数 是否为16位, 逻辑型, 可空, 默认为32位的，真为16位
.参数 是否为小写, 逻辑型, 可空, 默认为大写，真为小写



.子程序 加解密_md2, 文本型, , 
.参数 原文, 字节集, , 要取数据摘要的字节集
.参数 是否为16位, 逻辑型, 可空, 默认为32位的，真为16位
.参数 是否为小写, 逻辑型, 可空, 默认为大写，真为小写



.子程序 加解密_sha1, 文本型, , 
.参数 原文, 字节集, , 要取数据摘要的字节集
.参数 是否为小写, 逻辑型, 可空, 默认为大写，真为小写



.子程序 编码转换_qp编码, 字节集, , 用于Quoted-Printable编码、URL编码
.参数 原文, 字节集, , 要进行编码的字节集
.参数 编码类型, 逻辑型, 可空, 真为URL，假为QP，默认为QP



.子程序 编码转换_qp解码, 字节集, , 用于Quoted-Printable解码,也可用来解码URL
.参数 原文, 字节集, , 要进行解码的字节集



.子程序 编码转换_base64编码, 字节集, , 未嵌汇编版
.参数 原文, 字节集, , 



.子程序 编码转换_base64解码, 字节集, , 未嵌汇编版
.参数 原文, 字节集, , 



.子程序 编码转换_Ansi转Unicode, 字节集, , 
.参数 Ansi文本, 文本型, , 



.子程序 编码转换_Unicode转Ansi, 文本型, , 
.参数 Unicode字节集, 字节集, , 



.子程序 编码转换_Utf8转unicode, 字节集, , 
.参数 utf8字节集, 字节集, , 



.子程序 编码转换_Unicode转utf8, 字节集, , 
.参数 Unicode字节集, 字节集, , 



.子程序 编码转换_Ansi转utf8, 字节集, , 
.参数 ansi文本, 文本型, , 



.子程序 编码转换_Utf8转ansi, 文本型, , 
.参数 utf8字节集, 字节集, , 



.子程序 编码转换_ansi转usc2, 文本型, , usc2也就是unicode be
.参数 文本, 文本型, , 



.子程序 编码转换_usc2转ansi, 文本型, , usc2也就是unicode be
.参数 usc2文本, 文本型, , 



.子程序 编码转换_GBK简体到GBK繁体, 文本型, , 
.参数 简体文本, 文本型, , 



.子程序 编码转换_GBK繁体到GBK简体, 文本型, , 
.参数 繁体文本, 文本型, , 



.子程序 编码转换_BIG5到GBK繁体, 文本型, , 
.参数 待转换文本, 文本型, , 



.子程序 编码转换_BIG5到GBK简体, 文本型, , 
.参数 待转换文本, 文本型, , 



.子程序 编码转换_GBK繁体到BIG5, 文本型, , 
.参数 待转换文本, 文本型, , 



.子程序 编码转换_GBK简体到BIG5, 文本型, , 
.参数 待转换文本, 文本型, , 



.子程序 创建映射文件, 整数型, , 创建内存映射文件。返回映像文件句柄
.参数 文件名称, 文本型, 可空, 欲创建内存映射文件的文件全路径名称。如果为空则不对应实际文件，可以做进程间共享内存，通过共享名称来访问。
.参数 是否创建, 逻辑型, , 是打开一个已经存在的文件还是创建一个新文件。真代表创建一个新文件，假代表打开一个已经存在的文件。
.参数 文件大小高位, 长整数型, , 欲创建内存映射文件的文件大小。如果是超大文件，请设置高位和低位，否则只要设置低位，高位设为0即可。
.参数 文件大小低位, 长整数型, , 欲创建内存映射文件的文件大小。如果是打开一个已经存在的文件，可以指定高位和低位的值为0，表示创建的内存映射文件大小和文件本身大小是一致的。
.参数 名称, 文本型, 可空, 可以被省略。创建内存映射文件的名称，该参数可以为空，表示创建一个没有名称的内存映射文件。其他进程可以通过该名称打开内存映射文件。



.子程序 打开映射文件, 整数型, , 打开一个其他进程创建的内存映射文件。返回映像文件地址。
.参数 名称, 文本型, , 其他进程创建的内存映射文件名称。



.子程序 映射到内存, 长整数型, , 将一个创建完毕的或已打开的内存映射文件的全部或一部分映射到进程的内存空间中。内存映像文件地址
.参数 映像文件句柄, 整数型, , 
.参数 起始位置, 长整数型, , 映射到内存的文件起始位置。注意该值一定要是系统分配内存的分配粒度。windows的分配粒度是64k，所以该值一定要是64k的倍数，否则会执行出错。起始位置的值从0开始。
.参数 大小, 整数型, , 映射到内存的字节数量。该值等于0代表从起始位置开始文件其余部分全部映射到内存。如果太大请配合起始位置进行分段映射。
.参数 读写方式, 逻辑型, , 真=读，假=写。



.子程序 读字节集数据, 字节集, , 从已经创建或打开的内存映射文件中读出数据，注意：使用该命令时一定要注意不能超过映射文件的边界，否则会造成非法的内存访问，意外退出。本命令为初级对象成员命令。
.参数 内存映像文件地址, 长整数型, , 
.参数 起始位置, 长整数型, , 从已经映射到内存的内存映射文件中读出的数据的起始位置。起始位置的值从0开始。
.参数 长度, 整数型, , 从已经映射到内存的内存映射文件中读出的数据的长度。



.子程序 读文本数据, 文本型, , 从已经创建或打开的内存映射文件中读出数据，注意：使用该命令时一定要注意不能超过映射文件的边界，否则会造成非法的内存访问，意外退出。本命令为初级对象成员命令。
.参数 内存映像文件地址, 长整数型, , 
.参数 起始位置, 长整数型, , 起始位置的值从0开始。



.子程序 写数据, 空白型, , 向已经创建或打开的内存映射文件中写入数据，注意：使用该命令时一定要注意不能超过映射文件的边界，否则会造成非法的内存访问，意外退出。本命令为初级对象成员命令。
.参数 内存映像文件地址, 长整数型, , 
.参数 起始位置, 长整数型, , 向内存映射文件中写入的数据的起始位置。起始位置的值从0开始。
.参数 数据, 字节集, , 欲写入的数据。注意写数据时，数据的长度不能超过映射文件的边界。



.子程序 解除映射, 空白型, , “映射到内存”方法的反操作，将已经映射到内存的文件解除映射。本命令为初级对象成员命令。
.参数 内存映像文件地址, 长整数型, , 



.子程序 关闭映射文件, 空白型, , 关闭已经创建或打开的内存映射文件。本命令为初级对象成员命令。
.参数 内存映像文件句柄, 整数型, , 



.子程序 取大文件长度, 空白型, , 
.参数 文件名, 文本型, , 
.参数 文件大小高位, 长整数型, 参考 可空, 如果是超大文件会返回高位
.参数 文件大小低位, 长整数型, 参考, 一般文件只返回低位



.子程序 取低层平台信息, 空白型, , 
.参数 系统信息, 低层平台信息系统信息, 参考, 



.子程序 设COOKIE, 逻辑型, , 1.1
.参数 网址, 文本型, , 
.参数 COOKIE名称, 文本型, 可空, 为空清除所有
.参数 COOKIE内容, 文本型, 可空, 为空清除
.参数 有效期, 日期时间型, 可空, 为空不保存



.子程序 取COOKIE, 文本型, , 
.参数 网址, 文本型, , 
.参数 COOKIE名称, 文本型, 可空, 为空返回全部COOKIE



.子程序 清除COOKIE, 逻辑型, , 
.参数 域名, 文本型, , 



.子程序 转换为GMT格式, 文本型, , 将日期时间型数据转换为GMT格式
.参数 待转换时间, 日期时间型, , 



.子程序 取现行时间_斩月, 日期时间型, , 返回当前系统日期及时间。   by--888888


.子程序 取星期几_斩月, 整数型, , 返回一个值为 1 到 7 之间的整数，表示一个星期中的某一日。星期日为 1，星期一为 2，依此类推。   by--888888
.参数 时间, 日期时间型, , 



.子程序 取年份_斩月, 整数型, , 返回一个值为 100 到 9999 之间的整数，表示指定时间中的年份。   by--888888
.参数 时间, 日期时间型, , 



.子程序 取月份_斩月, 整数型, , 返回一个值为 1 到 12 之间的整数，表示指定时间中的月份。   by--888888
.参数 时间, 日期时间型, , 



.子程序 取日_斩月, 整数型, , 返回一个值为 1 到 31 之间的整数，表示一个月中的某一日。   by--888888
.参数 时间, 日期时间型, , 



.子程序 取小时_斩月, 整数型, , 返回一个值为 0 到 23 之间的整数，表示一天中的某一小时。   by--888888
.参数 时间, 日期时间型, , 



.子程序 取分钟_斩月, 整数型, , 返回一个值为 0 到 59 之间的整数，表示一小时中的某一分钟。   by--888888
.参数 时间, 日期时间型, , 



.子程序 取秒_斩月, 整数型, , 返回一个值为 0 到 59 之间的整数，表示一分钟中的某一秒。   by--888888
.参数 时间, 日期时间型, , 



.子程序 取毫秒_斩月, 整数型, , 取当前时间的毫秒   by--888888
.参数 时间, 日期时间型, , 



.子程序 取日期_斩月, 日期时间型, , 返回一个日期时间型数据的日期部分，其小时、分钟、秒被固定设置为0时0分0秒。   by--888888
.参数 时间, 日期时间型, , 



.子程序 取时间_斩月, 日期时间型, , 返回一个日期时间型数据的时间部分，其年、月、日被固定设置为2000年1月1日。   by--888888
.参数 时间, 日期时间型, , 



.子程序 时间到文本_斩月, 文本型, , 将指定时间转换为文本并返回。   by--888888
.参数 欲转换到文本的时间, 日期时间型, , .
.参数 转换部分, 整数型, 可空, 1、#全部转换； 2、#日期部分； 3、#时间部分。



.程序集 __HIDDEN_TEMP_MOD__, , , 

.子程序 环境_取执行文件名, 文本型, , 


.子程序 环境_取运行目录, 文本型, , 


.子程序 环境_取命令行, 文本型, , 包含了执行文件的全路径名


.子程序 字节集_取空白, 字节集, , 
.参数 长度, 整数型, , 



.子程序 字节集_取长度, 整数型, , 
.参数 字节集参数, 字节集, , 



.子程序 字节集_取左边, 字节集, , 返回一个字节集，其中包含指定字节集中从左边算起指定数量的字节
.参数 欲取其部分的字节集, 字节集, , 
.参数 欲取出字节的数目, 整数型, , 



.子程序 字节集_取右边, 字节集, , 返回一个字节集，其中包含指定字节集中从右边算起指定数量的字节
.参数 欲取其部分的字节集, 字节集, , 
.参数 欲取出字节的数目, 整数型, , 



.子程序 字节集_取中间, 字节集, , 返回一个字节集，其中包含指定字节集中从指定位置算起指定数量的字节
.参数 欲取其部分的字节集, 字节集, , 
.参数 起始取出位置, 整数型, , 1为首位置，2为第2个位置，如此类推。
.参数 欲取出字节的数目, 整数型, , 



.子程序 字节集_到十进制文本显示, 文本型, , 将字节集中每一位字节按十进制文本以“,”分隔方式显示，便于查看字节集内容
.参数 欲文本显示的字节集, 字节集, , 



.子程序 字节集_到文本, 文本型, , 从字节集数据中返回一个以字节0结束的文本,
.参数 要转换的字节集, 字节集, , 



.子程序 字节集_寻找, 整数型, , 返回一字节集在另一字节集中最先出现的位置，位置值从 1 开始。如果未找到，返回 -1
.参数 被搜寻的字节集, 字节集, , 
.参数 欲寻找的字节集, 字节集, , 
.参数 起始搜寻位置, 整数型, 可空, 



.子程序 字节集_分割, 整数型, , 返回实际的数组成员数
.参数 待分割字节集, 字节集, , 如果参数值是一个长度为零的字节集，则返回一个空数组，即没有任何成员的数组
.参数 用作分割的字节集, 字节集, 可空, 可以被省略。用于标识子字节集边界。本参数如果被省略，则默认使用字节 0 作为分隔符。
.参数 要返回的子字节集数目, 整数型, 可空, 可以被省略。如果被省略或小于等于0，则默认返回所有的子字节集。
.参数 返回的字节集数组, 字节集, 参考 数组, 将指定字节集进行分割，分割后的一维字节集数组以参考方式传递



.子程序 字节集_子替换, 字节集, , 返回一个字节集，该字节集中指定的子字节集已被替换成另一子字节集，并且替换发生的次数也是被指定的
.参数 欲被替换的字节集, 字节集, , 
.参数 欲被替换的子字节集, 字节集, , 
.参数 用作替换的子字节集, 字节集, 可空, 可以被省略。如果省略本参数，则默认为空字节集
.参数 进行替换的起始位置, 整数型, 可空, 可以被省略。被替换子字节集的起始搜索位置。如果省略，默认从1开始。
.参数 替换进行的次数, 整数型, 可空, 可以被省略。对子字节集进行替换的次数。如果省略，默认进行所有可能的替换。



.子程序 字节集_取指针, 整数型, , 
.参数 欲取指针的字节集, 字节集, , 



.子程序 数值_求次方, 双精度小数型, , 
.参数 欲求次方数值, 双精度小数型, , 
.参数 次方数, 整数型, , 



.子程序 数值_十进制文本到整数, 整数型, , 文本到整数
.参数 文本, 文本型, , 



.子程序 数值_十六进制文本到整数, 长整数型, , 64Bit位整数
.参数 十六进制文本, 文本型, , 前面不能为十六进制标志"0x"



.子程序 数值_求余, 整数型, , 
.参数 被除数, 双精度小数型, , 
.参数 除数, 双精度小数型, , 



.子程序 数值_整除, 整数型, , 
.参数 被除数, 双精度小数型, , 
.参数 除数, 双精度小数型, , 



.子程序 数值_取低字, 整数型, , LOWORD
.参数 参数, 整数型, , 



.子程序 数值_取高字, 整数型, , HIWORD
.参数 参数, 整数型, , 



.子程序 字节数组_到文本, 文本型, , 将一个字节数组转换为文本
.参数 参数, 字节型, 数组, 



.子程序 字节_取指针, 整数型, , 
.参数 欲取指针的字节, 字节型, 参考, 



.子程序 整型_取指针, 整数型, , 
.参数 欲取指针的整数, 整数型, 参考, 



.子程序 系统_取计算机名, 文本型, , 


.子程序 系统_取用户名, 文本型, , 


.子程序 系统_信息框, 整数型, , 
.参数 信息框内容, 文本型, , 
.参数 信息框样式, 整数型, 可空, 
.参数 信息框标题, 文本型, 可空, 



.子程序 系统_执行, 空白型, ,  查找与指定文件关联在一起的程序的文件名
.参数 父窗口句柄, 整数型, 可空, 
.参数 打开方式, 整数型, 可空, 为下常量值　1:#编辑文档,2:#浏览文件夹,3:#寻找文件,4:#打开文件,可以运行可执行程序,5:#打印文档，默认为4
.参数 要执行的文件或链接, 文本型, , 
.参数 命令行参数, 文本型, 可空, 当参数1为可执行文件时,这里可以填命令行参数
.参数 文件全路径, 文本型, 可空, 
.参数 窗口显示方式, 整数型, 可空, 0为隐藏,1普通激活



.子程序 系统_取鼠标X位置, 整数型, , 


.子程序 系统_取鼠标Y位置, 整数型, , 


.子程序 系统_取启动时间, 整数型, , 


.子程序 系统_多文件对话框, 文本型, , 如果为打开文件对话框，多选文件时，返回文件路径以“;”(半角分号)分隔。失败或取消返回空文本。
.参数 窗口句柄, 整数型, 可空, 调用处窗口句柄
.参数 窗口标题, 文本型, 可空, 对话框窗口标题
.参数 过滤器, 文本型, 可空, 格式：“MP3文件(*.mp3)|*.mp3|媒体文件(*.mpg)|*.mpg”
.参数 初始路径, 文本型, 可空, 如果本参数被省略，默认从“我的文档”开始。否则，请给出盘符，如“d:”
.参数 窗口风格, 整数型, 可空, 如果本参数被省略，默认为 0 。位置值从 0 开始。从0－11之间，可以设置多种窗口风格。0.工具栏、只读选择框－未选中；1.工具栏、只读选择框－选中；2.工具栏；3.工具栏、只读选择框－未选中，帮助按钮；4.工具栏、只读选择框－选中，帮助按钮；5.工具栏，帮助按钮；6.普通风格、只读选择框－未选中；7.普通风格、只读选择框－选中；8.普通风格；9.普通风格、只读选择框－未选中，帮助按钮；10.普通风格、只读选择框－选中，帮助按钮；11.普通风格、帮助按钮。
.参数 对话框类型, 整数型, 可空, 如果本参数被省略，默认为0,0为打开文件，1为保存文件



.子程序 系统_取颜色值, 整数型, , RGB 替代核心库中的 取颜色值(r,g,b)命令
.参数 R, 字节型, , 
.参数 G, 字节型, , 
.参数 B, 字节型, , 



.子程序 系统_载入指定位图, 整数型, , 载入指定BMP图片文件,返回位图句柄
.参数 位图名称, 文本型, , 



.子程序 系统_设置字体, 空白型, , 给指定的窗口设置字体
.参数 参窗口句柄, 整数型, , 
.参数 参字体名, 文本型, , 
.参数 参字号大小, 整数型, 可空, 



.子程序 文本_取空白, 文本型, , 
.参数 长度, 整数型, , 



.子程序 文本_取长度, 整数型, , 取文本型数据的长度，不包含结束0
.参数 文本数据, 文本型, , 参数值指定欲检查其长度的文本数据



.子程序 文本_取左边, 文本型, , 返回一个文本，其中包含指定文本中从左边算起指定数量的字符
.参数 欲取其部分的文本, 文本型, , 
.参数 欲取出字符的数目, 整数型, , 



.子程序 文本_取右边, 文本型, , 返回一个文本，其中包含指定文本中从右边算起指定数量的字符
.参数 欲取其部分的文本, 文本型, , 
.参数 欲取出字符的数目, 整数型, , 



.子程序 文本_取中间, 文本型, , 返回一个文本，其中包含指定文本中从右边算起指定数量的字符
.参数 欲取其部分的文本, 文本型, , 返回一个文本，其中包含指定文本中从指定位置算起指定数量的字符
.参数 起始取出位置, 整数型, , 
.参数 欲取出字符的数目, 整数型, , 



.子程序 文本_寻找, 整数型, , 返回一个整数值，指定一文本在另一文本中最先出现的位置，位置值从 1 开始。如果未找到，返回-1
.参数 被搜寻的文本, 文本型, , 
.参数 欲寻找的文本, 文本型, , 
.参数 起始搜寻位置, 整数型, 可空, 可以被省略。位置值从 1 开始。如果本参数被省略，默认为 1
.参数 是否不区分大小写, 逻辑型, 可空, 初始值为“假”。为真不区分大小写，为假区分



.子程序 文本_子替换, 文本型, , 返回一个整数值，指定一文本在另一文本中最先出现的位置，位置值从 1 开始。如果未找到，返回-1
.参数 欲被替换的文本, 文本型, , 
.参数 欲被替换的子文本, 文本型, , 
.参数 用作替换的子文本, 文本型, 可空, 可以被省略。如果本参数被省略，默认为空文本
.参数 起始搜寻位置, 整数型, 可空, 可以被省略。位置值从 1 开始。如果本参数被省略，默认为 1
.参数 替换进行的次数, 整数型, 可空, 可以被省略。参数值指定对子文本进行替换的次数。如果省略，默认进行所有可能的替换
.参数 是否不区分大小写, 逻辑型, 可空, 初始值为“假”。为真不区分大小写，为假区分



.子程序 文本_分割, 整数型, , 返回实际的组数
.参数 待分割文本, 文本型, , 如果参数值是一个长度为零的文本，则返回一个空数组，即没有任何成员的数组
.参数 用作分割的文本, 文本型, 可空, 可以被省略。参数值用于标识子文本边界。如果被省略，则默认使用半角逗号字符作为分隔符。如果是一个长度为零的文本，则返回的数组仅包含一个成员，即完整的“待分割文本”
.参数 要返回的子文本数目, 整数型, 可空, 可以被省略。如果被省略，则默认返回所有的子文本
.参数 返回的文本数组, 文本型, 参考 数组, 将指定文本进行分割，分割后的一维字节集数组以参考方式传递



.子程序 文本_删首尾空, 文本型, , 
.参数 文本, 文本型, , 



.子程序 文本_到小写, 文本型, , 
.参数 欲转换文本, 文本型, , 



.子程序 文本_到大写, 文本型, , 
.参数 欲转换文本, 文本型, , 



.子程序 文本_到字节集, 字节集, , 
.参数 欲转换文本, 文本型, , 



.子程序 文本_取指针, 整数型, , 
.参数 欲取指针的文本, 文本型, , 



.子程序 磁盘_取当前目录, 文本型, , 


.子程序 系统_取屏幕宽度, 整数型, , 


.子程序 系统_取屏幕高度, 整数型, , 


.子程序 字节集_到整数, 整数型, , 
.参数 参数字节集, 字节集, , 



.子程序 字节集_到短整数, 整数型, , 
.参数 参数字节集, 字节集, , 



.子程序 字节集_倒找, 整数型, , 返回一字节集在另一字节集中最先出现的位置，位置值从 1 开始。如果未找到，返回 -1
.参数 被搜寻的字节集, 字节集, , 
.参数 欲寻找的字节集, 字节集, , 
.参数 起始搜寻位置, 整数型, 可空, 



.子程序 文本_倒找, 整数型, , 返回一个整数值，指定一文本在另一文本中最先出现的位置，位置值从 1 开始。如果未找到，返回-1
.参数 被搜寻的文本, 文本型, , 
.参数 欲寻找的文本, 文本型, , 
.参数 起始搜寻位置, 整数型, 可空, 可以被省略。位置值从 1 开始。如果本参数被省略，默认为 1
.参数 是否不区分大小写, 逻辑型, 可空, 初始值为“假”。为真不区分大小写，为假区分



.子程序 系统_取现行时间, 文本型, , 


.子程序 字节集_替换, 字节集, , 返回一个字节集，该字节集中指定的子字节集已被替换成另一子字节集，并且替换发生的次数也是被指定的
.参数 欲被替换的字节集, 字节集, , 
.参数 进行替换的起始位置, 整数型, 可空, 可以被省略。被替换子字节集的起始搜索位置。如果省略，默认从1开始。
.参数 进行替换长度, 整数型, , 
.参数 用作替换的子字节集, 字节集, 可空, 如果本参数被省略，则删除字节集中的指定部分



.子程序 系统_取文本注册项, 文本型, , 在 Windows 注册表中返回指定的文本类型注册表项值。如欲读取注册项默认值，请在项目名后加“\”号，如“test\”
.参数 根目录, 整数型, 可空, 1、#根类； 2、#现行设置； 3、#现行用户； 4、#本地机器； 5、#所有用户,默认为3,#现行用户
.参数 全路径注册项名, 文本型, , 
.参数 默认文本, 文本型, 可空, 如果指定的注册表项不存在，将返回此默认文本。如果指定的注册表项不存在且本参数被省略，将返回一个长度为 0 的空文本。



.子程序 系统_写文本注册项, 逻辑型, , 
.参数 根目录, 整数型, 可空, 1、#根类； 2、#现行设置； 3、#现行用户； 4、#本地机器； 5、#所有用户,默认为3,#现行用户
.参数 全路径注册项名, 文本型, , 
.参数 欲写入文本, 文本型, 可空, 如果指定的注册表项不存在，将返回此默认文本。如果指定的注册表项不存在且本参数被省略，将返回一个长度为 0 的空文本。
.参数 类型, 整数型, 可空, 默认为1(REG_SZ 字符串),2(REG_EXPAND_SZ 可扩充字符串值),7(REG_MULTI_SZ 多字符串值)



.子程序 系统_取配置节名, 整数型, , 返回所有已有节名的文本的数目
.参数 配置文件名, 文本型, , 定配置文件的名称，通常以.ini作为文件名后缀
.参数 配置节名组, 文本型, 参考 数组, 收参考方式返回配置文件中所有已有节名的文本数组



.子程序 系统_读配置项, 文本型, , 读取指定配置文件中指定项目的文本内容
.参数 配置文件名, 文本型, , 指定配置文件的名称，通常以.ini作为文件名后缀
.参数 节名称, 文本型, , 包含欲读入配置项所处节的名称。
.参数 配置项名称, 文本型, , 参数值指定欲读入配置项在其节中的名称。
.参数 默认文本, 文本型, 可空, 可以被省略。如果指定配置项不存在，将返回此默认文本。如果指定配置项不存在且本参数被省略，将返回空文本。



.子程序 系统_写配置项, 逻辑型, , 
.参数 配置文件名, 文本型, , 指定配置文件的名称，通常以.ini作为文件名后缀,如果没有指定完整路径名，则windows会在windows目录查找文件。如果文件没有找到，则函数会创建它
.参数 节名称, 文本型, , 包含欲读入配置项所处节的名称。
.参数 配置项名称, 文本型, 可空, 可以被省略。参数值指定欲写入配置项在其节中的名称。如果参数值被省略，则删除指定节及其下的所有配置项
.参数 欲写入值, 文本型, 可空, 可以被省略。参数值指定欲写入到指定配置项中的文本。如果参数值被省略，则删除所指定配置项



.子程序 系统_处理事件, 空白型, , 


.子程序 系统_延时, 空白型, , 
.参数 延时时间, 整数型, , 毫秒



.子程序 系统_取错误文本, 文本型, , 
.参数 错误码, 整数型, 可空, 为空是取最后错误文本,不为空是按错误码返错误文本



.子程序 文本_字符, 文本型, , 
.参数 字节, 字节型, , 



.子程序 系统_动态调用, 整数型, , 
.参数 函数地址, 整数型, , 
.参数 参数, 整数型, 参考 可空 数组, 为整数数组，参数1为成员1…类推；文本型和字节集型（自定义结构）为指针
.参数 call方式, 逻辑型, 可空, 真为cdecl调用方式，假为stdcall调用方式（即标准WINAPI方式）,默认为假



.子程序 整数_到文本, 文本型, , 
.参数 欲转换为文本的数值, 整数型, , 



.子程序 系统_申请内存, 整数型, , 成功返回内存指针，错误返为0,即空指针,释放由该函数申请的内存，必须用“系统_释放内存（）”来释放
.参数 内存大小, 整数型, , 



.子程序 系统_释放内存, 整数型, , 释放由"系统_释放内存（）"成功返回内存指针的的内存
.参数 内存指针, 整数型, , 该内存指针为“系统_申请内存（）”成功返回的指针



.子程序 系统_浏览文件夹, 文本型, , 成功返回文件夹名，失败返回空文本
.参数 父窗口句柄, 整数型, 可空, 
.参数 显示标题, 文本型, 可空, 
.参数 同时显示文件, 逻辑型, 可空, 值为假,只显示文件夹，默认为假,为真时同时显示文件和文件夹



.子程序 整数_到字节集, 字节集, , 
.参数 欲转换为字节集的整数, 整数型, , 



.子程序 系统_取操作系统类别, 整数型, , 0、未知； 1、Windows 32S； 2、Windows 9X (包含Win95、Win98、WinME等)； 3、Windows NT (包含WinNT、Win2000、WinXP等),错误返回-1,


.子程序 系统_颜色选择框, 整数型, , 返回颜色值
.参数 父窗口句柄, 整数型, , 



.子程序 系统_字体选择框, 整数型, , 
.参数 父窗口句柄, 整数型, , 
.参数 返回结果, 模块_字体信息, 参考, 接收返回的字体信息



.子程序 系统_子程序指针, 整数型, , 返回一个E子程序指针的指针
.参数 子程序指针, 子程序指针, , 



.子程序 环境_读环境变量, 文本型, , 返回文本，它关连于一个操作系统环境变量。成功时返回所取得的值，失败则返回空文本
.参数 环境变量名称, 文本型, , 



.子程序 环境_写环境变量, 逻辑型, , 返回文本，它关连于一个操作系统环境变量。成功时返回所取得的值，失败则返回空文本
.参数 环境变量名称, 文本型, , 
.参数 环境变量内容, 文本型, 可空, 默认为“”，如果为空，则为清除该环境变量



.类模块 类_窗口, , , 

.子程序 方法_可视, 逻辑型, , 
.参数 是否可视, 逻辑型, 可空, 



.子程序 方法_是否已创建, 逻辑型, , 


.子程序 方法_标题, 文本型, , 
.参数 文本内容, 文本型, 可空, 



.子程序 方法_取句柄, 整数型, , 


.子程序 方法_移动, 空白型, , 
.参数 左边, 整数型, 可空, 
.参数 顶边, 整数型, 可空, 
.参数 宽度, 整数型, 可空, 
.参数 高度, 整数型, 可空, 



.子程序 方法_取宽度, 整数型, , 


.子程序 方法_取高度, 整数型, , 


.子程序 方法_取左边, 整数型, , 


.子程序 方法_取顶边, 整数型, , 


.子程序 方法_禁止, 逻辑型, , 
.参数 禁止, 逻辑型, 可空, 



.子程序 事件_鼠标左键被按下, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标左键被放开, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_被双击, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标右键被按下, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标右键被放开, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标位置被移动, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_获取焦点, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_失去焦点, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_按下某键, 空白型, , 
.参数 事件程序, 子程序指针, , 子程序必须有4个整型参数,第一个参数为键代码,每二个参数为功能键状态,其余两个参数备用



.子程序 事件_放开某键, 空白型, , 
.参数 事件程序, 子程序指针, , 子程序必须有4个整型参数,第一个参数为键代码,每二个参数为功能键状态,其余两个参数备用



.子程序 方法_创建, 整数型, , 
.参数 父窗口句柄, 整数型, 可空, 传入一个非ZCL创建的窗口作为父时，请在窗口句柄前面加个“-”,即为负整数，类库将会根据此值判断是否为ZCL创建的窗口还是外窗口的，为0表示桌面窗口为父
.参数 标题, 文本型, 可空, 窗口的标题
.参数 左边, 整数型, 可空, 
.参数 顶边, 整数型, 可空, 
.参数 宽度, 整数型, 可空, 窗口高度
.参数 高度, 整数型, 可空, 窗口宽度
.参数 菜单句柄, 整数型, 可空, 窗口上要出现的菜单句柄
.参数 窗口风格, 整数型, 可空, 为空默认带最大化\最小化按钮\普通可调边框\带系统菜单\可拖动大小
.参数 可视, 逻辑型, 可空, 窗口创建完比立即显示,默认为真
.参数 窗口创建完毕子程序, 子程序指针, 可空, 



.子程序 方法_总在最前, 逻辑型, , 
.参数 是否总在最前, 逻辑型, 可空, 



.子程序 方法_位置, 空白型, , 
.参数 位置, 整数型, 可空, 0为通常,1为居中,2为最小化,3为最大化



.子程序 事件_尺寸被改变, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_将被消毁, 空白型, , 
.参数 事件程序, 子程序指针, , 



.类模块 类_菜单, , , 

.子程序 方法_创建, 空白型, , 
.参数 菜单名称, 文本型, , 



.子程序 方法_添加菜单项, 整数型, , 返回菜单项的标识数字
.参数 菜单名称, 文本型, , 
.参数 项目属性, 整数型, , 
.参数 子菜单句柄, 整数型, , 
.参数 菜单项文本, 文本型, , 



.子程序 方法_取句柄, 整数型, , 


.子程序 事件_被选择, 整数型, , 
.参数 菜单项标识, 整数型, , 
.参数 事件子程序, 子程序指针, , 



.子程序 方法_弹出菜单, 空白型, , 
.参数 句柄, 整数型, , 



.子程序 方法_置窗口, 空白型, , 
.参数 窗口句柄, 整数型, , 



.类模块 类_工具条, , , 

.子程序 方法_可视, 逻辑型, , 
.参数 是否可视, 逻辑型, 可空, 



.子程序 方法_是否已创建, 逻辑型, , 


.子程序 方法_标题, 文本型, , 
.参数 文本内容, 文本型, 可空, 



.子程序 方法_取句柄, 整数型, , 


.子程序 方法_移动, 空白型, , 
.参数 左边, 整数型, 可空, 
.参数 顶边, 整数型, 可空, 
.参数 宽度, 整数型, 可空, 
.参数 高度, 整数型, 可空, 



.子程序 方法_取宽度, 整数型, , 


.子程序 方法_取高度, 整数型, , 


.子程序 方法_取左边, 整数型, , 


.子程序 方法_取顶边, 整数型, , 


.子程序 方法_禁止, 逻辑型, , 
.参数 禁止, 逻辑型, 可空, 



.子程序 事件_鼠标左键被按下, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标左键被放开, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_被双击, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标右键被按下, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标右键被放开, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标位置被移动, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_获取焦点, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_失去焦点, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_按下某键, 空白型, , 
.参数 事件程序, 子程序指针, , 子程序必须有4个整型参数,第一个参数为键代码,每二个参数为功能键状态,其余两个参数备用



.子程序 事件_放开某键, 空白型, , 
.参数 事件程序, 子程序指针, , 子程序必须有4个整型参数,第一个参数为键代码,每二个参数为功能键状态,其余两个参数备用



.子程序 方法_创建, 整数型, , 
.参数 父窗口句柄, 整数型, , 传入一个非ZCL创建的窗口作为父时，请在窗口句柄前面加个“-”,即为负整数，类库将会根据此值判断是否为ZCL创建的窗口还是外窗口的，为0表示桌面窗口为父
.参数 位图模块句柄, 整数型, 可空, 
.参数 位图标识或位图句柄, 整数型, 可空, 
.参数 宽度, 整数型, 可空, 
.参数 高度, 整数型, 可空, 



.子程序 方法_添置按钮, 整数型, , 返回索引号,此方法放在"创建"之前
.参数 位图编号, 整数型, , 
.参数 类型, 整数型, , 
.参数 提示文本, 文本型, , 



.子程序 方法_复选钮选中, 空白型, , 
.参数 索引号, 整数型, , 索引从0开始



.子程序 方法_复选钮取消, 空白型, , 
.参数 索引号, 整数型, , 索引从0开始



.子程序 方法_按钮允许, 空白型, , 
.参数 索引号, 整数型, , 索引从0开始



.子程序 方法_按钮禁止, 空白型, , 
.参数 索引号, 整数型, , 索引从0开始



.子程序 方法_复选钮是否按下, 逻辑型, , 
.参数 索引号, 整数型, , 索引从0开始



.子程序 方法_是否允许, 逻辑型, , 
.参数 索引号, 整数型, , 索引从0开始



.子程序 方法_连接位图列表, 逻辑型, , 此方法放在"创建"之后
.参数 位图列表句柄, 整数型, , 



.子程序 事件_被单击, 空白型, , 
.参数 按钮索引, 整数型, , 
.参数 事件程序, 子程序指针, , 



.类模块 类_位图, , , 

.子程序 方法_创建, 整数型, , 
.参数 位图宽度, 整数型, , 
.参数 位图高度, 整数型, , 



.子程序 方法_加入位图, 整数型, , 加入指定BMP文件,返回位图索引
.参数 位图名称, 文本型, , 
.参数 宽度, 整数型, , 
.参数 高度, 整数型, , 



.子程序 方法_从模块加入位图, 整数型, , 从指定模块文件资源中加入位图
.参数 模块名称, 文本型, , 
.参数 位图标识, 整数型, , 可以用资源编辑软件查看标识号



.子程序 方法_取句柄, 整数型, , 


.类模块 类_按钮, , , 

.子程序 方法_可视, 逻辑型, , 
.参数 是否可视, 逻辑型, 可空, 



.子程序 方法_是否已创建, 逻辑型, , 


.子程序 方法_标题, 文本型, , 
.参数 文本内容, 文本型, 可空, 



.子程序 方法_取句柄, 整数型, , 


.子程序 方法_移动, 空白型, , 
.参数 左边, 整数型, 可空, 
.参数 顶边, 整数型, 可空, 
.参数 宽度, 整数型, 可空, 
.参数 高度, 整数型, 可空, 



.子程序 方法_取宽度, 整数型, , 


.子程序 方法_取高度, 整数型, , 


.子程序 方法_取左边, 整数型, , 


.子程序 方法_取顶边, 整数型, , 


.子程序 方法_禁止, 逻辑型, , 
.参数 禁止, 逻辑型, 可空, 



.子程序 事件_鼠标左键被按下, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标左键被放开, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_被双击, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标右键被按下, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标右键被放开, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标位置被移动, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_获取焦点, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_失去焦点, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_按下某键, 空白型, , 
.参数 事件程序, 子程序指针, , 子程序必须有4个整型参数,第一个参数为键代码,每二个参数为功能键状态,其余两个参数备用



.子程序 事件_放开某键, 空白型, , 
.参数 事件程序, 子程序指针, , 子程序必须有4个整型参数,第一个参数为键代码,每二个参数为功能键状态,其余两个参数备用



.子程序 方法_创建, 整数型, , 
.参数 父窗口句柄, 整数型, , 传入一个非ZCL创建的窗口作为父时，请在窗口句柄前面加个“-”,即为负整数，类库将会根据此值判断是否为ZCL创建的窗口还是外窗口的，为0表示桌面窗口为父
.参数 标题, 文本型, 可空, 
.参数 左边, 整数型, 可空, 
.参数 顶边, 整数型, 可空, 
.参数 宽度, 整数型, 可空, 
.参数 高度, 整数型, 可空, 
.参数 类型, 整数型, 可空, 类型常量:#常用_普通按钮,#常用_默认按钮



.子程序 事件_被单击, 空白型, , 
.参数 事件程序, 子程序指针, , 



.类模块 类_单选框, , , 

.子程序 方法_可视, 逻辑型, , 
.参数 是否可视, 逻辑型, 可空, 



.子程序 方法_是否已创建, 逻辑型, , 


.子程序 方法_标题, 文本型, , 
.参数 文本内容, 文本型, 可空, 



.子程序 方法_取句柄, 整数型, , 


.子程序 方法_移动, 空白型, , 
.参数 左边, 整数型, 可空, 
.参数 顶边, 整数型, 可空, 
.参数 宽度, 整数型, 可空, 
.参数 高度, 整数型, 可空, 



.子程序 方法_取宽度, 整数型, , 


.子程序 方法_取高度, 整数型, , 


.子程序 方法_取左边, 整数型, , 


.子程序 方法_取顶边, 整数型, , 


.子程序 方法_禁止, 逻辑型, , 
.参数 禁止, 逻辑型, 可空, 



.子程序 事件_鼠标左键被按下, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标左键被放开, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_被双击, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标右键被按下, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标右键被放开, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标位置被移动, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_获取焦点, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_失去焦点, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_按下某键, 空白型, , 
.参数 事件程序, 子程序指针, , 子程序必须有4个整型参数,第一个参数为键代码,每二个参数为功能键状态,其余两个参数备用



.子程序 事件_放开某键, 空白型, , 
.参数 事件程序, 子程序指针, , 子程序必须有4个整型参数,第一个参数为键代码,每二个参数为功能键状态,其余两个参数备用



.子程序 方法_创建, 整数型, , 
.参数 父窗口句柄, 整数型, , 传入一个非ZCL创建的窗口作为父时，请在窗口句柄前面加个“-”,即为负整数，类库将会根据此值判断是否为ZCL创建的窗口还是外窗口的，为0表示桌面窗口为父
.参数 标题, 文本型, 可空, 
.参数 左边, 整数型, 可空, 
.参数 顶边, 整数型, 可空, 
.参数 宽度, 整数型, 可空, 
.参数 高度, 整数型, 可空, 



.子程序 方法_选中, 逻辑型, , 
.参数 选中, 逻辑型, 可空, 



.子程序 事件_被单击, 空白型, , 
.参数 事件程序, 子程序指针, , 



.类模块 类_选择框, , , 

.子程序 方法_可视, 逻辑型, , 
.参数 是否可视, 逻辑型, 可空, 



.子程序 方法_是否已创建, 逻辑型, , 


.子程序 方法_标题, 文本型, , 
.参数 文本内容, 文本型, 可空, 



.子程序 方法_取句柄, 整数型, , 


.子程序 方法_移动, 空白型, , 
.参数 左边, 整数型, 可空, 
.参数 顶边, 整数型, 可空, 
.参数 宽度, 整数型, 可空, 
.参数 高度, 整数型, 可空, 



.子程序 方法_取宽度, 整数型, , 


.子程序 方法_取高度, 整数型, , 


.子程序 方法_取左边, 整数型, , 


.子程序 方法_取顶边, 整数型, , 


.子程序 方法_禁止, 逻辑型, , 
.参数 禁止, 逻辑型, 可空, 



.子程序 事件_鼠标左键被按下, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标左键被放开, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_被双击, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标右键被按下, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标右键被放开, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标位置被移动, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_获取焦点, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_失去焦点, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_按下某键, 空白型, , 
.参数 事件程序, 子程序指针, , 子程序必须有4个整型参数,第一个参数为键代码,每二个参数为功能键状态,其余两个参数备用



.子程序 事件_放开某键, 空白型, , 
.参数 事件程序, 子程序指针, , 子程序必须有4个整型参数,第一个参数为键代码,每二个参数为功能键状态,其余两个参数备用



.子程序 方法_创建, 整数型, , 
.参数 父窗口句柄, 整数型, , 传入一个非ZCL创建的窗口作为父时，请在窗口句柄前面加个“-”,即为负整数，类库将会根据此值判断是否为ZCL创建的窗口还是外窗口的，为0表示桌面窗口为父
.参数 标题, 文本型, 可空, 
.参数 左边, 整数型, 可空, 
.参数 顶边, 整数型, 可空, 
.参数 宽度, 整数型, 可空, 
.参数 高度, 整数型, 可空, 
.参数 类型, 整数型, 可空, 



.子程序 方法_选中, 整数型, , 0为不选中,1为选中,>2为预选中
.参数 选中, 整数型, 可空, 0为不选中,1为选中,>2为预选中



.子程序 事件_被单击, 空白型, , 
.参数 事件程序, 子程序指针, , 



.类模块 类_分组框, , , 

.子程序 方法_可视, 逻辑型, , 
.参数 是否可视, 逻辑型, 可空, 



.子程序 方法_是否已创建, 逻辑型, , 


.子程序 方法_标题, 文本型, , 
.参数 文本内容, 文本型, 可空, 



.子程序 方法_取句柄, 整数型, , 


.子程序 方法_移动, 空白型, , 
.参数 左边, 整数型, 可空, 
.参数 顶边, 整数型, 可空, 
.参数 宽度, 整数型, 可空, 
.参数 高度, 整数型, 可空, 



.子程序 方法_取宽度, 整数型, , 


.子程序 方法_取高度, 整数型, , 


.子程序 方法_取左边, 整数型, , 


.子程序 方法_取顶边, 整数型, , 


.子程序 方法_禁止, 逻辑型, , 
.参数 禁止, 逻辑型, 可空, 



.子程序 事件_鼠标左键被按下, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标左键被放开, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_被双击, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标右键被按下, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标右键被放开, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标位置被移动, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_获取焦点, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_失去焦点, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_按下某键, 空白型, , 
.参数 事件程序, 子程序指针, , 子程序必须有4个整型参数,第一个参数为键代码,每二个参数为功能键状态,其余两个参数备用



.子程序 事件_放开某键, 空白型, , 
.参数 事件程序, 子程序指针, , 子程序必须有4个整型参数,第一个参数为键代码,每二个参数为功能键状态,其余两个参数备用



.子程序 方法_创建, 整数型, , 
.参数 父窗口句柄, 整数型, , 传入一个非ZCL创建的窗口作为父时，请在窗口句柄前面加个“-”,即为负整数，类库将会根据此值判断是否为ZCL创建的窗口还是外窗口的，为0表示桌面窗口为父
.参数 标题, 文本型, 可空, 
.参数 左边, 整数型, 可空, 
.参数 顶边, 整数型, 可空, 
.参数 宽度, 整数型, 可空, 
.参数 高度, 整数型, 可空, 



.类模块 类_超级列表框, , , 

.子程序 方法_可视, 逻辑型, , 
.参数 是否可视, 逻辑型, 可空, 



.子程序 方法_是否已创建, 逻辑型, , 


.子程序 方法_标题, 文本型, , 
.参数 文本内容, 文本型, 可空, 



.子程序 方法_取句柄, 整数型, , 


.子程序 方法_移动, 空白型, , 
.参数 左边, 整数型, 可空, 
.参数 顶边, 整数型, 可空, 
.参数 宽度, 整数型, 可空, 
.参数 高度, 整数型, 可空, 



.子程序 方法_取宽度, 整数型, , 


.子程序 方法_取高度, 整数型, , 


.子程序 方法_取左边, 整数型, , 


.子程序 方法_取顶边, 整数型, , 


.子程序 方法_禁止, 逻辑型, , 
.参数 禁止, 逻辑型, 可空, 



.子程序 事件_鼠标左键被按下, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标左键被放开, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_被双击, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标右键被按下, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标右键被放开, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标位置被移动, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_获取焦点, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_失去焦点, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_按下某键, 空白型, , 
.参数 事件程序, 子程序指针, , 子程序必须有4个整型参数,第一个参数为键代码,每二个参数为功能键状态,其余两个参数备用



.子程序 事件_放开某键, 空白型, , 
.参数 事件程序, 子程序指针, , 子程序必须有4个整型参数,第一个参数为键代码,每二个参数为功能键状态,其余两个参数备用



.子程序 方法_创建, 整数型, , 
.参数 父窗口句柄, 整数型, , 传入一个非ZCL创建的窗口作为父时，请在窗口句柄前面加个“-”,即为负整数，类库将会根据此值判断是否为ZCL创建的窗口还是外窗口的，为0表示桌面窗口为父
.参数 标题, 文本型, 可空, 
.参数 左边, 整数型, 可空, 
.参数 顶边, 整数型, 可空, 
.参数 宽度, 整数型, 可空, 
.参数 高度, 整数型, 可空, 
.参数 类型, 整数型, 可空, 0、大图标列表框，1、小图标列表框，2、普通列表框，3、报表列表框



.子程序 方法_插入列, 空白型, , 
.参数 列宽度, 整数型, , 
.参数 标题文本, 文本型, , 
.参数 插入位置, 整数型, , 



.子程序 方法_插入表项, 整数型, , 
.参数 插入位置, 整数型, 可空, 可以被省略。指定新表项插入时的位置索引，索引值从 0 开始。如果提供 -1 ，则插入到列表框的尾部。如果本参数被省略，默认值为 -1 。
.参数 标题, 文本型, 可空, 可以被省略。本参数指定表项的标题文本。如果被省略，默认值为空文本。
.参数 图片索引, 整数型, 可空, 可以被省略。图片索引用于指定“图片组”属性中的某张图片。索引值从 0 开始，-1 表示无图片。如果本参数被省略，默认值为 -1 。
.参数 状态图片索引, 整数型, 可空, 可以被省略。状态图片索引用于指定“状态图片组”属性中的某张图片。索引值从 0 开始，-1 表示无图片。如果本参数被省略，默认值为 -1 。
.参数 缩进数目, 整数型, 可空, 可以被省略。“缩进数目”仅在报表型列表框才有效，用作指定显示时在表项首部增加的空白数。如果本参数被省略，默认值为 0 。
.参数 表项数值, 整数型, 可空, 可以被省略。该数值与指定表项相关联。如果本参数被省略，默认值为 0 。



.子程序 方法_置标题, 空白型, , 
.参数 项, 整数型, , 
.参数 列, 整数型, , 
.参数 文本, 文本型, , 



.子程序 方法_取表项数, 整数型, , 


.子程序 方法_现行选中项, 整数型, , 
.参数 位置索引, 整数型, 可空, 



.子程序 方法_取标题, 文本型, , 
.参数 行号, 整数型, , 
.参数 列号, 整数型, , 



.子程序 方法_自动选择, 整数型, , 
.参数 参数, 逻辑型, 可空, 



.子程序 方法_设置前景色, 整数型, , 
.参数 颜色值, 整数型, , 



.子程序 方法_设置背景色, 整数型, , 
.参数 颜色值, 整数型, , 



.子程序 方法_自动跟随, 整数型, , 
.参数 参数, 逻辑型, 可空, 



.子程序 方法_置类型, 空白型, , 
.参数 类型, 整数型, , 



.子程序 方法_整行选择, 整数型, , 
.参数 参数, 逻辑型, 可空, 



.子程序 方法_删除列, 整数型, , 
.参数 列索引, 整数型, 可空, 整数型，从0开始；可空，默认为0



.子程序 方法_删除表项, 逻辑型, , 
.参数 表项索引, 整数型, 可空, 整数型，从0开始；可空，默认为0



.子程序 方法_全部删除, 逻辑型, , 


.子程序 方法_连接位图列表, 逻辑型, , 
.参数 位图列表句柄, 整数型, , 



.子程序 方法_设置风格, 整数型, , 运行一次为设置,再以相同参数运行一次为取消
.参数 风格, 整数型, , 1、显示网格，2、允许在子项中显示image，4、带检查框，8、当鼠标指到某一项时便自动选择该项，32、整行选择,或他们的组合



.子程序 事件_被单击, 空白型, , 
.参数 事件程序, 子程序指针, , 



.类模块 类_树型框, , , 

.子程序 方法_可视, 逻辑型, , 
.参数 是否可视, 逻辑型, 可空, 



.子程序 方法_是否已创建, 逻辑型, , 


.子程序 方法_标题, 文本型, , 
.参数 文本内容, 文本型, 可空, 



.子程序 方法_取句柄, 整数型, , 


.子程序 方法_移动, 空白型, , 
.参数 左边, 整数型, 可空, 
.参数 顶边, 整数型, 可空, 
.参数 宽度, 整数型, 可空, 
.参数 高度, 整数型, 可空, 



.子程序 方法_取宽度, 整数型, , 


.子程序 方法_取高度, 整数型, , 


.子程序 方法_取左边, 整数型, , 


.子程序 方法_取顶边, 整数型, , 


.子程序 方法_禁止, 逻辑型, , 
.参数 禁止, 逻辑型, 可空, 



.子程序 事件_鼠标左键被按下, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标左键被放开, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_被双击, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标右键被按下, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标右键被放开, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标位置被移动, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_获取焦点, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_失去焦点, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_按下某键, 空白型, , 
.参数 事件程序, 子程序指针, , 子程序必须有4个整型参数,第一个参数为键代码,每二个参数为功能键状态,其余两个参数备用



.子程序 事件_放开某键, 空白型, , 
.参数 事件程序, 子程序指针, , 子程序必须有4个整型参数,第一个参数为键代码,每二个参数为功能键状态,其余两个参数备用



.子程序 方法_创建, 整数型, , 
.参数 父窗口句柄, 整数型, , 传入一个非ZCL创建的窗口作为父时，请在窗口句柄前面加个“-”,即为负整数，类库将会根据此值判断是否为ZCL创建的窗口还是外窗口的，为0表示桌面窗口为父
.参数 标题, 文本型, 可空, 
.参数 左边, 整数型, 可空, 
.参数 顶边, 整数型, 可空, 
.参数 宽度, 整数型, 可空, 
.参数 高度, 整数型, 可空, 
.参数 类型, 整数型, 可空, 



.子程序 方法_插入根项目, 整数型, , 返回项目句柄
.参数 插入位置, 整数型, , 指定一个索引,从1开始
.参数 标题, 文本型, , 
.参数 图标索引, 整数型, , 



.子程序 方法_插入子项目, 整数型, , 返回项目句柄
.参数 父项目句柄, 整数型, , 
.参数 插入位置, 整数型, , 索引
.参数 标题, 文本型, , 
.参数 图标索引, 整数型, , 



.子程序 方法_取当前项目句柄, 整数型, , 


.子程序 方法_取当前索引, 整数型, , 


.子程序 方法_取项目句柄, 整数型, , 
.参数 项目索引号, 整数型, , 索引号从1开始



.子程序 方法_取父项目句柄, 整数型, , 
.参数 项目句柄, 整数型, , 



.子程序 方法_取项目总数, 整数型, , 


.子程序 方法_取项目文本, 文本型, , 
.参数 项目索引号, 整数型, , 索引号从1开始



.子程序 方法_置项目文本, 空白型, , 
.参数 索引号, 整数型, , 索引号从1开始
.参数 项目文本, 文本型, , 



.子程序 方法_连接位图列表, 逻辑型, , 
.参数 位图列表句柄, 整数型, , 



.子程序 事件_项目被选择, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_右键单击, 空白型, , 
.参数 事件程序, 子程序指针, , 



.类模块 类_静态控件, , , 

.子程序 方法_可视, 逻辑型, , 
.参数 是否可视, 逻辑型, 可空, 



.子程序 方法_是否已创建, 逻辑型, , 


.子程序 方法_标题, 文本型, , 
.参数 文本内容, 文本型, 可空, 



.子程序 方法_取句柄, 整数型, , 


.子程序 方法_移动, 空白型, , 
.参数 左边, 整数型, 可空, 
.参数 顶边, 整数型, 可空, 
.参数 宽度, 整数型, 可空, 
.参数 高度, 整数型, 可空, 



.子程序 方法_取宽度, 整数型, , 


.子程序 方法_取高度, 整数型, , 


.子程序 方法_取左边, 整数型, , 


.子程序 方法_取顶边, 整数型, , 


.子程序 方法_禁止, 逻辑型, , 
.参数 禁止, 逻辑型, 可空, 



.子程序 事件_鼠标左键被按下, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标左键被放开, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_被双击, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标右键被按下, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标右键被放开, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标位置被移动, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_获取焦点, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_失去焦点, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_按下某键, 空白型, , 
.参数 事件程序, 子程序指针, , 子程序必须有4个整型参数,第一个参数为键代码,每二个参数为功能键状态,其余两个参数备用



.子程序 事件_放开某键, 空白型, , 
.参数 事件程序, 子程序指针, , 子程序必须有4个整型参数,第一个参数为键代码,每二个参数为功能键状态,其余两个参数备用



.子程序 方法_创建, 整数型, , 
.参数 父窗口句柄, 整数型, , 传入一个非ZCL创建的窗口作为父时，请在窗口句柄前面加个“-”,即为负整数，类库将会根据此值判断是否为ZCL创建的窗口还是外窗口的，为0表示桌面窗口为父
.参数 标题, 文本型, 可空, 
.参数 左边, 整数型, 可空, 
.参数 顶边, 整数型, 可空, 
.参数 宽度, 整数型, 可空, 
.参数 高度, 整数型, 可空, 
.参数 类型, 整数型, 可空, 



.子程序 方法_设置位图, 空白型, , 设置图片框的图片,必须为位图.
.参数 位图句柄, 整数型, , 



.类模块 类_编辑框, , , 

.子程序 方法_可视, 逻辑型, , 
.参数 是否可视, 逻辑型, 可空, 



.子程序 方法_是否已创建, 逻辑型, , 


.子程序 方法_标题, 文本型, , 
.参数 文本内容, 文本型, 可空, 



.子程序 方法_取句柄, 整数型, , 


.子程序 方法_移动, 空白型, , 
.参数 左边, 整数型, 可空, 
.参数 顶边, 整数型, 可空, 
.参数 宽度, 整数型, 可空, 
.参数 高度, 整数型, 可空, 



.子程序 方法_取宽度, 整数型, , 


.子程序 方法_取高度, 整数型, , 


.子程序 方法_取左边, 整数型, , 


.子程序 方法_取顶边, 整数型, , 


.子程序 方法_禁止, 逻辑型, , 
.参数 禁止, 逻辑型, 可空, 



.子程序 事件_鼠标左键被按下, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标左键被放开, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_被双击, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标右键被按下, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标右键被放开, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标位置被移动, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_获取焦点, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_失去焦点, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_按下某键, 空白型, , 
.参数 事件程序, 子程序指针, , 子程序必须有4个整型参数,第一个参数为键代码,每二个参数为功能键状态,其余两个参数备用



.子程序 事件_放开某键, 空白型, , 
.参数 事件程序, 子程序指针, , 子程序必须有4个整型参数,第一个参数为键代码,每二个参数为功能键状态,其余两个参数备用



.子程序 方法_创建, 整数型, , 
.参数 父窗口句柄, 整数型, , 传入一个非ZCL创建的窗口作为父时，请在窗口句柄前面加个“-”,即为负整数，类库将会根据此值判断是否为ZCL创建的窗口还是外窗口的，为0表示桌面窗口为父
.参数 内容, 文本型, 可空, 
.参数 左边, 整数型, 可空, 
.参数 顶边, 整数型, 可空, 
.参数 宽度, 整数型, 可空, 
.参数 高度, 整数型, 可空, 
.参数 类型, 整数型, 可空, 



.子程序 方法_内容, 文本型, , 
.参数 文本内容, 文本型, 可空, 



.子程序 方法_加入文本, 空白型, , 
.参数 文本内容, 文本型, , 



.子程序 方法_置读写状态, 空白型, , 
.参数 读写状态, 整数型, , 



.子程序 事件_内容被改变, 空白型, , 
.参数 事件程序, 子程序指针, , 



.类模块 类_组合框, , , 

.子程序 方法_可视, 逻辑型, , 
.参数 是否可视, 逻辑型, 可空, 



.子程序 方法_是否已创建, 逻辑型, , 


.子程序 方法_标题, 文本型, , 
.参数 文本内容, 文本型, 可空, 



.子程序 方法_取句柄, 整数型, , 


.子程序 方法_移动, 空白型, , 
.参数 左边, 整数型, 可空, 
.参数 顶边, 整数型, 可空, 
.参数 宽度, 整数型, 可空, 
.参数 高度, 整数型, 可空, 



.子程序 方法_取宽度, 整数型, , 


.子程序 方法_取高度, 整数型, , 


.子程序 方法_取左边, 整数型, , 


.子程序 方法_取顶边, 整数型, , 


.子程序 方法_禁止, 逻辑型, , 
.参数 禁止, 逻辑型, 可空, 



.子程序 事件_鼠标左键被按下, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标左键被放开, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_被双击, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标右键被按下, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标右键被放开, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标位置被移动, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_获取焦点, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_失去焦点, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_按下某键, 空白型, , 
.参数 事件程序, 子程序指针, , 子程序必须有4个整型参数,第一个参数为键代码,每二个参数为功能键状态,其余两个参数备用



.子程序 事件_放开某键, 空白型, , 
.参数 事件程序, 子程序指针, , 子程序必须有4个整型参数,第一个参数为键代码,每二个参数为功能键状态,其余两个参数备用



.子程序 方法_创建, 整数型, , 
.参数 父窗口句柄, 整数型, , 传入一个非ZCL创建的窗口作为父时，请在窗口句柄前面加个“-”,即为负整数，类库将会根据此值判断是否为ZCL创建的窗口还是外窗口的，为0表示桌面窗口为父
.参数 标题, 文本型, 可空, 
.参数 左边, 整数型, 可空, 
.参数 顶边, 整数型, 可空, 
.参数 宽度, 整数型, 可空, 
.参数 高度, 整数型, 可空, 
.参数 类型, 整数型, 可空, 



.子程序 事件_项目被选择, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 方法_内容, 文本型, , 
.参数 文本内容, 文本型, 可空, 



.子程序 方法_加入项目, 整数型, , 成功返回插入项目的当前位置
.参数 项目文本, 文本型, , 
.参数 项目数值, 整数型, 可空, 
.参数 位置索引, 整数型, 可空, 默认为-1,即加入到最后，如果>0则加到该项后面



.子程序 方法_现行选中项, 整数型, , 
.参数 位置索引, 整数型, 可空, 



.子程序 方法_删除项目, 空白型, , 
.参数 位置索引, 整数型, , 



.子程序 方法_清空, 空白型, , 


.子程序 方法_取项目文本, 文本型, , 
.参数 位置索引, 整数型, , 



.子程序 方法_取项目数, 整数型, , 


.子程序 方法_取项目数值, 整数型, , 
.参数 位置索引, 整数型, , 



.子程序 方法_置项目数值, 整数型, , 
.参数 位置索引, 整数型, , 
.参数 项目数值, 整数型, , 



.类模块 类_列表框, , , 

.子程序 方法_可视, 逻辑型, , 
.参数 是否可视, 逻辑型, 可空, 



.子程序 方法_是否已创建, 逻辑型, , 


.子程序 方法_标题, 文本型, , 
.参数 文本内容, 文本型, 可空, 



.子程序 方法_取句柄, 整数型, , 


.子程序 方法_移动, 空白型, , 
.参数 左边, 整数型, 可空, 
.参数 顶边, 整数型, 可空, 
.参数 宽度, 整数型, 可空, 
.参数 高度, 整数型, 可空, 



.子程序 方法_取宽度, 整数型, , 


.子程序 方法_取高度, 整数型, , 


.子程序 方法_取左边, 整数型, , 


.子程序 方法_取顶边, 整数型, , 


.子程序 方法_禁止, 逻辑型, , 
.参数 禁止, 逻辑型, 可空, 



.子程序 事件_鼠标左键被按下, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标左键被放开, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_被双击, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标右键被按下, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标右键被放开, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标位置被移动, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_获取焦点, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_失去焦点, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_按下某键, 空白型, , 
.参数 事件程序, 子程序指针, , 子程序必须有4个整型参数,第一个参数为键代码,每二个参数为功能键状态,其余两个参数备用



.子程序 事件_放开某键, 空白型, , 
.参数 事件程序, 子程序指针, , 子程序必须有4个整型参数,第一个参数为键代码,每二个参数为功能键状态,其余两个参数备用



.子程序 方法_创建, 整数型, , 
.参数 父窗口句柄, 整数型, , 传入一个非ZCL创建的窗口作为父时，请在窗口句柄前面加个“-”,即为负整数，类库将会根据此值判断是否为ZCL创建的窗口还是外窗口的，为0表示桌面窗口为父
.参数 标题, 文本型, 可空, 
.参数 左边, 整数型, 可空, 
.参数 顶边, 整数型, 可空, 
.参数 宽度, 整数型, 可空, 
.参数 高度, 整数型, 可空, 
.参数 类型, 整数型, 可空, 



.子程序 方法_取项目数值, 整数型, , 
.参数 位置索引, 整数型, , 
.参数 项目数值, 整数型, , 



.子程序 方法_置项目数值, 整数型, , 
.参数 位置索引, 整数型, , 
.参数 项目数值, 整数型, , 



.子程序 方法_删除项目, 空白型, , 
.参数 项目索引, 整数型, , 



.子程序 方法_取项目数, 整数型, , 


.子程序 方法_现行选中项, 整数型, , 
.参数 位置索引, 整数型, 可空, 



.子程序 方法_取项目文本, 文本型, , 
.参数 位置索引, 整数型, , 



.子程序 方法_加入项目, 整数型, , 成功返回插入项目的当前位置
.参数 项目文本, 文本型, , 
.参数 项目数值, 整数型, 可空, 
.参数 位置索引, 整数型, 可空, 默认为-1,即加入到最后，如果>0则加到该项后面



.子程序 方法_清空, 空白型, , 


.子程序 事件_项目被选择, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_项目被双击, 空白型, , 
.参数 事件程序, 子程序指针, , 



.类模块 类_状态条, , , 

.子程序 方法_可视, 逻辑型, , 
.参数 是否可视, 逻辑型, 可空, 



.子程序 方法_是否已创建, 逻辑型, , 


.子程序 方法_标题, 文本型, , 
.参数 文本内容, 文本型, 可空, 



.子程序 方法_取句柄, 整数型, , 


.子程序 方法_移动, 空白型, , 
.参数 左边, 整数型, 可空, 
.参数 顶边, 整数型, 可空, 
.参数 宽度, 整数型, 可空, 
.参数 高度, 整数型, 可空, 



.子程序 方法_取宽度, 整数型, , 


.子程序 方法_取高度, 整数型, , 


.子程序 方法_取左边, 整数型, , 


.子程序 方法_取顶边, 整数型, , 


.子程序 方法_禁止, 逻辑型, , 
.参数 禁止, 逻辑型, 可空, 



.子程序 事件_鼠标左键被按下, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标左键被放开, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_被双击, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标右键被按下, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标右键被放开, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标位置被移动, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_获取焦点, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_失去焦点, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_按下某键, 空白型, , 
.参数 事件程序, 子程序指针, , 子程序必须有4个整型参数,第一个参数为键代码,每二个参数为功能键状态,其余两个参数备用



.子程序 事件_放开某键, 空白型, , 
.参数 事件程序, 子程序指针, , 子程序必须有4个整型参数,第一个参数为键代码,每二个参数为功能键状态,其余两个参数备用



.子程序 方法_创建, 整数型, , 
.参数 父窗口句柄, 整数型, , 传入一个非ZCL创建的窗口作为父时，请在窗口句柄前面加个“-”,即为负整数，类库将会根据此值判断是否为ZCL创建的窗口还是外窗口的，为0表示桌面窗口为父
.参数 栏目, 文本型, 可空, 各栏目坐标值,默认为空,即1栏,如果有多栏,请填充栏目横坐标值位置,从0开始,并用","隔开,最后一栏如果到最后请填-1,如"60,160,210,310,-1"



.子程序 方法_状态标题, 文本型, , 
.参数 栏目索引, 整数型, , 位置从0开始
.参数 文本内容, 文本型, 可空, 为空时取标题，不为空时设置标题



.子程序 方法_分栏目, 逻辑型, , 
.参数 栏目, 文本型, , 各栏目坐标值,默认为空,即1栏,如果有多栏,请填充栏目横坐标值位置,从0开始,并用","隔开,最后一栏如果到最后请填-1,如"60,160,210,310,-1"



.类模块 类_进度条, , , 

.子程序 方法_可视, 逻辑型, , 
.参数 是否可视, 逻辑型, 可空, 



.子程序 方法_是否已创建, 逻辑型, , 


.子程序 方法_标题, 文本型, , 
.参数 文本内容, 文本型, 可空, 



.子程序 方法_取句柄, 整数型, , 


.子程序 方法_移动, 空白型, , 
.参数 左边, 整数型, 可空, 
.参数 顶边, 整数型, 可空, 
.参数 宽度, 整数型, 可空, 
.参数 高度, 整数型, 可空, 



.子程序 方法_取宽度, 整数型, , 


.子程序 方法_取高度, 整数型, , 


.子程序 方法_取左边, 整数型, , 


.子程序 方法_取顶边, 整数型, , 


.子程序 方法_禁止, 逻辑型, , 
.参数 禁止, 逻辑型, 可空, 



.子程序 事件_鼠标左键被按下, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标左键被放开, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_被双击, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标右键被按下, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标右键被放开, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标位置被移动, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_获取焦点, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_失去焦点, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_按下某键, 空白型, , 
.参数 事件程序, 子程序指针, , 子程序必须有4个整型参数,第一个参数为键代码,每二个参数为功能键状态,其余两个参数备用



.子程序 事件_放开某键, 空白型, , 
.参数 事件程序, 子程序指针, , 子程序必须有4个整型参数,第一个参数为键代码,每二个参数为功能键状态,其余两个参数备用



.子程序 方法_创建, 整数型, , 
.参数 父窗口句柄, 整数型, , 传入一个非ZCL创建的窗口作为父时，请在窗口句柄前面加个“-”,即为负整数，类库将会根据此值判断是否为ZCL创建的窗口还是外窗口的，为0表示桌面窗口为父
.参数 左边, 整数型, 可空, 
.参数 顶边, 整数型, 可空, 
.参数 宽度, 整数型, 可空, 
.参数 高度, 整数型, 可空, 
.参数 方向, 逻辑型, 可空, 横向为真,纵身为假,默认为横向
.参数 显示方式, 逻辑型, 可空, 分块显示为真，平滑显示为假，默认为分块
.参数 最大位置, 整数型, 可空, 默认100
.参数 最小位置, 整数型, 可空, 默认0
.参数 位置, 整数型, 可空, 默认0



.子程序 方法_最大位置, 整数型, , 
.参数 最大位置, 整数型, 可空, 



.子程序 方法_最小位置, 整数型, , 
.参数 最小位置, 整数型, 可空, 



.子程序 方法_位置, 整数型, , 
.参数 位置, 整数型, 可空, 



.类模块 类_WEB浏览框, , , 

.子程序 方法_可视, 逻辑型, , 
.参数 是否可视, 逻辑型, 可空, 



.子程序 方法_是否已创建, 逻辑型, , 


.子程序 方法_标题, 文本型, , 
.参数 文本内容, 文本型, 可空, 



.子程序 方法_取句柄, 整数型, , 


.子程序 方法_移动, 空白型, , 
.参数 左边, 整数型, 可空, 
.参数 顶边, 整数型, 可空, 
.参数 宽度, 整数型, 可空, 
.参数 高度, 整数型, 可空, 



.子程序 方法_取宽度, 整数型, , 


.子程序 方法_取高度, 整数型, , 


.子程序 方法_取左边, 整数型, , 


.子程序 方法_取顶边, 整数型, , 


.子程序 方法_禁止, 逻辑型, , 
.参数 禁止, 逻辑型, 可空, 



.子程序 事件_鼠标左键被按下, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标左键被放开, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_被双击, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标右键被按下, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标右键被放开, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_鼠标位置被移动, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_获取焦点, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_失去焦点, 空白型, , 
.参数 事件程序, 子程序指针, , 



.子程序 事件_按下某键, 空白型, , 
.参数 事件程序, 子程序指针, , 子程序必须有4个整型参数,第一个参数为键代码,每二个参数为功能键状态,其余两个参数备用



.子程序 事件_放开某键, 空白型, , 
.参数 事件程序, 子程序指针, , 子程序必须有4个整型参数,第一个参数为键代码,每二个参数为功能键状态,其余两个参数备用



.子程序 方法_创建, 整数型, , 
.参数 父窗口句柄, 整数型, , 传入一个非ZCL创建的窗口作为父时，请在窗口句柄前面加个“-”,即为负整数，类库将会根据此值判断是否为ZCL创建的窗口还是外窗口的，为0表示桌面窗口为父
.参数 URL, 文本型, 可空, 
.参数 左边, 整数型, 可空, 
.参数 顶边, 整数型, 可空, 
.参数 宽度, 整数型, 可空, 
.参数 高度, 整数型, 可空, 
.参数 样式, 整数型, 可空, 默认：#窗口子窗口＋#窗口初始可见＋#窗口带垂直滚动条＋#窗口带水平滚动条
.参数 平面, 逻辑型, 可空, 为真时为平面，默认为真，为假时凹入



.程序集 __HIDDEN_TEMP_MOD__, , , 

.子程序 模块_消息循环, 整数型, , 放在启动子程序最后一行,即在返回命令前


.子程序 系统_注册窗口类, 整数型, , 可以在程序启动后注册一个窗口类名,只有第一次注册有用,也可以不用注册,系统默认类名为MyWindow
.参数 AppName, 文本型, 可空, 



.子程序 控件_取宽度, 整数型, , 
.参数 窗口句柄, 整数型, , 



.子程序 控件_取高度, 整数型, , 
.参数 窗口句柄, 整数型, , 



.子程序 控件_取左边, 整数型, , 
.参数 窗口句柄, 整数型, , 



.子程序 方法_取顶边, 整数型, , 
.参数 窗口句柄, 整数型, , 




 ' 不属于任何一个程序集、类模块的函数：
