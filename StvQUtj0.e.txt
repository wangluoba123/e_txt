 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 315
    高度 = 357
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假



.常量 常量1, "“☆周杰伦 夜曲☆
☆周杰伦 2007世界巡回演唱会☆
www.51lrc.com ☆ qianjunyifa

☆Music☆

一群嗜血的蚂蚁 被腐肉所吸引
我面无表情 看孤独的风景
失去你 爱恨开始分明
失去你 还有什么事好关心
当鸽子不再象徵和平
我终于被提醒
广场上喂食的是秃鹰
我用漂亮的押韵
形容被掠夺一空的爱情

啊 乌云开始遮蔽 夜色不干净
葬园里 葬礼的回音 在漫天飞行
送你的 白色玫瑰 在纯黑的环境凋零
乌鸦在树枝上诡异的很安静
静静听 我黑色的大衣
想温暖你 日渐冰冷的回忆

走过的 走过的 生命
啊 四周弥漫雾气
我在空旷的墓地 老去后还爱你
为你弹奏萧邦的夜曲
纪念我死去的爱情
跟夜风一样的声音
心碎的很好听
手在键盘敲很轻
我给的思念很小心
你埋葬的地方叫幽冥
为你弹奏萧邦的夜曲
纪念我死去的爱情
而我为你隐姓埋名

在月光下弹琴
对你心跳的感应
还是如此温热亲近
怀念你那鲜红的唇印
那些断翅的蜻蜓 散落在这森林
而我的眼睛 没有丝毫同情
失去你 爱恨开始分明
失去你 我连笑容都有阴影
风在长满青苔的屋顶
嘲笑我的伤心
像一口没有水的枯井
我用凄美的字型 描绘后悔莫及的那爱情
为你弹奏萧邦的夜曲
纪念我死去的爱情
跟夜风一样的声音
心碎的很好听
手在键盘敲很轻
我给的思念很小心
你埋葬的地方叫幽冥
为你弹奏萧邦的夜曲
纪念我死去的爱情
而我为你隐姓埋名
在月光下弹琴
对你心跳的感应
还是如此温热亲近
怀念你那鲜红的唇印
☆...
”", , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 5 系统核心支持库





.DLL命令 MCI控制, 空白型, "winmm.dll", "mciSendStringA", , 
    .参数 lpstrCommand, 文本型, , 
    .参数 lpstrReturnString, 文本型, , 
    .参数 uReturnLength, 整数型, , 
    .参数 hwndCallback, 整数型, , 

.窗口程序集 窗口程序集1, , , 

.程序集变量 纵坐标, 整数型, , , 
.程序集变量 横坐标, 整数型, , , 
.程序集变量 字体高度, 整数型, , , 
.程序集变量 文本, 文本型, , "0", 
.程序集变量 lrc分段时间内容, 文本型, , "0", 
.程序集变量 lrc时间头数组, 文本型, , "0", 
.程序集变量 lrc排序后分段内容, 文本型, , "0", 
.程序集变量 总时间, 文本型, , , 
.程序集变量 行间距, 整数型, , , 
.程序集变量 增量, 小数型, , , 
.程序集变量 当前时间, 文本型, , , 
.程序集变量 tc, 整数型, , , 
.子程序 __启动窗口_创建完毕, 空白型, , 
赋值 (., 真)

.子程序 _时钟1_周期事件, 空白型, , 
.局部变量 a, 整数型, , , 
.局部变量 分, 文本型, , , 
.局部变量 秒, 文本型, , , 

赋值 (当前时间, 取重复文本 (80, “ ”))
MCI控制 (“status mymp3 position”, 当前时间, 80, 0)
赋值 (., 整除 (到数值 (当前时间), 1000))
.如果 (小于 (整除 (到数值 (当前时间), 60000), 10))
    赋值 (分, 相加 (“0”, 到文本 (整除 (到数值 (当前时间), 60000))))
.否则
    赋值 (分, 到文本 (整除 (到数值 (当前时间), 60000)))
.如果结束
.如果 (小于 (求余数 (整除 (到数值 (当前时间), 1000), 60), 10))
    赋值 (秒, 相加 (“0”, 到文本 (求余数 (整除 (到数值 (当前时间), 1000), 60))))
.否则
    赋值 (秒, 到文本 (求余数 (整除 (到数值 (当前时间), 1000), 60)))
.如果结束
赋值 (., 相加 (分, “：”, 秒))
.清除 ()
.判断开始 (小于 (到数值 (当前时间), 到数值 (lrc时间头数组 [取数组成员数 (lrc时间头数组)])))
    .如果真 (大于或等于 (到数值 (当前时间), 到数值 (lrc时间头数组 [tc])))
        赋值 (tc, 相加 (tc, 1))
    .如果真结束
    赋值 (增量, 相乘 (相除 (相减 (到数值 (当前时间), 到数值 (lrc时间头数组 [相减 (tc, 1)])), 相减 (到数值 (lrc时间头数组 [tc]), 到数值 (lrc时间头数组 [相减 (tc, 1)]))), 相加 (字体高度, 行间距)))
    .计次循环首 (取数组成员数 (lrc时间头数组), a)
        .判断开始 (并且 (小于或等于 (到数值 (lrc时间头数组 [a]), 到数值 (当前时间)), 小于 (到数值 (当前时间), 到数值 (lrc时间头数组 [相加 (a, 1)]))))
            赋值 (., #红褐)
        .默认
            
        .判断结束
        赋值 (横坐标, 相除 (相减 (取用户区宽度 (), lrc排序后分段内容.取宽度 ( [a])), 2))
        横坐标.定位写出 (相加 (相减 (纵坐标, 相乘 (相减 (tc, 1), 相加 (字体高度, 行间距)), 增量), 相乘 (a, 相加 (字体高度, 行间距))), lrc排序后分段内容 [a])
        赋值 (., #黑色)
    .计次循环尾 ()
.默认
    赋值 (增量, 相乘 (相除 (相减 (到数值 (当前时间), 到数值 (lrc时间头数组 [取数组成员数 (lrc时间头数组)])), 相减 (到数值 (总时间), 到数值 (lrc时间头数组 [取数组成员数 (lrc时间头数组)]))), 相加 (字体高度, 行间距)))
    .计次循环首 (取数组成员数 (lrc时间头数组), a)
        .如果真 (等于 (a, 取数组成员数 (lrc时间头数组)))
            赋值 (., #红褐)
        .如果真结束
        赋值 (横坐标, 相除 (相减 (取用户区宽度 (), lrc排序后分段内容.取宽度 ( [a])), 2))
        横坐标.定位写出 (相加 (相减 (纵坐标, 相乘 (取数组成员数 (lrc时间头数组), 相加 (字体高度, 行间距)), 增量), 相乘 (a, 相加 (字体高度, 行间距))), lrc排序后分段内容 [a])
        赋值 (., #黑色)
    .计次循环尾 ()
.判断结束
.复制 ()
.如果 (等于 (到数值 (当前时间), 到数值 (总时间)))
    赋值 (., 0)
    赋值 (., 1)
    赋值 (., 真)
    MCI控制 (“seek mymp3 to start”, “”, 0, 0)
    .清除 ()
    .清除 ()
    赋值 (纵坐标, 相加 (相除 (取用户区高度 (), 2), 相除 (相加 (字体高度, 行间距), 2)))
    赋值 (., “播放”)
.否则
    
.如果结束


.子程序 _按钮1_被单击, 空白型, , 
.局部变量 状态, 文本型, , , 

.如果真 (等于 (., “”))
    信息框 (“请选择歌曲”, 0, )
    返回 ()
.如果真结束
.如果真 (等于 (., “”))
    信息框 (“请选择歌词文件”, 0, )
    返回 ()
.如果真结束
.如果 (等于 (., “播放”))
    赋值 (状态, 取重复文本 (80, “ ”))
    MCI控制 (“status mymp3 mode”, 状态, 80, 0)
    赋值 (., “暂停”)
    赋值 (., 假)
    .如果 (等于 (状态, “paused”))
        赋值 (., 100)
        MCI控制 (“resume mymp3”, “”, 0, 0)
    .否则
        赋值 (tc, 2)
        赋值 (., 100)
        MCI控制 (“play mymp3”, “”, 0, 0)
    .如果结束
    
.否则
    赋值 (., “播放”)
    赋值 (., 0)
    MCI控制 (“pause mymp3”, “”, 0, 0)
    
.如果结束


.子程序 排序LRC时间内容, 空白型, , 使用昌泡排序
.局部变量 交换, 逻辑型, , , 
.局部变量 未比数据数量, 整数型, 静态, , 
.局部变量 交换变量, 文本型, , , 
.局部变量 排序计次, 整数型, , , 
.局部变量 毫秒, 整数型, , , 
.局部变量 分, 整数型, , , 
.局部变量 秒, 整数型, , , 
.局部变量 lrc时间头, 整数型, , , 
.局部变量 分1, 整数型, , , 
.局部变量 秒1, 整数型, , , 
.局部变量 毫秒1, 整数型, , , 
.局部变量 lrc时间头1, 整数型, , , 

 ' 如果不为真，下面不会进入判断循环
赋值 (交换, 真)
 ' 也就是下面变量循环第一次的变量目标值
赋值 (未比数据数量, 取数组成员数 (lrc分段时间内容))
.判断循环首 (等于 (交换, 真))
    赋值 (交换, 假)
     ' 比较的次数比数据数量少一
    .变量循环首 (1, 相减 (未比数据数量, 1), 1, 排序计次)
        赋值 (分, 到数值 (取文本中间 (lrc分段时间内容 [排序计次], 2, 2)))
        赋值 (秒, 到数值 (取文本中间 (lrc分段时间内容 [排序计次], 5, 2)))
        赋值 (毫秒, 到数值 (取文本中间 (lrc分段时间内容 [排序计次], 8, 1)))
        赋值 (lrc时间头, 相加 (相乘 (分, 60000), 相乘 (秒, 1000), 毫秒))
        赋值 (分1, 到数值 (取文本中间 (lrc分段时间内容 [相加 (排序计次, 1)], 2, 2)))
        赋值 (秒1, 到数值 (取文本中间 (lrc分段时间内容 [相加 (排序计次, 1)], 5, 2)))
        赋值 (毫秒1, 到数值 (取文本中间 (lrc分段时间内容 [相加 (排序计次, 1)], 8, 1)))
        赋值 (lrc时间头1, 相加 (相乘 (分1, 60000), 相乘 (秒1, 1000), 毫秒1))
         ' 前一个数大于后一个数，就将两数的位置交换
        .如果真 (大于 (lrc时间头, lrc时间头1))
             ' 数据组可以是变量、文件、数据库（这里用的是变量）
            赋值 (交换变量, lrc分段时间内容 [排序计次])
            赋值 (lrc分段时间内容 [排序计次], lrc分段时间内容 [相加 (排序计次, 1)])
             ' 以上3行代码是交换用的
            赋值 (lrc分段时间内容 [相加 (排序计次, 1)], 交换变量)
            赋值 (交换, 真)
        .如果真结束
        
    .变量循环尾 ()
    赋值 (未比数据数量, 相减 (未比数据数量, 1))
.判断循环尾 ()
.计次循环首 (取数组成员数 (lrc分段时间内容), 排序计次)
    赋值 (分, 到数值 (取文本中间 (lrc分段时间内容 [排序计次], 2, 2)))
    赋值 (秒, 到数值 (取文本中间 (lrc分段时间内容 [排序计次], 5, 2)))
    赋值 (毫秒, 到数值 (取文本中间 (lrc分段时间内容 [排序计次], 8, 1)))
    赋值 (lrc时间头, 相加 (相乘 (分, 60000), 相乘 (秒, 1000), 毫秒))
     ' lrc时间头 ＝ 到数值 (取文本中间 (lrc分段时间内容 [排序计次], 2, 8))
    加入成员 (lrc时间头数组, 到文本 (lrc时间头))
.计次循环尾 ()
.计次循环首 (取数组成员数 (lrc分段时间内容), 排序计次)
    加入成员 (lrc排序后分段内容, 删首尾空 (取文本中间 (lrc分段时间内容 [排序计次], 11, 50)))
.计次循环尾 ()

.子程序 _按钮2_被单击, 空白型, , 
.局部变量 分, 文本型, , , 
.局部变量 秒, 文本型, , , 

.如果真 (等于 (打开 (), 假))
    返回 ()
.如果真结束
赋值 (., 0)
赋值 (., 1)
MCI控制 (“close all”, “”, 0, 0)
赋值 (., “00：00”)
.清除 ()
.清除 ()
赋值 (., “播放”)
MCI控制 (相加 (“open ”, ., “ type mpegvideo Alias mymp3”), “”, 0, 0)
赋值 (总时间, 取重复文本 (80, “ ”))
MCI控制 (“status mymp3 length”, 总时间, 80, 0)
赋值 (., 相除 (到数值 (总时间), 1000))
.如果 (小于 (整除 (到数值 (总时间), 60000), 10))
    赋值 (分, 相加 (“0”, 到文本 (整除 (到数值 (总时间), 60000))))
.否则
    赋值 (分, 到文本 (整除 (到数值 (总时间), 60000)))
.如果结束
.如果 (小于 (求余数 (整除 (到数值 (总时间), 1000), 60), 10))
    赋值 (秒, 相加 (“0”, 到文本 (求余数 (整除 (到数值 (总时间), 1000), 60))))
.否则
    赋值 (秒, 到文本 (求余数 (整除 (到数值 (总时间), 1000), 60)))
.如果结束
赋值 (., 相加 (分, “：”, 秒))

.子程序 _按钮3_被单击, 空白型, , 
.局部变量 大计次, 整数型, , , 
.局部变量 lrc歌曲名, 文本型, , , 
.局部变量 lrc歌手, 文本型, , , 
.局部变量 lrc专辑名, 文本型, , , 
.局部变量 lrc来自于, 文本型, , , 
.局部变量 a, 文本型, , "0", 
.局部变量 小计次, 整数型, , , 
.局部变量 ge, 文本型, , , 
.局部变量 文件号, 整数型, , , 
.局部变量 t, 整数型, , , 

.如果真 (等于 (打开 (), 假))
    返回 ()
.如果真结束
清除数组 (lrc分段时间内容)
清除数组 (lrc时间头数组)
清除数组 (lrc排序后分段内容)
清除数组 (文本)
赋值 (文件号, 打开文件 (., , ))
赋值 (读入文本 (文件号, ))
赋值 (文本, 分割文本 (到文本 (), #换行符, ))
.计次循环首 (取数组成员数 (文本), 大计次)
    赋值 (lrc歌曲名, 取文本中间 (文本 [1], 5, 相减 (寻找文本 (文本 [1], “]”, , 假), 5)))
    赋值 (lrc歌手, 取文本中间 (文本 [2], 5, 相减 (寻找文本 (文本 [2], “]”, , 假), 5)))
    赋值 (lrc专辑名, 取文本中间 (文本 [3], 5, 相减 (寻找文本 (文本 [3], “]”, , 假), 5)))
    赋值 (lrc来自于, 取文本中间 (文本 [4], 5, 相减 (寻找文本 (文本 [4], “]”, , 假), 5)))
    赋值 (a, 分割文本 (文本 [大计次], “]”, ))
    .如果真 (等于 (取文本右边 (文本 [大计次], 1), “]”))
        加入成员 (a, “”)
    .如果真结束
    .计次循环首 (相减 (取数组成员数 (a), 1), 小计次)
         ' 加入成员 (lrc分段时间内容, 相加 (a [小计次], “]”, a [取数组成员数 (a)]))
    .计次循环尾 ()
.计次循环尾 ()
 ' 删掉前4行的多余数组
删除成员 (lrc分段时间内容, 1, 4)
插入成员 (lrc分段时间内容, 1, 相加 (“[00:00.00]”, lrc歌曲名, “――”, lrc歌手))
关闭文件 (文件号)
排序LRC时间内容 ()
赋值 (行间距, 5)
赋值 (字体高度, 12)
赋值 (纵坐标, 相加 (相除 (取用户区高度 (), 2), 相除 (相加 (字体高度, 行间距), 2)))
.计次循环首 (取数组成员数 (lrc时间头数组), t)
    赋值 (横坐标, 相除 (相减 (取用户区宽度 (), lrc排序后分段内容.取宽度 ( [t])), 2))
    横坐标.定位写出 (相加 (相减 (纵坐标, 相加 (字体高度, 行间距)), 相乘 (t, 相加 (字体高度, 行间距))), lrc排序后分段内容 [t])
.计次循环尾 ()
.复制 ()

.子程序 __启动窗口_将被销毁, 空白型, , 
结束 ()


.子程序 _滑块条1_位置被改变, 空白型, , 
.局部变量 P1, 小数型, , , 
.局部变量 h, 整数型, , , 
.局部变量 v, 整数型, , , 
.局部变量 gg, 整数型, , , 
.局部变量 分, 文本型, , , 
.局部变量 秒, 文本型, , , 
.局部变量 毫秒, 文本型, , , 

赋值 (., 0)
赋值 (P1, 相乘 (., 1000))
.如果 (等于 (相除 (P1, 1000), .))
    赋值 (., 0)
    赋值 (., 真)
    MCI控制 (“seek mymp3 to start”, “”, 0, 0)
    .清除 ()
    .清除 ()
    赋值 (纵坐标, 相加 (相除 (取用户区高度 (), 2), 相除 (相加 (字体高度, 行间距), 2)))
    赋值 (., “播放”)
    .如果 (小于 (整除 (到数值 (总时间), 60000), 10))
        赋值 (分, 相加 (“0”, 到文本 (整除 (到数值 (总时间), 60000))))
    .否则
        赋值 (分, 到文本 (整除 (到数值 (总时间), 60000)))
    .如果结束
    .如果 (小于 (求余数 (整除 (到数值 (总时间), 1000), 60), 10))
        赋值 (秒, 相加 (“0”, 到文本 (求余数 (整除 (到数值 (总时间), 1000), 60))))
    .否则
        赋值 (秒, 到文本 (求余数 (整除 (到数值 (总时间), 1000), 60)))
    .如果结束
    赋值 (., 相加 (分, “：”, 秒))
.否则
    .如果 (小于 (P1, 到数值 (lrc时间头数组 [取数组成员数 (lrc时间头数组)])))
        .计次循环首 (取数组成员数 (lrc时间头数组), h)
            .如果 (并且 (大于或等于 (P1, 到数值 (lrc时间头数组 [h])), 小于 (P1, 到数值 (lrc时间头数组 [相加 (h, 1)]))))
                赋值 (tc, h)
            .否则
                
            .如果结束
            
        .计次循环尾 ()
        赋值 (增量, 相乘 (相除 (相减 (P1, 到数值 (lrc时间头数组 [tc])), 相减 (到数值 (lrc时间头数组 [相加 (tc, 1)]), 到数值 (lrc时间头数组 [tc]))), 相加 (字体高度, 行间距)))
        .清除 ()
        .计次循环首 (取数组成员数 (lrc时间头数组), v)
            .判断开始 (并且 (小于或等于 (到数值 (lrc时间头数组 [v]), P1), 小于 (P1, 到数值 (lrc时间头数组 [相加 (v, 1)]))))
                赋值 (., #红褐)
            .默认
                
            .判断结束
            赋值 (横坐标, 相除 (相减 (取用户区宽度 (), lrc排序后分段内容.取宽度 ( [v])), 2))
            横坐标.定位写出 (相加 (相减 (纵坐标, 相乘 (相减 (tc, 1), 相加 (字体高度, 行间距)), 增量), 相乘 (v, 相加 (字体高度, 行间距))), lrc排序后分段内容 [v])
            赋值 (., #黑色)
        .计次循环尾 ()
        .复制 ()
    .否则
        .如果 (并且 (大于或等于 (P1, 到数值 (lrc时间头数组 [取数组成员数 (lrc时间头数组)])), 小于 (P1, 相乘 (., 1000))))
            赋值 (增量, 相乘 (相除 (相减 (P1, 到数值 (lrc时间头数组 [取数组成员数 (lrc时间头数组)])), 相减 (到数值 (总时间), 到数值 (lrc时间头数组 [取数组成员数 (lrc时间头数组)]))), 相加 (字体高度, 行间距)))
            .清除 ()
            .计次循环首 (取数组成员数 (lrc排序后分段内容), v)
                赋值 (横坐标, 相除 (相减 (取用户区宽度 (), lrc排序后分段内容.取宽度 ( [v])), 2))
                横坐标.定位写出 (相减 (相加 (纵坐标, 相乘 (v, 相加 (字体高度, 行间距))), 增量), lrc排序后分段内容 [v])
            .计次循环尾 ()
            .复制 ()
            赋值 (., 100)
            赋值 (., “暂停”)
        .否则
            
        .如果结束
        
    .如果结束
    MCI控制 (相加 (“seek mymp3 to ”, 到文本 (P1)), “”, 0, 0)
    MCI控制 (“play mymp3”, “”, 0, 0)
    赋值 (., 100)
    赋值 (., “暂停”)
    
    
    
.如果结束







 ' 不属于任何一个程序集、类模块的函数：
