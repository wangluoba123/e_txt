 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 270
    高度 = 342
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “趣味九宫”
    帮助文件名 = “”

窗口 窗口1
    左边 = 50
    顶边 = 50
    宽度 = 159
    高度 = 101
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 假
    禁止 = 假
    边框 = 0
    底图方式 = 1
    底色 = 16759665 '  0xFFBB71
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 真
    外形 = 2
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “”
    帮助文件名 = “”



.常量 AW_ACTIVATE, "131072", , 激活窗口。
.常量 AW_BLEND, "524288", , 使用渐显或渐隐效果，此标志只能用于顶层窗口。
.常量 AW_CENTER, "16", , 从中心向四周或从四周向中心。
.常量 AW_HIDE, "65536", , 隐藏窗口，默认是显示窗口。(用于程序退出时。)
.常量 AW_HOR_NEGATIVE, "2", , 从右至左动画窗口，此标志可与滚动或滑动动画一起使用。
.常量 AW_HOR_POSITIVE, "1", , 从左至右动画窗口，此标志可与滚动或滑动动画一起使用。
.常量 AW_SLIDE, "262144", , 使用滑动动画，默认情况下是使用滚动动画。
.常量 AW_VER_NEGATIVE, "8", , 从下至上动画窗口，此标志可与滚动或滑动动画一起使用。
.常量 AW_VER_POSITIVE, "4", , 从上至下动画窗口，此标志可与滚动或滑动动画一起使用。
.常量 GWL_EXSTYLE, "-20", , 
.常量 SW_MAXIMIZE, "3", , 
.常量 SW_MINIMIZE, "6", , 
.常量 SW_RESTORE, "9", , 
.常量 SW_SHOW, "5", , 
.常量 SW_HIDE, "0", , 
.常量 HWND_BOTTOM, "1", , 
.常量 SWP_NOSIZE, "1", , 
.常量 SWP_NOMOVE, "2", , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 4 系统核心支持库
 ' iext2 AF6AD80AA4244A59AFB3D83ECF5173CC 1 1 扩展界面支持库二
 ' eAPI F7FC1AE45C5C4758AF03EF19F18A395D 1 1 应用接口支持库
 ' xplib 7F54B9CE8887428dBA9CEEB94CEF4C72 1 6 XP风格界面库




数据类型 POINT, , 
    .成员 x, 空白型, , , 
    .成员 y, 空白型, , , 


.DLL命令 AnimateWindow, 整数型, "", "AnimateWindow", , 
    .参数 hwnd, 空白型, , 
    .参数 delay, 空白型, , 
    .参数 flags, 空白型, , 

.DLL命令 SetWindowLong, 整数型, "", "SetWindowLongA", , 
    .参数 hWnd, 空白型, , 
    .参数 nIndex, 空白型, , 
    .参数 dwNewLong, 空白型, , 

.DLL命令 SetLayeredWindowAttributes, 整数型, "", "SetLayeredWindowAttributes", , 
    .参数 hwnd, 空白型, , 
    .参数 param1, 空白型, , 
    .参数 param2, 空白型, , 
    .参数 param3, 空白型, , 

.DLL命令 FindwindowExII, 整数型, "", "FindWindowExA", , 
    .参数 hwndParent, 空白型, , 
    .参数 hwndAfter, 空白型, , 
    .参数 lpszClass, 整数型, , 
    .参数 lpszWindow, 整数型, , 

.DLL命令 GetWindowText, 空白型, "", "GetWindowTextA", , 
    .参数 hwnd, 空白型, , 
    .参数 lpString, 文本型, , 
    .参数 nMaxCount, 空白型, , 

.DLL命令 IsWindowVisible, 逻辑型, "", "IsWindowVisible", , 
    .参数 hWnd, 空白型, , 

.DLL命令 GetClassName, 整数型, "", "GetClassNameA", , 
    .参数 hwnd, 空白型, , 
    .参数 lpClassName, 文本型, , 
    .参数 nMaxCount, 空白型, , 

.DLL命令 ShowWindow, 空白型, "", "ShowWindow", , 
    .参数 hwnd, 空白型, , 
    .参数 nCmdShow, 空白型, , 

.DLL命令 EnableWindow, 逻辑型, "", "EnableWindow", , 
    .参数 hWnd, 空白型, , 
    .参数 bEnabled, 逻辑型, , 

.DLL命令 FindWindowCI, 整数型, "", "FindWindow", , 
    .参数 lpClassName, 文本型, , 
    .参数 lpWindowName, 整数型, , 

.DLL命令 FindWindowIC, 整数型, "", "FindWindow", , 
    .参数 lpClassName, 整数型, , 
    .参数 lpWindowName, 文本型, , 

.DLL命令 FindWindowCC, 整数型, "", "FindWindow", , 
    .参数 lpClassName, 文本型, , 
    .参数 lpWindowName, 文本型, , 

.DLL命令 SetWindowPos, 逻辑型, "", "SetWindowPos", , 
    .参数 hwnd, 空白型, , 
    .参数 hwndInsertAfter, 空白型, , 
    .参数 x, 空白型, , 
    .参数 y, 空白型, , 
    .参数 cx, 空白型, , 
    .参数 cy, 空白型, , 
    .参数 fuFlags, 空白型, , 

.DLL命令 SetForegroundWindow, 逻辑型, "", "SetForegroundWindow", , 
    .参数 hwnd, 空白型, , 

.DLL命令 IsIconic, 逻辑型, "", "IsIconic", , 
    .参数 hwnd, 空白型, , 

.DLL命令 IsWindow, 逻辑型, "", "IsWindow", , 
    .参数 hwnd, 空白型, , 

.DLL命令 GetCursorPos, 逻辑型, "", "GetCursorPos", , 
    .参数 lpPoint, POINT, 传址, 

.DLL命令 WindowFromPoint, 整数型, "", "WindowFromPoint", , 
    .参数 X, 空白型, , 
    .参数 Y, 空白型, , 

.DLL命令 发送消息, 整数型, "", "SendMessageA", , 
    .参数 句柄, 整数型, , 
    .参数 消息值, 整数型, , 
    .参数 容器尺寸, 整数型, , 255
    .参数 容器, 文本型, , 长度255的空文本

.DLL命令 GetParent, 整数型, "", "GetParent", , 
    .参数 hwnd, 空白型, , 

.DLL命令 GetForegroundWindow, 整数型, "", "GetForegroundWindow", , 

.DLL命令 取窗口标题_, 整数型, "user32.dll", "GetWindowTextA", , 
    .参数 窗口句柄, 整数型, , 
    .参数 缓冲区, 文本型, , 
    .参数 缓冲尺寸, 整数型, , 

.DLL命令 置窗口标题_, 整数型, "user32.dll", "SetWindowTextA", , 
    .参数 窗口句柄, 整数型, , 
    .参数 窗口标题, 文本型, , 

.窗口程序集 窗口程序集1, , , 

.程序集变量 按钮号, 未知类型0x20001, , , 
.程序集变量 按钮组, 未知类型0x20001, , "9", 
.程序集变量 原窗口句柄, 整数型, , , 
.程序集变量 现窗口句柄, 整数型, , , 
.子程序 __启动窗口_创建完毕, 空白型, , 
.局部变量 N, 整数型, , , 
.局部变量 M, 整数型, , , 
.局部变量 计次, 整数型, , , 

.计次循环首 (3, N)
    .计次循环首 (3, M)
        赋值 (计次, 相加 (计次, 1))
        复制窗口组件 (按钮组 [计次])
        赋值 (按钮组 [计次], , 相加 (., 相乘 (85, 相减 (M, 1))))
        赋值 (按钮组 [计次], , 相加 (., 相乘 (85, 相减 (N, 1))))
        赋值 (按钮组 [计次], , 真)
    .计次循环尾 ()
.计次循环尾 ()
_启动窗口.获取焦点 ()
载入 (窗口1, _启动窗口, 假)


.子程序 取鼠标光标所在处窗口, 整数型, 公开, 
.局部变量 pt, POINT, , , 

GetCursorPos (pt)
返回 (WindowFromPoint (pt.x, pt.y))

.子程序 _按钮1_被单击, 空白型, , 

赋值 (按钮号, 取事件组件 ())
子_载入窗口 ()

.子程序 子_载入窗口, 空白型, , 
.局部变量 N, 整数型, , , 

.计次循环首 (9, N)
    .如果真 (等于 (按钮组 [N], , “”))
        赋值 (窗口1., 真)
        返回 ()
    .如果真结束
    
.计次循环尾 ()

.子程序 _按钮10_被单击, 空白型, , 
.如果 (并且 (判断三钮之和是否为15 (1, 2, 3), 判断三钮之和是否为15 (4, 5, 6), 判断三钮之和是否为15 (7, 8, 9), 判断三钮之和是否为15 (1, 5, 9), 判断三钮之和是否为15 (3, 5, 7), 判断三钮之和是否为15 (7, 4, 1), 判断三钮之和是否为15 (2, 5, 8), 判断三钮之和是否为15 (3, 6, 9)))
    信息框 (“恭喜你过关”, 0, )
    
.否则
    信息框 (“失败”, 0, )
    
.如果结束



.子程序 判断三钮之和是否为15, 逻辑型, , 
.参数 参数1, 空白型, , 
.参数 参数2, 空白型, , 
.参数 参数3, 空白型, , 

.局部变量 和, 整数型, , , 

赋值 (和, 相加 (到数值 (未知支持库函数_76 (按钮组.取窗口句柄 ( [参数1]))), 到数值 (未知支持库函数_76 (按钮组.取窗口句柄 ( [参数2]))), 到数值 (未知支持库函数_76 (按钮组.取窗口句柄 ( [参数3]))))) ' 用这种方法才能正确取出标题

 ' 下面这种取标题的方法在设置窗口标题后(即拖动)后失效!
 ' 和 ＝ 到数值 (按钮组 [参数1].标题) ＋ 到数值 (按钮组 [参数2].标题) ＋ 到数值 (按钮组 [参数3].标题)

 ' 输出调试文本 (参数1, 参数2, 参数3, 和)
.如果 (等于 (和, 15))
    返回 (真)
.否则
    返回 (假)
.如果结束


.子程序 _按钮11_被单击, 空白型, , 
.局部变量 N, 整数型, , , 

.计次循环首 (9, N)
    赋值 (按钮组 [N], , “”)
    赋值 (窗口1. [N], , 真)
.计次循环尾 ()

.子程序 _按钮1_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

按下取窗口句柄 ()

.子程序 按下取窗口句柄, 空白型, , 
赋值 (原窗口句柄, 取鼠标光标所在处窗口 ())


.子程序 放开取窗口句柄, 空白型, , 
.局部变量 原标题, 文本型, , , 
.局部变量 现标题, 文本型, , , 

赋值 (现窗口句柄, 取鼠标光标所在处窗口 ())
.如果真 (不等于 (现窗口句柄, 原窗口句柄))
    赋值 (原标题, 取控件标题 (原窗口句柄))
    赋值 (现标题, 取控件标题 (现窗口句柄))
    未知函数_167838294 ()
    置窗口标题_ (现窗口句柄, 原标题)
.如果真结束


.子程序 取控件标题, 文本型, , 取控件或窗口的标题
.参数 控件或窗口句柄, 整数型, , 

.局部变量 TXT, 文本型, , , 

赋值 (TXT, 取空白文本 (255))
未知函数_167838328 (控件或窗口句柄, 13, 255, TXT)
返回 (TXT)

.子程序 _按钮1_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

放开取窗口句柄 ()


.子程序 _按钮2_被单击, 空白型, , 
信息框 (相加 (“在上面九宫格中填入1-9的数,如果任何连成直线的三个数之和都是15你就过关了!!”, #换行符, “                                                ◆支持拖动方法调整数的位置◆”), 0, “祝你好运”)

.窗口程序集 窗口程序集2, , , 

.程序集变量 选中内容, 文本型, , , 
.程序集变量 按钮组, 未知类型0x20001, , "9", 
.子程序 _窗口1_创建完毕, 空白型, , 
.局部变量 N, 整数型, , , 
.局部变量 M, 整数型, , , 
.局部变量 计次, 整数型, , , 

未知支持库函数_66 (窗口1.取窗口句柄 (), 160)
未知支持库函数_0 (#)
.计次循环首 (3, N)
    .计次循环首 (3, M)
        赋值 (计次, 相加 (计次, 1))
        复制窗口组件 (按钮组 [计次])
        赋值 (按钮组 [计次], , 相加 (., 相乘 (51, 相减 (M, 1))))
        赋值 (按钮组 [计次], , 相加 (., 相乘 (31, 相减 (N, 1))))
        赋值 (按钮组 [计次], , 到文本 (计次))
        赋值 ( [计次], , 真)
    .计次循环尾 ()
.计次循环尾 ()



.子程序 _超级按钮1_被单击, 空白型, , 
.局部变量 N, 整数型, , , 
.局部变量 超级按钮_局, 未知类型0x20001, , , 

赋值 (超级按钮_局, 取事件组件 ())
.计次循环首 (9, N)
    .如果真 (等于 (. [N], , .))
        返回 ()
    .如果真结束
    
.计次循环尾 ()

.如果真 (不等于 (.., “”))
    赋值 (按钮组 [到数值 (_启动窗口..)]., 真)
.如果真结束
赋值 (.., .)
赋值 (., 假)
赋值 (., 假)


.子程序 _窗口1_被显示, 空白型, , 
窗口1.移动 (相加 (_启动窗口., _启动窗口.., 3), 相加 (_启动窗口., 22, _启动窗口..), , )


.子程序 _窗口1_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.可视, 假)

.子程序 _窗口1_被双击, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.可视, 假)



 ' 不属于任何一个程序集、类模块的函数：
