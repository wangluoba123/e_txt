 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 592
    高度 = 451
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    窗口类名 = “”
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “ 员工信息管理”
    帮助文件名 = “”



.图片 备用数据库, " ' 已保存到：D:\易语言学习\Data\员工信息管理.e\备用数据库", , 备用数据库
.图片 默认相片, " ' 已保存到：D:\易语言学习\Data\员工信息管理.e\默认相片", , 
.图片 男生头像, " ' 已保存到：D:\易语言学习\Data\员工信息管理.e\男生头像", , 
.图片 女生图像, " ' 已保存到：D:\易语言学习\Data\员工信息管理.e\女生图像", , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 5 0 系统核心支持库
 ' xplib 7F54B9CE8887428dBA9CEEB94CEF4C72 2 0 XP风格界面库
 ' iext 27bb20fdd3e145e4bee3db39ddd6e64c 2 0 扩展界面支持库一
 ' eGrid 0B4337DA651B4b619ACF61334A7E8B47 2 1 高级表格支持库
 ' spec A512548E76954B6E92C21055517615B0 3 0 特殊功能支持库




数据类型 员工信息数据, , 
    .成员 姓名, 文本型, , , 
    .成员 性别, 文本型, , , 
    .成员 相片, 文本型, , , 如果将相片地址写入文件夹（路径）就用文本型，如果将相片存入数据库就用字节集
    .成员 工号, 文本型, , , 
    .成员 手机号码, 文本型, , , 

.全局变量 数据库文件名, 系统配置, , , 
.全局变量 员工相片目录, 系统配置, , , 

.窗口程序集 窗口程序集1, , , 

.程序集变量 程序集_员工信息, 员工信息数据, , "0", 
.程序集变量 保存相片文件到文件目录, 文本型, , , 
.程序集变量 命令, 整数型, , , 1.添加，2.修改
.子程序 __启动窗口_创建完毕, 空白型, , 
未知支持库函数_0 (2)
.如果真 (取反 (文件是否存在 (数据库文件名.取数据库文件 ()))) ' 本行判断数据库文件是否存在。如果不存在就重新写出数据库。
    信息框 (相加 (“如果您是第一次运行程序，”, #换行符, “”, #换行符, “点确定后程序会自动创建数据库和员工相片存放目录！”), #信息图标, “提示信息”)
    写到文件 (数据库文件名.取数据库文件 (), #备用数据库) ' 写出备用的空数据库
.如果真结束


.判断开始 (等于 (文件是否存在 (员工相片目录.取相片目录 ()), 假)) ' 本行判断员工相片文件夹是否存在。如果不存在就新建文件夹。
     ' 信息框 (“存放员工相片的目录创建成功！”, #信息图标, “提示信息”)
    创建目录 (员工相片目录.取相片目录 ()) ' 新建员工相片目录文件夹
.默认
    
.判断结束

数据库文件名.取数据库文件 ().打开MDB数据库 () ' 连接到ACCESS数据库
刷新员工信息 ()
连续赋值 (真, .禁止, .禁止, .禁止, .禁止, .禁止, .禁止) ' 窗口初始化后禁止添加，只有点击添加按钮后才能进行操作
.如果 (等于 (相减 (., 1), 0)) ' 本行判断是否存在员工数据，如果没有员工数据，图片框显示默认图片，如果有数据，图片框将显示光标位置的员工相片
    赋值 (.图片, #默认相片)
.否则
    
.如果结束

赋值 (.标题, 相加 (“总共 ”, 到文本 (相减 (., 1)), “ 位员工”))
_启动窗口.获取焦点 ()
1.未知支持库函数_0 (1)

.子程序 刷新员工信息, 空白型, , 刷新高级表格里所有员工的信息（显示所有员工信息）
.局部变量 N, 整数型, , , 
.局部变量 SQL, 整数型, , , 

 ' ******** 以下是员工资料（表名：员工资料）里的字段项目*********
 ' 字段:编号,自动编号
 ' 字段:姓名,文本型
 ' 字段:工号,文本型
 ' 字段:手机号码,文本型
 ' 字段:性别,文本型
 ' 字段:员工相片,文本型
 ' ******** 以上是员员工资料（表名：员工资料）里的字段项目*********
未知支持库函数_57 ()
赋值 (., 1)
 ' 高级表格_员工信息.列数 ＝ 4
写高级表格样式 () ' 设置表格样式
 ' SQL ＝ 外部数据库.查询 (“select * from 员工资料 order by 工号”)  ' 查询数据库“员工资料”表
赋值 (SQL, “select * from 员工资料 order by 编号”.查询 ()) ' 查询数据库“员工资料”表
 ' SQL ＝ 外部数据库.查询 (“select * from 员工资料 order by 编号”)  ' 查询数据库“员工资料”表

SQL.到首记录 ()
.判断循环首 (等于 (SQL.尾记录后 (), 假))
    到文本 (.).未知支持库函数_38 ()
     ' 高级表格_员工信息.置数据 (高级表格_员工信息.行数 － 1, 0, #表格常量.文本型, 高级表格_员工信息.行数 － 1)  ' 置单元格行号
     ' 高级表格_员工信息.置数据 (高级表格_员工信息.行数 － 1, 0, #表格常量.文本型, 外部数据库.读 (SQL, “编号”))  ' 置单元格行号
    相减 (., 1).未知支持库函数_9 (0, #., 相加 (到文本 (相减 (., 1)), “|”, 到文本 (SQL.读 (“编号”)))) ' 置单元格行号(高级表格的行号加数据库字段的自动编号)
    相减 (., 1).未知支持库函数_9 (1, #., SQL.读 (“工号”)) ' 置单元格工号
    相减 (., 1).未知支持库函数_9 (2, #., SQL.读 (“姓名”)) ' 置单元格姓名
    相减 (., 1).未知支持库函数_9 (3, #., SQL.读 (“性别”)) ' 置单元格性别
    相减 (., 1).未知支持库函数_9 (4, #., SQL.读 (“手机号码”)) ' 置单元格手机号码
    相减 (., 1).未知支持库函数_9 (5, #., 相加 (员工相片目录.取相片目录 (), “\”, SQL.读 (“员工相片”))) ' 置单元格员工相片
    SQL.到后一记录 ()
    处理事件 ()
.判断循环尾 ()
0.未知支持库函数_42 (0, ., ., 真)
#..未知支持库函数_14 (#白色, #银白)
1.未知支持库函数_0 (0)
SQL.关闭记录集 ()
调试输出 (取数组成员数 (程序集_员工信息)) ' 用于调试程序时使用，可以删除


.子程序 写高级表格样式, 空白型, , 设置高级表格样式
0.未知支持库函数_25 (0, ., ., #.) ' 设置表格对齐方式
0.未知支持库函数_18 (0, ., ., 12) ' 设置表格字体
0.未知支持库函数_9 (0, 1, “序号”) ' 设置第一列表头标题
0.未知支持库函数_32 (60) ' 设置第一列列宽
0.未知支持库函数_9 (1, 1, “工号”) ' 设置第二列表头标题
1.未知支持库函数_32 (50) ' 设置第二列列宽
0.未知支持库函数_9 (2, 1, “姓名”) ' 设置第三列表头标题
2.未知支持库函数_32 (75) ' 设置第三列列宽
0.未知支持库函数_9 (3, 1, “性别”) ' 设置第四列表头标题
3.未知支持库函数_32 (35) ' 设置第四列列宽
0.未知支持库函数_9 (4, 1, “手机号码”) ' 设置第五列表头标题
4.未知支持库函数_32 (80) ' 设置第五列列宽
0.未知支持库函数_9 (5, 1, “员工相片”) ' 设置第六列表头标题
5.未知支持库函数_32 (79) ' 设置第六列列宽
5.未知支持库函数_30 (#.) ' 指定表格的6列为图片型
5.未知支持库函数_35 (#.) ' 指定表格的6列图片显示方式
 ' 高级表格_交替色显示 (高级表格_员工信息)  ' 定义高级表格行的颜色交替显示


.子程序 _按钮_添加_被单击, 空白型, , 
连续赋值 (假, .禁止, .禁止, .禁止, .禁止, .禁止, .禁止)
 ' 连续赋值 (真, 按钮_修改.禁止, 按钮_删除.禁止)
连续赋值 (“ ”, .内容, .内容, .内容) ' 清空编辑框内容
赋值 (命令, 1)
赋值 (.现行选中项, 0) ' 恢复性别为未选中项
赋值 (.图片, #默认相片) ' 恢复图片框为默认相片

0.置文本 (“ 现行操作项目：添加员工”)

.子程序 _按钮_修改_被单击, 空白型, , 
连续赋值 (假, .禁止, .禁止, .禁止, .禁止, .禁止, .禁止)
 ' 连续赋值 (真, 按钮_添加.禁止)
赋值 (命令, 2)

0.置文本 (“ 现行操作项目：修改员工”)


.子程序 _按钮_保存_被单击, 空白型, , 
.局部变量 局部_员工信息, 员工信息数据, , , 
.局部变量 SQL, 整数型, , , 
.局部变量 SQL语句, 文本型, , , 

 ' ******** 以下是员工资料（表名：员工资料）里的字段项目*********
 ' 字段:编号,自动编号
 ' 字段:姓名,文本型
 ' 字段:工号,文本型
 ' 字段:手机号码,文本型
 ' 字段:性别,文本型
 ' 字段:员工相片,文本型
 ' ******** 以上是员员工资料（表名：员工资料）里的字段项目*********
赋值 (局部_员工信息.姓名, 删全部空 (.内容))
赋值 (局部_员工信息.性别, .内容)
赋值 (局部_员工信息.工号, 删全部空 (.内容))
赋值 (局部_员工信息.手机号码, 删全部空 (.内容))
 ' 局部_员工信息.相片 ＝ 取相片文件名 (通用对话框_相片.文件名)  ' 只取相片文件名写入数据库
赋值 (局部_员工信息.相片, 相加 (.内容, “.jpg”)) ' 只取相片自动更名后文件名写入数据库
.判断开始 (等于 (命令, 1))
    .判断开始 (等于 (局部_员工信息.姓名, “”)) ' 判断输入内容是否合法
        信息框 (“  请填写员工姓名！”, #警告图标, “错误提示：”)
        返回 ()
    .判断 (等于 (.现行选中项, 0))
        信息框 (“  请选择员工性别！”, #警告图标, “错误提示：”)
        返回 ()
    .判断 (等于 (.文件名, “”))
        信息框 (“  请选择员工相片！”, #警告图标, “错误提示：”)
        返回 ()
    .判断 (等于 (局部_员工信息.工号, “”))
        信息框 (“  请填写员工工号！”, #警告图标, “错误提示：”)
        返回 ()
    .判断 (等于 (局部_员工信息.手机号码, “”))
        信息框 (“  请填写员工手机号码！”, #警告图标, “错误提示：”)
        返回 ()
    .默认
        
        赋值 (SQL, 相加 (“select * from 员工资料 WHERE 姓名 ='”, 局部_员工信息.姓名, “'”).查询 ())
        SQL.到首记录 ()
        .如果真 (取反 (SQL.尾记录后 ())) ' 重名处理
            信息框 (“对不起，该员工姓名已经存在，请重新输入！”, #警告图标, “警告提示：”)
            SQL.关闭记录集 ()
            返回 ()
        .如果真结束
         ' 外部数据库.到后一记录 (SQL)
        SQL.关闭记录集 ()
        赋值 (SQL, 相加 (“select * from 员工资料 WHERE 工号 ='”, 局部_员工信息.工号, “'”).查询 ())
        SQL.到首记录 ()
        .如果真 (取反 (SQL.尾记录后 ())) ' 重名处理
            信息框 (“对不起，该员工工号已经存在，请重新输入！”, #警告图标, “警告提示：”)
            SQL.关闭记录集 ()
            返回 ()
        .如果真结束
         ' 外部数据库.到后一记录 (SQL)
        SQL.关闭记录集 ()
        赋值 (SQL, 相加 (“select * from 员工资料 WHERE 手机号码 ='”, 局部_员工信息.手机号码, “'”).查询 ())
        SQL.到首记录 ()
        .如果真 (取反 (SQL.尾记录后 ())) ' 重名处理
            信息框 (“对不起，该员工手机号码已经存在，请重新输入！”, #警告图标, “警告提示：”)
            SQL.关闭记录集 ()
            返回 ()
        .如果真结束
         ' 外部数据库.到后一记录 (SQL)
        SQL.关闭记录集 ()
        
        创建相片文件并复制相片 ()
        赋值 (SQL语句, 相加 (“insert into 员工资料( 姓名,性别,员工相片,工号,手机号码) values ('”, 局部_员工信息.姓名, “','”, 局部_员工信息.性别, “','”, 局部_员工信息.相片, “','”, 局部_员工信息.工号, “','”, 局部_员工信息.手机号码, “')”))
        .如果真 (SQL语句.执行 ()) ' 添加新员工信息
            信息框 (“  添加员工信息成功！”, #信息图标, “提示成功：”)
            刷新员工信息 ()
            赋值 (.内容, “”)
            赋值 (.现行选中项, 0)
            赋值 (.图片, #默认相片)
            赋值 (.内容, “”)
            赋值 (.内容, “”)
        .如果真结束
        
    .判断结束
    
    连续赋值 (真, .禁止, .禁止, .禁止, .禁止, .禁止, .禁止)
    刷新员工信息 ()
    赋值 (.标题, 相加 (“总共 ”, 到文本 (相减 (., 1)), “ 位员工”))
.判断 (等于 (命令, 2))
    .判断开始 (等于 (局部_员工信息.姓名, “”)) ' 判断输入内容是否合法
        信息框 (“  请填写员工姓名！”, #警告图标, “错误提示：”)
        返回 ()
    .判断 (等于 (.现行选中项, 0))
        信息框 (“  请选择员工性别！”, #警告图标, “错误提示：”)
        返回 ()
    .判断 (等于 (.图片, 读入文件 (相加 (员工相片目录.取相片目录 (), “\”, “”))))
        信息框 (“  请选择员工相片！”, #警告图标, “错误提示：”)
        返回 ()
    .判断 (等于 (局部_员工信息.工号, “”))
        信息框 (“  请填写员工工号！”, #警告图标, “错误提示：”)
        返回 ()
    .判断 (等于 (局部_员工信息.手机号码, “”))
        信息框 (“  请填写员工手机号码！”, #警告图标, “错误提示：”)
        返回 ()
    .默认
        
    .判断结束
    
    
    创建相片文件并复制相片 ()
     ' SQL语句 ＝ “select * from 员工资料 where 工号='” ＋ 局部_员工信息.工号 ＋ “' and 编号<>” ＋ 到文本 (高级表格_员工信息.取光标行号 ())
     ' SQL ＝ 外部数据库.查询 (SQL语句)
     ' 外部数据库.到首记录 (SQL)
     ' .如果真 (取反 (SQL.尾记录后 ())) ' 重名处理
         ' 信息框 (“对不起，该员工工号已经存在，请重新输入！”, #警告图标, “警告提示：”)
         ' 外部数据库.关闭记录集 (SQL)
         ' 返回 ()
    .如果真结束
     ' ' 外部数据库.到后一记录 (SQL)
     ' 外部数据库.关闭记录集 (SQL)
    
    
    
    赋值 (SQL语句, 相加 (“update 员工资料 set 姓名 = '”, 局部_员工信息.姓名, “',性别 = '”, 局部_员工信息.性别, “',员工相片 = '”, 局部_员工信息.相片, “',工号 = '”, 局部_员工信息.工号, “',手机号码 = '”, 局部_员工信息.手机号码, “' where 编号 = ”, 到文本 (未知支持库函数_3 ())))
     ' SQL语句 ＝ “update [员工资料] set [姓名] = '” ＋ 局部_员工信息.姓名 ＋ “',[性别] = '” ＋ 局部_员工信息.性别 ＋ “',[员工相片] = '” ＋ 局部_员工信息.相片 ＋ “',[手机号码] = '” ＋ 局部_员工信息.手机号码 ＋ “' where [工号] = '” ＋ 局部_员工信息.工号 ＋ “'”
    调试输出 (SQL语句)
    .如果真 (SQL语句.执行 ()) ' 修改
        信息框 (“  修改员工信息成功！”, #信息图标, “提示成功：”)
        刷新员工信息 ()
        赋值 (.内容, “”)
        赋值 (.现行选中项, 0)
        赋值 (.图片, #默认相片)
        赋值 (.内容, “”)
        赋值 (.内容, “”)
        
    .如果真结束
    
    
.默认
    连续赋值 (真, .禁止, .禁止, .禁止, .禁止, .禁止, .禁止)
    刷新员工信息 ()
.判断结束


0.置文本 (“ 现行操作项目：准备操作！”)

 ' SQL ＝ 外部数据库.查询 (“select * from 员工资料 where 编号=” ＋ 到文本 (高级表格_员工信息.取光标行号 ()))'查询
 ' 外部数据库.执行 (“update 员工资料 set 姓名='” ＋ 编辑框_姓名.内容 ＋ “' where 编号=” ＋ 到文本 (高级表格_员工信息.取光标行号 ()), )'修改


.子程序 _按钮_删除_被单击, 空白型, , 
.局部变量 取员工工号, 文本型, , , 
.局部变量 SQL, 文本型, , , 

 ' ******** 以下是员工资料（表名：员工资料）里的字段项目*********
 ' 字段:编号,自动编号
 ' 字段:姓名,文本型
 ' 字段:工号,文本型
 ' 字段:手机号码,文本型
 ' 字段:性别,文本型
 ' 字段:员工相片,文本型
 ' ******** 以上是员员工资料（表名：员工资料）里的字段项目*********
赋值 (取员工工号, 到文本 (未知支持库函数_3 ().未知支持库函数_10 (1)))
 ' SQL ＝ 外部数据库.查询 (“select * from 员工资料 where 工号='” ＋ 取员工工号 ＋ “'”)
 ' SQL ＝ “DELETE FROM 员工资料 WHERE 编号=” ＋ 到文本 (高级表格_员工信息.取数据 (高级表格_员工信息.取光标行号 (), 0))
赋值 (SQL, 相加 (“DELETE FROM 员工资料 WHERE 工号='”, 到文本 (相加 (未知支持库函数_3 ().未知支持库函数_10 (1), “'”))))

.如果真 (等于 (未知支持库函数_3 (), -1))
    返回 ()
.如果真结束

 ' .如果真 (等于 (信息框 (“确认删除?”, 相加 (#是否钮, #询问图标), “注意!”), #否钮))
    返回 ()
.如果真结束
.如果真 (SQL.执行 ())
    刷新员工信息 ()
    信息框 (“删除成功”, #信息图标, “提示成功”)
.如果真结束

调试输出 (SQL)



.子程序 _按钮_EXCEL_被单击, 空白型, , 
0.置文本 (“ 现行操作项目：从EXCEL导入资料”)


.子程序 _按钮_退出_被单击, 空白型, , 退出软件
.如果真 (等于 (信息框 (“真要退出吗？　　”, 36, “注意”), 5)) ' 确定退出
    关闭 ()
    压缩ACCESS数据库 (数据库文件名.取数据库文件 (), )
    销毁 ()
.如果真结束
返回 ()


.子程序 _图片框_相片_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

弹出菜单 ()


.子程序 _添加相片_被选择, 空白型, , 
.如果 (等于 (.内容, “”)) ' 判断是否输入了员工姓名，只有输入了姓名才能进行操作
    信息框 (“请输入员工姓名后再操作！”, #信息图标, “提示”)
    返回 ()
.否则
    
.如果结束

打开 () ' 选择员工相片
.如果 (不等于 (.文件名, “”))
    赋值 (.图片, 读入文件 (.文件名))
.否则
    信息框 (“未指定照片！”, #信息图标, “提示”)
    返回 ()
.如果结束


.子程序 创建相片文件并复制相片, 空白型, , 创建员工的相片目录并复制员工相片
.局部变量 局部_员工信息, 员工信息数据, , , 

赋值 (局部_员工信息.相片, .文件名)
.判断开始 (文件是否存在 (相加 (员工相片目录.取相片目录 (), “\”, 取相片文件名 (局部_员工信息.相片))))
    .如果 (等于 (信息框 (“存在同名的文件，是否替换？”, 相加 (#信息图标, #是否钮), “提示”), 5))
        复制文件 (局部_员工信息.相片, 相加 (员工相片目录.取相片目录 (), “\”, 取相片文件名 (局部_员工信息.相片)))
        赋值 (保存相片文件到文件目录, 相加 (员工相片目录.取相片目录 (), “\”, 取相片文件名 (局部_员工信息.相片)))
    .否则
        信息框 (“请将文件更名后重新导入照片！”, #信息图标, “提示”)
        赋值 (.图片, #默认相片)
        返回 ()
    .如果结束
    
.判断 (复制文件 (局部_员工信息.相片, 相加 (员工相片目录.取相片目录 (), “\”, 取相片文件名 (局部_员工信息.相片))))
    赋值 (保存相片文件到文件目录, 相加 (员工相片目录.取相片目录 (), “\”, 取相片文件名 (局部_员工信息.相片))) ' 复制相片文件并保存
     ' 欲写入数据库相片路径 ＝ 取相片文件名 (员工相片路径)
     ' 文件更名 (员工相片目录.取相片目录 () ＋ “\” ＋ 取相片文件名 (局部_员工信息.相片), 员工相片目录.取相片目录 () ＋ “\” ＋ 编辑框_姓名.内容 ＋ “.” ＋ 取相片文件名后缀 (局部_员工信息.相片))  ' 修改已经保存的相片的文件名
    文件更名 (相加 (员工相片目录.取相片目录 (), “\”, 取相片文件名 (局部_员工信息.相片)), 相加 (员工相片目录.取相片目录 (), “\”, .内容, “.jpg”)) ' 修改已经保存的相片的文件名
    赋值 (保存相片文件到文件目录, “”)
    
.默认
    
.判断结束

调试输出 (相加 (“相片文件名：”, 取相片文件名 (局部_员工信息.相片)))
调试输出 (相加 (“相片后缀：”, 取相片文件名后缀 (局部_员工信息.相片)))

.子程序 取相片文件名, 文本型, , 取相片文件名(文件名加后缀)
.参数 相片文件名, 文本型, , 

赋值 (相片文件名, 取文本右边 (相片文件名, 相减 (取文本长度 (相片文件名), 倒找文本 (相片文件名, “\”, , 真))))
返回 (相片文件名)

.子程序 取相片文件名后缀, 文本型, , 取相片文件名的后缀
.参数 相片文件名后缀, 文本型, , 

赋值 (相片文件名后缀, 取文本右边 (相片文件名后缀, 相减 (取文本长度 (相片文件名后缀), 倒找文本 (相片文件名后缀, “.”, , 真))))
返回 (相片文件名后缀)


.子程序 _修改相片_被选择, 空白型, , 
 ' 如果真 (通用对话框_相片.打开 ())  ' 选择员工相片
 ' 图片框_相片.图片 ＝ 读入文件 (通用对话框_相片.文件名)  ' 读入相片
 ' 通用对话框_相片.文件名 ＝ “”  ' 清除对话框的文件名

.如果 (等于 (.内容, “”)) ' 判断是否输入了员工姓名，只有输入了姓名才能进行操作
    信息框 (“请输入员工姓名后再操作！”, #信息图标, “提示”)
    返回 ()
.否则
    
.如果结束

打开 () ' 选择员工相片
.如果 (不等于 (.文件名, “”))
    赋值 (.图片, 读入文件 (.文件名))
.否则
    信息框 (“未指定照片！”, #信息图标, “提示”)
    返回 ()
.如果结束



.子程序 _导出相片_被选择, 空白型, , 
.如果真 (等于 (.图片, #默认相片))
    信息框 (“对不起，不可导出空相片　　”, 48, “注意”)
    返回 ()
.如果真结束
赋值 (.类型, 1)
赋值 (.标题, “请选择保存位置”)
.如果真 (打开 ())
    写到文件 (.文件名, .图片)
    赋值 (.文件名, “”)
.如果真结束


.子程序 _图片框_相片_鼠标位置被移动, 逻辑型, , 鼠标移动到相片上显示标签的信息
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.可视, 真)

.子程序 _透明标签_相片管理_鼠标位置被移动, 逻辑型, , 鼠标移开时禁止显示标签的信息
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.可视, 假)

.子程序 _编辑框_姓名_字符输入, 整数型, , 字符输入限制
.参数 字符代码, 整数型, , 

.如果真 (并且 (小于 (字符代码, 127), 不等于 (字符代码, #退格键))) ' (字符代码 ＜ 127 且 字符代码 ≠ #退格键 或 字符代码 ≠ #空格键)
    信息框 (“不允许输入数字、字母和特殊符号！”, 48, “注意”)
    返回 (0)
    
.如果真结束


.子程序 _高级表格_员工信息_光标位置改变, 空白型, , 
.局部变量 SQL, 整数型, , , 
.局部变量 取员工工号, 文本型, , , 
.局部变量 数据库编号, 文本型, , , 
.局部变量 取数据库编号, 整数型, , , 

 ' ******** 以下是员工资料（表名：员工资料）里的字段项目*********
 ' 字段:编号,自动编号
 ' 字段:姓名,文本型
 ' 字段:工号,文本型
 ' 字段:手机号码,文本型
 ' 字段:性别,文本型
 ' 字段:员工相片,文本型
 ' ******** 以上是员员工资料（表名：员工资料）里的字段项目*********
 ' 取员工工号 ＝ 到文本 (高级表格_员工信息.取数据 (高级表格_员工信息.取光标行号 (), 1))
赋值 (数据库编号, 到文本 (未知支持库函数_3 ().未知支持库函数_10 (0)))
赋值 (取数据库编号, 到数值 (取文本右边 (数据库编号, 相减 (取文本长度 (数据库编号), 倒找文本 (数据库编号, “|”, , 真)))))
 ' SQL ＝ 外部数据库.查询 (“select * from 员工资料 where 编号=” ＋ 到文本 (高级表格_员工信息.取光标行号 ()))
赋值 (SQL, 相加 (“select * from 员工资料 where 编号=”, 到文本 (取数据库编号), “”).查询 ())
 ' SQL ＝ 外部数据库.查询 (“select * from 员工资料 where 工号='” ＋ 取员工工号 ＋ “'”)
赋值 (.内容, SQL.读 (“姓名”))
SQL.读 (“性别”).选择 ()
赋值 (.内容, SQL.读 (“工号”))
赋值 (.内容, SQL.读 (“手机号码”))
赋值 (.图片, 读入文件 (相加 (员工相片目录.取相片目录 (), “\”, SQL.读 (“员工相片”))))
连续赋值 (真, .禁止, .禁止, .禁止, .禁止, .禁止, .禁止)
 ' 连续赋值 (假, 按钮_添加.禁止, 按钮_修改.禁止, 按钮_保存.禁止, 按钮_删除.禁止)
 ' 调试输出 (图片框_相片.图片)
调试输出 (数据库编号)
调试输出 (取数据库编号)
调试输出 (SQL)


.子程序 __启动窗口_可否被关闭, 逻辑型, , 退出
.如果真 (等于 (信息框 (“真要退出吗？　　”, 36, “注意”), 5)) ' 确定退出
    关闭 ()
    压缩ACCESS数据库 (数据库文件名.取数据库文件 (), )
    返回 (真) ' 关闭
.如果真结束
返回 (假) ' 不关闭

.子程序 压缩ACCESS数据库, 整数型, , 压缩指定的ACCESS数据库。请注意先关闭数据库。返回0成功，返回1则是创建系统对象失败，返回2是调用失败，返回3是数据库使用中
.参数 路径, 文本型, , ACCESS数据库文件所在路径，必须是电脑中确实存在的文件
.参数 密码, 文本型, 可空, ACCESS数据库密码，如果没有密码，请留空，否则请给出ACCESS的密码

.局部变量 Engine, 对象, , , 
.局部变量 tmp, 文本型, , , 

.如果真 (等于 (Engine.创建 (“JRO.JetEngine”, ), 假))
    返回 (1)
.如果真结束
赋值 (tmp, 取临时文件名 ())
Engine.方法 (“CompactDatabase”, 相加 (“Provider=Microsoft.Jet.OLEDB.4.0;Data Source=”, 路径, 选择 (是否为空 (密码), “”, 相加 (“;Jet OLEDB:Database Password=”, 密码))), 相加 (“Provider=Microsoft.Jet.OLEDB.4.0;Data Source=”, tmp, 选择 (等于 (密码, “”), “”, 相加 (“;Jet OLEDB:Database Password=”, 密码))))
.如果真 (不等于 (Engine.取错误 (), “”))
    返回 (2)
.如果真结束
Engine.清除 ()
.如果真 (等于 (删除文件 (路径), 假))
    删除文件 (tmp)
    返回 (3)
.如果真结束
.如果真 (等于 (复制文件 (tmp, 路径), 假))
    返回 (3)
.如果真结束
返回 (选择 (删除文件 (tmp), 0, 3))

.子程序 _编辑框_手机号码_字符输入, 整数型, , 
.参数 字符代码, 整数型, , 

.如果真 (取反 (或者 (并且 (大于 (字符代码, 47), 小于 (字符代码, 58)), 等于 (字符代码, 8), 不等于 (字符代码, #空格键)))) ' (字符代码 ＜ 127 且 字符代码 ≠ #退格键 或 字符代码 ≠ #空格键)
    信息框 (“不允许输入数字以外的其他字符！”, 48, “注意”)
    返回 (0)
    
.如果真结束



.子程序 _编辑框_工号_字符输入, 整数型, , 
.参数 字符代码, 整数型, , 

.如果真 (取反 (或者 (并且 (大于 (字符代码, 47), 小于 (字符代码, 58)), 等于 (字符代码, 8), 不等于 (字符代码, #空格键)))) ' (字符代码 ＜ 127 且 字符代码 ≠ #退格键 或 字符代码 ≠ #空格键)
    信息框 (“不允许输入数字以外的其他字符！”, 48, “注意”)
    返回 (0)
    
.如果真结束


.程序集 公共程序集, , , 

.子程序 高级表格_交替色显示, 空白型, 公开, 定义高级表格行的颜色交替显示
.参数 参_高级表格1, 未知类型0x40001, , 

.局部变量 私_高级表格的列数, 整数型, , , 
.局部变量 i, 整数型, , , 

赋值 (私_高级表格的列数, 参_高级表格1.)
.计次循环首 (相减 (参_高级表格1., 1), i)
    .如果 (等于 (求余数 (i, 2), 0))
         ' 高级表格1.置单元格背景颜色 (i, 0, i, 高级表格的列数 － 1, #透明)  ' 透明 有bug
        参_高级表格1.未知支持库函数_24 (i, 0, i, 相减 (私_高级表格的列数, 1), #银白)
    .否则
        参_高级表格1.未知支持库函数_24 (i, 0, i, 相减 (私_高级表格的列数, 1), #白色)
    .如果结束
    
.计次循环尾 ()

.类模块 系统配置, , , 

.程序集变量 数据库文件, 文本型, , , 
.程序集变量 相片目录, 文本型, , , 
.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用
赋值 (数据库文件, 相加 (取运行目录 (), “\dattest11.mdb”))
赋值 (相片目录, 相加 (取运行目录 (), “\Pic”))

.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 取数据库文件, 文本型, 公开, 调用格式：.取数据库文件 （） 参数<1>的名称为“欲取得的文件名称及路径”，类型为“文本型（text）”,可省略.
返回 (数据库文件)


.子程序 取相片目录, 文本型, 公开, 调用格式：.取相片目录 （） 参数<1>的名称为“欲取得的相片目录名称及路径”，类型为“文本型（text）”,可省略.
返回 (相片目录)



 ' 不属于任何一个程序集、类模块的函数：
