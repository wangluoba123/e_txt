 ' 文件类型：Windows窗口程序

 ' 程序名称：3D Photo
 ' 程序描述：本程序用易语言编写，希望大家都能支持汉语编程。
@备注:
本软件是根据人类眼睛观察事物的原理来判断事物的大小，距离等物理性质。然后将这些数据转换成3维模型记录下来，可广泛用于机器人，建筑测绘，游戏等行业。
 ' 程序作者：求智
 ' 邮政编码：
 ' 联系地址：QQ：107254428
 ' 联系电话：15111491912
 ' 传真号码：
 ' 电子信箱：lxc_820820@163.com
 ' 主页地址：http://home.51.com/?u=lxc820820132&_sid=hometop
 ' 版权声明：请尊重知识产权，反汇编高人请高台贵手。
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 742
    高度 = 433
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    窗口类名 = “”
    底图 =  ' 空
    图标 =  ' 已保存到：D:\易语言学习\Data\3D Photo.e\_启动窗口_图标.ico
    背景音乐 =  ' 空
    标题 = “3D Photo 测试版1.0”
    帮助文件名 = “”

窗口 注册窗口
    左边 = 50
    顶边 = 50
    宽度 = 327
    高度 = 377
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假

窗口 模型窗口
    左边 = 50
    顶边 = 50
    宽度 = 590
    高度 = 400
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 1
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 真
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    窗口类名 = “”
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “3D Photo ”
    帮助文件名 = “”

窗口 帮助窗口
    左边 = 50
    顶边 = 50
    宽度 = 411
    高度 = 493
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    窗口类名 = “”
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “”
    帮助文件名 = “”

窗口 相机设置窗口
    左边 = 50
    顶边 = 50
    宽度 = 600
    高度 = 673
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 1
    底图方式 = 2
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 真
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    窗口类名 = “”
    底图 =  ' 已保存到：D:\易语言学习\Data\3D Photo.e\相机设置窗口_底图
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “如何得到相机参数？”
    帮助文件名 = “”

窗口 相机函数
    左边 = 50
    顶边 = 50
    宽度 = 600
    高度 = 674
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 1
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 真
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    窗口类名 = “”
    底图 =  ' 已保存到：D:\易语言学习\Data\3D Photo.e\相机函数_底图
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “相机函数”
    帮助文件名 = “”

窗口 相机参数
    左边 = 50
    顶边 = 50
    宽度 = 594
    高度 = 639
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    窗口类名 = “”
    底图 =  ' 已保存到：D:\易语言学习\Data\3D Photo.e\相机参数_底图
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “相机参数”
    帮助文件名 = “”

窗口 窗口1
    左边 = 50
    顶边 = 50
    宽度 = 370
    高度 = 400
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假





 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 5 0 系统核心支持库
 ' OPenGL F05D3E4CE9E84d0f82332D62BAF6447F 2 0 OPenGL支持库
 ' BmpOperate 42305932-06E6-47a5-AC79-8BDCDC58DF61 2 0 位图操作支持库
 ' eImgConverter 8FA3AA46276847db8F28E57E7FB97B7F 2 0 图像格式转换支持库




数据类型 点, , 
    .成员 X, 整数型, , , 
    .成员 Y, 整数型, , , 

数据类型 坐标集, , 
    .成员 坐标, 点, , "1", 

数据类型 三维坐标, , 
    .成员 X, 整数型, , , 
    .成员 Y, 整数型, , , 
    .成员 Z, 整数型, , , 

数据类型 点小, , 
    .成员 X, 小数型, , , 
    .成员 Y, 小数型, , , 

数据类型 点属性, , 
    .成员 X, 整数型, , , 
    .成员 Y, 整数型, , , 
    .成员 ID, 整数型, , , 

数据类型 分段点, , 
    .成员 起点, 点属性, , , 
    .成员 终点, 点属性, , , 

数据类型 色块属性, , 
    .成员 颜色, 整数型, , , 
    .成员 图片宽度, 整数型, , , 
    .成员 上点, 点, , , 
    .成员 下点, 点, , , 
    .成员 左点, 点, , , 
    .成员 右点, 点, , , 

数据类型 模型数据, , 
    .成员 颜色, RGB, , , 
    .成员 点集合三维坐标, 三维坐标集, , , 

数据类型 RGB, , 
    .成员 R, 小数型, , , 
    .成员 G, 小数型, , , 
    .成员 B, 小数型, , , 

数据类型 三维坐标集, , 
    .成员 三维坐标, 三维坐标, , "1", 

.全局变量 注册, 逻辑型, , , 
.全局变量 IP, 整数型, , , 
.全局变量 请求码, 文本型, , , 
.全局变量 文件号a, 整数型, , , 
.全局变量 文件号b, 整数型, , , 
.全局变量 文件号c, 整数型, , , 
.全局变量 注册码, 整数型, , , 
.全局变量 MXCK, 逻辑型, , , 
.全局变量 A图文件, 文本型, , , 
.全局变量 B图文件, 文本型, , , 
.全局变量 进度位置, 整数型, , , 
.全局变量 模型, 模型数据, , "1", 
.全局变量 图片错误, 逻辑型, , , 
.全局变量 角度, 整数型, , "2", 
.全局变量 Z坐标, 整数型, , , 
.全局变量 Z中心, 整数型, , , 
.全局变量 Y中心, 整数型, , , 
.全局变量 X中心, 整数型, , , 
.全局变量 三D文件, 文本型, , , 
.全局变量 按下, 逻辑型, , , 
.全局变量 角度全, 整数型, , "2", 

.DLL命令 选择目标, 整数型, "", "SelectObject", , 
    .参数 设备句柄, 空白型, , 
    .参数 目标号, 空白型, , 

.DLL命令 创建字体, 整数型, "", "CreateFontA", , 只使用 TrueType 字体文件
    .参数 高度, 空白型, , 
    .参数 宽度, 空白型, , 
    .参数 倾斜角度, 空白型, , 
    .参数 后仰角度, 空白型, , 
    .参数 重量, 空白型, , 
    .参数 斜体, 空白型, , 
    .参数 下划线, 空白型, , 
    .参数 StrikeOut字体, 空白型, , 
    .参数 字符集, 空白型, , 
    .参数 输出精度, 空白型, , 
    .参数 裁剪精度, 空白型, , 
    .参数 输出质量, 空白型, , 
    .参数 定位, 空白型, , 
    .参数 字体名称, 文本型, , 

.窗口程序集 启动窗口程序集, , , 

.程序集变量 TPZ, 逻辑型, , , 
.程序集变量 TPY, 逻辑型, , , 
.子程序 _按钮输入左图_被单击, 空白型, , 
赋值 (.位置, 0)
赋值 (.过滤器, “图象文件|*.bmp;*.JPEG;*.TIFF:*.PNG;*.PCX;*.PCD;*.JPG”)
打开 ()

.如果 (等于 (.文件名, “”))
    赋值 (.底图, 读入文件 (“”))
    赋值 (TPZ, 假)
    
.否则
    赋值 (A图文件, .文件名)
    未知支持库函数_1 (A图文件, 相加 (取运行目录 (), “\image2\”, “A.BMP”))
    赋值 (.底图, 读入文件 (相加 (取运行目录 (), “\image2\”, “A.BMP”)))
    赋值 (TPZ, 真)
    赋值 (A图文件, “”)
    
    
    
.如果结束



.子程序 _按钮转换_被单击, 空白型, , 
.局部变量 色块数, 整数型, , , 
.局部变量 色块数L, 整数型, , , 
.局部变量 色块属性, 色块属性, , , 
.局部变量 色块ID, 整数型, , , 
.局部变量 边缘坐标集, 坐标集, , , 
.局部变量 关键点集左, 坐标集, , , 
.局部变量 关键点集右, 坐标集, , , 
.局部变量 精度, 小数型, , , 
.局部变量 位图, 位图, , , 
.局部变量 点ID, 整数型, , , 
.局部变量 最大Z, 整数型, , , 
.局部变量 最小Z, 整数型, , , 
.局部变量 最大Y, 整数型, , , 
.局部变量 最小Y, 整数型, , , 
.局部变量 最大X, 整数型, , , 
.局部变量 最小X, 整数型, , , 


创建目录 (相加 (取运行目录 (), “\ima.ge”))

赋值 (.位置, 0)
赋值 (图片错误, 假)
.如果真 (并且 (等于 (TPZ, 真), 等于 (TPY, 真)))
    .如果 (等于 (_启动窗口..选中, 真))
        赋值 (_启动窗口..底图, 调整图片 (_启动窗口..底图, _启动窗口..现行选中项))
        处理事件 ()
        赋值 (.位置, 5)
    .否则
        
    .如果结束
    .如果 (等于 (_启动窗口..选中, 真))
        赋值 (_启动窗口..底图, 调整图片 (_启动窗口..底图, _启动窗口..现行选中项))
        处理事件 ()
        赋值 (.位置, 10)
         ' 进度位置 ＝ 20
    .否则
        
    .如果结束
    
    
    赋值 (色块数L, 相减 (分割图片 (_启动窗口..底图, “L”), 1))
    赋值 (.位置, 20)
     ' 进度位置 ＝ 20
    
    
    
    赋值 (色块数, 相减 (分割图片 (_启动窗口..底图, “R”), 1))
    赋值 (.位置, 30)
     ' 进度位置 ＝ 30
    
    
    
    .如果 (等于 (色块数L, 色块数))
        赋值 (色块ID, 1)
        
        
        .计次循环首 (色块数, )
            
            
            
            
            
            赋值 (色块属性, 取色块属性 (色块ID, “L”))
            赋值 (精度, 相除 (色块属性.图片宽度, 相乘 (相加 (.现行选中项, 1), 50)))
            
            
            赋值 (.位置, 40)
            
            重定义数组 (边缘坐标集.坐标, 假, 1)
            
            赋值 (边缘坐标集, 取色块边缘 (色块ID, “L”, 色块属性.上点))
            
             ' 位图.载入数据 (画板1.底图)
             ' 点ID ＝ 1
             ' .计次循环首 (取数组成员数 (边缘坐标集.坐标), )
                 ' 位图.置某点颜色 (边缘坐标集.坐标 [点ID].X, 边缘坐标集.坐标 [点ID].Y, #白色)
                 ' 点ID ＝ 点ID ＋ 1
             ' .计次循环尾 ()
             ' 画板1.底图 ＝ 位图.取位图数据 ()
             ' 处理事件 ()
             ' 进度位置 ＝ 进度位置 ＋ 5
            
            赋值 (.位置, 50)
            
            赋值 (关键点集左, 找关键点 (边缘坐标集, 色块属性.上点, 色块属性.下点, 精度))
            
            位图.载入数据 (.底图)
            赋值 (点ID, 1)
            .计次循环首 (取数组成员数 (关键点集左.坐标), )
                位图.置某点颜色 (关键点集左.坐标 [点ID], X, 关键点集左.坐标 [点ID], Y, #白色)
                 ' 画板1.文本颜色 ＝ #白色
                 ' 画板1.定位写出 (关键点集左.坐标 [点ID].X － 2, 关键点集左.坐标 [点ID].Y ＋ 2, 到文本 (点ID))
                
                赋值 (点ID, 相加 (点ID, 1))
            .计次循环尾 ()
            赋值 (.底图, 位图.取位图数据 ())
            处理事件 ()
            写到文件 (相加 (取运行目录 (), “\image2\C.bmp”), 位图.取位图数据 ())
            
            
            
            
            
            
            
            
            
             ' 进度位置 ＝ 进度位置 ＋ 3
            赋值 (.位置, 55)
            
            赋值 (色块属性, 取色块属性 (色块ID, “R”))
            
             ' 进度位置 ＝ 进度位置 ＋ 3
            赋值 (.位置, 60)
            
            赋值 (边缘坐标集, 取色块边缘 (色块ID, “R”, 色块属性.上点))
            
            
             ' 位图.载入数据 (画板2.底图)
             ' 点ID ＝ 1
             ' .计次循环首 (取数组成员数 (边缘坐标集.坐标), )
                 ' 位图.置某点颜色 (边缘坐标集.坐标 [点ID].X, 边缘坐标集.坐标 [点ID].Y, #白色)
                 ' 点ID ＝ 点ID ＋ 1
             ' .计次循环尾 ()
             ' 画板2.底图 ＝ 位图.取位图数据 ()
             ' 处理事件 ()
            
            赋值 (.位置, 70)
            
            赋值 (关键点集右, 找关键点 (边缘坐标集, 色块属性.上点, 色块属性.下点, 精度))
            
            位图.载入数据 (.底图)
            赋值 (点ID, 1)
            .计次循环首 (取数组成员数 (关键点集右.坐标), )
                位图.置某点颜色 (关键点集右.坐标 [点ID], X, 关键点集右.坐标 [点ID], Y, #白色)
                 ' 画板2.文本颜色 ＝ #白色
                 ' 画板2.定位写出 (关键点集右.坐标 [点ID].X － 2, 关键点集右.坐标 [点ID].Y ＋ 2, 到文本 (点ID))
                
                赋值 (点ID, 相加 (点ID, 1))
            .计次循环尾 ()
            赋值 (.底图, 位图.取位图数据 ())
            处理事件 ()
            写到文件 (相加 (取运行目录 (), “\image2\D.bmp”), 位图.取位图数据 ())
            
            
            
            
            
            
            
            
            
             ' 进度位置 ＝ 进度位置 ＋ 3
            赋值 (.位置, 80)
            
            重定义数组 (模型, 真, 色块ID)
            
            赋值 (模型 [色块ID], 颜色.R, 相除 (取红 (色块属性.颜色), 255))
            赋值 (模型 [色块ID], 颜色.G, 相除 (取绿 (色块属性.颜色), 255))
            赋值 (模型 [色块ID], 颜色.B, 相除 (取蓝 (色块属性.颜色), 255))
            
            
             ' 进度位置 ＝ 进度位置 ＋ 3
            赋值 (.位置, 90)
            
            
            
            .如果 (等于 (取数组成员数 (关键点集左.坐标), 取数组成员数 (关键点集右.坐标)))
                
                
                赋值 (模型 [色块ID], 点集合三维坐标, 算多点三维坐标 (关键点集左, 关键点集右, .内容, .内容, .内容, .底图))
                
                
                
                .如果 (大于 (取数组成员数 (模型 [色块ID], 点集合三维坐标.三维坐标), 0))
                    赋值 (点ID, 1)
                    .计次循环首 (取数组成员数 (模型 [色块ID], 点集合三维坐标.三维坐标), )
                        .如果 (并且 (等于 (色块ID, 1), 等于 (点ID, 1)))
                            赋值 (最小Z, 模型 [1].点集合三维坐标.三维坐标 [1].Z)
                            赋值 (最大Z, 模型 [1].点集合三维坐标.三维坐标 [1].Z)
                            赋值 (最小Y, 模型 [1].点集合三维坐标.三维坐标 [1].Y)
                            赋值 (最大Y, 模型 [1].点集合三维坐标.三维坐标 [1].Y)
                            赋值 (最小X, 模型 [1].点集合三维坐标.三维坐标 [1].X)
                            赋值 (最大X, 模型 [1].点集合三维坐标.三维坐标 [1].X)
                            
                            
                        .否则
                            
                        .如果结束
                        
                        .如果 (小于 (模型 [色块ID], 点集合三维坐标.三维坐标 [点ID], Z, 最小Z))
                            赋值 (最小Z, 模型 [色块ID], 点集合三维坐标.三维坐标 [点ID], Z)
                        .否则
                            
                        .如果结束
                        
                        .如果 (大于 (模型 [色块ID], 点集合三维坐标.三维坐标 [点ID], Z, 最大Z))
                            赋值 (最大Z, 模型 [色块ID], 点集合三维坐标.三维坐标 [点ID], Z)
                        .否则
                            
                        .如果结束
                        
                        .如果 (小于 (模型 [色块ID], 点集合三维坐标.三维坐标 [点ID], Y, 最小Y))
                            赋值 (最小Y, 模型 [色块ID], 点集合三维坐标.三维坐标 [点ID], Y)
                        .否则
                            
                        .如果结束
                        
                        .如果 (大于 (模型 [色块ID], 点集合三维坐标.三维坐标 [点ID], Y, 最大Y))
                            赋值 (最大Y, 模型 [色块ID], 点集合三维坐标.三维坐标 [点ID], Y)
                        .否则
                            
                        .如果结束
                        
                        .如果 (小于 (模型 [色块ID], 点集合三维坐标.三维坐标 [点ID], X, 最小X))
                            赋值 (最小X, 模型 [色块ID], 点集合三维坐标.三维坐标 [点ID], X)
                        .否则
                            
                        .如果结束
                        
                        .如果 (大于 (模型 [色块ID], 点集合三维坐标.三维坐标 [点ID], X, 最大X))
                            赋值 (最大X, 模型 [色块ID], 点集合三维坐标.三维坐标 [点ID], X)
                        .否则
                            
                        .如果结束
                        
                        
                        赋值 (点ID, 相加 (点ID, 1))
                    .计次循环尾 ()
                    
                    
                .否则
                    
                .如果结束
                
                
                
                
                
                
                
                
                
            .否则
                
            .如果结束
            赋值 (色块ID, 相加 (色块ID, 1))
            
            
        .计次循环尾 ()
        
        
        赋值 (Y中心, 相加 (相除 (相减 (最大Y, 最小Y), 2), 最小Y))
        赋值 (X中心, 相加 (相除 (相减 (最大X, 最小X), 2), 最小X))
        赋值 (Z中心, 相加 (相除 (相减 (最大Z, 最小Z), 2), 最小Z))
        赋值 (.位置, 100)
    .否则
        信息框 (“左右图片差异太大而无法识别,左右图片的颜色种数必须一样!”, 0, “错误!!!”)
    .如果结束
    
    .如果 (等于 (图片错误, 真))
        信息框 (“图片有错误部分,可能是相机参数不正确或左右图片搞反了!”, 0, “错误!!!”)
        
    .否则
        
    .如果结束
    
     ' 载入 (模型窗口, , 假)
    
     ' MXCK ＝ 真
    赋值 (.底图, 读入文件 (相加 (取运行目录 (), “\image2\”, “A.BMP”)))
    赋值 (.底图, 读入文件 (相加 (取运行目录 (), “\image2\”, “B.BMP”)))
.如果真结束


载入 (模型窗口, , 假)
赋值 (MXCK, 真)
赋值 (.位置, 0)
删除目录 (相加 (取运行目录 (), “\ima.ge”))

.子程序 _按钮注册_被单击, 空白型, , 
载入 (注册窗口, , 真)

.子程序 _按钮输入右图_被单击, 空白型, , 
赋值 (.位置, 0)
赋值 (.过滤器, “图象文件|*.bmp;*.JPEG;*.TIFF:*.PNG;*.PCX;*.PCD;*.JPG”)
打开 ()
.如果 (等于 (.文件名, “”))
    赋值 (.底图, 读入文件 (“”))
    赋值 (TPY, 假)
    
.否则
    赋值 (B图文件, .文件名)
    未知支持库函数_1 (B图文件, 相加 (取运行目录 (), “\image2\”, “B.BMP”))
    赋值 (.底图, 读入文件 (相加 (取运行目录 (), “\image2\”, “B.BMP”)))
    赋值 (TPY, 真)
    赋值 (B图文件, “”)
    
    
.如果结束


.子程序 _按钮帮助_被单击, 空白型, , 
载入 (帮助窗口, , 真)

.子程序 __启动窗口_创建完毕, 空白型, , 
创建目录 (相加 (取运行目录 (), “\image2”))
赋值 (TPY, 假)
赋值 (TPZ, 假)


赋值 (文件号a, 打开文件 (“C:\3D Photo\a.txt”, 1, ))
赋值 (文件号b, 打开文件 (“C:\3D Photo\b.txt”, 1, ))
赋值 (文件号c, 打开文件 (“C:\3D Photo\c.txt”, 1, ))
赋值 (IP, 到数值 (读入文本 (文件号a, )))
赋值 (请求码, 读入文本 (文件号b, ))
赋值 (注册码, 到数值 (读入文本 (文件号c, )))
.如果 (并且 (等于 (IP, 相加 (相乘 (到数值 (取文本右边 (取主机名 (), 4)), 13), 47)), 等于 (相乘 (相减 (相加 (相乘 (相除 (到数值 (请求码), 23), 3), 相除 (到数值 (注册码), 7), 56879), 4568), 84), 6632304)))
    赋值 (注册, 真)
    赋值 (.可视, 假)
    赋值 (_启动窗口., “3D Photo 1.0 注册版”)
    关闭所有文件 ()
    
.否则
    赋值 (注册, 假)
.如果结束




.子程序 _按钮相机参数_被单击, 空白型, , 
载入 (相机参数, , 假)

.子程序 __启动窗口_将被销毁, 空白型, , 
.如果 (等于 (MXCK, 真))
    模型窗口.销毁 ()
.否则
    
.如果结束


.窗口程序集 注册窗口程序集, , , 

.子程序 _按钮注册_被单击, 空白型, , 

.如果 (等于 (相乘 (相减 (相加 (到数值 (.内容), 相乘 (到数值 (.标题), 3), 56879), 4568), 84), 6632304))
     ' 信息框 (“恭喜，注册成功！”, 0, “注册成功！”)
    赋值 (注册, 真)
    赋值 (_启动窗口., “3D Photo 1.0 注册版”)
    赋值 (IP, 相加 (相乘 (到数值 (取文本右边 (取主机名 (), 4)), 13), 47))
    创建目录 (相加 (“C:\”, “3D Photo”))
    赋值 (文件号a, 打开文件 (“C:\3D Photo\a.txt”, 4, ))
    赋值 (文件号b, 打开文件 (“C:\3D Photo\b.txt”, 4, ))
    赋值 (文件号c, 打开文件 (“C:\3D Photo\c.txt”, 4, ))
    写出文本 (文件号a, 到文本 (IP))
    写出文本 (文件号b, 到文本 (相乘 (到数值 (请求码), 23)))
    写出文本 (文件号c, 到文本 (相乘 (到数值 (.内容), 7)))
    关闭文件 (文件号a)
    关闭文件 (文件号b)
    关闭文件 (文件号c)
    注册窗口.销毁 ()
    赋值 (_启动窗口..可视, 假)
    信息框 (“注册文件保存在路径C:\3D Photo文件夹中，注意不要删除，移动，更改！！！”, 0, )
    
.否则
    信息框 (“对不起，注册码不正确！请输入正确的注册码。”, 0, “注册失败！”)
.如果结束


.子程序 _注册窗口_创建完毕, 空白型, , 
赋值 (请求码, 到文本 (相加 (取随机数 (100000), 相乘 (相加 (取秒 (取现行时间 ()), 取分钟 (取现行时间 ()), 取小时 (取现行时间 ()), 取日 (取现行时间 ()), 取月份 (取现行时间 ()), 取年份 (取现行时间 ())), 43))))
赋值 (.标题, 请求码)

.子程序 _按钮1_被单击, 空白型, , 
创建目录 (相加 (取当前目录 (), “\image”))
写到文件 (相加 (取当前目录 (), “\image\1.bmp”), _启动窗口..底图)


.窗口程序集 模型窗口程序集, , , 

.程序集变量 窗口句柄, 整数型, , , 
.程序集变量 鼠标位置, 整数型, , "2", 
.子程序 _按钮退出_被单击, 空白型, , 
模型窗口.销毁 ()

.子程序 _按钮载入模型_被单击, 空白型, , 
赋值 (.过滤器, “3D模型文件（*.3DS）|*.3DS”)
打开 ()
赋值 (三D文件, .文件名)

绘图 ()

.子程序 _模型窗口_创建完毕, 空白型, , 

赋值 (窗口句柄, 取窗口句柄 ())
建立OPenGL组件 (窗口句柄)
赋值 (.内容, _启动窗口..内容)
赋值 (.内容, _启动窗口..内容)
赋值 (.内容, _启动窗口..内容)
赋值 (按下, 假)
赋值 (三D文件, “”)
赋值 (角度全 [1], 0)
赋值 (角度全 [2], 0)
赋值 (角度 [1], 0)
赋值 (角度 [2], 0)
赋值 (Z坐标, 0)


.子程序 _模型窗口_将被销毁, 空白型, , 
撤消OPenGL组件 (窗口句柄)
赋值 (MXCK, 假)


.子程序 _画板1_绘画, 空白型, , 
.参数 重画区左边, 整数型, , 
.参数 重画区上边, 整数型, , 
.参数 重画区右边, 整数型, , 
.参数 重画区下边, 整数型, , 

绘图 ()

.子程序 _模型窗口_尺寸被改变, 空白型, , 
5.移动 (5, 相减 (模型窗口.取用户区宽度 (), 110), 相减 (模型窗口.取用户区高度 (), 10))
尺寸被改变 (0, 0, .宽度, .高度)
相减 (模型窗口.取用户区宽度 (), 92).移动 (相减 (模型窗口.取用户区高度 (), 37), 80, 32)
相减 (模型窗口.取用户区宽度 (), 92).移动 (相减 (模型窗口.取用户区高度 (), 75), 80, 32)
相减 (模型窗口.取用户区宽度 (), 94).移动 (6, 24, 24)
相减 (模型窗口.取用户区宽度 (), 94).移动 (38, 24, 24)
相减 (模型窗口.取用户区宽度 (), 94).移动 (70, 24, 24)
相减 (模型窗口.取用户区宽度 (), 70).移动 (7, 40, 20)
相减 (模型窗口.取用户区宽度 (), 70).移动 (40, 40, 20)
相减 (模型窗口.取用户区宽度 (), 70).移动 (72, 40, 20)
赋值 (角度 [1], 0)
赋值 (角度 [2], 0)

绘图 ()

.子程序 _画板1_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (按下, 真)
赋值 (鼠标位置 [1], 横向位置)
赋值 (鼠标位置 [2], 纵向位置)

.子程序 _画板1_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (角度全 [1], 相加 (角度全 [1], 角度 [1]))
.判断开始 (小于 (角度全 [1], 0))
    赋值 (角度全 [1], 相加 (角度全 [1], 360))
.判断 (大于 (角度全 [1], 360))
    赋值 (角度全 [1], 相减 (角度全 [1], 360))
.默认
    
.判断结束

赋值 (角度全 [2], 相加 (角度全 [2], 角度 [2]))
.判断开始 (小于 (角度全 [2], 0))
    赋值 (角度全 [2], 相加 (角度全 [2], 360))
.判断 (大于 (角度全 [2], 360))
    赋值 (角度全 [2], 相减 (角度全 [2], 360))
.默认
    
.判断结束



赋值 (按下, 假)



.子程序 _画板1_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (按下)
    赋值 (角度 [1], 相减 (横向位置, 鼠标位置 [1]))
    .判断开始 (小于 (角度 [1], 0))
        赋值 (角度 [1], 相加 (角度 [1], 360))
    .判断 (大于 (角度 [1], 360))
        赋值 (角度 [1], 相减 (角度 [1], 360))
    .默认
        
    .判断结束
    赋值 (角度 [2], 相减 (纵向位置, 鼠标位置 [2]))
    .判断开始 (小于 (角度 [2], 0))
        赋值 (角度 [2], 相加 (角度 [2], 360))
    .判断 (大于 (角度 [2], 360))
        赋值 (角度 [2], 相减 (角度 [2], 360))
    .默认
        
    .判断结束
    
    绘图 ()
    
    
    
.如果真结束


.子程序 _画板1_滚轮被滚动, 逻辑型, , 
.参数 滚动距离, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (Z坐标, 相加 (Z坐标, 相乘 (滚动距离, 10)))
赋值 (角度 [1], 0)
赋值 (角度 [2], 0)
绘图 ()

.子程序 _编辑框1_滚轮被滚动, 逻辑型, , 
.参数 滚动距离, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.内容, 到文本 (相加 (到数值 (.内容), 滚动距离)))
.如果 (等于 (.内容, “0”))
    赋值 (.内容, “1”)
.否则
    
.如果结束



.子程序 _编辑框2_滚轮被滚动, 逻辑型, , 
.参数 滚动距离, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.内容, 到文本 (相加 (到数值 (.内容), 滚动距离)))
.如果 (等于 (.内容, “0”))
    赋值 (.内容, “1”)
.否则
    
.如果结束


.子程序 _编辑框3_滚轮被滚动, 逻辑型, , 
.参数 滚动距离, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.内容, 到文本 (相加 (到数值 (.内容), 滚动距离)))
.如果 (等于 (.内容, “0”))
    赋值 (.内容, “1”)
.否则
    
.如果结束


.窗口程序集 帮助窗口程序集, , , 

.子程序 _按钮1_被单击, 空白型, , 
帮助窗口.销毁 ()

.子程序 _按钮2_被单击, 空白型, , 
载入 (窗口1, , 真)

.程序集 OPENGL框架程序集, , , 

.程序集变量 着色描述表号, 整数型, , , 
.程序集变量 设备句柄, 整数型, , , OPenGL组件的设备句柄
.子程序 建立OPenGL组件, 空白型, , 为指定的窗口组件建立可供显示OPenGL的设备场景
.参数 窗口句柄, 空白型, , 

.局部变量 像素格式号, 空白型, , , 
.局部变量 像素格式, 未知类型0x20001, , , 

赋值 (设备句柄, 未知支持库函数_5 (窗口句柄))
赋值 (像素格式., 40)
赋值 (像素格式., 1)
赋值 (像素格式., 位或 (#, #, #))
赋值 (像素格式., 0)
赋值 (像素格式., 24)
赋值 (像素格式., 32)
赋值 (像素格式., 0)
赋值 (像素格式号, 未知支持库函数_0 (设备句柄, 像素格式))
未知支持库函数_1 (设备句柄, 像素格式号, 像素格式)
赋值 (着色描述表号, 未知支持库函数_2 (设备句柄))
未知支持库函数_3 (设备句柄, 着色描述表号)
框架初始化 ()

.子程序 撤消OPenGL组件, 空白型, , 撤消已经建立的OPenGL设备场景
.参数 窗口句柄, 空白型, , 

.局部变量 循环变量, 整数型, , , 

赋值 (循环变量, 1)
.判断循环首 (未知支持库函数_72 (循环变量))
    未知支持库函数_73 (循环变量, 1)
    赋值 (循环变量, 相加 (循环变量, 1))
.判断循环尾 ()
 ' 删除所有已经创建的显示列表
未知支持库函数_3 (0, 0)
未知支持库函数_4 (着色描述表号)
未知支持库函数_7 (窗口句柄, 设备句柄)

.子程序 框架初始化, 空白型, , 所有的OpenGL初始化都在这里
.局部变量 纹理号数组, 整数型, , "0", 

未知支持库函数_44 (0, 0, 0, 0) ' 在这里修改你的背景颜色
未知支持库函数_58 (#)
未知支持库函数_45 (1)
未知支持库函数_50 (#)
未知支持库函数_35 (#)
未知支持库函数_32 (#, #)




.子程序 绘图, 空白型, , 所有的绘图工作都在这里完成
.局部变量 点ID, 整数型, , , 
.局部变量 块ID, 整数型, , , 
.局部变量 纹理号数组, 整数型, , "0", 


赋值 (块ID, 1)
未知支持库函数_42 (位或 (#, #))
 ' 矩阵复位 ()
 ' 在这里加入你的代码



未知支持库函数_118 ()
未知支持库函数_119 (0)
未知支持库函数_8 ()

未知支持库函数_121 (1)
未知支持库函数_16 ()
未知支持库函数_10 (0, 0, 相减 (Z坐标, 10))

未知支持库函数_11 (相加 (角度 [1], 角度全 [1]), 0, 1, 0)
未知支持库函数_11 (相加 (角度 [2], 角度全 [2]), 1, 0, 0)

 ' .如果 (或者 (小于或等于 (315, 角度全 [1]), 小于 (角度全 [1], 45)))
     ' 坐标旋转 (角度 [2], 1, 0, 0)
    
.否则
    
.如果结束

 ' .如果 (并且 (小于或等于 (135, 角度全 [1]), 小于 (角度全 [1], 225)))
     ' 坐标旋转 (0 － 角度 [2], 1, 0, 0)
    
.否则
    
.如果结束

 ' .如果 (并且 (小于或等于 (45, 角度全 [1]), 小于 (角度全 [1], 135)))
     ' 坐标旋转 (角度 [2], 0, 0, 1)
    
.否则
    
.如果结束

 ' .如果 (并且 (小于或等于 (225, 角度全 [1]), 小于 (角度全 [1], 315)))
     ' 坐标旋转 (0 － 角度 [2], 0, 0, 1)
    
.否则
    
.如果结束






.如果 (不等于 (三D文件, “”))
    未知支持库函数_50 (#)
    未知支持库函数_50 (#)
    未知支持库函数_50 (#)
    未知支持库函数_50 (#)
    
     ' 坐标旋转 (角度全 [1], 0, 1, 0)
     ' 坐标旋转 (角度全 [2], 1, 0, 0)
    
    
    未知支持库函数_103 (三D文件, 未知支持库函数_70 (1), 纹理号数组)
    
    未知支持库函数_12 (0.03, 0.03, 0.03)
    未知支持库函数_71 (1)
    
    
.否则
    
.如果结束




.计次循环首 (取数组成员数 (模型), )
    
    
    
    赋值 (点ID, 1)
    未知支持库函数_48 (模型 [块ID], 颜色.R, 模型 [块ID], 颜色.G, 模型 [块ID], 颜色.B, 1)
    
    未知支持库函数_21 (#) ' 说明接下来的“设置点”命令是要画出一个三角形。
    
    .计次循环首 (取数组成员数 (模型 [块ID], 点集合三维坐标.三维坐标), )
        未知支持库函数_23 (相减 (模型 [块ID], 点集合三维坐标.三维坐标 [点ID], X, X中心), 相减 (模型 [块ID], 点集合三维坐标.三维坐标 [点ID], Y, Y中心), 相减 (模型 [块ID], 点集合三维坐标.三维坐标 [点ID], Z, Z中心))
        赋值 (点ID, 相加 (点ID, 1))
        
    .计次循环尾 ()
    未知支持库函数_22 () ' 画完，结束
    
    
    赋值 (块ID, 相加 (块ID, 1))
.计次循环尾 ()

未知支持库函数_17 ()





未知支持库函数_38 (设备句柄) ' 执行现有的命令并且显示在组件上

.子程序 尺寸被改变, 空白型, , 修改可视范围
.参数 左边, 空白型, , 
.参数 底边, 空白型, , 
.参数 宽度, 空白型, , 
.参数 高度, 空白型, , 

未知支持库函数_15 (左边, 底边, 宽度, 高度)
未知支持库函数_9 (#)
未知支持库函数_8 ()
 ' 创建正投影 (－宽度 ÷ 2, 宽度 ÷ 2, －高度 ÷ 2, 高度 ÷ 2, 0.1, 100)
未知支持库函数_20 (50, 相除 (宽度, 高度), 0.1, 500000)
未知支持库函数_9 (#)
未知支持库函数_8 ()

.窗口程序集 相机设置窗口程序集, , , 

.子程序 _按钮1_被单击, 空白型, , 
载入 (相机函数, , 假)

.子程序 _相机设置窗口_尺寸被改变, 空白型, , 
相减 (取用户区宽度 (), 178).移动 (相减 (取用户区高度 (), 30), 168, 24)

.程序集 立体画图程序集, , , 

.子程序 画线段子程序, 逻辑型, , 在两点之间画出一条线段
.参数 起点, 双精度小数型, 数组, x,y,z起点 ≠ 终点
.参数 终点, 双精度小数型, 数组, x,y,z起点 ≠ 终点

.判断开始 (小于 (取数组成员数 (起点), 3))
    返回 (假)
.判断 (小于 (取数组成员数 (终点), 3))
    返回 (假)
.判断 (并且 (等于 (起点 [1], 终点 [1]), 等于 (起点 [2], 终点 [2]), 等于 (起点 [3], 终点 [3])))
    返回 (假)
.默认
    
.判断结束
未知支持库函数_21 (#)
未知支持库函数_23 (起点 [1], 起点 [2], 起点 [3])
未知支持库函数_23 (终点 [1], 终点 [2], 终点 [3])
未知支持库函数_22 ()
返回 (真)

.子程序 画三角形子程序, 逻辑型, , 按照顺序依次连接三个顶点形成一个三角形
.参数 顶点1, 双精度小数型, 数组, x,y,z顶点1 ≠ 顶点2 ≠ 顶点3
.参数 顶点2, 双精度小数型, 数组, x,y,z顶点1 ≠ 顶点2 ≠ 顶点3
.参数 顶点3, 双精度小数型, 数组, x,y,z顶点1 ≠ 顶点2 ≠ 顶点3
.参数 实心, 逻辑型, 可空, 真表示填充颜色，假表示显示线条,默认为假

.判断开始 (小于 (取数组成员数 (顶点1), 3))
    返回 (假)
.判断 (小于 (取数组成员数 (顶点2), 3))
    返回 (假)
.判断 (小于 (取数组成员数 (顶点3), 3))
    返回 (假)
.默认
    
.判断结束
.如果真 (是否为空 (实心))
    赋值 (实心, 假)
.如果真结束
.判断开始 (并且 (等于 (顶点1 [1], 顶点2 [1]), 等于 (顶点1 [2], 顶点2 [2]), 等于 (顶点1 [3], 顶点2 [3])))
    返回 (假)
.判断 (并且 (等于 (顶点1 [1], 顶点3 [1]), 等于 (顶点1 [2], 顶点3 [2]), 等于 (顶点1 [3], 顶点3 [3])))
    返回 (假)
.判断 (并且 (等于 (顶点2 [1], 顶点3 [1]), 等于 (顶点2 [2], 顶点3 [2]), 等于 (顶点2 [3], 顶点3 [3])))
    返回 (假)
.默认
    
.判断结束
.判断开始 (实心)
    未知支持库函数_21 (#)
.默认
    未知支持库函数_21 (#)
.判断结束
未知支持库函数_23 (顶点1 [1], 顶点1 [2], 顶点1 [3])
未知支持库函数_23 (顶点2 [1], 顶点2 [2], 顶点2 [3])
未知支持库函数_23 (顶点3 [1], 顶点3 [2], 顶点3 [3])
未知支持库函数_22 ()
返回 (真)

.子程序 画矩形子程序, 逻辑型, , 在左下角所在的XY平面内画出一个矩形
.参数 左下角, 双精度小数型, 数组, x,y,z
.参数 宽度, 双精度小数型, , >0
.参数 高度, 双精度小数型, , >0
.参数 实心, 逻辑型, 可空, 真表示填充颜色，假表示显示线条

.判断开始 (小于或等于 (宽度, 0))
    返回 (假)
.判断 (小于或等于 (高度, 0))
    返回 (假)
.判断 (小于 (取数组成员数 (左下角), 3))
    返回 (假)
.默认
    
.判断结束
.如果真 (是否为空 (实心))
    赋值 (实心, 假)
.如果真结束
.判断开始 (实心)
    未知支持库函数_21 (#)
.默认
    未知支持库函数_21 (#)
.判断结束
未知支持库函数_23 (左下角 [1], 左下角 [2], 左下角 [3])
未知支持库函数_23 (相加 (左下角 [1], 宽度), 左下角 [2], 左下角 [3])
未知支持库函数_23 (相加 (左下角 [1], 宽度), 相加 (左下角 [2], 高度), 左下角 [3])
未知支持库函数_23 (左下角 [1], 相加 (左下角 [2], 高度), 左下角 [3])
未知支持库函数_22 ()
返回 (真)

.子程序 画顶点多边形子程序, 逻辑型, , 按照顺序依次连接顶点形成一个多边形
.参数 点数组, 双精度小数型, 数组, x1,y1,z1,x2,y2,z2,...成员数为3的倍数
.参数 实心, 逻辑型, 可空, 真表示填充颜色，假表示显示线条

.局部变量 点数, 整数型, , , 
.局部变量 循环变量, 整数型, , , 

赋值 (点数, 相除 (取数组成员数 (点数组), 3))
.判断开始 (小于 (点数, 3))
     ' 起码有3个顶点
    返回 (假)
.默认
    
.判断结束
.如果真 (是否为空 (实心))
    赋值 (实心, 假)
.如果真结束
重定义数组 (点数组, 真, 点数, 3)
.判断开始 (实心)
    未知支持库函数_21 (#)
.默认
    未知支持库函数_21 (#)
.判断结束
.计次循环首 (点数, 循环变量)
    未知支持库函数_23 (点数组 [循环变量] [1], 点数组 [循环变量] [2], 点数组 [循环变量] [3])
.计次循环尾 ()
未知支持库函数_22 ()
返回 (真)

.子程序 画正多边形子程序, 逻辑型, , 在中心位置所在的XY平面内画出在指定半径的圆内的最大正多边形
.参数 中心位置, 双精度小数型, 数组, x,y,z
.参数 外接圆半径, 双精度小数型, , >0
.参数 边数, 整数型, , >3
.参数 起始点相位角, 双精度小数型, 可空, 饶Z轴转过的角度，默认为0
.参数 实心, 逻辑型, 可空, 真表示填充颜色，假表示显示线条,默认为假

.局部变量 循环角度, 双精度小数型, , , 0-360
.局部变量 角度增量, 双精度小数型, , , 

.判断开始 (小于或等于 (外接圆半径, 0))
    返回 (假)
.判断 (小于 (取数组成员数 (中心位置), 3))
    返回 (假)
.判断 (小于 (边数, 3))
    返回 (假)
.判断 (是否为空 (起始点相位角))
    赋值 (起始点相位角, 0)
.默认
    
.判断结束
.如果真 (是否为空 (实心))
    赋值 (实心, 假)
.如果真结束
赋值 (角度增量, 相除 (360, 边数))
赋值 (循环角度, 起始点相位角)
赋值 (起始点相位角, 相加 (起始点相位角, 360))
.判断开始 (实心)
    未知支持库函数_21 (#)
.默认
    未知支持库函数_21 (#)
.判断结束
.判断循环首 (小于 (循环角度, 相加 (360, 起始点相位角)))
    未知支持库函数_23 (相加 (中心位置 [1], 相乘 (外接圆半径, 求余弦 (相乘 (相除 (循环角度, 180), #pi)))), 相加 (中心位置 [2], 相乘 (外接圆半径, 求正弦 (相乘 (相除 (循环角度, 180), #pi)))), 中心位置 [3])
    赋值 (循环角度, 相加 (循环角度, 角度增量))
.判断循环尾 ()
未知支持库函数_22 ()
返回 (真)

.子程序 画圆弧子程序, 逻辑型, , 在圆心所在的XY平面内按照逆时针顺序在起始角度和终止角度之间画圆弧
.参数 圆心, 双精度小数型, 数组, x,y,z
.参数 半径, 双精度小数型, , >0
.参数 起始角度, 整数型, , 0-360,起始角度 ≠ 终止角度
.参数 终止角度, 整数型, , 0-360,起始角度 ≠ 终止角度
.参数 拟合度, 整数型, 可空, >1 数字越大越逼真，推荐使用2，5，9，10，18，45，90

.局部变量 角度增量, 双精度小数型, , , 
.局部变量 临时角度, 双精度小数型, , , 

.判断开始 (小于 (取数组成员数 (圆心), 3))
    返回 (假)
.判断 (小于或等于 (半径, 0))
    返回 (假)
.判断 (等于 (起始角度, 终止角度))
    返回 (假)
.判断 (或者 (大于 (起始角度, 360), 小于 (起始角度, 0)))
    返回 (假)
.判断 (或者 (大于 (终止角度, 360), 小于 (终止角度, 0)))
    返回 (假)
.判断 (或者 (等于 (起始角度, 终止角度), 等于 (相减 (终止角度, 起始角度), 360)))
    返回 (假)
.判断 (小于 (拟合度, 1))
    返回 (假)
.默认
    
.判断结束
.如果真 (是否为空 (拟合度))
    赋值 (拟合度, 18)
.如果真结束
.如果真 (大于 (起始角度, 终止角度))
    赋值 (终止角度, 相加 (终止角度, 360))
.如果真结束
赋值 (角度增量, 相除 (相减 (终止角度, 起始角度), 拟合度))
未知支持库函数_21 (#)
.判断循环首 (小于或等于 (起始角度, 终止角度))
    赋值 (临时角度, 相乘 (相除 (起始角度, 180), #pi))
    未知支持库函数_23 (相加 (圆心 [1], 相乘 (半径, 求余弦 (临时角度))), 相加 (圆心 [2], 相乘 (半径, 求正弦 (临时角度))), 圆心 [3])
    赋值 (起始角度, 相加 (起始角度, 角度增量))
.判断循环尾 ()
未知支持库函数_22 ()
返回 (真)

.子程序 画椭圆子程序, 逻辑型, , 在圆心所在的XY平面内画出一个椭圆
.参数 圆心, 双精度小数型, 数组, x,y,z
.参数 长轴, 双精度小数型, , >0,可以小于短轴
.参数 短轴, 双精度小数型, , >0
.参数 起始点相位角, 双精度小数型, 可空, 饶Z轴转过的角度，默认为0
.参数 实心, 逻辑型, 可空, 真表示填充颜色，假表示显示线条,默认为假

.局部变量 循环变量, 双精度小数型, , , 

.判断开始 (小于 (取数组成员数 (圆心), 3))
    返回 (假)
.判断 (小于或等于 (长轴, 0))
    返回 (假)
.判断 (小于或等于 (短轴, 0))
    返回 (假)
.默认
    
.判断结束
.如果真 (是否为空 (起始点相位角))
    赋值 (起始点相位角, 0)
.如果真结束
.如果真 (是否为空 (实心))
    赋值 (实心, 假)
.如果真结束
赋值 (循环变量, 起始点相位角)
赋值 (起始点相位角, 相加 (起始点相位角, 360))
未知支持库函数_16 ()
未知支持库函数_11 (起始点相位角, 0, 0, 1)
.判断开始 (实心)
    未知支持库函数_21 (#)
.默认
    未知支持库函数_21 (#)
.判断结束
.判断循环首 (小于 (循环变量, 起始点相位角))
    未知支持库函数_23 (相加 (圆心 [1], 相乘 (长轴, 求余弦 (相乘 (相除 (循环变量, 180), #pi)))), 相加 (圆心 [2], 相乘 (短轴, 求正弦 (相乘 (相除 (循环变量, 180), #pi)))), 圆心 [3])
    赋值 (循环变量, 相加 (循环变量, 10)) ' 可以改变递增值来达到更加逼真的效果
.判断循环尾 ()
未知支持库函数_22 ()
未知支持库函数_17 ()
返回 (真)

.子程序 画圆角矩形子程序, 逻辑型, , 在左下角所在的XY平面内画出一个圆角矩形
.参数 左下角, 双精度小数型, 数组, x,y,z
.参数 宽度, 双精度小数型, , >0
.参数 高度, 双精度小数型, , >0
.参数 圆角半径, 双精度小数型, , <宽度，<高度
.参数 实心, 逻辑型, 可空, 真表示填充颜色，假表示显示线条,默认为假

.局部变量 圆心, 双精度小数型, , "3", x,y,z
.局部变量 圆心位置, 双精度小数型, , "4", 左边，下边，右边，顶边
.局部变量 点, 整数型, , , 
.局部变量 循环变量, 空白型, , , 
.局部变量 拟合度, 空白型, , , 推荐使用2，5，9，10，18，45

.判断开始 (小于 (取数组成员数 (左下角), 3))
    返回 (假)
.判断 (小于或等于 (宽度, 0))
    返回 (假)
.判断 (小于或等于 (高度, 0))
    返回 (假)
.判断 (大于或等于 (相乘 (2, 圆角半径), 宽度))
    返回 (假)
.判断 (大于或等于 (相乘 (2, 圆角半径), 高度))
    返回 (假)
.默认
    
.判断结束
.如果真 (是否为空 (实心))
    赋值 (实心, 假)
.如果真结束
赋值 (拟合度, 18) ' 可以通过改变拟合度，来达到更加逼真的效果
赋值 (圆心位置 [1], 相加 (左下角 [1], 圆角半径))
赋值 (圆心位置 [3], 相减 (相加 (左下角 [1], 宽度), 圆角半径))
赋值 (圆心位置 [2], 相加 (左下角 [2], 圆角半径))
赋值 (圆心位置 [4], 相减 (相加 (左下角 [2], 高度), 圆角半径))
.判断开始 (实心)
    未知支持库函数_21 (#)
.默认
    未知支持库函数_21 (#)
.判断结束
未知支持库函数_23 (左下角 [1], 圆心位置 [2], 左下角 [3])
.如果真 (不等于 (圆角半径, 0))
    .变量循环首 (180, 270, 拟合度, 循环变量)
        未知支持库函数_23 (相加 (圆心位置 [1], 相乘 (圆角半径, 求余弦 (相乘 (相除 (循环变量, 180), #pi)))), 相加 (圆心位置 [2], 相乘 (圆角半径, 求正弦 (相乘 (相除 (循环变量, 180), #pi)))), 左下角 [3])
    .变量循环尾 ()
.如果真结束
 ' 左下角
未知支持库函数_23 (圆心位置 [3], 左下角 [2], 左下角 [3])
 ' 下边
.如果真 (不等于 (圆角半径, 0))
    .变量循环首 (270, 360, 拟合度, 循环变量)
        未知支持库函数_23 (相加 (圆心位置 [3], 相乘 (圆角半径, 求余弦 (相乘 (相除 (循环变量, 180), #pi)))), 相加 (圆心位置 [2], 相乘 (圆角半径, 求正弦 (相乘 (相除 (循环变量, 180), #pi)))), 左下角 [3])
    .变量循环尾 ()
.如果真结束
 ' 右下角
未知支持库函数_23 (相加 (左下角 [1], 宽度), 圆心位置 [4], 左下角 [3])
 ' 右边
.如果真 (不等于 (圆角半径, 0))
    .变量循环首 (0, 90, 拟合度, 循环变量)
        未知支持库函数_23 (相加 (圆心位置 [3], 相乘 (圆角半径, 求余弦 (相乘 (相除 (循环变量, 180), #pi)))), 相加 (圆心位置 [4], 相乘 (圆角半径, 求正弦 (相乘 (相除 (循环变量, 180), #pi)))), 左下角 [3])
    .变量循环尾 ()
.如果真结束
 ' 右上角
未知支持库函数_23 (圆心位置 [1], 相加 (左下角 [2], 高度), 左下角 [3])
 ' 上边
.如果真 (不等于 (圆角半径, 0))
    .变量循环首 (90, 180, 拟合度, 循环变量)
        未知支持库函数_23 (相加 (圆心位置 [1], 相乘 (圆角半径, 求余弦 (相乘 (相除 (循环变量, 180), #pi)))), 相加 (圆心位置 [4], 相乘 (圆角半径, 求正弦 (相乘 (相除 (循环变量, 180), #pi)))), 左下角 [3])
    .变量循环尾 ()
.如果真结束
 ' 左上角
未知支持库函数_22 ()
返回 (真)

.子程序 画圆子程序, 逻辑型, , 过圆心平行于XY平面画出一个圆
.参数 圆心, 双精度小数型, 数组, x,y,z
.参数 半径, 双精度小数型, , 不能为0
.参数 实心, 逻辑型, 可空, 真表示填充颜色，假表示显示线条,默认为假

.局部变量 循环变量, 空白型, , , 

.判断开始 (小于 (半径, 0))
    返回 (假)
.判断 (小于 (取数组成员数 (圆心), 3))
    返回 (假)
.默认
    
.判断结束
.如果真 (是否为空 (实心))
    赋值 (实心, 假)
.如果真结束
.判断开始 (实心)
    未知支持库函数_21 (#)
.默认
    未知支持库函数_21 (#)
.判断结束
.变量循环首 (0, 350, 10, 循环变量) ' 可以通过改变递增值来达到更加逼真的效果
    未知支持库函数_23 (相加 (圆心 [1], 相乘 (半径, 求余弦 (相乘 (相除 (循环变量, 180), #pi)))), 相加 (圆心 [2], 相乘 (半径, 求正弦 (相乘 (相除 (循环变量, 180), #pi)))), 圆心 [3])
.变量循环尾 ()
未知支持库函数_22 ()
返回 (真)

.子程序 画立方体子程序, 逻辑型, , 前面(正)、后面(负)垂直于Z轴，右面(正)、左面(负)垂直于X轴，上面(正)、下面(负)垂直于Y轴，
.参数 中心, 双精度小数型, 数组, x,y,z
.参数 边长, 双精度小数型, , 大于0
.参数 实心, 逻辑型, 可空, 真表示填充颜色，假表示显示线条,默认为假

.局部变量 点, 双精度小数型, , "8,3", 

.判断开始 (小于 (取数组成员数 (中心), 3))
    返回 (假)
.判断 (小于 (边长, 0))
    返回 (假)
.默认
    
.判断结束
.如果真 (是否为空 (实心))
    赋值 (实心, 假)
.如果真结束
未知支持库函数_16 ()
未知支持库函数_10 (中心 [1], 中心 [2], 中心 [3])
.如果 (实心)
    未知支持库函数_85 (边长)
.否则
    未知支持库函数_86 (边长)
.如果结束
未知支持库函数_17 ()
返回 (真)

.子程序 画长方体子程序, 逻辑型, , 前面(正)、后面(负)垂直于Z轴距离为宽，右面(正)、左面(负)垂直于X轴距离为长，上面(正)、下面(负)垂直于Y轴距离为高
.参数 中心, 双精度小数型, 数组, x,y,z
.参数 长, 双精度小数型, , > 0
.参数 宽, 双精度小数型, , > 0
.参数 高, 双精度小数型, , > 0
.参数 实心, 逻辑型, 可空, 真表示填充颜色，假表示显示线条,默认为假

.局部变量 点, 双精度小数型, , "8,3", 

.判断开始 (小于或等于 (长, 0))
    返回 (假)
.判断 (小于或等于 (宽, 0))
    返回 (假)
.判断 (小于或等于 (高, 0))
    返回 (假)
.默认
    
.判断结束
.如果真 (是否为空 (实心))
    赋值 (实心, 假)
.如果真结束
赋值 (长, 相除 (长, 2))
赋值 (宽, 相除 (宽, 2))
赋值 (高, 相除 (高, 2))
连续赋值 (相减 (中心 [1], 长), 点 [1] [1], 点 [4] [1], 点 [5] [1], 点 [8] [1]) ' 左面
连续赋值 (相加 (中心 [1], 长), 点 [2] [1], 点 [3] [1], 点 [6] [1], 点 [7] [1]) ' 右面
连续赋值 (相减 (中心 [2], 高), 点 [1] [2], 点 [2] [2], 点 [5] [2], 点 [6] [2]) ' 下面
连续赋值 (相加 (中心 [2], 高), 点 [3] [2], 点 [4] [2], 点 [7] [2], 点 [8] [2]) ' 上面
连续赋值 (相加 (中心 [3], 宽), 点 [1] [3], 点 [2] [3], 点 [3] [3], 点 [4] [3]) ' 前面
连续赋值 (相减 (中心 [3], 宽), 点 [5] [3], 点 [6] [3], 点 [7] [3], 点 [8] [3]) ' 后面
 ' 前面
.如果 (实心)
    未知支持库函数_21 (#)
.否则
    未知支持库函数_21 (#)
.如果结束
未知支持库函数_23 (点 [1] [1], 点 [1] [2], 点 [1] [3])
未知支持库函数_23 (点 [2] [1], 点 [2] [2], 点 [2] [3])
未知支持库函数_23 (点 [3] [1], 点 [3] [2], 点 [3] [3])
未知支持库函数_23 (点 [4] [1], 点 [4] [2], 点 [4] [3])
未知支持库函数_22 ()
 ' 后面
.如果 (实心)
    未知支持库函数_21 (#)
.否则
    未知支持库函数_21 (#)
.如果结束
未知支持库函数_23 (点 [6] [1], 点 [6] [2], 点 [6] [3])
未知支持库函数_23 (点 [5] [1], 点 [5] [2], 点 [5] [3])
未知支持库函数_23 (点 [8] [1], 点 [8] [2], 点 [8] [3])
未知支持库函数_23 (点 [7] [1], 点 [7] [2], 点 [7] [3])
未知支持库函数_22 ()
 ' 左面
.如果 (实心)
    未知支持库函数_21 (#)
.否则
    未知支持库函数_21 (#)
.如果结束
未知支持库函数_23 (点 [5] [1], 点 [5] [2], 点 [5] [3])
未知支持库函数_23 (点 [1] [1], 点 [1] [2], 点 [1] [3])
未知支持库函数_23 (点 [4] [1], 点 [4] [2], 点 [4] [3])
未知支持库函数_23 (点 [8] [1], 点 [8] [2], 点 [8] [3])
未知支持库函数_22 ()
 ' 右面
.如果 (实心)
    未知支持库函数_21 (#)
.否则
    未知支持库函数_21 (#)
.如果结束
未知支持库函数_23 (点 [2] [1], 点 [2] [2], 点 [2] [3])
未知支持库函数_23 (点 [6] [1], 点 [6] [2], 点 [6] [3])
未知支持库函数_23 (点 [7] [1], 点 [7] [2], 点 [7] [3])
未知支持库函数_23 (点 [3] [1], 点 [3] [2], 点 [3] [3])
未知支持库函数_22 ()
 ' 上面
.如果 (实心)
    未知支持库函数_21 (#)
.否则
    未知支持库函数_21 (#)
.如果结束
未知支持库函数_23 (点 [4] [1], 点 [4] [2], 点 [4] [3])
未知支持库函数_23 (点 [3] [1], 点 [3] [2], 点 [3] [3])
未知支持库函数_23 (点 [7] [1], 点 [7] [2], 点 [7] [3])
未知支持库函数_23 (点 [8] [1], 点 [8] [2], 点 [8] [3])
未知支持库函数_22 ()
 ' 下面
.如果 (实心)
    未知支持库函数_21 (#)
.否则
    未知支持库函数_21 (#)
.如果结束
未知支持库函数_23 (点 [2] [1], 点 [2] [2], 点 [2] [3])
未知支持库函数_23 (点 [1] [1], 点 [1] [2], 点 [1] [3])
未知支持库函数_23 (点 [5] [1], 点 [5] [2], 点 [5] [3])
未知支持库函数_23 (点 [6] [1], 点 [6] [2], 点 [6] [3])
未知支持库函数_22 ()
返回 (真)

.子程序 画圆柱体子程序, 逻辑型, , 上下底圆平行于XZ平面，圆心连线平行于Y轴的一个圆柱体
.参数 中心, 双精度小数型, 数组, x,y,z
.参数 底圆半径, 双精度小数型, , >0
.参数 高, 双精度小数型, , 不能为0
.参数 实心, 逻辑型, 可空, 真表示填充颜色，假表示显示线条,默认为假

.局部变量 循环变量1, 空白型, , , 
.局部变量 循环变量2, 空白型, , , 
.局部变量 圆心, 双精度小数型, , "2,3", 
.局部变量 拟合度, 整数型, 静态, , >1 数字越小越逼真，推荐使用2，5，9，10，18，45，90

.判断开始 (等于 (高, 0))
    返回 (假)
.判断 (小于 (取数组成员数 (中心), 3))
    返回 (假)
.默认
    
.判断结束
.如果真 (是否为空 (实心))
    赋值 (实心, 假)
.如果真结束
连续赋值 (中心 [1], 圆心 [1] [1], 圆心 [2] [1])
连续赋值 (中心 [3], 圆心 [1] [3], 圆心 [2] [3])
赋值 (拟合度, 10)
赋值 (高, 相除 (高, 2))
赋值 (圆心 [1] [2], 相减 (中心 [2], 高)) ' 下底圆
赋值 (圆心 [2] [2], 相加 (中心 [2], 高)) ' 上底圆
未知支持库函数_16 ()
未知支持库函数_10 (中心 [1], 中心 [2], 中心 [3])
.判断开始 (实心)
    未知支持库函数_99 (底圆半径, 高, 20) ' 经线越多越逼真
.默认
    未知支持库函数_100 (底圆半径, 高, 20) ' 经线越多越逼真
.判断结束
未知支持库函数_17 ()
返回 (真)

.子程序 画球体子程序, 逻辑型, , 在任意位置画出一个球体
.参数 球心, 双精度小数型, 数组, x,y,z
.参数 半径, 双精度小数型, , >0
.参数 拟合度, 整数型, 可空, >1 数字越大越逼真
.参数 实心, 逻辑型, 可空, 真表示填充颜色，假表示显示线条,默认为假

.判断开始 (小于 (取数组成员数 (球心), 3))
    返回 (假)
.判断 (小于或等于 (半径, 0))
    返回 (假)
.判断 (是否为空 (拟合度))
    赋值 (拟合度, 10)
.默认
    
.判断结束
.如果真 (是否为空 (实心))
    赋值 (实心, 假)
.如果真结束
未知支持库函数_16 ()
未知支持库函数_10 (球心 [1], 球心 [2], 球心 [3])
.判断开始 (实心)
    未知支持库函数_83 (半径, 拟合度, 拟合度)
.默认
    未知支持库函数_84 (半径, 拟合度, 拟合度)
.判断结束
未知支持库函数_17 ()
返回 (真)

.子程序 画圆锥体子程序, 逻辑型, , 底圆平行于XY平面，向Z轴正方向拉伸高度的一个圆锥体
.参数 圆心, 双精度小数型, 数组, x,y,z
.参数 底面半径, 双精度小数型, , >0
.参数 高度, 双精度小数型, , >0
.参数 拟合度, 整数型, 可空, >1 数字越大越逼真
.参数 实心, 逻辑型, 可空, 真表示填充颜色，假表示显示线条,默认为假

.判断开始 (小于 (取数组成员数 (圆心), 3))
    返回 (假)
.判断 (小于或等于 (底面半径, 0))
    返回 (假)
.判断 (小于或等于 (高度, 0))
    返回 (假)
.判断 (是否为空 (拟合度))
    赋值 (拟合度, 10)
.默认
    
.判断结束
.如果真 (是否为空 (实心))
    赋值 (实心, 假)
.如果真结束
未知支持库函数_16 ()
未知支持库函数_10 (圆心 [1], 圆心 [2], 圆心 [3])
.判断开始 (实心)
    未知支持库函数_87 (底面半径, 高度, 拟合度, 拟合度)
.默认
    未知支持库函数_88 (底面半径, 高度, 拟合度, 拟合度)
.判断结束
未知支持库函数_17 ()
返回 (真)

.子程序 画圆环子程序, 逻辑型, , 截面圆平行于XY平面的一个圆环,如果内圆半径大于外圆半径，就会出现交叉部分
.参数 中心, 双精度小数型, 数组, x,y,z
.参数 内圆半径, 双精度小数型, , >0
.参数 外圆半径, 双精度小数型, , >0
.参数 拟合度, 整数型, 可空, >1 数字越大越逼真
.参数 实心, 逻辑型, 可空, 真表示填充颜色，假表示显示线条,默认为假

.判断开始 (小于 (取数组成员数 (中心), 3))
    返回 (假)
.判断 (小于或等于 (内圆半径, 0))
    返回 (假)
.判断 (小于或等于 (外圆半径, 0))
    返回 (假)
.默认
    
.判断结束
.如果真 (是否为空 (拟合度))
    赋值 (拟合度, 10)
.如果真结束
.如果真 (是否为空 (实心))
    赋值 (实心, 假)
.如果真结束
未知支持库函数_16 ()
未知支持库函数_10 (中心 [1], 中心 [2], 中心 [3])
.判断开始 (实心)
    未知支持库函数_89 (内圆半径, 外圆半径, 拟合度, 拟合度)
.默认
    未知支持库函数_90 (内圆半径, 外圆半径, 拟合度, 拟合度)
.判断结束
未知支持库函数_17 ()
返回 (真)

.子程序 画十二面体子程序, 逻辑型, , 在任意位置画一个正十二面体
.参数 中心, 双精度小数型, 数组, x,y,z
.参数 外切球半径, 双精度小数型, , >0
.参数 实心, 逻辑型, 可空, 真表示填充颜色，假表示显示线条,默认为假

.局部变量 比例, 双精度小数型, , , 

.判断开始 (小于 (取数组成员数 (中心), 3))
    返回 (假)
.判断 (小于或等于 (外切球半径, 0))
    返回 (假)
.判断 (是否为空 (实心))
    赋值 (实心, 假)
.默认
    
.判断结束
赋值 (比例, 相除 (外切球半径, 相除 (相乘 (2, 求次方 (3, 0.5)), 3)))
未知支持库函数_16 ()
未知支持库函数_10 (中心 [1], 中心 [2], 中心 [3])
未知支持库函数_12 (比例, 比例, 比例)
.判断开始 (实心)
    未知支持库函数_91 ()
.默认
    未知支持库函数_92 ()
.判断结束
未知支持库函数_17 ()
返回 (真)

.子程序 画八面体子程序, 逻辑型, , 在任意位置画一个正八面体
.参数 中心, 双精度小数型, 数组, x,y,z
.参数 外切球半径, 双精度小数型, , >0
.参数 实心, 逻辑型, 可空, 真表示填充颜色，假表示显示线条,默认为假

.判断开始 (小于 (取数组成员数 (中心), 3))
    返回 (假)
.判断 (小于或等于 (外切球半径, 0))
    返回 (假)
.默认
    
.判断结束
.如果真 (是否为空 (实心))
    赋值 (实心, 假)
.如果真结束
未知支持库函数_16 ()
未知支持库函数_10 (中心 [1], 中心 [2], 中心 [3])
未知支持库函数_12 (外切球半径, 外切球半径, 外切球半径)
.判断开始 (实心)
    未知支持库函数_93 ()
.默认
    未知支持库函数_94 ()
.判断结束
未知支持库函数_17 ()
返回 (真)

.子程序 画四面体子程序, 逻辑型, , 在任意位置画一个正四面体
.参数 中心, 双精度小数型, 数组, x,y,z
.参数 外切球半径, 双精度小数型, , >0
.参数 实心, 逻辑型, 可空, 真表示填充颜色，假表示显示线条,默认为假

.局部变量 常数, 双精度小数型, , , 

.判断开始 (小于 (取数组成员数 (中心), 3))
    返回 (假)
.判断 (小于或等于 (外切球半径, 0))
    返回 (假)
.默认
    
.判断结束
.如果真 (是否为空 (实心))
    赋值 (实心, 假)
.如果真结束
赋值 (常数, 求次方 (3, 0.5))
赋值 (外切球半径, 相除 (外切球半径, 常数))
未知支持库函数_16 ()
未知支持库函数_10 (中心 [1], 中心 [2], 中心 [3])
未知支持库函数_12 (外切球半径, 外切球半径, 外切球半径)
.判断开始 (实心)
    未知支持库函数_95 ()
.默认
    未知支持库函数_96 ()
.判断结束
未知支持库函数_17 ()
返回 (真)

.子程序 画二十面体子程序, 逻辑型, , 在任意位置画一个正二十面体
.参数 中心, 双精度小数型, 数组, x,y,z
.参数 外切球半径, 双精度小数型, , >0
.参数 实心, 逻辑型, 可空, 真表示填充颜色，假表示显示线条,默认为假

.判断开始 (小于 (取数组成员数 (中心), 3))
    返回 (假)
.判断 (小于或等于 (外切球半径, 0))
    返回 (假)
.默认
    
.判断结束
.如果真 (是否为空 (实心))
    赋值 (实心, 假)
.如果真结束
未知支持库函数_16 ()
未知支持库函数_10 (中心 [1], 中心 [2], 中心 [3])
未知支持库函数_12 (外切球半径, 外切球半径, 外切球半径)
.判断开始 (实心)
    未知支持库函数_97 ()
.默认
    未知支持库函数_98 ()
.判断结束
未知支持库函数_17 ()
返回 (真)

.子程序 画球冠子程序, 逻辑型, , 使用了零号裁剪平面，在任意位置画一个球冠
.参数 球心, 双精度小数型, 数组, x,y,z
.参数 球半径, 双精度小数型, , >0 只是用来显示球，如果裁剪其他形状，可以改为其他内容
.参数 高, 双精度小数型, , >0 <球直径
.参数 实心, 逻辑型, 可空, 真表示填充颜色，假表示显示线条,默认为假

.局部变量 裁剪平面, 双精度小数型, , "4", 

.判断开始 (小于 (取数组成员数 (裁剪平面), 4))
    返回 (假)
.判断 (小于 (取数组成员数 (球心), 3))
    返回 (假)
.判断 (小于或等于 (球半径, 0))
    返回 (假)
.判断 (或者 (小于或等于 (高, 0), 大于 (高, 相乘 (球半径, 2))))
    返回 (假)
.默认
    
.判断结束
.如果真 (是否为空 (实心))
    赋值 (实心, 假)
.如果真结束
赋值 (裁剪平面, { 0, 1, 0, 0 })
赋值 (裁剪平面 [4], 相减 (高, 球半径))
未知支持库函数_26 (#, 裁剪平面)
未知支持库函数_16 ()
未知支持库函数_10 (球心 [1], 球心 [2], 球心 [3])
未知支持库函数_50 (#)
.判断开始 (实心)
    未知支持库函数_83 (球半径, 20, 20)
.默认
    未知支持库函数_84 (球半径, 20, 20)
.判断结束
未知支持库函数_51 (#)
未知支持库函数_17 ()
返回 (真)

.子程序 画虚线子程序, 逻辑型, , 在两点之间画出一条虚线
.参数 起点, 双精度小数型, 数组, x,y,z起点 ≠ 终点
.参数 终点, 双精度小数型, 数组, x,y,z起点 ≠ 终点
.参数 放大倍数, 整数型, 可空, 用来拉伸线型,默认为初始大小

.判断开始 (小于 (取数组成员数 (起点), 3))
    返回 (假)
.判断 (小于 (取数组成员数 (终点), 3))
    返回 (假)
.判断 (并且 (等于 (起点 [1], 终点 [1]), 等于 (起点 [2], 终点 [2]), 等于 (起点 [3], 终点 [3])))
    返回 (假)
.默认
    
.判断结束
.如果真 (是否为空 (放大倍数))
    赋值 (放大倍数, 1)
.如果真结束
未知支持库函数_50 (#)
未知支持库函数_28 (放大倍数, 3855)
未知支持库函数_21 (#)
未知支持库函数_23 (起点 [1], 起点 [2], 起点 [3])
未知支持库函数_23 (终点 [1], 终点 [2], 终点 [3])
未知支持库函数_22 ()
未知支持库函数_51 (#)
返回 (真)

.子程序 画点划线子程序, 逻辑型, , 在两点之间画出一条点划线
.参数 起点, 双精度小数型, 数组, x,y,z起点 ≠ 终点
.参数 终点, 双精度小数型, 数组, x,y,z起点 ≠ 终点
.参数 放大倍数, 整数型, 可空, 用来拉伸线型,默认为初始大小

.判断开始 (小于 (取数组成员数 (起点), 3))
    返回 (假)
.判断 (小于 (取数组成员数 (终点), 3))
    返回 (假)
.判断 (并且 (等于 (起点 [1], 终点 [1]), 等于 (起点 [2], 终点 [2]), 等于 (起点 [3], 终点 [3])))
    返回 (假)
.默认
    
.判断结束
.如果真 (是否为空 (放大倍数))
    赋值 (放大倍数, 1)
.如果真结束
未知支持库函数_50 (#)
未知支持库函数_28 (放大倍数, -3697)
未知支持库函数_21 (#)
未知支持库函数_23 (起点 [1], 起点 [2], 起点 [3])
未知支持库函数_23 (终点 [1], 终点 [2], 终点 [3])
未知支持库函数_22 ()
未知支持库函数_51 (#)
返回 (真)

.子程序 画双点划线子程序, 逻辑型, , 在两点之间画出一条双点划线
.参数 起点, 双精度小数型, 数组, x,y,z起点 ≠ 终点
.参数 终点, 双精度小数型, 数组, x,y,z起点 ≠ 终点
.参数 放大倍数, 整数型, 可空, 用来拉伸线型,默认为初始大小

.判断开始 (小于 (取数组成员数 (起点), 3))
    返回 (假)
.判断 (小于 (取数组成员数 (终点), 3))
    返回 (假)
.判断 (并且 (等于 (起点 [1], 终点 [1]), 等于 (起点 [2], 终点 [2]), 等于 (起点 [3], 终点 [3])))
    返回 (假)
.默认
    
.判断结束
.如果真 (是否为空 (放大倍数))
    赋值 (放大倍数, 1)
.如果真结束
未知支持库函数_50 (#)
未知支持库函数_28 (放大倍数, -2449)
未知支持库函数_21 (#)
未知支持库函数_23 (起点 [1], 起点 [2], 起点 [3])
未知支持库函数_23 (终点 [1], 终点 [2], 终点 [3])
未知支持库函数_22 ()
未知支持库函数_51 (#)
返回 (真)

.子程序 画斜剖面线子程序, 逻辑型, , 画出一个用矩形包围的剖面线
.参数 左下角, 双精度小数型, 数组, x,y,z
.参数 宽度, 双精度小数型, , >0
.参数 高度, 双精度小数型, , >0

.判断开始 (小于或等于 (宽度, 0))
    返回 (假)
.判断 (小于或等于 (高度, 0))
    返回 (假)
.判断 (小于 (取数组成员数 (左下角), 3))
    返回 (假)
.默认
    
.判断结束
未知支持库函数_50 (#)
未知支持库函数_29 ({ 192, 192, 192, 192, 96, 96, 96, 96, 48, 48, 48, 48, 24, 24, 24, 24, 12, 12, 12, 12, 6, 6, 6, 6, 3, 3, 3, 3, 129, 129, 129, 129, 192, 192, 192, 192, 96, 96, 96, 96, 48, 48, 48, 48, 24, 24, 24, 24, 12, 12, 12, 12, 6, 6, 6, 6, 3, 3, 3, 3, 129, 129, 129, 129, 192, 192, 192, 192, 96, 96, 96, 96, 48, 48, 48, 48, 24, 24, 24, 24, 12, 12, 12, 12, 6, 6, 6, 6, 3, 3, 3, 3, 129, 129, 129, 129, 192, 192, 192, 192, 96, 96, 96, 96, 48, 48, 48, 48, 24, 24, 24, 24, 12, 12, 12, 12, 6, 6, 6, 6, 3, 3, 3, 3, 129, 129, 129, 129 })
 ' 在这里修改画出的形状
未知支持库函数_21 (#)
未知支持库函数_23 (左下角 [1], 左下角 [2], 左下角 [3])
未知支持库函数_23 (相加 (左下角 [1], 宽度), 左下角 [2], 左下角 [3])
未知支持库函数_23 (相加 (左下角 [1], 宽度), 相加 (左下角 [2], 高度), 左下角 [3])
未知支持库函数_23 (左下角 [1], 相加 (左下角 [2], 高度), 左下角 [3])
未知支持库函数_22 ()
未知支持库函数_51 (#)
返回 (真)

.子程序 画出位图子程序, 逻辑型, , 设备场景的坐标平面里以像素为单位画出一幅位图
.参数 横向位置, 双精度小数型, , 以像素为单位，x
.参数 纵向位置, 双精度小数型, , 以像素为单位,y
.参数 位图数据, 字节集, , ≠ {} 取字节集长度 (位图数据) = 位图宽度 × 位图高度 ÷ 8
.参数 位图宽度, 整数型, , >0
.参数 位图高度, 整数型, , >0
.参数 存储字节数, 字节型, 可空, 1、2、4或8默认为1

.判断开始 (等于 (取字节集长度 (位图数据), 0))
    返回 (假)
.判断 (小于或等于 (位图宽度, 0))
    返回 (假)
.判断 (小于或等于 (位图高度, 0))
    返回 (假)
.判断 (不等于 (取字节集长度 (位图数据), 相除 (相乘 (位图宽度, 位图高度), 8)))
    返回 (假)
.默认
    
.判断结束
.如果真 (是否为空 (存储字节数))
    赋值 (存储字节数, 1)
.如果真结束
.判断开始 (取反 (或者 (等于 (存储字节数, 1), 等于 (存储字节数, 2), 等于 (存储字节数, 4), 等于 (存储字节数, 8))))
    返回 (假)
.默认
    
.判断结束
未知支持库函数_79 (存储字节数) ' 以一个字节为基本单位
未知支持库函数_76 (0, 0) ' 相对坐标原点的偏移量
未知支持库函数_77 (位图宽度, 位图高度, 横向位置, 纵向位置, 0, 0, 位图数据)
返回 (真)

.子程序 画复制位图子程序, 逻辑型, , 复制当前设备场景里的像素，并对其进行移动和缩放
.参数 待复制矩形左下角横向位置, 双精度小数型, , 以像素为单位，x
.参数 待复制矩形左下角纵向位置, 双精度小数型, , 以像素为单位，y
.参数 复制到矩形左下角横向位置, 双精度小数型, , 坐标系中的位置，x
.参数 复制到矩形左下角纵向位置, 双精度小数型, , 坐标系中的位置，y
.参数 复制宽度, 整数型, , >0像素大小
.参数 复制高度, 整数型, , >0像素大小
.参数 横向缩放比例, 双精度小数型, 可空, 默认为1，不变
.参数 纵向缩放比例, 双精度小数型, 可空, 默认为1，不变
.参数 复制内容, 整数型, 可空, #颜色类型、#深度类型、#模板类型默认为#颜色类型

.判断开始 (小于或等于 (复制宽度, 0))
    返回 (假)
.判断 (小于或等于 (复制高度, 0))
    返回 (假)
.默认
    
.判断结束
.如果真 (是否为空 (横向缩放比例))
    赋值 (横向缩放比例, 1)
.如果真结束
.如果真 (是否为空 (纵向缩放比例))
    赋值 (纵向缩放比例, 1)
.如果真结束
.如果真 (是否为空 (复制内容))
    赋值 (复制内容, #)
.如果真结束
未知支持库函数_76 (复制到矩形左下角横向位置, 复制到矩形左下角纵向位置) ' 相对坐标原点的偏移量
未知支持库函数_80 (横向缩放比例, 纵向缩放比例) ' 缩小将复制的内容
未知支持库函数_78 (待复制矩形左下角横向位置, 待复制矩形左下角纵向位置, 复制宽度, 复制高度, 复制内容) ' 复制在以左下角为“鼠标位置” ，宽度、高度各为100的矩形里的内容
返回 (真)

.子程序 载入图片纹理图案子程序, 逻辑型, , 在左下角所在的XY平面内画出一个绑定了纹理的矩形
.参数 文件名, 文本型, , 文件不存在就返回假
.参数 纹理号, 整数型, , 如果有同名的文件被载入，就使用第一次载入纹理使用的纹理号
.参数 左下角, 双精度小数型, 数组, x,y,z
.参数 宽度, 双精度小数型, , >0
.参数 高度, 双精度小数型, , >0

.局部变量 文件名数组, 文本型, 静态, "0", 保存已经载入的纹理图片文件
.局部变量 纹理号数组, 空白型, 静态, "0", 保存已经载入的纹理号
.局部变量 成员数, 空白型, , , 
.局部变量 循环变量, 空白型, , , 
.局部变量 需要载入, 逻辑型, , , 

.判断开始 (取反 (文件是否存在 (文件名)))
    返回 (假)
.判断 (小于 (取数组成员数 (左下角), 3))
    返回 (假)
.判断 (小于或等于 (宽度, 0))
    返回 (假)
.判断 (小于或等于 (高度, 0))
    返回 (假)
.默认
    
.判断结束
赋值 (成员数, 取数组成员数 (纹理号数组))
赋值 (需要载入, 真)
.计次循环首 (成员数, 循环变量)
    .如果真 (等于 (文件名数组 [循环变量], 文件名))
        赋值 (需要载入, 假)
        赋值 (纹理号, 纹理号数组 [循环变量])
    .如果真结束
    
.计次循环尾 ()
.如果真 (需要载入)
    加入成员 (文件名数组, 文件名)
    加入成员 (纹理号数组, 纹理号)
    未知支持库函数_59 (#, 纹理号)
    未知支持库函数_60 (#, #, #)
    未知支持库函数_60 (#, #, #)
    未知支持库函数_60 (#, #, #)
    未知支持库函数_60 (#, #, #)
    未知支持库函数_67 (文件名)
.如果真结束
未知支持库函数_64 (#, #)
未知支持库函数_50 (#)
未知支持库函数_59 (#, 纹理号)
未知支持库函数_21 (#)
未知支持库函数_63 (0, 0)
未知支持库函数_23 (左下角 [1], 左下角 [2], 左下角 [3])
未知支持库函数_63 (1, 0)
未知支持库函数_23 (相加 (左下角 [1], 宽度), 左下角 [2], 左下角 [3])
未知支持库函数_63 (1, 1)
未知支持库函数_23 (相加 (左下角 [1], 宽度), 相加 (左下角 [2], 高度), 左下角 [3])
未知支持库函数_63 (0, 1)
未知支持库函数_23 (左下角 [1], 相加 (左下角 [2], 高度), 左下角 [3])
未知支持库函数_22 ()
未知支持库函数_51 (#)
返回 (真)



.子程序 画立体文本子程序, 逻辑型, , 在两点之间画出一条斜剖面线，本子程序会创建显示列表，当不使用列表的时候，要删除显示列表
.参数 设备句柄, 整数型, , “建立OPenGL组件”中使用的“设备句柄”
.参数 起点, 双精度小数型, 数组, x,y,z
.参数 文本, 文本型, , ≠ “”
.参数 文本厚度, 小数型, , 
.参数 基础列表号, 整数型, 可空, 必须大于0，默认为1
.参数 放大倍数, 小数型, 可空, 默认为1
.参数 匿名参数_417, 整数型, 参考 可空 数组, 

.局部变量 数组, 整数型, , "0", 
.局部变量 循环变量, 整数型, , , 
.局部变量 字体号, 整数型, , , 
.局部变量 长度, 整数型, , , 
.局部变量 代码, 整数型, , , 

.判断开始 (等于 (设备句柄, 0))
    返回 (假)
.判断 (等于 (文本, “”))
    返回 (假)
.判断 (小于 (取数组成员数 (起点), 3))
    返回 (假)
.判断 (小于或等于 (基础列表号, 0))
    赋值 (基础列表号, 1)
.默认
    
.判断结束
.如果真 (是否为空 (放大倍数))
    赋值 (放大倍数, 1)
.如果真结束
.如果真 (小于或等于 (基础列表号, 0))
    赋值 (基础列表号, 1)
.如果真结束
 ' 赋值 (字体号, 创建字体 (-1, -1, 0, 0, 700, 0, 0, 0, 0, 4, 0, 2, 54, “宋体”)) ' 在这里修改字体的属性
选择目标 (设备句柄, 字体号)
 ' 生成立体文本的显示列表队列列表
赋值 (长度, 取文本长度 (文本))
赋值 (循环变量, 0)
清除数组 (匿名参数_417)
.判断循环首 (小于 (循环变量, 长度))
    .如果 (未知支持库函数_81 (文本, 循环变量))
        赋值 (代码, 取代码 (文本, 相加 (循环变量, 1)))
        赋值 (代码, 相乘 (相加 (代码, 1), 256)) ' 中文使用的是双字节
        赋值 (循环变量, 相加 (循环变量, 1))
        赋值 (代码, 相加 (代码, 取代码 (文本, 相加 (循环变量, 1))))
    .否则
        赋值 (代码, 取代码 (文本, 相加 (循环变量, 1))) ' 英文使用的是单字节
    .如果结束
    未知支持库函数_82 (设备句柄, 代码, 1, 相加 (循环变量, 基础列表号), 0, 0.2, 真) ' 每次只建立一个字符的轮廓列表，文字被拉伸的厚度为0.2
    加入成员 (数组, 循环变量)
    赋值 (循环变量, 相加 (循环变量, 1))
.判断循环尾 ()
未知支持库函数_74 (基础列表号) ' 告诉“调用多显示列表”，从“基础列表号”开始调用
未知支持库函数_16 ()
未知支持库函数_10 (起点 [1], 起点 [2], 起点 [3])
未知支持库函数_12 (放大倍数, 放大倍数, 放大倍数)
未知支持库函数_75 (数组)
未知支持库函数_17 ()
 ' 生成调用列表的列表，并显示
.如果真 (取反 (是否为空 (匿名参数_417)))
    复制数组 (匿名参数_417, 数组)
.如果真结束
返回 (真)

.程序集 公共图象分析程序集, , , 

.子程序 调整图片, 字节集, , 
.参数 图片, 字节集, , 
.参数 精度, 整数型, , 

.局部变量 位图, 位图, , , 
.局部变量 X, 整数型, , , 
.局部变量 Y, 整数型, , , 
.局部变量 阀值, 整数型, , , 
.局部变量 颜色值, 整数型, , , 

.如果 (等于 (精度, 2))
    赋值 (阀值, 32)
.否则
    .如果 (等于 (精度, 1))
        赋值 (阀值, 64)
    .否则
        .如果 (等于 (精度, 0))
            赋值 (阀值, 128)
        .否则
            
        .如果结束
        
    .如果结束
    
.如果结束
位图.载入数据 (图片)
赋值 (X, 0)
赋值 (Y, 0)

.计次循环首 (位图.取高度 (), )
    .计次循环首 (位图.取宽度 (), )
        .如果 (并且 (小于 (取红 (位图.取某点颜色 (X, Y)), 33), 小于 (取绿 (位图.取某点颜色 (X, Y)), 33), 小于 (取蓝 (位图.取某点颜色 (X, Y)), 33)))
            位图.置某点颜色 (X, Y, 取颜色值 (0, 0, 0))
        .否则
            赋值 (颜色值, 位图.取某点颜色 (X, Y))
            位图.置某点颜色 (X, Y, 取颜色值 (相加 (相乘 (取整 (相除 (取红 (颜色值), 阀值)), 阀值), 相除 (阀值, 2)), 相加 (相乘 (取整 (相除 (取绿 (颜色值), 阀值)), 阀值), 相除 (阀值, 2)), 相加 (相乘 (取整 (相除 (取蓝 (颜色值), 阀值)), 阀值), 相除 (阀值, 2))))
            
        .如果结束
        赋值 (X, 相加 (X, 1))
        
    .计次循环尾 ()
    赋值 (X, 0)
    赋值 (Y, 相加 (Y, 1))
    
.计次循环尾 ()
返回 (位图.取位图数据 ())


.子程序 分割图片, 整数型, , 
.参数 待分割图片, 字节集, , 
.参数 输出色块_左右, 文本型, , 

.局部变量 位图3, 位图, , , 
.局部变量 位图2, 位图, , , 
.局部变量 位图, 位图, , , 
.局部变量 颜色值, 整数型, , , 
.局部变量 继续, 逻辑型, , , 
.局部变量 坐标集, 点, , "0", 
.局部变量 A, 整数型, , , 
.局部变量 坐标集1, 点, , "0", 
.局部变量 坐标集2, 点, , "0", 
.局部变量 图象块号, 整数型, , , 
.局部变量 继续分割, 逻辑型, , , 
.局部变量 起点Y, 整数型, , , 
.局部变量 B, 整数型, , , 


赋值 (继续分割, 真)



赋值 (起点Y, 1)
赋值 (图象块号, 1)
位图2.载入数据 (待分割图片)
位图3.创建 (位图2.取宽度 (), 位图2.取高度 (), 24, 0)



.判断循环首 (等于 (继续分割, 真))
    赋值 (A, 1)
    重定义数组 (坐标集, 真, 1)
    赋值 (坐标集 [A], X, 1)
    赋值 (坐标集 [A], Y, 起点Y)
    
    .判断循环首 (并且 (等于 (位图2.取某点颜色 (坐标集 [A], X, 坐标集 [A], Y), 取颜色值 (0, 0, 0)), 小于 (坐标集 [A], Y, 相减 (位图2.取高度 (), 1))))
        
        赋值 (坐标集 [A], X, 相加 (坐标集 [A], X, 1))
        
        .如果 (等于 (坐标集 [A], X, 相减 (位图2.取宽度 (), 2)))
            赋值 (坐标集 [A], X, 1)
            赋值 (坐标集 [A], Y, 相加 (坐标集 [A], Y, 1))
            赋值 (起点Y, 坐标集 [A], Y)
        .否则
            
        .如果结束
        .如果 (等于 (坐标集 [A], Y, 相减 (位图2.取高度 (), 2)))
            赋值 (继续分割, 假)
            
        .否则
            
        .如果结束
        
        
    .判断循环尾 ()
    
    
    
    .如果真 (并且 (不等于 (位图2.取某点颜色 (坐标集 [A], X, 坐标集 [A], Y), 取颜色值 (0, 0, 0)), 小于 (坐标集 [A], Y, 相减 (位图2.取高度 (), 1))))
        赋值 (继续, 真)
        赋值 (颜色值, 位图2.取某点颜色 (坐标集 [A], X, 坐标集 [A], Y))
        位图2.置某点颜色 (坐标集 [A], X, 坐标集 [A], Y, 取颜色值 (0, 0, 0))
        加入成员 (坐标集1, 坐标集)
        
        .判断循环首 (等于 (继续, 真))
            赋值 (继续, 假)
            .计次循环首 (取数组成员数 (坐标集), )
                
                
                .如果 (并且 (等于 (位图2.取某点颜色 (相加 (坐标集 [A], X, 1), 坐标集 [A], Y), 颜色值), 小于 (坐标集 [A], X, 相减 (位图2.取宽度 (), 1))))
                    赋值 (继续, 真)
                    位图2.置某点颜色 (相加 (坐标集 [A], X, 1), 坐标集 [A], Y, 取颜色值 (0, 0, 0))
                    赋值 (坐标集 [A], X, 相加 (坐标集 [A], X, 1))
                    加入成员 (坐标集1, 坐标集 [A])
                    赋值 (坐标集 [A], X, 相减 (坐标集 [A], X, 1))
                    
                .否则
                    
                    
                .如果结束
                .如果 (并且 (等于 (位图2.取某点颜色 (相加 (坐标集 [A], X, 1), 相加 (坐标集 [A], Y, 1)), 颜色值), 小于 (坐标集 [A], X, 相减 (位图2.取宽度 (), 1)), 小于 (坐标集 [A], Y, 相减 (位图2.取高度 (), 1))))
                    赋值 (继续, 真)
                    位图2.置某点颜色 (相加 (坐标集 [A], X, 1), 相加 (坐标集 [A], Y, 1), 取颜色值 (0, 0, 0))
                    赋值 (坐标集 [A], X, 相加 (坐标集 [A], X, 1))
                    赋值 (坐标集 [A], Y, 相加 (坐标集 [A], Y, 1))
                    加入成员 (坐标集1, 坐标集 [A])
                    赋值 (坐标集 [A], X, 相减 (坐标集 [A], X, 1))
                    赋值 (坐标集 [A], Y, 相减 (坐标集 [A], Y, 1))
                .否则
                    
                .如果结束
                
                
                
                
                
                .如果 (并且 (等于 (位图2.取某点颜色 (坐标集 [A], X, 相加 (坐标集 [A], Y, 1)), 颜色值), 小于 (坐标集 [A], Y, 相减 (位图2.取高度 (), 1))))
                    赋值 (继续, 真)
                    位图2.置某点颜色 (坐标集 [A], X, 相加 (坐标集 [A], Y, 1), 取颜色值 (0, 0, 0))
                    赋值 (坐标集 [A], Y, 相加 (坐标集 [A], Y, 1))
                    加入成员 (坐标集1, 坐标集 [A])
                    赋值 (坐标集 [A], Y, 相减 (坐标集 [A], Y, 1))
                    
                    
                .否则
                    
                .如果结束
                .如果 (并且 (等于 (位图2.取某点颜色 (相减 (坐标集 [A], X, 1), 相加 (坐标集 [A], Y, 1)), 颜色值), 大于 (坐标集 [A], X, 1), 小于 (坐标集 [A], Y, 相减 (位图2.取高度 (), 1))))
                    赋值 (继续, 真)
                    位图2.置某点颜色 (相减 (坐标集 [A], X, 1), 相加 (坐标集 [A], Y, 1), 取颜色值 (0, 0, 0))
                    赋值 (坐标集 [A], X, 相减 (坐标集 [A], X, 1))
                    赋值 (坐标集 [A], Y, 相加 (坐标集 [A], Y, 1))
                    加入成员 (坐标集1, 坐标集 [A])
                    赋值 (坐标集 [A], X, 相加 (坐标集 [A], X, 1))
                    赋值 (坐标集 [A], Y, 相减 (坐标集 [A], Y, 1))
                    
                .否则
                    
                .如果结束
                .如果 (并且 (等于 (位图2.取某点颜色 (坐标集 [A], X, 相减 (坐标集 [A], Y, 1)), 颜色值), 大于 (坐标集 [A], Y, 0)))
                    赋值 (继续, 真)
                    位图2.置某点颜色 (坐标集 [A], X, 相减 (坐标集 [A], Y, 1), 取颜色值 (0, 0, 0))
                    赋值 (坐标集 [A], Y, 相减 (坐标集 [A], Y, 1))
                    加入成员 (坐标集1, 坐标集 [A])
                    赋值 (坐标集 [A], Y, 相加 (坐标集 [A], Y, 1))
                    
                    
                    
                .否则
                    
                .如果结束
                
                
                
                .如果 (并且 (等于 (位图2.取某点颜色 (相减 (坐标集 [A], X, 1), 相减 (坐标集 [A], Y, 1)), 颜色值), 大于 (坐标集 [A], X, 1), 大于 (坐标集 [A], Y, 0)))
                    赋值 (继续, 真)
                    位图2.置某点颜色 (相减 (坐标集 [A], X, 1), 相减 (坐标集 [A], Y, 1), 取颜色值 (0, 0, 0))
                    赋值 (坐标集 [A], X, 相减 (坐标集 [A], X, 1))
                    赋值 (坐标集 [A], Y, 相减 (坐标集 [A], Y, 1))
                    加入成员 (坐标集1, 坐标集 [A])
                    赋值 (坐标集 [A], X, 相加 (坐标集 [A], X, 1))
                    赋值 (坐标集 [A], Y, 相加 (坐标集 [A], Y, 1))
                    
                    
                    
                .否则
                    
                .如果结束
                
                
                
                
                
                .如果 (并且 (等于 (位图2.取某点颜色 (相减 (坐标集 [A], X, 1), 坐标集 [A], Y), 颜色值), 大于 (坐标集 [A], X, 0)))
                    赋值 (继续, 真)
                    位图2.置某点颜色 (相减 (坐标集 [A], X, 1), 坐标集 [A], Y, 取颜色值 (0, 0, 0))
                    赋值 (坐标集 [A], X, 相减 (坐标集 [A], X, 1))
                    加入成员 (坐标集1, 坐标集 [A])
                    赋值 (坐标集 [A], X, 相加 (坐标集 [A], X, 1))
                    
                    
                    
                    
                .否则
                    
                .如果结束
                
                
                
                
                
                
                
                
                .如果 (并且 (等于 (位图2.取某点颜色 (相加 (坐标集 [A], X, 1), 相减 (坐标集 [A], Y, 1)), 颜色值), 小于 (坐标集 [A], X, 相减 (位图2.取宽度 (), 1)), 大于 (坐标集 [A], Y, 0)))
                    赋值 (继续, 真)
                    位图2.置某点颜色 (相加 (坐标集 [A], X, 1), 相减 (坐标集 [A], Y, 1), 取颜色值 (0, 0, 0))
                    赋值 (坐标集 [A], X, 相加 (坐标集 [A], X, 1))
                    赋值 (坐标集 [A], Y, 相减 (坐标集 [A], Y, 1))
                    加入成员 (坐标集1, 坐标集 [A])
                    赋值 (坐标集 [A], Y, 相加 (坐标集 [A], Y, 1))
                    赋值 (坐标集 [A], X, 相减 (坐标集 [A], X, 1))
                    
                    
                    
                .否则
                    
                .如果结束
                
                
                
                
                
                赋值 (A, 相加 (A, 1))
                
                
                
                
            .计次循环尾 ()
            赋值 (坐标集, 坐标集1)
            加入成员 (坐标集2, 坐标集1)
            清除数组 (坐标集1)
            赋值 (A, 1)
            
        .判断循环尾 ()
        
         ' 待分割图片 ＝ 位图2.取位图数据 ()
        
        
        .如果 (大于 (取数组成员数 (坐标集2), 9))
            位图.载入数据 (位图3.取位图数据 ())
            
            赋值 (B, 1)
            .计次循环首 (取数组成员数 (坐标集2), )
                
                位图.置某点颜色 (坐标集2 [B], X, 坐标集2 [B], Y, 颜色值)
                赋值 (B, 相加 (B, 1))
            .计次循环尾 ()
            写到文件 (相加 (取运行目录 (), “\ima.ge\”, 到文本 (图象块号), 输出色块_左右, “.AAT”), 位图.取位图数据 ())
            清除数组 (坐标集2)
            
            赋值 (图象块号, 相加 (图象块号, 1))
            
        .否则
            清除数组 (坐标集2)
        .如果结束
        
    .如果真结束
    
    赋值 (进度位置, 相加 (进度位置, 0.5))
    .如果 (等于 (进度位置, 100))
        赋值 (进度位置, 1)
    .否则
        
    .如果结束
    
    赋值 (_启动窗口..位置, 进度位置)
    
    
    
    
.判断循环尾 ()
清除数组 (坐标集)
返回 (图象块号)


.子程序 取色块属性, 色块属性, , 
.参数 色块号, 整数型, , 
.参数 左右, 文本型, , 

.局部变量 X色块属性, 色块属性, , , 
.局部变量 位图, 位图, , , 
.局部变量 坐标, 点, , , 

.如果 (等于 (文件是否存在 (相加 (取运行目录 (), “\ima.ge\”, 到文本 (色块号), 左右, “.AAT”)), 真))
    位图.载入文件 (相加 (取运行目录 (), “\ima.ge\”, 到文本 (色块号), 左右, “.AAT”))
    赋值 (X色块属性.图片宽度, 位图.取宽度 ())
    
    赋值 (坐标.X, 0)
    赋值 (坐标.Y, 0)
    
    .判断循环首 (并且 (等于 (位图.取某点颜色 (坐标.X, 坐标.Y), 取颜色值 (0, 0, 0)), 小于 (坐标.Y, 位图.取高度 ())))
        
        赋值 (坐标.X, 相加 (坐标.X, 1))
        
        .如果 (等于 (坐标.X, 位图.取宽度 ()))
            赋值 (坐标.X, 0)
            赋值 (坐标.Y, 相加 (坐标.Y, 1))
            
        .否则
            
        .如果结束
        
    .判断循环尾 () ' 跳过黑色区域
    
    .如果真 (不等于 (位图.取某点颜色 (坐标.X, 坐标.Y), 取颜色值 (0, 0, 0)))
        赋值 (X色块属性.颜色, 位图.取某点颜色 (坐标.X, 坐标.Y))
        赋值 (X色块属性.上点.X, 坐标.X)
        赋值 (X色块属性.上点.Y, 坐标.Y)
    .如果真结束
    
    
    赋值 (进度位置, 相加 (进度位置, 5))
    .如果 (等于 (进度位置, 100))
        赋值 (进度位置, 1)
    .否则
        
    .如果结束
    
    赋值 (_启动窗口..位置, 进度位置)
    
    
    赋值 (坐标.Y, 相减 (位图.取高度 (), 1))
    赋值 (坐标.X, 相减 (位图.取宽度 (), 1))
    .判断循环首 (并且 (等于 (位图.取某点颜色 (坐标.X, 坐标.Y), 取颜色值 (0, 0, 0)), 大于 (坐标.Y, -1), 大于 (坐标.X, -1)))
        
        赋值 (坐标.X, 相减 (坐标.X, 1))
        
        .如果 (等于 (坐标.X, 0))
            赋值 (坐标.X, 相减 (位图.取宽度 (), 1))
            赋值 (坐标.Y, 相减 (坐标.Y, 1))
            
        .否则
            
        .如果结束
        
    .判断循环尾 ()
    .如果真 (不等于 (位图.取某点颜色 (坐标.X, 坐标.Y), 取颜色值 (0, 0, 0)))
        赋值 (X色块属性.下点.X, 坐标.X)
        赋值 (X色块属性.下点.Y, 坐标.Y) ' 获取图象色块下点属性
        
    .如果真结束
    
    
    赋值 (进度位置, 相加 (进度位置, 0.5))
    .如果 (等于 (进度位置, 100))
        赋值 (进度位置, 1)
    .否则
        
    .如果结束
    
    赋值 (_启动窗口..位置, 进度位置)
    
    
    赋值 (坐标.Y, 0)
    赋值 (坐标.X, 位图.取宽度 ())
    .判断循环首 (并且 (等于 (位图.取某点颜色 (坐标.X, 坐标.Y), 取颜色值 (0, 0, 0)), 大于 (坐标.X, -1)))
        
        赋值 (坐标.Y, 相加 (坐标.Y, 1))
        
        .如果 (等于 (坐标.Y, 相减 (位图.取高度 (), 1)))
            赋值 (坐标.Y, 0)
            赋值 (坐标.X, 相减 (坐标.X, 1))
            
        .否则
            
        .如果结束
        
    .判断循环尾 ()
    .如果真 (不等于 (位图.取某点颜色 (坐标.X, 坐标.Y), 取颜色值 (0, 0, 0)))
        赋值 (X色块属性.左点.X, 坐标.X)
        赋值 (X色块属性.左点.Y, 坐标.Y)
    .如果真结束
    
     ' 获取图象色块左点属性
    
    赋值 (进度位置, 相加 (进度位置, 0.5))
    .如果 (等于 (进度位置, 100))
        赋值 (进度位置, 1)
    .否则
        
    .如果结束
    
    赋值 (_启动窗口..位置, 进度位置)
    
    赋值 (坐标.Y, 位图.取高度 ())
    赋值 (坐标.X, 0)
    .判断循环首 (并且 (等于 (位图.取某点颜色 (坐标.X, 坐标.Y), 取颜色值 (0, 0, 0)), 小于 (坐标.X, 位图.取宽度 ())))
        
        赋值 (坐标.Y, 相减 (坐标.Y, 1))
        
        .如果 (等于 (坐标.Y, 0))
            赋值 (坐标.X, 相加 (坐标.X, 1))
            赋值 (坐标.Y, 相减 (位图.取高度 (), 1))
            
        .否则
            
        .如果结束
        
    .判断循环尾 ()
    .如果真 (不等于 (位图.取某点颜色 (坐标.X, 坐标.Y), 取颜色值 (0, 0, 0)))
        赋值 (X色块属性.右点.X, 坐标.X)
        赋值 (X色块属性.右点.Y, 坐标.Y)
    .如果真结束
    
     ' 获取图象色块右点属性
    
.否则
    
.如果结束

返回 (X色块属性)




.子程序 取色块边缘, 坐标集, , 
.参数 色块号, 整数型, , 
.参数 左右, 文本型, , 
.参数 起点, 点, , 

.局部变量 位图, 位图, , , 
.局部变量 坐标, 点, , , 
.局部变量 坐标集, 坐标集, , , 
.局部变量 点ID, 整数型, , , 
.局部变量 继续收集, 逻辑型, , , 
.局部变量 起点值, 点, , , 
.局部变量 坐标值, 点, , , 
.局部变量 图片, 字节集, , , 


.如果 (等于 (文件是否存在 (相加 (取运行目录 (), “\ima.ge\”, 到文本 (色块号), 左右, “.AAT”)), 真))
    位图.载入文件 (相加 (取运行目录 (), “\ima.ge\”, 到文本 (色块号), 左右, “.AAT”))
    
    赋值 (起点值, 起点)
    赋值 (图片, 位图.取位图数据 ())
    赋值 (坐标集.坐标 [1].X, 起点.X)
    赋值 (坐标集.坐标 [1].Y, 起点.Y)
    
     ' 坐标_局 ＝ 起点_C
    
    赋值 (坐标, 子程序1 (起点, 图片))
    .如果 (等于 (坐标.X, -100))
        赋值 (起点, 起点值)
        赋值 (坐标, 子程序2 (起点, 图片))
        .如果 (等于 (坐标.X, -100))
            赋值 (起点, 起点值)
            赋值 (坐标, 子程序3 (起点, 图片))
            .如果 (等于 (坐标.X, -100))
                赋值 (起点, 起点值)
                赋值 (坐标, 子程序4 (起点, 图片))
                .如果 (等于 (坐标.X, -100))
                    赋值 (起点, 起点值)
                    赋值 (坐标, 子程序5 (起点, 图片))
                    .如果 (等于 (坐标.X, -100))
                        赋值 (起点, 起点值)
                        赋值 (坐标, 子程序6 (起点, 图片))
                        .如果 (等于 (坐标.X, -100))
                            赋值 (起点, 起点值)
                            赋值 (坐标, 子程序7 (起点, 图片))
                            .如果 (等于 (坐标.X, -100))
                                赋值 (起点, 起点值)
                                赋值 (坐标, 子程序8 (起点, 图片))
                                
                            .否则
                                
                            .如果结束
                            
                        .否则
                            
                        .如果结束
                        
                    .否则
                        
                    .如果结束
                    
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .否则
        
    .如果结束
    
    赋值 (起点, 起点值)
    加入成员 (坐标集.坐标, 坐标)
    赋值 (继续收集, 真)
    
    
    .判断循环首 (等于 (继续收集, 真))
        赋值 (坐标值, 坐标)
        
        
        赋值 (点ID, 相减 (取数组成员数 (坐标集.坐标), 1))
        
        .如果 (并且 (等于 (相加 (坐标集.坐标 [点ID], X, 1), 坐标.X), 等于 (坐标集.坐标 [点ID], Y, 坐标.Y)))
            赋值 (坐标, 子程序1 (坐标, 图片))
            .如果 (等于 (坐标.X, -100))
                赋值 (坐标, 坐标值)
                赋值 (坐标, 子程序2 (坐标, 图片))
                
                .如果 (等于 (坐标.X, -100))
                    赋值 (坐标, 坐标值)
                    赋值 (坐标, 子程序3 (坐标, 图片))
                    
                    .如果 (等于 (坐标.X, -100))
                        赋值 (坐标, 坐标值)
                        赋值 (坐标, 子程序4 (坐标, 图片))
                        
                        .如果 (等于 (坐标.X, -100))
                            赋值 (坐标, 坐标值)
                            赋值 (坐标, 子程序5 (坐标, 图片))
                            .如果 (等于 (坐标.X, -100))
                                赋值 (坐标, 坐标值)
                                赋值 (坐标, 子程序6 (坐标, 图片))
                                .如果 (等于 (坐标.X, -100))
                                    赋值 (坐标, 坐标值)
                                    赋值 (坐标, 子程序7 (坐标, 图片))
                                    .如果 (等于 (坐标.X, -100))
                                        赋值 (坐标, 坐标值)
                                        赋值 (坐标, 子程序8 (坐标, 图片))
                                    .否则
                                        
                                    .如果结束
                                    
                                    
                                    
                                .否则
                                    
                                .如果结束
                                
                            .否则
                                
                            .如果结束
                            
                        .否则
                            
                        .如果结束
                        
                    .否则
                        
                    .如果结束
                    
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            加入成员 (坐标集.坐标, 坐标)
            
            
        .否则
            
        .如果结束
         ' 11111111111111
        
        赋值 (坐标, 坐标值)
        .如果 (并且 (等于 (相加 (坐标集.坐标 [点ID], X, 1), 坐标.X), 等于 (相加 (坐标集.坐标 [点ID], Y, 1), 坐标.Y)))
            
            赋值 (坐标, 坐标值)
            赋值 (坐标, 子程序2 (坐标, 图片))
            .如果 (等于 (坐标.X, -100))
                赋值 (坐标, 坐标值)
                赋值 (坐标, 子程序3 (坐标, 图片))
                .如果 (等于 (坐标.X, -100))
                    赋值 (坐标, 坐标值)
                    赋值 (坐标, 子程序4 (坐标, 图片))
                    .如果 (等于 (坐标.X, -100))
                        赋值 (坐标, 坐标值)
                        赋值 (坐标, 子程序5 (坐标, 图片))
                        .如果 (等于 (坐标.X, -100))
                            赋值 (坐标, 坐标值)
                            赋值 (坐标, 子程序6 (坐标, 图片))
                            .如果 (等于 (坐标.X, -100))
                                赋值 (坐标, 坐标值)
                                赋值 (坐标, 子程序7 (坐标, 图片))
                                .如果 (等于 (坐标.X, -100))
                                    赋值 (坐标, 坐标值)
                                    赋值 (坐标, 子程序8 (坐标, 图片))
                                    .如果 (等于 (坐标.X, -100))
                                        赋值 (坐标, 坐标值)
                                        赋值 (坐标, 子程序1 (坐标, 图片))
                                    .否则
                                        
                                    .如果结束
                                    
                                .否则
                                    
                                .如果结束
                                
                                
                            .否则
                                
                            .如果结束
                            
                        .否则
                            
                        .如果结束
                        
                    .否则
                        
                    .如果结束
                    
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
            
            加入成员 (坐标集.坐标, 坐标)
            
            
        .否则
            
        .如果结束
        
         ' 2222222222222
        赋值 (坐标, 坐标值)
        .如果 (并且 (等于 (坐标集.坐标 [点ID], X, 坐标.X), 等于 (相加 (坐标集.坐标 [点ID], Y, 1), 坐标.Y)))
            
            赋值 (坐标, 坐标值)
            赋值 (坐标, 子程序3 (坐标, 图片))
            .如果 (等于 (坐标.X, -100))
                赋值 (坐标, 坐标值)
                赋值 (坐标, 子程序4 (坐标, 图片))
                .如果 (等于 (坐标.X, -100))
                    赋值 (坐标, 坐标值)
                    赋值 (坐标, 子程序5 (坐标, 图片))
                    .如果 (等于 (坐标.X, -100))
                        赋值 (坐标, 坐标值)
                        赋值 (坐标, 子程序6 (坐标, 图片))
                        .如果 (等于 (坐标.X, -100))
                            赋值 (坐标, 坐标值)
                            赋值 (坐标, 子程序7 (坐标, 图片))
                            .如果 (等于 (坐标.X, -100))
                                赋值 (坐标, 坐标值)
                                赋值 (坐标, 子程序8 (坐标, 图片))
                                .如果 (等于 (坐标.X, -100))
                                    赋值 (坐标, 坐标值)
                                    赋值 (坐标, 子程序1 (坐标, 图片))
                                    .如果 (等于 (坐标.X, -100))
                                        赋值 (坐标, 坐标值)
                                        赋值 (坐标, 子程序2 (坐标, 图片))
                                    .否则
                                        
                                    .如果结束
                                    
                                .否则
                                    
                                .如果结束
                                
                                
                            .否则
                                
                            .如果结束
                            
                        .否则
                            
                        .如果结束
                        
                    .否则
                        
                    .如果结束
                    
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
            
            加入成员 (坐标集.坐标, 坐标)
        .否则
            
        .如果结束
         ' 33333333333333333333
        赋值 (坐标, 坐标值)
        .如果 (并且 (等于 (相减 (坐标集.坐标 [点ID], X, 1), 坐标.X), 等于 (相加 (坐标集.坐标 [点ID], Y, 1), 坐标.Y)))
            
            赋值 (坐标, 坐标值)
            赋值 (坐标, 子程序4 (坐标, 图片))
            .如果 (等于 (坐标.X, -100))
                赋值 (坐标, 坐标值)
                赋值 (坐标, 子程序5 (坐标, 图片))
                .如果 (等于 (坐标.X, -100))
                    赋值 (坐标, 坐标值)
                    赋值 (坐标, 子程序6 (坐标, 图片))
                    .如果 (等于 (坐标.X, -100))
                        赋值 (坐标, 坐标值)
                        赋值 (坐标, 子程序7 (坐标, 图片))
                        .如果 (等于 (坐标.X, -100))
                            赋值 (坐标, 坐标值)
                            赋值 (坐标, 子程序8 (坐标, 图片))
                            .如果 (等于 (坐标.X, -100))
                                赋值 (坐标, 坐标值)
                                赋值 (坐标, 子程序1 (坐标, 图片))
                                .如果 (等于 (坐标.X, -100))
                                    赋值 (坐标, 坐标值)
                                    赋值 (坐标, 子程序2 (坐标, 图片))
                                    .如果 (等于 (坐标.X, -100))
                                        赋值 (坐标, 坐标值)
                                        赋值 (坐标, 子程序3 (坐标, 图片))
                                    .否则
                                        
                                    .如果结束
                                    
                                .否则
                                    
                                .如果结束
                                
                                
                            .否则
                                
                            .如果结束
                            
                        .否则
                            
                        .如果结束
                        
                    .否则
                        
                    .如果结束
                    
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
            
            加入成员 (坐标集.坐标, 坐标)
        .否则
            
        .如果结束
         ' 4444444444444444
        
        赋值 (坐标, 坐标值)
        .如果 (并且 (等于 (相减 (坐标集.坐标 [点ID], X, 1), 坐标.X), 等于 (坐标集.坐标 [点ID], Y, 坐标.Y)))
            
            赋值 (坐标, 坐标值)
            赋值 (坐标, 子程序5 (坐标, 图片))
            .如果 (等于 (坐标.X, -100))
                赋值 (坐标, 坐标值)
                赋值 (坐标, 子程序6 (坐标, 图片))
                .如果 (等于 (坐标.X, -100))
                    赋值 (坐标, 坐标值)
                    赋值 (坐标, 子程序7 (坐标, 图片))
                    .如果 (等于 (坐标.X, -100))
                        赋值 (坐标, 坐标值)
                        赋值 (坐标, 子程序8 (坐标, 图片))
                        .如果 (等于 (坐标.X, -100))
                            赋值 (坐标, 坐标值)
                            赋值 (坐标, 子程序1 (坐标, 图片))
                            .如果 (等于 (坐标.X, -100))
                                赋值 (坐标, 坐标值)
                                赋值 (坐标, 子程序2 (坐标, 图片))
                                .如果 (等于 (坐标.X, -100))
                                    赋值 (坐标, 坐标值)
                                    赋值 (坐标, 子程序3 (坐标, 图片))
                                    .如果 (等于 (坐标.X, -100))
                                        赋值 (坐标, 坐标值)
                                        赋值 (坐标, 子程序4 (坐标, 图片))
                                    .否则
                                        
                                    .如果结束
                                    
                                .否则
                                    
                                .如果结束
                                
                                
                            .否则
                                
                            .如果结束
                            
                        .否则
                            
                        .如果结束
                        
                    .否则
                        
                    .如果结束
                    
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
            
            加入成员 (坐标集.坐标, 坐标)
        .否则
            
        .如果结束
         ' 555555555555555555555
        赋值 (坐标, 坐标值)
        .如果 (并且 (等于 (相减 (坐标集.坐标 [点ID], X, 1), 坐标.X), 等于 (相减 (坐标集.坐标 [点ID], Y, 1), 坐标.Y)))
            
            赋值 (坐标, 坐标值)
            赋值 (坐标, 子程序6 (坐标, 图片))
            .如果 (等于 (坐标.X, -100))
                赋值 (坐标, 坐标值)
                赋值 (坐标, 子程序7 (坐标, 图片))
                .如果 (等于 (坐标.X, -100))
                    赋值 (坐标, 坐标值)
                    赋值 (坐标, 子程序8 (坐标, 图片))
                    .如果 (等于 (坐标.X, -100))
                        赋值 (坐标, 坐标值)
                        赋值 (坐标, 子程序1 (坐标, 图片))
                        .如果 (等于 (坐标.X, -100))
                            赋值 (坐标, 坐标值)
                            赋值 (坐标, 子程序2 (坐标, 图片))
                            .如果 (等于 (坐标.X, -100))
                                赋值 (坐标, 坐标值)
                                赋值 (坐标, 子程序3 (坐标, 图片))
                                .如果 (等于 (坐标.X, -100))
                                    赋值 (坐标, 坐标值)
                                    赋值 (坐标, 子程序4 (坐标, 图片))
                                    .如果 (等于 (坐标.X, -100))
                                        赋值 (坐标, 坐标值)
                                        赋值 (坐标, 子程序5 (坐标, 图片))
                                    .否则
                                        
                                    .如果结束
                                    
                                .否则
                                    
                                .如果结束
                                
                                
                            .否则
                                
                            .如果结束
                            
                        .否则
                            
                        .如果结束
                        
                    .否则
                        
                    .如果结束
                    
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
            
            加入成员 (坐标集.坐标, 坐标)
        .否则
            
        .如果结束
         ' 66666666666666666666
        赋值 (坐标, 坐标值)
        .如果 (并且 (等于 (坐标集.坐标 [点ID], X, 坐标.X), 等于 (相减 (坐标集.坐标 [点ID], Y, 1), 坐标.Y)))
            
            赋值 (坐标, 坐标值)
            赋值 (坐标, 子程序7 (坐标, 图片))
            .如果 (等于 (坐标.X, -100))
                赋值 (坐标, 坐标值)
                赋值 (坐标, 子程序8 (坐标, 图片))
                .如果 (等于 (坐标.X, -100))
                    赋值 (坐标, 坐标值)
                    赋值 (坐标, 子程序1 (坐标, 图片))
                    .如果 (等于 (坐标.X, -100))
                        赋值 (坐标, 坐标值)
                        赋值 (坐标, 子程序2 (坐标, 图片))
                        .如果 (等于 (坐标.X, -100))
                            赋值 (坐标, 坐标值)
                            赋值 (坐标, 子程序3 (坐标, 图片))
                            .如果 (等于 (坐标.X, -100))
                                赋值 (坐标, 坐标值)
                                赋值 (坐标, 子程序4 (坐标, 图片))
                                .如果 (等于 (坐标.X, -100))
                                    赋值 (坐标, 坐标值)
                                    赋值 (坐标, 子程序5 (坐标, 图片))
                                    .如果 (等于 (坐标.X, -100))
                                        赋值 (坐标, 坐标值)
                                        赋值 (坐标, 子程序6 (坐标, 图片))
                                    .否则
                                        
                                    .如果结束
                                    
                                .否则
                                    
                                .如果结束
                                
                                
                            .否则
                                
                            .如果结束
                            
                        .否则
                            
                        .如果结束
                        
                    .否则
                        
                    .如果结束
                    
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
            
            加入成员 (坐标集.坐标, 坐标)
        .否则
            
        .如果结束
         ' 777777777777777
        赋值 (坐标, 坐标值)
        .如果 (并且 (等于 (相加 (坐标集.坐标 [点ID], X, 1), 坐标.X), 等于 (相减 (坐标集.坐标 [点ID], Y, 1), 坐标.Y)))
            
            赋值 (坐标, 坐标值)
            赋值 (坐标, 子程序8 (坐标, 图片))
            .如果 (等于 (坐标.X, -100))
                赋值 (坐标, 坐标值)
                赋值 (坐标, 子程序1 (坐标, 图片))
                .如果 (等于 (坐标.X, -100))
                    赋值 (坐标, 坐标值)
                    赋值 (坐标, 子程序2 (坐标, 图片))
                    .如果 (等于 (坐标.X, -100))
                        赋值 (坐标, 坐标值)
                        赋值 (坐标, 子程序3 (坐标, 图片))
                        .如果 (等于 (坐标.X, -100))
                            赋值 (坐标, 坐标值)
                            赋值 (坐标, 子程序4 (坐标, 图片))
                            .如果 (等于 (坐标.X, -100))
                                赋值 (坐标, 坐标值)
                                赋值 (坐标, 子程序5 (坐标, 图片))
                                .如果 (等于 (坐标.X, -100))
                                    赋值 (坐标, 坐标值)
                                    赋值 (坐标, 子程序6 (坐标, 图片))
                                    .如果 (等于 (坐标.X, -100))
                                        赋值 (坐标, 坐标值)
                                        赋值 (坐标, 子程序8 (坐标, 图片))
                                    .否则
                                        
                                    .如果结束
                                    
                                .否则
                                    
                                .如果结束
                                
                                
                            .否则
                                
                            .如果结束
                            
                        .否则
                            
                        .如果结束
                        
                    .否则
                        
                    .如果结束
                    
                .否则
                    
                .如果结束
                
            .否则
                
            .如果结束
            
            
            加入成员 (坐标集.坐标, 坐标)
            
        .否则
            
        .如果结束
        
        
         ' 8888888888888888
        赋值 (坐标, 坐标集.坐标 [取数组成员数 (坐标集.坐标)])
        .如果 (并且 (等于 (坐标.X, 起点.X), 等于 (坐标.Y, 起点.Y)))
            赋值 (继续收集, 假)
        .否则
            
        .如果结束
        
        
        赋值 (进度位置, 相加 (进度位置, 0.5))
        .如果 (等于 (进度位置, 100))
            赋值 (进度位置, 1)
        .否则
            
        .如果结束
        
        赋值 (_启动窗口..位置, 进度位置)
        
        
    .判断循环尾 ()
    
.否则
    
.如果结束




返回 (坐标集)


.子程序 找关键点, 坐标集, 公开, 
.参数 边缘点坐标集, 坐标集, , 
.参数 起点, 点, , 
.参数 终点, 点, , 
.参数 精度, 双精度小数型, , 

.局部变量 分段点组, 分段点, , "0", 
.局部变量 被加入分段点组, 分段点, , "2", 
.局部变量 筛出点, 点属性, , "0", 
.局部变量 被比高, 双精度小数型, , , 
.局部变量 高, 双精度小数型, , , 
.局部变量 被比点ID, 整数型, , , 
.局部变量 关键点集, 坐标集, , , 
.局部变量 点ID, 整数型, , , 
.局部变量 第三点, 点属性, , , 
.局部变量 过渡点, 点, , , 

赋值 (点ID, 2)

重定义数组 (分段点组, 假, 2)
赋值 (分段点组 [1].起点.X, 起点.X)
赋值 (分段点组 [1].起点.Y, 起点.Y)
赋值 (分段点组 [1].起点.ID, 1)

赋值 (分段点组 [1].终点.X, 终点.X)
赋值 (分段点组 [1].终点.Y, 终点.Y)

.判断循环首 (大于 (点ID, 1))
    .如果 (或者 (不等于 (分段点组 [1].终点.X, 边缘点坐标集.坐标 [点ID], X), 不等于 (分段点组 [1].终点.Y, 边缘点坐标集.坐标 [点ID], Y)))
        赋值 (点ID, 相加 (点ID, 1))
    .否则
        
    .如果结束
    .如果 (并且 (等于 (分段点组 [1].终点.X, 边缘点坐标集.坐标 [点ID], X), 等于 (分段点组 [1].终点.Y, 边缘点坐标集.坐标 [点ID], Y)))
        赋值 (分段点组 [1].终点.ID, 点ID)
        赋值 (点ID, 0)
    .否则
        
    .如果结束
    
    
.判断循环尾 ()

赋值 (分段点组 [2].起点, 分段点组 [1].终点)
赋值 (分段点组 [2].终点.X, 起点.X)
赋值 (分段点组 [2].终点.Y, 起点.Y)
赋值 (分段点组 [2].终点.ID, 取数组成员数 (边缘点坐标集.坐标))


.判断循环首 (大于 (取数组成员数 (分段点组), 0))
    
    赋值 (点ID, 相加 (分段点组 [1].起点.ID, 1))
    赋值 (被比高, 精度)
    .判断循环首 (小于 (点ID, 分段点组 [1].终点.ID))
        赋值 (高, 求高 (分段点组 [1].起点, 分段点组 [1].终点, 边缘点坐标集.坐标 [点ID]))
        .如果 (小于或等于 (高, 被比高))
            赋值 (点ID, 相加 (点ID, 1))
        .否则
            .如果 (大于 (高, 被比高))
                赋值 (被比高, 高)
                赋值 (被比点ID, 点ID)
                赋值 (点ID, 相加 (点ID, 1))
            .否则
                
            .如果结束
            
        .如果结束
        
    .判断循环尾 ()
    .如果 (大于 (被比高, 精度))
        赋值 (被加入分段点组 [1].起点, 分段点组 [1].起点)
        赋值 (被加入分段点组 [1].终点.X, 边缘点坐标集.坐标 [被比点ID], X)
        赋值 (被加入分段点组 [1].终点.Y, 边缘点坐标集.坐标 [被比点ID], Y)
        赋值 (被加入分段点组 [1].终点.ID, 被比点ID)
        赋值 (被加入分段点组 [2].起点.X, 边缘点坐标集.坐标 [被比点ID], X)
        赋值 (被加入分段点组 [2].起点.Y, 边缘点坐标集.坐标 [被比点ID], Y)
        赋值 (被加入分段点组 [2].起点.ID, 被比点ID)
        赋值 (被加入分段点组 [2].终点, 分段点组 [1].终点)
        加入成员 (分段点组, 被加入分段点组)
        删除成员 (分段点组, 1, 1)
        
        
    .否则
        .如果 (小于或等于 (被比高, 精度))
            加入成员 (筛出点, 分段点组 [1].起点)
            加入成员 (筛出点, 分段点组 [1].终点)
            删除成员 (分段点组, 1, 1)
        .否则
            
        .如果结束
        
    .如果结束
    
.判断循环尾 ()

 ' 排序////////////////////////////


赋值 (点ID, 1)
.判断循环首 (小于 (点ID, 取数组成员数 (筛出点)))
    赋值 (被比点ID, 相加 (点ID, 1))
    .判断循环首 (小于 (被比点ID, 相加 (取数组成员数 (筛出点), 1)))
        .如果 (小于 (筛出点 [被比点ID], ID, 筛出点 [点ID], ID))
            赋值 (第三点, 筛出点 [被比点ID])
            赋值 (筛出点 [被比点ID], 筛出点 [点ID])
            赋值 (筛出点 [点ID], 第三点)
            赋值 (被比点ID, 相加 (被比点ID, 1))
        .否则
            
            .如果 (等于 (筛出点 [被比点ID], ID, 筛出点 [点ID], ID))
                删除成员 (筛出点, 被比点ID, 1)
                
            .否则
                .如果 (大于 (筛出点 [被比点ID], ID, 筛出点 [点ID], ID))
                    赋值 (被比点ID, 相加 (被比点ID, 1))
                .否则
                    
                .如果结束
                
            .如果结束
            
        .如果结束
        
    .判断循环尾 ()
    赋值 (点ID, 相加 (点ID, 1))
    
.判断循环尾 ()

 ' //////////////二次找关键点





赋值 (关键点集.坐标 [1].X, 筛出点 [1].X)
赋值 (关键点集.坐标 [1].Y, 筛出点 [1].Y)

赋值 (点ID, 2)
.判断循环首 (小于 (点ID, 取数组成员数 (筛出点)))
    赋值 (过渡点.X, 筛出点 [点ID], X)
    赋值 (过渡点.Y, 筛出点 [点ID], Y)
    加入成员 (关键点集.坐标, 过渡点)
    赋值 (点ID, 相加 (点ID, 1))
    
.判断循环尾 ()
返回 (关键点集)




.子程序 算点坐标, 三维坐标, , 
.参数 左点, 点, , 
.参数 右点, 点, , 
.参数 交距, 文本型, , 
.参数 间距, 文本型, , 
.参数 范围, 文本型, , 
.参数 图片, 字节集, , 

.局部变量 底角, 双精度小数型, , , 
.局部变量 焦距, 双精度小数型, , , 
.局部变量 三维坐标, 三维坐标, , , 
.局部变量 位图, 位图, , , 
.局部变量 斜边, 双精度小数型, , , 
.局部变量 小斜边, 双精度小数型, , , 
.局部变量 高, 双精度小数型, , , 
.局部变量 比例, 双精度小数型, , , 
.局部变量 左底角, 双精度小数型, , , 
.局部变量 右底角, 双精度小数型, , , 
.局部变量 左点小小, 点小, , , 
.局部变量 右点小小, 点小, , , 
.局部变量 PI, 双精度小数型, , , 

赋值 (左点小小.X, 到小数 (左点.X))
赋值 (左点小小.Y, 到小数 (左点.Y))
赋值 (右点小小.X, 到小数 (右点.X))
赋值 (右点小小.Y, 到小数 (右点.Y))
赋值 (PI, 3.14159265359)

赋值 (底角, 相乘 (相除 (求反正切 (相除 (到数值 (交距), 相除 (到数值 (间距), 2))), PI), 180))
位图.载入数据 (图片)

 ' gao ＝ 位图.取高度 ()
 ' kuan ＝ 位图.取宽度 ()

赋值 (焦距, 相乘 (相除 (位图.取宽度 (), 2), 求正切 (相除 (相乘 (相除 (相减 (180, 到数值 (范围)), 2), PI), 180))))

赋值 (左底角, 相减 (底角, 相乘 (相除 (求反正切 (相除 (相减 (相加 (左点小小.X, 0.5), 相除 (位图.取宽度 (), 2)), 焦距)), PI), 180)))
赋值 (右底角, 相加 (底角, 相乘 (相除 (求反正切 (相除 (相减 (相加 (右点小小.X, 0.5), 相除 (位图.取宽度 (), 2)), 焦距)), PI), 180)))

.如果 (大于或等于 (相加 (左底角, 右底角), 180))
    赋值 (三维坐标.X, 0)
    赋值 (三维坐标.Y, 0)
    赋值 (三维坐标.Z, 0)
    赋值 (图片错误, 真)
    
    
.否则
    .如果 (并且 (等于 (相加 (左点小小.X, 0.5), 相除 (位图.取宽度 (), 2)), 等于 (相加 (右点小小.X, 0.5), 相除 (位图.取宽度 (), 2))))
        赋值 (比例, 相除 (焦距, 到数值 (交距)))
        赋值 (三维坐标.X, 取整 (四舍五入 (相除 (相减 (相加 (左点小小.X, 0.5), 相除 (位图.取宽度 (), 2)), 比例), 0)))
        赋值 (三维坐标.Y, 取整 (四舍五入 (相除 (相减 (相加 (左点小小.Y, 0.5), 相除 (位图.取高度 (), 2)), 比例), 0)))
        赋值 (三维坐标.Z, 取整 (四舍五入 (到数值 (交距), 0)))
        
    .否则
        赋值 (小斜边, 求平方根 (相加 (求次方 (取绝对值 (相减 (相加 (左点小小.X, 0.5), 相除 (位图.取宽度 (), 2))), 2), 求次方 (焦距, 2))))
        .如果 (等于 (左底角, 90))
            赋值 (斜边, 相除 (到数值 (间距), 求正弦 (相除 (相乘 (相减 (180, 左底角, 右底角), PI), 180))))
        .否则
            .如果 (大于 (左底角, 90))
                赋值 (高, 相乘 (到数值 (间距), 求正弦 (相除 (相乘 (右底角, PI), 180))))
                赋值 (斜边, 相除 (高, 求正弦 (相除 (相乘 (相减 (180, 左底角, 右底角), PI), 180))))
                
                
                
            .否则
                .如果 (小于 (左底角, 90))
                    赋值 (高, 相乘 (到数值 (间距), 求正弦 (相除 (相乘 (左底角, PI), 180))))
                    赋值 (斜边, 相加 (相除 (高, 求正切 (相除 (相乘 (左底角, PI), 180))), 相除 (高, 求正切 (相除 (相乘 (相减 (180, 左底角, 右底角), PI), 180)))))
                    
                    
                .否则
                    
                .如果结束
                
            .如果结束
            
        .如果结束
        赋值 (比例, 相除 (小斜边, 斜边))
        赋值 (三维坐标.X, 取整 (四舍五入 (相除 (相减 (相加 (左点小小.X, 0.5), 相除 (位图.取宽度 (), 2)), 比例), 0)))
        赋值 (三维坐标.Y, 相减 (0, 取整 (四舍五入 (相除 (相减 (相加 (左点小小.Y, 0.5), 相除 (位图.取高度 (), 2)), 比例), 0))))
        赋值 (三维坐标.Z, 相减 (0, 取整 (四舍五入 (相除 (焦距, 比例), 0))))
        
    .如果结束
    
    
.如果结束

返回 (三维坐标)






.子程序 算多点三维坐标, 三维坐标集, , 
.参数 左关键点集, 坐标集, , 
.参数 右关键点集, 坐标集, , 
.参数 交距, 文本型, , 
.参数 间距, 文本型, , 
.参数 范围, 文本型, , 
.参数 图片, 字节集, , 

.局部变量 多点三维坐标, 三维坐标集, , , 
.局部变量 点ID, 整数型, , , 
.局部变量 三维坐标, 三维坐标, , , 


赋值 (点ID, 1)

赋值 (三维坐标, 算点坐标 (左关键点集.坐标 [点ID], 右关键点集.坐标 [点ID], 交距, 间距, 范围, 图片))
赋值 (多点三维坐标.三维坐标 [1], 三维坐标)

.计次循环首 (相减 (取数组成员数 (左关键点集.坐标), 1), )
    赋值 (点ID, 相加 (点ID, 1))
     ' 重定义数组 (多点三维坐标.三维坐标, 假, )
    赋值 (三维坐标, 算点坐标 (左关键点集.坐标 [点ID], 右关键点集.坐标 [点ID], 交距, 间距, 范围, 图片))
    加入成员 (多点三维坐标.三维坐标, 三维坐标)
    
.计次循环尾 ()
返回 (多点三维坐标)





.子程序 色块边缘化, 空白型, , 
.参数 色块号, 整数型, , 
.参数 左右, 文本型, , 

.局部变量 收集坐标A, 逻辑型, , , 
.局部变量 收集坐标B, 逻辑型, , , 
.局部变量 位图1, 位图, , , 
.局部变量 位图, 位图, , , 
.局部变量 坐标, 点, , , 
.局部变量 坐标集, 点, , "0", 
.局部变量 颜色值, 整数型, , , 
.局部变量 A, 整数型, , , 
.局部变量 图片, 字节集, , , 

.如果 (等于 (文件是否存在 (相加 (取运行目录 (), “\ima.ge\”, 到文本 (色块号), 左右, “.AAT”)), 真))
    位图.载入文件 (相加 (取运行目录 (), “\ima.ge\”, 到文本 (色块号), 左右, “.AAT”))
    赋值 (坐标.X, 0)
    赋值 (坐标.Y, 0)
    
    赋值 (图片, 位图.取位图数据 ())
    
    .判断循环首 (小于或等于 (坐标.Y, 位图.取高度 ()))
        赋值 (收集坐标A, 假)
        赋值 (收集坐标B, 假)
        
        .如果 (等于 (位图.取某点颜色 (坐标.X, 坐标.Y), 0))
            .如果 (不等于 (位图.取某点颜色 (相加 (坐标.X, 1), 坐标.Y), 0))
                赋值 (收集坐标A, 真)
            .否则
                
            .如果结束
            
            .如果 (等于 (位图.取某点颜色 (相加 (坐标.X, 1), 坐标.Y), 0))
                赋值 (收集坐标B, 真)
            .否则
                
            .如果结束
            
            
            .如果 (不等于 (位图.取某点颜色 (坐标.X, 相加 (坐标.Y, 1)), 0))
                赋值 (收集坐标A, 真)
            .否则
                
            .如果结束
            
            .如果 (等于 (位图.取某点颜色 (坐标.X, 相加 (坐标.Y, 1)), 0))
                赋值 (收集坐标B, 真)
            .否则
                
            .如果结束
            
            .如果 (不等于 (位图.取某点颜色 (相减 (坐标.X, 1), 坐标.Y), 0))
                赋值 (收集坐标A, 真)
            .否则
                
            .如果结束
            
            .如果 (等于 (位图.取某点颜色 (相减 (坐标.X, 1), 坐标.Y), 0))
                赋值 (收集坐标B, 真)
            .否则
                
            .如果结束
            
            .如果 (不等于 (位图.取某点颜色 (坐标.X, 相减 (坐标.Y, 1)), 0))
                赋值 (收集坐标A, 真)
            .否则
                
            .如果结束
            
            .如果 (等于 (位图.取某点颜色 (坐标.X, 相减 (坐标.Y, 1)), 0))
                赋值 (收集坐标B, 真)
            .否则
                
            .如果结束
            
            
            .如果 (并且 (等于 (收集坐标A, 真), 等于 (收集坐标B, 真)))
                加入成员 (坐标集, 坐标)
            .否则
                
            .如果结束
            
            
            
        .否则
            
        .如果结束
        
        
        
        .如果 (不等于 (位图.取某点颜色 (坐标.X, 坐标.Y), 0))
            赋值 (颜色值, 位图.取某点颜色 (坐标.X, 坐标.Y))
             ' .如果 (或者 (等于 (坐标.X, 1), 等于 (坐标.Y, 1), 等于 (坐标.X, 相减 (位图.取宽度 (), 1)), 等于 (坐标.Y, 相减 (位图.取高度 (), 1))))
                 ' 加入成员 (坐标集, 坐标)
                
            .否则
                
            .如果结束
            
        .否则
            
        .如果结束
        
        
        
        
        赋值 (坐标.X, 相加 (坐标.X, 1))
        .如果 (等于 (坐标.X, 相加 (位图.取宽度 (), 1)))
            赋值 (坐标.X, 0)
            赋值 (坐标.Y, 相加 (坐标.Y, 1))
        .否则
            
        .如果结束
        
    .判断循环尾 ()
    赋值 (A, 1)
    位图1.创建 (相加 (位图.取宽度 (), 2), 相加 (位图.取高度 (), 2), 24, 0)
    
    
    .计次循环首 (取数组成员数 (坐标集), )
        位图1.置某点颜色 (相加 (坐标集 [A], X, 1), 相加 (坐标集 [A], Y, 1), 颜色值)
        赋值 (A, 相加 (A, 1))
        
    .计次循环尾 ()
    
    
    
.否则
    
.如果结束



 ' 返回 (位图1.取位图数据 ())
写到文件 (相加 (取运行目录 (), “\ima.ge\”, 到文本 (色块号), 左右, “.AAT”), 位图1.取位图数据 ())





.子程序 子程序1, 点, , 
.参数 坐标1, 点, , 
.参数 图片, 字节集, , 

.局部变量 位图1, 位图, , , 

位图1.载入数据 (图片)
 ' ss ＝ 位图1.取某点颜色 (坐标1.X － 1, 坐标1.Y － 1)
 ' 调试输出 (ss)
 ' 返回 (坐标1)
.如果 (不等于 (位图1.取某点颜色 (相减 (坐标1.X, 1), 相减 (坐标1.Y, 1)), 0))
    赋值 (坐标1.X, 相减 (坐标1.X, 1))
    赋值 (坐标1.Y, 相减 (坐标1.Y, 1))
     ' 已加入 ＝ 真
    返回 (坐标1)
    
.否则
    赋值 (坐标1.X, -100)
     ' 坐标1.Y ＝ -100
    返回 (坐标1)
    
    
.如果结束







.子程序 子程序2, 点, , 
.参数 坐标1, 点, , 
.参数 图片, 字节集, , 

.局部变量 位图1, 位图, , , 


位图1.载入数据 (图片)
.如果 (不等于 (位图1.取某点颜色 (坐标1.X, 相减 (坐标1.Y, 1)), 0))
    
    赋值 (坐标1.Y, 相减 (坐标1.Y, 1))
    
     ' 已加入 ＝ 真
    返回 (坐标1)
.否则
    赋值 (坐标1.X, -100)
     ' 坐标1.Y ＝ -100
    返回 (坐标1)
.如果结束



.子程序 子程序3, 点, , 
.参数 坐标1, 点, , 
.参数 图片, 字节集, , 

.局部变量 位图1, 位图, , , 


位图1.载入数据 (图片)
.如果 (不等于 (位图1.取某点颜色 (相加 (坐标1.X, 1), 相减 (坐标1.Y, 1)), 0))
    赋值 (坐标1.X, 相加 (坐标1.X, 1))
    赋值 (坐标1.Y, 相减 (坐标1.Y, 1))
    
     ' 已加入 ＝ 真
    返回 (坐标1)
.否则
    赋值 (坐标1.X, -100)
     ' 坐标1.Y ＝ -100
    返回 (坐标1)
    
.如果结束



.子程序 子程序4, 点, , 
.参数 坐标1, 点, , 
.参数 图片, 字节集, , 

.局部变量 位图1, 位图, , , 



位图1.载入数据 (图片)
 ' ss ＝ 位图1.取某点颜色 (坐标1.X ＋ 1, 坐标1.Y)
 ' 调试输出 (ss)

.如果 (不等于 (位图1.取某点颜色 (相加 (坐标1.X, 1), 坐标1.Y), 0))
    赋值 (坐标1.X, 相加 (坐标1.X, 1))
    
    
     ' 已加入 ＝ 真
    返回 (坐标1)
.否则
    赋值 (坐标1.X, -100)
     ' 坐标1.Y ＝ -100
    返回 (坐标1)
    
.如果结束




.子程序 子程序5, 点, , 
.参数 坐标1, 点, , 
.参数 图片, 字节集, , 

.局部变量 位图1, 位图, , , 


位图1.载入数据 (图片)
.如果 (不等于 (位图1.取某点颜色 (相加 (坐标1.X, 1), 相加 (坐标1.Y, 1)), 0))
    赋值 (坐标1.X, 相加 (坐标1.X, 1))
    赋值 (坐标1.Y, 相加 (坐标1.Y, 1))
    
     ' 已加入 ＝ 真
    返回 (坐标1)
.否则
    赋值 (坐标1.X, -100)
     ' 坐标1.Y ＝ -100
    返回 (坐标1)
    
.如果结束



.子程序 子程序6, 点, , 
.参数 坐标1, 点, , 
.参数 图片, 字节集, , 

.局部变量 位图1, 位图, , , 

位图1.载入数据 (图片)

.如果 (不等于 (位图1.取某点颜色 (坐标1.X, 相加 (坐标1.Y, 1)), 0))
    
    赋值 (坐标1.Y, 相加 (坐标1.Y, 1))
    
     ' 已加入 ＝ 真
    返回 (坐标1)
.否则
    赋值 (坐标1.X, -100)
     ' 坐标1.Y ＝ -100
    返回 (坐标1)
    
.如果结束



.子程序 子程序7, 点, , 
.参数 坐标1, 点, , 
.参数 图片, 字节集, , 

.局部变量 位图1, 位图, , , 

位图1.载入数据 (图片)
.如果 (不等于 (位图1.取某点颜色 (相减 (坐标1.X, 1), 相加 (坐标1.Y, 1)), 0))
    赋值 (坐标1.X, 相减 (坐标1.X, 1))
    赋值 (坐标1.Y, 相加 (坐标1.Y, 1))
    
     ' 已加入 ＝ 真
    返回 (坐标1)
.否则
    赋值 (坐标1.X, -100)
     ' 坐标1.Y ＝ -100
    返回 (坐标1)
    
.如果结束




.子程序 子程序8, 点, , 
.参数 坐标1, 点, , 
.参数 图片, 字节集, , 

.局部变量 位图1, 位图, , , 

位图1.载入数据 (图片)
.如果 (不等于 (位图1.取某点颜色 (相减 (坐标1.X, 1), 坐标1.Y), 0))
    赋值 (坐标1.X, 相减 (坐标1.X, 1))
    
    
     ' 已加入 ＝ 真
    返回 (坐标1)
.否则
    赋值 (坐标1.X, -100)
     ' 坐标1.Y ＝ -100
    返回 (坐标1)
    
.如果结束




.子程序 取红, 整数型, , 
.参数 颜色, 整数型, , 

 ' 返回 (取字节集数据 (到字节集 (颜色), #字节型, 1))


.子程序 取绿, 整数型, , 
.参数 颜色, 整数型, , 


返回 (取字节集数据 (到字节集 (颜色), #字节型, 2))


.子程序 取蓝, 整数型, , 
.参数 颜色, 整数型, , 

返回 (取字节集数据 (到字节集 (颜色), #字节型, 3))


.子程序 求高, 双精度小数型, , 
.参数 起点, 点属性, , 
.参数 终点, 点属性, , 
.参数 C点, 点, , 

.局部变量 高, 双精度小数型, , , 
.局部变量 A边, 双精度小数型, , , 
.局部变量 B边, 双精度小数型, , , 
.局部变量 C边, 双精度小数型, , , 
.局部变量 余弦A, 双精度小数型, , , 
.局部变量 正切A, 双精度小数型, , , 
.局部变量 余弦B, 双精度小数型, , , 
.局部变量 角A, 双精度小数型, , , 
.局部变量 角B, 双精度小数型, , , 
.局部变量 PI, 双精度小数型, , , 

赋值 (PI, 3.14159265359)

.如果 (等于 (起点.X, 终点.X))
    赋值 (高, 取绝对值 (相减 (C点.X, 起点.X)))
.否则
    
.如果结束
.如果 (等于 (起点.Y, 终点.Y))
    赋值 (高, 取绝对值 (相减 (C点.Y, 起点.Y)))
.否则
    
.如果结束
.如果 (并且 (不等于 (起点.X, 终点.X), 不等于 (起点.Y, 终点.Y)))
    赋值 (A边, 求平方根 (相加 (求次方 (取绝对值 (相减 (终点.X, C点.X)), 2), 求次方 (取绝对值 (相减 (终点.Y, C点.Y)), 2))))
    赋值 (B边, 求平方根 (相加 (求次方 (取绝对值 (相减 (起点.X, C点.X)), 2), 求次方 (取绝对值 (相减 (起点.Y, C点.Y)), 2))))
    赋值 (C边, 求平方根 (相加 (求次方 (取绝对值 (相减 (终点.X, 起点.X)), 2), 求次方 (取绝对值 (相减 (终点.Y, 起点.Y)), 2))))
     ' .如果 (小于或等于 (相加 (求次方 (A边, 2), 求次方 (C边, 2)), 求次方 (B边, 2)))
         ' 余弦 ＝ (求次方 (C边, 2) ＋ 求次方 (B边, 2) － 求次方 (A边, 2)) ÷ (2 × B边 × C边)
         ' 邻边 ＝ C边 × 余弦
         ' 高 ＝ 求平方根 (求次方 (C边, 2) － 求次方 (邻边, 2))
    .否则
        
    .如果结束
    
     ' .如果 (大于 (相加 (求次方 (A边, 2), 求次方 (C边, 2)), 求次方 (B边, 2)))
         ' 余弦 ＝ (求次方 (C边, 2) ＋ 求次方 (A边, 2) － 求次方 (B边, 2)) ÷ (2 × A边 × C边)
         ' 邻边 ＝ A边 × 余弦
         ' 高 ＝ 求平方根 (求次方 (A边, 2) － 求次方 (邻边, 2))
    .否则
        
    .如果结束
     ' 余弦A ＝ (求次方 (C边, 2) ＋ 求次方 (B边, 2) － 求次方 (A边, 2)) ÷ (2 × B边 × C边)
     ' 正切A ＝ 求平方根 (1 ÷ (余弦A × 余弦A) － 1)
     ' 角A ＝ 求反正切 (正切A) × 180 ÷ PI
     ' .如果 (等于 (角A, 90))
         ' 高 ＝ B边
        
    .否则
         ' .如果 (小于 (角A, 90))
             ' 高 ＝ 求平方根 (1 － 求次方 (余弦A, 2)) × B边
            
        .否则
             ' .如果 (大于 (角A, 90))
                 ' 余弦B ＝ (求次方 (C边, 2) ＋ 求次方 (A边, 2) － 求次方 (B边, 2)) ÷ (2 × A边 × C边)
                
                 ' 高 ＝ 求平方根 (1 － 求次方 (余弦B, 2)) × A边
                
            .否则
                
            .如果结束
            
        .如果结束
        
    .如果结束
    
    
    .如果 (小于 (取绝对值 (相减 (相加 (A边, B边), C边)), 0.5))
        赋值 (高, 0)
    .否则
        赋值 (余弦A, 相除 (相减 (相加 (求次方 (C边, 2), 求次方 (B边, 2)), 求次方 (A边, 2)), 相乘 (2, B边, C边)))
        赋值 (正切A, 求平方根 (相减 (相除 (1, 相乘 (余弦A, 余弦A)), 1)))
        赋值 (角A, 相除 (相乘 (求反正切 (正切A), 180), PI))
        .如果 (等于 (角A, 90))
            赋值 (高, B边)
            
        .否则
            .如果 (小于 (角A, 90))
                赋值 (高, 相乘 (求平方根 (相减 (1, 求次方 (余弦A, 2))), B边))
                
            .否则
                .如果 (大于 (角A, 90))
                    赋值 (余弦B, 相除 (相减 (相加 (求次方 (C边, 2), 求次方 (A边, 2)), 求次方 (B边, 2)), 相乘 (2, A边, C边)))
                    
                    赋值 (高, 相乘 (求平方根 (相减 (1, 求次方 (余弦B, 2))), A边))
                    
                .否则
                    
                .如果结束
                
            .如果结束
            
        .如果结束
        
    .如果结束
    
    
.否则
    
.如果结束

返回 (高)

.窗口程序集 相机参数程序集, , , 

.子程序 _按钮1_被单击, 空白型, , 
载入 (相机设置窗口, , 假)

.窗口程序集 窗口程序集1, , , 

.子程序 _按钮1_被单击, 空白型, , 
销毁 ()


 ' 不属于任何一个程序集、类模块的函数：
