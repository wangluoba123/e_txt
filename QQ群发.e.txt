 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 433
    高度 = 508
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “简易QQ群发”
    帮助文件名 = “”



.常量 临时会话, "“timwp.exe Tencent://Message/?Menu=YES&Exe=&Uin=”", , 
.常量 WM_GETTEXT, "13", , 
.常量 WM_CLOSE, "16", , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 4 系统核心支持库
 ' internet 707ca37322474f6ca841f0e224f4b620 1 0 互联网支持库
 ' eGrid 0B4337DA651B4b619ACF61334A7E8B47 1 3 高级表格支持库




数据类型 POINTAPI, , 坐标;
    .成员 横向位置, 整数型, , , 
    .成员 纵向位置, 整数型, , , 

数据类型 QQ对话窗, , 
    .成员 窗口句柄, 整数型, , , 
    .成员 窗口标题, 文本型, , , 
    .成员 发送编辑框句柄, 整数型, , , 
    .成员 发送按钮句柄, 整数型, , , 
    .成员 退出按钮句柄, 整数型, , , 
    .成员 是否自动发送, 逻辑型, , , 


.DLL命令 API_寻找子窗口, 整数型, "user32", "FindWindowExA", , 在窗口列表中寻找与指定条件相符的第一个子窗口  找到的窗口的句柄。如未找到相符窗口，则返回零。会设置GetLastError
    .参数 窗口句柄1, 整数型, , 在其中查找子的父窗口。如设为零，表示使用桌面窗口（通常说的顶级窗口都被认为是桌面的子窗口，所以也会对它们进行查找）
    .参数 窗口句柄2, 整数型, , 从这个窗口后开始查找。这样便可利用对FindWindowEx的多次调用找到符合条件的所有子窗口。如设为零，表示从第一个子窗口开始搜索
    .参数 欲搜索的类名1, 文本型, , 欲搜索的类名。零表示忽略
    .参数 欲搜索的类名2, 整数型, , 欲搜索的类名。零表示忽略;

.DLL命令 API_寻找子窗口A, 整数型, "user32", "FindWindowExA", , 在窗口列表中寻找与指定条件相符的第一个子窗口  找到的窗口的句柄。如未找到相符窗口，则返回零。会设置GetLastError
    .参数 窗口句柄1, 整数型, , 在其中查找子的父窗口。如设为零，表示使用桌面窗口（通常说的顶级窗口都被认为是桌面的子窗口，所以也会对它们进行查找）
    .参数 窗口句柄2, 整数型, , 从这个窗口后开始查找。这样便可利用对FindWindowEx的多次调用找到符合条件的所有子窗口。如设为零，表示从第一个子窗口开始搜索
    .参数 欲搜索的类名1, 文本型, , 欲搜索的类名。零表示忽略
    .参数 欲搜索的类名2, 文本型, , 欲搜索的类名。零表示忽略;

.DLL命令 API_取窗口标题, 整数型, "user32", "GetWindowTextA", , 取得一个窗体的标题（caption）文字，或者一个控件的内容（在vb里使用：使用vb窗体或控件的caption或text属性）  复制到lpString的字串长度；不包括空中止字符。会设置GetLastError
    .参数 窗口句柄, 整数型, , 欲获取文字的那个窗口的句柄
    .参数 缓冲区, 文本型, , 预定义的一个缓冲区，至少有cch+1个字符大小；随同窗口文字载入
    .参数 缓冲尺寸, 整数型, , lp缓冲区的长度;

.DLL命令 API_寻找顶级窗口, 整数型, "user32", "FindWindowA", , 寻找窗口列表中第一个符合指定条件的顶级窗口（在vb里使用：FindWindow最常见的一个用途是获得ThunderRTMain类的隐藏窗口的句柄；该类是所有运行中vb执行程序的一部分。获得句柄后，可用api函数GetWindowText取得这个窗口的名称；该名也是应用程序的标题）  找到窗口的句柄。如未找到相符窗口，则返回零。会设置GetLastError
    .参数 窗口类名, 文本型, , 指向包含了窗口类名的空中止（C语言）字串的指针；或设为零，表示接收任何类
    .参数 窗口文本, 文本型, , 指向包含了窗口文本（或标签）的空中止（C语言）字串的指针；或设为零，表示接收任何窗口标题  示例Dim hw&, cnt&Dim rttitle As  * 256hw& = FindWindow("ThunderRT5Main", vbNullString) ' ThunderRTMain under VB4cnt = GetWindowText(hw&, rttitle, 255)MsgBox Left$(rttitle, cnt), 0, "RTMain title";

.DLL命令 API_寻找顶级窗口A, 整数型, "user32", "FindWindowA", , 寻找窗口列表中第一个符合指定条件的顶级窗口（在vb里使用：FindWindow最常见的一个用途是获得ThunderRTMain类的隐藏窗口的句柄；该类是所有运行中vb执行程序的一部分。获得句柄后，可用api函数GetWindowText取得这个窗口的名称；该名也是应用程序的标题）  找到窗口的句柄。如未找到相符窗口，则返回零。会设置GetLastError
    .参数 窗口类名, 整数型, , 指向包含了窗口类名的空中止（C语言）字串的指针；或设为零，表示接收任何类
    .参数 窗口文本, 文本型, , 指向包含了窗口文本（或标签）的空中止（C语言）字串的指针；或设为零，表示接收任何窗口标题  示例Dim hw&, cnt&Dim rttitle As  * 256hw& = FindWindow("ThunderRT5Main", vbNullString) ' ThunderRTMain under VB4cnt = GetWindowText(hw&, rttitle, 255)MsgBox Left$(rttitle, cnt), 0, "RTMain title";

.DLL命令 API_取鼠标位置, 整数型, "user32", "GetCursorPos", , 获取鼠标指针的当前位置  非零表示成功，零表示失败。会设置GetLastError
    .参数 位置, POINTAPI, , POINTAPI，随同指针在屏幕像素坐标中的位置载入的一个结构;

.DLL命令 API_WindowFromPoint, 整数型, "user32", "WindowFromPoint", , 返回包含了指定点的窗口的句柄。忽略屏蔽、隐藏以及透明窗口  包含了指定点的窗口的句柄。如指定的点处没有窗口存在，则返回零
    .参数 xPoint, 整数型, , x点值
    .参数 yPoint, 整数型, , y点值;

.DLL命令 API_取得类名称, 整数型, "user32", "GetClassNameA", , 为指定的窗口取得类名  以字节数表示的类名长度；排除最后的空中止字符。零表示出错。会设置GetLastError
    .参数 窗口句柄, 整数型, , 欲获得类名的那个窗口的句柄
    .参数 缓冲区, 文本型, , 随同类名载入的缓冲区。预先至少必须分配nMaxCount+1个字符
    .参数 缓冲区长度, 整数型, , 由lpClassName提供的缓冲区长度;

.DLL命令 API_清除窗口, 整数型, "user32", "DestroyWindow", , 破坏（即清除）指定的窗口以及它的所有子窗口（在vb里使用：用处不大。原文：it ;    is unlikely to be of much use.）  非零表示成功，零表示失败。会设置GetLastError
    .参数 窗口句柄, 整数型, , 欲清除的窗口的句柄;

.DLL命令 API_发送消息, 整数型, "user32", "SendMessageA", , 调用一个窗口的窗口函数，将一条消息发给那个窗口。除非消息处理完毕，否则该函数不会返回。SendMessageBynum， ;    SendMessageByString是该函数的“类型安全”声明形式  由具体的消息决定
    .参数 窗口句柄, 整数型, , 要接收消息的那个窗口的句柄
    .参数 信息值, 整数型, , 消息的标识符
    .参数 参数一, 整数型, , 具体取决于消息
    .参数 参数二, 文本型, , 具体取决于消息;

.DLL命令 API_发送消息A, 整数型, "user32", "SendMessageA", , 调用一个窗口的窗口函数，将一条消息发给那个窗口。除非消息处理完毕，否则该函数不会返回。SendMessageBynum， ;    SendMessageByString是该函数的“类型安全”声明形式  由具体的消息决定
    .参数 窗口句柄, 整数型, , 要接收消息的那个窗口的句柄
    .参数 信息值, 整数型, , 消息的标识符
    .参数 参数一, 整数型, , 具体取决于消息
    .参数 参数二, 整数型, , 具体取决于消息;

.DLL命令 API_取得窗口, 整数型, "user32", "GetWindow", , 获得一个窗口的句柄，该窗口与某源窗口有特定的关系  由wCmd决定的一个窗口的句柄。如没有找到相符窗口，或者遇到错误，则返回零值。会设置GetLastError
    .参数 源窗口, 整数型, , 源窗口
    .参数 关系, 整数型, , 指定结果窗口与源窗口的关系，它们建立在下述常数基础上：;GW_CHILD：寻找源窗口的第一个子窗口;GW_HWNDFIRST：为一个源子窗口寻找第一个兄弟（同级）窗口，或寻找第一个顶级窗口;GW_HWNDLAST：为一个源子窗口寻找最后一个兄弟（同级）窗口，或寻找最后一个顶级窗口;GW_HWNDNEXT：为源窗口寻找下一个兄弟窗口;GW_HWNDPREV：为源窗口寻找前一个兄弟窗口;GW_OWNER：寻找窗口的所有者;

.DLL命令 API_取活动窗口句柄, 整数型, "user32", "GetActiveWindow", , 获得活动窗口的句柄  活动窗口的句柄，如没有窗口处于活动状态，则返回零值

.窗口程序集 窗口程序集1, , , 

.程序集变量 QQ安装路径, 文本型, , , 
.程序集变量 是否终止, 逻辑型, , , 
.子程序 __启动窗口_创建完毕, 空白型, , 
 ' http://wpa.qq.com/pa?p=11:6677875:11 判断QQ是否上线
赋值 (QQ安装路径, 取文本注册项 (#本地机器, “SoftWare\Tencent\QQ\install”, ))
高级表格初始化 ({ “QQ号码”, “昵称” }, { 200, 200 }, , )

.子程序 取QQ窗口文本, 文本型, , 
.参数 WinHwnd, 整数型, , 

.局部变量 lLen, 整数型, , , 
.局部变量 GetWinText, 文本型, , , 


赋值 (GetWinText, 取空白文本 (255))
赋值 (lLen, API_发送消息 (WinHwnd, 13, 取文本长度 (GetWinText), GetWinText)) ' #WM_GETTEXT=13

赋值 (GetWinText, 取文本左边 (GetWinText, lLen))
返回 (GetWinText)

.子程序 强制QQ对话, 空白型, , 
.参数 QQ号码, 文本型, , 
.参数 发送内容, 文本型, , 

.局部变量 i, 空白型, , , 
.局部变量 chd, 整数型, , , 
.局部变量 hd, 整数型, , , 
.局部变量 sendHwnd, 空白型, , , 
.局部变量 quitHwnd, 空白型, , , 
.局部变量 RichEditA, 空白型, , , RichEdit20A
.局部变量 RichEditB, 空白型, , , 
.局部变量 jieguo, 空白型, , , 
.局部变量 会话框标题, 文本型, , , 
.局部变量 QQ对话, QQ对话窗, , , 
.局部变量 QQ身份验证, 整数型, , , 有些QQ设置了身份验证，必须将其关闭


运行 (相加 (QQ安装路径, “timwp.exe Tencent://Message/?Menu=YES&Exe=&Uin=”, QQ号码), 真, )

赋值 (hd, API_寻找子窗口 (0, hd, “#32770”, 0))
.判断循环首 (不等于 (hd, 0))
    
    赋值 (会话框标题, 取QQ窗口文本 (hd))
    赋值 (chd, API_寻找子窗口 (hd, 0, “#32770”, 0))
    赋值 (sendHwnd, API_寻找子窗口A (chd, 0, “Button”, “发送(&S)”))
    赋值 (quitHwnd, API_寻找子窗口A (chd, 0, “Button”, “关闭(&C)”))
    赋值 (RichEditA, API_寻找子窗口 (chd, 0, “RichEdit20A”, 0))
    
    .如果 (并且 (不等于 (chd, 0), 不等于 (sendHwnd, 0), 不等于 (quitHwnd, 0), 不等于 (RichEditA, 0)))
        赋值 (QQ对话.窗口句柄, hd)
        赋值 (QQ对话.窗口标题, 会话框标题)
        赋值 (QQ对话.发送按钮句柄, sendHwnd)
        赋值 (QQ对话.退出按钮句柄, quitHwnd)
        跳出循环 ()
    .否则
        
        赋值 (hd, API_寻找子窗口 (0, hd, “#32770”, 0))
    .如果结束
    
.判断循环尾 ()

赋值 (QQ对话.是否自动发送, 真)


赋值 (hd, API_寻找子窗口 (hd, 0, “#32770”, 0))
赋值 (chd, API_寻找子窗口 (hd, 0, “AfxWnd42”, 0))
 ' 输出调试文本 (chd)
 ' 暂停 ()
.判断循环首 (不等于 (chd, 0))
    赋值 (jieguo, API_寻找子窗口 (chd, 0, “RichEdit20A”, 0))
    
    .如果 (不等于 (jieguo, 0))
        跳出循环 ()
    .否则
        赋值 (chd, API_寻找子窗口 (hd, chd, “AfxWnd42”, 0))
    .如果结束
    
.判断循环尾 ()
赋值 (RichEditB, jieguo)


 ' API_发送消息 (RichEditA, #WM_SETTEXT, 0, “能收到我的信息吗，我在测试QQ自动发信息aa”)
 ' API_发送消息 (RichEditB, #WM_SETTEXT, 0, “aaaaaaaaaaaaaaaaaa”)
 ' 因为丰富文本框是自己的文本格式,不接收纯文本,也有可能发送文本消息被拦截

API_发送消息 (RichEditB, 177, 0, “-1”)
API_发送消息 (RichEditB, 194, 1, 发送内容)
API_发送消息 (sendHwnd, 245, 0, “0”)

延时 (1000)
赋值 (QQ身份验证, API_寻找顶级窗口A (0, “QQ身份验证”)) ' QQ身份验证
.如果真 (不等于 (QQ身份验证, 0))
    API_发送消息A (QQ身份验证, 16, 0, 0) ' #WM_CLOSE
    输出调试文本 (相加 (“QQ身份验证”, 到文本 (QQ身份验证)))
.如果真结束

API_发送消息 (quitHwnd, 245, 0, “0”)



.子程序 QQ群发, 逻辑型, , 
.参数 起始QQ号, 文本型, , 
.参数 终止QQ号, 文本型, , 

.局部变量 当前QQ, 整数型, , , 

.如果真 (或者 (等于 (到数值 (起始QQ号), 0), 等于 (到数值 (终止QQ号), 0)))
    信息框 (“设置的起始终止QQ号有误”, 相加 (#信息图标, 0), )
    返回 (假)
.如果真结束
.如果真 (大于 (到数值 (起始QQ号), 到数值 (终止QQ号)))
    信息框 (“设置的起始QQ号不能大于终止QQ号”, 相加 (#信息图标, 0), )
    返回 (假)
    
.如果真结束
.如果真 (或者 (小于 (到数值 (起始QQ号), 20000), 大于 (到数值 (终止QQ号), 999999999)))
    信息框 (“设置的起始QQ号不能小于20000，终止QQ号不能大于99999999”, 相加 (#信息图标, 0), )
    返回 (假)
.如果真结束

赋值 (是否终止, 假)
赋值 (.标题, “停止群发”)
赋值 (.禁止, 真)
.变量循环首 (到数值 (起始QQ号), 到数值 (终止QQ号), 1, 当前QQ)
    
    处理事件 ()
    .如果真 (等于 (是否终止, 真))
        跳出循环 ()
    .如果真结束
    
    强制QQ对话 (到文本 (当前QQ), .内容)
    
.变量循环尾 ()
返回 (真)

.子程序 _按钮2_被单击, 空白型, , 
.局部变量 i, 空白型, , , 

.如果真 (等于 (删首尾空 (.内容), “”))
    信息框 (“发送的内容不能为空。”, 相加 (#信息图标, 0), “温馨提示”)
    返回 ()
.如果真结束

.判断开始 (.选中)
    .判断开始 (等于 (.标题, “开始发送”))
        .如果真 (QQ群发 (.内容, .内容))
            赋值 (.标题, “开始发送”)
            赋值 (是否终止, 真)
            赋值 (.禁止, 假)
        .如果真结束
        
    .判断 (等于 (.标题, “停止群发”))
        赋值 (.标题, “开始发送”)
        赋值 (是否终止, 真)
        赋值 (.禁止, 假)
    .默认
        
    .判断结束
    
.默认
    
    .判断开始 (等于 (.标题, “开始发送”))
        .如果真 (获取QQ群成员列表 (.内容))
            .计次循环首 (相减 (., 1), i)
                处理事件 ()
                .如果真 (等于 (是否终止, 真))
                    跳出循环 ()
                .如果真结束
                强制QQ对话 (i.未知支持库函数_10 (0), .内容)
            .计次循环尾 ()
            赋值 (.标题, “开始发送”)
            赋值 (是否终止, 真)
            赋值 (.禁止, 假)
        .如果真结束
        
    .判断 (等于 (.标题, “停止群发”))
        赋值 (.标题, “开始发送”)
        赋值 (是否终止, 真)
        赋值 (.禁止, 假)
    .默认
        
    .判断结束
    
.判断结束




.子程序 _按钮1_被单击, 空白型, , 
结束 ()



.子程序 获取QQ群成员列表, 逻辑型, , 
.参数 群号, 文本型, , 

.局部变量 网页文本, 文本型, , , 
.局部变量 标识一, 文本型, , , 
.局部变量 标识二, 文本型, , , 
.局部变量 标识三, 文本型, , , 
.局部变量 标识四, 文本型, , , 
.局部变量 QQ号, 文本型, , , 
.局部变量 昵称, 文本型, , , 
.局部变量 位置一, 空白型, , , 
.局部变量 位置二, 空白型, , , 
.局部变量 行, 空白型, , , 

.如果真 (等于 (到数值 (群号), 0))
    信息框 (“输入的群号有误，请检查。”, 相加 (#信息图标, 0), “提示”)
    返回 (假)
.如果真结束
赋值 (是否终止, 假)
赋值 (.标题, “停止群发”)
赋值 (.禁止, 真)

处理事件 ()
赋值 (网页文本, 到文本 (未知支持库函数_7 (相加 (“http://group.qq.com/cgi-bin/groupuserall?groupid=”, 群号))))
.如果真 (大于 (寻找文本 (网页文本, “很抱歉,您不是群内成员或者您还没有登陆.本页面只有群内成员可以访问”, , 假), -1))
    信息框 (“很抱歉,您不是群内成员或者您还没有登陆.本页面只有群内成员可以访问。”, 相加 (#信息图标, 0), “提示”)
    返回 (假)
.如果真结束
赋值 (网页文本, 子文本替换 (网页文本, “&nbsp;”, “”, , , 真))

赋值 (标识一, 相加 (“class=”, #引号, “graynl”, #引号, “ target=”, #引号, “_blank”, #引号, “>”))
赋值 (标识二, “</a></TD><td><a href”)

赋值 (标识三, “<script>showuserinfo.SetUserInfoEvent(”)
赋值 (标识四, “,”)

赋值 (位置二, 寻找文本 (网页文本, 标识二, 位置二, 假))
赋值 (位置一, 倒找文本 (网页文本, 标识一, 位置二, 假))

赋值 (., 1)

.判断循环首 (并且 (不等于 (位置一, -1), 不等于 (位置二, -1)))
    处理事件 ()
    
    赋值 (昵称, 取文本中间 (网页文本, 相加 (位置一, 取文本长度 (标识一)), 相减 (位置二, 相加 (位置一, 取文本长度 (标识一)))))
    赋值 (位置一, 寻找文本 (网页文本, 标识三, 位置二, 假))
    赋值 (位置二, 寻找文本 (网页文本, 标识四, 位置一, 假))
    
    赋值 (QQ号, 取文本中间 (网页文本, 相加 (位置一, 取文本长度 (标识三)), 相减 (位置二, 相加 (位置一, 取文本长度 (标识三)))))
    
    赋值 (位置二, 寻找文本 (网页文本, 标识二, 位置二, 假))
    赋值 (位置一, 倒找文本 (网页文本, 标识一, 位置二, 假))
    
    输出调试文本 (相加 (QQ号, “    ”, 昵称))
    .未知支持库函数_38 ()
    
    赋值 (行, 相减 (., 1))
    行.未知支持库函数_9 (0, 1, QQ号)
    行.未知支持库函数_9 (1, 1, 昵称)
    .如果真 (等于 (是否终止, 真))
        跳出循环 ()
    .如果真结束
    
.判断循环尾 ()
0.未知支持库函数_53 (0, 相减 (., 1), 相减 (., 1), 真)
返回 (真)




.子程序 高级表格初始化, 空白型, , 
.参数 高级表格参数, 未知类型0x30001, , 
.参数 列名, 文本型, 数组, 
.参数 列宽, 整数型, 数组, 
.参数 列类型, 整数型, 可空 数组, 
.参数 是否斑马线, 逻辑型, 可空, 

.局部变量 列数, 整数型, , , 
.局部变量 计次, 整数型, , , 

赋值 (列数, 取数组成员数 (列名))

赋值 (高级表格参数., 1)
赋值 (高级表格参数., 列数)
赋值 (高级表格参数., 20)
赋值 (高级表格参数., #灰绿)

.计次循环首 (列数, 计次)
    高级表格参数.未知支持库函数_9 (0, 相减 (计次, 1), 1, 列名 [计次])
    高级表格参数.未知支持库函数_32 (相减 (计次, 1), 列宽 [计次])
    
    .如果真 (取反 (是否为空 (列类型)))
        高级表格参数.未知支持库函数_30 (相减 (计次, 1), 列类型 [计次])
    .如果真结束
    
.计次循环尾 ()
高级表格参数.未知支持库函数_22 (0, 0, 0, 相减 (高级表格参数., 1), #蓝色)
高级表格参数.未知支持库函数_25 (0, 0, 相减 (高级表格参数., 1), 相减 (高级表格参数., 1), #)

.如果真 (取反 (是否为空 (是否斑马线)))
    高级表格参数.未知支持库函数_14 (#, #白色, #银白)
.如果真结束



 ' 不属于任何一个程序集、类模块的函数：
