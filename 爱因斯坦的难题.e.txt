 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 664
    高度 = 474
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = 0 '  0x0
    最大化按钮 = 假
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “爱因斯坦的难题　　　　　程序制作：郝齐峰”
    帮助文件名 = “”



.图片 图0, " ' 已保存到：D:\易语言学习\Data\爱因斯坦的难题.e\图0", , 
.图片 图1, " ' 已保存到：D:\易语言学习\Data\爱因斯坦的难题.e\图1", , 
.图片 图2, " ' 已保存到：D:\易语言学习\Data\爱因斯坦的难题.e\图2", , 
.图片 图3, " ' 已保存到：D:\易语言学习\Data\爱因斯坦的难题.e\图3", , 
.图片 图4, " ' 已保存到：D:\易语言学习\Data\爱因斯坦的难题.e\图4", , 
.图片 图5, " ' 已保存到：D:\易语言学习\Data\爱因斯坦的难题.e\图5", , 
.图片 房子, " ' 已保存到：D:\易语言学习\Data\爱因斯坦的难题.e\房子", , 
.图片 白房子, " ' 已保存到：D:\易语言学习\Data\爱因斯坦的难题.e\白房子", , 
.图片 绿房子, " ' 已保存到：D:\易语言学习\Data\爱因斯坦的难题.e\绿房子", , 
.图片 蓝房子, " ' 已保存到：D:\易语言学习\Data\爱因斯坦的难题.e\蓝房子", , 
.图片 黄房子, " ' 已保存到：D:\易语言学习\Data\爱因斯坦的难题.e\黄房子", , 
.图片 红房子, " ' 已保存到：D:\易语言学习\Data\爱因斯坦的难题.e\红房子", , 
.图片 国籍, " ' 已保存到：D:\易语言学习\Data\爱因斯坦的难题.e\国籍", , 
.图片 丹麦人, " ' 已保存到：D:\易语言学习\Data\爱因斯坦的难题.e\丹麦人", , 
.图片 瑞典人, " ' 已保存到：D:\易语言学习\Data\爱因斯坦的难题.e\瑞典人", , 
.图片 挪威人, " ' 已保存到：D:\易语言学习\Data\爱因斯坦的难题.e\挪威人", , 
.图片 英国人, " ' 已保存到：D:\易语言学习\Data\爱因斯坦的难题.e\英国人", , 
.图片 德国人, " ' 已保存到：D:\易语言学习\Data\爱因斯坦的难题.e\德国人", , 
.图片 饮料, " ' 已保存到：D:\易语言学习\Data\爱因斯坦的难题.e\饮料", , 
.图片 牛奶, " ' 已保存到：D:\易语言学习\Data\爱因斯坦的难题.e\牛奶", , 
.图片 茶, " ' 已保存到：D:\易语言学习\Data\爱因斯坦的难题.e\茶", , 
.图片 啤酒, " ' 已保存到：D:\易语言学习\Data\爱因斯坦的难题.e\啤酒", , 
.图片 水, " ' 已保存到：D:\易语言学习\Data\爱因斯坦的难题.e\水", , 
.图片 咖啡, " ' 已保存到：D:\易语言学习\Data\爱因斯坦的难题.e\咖啡", , 
.图片 香烟, " ' 已保存到：D:\易语言学习\Data\爱因斯坦的难题.e\香烟", , 
.图片 Dunhill, " ' 已保存到：D:\易语言学习\Data\爱因斯坦的难题.e\Dunhill", , 
.图片 Blends, " ' 已保存到：D:\易语言学习\Data\爱因斯坦的难题.e\Blends", , 
.图片 Prince, " ' 已保存到：D:\易语言学习\Data\爱因斯坦的难题.e\Prince", , 
.图片 Blue, " ' 已保存到：D:\易语言学习\Data\爱因斯坦的难题.e\Blue", , 
.图片 Pall, " ' 已保存到：D:\易语言学习\Data\爱因斯坦的难题.e\Pall", , 
.图片 宠物, " ' 已保存到：D:\易语言学习\Data\爱因斯坦的难题.e\宠物", , 
.图片 鸟, " ' 已保存到：D:\易语言学习\Data\爱因斯坦的难题.e\鸟", , 
.图片 马, " ' 已保存到：D:\易语言学习\Data\爱因斯坦的难题.e\马", , 
.图片 狗, " ' 已保存到：D:\易语言学习\Data\爱因斯坦的难题.e\狗", , 
.图片 猫, " ' 已保存到：D:\易语言学习\Data\爱因斯坦的难题.e\猫", , 
.图片 鱼, " ' 已保存到：D:\易语言学习\Data\爱因斯坦的难题.e\鱼", , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 4 系统核心支持库





.窗口程序集 窗口程序集1, , , 

.程序集变量 房子, 文本型, , "5", 
.程序集变量 国籍, 文本型, , "5", 
.程序集变量 饮料, 文本型, , "5", 
.程序集变量 香烟, 文本型, , "5", 
.程序集变量 宠物, 文本型, , "5", 
.程序集变量 L房子, 文本型, , "5", 
.程序集变量 L国籍, 文本型, , "5", 
.程序集变量 L饮料, 文本型, , "5", 
.程序集变量 L香烟, 文本型, , "5", 
.程序集变量 L宠物, 文本型, , "5", 
.程序集变量 白房子位置, 整数型, , , 
.程序集变量 绿房子位置, 整数型, , , 
.程序集变量 蓝房子位置, 整数型, , , 
.程序集变量 黄房子位置, 整数型, , , 
.程序集变量 红房子位置, 整数型, , , 
.程序集变量 丹麦人位置, 整数型, , , 
.程序集变量 瑞典人位置, 整数型, , , 
.程序集变量 挪威人位置, 整数型, , , 
.程序集变量 英国人位置, 整数型, , , 
.程序集变量 德国人位置, 整数型, , , 
.程序集变量 牛奶位置, 整数型, , , 
.程序集变量 茶位置, 整数型, , , 
.程序集变量 啤酒位置, 整数型, , , 
.程序集变量 水位置, 整数型, , , 
.程序集变量 咖啡位置, 整数型, , , 
.程序集变量 Dunhill位置, 整数型, , , 
.程序集变量 Blends位置, 整数型, , , 
.程序集变量 Prince位置, 整数型, , , 
.程序集变量 Blue位置, 整数型, , , 
.程序集变量 Pall位置, 整数型, , , 
.程序集变量 鸟位置, 整数型, , , 
.程序集变量 马位置, 整数型, , , 
.程序集变量 狗位置, 整数型, , , 
.程序集变量 猫位置, 整数型, , , 
.程序集变量 鱼位置, 整数型, , , 
.程序集变量 条件符合, 逻辑型, , , 
.子程序 __启动窗口_创建完毕, 空白型, , 
.局部变量 变量1, 整数型, , , 
.局部变量 变量2, 整数型, , , 
.局部变量 变量3, 整数型, , , 
.局部变量 变量4, 整数型, , , 
.局部变量 变量5, 整数型, , , 
.局部变量 变量0, 整数型, , , 

赋值 (房子, { “白房子”, “绿房子”, “蓝房子”, “黄房子”, “红房子” })
赋值 (国籍, { “丹麦人”, “瑞典人”, “挪威人”, “英国人”, “德国人” })
赋值 (饮料, { “牛奶”, “茶”, “啤酒”, “水”, “咖啡” })
赋值 (香烟, { “Dunhill”, “Blends”, “Prince”, “Blue”, “Pall” })
赋值 (宠物, { “鸟”, “马”, “狗”, “猫”, “鱼” })
打开 (“SJK”, , , , , , )
赋值 (., #图0)
赋值 (., #图1)
赋值 (., #图2)
赋值 (., #图3)
赋值 (., #图4)
赋值 (., #图5)
赋值 (., #房子)
赋值 (., #白房子)
赋值 (., #绿房子)
赋值 (., #蓝房子)
赋值 (., #黄房子)
赋值 (., #红房子)
赋值 (., #国籍)
赋值 (., #丹麦人)
赋值 (., #瑞典人)
赋值 (., #挪威人)
赋值 (., #英国人)
赋值 (., #德国人)
赋值 (., #饮料)
赋值 (., #牛奶)
赋值 (., #茶)
赋值 (., #啤酒)
赋值 (., #水)
赋值 (., #咖啡)
赋值 (., #香烟)
赋值 (., #Dunhill)
赋值 (., #Blends)
赋值 (., #Prince)
赋值 (., #Blue)
赋值 (., #Pall)
赋值 (., #宠物)
赋值 (., #鸟)
赋值 (., #马)
赋值 (., #狗)
赋值 (., #猫)
赋值 (., #鱼)
清空 ()
 ' 以下是把5种颜色的房子排列，共有120种情况
.计次循环首 (5, 变量1)
    赋值 (L房子 [1], 房子 [变量1])
    .计次循环首 (5, 变量2)
        赋值 (L房子 [2], 房子 [变量2])
        .计次循环首 (5, 变量3)
            赋值 (L房子 [3], 房子 [变量3])
            .计次循环首 (5, 变量4)
                赋值 (L房子 [4], 房子 [变量4])
                .计次循环首 (5, 变量5)
                    赋值 (L房子 [5], 房子 [变量5])
                    .如果真 (并且 (不等于 (L房子 [1], L房子 [2]), 不等于 (L房子 [1], L房子 [3]), 不等于 (L房子 [1], L房子 [4]), 不等于 (L房子 [1], L房子 [5]), 不等于 (L房子 [2], L房子 [3]), 不等于 (L房子 [2], L房子 [4]), 不等于 (L房子 [2], L房子 [5]), 不等于 (L房子 [3], L房子 [4]), 不等于 (L房子 [3], L房子 [5]), 不等于 (L房子 [4], L房子 [5])))
                        加记录 (L房子 [1], L房子 [2], L房子 [3], L房子 [4], L房子 [5])
                    .如果真结束
                    
                .计次循环尾 ()
            .计次循环尾 ()
        .计次循环尾 ()
    .计次循环尾 ()
.计次循环尾 ()
 ' 以下是把5个国籍排列，共有120种情况
赋值 (变量0, 0)
.计次循环首 (5, 变量1)
    赋值 (L国籍 [1], 国籍 [变量1])
    .计次循环首 (5, 变量2)
        赋值 (L国籍 [2], 国籍 [变量2])
        .计次循环首 (5, 变量3)
            赋值 (L国籍 [3], 国籍 [变量3])
            .计次循环首 (5, 变量4)
                赋值 (L国籍 [4], 国籍 [变量4])
                .计次循环首 (5, 变量5)
                    赋值 (L国籍 [5], 国籍 [变量5])
                    .如果真 (并且 (不等于 (L国籍 [1], L国籍 [2]), 不等于 (L国籍 [1], L国籍 [3]), 不等于 (L国籍 [1], L国籍 [4]), 不等于 (L国籍 [1], L国籍 [5]), 不等于 (L国籍 [2], L国籍 [3]), 不等于 (L国籍 [2], L国籍 [4]), 不等于 (L国籍 [2], L国籍 [5]), 不等于 (L国籍 [3], L国籍 [4]), 不等于 (L国籍 [3], L国籍 [5]), 不等于 (L国籍 [4], L国籍 [5])))
                        .如果真 (等于 (L国籍 [1], “挪威人”))
                            赋值 (相加 (1))
                            跳到 ()
                            修改 ( [1],  [2],  [3],  [4],  [5])
                        .如果真结束
                        
                    .如果真结束
                    
                .计次循环尾 ()
            .计次循环尾 ()
        .计次循环尾 ()
    .计次循环尾 ()
.计次循环尾 ()
 ' 以下是把5种饮料排列，共有120种情况
赋值 (变量0, 0)
.计次循环首 (5, 变量1)
    赋值 (L饮料 [1], 饮料 [变量1])
    .计次循环首 (5, 变量2)
        赋值 (L饮料 [2], 饮料 [变量2])
        .计次循环首 (5, 变量3)
            赋值 (L饮料 [3], 饮料 [变量3])
            .计次循环首 (5, 变量4)
                赋值 (L饮料 [4], 饮料 [变量4])
                .计次循环首 (5, 变量5)
                    赋值 (L饮料 [5], 饮料 [变量5])
                    .如果真 (并且 (不等于 (L饮料 [1], L饮料 [2]), 不等于 (L饮料 [1], L饮料 [3]), 不等于 (L饮料 [1], L饮料 [4]), 不等于 (L饮料 [1], L饮料 [5]), 不等于 (L饮料 [2], L饮料 [3]), 不等于 (L饮料 [2], L饮料 [4]), 不等于 (L饮料 [2], L饮料 [5]), 不等于 (L饮料 [3], L饮料 [4]), 不等于 (L饮料 [3], L饮料 [5]), 不等于 (L饮料 [4], L饮料 [5])))
                        .如果真 (等于 (L饮料 [3], “牛奶”))
                            赋值 (相加 (1))
                            跳到 ()
                            修改 ( [1],  [2],  [3],  [4],  [5])
                        .如果真结束
                        
                    .如果真结束
                    
                .计次循环尾 ()
            .计次循环尾 ()
        .计次循环尾 ()
    .计次循环尾 ()
.计次循环尾 ()
 ' 以下是把5种香烟排列，共有120种情况
赋值 (变量0, 0)
.计次循环首 (5, 变量1)
    赋值 (L香烟 [1], 香烟 [变量1])
    .计次循环首 (5, 变量2)
        赋值 (L香烟 [2], 香烟 [变量2])
        .计次循环首 (5, 变量3)
            赋值 (L香烟 [3], 香烟 [变量3])
            .计次循环首 (5, 变量4)
                赋值 (L香烟 [4], 香烟 [变量4])
                .计次循环首 (5, 变量5)
                    赋值 (L香烟 [5], 香烟 [变量5])
                    .如果真 (并且 (不等于 (L香烟 [1], L香烟 [2]), 不等于 (L香烟 [1], L香烟 [3]), 不等于 (L香烟 [1], L香烟 [4]), 不等于 (L香烟 [1], L香烟 [5]), 不等于 (L香烟 [2], L香烟 [3]), 不等于 (L香烟 [2], L香烟 [4]), 不等于 (L香烟 [2], L香烟 [5]), 不等于 (L香烟 [3], L香烟 [4]), 不等于 (L香烟 [3], L香烟 [5]), 不等于 (L香烟 [4], L香烟 [5])))
                        赋值 (变量0, 相加 (变量0, 1))
                        跳到 (变量0)
                        修改 (L香烟 [1], L香烟 [2], L香烟 [3], L香烟 [4], L香烟 [5])
                    .如果真结束
                    
                .计次循环尾 ()
            .计次循环尾 ()
        .计次循环尾 ()
    .计次循环尾 ()
.计次循环尾 ()
 ' 以下是把5种宠物排列，共有120种情况
赋值 (变量0, 0)
.计次循环首 (5, 变量1)
    赋值 (L宠物 [1], 宠物 [变量1])
    .计次循环首 (5, 变量2)
        赋值 (L宠物 [2], 宠物 [变量2])
        .计次循环首 (5, 变量3)
            赋值 (L宠物 [3], 宠物 [变量3])
            .计次循环首 (5, 变量4)
                赋值 (L宠物 [4], 宠物 [变量4])
                .计次循环首 (5, 变量5)
                    赋值 (L宠物 [5], 宠物 [变量5])
                    .如果真 (并且 (不等于 (L宠物 [1], L宠物 [2]), 不等于 (L宠物 [1], L宠物 [3]), 不等于 (L宠物 [1], L宠物 [4]), 不等于 (L宠物 [1], L宠物 [5]), 不等于 (L宠物 [2], L宠物 [3]), 不等于 (L宠物 [2], L宠物 [4]), 不等于 (L宠物 [2], L宠物 [5]), 不等于 (L宠物 [3], L宠物 [4]), 不等于 (L宠物 [3], L宠物 [5]), 不等于 (L宠物 [4], L宠物 [5])))
                        赋值 (变量0, 相加 (变量0, 1))
                        跳到 (变量0)
                        修改 (L宠物 [1], L宠物 [2], L宠物 [3], L宠物 [4], L宠物 [5])
                    .如果真结束
                    
                .计次循环尾 ()
            .计次循环尾 ()
        .计次循环尾 ()
    .计次循环尾 ()
.计次循环尾 ()


.子程序 _开始运算_被单击, 空白型, , 
.局部变量 变量1, 整数型, , , 
.局部变量 变量2, 整数型, , , 
.局部变量 变量3, 整数型, , , 
.局部变量 变量4, 整数型, , , 
.局部变量 变量5, 整数型, , , 

赋值 (., 1000)
处理事件 ()
.计次循环首 (120, 变量1)
    处理事件 ()
    跳到 (变量1)
    房子位置 ()
    .如果真 (等于 (相减 (白房子位置, 绿房子位置), 1))
        .计次循环首 (120, )
            处理事件 ()
            跳到 ()
            国籍位置 ()
            .如果真 (并且 (等于 (英国人位置, 红房子位置), 等于 (取绝对值 (相减 (挪威人位置, 蓝房子位置)), 1)))
                .计次循环首 (120, )
                    处理事件 ()
                    跳到 ()
                    饮料位置 ()
                    .如果真 (并且 (等于 (丹麦人位置, 茶位置), 等于 (绿房子位置, 咖啡位置)))
                        .计次循环首 (120, )
                            处理事件 ()
                            跳到 ()
                            香烟位置 ()
                            .如果真 (并且 (等于 (黄房子位置, Dunhill位置), 等于 (Blue位置, 啤酒位置), 等于 (德国人位置, Prince位置), 等于 (取绝对值 (相减 (Blends位置, 水位置)), 1)))
                                .计次循环首 (120, )
                                    处理事件 ()
                                    跳到 ()
                                    宠物位置 ()
                                    .如果 (并且 (等于 (瑞典人位置, 狗位置), 等于 (Pall位置, 鸟位置), 等于 (取绝对值 (相减 (Blends位置, 猫位置)), 1), 等于 (取绝对值 (相减 (马位置, Dunhill位置)), 1)))
                                        赋值 (., 0)
                                        赋值 (条件符合, 真)
                                        跳出循环 ()
                                    .否则
                                        赋值 (条件符合, 假)
                                    .如果结束
                                    
                                .计次循环尾 ()
                                
                            .如果真结束
                            .如果真 (等于 (条件符合, 真))
                                跳出循环 ()
                            .如果真结束
                            
                        .计次循环尾 ()
                        
                    .如果真结束
                    .如果真 (等于 (真))
                        跳出循环 ()
                    .如果真结束
                    
                .计次循环尾 ()
                
            .如果真结束
            .如果真 (等于 (真))
                跳出循环 ()
            .如果真结束
            
        .计次循环尾 ()
        
    .如果真结束
    .如果真 (等于 (真))
        跳出循环 ()
    .如果真结束
    
.计次循环尾 ()


.子程序 房子位置, 空白型, ,  给各种房子赋值，并对应显示
.如果真 (等于 (读 (“房子1”), “白房子”))
    赋值 (白房子位置, 1)
    赋值 (., #白房子)
.如果真结束
.如果真 (等于 (读 (“房子1”), “绿房子”))
    赋值 (绿房子位置, 1)
    赋值 (., #绿房子)
.如果真结束
.如果真 (等于 (读 (“房子1”), “蓝房子”))
    赋值 (蓝房子位置, 1)
    赋值 (., #蓝房子)
.如果真结束
.如果真 (等于 (读 (“房子1”), “黄房子”))
    赋值 (黄房子位置, 1)
    赋值 (., #黄房子)
.如果真结束
.如果真 (等于 (读 (“房子1”), “红房子”))
    赋值 (红房子位置, 1)
    赋值 (., #红房子)
.如果真结束
.如果真 (等于 (读 (“房子2”), “白房子”))
    赋值 (白房子位置, 2)
    赋值 (., #白房子)
.如果真结束
.如果真 (等于 (读 (“房子2”), “绿房子”))
    赋值 (绿房子位置, 2)
    赋值 (., #绿房子)
.如果真结束
.如果真 (等于 (读 (“房子2”), “蓝房子”))
    赋值 (蓝房子位置, 2)
    赋值 (., #蓝房子)
.如果真结束
.如果真 (等于 (读 (“房子2”), “黄房子”))
    赋值 (黄房子位置, 2)
    赋值 (., #黄房子)
.如果真结束
.如果真 (等于 (读 (“房子2”), “红房子”))
    赋值 (红房子位置, 2)
    赋值 (., #红房子)
.如果真结束
.如果真 (等于 (读 (“房子3”), “白房子”))
    赋值 (白房子位置, 3)
    赋值 (., #白房子)
.如果真结束
.如果真 (等于 (读 (“房子3”), “绿房子”))
    赋值 (绿房子位置, 3)
    赋值 (., #绿房子)
.如果真结束
.如果真 (等于 (读 (“房子3”), “蓝房子”))
    赋值 (蓝房子位置, 3)
    赋值 (., #蓝房子)
.如果真结束
.如果真 (等于 (读 (“房子3”), “黄房子”))
    赋值 (黄房子位置, 3)
    赋值 (., #黄房子)
.如果真结束
.如果真 (等于 (读 (“房子3”), “红房子”))
    赋值 (红房子位置, 3)
    赋值 (., #红房子)
.如果真结束
.如果真 (等于 (读 (“房子4”), “白房子”))
    赋值 (白房子位置, 4)
    赋值 (., #白房子)
.如果真结束
.如果真 (等于 (读 (“房子4”), “绿房子”))
    赋值 (绿房子位置, 4)
    赋值 (., #绿房子)
.如果真结束
.如果真 (等于 (读 (“房子4”), “蓝房子”))
    赋值 (蓝房子位置, 4)
    赋值 (., #蓝房子)
.如果真结束
.如果真 (等于 (读 (“房子4”), “黄房子”))
    赋值 (黄房子位置, 4)
    赋值 (., #黄房子)
.如果真结束
.如果真 (等于 (读 (“房子4”), “红房子”))
    赋值 (红房子位置, 4)
    赋值 (., #红房子)
.如果真结束
.如果真 (等于 (读 (“房子5”), “白房子”))
    赋值 (白房子位置, 5)
    赋值 (., #白房子)
.如果真结束
.如果真 (等于 (读 (“房子5”), “绿房子”))
    赋值 (绿房子位置, 5)
    赋值 (., #绿房子)
.如果真结束
.如果真 (等于 (读 (“房子5”), “蓝房子”))
    赋值 (蓝房子位置, 5)
    赋值 (., #蓝房子)
.如果真结束
.如果真 (等于 (读 (“房子5”), “黄房子”))
    赋值 (黄房子位置, 5)
    赋值 (., #黄房子)
.如果真结束
.如果真 (等于 (读 (“房子5”), “红房子”))
    赋值 (红房子位置, 5)
    赋值 (., #红房子)
.如果真结束


.子程序 国籍位置, 空白型, ,  给各个国籍赋值，并对应显示
.如果真 (等于 (读 (“国籍1”), “丹麦人”))
    赋值 (丹麦人位置, 1)
    赋值 (., #丹麦人)
.如果真结束
.如果真 (等于 (读 (“国籍1”), “瑞典人”))
    赋值 (瑞典人位置, 1)
    赋值 (., #瑞典人)
.如果真结束
.如果真 (等于 (读 (“国籍1”), “挪威人”))
    赋值 (挪威人位置, 1)
    赋值 (., #挪威人)
.如果真结束
.如果真 (等于 (读 (“国籍1”), “英国人”))
    赋值 (英国人位置, 1)
    赋值 (., #英国人)
.如果真结束
.如果真 (等于 (读 (“国籍1”), “德国人”))
    赋值 (德国人位置, 1)
    赋值 (., #德国人)
.如果真结束
.如果真 (等于 (读 (“国籍2”), “丹麦人”))
    赋值 (丹麦人位置, 2)
    赋值 (., #丹麦人)
.如果真结束
.如果真 (等于 (读 (“国籍2”), “瑞典人”))
    赋值 (瑞典人位置, 2)
    赋值 (., #瑞典人)
.如果真结束
.如果真 (等于 (读 (“国籍2”), “挪威人”))
    赋值 (挪威人位置, 2)
    赋值 (., #挪威人)
.如果真结束
.如果真 (等于 (读 (“国籍2”), “英国人”))
    赋值 (英国人位置, 2)
    赋值 (., #英国人)
.如果真结束
.如果真 (等于 (读 (“国籍2”), “德国人”))
    赋值 (德国人位置, 2)
    赋值 (., #德国人)
.如果真结束
.如果真 (等于 (读 (“国籍3”), “丹麦人”))
    赋值 (丹麦人位置, 3)
    赋值 (., #丹麦人)
.如果真结束
.如果真 (等于 (读 (“国籍3”), “瑞典人”))
    赋值 (瑞典人位置, 3)
    赋值 (., #瑞典人)
.如果真结束
.如果真 (等于 (读 (“国籍3”), “挪威人”))
    赋值 (挪威人位置, 3)
    赋值 (., #挪威人)
.如果真结束
.如果真 (等于 (读 (“国籍3”), “英国人”))
    赋值 (英国人位置, 3)
    赋值 (., #英国人)
.如果真结束
.如果真 (等于 (读 (“国籍3”), “德国人”))
    赋值 (德国人位置, 3)
    赋值 (., #德国人)
.如果真结束
.如果真 (等于 (读 (“国籍4”), “丹麦人”))
    赋值 (丹麦人位置, 4)
    赋值 (., #丹麦人)
.如果真结束
.如果真 (等于 (读 (“国籍4”), “瑞典人”))
    赋值 (瑞典人位置, 4)
    赋值 (., #瑞典人)
.如果真结束
.如果真 (等于 (读 (“国籍4”), “挪威人”))
    赋值 (挪威人位置, 4)
    赋值 (., #挪威人)
.如果真结束
.如果真 (等于 (读 (“国籍4”), “英国人”))
    赋值 (英国人位置, 4)
    赋值 (., #英国人)
.如果真结束
.如果真 (等于 (读 (“国籍4”), “德国人”))
    赋值 (德国人位置, 4)
    赋值 (., #德国人)
.如果真结束
.如果真 (等于 (读 (“国籍5”), “丹麦人”))
    赋值 (丹麦人位置, 5)
    赋值 (., #丹麦人)
.如果真结束
.如果真 (等于 (读 (“国籍5”), “瑞典人”))
    赋值 (瑞典人位置, 5)
    赋值 (., #瑞典人)
.如果真结束
.如果真 (等于 (读 (“国籍5”), “挪威人”))
    赋值 (挪威人位置, 5)
    赋值 (., #挪威人)
.如果真结束
.如果真 (等于 (读 (“国籍5”), “英国人”))
    赋值 (英国人位置, 5)
    赋值 (., #英国人)
.如果真结束
.如果真 (等于 (读 (“国籍5”), “德国人”))
    赋值 (德国人位置, 5)
    赋值 (., #德国人)
.如果真结束


.子程序 饮料位置, 空白型, ,  给各种饮料赋值，并对应显示
.如果真 (等于 (读 (“饮料1”), “牛奶”))
    赋值 (牛奶位置, 1)
    赋值 (., #牛奶)
.如果真结束
.如果真 (等于 (读 (“饮料1”), “茶”))
    赋值 (茶位置, 1)
    赋值 (., #茶)
.如果真结束
.如果真 (等于 (读 (“饮料1”), “啤酒”))
    赋值 (啤酒位置, 1)
    赋值 (., #啤酒)
.如果真结束
.如果真 (等于 (读 (“饮料1”), “水”))
    赋值 (水位置, 1)
    赋值 (., #水)
.如果真结束
.如果真 (等于 (读 (“饮料1”), “咖啡”))
    赋值 (咖啡位置, 1)
    赋值 (., #咖啡)
.如果真结束
.如果真 (等于 (读 (“饮料2”), “牛奶”))
    赋值 (牛奶位置, 2)
    赋值 (., #牛奶)
.如果真结束
.如果真 (等于 (读 (“饮料2”), “茶”))
    赋值 (茶位置, 2)
    赋值 (., #茶)
.如果真结束
.如果真 (等于 (读 (“饮料2”), “啤酒”))
    赋值 (啤酒位置, 2)
    赋值 (., #啤酒)
.如果真结束
.如果真 (等于 (读 (“饮料2”), “水”))
    赋值 (水位置, 2)
    赋值 (., #水)
.如果真结束
.如果真 (等于 (读 (“饮料2”), “咖啡”))
    赋值 (咖啡位置, 2)
    赋值 (., #咖啡)
.如果真结束
.如果真 (等于 (读 (“饮料3”), “牛奶”))
    赋值 (牛奶位置, 3)
    赋值 (., #牛奶)
.如果真结束
.如果真 (等于 (读 (“饮料3”), “茶”))
    赋值 (茶位置, 3)
    赋值 (., #茶)
.如果真结束
.如果真 (等于 (读 (“饮料3”), “啤酒”))
    赋值 (啤酒位置, 3)
    赋值 (., #啤酒)
.如果真结束
.如果真 (等于 (读 (“饮料3”), “水”))
    赋值 (水位置, 3)
    赋值 (., #水)
.如果真结束
.如果真 (等于 (读 (“饮料3”), “咖啡”))
    赋值 (咖啡位置, 3)
    赋值 (., #咖啡)
.如果真结束
.如果真 (等于 (读 (“饮料4”), “牛奶”))
    赋值 (牛奶位置, 4)
    赋值 (., #牛奶)
.如果真结束
.如果真 (等于 (读 (“饮料4”), “茶”))
    赋值 (茶位置, 4)
    赋值 (., #茶)
.如果真结束
.如果真 (等于 (读 (“饮料4”), “啤酒”))
    赋值 (啤酒位置, 4)
    赋值 (., #啤酒)
.如果真结束
.如果真 (等于 (读 (“饮料4”), “水”))
    赋值 (水位置, 4)
    赋值 (., #水)
.如果真结束
.如果真 (等于 (读 (“饮料4”), “咖啡”))
    赋值 (咖啡位置, 4)
    赋值 (., #咖啡)
.如果真结束
.如果真 (等于 (读 (“饮料5”), “牛奶”))
    赋值 (牛奶位置, 5)
    赋值 (., #牛奶)
.如果真结束
.如果真 (等于 (读 (“饮料5”), “茶”))
    赋值 (茶位置, 5)
    赋值 (., #茶)
.如果真结束
.如果真 (等于 (读 (“饮料5”), “啤酒”))
    赋值 (啤酒位置, 5)
    赋值 (., #啤酒)
.如果真结束
.如果真 (等于 (读 (“饮料5”), “水”))
    赋值 (水位置, 5)
    赋值 (., #水)
.如果真结束
.如果真 (等于 (读 (“饮料5”), “咖啡”))
    赋值 (咖啡位置, 5)
    赋值 (., #咖啡)
.如果真结束


.子程序 香烟位置, 空白型, ,  给各种香烟赋值，并对应显示
.如果真 (等于 (读 (“香烟1”), “Dunhill”))
    赋值 (Dunhill位置, 1)
    赋值 (., #Dunhill)
.如果真结束
.如果真 (等于 (读 (“香烟1”), “Blends”))
    赋值 (Blends位置, 1)
    赋值 (., #Blends)
.如果真结束
.如果真 (等于 (读 (“香烟1”), “Prince”))
    赋值 (Prince位置, 1)
    赋值 (., #Prince)
.如果真结束
.如果真 (等于 (读 (“香烟1”), “Blue”))
    赋值 (Blue位置, 1)
    赋值 (., #Blue)
.如果真结束
.如果真 (等于 (读 (“香烟1”), “Pall”))
    赋值 (Pall位置, 1)
    赋值 (., #Pall)
.如果真结束
.如果真 (等于 (读 (“香烟2”), “Dunhill”))
    赋值 (Dunhill位置, 2)
    赋值 (., #Dunhill)
.如果真结束
.如果真 (等于 (读 (“香烟2”), “Blends”))
    赋值 (Blends位置, 2)
    赋值 (., #Blends)
.如果真结束
.如果真 (等于 (读 (“香烟2”), “Prince”))
    赋值 (Prince位置, 2)
    赋值 (., #Prince)
.如果真结束
.如果真 (等于 (读 (“香烟2”), “Blue”))
    赋值 (Blue位置, 2)
    赋值 (., #Blue)
.如果真结束
.如果真 (等于 (读 (“香烟2”), “Pall”))
    赋值 (Pall位置, 2)
    赋值 (., #Pall)
.如果真结束
.如果真 (等于 (读 (“香烟3”), “Dunhill”))
    赋值 (Dunhill位置, 3)
    赋值 (., #Dunhill)
.如果真结束
.如果真 (等于 (读 (“香烟3”), “Blends”))
    赋值 (Blends位置, 3)
    赋值 (., #Blends)
.如果真结束
.如果真 (等于 (读 (“香烟3”), “Prince”))
    赋值 (Prince位置, 3)
    赋值 (., #Prince)
.如果真结束
.如果真 (等于 (读 (“香烟3”), “Blue”))
    赋值 (Blue位置, 3)
    赋值 (., #Blue)
.如果真结束
.如果真 (等于 (读 (“香烟3”), “Pall”))
    赋值 (Pall位置, 3)
    赋值 (., #Pall)
.如果真结束
.如果真 (等于 (读 (“香烟4”), “Dunhill”))
    赋值 (Dunhill位置, 4)
    赋值 (., #Dunhill)
.如果真结束
.如果真 (等于 (读 (“香烟4”), “Blends”))
    赋值 (Blends位置, 4)
    赋值 (., #Blends)
.如果真结束
.如果真 (等于 (读 (“香烟4”), “Prince”))
    赋值 (Prince位置, 4)
    赋值 (., #Prince)
.如果真结束
.如果真 (等于 (读 (“香烟4”), “Blue”))
    赋值 (Blue位置, 4)
    赋值 (., #Blue)
.如果真结束
.如果真 (等于 (读 (“香烟4”), “Pall”))
    赋值 (Pall位置, 4)
    赋值 (., #Pall)
.如果真结束
.如果真 (等于 (读 (“香烟5”), “Dunhill”))
    赋值 (Dunhill位置, 5)
    赋值 (., #Dunhill)
.如果真结束
.如果真 (等于 (读 (“香烟5”), “Blends”))
    赋值 (Blends位置, 5)
    赋值 (., #Blends)
.如果真结束
.如果真 (等于 (读 (“香烟5”), “Prince”))
    赋值 (Prince位置, 5)
    赋值 (., #Prince)
.如果真结束
.如果真 (等于 (读 (“香烟5”), “Blue”))
    赋值 (Blue位置, 5)
    赋值 (., #Blue)
.如果真结束
.如果真 (等于 (读 (“香烟5”), “Pall”))
    赋值 (Pall位置, 5)
    赋值 (., #Pall)
.如果真结束


.子程序 宠物位置, 空白型, ,  给各种宠物赋值，并对应显示
.如果真 (等于 (读 (“宠物1”), “鸟”))
    赋值 (鸟位置, 1)
    赋值 (., #鸟)
.如果真结束
.如果真 (等于 (读 (“宠物1”), “马”))
    赋值 (马位置, 1)
    赋值 (., #马)
.如果真结束
.如果真 (等于 (读 (“宠物1”), “狗”))
    赋值 (狗位置, 1)
    赋值 (., #狗)
.如果真结束
.如果真 (等于 (读 (“宠物1”), “猫”))
    赋值 (猫位置, 1)
    赋值 (., #猫)
.如果真结束
.如果真 (等于 (读 (“宠物1”), “鱼”))
    赋值 (鱼位置, 1)
    赋值 (., #鱼)
.如果真结束
.如果真 (等于 (读 (“宠物2”), “鸟”))
    赋值 (鸟位置, 2)
    赋值 (., #鸟)
.如果真结束
.如果真 (等于 (读 (“宠物2”), “马”))
    赋值 (马位置, 2)
    赋值 (., #马)
.如果真结束
.如果真 (等于 (读 (“宠物2”), “狗”))
    赋值 (狗位置, 2)
    赋值 (., #狗)
.如果真结束
.如果真 (等于 (读 (“宠物2”), “猫”))
    赋值 (猫位置, 2)
    赋值 (., #猫)
.如果真结束
.如果真 (等于 (读 (“宠物2”), “鱼”))
    赋值 (鱼位置, 2)
    赋值 (., #鱼)
.如果真结束
.如果真 (等于 (读 (“宠物3”), “鸟”))
    赋值 (鸟位置, 3)
    赋值 (., #鸟)
.如果真结束
.如果真 (等于 (读 (“宠物3”), “马”))
    赋值 (马位置, 3)
    赋值 (., #马)
.如果真结束
.如果真 (等于 (读 (“宠物3”), “狗”))
    赋值 (狗位置, 3)
    赋值 (., #狗)
.如果真结束
.如果真 (等于 (读 (“宠物3”), “猫”))
    赋值 (猫位置, 3)
    赋值 (., #猫)
.如果真结束
.如果真 (等于 (读 (“宠物3”), “鱼”))
    赋值 (鱼位置, 3)
    赋值 (., #鱼)
.如果真结束
.如果真 (等于 (读 (“宠物4”), “鸟”))
    赋值 (鸟位置, 4)
    赋值 (., #鸟)
.如果真结束
.如果真 (等于 (读 (“宠物4”), “马”))
    赋值 (马位置, 4)
    赋值 (., #马)
.如果真结束
.如果真 (等于 (读 (“宠物4”), “狗”))
    赋值 (狗位置, 4)
    赋值 (., #狗)
.如果真结束
.如果真 (等于 (读 (“宠物4”), “猫”))
    赋值 (猫位置, 4)
    赋值 (., #猫)
.如果真结束
.如果真 (等于 (读 (“宠物4”), “鱼”))
    赋值 (鱼位置, 4)
    赋值 (., #鱼)
.如果真结束
.如果真 (等于 (读 (“宠物5”), “鸟”))
    赋值 (鸟位置, 5)
    赋值 (., #鸟)
.如果真结束
.如果真 (等于 (读 (“宠物5”), “马”))
    赋值 (马位置, 5)
    赋值 (., #马)
.如果真结束
.如果真 (等于 (读 (“宠物5”), “狗”))
    赋值 (狗位置, 5)
    赋值 (., #狗)
.如果真结束
.如果真 (等于 (读 (“宠物5”), “猫”))
    赋值 (猫位置, 5)
    赋值 (., #猫)
.如果真结束
.如果真 (等于 (读 (“宠物5”), “鱼”))
    赋值 (鱼位置, 5)
    赋值 (., #鱼)
.如果真结束


.子程序 _时钟1_周期事件, 空白型, , 
.局部变量 时间, 整数型, 静态, , 

赋值 (时间, 相加 (时间, 1))
赋值 (., 相加 (到文本 (时间), “秒”))



 ' 不属于任何一个程序集、类模块的函数：
