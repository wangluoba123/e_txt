 ' 文件类型：未知类型

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0





 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 5 3 系统核心支持库
 ' spec A512548E76954B6E92C21055517615B0 3 1 特殊功能支持库



 ' 所需要的模块
 ' 更改MAC地址模块 C:\Users\Administrator\Desktop\MAC地址更改模块.ec


数据类型 模块_网卡信息, 公开, 
    .成员 网卡描述, 文本型, , , 
    .成员 MAC地址, 文本型, , , 
    .成员 IP地址, 文本型, , , 
    .成员 子网掩码, 文本型, , , 
    .成员 网关, 文本型, , , 
    .成员 网卡名称, 文本型, , , 
    .成员 注册表路径, 文本型, , , 
    .成员 接口类型, 文本型, , , 
    .成员 索引, 整数型, , , 


.程序集 程序集1, , , 

.子程序 _启动子程序, 整数型, , 请在本子程序中放置动态链接库初始化代码
_临时子程序 () ' 在初始化代码执行完毕后调用测试代码
返回 (0) ' 返回值被忽略。

.子程序 _临时子程序, 空白型, , 
 ' 本名称子程序用作测试程序用，仅在开发及调试环境中有效，编译发布程序前将被系统自动清空，请将所有用作测试的临时代码放在本子程序中。 ***注意不要修改本子程序的名称、参数及返回值类型。


.子程序 xiugaimac, 整数型, , 
.参数 newmac, 文本型, , 

.局部变量 网卡信息REG, 文本型, , , 
.局部变量 适配器硬件ID, 文本型, , , 
.局部变量 变量, 整数型, , , 
.局部变量 MAC, 文本型, , , 

赋值 (MAC, newmac)
调试输出 (MAC)
赋值 (网卡信息REG, “SYSTEM\CurrentControlSet\Control\Class\{4D36E972-E325-11CE-BFC1-08002bE10318}\”)
.判断循环首 (注册项是否存在 (#本地机器, 相加 (网卡信息REG, 取重复文本 (相减 (4, 取文本长度 (到文本 (变量))), “0”), 到文本 (变量), “\Ndi\Interfaces\UpperRange”)))
    赋值 (变量, 相加 (变量, 1))
    .如果真 (等于 (取文本注册项 (#本地机器, 相加 (网卡信息REG, 取重复文本 (相减 (4, 取文本长度 (到文本 (变量))), “0”), 到文本 (变量), “\Ndi\Interfaces\LowerRange”), ), “ethernet”))
        .如果真 (等于 (取文本注册项 (#本地机器, 相加 (网卡信息REG, 取重复文本 (相减 (4, 取文本长度 (到文本 (变量))), “0”), 到文本 (变量), “\Ndi\Interfaces\LowerRange”), ), “ethernet”))
            .如果真 (等于 (取文本注册项 (#本地机器, 相加 (网卡信息REG, 取重复文本 (相减 (4, 取文本长度 (到文本 (变量))), “0”), 到文本 (变量), “\DriverDesc”), ), “Realtek PCIe GBE Family Controller”))
                赋值 (适配器硬件ID, 取文本注册项 (4, 相加 (网卡信息REG, 取重复文本 (相减 (4, 取文本长度 (到文本 (变量))), “0”), 到文本 (变量), “\MatchingDeviceId”), ))
                写注册项 (#本地机器, 相加 (网卡信息REG, 取重复文本 (相减 (4, 取文本长度 (到文本 (变量))), “0”), 到文本 (变量), “\NetworkAddress”), MAC)
            .如果真结束
            
            .如果真 (等于 (取文本注册项 (#本地机器, 相加 (网卡信息REG, 取重复文本 (相减 (4, 取文本长度 (到文本 (变量))), “0”), 到文本 (变量), “\DriverDesc”), ), “Intel(R) 82583V Gigabit Network Connection”))
                赋值 (适配器硬件ID, 取文本注册项 (4, 相加 (网卡信息REG, 取重复文本 (相减 (4, 取文本长度 (到文本 (变量))), “0”), 到文本 (变量), “\MatchingDeviceId”), ))
                写注册项 (#本地机器, 相加 (网卡信息REG, 取重复文本 (相减 (4, 取文本长度 (到文本 (变量))), “0”), 到文本 (变量), “\NetworkAddress”), MAC)
            .如果真结束
            
            
        .如果真结束
        
    .如果真结束
    
.判断循环尾 ()
运行 (相加 (“cmd /c devcon disable ”, #引号, 适配器硬件ID, #引号), 真, 1)
运行 (相加 (“cmd /c devcon enable ”, #引号, 适配器硬件ID, #引号), 真, 1)
返回 (1)


.程序集 __HIDDEN_TEMP_MOD__, , , 

.子程序 取本机所有网卡信息, 逻辑型, , 取本机所有网卡信息
.参数 网卡信息, 模块_网卡信息, 数组, 



.子程序 修改MAC地址, 逻辑型, , 修改成功返回真,失败返回假
.参数 网卡描述, 文本型, , 
.参数 MAC地址, 文本型, , 格式类似于:000C2947EF9E



.子程序 取随机MAC地址, 文本型, , 


.类模块 类1, , , 

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用



 ' 不属于任何一个程序集、类模块的函数：
