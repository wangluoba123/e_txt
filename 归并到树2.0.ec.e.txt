 ' 文件类型：Windows模块源码

 ' 程序名称：归并到树 2.0
 ' 程序描述：返回树项目字节集，仅支持易的EDB数据库。
 ' 程序作者：Life
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：D_Life@163.com
 ' 主页地址：
 ' 版权声明：
 ' 版本号：2.0
 ' 创建号：0.0



.图片 字节集合, " ' 已保存到：D:\易语言学习\Data\归并到树2.0.ec.e\字节集合", , 0到255字节的集合


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 4 系统核心支持库





.程序集 程序集1, , , 

.子程序 _启动子程序, 整数型, , 请在本子程序中放置易模块初始化代码

_临时子程序 () ' 在初始化代码执行完毕后调用测试代码
返回 (0) ' 可以根据您的需要返回任意数值

.子程序 _临时子程序, 空白型, , 
 ' 本名称子程序用作测试程序用，仅在开发及调试环境中有效，编译发布程序前将被系统自动清空，请将所有用作测试的临时代码放在本子程序中。 ***注意不要修改本子程序的名称、参数及返回值类型。

.子程序 取成员位置, 字节集, ,     
.参数 成员, 文本型, 数组, 
.参数 场, 文本型, , 

.局部变量 i, 整数型, , , 
.局部变量 D, 整数型, , , 
.局部变量 S, 文本型, , , 
.局部变量 左, 文本型, , , 
.局部变量 H, 字节集, , , 
.局部变量 op, 整数型, , , 

赋值 (S, 场)
.计次循环首 (取数组成员数 (成员), i)
    赋值 (D, 寻找文本 (S, 成员 [i], , 真))
    .如果 (不等于 (D, -1))
        赋值 (左, 相加 (左, 取文本左边 (S, 相加 (D, 取文本长度 (成员 [i])))))
        赋值 (S, 取文本右边 (S, 相减 (取文本长度 (S), D, 取文本长度 (成员 [i]))))
        赋值 (H, 相加 (H, { 0 }))
    .否则
        赋值 (H, 相加 (H, 取字节集中间 (#字节集合, 相加 (i, 1), 取数组成员数 (成员))))
        跳出循环 ()
    .如果结束
    
.计次循环尾 ()
返回 (H)

.子程序 子类化, 文本型, , 
.参数 字段名, 文本型, , 
.参数 尾部是否加年月日, 逻辑型, , 

.局部变量 temp, 文本型, , , 

.如果 (等于 (取字段类型 (字段名), 8))
    赋值 (temp, 到文本 (取日期 (读 (字段名))))
    .如果 (等于 (尾部是否加年月日, 假))
        赋值 (temp, 子文本替换 (temp, “年”, “\”, , , 真))
        赋值 (temp, 子文本替换 (temp, “月”, “\”, , , 真))
        返回 (子文本替换 (temp, “日”, “”, , , 真))
    .否则
        赋值 (temp, 子文本替换 (temp, “年”, “年\”, , , 真))
        返回 (子文本替换 (temp, “月”, “月\”, , , 真))
    .如果结束
    
.否则
    返回 (读 (字段名))
.如果结束


.子程序 归并到树_单项, 字节集, , 返回树项目字节集，仅支持易的EDB数据库。要罗列到树的标识形式为"顶项目\次项目\再次项目\…\末项目"文本型，或为日期时间型。分级层数不限，EDB库请事先打开，本子程序结束后可关闭。
.参数 字段名, 文本型, , 要分级到树的字段名称，该字段必须为文本型或日期时间型。
.参数 访问密码, 文本型, , 因为归并到数的字段从主数据库中复制记录而来，必须使用密码才能访问。否则将返回空。
.参数 图片索引, 字节集, 可空, 所有级的图片索引，如顶级是4、次级是9、末级是1，则该参数为{4,9,1}。如果提供的索引少于实际分级数，默认索引为0。
.参数 选中图片索引, 字节集, 可空, 参考上参数。
.参数 项目数值, 整数型, 可空 数组, 参考上参数。该字段为日期时间型时，提供的数组内有{-1}，表示该项的数值为逐级父项目的数值文本累积。如字段某记录为“2007年8月9日”，提供的数组参数为{520,-1,-1}，内容表示为：项目为2007年时项目数值为520，项目为8月时项目数值为200708，项目为12日时项目数值为20070809。
.参数 尾部是否加年月日, 逻辑型, 可空, 当字段为日期时间型，各分级层是否要在尾部加上年、月、日字样。默认为假，不加字样。
.参数 全部展开, 逻辑型, 可空, 默认为真，全部展开。
.参数 是否处理事件, 逻辑型, 可空, 数据很大时，可能出现假死，使用处理事件会有所改善，但会降低速度。默认为不使用。

.局部变量 temp, 文本型, , , 
.局部变量 D, 逻辑型, , , 
.局部变量 前库, 文本型, , , 
.局部变量 前位置, 空白型, , , 
.局部变量 排列, 字节集, , , 
.局部变量 树, 文本型, , "0", 
.局部变量 层次, 文本型, , "0", 
.局部变量 位置, 字节集, , , 
.局部变量 图片, 字节集, , , 
.局部变量 i, 空白型, , , 
.局部变量 op, 空白型, , , 
.局部变量 id, 空白型, , , 
.局部变量 ux, 空白型, , , 
.局部变量 临时, 文本型, , , 

.如果真 (不等于 (取字段类型 (字段名), 10))
    .如果真 (不等于 (取字段类型 (字段名), 8))
        返回 ({  })
    .如果真结束
    
.如果真结束

赋值 (前库, 取当前库 ())
赋值 (前位置, 取记录号 ())
赋值 (temp, 取临时文件名 ())
.如果真 (等于 (排序 (temp, 字段名, , , 字段名), 假))
    返回 ({  })
.如果真结束
.如果 (或者 (等于 (尾部是否加年月日, 假), 等于 (是否为空 (尾部是否加年月日), 真)))
    赋值 (D, 假)
.否则
    赋值 (D, 真)
.如果结束

.如果 (打开 (temp, “排列temp啊”, , , , 访问密码, ))
    .如果 (大于 (取记录数 (), 0))
        到首记录 ()
        加入成员 (树, 子类化 (字段名, D))
    .否则
        关闭 (“排列temp啊”)
        置当前库 (前库)
        跳到 (前位置)
        返回 ({  })
    .如果结束
    
    .如果真 (大于 (取记录数 (), 1))
        .判断循环首 (查找 (不等于 (子类化 (字段名, D), 树 [取数组成员数 (树)])))
            加入成员 (树, 子类化 (字段名, D))
        .判断循环尾 ()
    .如果真结束
    关闭 (“排列temp啊”)
    置当前库 (前库)
    跳到 (前位置)
    
    赋值 (id, 打开内存文件 ())
    .如果真 (等于 (id, 0))
        关闭 (“排列temp啊”)
        置当前库 (前库)
        跳到 (前位置)
        返回 ({  })
    .如果真结束
    
    .计次循环首 (取数组成员数 (树), i)
        赋值 (层次, 分割文本 (树 [i], “\”, ))
        .如果 (等于 (i, 1))
            .计次循环首 (取数组成员数 (层次), op)
                写出字节集 (id, 到字节集 (层次 [op]))
                写出字节集 (id, { 0 })
                
                .如果 (小于或等于 (op, 取字节集长度 (图片索引)))
                    写出字节集 (id, 到字节集 (到整数 (图片索引 [op])))
                .否则
                    写出字节集 (id, { 0, 0, 0, 0 })
                .如果结束
                
                
                .如果 (小于或等于 (op, 取字节集长度 (选中图片索引)))
                    .如果 (不等于 (取字节集中间 (选中图片索引, op, 1), { -1 }))
                        写出字节集 (id, 到字节集 (到整数 (选中图片索引 [op])))
                    .否则
                        .如果 (小于或等于 (op, 取字节集长度 (图片索引)))
                            写出字节集 (id, 到字节集 (到整数 (图片索引 [op])))
                        .否则
                            写出字节集 (id, { 0, 0, 0, 0 })
                        .如果结束
                        
                    .如果结束
                    
                .否则
                    .如果 (小于或等于 (op, 取字节集长度 (图片索引)))
                        写出字节集 (id, 到字节集 (到整数 (图片索引 [op])))
                    .否则
                        写出字节集 (id, { 0, 0, 0, 0 })
                    .如果结束
                    
                .如果结束
                
                .如果 (小于或等于 (op, 取数组成员数 (项目数值)))
                    .如果 (不等于 (项目数值 [op], -1))
                        写出字节集 (id, 到字节集 (项目数值 [op]))
                    .否则
                        .如果 (等于 (取字段类型 (字段名), 8))
                            赋值 (临时, “”)
                            .计次循环首 (op, ux)
                                赋值 (临时, 相加 (临时, 归整日期 (层次 [ux])))
                            .计次循环尾 ()
                            写出字节集 (id, 到字节集 (到整数 (临时)))
                        .否则
                            写出字节集 (id, { 0, 0, 0, 0 })
                        .如果结束
                        
                    .如果结束
                    
                .否则
                    写出字节集 (id, { 0, 0, 0, 0 })
                .如果结束
                
                .如果 (或者 (全部展开, 是否为空 (全部展开)))
                    写出字节集 (id, 到字节集 (2))
                .否则
                    写出字节集 (id, 到字节集 (0))
                .如果结束
                
                写出字节集 (id, 到字节集 (op))
                .如果真 (是否处理事件)
                    处理事件 ()
                .如果真结束
                
            .计次循环尾 ()
        .否则
            赋值 (位置, 取成员位置 (层次, 树 [相减 (i, 1)]))
            .计次循环首 (取数组成员数 (层次), op)
                .如果真 (不等于 (到数值 (位置 [op]), 0))
                    写出字节集 (id, 到字节集 (层次 [op]))
                    写出字节集 (id, { 0 })
                    
                    .如果 (小于或等于 (op, 取字节集长度 (图片索引)))
                        写出字节集 (id, 到字节集 (到整数 (图片索引 [op])))
                    .否则
                        写出字节集 (id, { 0, 0, 0, 0 })
                    .如果结束
                    
                    
                    .如果 (小于或等于 (op, 取字节集长度 (选中图片索引)))
                        .如果 (不等于 (取字节集中间 (选中图片索引, op, 1), { -1 }))
                            写出字节集 (id, 到字节集 (到整数 (选中图片索引 [op])))
                        .否则
                            .如果 (小于或等于 (op, 取字节集长度 (图片索引)))
                                写出字节集 (id, 到字节集 (到整数 (图片索引 [op])))
                            .否则
                                写出字节集 (id, { 0, 0, 0, 0 })
                            .如果结束
                            
                        .如果结束
                        
                    .否则
                        .如果 (小于或等于 (op, 取字节集长度 (图片索引)))
                            写出字节集 (id, 到字节集 (到整数 (图片索引 [op])))
                        .否则
                            写出字节集 (id, { 0, 0, 0, 0 })
                        .如果结束
                        
                    .如果结束
                    
                    .如果 (小于或等于 (op, 取数组成员数 (项目数值)))
                        .如果 (不等于 (项目数值 [op], -1))
                            写出字节集 (id, 到字节集 (项目数值 [op]))
                        .否则
                            .如果 (等于 (取字段类型 (字段名), 8))
                                赋值 (临时, “”)
                                .计次循环首 (op, ux)
                                    赋值 (临时, 相加 (临时, 归整日期 (层次 [ux])))
                                .计次循环尾 ()
                                写出字节集 (id, 到字节集 (到整数 (临时)))
                            .否则
                                写出字节集 (id, { 0, 0, 0, 0 })
                            .如果结束
                            
                        .如果结束
                        
                    .否则
                        写出字节集 (id, { 0, 0, 0, 0 })
                    .如果结束
                    
                    .如果 (或者 (全部展开, 是否为空 (全部展开)))
                        写出字节集 (id, 到字节集 (2))
                    .否则
                        写出字节集 (id, 到字节集 (0))
                    .如果结束
                    
                    写出字节集 (id, 到字节集 (到整数 (位置 [op])))
                .如果真结束
                
                .如果真 (是否处理事件)
                    处理事件 ()
                .如果真结束
                
            .计次循环尾 ()
        .如果结束
        
    .计次循环尾 ()
    移到文件首 (id)
    赋值 (位置, 读入字节集 (id, 取文件长度 (id)))
    关闭文件 (id)
    置当前库 (前库)
    跳到 (前位置)
    返回 (位置)
.否则
    返回 ({  })
.如果结束


.子程序 归整日期, 文本型, , 
.参数 日期文本, 文本型, , 

.局部变量 T, 文本型, , , 

赋值 (T, 子文本替换 (日期文本, “年”, “”, , , 假))
赋值 (T, 子文本替换 (T, “月”, “”, , , 假))
赋值 (T, 子文本替换 (T, “日”, “”, , , 假))
.如果 (大于或等于 (取文本长度 (T), 2))
    返回 (T)
.否则
    返回 (相加 (“0”, T))
.如果结束


.子程序 归并到树_双项, 字节集, , 返回树项目字节集，仅支持易的EDB数据库。要罗列到树的标识形式为"顶项目\次项目\再次项目\…\末项目"文本型，或为日期时间型。分级层数不限，EDB库请事先打开，本子程序结束后可关闭。
.参数 字段名一, 文本型, , 要分级到树的字段名称，该字段必须为文本型或日期时间型。
.参数 字段名二, 文本型, , 要分级到树的字段名称，该字段必须为文本型或日期时间型。参数一为日期型时，该字段必须为文本型。
.参数 访问密码, 文本型, 可空, 因为归并到数的字段从主数据库中复制记录而来，必须使用密码才能访问。否则将返回空。
.参数 一图片索引, 字节集, 可空, 所有级的图片索引，如顶级是4、次级是9、末级是1，则该参数为{4,9,1}。如果提供的索引少于实际分级数，默认索引为0。
.参数 一选中图片索引, 字节集, 可空, 参考上参数。
.参数 一项目数值, 整数型, 可空 数组, 参考上参数。该字段为日期时间型时，提供的数组内有{-1}，表示该项的数值为逐级父项目的数值文本累积。如字段某记录为“2007年8月9日”，提供的数组参数为{520,-1,-1}，内容表示为：项目为2007年时项目数值为520，项目为8月时项目数值为200708，项目为12日时项目数值为20070809。
.参数 二图片索引, 字节集, 可空, 所有级的图片索引，如顶级是4、次级是9、末级是1，则该参数为{4,9,1}。如果提供的索引少于实际分级数，默认索引为0。
.参数 二选中图片索引, 字节集, 可空, 参考上参数。
.参数 二项目数值, 整数型, 可空 数组, 参考上参数。该字段为日期时间型时，提供的数组内有{-1}，表示该项的数值为逐级父项目的数值文本累积。如字段某记录为“2007年8月9日”，提供的数组参数为{520,-1,-1}，内容表示为：项目为2007年时项目数值为520，项目为8月时项目数值为200708，项目为12日时项目数值为20070809。
.参数 尾部是否加年月日, 逻辑型, 可空, 当字段为日期时间型，各分级层是否要在尾部加上年、月、日字样。默认为假，不加字样。
.参数 全部展开, 逻辑型, 可空, 默认为真，全部展开。
.参数 是否处理事件, 逻辑型, 可空, 数据很大时，可能出现假死，使用处理事件会有所改善，但会降低速度。默认为不使用。

.局部变量 temp1, 文本型, , , 
.局部变量 temp2, 文本型, , , 
.局部变量 D, 逻辑型, , , 
.局部变量 前树, 文本型, , "0", 
.局部变量 后树, 文本型, , "0", 
.局部变量 相应首位置, 整数型, , "0", 
.局部变量 前库, 文本型, , , 
.局部变量 id, 整数型, , , 
.局部变量 i, 整数型, , , 
.局部变量 层次一, 文本型, , "0", 
.局部变量 op, 整数型, , , 
.局部变量 各位置, 字节集, , , 
.局部变量 临时, 文本型, , , 
.局部变量 ux, 整数型, , , 

.如果真 (并且 (等于 (取字段类型 (字段名一), 8), 等于 (取字段类型 (字段名二), 8)))
    返回 ({  })
.如果真结束

赋值 (前库, 取当前库 ())
赋值 (temp1, 取临时文件名 ())
赋值 (temp2, 取临时文件名 ())
.如果真 (等于 (排序 (temp1, 字段名一, , , 字段名一, 字段名二), 假))
    返回 ({  })
.如果真结束

.如果 (或者 (等于 (尾部是否加年月日, 假), 等于 (是否为空 (尾部是否加年月日), 真)))
    赋值 (D, 假)
.否则
    赋值 (D, 真)
.如果结束

.如果 (打开 (temp1, “排列一啊”, , , , 访问密码, ))
    .如果 (大于 (取记录数 (), 0))
        到首记录 ()
        加入成员 (前树, 子类化 (字段名一, D))
        加入成员 (相应首位置, 取记录号 ())
    .否则
        关闭 (“排列一啊”)
        置当前库 (前库)
        返回 ({  })
    .如果结束
    
    .如果真 (大于 (取记录数 (), 1))
        .判断循环首 (查找 (不等于 (子类化 (字段名一, D), 前树 [取数组成员数 (前树)])))
            加入成员 (前树, 子类化 (字段名一, D))
            加入成员 (相应首位置, 取记录号 ())
        .判断循环尾 ()
        到尾记录 ()
        加入成员 (相应首位置, 取记录号 ())
    .如果真结束
    
    赋值 (id, 打开内存文件 ())
    .如果真 (等于 (id, 0))
        关闭 (“排列一啊”)
        置当前库 (前库)
        返回 ({  })
    .如果真结束
    
    .如果 (或者 (等于 (取字段类型 (字段名一), 8), 等于 (取字段类型 (字段名二), 8)))
        .计次循环首 (取数组成员数 (前树), i)
            赋值 (层次一, 分割文本 (前树 [i], “\”, ))
            .如果 (等于 (i, 1))
                .计次循环首 (取数组成员数 (层次一), op)
                    写出字节集 (id, 到字节集 (层次一 [op]))
                    写出字节集 (id, { 0 })
                    
                    .如果 (小于或等于 (op, 取字节集长度 (一图片索引)))
                        写出字节集 (id, 到字节集 (到整数 (一图片索引 [op])))
                    .否则
                        写出字节集 (id, { 0, 0, 0, 0 })
                    .如果结束
                    
                    
                    .如果 (小于或等于 (op, 取字节集长度 (一选中图片索引)))
                        .如果 (不等于 (取字节集中间 (一选中图片索引, op, 1), { -1 }))
                            写出字节集 (id, 到字节集 (到整数 (一选中图片索引 [op])))
                        .否则
                            .如果 (小于或等于 (op, 取字节集长度 (一图片索引)))
                                写出字节集 (id, 到字节集 (到整数 (一图片索引 [op])))
                            .否则
                                写出字节集 (id, { 0, 0, 0, 0 })
                            .如果结束
                            
                        .如果结束
                        
                    .否则
                        .如果 (小于或等于 (op, 取字节集长度 (一图片索引)))
                            写出字节集 (id, 到字节集 (到整数 (一图片索引 [op])))
                        .否则
                            写出字节集 (id, { 0, 0, 0, 0 })
                        .如果结束
                        
                    .如果结束
                    
                    .如果 (小于或等于 (op, 取数组成员数 (一项目数值)))
                        .如果 (不等于 (一项目数值 [op], -1))
                            写出字节集 (id, 到字节集 (一项目数值 [op]))
                        .否则
                            .如果 (等于 (取字段类型 (字段名一), 8))
                                赋值 (临时, “”)
                                .计次循环首 (op, ux)
                                    赋值 (临时, 相加 (临时, 归整日期 (层次一 [ux])))
                                .计次循环尾 ()
                                写出字节集 (id, 到字节集 (到整数 (临时)))
                            .否则
                                写出字节集 (id, { 0, 0, 0, 0 })
                            .如果结束
                            
                        .如果结束
                        
                    .否则
                        写出字节集 (id, { 0, 0, 0, 0 })
                    .如果结束
                    
                    .如果 (或者 (全部展开, 是否为空 (全部展开)))
                        写出字节集 (id, 到字节集 (2))
                    .否则
                        写出字节集 (id, 到字节集 (0))
                    .如果结束
                    
                    写出字节集 (id, 到字节集 (op))
                    .如果真 (是否处理事件)
                        处理事件 ()
                    .如果真结束
                    
                .计次循环尾 ()
                
                置当前库 (“排列一啊”)
                .如果真 (排序 (temp2, 字段名二, , 等于 (子类化 (字段名一, D), 前树 [1]), 字段名二))
                    .如果真 (打开 (temp2, “排列二啊”, , , , 访问密码, ))
                        .如果真 (大于 (取记录数 (), 0))
                            到首记录 ()
                            清除数组 (后树)
                            加入成员 (后树, 子类化 (字段名二, D))
                        .如果真结束
                        
                        .如果真 (大于 (取记录数 (), 1))
                            .判断循环首 (查找 (不等于 (子类化 (字段名二, D), 后树 [取数组成员数 (后树)])))
                                加入成员 (后树, 子类化 (字段名二, D))
                            .判断循环尾 ()
                        .如果真结束
                        写出字节集 (id, 附加子树 (后树, 字段名二, 相减 (op, 1), 二图片索引, 二选中图片索引, 二项目数值, 全部展开, 是否处理事件))
                        关闭 (“排列二啊”)
                        置当前库 (“排列一啊”)
                    .如果真结束
                    
                .如果真结束
                
            .否则
                赋值 (各位置, 取成员位置 (层次一, 前树 [相减 (i, 1)]))
                .计次循环首 (取数组成员数 (层次一), op)
                    .如果真 (不等于 (到数值 (各位置 [op]), 0))
                        写出字节集 (id, 到字节集 (层次一 [op]))
                        写出字节集 (id, { 0 })
                        
                        .如果 (小于或等于 (op, 取字节集长度 (一图片索引)))
                            写出字节集 (id, 到字节集 (到整数 (一图片索引 [op])))
                        .否则
                            写出字节集 (id, { 0, 0, 0, 0 })
                        .如果结束
                        
                        
                        .如果 (小于或等于 (op, 取字节集长度 (一选中图片索引)))
                            .如果 (不等于 (取字节集中间 (一选中图片索引, op, 1), { -1 }))
                                写出字节集 (id, 到字节集 (到整数 (一选中图片索引 [op])))
                            .否则
                                .如果 (小于或等于 (op, 取字节集长度 (一图片索引)))
                                    写出字节集 (id, 到字节集 (到整数 (一图片索引 [op])))
                                .否则
                                    写出字节集 (id, { 0, 0, 0, 0 })
                                .如果结束
                                
                            .如果结束
                            
                        .否则
                            .如果 (小于或等于 (op, 取字节集长度 (一图片索引)))
                                写出字节集 (id, 到字节集 (到整数 (一图片索引 [op])))
                            .否则
                                写出字节集 (id, { 0, 0, 0, 0 })
                            .如果结束
                            
                        .如果结束
                        
                        .如果 (小于或等于 (op, 取数组成员数 (一项目数值)))
                            .如果 (不等于 (一项目数值 [op], -1))
                                写出字节集 (id, 到字节集 (一项目数值 [op]))
                            .否则
                                .如果 (等于 (取字段类型 (字段名一), 8))
                                    赋值 (临时, “”)
                                    .计次循环首 (op, ux)
                                        赋值 (临时, 相加 (临时, 归整日期 (层次一 [ux])))
                                    .计次循环尾 ()
                                    写出字节集 (id, 到字节集 (到整数 (临时)))
                                .否则
                                    写出字节集 (id, { 0, 0, 0, 0 })
                                .如果结束
                                
                            .如果结束
                            
                        .否则
                            写出字节集 (id, { 0, 0, 0, 0 })
                        .如果结束
                        
                        .如果 (或者 (全部展开, 是否为空 (全部展开)))
                            写出字节集 (id, 到字节集 (2))
                        .否则
                            写出字节集 (id, 到字节集 (0))
                        .如果结束
                        
                        写出字节集 (id, 到字节集 (到整数 (各位置 [op])))
                    .如果真结束
                    
                    .如果真 (是否处理事件)
                        处理事件 ()
                    .如果真结束
                    
                .计次循环尾 ()
                
                置当前库 (“排列一啊”)
                .如果真 (排序 (temp2, 字段名二, , 等于 (子类化 (字段名一, D), 前树 [i]), 字段名二))
                    .如果真 (打开 (temp2, “排列二啊”, , , , 访问密码, ))
                        .如果真 (大于 (取记录数 (), 0))
                            到首记录 ()
                            清除数组 (后树)
                            加入成员 (后树, 子类化 (字段名二, D))
                        .如果真结束
                        
                        .如果真 (大于 (取记录数 (), 1))
                            .判断循环首 (查找 (不等于 (子类化 (字段名二, D), 后树 [取数组成员数 (后树)])))
                                加入成员 (后树, 子类化 (字段名二, D))
                            .判断循环尾 ()
                        .如果真结束
                        写出字节集 (id, 附加子树 (后树, 字段名二, 相减 (op, 1), 二图片索引, 二选中图片索引, 二项目数值, 全部展开, 是否处理事件))
                        关闭 (“排列二啊”)
                        置当前库 (“排列一啊”)
                    .如果真结束
                    
                .如果真结束
                
            .如果结束
            
        .计次循环尾 ()
        关闭 (“排列一啊”)
        移到文件首 (id)
        赋值 (各位置, 读入字节集 (id, 取文件长度 (id)))
        关闭文件 (id)
        置当前库 (前库)
        返回 (各位置)
    .否则
        关闭 (“排列一啊”)
        置当前库 (前库)
        返回 ({  })
    .如果结束
    
.否则
    返回 ({  })
.如果结束


.子程序 附加子树, 字节集, , 
.参数 树啊, 文本型, 数组, 
.参数 附加树名啊, 文本型, , 
.参数 父位置啊, 整数型, , 
.参数 图片索引啊, 字节集, 可空, 
.参数 选中图片索引啊, 字节集, 可空, 
.参数 项目数值啊, 整数型, 可空 数组, 
.参数 全部展开啊, 逻辑型, 可空, 
.参数 是否处理事件啊, 逻辑型, 可空, 

.局部变量 temp, 文本型, , , 
.局部变量 D, 逻辑型, , , 
.局部变量 排列, 字节集, , , 
.局部变量 树, 文本型, , "0", 
.局部变量 层次, 文本型, , "0", 
.局部变量 位置, 字节集, , , 
.局部变量 图片, 字节集, , , 
.局部变量 i, 空白型, , , 
.局部变量 op, 空白型, , , 
.局部变量 id, 空白型, , , 
.局部变量 ux, 空白型, , , 
.局部变量 临时, 文本型, , , 

赋值 (id, 打开内存文件 ())
.如果真 (等于 (id, 0))
    返回 ({  })
.如果真结束

.计次循环首 (取数组成员数 (树啊), i)
    赋值 (层次, 分割文本 (树啊 [i], “\”, ))
    .如果 (等于 (i, 1))
        .计次循环首 (取数组成员数 (层次), op)
            写出字节集 (id, 到字节集 (层次 [op]))
            写出字节集 (id, { 0 })
            
            .如果 (小于或等于 (op, 取字节集长度 (图片索引啊)))
                写出字节集 (id, 到字节集 (到整数 (图片索引啊 [op])))
            .否则
                写出字节集 (id, { 0, 0, 0, 0 })
            .如果结束
            
            
            .如果 (小于或等于 (op, 取字节集长度 (选中图片索引啊)))
                .如果 (不等于 (取字节集中间 (选中图片索引啊, op, 1), { -1 }))
                    写出字节集 (id, 到字节集 (到整数 (选中图片索引啊 [op])))
                .否则
                    .如果 (小于或等于 (op, 取字节集长度 (图片索引啊)))
                        写出字节集 (id, 到字节集 (到整数 (图片索引啊 [op])))
                    .否则
                        写出字节集 (id, { 0, 0, 0, 0 })
                    .如果结束
                    
                .如果结束
                
            .否则
                .如果 (小于或等于 (op, 取字节集长度 (图片索引啊)))
                    写出字节集 (id, 到字节集 (到整数 (图片索引啊 [op])))
                .否则
                    写出字节集 (id, { 0, 0, 0, 0 })
                .如果结束
                
            .如果结束
            
            .如果 (小于或等于 (op, 取数组成员数 (项目数值啊)))
                .如果 (不等于 (项目数值啊 [op], -1))
                    写出字节集 (id, 到字节集 (项目数值啊 [op]))
                .否则
                    .如果 (等于 (取字段类型 (附加树名啊), 8))
                        赋值 (临时, “”)
                        .计次循环首 (op, ux)
                            赋值 (临时, 相加 (临时, 归整日期 (层次 [ux])))
                        .计次循环尾 ()
                        写出字节集 (id, 到字节集 (到整数 (临时)))
                    .否则
                        写出字节集 (id, { 0, 0, 0, 0 })
                    .如果结束
                    
                .如果结束
                
            .否则
                写出字节集 (id, { 0, 0, 0, 0 })
            .如果结束
            
            .如果 (或者 (全部展开啊, 是否为空 (全部展开啊)))
                写出字节集 (id, 到字节集 (2))
            .否则
                写出字节集 (id, 到字节集 (0))
            .如果结束
            
            写出字节集 (id, 到字节集 (到整数 (相加 (op, 父位置啊))))
            .如果真 (是否处理事件啊)
                处理事件 ()
            .如果真结束
            
        .计次循环尾 ()
    .否则
        赋值 (位置, 取成员位置 (层次, 树啊 [相减 (i, 1)]))
        .计次循环首 (取数组成员数 (层次), op)
            .如果真 (不等于 (到数值 (位置 [op]), 0))
                写出字节集 (id, 到字节集 (层次 [op]))
                写出字节集 (id, { 0 })
                
                .如果 (小于或等于 (op, 取字节集长度 (图片索引啊)))
                    写出字节集 (id, 到字节集 (到整数 (图片索引啊 [op])))
                .否则
                    写出字节集 (id, { 0, 0, 0, 0 })
                .如果结束
                
                
                .如果 (小于或等于 (op, 取字节集长度 (选中图片索引啊)))
                    .如果 (不等于 (取字节集中间 (选中图片索引啊, op, 1), { -1 }))
                        写出字节集 (id, 到字节集 (到整数 (选中图片索引啊 [op])))
                    .否则
                        .如果 (小于或等于 (op, 取字节集长度 (图片索引啊)))
                            写出字节集 (id, 到字节集 (到整数 (图片索引啊 [op])))
                        .否则
                            写出字节集 (id, { 0, 0, 0, 0 })
                        .如果结束
                        
                    .如果结束
                    
                .否则
                    .如果 (小于或等于 (op, 取字节集长度 (图片索引啊)))
                        写出字节集 (id, 到字节集 (到整数 (图片索引啊 [op])))
                    .否则
                        写出字节集 (id, { 0, 0, 0, 0 })
                    .如果结束
                    
                .如果结束
                
                .如果 (小于或等于 (op, 取数组成员数 (项目数值啊)))
                    .如果 (不等于 (项目数值啊 [op], -1))
                        写出字节集 (id, 到字节集 (项目数值啊 [op]))
                    .否则
                        .如果 (等于 (取字段类型 (附加树名啊), 8))
                            赋值 (临时, “”)
                            .计次循环首 (op, ux)
                                赋值 (临时, 相加 (临时, 归整日期 (层次 [ux])))
                            .计次循环尾 ()
                            写出字节集 (id, 到字节集 (到整数 (临时)))
                        .否则
                            写出字节集 (id, { 0, 0, 0, 0 })
                        .如果结束
                        
                    .如果结束
                    
                .否则
                    写出字节集 (id, { 0, 0, 0, 0 })
                .如果结束
                
                .如果 (或者 (全部展开啊, 是否为空 (全部展开啊)))
                    写出字节集 (id, 到字节集 (2))
                .否则
                    写出字节集 (id, 到字节集 (0))
                .如果结束
                
                写出字节集 (id, 到字节集 (到整数 (相加 (到整数 (位置 [op]), 父位置啊))))
            .如果真结束
            
            .如果真 (是否处理事件啊)
                处理事件 ()
            .如果真结束
            
        .计次循环尾 ()
    .如果结束
    
.计次循环尾 ()
移到文件首 (id)
赋值 (位置, 读入字节集 (id, 取文件长度 (id)))
关闭文件 (id)
返回 (位置)

.子程序 查找项目, 字节集, 公开, 返回符合条件的项目索引，使用整数型来储存，每4位是一个数值。请套用“循环变量×4－3”来逐个取得。
.参数 树项目, 字节集, , 用来查找的树型框.项目
.参数 项目文本, 文本型, 可空, 空 = 忽略项目文本，只查找与项目数值一致的项目！可忽略大小写。
.参数 项目数值, 整数型, 可空, 空 = 忽略项目数值，只查找与项目文本一致的项目！但与参数二不能同时为空！
.参数 是否精确, 逻辑型, 可空, 默认为真，精确查找，否则查找包含项目文本且等项目数值的所有项目。

.局部变量 首位置, 整数型, , , 
.局部变量 下位置, 整数型, , , 
.局部变量 标题, 文本型, , , 
.局部变量 数值, 整数型, , , 
.局部变量 i, 整数型, , , 
.局部变量 结果位置, 整数型, , "0", 

.如果真 (小于 (取字节集长度 (树项目), 21))
    返回 ({  })
.如果真结束
赋值 (下位置, 寻找字节集 (树项目, { 0 }, ))
.计次循环首 (整除 (取字节集长度 (树项目), 21), i)
    .如果 (等于 (下位置, 1))
        赋值 (标题, “”)
        赋值 (首位置, 1)
        赋值 (下位置, 寻找字节集 (树项目, { 0 }, 相加 (首位置, 22)))
    .否则
        .如果 (等于 (首位置, 0))
            赋值 (标题, 到文本 (取字节集中间 (树项目, 1, 相减 (下位置, 1))))
        .否则
            赋值 (标题, 到文本 (取字节集中间 (树项目, 相加 (首位置, 21), 相减 (下位置, 1))))
        .如果结束
        赋值 (首位置, 下位置)
        .如果 (大于或等于 (相加 (首位置, 21), 取字节集长度 (树项目)))
            跳出循环 ()
        .否则
            赋值 (下位置, 寻找字节集 (树项目, { 0 }, 相加 (首位置, 22)))
        .如果结束
        
    .如果结束
    赋值 (数值, 取字节集数据 (树项目, #整数型, 相加 (首位置, 9)))
    .如果真 (是否为空 (是否精确))
        赋值 (是否精确, 真)
    .如果真结束
    
    .如果 (是否精确)
        .如果 (不等于 (项目文本, “”))
            .如果真 (或者 (等于 (标题, 项目文本), 并且 (等于 (标题, 项目文本), 等于 (数值, 项目数值))))
                加入成员 (结果位置, 相减 (i, 1))
            .如果真结束
            
        .否则
            .如果真 (等于 (是否为空 (项目数值), 假))
                .如果真 (等于 (数值, 项目数值))
                    加入成员 (结果位置, 相减 (i, 1))
                .如果真结束
                
            .如果真结束
            
        .如果结束
        
    .否则
        .如果 (不等于 (项目文本, “”))
            .如果真 (或者 (不等于 (寻找文本 (标题, 项目文本, , 真), -1), 并且 (不等于 (寻找文本 (标题, 项目文本, , 真), -1), 等于 (数值, 项目数值))))
                加入成员 (结果位置, 相减 (i, 1))
            .如果真结束
            
        .否则
            .如果真 (等于 (是否为空 (项目数值), 假))
                .如果真 (等于 (数值, 项目数值))
                    加入成员 (结果位置, 相减 (i, 1))
                .如果真结束
                
            .如果真结束
            
        .如果结束
        
    .如果结束
    
.计次循环尾 ()
返回 (到字节集 (结果位置))


 ' 不属于任何一个程序集、类模块的函数：
