 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：虫子
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 256
    高度 = 220
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “”
    帮助文件名 = “”

窗口 窗口1
    左边 = 50
    顶边 = 50
    宽度 = 273
    高度 = 137
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “关于”
    帮助文件名 = “”





 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 4 系统核心支持库
 ' iext 27bb20fdd3e145e4bee3db39ddd6e64c 1 2 扩展界面支持库一





.DLL命令 打开注册表项_, 整数型, "advapi32.dll", "RegOpenKeyA", , 
    .参数 标准项名或句柄, 整数型, , hKey，一个已打开项的句柄，或指定一个标准项名
    .参数 项名, 文本型, , lpSubKey，要打开的项名
    .参数 打开注册表项句柄, 整数型, 传址, phkResult，指定一个变量，用于装载（保存）打开注册表项的一个句柄

.DLL命令 枚举键值, 整数型, "", "RegEnumValueA", , 零（ERROR_SUCCESS）表示成功。其他任何值都代表一个错误代码
    .参数 句柄, 整数型, , 一个已打开项的句柄，或者指定一个标准项名
    .参数 表项索引, 整数型, , 欲获取值的索引。注意第一个值的索引编号为零
    .参数 子键名, 文本型, , 用于装载位于指定索引处值名的一个缓冲区
    .参数 子键长度, 整数型, 传址, 用于装载lpValueName缓冲区长度的一个变量。一旦返回，它会设为实际载入缓冲区的字符数量
    .参数 lpReserved, 整数型, , 未用设为零
    .参数 键值类型, 整数型, , 值的类型，用于装载值的类型代码的变量
    .参数 键值数据, 字节集, , 用于装载值数据的一个缓冲区
    .参数 键值缓寸, 整数型, 传址, 用于装载lpData缓冲区长度的一个变量。一旦返回，它会设为实际载入缓冲区的字符数量

.DLL命令 枚举子键, 整数型, "", "RegEnumKeyA", , 零（ERROR_SUCCESS）表示成功。其他任何值都代表一个错误代码。在Win32环境中应使用RegEnumKeyEx.用RegQueryInfoKey判断容纳最长那个项所需的缓冲区长度
    .参数 句柄, 整数型, , 一个已打开项的句柄，或者指定一个标准项名
    .参数 表项索引, 整数型, , 欲获取的子项的索引。第一个子项的索引编号为零
    .参数 子键名, 文本型, , 用于装载指定索引处项名的一个缓冲区
    .参数 子键长度, 整数型, 传址, lpName(子键名)缓冲区的长度

.窗口程序集 窗口程序集1, , , 

.子程序 __启动窗口_创建完毕, 空白型, , 
赋值 (.现行选中项, 0)
列出禁止的项目 ()
载入 (窗口1, , 真)

.子程序 _按钮1_被单击, 空白型, , 
.如果真 (不等于 (.内容, “”))
    加入注册表 (.内容, 真, .现行选中项)
.如果真结束


.子程序 加入注册表, 空白型, , 
.参数 cs文件名, 文本型, , 
.参数 a, 逻辑型, , 真为加入,假为删除
.参数 是否允许, 整数型, 可空, 0为禁止运行

.局部变量 t, 文本型, , , 

赋值 (.标题, “”)
.如果 (a)
    .如果真 (等于 (是否允许, 0))
        赋值 (t, “rundll32”)
    .如果真结束
    .如果 (写注册项 (4, 相加 (“SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\”, cs文件名, “\debugger”), t))
        赋值 (.内容, “”)
        赋值 (.标题, “操作成功.”)
        赋值 (.文本颜色, #蓝色)
    .否则
        赋值 (.标题, “操作失败.”)
        赋值 (.文本颜色, #红色)
    .如果结束
    
.否则
    .如果 (删除注册项 (4, 相加 (“SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\”, cs文件名, “\”)))
        赋值 (.标题, “操作成功.”)
        赋值 (.文本颜色, #蓝色)
    .否则
        赋值 (.标题, “操作失败.”)
        赋值 (.文本颜色, #红色)
    .如果结束
    
.如果结束
列出禁止的项目 ()

.子程序 _超级列表框1_右键单击表项, 空白型, , 
.如果 (大于 (., -1))
    弹出菜单 ()
.否则
    弹出菜单 ()
.如果结束



.子程序 _删除_被选择, 空白型, , 
加入注册表 (.取标题 (., ), 假)
.删除表项 (.)

.子程序 列出禁止的项目, 空白型, , 
.局部变量 句柄, 整数型, , , 
.局部变量 返回值, 整数型, , , 
.局部变量 索引, 整数型, , , 
.局部变量 tmp, 文本型, , , 
.局部变量 结果, 整数型, , , 
.局部变量 键名, 文本型, , , 
.局部变量 键值, 字节集, , , 
.局部变量 键句柄, 整数型, , , 
.局部变量 i, 整数型, , , 

全部删除 ()
打开注册表项_ (-2147483646, “SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\”, 句柄)
赋值 (tmp, 取空白文本 (255))
赋值 (_启动窗口.标题, 到文本 ({ 189, 251, 214, 185, 179, 204, 208, 242, 212, 203, 208, 208, 32, 45, 98, 121, 32, 179, 230, 215, 211 }))
.判断循环首 (等于 (返回值, 0))
    赋值 (未知函数_167837761 (取文本长度 ()))
    .如果真 (不等于 (0))
        跳出循环 ()
    .如果真结束
    打开注册表项_ (-2147483646, 相加 (“SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\”, tmp, “\”), 键句柄)
    赋值 (结果, 0)
    赋值 (i, 0)
    .判断循环首 (等于 (结果, 0))
        赋值 (取空白文本 (255))
        赋值 (取空白字节集 (255))
        赋值 (结果, 枚举键值 (键句柄, i, 键名, 取文本长度 (键名), 0, 0, 键值, 取字节集长度 (键值)))
        .如果真 (不等于 (0))
            跳出循环 ()
        .如果真结束
        .如果真 (等于 (到小写 (键名), “debugger”))
            .判断开始 (等于 (到小写 (到文本 (键值)), “rundll32”))
                0.插入表项 ()
                0.置标题 (1, “禁止”)
            .判断 (等于 (到小写 (到文本 (键值)), “”))
                0.插入表项 ()
                0.置标题 (1, “允许”)
            .默认
                
            .判断结束
            
        .如果真结束
        赋值 (i, 相加 (i, 1))
    .判断循环尾 ()
    赋值 (索引, 相加 (索引, 1))
.判断循环尾 ()


.子程序 _允许运行_被选择, 空白型, , 
加入注册表 (.取标题 (., ), 真, 1)

.子程序 _禁止运行_被选择, 空白型, , 
加入注册表 (.取标题 (., ), 真, 0)

.子程序 _置顶_被选择, 空白型, , 
赋值 (.总在最前, 取反 (.总在最前))
赋值 (.选中, _启动窗口.总在最前)


.子程序 _关于_被选择, 空白型, , 
载入 (窗口1, , 真)


.窗口程序集 窗口程序集2, , , 

.子程序 _窗口1_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

窗口1.销毁 ()



 ' 不属于任何一个程序集、类模块的函数：
