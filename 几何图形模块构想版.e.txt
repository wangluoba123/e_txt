 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 900
    高度 = 700
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假





 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 5 0 系统核心支持库




数据类型 图形, , 
    .成员 绝对坐标, 子坐标系, , , 绝对坐标系的原点在画板坐标系中的位置和角度变化
    .成员 用户坐标, 子坐标系, , , 用户坐标系的原点在绝对坐标系中的位置和角度变化
    .成员 点, 点, , "1", 
    .成员 直线, 直线段, , "1", 
    .成员 三角形, 三角形, , "1", 

数据类型 绘图对象类, , 
    .成员 坐标类, 坐标类, , , 
    .成员 点类, 点类, , , 
    .成员 点样式类, 点样式类, , , 
    .成员 角度类, 角度类, , , 
    .成员 直线类, 直线段类, , , 
    .成员 直线样式类, 直线样式类, , , 

数据类型 子坐标系, , 
    .成员 原点, 坐标, , , 原点在母系中的位置
    .成员 转角, 子坐标系转角, , , 子系轴正方向与母系轴正方向的夹角
    .成员 比例, 子坐标系比例, , , 单位长度与母系单位长度之比值

数据类型 子坐标系转角, , 
    .成员 X轴转角, 双精度小数型, , , X轴正方向与母系X轴正方向的夹角
    .成员 Y轴转角, 双精度小数型, , , Y轴正方向与母系Y轴正方向的夹角
    .成员 Z轴转角, 双精度小数型, , , Z轴正方向与母系Z轴正方向的夹角

数据类型 子坐标系比例, , 
    .成员 X轴比例, 双精度小数型, , , X轴单位长度与母系X轴单位长度之比
    .成员 Y轴比例, 双精度小数型, , , Y轴单位长度与母系Y轴单位长度之比
    .成员 Z轴比例, 双精度小数型, , , Z轴单位长度与母系Z轴单位长度之比

数据类型 坐标, , 
    .成员 x, 双精度小数型, , , 
    .成员 y, 双精度小数型, , , 
    .成员 z, 双精度小数型, , , 

数据类型 坐标平移, , 
    .成员 DX, 双精度小数型, , , 子坐标系相对于母坐标系在X轴上的移动量
    .成员 DY, 双精度小数型, , , 子坐标系相对于母坐标系在Y轴上的移动量
    .成员 DZ, 双精度小数型, , , 子坐标系相对于母坐标系在Z轴上的移动量

数据类型 坐标集, , 
    .成员 坐标, 坐标, , "1", 该点集的成员

数据类型 点坐标, , 
    .成员 画板, 坐标, , , 
    .成员 绝对, 坐标, , , 
    .成员 用户, 坐标, , , 

数据类型 点坐标集, , 
    .成员 点坐标, 点坐标, , "1", 

数据类型 度分秒, , 
    .成员 度, 双精度小数型, , , 
    .成员 分, 双精度小数型, , , 
    .成员 秒, 双精度小数型, , , 

数据类型 点样式, , 
    .成员 起点, 坐标, , "4", 
    .成员 尾点, 坐标, , "4", 

数据类型 点, , 
    .成员 句柄, 整数型, , , 
    .成员 样式, 整数型, , , 图形的样式
    .成员 颜色, 整数型, , , 
    .成员 坐标, 点坐标, , , 任何一个单点都在三个坐标系中注册

数据类型 线元, , 构成直线的基本要素,由于它不作为面向用户的基本图形,所以不需要锚点等无用信息，线元的坐标系统是以直线的延伸方向为X向，以线元的插入点为坐标原点，以前进方向左转90度为Y向，所以插入时需要进行坐标转换
    .成员 端距, 双精度小数型, , "1", 本成员告诉程序在绘画本线型图元时,应当距直线两端点多少距离开始画第一个图元
    .成员 间距, 双精度小数型, , "1", 
    .成员 点样式, 整数型, , "1", 

数据类型 线型, , 
    .成员 绝对线型, 线元, , , 
    .成员 打印线型, 线元, , , 
    .成员 显示线型, 线元, , , 
    .成员 选中线型, 线元, , , 
    .成员 鼠标经过线型, 线元, , , 

数据类型 线宽, , 
    .成员 绝对宽, 双精度小数型, , , 
    .成员 打印宽, 双精度小数型, , , 直径,即线宽
    .成员 显示宽, 双精度小数型, , , 如果有线宽属性,那么也应该是整条直线粗细一致,否则应当用其它立体几何图形来表示了
    .成员 选中宽, 双精度小数型, , , 
    .成员 鼠标经过宽, 双精度小数型, , , 

数据类型 线颜色, , 
    .成员 打印色, 整数型, , , 
    .成员 显示色, 整数型, , , 
    .成员 选中色, 整数型, , , 
    .成员 鼠标经过色, 整数型, , , 

数据类型 线样式, , 
    .成员 线型, 线型, , , 
    .成员 线宽, 线宽, , , 
    .成员 颜色, 线颜色, , , 

数据类型 线段系数, , 
    .成员 A, 双精度小数型, , , 
    .成员 B, 双精度小数型, , , 
    .成员 C, 双精度小数型, , , 
    .成员 Lxy, 双精度小数型, , , 在XY平面上的投影绝对长度
    .成员 Lx, 双精度小数型, , , 在X轴的投影长度,直线端点相对于起点,在X轴上的增量,可为负数
    .成员 Ly, 双精度小数型, , , 在Y轴的投影长度,直线端点相对于起点,在Y轴上的增量,可为负数
    .成员 ky_x, 双精度小数型, , , 斜率dy/dx dx为0其值为无穷大,无意义
    .成员 kx_y, 双精度小数型, , , 斜率dx/dy dy为0其值为无穷大,无意义
    .成员 方位角, 双精度小数型, , , 

数据类型 直线段, , 
    .成员 起点, 点坐标, , , 
    .成员 尾点, 点坐标, , , 
    .成员 句柄, 整数型, , , 
    .成员 样式, 整数型, , , 图形的样式
    .成员 颜色, 整数型, , , 
    .成员 系数, 线段系数, , , 

数据类型 直线段集, , 
    .成员 直线, 直线段, , "1", 

数据类型 三角形, 公开, 
    .成员 顶点A, 点坐标, , , 
    .成员 顶点B, 点坐标, , , 
    .成员 顶点C, 点坐标, , , 
    .成员 句柄, 整数型, , , 
    .成员 信息, 三角形信息, , , 三角形注册时及移动变形时,就应当将其相关信息进行计算

数据类型 三角形信息, 公开, 三角形在实际几何计算中有非常重要的作用,可以大规模地简化程序代码量,但也会因此计算大量的无用信息
    .成员 边长a, 双精度小数型, , , 
    .成员 边长b, 双精度小数型, , , 
    .成员 边长c, 双精度小数型, , , 
    .成员 边线AB, 直线段, , , 
    .成员 边线BC, 直线段, , , 
    .成员 边线CA, 直线段, , , 
    .成员 高线A, 直线段, , , 垂线
    .成员 高线B, 直线段, , , 垂线
    .成员 高线C, 直线段, , , 垂线
    .成员 中线A, 直线段, , , 角平分线
    .成员 中线B, 直线段, , , 角平分线
    .成员 中线C, 直线段, , , 角平分线
    .成员 角A, 双精度小数型, , , 
    .成员 角B, 双精度小数型, , , 
    .成员 角C, 双精度小数型, , , 
    .成员 形心O, 点坐标, , , 
    .成员 边垂点a, 点坐标, , , 
    .成员 边垂点b, 点坐标, , , 
    .成员 边垂点c, 点坐标, , , 
    .成员 边中点a, 点坐标, , , 
    .成员 边中点b, 点坐标, , , 
    .成员 边中点c, 点坐标, , , 

数据类型 高差集, , 
    .成员 高差, 整数型, , "1", 
    .成员 闭合差, 双精度小数型, , , 

数据类型 水准点, , 
    .成员 点名, 文本型, , , 
    .成员 点序号, 整数型, , , 
    .成员 点类型, 文本型, , , 
    .成员 桩号, 文本型, , , 
    .成员 高程, 双精度小数型, , , 
    .成员 坐标, 坐标, , , 

数据类型 水准点集, , 
    .成员 水准点, 水准点, , "1", 

数据类型 测站, , 
    .成员 测站号, 整数型, , , 
    .成员 后视点, 水准点, , , 
    .成员 后视读数, 双精度小数型, , , 
    .成员 前视读数, 双精度小数型, , , 
    .成员 实测高差, 双精度小数型, , , 
    .成员 改正数, 双精度小数型, , , 
    .成员 改正后高差, 双精度小数型, , , 
    .成员 前视点, 水准点, , , 

数据类型 测站集, , 
    .成员 测站, 测站, , "1", 

.全局变量 绘图, 绘图对象类, , , 
.全局变量 图形, 图形, , , 

.窗口程序集 窗口程序集1, , , 

.子程序 生成高差集, 高差集, , 
.参数 总高差, 双精度小数型, , 
.参数 闭合差, 双精度小数型, , 
.参数 高差数, 整数型, , 

.局部变量 高差集, 高差集, , , 

返回 (高差集)

.子程序 生成测量数据, 测站集, , 
.参数 起点, 水准点, , 
.参数 终点, 水准点, , 
.参数 测站数, 整数型, , 

.局部变量 高差集, 高差集, , , 
.局部变量 测站集, 测站集, , , 
.局部变量 改正数, 双精度小数型, , , 
.局部变量 i, 整数型, , , 
.局部变量 j, 整数型, , , 

置随机数种子 ()
重定义数组 (测站集.测站, 假, 测站数)
赋值 (高差集, 生成高差集 (相减 (终点.高程, 起点.高程), 0.035, 测站数))
.计次循环首 (测站数, i)
    .判断开始 (等于 (i, 1))
        赋值 (测站集.测站 [1].测站号, 1)
        赋值 (测站集.测站 [1].后视点, 起点)
        赋值 (测站集.测站 [1].后视点.点序号, 1)
        赋值 (测站集.测站 [1].实测高差, 高差集 [1])
        赋值 (测站集.测站 [1].后视读数, 相加 (1.5, 相除 (高差集 [1], 2), 相除 (取随机数 (1, 200), 1000)))
        赋值 (测站集.测站 [1].前视读数, 相加 (测站集.测站 [1].后视读数, 高差集 [1]))
        赋值 (测站集.测站 [1].前视点.点序号, 2)
        
    .默认
        赋值 (测站集.测站 [i], 测站号, i)
        赋值 (测站集.测站 [i], 后视点, 测站集.测站 [相减 (i, 1)].前视点)
        赋值 (测站集.测站 [i], 实测高差, 高差集 [i])
        赋值 (测站集.测站 [i], 后视读数, 相加 (1.5, 相除 (高差集 [i], 2), 相除 (取随机数 (1, 200), 1000)))
        赋值 (测站集.测站 [i], 前视读数, 相加 (测站集.测站 [i], 后视读数, 高差集 [i]))
        赋值 (测站集.测站 [i], 前视点.点序号, 相加 (测站集.测站 [i], 后视点.点序号, 1))
        .如果真 (等于 (i, 测站数))
            赋值 (测站集.测站 [i], 前视点.点名, 终点.点名)
            赋值 (测站集.测站 [i], 前视点.桩号, 终点.桩号)
            赋值 (测站集.测站 [i], 前视点.坐标, 终点.坐标)
            赋值 (测站集.测站 [i], 前视点.点类型, 终点.点类型)
            
            
            赋值 (改正数, 四舍五入 (相除 (高差集.闭合差, 测站数), 4))
            .计次循环首 (测站数, j)
                赋值 (测站集.测站 [j], 改正数, 改正数)
                赋值 (测站集.测站 [j], 改正后高差, 相加 (测站集.测站 [j], 实测高差, 测站集.测站 [j], 改正数))
                赋值 (测站集.测站 [j], 前视点.高程, 相加 (测站集.测站 [j], 后视点.高程, 测站集.测站 [j], 改正后高差))
                .如果真 (等于 (j, 测站数))
                    赋值 (测站集.测站 [j], 改正数, 相加 (相减 (测站集.测站 [j], 前视点.高程, 终点.高程), 测站集.测站 [j], 改正数))
                    赋值 (测站集.测站 [j], 前视点.高程, 终点.高程)
                .如果真结束
                
            .计次循环尾 ()
            
        .如果真结束
        
    .判断结束
    
.计次循环尾 ()


.子程序 _按钮1_被单击, 空白型, , 
.局部变量 直线, 直线段, , , 
.局部变量 点坐标, 点坐标, , , 
.局部变量 点, 点, , , 
.局部变量 i, 整数型, , , 

赋值 (直线.起点.用户.x, 1)
赋值 (直线.起点.用户.y, 20)
赋值 (直线.尾点.用户.x, 900)
赋值 (直线.尾点.用户.y, 500)
赋值 (直线.样式, 2)
绘图.求系数 (.直线类, 直线)
绘图.绘制直线段 (.直线类, , 直线)

.计次循环首 (50, i)
    赋值 (点坐标.用户.x, 相加 (相乘 (求正弦 (相乘 (i, 9)), 100), 200))
    赋值 (点坐标.用户.y, 相加 (相乘 (求余弦 (相乘 (i, 9)), 100), 200))
    赋值 (点.坐标, 点坐标)
    赋值 (点.样式, 取随机数 (1, 2))
    绘图.绘制点 (.点类, , 点)
.计次循环尾 ()

.子程序 _按钮3_被单击, 空白型, , 
.局部变量 抛物线类, 抛物线类, , , 

抛物线类.定义抛物线 (-0.5, 30, 50)
抛物线类.生成抛物线 (-20, 80, 1)
抛物线类.绘制抛物线 ()

.类模块 坐标类, , , 

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 画板坐标_转_绝对坐标, 点坐标, 公开, 绝对坐标系位于画板坐标系中，以画板坐标系为母坐标系，Y轴倒转180度，X轴与画板一样，Z轴为远离屏幕方向
.参数 坐标系, 点坐标, 参考, 提供画板坐标，返回绝对坐标。

 ' 坐标系.绝对.x ＝ (坐标系.画板.x － 图形.绝对坐标.原点.x) × 图形.绝对坐标.比例
 ' 坐标系.绝对.y ＝ (图形.绝对坐标.原点.y － 坐标系.画板.y) × 图形.绝对坐标.比例
 ' 坐标系.绝对.z ＝ (坐标系.画板.z － 图形.绝对坐标.原点.z) × 图形.绝对坐标.比例
返回 (坐标系)

.子程序 绝对坐标_转_用户坐标, 点坐标, , 
.参数 坐标系, 点坐标, 参考, 

 ' 坐标系.用户.x ＝ (坐标系.绝对.x － 图形.用户坐标.原点.x) × 图形.用户坐标.比例
 ' 坐标系.用户.y ＝ (坐标系.绝对.y － 图形.用户坐标.原点.y) × 图形.用户坐标.比例
 ' 坐标系.用户.z ＝ (坐标系.绝对.z － 图形.用户坐标.原点.z) × 图形.用户坐标.比例
返回 (坐标系)

.子程序 用户坐标_转_绝对坐标, 点坐标, , 
.参数 坐标系, 点坐标, 参考, 

赋值 (坐标系.绝对.x, 坐标系.用户.x)
赋值 (坐标系.绝对.y, 坐标系.用户.y)
赋值 (坐标系.绝对.z, 坐标系.用户.z)
返回 (坐标系)

.子程序 绝对坐标_转_画板坐标, 点坐标, 公开, 
.参数 坐标系, 点坐标, 参考, 

赋值 (坐标系.画板.x, 坐标系.绝对.x)
赋值 (坐标系.画板.y, 负 (坐标系.绝对.y))
赋值 (坐标系.画板.z, 坐标系.绝对.z)
返回 (坐标系)


.子程序 平移坐标系, 坐标, , 平移点的参照坐标系,点的绝对位置不变,当坐标系平移到与另一坐标系重合时,相当于改变了点的参照坐标系
.参数 C_点, 坐标, 参考, 
.参数 C_移动量, 坐标平移, , 坐标系相对于其本身原来的位置的移动量,只能是平移,不能转动,移动量有正负,以坐标系本身的方向为准
.参数 C_修改坐标值, 逻辑型, 可空, 如果为真,将对参数所提供的点的坐标数据进行修改,否则不会修改

.局部变量 点, 坐标, , , 

赋值 (点, C_点)
赋值 (点.x, 相减 (点.x, C_移动量.DX))
赋值 (点.y, 相减 (点.y, C_移动量.DY))
.如果真 (C_修改坐标值)
    赋值 (C_点, 点)
.如果真结束
返回 (点)

.子程序 旋转坐标系, 坐标, , 
.参数 C_点, 坐标, 参考, 
.参数 C_转角度数, 双精度小数型, , 坐标系相对于其本身原来的位置的旋转角度,只能是以原坐标轴线为转动轴进行转动,如同时也发生了坐标平移,应该分步计算
.参数 C_修改坐标值, 逻辑型, 可空, 如果为真,将对参数所提供的点的坐标数据进行修改,否则不会修改

.局部变量 点, 坐标, , , 

赋值 (点, C_点)
赋值 (点.x, 相减 (点.x, C_转角度数))
赋值 (点.y, 相减 (点.y, C_转角度数))
.如果真 (C_修改坐标值)
    赋值 (C_点, 点)
.如果真结束

返回 (点)

.类模块 点样式类, , , 

.程序集变量 私点样式, 点样式, , "2", 
.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用
生成常用点样式 ()

.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 生成常用点样式, 空白型, , 
赋值 (私点样式 [1].起点 [1].x, 0)
赋值 (私点样式 [1].起点 [1].y, -1)
赋值 (私点样式 [1].尾点 [1].x, 0)
赋值 (私点样式 [1].尾点 [1].y, 1)
赋值 (私点样式 [1].起点 [2].x, -1)
赋值 (私点样式 [1].起点 [2].y, 0)
赋值 (私点样式 [1].尾点 [2].x, 1)
赋值 (私点样式 [1].尾点 [2].y, 0)
赋值 (私点样式 [1].起点 [3].x, -1)
赋值 (私点样式 [1].起点 [3].y, -1)
赋值 (私点样式 [1].尾点 [3].x, 1)
赋值 (私点样式 [1].尾点 [3].y, 1)
赋值 (私点样式 [1].起点 [4].x, 1)
赋值 (私点样式 [1].起点 [4].y, -1)
赋值 (私点样式 [1].尾点 [4].x, -1)
赋值 (私点样式 [1].尾点 [4].y, 1)

赋值 (私点样式 [2].起点 [1].x, -1)
赋值 (私点样式 [2].起点 [1].y, -1)
赋值 (私点样式 [2].尾点 [1].x, 1)
赋值 (私点样式 [2].尾点 [1].y, -1)
赋值 (私点样式 [2].起点 [2].x, 1)
赋值 (私点样式 [2].起点 [2].y, -1)
赋值 (私点样式 [2].尾点 [2].x, 1)
赋值 (私点样式 [2].尾点 [2].y, 1)
赋值 (私点样式 [2].起点 [3].x, 1)
赋值 (私点样式 [2].起点 [3].y, 1)
赋值 (私点样式 [2].尾点 [3].x, -1)
赋值 (私点样式 [2].尾点 [3].y, 1)
赋值 (私点样式 [2].起点 [4].x, -1)
赋值 (私点样式 [2].起点 [4].y, 1)
赋值 (私点样式 [2].尾点 [4].x, -1)
赋值 (私点样式 [2].尾点 [4].y, -1)


.子程序 取点样式, 点样式, , 
.参数 参_样式, 整数型, , 

返回 (私点样式 [参_样式])

.类模块 点类, , , 

.程序集变量 私点句柄, 整数型, , "0", 
.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 取句柄, 整数型, , 已验证为正确的程序 
.局部变量 i, 整数型, , , 

.判断开始 (等于 (取数组成员数 (私点句柄), 0))
    加入成员 (私点句柄, 1)
    加入成员 (私点句柄, 0)
    返回 (1)
.默认
    .计次循环首 (取数组成员数 (私点句柄), i)
        .如果真 (等于 (私点句柄 [i], 0))
            赋值 (私点句柄 [i], i)
            .如果真 (等于 (i, 取数组成员数 (私点句柄)))
                加入成员 (私点句柄, 0)
            .如果真结束
            跳出循环 ()
        .如果真结束
        
    .计次循环尾 ()
    返回 (i)
.判断结束



.子程序 绘制点, 空白型, , 
.参数 参_画板, 画板, , 
.参数 参_单点, 点, , 
.参数 参_放大, 整数型, 可空, 

.局部变量 点样式, 点样式, , , 
.局部变量 i, 整数型, , , 

.如果真 (是否为空 (参_放大))
    赋值 (参_放大, 5)
.如果真结束
 ' 参_画板.画笔颜色 ＝ 参_单点.颜色
赋值 (点样式, 绘图.取点样式 (.点样式类, 参_单点.样式))
.计次循环首 (取数组成员数 (点样式.起点), i)
    参_画板.画直线 (相加 (参_单点.坐标.用户.x, 相乘 (点样式.起点 [i], x, 参_放大)), 相加 (参_单点.坐标.用户.y, 相乘 (点样式.起点 [i], y, 参_放大)), 相加 (参_单点.坐标.用户.x, 相乘 (点样式.尾点 [i], x, 参_放大)), 相加 (参_单点.坐标.用户.y, 相乘 (点样式.尾点 [i], y, 参_放大)))
.计次循环尾 ()


.子程序 注册点, 点, , 
.参数 参_点, 点, , 

赋值 (参_点.句柄, 取句柄 ())
加入成员 (图形.点, 参_点)
返回 (参_点)

.子程序 删除点, 空白型, , 
.参数 参_T单点, 点, , 

.局部变量 i, 整数型, , , 

.计次循环首 (取数组成员数 (图形.点), i)
    .如果真 (等于 (图形.点 [i], 句柄, 参_T单点.句柄))
        删除成员 (图形.点, i, 1)
    .如果真结束
    
.计次循环尾 ()
赋值 (私点句柄 [参_T单点].句柄, 0)


.子程序 求两点距离, 双精度小数型, , ok.
.参数 C_起点, 点坐标, , 
.参数 C_终点, 点坐标, , 

返回 (求平方根 (相加 (求次方 (相减 (C_终点.用户.x, C_起点.用户.x), 2), 求次方 (相减 (C_终点.用户.y, C_起点.用户.y), 2))))

.类模块 角度类, , , 

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 弧度转角度, 双精度小数型, , 返回角度,
.参数 C_弧度, 双精度小数型, , 

返回 (相除 (相乘 (C_弧度, 180), #pi))

.子程序 角度转弧度, 双精度小数型, , 返回弧度,
.参数 C_角度, 双精度小数型, , 

返回 (相除 (相乘 (C_角度, #pi), 180))

.子程序 转为度数, 双精度小数型, , 度分秒的形式转为十进制度数
.参数 C_DFM, 度分秒, , 

.局部变量 整部, 整数型, , , 
.局部变量 小部, 双精度小数型, , , 

赋值 (C_DFM.度, 相加 (C_DFM.度, 相除 (C_DFM.分, 60), 相除 (C_DFM.秒, 3600)))
赋值 (整部, 绝对取整 (取绝对值 (C_DFM.度)))
赋值 (小部, 相减 (取绝对值 (C_DFM.度), 整部))
.判断开始 (小于 (整部, 360))
    
.默认
    赋值 (整部, 求余数 (整部, 360))
.判断结束
赋值 (C_DFM.度, 相乘 (取符号 (C_DFM.度), 相加 (整部, 小部)))
返回 (C_DFM.度)

.子程序 转为度分秒, 度分秒, , 十进制度数转为度分秒的形式
.参数 C_角度, 双精度小数型, , 

.局部变量 DFM, 度分秒, 静态, , 这里返回度数部分

赋值 (DFM.度, 绝对取整 (C_角度))
赋值 (DFM.分, 绝对取整 (相乘 (相减 (C_角度, DFM.度), 60)))
赋值 (DFM.秒, 四舍五入 (相乘 (相减 (C_角度, DFM.度, 相除 (DFM.分, 60)), 3600), ))
.判断开始 (不等于 (DFM.秒, 60))
    
.默认
    赋值 (DFM.秒, 0)
    赋值 (DFM.分, 相加 (DFM.分, 1))
.判断结束

.判断开始 (不等于 (DFM.分, 60))
    
.默认
    赋值 (DFM.分, 0)
    赋值 (DFM.度, 相加 (DFM.度, 1))
.判断结束

.判断开始 (不等于 (DFM.度, 360))
    
.默认
    赋值 (DFM.度, 0)
.判断结束

返回 (DFM)

.类模块 直线段类, , , 

.程序集变量 私直线句柄, 整数型, , "0", 
.子程序 取句柄, 整数型, , 已验证为正确的程序 
.局部变量 i, 整数型, , , 

.判断开始 (等于 (取数组成员数 (私直线句柄), 0))
    加入成员 (私直线句柄, 1)
    加入成员 (私直线句柄, 0)
    返回 (1)
.默认
    .计次循环首 (取数组成员数 (私直线句柄), i)
        .如果真 (等于 (私直线句柄 [i], 0))
            赋值 (私直线句柄 [i], i)
            .如果真 (等于 (i, 取数组成员数 (私直线句柄)))
                加入成员 (私直线句柄, 0)
            .如果真结束
            跳出循环 ()
        .如果真结束
        
    .计次循环尾 ()
    返回 (i)
.判断结束



.子程序 注册直线段, 直线段, , 
.参数 参_直线, 直线段, , 

赋值 (参_直线.句柄, 取句柄 ())
加入成员 (图形.直线, 参_直线)
返回 (参_直线)

.子程序 删除直线段, 空白型, , 
.参数 参_直线, 直线段, , 

.局部变量 i, 整数型, , , 

.计次循环首 (取数组成员数 (图形.直线), i)
    .如果真 (等于 (图形.直线 [i], 句柄, 参_直线.句柄))
        删除成员 (图形.直线, i, 1)
    .如果真结束
    
.计次循环尾 ()
赋值 (私直线句柄 [参_直线].句柄, 0)

.子程序 绘制直线段, 空白型, , 
.参数 参_画板, 画板, , 
.参数 参_直线, 直线段, , 

.局部变量 直线样式, 线样式, , , 
.局部变量 点个数, 整数型, , , 
.局部变量 点坐标, 点坐标, , , 
.局部变量 点, 点, , , 
.局部变量 i, 整数型, , , 
.局部变量 j, 整数型, , , 

赋值 (参_画板., 参_直线.颜色)
.判断开始 (不等于 (参_直线.样式, 0))
    赋值 (直线样式, 绘图.取直线样式 (.直线样式类, 参_直线.样式))
    .计次循环首 (取数组成员数 (直线样式.线型.绝对线型.点样式), i)
        赋值 (点个数, 相除 (参_直线.系数.Lxy, 直线样式.线型.绝对线型.间距 [i]))
        .计次循环首 (点个数, j)
            赋值 (点坐标.用户.x, 相加 (相乘 (相除 (相乘 (直线样式.线型.绝对线型.间距 [i], j), 参_直线.系数.Lxy), 参_直线.系数.Lx), 参_直线.起点.用户.x))
            赋值 (点坐标.用户.y, 相加 (相乘 (相除 (相乘 (直线样式.线型.绝对线型.间距 [i], j), 参_直线.系数.Lxy), 参_直线.系数.Ly), 参_直线.起点.用户.y))
            赋值 (点.样式, 直线样式.线型.绝对线型.点样式 [i])
            赋值 (点.坐标, 点坐标)
            绘图.绘制点 (.点类, 参_画板, 点)
        .计次循环尾 ()
    .计次循环尾 ()
.默认
    参_画板.画直线 (参_直线.起点.用户.x, 参_直线.起点.用户.y, 参_直线.尾点.用户.x, 参_直线.尾点.用户.y)
.判断结束


.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 求方位角弧度, 双精度小数型, , 返回弧度
.参数 C_直线, 直线段, , 此参数用来直接提供直线数据

.局部变量 dx, 双精度小数型, 静态, , 横坐标增量
.局部变量 dy, 双精度小数型, 静态, , 纵坐标增量
.局部变量 方位角, 双精度小数型, 静态, , 
.局部变量 方向角, 双精度小数型, , , 
.局部变量 所在象限, 整数型, , , 

赋值 (dx, 相减 (C_直线.尾点.用户.x, C_直线.起点.用户.x))
赋值 (dy, 相减 (C_直线.尾点.用户.y, C_直线.起点.用户.y))
.如果真 (并且 (等于 (dx, 0), 等于 (dy, 0)))
    信息框 (“不能提供起始点重合的直线数据”, 0, )
    返回 (-1)
.如果真结束

赋值 (所在象限, 求象限 (dx, dy))

.判断开始 (等于 (dx, 0))
    .如果 (等于 (所在象限, 1))
        返回 (相除 (#pi, 2))
    .否则
        返回 (相乘 (相除 (#pi, 2), 3))
    .如果结束
    
.判断 (等于 (dy, 0))
    .如果 (等于 (所在象限, 1))
        返回 (0)
    .否则
        返回 (#pi)
    .如果结束
    
.默认
    赋值 (方向角, 求反正切 (相除 (dy, dx)))
.判断结束

.判断开始 (大于或等于 (dx, 0))
    .如果 (大于或等于 (dy, 0))
        赋值 (方位角, 方向角)
    .否则
        赋值 (方位角, 相减 (相乘 (2, #pi), 方向角))
    .如果结束
    
.默认
    赋值 (方位角, 相加 (#pi, 方向角))
.判断结束
返回 (方位角)

.子程序 求方位角度数, 双精度小数型, , 
.参数 C_直线, 直线段, , 此参数用来直接提供直线数据

返回 (绘图.弧度转角度 (.角度类, 求方位角弧度 (C_直线)))

.子程序 求象限, 整数型, , 返回值为1、2、3、4，对应四个象限
.参数 C_dx, 双精度小数型, , 横坐标增量,可以为负数
.参数 C_dy, 双精度小数型, , 纵坐标增量,可以为负数

.判断开始 (大于或等于 (C_dx, 0))
    .如果 (大于或等于 (C_dy, 0))
        返回 (1)
    .否则
        返回 (4)
    .如果结束
    
.判断 (大于或等于 (C_dy, 0))
    返回 (2)
.默认
    返回 (3)
.判断结束


.子程序 求系数, 线段系数, , 
.参数 C_直线, 直线段, 参考, 

.局部变量 直线系数, 线段系数, , , 

赋值 (直线系数.Lx, 相减 (C_直线.尾点.用户.x, C_直线.起点.用户.x))
赋值 (直线系数.Ly, 相减 (C_直线.尾点.用户.y, C_直线.起点.用户.y))
.如果真 (不等于 (直线系数.Lx, 0))
    赋值 (直线系数.ky_x, 相除 (直线系数.Ly, 直线系数.Lx))
.如果真结束
.如果真 (不等于 (直线系数.Ly, 0))
    赋值 (直线系数.kx_y, 相除 (直线系数.Lx, 直线系数.Ly))
.如果真结束
赋值 (直线系数.Lxy, 求平方根 (相加 (求次方 (取绝对值 (直线系数.Lx), 2), 求次方 (取绝对值 (直线系数.Ly), 2))))
赋值 (直线系数.方位角, 求方位角度数 (C_直线))
赋值 (直线系数.A, 相减 (C_直线.尾点.用户.y, C_直线.起点.用户.y))
赋值 (直线系数.B, 负 (相减 (C_直线.尾点.用户.x, C_直线.起点.用户.x)))
赋值 (直线系数.C, 相减 (相乘 (负 (直线系数.B), C_直线.起点.用户.y), 相乘 (直线系数.A, C_直线.起点.用户.x)))
赋值 (C_直线.系数, 直线系数)
返回 (直线系数)

.子程序 求中点, 坐标, , ok.
.参数 C_直线, 直线段, , 

.局部变量 中点, 坐标, , , 

赋值 (中点.x, 相加 (C_直线.起点.用户.x, 相除 (相减 (C_直线.尾点.用户.x, C_直线.起点.用户.x), 2)))
赋值 (中点.y, 相加 (C_直线.起点.用户.y, 相除 (相减 (C_直线.尾点.用户.y, C_直线.起点.用户.y), 2)))
返回 (中点)

.子程序 求导线点, 点坐标, , 测量学专用,根据已知点、方位角和导线长求下一点的坐标
.参数 C_起点, 点坐标, , 线段起点
.参数 C_方位角, 双精度小数型, , 弧度
.参数 C_导线长度, 双精度小数型, , 

.局部变量 点, 点坐标, , , 线段终点

赋值 (点.用户.x, 相加 (C_起点.用户.x, 相乘 (C_导线长度, 求余弦 (C_方位角))))
赋值 (点.用户.y, 相加 (C_起点.用户.y, 相乘 (C_导线长度, 求正弦 (C_方位角))))
返回 (点)

.子程序 求旋转点, 点坐标, , 
.参数 C_点坐标, 点坐标, , 
.参数 C_旋转中心, 点坐标, , 
.参数 C_旋转角度, 双精度小数型, , 

.局部变量 直线, 直线段, , , 

赋值 (直线.起点, C_旋转中心)
赋值 (直线.尾点, C_点坐标)
求系数 (直线)
返回 (求导线点 (C_旋转中心, 相加 (直线.系数.方位角, C_旋转角度), 直线.系数.Lxy))

.子程序 求延长点, 点坐标, , 求直线延长线上的一点的坐标
.参数 C_直线, 直线段, , 包含起点和终点的直线段
.参数 C_长度L, 双精度小数型, , 延长长度,按直线起点终点方向,从终点开始延长直线,延长长度可以为负数,表示缩短直线

.局部变量 直线系数, 线段系数, , , 
.局部变量 点, 点坐标, , , 

赋值 (直线系数, 求系数 (C_直线))
赋值 (点.用户.x, 相加 (C_直线.尾点.用户.x, 相乘 (相除 (直线系数.Lx, 直线系数.Lxy), C_长度L)))
赋值 (点.用户.y, 相加 (C_直线.尾点.用户.y, 相乘 (相除 (直线系数.Ly, 直线系数.Lxy), C_长度L)))
返回 (点)

.子程序 求转折点, 点坐标, , 
.参数 C_直线, 直线段, , 线段起点
.参数 C_转角, 双精度小数型, , 弧度,请提供正负符号,右转为正,左转为负
.参数 C_长度, 双精度小数型, , 折线长度,从转折点开始计算至新增的折线末端

.局部变量 延长点, 点坐标, , , 
.局部变量 点, 点坐标, , , 

赋值 (延长点, 求延长点 (C_直线, C_长度))
赋值 (点, 求旋转点 (延长点, C_直线.尾点, C_转角))
返回 (点)

.子程序 求垂足点, 点坐标, , 求已知直线外一点连接到这条直线的垂足点的坐标
.参数 C_直线, 直线段, , 包含起点和终点的直线段
.参数 C_点, 点坐标, , 直线外的点

.局部变量 A1, 空白型, , , 
.局部变量 B1, 空白型, , , 
.局部变量 C1, 空白型, , , 
.局部变量 A2, 空白型, , , 
.局部变量 B2, 空白型, , , 
.局部变量 C2, 空白型, , , 
.局部变量 直线1, 直线段, , , 
.局部变量 直线2, 直线段, , , 
.局部变量 点坐标, 点坐标, , , 

赋值 (直线1, C_直线)
赋值 (直线2, 求垂线段 (C_直线, C_点))
赋值 (A1, 相减 (直线1.尾点.用户.y, 直线1.起点.用户.y))
赋值 (B1, 负 (相减 (直线1.尾点.用户.x, 直线1.起点.用户.x)))
赋值 (C1, 相减 (相乘 (负 (B1), 直线1.起点.用户.y), 相乘 (A1, 直线1.起点.用户.x)))
赋值 (A2, 相减 (直线2.尾点.用户.y, 直线2.起点.用户.y))
赋值 (B2, 负 (相减 (直线2.尾点.用户.x, 直线2.起点.用户.x)))
赋值 (C2, 相减 (相乘 (负 (B2), 直线2.起点.用户.y), 相乘 (A2, 直线2.起点.用户.x)))
赋值 (点坐标.用户.x, 相除 (负 (相减 (相除 (C1, A1), 相除 (C2, A2))), 相减 (相除 (A1, B1), 相除 (A2, B2))))
赋值 (点坐标.用户.y, 相除 (负 (相减 (相除 (C1, A1), 相除 (C2, A2))), 相减 (相除 (B1, A1), 相除 (B2, A2))))
返回 (点坐标)

.子程序 求点到直线距离, 双精度小数型, , ok.求点到直线的垂线段长度,即过点向直线引垂线,计算点到该垂足点的距离
.参数 C_直线, 直线段, , 包含起点和终点的直线段
.参数 C_点, 点坐标, , 直线外的点

.局部变量 D, 双精度小数型, , , 
.局部变量 直线系数, 线段系数, , , 
.局部变量 x1, 双精度小数型, , , 
.局部变量 x2, 双精度小数型, , , 
.局部变量 x3, 双精度小数型, , , 
.局部变量 y1, 双精度小数型, , , 
.局部变量 y2, 双精度小数型, , , 
.局部变量 y3, 双精度小数型, , , 
.局部变量 z1, 双精度小数型, , , 
.局部变量 z2, 双精度小数型, , , 
.局部变量 z3, 双精度小数型, , , 

赋值 (直线系数, 求系数 (C_直线))
赋值 (D, 相除 (取绝对值 (相加 (相乘 (直线系数.A, C_点.用户.x), 相乘 (直线系数.B, C_点.用户.y), 直线系数.C)), 求平方根 (相加 (相乘 (直线系数.A, 直线系数.A), 相乘 (直线系数.B, 直线系数.B)))))
赋值 (x1, C_点.用户.x)
赋值 (y1, C_点.用户.y)
赋值 (z1, C_点.用户.z)
赋值 (x2, C_直线.起点.用户.x)
赋值 (y2, C_直线.起点.用户.y)
赋值 (z2, C_直线.起点.用户.z)
赋值 (x3, C_直线.尾点.用户.x)
赋值 (y3, C_直线.尾点.用户.y)
赋值 (z3, C_直线.尾点.用户.z)
赋值 (D, 相除 (求平方根 (相加 (求次方 (相减 (相乘 (相减 (y2, y1), 相减 (z3, z1)), 相乘 (相减 (z2, z1), 相减 (y3, y1))), 2), 求次方 (相减 (相乘 (相减 (z2, z1), 相减 (x3, x1)), 相乘 (相减 (x2, x1), 相减 (z3, z1))), 2), 求次方 (相减 (相乘 (相减 (x2, x1), 相减 (y3, y1)), 相乘 (相减 (y2, y1), 相减 (x3, x1))), 2))), 求平方根 (相加 (求次方 (相减 (x3, x2), 2), 求次方 (相减 (y3, y2), 2), 求次方 (相减 (z3, z2), 2)))))
返回 (D)

.子程序 求垂线段, 直线段, , 如果点不在直线上,就从点向直线引垂线,并返回该垂线段直线,如果点在直线上,将返回两端点重合的直线
.参数 C_直线, 直线段, , 包含起点和终点的直线段
.参数 C_点, 点坐标, , 直线外的点

.局部变量 A, 双精度小数型, , , 
.局部变量 B, 双精度小数型, , , 
.局部变量 C, 双精度小数型, , , 
.局部变量 K, 双精度小数型, , , 
.局部变量 垂足点, 点坐标, , , 
.局部变量 直线, 直线段, , , 

赋值 (A, 相减 (C_直线.尾点.用户.y, C_直线.起点.用户.y))
赋值 (B, 负 (相减 (C_直线.尾点.用户.x, C_直线.起点.用户.x)))
赋值 (C, 相减 (相乘 (负 (B), C_直线.起点.用户.y), 相乘 (A, C_直线.起点.用户.x)))
赋值 (直线.起点, C_点)
.如果 (等于 (B, 0))
    赋值 (直线.尾点.用户.x, C_点.用户.x)
    赋值 (直线.尾点.用户.y, 相加 (直线.尾点.用户.y, 1))
    
.否则
    赋值 (直线.尾点.用户.x, 相加 (C_点.用户.x, 1))
    赋值 (直线.尾点.用户.y, 相加 (相乘 (相除 (A, B), 直线.尾点.用户.x), 相除 (C, B)))
.如果结束

返回 (直线)

.子程序 求整数点集, 点坐标集, , 本方法需要提供一条直线的起点坐标和终点,程序将计算出起点至终点之间的全部整数坐标点,即虽然计算时采用的是双精度小数型,但应看作整数形来使用,纵横轴均整数
.参数 C_直线, 直线段, , 

.局部变量 直线系数, 线段系数, , , 
.局部变量 坐标集, 点坐标集, , , 
.局部变量 点, 点坐标, , , 
.局部变量 x, 整数型, , , 
.局部变量 y, 整数型, , , 
.局部变量 k, 双精度小数型, , , 
.局部变量 i, 整数型, , , 

清除数组 (坐标集.点坐标)
.如果真 (并且 (等于 (C_直线.尾点.用户.x, C_直线.起点.用户.x), 等于 (C_直线.尾点.用户.y, C_直线.起点.用户.y)))
    加入成员 (坐标集.点坐标, C_直线.起点)
    返回 (坐标集)
.如果真结束

.判断开始 (等于 (相减 (C_直线.尾点.用户.x, C_直线.起点.用户.x), 0))
    .变量循环首 (到整数 (C_直线.起点.用户.y), 到整数 (C_直线.尾点.用户.y), 相乘 (1, 取符号 (相减 (C_直线.尾点.用户.y, C_直线.起点.用户.y))), y)
        赋值 (点.用户.x, C_直线.起点.用户.x)
        赋值 (点.用户.y, y)
        加入成员 (坐标集.点坐标, 点)
    .变量循环尾 ()
    
.判断 (等于 (相减 (C_直线.尾点.用户.y, C_直线.起点.用户.y), 0))
    .变量循环首 (到整数 (C_直线.起点.用户.x), 到整数 (C_直线.尾点.用户.x), 相乘 (1, 取符号 (相减 (C_直线.尾点.用户.x, C_直线.起点.用户.x))), x)
        赋值 (点.用户.x, x)
        赋值 (点.用户.y, C_直线.起点.用户.y)
        加入成员 (坐标集.点坐标, 点)
    .变量循环尾 ()
    
.默认
    赋值 (直线系数, 求系数 (C_直线))
    .如果 (小于或等于 (取绝对值 (直线系数.ky_x), 1))
        .变量循环首 (到整数 (C_直线.起点.用户.x), 到整数 (C_直线.尾点.用户.x), 相乘 (1, 取符号 (相减 (C_直线.尾点.用户.x, C_直线.起点.用户.x))), x)
            赋值 (点.用户.x, x)
            赋值 (点.用户.y, 相加 (C_直线.起点.用户.y, 相乘 (直线系数.ky_x, 相减 (x, C_直线.起点.用户.x))))
            加入成员 (坐标集.点坐标, 点)
        .变量循环尾 ()
        
    .否则
        .变量循环首 (到整数 (C_直线.起点.用户.y), 到整数 (C_直线.尾点.用户.y), 相乘 (1, 取符号 (相减 (C_直线.尾点.用户.y, C_直线.起点.用户.y))), y)
            赋值 (点.用户.x, 相加 (C_直线.起点.用户.x, 相乘 (直线系数.kx_y, 相减 (y, C_直线.起点.用户.y))))
            赋值 (点.用户.y, y)
            加入成员 (坐标集.点坐标, 点)
        .变量循环尾 ()
    .如果结束
    
.判断结束

返回 (坐标集)

.类模块 直线样式类, , , 

.程序集变量 私直线样式, 线样式, , "2", 
.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用
生成常用直线样式 ()

.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 生成常用直线样式, 空白型, , 
赋值 (私直线样式 [1].线宽.绝对宽, 3)
赋值 (私直线样式 [1].线宽.显示宽, 3)
重定义数组 (私直线样式 [1].线型.绝对线型.端距, 假, 1)
重定义数组 (私直线样式 [1].线型.绝对线型.间距, 假, 1)
重定义数组 (私直线样式 [1].线型.绝对线型.点样式, 假, 1)
赋值 (私直线样式 [1].线型.绝对线型.端距 [1], 0)
赋值 (私直线样式 [1].线型.绝对线型.间距 [1], 10)
赋值 (私直线样式 [1].线型.绝对线型.点样式 [1], 1)

赋值 (私直线样式 [2].线宽.绝对宽, 3)
赋值 (私直线样式 [2].线宽.显示宽, 3)
重定义数组 (私直线样式 [2].线型.绝对线型.端距, 假, 2)
重定义数组 (私直线样式 [2].线型.绝对线型.间距, 假, 2)
重定义数组 (私直线样式 [2].线型.绝对线型.点样式, 假, 2)
赋值 (私直线样式 [2].线型.绝对线型.端距 [1], 0)
赋值 (私直线样式 [2].线型.绝对线型.间距 [1], 40)
赋值 (私直线样式 [2].线型.绝对线型.点样式 [1], 1)
赋值 (私直线样式 [2].线型.绝对线型.端距 [2], 0)
赋值 (私直线样式 [2].线型.绝对线型.间距 [2], 25)
赋值 (私直线样式 [2].线型.绝对线型.点样式 [2], 2)

.子程序 取直线样式, 线样式, , 
.参数 参_样式, 整数型, , 

返回 (私直线样式 [参_样式])

.类模块 抛物线类, , , 

.程序集变量 _a, 双精度小数型, , , 
.程序集变量 _b, 双精度小数型, , , 
.程序集变量 _c, 双精度小数型, , , 
.程序集变量 _抛物线, 直线段集, , , 
.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用
 ' 抛物线类.定义抛物线 (-0.5, 30, 50)
 ' 抛物线类.生成抛物线 (-20, 80, 1)
 ' 抛物线类.绘制抛物线 (画板1)


.子程序 定义抛物线, 空白型, , 抛物线：y = ax^2 + bx + c （a≠0）,就是y等于a乘以x 的平方加上 b乘以x再加上 c ,置于平面直角坐标系中a > 0时开口向上,a < 0时开口向下,c = 0时抛物线经过原点,b = 0时抛物线对称轴为y轴
.参数 参_a, 双精度小数型, , 
.参数 参_b, 双精度小数型, , 
.参数 参_c, 双精度小数型, , 

赋值 (_a, 参_a)
赋值 (_b, 参_b)
赋值 (_c, 参_c)

.子程序 生成抛物线, 空白型, 公开, 
.参数 参_起点, 双精度小数型, , 
.参数 参_终点, 双精度小数型, , 
.参数 参_步距, 双精度小数型, , 

.局部变量 直线, 直线段, , , 
.局部变量 线段数, 整数型, , , 
.局部变量 i, 整数型, , , 

重定义数组 (_抛物线.直线, 假, 0)
赋值 (直线.起点.用户.x, 参_起点)
赋值 (直线.起点.用户.y, 相加 (相乘 (_a, 直线.起点.用户.x, 直线.起点.用户.x), 相乘 (_b, 直线.起点.用户.x), _c))
赋值 (直线.尾点.用户.x, 相加 (参_起点, 参_步距))
赋值 (直线.尾点.用户.y, 相加 (相乘 (_a, 直线.尾点.用户.x, 直线.尾点.用户.x), 相乘 (_b, 直线.尾点.用户.x), _c))
加入成员 (_抛物线.直线, 直线)
赋值 (线段数, 相除 (相减 (参_终点, 参_起点), 参_步距))
.计次循环首 (线段数, i)
    赋值 (直线.起点.用户.x, 直线.尾点.用户.x)
    赋值 (直线.起点.用户.y, 直线.尾点.用户.y)
    赋值 (直线.尾点.用户.x, 相加 (直线.起点.用户.x, 参_步距))
    赋值 (直线.尾点.用户.y, 相加 (相乘 (_a, 直线.尾点.用户.x, 直线.尾点.用户.x), 相乘 (_b, 直线.尾点.用户.x), _c))
    加入成员 (_抛物线.直线, 直线)
.计次循环尾 ()

.子程序 绘制抛物线, 空白型, 公开, 
.参数 参_画板, 画板, , 

.局部变量 i, 整数型, , , 

.计次循环首 (取数组成员数 (_抛物线.直线), i)
    赋值 (_抛物线.直线 [i], 样式, 0)
    绘图.求系数 (.直线类, _抛物线.直线 [i])
    绘图.绘制直线段 (.直线类, 参_画板, _抛物线.直线 [i])
.计次循环尾 ()




 ' 不属于任何一个程序集、类模块的函数：
