 ' 文件类型：Windows模块源码

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：本源码来自易语言资源网(www.wodesoft.com)
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：             易语言资源网注意事项
--============   www.wodesoft.com  =============--
* 易语言资源网为易语言官方站、易语言官方论坛提供辅助资源站；本易语言资源网( www.wodesoft.com)所有软件和资料均为软件作者提供和网友推荐发布而来，其版权归该软件和程序源码的合法拥有者所有，本站易语言资源网整理收集仅供易语言用户学习和易语言技术研究探讨使用，不得用于任何商业用途。如果由于以上原因造成的版权纠纷本站概不负责！
* 本站资源未经许可,任何网站不得非法盗链及抄袭本站资源；如引用，请注明来自易语言资源网，谢谢合作！
--============   www.wodesoft.com  =============--
 ' 版本号：1.0
 ' 创建号：0.0

窗口 窗口1
    左边 = 50
    顶边 = 50
    宽度 = 561
    高度 = 402
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 真
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    窗口类名 = “”
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “TanDy_图片裁剪框V1.0.01.09.1113”
    帮助文件名 = “”





 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 5 0 系统核心支持库
 ' iext 27bb20fdd3e145e4bee3db39ddd6e64c 2 0 扩展界面支持库一




数据类型 RECT, , RECT
    .成员 左边, 整数型, , , Left
    .成员 顶边, 整数型, , , Top
    .成员 右边, 整数型, , , Right
    .成员 底边, 整数型, , , Bottom

数据类型 PAINTSTRUCT, , 
    .成员 hdc, 整数型, , , 
    .成员 fErase, 整数型, , , 
    .成员 nPaintRect, RECT, , , 
    .成员 fRestore, 整数型, , , 
    .成员 fIncUpdate, 整数型, , , 
    .成员 rgbReserved, 字节型, , "32", 

数据类型 矩形区域, , 
    .成员 左边, 空白型, , , 
    .成员 顶边, 空白型, , , 
    .成员 宽度, 空白型, , , 
    .成员 高度, 空白型, , , 


.DLL命令 ReleaseDC, 整数型, "user32", "ReleaseDC", , ReleaseDC
    .参数 窗口句柄, 整数型, , hwnd，要释放的设备场景相关的窗口句柄
    .参数 设备场景, 整数型, , hdc，要释放的设备场景句柄

.DLL命令 SelectObject, 整数型, "gdi32.dll", "SelectObject", , SelectObject
    .参数 场景句柄, 整数型, , hdc
    .参数 对象句柄, 整数型, , hobject

.DLL命令 DeleteObject, 整数型, "gdi32.dll", "DeleteObject", , DeleteObject
    .参数 对象句柄, 整数型, , hObject,一个GDI对象的句柄

.DLL命令 DrawFocusRect, 空白型, "user32.dll", "DrawFocusRect", , 画一个焦点矩形。这个矩形是在标志焦点的样式中通过异或运算完成的（焦点通常用一个点线表示）。如用同样的参数再次调用这个函数，就表示删除焦点矩形
    .参数 设备场景句柄, 整数型, , hdc,设备场景的句柄 
    .参数 矩形轮廓, RECT, , lpRect,要在逻辑坐标中描绘的矩形 

.DLL命令 GetDCEx, 整数型, "user32", "GetDCEx", , 为指定窗口获取设备场景。相比GetDC，本函数提供了更多的选项
    .参数 窗口句柄, 整数型, , 
    .参数 剪裁区, 整数型, , 
    .参数 复选项, 整数型, , 

.DLL命令 SetCapture, 整数型, "", "SetCapture", , 
    .参数 hWnd, 空白型, , 

.DLL命令 ReleaseCapture, 逻辑型, "", "ReleaseCapture", , 

.DLL命令 CreateCompatibleDC, 整数型, "Gdi32", "CreateCompatibleDC", , 
    .参数 设备场景句柄, 整数型, , 

.DLL命令 CreateCompatibleBitmap, 整数型, "gdi32", "CreateCompatibleBitmap", , 
    .参数 设备场景句柄, 整数型, , 
    .参数 宽度, 整数型, , 
    .参数 高度, 整数型, , 

.DLL命令 BitBlt, 整数型, "gdi32.dll", "BitBlt", , 
    .参数 目标设备场景, 整数型, , hDestDC,目标设备场景
    .参数 目标横坐标, 整数型, , x,对目标设备场景中目标矩形左上角位置进行描述的那个点
    .参数 目标纵坐标, 整数型, , y,对目标设备场景中目标矩形左上角位置进行描述的那个点
    .参数 传输图像宽度, 整数型, , nWidth,欲传输图象的宽度
    .参数 传输图像高度, 整数型, , nHeight,欲传输图象的高度
    .参数 源设备场景, 整数型, , hSrcDC,源设备场景。如光栅运算未指定源，则应设为0
    .参数 源横坐标, 整数型, , xSrc,对源设备场景中源矩形左上角位置进行描述的那个点
    .参数 源纵坐标, 整数型, , ySrc,对源设备场景中源矩形左上角位置进行描述的那个点
    .参数 光栅运算方式, 整数型, , dwRop,传输过程要执行的光栅运算

.DLL命令 DeleteDC, 整数型, "gdi32.dll", "DeleteDC", , 
    .参数 设备场景句柄, 整数型, , hdc，将要删除的设备场景

.DLL命令 SetWindowLong, 整数型, "user32", "SetWindowLongA", , 在窗口结构中为指定的窗口设置信息  指定数据的前一个值
    .参数 窗口句柄, 整数型, , hwnd，欲为其取得信息的窗口的句柄
    .参数 窗口信息值, 整数型, , nIndex，请参考GetWindowLong函数的nIndex参数的说明
    .参数 窗口信息新值, 整数型, , dwNewLong，由nIndex指定的窗口信息的新值

.DLL命令 GetWindowLong, 整数型, "user32", "GetWindowLongA", , 从指定窗口的结构中取得信息  由nIndex决定。零表示出错。会设置GetLastError
    .参数 窗口句柄, 整数型, , 欲为其获取信息的窗口的句柄
    .参数 属性, 整数型, , 欲取回的信息，可以是下述任何一个常数：;GWL_EXSTYLE：扩展窗口样式;GWL_STYLE：窗口样式;GWL_WNDPROC：该窗口的窗口函数的地址;GWL_HINSTANCE：拥有窗口的实例的句柄;GWL_HWNDPARENT：该窗口之父的句柄。不要用SetWindowWord来改变这个值;GWL_ID：对话框中一个子窗口的标识符;GWL_USERDATA：含义由应用程序规定;DWL_DLGPROC：这个窗口的对话框函数地址;DWL_MSGRESULT：在对话框函数中处理的一条消息返回的值;DWL_USER：含义由应用程序规定;

.DLL命令 CallWindowProc, 整数型, "user32.dll", "CallWindowProcA", , 
    .参数 前一窗口函数地址, 整数型, , 
    .参数 窗口句柄, 整数型, , 
    .参数 消息值, 整数型, , 
    .参数 附加参数1, 整数型, , 
    .参数 附加参数2, 整数型, , 

.DLL命令 BeginPaint, 整数型, "", "", , 
    .参数 hwnd, 整数型, , 
    .参数 lpPaint, PAINTSTRUCT, , 

.DLL命令 EndPaint, 逻辑型, "", "", , 
    .参数 hWnd, 整数型, , 
    .参数 lpPaint, PAINTSTRUCT, , 

.DLL命令 SendMessage, 整数型, "user32", "SendMessageA", , 调用一个窗口的窗口函数，将一条消息发给那个窗口。除非消息处理完毕，否则该函数不会返回。SendMessageBynum， ;    SendMessageByString是该函数的“类型安全”声明形式  由具体的消息决定
    .参数 窗口句柄, 整数型, , 要接收消息的那个窗口的句柄
    .参数 信息值, 整数型, , 消息的标识符
    .参数 参数一, 整数型, , 具体取决于消息
    .参数 参数二, 整数型, , 具体取决于消息;

.DLL命令 GetWindowRect, 空白型, "", "GetWindowRect", , 
    .参数 hWnd, 空白型, , 
    .参数 lpRect, RECT, , 

.程序集 程序集1, , , 

.子程序 _启动子程序, 整数型, , 请在本子程序中放置易模块初始化代码

_临时子程序 () ' 在初始化代码执行完毕后调用测试代码
返回 (0) ' 可以根据您的需要返回任意数值

.子程序 _临时子程序, 空白型, , 
 ' 本名称子程序用作测试程序用，仅在开发及调试环境中有效，编译发布程序前将被系统自动清空，请将所有用作测试的临时代码放在本子程序中。 ***注意不要修改本子程序的名称、参数及返回值类型。
载入 (窗口1, , 真)


.程序集 模块_程序集2, , , 

.程序集变量 场景宽度, 整数型, , , 
.程序集变量 场景高度, 整数型, , , 
.程序集变量 内存场景, 整数型, , , 
.程序集变量 虚线矩形, RECT, , , 
.程序集变量 hScrBitmap, 整数型, , , 
.程序集变量 hOldScrBitmap, 整数型, , , 
.程序集变量 onDrag, 逻辑型, , , 
.程序集变量 oldproc, 整数型, , , 
.程序集变量 窗口句柄, 整数型, , , 
.程序集变量 已初始化, 逻辑型, , , 
.程序集变量 匿名程序集变量_266, 空白型, , , 
.程序集变量 画出左, 整数型, , , 
.程序集变量 画出顶, 整数型, , , 
.程序集变量 画出宽, 整数型, , , 
.程序集变量 画出高, 整数型, , , 
.程序集变量 匿名程序集变量_267, 空白型, , , 
.程序集变量 显示可调框, 逻辑型, , , 
.程序集变量 鼠标可调监视, 逻辑型, , , 
.程序集变量 匿名程序集变量_305, 空白型, , , 
.程序集变量 矩形区域大小, 矩形区域, , , 
.程序集变量 调整方向, RECT, , , 
.程序集变量 方向, 空白型, , , 1,左上，2,左,3＝左下，4＝底，5＝右下，6＝右，7＝右上，8＝顶
.子程序 初始化场景, 空白型, 公开, 
.参数 句柄, 空白型, , 

.局部变量 hScrDC, 整数型, , , 
.局部变量 a, RECT, , , 

 ' --========  易语言资源网  (www.wodesoft.com)  ======--
 ' 努力创建完善、持续更新的易语言学习例程源码资源站
 ' --================   www.wodesoft.com  ===========--
 ' --==================   易语言资源网注意事项  ================--
 ' * 易语言资源网为易语言官方站、易语言官方论坛提供辅助资源站；
 ' 本易语言资源网( www.wodesoft.com)所有软件和资料均为软件作者提
 ' 供和网友推荐发布而来，其版权归该软件和程序源码的合法拥有者所
 ' 有，本站易语言资源网整理收集仅供易语言用户学习和易语言技术研
 ' 究探讨使用，不得用于任何商业用途。如果由于以上原因造成的版权
 ' 纠纷本站概不负责！
 ' * 本站资源未经许可，任何网站不得非法盗链及抄袭本站资源；如引用
 ' 页面，请注明来自易语言资源网，谢谢合作！
 ' --=====================   www.wodesoft.com  ================--

赋值 (窗口句柄, 句柄)
GetWindowRect (窗口句柄, a)
赋值 (场景宽度, 相减 (a.右边, a.左边))
赋值 (场景高度, 相减 (a.底边, a.顶边))
.如果真 (等于 (已初始化, 假))
    窗口首次激活 ()
    赋值 (已初始化, 真)
.如果真结束


.子程序 窗口首次激活, 空白型, 公开, 
.局部变量 hScrDC, 整数型, , , 

赋值 (oldproc, GetWindowLong (窗口句柄, -4))
SetWindowLong (窗口句柄, -4, 到整数 (&回调函数))
赋值 (hScrDC, GetDCEx (窗口句柄, 0, 2))
赋值 (内存场景, CreateCompatibleDC (hScrDC)) ' 创建与屏幕兼容的临时内存DC
赋值 (hScrBitmap, CreateCompatibleBitmap (hScrDC, 场景宽度, 场景高度)) ' 创建兼容位图
赋值 (hOldScrBitmap, SelectObject (内存场景, hScrBitmap))
BitBlt (内存场景, 0, 0, 场景宽度, 场景高度, hScrDC, 0, 0, 13369376)
ReleaseDC (窗口句柄, hScrDC)
 ' 本源码来自易语言资源网(www.wodesoft.com)

.子程序 卸载场景, 空白型, 公开, 
SelectObject (内存场景, hOldScrBitmap)
DeleteObject (hScrBitmap)
DeleteDC (内存场景)


.子程序 裁剪开始, 空白型, 公开, 放在鼠标左键按下事件中
.参数 横向位置, 空白型, , 
.参数 纵向位置, 空白型, , 

.如果真 (等于 (已初始化, 真))
     ' 第一步：判断鼠标指针是否默认指针
    .判断开始 (等于 (计算调整方向 (横向位置, 纵向位置), 假))
        赋值 (鼠标可调监视, 假)
        赋值 (虚线矩形.左边, 横向位置)
        赋值 (虚线矩形.顶边, 纵向位置)
        赋值 (方向, 0)
    .默认
        赋值 (虚线矩形.左边, 调整方向.左边)
        赋值 (虚线矩形.顶边, 调整方向.顶边)
        
    .判断结束
    
     ' 如果是进行裁剪调整的指针，记录当前按下的坐标。并判断用户将要调整哪个方向。
    
    赋值 (onDrag, 真)
    SetCapture (窗口句柄)
     ' 本源码来自易语言资源网(www.wodesoft.com)
.如果真结束


.子程序 裁剪框画出, 空白型, 公开, 放在鼠标移动事件中
.参数 横向位置, 空白型, , 
.参数 纵向位置, 空白型, , 

监视 (横向位置, 纵向位置)
.如果真 (并且 (onDrag, 等于 (已初始化, 真)))
    
    .如果真 (大于 (横向位置, 10000))
        赋值 (横向位置, 相减 (横向位置, 65536))
    .如果真结束
    .如果真 (大于 (纵向位置, 10000))
        赋值 (纵向位置, 相减 (纵向位置, 65536))
    .如果真结束
     ' 限制矩形在画板之内
    .如果真 (大于 (横向位置, 场景宽度))
        赋值 (横向位置, 场景宽度)
    .如果真结束
    .如果真 (大于 (纵向位置, 场景高度))
        赋值 (纵向位置, 场景高度)
    .如果真结束
    .如果真 (小于 (横向位置, 0))
        赋值 (横向位置, 0)
    .如果真结束
    .如果真 (小于 (纵向位置, 0))
        赋值 (纵向位置, 0)
    .如果真结束
    
    .如果真 (鼠标可调监视)
        .判断开始 (或者 (等于 (方向, 2), 等于 (方向, 6)))
            赋值 (纵向位置, 调整方向.底边)
        .判断 (或者 (等于 (方向, 8), 等于 (方向, 4)))
            赋值 (横向位置, 调整方向.右边)
        .默认
            
        .判断结束
        
    .如果真结束
    
    取矩形区域数据 (虚线矩形.左边, 虚线矩形.顶边, 横向位置, 纵向位置)
    
    赋值 (虚线矩形.右边, 横向位置)
    赋值 (虚线矩形.底边, 纵向位置)
    SendMessage (窗口句柄, 15, 0, 0)
     ' 本源码来自易语言资源网(www.wodesoft.com)
    
.如果真结束


 ' 实时显示数据
.判断开始 (onDrag)
    
    赋值 (画出左, 虚线矩形.左边)
    赋值 (画出顶, 虚线矩形.顶边)
    赋值 (画出宽, 横向位置)
    赋值 (画出高, 纵向位置)
    置状态栏 (虚线矩形.左边, 虚线矩形.顶边, 横向位置, 纵向位置)
.默认
    
    置状态栏 (横向位置, 纵向位置)
.判断结束


.子程序 裁剪结束, 空白型, 公开, 放在鼠标左键放开事件中

.如果真 (并且 (onDrag, 等于 (已初始化, 真)))
    
    赋值 (onDrag, 假)
    ReleaseCapture ()
    
    赋值 (虚线矩形.左边, -1)
    赋值 (虚线矩形.顶边, -1)
    赋值 (虚线矩形.右边, -1)
    赋值 (虚线矩形.底边, -1)
    SendMessage (窗口句柄, 15, 0, 0)
    赋值 (显示可调框, 真)
    显示可调裁剪框 (窗口1.)
    
.如果真结束


.子程序 画调整边框, 空白型, , 
.参数 矩形, RECT, , 

.局部变量 hTempMemDC, 整数型, , , 
.局部变量 hTempMemBitmap, 整数型, , , 
.局部变量 hOldTempMemBitmap, 整数型, , , 
.局部变量 hScrDC, 整数型, , , 
.局部变量 Rect, RECT, , , 

赋值 (hScrDC, GetDCEx (窗口句柄, 0, 2))
赋值 (hTempMemDC, CreateCompatibleDC (hScrDC)) ' 创建与屏幕兼容的临时内存DC
赋值 (hTempMemBitmap, CreateCompatibleBitmap (hScrDC, 场景宽度, 场景高度)) ' 创建兼容位图
赋值 (hOldTempMemBitmap, SelectObject (hTempMemDC, hTempMemBitmap))
BitBlt (hTempMemDC, 0, 0, 场景宽度, 场景高度, 内存场景, 0, 0, 13369376)
赋值 (Rect, 矩形)
标准化矩形 (Rect)
 ' 本源码来自易语言资源网(www.wodesoft.com)
DrawFocusRect (hTempMemDC, Rect)
BitBlt (hScrDC, 0, 0, 场景宽度, 场景高度, hTempMemDC, 0, 0, 13369376)
SelectObject (hTempMemDC, hOldTempMemBitmap)
DeleteObject (hTempMemBitmap)
DeleteDC (hTempMemDC)
ReleaseDC (窗口句柄, hScrDC)

.子程序 标准化矩形, 空白型, , 
.参数 矩形, RECT, , 

.如果真 (大于 (矩形.左边, 矩形.右边))
    互换整数 (矩形.左边, 矩形.右边)
.如果真结束
.如果真 (大于 (矩形.顶边, 矩形.底边))
    互换整数 (矩形.顶边, 矩形.底边)
.如果真结束


.子程序 互换整数, 空白型, , 
.参数 整数1, 整数型, 参考, 
.参数 整数2, 整数型, 参考, 

赋值 (整数1, 位异或 (整数1, 整数2))
赋值 (整数2, 位异或 (整数1, 整数2))
赋值 (整数1, 位异或 (整数1, 整数2))

.子程序 回调函数, 整数型, , 
.参数 hWnd, 整数型, , 
.参数 Msg, 整数型, , 
.参数 wParam, 整数型, , 
.参数 lParam, 整数型, , 

.局部变量 x, 整数型, , , 
.局部变量 y, 整数型, , , 
.局部变量 ps, PAINTSTRUCT, , , 
.局部变量 r, 整数型, , , 

.判断开始 (等于 (Msg, 15))
    赋值 (r, CallWindowProc (oldproc, hWnd, Msg, wParam, lParam))
    BeginPaint (hWnd, ps)
    画调整边框 (虚线矩形)
    EndPaint (hWnd, ps)
    返回 (r)
.默认
    
.判断结束
返回 (CallWindowProc (oldproc, hWnd, Msg, wParam, lParam))

.子程序 显示可调裁剪框, 空白型, , 
.参数 画板, 画板, , 

.局部变量 左边位置, 整数型, , , 
.局部变量 顶边位置, 整数型, , , 

.如果真 (等于 (显示可调框, 假))
    返回 ()
    
.如果真结束
赋值 (画板.自动重画, 真)
赋值 (画板.画笔粗细, 1)
赋值 (画板.画笔类型, 3) ' 点线
赋值 (画板.画笔颜色, #天蓝)
赋值 (画板.刷子类型, 0)
画板.清除 ()
画板.画矩形 (画出左, 画出顶, 画出宽, 画出高)
画可调点 (画板, 画出左, 画出顶, 画出宽, 画出高)

赋值 (显示可调框, 假)
赋值 (鼠标可调监视, 真)
 ' 本源码来自易语言资源网(www.wodesoft.com)

.子程序 画可调点, 空白型, , 
.参数 画板, 画板, , 
.参数 左, 空白型, , 
.参数 顶, 空白型, , 
.参数 右, 空白型, , 
.参数 底, 空白型, , 

赋值 (画板.刷子颜色, #天蓝)
赋值 (画板.刷子类型, 1)
赋值 (画板.画笔类型, 1)
画板.画矩形 (相减 (左, 3), 相减 (顶, 3), 相加 (左, 3), 相加 (顶, 3))
.判断开始 (大于 (底, 顶))
    画板.画矩形 (相减 (左, 3), 相加 (相减 (相除 (相减 (底, 顶), 2), 3), 顶), 相加 (左, 3), 相加 (相除 (相减 (底, 顶), 2), 3, 顶))
    画板.画矩形 (相减 (左, 3), 相加 (相减 (底, 顶, 3), 顶), 相加 (左, 3), 相加 (相减 (底, 顶), 3, 顶))
    
    画板.画矩形 (相减 (右, 3), 相加 (相减 (相除 (相减 (底, 顶), 2), 3), 顶), 相加 (右, 3), 相加 (相除 (相减 (底, 顶), 2), 3, 顶))
    画板.画矩形 (相减 (右, 3), 相加 (相减 (底, 顶, 3), 顶), 相加 (右, 3), 相加 (相减 (底, 顶), 3, 顶))
    
.默认
    画板.画矩形 (相减 (左, 3), 相加 (相减 (相除 (相减 (顶, 底), 2), 3), 底), 相加 (左, 3), 相加 (相除 (相减 (顶, 底), 2), 3, 底))
    画板.画矩形 (相减 (左, 3), 相减 (底, 3), 相加 (左, 3), 相加 (底, 3))
    
    画板.画矩形 (相减 (右, 3), 相加 (相减 (相除 (相减 (顶, 底), 2), 3), 底), 相加 (右, 3), 相加 (相除 (相减 (顶, 底), 2), 3, 底))
    画板.画矩形 (相减 (右, 3), 相减 (底, 3), 相加 (右, 3), 相加 (底, 3))
.判断结束


画板.画矩形 (相减 (右, 3), 相减 (顶, 3), 相加 (右, 3), 相加 (顶, 3))

画板.画矩形 (相减 (相加 (相除 (相减 (右, 左), 2), 左), 3), 相减 (底, 3), 相加 (相除 (相减 (右, 左), 2), 左, 3), 相加 (底, 3)) ' 底

.判断开始 (大于 (右, 左)) ' 中间
    画板.画矩形 (相加 (相减 (相除 (相减 (右, 左), 2), 3), 左), 相减 (顶, 3), 相加 (相除 (相减 (右, 左), 2), 3, 左), 相加 (顶, 3))
    
.默认
    画板.画矩形 (相加 (相减 (相除 (相减 (左, 右), 2), 3), 右), 相减 (顶, 3), 相加 (相除 (相减 (左, 右), 2), 3, 右), 相加 (顶, 3))
.判断结束


.子程序 置状态栏, 空白型, , 
.参数 x, 空白型, 可空, 
.参数 y, 空白型, 可空, 
.参数 x2, 空白型, 可空, 
.参数 y2, 空白型, 可空, 

窗口1.置文本 (., 0, 相加 (到文本 (x), “,”, 到文本 (y)))
窗口1.置文本 (., 1, 相加 (到文本 (x2), “×”, 到文本 (y2)))


.子程序 取矩形区域数据, 空白型, , 
.参数 x, 空白型, , 
.参数 y, 空白型, , 
.参数 x2, 空白型, , 
.参数 y2, 空白型, , 

.判断开始 (大于 (x, x2))
    赋值 (矩形区域大小.左边, x2)
    赋值 (矩形区域大小.宽度, 相减 (x, x2))
.默认
    赋值 (矩形区域大小.左边, x)
    赋值 (矩形区域大小.宽度, 相减 (x2, x))
.判断结束

.判断开始 (小于 (y, y2))
    赋值 (矩形区域大小.顶边, y)
    赋值 (矩形区域大小.高度, 相减 (y2, y))
.默认
    赋值 (矩形区域大小.顶边, y2)
    赋值 (矩形区域大小.高度, 相减 (y, y2))
.判断结束


窗口1.置文本 (., 2, 相加 (“左边：”, 到文本 (矩形区域大小.左边), “顶边：”, 到文本 (矩形区域大小.顶边), “宽度：”, 到文本 (矩形区域大小.宽度), “高度：”, 到文本 (矩形区域大小.高度)))


.子程序 监视, 空白型, , 如果可调裁剪框已显示，该命令会监视鼠标是否移动到裁剪框上，并将鼠标指针更换到相应的指针。
.参数 横向位置, 空白型, , 
.参数 纵向位置, 空白型, , 

.如果真 (等于 (鼠标可调监视, 假))
    返回 ()
.如果真结束
 ' 本源码来自易语言资源网(www.wodesoft.com)

.判断开始 (并且 (大于 (横向位置, 相减 (矩形区域大小.左边, 4)), 小于 (横向位置, 相加 (矩形区域大小.左边, 4)), 大于 (纵向位置, 相减 (矩形区域大小.顶边, 4)), 小于 (纵向位置, 相加 (矩形区域大小.顶边, 4))))
    赋值 (窗口1..鼠标指针, { 11 }) ' 左上位置
    返回 ()
    
.判断 (并且 (大于 (横向位置, 相减 (矩形区域大小.左边, 4)), 小于 (横向位置, 相加 (矩形区域大小.左边, 4)), 大于 (纵向位置, 相减 (相加 (相除 (矩形区域大小.高度, 2), 矩形区域大小.顶边), 4)), 小于 (纵向位置, 相加 (相除 (矩形区域大小.高度, 2), 矩形区域大小.顶边, 4))))
    赋值 (窗口1..鼠标指针, { 12 }) ' 左中位置
    返回 ()
    
.判断 (并且 (大于 (横向位置, 相减 (矩形区域大小.左边, 4)), 小于 (横向位置, 相加 (矩形区域大小.左边, 4)), 大于 (纵向位置, 相减 (相加 (矩形区域大小.高度, 矩形区域大小.顶边), 4)), 小于 (纵向位置, 相加 (矩形区域大小.高度, 矩形区域大小.顶边, 4))))
    赋值 (窗口1..鼠标指针, { 9 }) ' 左下位置
    返回 ()
    
.判断 (并且 (大于 (横向位置, 相减 (相加 (相除 (矩形区域大小.宽度, 2), 矩形区域大小.左边), 4)), 小于 (横向位置, 相加 (相除 (矩形区域大小.宽度, 2), 矩形区域大小.左边, 4)), 大于 (纵向位置, 相减 (矩形区域大小.顶边, 4)), 小于 (纵向位置, 相加 (矩形区域大小.顶边, 4))))
    赋值 (窗口1..鼠标指针, { 10 }) ' 顶边位置
    返回 ()
    
.判断 (并且 (大于 (横向位置, 相减 (相加 (相除 (矩形区域大小.宽度, 2), 矩形区域大小.左边), 4)), 小于 (横向位置, 相加 (相除 (矩形区域大小.宽度, 2), 矩形区域大小.左边, 4)), 大于 (纵向位置, 相减 (相加 (矩形区域大小.高度, 矩形区域大小.顶边), 4)), 小于 (纵向位置, 相加 (矩形区域大小.高度, 矩形区域大小.顶边, 4))))
    赋值 (窗口1..鼠标指针, { 10 }) ' 底边位置
    返回 ()
    
.判断 (并且 (大于 (横向位置, 相减 (相加 (矩形区域大小.宽度, 矩形区域大小.左边), 4)), 小于 (横向位置, 相加 (矩形区域大小.宽度, 矩形区域大小.左边, 4)), 大于 (纵向位置, 相减 (矩形区域大小.顶边, 4)), 小于 (纵向位置, 相加 (矩形区域大小.顶边, 4))))
    赋值 (窗口1..鼠标指针, { 9 }) ' 右上位置
    返回 ()
    
.判断 (并且 (大于 (横向位置, 相减 (相加 (矩形区域大小.宽度, 矩形区域大小.左边), 4)), 小于 (横向位置, 相加 (矩形区域大小.宽度, 矩形区域大小.左边, 4)), 大于 (纵向位置, 相减 (相加 (相除 (矩形区域大小.高度, 2), 矩形区域大小.顶边), 4)), 小于 (纵向位置, 相加 (相除 (矩形区域大小.高度, 2), 矩形区域大小.顶边, 4))))
    赋值 (窗口1..鼠标指针, { 12 }) ' 右中位置
    返回 ()
    
.判断 (并且 (大于 (横向位置, 相减 (相加 (矩形区域大小.宽度, 矩形区域大小.左边), 4)), 小于 (横向位置, 相加 (矩形区域大小.宽度, 矩形区域大小.左边, 4)), 大于 (纵向位置, 相减 (相加 (矩形区域大小.高度, 矩形区域大小.顶边), 4)), 小于 (纵向位置, 相加 (矩形区域大小.高度, 矩形区域大小.顶边, 4))))
    赋值 (窗口1..鼠标指针, { 11 }) ' 右下位置
    返回 ()
    
.默认
    
.判断结束

赋值 (窗口1..鼠标指针, { 0 })

.子程序 计算调整方向, 逻辑型, , 
.参数 横向位置, 空白型, , 
.参数 纵向位置, 空白型, , 

 ' 最后决定裁剪框大小的是"虚线矩形.底边"和"虚线矩形.右边"
.如果真 (等于 (鼠标可调监视, 假))
    返回 (假)
.如果真结束

.判断开始 (并且 (大于 (横向位置, 相减 (矩形区域大小.左边, 4)), 小于 (横向位置, 相加 (矩形区域大小.左边, 4)), 大于 (纵向位置, 相减 (矩形区域大小.顶边, 4)), 小于 (纵向位置, 相加 (矩形区域大小.顶边, 4))))
     ' 左上位置
     ' 固定右下角坐标，不允许用户改变。
    赋值 (调整方向.左边, 相加 (矩形区域大小.左边, 矩形区域大小.宽度))
    赋值 (调整方向.顶边, 相加 (矩形区域大小.顶边, 矩形区域大小.高度))
    赋值 (方向, 1)
    返回 (真)
    
.判断 (并且 (大于 (横向位置, 相减 (矩形区域大小.左边, 4)), 小于 (横向位置, 相加 (矩形区域大小.左边, 4)), 大于 (纵向位置, 相减 (相加 (相除 (矩形区域大小.高度, 2), 矩形区域大小.顶边), 4)), 小于 (纵向位置, 相加 (相除 (矩形区域大小.高度, 2), 矩形区域大小.顶边, 4))))
     ' 左中位置
     ' 固定右下角坐标，不允许用户改变。
    赋值 (调整方向.左边, 相加 (矩形区域大小.左边, 矩形区域大小.宽度))
    赋值 (调整方向.顶边, 相加 (矩形区域大小.顶边, 矩形区域大小.高度))
    赋值 (调整方向.底边, 矩形区域大小.顶边)
    赋值 (方向, 2)
    返回 (真)
.判断 (并且 (大于 (横向位置, 相减 (矩形区域大小.左边, 4)), 小于 (横向位置, 相加 (矩形区域大小.左边, 4)), 大于 (纵向位置, 相减 (相加 (矩形区域大小.高度, 矩形区域大小.顶边), 4)), 小于 (纵向位置, 相加 (矩形区域大小.高度, 矩形区域大小.顶边, 4))))
     ' 左下位置
     ' 固定右下角坐标，不允许用户改变。
    赋值 (调整方向.左边, 相加 (矩形区域大小.左边, 矩形区域大小.宽度))
    赋值 (调整方向.顶边, 矩形区域大小.顶边)
    赋值 (方向, 3)
    
    返回 (真)
    
.判断 (并且 (大于 (横向位置, 相减 (相加 (相除 (矩形区域大小.宽度, 2), 矩形区域大小.左边), 4)), 小于 (横向位置, 相加 (相除 (矩形区域大小.宽度, 2), 矩形区域大小.左边, 4)), 大于 (纵向位置, 相减 (矩形区域大小.顶边, 4)), 小于 (纵向位置, 相加 (矩形区域大小.顶边, 4))))
     ' 顶边位置
    赋值 (调整方向.左边, 相加 (矩形区域大小.左边, 矩形区域大小.宽度))
    赋值 (调整方向.顶边, 相加 (矩形区域大小.顶边, 矩形区域大小.高度))
    赋值 (调整方向.右边, 矩形区域大小.左边)
     ' 本源码来自易语言资源网(www.wodesoft.com)
    赋值 (方向, 8)
    返回 (真)
    
.判断 (并且 (大于 (横向位置, 相减 (相加 (相除 (矩形区域大小.宽度, 2), 矩形区域大小.左边), 4)), 小于 (横向位置, 相加 (相除 (矩形区域大小.宽度, 2), 矩形区域大小.左边, 4)), 大于 (纵向位置, 相减 (相加 (矩形区域大小.高度, 矩形区域大小.顶边), 4)), 小于 (纵向位置, 相加 (矩形区域大小.高度, 矩形区域大小.顶边, 4))))
     ' 底边位置
    赋值 (调整方向.左边, 矩形区域大小.左边)
    赋值 (调整方向.顶边, 矩形区域大小.顶边)
    赋值 (调整方向.右边, 相加 (矩形区域大小.左边, 矩形区域大小.宽度))
    赋值 (方向, 4)
    返回 (真)
    
.判断 (并且 (大于 (横向位置, 相减 (相加 (矩形区域大小.宽度, 矩形区域大小.左边), 4)), 小于 (横向位置, 相加 (矩形区域大小.宽度, 矩形区域大小.左边, 4)), 大于 (纵向位置, 相减 (矩形区域大小.顶边, 4)), 小于 (纵向位置, 相加 (矩形区域大小.顶边, 4))))
     ' 右上位置
    赋值 (调整方向.左边, 矩形区域大小.左边)
    赋值 (调整方向.顶边, 相加 (矩形区域大小.顶边, 矩形区域大小.高度))
    
    赋值 (方向, 7)
    
    
    返回 (真)
    
.判断 (并且 (大于 (横向位置, 相减 (相加 (矩形区域大小.宽度, 矩形区域大小.左边), 4)), 小于 (横向位置, 相加 (矩形区域大小.宽度, 矩形区域大小.左边, 4)), 大于 (纵向位置, 相减 (相加 (相除 (矩形区域大小.高度, 2), 矩形区域大小.顶边), 4)), 小于 (纵向位置, 相加 (相除 (矩形区域大小.高度, 2), 矩形区域大小.顶边, 4))))
     ' 右中位置
    赋值 (调整方向.左边, 矩形区域大小.左边)
    赋值 (调整方向.顶边, 矩形区域大小.顶边)
    赋值 (调整方向.底边, 相加 (矩形区域大小.顶边, 矩形区域大小.高度))
    赋值 (方向, 6)
    
    返回 (真)
    
.判断 (并且 (大于 (横向位置, 相减 (相加 (矩形区域大小.宽度, 矩形区域大小.左边), 4)), 小于 (横向位置, 相加 (矩形区域大小.宽度, 矩形区域大小.左边, 4)), 大于 (纵向位置, 相减 (相加 (矩形区域大小.高度, 矩形区域大小.顶边), 4)), 小于 (纵向位置, 相加 (矩形区域大小.高度, 矩形区域大小.顶边, 4))))
     ' 右下位置
    赋值 (调整方向.左边, 矩形区域大小.左边)
    赋值 (调整方向.顶边, 矩形区域大小.顶边)
    赋值 (方向, 5)
    
    返回 (真)
.默认
    
.判断结束
返回 (假)

.子程序 重新加载, 空白型, , 
.如果真 (等于 (已初始化, 假))
    返回 ()
.如果真结束
卸载场景 ()
' 本源码来自易语言资源网(www.wodesoft.com)
初始化场景 (窗口句柄)


.窗口程序集 窗口程序集1, , , 

.子程序 _窗口1_将被销毁, 空白型, , 
卸载场景 ()

.子程序 _画板1_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

裁剪开始 (横向位置, 纵向位置)

.子程序 _画板1_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

裁剪结束 ()
 ' 本源码来自易语言资源网(www.wodesoft.com)

.子程序 _画板1_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

裁剪框画出 (横向位置, 纵向位置)


.子程序 _窗口1_创建完毕, 空白型, , 
 ' 初始化场景 (画板1.取窗口句柄 ())
' 本源码来自易语言资源网(www.wodesoft.com)

.子程序 _按钮1_被单击, 空白型, , 
初始化场景 (取窗口句柄 ())

.子程序 _窗口1_尺寸被改变, 空白型, , 
5.移动 (32, 相减 (窗口1., 17), 相减 (窗口1., 82))
重新加载 ()


 ' 不属于任何一个程序集、类模块的函数：
