 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 405
    高度 = 408
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    窗口类名 = “”
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “枚举注册项与键值”
    帮助文件名 = “”



.常量 ERROR_NO_MORE_ITEMS, "259", , 
.常量 HKEY_CLASSES_ROOT, "2147483648", , 
.常量 HKEY_CURRENT_USER, "2147483649", , 
.常量 HKEY_LOCAL_MACHINE, "2147483650", , 
.常量 HKEY_USERS, "2147483651", , 
.常量 HKEY_CURRENT_CONFIG, "2147483653", , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 5 0 系统核心支持库
 ' spec A512548E76954B6E92C21055517615B0 3 0 特殊功能支持库
 ' iext 27bb20fdd3e145e4bee3db39ddd6e64c 2 0 扩展界面支持库一




数据类型 文件时间_, , FILETIME
    .成员 日期时间低位, 整数型, , , dwLowDateTime
    .成员 日期时间高位, 整数型, , , dwHighDateTime


.DLL命令 关闭注册表项_, 整数型, "advapi32.dll", "RegCloseKey", , 零（ERROR_SUCCESS）表示成功。其他任何值都代表一个错误代码
    .参数 关闭项句柄, 整数型, , hKey，要关闭的项句柄

.DLL命令 打开注册表项_, 整数型, "advapi32.dll", "RegOpenKeyA", , 打开一个现有的注册表项,零（ERROR_SUCCESS）表示成功。其他任何值都代表一个错误代码
    .参数 标准项名或句柄, 整数型, , hKey，一个已打开项的句柄，或指定一个标准项名
    .参数 项名, 字节集, , lpSubKey，要打开的项名
    .参数 打开注册表项句柄, 整数型, 传址, phkResult，指定一个变量，用于装载（保存）打开注册表项的一个句柄

.DLL命令 枚举注册项_, 整数型, "Advapi32.dll", "RegEnumKeyExA", , 枚举指定项下方的子项
    .参数 标准项名或句柄, 整数型, , 一个已打开项的句柄，或者指定一个标准项名
    .参数 项索引, 整数型, , 欲获取的子项的索引。第一个子项的索引编号为零
    .参数 项索引, 字节集, , 用于装载指定索引处项名的一个缓冲区
    .参数 缓冲区, 整数型, 传址, 指定一个变量，用于装载lpName缓冲区的实际长度（包括空字符）。一旦返回，它会设为实际装载到lpName缓冲区的字符数量
    .参数 保留参数, 整数型, , 未用，设为零
    .参数 项类名, 字节集, , 项使用的类名。可以为vbNullString
    .参数 项类名长度, 整数型, 传址, 用于装载lpClass缓冲区长度的一个变量。一旦返回，它会设为实际装载到缓冲区的字符数量
    .参数 修改时间, 文件时间_, , 枚举子项上一次修改的时间

.DLL命令 枚举注册项值_, 整数型, "Advapi32.dll", "RegEnumValueA", , 枚举指定项的值
    .参数 标准项名或句柄, 整数型, , 一个已打开项的句柄，或者指定一个标准项名
    .参数 项索引, 整数型, , 欲获取值的索引。注意第一个值的索引编号为零
    .参数 值名称, 字节集, , 用于装载位于指定索引处值名的一个缓冲区
    .参数 值名称长度, 整数型, 传址, 用于装载lpValueName缓冲区长度的一个变量。一旦返回，它会设为实际载入缓冲区的字符数量
    .参数 保留参数, 整数型, , 未用；设为零
    .参数 类型, 整数型, 传址, 用于装载值的类型代码的变量
    .参数 数据缓冲区, 字节集, , 用于装载值数据的一个缓冲区
    .参数 数据缓冲区长度, 整数型, 传址, 用于装载lpData缓冲区长度的一个变量。一旦返回，它会设为实际载入缓冲区的字符数量

.窗口程序集 窗口程序集_启动窗口, , , 夜。。。未央

.子程序 _按钮_效果_被单击, 空白型, , 
子程序起始 ()

.子程序 子程序起始, 空白型, , 
.局部变量 打开注册表项句柄, 整数型, , , 
.局部变量 项索引, 整数型, , , 
.局部变量 项索引1, 字节集, , , 
.局部变量 数据缓冲区, 字节集, , , 
.局部变量 缓冲区, 整数型, , , 
.局部变量 数据缓冲区长度, 整数型, , , 
.局部变量 UFFER_SIZE, 整数型, , , 
.局部变量 修改时间, 文件时间_, , , 
.局部变量 项类名, 字节集, , , 
.局部变量 项类名长度, 整数型, , , 
.局部变量 项目文本, 文本型, , , 项目位置
.局部变量 sy, 整数型, , , 

赋值 (UFFER_SIZE, 255)
赋值 (缓冲区, UFFER_SIZE)
赋值 (项类名长度, UFFER_SIZE)
赋值 (打开注册表项句柄, 0)
.如果 (等于 (打开注册表项_ (#HKEY_CURRENT_USER, 相加 (到字节集 (“Software\FlySky”), { 0 }), 打开注册表项句柄), 0))
    赋值 (项索引1, 取空白字节集 (UFFER_SIZE))
    赋值 (项类名, 取空白字节集 (UFFER_SIZE))
    赋值 (项索引, 0)
    .判断循环首 (不等于 (枚举注册项_ (打开注册表项句柄, 项索引, 项索引1, 缓冲区, 0, 项类名, 项类名长度, 修改时间), #ERROR_NO_MORE_ITEMS))
        赋值 (项目文本, 取字节集数据 (项索引1, #文本型, ))
        赋值 (sy, .加入项目 (项目文本, , , , , ))
        相减 (sy, 1).扩展 ()
        赋值 (项索引, 相加 (项索引, 1))
        赋值 (项索引1, 取空白字节集 (UFFER_SIZE))
        赋值 (缓冲区, UFFER_SIZE)
        子程序下级项目 (相加 (“Software\FlySky\”, 项目文本), sy)
    .判断循环尾 ()
    关闭注册表项_ (打开注册表项句柄)
.否则
    信息框 (“  Error while calling RegOpenKey”, 0, )
.如果结束


.子程序 子程序下级项目, 空白型, , 
.参数 文本参数, 文本型, , 
.参数 索引数值, 整数型, , 

.局部变量 打开注册表项句柄, 整数型, , , 
.局部变量 项索引, 整数型, , , 
.局部变量 项索引1, 字节集, , , 
.局部变量 数据缓冲区, 字节集, , , 
.局部变量 缓冲区, 整数型, , , 
.局部变量 数据缓冲区长度, 整数型, , , 
.局部变量 UFFER_SIZE, 整数型, , , 
.局部变量 修改时间, 文件时间_, , , 
.局部变量 项类名, 字节集, , , 
.局部变量 项类名长度, 整数型, , , 
.局部变量 匿名局部变量_298, 空白型, , , 
.局部变量 项目文本, 文本型, , , 
.局部变量 sy, 整数型, , , 
.局部变量 n1, 整数型, , , 

赋值 (UFFER_SIZE, 255)
赋值 (缓冲区, UFFER_SIZE)
赋值 (项类名长度, UFFER_SIZE)
赋值 (打开注册表项句柄, 0)
.如果真 (等于 (打开注册表项_ (#HKEY_CURRENT_USER, 相加 (到字节集 (文本参数), { 0 }), 打开注册表项句柄), 0))
    赋值 (项索引1, 取空白字节集 (UFFER_SIZE))
    赋值 (项类名, 取空白字节集 (UFFER_SIZE))
    赋值 (项索引, 0)
    .判断循环首 (不等于 (枚举注册项_ (打开注册表项句柄, 项索引, 项索引1, 缓冲区, 0, 项类名, 项类名长度, 修改时间), #ERROR_NO_MORE_ITEMS))
        赋值 (项目文本, 取字节集数据 (项索引1, #文本型, ))
        调试输出 (项目文本)
        赋值 (sy, 索引数值.加入项目 (项目文本, , , , , ))
        相减 (sy, 1).扩展 ()
        赋值 (项索引, 相加 (项索引, 1))
        赋值 (项索引1, 取空白字节集 (UFFER_SIZE))
        赋值 (缓冲区, UFFER_SIZE)
        子程序下级项目 (相加 (文本参数, “\”, 项目文本), sy)
    .判断循环尾 ()
    
    .如果真 (等于 (枚举注册项_ (打开注册表项句柄, 项索引, 项索引1, 缓冲区, 0, 项类名, 项类名长度, 修改时间), #ERROR_NO_MORE_ITEMS))
        .如果 (等于 (打开注册表项_ (#HKEY_CURRENT_USER, 相加 (到字节集 (文本参数), { 0 }), 打开注册表项句柄), 0))
            赋值 (项索引1, 取空白字节集 (UFFER_SIZE))
            赋值 (数据缓冲区, 取空白字节集 (UFFER_SIZE))
            赋值 (缓冲区, UFFER_SIZE)
            赋值 (数据缓冲区长度, UFFER_SIZE)
            .判断循环首 (不等于 (枚举注册项值_ (打开注册表项句柄, 项索引, 项索引1, 缓冲区, 0, 0, 数据缓冲区, 数据缓冲区长度), #ERROR_NO_MORE_ITEMS))
                .如果真 (大于 (数据缓冲区长度, 0))
                    赋值 (n1, 索引数值.加入项目 (取字节集数据 (项索引1, #文本型, ), , , , , ))
                    相减 (n1, 1).扩展 ()
                .如果真结束
                赋值 (项索引, 相加 (项索引, 1))
                赋值 (项索引1, 取空白字节集 (UFFER_SIZE))
                赋值 (数据缓冲区, 取空白字节集 (UFFER_SIZE))
                赋值 (缓冲区, UFFER_SIZE)
                赋值 (数据缓冲区长度, UFFER_SIZE)
            .判断循环尾 ()
            关闭注册表项_ (打开注册表项句柄)
        .否则
            信息框 (“  Error while calling RegOpenKey”, 0, )
        .如果结束
        
    .如果真结束
    
.如果真结束



 ' 不属于任何一个程序集、类模块的函数：
