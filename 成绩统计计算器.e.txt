 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 372
    高度 = 238
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 4
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 真
    底图 =  ' 空
    图标 =  ' 已保存到：D:\易语言学习\Data\成绩统计计算器.e\_启动窗口_图标.ico
    背景音乐 =  ' 空
    标题 = “成绩统计计算器0.1版”
    帮助文件名 = “”

窗口 窗口1
    左边 = 50
    顶边 = 50
    宽度 = 144
    高度 = 168
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 假
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “”
    帮助文件名 = “”



.常量 加号, "43", , 
.常量 减号, "45", , 
.常量 乘号, "42", , 
.常量 除号, "47", , 
.常量 小数点, "46", , 
.常量 等于号, "61", , 
.常量 Enter键, "13", , 
.常量 Esc, "27", , 
.常量 退格键, "8", , 
.常量 字符, "假", , 
.常量 运算符, "真", , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 5 0 系统核心支持库
 ' iext 27bb20fdd3e145e4bee3db39ddd6e64c 2 0 扩展界面支持库一




.全局变量 分数, 整数型, , "0", 记录各分数段的人数
.全局变量 分数段, 整数型, , "0", 记录欲划分的分数段

.窗口程序集 窗口程序集1, , , 

.程序集变量 统计成绩, 逻辑型, , , 
.程序集变量 成绩列表, 双精度小数型, , "0", 保存输入的成绩
.程序集变量 参考人数, 短整数型, , , 
.程序集变量 总分, 双精度小数型, , , 
.程序集变量 平均分, 双精度小数型, , , 
.程序集变量 及格人数, 短整数型, , , 
.程序集变量 及格率, 双精度小数型, , , 
.程序集变量 运算器, 双精度小数型, , , 
.程序集变量 运算符, 整数型, , , 
.程序集变量 上次输入, 逻辑型, , , 真为运算符,假为字符
.程序集变量 首次输入, 逻辑型, , , 真为首次己输入过,假为首次未输入过
.子程序 __启动窗口_创建完毕, 空白型, , 
赋值 (_启动窗口., 188)
初始化 ()

.子程序 初始化, 空白型, , 
.局部变量 变量1, 整数型, , , 
.局部变量 数字按钮, 按钮, , "20", 
.局部变量 间隔, 整数型, , , 

赋值 (间隔, 8)
.变量循环首 (2, 20, 1, 变量1)
    复制窗口组件 (数字按钮 [变量1])
    事件转移 (数字按钮 [变量1], )
    赋值 (数字按钮 [变量1], 可视, 真)
    数字按钮.移动 ( [变量1], 相加 (相乘 (求余数 (相减 (变量1, 1), 3), 相加 (.宽度, 间隔)), .左边), 相加 (相乘 (整除 (相减 (变量1, 1), 3), 相加 (.高度, 间隔)), .顶边), , )
    .判断开始 (小于或等于 (变量1, 10))
        赋值 (数字按钮 [变量1], 标题, 到文本 (求余数 (变量1, 10)))
        赋值 (数字按钮 [变量1], 标记, 到文本 (求余数 (变量1, 10)))
    .判断 (等于 (变量1, 11))
        赋值 (数字按钮 [变量1], 标题, “・”)
        赋值 (数字按钮 [变量1], 标记, “.”)
    .判断 (等于 (变量1, 12))
        赋值 (数字按钮 [变量1], 标题, “+/-”)
        赋值 (数字按钮 [变量1], 标记, “`”)
    .判断 (等于 (变量1, 13))
        数字按钮.移动 ( [变量1], 相加 (相乘 (求余数 (相减 (变量1, 1), 3), 相加 (.宽度, 间隔)), .左边), 相减 (.顶边, .高度, 间隔), , )
        赋值 (数字按钮 [变量1], 标题, “←”)
        赋值 (数字按钮 [变量1], 标记, 字符 (#退格键))
    .判断 (等于 (变量1, 14))
        数字按钮.移动 ( [变量1], 相加 (相乘 (求余数 (相减 (变量1, 1), 3), 相加 (.宽度, 间隔)), .左边), 相减 (.顶边, .高度, 间隔), , )
        赋值 (数字按钮 [变量1], 标题, “CE”)
        赋值 (数字按钮 [变量1], 标记, “E”)
    .判断 (等于 (变量1, 15))
        数字按钮.移动 ( [变量1], 相加 (相乘 (求余数 (相减 (变量1, 1), 3), 相加 (.宽度, 间隔)), .左边), 相减 (.顶边, .高度, 间隔), , )
        赋值 (数字按钮 [变量1], 标题, “C”)
        赋值 (数字按钮 [变量1], 标记, “C”)
    .判断 (大于 (变量1, 15))
        数字按钮.移动 ( [变量1], 相加 (相乘 (相加 (.宽度, 间隔), 3), .左边), 相加 (相减 (.顶边, .高度, 间隔), 相乘 (求余数 (变量1, 5), 相加 (.高度, 间隔))), , )
        赋值 (数字按钮 [变量1], 标题, 多项选择 (相加 (求余数 (变量1, 5), 1), “+”, “－”, “×”, “÷”, “＝”))
        赋值 (数字按钮 [变量1], 标记, 多项选择 (相加 (求余数 (变量1, 5), 1), 字符 (#加号), 字符 (#减号), 字符 (#乘号), 字符 (#除号), 字符 (#等于号)))
    .默认
        
    .判断结束
    
.变量循环尾 ()
赋值 (.标题, “0”)

.子程序 _统计成绩选择框_被单击, 空白型, , 
.局部变量 变量1, 整数型, , , 

_启动窗口.获取焦点 () ' 只有在启动窗口获得焦点的情况下，才能接收键盘输入
.如果 (.选中)
    赋值 (_启动窗口., 372)
    赋值 (统计成绩, 真)
    .如果真 (等于 (取数组成员数 (分数段), 0))
        赋值 (分数段, { 80, 60, 40, 20 })
    .如果真结束
    全部删除 ()
    0.插入表项 (“参考人数：”, , , , )
    1.插入表项 (“总分：”, , , , )
    2.插入表项 (“平均分：”, , , , )
    3.插入表项 (“及格人数：”, , , , )
    4.插入表项 (“及格率：”, , , , )
    5.插入表项 (“最高分↑：”, , , , )
    6.插入表项 (“最低分↓：”, , , , )
    重定义数组 (分数, 假, 相加 (取数组成员数 (分数段), 1))
    .计次循环首 (相加 (取数组成员数 (分数段), 1), 变量1)
        .判断开始 (等于 (变量1, 1))
            相加 (6, 变量1).插入表项 (相加 (到文本 (分数段 [变量1]), “以上↑：”), , , , )
        .判断 (大于 (变量1, 取数组成员数 (分数段)))
            相加 (6, 变量1).插入表项 (相加 (到文本 (分数段 [相减 (变量1, 1)]), “以下↓：”), , , , )
        .判断 (并且 (大于 (变量1, 1), 小于或等于 (变量1, 取数组成员数 (分数段))))
            相加 (6, 变量1).插入表项 (相加 (到文本 (分数段 [变量1]), “~”, 到文本 (分数段 [相减 (变量1, 1)]), “：”), , , , )
        .默认
            
        .判断结束
        
    .计次循环尾 ()
.否则
    赋值 (_启动窗口., 188)
    赋值 (统计成绩, 假)
.如果结束


.子程序 _按钮1_被单击, 空白型, , 
.局部变量 事件按钮, 按钮, , , 
.局部变量 代码, 整数型, , , 

赋值 (事件按钮, 取事件组件 ())
赋值 (代码, 取代码 (事件按钮.标记, ))
.判断开始 (等于 (首次输入, 假)) ' 处理首次未输入过时的输入
    .判断开始 (并且 (大于或等于 (代码, #键0), 小于或等于 (代码, #键9))) ' 输入的是0~9字符
        赋值 (.标题, 字符 (代码))
        赋值 (上次输入, #字符)
    .判断 (或者 (等于 (代码, #加号), 等于 (代码, #减号), 等于 (代码, #乘号), 等于 (代码, #除号))) ' 输入的是运算符号
        返回 ()
         ' 运算符 ＝ 代码
         ' 上次输入 ＝ #运算符
    .判断 (等于 (代码, #小数点)) ' 输入的小数点
        赋值 (.标题, 相加 (“0”, “.”))
        赋值 (上次输入, #字符)
    .判断 (等于 (代码, 96)) ' 输入的负号,代码96是`的代码,用来代替+/-号代码
        赋值 (.标题, 字符 (#减号))
        赋值 (上次输入, #字符)
    .默认
        
    .判断结束
    赋值 (首次输入, 真)
.判断 (等于 (代码, 96)) ' 输入的负号,代码96是`的代码,用来代替+/-号代码
    .如果 (等于 (取代码 (.标题, 1), #减号))
        赋值 (.标题, 取文本右边 (.标题, 相减 (取文本长度 (.标题), 1)))
    .否则
        赋值 (.标题, 相加 (字符 (#减号), .标题))
    .如果结束
    赋值 (上次输入, #字符)
.判断 (等于 (代码, #小数点))
    .如果 (上次输入) ' 上次输入变量为真时是运算符,为假时是字符
        赋值 (.标题, 相加 (“0”, “.”))
    .否则
        .如果 (等于 (寻找文本 (.标题, “.”, , 假), -1))
            赋值 (.标题, 相加 (.标题, “.”))
        .否则
            返回 ()
        .如果结束
        
    .如果结束
    赋值 (上次输入, #字符)
.判断 (并且 (大于或等于 (代码, #键0), 小于或等于 (代码, #键9)))
    .如果 (等于 (上次输入, #运算符))
        赋值 (.标题, 字符 (代码))
    .否则
        赋值 (.标题, 相加 (.标题, 字符 (代码)))
    .如果结束
    赋值 (上次输入, #字符)
.判断 (或者 (等于 (代码, #加号), 等于 (代码, #减号), 等于 (代码, #乘号), 等于 (代码, #除号)))
    .判断开始 (等于 (运算符, 0))
        赋值 (运算器, 到数值 (.标题))
        赋值 (上次输入, #运算符)
    .判断 (等于 (上次输入, #字符))
        赋值 (.标题, 同级运算 (运算符)) ' 调用同级运算子程序
        赋值 (运算器, 到数值 (.标题))
        赋值 (上次输入, #运算符)
    .默认
        
    .判断结束
    赋值 (运算符, 代码)
.判断 (并且 (等于 (代码, #等于号), 等于 (上次输入, #字符))) ' 算式输入完毕,输出最后结果
    赋值 (.标题, 同级运算 (运算符))
    赋值 (运算器, 0)
    赋值 (运算符, 0)
    赋值 (首次输入, 假)
.判断 (并且 (等于 (代码, #退格键), 不等于 (上次输入, #运算符))) ' 删除最近输入的字符
    赋值 (.标题, 删首尾空 (.标题))
    赋值 (.标题, 取文本左边 (.标题, 相减 (取文本长度 (.标题), 1)))
.判断 (等于 (代码, 67)) ' 按钮C
    赋值 (.标题, “0”)
    赋值 (运算器, 0)
    赋值 (运算符, 0)
    赋值 (首次输入, 假)
    .如果真 (统计成绩)
        清除统计结果 ()
    .如果真结束
    
.判断 (等于 (代码, 69)) ' 按钮CE
    赋值 (运算符, 0)
    赋值 (.标题, 到文本 (运算器))
.默认
    
.判断结束
_启动窗口.获取焦点 ()


.子程序 _标签1_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

载入 (窗口1, _启动窗口, 假)


.子程序 __启动窗口_字符输入, 整数型, , 
.参数 字符代码, 整数型, , 

.判断开始 (等于 (首次输入, 假)) ' 处理首次未输入过时的输入
    .判断开始 (并且 (大于或等于 (字符代码, #键0), 小于或等于 (字符代码, #键9))) ' 输入的是0~9字符
        赋值 (.标题, 字符 (字符代码))
        赋值 (上次输入, #字符)
    .判断 (或者 (等于 (字符代码, #加号), 等于 (字符代码, #减号), 等于 (字符代码, #乘号), 等于 (字符代码, #除号))) ' 输入的是运算符号
        赋值 (运算符, 字符代码)
        赋值 (上次输入, #运算符)
    .判断 (等于 (字符代码, #小数点)) ' 输入的小数点
        赋值 (.标题, 相加 (“0”, “.”))
    .默认
        
    .判断结束
    赋值 (首次输入, 真)
.判断 (等于 (字符代码, #小数点))
    .如果 (上次输入) ' 上次输入变量为真时是运算符,为假时是字符
        赋值 (.标题, 相加 (“0”, “.”))
    .否则
        .如果 (等于 (寻找文本 (.标题, “.”, , 假), -1))
            赋值 (.标题, 相加 (.标题, “.”))
        .否则
            返回 ()
        .如果结束
        
    .如果结束
    赋值 (上次输入, #字符)
.判断 (并且 (大于或等于 (字符代码, #键0), 小于或等于 (字符代码, #键9)))
    .如果 (等于 (上次输入, #运算符))
        赋值 (.标题, 字符 (字符代码))
    .否则
        赋值 (.标题, 相加 (.标题, 字符 (字符代码)))
    .如果结束
    赋值 (上次输入, #字符)
.判断 (或者 (等于 (字符代码, #加号), 等于 (字符代码, #减号), 等于 (字符代码, #乘号), 等于 (字符代码, #除号)))
    .判断开始 (等于 (运算符, 0))
        赋值 (运算器, 到数值 (.标题))
        赋值 (上次输入, #运算符)
    .判断 (等于 (上次输入, #字符))
        赋值 (.标题, 同级运算 (运算符)) ' 调用同级运算子程序
        赋值 (运算器, 到数值 (.标题))
        赋值 (上次输入, #运算符)
    .默认
        
    .判断结束
    赋值 (运算符, 字符代码)
.判断 (并且 (或者 (等于 (字符代码, #Enter键), 等于 (字符代码, #等于号)), 等于 (上次输入, #字符))) ' 算式输入完毕,输出最后结果
    赋值 (.标题, 同级运算 (运算符))
    赋值 (运算器, 0)
    赋值 (运算符, 0)
    赋值 (首次输入, 假)
.判断 (等于 (字符代码, #Esc))
    赋值 (.标题, “0”)
    赋值 (运算器, 0)
    赋值 (运算符, 0)
    赋值 (首次输入, 假)
    .如果真 (统计成绩)
        清除统计结果 ()
    .如果真结束
    
.判断 (并且 (等于 (字符代码, #退格键), 等于 (上次输入, #字符))) ' 删除最近输入的字符
    赋值 (.标题, 删首尾空 (.标题))
    赋值 (.标题, 取文本左边 (.标题, 相减 (取文本长度 (.标题), 1)))
.默认
    
.判断结束


.子程序 同级运算, 文本型, , 对运算器和标签标题进行相应的运算
.参数 运算符号, 整数型, , 字符代码,代表运算符

.局部变量 数值, 双精度小数型, , , 要返回的运算结果

赋值 (数值, 到数值 (.标题))
.判断开始 (等于 (运算符号, #加号))
    .如果真 (统计成绩)
        统计运算 (到数值 (.标题))
    .如果真结束
    赋值 (数值, 相加 (运算器, 数值))
.判断 (等于 (运算符号, #减号))
    赋值 (数值, 相减 (运算器, 数值))
.判断 (等于 (运算符号, #乘号))
    赋值 (数值, 相乘 (运算器, 数值))
.判断 (等于 (运算符号, #除号))
    赋值 (数值, 相除 (运算器, 数值))
.默认
    
.判断结束
返回 (到文本 (数值))

.子程序 统计运算, 空白型, , 
.参数 数值, 双精度小数型, , 

.局部变量 变量1, 整数型, , , 

.如果真 (等于 (取数组成员数 (成绩列表), 0))
    加入成员 (成绩列表, 运算器)
    赋值 (参考人数, 相加 (参考人数, 1))
    赋值 (总分, 相加 (总分, 运算器))
    赋值 (及格人数, 相加 (及格人数, 整除 (运算器, 60)))
    .计次循环首 (取数组成员数 (分数段), 变量1)
        .如果真 (大于或等于 (运算器, 分数段 [变量1]))
            赋值 (分数 [变量1], 相加 (分数 [变量1], 1))
            相加 (6, 变量1).置标题 (1, 到文本 (分数 [变量1]))
            跳出循环 ()
        .如果真结束
        .如果真 (等于 (变量1, 取数组成员数 (分数段)))
            赋值 (分数 [相加 (变量1, 1)], 相加 (分数 [相加 (变量1, 1)], 1))
            相加 (7, 变量1).置标题 (1, 到文本 (分数 [相加 (变量1, 1)]))
        .如果真结束
        
    .计次循环尾 ()
.如果真结束
加入成员 (成绩列表, 数值)
赋值 (参考人数, 相加 (参考人数, 1))
赋值 (总分, 相加 (总分, 数值))
赋值 (平均分, 相除 (总分, 参考人数))
赋值 (及格人数, 相加 (及格人数, 整除 (数值, 60)))
赋值 (及格率, 相除 (及格人数, 参考人数))
.计次循环首 (取数组成员数 (分数段), 变量1)
    .如果真 (大于或等于 (数值, 分数段 [变量1]))
        赋值 (分数 [变量1], 相加 (分数 [变量1], 1))
        相加 (6, 变量1).置标题 (1, 到文本 (分数 [变量1]))
        跳出循环 ()
    .如果真结束
    .如果真 (等于 (变量1, 取数组成员数 (分数段)))
        赋值 (分数 [相加 (变量1, 1)], 相加 (分数 [相加 (变量1, 1)], 1))
        相加 (7, 变量1).置标题 (1, 到文本 (分数 [相加 (变量1, 1)]))
    .如果真结束
    
.计次循环尾 ()
数组排序 (成绩列表, 假)
0.置标题 (1, 到文本 (参考人数))
1.置标题 (1, 到文本 (总分))
2.置标题 (1, 数值到格式文本 (平均分, 2, 假))
3.置标题 (1, 到文本 (及格人数))
4.置标题 (1, 相加 (数值到格式文本 (相乘 (及格率, 100), 2, 假), “%”))
5.置标题 (1, 到文本 (成绩列表 [1]))
6.置标题 (1, 到文本 (成绩列表 [取数组成员数 (成绩列表)]))

.子程序 _超级列表框1_获得焦点, 空白型, , 
_启动窗口.获取焦点 ()

.子程序 __启动窗口_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

弹出菜单 ()


.子程序 _关于成绩统计计算器_被选择, 空白型, , 
信息框 (相加 (“　　该计算器可以当作普通计算器使用，也可以用来统计考试成绩。”, #换行符, “　　用于统计成绩时，请注意在输入成绩前设置好要划分的分数段。”, #换行符, “　　成绩的输入：”, #换行符, “　　成绩输入和平常加总分一样，每输入一个成绩按+号键，全部成绩输完后按Enter键结束。”, #换行符, “　　按钮C或者键盘ESC键可以清空数据，按钮CE可以消除最近一次误输入的运算符（注：对统计成绩无效），按钮←或者键盘BackSpace键可以消除最近误输入的一个字符。”, #换行符, “　　该计算器花了大约两周时间完成，前期主要考虑算法和布局，真正编程时间也就是三天左右。希望它对你有所帮助。如果使用过程中发现BUG或者有什么好的意见和建议，请来信。”, #换行符, “　　chisenin 于 2006年7月14日”, #换行符, “　　E-MAIL：chisenin@163.com　　QQ：17972093”), 0, “关于成绩统计计算器”)


.子程序 _标签2_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

_关于成绩统计计算器_被选择 ()

.子程序 清除统计结果, 空白型, , 
.局部变量 变量1, 整数型, , , 

赋值 (参考人数, 0)
赋值 (总分, 0)
赋值 (平均分, 0)
赋值 (及格人数, 0)
赋值 (及格率, 0)
清除数组 (成绩列表)
数组清零 (分数)
.计次循环首 (取表项数 (), 变量1)
    相减 (变量1, 1).置标题 (1, )
.计次循环尾 ()

.窗口程序集 窗口程序集2, , , 

.程序集变量 分数选择框, 选择框, , "18", 
.子程序 _窗口1_创建完毕, 空白型, , 
.局部变量 变量1, 整数型, , , 
.局部变量 变量2, 整数型, , , 
.局部变量 纵间隔, 整数型, , , 
.局部变量 横间隔, 整数型, , , 

赋值 (纵间隔, 4)
赋值 (横间隔, 16)
.变量循环首 (1, 18, 1, 变量1)
    复制窗口组件 (分数选择框 [变量1])
    事件转移 (分数选择框 [变量1], )
    分数选择框.移动 ( [变量1], 相加 (相乘 (整除 (相减 (变量1, 1), 6), 相加 (.宽度, 横间隔)), .左边), 相加 (相乘 (求余数 (相减 (变量1, 1), 6), 相加 (.高度, 纵间隔)), .顶边), , )
    赋值 (分数选择框 [变量1], 标题, 到文本 (相减 (100, 相乘 (变量1, 5))))
    赋值 (分数选择框 [变量1], 标记, 到文本 (相减 (100, 相乘 (变量1, 5))))
    .计次循环首 (取数组成员数 (分数段), 变量2)
        .如果真 (等于 (分数段 [变量2], 到数值 (分数选择框 [变量1], 标记)))
            赋值 (分数选择框 [变量1], 选中, 真)
            跳出循环 ()
        .如果真结束
        
    .计次循环尾 ()
    赋值 (分数选择框 [变量1], 可视, 真)
.变量循环尾 ()

.子程序 _窗口1_将被销毁, 空白型, , 
.局部变量 变量1, 整数型, , , 

数组排序 (分数段, 假)
_启动窗口.获取焦点 ()
_启动窗口.全部删除 (.)
_启动窗口.插入表项 (., 0, “参考人数：”, , , , )
_启动窗口.插入表项 (., 1, “总分：”, , , , )
_启动窗口.插入表项 (., 2, “平均分：”, , , , )
_启动窗口.插入表项 (., 3, “及格人数：”, , , , )
_启动窗口.插入表项 (., 4, “及格率：”, , , , )
_启动窗口.插入表项 (., 5, “最高分↑：”, , , , )
_启动窗口.插入表项 (., 6, “最低分↓：”, , , , )
重定义数组 (分数, 假, 相加 (取数组成员数 (分数段), 1))
.计次循环首 (相加 (取数组成员数 (分数段), 1), 变量1)
    .判断开始 (等于 (变量1, 1))
        _启动窗口.插入表项 (., 相加 (6, 变量1), 相加 (到文本 (分数段 [变量1]), “以上↑：”), , , , )
    .判断 (大于 (变量1, 取数组成员数 (分数段)))
        _启动窗口.插入表项 (., 相加 (6, 变量1), 相加 (到文本 (分数段 [相减 (变量1, 1)]), “以下↓：”), , , , )
    .判断 (并且 (大于 (变量1, 1), 小于或等于 (变量1, 取数组成员数 (分数段))))
        _启动窗口.插入表项 (., 相加 (6, 变量1), 相加 (到文本 (分数段 [变量1]), “~”, 到文本 (分数段 [相减 (变量1, 1)]), “：”), , , , )
    .默认
        
    .判断结束
    
.计次循环尾 ()


.子程序 _分数段选择框_被单击, 空白型, , 
.局部变量 事件选择框, 选择框, , , 
.局部变量 变量1, 整数型, , , 

赋值 (事件选择框, 取事件组件 ())
.如果 (事件选择框.选中)
    加入成员 (分数段, 到数值 (事件选择框.标记))
.否则
    .计次循环首 (取数组成员数 (分数段), 变量1)
        .如果真 (等于 (分数段 [变量1], 到数值 (事件选择框.标记)))
            删除成员 (分数段, 变量1, 1)
            跳出循环 ()
        .如果真结束
        
    .计次循环尾 ()
.如果结束




 ' 不属于任何一个程序集、类模块的函数：
