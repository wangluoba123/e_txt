 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 660
    高度 = 660
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 0
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 真
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 真
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    窗口类名 = “”
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “”
    帮助文件名 = “”

窗口 控件窗口
    左边 = 50
    顶边 = 50
    宽度 = 660
    高度 = 660
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 0
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    窗口类名 = “”
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “”
    帮助文件名 = “”



.图片 窗口, " ' 已保存到：D:\易语言学习\Data\PNG窗口上放控件.e\窗口", , 
.图片 窗口1, " ' 已保存到：D:\易语言学习\Data\PNG窗口上放控件.e\窗口1", , 
.图片 图标, " ' 已保存到：D:\易语言学习\Data\PNG窗口上放控件.e\图标", , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 5 0 系统核心支持库
 ' eAPI F7FC1AE45C5C4758AF03EF19F18A395D 3 0 应用接口支持库
 ' xplib 7F54B9CE8887428dBA9CEEB94CEF4C72 2 0 XP风格界面库
 ' iext 27bb20fdd3e145e4bee3db39ddd6e64c 2 0 扩展界面支持库一
 ' iext2 AF6AD80AA4244A59AFB3D83ECF5173CC 2 0 扩展界面支持库二



 ' 所需要的模块
 ' 风很凉PNG窗口外形 $png窗口外形.ec


数据类型 PAINTSTRUCT, , 
    .成员 hdc, 整数型, , , 
    .成员 fErase, 整数型, , , 
    .成员 rcPaint, 未知类型0x20002, , , 
    .成员 fRestore, 整数型, , , 
    .成员 fIncUpdate, 整数型, , , 
    .成员 rgbReserved, 字节型, , "32", 


.DLL命令 SetWindowLong, 整数型, "user32", "SetWindowLongA", , 在窗口结构中为指定的窗口设置信息　指定数据的前一个值
    .参数 hwnd, 整数型, , 欲为其取得信息的窗口的句柄
    .参数 nIndex, 整数型, , 请参考GetWindowLong函数的nIndex参数的说明
    .参数 dwNewLong, 整数型, , 由nIndex指定的窗口信息的新值;

.DLL命令 GetWindowLong, 整数型, "user32", "GetWindowLongA", , 
    .参数 hwnd, 整数型, , 
    .参数 nIndex, 整数型, , 

.DLL命令 DrawText, 整数型, "user32", "DrawTextA", , 将文本描绘到指定的矩形中  描绘文字的高度
    .参数 hdc, 整数型, , 欲在其中显示文字的一个设备场景的句柄
    .参数 lpStr, 文本型, , 欲描绘的文本字串
    .参数 nCount, 整数型, , 欲描绘的字符数量。如果要描绘整个字串（直到空中止符），则可将这个参数设为-1
    .参数 lpRect, 未知类型0x20002, , RECT，指定用于绘图的一个格式化矩形（采用逻辑坐标）
    .参数 wFormat, 整数型, , 一个标志位数组，决定了以何种形式执行绘图。参考下面总结的常数类型列表标志常数说明DT_BOTTOM必须同时指定DT_SINGLE。指示文本对齐格式化矩形的底边DT_CALCRECT象下面这样计算格式化矩形：多行绘图时矩形的底边根据需要进行延展，以便容下所有文字；单行绘图时，延展矩形的右侧。不描绘文字。由lpRect参数指定的矩形会载入计算出来的值DT_CENTER文本垂直居中DT_EXPANDTABS描绘文字的时候，对制表站进行扩展。默认的制表站间距是8个字符。但是，可用DT_TABSTOP标志改变这项设定DT_EXTERNALLEADING计算文本行高度的时候，使用当前字体的外部间距属性（the external leading attribute）DT_LEFT文本左对齐DT_NOCLIP描绘文字时不剪切到指定的矩形DT_NOPREFIX通常，函数认为 & 字符表示应为下一个字符加上下划线。该标志禁止这种行为DT_RIGHT文本右对齐DT_SINGLELINE只画单行DT_TABSTOP指定新的制表站间距，采用这个整数的高8位DT_TOP必须同时指定DT_SINGLE。指示文本对齐格式化矩形的顶部DT_VCENTER必须同时指定DT_SINGLE。指示文本对齐格式化矩形的中部DT_WORDBREAK进行自动换行。如用SetTextAlign函数设置了TA_UPDATECP标志，这里的设置则无效;

.DLL命令 SetWindowText, 整数型, "", "SetWindowTextA", , 
    .参数 窗口句柄, 整数型, , 
    .参数 标题, 文本型, , 

.DLL命令 GetDC, 整数型, "", "GetDC", , 
    .参数 hWnd, 整数型, , 

.DLL命令 InvalidateRect_, 整数型, "", "InvalidateRect", , 
    .参数 窗口句柄, 整数型, , 
    .参数 矩形区域, 未知类型0x20002, , 
    .参数 是否立即重画, 逻辑型, , 

.DLL命令 BeginPaint, 整数型, "user32", "BeginPaint", , 准备一个画图窗　
    .参数 hwnd, 整数型, , 
    .参数 lpPaint, PAINTSTRUCT, , 

.DLL命令 CallWindowProc, 整数型, "user32", "CallWindowProcA", , 将消息传答窗口函数
    .参数 lpPrevWndFunc, 整数型, , 
    .参数 hwnd, 整数型, , 
    .参数 msg, 整数型, , 
    .参数 wParam, 整数型, , 
    .参数 lParam, 整数型, , 

.DLL命令 EndPaint, 整数型, "user32", "EndPaint", , 在指定窗口中标记图画结尾标志　
    .参数 hwnd, 整数型, , 
    .参数 lpPaint, PAINTSTRUCT, , 

.DLL命令 GetClassLong, 整数型, "", "GetClassLongA", , 
    .参数 hWnd, 整数型, , 
    .参数 nIndex, 整数型, , 

.DLL命令 SetClassLong, 整数型, "", "SetClassLongA", , 
    .参数 hWnd, 整数型, , 
    .参数 nIndex, 整数型, , 
    .参数 dwNewLong, 整数型, , 

.DLL命令 AnimateWindow, 逻辑型, "", "AnimateWindow", , 
    .参数 hWnd, 整数型, , 
    .参数 dwTime, 整数型, , 
    .参数 dwFlags, 整数型, , 

.DLL命令 SetLayeredWindowAttributes, 逻辑型, "", "SetLayeredWindowAttributes", , 成功返回真，否则返回假
    .参数 hwnd, 整数型, , 透明窗体的句柄
    .参数 crKey, 整数型, , 颜色值
    .参数 bAlpha, 字节型, , 透明度，取值范围是[0,255]
    .参数 dwFlags, 整数型, , 透明方式：LWA_ALPHA(2)时，crKey参数无效，bAlpha参数有效 || LWA_COLORKEY(1)时，bAlpha参数有效而窗体中的所有颜色为crKey的地方将变为透明

.DLL命令 UpdateWindow, 逻辑型, "", "UpdateWindow", , 
    .参数 hWnd, 整数型, , 

.DLL命令 SendMessage, 空白型, "", "SendMessageA", , 
    .参数 窗口句柄, 整数型, , 
    .参数 消息值, 整数型, , 
    .参数 参数一, 整数型, , 
    .参数 参数二, PAINTSTRUCT, , 

.DLL命令 _SendMessage, 空白型, "", "SendMessageA", , 
    .参数 A, 整数型, , 
    .参数 B, 整数型, , 
    .参数 C, 整数型, , 
    .参数 D, 整数型, , 

.DLL命令 Sleep, 空白型, "", "", , 
    .参数 Time, 整数型, , 

.窗口程序集 窗口程序集1, , , 

.程序集变量 PNG, PNG窗口类, , , 
.子程序 __启动窗口_创建完毕, 空白型, , 
PNG.置PNG外形 (_启动窗口.取窗口句柄 (), #窗口1, 150)
载入 (控件窗口, _启动窗口, 假)

.子程序 __启动窗口_位置被改变, 空白型, , 
.如果真 (等于 (是否已创建 (控件窗口), 真))
    控件窗口.移动 (_启动窗口., _启动窗口., , )
.如果真结束



.窗口程序集 窗口程序集2, , , 

.子程序 _控件窗口_创建完毕, 空白型, , 
未知支持库函数_0 (1)
 ' //////////////////// 这三句代码 使窗口透明 控件不透明
赋值 (控件窗口., #品红)
SetWindowLong (控件窗口.取窗口句柄 (), -20, 位或 (GetWindowLong (控件窗口.取窗口句柄 (), -20), 524288))
SetLayeredWindowAttributes (控件窗口.取窗口句柄 (), #品红, 200, 1)
 ' ////////////////////
.未知支持库函数_35 (0, 0, 真, )

.子程序 _按钮1_被单击, 空白型, , 
信息框 (“登陆成功~~！！”, #信息图标, “提示：”)

.子程序 _控件窗口_可否被关闭, 逻辑型, , 
_启动窗口.发送信息 (16, 0, 0) ' #wm_close==16

.类模块 PNG窗口类, , , 

.子程序 置PNG外形, 逻辑型, , 
.参数 参_窗口句柄, 整数型, , 
.参数 参_png数据, 字节集, , 
.参数 透明度, 整数型, 可空, 




 ' 不属于任何一个程序集、类模块的函数：
