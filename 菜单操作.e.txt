 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 429
    高度 = 265
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假





 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 4 系统核心支持库
 ' iext 27bb20fdd3e145e4bee3db39ddd6e64c 1 2 扩展界面支持库一




数据类型 菜单条目结构, , MENUITEMINFO
    .成员 结构大小, 整数型, , , 
    .成员 标识符, 整数型, , , 
    .成员 条目类型, 整数型, , , 
    .成员 条目状态, 整数型, , , 
    .成员 条目ID, 整数型, , , 
    .成员 子菜单句柄, 整数型, , , 
    .成员 选中位图句柄, 整数型, , , 
    .成员 未选中位图句柄, 整数型, , , 
    .成员 条目数据, 整数型, , , 
    .成员 条目内容, 文本型, , , 
    .成员 条目长度, 整数型, , , 


.DLL命令 取得窗口信息, 整数型, "", "GetWindowLongA", , 
    .参数 窗口句柄, 整数型, , 欲为其获取信息的窗口的句柄
    .参数 属性, 整数型, , 欲取回的信息，可以是下述任何一个常数：GWL_EXSTYLE：扩展窗口样式GWL_STYLE：窗口样式GWL_WNDPROC：该窗口的窗口函数的地址GWL_HINSTANCE：拥有窗口的实例的句柄GWL_HWNDPARENT：该窗口之父的句柄。不要用SetWindowWord来改变这个值GWL_ID：对话框中一个子窗口的标识符GWL_USERDATA：含义由应用程序规定DWL_DLGPROC：这个窗口的对话框函数地址DWL_MSGRESULT：在对话框函数中处理的一条消息返回的值DWL_USER：含义由应用程序规定

.DLL命令 窗口设置信息, 整数型, "", "SetWindowLongA", , 在窗口结构中为指定的窗口设置信息，指定数据的前一个值。
    .参数 窗口句柄, 整数型, , 欲为其取得信息的窗口的句柄
    .参数 属性, 整数型, , 请参考GetWindowLong函数的nIndex参数的说明
    .参数 窗口信息, 子程序指针, , 由nIndex指定的窗口信息的新值

.DLL命令 取菜单句柄, 整数型, "", "GetMenu", , 依附于指定窗口的一个菜单的句柄（如果有菜单）；否则返回零
    .参数 窗口句柄, 整数型, , 窗口句柄，这应该是一个窗体句柄。注意可能不是子窗口的句柄

.DLL命令 取子菜单句柄, 整数型, "", "GetSubMenu", , 取得一个弹出式菜单的句柄，它位于菜单中指定的位置。位于指定位置的弹出式菜单的句柄（如果有的话）；否则返回零
    .参数 菜单的句柄, 整数型, , 菜单的句柄
    .参数 位置, 整数型, , 条目在菜单中的位置。第一个条目的编号为0

.DLL命令 将消息传答窗口函数, 整数型, "", "CallWindowProcA", , 将消息传答窗口函数
    .参数 lpPrevWndFunc, 整数型, , 
    .参数 窗口句柄, 整数型, , 
    .参数 Msg, 整数型, , 
    .参数 wParam, 整数型, , 
    .参数 lParam, 整数型, , 

.DLL命令 取条目字串, 整数型, "", "GetMenuStringA", , 取得指定菜单条目的字串，在lpString中返回的字串的长度（不包括空中止字符）。零意味着出错
    .参数 菜单句柄, 整数型, , 
    .参数 条目位置, 整数型, , 欲接收的菜单条目的标识符。如果在wFlags参数中设置了MF_BYCOMMAND标志，这个参数就用于指定要改变的菜单条目的命令ID。如果设置的是MF_BYPOSITION标志，这个参数就用于指定条目在菜单中的位置（第一个条目的位置为0）
    .参数 缓冲区, 文本型, , 指定一个预先定义好的字串缓冲区，以便为菜单条目装载字串
    .参数 缓冲区长度, 整数型, , 载入lp缓冲区中的最大字符数量+1
    .参数 标志, 整数型, , 常数MF_BYCOMMAND或MF_BYPOSITION，取决于wID参数的设置

.DLL命令 删除菜单条目, 整数型, "", "DeleteMenu", , 删除指定的菜单条目（在vb里使用：强烈建议用vb菜单的visible属性从菜单中删除条目。如使用这个函数，会造成指定菜单其他菜单条目的visible属性错误的影响菜单条目）。如条目连接了一个弹出式菜单，就会清除弹出式菜单。用RemoveMenu函数清除一个弹出式菜单条目，同时不影响整个弹出式菜单。
    .参数 菜单句柄, 整数型, , 
    .参数 标志索引, 整数型, , 欲删除菜单条目的标识符。如在wFlags中设置了MF_BYCOMMAND标志，这个参数就代表要改变的菜单条目的命令ID。如设置了MF_BYPOSITION标志，这个参数就代表条目在菜单中的位置（头一个条目肯定是零）
    .参数 标识符, 整数型, , MF_BYPOSITION或MF_BYCOMMAND，具体由nPosition参数决定

.DLL命令 添加菜单项, 整数型, "", "AppendMenuA", , 在指定的菜单里添加一个菜单项
    .参数 菜单句柄, 整数型, , 菜单句柄
    .参数 菜单常数标志, 整数型, , 参考ModifyMenu函数中的菜单常数标志定义表，其中列出了允许使用的所有常数
    .参数 新菜单条目ID, 整数型, , 指定菜单条目的新命令ID。如果在wFlags参数中指定了MF_POPUP字段，那么这应该是指向一个弹出式菜单的句柄
    .参数 标志值, 文本型, , （相应的vb声明见注解），如果在wFlags参数中指定了MF_STRING标志，这就代表在菜单中设置的字串。如设置了MF_BITMAP标志，这就代表一个Long型变量，其中包含了一个位图句柄。如设置了MF_OWNERDRAW，这个值就会包括在DRAWITEMSTRUCT和MEASUREITEMSTRUCT结构中，在条目需要重画的时候由windows发送出去

.DLL命令 取条目数量, 整数型, "", "GetMenuItemCount", , 返回菜单中条目（菜单项）的数量，菜单中的条目数量；-1意味着出错。会设置GetLastError。
    .参数 菜单句柄, 整数型, , 目标菜单的句柄

.DLL命令 复选菜单, 整数型, "", "CheckMenuItem", , 复选或撤消复选指定的菜单条目，如条目的前一个状态是“复选”，就返回MF_CHECKED，如果是“未复选”，就返回MF_UNCHECKED。如指定的菜单条目不存在就返回-1。
    .参数 菜单句柄, 整数型, , 
    .参数 菜单标识, 整数型, , 欲复选或撤消复选的菜单条目的标识符。如果在wCheck中指定了MF_BYCOMMAND标志，这个参数就用于指定要改变的菜单条目的命令ID。如果设置了MF_BYPOSITION标志，这个参数就用于指定条目在菜单中的位置（第一个条目的位置是0）
    .参数 参数, 整数型, , 参考ModifyMenu函数中的菜单常数标志定义表，其中列出了允许使用的所有常数。针对这个函数，只能指定下述常数：MF_BYCOMMAND，MF_BYPOSITION，MF_CHECKED以及MF_UNCHECKED

.DLL命令 禁止菜单, 整数型, "", "EnableMenuItem", , 允许或禁止指定的菜单条目，如指定的菜单条目依附了一个弹出式菜单，那么整个弹出式菜单都会受到影响。
    .参数 菜单句柄, 整数型, , 
    .参数 标识符, 整数型, , 欲允许或禁止的一个菜单条目的标识符。如果在wEnable参数中设置了MF_BYCOMMAND标志，这个参数就代表欲改变菜单条目的命令ID。如设置的是MF_BYPOSITION，则这个参数代表菜单条目在菜单中的位置（第一个条目肯定是零）
    .参数 常数标志, 整数型, , 参考ModifyMenu函数中的菜单常数标志定义表，其中列出了允许使用的所有常数。对于这个函数，只能指定下述常数：MF_BYCOMMAND，MF_BYPOSITION，MF_ENABLED，MF_DISABLED以及MF_GRAYED

.DLL命令 取菜单条目信息, 整数型, "", "GetMenuItemInfoA", , 用一个MENUITEMINFO结构取得（接收）与一个菜单条目有关的特定信息
    .参数 菜单句柄, 整数型, , 
    .参数 位置, 整数型, , 菜单条目的菜单ID或位置
    .参数 查找方式, 逻辑型, , 为假表示uItem是菜单ID，真表示uItem是位置。
    .参数 菜单信息, 菜单条目结构, , MENUITEMINFO，这个结构用于装载请求的信息。

.DLL命令 菜单条目设置信息, 整数型, "", "SetMenuItemInfoA", , 为一个菜单条目设置指定的信息，具体信息保存于MENUITEMINFO结构中。
    .参数 菜单句柄, 整数型, , 
    .参数 位置, 整数型, , 菜单条目的菜单ID或位置
    .参数 查找方式, 逻辑型, , 为假表示uItem是菜单ID，真表示uItem是位置
    .参数 菜单信息, 菜单条目结构, , MENUITEMINFO，用于设置目标菜单条目的特征。

.DLL命令 重画菜单, 整数型, "", "DrawMenuBar", , 为指定的窗口重画菜单。用api函数改变一个窗口菜单的内容时，就要用到这个函数。
    .参数 窗口句柄, 整数型, , 要重画菜单栏的窗口的句柄

.DLL命令 使用符号选中, 整数型, "", "CheckMenuRadioItem", , 指定一个菜单条目被复选成“单选”项目。与单选钮相似，一个特定的组中只能有一个项目被选中。这个组别既可按位置定义，也可按菜单ID定义。复选的项目会显示一个圆形的样式复选符号（●），而不是一个标准的复选符号（√）
    .参数 菜单句柄, 整数型, , 
    .参数 起始位置, 整数型, , 组内第一个位置或菜单ID
    .参数 结束位置, 整数型, , 组内最后一个位置或菜单ID
    .参数 选中位置, 整数型, , 欲复选的位置或菜单ID
    .参数 参数, 整数型, , 下述标志之一 ：如un1，un2，un3引用菜单条目的位置（第一个肯定在位置0处），就设为MF_BYPOSITION；如它们引用的是菜单ID，则设为MF_BYCOMMAND

.DLL命令 取系统菜单句柄, 整数型, "", "GetSystemMenu", , 取得指定窗口的系统菜单的句柄。如执行成功，返回系统菜单的句柄；零意味着出错。如bRevert设为假，也会返回零（简单的恢复原始的系统菜单）
    .参数 窗口句柄, 整数型, , 
    .参数 回复, 逻辑型, , 如设为假，表示接收原始的系统菜单。

.窗口程序集 窗口程序集1, , , 

.程序集变量 窗口信息, 整数型, , , 
.程序集变量 log, 逻辑型, , , 
.程序集变量 菜单句柄, 整数型, , , 
.程序集变量 子菜单句柄, 整数型, , , 
.程序集变量 系统菜单句柄, 整数型, , , 
.子程序 __启动窗口_创建完毕, 空白型, , 
.局部变量 窗口句柄, 整数型, , , 
.局部变量 菜单条目结构, 菜单条目结构, , , 
.局部变量 N, 整数型, , , 
.局部变量 dd, 整数型, , , 

赋值 (窗口句柄, _启动窗口.取窗口句柄 ())
赋值 (窗口信息, 取得窗口信息 (窗口句柄, -4))
窗口设置信息 (窗口句柄, -4, &主要窗口信息)
赋值 (系统菜单句柄, 取系统菜单句柄 (窗口句柄, 假))
添加菜单项 (系统菜单句柄, 0, 30000, “0”)
添加菜单项 (系统菜单句柄, 0, 30001, “关于本程序(&A)...”)
赋值 (菜单句柄, 取菜单句柄 (窗口句柄)) ' 获取窗口主菜单句柄
赋值 (子菜单句柄, 取子菜单句柄 (菜单句柄, 1))
赋值 (子菜单句柄, 取子菜单句柄 (子菜单句柄, 1))
删除菜单条目 (子菜单句柄, 0, 1024)
.计次循环首 (5, N)
    添加菜单项 (子菜单句柄, 0, 相加 (20005, N), 多项选择 (N, “eng”, “chs”, “cht”, “jap”, “fra”))
.计次循环尾 ()
重画菜单 (子菜单句柄)

.子程序 主要窗口信息, 整数型, , 
.参数 窗口句柄, 整数型, , 
.参数 Msg, 整数型, , 
.参数 wParam, 整数型, , 
.参数 lParam, 整数型, , 

.局部变量 高字, 整数型, , , 
.局部变量 低字, 整数型, , , 
.局部变量 文本, 文本型, , , 

.如果真 (等于 (Msg, 71))
    赋值 (log, 真)
.如果真结束
.如果真 (等于 (Msg, 16))
    赋值 (log, 假)
.如果真结束
.如果真 (log)
    .判断开始 (等于 (Msg, 273)) ' 控件被选择
        赋值 (高字, 取高低字 (wParam, 真))
        赋值 (低字, 取高低字 (wParam, 假))
        .如果真 (并且 (等于 (lParam, 0), 等于 (高字, 0)))
            .如果真 (大于 (低字, 20005))
                赋值 (文本, 取空白文本 (255))
                取条目字串 (子菜单句柄, 相减 (低字, 20006), 文本, 255, 1024)
                信息框 (相加 (“你选择了 ID:”, 到文本 (低字), “  ”, 文本), 0, )
                返回 (0) ' 返回0表示已处理此消息，不返回的话会触发 _Hide_被选择()
            .如果真结束
            
        .如果真结束
        
    .判断 (等于 (Msg, 287)) ' 鼠标经过菜单
        赋值 (低字, 取高低字 (wParam, 假))
        输出调试文本 (“WM_MENUSELECT”)
        输出调试文本 (到文本 (取高低字 (wParam, 真)))
        输出调试文本 (到文本 (取高低字 (wParam, 假)))
        输出调试文本 (到文本 (lParam))
        输出调试文本 (“--------------”)
        赋值 (文本, 取空白文本 (255))
        .判断开始 (小于 (低字, 20000))
            取条目字串 (菜单句柄, 低字, 文本, 255, 1024)
            0.置文本 (相加 (到文本 (低字), “：”, 文本))
        .判断 (小于或等于 (低字, 20002))
            取条目字串 (取子菜单句柄 (菜单句柄, 0), 相减 (低字, 20001), 文本, 255, 1024)
            0.置文本 (相加 (到文本 (低字), “：”, 文本))
        .判断 (小于或等于 (低字, 20004))
            取条目字串 (取子菜单句柄 (菜单句柄, 1), 相减 (低字, 20004), 文本, 255, 1024)
            0.置文本 (相加 (到文本 (低字), “：”, 文本))
        .默认
            取条目字串 (取子菜单句柄 (菜单句柄, 2), 相减 (低字, 20006), 文本, 255, 1024)
            0.置文本 (相加 (到文本 (低字), “：”, 文本, “ ”, 类型 (相减 (低字, 20006)), “ ”, 状态 (相减 (低字, 20006))))
        .判断结束
        
    .判断 (等于 (Msg, 274)) ' 系统菜单被选择
        .如果真 (等于 (wParam, 30001))
            信息框 (“本程序由谁编写？”, 0, )
            返回 (0) ' 返回0表示已处理此消息
        .如果真结束
        
    .默认
        
    .判断结束
    
.如果真结束
返回 (将消息传答窗口函数 (窗口信息, 窗口句柄, Msg, wParam, lParam))

.子程序 _ccc_被选择, 空白型, , 
信息框 (“”, 0, )

.子程序 取高低字, 整数型, , 
.参数 N, 整数型, , 
.参数 取高位, 逻辑型, , 

.判断开始 (取高位)
    返回 (整除 (N, 65536))
.默认
    返回 (位与 (N, 65535))
.判断结束


.子程序 _按钮1_被单击, 空白型, , 
删除菜单条目 (子菜单句柄, 相减 (取条目数量 (子菜单句柄), 1), 1024)

.子程序 _按钮2_被单击, 空白型, , 
.局部变量 A, 整数型, , , 

赋值 (A, 相加 (20006, 取条目数量 (子菜单句柄)))
添加菜单项 (子菜单句柄, 16, A, 到文本 (A))

.子程序 _Hide_被选择, 空白型, , 
信息框 (“_Hide_被选择()”, 0, )

.子程序 __启动窗口_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

0.置文本 ()

.子程序 _按钮3_被单击, 空白型, , 
复选菜单 (子菜单句柄, 到数值 (.内容), 1032)

.子程序 _按钮4_被单击, 空白型, , 
复选菜单 (子菜单句柄, 到数值 (.内容), 1024)

.子程序 _按钮5_被单击, 空白型, , 
禁止菜单 (子菜单句柄, 到数值 (.内容), 1024)

.子程序 _按钮6_被单击, 空白型, , 
禁止菜单 (子菜单句柄, 到数值 (.内容), 1026)

.子程序 _按钮7_被单击, 空白型, , 
禁止菜单 (子菜单句柄, 到数值 (.内容), 1025)

.子程序 _按钮8_被单击, 空白型, , 
.局部变量 菜单条目结构, 菜单条目结构, , , 

赋值 (菜单条目结构.结构大小, 48)
赋值 (菜单条目结构.标识符, 16)
赋值 (菜单条目结构.条目状态, 0)
赋值 (菜单条目结构.条目内容, .内容)
赋值 (菜单条目结构.条目长度, 相加 (取文本长度 (.内容), 1))
菜单条目设置信息 (子菜单句柄, 0, 真, 菜单条目结构)

.子程序 类型, 文本型, , 
.参数 N, 整数型, , 

.局部变量 菜单条目结构, 菜单条目结构, , , 
.局部变量 X, 文本型, , , 

输出调试文本 (到文本 (N))
赋值 (菜单条目结构.结构大小, 48)
赋值 (菜单条目结构.标识符, 16)
取菜单条目信息 (子菜单句柄, N, 真, 菜单条目结构)
.如果真 (不等于 (位与 (菜单条目结构.条目类型, 4), 0))
    赋值 (X, 相加 (X, “位图 ”))
.如果真结束
.如果真 (不等于 (位与 (菜单条目结构.条目类型, 32), 0))
    赋值 (X, 相加 (X, “无分割线另起一列 ”))
.如果真结束
.如果真 (不等于 (位与 (菜单条目结构.条目类型, 64), 0))
    赋值 (X, 相加 (X, “分割线另起一列 ”))
.如果真结束
.如果真 (不等于 (位与 (菜单条目结构.条目类型, 256), 0))
    赋值 (X, 相加 (X, “用户绘制 ”))
.如果真结束
.如果真 (不等于 (位与 (菜单条目结构.条目类型, 512), 0))
    赋值 (X, 相加 (X, “互斥选择 ”))
.如果真结束
.如果真 (不等于 (位与 (菜单条目结构.条目类型, 16384), 0))
    赋值 (X, 相加 (X, “RIGHTJUSTIFY ”))
.如果真结束
.如果真 (不等于 (位与 (菜单条目结构.条目类型, 8192), 0))
    赋值 (X, 相加 (X, “文字从右往左 ”))
.如果真结束
.如果真 (不等于 (位与 (菜单条目结构.条目类型, 2048), 0))
    赋值 (X, 相加 (X, “分隔条 ”))
.如果真结束
返回 (X)

.子程序 状态, 文本型, , 
.参数 N, 整数型, , 

.局部变量 菜单条目结构, 菜单条目结构, , , 
.局部变量 X, 文本型, , , 

输出调试文本 (到文本 (N))
赋值 (菜单条目结构.结构大小, 48)
赋值 (菜单条目结构.标识符, 1)
取菜单条目信息 (子菜单句柄, N, 真, 菜单条目结构)
输出调试文本 (到文本 (菜单条目结构.条目状态))
.如果真 (不等于 (位与 (菜单条目结构.条目状态, 8), 0))
    赋值 (X, 相加 (X, “选中 ”))
.如果真结束
.如果真 (不等于 (位与 (菜单条目结构.条目状态, 4096), 0))
    赋值 (X, 相加 (X, “默认 ”))
.如果真结束
.如果真 (不等于 (位与 (菜单条目结构.条目状态, 3), 0))
    赋值 (X, 相加 (X, “禁止/灰化 ”))
.如果真结束
.如果真 (不等于 (位与 (菜单条目结构.条目状态, 128), 0))
    赋值 (X, 相加 (X, “高亮 ”))
.如果真结束
.如果真 (不等于 (位与 (菜单条目结构.条目状态, 512), 0))
    赋值 (X, 相加 (X, “RADIOCHECK ”))
.如果真结束
.如果真 (等于 (菜单条目结构.条目状态, 0))
    赋值 (X, “正常”)
.如果真结束
返回 (X)

.子程序 _按钮9_被单击, 空白型, , 
使用符号选中 (子菜单句柄, 0, 相减 (取条目数量 (子菜单句柄), 1), 到数值 (.内容), 1024)


 ' 不属于任何一个程序集、类模块的函数：
