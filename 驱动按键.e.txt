 ' 文件类型：Windows控制台程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 380
    高度 = 250
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假



.常量 大小写区分识别符, "“ABCDEFGHIJKLMNOPQRSTUVWXYZ<>?:"{}_+|)(*&^%$#@!~”", , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 5 3 系统核心支持库
 ' iext2 AF6AD80AA4244A59AFB3D83ECF5173CC 2 0 扩展界面支持库二
 ' EThread 5F99C1642A2F4e03850721B4F5D7C3F8 2 0 多线程支持库





.DLL命令 加载DLL, 整数型, "kernel32.dll", "LoadLibraryA", 公开, --------------------------------------------------------------------------64位 DD驱动
    .参数 DLL文件, 文本型, 传址, 

.DLL命令 卸载DLL, 整数型, "kernel32.dll", "FreeLibrary", 公开, 
    .参数 句柄, 整数型, , 

.DLL命令 鼠标按键, 整数型, "sys.dll", "DD_btn", , 改名dd.dll，与实际调用的文件名称一致
    .参数 btn, 整数型, , 

.DLL命令 鼠标绝对移动, 整数型, "sys.dll", "DD_mov", , 
    .参数 x, 整数型, , 横坐标
    .参数 y, 整数型, , 纵坐标

.DLL命令 鼠标相对移动, 整数型, "sys.dll", "DD_movR", , 
    .参数 dx, 整数型, , 横坐标
    .参数 dy, 整数型, , 纵坐标

.DLL命令 键盘按键, 空白型, "sys.dll", "DD_key", , 
    .参数 key, 整数型, , DD专用虚拟键码
    .参数 flag, 整数型, , 标识:按下=1,放开=2

.DLL命令 鼠标滚轮, 整数型, "sys.dll", "DD_whl", , 
    .参数 flag, 整数型, , 标识:前滚=1,后滚=2

.DLL命令 键盘可见字符, 整数型, "sys.dll", "DD_str", , 直接输入键盘上的可见字符
    .参数 str, 文本型, 传址, 

.DLL命令 虚拟键码转DD键码, 整数型, "sys.dll", "DD_todc", , 
    .参数 vkcode, 整数型, , 标准虚拟键码

.DLL命令 鼠标移动2, 整数型, "sys.dll", "DD_MouseMove", , 窗口内鼠标移动
    .参数 hwnd, 整数型, , 窗口句柄,为0时表示全屏,等同mov
    .参数 x, 整数型, , 横坐标
    .参数 y, 整数型, , 纵坐标

.DLL命令 抓图, 整数型, "sys.dll", "DD_SnapPic", , 窗口内抓图
    .参数 hwnd, 整数型, , 窗口句柄,为0时表示全屏
    .参数 x, 整数型, , 起点横坐标
    .参数 y, 整数型, , 起点纵坐标
    .参数 w, 整数型, , 宽度
    .参数 h, 整数型, , 高度

.DLL命令 取色, 整数型, "sys.dll", "DD_PickColor", , 窗口内取色
    .参数 hwnd, 整数型, , 窗口句柄,为0时表示全屏
    .参数 x, 整数型, , 窗口内的横坐标
    .参数 y, 整数型, , 窗口内的纵坐标
    .参数 const, 整数型, , 常量始终等于0

.DLL命令 取激活窗口句柄, 整数型, "sys.dll", "DD_GetActiveWindow", , 用普通方法无法获取时可用这个函数

.窗口程序集 窗口程序集_启动窗口, , , 

.程序集变量 DD驱动句柄, 整数型, , , 
.程序集变量 停止, 逻辑型, , , 
.子程序 __启动窗口_创建完毕, 空白型, , 
赋值 (DD驱动句柄, 加载DLL (相加 (取运行目录 (), “\sys.dll”))) ' 64位系统加载驱动
键盘按键 (455681, 88)
.如果真 (等于 (DD驱动句柄, 0))
    信息框 (“驱动加载失败！请检测是否未安装驱动或杀毒软件拦截！”, 64, “Mester”, )
    结束 ()
.如果真结束
200.未知支持库函数_92 (#F1键, #F2键)

.子程序 子程序1, 空白型, , 
.局部变量 密码, 文本型, , , 
.局部变量 c, 文本型, , , 
.局部变量 b, 整数型, , , 

赋值 (密码, 删全部空 (.内容))
延时 (3000)
键盘可见字符 (密码)

.子程序 _按钮1_被单击, 空白型, , 
子程序1 ()

.子程序 驱动按键, 空白型, , 
.参数 键代码_, 整数型, , 

键盘按键 (键代码_, 1)
延时 (50)
键盘按键 (键代码_, 2)

.子程序 键名取键代码, 整数型, , 取键名的键代码(返回键代码)
.参数 键名, 文本型, , 键名,如填:A键,将返回65的键代码

.局部变量 按键码, 整数型, , , 

.判断开始 (等于 (到小写 (键名), “win键”))
    赋值 (按键码, 91)
.判断 (等于 (到小写 (键名), “ctrl键”))
    赋值 (按键码, #Ctrl键)
.判断 (等于 (到小写 (键名), “shift键”))
    赋值 (按键码, #Shift键)
.判断 (等于 (到小写 (键名), “alt键”))
    赋值 (按键码, #Alt键)
.判断 (等于 (键名, “0键”))
    赋值 (按键码, #键0)
.判断 (等于 (键名, “1键”))
    赋值 (按键码, #键1)
.判断 (等于 (键名, “2键”))
    赋值 (按键码, #键2)
.判断 (等于 (键名, “3键”))
    赋值 (按键码, #键3)
.判断 (等于 (键名, “4键”))
    赋值 (按键码, #键4)
.判断 (等于 (键名, “5键”))
    赋值 (按键码, #键5)
.判断 (等于 (键名, “6键”))
    赋值 (按键码, #键6)
.判断 (等于 (键名, “7键”))
    赋值 (按键码, #键7)
.判断 (等于 (键名, “8键”))
    赋值 (按键码, #键8)
.判断 (等于 (键名, “9键”))
    赋值 (按键码, #键9)
.判断 (等于 (到大写 (键名), “A键”))
    赋值 (按键码, #A键)
.判断 (等于 (到大写 (键名), “B键”))
    赋值 (按键码, #B键)
.判断 (等于 (到大写 (键名), “C键”))
    赋值 (按键码, #C键)
.判断 (等于 (到大写 (键名), “D键”))
    赋值 (按键码, #D键)
.判断 (等于 (到大写 (键名), “E键”))
    赋值 (按键码, #E键)
.判断 (等于 (到大写 (键名), “F键”))
    赋值 (按键码, #F键)
.判断 (等于 (到大写 (键名), “G键”))
    赋值 (按键码, #G键)
.判断 (等于 (到大写 (键名), “H键”))
    赋值 (按键码, #H键)
.判断 (等于 (到大写 (键名), “I键”))
    赋值 (按键码, #I键)
.判断 (等于 (到大写 (键名), “J键”))
    赋值 (按键码, #J键)
.判断 (等于 (到大写 (键名), “K键”))
    赋值 (按键码, #K键)
.判断 (等于 (到大写 (键名), “L键”))
    赋值 (按键码, #L键)
.判断 (等于 (到大写 (键名), “M键”))
    赋值 (按键码, #M键)
.判断 (等于 (到大写 (键名), “N键”))
    赋值 (按键码, #N键)
.判断 (等于 (到大写 (键名), “O键”))
    赋值 (按键码, #O键)
.判断 (等于 (到大写 (键名), “P键”))
    赋值 (按键码, #P键)
.判断 (等于 (到大写 (键名), “Q键”))
    赋值 (按键码, #Q键)
.判断 (等于 (到大写 (键名), “R键”))
    赋值 (按键码, #R键)
.判断 (等于 (到大写 (键名), “S键”))
    赋值 (按键码, #S键)
.判断 (等于 (到大写 (键名), “T键”))
    赋值 (按键码, #T键)
.判断 (等于 (到大写 (键名), “U键”))
    赋值 (按键码, #U键)
.判断 (等于 (到大写 (键名), “V键”))
    赋值 (按键码, #V键)
.判断 (等于 (到大写 (键名), “W键”))
    赋值 (按键码, #W键)
.判断 (等于 (到大写 (键名), “X键”))
    赋值 (按键码, #X键)
.判断 (等于 (到大写 (键名), “Y键”))
    赋值 (按键码, #Y键)
.判断 (等于 (到大写 (键名), “Z键”))
    赋值 (按键码, #Z键)
.判断 (等于 (到大写 (键名), “F1键”))
    赋值 (按键码, #F1键)
.判断 (等于 (到大写 (键名), “F2键”))
    赋值 (按键码, #F2键)
.判断 (等于 (到大写 (键名), “F3键”))
    赋值 (按键码, #F3键)
.判断 (等于 (到大写 (键名), “F4键”))
    赋值 (按键码, #F4键)
.判断 (等于 (到大写 (键名), “F5键”))
    赋值 (按键码, #F5键)
.判断 (等于 (到大写 (键名), “F6键”))
    赋值 (按键码, #F6键)
.判断 (等于 (到大写 (键名), “F7键”))
    赋值 (按键码, #F7键)
.判断 (等于 (到大写 (键名), “F8键”))
    赋值 (按键码, #F8键)
.判断 (等于 (到大写 (键名), “F9键”))
    赋值 (按键码, #F9键)
.判断 (等于 (到大写 (键名), “F10键”))
    赋值 (按键码, #F10键)
.判断 (等于 (到大写 (键名), “F11键”))
    赋值 (按键码, #F11键)
.判断 (等于 (到大写 (键名), “F12键”))
    赋值 (按键码, #F12键)
.判断 (等于 (到大写 (键名), “F13键”))
    赋值 (按键码, #F13键)
.判断 (等于 (到大写 (键名), “F14键”))
    赋值 (按键码, #F14键)
.判断 (等于 (到大写 (键名), “F15键”))
    赋值 (按键码, #F15键)
.判断 (等于 (到大写 (键名), “F16键”))
    赋值 (按键码, #F16键)
.判断 (等于 (键名, “break键”))
    赋值 (按键码, #Break键)
.判断 (等于 (键名, “回车键”))
    赋值 (按键码, #回车键)
.判断 (等于 (到小写 (键名), “pause键”))
    赋值 (按键码, #Pause键)
.判断 (等于 (到小写 (键名), “capsLock键”))
    赋值 (按键码, #CapsLock键)
.判断 (等于 (到小写 (键名), “numLock键”))
    赋值 (按键码, #NumLock键)
.判断 (等于 (到小写 (键名), “scrollLock键”))
    赋值 (按键码, #ScrollLock键)
.判断 (等于 (到小写 (键名), “esc键”))
    赋值 (按键码, #Esc键)
.判断 (等于 (键名, “空格键”))
    赋值 (按键码, #空格键)
.判断 (等于 (到小写 (键名), “pageup键”))
    赋值 (按键码, #PageUp键)
.判断 (等于 (到小写 (键名), “pagedown键”))
    赋值 (按键码, #PageDown键)
.判断 (等于 (到小写 (键名), “home键”))
    赋值 (按键码, #Home键)
.判断 (等于 (到小写 (键名), “end键”))
    赋值 (按键码, #End键)
.判断 (等于 (键名, “左光标键”))
    赋值 (按键码, #左光标键)
.判断 (等于 (键名, “上光标键”))
    赋值 (按键码, #上光标键)
.判断 (等于 (键名, “右光标键”))
    赋值 (按键码, #右光标键)
.判断 (等于 (键名, “下光标键”))
    赋值 (按键码, #下光标键)
.判断 (等于 (到小写 (键名), “ins键”))
    赋值 (按键码, #Ins键)
.判断 (等于 (到小写 (键名), “del键”))
    赋值 (按键码, #Del键)
.判断 (等于 (键名, “分号键”))
    赋值 (按键码, #分号键)
.判断 (等于 (键名, “等号键”))
    赋值 (按键码, #等号键)
.判断 (等于 (键名, “,键”))
    赋值 (按键码, #逗号键)
.判断 (等于 (键名, “减号键”))
    赋值 (按键码, #减号键)
.判断 (等于 (键名, “.键”))
    赋值 (按键码, #圆点键)
.判断 (等于 (键名, “除号键”))
    赋值 (按键码, #除号键)
.判断 (等于 (键名, “反撇号键”))
    赋值 (按键码, #反撇号键)
.判断 (等于 (键名, “[键”))
    赋值 (按键码, #左中括号键)
.判断 (等于 (键名, “]键”))
    赋值 (按键码, #右中括号键)
.判断 (等于 (键名, “/键”))
    赋值 (按键码, #斜杠键)
.判断 (等于 (键名, “单引号键”))
    赋值 (按键码, #单引号键)
.判断 (等于 (键名, “*键”))
    赋值 (按键码, 106)
.判断 (等于 (键名, “+键”))
    赋值 (按键码, 107)
.判断 (等于 (键名, “退格键”))
    赋值 (按键码, #退格键)
.默认
    
.判断结束
返回 (按键码)

.子程序 特殊符号处理, 整数型, , 
.参数 符号, 文本型, , 

.判断开始 (等于 (符号, “~”))
    返回 (200)
.判断 (等于 (符号, “!”))
    返回 (201)
.判断 (等于 (符号, “@”))
    返回 (202)
.判断 (等于 (符号, “#”))
    返回 (203)
.判断 (等于 (符号, “$”))
    返回 (204)
.判断 (等于 (符号, “%”))
    返回 (205)
.判断 (等于 (符号, “^”))
    返回 (206)
.判断 (等于 (符号, “&”))
    返回 (207)
.判断 (等于 (符号, “*”))
    返回 (208)
.判断 (等于 (符号, “(”))
    返回 (209)
.判断 (等于 (符号, “)”))
    返回 (210)
.判断 (等于 (符号, “-”))
    返回 (211)
.判断 (等于 (符号, “+”))
    返回 (212)
.判断 (等于 (符号, “:”))
    返回 (410)
.判断 (等于 (符号, “?”))
    返回 (510)
.判断 (等于 (符号, “=”))
    返回 (212)
.默认
    
.判断结束
返回 (0)
 ' ￥

.子程序 _动画框1_监视键被按下, 空白型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (等于 (键代码, #F1键))
    
    赋值 (停止, 假)
    
    未知支持库函数_0 (&子程序2, , )
.如果真结束
.如果真 (等于 (键代码, #F2键))
    赋值 (停止, 真)
.如果真结束
赋值 (., 到文本 (停止))

.子程序 子程序2, 空白型, , 
.判断循环首 (真)
    延时 (100)
    驱动按键 (303)
    .如果真 (等于 (停止, 真))
        跳出循环 ()
    .如果真结束
    
.判断循环尾 ()




 ' 不属于任何一个程序集、类模块的函数：
