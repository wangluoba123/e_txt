 ' 文件类型：Windows窗口程序

 ' 程序名称：数据库管理器
 ' 程序描述：本程序用作完成易语言系统中“数据库”菜单下的“结构管理器”和“记录管理器”功能。开发代号:易小刀.
 ' 程序作者：王军
 ' 邮政编码：210017
 ' 联系地址：江苏南京南苑晔园35-301室
 ' 联系电话：025-6431383
 ' 传真号码：
 ' 电子信箱：kindows@sina.com
 ' 主页地址：oldphoto.8u8.com
 ' 版权声明：www.eyuyan.com
www.ccfly.com
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 678
    高度 = 324
    鼠标指针 = { 0,0,0,0 }
    标记 = “易之表”
    可视 = 真
    禁止 = 假
    边框 = 1
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 真
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 3
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “易之表 (增强版) {易之表} - [未标题]”
    帮助文件名 = “”

窗口 易之表关于
    左边 = 50
    顶边 = 50
    宽度 = 302
    高度 = 173
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “关于易之表”
    帮助文件名 = “”

窗口 表格属性窗口
    左边 = 50
    顶边 = 50
    宽度 = 364
    高度 = 250
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “表格属性”
    帮助文件名 = “”

窗口 易之表颜色选择窗口
    左边 = 50
    顶边 = 50
    宽度 = 295
    高度 = 149
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “请选择颜色:”
    帮助文件名 = “”

窗口 易计算器窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 253
    高度 = 286
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 真
    保持标题栏激活 = 假
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “易计算器”
    帮助文件名 = “”

窗口 易万年历窗口
    左边 = 50
    顶边 = 50
    宽度 = 289
    高度 = 205
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = 12607488 '  0xC06000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 真
    保持标题栏激活 = 假
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “易万年历”
    帮助文件名 = “”

窗口 易之表函数
    左边 = 50
    顶边 = 50
    宽度 = 137
    高度 = 418
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 3
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 真
    保持标题栏激活 = 假
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “函数面板”
    帮助文件名 = “”



.图片 模块, " ' 已保存到：D:\易语言学习\Data\易之表增强版.e\模块", , edb转xls.ec
.图片 图标, " ' 已保存到：D:\易语言学习\Data\易之表增强版.e\图标", , ICO
.常量 原数据库, "“库1”", , 
.常量 数据库管理器, "“数据库管理器”", , 
.常量 用户习惯, "“用户习惯”", , 
.常量 易之表1, "“易之表”", , 
.常量 用户习惯1, "“用户习惯”", , 
.常量 逗号分隔文件, "“逗号分隔文件”", , 
.常量 字段名, "“字段名”", , 
.常量 字段类型, "“字段类型”", , 
.常量 字段长度, "“字段长度”", , 
.常量 chj数据库, "“chj”", , 
.常量 数据库1, "“圆球”", , 
.常量 英文, "“英文”", , 
.常量 中文, "“中文”", , 
.常量 日文, "“日文”", , 
.常量 韩文, "“韩文”", , 
.常量 德语, "“德语”", , 
.常量 法语, "“法语”", , 
.常量 荷语, "“荷语”", , 
.常量 澳语, "“澳语”", , 
.常量 挪语, "“挪语”", , 
.常量 西班牙语, "“西班牙语”", , 
.常量 备注, "“备注”", , 
.常量 常量1, "", , 
.图片 basegrd, " ' 已保存到：D:\易语言学习\Data\易之表增强版.e\basegrd", , 
.图片 界面, " ' 已保存到：D:\易语言学习\Data\易之表增强版.e\界面", , 


 ' 所需要的支持库：
 ' KRNLN d09f2340818511d396f6aaf844c7e325 3 2 系统核心支持库
 ' iext 27bb20fdd3e145e4bee3db39ddd6e64c 1 1 扩展界面支持库一
 ' cncnv 63AA4BEA120C4DABAD567115556DE054 1 0 汉字编码转换支持库




.全局变量 颜色选择标题, 文本型, , , 
.全局变量 返回颜色有效, 逻辑型, , , 
.全局变量 返回颜色, 整数型, , , 
.全局变量 _新表格, 表格, , "100", 新的表格控件
.全局变量 _表格总数, 整数型, , , 统计表格总数

.窗口程序集 易之表窗口程序集, , , 

.程序集变量 现行文件名, 文本型, , , 
.程序集变量 是否被修改, 逻辑型, , , 
.程序集变量 起始列号, 整数型, , , 列号对应字段
.程序集变量 结束列号, 整数型, , , 
.程序集变量 起始行号, 整数型, , , 行号对应记录号
.程序集变量 结束行号, 整数型, , , 
.程序集变量 现行文件名1, 文本型, , , 
.程序集变量 是否被修改1, 逻辑型, , , 
.程序集变量 相等行高, 逻辑型, , , 
.程序集变量 计算之方向, 文本型, , , 默认为纵向
.程序集变量 计算之范围, 文本型, , , 默认为选区
.子程序 __启动窗口_尺寸被改变, 空白型, , 无命令按钮时:28-48  有命令按钮时:56-76  加入文件名时:96
5.移动 (56, 相减 (取用户区宽度 (), 10), 相减 (取用户区高度 (), 76))


.子程序 _新建_被选择, 空白型, , 
.如果真 (等于 (询问保存文档 (), 假))
    20.初始尺寸 (8)
    4.置文本 (“总行数 = 20”)
    5.置文本 (“总列数 = 8”)
    赋值 (是否被修改, 假)
    赋值 (“”)
    赋值 (_启动窗口.标题, “易之表 (增强版) {易之表} - [未标题]”)
    赋值 (_启动窗口.标记, “易之表”)
    
.如果真结束


.子程序 _打开_被选择, 空白型, , 
.局部变量 文件号, 整数型, , , 

.如果真 (等于 (询问保存文档 (), 假))
    不要在前 ()
    赋值 (.标题, “请输入欲打开的表格文件名：”)
    赋值 (.类型, 0)
    .如果真 (等于 (打开 (), 真))
        打开并读入文件 (.文件名)
        赋值 (_启动窗口.标题, 相加 (“易之表 (增强版)  {易之表} - [”, .文件名, “]”))
    .如果真结束
    要在前 ()
.如果真结束


.子程序 打开并读入文件, 空白型, , 
.参数 文件名, 文本型, , 

.如果 (等于 (文件名.从文件读 (), 假))
    信息框 (“打开文件失败！”, #错误图标, “错误”)
.否则
    赋值 (是否被修改, 假)
    赋值 (现行文件名, 文件名)
.如果结束


.子程序 _保存_被选择, 空白型, , 
保存文档 ()

.子程序 _另存为_被选择, 空白型, , 
不要在前 ()
赋值 (.标题, “请输入欲另存到的表格文件名：”)
赋值 (.类型, 1)
.如果真 (等于 (打开 (), 真))
    保存文档 (.文件名)
    赋值 (_启动窗口.标题, 相加 (“易之表 (增强版)  {易之表} - [”, .文件名, “]”))
    
.如果真结束
要在前 ()

.子程序 _打印_被选择, 空白型, , 
.如果真 (打印设置 ())
    设置修改 ()
    .打印 ()
.如果真结束


.子程序 _退出_被选择, 空白型, , 
.如果真 (等于 (询问保存文档 (), 假))
    销毁 () ' 通过销毁主窗口退出程序
.如果真结束


.子程序 _剪切_被选择, 空白型, , 
设置修改 ()
取光标行号 ().复制 (取光标列号 (), 取选择行数 (), 取选择列数 ())
取光标行号 ().清除 (取光标列号 (), 取选择行数 (), 取选择列数 ())

.子程序 _复制_被选择, 空白型, , 
取光标行号 ().复制 (取光标列号 (), 取选择行数 (), 取选择列数 ())

.子程序 _粘贴_被选择, 空白型, , 
设置修改 ()
粘贴到光标处 ()

.子程序 __启动窗口_可否被关闭, 逻辑型, , 
返回 (取反 (询问保存文档 ()))

.子程序 询问保存文档, 逻辑型, , 返回真表示用户选择了中止
.局部变量 询问返回, 整数型, , , 

.如果真 (等于 (是否被修改, 真))
    .如果真 (是否已创建 (易之表函数))
        赋值 (易之表函数.总在最前, 假)
    .如果真结束
    赋值 (询问返回, 信息框 (“文件已经被修改，是否保存？”, 相加 (#取消是否钮, #询问图标), “询问”))
    .如果真 (是否已创建 (易之表函数))
        赋值 (易之表函数.总在最前, 真)
    .如果真结束
    
    .如果真 (等于 (询问返回, #取消钮))
        返回 (真)
    .如果真结束
    .如果真 (等于 (询问返回, #是钮))
        .如果真 (等于 (保存文档 (), 真))
            返回 (真)
        .如果真结束
        
    .如果真结束
    
.如果真结束
返回 (假)

.子程序 保存文档, 逻辑型, , 返回真表示用户选择了中止
.参数 文件名, 文本型, 可空, 

.局部变量 保存文件名, 文本型, , , 
.局部变量 文件号, 整数型, , , 

赋值 (保存文件名, 选择 (是否为空 (文件名), , 文件名))
.如果真 (等于 (保存文件名, “”))
    赋值 (.标题, “请输入欲保存到的表格文件名：”)
    赋值 (.类型, 1)
    不要在前 ()
    .如果真 (等于 (打开 (), 假))
        返回 (真)
    .如果真结束
    赋值 (保存文件名, .文件名)
    要在前 ()
.如果真结束
赋值 (是否被修改, 假)
.如果 (等于 (保存文件名.存到文件 (), 假))
    信息框 (“保存文件失败！”, #错误图标, “错误”)
.否则
    赋值 (现行文件名, 保存文件名)
.如果结束
返回 (假)

.子程序 _打印设置_被选择, 空白型, , 
.如果真 (打印设置 ())
    设置修改 ()
.如果真结束


.子程序 _打印预览_被选择, 空白型, , 
打印预览 ()

.子程序 _清空_被选择, 空白型, , 
设置修改 ()
取光标行号 ().清除 (取光标列号 (), 取选择行数 (), 取选择列数 ())

.子程序 _组合_被选择, 空白型, , 
设置修改 ()
取光标行号 ().合并 (取光标列号 (), 取选择行数 (), 取选择列数 ())

.子程序 _分解_被选择, 空白型, , 
设置修改 ()
取光标行号 ().分解 (取光标列号 ())

.子程序 _前插入行_被选择, 空白型, , 
设置修改 ()
.如果 (不等于 (.数据提供者, “数据库提供者1”))
    取光标行号 ().插入行 ()
.否则
    相加 (取行数 (), 1).插入行 ()
    取行数 ().置光标 (1)
.如果结束
4.置文本 (相加 (“总行数 = ”, 到文本 (取行数 ())))


.子程序 _前插入列_被选择, 空白型, , 
.如果真 (等于 (_启动窗口.标记, “数据库”))
    信息框 (“数据库不能插入列,请先修改数据库结构!”, 0, )
    返回 ()
.如果真结束
设置修改 ()
取光标列号 ().插入列 ()
5.置文本 (相加 (“总列数 = ”, 到文本 (取列数 ())))


.子程序 _删除行_被选择, 空白型, , 
设置修改 ()
取光标行号 ().删除行 (取选择行数 ())
4.置文本 (相加 (“总行数 = ”, 到文本 (取行数 ())))


.子程序 _删除列_被选择, 空白型, , 
.如果真 (等于 (_启动窗口.标记, “数据库”))
    信息框 (“数据库不能删除列,请先修改数据库结构!”, 0, )
    返回 ()
.如果真结束
设置修改 ()
取光标列号 ().删除列 (取选择列数 ())
5.置文本 (相加 (“总列数 = ”, 到文本 (取列数 ())))


.子程序 _比例50_被选择, 空白型, , 
赋值 (.缩放比, 50)

.子程序 _比例100_被选择, 空白型, , 
赋值 (.缩放比, 100)

.子程序 _比例200_被选择, 空白型, , 
赋值 (.缩放比, 200)

.子程序 _页面宽度_被选择, 空白型, , 
等宽缩放 ()

.子程序 _关于易之表_被选择, 空白型, , 
不要在前 ()
载入 (易之表关于, , 真)
要在前 ()


.子程序 _打开数据库_被选择, 空白型, , 此功能用作演示合并多个数据提供者数据的方法
关闭 ()
不要在前 ()
.如果真 (并且 (等于 (询问保存文档 (), 假), 等于 (打开 (), 真), 不等于 (.文件名, “”)))
    打开数据库 (.文件名)
    赋值 (_启动窗口.标题, 相加 (“易之表 (增强版)  {易之表} - [”, .文件名, “]”))
.如果真结束
要在前 ()

.子程序 打开数据库, 空白型, , 
.参数 欲打开数据库文件, 文本型, , 

.局部变量 字段数, 整数型, , , 
.局部变量 字段索引, 整数型, , , 
.局部变量 字段名称, 文本型, , "0", 

.如果真 (打开 (欲打开数据库文件, , , , , “?”, )) ' 打开数据库获取所有字段的名称
    赋值 (取字段数 ())
    .计次循环首 ()
        .如果真 (不等于 (取字段类型 (), #字节集型))
            加入成员 (取字段名 ())
        .如果真结束
        
    .计次循环尾 ()
    关闭 ()
    
    赋值 (取数组成员数 ())
    1.初始尺寸 ()
    .计次循环首 ()
        1.置文本 ( [)])

.子程序 _表格1_内容被改变, 空白型, , 
.参数 行号, 整数型, , 
.参数 列号, 整数型, , 
.参数 行数, 整数型, , 
.参数 列数, 整数型, , 

设置修改 ()
2.置文本 (相加 (“光标行 = ”, 到文本 (行号)))
3.置文本 (相加 (“光标列 = ”, 到文本 (列号)))


.子程序 _修改数据库_被选择, 空白型, , 此功能用作演示数据提供者属性用法
不要在前 ()
.如果真 (并且 (等于 (询问保存文档 (), 假), 等于 (打开 (), 真), 不等于 (.文件名, “”)))
    赋值 (.数据库文件名, .文件名)
    赋值 (.数据提供者, “数据库提供者1”) ' 请注意使用数据库提供者与使用通用提供者的不同.如不能改变表格行高等.这是由提供者的数据存储能力决定的.
    0.置文本 (“数据提供者 = 数据库提供者1”)
    打开 (.文件名, , , , , “?”, )
    置当前库 (.文件名)
    赋值 (_启动窗口.标题, 相加 (“易之表 (增强版) {数据库} - [”, .文件名, “]”))
    
    1.初始尺寸 (1)
    全部选择 ()
    全部复制 ()
    1.粘贴 (1)
    赋值 (_启动窗口.标记, “数据库”)
.如果真结束
要在前 ()

.子程序 _表格1_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

取光标行号 ().跳到 ()


.子程序 _表格1_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (取光标行号 ())
赋值 (相减 (相加 (取光标行号 (), 取选择行数 ()), 1))
赋值 (取光标列号 ())
赋值 (相减 (相加 (取光标列号 (), 取选择列数 ()), 1))

取光标行号 ().跳到 ()


.子程序 _退出数据库修改_被选择, 空白型, , 
全部选择 ()
全部复制 ()
1.初始尺寸 (1)
1.粘贴 (1)

赋值 (.数据提供者, “通用提供者1”)
0.置文本 (“数据提供者 = 通用提供者1”)

20.初始尺寸 (8)
4.置文本 (“总行数 = 20”)
5.置文本 (“总列数 = 8”)

赋值 (_启动窗口.标题, “易之表 (增强版) {易之表} - [未标题]”)
赋值 (_启动窗口.标记, “易之表”)

.子程序 _表格1_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

弹出菜单 ()

.子程序 _置行高_被选择, 空白型, , 
.局部变量 行高, 整数型, , , 

.如果真 (并且 (输入框 (“请输入新行高（单位0.1毫米）”, “新行高”, 到文本 (取光标行号 ().取行高 ()), 行高, #输入整数), 大于 (行高, 0)))
    取光标行号 ().置行高 (取选择行数 (), 行高)
    设置修改 ()
.如果真结束


.子程序 _置列宽_被选择, 空白型, , 
.局部变量 列宽, 整数型, , , 

.如果真 (并且 (输入框 (“请输入新列宽（单位0.1毫米）”, “新列宽”, 到文本 (取光标行号 ().取列宽 ()), 列宽, #输入整数), 大于 (列宽, 0)))
    取光标列号 ().置列宽 (取选择列数 (), 列宽)
    设置修改 ()
.如果真结束


.子程序 _表格属性_被选择, 空白型, , 
不要在前 ()
载入 (表格属性窗口, , 真)
要在前 ()


.子程序 __启动窗口_创建完毕, 空白型, , 
.局部变量 参数文本, 文本型, , "0", 感谢"西风"朋友提供此段代码.

全部关闭 ()

赋值 (_启动窗口.位置, 3)

赋值 (.表格线颜色, 取数值注册表项 (#易之表1, #用户习惯1, “表格线颜色”, #黑色))
赋值 (.背景颜色, 取数值注册表项 (#易之表1, #用户习惯1, “表景颜色”, #白色))
赋值 (.允许选择块, 不等于 (取数值注册表项 (#易之表1, #用户习惯1, “允许选择块”, 1), 0))
赋值 (.显示标尺, 不等于 (取数值注册表项 (#易之表1, #用户习惯1, “显示标尺”, 1), 0))
赋值 (.显示空表格线, 不等于 (取数值注册表项 (#易之表1, #用户习惯1, “显示空表格线”, 1), 0))
赋值 (.禁止调整行高, 不等于 (取数值注册表项 (#易之表1, #用户习惯1, “禁止调整行高”, 0), 0))
赋值 (.禁止调整列宽, 不等于 (取数值注册表项 (#易之表1, #用户习惯1, “禁止调整列宽”, 0), 0))
赋值 (.允许粘贴扩展, 不等于 (取数值注册表项 (#易之表1, #用户习惯1, “允许粘贴扩展”, 1), 0))

0.置文本 (“数据提供者 = 通用提供者1”)
4.置文本 (“总行数 = 20”)
5.置文本 (“总列数 = 8”)

关联数据库 ()
取命令行 ()
.如果真 (并且 (大于 (取数组成员数 (参数文本), 0), 文件是否存在 (参数文本 [1])))
    赋值 (.数据库文件名, 参数文本 [1])
    赋值 (.数据提供者, “数据库提供者1”) ' 请注意使用数据库提供者与使用通用提供者的不同.如不能改变表格行高等.这是由提供者的数据存储能力决定的.
    0.置文本 (“数据提供者 = 数据库提供者1”)
.如果真结束
赋值 (计算之方向, “纵向”)
赋值 (计算之范围, “选区”)
赋值 (相等行高, 假)
载入 (易之表函数, _启动窗口, 假)
获取焦点 ()

.子程序 __启动窗口_将被销毁, 空白型, , 
写注册表项 (#易之表1, #用户习惯1, “表格线颜色”, .表格线颜色)
写注册表项 (#易之表1, #用户习惯1, “背景颜色”, .背景颜色)
写注册表项 (#易之表1, #用户习惯1, “允许选择块”, 选择 (.允许选择块, 1, 0))
写注册表项 (#易之表1, #用户习惯1, “显示标尺”, 选择 (.显示标尺, 1, 0))
写注册表项 (#易之表1, #用户习惯1, “显示空表格线”, 选择 (.显示空表格线, 1, 0))
写注册表项 (#易之表1, #用户习惯1, “禁止调整行高”, 选择 (.禁止调整行高, 1, 0))
写注册表项 (#易之表1, #用户习惯1, “禁止调整列宽”, 选择 (.禁止调整列宽, 1, 0))
写注册表项 (#易之表1, #用户习惯1, “允许粘贴扩展”, 选择 (.允许粘贴扩展, 1, 0))

.子程序 _添加数据_被选择, 空白型, , 
赋值 (.标题, “请输入欲添加进来的表格文件名：”)
赋值 (.类型, 0)
不要在前 ()
.如果真 (等于 (打开 (), 真))
    .如果 (等于 (.从文件读 (.文件名), 假)) ' 数据源2仅在此处使用
        信息框 (“打开欲添加文件失败！”, #错误图标, “错误”)
    .否则
        .添加 ()
        设置修改 ()
        1.初始尺寸 (1) ' 因为使用的是通用提供者2,所以可以初始化尺寸.在此处清除通用提供者2内的数据.
        
    .如果结束
    
.如果真结束
4.置文本 (相加 (“总行数 = ”, 到文本 (取行数 ())))
5.置文本 (相加 (“总列数 = ”, 到文本 (取列数 ())))
要在前 ()


.子程序 _文本型_被选择, 空白型, , 
设置修改 ()
取光标行号 ().置类型 (取光标列号 (), 取选择行数 (), 取选择列数 (), #文本型)

.子程序 _图片文件名型_被选择, 空白型, , 
设置修改 ()
取光标行号 ().置类型 (取光标列号 (), 取选择行数 (), 取选择列数 (), #图片文件名)

.子程序 _图片数据型_被选择, 空白型, , 
设置修改 ()
取光标行号 ().置类型 (取光标列号 (), 取选择行数 (), 取选择列数 (), #图片数据)

.子程序 _文本颜色_被选择, 空白型, , 
赋值 (颜色选择标题, “请选择文本颜色:”)
不要在前 ()
载入 (易之表颜色选择窗口, , 真)
要在前 ()

.如果真 (等于 (返回颜色有效, 真))
    设置修改 ()
    取光标行号 ().置文本色 (取光标列号 (), 取选择行数 (), 取选择列数 (), 返回颜色)
.如果真结束


.子程序 _改当前单元格背景颜色_被选择, 空白型, , 
赋值 (颜色选择标题, “请选择背景颜色:”)
不要在前 ()
载入 (易之表颜色选择窗口, , 真)
要在前 ()

.如果真 (等于 (返回颜色有效, 真))
    设置修改 ()
    取光标行号 ().置背景色 (取光标列号 (), 取选择行数 (), 取选择列数 (), 返回颜色)
.如果真结束


.子程序 _字体_被选择, 空白型, , 
.局部变量 字体属性, 整数型, , , 
.局部变量 字体尺寸, 双精度小数型, , , 

不要在前 ()
.如果真 (等于 (打开 (), 真))
    .如果真 (等于 (.加粗, 真))
        赋值 (字体属性, 相加 (字体属性, #粗体))
    .如果真结束
    .如果真 (等于 (.倾斜, 真))
        赋值 (字体属性, 相加 (字体属性, #斜体))
    .如果真结束
    .如果真 (等于 (.删除线, 真))
        赋值 (字体属性, 相加 (字体属性, #删除线))
    .如果真结束
    .如果真 (等于 (.下划线, 真))
        赋值 (字体属性, 相加 (字体属性, #下划线))
    .如果真结束
    取光标行号 ().置字体属性 (取光标列号 (), 取选择行数 (), 取选择列数 (), 字体属性)
    取光标行号 ().置字体名 (取光标列号 (), 取选择行数 (), 取选择列数 (), .字体名称)
    赋值 (字体尺寸, 相除 (相乘 (.字体大小, 10), 72, 0.0394)) ' 由于字体对话框返回的字体尺寸是以1/72英寸为单位,现将其转换为0.1MM.
    取光标行号 ().置字体尺寸 (取光标列号 (), 取选择行数 (), 取选择列数 (), 字体尺寸)
    设置修改 ()
.如果真结束
要在前 ()

.子程序 _边距_被选择, 空白型, , 
.局部变量 边距, 整数型, , , 

.如果真 (输入框 (“请输入边距(单位0.1MM):”, “单元格边距设置”, “9”, 边距, #输入整数))
    设置修改 ()
    取光标行号 ().置边距 (取光标列号 (), 取选择行数 (), 取选择列数 (), 边距)
.如果真结束


.子程序 _通常型_被选择, 空白型, , 
设置修改 ()
取光标行号 ().置文本输入格式 (取光标列号 (), 取选择行数 (), 取选择列数 (), #通常型)

.子程序 _字节型_被选择, 空白型, , 
设置修改 ()
取光标行号 ().置文本输入格式 (取光标列号 (), 取选择行数 (), 取选择列数 (), #字节型)

.子程序 _短整数型_被选择, 空白型, , 
设置修改 ()
取光标行号 ().置文本输入格式 (取光标列号 (), 取选择行数 (), 取选择列数 (), #短整数型)

.子程序 _整数型_被选择, 空白型, , 
设置修改 ()
取光标行号 ().置文本输入格式 (取光标列号 (), 取选择行数 (), 取选择列数 (), #整数型)

.子程序 _长整数型_被选择, 空白型, , 
设置修改 ()
取光标行号 ().置文本输入格式 (取光标列号 (), 取选择行数 (), 取选择列数 (), #长整数型)

.子程序 _小数型_被选择, 空白型, , 
设置修改 ()
取光标行号 ().置文本输入格式 (取光标列号 (), 取选择行数 (), 取选择列数 (), #小数型)

.子程序 _双精度小数型_被选择, 空白型, , 
设置修改 ()
取光标行号 ().置文本输入格式 (取光标列号 (), 取选择行数 (), 取选择列数 (), #双精度小数型)

.子程序 _逻辑型_被选择, 空白型, , 
设置修改 ()
取光标行号 ().置文本输入格式 (取光标列号 (), 取选择行数 (), 取选择列数 (), #逻辑型)

.子程序 _日期时间型_被选择, 空白型, , 
设置修改 ()
取光标行号 ().置文本输入格式 (取光标列号 (), 取选择行数 (), 取选择列数 (), #日期时间型)

.子程序 _上左_被选择, 空白型, , 
设置修改 ()
取光标行号 ().置对齐方式 (取光标列号 (), 取选择行数 (), 取选择列数 (), #上左)

.子程序 _上中_被选择, 空白型, , 
设置修改 ()
取光标行号 ().置对齐方式 (取光标列号 (), 取选择行数 (), 取选择列数 (), #上中)

.子程序 _上右_被选择, 空白型, , 
设置修改 ()
取光标行号 ().置对齐方式 (取光标列号 (), 取选择行数 (), 取选择列数 (), #上右)

.子程序 _中左_被选择, 空白型, , 
设置修改 ()
取光标行号 ().置对齐方式 (取光标列号 (), 取选择行数 (), 取选择列数 (), #中左)

.子程序 _中中_被选择, 空白型, , 
设置修改 ()
取光标行号 ().置对齐方式 (取光标列号 (), 取选择行数 (), 取选择列数 (), #中中)

.子程序 _中右_被选择, 空白型, , 
设置修改 ()
取光标行号 ().置对齐方式 (取光标列号 (), 取选择行数 (), 取选择列数 (), #中右)

.子程序 _下左_被选择, 空白型, , 
设置修改 ()
取光标行号 ().置对齐方式 (取光标列号 (), 取选择行数 (), 取选择列数 (), #下左)

.子程序 _下中_被选择, 空白型, , 
设置修改 ()
取光标行号 ().置对齐方式 (取光标列号 (), 取选择行数 (), 取选择列数 (), #下中)

.子程序 _下右_被选择, 空白型, , 
设置修改 ()
取光标行号 ().置对齐方式 (取光标列号 (), 取选择行数 (), 取选择列数 (), #下右)

.子程序 _缩放图片_被选择, 空白型, , 
设置修改 ()
取光标行号 ().置对齐方式 (取光标列号 (), 取选择行数 (), 取选择列数 (), #缩放图片)

.子程序 _居中图片_被选择, 空白型, , 
设置修改 ()
取光标行号 ().置对齐方式 (取光标列号 (), 取选择行数 (), 取选择列数 (), #居中图片)

.子程序 _缩放居中图片_被选择, 空白型, , 
设置修改 ()
取光标行号 ().置对齐方式 (取光标列号 (), 取选择行数 (), 取选择列数 (), #缩放居中图片)

.子程序 _平铺图片_被选择, 空白型, , 
设置修改 ()
取光标行号 ().置对齐方式 (取光标列号 (), 取选择行数 (), 取选择列数 (), #平铺图片)

.子程序 _缩放平铺图片_被选择, 空白型, , 
设置修改 ()
取光标行号 ().置对齐方式 (取光标列号 (), 取选择行数 (), 取选择列数 (), #缩放平铺图片)

.子程序 _添加边框_被选择, 空白型, , 
设置修改 ()
取光标行号 ().加线条 (取光标列号 (), 取选择行数 (), 取选择列数 (), 相加 (#左边框, #上边框, #右边框, #下边框))

.子程序 _添加全部表格线_被选择, 空白型, , 
设置修改 ()
取光标行号 ().加线条 (取光标列号 (), 取选择行数 (), 取选择列数 (), 相加 (#左边框, #上边框, #右边框, #下边框, #水平线, #垂直线))

.子程序 _添加水平表格线_被选择, 空白型, , 
设置修改 ()
取光标行号 ().加线条 (取光标列号 (), 取选择行数 (), 取选择列数 (), #水平线)

.子程序 _添加垂直表格线_被选择, 空白型, , 
设置修改 ()
取光标行号 ().加线条 (取光标列号 (), 取选择行数 (), 取选择列数 (), #垂直线)

.子程序 _添加单斜线_被选择, 空白型, , 
设置修改 ()
取光标行号 ().加线条 (取光标列号 (), 取选择行数 (), 取选择列数 (), #单斜线)

.子程序 _添加双斜线_被选择, 空白型, , 
设置修改 ()
取光标行号 ().加线条 (取光标列号 (), 取选择行数 (), 取选择列数 (), #双斜线)

.子程序 _添加交叉线_被选择, 空白型, , 
设置修改 ()
取光标行号 ().加线条 (取光标列号 (), 取选择行数 (), 取选择列数 (), #交叉线)

.子程序 _清除内部表格线_被选择, 空白型, , 
设置修改 ()
取光标行号 ().删线条 (取光标列号 (), 取选择行数 (), 取选择列数 (), 相加 (#水平线, #垂直线))

.子程序 _清除斜线或交叉线_被选择, 空白型, , 
设置修改 ()
取光标行号 ().删线条 (取光标列号 (), 取选择行数 (), 取选择列数 (), 相加 (#单斜线, #双斜线, #交叉线))

.子程序 _清除所有表格线_被选择, 空白型, , 
设置修改 ()
取光标行号 ().删线条 (取光标列号 (), 取选择行数 (), 取选择列数 (), 相加 (#左边框, #上边框, #右边框, #下边框, #水平线, #垂直线))

.子程序 _置表头行数_被选择, 空白型, , 
.局部变量 表头行数, 整数型, , , 

.如果真 (输入框 (“请输入表头行数:”, “表头行数设置”, “0”, 表头行数, #输入整数))
    设置修改 ()
    表头行数.置表头行数 ()
.如果真结束


.子程序 _置表头列数_被选择, 空白型, , 
.局部变量 表头列数, 整数型, , , 

.如果真 (输入框 (“请输入表头列数:”, “表头列数设置”, “0”, 表头列数, #输入整数))
    设置修改 ()
    表头列数.置表头列数 ()
.如果真结束


.子程序 关联数据库, 逻辑型, , 感谢"西风"朋友提供此段代码.
.如果 (是否为调试版 ())
    返回 (假)
.否则
    返回 (并且 (写注册项 (#根类, “.edb\”, “edbfile”), 写注册项 (#根类, “edbfile\”, “易数据库”), 写注册项 (#根类, “edbfile\DefaultIcon\”, 相加 (选择 (等于 (取文本右边 (取运行目录 (), 1), “\”), 取运行目录 (), 相加 (取运行目录 (), “\”)), 取执行文件名 (), “,0”)), 写注册项 (#根类, “edbfile\shell\open\command\”, 相加 (选择 (等于 (取文本右边 (取运行目录 (), 1), “\”), 取运行目录 (), 相加 (取运行目录 (), “\”)), 取执行文件名 (), “ %1”))))
.如果结束


.子程序 设置修改, 空白型, , 
.如果真 (不等于 (.数据提供者, “数据库提供者1”))
    赋值 (是否被修改, 真)
.如果真结束


.子程序 _横向计算列与列_被选择, 空白型, , 
.局部变量 计次, 整数型, , , 
.局部变量 列号1, 整数型, , , 
.局部变量 计数, 整数型, , , 
.局部变量 行号1, 整数型, , , 
.局部变量 累计数, 小数型, , , 

赋值 (计数, 1)
赋值 (行号1, )
信息框 (起始行号, 0, )
信息框 (结束行号, 0, )
.如果真 (等于 (结束列号, 取列数 ()))
    信息框 (到文本 (结束列号) ＋ 到文本 (数据源1.取列数 ()), 0, )
    设置修改 ()
    相加 (结束列号, 1).插入列 ()
    5.置文本 (相加 (“总列数 = ”, 到文本 (取列数 ())))
    
.如果真结束

.计次循环首 (相减 (相加 (1), ), 计数)
    赋值 (计数, 1)
    赋值 (列号1, )
    赋值 (累计数, 0)
    .计次循环首 (相减 (相加 (1), ), 计次)
        .如果真 (或者 (等于 (取字段类型 (列号1), 2), 等于 (取字段类型 (列号1), 3), 等于 (取字段类型 (列号1), 4), 等于 (取字段类型 (列号1), 5), 等于 (取字段类型 (列号1), 6)))
            赋值 (累计数, 相加 (到数值 (子文本替换 (_启动窗口.取文本 (., 行号1, 列号1), “,”, “”, , , 真)), 累计数))
        .如果真结束
        信息框 (取字段类型 (列号1), 0, )
        .如果真 (等于 (取字段类型 (列号1), 0))
            赋值 (累计数, 相加 (到数值 (子文本替换 (_启动窗口.取文本 (., 行号1, 列号1), “,”, “”, , , 真)), 累计数))
        .如果真结束
        
        赋值 (列号1, 相加 (列号1, 1))
    .计次循环尾 ()
    信息框 (累计数, 0, )
    行号1.置文本 (相加 (1), 到文本 (累计数))
    替换 (, 取字段名 (结束列号 ＋ 1), wqx)
    赋值 (行号1, 相加 (行号1, 1))
.计次循环尾 ()
保存更改 ()
刷新 ()


.子程序 _纵向计算行与行_被选择, 空白型, , 
.局部变量 计数, 整数型, , , 
.局部变量 列号2, 整数型, , , 
.局部变量 计次, 整数型, , , 
.局部变量 行号2, 整数型, , , 
.局部变量 累计值, 小数型, , "0", 
.局部变量 累计数, 小数型, , , 

.如果真 (不等于 (.数据提供者, “数据库提供者1”))
    赋值 (计数, 1)
    赋值 (列号2, 起始列号)
    .如果真 (等于 (结束行号, 取行数 ()))
        信息框 (到文本 (结束行号) ＋ 到文本 (数据源1.取行数 ()), 0, )
        设置修改 ()
        相加 (结束行号, 1).插入行 ()
        4.置文本 (相加 (“总行数 = ”, 到文本 (取行数 ())))
        
    .如果真结束
    
    .计次循环首 (相减 (相加 (结束列号, 1), 起始列号), 计数)
        赋值 (计次, 1)
        赋值 (行号2, 起始行号)
        赋值 (0)
        .计次循环首 (相减 (相加 (结束行号, 1), 起始行号), 计次)
            信息框 (计次, 0, )
            .如果真 (或者 (等于 (取字段类型 (列号2), 2), 等于 (取字段类型 (列号2), 3), 等于 (取字段类型 (列号2), 4), 等于 (取字段类型 (列号2), 5), 等于 (取字段类型 (列号2), 6)))
                赋值 (累计数, 相加 (到数值 (子文本替换 (_启动窗口.取文本 (., 行号2, 列号2), “,”, “”, , , 真)), 累计数))
                
            .如果真结束
            信息框 (取字段类型 (列号1), 0, )
            .如果真 (等于 (取字段类型 (列号2), 0))
                赋值 (累计数, 相加 (到数值 (子文本替换 (_启动窗口.取文本 (., 行号2, 列号2), “,”, “”, , , 真)), 累计数))
            .如果真结束
            
            赋值 (行号2, 相加 (行号2, 1))
            
        .计次循环尾 ()
        相加 (结束行号, 1).置文本 (列号2, 到文本 (累计数))
        替换 (, 取字段名 (结束列号 ＋ 1), wqx)
        赋值 (列号2, 相加 (列号2, 1))
    .计次循环尾 ()
    
    保存更改 ()
    刷新 ()
    
    
    返回 ()
.如果真结束

重定义数组 (累计值, 假, 结束列号)
跳到 (起始行号)
.计次循环首 (相减 (相加 (1), ), 计数)
    赋值 (列号2, )
    赋值 (计次, 1)
    .计次循环首 (相减 (相加 (1), ), 计次)
        .如果真 (或者 (等于 (取字段类型 (列号2), 2), 等于 (取字段类型 (列号2), 3), 等于 (取字段类型 (列号2), 4), 等于 (取字段类型 (列号2), 5), 等于 (取字段类型 (列号2), 6)))
            赋值 (累计值 [列号2], 相加 (累计值 [列号2], 读 (取字段名 (列号2))))
        .如果真结束
        赋值 (列号2, 相加 (列号2, 1))
    .计次循环尾 ()
    跳过 ()
.计次循环尾 ()
.如果真 (小于 (取记录数 (), 相加 (1)))
    加空记录 ()
.如果真结束
跳到 (相加 (1))
赋值 (列号2, )
赋值 (计次, 1)
.计次循环首 (相减 (相加 (1), ), 计次)
    .如果真 (或者 (等于 (取字段类型 (列号2), 2), 等于 (取字段类型 (列号2), 3), 等于 (取字段类型 (列号2), 4), 等于 (取字段类型 (列号2), 5), 等于 (取字段类型 (列号2), 6)))
        替换 (取字段名 (列号2), 累计值 [列号2])
    .如果真结束
    赋值 (列号2, 相加 (列号2, 1))
.计次循环尾 ()
保存更改 ()
刷新 ()



.子程序 _横向纵向都计算_被选择, 空白型, , 
_横向计算列与列_被选择 ()
_纵向计算行与行_被选择 ()

.子程序 _关于累加计算_被选择, 空白型, , 
信息框 (相加 (“累加计算只能对整数型等数值型进行计算，不能对文本型进行计算！”, #换行符, “使用方法:点击主菜单：”, #左引号, “文件”, #右引号, “→”, #左引号, “修改数据库”, #右引号, “，打开一个有数值型的数据库，就可以操作了。”, #左引号, “如果累加失败,可以点主菜单：”, #左引号, “单元格”, #右引号, “→”, #左引号, “输入方式”, #右引号, “→”, #左引号, “整数型”, #右引号, “等，将单元格中的数据转换为可以累计的属性。”), 0, “注意”)


.子程序 _工具条1_被单击, 空白型, , 
.参数 按钮索引, 整数型, , 

.如果真 (等于 (按钮索引, 1))
    _新建_被选择 ()
.如果真结束
.如果真 (等于 (按钮索引, 2))
    _打开_被选择 ()
.如果真结束
.如果真 (等于 (按钮索引, 3))
    保存文档 ()
.如果真结束
.如果真 (等于 (按钮索引, 4))
    _另存为_被选择 ()
.如果真结束
.如果真 (等于 (按钮索引, 6))
    _修改数据库_被选择 ()
.如果真结束
.如果真 (等于 (按钮索引, 7))
    _退出数据库修改_被选择 ()
.如果真结束
.如果真 (等于 (按钮索引, 9))
    _打印设置_被选择 ()
.如果真结束
.如果真 (等于 (按钮索引, 10))
    _打印预览_被选择 ()
.如果真结束
.如果真 (等于 (按钮索引, 11))
    _打印_被选择 ()
.如果真结束
.如果真 (等于 (按钮索引, 13))
    _剪切_被选择 ()
.如果真结束
.如果真 (等于 (按钮索引, 14))
    _复制_被选择 ()
.如果真结束
.如果真 (等于 (按钮索引, 15))
    _粘贴_被选择 ()
.如果真结束
.如果真 (等于 (按钮索引, 17))
    _组合_被选择 ()
.如果真结束
.如果真 (等于 (按钮索引, 18))
    _分解_被选择 ()
.如果真结束
.如果真 (等于 (按钮索引, 19))
    _置表头行数_被选择 ()
.如果真结束
.如果真 (等于 (按钮索引, 20))
    _置表头列数_被选择 ()
.如果真结束
.如果真 (等于 (按钮索引, 21))
    _横向计算列与列_被选择 ()
.如果真结束
.如果真 (等于 (按钮索引, 22))
    _纵向计算行与行_被选择 ()
.如果真结束
.如果真 (等于 (按钮索引, 23))
    _横向纵向都计算_被选择 ()
.如果真结束
.如果真 (等于 (按钮索引, 24))
    _添加数据_被选择 ()
.如果真结束

.如果真 (等于 (按钮索引, 26))
    _表格属性_被选择 ()
.如果真结束
.如果真 (等于 (按钮索引, 27))
    查找一下 ()
.如果真结束
.如果真 (等于 (按钮索引, 28))
    弹出菜单 ()
.如果真结束
.如果真 (等于 (按钮索引, 29))
    载入 (易之表函数, _启动窗口, 假)
.如果真结束
.如果真 (等于 (按钮索引, 30))
.如果真结束
.如果真 (等于 (按钮索引, 31))
    不要在前 ()
    载入 (易之表关于, , 真)
    要在前 ()
.如果真结束


.子程序 _表格1_光标位置改变, 空白型, , 
2.置文本 (相加 (“光标行 = ”, 到文本 (取光标行号 ())))
3.置文本 (相加 (“光标列 = ”, 到文本 (取光标列号 ())))


.子程序 _表格1_选择行列数改变, 空白型, , 
6.置文本 (相加 (“选择区域（”, 到文本 (取选择行数 ()), “，”, 到文本 (取选择列数 ()), “）”))


.子程序 _后插入行_被选择, 空白型, , 
设置修改 ()
.如果 (不等于 (.数据提供者, “数据库提供者1”))
    相加 (取光标行号 (), 1).插入行 ()
    
.否则
    相加 (取行数 (), 2).插入行 ()
    取行数 ().置光标 (1)
.如果结束
4.置文本 (相加 (“总行数 = ”, 到文本 (取行数 ())))


.子程序 _后插入列_被选择, 空白型, , 
.如果真 (等于 (_启动窗口.标记, “数据库”))
    信息框 (“数据库不能插入列,请先修改数据库结构!”, 0, )
    返回 ()
.如果真结束
设置修改 ()
相加 (取光标列号 (), 1).插入列 ()
5.置文本 (相加 (“总列数 = ”, 到文本 (取列数 ())))


.子程序 _计算器_被选择, 空白型, , 
运行 (“calc.exe”, 假, )
载入 (易计算器窗口, , 假)

.子程序 _工具条2_被单击, 空白型, , 
.参数 按钮索引, 整数型, , 

.局部变量 行数1, 整数型, , , 

.如果真 (等于 (按钮索引, 1))
    赋值 (.可视, 假)
    载入 (易计算器窗口, _启动窗口, 假)
.如果真结束
.如果真 (等于 (按钮索引, 2))
    赋值 (.可视, 假)
    载入 (易万年历窗口, _启动窗口, 假)
.如果真结束

.如果真 (等于 (按钮索引, 4))
    赋值 (.可视, 假)
    弹出菜单 ()
.如果真结束
.如果真 (等于 (按钮索引, 5))
    赋值 (.可视, 假)
    _文本颜色_被选择 ()
.如果真结束
.如果真 (等于 (按钮索引, 6))
    赋值 (.可视, 假)
    _改当前单元格背景颜色_被选择 ()
.如果真结束
.如果真 (等于 (按钮索引, 7))
    赋值 (.可视, 假)
    _字体_被选择 ()
.如果真结束
.如果真 (等于 (按钮索引, 8))
    弹出菜单 (对齐方式, , )
    赋值 (.可视, 真)
.如果真结束

.如果真 (等于 (按钮索引, 10))
    赋值 (.可视, 假)
    _前插入行_被选择 ()
.如果真结束
.如果真 (等于 (按钮索引, 11))
    赋值 (.可视, 假)
    _后插入行_被选择 ()
.如果真结束
.如果真 (等于 (按钮索引, 12))
    赋值 (.可视, 假)
    _删除行_被选择 ()
.如果真结束
.如果真 (等于 (按钮索引, 13))
    赋值 (.可视, 假)
    输入框 (“请输入要添加的行数”, , , 行数1, )
    .计次循环首 (行数1, )
        _前插入行_被选择 ()
    .计次循环尾 ()
.如果真结束
.如果真 (等于 (按钮索引, 14))
    赋值 (.可视, 假)
    输入框 (“请输入要添加的行数”, , , 行数1, )
    .计次循环首 (行数1, )
        _后插入行_被选择 ()
    .计次循环尾 ()
.如果真结束
.如果真 (等于 (按钮索引, 15))
    赋值 (.可视, 假)
    _前插入列_被选择 ()
.如果真结束
.如果真 (等于 (按钮索引, 16))
    赋值 (.可视, 假)
    _后插入列_被选择 ()
.如果真结束
.如果真 (等于 (按钮索引, 17))
    赋值 (.可视, 假)
    _删除列_被选择 ()
.如果真结束
.如果真 (等于 (按钮索引, 18))
    赋值 (.可视, 假)
    使选中区等高 ()
.如果真结束
.如果真 (等于 (按钮索引, 19))
    赋值 (.可视, 假)
    使选中区等宽 ()
.如果真结束

.如果真 (等于 (按钮索引, 21))
    赋值 (.可视, 假)
    弹出菜单 ()
.如果真结束
.如果真 (等于 (按钮索引, 22))
    赋值 (.可视, 假)
    弹出菜单 ()
.如果真结束
.如果真 (等于 (按钮索引, 23))
    赋值 (.可视, 假)
    弹出菜单 ()
.如果真结束
.如果真 (等于 (按钮索引, 24))
    赋值 (.可视, 假)
    弹出菜单 ()
.如果真结束
.如果真 (等于 (按钮索引, 25))
    赋值 (.可视, 假)
    交叉底色 ()
.如果真结束


.如果真 (等于 (按钮索引, 28))
    赋值 (.可视, 假)
    易之表窗口.标题 ＝ “28”
.如果真结束
.如果真 (等于 (按钮索引, 27))
    赋值 (.可视, 假)
    易之表窗口.标题 ＝ “27”
.如果真结束


.子程序 _表格1_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.可视, 假)


.子程序 _万年历_被选择, 空白型, , 
载入 (易万年历窗口, , 假)


.子程序 _改当前文本色_被选择, 空白型, , 
赋值 (颜色选择标题, “请选择当前单元格文本颜色:”)
不要在前 ()
载入 (易之表颜色选择窗口, , 真)
要在前 ()
.如果真 (等于 (返回颜色有效, 真))
    设置修改 ()
    取光标行号 ().置文本色 (取光标列号 (), 取选择行数 (), 取选择列数 (), 返回颜色)
.如果真结束



.子程序 _改表格线颜色_被选择, 空白型, , 
赋值 (颜色选择标题, “请选择表格线颜色:”)
不要在前 ()
载入 (易之表颜色选择窗口, , 真)
要在前 ()

.如果真 (等于 (返回颜色有效, 真))
    设置修改 ()
    赋值 (.表格线颜色, 返回颜色)
.如果真结束


.子程序 _改全部单元格颜色_被选择, 空白型, , 
赋值 (颜色选择标题, “请选择全部单元格底色:”)
不要在前 ()
载入 (易之表颜色选择窗口, , 真)
要在前 ()

.如果真 (等于 (返回颜色有效, 真))
    设置修改 ()
    赋值 (.背景颜色, 返回颜色)
.如果真结束



.子程序 _表格1_尺寸被扩展, 空白型, , 
4.置文本 (相加 (“总行数 = ”, 到文本 (取行数 ())))
5.置文本 (相加 (“总列数 = ”, 到文本 (取列数 ())))


.子程序 _工具条2_被下拉, 空白型, , 
.参数 按钮索引, 整数型, , 
.参数 下拉横座标, 整数型, , 
.参数 下拉纵座标, 整数型, , 

.如果真 (等于 (4))
    弹出菜单 (下拉横座标, 下拉纵座标)
.如果真结束
.如果真 (等于 (8))
    弹出菜单 (对齐方式, 下拉横座标, 下拉纵座标)
    赋值 (.可视, 真)
.如果真结束

.如果真 (等于 (21))
    弹出菜单 (下拉横座标, 下拉纵座标)
.如果真结束
.如果真 (等于 (22))
    弹出菜单 (下拉横座标, 下拉纵座标)
.如果真结束
.如果真 (等于 (23))
    弹出菜单 (下拉横座标, 下拉纵座标)
.如果真结束
.如果真 (等于 (24))
    弹出菜单 (下拉横座标, 下拉纵座标)
.如果真结束


.子程序 _表格1_被双击, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

信息框 (“被双击!”, 0, )

.子程序 _平均值_被选择, 空白型, , 
.局部变量 计次, 整数型, , , 
.局部变量 列号1, 整数型, , , 
.局部变量 计数, 整数型, , , 
.局部变量 行号1, 整数型, , , 
.局部变量 累计数, 小数型, , , 

赋值 (计数, 1)
赋值 (行号1, )
信息框 (起始行号, 0, )
信息框 (结束行号, 0, )
.如果真 (等于 (结束列号, 取列数 ()))
    信息框 (到文本 (结束列号) ＋ 到文本 (数据源1.取列数 ()), 0, )
    设置修改 ()
    相加 (结束列号, 1).插入列 ()
    5.置文本 (相加 (“总列数 = ”, 到文本 (取列数 ())))
    
.如果真结束

.计次循环首 (相减 (相加 (1), ), 计数)
    赋值 (计数, 1)
    赋值 (列号1, )
    赋值 (累计数, 0)
    .计次循环首 (相减 (相加 (1), ), 计次)
        .如果真 (或者 (等于 (取字段类型 (列号1), 2), 等于 (取字段类型 (列号1), 3), 等于 (取字段类型 (列号1), 4), 等于 (取字段类型 (列号1), 5), 等于 (取字段类型 (列号1), 6)))
            赋值 (累计数, 相加 (到数值 (行号1.取文本 (列号1)), 累计数))
        .如果真结束
        信息框 (取字段类型 (列号1), 0, )
        .如果真 (等于 (取字段类型 (列号1), 0))
            赋值 (累计数, 相加 (到数值 (行号1.取文本 (列号1)), 累计数))
        .如果真结束
        
        赋值 (列号1, 相加 (列号1, 1))
    .计次循环尾 ()
    信息框 (累计数, 0, )
    行号1.置文本 (相加 (结束列号, 1), 到文本 (相除 (累计数, 相减 (相加 (结束列号, 1), 起始列号))))
    替换 (, 取字段名 (结束列号 ＋ 1), wqx)
    赋值 (行号1, 相加 (行号1, 1))
.计次循环尾 ()
保存更改 ()
刷新 ()



.子程序 _累计值_被选择, 空白型, , 
_横向计算列与列_被选择 ()

.子程序 _累计值2_被选择, 空白型, , 
函数计算 (“累计值”, “纵向”, )

.子程序 _平均值2_被选择, 空白型, , 
函数计算 (“平均值”, “纵向”, )

.子程序 _累计值3_被选择, 空白型, , 
_横向计算列与列_被选择 ()
_纵向计算行与行_被选择 ()


.子程序 _平均值3_被选择, 空白型, , 
_平均值_被选择 ()
函数计算 (“平均值”, “纵向”, )

.子程序 _千分位分隔符_被选择, 空白型, , 
.局部变量 分位文本, 文本型, , , 
.局部变量 计数, 整数型, , , 
.局部变量 列号2, 整数型, , , 
.局部变量 计次, 整数型, , , 
.局部变量 行号2, 整数型, , , 
.局部变量 累计值, 小数型, , "0", 
.局部变量 累计数, 小数型, , , 
.局部变量 范围行数, 整数型, , , 

编辑框1.内容 ＝ 数值到格式文本 (99999.999, , 真) 
 信息框 (到文本 (到数值 (子文本替换 (编辑框1.内容, “,”, “”, , , 真)) ＋ 1), 0, )  
取记录号 ()
(取光标行号(),取光标列号())
.如果 (不等于 (寻找文本 (取光标行号 ().取文本 (取光标列号 ()), “,”, , 真), -1))
    分位文本 ＝ 子文本替换 (数据源1.取文本 (表格1.取光标行号 (), 表格1.取光标列号 ()), “,”, “”, , , 真)
    数据源1.置文本 (表格1.取光标行号 (), 表格1.取光标列号 (), 到文本 (分位文本))
    
.否则
    分位文本 ＝ 数值到格式文本 (到数值 (子文本替换 (数据源1.取文本 (表格1.取光标行号 (), 表格1.取光标列号 ()), “,”, “”, , , 真)), , 真)
    数据源1.置文本 (表格1.取光标行号 (), 表格1.取光标列号 (), 到文本 (分位文本))
    
.如果结束

.如果真 (不等于 (.数据提供者, “数据库提供者1”))
    赋值 (1)
    赋值 (起始列号)
    .如果真 (等于 (结束行号, 取行数 ()))
        信息框 (到文本 (结束行号) ＋ 到文本 (数据源1.取行数 ()), 0, )
        设置修改 ()
        相加 (结束行号, 1).插入行 ()
        4.置文本 (相加 (“总行数 = ”, 到文本 (取行数 ())))
        
    .如果真结束
    
    .计次循环首 (相减 (相加 (结束列号, 1), 起始列号), )
        赋值 (1)
        .如果 (等于 (计算之范围, “选区”))
            赋值 (行号2, 起始行号)
            赋值 (范围行数, 相减 (相加 (_启动窗口., 1), _启动窗口.))
        .否则
            赋值 (行号2, 1)
            赋值 (范围行数, 取行数 ())
        .如果结束
        赋值 (0)
        .计次循环首 (范围行数, 计次)
            分位文本 ＝ 子文本替换 (数据源1.取文本 (表格1.取光标行号 (), 表格1.取光标列号 ()), “,”, “”, , , 真)
            数据源1.置文本 (表格1.取光标行号 (), 表格1.取光标列号 (), 到文本 (分位文本))
            .如果真 (不等于 (行号2.取文本 (列号2), “”))
                赋值 (分位文本, 数值到格式文本 (到数值 (子文本替换 (行号2.取文本 (列号2), “,”, “”, , , 真)), , 真))
                行号2.置文本 (列号2, 到文本 (分位文本))
                
            .如果真结束
            
            赋值 (相加 (1))
            
        .计次循环尾 ()
        
        赋值 (相加 (1))
    .计次循环尾 ()
    
    保存更改 ()
    刷新 ()
    
    
    返回 ()
.如果真结束



.子程序 _去除分隔符_被选择, 空白型, , 
.局部变量 分位文本, 文本型, , , 
.局部变量 计数, 整数型, , , 
.局部变量 列号2, 整数型, , , 
.局部变量 计次, 整数型, , , 
.局部变量 行号2, 整数型, , , 
.局部变量 累计值, 小数型, , "0", 
.局部变量 累计数, 小数型, , , 
.局部变量 范围行数, 整数型, , , 

编辑框1.内容 ＝ 数值到格式文本 (99999.999, , 真) 
 信息框 (到文本 (到数值 (子文本替换 (编辑框1.内容, “,”, “”, , , 真)) ＋ 1), 0, )  
.如果 (不等于 (寻找文本 (取光标行号 ().取文本 (取光标列号 ()), “,”, , 真), -1))
    分位文本 ＝ 子文本替换 (数据源1.取文本 (表格1.取光标行号 (), 表格1.取光标列号 ()), “,”, “”, , , 真)
    数据源1.置文本 (表格1.取光标行号 (), 表格1.取光标列号 (), 到文本 (分位文本))
.否则
    分位文本 ＝ 数值到格式文本 (到数值 (子文本替换 (数据源1.取文本 (表格1.取光标行号 (), 表格1.取光标列号 ()), “,”, “”, , , 真)), , 真)
    数据源1.置文本 (表格1.取光标行号 (), 表格1.取光标列号 (), 到文本 (分位文本))
.如果结束

.如果真 (不等于 (.数据提供者, “数据库提供者1”))
    赋值 (1)
    赋值 (起始列号)
    .如果真 (等于 (结束行号, 取行数 ()))
        信息框 (到文本 (结束行号) ＋ 到文本 (数据源1.取行数 ()), 0, )
        设置修改 ()
        相加 (结束行号, 1).插入行 ()
        4.置文本 (相加 (“总行数 = ”, 到文本 (取行数 ())))
        
    .如果真结束
    
    .计次循环首 (相减 (相加 (结束列号, 1), 起始列号), )
        赋值 (1)
        .如果 (等于 (计算之范围, “选区”))
            赋值 (行号2, 起始行号)
            赋值 (范围行数, 相减 (相加 (_启动窗口., 1), _启动窗口.))
        .否则
            赋值 (行号2, 1)
            赋值 (范围行数, 取行数 ())
        .如果结束
        赋值 (0)
        .计次循环首 (范围行数, 计次)
            分位文本 ＝ 子文本替换 (数据源1.取文本 (表格1.取光标行号 (), 表格1.取光标列号 ()), “,”, “”, , , 真)
            数据源1.置文本 (表格1.取光标行号 (), 表格1.取光标列号 (), 到文本 (分位文本))
            .如果真 (不等于 (行号2.取文本 (列号2), “”))
                赋值 (分位文本, 子文本替换 (行号2.取文本 (列号2), “,”, “”, , , 真))
                行号2.置文本 (列号2, 到文本 (分位文本))
                
            .如果真结束
            
            赋值 (相加 (1))
            
        .计次循环尾 ()
        
        赋值 (相加 (1))
    .计次循环尾 ()
    
    保存更改 ()
    刷新 ()
    
    
    返回 ()
.如果真结束



.子程序 _函数面板_被选择, 空白型, , 
载入 (易之表函数, _启动窗口, 假)


.子程序 _表格1_行高被改变, 空白型, , 
.参数 行号, 整数型, , 

.局部变量 行高, 整数型, , , 

.如果 (等于 (位与 (28.取状态 (), #选中), #选中))
    赋值 (相等行高, 真)
    易之表窗口.标题 ＝ “真”
.否则
    赋值 (相等行高, 假)
    易之表窗口.标题 ＝ “假”
.如果结束

.如果真 (等于 (相等行高, 真))
    赋值 (行高, 行号.取行高 ())
    1.置行高 (取行数 (), 行高)
    设置修改 ()
.如果真结束


.子程序 _行高相等_被选择, 空白型, , 
赋值 (相等行高, 真)

.子程序 _自由行高_被选择, 空白型, , 
赋值 (相等行高, 假)


.子程序 使选中区等高, 空白型, , 
.局部变量 计次, 整数型, , , 
.局部变量 计数, 整数型, , , 
.局部变量 总行高, 整数型, , , 

赋值 (计数, 取光标行号 ())
计次 ＝ 表格1.取选择行数 ()
赋值 (计次, 1)
赋值 (总行高, 0)
 ' 先求总高,再分别设置行高
.计次循环首 (取选择行数 (), 计次)
    赋值 (总行高, 相加 (总行高, 相减 (相加 (取光标行号 (), 计次), 1).取行高 ()))
.计次循环尾 ()

取光标行号 ().置行高 (取选择行数 (), 相除 (总行高, 取选择行数 ()))



.子程序 使选中区等宽, 空白型, , 
.局部变量 计次, 整数型, , , 
.局部变量 计数, 整数型, , , 
.局部变量 总列宽, 整数型, , , 

赋值 (计数, 取光标列号 ())
计次 ＝ 表格1.取选择行数 ()
赋值 (计次, 1)
赋值 (总列宽, 0)
 ' 先求总高,再分别设置行高
.计次循环首 (取选择列数 (), 计次)
    赋值 (总列宽, 相加 (总列宽, 相减 (相加 (取光标列号 (), 计次), 1).取列宽 ()))
.计次循环尾 ()
取光标列号 ().置列宽 (取选择列数 (), 相除 (总列宽, 取选择列数 ()))


.子程序 查找一下, 空白型, , 
.局部变量 文本, 文本型, , , 
.局部变量 计次, 整数型, , , 
.局部变量 计数, 整数型, , , 

赋值 (计次, 1)
赋值 (计数, 1)
输入框 (“请输入要查找的内容:”, , , 文本, )
.计次循环首 (取列数 (), 计数)
    .计次循环首 (取行数 (), 计次)
        .如果真 (不等于 (寻找文本 (计次.取文本 (计数), 文本, , 假), -1))
            信息框 (“找到了!”, 0, )
            计次.置光标 (计数)
            返回 ()
        .如果真结束
        
    .计次循环尾 ()
.计次循环尾 ()


.子程序 交叉底色, 空白型, , 
.局部变量 计次, 整数型, , , 

赋值 (颜色选择标题, “请选择背景颜色:”)
不要在前 ()
载入 (易之表颜色选择窗口, , 真)
要在前 ()

赋值 (计次, 1)
.如果真 (等于 (返回颜色有效, 真))
    设置修改 ()
    .计次循环首 (取行数 (), 计次)
        相减 (相乘 (计次, 2), 1).置背景色 (1, 1, 取列数 (), #白色)
        相乘 (计次, 2).置背景色 (1, 1, 取列数 (), 返回颜色)
    .计次循环尾 ()
.如果真结束


.子程序 _GBKBIG5_被选择, 空白型, , 
转换语言 (#)

.子程序 _BIG5GBK_被选择, 空白型, , 
转换语言 (#)

.子程序 转换语言, 空白型, , 
.参数 转换方式, 整数型, , 

.局部变量 行数, 整数型, , , 
.局部变量 列数, 整数型, , , 
.局部变量 行, 整数型, , , 
.局部变量 列, 整数型, , , 

未知函数_67177681 ()

赋值 (行数, 取行数 ())
赋值 (列数, 取列数 ())
.计次循环首 (行数, 行)
    .计次循环首 (列数, 列)
        行.置文本 (列, 未知支持库函数_0 (行.取文本 (列), 转换方式))
    .计次循环尾 ()
.计次循环尾 ()
刷新 ()

.子程序 _工具条1_被下拉, 空白型, , 
.参数 按钮索引, 整数型, , 
.参数 下拉横座标, 整数型, , 
.参数 下拉纵座标, 整数型, , 

.如果真 (等于 (28))
    弹出菜单 (下拉横座标, 下拉纵座标)
.如果真结束


.子程序 _插入图片_被选择, 空白型, , 
 ' 图片文件名称可以直接以文本方式写入.
不要在前 ()
.如果真 (等于 (打开 (), 真))
    设置修改 ()
    取光标行号 ().置数据 (取光标列号 (), 读入文件 (.文件名))
.如果真结束
要在前 ()


.子程序 _置为图片类型_被选择, 空白型, , 
设置修改 ()
取光标行号 ().置类型 (取光标列号 (), 取选择行数 (), 取选择列数 (), #图片数据)


.子程序 _工具条2_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

图片框1.可视 ＝ 假

.子程序 _工具条1_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.可视, 假)


.子程序 _图形按钮1_被单击, 空白型, , 
设置修改 ()
取光标行号 ().置对齐方式 (取光标列号 (), 取选择行数 (), 取选择列数 (), #上左)


.子程序 _图形按钮2_被单击, 空白型, , 
设置修改 ()
取光标行号 ().置对齐方式 (取光标列号 (), 取选择行数 (), 取选择列数 (), #上中)


.子程序 _图形按钮3_被单击, 空白型, , 
设置修改 ()
取光标行号 ().置对齐方式 (取光标列号 (), 取选择行数 (), 取选择列数 (), #上右)


.子程序 _图形按钮4_被单击, 空白型, , 
设置修改 ()
取光标行号 ().置对齐方式 (取光标列号 (), 取选择行数 (), 取选择列数 (), #中左)


.子程序 _图形按钮5_被单击, 空白型, , 
设置修改 ()
取光标行号 ().置对齐方式 (取光标列号 (), 取选择行数 (), 取选择列数 (), #中中)


.子程序 _图形按钮6_被单击, 空白型, , 
设置修改 ()
取光标行号 ().置对齐方式 (取光标列号 (), 取选择行数 (), 取选择列数 (), #中右)


.子程序 _图形按钮7_被单击, 空白型, , 
设置修改 ()
取光标行号 ().置对齐方式 (取光标列号 (), 取选择行数 (), 取选择列数 (), #下左)


.子程序 _图形按钮8_被单击, 空白型, , 
设置修改 ()
取光标行号 ().置对齐方式 (取光标列号 (), 取选择行数 (), 取选择列数 (), #下中)


.子程序 _图形按钮9_被单击, 空白型, , 
设置修改 ()
取光标行号 ().置对齐方式 (取光标列号 (), 取选择行数 (), 取选择列数 (), #下右)


.子程序 不要在前, 空白型, , 
.如果真 (是否已创建 (易之表函数))
    赋值 (易之表函数.总在最前, 假)
.如果真结束

.如果真 (是否已创建 (易万年历窗口))
    赋值 (易万年历窗口.总在最前, 假)
.如果真结束

.如果真 (是否已创建 (易计算器窗口))
    赋值 (易计算器窗口.总在最前, 假)
.如果真结束



.子程序 要在前, 空白型, , 
.如果真 (是否已创建 (易之表函数))
    赋值 (易之表函数.总在最前, 真)
.如果真结束

.如果真 (是否已创建 (易万年历窗口))
    赋值 (易万年历窗口.总在最前, 真)
.如果真结束

.如果真 (是否已创建 (易计算器窗口))
    赋值 (易计算器窗口.总在最前, 真)
.如果真结束


.子程序 __启动窗口_被激活, 空白型, , 
要在前 ()

.子程序 __启动窗口_被取消激活, 空白型, , 
不要在前 ()

.窗口程序集 易之表关于窗口程序集, , , 

.子程序 _按钮1_被单击, 空白型, , 
销毁 ()

.窗口程序集 易之表表格属性窗口程序集, , , 

.子程序 _取消按钮_被单击, 空白型, , 
销毁 ()

.子程序 _确定按钮_被单击, 空白型, , 
赋值 (_启动窗口..表格线颜色, .颜色)
赋值 (_启动窗口..背景颜色, .颜色)
赋值 (_启动窗口..允许选择块, .选中)
赋值 (_启动窗口..显示标尺, .选中)
赋值 (_启动窗口..显示空表格线, .选中)
赋值 (_启动窗口..禁止调整行高, .选中)
赋值 (_启动窗口..禁止调整列宽, .选中)
赋值 (_启动窗口..允许粘贴扩展, .选中)
销毁 ()

.子程序 _表格属性窗口_创建完毕, 空白型, , 
赋值 (.颜色, _启动窗口..表格线颜色)
赋值 (.颜色, _启动窗口..背景颜色)
赋值 (.选中, _启动窗口..允许选择块)
赋值 (.选中, _启动窗口..显示标尺)
赋值 (.选中, _启动窗口..显示空表格线)
赋值 (.选中, _启动窗口..禁止调整行高)
赋值 (.选中, _启动窗口..禁止调整列宽)
赋值 (.选中, _启动窗口..允许粘贴扩展)

.窗口程序集 易之表颜色窗口程序集, , , 

.子程序 _易之表颜色选择窗口_创建完毕, 空白型, , 
赋值 (返回颜色有效, 假)
赋值 (.标题, 颜色选择标题)

.子程序 _确认按钮_被单击, 空白型, , 
赋值 (返回颜色有效, 真)
赋值 (返回颜色, .颜色)
销毁 ()

.子程序 _取消按钮_被单击, 空白型, , 
销毁 ()

.窗口程序集 易之表计算器窗口程序集, , , 

.程序集变量 内存容器, 文本型, , , 
.程序集变量 计算结果暂时容器, 文本型, , , 
.程序集变量 重新计算累计, 逻辑型, , , 
.程序集变量 首次单击, 逻辑型, , , 
.程序集变量 算术符号码, 整数型, , , 1为加，2为减，3为乘，4为除
.子程序 __启动窗口_创建完毕, 空白型, , 
赋值 (重新计算累计, 真)
赋值 (首次单击, 真)
赋值 (算术符号码, 1)

.子程序 _储存_被单击, 空白型, , 
赋值 (.标题, “存入数据”)
赋值 (内存容器, .标题)
获取焦点 ()

.子程序 _读出_被单击, 空白型, , 
赋值 (.标题, 内存容器)
赋值 (重新计算累计, 真)
获取焦点 ()

.子程序 _清除_被单击, 空白型, , 
赋值 (.标题, “”)
赋值 (内存容器, “”)
获取焦点 ()

.子程序 _退出_被单击, 空白型, , 
销毁 ()

.子程序 _退格_被单击, 空白型, , 
赋值 (.标题, 取文本左边 (.标题, 相减 (取文本长度 (删首尾空 (.标题)), 1)))
获取焦点 ()

.子程序 _按钮1_被单击, 空白型, , 
.如果真 (等于 (重新计算累计, 假))
    赋值 (.标题, “0”)
    赋值 (重新计算累计, 真)
.如果真结束
.如果真 (小于或等于 (取文本长度 (.标题), 19))
    .如果真 (等于 (.标题, “0”))
        赋值 (.标题, “”)
    .如果真结束
    赋值 (.标题, 删首尾空 (相加 (.标题, “1”)))
.如果真结束
获取焦点 ()

.子程序 _按钮2_被单击, 空白型, , 
.如果真 (等于 (重新计算累计, 假))
    赋值 (.标题, “0”)
    赋值 (重新计算累计, 真)
.如果真结束
.如果真 (小于或等于 (取文本长度 (.标题), 19))
    .如果真 (等于 (.标题, “0”))
        赋值 (.标题, “”)
    .如果真结束
    赋值 (.标题, 删首尾空 (相加 (.标题, “2”)))
.如果真结束
获取焦点 ()

.子程序 _按钮3_被单击, 空白型, , 
.如果真 (等于 (重新计算累计, 假))
    赋值 (.标题, “0”)
    赋值 (重新计算累计, 真)
.如果真结束
.如果真 (小于或等于 (取文本长度 (.标题), 19))
    .如果真 (等于 (.标题, “0”))
        赋值 (.标题, “”)
    .如果真结束
    赋值 (.标题, 删首尾空 (相加 (.标题, “3”)))
.如果真结束
获取焦点 ()

.子程序 _按钮4_被单击, 空白型, , 
.如果真 (等于 (重新计算累计, 假))
    赋值 (.标题, “0”)
    赋值 (重新计算累计, 真)
.如果真结束
.如果真 (小于或等于 (取文本长度 (.标题), 19))
    .如果真 (等于 (.标题, “0”))
        赋值 (.标题, “”)
    .如果真结束
    赋值 (.标题, 删首尾空 (相加 (.标题, “4”)))
.如果真结束
获取焦点 ()

.子程序 _按钮5_被单击, 空白型, , 
.如果真 (等于 (重新计算累计, 假))
    赋值 (.标题, “0”)
    赋值 (重新计算累计, 真)
.如果真结束
.如果真 (小于或等于 (取文本长度 (.标题), 19))
    .如果真 (等于 (.标题, “0”))
        赋值 (.标题, “”)
    .如果真结束
    赋值 (.标题, 删首尾空 (相加 (.标题, “5”)))
.如果真结束
获取焦点 ()

.子程序 _按钮6_被单击, 空白型, , 
.如果真 (等于 (重新计算累计, 假))
    赋值 (.标题, “0”)
    赋值 (重新计算累计, 真)
.如果真结束
.如果真 (小于或等于 (取文本长度 (.标题), 19))
    .如果真 (等于 (.标题, “0”))
        赋值 (.标题, “”)
    .如果真结束
    赋值 (.标题, 删首尾空 (相加 (.标题, “6”)))
.如果真结束
获取焦点 ()

.子程序 _按钮7_被单击, 空白型, , 
.如果真 (等于 (重新计算累计, 假))
    赋值 (.标题, “0”)
    赋值 (重新计算累计, 真)
.如果真结束
.如果真 (小于或等于 (取文本长度 (.标题), 19))
    .如果真 (等于 (.标题, “0”))
        赋值 (.标题, “”)
    .如果真结束
    赋值 (.标题, 删首尾空 (相加 (.标题, “7”)))
.如果真结束
获取焦点 ()

.子程序 _按钮8_被单击, 空白型, , 
.如果真 (等于 (重新计算累计, 假))
    赋值 (.标题, “0”)
    赋值 (重新计算累计, 真)
.如果真结束
.如果真 (小于或等于 (取文本长度 (.标题), 19))
    .如果真 (等于 (.标题, “0”))
        赋值 (.标题, “”)
    .如果真结束
    赋值 (.标题, 删首尾空 (相加 (.标题, “8”)))
.如果真结束
获取焦点 ()

.子程序 _按钮9_被单击, 空白型, , 
.如果真 (等于 (重新计算累计, 假))
    赋值 (.标题, “0”)
    赋值 (重新计算累计, 真)
.如果真结束
.如果真 (小于或等于 (取文本长度 (.标题), 19))
    .如果真 (等于 (.标题, “0”))
        赋值 (.标题, “”)
    .如果真结束
    赋值 (.标题, 删首尾空 (相加 (.标题, “9”)))
.如果真结束
获取焦点 ()

.子程序 _按钮0_被单击, 空白型, , 
.如果真 (等于 (重新计算累计, 假))
    赋值 (.标题, “0”)
    赋值 (重新计算累计, 真)
.如果真结束
.如果真 (小于或等于 (取文本长度 (.标题), 19))
    .如果真 (等于 (.标题, “0”))
        赋值 (.标题, “”)
    .如果真结束
    赋值 (.标题, 相加 (删首尾空 (.标题), “0”))
.如果真结束
获取焦点 ()

.子程序 _按钮00_被单击, 空白型, , 
.如果真 (等于 (重新计算累计, 假))
    赋值 (.标题, “0”)
    赋值 (重新计算累计, 真)
.如果真结束
.如果真 (小于或等于 (取文本长度 (.标题), 19))
    .如果 (等于 (.标题, “0”))
        赋值 (.标题, “0”)
    .否则
        赋值 (.标题, 相加 (删首尾空 (.标题), “00”))
    .如果结束
    
.如果真结束
获取焦点 ()

.子程序 _按钮点_被单击, 空白型, , 
.如果真 (等于 (重新计算累计, 假))
    赋值 (.标题, “0”)
    赋值 (重新计算累计, 真)
.如果真结束
.如果真 (小于或等于 (取文本长度 (.标题), 19))
    .如果真 (等于 (.标题, “.”))
        赋值 (.标题, “”)
    .如果真结束
    赋值 (.标题, 删首尾空 (相加 (.标题, “.”)))
.如果真结束
获取焦点 ()

.子程序 _按钮C_被单击, 空白型, , 
赋值 (.标题, “0”)
赋值 (.标题, “”)
赋值 (计算结果暂时容器, “”)
赋值 (重新计算累计, 假)
获取焦点 ()
赋值 (算术符号码, 1)
赋值 (首次单击, 真)

.子程序 _按钮等于_被单击, 空白型, , 
计算过程 ()
赋值 (算术符号码, 1)
赋值 (首次单击, 真)
赋值 (重新计算累计, 假)
赋值 (.标题, 计算结果暂时容器)
赋值 (.标题, 数值到金额 (到数值 (删首尾空 (.标题)), 真))
获取焦点 ()

.子程序 _按钮根号_被单击, 空白型, , 
赋值 (.标题, 到文本 (求平方根 (到数值 (删首尾空 (.标题)))))
获取焦点 ()

.子程序 _按钮加_被单击, 空白型, , 
计算过程 ()
赋值 (算术符号码, 1)
获取焦点 ()

.子程序 _按钮减_被单击, 空白型, , 
计算过程 ()
赋值 (算术符号码, 2)
获取焦点 ()

.子程序 _按钮乘_被单击, 空白型, , 
计算过程 ()
赋值 (算术符号码, 3)
获取焦点 ()

.子程序 _按钮除_被单击, 空白型, , 
计算过程 ()
赋值 (算术符号码, 4)
获取焦点 ()

.子程序 计算过程, 空白型, , 
.如果 (等于 (重新计算累计, 真))
    .如果 (等于 (算术符号码, 1))
        赋值 (计算结果暂时容器, 到文本 (相加 (到数值 (计算结果暂时容器), 到数值 (.标题))))
    .否则
        .如果 (等于 (算术符号码, 2))
            赋值 (计算结果暂时容器, 到文本 (相减 (到数值 (计算结果暂时容器), 到数值 (.标题))))
        .否则
            .如果 (等于 (算术符号码, 3))
                赋值 (计算结果暂时容器, 到文本 (相乘 (到数值 (计算结果暂时容器), 到数值 (.标题))))
            .否则
                .如果 (等于 (算术符号码, 4))
                    .如果 (不等于 (到数值 (.标题), 0))
                        赋值 (计算结果暂时容器, 到文本 (相除 (到数值 (计算结果暂时容器), 到数值 (.标题))))
                        赋值 (.标题, 计算结果暂时容器)
                        赋值 (重新计算累计, 假)
                    .否则
                        信息框 (“注意！被除数不能为0！”, #确认钮, “错误！”)
                        赋值 (.标题, “0”)
                        赋值 (.标题, “”)
                        赋值 (计算结果暂时容器, “”)
                        赋值 (重新计算累计, 假)
                        赋值 (首次单击, 真)
                        返回 ()
                    .如果结束
                    
                .否则
                    
                .如果结束
                
            .如果结束
            
        .如果结束
        
    .如果结束
    
    赋值 (重新计算累计, 假)
    赋值 (.标题, 计算结果暂时容器)
    返回 ()
.否则
    赋值 (重新计算累计, 假)
    赋值 (.标题, .标题)
.如果结束
获取焦点 ()
返回 ()

.子程序 _按钮1_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.判断开始 (等于 (48))
    _按钮0_被单击 ()
.判断 (等于 (49))
    _按钮1_被单击 ()
.判断 (等于 (50))
    _按钮2_被单击 ()
.判断 (等于 (51))
    _按钮3_被单击 ()
.判断 (等于 (52))
    _按钮4_被单击 ()
.判断 (等于 (53))
    _按钮5_被单击 ()
.判断 (等于 (54))
    _按钮6_被单击 ()
.判断 (等于 (55))
    _按钮7_被单击 ()
.判断 (等于 (56))
    _按钮8_被单击 ()
.判断 (等于 (57))
    _按钮9_被单击 ()
.判断 (等于 (8))
    _退格_被单击 ()
.判断 (等于 (27))
    _按钮C_被单击 ()
.判断 (等于 (187))
    _按钮等于_被单击 ()
.判断 (等于 (13))
    _按钮等于_被单击 ()
.判断 (等于 (190))
    未知函数_67177295 ()
.判断 (等于 (191))
    _按钮除_被单击 ()
.判断 (等于 (189))
    _按钮减_被单击 ()
.默认
    
.判断结束
获取焦点 ()

.子程序 _按钮10_被单击, 空白型, , 
_启动窗口.置文本 (., _启动窗口.取光标行号 (.), _启动窗口.取光标列号 (.), 到文本 (.标题))

.窗口程序集 易之表万年历窗口程序集, , , 

.子程序 _按钮1_被单击, 空白型, , 
_启动窗口.置文本 (., _启动窗口.取光标行号 (.), _启动窗口.取光标列号 (.), 到文本 (.首选择日))

.窗口程序集 易之表函数操作窗口程序集, , , 

.子程序 _易之表函数_尺寸被改变, 空白型, , 
1.移动 (30, 取用户区宽度 (), 相减 (取用户区高度 (), 56))
1.移动 (相减 (取用户区高度 (), 24), 相减 (取用户区宽度 (), 1), )

.子程序 _易之表函数_创建完毕, 空白型, , 
赋值 (_启动窗口., “纵向”)
赋值 (_启动窗口., “选区”)


.子程序 _按钮1_被单击, 空白型, , 
.如果真 (并且 (等于 (.现行选中项, 1), 等于 (_启动窗口., “纵向”)))
    函数计算 (“累计值”, _启动窗口.)
.如果真结束
.如果真 (并且 (等于 (.现行选中项, 1), 等于 (_启动窗口., “横向”)))
    横向函数计算 (“累计值”, _启动窗口.)
.如果真结束
.如果真 (并且 (等于 (.现行选中项, 1), 等于 (_启动窗口., “双向”)))
    函数计算 (“累计值”, _启动窗口.)
    横向函数计算 (“累计值”, _启动窗口.)
.如果真结束

.如果真 (并且 (等于 (.现行选中项, 2), 等于 (_启动窗口., “纵向”)))
    函数计算 (“平均值”, _启动窗口.)
.如果真结束
.如果真 (并且 (等于 (.现行选中项, 2), 等于 (_启动窗口., “横向”)))
    横向函数计算 (“平均值”, _启动窗口.)
.如果真结束
.如果真 (并且 (等于 (.现行选中项, 2), 等于 (_启动窗口., “双向”)))
    横向函数计算 (“平均值”, _启动窗口.)
    函数计算 (“平均值”, _启动窗口.)
.如果真结束

.如果真 (等于 (.现行选中项, 3))
    _千分位分隔符_被选择 ()
.如果真结束
.如果真 (等于 (.现行选中项, 4))
    _去除分隔符_被选择 ()
.如果真结束

.如果真 (等于 (.现行选中项, 5))
    函数计算 (“到全角”, _启动窗口.)
.如果真结束

.如果真 (等于 (.现行选中项, 6))
    函数计算 (“到半角”, _启动窗口.)
.如果真结束

.如果真 (等于 (.现行选中项, 7))
    函数计算 (“四舍五入”, _启动窗口.)
.如果真结束

.如果真 (并且 (等于 (.现行选中项, 8), 等于 (_启动窗口., “纵向”)))
    函数计算 (“最大值”, _启动窗口.)
.如果真结束
.如果真 (并且 (等于 (.现行选中项, 8), 等于 (_启动窗口., “横向”)))
    横向函数计算 (“最大值”, _启动窗口.)
.如果真结束
.如果真 (并且 (等于 (.现行选中项, 8), 等于 (_启动窗口., “双向”)))
    函数计算 (“最大值”, _启动窗口.)
    横向函数计算 (“最大值”, _启动窗口.)
.如果真结束

.如果真 (并且 (等于 (.现行选中项, 9), 等于 (_启动窗口., “纵向”)))
    函数计算 (“最小值”, _启动窗口.)
.如果真结束
.如果真 (并且 (等于 (.现行选中项, 9), 等于 (_启动窗口., “横向”)))
    横向函数计算 (“最小值”, _启动窗口.)
.如果真结束
.如果真 (并且 (等于 (.现行选中项, 9), 等于 (_启动窗口., “双向”)))
    函数计算 (“最小值”, _启动窗口.)
    横向函数计算 (“最小值”, _启动窗口.)
.如果真结束

.如果真 (等于 (.现行选中项, 10))
    函数计算 (“求平方根”, _启动窗口.)
.如果真结束

.如果真 (等于 (.现行选中项, 11))
    函数计算 (“取绝对值”, _启动窗口.)
.如果真结束

.如果真 (等于 (.现行选中项, 12))
    函数计算 (“取整”, _启动窗口.)
.如果真结束

.如果真 (等于 (.现行选中项, 13))
    函数计算 (“绝对取整”, _启动窗口.)
.如果真结束

.如果真 (等于 (.现行选中项, 14))
    函数计算 (“求次方”, _启动窗口.)
.如果真结束

.如果真 (等于 (.现行选中项, 15))
    函数计算 (“求正弦”, _启动窗口.)
.如果真结束

.如果真 (等于 (.现行选中项, 16))
    函数计算 (“乘某数”, _启动窗口.)
.如果真结束



.子程序 函数计算, 空白型, , 纵向
.参数 函数名, 文本型, , 根据函数的名称进行控制
.参数 作用范围, 文本型, 可空, 是选定区域,还是整列计算,如果省略,将默认为选区

.局部变量 计数, 整数型, , , 
.局部变量 列号1, 整数型, , , 
.局部变量 计次, 整数型, , , 
.局部变量 行号1, 整数型, , , 
.局部变量 累计值, 小数型, , "0", 
.局部变量 累计数, 小数型, , , 
.局部变量 临时容器, 文本型, , , 
.局部变量 临时数, 整数型, , , 

赋值 (临时数, 到数值 (子文本替换 (_启动窗口.取文本 (., 行号1, 列号1), “,”, “”, , , 真)))
.如果真 (不等于 (_启动窗口..数据提供者, “数据库提供者1”))
    赋值 (计数, 1)
    赋值 (列号1, _启动窗口.)
    .如果真 (等于 (_启动窗口., _启动窗口.取行数 (.)))
        信息框 (到文本 (结束行号) ＋ 到文本 (数据源1.取行数 ()), 0, )
        设置修改 ()
        _启动窗口.插入行 (., 相加 (_启动窗口., 1), )
        _启动窗口.置文本 (., 4, 相加 (“总行数 = ”, 到文本 (_启动窗口.取行数 (.))))
        
    .如果真结束
    
    .如果真 (等于 (函数名, “四舍五入”))
        输入框 (“请输入要四舍五入的位置:如果大于0，表示小数点右边应保留的位数；如果等于0，表示舍入到整数；如果小于0，表示小数点左边舍入到的位置。”, , “2”, 临时容器, )
    .如果真结束
    .如果真 (等于 (“求次方”))
        输入框 (“请输入要求次方数:参数值指定对欲求次方数值的运算指数。”, , “2”, , )
    .如果真结束
    .如果真 (等于 (函数名, “乘某数”))
        输入框 (“请输入要相乘的数值,将在选择区内的所有数字与此数值相乘。”, , “10”, 临时容器, )
    .如果真结束
    
    
    .计次循环首 (相减 (相加 (_启动窗口., 1), _启动窗口.), 计数)
        赋值 (计次, 1)
        赋值 (行号1, _启动窗口.)
        赋值 (临时数, 到数值 (子文本替换 (_启动窗口.取文本 (., 行号1, 列号1), “,”, “”, , , 真)))
        赋值 (0)
        .计次循环首 (相减 (相加 (_启动窗口., 1), _启动窗口.), 计次)
            信息框 (计次, 0, )
            
            .如果真 (或者 (等于 (函数名, “累计值”), 等于 (函数名, “平均值”)))
                .如果真 (或者 (等于 (取字段类型 (列号1), 2), 等于 (取字段类型 (列号1), 3), 等于 (取字段类型 (列号1), 4), 等于 (取字段类型 (列号1), 5), 等于 (取字段类型 (列号1), 6)))
                    赋值 (累计数, 相加 (到数值 (子文本替换 (_启动窗口.取文本 (., 行号1, 列号1), “,”, “”, , , 真)), 累计数))
                .如果真结束
                .如果真 (等于 (取字段类型 (列号1), 0))
                    赋值 (累计数, 相加 (到数值 (子文本替换 (_启动窗口.取文本 (., 行号1, 列号1), “,”, “”, , , 真)), 累计数))
                    累计数 ＝ 到数值 (数据源1.取文本 (行号2, 列号2)) ＋ 累计数
                .如果真结束
                
            .如果真结束
            .如果真 (等于 (函数名, “到全角”))
                _启动窗口.置文本 (., 行号1, 列号1, 到全角 (_启动窗口.取文本 (., 行号1, 列号1)))
            .如果真结束
            .如果真 (等于 (函数名, “到半角”))
                _启动窗口.置文本 (., 行号1, 列号1, 到半角 (_启动窗口.取文本 (., 行号1, 列号1)))
            .如果真结束
            .如果真 (等于 (函数名, “四舍五入”))
                _启动窗口.置文本 (., 行号1, 列号1, 到文本 (四舍五入 (到数值 (子文本替换 (_启动窗口.取文本 (., 行号1, 列号1), “,”, “”, , , 真)), 到数值 (临时容器))))
            .如果真结束
            .如果真 (并且 (等于 (函数名, “求平方根”), 大于 (到数值 (子文本替换 (_启动窗口.取文本 (., 行号1, 列号1), “,”, “”, , , 真)), 0)))
                _启动窗口.置文本 (., 行号1, 列号1, 到文本 (求平方根 (到数值 (子文本替换 (_启动窗口.取文本 (., 行号1, 列号1), “,”, “”, , , 真)))))
            .如果真结束
            .如果真 (等于 (函数名, “最大值”))
                .如果 (大于 (临时数, 到数值 (子文本替换 (_启动窗口.取文本 (., 行号1, 列号1), “,”, “”, , , 真))))
                    
                .否则
                    赋值 (临时数, 到数值 (子文本替换 (_启动窗口.取文本 (., 行号1, 列号1), “,”, “”, , , 真)))
                .如果结束
                
            .如果真结束
            .如果真 (等于 (函数名, “最小值”))
                .如果 (小于 (临时数, 到数值 (子文本替换 (_启动窗口.取文本 (., 行号1, 列号1), “,”, “”, , , 真))))
                    
                .否则
                    赋值 (临时数, 到数值 (子文本替换 (_启动窗口.取文本 (., 行号1, 列号1), “,”, “”, , , 真)))
                .如果结束
                
            .如果真结束
            .如果真 (等于 (函数名, “取绝对值”))
                _启动窗口.置文本 (., 行号1, 列号1, 到文本 (取绝对值 (到数值 (子文本替换 (_启动窗口.取文本 (., 行号1, 列号1), “,”, “”, , , 真)))))
            .如果真结束
            .如果真 (等于 (函数名, “取整”))
                _启动窗口.置文本 (., 行号1, 列号1, 到文本 (取整 (到数值 (子文本替换 (_启动窗口.取文本 (., 行号1, 列号1), “,”, “”, , , 真)))))
            .如果真结束
            .如果真 (等于 (函数名, “绝对取整”))
                _启动窗口.置文本 (., 行号1, 列号1, 到文本 (绝对取整 (到数值 (子文本替换 (_启动窗口.取文本 (., 行号1, 列号1), “,”, “”, , , 真)))))
            .如果真结束
            .如果真 (等于 (“求次方”))
                _启动窗口.置文本 (., 行号1, 列号1, 到文本 (求次方 (到数值 (子文本替换 (_启动窗口.取文本 (., 行号1, 列号1), “,”, “”, , , 真)), 到数值 (临时容器))))
            .如果真结束
            .如果真 (等于 (“求正弦”))
                _启动窗口.置文本 (., 行号1, 列号1, 到文本 (求正弦 (到数值 (子文本替换 (_启动窗口.取文本 (., 行号1, 列号1), “,”, “”, , , 真)))))
            .如果真结束
            .如果真 (等于 (函数名, “乘某数”))
                _启动窗口.置文本 (., 行号1, 列号1, 到文本 (相乘 (到数值 (临时容器), 到数值 (子文本替换 (_启动窗口.取文本 (., 行号1, 列号1), “,”, “”, , , 真)))))
                
            .如果真结束
            
            
            
            
            
            赋值 (行号1, 相加 (行号1, 1))
            
            
            
        .计次循环尾 ()
        
        .如果真 (等于 (函数名, “累计值”))
            _启动窗口.置文本 (., 相加 (_启动窗口., 1), 列号1, 到文本 (累计数))
        .如果真结束
        .如果真 (等于 (函数名, “平均值”))
            _启动窗口.置文本 (., 相加 (_启动窗口., 1), 列号1, 到文本 (相除 (累计数, 相减 (相加 (_启动窗口., 1), _启动窗口.))))
        .如果真结束
        .如果真 (等于 (函数名, “最大值”))
            _启动窗口.置文本 (., 相加 (_启动窗口., 1), 列号1, 到文本 (临时数))
        .如果真结束
        .如果真 (等于 (函数名, “最小值”))
            _启动窗口.置文本 (., 相加 (_启动窗口., 1), 列号1, 到文本 (临时数))
        .如果真结束
        
        
        赋值 (列号1, 相加 (列号1, 1))
        
    .计次循环尾 ()
    
    
    _启动窗口.保存更改 (.)
    _启动窗口.刷新 (.)
    
    
    返回 ()
.如果真结束


.子程序 _工具条1_被单击, 空白型, , 
.参数 按钮索引, 整数型, , 

.如果真 (等于 (1))
    赋值 (_启动窗口., “横向”)
.如果真结束
.如果真 (等于 (按钮索引, 2))
    赋值 (_启动窗口., “纵向”)
.如果真结束
.如果真 (等于 (按钮索引, 3))
    赋值 (_启动窗口., “双向”)
.如果真结束
.如果真 (等于 (按钮索引, 5))
    赋值 (_启动窗口., “选区”)
.如果真结束
.如果真 (等于 (按钮索引, 6))
    赋值 (_启动窗口., “整列”)
.如果真结束
赋值 (易之表函数.标题, 相加 (“函数面板”, 到文本 (按钮索引)))



.子程序 _选择列表框1_列表项被选择, 空白型, , 
赋值 (易之表函数.标题, 相加 (“函数面板”, 到文本 (.现行选中项)))


.子程序 横向函数计算, 空白型, , 横向
.参数 函数名, 文本型, , 根据函数的名称进行控制
.参数 作用范围, 文本型, 可空, 是选定区域,还是整列计算,如果省略,将默认为选区

.局部变量 计次, 整数型, , , 
.局部变量 列号1, 整数型, , , 
.局部变量 计数, 整数型, , , 
.局部变量 行号1, 整数型, , , 
.局部变量 累计数, 小数型, , , 
.局部变量 临时容器, 文本型, , , 
.局部变量 临时数, 整数型, , , 

赋值 (临时数, 到数值 (子文本替换 (_启动窗口.取文本 (., 行号1, 列号1), “,”, “”, , , 真)))

赋值 (计数, 1)
赋值 (行号1, _启动窗口.)
.如果真 (等于 (_启动窗口., _启动窗口.取列数 (.)))
    信息框 (到文本 (结束列号) ＋ 到文本 (数据源1.取列数 ()), 0, )
    设置修改 ()
    _启动窗口.插入列 (., 相加 (_启动窗口., 1), )
    _启动窗口.置文本 (., 5, 相加 (“总列数 = ”, 到文本 (_启动窗口.取列数 (.))))
    
.如果真结束


.如果真 (等于 (“四舍五入”))
    输入框 (“请输入要四舍五入的位置:如果大于0，表示小数点右边应保留的位数；如果等于0，表示舍入到整数；如果小于0，表示小数点左边舍入到的位置。”, , , , )
.如果真结束
.如果真 (等于 (“求次方”))
    输入框 (“请输入要求次方数:参数值指定对欲求次方数值的运算指数。”, , “2”, , )
.如果真结束



.计次循环首 (相减 (相加 (_启动窗口., 1), _启动窗口.), 计数)
    赋值 (计数, 1)
    赋值 (列号1, _启动窗口.)
    赋值 (临时数, 到数值 (子文本替换 (_启动窗口.取文本 (., 行号1, 列号1), “,”, “”, , , 真)))
    赋值 (累计数, 0)
    .计次循环首 (相减 (相加 (_启动窗口., 1), _启动窗口.), 计次)
        
        
        .如果真 (或者 (等于 (“累计值”), 等于 (“平均值”)))
            .如果真 (或者 (等于 (取字段类型 (), 2), 等于 (取字段类型 (), 3), 等于 (取字段类型 (), 4), 等于 (取字段类型 (), 5), 等于 (取字段类型 (), 6)))
                赋值 (累计数, 相加 (到数值 (子文本替换 (_启动窗口.取文本 (., 行号1, 列号1), “,”, “”, , , 真)), 累计数))
            .如果真结束
            .如果真 (等于 (取字段类型 (), 0))
                赋值 (累计数, 相加 (到数值 (子文本替换 (_启动窗口.取文本 (., 行号1, 列号1), “,”, “”, , , 真)), 累计数))
                累计数 ＝ 到数值 (数据源1.取文本 (行号2, 列号2)) ＋ 累计数
            .如果真结束
            
        .如果真结束
        .如果真 (等于 (“到全角”))
            _启动窗口.置文本 (., 行号1, 列号1, 到全角 (_启动窗口.取文本 (., 行号1, 列号1)))
        .如果真结束
        .如果真 (等于 (“到半角”))
            _启动窗口.置文本 (., 行号1, 列号1, 到半角 (_启动窗口.取文本 (., 行号1, 列号1)))
        .如果真结束
        .如果真 (等于 (“四舍五入”))
            _启动窗口.置文本 (., 行号1, 列号1, 到文本 (四舍五入 (到数值 (子文本替换 (_启动窗口.取文本 (., 行号1, 列号1), “,”, “”, , , 真)), 到数值 (临时容器))))
        .如果真结束
        .如果真 (并且 (等于 (函数名, “求平方根”), 大于 (到数值 (子文本替换 (_启动窗口.取文本 (., 行号1, 列号1), “,”, “”, , , 真)), 0)))
            _启动窗口.置文本 (., 行号1, 列号1, 到文本 (求平方根 (到数值 (子文本替换 (_启动窗口.取文本 (., 行号1, 列号1), “,”, “”, , , 真)))))
        .如果真结束
        .如果真 (等于 (“最大值”))
            .如果 (大于 (临时数, 到数值 (子文本替换 (_启动窗口.取文本 (., 行号1, 列号1), “,”, “”, , , 真))))
                
            .否则
                赋值 (临时数, 到数值 (子文本替换 (_启动窗口.取文本 (., 行号1, 列号1), “,”, “”, , , 真)))
            .如果结束
            
        .如果真结束
        .如果真 (等于 (“最小值”))
            .如果 (小于 (临时数, 到数值 (子文本替换 (_启动窗口.取文本 (., 行号1, 列号1), “,”, “”, , , 真))))
                
            .否则
                赋值 (临时数, 到数值 (子文本替换 (_启动窗口.取文本 (., 行号1, 列号1), “,”, “”, , , 真)))
            .如果结束
            
        .如果真结束
        .如果真 (等于 (“取绝对值”))
            _启动窗口.置文本 (., 行号1, 列号1, 到文本 (取绝对值 (到数值 (子文本替换 (_启动窗口.取文本 (., 行号1, 列号1), “,”, “”, , , 真)))))
        .如果真结束
        .如果真 (等于 (“取整”))
            _启动窗口.置文本 (., 行号1, 列号1, 到文本 (取整 (到数值 (子文本替换 (_启动窗口.取文本 (., 行号1, 列号1), “,”, “”, , , 真)))))
        .如果真结束
        .如果真 (等于 (“绝对取整”))
            _启动窗口.置文本 (., 行号1, 列号1, 到文本 (绝对取整 (到数值 (子文本替换 (_启动窗口.取文本 (., 行号1, 列号1), “,”, “”, , , 真)))))
        .如果真结束
        .如果真 (等于 (“求次方”))
            _启动窗口.置文本 (., 行号1, 列号1, 到文本 (求次方 (到数值 (子文本替换 (_启动窗口.取文本 (., 行号1, 列号1), “,”, “”, , , 真)), 到数值 (临时容器))))
        .如果真结束
        .如果真 (等于 (“求正弦”))
            _启动窗口.置文本 (., 行号1, 列号1, 到文本 (求正弦 (到数值 (子文本替换 (_启动窗口.取文本 (., 行号1, 列号1), “,”, “”, , , 真)))))
        .如果真结束
        
        
        
        
        
        赋值 (列号1, 相加 (列号1, 1))
        
    .计次循环尾 ()
    
    易之表窗口.数据源1.置文本 (行号1, 易之表窗口.结束列号 ＋ 1, 到文本 (累计数))
    数据源1.置文本 (行号1, 结束列号 ＋ 1, 到文本 (累计数))
    .如果真 (等于 (“累计值”))
        _启动窗口.置文本 (., 行号1, 相加 (_启动窗口., 1), 到文本 (累计数))
    .如果真结束
    .如果真 (等于 (“平均值”))
        信息框 ((易之表窗口.结束列号 ＋ 1) － 易之表窗口.起始列号, 0, )
        _启动窗口.置文本 (., 行号1, 相加 (_启动窗口., 1), 到文本 (相除 (累计数, 相减 (相加 (_启动窗口., 1), _启动窗口.))))
    .如果真结束
    .如果真 (等于 (“最大值”))
        _启动窗口.置文本 (., 行号1, 相加 (_启动窗口., 1), 到文本 (临时数))
    .如果真结束
    .如果真 (等于 (“最小值”))
        _启动窗口.置文本 (., 行号1, 相加 (_启动窗口., 1), 到文本 (临时数))
    .如果真结束
    
    
    赋值 (行号1, 相加 (行号1, 1))
    
.计次循环尾 ()


_启动窗口.保存更改 (.)
_启动窗口.刷新 (.)



 ' 不属于任何一个程序集、类模块的函数：
