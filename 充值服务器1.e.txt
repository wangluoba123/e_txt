 ' 文件类型：Windows窗口程序

 ' 程序名称：冲值服务器
 ' 程序描述：
 ' 程序作者：周国强
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：13438314306
 ' 传真号码：
 ' 电子信箱：136335999@qq.com
 ' 主页地址：http://www.cnn5.cn
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 533
    高度 = 333
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “冲值服务器”
    帮助文件名 = “”





 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 4 系统核心支持库
 ' iext 27bb20fdd3e145e4bee3db39ddd6e64c 1 2 扩展界面支持库一




数据类型 LVHITTESTINFO, , 
    .成员 x, 整数型, , , 
    .成员 y, 整数型, , , 
    .成员 flags, 整数型, , , 
    .成员 行, 整数型, , , 
    .成员 列, 整数型, , , 


.DLL命令 SendMessage, 整数型, "", "SendMessageA", , 
    .参数 hWnd, 整数型, , 
    .参数 Msg, 整数型, , 
    .参数 wParam, 整数型, , 
    .参数 lParam, LVHITTESTINFO, , 

.窗口程序集 窗口程序集1, , , 

.子程序 __启动窗口_创建完毕, 空白型, , 
.如果 (等于 (打开 (相加 (取运行目录 (), “\记录.edb”), , , , , “zhou1989”, ), 假))
    信息框 (“连接数据库失败！”, 16, )
    结束 ()
.否则
    
.如果结束
读全部 ()

.子程序 读全部, 空白型, , 
.局部变量 t, 整数型, , , 

赋值 (., {  })
处理事件 ()
到首记录 ()
.计次循环首 (取记录数 (), )
    赋值 (t, .插入表项 ())
    t.置标题 (0, 读 (1))
    t.置标题 (1, 读 (2))
    t.置标题 (2, 读 (3))
    t.置标题 (3, 读 (4))
    t.置标题 (4, 读 (5))
    t.置标题 (5, 到文本 (读 (6)))
    t.置标题 (6, 到文本 (读 (7)))
    跳过 ()
.计次循环尾 ()
赋值 (.标题, 相加 (“目前已造出”, 到文本 (取表项数 ()), “张卡了！”))

.子程序 _单选框1_被单击, 空白型, , 
.如果 (等于 (.选中, 真))
    读全部 ()
.否则
    返回 ()
.如果结束
赋值 (.标题, 相加 (“目前已造出”, 到文本 (取表项数 ()), “张卡了！”))

.子程序 _单选框2_被单击, 空白型, , 
.局部变量 t, 整数型, , , 

赋值 (., {  })
.如果 (等于 (.选中, 假))
    返回 ()
.否则
    到首记录 ()
    .计次循环首 (取记录数 (), )
        .如果 (查找 (等于 (读 (5), “假”)))
            赋值 (t, .插入表项 ())
            t.置标题 (0, 读 (1))
            t.置标题 (1, 读 (2))
            t.置标题 (2, 读 (3))
            t.置标题 (3, 读 (4))
            t.置标题 (4, 读 (5))
            t.置标题 (5, 到文本 (读 (6)))
            跳过 ()
        .否则
            
        .如果结束
        处理事件 ()
    .计次循环尾 ()
.如果结束
赋值 (.标题, 相加 (“还有”, 到文本 (取表项数 ()), “张卡未被冲值！”))

.子程序 _单选框3_被单击, 空白型, , 
.局部变量 t, 整数型, , , 

赋值 (., {  })
.如果 (等于 (.选中, 假))
    返回 ()
.否则
    到首记录 ()
    .计次循环首 (取记录数 (), )
        .如果 (查找 (等于 (读 (5), “真”)))
            赋值 (t, .插入表项 ())
            t.置标题 (0, 读 (1))
            t.置标题 (1, 读 (2))
            t.置标题 (2, 读 (3))
            t.置标题 (3, 读 (4))
            t.置标题 (4, 读 (5))
            t.置标题 (5, 到文本 (读 (6)))
            跳过 ()
        .否则
            
        .如果结束
        处理事件 ()
    .计次循环尾 ()
.如果结束
赋值 (.标题, 相加 (“目前已有”, 到文本 (取表项数 ()), “被冲值了！”))

.子程序 _超级列表框1_被双击, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 a, LVHITTESTINFO, , , 

赋值 (a.x, 横向位置)
赋值 (a.y, 纵向位置)
SendMessage (取窗口句柄 (), 4153, 0, a)
.如果 (等于 (a.列, 0))
    置剪辑板文本 (.取标题 (., a.列))
    信息框 (“冲值卡号已被复制”, 64, )
.否则
    
.如果结束
.如果 (等于 (a.列, 1))
    置剪辑板文本 (.取标题 (., a.列))
    信息框 (“冲值密码已被复制”, 64, )
.否则
    
.如果结束


.子程序 _按钮1_被单击, 空白型, , 
.局部变量 i, 文本型, , , 
.局部变量 数值, 文本型, , "0", 
.局部变量 卡号, 文本型, , , 
.局部变量 r, 整数型, , , 
.局部变量 次, 整数型, , , 
.局部变量 密码, 文本型, , , 

到尾记录 ()
赋值 (i, 读 (1))
输出调试文本 (i)
赋值 (数值, 分割文本 (i, “Z”, ))
.如果 (等于 (.选中, 真))
    赋值 (次, 1)
.否则
    赋值 (次, 10)
.如果结束
置随机数种子 ()
.计次循环首 (次, r)
    赋值 (卡号, 取 (到文本 (相加 (到数值 (数值 [2]), r))))
    赋值 (密码, 相加 (到文本 (取随机数 (100, 999)), 到文本 (取随机数 (100, 999)), 到文本 (取随机数 (10, 99)))) ' 密码是8位数字
    加记录 (卡号, 密码, “”, “”, “假”, 30, “假”, “”)
.计次循环尾 ()
读全部 ()

.子程序 取, 文本型, , 判断卡号是不是2位字母+8位数字
.参数 编号, 文本型, , 

.如果 (等于 (取文本长度 (到文本 (编号)), 1))
    赋值 (编号, 相加 (“CZ0000000”, 编号))
.否则
    
.如果结束
.如果 (等于 (取文本长度 (到文本 (编号)), 2))
    赋值 (编号, 相加 (“CZ000000”, 编号))
.否则
    
.如果结束
.如果 (等于 (取文本长度 (到文本 (编号)), 3))
    赋值 (编号, 相加 (“CZ00000”, 编号))
.否则
    
.如果结束
.如果 (等于 (取文本长度 (到文本 (编号)), 4))
    赋值 (编号, 相加 (“CZ0000”, 编号))
.否则
    
.如果结束
.如果 (等于 (取文本长度 (到文本 (编号)), 5))
    赋值 (编号, 相加 (“CZ000”, 编号))
.否则
    
.如果结束
.如果 (等于 (取文本长度 (到文本 (编号)), 6))
    赋值 (编号, 相加 (“CZ00”, 编号))
.否则
    
.如果结束
.如果 (等于 (取文本长度 (到文本 (编号)), 7))
    赋值 (编号, 相加 (“CZ0”, 编号))
.否则
    
.如果结束
.如果 (等于 (取文本长度 (到文本 (编号)), 8))
    赋值 (编号, 相加 (“CZ”, 编号))
.否则
    
.如果结束
返回 (编号)

.子程序 _服务器1_数据到达, 空白型, , 
.局部变量 i, 文本型, , "0", 

输出调试文本 (到文本 (取回数据 ()))
赋值 (i, 分割文本 (到文本 (取回数据 ()), #换行符, ))
.如果 (等于 (i [1], “づ登陆の”))
    用户登陆 ()
    输出调试文本 (“用户登陆”)
    重定义数组 (i, 假, 0) ' 定义下数组，这样减少对服务器的负担
    返回 () ' 找到文本“づ登陆の”证明是用户注册，就不需要想下运行了，这样可以减少服务器的负担
.否则
    
.如果结束
.如果 (等于 (i [1], “お新用户ァ”))
    新用户注册冲值 ()
    输出调试文本 (“新用户注册冲值”)
    重定义数组 (i, 假, 0)
    返回 ()
.否则
    
.如果结束
.如果 (等于 (i [1], “お用户々”))
    用户冲值 ()
    输出调试文本 (“用户冲值值”)
    重定义数组 (i, 假, 0)
    返回 ()
.否则
    
.如果结束
.如果 (等于 (i [1], “ぎ改密げ”))
    修改密码 ()
    输出调试文本 (“修改密码”)
    重定义数组 (i, 假, 0)
    返回 ()
.否则
    
.如果结束
.如果 (等于 (i [1], “を查次ん”))
    查次 ()
    输出调试文本 (“查次”)
    重定义数组 (i, 假, 0)
    返回 ()
.否则
    
.如果结束
.如果 (等于 (i [1], “ぎ退出げ”))
    写 (7, “假”) ' 写入数据库，用户不在线
.否则
    
.如果结束


.子程序 用户登陆, 空白型, , 
.局部变量 数组, 文本型, , "0", 
.局部变量 文件名, 文本型, , , 

处理事件 ()
赋值 (文件名, 到文本 (取回数据 ()))
赋值 (数组, 分割文本 (文件名, #换行符, ))
 ' 使用“#换行符”字符分割文本取数组[1]+数组[2]就是全部客户数据
 ' 取文本右边 (文件名, 取文本长度 (文件名) － 倒找文本 (文件名, “の”, , 假)) 取到的数据全部是“の”后面的数据
到首记录 ()
.如果 (等于 (查找 (等于 (读 (3), 数组 [2])), 假)) ' 没有找到用户名，用户不存在
    取回客户 ().发送数据 (“无用户”, 5)
    返回 ()
.否则
    .如果 (不等于 (读 (4), 数组 [3])) ' 找到用户名，查看密码是否正确
        取回客户 ().发送数据 (“失败”, 5)
        返回 ()
    .否则
        .如果 (不等于 (读 (7), “假”)) ' 检查是否在线，这里是一个限制一次登陆的设置
            取回客户 ().发送数据 (“在线”, 5)
            返回 ()
        .否则
            取回客户 ().发送数据 (相加 (“成功$”, 到文本 (读 (6))), 5) ' 将使用次数发送给用户
            写 (7, “真”) ' 写入数据库，用户在线
            写 (8, 到文本 (取回客户 ())) ' 写入数据库当前用户IP，方便等下删除“用户在线”
        .如果结束
        
        
        
    .如果结束
    
.如果结束


.子程序 新用户注册冲值, 空白型, , 
.局部变量 数组, 文本型, , "0", 
.局部变量 文件名, 文本型, , , 

处理事件 ()
赋值 (文件名, 到文本 (取回数据 ()))
赋值 (数组, 分割文本 (文件名, #换行符, ))
到首记录 ()
.如果 (等于 (查找 (等于 (读 (3), 数组 [4])), 真)) ' 查看用户是否存在，这里是新用户注册，不能存在2个相同的用户名
    取回客户 ().发送数据 (“存在”, 5)
    返回 ()
.否则
    
.如果结束
到首记录 ()
.如果 (等于 (查找 (等于 (读 (1), 数组 [2])), 假)) ' 查看冲值卡号是否正确
    取回客户 ().发送数据 (“错误卡号”, 5)
    返回 ()
.否则
    .如果 (不等于 (读 (2), 数组 [3])) ' 查看冲值密码是否正确
        取回客户 ().发送数据 (“错误密码”, )
        返回 ()
    .否则
        .如果 (不等于 (读 (5), “假”)) ' 检查此冲值卡是否使用过
            取回客户 ().发送数据 (“已冲值”, )
            返回 ()
        .否则
            取回客户 ().发送数据 (“冲值完毕@”, )
            写 (3, 数组 [4]) ' 将用户名写入数据库
            写 (4, 数组 [5]) ' 将密码写入数据库
            写 (5, “真”) ' 写入数据库是否冲值=真
        .如果结束
        
    .如果结束
    
.如果结束


.子程序 用户冲值, 空白型, , 
.局部变量 数组, 文本型, , "0", 
.局部变量 文件名, 文本型, , , 

处理事件 ()
赋值 (文件名, 到文本 (取回数据 ()))
赋值 (数组, 分割文本 (文件名, #换行符, ))
到首记录 ()
.如果 (等于 (查找 (等于 (读 (3), 数组 [4])), 假)) ' 这里是用户直接冲值，要将用户没有使用完的次数相加起来，所以要判断
    取回客户 ().发送数据 (“没有用户”, 5)
    返回 ()
.否则
    
.如果结束
到首记录 ()
.如果 (等于 (查找 (等于 (读 (1), 数组 [2])), 假)) ' 查找卡号是否正确
    取回客户 ().发送数据 (“错误卡号”, 5)
    返回 ()
.否则
    .如果 (不等于 (读 (2), 数组 [3])) ' 检查密码是否正确
        取回客户 ().发送数据 (“错误密码”, 5)
        返回 ()
    .否则
        .如果 (不等于 (读 (5), “假”)) ' 检查此冲值卡是否使用过
            取回客户 ().发送数据 (“已冲值”, )
            返回 ()
        .否则
            取回客户 ().发送数据 (相加 (“搞定@”, 到文本 (读 (6))), ) ' 次数发送给客户，这里的次数是变化的
            写 (5, “真”) ' 写入数据库是否冲值=真,这里不需要讲帐号密码写入数据库
        .如果结束
        到首记录 ()
        查找 (等于 (读 (3), 数组 [4])) ' 将数据库指针移动到用户名数据
        写 (6, 相加 (读 (6), 30)) ' 将用户的次数+30
    .如果结束
    
.如果结束


.子程序 修改密码, 空白型, , 
.局部变量 数组, 文本型, , "0", 
.局部变量 文件名, 文本型, , , 

处理事件 ()
赋值 (文件名, 到文本 (取回数据 ()))
赋值 (数组, 分割文本 (文件名, #换行符, ))
到首记录 ()
输出调试文本 (相加 (数组 [2], “!!!!!”))
输出调试文本 (查找 (等于 (读 (“用户名字”), 数组 [2])))
.如果 (等于 (查找 (等于 (读 (“用户名字”), 数组 [2])), 假)) ' 查看用户是否存在
    取回客户 ().发送数据 (“没有用户哦”, 5)
    返回 ()
.否则
    .如果 (不等于 (读 (4), 数组 [3])) ' 查看密码是否正确
        取回客户 ().发送数据 (“失哦败”, 5)
        返回 ()
    .否则
        取回客户 ().发送数据 (“改密”, 5) ' 密码正确同意修改
        写 (4, 数组 [4]) ' 更改密码
    .如果结束
    
.如果结束


.子程序 _服务器1_客户离开, 空白型, , 
到首记录 ()
.如果 (等于 (查找 (等于 (读 (8), 到文本 (取回客户 ()))), 真)) ' 用户走了，删除掉在线
    写 (7, “假”) ' 写为假
.否则
    返回 ()
.如果结束


.子程序 查次, 空白型, , 
.局部变量 数组, 文本型, , "0", 
.局部变量 文件名, 文本型, , , 

处理事件 ()
赋值 (文件名, 到文本 (取回数据 ()))
赋值 (数组, 分割文本 (文件名, #换行符, ))
到首记录 ()
.如果 (等于 (查找 (不等于 (读 (3), 数组 [2])), 真))
    取回客户 ().发送数据 (“张好不对”, 5)
    返回 ()
.否则
    .如果 (不等于 (读 (4), 数组 [3]))
        取回客户 ().发送数据 (“不对”, 5)
    .否则
        取回客户 ().发送数据 (相加 (“对的很”, 到文本 (读 (6))), 5)
    .如果结束
    
.如果结束


.子程序 _选择框1_被单击, 空白型, , 
.如果 (等于 (.选中, 真))
    赋值 (.时钟周期, 5000)
.否则
    赋值 (.时钟周期, 0)
.如果结束


.子程序 _时钟1_周期事件, 空白型, , 
读全部 ()

.子程序 __启动窗口_可否被关闭, 逻辑型, , 
到首记录 ()
.计次循环首 (取记录数 (), )
    写 (“是否在线”, “假”)
    跳过 ()
.计次循环尾 ()


 ' 不属于任何一个程序集、类模块的函数：
