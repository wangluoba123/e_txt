 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 翻译窗口
    左边 = 50
    顶边 = 50
    宽度 = 584
    高度 = 474
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “altavista 在线翻译机 QQ:5964249”
    帮助文件名 = “”



.常量 GET, "0", , 
.常量 POST, "1", , 
.常量 , , , 
.常量 CP_UTF8, "65001", , 
.常量 CP_UTF7, "65000", , 
.常量 CP_ACP, "0", , 
.常量 CP_MACCP, "2", , 
.常量 CP_OEMCP, "1", , 
.常量 CP_THREAD_ACP, "3", , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 2 系统核心支持库




.全局变量 传递, 逻辑型, , , 
.全局变量 HTTP, HTTP访问类, , , 

.DLL命令 _Internet激活, 整数型, "wininet.dll", "InternetOpenA", , 
    .参数 句柄名称, 文本型, 传址, 
    .参数 连接类型, 整数型, , 1直接连接;3代理连接
    .参数 代理地址, 文本型, 传址, 
    .参数 代理掩码, 文本型, 传址, 
    .参数 dwFlags, 整数型, , 0

.DLL命令 _Internet建立连接, 整数型, "wininet.dll", "InternetConnectA", , 
    .参数 Internet句柄, 整数型, , 
    .参数 域名, 文本型, 传址, 
    .参数 服务器端口, 整数型, , 80HTTP;21FTP;
    .参数 用户名, 文本型, 传址, 空
    .参数 用户口令, 文本型, 传址, 空
    .参数 服务类型, 整数型, , 1FTP;3HTTP
    .参数 dwFlags, 整数型, , 0http;134217728被动FTP模式
    .参数 dwContext, 整数型, , 0

.DLL命令 _Internet关闭句柄, 逻辑型, "wininet.dll", "InternetCloseHandle", , 
    .参数 句柄, 整数型, , 

.DLL命令 _Internet读文件, 逻辑型, "wininet.dll", "InternetReadFile", , 
    .参数 HTTP请求句柄, 整数型, , 
    .参数 sBuffer, 字节集, 传址, 
    .参数 lNumBytesToRead, 整数型, , 
    .参数 lNumberOfBytesRead, 整数型, 传址, 

.DLL命令 _HttpOpenRequest, 整数型, "wininet.dll", "HttpOpenRequestA", , '创建请求
    .参数 Internet连接句柄, 整数型, , 由Internet建立连接返回
    .参数 访问方式, 文本型, 传址, "GET" or "POST"为空默认GET
    .参数 页面路径, 文本型, 传址, 简短路径,不带域名
    .参数 协议版本, 文本型, 传址, 为空默认HTTP/1.1
    .参数 引用页, 文本型, 传址, 可为空
    .参数 识别类型, 文本型, 传址, 可为空
    .参数 dwFlags, 整数型, , 2147483648更新下载
    .参数 dwContext, 整数型, , 0

.DLL命令 _HttpSendRequest, 逻辑型, "wininet.dll", "HttpSendRequestA", , Http发送请求
    .参数 HTTP请求句柄, 整数型, , 
    .参数 sHeaders, 文本型, 传址, 
    .参数 lHeadersLength, 整数型, , 
    .参数 sOptional, 文本型, 传址, 
    .参数 lOptionalLength, 整数型, , 

.DLL命令 _InternetGetCookie, 逻辑型, "wininet.dll", "InternetGetCookieA", , 读取Cookies
    .参数 域名, 文本型, 传址, 
    .参数 名称, 文本型, 传址, 
    .参数 内容, 文本型, 传址, 
    .参数 尺寸, 整数型, 传址, 

.DLL命令 _InternetSetCookie, 逻辑型, "wininet.dll", "InternetSetCookieA", , 设置Cookies
    .参数 域名, 文本型, 传址, 
    .参数 名称, 文本型, 传址, 
    .参数 内容, 文本型, 传址, 

.DLL命令 _创建线程, 整数型, "", "CreateThread", , 
    .参数 lpThreadAttributes, 整数型, , 
    .参数 dwStackSize, 整数型, , 
    .参数 lpStartAddress, 子程序指针, , 
    .参数 lpParameter, 整数型, , 
    .参数 dwCreationFlags, 整数型, , 
    .参数 lpThreadId, 整数型, 传址, 

.DLL命令 _销毁线程, 空白型, "", "TerminateThread", , 
    .参数 hThread, 整数型, , 
    .参数 dwExitCode, 整数型, , 

.DLL命令 _查询信息, 逻辑型, "wininet.dll", "HttpQueryInfoA", , 
    .参数 Internet请求句柄, 整数型, , 
    .参数 待查信息, 整数型, , 22返回所有信息;43SET_COOKIE;+2147483648返回文本
    .参数 返回容器, 文本型, 传址, 
    .参数 返回容器长度, 整数型, 传址, 
    .参数 lpdwIndex, 整数型, , 

.DLL命令 _UTF8生成, 整数型, "", "WideCharToMultiByte", , 
    .参数 CodePage, 整数型, , CP_ACP CP_UTF8
    .参数 dwFlags, 整数型, , 
    .参数 lpWideCharStr, 文本型, , 
    .参数 cchWideChar, 整数型, , 
    .参数 lpMultiByteStr, 文本型, , 
    .参数 cbMultiByte, 整数型, , 
    .参数 lpDefaultChar, 整数型, , 
    .参数 lpUsedDefaultChar, 整数型, , 

.DLL命令 _字符编码, 整数型, "", "MultiByteToWideChar", , 
    .参数 CodePage, 整数型, , CP_ACP CP_UTF8
    .参数 dwFlags, 整数型, , 
    .参数 lpWideCharStr, 文本型, , 
    .参数 cchWideChar, 整数型, , 
    .参数 lpMultiByteStr, 文本型, , 
    .参数 cbMultiByte, 整数型, , 

.DLL命令 _编码转换, 整数型, "", "WideCharToMultiByte", , 
    .参数 CodePage, 整数型, , CP_ACP CP_UTF8
    .参数 dwFlags, 整数型, , 
    .参数 lpWideCharStr, 文本型, , 
    .参数 cchWideChar, 整数型, , 
    .参数 lpMultiByteStr, 整数型, , 
    .参数 cbMultiByte, 整数型, , 
    .参数 lpDefaultChar, 整数型, , 
    .参数 lpUsedDefaultChar, 整数型, , 

.DLL命令 _取目标编码长度, 整数型, "", "MultiByteToWideChar", , 
    .参数 CodePage, 整数型, , CP_ACP CP_UTF8
    .参数 dwFlags, 整数型, , 
    .参数 lpWideCharStr, 文本型, , 
    .参数 cchWideChar, 整数型, , 
    .参数 lpMultiByteStr, 整数型, , 
    .参数 cbMultiByte, 整数型, , 

.程序集 程序集1, , , 

.子程序 _启动子程序, 整数型, , 本子程序在程序启动后最先执行
载入 (翻译窗口, , 真)
返回 (0) ' 可以根据您的需要返回任意数值

.窗口程序集 窗口程序集1, , , 

.程序集变量 翻译方向, 文本型, , "0", 
.子程序 _翻译窗口_创建完毕, 空白型, , 
.局部变量 Count, 整数型, , , 
.局部变量 指针, 整数型, , , 

赋值 (翻译方向, 分割文本 (“zh_en#简体中文->英语#zt_en#繁体中文->英语#en_zh#英语->简体中文#en_zt#英语->繁体中文#en_nl#英语->荷兰#en_fr#英语->法语#en_de#英语->德语#en_el#英语->希腊语#en_it#英语->意大利语#en_ja#英语->日语#en_ko#英语->韩语#en_pt#英语->葡萄牙语#en_ru#英语->俄语#en_es#英语->西班牙语#nl_en#荷兰->英语#nl_fr#荷兰->法语#fr_nl#法语->荷兰#fr_en#法语->英语#fr_de#法语->德语#fr_el#法语->希腊语#fr_it#法语->意大利语#fr_pt#法语->葡萄牙语#fr_es#法语->西班牙语#de_en#德语->英语#de_fr#德语->法语#el_en#希腊语->英语#el_fr#希腊语->法语#it_en#意大利语->英语#it_fr#意大利语->法语#ja_en#日语->英语#ko_en#韩语->英语#pt_en#葡萄牙语->英语#pt_fr#葡萄牙语->法语#ru_en#俄语->英语#es_en#西班牙语->英语#es_fr#西班牙语->法语”, “#”, ))
赋值 (Count, 取数组成员数 (翻译方向))
.变量循环首 (1, Count, 1, 指针)
    .如果真 (等于 (求余数 (指针, 2), 0))
        翻译方向.加入项目 ( [指针], 相减 (指针, 1))
    .如果真结束
    
.变量循环尾 ()
赋值 (., 0)

.子程序 _按钮2_被单击, 空白型, , 
HTTP.停止 ()
销毁 ()


.子程序 _按钮1_被单击, 空白型, , 
.局部变量 结果, 文本型, , , 

.如果真 (等于 (., “”))
    赋值 (., #红色)
    赋值 (., “您还没有输入要翻译的内容．．．”)
    返回 ()
.如果真结束
赋值 (., #黑色)
赋值 (., 真)
赋值 (结果, 取字节集数据 (HTTP.访问网页 (“http://babelfish.altavista.com/tr”, #POST, , 构造请求包 (., 翻译方向 [.取项目数值 (.)]), , ), #文本型))
.如果真 (等于 (结果, “正在发送请求....”))
    赋值 (., 假)
    返回 ()
.如果真结束
赋值 (结果, 取文本右边 (结果, 相减 (取文本长度 (结果), 24, 寻找文本 (结果, “<div style=padding:10px;>”, , 假))))
延时 (50)
赋值 (结果, 取文本左边 (结果, 相减 (寻找文本 (结果, “</td>”, , 假), 7)))
赋值 (., 字符编码 (结果, #CP_UTF8, #CP_ACP))
赋值 (., 假)

.子程序 _翻译窗口_将被销毁, 空白型, , 
HTTP.停止 ()


.子程序 _按钮3_被单击, 空白型, , 
HTTP.停止 ()
赋值 (., 假)



.子程序 _按钮4_被单击, 空白型, , 


.类模块 HTTP访问类, , , 

.程序集变量 Internet句柄, 整数型, , , 
.程序集变量 代理地址, 文本型, , , 
.程序集变量 线程号, 整数型, , , 
.程序集变量 域名, 文本型, , , 
.程序集变量 销毁, 逻辑型, , , 
.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用
赋值 (Internet句柄, _Internet激活 (到文本 (“Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.0)”), 1, “”, “”, 0))
赋值 (销毁, 假)

.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用
_Internet关闭句柄 (Internet句柄)
_销毁线程 (线程号, 0)
赋值 (销毁, 真)

.子程序 访问网页, 字节集, 公开, 
.参数 完整网址, 文本型, , 
.参数 访问方式, 整数型, 可空, 为常量 #GET 或者 #POST 默认为 #GET
.参数 附加协议头, 文本型, 可空, 
.参数 提交信息, 文本型, 可空, "POST"专用
.参数 超时值, 整数型, 可空, 
.参数 反馈信息, 标签, 参考 可空, 

.局部变量 请求信息, 字节集, , , 
.局部变量 参数文件, 整数型, , , 
.局部变量 线程句柄, 整数型, , , 
.局部变量 开始时间, 整数型, , , 
.局部变量 页面内容, 字节集, , , 
.局部变量 状态信息, 文本型, , , 

.如果真 (是否为空 (访问方式))
    赋值 (访问方式, #GET)
.如果真结束
赋值 (参数文件, 打开内存文件 ())
赋值 (请求信息, 相加 (到字节集 (到文本 (Internet句柄)), { 0 }, 到字节集 (完整网址), { 0 }))
赋值 (请求信息, 相加 (请求信息, 到字节集 (选择 (等于 (访问方式, 0), “GET”, “POST”)), { 0 }))
赋值 (请求信息, 相加 (请求信息, 到字节集 (附加协议头), { 0 }, 到字节集 (提交信息), { 0 }))
写出字节集 (参数文件, 请求信息)
赋值 (域名, 取域名 (完整网址))
赋值 (传递, 真)
赋值 (线程号, _创建线程 (0, 0, &读网页, 参数文件, 0, 线程号))
.如果 (不等于 (线程号, 0))
    .判断循环首 (传递)
    .判断循环尾 ()
.否则
    返回 ({  })
.如果结束
.如果真 (或者 (是否为空 (超时值), 等于 (超时值, 0)))
    赋值 (超时值, 90)
.如果真结束
赋值 (开始时间, 取启动时间 ())
赋值 (销毁, 假)
.判断循环首 (并且 (取反 (是否运行完毕 (参数文件)), 取反 (销毁)))
    处理事件 ()
    .如果真 (大于 (取文件长度 (参数文件), 0))
        移到文件首 (参数文件)
        赋值 (状态信息, 取字节集数据 (读入字节集 (参数文件, 取文件长度 (参数文件)), #文本型))
        .如果真 (是否已创建 (反馈信息))
            .如果真 (不等于 (反馈信息., 状态信息))
                赋值 (反馈信息., 状态信息)
            .如果真结束
            
        .如果真结束
        
    .如果真结束
    .如果真 (大于 (相减 (取启动时间 (), 开始时间), 相乘 (超时值, 1000)))
        _销毁线程 (线程号, 0)
        处理事件 ()
        赋值 (页面内容, 取空白字节集 (0))
        删除数据 (参数文件, 取文件长度 (参数文件))
        移到文件首 (参数文件)
        写出字节集 (参数文件, 取空白字节集 (4))
        跳出循环 ()
    .如果真结束
    
.判断循环尾 ()
.如果真 (是否已创建 (反馈信息))
    赋值 (反馈信息., “完毕”)
.如果真结束
赋值 (线程号, 相减 (取文件长度 (参数文件), 4))
移动读写位置 (参数文件, #文件首, 4)
赋值 (页面内容, 读入字节集 (参数文件, 线程号))
关闭文件 (参数文件)
赋值 (线程号, 0)
返回 (页面内容)

.子程序 设置代理, 空白型, , 
.参数 代理, 文本型, , 

_Internet关闭句柄 (Internet句柄)
赋值 (代理地址, 代理)
赋值 (Internet句柄, _Internet激活 (到文本 (“Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.0)”), 3, 到文本 (相加 (“http=”, 代理地址)), “”, 0))


.子程序 停止, 空白型, 公开, 
_销毁线程 (线程号, 0)
赋值 (销毁, 真)

.子程序 清除Cookies, 空白型, , 
.如果真 (不等于 (域名, “”))
    清除COOKIE (相加 (“http://”, 域名))
.如果真结束


.程序集 常规功能程序集, , , 

.子程序 读网页, 空白型, , 
.参数 文件号, 整数型, , 

.局部变量 参数数据, 字节集, , "5", 
.局部变量 Internet句柄, 整数型, , , 
.局部变量 Internet连接句柄, 整数型, , , 
.局部变量 HTTP请求句柄, 整数型, , , 
.局部变量 域名, 文本型, , , 
.局部变量 端口, 整数型, , , 
.局部变量 完整地址, 文本型, , , 
.局部变量 页面地址, 文本型, , , 
.局部变量 访问方式, 文本型, , , 
.局部变量 附加协议头, 文本型, , , 
.局部变量 提交信息, 文本型, , , 
.局部变量 页面内容, 字节集, , , 
.局部变量 逻辑容器, 逻辑型, , , 
.局部变量 整数容器1, 整数型, , , 
.局部变量 整数容器2, 整数型, , , 
.局部变量 字节集容器, 字节集, , , 
.局部变量 文本容器, 文本型, , , 
.局部变量 字节集, 字节集, , , 
.局部变量 Cookie位置, 整数型, , , 
.局部变量 Cookie, 文本型, , , 
.局部变量 Len, 整数型, , , 

 ' 参数传递过程
移到文件首 (文件号)
赋值 (字节集, 读入字节集 (文件号, 取文件长度 (文件号)))
 ' 参数分解过程
赋值 (参数数据, 分割字节集 (字节集, { 0 }, 5))
 ' 1、Internet句柄。   2、完整网址。  3、访问方式。  4、附加协议头。  5、提交信息
.如果真 (小于 (取数组成员数 (参数数据), 1))
    信息框 (取文件长度 (文件号), 0, )
    返回 ()
.如果真结束
赋值 (Internet句柄, 到数值 (取字节集数据 (参数数据 [1], #文本型)))
赋值 (完整地址, 取字节集数据 (参数数据 [2], #文本型))
赋值 (访问方式, 取字节集数据 (参数数据 [3], #文本型))
赋值 (附加协议头, 取字节集数据 (参数数据 [4], #文本型))
赋值 (提交信息, 取字节集数据 (参数数据 [5], #文本型))

赋值 (域名, 取域名 (完整地址))
赋值 (页面地址, 取页面地址 (完整地址))
赋值 (Internet连接句柄, _Internet建立连接 (Internet句柄, 取域名 (完整地址), 取端口 (完整地址), “”, “”, 3, 0, 0))

赋值 (Len, 取文件长度 (文件号))
移到文件尾 (文件号)
写出字节集 (文件号, 到字节集 (“正在发送请求....”))
移到文件首 (文件号)
删除数据 (文件号, Len)
赋值 (传递, 假)
.如果真 (等于 (Internet连接句柄, 0))
    赋值 (页面内容, 取空白字节集 (0))
    返回 ()
.如果真结束
赋值 (HTTP请求句柄, _HttpOpenRequest (Internet连接句柄, 访问方式, 页面地址, “HTTP/1.1”, 到文本 (“”), 到文本 (“”), 2147483648, 0))
.如果真 (等于 (HTTP请求句柄, 0))
    赋值 (页面内容, 取空白字节集 (0))
    返回 ()
.如果真结束

 ' 补充协议头
.如果真 (等于 (寻找文本 (附加协议头, “Accept: ”, 1, 真), -1))
    赋值 (附加协议头, 相加 (附加协议头, “Accept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, application/x-shockwave-flash, application/vnd.ms-excel, application/vnd.ms-powerpoint, application/msword, */*”, #换行符))
.如果真结束
.如果真 (等于 (寻找文本 (附加协议头, “Referer: ”, 1, 真), -1))
    赋值 (附加协议头, 相加 (附加协议头, “Referer: ”, 完整地址, #换行符))
.如果真结束
.如果真 (等于 (寻找文本 (附加协议头, “Accept-Language: ”, 1, 真), -1))
    赋值 (附加协议头, 相加 (附加协议头, “Accept-Language: zh-cn”, #换行符))
.如果真结束

 ' 附带信息发送请求
.判断开始 (或者 (等于 (访问方式, “”), 等于 (访问方式, “GET”)))
    _HttpSendRequest (HTTP请求句柄, 附加协议头, 取文本长度 (附加协议头), “”, 0)
.判断 (等于 (访问方式, “POST”))
    .如果真 (不等于 (提交信息, “”))
        赋值 (附加协议头, 相加 (附加协议头, “Content-Type: application/x-www-form-urlencoded”, #换行符))
        赋值 (附加协议头, 相加 (附加协议头, “Content-Length: ”, 到文本 (取文本长度 (提交信息)), #换行符))
    .如果真结束
    _HttpSendRequest (HTTP请求句柄, 附加协议头, 取文本长度 (附加协议头), 提交信息, 取文本长度 (提交信息))
.默认
    赋值 (页面内容, 取空白字节集 (0))
    返回 ()
.判断结束
赋值 (Len, 取文件长度 (文件号))
移到文件尾 (文件号)
写出字节集 (文件号, 到字节集 (“正在获取数据...”))
移到文件首 (文件号)
删除数据 (文件号, Len)

 ' 读取页面文本
赋值 (逻辑容器, 真)
赋值 (整数容器1, 0)
.判断循环首 (逻辑容器)
    赋值 (字节集容器, 取空白字节集 (512))
    处理事件 ()
    _Internet读文件 (HTTP请求句柄, 字节集容器, 取字节集长度 (字节集容器), 整数容器1)
    .如果 (等于 (整数容器1, 0))
        赋值 (逻辑容器, 假)
    .否则
        赋值 (页面内容, 相加 (页面内容, 取字节集左边 (字节集容器, 整数容器1)))
    .如果结束
    
.判断循环尾 ()

 ' 取服务器回传协议头
赋值 (文本容器, 取空白文本 (1024))
_查询信息 (HTTP请求句柄, 22, 文本容器, 1024, 0)

 ' 关闭句柄
_Internet关闭句柄 (HTTP请求句柄)
_Internet关闭句柄 (Internet连接句柄)
 ' Internet关闭句柄 (Internet句柄)
赋值 (Len, 取文件长度 (文件号))
 ' 设置COOKIE
赋值 (Cookie位置, 相加 (寻找文本 (文本容器, “Set-Cookie: ”, 1, 真), 12))
.如果真 (大于 (Cookie位置, 12))
    赋值 (Cookie, 取文本中间 (文本容器, Cookie位置, 相减 (寻找文本 (文本容器, #换行符, Cookie位置, 假), Cookie位置)))
    _InternetSetCookie (相加 (“http://”, 域名), 取文本左边 (文本容器, 相减 (整数容器2, 1)), 取文本右边 (文本容器, 相减 (取文本长度 (文本容器), 整数容器2)))
.如果真结束
删除数据 (文件号, 取文件长度 (文件号))
移到文件首 (文件号)
写出字节集 (文件号, 相加 (取空白字节集 (4), 页面内容))

.子程序 取域名, 文本型, 公开, 
.参数 网址, 文本型, , 

.局部变量 符号位置, 整数型, , , 
.局部变量 域名, 文本型, , , 

.如果 (不等于 (文本比较 (取文本左边 (网址, 7), “http://”, 假), 0))
    赋值 (符号位置, 寻找文本 (网址, “/”, , 真))
    .如果 (大于 (符号位置, 0))
        赋值 (域名, 取文本左边 (网址, 相减 (符号位置, 1)))
    .否则
        赋值 (域名, 网址)
    .如果结束
    
.否则
    赋值 (符号位置, 寻找文本 (网址, “/”, 8, 真))
    .如果 (大于 (符号位置, 0))
        赋值 (域名, 取文本中间 (网址, 8, 相减 (符号位置, 8)))
    .否则
        赋值 (域名, 文本替换 (网址, 1, 7, ))
    .如果结束
    
.如果结束
赋值 (符号位置, 寻找文本 (域名, “:”, 1, 真))
.如果真 (大于 (符号位置, 0))
    赋值 (域名, 取文本左边 (域名, 相减 (符号位置, 1)))
.如果真结束
返回 (到小写 (域名))


.子程序 取端口, 整数型, 公开, 
.参数 网址, 文本型, , 

.局部变量 符号位置, 整数型, , , 
.局部变量 域名, 文本型, , , 

.如果 (不等于 (文本比较 (取文本左边 (网址, 7), “http://”, 假), 0))
    赋值 (符号位置, 寻找文本 (网址, “/”, , 真))
    .如果 (大于 (符号位置, 0))
        赋值 (域名, 取文本左边 (网址, 相减 (符号位置, 1)))
    .否则
        赋值 (域名, 网址)
    .如果结束
    
.否则
    赋值 (符号位置, 寻找文本 (网址, “/”, 8, 真))
    .如果 (大于 (符号位置, 0))
        赋值 (域名, 取文本中间 (网址, 8, 相减 (符号位置, 8)))
    .否则
        赋值 (域名, 文本替换 (网址, 1, 7, ))
    .如果结束
    
.如果结束
赋值 (符号位置, 寻找文本 (域名, “:”, 1, 真))
.如果 (大于 (符号位置, 0))
    赋值 (域名, 取文本右边 (域名, 相减 (取文本长度 (域名), 符号位置)))
.否则
    赋值 (域名, “80”)
.如果结束
返回 (到数值 (域名))


.子程序 取页面地址, 文本型, 公开, 
.参数 网址, 文本型, , 

.局部变量 页面地址, 文本型, , , 
.局部变量 符号位置, 整数型, , , 
.局部变量 域名, 文本型, , , 

赋值 (域名, 取域名 (网址))
赋值 (符号位置, 寻找文本 (网址, “/”, 寻找文本 (网址, 域名, 1, 真), 真))
.如果 (大于 (符号位置, 0))
    赋值 (页面地址, 取文本右边 (网址, 相加 (相减 (取文本长度 (网址), 符号位置), 1)))
.否则
    赋值 (页面地址, “/”)
.如果结束
返回 (页面地址)

.子程序 设COOKIE, 逻辑型, 公开, 1.1
.参数 网址, 文本型, , 
.参数 COOKIE名称, 文本型, 可空, 为空清除所有
.参数 COOKIE内容, 文本型, 可空, 为空清除
.参数 有效期, 日期时间型, 可空, 为空不保存

.局部变量 域名, 文本型, , , 
.局部变量 GMT时间, 文本型, , , 
.局部变量 现有COOKIE, 文本型, , , 
.局部变量 整数容器, 整数型, , , 
.局部变量 名称, 文本型, , , 

赋值 (域名, 取域名 (网址))
.如果 (不等于 (COOKIE名称, “”))
    .如果真 (等于 (COOKIE内容, “”))
        赋值 (COOKIE内容, “delete”)
        赋值 (有效期, 指定时间 (1999, 1, 1, 1, 1, 1))
    .如果真结束
    .如果真 (不等于 (有效期, 指定时间 (1899, 12, 30, 0, 0, 0)))
        赋值 (GMT时间, 转换为GMT格式 (有效期))
        赋值 (COOKIE内容, 相加 (COOKIE内容, “; expires=”, GMT时间))
    .如果真结束
    赋值 (COOKIE内容, 相加 (COOKIE内容, “; path=/”))
    
    _InternetSetCookie (相加 (“http://”, 域名), COOKIE名称, COOKIE内容)
    赋值 (COOKIE内容, 相加 (COOKIE内容, “; domain=”, 文本替换 (域名, 1, 3, )))
    
    返回 (_InternetSetCookie (相加 (“http://”, 域名), COOKIE名称, COOKIE内容))
    
.否则
    赋值 (现有COOKIE, 取COOKIE (相加 (“http://”, 域名)))
    
    .如果真 (不等于 (现有COOKIE, “”))
        赋值 (整数容器, 寻找文本 (现有COOKIE, “=”, 1, 真))
        .如果真 (大于 (整数容器, 0))
            赋值 (名称, 取文本左边 (现有COOKIE, 相减 (整数容器, 1)))
            设COOKIE (相加 (“http://”, 域名), 名称)
            设COOKIE (相加 (“http://”, 域名))
        .如果真结束
        
    .如果真结束
    返回 (真)
.如果结束


.子程序 取COOKIE, 文本型, 公开, 
.参数 网址, 文本型, , 
.参数 COOKIE名称, 文本型, 可空, 为空返回全部COOKIE

.局部变量 域名, 文本型, , , 
.局部变量 读取内容, 文本型, , , 
.局部变量 整数容器1, 整数型, , , 
.局部变量 整数容器2, 整数型, , , 

赋值 (域名, 取域名 (网址))
赋值 (读取内容, 取空白文本 (256))
.如果 (_InternetGetCookie (相加 (“http://”, 域名), “”, 读取内容, 255))
    .如果真 (不等于 (COOKIE名称, “”))
        赋值 (整数容器1, 寻找文本 (读取内容, COOKIE名称, 1, 真))
        .如果真 (等于 (整数容器1, -1))
            返回 (“”)
        .如果真结束
        赋值 (整数容器2, 寻找文本 (读取内容, “;”, 整数容器1, 真))
        .如果 (大于 (整数容器2, 0))
            赋值 (读取内容, 取文本中间 (读取内容, 相加 (整数容器1, 取文本长度 (COOKIE名称), 1), 相减 (整数容器2, 整数容器1, 取文本长度 (COOKIE名称), 1)))
        .否则
            赋值 (读取内容, 取文本右边 (读取内容, 相减 (取文本长度 (读取内容), 整数容器1, 取文本长度 (COOKIE名称))))
        .如果结束
        
    .如果真结束
    
    返回 (读取内容)
.否则
    返回 (“”)
.如果结束


.子程序 清除COOKIE, 逻辑型, 公开, 
.参数 域名, 文本型, , 

.局部变量 现有COOKIE, 文本型, , , 
.局部变量 上次COOKIE, 文本型, , , 
.局部变量 整数容器, 整数型, , , 
.局部变量 COOKIE名称, 文本型, , , 
.局部变量 COOKIE内容, 文本型, , , 

赋值 (现有COOKIE, 取COOKIE (相加 (“http://”, 域名)))
赋值 (上次COOKIE, 现有COOKIE)
.判断循环首 (不等于 (现有COOKIE, “”))
    赋值 (整数容器, 寻找文本 (现有COOKIE, “=”, 1, 真))
    .如果 (大于 (整数容器, 0))
        赋值 (COOKIE名称, 取文本左边 (现有COOKIE, 相减 (整数容器, 1)))
        赋值 (COOKIE内容, 相加 (“delete; expires=”, 转换为GMT格式 (指定时间 (1999, 1, 1, 1, 1, 1)), “; path=/”))
        _InternetSetCookie (相加 (“http://”, 域名), COOKIE名称, COOKIE内容)
        赋值 (COOKIE内容, 相加 (COOKIE内容, “; domain=”, 选择 (等于 (到小写 (取文本左边 (域名, 4)), “www.”), 文本替换 (域名, 1, 3, ), 域名)))
        _InternetSetCookie (相加 (“http://”, 域名), COOKIE名称, COOKIE内容)
        赋值 (现有COOKIE, 取COOKIE (相加 (“http://”, 域名)))
        .如果真 (等于 (上次COOKIE, 现有COOKIE))
            返回 (假)
        .如果真结束
        赋值 (上次COOKIE, 现有COOKIE)
    .否则
        返回 (真)
    .如果结束
    
.判断循环尾 ()
返回 (真)

.子程序 延时器, 空白型, 公开, 
.参数 延时值, 整数型, , 

.局部变量 起始时间, 整数型, , , 

赋值 (起始时间, 取启动时间 ())
.判断循环首 (小于或等于 (相减 (取启动时间 (), 起始时间), 延时值))
    处理事件 ()
.判断循环尾 ()

.子程序 转换为GMT格式, 文本型, 公开, 将日期时间型数据转换为GMT格式
.参数 待转换时间, 日期时间型, , 

.局部变量 整数容器, 整数型, , , 
.局部变量 GMT时间, 文本型, , , 

赋值 (整数容器, 取星期几 (待转换时间))
.判断开始 (等于 (整数容器, 1))
    赋值 (GMT时间, “Sun, ”)
.判断 (等于 (整数容器, 2))
    赋值 (GMT时间, “Mon, ”)
.判断 (等于 (整数容器, 3))
    赋值 (GMT时间, “Tue, ”)
.判断 (等于 (整数容器, 4))
    赋值 (GMT时间, “Wen, ”)
.判断 (等于 (整数容器, 5))
    赋值 (GMT时间, “Thu, ”)
.判断 (等于 (整数容器, 6))
    赋值 (GMT时间, “Fri, ”)
.判断 (等于 (整数容器, 7))
    赋值 (GMT时间, “Sat, ”)
.默认
    
.判断结束
赋值 (GMT时间, 相加 (GMT时间, 到文本 (取日 (待转换时间)), “-”))
赋值 (整数容器, 取月份 (待转换时间))
.判断开始 (等于 (整数容器, 1))
    赋值 (GMT时间, 相加 (GMT时间, “Jan”, “-”))
.判断 (等于 (整数容器, 2))
    赋值 (GMT时间, 相加 (GMT时间, “Feb”, “-”))
.判断 (等于 (整数容器, 3))
    赋值 (GMT时间, 相加 (GMT时间, “Mar”, “-”))
.判断 (等于 (整数容器, 4))
    赋值 (GMT时间, 相加 (GMT时间, “Apr”, “-”))
.判断 (等于 (整数容器, 5))
    赋值 (GMT时间, 相加 (GMT时间, “Mar”, “-”))
.判断 (等于 (整数容器, 6))
    赋值 (GMT时间, 相加 (GMT时间, “Jun”, “-”))
.判断 (等于 (整数容器, 7))
    赋值 (GMT时间, 相加 (GMT时间, “Jul”, “-”))
.判断 (等于 (整数容器, 8))
    赋值 (GMT时间, 相加 (GMT时间, “Aug”, “-”))
.判断 (等于 (整数容器, 9))
    赋值 (GMT时间, 相加 (GMT时间, “Sep”, “-”))
.判断 (等于 (整数容器, 10))
    赋值 (GMT时间, 相加 (GMT时间, “Oct”, “-”))
.判断 (等于 (整数容器, 11))
    赋值 (GMT时间, 相加 (GMT时间, “Nov”, “-”))
.判断 (等于 (整数容器, 12))
    赋值 (GMT时间, 相加 (GMT时间, “Dec”, “-”))
.默认
    
.判断结束
赋值 (GMT时间, 相加 (GMT时间, 到文本 (取年份 (待转换时间)), “ ”, 到文本 (取小时 (待转换时间)), “:”, 到文本 (取分钟 (待转换时间)), “:”, 到文本 (取秒 (待转换时间)), “ GMT”))
返回 (GMT时间)

.子程序 是否运行完毕, 逻辑型, , 
.参数 文件号, 整数型, , 

移到文件首 (文件号)
返回 (选择 (等于 (读入字节集 (文件号, 4), 取空白字节集 (4)), 真, 假))


.子程序 构造请求包, 文本型, , 
.参数 Text, 文本型, , 
.参数 语种, 文本型, , 

返回 (相加 (“doit=done&intl=1&tt=urltext&trtext=”, URL编码 (Text), “&lp=”, 语种))

.子程序 URL编码, 文本型, , 
.参数 文本, 文本型, , 

.局部变量 Len, 空白型, , , 
.局部变量 i, 空白型, , , 
.局部变量 Asc, 空白型, , , 
.局部变量 目标, 文本型, , , 
.局部变量 临时, 文本型, , , 

赋值 (文本, 字符编码 (文本, #CP_ACP, #CP_UTF8))
赋值 (Len, 取文本长度 (文本))
.变量循环首 (1, Len, 1, i)
    赋值 (Asc, 取代码 (文本, i))
    赋值 (Asc, 选择 (小于 (Asc, 0), 相加 (256, Asc), Asc))
    .如果 (或者 (并且 (大于 (Asc, 96), 小于 (Asc, 123)), 并且 (大于 (Asc, 64), 小于 (Asc, 91))))
        赋值 (目标, 相加 (目标, 字符 (Asc)))
    .否则
        赋值 (临时, 取十六进制文本 (Asc))
        赋值 (目标, 相加 (目标, 选择 (小于 (取文本长度 (临时), 2), 相加 (“%0”, 临时), 相加 (“%”, 临时))))
    .如果结束
    
.变量循环尾 ()
返回 (目标)

.程序集 字符编码程序集, , , 

.子程序 字符编码, 文本型, , 
.参数 文本, 文本型, , 
.参数 源编码, 整数型, , #CP_ACP #CP_UTF8
.参数 目标编码, 整数型, , #CP_ACP #CP_UTF8

.局部变量 Len, 整数型, , , 
.局部变量 r, 整数型, , , 
.局部变量 目标文本, 文本型, , , 
.局部变量 szUnicode, 文本型, , , 

赋值 (Len, 相乘 (_取目标编码长度 (源编码, 0, 文本, -1, 0, 0), 2))
赋值 (szUnicode, 取空白文本 (Len))
 ' 转换为 UNICODE
_字符编码 (源编码, 0, 文本, -1, szUnicode, Len)
赋值 (Len, _编码转换 (目标编码, 0, szUnicode, -1, 0, 0, 0, 0))
赋值 (目标文本, 取空白文本 (Len))
 ' 转换为目标编码
_UTF8生成 (目标编码, 0, szUnicode, -1, 目标文本, Len, 0, 0)
返回 (目标文本)


 ' 不属于任何一个程序集、类模块的函数：
