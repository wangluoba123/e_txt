 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 549
    高度 = 386
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假





 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 4 系统核心支持库
 ' eGrid 0B4337DA651B4b619ACF61334A7E8B47 1 3 高级表格支持库





.窗口程序集 窗口程序集1, , , 

.子程序 __启动窗口_创建完毕, 空白型, , 
.局部变量 i, 整数型, , , 

置随机数种子 ()
.计次循环首 (10, i)
    相减 (i, 1).未知支持库函数_9 (0, #, 到文本 (相加 (负 (取随机数 (0, 100)), 50)))
    相减 (i, 1).未知支持库函数_9 (1, #, 到文本 (相加 (字符 (负 (取随机数 (38, 80))), 字符 (负 (取随机数 (38, 80))))))
    相减 (i, 1).未知支持库函数_9 (2, #, 到文本 (相加 (负 (取随机数 (0, 100)), 50)))
    相减 (i, 1).未知支持库函数_9 (3, #, 到文本 (相加 (字符 (负 (取随机数 (38, 80))), 字符 (负 (取随机数 (38, 80))))))
.计次循环尾 ()

.子程序 _按钮1_被单击, 空白型, , 
.局部变量 排序方式, 逻辑型, 静态, , 

高级表格排序 (0, 0, , 排序方式, , )
赋值 (排序方式, 取反 (排序方式))
赋值 (.标题, 选择 (排序方式, “第一列数字从小到大”, “第一列数字从大到小”))

.子程序 _按钮2_被单击, 空白型, , 
.局部变量 排序方式, 逻辑型, 静态, , 

高级表格排序 (0, 1, , 排序方式, , )
赋值 (排序方式, 取反 (排序方式))
赋值 (.标题, 选择 (排序方式, “第一列文本从小到大”, “第一列文本从大到小”))


.子程序 高级表格排序, 整数型, 公开, 返回排序时间
.参数 高级表格, 未知类型0x20001, , 
.参数 排序的列, 整数型, , 
.参数 排序类型, 整数型, 可空, 除了0的情况，其他情况都为文本比较的方式
.参数 区分大小写, 逻辑型, 可空, 
.参数 排序方式, 逻辑型, 可空, 真为从小到大，假为从大到小
.参数 排序的范围行, 整数型, 可空, 
.参数 排序的范围列, 整数型, 可空, 

.局部变量 排序时间, 整数型, , , 
.局部变量 变量, 整数型, , , 
.局部变量 单元格内容, 文本型, , , 
.局部变量 排序后位置, 整数型, , , 
.局部变量 排列序号数组, 整数型, , "0", 
.局部变量 单元格内容数组, 文本型, , "0", 
.局部变量 行数, 整数型, , , 
.局部变量 取行的序号, 整数型, , , 
.局部变量 列数, 整数型, , , 


赋值 (排序时间, 取启动时间 ())
.如果真 (等于 (是否为空 (排序的范围列), 真))
    赋值 (排序的范围列, 高级表格.)
.如果真结束
.如果真 (大于 (排序的列, 排序的范围列))
    返回 (-1) ' 排序的列 ＞ 排序的范围列,设置出错，返回-1
.如果真结束
.如果真 (等于 (是否为空 (排序的范围行), 真))
    赋值 (排序的范围行, 高级表格.)
.如果真结束
.如果真 (小于或等于 (排序的范围行, 0))
    返回 (-1) ' 排序的范围行≤ 0,设置出错，返回-1
.如果真结束
.如果真 (等于 (是否为空 (排序类型), 真))
    赋值 (排序类型, 3)
.如果真结束
.如果真 (等于 (是否为空 (区分大小写), 真))
    赋值 (区分大小写, 真)
.如果真结束
.如果真 (等于 (是否为空 (排序方式), 真))
    赋值 (排序方式, 真)
.如果真结束
.计次循环首 (排序的范围行, 变量)
    赋值 (单元格内容, 高级表格.未知支持库函数_10 (相减 (变量, 1), 排序的列))
    赋值 (排序后位置, 二分查找 (单元格内容数组, 单元格内容, 排序类型, 区分大小写))
    插入成员 (单元格内容数组, 排序后位置, 单元格内容)
    插入成员 (排列序号数组, 排序后位置, 相减 (变量, 1))
.计次循环尾 ()
重定义数组 (单元格内容数组, 假, 排序的范围行, 排序的范围列)
.如果 (等于 (排序方式, 真))
    .计次循环首 (排序的范围行, 行数)
        赋值 (取行的序号, 排列序号数组 [行数])
        .计次循环首 (排序的范围列, 列数)
            赋值 (单元格内容数组 [行数] [列数], 高级表格.未知支持库函数_10 (取行的序号, 相减 (列数, 1)))
        .计次循环尾 ()
    .计次循环尾 ()
    
.否则
    .计次循环首 (排序的范围行, 行数)
        赋值 (取行的序号, 排列序号数组 [相加 (相减 (排序的范围行, 行数), 1)])
        .计次循环首 (排序的范围列, 列数)
            赋值 (单元格内容数组 [行数] [列数], 高级表格.未知支持库函数_10 (取行的序号, 相减 (列数, 1)))
        .计次循环尾 ()
    .计次循环尾 ()
.如果结束
.计次循环首 (排序的范围行, 行数)
    .计次循环首 (排序的范围列, 列数)
        高级表格.未知支持库函数_9 (相减 (行数, 1), 相减 (列数, 1), #, 单元格内容数组 [行数] [列数])
    .计次循环尾 ()
.计次循环尾 ()
返回 (相减 (取启动时间 (), 排序时间))

.子程序 二分查找, 整数型, , 返回查找排序后位置
.参数 排序的原始数组, 文本型, 数组, 
.参数 插入的内容, 文本型, , 
.参数 排序的类型, 整数型, , 
.参数 区分大小写, 逻辑型, , 

.局部变量 位置, 整数型, , , 
.局部变量 最大位置, 整数型, , , 
.局部变量 数值内容, 双精度小数型, , , 
.局部变量 折中位置, 整数型, , , 
.局部变量 折中位置数字数据, 双精度小数型, , , 
.局部变量 折中位置文本数据, 文本型, , , 

赋值 (位置, 1)
赋值 (最大位置, 取数组成员数 (排序的原始数组))
.如果真 (等于 (最大位置, 0))
    返回 (1)
.如果真结束
.如果 (等于 (排序的类型, 0))
    赋值 (数值内容, 到数值 (插入的内容))
    .判断开始 (小于 (数值内容, 到数值 (排序的原始数组 [1])))
        返回 (1)
    .判断 (大于或等于 (数值内容, 到数值 (排序的原始数组 [最大位置])))
        返回 (相加 (最大位置, 1))
    .默认
        .判断循环首 (小于 (位置, 相减 (最大位置, 1)))
            赋值 (折中位置, 整除 (相加 (位置, 最大位置), 2))
            赋值 (折中位置数字数据, 到数值 (排序的原始数组 [折中位置]))
            .判断开始 (等于 (数值内容, 折中位置数字数据))
                赋值 (位置, 折中位置)
                跳出循环 ()
            .判断 (大于 (数值内容, 折中位置数字数据))
                赋值 (位置, 折中位置)
            .默认
                赋值 (最大位置, 折中位置)
            .判断结束
            
        .判断循环尾 ()
    .判断结束
    
.否则
    .判断开始 (小于 (文本比较 (插入的内容, 排序的原始数组 [1], 区分大小写), 0)) ' 除了0的情况，其他情况都为文本比较的方式
        返回 (1)
    .判断 (大于或等于 (文本比较 (插入的内容, 排序的原始数组 [最大位置], 区分大小写), 0))
        返回 (相加 (最大位置, 1))
    .默认
        .判断循环首 (小于 (位置, 相减 (最大位置, 1)))
            赋值 (折中位置, 整除 (相加 (位置, 最大位置), 2))
            赋值 (折中位置文本数据, 排序的原始数组 [折中位置])
            .判断开始 (等于 (插入的内容, 折中位置文本数据))
                赋值 (位置, 折中位置)
                跳出循环 ()
            .判断 (大于 (文本比较 (插入的内容, 折中位置文本数据, 区分大小写), 0))
                赋值 (位置, 折中位置)
            .默认
                赋值 (最大位置, 折中位置)
            .判断结束
            
        .判断循环尾 ()
    .判断结束
    
.如果结束
返回 (相加 (位置, 1))



 ' 不属于任何一个程序集、类模块的函数：
