 ' 文件类型：Windows模块源码

 ' 程序名称：设置控件锚点_
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0



.常量 HWND_TOP, "0", , 
.常量 SWP_SHOWWINDOW, "64", , 
.常量 GWL_WNDPROC, "-4", , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 4 系统核心支持库




数据类型 窗口信息, , 
    .成员 父窗口句柄, 整数型, , , 
    .成员 窗口句柄, 整数型, , , 
    .成员 左, 整数型, , , 
    .成员 上, 整数型, , , 
    .成员 宽, 整数型, , , 
    .成员 高, 整数型, , , 
    .成员 右距, 整数型, , , 
    .成员 下距, 整数型, , , 
    .成员 锚左, 逻辑型, , , 
    .成员 锚右, 逻辑型, , , 
    .成员 锚上, 逻辑型, , , 
    .成员 锚下, 逻辑型, , , 
    .成员 锚中, 逻辑型, , , 

数据类型 矩形_, , RECT
    .成员 左边, 整数型, , , Left
    .成员 顶边, 整数型, , , Top
    .成员 右边, 整数型, , , Right
    .成员 底边, 整数型, , , Bottom


.DLL命令 取父窗口_, 整数型, "user32", "GetParent", , 判断指定窗口的父窗口  父窗口的句柄。如窗口没有父，或遇到错误，则返回零。会设置GetLastError
    .参数 窗口句柄, 整数型, , 欲测试的窗口的句柄;

.DLL命令 取窗口矩形_, 整数型, "user32", "GetWindowRect", , 
    .参数 窗口句柄, 整数型, , 
    .参数 矩形区域, 矩形_, , 

.DLL命令 取客户区矩形_, 整数型, "user32", "GetClientRect", , 
    .参数 窗口句柄, 整数型, , 
    .参数 矩形区域, 矩形_, , 

.DLL命令 CallWindowProc_, 整数型, "user32", "CallWindowProcA", , 将消息传答窗口函数　
    .参数 lpPrevWndFunc, 子程序指针, , 
    .参数 hwnd, 整数型, , 
    .参数 msg, 整数型, , 
    .参数 wParam, 整数型, , 
    .参数 lParam, 整数型, , 

.DLL命令 SetWindowLong_, 子程序指针, "user32", "SetWindowLongA", , 在窗口结构中为指定的窗口设置信息　指定数据的前一个值
    .参数 hwnd, 整数型, , 欲为其取得信息的窗口的句柄
    .参数 nIndex, 整数型, , 请参考GetWindowLong函数的nIndex参数的说明
    .参数 dwNewLong, 子程序指针, , 由nIndex指定的窗口信息的新值;

.DLL命令 改变窗口_, 整数型, "user32", "MoveWindow", , 改变指定窗口的位置和大小。顶级窗口可能受最大或最小尺寸的限制，那些尺寸优先于这里设置的参数　非零表示成功，零表示失败
    .参数 窗口句柄, 整数型, , 欲移动窗口的句柄
    .参数 左侧位置, 整数型, , 窗口新的左侧位置
    .参数 顶部位置, 整数型, , 窗口新的顶部位置
    .参数 新宽度, 整数型, , 窗口的新宽度
    .参数 高宽度, 整数型, , 窗口的高宽度
    .参数 是否重画, 整数型, , 如窗口此时应重画，则设为TRUE（非零）。FALSE（零）则表明应用程序会自己决定是否重画窗口;

.程序集 主程序集, , , 

.程序集变量 窗口信息组, 窗口信息, , "0", 
.程序集变量 句柄, 整数型, , , 
.程序集变量 左, 整数型, , , 
.程序集变量 宽, 整数型, , , 
.程序集变量 高, 整数型, , , 
.程序集变量 上, 整数型, , , 
.程序集变量 下距, 整数型, , , 
.程序集变量 右距, 整数型, , , 
.程序集变量 锚左, 逻辑型, , , 
.程序集变量 锚右, 逻辑型, , , 
.程序集变量 锚顶, 逻辑型, , , 
.程序集变量 锚下, 逻辑型, , , 
.程序集变量 锚中, 逻辑型, , , 
.程序集变量 旧窗口地址, 子程序指针, , , 
.子程序 设置控件锚点_, 空白型, 公开, 先设父窗口,后设子窗口;锚中是指横向居中,锚中为真时,应设锚顶或锚下为真或二者都为真
.参数 控件句柄, 整数型, , 
.参数 锚左边, 逻辑型, , 
.参数 锚顶边, 逻辑型, , 
.参数 锚右边, 逻辑型, , 
.参数 锚下边, 逻辑型, , 
.参数 锚中间, 逻辑型, 可空, 

赋值 (句柄, 控件句柄)
赋值 (锚左, 锚左边)
赋值 (锚右, 锚右边)
赋值 (锚顶, 锚顶边)
赋值 (锚下, 锚下边)
.如果真 (等于 (是否为空 (锚中间), 真))
    赋值 (锚中间, 假)
.如果真结束

赋值 (锚中, 锚中间)
原位置信息 ()
.如果真 (等于 (到数值 (旧窗口地址), 0))
    .如果真 (等于 (取父窗口_ (取父窗口_ (控件句柄)), 0))
        赋值 (旧窗口地址, SetWindowLong_ (取父窗口_ (控件句柄), -4, &新窗口过程))
        
    .如果真结束
    
.如果真结束



.子程序 新窗口过程, 整数型, , 
.参数 窗口句柄, 整数型, , 
.参数 消息号, 整数型, , 
.参数 消息参数1, 整数型, , 
.参数 消息参数2, 整数型, , 

.局部变量 x, 整数型, , , 
.局部变量 y, 整数型, , , 
.局部变量 w, 整数型, , , 
.局部变量 h, 整数型, , , 
.局部变量 客户区, 矩形_, , , 
.局部变量 i, 整数型, , , 

.如果真 (等于 (消息号, 5))
    .如果真 (等于 (消息参数1, 2))
        .计次循环首 (取数组成员数 (窗口信息组), i)
            取客户区矩形_ (窗口信息组 [i], , 客户区)
            .如果 (等于 (窗口信息组 [i], , 假))
                .如果 (等于 (窗口信息组 [i], , 真))
                    赋值 (x, 窗口信息组 [i], )
                .否则
                    赋值 (x, 相减 (客户区.右边, 窗口信息组 [i], , 窗口信息组 [i], ))
                .如果结束
                .如果 (等于 (窗口信息组 [i], , 真))
                    赋值 (y, 窗口信息组 [i], )
                .否则
                    赋值 (y, 相减 (客户区.底边, 窗口信息组 [i], , 窗口信息组 [i], ))
                .如果结束
                .如果 (等于 (窗口信息组 [i], , 真))
                    .如果 (等于 (窗口信息组 [i], , 真))
                        赋值 (w, 相减 (客户区.右边, 窗口信息组 [i], , 窗口信息组 [i], ))
                    .否则
                        赋值 (w, 窗口信息组 [i], )
                    .如果结束
                    
                .否则
                    赋值 (w, 窗口信息组 [i], )
                .如果结束
                .如果 (等于 (窗口信息组 [i], , 真))
                    .如果 (等于 (窗口信息组 [i], , 真))
                        赋值 (h, 相减 (客户区.底边, 窗口信息组 [i], , 窗口信息组 [i], ))
                    .否则
                        赋值 (h, 窗口信息组 [i], )
                    .如果结束
                    
                .否则
                    赋值 (h, 窗口信息组 [i], )
                .如果结束
                
                
                
                
                
            .否则
                赋值 (x, 相除 (相减 (客户区.右边, 窗口信息组 [i], ), 2))
                赋值 (w, 窗口信息组 [i], )
                赋值 (h, 窗口信息组 [i], )
                .判断开始 (并且 (等于 (窗口信息组 [i], , 真), 等于 (窗口信息组 [i], , 假)))
                    赋值 (y, 窗口信息组 [i], )
                .判断 (并且 (等于 (窗口信息组 [i], , 假), 等于 (窗口信息组 [i], , 真)))
                    赋值 (y, 相减 (客户区.底边, 窗口信息组 [i], , 窗口信息组 [i], ))
                .判断 (并且 (等于 (窗口信息组 [i], , 真), 等于 (窗口信息组 [i], , 真)))
                    赋值 (y, 相除 (相减 (客户区.底边, 窗口信息组 [i], ), 2))
                .默认
                    
                .判断结束
                
            .如果结束
            改变窗口_ (窗口信息组 [i], , x, y, w, h, 0)
        .计次循环尾 ()
    .如果真结束
    .如果真 (等于 (消息参数1, 0))
        .计次循环首 (取数组成员数 (窗口信息组), i)
            取客户区矩形_ (窗口信息组 [i], , 客户区)
            改变窗口_ (窗口信息组 [i], , 窗口信息组 [i], , 窗口信息组 [i], , 窗口信息组 [i], , 窗口信息组 [i], , 0)
        .计次循环尾 ()
    .如果真结束
    
.如果真结束
返回 (CallWindowProc_ (旧窗口地址, 窗口句柄, 消息号, 消息参数1, 消息参数2))


.子程序 原位置信息, 空白型, , 
.局部变量 原父位置, 矩形_, , , 
.局部变量 原位置, 矩形_, , , 
.局部变量 客户区, 矩形_, , , 
.局部变量 m, 整数型, , , 
.局部变量 n, 整数型, , , 
.局部变量 窗口信息, 窗口信息, , , 
.局部变量 父句柄, 整数型, , , 

赋值 (父句柄, 取父窗口_ (句柄))
取窗口矩形_ (父句柄, 原父位置)
取窗口矩形_ (句柄, 原位置)
取客户区矩形_ (父句柄, 客户区)
赋值 (宽, 相减 (原位置.右边, 原位置.左边))
赋值 (高, 相减 (原位置.底边, 原位置.顶边))
.如果 (等于 (取父窗口_ (父句柄), 0))
    赋值 (m, 相除 (相加 (相减 (原父位置.右边, 原父位置.左边, 客户区.右边), 客户区.左边), 2))
    赋值 (n, 相加 (相减 (原父位置.底边, 原父位置.顶边, m, 客户区.底边), 客户区.顶边))
    赋值 (左, 相减 (原位置.左边, 原父位置.左边, m))
    赋值 (上, 相减 (原位置.顶边, 原父位置.顶边, n))
    赋值 (右距, 相减 (原父位置.右边, 原位置.右边, m))
    赋值 (下距, 相减 (原父位置.底边, 原位置.底边, m))
    
.否则
    赋值 (左, 相减 (原位置.左边, 原父位置.左边))
    赋值 (上, 相减 (原位置.顶边, 原父位置.顶边))
    赋值 (右距, 相减 (原父位置.右边, 原位置.右边))
    赋值 (下距, 相减 (原父位置.底边, 原位置.底边))
.如果结束

赋值 (窗口信息.窗口句柄, 句柄)
赋值 (窗口信息.父窗口句柄, 父句柄)
赋值 (窗口信息.左, 左)
赋值 (窗口信息.上, 上)
赋值 (窗口信息.宽, 宽)
赋值 (窗口信息.高, 高)
赋值 (窗口信息.右距, 右距)
赋值 (窗口信息.下距, 下距)
赋值 (窗口信息.锚左, 锚左)
赋值 (窗口信息.锚右, 锚右)
赋值 (窗口信息.锚上, 锚顶)
赋值 (窗口信息.锚下, 锚下)
赋值 (窗口信息.锚中, 锚中)
加入成员 (窗口信息组, 窗口信息)

.子程序 _启动子程序, 整数型, , 请在本子程序中放置易模块初始化代码

_临时子程序 () ' 在初始化代码执行完毕后调用测试代码
返回 (0) ' 可以根据您的需要返回任意数值

.子程序 _临时子程序, 空白型, , 
 ' 本名称子程序用作测试程序用，仅在开发及调试环境中有效，编译发布程序前将被系统自动清空，请将所有用作测试的临时代码放在本子程序中。 ***注意不要修改本子程序的名称、参数及返回值类型。



 ' 不属于任何一个程序集、类模块的函数：
