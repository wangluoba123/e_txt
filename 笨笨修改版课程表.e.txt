 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：丁坤(DingKun)
 ' 邮政编码：
 ' 联系地址：dkdk8792@yahoo.com.cn
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：dkdk8792@yahoo.com.cn
 ' 主页地址：
 ' 版权声明：版权所有(C) 2003-2004  凝瑞软件  丁坤(DingKun)
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 546
    高度 = 360
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “编辑课程表v1.2丁坤(DingKun)做，笨笨精简代码版”
    帮助文件名 = “”





 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 3 7 系统核心支持库
 ' iext2 AF6AD80AA4244A59AFB3D83ECF5173CC 1 1 扩展界面支持库二





.DLL命令 置父窗口, 整数型, "", "SetParent", , 
    .参数 控件句柄, 整数型, , 
    .参数 新父句柄, 整数型, , 

.窗口程序集 窗口程序集1, , , 

.程序集变量 修改资料, 逻辑型, , , 
.程序集变量 x, 标签, , "5,7", 
.程序集变量 y, 外形框, , "5,7", 
.程序集变量 当前行, 整数型, , , 
.程序集变量 当前列, 整数型, , , 
.子程序 __启动窗口_创建完毕, 空白型, , 
.局部变量 xhs, 空白型, , , 
.局部变量 xx, 整数型, , , 1~5,横向的位置
.局部变量 yy, 整数型, , , 1~7，纵向的位置
.局部变量 标签, 标签, , , 临时变量
.局部变量 外形框, 外形框, , , 临时变量

赋值 (_启动窗口.高度, 相减 (相加 (_启动窗口.高度, 335), _启动窗口.取用户区高度 ()))
 ' 以下通过一个循环便将你70余行的代码全部包括进去了。
.变量循环首 (1, 5, 1, xx)
    .变量循环首 (1, 7, 1, yy)
        复制窗口组件 (外形框)
        复制窗口组件 (标签)
        置父窗口 (标签.取窗口句柄 (), 外形框.取窗口句柄 ()) ' 使新生的标签的父窗口属性在新外形框上
        赋值 (x [xx] [yy], 标签)
        赋值 (y [xx] [yy], 外形框)
        x.移动 ( [xx] [yy], 3, 3, 79, 18)
        y.移动 ( [xx] [yy], 相加 (33, 相乘 (xx, 84)), 相加 (41, 相乘 (23, yy)), 85, 24) ' 上午课程
        .如果真 (大于或等于 (yy, 5))
            赋值 (y [xx] [yy], 顶边, 相加 (y [xx] [yy], 顶边, 10)) ' 下午课程
            
        .如果真结束
        赋值 (标签.可视, 真)
        赋值 (外形框.可视, 真)
    .变量循环尾 ()
.变量循环尾 ()
 ' 添加结束，再把第一个添加进去
赋值 (x [1] [1], )
赋值 (y [1] [1], )
赋值 (当前行, 1)
赋值 (当前列, 1)
计次循环首 (10, xhs) 
组合框1.加入项目 (_启动窗口.成绩源.取文本 (1, xhs ＋ 2), ) 

如果 (课程源.从字节集读 (#课程表)) 
填充课程表 () 
信息框 (“  打开模板文件失败！  ”, #错误图标, “错误”) 
销毁 () 
如果 (课程源.从字节集读 (#课程表)) 
填充课程表 () 
信息框 (“  打开模板文件失败！  ”, #错误图标, “错误”) 
销毁 () 
信息框 (“目前没有班级数据，请先进行系统设置!”, 0, “提示”) 


.子程序 _课程组合框_列表项被选择, 空白型, , 
填充课程表 () 

.子程序 打印班级课程, 逻辑型, , 
.局部变量 i, 空白型, , , 
.局部变量 p, 空白型, , , 
.局部变量 x, 空白型, , , 
.局部变量 y, 空白型, , , 





返回 (真)

.子程序 _按钮1_被单击, 空白型, , 
销毁 ()

.子程序 _按钮3_被单击, 空白型, , 
.如果 (未知函数_67174625 ())
    表格3.打印 (, “打印课程表”) 
.否则
    
.如果结束


.子程序 _按钮4_被单击, 空白型, , 
.如果 (未知函数_67174625 ())
    表格3.打印预览 () 
.否则
    
.如果结束


.子程序 _标签11_被双击, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 i, 整数型, , , 
.局部变量 j, 整数型, , , 
.局部变量 被点击标签, 标签, , , 关键之处
.局部变量 已跳出, 逻辑型, , , 如果内层已经决定跳出，就令外层也跳出

赋值 (被点击标签, 取事件组件 ())
赋值 (已跳出, 假)
.如果 (等于 (.可视, 假))
    .变量循环首 (1, 5, 1, i)
        .变量循环首 (1, 7, 1, j)
            .如果真 (等于 (x [i] [j], 被点击标签))
                赋值 (当前行, i)
                赋值 (当前列, j)
                赋值 (已跳出, 真)
                跳出循环 ()
            .如果真结束
            
        .变量循环尾 ()
        .如果真 (已跳出)
            跳出循环 ()
        .如果真结束
        
    .变量循环尾 ()
    
    相加 ( [ [左边]], 2).移动 (相加 ( [ [顶边]], 2), , )
    赋值 (.内容,  [ [标题]])
    赋值 (.可视, 真)
    #顶层.调整层次 ()
    获取焦点 ()
.否则
    
.如果结束


.子程序 _组合框1_被双击, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 ( [ [标题]], .内容)
赋值 ( [ [背景颜色]], #银白)
赋值 ( [ [背景颜色]], #银白)
赋值 ( [ [线宽]], 2)
.如果真 (等于 (真))
    _启动窗口.外部数据库1.执行 (“update 级='” ＋ 课程组合框.内容 ＋ “'”, )
.如果真结束
赋值 (修改资料, 假)
赋值 (.可视, 假)
获取焦点 ()

.子程序 _组合框1_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果 (等于 (#回车键))
    赋值 ( [ [标题]], .内容)
    赋值 ( [ [背景颜色]], #银白)
    赋值 ( [ [背景颜色]], #银白)
    赋值 ( [ [线宽]], 2)
    .如果真 (等于 (真))
        _启动窗口.外部数据库1.执行 (“update 框.内容 ＋ “'”, )
    .如果真结束
    赋值 (修改资料, 假)
    赋值 (.可视, 假)
    获取焦点 ()
.否则
    
.如果结束


.子程序 _组合框1_列表项被选择, 空白型, , 
赋值 (真)

.子程序 _组合框1_编辑内容被改变, 空白型, , 
赋值 (真)

.子程序 _编辑框1_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

位置移动 (键代码)

.子程序 _课程组合框_列表被关闭, 空白型, , 
获取焦点 ()

.子程序 _按钮4_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

位置移动 (键代码)

.子程序 _按钮3_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

位置移动 (键代码)

.子程序 _按钮1_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

位置移动 (键代码)

.子程序 _标签11_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 i, 整数型, , , 
.局部变量 j, 整数型, , , 
.局部变量 被点击标签, 标签, , , 关键之处
.局部变量 已跳出, 逻辑型, , , 如果内层已经决定跳出，就令外层也跳出

.如果 (等于 (.可视, 假))
    赋值 ( [ [背景颜色]], #白色)
    赋值 ( [ [背景颜色]], #白色)
    赋值 ( [ [线宽]], 1)
    赋值 (被点击标签, 取事件组件 ())
    赋值 (已跳出, 假)
    .如果 (等于 (.可视, 假))
        .变量循环首 (1, 5, 1, i)
            .变量循环首 (1, 7, 1, j)
                .如果真 (等于 (x [i] [j], 被点击标签))
                    赋值 (当前行, i)
                    赋值 (当前列, j)
                    赋值 (已跳出, 真)
                    跳出循环 ()
                .如果真结束
                
            .变量循环尾 ()
            .如果真 (已跳出)
                跳出循环 ()
            .如果真结束
            
        .变量循环尾 ()
    .否则
        
    .如果结束
    
    赋值 ( [ [背景颜色]], #银白)
    赋值 ( [ [背景颜色]], #银白)
    赋值 ( [ [线宽]], 2)
    
.否则
    
.如果结束


.子程序 位置移动, 空白型, , 
.参数 键代码, 整数型, , 

.判断开始 (并且 (等于 (#上光标键), 不等于 (1)))
    赋值 ( [ [背景颜色]], #白色)
    赋值 ( [ [背景颜色]], #白色)
    赋值 ( [ [线宽]], 1)
    赋值 (相减 (1))
    赋值 ( [ [背景颜色]], #银白)
    赋值 ( [ [背景颜色]], #银白)
    赋值 ( [ [线宽]], 2)
.判断 (并且 (等于 (#下光标键), 不等于 (7)))
    赋值 ( [ [背景颜色]], #白色)
    赋值 ( [ [背景颜色]], #白色)
    赋值 ( [ [线宽]], 1)
    赋值 (相加 (1))
    赋值 ( [ [背景颜色]], #银白)
    赋值 ( [ [背景颜色]], #银白)
    赋值 ( [ [背景颜色]], #银白)
    赋值 ( [ [线宽]], 2)
.判断 (并且 (等于 (#左光标键), 不等于 (1)))
    赋值 ( [ [背景颜色]], #白色)
    赋值 ( [ [背景颜色]], #白色)
    赋值 ( [ [线宽]], 1)
    赋值 (相减 (1))
    赋值 ( [ [背景颜色]], #银白)
    赋值 ( [ [背景颜色]], #银白)
    赋值 ( [ [线宽]], 2)
.判断 (并且 (等于 (#右光标键), 不等于 (5)))
    赋值 ( [ [背景颜色]], #白色)
    赋值 ( [ [背景颜色]], #白色)
    赋值 ( [ [线宽]], 1)
    赋值 (相加 (1))
    赋值 ( [ [背景颜色]], #银白)
    赋值 ( [ [背景颜色]], #银白)
    赋值 ( [ [线宽]], 2)
.判断 (等于 (#回车键))
    .如果 (等于 (.可视, 假))
        相加 ( [ [左边]], 2).移动 (相加 ( [ [顶边]], 2), , )
        赋值 (.内容,  [ [标题]])
        赋值 (.可视, 真)
        #顶层.调整层次 ()
        获取焦点 ()
    .否则
        
    .如果结束
    
.默认
    
.判断结束




 ' 不属于任何一个程序集、类模块的函数：
