 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口
    左边 = 50
    顶边 = 50
    宽度 = 451
    高度 = 333
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “易语言加密技术 V1.3”
    帮助文件名 = “”

窗口 窗口_字符串搅乱器 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 581
    高度 = 445
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “字符串搅乱器”
    帮助文件名 = “”

窗口 窗口_EXE内窥器 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 431
    高度 = 398
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “EXE内窥器”
    帮助文件名 = “”

窗口 窗口_花代码生成器 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 431
    高度 = 341
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “花代码生成器(迷乱器)”
    帮助文件名 = “”

窗口 窗口_花变量生成器 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 435
    高度 = 352
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “花变量生成器(迷幻器)”
    帮助文件名 = “”

窗口 窗口_数据加解密 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 452
    高度 = 381
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “数据加解密”
    帮助文件名 = “”

窗口 窗口_文件加解密 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 454
    高度 = 359
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “文件加解密”
    帮助文件名 = “”



.常量 , , , 
.常量 工具盘, "1", , 
.常量 易语言, "2", , 
.常量 展开A, "3", , 
.常量 展开B, "4", , 
.常量 展开C, "5", , 
.常量 收缩A, "6", , 
.常量 收缩B, "7", , 
.常量 收缩C, "8", , 
.常量 , , , 
.常量 , , , 
.常量 , , , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 4 系统核心支持库
 ' dp1 4BB4003860154917BC7D8230BF4FA58A 1 0 数据操作支持库一
 ' eAPI F7FC1AE45C5C4758AF03EF19F18A395D 1 1 应用接口支持库
 ' EThread 5F99C1642A2F4e03850721B4F5D7C3F8 1 1 多线程支持库
 ' shell 52F260023059454187AF826A3C07AF2A 1 0 操作系统界面功能支持库
 ' iext2 AF6AD80AA4244A59AFB3D83ECF5173CC 1 1 扩展界面支持库二




.全局变量 硬件码, 文本型, , , 
.全局变量 用户名, 文本型, , , 
.全局变量 注册码, 文本型, , , 
.全局变量 匿名全局变量_435, 空白型, , , 
.全局变量 Key密码部1, 字节集, , , 
.全局变量 Key密码部3, 字节集, , , 
.全局变量 Key密码部4, 字节集, , , 
.全局变量 Key密码部5, 字节集, , , 
.全局变量 匿名全局变量_10, 空白型, , , 
.全局变量 密钥密码部1, 字节集, , , 
.全局变量 密钥密码部2, 字节集, , , 
.全局变量 密钥密码部4, 字节集, , , 
.全局变量 密钥密码部6, 字节集, , , 

.DLL命令 取路径文件名_, 文本型, "shlwapi.dll", "PathFindFileNameA", , 成功返回路径文本指针地址
    .参数 路径文本, 文本型, , pszPath

.DLL命令 GetImages, 整数型, "ImagesDat.Dat", "GetImages", , 1、BufferSize为0时返回需要Buffer的大小。2、BufferSize非0时返回加密主程序CRC32值的较对值
    .参数 图片索引, 整数型, , 
    .参数 图片数据缓冲区, 字节集, 传址, 
    .参数 缓冲区大小, 整数型, , 

.DLL命令 取短路径名, 整数型, "", "GetShortPathNameA", , 
    .参数 全路径文件名, 文本型, , 
    .参数 短文件名, 文本型, 传址, 
    .参数 缓冲区大小, 整数型, , 

.DLL命令 GetDesktopWindow, 整数型, "", "GetDesktopWindow", , 

.DLL命令 SendMessage, 整数型, "", "SendMessageA", , 
    .参数 hwnd, 整数型, , 
    .参数 wmsg, 整数型, , 
    .参数 wparam, 整数型, , 
    .参数 lparam, 整数型, , 

.程序集 程序集1, , , 

.子程序 _启动子程序, 整数型, , 请在本子程序中放置易模块初始化代码

_临时子程序 () ' 在初始化代码执行完毕后调用测试代码
返回 (0) ' 可以根据您的需要返回任意数值

.子程序 _临时子程序, 空白型, , 
.局部变量 硬件序列号, 文本型, , , 
.局部变量 注册码, 字节集, , , 
.局部变量 软件注册, 软件注册类2, , , 
.局部变量 用户名, 文本型, , , 

 ' 本名称子程序用作测试程序用，仅在开发及调试环境中有效，编译发布程序前将被系统自动清空，请将所有用作测试的临时代码放在本子程序中。 ***注意不要修改本子程序的名称、参数及返回值类型。
 ' 硬件序列号 ＝ 取硬件序列号 ()
 ' 注册码 ＝ 读入文件 (硬件序列号 ＋ “.key”)
 ' 软件注册.取用户名 (注册码, 用户名)
 ' 输出调试文本 (软件注册.软件注册A (注册码, 硬件序列号))
 ' 输出调试文本 (软件注册.软件注册B (注册码, 硬件序列号))
 ' 输出调试文本 (软件注册.软件注册C (注册码, 硬件序列号))
载入 (_启动窗口, , 真)


.类模块 软件注册类1, , , 

.程序集变量 Key密码部2, 字节集, , , 
.程序集变量 Key密码部6, 字节集, , , 
.程序集变量 Key密码部7, 字节集, , , 
.程序集变量 Key密码部8, 字节集, , , 
.程序集变量 匿名程序集变量_30, 空白型, , , 
.程序集变量 密钥密码部3, 字节集, , , 
.程序集变量 密钥密码部5, 字节集, , , 
.程序集变量 密钥密码部7, 字节集, , , 
.程序集变量 密钥密码部8, 字节集, , , 
.程序集变量 匿名程序集变量_35, 空白型, , , 
.程序集变量 匿名程序集变量_16, 空白型, , , 
.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用
 ' 因涉及个人加密及保护本软件的原因,本子程序内代码已被删除,只留个框架给大家学习一下吧.


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 十六到十转换, 整数型, , 
.参数 数值文本, 文本型, , 

.局部变量 B, 文本型, , , 
.局部变量 C, 整数型, , , 
.局部变量 位置1, 短整数型, , , 
.局部变量 位置2, 短整数型, , , 
.局部变量 次方数, 短整数型, , , 
.局部变量 数据, 双精度小数型, , , 
.局部变量 数据A, 文本型, , , 
.局部变量 i, 空白型, , , 

赋值 (数值文本, 到大写 (数值文本))
.计次循环首 (取文本长度 (数值文本), i)
    赋值 (B, 取文本中间 (数值文本, i, 1))
    .如果真 (取反 (或者 (等于 (取代码 (B, ), 46), 并且 (大于或等于 (取代码 (B, ), 48), 小于或等于 (取代码 (B, ), 57)), 并且 (大于或等于 (取代码 (B, ), 65), 小于或等于 (取代码 (B, ), 70)))))
        返回 (0)
    .如果真结束
    
.计次循环尾 ()
赋值 (B, “”)
赋值 (位置1, 1)
赋值 (次方数, 相减 (取文本长度 (数值文本), 1))
.判断循环首 (小于或等于 (位置1, 取文本长度 (数值文本)))
    赋值 (数据A, 取文本中间 (数值文本, 位置1, 1))
    .判断开始 (等于 (数据A, “A”))
        赋值 (数据, 10)
    .判断 (等于 (数据A, “B”))
        赋值 (数据, 11)
    .判断 (等于 (数据A, “C”))
        赋值 (数据, 12)
    .判断 (等于 (数据A, “D”))
        赋值 (数据, 13)
    .判断 (等于 (数据A, “E”))
        赋值 (数据, 14)
    .判断 (等于 (数据A, “F”))
        赋值 (数据, 15)
    .默认
        赋值 (数据, 到数值 (数据A))
    .判断结束
    赋值 (C, 相加 (C, 相乘 (数据, 求次方 (16, 次方数))))
    赋值 (次方数, 相减 (次方数, 1))
    赋值 (位置1, 相加 (位置1, 1))
.判断循环尾 ()
返回 (C)

.子程序 数据解码, 逻辑型, , 
.参数 原数据, 文本型, , 
.参数 子集A, 文本型, 可空, 
.参数 子集B, 文本型, 可空, 

.局部变量 i, 整数型, , , 
.局部变量 编码数据, 字节集, , , 
.局部变量 子集AA, 字节集, , , 
.局部变量 子集BB, 字节集, , , 
.局部变量 较验码, 文本型, , , 

 ' 因涉及个人加密及保护本软件的原因,本子程序内代码已被删除,只留个框架给大家学习一下吧.
返回 (真)

.子程序 取用户名, 逻辑型, 公开, 注册码格式较验成功返回真，否则返回假
.参数 注册码, 字节集, , 
.参数 用户名, 文本型, 参考, 

.局部变量 注册码内容, 文本型, , "0", 

赋值 (注册码内容, 分割文本 (取注册码 (注册码), #换行符, ))
 ' 因涉及个人加密及保护本软件的原因,本子程序内代码已被删除,只留个框架给大家学习一下吧.
返回 (真)


.子程序 软件注册A, 文本型, 公开, 检验RSA第一段注册码，成功返回用户名，失败返回空
.参数 注册码, 字节集, , 
.参数 硬件序列号, 文本型, , 

.局部变量 注册码内容, 文本型, , "0", 
.局部变量 用户名, 文本型, , , 
.局部变量 注册码1, 文本型, , , 
.局部变量 注册码2, 文本型, , , 
.局部变量 公共模数, 字节集, , , 
.局部变量 公钥, 文本型, , , 
.局部变量 签名集, 字节集, , , 

 ' 因涉及个人加密及保护本软件的原因,本子程序内代码已被删除,只留个框架给大家学习一下吧.
返回 (“”)


.子程序 软件注册B, 逻辑型, 公开, 检验RSA第二段注册码，成功返回真，失败返回假
.参数 注册码, 字节集, , 
.参数 硬件序列号, 文本型, , 

.局部变量 注册码内容, 文本型, , "0", 
.局部变量 注册码1, 文本型, , , 
.局部变量 注册码2, 文本型, , , 
.局部变量 公共模数, 字节集, , , 
.局部变量 公钥, 文本型, , , 
.局部变量 签名集, 字节集, , , 

 ' 因涉及个人加密及保护本软件的原因,本子程序内代码已被删除,只留个框架给大家学习一下吧.
返回 (真)


.子程序 软件注册C, 整数型, 公开, 检验RSA第三段注册码，成功返回零，非零表示失败
.参数 注册码, 字节集, , 
.参数 硬件序列号, 文本型, , 

.局部变量 注册码内容, 文本型, , "0", 
.局部变量 用户名, 文本型, , , 
.局部变量 注册码1, 文本型, , , 
.局部变量 注册码2, 文本型, , , 
.局部变量 公共模数, 字节集, , , 
.局部变量 公钥, 文本型, , , 
.局部变量 签名集, 字节集, , , 
.局部变量 运算值, 整数型, , , 

赋值 (注册码内容, 分割文本 (取注册码 (注册码), #换行符, ))
 ' 因涉及个人加密及保护本软件的原因,本子程序内代码已被删除,只留个框架给大家学习一下吧.
返回 (1)


.子程序 取注册码, 文本型, , 
.参数 注册码数据, 字节集, , 

 ' 因涉及个人加密及保护本软件的原因,本子程序内代码已被删除,只留个框架给大家学习一下吧.
返回 (“”)


.程序集 取硬盘特征字模块集, , , 

.程序集变量 硬盘特征字, 整数型, , , 
.程序集变量 重复取硬盘特征字次数, 整数型, , , 
.程序集变量 软件注册, 软件注册类1, , , 
.子程序 取序列号子程序, 空白型, , 在本程序内重复尝试去取硬盘特征字
.局部变量 系统信息1, 未知类型0x30006, , , 
.局部变量 系统信息2, 未知类型0x30003, , , 

Key密码赋初值 ()
.判断循环首 (大于 (重复取硬盘特征字次数, 0))
    赋值 (硬盘特征字, 取自己的硬盘特征字 ())
    .判断开始 (不等于 (硬盘特征字, 0))
         ' 已经成功
        返回 ()
    .默认
        延时 (300)
        赋值 (重复取硬盘特征字次数, 相减 (重复取硬盘特征字次数, 1))
        .如果真 (等于 (重复取硬盘特征字次数, 0)) ' 如果尝试次数已经已到，则表明失败。
            未知支持库函数_15 (系统信息1)
            未知支持库函数_17 (系统信息2)
            赋值 (硬盘特征字, 位异或 (文本转数值 (系统信息1.), 文本转数值 (系统信息2.), 76184359)) ' 由于失败也是一种特征状态，所以可以给一个固定的特征值，用于代表此状态。
            返回 ()
        .如果真结束
        
    .判断结束
    
.判断循环尾 ()

.子程序 取硬件序列号, 文本型, , 
.局部变量 计时, 空白型, , , 
.局部变量 系统信息1, 未知类型0x30006, , , 
.局部变量 系统信息2, 未知类型0x30003, , , 

赋值 (重复取硬盘特征字次数, 4) ' 给定重复尝试次数启动线程 (&取序列号子程序, )
未知支持库函数_0 (&取序列号子程序, )
赋值 (计时, 取启动时间 ())
.判断循环首 (等于 (硬盘特征字, 0))
    .如果真 (大于 (相减 (取启动时间 (), 计时), 1500)) ' 1.5秒之内必须取得硬件号，否则给予固定值
        未知支持库函数_15 (系统信息1)
        未知支持库函数_17 (系统信息2)
        赋值 (硬盘特征字, 位异或 (文本转数值 (系统信息1.), 文本转数值 (系统信息2.), 76184359)) ' 由于失败也是一种特征状态，所以可以给一个固定的特征值，用于代表此状态。
        跳出循环 ()
    .如果真结束
    处理事件 ()
.判断循环尾 ()
密钥密码赋初值 ()
返回 (取十六进制文本 (硬盘特征字))

.子程序 取自己的硬盘特征字, 整数型, , 
.局部变量 原始硬盘特征字, 空白型, , , 
.局部变量 自己的硬盘特征字, 空白型, , , 

赋值 (原始硬盘特征字, 取硬盘特征字 ())
.如果 (不等于 (原始硬盘特征字, 0)) ' 检查是否成功
    赋值 (自己的硬盘特征字, 位异或 (原始硬盘特征字, 76184359)) ' 根据原始的硬盘特征字计算出属于自己的硬盘特征字。此算法应该自行提供。
    返回 (自己的硬盘特征字)
.否则
    返回 (0) ' 失败返回0
.如果结束


.子程序 文本转数值, 整数型, , 
.参数 文本数据, 文本型, , 

.局部变量 i, 整数型, , , 
.局部变量 Temp1, 字节集, , , 
.局部变量 Temp2, 整数型, , , 

赋值 (Temp1, 到字节集 (文本数据))
.计次循环首 (相除 (取字节集长度 (Temp1), 8), i)
    赋值 (Temp2, 取字节集数据 (Temp1, #整数型, 相加 (相乘 (相减 (i, 1), 8), 1)))
    赋值 (Temp2, 位异或 (Temp2, 取字节集数据 (Temp1, #整数型, 相加 (相乘 (相减 (i, 1), 8), 5))))
.计次循环尾 ()
返回 (Temp2)


.子程序 Key密码赋初值, 空白型, , 以下在程序启动部分写入
赋值 (Key密码部1, { 180, 243 })
赋值 (Key密码部3, { 206, 226 })
赋值 (Key密码部4, { 204, 206 })
赋值 (Key密码部5, { 69, 76 })


.子程序 密钥密码赋初值, 空白型, , 以下在程序启动部分写入
赋值 (密钥密码部1, { 210, 215 })
赋值 (密钥密码部2, { 211, 239 })
赋值 (密钥密码部4, { 69, 76 })
赋值 (密钥密码部6, { 79, 50 })


.子程序 取图片, 字节集, , 额外增加部份，本不属取硬盘特征字模块集
.参数 图片索引, 整数型, , 

.局部变量 图片, 字节集, , , 
.局部变量 图片大小, 整数型, , , 

赋值 (图片, { 0 })
赋值 (图片大小, GetImages (图片索引, 图片, 图片大小))
赋值 (图片, 取空白字节集 (图片大小))
赋值 (图片大小, GetImages (图片索引, 图片, 图片大小))
 ' 图片大小的最后值是主程序的较验结果，为0则是正常，非0为异常
 ' 请在程序中作相应处理
信息框 (图片大小, 0, )
返回 (图片)


.子程序 CRC较验, 空白型, 公开, 额外增加部份，本不属取硬盘特征字模块集
.局部变量 A, 逻辑型, , , 

 ' .判断循环首 (等于 (A, 假))
     ' .如果真 (不等于 (0))
         ' 延时 (100)
         ' .如果真 (不等于 (0))
             ' 延时 (100)
             ' .如果真 (不等于 (0))
                 ' ' 如果连续三次CRC异常
                 ' 随机处理 ()
            .如果真结束
            
        .如果真结束
         ' 到循环尾 ()
    .如果真结束
     ' 延时 (300)
 ' .判断循环尾 ()


.子程序 检测_锁死电脑, 空白型, 公开, 额外增加部份，本不属取硬盘特征字模块集
.局部变量 A, 逻辑型, , , 

.判断循环首 (等于 (A, 假))
    .如果真 (并且 (不等于 (用户名, “”), 不等于 (注册码, {  })))
        .如果真 (大于 (取绝对值 (软件注册.软件注册C (注册码, 硬件码)), 0)) ' 检验双注册码，成功返回零，非零表示失败
            SendMessage (GetDesktopWindow (), 11, 0, 0)
        .如果真结束
        跳出循环 ()
    .如果真结束
    延时 (2000)
.判断循环尾 ()

.子程序 反跟踪, 空白型, 公开, 额外增加部份，本不属取硬盘特征字模块集
.局部变量 A, 逻辑型, , , 
.局部变量 B, 空白型, , , 

赋值 (B, 1000)
.判断循环首 (等于 (A, 假))
    置随机数种子 (B)
    赋值 (B, 取随机数 (500, 2000))
     ' 星光灭绝 ()
    延时 (B)
.判断循环尾 ()


.子程序 随机处理, 空白型, , 
.局部变量 处理方式, 整数型, , , 
.局部变量 任意2, 文本型, , , 
.局部变量 任意3, 文本型, , , 

赋值 (处理方式, 取随机数 (1, 8))
.判断开始 (等于 (处理方式, 1))
    结束 ()
.判断 (等于 (处理方式, 2))
    未知支持库函数_8 (1, 真)
.判断 (等于 (处理方式, 3))
    未知支持库函数_8 (2, 真)
.判断 (等于 (处理方式, 4))
    未知支持库函数_8 (3, 真)
.判断 (等于 (处理方式, 5))
    未知支持库函数_8 (4, 真)
.判断 (等于 (处理方式, 6))
    未知支持库函数_8 (5, 真)
.判断 (等于 (处理方式, 7))
    _启动窗口.销毁 ()
.默认
    SendMessage (GetDesktopWindow (), 11, 0, 0)
.判断结束


.类模块 软件注册类2, , , 

.程序集变量 Key密码部2, 字节集, , , 
.程序集变量 Key密码部6, 字节集, , , 
.程序集变量 Key密码部7, 字节集, , , 
.程序集变量 Key密码部8, 字节集, , , 
.程序集变量 匿名程序集变量_137, 空白型, , , 
.程序集变量 密钥密码部3, 字节集, , , 
.程序集变量 密钥密码部5, 字节集, , , 
.程序集变量 密钥密码部7, 字节集, , , 
.程序集变量 密钥密码部8, 字节集, , , 
.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用
 ' 因涉及个人加密及保护本软件的原因,本子程序内代码已被删除,只留个框架给大家学习一下吧.


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 十六到十转换, 整数型, , 
.参数 数值文本, 文本型, , 

.局部变量 B, 文本型, , , 
.局部变量 C, 整数型, , , 
.局部变量 位置1, 短整数型, , , 
.局部变量 位置2, 短整数型, , , 
.局部变量 次方数, 短整数型, , , 
.局部变量 数据, 双精度小数型, , , 
.局部变量 数据A, 文本型, , , 
.局部变量 i, 空白型, , , 

赋值 (数值文本, 到大写 (数值文本))
.计次循环首 (取文本长度 (数值文本), i)
    赋值 (B, 取文本中间 (数值文本, i, 1))
    .如果真 (取反 (或者 (等于 (取代码 (B, ), 46), 并且 (大于或等于 (取代码 (B, ), 48), 小于或等于 (取代码 (B, ), 57)), 并且 (大于或等于 (取代码 (B, ), 65), 小于或等于 (取代码 (B, ), 70)))))
        返回 (0)
    .如果真结束
    
.计次循环尾 ()
赋值 (B, “”)
赋值 (位置1, 1)
赋值 (次方数, 相减 (取文本长度 (数值文本), 1))
.判断循环首 (小于或等于 (位置1, 取文本长度 (数值文本)))
    赋值 (数据A, 取文本中间 (数值文本, 位置1, 1))
    .判断开始 (等于 (数据A, “A”))
        赋值 (数据, 10)
    .判断 (等于 (数据A, “B”))
        赋值 (数据, 11)
    .判断 (等于 (数据A, “C”))
        赋值 (数据, 12)
    .判断 (等于 (数据A, “D”))
        赋值 (数据, 13)
    .判断 (等于 (数据A, “E”))
        赋值 (数据, 14)
    .判断 (等于 (数据A, “F”))
        赋值 (数据, 15)
    .默认
        赋值 (数据, 到数值 (数据A))
    .判断结束
    赋值 (C, 相加 (C, 相乘 (数据, 求次方 (16, 次方数))))
    赋值 (次方数, 相减 (次方数, 1))
    赋值 (位置1, 相加 (位置1, 1))
.判断循环尾 ()
返回 (C)

.子程序 数据解码, 逻辑型, , 
.参数 原数据, 文本型, , 
.参数 子集A, 文本型, 可空, 
.参数 子集B, 文本型, 可空, 

.局部变量 i, 整数型, , , 
.局部变量 编码数据, 字节集, , , 
.局部变量 子集AA, 字节集, , , 
.局部变量 子集BB, 字节集, , , 
.局部变量 较验码, 文本型, , , 

返回 (真)

.子程序 取用户名, 逻辑型, 公开, 注册码格式较验成功返回真，否则返回假
.参数 注册码, 字节集, , 
.参数 用户名, 文本型, 参考, 

.局部变量 注册码内容, 文本型, , "0", 

赋值 (注册码内容, 分割文本 (取注册码 (注册码), #换行符, ))
返回 (真)


.子程序 软件注册A, 文本型, 公开, 检验第一注册码，成功返回用户名。失败返回1、空，2、其它字符
.参数 注册码, 字节集, , 
.参数 硬件序列号, 文本型, , 

.局部变量 注册码内容, 文本型, , "0", 
.局部变量 用户名, 文本型, , , 
.局部变量 注册码1, 文本型, , , 
.局部变量 注册码2, 文本型, , , 
.局部变量 公共模数, 字节集, , , 
.局部变量 公钥, 文本型, , , 
.局部变量 签名集, 字节集, , , 
.局部变量 正确返回集, 字节集, , , 
.局部变量 返回集, 字节集, , , 
.局部变量 i, 整数型, , , 
.局部变量 A, 整数型, , , 
.局部变量 I1, 整数型, , , 
.局部变量 B, 整数型, , , 
.局部变量 I2, 整数型, , , 

 ' 因涉及个人加密及保护本软件的原因,本子程序内代码已被删除,只留个框架给大家学习一下吧.
返回 (“”)

.子程序 软件注册B, 逻辑型, 公开, 检验第二注册码，成功返回真
.参数 注册码, 字节集, , 
.参数 硬件序列号, 文本型, , 

.局部变量 注册码内容, 文本型, , "0", 
.局部变量 注册码1, 文本型, , , 
.局部变量 注册码2, 文本型, , , 
.局部变量 公共模数, 字节集, , , 
.局部变量 公钥, 文本型, , , 
.局部变量 签名集, 字节集, , , 

 ' 因涉及个人加密及保护本软件的原因,本子程序内代码已被删除,只留个框架给大家学习一下吧.
返回 (真)

.子程序 软件注册C, 整数型, 公开, 检验双注册码，成功返回零，非零表示失败
.参数 注册码, 字节集, , 
.参数 硬件序列号, 文本型, , 

.局部变量 注册码内容, 文本型, , "0", 
.局部变量 用户名, 文本型, , , 
.局部变量 注册码1, 文本型, , , 
.局部变量 注册码2, 文本型, , , 
.局部变量 公共模数, 字节集, , , 
.局部变量 公钥, 文本型, , , 
.局部变量 签名集, 字节集, , , 
.局部变量 运算值, 整数型, , , 

 ' 因涉及个人加密及保护本软件的原因,本子程序内代码已被删除,只留个框架给大家学习一下吧.
返回 (1)


.子程序 取注册码, 文本型, , 
.参数 注册码数据, 字节集, , 

 ' 因涉及个人加密及保护本软件的原因,本子程序内代码已被删除,只留个框架给大家学习一下吧.
返回 (“”)


.类模块 软件注册类3, , , 导入注册文件，及读取用户信息

.程序集变量 软件注册, 软件注册类1, , , 
.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用
 ' 因涉及个人加密及保护本软件的原因,本子程序内代码已被删除,只留个框架给大家学习一下吧.


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 导入注册文件, 逻辑型, 公开, 
.参数 硬件号, 文本型, , 
.参数 注册文件, 文本型, , 被导入文件路径

.局部变量 文件名, 文本型, , , 
.局部变量 用户名, 文本型, , , 
.局部变量 当前路径, 文本型, , , 
.局部变量 文件路径, 文本型, , , 
.局部变量 用户信息, 文本型, , , 

赋值 (当前路径, 取运行目录 ())
.如果真 (不等于 (取文本右边 (当前路径, 1), “\”))
    赋值 (当前路径, 相加 (当前路径, “\”))
.如果真结束
赋值 (文件名, 取路径文件名_ (注册文件))
.如果真 (不等于 (到大写 (文件名), 相加 (到大写 (硬件号), “.KEY”)))
    信息框 (“注册文件不匹配！”, #错误图标, )
    返回 (假)
.如果真结束
.如果真 (等于 (软件注册.取用户名 (读入文件 (注册文件), 用户名), 假))
    信息框 (“注册文件错误！”, #错误图标, )
    返回 (假)
.如果真结束
复制文件 (注册文件, 相加 (当前路径, 文件名))


返回 (真)


.子程序 读取用户信息表, 空白型, 公开, 
运行 (相加 (“NOTEPAD.EXE ”, 读取用户信息表2 ()), 真, )


.子程序 读取用户信息表2, 文本型, 公开, 
.局部变量 当前路径, 文本型, , , 
.局部变量 文件路径, 文本型, , , 

赋值 (当前路径, 取运行目录 ())
.如果真 (不等于 (取文本右边 (当前路径, 1), “\”))
    赋值 (当前路径, 相加 (当前路径, “\”))
.如果真结束
赋值 (当前路径, 相加 (当前路径, “用户数据.txt”))
赋值 (文件路径, 取空白文本 (255))
取短路径名 (当前路径, 文件路径, 255)
.判断开始 (不等于 (删首尾空 (文件路径), “”))
    返回 (文件路径)
.默认
    返回 (当前路径)
.判断结束


.窗口程序集 窗口程序集__启动窗口, , , 

.程序集变量 软件注册, 软件注册类3, , , 
.程序集变量 硬件号, 文本型, , , 
.子程序 __启动窗口_创建完毕, 空白型, , 
.局部变量 加密, 文本型, , , 

置随机数种子 ()
赋值 (硬件号, 取硬件序列号 ())
赋值 (.内容, 到文本 (硬件号))

.子程序 _按钮2_被单击, 空白型, , 
.如果真 (打开 ())
    软件注册.导入注册文件 (硬件号, .文件名)
.如果真结束


.子程序 _按钮3_被单击, 空白型, , 
软件注册.读取用户信息表 ()

.子程序 _按钮1_被单击, 空白型, , 
载入 (窗口_字符串搅乱器, , 真)


.子程序 _按钮4_被单击, 空白型, , 
载入 (窗口_EXE内窥器, , 真)

.子程序 _按钮5_被单击, 空白型, , 
载入 (窗口_花变量生成器, , 真)


.子程序 _按钮6_被单击, 空白型, , 
载入 (窗口_花代码生成器, , 真)


.子程序 _按钮7_被单击, 空白型, , 
载入 (窗口_数据加解密, , 真)

.子程序 _按钮8_被单击, 空白型, , 
载入 (窗口_文件加解密, , 真)


.窗口程序集 窗口程序集_字符串搅乱器, , , 

.子程序 _按钮4_被单击, 空白型, , 
赋值 (.内容, 普通文本到字节集文本 (.内容))

.子程序 普通文本到字节集文本, 文本型, , 
.参数 普通文本, 文本型, , 

.局部变量 临时文本, 文本型, , , 
.局部变量 计次, 整数型, , , 

赋值 (临时文本, “”)
.计次循环首 (取文本长度 (普通文本), 计次)
    .如果 (大于 (取代码 (普通文本, 计次), 0))
        赋值 (临时文本, 相加 (临时文本, 到文本 (取代码 (普通文本, 计次))))
    .否则
        赋值 (临时文本, 相加 (临时文本, 到文本 (相加 (256, 取代码 (普通文本, 计次)))))
    .如果结束
    .如果真 (大于 (相减 (取文本长度 (普通文本), 计次), 0))
        赋值 (临时文本, 相加 (临时文本, “,”))
    .如果真结束
    
.计次循环尾 ()
返回 (相加 (“{ ”, 临时文本, “ }”))


.子程序 _按钮2_被单击, 空白型, , 
.局部变量 临时文本, 文本型, , , 

赋值 (临时文本, 还原字节集文本为普通文本 (.内容))
赋值 (.内容, 临时文本)
.如果 (等于 (.内容, .内容))
    赋值 (.标题, “验证正确:编辑框中内容相同!”)
.否则
    赋值 (.标题, “验证错误:编辑框中内容不同!”)
.如果结束


.子程序 还原字节集文本为普通文本, 文本型, , 
.参数 字节集文本, 文本型, , 

.局部变量 临时文本, 文本型, , , 
.局部变量 临时文本数组, 文本型, , "0", 
.局部变量 计次, 整数型, , , 

赋值 (临时文本, “”)
赋值 (临时文本, 子文本替换 (字节集文本, “{”, , , , 假))
赋值 (临时文本, 子文本替换 (临时文本, “}”, , , , 假))
赋值 (临时文本数组, 分割文本 (临时文本, “,”, ))
赋值 (临时文本, “”)
.计次循环首 (取数组成员数 (临时文本数组), 计次)
    赋值 (临时文本, 相加 (临时文本, 到文本 (字符 (到字节 (临时文本数组 [计次])))))
.计次循环尾 ()
返回 (临时文本)


.子程序 随机搅乱, 空白型, , 
.局部变量 随机数, 整数型, , , 
.局部变量 临时文本, 文本型, , , 
.局部变量 计次, 整数型, , , 

赋值 (临时文本, “”)
.计次循环首 (取文本长度 (.内容), 计次)
    
    .如果 (并且 (大于或等于 (取代码 (.内容, 计次), 48), 小于或等于 (取代码 (.内容, 计次), 57))) ' 在数字范围之内
        赋值 (随机数, 取随机数 (1, 4))
        .判断开始 (等于 (随机数, 1)) ' 加法处理
            赋值 (临时文本, 相加 (临时文本, 加法处理 (取文本中间 (.内容, 计次, 1))))
        .判断 (等于 (随机数, 2)) ' 减法处理
            赋值 (临时文本, 相加 (临时文本, 减法处理 (取文本中间 (.内容, 计次, 1))))
        .判断 (等于 (随机数, 3)) ' 乘法处理
            赋值 (临时文本, 相加 (临时文本, 乘法处理 (取文本中间 (.内容, 计次, 1))))
        .判断 (等于 (随机数, 4)) ' 除法处理
            赋值 (临时文本, 相加 (临时文本, 除法处理 (取文本中间 (.内容, 计次, 1))))
        .判断 (等于 (随机数, 5)) ' 取余数,整除,取整,四舍五入,处理
            
        .判断 (等于 (随机数, 6)) ' 位运算
            
        .判断 (等于 (随机数, 7)) ' 求平方根处理
            
        .判断 (等于 (随机数, 8)) ' 求次方处理
            
        .默认
            
        .判断结束
        
        
    .否则
        
        赋值 (随机数, 取随机数 (1, 9))
        .判断开始 (等于 (随机数, 2))
            .如果 (大于 (取代码 (.内容, 计次), 0)) ' 如果是汉字,会产生乱码哦,最好就字母按原样可以排.
                赋值 (临时文本, 相加 (临时文本, #左引号, 取文本中间 (.内容, 计次, 1), #右引号)) ' 按原来的字母排
            .否则
                赋值 (临时文本, 相加 (临时文本, “字符(”, 到文本 (相加 (256, 取代码 (.内容, 计次))), “)”))
            .如果结束
            
        .默认
            .如果 (大于 (取代码 (.内容, 计次), 0))
                赋值 (临时文本, 相加 (临时文本, “字符(”, 到文本 (取代码 (.内容, 计次)), “)”))
            .否则
                赋值 (临时文本, 相加 (临时文本, “字符(”, 到文本 (相加 (256, 取代码 (.内容, 计次))), “)”))
            .如果结束
            
        .判断结束
        
    .如果结束
    
    .如果真 (大于 (相减 (取文本长度 (.内容), 计次), 0))
        赋值 (临时文本, 相加 (临时文本, “+”))
    .如果真结束
    
.计次循环尾 ()
赋值 (.内容, 临时文本)


.子程序 _按钮3_被单击, 空白型, , 
.局部变量 字符串, 文本型, , , 

赋值 (字符串, 相加 (到文本 ({ 214 }), 字符 (位异或 (213, 5)), 到文本 ({ 185 }), 字符 (位异或 (255, 5)), 到文本 ({ 200 }), 字符 (位异或 (206, 5)), 到文本 ({ 195 }), 字符 (位异或 (244, 5)), 到文本 ({ 189 }), 字符 (位异或 (231, 5)), 到文本 ({ 183 }), 字符 (位异或 (192, 5)), 到文本 ({ 190 }), 字符 (位异或 (249, 5))))
信息框 (字符串, 0, )
.如果 (等于 (.内容, 字符串))
    信息框 (“正确:与上边的编辑框内容相同!!”, 0, )
.否则
    信息框 (“错误:与上边的编辑框内容不同!!”, 0, )
.如果结束


.子程序 加法处理, 文本型, , 
.参数 原数据文本, 文本型, , 

.局部变量 结果数据文本, 文本型, , , 
.局部变量 临时随机数, 整数型, , , 

赋值 (临时随机数, 取随机数 (0, 到数值 (原数据文本)))
赋值 (结果数据文本, 相加 (“到文本(”, 到文本 (相减 (到数值 (原数据文本), 到数值 (临时随机数))), “+”, 到文本 (到数值 (临时随机数)), “)”))
返回 (结果数据文本)


.子程序 减法处理, 文本型, , 
.参数 原数据文本, 文本型, , 

.局部变量 结果数据文本, 文本型, , , 
.局部变量 临时随机数, 整数型, , , 

赋值 (临时随机数, 取随机数 (0, 到数值 (原数据文本)))
赋值 (结果数据文本, 相加 (“到文本(”, 到文本 (相加 (到数值 (原数据文本), 到数值 (临时随机数))), “-”, 到文本 (到数值 (临时随机数)), “)”))
返回 (结果数据文本)


.子程序 乘法处理, 文本型, , 
.参数 原数据文本, 文本型, , 

.局部变量 结果数据文本, 文本型, , , 

.判断开始 (等于 (求余数 (到数值 (原数据文本), 2), 0))
    赋值 (结果数据文本, 相加 (“到文本(”, 到文本 (相除 (到数值 (原数据文本), 2)), “*2)”))
.判断 (等于 (求余数 (到数值 (原数据文本), 3), 0))
    赋值 (结果数据文本, 相加 (“到文本(”, 到文本 (相除 (到数值 (原数据文本), 3)), “*3)”))
.判断 (等于 (求余数 (到数值 (原数据文本), 5), 0))
    赋值 (结果数据文本, 相加 (“到文本(”, 到文本 (相除 (到数值 (原数据文本), 5)), “*5)”))
.判断 (等于 (求余数 (到数值 (原数据文本), 7), 0))
    赋值 (结果数据文本, 相加 (“到文本(”, 到文本 (相除 (到数值 (原数据文本), 7)), “*7)”))
.默认
    赋值 (结果数据文本, 相加 (“到文本(”, 原数据文本, “*1)”))
.判断结束
返回 (结果数据文本)


.子程序 除法处理, 文本型, , 
.参数 原数据文本, 文本型, , 

.局部变量 结果数据文本, 文本型, , , 
.局部变量 临时随机数, 整数型, , , 

.如果真 (等于 (原数据文本, “0”))
    返回 (“到文本(0)”)
.如果真结束
赋值 (临时随机数, 取随机数 (1, 9))
.判断开始 (等于 (临时随机数, 1))
    赋值 (结果数据文本, 相加 (“到文本(”, 到文本 (相乘 (到数值 (原数据文本), 1)), “/1)”))
.判断 (等于 (临时随机数, 2))
    赋值 (结果数据文本, 相加 (“到文本(”, 到文本 (相乘 (到数值 (原数据文本), 2)), “/2)”))
.判断 (等于 (临时随机数, 3))
    赋值 (结果数据文本, 相加 (“到文本(”, 到文本 (相乘 (到数值 (原数据文本), 3)), “/3)”))
.判断 (等于 (临时随机数, 4))
    赋值 (结果数据文本, 相加 (“到文本(”, 到文本 (相乘 (到数值 (原数据文本), 4)), “/4)”))
.判断 (等于 (临时随机数, 5))
    赋值 (结果数据文本, 相加 (“到文本(”, 到文本 (相乘 (到数值 (原数据文本), 5)), “/5)”))
.判断 (等于 (临时随机数, 6))
    赋值 (结果数据文本, 相加 (“到文本(”, 到文本 (相乘 (到数值 (原数据文本), 6)), “/6)”))
.判断 (等于 (临时随机数, 7))
    赋值 (结果数据文本, 相加 (“到文本(”, 到文本 (相乘 (到数值 (原数据文本), 7)), “/7)”))
.判断 (等于 (临时随机数, 8))
    赋值 (结果数据文本, 相加 (“到文本(”, 到文本 (相乘 (到数值 (原数据文本), 8)), “/8)”))
.判断 (等于 (临时随机数, 9))
    赋值 (结果数据文本, 相加 (“到文本(”, 到文本 (相乘 (到数值 (原数据文本), 9)), “/9)”))
.默认
    
.判断结束
返回 (结果数据文本)


.子程序 交叉搅乱, 空白型, , 
.局部变量 临时文本, 文本型, , , 
.局部变量 计次, 整数型, , , 

赋值 (临时文本, “”)
.计次循环首 (取文本长度 (.内容), 计次)
    .如果真 (并且 (等于 (.选中, 真), 等于 (.选中, 真)))
        .如果 (等于 (求余数 (计次, 2), 0))
            .如果 (大于 (取代码 (.内容, 计次), 0))
                .如果 (并且 (等于 (.选中, 真), 大于或等于 (取文本长度 (.内容), 1)))
                    赋值 (临时文本, 相加 (临时文本, “字符(位异或(”, 到文本 (位异或 (取代码 (.内容, 计次), 到数值 (.内容))), “,”, .内容, “))”))
                .否则
                    赋值 (临时文本, 相加 (临时文本, “字符(”, 到文本 (取代码 (.内容, 计次)), “)”))
                .如果结束
                
            .否则
                .如果 (并且 (等于 (.选中, 真), 大于或等于 (取文本长度 (.内容), 1)))
                    赋值 (临时文本, 相加 (临时文本, “字符(位异或(”, 到文本 (位异或 (相加 (256, 取代码 (.内容, 计次)), 到数值 (.内容))), “,”, .内容, “))”))
                .否则
                    赋值 (临时文本, 相加 (临时文本, “字符(”, 到文本 (相加 (256, 取代码 (.内容, 计次))), “)”))
                .如果结束
                
            .如果结束
            
        .否则
            .如果 (大于 (取代码 (.内容, 计次), 0)) ' 到文本 (位异或 (到整数 (取代码 (到文本 ({ 67 }), 5))
                赋值 (临时文本, 相加 (临时文本, “到文本({”, 到文本 (取代码 (.内容, 计次)), “})”))
            .否则
                赋值 (临时文本, 相加 (临时文本, “到文本({”, 到文本 (相加 (256, 取代码 (.内容, 计次))), “})”))
            .如果结束
            
        .如果结束
        
    .如果真结束
    
    .如果真 (并且 (等于 (.选中, 真), 等于 (.选中, 假)))
        .如果 (大于 (取代码 (.内容, 计次), 0))
            .如果 (并且 (等于 (.选中, 真), 大于或等于 (取文本长度 (.内容), 1)))
                .如果 (并且 (等于 (.选中, 真), 大于或等于 (取文本长度 (.内容), 1)))
                    赋值 (临时文本, 相加 (临时文本, “字符(位异或(”, 到文本 (位异或 (取代码 (.内容, 计次), 到数值 (.内容))), “,”, .内容, “))”))
                .否则
                    赋值 (临时文本, 相加 (临时文本, “字符(”, 到文本 (取代码 (.内容, 计次)), “)”))
                .如果结束
                
            .否则
                .如果 (并且 (等于 (.选中, 真), 大于或等于 (取文本长度 (.内容), 1)))
                    赋值 (临时文本, 相加 (临时文本, “字符(位异或(”, 到文本 (位异或 (相加 (256, 取代码 (.内容, 计次)), 到数值 (.内容))), “,”, .内容, “))”))
                .否则
                    赋值 (临时文本, 相加 (临时文本, “字符(”, 到文本 (相加 (256, 取代码 (.内容, 计次))), “)”))
                .如果结束
                
            .如果结束
            
        .否则
            赋值 (临时文本, 相加 (临时文本, “字符(”, 到文本 (相加 (256, 取代码 (.内容, 计次))), “)”))
        .如果结束
        
    .如果真结束
    
    .如果真 (并且 (等于 (.选中, 假), 等于 (.选中, 真)))
        .如果 (大于 (取代码 (.内容, 计次), 0))
            赋值 (临时文本, 相加 (临时文本, “到文本({”, 到文本 (取代码 (.内容, 计次)), “})”))
        .否则
            赋值 (临时文本, 相加 (临时文本, “到文本({”, 到文本 (相加 (256, 取代码 (.内容, 计次))), “})”))
        .如果结束
        
    .如果真结束
    
    .如果真 (大于 (相减 (取文本长度 (.内容), 计次), 0))
        赋值 (临时文本, 相加 (临时文本, “+”))
    .如果真结束
    
.计次循环尾 ()
赋值 (.内容, 临时文本)


.子程序 _按钮6_被单击, 空白型, , 
信息框 (位异或 (14, 6), 0, )


.子程序 _按钮1_被单击, 空白型, , 

.判断开始 (等于 (.选中, 真))
    随机搅乱 () ' 正确
.判断 (等于 (.选中, 真))
    交叉搅乱 () ' 正确
.判断 (等于 (.选中, 真))
    
.判断 (等于 (.选中, 真))
    
.默认
    
.判断结束


.子程序 _单选框1_全部选中_被单击, 空白型, , 
连续赋值 (假, .选中, .选中, .选中, .选中, .选中, .选中, .选中, .选中, .选中, .选中, .选中)
连续赋值 (真, .选中, .选中, .选中, .选中, .选中, .选中, .选中, .选中, .选中)

.子程序 _单选框2_字符相加_被单击, 空白型, , 
连续赋值 (假, .选中, .选中, .选中, .选中, .选中, .选中, .选中, .选中, .选中, .选中, .选中)
连续赋值 (真, .选中, .选中, .选中)

.子程序 _单选框3_科学计算_被单击, 空白型, , 
连续赋值 (假, .选中, .选中, .选中, .选中, .选中, .选中, .选中, .选中, .选中, .选中, .选中)
连续赋值 (真, .选中, .选中, .选中)

.子程序 字符相加, 空白型, , 
.局部变量 临时文本, 文本型, , , 
.局部变量 计次, 整数型, , , 

赋值 (临时文本, “”)
.计次循环首 (取文本长度 (.内容), 计次)
    .如果 (大于 (取代码 (.内容, 计次), 0))
        赋值 (临时文本, 相加 (临时文本, “字符(”, 到文本 (取代码 (.内容, 计次)), “)”))
    .否则
        赋值 (临时文本, 相加 (临时文本, “字符(”, 到文本 (相加 (256, 取代码 (.内容, 计次))), “)”))
    .如果结束
    
    .如果真 (大于 (相减 (取文本长度 (.内容), 计次), 0))
        赋值 (临时文本, 相加 (临时文本, “+”))
    .如果真结束
    
.计次循环尾 ()
赋值 (.内容, 临时文本)


.子程序 字节集相加, 空白型, , 
.局部变量 临时文本, 文本型, , , 
.局部变量 计次, 整数型, , , 

赋值 (临时文本, “”)
.计次循环首 (取文本长度 (.内容), 计次)
    .如果 (大于 (取代码 (.内容, 计次), 0))
        赋值 (临时文本, 相加 (临时文本, “到文本({”, 到文本 (取代码 (.内容, 计次)), “})”))
    .否则
        赋值 (临时文本, 相加 (临时文本, “到文本({”, 到文本 (相加 (256, 取代码 (.内容, 计次))), “})”))
    .如果结束
    
    .如果真 (大于 (相减 (取文本长度 (.内容), 计次), 0))
        赋值 (临时文本, 相加 (临时文本, “+”))
    .如果真结束
    
.计次循环尾 ()
赋值 (.内容, 临时文本)


.窗口程序集 窗口程序集_花变量生成器, , , 花变量生成器(迷幻器)

.子程序 _按钮1_被单击, 空白型, , 
.局部变量 计次, 整数型, , , 
.局部变量 随机数, 整数型, , , 
.局部变量 临时文本, 文本型, , , 
.局部变量 变量形式, 整数型, , , 1表示整数型,2表示文本型,3表示逻辑型

赋值 (.内容, “.版本2”)
.如果 (等于 (.选中, 真))
    .计次循环首 (到数值 (.内容), 计次)
        赋值 (.内容, 相加 (.内容, #换行符, “.常量 ”, 取随机常量名 (), 到文本 (计次), “, ”, 取随机常量内容 (), “, , ”, .内容))
         ' 随机常量名,随机编号,随机常量内容
    .计次循环尾 ()
.否则
    .计次循环首 (到数值 (.内容), 计次)
        赋值 (临时文本, 取随机常量名 ())
        赋值 (变量形式, 取随机数 (1, 3))
        赋值 (.内容, 相加 (.内容, #换行符, “.局部变量 ”, 临时文本, 到文本 (计次), “,”, 多项选择 (变量形式, “整数型”, “文本型”, “逻辑型”), “, , ”, 取随机是否数组 (), “, ”, .内容))
         ' 随机常量名,随机编号,随机常量内容.局部变量 计次, 整数型, , "0", 备注
        .如果真 (.选中)
            .判断开始 (等于 (变量形式, 1)) ' 1表示整数型
                赋值 (.内容, 相加 (.内容, #换行符, 临时文本, 到文本 (计次), “=”, 到文本 (取随机数 (100000, 80000000))))
            .判断 (等于 (变量形式, 2)) ' 2表示文本型
                赋值 (.内容, 相加 (.内容, #换行符, 临时文本, 到文本 (计次), “=”, #引号, 到文本 (取随机数 (100000, 80000000)), #引号))
            .判断 (等于 (变量形式, 3)) ' 3表示逻辑型
                赋值 (.内容, 相加 (.内容, #换行符, 临时文本, 到文本 (计次), “=”, 多项选择 (取随机数 (1, 2), “真”, “假”)))
            .默认
                
            .判断结束
            
        .如果真结束
        
    .计次循环尾 ()
.如果结束


.子程序 取随机常量名, 文本型, , 
.局部变量 随机数, 整数型, , , 

赋值 (随机数, 取随机数 (1, 11))

.判断开始 (等于 (随机数, 1))
    返回 (“硬件码”)
.判断 (等于 (随机数, 2))
    返回 (“硬件号”)
.判断 (等于 (随机数, 3))
    返回 (“注册码”)
.判断 (等于 (随机数, 4))
    返回 (“注册号”)
.判断 (等于 (随机数, 5))
    返回 (“用户名”)
.判断 (等于 (随机数, 6))
    返回 (“KEY”)
.判断 (等于 (随机数, 7))
    返回 (“license”)
.判断 (等于 (随机数, 8))
    返回 (“RSA”)
.判断 (等于 (随机数, 9))
    返回 (“公钥”)
.判断 (等于 (随机数, 10))
    返回 (“私钥”)
.判断 (等于 (随机数, 11))
    返回 (“公共模数”)
.判断 (等于 (随机数, 12))
    返回 (“验证码”)
.默认
    返回 (“混合码”)
.判断结束


.子程序 取随机常量内容, 文本型, , 
.局部变量 随机数, 整数型, , , 

赋值 (随机数, 取随机数 (1, 16))

.判断开始 (等于 (随机数, 1))
    返回 (相加 (#引号, #引号, “硬件码”, #引号, #引号))
.判断 (等于 (随机数, 2))
    返回 (相加 (#引号, #引号, “硬件号”, #引号, #引号))
.判断 (等于 (随机数, 3))
    返回 (相加 (#引号, #引号, “注册码”, #引号, #引号))
.判断 (等于 (随机数, 4))
    返回 (相加 (#引号, #引号, “注册号”, #引号, #引号))
.判断 (等于 (随机数, 5))
    返回 (相加 (#引号, #引号, “用户名”, #引号, #引号))
.判断 (等于 (随机数, 6))
    返回 (相加 (#引号, #引号, “KEY”, #引号, #引号))
.判断 (等于 (随机数, 7))
    返回 (相加 (#引号, #引号, “license”, #引号, #引号))
.判断 (等于 (随机数, 8))
    返回 (相加 (#引号, #引号, “RSA”, #引号, #引号))
.判断 (等于 (随机数, 9))
    返回 (相加 (#引号, #引号, “公钥”, #引号, #引号))
.判断 (等于 (随机数, 10))
    返回 (相加 (#引号, #引号, “私钥”, #引号, #引号))
.判断 (等于 (随机数, 11))
    返回 (相加 (#引号, #引号, “公共模数”, #引号, #引号))
.判断 (等于 (随机数, 12))
    返回 (相加 (#引号, #引号, “验证码”, #引号, #引号))
.判断 (等于 (随机数, 13)) ' 取随机长度的随机十进制数文本
    返回 (相加 (#引号, #引号, 取随机长度的随机十进制数文本 (), #引号, #引号))
.判断 (等于 (随机数, 14)) ' 取随机长度的随机十六进制数文本
    返回 (相加 (#引号, #引号, 取随机长度的随机十六进制数文本 (), #引号, #引号))
.判断 (等于 (随机数, 15)) ' 取随机的英文串
    返回 (相加 (#引号, 取随机的英文串 (), #引号))
.判断 (等于 (随机数, 16)) ' 随机的中文串
    返回 (相加 (#引号, 到文本 (取随机数 (100000, 800000)), #引号))
.默认
    返回 (相加 (#引号, #引号, “混合码”, #引号, #引号))
.判断结束


.子程序 取随机是否数组, 文本型, , 
.局部变量 随机数, 整数型, , , 

赋值 (随机数, 取随机数 (1, 6))

.如果 (等于 (随机数, 2))
    返回 (“0”)
.否则
    返回 (“”)
.如果结束


.子程序 取随机长度的随机十进制数文本, 文本型, , 
.局部变量 随机数1, 整数型, , , 长度
.局部变量 数文本, 文本型, , , 

赋值 (随机数1, 取随机数 (10, 1024))
.计次循环首 (随机数1, )
    赋值 (数文本, 相加 (数文本, 到文本 (取随机数 (0, 9))))
.计次循环尾 ()
返回 (数文本)


.子程序 取随机长度的随机十六进制数文本, 文本型, , 
.局部变量 随机数1, 整数型, , , 长度
.局部变量 数文本, 文本型, , , 

赋值 (随机数1, 取随机数 (10, 1024))
.计次循环首 (随机数1, )
    赋值 (数文本, 相加 (数文本, 多项选择 (取随机数 (1, 16), “1”, “2”, “3”, “4”, “5”, “6”, “7”, “8”, “9”, “A”, “B”, “C”, “D”, “E”, “F”, “0”)))
.计次循环尾 ()
返回 (数文本)



.子程序 取随机的英文串, 文本型, , 
.局部变量 随机数1, 整数型, , , 长度
.局部变量 英文串, 文本型, , , 

赋值 (随机数1, 取随机数 (10, 1024))
.计次循环首 (随机数1, )
    赋值 (英文串, 相加 (英文串, 多项选择 (取随机数 (1, 36), “1”, “2”, “3”, “4”, “5”, “6”, “7”, “8”, “9”, “0”, “A”, “B”, “C”, “D”, “E”, “F”, “G”, “H”, “I”, “J”, “K”, “L”, “M”, “N”, “O”, “P”, “Q”, “R”, “S”, “T”, “U”, “V”, “W”, “X”, “Y”, “Z”)))
.计次循环尾 ()
返回 (英文串)


.窗口程序集 窗口程序集_EXE内窥器, , , 

.程序集变量 匿名程序集变量_2983, 空白型, , , 
.子程序 _窗口_EXE内窥器_创建完毕, 空白型, , 


.子程序 _按钮1_被单击, 空白型, , 
.局部变量 计次, 整数型, , , 

赋值 (.内容, “”)
赋值 (.内容, 子文本替换 (.内容, #换行符, , , , 假))
.如果 (等于 (.选中, 真))
    .计次循环首 (整除 (取文本长度 (.内容), 到数值 (.内容)), 计次)
        .如果真 (等于 (取文本长度 (取文本中间 (.内容, 相加 (相减 (相乘 (到数值 (.内容), 计次), 到数值 (.内容)), 1), 到数值 (.内容))), 到数值 (.内容)))
            赋值 (.内容, 相加 (.内容, 取文本中间 (.内容, 相加 (相减 (相乘 (到数值 (.内容), 计次), 到数值 (.内容)), 1), 到数值 (.内容)), #换行符))
        .如果真结束
        
    .计次循环尾 ()
    
.否则
    
    .计次循环首 (相减 (取文本长度 (.内容), 到数值 (.内容)), 计次)
        .如果真 (等于 (取文本长度 (取文本中间 (.内容, 计次, 到数值 (.内容))), 到数值 (.内容)))
            赋值 (.内容, 相加 (.内容, 取文本中间 (.内容, 计次, 到数值 (.内容)), #换行符))
        .如果真结束
        
    .计次循环尾 ()
.如果结束


.子程序 _按钮2_被单击, 空白型, , 
.如果真 (等于 (打开 (), 真))
    赋值 (.内容, .文件名)
.如果真结束


.子程序 _按钮3_被单击, 空白型, , 
.局部变量 文件字节集, 字节集, , , 
.局部变量 查找到的位置, 整数型, , , 
.局部变量 要查的内容数组, 文本型, , "0", 
.局部变量 要查的内容, 文本型, , , 
.局部变量 计次, 整数型, , , 

连续赋值 (“”, .内容, .内容)
.如果真 (等于 (文件是否存在 (.内容), 假))
    信息框 (“文件未找到!”, 0, )
    返回 ()
.如果真结束
赋值 (文件字节集, 读入文件 (.内容))
赋值 (要查的内容数组, 分割文本 (.内容, #换行符, ))
.计次循环首 (取数组成员数 (要查的内容数组), 计次)
    赋值 (要查的内容, 要查的内容数组 [计次])
    赋值 (查找到的位置, 寻找字节集 (文件字节集, 到字节集 (要查的内容), ))
    .如果 (不等于 (查找到的位置, -1))
        赋值 (.内容, 相加 (.内容, #换行符, “找到了,内容=”, #左引号, 要查的内容数组 [计次], #右引号, “ 位置=”, #左引号, 到文本 (查找到的位置), #右引号))
    .否则
        赋值 (.内容, 相加 (.内容, #换行符, “没有找到!内容=”, #左引号, 要查的内容数组 [计次], #右引号))
    .如果结束
    
.计次循环尾 ()
信息框 (“查找结束!”, 0, )

.窗口程序集 窗口程序集_数据加解密, , , 

.程序集变量 字节集数据, 字节集, , , 
.子程序 _窗口_数据加解密_创建完毕, 空白型, , 


.子程序 _解密按钮_被单击, 空白型, , 

赋值 (., 到文本 (未知支持库函数_4 (选择 (.选中, 还原字节集文本为字节集 (.), 到字节集 (.)), 到文本 (选择 (.选中, 还原字节集文本为普通文本 (.内容), .内容)), 相加 (.现行选中项, 1))))

.如果真 (.选中)
    赋值 (., 字节集到字节集文本 (未知支持库函数_4 (选择 (.选中, 还原字节集文本为字节集 (.), 到字节集 (.)), 到文本 (选择 (.选中, 还原字节集文本为普通文本 (.内容), .内容)), 相加 (.现行选中项, 1))))
.如果真结束


.子程序 _加密按钮_被单击, 空白型, , 
赋值 (., 到文本 (未知支持库函数_3 (选择 (.选中, 还原字节集文本为字节集 (.), 到字节集 (.)), 选择 (.选中, 还原字节集文本为普通文本 (.内容), .内容), 相加 (.现行选中项, 1))))
.如果真 (.选中)
    赋值 (., 字节集到字节集文本 (未知支持库函数_3 (选择 (.选中, 还原字节集文本为字节集 (.), 到字节集 (.)), 选择 (.选中, 还原字节集文本为普通文本 (.内容), .内容), 相加 (.现行选中项, 1))))
.如果真结束


.子程序 _解密按钮1_被单击, 空白型, , 
赋值 (.内容, 还原字节集文本为普通文本 (.内容))


.子程序 _解密按钮2_被单击, 空白型, , 
赋值 (., 还原字节集文本为普通文本 (.))

.子程序 字节集到字节集文本, 文本型, , 
.参数 字节集数据, 字节集, , 

.局部变量 临时文本, 文本型, , , 
.局部变量 计次, 整数型, , , 

赋值 (临时文本, “”)
.计次循环首 (取字节集长度 (字节集数据), 计次)
    .如果 (大于或等于 (取字节集数据 (取字节集中间 (字节集数据, 计次, 1), #字节型, 1), 0))
        赋值 (临时文本, 相加 (临时文本, 到文本 (取字节集数据 (取字节集中间 (字节集数据, 计次, 1), #字节型, 1))))
    .否则
        赋值 (临时文本, 相加 (临时文本, 到文本 (相加 (256, 取字节集数据 (取字节集中间 (字节集数据, 计次, 1), #字节型, 1))))) ' 出现负数时表示是汉字,因此要用256去加一下,变为正数.
    .如果结束
    .如果真 (大于 (相减 (取字节集长度 (字节集数据), 计次), 0))
        赋值 (临时文本, 相加 (临时文本, “,”))
    .如果真结束
    
.计次循环尾 ()
返回 (相加 (“{ ”, 临时文本, “ }”))


.子程序 还原字节集文本为字节集, 字节集, , 
.参数 字节集文本, 文本型, , 

.局部变量 临时字节集, 字节集, , , 
.局部变量 临时文本数组, 文本型, , "0", 
.局部变量 计次, 整数型, , , 

赋值 (临时字节集, {  })
赋值 (字节集文本, 子文本替换 (字节集文本, “{”, , , , 假))
赋值 (字节集文本, 子文本替换 (字节集文本, “}”, , , , 假))
赋值 (临时文本数组, 分割文本 (字节集文本, “,”, ))
.计次循环首 (取数组成员数 (临时文本数组), 计次)
    赋值 (临时字节集, 相加 (临时字节集, 到字节集 (到字节 (临时文本数组 [计次]))))
.计次循环尾 ()
返回 (临时字节集)


.窗口程序集 窗口程序集_文件加解密, , , 文件加解密

.子程序 _按钮1_被单击, 空白型, , 
.如果真 (等于 (打开 (), 真))
    赋值 (.内容, .文件名)
    赋值 (.内容, 相加 (.文件名, “.JAM”))
.如果真结束


.子程序 _加密按钮_被单击, 空白型, , 
判断文件是否存在 ()
.判断开始 (等于 (.现行子夹, 0))
    写到文件 (.内容, 未知支持库函数_3 (读入文件 (.内容), .内容, 选择 (.选中, 0, 1)))
.判断 (等于 (.现行子夹, 1))
    .如果真 (或者 (等于 (.内容, “”), 等于 (.内容, “”)))
        信息框 (“密钥不正确!”, 0, )
        返回 ()
    .如果真结束
    
.判断 (等于 (.现行子夹, 2))
    .如果真 (或者 (等于 (.内容, “”), 等于 (.内容, “”)))
        信息框 (“密钥不正确!”, 0, )
        返回 ()
    .如果真结束
    
.默认
    
.判断结束


.子程序 判断文件是否存在, 空白型, , 
.如果真 (或者 (等于 (.内容, “”), 等于 (.内容, “”)))
    _按钮1_被单击 ()
    .如果真 (等于 (文件是否存在 (.内容), 假))
        信息框 (“错误:文件不存在!”, 0, “错误”)
    .如果真结束
    
.如果真结束


.窗口程序集 窗口程序集_花代码生成器, , , 

.子程序 _按钮1_被单击, 空白型, , 
 ' 未完成,自己搞吧.


 ' 不属于任何一个程序集、类模块的函数：
