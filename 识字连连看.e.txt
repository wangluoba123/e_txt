 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 800
    高度 = 496
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “识字连连看”
    帮助文件名 = “”

窗口 设置窗口
    左边 = 50
    顶边 = 50
    宽度 = 442
    高度 = 390
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “设置”
    帮助文件名 = “”

窗口 汉字解释查询
    左边 = 50
    顶边 = 50
    宽度 = 515
    高度 = 439
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “汉字解释查询”
    帮助文件名 = “”

窗口 帮助
    左边 = 50
    顶边 = 50
    宽度 = 380
    高度 = 250
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “帮助”
    帮助文件名 = “”

窗口 关于
    左边 = 50
    顶边 = 50
    宽度 = 380
    高度 = 250
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “关于”
    帮助文件名 = “”



.图片 天空, " ' 已保存到：D:\易语言学习\Data\识字连连看.e\天空", , 
.图片 海洋, " ' 已保存到：D:\易语言学习\Data\识字连连看.e\海洋", , 
.图片 卡通, " ' 已保存到：D:\易语言学习\Data\识字连连看.e\卡通", , 
.图片 苹果, " ' 已保存到：D:\易语言学习\Data\识字连连看.e\苹果", , 
.图片 天使, " ' 已保存到：D:\易语言学习\Data\识字连连看.e\天使", , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 4 系统核心支持库
 ' iext 27bb20fdd3e145e4bee3db39ddd6e64c 1 2 扩展界面支持库一




数据类型 汉字位置, , 
    .成员 汉字, 文本型, , , 
    .成员 位置, 整数型, , , 

数据类型 排名, , 
    .成员 得分, 长整数型, , , 
    .成员 名字, 文本型, , , 

.全局变量 牌面文字, 汉字位置, , "0", 
.全局变量 排行文件名, 文本型, , , 

.窗口程序集 窗口程序集1, , , 

.程序集变量 块宽, 空白型, , , 
.程序集变量 块高, 空白型, , , 
.程序集变量 横向块数, 空白型, , , 
.程序集变量 纵向块数, 空白型, , , 
.程序集变量 选中块, 空白型, , , 
.程序集变量 块组, 整数型, , "0", 
.程序集变量 有效块数, 空白型, , , 
.程序集变量 光标块, 空白型, , , 
.程序集变量 开始时间, 整数型, , , 
.程序集变量 匿名程序集变量_913, 空白型, , , 
.程序集变量 牌面数, 空白型, , , 
.程序集变量 复杂, 逻辑型, , , 
.程序集变量 背景文件名, 字节集, , , 
.程序集变量 匿名程序集变量_1218, 空白型, , , 
.程序集变量 得分, 整数型, , , 
.程序集变量 排名变量, 排名, , "11", 
.程序集变量 随机数表, 整数型, , "0", 
.子程序 初始化画板, 空白型, , 
.参数 横块, 空白型, , 
.参数 纵块, 空白型, , 

.局部变量 i, 空白型, , , 
.局部变量 临时数组, 整数型, , "0", 
.局部变量 图片号, 整数型, , , 

.清除 ()
.清除 ()

.移动 (.左边, .顶边, .宽度, .高度)
.如果真 (不等于 (背景文件名, {  }))
    赋值 (图片号, 载入图片 (背景文件名))
    .如果真 (大于 (图片号, 0))
        图片号.画图片 (0, 0, .宽度, .高度, )
        图片号.画图片 (0, 0, .宽度, .高度, )
        卸载图片 (图片号)
    .如果真结束
    
.如果真结束

 ' 画出块图片
.计次循环首 (相乘 (横块, 纵块), i)
    画编号图片 (i, 块组 [i], 真)
.计次循环尾 ()

.子程序 画编号图片, 空白型, , 
.参数 块号, 空白型, , 
.参数 牌面编号, 空白型, , 没有考虑直接从块组取编号,增加通用性
.参数 跳过空编号, 逻辑型, , 

.局部变量 横A, 空白型, , , 
.局部变量 纵A, 空白型, , , 
.局部变量 i, 空白型, , , 

.如果 (大于 (牌面编号, 0))
    赋值 (.画笔粗细, 1)
    赋值 (.刷子类型, 1)
     ' 连续赋值 (多项选择 (牌面编号, 16744448, 12632064, 16760832, 8453888, 12648192, 16776960, 16711808, 12615808, 16744576, 8437888, 12632192, 16760960, 65408, 8454016, 12648320, 16777088, 12583104, 16711872, 8421568, 12615872, 16744640, 49344, 8437952, 12632256, 16761024, 65472, 8454080, 12648384, 16777152, 8388863, 12583167, 16711935, 33023, 8421631, 12615935, 16744703, 49407, 8438015, 12632319, 16761087, 65535, 8454143, 12648447, 16777215, 16777215), .刷子颜色, .画笔颜色)
     ' 连续赋值 (多项选择 (牌面编号, #藏青, #深青, #紫红, #褐绿, #灰色, #蓝色, #绿色, #艳青, #红色, #品红, #黄色, #白色, #蓝灰, #藏蓝, #嫩绿, #青绿, #黄褐, #粉红, #嫩黄, #紫色, #天蓝, #灰绿, #青蓝, #橙黄, #桃红, #芙红, #深灰), 画板前景.刷子颜色, 画板前景.画笔颜色)
    计算块绝对坐标 (块号, 横A, 纵A)
    横A.画矩形 (纵A, 相加 (横A, 块宽), 相加 (纵A, 块高))
    相减 (相加 (横A, 整除 (块宽, 2)), 选择 (小于 (牌面编号, 10), 9, 8)).定位写出 (相减 (相加 (纵A, 整除 (块高, 2)), 9), 牌面文字 [牌面编号], 汉字) ' 以矩形块和编号代替图片
.否则
    .如果真 (等于 (跳过空编号, 假))
        计算块绝对坐标 (块号, 横A, 纵A)
        横A.复制 (纵A, 块宽, 块高, , 横A, 纵A, )
    .如果真结束
    
.如果结束


.子程序 _画板前景_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 本次点击, 空白型, , , 
.局部变量 通路, 整数型, , "0", 
.局部变量 有效块A, 空白型, , , 
.局部变量 有效块B, 空白型, , , 
.局部变量 临时通路, 空白型, , "0", 
.局部变量 句柄, 整数型, , , 

.如果真 (或者 (等于 (块宽, 0), 等于 (块高, 0))) ' 尚未初始化
    返回 ()
.如果真结束
赋值 (本次点击, 计算绝对坐标块号 (横向位置, 纵向位置)) ' 计算所在块编号
.如果真 (等于 (块组 [本次点击], 0)) ' 空块
    返回 ()
.如果真结束
赋值 (句柄, 相加 (“SELECT * FROM 字库 WHERE ID=”, 到文本 (牌面文字 [块组] [本次点击], 位置)).查询 ())
句柄.到首记录 ()
赋值 (.内容, 句柄.读 (“内容”))
赋值 (.标题, 句柄.读 (“汉字”))
赋值 (.标题, 句柄.读 (“拼音”))
句柄.关闭记录集 ()
赋值 (.可视, 假)
.如果 (等于 (选中块, 0))
    赋值 (选中块, 本次点击)
    画块边框 (选中块, #红色)
    赋值 (., 相加 (“选中块: ”, 到文本 (选中块)))
.否则
    .如果 (不等于 (本次点击, 选中块))
        画块边框 (本次点击, #红色)
        
        .如果 (连通判断 (选中块, 本次点击, 通路, 块组, 横向块数, 纵向块数)) ' 其返回值代表消除成功与否
            连续赋值 (0, 块组 [选中块], 块组 [本次点击])
            赋值 (有效块数, 相减 (有效块数, 2))
            画连通块清除动画 (选中块, 本次点击, 通路, 真, 10, 250, 真)
            画编号图片 (选中块, 0, 假)
            画编号图片 (本次点击, 0, 假)
            赋值 (选中块, 0)
            赋值 (., “”)
            判断得分 ()
            
        .否则
            画编号图片 (选中块, 块组 [选中块], 假)
            画编号图片 (本次点击, 块组 [本次点击], 假)
            赋值 (选中块, 本次点击)
            画块边框 (选中块, #红色)
            赋值 (光标块, -1)
        .如果结束
        .如果真 (等于 (自动提示有效块 (), 假))
            赋值 (., “”)
            赋值 (.时钟周期, 0)
            赋值 (.时钟周期, 0)
            信息框 (“布局已无效，SORRY，还未加自由调换措施”, 0, )
            赋值 (_启动窗口., 相加 (“识字连连看   ”, “00:00”))
            返回 ()
        .如果真结束
        
    .否则
        画块边框 (选中块, #蓝色)
        赋值 (选中块, 0)
        赋值 (., “”)
    .如果结束
    .如果真 (小于或等于 (有效块数, 1)) ' 消牌结束,可能有单个空块
        赋值 (.时钟周期, 0)
        信息框 (相加 (“恭喜完成”, #换行符, “共耗时”, 到文本 (整除 (相减 (取启动时间 (), 开始时间), 60000)), “分钟”, #换行符, “共得分：”, 到文本 (得分)), 0, )
        赋值 (.时钟周期, 0)
        连续赋值 (真, .可视, .可视, .可视)
        排行榜登记 ()
        赋值 (.可视, 真)
        赋值 (_启动窗口., 相加 (“识字连连看   ”, “00:00”))
    .如果真结束
    
.如果结束


.子程序 判断得分, 空白型, , 
.判断开始 (大于或等于 (.位置, 25))
    赋值 (得分, 相加 (得分, 100))
.判断 (大于或等于 (.位置, 20))
    赋值 (得分, 相加 (得分, 80))
.判断 (大于或等于 (.位置, 15))
    赋值 (得分, 相加 (得分, 60))
.判断 (大于或等于 (.位置, 10))
    赋值 (得分, 相加 (得分, 40))
.判断 (大于或等于 (.位置, 5))
    赋值 (得分, 相加 (得分, 20))
.判断 (大于或等于 (.位置, 0))
    赋值 (得分, 相加 (得分, 1))
.默认
    
.判断结束
赋值 (.标题, 到文本 (得分))
赋值 (.位置, 30)

.子程序 画连通块通路线, 空白型, , 
.参数 块A, 空白型, , 
.参数 块B, 空白型, , 
.参数 通路, 整数型, 数组, 
.参数 颜色, 空白型, , 
.参数 延时值, 空白型, , 

.局部变量 横A, 空白型, , , 
.局部变量 纵A, 空白型, , , 
.局部变量 横B, 空白型, , , 
.局部变量 纵B, 空白型, , , 
.局部变量 i, 空白型, , , 

处理事件 ()

 ' 此处通路保留了全部路径,可以修改连通双线测试函数,仅返回转折块
.如果真 (大于 (取数组成员数 (通路), 0))
    赋值 (.画笔粗细, 4)
    赋值 (.画笔颜色, 颜色)
    
    计算块绝对坐标 (块A, 横A, 纵A)
    计算块绝对坐标 (通路 [1], 横B, 纵B)
    .如果 (等于 (纵A, 纵B))
        .如果真 (小于 (横A, 横B))
            赋值 (横A, 相加 (横A, 块宽))
        .如果真结束
        赋值 (纵A, 相加 (纵A, 整除 (块高, 2)))
    .否则
        赋值 (横A, 相加 (横A, 整除 (块宽, 2)))
        .如果真 (小于 (纵A, 纵B))
            赋值 (纵A, 相加 (纵A, 块高))
        .如果真结束
        
    .如果结束
    横A.画直线 (纵A, 相加 (横B, 整除 (块宽, 2)), 相加 (纵B, 整除 (块高, 2)))
    延时 (延时值)
    .计次循环首 (相减 (取数组成员数 (通路), 1), i)
        赋值 (横A, 横B)
        赋值 (纵A, 纵B)
        计算块绝对坐标 (通路 [相加 (i, 1)], 横B, 纵B)
         ' 我修改的代码：就第2个参数加了个+0,+6,-9，不知道为什么就好用了:程序怎么实现的我也没弄懂，问题倒是解决了-_-!
         ' ----------------------------
        相加 (横A, 整除 (块宽, 2)).画直线 (相加 (纵A, 整除 (块高, 2)), 相加 (横B, 整除 (块宽, 2)), 相加 (纵B, 整除 (块高, 2)))
         ' ---------------------------
        延时 (延时值)
    .计次循环尾 ()
    赋值 (横A, 相加 (横B, 整除 (块宽, 2)))
    赋值 (纵A, 相加 (纵B, 整除 (块高, 2)))
    计算块绝对坐标 (块B, 横B, 纵B)
    赋值 (横B, 相加 (横B, 整除 (块宽, 2)))
    赋值 (纵B, 相加 (纵B, 整除 (块高, 2)))
    .如果 (等于 (纵A, 纵B))
        .如果 (大于 (横A, 横B))
            赋值 (横B, 相加 (横B, 整除 (块宽, 2)))
        .否则
            赋值 (横B, 相减 (横B, 整除 (块宽, 2)))
        .如果结束
        
    .否则
        .如果 (大于 (纵A, 纵B))
            赋值 (纵B, 相加 (纵B, 整除 (块高, 2)))
        .否则
            赋值 (纵B, 相减 (纵B, 整除 (块高, 2)))
        .如果结束
        
    .如果结束
    横A.画直线 (纵A, 横B, 纵B)
.如果真结束


.子程序 计算块相对坐标, 空白型, , 
.参数 块号, 空白型, , 
.参数 横块坐标, 空白型, 参考, 
.参数 纵块坐标, 空白型, 参考, 

赋值 (横块坐标, 相加 (求余数 (相减 (块号, 1), 横向块数), 1))
赋值 (纵块坐标, 相加 (整除 (相减 (块号, 1), 横向块数), 1))

.子程序 计算块绝对坐标, 空白型, , 块左上角
.参数 块号, 空白型, , 
.参数 横向位置, 空白型, 参考, 
.参数 纵向位置, 空白型, 参考, 

赋值 (横向位置, 相乘 (求余数 (相减 (块号, 1), 横向块数), 块宽))
赋值 (纵向位置, 相乘 (整除 (相减 (块号, 1), 横向块数), 块高))

.子程序 计算相对坐标块号, 整数型, , 
.参数 横块坐标, 空白型, , 
.参数 纵块坐标, 空白型, , 

返回 (相加 (相乘 (相减 (纵块坐标, 1), 横向块数), 横块坐标))

.子程序 计算绝对坐标块号, 整数型, , 
.参数 横向位置, 空白型, 参考, 
.参数 纵向位置, 空白型, 参考, 

.局部变量 块号, 整数型, , , 

赋值 (块号, 相加 (整除 (横向位置, 块宽), 相乘 (整除 (纵向位置, 块高), 横向块数), 1))
.如果真 (大于 (块号, 相乘 (横向块数, 纵向块数)))
    赋值 (块号, 相乘 (横向块数, 纵向块数))
.如果真结束
返回 (块号)

.子程序 _时钟1_周期事件, 空白型, , 
.局部变量 现行时间, 整数型, , , 
.局部变量 分, 整数型, , , 
.局部变量 秒, 整数型, , , 

赋值 (现行时间, 相减 (取启动时间 (), 开始时间))
赋值 (分, 整除 (相除 (现行时间, 1000), 60))
赋值 (秒, 整除 (相减 (现行时间, 相乘 (分, 60000)), 1000))
赋值 (_启动窗口., 相加 (“识字连连看  ”, 选择 (小于 (分, 10), “0”, “”), 到文本 (分), “:”, 选择 (小于 (秒, 10), “0”, “”), 到文本 (秒)))

.子程序 _画板前景_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 当前块, 空白型, , , 
.局部变量 左, 空白型, , , 
.局部变量 顶, 空白型, , , 
.局部变量 横, 空白型, , , 
.局部变量 纵, 空白型, , , 
.局部变量 i, 空白型, , , 

.如果真 (等于 (有效块数, 0))
    返回 ()
.如果真结束
赋值 (当前块, 计算绝对坐标块号 (横向位置, 纵向位置))
.如果真 (等于 (当前块, 光标块))
    返回 ()
.如果真结束
.如果真 (不等于 (光标块, -1))
    .如果 (不等于 (光标块, 选中块))
        画编号图片 (光标块, 块组 [光标块], 假)
    .否则
        画块边框 (选中块, #红色)
    .如果结束
    
.如果真结束
.如果真 (不等于 (块组 [当前块], 0)) ' 非空块
    画块边框 (当前块, #蓝色)
.如果真结束
赋值 (光标块, 当前块)

.子程序 画块边框, 空白型, , 
.参数 当前块, 空白型, , 
.参数 颜色, 空白型, , 

.局部变量 横, 空白型, , , 
.局部变量 纵, 空白型, , , 
.局部变量 边距, 空白型, , , 
.局部变量 偏离, 空白型, , , 

赋值 (.画笔粗细, 1)
赋值 (边距, 1)
赋值 (偏离, 2)
计算块绝对坐标 (当前块, 横, 纵)
赋值 (横, 相加 (横, 边距))
赋值 (纵, 相加 (纵, 边距))
赋值 (.画笔颜色, 颜色)
赋值 (.画笔粗细, 2)
横.画直线 (纵, 横, 相减 (相加 (纵, 块高), 偏离))
横.画直线 (相减 (相加 (纵, 块高), 偏离), 相减 (相加 (横, 块宽), 偏离), 相减 (相加 (纵, 块高), 偏离))
相减 (相加 (横, 块宽), 偏离).画直线 (相减 (相加 (纵, 块高), 偏离), 相减 (相加 (横, 块宽), 偏离), 纵)
相减 (相加 (横, 块宽), 偏离).画直线 (纵, 横, 纵)

.子程序 画连通块清除动画, 空白型, , 
.参数 块A, 空白型, , 
.参数 块B, 空白型, , 
.参数 通路, 整数型, 数组, 
.参数 显示动画, 逻辑型, , 
.参数 画线延时值, 空白型, , 
.参数 消隐延时值, 空白型, , 
.参数 清除图片, 逻辑型, , 

.局部变量 i, 空白型, , , 
.局部变量 A, 整数型, , , 

.如果真 (显示动画)
    画连通块通路线 (块A, 块B, 通路, #红色, 画线延时值)
    延时 (消隐延时值)
    .计次循环首 (取数组成员数 (通路), i)
        画编号图片 (通路 [i], 0, 假)
    .计次循环尾 ()
.如果真结束
.如果真 (清除图片)
    画编号图片 (块A, 0, 假)
    画编号图片 (块B, 0, 假)
.如果真结束


.子程序 自动提示有效块, 逻辑型, , 
.参数 块A, 空白型, 参考 可空, 
.参数 块B, 空白型, 参考 可空, 
.参数 匿名参数_415, 空白型, 可空 数组, 

.局部变量 临时块组, 空白型, , "0", 
.局部变量 无效局, 逻辑型, , , 
.局部变量 i, 空白型, , , 
.局部变量 M, 空白型, , , 

复制数组 (临时块组, 块组)

 ' 检查是否空块组
赋值 (M, 0)
.计次循环首 (取数组成员数 (临时块组), i) ' 全部为空即为有效
    .如果真 (不等于 (临时块组 [i], 0))
        赋值 (M, -1)
        跳出循环 ()
    .如果真结束
    
.计次循环尾 ()
.如果真 (等于 (M, 0))
    返回 (真)
.如果真结束

赋值 (无效局, 真)
.计次循环首 (相减 (取数组成员数 (临时块组), 1), i)
    .如果真 (等于 (临时块组 [i], 0))
        到循环尾 ()
    .如果真结束
    .变量循环首 (相加 (i, 1), 取数组成员数 (临时块组), 1, M)
        .如果真 (等于 (临时块组 [M], 0))
            到循环尾 ()
        .如果真结束
        .如果真 (等于 (临时块组 [M], 临时块组 [i]))
            .如果真 (连通判断 (M, i, 匿名参数_415, 临时块组, 横向块数, 纵向块数))
                赋值 (块A, M)
                赋值 (块B, i)
                赋值 (无效局, 假)
                跳出循环 ()
            .如果真结束
            
        .如果真结束
        处理事件 ()
    .变量循环尾 ()
    .如果真 (等于 (无效局, 假))
        跳出循环 ()
    .如果真结束
    
.计次循环尾 ()
返回 (取反 (无效局))

.子程序 画背景图片, 空白型, , 
.参数 图片背景, 字节集, , 

.局部变量 图片号, 整数型, , , 
.局部变量 i, 空白型, , , 

.移动 (.左边, .顶边, .宽度, .高度)
赋值 (图片号, 载入图片 (图片背景))
.如果真 (大于 (图片号, 0))
    赋值 (背景文件名, 图片背景)
    图片号.画图片 (0, 0, .宽度, .高度, )
    图片号.画图片 (0, 0, .宽度, .高度, )
    卸载图片 (图片号)
    .计次循环首 (相乘 (横向块数, 纵向块数), i)
        画编号图片 (i, 块组 [i], 真)
    .计次循环尾 ()
.如果真结束


.子程序 __启动窗口_创建完毕, 空白型, , 
相加 (取运行目录 (), “\字典.mdb”).打开MDB数据库 ()
置随机数种子 ()
初始化系统 ()
排行板预处理 ()

.子程序 初始化系统, 空白型, , 
.局部变量 背景图片, 文本型, , , 

赋值 (排行文件名, 相加 (取运行目录 (), “\排行榜.INI”))
赋值 (背景图片, 读配置项 (排行文件名, “set”, “背景”, ))
.判断开始 (等于 (到数值 (读配置项 (排行文件名, “set”, “复杂”, “ 0”)), 1))
    赋值 (复杂, 真)
.默认
    赋值 (复杂, 假)
.判断结束
.判断开始 (等于 (背景图片, “苹果”))
    画背景图片 (#苹果)
.判断 (等于 (背景图片, “天空”))
    画背景图片 (#天空)
.判断 (等于 (背景图片, “海洋”))
    画背景图片 (#海洋)
.判断 (等于 (背景图片, “天使”))
    画背景图片 (#天使)
.判断 (等于 (背景图片, “卡通”))
    画背景图片 (#卡通)
.默认
    画背景图片 (读入文件 (背景图片))
.判断结束


.子程序 提示, 空白型, , 
.局部变量 块A, 空白型, , , 
.局部变量 块B, 空白型, , , 
.局部变量 通路, 空白型, , "0", 

.如果 (自动提示有效块 (块A, 块B, 通路))
    .如果真 (或者 (等于 (块A, 0), 等于 (块B, 0)))
        返回 ()
    .如果真结束
    .计次循环首 (3, )
        画块边框 (块A, #红色)
        画块边框 (块B, #红色)
        画连通块清除动画 (块A, 块B, 通路, 真, 0, 250, 假)
        画编号图片 (块A, 块组 [块A], 假)
        画编号图片 (块B, 块组 [块B], 假)
        处理事件 ()
        延时 (100)
    .计次循环尾 ()
.否则
    信息框 (“无有效连通块”, 0, )
.如果结束


.子程序 _工具条1_被单击, 空白型, , 
.参数 按钮索引, 整数型, , 

.如果真 (等于 (按钮索引.取标题 (), “开始”))
    赋值 (.可视, 假)
    赋值 (., 真)
    开始游戏 ()
    赋值 (., 假)
.如果真结束
.如果真 (等于 (按钮索引.取标题 (), “提示”))
    提示 ()
.如果真结束
.如果真 (等于 (按钮索引.取标题 (), “设置”))
    载入 (设置窗口, , 真)
    初始化系统 ()
.如果真结束
.如果真 (等于 (按钮索引.取标题 (), “退出”))
    结束 ()
.如果真结束
.如果真 (等于 (按钮索引.取标题 (), “查询”))
    载入 (汉字解释查询, , 真)
.如果真结束
.如果真 (等于 (按钮索引.取标题 (), “排行”))
    .如果 (等于 (.可视, 真))
        赋值 (.可视, 假)
    .否则
        赋值 (.可视, 真)
    .如果结束
    
.如果真结束
.如果真 (等于 (按钮索引.取标题 (), “帮助”))
    载入 (帮助, , 真)
.如果真结束
.如果真 (等于 (按钮索引.取标题 (), “关于”))
    载入 (关于, , 真)
.如果真结束


.子程序 开始游戏, 空白型, , 
.局部变量 文字循环, 整数型, , , 
.局部变量 随机数, 整数型, , , 
.局部变量 读汉字, 文本型, , , 
.局部变量 临时汉字, 汉字位置, , , 
.局部变量 句柄, 整数型, , , 
.局部变量 记录数, 整数型, , , 
.局部变量 a, 整数型, , , 
.局部变量 b, 整数型, , , 

赋值 (横向块数, 到数值 (读配置项 (排行文件名, “set”, “横”, )))
赋值 (纵向块数, 到数值 (读配置项 (排行文件名, “set”, “竖”, )))
赋值 (牌面数, 到数值 (读配置项 (排行文件名, “set”, “字数”, “ 45”)))
.如果真 (或者 (小于 (横向块数, 5), 小于 (纵向块数, 5)))
    信息框 (“横纵块数至少大于等于5!”, 0, )
    返回 ()
.如果真结束
赋值 (横向块数, 相加 (横向块数, 2))
赋值 (纵向块数, 相加 (纵向块数, 2))
.如果真 (或者 (小于 (牌面数, 0), 大于 (牌面数, 45))) ' 设为禁止是因为只用了那么多颜色数，不要设太高
    赋值 (牌面数, 45)
.如果真结束
赋值 (.可视, 真)
赋值 (.最大位置, 相加 (到数值 (牌面数), 5))
赋值 (.标题, “正在初始化.....”)
赋值 (块宽, 相除 (.宽度, 横向块数))
赋值 (块高, 相除 (.高度, 纵向块数))
赋值 (.宽度, 相加 (相乘 (块宽, 横向块数), 3)) ' 微调画板宽度
赋值 (.高度, 相加 (相乘 (块高, 纵向块数), 3)) ' 微调画板高度
清除数组 (牌面文字)
清除数组 (随机数表)
赋值 (.位置, 1)
赋值 (a, 到数值 (读配置项 (排行文件名, “set”, “a1”, )))
赋值 (b, 到数值 (读配置项 (排行文件名, “set”, “a2”, )))
赋值 (句柄, 相加 (“SELECT count(*) FROM [字库] WHERE [笔画数]>=”, 到文本 (a), “ And [笔画数]<=”, 到文本 (b), “ And [是否使用]=0”).查询 ())
赋值 (记录数, 句柄.读 (1))
句柄.关闭记录集 ()
处理事件 ()
赋值 (.位置, 2)
.计次循环首 (到数值 (牌面数), 文字循环)
    赋值 (随机数, 取随机数 (1, 记录数))
    .判断循环首 (等于 (随机数是否出现 (随机数), 真))
        赋值 (随机数, 取随机数 (1, 记录数))
    .判断循环尾 ()
    加入成员 (随机数表, 随机数)
    赋值 (句柄, 相加 (“SELECT TOP ”, 到文本 (随机数), “ * FROM [字库] WHERE [笔画数]>=”, 到文本 (a), “ And [笔画数]<=”, 到文本 (b), “ And [是否使用]=0”).查询 ())
    句柄.到尾记录 ()
    赋值 (随机数, 句柄.读 (“ID”))
    赋值 (读汉字, 句柄.读 (“汉字”))
    句柄.关闭记录集 ()
    赋值 (临时汉字.汉字, 读汉字)
    赋值 (临时汉字.位置, 随机数)
    加入成员 (牌面文字, 临时汉字)
    赋值 (.位置, 相加 (文字循环, 2))
    赋值 (.标题, 相加 (“正在从字库取字：”, 到文本 (文字循环)))
    刷新显示 ()
    处理事件 ()
.计次循环尾 ()
赋值 (.标题, “正在生成图片.....”)
重定义数组 (块组, 假, 相乘 (横向块数, 纵向块数))
赋值 (.位置, 相加 (.位置, 1))
.判断开始 (等于 (复杂, 真))
    建立纵向条布局 (横向块数, 纵向块数, 牌面数, 有效块数, 块组)
.默认
    建立四边留空布局 (横向块数, 纵向块数, 牌面数, 有效块数, 块组)
.判断结束
赋值 (.位置, 相加 (.位置, 1))
初始化画板 (横向块数, 纵向块数)
赋值 (开始时间, 取启动时间 ())
赋值 (光标块, -1)
赋值 (.位置, 相加 (.位置, 1))
赋值 (.时钟周期, 200)
赋值 (.可视, 假)
赋值 (.最大位置, 30)
赋值 (.位置, 30)
赋值 (.标题, “30”)
赋值 (得分, 0)
赋值 (.标题, 到文本 (得分))
连续赋值 (真, .可视, .可视, .可视)
赋值 (.时钟周期, 1000)

.子程序 随机数是否出现, 逻辑型, , 
.参数 值, 整数型, , 

.局部变量 循环, 整数型, , , 

.计次循环首 (取数组成员数 (随机数表), 循环)
    .如果真 (等于 (值, 随机数表 [循环]))
        返回 (真)
    .如果真结束
    
.计次循环尾 ()
返回 (假)

.子程序 _时钟2_周期事件, 空白型, , 
赋值 (.位置, 相减 (.位置, 1))
.如果真 (大于或等于 (.位置, 0))
    赋值 (.标题, 到文本 (.位置))
.如果真结束


.子程序 排行板预处理, 空白型, , 
.局部变量 排行数目, 整数型, , , 
.局部变量 计数, 整数型, , , 
.局部变量 姓名, 文本型, , , 
.局部变量 排行分数, 文本型, , , 

赋值 (排行数目, 到数值 (读配置项 (排行文件名, “排行列表”, “总数”, “0”)))
赋值 (.可视, 假)
赋值 (.可视, 假)
赋值 (.可视, 假)
赋值 (.可视, 假)
赋值 (.可视, 假)
赋值 (.可视, 假)
赋值 (.可视, 假)
赋值 (.可视, 假)
赋值 (.可视, 假)
赋值 (.可视, 假)
 ' 图片框_排行板.高度 ＝ 24 ＋ 16 × 排行数目

.如果真 (大于或等于 (排行数目, 1))
    赋值 (姓名, 读配置项 (排行文件名, “排行列表”, “排名1姓名”, “0”))
    赋值 (排行分数, 读配置项 (排行文件名, “排行列表”, “排名1分数”, “0”))
    赋值 (.标题, 相加 (“①”, 姓名, “ ”, 排行分数))
    赋值 (.可视, 真)
.如果真结束

.如果真 (大于或等于 (排行数目, 2))
    赋值 (姓名, 读配置项 (排行文件名, “排行列表”, “排名2姓名”, “0”))
    赋值 (排行分数, 读配置项 (排行文件名, “排行列表”, “排名2分数”, “0”))
    赋值 (.标题, 相加 (“②”, 姓名, “ ”, 排行分数))
    赋值 (.可视, 真)
.如果真结束

.如果真 (大于或等于 (排行数目, 3))
    赋值 (姓名, 读配置项 (排行文件名, “排行列表”, “排名3姓名”, “0”))
    赋值 (排行分数, 读配置项 (排行文件名, “排行列表”, “排名3分数”, “0”))
    赋值 (.标题, 相加 (“③”, 姓名, “ ”, 排行分数))
    赋值 (.可视, 真)
.如果真结束

.如果真 (大于或等于 (排行数目, 4))
    赋值 (姓名, 读配置项 (排行文件名, “排行列表”, “排名4姓名”, “0”))
    赋值 (排行分数, 读配置项 (排行文件名, “排行列表”, “排名4分数”, “0”))
    赋值 (.标题, 相加 (“④”, 姓名, “ ”, 排行分数))
    赋值 (.可视, 真)
.如果真结束

.如果真 (大于或等于 (排行数目, 5))
    赋值 (姓名, 读配置项 (排行文件名, “排行列表”, “排名5姓名”, “0”))
    赋值 (排行分数, 读配置项 (排行文件名, “排行列表”, “排名5分数”, “0”))
    赋值 (.标题, 相加 (“⑤”, 姓名, “ ”, 排行分数))
    赋值 (.可视, 真)
.如果真结束

.如果真 (大于或等于 (排行数目, 6))
    赋值 (姓名, 读配置项 (排行文件名, “排行列表”, “排名6姓名”, “0”))
    赋值 (排行分数, 读配置项 (排行文件名, “排行列表”, “排名6分数”, “0”))
    赋值 (.标题, 相加 (“⑥”, 姓名, “ ”, 排行分数))
    赋值 (.可视, 真)
.如果真结束

.如果真 (大于或等于 (排行数目, 7))
    赋值 (姓名, 读配置项 (排行文件名, “排行列表”, “排名7姓名”, “0”))
    赋值 (排行分数, 读配置项 (排行文件名, “排行列表”, “排名7分数”, “0”))
    赋值 (.标题, 相加 (“⑦”, 姓名, “ ”, 排行分数))
    赋值 (.可视, 真)
.如果真结束

.如果真 (大于或等于 (排行数目, 8))
    赋值 (姓名, 读配置项 (排行文件名, “排行列表”, “排名8姓名”, “0”))
    赋值 (排行分数, 读配置项 (排行文件名, “排行列表”, “排名8分数”, “0”))
    赋值 (.标题, 相加 (“⑧”, 姓名, “ ”, 排行分数))
    赋值 (.可视, 真)
.如果真结束

.如果真 (大于或等于 (排行数目, 9))
    赋值 (姓名, 读配置项 (排行文件名, “排行列表”, “排名9姓名”, “0”))
    赋值 (排行分数, 读配置项 (排行文件名, “排行列表”, “排名9分数”, “0”))
    赋值 (.标题, 相加 (“⑨”, 姓名, “ ”, 排行分数))
    赋值 (.可视, 真)
.如果真结束

.如果真 (大于或等于 (排行数目, 10))
    赋值 (姓名, 读配置项 (排行文件名, “排行列表”, “排名10姓名”, “0”))
    赋值 (排行分数, 读配置项 (排行文件名, “排行列表”, “排名10分数”, “0”))
    赋值 (.标题, 相加 (“⑩”, 姓名, “ ”, 排行分数))
    赋值 (.可视, 真)
.如果真结束




.子程序 排行榜登记, 空白型, , 
.局部变量 排行数目, 整数型, , , 
.局部变量 计数, 整数型, , , 
.局部变量 姓名, 文本型, , , 
.局部变量 排行分数, 整数型, , , 
.局部变量 分数1, 整数型, , , 
.局部变量 分数2, 整数型, , , 
.局部变量 分数3, 整数型, , , 
.局部变量 姓名1, 文本型, , , 
.局部变量 姓名2, 文本型, , , 
.局部变量 姓名3, 文本型, , , 

赋值 (排行数目, 到数值 (读配置项 (排行文件名, “排行列表”, “总数”, “0”)))
 ' 姓名 ＝ 读配置项 (排行文件名, “排行列表”, “排名” ＋ 到文本 (排行数目) ＋ “姓名”, “0”)
赋值 (排行分数, 到数值 (读配置项 (排行文件名, “排行列表”, 相加 (“排名”, 到文本 (排行数目), “分数”), “0”)))
 ' 输出调试文本 (排行数目, 排行分数)
.如果真 (或者 (小于或等于 (到数值 (.标题), 到数值 (排行分数)), 等于 (排行数目, 0))) ' 最新的分数小于等于排行表中的分数
    .如果 (大于 (排行数目, 10)) ' 如果排行表中已有10个人,就不进行处理,否则小于10个人的话,就可以加入排行记录.
         ' 输出调试文本 (2)
        返回 ()
    .否则
        输入框 (“恭喜你，连字成功,名次超前,请输入您的姓名:”, “排行板”, , 姓名, )
        写配置项 (排行文件名, “排行列表”, “总数”, 到文本 (相加 (排行数目, 1)))
        写配置项 (排行文件名, “排行列表”, 相加 (“排名”, 到文本 (相加 (排行数目, 1)), “姓名”), 姓名)
        写配置项 (排行文件名, “排行列表”, 相加 (“排名”, 到文本 (相加 (排行数目, 1)), “分数”), .标题)
        排行板预处理 ()
         ' 输出调试文本 (3)
        返回 ()
    .如果结束
    
.如果真结束
 ' 输出调试文本 (4)

.如果真 (大于 (到数值 (.标题), 到数值 (排行分数))) ' 数据最新的分数大于最后一名的分数,那么有可能重新排序插入原先的数据中,更新排名列表
    输入框 (“恭喜你，连字成功,名次超前,请输入您的姓名:   ”, “排行板”, , 姓名, )
    赋值 (排行分数, 到数值 (.标题))
    .如果 (等于 (排行数目, 10)) ' 如果已有10个排名列表,就直接插入到第10个,然后再排序,否则插入加一个的排序.
        写配置项 (排行文件名, “排行列表”, 相加 (“排名”, 到文本 (排行数目), “姓名”), 姓名)
        写配置项 (排行文件名, “排行列表”, 相加 (“排名”, 到文本 (排行数目), “分数”), .标题)
    .否则
        写配置项 (排行文件名, “排行列表”, “总数”, 到文本 (相加 (排行数目, 1)))
        写配置项 (排行文件名, “排行列表”, 相加 (“排名”, 到文本 (相加 (排行数目, 1)), “姓名”), 姓名)
        写配置项 (排行文件名, “排行列表”, 相加 (“排名”, 到文本 (相加 (排行数目, 1)), “分数”), .标题)
    .如果结束
     ' 下面进行重新排序
    赋值 (排行数目, 到数值 (读配置项 (排行文件名, “排行列表”, “总数”, “0”)))
    .计次循环首 (相减 (排行数目, 1), )
        .计次循环首 (相减 (排行数目, 1), 计数) ' 读前一个与后一个的分数进行比较,如果后面的比前面的高,那么就交换位置.
            赋值 (分数1, 到数值 (读配置项 (排行文件名, “排行列表”, 相加 (“排名”, 到文本 (计数), “分数”), “0”)))
            赋值 (分数2, 到数值 (读配置项 (排行文件名, “排行列表”, 相加 (“排名”, 到文本 (相加 (计数, 1)), “分数”), “0”)))
            .如果真 (小于 (分数1, 分数2))
                赋值 (姓名1, 读配置项 (排行文件名, “排行列表”, 相加 (“排名”, 到文本 (计数), “姓名”), “0”))
                赋值 (姓名2, 读配置项 (排行文件名, “排行列表”, 相加 (“排名”, 到文本 (相加 (计数, 1)), “姓名”), “0”))
                写配置项 (排行文件名, “排行列表”, 相加 (“排名”, 到文本 (计数), “姓名”), 姓名2)
                写配置项 (排行文件名, “排行列表”, 相加 (“排名”, 到文本 (计数), “分数”), 到文本 (分数2))
                写配置项 (排行文件名, “排行列表”, 相加 (“排名”, 到文本 (相加 (计数, 1)), “姓名”), 姓名1)
                写配置项 (排行文件名, “排行列表”, 相加 (“排名”, 到文本 (相加 (计数, 1)), “分数”), 到文本 (分数1))
            .如果真结束
            
        .计次循环尾 ()
    .计次循环尾 ()
     ' 排序完成,下面显示排序后的结果
    排行板预处理 ()
.如果真结束


赋值 (排行数目, 到数值 (读配置项 (排行文件名, “排行列表”, “总数”, “0”)))
 ' 图片框_排行板.高度 ＝ 24 ＋ 16 × 排行数目


.子程序 清除排行榜, 空白型, , 
.如果真 (等于 (信息框 (“真的清除排行榜记录吗?”, #确认取消钮, “清除排行榜”), #确认钮))
    写配置项 (排行文件名, “排行列表”, “总数”, “0”)
    排行板预处理 ()
.如果真结束




.程序集 算法程序集, , , 

.子程序 建立四边留空布局, 空白型, , 
.参数 横块, 空白型, , 
.参数 纵块, 空白型, , 
.参数 牌面数, 空白型, , 
.参数 有效数, 空白型, 参考, 
.参数 应用块组, 空白型, 数组, 

.局部变量 坐标数组, 空白型, , "0", 
.局部变量 i, 空白型, , , 
.局部变量 当前块, 空白型, , , 
.局部变量 临时编号, 空白型, , , 

数组清零 (应用块组)

 ' 四边留空布局
赋值 (有效数, 相乘 (相减 (横块, 2), 相减 (纵块, 2)))
重定义数组 (坐标数组, 假, 有效数)
.计次循环首 (有效数, i)
    赋值 (坐标数组 [i], 相加 (1, 横块, 相乘 (2, 整除 (相减 (i, 1), 相减 (横块, 2))), i)) ' 计算中心区域块编号
.计次循环尾 ()
建立最终随机块 (坐标数组, 应用块组, 牌面数)

.子程序 建立纵向条布局, 空白型, , 
.参数 横块, 空白型, , 
.参数 纵块, 空白型, , 
.参数 牌面数, 空白型, , 
.参数 有效数, 空白型, 参考, 
.参数 应用块组, 空白型, 数组, 

.局部变量 坐标数组, 空白型, , "0", 
.局部变量 i, 空白型, , , 
.局部变量 当前块, 空白型, , , 
.局部变量 临时编号, 空白型, , , 

数组清零 (应用块组)

 ' 纵向条布局
赋值 (有效数, 相乘 (整除 (横块, 2), 相减 (纵块, 2)))
重定义数组 (坐标数组, 假, 有效数)
.计次循环首 (有效数, i)
    赋值 (坐标数组 [i], 相减 (相加 (1, 相乘 (相加 (整除 (相减 (i, 1), 取整 (相除 (横块, 2))), 1), 横块), 相乘 (相加 (求余数 (相减 (i, 1), 取整 (相除 (横块, 2))), 1), 2)), 1)) ' 此处用整除（）函数发现算符优先级有误，因此使用取整（）函数
.计次循环尾 ()
建立最终随机块 (坐标数组, 应用块组, 牌面数)

.子程序 建立最终随机块, 空白型, , 
.参数 坐标数组, 空白型, 数组, 
.参数 应用块组, 空白型, 数组, 
.参数 牌面数, 空白型, , 

.局部变量 牌面编号, 空白型, , , 
.局部变量 临时编号, 空白型, , , 

.计次循环首 (整除 (取数组成员数 (坐标数组), 2), ) ' 成对添加块图片编号
    赋值 (牌面编号, 取随机数 (1, 牌面数))
    .计次循环首 (2, )
        赋值 (临时编号, 取随机数 (1, 取数组成员数 (坐标数组)))
        赋值 (应用块组 [坐标数组] [临时编号], 牌面编号)
        删除成员 (坐标数组, 临时编号, 1)
    .计次循环尾 ()
.计次循环尾 ()

.子程序 连通单线测试, 逻辑型, , 
.参数 块A, 空白型, , 
.参数 块B, 空白型, , 
.参数 通路, 整数型, 数组, 
.参数 测试块组, 整数型, 数组, 

.局部变量 横A, 空白型, , , 
.局部变量 纵A, 空白型, , , 
.局部变量 横B, 空白型, , , 
.局部变量 纵B, 空白型, , , 
.局部变量 i, 空白型, , , 
.局部变量 临时块, 空白型, , , 
.局部变量 临时通路, 整数型, , "0", 
.局部变量 可连通, 逻辑型, , , 
.局部变量 增量, 整数型, , , 

计算块相对坐标 (块A, 横A, 纵A)
计算块相对坐标 (块B, 横B, 纵B)

 ' 横向判断
.如果真 (等于 (纵A, 纵B))
    .如果真 (等于 (取绝对值 (相减 (横A, 横B)), 1)) ' 紧贴在一起
        返回 (真)
    .如果真结束
    赋值 (增量, 选择 (大于 (横A, 横B), -1, 1))
    赋值 (可连通, 真)
    .变量循环首 (相加 (横A, 增量), 相减 (横B, 增量), 增量, i)
        赋值 (临时块, 计算相对坐标块号 (i, 纵A))
        .如果真 (不等于 (测试块组 [临时块], 0))
            赋值 (可连通, 假)
            跳出循环 ()
        .如果真结束
        加入成员 (临时通路, 临时块)
    .变量循环尾 ()
    .如果真 (可连通)
        .计次循环首 (取数组成员数 (临时通路), i)
            加入成员 (通路, 临时通路 [i])
        .计次循环尾 ()
        返回 (真)
    .如果真结束
    
.如果真结束

 ' 纵向判断
.如果真 (等于 (横A, 横B))
    .如果真 (等于 (取绝对值 (相减 (纵A, 纵B)), 1)) ' 紧贴在一起
        返回 (真)
    .如果真结束
    赋值 (增量, 选择 (大于 (纵A, 纵B), -1, 1))
    赋值 (可连通, 真)
    .变量循环首 (相加 (纵A, 增量), 相减 (纵B, 增量), 增量, i)
        赋值 (临时块, 计算相对坐标块号 (横A, i))
        .如果真 (不等于 (测试块组 [临时块], 0))
            赋值 (可连通, 假)
            跳出循环 ()
        .如果真结束
        加入成员 (通路, 临时块)
    .变量循环尾 ()
    .如果真 (可连通)
        .计次循环首 (取数组成员数 (临时通路), i)
            加入成员 (通路, 临时通路 [i])
        .计次循环尾 ()
        返回 (真)
    .如果真结束
    
.如果真结束
返回 (假)

.子程序 连通双线测试, 逻辑型, , 
.参数 块A, 空白型, , 
.参数 块B, 空白型, , 
.参数 通路, 整数型, 数组, 
.参数 测试块组, 整数型, 数组, 

.局部变量 横A, 空白型, , , 
.局部变量 纵A, 空白型, , , 
.局部变量 横B, 空白型, , , 
.局部变量 纵B, 空白型, , , 
.局部变量 临时块, 空白型, , , 
.局部变量 临时通路, 整数型, , "0", 
.局部变量 i, 空白型, , , 

计算块相对坐标 (块A, 横A, 纵A)
计算块相对坐标 (块B, 横B, 纵B)

 ' 双向测试
.计次循环首 (2, i) ' 分别检查块A与块B,与其双线转折点(横A,纵B)、（横B,纵A）的连通性
    清除数组 (临时通路)
    赋值 (临时块, 多项选择 (i, 计算相对坐标块号 (横A, 纵B), 计算相对坐标块号 (横B, 纵A)))
    .如果真 (不等于 (测试块组 [临时块], 0))
        到循环尾 ()
    .如果真结束
    .如果真 (连通单线测试 (块A, 临时块, 临时通路, 测试块组))
        加入成员 (临时通路, 临时块)
        .如果真 (连通单线测试 (临时块, 块B, 临时通路, 测试块组))
            .计次循环首 (取数组成员数 (临时通路), i)
                加入成员 (通路, 临时通路 [i])
            .计次循环尾 ()
            返回 (真)
        .如果真结束
        
    .如果真结束
    
.计次循环尾 ()
返回 (假)

.子程序 连通三线测试, 逻辑型, , 
.参数 块A, 空白型, , 
.参数 块B, 空白型, , 
.参数 通路, 整数型, 数组, 
.参数 测试块组, 整数型, 数组, 
.参数 横向块数, 空白型, , 
.参数 纵向块数, 空白型, , 

.局部变量 横A, 空白型, , , 
.局部变量 纵A, 空白型, , , 
.局部变量 横B, 空白型, , , 
.局部变量 纵B, 空白型, , , 
.局部变量 i, 空白型, , , 
.局部变量 临时块, 空白型, , , 
.局部变量 临时坐标, 空白型, , , 
.局部变量 临时通路, 整数型, , "0", 
.局部变量 M, 空白型, , , 

计算块相对坐标 (块A, 横A, 纵A)
计算块相对坐标 (块B, 横B, 纵B)

 ' 从块A开始做四方探测
.计次循环首 (4, M)
    清除数组 (临时通路)
    赋值 (临时坐标, 多项选择 (M, 相减 (横A, 1), 相减 (纵A, 1), 相加 (纵A, 1), 相加 (横A, 1))) ' 分别探测左方,上方,下方,右方
    .判断循环首 (多项选择 (M, 大于 (临时坐标, 0), 大于 (临时坐标, 0), 小于或等于 (临时坐标, 纵向块数), 小于或等于 (临时坐标, 横向块数))) ' 是否已到边界
        赋值 (临时块, 多项选择 (M, 计算相对坐标块号 (临时坐标, 纵A), 计算相对坐标块号 (横A, 临时坐标), 计算相对坐标块号 (横A, 临时坐标), 计算相对坐标块号 (临时坐标, 纵A)))
        .如果真 (不等于 (测试块组 [临时块], 0))
            跳出循环 ()
        .如果真结束
        加入成员 (临时通路, 临时块)
        .如果真 (取反 (或者 (并且 (或者 (等于 (M, 1), 等于 (M, 4)), 等于 (临时坐标, 横B)), 并且 (或者 (等于 (M, 2), 等于 (M, 3)), 等于 (临时坐标, 纵B))))) ' 跳过已做过的单线测试
            .如果真 (连通双线测试 (临时块, 块B, 临时通路, 测试块组))
                复制数组 (通路, 临时通路)
                返回 (真)
            .如果真结束
            
        .如果真结束
        赋值 (临时坐标, 多项选择 (M, 相减 (临时坐标, 1), 相减 (临时坐标, 1), 相加 (临时坐标, 1), 相加 (临时坐标, 1)))
    .判断循环尾 ()
.计次循环尾 ()
返回 (假)

.子程序 连通判断, 逻辑型, , 
.参数 块A, 空白型, , 
.参数 块B, 空白型, , 
.参数 匿名参数_593, 整数型, 数组, 
.参数 测试块组, 整数型, 数组, 
.参数 横向块数, 空白型, , 
.参数 纵向块数, 空白型, , 

.如果真 (或者 (等于 (块A, 块B), 不等于 (测试块组 [块A], 测试块组 [块B]), 等于 (测试块组 [块A], 0), 等于 (测试块组 [块B], 0)))
    返回 (假)
.如果真结束
清除数组 (匿名参数_593)
.判断开始 (连通单线测试 (块A, 块B, 匿名参数_593, 测试块组))
    
.判断 (连通双线测试 (块A, 块B, 匿名参数_593, 测试块组))
    
.判断 (连通三线测试 (块A, 块B, 匿名参数_593, 测试块组, 横向块数, 纵向块数))
    
.默认
    返回 (假)
.判断结束
返回 (真)

.窗口程序集 窗口程序集2, , , 

.程序集变量 查询后字数, 整数型, , , 
.子程序 _按钮1_被单击, 空白型, , 
_按钮2_被单击 ()
.如果真 (大于 (到数值 (.内容), 查询后字数))
    赋值 (.内容, 到文本 (查询后字数))
.如果真结束
写配置项 (排行文件名, “set”, “字数”, .内容)
.如果 (等于 (.选中, 真))
    写配置项 (排行文件名, “set”, “复杂”, “1”)
.否则
    写配置项 (排行文件名, “set”, “复杂”, “0”)
.如果结束
.判断开始 (等于 (.选中, 真))
    写配置项 (排行文件名, “set”, “背景”, “天空”)
.判断 (等于 (.选中, 真))
    写配置项 (排行文件名, “set”, “背景”, “海洋”)
.判断 (等于 (.选中, 真))
    写配置项 (排行文件名, “set”, “背景”, “卡通”)
.判断 (等于 (.选中, 真))
    写配置项 (排行文件名, “set”, “背景”, “苹果”)
.判断 (等于 (.选中, 真))
    写配置项 (排行文件名, “set”, “背景”, “天使”)
.默认
    写配置项 (排行文件名, “set”, “背景”, .文件名)
.判断结束
写配置项 (排行文件名, “set”, “a1”, .内容)
写配置项 (排行文件名, “set”, “a2”, .内容)
写配置项 (排行文件名, “set”, “横”, .内容)
写配置项 (排行文件名, “set”, “竖”, .内容)
销毁 ()

.子程序 _设置窗口_创建完毕, 空白型, , 
.判断开始 (等于 (到数值 (读配置项 (排行文件名, “set”, “复杂”, “ 0”)), 1))
    赋值 (.选中, 真)
    赋值 (.选中, 假)
.默认
    赋值 (.选中, 假)
    赋值 (.选中, 真)
.判断结束
赋值 (.内容, 读配置项 (排行文件名, “set”, “字数”, ))
.如果 (等于 (.选中, 真))
    写配置项 (排行文件名, “set”, “复杂”, “1”)
.否则
    写配置项 (排行文件名, “set”, “复杂”, “0”)
.如果结束

.判断开始 (等于 (读配置项 (排行文件名, “set”, “背景”, ), “天空”))
    赋值 (.选中, 真)
    赋值 (.图片, #天空)
.判断 (等于 (读配置项 (排行文件名, “set”, “背景”, ), “海洋”))
    赋值 (.选中, 真)
    赋值 (.图片, #海洋)
.判断 (等于 (读配置项 (排行文件名, “set”, “背景”, ), “卡通”))
    赋值 (.选中, 真)
    赋值 (.图片, #卡通)
.判断 (等于 (读配置项 (排行文件名, “set”, “背景”, ), “苹果”))
    赋值 (.选中, 真)
    赋值 (.图片, #苹果)
.判断 (等于 (读配置项 (排行文件名, “set”, “背景”, ), “天使”))
    赋值 (.选中, 真)
    赋值 (.图片, #天使)
.默认
    
.判断结束
赋值 (.内容, 读配置项 (排行文件名, “set”, “a1”, ))
赋值 (.内容, 读配置项 (排行文件名, “set”, “a2”, ))
赋值 (.内容, 读配置项 (排行文件名, “set”, “横”, ))
赋值 (.内容, 读配置项 (排行文件名, “set”, “竖”, ))
_按钮2_被单击 ()

.子程序 _天空_被单击, 空白型, , 
赋值 (.图片, #天空)

.子程序 _海洋_被单击, 空白型, , 
赋值 (.图片, #海洋)

.子程序 _卡通_被单击, 空白型, , 
赋值 (.图片, #卡通)

.子程序 _苹果_被单击, 空白型, , 
赋值 (.图片, #苹果)

.子程序 _天使_被单击, 空白型, , 
赋值 (.图片, #天使)

.子程序 _按钮2_被单击, 空白型, , 
.局部变量 句柄, 整数型, , , 
.局部变量 记录数, 整数型, , , 

赋值 (句柄, _启动窗口.查询 (., 相加 (“SELECT count(*) FROM [字库] WHERE [笔画数]>=”, 到文本 (.内容), “ And [笔画数]<=”, 到文本 (.内容), “ And [是否使用]=0”)))
赋值 (记录数, _启动窗口.读 (., 句柄, 1))
赋值 (查询后字数, 记录数)
赋值 (.内容, 相加 (“有：”, 到文本 (记录数), “字”))
_启动窗口.关闭记录集 (., 句柄)


.子程序 _单选框2_被单击, 空白型, , 
赋值 (.内容, “11”)
赋值 (.内容, “6”)
赋值 (.内容, “20”)

.子程序 _单选框3_被单击, 空白型, , 
赋值 (.内容, “13”)
赋值 (.内容, “8”)
赋值 (.内容, “25”)


.子程序 _单选框4_被单击, 空白型, , 
赋值 (.内容, “17”)
赋值 (.内容, “10”)
赋值 (.内容, “30”)


.子程序 _单选框5_被单击, 空白型, , 
赋值 (.内容, “19”)
赋值 (.内容, “12”)
赋值 (.内容, “35”)


.子程序 _竖_内容被改变, 空白型, , 
.如果真 (并且 (不等于 (.内容, “6”), 不等于 (.内容, “8”), 不等于 (.内容, “10”), 不等于 (.内容, “12”), 不等于 (.内容, “18”), 不等于 (.内容, “20”)))
    连续赋值 (假, .选中, .选中, .选中, .选中)
    赋值 (.选中, 真)
.如果真结束


.子程序 _横_内容被改变, 空白型, , 
.如果真 (并且 (不等于 (.内容, “11”), 不等于 (.内容, “13”), 不等于 (.内容, “17”), 不等于 (.内容, “19”), 不等于 (.内容, “25”), 不等于 (.内容, “30”)))
    连续赋值 (假, .选中, .选中, .选中, .选中)
    赋值 (.选中, 真)
.如果真结束


.子程序 _按钮3_被单击, 空白型, , 
.如果真 (打开 ())
    赋值 (.图片, 读入文件 (.文件名))
    连续赋值 (假, .选中, .选中, .选中, .选中, .选中)
.如果真结束


.子程序 _单选框6_被单击, 空白型, , 
赋值 (.内容, “1”)
赋值 (.内容, “6”)
_按钮2_被单击 ()

.子程序 _单选框7_被单击, 空白型, , 
赋值 (.内容, “7”)
赋值 (.内容, “8”)
_按钮2_被单击 ()

.子程序 _单选框8_被单击, 空白型, , 
赋值 (.内容, “9”)
赋值 (.内容, “10”)
_按钮2_被单击 ()

.子程序 _单选框9_被单击, 空白型, , 
赋值 (.内容, “11”)
赋值 (.内容, “12”)
_按钮2_被单击 ()

.子程序 _单选框10_被单击, 空白型, , 
赋值 (.内容, “13”)
赋值 (.内容, “14”)
_按钮2_被单击 ()


.子程序 _单选框11_被单击, 空白型, , 
赋值 (.内容, “15”)
赋值 (.内容, “18”)
_按钮2_被单击 ()


.子程序 _单选框12_被单击, 空白型, , 
赋值 (.内容, “19”)
赋值 (.内容, “30”)
_按钮2_被单击 ()

.子程序 _单选框13_被单击, 空白型, , 
赋值 (.内容, “25”)
赋值 (.内容, “18”)
赋值 (.内容, “40”)


.子程序 _单选框14_被单击, 空白型, , 
赋值 (.内容, “30”)
赋值 (.内容, “20”)
赋值 (.内容, “45”)


.子程序 _按钮4_被单击, 空白型, , 
销毁 ()


.子程序 _按钮5_被单击, 空白型, , 
清除排行榜 ()

.子程序 _单选框1_被单击, 空白型, , 


.窗口程序集 窗口程序集3, , , 

.子程序 _按钮1_被单击, 空白型, , 
.局部变量 句柄, 整数型, , , 

赋值 (句柄, _启动窗口.查询 (., 相加 (“SELECT * FROM 字库 WHERE [汉字]='”, 取文本左边 (删全部空 (.内容), 2), “'”)))
_启动窗口.到首记录 (., 句柄)
.如果 (并且 (等于 (_启动窗口.首记录前 (., 句柄), 真), 等于 (_启动窗口.尾记录后 (., 句柄), 真)))
    信息框 (“没有找到该汉字！”, 0, )
.否则
    赋值 (.内容, _启动窗口.读 (., 句柄, “内容”))
.如果结束
_启动窗口.关闭记录集 (., 句柄)


.窗口程序集 窗口程序集4, , , 

.子程序 _按钮1_被单击, 空白型, , 
销毁 ()



 ' 不属于任何一个程序集、类模块的函数：
