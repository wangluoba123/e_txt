 ' 文件类型：Windows窗口程序

 ' 程序名称：智力拼版
 ' 程序描述：使用了“图片位置数组”使用程序中的各个小图片框可以自由移动；为了使用随意移动后游戏可以正常使用。请保证以下几点：各个小图片框的大小要一致；在初始化做好对应的设置；设定各小图片框之间没有间距（为了美观）；图片框的排列顺序应与“分割图片”子程序中的一致（如果有更改过）。

　　修改分割数很容易了，只要添加图片框，并在初始化中设置相应个数，就可以了，程序中的其它内容无须修改。
 ' 程序作者：余力
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：0591-85790675
 ' 传真号码：
 ' 电子信箱：yuli@fjqx.net
 ' 主页地址：http://personal.fjqx.net/yuli/ravmate.htm
 ' 版权声明：智力拼图（优化通用版）

修改分割数很容易了，只要添加图片框，并在初始化中设置相应个数，就可以了，程序中的其它内容无须修改。
 ' 版本号：1.3
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 561
    高度 = 432
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “智力拼版”
    帮助文件名 = “”



.图片 默认图, " ' 已保存到：D:\易语言学习\Data\智力拼图游戏.e\默认图", , 作者相片
.图片 拼板1, " ' 已保存到：D:\易语言学习\Data\智力拼图游戏.e\拼板1", , 花瓶


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 3 7 系统核心支持库
 ' xplib 7F54B9CE8887428dBA9CEEB94CEF4C72 1 1 XP风格界面库





.DLL命令 系统关于对话框, 空白型, "", "ShellAboutA", , 
    .参数 窗口句柄, 整数型, , 
    .参数 应用程序标题, 文本型, , 
    .参数 其他信息, 文本型, , 
    .参数 图标句柄, 整数型, , 

.窗口程序集 窗口程序集1, , , 使用了“图片位置数组”使用程序中的各个小图片框可以自由移动；为了使用随意移动后游戏可以正常使用。请保证以下几点：各个小图片框的大小要一致；在初始化做好对应的设置；设定各小图片框之间没有间距（为了美观）；图片框的排列顺序应与“分割图片”子程序中的一致（如果有更改过）。

.程序集变量 图片号, 整数型, , , 
.程序集变量 文件名, 文本型, , , 
.程序集变量 图片框数组, 图片框, , "12", 用于存放分割后的小图片。
.程序集变量 图片框位置数组, 整数型, , "12,2", 为了程序易于修改同时增强通用性，使用数组方式记录各小图片的原始位置，记录内容：第一维为左边，第二维为顶边。
.程序集变量 时间, 日期时间型, , , 
.程序集变量 游戏图片, 字节集, , , 游戏中用来拼接的图片。
.程序集变量 小图片宽度, 整数型, , , 
.程序集变量 小图片高度, 整数型, , , 
.程序集变量 分割后小图片数, 整数型, , , 用于存放所要分割成小图片的数量。
.程序集变量 主图片框左边, 整数型, , , 
.程序集变量 主图片框顶边, 整数型, , , 
.程序集变量 移动次数, 整数型, , , 记录用户总共移动多少次图片。
.程序集变量 横向图片数, 整数型, , , 
.程序集变量 纵向图片数, 整数型, , , 
.程序集变量 可以移动, 逻辑型, , , 
.程序集变量 拼板序号, 整数型, , , 
.程序集变量 现有拼板图片, 字节集, , , 
.子程序 __启动窗口_创建完毕, 空白型, , 
未知支持库函数_0 (1)
初始化 ()
置拼板图片 (#默认图)

.子程序 _关于按扭_被单击, 空白型, , 

系统关于对话框 (_启动窗口.取窗口句柄 (), “智力拼版 ―― 余力 设计  QQ:28076545 yuli@fjqx.net”, 相加 (“程序设计：余力 版权所有”, #换行符, “　　――福建省侨兴轻工学校（计算机管理中心）”), 0)


.子程序 装载图片, 空白型, , 
赋值 (.宽度, 图片号.取图片宽度 ())
赋值 (.高度, 图片号.取图片高度 ())
赋值 (.底图, 游戏图片)
赋值 (.图片, .底图)
赋值 (.高度, 整除 (.高度, 纵向图片数))
赋值 (.宽度, 整除 (.宽度, 横向图片数))

分割图片 ()
_重新排列按扭_被单击 ()


.子程序 分割图片, 空白型, , 界面的图片框排列，一定要跟用于最里圈的项目相一致。如果最里圈的循环记录的是横向数量的话，则图片框应按横向顺序排列设定的数后再从下一行开始顺序排列。
.局部变量 横向计数, 整数型, , , 
.局部变量 纵向计数, 整数型, , , 
.局部变量 分割成的单个宽度, 整数型, , , 
.局部变量 分割成的单个高度, 整数型, , , 
.局部变量 次数, 整数型, , , 

赋值 (分割成的单个宽度, 整除 (.宽度, 横向图片数))
赋值 (分割成的单个高度, 整除 (.高度, 纵向图片数))
.计次循环首 (纵向图片数, 纵向计数) ' 纵向排列数为“纵向计数”值的个数。
    .计次循环首 (横向图片数, 横向计数) ' 横向排列为“横向计数”值的个数；横向数在最里圈，表示排列图片框为按横向排列。
        赋值 (次数, 相加 (次数, 1))
        
        相乘 (相减 (横向计数, 1), 分割成的单个宽度).复制 (相乘 (相减 (纵向计数, 1), 分割成的单个高度), 分割成的单个宽度, 分割成的单个高度, , 0, 0, )
        赋值 (图片框数组 [次数], 图片, .取图片 ())
    .计次循环尾 ()
.计次循环尾 ()

.子程序 _重新排列按扭_被单击, 空白型, , 
.如果 (等于 (.图片, {  }))
    信息框 (“请先载入图片！”, 48, “没图片怎么拼图啊？”)
.否则
    赋值 (.图片, .取图片 ())
    赋值 (.可视, 假)
    重排小图片 ()
    主图片框左边.移动 (主图片框顶边, 小图片宽度, 小图片高度)
    
.如果结束



.子程序 _时钟1_周期事件, 空白型, , 
.局部变量 经过时间, 整数型, , , 

.如果真 (大于 (移动次数, 0))
    赋值 (经过时间, 取时间间隔 (取现行时间 (), 时间, #秒))
    赋值 (.标题, 相加 (“您用了：”, 到文本 (整除 (经过时间, 60)), “分”, 到文本 (求余数 (经过时间, 60)), “秒”, “ ”, “移动图片”, 到文本 (移动次数), “次”))
    
.如果真结束


.子程序 重排小图片, 空白型, , 
置随机数种子 ()
.计次循环首 (1000, )
    移动 (图片框数组 [取随机数 (1, 相减 (分割后小图片数, 1))])
.计次循环尾 ()

.子程序 初始化, 空白型, , 
.局部变量 计数, 整数型, , , 

赋值 (分割后小图片数, 12)
赋值 (横向图片数, 3)
赋值 (纵向图片数, 4)


赋值 (图片框数组 [1], )
赋值 (图片框数组 [2], )
赋值 (图片框数组 [3], )
赋值 (图片框数组 [4], )
赋值 (图片框数组 [5], )
赋值 (图片框数组 [6], )
赋值 (图片框数组 [7], )
赋值 (图片框数组 [8], )
赋值 (图片框数组 [9], )
赋值 (图片框数组 [10], )
赋值 (图片框数组 [11], )
赋值 (图片框数组 [12], )

.计次循环首 (分割后小图片数, 计数)
    赋值 (图片框位置数组 [计数] [1], 图片框数组 [计数], 左边)
    赋值 (图片框位置数组 [计数] [2], 图片框数组 [计数], 顶边)
    输出调试文本 (相加 (到文本 (图片框数组 [计数], 左边), “  ”, 到文本 (图片框数组 [计数], 顶边), #换行符))
    赋值 (计数, 相加 (计数, 1))
.计次循环尾 ()

赋值 (小图片宽度, .宽度)
赋值 (小图片高度, .高度)

图片框位置数组.移动 ( [1] [1], 图片框位置数组 [1] [2], 相乘 (小图片宽度, 横向图片数), 相乘 (小图片高度, 纵向图片数))

赋值 (主图片框左边, 相加 (.左边, 相乘 (.宽度, 横向图片数)))
赋值 (主图片框顶边, 相加 (.顶边, 相乘 (.高度, 相减 (纵向图片数, 1))))

事件转移 ()
事件转移 ()
事件转移 ()
事件转移 ()
事件转移 ()
事件转移 ()
事件转移 ()
事件转移 ()
事件转移 ()
事件转移 ()
事件转移 ()


.子程序 移动, 空白型, , 
.参数 目标图片框, 图片框, , 

赋值 (可以移动, 真)

.判断开始 (并且 (等于 (目标图片框.左边, 相减 (.左边, 小图片宽度)), 等于 (目标图片框.顶边, .顶边))) ' 目标图片框在在左边，向在左边移动。
    赋值 (目标图片框.左边, 相加 (目标图片框.左边, 小图片宽度))
    赋值 (.左边, 相减 (.左边, 小图片宽度))
    
.默认
    .判断开始 (并且 (等于 (目标图片框.左边, .左边), 等于 (目标图片框.顶边, 相减 (.顶边, 小图片高度)))) ' 目标图片框在上方，向上移动。
        赋值 (目标图片框.顶边, 相加 (目标图片框.顶边, 小图片高度))
        赋值 (.顶边, 相减 (.顶边, 小图片高度))
        
    .默认
        .判断开始 (并且 (等于 (目标图片框.左边, 相加 (.左边, 小图片宽度)), 等于 (目标图片框.顶边, .顶边))) ' 目标图片框在在右边，向在右边移动。
            赋值 (目标图片框.左边, 相减 (目标图片框.左边, 小图片宽度))
            赋值 (.左边, 相加 (.左边, 小图片宽度))
            
        .默认
            
            .判断开始 (并且 (等于 (目标图片框.左边, .左边), 等于 (目标图片框.顶边, 相加 (.顶边, 小图片高度)))) ' 目标图片框在在下方，向在下方移动。
                赋值 (目标图片框.顶边, 相减 (目标图片框.顶边, 小图片高度))
                赋值 (.顶边, 相加 (.顶边, 小图片高度))
                
            .默认
                
                赋值 (可以移动, 假)
            .判断结束
            
        .判断结束
        
    .判断结束
    
.判断结束



.子程序 _图片框12_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 被点击的图片框, 图片框, , , 
.局部变量 计数, 整数型, , , 
.局部变量 是否拼完, 逻辑型, , , 

赋值 (被点击的图片框, 取事件组件 ())

移动 (被点击的图片框)
.如果真 (可以移动)
    赋值 (移动次数, 相加 (移动次数, 1))
    
    .如果真 (等于 (移动次数, 1)) ' 如果是首次进行移动，则进行计时。
        赋值 (时间, 取现行时间 ())
        赋值 (.时钟周期, 500)
    .如果真结束
    
.如果真结束


 ' 每移动一个图片就进行一下以下的判断，看是否拼图完成。
.计次循环首 (相减 (分割后小图片数, 1), 计数)
    .如果 (并且 (等于 (图片框数组 [计数], 左边, 图片框位置数组 [计数] [1]), 等于 (图片框数组 [计数], 顶边, 图片框位置数组 [计数] [2])))
        赋值 (是否拼完, 真)
        
    .否则
        赋值 (是否拼完, 假)
        跳出循环 () ' 只要有一个不等，就是还没有拼好图，就不用再比较了，直接跳出。
    .如果结束
    
    赋值 (计数, 相加 (计数, 1)) ' 计数一定要递加，如果这句没有，则变成自动完成了。：）
    处理事件 ()
.计次循环尾 ()

_时钟1_周期事件 () ' 由于要实时显示修改次数，所以在这里加入运行时钟周期事件。

.如果真 (是否拼完)
    赋值 (.时钟周期, 0)
    赋值 (移动次数, 0)
    
    赋值 (.可视, 真)
    赋值 (.图片, .取图片 ())
    图片框位置数组.移动 ( [1] [1], 图片框位置数组 [1] [2], 相乘 (小图片宽度, 横向图片数), 相乘 (小图片高度, 纵向图片数))
    信息框 (相加 (“成功！”, .标题), 64, “恭喜”)
    赋值 (.标题, “点击参考图片，选其它图片再来试一下”)
    
.如果真结束



.子程序 _参考图片图片框_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.初始目录, 取运行目录 ())
打开 ()
赋值 (文件名, .文件名)
.如果真 (不等于 (文件名, “”))
    置拼板图片 (读入文件 (文件名))
.如果真结束


.子程序 __启动窗口_可否被关闭, 逻辑型, , 
卸载图片 (图片号)
.判断循环首 (大于 (_启动窗口.高度, 30))
    赋值 (_启动窗口.高度, 相减 (_启动窗口.高度, 5))
    延时 (10)
    
    .如果真 (小于或等于 (_启动窗口.高度, 30))
        跳出循环 ()
    .如果真结束
    
.判断循环尾 ()

.判断循环首 (大于 (_启动窗口.宽度, 200)) ' 宽度不能太小，一般要大于等于标宽度，否则会死循环出错。
    赋值 (_启动窗口.宽度, 相减 (_启动窗口.宽度, 5))
    延时 (10)
    .如果真 (小于或等于 (_启动窗口.宽度, 200))
        跳出循环 ()
    .如果真结束
    
.判断循环尾 ()


.子程序 __启动窗口_将被销毁, 空白型, , 
系统关于对话框 (0, “智力拼版 ―― 余力 设计  QQ:28076545 yuli@fjqx.net”, 相加 (“程序设计：余力 版权所有”, #换行符, “　　――福建省侨兴轻工学校（计算机管理中心）”), 0)


.子程序 _颜色选择器1_颜色被改变, 空白型, , 
赋值 (.背景颜色, .颜色)

.子程序 置拼板图片, 空白型, , 
.参数 图片数据, 字节集, , 

赋值 (游戏图片, 图片数据)

.如果真 (不等于 (游戏图片, 现有拼板图片))
    赋值 (现有拼板图片, 游戏图片)
    卸载图片 (图片号)
    赋值 (图片号, 载入图片 (游戏图片))
    装载图片 ()
    
.如果真结束


.子程序 _参考图片图片框_鼠标右键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (拼板序号, 相加 (拼板序号, 1))
.如果真 (大于 (拼板序号, 2)) ' 根据自带图片的个数设置这个数值。
    赋值 (拼板序号, 1)
.如果真结束

.如果 (等于 (拼板序号, 1))
    置拼板图片 (#拼板1)
    
.否则
    
    置拼板图片 (#默认图)
    
.如果结束



 ' 不属于任何一个程序集、类模块的函数：
