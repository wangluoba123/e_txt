 ' 文件类型：Windows窗口程序

 ' 程序名称：易容大师 皮肤文件生成器
 ' 程序描述：
 ' 程序作者：【古木软件工作组】
 ' 邮政编码：
 ' 联系地址：中国，湖北，武汉，武昌
 ' 联系电话：13886174425
 ' 传真号码：
 ' 电子信箱：zeng_goomoo@yahoo.com.cn
 ' 主页地址：http://goomoo.cn
 ' 版权声明：
 ' 版本号：1.1
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 637
    高度 = 588
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 1
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 真
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “”
    帮助文件名 = “”

窗口 窗口辅助
    左边 = 50
    顶边 = 50
    宽度 = 380
    高度 = 250
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 假
    禁止 = 假

窗口 关于窗口
    左边 = 50
    顶边 = 50
    宽度 = 372
    高度 = 225
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = 16777215 '  0xFFFFFF
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “”
    帮助文件名 = “”

窗口 教程窗口
    左边 = 50
    顶边 = 50
    宽度 = 525
    高度 = 369
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 1
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 真
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 3
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “”
    帮助文件名 = “”

窗口 窗口每日一帖
    左边 = 50
    顶边 = 50
    宽度 = 425
    高度 = 271
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “易容大师　每日一帖”
    帮助文件名 = “”

窗口 窗口采集像素点
    左边 = 50
    顶边 = 50
    宽度 = 367
    高度 = 271
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 3
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “”
    帮助文件名 = “”



.常量 程序标题, "“易容大师-易语言皮肤生成器”", , 
.常量 程序版本, "“1.1”", , 
.常量 皮肤文件标识, "“ESKIN”", , 
.常量 主版本号, "1", , 为整数型
.常量 次版本号, "1", , 
.常量 配置文件名, "“yrds_cfg.dat”", , 程序配置文件
.常量 注册文件名, "“yrds_reg.dat”", , 注册文件名
.常量 帮助文明名, "“yrds_help.chm”", , 
.常量 注册页面, "“http://whcfkj.cn/goomoo/reg.htm”", , 
.常量 教程页面, "“http://whcfkj.cn/goomoo/tut/index.htm”", , 
.常量 控件类型_窗口, "0", , 
.常量 控件类型_图形按钮, "1", , 
.常量 控件类型_画板, "2", , 
.常量 控件类型_标签, "3", , 
.常量 控件类型_水平滑块, "4", , 
.常量 控件类型_垂直滑块, "5", , 
.常量 控件类型_进度条, "6", , 
.常量 控件类型_其他, "7", , 非需要贴图的控件类型，需要通过UserData找到其句柄
.常量 , , , 
.常量 超级菜单_底色, "0", , 
.常量 超级菜单_文本颜色, "1", , 
.常量 超级菜单_禁止文本颜色, "2", , 
.常量 超级菜单_点燃颜色, "3", , 
.常量 超级菜单_渐变颜色1, "4", , 
.常量 超级菜单_渐变颜色2, "5", , 
.常量 超级菜单_菜单条点燃颜色1, "6", , 
.常量 超级菜单_菜单条点燃颜色2, "7", , 
.常量 超级菜单_点燃区边框颜色, "8", , 
.常量 超级菜单_分割条颜色, "9", , 
.常量 , , , 
.常量 主分割符, "“!(&^”", , 1976
.常量 次分割符, "“)(@#”", , 0923
.常量 图片_正常, "1", , 
.常量 图片_鼠标经过, "2", , 
.常量 图片_鼠标按下, "3", , 
.常量 图片_灰化, "4", , 
.常量 , , , 
.常量 GWL_WNDPROC, "-4", , 
.常量 WM_DROPFILES, "563", , 
.常量 , , , 
.图片 图片_图形按钮, " ' 已保存到：D:\易语言学习\Data\eSkin.e\图片_图形按钮", , 
.图片 图片_画板, " ' 已保存到：D:\易语言学习\Data\eSkin.e\图片_画板", , 
.图片 图片_标签, " ' 已保存到：D:\易语言学习\Data\eSkin.e\图片_标签", , 
.图片 图片_滑块, " ' 已保存到：D:\易语言学习\Data\eSkin.e\图片_滑块", , 
.图片 图片_进度条, " ' 已保存到：D:\易语言学习\Data\eSkin.e\图片_进度条", , 
.图片 图片_其他, " ' 已保存到：D:\易语言学习\Data\eSkin.e\图片_其他", , 
.常量 TH32CS_INHERIT, "-2147483648", , 
.常量 TH32CS_SNAPALL, "15", , 
.常量 TH32CS_SNAPHEAPLIST, "1", , 
.常量 TH32CS_SNAPMODULE, "8", , 
.常量 TH32CS_SNAPPROCESS, "2", , 
.常量 TH32CS_SNAPTHREAD, "4", , 
.常量 PROCESS_TERMINATE, "1", , 
.常量 HIGH_PRIORITY_CLASS, "128", , 
.常量 IDLE_PRIORITY_CLASS, "64", , 
.常量 NORMAL_PRIORITY_CLASS, "32", , 
.常量 REALTIME_PRIORITY_CLASS, "256", , 
.常量 PROCESS_SET_INFORMATION, "512", , 
.图片 模板程序, " ' 已保存到：D:\易语言学习\Data\eSkin.e\模板程序", , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 4 系统核心支持库
 ' iext 27bb20fdd3e145e4bee3db39ddd6e64c 1 2 扩展界面支持库一
 ' HtmlView 5014D8FA6DCA40b68FA626D8183666EB 1 1 超文本浏览框支持库
 ' ewizard F4252F5EB88342579B4E216FC410E5D7 1 0 易向导支持库
 ' shell 52F260023059454187AF826A3C07AF2A 1 0 操作系统界面功能支持库
 ' ExtMenu 9909FBB013704cfa8FE7E739DB7172DE 1 6 超级菜单支持库




数据类型 PROCESSENTRY32, , 
    .成员 dwSize, 整数型, , , 
    .成员 cntUsage, 整数型, , , 
    .成员 th32ProcessID, 整数型, , , 
    .成员 th32DefaultHeapID, 整数型, , , 
    .成员 th32ModuleID, 整数型, , , 
    .成员 cntThreads, 整数型, , , 
    .成员 th32ParentProcessID, 整数型, , , 
    .成员 pcPriClassBase, 整数型, , , 
    .成员 dwFlags, 整数型, , , 
    .成员 szExeFile, 字节型, , "256", 

数据类型 POINTAPI, , 坐标;
    .成员 横向位置, 整数型, , , 
    .成员 纵向位置, 整数型, , , 

数据类型 RECT, , 矩形;
    .成员 左边, 整数型, , , 
    .成员 上边, 整数型, , , 
    .成员 右边, 整数型, , , 
    .成员 下边, 整数型, , , 

.全局变量 全工程文件名, 文本型, , , 
.全局变量 全图片数组, 字节集, , "4", 保存界面图片的数组
.全局变量 全窗口宽度, 空白型, , , 
.全局变量 全窗口高度, 空白型, , , 
.全局变量 全已改, 逻辑型, , , 工程是否已被修改
.全局变量 全正在生成图片文件, 逻辑型, , , 正在生成图片和配置文件，以防鼠标绘制十字线
.全局变量 全已刷新, 逻辑型, , , 已刷新的标志，用来清楚画板上留下的十字线残影。
.全局变量 全控件矩形数组, 控件矩形, , "0", 
.全局变量 全辅助线数组, 辅助线, , "0", 
.全局变量 全辅助线交点数组, POINTAPI, , "0", 
.全局变量 全当前选择索引, 整数型, , , 
.全局变量 全图片文件名, 文本型, , "4", 
.全局变量 全自动标记, 整数型, , , 
.全局变量 全缩放比, 双精度小数型, , , 
.全局变量 全图片号, 整数型, , , 
.全局变量 进程管理, 进程, , , 
.全局变量 全每日一帖索引, 整数型, , , 
.全局变量 全是否显示每日一帖, 逻辑型, , , 

.DLL命令 DragAcceptFiles, 整数型, "", "", , 
    .参数 hWnd, 整数型, , 
    .参数 fAccept, 逻辑型, , 

.DLL命令 SetWindowLongA, 整数型, "", "", , 
    .参数 hWnd, 整数型, , 
    .参数 nIndex, 整数型, , 
    .参数 dwNewLong, 子程序指针, , 

.DLL命令 GetWindowLongA, 整数型, "", "", , 
    .参数 hWnd, 整数型, , 
    .参数 nIndex, 整数型, , 

.DLL命令 DragQueryFile, 整数型, "", "", , 
    .参数 hDrop, 整数型, , 
    .参数 iFile, 整数型, , 
    .参数 lpszFile, 文本型, 传址, 
    .参数 cch, 整数型, , 

.DLL命令 SetPriorityClass, 逻辑型, "", "", , 
    .参数 hProcess, 整数型, , 
    .参数 dwPriorityClass, 整数型, , 

.DLL命令 GetCurrentProcess, 整数型, "", "", , 

.DLL命令 CallWindowProcA, 整数型, "", "", , 
    .参数 lpPrevWndFunc, 整数型, , 可能为一个 WNDPROC 子程序指针。
    .参数 hWnd, 整数型, , 
    .参数 Msg, 整数型, , 
    .参数 wParam, 整数型, , 
    .参数 lParam, 整数型, , 

.DLL命令 IsDebuggerPresent, 逻辑型, "", "", , 

.DLL命令 CreateToolhelp32Snapshot, 整数型, "", "CreateToolhelp32Snapshot", , 返回快照句柄
    .参数 dwFlags, 整数型, , 
    .参数 th32ProcessID, 整数型, , 

.DLL命令 Process32First, 逻辑型, "", "Process32First", , 
    .参数 hSnapshot, 整数型, , 
    .参数 lppe, PROCESSENTRY32, , 

.DLL命令 Process32Next, 逻辑型, "", "Process32Next", , 
    .参数 hSnapshot, 整数型, , 
    .参数 lppe, PROCESSENTRY32, , 

.DLL命令 CloseHandle, 逻辑型, "kernel32", "CloseHandle", , 
    .参数 handle, 整数型, , 

.DLL命令 OpenProcess, 整数型, "", "OpenProcess", , 
    .参数 dwDesiredAccess, 空白型, , 
    .参数 bInheritHandle, 空白型, , 
    .参数 dwProcessId, 空白型, , 

.DLL命令 TerminateProcess, 逻辑型, "", "TerminateProcess", , 
    .参数 hProcess, 空白型, , 
    .参数 uExitCode, 空白型, , 

.DLL命令 GetCurrentProcessId, 整数型, "", "GetCurrentProcessId", , 

.DLL命令 API_取窗口区域位置, 整数型, "user32", "ClientToScreen", , 判断窗口内以客户区坐标表示的一个点的屏幕坐标  非零表示成功，零表示失败
    .参数 窗口句柄, 整数型, , 判断客户区坐标时那个窗口的句柄
    .参数 位置变量, POINTAPI, , POINTAPI，用hwnd窗口的客户区坐标表示的点，这个参数会包含屏幕坐标系统中相同的点;

.DLL命令 API_取窗口矩形, 整数型, "user32", "GetWindowRect", , 获得整个窗口的范围矩形，窗口的边框、标题栏、滚动条及菜单等都在这个矩形内  非零表示成功，零表示失败。会设置GetLastError
    .参数 窗口句柄, 整数型, , 想获得范围矩形的那个窗口的句柄
    .参数 矩形区域, RECT, , RECT，屏幕坐标中随同窗口装载的矩形;

.DLL命令 API_PtInRect, 逻辑型, "user32", "PtInRect", , 这个函数判断指定的点是否位于矩形lpRect内部  非零表示成功，零表示失败。会设置GetLastError
    .参数 lpRect, RECT, , 
    .参数 x, 整数型, , 
    .参数 y, 整数型, , 

.DLL命令 API_ScreenToClient, 整数型, "user32", "ScreenToClient", , 判断屏幕上一个指定点的客户区坐标  非零表示成功，零表示失败
    .参数 hwnd, 整数型, , 一个窗口的句柄，该窗口定义了要使用的客户区坐标系统
    .参数 lpPoint, POINTAPI, , POINTAPI，屏幕坐标系统中包含了屏幕点的结构。这个函数会随同相应的客户区坐标（由hwnd决定）载入结构;

.DLL命令 API_取鼠标位置, 整数型, "user32", "GetCursorPos", , 获取鼠标指针的当前位置  非零表示成功，零表示失败。会设置GetLastError
    .参数 位置, POINTAPI, , POINTAPI，随同指针在屏幕像素坐标中的位置载入的一个结构;

.DLL命令 API_取焦点窗口, 整数型, "user32", "GetFocus", , 获得拥有输入焦点的窗口的句柄  拥有焦点的那个窗口的句柄。如没有窗口拥有输入焦点，则返回零

.DLL命令 API_限制指针活动区域, 整数型, "user32", "ClipCursor", , 将指针限制到指定区域。ClipCursorBynum是一个别名，允许我们清除以前设置的指针剪切区域  非零表示成功，零表示失败。会设置GetLastError
    .参数 矩形区域, RECT, , RECT，指定一个矩形，用像素屏幕坐标系统表示。鼠标指针必须在这个区域内运动。如使用函数的ClipCursorBynum形式，则可将参数设为Long值，用它传递一个0，禁止指针剪切，恢复常规运作状态;

.DLL命令 API_取前台窗口, 整数型, "user32", "GetForegroundWindow", , 获得前台窗口的句柄。这里的“前台窗口”是指前台应用程序的活动窗口  前台窗口的句柄

.DLL命令 EnableWindow, 整数型, "user32", "EnableWindow", , 
    .参数 窗口句柄, 整数型, , 窗口句柄
    .参数 标识符, 逻辑型, , 非零允许窗口，零禁止;

.DLL命令 API_SetCursorPos, 整数型, "user32", "SetCursorPos", , 设置指针的位置  非零表示成功，零表示失败。会设置GetLastError
    .参数 x, 整数型, , 
    .参数 y, 整数型, , 

.DLL命令 API_ShellExecute, 整数型, "shell32.dll", "ShellExecuteA", , ;    查找与指定文件关联在一起的程序的文件名  非零表示成功，零表示失败。会设置GetLastError
    .参数 hwnd, 整数型, , 指定一个窗口的句柄，有时候，windows程序有必要在创建自己的主窗口前显示一个消息框
    .参数 lpOperation, 文本型, , 指定字串“open”来打开lpFlie文档，或指定“Print”来打印它
    .参数 lpFile, 文本型, , 想用关联程序打印或打开一个程序名或文件名
    .参数 lpParameters, 文本型, , 如lpszFlie是可执行文件，则这个字串包含传递给执行程序的参数
    .参数 lpDirectory, 文本型, , 想使用的完整路径
    .参数 nShowCmd, 整数型, , 定义了如何显示启动程序的常数值。参考ShowWindow函数的nCmdShow参数;

.DLL命令 API_CreateThread, 整数型, "kernel32", "CreateThread", , 建立新的线索
    .参数 lpThreadAttributes, 整数型, , 
    .参数 dwStackSize, 整数型, , 
    .参数 lpStartAddress, 子程序指针, , 
    .参数 lpParameter, 整数型, , 
    .参数 dwCreationFlags, 整数型, , 
    .参数 lpThreadId, 整数型, 传址, 

.窗口程序集 启动窗口窗口程序集, , , 

.程序集变量 集鼠标已被按下, 逻辑型, , "5", 分别代表主界面画板、控件的四个图片画板
.程序集变量 集正在绘制, 逻辑型, , , 是否正在绘制矩形
.程序集变量 集鼠标已被拖动, 逻辑型, , , 
.程序集变量 集选择夹旧窗口过程, 空白型, , , 
.程序集变量 lx, 空白型, , , last x,last y
.程序集变量 ly, 空白型, , , 
.程序集变量 lxa, 空白型, , , 
.程序集变量 lya, 空白型, , , 
.程序集变量 ox, 空白型, , , 
.程序集变量 oy, 空白型, , , 
.子程序 __启动窗口_创建完毕, 空白型, , 
 ' XP风格 (#银色风格)
赋值 (., 相加 (#程序标题, #程序版本))
赋值 (.标题, 相加 (.标题, 字符 (9), “ESC”))
赋值 (.标题, 相加 (“[加入水平辅助线]”, 字符 (9), “-”))
赋值 (.标题, 相加 (“[加入垂直辅助线]”, 字符 (9), “|”))
赋值 (.标题, 相加 (“[同时加入水平和垂直辅助线]”, 字符 (9), “+”))
赋值 (.标题, 相加 (“[删除光标附近的辅助线]”, 字符 (9), “Ctrl+Del”))

设置控件锚点 (取窗口句柄 (), 真, 真, 真, 真)
设置控件锚点 (取窗口句柄 (), 假, 真, 真, 真)
设置控件锚点 (取窗口句柄 (), 真, 真, 真, 真)
设置控件锚点 (取窗口句柄 (), 假, 真, 真, 真)

赋值 (_启动窗口., 800)
赋值 (_启动窗口., 580)
赋值 (_启动窗口., 1)

连续赋值 (“无界面图片，点击此处载入”, .标题, .标题, .标题, .标题)
载入 (窗口辅助, _启动窗口, 假)

 ' 使支持拖放
DragAcceptFiles (取窗口句柄 (), 真)
赋值 (集选择夹旧窗口过程, GetWindowLongA (取窗口句柄 (), #GWL_WNDPROC))
SetWindowLongA (取窗口句柄 (), #GWL_WNDPROC, &选择夹新窗口过程)

读配置文件 ()
设置文件关联 ()
新建工程 ()
处理命令行 ()

.如果真 (全是否显示每日一帖)
    载入 (窗口每日一帖, _启动窗口, 假)
.如果真结束


.子程序 处理命令行, 空白型, , 
.局部变量 命令行数组, 文本型, , "0", 

取命令行 (命令行数组)
.如果真 (等于 (取数组成员数 (命令行数组), 0))
    返回 ()
.如果真结束
.如果真 (等于 (文件是否存在 (命令行数组 [1]), 假))
    返回 ()
.如果真结束
打开工程 (命令行数组 [1])


.子程序 设置文件关联, 空白型, , 
.局部变量 描述, 文本型, , , 
.局部变量 可执行文件名, 文本型, , , 

.如果真 (是否为调试版 ())
    返回 ()
.如果真结束
赋值 (描述, “ESkinProjectFile”)
赋值 (可执行文件名, 相加 (取运行目录 (), “\”, 取执行文件名 ()))
写注册项 (#根类, “.esp\”, 描述)
写注册项 (#根类, 相加 (描述, “\”), “易容大师皮肤工程文件”)
写注册项 (#根类, 相加 (描述, “\DefaultIcon\”), 相加 (可执行文件名, “,0”))
写注册项 (#根类, 相加 (描述, “\shell\open\command\”), 相加 (#引号, 可执行文件名, #引号, “ ”, #引号, “%1”, #引号))


.子程序 选择夹新窗口过程, 整数型, , 
.参数 hwnd, 空白型, , 
.参数 uMsg, 空白型, , 
.参数 wParam, 空白型, , 
.参数 lParam, 空白型, , 

.局部变量 文件名, 文本型, , , 
.局部变量 文件属性, 空白型, , , 
.局部变量 扩展名, 文本型, , , 

.如果真 (等于 (uMsg, #WM_DROPFILES))
    赋值 (文件名, 取空白文本 (255))
    DragQueryFile (wParam, 0, 文件名, 255)
    赋值 (文件属性, 取文件属性 (文件名))
    .如果真 (不等于 (位与 (文件属性, #子目录), 0))
         ' 是文件夹
        信息框 (“请拖入图片文件或易容大师工程文件，而不是文件夹。”, #信息图标, #程序标题)
        返回 (0)
    .如果真结束
     ' 是否是临时皮肤配置文件
    赋值 (扩展名, 到小写 (取文本右边 (文件名, 5)))
    .如果真 (等于 (扩展名, “.esk_”))
        生成独立的皮肤文件 (文件名)
        返回 (0)
    .如果真结束
    赋值 (扩展名, 到小写 (取文本右边 (文件名, 4)))
    .判断开始 (等于 (扩展名, “.esp”))
         ' 工程文件
        打开工程 (文件名)
    .判断 (或者 (等于 (扩展名, “.bmp”), 等于 (扩展名, “.jpg”), 等于 (扩展名, “.gif”)))
         ' 图片文件
        装载图片 (相加 (.现行子夹, 1), 文件名)
    .默认
        信息框 (“请拖入图片文件名，支持 bmp、jpg和　gif 格式。推荐使用bmp格式的图片。”, #信息图标, #程序标题)
        返回 (0)
    .判断结束
    
.如果真结束
返回 (CallWindowProcA (集选择夹旧窗口过程, hwnd, uMsg, wParam, lParam))


.子程序 读配置文件, 空白型, , 读取配置信息
.局部变量 是否隐藏控件矩形, 逻辑型, , , 
.局部变量 是否显示控件标记和备注, 逻辑型, , , 
.局部变量 是否显示锚点信息, 逻辑型, , , 
.局部变量 是否显示控件类型, 逻辑型, , , 
.局部变量 控件矩形默认色, 空白型, , , 
.局部变量 控件矩形选中色, 空白型, , , 
.局部变量 控件矩形填充方式, 空白型, , , 
.局部变量 是否隐藏辅助线, 逻辑型, , , 
.局部变量 辅助线颜色, 空白型, , , 
.局部变量 捕捉辅助线阈值, 空白型, , , 
.局部变量 扩展像素, 空白型, , , 
.局部变量 最小边长, 空白型, , , 
.局部变量 合并阈值, 空白型, , , 当两矩形间的距离小于或等于此阈值时合并
.局部变量 是否绘制十字线, 逻辑型, , , 
.局部变量 绘制完毕取消选择, 逻辑型, , , 
.局部变量 文件号, 空白型, , , 
.局部变量 文件名, 文本型, , , 

赋值 (文件名, 相加 (取运行目录 (), “\”, #配置文件名))
.如果真 (取反 (文件是否存在 (文件名)))
    赋值 (.颜色, #黑色)
    赋值 (.颜色, #红色)
    返回 ()
.如果真结束
赋值 (文件号, 打开文件 (文件名, #读入, #禁止写))
.如果真 (等于 (文件号, 0))
    信息框 (相加 (“读取配置文件失败：”, 文件名), #错误图标, #程序标题)
    赋值 (.颜色, #黑色)
    赋值 (.颜色, #红色)
    返回 ()
.如果真结束
读入数据 (文件号, 全是否显示每日一帖, 全每日一帖索引, 是否隐藏控件矩形, 是否显示控件标记和备注, 是否显示锚点信息, 是否显示控件类型, 控件矩形默认色, 控件矩形选中色, 控件矩形填充方式, 是否隐藏辅助线, 辅助线颜色, 捕捉辅助线阈值, 扩展像素, 最小边长, 合并阈值, 是否绘制十字线, 绘制完毕取消选择)
关闭文件 (文件号)
赋值 (.选中, 是否隐藏控件矩形)
赋值 (.颜色, 控件矩形默认色)
赋值 (.颜色, 控件矩形选中色)
赋值 (.现行选中项, 控件矩形填充方式)
赋值 (.选中, 是否显示控件标记和备注)
赋值 (.选中, 是否显示锚点信息)
赋值 (.选中, 是否显示控件类型)
赋值 (.选中, 是否隐藏辅助线)
赋值 (.选中, 是否隐藏辅助线)
赋值 (.颜色, 辅助线颜色)
赋值 (.内容, 到文本 (捕捉辅助线阈值))
赋值 (.内容, 到文本 (扩展像素))
赋值 (.内容, 到文本 (最小边长))
赋值 (.内容, 到文本 (合并阈值))
赋值 (.选中, 是否绘制十字线)
赋值 (.选中, 绘制完毕取消选择)

 ' 禁止控件
赋值 (.禁止, .选中)
赋值 (.禁止, .选中)
赋值 (.禁止, .选中)


.子程序 写配置文件, 空白型, , 
.局部变量 是否隐藏控件矩形, 逻辑型, , , 
.局部变量 是否显示控件标记和备注, 逻辑型, , , 
.局部变量 是否显示锚点信息, 逻辑型, , , 
.局部变量 是否显示控件类型, 逻辑型, , , 
.局部变量 控件矩形默认色, 空白型, , , 
.局部变量 控件矩形选中色, 空白型, , , 
.局部变量 控件矩形填充方式, 空白型, , , 
.局部变量 是否隐藏辅助线, 逻辑型, , , 
.局部变量 辅助线颜色, 空白型, , , 
.局部变量 捕捉辅助线阈值, 空白型, , , 
.局部变量 扩展像素, 空白型, , , 
.局部变量 最小边长, 空白型, , , 
.局部变量 合并阈值, 整数型, , , 当两矩形间的距离小于或等于此阈值时合并
.局部变量 是否绘制十字线, 逻辑型, , , 
.局部变量 绘制完毕取消选择, 逻辑型, , , 
.局部变量 文件号, 空白型, , , 
.局部变量 文件名, 文本型, , , 

赋值 (文件名, 相加 (取运行目录 (), “\”, #配置文件名))
赋值 (文件号, 打开文件 (文件名, #重写, #禁止写))
.如果真 (等于 (文件号, 0))
    信息框 (相加 (“写配置文件失败：”, 文件名), #错误图标, #程序标题)
    返回 ()
.如果真结束
赋值 (是否隐藏控件矩形, .选中)
赋值 (是否显示控件标记和备注, .选中)
赋值 (是否显示锚点信息, .选中)
赋值 (是否显示控件类型, .选中)
赋值 (控件矩形默认色, .颜色)
赋值 (控件矩形选中色, .颜色)
赋值 (控件矩形填充方式, .现行选中项)
赋值 (是否隐藏辅助线, .选中)
赋值 (辅助线颜色, .颜色)
赋值 (捕捉辅助线阈值, 到数值 (.内容))
赋值 (扩展像素, 到数值 (.内容))
赋值 (最小边长, 到数值 (.内容))
赋值 (合并阈值, 到数值 (.内容))
赋值 (是否绘制十字线, .选中)
赋值 (绘制完毕取消选择, .选中)
写出数据 (文件号, 全是否显示每日一帖, 全每日一帖索引, 是否隐藏控件矩形, 是否显示控件标记和备注, 是否显示锚点信息, 是否显示控件类型, 控件矩形默认色, 控件矩形选中色, 控件矩形填充方式, 是否隐藏辅助线, 辅助线颜色, 捕捉辅助线阈值, 扩展像素, 最小边长, 合并阈值, 是否绘制十字线, 绘制完毕取消选择)
关闭文件 (文件号)


.子程序 新建工程, 空白型, , 
.局部变量 r, 空白型, , , 

.如果真 (全已改)
    赋值 (r, 信息框 (“工程已改变，要保存吗？”, 位或 (#询问图标, #取消是否钮), #程序标题))
    .判断开始 (等于 (r, #是钮))
        保存工程 ()
    .判断 (等于 (r, #否钮))
        
    .判断 (等于 (r, #取消钮))
        返回 ()
    .默认
        
    .判断结束
    
.如果真结束

赋值 (.可视, 假)
清空 ()
赋值 (.可视, 真)
赋值 (.可视, 真)

连续赋值 (假, .可视, .可视, .可视, .可视)
连续赋值 (0, .宽度, .高度, .宽度, .高度, .宽度, .高度, .宽度, .高度)
连续赋值 (真, .可视, .可视, .可视, .可视)

赋值 (.颜色, #红色)
连续赋值 (“ -”, .内容, .内容)
赋值 (.选中, 假)
赋值 (.禁止, 真)
赋值 (.现行选中项, 1)

连续赋值 (“”, .内容, .内容, .内容, .内容, .内容, .内容, .内容, .内容, .内容, .内容)

赋值 (.内容, “0”)
赋值 (.内容, “100”)
赋值 (.内容, “61”)

窗口辅助.清除 (., , , , )

重定义数组 (全图片数组, 假, 4)
重定义数组 (全图片文件名, 假, 4)
重定义数组 (全控件矩形数组, 假, 0)
重定义数组 (全辅助线数组, 假, 0)
重定义数组 (全辅助线交点数组, 假, 0)

赋值 (全窗口宽度, -1)
赋值 (全窗口高度, -1)
赋值 (全当前选择索引, 0)
赋值 (全已改, 假)
赋值 (全正在生成图片文件, 假)
赋值 (全工程文件名, “”)
赋值 (全自动标记, 0)
赋值 (全缩放比, 1)
赋值 (., 相加 (#程序标题, #程序版本))

赋值 (.选中, 假)
赋值 (.禁止, 真)
赋值 (.现行选中项, #超级菜单_底色)
恢复菜单默认颜色 ()
置状态条文本 ()


.子程序 _标签41_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 图片号, 整数型, , , 

.如果真 (打开 ())
    赋值 (全图片数组 [1], 读入文件 (.文件名))
    装载图片 (1, .文件名)
.如果真结束


.子程序 _新建a_被选择, 空白型, , 
新建工程 ()


.子程序 _画板1_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (集鼠标已被按下 [1], 真)
赋值 (集鼠标已被拖动, 假)
赋值 (ox, 横向位置)
赋值 (oy, 纵向位置)
赋值 (lx, 横向位置)
赋值 (ly, 纵向位置)


.子程序 _画板1_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.画出方式, 5) ' 反转
赋值 (全已刷新, 假)

.如果真 (并且 (.选中, 等于 (全正在生成图片文件, 假)))
     ' 绘制十字线
    0.画直线 (lya, .宽度, lya)
    lxa.画直线 (0, lxa, .高度)
    0.画直线 (纵向位置, .宽度, 纵向位置)
    横向位置.画直线 (0, 横向位置, .高度)
.如果真结束
赋值 (lxa, 横向位置)
赋值 (lya, 纵向位置)

1.置文本 (相加 (“光标位置:(”, 到文本 (横向位置), “,”, 到文本 (纵向位置), “)”))
.如果真 (等于 (集鼠标已被按下 [1], 假))
    赋值 (集鼠标已被拖动, 假)
    .如果真 (不等于 (API_取焦点窗口 (), 取窗口句柄 ()))
        获取焦点 ()
    .如果真结束
    返回 ()
.如果真结束

.如果真 (并且 (等于 (.选中, 假), 等于 (.选中, 假)))
    赋值 (集鼠标已被拖动, 真)
    
     ' 绘制矩形
    ox.画矩形 (oy, lx, ly)
    ox.画矩形 (oy, 横向位置, 纵向位置)
    赋值 (lx, 横向位置)
    赋值 (ly, 纵向位置)
    
.如果真结束


.子程序 _画板1_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 某控件矩形, 控件矩形, , , 
.局部变量 x1, 空白型, , , 
.局部变量 y1, 空白型, , , 
.局部变量 x2, 空白型, , , 
.局部变量 y2, 空白型, , , 
.局部变量 t, 空白型, , , 

赋值 (集鼠标已被按下 [1], 假)

 ' ///////////////////此两个模式为后来补上
.判断开始 (.选中)
     ' 取色
    赋值 (.选中, 假)
    赋值 (.颜色, 横向位置.取点 (纵向位置))
    .置项目数值 (.现行选中项, .颜色)
    置高级菜单颜色 (.现行选中项)
    赋值 (全已改, 真)
    置状态条文本 ()
    返回 ()
.判断 (.选中)
     ' 预览按钮,此段还要复制到鼠标右键被放开事件中。
    .弹出菜单 ()
    返回 ()
.默认
    
.判断结束

.如果真 (等于 (集鼠标已被拖动, 假))
    鼠标选择控件矩形 (横向位置, 纵向位置)
    重画控件矩形和辅助线 ()
    返回 ()
.如果真结束

赋值 (x1, ox) ' ox,oy 鼠标按下时的坐标值
赋值 (y1, oy)
赋值 (x2, 横向位置)
赋值 (y2, 纵向位置)
校验矩形 (x1, y1, x2, y2)

 ' 将坐标缩放一下
赋值 (x1, 四舍五入 (相除 (x1, 全缩放比), ))
赋值 (y1, 四舍五入 (相除 (y1, 全缩放比), ))
赋值 (x2, 四舍五入 (相除 (x2, 全缩放比), ))
赋值 (y2, 四舍五入 (相除 (y2, 全缩放比), ))

.如果真 (并且 (大于 (相乘 (取绝对值 (相减 (x2, x1)), 全缩放比), 5), 大于 (相乘 (取绝对值 (相减 (y2, y1)), 全缩放比), 5))) ' 保证不是误操作
    .如果 (大于或等于 (全当前选择索引, 1))
        全控件矩形数组.绝对移动 ( [全当前选择索引], x1, y1)
        全控件矩形数组.置宽度 ( [全当前选择索引], 取绝对值 (相减 (x2, x1)))
        全控件矩形数组.置高度 ( [全当前选择索引], 取绝对值 (相减 (y2, y1)))
        捕捉选择的控件矩形到辅助线 ()
        赋值 (全已改, 真)
    .否则
        某控件矩形.绝对移动 (x1, y1)
        某控件矩形.置宽度 (相减 (x2, x1))
        某控件矩形.置高度 (相减 (y2, y1))
        赋值 (全自动标记, 相加 (全自动标记, 1))
        某控件矩形.置标记 (全自动标记)
        某控件矩形.置控件类型 (.现行选中项) ' 使用组合框的当前类型
        加入成员 (全控件矩形数组, 某控件矩形)
        更新控件矩形列表框 ()
         ' 选择控件矩形 (取数组成员数 (全控件矩形数组))
        赋值 (全当前选择索引, 取数组成员数 (全控件矩形数组))
        捕捉选择的控件矩形到辅助线 ()
        .如果 (.选中)
            全控件矩形数组.取消选择 ( [全当前选择索引])
            赋值 (.现行选中项, -1)
            赋值 (全当前选择索引, -1)
        .否则
            选择控件矩形 (全当前选择索引)
        .如果结束
        
        赋值 (全已改, 真)
    .如果结束
    
.如果真结束

 ' 鼠标选择控件矩形 (横向位置, 纵向位置)
重画控件矩形和辅助线 ()
置状态条文本 ()
赋值 (集鼠标已被拖动, 假)


.子程序 置高级菜单颜色, 空白型, , 根据组合框项目数值值高级菜单颜色，如果参数为空，则置所有的，否则置指定的
.参数 参颜色项, 整数型, 可空, 

.如果真 (是否为空 (参颜色项))
     ' 如果为空，则置所有颜色
    赋值 (., #超级菜单_底色.取项目数值 ())
    赋值 (., #超级菜单_文本颜色.取项目数值 ())
    赋值 (., #超级菜单_点燃颜色.取项目数值 ())
    赋值 (., #超级菜单_渐变颜色1.取项目数值 ())
    赋值 (., #超级菜单_渐变颜色2.取项目数值 ())
    赋值 (., #超级菜单_分割条颜色.取项目数值 ())
    赋值 (., #超级菜单_禁止文本颜色.取项目数值 ())
    赋值 (., #超级菜单_点燃区边框颜色.取项目数值 ())
    赋值 (., #超级菜单_菜单条点燃颜色1.取项目数值 ())
    赋值 (., #超级菜单_菜单条点燃颜色2.取项目数值 ())
    返回 ()
.如果真结束

 ' 否则，置指定项目的颜色
.判断开始 (等于 (参颜色项, #超级菜单_底色))
    赋值 (., .颜色)
.判断 (等于 (参颜色项, #超级菜单_文本颜色))
    赋值 (., .颜色)
.判断 (等于 (参颜色项, #超级菜单_点燃颜色))
    赋值 (., .颜色)
.判断 (等于 (参颜色项, #超级菜单_渐变颜色1))
    赋值 (., .颜色)
.判断 (等于 (参颜色项, #超级菜单_渐变颜色2))
    赋值 (., .颜色)
.判断 (等于 (参颜色项, #超级菜单_分割条颜色))
    赋值 (., .颜色)
.判断 (等于 (参颜色项, #超级菜单_禁止文本颜色))
    赋值 (., .颜色)
.判断 (等于 (参颜色项, #超级菜单_点燃区边框颜色))
    赋值 (., .颜色)
.判断 (等于 (参颜色项, #超级菜单_菜单条点燃颜色1))
    赋值 (., .颜色)
.判断 (等于 (参颜色项, #超级菜单_菜单条点燃颜色2))
    赋值 (., .颜色)
.默认
    
.判断结束


.子程序 恢复菜单默认颜色, 空白型, , 将高级菜单的颜色恢复到默认值
赋值 (., 16251129)
赋值 (., 0)
赋值 (., 12775167)
赋值 (., 16773091)
赋值 (., 14986888)
赋值 (., 13339754)
赋值 (., 9276813)
赋值 (., 8388608)
赋值 (., 13432063)
赋值 (., 10344447)

#超级菜单_底色.置项目数值 (.)
#超级菜单_文本颜色.置项目数值 (.)
#超级菜单_点燃颜色.置项目数值 (.)
#超级菜单_渐变颜色1.置项目数值 (.)
#超级菜单_渐变颜色2.置项目数值 (.)
#超级菜单_分割条颜色.置项目数值 (.)
#超级菜单_禁止文本颜色.置项目数值 (.)
#超级菜单_点燃区边框颜色.置项目数值 (.)
#超级菜单_菜单条点燃颜色1.置项目数值 (.)
#超级菜单_菜单条点燃颜色2.置项目数值 (.)

赋值 (.颜色, .取项目数值 (.现行选中项))


.子程序 更新控件矩形列表框, 空白型, , 
.局部变量 i, 空白型, , , 

清空 ()
.计次循环首 (取数组成员数 (全控件矩形数组), i)
    相加 (全控件矩形数组.取备注 ( [i]), “:”, 到文本 (全控件矩形数组.取标记 ( [i]))).加入项目 ()
.计次循环尾 ()


.子程序 置状态条文本, 空白型, , 
0.置文本 (选择 (等于 (全已改, 真), “已改”, “未改”))
 ' 状态条.置文本 (1, )
2.置文本 (到文本 (取数组成员数 (全控件矩形数组)))


.子程序 校验矩形, 空白型, , 
.参数 xa, 空白型, 参考, 
.参数 ya, 空白型, 参考, 
.参数 xb, 空白型, 参考, 
.参数 yb, 空白型, 参考, 

.局部变量 t, 空白型, , , 

.如果真 (大于 (xa, xb))
    赋值 (t, xa)
    赋值 (xa, xb)
    赋值 (xb, t)
.如果真结束
.如果真 (大于 (ya, yb))
    赋值 (t, ya)
    赋值 (ya, yb)
    赋值 (yb, t)
.如果真结束


.子程序 鼠标选择控件矩形, 空白型, , 
.参数 参横坐标, 整数型, , 
.参数 参纵坐标, 整数型, , 

.局部变量 i, 空白型, , , 
.局部变量 已选中, 逻辑型, , , 

赋值 (全当前选择索引, -1)
赋值 (参横坐标, 相除 (参横坐标, 全缩放比))
赋值 (参纵坐标, 相除 (参纵坐标, 全缩放比))

.计次循环首 (取数组成员数 (全控件矩形数组), i)
    全控件矩形数组.取消选择 ( [i])
    .如果真 (已选中)
        到循环尾 ()
    .如果真结束
    .如果真 (全控件矩形数组.包含点 ( [i], 参横坐标, 参纵坐标))
        赋值 (全当前选择索引, i)
        全控件矩形数组.选中 ( [i])
        赋值 (已选中, 真) ' 保证只选择一个，而将其他的取消选择
    .如果真结束
    
.计次循环尾 ()

选择控件矩形 (全当前选择索引)
返回 ()


.子程序 选择控件矩形, 空白型, , 
.参数 参索引, 整数型, , 

.如果真 (或者 (小于 (参索引, 1), 大于 (参索引, 取数组成员数 (全控件矩形数组))))
     ' 取消选择
    连续赋值 (“ -”, .内容, .内容, .内容, .内容, .内容, .内容, .内容, .内容, .内容, .内容, .内容)
    赋值 (.现行选中项, 1)
    连续赋值 (真, .选中, .选中)
    连续赋值 (假, .选中, .选中)
    赋值 (.现行选中项, 2)
    
    .如果真 (不等于 (.现行子夹, 0))
        赋值 (.现行子夹, 0)
        获取焦点 ()
    .如果真结束
    
    返回 ()
.如果真结束
.如果真 (大于 (全当前选择索引, 0))
     ' 先取消上一个选择
    全控件矩形数组.取消选择 ( [全当前选择索引])
.如果真结束

赋值 (全当前选择索引, 参索引)
全控件矩形数组.选中 ( [全当前选择索引])
赋值 (.现行选中项, 相减 (全当前选择索引, 1))

赋值 (.内容, 到文本 (全控件矩形数组.取标记 ( [全当前选择索引])))
赋值 (.内容, 全控件矩形数组.取备注 ( [全当前选择索引]))
赋值 (.内容, 到文本 (全控件矩形数组.取横坐标 ( [全当前选择索引])))
赋值 (.内容, 到文本 (全控件矩形数组.取纵坐标 ( [全当前选择索引])))
赋值 (.内容, 到文本 (全控件矩形数组.取宽度 ( [全当前选择索引])))
赋值 (.内容, 到文本 (全控件矩形数组.取高度 ( [全当前选择索引])))
赋值 (.现行选中项, 全控件矩形数组.取控件类型 ( [全当前选择索引]))
.如果 (或者 (等于 (.现行选中项, #控件类型_水平滑块), 等于 (.现行选中项, #控件类型_垂直滑块)))
    赋值 (.可视, 真)
.否则
    赋值 (.可视, 假)
.如果结束
赋值 (.选中, 全控件矩形数组.取锚住上边 ( [全当前选择索引]))
赋值 (.选中, 全控件矩形数组.取锚住左边 ( [全当前选择索引]))
赋值 (.选中, 全控件矩形数组.取锚住右边 ( [全当前选择索引]))
赋值 (.选中, 全控件矩形数组.取锚住下边 ( [全当前选择索引]))
赋值 (.内容, 到文本 (全控件矩形数组.取滑条控件标记 ( [全当前选择索引])))
赋值 (.内容, 到文本 (全控件矩形数组.取显示控件标记 ( [全当前选择索引])))
赋值 (.内容, 到文本 (全控件矩形数组.取最小值 ( [全当前选择索引])))
赋值 (.内容, 到文本 (全控件矩形数组.取最大值 ( [全当前选择索引])))
赋值 (.内容, 到文本 (全控件矩形数组.取当前值 ( [全当前选择索引])))
赋值 (.现行选中项, 全控件矩形数组.取对齐方式 ( [全当前选择索引]))
.如果真 (不等于 (.现行子夹, 1))
    赋值 (.现行子夹, 1)
    获取焦点 ()
.如果真结束


.子程序 重画控件矩形和辅助线, 空白型, , 
重画矩形到指定画板 (全缩放比)
.复制 ()
 ' 将上次位置移到画板外面，以免产生十字线的残影。
赋值 (lxa, -10)
赋值 (lya, -10)


.子程序 重画矩形到指定画板, 空白型, , 
.参数 参画板, 画板, , 
.参数 参缩放比, 双精度小数型, 可空, 

.局部变量 i, 空白型, , , 

.如果真 (是否为空 (参缩放比))
    赋值 (参缩放比, 1)
.如果真结束
参画板.清除 ()
 ' 画底图
全图片号.画图片 (0, 0, .宽度, .高度, )
 ' 画控件矩形
.如果真 (等于 (.选中, 假))
    .计次循环首 (取数组成员数 (全控件矩形数组), i)
        全控件矩形数组.绘制矩形到画板 ( [i], 参画板, 参缩放比, .选中, 并且 (.选中, .选中), .选中)
    .计次循环尾 ()
.如果真结束
 ' 画辅助线
.如果真 (等于 (.选中, 假))
    .计次循环首 (取数组成员数 (全辅助线数组), i)
        全辅助线数组.绘制到画板 ( [i], 参画板, 参缩放比)
    .计次循环尾 ()
.如果真结束


.子程序 _画板1_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 i, 空白型, , , 
.局部变量 p, POINTAPI, , , 
.局部变量 某辅助线, 辅助线, , , 

.判断开始 (等于 (键代码, #左光标键))
    .如果 (大于 (全当前选择索引, 0)) ' 选择了控件矩形就移动控件矩形
        .如果 (等于 (功能键状态, #Shift键状态))
            全控件矩形数组.置宽度 ( [全当前选择索引], 相减 (全控件矩形数组.取宽度 ( [全当前选择索引]), 1))
            赋值 (.内容, 到文本 (全控件矩形数组.取宽度 ( [全当前选择索引])))
            重画控件矩形和辅助线 ()
            
        .否则
            全控件矩形数组.相对移动 ( [全当前选择索引], -1, 0)
            赋值 (.内容, 到文本 (全控件矩形数组.取横坐标 ( [全当前选择索引])))
            重画控件矩形和辅助线 ()
        .如果结束
        
    .否则
        相对移动光标 (-1, 0) ' 否则就移动鼠标光标
    .如果结束
    
.判断 (等于 (键代码, #右光标键))
    .如果 (大于 (全当前选择索引, 0))
        .如果 (等于 (功能键状态, #Shift键状态))
            全控件矩形数组.置宽度 ( [全当前选择索引], 相加 (全控件矩形数组.取宽度 ( [全当前选择索引]), 1))
            赋值 (.内容, 到文本 (全控件矩形数组.取宽度 ( [全当前选择索引])))
            重画控件矩形和辅助线 ()
            
        .否则
            全控件矩形数组.相对移动 ( [全当前选择索引], 1, 0)
            赋值 (.内容, 到文本 (全控件矩形数组.取横坐标 ( [全当前选择索引])))
            重画控件矩形和辅助线 ()
        .如果结束
        
    .否则
        相对移动光标 (1, 0) ' 否则就移动鼠标光标
    .如果结束
    
.判断 (等于 (键代码, #上光标键))
    .如果 (大于 (全当前选择索引, 0))
        .如果 (等于 (功能键状态, #Shift键状态))
            全控件矩形数组.置高度 ( [全当前选择索引], 相减 (全控件矩形数组.取高度 ( [全当前选择索引]), 1))
            赋值 (.内容, 到文本 (全控件矩形数组.取高度 ( [全当前选择索引])))
            重画控件矩形和辅助线 ()
            
        .否则
            全控件矩形数组.相对移动 ( [全当前选择索引], 0, -1)
            赋值 (.内容, 到文本 (全控件矩形数组.取纵坐标 ( [全当前选择索引])))
            重画控件矩形和辅助线 ()
        .如果结束
        
    .否则
        相对移动光标 (0, -1) ' 否则就移动鼠标光标
    .如果结束
    
.判断 (等于 (键代码, #下光标键))
    .如果 (大于 (全当前选择索引, 0))
        .如果 (等于 (功能键状态, #Shift键状态))
            全控件矩形数组.置高度 ( [全当前选择索引], 相加 (全控件矩形数组.取高度 ( [全当前选择索引]), 1))
            赋值 (.内容, 到文本 (全控件矩形数组.取高度 ( [全当前选择索引])))
            重画控件矩形和辅助线 ()
            
        .否则
            全控件矩形数组.相对移动 ( [全当前选择索引], 0, 1)
            赋值 (.内容, 到文本 (全控件矩形数组.取纵坐标 ( [全当前选择索引])))
            重画控件矩形和辅助线 ()
        .如果结束
        
    .否则
        相对移动光标 (0, 1) ' 否则就移动鼠标光标
    .如果结束
    
.判断 (等于 (键代码, #Del键))
    .如果真 (等于 (功能键状态, #Ctrl键状态))
         ' 信息框 (“删除辅助线。”, 0, )
        .如果真 (.选中) ' 如果已隐藏，则显示辅助线，并返回。
            _隐藏所有辅助线_被选择 ()
            返回 ()
        .如果真结束
        .如果 (取光标在画板位置 (p))
            删除辅助线 (p.横向位置, p.纵向位置)
        .否则
            信息框 (“请先将光标置于[正常图片]画板上，然后按 [Ctrl]+[Del]键删除光标附近的辅助线。”, 0, )
        .如果结束
        返回 ()
    .如果真结束
    
     ' 删除选中的控件矩形 ()'此句不需要，已响应菜单的del事件
.判断 (等于 (键代码, #减号键)) ' -
    .如果真 (.选中) ' 如果已隐藏，则显示辅助线，并返回。
        _隐藏所有辅助线_被选择 ()
        返回 ()
    .如果真结束
    .如果 (取光标在画板位置 (p))
        .如果真 (添加辅助线 (真, p.横向位置, p.纵向位置))
            重画控件矩形和辅助线 ()
        .如果真结束
        
    .否则
        信息框 (“请先将光标置于[正常图片]画板上，然后按下键盘上的[-]键以加入水平辅助线。”, 0, )
    .如果结束
    
.判断 (等于 (键代码, #斜杠键)) ' |
    .如果真 (.选中) ' 如果已隐藏，则显示辅助线，并返回。
        _隐藏所有辅助线_被选择 ()
        返回 ()
    .如果真结束
    .如果 (取光标在画板位置 (p))
        .如果真 (添加辅助线 (假, p.横向位置, p.纵向位置))
            重画控件矩形和辅助线 ()
        .如果真结束
        
    .否则
        信息框 (“请先将光标置于[正常图片]画板上，然后按下键盘上的[|]键以加入垂直辅助线。”, 0, )
    .如果结束
    
.判断 (等于 (键代码, #等号键)) ' +
    .如果真 (.选中) ' 如果已隐藏，则显示辅助线，并返回。
        _隐藏所有辅助线_被选择 ()
        返回 ()
    .如果真结束
    .如果 (取光标在画板位置 (p))
        添加辅助线 (假, p.横向位置, p.纵向位置)
        添加辅助线 (真, p.横向位置, p.纵向位置)
        重画控件矩形和辅助线 ()
    .否则
        信息框 (“请先将光标置于[正常图片]画板上，然后按下键盘上的[+]键以同时加入水平辅助线和垂直辅助线。”, 0, )
    .如果结束
    
.判断 (等于 (键代码, #Esc键))
    取消选择任何控件矩形 ()
.默认
    
.判断结束


.子程序 删除辅助线, 逻辑型, , 成功删除返回真，否则返回假
.参数 参光标横坐标, 整数型, 可空, 
.参数 参光标纵坐标, 整数型, 可空, 

.局部变量 p, POINTAPI, , , 
.局部变量 距离, 空白型, , , 
.局部变量 最小距离, 空白型, , , 
.局部变量 最小距离索引, 空白型, , , 
.局部变量 pos, 空白型, , , 
.局部变量 i, 整数型, , , 

.如果真 (等于 (取光标在画板位置 (p), 假))
    返回 (假)
.如果真结束
赋值 (最小距离, .宽度)
.计次循环首 (取数组成员数 (全辅助线数组), i)
    赋值 (pos, 四舍五入 (相乘 (全辅助线数组.取位置 ( [i]), 全缩放比), ))
    .如果 (全辅助线数组.取方向 ( [i]))
        赋值 (距离, 取绝对值 (相减 (p.纵向位置, pos)))
    .否则
        赋值 (距离, 取绝对值 (相减 (p.横向位置, pos)))
    .如果结束
    .如果真 (小于 (距离, 最小距离))
        赋值 (最小距离, 距离)
        赋值 (最小距离索引, i)
    .如果真结束
    
.计次循环尾 ()
.如果真 (大于 (最小距离, 到数值 (.内容)))
    返回 (假)
.如果真结束
删除成员 (全辅助线数组, 最小距离索引, )
重新生成辅助线交点 ()
赋值 (全已改, 真)
置状态条文本 ()
重画控件矩形和辅助线 ()
返回 (真)


.子程序 取光标在画板位置, 逻辑型, 公开, 同时判断光标是否位于画板之内。
.参数 参点, POINTAPI, 参考, 接收返回的坐标

.局部变量 r, RECT, , , 
.局部变量 p, POINTAPI, , , 
.局部变量 结果, 逻辑型, , , 

API_取窗口矩形 (取窗口句柄 (), r) ' 结论：不论是顶层窗口还是子窗口，得到的都是屏幕坐标。
 ' 输出调试文本 (r.左边, r.顶边, r.右边, r.底边)
API_取鼠标位置 (p)
赋值 (结果, API_PtInRect (r, p.横向位置, p.纵向位置))
.如果真 (结果)
    赋值 (参点.横向位置, 相减 (p.横向位置, r.左边))
    赋值 (参点.纵向位置, 相减 (p.纵向位置, r.上边))
.如果真结束
返回 (结果)


.子程序 添加辅助线, 逻辑型, , 添加成功返回真，否则返回假
.参数 参方向, 逻辑型, , 真为水平，否则为垂直
.参数 x, 整数型, , 
.参数 y, 整数型, , 

.局部变量 某辅助线, 辅助线, , , 

.如果真 (或者 (大于 (x, .宽度), 大于 (y, .高度)))
    返回 (假)
.如果真结束
某辅助线.置方向 (参方向)
.如果 (参方向)
    某辅助线.置位置 (四舍五入 (相除 (y, 全缩放比), ))
.否则
    某辅助线.置位置 (四舍五入 (相除 (x, 全缩放比), ))
.如果结束
加入成员 (全辅助线数组, 某辅助线)
重新生成辅助线交点 ()
赋值 (全已改, 真)
置状态条文本 ()
返回 (真)

.子程序 光标位于画板之内, 逻辑型, , 判断光标是否位于画板之内。
.局部变量 r, RECT, , , 
.局部变量 p, POINTAPI, , , 

 ' 此函数被上函数代替。
API_取窗口矩形 (取窗口句柄 (), r)
API_取鼠标位置 (p)
 ' 输出调试文本 (r.左边, r.顶边, r.右边, r.底边)
返回 (API_PtInRect (r, p.横向位置, p.纵向位置))

.子程序 调整标记, 空白型, , 将标记按顺序排列
.局部变量 i, 空白型, , , 

.计次循环首 (取数组成员数 (全控件矩形数组), i)
    全控件矩形数组.置标记 ( [i], i)
.计次循环尾 ()


.子程序 _选择框可调整大小_被单击, 空白型, , 
赋值 (.禁止, 取反 (.选中))
赋值 (.禁止, 取反 (.选中))
赋值 (全已改, 真)
重画控件矩形和辅助线 ()
 ' 画板1.获取焦点 ()


.子程序 _列表框控件矩形_列表项被选择, 空白型, , 
选择控件矩形 (相加 (.现行选中项, 1))
重画控件矩形和辅助线 ()
获取焦点 ()


.子程序 _编辑框控件标记_内容被改变, 空白型, , 
.如果真 (小于 (全当前选择索引, 1))
    返回 ()
.如果真结束
全控件矩形数组.置标记 ( [全当前选择索引], 到数值 (.内容))
 ' 更新控件矩形列表框 ()
相减 (全当前选择索引, 1).置项目文本 (相加 (.内容, “:”, .内容))
赋值 (全已改, 真)
置状态条文本 ()


.子程序 _编辑框控件备注_内容被改变, 空白型, , 
.如果真 (小于 (全当前选择索引, 1))
    返回 ()
.如果真结束
全控件矩形数组.置备注 ( [全当前选择索引], .内容)
相减 (全当前选择索引, 1).置项目文本 (相加 (.内容, “:”, .内容))
赋值 (全已改, 真)
置状态条文本 ()

.子程序 _组合框控件类型_列表项被选择, 空白型, , 
.如果真 (小于 (全当前选择索引, 1))
    返回 ()
.如果真结束
.如果真 (或者 (等于 (.现行选中项, #控件类型_窗口), 等于 (.现行选中项, #控件类型_进度条), 等于 (.现行选中项, #控件类型_垂直滑块)))
    信息框 (“此项暂不能使用。”, #错误图标, #程序标题)
    赋值 (.现行选中项, #控件类型_画板)
    返回 ()
.如果真结束
.如果真 (等于 (.内容, .内容))
     ' 该控件是拖动窗口大小的控件，必须为画板
    .如果真 (不等于 (.现行选中项, #控件类型_画板))
        信息框 (“该控件是拖动窗口大小的控件，必须为画板。”, #信息图标, #程序标题)
        赋值 (.现行选中项, #控件类型_画板)
    .如果真结束
    
.如果真结束
全控件矩形数组.置控件类型 ( [全当前选择索引], .现行选中项)
赋值 (全已改, 真)
置状态条文本 ()

.判断开始 (或者 (等于 (.现行选中项, #控件类型_水平滑块), 等于 (.现行选中项, #控件类型_垂直滑块)))
    赋值 (.可视, 真)
    全控件矩形数组.置显示控件标记 ( [全当前选择索引], 相加 (1000, 全控件矩形数组.取标记 ( [全当前选择索引])))
    赋值 (.内容, 到文本 (全控件矩形数组.取显示控件标记 ( [全当前选择索引])))
.默认
    赋值 (.可视, 假)
.判断结束
重画控件矩形和辅助线 ()

.子程序 _编辑框横坐标_内容被改变, 空白型, , 
.如果真 (小于 (全当前选择索引, 1))
    返回 ()
.如果真结束
全控件矩形数组.置横坐标 ( [全当前选择索引], 到数值 (.内容))
赋值 (全已改, 真)
重画控件矩形和辅助线 ()
置状态条文本 ()

.子程序 _编辑框纵坐标_内容被改变, 空白型, , 
.如果真 (小于 (全当前选择索引, 1))
    返回 ()
.如果真结束
全控件矩形数组.置纵坐标 ( [全当前选择索引], 到数值 (.内容))
赋值 (全已改, 真)
重画控件矩形和辅助线 ()
置状态条文本 ()

.子程序 _编辑框宽度_内容被改变, 空白型, , 
.如果真 (小于 (全当前选择索引, 1))
    返回 ()
.如果真结束
全控件矩形数组.置宽度 ( [全当前选择索引], 到数值 (.内容))
赋值 (全已改, 真)
重画控件矩形和辅助线 ()
置状态条文本 ()

.子程序 _编辑框高度_内容被改变, 空白型, , 
.如果真 (小于 (全当前选择索引, 1))
    返回 ()
.如果真结束
全控件矩形数组.置高度 ( [全当前选择索引], 到数值 (.内容))
赋值 (全已改, 真)
重画控件矩形和辅助线 ()
置状态条文本 ()

.子程序 _选择框锚住左边_被单击, 空白型, , 
.如果真 (小于 (全当前选择索引, 1))
    返回 ()
.如果真结束
全控件矩形数组.置锚住左边 ( [全当前选择索引], .选中)
赋值 (全已改, 真)
重画控件矩形和辅助线 ()
置状态条文本 ()

.子程序 _选择框锚住上边_被单击, 空白型, , 
.如果真 (小于 (全当前选择索引, 1))
    返回 ()
.如果真结束
全控件矩形数组.置锚住上边 ( [全当前选择索引], .选中)
赋值 (全已改, 真)
重画控件矩形和辅助线 ()
置状态条文本 ()

.子程序 _选择框锚住右边_被单击, 空白型, , 
.如果真 (小于 (全当前选择索引, 1))
    返回 ()
.如果真结束
全控件矩形数组.置锚住右边 ( [全当前选择索引], .选中)
赋值 (全已改, 真)
重画控件矩形和辅助线 ()
置状态条文本 ()

.子程序 _选择框锚住下边_被单击, 空白型, , 
.如果真 (小于 (全当前选择索引, 1))
    返回 ()
.如果真结束
全控件矩形数组.置锚住下边 ( [全当前选择索引], .选中)
赋值 (全已改, 真)
重画控件矩形和辅助线 ()
置状态条文本 ()

.子程序 _标签42_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (等于 (取字节集长度 (全图片数组 [1]), 0))
    信息框 (“您尚未载入正常图片，请先载入。”, #错误图标, #程序标题)
    返回 ()
.如果真结束
.如果真 (打开 ())
    装载图片 (2, .文件名)
.如果真结束


.子程序 _标签43_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 图片号, 整数型, , , 
.局部变量 图片数据, 字节集, , , 
.局部变量 图片宽度, 空白型, , , 
.局部变量 图片高度, 空白型, , , 

.如果真 (等于 (取字节集长度 (全图片数组 [1]), 0))
    信息框 (“您尚未载入正常图片，请先载入。”, #错误图标, #程序标题)
    返回 ()
.如果真结束
.如果真 (打开 ())
    装载图片 (3, .文件名)
.如果真结束


.子程序 _标签44_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 图片号, 整数型, , , 
.局部变量 图片数据, 字节集, , , 
.局部变量 图片宽度, 空白型, , , 
.局部变量 图片高度, 空白型, , , 

.如果真 (等于 (取字节集长度 (全图片数组 [1]), 0))
    信息框 (“您尚未载入正常图片，请先载入。”, #错误图标, #程序标题)
    返回 ()
.如果真结束
.如果真 (打开 ())
    装载图片 (4, .文件名)
.如果真结束


.子程序 _选择夹_子夹被改变, 空白型, , 
.判断开始 (等于 (.现行子夹, 1))
    .如果真 (大于 (取字节集长度 (全图片数组 [2]), 0))
        重画矩形到指定画板 ()
    .如果真结束
    
.判断 (等于 (.现行子夹, 2))
    .如果真 (大于 (取字节集长度 (全图片数组 [3]), 0))
        重画矩形到指定画板 ()
    .如果真结束
    
.判断 (等于 (.现行子夹, 3))
    .如果真 (大于 (取字节集长度 (全图片数组 [4]), 0))
        重画矩形到指定画板 ()
    .如果真结束
    
.默认
    
.判断结束


.子程序 _生成皮肤图片和配置文件_被选择, 空白型, , 
生成皮肤图片和配置文件 ()


.子程序 生成皮肤图片和配置文件, 空白型, , 
.局部变量 文件号, 整数型, , , 
.局部变量 文件夹, 文本型, , , 
.局部变量 文件名, 文本型, , , 
.局部变量 r, 整数型, , , 
.局部变量 i, 整数型, , , 
.局部变量 某控件矩形, 控件矩形, , , 
.局部变量 图片文件名, 文本型, , , 
.局部变量 窗口标记, 空白型, , , 
.局部变量 可调整大小, 逻辑型, , , 
.局部变量 拖动窗口大小的控件标记, 空白型, , , 
.局部变量 控件数据, 字节集, , , 
.局部变量 皮肤名, 文本型, , , 
.局部变量 文件描述, 文本型, , , 
.局部变量 b, 逻辑型, , , 
.局部变量 t, 整数型, , , 


 ' 缩略程序块是检查输入数据的正确性
 ' 未导入正常图片
.如果真 (等于 (取字节集长度 (全图片数组 [1]), 0))
    信息框 (“工程还未开始制作呢。请先导入正常图片。”, #信息图标, #程序标题)
    赋值 (.现行子夹, 0)
    返回 ()
.如果真结束

 ' 检查皮肤名
.如果真 (等于 (.内容, “”))
    信息框 (“请输入皮肤名。”, #信息图标, #程序标题)
    赋值 (.现行子夹, 0)
    获取焦点 ()
    返回 ()
.如果真结束

 ' 判断是否输入了标记，如果控件类型为滑块，则还需要判断其滑块条的标记是否为０
.计次循环首 (取数组成员数 (全控件矩形数组), i)
    赋值 (某控件矩形, 全控件矩形数组 [i])
    .如果真 (等于 (某控件矩形.取标记 (), 0))
        信息框 (相加 (“错误：有控件矩形未指定标记。――”, 到文本 (某控件矩形.取标记 ()), “:”, 某控件矩形.取备注 ()), #错误图标, #程序标题)
        选择控件矩形 (i)
        重画控件矩形和辅助线 ()
        返回 ()
    .如果真结束
    .如果真 (或者 (等于 (某控件矩形.取控件类型 (), #控件类型_水平滑块), 等于 (某控件矩形.取控件类型 (), #控件类型_垂直滑块)))
        .如果真 (等于 (某控件矩形.取滑条控件标记 (), 0))
            信息框 (相加 (“错误：有滑块控件未指定与其相关的滑条控件标记。――”, 某控件矩形.取备注 ()), #错误图标, #程序标题)
            选择控件矩形 (i)
            重画控件矩形和辅助线 ()
            返回 ()
        .如果真结束
        
    .如果真结束
    
.计次循环尾 ()

 ' 文件夹 ＝ 浏览文件夹 (“请选择要保存皮肤配置文件和皮肤图片的文件夹，程序将在该文件夹下自动创建与皮肤名同名的文件夹”, )
赋值 (文件夹, 古木_选择文件夹 (_启动窗口, , “请选择要保存皮肤配置文件和皮肤图片的文件夹，程序将在该文件夹下自动创建与皮肤名同名的文件夹”))
.如果真 (等于 (文件夹, “”))
    返回 ()
.如果真结束

赋值 (文件夹, 相加 (文件夹, “\”, .内容))
创建目录 (文件夹)
赋值 (文件名, 相加 (文件夹, “\”, .内容, “.esk_”))

.如果真 (文件是否存在 (文件名))
    赋值 (r, 信息框 (“文件已经存在，你要覆盖它吗？”, 位或 (#询问图标, #取消是否钮), #程序标题))
    .如果真 (不等于 (r, #是钮))
        返回 ()
    .如果真结束
    
.如果真结束
赋值 (全正在生成图片文件, 真)
缩放到原大 ()
.清除 ()
.清除 ()
.清除 ()
.清除 ()
处理事件 ()

 ' 开始写文件数据 /////////////////////////////////////////////////////////
赋值 (文件号, 打开文件 (文件名, #重写, ))
 ' 第一节         'ESKIN1.0                     1          0
赋值 (文件描述, “易容大师 皮肤配置文件1.1 http://www.goomoo.cn”)
写出数据 (文件号, 相加 (#皮肤文件标识, #程序版本), #主版本号, #次版本号, 文件描述) ' ESKIN

 ' 工程设置  ！！！编辑框的内容必须先丢到变量中去，通过 到数值 的方法写入会出错！！！！
赋值 (窗口标记, 1000)
赋值 (可调整大小, .选中)
赋值 (拖动窗口大小的控件标记, 到数值 (.内容))
写出数据 (文件号, .内容, .颜色, 窗口标记, 全窗口宽度, 全窗口高度, 可调整大小, 拖动窗口大小的控件标记)

 ' {{{{{{{{{{{ 1.1版本中新增，超级菜单颜色设置
赋值 (b, .选中)
写出数据 (文件号, b)
.如果真 (b)
     ' 写出菜单设置颜色
    .计次循环首 (取项目数 (), i)
        赋值 (t, 相减 (i, 1).取项目数值 ())
        写出数据 (文件号, t)
    .计次循环尾 ()
.如果真结束
 ' }}}}}}}}}}}}}}}

 ' 如果窗口可随意调整大小，则窗口不需要底图，而是通过静态图片或填充图片来填充它，如果需要圆角，则
 ' 需要用户自己编程实现。
.如果真 (等于 (.选中, 假))
     ' 不能调整大小，则需要铺底图。 写正常图片文件
    写到文件 (相加 (文件夹, “\window.bmp”), 全图片数组 [1])
.如果真结束
置随机数种子 ()
置等待鼠标 ()
 ' 开始写入控件数据
.计次循环首 (取数组成员数 (全控件矩形数组), i)
    .如果真 (等于 (全控件矩形数组.取标记 ( [i]), 到数值 (.内容)))
         ' 必须为画板，且锚住右边和下边，参阅　“保存工程函数”
        全控件矩形数组.置控件类型 ( [i], #控件类型_画板)
        全控件矩形数组.置锚住上边 ( [i], 假)
        全控件矩形数组.置锚住左边 ( [i], 假)
        全控件矩形数组.置锚住右边 ( [i], 真)
        全控件矩形数组.置锚住下边 ( [i], 真)
    .如果真结束
    
    赋值 (控件数据, 全控件矩形数组.输出为字节集 ( [i], 假, 文件夹))
    写出数据 (文件号, 控件数据)
.计次循环尾 ()
关闭文件 (文件号)
重画控件矩形和辅助线 ()
恢复鼠标 ()
信息框 (相加 (“生成皮肤图片和配置文件成功完成！”, #换行符, “有些图片可能还需要编辑，请使用图像处理软件编辑完毕后，”, #换行符, “再使用本程序的生成独立皮肤文件的功能打包成单独的皮肤文件。”), #信息图标, #程序标题)
赋值 (全正在生成图片文件, 假)

.子程序 _关于_被选择, 空白型, , 
载入 (关于窗口, _启动窗口, 真)


.子程序 _保存_被选择, 空白型, , 
保存工程 ()


.子程序 保存工程, 空白型, , 
.参数 参是否为另存, 逻辑型, 可空, 

.局部变量 工程文件名, 文本型, , , 
.局部变量 文件号, 空白型, , , 
.局部变量 要另存, 逻辑型, , , 
.局部变量 r, 空白型, , , 
.局部变量 i, 空白型, , , 
.局部变量 文件描述, 文本型, , , 
.局部变量 拖动窗口大小的控件标记, 空白型, , , 
.局部变量 图片文件名, 文本型, , "4", 
.局部变量 t, 整数型, , , 

.如果真 (等于 (.内容, “”))
    信息框 (“请输入皮肤名。”, #信息图标, #程序标题)
    赋值 (.现行子夹, 0)
    获取焦点 ()
    返回 ()
.如果真结束

.如果真 (是否为空 (参是否为另存))
    赋值 (参是否为另存, 假)
.如果真结束

.如果 (参是否为另存)
    赋值 (要另存, 真)
.否则
    .如果 (等于 (全工程文件名, “”))
        赋值 (要另存, 真)
    .否则
        赋值 (要另存, 假)
    .如果结束
    
.如果结束
.如果真 (要另存)
    赋值 (.文件名, 相加 (.内容, “.esp”))
     ' 保存工程对话框.初始目录 ＝ 取运行目录 ()
    .如果真 (等于 (打开 (), 假))
        返回 ()
    .如果真结束
    赋值 (全工程文件名, .文件名)
    .如果真 (文件是否存在 (全工程文件名))
        赋值 (r, 信息框 (“文件已经存在，您要覆盖它吗？”, 位或 (#询问图标, #取消是否钮), #程序标题))
        .如果真 (不等于 (r, #是钮))
            返回 ()
        .如果真结束
        
    .如果真结束
    
.如果真结束
赋值 (文件号, 打开文件 (全工程文件名, #重写, ))
赋值 (文件描述, “易容大师工程文件1.1 http://www.goomoo.cn”)
赋值 (拖动窗口大小的控件标记, 到数值 (.内容))
.计次循环首 (4, i)
     ' 将图片文件名转换为与工程文件名相对，这样不论文件复制到何处都可以正确打开。
    赋值 (图片文件名 [i], 取相对文件名 (全工程文件名, 全图片文件名 [i]))
.计次循环尾 ()
写出数据 (文件号, “ESKINPRJ1.1”, #主版本号, #次版本号, 文件描述, .内容, .颜色, “1000”, .内容, .内容, .选中, 拖动窗口大小的控件标记, .选中)

 ' 写出菜单颜色设置，不管是否设置了菜单颜色，都写出
.计次循环首 (取项目数 (), i)
    赋值 (t, 相减 (i, 1).取项目数值 ())
    写出数据 (文件号, t)
.计次循环尾 ()

写出数据 (文件号, 图片文件名) ' 写出图片文件名

 ' 写出控件数据
赋值 (t, 取数组成员数 (全控件矩形数组))
写出数据 (文件号, t) ' 写出控件矩形的数目
.计次循环首 (t, i)
    .如果真 (等于 (全控件矩形数组.取标记 ( [i]), 到数值 (.内容)))
         ' 必须为画板，且锚住右边和下边，参阅　“生成皮肤图片和配置文件”函数
        全控件矩形数组.置控件类型 ( [i], #控件类型_画板)
        全控件矩形数组.置锚住上边 ( [i], 假)
        全控件矩形数组.置锚住左边 ( [i], 假)
        全控件矩形数组.置锚住右边 ( [i], 真)
        全控件矩形数组.置锚住下边 ( [i], 真)
    .如果真结束
    写出数据 (文件号, 全控件矩形数组.输出为字节集 ( [i], 假))
.计次循环尾 ()
 ' 写出辅助线数据
赋值 (t, 取数组成员数 (全辅助线数组))
写出数据 (文件号, t)
.计次循环首 (t, i)
    写出数据 (文件号, 全辅助线数组.取方向 ( [i]), 全辅助线数组.取位置 ( [i]))
.计次循环尾 ()
关闭文件 (文件号)

赋值 (_启动窗口., 相加 (#程序标题, #程序版本, “ ”, 全工程文件名))
赋值 (全已改, 假)
置状态条文本 ()

.子程序 _打开_被选择, 空白型, , 
打开工程 ()


.子程序 打开工程, 空白型, , 
.参数 参文件名, 文本型, 可空, 

.局部变量 文件号, 整数型, , , 
.局部变量 标识, 文本型, , , 临时文本
.局部变量 主版本号, 整数型, , , 临时整数
.局部变量 次版本号, 整数型, , , 
.局部变量 皮肤名, 文本型, , , 
.局部变量 透明色, 空白型, , , 
.局部变量 窗口标记, 文本型, , , 
.局部变量 窗口宽度, 文本型, , , 
.局部变量 窗口高度, 文本型, , , 
.局部变量 可否调整大小, 逻辑型, , , 
.局部变量 拖动窗口大小的控件标记, 空白型, , , 
.局部变量 是否使用超级菜单, 逻辑型, , , 
.局部变量 i, 空白型, , , 
.局部变量 某控件矩形, 控件矩形, , , 
.局部变量 控件矩形数据, 字节集, , , 
.局部变量 文件描述, 文本型, , , 
.局部变量 r, 空白型, , , 
.局部变量 t, 整数型, , , 
.局部变量 某辅助线, 辅助线, , , 
.局部变量 辅助线方向, 逻辑型, , , 
.局部变量 辅助线位置, 整数型, , , 
.局部变量 j, 空白型, , , 

 ' 打开工程对话框.初始目录 ＝ 取运行目录 ()
.如果真 (全已改)
    赋值 (r, 信息框 (“工程已改变，你要保存吗？”, 位或 (#询问图标, #取消是否钮), #程序标题))
    .判断开始 (等于 (r, #是钮))
        保存工程 ()
    .判断 (等于 (r, #否钮))
        赋值 (全已改, 假) ' 以免在新建工程中在此弹出确认按钮。
    .判断 (等于 (r, #取消钮))
        返回 ()
    .默认
        
    .判断结束
    
.如果真结束

.如果 (是否为空 (参文件名))
    赋值 (.初始目录, 相加 (取运行目录 (), “\例子”))
    .如果真 (等于 (打开 (), 假))
        返回 ()
    .如果真结束
    .如果真 (等于 (文件是否存在 (.文件名), 假))
        信息框 (相加 (“文件不存在：”, .文件名), #错误图标, #程序标题)
        返回 ()
    .如果真结束
    新建工程 ()
    赋值 (全工程文件名, .文件名)
.否则
    .如果真 (等于 (文件是否存在 (参文件名), 假))
        信息框 (相加 (“文件不存在：”, 参文件名), #错误图标, #程序标题)
        返回 ()
    .如果真结束
    新建工程 ()
    赋值 (全工程文件名, 参文件名)
.如果结束

赋值 (文件号, 打开文件 (全工程文件名, #读入, #禁止写))
.如果真 (等于 (文件号, 0))
    信息框 (相加 (“打开工程文件失败：”, 全工程文件名), #错误图标, #程序标题)
    返回 ()
.如果真结束

.如果真 (小于 (取文件长度 (文件号), 100)) ' 最小文件尺寸142字节
    关闭文件 (文件号)
    信息框 (“文件格式错误！”, #错误图标, #程序标题)
    返回 ()
.如果真结束

读入数据 (文件号, 标识, 主版本号, 次版本号, 文件描述, 皮肤名, 透明色, 窗口标记, 窗口宽度, 窗口高度, 可否调整大小, 拖动窗口大小的控件标记)

.如果真 (不等于 (取文本左边 (标识, 8), “ESKINPRJ”))
    关闭文件 (文件号)
    信息框 (“非易容大师工程文件。”, #错误图标, #程序标题)
    返回 ()
.如果真结束

.如果真 (大于 (相加 (相乘 (主版本号, 100), 次版本号), 101)) ' 大于1.1以上的版本
    关闭文件 (文件号)
    信息框 (“你正在尝试打开高版本的易容大师工程文件，请使用相应版本的易容大师来打开该工程文件。”, #信息图标, #程序标题)
    返回 ()
.如果真结束

.如果真 (大于或等于 (次版本号, 1))
     ' 版本1.1中新增菜单设置功能
    读入数据 (文件号, 是否使用超级菜单)
     ' 读出菜单的颜色设置
    .计次循环首 (取项目数 (), i)
        读入数据 (文件号, t)
        赋值 (j, 相减 (i, 1))
        j.置项目数值 (t)
        .判断开始 (等于 (j, #超级菜单_底色))
            赋值 (., t)
        .判断 (等于 (j, #超级菜单_文本颜色))
            赋值 (., t)
        .判断 (等于 (j, #超级菜单_点燃颜色))
            赋值 (., t)
        .判断 (等于 (j, #超级菜单_渐变颜色1))
            赋值 (., t)
        .判断 (等于 (j, #超级菜单_渐变颜色2))
            赋值 (., t)
        .判断 (等于 (j, #超级菜单_分割条颜色))
            赋值 (., t)
        .判断 (等于 (j, #超级菜单_禁止文本颜色))
            赋值 (., t)
        .判断 (等于 (j, #超级菜单_点燃区边框颜色))
            赋值 (., t)
        .判断 (等于 (j, #超级菜单_菜单条点燃颜色1))
            赋值 (., t)
        .判断 (等于 (j, #超级菜单_菜单条点燃颜色2))
            赋值 (., t)
        .默认
            
        .判断结束
        
    .计次循环尾 ()
.如果真结束
读入数据 (文件号, 全图片文件名)
赋值 (.内容, 皮肤名)
赋值 (.颜色, 透明色)
赋值 (.内容, 到文本 (窗口宽度))
赋值 (.内容, 到文本 (窗口高度))
赋值 (.选中, 可否调整大小)
赋值 (.禁止, 取反 (可否调整大小))
赋值 (.内容, 到文本 (拖动窗口大小的控件标记))
赋值 (.禁止, 取反 (可否调整大小))
赋值 (.选中, 是否使用超级菜单)
赋值 (.禁止, 取反 (是否使用超级菜单))
赋值 (.现行选中项, 0)
赋值 (.颜色, 0.取项目数值 ())

 ' 查看图片文件是否存在，并转换成绝对路径
.计次循环首 (4, i)
    .如果真 (不等于 (全图片文件名 [i], “”))
        .如果真 (等于 (是绝对文件名 (全图片文件名 [i]), 假))
            赋值 (全图片文件名 [i], 相加 (取文件路径 (全工程文件名), 全图片文件名 [i]))
        .如果真结束
        装载图片 (i, 全图片文件名 [i])
    .如果真结束
    
.计次循环尾 ()
 ' 读入控件矩形
读入数据 (文件号, t)
.计次循环首 (t, )
    读入数据 (文件号, 控件矩形数据)
    某控件矩形.从字节集读入 (控件矩形数据)
    加入成员 (全控件矩形数组, 某控件矩形)
    
.计次循环尾 ()
 ' 读入辅助线
读入数据 (文件号, t)
.计次循环首 (t, )
    读入数据 (文件号, 辅助线方向, 辅助线位置)
    某辅助线.置方向 (辅助线方向)
    某辅助线.置位置 (辅助线位置)
    加入成员 (全辅助线数组, 某辅助线)
.计次循环尾 ()
关闭文件 (文件号)
更新控件矩形列表框 ()
重新生成辅助线交点 ()

.如果 (.选中)
    缩放到合适 ()
.否则
    缩放到原大 ()
.如果结束

赋值 (全自动标记, 取数组成员数 (全控件矩形数组))

赋值 (_启动窗口., 相加 (#程序标题, #程序版本, “ ”, 全工程文件名))
赋值 (全已改, 假)
置状态条文本 ()
获取焦点 ()


.子程序 装载图片, 空白型, , 
.参数 参画板编号, 整数型, , 
.参数 参图片文件名, 文本型, , 

.局部变量 图片号, 整数型, , , 
.局部变量 图片数据, 字节集, , , 
.局部变量 图片宽度, 空白型, , , 
.局部变量 图片高度, 空白型, , , 
.局部变量 文件名, 文本型, , , 
.局部变量 某辅助线, 辅助线, , , 

赋值 (文件名, 参图片文件名)
.如果真 (或者 (小于 (参画板编号, 1), 大于 (参画板编号, 4)))
    返回 ()
.如果真结束
.如果真 (等于 (文件名, “”))
    返回 ()
.如果真结束
.如果真 (等于 (文件是否存在 (文件名), 假))
    信息框 (相加 (“文件 ”, 文件名, “ 不存在，请重新指定位置。”), #信息图标, #程序标题)
    返回 ()
.如果真结束
赋值 (全图片文件名 [参画板编号], 文件名)
赋值 (全图片数组 [参画板编号], 读入文件 (文件名))
.判断开始 (等于 (参画板编号, 1))
    
    赋值 (全图片文件名 [1], 文件名)
    赋值 (全图片数组 [1], 读入文件 (文件名))
    卸载图片 (全图片号)
    赋值 (全图片号, 载入图片 (全图片数组 [1]))
    
    赋值 (.可视, 假)
    赋值 (.可视, 假)
    赋值 (.可视, 假)
    
    赋值 (图片号, 载入图片 (文件名))
    赋值 (全窗口宽度, 图片号.取图片宽度 ())
    赋值 (全窗口高度, 图片号.取图片高度 ())
    赋值 (.内容, 到文本 (全窗口宽度))
    赋值 (.内容, 到文本 (全窗口高度))
    卸载图片 (图片号)
    5.移动 (25, 全窗口宽度, 全窗口高度)
    赋值 (.宽度, 全窗口宽度)
    赋值 (.高度, 全窗口高度)
    
    赋值 (.底图, 全图片数组 [1])
     ' 画板后台.底图 ＝ 全图片数组 [1]
    赋值 (.可视, 真)
    赋值 (.可视, .选中)
     ' 添加边界辅助线 ()
    获取焦点 ()
    
.判断 (等于 (参画板编号, 2))
    赋值 (图片数据, 读入文件 (参图片文件名))
    赋值 (图片号, 载入图片 (图片数据))
    赋值 (图片宽度, 图片号.取图片宽度 ())
    赋值 (图片高度, 图片号.取图片高度 ())
    
    .如果真 (或者 (不等于 (图片宽度, 全窗口宽度), 不等于 (图片高度, 全窗口高度)))
        信息框 (“该图片大小与正常图片大小不一致，请重新载入图片。”, #错误图标, #程序标题)
        返回 ()
    .如果真结束
    
    赋值 (.可视, 假)
    卸载图片 (图片号)
    
    赋值 (全图片文件名 [2], 文件名)
    赋值 (全图片数组 [2], 读入文件 (文件名))
    
    5.移动 (25, 全窗口宽度, 全窗口高度)
    赋值 (.底图, 全图片数组 [2])
    重画矩形到指定画板 ()
    赋值 (.可视, 真)
    
.判断 (等于 (参画板编号, 3))
    赋值 (图片数据, 读入文件 (文件名))
    赋值 (图片号, 载入图片 (图片数据))
    赋值 (图片宽度, 图片号.取图片宽度 ())
    赋值 (图片高度, 图片号.取图片高度 ())
    
    .如果真 (或者 (不等于 (图片宽度, 全窗口宽度), 不等于 (图片高度, 全窗口高度)))
        信息框 (“该图片大小与正常图片大小不一致，请重新载入图片。”, #错误图标, #程序标题)
        返回 ()
    .如果真结束
    
    赋值 (.可视, 假)
    卸载图片 (图片号)
    
    赋值 (全图片文件名 [3], 文件名)
    赋值 (全图片数组 [3], 读入文件 (文件名))
    
    5.移动 (25, 全窗口宽度, 全窗口高度)
    赋值 (全图片数组 [3], 图片数据)
    赋值 (.底图, 全图片数组 [3])
    重画矩形到指定画板 ()
    赋值 (.可视, 真)
    
.判断 (等于 (参画板编号, 4))
    赋值 (图片数据, 读入文件 (文件名))
    赋值 (图片号, 载入图片 (图片数据))
    赋值 (图片宽度, 图片号.取图片宽度 ())
    赋值 (图片高度, 图片号.取图片高度 ())
    
    .如果真 (或者 (不等于 (图片宽度, 全窗口宽度), 不等于 (图片高度, 全窗口高度)))
        信息框 (“该图片大小与正常图片大小不一致，请重新载入图片。”, #错误图标, #程序标题)
        返回 ()
    .如果真结束
    
    赋值 (.可视, 假)
    卸载图片 (图片号)
    
    赋值 (全图片文件名 [4], 文件名)
    赋值 (全图片数组 [4], 读入文件 (文件名))
    
    5.移动 (25, 全窗口宽度, 全窗口高度)
    赋值 (全图片数组 [4], 图片数据)
    赋值 (.底图, 全图片数组 [4])
    重画矩形到指定画板 ()
    赋值 (.可视, 真)
    
.默认
    
.判断结束
赋值 (全已改, 真)
.如果 (.选中)
    缩放到合适 ()
.否则
    缩放到原大 ()
.如果结束
置状态条文本 ()

.子程序 _另存为_被选择, 空白型, , 
保存工程 (真)
置状态条文本 ()

.子程序 _编辑框皮肤名_内容被改变, 空白型, , 
赋值 (全已改, 真)
置状态条文本 ()

.子程序 _颜色选择器透明色_颜色被改变, 空白型, , 
赋值 (全已改, 真)
置状态条文本 ()

.子程序 _编辑框窗口标记_内容被改变, 空白型, , 
赋值 (全已改, 真)
置状态条文本 ()

.子程序 _编辑框调整大小控件标记_内容被改变, 空白型, , 
赋值 (全已改, 真)
置状态条文本 ()

.子程序 _编辑框滑条控件标记_内容被改变, 空白型, , 
.如果真 (小于 (全当前选择索引, 1))
    返回 ()
.如果真结束
全控件矩形数组.置滑条控件标记 ( [全当前选择索引], 到数值 (.内容))
赋值 (全已改, 真)
置状态条文本 ()


.子程序 _编辑框显示控件标记_内容被改变, 空白型, , 
.如果真 (小于 (全当前选择索引, 1))
    返回 ()
.如果真结束
全控件矩形数组.置显示控件标记 ( [全当前选择索引], 到数值 (.内容))
赋值 (全已改, 真)
置状态条文本 ()


.子程序 _编辑框最小值_内容被改变, 空白型, , 
.如果真 (小于 (全当前选择索引, 1))
    返回 ()
.如果真结束
全控件矩形数组.置最小值 ( [全当前选择索引], 到数值 (.内容))
赋值 (全已改, 真)
置状态条文本 ()


.子程序 _编辑框最大值_内容被改变, 空白型, , 
.如果真 (小于 (全当前选择索引, 1))
    返回 ()
.如果真结束
全控件矩形数组.置最大值 ( [全当前选择索引], 到数值 (.内容))
赋值 (全已改, 真)
置状态条文本 ()


.子程序 _编辑框当前值_内容被改变, 空白型, , 
.如果真 (小于 (全当前选择索引, 1))
    返回 ()
.如果真结束
全控件矩形数组.置当前值 ( [全当前选择索引], 到数值 (.内容))
赋值 (全已改, 真)
置状态条文本 ()


.子程序 __启动窗口_可否被关闭, 逻辑型, , 
.局部变量 r, 空白型, , , 

.如果真 (全已改)
    赋值 (r, 信息框 (“工程已改变，要保存吗？”, 位或 (#询问图标, #取消是否钮), #程序标题))
    .判断开始 (等于 (r, #是钮))
        保存工程 ()
    .判断 (等于 (r, #否钮))
        
    .判断 (等于 (r, #取消钮))
        返回 (假)
    .默认
        
    .判断结束
    
.如果真结束


.子程序 _退出_被选择, 空白型, , 
.局部变量 r, 空白型, , , 

.如果 (全已改)
    赋值 (r, 信息框 (“工程已改变，要保存吗？”, 位或 (#询问图标, #取消是否钮), #程序标题))
    .判断开始 (等于 (r, #是钮))
        保存工程 ()
    .判断 (等于 (r, #否钮))
        结束 ()
    .判断 (等于 (r, #取消钮))
        返回 ()
    .默认
        
    .判断结束
    
.否则
    结束 ()
.如果结束


.子程序 _原地复制_被选择, 空白型, , 
.局部变量 某控件矩形, 控件矩形, , , 

.如果真 (小于 (全当前选择索引, 1))
    返回 ()
.如果真结束

赋值 (某控件矩形, 全控件矩形数组 [全当前选择索引])
 ' 某控件矩形.置横坐标 (某控件矩形.取横坐标 () ＋ 某控件矩形.取宽度 ())
赋值 (全自动标记, 相加 (全自动标记, 1))
某控件矩形.置标记 (全自动标记)
加入成员 (全控件矩形数组, 某控件矩形)
更新控件矩形列表框 ()
选择控件矩形 (取数组成员数 (全控件矩形数组))
重画控件矩形和辅助线 ()
赋值 (全已改, 真)
置状态条文本 ()


.子程序 _向右复制_被选择, 空白型, , 
.局部变量 某控件矩形, 控件矩形, , , 

.如果真 (小于 (全当前选择索引, 1))
    返回 ()
.如果真结束

赋值 (某控件矩形, 全控件矩形数组 [全当前选择索引])
某控件矩形.置横坐标 (相加 (某控件矩形.取横坐标 (), 某控件矩形.取宽度 ()))
赋值 (全自动标记, 相加 (全自动标记, 1))
某控件矩形.置标记 (全自动标记)
加入成员 (全控件矩形数组, 某控件矩形)
更新控件矩形列表框 ()
选择控件矩形 (取数组成员数 (全控件矩形数组))
重画控件矩形和辅助线 ()
赋值 (全已改, 真)
置状态条文本 ()

.子程序 _向下复制_被选择, 空白型, , 
.局部变量 某控件矩形, 控件矩形, , , 

.如果真 (小于 (全当前选择索引, 1))
    返回 ()
.如果真结束

赋值 (某控件矩形, 全控件矩形数组 [全当前选择索引])
某控件矩形.置纵坐标 (相加 (某控件矩形.取纵坐标 (), 某控件矩形.取高度 ()))
赋值 (全自动标记, 相加 (全自动标记, 1))
某控件矩形.置标记 (全自动标记)
加入成员 (全控件矩形数组, 某控件矩形)
更新控件矩形列表框 ()
选择控件矩形 (取数组成员数 (全控件矩形数组))
重画控件矩形和辅助线 ()
赋值 (全已改, 真)
置状态条文本 ()


.子程序 _生成独立的皮肤文件_被选择, 空白型, , 
.局部变量 皮肤配置文件名, 文本型, , , 

.如果真 (等于 (打开 (), 假))
    返回 ()
.如果真结束

赋值 (皮肤配置文件名, .文件名)
生成独立的皮肤文件 (皮肤配置文件名)

.子程序 生成独立的皮肤文件, 空白型, , 
.参数 参临时皮肤配置文件名, 文本型, , 

.局部变量 路径, 文本型, , , 
.局部变量 皮肤文件名, 文本型, , , 
.局部变量 r, 空白型, , , 
.局部变量 文件号配置, 空白型, , , 
.局部变量 文件号皮肤, 空白型, , , 
.局部变量 标识符, 文本型, , , 
.局部变量 主版本号, 空白型, , , 
.局部变量 次版本号, 空白型, , , 
.局部变量 文件描述, 文本型, , , 
.局部变量 皮肤名, 文本型, , , 
.局部变量 透明色, 空白型, , , 
.局部变量 窗口标记, 空白型, , , 
.局部变量 窗口宽度, 空白型, , , 
.局部变量 窗口高度, 空白型, , , 
.局部变量 可否调整大小, 逻辑型, , , 
.局部变量 拖动窗口大小的控件标记, 空白型, , , 
.局部变量 是否使用超级菜单, 逻辑型, , , 
.局部变量 临时文件名, 文本型, , , 
.局部变量 数据, 字节集, , , 
.局部变量 某控件矩形, 控件矩形, , , 
.局部变量 控件类型, 整数型, , , 
.局部变量 b, 逻辑型, , , 
.局部变量 t, 空白型, , , 
.局部变量 是否已注册, 逻辑型, , , 
.局部变量 i, 整数型, , , 

赋值 (路径, 取文本左边 (参临时皮肤配置文件名, 倒找文本 (参临时皮肤配置文件名, “\”, , 假)))

赋值 (皮肤文件名, 取文本左边 (参临时皮肤配置文件名, 相减 (取文本长度 (参临时皮肤配置文件名), 1)))
.如果真 (文件是否存在 (皮肤文件名))
    赋值 (r, 信息框 (“皮肤文件已经存在，要覆盖吗？”, 位或 (#询问图标, #取消是否钮), #程序标题))
    .如果真 (不等于 (r, #是钮))
        返回 ()
    .如果真结束
    
.如果真结束
赋值 (文件号配置, 打开文件 (参临时皮肤配置文件名, #读入, #禁止写))
赋值 (文件号皮肤, 打开文件 (皮肤文件名, #重写, #禁止写))

读入数据 (文件号配置, 标识符, 主版本号, 次版本号, 文件描述, 皮肤名, 透明色, 窗口标记, 窗口宽度, 窗口高度, 可否调整大小, 拖动窗口大小的控件标记, 是否使用超级菜单)

 ' 输出调试文本 (皮肤名, 标识符, 主版本号, 次版本号, 皮肤名, 透明色, “窗口标记”, 窗口标记, 窗口宽度, 窗口高度, 可否调整大小,拖动窗口大小的控件标记)
赋值 (文件描述, “易容大师 皮肤文件1.1 http://www.goomoo.cn”)
 ' 原样写出
写出数据 (文件号皮肤, 标识符, 主版本号, 次版本号, 文件描述, 皮肤名, 透明色, 窗口标记, 窗口宽度, 窗口高度, 可否调整大小, 拖动窗口大小的控件标记, 是否使用超级菜单)
.如果真 (是否使用超级菜单)
    .计次循环首 (10, i)
        读入数据 (文件号配置, t)
        写出数据 (文件号皮肤, t)
    .计次循环尾 ()
.如果真结束
 ' 写入注册信息
赋值 (是否已注册, 真)
写出数据 (文件号皮肤, 是否已注册)

.如果真 (等于 (可否调整大小, 假))
     ' 有背景图，背景图命名就是 窗口标记.bmp
    赋值 (临时文件名, 相加 (路径, “window.bmp”))
    .如果 (文件是否存在 (临时文件名))
        赋值 (数据, 读入文件 (临时文件名))
        写出数据 (文件号皮肤, 数据)
    .否则
        信息框 (相加 (“窗口背景图片文件不存在:”, 临时文件名), #错误图标, #程序标题)
        关闭文件 (文件号配置)
        关闭文件 (文件号皮肤)
        返回 ()
    .如果结束
    
.如果真结束
赋值 (数据, 到字节集 (#主分割符)) ' 文件头和控件数据之间以分割符分开
写出字节集 (文件号皮肤, 数据)
 ' 以下为控件数据
置随机数种子 ()
置等待鼠标 ()
.循环判断首 ()
    读入数据 (文件号配置, 数据)
    写出数据 (文件号皮肤, 数据)
    某控件矩形.从字节集读入 (数据)
    赋值 (控件类型, 某控件矩形.取控件类型 ())
    .判断开始 (或者 (等于 (控件类型, #控件类型_图形按钮), 等于 (控件类型, #控件类型_水平滑块), 等于 (控件类型, #控件类型_垂直滑块)))
         ' 正常图片
        赋值 (临时文件名, 相加 (路径, 到文本 (某控件矩形.取标记 ()), “_normal.bmp”))
        .如果 (文件是否存在 (临时文件名))
            赋值 (数据, 读入文件 (临时文件名))
            写出数据 (文件号皮肤, #图片_正常, 数据) ' 写出皮肤的类型
        .否则
            信息框 (相加 (“图片不存在:”, 临时文件名), #错误图标, #程序标题)
            关闭文件 (文件号配置)
            关闭文件 (文件号皮肤)
            返回 ()
        .如果结束
         ' 鼠标经过图片
        赋值 (临时文件名, 相加 (路径, 到文本 (某控件矩形.取标记 ()), “_over.bmp”))
        .如果真 (文件是否存在 (临时文件名))
            赋值 (数据, 读入文件 (临时文件名))
            写出数据 (文件号皮肤, #图片_鼠标经过, 数据)
        .如果真结束
         ' 鼠标按下图片
        赋值 (临时文件名, 相加 (路径, 到文本 (某控件矩形.取标记 ()), “_down.bmp”))
        .如果真 (文件是否存在 (临时文件名))
            赋值 (数据, 读入文件 (临时文件名))
            写出数据 (文件号皮肤, #图片_鼠标按下, 数据)
        .如果真结束
         ' 禁止图片
        赋值 (临时文件名, 相加 (路径, 到文本 (某控件矩形.取标记 ()), “_gray.bmp”))
        .如果真 (文件是否存在 (临时文件名))
            赋值 (数据, 读入文件 (临时文件名))
            写出数据 (文件号皮肤, #图片_灰化, 数据)
        .如果真结束
        
    .判断 (或者 (等于 (控件类型, #控件类型_画板), 等于 (控件类型, #控件类型_标签)))
        赋值 (临时文件名, 相加 (路径, 到文本 (某控件矩形.取标记 ()), “.bmp”))
        .如果 (文件是否存在 (临时文件名))
            赋值 (数据, 读入文件 (临时文件名))
            写出数据 (文件号皮肤, 数据)
        .否则
            信息框 (相加 (“图片不存在:”, 临时文件名), #错误图标, #程序标题)
        .如果结束
        
    .默认
        
    .判断结束
    赋值 (数据, 到字节集 (#主分割符))
    写出字节集 (文件号皮肤, 数据)
.循环判断尾 (取反 (是否在文件尾 (文件号配置, )))

关闭文件 (文件号配置)
关闭文件 (文件号皮肤)
恢复鼠标 ()
信息框 (“皮肤文件生成完毕。”, #信息图标, #程序标题)


.子程序 _标签打开工程文件_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

_打开_被选择 ()


.子程序 _载入通常图片_被选择, 空白型, , 
_标签41_鼠标左键被放开 (0, 0, 0)


.子程序 _载入鼠标经过图片_被选择, 空白型, , 
_标签42_鼠标左键被放开 (0, 0, 0)


.子程序 _载入鼠标按下图片_被选择, 空白型, , 
_标签43_鼠标左键被放开 (0, 0, 0)


.子程序 _载入禁止图片_被选择, 空白型, , 
_标签44_鼠标左键被放开 (0, 0, 0)


.子程序 _组合框对齐方式_列表项被选择, 空白型, , 
.如果真 (小于 (全当前选择索引, 1))
    返回 ()
.如果真结束
全控件矩形数组.置对齐方式 ( [全当前选择索引], .现行选中项)
赋值 (全已改, 真)
置状态条文本 ()


.子程序 _清除鼠标经过图片_被选择, 空白型, , 
.局部变量 r, 空白型, , , 

赋值 (r, 信息框 (“这将清除鼠标经过界面图片，你确认吗？”, 位或 (#询问图标, #取消是否钮), #程序标题))
.如果真 (等于 (r, #是钮))
    赋值 (全图片数组 [2], {  })
    赋值 (全图片文件名 [2], “”)
    赋值 (.宽度, 0)
    赋值 (.高度, 0)
    赋值 (.可视, 假)
    赋值 (.可视, 真)
    赋值 (全已改, 真)
    置状态条文本 ()
.如果真结束


.子程序 _清除鼠标按下图片_被选择, 空白型, , 
.局部变量 r, 空白型, , , 

赋值 (r, 信息框 (“这将清除鼠标按下界面图片，你确认吗？”, 位或 (#询问图标, #取消是否钮), #程序标题))
.如果真 (等于 (r, #是钮))
    赋值 (全图片数组 [3], {  })
    赋值 (全图片文件名 [3], “”)
    赋值 (.宽度, 0)
    赋值 (.高度, 0)
    赋值 (.可视, 假)
    赋值 (.可视, 真)
    赋值 (全已改, 真)
    置状态条文本 ()
.如果真结束


.子程序 _清除禁止图片_被选择, 空白型, , 
.局部变量 r, 空白型, , , 

赋值 (r, 信息框 (“这将清除禁止界面图片，你确认吗？”, 位或 (#询问图标, #取消是否钮), #程序标题))
.如果真 (等于 (r, #是钮))
    赋值 (全图片数组 [4], {  })
    赋值 (全图片文件名 [4], “”)
    赋值 (.宽度, 0)
    赋值 (.高度, 0)
    赋值 (.可视, 假)
    赋值 (.可视, 真)
    赋值 (全已改, 真)
    置状态条文本 ()
.如果真结束


.子程序 _按钮应用设置_被单击, 空白型, , 
重画控件矩形和辅助线 ()
写配置文件 ()


.子程序 缩放到合适, 空白型, , 
.局部变量 空间宽高比, 双精度小数型, , , 
.局部变量 窗口宽高比, 双精度小数型, , , 

赋值 (窗口宽高比, 相除 (全窗口宽度, 全窗口高度))
.如果 (.可视)
    赋值 (空间宽高比, 相除 (相减 (.宽度, .宽度, 10), 相减 (.高度, 25, 5)))
.否则
    赋值 (空间宽高比, 相除 (相减 (.宽度, 10), 相减 (.高度, 25, 5)))
.如果结束

.如果 (大于 (窗口宽高比, 空间宽高比))
    .如果 (.可视)
        赋值 (全缩放比, 相除 (相减 (.宽度, .宽度, 10), 全窗口宽度)) ' 按宽度缩放
    .否则
        赋值 (全缩放比, 相除 (相减 (.宽度, 10), 全窗口宽度)) ' 按宽度缩放
    .如果结束
    
.否则
    赋值 (全缩放比, 相除 (相减 (.高度, 25, 5), 全窗口高度))
.如果结束

赋值 (.宽度, 相乘 (全窗口宽度, 全缩放比))
赋值 (.高度, 相乘 (全窗口高度, 全缩放比))
赋值 (.宽度, .宽度)
赋值 (.高度, .高度)

重画控件矩形和辅助线 ()
赋值 (.选中, 真)
赋值 (.选中, 假)


.子程序 缩放到原大, 空白型, , 
赋值 (.宽度, 全窗口宽度)
赋值 (.高度, 全窗口高度)
赋值 (.宽度, 全窗口宽度)
赋值 (.高度, 全窗口高度)
赋值 (全缩放比, 1)
重画控件矩形和辅助线 ()
赋值 (.选中, 假)
赋值 (.选中, 真)


.子程序 _缩放到合适显示_被选择, 空白型, , 
缩放到合适 ()


.子程序 _刷新_被选择, 空白型, , 
重画控件矩形和辅助线 ()


.子程序 __启动窗口_尺寸被改变, 空白型, , 
.如果真 (.选中)
    缩放到合适 ()
.如果真结束


.子程序 _原大显示_被选择, 空白型, , 
缩放到原大 ()


.子程序 _控件列表框_被选择, 空白型, , 
.如果真 (等于 (全图片数组 [1], {  })) ' 未载入图片则不理会。
    返回 ()
.如果真结束
赋值 (.选中, 取反 (.选中))
赋值 (.可视, .选中)
.如果真 (等于 (.选中, 真))
    缩放到合适 ()
.如果真结束


.子程序 _在线教程_被选择, 空白型, , 
载入 (教程窗口, _启动窗口, 假)


.子程序 _加入水平辅助线_被选择, 空白型, , 
信息框 (“请先将鼠标光标置于画板上期望的位置，然后按键盘上的[-]键加入水平辅助线。”, #信息图标, #程序标题)

.子程序 _加入垂直辅助线_被选择, 空白型, , 
信息框 (“请先将鼠标光标置于画板上期望的位置，然后按键盘上的[|]键加入垂直辅助线。”, #信息图标, #程序标题)


.子程序 _同时加入水平和垂直辅助线_被选择, 空白型, , 
信息框 (“请先将鼠标光标置于画板上期望的位置，然后按键盘上的[+]键同时加入水平辅助线和垂直辅助线。”, #信息图标, #程序标题)


.子程序 _删除光标附近的辅助线_被选择, 空白型, , 
信息框 (“请先将鼠标光标置于画板上欲删除的辅助线附近，然后按键盘上的[Ctrl]+[Del]键删除辅助线。”, #信息图标, #程序标题)


.子程序 _画板1_鼠标右键被放开, 逻辑型, , 在鼠标右键放开时，设定选择控件矩形的锚点属性
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 某控件矩形, 控件矩形, , , 为便于写代码
.局部变量 矩形边宽, 空白型, , , 
.局部变量 临时矩形, RECT, , , 
.局部变量 x, 空白型, , , 
.局部变量 y, 空白型, , , 
.局部变量 t, 空白型, , , 
.局部变量 控件矩形左边, 空白型, , , x Rect 横向位置
.局部变量 控件矩形上边, 空白型, , , y Rect　纵向位置
.局部变量 控件矩形右边, 空白型, , , right rect　宽度
.局部变量 控件矩形下边, 空白型, , , bottom Rect　高度
.局部变量 已改, 逻辑型, , , 

 ' 此段为1.1版本新增，用来判断预览菜单模式和用吸管吸色模式
.如果真 (.选中)
    .弹出菜单 ()
    返回 ()
.如果真结束

 ' 在鼠标右键放开时，设定选择控件矩形的锚点属性
 ' 可以在矩形的角上点击以同时设置两边的锚点
 ' 鼠标选择控件矩形 (横向位置, 纵向位置)
.如果真 (小于或等于 (全当前选择索引, 0))
     ' 重画控件矩形和辅助线 ()
    返回 () ' 无选择对象，返回。
.如果真结束

赋值 (矩形边宽, 7)
赋值 (已改, 假)
赋值 (x, 横向位置)
赋值 (y, 纵向位置)
赋值 (某控件矩形, 全控件矩形数组 [全当前选择索引])

赋值 (控件矩形左边, 相乘 (某控件矩形.取横坐标 (), 全缩放比))
赋值 (控件矩形上边, 相乘 (某控件矩形.取纵坐标 (), 全缩放比))
赋值 (控件矩形右边, 相乘 (相加 (某控件矩形.取横坐标 (), 某控件矩形.取宽度 ()), 全缩放比))
赋值 (控件矩形下边, 相乘 (相加 (某控件矩形.取纵坐标 (), 某控件矩形.取高度 ()), 全缩放比))

 ' 如果锚点未显示出来，则直接弹出菜单。
.如果真 (或者 (等于 (.选中, 假), 等于 (.选中, 假)))
    赋值 (临时矩形.左边, 控件矩形左边)
    赋值 (临时矩形.上边, 控件矩形上边)
    赋值 (临时矩形.右边, 控件矩形右边)
    赋值 (临时矩形.下边, 控件矩形下边)
    .如果真 (API_PtInRect (临时矩形, x, y)) ' 光标必须在控件矩形内部
        赋值 (t, 某控件矩形.取控件类型 ())
        根据控件类型选中菜单项 (t)
        弹出菜单 ()
    .如果真结束
    返回 ()
.如果真结束

 ' 以下设置锚点，如果不在设置锚点区，则弹出菜单/////////////////////////////
 ' 鼠标是否落在左侧某区域
赋值 (临时矩形.左边, 相减 (控件矩形左边, 矩形边宽))
赋值 (临时矩形.右边, 相加 (控件矩形左边, 矩形边宽))
赋值 (临时矩形.上边, 控件矩形上边)
赋值 (临时矩形.下边, 控件矩形下边)
.如果真 (API_PtInRect (临时矩形, x, y))
    全控件矩形数组.置锚住左边 ( [全当前选择索引], 取反 (某控件矩形.取锚住左边 ()))
    赋值 (.选中, 取反 (.选中))
    赋值 (已改, 真)
.如果真结束
 ' 鼠标是否落在上侧某区域
赋值 (临时矩形.左边, 控件矩形左边)
赋值 (临时矩形.右边, 控件矩形右边)
赋值 (临时矩形.上边, 相减 (控件矩形上边, 矩形边宽))
赋值 (临时矩形.下边, 相加 (控件矩形上边, 矩形边宽))
.如果真 (API_PtInRect (临时矩形, x, y))
    全控件矩形数组.置锚住上边 ( [全当前选择索引], 取反 (某控件矩形.取锚住上边 ()))
    赋值 (.选中, 取反 (.选中))
    赋值 (已改, 真)
.如果真结束
 ' 鼠标是否落在右侧某区域
赋值 (临时矩形.左边, 相减 (控件矩形右边, 矩形边宽))
赋值 (临时矩形.右边, 相加 (控件矩形右边, 矩形边宽))
赋值 (临时矩形.上边, 控件矩形上边)
赋值 (临时矩形.下边, 控件矩形下边)
.如果真 (API_PtInRect (临时矩形, x, y))
    全控件矩形数组.置锚住右边 ( [全当前选择索引], 取反 (某控件矩形.取锚住右边 ()))
    赋值 (.选中, 取反 (.选中))
    赋值 (已改, 真)
.如果真结束
 ' 鼠标是否落在下侧某区域
赋值 (临时矩形.左边, 控件矩形左边)
赋值 (临时矩形.右边, 控件矩形右边)
赋值 (临时矩形.上边, 相减 (控件矩形下边, 矩形边宽))
赋值 (临时矩形.下边, 相加 (控件矩形下边, 矩形边宽))
.如果真 (API_PtInRect (临时矩形, x, y))
    全控件矩形数组.置锚住下边 ( [全当前选择索引], 取反 (某控件矩形.取锚住下边 ()))
    赋值 (.选中, 取反 (.选中))
    赋值 (已改, 真)
.如果真结束

.如果 (已改) ' 光标在设定控件矩形锚点的范围
    重画控件矩形和辅助线 ()
    赋值 (全已改, 真)
    置状态条文本 ()
.否则
     ' 光标在中间，非设定控件矩形锚点的范围，则弹出菜单
    赋值 (临时矩形.左边, 控件矩形左边)
    赋值 (临时矩形.上边, 控件矩形上边)
    赋值 (临时矩形.右边, 控件矩形右边)
    赋值 (临时矩形.下边, 控件矩形下边)
    .如果真 (API_PtInRect (临时矩形, x, y)) ' 光标必须在控件矩形内部
        赋值 (t, 某控件矩形.取控件类型 ())
        根据控件类型选中菜单项 (t)
        弹出菜单 ()
    .如果真结束
    
.如果结束


.子程序 根据控件类型选中菜单项, 空白型, , 
.参数 参控件类型, 空白型, , 

 ' 先全部清除选择
连续赋值 (假, .选中, .选中, .选中, .选中, .选中)
.判断开始 (等于 (参控件类型, #控件类型_画板))
    赋值 (.选中, 真)
.判断 (等于 (参控件类型, #控件类型_标签))
    赋值 (.选中, 真)
.判断 (等于 (参控件类型, #控件类型_其他))
    赋值 (.选中, 真)
.判断 (等于 (参控件类型, #控件类型_图形按钮))
    赋值 (.选中, 真)
.判断 (等于 (参控件类型, #控件类型_水平滑块))
    赋值 (.选中, 真)
.默认
    
.判断结束


.子程序 _隐藏所有辅助线_被选择, 空白型, , 
赋值 (.选中, 取反 (.选中))
赋值 (.选中, .选中)
重画控件矩形和辅助线 ()

 ' 画板1.获取焦点 ()


.子程序 _删除所有辅助线_被选择, 空白型, , 
.局部变量 r, 空白型, , , 

.如果真 (等于 (全图片数组 [1], {  }))
    返回 ()
.如果真结束
赋值 (r, 信息框 (“这将删除所有辅助线，你确定吗？”, 位或 (#询问图标, #取消是否钮), #程序标题))
.如果真 (等于 (r, #是钮))
    重定义数组 (全辅助线数组, 假, 0)
    重画控件矩形和辅助线 ()
    重新生成辅助线交点 ()
    赋值 (全已改, 真)
    置状态条文本 ()
.如果真结束


.子程序 _选择框隐藏辅助线_被单击, 空白型, , 
_隐藏所有辅助线_被选择 ()


.子程序 _使选中的控件矩形捕捉到辅助线_被选择, 空白型, , 
捕捉选择的控件矩形到辅助线 ()


.子程序 捕捉选择的控件矩形到辅助线, 逻辑型, , 成功返回真，否则返回假。
.局部变量 某控件矩形, 控件矩形, , , 
.局部变量 xa, 空白型, , , 左上角和右下角顶点坐标
.局部变量 ya, 空白型, , , 
.局部变量 xb, 空白型, , , 
.局部变量 yb, 空白型, , , 
.局部变量 p, POINTAPI, , , 
.局部变量 阈值, 空白型, , , 

.如果真 (小于 (全当前选择索引, 1)) ' 未选择控件矩形
    返回 (假)
.如果真结束
.如果真 (.选中)
    返回 (假)
.如果真结束
.如果真 (小于 (取数组成员数 (全辅助线数组), 2))
    返回 (假)
.如果真结束
赋值 (阈值, 到数值 (.内容))
赋值 (某控件矩形, 全控件矩形数组 [全当前选择索引])
赋值 (xa, 某控件矩形.取横坐标 ())
赋值 (ya, 某控件矩形.取纵坐标 ())
赋值 (xb, 相加 (xa, 某控件矩形.取宽度 ()))
赋值 (yb, 相加 (ya, 某控件矩形.取高度 ()))

赋值 (p, 计算最近的辅助线交点 (xa, ya))
.如果真 (并且 (小于 (取绝对值 (相减 (p.横向位置, xa)), 阈值), 小于 (取绝对值 (相减 (p.纵向位置, ya)), 阈值)))
    赋值 (xa, p.横向位置)
    赋值 (ya, p.纵向位置)
.如果真结束
赋值 (p, 计算最近的辅助线交点 (xb, yb))
.如果真 (并且 (小于 (取绝对值 (相减 (p.横向位置, xb)), 阈值), 小于 (取绝对值 (相减 (p.纵向位置, yb)), 阈值)))
    赋值 (xb, p.横向位置)
    赋值 (yb, p.纵向位置)
.如果真结束
某控件矩形.置横坐标 (xa)
某控件矩形.置纵坐标 (ya)
某控件矩形.置宽度 (取绝对值 (相减 (xb, xa)))
某控件矩形.置高度 (取绝对值 (相减 (yb, ya)))
赋值 (全控件矩形数组 [全当前选择索引], 某控件矩形)
重画控件矩形和辅助线 ()
赋值 (全已改, 真)
置状态条文本 ()
返回 (真)

.子程序 计算最近的辅助线交点, POINTAPI, , 有则返回真，超过阈值则返回假 
.参数 参横坐标, 空白型, , 
.参数 参纵坐标, 空白型, , 

.局部变量 p, POINTAPI, , , 
.局部变量 最小距离平方, 空白型, , , 
.局部变量 i, 整数型, , , 
.局部变量 距离平方, 空白型, , , 

赋值 (最小距离平方, 10000)
.计次循环首 (取数组成员数 (全辅助线交点数组), i)
    赋值 (距离平方, 相加 (相乘 (相减 (全辅助线交点数组 [i], 横向位置, 参横坐标), 相减 (全辅助线交点数组 [i], 横向位置, 参横坐标)), 相乘 (相减 (全辅助线交点数组 [i], 纵向位置, 参纵坐标), 相减 (全辅助线交点数组 [i], 纵向位置, 参纵坐标))))
    .如果真 (小于 (距离平方, 最小距离平方))
        赋值 (最小距离平方, 距离平方)
        赋值 (p, 全辅助线交点数组 [i])
    .如果真结束
    
.计次循环尾 ()
返回 (p)


.子程序 重新生成辅助线交点, 空白型, , 
.局部变量 水平辅助线数组, 空白型, , , 
.局部变量 垂直辅助线数组, 空白型, , , 
.局部变量 i, 整数型, , , 
.局部变量 p, POINTAPI, , , 
.局部变量 j, 整数型, , , 

重定义数组 (全辅助线交点数组, 假, 0)
未知函数_270 () ' *** 缩略程序块 ***
 ' .计次循环首 (取数组成员数 (全辅助线数组), i)
     ' .如果 (全辅助线数组.取方向 ( [i]))
         ' 加入成员 (水平辅助线数组, 全辅助线数组 [i])
    .否则
         ' 加入成员 (垂直辅助线数组, 全辅助线数组 [i])
    .如果结束
    
 ' .计次循环尾 ()

.变量循环首 (1, 相减 (取数组成员数 (全辅助线数组), 1), 1, i)
    .变量循环首 (相加 (i, 1), 取数组成员数 (全辅助线数组), 1, j)
        .如果真 (等于 (全辅助线数组.取方向 ( [i]), 取反 (全辅助线数组.取方向 ( [j]))))
            .如果 (全辅助线数组.取方向 ( [i]))
                赋值 (p.横向位置, 全辅助线数组.取位置 ( [j]))
                赋值 (p.纵向位置, 全辅助线数组.取位置 ( [i]))
            .否则
                赋值 (p.横向位置, 全辅助线数组.取位置 ( [i]))
                赋值 (p.纵向位置, 全辅助线数组.取位置 ( [j]))
            .如果结束
            加入成员 (全辅助线交点数组, p)
        .如果真结束
        
    .变量循环尾 ()
.变量循环尾 ()

 ' 测试
 ' .计次循环首 (取数组成员数 (全辅助线交点数组), i)
     ' 输出调试文本 (全辅助线交点数组 [i].横向位置, 全辅助线交点数组 [i].纵向位置)
 ' .计次循环尾 ()
 ' .计次循环首 (相减 (取数组成员数 (全辅助线交点数组), 1), i)
     ' 画板1.画直线 (全辅助线交点数组 [i].横向位置, 全辅助线交点数组 [i].纵向位置, 全辅助线交点数组 [i ＋ 1].横向位置, 全辅助线交点数组 [i ＋ 1].纵向位置)
 ' .计次循环尾 ()


.子程序 添加边界辅助线, 空白型, , 
.局部变量 某辅助线, 辅助线, , , 

.如果真 (等于 (全图片数组 [1], {  }))
    输出调试文本 (“工程尚未开始。”)
    返回 ()
.如果真结束
 ' 加入初始的位于边界的辅助线
某辅助线.置方向 (真)
某辅助线.置位置 (0)
加入成员 (全辅助线数组, 某辅助线)
某辅助线.置位置 (全窗口高度) ' 注意不能使用画板的高度，因为画板可能已经缩放
加入成员 (全辅助线数组, 某辅助线)

某辅助线.置方向 (假)
某辅助线.置位置 (0)
加入成员 (全辅助线数组, 某辅助线)
某辅助线.置位置 (全窗口宽度) ' 注意不能使用画板的宽度，因为画板可能已经缩放
加入成员 (全辅助线数组, 某辅助线)
赋值 (全已改, 真)
重新生成辅助线交点 ()
重画控件矩形和辅助线 ()
置状态条文本 ()


.子程序 _添加边界辅助线_被选择, 空白型, , 
添加边界辅助线 ()


.子程序 _选择夹_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (并且 (不等于 (API_取焦点窗口 (), 取窗口句柄 ()), 等于 (.现行子夹, 0)))
    获取焦点 ()
.如果真结束


.子程序 _内容_被选择, 空白型, , 
.局部变量 文件名, 文本型, , , 

赋值 (文件名, 相加 (取运行目录 (), “\”, #帮助文明名))
.如果 (文件是否存在 (文件名))
    运行 (相加 (“hh.exe ”, #引号, 文件名, #引号), 假, )
.否则
    信息框 (相加 (“未找到帮助文件：”, 文件名), #错误图标, #程序标题)
.如果结束


.子程序 _写出到易语言编程环境_被选择, 空白型, , 
.局部变量 r, 空白型, , , 
.局部变量 提示文本, 文本型, , , 提示用户选择哪项的文本:替换还是合并
.局部变量 是否新建, 逻辑型, , , 
.局部变量 i, 空白型, , , 
.局部变量 控件类型, 整数型, , , 
.局部变量 控件名称, 文本型, , , 
.局部变量 控件备注, 文本型, , , 
.局部变量 滑块值编辑框名, 文本型, , , 用来显示滑块值的编辑框名

输出调试文本 (是否作为易向导运行 ())
.如果真 (等于 (是否作为易向导运行 (), 假))
    信息框 (“此功能仅作为易向导运行时有效。”, #信息图标, #程序标题)
    返回 ()
.如果真结束

.如果真 (等于 (取字节集长度 (全图片数组 [1]), 0))
    信息框 (“工程还未开始制作呢。请先选择正常图片。”, #信息图标, #程序标题)
    赋值 (.现行子夹, 0)
    返回 ()
.如果真结束

.如果真 (等于 (.内容, “”))
    信息框 (“请输入皮肤名。”, #信息图标, #程序标题)
    赋值 (.现行子夹, 0)
    获取焦点 ()
    返回 ()
.如果真结束

.如果真 (全已改) ' 询问是否要保存文件
    赋值 (r, 信息框 (“工程已改变，要保存吗？”, 位或 (#询问图标, #取消是否钮), #程序标题))
    .判断开始 (等于 (r, #是钮))
        保存工程 ()
    .判断 (等于 (r, #否钮))
        
    .判断 (等于 (r, #取消钮))
        返回 ()
    .默认
        
    .判断结束
    
.如果真结束

.如果真 (.选中)
    .如果真 (或者 (等于 (.内容, “”), 等于 (.内容, “0”)))
        信息框 (“请指定拖动窗口大小的控件标记。”, #信息图标, #程序标题)
        赋值 (.现行子夹, 0)
        获取焦点 ()
        返回 ()
    .如果真结束
    
.如果真结束

赋值 (提示文本, 相加 (“你是要新建一个易语言源文件，还是要与当前正在编辑的源文件合并？”, #换行符, #换行符, “是：关闭正在编辑的易程序并写出新程序”, #换行符, #换行符, “否：将写出的程序与当前正编辑的程序合并”, #换行符, #换行符, “取消：取消本次操作”))
赋值 (r, 信息框 (提示文本, 位或 (#询问图标, #取消是否钮), #程序标题))
.判断开始 (等于 (r, #是钮))
    赋值 (是否新建, 真)
.判断 (等于 (r, #否钮))
    赋值 (是否新建, 假)
.判断 (等于 (r, #取消钮))
    返回 ()
.默认
    
.判断结束

 ' 先设置窗口属性
未知支持库函数_6 (“_启动窗口.宽度”, 全窗口宽度)
未知支持库函数_6 (“_启动窗口.高度”, 全窗口高度)

 ' 复制控件和设置属性
.计次循环首 (取数组成员数 (全控件矩形数组), i)
    赋值 (控件类型, 全控件矩形数组.取控件类型 ( [i]))
    赋值 (控件备注, 全控件矩形数组.取备注 ( [i]))
    .如果真 (等于 (控件备注, “”))
         ' 如果控件备注为空，则用其标记代替，以免名称重复
        赋值 (控件备注, 到文本 (全控件矩形数组.取标记 ( [i])))
    .如果真结束
    .判断开始 (或者 (等于 (控件类型, #控件类型_图形按钮), 等于 (控件类型, #控件类型_水平滑块), 等于 (控件类型, #控件类型_垂直滑块), 等于 (控件类型, #控件类型_进度条)))
        赋值 (控件名称, 相加 (“图形按钮”, 控件备注))
        未知支持库函数_0 (#., “_启动窗口.临时图形按钮”, 控件名称)
    .判断 (等于 (控件类型, #控件类型_画板))
        赋值 (控件名称, 相加 (“画板”, 控件备注))
        未知支持库函数_0 (#., “_启动窗口.临时画板”, 控件名称)
    .判断 (等于 (控件类型, #控件类型_标签))
        赋值 (控件名称, 相加 (“标签”, 控件备注))
        未知支持库函数_0 (#., “_启动窗口.临时标签”, 控件名称)
    .判断 (等于 (控件类型, #控件类型_其他))
        赋值 (控件名称, 相加 (“编辑框”, 控件备注))
        未知支持库函数_0 (#., “_启动窗口.临时编辑框”, 控件名称)
    .默认
        
    .判断结束
    .如果真 (或者 (等于 (控件类型, #控件类型_水平滑块), 等于 (控件类型, #控件类型_垂直滑块)))
         ' 如果是滑块条则还要复制其相关的编辑框
        赋值 (滑块值编辑框名, 相加 (“编辑框”, 控件备注, “值”))
        未知支持库函数_0 (#., “_启动窗口.临时编辑框滑块值”, 滑块值编辑框名)
        未知支持库函数_6 (相加 (“_启动窗口.”, 滑块值编辑框名, “.左边”), 相加 (全控件矩形数组.取横坐标 ( [i]), 全控件矩形数组.取宽度 ( [i]), 3))
        未知支持库函数_6 (相加 (“_启动窗口.”, 滑块值编辑框名, “.顶边”), 全控件矩形数组.取纵坐标 ( [i]))
        未知支持库函数_6 (相加 (“_启动窗口.”, 滑块值编辑框名, “.标记”), 到文本 (全控件矩形数组.取显示控件标记 ( [i])))
    .如果真结束
     ' 移动复制出来的控件，并设置标记
    未知支持库函数_6 (相加 (“_启动窗口.”, 控件名称, “.左边”), 全控件矩形数组.取横坐标 ( [i]))
    未知支持库函数_6 (相加 (“_启动窗口.”, 控件名称, “.顶边”), 全控件矩形数组.取纵坐标 ( [i]))
    未知支持库函数_6 (相加 (“_启动窗口.”, 控件名称, “.宽度”), 全控件矩形数组.取宽度 ( [i]))
    未知支持库函数_6 (相加 (“_启动窗口.”, 控件名称, “.高度”), 全控件矩形数组.取高度 ( [i]))
    未知支持库函数_6 (相加 (“_启动窗口.”, 控件名称, “.标记”), 到文本 (全控件矩形数组.取标记 ( [i]))) ' 注意标记是文本型，可是取标记控件只接收数值型？
    
     ' .如果真 (等于 (控件类型, #控件类型_其他))
         ' ' 需要设置控件数据
         ' 复制程序段 (“窗口程序集1.__启动窗口_创建完毕”, “欲复制的代码”, “欲复制到的位置”)
         ' 定义模板变量 (“”, 控件名称 ＋ “.取窗口句柄(),” ＋ 到文本 (全控件矩形数组 [i].取标记 ()))
    .如果真结束
    
.计次循环尾 ()

未知支持库函数_2 (#., “_启动窗口.临时图形按钮”)
未知支持库函数_2 (#., “_启动窗口.临时画板”)
未知支持库函数_2 (#., “_启动窗口.临时标签”)
未知支持库函数_2 (#., “_启动窗口.临时编辑框”)
未知支持库函数_2 (#., “_启动窗口.临时编辑框滑块值”)

.如果 (是否新建)
    未知支持库函数_13 (#模板程序, 真)
.否则
     ' 否则要修改启动窗口的名称
    未知支持库函数_5 (#., “_启动窗口”, #., 相加 (“窗口”, .内容))
    未知支持库函数_13 (#模板程序, 假)
.如果结束
结束 ()


.子程序 _安装易容大师模块_被选择, 空白型, , 
.局部变量 易语言路径, 文本型, , , 
.局部变量 模块文件名, 文本型, , , 

赋值 (易语言路径, 取易语言安装路径 ())
.如果真 (等于 (易语言路径, “”))
    信息框 (“未找到易语言安装路径。”, #错误图标, #程序标题)
    返回 ()
.如果真结束
赋值 (模块文件名, 相加 (取运行目录 (), “\易容大师.ec”))
.如果真 (等于 (文件是否存在 (模块文件名), 假))
    信息框 (相加 (“模块文件不存在：”, 模块文件名, #换行符, “请检查安装是否正确，或重新安装《易容大师》。”), #错误图标, #程序标题)
    返回 ()
.如果真结束
.如果 (复制文件 (模块文件名, 相加 (易语言路径, “ecom\易容大师.ec”)))
    信息框 (“安装易容大师模块成功！”, #信息图标, #程序标题)
.否则
    信息框 (“安装易容大师模块失败！”, #错误图标, #程序标题)
.如果结束


.子程序 _安装易容大师到易向导目录_被选择, 空白型, , 
.局部变量 易语言路径, 文本型, , , 

.如果真 (是否为调试版 ())
    返回 ()
.如果真结束
赋值 (易语言路径, 取易语言安装路径 ())
.如果真 (等于 (易语言路径, “”))
    信息框 (“未找到易语言安装路径。”, #错误图标, #程序标题)
    返回 ()
.如果真结束
.如果 (未知支持库函数_0 (相加 (易语言路径, “wizard\易容大师.lnk”), 相加 (取运行目录 (), “\”, 取执行文件名 ()), “易容大师－易语言皮肤生成器”, , 取运行目录 ()))
    信息框 (“安装到易向导成功！”, #信息图标, #程序标题)
.否则
    信息框 (“安装到易向导失败！”, #错误图标, #程序标题)
.如果结束


.子程序 _自动设置所有控件矩形的锚点属性_被选择, 空白型, , 
自动设置锚点属性 ()
重画控件矩形和辅助线 ()


.子程序 自动设置锚点属性, 空白型, , 
.局部变量 r, 空白型, , , 
.局部变量 i, 空白型, , , 
.局部变量 left, 空白型, , , 
.局部变量 right, 空白型, , , 
.局部变量 top, 空白型, , , 
.局部变量 bottom, 空白型, , , 
.局部变量 横向中点, 空白型, , , 
.局部变量 纵向中点, 空白型, , , 

.如果真 (等于 (.选中, 假))
    信息框 (“窗口大小不可调整，无必要设置控件锚点属性。”, #信息图标, #程序标题)
    返回 ()
.如果真结束

赋值 (r, 信息框 (“本操作也许会更改你手动设置的某些锚点属性，你确定要继续吗？”, 位或 (#是否钮, #询问图标), #程序标题))
.如果真 (不等于 (r, #是钮))
    返回 ()
.如果真结束
.如果真 (等于 (取数组成员数 (全控件矩形数组), 0))
    信息框 (“当前尚无控件矩形。”, #信息图标, #程序标题)
    返回 ()
.如果真结束
赋值 (横向中点, 相除 (全窗口宽度, 2))
赋值 (纵向中点, 相除 (全窗口高度, 2))
.计次循环首 (取数组成员数 (全控件矩形数组), i)
    赋值 (left, 全控件矩形数组.取横坐标 ( [i]))
    赋值 (right, 相加 (全控件矩形数组.取横坐标 ( [i]), 全控件矩形数组.取宽度 ( [i])))
    赋值 (top, 全控件矩形数组.取纵坐标 ( [i]))
    赋值 (bottom, 相加 (全控件矩形数组.取纵坐标 ( [i]), 全控件矩形数组.取高度 ( [i])))
    
    全控件矩形数组.置锚住左边 ( [i], 小于 (left, 横向中点))
    全控件矩形数组.置锚住上边 ( [i], 小于 (top, 纵向中点))
    全控件矩形数组.置锚住右边 ( [i], 大于 (right, 横向中点))
    全控件矩形数组.置锚住下边 ( [i], 大于 (bottom, 纵向中点))
    
     ' .如果真 (并且 (不等于 (left, 0), 不等于 (right, 全窗口宽度), 不等于 (top, 0), 不等于 (bottom, 全窗口高度)))
         ' 到循环尾 ()
    .如果真结束
     ' count ＝ count ＋ 1
     ' s ＝ s ＋ 到文本 (全控件矩形数组 [i].取标记 ()) ＋ “:” ＋ 全控件矩形数组 [i].取备注 () ＋ #换行符
    
     ' ' 清除锚点信息
     ' 全控件矩形数组 [i].置锚住上边 (假)
     ' 全控件矩形数组 [i].置锚住左边 (假)
     ' 全控件矩形数组 [i].置锚住右边 (假)
     ' 全控件矩形数组 [i].置锚住下边 (假)
    
     ' .如果真 (等于 (left, 0))
         ' 全控件矩形数组 [i].置锚住左边 (真)
    .如果真结束
     ' .如果真 (等于 (top, 0))
         ' 全控件矩形数组 [i].置锚住上边 (真)
    .如果真结束
     ' .如果真 (等于 (right, 全窗口宽度))
         ' 全控件矩形数组 [i].置锚住右边 (真)
    .如果真结束
     ' .如果真 (等于 (bottom, 全窗口高度))
         ' 全控件矩形数组 [i].置锚住下边 (真)
    .如果真结束
    
     ' .如果真 (或者 (等于 (left, 0), 等于 (right, 全窗口宽度))) ' 设置纵向锚点
         ' .如果 (小于 (top, 纵向中点))
             ' 全控件矩形数组 [i].置锚住上边 (真)
             ' .如果 (大于 (bottom, 纵向中点))
                 ' 全控件矩形数组 [i].置锚住下边 (真)
            .否则
                 ' 全控件矩形数组 [i].置锚住下边 (假)
            .如果结束
            
        .否则
             ' 全控件矩形数组 [i].置锚住上边 (假)
             ' 全控件矩形数组 [i].置锚住下边 (真)
        .如果结束
        
    .如果真结束
     ' .如果真 (或者 (等于 (top, 0), 等于 (bottom, 全窗口高度))) ' 设置横向锚点
         ' .如果 (小于 (left, 横向中点))
             ' 全控件矩形数组 [i].置锚住左边 (真)
             ' .如果 (大于 (right, 横向中点))
                 ' 全控件矩形数组 [i].置锚住右边 (真)
            .否则
                 ' 全控件矩形数组 [i].置锚住右边 (假)
            .如果结束
            
        .否则
             ' 全控件矩形数组 [i].置锚住左边 (假)
             ' 全控件矩形数组 [i].置锚住右边 (真)
        .如果结束
        
    .如果真结束
    
.计次循环尾 ()
信息框 (“自动设置控件锚点完毕，有少部分控件矩形的锚点属性也许还需要手动调整一下。”, #信息图标, #程序标题)


.子程序 _选择框隐藏控件矩形_被单击, 空白型, , 
 ' 注意，同时还要修改“读配置文件”函数
赋值 (.禁止, .选中)
赋值 (.禁止, .选中)
赋值 (.禁止, .选中)

.子程序 _易容大师论坛_被选择, 空白型, , 
API_ShellExecute (取窗口句柄 (), “open”, “http://free3.e-168.cn/goomoo/bbs”, “”, “”, 0)


.子程序 _易容大师网站_被选择, 空白型, , 
API_ShellExecute (取窗口句柄 (), “open”, “http://goomoo.cn”, “”, “”, 0)


.子程序 _中国易语言网站_被选择, 空白型, , 
API_ShellExecute (取窗口句柄 (), “open”, “http://www.dywt.com.cn”, “”, “”, 0)


.子程序 _中国易语言论坛_被选择, 空白型, , 
API_ShellExecute (取窗口句柄 (), “open”, “http://www.dywt.com.cn/vbs”, “”, “”, 0)

.子程序 _图形按钮_被选择, 空白型, , 
.如果真 (小于 (全当前选择索引, 1))
    返回 ()
.如果真结束
.如果真 (等于 (全控件矩形数组.取控件类型 ( [全当前选择索引]), #控件类型_图形按钮))
    返回 ()
.如果真结束
全控件矩形数组.置控件类型 ( [全当前选择索引], #控件类型_图形按钮)
赋值 (.现行选中项, #控件类型_图形按钮)
赋值 (.可视, 假)
.如果真 (.选中)
    重画控件矩形和辅助线 ()
.如果真结束
赋值 (全已改, 真)
置状态条文本 ()


.子程序 _画板_被选择, 空白型, , 
.如果真 (小于 (全当前选择索引, 1))
    返回 ()
.如果真结束
.如果真 (等于 (全控件矩形数组.取控件类型 ( [全当前选择索引]), #控件类型_画板))
    返回 ()
.如果真结束
全控件矩形数组.置控件类型 ( [全当前选择索引], #控件类型_画板)
赋值 (.现行选中项, #控件类型_画板)
赋值 (.可视, 假)
.如果真 (.选中)
    重画控件矩形和辅助线 ()
.如果真结束
赋值 (全已改, 真)
置状态条文本 ()


.子程序 _标签_被选择, 空白型, , 
.如果真 (小于 (全当前选择索引, 1))
    返回 ()
.如果真结束
.如果真 (等于 (全控件矩形数组.取控件类型 ( [全当前选择索引]), #控件类型_标签))
    返回 ()
.如果真结束
全控件矩形数组.置控件类型 ( [全当前选择索引], #控件类型_标签)
赋值 (.现行选中项, #控件类型_标签)
赋值 (.可视, 假)
.如果真 (.选中)
    重画控件矩形和辅助线 ()
.如果真结束

赋值 (全已改, 真)
置状态条文本 ()


.子程序 _水平滑块_被选择, 空白型, , 
.如果真 (小于 (全当前选择索引, 1))
    返回 ()
.如果真结束
.如果真 (等于 (全控件矩形数组.取控件类型 ( [全当前选择索引]), #控件类型_水平滑块))
    返回 ()
.如果真结束
全控件矩形数组.置控件类型 ( [全当前选择索引], #控件类型_水平滑块)
全控件矩形数组.置显示控件标记 ( [全当前选择索引], 相加 (1000, 全控件矩形数组.取标记 ( [全当前选择索引])))

 ' 组合框控件类型.现行选中项 ＝ #控件类型_水平滑块
选择控件矩形 (全当前选择索引) ' 因为滑块条涉及到更多的设置，所以直接使用函数选中，免去写代码
.如果真 (.选中)
    重画控件矩形和辅助线 ()
.如果真结束

赋值 (全已改, 真)
置状态条文本 ()


.子程序 _其他_被选择, 空白型, , 
.如果真 (小于 (全当前选择索引, 1))
    返回 ()
.如果真结束
.如果真 (等于 (全控件矩形数组.取控件类型 ( [全当前选择索引]), #控件类型_其他))
    返回 ()
.如果真结束
全控件矩形数组.置控件类型 ( [全当前选择索引], #控件类型_其他)
赋值 (.现行选中项, #控件类型_其他)
赋值 (.可视, 假)
.如果真 (.选中)
    重画控件矩形和辅助线 ()
.如果真结束

赋值 (全已改, 真)
置状态条文本 ()


.子程序 _取消选择_被选择, 空白型, , 
取消选择任何控件矩形 ()


.子程序 取消选择任何控件矩形, 空白型, , 
.如果真 (小于 (全当前选择索引, 1))
    返回 ()
.如果真结束
全控件矩形数组.取消选择 ( [全当前选择索引])
赋值 (.现行选中项, -1)
赋值 (全当前选择索引, -1)
重画控件矩形和辅助线 ()


.子程序 _每日一帖_被选择, 空白型, , 
载入 (窗口每日一帖, _启动窗口, 假)


.子程序 _自动生成控件矩形_被选择, 空白型, , 
 ' 自动生成控件矩形 ()
自动生成控件矩形使用数组 ()


.子程序 自动生成控件矩形使用数组, 空白型, , 不再使用自己写的取颜色值的方法，而是先取点的像素值，保存在数组中。
.局部变量 比较位图数据, 字节集, , , 
.局部变量 数据数组一, 整数型, , "0", 
.局部变量 数据数组二, 整数型, , "0", 
.局部变量 j, 整数型, , , 
.局部变量 i, 整数型, , , 
.局部变量 k, 空白型, , , 
.局部变量 m, 空白型, , , 
.局部变量 n, 空白型, , , 
.局部变量 矩形数组, RECT, , "0", 
.局部变量 某矩形, RECT, , , 临时矩形
.局部变量 颜色1, 空白型, , , 画板１上某点的颜色
.局部变量 颜色2, 空白型, , , 画板２上某点的颜色
.局部变量 矩形高度, 空白型, , , 
.局部变量 已开始, 逻辑型, , , 
.局部变量 某控件矩形, 控件矩形, , , 
.局部变量 通常位图数据, 字节集, , , 
.局部变量 已在控件矩形中, 逻辑型, , , 判断当前点是否已在控件矩形中，如果在则不在计算
.局部变量 已有控件矩形数, 空白型, , , 
.局部变量 r, 整数型, , , 
.局部变量 扩展边界, 整数型, , , 
.局部变量 距离临界值, 整数型, , , 
.局部变量 已删除, 逻辑型, , , 
.局部变量 矩形距离, 整数型, , , 

.如果真 (等于 (全图片数组 [1], {  }))
    信息框 (“请先载入通常图片。”, #信息图标, #程序标题)
    返回 ()
.如果真结束
.如果真 (并且 (等于 (全图片数组 [2], {  }), 等于 (全图片数组 [3], {  }), 等于 (全图片数组 [4], {  })))
    信息框 (“还需要载入鼠标经过图片　或　鼠标按下图片　或　禁止图片之一。”, #信息图标, #程序标题)
    返回 ()
.如果真结束

.判断开始 (不等于 (全图片数组 [2], {  }))
    赋值 (比较位图数据, 全图片数组 [2])
.判断 (不等于 (全图片数组 [3], {  }))
    赋值 (比较位图数据, 全图片数组 [3])
.判断 (不等于 (全图片数组 [4], {  }))
    赋值 (比较位图数据, 全图片数组 [4])
.默认
    
.判断结束

 ' 检查是否为bmp格式的图片数据
.如果真 (或者 (等于 (是否为位图格式数据 (全图片数组 [1]), 假), 等于 (是否为位图格式数据 (比较位图数据), 假)))
    信息框 (“有的图片不是bmp格式的图片(可能是jpg格式或gif格式的)。只有使用bmp格式的图片才能正确地生成控件矩形。”, #信息图标, #程序标题)
    返回 ()
.如果真结束

载入 (窗口采集像素点, _启动窗口, 假)
赋值 (窗口采集像素点..宽度, 全窗口宽度)
赋值 (窗口采集像素点..高度, 全窗口高度)

 ' 算法思路如下：对通常图片和鼠标经过图片逐行扫描，如果发现有一个点的颜色不同，则该点的纵坐标为新控件矩形的纵坐标，然后以该点为基点向下扫描，直到得到的像素点的颜色相同，则该点的纵坐标为新控件矩形的下边.再取高度方向的中点，分别向左和右扫描，取出其宽度即可。

 ' 将像素点采集到数组中
重定义数组 (数据数组一, 假, 全窗口宽度, 全窗口高度)
重定义数组 (数据数组二, 假, 全窗口宽度, 全窗口高度)
赋值 (窗口采集像素点..底图, 全图片数组 [1])
处理事件 ()
置等待鼠标 ()
.计次循环首 (全窗口高度, j)
    .计次循环首 (全窗口宽度, i)
        赋值 (数据数组一 [i] [j], 窗口采集像素点.取点 (., i, j))
    .计次循环尾 ()
.计次循环尾 ()
赋值 (窗口采集像素点..底图, 比较位图数据)
处理事件 ()
置等待鼠标 ()
.计次循环首 (全窗口高度, j)
    .计次循环首 (全窗口宽度, i)
        赋值 (数据数组二 [i] [j], 窗口采集像素点.取点 (., i, j))
    .计次循环尾 ()
.计次循环尾 ()
窗口采集像素点.销毁 ()
恢复鼠标 ()

赋值 (已开始, 假)
赋值 (i, 0)
赋值 (j, 0)
.判断循环首 (小于 (j, 全窗口高度))
    赋值 (j, 相加 (j, 1))
    赋值 (i, 0)
    .判断循环首 (小于 (i, 全窗口宽度))
        赋值 (i, 相加 (i, 1))
         ' 先要判断该点是否已经加入到控件矩形
        赋值 (已在控件矩形中, 是否在矩形数组内 (矩形数组, i, j))
        .如果真 (已在控件矩形中)
            到循环尾 () ' 跳出循环就是到下一行了，这里要到循环尾，计算下一个像素点
        .如果真结束
        赋值 (颜色1, 数据数组一 [i] [j])
        赋值 (颜色2, 数据数组二 [i] [j])
         ' 输出调试文本 (到文本 (颜色1) ＋ “,” ＋ 到文本 (颜色2))
        .如果真 (不等于 (颜色1, 颜色2))
            赋值 (已开始, 真)
            赋值 (某矩形.上边, 相减 (j, 1)) ' 保存顶边的值
             ' 开始往下搜索
            赋值 (k, 相加 (j, 1))
            .判断循环首 (小于 (k, 全窗口高度))
                赋值 (颜色1, 数据数组一 [i] [k])
                赋值 (颜色2, 数据数组二 [i] [k])
                
                .如果真 (等于 (颜色1, 颜色2))
                    跳出循环 ()
                .如果真结束
                赋值 (k, 相加 (k, 1))
            .判断循环尾 ()
            赋值 (某矩形.下边, k) ' 保存下边
             ' 再返回到矩形的纵向高度中点，分别向左、右搜索。
            赋值 (k, 相除 (相加 (某矩形.上边, 某矩形.下边), 2))
            赋值 (m, 相减 (i, 1))
             ' 往左
            .判断循环首 (大于 (m, 0))
                赋值 (颜色1, 数据数组一 [m] [k])
                赋值 (颜色2, 数据数组二 [m] [k])
                
                .如果真 (等于 (颜色1, 颜色2))
                    跳出循环 ()
                .如果真结束
                赋值 (m, 相减 (m, 1))
            .判断循环尾 ()
            赋值 (某矩形.左边, m)
             ' 往右
            赋值 (m, 相加 (i, 1))
            .判断循环首 (小于 (m, 全窗口宽度))
                赋值 (颜色1, 数据数组一 [m] [k])
                赋值 (颜色2, 数据数组二 [m] [k])
                
                .如果真 (等于 (颜色1, 颜色2))
                    跳出循环 ()
                .如果真结束
                赋值 (m, 相加 (m, 1))
            .判断循环尾 ()
            赋值 (某矩形.右边, m)
             ' 先要判断矩形是否满足条件，否则不加入到数组中
            .如果真 (并且 (大于或等于 (相减 (某矩形.下边, 某矩形.上边), 到数值 (.内容)), 大于或等于 (相减 (某矩形.右边, 某矩形.左边), 到数值 (.内容))))
                加入成员 (矩形数组, 某矩形) ' 先添加到矩形数组中
                赋值 (i, 某矩形.右边) ' 跳过后面的像素
            .如果真结束
            
        .如果真结束
        
    .判断循环尾 ()
.判断循环尾 ()

 ' 合并相邻的矩形
赋值 (距离临界值, 到数值 (.内容))
 ' 合并两次
赋值 (i, 1)
.判断循环首 (小于 (i, 取数组成员数 (矩形数组)))
    赋值 (j, 相加 (i, 1))
    .判断循环首 (小于或等于 (j, 取数组成员数 (矩形数组)))
        赋值 (矩形距离, 求两矩形间距离一 (矩形数组 [i], 矩形数组 [j]))
        输出调试文本 (矩形距离)
        .如果真 (小于或等于 (矩形距离, 距离临界值))
            赋值 (矩形数组 [i], 合并矩形 (矩形数组 [i], 矩形数组 [j]))
            删除成员 (矩形数组, j, )
            赋值 (已删除, 真)
        .如果真结束
        .如果 (等于 (已删除, 假))
            赋值 (j, 相加 (j, 1))
        .否则
            赋值 (已删除, 假)
        .如果结束
        
    .判断循环尾 ()
    赋值 (i, 相加 (i, 1))
.判断循环尾 ()

赋值 (已有控件矩形数, 取数组成员数 (全控件矩形数组))
赋值 (扩展边界, 到数值 (.内容))
.计次循环首 (取数组成员数 (矩形数组), i)
    赋值 (某矩形, 矩形数组 [i])
    某控件矩形.置横坐标 (相减 (相加 (某矩形.左边, 1), 扩展边界))
    某控件矩形.置纵坐标 (相减 (相加 (某矩形.上边, 1), 扩展边界))
    某控件矩形.置宽度 (相加 (相减 (某矩形.右边, 某矩形.左边), 相乘 (扩展边界, 2)))
    某控件矩形.置高度 (相加 (相减 (某矩形.下边, 某矩形.上边), 相乘 (扩展边界, 2)))
    某控件矩形.置标记 (相加 (已有控件矩形数, i))
    某控件矩形.置控件类型 (.现行选中项)
    加入成员 (全控件矩形数组, 某控件矩形)
.计次循环尾 ()
重画控件矩形和辅助线 ()
更新控件矩形列表框 ()
赋值 (全自动标记, 取数组成员数 (全控件矩形数组))
赋值 (全已改, 真)
置状态条文本 ()


.子程序 是否在矩形数组内, 逻辑型, , 
.参数 参矩形数组, RECT, 数组, 
.参数 x, 空白型, , 
.参数 y, 空白型, , 

.局部变量 i, 空白型, , , 

.计次循环首 (取数组成员数 (参矩形数组), i)
    .如果真 (API_PtInRect (参矩形数组 [i], x, y))
        返回 (真)
    .如果真结束
    
.计次循环尾 ()
返回 (假)


.子程序 _删除选中的控件矩形_被选择, 空白型, , 
删除选中的控件矩形 ()

.子程序 删除选中的控件矩形, 空白型, , 
.如果真 (大于 (全当前选择索引, 0))
    删除成员 (全控件矩形数组, 全当前选择索引, )
    调整标记 ()
    更新控件矩形列表框 ()
    赋值 (全当前选择索引, -1)
     ' 选择控件矩形 (全当前选择索引)   '<<<<<<<<<<<<<<<<<不再选择控件矩形，以免误操作
    赋值 (全自动标记, 取数组成员数 (全控件矩形数组))
    重画控件矩形和辅助线 ()
    赋值 (全已改, 真)
    置状态条文本 ()
.如果真结束


.子程序 删除所有控件矩形, 空白型, , 
.局部变量 r, 空白型, , , 

赋值 (r, 信息框 (“这将删除所有的控件矩形，且操作将不可恢复，你确定吗？”, 相加 (#询问图标, #是否钮), #程序标题))
.如果真 (等于 (r, #是钮))
    重定义数组 (全控件矩形数组, 假, 0)
    调整标记 ()
    更新控件矩形列表框 ()
    赋值 (全当前选择索引, -1)
    赋值 (全自动标记, 取数组成员数 (全控件矩形数组))
    重画控件矩形和辅助线 ()
    赋值 (全已改, 真)
    置状态条文本 ()
.如果真结束


.子程序 _删除所有控件矩形_被选择, 空白型, , 
删除所有控件矩形 ()


.子程序 _选择框有菜单_被单击, 空白型, , 
赋值 (.禁止, 取反 (.选中))


.子程序 _组合框菜单_列表项被选择, 空白型, , 
赋值 (.颜色, .取项目数值 (.现行选中项))


.子程序 _颜色选择器菜单_颜色被改变, 空白型, , 
 ' 信息框 (“颜色被改变！”, 0, )
.置项目数值 (.现行选中项, .颜色)
置高级菜单颜色 (.现行选中项)
赋值 (全已改, 真)
置状态条文本 ()


.子程序 _按钮恢复默认菜单颜色_被单击, 空白型, , 
.局部变量 r, 空白型, , , 

赋值 (r, 信息框 (“这将重置菜单的配色方案，你确定吗？”, 相加 (#是否钮, #询问图标), #程序标题))
.如果真 (等于 (r, #是钮))
    恢复菜单默认颜色 ()
    赋值 (全已改, 真)
    置状态条文本 ()
.如果真结束


.程序集 _模块_设置控件锚点, , , ** 不要更改此处 anchors.ec

.子程序 设置控件锚点, 空白型, , 指定控件的锚点以适应窗口的大小改变
.参数 控件句柄, 整数型, , 控件的句柄
.参数 锚住左边, 逻辑型, , 是否锚住控件左边
.参数 锚住顶边, 逻辑型, , 是否锚住控件顶边
.参数 锚住右边, 逻辑型, , 是否锚住控件右边
.参数 锚住下边, 逻辑型, , 是否锚住控件下边

 ' ** 本子程序功能由系统自动转交对应模块实现，可以删除但不能修改。

.子程序 水平均分子控件, 空白型, , 将该控件的第一层子控件水平均分
.参数 父窗口句柄, 整数型, , 要水平其子控件的父窗口句柄
.参数 子控件高度, 整数型, , 要固定高度，则设定一个值；要动态自适应，则设为0
.参数 控件间距, 整数型, 可空, 

 ' ** 本子程序功能由系统自动转交对应模块实现，可以删除但不能修改。

.子程序 垂直均分子控件, 空白型, , 将该控件的第一层子控件垂直均分
.参数 父窗口句柄, 整数型, , 要均分其子控件的父控件
.参数 子控件宽度, 整数型, , 要固定宽度，则设定一个值；要动态自适应，则设为0
.参数 控件间距, 整数型, 可空, 默认为５，可以设置

 ' ** 本子程序功能由系统自动转交对应模块实现，可以删除但不能修改。

.类模块 控件矩形, , , 

.程序集变量 私标记, 空白型, , , 
.程序集变量 私备注, 文本型, , , 
.程序集变量 私控件类型, 空白型, , , 查看 “控件类型_” 常量
.程序集变量 私横坐标, 空白型, , , 
.程序集变量 私纵坐标, 空白型, , , 
.程序集变量 私宽度, 空白型, , , 
.程序集变量 私高度, 空白型, , , 
.程序集变量 私锚住左边, 逻辑型, , , 
.程序集变量 私锚住上边, 逻辑型, , , 
.程序集变量 私锚住右边, 逻辑型, , , 
.程序集变量 私锚住下边, 逻辑型, , , 
.程序集变量 私滑条控件标记, 空白型, , , 
.程序集变量 私显示控件标记, 空白型, , , 
.程序集变量 私最小值, 空白型, , , 
.程序集变量 私最大值, 空白型, , , 
.程序集变量 私当前值, 空白型, , , 
.程序集变量 私对齐方式, 空白型, , , 滑块与滑条的对齐方式
.程序集变量 私被选中, 逻辑型, , , 
.程序集变量 私图片数据, 字节集, , "4", 保存该控件的四个状态图片
.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用
赋值 (私控件类型, #控件类型_图形按钮)
赋值 (私锚住上边, 真)
赋值 (私锚住左边, 真)
赋值 (私最小值, 0)
赋值 (私最大值, 100)
赋值 (私当前值, 61)
赋值 (私对齐方式, 2)

.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 相对移动, 空白型, 公开, 
.参数 参横向偏移, 空白型, , 
.参数 参纵向偏移, 空白型, , 

赋值 (私横坐标, 相加 (私横坐标, 参横向偏移))
赋值 (私纵坐标, 相加 (私纵坐标, 参纵向偏移))


.子程序 绝对移动, 空白型, 公开, 
.参数 参横坐标, 空白型, , 
.参数 参纵坐标, 空白型, , 

赋值 (私横坐标, 参横坐标)
赋值 (私纵坐标, 参纵坐标)


.子程序 置横坐标, 空白型, 公开, 
.参数 参坐标, 整数型, , 

赋值 (私横坐标, 参坐标)


.子程序 取横坐标, 整数型, 公开, 
返回 (私横坐标)


.子程序 置纵坐标, 空白型, 公开, 
.参数 参坐标, 整数型, , 

赋值 (私纵坐标, 参坐标)


.子程序 取纵坐标, 整数型, 公开, 
返回 (私纵坐标)


.子程序 置宽度, 空白型, 公开, 
.参数 参宽度, 整数型, , 

赋值 (私宽度, 参宽度)


.子程序 置高度, 空白型, 公开, 
.参数 参高度, 整数型, , 

赋值 (私高度, 参高度)


.子程序 取宽度, 整数型, 公开, 
返回 (私宽度)


.子程序 取高度, 整数型, 公开, 
返回 (私高度)


.子程序 置标记, 空白型, 公开, 
.参数 参标记, 空白型, , 

赋值 (私标记, 参标记)


.子程序 取标记, 整数型, 公开, 
返回 (私标记)


.子程序 创建, 空白型, 公开, 
.参数 参标记, 空白型, , 
.参数 参横坐标, 空白型, 可空, 
.参数 参纵坐标, 空白型, 可空, 
.参数 参宽度, 空白型, 可空, 
.参数 参高度, 空白型, 可空, 

赋值 (私标记, 参标记)
赋值 (私横坐标, 参横坐标)
赋值 (私纵坐标, 参纵坐标)
赋值 (私宽度, 参宽度)
赋值 (私高度, 参高度)
赋值 (私被选中, 假)


.子程序 选中, 空白型, 公开, 
赋值 (私被选中, 真)


.子程序 取消选择, 空白型, 公开, 
赋值 (私被选中, 假)


.子程序 绘制矩形到画板, 空白型, 公开, 
.参数 参画板, 画板, , 
.参数 参比例, 双精度小数型, 可空, 
.参数 参是否绘制标记和备注, 逻辑型, 可空, 
.参数 参是否绘制锚点信息, 逻辑型, 可空, 
.参数 参是否绘制控件类型, 逻辑型, 可空, 

.局部变量 标记和备注, 文本型, , , 
.局部变量 x, 空白型, , , 
.局部变量 y, 空白型, , , 
.局部变量 r, 空白型, , , 

.如果真 (是否为空 (参比例))
    赋值 (参比例, 1)
.如果真结束
.如果真 (是否为空 (参是否绘制标记和备注))
    赋值 (参是否绘制标记和备注, 真)
.如果真结束
.如果真 (是否为空 (参是否绘制锚点信息))
    赋值 (参是否绘制锚点信息, 真)
.如果真结束
.如果真 (是否为空 (参是否绘制控件类型))
    赋值 (参是否绘制控件类型, 真)
.如果真结束
.如果 (私被选中)
    赋值 (参画板.画笔颜色, _启动窗口..颜色)
.否则
    赋值 (参画板.画笔颜色, _启动窗口..颜色)
.如果结束

赋值 (参画板.刷子颜色, 参画板.画笔颜色)
赋值 (参画板.文本颜色, 参画板.画笔颜色)

赋值 (参画板.画笔粗细, 1)
赋值 (参画板.画笔类型, 1) ' 直线
赋值 (参画板.画出方式, 12) ' 复制笔

 ' 绘制控件矩形
赋值 (参画板.刷子类型, _启动窗口..现行选中项)
参画板.画矩形 (相乘 (私横坐标, 参比例), 相乘 (私纵坐标, 参比例), 相乘 (相加 (私横坐标, 私宽度), 参比例), 相乘 (相加 (私纵坐标, 私高度), 参比例))

 ' 绘制控件类型
.如果真 (参是否绘制控件类型)
     ' 居中放置
    赋值 (x, 相减 (相加 (相乘 (私横坐标, 参比例), 相除 (相乘 (私宽度, 参比例), 2)), 8))
    赋值 (y, 相减 (相加 (相乘 (私纵坐标, 参比例), 相除 (相乘 (私高度, 参比例), 2)), 8))
    
    .判断开始 (等于 (私控件类型, #控件类型_画板))
        赋值 (r, 载入图片 (#图片_画板))
    .判断 (等于 (私控件类型, #控件类型_标签))
        赋值 (r, 载入图片 (#图片_标签))
    .判断 (等于 (私控件类型, #控件类型_其他))
        赋值 (r, 载入图片 (#图片_其他))
    .判断 (等于 (私控件类型, #控件类型_进度条))
        赋值 (r, 载入图片 (#图片_进度条))
    .判断 (等于 (私控件类型, #控件类型_图形按钮))
        赋值 (r, 载入图片 (#图片_图形按钮))
    .判断 (或者 (等于 (私控件类型, #控件类型_水平滑块), 等于 (私控件类型, #控件类型_垂直滑块)))
        赋值 (r, 载入图片 (#图片_滑块))
    .默认
        
    .判断结束
    参画板.画图片 (r, x, y, , , )
    卸载图片 (r)
    
.如果真结束
 ' 绘制锚点信息
.如果真 (参是否绘制锚点信息)
    赋值 (r, 3)
    赋值 (参画板.刷子类型, 1) ' 颜色刷子
    .如果真 (私锚住左边)
        赋值 (x, 相加 (相乘 (私横坐标, 参比例), r, 1))
        赋值 (y, 相加 (相乘 (私纵坐标, 参比例), 相除 (相乘 (私高度, 参比例), 2)))
        画方点 (参画板, x, y, r)
    .如果真结束
    .如果真 (私锚住上边)
        赋值 (x, 相加 (相乘 (私横坐标, 参比例), 相除 (相乘 (私宽度, 参比例), 2)))
        赋值 (y, 相加 (相乘 (私纵坐标, 参比例), r, 1))
        画方点 (参画板, x, y, r)
    .如果真结束
    .如果真 (私锚住右边)
        赋值 (x, 相减 (相乘 (相加 (私横坐标, 私宽度), 参比例), r, 1))
        赋值 (y, 相加 (相乘 (私纵坐标, 参比例), 相除 (相乘 (私高度, 参比例), 2)))
        画方点 (参画板, x, y, r)
    .如果真结束
    .如果真 (私锚住下边)
        赋值 (x, 相加 (相乘 (私横坐标, 参比例), 相除 (相乘 (私宽度, 参比例), 2)))
        赋值 (y, 相减 (相乘 (相加 (私纵坐标, 私高度), 参比例), r, 1))
        画方点 (参画板, x, y, r)
    .如果真结束
    
.如果真结束
 ' 绘制标记和备注
.如果真 (参是否绘制标记和备注)
    赋值 (标记和备注, 相加 (到文本 (私标记), “:”, 私备注))
    赋值 (标记和备注, 取可显示的字符 (标记和备注, 参画板, 相乘 (私宽度, 参比例), 相乘 (私高度, 参比例)))
    .如果真 (不等于 (标记和备注, “”))
        参画板.定位写出 (相乘 (私横坐标, 参比例), 相乘 (私纵坐标, 参比例), 标记和备注)
    .如果真结束
    
.如果真结束



.子程序 画方点, 空白型, , 用于画锚点信息
.参数 参画板, 画板, , 
.参数 参横坐标, 空白型, , 
.参数 参纵坐标, 空白型, , 
.参数 参半径, 空白型, 可空, 

.如果真 (是否为空 (参半径))
    赋值 (参半径, 2)
.如果真结束
参画板.画矩形 (相减 (参横坐标, 参半径), 相减 (参纵坐标, 参半径), 相加 (参横坐标, 参半径), 相加 (参纵坐标, 参半径))


.子程序 取可显示的字符, 文本型, , 
.参数 参文本, 文本型, , 
.参数 参画板, 画板, , 
.参数 参宽度, 空白型, , 
.参数 参高度, 空白型, , 

.局部变量 字符宽度, 空白型, , , 
.局部变量 字符高度, 空白型, , , 
.局部变量 可容纳的字符数, 空白型, , , 
.局部变量 结果, 文本型, , , 

赋值 (字符宽度, 参画板.取宽度 (“W”))
赋值 (字符高度, 参画板.取高度 (“j”))
.如果真 (或者 (小于 (参宽度, 相乘 (字符宽度, 4)), 小于 (参高度, 字符高度)))
    返回 (“”)
.如果真结束
赋值 (可容纳的字符数, 相除 (参宽度, 字符宽度))

.如果 (小于 (可容纳的字符数, 取文本长度 (参文本)))
    赋值 (结果, 相加 (取文本左边 (参文本, 相减 (可容纳的字符数, 1)), “..”))
.否则
    赋值 (结果, 参文本)
.如果结束
返回 (结果)


.子程序 置图片数据, 逻辑型, 公开, 
.参数 参图片数据, 字节集, , 
.参数 参索引, 整数型, , 

.如果真 (或者 (大于 (参索引, 4), 小于 (参索引, 1)))
    返回 (假)
.如果真结束
赋值 (私图片数据 [参索引], 参图片数据)
返回 (真)


.子程序 取图片数据, 字节集, 公开, 
.参数 参索引, 整数型, , 

.如果真 (或者 (大于 (参索引, 4), 小于 (参索引, 1)))
    返回 ({  })
.如果真结束
返回 (私图片数据 [参索引])


.子程序 包含点, 逻辑型, 公开, 判断点是否在矩形内
.参数 参横坐标, 空白型, , 
.参数 参纵坐标, 空白型, , 

.如果真 (并且 (大于或等于 (参横坐标, 私横坐标), 小于或等于 (参横坐标, 相加 (私横坐标, 私宽度)), 大于或等于 (参纵坐标, 私纵坐标), 小于或等于 (参纵坐标, 相加 (私纵坐标, 私高度))))
    返回 (真)
.如果真结束
返回 (假)


.子程序 置控件类型, 逻辑型, 公开, 
.参数 参控件类型, 整数型, , 

.如果真 (小于 (参控件类型, 0))
    返回 (假)
.如果真结束
赋值 (私控件类型, 参控件类型)
返回 (真)


.子程序 取控件类型, 整数型, 公开, 
返回 (私控件类型)


.子程序 置锚住上边, 空白型, 公开, 
.参数 参是否锚住, 逻辑型, , 

赋值 (私锚住上边, 参是否锚住)


.子程序 置锚住左边, 空白型, 公开, 
.参数 参是否锚住, 逻辑型, , 

赋值 (私锚住左边, 参是否锚住)


.子程序 置锚住右边, 空白型, 公开, 
.参数 参是否锚住, 逻辑型, , 

赋值 (私锚住右边, 参是否锚住)


.子程序 置锚住下边, 空白型, 公开, 
.参数 参是否锚住, 逻辑型, , 

赋值 (私锚住下边, 参是否锚住)


.子程序 取锚住上边, 逻辑型, 公开, 
返回 (私锚住上边)


.子程序 取锚住左边, 逻辑型, 公开, 
返回 (私锚住左边)


.子程序 取锚住右边, 逻辑型, 公开, 
返回 (私锚住右边)


.子程序 取锚住下边, 逻辑型, 公开, 
返回 (私锚住下边)


.子程序 置备注, 空白型, 公开, 
.参数 参备注, 文本型, , 

赋值 (私备注, 参备注)


.子程序 取备注, 文本型, 公开, 
返回 (私备注)


.子程序 置滑条控件标记, 空白型, 公开, 
.参数 参标志, 空白型, , 

赋值 (私滑条控件标记, 参标志)


.子程序 取滑条控件标记, 整数型, 公开, 
返回 (私滑条控件标记)



.子程序 置显示控件标记, 空白型, 公开, 
.参数 参标记, 空白型, , 

赋值 (私显示控件标记, 参标记)


.子程序 取显示控件标记, 整数型, 公开, 
返回 (私显示控件标记)



.子程序 置最大值, 空白型, 公开, 
.参数 参值, 空白型, , 

赋值 (私最大值, 参值)


.子程序 取最大值, 整数型, 公开, 
返回 (私最大值)


.子程序 置最小值, 空白型, 公开, 
.参数 参值, 空白型, , 

赋值 (私最小值, 参值)


.子程序 取最小值, 整数型, 公开, 
返回 (私最小值)


.子程序 置当前值, 空白型, 公开, 
.参数 参值, 空白型, , 

赋值 (私当前值, 参值)


.子程序 取当前值, 整数型, 公开, 
返回 (私当前值)


.子程序 置对齐方式, 空白型, 公开, 
.参数 参方式, 整数型, , 

赋值 (私对齐方式, 参方式)


.子程序 取对齐方式, 整数型, 公开, 
返回 (私对齐方式)


.子程序 输出为字节集, 字节集, 公开, 
.参数 参是否包含图片数据, 逻辑型, 可空, 是则返回的字节集中包含图片数据，此时参图片路径无效；否则不包含，生成图片文件
.参数 参图片文件夹, 文本型, 可空, 存在这个文件夹中，并不判断文件夹的有效性。如果留空，则不生成图片

.局部变量 某字节集, 字节集, , , 
.局部变量 文件号, 整数型, , , 
.局部变量 图片数据, 字节集, , , 
.局部变量 结果, 字节集, , , 
.局部变量 边长, 整数型, , , 
.局部变量 t, 空白型, , , 

.如果真 (是否为空 (参是否包含图片数据))
    赋值 (参是否包含图片数据, 假)
.如果真结束

赋值 (文件号, 打开内存文件 ())
写出数据 (文件号, 私标记, 私备注, 私控件类型, 私横坐标, 私纵坐标, 私宽度, 私高度, 私锚住左边, 私锚住上边, 私锚住右边, 私锚住下边, 私滑条控件标记, 私显示控件标记, 私最小值, 私最大值, 私当前值, 私对齐方式)

处理事件 ()
 ' 如果指定了目录，就输出图片
.如果真 (等于 (是否为空 (参图片文件夹), 假))
    .判断开始 (或者 (等于 (私控件类型, #控件类型_图形按钮), 等于 (私控件类型, #控件类型_水平滑块), 等于 (私控件类型, #控件类型_垂直滑块)))
        赋值 (图片数据, 取画板指定区域图片 (_启动窗口., 私横坐标, 私纵坐标, 私宽度, 私高度))
        写到文件 (相加 (参图片文件夹, “\”, 到文本 (私标记), “_normal.bmp”), 图片数据)
         ' 下面的这些图片有可能不存在，判断其大小
        赋值 (图片数据, 取画板指定区域图片 (_启动窗口., 私横坐标, 私纵坐标, 私宽度, 私高度))
        .如果真 (大于 (取字节集长度 (图片数据), 63))
            写到文件 (相加 (参图片文件夹, “\”, 到文本 (私标记), “_over.bmp”), 图片数据)
        .如果真结束
        赋值 (图片数据, 取画板指定区域图片 (_启动窗口., 私横坐标, 私纵坐标, 私宽度, 私高度))
        .如果真 (大于 (取字节集长度 (图片数据), 63))
            写到文件 (相加 (参图片文件夹, “\”, 到文本 (私标记), “_down.bmp”), 图片数据)
        .如果真结束
        赋值 (图片数据, 取画板指定区域图片 (_启动窗口., 私横坐标, 私纵坐标, 私宽度, 私高度))
        .如果真 (大于 (取字节集长度 (图片数据), 63))
            写到文件 (相加 (参图片文件夹, “\”, 到文本 (私标记), “_gray.bmp”), 图片数据)
        .如果真结束
        
    .判断 (或者 (等于 (私控件类型, #控件类型_画板), 等于 (私控件类型, #控件类型_标签)))
        赋值 (图片数据, 取画板指定区域图片 (_启动窗口., 私横坐标, 私纵坐标, 私宽度, 私高度))
        写到文件 (相加 (参图片文件夹, “\”, 到文本 (私标记), “.bmp”), 图片数据)
    .判断 (等于 (私控件类型, #控件类型_进度条))
        
    .判断 (等于 (私控件类型, #控件类型_其他))
        
    .默认
        
    .判断结束
    
.如果真结束
移动读写位置 (文件号, #文件首, 0)
赋值 (结果, 读入字节集 (文件号, 取文件长度 (文件号)))
关闭文件 (文件号)
返回 (结果)


.子程序 从字节集读入, 空白型, 公开, 
.参数 参字节集, 字节集, , 

.局部变量 文件号, 整数型, , , 

赋值 (文件号, 打开内存文件 ())
写出字节集 (文件号, 参字节集)
移动读写位置 (文件号, #文件首, 0)
读入数据 (文件号, 私标记, 私备注, 私控件类型, 私横坐标, 私纵坐标, 私宽度, 私高度, 私锚住左边, 私锚住上边, 私锚住右边, 私锚住下边, 私滑条控件标记, 私显示控件标记, 私最小值, 私最大值, 私当前值, 私对齐方式)
关闭文件 (文件号)


.子程序 输出为文本, 文本型, 公开, 
.局部变量 结果, 文本型, , , 

赋值 (结果, 相加 (“标记：”, 到文本 (私标记), #换行符))
赋值 (结果, 相加 (结果, “备注：”, 私备注, #换行符))
赋值 (结果, 相加 (结果, “控件类型：”, 到文本 (私控件类型), #换行符))
赋值 (结果, 相加 (结果, “横坐标：”, 到文本 (私横坐标), #换行符))
赋值 (结果, 相加 (结果, “纵坐标：”, 到文本 (私纵坐标), #换行符))
赋值 (结果, 相加 (结果, “宽度：”, 到文本 (私宽度), #换行符))
赋值 (结果, 相加 (结果, “高度：”, 到文本 (私高度), #换行符))
赋值 (结果, 相加 (结果, “锚点：”, 到文本 (私锚住左边), “，”, 到文本 (私锚住上边), “，”, 到文本 (私锚住右边), “，”, 到文本 (私锚住下边), #换行符))
返回 (结果)


.程序集 公用程序集, , , 

.子程序 取画板指定区域图片, 字节集, , 
.参数 参画板, 画板, , 
.参数 参左, 整数型, , 
.参数 参上, 整数型, , 
.参数 参宽度, 整数型, , 
.参数 参高度, 整数型, , 

赋值 (参左, 选择 (大于或等于 (参左, 0), 参左, 0))
赋值 (参上, 选择 (大于或等于 (参上, 0), 参上, 0))
.如果真 (大于 (相加 (参左, 参宽度), 参画板.宽度))
    赋值 (参宽度, 相减 (参画板.宽度, 参左))
.如果真结束
.如果真 (大于 (相加 (参上, 参高度), 参画板.高度))
    赋值 (参高度, 相减 (参画板.高度, 参上))
.如果真结束

赋值 (窗口辅助..宽度, 参宽度)
赋值 (窗口辅助..高度, 参高度)

参画板.复制 (参左, 参上, 参宽度, 参高度, 窗口辅助., 0, 0, )
返回 (窗口辅助.取图片 (., , ))


.子程序 转换bmp为jpg, 字节集, , 注意：同时删除了BMP文件。
.参数 参BMP文件名, 文本型, , 

.局部变量 文件名, 文本型, , , 

 ' 文件名 ＝ 取文本左边 (参BMP文件名, 取文本长度 (参BMP文件名) － 3) ＋ “jpg”
 ' 转换到JPG (参BMP文件名, 文件名, 假, 100, 真, 0)
 ' 返回 (读入文件 (文件名))
 ' ' 删除文件 (参BMP文件名)


.子程序 取文件路径, 文本型, , 
.参数 参文件名, 文本型, , 

.局部变量 p, 空白型, , , 

赋值 (p, 倒找文本 (参文件名, “\”, , 假))
.如果真 (等于 (p, -1))
    返回 (“”)
.如果真结束
返回 (取文本左边 (参文件名, 倒找文本 (参文件名, “\”, , 假)))


.子程序 取相对文件名, 文本型, , 返回一个文件相对于另一个文件的相对文件名，不包含最左边的"\"。如果没有相对路径，则返回绝对文件名。
.参数 参基文件名, 文本型, , 必须为绝对路径
.参数 参长文件名, 文本型, , 必须为绝对路径

.局部变量 基路径, 文本型, , , 
.局部变量 长路径, 文本型, , , 
.局部变量 p, 空白型, , , 
.局部变量 结果, 文本型, , , 

赋值 (基路径, 取文件路径 (参基文件名))
赋值 (长路径, 取文件路径 (参长文件名))
赋值 (p, 寻找文本 (长路径, 基路径, , 真))
.如果真 (等于 (p, 1))
    赋值 (结果, 取文本右边 (参长文件名, 相减 (取文本长度 (参长文件名), 取文本长度 (基路径))))
    返回 (结果)
.如果真结束
返回 (参长文件名)


.子程序 是绝对文件名, 逻辑型, , 
.参数 参文件名, 文本型, , 

.局部变量 p, 空白型, , , 

赋值 (p, 寻找文本 (参文件名, “:\”, , 假))
.如果真 (等于 (p, 2)) ' 必须是第二个
    返回 (真)
.如果真结束
返回 (假)


.子程序 是否作为易向导运行, 逻辑型, , 
.局部变量 进程ID, 空白型, , , 
.局部变量 父进程名, 文本型, , , 
.局部变量 临时文件名, 文本型, , , 

赋值 (进程ID, 进程管理.取当前进程ID ())
赋值 (父进程名, 进程管理.取父进程名 (进程ID)) ' 在98下可以取出全路径文件名
赋值 (父进程名, 到小写 (父进程名))
赋值 (父进程名, 取文本右边 (父进程名, 相减 (取文本长度 (父进程名), 倒找文本 (父进程名, “\”, , 假))))
.如果真 (等于 (父进程名, “e.exe”))
    返回 (真)
.如果真结束
返回 (假)


.子程序 加解密字节集, 字节集, , 
.参数 待加密的字节集, 字节集, , 
.参数 加密还是解密, 整数型, , -1:加密 1:解密

.局部变量 i, 空白型, , , 
.局部变量 r, 字节集, , , 
.局部变量 l, 空白型, , , 长度

赋值 (l, 取字节集长度 (待加密的字节集))
赋值 (r, 取空白字节集 (l))
.计次循环首 (l, i)
    赋值 (r [i], 相加 (待加密的字节集 [i], 相乘 (加密还是解密, 30))) ' 32 以下结为特殊字符
.计次循环尾 ()
返回 (r)


.子程序 取易语言安装路径, 文本型, , 失败返回空文本
.局部变量 结果, 文本型, , , 

赋值 (结果, 取文本注册项 (#根类, “e.Document\shell\open\command\”, “”))
.如果真 (等于 (结果, “”))
    返回 (结果)
.如果真结束
赋值 (结果, 取文本左边 (结果, 倒找文本 (结果, “\”, , 假)))
返回 (结果)


.子程序 相对移动光标, 空白型, , 
.参数 参横向偏移, 空白型, , 
.参数 参纵向偏移, 空白型, , 

.局部变量 p, POINTAPI, , , 

API_取鼠标位置 (p)
赋值 (p.横向位置, 相加 (p.横向位置, 参横向偏移))
赋值 (p.纵向位置, 相加 (p.纵向位置, 参纵向偏移))
API_SetCursorPos (p.横向位置, p.纵向位置)


.子程序 取位图数据颜色, 整数型, 公开, 
.参数 参图片数据, 字节集, , 24位bmp数据
.参数 x, 整数型, , 横坐标
.参数 y, 整数型, , 纵坐标

.局部变量 p, 空白型, , , 
.局部变量 w, 空白型, , , 
.局部变量 b, 字节型, , , 
.局部变量 g, 字节型, , , 
.局部变量 r, 字节型, , , 
.局部变量 h, 整数型, , , 

赋值 (w, 取位图宽度 (参图片数据))
赋值 (h, 取位图高度 (参图片数据))

赋值 (p, 相加 (54, 相乘 (相减 (h, y), w, 3), 相乘 (相减 (x, 1), 3), 1))
赋值 (b, 参图片数据 [p])
赋值 (g, 参图片数据 [相加 (p, 1)])
赋值 (r, 参图片数据 [相加 (p, 2)])
返回 (取颜色值 (r, g, b))


.子程序 取位图宽度, 整数型, 公开, 从位图数据中取位图宽度，以像素为单位。失败返回0
.参数 参位图数据, 字节集, , 位图宽度在第１９个字节处

返回 (取字节集数据 (参位图数据, #整数型, 19))


.子程序 取位图高度, 整数型, 公开, 从位图数据中取位图高度，以像素为单位。失败返回0
.参数 参位图数据, 字节集, , 从第２３个字节开始

返回 (取字节集数据 (参位图数据, #整数型, 23))


.子程序 是否为位图格式数据, 逻辑型, , 判断是否为２４位的位图数据
.参数 参位图数据, 字节集, , 

.如果真 (或者 (不等于 (参位图数据 [1], 66), 不等于 (参位图数据 [2], 77))) ' 前两个字节是否为BM
    返回 (假)
.如果真结束
 ' .如果真 (不等于 (取字节集数据 (参位图数据, #整数型, 33), 24))
     ' 返回 (假)
.如果真结束
返回 (真)


.子程序 求两点间距离, 双精度小数型, , 
.参数 p1, POINTAPI, , 
.参数 p2, POINTAPI, , 

.局部变量 r, 双精度小数型, , , 

赋值 (r, 相加 (相乘 (相减 (p1.横向位置, p2.横向位置), 相减 (p1.横向位置, p2.横向位置)), 相乘 (相减 (p1.纵向位置, p2.纵向位置), 相减 (p1.纵向位置, p2.纵向位置))))
赋值 (r, 求平方根 (r))
返回 (r)


.子程序 求两矩形间距离一, 双精度小数型, , 返回两矩形之间的最近距离，如果相交或一个在另一个内，则距离为0
.参数 r1, RECT, , 
.参数 r2, RECT, , 

.局部变量 p1, POINTAPI, , , 
.局部变量 p2, POINTAPI, , , 

.如果真 (或者 (API_PtInRect (r2, r1.左边, r1.上边), API_PtInRect (r2, r1.右边, r1.下边), API_PtInRect (r2, r1.左边, r1.下边), API_PtInRect (r2, r1.右边, r1.上边)))
    返回 (0) ' 两矩形相交则返回0
.如果真结束

.如果真 (或者 (API_PtInRect (r1, r2.左边, r2.上边), API_PtInRect (r1, r2.右边, r2.下边), API_PtInRect (r1, r2.左边, r2.下边), API_PtInRect (r1, r2.右边, r2.上边)))
    返回 (0)
.如果真结束

.判断开始 (小于 (r1.下边, r2.上边))
    .判断开始 (小于 (r1.右边, r2.左边))
         ' 左上角
        赋值 (p1.横向位置, r1.右边)
        赋值 (p1.纵向位置, r1.下边)
        赋值 (p2.横向位置, r2.左边)
        赋值 (p2.纵向位置, r2.上边)
        返回 (求两点间距离 (p1, p2))
    .判断 (大于 (r1.左边, r2.右边))
         ' 右上角
        赋值 (p1.横向位置, r1.左边)
        赋值 (p1.纵向位置, r1.下边)
        赋值 (p2.横向位置, r2.右边)
        赋值 (p2.纵向位置, r2.上边)
        返回 (求两点间距离 (p1, p2))
    .默认
         ' 其他情况
        返回 (相减 (r2.上边, r1.下边))
    .判断结束
    
.判断 (大于 (r1.上边, r2.下边))
    .判断开始 (小于 (r1.右边, r2.左边))
         ' 左下角
        赋值 (p1.横向位置, r1.右边)
        赋值 (p1.纵向位置, r1.上边)
        赋值 (p2.横向位置, r2.左边)
        赋值 (p2.纵向位置, r2.下边)
        返回 (求两点间距离 (p1, p2))
    .判断 (大于 (r1.左边, r2.右边))
         ' 右下角
        赋值 (p1.横向位置, r1.左边)
        赋值 (p1.纵向位置, r1.上边)
        赋值 (p2.横向位置, r2.右边)
        赋值 (p2.纵向位置, r2.下边)
        返回 (求两点间距离 (p1, p2))
    .默认
         ' 其他情况
        返回 (相减 (r1.上边, r2.下边))
    .判断结束
    
.默认
    .如果真 (小于或等于 (r1.右边, r2.左边))
        返回 (相减 (r2.左边, r1.右边))
    .如果真结束
    .如果真 (大于或等于 (r1.左边, r2.右边))
        返回 (相减 (r1.左边, r2.右边))
    .如果真结束
    
.判断结束
返回 (100)

.子程序 合并矩形, RECT, , 合并两个矩形，取两个矩形横坐标、纵坐标的最小最大值
.参数 参矩形一, RECT, , 
.参数 参矩形二, RECT, , 

.局部变量 r, RECT, , , 
.局部变量 横坐标数组, 整数型, , "0", 
.局部变量 纵坐标数组, 整数型, , "0", 

加入成员 (横坐标数组, 参矩形一.左边)
加入成员 (横坐标数组, 参矩形一.右边)
加入成员 (横坐标数组, 参矩形二.左边)
加入成员 (横坐标数组, 参矩形二.右边)
数组排序 (横坐标数组, )
加入成员 (纵坐标数组, 参矩形一.上边)
加入成员 (纵坐标数组, 参矩形一.下边)
加入成员 (纵坐标数组, 参矩形二.上边)
加入成员 (纵坐标数组, 参矩形二.下边)
数组排序 (纵坐标数组, )
赋值 (r.左边, 横坐标数组 [1])
赋值 (r.右边, 横坐标数组 [4])
赋值 (r.上边, 纵坐标数组 [1])
赋值 (r.下边, 纵坐标数组 [4])
返回 (r)


.窗口程序集 关于窗口程序集, , , 

.子程序 _关于窗口_创建完毕, 空白型, , 
赋值 (., 相加 (“关于　”, #程序标题, #程序版本))


.程序集 _模块_古木_选择文件夹, , , ** 不要更改此处 古木_选择文件夹.ec

.子程序 古木_选择文件夹, 文本型, , 取消则返回空文本。
.参数 参父窗口, 窗口, , 
.参数 参标题, 文本型, 可空, 
.参数 参提示, 文本型, 可空, 
.参数 参默认文件夹, 文本型, 可空, 

 ' ** 本子程序功能由系统自动转交对应模块实现，可以删除但不能修改。

.子程序 文件夹是否存在, 逻辑型, , 
.参数 参文件夹名, 文本型, , 

 ' ** 本子程序功能由系统自动转交对应模块实现，可以删除但不能修改。

.类模块 进程, , , 作者：曾劲松（古木，goomoo） 2004.12.21 http://goomoo.uuoo.com

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 创建新进程, 逻辑型, , 
返回 (真)

.子程序 枚举系统进程, 文本型, 公开, ID|文件名|线程数|基本优先级|父进程ID  信息使用换行符分割
.局部变量 快照句柄, 空白型, , , 
.局部变量 pe32, PROCESSENTRY32, , , 
.局部变量 r, 逻辑型, , , 
.局部变量 结果文本, 文本型, , , 

赋值 (快照句柄, CreateToolhelp32Snapshot (#TH32CS_SNAPPROCESS, 0))
赋值 (pe32.dwSize, 296)
.如果真 (等于 (快照句柄, -1))
    返回 (“错误：创建快照失败！”)
.如果真结束
赋值 (r, Process32First (快照句柄, pe32))
.判断循环首 (r)
    赋值 (结果文本, 相加 (结果文本, 到文本 (pe32.th32ProcessID), “|”, 到文本 (pe32.szExeFile), “|”, 到文本 (pe32.cntThreads), “|”, 到文本 (pe32.pcPriClassBase), “|”, 到文本 (pe32.th32ParentProcessID), #换行符))
    
     ' .如果 (等于 (结果文本, “”))
         ' 结果文本 ＝ 到文本 (pe32.th32ProcessID) ＋ “|” ＋ 到文本 (pe32.szExeFile) ＋ “|” ＋ 到文本 (pe32.cntThreads) ＋ “|” ＋ 到文本 (pe32.pcPriClassBase)
    .否则
         ' 结果文本 ＝ 结果文本 ＋ #换行符 ＋ 到文本 (pe32.th32ProcessID) ＋ “|” ＋ 到文本 (pe32.szExeFile) ＋ “|” ＋ 到文本 (pe32.cntThreads) ＋ “|” ＋ 到文本 (pe32.pcPriClassBase)
    .如果结束
    赋值 (r, Process32Next (快照句柄, pe32))
.判断循环尾 ()
CloseHandle (快照句柄)
返回 (结果文本)

.子程序 根据进程号终止进程, 逻辑型, , 
.参数 参进程号, 空白型, , 

.局部变量 进程句柄, 空白型, , , 
.局部变量 r, 逻辑型, , , 

赋值 (进程句柄, OpenProcess (#PROCESS_TERMINATE, 0, 参进程号))
.如果真 (等于 (进程句柄, 0))
    返回 (假)
.如果真结束
赋值 (r, TerminateProcess (进程句柄, 1))
返回 (r)

.子程序 根据进程名终止进程, 空白型, 公开, 
.参数 参进程名, 文本型, , 
.参数 参是否关心大小写, 逻辑型, , 

.局部变量 进程列表, 文本型, , , 
.局部变量 进程信息数组, 文本型, , "0", 
.局部变量 文本数组, 文本型, , "0", 
.局部变量 i, 空白型, , , 

赋值 (进程列表, 枚举系统进程 ())
.如果真 (等于 (参是否关心大小写, 假))
    赋值 (进程列表, 到小写 (进程列表))
    赋值 (参进程名, 到小写 (参进程名))
.如果真结束
赋值 (进程信息数组, 分割文本 (进程列表, #换行符, ))
.计次循环首 (取数组成员数 (进程信息数组), i)
    .如果真 (不等于 (寻找文本 (进程信息数组 [i], 参进程名, , 假), -1))
        赋值 (文本数组, 分割文本 (进程信息数组 [i], “|”, ))
        根据进程号终止进程 (到数值 (文本数组 [1]))
    .如果真结束
    
.计次循环尾 ()

.子程序 设置优先级, 逻辑型, , 
.参数 参进程号, 空白型, , 
.参数 参优先级, 空白型, , 可以使用的参数： #HIGH_PRIORITY_CLASS,#IDLE_PRIORITY_CLASS,#NORMAL_PRIORITY,#REALTIME_PRIORITY

.局部变量 进程句柄, 空白型, , , 
.局部变量 r, 逻辑型, , , 

赋值 (进程句柄, OpenProcess (#PROCESS_SET_INFORMATION, 0, 参进程号))
.如果真 (等于 (进程句柄, 0))
    返回 (假)
.如果真结束
赋值 (r, SetPriorityClass (进程句柄, 参优先级))
返回 (r)

.子程序 创建远程线程, 空白型, , 


.子程序 启用调试权限, 空白型, , 


.子程序 取进程名, 文本型, 公开, 找不到返回空文本
.参数 参进程ID, 空白型, , 

.局部变量 文本数组一, 文本型, , "0", 
.局部变量 文本数组二, 文本型, , "0", 
.局部变量 临时文本, 文本型, , , 
.局部变量 i, 空白型, , , 


赋值 (临时文本, 枚举系统进程 ())
赋值 (文本数组一, 分割文本 (临时文本, #换行符, ))
.计次循环首 (取数组成员数 (文本数组一), i)
    赋值 (文本数组二, 分割文本 (文本数组一 [i], “|”, ))
    .如果真 (等于 (到数值 (文本数组二 [1]), 参进程ID))
        返回 (文本数组二 [2])
    .如果真结束
    
.计次循环尾 ()
返回 (“”)


.子程序 取进程ID, 整数型, 公开, 找不到返回-1
.参数 参进程名, 文本型, , 
.参数 参是否区分大小写, 逻辑型, 可空, 默认为不区分大小写

.局部变量 文本数组一, 文本型, , "0", 
.局部变量 文本数组二, 文本型, , "0", 
.局部变量 临时文本, 文本型, , , 
.局部变量 i, 空白型, , , 

.如果真 (是否为空 (参是否区分大小写))
    赋值 (参是否区分大小写, 假)
.如果真结束

赋值 (临时文本, 枚举系统进程 ())
.如果真 (等于 (参是否区分大小写, 假))
    赋值 (临时文本, 到小写 (临时文本))
    赋值 (参进程名, 到小写 (参进程名))
.如果真结束

赋值 (文本数组一, 分割文本 (临时文本, #换行符, ))
.计次循环首 (取数组成员数 (文本数组一), i)
    赋值 (文本数组二, 分割文本 (文本数组一 [i], “|”, ))
     ' ID|文件名|线程数|基本优先级|父进程ID  信息使用换行符分割
    .如果真 (等于 (文本数组二 [2], 参进程名))
        返回 (到数值 (文本数组二 [1]))
    .如果真结束
    
.计次循环尾 ()
返回 (-1)


.子程序 取父进程ID, 整数型, 公开, 找不到返回-1
.参数 参子进程ID, 整数型, , 

.局部变量 文本数组一, 文本型, , "0", 
.局部变量 文本数组二, 文本型, , "0", 
.局部变量 临时文本, 文本型, , , 
.局部变量 i, 空白型, , , 

赋值 (临时文本, 枚举系统进程 ())

赋值 (文本数组一, 分割文本 (临时文本, #换行符, ))
.计次循环首 (取数组成员数 (文本数组一), i)
    赋值 (文本数组二, 分割文本 (文本数组一 [i], “|”, ))
     ' ID|文件名|线程数|基本优先级|父进程ID  信息使用换行符分割
    .如果真 (等于 (到数值 (文本数组二 [1]), 参子进程ID))
        返回 (到数值 (文本数组二 [5]))
    .如果真结束
    
.计次循环尾 ()
返回 (-1)


.子程序 取父进程名, 文本型, 公开, 找不到返回空文本
.参数 参子进程ID, 整数型, , 

.局部变量 父进程ID, 空白型, , , 

赋值 (父进程ID, 取父进程ID (参子进程ID))
.如果真 (等于 (父进程ID, -1))
    返回 (“”)
.如果真结束

返回 (取进程名 (父进程ID))


.子程序 取当前进程ID, 整数型, 公开, 
返回 (GetCurrentProcessId ())


.窗口程序集 教程窗口程序集, , , 

.子程序 _教程窗口_创建完毕, 空白型, , 
设置控件锚点 (取窗口句柄 (), 真, 真, 真, 真)
#教程页面.未知支持库函数_1 ()
赋值 (., 相加 (#程序标题, “- 在线视频教程 请确保您的电脑已经链接到互联网。要前进或后退，请在空白处按鼠标右键，然后点击相应的菜单项。”))


.类模块 辅助线, , , 

.程序集变量 私方向, 逻辑型, , , “真”为水平，“假”为竖直
.程序集变量 私位置, 整数型, , , 辅助线的位置
.程序集变量 私被选中, 逻辑型, , , 选中状态
.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用
赋值 (私方向, 真)

.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 置位置, 空白型, 公开, 
.参数 参位置, 整数型, , 

赋值 (私位置, 参位置)


.子程序 取位置, 整数型, 公开, 
返回 (私位置)


.子程序 置方向, 空白型, 公开, 
.参数 参方向, 逻辑型, , 

赋值 (私方向, 参方向)


.子程序 取方向, 逻辑型, 公开, 
返回 (私方向)


.子程序 置选中状态, 空白型, 公开, 
.参数 参选中, 逻辑型, , 

赋值 (私被选中, 参选中)


.子程序 取选中状态, 逻辑型, , 
返回 (私被选中)


.子程序 绘制到画板, 空白型, 公开, 
.参数 参画板, 画板, , 
.参数 参缩放比, 双精度小数型, , 

赋值 (参画板.画笔粗细, 1)
赋值 (参画板.画笔类型, 3) ' 点线
赋值 (参画板.画出方式, 12) ' 复制笔
.如果 (私被选中)
    赋值 (参画板.画笔颜色, _启动窗口..颜色)
.否则
    赋值 (参画板.画笔颜色, _启动窗口..颜色)
.如果结束

.如果 (私方向)
    参画板.画直线 (0, 四舍五入 (相乘 (私位置, 参缩放比), ), 参画板.宽度, 四舍五入 (相乘 (私位置, 参缩放比), ))
.否则
    参画板.画直线 (四舍五入 (相乘 (私位置, 参缩放比), ), 0, 四舍五入 (相乘 (私位置, 参缩放比), ), 参画板.高度)
.如果结束


.子程序 输出为字节集, 字节集, , (此函数已作废)将辅助线数据输出为字节集
.局部变量 r, 字节集, , , 
.局部变量 文件号, 整数型, , , 

 ' 文件号 ＝ 打开内存文件 ()
 ' 写出数据 (私方向, 私位置)
 ' 移动读写位置 (文件号, #文件首, )
 ' r ＝ 读入字节集 (文件号, 取文件长度 (文件号))
 ' 关闭文件 (文件号)
赋值 (r, 相加 (到字节集 (私方向), 到字节集 (私位置)))
返回 (r)


.子程序 从字节集读入, 空白型, , (此函数已作废)
.参数 参字节集, 空白型, , 




.窗口程序集 窗口程序集每日一帖, , , 

.程序集变量 集每日一帖内容, 文本型, , "0", 
.程序集变量 集每日一帖长度, 空白型, , , 
.子程序 _窗口每日一帖_创建完毕, 空白型, , 
.局部变量 文件名, 文本型, , , 

赋值 (文件名, 相加 (取运行目录 (), “\每日一帖.txt”))
.如果真 (等于 (文件是否存在 (文件名), 假))
    销毁 ()
    信息框 (相加 (“找不到每日一帖数据文件：”, 文件名), #错误图标, #程序标题)
    返回 ()
.如果真结束
赋值 (集每日一帖内容, 分割文本 (到文本 (读入文件 (文件名)), #换行符, ))
赋值 (集每日一帖长度, 取数组成员数 (集每日一帖内容))
赋值 (全每日一帖索引, 求余数 (全每日一帖索引, 集每日一帖长度))
赋值 (.内容, 集每日一帖内容 [相加 (全每日一帖索引, 1)])
赋值 (.选中, 取反 (全是否显示每日一帖))
赋值 (.Internet地址, #教程页面)


.子程序 _按钮下一帖_被单击, 空白型, , 
赋值 (全每日一帖索引, 求余数 (相加 (全每日一帖索引, 1), 集每日一帖长度))
赋值 (.内容, 集每日一帖内容 [相加 (全每日一帖索引, 1)])


.子程序 _按钮上一帖_被单击, 空白型, , 
赋值 (全每日一帖索引, 求余数 (相减 (全每日一帖索引, 1), 集每日一帖长度))
.如果真 (小于 (全每日一帖索引, 0))
    赋值 (全每日一帖索引, 相减 (集每日一帖长度, 1))
.如果真结束
赋值 (.内容, 集每日一帖内容 [相加 (全每日一帖索引, 1)])


.子程序 _选择框不再显示每日一帖_被单击, 空白型, , 
.如果真 (.选中)
    信息框 (“你选择了关闭‘启动时显示每日一帖’，如果需要再次打开，可以单击菜单[帮助>每日一帖...]再次打开。”, #信息图标, #程序标题)
.如果真结束

赋值 (全是否显示每日一帖, 取反 (.选中))
写配置文件 ()


.子程序 _窗口每日一帖_可否被关闭, 逻辑型, , 
写配置文件 ()

.子程序 _超级链接框1_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 



.窗口程序集 窗口程序集_采集像素点, , , 

.子程序 _窗口采集像素点_创建完毕, 空白型, , 
赋值 (., 相加 (#程序标题, “ - 正在采集像素点，请稍候……”))



 ' 不属于任何一个程序集、类模块的函数：
