 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 380
    高度 = 434
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “GET CDROM INFO”
    帮助文件名 = “”





 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 4 系统核心支持库
 ' OLEDispatch 98575E1813814d769C5E4E62BD1E5346 1 1 COM对象操作支持库





.DLL命令 DiskID32, 整数型, "DiskID32.DLL", "DiskID32", , Declare Function DiskID32 Lib "DiskID32.DLL" (ByRef DiskModel As Byte, ByRef DiskID As Byte) As Long
    .参数 DiskModel, 字节型, 传址, 硬盘型号 ByRef DiskModel As Byte
    .参数 DiskID, 字节型, 传址, 硬盘ID ByRef DiskID As Byte

.窗口程序集 窗口程序集1, , , 

.程序集变量 objWMIService, 对象, , , 
.程序集变量 项目内容, 字节集, , , 
.子程序 __启动窗口_创建完毕, 空白型, , 
.局部变量 硬盘型号, 字节集, 静态, , 83 | 51
.局部变量 硬盘ID, 字节集, 静态, , 90 | 51
.局部变量 返回值, 整数型, , , 
.局部变量 objWbemLocator, 对象, , , 

赋值 (硬盘型号, 取空白字节集 (32))
赋值 (硬盘ID, 取空白字节集 (32))
赋值 (返回值, DiskID32 (硬盘型号 [1], 硬盘ID [1]))
“[HDDINFO]”.加入文本 ()

相加 (#换行符, “HDDModel=”, 取字节集数据 (硬盘型号, #文本型, )).加入文本 ()
objWbemLocator.创建 (“WbemScripting.SWbemLocator”, )
赋值 (objWMIService, objWbemLocator.对象型方法 (“ConnectServer”, “.”, “root\CIMV2”, , , , , , ))

WMI取系统信息 (“cpu”, “DVD”)
写到文件 (“HW.INI”, 到字节集 (.内容))




.子程序 WMI取系统信息, 空白型, , 
.参数 说明文本, 文本型, , 
.参数 查询参数, 文本型, , 

.局部变量 属性数组, 文本型, , "0", 
.局部变量 临时数组, 文本型, , "0", 
.局部变量 文件号, 整数型, , , 
.局部变量 文件数据, 字节集, , , 
.局部变量 Temp, 整数型, , , 
.局部变量 Text, 文本型, , , 
.局部变量 i, 整数型, , , 
.局部变量 j, 整数型, , , 

置等待鼠标 ()
枚举对象集合 (查询参数, 属性数组)
恢复鼠标 ()
赋值 (文件号, 打开内存文件 ())
写出数据 (文件号, 说明文本, 0, 0, 0, 0, 1)
赋值 (Temp, 取数组成员数 (属性数组))
.计次循环首 (Temp, i)
    赋值 (Text, 取标题 (属性数组 [i])) ' 取出"Caption"属性的值
    相加 (#换行符, #换行符, “Caption”, “ ”, “:”, Text).加入文本 ()
    写出数据 (文件号, Text, 0, 0, 0, 0, 2)
    赋值 (临时数组, 分割文本 (属性数组 [i], #换行符, ))
    .计次循环首 (取数组成员数 (临时数组), j)
        写出数据 (文件号, 临时数组 [j], 0, 0, 0, 0, 3)
    .计次循环尾 ()
.计次循环尾 ()



.子程序 取标题, 文本型, , 
.参数 参数文本, 文本型, , 

.局部变量 开始位置, 整数型, , , 
.局部变量 结束位置, 整数型, , , 

赋值 (开始位置, 相加 (寻找文本 (参数文本, “Caption”, , 假), 9))
 ' 开始位置 ＝ 寻找文本 (参数文本, “Description”, , 假) ＋ 13
赋值 (结束位置, 寻找文本 (参数文本, #换行符, 开始位置, 假))
返回 (取文本中间 (参数文本, 开始位置, 相减 (结束位置, 开始位置)))

.子程序 枚举对象集合, 空白型, , 
.参数 查询参数, 文本型, , 
.参数 反馈数组, 文本型, 数组, 

.局部变量 wbemObjectSet, 对象, , , 
.局部变量 SWbemObject, 对象, , , 
.局部变量 COM对象, 未知类型0x20001, , , 
.局部变量 接口, 变体型, , , 
.局部变量 COM对象2, 未知类型0x20001, , , 
.局部变量 Object, 对象, , , 
.局部变量 信息, 文本型, , , 
.局部变量 信息1, 文本型, , , 

赋值 (wbemObjectSet, objWMIService.对象型方法 (“ExecQuery”, 相加 (“Select * from ”, “win32_processor”), , , ))
COM对象.未知支持库函数_14 (wbemObjectSet)
COM对象.未知支持库函数_18 () ' 第一个枚举器
COM对象.未知支持库函数_19 (接口)
赋值 (SWbemObject, 接口.取对象 ())
COM对象2.未知支持库函数_14 (SWbemObject.读对象型属性 (“Properties_”, ))
COM对象2.未知支持库函数_18 () ' 第二个枚举器
.判断循环首 (COM对象2.未知支持库函数_19 (接口))
    赋值 (Object, 接口.取对象 ())
    赋值 (信息1, 相加 (Object.读文本属性 (“Name”, ), “ : ”, Object.读属性 (“Value”, ).取文本 ()))
    赋值 (信息, 相加 (信息, 信息1, #换行符))
     ' --------------在这里进行比较，符合的添加到编辑框里---------------------------
    .判断开始 (等于 (取文本左边 (信息1, 4), “Name”))
        相加 (#换行符, 文本替换 (信息1, 1, 6, “CPUModel=”)).加入文本 ()
    .判断 (等于 (取文本左边 (信息1, 13), “MaxClockSpeed”))
        相加 (#换行符, “[CPUINFO]”).加入文本 ()
        相加 (#换行符, 文本替换 (信息1, 1, 15, “CPUSpeed=”)).加入文本 ()
    .默认
        
    .判断结束
    
     ' 文本型〉 文本替换 （文本型 欲被替换的文本，整数型 起始替换位置，整数型 替换长度，［文本型 用作替换的文本］） - 系统核心支持库->文本操作
     ' 英文名称：ReplaceText
     ' 将指定文本的某一部分用其它的文本替换。本命令为初级命令。
     ' 参数<1>的名称为“欲被替换的文本”，类型为“文本型（text）”。
     ' 参数<2>的名称为“起始替换位置”，类型为“整数型（int）”。替换的起始位置，1为首位置，2为第2个位置，如此类推。
     ' 参数<3>的名称为“替换长度”，类型为“整数型（int）”。
     ' 参数<4>的名称为“用作替换的文本”，类型为“文本型（text）”，可以被省略。如果本参数被省略，则删除文本中的指定部分。
    
     ' 操作系统需求： Windows、Linux
    
    
    
     ' -------------------------比较完毕--------------------------
.判断循环尾 ()
COM对象2.未知支持库函数_1 () ' 创建成功或依附对象都要释放,切记!!!


赋值 (wbemObjectSet, objWMIService.对象型方法 (“ExecQuery”, 相加 (“Select * from ”, “Win32_CDROMDrive”), , , ))
COM对象.未知支持库函数_14 (wbemObjectSet)
COM对象.未知支持库函数_18 () ' 第一个枚举器
COM对象.未知支持库函数_19 (接口)
赋值 (SWbemObject, 接口.取对象 ())
COM对象2.未知支持库函数_14 (SWbemObject.读对象型属性 (“Properties_”, ))
COM对象2.未知支持库函数_18 () ' 第二个枚举器
.判断循环首 (COM对象2.未知支持库函数_19 (接口))
    赋值 (Object, 接口.取对象 ())
    赋值 (信息1, 相加 (Object.读文本属性 (“Name”, ), “ : ”, Object.读属性 (“Value”, ).取文本 ()))
    赋值 (信息, 相加 (信息, 信息1, #换行符))
     ' --------------在这里进行比较，符合的添加到编辑框里---------------------------
    .判断开始 (等于 (取文本左边 (信息1, 4), “Name”))
        相加 (#换行符, “[ODDINFO]”).加入文本 ()
        相加 (#换行符, 文本替换 (信息1, 1, 6, “ODDModel=”)).加入文本 ()
    .默认
        
    .判断结束
     ' -------------------------比较完毕--------------------------
.判断循环尾 ()
COM对象2.未知支持库函数_1 () ' 创建成功或依附对象都要释放,切记!!!


赋值 (wbemObjectSet, objWMIService.对象型方法 (“ExecQuery”, 相加 (“Select * from ”, “Win32_PhysicalMemory”), , , ))
COM对象.未知支持库函数_14 (wbemObjectSet)
COM对象.未知支持库函数_18 () ' 第一个枚举器
COM对象.未知支持库函数_19 (接口)
赋值 (SWbemObject, 接口.取对象 ())
COM对象2.未知支持库函数_14 (SWbemObject.读对象型属性 (“Properties_”, ))
COM对象2.未知支持库函数_18 () ' 第二个枚举器
.判断循环首 (COM对象2.未知支持库函数_19 (接口))
    赋值 (Object, 接口.取对象 ())
    赋值 (信息1, 相加 (Object.读文本属性 (“Name”, ), “ : ”, Object.读属性 (“Value”, ).取文本 ()))
    赋值 (信息, 相加 (信息, 信息1, #换行符))
     ' --------------在这里进行比较，符合的添加到编辑框里---------------------------
    .判断开始 (等于 (取文本左边 (信息1, 8), “Capacity”))
        相加 (#换行符, “[MEMOINFO]”).加入文本 ()
        相加 (#换行符, “RAMSize=”, 到文本 (相除 (到整数 (文本替换 (信息1, 1, 10, )), 1024, 1024))).加入文本 ()
    .默认
        
    .判断结束
     ' -------------------------比较完毕--------------------------
.判断循环尾 ()
COM对象2.未知支持库函数_1 () ' 创建成功或依附对象都要释放,切记!!!




.子程序 _按钮1_被单击, 空白型, , 



 ' 不属于任何一个程序集、类模块的函数：
