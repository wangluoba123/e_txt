 ' 文件类型：Windows窗口程序

 ' 程序名称：易语言置入代码NASM汇编生成工具
 ' 程序描述：易语言置入代码NASM汇编生成工具
@备注:
易语言置入代码NASM汇编工具
 ' 程序作者：云外归鸟
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：云外归鸟工作室制作
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 550
    高度 = 422
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 1
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 真
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    窗口类名 = “”
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “易语言置入代码NASM汇编工具”
    帮助文件名 = “”

窗口 查找窗口
    左边 = 50
    顶边 = 50
    宽度 = 412
    高度 = 128
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “查找”
    帮助文件名 = “”

窗口 替换窗口
    左边 = 50
    顶边 = 50
    宽度 = 409
    高度 = 186
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “替换”
    帮助文件名 = “”

窗口 关于窗口
    左边 = 50
    顶边 = 50
    宽度 = 305
    高度 = 182
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “关于本软件”
    帮助文件名 = “”

窗口 错误窗口
    左边 = 50
    顶边 = 50
    宽度 = 433
    高度 = 235
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 4
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    窗口类名 = “”
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “输出窗口”
    帮助文件名 = “”

窗口 代码窗口
    左边 = 50
    顶边 = 50
    宽度 = 517
    高度 = 358
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    窗口类名 = “”
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “生成置入代码”
    帮助文件名 = “”



.常量 软件名, "“易语言置入代码NASM汇编工具 V1.0”", , 
.常量 WM_INITMENUPOPUP, "279", , 
.常量 MF_BYPOSITION, "1024", , 
.常量 MF_GRAYED, "1", , 
.常量 SND_ALIAS, "65536", , 
.常量 SND_ASYNC, "1", , 
.常量 STARTF_USESHOWWINDOW, "1", , 
.常量 STARTF_USESTDHANDLES, "256", , 
.常量 SW_HIDE, "0", , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 5 0 系统核心支持库
 ' iext 27bb20fdd3e145e4bee3db39ddd6e64c 2 0 扩展界面支持库一
 ' YunCodeEditor {43715ED3-EE9F-4827-A03F-1C1C99883988} 1 0 云的代码编辑器支持库




数据类型 菜单条目结构_, , MENUITEMINFO
    .成员 结构大小, 整数型, , , cbSize,结构大小，通常为44bytes
    .成员 标识符, 整数型, , , fMask,
    .成员 条目类型, 整数型, , , fType,
    .成员 条目状态, 整数型, , , fState,
    .成员 条目ID, 整数型, , , wID,
    .成员 子菜单句柄, 整数型, , , hSubMenu,
    .成员 选中位图句柄, 整数型, , , hbmpChecked,
    .成员 未选中位图句柄, 整数型, , , hbmpUnchecked,
    .成员 条目数据, 整数型, , , dwItemData,
    .成员 条目内容, 文本型, , , dwTypeData,
    .成员 条目长度, 整数型, , , cch,

数据类型 查找历史, , 
    .成员 寻找关键词, 文本型, , , 
    .成员 寻找方向, 整数型, , , 
    .成员 区分大小写, 逻辑型, , , 
    .成员 全词匹配, 逻辑型, , , 

数据类型 安全属性_, , SECURITY_ATTRIBUTES
    .成员 长度, 整数型, , , 
    .成员 安全参数, 整数型, , , 
    .成员 包含句柄, 逻辑型, , , 

数据类型 启动信息_, , 68
    .成员 cb, 整数型, , , 
    .成员 lpReserved, 整数型, , , 
    .成员 lpDesktop, 整数型, , , 
    .成员 lpTitle, 整数型, , , 
    .成员 dwX, 整数型, , , 
    .成员 dwY, 整数型, , , 
    .成员 dwXSize, 整数型, , , 
    .成员 dwYSize, 整数型, , , 
    .成员 dwXCountChars, 整数型, , , 
    .成员 dwYCountChars, 整数型, , , 
    .成员 dwFillAttribute, 整数型, , , 
    .成员 dwFlags, 整数型, , , 
    .成员 wShowWindow, 短整数型, , , 
    .成员 cbReserved2, 短整数型, , , 
    .成员 lpReserved2, 整数型, , , 
    .成员 hStdInput, 整数型, , , 
    .成员 hStdOutput, 整数型, , , 
    .成员 hStdError, 整数型, , , 

数据类型 进程信息_, , 
    .成员 进程句柄, 整数型, , , 
    .成员 线程句柄, 整数型, , , 
    .成员 进程ID, 整数型, , , 
    .成员 线程ID, 整数型, , , 

.全局变量 查找历史, 查找历史, , , 

.DLL命令 GetWindowLong, 子程序指针, "", "GetWindowLongA", , 
    .参数 窗口句柄, 整数型, , 
    .参数 要取的特征, 整数型, , 

.DLL命令 SetWindowLong, 子程序指针, "", "SetWindowLongA", , 
    .参数 窗口句柄, 整数型, , 
    .参数 要置的特征, 整数型, , 
    .参数 新特征, 子程序指针, , 仅易语言3.0支持

.DLL命令 CallWindowProc, 整数型, "", "CallWindowProcA", , 
    .参数 程序指针, 子程序指针, , 
    .参数 窗口句柄, 整数型, , 
    .参数 消息, 整数型, , 
    .参数 参数1, 整数型, , 
    .参数 参数2, 整数型, , 

.DLL命令 改变菜单条目_API, 整数型, "user32.dll", "ModifyMenuA", , 
    .参数 菜单句柄, 整数型, , hMenu，菜单句柄
    .参数 标识符, 整数型, , nPosition，欲改变的菜单条目的标识符
    .参数 常数标志, 整数型, , wFlags，一系列常数标志的组合
    .参数 新命令ID, 整数型, , wIDNewItem，指定菜单条目的新命令ID
    .参数 标志, 整数型, , any，位图句柄或菜单文本

.DLL命令 改变菜单条目文本_API, 整数型, "user32.dll", "ModifyMenuA", , 
    .参数 菜单句柄, 整数型, , hMenu，菜单句柄
    .参数 标识符, 整数型, , nPosition，欲改变的菜单条目的标识符
    .参数 常数标志, 整数型, , wFlags，一系列常数标志的组合
    .参数 新命令ID, 整数型, , wIDNewItem，指定菜单条目的新命令ID
    .参数 标志, 文本型, , any，位图句柄或菜单文本

.DLL命令 取菜单条目信息_API, 整数型, "user32", "GetMenuItemInfoA", , 
    .参数 菜单句柄, 整数型, , 
    .参数 位置, 整数型, , 
    .参数 查找方式, 逻辑型, , 
    .参数 菜单信息, 菜单条目结构_, 传址, 

.DLL命令 置菜单条目信息_API, 整数型, "user32.dll", "SetMenuItemInfoA", , 为一个菜单条目设置指定的信息，具体信息保存于MENUITEMINFO结构中  TRUE（非零）表示成功，否则返回零。会设置GetLastError
    .参数 菜单句柄, 整数型, , hMenu
    .参数 菜单标识符或位置, 整数型, , un
    .参数 标识符或位置, 逻辑型, , bool，如un指定了条目的位置，就为TRUE；如指定的是菜单ID，就为FALSE
    .参数 菜单条目信息结构, 菜单条目结构_, , lpcMenuItemInfo

.DLL命令 PlaySound, 整数型, "winmm.dll", "PlaySoundA", , 
    .参数 lpszName, 文本型, , 
    .参数 hModule, 整数型, , 
    .参数 dwFlags, 整数型, , 

.DLL命令 创建匿名管道_API, 逻辑型, "kernel32.dll", "CreatePipe", , 
    .参数 输出管道, 整数型, 传址, 
    .参数 输入管道, 整数型, 传址, 
    .参数 管道属性, 安全属性_, 传址, 
    .参数 尺寸, 整数型, , 

.DLL命令 获取启动信息_API, 整数型, "kernel32.dll", "GetStartupInfoA", , 
    .参数 启动信息, 启动信息_, 传址, 

.DLL命令 创建进程_API, 逻辑型, "kernel32.dll", "CreateProcessA", , 
    .参数 程序名称, 整数型, , 32位程序用，可设为文本型
    .参数 命令行, 文本型, , 
    .参数 进程属性, 整数型, , 
    .参数 线程属性, 整数型, , 
    .参数 参数一, 整数型, , 
    .参数 参数二, 整数型, , 
    .参数 参数三, 整数型, , 
    .参数 运行目录, 文本型, , 如需指定运行目录设为文本行
    .参数 启动信息_, 启动信息_, , 
    .参数 进程信息_, 进程信息_, , 

.DLL命令 取进程退出代码_API, 整数型, "kernel32.dll", "GetExitCodeProcess", , 
    .参数 进程句柄, 整数型, , 
    .参数 退出代码, 整数型, 传址, 

.DLL命令 关闭系统对象句柄_API, 整数型, "kernel32.dll", "CloseHandle", , 关闭一个内核对象。其中包括文件、文件映射、进程、线程、安全和同步对象等。涉及文件处理时，这个函数通常与vb的close命令相似。应尽可能的使用close，因为它支持vb的差错控制。注意这个函数使用的文件句柄与vb的文件编号是完全不同的  非零表示成功，零表示失败。会设置GetLastError
    .参数 对象句柄, 整数型, , 欲关闭的一个对象的句柄;

.DLL命令 读文件_API, 逻辑型, "kernel32.dll", "ReadFile", , 
    .参数 文件号, 整数型, , 
    .参数 缓存, 字节集, 传址, 
    .参数 读取尺寸, 整数型, , 
    .参数 实际尺寸, 整数型, 传址, 
    .参数 参数, 整数型, , 

.窗口程序集 窗口程序集1, , , 

.程序集变量 当前文件路径, 文本型, , , 
.程序集变量 代码编辑信息, 未知类型0x30002, , , 只能声明为全局变量或程序集变量，不允许声明为局部变量。
.程序集变量 窗口句柄, 整数型, , , 
.程序集变量 回调指针, 子程序指针, , , 
.子程序 __启动窗口_创建完毕, 空白型, , 
赋值 (窗口句柄, 取窗口句柄 ())
赋值 (回调指针, SetWindowLong (窗口句柄, -4, &拦截消息)) ' 拦截窗口的菜单弹出消息,用于更新菜单状态

语法关键字配色程序 ()
改变主窗口标题和配色 ()

.子程序 加入关键字, 空白型, , 
.参数 索引值, 空白型, , 
.参数 关键字数组, 文本型, 数组, 

.局部变量 N, 整数型, , , 

.计次循环首 (取数组成员数 (关键字数组), N)
    代码编辑信息.未知支持库函数_60 (索引值, 关键字数组 [N])
.计次循环尾 ()

.子程序 语法关键字配色程序, 空白型, , 
.局部变量 索引值, 整数型, , , 
.局部变量 关键字数组, 文本型, , "0", 

 ' NASM语法配置
代码编辑信息.未知支持库函数_55 (假) ' 汇编不区分大写
代码编辑信息.未知支持库函数_53 (相加 (“,{}[]-+*/='~!&|<>:;#”, #引号))
代码编辑信息.未知支持库函数_56 (#, #引号, #引号)
代码编辑信息.未知支持库函数_56 (#, “'”, “'”)
代码编辑信息.未知支持库函数_56 (#, “;”, “;”)
代码编辑信息.未知支持库函数_56 (#, “[”, “]”)

代码编辑信息.未知支持库函数_58 (#, #品红)
代码编辑信息.未知支持库函数_58 (#, #品红)
代码编辑信息.未知支持库函数_58 (#, #墨绿)

 ' 关键字分为三大类,三种不同颜色
 ' Intel x86 and x87 register names
赋值 (索引值, 代码编辑信息.未知支持库函数_59 (“Intel x86 和 x87寄存器名称”, #蓝色))

 ' Intel x86 主处理器 8-bit 寄存器
赋值 (关键字数组, { “AH”, “AL”, “BH”, “BL”, “CH”, “CL”, “DH”, “DL” })
加入关键字 (索引值, 关键字数组)
 ' Intel x86 主处理器 16-bit寄存器
赋值 (关键字数组, { “AX”, “BP”, “BX”, “CS”, “CX”, “DI”, “DS”, “DX”, “ES”, “IP”, “SI”, “SP”, “SS” })
加入关键字 (索引值, 关键字数组)
 ' Intel 386+ 主处理器扩展寄存器
赋值 (关键字数组, { “EAX”, “EBP”, “EBX”, “ECX”, “EDI”, “EDX”, “EIP”, “ESI”, “ESP”, “FS”, “GS” })
加入关键字 (索引值, 关键字数组)
 ' Intel x87 数值处理寄存器
赋值 (关键字数组, { “ST”, “ST(0)”, “ST(1)”, “ST(2)”, “ST(3)”, “ST(4)”, “ST(5)”, “ST(6)”, “ST(7)” })
加入关键字 (索引值, 关键字数组)
 ' Intel Pentium MMX+ MMX寄存器 (别名 ST(x)寄存器)
赋值 (关键字数组, { “MM0”, “MM1”, “MM2”, “MM3”, “MM4”, “MM5”, “MM6”, “MM7” })
加入关键字 (索引值, 关键字数组)
 ' Intel 286+ 保护寄存器
 ' Task Register (286+)
赋值 (关键字数组, { “TR” })
加入关键字 (索引值, 关键字数组)
 ' 控制寄存器 (386+' CR4 是 Pentium+ (别名 486 在 CPUID))
 ' 注意这里没有 CR1!
赋值 (关键字数组, { “CR0”, “CR2”, “CR3”, “CR4” })
加入关键字 (索引值, 关键字数组)
 ' 调试寄存器 (386+)
赋值 (关键字数组, { “DR0”, “DR1”, “DR2”, “DR3”, “DR4”, “DR5”, “DR6”, “DR7” })
加入关键字 (索引值, 关键字数组)
 ' 引用表寄存器
赋值 (关键字数组, { “GDTR”, “IDTR”, “LDTR” })
加入关键字 (索引值, 关键字数组)
 ' 测试寄存器 (386+)
赋值 (关键字数组, { “TR6”, “TR7” })
加入关键字 (索引值, 关键字数组)
 ' 测试寄存器 (486+)
赋值 (关键字数组, { “TR3”, “TR4”, “TR5” })
加入关键字 (索引值, 关键字数组)
 ' 测试寄存器 (Pentium+) - 只在模式特定的才可访问的寄存器
赋值 (关键字数组, { “TR1”, “TR2”, “TR8”, “TR9”, “TR10”, “TR11”, “TR12” })
加入关键字 (索引值, 关键字数组)

 ' Intel x86 和 x87 说明
赋值 (索引值, 代码编辑信息.未知支持库函数_59 (“Intel x86 和 x87 指令集”, #红色))

 ' Intel 8086/8088+ 指令集
赋值 (关键字数组, { “aaa”, “aad”, “aam”, “aas”, “adc”, “add”, “and”, “arpl”, “bound”, “call”, “cbw”, “clc”, “cld”, “cli”, “clts”, “cmc”, “cmp”, “cmps”, “cmpsb”, “cmpsd”, “cmpsw”, “cwd”, “daa”, “das”, “dec”, “div”, “enter”, “esc”, “hlt”, “idiv”, “imul”, “in”, “inc”, “ins”, “insb”, “insd”, “insw”, “int”, “into”, “iret”, “iretd”, “ja”, “jae”, “jb”, “jbe”, “jc”, “jcxz”, “je”, “jecxz”, “jg”, “jge”, “jl”, “jle”, “jmp”, “jna”, “jnae”, “jnb”, “jnbe”, “jnc”, “jne”, “jng”, “jnge”, “jnl”, “jnle”, “jno”, “jnp”, “jns”, “jnz”, “jo”, “jpe”, “jpo”, “js”, “jz”, “lahf”, “lar”, “lds”, “lea”, “leave”, “les”, “lgdt”, “lidt”, “lldt”, “lmsw”, “lock”, “lods”, “lodsb”, “lodsd”, “lodsw”, “loop”, “loope”, “loopne”, “loopnz”, “loopz”, “lsl”, “lss”, “ltr”, “mov”, “movs”, “movsb”, “movsd”, “movsw”, “mul”, “neg”, “nop”, “not”, “or”, “out”, “outs”, “outsb”, “outsd”, “outsw”, “pop”, “popa”, “popad”, “popf”, “popfd”, “push”, “pusha”, “pushad”, “pushf”, “pushfd”, “rcl”, “rcr”, “rep”, “repe”, “repne”, “repnz”, “repz”, “ret”, “retf”, “retn”, “rol”, “ror”, “sahf”, “sal”, “sar”, “sbb”, “scas”, “scasb”, “scasd”, “scasw”, “seta”, “setae”, “setb”, “setbe”, “setc”, “sete”, “setg”, “setge”, “setl”, “setle”, “setna”, “setnae”, “setnb”, “setnbe”, “setnc”, “setne”, “setng”, “setnge”, “setnl”, “setnle”, “setno”, “setnp”, “setns”, “setnz”, “seto”, “setp”, “setpe”, “setpo”, “sets”, “setz”, “sgdt”, “shl”, “shr”, “sidt”, “sldt”, “smsw”, “stc”, “std”, “sti”, “stos”, “stosb”, “stosd”, “stosw”, “str”, “sub”, “test”, “verr”, “verw”, “wait”, “xchg”, “xlat”, “xlatb”, “xor” })
加入关键字 (索引值, 关键字数组)
 ' Intel 8087+ 协处理器指令集
赋值 (关键字数组, { “f2xm1”, “fabs”, “fadd”, “faddp”, “fbld”, “fbstp”, “fchs”, “fclex”, “fcom”, “fcomp”, “fcompp”, “fcos”, “fdecstp”, “fdisi”, “fdiv”, “fdivp”, “fdivr”, “fdivrp”, “feni”, “ffree”, “fiadd”, “ficom”, “ficomp”, “fidiv”, “fidivr”, “fild”, “fimul”, “fincstp”, “finit”, “fist”, “fistp”, “fisub”, “fisubr”, “fld”, “fld1”, “fldcw”, “fldenv”, “fldl2e”, “fldl2t”, “fldlg2”, “fldln2”, “fldpi”, “fldz”, “fmul”, “fmulp”, “fnclex”, “fndisi”, “fneni”, “fninit”, “fnop”, “fnsave”, “fnstcw”, “fnstenv”, “fnstsw”, “fpatan”, “fprem”, “fprem1”, “fptan”, “frint2”, “frndint”, “frstor”, “frstpm”, “fsave”, “fscale”, “fsetpm”, “fsin”, “fsincos”, “fsqrt”, “fst”, “fstcw”, “fstenv”, “fstp”, “fstsw”, “fsub”, “fsubp”, “fsubr”, “fsubrp”, “ftst”, “fucom”, “fucomp”, “fucompp”, “fwait”, “fxam”, “fxch”, “fxtract”, “fyl2x”, “fyl2xp1” })
加入关键字 (索引值, 关键字数组)
 ' Intel 386+ 处理器指令集
赋值 (关键字数组, { “bsf”, “bsr”, “bt”, “btc”, “btr”, “bts”, “cdq”, “cwde”, “lfs”, “lgs”, “movsx”, “movzx”, “shld”, “shrd” })
加入关键字 (索引值, 关键字数组)
 ' Intel 486+ 处理器指令集
赋值 (关键字数组, { “bswap”, “cmpxchg”, “cpuid”, “invd”, “invlpg”, “wbinvd”, “xadd” })
加入关键字 (索引值, 关键字数组)
 ' Pentium+ 指令集
赋值 (关键字数组, { “cmpxchg8b”, “rdmsr”, “rdtsc”, “rsm”, “wrmsr” })
加入关键字 (索引值, 关键字数组)
 ' Pentium Pro+ 指令集
赋值 (关键字数组, { “cmov”, “fcmov”, “fcomi”, “rdpmc” })
加入关键字 (索引值, 关键字数组)
 ' Pentium MMX+ 指令集
赋值 (关键字数组, { “emms”, “movd”, “movq”, “packssdw”, “packsswb”, “paddb”, “paddd”, “paddsb”, “paddsw”, “paddusb”, “paddusw”, “paddw”, “pand”, “pandn”, “pcmpeqb”, “pcmpeqd”, “pcmpeqw”, “pcmpgtb”, “pcmpgtd”, “pcmpgtw”, “pmaddwd”, “pmulhw”, “pmullw”, “por”, “psrad”, “psraw”, “psrld”, “psrlq”, “psrlw”, “pssld”, “psslq”, “psslw”, “psubb”, “psubd”, “psubsb”, “psubsw”, “psubusb”, “psubusw”, “psubw”, “punpckhbw”, “punpckhdq”, “punpckhwd”, “punpcklbw”, “punpckldq”, “punpcklwd”, “pxor” })
加入关键字 (索引值, 关键字数组)
 ' 未公开的 指令集
赋值 (关键字数组, { “icebp”, “loadall”, “rdtsc”, “rsm”, “salc”, “saveall”, “setalc”, “smi”, “smsd”, “umov” })
加入关键字 (索引值, 关键字数组)
 ' 已经删除的 指令集
赋值 (关键字数组, { “feni”, “fdisi”, “frinear”, “frichop”, “ibts”, “xbts” })
加入关键字 (索引值, 关键字数组)

 ' 伪指令与预处理
赋值 (索引值, 代码编辑信息.未知支持库函数_59 (“伪指令与预处理”, #深青))


赋值 (关键字数组, { “$”, “%bin”, “%conds”, “%cref”, “%crefall”, “%crefuref”, “%ctls”, “%depth”, “%linum”, “%list”, “%macs”, “%newpage”, “%noconds”, “%nocref”, “%noctls”, “%noincl”, “%nolist”, “%nomacs”, “%nosyms”, “%notrunc”, “%out”, “%pagesize”, “%pcnt”, “%poplctl”, “%pushlctl”, “%subttl”, “%syms”, “%tabsize”, “%text”, “%title”, “%trunc”, “.186”, “.286”, “.286p”, “.287”, “.386”, “.386p”, “.387”, “.8086”, “.8087”, “.alpha”, “.code”, “.const”, “.cref”, “.data”, “.data?”, “.err”, “.err1”, “.err2”, “.errb”, “.errdef”, “.errdif”, “.errdifi”, “.erre”, “.erridn”, “.erridni”, “.errnb”, “.errndef”, “.errnz”, “.fardata”, “.fardata?”, “.lall”, “.lfcond”, “.list”, “.model”, “.public”, “.radix”, “.sall”, “.seq”, “.sfcond”, “.stack”, “.tfcond”, “.type”, “.xall”, “.xcref”, “.xlist”, “??date”, “??filename”, “??time”, “??version”, “@code”, “@codesize”, “@cpu”, “@curseg”, “@data”, “@datasize”, “@fardata”, “@fardata?”, “@filename”, “@model”, “@startup”, “@wordsize”, “align”, “and”, “arg”, “assume”, “byte”, “byte ptr”, “catstr”, “codeptr”, “codeseg”, “comm”, “comment”, “const”, “dataptr”, “dataseg”, “db”, “dd”, “df”, “dosseg”, “dq”, “dt”, “dup”, “dw”, “dword”, “dword ptr”, “else”, “elseif”, “elseif1”, “elseif2”, “elseifb”, “elseifdef”, “elseifdif”, “elseifdifi”, “elseife”, “elseifidn”, “elseifidni”, “elseifnb”, “elseifndef”, “emul”, “end”, “endif”, “endm”, “endp”, “ends”, “eq”, “equ”, “err”, “errif”, “errif1”, “errif2”, “errifb”, “errifdef”, “errifdif”, “errifdifi”, “errife”, “errifidn”, “errifidni”, “errifnb”, “errifndef”, “even”, “evendata”, “exitm”, “extrn”, “far”, “far ptr”, “fword”, “fword ptr”, “ge”, “global”, “group”, “gt”, “high”, “ideal”, “if”, “if1”, “if2”, “ifb”, “ifdef”, “ifdif”, “ifdifi”, “ife”, “ifidn”, “ifidni”, “ifnb”, “ifndef”, “include”, “includelib”, “instr”, “irp”, “irpc”, “jumps”, “label”, “large”, “le”, “length”, “local”, “low”, “lt”, “macro”, “mask”, “masm”, “masm51”, “mod”, “multerrs”, “name”, “ne”, “near”, “near ptr”, “noemul”, “nojumps”, “nolocals”, “nomasm51”, “not”, “nowarn”, “offset”, “or”, “org”, “p186”, “p286”, “p286n”, “p287”, “p386”, “p386n”, “p387”, “p8086”, “p8087”, “page”, “pno87”, “proc”, “ptr”, “public”, “purge”, “pword”, “pword ptr”, “quirks”, “qword”, “qword ptr”, “record”, “rept”, “seg”, “segment”, “shl”, “short”, “shr”, “size”, “sizestr”, “small”, “stack”, “struc”, “substr”, “subttl”, “symtype”, “tbyte”, “tbyte ptr”, “this”, “title”, “type”, “udataseg”, “ufardata”, “union”, “unknown”, “uses”, “width”, “word”, “word ptr”, “xor” })
加入关键字 (索引值, 关键字数组)

 ' nasm的
赋值 (关键字数组, { “%macro”, “%endmacro”, “%endm”, “%include”, “%if”, “%else”, “%endif”, “%elif”, “%ifdef”, “%ifndef”, “%ifctx”, “%ifnctx”, “%ifidn”, “%ifidni”, “%ifid”, “%ifnum”, “%ifstr”, “%ifnstr”, “%ifnnum”, “%ifnid”, “%elifnid”, “%elifnstr”, “%elifnnum”, “%elifstr”, “%elifid”, “%elifnum”, “%error”, “%rep”, “%repl”, “%assign”, “%endrep”, “%push”, “%pop”, “incbin”, “times”, “resb”, “resw”, “resd”, “resq”, “rest”, “__NASM_MAJOR__”, “__NASM_MINOR__”, “__FILE__”, “__LINE__”, “__NASMDEFSEG”, “__SECT__”, “struc”, “endstruc”, “at”, “istruc”, “iend”, “alignb”, “bits”, “section”, “absolute”, “extern”, “common”, “import”, “export” })
加入关键字 (索引值, 关键字数组)


.子程序 __启动窗口_尺寸被改变, 空白型, , 
赋值 (., 取用户区宽度 ())
赋值 (., 相减 (取用户区高度 (), .可视, .))


.子程序 _云的代码编辑框1_光标位置被改变, 空白型, , 
改变状态栏和工具显示 ()

.子程序 改变状态栏和工具显示, 空白型, , 
.局部变量 光标行, 整数型, , , 
.局部变量 光标列, 整数型, , , 

假.未知支持库函数_12 (光标行, 光标列)
1.置文本 (相加 (“行:”, 到文本 (光标行)))
2.置文本 (相加 (“列:”, 到文本 (光标列)))
3.置文本 (相加 (“文件长度:”, 到文本 (未知支持库函数_9 ())))
4.置文本 (选择 (., “覆盖”, “插入”))

.如果 (.)
    7.去除状态 (#禁止)
.否则
    7.加入状态 (#禁止)
.如果结束
.如果 (.)
    8.去除状态 (#禁止)
.否则
    8.加入状态 (#禁止)
.如果结束
.如果 (.)
    9.去除状态 (#禁止)
.否则
    9.加入状态 (#禁止)
.如果结束

.如果 (.)
    12.去除状态 (#禁止)
.否则
    12.加入状态 (#禁止)
.如果结束
.如果 (.)
    13.去除状态 (#禁止)
.否则
    13.加入状态 (#禁止)
.如果结束


.子程序 改变主窗口标题和配色, 空白型, , 
.局部变量 窗口标题名, 文本型, , , 

赋值 (窗口标题名, #软件名)
.如果真 (不等于 (当前文件路径, “”))
    赋值 (窗口标题名, 相加 (窗口标题名, “ - [”, 当前文件路径, “]”))
.如果真结束
赋值 (., 窗口标题名)
代码编辑信息.未知支持库函数_44 () ' 读入新文档都要设置一次

.子程序 保存文件, 逻辑型, , 
.参数 显示保存对话框, 逻辑型, , 另存时或新建强制显示

.局部变量 文件名, 文本型, , , 
.局部变量 结果, 逻辑型, , , 

赋值 (文件名, .)
.如果真 (等于 (文件名, “”)) ' 新文档
    赋值 (显示保存对话框, 真)
.如果真结束
.如果真 (显示保存对话框)
    赋值 (.类型, 1)
    赋值 (.标题, “请输入要保存的文件名:”)
    赋值 (.文件名, 文件名)
    .如果真 (等于 (打开 (), 假))
        返回 (假)
    .如果真结束
    赋值 (当前文件路径, .文件名)
.如果真结束
赋值 (结果, 当前文件路径.未知支持库函数_1 ())
改变主窗口标题和配色 ()
返回 (结果)

.子程序 询问保存对话框, 逻辑型, , 返回真表示允许下一步操作
.局部变量 按钮值, 整数型, , , 

.如果真 (.)
    赋值 (按钮值, 信息框 (“当前文档已经修改，是否保存？”, 相加 (#取消是否钮, #询问图标), “询问”))
    .判断开始 (等于 (按钮值, #是钮))
        返回 (保存文件 (假))
    .判断 (等于 (按钮值, #取消钮))
        返回 (假) ' 中止前一步操作
    .默认
        
    .判断结束
    
.如果真结束
返回 (真)

.子程序 _新建_被选择, 空白型, , 
.如果真 (等于 (询问保存对话框 (), 假))
    返回 ()
.如果真结束
“”.未知支持库函数_3 ()
赋值 (当前文件路径, “”)
赋值 (., “”)
赋值 (., 假)
改变主窗口标题和配色 ()

.子程序 _打开_被选择, 空白型, , 
.局部变量 结果, 整数型, , , 

.如果真 (等于 (询问保存对话框 (), 假))
    返回 ()
.如果真结束
赋值 (.类型, 0)
赋值 (.标题, “请选择要打开的ASM源码文件:”)
.如果真 (打开 ())
    赋值 (当前文件路径, .文件名)
    当前文件路径.未知支持库函数_0 ()
    改变主窗口标题和配色 ()
.如果真结束


.子程序 _保存_被选择, 空白型, , 
保存文件 (假)

.子程序 _另存为_被选择, 空白型, , 
保存文件 (真)

.子程序 _打印预览_被选择, 空白型, , 
未知支持库函数_42 ()

.子程序 _打印_被选择, 空白型, , 
未知支持库函数_43 ()

.子程序 _退出_被选择, 空白型, , 
发送信息 (16, 0, 0) ' 关闭窗口，并且有可否被关闭事件

.子程序 __启动窗口_可否被关闭, 逻辑型, , 
返回 (询问保存对话框 ())

.子程序 _撤消_被选择, 空白型, , 
未知支持库函数_20 ()

.子程序 _重做_被选择, 空白型, , 
未知支持库函数_21 ()

.子程序 _剪切_被选择, 空白型, , 
假.未知支持库函数_23 ()

.子程序 _复制_被选择, 空白型, , 
假.未知支持库函数_22 ()

.子程序 _粘贴_被选择, 空白型, , 
-1.未知支持库函数_24 (-1, 0)

.子程序 _全选_被选择, 空白型, , 
.局部变量 行号, 整数型, , , 
.局部变量 列号, 整数型, , , 

赋值 (行号, 未知支持库函数_4 ())
赋值 (列号, 相减 (行号, 1).未知支持库函数_5 ())
0.未知支持库函数_27 (0, 行号, 列号)

.子程序 _删除行尾空格_被选择, 空白型, , 
未知支持库函数_33 ()

.子程序 _制表符转为空格_被选择, 空白型, , 
未知支持库函数_32 ()

.子程序 _空格转为制表符_被选择, 空白型, , 
假.未知支持库函数_31 ()

.子程序 _大写字母_被选择, 空白型, , 
假.未知支持库函数_34 ()

.子程序 _小写字母_被选择, 空白型, , 
真.未知支持库函数_34 ()

.子程序 _大小写互换_被选择, 空白型, , 
未知支持库函数_35 ()

.子程序 _词首字母大写_被选择, 空白型, , 
未知支持库函数_36 ()


.子程序 _删除所选内容_被选择, 空白型, , 
.局部变量 行号, 整数型, , , 
.局部变量 列号, 整数型, , , 
.局部变量 行号2, 整数型, , , 
.局部变量 列号2, 整数型, , , 

行号.未知支持库函数_13 (列号, 行号2, 列号2)
行号.未知支持库函数_25 (列号, 行号2, 列号2)

.子程序 _删除一行_被选择, 空白型, , 
.局部变量 行号, 整数型, , , 
.局部变量 列号, 整数型, , , 

假.未知支持库函数_12 (行号, 列号)
 ' 列号 ＝ 云的代码编辑框1.取行长度 (行号)
行号.未知支持库函数_25 (0, 相加 (行号, 1), 0)


.子程序 _云的代码编辑框1_显示关联菜单, 空白型, , 
赋值 (.禁止, 取反 (.))
赋值 (.禁止, 取反 (.))
赋值 (.禁止, 取反 (.))
赋值 (.禁止, 取反 (.))
赋值 (.禁止, 取反 (.))
弹出菜单 ()


.子程序 拦截消息, 整数型, , 不要修改该子程序的返回值及参数的类型！
.参数 句柄, 整数型, , 
.参数 消息, 整数型, , 
.参数 参数1, 整数型, , 
.参数 参数2, 整数型, , 

.局部变量 菜单条目信息, 菜单条目结构_, , , 


.判断开始 (等于 (消息, #WM_INITMENUPOPUP)) ' 菜单将要弹出的消息
     ' 输出调试文本 (参数1, 参数2, “-”)
     ' 这里只能用API操作菜单,用易的菜单属性会使所有菜单都销毁重建的,当前菜单句柄就会立即失效
     ' 使程序陷入死循环,千万不要用易的菜单属性!!!
    .判断开始 (等于 (参数2, 1)) ' 编辑菜单
        
        赋值 (菜单条目信息.结构大小, 44)
        赋值 (菜单条目信息.标识符, 1)
        
        赋值 (菜单条目信息.条目状态, 选择 (., 0, 1))
        置菜单条目信息_API (参数1, 0, 真, 菜单条目信息)
        
        赋值 (菜单条目信息.条目状态, 选择 (., 0, 1))
        置菜单条目信息_API (参数1, 1, 真, 菜单条目信息)
        
        赋值 (菜单条目信息.条目状态, 选择 (., 0, 1))
        置菜单条目信息_API (参数1, 3, 真, 菜单条目信息)
        
        赋值 (菜单条目信息.条目状态, 选择 (., 0, 1))
        置菜单条目信息_API (参数1, 4, 真, 菜单条目信息)
        
        赋值 (菜单条目信息.条目状态, 选择 (., 0, 1))
        置菜单条目信息_API (参数1, 5, 真, 菜单条目信息)
        
        
    .判断 (等于 (参数2, 2)) ' 查看菜单
        赋值 (菜单条目信息.结构大小, 44)
        赋值 (菜单条目信息.标识符, 1)
        
         ' 取菜单条目信息_API (参数1, 0, 真, 菜单条目信息)
        赋值 (菜单条目信息.条目状态, 选择 (., 8, 0))
        置菜单条目信息_API (参数1, 2, 真, 菜单条目信息)
        
        赋值 (菜单条目信息.条目状态, 选择 (., 8, 0))
        置菜单条目信息_API (参数1, 3, 真, 菜单条目信息)
        
        赋值 (菜单条目信息.条目状态, 选择 (., 8, 0))
        置菜单条目信息_API (参数1, 5, 真, 菜单条目信息)
        
        赋值 (菜单条目信息.条目状态, 选择 (., 8, 0))
        置菜单条目信息_API (参数1, 6, 真, 菜单条目信息)
        
        赋值 (菜单条目信息.条目状态, 选择 (., 8, 0))
        置菜单条目信息_API (参数1, 8, 真, 菜单条目信息)
        
         ' 输出调试文本 (显示空格和制表符号.选中)'写易的菜单属性不通用
    .默认
        
    .判断结束
    
.默认
    
.判断结束
返回 (CallWindowProc (回调指针, 窗口句柄, 消息, 参数1, 参数2)) ' 把不需要处理的消息传递给默认窗口处理程序，使窗口能正常响应消息


.子程序 __启动窗口_将被销毁, 空白型, , 
SetWindowLong (窗口句柄, -4, 回调指针) ' 窗口销毁前置回原来的消息处理程序


.子程序 _字体_被选择, 空白型, , 
.局部变量 新字体, 字体, , , 

赋值 (.类型, 2)
赋值 (新字体, .)
赋值 (.字体名称, 新字体.字体名称)
赋值 (.字体大小, 新字体.字体大小)
赋值 (.加粗, 新字体.加粗)
赋值 (.倾斜, 新字体.倾斜)
赋值 (.删除线, 新字体.删除线)
赋值 (.下划线, 新字体.下划线)

.如果真 (打开 ())
    赋值 (新字体.字体名称, .字体名称)
    赋值 (新字体.字体大小, .字体大小)
    赋值 (新字体.加粗, .加粗)
    赋值 (新字体.倾斜, .倾斜)
    赋值 (新字体.删除线, .删除线)
    赋值 (新字体.下划线, .下划线)
    赋值 (., 新字体)
    
.如果真结束


.子程序 _显示空格和制表符号_被选择, 空白型, , 
赋值 (., 取反 (.))

.子程序 _显示换行符_被选择, 空白型, , 
赋值 (., 取反 (.))

.子程序 _显示行号条_被选择, 空白型, , 
赋值 (., 取反 (.))

.子程序 _显示标尺栏_被选择, 空白型, , 
赋值 (., 取反 (.))

.子程序 _只读模式_被选择, 空白型, , 
赋值 (., 取反 (.))


.子程序 寻找指定文本, 逻辑型, , 
.参数 寻找关键词, 文本型, , 
.参数 寻找方向, 空白型, , 
.参数 区分大小写, 逻辑型, , 
.参数 全词匹配, 逻辑型, , 

.局部变量 查找方向, 逻辑型, , , 
.局部变量 全文查找, 逻辑型, , , 
.局部变量 开始行, 整数型, , , 
.局部变量 开始列, 整数型, , , 
.局部变量 结束行, 整数型, , , 
.局部变量 结束列, 整数型, , , 


.判断开始 (等于 (寻找方向, 1))
    假.未知支持库函数_12 (开始行, 开始列)
     ' 结束列 ＝ 云的代码编辑框1.取行数目 ()
    赋值 (查找方向, 真)
.判断 (等于 (寻找方向, 2))
    假.未知支持库函数_12 (开始行, 开始列)
     ' 结束列 ＝ 云的代码编辑框1.取行数目 ()
    .如果真 (等于 (到大写 (未知支持库函数_14 ()), 到大写 (寻找关键词)))
        赋值 (开始列, 相减 (开始列, 取文本长度 (寻找关键词)))
        .如果真 (小于 (开始列, 0))
            赋值 (开始行, 相减 (开始行, 1))
            赋值 (开始列, 开始行.未知支持库函数_5 ())
        .如果真结束
        
    .如果真结束
    赋值 (查找方向, 假)
    
.默认
     ' 0
    赋值 (查找方向, 真)
    赋值 (全文查找, 真)
.判断结束


.如果真 (开始行.未知支持库函数_28 (开始列, 结束行, 结束列, 寻找关键词, 区分大小写, 全词匹配, 查找方向, 假, 全文查找))
    开始行.未知支持库函数_27 (开始列, 结束行, 结束列)
    获取焦点 ()
    返回 (真)
.如果真结束
返回 (假)

.子程序 _查找_被选择, 空白型, , 
赋值 (查找窗口., 未知支持库函数_14 ())
.如果真 (等于 (查找窗口., “”))
    赋值 (查找窗口., 查找历史.寻找关键词)
.如果真结束
载入 (查找窗口, _启动窗口, 真)

.子程序 _查找下一个_被选择, 空白型, , 
.如果真 (等于 (查找历史.寻找关键词, “”))
    返回 ()
.如果真结束
.如果真 (等于 (寻找指定文本 (查找历史.寻找关键词, 1, 查找历史.区分大小写, 查找历史.全词匹配), 假))
    鸣叫 ()
.如果真结束


.子程序 _查找上一个_被选择, 空白型, , 
.如果真 (等于 (查找历史.寻找关键词, “”))
    返回 ()
.如果真结束
.如果真 (等于 (寻找指定文本 (查找历史.寻找关键词, 2, 查找历史.区分大小写, 查找历史.全词匹配), 假))
    鸣叫 ()
.如果真结束


.子程序 _替换_被选择, 空白型, , 
赋值 (替换窗口., 未知支持库函数_14 ())
.如果真 (等于 (替换窗口., “”))
    赋值 (替换窗口., 查找历史.寻找关键词)
.如果真结束
载入 (替换窗口, _启动窗口, 假)


.子程序 _定位_被选择, 空白型, , 
.局部变量 行号, 整数型, , , 

.如果真 (输入框 (“请输入欲跳转到的行号:”, “到指定行”, , 行号, #输入整数))
    行号.未知支持库函数_19 (0)
.如果真结束


.子程序 _下一个配对标识符_被选择, 空白型, , 
未知支持库函数_30 ()

.子程序 _切换书签_被选择, 空白型, , 
.未知支持库函数_37 (-1, 真)

.子程序 _下一个书签_被选择, 空白型, , 
.局部变量 当前行, 整数型, , , 
.局部变量 当前列, 整数型, , , 
.局部变量 书签行, 整数型, , , 

假.未知支持库函数_12 (当前行, 当前列)
赋值 (书签行, 当前行.未知支持库函数_38 (假))
.如果真 (大于 (书签行, -1))
    书签行.未知支持库函数_19 (0)
.如果真结束


.子程序 _上一个书签_被选择, 空白型, , 
.局部变量 当前行, 整数型, , , 
.局部变量 当前列, 整数型, , , 
.局部变量 书签行, 整数型, , , 

假.未知支持库函数_12 (当前行, 当前列)
赋值 (书签行, 当前行.未知支持库函数_39 (假))
.如果真 (大于 (书签行, -1))
    书签行.未知支持库函数_19 (0)
.如果真结束


.子程序 _清除全部书签_被选择, 空白型, , 
未知支持库函数_40 ()

.子程序 _关于_被选择, 空白型, , 
载入 (关于窗口, _启动窗口, 真)

.子程序 _工具条1_被单击, 空白型, , 
.参数 按钮索引, 整数型, , 

.判断开始 (等于 (按钮索引, 0))
    _新建_被选择 ()
.判断 (等于 (按钮索引, 1))
    _打开_被选择 ()
.判断 (等于 (按钮索引, 2))
    _保存_被选择 ()
.判断 (等于 (按钮索引, 4))
    _打印预览_被选择 ()
.判断 (等于 (按钮索引, 5))
    _打印_被选择 ()
.判断 (等于 (按钮索引, 7))
    _剪切_被选择 ()
.判断 (等于 (按钮索引, 8))
    _粘贴_被选择 ()
.判断 (等于 (按钮索引, 9))
    _复制_被选择 ()
.判断 (等于 (按钮索引, 10))
    _删除所选内容_被选择 ()
.判断 (等于 (按钮索引, 12))
    _撤消_被选择 ()
.判断 (等于 (按钮索引, 13))
    _重做_被选择 ()
.判断 (等于 (按钮索引, 15))
    _查找_被选择 ()
.判断 (等于 (按钮索引, 16))
    _替换_被选择 ()
.判断 (等于 (按钮索引, 17))
    _定位_被选择 ()
.判断 (等于 (按钮索引, 19))
    _编译为置入代码_被选择 ()
.判断 (等于 (按钮索引, 20))
    _编译为字节集文件_被选择 ()
.判断 (等于 (按钮索引, 22))
    _关于_被选择 ()
.默认
    
.判断结束


.子程序 编译汇编源码, 逻辑型, , 失败返回真
.参数 目标文件, 文本型, 可空, 

.局部变量 安全属性, 安全属性_, , , 
.局部变量 结果, 逻辑型, , , 
.局部变量 输出管道句柄, 整数型, , , 
.局部变量 输入管道句柄, 整数型, , , 
.局部变量 启动信息, 启动信息_, , , 
.局部变量 进程信息, 进程信息_, , , 
.局部变量 错误码, 整数型, , , 
.局部变量 输出文字缓冲区, 字节集, , , 
.局部变量 实际长度, 整数型, , , 
.局部变量 输出文本, 文本型, , , 
.局部变量 开始位, 整数型, , , 
.局部变量 结束位, 整数型, , , 
.局部变量 行号, 整数型, , , 

改变目录 (取运行目录 ())
.如果真 (等于 (写到文件 (“bak.asm”, 到字节集 (未知支持库函数_2 ())), 假))
    信息框 (“保存备份源码失败！”, #错误图标, “出错”)
    返回 (假)
.如果真结束
赋值 (安全属性.长度, 12)
赋值 (安全属性.包含句柄, 真)
赋值 (结果, 创建匿名管道_API (输出管道句柄, 输入管道句柄, 安全属性, 0))
.如果真 (等于 (结果, 假))
    信息框 (“创建与控制台通信的管道失败！”, #错误图标, “出错”)
    返回 (假)
.如果真结束
赋值 (启动信息.cb, 68)
获取启动信息_API (启动信息)
赋值 (启动信息.hStdOutput, 输入管道句柄)
赋值 (启动信息.hStdError, 输入管道句柄)
赋值 (启动信息.dwFlags, 相加 (#STARTF_USESHOWWINDOW, #STARTF_USESTDHANDLES))
赋值 (启动信息.wShowWindow, #SW_HIDE) ' 隐藏运行
.如果 (是否为空 (目标文件))
    赋值 (目标文件, “code.bin”)
.否则
    赋值 (目标文件, 相加 (#引号, 目标文件, #引号))
.如果结束

赋值 (结果, 创建进程_API (0, 相加 (“nasm.exe -f bin bak.asm -o ”, 目标文件, “ -Pbits32.asm”), 0, 0, 1, 0, 0, 取当前目录 (), 启动信息, 进程信息))
关闭系统对象句柄_API (输入管道句柄)
.如果真 (等于 (结果, 假))
    关闭系统对象句柄_API (输出管道句柄)
    信息框 (“运行NASM编译器失败！请检测目录是否存在nasm.exe程序”, #错误图标, “出错”)
    返回 (假)
.如果真结束

 ' 读取编译器输出的文本
.循环判断首 ()
    赋值 (输出文字缓冲区, 取空白字节集 (1024))
    赋值 (结果, 读文件_API (输出管道句柄, 输出文字缓冲区, 1024, 实际长度, 0))
    .如果真 (等于 (结果, 假))
        跳出循环 ()
    .如果真结束
    赋值 (输出文字缓冲区, 子字节集替换 (输出文字缓冲区, { 10 }, { 13, 10 }, , )) ' 把DOS控制台的换行符，改成WINDOWS的回车换行符
    赋值 (输出文本, 相加 (输出文本, 到文本 (输出文字缓冲区)))
.循环判断尾 (结果)

取进程退出代码_API (进程信息.进程句柄, 错误码)
关闭系统对象句柄_API (进程信息.进程句柄)
关闭系统对象句柄_API (进程信息.线程句柄)
关闭系统对象句柄_API (输出管道句柄)

.如果真 (不等于 (错误码, 0)) ' 编译源码时有错误发生，源码有错误
     ' 输出调试文本 (错误码)
     ' 输出调试文本 (输出文本)
     ' 取发生错误的行号
    赋值 (开始位, 寻找文本 (输出文本, “:”, , 假))
    .如果真 (大于 (开始位, 0))
        赋值 (开始位, 相加 (开始位, 1))
        赋值 (结束位, 寻找文本 (输出文本, “:”, 开始位, 假))
        .如果真 (大于 (结束位, 0))
            赋值 (行号, 到数值 (取文本中间 (输出文本, 开始位, 相减 (结束位, 开始位))))
            赋值 (输出文本, 取文本右边 (输出文本, 相减 (取文本长度 (输出文本), 结束位)))
        .如果真结束
        
    .如果真结束
    .如果真 (大于 (行号, 0))
        相减 (行号, 1).未知支持库函数_19 (0)
         ' 云的代码编辑框1.切换书签标志 (真, -1, 真)
    .如果真结束
    赋值 (错误窗口., 行号)
    赋值 (错误窗口., 输出文本)
    .如果真 (是否已创建 (错误窗口))
        错误窗口.销毁 ()
    .如果真结束
    载入 (错误窗口, _启动窗口, 假)
    鸣叫 ()
    返回 (假)
.如果真结束
返回 (真)

.子程序 _编译为置入代码_被选择, 空白型, , 
.局部变量 代码数据, 字节集, , , 
.局部变量 长度, 整数型, , , 
.局部变量 易代码, 文本型, , , 
.局部变量 I, 整数型, , , 
.局部变量 文件句柄, 整数型, , , 
.局部变量 行文本, 文本型, , , 

.如果真 (编译汇编源码 ())
    赋值 (代码数据, 读入文件 (“code.bin”))
    赋值 (长度, 取字节集长度 (代码数据))
    .如果真 (等于 (长度, 0))
        返回 ()
    .如果真结束
    赋值 (易代码, “置入代码 ({”)
    .计次循环首 (长度, I)
        .如果 (等于 (I, 1))
            赋值 (易代码, 相加 (易代码, 到文本 (代码数据 [I])))
        .否则
            赋值 (易代码, 相加 (易代码, “,”, 到文本 (代码数据 [I])))
        .如果结束
        
    .计次循环尾 ()
    赋值 (易代码, 相加 (易代码, “})”, #换行符))
    .如果真 (等于 (信息框 (“是否将汇编代码作为注释行加入到易源码？”, 相加 (#是否钮, #询问图标), ), #是钮))
        赋值 (文件句柄, 打开文件 (“bak.asm”, #读入, ))
        .如果真 (不等于 (文件句柄, 0))
            .循环判断首 ()
                赋值 (行文本, 删首尾空 (读入一行 (文件句柄)))
                .如果真 (不等于 (行文本, “”))
                    赋值 (易代码, 相加 (易代码, “'”, 行文本, #换行符))
                .如果真结束
                
            .循环判断尾 (等于 (是否在文件尾 (文件句柄, 真), 假))
            关闭文件 (文件句柄)
        .如果真结束
        
    .如果真结束
    赋值 (代码窗口., 易代码)
    载入 (代码窗口, _启动窗口, 真)
.如果真结束



.子程序 _编译为字节集文件_被选择, 空白型, , 
.局部变量 目标文件, 文本型, , , 

.如果真 (打开 ())
    赋值 (目标文件, .文件名)
    .如果真 (编译汇编源码 (目标文件))
        信息框 (相加 (“编译到文件”, 目标文件, “成功！”), #信息图标, )
    .如果真结束
    
.如果真结束


.窗口程序集 窗口程序集2, , , 

.程序集变量 初始查找文本, 文本型, , , 
.子程序 _查找窗口_创建完毕, 空白型, , 
赋值 (.内容, 初始查找文本)
赋值 (.选中, 查找历史.全词匹配)
赋值 (.选中, 查找历史.区分大小写)
赋值 (.现行选中项, 查找历史.寻找方向)


.子程序 _按钮1_被单击, 空白型, , 
.局部变量 查找文本, 文本型, , , 

赋值 (查找文本, .内容)
.如果真 (等于 (查找文本, “”))
    信息框 (“请输入要查找的关键字”, #信息图标, )
    获取焦点 ()
    返回 ()
.如果真结束
.如果真 (寻找指定文本 (查找文本, .现行选中项, .选中, .选中))
    赋值 (查找历史.寻找关键词, 查找文本)
    赋值 (查找历史.全词匹配, .选中)
    赋值 (查找历史.区分大小写, .选中)
    赋值 (查找历史.寻找方向, .现行选中项)
    销毁 ()
    返回 ()
.如果真结束
信息框 (“搜索字符串未找到!”, #警告图标, )

.子程序 _按钮2_被单击, 空白型, , 
销毁 ()

.窗口程序集 窗口程序集3, , , 

.程序集变量 初始查找文本, 文本型, , , 
.子程序 _替换窗口_创建完毕, 空白型, , 
赋值 (.内容, 初始查找文本)
赋值 (.选中, 查找历史.全词匹配)
赋值 (.选中, 查找历史.区分大小写)



.子程序 _按钮1_被单击, 空白型, , 
.局部变量 查找文本, 文本型, , , 

赋值 (查找文本, .内容)
.如果真 (等于 (查找文本, “”))
    信息框 (“请输入要查找的关键字”, #信息图标, )
    获取焦点 ()
    返回 ()
.如果真结束
.如果真 (寻找指定文本 (查找文本, 1, .选中, .选中))
    赋值 (查找历史.寻找关键词, 查找文本)
    赋值 (查找历史.全词匹配, .选中)
    赋值 (查找历史.区分大小写, .选中)
    赋值 (.禁止, 假)
    返回 ()
.如果真结束
信息框 (“搜索字符串未找到!”, #警告图标, )
赋值 (.禁止, 真)

.子程序 _按钮2_被单击, 空白型, , 
.局部变量 替换文本, 文本型, , , 

赋值 (替换文本, .内容)
_启动窗口.未知支持库函数_26 (., -1, -1, 替换文本)

.子程序 _按钮3_被单击, 空白型, , 
.如果 (_启动窗口.未知支持库函数_29 (., 0, 0, _启动窗口.未知支持库函数_4 (.), 0, .内容, .内容, .选中, .选中, 假, 假))
    信息框 (“全部替换完成!”, #信息图标, )
.否则
    信息框 (“搜索字符串未找到!”, #警告图标, )
.如果结束


.子程序 _按钮4_被单击, 空白型, , 
销毁 ()

.子程序 _编辑框1_内容被改变, 空白型, , 
.如果 (大于 (取文本长度 (.内容), 0))
    赋值 (.禁止, 假)
.否则
    赋值 (.禁止, 真)
.如果结束



.窗口程序集 窗口程序集4, , , 

.子程序 _按钮1_被单击, 空白型, , 
销毁 ()

.子程序 _关于窗口_创建完毕, 空白型, , 
PlaySound (“SystemStart”, 0, 位或 (#SND_ALIAS, #SND_ASYNC)) ' 调用playsound播放声音

.窗口程序集 窗口程序集5, , , 

.程序集变量 错误提示, 文本型, , , 
.程序集变量 错误行, 整数型, , , 
.子程序 _错误窗口_创建完毕, 空白型, , 
.如果真 (不等于 (错误行, 0))
    赋值 (错误提示, 相加 (“第”, 到文本 (错误行), “行出错：”, #换行符, 错误提示))
.如果真结束
赋值 (.内容, 错误提示)

.子程序 _按钮1_被单击, 空白型, , 
销毁 ()

.窗口程序集 窗口程序集6, , , 

.程序集变量 易代码, 文本型, , , 
.子程序 _按钮1_被单击, 空白型, , 
销毁 ()

.子程序 _代码窗口_创建完毕, 空白型, , 
赋值 (.内容, 易代码)


 ' 不属于任何一个程序集、类模块的函数：
