 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：谢栋栋
 ' 邮政编码：116001
 ' 联系地址：辽宁省大连市中山区人民路55号亚太国际金融中心
 ' 联系电话：0411-88995831
 ' 传真号码：0411-88995834
 ' 电子信箱：service@dywt.com.cn
 ' 主页地址：http://www.dywt.com.cn
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 800
    高度 = 600
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 0
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 真
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 真
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 已保存到：D:\易语言学习\Data\夺宝奇兵.e\_启动窗口_底图
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “夺宝奇兵 v 1.2.1”
    帮助文件名 = “帮助文档.chm”



.声音 最终宝藏, " ' 已保存到：D:\易语言学习\Data\夺宝奇兵.e\最终宝藏", , 
.声音 , , , 
.图片 图片_空白背景, " ' 已保存到：D:\易语言学习\Data\夺宝奇兵.e\图片_空白背景", , 
.图片 , , , 
.常量 关键字分隔符1, "“$<*>$”", , 
.常量 关键字分隔符2, "“$<&>$”", , 
.常量 关键字分隔符3, "“$<%>$”", , 
.常量 执行命令分割符, "“####”", , 使用本分割符可以通过页面地址来获取执行命令
.常量 , , , 
.常量 排行榜限定行数, "15", , 排行榜显示条数
.常量 入榜的基本分数, "3000", , 进入排行榜的基本分数
.常量 , , , 
.常量 执行命令_用户排行, "“用户排行”", , 
.常量 执行命令_用户选择, "“用户选择”", , 
.常量 执行命令_更改名称, "“更改名称”", , 
.常量 执行命令_继续游戏, "“继续游戏”", , 
.常量 执行命令_新的旅程, "“新的旅程”", , 
.常量 执行命令_游戏设置, "“游戏设置”", , 
.常量 执行命令_关于游戏, "“关于游戏”", , 
.常量 执行命令_退出游戏, "“退出游戏”", , 
.常量 , , , 
.常量 名称处理模式_添加用户, "1", , 
.常量 名称处理模式_更改名称, "2", , 
.常量 , , , 
.图片 图片_图块数据, " ' 已保存到：D:\易语言学习\Data\夺宝奇兵.e\图片_图块数据", , 
.图片 图片_图块背景, " ' 已保存到：D:\易语言学习\Data\夺宝奇兵.e\图片_图块背景", , 
.图片 , , , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 4 系统核心支持库
 ' iext 27bb20fdd3e145e4bee3db39ddd6e64c 1 2 扩展界面支持库一
 ' BmpOperate 42305932-06E6-47a5-AC79-8BDCDC58DF61 1 0 位图操作支持库
 ' dp1 4BB4003860154917BC7D8230BF4FA58A 1 0 数据操作支持库一
 ' HtmlView 5014D8FA6DCA40b68FA626D8183666EB 1 1 超文本浏览框支持库
 ' iext2 AF6AD80AA4244A59AFB3D83ECF5173CC 1 1 扩展界面支持库二
 ' spec A512548E76954B6E92C21055517615B0 2 1 特殊功能支持库
 ' eMMedia 824F144B108A4bcbB966F45670D42A00 2 4 多媒体支持库
 ' shell 52F260023059454187AF826A3C07AF2A 1 0 操作系统界面功能支持库




数据类型 坐标, , 
    .成员 横向坐标, 整数型, , , 
    .成员 纵向坐标, 整数型, , , 
    .成员 匿名成员2458, 空白型, , , 

数据类型 分数排行, , 
    .成员 用户名称, 文本型, , , 
    .成员 用户分数, 整数型, , , 
    .成员 匿名成员2228, 空白型, , , 

数据类型 用户信息, , 
    .成员 用户名称, 文本型, , , 
    .成员 用户分数, 整数型, , , 
    .成员 用户当前关卡, 整数型, , , 
    .成员 匿名成员4994, 空白型, , , 

数据类型 时间信息, , 
    .成员 最大位置, 整数型, , , 
    .成员 时间, 整数型, , , 
    .成员 匿名成员2231, 空白型, , , 

数据类型 游戏道具, , 
    .成员 道具名称, 文本型, , , 
    .成员 道具数量, 整数型, , , 
    .成员 匿名成员2462, 空白型, , , 

数据类型 主关卡信息, , 
    .成员 关卡名称, 文本型, , , 
    .成员 关卡说明, 文本型, , , 
    .成员 十字标记左边, 整数型, , , 
    .成员 十字标记顶边, 整数型, , , 
    .成员 匿名成员2839, 空白型, , , 

数据类型 关卡信息, , 
    .成员 图块种类, 整数型, , , 
    .成员 横向块数, 整数型, , , 
    .成员 纵向块数, 整数型, , , 
    .成员 图块宽度, 整数型, , , 
    .成员 图块高度, 整数型, , , 
    .成员 单图块连接时间, 整数型, , , 
    .成员 匿名成员3043, 空白型, , , 

数据类型 连连看数据块, , 
    .成员 永久序号, 整数型, , , 记录数据块建立的时候生成的顺序号，建立后不做任何更改
    .成员 数据内容, 整数型, , , 记录数据块实际数据
    .成员 匿名成员2457, 空白型, , , 

.全局变量 _记录页面, 文本型, , , 主界面选择夹当前选中子夹名称，在改变当前子夹后以根据本名称跳转回来
.全局变量 匿名全局变量_4863, 空白型, , , 
.全局变量 _设置_配置文件, 文本型, , , 配置文件的路径
.全局变量 _设置_背景音乐, 逻辑型, , , 游戏配置：背景音乐
.全局变量 _设置_游戏音效, 逻辑型, , , 游戏配置：游戏音效
.全局变量 _设置_自动选中, 逻辑型, , , 游戏配置：自动选中
.全局变量 _设置_连线反向, 逻辑型, , , 游戏配置：连线反向
.全局变量 匿名全局变量_4858, 空白型, , , 

.窗口程序集 窗口程序集_启动窗口, , , 

.程序集变量 _上次选择, 坐标, , , 连连看区域上一次选中的图块位置
.程序集变量 _当前选择, 坐标, , , 连连看区域当前选中的图块位置
.程序集变量 _已经选中, 逻辑型, , , 连连看区域是否有图块被选中
.程序集变量 匿名程序集变量_2755, 空白型, , , 
.程序集变量 _上次点燃位置, 坐标, , , 连连看区域过程中上一次移动鼠标位置点燃的图块位置
.程序集变量 _本次点燃位置, 坐标, , , 连连看区域过程中当前移动鼠标位置点燃的图块位置
.程序集变量 匿名程序集变量_2656, 空白型, , , 
.程序集变量 _系统菜单句柄, 整数型, , , 存储系统菜单的句柄值
.程序集变量 _主菜单载入完毕, 逻辑型, , , 记录主菜单动画是否载入完毕
.程序集变量 匿名程序集变量_4348, 空白型, , , 
.程序集变量 _连连看类, 类_游戏_连连看, , , 连连看游戏核心类
.程序集变量 _游戏道具, 类_游戏_游戏道具, , , 游戏道具处理类
.程序集变量 _关卡处理, 类_游戏_关卡处理, , , 游戏关卡处理类
.程序集变量 _用户时间分数类, 类_游戏_用户时间分数处理, , , 游戏用户分数时间综合处理类
.程序集变量 匿名程序集变量_2242, 空白型, , , 
.程序集变量 _原用户名称, 文本型, , , 更改用户名称时调用
.程序集变量 _用户名称处理模式, 整数型, , , 1.添加用户　2.更改名称
.程序集变量 匿名程序集变量_5251, 空白型, , , 
.子程序 __启动窗口_创建完毕, 空白型, , 
 ' 载入主菜单动画
赋值 (_主菜单载入完毕, 假)
相加 (取运行目录 (), “\Flash\Main.swf”).未知支持库函数_1 ()

 ' 初始化各种控件位置信息
连续赋值 (555, .高度, .高度, .高度, .高度, .高度, .高度, .高度, .高度, .高度, .高度, .高度, .高度)
连续赋值 (#图片_空白背景, .图片, .图片, .图片, .图片, .图片, .图片)

 ' 系统设置配置文件
赋值 (_设置_配置文件, 相加 (取运行目录 (), “\Config.ini”))

 ' 读取系统配置
系统设置_读取设置 ()

 ' 添加游戏使用的道具
_游戏道具.加入道具 (“提示道具”, 0)
_游戏道具.加入道具 (“打乱道具”, 0)

 ' 初始化用户时间分数类
_用户时间分数类.初始化类_ (4, 483)

 ' 读取用户名称信息
赋值 (.内容, _用户时间分数类.取当前用户名 ())
赋值 (.标题, _用户时间分数类.取当前用户名 ())

 ' 显示用户列表
用户选择_刷新显示用户列表 ()

 ' 判断用户名称是否为空，为空则更改用户名
.如果 (等于 (_用户时间分数类.用户列表_取用户数 (), 0))
    获取焦点 ()
    用户选择_添加用户 ()
.否则
    .如果 (等于 (_用户时间分数类.取当前用户名 (), “”))
        选择夹子夹名称跳转 (“用户选择”)
    .否则
        .如果 (_用户时间分数类.用户列表_用户是否存在 (_用户时间分数类.取当前用户名 ()))
            _用户时间分数类.用户列表_置当前用户 (_用户时间分数类.取当前用户名 ())
            读取用户关卡信息 ()
        .否则
            选择夹子夹名称跳转 (“用户选择”)
            赋值 (.现行选中项, 0)
        .如果结束
        
    .如果结束
    
.如果结束


.子程序 _图形按钮_最小化_被单击, 空白型, , 
赋值 (., 2)


.子程序 _图形按钮_退出_被单击, 空白型, , 
销毁 ()


.子程序 _画板_游戏界面_前景画板_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 连接路径, 坐标, , "0", 
.局部变量 横向块数, 整数型, , , 
.局部变量 纵向块数, 整数型, , , 
.局部变量 临时数据块, 连连看数据块, , , 
.局部变量 匿名局部变量_4609, 空白型, , , 

 ' 获取横纵向块数信息到变量
赋值 (横向块数, _连连看类.取横向块数 ())
赋值 (纵向块数, _连连看类.取纵向块数 ())

 ' 获取当前鼠标点击位置的图块坐标〔图块在图块数组数据中的位置〕
赋值 (_当前选择.横向坐标, 相加 (整除 (相减 (横向位置, _连连看类.取图块信息 (0)), _连连看类.取图块信息 (2)), 1))
赋值 (_当前选择.纵向坐标, 相加 (整除 (相减 (纵向位置, _连连看类.取图块信息 (1)), _连连看类.取图块信息 (3)), 1))

 ' 判断获取的图块坐标是否合法，合法则继续下一步
.如果真 (并且 (大于 (_当前选择.横向坐标, 0), 大于 (_当前选择.纵向坐标, 0), 小于 (_当前选择.横向坐标, 相加 (横向块数, 2)), 小于 (_当前选择.纵向坐标, 相加 (纵向块数, 2))))
    .如果真 (并且 (等于 (_当前选择.横向坐标, _上次点燃位置.横向坐标), 等于 (_当前选择.纵向坐标, _上次点燃位置.纵向坐标)))
        返回 ()
    .如果真结束
    .如果真 (取反 (并且 (等于 (_上次点燃位置.横向坐标, _上次选择.横向坐标), 等于 (_上次点燃位置.纵向坐标, _上次选择.纵向坐标), 等于 (_已经选中, 真))))
        .如果真 (等于 (假, _连连看类.是否为空图块 (_上次点燃位置)))
            _连连看类.重画指定数据 (_上次点燃位置)
        .如果真结束
        
    .如果真结束
    .如果真 (取反 (并且 (等于 (_当前选择.横向坐标, _上次选择.横向坐标), 等于 (_当前选择.纵向坐标, _上次选择.纵向坐标), 等于 (_已经选中, 真))))
        _连连看类.点亮指定数据 (_当前选择, 1, 真)
    .如果真结束
    赋值 (_上次点燃位置, _当前选择)
.如果真结束


.子程序 _画板_游戏界面_前景画板_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 连接路径, 坐标, , "0", 
.局部变量 横向块数, 整数型, , , 
.局部变量 纵向块数, 整数型, , , 
.局部变量 本次分数, 整数型, , , 
.局部变量 连接失败, 逻辑型, , , 
.局部变量 临时数据块, 连连看数据块, , , 
.局部变量 匿名局部变量_1135, 空白型, , , 

 ' 获取横纵向块数信息到变量
赋值 (横向块数, _连连看类.取横向块数 ())
赋值 (纵向块数, _连连看类.取纵向块数 ())

 ' 获取当前鼠标点击位置的图块坐标〔图块在图块数组数据中的位置〕
赋值 (_当前选择.横向坐标, 相加 (整除 (相减 (横向位置, _连连看类.取图块信息 (0)), _连连看类.取图块信息 (2)), 1))
赋值 (_当前选择.纵向坐标, 相加 (整除 (相减 (纵向位置, _连连看类.取图块信息 (1)), _连连看类.取图块信息 (3)), 1))

 ' 判断获取的图块坐标是否合法，合法则继续下一步
.如果真 (并且 (大于 (_当前选择.横向坐标, 0), 大于 (_当前选择.纵向坐标, 0), 小于 (_当前选择.横向坐标, 相加 (横向块数, 2)), 小于 (_当前选择.纵向坐标, 相加 (纵向块数, 2))))
    
     ' 判断获取的图块坐标的数据是否为空，如果为空则返回〔表识无效〕
    .如果真 (等于 ( [_连连看类.取数据值 (_当前选择)].数据内容, 0))
        返回 ()
    .如果真结束
    
     ' 判断鼠标是否已经选中了图块
    .如果 (等于 (_已经选中, 真))
         ' 判断用户选择的两个图块是否可以连通
        .如果 (并且 (_连连看类.寻路 (_上次选择, _当前选择, 连接路径), 或者 (不等于 (_上次选择.横向坐标, _当前选择.横向坐标), 不等于 (_上次选择.纵向坐标, _当前选择.纵向坐标))))
            
             ' 清除已经选中并连通的数据块
            赋值 (临时数据块, _连连看类.取数据值 (_当前选择))
            赋值 (临时数据块.数据内容, 0)
            _连连看类.置游戏数据值 (_当前选择, 临时数据块)
            赋值 (临时数据块, _连连看类.取数据值 (_上次选择))
            赋值 (临时数据块.数据内容, 0)
            _连连看类.置游戏数据值 (_上次选择, 临时数据块)
            
             ' 计算并处理用户的分数
             ' 通过上次选中图块到当前选中图块的时间来增加分数
            .如果真 (小于 (相减 (_用户时间分数类.时间_取当前游戏时间 (), _用户时间分数类.时间_取上次选中时间 ()), 5000))
                赋值 (本次分数, 相乘 (相除 (相减 (5000, 相减 (_用户时间分数类.时间_取当前游戏时间 (), _用户时间分数类.时间_取上次选中时间 ())), 5000), 10))
            .如果真结束
            赋值 (本次分数, 相加 (本次分数, 10))
            _用户时间分数类.分数_加入本局分数 (本次分数)
            
             ' 再次设置上次选中的时间
            _用户时间分数类.时间_置上次选中时间 ()
            
            赋值 (连接失败, 假)
        .否则
            
            赋值 (连接失败, 真)
            
        .如果结束
        
         ' 重新绘制头尾位置数据块的图块〔为空则清除指定位置图块数据〕
        _连连看类.重画指定数据 (_上次选择)
        _连连看类.重画指定数据 (_当前选择)
        
         ' 设置图块得选中状态为假
        赋值 (_已经选中, 假)
        
         ' 判断是否连接失败
        .如果 (连接失败)
             ' 判断“自动选中”设置是否为真，为真则再次选中当前位置得图块
            .如果 (_设置_自动选中)
                
                游戏音效_播放 (0)
                
                _连连看类.点亮指定数据 (_当前选择, 2)
                赋值 (_已经选中, 真)
                赋值 (_上次选择, _当前选择)
                
            .否则
                游戏音效_播放 (3)
                
            .如果结束
            
        .否则
             ' 判断连连看是否存在有效的图块，如果不存在则表示过关
            .如果真 (等于 (_连连看类.是否存在有效图块 (), 假))
                
                 ' 分数排行处理
                _用户时间分数类.用户_添加分数 (_用户时间分数类.分数_取本局分数 ())
                _用户时间分数类.置入排行榜 (_用户时间分数类.取当前用户分数 ())
                
                游戏控制_停止 ()
                _关卡处理.过关 ()
                写入用户关卡信息 ()
                _用户时间分数类.用户列表_写出列表 ()
                
                信息框 (“过关，您真是太棒了！”, 0, )
                
                 ' 判断当前所在的关卡是否为主关卡〔是否到了下一个地方/城堡〕
                .如果 (_关卡处理.是否为主关卡 ())
                     ' 如果到了最后关，则显示显示领取奖品的按钮
                    赋值 (., _关卡处理.是否到最后关卡 ())
                     ' 如果到了最后关则冻结排行榜中当前用户的排行榜分数信息
                    .如果真 (_关卡处理.是否到最后关卡 ())
                        _用户时间分数类.用户_冻结排行榜记录 (_用户时间分数类.取当前用户名 ())
                    .如果真结束
                    选择夹子夹名称跳转 (“过关动画”)
                .否则
                    _图形按钮_游戏界面_重新开始_被单击 ()
                .如果结束
                
                返回 ()
            .如果真结束
            
            游戏音效_播放 (2)
            
             ' 绘制连线动画
            _连连看类.绘制图块连线 (连接路径, _设置_连线反向)
            
        .如果结束
        
        
    .否则
        游戏音效_播放 (0)
        
         ' 点亮用户选中的图块
        _连连看类.点亮指定数据 (_当前选择, 2)
        赋值 (_已经选中, 真)
        赋值 (_上次选择, _当前选择)
        
    .如果结束
    
     ' 判断是否有可同的路径，如果不存在则打乱游戏数据
    .判断循环首 (等于 (_连连看类.取可通路径 (), 假))
        _连连看类.打乱游戏数据 ()
        _连连看类.绘制当前页面 ()
    .判断循环尾 ()
    
.如果真结束


.子程序 _画板_游戏界面_前景画板_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

 ' 判断是否已经选中图块，如果选中则取消
.如果真 (_已经选中)
    游戏音效_播放 (1)
    _连连看类.重画指定数据 (_上次选择)
    赋值 (_已经选中, 假)
.如果真结束


.子程序 _图形按钮_主菜单_退出游戏_被单击, 空白型, , 
结束 ()


.子程序 _图形按钮_游戏界面_重新开始_被单击, 空白型, , 
.局部变量 临时关卡信息, 关卡信息, , , 
.局部变量 匿名局部变量_3023, 空白型, , , 

 ' 设置为载入界面
置为载入状态 ()

 ' 获取当前关卡信息并判断是否获取成功
.如果真 (_关卡处理.取当前关卡信息 (临时关卡信息))
    
     ' 设置游戏背景图片
    赋值 (.底图, 读入文件 (_关卡处理.取本关背景图片路径 ()))
    赋值 (.底图, .底图)
    
     ' 初始化游戏图块跟相关信息
    _连连看类.全局初始化 (临时关卡信息.横向块数, 临时关卡信息.纵向块数, 临时关卡信息.图块种类, 123, , , 临时关卡信息.图块宽度, 临时关卡信息.图块高度)
    
     ' 初始化游戏道具
    _游戏道具.置道具使用次数 (“提示道具”, 3)
    _游戏道具.置道具使用次数 (“打乱道具”, 3)
    
     ' 开始游戏
    游戏控制_开始 (相乘 (_连连看类.取图块信息 (4), 临时关卡信息.单图块连接时间))
    
     ' 刷新并显示道具数量
    刷新道具数量 ()
    
     ' 主关卡时自动改变位置来缩减占用内存
    .如果真 (_关卡处理.是否为主关卡 ())
        赋值 (., 2)
        处理事件 ()
        赋值 (., 0)
    .如果真结束
    
     ' 显示地图
    地图_显示 ()
.如果真结束


.子程序 _图形按钮_主菜单_继续游戏_被单击, 空白型, , 
_图形按钮_查看地图_被单击 ()


.子程序 _图形按钮_主菜单_新的旅程_被单击, 空白型, , 
_图形按钮_游戏界面_重新开始_被单击 ()


.子程序 _图形按钮_游戏界面_提示_被单击, 空白型, , 
.局部变量 前路径坐标, 坐标, , , 
.局部变量 后路径坐标, 坐标, , , 
.局部变量 匿名局部变量_2300, 空白型, , , 

 ' 判断用户选择的图块是否能够连通
.如果真 (_连连看类.取可通路径 (前路径坐标, 后路径坐标))
    
     ' 使用并判断是否使用成功“提示道具”〔如果道具数量为0则返回假〕
    .如果真 (_游戏道具.使用道具 (“提示道具”))
        游戏音效_播放 (4)
        
         ' 交替绘制选择图块的图片为原始图片跟点亮图块
        _连连看类.重画指定数据 (前路径坐标)
        _连连看类.重画指定数据 (后路径坐标)
        处理事件 ()
        延时 (150)
        _连连看类.点亮指定数据 (前路径坐标)
        _连连看类.点亮指定数据 (后路径坐标)
        处理事件 ()
        延时 (150)
        _连连看类.重画指定数据 (前路径坐标)
        _连连看类.重画指定数据 (后路径坐标)
        处理事件 ()
        延时 (150)
        _连连看类.点亮指定数据 (前路径坐标)
        _连连看类.点亮指定数据 (后路径坐标)
        处理事件 ()
        延时 (150)
        _连连看类.重画指定数据 (前路径坐标)
        _连连看类.重画指定数据 (后路径坐标)
        
         ' 刷新并显示道具数量信息
        刷新道具数量 ()
        
         ' 使用道具则缩减游戏剩余时间
        _用户时间分数类.增减游戏时间 (相乘 (负 (相除 (_用户时间分数类.取本局限定时间 (), _连连看类.取图块信息 (4))), 1))
        
    .如果真结束
    
.如果真结束


.子程序 _图形按钮_游戏界面_打乱_被单击, 空白型, , 
 ' 使用并判断是否使用成功“打乱道具”〔如果道具数量为0则返回假〕
.如果 (_游戏道具.使用道具 (“打乱道具”))
    
    游戏音效_播放 (5)
    
     ' 打乱游戏数据，并绘制打乱后的游戏整体图案
    _连连看类.打乱游戏数据 ()
    _连连看类.绘制当前页面 ()
    
     ' 刷新并显示道具数量信息
    刷新道具数量 ()
    _用户时间分数类.增减游戏时间 (相乘 (负 (相除 (_用户时间分数类.取本局限定时间 (), _连连看类.取图块信息 (4))), 1))
    
.否则
    
.如果结束


.子程序 _图形按钮_查看地图_被单击, 空白型, , 
地图_显示 ()


.子程序 _图形按钮_游戏地图_继续游戏_被单击, 空白型, , 
地图_隐藏 ()


.子程序 _图形按钮_主菜单_被单击, 空白型, , 
 ' 判断游戏当前是否为正常游戏状态〔除此以外还有暂停跟停止状态〕
.如果真 (小于或等于 (_用户时间分数类.取游戏状态 (), 1))
    
    游戏控制_暂停 (假)
    
     ' 判断用户是否确认要返回主界面，如果为假，则返回
    .如果真 (不等于 (信息框 (“游戏还在进行中，您真的决定现在退出吗？”, 相加 (#询问图标, #确认取消钮), “游戏进行中...”), #确认钮))
        返回 ()
    .如果真结束
    
.如果真结束
 ' 跳转到主界面
选择夹子夹名称跳转 (“主菜单”)


.子程序 _时钟_游戏_周期事件, 空白型, , 
.局部变量 是否停止状态, 逻辑型, 静态, , 
.局部变量 游戏当前时间, 整数型, , , 
.局部变量 当前主关卡索引, 整数型, , , 
.局部变量 匿名局部变量_2710, 空白型, , , 
.局部变量 当前次关卡, 整数型, 静态, , 
.局部变量 匿名局部变量_3967, 空白型, , , 

处理事件_背景音乐 () ' 保证游戏背景音乐可以循环播放的处理事件
_用户时间分数类.处理事件 () ' 处理游戏时间分数相关事件

.如果真 (不等于 (.标题, 到文本 (_用户时间分数类.取当前用户分数 ())))
    赋值 (.标题, 到文本 (_用户时间分数类.取当前用户分数 ()))
.如果真结束
.如果真 (_用户时间分数类.时间_是否已到限定时间 ())
    .如果真 (等于 (假, 是否停止状态))
        赋值 (是否停止状态, 真)
        游戏控制_停止 ()
        信息框 (“本局失败鸟！么关系哈，再接再厉~，相信你是最棒的！”, 0, “再接再厉”)
        _图形按钮_游戏界面_重新开始_被单击 ()
        
    .如果真结束
    返回 ()
.如果真结束
赋值 (是否停止状态, 假)
.如果真 (不等于 (当前次关卡, _关卡处理.取当前关卡 ()))
    赋值 (当前次关卡, _关卡处理.取当前关卡 ())
    赋值 (当前主关卡索引, 到数值 (_关卡处理.取主关卡信息 (6)))
    赋值 (.宽度, 相乘 (36, 相加 (求余数 (相减 (当前次关卡, 1), 5), 1)))
    赋值 (.内容, _关卡处理.取主关卡信息 (当前主关卡索引, 0))
    赋值 (.内容, _关卡处理.取主关卡信息 (相加 (当前主关卡索引, 1), 0))
.如果真结束
.如果真 (并且 (不等于 (.左边, 到数值 (_关卡处理.取主关卡信息 (4))), 不等于 (.顶边, 到数值 (_关卡处理.取主关卡信息 (5)))))
    赋值 (.图片, 读入文件 (_关卡处理.取主关卡信息 (2)))
    到数值 (_关卡处理.取主关卡信息 (4)).移动 (到数值 (_关卡处理.取主关卡信息 (5)), , )
    到数值 (_关卡处理.取主关卡信息 (4)).移动 (到数值 (_关卡处理.取主关卡信息 (5)), , )
.如果真结束

赋值 (游戏当前时间, _用户时间分数类.时间_取当前游戏时间 ())
赋值 (.标题, 相加 (取文本右边 (相加 (“00”, 到文本 (整除 (游戏当前时间, 60000))), 2), “:”, 取文本右边 (相加 (“00”, 到文本 (求余数 (取整 (相除 (游戏当前时间, 1000)), 60))), 2), “:”, 取文本右边 (相加 (“00”, 取文本左边 (到文本 (求余数 (游戏当前时间, 1000)), 2)), 2)))


.子程序 _图形按钮_暂停_被单击, 空白型, , 
 ' 暂停游戏并跳转到“暂停界面”
游戏控制_暂停 (假)
选择夹子夹名称跳转 (“暂停界面”)


.子程序 _超文本浏览框_主菜单_载入完毕, 空白型, , 
 ' 设置主菜单载入完毕变量为真，目的是保证只载入一次主菜单动画
赋值 (_主菜单载入完毕, 真)


.子程序 _超文本浏览框_主菜单_即将跳转, 逻辑型, , 
 ' 判断是否已经载入主菜单动画，如果已经载入则从跳转的地址获取执行的命令

 ' 注：由于兼容  E 语言本身支持库，本处使用的是超文本浏览框来显示动画，并跟动画实现单向交互(通过超级链接地址特性来获取命令)
 ' 除了本方法外，还有两种方式：
 ' 　　  1) 用矢量动画框实现动画播放跟交互，由于当前矢量动画框对旋转跟透明动画支持的不好，所以放弃
 ' 　　  2) 用ShockWave Flash 动画控件来实现播放跟交互

.如果真 (_主菜单载入完毕)
     ' 主菜单_地址取执行命令〔〕：通过网页地址获取执行的命令
    主菜单_执行命令 (主菜单_地址取执行命令 (.))
    返回 (假)
.如果真结束


.子程序 _图形按钮_关于_被单击, 空白型, , 
 ' 置记录页面〔〕：记录当前选择夹页面的名称，通过取记录页面可以获取记录的页面名称
置记录页面 ()
 ' 暂停游戏
游戏控制_暂停 (真)
 ' 跳转到关于页面
选择夹子夹名称跳转 (“关于界面”)


.子程序 _超级按钮_关于界面_返回_被单击, 空白型, , 
.局部变量 临时记录页面, 文本型, , , 

 ' 返回跳转到选择夹本页前的页面
赋值 (临时记录页面, 取记录页面 ())
.如果真 (等于 (“游戏界面”, 临时记录页面))
    游戏控制_取消暂停 ()
.如果真结束
选择夹子夹名称跳转 (临时记录页面)


.子程序 _超级按钮_暂停界面_继续游戏_被单击, 空白型, , 
游戏控制_取消暂停 ()
选择夹子夹名称跳转 (“游戏界面”)


.子程序 _透明标签_游戏地图_人间天上_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

 ' 设置地图的说明信息
地图_置地图说明 (1)


.子程序 _透明标签_游戏地图_圣灵古堡_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

 ' 设置地图的说明信息
地图_置地图说明 (2)


.子程序 _透明标签_游戏地图_乐满地_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

 ' 设置地图的说明信息
地图_置地图说明 (3)


.子程序 _透明标签_游戏地图_天马岛_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

 ' 设置地图的说明信息
地图_置地图说明 (4)


.子程序 _透明标签_游戏地图_亚特兰帝斯_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

 ' 设置地图的说明信息
地图_置地图说明 (5)


.子程序 _透明标签_游戏地图_黄金之城_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

 ' 设置地图的说明信息
地图_置地图说明 (6)


.子程序 _透明标签_游戏地图_宝臧岛_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

 ' 设置地图的说明信息
地图_置地图说明 (7)


.子程序 _图片框_游戏地图_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 当前标题, 文本型, , , 
.局部变量 匿名局部变量_3598, 空白型, , , 

 ' 显示当前主关卡跟目标主关卡的信息跟完成进度
赋值 (当前标题, 取文本 (“[当前位置]%s  [目标位置]%s  [完成进度]%d% ”, .内容, .内容, 取整 (相乘 (求余数 (相减 (_关卡处理.取当前关卡 (), 1), 5), 20))))
.如果真 (不等于 (.内容, 当前标题))
    地图_置地图说明 (0)
    赋值 (.内容, 当前标题)
.如果真结束


.子程序 _超级按钮_更改名称_确定_被单击, 空白型, , 
.局部变量 用户名称, 文本型, , , 
.局部变量 匿名局部变量_5307, 空白型, , , 

 ' << 更改用户的名称 >>
 ' 判断用户输入的名称是否为空或“NoName”，如果是则返回
赋值 (用户名称, .内容)

.如果真 (或者 (等于 (删首尾空 (用户名称), “”), 等于 (删首尾空 (用户名称), “NoName”)))
    信息框 (“请输入一个有效的玩家名称！”, 0, “玩家名称无效”)
    返回 ()
.如果真结束

.判断开始 (等于 (_用户名称处理模式, #名称处理模式_添加用户))
     ' 添加新的用户
    .如果真 (_用户时间分数类.用户列表_用户是否存在 (用户名称))
        信息框 (“当前用户已经存在！”, 0, “用户已经存在”)
        返回 ()
    .如果真结束
    _用户时间分数类.用户列表_加入用户 (用户名称)
    
.判断 (等于 (_用户名称处理模式, #名称处理模式_更改名称))
     ' 更改用户的名称
    .如果真 (不等于 (用户名称, _原用户名称))
        .如果真 (_用户时间分数类.用户列表_用户是否存在 (用户名称))
            信息框 (“当前用户已经存在！”, 0, “用户已经存在”)
            返回 ()
        .如果真结束
        
    .如果真结束
    _用户时间分数类.用户列表_更改用户名称 (_启动窗口., 用户名称)
    
.默认
    
.判断结束

用户选择_刷新显示用户列表 ()
赋值 (.现行选中项, 相减 (_用户时间分数类.用户列表_取用户索引 (用户名称), 1))
_启动窗口.用户列表_写出列表 (.)
选择夹子夹名称跳转 (“用户选择”)


.子程序 _超级按钮_更改名称_返回_被单击, 空白型, , 
选择夹子夹名称跳转 (“用户选择”)


.子程序 _图形按钮_排行榜_被单击, 空白型, , 
置记录页面 () ' 记录当前选择夹页面的名称，通过取记录页面可以获取记录的页面名称
游戏控制_暂停 (真)

选择夹子夹名称跳转 (“用户排行”)


.子程序 _超级按钮_用户排行_返回_被单击, 空白型, , 
.如果真 (等于 (取记录页面 (), “游戏界面”))
    游戏控制_取消暂停 ()
.如果真结束
选择夹子夹名称跳转 (取记录页面 ())


.子程序 _超级按钮_过关动画_返回_被单击, 空白型, , 
赋值 (., 假)
.如果 (_关卡处理.是否到最后关卡 ())
    .如果真 (等于 (信息框 (“祝贺您已经完成了所有的旅程，再见吧！祝你成功。”, #确认取消钮, “完成旅程”), #确认钮))
        选择夹子夹名称跳转 (“主菜单”)
    .如果真结束
    
.否则
    _图形按钮_游戏界面_重新开始_被单击 ()
    
.如果结束


.子程序 _图形按钮_系统设置_被单击, 空白型, , 
置记录页面 ()
游戏控制_暂停 (真)

选择夹子夹名称跳转 (“系统设置”)


.子程序 _超级按钮_系统设置_确定_被单击, 空白型, , 
 ' 更改系统设置
赋值 (_设置_背景音乐, .选中)
赋值 (_设置_游戏音效, .选中)
赋值 (_设置_自动选中, .选中)
赋值 (_设置_连线反向, .选中)

系统设置_写出设置 ()
.如果真 (等于 (取记录页面 (), “游戏界面”))
    游戏控制_取消暂停 ()
.如果真结束
选择夹子夹名称跳转 (取记录页面 ())


.子程序 _超级按钮_系统设置_取消_被单击, 空白型, , 
.如果真 (等于 (取记录页面 (), “游戏界面”))
    游戏控制_取消暂停 ()
.如果真结束
选择夹子夹名称跳转 (取记录页面 ())


.子程序 _超级按钮_过关动画_领取宝物_被单击, 空白型, , 
 ' 输出我们最终的什么礼物呕
.如果真 (打开 ())
    写到文件 (.文件名, 未知支持库函数_1 (#最终宝藏))
    信息框 (“恭喜，得到珍贵的宝物！”, 0, “得到宝物”)
    运行 (.文件名, 假, )
.如果真结束


.子程序 __启动窗口_可否被关闭, 逻辑型, , 
返回 (等于 (信息框 (“您真的决定要退出游戏吗？”, 相加 (#确认取消钮, #询问图标), “是否退出”), #确认钮))


.子程序 _超级按钮_用户选择_添加用户_被单击, 空白型, , 
用户选择_添加用户 ()


.子程序 _超级按钮_用户选择__更改名称_被单击, 空白型, , 
用户选择_更改名称 ()


.子程序 _超级按钮_用户选择_删除用户_被单击, 空白型, , 
.局部变量 临时用户, 用户信息, , , 
.局部变量 当前用户, 文本型, , , 
.局部变量 当前选中项, 整数型, , , 
.局部变量 匿名局部变量_5396, 空白型, , , 

.如果真 (大于 (.现行选中项, -1))
    赋值 (当前选中项, _启动窗口..现行选中项)
    赋值 (当前用户, _启动窗口.取项目文本 (., 当前选中项))
    赋值 (临时用户, _启动窗口.用户列表_取用户信息 (., 当前用户))
    .如果真 (大于 (临时用户.用户当前关卡, 0))
        .如果真 (不等于 (信息框 (“当前用户记录不为空，您真的决定删除吗？”, 相加 (#确认取消钮, #询问图标), “确认删除”), #确认钮))
            返回 ()
        .如果真结束
        
    .如果真结束
    _启动窗口.用户_冻结排行榜记录 (., 当前用户)
    _启动窗口.用户列表_删除用户 (., 当前用户)
    用户选择_刷新显示用户列表 ()
    赋值 (_启动窗口..现行选中项, 相减 (当前选中项, 1))
    _启动窗口.用户列表_写出列表 (.)
.如果真结束


.子程序 _超级按钮_用户选择_确定_被单击, 空白型, , 
.局部变量 当前用户, 文本型, , , 
.局部变量 匿名局部变量_5332, 空白型, , , 

.如果真 (小于 (.现行选中项, 0))
    信息框 (“请先选择一个用户！”, 0, “选择用户”)
    返回 ()
.如果真结束
赋值 (当前用户, .取项目文本 (.现行选中项))
_用户时间分数类.用户列表_置当前用户 (当前用户)
赋值 (.标题, 当前用户)
读取用户关卡信息 ()
选择夹子夹名称跳转 (“主菜单”)


.子程序 _列表框_用户选择_用户名称列表_双击选择, 空白型, , 
_超级按钮_用户选择_确定_被单击 ()


.子程序 _超级按钮_用户选择__返回_被单击, 空白型, , 
.如果 (取反 (或者 (等于 (_用户时间分数类.取当前用户名 (), “”), 等于 (_用户时间分数类.用户列表_用户是否存在 (_用户时间分数类.取当前用户名 ()), 假))))
    _用户时间分数类.用户列表_置当前用户 (_用户时间分数类.取当前用户名 ())
    读取用户关卡信息 ()
    选择夹子夹名称跳转 (“主菜单”)
.否则
    信息框 (“您还未曾选择过玩家，请选择一个玩家！”, 0, “选择玩家”)
.如果结束


.子程序 _图形按钮_游戏地图_返回菜单_被单击, 空白型, , 
选择夹子夹名称跳转 (“主菜单”)


.子程序 _图形按钮_使用帮助_被单击, 空白型, , 
未知支持库函数_6 (#, “帮助文档.chm”, , )

.类模块 类_游戏_连连看, , , 

.程序集变量 _横向块数, 整数型, , , 游戏横向图块的数量
.程序集变量 _纵向块数, 整数型, , , 游戏纵向图块的数量
.程序集变量 _种类数量, 整数型, , , 游戏中图块种类数量
.程序集变量 _打乱次数, 整数型, , , 游戏随机打乱的次数
.程序集变量 _数据数组, 连连看数据块, , "1,1", 游戏数据存储数组〔存储游戏图块的位置跟类型数据〕
.程序集变量 匿名程序集变量_4364, 空白型, , , 
.程序集变量 _图块宽度, 整数型, , , 游戏图块的宽度
.程序集变量 _图块高度, 整数型, , , 游戏图块的高度
.程序集变量 匿名程序集变量_4370, 空白型, , , 
.程序集变量 _连线图片, 字节集, , "35", 图块的连线图片数据
.程序集变量 匿名程序集变量_4369, 空白型, , , 
.程序集变量 _图块区位置, 坐标, , , 图块绘制区域在画板中的横纵向绝对位置
.程序集变量 匿名程序集变量_1475, 空白型, , , 
.程序集变量 _单图块背景图, 位图, , , 图块的背景图形
.程序集变量 _背景图片位图, 位图, , , 游戏的背景图形
.程序集变量 匿名程序集变量_4372, 空白型, , , 
.程序集变量 _原始图块数据, 字节集, , "35", 原始图块的数据〔所有宝石图案〕
.程序集变量 _合成图块数据, 字节集, , "35", 合成的当前游戏设定尺寸的图块数据
.程序集变量 匿名程序集变量_1703, 空白型, , , 
.程序集变量 _背景画板, 画板, , , 后台快速处理当前游戏图案调用的画板
.程序集变量 _前景画板, 画板, , , 当前游戏图案正式输出调用的画板
.程序集变量 匿名程序集变量_2614, 空白型, , , 
.程序集变量 _重绘时间, 整数型, , , 
.程序集变量 匿名程序集变量_5449, 空白型, , , 
.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用
.局部变量 循环次数, 整数型, , , 
.局部变量 临时位图, 位图, , , 
.局部变量 位图操作, 位图, , , 
.局部变量 图块宽度_, 整数型, , , 
.局部变量 图块高度_, 整数型, , , 
.局部变量 匿名局部变量_1536, 空白型, , , 
.局部变量 横向位置, 整数型, , , 
.局部变量 纵向位置, 整数型, , , 
.局部变量 匿名局部变量_1490, 空白型, , , 

临时位图.载入数据 (未知支持库函数_1 (#图片_图块数据))
赋值 (图块宽度_, 相除 (临时位图.取宽度 (), 7))
赋值 (图块高度_, 相除 (临时位图.取高度 (), 5))
位图操作.创建 (图块宽度_, 图块高度_, 临时位图.取位深度 (), #黑色)
.计次循环首 (35, 循环次数)
    赋值 (横向位置, 求余数 (相减 (循环次数, 1), 7))
    赋值 (纵向位置, 整除 (相减 (循环次数, 1), 7))
    临时位图.复制到 (相乘 (横向位置, 图块宽度_), 相乘 (纵向位置, 图块高度_), 图块宽度_, 图块高度_, 位图操作, 0, 0, )
    赋值 (_原始图块数据 [循环次数], 位图操作.取位图数据 ())
.计次循环尾 ()


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 全局初始化, 空白型, 公开, 游戏初始化
.参数 横向块数_, 整数型, , 游戏横向图块的数量
.参数 纵向块数_, 整数型, , 游戏纵向图块的数量
.参数 种类数量_, 整数型, , 游戏中图块种类数量
.参数 打乱次数_, 整数型, , 游戏随机打乱的次数
.参数 前景画板_, 画板, , 当前游戏图案正式输出调用的画板
.参数 背景画板_, 画板, , 后台快速处理当前游戏图案调用的画板
.参数 图块宽度_, 整数型, , 游戏图块的宽度
.参数 图块高度_, 整数型, , 游戏图块的高度
.参数 匿名参数_1395, 空白型, , 

 ' << 游戏初始化 >>

 ' 游戏图块信息的初始化
设置块数 (横向块数_, 纵向块数_)

 ' 初始化图块种类跟游戏图块打乱的次数设置
置种类数量 (种类数量_)
置打乱次数 (打乱次数_)

赋值 (_图块宽度, 图块宽度_)
赋值 (_图块高度, 图块高度_)

赋值 (_图块区位置.横向坐标, 相除 (相减 (前景画板_.宽度, 相乘 (图块宽度_, 相加 (横向块数_, 2))), 2))
赋值 (_图块区位置.纵向坐标, 相除 (相减 (前景画板_.高度, 相乘 (图块高度_, 相加 (纵向块数_, 2))), 2))

赋值 (_背景画板, 背景画板_)
赋值 (_前景画板, 前景画板_)

 ' 获取游戏背景图形〔取当前游戏绘制画板的背景图案为游戏背景图案〕
_前景画板.清除 ()
_背景图片位图.载入数据 (前景画板_.取图片 (0, 0))

 ' 初始化处理游戏调用的所有相关的图形
合成图块背景数据 ()
合成图块图案数据 ()
合成连线图片数据 ()


.子程序 合成连线图片数据, 空白型, , 根据当前生成的缩放后的图块数据来生成连线图片数据
.局部变量 循环次数, 整数型, , , 
.局部变量 匿名局部变量_3991, 空白型, , , 
.局部变量 临时位图, 位图, , , 
.局部变量 合成位图, 位图, , , 
.局部变量 匿名局部变量_3976, 空白型, , , 
.局部变量 纵向位置, 整数型, , , 
.局部变量 横向位置, 整数型, , , 
.局部变量 匿名局部变量_3979, 空白型, , , 
.局部变量 高度比例, 小数型, , , 
.局部变量 宽度比例, 小数型, , , 
.局部变量 匿名局部变量_4006, 空白型, , , 
.局部变量 图块宽度_, 整数型, , , 
.局部变量 图块高度_, 整数型, , , 
.局部变量 匿名局部变量_3982, 空白型, , , 
.局部变量 原始图块高度_, 整数型, , , 
.局部变量 原始图块宽度_, 整数型, , , 
.局部变量 匿名局部变量_3985, 空白型, , , 

 ' << 进行图形缩放 >>
 ' 缩放原始的图块图案〔宝石图案〕为连线显示图案的大小
 ' 本处图案算法为逆向取点法
 ' 注：了解正式的图形算法请参考“神2教你学图编”系列相关例程,本处不做更多说明


 ' 设置连线显示图案的大小为15*15
赋值 (图块宽度_, 15)
赋值 (图块高度_, 15)

.计次循环首 (35, 循环次数)
    
    临时位图.载入数据 (_合成图块数据 [循环次数])
    
    赋值 (原始图块宽度_, 临时位图.取宽度 ())
    赋值 (原始图块高度_, 临时位图.取高度 ())
    
    合成位图.创建 (图块宽度_, 图块高度_, 临时位图.取位深度 (), #黑色)
    
    赋值 (宽度比例, 相除 (图块宽度_, 原始图块宽度_))
    赋值 (高度比例, 相除 (图块高度_, 原始图块高度_))
    
    .计次循环首 (图块高度_, 纵向位置)
        .计次循环首 (图块宽度_, 横向位置)
            合成位图.置某点颜色 (相减 (横向位置, 1), 相减 (纵向位置, 1), 临时位图.取某点颜色 (相减 (相除 (横向位置, 宽度比例), 1), 相减 (相除 (纵向位置, 高度比例), 1)))
        .计次循环尾 ()
    .计次循环尾 ()
    
    赋值 (_连线图片 [循环次数], 合成位图.取位图数据 ())
    
.计次循环尾 ()


.子程序 合成图块背景数据, 空白型, , 合成当前游戏图块的背景图案
.局部变量 临时位图, 位图, , , 
.局部变量 位图操作, 位图, , , 
.局部变量 匿名局部变量_1875, 空白型, , , 
.局部变量 纵向位置, 整数型, , , 
.局部变量 横向位置, 整数型, , , 
.局部变量 匿名局部变量_1874, 空白型, , , 
.局部变量 高度比例, 小数型, , , 
.局部变量 宽度比例, 小数型, , , 
.局部变量 匿名局部变量_1873, 空白型, , , 
.局部变量 原始图块高度_, 整数型, , , 
.局部变量 原始图块宽度_, 整数型, , , 
.局部变量 匿名局部变量_1876, 空白型, , , 

 ' << 进行图形缩放 >>
 ' 缩放原始的图块背景图案为游戏调用的尺寸大小
 ' 本处图案算法为逆向取点法
 ' 注：了解正式的图形算法请参考“神2教你学图编”系列相关例程,本处不做更多说明

临时位图.载入数据 (#图片_图块背景)
赋值 (原始图块宽度_, 临时位图.取宽度 ())
赋值 (原始图块高度_, 临时位图.取高度 ())

_单图块背景图.创建 (_图块宽度, _图块高度, 临时位图.取位深度 (), #黑色)
赋值 (宽度比例, 相除 (_图块宽度, 原始图块宽度_))
赋值 (高度比例, 相除 (_图块高度, 原始图块高度_))

.计次循环首 (_图块高度, 纵向位置)
    .计次循环首 (_图块宽度, 横向位置)
        _单图块背景图.置某点颜色 (相减 (横向位置, 1), 相减 (纵向位置, 1), 临时位图.取某点颜色 (相减 (相除 (横向位置, 宽度比例), 1), 相减 (相除 (纵向位置, 高度比例), 1)))
    .计次循环尾 ()
.计次循环尾 ()


.子程序 合成图块图案数据, 空白型, , 将原始图块的图案数据转化为当前使用尺寸的图块图案数据
.局部变量 循环次数, 整数型, , , 
.局部变量 临时位图, 位图, , , 
.局部变量 位图操作, 位图, , , 
.局部变量 匿名局部变量_1517, 空白型, , , 
.局部变量 横向位置, 整数型, , , 
.局部变量 纵向位置, 整数型, , , 
.局部变量 原横向位置, 整数型, , , 
.局部变量 原纵向位置, 整数型, , , 
.局部变量 目地横向位置, 整数型, , , 
.局部变量 目地纵向位置, 整数型, , , 
.局部变量 匿名局部变量_1631, 空白型, , , 
.局部变量 横向位置_, 整数型, , , 
.局部变量 纵向位置_, 整数型, , , 
.局部变量 当前顺序索引, 整数型, , , 
.局部变量 匿名局部变量_1530, 空白型, , , 
.局部变量 宽度比例, 小数型, , , 
.局部变量 高度比例, 小数型, , , 
.局部变量 匿名局部变量_1520, 空白型, , , 
.局部变量 原始图块宽度_, 整数型, , , 
.局部变量 原始图块高度_, 整数型, , , 
.局部变量 匿名局部变量_1545, 空白型, , , 
.局部变量 临时颜色值, 整数型, , "9", 
.局部变量 匿名局部变量_1589, 空白型, , , 
.局部变量 红色, 整数型, , "2", 
.局部变量 绿色, 整数型, , "2", 
.局部变量 蓝色, 整数型, , "2", 
.局部变量 匿名局部变量_1556, 空白型, , , 
.局部变量 当前颜色, 整数型, , , 
.局部变量 匿名局部变量_1509, 空白型, , , 

 ' << 进行图形缩放 >>
 ' 缩放原始的图块图案〔宝石图案〕为游戏图块尺寸设置的大小
 ' 为了使图形平滑的缩放,本处使用的是插值法
 ' 注：了解正式的图形算法请参考“神2教你学图编”系列相关例程,本处不做更多说明

.计次循环首 (35, 循环次数)
    
    临时位图.载入数据 (_原始图块数据 [循环次数])
    赋值 (原始图块宽度_, 临时位图.取宽度 ())
    赋值 (原始图块高度_, 临时位图.取高度 ())
    
     ' 获取横纵向缩放比例
    位图操作.创建 (_图块宽度, _图块高度, 临时位图.取位深度 (), #黑色)
    赋值 (宽度比例, 相除 (_图块宽度, 原始图块宽度_))
    赋值 (高度比例, 相除 (_图块高度, 原始图块高度_))
    
    .计次循环首 (_图块高度, 纵向位置)
        .计次循环首 (_图块宽度, 横向位置)
            
             ' 计算当前点在原始图案中的位置
            赋值 (原横向位置, 相除 (横向位置, 宽度比例))
            赋值 (原纵向位置, 相除 (纵向位置, 高度比例))
            
             ' 清空颜色数组记录的数据
            数组清零 (红色)
            数组清零 (绿色)
            数组清零 (蓝色)
            
            .计次循环首 (3, 纵向位置_)
                .计次循环首 (3, 横向位置_)
                    
                     ' 获取当前点上下左右各点的颜色值
                    赋值 (目地横向位置, 相加 (相减 (原横向位置, 2), 横向位置_))
                    赋值 (目地纵向位置, 相加 (相减 (原纵向位置, 2), 纵向位置_))
                    
                     ' 判断获取的点位置是否越界
                    .如果真 (小于 (目地横向位置, 0))
                        赋值 (目地横向位置, 原横向位置)
                    .如果真结束
                    .如果真 (小于 (目地纵向位置, 0))
                        赋值 (目地纵向位置, 原纵向位置)
                    .如果真结束
                    .如果真 (大于 (目地横向位置, 相减 (原始图块宽度_, 1)))
                        赋值 (目地横向位置, 原横向位置)
                    .如果真结束
                    .如果真 (大于 (目地纵向位置, 相减 (原始图块高度_, 1)))
                        赋值 (目地纵向位置, 原纵向位置)
                    .如果真结束
                    
                    取颜色部分 (临时位图.取某点颜色 (目地横向位置, 目地纵向位置), , 红色 [2], 绿色 [2], 蓝色 [2])
                    
                     ' 累加获取的颜色值
                    赋值 (红色 [1], 相加 (红色 [1], 红色 [2]))
                    赋值 (绿色 [1], 相加 (绿色 [1], 绿色 [2]))
                    赋值 (蓝色 [1], 相加 (蓝色 [1], 蓝色 [2]))
                    
                .计次循环尾 ()
            .计次循环尾 ()
            
             ' 绘制之前累加的颜色值的平均值
            位图操作.置某点颜色 (相减 (横向位置, 1), 相减 (纵向位置, 1), 取颜色值 (相除 (红色 [1], 9), 相除 (绿色 [1], 9), 相除 (蓝色 [1], 9)))
            
        .计次循环尾 ()
    .计次循环尾 ()
    
     ' 交换“位图操作”缩放后的图案数据给“临时位图”
    赋值 (临时位图, 位图操作)
    
     ' 对绘制的图案边线进行加粗处理
    .计次循环首 (_图块高度, 纵向位置)
        .计次循环首 (_图块宽度, 横向位置)
            .如果真 (等于 (#黑色, 临时位图.取某点颜色 (相减 (横向位置, 1), 相减 (纵向位置, 1))))
                .如果真 (或者 (不等于 (#黑色, 临时位图.取某点颜色 (相减 (横向位置, 1), 相减 (纵向位置, 2))), 不等于 (#黑色, 临时位图.取某点颜色 (相减 (横向位置, 2), 相减 (纵向位置, 1))), 不等于 (#黑色, 临时位图.取某点颜色 (横向位置, 相减 (纵向位置, 1))), 不等于 (#黑色, 临时位图.取某点颜色 (相减 (横向位置, 1), 纵向位置))))
                    位图操作.置某点颜色 (相减 (横向位置, 1), 相减 (纵向位置, 1), 相加 (#黑色, 1))
                .如果真结束
                
            .如果真结束
            
        .计次循环尾 ()
    .计次循环尾 ()
    
    赋值 (_合成图块数据 [循环次数], 位图操作.取位图数据 ())
    
.计次循环尾 ()


.子程序 取颜色部分, 整数型, , 成功返回颜色值，失败返回空　注：如果参数红色/绿色/蓝色不为空，则对应参数的变量会自动成为对应的颜色值
.参数 颜色值, 整数型, , 
.参数 获取部分, 整数型, 可空, 0.红色　1.绿色　2.蓝色
.参数 红色, 整数型, 参考 可空, 
.参数 绿色, 整数型, 参考 可空, 
.参数 蓝色, 整数型, 参考 可空, 
.参数 匿名参数_1577, 空白型, , 


赋值 (红色, 求余数 (颜色值, 256))
赋值 (蓝色, 整除 (颜色值, 65536))
赋值 (绿色, 整除 (相减 (颜色值, 红色, 相乘 (蓝色, 65536)), 256))

.判断开始 (等于 (获取部分, 0))
    返回 (红色)
.判断 (等于 (获取部分, 1))
    返回 (绿色)
.判断 (等于 (获取部分, 2))
    返回 (蓝色)
.默认
    返回 (-1)
.判断结束


.子程序 取图块信息, 整数型, 公开, 获取游戏图块相关的各种信息
.参数 信息类型, 整数型, , 0.图块区左边位置  1.图块区顶边位置　2.取单个图块宽度　3.取单个图块高度　4.图块数量　5.横向图块数量　6.纵向图块数量
.参数 匿名参数_3902, 空白型, , 

.判断开始 (等于 (信息类型, 0))
     ' 返回图块区左边位置信息
    返回 (_图块区位置.横向坐标)
    
.判断 (等于 (信息类型, 1))
    
     ' 返回图块区顶边位置信息
    返回 (_图块区位置.纵向坐标)
    
.判断 (等于 (信息类型, 2))
    
     ' 返回单个图块宽度信息
    返回 (_图块宽度)
    
.判断 (等于 (信息类型, 3))
     ' 返回单个图块高度信息
    返回 (_图块高度)
    
.判断 (等于 (信息类型, 4))
    
     ' 返回图块数量信息
    返回 (相减 (相乘 (_横向块数, _纵向块数), 求余数 (相乘 (_横向块数, _纵向块数), 2)))
    
.判断 (等于 (信息类型, 5))
    
     ' 返回横向图块数量信息
    返回 (_横向块数)
    
.判断 (等于 (信息类型, 6))
    
     ' 返回纵向图块数量信息
    返回 (_纵向块数)
    
.默认
    返回 (-1)
    
.判断结束


.子程序 设置块数, 空白型, 公开, 设置游戏横纵向图块的数量
.参数 横向块数_, 整数型, , 
.参数 纵向块数_, 整数型, , 
.参数 匿名参数_970, 空白型, , 

赋值 (_横向块数, 横向块数_)
赋值 (_纵向块数, 纵向块数_)


.子程序 置种类数量, 空白型, 公开, 设置游戏图块种类的数量
.参数 种类数量_, 整数型, , 
.参数 匿名参数_968, 空白型, , 

赋值 (_种类数量, 种类数量_)


.子程序 置打乱次数, 空白型, 公开, 设置游戏打乱时随机打乱的次数
.参数 打乱次数_, 整数型, , 
.参数 匿名参数_969, 空白型, , 

赋值 (_打乱次数, 打乱次数_)


.子程序 取横向块数, 整数型, 公开, 获取游戏横向图块数量
返回 (_横向块数)


.子程序 取纵向块数, 整数型, 公开, 获取游戏纵向图块数量
返回 (_纵向块数)


.子程序 取种类数量, 整数型, 公开, 获取游戏种类数量
返回 (_种类数量)


.子程序 取打乱次数, 整数型, 公开, 获取游戏打乱时随机打乱的次数
返回 (_打乱次数)


.子程序 取数据值, 连连看数据块, 公开, 获取指定位置游戏图块的信息
.参数 指向坐标, 坐标, , 
.参数 匿名参数_967, 空白型, , 

.局部变量 临时数据块, 连连看数据块, , , 
.局部变量 匿名局部变量_2327, 空白型, , , 

.如果真 (并且 (大于 (指向坐标.横向坐标, 0), 大于 (指向坐标.纵向坐标, 0), 小于或等于 (指向坐标.横向坐标, 相加 (_横向块数, 2)), 小于或等于 (指向坐标.纵向坐标, 相加 (_纵向块数, 2))))
    返回 (_数据数组 [指向坐标].纵向坐标 [指向坐标].横向坐标)
.如果真结束
返回 (临时数据块)


.子程序 置游戏数据值, 空白型, 公开, 设置游戏数据块数据
.参数 指向坐标, 坐标, , 数据块在数组中的位置
.参数 数据的值, 连连看数据块, , 数据块
.参数 匿名参数_966, 空白型, , 

 ' 判断数据值范围合法性
.如果真 (并且 (大于 (指向坐标.横向坐标, 0), 大于 (指向坐标.纵向坐标, 0), 小于或等于 (指向坐标.横向坐标, 相加 (_横向块数, 2)), 小于或等于 (指向坐标.纵向坐标, 相加 (_纵向块数, 2))))
    赋值 (_数据数组 [指向坐标].纵向坐标 [指向坐标].横向坐标, 数据的值)
.如果真结束


.子程序 绘制当前页面, 空白型, 公开, 绘制当前整个游戏页面
.局部变量 纵向循环, 整数型, , , 
.局部变量 横向循环, 整数型, , , 
.局部变量 指向坐标, 坐标, , , 
.局部变量 匿名局部变量_965, 空白型, , , 

 ' << 获取当前页面并输出 >>
_背景画板.画图片 (载入图片 (合成当前页面 ()), 0, 0, , , #拷贝)
_背景画板.复制 (_前景画板, , , #拷贝)


.子程序 是否为空图块, 逻辑型, 公开, 判断指定的图块是否为空数据
.参数 指向坐标, 坐标, , 数据块在数组中的位置
.参数 匿名参数_4265, 空白型, , 

.如果 (并且 (大于 (指向坐标.横向坐标, 0), 大于 (指向坐标.纵向坐标, 0), 小于或等于 (指向坐标.横向坐标, 相加 (_横向块数, 2)), 小于或等于 (指向坐标.纵向坐标, 相加 (_纵向块数, 2))))
    返回 (等于 (_数据数组 [指向坐标].纵向坐标 [指向坐标].横向坐标, 数据内容, 0))
.否则
    返回 (真)
.如果结束


.子程序 重画指定数据, 空白型, , 重新绘制指定位置的游戏数据
.参数 指向坐标, 坐标, , 数据块在数组中的位置
.参数 匿名参数_875, 空白型, , 

 ' 判断指向的坐标的范围是否合法
.如果真 (并且 (大于 (指向坐标.横向坐标, 0), 大于 (指向坐标.纵向坐标, 0), 小于或等于 (指向坐标.横向坐标, 相加 (_横向块数, 2)), 小于或等于 (指向坐标.纵向坐标, 相加 (_纵向块数, 2))))
    
     ' 判断指向的坐标是否为空，为空则清除指定位置前景图案，否则绘制指定位置图案
    .如果 (等于 (_数据数组 [指向坐标].纵向坐标 [指向坐标].横向坐标, 数据内容, 0))
        
        _背景画板.清除 (相加 (_图块区位置.横向坐标, 相乘 (相减 (指向坐标.横向坐标, 1), _图块宽度), 1), 相加 (_图块区位置.纵向坐标, 相乘 (相减 (指向坐标.纵向坐标, 1), _图块高度), 1), _图块宽度, _图块高度)
    .否则
        
        _背景画板.画图片 (载入图片 (合成块图片数据 (指向坐标, _合成图块数据 [_数据数组] [指向坐标].纵向坐标 [指向坐标].横向坐标, 数据内容)), 相加 (_图块区位置.横向坐标, 相乘 (相减 (指向坐标.横向坐标, 1), _图块宽度), 1), 相加 (_图块区位置.纵向坐标, 相乘 (相减 (指向坐标.纵向坐标, 1), _图块高度), 1), _图块宽度, _图块高度, #拷贝)
    .如果结束
    
    _背景画板.复制 (_前景画板, , , #拷贝)
.如果真结束


.子程序 合成当前页面, 字节集, 公开, 获取当前游戏整体合成图形
.局部变量 合成位图, 位图, , , 
.局部变量 临时位图, 位图, , , 
.局部变量 匿名局部变量_3856, 空白型, , , 
.局部变量 横向循环, 整数型, , , 
.局部变量 纵向循环, 整数型, , , 
.局部变量 匿名局部变量_3866, 空白型, , , 
.局部变量 指向坐标, 坐标, , , 
.局部变量 匿名局部变量_3878, 空白型, , , 

 ' 初始化合成位图当前数据为游戏背景图案
赋值 (合成位图, _背景图片位图)
.计次循环首 (相加 (_纵向块数, 2), 纵向循环)
    .计次循环首 (相加 (_横向块数, 2), 横向循环)
        .如果真 (并且 (大于 (横向循环, 0), 大于 (纵向循环, 0), 小于或等于 (横向循环, 相加 (_横向块数, 2)), 小于或等于 (纵向循环, 相加 (_纵向块数, 2))))
            .如果真 (不等于 (_数据数组 [纵向循环] [横向循环], 数据内容, 0))
                赋值 (指向坐标.横向坐标, 横向循环)
                赋值 (指向坐标.纵向坐标, 纵向循环)
                临时位图.载入数据 (合成块图片数据 (指向坐标, _合成图块数据 [_数据数组] [纵向循环] [横向循环], 数据内容))
                临时位图.复制到 (0, 0, , , 合成位图, 相加 (_图块区位置.横向坐标, 相乘 (相减 (指向坐标.横向坐标, 1), _图块宽度), 1), 相加 (_图块区位置.纵向坐标, 相乘 (相减 (指向坐标.纵向坐标, 1), _图块高度), 1), )
            .如果真结束
            
        .如果真结束
        
        处理事件 ()
        
    .计次循环尾 ()
.计次循环尾 ()
赋值 (_重绘时间, 取启动时间 ())
返回 (合成位图.取位图数据 ())


.子程序 合成块图片数据, 字节集, , 获取指定图块的合成图案数据
.参数 指向坐标, 坐标, , 指向的图块坐标
.参数 前景图片, 字节集, , 图块的背景数据
.参数 匿名参数_1712, 空白型, , 

.局部变量 前景数据, 位图, 静态, , 
.局部变量 背景数据, 位图, 静态, , 
.局部变量 合成数据, 位图, 静态, , 
.局部变量 横向位置, 整数型, , , 
.局部变量 纵向位置, 整数型, , , 
.局部变量 匿名局部变量_1722, 空白型, , , 
.局部变量 红色, 整数型, , "3", 
.局部变量 绿色, 整数型, , "3", 
.局部变量 蓝色, 整数型, , "3", 
.局部变量 匿名局部变量_1898, 空白型, , , 
.局部变量 透明系数, 小数型, , , 
.局部变量 匿名局部变量_2096, 空白型, , , 

 ' << 合并图块背景图案与游戏背景图案 >>
 ' 透明系数为合并的透明度，范围[0-1]
赋值 (透明系数, 0.5)
前景数据.载入数据 (前景图片)
背景数据.创建 (_图块宽度, _图块高度, 前景数据.取位深度 (), #白色)
赋值 (合成数据, 前景数据)
_背景图片位图.复制到 (相加 (_图块区位置.横向坐标, 相乘 (相减 (指向坐标.横向坐标, 1), _图块宽度), 1), 相加 (_图块区位置.纵向坐标, 相乘 (相减 (指向坐标.纵向坐标, 1), _图块高度), 1), _图块宽度, _图块高度, 背景数据, 0, 0, )
.计次循环首 (_图块高度, 纵向位置)
    .计次循环首 (_图块宽度, 横向位置)
         ' 判断横纵向颜色是否为关键色
        .如果真 (等于 (#黑色, 前景数据.取某点颜色 (相减 (横向位置, 1), 相减 (纵向位置, 1))))
             ' 获取合并图块背景图案与游戏背景图案对应点的颜色
            取颜色部分 (_单图块背景图.取某点颜色 (相减 (横向位置, 1), 相减 (纵向位置, 1)), , 红色 [2], 绿色 [2], 蓝色 [2])
            取颜色部分 (背景数据.取某点颜色 (相减 (横向位置, 1), 相减 (纵向位置, 1)), , 红色 [3], 绿色 [3], 蓝色 [3])
            
             ' 对两种颜色进行透明处理〔计算出颜色透明化后的值〕
            赋值 (红色 [1], 相加 (红色 [3], 相乘 (相减 (红色 [2], 红色 [3]), 透明系数)))
            赋值 (绿色 [1], 相加 (绿色 [3], 相乘 (相减 (绿色 [2], 绿色 [3]), 透明系数)))
            赋值 (蓝色 [1], 相加 (蓝色 [3], 相乘 (相减 (蓝色 [2], 蓝色 [3]), 透明系数)))
            
             ' 限制颜色为标准颜色范围，24位深度 单色范围为[0-255]
            赋值 (红色 [1], 选择 (小于 (红色 [1], 0), 0, 选择 (大于 (红色 [1], 255), 255, 红色 [1])))
            赋值 (绿色 [1], 选择 (小于 (绿色 [1], 0), 0, 选择 (大于 (绿色 [1], 255), 255, 绿色 [1])))
            赋值 (蓝色 [1], 选择 (小于 (蓝色 [1], 0), 0, 选择 (大于 (蓝色 [1], 255), 255, 蓝色 [1])))
            
             ' 绘制透明后的颜色
            合成数据.置某点颜色 (相减 (横向位置, 1), 相减 (纵向位置, 1), 取颜色值 (红色 [1], 绿色 [1], 蓝色 [1]))
            
        .如果真结束
        
    .计次循环尾 ()
.计次循环尾 ()
返回 (合成数据.取位图数据 ())


.子程序 点亮指定数据, 空白型, 公开, 获取指定图块的点亮后的合成图案数据
.参数 指向坐标, 坐标, , 指向的图块坐标
.参数 点亮类型, 整数型, 可空, 0.原始图片　1.原始背景　2.图块背景　3.半透明图块背景　默认为0　注：原始背景为透明的标准背景（图块背后为透明的），而图块背景为单个图块的背景
.参数 是否绘制边角线, 逻辑型, 可空, 默认为绘制

.局部变量 临时位图, 位图, 静态, , 
.局部变量 图块图片, 字节集, , , 
.局部变量 背景数据, 位图, 静态, , 
.局部变量 匿名局部变量_1970, 空白型, , , 
.局部变量 当前颜色, 整数型, , , 
.局部变量 匿名局部变量_1949, 空白型, , , 
.局部变量 横向绘制位置, 整数型, , , 
.局部变量 纵向绘制位置, 整数型, , , 
.局部变量 匿名局部变量_1799, 空白型, , , 
.局部变量 横向位置, 整数型, , , 
.局部变量 纵向位置, 整数型, , , 
.局部变量 匿名局部变量_2000, 空白型, , , 
.局部变量 红色, 整数型, , "3", 
.局部变量 绿色, 整数型, , "3", 
.局部变量 蓝色, 整数型, , "3", 
.局部变量 匿名局部变量_2001, 空白型, , , 

 ' 设置为空的参数初始值
.如果真 (是否为空 (点亮类型))
    赋值 (点亮类型, 0)
.如果真结束
.如果真 (是否为空 (是否绘制边角线))
    赋值 (是否绘制边角线, 真)
.如果真结束

 ' 判断指向坐标的范围的合法性
.如果真 (并且 (大于 (指向坐标.横向坐标, 0), 大于 (指向坐标.纵向坐标, 0), 小于或等于 (指向坐标.横向坐标, 相加 (_横向块数, 2)), 小于或等于 (指向坐标.纵向坐标, 相加 (_纵向块数, 2))))
    
     ' 判断指定位置图块的有效性
    .如果真 (等于 (_数据数组 [指向坐标].纵向坐标 [指向坐标].横向坐标, 数据内容, 0))
        返回 ()
    .如果真结束
    
    赋值 (横向绘制位置, 相加 (_图块区位置.横向坐标, 相乘 (相减 (指向坐标.横向坐标, 1), _图块宽度), 1))
    赋值 (纵向绘制位置, 相加 (_图块区位置.纵向坐标, 相乘 (相减 (指向坐标.纵向坐标, 1), _图块高度), 1))
    
    临时位图.载入数据 (_合成图块数据 [_数据数组] [指向坐标].纵向坐标 [指向坐标].横向坐标, 数据内容)
    
    背景数据.创建 (_图块宽度, _图块高度, 临时位图.取位深度 (), #黑色)
    _背景图片位图.复制到 (相加 (_图块区位置.横向坐标, 相乘 (相减 (指向坐标.横向坐标, 1), _图块宽度), 1), 相加 (_图块区位置.纵向坐标, 相乘 (相减 (指向坐标.纵向坐标, 1), _图块高度), 1), _图块宽度, _图块高度, 背景数据, 0, 0, )
    
    .判断开始 (等于 (点亮类型, 0))
         ' 原始图片
        赋值 (图块图片, _原始图块数据 [_数据数组] [指向坐标].纵向坐标 [指向坐标].横向坐标, 数据内容)
        
    .判断 (等于 (点亮类型, 1))
         ' 原始背景
        .计次循环首 (_图块高度, 纵向位置)
            .计次循环首 (_图块宽度, 横向位置)
                .如果真 (等于 (临时位图.取某点颜色 (相减 (横向位置, 1), 相减 (纵向位置, 1)), #黑色))
                    临时位图.置某点颜色 (相减 (横向位置, 1), 相减 (纵向位置, 1), 背景数据.取某点颜色 (相减 (横向位置, 1), 相减 (纵向位置, 1)))
                .如果真结束
                
            .计次循环尾 ()
        .计次循环尾 ()
        赋值 (图块图片, 临时位图.取位图数据 ())
        
    .判断 (等于 (点亮类型, 2))
         ' 图块背景
        .计次循环首 (_图块高度, 纵向位置)
            .计次循环首 (_图块宽度, 横向位置)
                .如果真 (等于 (临时位图.取某点颜色 (相减 (横向位置, 1), 相减 (纵向位置, 1)), #黑色))
                    临时位图.置某点颜色 (相减 (横向位置, 1), 相减 (纵向位置, 1), _单图块背景图.取某点颜色 (相减 (横向位置, 1), 相减 (纵向位置, 1)))
                .如果真结束
                
            .计次循环尾 ()
        .计次循环尾 ()
        赋值 (图块图片, 临时位图.取位图数据 ())
        
    .判断 (等于 (点亮类型, 3))
         ' 半透明图块背景
        .计次循环首 (_图块高度, 纵向位置)
            .计次循环首 (_图块宽度, 横向位置)
                 ' 透明化图块的背景
                赋值 (当前颜色, 临时位图.取某点颜色 (相减 (横向位置, 1), 相减 (纵向位置, 1)))
                .如果真 (等于 (当前颜色, #黑色))
                    取颜色部分 (_单图块背景图.取某点颜色 (相减 (横向位置, 1), 相减 (纵向位置, 1)), , 红色 [2], 绿色 [2], 蓝色 [2])
                    取颜色部分 (背景数据.取某点颜色 (相减 (横向位置, 1), 相减 (纵向位置, 1)), , 红色 [3], 绿色 [3], 蓝色 [3])
                    
                    赋值 (红色 [1], 相加 (红色 [2], 相乘 (相减 (红色 [3], 红色 [2]), 0.5)))
                    赋值 (绿色 [1], 相加 (绿色 [2], 相乘 (相减 (绿色 [3], 绿色 [2]), 0.5)))
                    赋值 (蓝色 [1], 相加 (蓝色 [2], 相乘 (相减 (蓝色 [3], 蓝色 [2]), 0.5)))
                    
                    赋值 (红色 [1], 选择 (小于 (红色 [1], 0), 0, 选择 (大于 (红色 [1], 255), 255, 红色 [1])))
                    赋值 (绿色 [1], 选择 (小于 (绿色 [1], 0), 0, 选择 (大于 (绿色 [1], 255), 255, 绿色 [1])))
                    赋值 (蓝色 [1], 选择 (小于 (蓝色 [1], 0), 0, 选择 (大于 (蓝色 [1], 255), 255, 蓝色 [1])))
                    
                    赋值 (当前颜色, 取颜色值 (红色 [1], 绿色 [1], 蓝色 [1]))
                .如果真结束
                
                临时位图.置某点颜色 (相减 (横向位置, 1), 相减 (纵向位置, 1), 当前颜色)
                
            .计次循环尾 ()
        .计次循环尾 ()
        
        赋值 (图块图片, 临时位图.取位图数据 ())
    .默认
        
        
    .判断结束
    
    _背景画板.画图片 (载入图片 (图块图片), 横向绘制位置, 纵向绘制位置, _图块宽度, _图块高度, #拷贝)
    
     ' 判断绘制边角线的参数值是否为真
    .如果真 (是否绘制边角线)
        
         ' 绘制边角线
        赋值 (_背景画板.刷子类型, 0)
        赋值 (_背景画板.刷子颜色, #白色)
        赋值 (_背景画板.画笔颜色, #白色)
        _背景画板.画矩形 (横向绘制位置, 纵向绘制位置, 相加 (横向绘制位置, _图块宽度), 相加 (纵向绘制位置, _图块高度))
        赋值 (_背景画板.画笔颜色, #黑色)
        _背景画板.画直线 (相加 (横向绘制位置, 10), 纵向绘制位置, 相减 (相加 (横向绘制位置, _图块宽度), 10), 纵向绘制位置)
        _背景画板.画直线 (相加 (横向绘制位置, 10), 相减 (相加 (纵向绘制位置, _图块高度), 1), 相减 (相加 (横向绘制位置, _图块宽度), 10), 相减 (相加 (纵向绘制位置, _图块高度), 1))
        _背景画板.画直线 (横向绘制位置, 相加 (纵向绘制位置, 10), 横向绘制位置, 相减 (相加 (纵向绘制位置, _图块高度), 10))
        _背景画板.画直线 (相减 (相加 (横向绘制位置, _图块宽度), 1), 相加 (纵向绘制位置, 10), 相减 (相加 (横向绘制位置, _图块宽度), 1), 相减 (相加 (纵向绘制位置, _图块高度), 10))
        赋值 (_背景画板.刷子类型, 1)
    .如果真结束
    
     ' 交换当前后台页面
    _背景画板.复制 (_前景画板, , , #拷贝)
    
.如果真结束


.子程序 绘制图块连线, 空白型, 公开, 绘制游戏的连线〔同时也会清除连线数据并实现动画效果〕
.参数 连线路径, 坐标, 数组, 
.参数 反向路径, 逻辑型, 可空, 

.局部变量 临时整数变量, 整数型, , , 
.局部变量 循环次数, 整数型, , , 
.局部变量 临时路径, 坐标, , , 
.局部变量 临时连线路径, 坐标, , "0", 
.局部变量 当前位置, 坐标, , , 
.局部变量 目标位置, 坐标, , , 
.局部变量 临时位图, 位图, , , 
.局部变量 移动模式, 整数型, , , 
.局部变量 移动方向, 整数型, , , 
.局部变量 移动完成, 逻辑型, , , 
.局部变量 上次计数, 整数型, , , 
.局部变量 因子范围, 整数型, , , 
.局部变量 因子概率, 整数型, , , 
.局部变量 因子横向位置, 整数型, , , 
.局部变量 效果范围, 整数型, , , 
.局部变量 因子纵向位置, 整数型, , , 
.局部变量 效果宽度, 整数型, , , 
.局部变量 效果高度, 整数型, , , 
.局部变量 横向位置, 整数型, , , 
.局部变量 纵向位置, 整数型, , , 

赋值 (因子范围, 30)
赋值 (因子概率, 3)
赋值 (效果范围, 相除 (相减 (_图块宽度, 15), 2))
赋值 (效果宽度, 15)
赋值 (效果高度, 15)

.如果真 (反向路径)
    .计次循环首 (取数组成员数 (连线路径), 循环次数)
        赋值 (临时路径, 连线路径 [相加 (相减 (取数组成员数 (连线路径), 循环次数), 1)])
        加入成员 (临时连线路径, 临时路径)
    .计次循环尾 ()
    .计次循环首 (取数组成员数 (连线路径), 循环次数)
        赋值 (连线路径 [循环次数], 临时连线路径 [循环次数])
    .计次循环尾 ()
    赋值 (连线路径, 临时连线路径)
.如果真结束

.如果真 (大于 (取数组成员数 (连线路径), 1))
    
    重定义数组 (临时连线路径, 假, 0)
    
    .计次循环首 (相减 (取数组成员数 (连线路径), 1), 循环次数)
        赋值 (当前位置.横向坐标, 相加 (相乘 (相减 (连线路径 [循环次数], 横向坐标, 1), _图块宽度), 相乘 (_图块宽度, 0.5)))
        赋值 (当前位置.纵向坐标, 相加 (相乘 (相减 (连线路径 [循环次数], 纵向坐标, 1), _图块高度), 相乘 (_图块高度, 0.5)))
        赋值 (目标位置.横向坐标, 相加 (相乘 (相减 (连线路径 [相加 (循环次数, 1)].横向坐标, 1), _图块宽度), 相乘 (_图块宽度, 0.5)))
        赋值 (目标位置.纵向坐标, 相加 (相乘 (相减 (连线路径 [相加 (循环次数, 1)].纵向坐标, 1), _图块高度), 相乘 (_图块高度, 0.5)))
        赋值 (移动模式, 选择 (等于 (当前位置.纵向坐标, 目标位置.纵向坐标), 1, -1))
        
        .如果 (等于 (移动模式, 1))
            .如果 (小于 (当前位置.横向坐标, 目标位置.横向坐标))
                赋值 (移动方向, 1)
            .否则
                赋值 (移动方向, -1)
            .如果结束
            
        .否则
            .如果 (小于 (当前位置.纵向坐标, 目标位置.纵向坐标))
                赋值 (移动方向, 1)
            .否则
                赋值 (移动方向, -1)
            .如果结束
            
        .如果结束
        
        赋值 (移动完成, 假)
        
        .判断循环首 (等于 (移动完成, 假))
            
             ' 判断重绘到现在的时间距离
             ' 避免不必要清除工作的产生
            .如果真 (小于 (相减 (取启动时间 (), _重绘时间), 500))
                返回 ()
            .如果真结束
            
            .如果真 (等于 (是否存在有效图块 (), 假))
                返回 ()
            .如果真结束
            
            赋值 (上次计数, 相加 (上次计数, 1))
            .如果 (等于 (移动模式, 1))
                赋值 (当前位置.横向坐标, 相加 (当前位置.横向坐标, 相乘 (因子范围, 移动方向)))
                .如果真 (小于或等于 (取绝对值 (相减 (当前位置.横向坐标, 目标位置.横向坐标)), 因子范围))
                    赋值 (移动完成, 真)
                .如果真结束
                
            .否则
                赋值 (当前位置.纵向坐标, 相加 (当前位置.纵向坐标, 相乘 (因子范围, 移动方向)))
                .如果真 (小于或等于 (取绝对值 (相减 (当前位置.纵向坐标, 目标位置.纵向坐标)), 因子范围))
                    赋值 (移动完成, 真)
                .如果真结束
                
            .如果结束
            
            .计次循环首 (1, )
                
                赋值 (因子横向位置, 相减 (取随机数 (相加 (当前位置.横向坐标, 相除 (相减 (_图块宽度, 15), 2)), 相减 (相加 (当前位置.横向坐标, _图块宽度), 15)), _图块宽度))
                赋值 (因子纵向位置, 相减 (取随机数 (相加 (当前位置.纵向坐标, 相除 (相减 (_图块宽度, 15), 2)), 相减 (相加 (当前位置.纵向坐标, _图块高度), 15)), _图块高度))
                
                赋值 (临时路径.横向坐标, 相加 (_图块区位置.横向坐标, 相除 (相减 (_图块宽度, 15), 2), 因子横向位置))
                赋值 (临时路径.纵向坐标, 相加 (_图块区位置.纵向坐标, 相除 (相减 (_图块高度, 15), 2), 因子纵向位置))
                
                置随机数种子 ()
                临时位图.载入数据 (_连线图片 [取随机数 (1, 35)])
                .计次循环首 (15, 纵向位置)
                    .计次循环首 (15, 横向位置)
                        .如果真 (等于 (临时位图.取某点颜色 (相减 (横向位置, 1), 相减 (纵向位置, 1)), #黑色))
                            临时位图.置某点颜色 (相减 (横向位置, 1), 相减 (纵向位置, 1), _背景图片位图.取某点颜色 (相减 (相加 (临时路径.横向坐标, 横向位置), 1), 相减 (相加 (临时路径.纵向坐标, 纵向位置), 1)))
                        .如果真结束
                        
                    .计次循环尾 ()
                .计次循环尾 ()
                
                _背景画板.画图片 (载入图片 (临时位图.取位图数据 ()), 临时路径.横向坐标, 临时路径.纵向坐标, , , #拷贝)
                
                .如果 (等于 (取数组成员数 (临时连线路径), 0))
                    加入成员 (临时连线路径, 临时路径)
                .否则
                    插入成员 (临时连线路径, 1, 临时路径)
                .如果结束
                
                _背景画板.复制 (_前景画板, , , #拷贝)
                
                处理事件 ()
                
            .计次循环尾 ()
        .判断循环尾 ()
    .计次循环尾 ()
    .计次循环首 (取数组成员数 (临时连线路径), 循环次数)
        
        .如果真 (等于 (是否存在有效图块 (), 假))
            返回 ()
        .如果真结束
        
        _背景画板.清除 (临时连线路径 [循环次数], 横向坐标, 临时连线路径 [循环次数], 纵向坐标, 15, 15)
        _背景画板.复制 (_前景画板, , , #拷贝)
        
        处理事件 ()
        
    .计次循环尾 ()
.如果真结束


.子程序 新局, 空白型, 公开, 
.局部变量 模板数组, 连连看数据块, , "0", 
.局部变量 匿名局部变量_960, 空白型, , , 

 ' 创建新局的方式：清空并图块数据数组 -> 获取一个新的模板数组 -> 使用模板到当前图块数据数组 -> 打乱处理
 ' 打乱的过程请参考 打乱〔〕 子程序
游戏数据初始化 ()
取新模板数组 (模板数组)
应用模板数组 (模板数组)
打乱游戏数据 ()


.子程序 打乱游戏数据, 空白型, , 打乱图块位置
.局部变量 模板数组, 连连看数据块, , "0", 
.局部变量 匿名局部变量_961, 空白型, , , 

 ' 打乱的过程：取图块模板 -> 打乱获取的模板 -> 使用模板到当前图块数据数组
 ' 模板数组主要时用来存储跟处理图块的位置信息
取当前数据到模板数组 (模板数组)
打乱模板数组 (模板数组)
应用模板数组 (模板数组)


.子程序 游戏数据初始化, 空白型, , 初始化清空游戏数据块数据
.局部变量 纵向循环, 整数型, , , 
.局部变量 横向循环, 整数型, , , 
.局部变量 当前序号, 整数型, , , 
.局部变量 匿名局部变量_962, 空白型, , , 

重定义数组 (_数据数组, 假, 相加 (_纵向块数, 2), 相加 (_横向块数, 2))
.计次循环首 (_纵向块数, 纵向循环)
    .计次循环首 (_横向块数, 横向循环)
        赋值 (当前序号, 相加 (当前序号, 1))
        赋值 (_数据数组 [相加 (纵向循环, 1)] [相加 (横向循环, 1)].永久序号, 当前序号)
        赋值 (_数据数组 [相加 (纵向循环, 1)] [相加 (横向循环, 1)].数据内容, 1)
    .计次循环尾 ()
.计次循环尾 ()


.子程序 应用模板数组, 空白型, , 使用指定模板数组到当前游戏数据
.参数 模板数组, 连连看数据块, 数组, 要使用的模板数组
.参数 匿名参数_963, 空白型, , 

.局部变量 纵向循环, 整数型, , , 
.局部变量 横向循环, 整数型, , , 
.局部变量 随机数值, 整数型, , , 
.局部变量 临时模板, 连连看数据块, , "0", 
.局部变量 匿名局部变量_964, 空白型, , , 

赋值 (临时模板, 模板数组)
.计次循环首 (_纵向块数, 纵向循环)
    .计次循环首 (_横向块数, 横向循环)
         ' 判断数据数组中指定位置数据块是否有效，如果有效则赋值为模板数组中随机位置的数据
        .如果真 (不等于 (_数据数组 [相加 (纵向循环, 1)] [相加 (横向循环, 1)].数据内容, 0))
            置随机数种子 ()
            赋值 (随机数值, 取随机数 (1, 取数组成员数 (临时模板)))
            赋值 (_数据数组 [相加 (纵向循环, 1)] [相加 (横向循环, 1)], 临时模板 [随机数值])
            删除成员 (临时模板, 随机数值, 1)
            处理事件 ()
            
        .如果真结束
        
    .计次循环尾 ()
.计次循环尾 ()


.子程序 是否存在有效图块, 逻辑型, 公开, 判断是否存在有效的游戏数据
.局部变量 剩余数量, 整数型, , , 
.局部变量 纵向循环, 整数型, , , 
.局部变量 横向循环, 整数型, , , 
.局部变量 匿名局部变量_4300, 空白型, , , 

.计次循环首 (_纵向块数, 纵向循环)
    .计次循环首 (_横向块数, 横向循环)
        .如果真 (不等于 (_数据数组 [相加 (纵向循环, 1)] [相加 (横向循环, 1)].数据内容, 0))
            返回 (真)
        .如果真结束
        
    .计次循环尾 ()
.计次循环尾 ()
返回 (假)


.子程序 取新模板数组, 空白型, , 
.参数 模板数组存储变量, 连连看数据块, 参考 数组, 

.局部变量 循环次数, 整数型, , , 
.局部变量 随机数值, 整数型, , , 
.局部变量 模板数组, 连连看数据块, , "0", 
.局部变量 临时模板, 连连看数据块, , "0", 
.局部变量 临时模板B, 连连看数据块, , , 
.局部变量 当前序号, 整数型, , , 

 ' << 获取一组新的模板数组数据 >>
 ' 模板数组主要时用来存储跟处理图块的位置信息
.如果真 (等于 (求余数 (相乘 (_横向块数, _纵向块数), 2), 1))
    赋值 (当前序号, 相加 (当前序号, 1))
    赋值 (临时模板B.永久序号, 当前序号)
    赋值 (临时模板B.数据内容, 0)
    加入成员 (临时模板, 临时模板B)
.如果真结束
.计次循环首 (整除 (相乘 (_横向块数, _纵向块数), 2), 循环次数)
    赋值 (当前序号, 相加 (当前序号, 1))
    置随机数种子 ()
    赋值 (随机数值, 取随机数 (1, _种类数量))
    赋值 (临时模板B.永久序号, 当前序号)
    赋值 (临时模板B.数据内容, 随机数值)
    加入成员 (临时模板, 临时模板B)
    赋值 (当前序号, 相加 (当前序号, 1))
    赋值 (临时模板B.永久序号, 当前序号)
    加入成员 (临时模板, 临时模板B)
    处理事件 ()
.计次循环尾 ()
赋值 (模板数组存储变量, 临时模板)


.子程序 打乱模板数组, 空白型, , 打乱模板数组数据(注：打乱后存储回原变量)
.参数 欲被打乱模板数组, 连连看数据块, 参考 数组, 
.参数 匿名参数_1182, 空白型, , 

.局部变量 模板数组, 连连看数据块, , "0", 
.局部变量 临时模板, 连连看数据块, , "0", 
.局部变量 随机数值, 整数型, , , 
.局部变量 循环次数, 整数型, , , 
.局部变量 匿名局部变量_1183, 空白型, , , 

 ' << 打乱模板数组数据 >>
 ' 为实现好的效果，可以打乱多次
 ' 模板数组主要时用来存储跟处理图块的位置信息
赋值 (临时模板, 欲被打乱模板数组)
.计次循环首 (_打乱次数, )
    重定义数组 (模板数组, 假, 0)
    .计次循环首 (取数组成员数 (临时模板), 循环次数)
        置随机数种子 ()
        赋值 (随机数值, 取随机数 (1, 取数组成员数 (临时模板)))
        加入成员 (模板数组, 临时模板 [随机数值])
        删除成员 (临时模板, 随机数值, 1)
    .计次循环尾 ()
    复制数组 (临时模板, 模板数组)
.计次循环尾 ()
赋值 (欲被打乱模板数组, 模板数组)


.子程序 取当前数据到模板数组, 空白型, , 获取当前游戏数据数组对应的模板数组
.参数 模板数组存放变量, 连连看数据块, 参考 数组, 
.参数 匿名参数_4385, 空白型, , 

.局部变量 纵向循环, 整数型, , , 
.局部变量 横向循环, 整数型, , , 
.局部变量 模板数组, 连连看数据块, , "0", 
.局部变量 匿名局部变量_4384, 空白型, , , 

 ' << 获取当前游戏数据数组对应的模板数组 >>
 ' 模板数组主要时用来存储跟处理图块的位置信息
重定义数组 (模板数组, 假, 0)
.计次循环首 (_纵向块数, 纵向循环)
    .计次循环首 (_横向块数, 横向循环)
        .如果真 (不等于 (_数据数组 [相加 (纵向循环, 1)] [相加 (横向循环, 1)].数据内容, 0))
            加入成员 (模板数组, _数据数组 [相加 (纵向循环, 1)] [相加 (横向循环, 1)])
        .如果真结束
        
    .计次循环尾 ()
.计次循环尾 ()
赋值 (模板数组存放变量, 模板数组)


.子程序 寻路, 逻辑型, 公开, 
.参数 上次坐标, 坐标, , 
.参数 当前坐标, 坐标, , 
.参数 顺序路径坐标, 坐标, 参考 可空 数组, 存放路过的路径信息
.参数 匿名参数_956, 空白型, , 

.局部变量 循环变量, 整数型, , , 
.局部变量 纵向循环, 整数型, , "2", 
.局部变量 横向循环, 整数型, , "2", 
.局部变量 临时纵向循环, 整数型, , , 
.局部变量 临时横向循环, 整数型, , , 
.局部变量 连通成功, 逻辑型, , , 
.局部变量 临时整数变量, 整数型, , , 
.局部变量 临时坐标变量, 坐标, , , 
.局部变量 连接路径, 坐标, , "0", 
.局部变量 匿名局部变量_4162, 空白型, , , 
.局部变量 最优位置, 整数型, , , 
.局部变量 匿名局部变量_4164, 空白型, , , 

.如果真 (或者 (小于或等于 (上次坐标.纵向坐标, 0), 小于或等于 (上次坐标.横向坐标, 0), 小于或等于 (当前坐标.纵向坐标, 0), 小于或等于 (当前坐标.横向坐标, 0), 大于或等于 (上次坐标.纵向坐标, 相加 (_纵向块数, 2)), 大于 (上次坐标.横向坐标, 相加 (_横向块数, 2)), 大于 (当前坐标.纵向坐标, 相加 (_纵向块数, 2)), 大于 (当前坐标.横向坐标, 相加 (_横向块数, 2))))
    返回 (假)
.如果真结束
.如果真 (不等于 (_数据数组 [上次坐标].纵向坐标 [上次坐标].横向坐标, 数据内容, _数据数组 [当前坐标].纵向坐标 [当前坐标].横向坐标, 数据内容))
    返回 (假)
.如果真结束
.如果真 (或者 (等于 (_数据数组 [上次坐标].纵向坐标 [上次坐标].横向坐标, 数据内容, 0), 等于 (_数据数组 [当前坐标].纵向坐标 [当前坐标].横向坐标, 数据内容, 0)))
    返回 (假)
.如果真结束

重定义数组 (连接路径, 假, 0)
 ' << 纵向路径连通性检测 >>
赋值 (最优位置, 0)
.计次循环首 (相加 (_纵向块数, 2), 循环变量)
     ' 先假定路径可以连通
    赋值 (连通成功, 真)
    
     ' << 测试路径连通性 >>
     ' 判断上次坐标的纵向坐标到[循环变量]是否能够连通
     ' 即判断 坐标(上次坐标.横向坐标,上次坐标.纵向坐标) 与 坐标(上次坐标.横向坐标,[循环变量]) 是否能够连通
    .变量循环首 (循环变量, 上次坐标.纵向坐标, 选择 (大于 (循环变量, 上次坐标.纵向坐标), -1, 1), 纵向循环 [1])
        .如果真 (并且 (不等于 (_数据数组 [纵向循环] [1] [上次坐标].横向坐标, 数据内容, 0), 不等于 (纵向循环 [1], 上次坐标.纵向坐标)))
            赋值 (连通成功, 假)
            跳出循环 ()
        .如果真结束
        
    .变量循环尾 ()
    
     ' 判断当前坐标的纵向坐标到[循环变量]是否能够连通
     ' 即判断 坐标(当前坐标.横向坐标,当前坐标.纵向坐标) 与 坐标(当前坐标.横向坐标,[循环变量]) 是否能够连通
    .变量循环首 (循环变量, 当前坐标.纵向坐标, 选择 (大于 (循环变量, 当前坐标.纵向坐标), -1, 1), 纵向循环 [2])
        .如果真 (并且 (不等于 (_数据数组 [纵向循环] [2] [当前坐标].横向坐标, 数据内容, 0), 不等于 (纵向循环 [2], 当前坐标.纵向坐标)))
            赋值 (连通成功, 假)
            跳出循环 ()
        .如果真结束
        
    .变量循环尾 ()
    
     ' 判断两个坐标的横向坐标与纵向坐标为[循环变量]两点是否能够连通
     ' 即判断 坐标(上次坐标.横向坐标,[循环变量]) 与 坐标(当前坐标.横向坐标,[循环变量]) 是否能够连通
    .变量循环首 (上次坐标.横向坐标, 当前坐标.横向坐标, 选择 (大于 (上次坐标.横向坐标, 当前坐标.横向坐标), -1, 1), 临时横向循环)
        .如果真 (并且 (不等于 (_数据数组 [循环变量] [临时横向循环], 数据内容, 0), 不等于 (临时横向循环, 上次坐标.横向坐标), 不等于 (临时横向循环, 当前坐标.横向坐标)))
            赋值 (连通成功, 假)
            跳出循环 ()
        .如果真结束
        
    .变量循环尾 ()
    
    .如果真 (连通成功)
        .如果 (等于 (最优位置, 0))
            赋值 (最优位置, 循环变量)
        .否则
            赋值 (最优位置, 选择 (小于 (相加 (取绝对值 (相减 (上次坐标.纵向坐标, 循环变量)), 取绝对值 (相减 (当前坐标.纵向坐标, 循环变量))), 相加 (取绝对值 (相减 (上次坐标.纵向坐标, 最优位置)), 取绝对值 (相减 (当前坐标.纵向坐标, 最优位置)))), 循环变量, 最优位置))
        .如果结束
        
    .如果真结束
    
.计次循环尾 ()
.如果真 (大于 (最优位置, 0))
    
     ' << 组织正确顺序的路径信息 >>
     ' 先加入初始节点坐标
    加入成员 (连接路径, 上次坐标)
    .如果真 (不等于 (上次坐标.横向坐标, 当前坐标.横向坐标))
         ' 判断第二个节点坐标
        .如果真 (不等于 (取绝对值 (相减 (最优位置, 上次坐标.纵向坐标)), 0))
            赋值 (临时坐标变量.横向坐标, 上次坐标.横向坐标)
            赋值 (临时坐标变量.纵向坐标, 最优位置)
            加入成员 (连接路径, 临时坐标变量)
        .如果真结束
         ' 判断第三个节点坐标
        .如果真 (不等于 (取绝对值 (相减 (最优位置, 当前坐标.纵向坐标)), 0))
            赋值 (临时坐标变量.横向坐标, 当前坐标.横向坐标)
            赋值 (临时坐标变量.纵向坐标, 最优位置)
            加入成员 (连接路径, 临时坐标变量)
        .如果真结束
        
    .如果真结束
     ' 最后加入结尾点坐标
    加入成员 (连接路径, 当前坐标)
    
    赋值 (顺序路径坐标, 连接路径)
    返回 (真)
.如果真结束


 ' << 横向路径连通性检测 >>
赋值 (最优位置, 0)
.计次循环首 (相加 (_横向块数, 2), 循环变量)
     ' 先假定路径可以连通
    赋值 (连通成功, 真)
    
     ' << 测试路径连通性 >>
     ' 判断上次坐标的纵向坐标到[循环变量]是否能够连通
     ' 即判断 坐标(上次坐标.横向坐标,上次坐标.纵向坐标) 与 坐标(上次坐标.横向坐标,[循环变量]) 是否能够连通
    .变量循环首 (循环变量, 上次坐标.横向坐标, 选择 (大于 (循环变量, 上次坐标.横向坐标), -1, 1), 横向循环 [1])
        .如果真 (并且 (不等于 (_数据数组 [上次坐标].纵向坐标 [横向循环] [1], 数据内容, 0), 不等于 (横向循环 [1], 上次坐标.横向坐标)))
            赋值 (连通成功, 假)
        .如果真结束
        
    .变量循环尾 ()
    
     ' 判断当前坐标的纵向坐标到[循环变量]是否能够连通
     ' 即判断 坐标(当前坐标.横向坐标,当前坐标.纵向坐标) 与 坐标(当前坐标.横向坐标,[循环变量]) 是否能够连通
    .变量循环首 (循环变量, 当前坐标.横向坐标, 选择 (大于 (循环变量, 当前坐标.横向坐标), -1, 1), 横向循环 [2])
        .如果真 (并且 (不等于 (_数据数组 [当前坐标].纵向坐标 [横向循环] [2], 数据内容, 0), 不等于 (横向循环 [2], 当前坐标.横向坐标)))
            赋值 (连通成功, 假)
        .如果真结束
        
    .变量循环尾 ()
    
     ' 判断两个坐标的横向坐标与纵向坐标为[循环变量]两点是否能够连通
     ' 即判断 坐标(上次坐标.横向坐标,[循环变量]) 与 坐标(当前坐标.横向坐标,[循环变量]) 是否能够连通
    .变量循环首 (上次坐标.纵向坐标, 当前坐标.纵向坐标, 选择 (大于 (上次坐标.纵向坐标, 当前坐标.纵向坐标), -1, 1), 临时纵向循环)
        .如果真 (并且 (不等于 (_数据数组 [临时纵向循环] [循环变量], 数据内容, 0), 不等于 (临时纵向循环, 上次坐标.纵向坐标), 不等于 (临时纵向循环, 当前坐标.纵向坐标)))
            赋值 (连通成功, 假)
        .如果真结束
        
    .变量循环尾 ()
     ' 检测失败便执行下次循环
    .如果真 (等于 (连通成功, 假))
        到循环尾 ()
    .如果真结束
    
    .如果真 (连通成功)
        .如果 (等于 (最优位置, 0))
            赋值 (最优位置, 循环变量)
        .否则
            赋值 (最优位置, 选择 (小于 (相加 (取绝对值 (相减 (上次坐标.横向坐标, 循环变量)), 取绝对值 (相减 (当前坐标.横向坐标, 循环变量))), 相加 (取绝对值 (相减 (上次坐标.横向坐标, 最优位置)), 取绝对值 (相减 (当前坐标.横向坐标, 最优位置)))), 循环变量, 最优位置))
            
        .如果结束
        
    .如果真结束
    
.计次循环尾 ()
.如果真 (大于 (最优位置, 0))
    
     ' << 组织正确顺序的路径信息 >>
     ' 先加入初始节点坐标
    加入成员 (连接路径, 上次坐标)
    
    .如果真 (不等于 (上次坐标.纵向坐标, 当前坐标.纵向坐标))
        
         ' 判断第二个节点坐标
        .如果真 (不等于 (取绝对值 (相减 (最优位置, 上次坐标.横向坐标)), 0))
            赋值 (临时坐标变量.纵向坐标, 上次坐标.纵向坐标)
            赋值 (临时坐标变量.横向坐标, 最优位置)
            加入成员 (连接路径, 临时坐标变量)
        .如果真结束
        
         ' 判断第三个节点坐标
        .如果真 (不等于 (取绝对值 (相减 (最优位置, 当前坐标.横向坐标)), 0))
            赋值 (临时坐标变量.纵向坐标, 当前坐标.纵向坐标)
            赋值 (临时坐标变量.横向坐标, 最优位置)
            加入成员 (连接路径, 临时坐标变量)
        .如果真结束
        
    .如果真结束
    
     ' 最后加入结尾点坐标
    加入成员 (连接路径, 当前坐标)
    
    赋值 (顺序路径坐标, 连接路径)
    返回 (真)
.如果真结束

返回 (假)

.子程序 取可通路径, 逻辑型, 公开, 获取一条可以连通的路径，无可连通路径则返回假
.参数 前路径坐标, 坐标, 参考 可空, 存储路径头位置坐标
.参数 后路径坐标, 坐标, 参考 可空, 存储路径尾位置坐标
.参数 匿名参数_977, 空白型, , 

.局部变量 前坐标, 坐标, , , 临时头位置坐标
.局部变量 后坐标, 坐标, , , 临时尾位置坐标
.局部变量 匿名局部变量_1009, 空白型, , , 
.局部变量 探测成功, 逻辑型, , , 记录是否有连通路径
.局部变量 匿名局部变量_1015, 空白型, , , 
.局部变量 内纵向循环, 整数型, , , 
.局部变量 内横向循环, 整数型, , , 
.局部变量 匿名局部变量_4383, 空白型, , , 
.局部变量 外纵向循环, 整数型, , , 
.局部变量 外横向循环, 整数型, , , 
.局部变量 匿名局部变量_1005, 空白型, , , 

 ' 先假定无可连通路径
赋值 (探测成功, 假)
.计次循环首 (相加 (_纵向块数, 2), 外纵向循环)
    .计次循环首 (相加 (_横向块数, 2), 外横向循环)
        赋值 (前坐标.横向坐标, 外横向循环)
        赋值 (前坐标.纵向坐标, 外纵向循环)
        .如果真 (不等于 (_数据数组 [前坐标].纵向坐标 [前坐标].横向坐标, 数据内容, 0))
            .变量循环首 (外纵向循环, 相加 (_纵向块数, 2), 1, 内纵向循环)
                .计次循环首 (相加 (_横向块数, 2), 内横向循环)
                    赋值 (后坐标.横向坐标, 内横向循环)
                    赋值 (后坐标.纵向坐标, 内纵向循环)
                    .如果真 (或者 (不等于 (后坐标.纵向坐标, 前坐标.纵向坐标), 不等于 (后坐标.横向坐标, 前坐标.横向坐标)))
                         ' 判断是否有可连通路径
                        .如果真 (寻路 (前坐标, 后坐标))
                             ' 如果路径可以连通则设定探测成功为真
                            赋值 (探测成功, 真)
                             ' 将当前头尾坐标更新到头尾路径变量
                            赋值 (前路径坐标, 前坐标)
                            赋值 (后路径坐标, 后坐标)
                            跳出循环 ()
                        .如果真结束
                        
                    .如果真结束
                    
                .计次循环尾 ()
                .如果真 (探测成功)
                    跳出循环 ()
                .如果真结束
                
            .变量循环尾 ()
        .如果真结束
        .如果真 (探测成功)
            跳出循环 ()
        .如果真结束
        
    .计次循环尾 ()
    .如果真 (探测成功)
        跳出循环 ()
    .如果真结束
    
.计次循环尾 ()
返回 (探测成功)


.类模块 类_游戏_用户时间分数处理, , , 

.程序集变量 _本局时间, 整数型, , , 游戏当前进行时间
.程序集变量 _系统开启时间, 整数型, , , Windows系统启动时间
.程序集变量 _游戏开启时间, 整数型, , , 游戏开启时的系统时间
.程序集变量 _暂停持续时间, 整数型, , , 游戏暂停的时间
.程序集变量 _本局限定时间, 整数型, , , 本局的限定时间
.程序集变量 _上次选中时间, 整数型, , , 上次选中图块的时间
.程序集变量 _暂停取消刻时间, 整数型, , , 取消暂停时的系统时间
.程序集变量 _暂停开启刻时间, 整数型, , , 暂停时的系统时间
.程序集变量 匿名程序集变量_4504, 空白型, , , 
.程序集变量 _用户列表, 用户信息, , "0", 
.程序集变量 _用户列表文件, 文本型, , , 用户列表信息存放的文件
.程序集变量 匿名程序集变量_5019, 空白型, , , 
.程序集变量 _当前用户, 文本型, , , 当前用户名称
.程序集变量 _当前分数, 整数型, , , 用户当前的总分数
.程序集变量 _本局分数, 整数型, , , 本局游戏的分数
.程序集变量 _当前状态, 整数型, , , 记录游戏当前的状态  0.游戏正常进行　1.暂停游戏　2.停止游戏
.程序集变量 _用户关卡, 整数型, , , 
.程序集变量 _入榜基本分数, 整数型, , , 进入排行榜的基本分数限制
.程序集变量 匿名程序集变量_4509, 空白型, , , 
.程序集变量 _是否暂停中, 逻辑型, , , 记录游戏是否为暂停状态
.程序集变量 匿名程序集变量_4500, 空白型, , , 
.程序集变量 _排行榜数据, 分数排行, , "0", 排行榜数据
.程序集变量 匿名程序集变量_4502, 空白型, , , 
.程序集变量 _缓冲标签, 标签, , , 防止进度标签改变进度时闪动明显的症状
.程序集变量 _进度条标签, 标签, , , 显示进度的标签
.程序集变量 _进度条位置, 坐标, , , 进度条当前的位置〔进度条宽度〕
.程序集变量 匿名程序集变量_4503, 空白型, , , 
.程序集变量 _进度条起始宽度, 整数型, , , 进度条的起始宽度
.程序集变量 _进度条结束宽度, 整数型, , , 进度条的结束宽度
.程序集变量 匿名程序集变量_2154, 空白型, , , 
.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用
 ' 获取用户上次的信息
 ' 主要包括用户名、分数、排行榜数据
赋值 (_当前用户, 读入用户名 ())
赋值 (_入榜基本分数, #入榜的基本分数)
赋值 (_用户列表文件, 相加 (取运行目录 (), “\UserList.dat”))
用户列表_读入列表 ()
读入排行榜 ()


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用
处理排行榜 ()
写出用户名 ()
用户列表_写出列表 ()


.子程序 初始化类_, 空白型, 公开, 类的初始化配置
.参数 进度条标签_, 标签, 参考, 进度条标签
.参数 进度条起始宽度_, 整数型, , 进度条起始宽度
.参数 进度条结束宽度_, 整数型, , 进度条最大的宽度
.参数 匿名参数_2162, 空白型, , 

.局部变量 临时位置变量, 坐标, , , 
.局部变量 匿名局部变量_2164, 空白型, , , 

 ' << 类的初始化配置 >>
 ' 获取系统的启动时间
赋值 (_系统开启时间, 取启动时间 ())

赋值 (_进度条标签, 进度条标签_)
赋值 (_进度条起始宽度, 进度条起始宽度_)
赋值 (_进度条结束宽度, 进度条结束宽度_)
赋值 (进度条标签_.宽度, 进度条起始宽度_)

 ' 判断是否已经创建缓冲标签，如果未创建，则复制进度标签到缓冲标签变量
.如果真 (取反 (是否已创建 (_缓冲标签)))
    复制窗口组件 (进度条标签_, _缓冲标签)
    _缓冲标签.调整层次 ()
    赋值 (_缓冲标签.可视, 真)
    赋值 (_缓冲标签.宽度, 进度条起始宽度_)
.如果真结束


.子程序 增减游戏时间, 空白型, 公开, 增减当前的游戏时间
.参数 要增减的时间, 整数型, , 毫秒为单位，整数为增加，负数为减少
.参数 匿名参数_2619, 空白型, , 

 ' << 增减当前的游戏时间 >>
赋值 (_游戏开启时间, 相加 (_游戏开启时间, 要增减的时间))


.子程序 取游戏状态, 整数型, 公开, 获取当前游戏的状态  0.游戏正常进行　1.暂停游戏　2.停止游戏
 ' << 获取当前游戏的状态 >>
返回 (_当前状态)


.子程序 取本局限定时间, 整数型, 公开, 获取本局限定的时间
 ' << 获取本局限定的时间 >>
返回 (_本局限定时间)


.子程序 时间_跳转到起点时间, 空白型, 公开, 设置游戏时间到起始位置，当前游戏时间跳转到　1ms　的位置
 ' << 设置游戏时间到起始位置 >>
赋值 (_本局时间, 0)
赋值 (_上次选中时间, 0)
赋值 (_游戏开启时间, 取启动时间 ())


.子程序 时间_开始, 空白型, 公开, 时间的初始化设置
.参数 本局限定时间_, 整数型, , 本局限定的时间〔单位为毫秒〕

 ' << 时间的初始化设置 >>
赋值 (_当前状态, 0)
赋值 (_本局时间, 0)
赋值 (_本局分数, 0)
赋值 (_上次选中时间, 0)
赋值 (_本局限定时间, 本局限定时间_)
赋值 (_游戏开启时间, 取启动时间 ())


.子程序 时间_暂停, 空白型, 公开, 暂停游戏时间
 ' << 暂停游戏时间 >>
赋值 (_当前状态, 1)
赋值 (_暂停开启刻时间, 取启动时间 ())


.子程序 时间_取消暂停, 空白型, 公开, 取消游戏时间的暂停
 ' << 取消游戏时间的暂停 >>
赋值 (_当前状态, 0)
赋值 (_暂停取消刻时间, 取启动时间 ())
赋值 (_游戏开启时间, 相减 (相加 (_游戏开启时间, _暂停取消刻时间), _暂停开启刻时间))


.子程序 时间_停止, 空白型, 公开, 停止游戏时间
 ' << 停止游戏时间 >>
赋值 (_当前状态, 2)
赋值 (_本局时间, 0)
赋值 (_本局限定时间, 0)
赋值 (_上次选中时间, 0)


.子程序 时间_取当前游戏时间, 整数型, 公开, 获取当前游戏正式开启的时间
 ' << 获取游戏开启时间 >>
返回 (_本局时间)


.子程序 时间_取上次选中时间, 整数型, 公开, 获取上次选中图块时的时间
 ' << 获取上次选中图块时的时间 >>
返回 (_上次选中时间)


.子程序 时间_置上次选中时间, 空白型, 公开, 设置上次选中图块的时间
.参数 时间, 整数型, 可空, 单位为毫秒(如果本参数被省略，则默认为当前游戏时间)

 ' << 设置上次选中图块的时间 >>
.如果真 (是否为空 (时间))
    赋值 (时间, _本局时间)
.如果真结束
赋值 (_上次选中时间, 时间)


.子程序 时间_是否暂停中, 逻辑型, 公开, 判断当前游戏时间是否为暂停状态
 ' << 判断当前游戏时间是否为暂停状态 >>
返回 (等于 (_当前状态, 1))


.子程序 分数_加入本局分数, 空白型, 公开, 加入分数到〔本局分数〕
.参数 分数, 整数型, , 
.参数 匿名参数_2169, 空白型, , 

 ' << 加入分数到〔本局分数〕 >>
赋值 (_本局分数, 相加 (_本局分数, 分数))


.子程序 分数_取本局分数, 整数型, 公开, 获取〔本局分数〕
 ' << 获取〔本局分数〕 >>
返回 (_本局分数)


.子程序 取当前游戏状态, 整数型, 公开, 获取游戏当前的状态  0.游戏正常进行　1.暂停游戏　2.停止游戏
 ' << 获取游戏当前的状态 >>
返回 (_当前状态)


.子程序 处理事件, 空白型, 公开, 处理游戏时间分数相关事件
.局部变量 上次时间, 整数型, , , 
.局部变量 本次位置, 整数型, 静态, , 
.局部变量 上次位置, 整数型, 静态, , 
.局部变量 进度条宽度, 整数型, , , 
.局部变量 匿名局部变量_4518, 空白型, , , 

 ' << 处理游戏时间分数相关事件 >>
 ' 判断当前游戏的状态
.如果真 (等于 (_当前状态, 0))
    .如果真 (大于或等于 (_本局时间, _本局限定时间))
        返回 ()
    .如果真结束
    赋值 (_本局时间, 相减 (取启动时间 (), _游戏开启时间))
    赋值 (进度条宽度, 相加 (_进度条起始宽度, 相乘 (相除 (相乘 (相除 (相减 (_进度条结束宽度, _进度条起始宽度), 100), _本局时间), _本局限定时间), 100)))
    赋值 (进度条宽度, 选择 (大于 (进度条宽度, _进度条结束宽度), _进度条结束宽度, 进度条宽度))
    .如果真 (不等于 (进度条宽度, _进度条标签.宽度))
        赋值 (_进度条标签.宽度, 进度条宽度)
        赋值 (本次位置, 取整 (相乘 (相除 (_本局时间, _本局限定时间), 100)))
        .如果真 (并且 (等于 (求余数 (本次位置, 4), 0), 不等于 (本次位置, 上次位置)))
            赋值 (_缓冲标签.宽度, 进度条宽度)
            赋值 (上次位置, 本次位置)
        .如果真结束
        
    .如果真结束
    
.如果真结束


.子程序 时间_是否已到限定时间, 逻辑型, 公开, 判断是否到了游戏限定的时间
 ' << 判断是否到了游戏限定的时间 >>
返回 (选择 (或者 (等于 (_当前状态, 1), 等于 (_当前状态, 2), 等于 (_本局限定时间, 0)), 假, 大于或等于 (_本局时间, _本局限定时间)))


.子程序 用户_更改当前用户名, 空白型, 公开, 更改当前玩家名称
.参数 用户名_, 文本型, , 

.局部变量 总循环次数, 整数型, , , 
.局部变量 循环次数, 整数型, , , 

 ' << 更改当前玩家名称 >>
.如果真 (等于 (用户名_, _当前用户))
    返回 ()
.如果真结束
赋值 (总循环次数, 取数组成员数 (_排行榜数据))
.如果真 (等于 (删首尾空 (用户名_), “”))
    赋值 (用户名_, “NoName”)
.如果真结束
.计次循环首 (总循环次数, 循环次数)
    .如果真 (等于 (_排行榜数据 [循环次数], 用户名称, _当前用户))
        赋值 (_排行榜数据 [循环次数], 用户名称, 用户名_)
    .如果真结束
    
.计次循环尾 ()
用户列表_更改用户名称 (_当前用户, 用户名_)
赋值 (_当前用户, 用户名_)


.子程序 重新统计分数, 空白型, 公开, 清空当前的分数
 ' << 清空当前的分数 >>
赋值 (_当前分数, 0)
用户列表_更改用户分数 (_当前用户, _当前分数)


.子程序 取当前用户分数, 整数型, 公开, 获取当前用户的分数
 ' << 获取当前用户的分数 >>
返回 (_当前分数)


.子程序 取当前用户名, 文本型, 公开, 获取当前的用户名
返回 (_当前用户)


.子程序 用户_添加分数, 空白型, 公开, 
.参数 要添加的分数, 整数型, , 

赋值 (_当前分数, 相加 (_当前分数, 要添加的分数))
用户列表_更改用户分数 (_当前用户, _当前分数)
置入排行榜 (_当前用户, _当前分数)


.子程序 置入排行榜, 空白型, 公开, 
.参数 用户名, 文本型, 可空, 为空则为当前用户
.参数 分数, 整数型, 可空, 
.参数 匿名参数_2184, 空白型, , 

.局部变量 临时排行数据, 分数排行, , , 
.局部变量 总循环次数, 整数型, , , 
.局部变量 循环次数, 整数型, , , 
.局部变量 是否存在, 逻辑型, , , 
.局部变量 匿名局部变量_2189, 空白型, , , 

.如果真 (是否为空 (用户名))
    赋值 (用户名, _当前用户)
.如果真结束
.如果真 (是否为空 (分数))
    赋值 (分数, _当前分数)
.如果真结束

.如果真 (小于 (分数, _入榜基本分数))
    返回 ()
.如果真结束
赋值 (总循环次数, 取数组成员数 (_排行榜数据))
赋值 (是否存在, 假)
.计次循环首 (总循环次数, 循环次数)
    .如果真 (等于 (_排行榜数据 [循环次数], 用户名称, 用户名))
        赋值 (是否存在, 真)
        .如果真 (小于 (_排行榜数据 [循环次数], 用户分数, 分数))
            赋值 (_排行榜数据 [循环次数], 用户分数, 分数)
        .如果真结束
        跳出循环 ()
    .如果真结束
    
.计次循环尾 ()
.如果真 (等于 (是否存在, 假))
    赋值 (临时排行数据.用户名称, 用户名)
    赋值 (临时排行数据.用户分数, 分数)
    .如果真 (大于 (分数, 0))
        加入成员 (_排行榜数据, 临时排行数据)
    .如果真结束
    
.如果真结束

处理排行榜 ()


.子程序 保存排行榜, 空白型, , 
.局部变量 排行榜数据, 文本型, , , 
.局部变量 循环次数, 整数型, , , 
.局部变量 匿名局部变量_2192, 空白型, , , 

.计次循环首 (取数组成员数 (_排行榜数据), 循环次数)
    .如果真 (等于 (_排行榜数据 [循环次数], 用户名称, “”))
        赋值 (_排行榜数据 [循环次数], 用户名称, “NoName”)
    .如果真结束
    赋值 (排行榜数据, 相加 (排行榜数据, 选择 (不等于 (取文本右边 (_排行榜数据 [循环次数], 用户名称, 1), “ ”), 相加 (_排行榜数据 [循环次数], 用户名称, “”), _排行榜数据 [循环次数], 用户名称), #关键字分隔符2, 到文本 (_排行榜数据 [循环次数], 用户分数), #关键字分隔符1))
.计次循环尾 ()
.如果真 (大于 (取文本长度 (排行榜数据), 0))
    赋值 (排行榜数据, 取文本左边 (排行榜数据, 相减 (取文本长度 (排行榜数据), 取文本长度 (#关键字分隔符1))))
.如果真结束
写到文件 (相加 (取运行目录 (), “\SCORE.DAT”), 未知支持库函数_0 (到字节集 (排行榜数据)))


.子程序 用户_冻结排行榜记录, 空白型, 公开, 
.参数 用户名称, 文本型, , 
.参数 匿名参数_4401, 空白型, , 

.局部变量 排行榜数据, 文本型, , , 
.局部变量 循环次数, 整数型, , , 
.局部变量 匿名局部变量_4410, 空白型, , , 

.计次循环首 (取数组成员数 (_排行榜数据), 循环次数)
    .如果真 (等于 (_排行榜数据 [循环次数], 用户名称, 用户名称))
        赋值 (_排行榜数据 [循环次数], 用户名称, 相加 (用户名称, “ ”))
    .如果真结束
    
.计次循环尾 ()


.子程序 读入排行榜, 空白型, 公开, 从排行榜文件读取排行榜数据
.局部变量 排行榜数据, 文本型, , , 
.局部变量 行数据, 文本型, , "0", 
.局部变量 列数据, 文本型, , "2", 
.局部变量 循环次数, 整数型, , , 
.局部变量 临时排行数据, 分数排行, , , 

 ' << 从排行榜文件读取排行榜数据 >>
 ' 本处通过分割关键文本的方式获取排行榜数据到排行榜数组变量
重定义数组 (_排行榜数据, 假, 0)
赋值 (排行榜数据, 到文本 (未知支持库函数_1 (读入文件 (相加 (取运行目录 (), “\SCORE.DAT”)))))
赋值 (行数据, 分割文本 (排行榜数据, #关键字分隔符1, ))
.如果真 (等于 (取数组成员数 (行数据), 0))
    .如果真 (大于 (取文本长度 (排行榜数据), 0))
        加入成员 (行数据, 排行榜数据)
    .如果真结束
    
.如果真结束
.计次循环首 (取数组成员数 (行数据), 循环次数)
    赋值 (列数据, 分割文本 (行数据 [循环次数], #关键字分隔符2, 2))
    .如果真 (等于 (取数组成员数 (列数据), 2))
        赋值 (临时排行数据.用户名称, 列数据 [1])
        赋值 (临时排行数据.用户分数, 到数值 (列数据 [2]))
        .如果真 (大于 (临时排行数据.用户分数, 0))
            加入成员 (_排行榜数据, 临时排行数据)
        .如果真结束
        
    .如果真结束
    
.计次循环尾 ()
处理排行榜 ()


.子程序 用户列表_读入列表, 空白型, , 类创建时会自动的读入
.局部变量 文件句柄, 整数型, , , 
.局部变量 本行数据, 文本型, , , 
.局部变量 分割数据, 文本型, , "3", 
.局部变量 临时用户, 用户信息, , , 
.局部变量 用户列表, 用户信息, , "0", 
.局部变量 匿名局部变量_5041, 空白型, , , 

赋值 (文件句柄, 打开加密文件 (_用户列表文件, #读入, #无限制, “3333”, 0))
.判断循环首 (等于 (假, 是否在文件尾 (文件句柄, )))
    赋值 (本行数据, 读入一行 (文件句柄))
    赋值 (分割数据, 分割文本 (本行数据, #关键字分隔符1, 3))
    .如果真 (等于 (取数组成员数 (分割数据), 3))
        赋值 (临时用户.用户名称, 分割数据 [1])
        赋值 (临时用户.用户分数, 到数值 (分割数据 [2]))
        赋值 (临时用户.用户当前关卡, 到数值 (分割数据 [3]))
        加入成员 (用户列表, 临时用户)
    .如果真结束
    
.判断循环尾 ()
赋值 (_用户列表, 用户列表)
关闭文件 (文件句柄)


.子程序 用户列表_写出列表, 空白型, 公开, 类销毁时会自动的写出
.局部变量 文件句柄, 整数型, , , 
.局部变量 本行数据, 文本型, , , 
.局部变量 分割数据, 文本型, , "3", 
.局部变量 循环次数, 整数型, , , 
.局部变量 临时用户, 用户信息, , , 
.局部变量 用户列表, 用户信息, , "0", 
.局部变量 匿名局部变量_5056, 空白型, , , 

赋值 (文件句柄, 打开加密文件 (_用户列表文件, #重写, #无限制, “3333”, 0))
.计次循环首 (取数组成员数 (_用户列表), 循环次数)
    赋值 (临时用户, _用户列表 [循环次数])
    写文本行 (文件句柄, 取文本 (相加 (“%s”, #关键字分隔符1, “%s”, #关键字分隔符1, “%s”), 临时用户.用户名称, 到文本 (临时用户.用户分数), 到文本 (临时用户.用户当前关卡)))
.计次循环尾 ()
关闭文件 (文件句柄)


.子程序 用户_置当前关卡, 空白型, 公开, 
.参数 当前关卡, 整数型, , 
.参数 匿名参数_5189, 空白型, , 

.局部变量 用户索引, 整数型, , , 
.局部变量 匿名局部变量_5179, 空白型, , , 

赋值 (用户索引, 用户列表_取用户索引 (_当前用户))
.如果真 (大于 (用户索引, 0))
    赋值 (_用户列表 [用户索引], 用户当前关卡, 当前关卡)
.如果真结束


.子程序 用户_取当前关卡, 整数型, 公开, 
.局部变量 用户索引, 整数型, , , 
.局部变量 当前关卡, 整数型, , , 
.局部变量 匿名局部变量_5191, 空白型, , , 

赋值 (用户索引, 用户列表_取用户索引 (_当前用户))
.如果真 (大于 (用户索引, 0))
    赋值 (当前关卡, _用户列表 [用户索引], 用户当前关卡)
.如果真结束
返回 (当前关卡)


.子程序 用户列表_加入用户, 空白型, 公开, 
.参数 用户名称, 文本型, , 
.参数 用户分数, 整数型, 可空, 
.参数 当前关卡, 整数型, 可空, 
.参数 匿名参数_4978, 空白型, , 

.局部变量 临时用户, 用户信息, , , 
.局部变量 匿名局部变量_5140, 空白型, , , 

赋值 (临时用户.用户名称, 用户名称)
赋值 (临时用户.用户分数, 用户分数)
赋值 (临时用户.用户当前关卡, 当前关卡)
加入成员 (_用户列表, 临时用户)


.子程序 用户列表_删除用户, 空白型, 公开, 
.参数 用户名称, 文本型, , 
.参数 匿名参数_5275, 空白型, , 

.局部变量 用户索引, 整数型, , , 
.局部变量 匿名局部变量_5279, 空白型, , , 

赋值 (用户索引, 用户列表_取用户索引 (用户名称))
.如果真 (大于 (用户索引, 0))
    删除成员 (_用户列表, 用户索引, 1)
.如果真结束


.子程序 用户列表_更改用户名称, 空白型, 公开, 
.参数 原用户名称, 文本型, , 
.参数 现用户名称, 文本型, , 
.参数 匿名参数_5153, 空白型, , 

.局部变量 用户索引, 整数型, , , 
.局部变量 匿名局部变量_5157, 空白型, , , 

赋值 (用户索引, 用户列表_取用户索引 (原用户名称))
.如果真 (大于 (用户索引, 0))
    赋值 (_用户列表 [用户索引], 用户名称, 现用户名称)
.如果真结束


.子程序 用户列表_更改用户分数, 空白型, 公开, 
.参数 用户名称, 文本型, , 
.参数 用户分数, 整数型, , 
.参数 匿名参数_5339, 空白型, , 

.局部变量 用户索引, 整数型, , , 
.局部变量 临时用户, 用户信息, , , 
.局部变量 匿名局部变量_5342, 空白型, , , 

赋值 (用户索引, 用户列表_取用户索引 (用户名称))
.如果真 (大于 (用户索引, 0))
    赋值 (_用户列表 [用户索引], 用户分数, 用户分数)
.如果真结束


.子程序 用户列表_更改用户关卡, 空白型, , 
.参数 用户名称, 文本型, , 
.参数 当前关卡, 整数型, , 
.参数 匿名参数_5163, 空白型, , 

.局部变量 用户索引, 整数型, , , 
.局部变量 临时用户, 用户信息, , , 
.局部变量 匿名局部变量_5166, 空白型, , , 

赋值 (用户索引, 用户列表_取用户索引 (用户名称))
.如果真 (大于 (用户索引, 0))
    赋值 (_用户列表 [用户索引], 用户当前关卡, 当前关卡)
.如果真结束


.子程序 用户列表_置当前用户, 空白型, 公开, 
.参数 用户名称, 文本型, , 
.参数 匿名参数_5011, 空白型, , 

.局部变量 用户信息, 用户信息, , , 
.局部变量 匿名局部变量_5107, 空白型, , , 

赋值 (用户信息, 用户列表_取用户信息 (用户名称))
赋值 (_当前用户, 用户名称)
赋值 (_当前分数, 用户信息.用户分数)
写出用户名 ()


.子程序 用户列表_用户是否存在, 逻辑型, 公开, 
.参数 用户名称, 文本型, , 
.参数 匿名参数_5132, 空白型, , 

返回 (不等于 (用户列表_取用户索引 (用户名称), 0))


.子程序 用户列表_取用户信息, 用户信息, 公开, 
.参数 用户名称, 文本型, , 
.参数 匿名参数_5088, 空白型, , 

.局部变量 用户索引, 整数型, , , 
.局部变量 临时用户, 用户信息, , , 
.局部变量 匿名局部变量_5117, 空白型, , , 

赋值 (用户索引, 用户列表_取用户索引 (用户名称))
.如果真 (大于 (用户索引, 0))
    赋值 (临时用户, _用户列表 [用户索引])
.如果真结束
返回 (临时用户)


.子程序 用户列表_取所有用户信息, 空白型, 公开, 
.参数 用户信息数组变量, 用户信息, 参考 数组, 
.参数 匿名参数_5007, 空白型, , 

赋值 (用户信息数组变量, _用户列表)


.子程序 用户列表_取名称列表, 整数型, 公开, 返回用户数量
.参数 用户名称数组变量, 文本型, 参考 数组, 

.局部变量 循环次数, 整数型, , , 
.局部变量 临时文本数组, 文本型, , "0", 
.局部变量 匿名局部变量_5216, 空白型, , , 

.计次循环首 (取数组成员数 (_用户列表), 循环次数)
    加入成员 (临时文本数组, _用户列表 [循环次数], 用户名称)
.计次循环尾 ()
赋值 (用户名称数组变量, 临时文本数组)
返回 (取数组成员数 (_用户列表))


.子程序 用户列表_取用户索引, 整数型, 公开, 
.参数 用户名称, 文本型, , 
.参数 匿名参数_5097, 空白型, , 

.局部变量 循环次数, 整数型, , , 
.局部变量 匿名局部变量_5102, 空白型, , , 

.计次循环首 (取数组成员数 (_用户列表), 循环次数)
    .如果真 (等于 (_用户列表 [循环次数], 用户名称, 用户名称))
        返回 (循环次数)
    .如果真结束
    
.计次循环尾 ()
返回 (0)


.子程序 用户列表_取用户数, 整数型, 公开, 
返回 (取数组成员数 (_用户列表))


.子程序 读入用户名, 文本型, , 获取记录中的用户的名称
 ' << 获取记录中的用户的名称 >>
返回 (到文本 (未知支持库函数_1 (读入文件 (相加 (取运行目录 (), “\USER.DAT”)))))


.子程序 写出用户名, 空白型, , 写出用户的名称
 ' << 写出用户的名称 >>
写到文件 (相加 (取运行目录 (), “\USER.DAT”), 未知支持库函数_0 (到字节集 (_当前用户)))


.子程序 处理排行榜, 空白型, , 处理排行榜数据信息
.局部变量 循环次数, 整数型, , , 
.局部变量 循环次数B, 整数型, , , 
.局部变量 临时排行数据, 分数排行, , , 
.局部变量 匿名局部变量_2201, 空白型, , , 

 ' << 处理排行榜数据信息 >>
.判断开始 (大于 (取数组成员数 (_排行榜数据), 1))
     ' 本处是利用冒泡法对排行榜数据进行排序
    .计次循环首 (相减 (取数组成员数 (_排行榜数据), 1), 循环次数)
        .计次循环首 (相减 (取数组成员数 (_排行榜数据), 1), 循环次数B)
             ' 判断分数的大小并根据情况调整顺序
            .如果真 (小于 (_排行榜数据 [循环次数B], 用户分数, _排行榜数据 [相加 (循环次数B, 1)].用户分数))
                赋值 (临时排行数据, _排行榜数据 [循环次数B])
                赋值 (_排行榜数据 [循环次数B], _排行榜数据 [相加 (循环次数B, 1)])
                赋值 (_排行榜数据 [相加 (循环次数B, 1)], 临时排行数据)
            .如果真结束
            
        .计次循环尾 ()
    .计次循环尾 ()
     ' 对超过限定条数范围的数据进行删除处理
    .如果真 (大于 (取数组成员数 (_排行榜数据), #排行榜限定行数))
        删除成员 (_排行榜数据, 相加 (#排行榜限定行数, 1), 相减 (取数组成员数 (_排行榜数据), #排行榜限定行数))
    .如果真结束
    
.默认
    
.判断结束

保存排行榜 ()


.子程序 取排行榜数据数量, 整数型, 公开, 获取当前排行榜数据的数量
 ' << 获取当前排行榜数据的数量 >>
返回 (取数组成员数 (_排行榜数据))


.子程序 取排行榜数据, 空白型, 公开, 获取指定索引的排行榜信息
.参数 排行榜索引, 整数型, , 
.参数 用户名变量, 文本型, 参考 可空, 
.参数 分数变量, 整数型, 参考 可空, 

 ' << 获取指定索引的排行榜信息 >>
赋值 (用户名变量, _排行榜数据 [排行榜索引], 用户名称)
赋值 (分数变量, _排行榜数据 [排行榜索引], 用户分数)

.类模块 类_游戏_游戏道具, , , 

.程序集变量 道具数组, 游戏道具, , "0", 记录游戏道具信息
.程序集变量 匿名程序集变量_2469, 空白型, , , 
.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 加入道具, 空白型, 公开, 
.参数 道具名称, 文本型, , 
.参数 道具数量, 整数型, , 即图片顺序的索引，图片在本类初始化函数中载入 从1开始
.参数 匿名参数_2406, 空白型, , 

.局部变量 临时游戏道具, 游戏道具, , , 
.局部变量 匿名局部变量_2476, 空白型, , , 

 ' << 增加道具 >>
赋值 (临时游戏道具.道具名称, 道具名称)
赋值 (临时游戏道具.道具数量, 道具数量)
加入成员 (道具数组, 临时游戏道具)


.子程序 使用道具, 逻辑型, 公开, 使用道具后，道具使用次数会自动减少一次，如果没有道具或没有可用道具，将返回假
.参数 道具名称, 文本型, , 
.参数 匿名参数_2418, 空白型, , 

.局部变量 道具索引, 整数型, , , 
.局部变量 匿名局部变量_2420, 空白型, , , 

 ' <<使用道具>>
赋值 (道具索引, 取道具索引 (道具名称))
.如果真 (小于 (道具索引, 1))
    返回 (假)
.如果真结束
.如果真 (小于 (道具数组 [道具索引], 道具数量, 1))
    返回 (假)
.如果真结束
置道具使用次数 (道具名称, 相减 (道具数组 [道具索引], 道具数量, 1))
返回 (真)


.子程序 增加道具次数, 逻辑型, 公开, 道具次数增加一次
.参数 道具名称, 文本型, , 
.参数 匿名参数_2538, 空白型, , 

.局部变量 道具索引, 整数型, , , 
.局部变量 匿名局部变量_2542, 空白型, , , 

 ' << 道具次数增加一次 >>
赋值 (道具索引, 取道具索引 (道具名称))
.如果真 (小于 (道具索引, 1))
    返回 (假)
.如果真结束
.如果真 (小于 (道具数组 [道具索引], 道具数量, 1))
    返回 (假)
.如果真结束
置道具使用次数 (道具名称, 相加 (道具数组 [道具索引], 道具数量, 1))
返回 (真)


.子程序 置道具使用次数, 逻辑型, 公开, 设置指定道具的数量
.参数 道具名称, 文本型, , 道具的名称
.参数 道具数量, 整数型, , 道具的数量〔使用次数〕
.参数 匿名参数_2496, 空白型, , 

.局部变量 道具索引, 整数型, , , 
.局部变量 匿名局部变量_2504, 空白型, , , 

 ' << 设置指定道具的数量 >>
赋值 (道具索引, 取道具索引 (道具名称))
.如果真 (小于 (道具索引, 1))
    返回 (假)
.如果真结束
赋值 (道具数组 [道具索引], 道具数量, 道具数量)
返回 (真)


.子程序 取道具数量, 整数型, 公开, 获取道具的使用次数〔道具数量〕
.参数 道具名称, 文本型, , 
.参数 匿名参数_2518, 空白型, , 

.局部变量 道具索引, 整数型, , , 
.局部变量 匿名局部变量_2520, 空白型, , , 

赋值 (道具索引, 取道具索引 (道具名称))
.如果真 (小于 (道具索引, 1))
    返回 (0)
.如果真结束
返回 (道具数组 [道具索引], 道具数量)


.子程序 取道具索引, 整数型, , 获取指定道具在道具数组中的索引
.参数 道具名称, 文本型, , 
.参数 匿名参数_2480, 空白型, , 

.局部变量 循环次数, 整数型, , , 
.局部变量 匿名局部变量_2485, 空白型, , , 

.计次循环首 (取数组成员数 (道具数组), 循环次数)
    .如果真 (等于 (道具数组 [循环次数], 道具名称, 道具名称))
        返回 (循环次数)
    .如果真结束
    
.计次循环尾 ()
返回 (0)


.类模块 类_游戏_关卡处理, , , 

.程序集变量 _主关卡数组, 主关卡信息, , "0", 所有主关卡信息数组
.程序集变量 _主关卡文件, 文本型, , , 主关卡信息存储的文件
.程序集变量 _关卡名称格式, 文本型, , , 关卡名称的格式，通过替换关键字〔这里的关键字是#stageid#，用以替换当前关卡ID〕来获取当前关卡文件名称
.程序集变量 _关卡数据目录, 文本型, , , 关卡数据存放的目录
.程序集变量 _关卡记录文件, 文本型, , , 记录当前用户所在关卡信息的文件
.程序集变量 匿名程序集变量_2867, 空白型, , , 
.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用
.局部变量 循环次数, 整数型, , , 
.局部变量 匿名局部变量_3008, 空白型, , , 
.局部变量 主关卡数据, 文本型, , "0", 
.局部变量 临时文本数组, 文本型, , "0", 
.局部变量 临时主关卡信息, 主关卡信息, , , 
.局部变量 匿名局部变量_3012, 空白型, , , 

重定义数组 (_主关卡数组, 假, 0)

 ' 配置目录跟文件路径信息
赋值 (_关卡名称格式, “Stage#stageid#.dat”)
赋值 (_关卡数据目录, 相加 (取运行目录 (), “\Data\”))
赋值 (_关卡记录文件, 相加 (_关卡数据目录, “StageNow.dat”))
赋值 (_主关卡文件, 相加 (_关卡数据目录, “StageList.dat”))

 ' 获取主关卡所有关卡的信息
 ' 本处通过分割关键文本的方式来提取相应的信息
赋值 (主关卡数据, 分割文本 (到文本 (读入文件 (_主关卡文件)), #换行符, 7))
.如果真 (不等于 (取数组成员数 (主关卡数据), 7))
    返回 ()
.如果真结束
.计次循环首 (7, 循环次数)
    赋值 (临时文本数组, 分割文本 (主关卡数据 [循环次数], #关键字分隔符1, 4))
    .如果真 (等于 (取数组成员数 (临时文本数组), 4))
        赋值 (临时主关卡信息.关卡名称, 临时文本数组 [1])
        赋值 (临时主关卡信息.关卡说明, 临时文本数组 [2])
        赋值 (临时主关卡信息.十字标记左边, 到数值 (临时文本数组 [3]))
        赋值 (临时主关卡信息.十字标记顶边, 到数值 (临时文本数组 [4]))
        加入成员 (_主关卡数组, 临时主关卡信息)
    .如果真结束
    
.计次循环尾 ()


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 置当前关卡, 空白型, 公开, 设置保存当前关卡信息〔关卡索引〕
.参数 当前关卡索引, 整数型, , 
.参数 匿名参数_2912, 空白型, , 

 ' << 设置保存当前关卡信息〔关卡索引〕 >>
 ' 为了保证关卡数据的保密性，防止作弊行为，故加密后才存储当前关卡信息
加密保存索引 (当前关卡索引)


.子程序 取当前关卡, 整数型, 公开, 获取当前关卡信息〔关卡索引〕
.局部变量 当前关卡, 整数型, , , 
.局部变量 匿名局部变量_4883, 空白型, , , 

 ' << 获取当前关卡信息〔关卡索引〕 >>
赋值 (当前关卡, 提取加密索引 ())
 ' 判断关卡的范围
.如果真 (小于 (当前关卡, 1))
    赋值 (当前关卡, 1)
.如果真结束
返回 (当前关卡)


.子程序 是否当前关卡记录为空, 逻辑型, 公开, 判断当前关卡记录是否是空的
返回 (小于或等于 (到数值 (删首尾空 (到文本 (未知支持库函数_4 (读入文件 (_关卡记录文件), “3333”, #)))), 0))


.子程序 取当前关卡信息, 逻辑型, 公开, 获取当前关卡的所有信息
.参数 关卡信息存储变量, 关卡信息, 参考 可空, 用来存储记录当前关卡数据的信息
.参数 匿名参数_2972, 空白型, , 

.局部变量 临时文本数组, 文本型, , "0", 

 ' << 获取当前关卡的所有信息 >>
 ' 本处通过分割关键文本的方式来提取相应的信息
赋值 (临时文本数组, 分割文本 (到文本 (未知支持库函数_1 (读入文件 (相加 (_关卡数据目录, 子文本替换 (_关卡名称格式, “#stageid#”, 到文本 (取当前关卡 ()), , , 假))))), #关键字分隔符1, 6))
.如果真 (等于 (取数组成员数 (临时文本数组), 6))
    
    赋值 (关卡信息存储变量.图块种类, 到数值 (临时文本数组 [1]))
    赋值 (关卡信息存储变量.横向块数, 到数值 (临时文本数组 [2]))
    赋值 (关卡信息存储变量.纵向块数, 到数值 (临时文本数组 [3]))
    赋值 (关卡信息存储变量.图块宽度, 到数值 (临时文本数组 [4]))
    赋值 (关卡信息存储变量.图块高度, 到数值 (临时文本数组 [5]))
    赋值 (关卡信息存储变量.单图块连接时间, 到数值 (临时文本数组 [6]))
    
    返回 (真)
    
.如果真结束
返回 (假)


.子程序 置当前关卡信息, 空白型, 公开, 设置当前关卡的所有信息
.参数 关卡信息, 关卡信息, 参考 可空, 
.参数 匿名参数_3130, 空白型, , 

.局部变量 输出文本, 文本型, , , 
.局部变量 匿名局部变量_3139, 空白型, , , 

 ' << 设置当前关卡的所有信息 >>
赋值 (输出文本, 相加 (到文本 (关卡信息.图块种类), #关键字分隔符1, 到文本 (关卡信息.横向块数), #关键字分隔符1, 到文本 (关卡信息.纵向块数), #关键字分隔符1, 到文本 (关卡信息.图块宽度), #关键字分隔符1, 到文本 (关卡信息.图块高度), #关键字分隔符1, 到文本 (关卡信息.单图块连接时间)))
写到文件 (相加 (_关卡数据目录, 子文本替换 (_关卡名称格式, “#stageid#”, 到文本 (取当前关卡 ()), , , 假)), 未知支持库函数_0 (到字节集 (输出文本)))


.子程序 过关, 空白型, 公开, 过关处理
.局部变量 当前关卡, 整数型, , , 
.局部变量 匿名局部变量_2948, 空白型, , , 

 ' << 过关处理 >>
 ' 本处主要用来处理当前关卡
赋值 (当前关卡, 取当前关卡 ())
赋值 (当前关卡, 相加 (当前关卡, 1))
置当前关卡 (当前关卡)


.子程序 是否为主关卡, 逻辑型, 公开, 判断当前的关卡是否为主关卡
 ' << 判断当前的关卡是否为主关卡 >>
返回 (等于 (求余数 (取当前关卡 (), 5), 1))


.子程序 是否到最后关卡, 逻辑型, 公开, 判断当前关卡是否已经为最后关卡
 ' << 判断当前关卡是否已经为最后关卡 >>
返回 (大于 (取当前关卡 (), 30))


.子程序 加密保存索引, 空白型, , 加密并保存指定的索引信息
.参数 索引, 整数型, , 

 ' << 加密并保存指定的索引信息 >>
写到文件 (_关卡记录文件, 未知支持库函数_3 (到字节集 (到文本 (索引)), “3333”, #))


.子程序 提取加密索引, 整数型, , 提取被加密的索引信息
 ' << 提取被加密的索引信息 >>
返回 (到数值 (到文本 (未知支持库函数_4 (读入文件 (_关卡记录文件), “3333”, #))))


.子程序 取本关背景图片路径, 文本型, 公开, 获取当前关卡的背景路径信息
 ' << 获取当前关卡的背景路径信息 >>
返回 (取主关卡信息 (1))


.子程序 取本关动画图片路径, 文本型, 公开, 获取当前关卡动画图片路径
 ' << 获取当前关卡动画图片路径 >>
返回 (取主关卡信息 (2))


.子程序 取主关卡信息, 文本型, 公开, 获取当前主关卡的各种信息
.参数 关卡索引, 整数型, 可空, 默认为当前主关卡索引
.参数 信息类型, 整数型, , 0.关卡名称  1.关卡背景图片路径  2.关卡动画图片路径  3.关卡说明  4.关卡十字标记左边位置  5.关卡十字标记顶边位置  6.关卡索引
.参数 匿名参数_3285, 空白型, , 

 ' << 获取当前主关卡的各种信息 >>

 ' 判断主关卡信息的合法性，如果无效则返回空
.如果真 (等于 (0, 取数组成员数 (_主关卡数组)))
    返回 (“”)
.如果真结束

 ' 判断是否为获取当前关所在的主关卡信息，如果是则获取当前主关卡的索引
.如果真 (小于或等于 (关卡索引, 0))
    赋值 (关卡索引, 相加 (整除 (相减 (取当前关卡 (), 1), 5), 1))
.如果真结束
.如果真 (大于 (关卡索引, 取数组成员数 (_主关卡数组)))
    赋值 (关卡索引, 取数组成员数 (_主关卡数组))
.如果真结束

 ' 判断并返回要获取的类型的信息
.判断开始 (等于 (信息类型, 0))
     ' 关卡名称
    返回 (_主关卡数组 [关卡索引], 关卡名称)
    
.判断 (等于 (信息类型, 1))
     ' 关卡背景图片路径
    返回 (相加 (取运行目录 (), “\Background\”, _主关卡数组 [关卡索引], 关卡名称, “.jpg”))
    
.判断 (等于 (信息类型, 2))
     ' 关卡动画图片路径
    返回 (相加 (取运行目录 (), “\Images\”, _主关卡数组 [关卡索引], 关卡名称, “.gif”))
    
.判断 (等于 (信息类型, 3))
     ' << 关卡说明 >>
    返回 (_主关卡数组 [关卡索引], 关卡说明)
    
.判断 (等于 (信息类型, 4))
     ' << 关卡左边 >>
    返回 (到文本 (_主关卡数组 [关卡索引], 十字标记左边))
    
.判断 (等于 (信息类型, 5))
     ' << 关卡顶边 >>
    返回 (到文本 (_主关卡数组 [关卡索引], 十字标记顶边))
    
.判断 (等于 (信息类型, 6))
     ' << 关卡说明 >>
    返回 (到文本 (关卡索引))
    
.默认
    返回 (“”)
.判断结束


.子程序 取当前背景音乐路径, 文本型, 公开, 获取当前关卡的背景音乐路径
 ' << 获取当前关卡的背景音乐路径 >>
返回 (相加 (取运行目录 (), “\Music\”, 到文本 (取当前关卡 ()), “.mid”))


.程序集 扩充程序集, , , 存放所有控件事件外的事件，方便管理

.子程序 置记录页面, 空白型, , 记录当前选择夹页面的名称，通过取记录页面可以获取记录的页面名称
赋值 (_记录页面, _启动窗口.取子夹名称 (., 相加 (_启动窗口..现行子夹, 1)))


.子程序 取记录页面, 文本型, , 返回通过　置记录页面〔〕记录的页面名称
返回 (_记录页面)


.子程序 刷新道具数量, 空白型, , 刷新并显示道具的数量信息
 ' << 刷新并显示道具的数量信息 >>
赋值 (_启动窗口..标题, 到文本 (_启动窗口.取道具数量 (., “提示道具”)))
赋值 (_启动窗口..标题, 到文本 (_启动窗口.取道具数量 (., “打乱道具”)))


.子程序 置为载入状态, 空白型, , 设置当前页面为载入页面〔传说中的Loading...〕
选择夹子夹名称跳转 (_启动窗口., “载入界面”)


.子程序 用户排行_显示排行, 空白型, , 显示用户排行榜数据
.局部变量 循环次数, 整数型, , , 
.局部变量 用户名称, 文本型, , , 
.局部变量 用户分数, 整数型, , , 
.局部变量 总循环次数, 整数型, , , 
.局部变量 匿名局部变量_4724, 空白型, , , 
.局部变量 表列_用户名次, 文本型, , , 
.局部变量 表列_用户名称, 文本型, , , 
.局部变量 表列_用户分数, 文本型, , , 
.局部变量 匿名局部变量_4728, 空白型, , , 

赋值 (总循环次数, _启动窗口.取排行榜数据数量 (.))

.计次循环首 (总循环次数, 循环次数)
    
    _启动窗口.取排行榜数据 (., 循环次数, 用户名称, 用户分数)
    赋值 (表列_用户名次, 相加 (表列_用户名次, 到文本 (循环次数), #换行符))
    赋值 (表列_用户名称, 相加 (表列_用户名称, 到文本 (用户名称), #换行符))
    赋值 (表列_用户分数, 相加 (表列_用户分数, 到文本 (用户分数), #换行符))
    
.计次循环尾 ()

赋值 (_启动窗口..内容, 表列_用户名次)
赋值 (_启动窗口..内容, 表列_用户名称)
赋值 (_启动窗口..内容, 表列_用户分数)


.子程序 地图_隐藏, 空白型, , 取消游戏地图的显示
游戏控制_取消暂停 ()
选择夹子夹名称跳转 (_启动窗口., “游戏界面”)


.子程序 地图_显示, 空白型, , 显示游戏地图
游戏控制_暂停 (真)
选择夹子夹名称跳转 (_启动窗口., “游戏地图”)


.子程序 游戏控制_开始, 空白型, , 开始游戏
.参数 本局限定时间, 整数型, 可空, 
.参数 匿名参数_4730, 空白型, , 

_启动窗口.新局 (.)
_启动窗口.绘制当前页面 (.)

.如果真 (取反 (是否为空 (本局限定时间)))
    _启动窗口.时间_开始 (., 本局限定时间)
.如果真结束

背景音乐_播放 ()


.子程序 游戏控制_暂停, 空白型, , 暂停游戏
.参数 停止暂停界面跳转, 逻辑型, 可空, 

.如果真 (或者 (等于 (_启动窗口.取当前游戏状态 (.), 2), 等于 (_启动窗口.取当前游戏状态 (.), 1)))
    返回 ()
.如果真结束
_启动窗口.时间_暂停 (.)
.如果真 (是否为空 (停止暂停界面跳转))
    赋值 (停止暂停界面跳转, 假)
.如果真结束

.如果真 (等于 (假, 停止暂停界面跳转))
    选择夹子夹名称跳转 (_启动窗口., “暂停界面”)
.如果真结束

背景音乐_暂停 ()


.子程序 游戏控制_取消暂停, 空白型, , 取消游戏的暂停
.如果真 (等于 (_启动窗口.取当前游戏状态 (.), 2))
    返回 ()
.如果真结束

_启动窗口.时间_取消暂停 (.)

背景音乐_取消暂停 ()


.子程序 游戏控制_停止, 空白型, , 停止游戏
_启动窗口.时间_停止 (.)


.子程序 游戏音效_播放, 空白型, , 播放指定的音效
.参数 音效索引, 整数型, , 0.选择  1.取消选择  2.连接  3.连接失败  4.提示　5.打乱
.参数 匿名参数_4732, 空白型, , 

.局部变量 音效目录, 文本型, , , 
.局部变量 是否已载入, 逻辑型, 静态, , 
.局部变量 匿名局部变量_4735, 空白型, , , 

赋值 (音效目录, 相加 (取运行目录 (), “\Sound\”))
.如果真 (取反 (_设置_游戏音效))
    返回 ()
.如果真结束
_启动窗口.未知支持库函数_57 (.)
.判断开始 (等于 (音效索引, 0))
    _启动窗口.未知支持库函数_56 (., 相加 (音效目录, “CHOOSE.wav”))
.判断 (等于 (音效索引, 1))
    _启动窗口.未知支持库函数_56 (., 相加 (音效目录, “DISCHOOSE.wav”))
.判断 (等于 (音效索引, 2))
    _启动窗口.未知支持库函数_56 (., 相加 (音效目录, “LINK.wav”))
.判断 (等于 (音效索引, 3))
    _启动窗口.未知支持库函数_56 (., 相加 (音效目录, “CANTLINK.wav”))
.判断 (等于 (音效索引, 4))
    _启动窗口.未知支持库函数_56 (., 相加 (音效目录, “HELP.wav”))
.判断 (等于 (音效索引, 5))
    _启动窗口.未知支持库函数_56 (., 相加 (音效目录, “CHANGEPAGE.wav”))
.默认
    
.判断结束

_启动窗口.未知支持库函数_66 (., -1)


.子程序 背景音乐_播放, 空白型, , 播放背景音乐
.参数 匿名参数_4736, 空白型, , 

_启动窗口.未知支持库函数_57 (.)
_启动窗口.未知支持库函数_56 (., _启动窗口.取当前背景音乐路径 (.))
_启动窗口.未知支持库函数_66 (., 1)
_启动窗口.取当前背景音乐路径 (.)


.子程序 处理事件_背景音乐, 空白型, , 保证游戏背景音乐可以循环播放的处理事件
 ' << 保证游戏背景音乐可以循环播放的处理事件 >>
.如果 (_设置_背景音乐)
    .如果 (等于 (_启动窗口.取游戏状态 (.), 0))
        .如果真 (不等于 (_启动窗口.未知支持库函数_61 (.), 1))
            _启动窗口.未知支持库函数_66 (., 1)
        .如果真结束
        
    .否则
        .如果真 (等于 (_启动窗口.取游戏状态 (.), 2))
            .如果真 (不等于 (_启动窗口.未知支持库函数_61 (.), 2))
                _启动窗口.未知支持库函数_68 (.)
            .如果真结束
            
        .如果真结束
        
    .如果结束
    
.否则
    .如果真 (不等于 (_启动窗口.未知支持库函数_61 (.), 2))
        _启动窗口.未知支持库函数_68 (.)
    .如果真结束
    
.如果结束


.子程序 背景音乐_暂停, 空白型, , 暂停背景音乐
_启动窗口.未知支持库函数_67 (.)


.子程序 背景音乐_取消暂停, 空白型, , 取消背景音乐的暂停
_启动窗口.未知支持库函数_66 (., -1)


.子程序 选择夹子夹名称跳转, 空白型, , 指定选择夹通过名称跳转
.参数 选择夹, 选择夹, , 被跳转的选择夹
.参数 子夹名称, 文本型, , 当前页面的名称
.参数 匿名参数_4739, 空白型, , 

.局部变量 循环次数, 整数型, , , 
.局部变量 用户列表, 列表框, , , 
.局部变量 匿名局部变量_4741, 空白型, , , 

 ' << 指定选择夹通过名称跳转 >>

 ' 先设置所有需设定默认属性相关的按钮为正常
赋值 (_启动窗口.., 0)
赋值 (_启动窗口.., 0)
赋值 (_启动窗口.., 0)
赋值 (_启动窗口.., 0)
赋值 (_启动窗口.., 0)
赋值 (_启动窗口.., 0)
赋值 (_启动窗口.., 0)
赋值 (_启动窗口.., 0)

 ' 根据当前要跳转的界面来做相应的初始化
.判断开始 (等于 (“更改名称”, 子夹名称))
    _启动窗口.获取焦点 (.)
    赋值 (_启动窗口.., 1)
    
.判断 (等于 (“用户选择”, 子夹名称))
    赋值 (_启动窗口.., 1)
    
.判断 (等于 (“关于界面”, 子夹名称))
    赋值 (_启动窗口.., 1)
    
.判断 (等于 (“游戏地图”, 子夹名称))
    赋值 (_启动窗口.., 1)
    
.判断 (等于 (“暂停界面”, 子夹名称))
    赋值 (_启动窗口.., 1)
    
.判断 (等于 (“用户排行”, 子夹名称))
    赋值 (_启动窗口.., 1)
    用户排行_显示排行 ()
    
.判断 (等于 (“过关动画”, 子夹名称))
    赋值 (_启动窗口.., 1)
    赋值 (_启动窗口..内容, 取文本 (“吼吼，终于到了%s”, _启动窗口.取主关卡信息 (., , 0)))
    赋值 (_启动窗口..标题, 取文本 (“%s：%s”, _启动窗口.取主关卡信息 (., , 0), _启动窗口.取主关卡信息 (., , 3)))
    赋值 (_启动窗口..图片, 读入文件 (_启动窗口.取主关卡信息 (., , 2)))
    赋值 (_启动窗口.., _启动窗口.是否到最后关卡 (.))
    赋值 (_启动窗口..内容, 选择 (_启动窗口.是否到最后关卡 (.), “您已经到了最终地点，请点[领取奖品]来获取宝物呕！”, “让我们去探索这个地方的密秘吧！”))
    
.判断 (等于 (“系统设置”, 子夹名称))
    赋值 (_启动窗口.., 1)
    赋值 (_启动窗口..选中, _设置_背景音乐)
    赋值 (_启动窗口..选中, _设置_游戏音效)
    赋值 (_启动窗口..选中, _设置_自动选中)
    赋值 (_启动窗口..选中, _设置_连线反向)
    
.默认
    
.判断结束

赋值 (_启动窗口..可视, 不等于 (“游戏界面”, 子夹名称))

 ' 通过名称跳转到指定的界面
.计次循环首 (选择夹.取子夹数目 (), 循环次数)
    .如果真 (等于 (选择夹.取子夹名称 (循环次数), 子夹名称))
        赋值 (选择夹.现行子夹, 相减 (循环次数, 1))
        跳出循环 ()
    .如果真结束
    
.计次循环尾 ()


.子程序 系统设置_读取设置, 空白型, , 读取系统设置
 ' << 读取系统设置 >>
赋值 (_设置_背景音乐, 选择 (等于 (“1”, 读配置项 (_设置_配置文件, “Config”, “Background”, “1”)), 真, 假))
赋值 (_设置_游戏音效, 选择 (等于 (“1”, 读配置项 (_设置_配置文件, “Config”, “MusicRander”, “1”)), 真, 假))
赋值 (_设置_自动选中, 选择 (等于 (“1”, 读配置项 (_设置_配置文件, “Config”, “AutoSelect”, “1”)), 真, 假))
赋值 (_设置_连线反向, 选择 (等于 (“1”, 读配置项 (_设置_配置文件, “Config”, “ReverseLink”, “1”)), 真, 假))


.子程序 系统设置_写出设置, 空白型, , 写出系统设置
 ' << 写出系统设置 >>
写配置项 (_设置_配置文件, “Config”, “Background”, 选择 (_设置_背景音乐, “1”, “0”))
写配置项 (_设置_配置文件, “Config”, “MusicRander”, 选择 (_设置_游戏音效, “1”, “0”))
写配置项 (_设置_配置文件, “Config”, “AutoSelect”, 选择 (_设置_自动选中, “1”, “0”))
写配置项 (_设置_配置文件, “Config”, “ReverseLink”, 选择 (_设置_连线反向, “1”, “0”))


.子程序 主菜单_执行命令, 空白型, , 通过获取的命令执行相应的事件
.参数 被执行的命令, 文本型, , 
.参数 匿名参数_4821, 空白型, , 

.判断开始 (等于 (#执行命令_更改名称, 被执行的命令))
    赋值 (_启动窗口..现行选中项, 相减 (_启动窗口.用户列表_取用户索引 (., _启动窗口.取当前用户名 (.)), 1))
    选择夹子夹名称跳转 (_启动窗口., “用户选择”)
    
.判断 (等于 (#执行命令_继续游戏, 被执行的命令))
    .如果真 (_启动窗口.是否当前关卡记录为空 (.))
        .如果真 (不等于 (信息框 (“你还未曾开启过旅程！您决定现在就开始全新的旅程吗？”, 相加 (#确认取消钮, #询问图标), “开始新的旅程”), #确认钮))
            返回 ()
        .如果真结束
        
    .如果真结束
    .如果真 (_启动窗口.是否到最后关卡 (.))
        信息框 (“您已经完成所有旅程了，只能重新开始一次旅程！”, 0, “已完成所有旅程”)
        返回 ()
    .如果真结束
    _图形按钮_游戏界面_重新开始_被单击 ()
    
.判断 (等于 (#执行命令_新的旅程, 被执行的命令))
    .如果真 (取反 (_启动窗口.是否当前关卡记录为空 (.)))
        .如果真 (不等于 (信息框 (“您真的决定开始全新的旅程吗？这样过去游戏记录将会被完全清除！”, 相加 (#询问图标, #确认取消钮), “是否开始全新旅程？”), #确认钮))
            返回 ()
        .如果真结束
        
    .如果真结束
    _启动窗口.用户_冻结排行榜记录 (., _启动窗口.取当前用户名 (.))
    _启动窗口.重新统计分数 (.)
    _启动窗口.置当前关卡 (., 1)
    _启动窗口.用户_置当前关卡 (., 1)
    _图形按钮_游戏界面_重新开始_被单击 ()
    
.判断 (等于 (#执行命令_游戏设置, 被执行的命令))
    置记录页面 ()
    选择夹子夹名称跳转 (_启动窗口., “系统设置”)
    
.判断 (等于 (#执行命令_关于游戏, 被执行的命令))
    置记录页面 ()
    选择夹子夹名称跳转 (_启动窗口., “关于界面”)
    
.判断 (等于 (#执行命令_退出游戏, 被执行的命令))
    结束 ()
    
.判断 (等于 (#执行命令_用户排行, 被执行的命令))
    置记录页面 ()
    选择夹子夹名称跳转 (_启动窗口., “用户排行”)
    
.默认
    
.判断结束


.子程序 主菜单_地址取执行命令, 文本型, , 通过网页地址获取执行的命令
.参数 页面地址, 文本型, , 
.参数 匿名参数_4823, 空白型, , 

.局部变量 执行命令, 文本型, , "0", 
.局部变量 匿名局部变量_4825, 空白型, , , 

 ' << 通过网页地址获取执行的命令 >>
赋值 (执行命令, 分割文本 (_启动窗口.., #执行命令分割符, ))
.如果真 (大于 (取数组成员数 (执行命令), 1))
    返回 (执行命令 [取数组成员数 (执行命令)])
.如果真结束
返回 (“”)


.子程序 地图_置地图说明, 空白型, , 设置地图的说明信息
.参数 地图索引, 整数型, , 
.参数 匿名参数_4827, 空白型, , 

.局部变量 索引记录, 整数型, 静态, , 
.局部变量 输出文本, 文本型, , , 
.局部变量 匿名局部变量_4830, 空白型, , , 

.如果真 (不等于 (索引记录, 地图索引))
    赋值 (输出文本, 选择 (等于 (地图索引, 到数值 (_启动窗口.取主关卡信息 (., , 6))), “[当前位置]”, “”))
    赋值 (输出文本, 相加 (输出文本, _启动窗口.取主关卡信息 (., 地图索引, 0)))
    赋值 (输出文本, 相加 (输出文本, “：”))
    赋值 (输出文本, 相加 (输出文本, _启动窗口.取主关卡信息 (., 地图索引, 3)))
    赋值 (_启动窗口..内容, 输出文本)
    赋值 (索引记录, 地图索引)
.如果真结束


.子程序 读取用户关卡信息, 空白型, , 
_启动窗口.置当前关卡 (., _启动窗口.用户_取当前关卡 (.))


.子程序 写入用户关卡信息, 空白型, , 
_启动窗口.用户_置当前关卡 (., _启动窗口.取当前关卡 (.))


.子程序 用户选择_刷新显示用户列表, 空白型, , 
.局部变量 循环次数, 整数型, , , 
.局部变量 总循环次数, 整数型, , , 
.局部变量 显示列表框, 列表框, , , 
.局部变量 用户名称数组, 文本型, , "0", 
.局部变量 匿名局部变量_5488, 空白型, , , 

赋值 (显示列表框, _启动窗口.)
赋值 (总循环次数, _启动窗口.用户列表_取名称列表 (., 用户名称数组))
显示列表框.清空 ()
.计次循环首 (总循环次数, 循环次数)
    显示列表框.加入项目 (用户名称数组 [循环次数], )
.计次循环尾 ()


.子程序 用户选择_更改名称, 空白型, , 
.如果真 (小于 (_启动窗口..现行选中项, 0))
    信息框 (“请先选择一个用户！”, 0, “请选择用户”)
    返回 ()
.如果真结束
赋值 (_启动窗口., _启动窗口.取项目文本 (., _启动窗口..现行选中项))
赋值 (_启动窗口., #名称处理模式_更改名称)
赋值 (_启动窗口..内容, _启动窗口.)
选择夹子夹名称跳转 (_启动窗口., “更改名称”)


.子程序 用户选择_添加用户, 空白型, , 
赋值 (_启动窗口., #名称处理模式_添加用户)
赋值 (_启动窗口..内容, “”)
选择夹子夹名称跳转 (_启动窗口., “更改名称”)



 ' 不属于任何一个程序集、类模块的函数：
