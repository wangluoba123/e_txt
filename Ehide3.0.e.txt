 ' 文件类型：Windows窗口程序

 ' 程序名称：强力隐藏
 ' 程序描述：
 ' 程序作者：西风
 ' 邮政编码：226200
 ' 联系地址：江苏省启东市卫生监督所
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：westwindxp@163.com
 ' 主页地址：
 ' 版权声明：
 ' 版本号：2.0
 ' 创建号：0.0

窗口 _启动窗口
    左边 = 50
    顶边 = 50
    宽度 = 477
    高度 = 327
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 假
    禁止 = 假
    边框 = 0
    底图方式 = 1
    底色 = 15663103 '  0xEEFFFF
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “强力隐藏 V3.0”
    帮助文件名 = “”

窗口 输入密码窗口
    左边 = 50
    顶边 = 50
    宽度 = 334
    高度 = 202
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = 15527148 '  0xECECEC
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 真
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “警告”
    帮助文件名 = “”

窗口 设置密码窗口
    左边 = 50
    顶边 = 50
    宽度 = 388
    高度 = 134
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = 15527148 '  0xECECEC
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “设置密码”
    帮助文件名 = “”



.常量 WS_SYSMENU, "524288", , 
.常量 , , , 
.常量 TB_HIDEBUTTON, "1028", , 
.常量 TB_GETBUTTONTEXTA, "1069", , 
.常量 TB_BUTTONCOUNT, "1048", , 
.常量 TB_GETBUTTONINFOA, "1089", , 
.常量 , , , 
.常量 STANDARD_RIGHTS_REQUIRED, "983040", , 
.常量 SYNCHRONIZE, "1048576", , 
.常量 PROCESS_ALL_ACCESS, "2035711", , STANDARD_RIGHTS_REQUIRED or SYNCHRONIZE or 4095
.常量 PAGE_READWRITE, "4", , 
.常量 , , , 
.常量 TBIF_BYINDEX, "2147483648", , 
.常量 TBIF_COMMAND, "32", , 
.常量 TBIF_STATE, "4", , 
.常量 TBIF_STYLE, "8", , 
.常量 TBIF_IMAGE, "1", , 
.常量 TBIF_LPARAM, "16", , 
.常量 TBIF_SIZE, "64", , 
.常量 TBIF_TEXT, "2", , 
.常量 , , , 
.常量 MEM_COMMIT, "4096", , 
.常量 MEM_DECOMMIT, "16384", , 
.常量 , , , 
.常量 NIF_ICON, "2", , 
.常量 NIF_TIP, "4", , 
.常量 NIF_MESSAGE, "1", , 
.常量 , , , 
.常量 WM_LBUTTONDOWN, "513", , 
.常量 , , , 
.常量 NIM_ADD, "0", , 添加
.常量 NIM_DELETE, "2", , 删除
.常量 , , , 
.图片 图标, " ' 已保存到：D:\易语言学习\Data\Ehide3.0.e\图标", , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 4 系统核心支持库
 ' iext 27bb20fdd3e145e4bee3db39ddd6e64c 1 2 扩展界面支持库一
 ' iext3 {B6F7542F-B8FE-46a8-9605-98856A687097} 2 6 扩展界面支持库三
 ' iext2 AF6AD80AA4244A59AFB3D83ECF5173CC 1 1 扩展界面支持库二
 ' eMMedia 824F144B108A4bcbB966F45670D42A00 2 4 多媒体支持库
 ' eAPI F7FC1AE45C5C4758AF03EF19F18A395D 1 1 应用接口支持库
 ' shell 52F260023059454187AF826A3C07AF2A 1 0 操作系统界面功能支持库
 ' dp1 4BB4003860154917BC7D8230BF4FA58A 1 0 数据操作支持库一
 ' spec A512548E76954B6E92C21055517615B0 2 1 特殊功能支持库




数据类型 模块信息, , 
    .成员 size, 整数型, , , 
    .成员 mid, 整数型, , , 
    .成员 pid, 整数型, , , 
    .成员 gusage, 整数型, , , 
    .成员 pusage, 整数型, , , 
    .成员 base, 整数型, , , 
    .成员 bsize, 整数型, , , 
    .成员 hmodule, 整数型, , , 
    .成员 szname, 字节型, , "256", 
    .成员 szpath, 字节型, , "256", 

数据类型 按键信息, , 
    .成员 虚拟码, 整数型, , , 
    .成员 扫描码, 整数型, , , 
    .成员 标记, 整数型, , , 
    .成员 时间, 整数型, , , 
    .成员 额外信息, 整数型, , , 

数据类型 矩形, , 
    .成员 left, 空白型, , , 
    .成员 top, 空白型, , , 
    .成员 right, 空白型, , , 
    .成员 bottom, 空白型, , , 

数据类型 TBBUTTONINFO, , 
    .成员 cbSize, 整数型, , , 32
    .成员 dwMask, 整数型, , , 
    .成员 idCommand, 整数型, , , 
    .成员 iImage, 整数型, , , 
    .成员 fsState, 字节型, , , 
    .成员 fsStyle, 字节型, , , 
    .成员 cx, 短整数型, , , 
    .成员 lParam, 整数型, , , 
    .成员 pszText, 整数型, , , 
    .成员 cchText, 整数型, , , 

数据类型 NOTIFYICONDATA, , 
    .成员 cbSize, 空白型, , , 
    .成员 hwnd, 空白型, , , 
    .成员 uId, 空白型, , , 
    .成员 uFlags, 空白型, , , 
    .成员 ucallbackMessage, 空白型, , , 
    .成员 hIcon, 空白型, , , 
    .成员 szTip, 字节型, , "64", 

数据类型 点, , 
    .成员 x, 整数型, , , 
    .成员 y, 整数型, , , 

.全局变量 现行分类编码, 文本型, , , 
.全局变量 查找句柄, 整数型, , , 
.全局变量 匿名全局变量_1488, 空白型, , , 
.全局变量 鼠标钩子句柄, 整数型, , , 鼠标钩子
.全局变量 键盘钩子句柄, 整数型, , , 键盘钩子
.全局变量 匿名全局变量_1489, 空白型, , , 
.全局变量 密码正确, 逻辑型, , , 

.DLL命令 复制内存, 空白型, "", "RtlMoveMemory", , 
    .参数 Destination, 按键信息, , 
    .参数 Source, 整数型, , 
    .参数 cbCopy, 整数型, , 

.DLL命令 发送回调消息, 整数型, "user32.dll", "SendMessageCallbackA", , 返回非0表示成功
    .参数 hWnd, 空白型, , 
    .参数 Msg, 空白型, , 
    .参数 wParam, 空白型, , 
    .参数 IParam, 空白型, , 
    .参数 IpResultCallBack, 子程序指针, , 
    .参数 dwData, 空白型, , 

.DLL命令 第一个模块, 整数型, "", "Module32First", , 
    .参数 hsnap, 整数型, , 
    .参数 mod, 模块信息, , 

.DLL命令 创建快照, 整数型, "", "CreateToolhelp32Snapshot", , 
    .参数 falg, 整数型, , 
    .参数 id, 整数型, , 

.DLL命令 取窗口进程, 整数型, "", "GetWindowThreadProcessId", , 
    .参数 句柄, 整数型, , 
    .参数 进程ID, 整数型, 传址, 

.DLL命令 安装钩子, 整数型, "", "SetWindowsHookExA", , 
    .参数 ihook, 整数型, , 
    .参数 lpfunc, 子程序指针, , 
    .参数 hin, 整数型, , 
    .参数 threadid, 整数型, , 

.DLL命令 取模块句柄, 整数型, "", "GetModuleHandleA", , 
    .参数 M, 整数型, , 

.DLL命令 下一个钩子, 整数型, "", "CallNextHookEx", , 
    .参数 hook, 整数型, , 
    .参数 icode, 整数型, , 
    .参数 wparam, 整数型, , 
    .参数 lparam, 整数型, , 

.DLL命令 卸载钩子, 整数型, "user32.dll", "UnhookWindowsHookEx", , 卸载一个钩子
    .参数 hook, 整数型, , 

.DLL命令 置窗口特征, 子程序指针, "", "SetWindowLongA", , 
    .参数 窗口句柄, 整数型, , 
    .参数 特征索引, 整数型, , 
    .参数 新特征, 子程序指针, , 

.DLL命令 执行窗口程序, 整数型, "", "CallWindowProcA", , 
    .参数 窗口程序程序指针, 子程序指针, , 
    .参数 窗口句柄, 整数型, , 
    .参数 消息, 整数型, , 
    .参数 参数1, 整数型, , 
    .参数 参数2, 整数型, , 

.DLL命令 窗口是否可见, 整数型, "", "IsWindowVisible", , 
    .参数 hwnd, 整数型, , 

.DLL命令 俘获鼠标, 空白型, "", "SetCapture", , 
    .参数 窗口句柄, 整数型, , 

.DLL命令 释放鼠标, 空白型, "", "ReleaseCapture", , 

.DLL命令 取消鼠标限制, 整数型, "", "ClipCursor", , 如果成功，返回值非零
    .参数 lpRect, 整数型, 传址, 取0

.DLL命令 限制鼠标位置, 整数型, "", "ClipCursor", , 如果成功，返回值非零
    .参数 lpRect, 矩形, 传址, 

.DLL命令 转换到屏幕坐标, 整数型, "", "ClientToScreen", , 
    .参数 句柄, 整数型, , 
    .参数 容器, 点, 传址, 

.DLL命令 取鼠标位置单元句柄, 整数型, "", "WindowFromPoint", , 
    .参数 x, 整数型, , 
    .参数 y, 整数型, , 

.DLL命令 发送消息, 整数型, "", "SendMessageA", , 
    .参数 句柄, 整数型, , 
    .参数 消息值, 整数型, , 
    .参数 容器尺寸, 整数型, , 255
    .参数 容器, 文本型, , 长度255的空文本

.DLL命令 取单元类型, 整数型, "", "GetClassNameA", , 
    .参数 句柄, 整数型, , 
    .参数 缓冲容器, 文本型, , 长度255
    .参数 缓冲尺寸, 整数型, , 255

.DLL命令 注册热键, 整数型, "", "RegisterHotKey", , 非0表示成功
    .参数 句柄, 整数型, , 
    .参数 标识, 整数型, , 
    .参数 功能键, 整数型, , 无为0；ALT为1；Ctrl为2；SHIFT为4；WIN键为8
    .参数 键代码, 整数型, , 

.DLL命令 检查消息队列, 整数型, "", "PeekMessageA", , 
    .参数 消息, 整数型, 数组, 
    .参数 句柄, 整数型, , 
    .参数 第一个消息, 整数型, , 
    .参数 最后一个消息, 整数型, , 
    .参数 移除消息, 整数型, , 

.DLL命令 撤销热键, 整数型, "", "UnregisterHotKey", , 
    .参数 句柄, 整数型, , 
    .参数 标识, 整数型, , 

.DLL命令 置窗口可视属性, 整数型, "", "ShowWindowAsync", , 
    .参数 窗口, 整数型, , 
    .参数 窗口状态, 整数型, , 0隐藏;5显示

.DLL命令 寻找子窗口, 整数型, "user32", "FindWindowExA", , 
    .参数 hWnd1, 整数型, , 
    .参数 hWnd2, 整数型, , 
    .参数 lpsz1, 文本型, , 
    .参数 lpsz2, 文本型, , 

.DLL命令 寻找子窗口1, 整数型, "user32", "FindWindowExA", , 
    .参数 hWnd1, 整数型, , 
    .参数 hWnd2, 整数型, , 
    .参数 lpsz1, 整数型, , 
    .参数 lpsz2, 整数型, , 

.DLL命令 查找窗口, 整数型, "", "FindWindowA", , 
    .参数 lpClassName, 文本型, , 0
    .参数 lpWindowName, 文本型, , 标题

.DLL命令 置弹出窗口可视属性, 整数型, "", "ShowOwnedPopups", , 
    .参数 窗口, 整数型, , 
    .参数 是否隐藏, 整数型, , 0隐藏1显示

.DLL命令 调用关于窗口, 空白型, "", "ShellAboutA", , 
    .参数 窗口句柄, 整数型, , 
    .参数 窗口标签, 文本型, , 
    .参数 程序说明, 文本型, , 
    .参数 图标, 整数型, , 

.DLL命令 取窗口标题, 整数型, "", "GetWindowTextA", , 
    .参数 窗口句柄, 整数型, , 
    .参数 标题, 文本型, , 
    .参数 标题长度, 整数型, , 

.DLL命令 取窗口条目, 整数型, "user32.dll", "GetWindowLongA", , 
    .参数 hwnd, 整数型, , 
    .参数 nIndex, 整数型, , 

.DLL命令 置窗口条目, 整数型, "user32.dll", "SetWindowLongA", , 
    .参数 hwnd, 整数型, , 
    .参数 nIndex, 整数型, , 
    .参数 dwNewLong, 整数型, , 

.DLL命令 取桌面句柄, 整数型, "", "GetDesktopWindow", , 

.DLL命令 枚举窗口, 空白型, "", "EnumWindows", , 
    .参数 枚举回调, 子程序指针, , 
    .参数 参数1, 整数型, , 

.DLL命令 寻找子窗口2, 整数型, "user32", "FindWindowExA", , 
    .参数 hWnd1, 整数型, , 
    .参数 hWnd2, 整数型, , 
    .参数 lpsz1, 文本型, , 
    .参数 lpsz2, 整数型, , 

.DLL命令 消息_图标操作, 整数型, "user32", "SendMessageA", , 
    .参数 hwnd, 整数型, , 
    .参数 wMsg, 整数型, , 
    .参数 wParam, 整数型, , 要隐藏的图标，从0开始
    .参数 lParam, 整数型, , Any型,根据需要可以设置成不同的类型

.DLL命令 取窗口线程标识, 整数型, "user32.dll", "GetWindowThreadProcessId", , 
    .参数 hwnd, 整数型, , 
    .参数 lpdwProcessId, 整数型, 传址, 

.DLL命令 打开进程, 整数型, "kernel32.dll", "OpenProcess", , 
    .参数 dwDesiredAccessas, 整数型, , 
    .参数 bInheritHandle, 整数型, , 
    .参数 dwProcId, 整数型, , 

.DLL命令 DuplicateHandle, 整数型, "kernel32.dll", "DuplicateHandle", , 
    .参数 hSourceProcessHandle, 空白型, , 
    .参数 hSourceHandle, 空白型, , 
    .参数 hTargetProcessHandle, 空白型, , 
    .参数 lpTargetHandle, 空白型, 传址, 
    .参数 dwDesiredAccess, 空白型, , 
    .参数 bInheritHandle, 空白型, , 
    .参数 dwOptions, 空白型, , 

.DLL命令 取当前进程句柄, 整数型, "kernel32.dll", "GetCurrentProcess", , 

.DLL命令 关闭句柄, 整数型, "kernel32.dll", "CloseHandle", , 
    .参数 hObject, 空白型, , 

.DLL命令 VirtualAllocEx, 整数型, "kernel32.dll", "VirtualAllocEx", , 
    .参数 hProcess, 空白型, , 
    .参数 lpAddress, 空白型, , any
    .参数 dwSize, 空白型, , 
    .参数 flAllocationType, 空白型, , 
    .参数 flProtect, 空白型, , 

.DLL命令 修改托盘图标, 整数型, "", "Shell_NotifyIconA", , 
    .参数 dwMessage, 整数型, , 
    .参数 pnid, NOTIFYICONDATA, , 

.DLL命令 SwitchToThread, 整数型, "kernel32.dll", "SwitchToThread", , 

.DLL命令 lstrcpyn, 整数型, "", "lstrcpyn", , 
    .参数 lpString1, 字节型, 数组, 
    .参数 lpString2, 文本型, , 
    .参数 iMaxLength, 整数型, , 

.DLL命令 写进程内存, 整数型, "kernel32.dll", "WriteProcessMemory", , 
    .参数 hProcess, 空白型, , 
    .参数 lpBaseAddress, 空白型, , any
    .参数 lpBuffer, 空白型, , 
    .参数 nSize, 空白型, , 
    .参数 lpNumberOfBytesWritten, 空白型, , 

.DLL命令 读进程内存, 整数型, "kernel32.dll", "ReadProcessMemory", , 
    .参数 hProcess, 空白型, , 
    .参数 lpBaseAddress, 空白型, , any
    .参数 lpBuffer, 空白型, , any
    .参数 nSize, 空白型, , 
    .参数 lpNumberOfBytesWritten, 空白型, 传址, 

.DLL命令 VirtualFreeEx, 整数型, "kernel32.dll", "VirtualFreeEx", , 
    .参数 hProcess, 空白型, , 
    .参数 lpAddress, 空白型, , 
    .参数 dwSize, 空白型, , 
    .参数 dwFreeType, 空白型, , 

.DLL命令 消息框, 整数型, "", "MessageBoxA", , 
    .参数 句柄, 整数型, , 
    .参数 信息, 文本型, , 
    .参数 标题, 文本型, , 
    .参数 按钮, 整数型, , 

.窗口程序集 主窗口程序集, , , 

.程序集变量 数据文件, 文本型, , , 
.程序集变量 匿名程序集变量_2069, 空白型, , , 
.程序集变量 移动句柄, 整数型, , , 拖动放大镜获得的窗口句柄
.程序集变量 匿名程序集变量_2281, 空白型, , , 
.程序集变量 标题列表, 文本型, , "0", 
.程序集变量 选中标题, 文本型, , "0", 
.程序集变量 进程列表, 文本型, , "0", 
.程序集变量 选中进程, 文本型, , "0", 
.程序集变量 图标列表, 文本型, , "0", 
.程序集变量 选中图标, 文本型, , "0", 
.程序集变量 匿名程序集变量_2067, 空白型, , , 
.程序集变量 查看状态, 逻辑型, , , 是否在鼠标拖动放大镜取窗口标题或进程
.程序集变量 匿名程序集变量_2073, 空白型, , , 
.程序集变量 已隐藏的窗口, 整数型, , "0", 
.程序集变量 匿名程序集变量_2070, 空白型, , , 
.程序集变量 原来热键, 整数型, , "3,2", 
.程序集变量 鼠标双键, 整数型, , , 0无定义1隐藏列表窗口2显示列表窗口3隐藏和显示列表窗口
.程序集变量 鼠标中键, 整数型, , , 同上
.程序集变量 匿名程序集变量_867, 空白型, , , 
.程序集变量 是否正在隐藏, 逻辑型, , , 列表窗口是否已隐藏
.程序集变量 匿名程序集变量_2967, 空白型, , , 
.程序集变量 限制, 逻辑型, , , 鼠标是否已限制
.程序集变量 匿名程序集变量_1024, 空白型, , , 
.程序集变量 左键按下, 逻辑型, , , 左键是否按下
.程序集变量 右键按下, 逻辑型, , , 右键是否按下
.程序集变量 默认窗口程序, 子程序指针, , , 
.程序集变量 匿名程序集变量_1025, 空白型, , , 
.程序集变量 枚举句柄, 整数型, , "0", 
.程序集变量 QQ句柄, 空白型, , "0", 
.程序集变量 匿名程序集变量_1679, 空白型, , , 
.程序集变量 隐藏QQ窗口, 逻辑型, , , 
.程序集变量 匿名程序集变量_1946, 空白型, , , 
.程序集变量 ctrl键, 逻辑型, , , 
.子程序 __启动窗口_创建完毕, 空白型, , 
.局部变量 系统, 字节型, , , 
.局部变量 返回值, 整数型, , , 
.局部变量 钩子, 钩子处理, , , 
.局部变量 密码, 文本型, , , 

赋值 (_启动窗口., “强力隐藏 V3.0”)
 ' 以下代码使无边框窗口支持任务栏右键系统菜单
赋值 (返回值, 取窗口条目 (取窗口句柄 (), -16))
赋值 (返回值, 位或 (返回值, #WS_SYSMENU))
置窗口条目 (取窗口句柄 (), -16, 返回值)

 ' 判断是否NT操作系统
赋值 (系统, 取操作系统类别 ())
.如果 (等于 (系统, 3))
    2.未知支持库函数_69 (假)
.否则
    2.未知支持库函数_69 (真) ' NT操作系统不支持隐藏托盘图标
.如果结束
赋值 (., 0)

 ' 以下代码读取上次系统配置
赋值 (.选中, 等于 (取数值注册项 (#现行用户, “software\shide\option\autorun”, 0), 1))
赋值 (.选中, 等于 (取数值注册项 (#现行用户, “software\shide\option\allwaysontop”, 1), 1))
赋值 (.选中, .选中)
赋值 (_启动窗口., .选中)
赋值 (.选中, 等于 (取数值注册项 (#现行用户, “software\shide\option\trayico”, 1), 1))
.如果真 (.选中)
    置托盘图标 (#图标, “强力隐藏 V3.0”)
.如果真结束
赋值 (.选中, 等于 (取数值注册项 (#现行用户, “software\shide\option\enablekwin”, 0), 1))
赋值 (.选中, 等于 (取数值注册项 (#现行用户, “software\shide\option\autohide”, 0), 1))
赋值 (.选中, 等于 (取数值注册项 (#现行用户, “software\shide\option\nexit”, 1), 1))
赋值 (.选中, 等于 (取数值注册项 (#现行用户, “software\shide\option\hmainw”, 1), 1))
赋值 (.选中, 等于 (取数值注册项 (#现行用户, “software\shide\option\emableWin2”, 1), 1))
赋值 (.选中, 等于 (取数值注册项 (#现行用户, “software\shide\option\nvlaue”, 0), 1))
赋值 (.选中, 等于 (取数值注册项 (#现行用户, “software\shide\option\hdesktop”, 0), 1))
赋值 (.选中, 等于 (取数值注册项 (#现行用户, “software\shide\option\closescreen”, 0), 1))
赋值 (.选中, 等于 (取数值注册项 (#现行用户, “software\shide\option\hstartmenu”, 0), 1))
赋值 (.选中, 等于 (取数值注册项 (#现行用户, “software\shide\option\htray_wnd”, 0), 1))
赋值 (.选中, 等于 (取数值注册项 (#现行用户, “software\shide\option\htoolbar”, 0), 1))
赋值 (.选中, 等于 (取数值注册项 (#现行用户, “software\shide\option\scapture”, 0), 1))
赋值 (.选中, 等于 (取数值注册项 (#现行用户, “software\shide\option\wpwd”, 0), 1))
赋值 (., 取反 (.选中))
赋值 (密码, 取文本注册项 (#现行用户, “software\shide\option\pwh”, “”))
.如果 (等于 (密码, “”))
    赋值 (.内容, 密码)
.否则
    赋值 (.内容, 取重复文本 (12, “*”)) ' 以12个*代替密码文本
.如果结束
赋值 (.选中, 等于 (取数值注册项 (#现行用户, “software\shide\option\runfile”, 0), 1))
赋值 (.内容, 取文本注册项 (#现行用户, “software\shide\option\runfilename”, “”))
赋值 (., 取反 (.选中))

 ' 以下代码读取上次窗口设置
赋值 (数据文件, 子文本替换 (相加 (取运行目录 (), “\ehide.dat”), “\\”, “\”, , , 真))
读入 ()
赋值 (查看状态, 假)
赋值 (_启动窗口., 取反 (.选中))
桌面信息初始化 ()
读取热键 (1)
读取鼠标钩子 (1)
.如果真 (.选中)
    钩子.安装键盘钩子 ()
.如果真结束
_高级选择夹2_子夹被改变 () ' 通过此子程序，初始化界面相关标题及按钮


.子程序 读取热键, 空白型, , 
.参数 状态, 字节型, , 1启动时读取热键；2改变热键失败时恢复原有热键；3只读取组合框选项，不注册热键

.局部变量 窗口句柄, 整数型, , , 
.局部变量 容器1, 整数型, , , 
.局部变量 错误, 文本型, , , 

赋值 (.现行选中项, -1)
.计次循环首 (取项目数 (), 容器1) ' 根据注册表中保存的功能键键值，选择相应的组合框项目
    .如果真 (等于 (相减 (容器1, 1).取项目数值 (), 取数值注册项 (#现行用户, “software\shide\hotkey\hidewindows\function key”, 0)))
        赋值 (.现行选中项, 相减 (容器1, 1))
        跳出循环 ()
    .如果真结束
    
.计次循环尾 ()
赋值 (.现行选中项, -1)
.计次循环首 (取项目数 (), 容器1) ' 根据注册表中保存的热键键值，选择相应的组合框项目
    .如果真 (等于 (相减 (容器1, 1).取项目数值 (), 取数值注册项 (#现行用户, “software\shide\hotkey\hidewindows\press key”, #F1键)))
        赋值 (.现行选中项, 相减 (容器1, 1))
        跳出循环 ()
    .如果真结束
    
.计次循环尾 ()
赋值 (.选中, 等于 (取数值注册项 (#现行用户, “software\shide\hotkey\hidewindows\samekey”, 0), 1)) ' 是否显示和隐藏使用同样热键
.如果 (.选中)
    赋值 (.现行选中项, .现行选中项)
    赋值 (.现行选中项, .现行选中项)
    赋值 (.选中, .选中)
    赋值 (.选中, .选中)
    赋值 (.禁止, 真)
.否则
    赋值 (.禁止, 假)
    赋值 (.现行选中项, -1)
    .计次循环首 (取项目数 (), 容器1) ' 根据注册表中保存的功能键键值，选择相应的组合框项目
        .如果真 (等于 (相减 (容器1, 1).取项目数值 (), 取数值注册项 (#现行用户, “software\shide\hotkey\showwindows\function key”, 2)))
            赋值 (.现行选中项, 相减 (容器1, 1))
            跳出循环 ()
        .如果真结束
        
    .计次循环尾 ()
    赋值 (.现行选中项, -1)
    .计次循环首 (取项目数 (), 容器1) ' 根据注册表中保存的热键键值，选择相应的组合框项目
        .如果真 (等于 (相减 (容器1, 1).取项目数值 (), 取数值注册项 (#现行用户, “software\shide\hotkey\showwindows\press key”, #F1键)))
            赋值 (.现行选中项, 相减 (容器1, 1))
            跳出循环 ()
        .如果真结束
        
    .计次循环尾 ()
    
.如果结束
赋值 (.现行选中项, -1)
.计次循环首 (取项目数 (), 容器1) ' 根据注册表中保存的功能键键值，选择相应的组合框项目
    .如果真 (等于 (相减 (容器1, 1).取项目数值 (), 取数值注册项 (#现行用户, “software\shide\hotkey\mainwindow\function key”, 3)))
        赋值 (.现行选中项, 相减 (容器1, 1))
        跳出循环 ()
    .如果真结束
    
.计次循环尾 ()
赋值 (.现行选中项, -1)
.计次循环首 (取项目数 (), 容器1) ' 根据注册表中保存的热键键值，选择相应的组合框项目
    .如果真 (等于 (相减 (容器1, 1).取项目数值 (), 取数值注册项 (#现行用户, “software\shide\hotkey\mainwindow\press key”, #C键)))
        赋值 (.现行选中项, 相减 (容器1, 1))
        跳出循环 ()
    .如果真结束
    
.计次循环尾 ()
.如果真 (小于 (状态, 3)) ' 读取热键后注册相应的热键
    赋值 (错误, “”)
    .如果真 (等于 (注册热键 (_启动窗口.取窗口句柄 (), 7410051, 取数值注册项 (#现行用户, “software\shide\hotkey\hidewindows\function key”, 0), 取数值注册项 (#现行用户, “software\shide\hotkey\hidewindows\press key”, #F1键)), 0)) ' 注册隐藏窗口热键
        赋值 (错误, 相加 (错误, #左引号, 选择 (小于 (.现行选中项, 1), “”, 相加 (.取项目文本 (.现行选中项), “+”)), .取项目文本 (.现行选中项), #右引号, “、”))
    .如果真结束
    .如果真 (等于 (.选中, 假))
        .如果真 (等于 (注册热键 (_启动窗口.取窗口句柄 (), 7410052, 取数值注册项 (#现行用户, “software\shide\hotkey\showwindows\function key”, 2), 取数值注册项 (#现行用户, “software\shide\hotkey\showwindows\press key”, #F1键)), 0)) ' 注册显示窗口热键
            赋值 (错误, 相加 (错误, #左引号, 选择 (小于 (.现行选中项, 1), “”, 相加 (.取项目文本 (.现行选中项), “+”)), .取项目文本 (.现行选中项), #右引号, “、”))
        .如果真结束
        
    .如果真结束
    .如果真 (等于 (注册热键 (_启动窗口.取窗口句柄 (), 7410053, 取数值注册项 (#现行用户, “software\shide\hotkey\mainwindow\function key”, 3), 取数值注册项 (#现行用户, “software\shide\hotkey\mainwindow\press key”, #C键)), 0)) ' 注册软件自身热键
        赋值 (错误, 相加 (错误, #左引号, 选择 (小于 (.现行选中项, 1), “”, 相加 (.取项目文本 (.现行选中项), “+”)), .取项目文本 (.现行选中项), #右引号, “、”))
    .如果真结束
    .如果真 (不等于 (错误, “”)) ' 有某些热键未能注册
        .判断开始 (等于 (状态, 1))
            赋值 (_启动窗口., 假)
            赋值 (错误, 取文本左边 (错误, 相减 (取文本长度 (错误), 2)))
            信息框 (相加 (“注册热键”, 错误, “失败，可能程序已经运行或者有别的程序占用了该热键。”), #信息图标, )
            赋值 (., 真) ' 如果是软件启动时注册热键失败，则显示主窗口，以调整热键
            赋值 (., 2) ' 进入热键设置子夹
            赋值 (_启动窗口., .选中)
        .判断 (等于 (状态, 2))
            赋值 (_启动窗口., 假)
            赋值 (错误, 取文本左边 (错误, 相减 (取文本长度 (错误), 2)))
            信息框 (相加 (“恢复原有热键时，注册热键”, 错误, “失败，请检查是否有别的程序占用了该热键。”), #信息图标, )
            赋值 (_启动窗口., .选中)
        .默认
            
        .判断结束
        
    .如果真结束
    赋值 (窗口句柄, _启动窗口.取窗口句柄 ())
    赋值 (默认窗口程序, 置窗口特征 (窗口句柄, -4, &新窗口程序)) ' 设置回调，监视注册的热键
.如果真结束


.子程序 读取鼠标钩子, 空白型, , 
.参数 状态, 字节型, , 1读取并安装；2只读取不安装

.局部变量 钩子, 钩子处理, , , 

赋值 (鼠标双键, 取数值注册项 (#现行用户, “software\shide\hotkey\mouse\dcontrl”, 0))
赋值 (鼠标中键, 取数值注册项 (#现行用户, “software\shide\hotkey\mouse\mcontrl”, 0))
.判断开始 (等于 (鼠标双键, 1))
    赋值 (.选中, 真)
    赋值 (.选中, 假)
.判断 (等于 (鼠标双键, 2))
    赋值 (.选中, 假)
    赋值 (.选中, 真)
.判断 (等于 (鼠标双键, 3))
    赋值 (.选中, 真)
    赋值 (.选中, 真)
.默认
    
.判断结束
.判断开始 (等于 (鼠标中键, 1))
    赋值 (.选中, 真)
    赋值 (.选中, 假)
.判断 (等于 (鼠标中键, 2))
    赋值 (.选中, 假)
    赋值 (.选中, 真)
.判断 (等于 (鼠标中键, 3))
    赋值 (.选中, 真)
    赋值 (.选中, 真)
.默认
    
.判断结束
.如果真 (等于 (状态, 1)) ' 软件启动时，安装鼠标钩子
    .如果真 (或者 (不等于 (鼠标双键, 0), 不等于 (鼠标中键, 0)))
        钩子.安装鼠标钩子 ()
    .如果真结束
    
.如果真结束


.子程序 新窗口程序, 整数型, , 
.参数 窗口句柄, 整数型, , 
.参数 消息, 整数型, , 
.参数 参数1, 整数型, , 
.参数 参数2, 整数型, , 

.如果真 (等于 (消息, 786)) ' 响应注册的热键
    .判断开始 (等于 (参数1, 7410051)) ' 隐藏窗口的热键标识
        .如果 (等于 (.选中, 假))
            发送回调消息 (取窗口句柄 (), 0, 0, 0, &隐藏, 0)
        .否则
            .如果 (是否正在隐藏)
                发送回调消息 (取窗口句柄 (), 0, 0, 0, &显示, 0)
            .否则
                发送回调消息 (取窗口句柄 (), 0, 0, 0, &隐藏, 0)
            .如果结束
            
        .如果结束
        返回 (0)
    .判断 (等于 (参数1, 7410052)) ' 显示窗口的热键标识
        发送回调消息 (取窗口句柄 (), 0, 0, 0, &显示, 0)
        返回 (0)
        
    .判断 (等于 (参数1, 7410053)) ' 显示软件主窗口的热键标识
        发送回调消息 (取窗口句柄 (), 0, 0, 0, &主窗口控制, 0)
        返回 (0)
    .默认
        
    .判断结束
    
.如果真结束
返回 (执行窗口程序 (默认窗口程序, 窗口句柄, 消息, 参数1, 参数2)) ' 把不需要处理的消息传递给默认窗口处理程序，使窗口能正常响应消息


.子程序 键盘钩子处理, 整数型, , 用于屏蔽win键
.参数 icode, 整数型, , 
.参数 wparam, 整数型, , 
.参数 lparam, 整数型, , 

.局部变量 按键信息, 按键信息, , , 
.局部变量 tmp, 文本型, , , 

复制内存 (按键信息, lparam, 28)
.如果真 (等于 (icode, 0))
     ' tmp ＝ “虚拟码:” ＋ 到文本 (按键信息.虚拟码) ＋ “,扫描码:” ＋ 到文本 (按键信息.扫描码) ＋ “,标记:” ＋ 到文本 (按键信息.标记) ＋ “,时间:” ＋ 到文本 (按键信息.时间) ＋ “,额外信息:” ＋ 到文本 (按键信息.额外信息)
     ' 输出调试文本 (tmp)
    .判断开始 (并且 (等于 (wparam, 256), 等于 (按键信息.虚拟码, 162))) ' 按下Ctrl键
        赋值 (ctrl键, 真)
    .判断 (并且 (等于 (wparam, 256), 等于 (按键信息.虚拟码, 27), 等于 (ctrl键, 真))) ' 截获Ctrl＋Esc键
        返回 (1)
    .判断 (并且 (等于 (wparam, 257), 等于 (按键信息.虚拟码, 162))) ' 放开Ctrl键
        赋值 (ctrl键, 假)
    .判断 (并且 (等于 (wparam, 256), 或者 (等于 (按键信息.虚拟码, 91), 等于 (按键信息.虚拟码, 92)))) ' 按下Win键，wparam=257为放开按键
        返回 (1)
    .默认
        
    .判断结束
    
.如果真结束
返回 (下一个钩子 (键盘钩子句柄, icode, wparam, lparam))


.子程序 鼠标钩子处理, 整数型, , 
.参数 code, 整数型, , 
.参数 wp, 整数型, , 
.参数 lp, 整数型, , 

.如果真 (不等于 (鼠标双键, 0))
    .判断开始 (等于 (wp, 513)) ' 左键按下
        赋值 (左键按下, 真)
        赋值 (.时钟周期, 200) ' 限制左键和右键最大时间间隔
        .如果真 (右键按下)
            .判断开始 (等于 (鼠标双键, 1)) ' 双键时隐藏
                 ' 如果真 (是否正在隐藏 ＝ 假)
                隐藏 ()
                
            .判断 (等于 (鼠标双键, 2)) ' 双键时显示
                .如果真 (等于 (是否正在隐藏, 真))
                    显示 ()
                .如果真结束
                
            .判断 (等于 (鼠标双键, 3)) ' 隐藏及显示均使用鼠标双键
                .如果 (等于 (是否正在隐藏, 真))
                    显示 ()
                .否则
                    隐藏 ()
                .如果结束
                
            .默认
                
            .判断结束
            
        .如果真结束
        
    .判断 (等于 (wp, 514)) ' 左键放开
        赋值 (.时钟周期, 0)
        赋值 (左键按下, 假)
    .判断 (等于 (wp, 516)) ' 右键按下
        赋值 (.时钟周期, 200)
        赋值 (右键按下, 真)
        .如果真 (左键按下)
            .判断开始 (等于 (鼠标双键, 1))
                 ' 如果真 (是否正在隐藏 ＝ 假)
                隐藏 ()
                
            .判断 (等于 (鼠标双键, 2))
                .如果真 (等于 (是否正在隐藏, 真))
                    显示 ()
                .如果真结束
                
            .判断 (等于 (鼠标双键, 3))
                .如果 (等于 (是否正在隐藏, 真))
                    显示 ()
                .否则
                    隐藏 ()
                .如果结束
                
            .默认
                
            .判断结束
            
        .如果真结束
        
    .判断 (等于 (wp, 517)) ' 右键放开
        赋值 (右键按下, 假)
        赋值 (.时钟周期, 0)
    .默认
        
    .判断结束
    
.如果真结束
.如果真 (不等于 (鼠标中键, 0))
    .如果真 (等于 (wp, 519)) ' 中键按下
        .判断开始 (等于 (鼠标中键, 1))
            输出调试文本 (111)
            隐藏 ()
        .判断 (等于 (鼠标中键, 2))
            .如果真 (等于 (是否正在隐藏, 真))
                显示 ()
            .如果真结束
            
        .判断 (等于 (鼠标中键, 3))
            .如果 (等于 (是否正在隐藏, 真))
                显示 ()
            .否则
                隐藏 ()
            .如果结束
            
        .默认
            
        .判断结束
        
    .如果真结束
    
.如果真结束
返回 (下一个钩子 (鼠标钩子句柄, code, wp, lp))


.子程序 _关闭按钮_被单击, 空白型, , 
.如果真 (等于 (.选中, 真))
    赋值 (_启动窗口., 假)
    赋值 (., 0)
    返回 ()
.如果真结束
.如果真 (是否正在隐藏) ' 在退出本软件前，显示所有被隐藏的窗口
    显示 ()
    显示托盘图标 ()
    .如果真 (并且 (.选中, 等于 (密码正确, 假)))
        返回 ()
    .如果真结束
    
.如果真结束
销毁 ()
结束 ()


.子程序 _透明标签1_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

_启动窗口.发送信息 (161, 2, 0) ' 点击标题栏，允许移动窗口


.子程序 _图片框2_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

_启动窗口.发送信息 (161, 2, 0) ' 点击标题栏，允许移动窗口


.子程序 _退出按钮_被单击, 空白型, , 
.如果真 (是否正在隐藏) ' 在退出本软件前，显示所有被隐藏的窗口
    显示 ()
    .如果真 (并且 (.选中, 等于 (密码正确, 假)))
        返回 ()
    .如果真结束
    
.如果真结束
销毁 ()
结束 ()


.子程序 _选择框自动运行_被单击, 空白型, , 
.如果 (.选中)
    .如果 (等于 (是否为调试版 (), 真)) ' 调试状态不允许设置注册表自启动
        赋值 (_启动窗口., 假)
        信息框 (相加 (“在调试状态下不能设置”, #左引号, “系统启动时自动运行程序”, #右引号, “选项，请在编译后重新设置。”), #信息图标, )
        赋值 (_启动窗口., .选中)
        赋值 (.选中, 假)
        返回 ()
    .否则
        写注册项 (#现行用户, “Software\Microsoft\Windows\CurrentVersion\Run\shide”, 子文本替换 (相加 (取运行目录 (), “\”, 取执行文件名 ()), “\\”, “\”, , , 真))
    .如果结束
    
.否则
    删除注册项 (#现行用户, “Software\Microsoft\Windows\CurrentVersion\Run\shide”) ' 删除注册表自启动项
.如果结束
写注册项 (#现行用户, “software\shide\option\autorun”, 选择 (.选中, 1, 0)) ' 保存当前设置值


.子程序 _选择框总在最前_被单击, 空白型, , 
赋值 (_启动窗口., .选中)
赋值 (.选中, .选中)
写注册项 (#现行用户, “software\shide\option\allwaysontop”, 选择 (.选中, 1, 0)) ' 保存当前设置值

.子程序 _选择框显示托盘图标_被单击, 空白型, , 
写注册项 (#现行用户, “software\shide\option\trayico”, 选择 (.选中, 1, 0)) ' 保存当前设置值
.如果 (.选中)
    置托盘图标 (#图标, “强力隐藏 V3.0”)
.否则
    置托盘图标 ()
.如果结束


.子程序 _选择框屏蔽Win_被单击, 空白型, , 
.局部变量 钩子, 钩子处理, , , 

写注册项 (#现行用户, “software\shide\option\enablekwin”, 选择 (.选中, 1, 0)) ' 保存当前设置值
.如果 (.选中)
    钩子.安装键盘钩子 ()
.否则
    钩子.卸载键盘钩子 ()
.如果结束


.子程序 _选择框自动隐藏_被单击, 空白型, , 
写注册项 (#现行用户, “software\shide\option\autohide”, 选择 (.选中, 1, 0)) ' 保存当前设置值


.子程序 _选择框不关闭_被单击, 空白型, , 
写注册项 (#现行用户, “software\shide\option\nexit”, 选择 (.选中, 1, 0)) ' 保存当前设置值


.子程序 _选择框静音_被单击, 空白型, , 
.局部变量 系统, 系统控制, , , 

写注册项 (#现行用户, “software\shide\option\nvlaue”, 选择 (.选中, 1, 0)) ' 保存当前设置值
.如果真 (等于 (.选中, 假))
    系统.系统静音 (假) ' 防止当前已经被本软件置为静音，所以先恢复一下
.如果真结束


.子程序 _选择框隐藏桌面_被单击, 空白型, , 
写注册项 (#现行用户, “software\shide\option\hdesktop”, 选择 (.选中, 1, 0)) ' 保存当前设置值
.如果真 (等于 (.选中, 假))
    置桌面隐藏 (假) ' 防止当前已经被本软件置为隐藏桌面，所以先恢复一下
.如果真结束


.子程序 _选择框关闭显示器_被单击, 空白型, , 
写注册项 (#现行用户, “software\shide\option\closescreen”, 选择 (.选中, 1, 0)) ' 保存当前设置值


.子程序 _选择框开始菜单_被单击, 空白型, , 
写注册项 (#现行用户, “software\shide\option\hstartmenu”, 选择 (.选中, 1, 0)) ' 保存当前设置值
.如果真 (等于 (.选中, 假))
    置开始按钮隐藏 (假) ' 防止当前已经被本软件隐藏开始按钮，所以先恢复一下
.如果真结束


.子程序 _选择框任务栏_被单击, 空白型, , 
写注册项 (#现行用户, “software\shide\option\htray_wnd”, 选择 (.选中, 1, 0)) ' 保存当前设置值
连续赋值 (.选中, .禁止, .禁止, .禁止)
.如果真 (等于 (.选中, 假))
    置整个任务栏隐藏 (假) ' 防止当前已经被本软件隐藏任务栏，所以先恢复一下
.如果真结束


.子程序 _选择框托盘图标_被单击, 空白型, , 
写注册项 (#现行用户, “software\shide\option\htoolbar”, 选择 (.选中, 1, 0)) ' 保存当前设置值
.如果真 (等于 (.选中, 假))
    置托盘图标隐藏 (假) ' 防止当前已经被本软件隐藏托盘图标，所以先恢复一下
.如果真结束


.子程序 _选择框锁定鼠标_被单击, 空白型, , 
.局部变量 系统, 系统控制, , , 

写注册项 (#现行用户, “software\shide\option\scapture”, 选择 (.选中, 1, 0)) ' 保存当前设置值
.如果真 (等于 (.选中, 假))
    系统.锁定鼠标 (假) ' 防止当前已经被本软件锁定鼠标，所以先恢复一下
.如果真结束


.子程序 _选择框需要密码_被单击, 空白型, , 
写注册项 (#现行用户, “software\shide\option\wpwd”, 选择 (.选中, 1, 0)) ' 保存当前设置值
赋值 (., 取反 (.选中))


.子程序 _选择框运行文件_被单击, 空白型, , 
写注册项 (#现行用户, “software\shide\option\runfile”, 选择 (.选中, 1, 0)) ' 保存当前设置值
赋值 (., 取反 (.选中))


.子程序 _高级选择夹1_子夹被改变, 空白型, , 
.如果真 (等于 (., 2)) ' 进入热键设置子夹时，先读取当前热键设置
    赋值 (原来热键 [1] [1], .取项目数值 (.现行选中项))
    赋值 (原来热键 [1] [2], .取项目数值 (.现行选中项))
    赋值 (原来热键 [2] [1], .取项目数值 (.现行选中项))
    赋值 (原来热键 [2] [2], .取项目数值 (.现行选中项))
    赋值 (原来热键 [3] [1], .取项目数值 (.现行选中项))
    赋值 (原来热键 [3] [2], .取项目数值 (.现行选中项))
    获取焦点 ()
.如果真结束


.子程序 _图片框放大镜_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

俘获鼠标 (取窗口句柄 ()) ' 允许拖动放大镜以获取相关程序信息
赋值 (查看状态, 真)


.子程序 _图片框放大镜_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

释放鼠标 ()
赋值 (查看状态, 假)


.子程序 _图片框放大镜_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 鼠标位置, 点, , , 
.局部变量 单元句柄, 整数型, , , 
.局部变量 单元标题, 文本型, , , 
.局部变量 进程ID, 整数型, , , 

.如果真 (查看状态)
    .如果真 (大于 (横向位置, 2000))
        赋值 (横向位置, 相减 (横向位置, 65536))
    .如果真结束
    .如果真 (大于 (纵向位置, 2000))
        赋值 (纵向位置, 相减 (纵向位置, 65536))
    .如果真结束
    在2000、xp里，当鼠标位置相对于图片框为负时，系统将显示为65536＋鼠标位置，为了能正确转化为屏幕坐标，这里需要减去65536。
    赋值 (鼠标位置.x, 横向位置)
    赋值 (鼠标位置.y, 纵向位置)
    转换到屏幕坐标 (取窗口句柄 (), 鼠标位置)
    赋值 (单元句柄, 取鼠标位置单元句柄 (鼠标位置.x, 鼠标位置.y))
    .如果真 (不等于 (单元句柄, 移动句柄)) ' 设置只有当获得的窗口句柄发生变化时,才进行取标题或取进程操作,从而防止重复地取同一句柄的标题或进程
        赋值 (移动句柄, 单元句柄)
        .判断开始 (等于 (., 1)) ' 获取窗口标题
            赋值 (单元标题, 取空白文本 (255))
            取窗口标题 (单元句柄, 单元标题, 255)
            赋值 (.内容, 删首尾空 (单元标题))
        .判断 (等于 (., 0)) ' 获取进程名
            取窗口进程 (单元句柄, 进程ID)
            赋值 (单元标题, 取模块路径 (进程ID))
            赋值 (.内容, 删首尾空 (单元标题))
        .默认
            
        .判断结束
        
    .如果真结束
    
.如果真结束


.子程序 _选择框总在顶层_被单击, 空白型, , 
赋值 (_启动窗口., .选中)
赋值 (.选中, .选中)
写注册项 (#现行用户, “software\shide\option\allwaysontop”, 选择 (.选中, 1, 0)) ' 保存当前设置


.子程序 写出, 逻辑型, , 
.局部变量 文件号, 整数型, , , 
.局部变量 容器1, 整数型, , , 
.局部变量 成败, 逻辑型, , , 

清除数组 (标题列表)
清除数组 (选中标题)
清除数组 (进程列表)
清除数组 (选中进程)
清除数组 (图标列表)
清除数组 (选中图标)
.计次循环首 (取项目数 (), 容器1) ' 保存窗口标题列表及选中标题列表至数组
    加入成员 (标题列表, 相减 (容器1, 1).取项目文本 ())
    .如果真 (相减 (容器1, 1).是否被选中 ())
        .如果真 (等于 (到大写 (相减 (容器1, 1).取项目文本 ()), “QQ”))
            赋值 (隐藏QQ窗口, 真)
        .如果真结束
        加入成员 (选中标题, 相减 (容器1, 1).取项目文本 ())
    .如果真结束
    
.计次循环尾 ()
.计次循环首 (取项目数 (), 容器1) ' 保存进程名列表及选中进程名列表至数组
    加入成员 (进程列表, 相减 (容器1, 1).取项目文本 ())
    .如果真 (相减 (容器1, 1).是否被选中 ())
        加入成员 (选中进程, 相减 (容器1, 1).取项目文本 ())
    .如果真结束
    
.计次循环尾 ()
.计次循环首 (取项目数 (), 容器1) ' 保存托盘图标文本列表及选中托盘图标文本至数组
    加入成员 (图标列表, 相减 (容器1, 1).取项目文本 ())
    .如果真 (相减 (容器1, 1).是否被选中 ())
        加入成员 (选中图标, 相减 (容器1, 1).取项目文本 ())
    .如果真结束
    
.计次循环尾 ()
赋值 (文件号, 打开文件 (数据文件, #重写, ))
赋值 (成败, 写出数据 (文件号, 到文本 (取数组成员数 (标题列表)), 标题列表, 到文本 (取数组成员数 (选中标题)), 选中标题, 到文本 (取数组成员数 (进程列表)), 进程列表, 到文本 (取数组成员数 (选中进程)), 选中进程, 到文本 (取数组成员数 (图标列表)), 图标列表, 到文本 (取数组成员数 (选中图标)), 选中图标)) ' 保存文件的格式为：数组1成员数，数组1内容，数组2成员数，数组2内容……以此类推
关闭文件 (文件号)
返回 (成败)


.子程序 读入, 空白型, , 
.局部变量 个数, 文本型, , , 
.局部变量 文件号, 整数型, , , 
.局部变量 容器1, 整数型, , , 

赋值 (文件号, 打开文件 (数据文件, #读入, ))
 ' 按写入时的格式，读出数据。即读出数组1成员数，再读出数组1内容；读出数组2成员数，再读出数组2内容；……，以此类推
读入数据 (文件号, 个数)
重定义数组 (标题列表, 假, 到数值 (个数))
读入数据 (文件号, 标题列表)
读入数据 (文件号, 个数)
重定义数组 (选中标题, 假, 到数值 (个数))
读入数据 (文件号, 选中标题)
读入数据 (文件号, 个数)
重定义数组 (进程列表, 假, 到数值 (个数))
读入数据 (文件号, 进程列表)
读入数据 (文件号, 个数)
重定义数组 (选中进程, 假, 到数值 (个数))
读入数据 (文件号, 选中进程)
读入数据 (文件号, 个数)
重定义数组 (图标列表, 假, 到数值 (个数))
读入数据 (文件号, 图标列表)
读入数据 (文件号, 个数)
重定义数组 (选中图标, 假, 到数值 (个数))
读入数据 (文件号, 选中图标)
关闭文件 (文件号)
清空 () ' 将读出的内容显示到相应的列表框中去
.计次循环首 (取数组成员数 (标题列表), 容器1)
    标题列表.加入项目 ( [容器1], )
.计次循环尾 ()
.计次循环首 (取数组成员数 (选中标题), 容器1)
    .如果真 (等于 (到大写 (选中标题 [容器1]), “QQ”))
        赋值 (隐藏QQ窗口, 真)
    .如果真结束
    选中标题.选择 ( [容器1]).选中项目 ()
.计次循环尾 ()
清空 ()
.计次循环首 (取数组成员数 (进程列表), 容器1)
    进程列表.加入项目 ( [容器1], )
.计次循环尾 ()
.计次循环首 (取数组成员数 (选中进程), 容器1)
    选中进程.选择 ( [容器1]).选中项目 ()
.计次循环尾 ()
清空 ()
.计次循环首 (取数组成员数 (图标列表), 容器1)
    图标列表.加入项目 ( [容器1], )
.计次循环尾 ()
.计次循环首 (取数组成员数 (选中图标), 容器1)
    选中图标.选择 ( [容器1]).选中项目 ()
.计次循环尾 ()


.子程序 显示, 空白型, , 
.局部变量 容器1, 整数型, , , 
.局部变量 系统, 系统控制, , , 
.局部变量 钩子, 钩子处理, , , 
.局部变量 托盘, 托盘操作, , , 

.如果真 (不等于 (取数组成员数 (已隐藏的窗口), 0))
    .如果真 (.选中)
        赋值 (_启动窗口., 假)
        载入 (输入密码窗口, , 真)
        赋值 (_启动窗口., .选中)
        .如果真 (等于 (密码正确, 假)) ' 如果输入密码错误，则不进行下一步操作
            返回 ()
        .如果真结束
        
    .如果真结束
    
.如果真结束
赋值 (.时钟周期, 0) ' 停止监视时钟
赋值 (是否正在隐藏, 假)
.计次循环首 (取数组成员数 (已隐藏的窗口), 容器1)
    置窗口可视属性 (已隐藏的窗口 [容器1], 5) ' 显示隐藏的窗口及其弹出窗口
    置弹出窗口可视属性 (已隐藏的窗口 [容器1], 1)
.计次循环尾 ()
清除数组 (已隐藏的窗口)
.如果真 (隐藏QQ窗口)
    显示QQ () ' 显示QQ
.如果真结束
显示托盘图标 () ' 显示托盘图标

.如果真 (.选中)
     ' _启动窗口.可视 ＝ 真  '个人觉得主窗口还是不要随其它隐藏的窗口同时显示的好,所以此句代码我屏蔽了
.如果真结束
.如果真 (并且 (等于 (.选中, 真), 等于 (.选中, 假))) ' 如果程序选项中未选中屏蔽Win键,则在显示窗口的同时,撤消对Win键的屏蔽.
    钩子.卸载键盘钩子 ()
.如果真结束
.如果真 (.选中)
    系统.系统静音 (假)
.如果真结束
.如果真 (.选中)
    系统.锁定鼠标 (假)
.如果真结束
.如果真 (.选中)
    置桌面隐藏 (假)
.如果真结束
.如果真 (.选中)
    置整个任务栏隐藏 (假)
.如果真结束
.如果真 (.选中)
    置开始按钮隐藏 (假)
.如果真结束
.如果真 (.选中)
    置任务栏程序隐藏 (假)
.如果真结束
.如果真 (.选中)
    置托盘图标隐藏 (假)
.如果真结束
.如果真 (.选中)
    系统.关闭显示器 (假)
.如果真结束


.子程序 隐藏, 空白型, , 
.局部变量 容器1, 整数型, , , 
.局部变量 系统, 系统控制, , , 
.局部变量 钩子, 钩子处理, , , 

.如果真 (等于 (是否正在隐藏, 假))
    赋值 (是否正在隐藏, 真)
    .如果真 (.选中)
        钩子.安装键盘钩子 ()
    .如果真结束
    
.如果真结束
隐藏QQ ()
隐藏托盘图标 ()
枚举并隐藏窗口 ()
赋值 (.时钟周期, 300) ' 启动监视时钟
.如果真 (.选中)
    赋值 (_启动窗口., 假)
.如果真结束
.如果真 (.选中)
    系统.系统静音 (真)
.如果真结束
.如果真 (.选中)
    系统.锁定鼠标 (真)
.如果真结束
.如果真 (.选中)
    置桌面隐藏 (真)
.如果真结束
.如果真 (.选中)
    置整个任务栏隐藏 (真)
.如果真结束
.如果真 (.选中)
    置开始按钮隐藏 (真)
.如果真结束
.如果真 (.选中)
    置任务栏程序隐藏 (真)
.如果真结束
.如果真 (.选中)
    置托盘图标隐藏 (真)
.如果真结束
.如果真 (.选中)
    系统.关闭显示器 (真)
.如果真结束
.如果真 (.选中)
    未知支持库函数_6 (.内容, , )
.如果真结束


.子程序 隐藏托盘图标, 空白型, , 
.局部变量 托盘, 托盘操作, , , 
.局部变量 图标索引, 整数型, , , 

.计次循环首 (取项目数 (), 图标索引)
    .如果真 (等于 (是否正在隐藏, 假)) ' 根据该变量，判断是否取消了隐藏操作
        返回 ()
    .如果真结束
    .如果真 (相减 (图标索引, 1).是否被选中 ())
        托盘.隐藏图标 (相减 (图标索引, 1).取项目文本 ())
    .如果真结束
    处理事件 ()
.计次循环尾 ()


.子程序 显示托盘图标, 空白型, , 
.局部变量 托盘, 托盘操作, , , 
.局部变量 图标索引, 整数型, , , 

.计次循环首 (取项目数 (), 图标索引)
    .如果真 (相减 (图标索引, 1).是否被选中 ())
        托盘.显示图标 (相减 (图标索引, 1).取项目文本 ())
    .如果真结束
    
.计次循环尾 ()


.子程序 隐藏QQ, 空白型, , 针对QQ窗口的特殊性，专门写一个隐藏QQ窗口的子程序
.局部变量 子句柄, 空白型, , , 
.局部变量 变量1, 整数型, , , 
.局部变量 句柄, 整数型, , , 

.如果真 (隐藏QQ窗口)
    赋值 (句柄, 寻找子窗口 (0, 0, “#32770”, “”))
    .判断循环首 (不等于 (句柄, 0))
        赋值 (子句柄, 寻找子窗口 (句柄, 0, “Tencent_QQBar”, “”))
        .如果真 (不等于 (子句柄, 0))
            加入成员 (QQ句柄, 句柄)
        .如果真结束
        赋值 (句柄, 寻找子窗口 (0, 句柄, “#32770”, “”))
        处理事件 ()
    .判断循环尾 ()
    .计次循环首 (取数组成员数 (QQ句柄), 变量1)
        置窗口可视属性 (QQ句柄 [变量1], 0)
        置弹出窗口可视属性 (QQ句柄 [变量1], 0)
    .计次循环尾 ()
.如果真结束


.子程序 显示QQ, 空白型, , 
.局部变量 变量1, 整数型, , , 

.计次循环首 (取数组成员数 (QQ句柄), 变量1)
    置窗口可视属性 (QQ句柄 [变量1], 5)
    置弹出窗口可视属性 (QQ句柄 [变量1], 1)
.计次循环尾 ()
清除数组 (QQ句柄)


.子程序 主窗口控制, 空白型, , 
.如果 (等于 (_启动窗口., 真))
    赋值 (_启动窗口., 假)
.否则
    .如果真 (.选中)
        载入 (输入密码窗口, , 真)
        .如果真 (等于 (密码正确, 假))
            返回 ()
        .如果真结束
        
    .如果真结束
    赋值 (., 0)
    赋值 (_启动窗口., 真)
.如果结束


.子程序 枚举并隐藏窗口, 空白型, , 同时对窗口标题及进程进行枚举
.局部变量 窗口句柄, 整数型, , , 
.局部变量 句柄标题, 文本型, , , 
.局部变量 容器1, 整数型, , , 
.局部变量 已加入, 逻辑型, , , 
.局部变量 容器2, 整数型, , , 
.局部变量 进程名, 文本型, , , 
.局部变量 进程ID, 整数型, , , 
.局部变量 进程索引, 整数型, , , 

清除数组 (枚举句柄)
枚举窗口 (&窗口处理程序, 0) ' 取得所有可视的窗口句柄
.计次循环首 (取数组成员数 (枚举句柄), 容器1)
    .如果真 (等于 (是否正在隐藏, 假))
        返回 ()
    .如果真结束
    赋值 (已加入, 假) ' 先查看是否符合要隐藏的标题
    赋值 (句柄标题, 取空白文本 (255))
    取窗口标题 (枚举句柄 [容器1], 句柄标题, 256)
    .如果真 (不等于 (删首尾空 (句柄标题), “”)) ' 窗口标题不为空
        .计次循环首 (取数组成员数 (选中标题), 容器2)
            .如果真 (等于 (是否正在隐藏, 假))
                返回 ()
            .如果真结束
            .如果真 (不等于 (到大写 (选中标题 [容器2]), “QQ”)) ' QQ另有专门的子程序进行隐藏和显示,此处不作判断
                .如果真 (不等于 (寻找文本 (删首尾空 (句柄标题), 选中标题 [容器2], , 假), -1)) ' 如果标题包含关键字,则添加
                    输出调试文本 (删首尾空 (句柄标题))
                    置窗口可视属性 (枚举句柄 [容器1], 0)
                    置弹出窗口可视属性 (枚举句柄 [容器1], 0)
                    加入成员 (已隐藏的窗口, 枚举句柄 [容器1])
                    赋值 (已加入, 真)
                    跳出循环 ()
                .如果真结束
                
            .如果真结束
            处理事件 ()
        .计次循环尾 ()
    .如果真结束
    .如果真 (等于 (已加入, 假)) ' 如果不符合标题，则再查看其进程是否符合要隐藏的进程
        取窗口进程 (枚举句柄 [容器1], 进程ID)
        赋值 (进程名, 取模块路径 (进程ID))
        .计次循环首 (取数组成员数 (选中进程), 进程索引)
            .如果真 (等于 (是否正在隐藏, 假))
                返回 ()
            .如果真结束
            .如果真 (等于 (到大写 (进程名), 到大写 (选中进程 [进程索引])))
                置窗口可视属性 (枚举句柄 [容器1], 0)
                置弹出窗口可视属性 (枚举句柄 [容器1], 0)
                加入成员 (已隐藏的窗口, 枚举句柄 [容器1])
                赋值 (已加入, 真)
                跳出循环 ()
            .如果真结束
            处理事件 ()
        .计次循环尾 ()
    .如果真结束
    处理事件 ()
.计次循环尾 ()


.子程序 隐藏窗口, 空白型, , 与“枚举并隐藏窗口”子程序的区别，在于本子程序没有枚举进程
.局部变量 窗口句柄, 整数型, , , 
.局部变量 句柄标题, 文本型, , , 
.局部变量 容器1, 整数型, , , 
.局部变量 容器2, 整数型, , , 

清除数组 (枚举句柄)
枚举窗口 (&窗口处理程序, 0)
.计次循环首 (取数组成员数 (枚举句柄), 容器1)
    .如果真 (等于 (是否正在隐藏, 假))
        返回 ()
    .如果真结束
    赋值 (句柄标题, 取空白文本 (255))
    取窗口标题 (枚举句柄 [容器1], 句柄标题, 256)
    .如果真 (不等于 (删首尾空 (句柄标题), “”))
        .计次循环首 (取数组成员数 (选中标题), 容器2)
            .如果真 (等于 (是否正在隐藏, 假))
                返回 ()
            .如果真结束
            .如果真 (不等于 (到大写 (选中标题 [容器2]), “QQ”)) ' QQ另有专门的子程序进行隐藏和显示,此处不作判断
                .如果真 (不等于 (寻找文本 (删首尾空 (句柄标题), 选中标题 [容器2], , 假), -1)) ' 如果标题包含关键字,则添加
                    置窗口可视属性 (枚举句柄 [容器1], 0)
                    加入成员 (已隐藏的窗口, 枚举句柄 [容器1])
                    跳出循环 ()
                .如果真结束
                
            .如果真结束
            
        .计次循环尾 ()
    .如果真结束
    处理事件 ()
.计次循环尾 ()
.计次循环首 (取数组成员数 (已隐藏的窗口), 容器1)
    置弹出窗口可视属性 (已隐藏的窗口 [容器1], 0)
.计次循环尾 ()


.子程序 窗口处理程序, 逻辑型, , 
.参数 窗口句柄, 整数型, , 

.如果真 (不等于 (窗口是否可见 (窗口句柄), 0)) ' 将所有可视窗口枚举出来
    加入成员 (枚举句柄, 窗口句柄)
.如果真结束
返回 (真)


.子程序 _保存按钮_被单击, 空白型, , 
.局部变量 热键, 整数型, , "3,2", 
.局部变量 容器1, 整数型, , , 
.局部变量 热键改变, 逻辑型, , "3", 
.局部变量 改变, 逻辑型, , , 
.局部变量 错误, 文本型, , , 
.局部变量 组合框, 组合框, , "2", 
.局部变量 功能, 文本型, , , 
.局部变量 新鼠标双键, 整数型, , , 
.局部变量 新鼠标中键, 整数型, , , 
.局部变量 钩子, 钩子处理, , , 

赋值 (热键 [1] [1], .取项目数值 (.现行选中项))
赋值 (热键 [1] [2], .取项目数值 (.现行选中项))
.如果 (等于 (.选中, 假))
    赋值 (热键 [2] [1], .取项目数值 (.现行选中项))
    赋值 (热键 [2] [2], .取项目数值 (.现行选中项))
.否则
    赋值 (热键 [2] [1], 热键 [1] [1])
    赋值 (热键 [2] [2], 热键 [1] [2])
.如果结束
赋值 (热键 [3] [1], .取项目数值 (.现行选中项))
赋值 (热键 [3] [2], .取项目数值 (.现行选中项))
 ' 以上代码保存设置的热键至数组
赋值 (改变, 假)
.计次循环首 (3, 容器1)
    .如果 (或者 (不等于 (原来热键 [容器1] [1], 热键 [容器1] [1]), 不等于 (原来热键 [容器1] [2], 热键 [容器1] [2]))) ' 判断隐藏热键是否改变
        赋值 (热键改变 [容器1], 真)
        赋值 (改变, 真)
        跳出循环 ()
    .否则
        赋值 (热键改变 [容器1], 假)
    .如果结束
    
.计次循环尾 ()
.如果 (.选中)
    .如果真 (并且 (等于 (热键 [1] [1], 热键 [3] [1]), 等于 (热键 [1] [2], 热键 [3] [2]))) ' 判断隐藏窗口热键与软件主窗口热键是否冲突
        赋值 (_启动窗口., 假)
        信息框 (“热键设定有冲突，请重新设定不同的热键!”, #信息图标, )
        获取焦点 ()
        赋值 (_启动窗口., .选中)
        返回 ()
    .如果真结束
    
.否则
    .如果真 (或者 (并且 (等于 (热键 [1] [1], 热键 [2] [1]), 等于 (热键 [1] [2], 热键 [2] [2])), 并且 (等于 (热键 [1] [1], 热键 [3] [1]), 等于 (热键 [1] [2], 热键 [3] [2])), 并且 (等于 (热键 [3] [1], 热键 [2] [1]), 等于 (热键 [3] [2], 热键 [2] [2])))) ' 判断窗口热键与软件主窗口热键是否冲突
        赋值 (_启动窗口., 假)
        信息框 (“热键设定有冲突，请为三个事件分别设定不同的热键!”, #信息图标, )
        获取焦点 ()
        赋值 (_启动窗口., .选中)
        返回 ()
    .如果真结束
    
.如果结束
.如果 (等于 (改变, 假)) ' 如果热键没有改变，则直接返回到首界面
    赋值 (., 0)
.否则
    赋值 (错误, “”) ' 热键被改变，则撤消原来热键，重新注册新热键
    撤销热键 (_启动窗口.取窗口句柄 (), 到数值 (“7410051”))
    .如果真 (等于 (注册热键 (_启动窗口.取窗口句柄 (), 到数值 (“7410051”), 热键 [1] [1], 热键 [1] [2]), 0))
        赋值 (错误, 相加 (错误, #左引号, 选择 (小于 (.现行选中项, 1), “”, 相加 (.取项目文本 (.现行选中项), “+”)), .取项目文本 (.现行选中项), #右引号, “、”))
    .如果真结束
    撤销热键 (_启动窗口.取窗口句柄 (), 到数值 (“7410052”))
    .如果真 (等于 (.选中, 假))
        .如果真 (等于 (注册热键 (_启动窗口.取窗口句柄 (), 到数值 (“7410052”), 热键 [2] [1], 热键 [2] [2]), 0))
            赋值 (错误, 相加 (错误, #左引号, 选择 (小于 (.现行选中项, 1), “”, 相加 (.取项目文本 (.现行选中项), “+”)), .取项目文本 (.现行选中项), #右引号, “、”))
        .如果真结束
        
    .如果真结束
    撤销热键 (_启动窗口.取窗口句柄 (), 到数值 (“7410053”))
    .如果真 (等于 (注册热键 (_启动窗口.取窗口句柄 (), 到数值 (“7410053”), 热键 [3] [1], 热键 [3] [2]), 0))
        赋值 (错误, 相加 (错误, #左引号, 选择 (小于 (.现行选中项, 1), “”, 相加 (.取项目文本 (.现行选中项), “+”)), .取项目文本 (.现行选中项), #右引号, “、”))
    .如果真结束
    .如果 (不等于 (错误, “”))
        赋值 (_启动窗口., 假)
        赋值 (错误, 取文本左边 (错误, 相减 (取文本长度 (错误), 2)))
        信息框 (相加 (“注册热键”, 错误, “失败，可能程序有别的程序占用了该热键。”, #换行符, “你设定的该程序热键将不被保存，请重新设置!”), #信息图标, )
        赋值 (_启动窗口., .选中)
        读取热键 (2) ' 改变热键失败时恢复原有热键
    .否则
         ' 重新注册热键成功，则在注册表中保存新热键设置
        写注册项 (#现行用户, “software\shide\hotkey\hidewindows\function key”, .取项目数值 (.现行选中项))
        写注册项 (#现行用户, “software\shide\hotkey\hidewindows\press key”, .取项目数值 (.现行选中项))
        写注册项 (#现行用户, “software\shide\hotkey\hidewindows\samekey”, 选择 (.选中, 1, 0))
        写注册项 (#现行用户, “software\shide\hotkey\showwindows\function key”, .取项目数值 (.现行选中项))
        写注册项 (#现行用户, “software\shide\hotkey\showwindows\press key”, .取项目数值 (.现行选中项))
        写注册项 (#现行用户, “software\shide\hotkey\mainwindow\function key”, .取项目数值 (.现行选中项))
        写注册项 (#现行用户, “software\shide\hotkey\mainwindow\press key”, .取项目数值 (.现行选中项))
    .如果结束
    
.如果结束
.如果 (.选中)
    赋值 (新鼠标双键, 0)
    赋值 (新鼠标中键, 0)
    .如果真 (.选中)
        赋值 (新鼠标双键, 3) ' 只用于隐藏，为1；只用于显示，为2；同时用于隐藏和显示，为3。下同
    .如果真结束
    .如果真 (.选中)
        赋值 (新鼠标中键, 3)
    .如果真结束
    
.否则
    赋值 (新鼠标双键, 0)
    赋值 (新鼠标中键, 0)
    .如果真 (.选中)
        赋值 (新鼠标双键, 1)
    .如果真结束
    .如果真 (.选中)
        赋值 (新鼠标中键, 1)
    .如果真结束
    .如果真 (.选中)
        赋值 (新鼠标双键, 相加 (新鼠标双键, 2))
    .如果真结束
    .如果真 (.选中)
        赋值 (新鼠标中键, 相加 (新鼠标中键, 2))
    .如果真结束
    
.如果结束
写注册项 (#现行用户, “software\shide\hotkey\mouse\dcontrl”, 新鼠标双键)
写注册项 (#现行用户, “software\shide\hotkey\mouse\mcontrl”, 新鼠标中键)
.如果真 (并且 (或者 (不等于 (新鼠标中键, 0), 不等于 (新鼠标双键, 0)), 或者 (不等于 (鼠标中键, 新鼠标中键), 不等于 (鼠标双键, 新鼠标双键))))
    钩子.卸载鼠标钩子 ()
    赋值 (鼠标中键, 新鼠标中键)
    赋值 (鼠标双键, 新鼠标双键)
    钩子.安装鼠标钩子 ()
.如果真结束
赋值 (., 0)


.子程序 __启动窗口_将被销毁, 空白型, , 
.局部变量 窗口句柄, 整数型, , , 
.局部变量 钩子, 钩子处理, , , 

写出 () ' 软件退出时，再保存一下窗口列表
撤销热键 (_启动窗口.取窗口句柄 (), 7410051)
撤销热键 (_启动窗口.取窗口句柄 (), 7410052)
撤销热键 (_启动窗口.取窗口句柄 (), 7410053)
赋值 (窗口句柄, _启动窗口.取窗口句柄 ())
置窗口特征 (窗口句柄, -4, 默认窗口程序) ' 窗口销毁前置回原来的消息处理程序
钩子.卸载鼠标钩子 ()
钩子.卸载键盘钩子 ()
置托盘图标 ()


.子程序 _取消按钮_被单击, 空白型, , 
读取热键 (3) ' 重新读取上次的热键设置，但不重新注册热键（因为已经注册好了，且未做变动）
赋值 (.选中, 假)
赋值 (.禁止, 假)
读取鼠标钩子 (2) ' 同上，只读取，不安装
赋值 (., 0)


.子程序 _修改按钮_被单击, 空白型, , 
.局部变量 容器1, 整数型, , , 
.局部变量 句柄标题, 文本型, , , 
.局部变量 已隐藏进程句柄, 整数型, , "0", 
.局部变量 托盘, 托盘操作, , , 

.如果真 (是否正在隐藏)
    消息框 (_启动窗口.取窗口句柄 (), “当前正在隐藏窗口中，在此状态下，不允许修改已有的列表内容！请先显示所有窗口，然后再次执行修改！”, “信息”, #信息图标) ' 隐藏时，不允许修改窗口标题或进程名，避免修改后，无法将已经隐藏的窗口显示
    返回 ()
.如果真结束

.判断开始 (等于 (., 0))
    .置项目文本 (.现行选中项, .内容)
.判断 (等于 (., 1))
    .置项目文本 (.现行选中项, .内容)
.判断 (等于 (., 2))
    .置项目文本 (.现行选中项, .内容)
.默认
    
.判断结束
写出 () ' 修改后，将修改内容保存到配置文件


.子程序 _添加按钮_被单击, 空白型, , 
.局部变量 索引, 整数型, , , 

.如果真 (是否正在隐藏)
    消息框 (_启动窗口.取窗口句柄 (), “当前正在隐藏窗口中，在此状态下，不允许添加列表内容！请先显示所有窗口，然后再次执行添加！”, “信息”, #信息图标) ' 隐藏状态禁止添加
    返回 ()
.如果真结束

.如果真 (等于 (.内容, “”))
    信息框 (“请先输入内容或拖动放大镜自动获得内容！”, #信息图标, )
    获取焦点 ()
    返回 ()
.如果真结束
.判断开始 (等于 (., 1))
    赋值 (索引, .选择 (.内容))
    .如果 (不等于 (到大写 (索引.取项目文本 ()), 到大写 (.内容))) ' 判断选中项目与编辑框内容是否完全一样，如果完全一样，说明该项目已经存在
        赋值 (索引, .加入项目 (.内容, ))
    .否则
        信息框 (相加 (“窗口标题”, #左引号, .内容, #右引号, “已经存在，请勿重复添加！”), 相加 (#信息图标, #系统等待), )
        返回 ()
    .如果结束
    赋值 (.现行选中项, 索引)
.判断 (等于 (., 0))
    赋值 (索引, .选择 (.内容))
    .如果 (不等于 (到大写 (索引.取项目文本 ()), 到大写 (.内容))) ' 同上，判断是否已经存在相同项目
        赋值 (索引, .加入项目 (.内容, ))
    .否则
        信息框 (相加 (“进程名称”, #左引号, .内容, #右引号, “已经存在，请勿重复添加！”), 相加 (#信息图标, #系统等待), )
        返回 ()
    .如果结束
    赋值 (.现行选中项, 索引)
.判断 (等于 (., 2))
    赋值 (索引, .选择 (.内容))
    .如果 (不等于 (到大写 (索引.取项目文本 ()), 到大写 (.内容))) ' 同上，判断是否已经存在相同项目
        赋值 (索引, .加入项目 (.内容, ))
    .否则
        信息框 (相加 (“托盘图标标题”, #左引号, .内容, #右引号, “已经存在，请勿重复添加！”), 相加 (#信息图标, #系统等待), )
        返回 ()
    .如果结束
    赋值 (.现行选中项, 索引)
.默认
    
.判断结束
写出 () ' 改变后保存新窗口列表到配置文件


.子程序 _删除按钮_被单击, 空白型, , 
.局部变量 原项目索引, 整数型, , , 

.如果真 (是否正在隐藏)
    消息框 (_启动窗口.取窗口句柄 (), “当前正在隐藏窗口中，在此状态下，不允许删除已经的列表内容！请先显示所有窗口，然后再次执行删除！”, “信息”, #信息图标) ' 隐藏状态禁止删除
    返回 ()
.如果真结束

.判断开始 (等于 (., 1))
    .如果真 (等于 (信息框 (相加 (“真的要删除窗口标题：”, #左引号, .内容, #右引号, “吗？”), 相加 (#询问图标, #是否钮, #系统等待), ), #否钮))
        返回 ()
    .如果真结束
    
.判断 (等于 (., 0))
    .如果真 (等于 (信息框 (相加 (“真的要删除进程名称：”, #左引号, .内容, #右引号, “吗？”), 相加 (#询问图标, #是否钮, #系统等待), ), #否钮))
        返回 ()
    .如果真结束
    
.判断 (等于 (., 2))
    .如果真 (等于 (信息框 (相加 (“真的要删除托盘图标名称：”, #左引号, .内容, #右引号, “吗？”), 相加 (#询问图标, #是否钮, #系统等待), ), #否钮))
        返回 ()
    .如果真结束
    
.默认
    
.判断结束
.判断开始 (等于 (., 1)) ' 删除后，选中下一项目或尾项目
    赋值 (原项目索引, .现行选中项)
    .删除项目 (.现行选中项)
    .如果 (大于或等于 (相减 (取项目数 (), 1), 原项目索引))
        赋值 (.现行选中项, 原项目索引)
    .否则
        赋值 (.现行选中项, 相减 (取项目数 (), 1))
    .如果结束
    _选择列表框_标题_列表项被选择 ()
.判断 (等于 (., 0))
    赋值 (原项目索引, .现行选中项)
    .删除项目 (.现行选中项)
    .如果 (大于或等于 (相减 (取项目数 (), 1), 原项目索引))
        赋值 (.现行选中项, 原项目索引)
    .否则
        赋值 (.现行选中项, 相减 (取项目数 (), 1))
    .如果结束
    _选择列表框_进程_列表项被选择 ()
.判断 (等于 (., 2))
    赋值 (原项目索引, .现行选中项)
    .删除项目 (.现行选中项)
    .如果 (大于或等于 (相减 (取项目数 (), 1), 原项目索引))
        赋值 (.现行选中项, 原项目索引)
    .否则
        赋值 (.现行选中项, 相减 (取项目数 (), 1))
    .如果结束
    _选择列表框_托盘_列表项被选择 ()
.默认
    
.判断结束
写出 () ' 保存改动到配置文件


.子程序 _选择列表框_标题_列表项被选择, 空白型, , 
赋值 (.内容, .取项目文本 (.现行选中项))


.子程序 _选择列表框_标题_选中状态被改变, 空白型, , 
.局部变量 容器1, 整数型, , , 
.局部变量 句柄标题, 文本型, , , 

 ' 时钟1.时钟周期 ＝ 0
.如果真 (是否正在隐藏)
    消息框 (_启动窗口.取窗口句柄 (), “当前正在隐藏窗口中，在此状态下，不允许修改列表内容的选中状态！请先显示所有窗口，然后再次执行！”, “信息”, #信息图标) ' 隐藏状态不允许改变列表框标题的选中与否
    .选中项目 (.现行选中项, 取反 (.是否被选中 (.现行选中项)))
    返回 ()
.如果真结束
写出 () ' 保存改动到配置文件


.子程序 _选择框同样热键_被单击, 空白型, , 
.如果 (.选中) ' 设置隐藏和显示使用相同的热键
    赋值 (.现行选中项, .现行选中项)
    赋值 (.现行选中项, .现行选中项)
    赋值 (.选中, .选中)
    赋值 (.选中, .选中)
    赋值 (.禁止, 真)
.否则
    赋值 (.禁止, 假)
.如果结束


.子程序 _组合框功能键1_列表项被选择, 空白型, , 
.如果真 (.选中)
    赋值 (.现行选中项, .现行选中项) ' 同步改变
.如果真结束


.子程序 _组合框按键1_列表项被选择, 空白型, , 
.如果真 (.选中)
    赋值 (.现行选中项, .现行选中项) ' 同步改变
.如果真结束


.子程序 _选择框鼠标双键1_被单击, 空白型, , 
.如果真 (.选中)
    赋值 (.选中, .选中) ' 同步改变
.如果真结束


.子程序 _选择框鼠标中键1_被单击, 空白型, , 
.如果真 (.选中)
    赋值 (.选中, .选中) ' 同步改变
.如果真结束


.子程序 _超级按钮文件_被单击, 空白型, , 
.如果真 (打开 ())
    赋值 (.内容, .文件名)
    写注册项 (#现行用户, “software\shide\option\runfilename”, .内容) ' 设置要运行的文件
.如果真结束


.子程序 _超级按钮密码_被单击, 空白型, , 
.局部变量 密码, 文本型, , , 

赋值 (_启动窗口., 假)
载入 (设置密码窗口, , 真) ' 设置密码
赋值 (_启动窗口., .选中)
赋值 (密码, 取文本注册项 (#现行用户, “software\shide\option\pwh”, “”)) ' 设置后，重新读取密码
.如果 (等于 (密码, “”))
    赋值 (.内容, 密码)
.否则
    赋值 (.内容, 取重复文本 (12, “*”))
.如果结束


.子程序 __启动窗口_可否被关闭, 逻辑型, , 
.如果 (等于 (_启动窗口., 假)) ' 在启动窗口隐藏时，产生此事件，一般是系统关机所致，所以这里不询问密码
    .如果真 (是否正在隐藏)
        显示 () ' 如果是隐藏状态，则先将所有被隐藏的窗口显示出来，再退出
    .如果真结束
    返回 (真)
.否则
    .如果真 (等于 (.选中, 真)) ' 如果主窗口可视，则判断是否允许关闭
        赋值 (_启动窗口., 假)
        赋值 (., 0)
        返回 (假)
    .如果真结束
    .如果真 (是否正在隐藏) ' 如果是隐藏状态，则先将所有被隐藏的窗口显示出来，再退出
        显示 ()
        .如果真 (并且 (.选中, 等于 (密码正确, 假))) ' 主窗口可视时，先询问密码
            返回 (假)
        .如果真结束
        
    .如果真结束
    返回 (真)
.如果结束


.子程序 _退出程序_被选择, 空白型, , 
.如果真 (.选中)
    载入 (输入密码窗口, , 真)
    .如果真 (等于 (密码正确, 假))
        返回 ()
    .如果真结束
    
.如果真结束
_退出按钮_被单击 ()


.子程序 _显示主窗口_被选择, 空白型, , 
.如果真 (_启动窗口.)
    返回 ()
.如果真结束
.如果真 (.选中)
    载入 (输入密码窗口, , 真)
    .如果真 (等于 (密码正确, 假))
        返回 ()
    .如果真结束
    
.如果真结束
赋值 (_启动窗口., 真)


.子程序 __启动窗口_托盘事件, 空白型, , 
.参数 操作类型, 整数型, , 

.判断开始 (等于 (操作类型, #单击右键))
    弹出托盘菜单 ()
.判断 (等于 (操作类型, #双击))
    _显示主窗口_被选择 ()
.默认
    
.判断结束


.子程序 _选择框隐藏主窗口_被单击, 空白型, , 
写注册项 (#现行用户, “software\shide\option\hmainw”, 选择 (.选中, 1, 0))


.子程序 _选择框屏蔽Win键2_被单击, 空白型, , 
.局部变量 钩子, 钩子处理, , , 

写注册项 (#现行用户, “software\shide\option\emableWin2”, 选择 (.选中, 1, 0))
.如果真 (等于 (.选中, 假))
    .如果真 (等于 (.选中, 假))
        钩子.卸载键盘钩子 ()
    .如果真结束
    
.如果真结束


.子程序 _修改按钮_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (等于 (键代码, #回车键)) ' 响应回车键，下同
    _修改按钮_被单击 ()
.如果真结束


.子程序 _添加按钮_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (等于 (键代码, #回车键))
    _添加按钮_被单击 ()
.如果真结束


.子程序 _删除按钮_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (等于 (键代码, #回车键))
    _删除按钮_被单击 ()
.如果真结束


.子程序 _退出按钮_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (等于 (键代码, #回车键))
    _退出按钮_被单击 ()
.如果真结束


.子程序 _保存按钮_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (等于 (键代码, #回车键))
    _保存按钮_被单击 ()
.如果真结束


.子程序 _取消按钮_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (等于 (键代码, #回车键))
    _取消按钮_被单击 ()
.如果真结束


.子程序 查找进程, 空白型, , 
.参数 进程名称, 文本型, , 
.参数 进程句柄, 整数型, 数组, 

.局部变量 索引, 整数型, , , 
.局部变量 进程名, 文本型, , , 
.局部变量 进程ID, 整数型, , , 

.计次循环首 (取数组成员数 (已隐藏的窗口), 索引)
    取窗口进程 (已隐藏的窗口 [索引], 进程ID)
    赋值 (进程名, 取模块路径 (进程ID))
    .如果真 (等于 (到大写 (进程名称), 到大写 (进程名)))
        加入成员 (进程句柄, 已隐藏的窗口 [索引])
    .如果真结束
    
.计次循环尾 ()


.子程序 取模块路径, 文本型, , 
.参数 ID, 整数型, , 

.局部变量 snap, 整数型, , , 
.局部变量 模块, 模块信息, , , 

赋值 (snap, 创建快照 (8, ID))
.如果真 (等于 (snap, -1))
    返回 (“”)
.如果真结束
赋值 (模块.size, 1024)
第一个模块 (snap, 模块)
关闭句柄 (snap)
返回 (到文本 (模块.szname))


.子程序 _选择列表框_进程_列表项被选择, 空白型, , 
赋值 (.内容, .取项目文本 (.现行选中项))


.子程序 _选择列表框_进程_选中状态被改变, 空白型, , 
.如果真 (是否正在隐藏)
    消息框 (_启动窗口.取窗口句柄 (), “当前正在隐藏窗口中，在此状态下，不允许改变列表内容的选中状态！请先显示所有窗口，然后再次执行！”, “信息”, #信息图标) ' 隐藏状态不允许改变选中情况
    .选中项目 (.现行选中项, 取反 (.是否被选中 (.现行选中项)))
    返回 ()
.如果真结束
写出 ()


.子程序 _时钟2_周期事件, 空白型, , 用于判断是否鼠标左右键双击
赋值 (左键按下, 假)
赋值 (右键按下, 假)


.子程序 _选择框任务栏程序_被单击, 空白型, , 
写注册项 (#现行用户, “software\shide\option\Allhtray_wnd”, 选择 (.选中, 1, 0))
.如果真 (等于 (.选中, 假))
    置任务栏程序隐藏 (假)
.如果真结束


.子程序 _高级选择夹2_子夹被改变, 空白型, , 设置不同界面标题及按钮名称
.判断开始 (等于 (., 0))
    赋值 (.标题, “窗口程序进程名称(不区分大小写)：”)
    赋值 (.标题, “  请用鼠标按住上边的放大镜，并将鼠标拖动到相应的窗口标题栏，即可在上边的文本框里面显示对应的进程名称！”)
    赋值 (., “添加进程名称(&A)”)
    赋值 (., “修改进程名称(&E)”)
    赋值 (., “删除进程名称(&D)”)
    赋值 (.禁止, 假)
.判断 (等于 (., 1))
    赋值 (.标题, “窗口标题文本(可以只添加关键词)：”)
    赋值 (.标题, “  请用鼠标按住上边的放大镜，并将鼠标拖动到相应的窗口标题栏，即可在上边的文本框里面显示标题！”)
    赋值 (., “添加窗口标题(&A)”)
    赋值 (., “修改窗口标题(&E)”)
    赋值 (., “删除窗口标题(&D)”)
    赋值 (.禁止, 假)
.判断 (等于 (., 2))
    赋值 (.标题, “托盘图标提示文本(可以只添加关键词)：”)
    赋值 (.标题, “  在文本框中输入要隐藏的托盘图标提示文本的部分内容（请尽量确保不会有两个以上托盘图标的提示文本包含所输入的关键词内容！）”)
    赋值 (., “添加托盘提示(&A)”)
    赋值 (., “修改托盘提示(&E)”)
    赋值 (., “删除托盘提示(&D)”)
    赋值 (.禁止, 真)
.默认
    
.判断结束


.子程序 _选择列表框_托盘_列表项被选择, 空白型, , 
赋值 (.内容, .取项目文本 (.现行选中项))


.子程序 _选择列表框_托盘_选中状态被改变, 空白型, , 
.如果真 (是否正在隐藏)
    消息框 (_启动窗口.取窗口句柄 (), “当前正在隐藏窗口中，在此状态下，不允许改变列表内容的选中状态！请先显示所有窗口，然后再次执行！”, “信息”, #信息图标) ' 隐藏状态不允许改变
    .选中项目 (.现行选中项, 取反 (.是否被选中 (.现行选中项)))
    返回 ()
.如果真结束
写出 ()


.子程序 _时钟1_周期事件, 空白型, , 隐藏状态下，监视窗口变化
.如果真 (是否正在隐藏)
    隐藏QQ ()
     ' 隐藏托盘图标 ()
    .如果真 (大于 (取数组成员数 (选中标题), 0))
        隐藏窗口 () ' 按标题隐藏窗口，如果需要同时监视进程，则应使用下一行代码，屏蔽本“如果真”代码
    .如果真结束
     ' 枚举并隐藏窗口 ()  ' 考虑到本程序使用的目的，在隐藏状态下，不可能有新的符合条件的进程运行，所以时钟周期内只对窗口标题进行判断，而不对所有进程进行重复判断。
.如果真结束


.类模块 系统控制, , , 

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 系统静音, 空白型, 公开, 
.参数 是否静音, 逻辑型, , 

_启动窗口.未知支持库函数_0 (., 4104) ' 只设置波形为静音，以避免任务栏托盘区音量上显示叉叉
_启动窗口.未知支持库函数_4 (., 是否静音)
_启动窗口.未知支持库函数_2 (., 2)


.子程序 关闭显示器, 空白型, 公开, 
.参数 是否关闭, 逻辑型, , 

.如果 (是否关闭)
    未知支持库函数_22 (_启动窗口.取窗口句柄 ())
.否则
    未知支持库函数_21 (_启动窗口.取窗口句柄 ())
.如果结束


.子程序 锁定鼠标, 空白型, 公开, 
.参数 是否锁定, 逻辑型, , 

.局部变量 区域位置, 矩形, , , 

.如果 (是否锁定)
    赋值 (区域位置.top, 取鼠标垂直位置 ())
    赋值 (区域位置.left, 取鼠标水平位置 ())
    赋值 (区域位置.right, 取鼠标水平位置 ())
    赋值 (区域位置.bottom, 取鼠标垂直位置 ())
    限制鼠标位置 (区域位置)
.否则
    取消鼠标限制 (0)
.如果结束


.类模块 钩子处理, , , 

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 安装键盘钩子, 整数型, 公开, 本程序中用以屏蔽WIN键，返回非0表示成功
.如果真 (等于 (键盘钩子句柄, 0))
    赋值 (键盘钩子句柄, 安装钩子 (13, &键盘钩子处理, 取模块句柄 (0), 0))
    返回 (键盘钩子句柄)
.如果真结束
返回 (0)


.子程序 卸载键盘钩子, 整数型, 公开, 返回0表示卸载成功
.如果真 (不等于 (键盘钩子句柄, 0))
    .如果真 (不等于 (卸载钩子 (键盘钩子句柄), 0))
        赋值 (键盘钩子句柄, 0)
    .如果真结束
    返回 (键盘钩子句柄)
.如果真结束
返回 (1)


.子程序 安装鼠标钩子, 整数型, 公开, 返回非0表示成功
.如果真 (等于 (鼠标钩子句柄, 0))
    赋值 (鼠标钩子句柄, 安装钩子 (14, &鼠标钩子处理, 取模块句柄 (0), 0)) ' 截获鼠标双键同时按下事件及中键按下事件
    返回 (鼠标钩子句柄)
.如果真结束
返回 (0)


.子程序 卸载鼠标钩子, 整数型, 公开, 返回0表示成功
.如果真 (不等于 (鼠标钩子句柄, 0))
    .如果真 (不等于 (卸载钩子 (鼠标钩子句柄), 0))
        赋值 (鼠标钩子句柄, 0)
    .如果真结束
    返回 (鼠标钩子句柄)
.如果真结束
返回 (1)


.窗口程序集 输入密码窗口程序集, , , 

.子程序 _输入密码窗口_创建完毕, 空白型, , 
赋值 (., 相减 (相加 (., 170), 取用户区高度 ())) ' 调整xp模式和经典模式窗口调试
赋值 (密码正确, 假) ' 初始化此变量为假


.子程序 _超级按钮1_被单击, 空白型, , 
.局部变量 旧密码, 文本型, , , 

.如果 (等于 (.内容, “”))
    赋值 (旧密码, “”)
.否则
    赋值 (旧密码, 未知支持库函数_2 (到字节集 (.内容)))
.如果结束
赋值 (密码正确, 等于 (旧密码, 取文本注册项 (#现行用户, “software\shide\option\pwh”, “”))) ' 密码正确返回真，否则返回假
销毁 ()


.子程序 _超级按钮2_被单击, 空白型, , 
销毁 () ' 取消退出返回假


.子程序 _编辑框1_获得焦点, 空白型, , 
赋值 (.被选择字符数, -1)


.子程序 _超级按钮1_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (等于 (键代码, #回车键)) ' 响应回车键
    _超级按钮1_被单击 ()
.如果真结束


.子程序 _超级按钮2_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (等于 (键代码, #回车键)) ' 响应回车键
    _超级按钮2_被单击 ()
.如果真结束


.子程序 _编辑框1_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (等于 (键代码, #回车键)) ' 默认按钮为超级按钮1（确定按钮）
    _超级按钮1_被单击 ()
.如果真结束


.窗口程序集 设置密码窗口程序集, , , 

.子程序 _设置密码窗口_创建完毕, 空白型, , 
赋值 (., 相减 (相加 (., 102), 取用户区高度 ())) ' 调整调试以适合不同模式


.子程序 _超级按钮2_被单击, 空白型, , 
销毁 ()


.子程序 _超级按钮1_被单击, 空白型, , 
.局部变量 旧密码, 文本型, , , 

.如果 (等于 (.内容, “”))
    赋值 (旧密码, “”)
.否则
    赋值 (旧密码, 未知支持库函数_2 (到字节集 (.内容)))
.如果结束
.如果 (等于 (旧密码, 取文本注册项 (#现行用户, “software\shide\option\pwh”, “”))) ' 验证旧密码是否正确
    .如果 (等于 (.内容, .内容)) ' 验证两次输入的新密码是否一致
        .如果 (等于 (删首尾空 (.内容), “”))
            写注册项 (#现行用户, “software\shide\option\pwh”, “”) ' 如果密码为空，则写入空文本
        .否则
            写注册项 (#现行用户, “software\shide\option\pwh”, 未知支持库函数_2 (到字节集 (.内容))) ' 否则写入摘要文本
        .如果结束
        
    .否则
        信息框 (“输入的新密码复核错误，请重新输入新密码！”, #信息图标, ) ' 如果新密码不一致，则返回重输入
        获取焦点 () ' 重新输入新密码
        返回 ()
    .如果结束
    
.否则
    信息框 (“输入旧密码错误，你无权修改密码！”, #信息图标, ) ' 如果旧密码错误，则不允许修改密码
    获取焦点 () ' 重新输入旧密码
    返回 ()
.如果结束
销毁 () ' 新密码修改成功，则关闭窗口


.子程序 _编辑框1_获得焦点, 空白型, , 
赋值 (.被选择字符数, -1)


.子程序 _编辑框2_获得焦点, 空白型, , 
赋值 (.被选择字符数, -1)


.子程序 _编辑框3_获得焦点, 空白型, , 
赋值 (.被选择字符数, -1)


.子程序 _超级按钮1_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (等于 (键代码, #回车键))
    _超级按钮1_被单击 ()
.如果真结束


.子程序 _超级按钮2_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (等于 (键代码, #回车键))
    _超级按钮2_被单击 ()
.如果真结束


.类模块 托盘操作, , , 

.程序集变量 托盘区句柄, 整数型, , , 
.程序集变量 托盘图标属性, NOTIFYICONDATA, , , 
.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用
赋值 (托盘区句柄, 取托盘区句柄 ())


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 取托盘区句柄, 整数型, , 
.局部变量 系统句柄, 整数型, , , SysPager
.局部变量 句柄, 整数型, , , 
.局部变量 托盘句柄, 整数型, , , 

赋值 (句柄, 查找窗口 (“Shell_TrayWnd”, “”))
赋值 (句柄, 寻找子窗口2 (句柄, 0, “TrayNotifyWnd”, 0))
赋值 (系统句柄, 寻找子窗口2 (句柄, 0, “SysPager”, 0))
.如果真 (不等于 (系统句柄, 0)) ' 2003,XP,2000，Windows ME没有 "SysPager" 容器,“TrayNotifyWnd”容器中直接就是“ToolbarWindow32”
    赋值 (句柄, 系统句柄)
.如果真结束
赋值 (托盘句柄, 寻找子窗口2 (句柄, 0, “ToolbarWindow32”, 0))
.如果真 (等于 (托盘句柄, 0)) ' Windows 98没有“ToolbarWindow32”
    赋值 (托盘句柄, 句柄)
.如果真结束
返回 (托盘句柄)


.子程序 取托盘图标属性, 空白型, , 
.参数 包含的标题, 文本型, , 
.参数 结果, 整数型, 数组, 

.局部变量 托盘图标信息, TBBUTTONINFO, , , 
.局部变量 线程标志, 整数型, , , 
.局部变量 进程源句柄, 整数型, , , 
.局部变量 进程目标句柄, 整数型, , , 
.局部变量 pStart, 整数型, , , 
.局部变量 操作结果, 整数型, , , 
.局部变量 pBufStart, 整数型, , , 
.局部变量 读操作, 整数型, , , 0
.局部变量 写操作, 整数型, , , 0
.局部变量 标题长度, 整数型, , , 
.局部变量 图标索引, 整数型, , , 
.局部变量 文本缓冲长度, 整数型, , , 
.局部变量 dwAllocSize, 整数型, , , 
.局部变量 临时缓冲数组, 字节型, , "254", 
.局部变量 图标数, 整数型, , , 

 ' 注：本子程序中所用到api函数及常量，实在无法正确地翻译，所以干脆不译了
清除数组 (结果)
赋值 (文本缓冲长度, 255)
赋值 (dwAllocSize, 32)
取窗口线程标识 (托盘区句柄, 线程标志)
赋值 (进程源句柄, 打开进程 (#PROCESS_ALL_ACCESS, 0, 线程标志))
.如果真 (等于 (进程源句柄, 0)) ' 打开进程失败
    输出调试文本 (“打开进程失败”)
    返回 ()
.如果真结束
赋值 (操作结果, DuplicateHandle (取当前进程句柄 (), 进程源句柄, 取当前进程句柄 (), 进程目标句柄, #PROCESS_ALL_ACCESS, 0, 0))
.如果真 (等于 (操作结果, 0)) ' 复制句柄失败
    输出调试文本 (“复制句柄失败”)
    关闭句柄 (进程源句柄)
    返回 ()
.如果真结束
赋值 (pStart, VirtualAllocEx (进程目标句柄, 0, dwAllocSize, #MEM_COMMIT, #PAGE_READWRITE))
赋值 (pBufStart, VirtualAllocEx (进程目标句柄, 0, 文本缓冲长度, #MEM_COMMIT, #PAGE_READWRITE)) ' 工具提示信息存放空间
.如果真 (或者 (等于 (pStart, 0), 等于 (pBufStart, 0))) ' 分配内存失败
    输出调试文本 (“分配内存失败”)
    关闭句柄 (进程目标句柄)
    返回 ()
.如果真结束
赋值 (图标数, 消息_图标操作 (托盘区句柄, #TB_BUTTONCOUNT, 0, 0))
.变量循环首 (1, 图标数, 1, 图标索引)
    赋值 (托盘图标信息.cbSize, dwAllocSize)
    赋值 (托盘图标信息.dwMask, 位或 (#TBIF_BYINDEX, #TBIF_COMMAND, #TBIF_STATE, #TBIF_STYLE, #TBIF_IMAGE, #TBIF_LPARAM, #TBIF_SIZE)) ' 'Or TBIF_TEXT
    写进程内存 (进程目标句柄, pStart, 取变量数据地址 (托盘图标信息.cbSize), dwAllocSize, 读操作)
    消息_图标操作 (托盘区句柄, #TB_GETBUTTONINFOA, 相减 (图标索引, 1), pStart)
    读进程内存 (进程目标句柄, pStart, 取变量数据地址 (托盘图标信息.cbSize), dwAllocSize, 写操作)
    重定义数组 (临时缓冲数组, 假, 文本缓冲长度)
    写进程内存 (进程目标句柄, pBufStart, 取变量数据地址 (临时缓冲数组 [1]), 文本缓冲长度, 读操作)
    赋值 (标题长度, 消息_图标操作 (托盘区句柄, #TB_GETBUTTONTEXTA, 托盘图标信息.idCommand, pBufStart))
    读进程内存 (进程目标句柄, pBufStart, 取变量数据地址 (临时缓冲数组 [1]), 文本缓冲长度, 写操作)
    .如果真 (大于 (标题长度, 0))
        重定义数组 (临时缓冲数组, 真, 标题长度)
        .如果真 (不等于 (寻找文本 (到大写 (到文本 (临时缓冲数组)), 到大写 (包含的标题), , 假), -1))
            加入成员 (结果, 托盘图标信息.idCommand)
        .如果真结束
        
    .如果真结束
    
.变量循环尾 ()
VirtualFreeEx (进程目标句柄, pStart, dwAllocSize, #MEM_DECOMMIT)
VirtualFreeEx (进程目标句柄, pBufStart, 文本缓冲长度, #MEM_DECOMMIT)


.子程序 加入图标, 空白型, , 
.参数 句柄, 空白型, , 
.参数 标题, 文本型, , 
.参数 图标, 空白型, , 

赋值 (托盘图标属性.cbSize, 88)
赋值 (托盘图标属性.hwnd, 句柄)
赋值 (托盘图标属性.uId, 1)
赋值 (托盘图标属性.uFlags, 位或 (#NIF_ICON, #NIF_TIP, #NIF_MESSAGE))
赋值 (托盘图标属性.ucallbackMessage, #WM_LBUTTONDOWN)
赋值 (托盘图标属性.hIcon, 图标)
lstrcpyn (托盘图标属性.szTip, 标题, 相加 (取文本长度 (标题), 1))
修改托盘图标 (#NIM_ADD, 托盘图标属性)


.子程序 移除图标, 空白型, , 
.参数 句柄, 空白型, , 

赋值 (托盘图标属性.cbSize, 88)
赋值 (托盘图标属性.hwnd, 句柄)
赋值 (托盘图标属性.uId, 1)
修改托盘图标 (#NIM_DELETE, 托盘图标属性)


.子程序 隐藏图标, 空白型, 公开, 
.参数 部分标题, 文本型, , 

.局部变量 标题索引, 整数型, , "0", 
.局部变量 结果值, 整数型, , , 
.局部变量 索引, 整数型, , , 

取托盘图标属性 (部分标题, 标题索引)
.如果真 (不等于 (取数组成员数 (标题索引), 0))
    .计次循环首 (取数组成员数 (标题索引), 索引)
        赋值 (结果值, 消息_图标操作 (托盘区句柄, #TB_HIDEBUTTON, 标题索引 [索引], 1))
    .计次循环尾 ()
    加入图标 (0, “”, 0)
    SwitchToThread ()
    移除图标 (0)
.如果真结束


.子程序 显示图标, 空白型, 公开, 
.参数 部分标题, 文本型, , 

.局部变量 标题索引, 整数型, , "0", 
.局部变量 结果值, 整数型, , , 
.局部变量 索引, 整数型, , , 

取托盘图标属性 (部分标题, 标题索引)
.如果真 (不等于 (取数组成员数 (标题索引), 0))
    .计次循环首 (取数组成员数 (标题索引), 索引)
        赋值 (结果值, 消息_图标操作 (托盘区句柄, #TB_HIDEBUTTON, 标题索引 [索引], 0))
    .计次循环尾 ()
    加入图标 (0, “”, 0)
    SwitchToThread ()
    移除图标 (0)
.如果真结束


.程序集 桌面控制程序集, , , 

.程序集变量 桌面句柄, 空白型, , , 
.程序集变量 任务栏句柄, 空白型, , , 
.程序集变量 开始按钮句柄, 空白型, , , 
.程序集变量 任务栏中间句柄, 空白型, , , 
.程序集变量 任务栏程序句柄, 空白型, , , 
.程序集变量 托盘区句柄, 空白型, , , 
.程序集变量 托盘区页句柄, 空白型, , , 
.程序集变量 快速启动句柄, 空白型, , , 
.子程序 桌面信息初始化, 空白型, , 
.局部变量 托盘句柄, 整数型, , , 

赋值 (桌面句柄, 查找窗口 (“Progman”, “Program Manager”))
赋值 (任务栏句柄, 查找窗口 (“Shell_TrayWnd”, “”))
赋值 (开始按钮句柄, 寻找子窗口 (任务栏句柄, 0, “Button”, “开始”))
赋值 (任务栏中间句柄, 寻找子窗口 (任务栏句柄, 0, “ReBarWindow32”, “”))
赋值 (任务栏程序句柄, 寻找子窗口 (任务栏中间句柄, 0, “MSTaskSwWClass”, “运行应用程序”))
赋值 (快速启动句柄, 寻找子窗口 (任务栏中间句柄, 0, “ToolbarWindow32”, “Quick Launch”))
赋值 (托盘句柄, 寻找子窗口 (任务栏句柄, 0, “TrayNotifyWnd”, “”))
赋值 (托盘区句柄, 寻找子窗口 (托盘句柄, 0, “ToolbarWindow32”, “”))
赋值 (托盘区页句柄, 托盘区句柄)
.如果真 (等于 (托盘区句柄, 0)) ' 如果没有找到ToolbarWindow32，则先寻找SysPager，再找ToolbarWindow32。这里找托盘区句柄使用了和类“托盘操作”中不同的顺序，其实结果一样。大家可以自行比较，如果合并为一个也完全可以。
    赋值 (托盘区页句柄, 寻找子窗口 (托盘句柄, 0, “SysPager”, “”))
    赋值 (托盘区句柄, 寻找子窗口 (托盘区页句柄, 0, “ToolbarWindow32”, “”))
.如果真结束


.子程序 置开始按钮隐藏, 空白型, , 
.参数 是否隐藏, 逻辑型, , 

置窗口可视属性 (开始按钮句柄, 选择 (等于 (是否隐藏, 真), 0, 5))


.子程序 置任务栏程序隐藏, 空白型, , 
.参数 是否隐藏, 逻辑型, , 

置窗口可视属性 (任务栏程序句柄, 选择 (等于 (是否隐藏, 真), 0, 5))


.子程序 置托盘图标隐藏, 空白型, , 
.参数 是否隐藏, 逻辑型, , 

置窗口可视属性 (托盘区页句柄, 选择 (等于 (是否隐藏, 真), 0, 5))
置窗口可视属性 (托盘区句柄, 选择 (等于 (是否隐藏, 真), 0, 5))


.子程序 置任务栏中间隐藏, 空白型, , 
.参数 是否隐藏, 逻辑型, , 

置窗口可视属性 (任务栏中间句柄, 选择 (等于 (是否隐藏, 真), 0, 5))


.子程序 置整个任务栏隐藏, 空白型, , 
.参数 是否隐藏, 逻辑型, , 

置窗口可视属性 (任务栏句柄, 选择 (等于 (是否隐藏, 真), 0, 5))


.子程序 置桌面隐藏, 空白型, , 
.参数 是否隐藏, 逻辑型, , 

置窗口可视属性 (桌面句柄, 选择 (等于 (是否隐藏, 真), 0, 5))



 ' 不属于任何一个程序集、类模块的函数：
