 ' 文件类型：Windows窗口程序

 ' 程序名称：立体文字
 ' 程序描述：    本程序演示如何在易语言中利用OPenGL支持库，带纹理的转动的立体中文和英文字符效果。
    具体教程请见随系统附带的"OpenGL支持库及向导使用教程.doc"文件。
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 380
    高度 = 250
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 1
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 0
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “”
    帮助文件名 = “”





 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 1 系统核心支持库
 ' OPenGL F05D3E4CE9E84d0f82332D62BAF6447F 1 1 OPenGL支持库





.DLL命令 选择目标, 整数型, "", "SelectObject", , 
    .参数 设备句柄, 空白型, , 
    .参数 目标号, 空白型, , 

.DLL命令 创建字体, 整数型, "", "CreateFontA", , 
    .参数 高度, 空白型, , 
    .参数 宽度, 空白型, , 
    .参数 倾斜角度, 空白型, , 
    .参数 后仰角度, 空白型, , 
    .参数 重量, 空白型, , 
    .参数 斜体, 空白型, , 
    .参数 下划线, 空白型, , 
    .参数 StrikeOut字体, 空白型, , 
    .参数 字符集, 空白型, , 
    .参数 输出精度, 空白型, , 
    .参数 裁剪精度, 空白型, , 
    .参数 输出质量, 空白型, , 
    .参数 定位, 空白型, , 
    .参数 字体名称, 文本型, , 可以为空

.DLL命令 删除目标, 逻辑型, "", "DeleteObject", , 
    .参数 目标号, 空白型, , 

.窗口程序集 窗口程序集1, , , 

.程序集变量 窗口句柄, 整数型, , , 
.子程序 __启动窗口_创建完毕, 空白型, , 
赋值 (_启动窗口.标题, “立体文字”)
赋值 (窗口句柄, _启动窗口.取窗口句柄 ())
建立OPenGL组件 (窗口句柄)

.子程序 __启动窗口_尺寸被改变, 空白型, , 
尺寸被改变 (0, 0, _启动窗口.取用户区宽度 (), _启动窗口.取用户区高度 ())

.子程序 __启动窗口_将被销毁, 空白型, , 
撤消OPenGL组件 (窗口句柄)

.子程序 _时钟1_周期事件, 空白型, , 
绘图 ()

.程序集 框架程序集, , , 

.程序集变量 着色描述表号, 整数型, , , 
.程序集变量 设备句柄, 整数型, , , OPenGL组件的设备句柄
.程序集变量 匿名程序集变量_877, 空白型, , , ========== 操作变量 ==========
.程序集变量 角度, 双精度小数型, , , 
.程序集变量 混合字体列表数组, 空白型, , "0", 
.程序集变量 单字节字体列表数组, 空白型, , "0", 
.程序集变量 混合字体基础列表号, 空白型, , , 
.程序集变量 单字节字体基础列表号, 空白型, , , 
.子程序 建立OPenGL组件, 空白型, , 为指定的窗口组件建立可供显示OPenGL的设备场景
.参数 窗口句柄, 空白型, , 

.局部变量 像素格式号, 空白型, , , 
.局部变量 像素格式, 未知类型0x20001, , , 

赋值 (设备句柄, 未知支持库函数_5 (窗口句柄))
赋值 (像素格式., 40)
赋值 (像素格式., 1)
赋值 (像素格式., 位或 (#, #, #))
赋值 (像素格式., 24)
赋值 (像素格式., 32)
赋值 (像素格式., 0)
赋值 (像素格式号, 未知支持库函数_0 (设备句柄, 像素格式))
未知支持库函数_1 (设备句柄, 像素格式号, 像素格式)
赋值 (着色描述表号, 未知支持库函数_2 (设备句柄))
未知支持库函数_3 (设备句柄, 着色描述表号)
框架初始化 ()

.子程序 撤消OPenGL组件, 空白型, , 撤消已经建立的OPenGL设备场景
.参数 窗口句柄, 空白型, , 

.局部变量 循环变量, 整数型, , , 

赋值 (循环变量, 1)
.判断循环首 (未知支持库函数_72 (循环变量))
    未知支持库函数_73 (循环变量, 1)
    赋值 (循环变量, 相加 (循环变量, 1))
.判断循环尾 ()
 ' 删除所有已经创建的显示列表
未知支持库函数_3 (0, 0)
未知支持库函数_4 (着色描述表号)
未知支持库函数_7 (窗口句柄, 设备句柄)

.子程序 框架初始化, 空白型, , 所有的OpenGL初始化都在这里
未知支持库函数_44 (0.4, 0.4, 0.4, 1) ' 在这里修改你的背景颜色
未知支持库函数_58 (#)
未知支持库函数_45 (1)
未知支持库函数_50 (#)
未知支持库函数_35 (#)
未知支持库函数_32 (#, #)
赋值 (单字节字体基础列表号, 100)
赋值 (混合字体基础列表号, 200)
创建字体纹理 ()
创建混合字体列表 ()
创建单字体列表 ()

.子程序 绘图, 空白型, , 所有的绘图工作都在这里完成
未知支持库函数_42 (位或 (#, #))
未知支持库函数_8 ()
 ' 在这里加入你的代码
赋值 (角度, 相加 (角度, 1))
.如果真 (大于或等于 (角度, 360))
    赋值 (角度, 0)
.如果真结束
未知支持库函数_10 (0, 0, -8)
未知支持库函数_11 (角度, 0, 1, 0)
未知支持库函数_10 (-3, 0, 0)
未知支持库函数_74 (混合字体基础列表号) ' 告诉“调用多显示列表”，从“基础列表号”开始调用
未知支持库函数_75 (混合字体列表数组) ' 显示立体文字
未知支持库函数_10 (-6, -1, 0)
未知支持库函数_74 (单字节字体基础列表号) ' 告诉“调用多显示列表”，从“基础列表号”开始调用
未知支持库函数_75 (单字节字体列表数组) ' 显示立体文字
未知支持库函数_38 (设备句柄) ' 执行现有的命令并且显示在组件上

.子程序 尺寸被改变, 空白型, , 修改可视范围
.参数 左边, 空白型, , 
.参数 底边, 空白型, , 
.参数 宽度, 空白型, , 
.参数 高度, 空白型, , 

未知支持库函数_15 (左边, 底边, 宽度, 高度)
未知支持库函数_9 (#)
未知支持库函数_8 ()
未知支持库函数_20 (45, 相除 (宽度, 高度), 0.1, 100)
未知支持库函数_9 (#)
未知支持库函数_8 ()

.子程序 创建单字体列表, 空白型, , 
.局部变量 文本, 文本型, , , 
.局部变量 长度, 空白型, , , 
.局部变量 循环变量, 空白型, , , 
.局部变量 代码, 空白型, , , 
.局部变量 字体号, 空白型, , , 
.局部变量 目标号, 空白型, , , 

赋值 (字体号, 创建字体 (-1, -1, 0, 0, 700, 0, 0, 0, 2, 0, 0, 2, 54, “Wingdings”))
赋值 (目标号, 选择目标 (设备句柄, 字体号)) ' 让显示设备使用刚刚创建的字体
.如果 (等于 (目标号, 0))
    信息框 (“选择目标失败！”, 0, “注意：”)
.否则
    赋值 (文本, “abcdef”) ' 显示的文本内容
    赋值 (长度, 取文本长度 (文本))
    赋值 (循环变量, 0)
    清除数组 (单字节字体列表数组)
    .判断循环首 (小于 (循环变量, 长度))
        赋值 (代码, 取代码 (文本, 相加 (循环变量, 1))) ' 英文使用的是单字节
        未知支持库函数_82 (设备句柄, 代码, 1, 相加 (循环变量, 单字节字体基础列表号), 0, 0.2, 真) ' 每次只建立一个字符的轮廓列表，文字被拉伸的厚度为0.2
        加入成员 (单字节字体列表数组, 循环变量)
        赋值 (循环变量, 相加 (循环变量, 1))
    .判断循环尾 ()
    .如果真 (取反 (删除目标 (目标号)))
        信息框 (“删除目标失败！”, 0, “注意：”)
    .如果真结束
    
.如果结束


.子程序 创建混合字体列表, 空白型, , 
.局部变量 文本, 文本型, , , 
.局部变量 长度, 空白型, , , 
.局部变量 循环变量, 空白型, , , 
.局部变量 代码, 空白型, , , 
.局部变量 字体号, 空白型, , , 
.局部变量 目标号, 空白型, , , 

赋值 (字体号, 创建字体 (-2, -2, 0, 0, 700, 0, 0, 0, 0, 0, 0, 2, 54, “宋体”))
赋值 (目标号, 选择目标 (设备句柄, 字体号)) ' 让显示设备使用刚刚创建的字体
.如果 (等于 (目标号, 0))
    信息框 (“选择目标失败！”, 0, “注意：”)
.否则
    赋值 (文本, “中文和English”) ' 显示的文本内容
    赋值 (长度, 取文本长度 (文本))
    赋值 (循环变量, 0)
    清除数组 (混合字体列表数组)
    .判断循环首 (小于 (循环变量, 长度))
        .如果 (未知支持库函数_81 (文本, 循环变量))
            赋值 (代码, 取代码 (文本, 相加 (循环变量, 1)))
            赋值 (代码, 相乘 (相加 (代码, 1), 256)) ' 中文使用的是双字节
            赋值 (循环变量, 相加 (循环变量, 1))
            赋值 (代码, 相加 (代码, 取代码 (文本, 相加 (循环变量, 1))))
        .否则
            赋值 (代码, 取代码 (文本, 相加 (循环变量, 1))) ' 英文使用的是单字节
        .如果结束
        未知支持库函数_82 (设备句柄, 代码, 1, 相加 (循环变量, 混合字体基础列表号), 0, 0.2, 真) ' 每次只建立一个字符的轮廓列表，文字被拉伸的厚度为0.2
        加入成员 (混合字体列表数组, 循环变量)
        赋值 (循环变量, 相加 (循环变量, 1))
    .判断循环尾 ()
    .如果真 (取反 (删除目标 (目标号)))
        信息框 (“删除目标失败！”, 0, “注意：”)
    .如果真结束
    
.如果结束


.子程序 创建字体纹理, 空白型, , 
.局部变量 图片, 字节集, , , 
.局部变量 循环变量, 空白型, , , 
.局部变量 字节, 字节型, , "4", 

.计次循环首 (32, 循环变量)
    赋值 (字节 [1], 求余数 (相乘 (循环变量, 10), 255))
    赋值 (字节 [2], 求余数 (相乘 (循环变量, 10), 255))
    赋值 (字节 [3], 求余数 (相乘 (循环变量, 20), 255))
    赋值 (字节 [4], 255)
    赋值 (图片, 相加 (图片, 到字节集 (字节)))
.计次循环尾 ()
未知支持库函数_59 (#, 1)
未知支持库函数_60 (#, #, #)
未知支持库函数_60 (#, #, #)
未知支持库函数_60 (#, #, #)
未知支持库函数_61 (0, 4, 32, #, 图片)
未知支持库函数_64 (#, #)
未知支持库函数_50 (#)
未知支持库函数_50 (#)
未知支持库函数_66 (#, #, #)
未知支持库函数_66 (#, #, { 0.4, 0.2, 1, 0 })


 ' 不属于任何一个程序集、类模块的函数：
