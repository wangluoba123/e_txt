 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 382
    高度 = 137
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “清理垃圾文件”
    帮助文件名 = “”



.常量 HKEY_CLASSES_ROOT, "2147483648", , 注册表标准项名。
.常量 HKEY_CURRENT_USER, "2147483649", , 注册表标准项名。
.常量 HKEY_LOCAL_MACHINE, "2147483650", , 注册表标准项名。
.常量 KEY_ALL_ACCESS, "983103", , 所有权限。
.常量 GENERIC_READ, "2147483648", , 
.常量 GENERIC_WRITE, "1073741824", , 
.常量 CREATE_ALWAYS, "2", , 
.常量 FILE_ATTRIBUTE_NORMAL, "128", , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 4 系统核心支持库





.DLL命令 GetTempPath, 整数型, "kernel32.dll", "GetTempPathA", , 
    .参数 nBufferLength, 整数型, , 
    .参数 lpBuffer, 文本型, 传址, 

.DLL命令 RegOpenKeyEx, 整数型, "advapi32.dll", "RegOpenKeyExA", , 
    .参数 hKey, 整数型, , 
    .参数 lpSubKey, 文本型, 传址, 
    .参数 ulOptions, 整数型, , 
    .参数 samDesired, 整数型, , 
    .参数 phkResult, 整数型, 传址, 

.DLL命令 RegQueryInfoKey, 整数型, "advapi32.dll", "RegQueryInfoKeyA", , 
    .参数 hKey, 整数型, , 
    .参数 lpClass, 整数型, , 
    .参数 lpcbClass, 整数型, , 
    .参数 lpReserved, 整数型, , 
    .参数 lpcSubKeys, 整数型, , 
    .参数 lpcbMaxSubKeyLen, 整数型, , 
    .参数 lpcbMaxClassLen, 整数型, , 
    .参数 lpcValues, 整数型, , 
    .参数 lpcbMaxValueNameLen, 整数型, , 
    .参数 lpcbMaxValueLen, 整数型, 传址, 
    .参数 lpcbSecurityDescriptor, 整数型, , 
    .参数 lpftLastWriteTime, 整数型, , 

.DLL命令 RegQueryValueEx, 整数型, "advapi32.dll", "RegQueryValueExA", , 
    .参数 hKey, 整数型, , 
    .参数 lpValueName, 文本型, 传址, 
    .参数 lpReserved, 整数型, , 
    .参数 lpType, 整数型, , 
    .参数 lpData, 文本型, 传址, 
    .参数 lpcbData, 整数型, 传址, 

.DLL命令 CreateFile, 整数型, "kernel32.dll", "CreateFileA", , 
    .参数 lpFileName, 文本型, 传址, 
    .参数 dwDesiredAccess, 整数型, , 
    .参数 dwShareMode, 整数型, , 
    .参数 lpSecurityAttributes, 整数型, , 
    .参数 dwCreationDisposition, 整数型, , 
    .参数 dwFlagsAndAttributes, 整数型, , 
    .参数 hTemplateFile, 整数型, , 

.DLL命令 ExpandEnvironmentStrings, 整数型, "kernel32.dll", "ExpandEnvironmentStringsA", , 
    .参数 lpSrc, 文本型, 传址, 
    .参数 lpDst, 文本型, 传址, 
    .参数 nSize, 整数型, , 

.DLL命令 RegCloseKey, 整数型, "advapi32.dll", "RegCloseKey", , 
    .参数 hKey, 整数型, , 

.DLL命令 CloseHandle, 整数型, "kernel32.dll", "CloseHandle", , 
    .参数 hObject, 整数型, , 

.DLL命令 FindFirstFile, 整数型, "kernel32.dll", "FindFirstFileA", , 
    .参数 lpFileName, 文本型, 传址, 
    .参数 lpFindFileData, 字节集, 传址, 

.DLL命令 FindClose, 整数型, "kernel32.dll", "FindClose", , 
    .参数 hFindFile, 整数型, , 

.DLL命令 FindNextFile, 整数型, "kernel32.dll", "FindNextFileA", , 
    .参数 hFindFile, 整数型, , 
    .参数 lpFindFileData, 字节集, 传址, 

.DLL命令 DeleteFile, 整数型, "kernel32.dll", "DeleteFileA", , 
    .参数 lpFileName, 文本型, 传址, 

.DLL命令 SetFileAttributes, 整数型, "kernel32.dll", "SetFileAttributesA", , 
    .参数 lpFileName, 文本型, 传址, 
    .参数 dwFileAttributes, 整数型, , 

.DLL命令 RemoveDirectory, 整数型, "kernel32.dll", "RemoveDirectoryA", , 
    .参数 lpPathName, 文本型, 传址, 

.窗口程序集 窗口程序集_启动窗口, , , 

.子程序 __启动窗口_创建完毕, 空白型, , 
.局部变量 临时文件夹, 文本型, , , 
.局部变量 临时文件夹长度, 整数型, , , 
.局部变量 注册表项名, 文本型, , , 
.局部变量 注册表项句柄, 整数型, , , 
.局部变量 匿名局部变量_125, 空白型, , , 
.局部变量 系统临时文件夹, 文本型, , , 
.局部变量 系统临时文件夹长度, 整数型, , , 
.局部变量 匿名局部变量_218, 空白型, , , 
.局部变量 临时缓冲区, 文本型, , , 
.局部变量 临时缓冲区长度, 整数型, , , 

 ' 获取临时文件夹缓冲区的长度
赋值 (临时文件夹长度, GetTempPath (0, 临时文件夹))

 ' 初始化临时文件夹缓冲区，并获取临时文件夹。
赋值 (临时文件夹, 取空白文本 (临时文件夹长度))
赋值 (临时文件夹长度, GetTempPath (临时文件夹长度, 临时文件夹))
输出调试文本 (相加 (“临时文件夹：”, 临时文件夹))

.如果真 (不等于 (取文本右边 (临时文件夹, 1), “\”))
    赋值 (临时文件夹, 相加 (临时文件夹, “\”))
.如果真结束

 ' 把获取的临时文件夹显示出来。
赋值 (., 临时文件夹)

 ' 打开系统临时文件夹的注册表项。
赋值 (注册表项名, “SYSTEM\CurrentControlSet\Control\Session Manager\Environment”)
.如果真 (不等于 (RegOpenKeyEx (#HKEY_LOCAL_MACHINE, 注册表项名, 0, #KEY_ALL_ACCESS, 注册表项句柄), 0))
    信息框 (“获取系统临时文件夹失败！”, 相加 (#确认钮, #错误图标), “警告”)
    结束 ()
.如果真结束
输出调试文本 (相加 (“注册表项句柄：”, 到文本 (注册表项句柄)))

 ' 获取系统临时文件夹缓冲区长度。
.如果真 (不等于 (RegQueryInfoKey (注册表项句柄, 0, 0, 0, 0, 0, 0, 0, 0, 系统临时文件夹长度, 0, 0), 0))
    信息框 (“获取系统临时文件夹失败！”, 相加 (#确认钮, #错误图标), “警告”)
    RegCloseKey (注册表项句柄)
    结束 ()
.如果真结束
输出调试文本 (相加 (“注册表项中数据缓冲区最大长度：”, 到文本 (系统临时文件夹长度)))

 ' 初始化系统临时文件夹缓冲区，并获取系统临时文件夹。
赋值 (系统临时文件夹, 取空白文本 (系统临时文件夹长度))
.如果真 (不等于 (RegQueryValueEx (注册表项句柄, “TMP”, 0, 0, 系统临时文件夹, 系统临时文件夹长度), 0))
    信息框 (“获取系统临时文件夹失败！”, 相加 (#确认钮, #错误图标), “警告”)
    RegCloseKey (注册表项句柄)
    结束 ()
.如果真结束
输出调试文本 (相加 (“系统临时文件夹：”, 系统临时文件夹))

 ' 关闭打开的注册表项
RegCloseKey (注册表项句柄)

.如果真 (不等于 (取文本右边 (系统临时文件夹, 1), “\”))
    赋值 (系统临时文件夹, 相加 (系统临时文件夹, “\”))
.如果真结束

 ' 扩展系统临时文件夹中的环境变量。
赋值 (临时缓冲区长度, ExpandEnvironmentStrings (系统临时文件夹, 临时缓冲区, 0))
.如果真 (等于 (临时缓冲区长度, 0))
    信息框 (“获取系统临时文件夹失败！”, 相加 (#确认钮, #错误图标), “警告”)
    结束 ()
.如果真结束
赋值 (临时缓冲区, 取空白文本 (临时缓冲区长度))
赋值 (临时缓冲区长度, ExpandEnvironmentStrings (系统临时文件夹, 临时缓冲区, 临时缓冲区长度))
.如果真 (等于 (临时缓冲区长度, 0))
    信息框 (“获取系统临时文件夹失败！”, 相加 (#确认钮, #错误图标), “警告”)
    结束 ()
.如果真结束
赋值 (系统临时文件夹, 临时缓冲区)
输出调试文本 (相加 (“扩展环境变量后的系统临时文件夹：”, 系统临时文件夹))

 ' 把获取的系统临时文件夹显示出来。
赋值 (., 系统临时文件夹)






.子程序 _按钮_开始清理_被单击, 空白型, , 
.局部变量 用户临时文件夹, 文本型, , , 
.局部变量 系统临时文件夹, 文本型, , , 
.局部变量 测试文件句柄, 整数型, , , 

赋值 (用户临时文件夹, .)
赋值 (系统临时文件夹, .)

 ' 创建并打开一个测试文件，检测用户临时文件夹是否有效。
赋值 (测试文件句柄, CreateFile (相加 (用户临时文件夹, “xink.txt”), 位或 (#GENERIC_READ, #GENERIC_WRITE), 0, 0, #CREATE_ALWAYS, #FILE_ATTRIBUTE_NORMAL, 0))
.如果真 (等于 (测试文件句柄, -1))
    信息框 (“用户临时文件夹可能不存在！”, 相加 (#确认钮, #错误图标), “警告”)
    结束 ()
.如果真结束

 ' 关闭测试文件。
CloseHandle (测试文件句柄)

 ' 创建并打开一个测试文件，检测系统临时文件夹是否有效。
赋值 (测试文件句柄, CreateFile (相加 (系统临时文件夹, “xink.txt”), 位或 (#GENERIC_READ, #GENERIC_WRITE), 0, 0, #CREATE_ALWAYS, #FILE_ATTRIBUTE_NORMAL, 0))
.如果真 (等于 (测试文件句柄, -1))
    信息框 (“系统临时文件夹可能不存在！”, 相加 (#确认钮, #错误图标), “警告”)
    结束 ()
.如果真结束

 ' 关闭测试文件。
CloseHandle (测试文件句柄)

删除文件夹内的所有文件 (用户临时文件夹)
删除文件夹内的所有文件 (系统临时文件夹)

.子程序 删除文件夹内的所有文件, 空白型, , 
.参数 需要删除的文件夹, 文本型, , 

.局部变量 文件信息, 字节集, , , 
.局部变量 搜索句柄, 整数型, , , 
.局部变量 搜索得到的文件名, 文本型, , , 

 ' 通过对WIN32_FIND_DATA结构进行计算，得出这个结构的大小应该是318字节。所以预先初始化文件信息缓冲区。
赋值 (文件信息, 取空白字节集 (318))
 ' 搜索临时文件夹下的文件，获取这些文件的名称。
赋值 (搜索句柄, FindFirstFile (相加 (需要删除的文件夹, “*”), 文件信息))
.如果真 (等于 (搜索句柄, -1))
    输出调试文本 (“搜索文件失败。”)
    返回 ()
.如果真结束

.循环判断首 ()
    赋值 (搜索得到的文件名, 取字节集数据 (文件信息, #文本型, 45))
     ' 判断获取的文件是不是一个文件夹。
    .如果 (等于 (位与 (取字节集数据 (文件信息, #整数型, 1), 16), 16))
        .如果真 (并且 (不等于 (搜索得到的文件名, “.”), 不等于 (搜索得到的文件名, “..”)))
            赋值 (搜索得到的文件名, 相加 (需要删除的文件夹, 搜索得到的文件名))
            删除文件夹内的所有文件 (相加 (搜索得到的文件名, “\”))
            输出调试文本 (相加 (“搜索得到的目录名：”, 搜索得到的文件名))
             ' 取消文件的所有属性。
            SetFileAttributes (搜索得到的文件名, 0)
             ' 删除搜索得到的文件夹。
            RemoveDirectory (搜索得到的文件名)
        .如果真结束
        
    .否则
        赋值 (搜索得到的文件名, 相加 (需要删除的文件夹, 搜索得到的文件名))
        输出调试文本 (相加 (“搜索得到的文件的属性：”, 到文本 (取字节集数据 (文件信息, #整数型, 1))))
        输出调试文本 (相加 (“搜索得到的文件名：”, 搜索得到的文件名))
         ' 取消文件的所有属性。
        SetFileAttributes (搜索得到的文件名, 0)
         ' 删除搜索到的文件。
        DeleteFile (搜索得到的文件名)
    .如果结束
     ' 通过对WIN32_FIND_DATA结构进行计算，得出这个结构的大小应该是318字节。所以预先初始化文件信息缓冲区。
    赋值 (文件信息, 取空白字节集 (318))
.循环判断尾 (不等于 (FindNextFile (搜索句柄, 文件信息), 0))

 ' 关闭搜索句柄。
FindClose (搜索句柄)



 ' 不属于任何一个程序集、类模块的函数：
