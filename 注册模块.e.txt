 ' 文件类型：Windows模块源码

 ' 程序名称：软件注册模块
 ' 程序描述：软件注册模块"
1.生成注册码()
2.注册码验证()
3.判断是否注册()
 ' 程序作者：润联
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.2
 ' 创建号：0.0





 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 4 系统核心支持库
 ' dp1 4BB4003860154917BC7D8230BF4FA58A 1 0 数据操作支持库一



 ' 所需要的模块
 ' 字节集模块 $字节集.ec



.程序集 程序集1, , , 

.子程序 _启动子程序, 整数型, , 请在本子程序中放置易模块初始化代码

_临时子程序 () ' 在初始化代码执行完毕后调用测试代码
返回 (0) ' 可以根据您的需要返回任意数值

.子程序 _临时子程序, 空白型, , 
 ' 本名称子程序用作测试程序用，仅在开发及调试环境中有效，编译发布程序前将被系统自动清空，请将所有用作测试的临时代码放在本子程序中。 ***注意不要修改本子程序的名称、参数及返回值类型。
 ' 生成注册码 (“runlian”, “SHE54Y5EWY”, 123456789)


.子程序 文本加密, 文本型, , 参数1(加密文本),参数2(密码)
.参数 加密文本, 文本型, , 
.参数 密码, 文本型, 可空, 

.局部变量 a, 文本型, , , 
.局部变量 b, 文本型, , "0", 
.局部变量 c, 空白型, , , 
.局部变量 b1, 文本型, , "0", 
.局部变量 b2, 文本型, , "0", 
.局部变量 t, 文本型, , , 
.局部变量 t1, 文本型, , "0", 
.局部变量 t2, 空白型, , , 

数组清零 (t1)
赋值 (t, “我操你妈个比，看什么看？不服气干掉你~~~1234567890我操你妈qwertyuiopasdfghjklzxcvbnm个比，看1234567890什么看？不服气干掉你~~~1234567890我操你妈qwertyuiopasdfghjklzxcvbnm个比，看1234567890什么看？不服气干掉你~~~1234567890我操你妈个比，看1234567890什么看？不服气干掉你~~~1234567890我操你妈个比，看1234567890什么看？不服气干掉你~~~1234567890我操你妈个比，看1234567890什么看？不服qwertyuiopasdfghjklzxcvbnm气干掉你~~~1234567890我操你妈个比，看1234567890什么看？不服气干掉你~~~1234567890我操你妈个比，看1234567890什么看？不服qwertyuiopasdfghjklzxcvbnm气干掉你~~~1234567890我操你妈个比，看1234567890什么看？不服气干掉你~~~1234567890我操你妈个比，看1234567890什么看？不服气干掉你~~~1234567890我操你妈个比，看1234567890什么看？不服qwertyuiopasdfghjklzxcvbnm气干掉你~~~1234567890我操你妈个比，看1234567890什么看？不服气干掉你~~~1234567890我操你妈个比，看1234567890什么看？不服气qwertyuiopasdfghjklzxcvbnm干掉你~~~1234567890”)
.计次循环首 (取文本长度 (t), t2)
    加入成员 (t1, 取文本中间 (t, t2, 1))
.计次循环尾 ()

赋值 (a, “”)
赋值 (c, 1)
数组清零 (b)
数组清零 (b1)

.如果 (不等于 (密码, “”))
    .如果 (不等于 (求余数 (取绝对值 (取文本长度 (密码)), 2), 1))
        赋值 (a, 相加 (加密文本, “*”, 密码, “ ”))
    .否则
        赋值 (a, 相加 (加密文本, “*”, 密码))
    .如果结束
    
.否则
    赋值 (a, 加密文本)
    
    
.如果结束


.计次循环首 (取文本长度 (a), c)
    加入成员 (b, 取文本中间 (a, c, 1))
.计次循环尾 ()
.如果 (小于或等于 (取数组成员数 (b), 3))
    赋值 (c, 取数组成员数 (b))
    .计次循环首 (取数组成员数 (b), )
        加入成员 (b1, b [c])
        赋值 (c, 相减 (c, 1))
    .计次循环尾 ()
    赋值 (c, 1)
    赋值 (a, “”)
    .计次循环首 (取数组成员数 (b1), c)
        赋值 (a, 相加 (a, b1 [c]))
    .计次循环尾 ()
    返回 (a)
.否则
    
.如果结束

.如果 (等于 (求余数 (取绝对值 (取数组成员数 (b)), 2), 1))
    赋值 (c, 1)
    .计次循环首 (相除 (相减 (取数组成员数 (b), 1), 2), )
        加入成员 (b1, b [c])
        置随机数种子 ()
        加入成员 (b1, t1 [取随机数 (1, 取数组成员数 (t1))])
        赋值 (c, 相加 (c, 2))
    .计次循环尾 ()
    赋值 (c, 2)
    .计次循环首 (相除 (相减 (取数组成员数 (b), 1), 2), )
        加入成员 (b1, b [c])
        置随机数种子 ()
        加入成员 (b1, t1 [取随机数 (1, 取数组成员数 (t1))])
        赋值 (c, 相加 (c, 2))
    .计次循环尾 ()
    加入成员 (b1, b [取数组成员数 (b)])
.否则
    赋值 (c, 1)
    .计次循环首 (相除 (取数组成员数 (b), 2), )
        加入成员 (b1, b [c])
        置随机数种子 ()
        加入成员 (b1, t1 [取随机数 (1, 取数组成员数 (t1))])
        赋值 (c, 相加 (c, 2))
    .计次循环尾 ()
    赋值 (c, 2)
    .计次循环首 (相除 (取数组成员数 (b), 2), )
        加入成员 (b1, b [c])
        置随机数种子 ()
        加入成员 (b1, t1 [取随机数 (1, 取数组成员数 (t1))])
        赋值 (c, 相加 (c, 2))
    .计次循环尾 ()
.如果结束
赋值 (a, “”)
赋值 (c, 1)
.计次循环首 (取数组成员数 (b1), c)
    赋值 (a, 相加 (a, b1 [c]))
.计次循环尾 ()


返回 (a)

.子程序 文本解密, 文本型, , 参数1(解密文本),参数2(密码)
.参数 解密文本, 文本型, , 
.参数 密码, 文本型, 可空, 

.局部变量 a, 文本型, , , 
.局部变量 b, 文本型, , "0", 
.局部变量 c, 空白型, , , 
.局部变量 b1, 文本型, , "0", 
.局部变量 b2, 文本型, , "0", 
.局部变量 b3, 文本型, , "0", 
.局部变量 实际密码, 文本型, , , 
.局部变量 a1, 文本型, , , 

赋值 (a, “”)
赋值 (c, 1)
数组清零 (b)
数组清零 (b1)

赋值 (a, 解密文本)
.计次循环首 (取文本长度 (a), c)
    加入成员 (b1, 取文本中间 (a, c, 1))
.计次循环尾 ()

.如果 (小于或等于 (取数组成员数 (b1), 3))
    赋值 (c, 取数组成员数 (b1))
    .计次循环首 (取数组成员数 (b1), )
        加入成员 (b2, b1 [c])
        赋值 (c, 相减 (c, 1))
    .计次循环尾 ()
    赋值 (c, 1)
    赋值 (a, “”)
    .计次循环首 (取数组成员数 (b2), c)
        赋值 (a, 相加 (a, b2 [c]))
    .计次循环尾 ()
    返回 (a)
.否则
    
.如果结束

.如果 (不等于 (求余数 (取绝对值 (取数组成员数 (b1)), 2), 1))
    赋值 (c, 1)
    .计次循环首 (取数组成员数 (b1), )
        .如果真 (小于或等于 (c, 取数组成员数 (b1)))
            加入成员 (b3, b1 [c])
        .如果真结束
        赋值 (c, 相加 (c, 2))
    .计次循环尾 ()
    删除成员 (b1, 取数组成员数 (b1), 1)
.否则
    赋值 (c, 1)
    .计次循环首 (取数组成员数 (b1), )
        .如果真 (小于或等于 (c, 取数组成员数 (b1)))
            加入成员 (b3, b1 [c])
        .如果真结束
        赋值 (c, 相加 (c, 2))
    .计次循环尾 ()
.如果结束


.如果 (等于 (求余数 (取绝对值 (取数组成员数 (b3)), 2), 1))
    赋值 (c, 1)
    .计次循环首 (相除 (相减 (取数组成员数 (b3), 1), 2), c)
        加入成员 (b2, b3 [c])
        加入成员 (b2, b3 [相加 (c, 相除 (相减 (取数组成员数 (b3), 1), 2))])
    .计次循环尾 ()
    加入成员 (b2, b3 [取数组成员数 (b3)])
    
.否则
    赋值 (c, 1)
    .计次循环首 (相除 (取数组成员数 (b3), 2), c)
        加入成员 (b2, b3 [c])
        加入成员 (b2, b3 [相加 (c, 相除 (取数组成员数 (b3), 2))])
    .计次循环尾 ()
    
.如果结束
赋值 (a, “”)
赋值 (c, 1)
.计次循环首 (取数组成员数 (b2), c)
    赋值 (a, 相加 (a, b2 [c]))
.计次循环尾 ()


.如果 (不等于 (寻找文本 (a, “*”, , 假), -1))
    .如果 (等于 (删尾空 (取文本右边 (a, 相减 (取文本长度 (a), 寻找文本 (a, “*”, , 假)))), 密码))
        赋值 (a1, 取文本中间 (a, 1, 相减 (寻找文本 (a, “*”, , 假), 1)))
    .否则
        信息框 (“输入密码错误，请核对！”, 0, )
        
    .如果结束
    
.否则
    赋值 (a1, a)
    
.如果结束


返回 (a1)

.子程序 生成注册码, 字节集, , 生成注册码
.参数 用户名, 文本型, , 
.参数 注册码, 文本型, , 
.参数 密文, 整数型, , 硬盘特征
.参数 文件存放路径, 文本型, 可空, 注册文件存放路径

.局部变量 加密, 字节集, , , 
.局部变量 密数据, 字节集, , , 

赋值 (加密, 到字节集 (文本加密 (相加 (用户名, “otlt7T7Yrtotlt”, 注册码, “otltDF9846Ytotlt”, 到文本 (密文)), “KSEOROYL0FMH546KLM549”)))
.如果 (不等于 (加密, {  }))
    赋值 (密数据, 未知支持库函数_3 (加密, “retu360dsgkJKH ELSKTJEiLGJMKVMGSDLJTQOPTJKB DSFMD34U5kldfsfkwejrglkejglkeig”, 1))
    .如果 (等于 (文件存放路径, “”))
        写到文件 (相加 (取运行目录 (), “\data\key.reg”), 密数据)
    .否则
        写到文件 (文件存放路径, 密数据)
    .如果结束
    返回 (密数据)
.否则
    返回 ({  })
.如果结束


.子程序 注册码验证, 字节集, , 到文本后解出 
.参数 密数据, 字节集, , 

.局部变量 解密, 字节集, , , 

.如果真 (等于 (密数据, {  }))
    返回 ({  })
.如果真结束
返回 (未知支持库函数_4 (密数据, “retu360dsgkJKH ELSKTJEiLGJMKVMGSDLJTQOPTJKB DSFMD34U5kldfsfkwejrglkejglkeig”, 1))

.子程序 判断注册, 整数型, , 如果已注册返回1，试用期到返回-1，否则弹出信息框。
.参数 name, 文本型, , 用户名称
.参数 序列号, 文本型, , 序列号id
.参数 yjid, 整数型, , 硬件ID
.参数 N, 文本型, 可空, 所有次
.参数 文件存放路径, 文本型, 可空, 注册文件存放路径
.参数 信息标题, 文本型, 可空, 弹出的信息框标题
.参数 是否提示, 逻辑型, , 是否提示注册成功

.局部变量 注册, 文本型, , , 
.局部变量 BTN, 字节集, , , 
.局部变量 FG, 文本型, , "0", 
.局部变量 入文件, 字节集, , , 

.如果真 (等于 (信息标题, “”))
    赋值 (信息标题, “注册标题”)
.如果真结束

.如果 (等于 (文件存放路径, “”))
    赋值 (入文件, 读入文件 (相加 (取运行目录 (), “\data\key.reg”)))
.否则
    赋值 (入文件, 读入文件 (文件存放路径))
.如果结束

.如果真 (等于 (入文件, {  }))
    .如果真 (是否提示)
        信息框 (“您使用的软件没有注册密钥文件或密钥不正确！”, 48, 信息标题)
    .如果真结束
    返回 (-1)
.如果真结束

赋值 (BTN, 注册码验证 (入文件))
赋值 (注册, 文本解密 (到文本 (BTN), “KSEOROYL0FMH546KLM549”))

.如果真 (等于 (注册, “”))
    .如果真 (是否提示)
        信息框 (“您使用的软件没有注册密钥文件或密钥不正确！”, 48, 信息标题)
    .如果真结束
    返回 (-1)
.如果真结束

赋值 (FG, 分割文本 (注册, “otlt”, ))
.如果真 (不等于 (取数组成员数 (FG), 5))
    返回 (-1)
.如果真结束

.如果 (等于 (相加 (name, “otlt7T7Yrtotlt”, 序列号, “otltDF9846Ytotlt”, 到文本 (yjid)), 注册))
    .如果真 (是否提示)
        信息框 (“尊敬的用户！ 您现在使用的软件,已成功注册！”, 48, 信息标题)
    .如果真结束
    返回 (1)
.否则
    .如果真 (是否提示)
        信息框 (“您使用的软件没有注册密钥文件或密钥不正确！”, 48, 信息标题)
    .如果真结束
    返回 (-1)
.如果结束


.程序集 __HIDDEN_TEMP_MOD__, , , 

.子程序 取十进制, 整数型, , 将非十进制的标准格式文本转换成十进制整数值
.参数 欲转换的值, 文本型, , 欲转换的值，文本型！
.参数 数值类型, 整数型, 可空, 0，#十六进制；1，#十进制（默认）；2，#八进制；3，#二进制



.子程序 还原为字节集, 字节集, , 将一串十六进制文本还原为字节集
.参数 文本, 文本型, , 如“00BFAD00AFD4FD4F9E054F9FF91FC5FF2076FBAFDB071044”



.子程序 查看字节集, 文本型, , 以文本表示字节集，适合于字节集的调试用
.参数 字节集, 字节集, , 要查看的字节集



.子程序 字节集到十六进制, 文本型, , 将字节集用16进制表示
.参数 字节集, 字节集, , 用于转换的字节集




 ' 不属于任何一个程序集、类模块的函数：
