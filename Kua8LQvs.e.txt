 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 261
    高度 = 144
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 真
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 已保存到：D:\易语言学习\Data\Kua8LQvs.e\_启动窗口_图标.ico
    背景音乐 =  ' 空
    标题 = “简单播放器(0.1版)”
    帮助文件名 = “”

窗口 窗口_播放列表
    左边 = 50
    顶边 = 50
    宽度 = 261
    高度 = 153
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 3
    底图方式 = 0
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 假
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “”
    帮助文件名 = “”





 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 4 系统核心支持库
 ' iext 27bb20fdd3e145e4bee3db39ddd6e64c 1 2 扩展界面支持库一
 ' shell 52F260023059454187AF826A3C07AF2A 1 0 操作系统界面功能支持库
 ' eMMedia 824F144B108A4bcbB966F45670D42A00 2 4 多媒体支持库




数据类型 MP3标签, , 
    .成员 ID3, 文本型, , , 
    .成员 TAG, 文本型, , , 
    .成员 歌曲名, 文本型, , , 
    .成员 艺术家, 文本型, , , 
    .成员 专辑, 文本型, , , 
    .成员 音轨, 文本型, , , 
    .成员 年代, 文本型, , , 
    .成员 流派, 文本型, , , 
    .成员 注释, 文本型, , , 
    .成员 作曲家, 文本型, , , 
    .成员 原创者, 文本型, , , 
    .成员 版权, 文本型, , , 
    .成员 URL, 文本型, , , 
    .成员 编码者, 文本型, , , 

.全局变量 MP3组, 文本型, , "0", 
.全局变量 随机MP3组, 文本型, , "0", 
.全局变量 待播MP3, 文本型, , , 
.全局变量 组位置, 整数型, , , 
.全局变量 时间, 整数型, , , 
.全局变量 滚动显示信息, 文本型, , , 
.全局变量 是否执行空闲事件, 逻辑型, , , 

.窗口程序集 启动窗口程序集, , , 

.程序集变量 随机播放, 逻辑型, , , 
.程序集变量 循环播放, 逻辑型, , , 
.程序集变量 静音, 逻辑型, , , 
.程序集变量 进度原位置, 整数型, , , 
.程序集变量 音量原位置, 整数型, , , 
.程序集变量 平衡原位置, 整数型, , , 
.程序集变量 MP3标签V1, MP3标签, , , 
.程序集变量 MP3标签V2, MP3标签, , , 
.程序集变量 MP3信息, MP3信息类, , , 
.程序集变量 正在拖动, 逻辑型, , , 
.程序集变量 显示信息, 文本型, , , 
.程序集变量 播放时间, 整数型, , , 
.程序集变量 倒数, 逻辑型, , , 
.子程序 __启动窗口_创建完毕, 空白型, , 
.局部变量 左声道, 整数型, , , 
.局部变量 右声道, 整数型, , , 

 ' //读系统音量：
.如果 (等于 (#.未知支持库函数_0 (), 0))
    信息框 (“系统音量打开失败!,您可能听不到声音!”, 48, )
.否则
    赋值 (静音, 未知支持库函数_3 ())
    左声道.未知支持库函数_7 (右声道)
    赋值 (.位置, 取整 (相除 (相乘 (相除 (相加 (左声道, 右声道), 2), 100), 相减 (未知支持库函数_5 (), 未知支持库函数_6 ()))))
    赋值 (.位置, 相乘 (相除 (右声道, 相加 (左声道, 右声道)), 100))
.如果结束
2.未知支持库函数_2 ()
载入 (窗口_播放列表, _启动窗口, 假)
赋值 (窗口_播放列表., 真)
赋值 (.可视, 静音)
赋值 (.禁止, 取反 (静音))
赋值 (.可视, 取反 (静音))
赋值 (.禁止, 静音)
赋值 (随机播放, 假)
赋值 (循环播放, 假)
赋值 (.禁止, 真)
赋值 (.禁止, 真)
赋值 (倒数, 假)

.子程序 __启动窗口_空闲, 逻辑型, , 
.参数 已空闲时间, 整数型, , 

.如果真 (等于 (是否执行空闲事件, 真))
    转换播放列表 ()
.如果真结束


.子程序 _按钮_清单编辑_被单击, 空白型, , 
赋值 (窗口_播放列表., 取反 (窗口_播放列表.))

.子程序 _按钮_播放_被单击, 空白型, , 
.局部变量 表项焦点位置, 整数型, , , 

.如果真 (等于 (取数组成员数 (随机MP3组), 0))
    _添加文件_被选择 ()
.如果真结束
.如果真 (大于 (取数组成员数 (随机MP3组), 0))
    .如果真 (等于 (取MP3播放状态 (), -1))
        开始播放 ()
        赋值 (.禁止, 真)
        赋值 (.禁止, 假)
        返回 ()
    .如果真结束
    .如果真 (等于 (随机播放, 真))
        置随机数种子 ()
        赋值 (组位置, 取随机数 (1, 取数组成员数 (随机MP3组)))
    .如果真结束
    赋值 (组位置, 选择 (等于 (组位置, 0), 1, 组位置))
    赋值 (待播MP3, 随机MP3组 [组位置])
    .计次循环首 (取数组成员数 (MP3组), 表项焦点位置)
        .如果真 (等于 (MP3组 [表项焦点位置], 待播MP3))
            窗口_播放列表.选择表项 (., 相减 (表项焦点位置, 1))
            跳出循环 ()
        .如果真结束
        
    .计次循环尾 ()
    开始播放 ()
    赋值 (.禁止, 真)
    赋值 (.禁止, 假)
    赋值 (.禁止, 假)
.如果真结束


.子程序 _标签_播放时间_反馈事件, 整数型, , 
.参数 参数一, 整数型, , 
.参数 参数二, 整数型, , 

.局部变量 当前播放位置, 整数型, , , 

.如果 (等于 (参数一, 100))
    赋值 (.时钟周期, 0)
    .如果 (并且 (等于 (组位置, 取数组成员数 (MP3组)), 等于 (随机播放, 假), 等于 (循环播放, 假))) ' 全部播放结束
        停止播放 ()
        设置状态 ()
    .否则
        赋值 (组位置, 选择 (随机播放, 取随机数 (1, 取数组成员数 (随机MP3组)), 选择 (并且 (等于 (循环播放, 真), 等于 (组位置, 取数组成员数 (MP3组))), 1, 相加 (组位置, 1))))
        赋值 (待播MP3, 随机MP3组 [组位置])
        取消已选择 ()
        .如果真 (随机播放)
            删除成员 (随机MP3组, 组位置, ) ' 为了播放不重复
        .如果真结束
        .如果真 (等于 (取数组成员数 (随机MP3组), 0))
            赋值 (随机MP3组, MP3组)
        .如果真结束
        .计次循环首 (取数组成员数 (MP3组), 当前播放位置)
            .如果真 (等于 (MP3组 [当前播放位置], 待播MP3))
                窗口_播放列表.选择表项 (., 相减 (当前播放位置, 1))
                跳出循环 ()
            .如果真结束
            
        .计次循环尾 ()
        开始播放 ()
    .如果结束
    
.否则
    赋值 (.位置, 参数一)
    设置状态 ()
.如果结束


.子程序 设置状态, 空白型, , 
.局部变量 播放状态, 整数型, , , 
.局部变量 当前组位置, 整数型, , , 

赋值 (播放状态, 取MP3播放状态 ())
.判断开始 (等于 (播放状态, 0))
    赋值 (.位置, 0)
    赋值 (.禁止, 真)
    赋值 (.禁止, 真)
    赋值 (.禁止, 假)
    赋值 (.标题, “等待播放...”)
    赋值 (.标题, “”)
.判断 (等于 (播放状态, 1))
    
.判断 (等于 (播放状态, -1))
    赋值 (.标题, “暂停播放...”)
.默认
    
.判断结束


.子程序 _按钮_停止_被单击, 空白型, , 
停止播放 ()
赋值 (.位置, 0)
赋值 (.禁止, 真)
赋值 (.禁止, 假)
赋值 (.时钟周期, 0)

.子程序 __启动窗口_位置被改变, 空白型, , 
赋值 (窗口_播放列表., 相加 (_启动窗口., _启动窗口.))
赋值 (窗口_播放列表., _启动窗口.)


.子程序 _按钮_打开_被单击, 空白型, , 
_添加文件_被选择 ()

.子程序 _按钮_循环_被单击, 空白型, , 
赋值 (循环播放, 取反 (循环播放))
赋值 (.可视, 取反 (.可视))
赋值 (.可视, 取反 (.可视))

.子程序 _按钮_随机_被单击, 空白型, , 
赋值 (随机播放, 取反 (随机播放))
赋值 (.可视, 取反 (.可视))
赋值 (.可视, 取反 (.可视))

.子程序 _按钮_暂停_被单击, 空白型, , 
暂停播放MP3 ()
赋值 (.禁止, 取反 (.禁止))
赋值 (.禁止, 取反 (.禁止))
.如果 (.禁止)
    赋值 (.时钟周期, 0)
.否则
    赋值 (.时钟周期, 200)
.如果结束


.子程序 取消已选择, 空白型, , 
.局部变量 选择项目, 整数型, , "0", 
.局部变量 变量, 整数型, , , 

赋值 (选择项目, 窗口_播放列表.取被选择表项 (.))
.计次循环首 (取数组成员数 (选择项目), 变量)
    窗口_播放列表.取消表项选择 (., 选择项目 [变量])
.计次循环尾 ()

.子程序 _时钟_滚动显示_周期事件, 空白型, , 
赋值 (时间, 相加 (时间, 1))
.如果 (倒数)
    赋值 (.标题, 相加 (到文本 (整除 (相减 (播放时间, 整除 (时间, 5)), 60)), “：”, 到文本 (整除 (求余数 (相减 (播放时间, 整除 (时间, 5)), 60), 10)), 到文本 (求余数 (相减 (播放时间, 整除 (时间, 5)), 60, 10))))
.否则
    赋值 (.标题, 相加 (到文本 (整除 (时间, 5, 60)), “：”, 到文本 (整除 (求余数 (整除 (时间, 5), 60), 10)), 到文本 (求余数 (整除 (时间, 5), 60, 10))))
.如果结束
赋值 (滚动显示信息, 相加 (取文本右边 (滚动显示信息, 相减 (取文本长度 (滚动显示信息), 2)), 取文本左边 (滚动显示信息, 2)))
赋值 (.标题, 滚动显示信息)

.子程序 _按钮_上一曲_被单击, 空白型, , 
.如果真 (小于或等于 (组位置, 1))
    返回 ()
.如果真结束
赋值 (组位置, 相减 (组位置, 1))
赋值 (待播MP3, MP3组 [组位置])
取消已选择 ()
窗口_播放列表.选择表项 (., 相减 (组位置, 1))
赋值 (.位置, 0)
开始播放 ()


.子程序 _按钮_下一曲_被单击, 空白型, , 
.如果真 (大于或等于 (组位置, 取数组成员数 (MP3组)))
    返回 ()
.如果真结束
赋值 (组位置, 相加 (组位置, 1))
赋值 (待播MP3, MP3组 [组位置])
取消已选择 ()
窗口_播放列表.选择表项 (., 相减 (组位置, 1))
赋值 (.位置, 0)
开始播放 ()
赋值 (_启动窗口..时钟周期, 200)


.子程序 _按钮_首一曲_被单击, 空白型, , 
赋值 (组位置, 1)
赋值 (待播MP3, MP3组 [组位置])
取消已选择 ()
窗口_播放列表.选择表项 (., 相减 (组位置, 1))
赋值 (.位置, 0)
开始播放 ()


.子程序 _按钮_末一曲_被单击, 空白型, , 
赋值 (组位置, 取数组成员数 (MP3组))
赋值 (待播MP3, MP3组 [组位置])
取消已选择 ()
窗口_播放列表.选择表项 (., 相减 (组位置, 1))
赋值 (.位置, 0)
开始播放 ()


.子程序 _滑块条_播放进度_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (不等于 (待播MP3, “”))
    同步播放MP3 (待播MP3, .位置, , )
.如果真结束


.子程序 取MP3信息, 文本型, , 
.参数 文件名, 文本型, , 

.局部变量 声音长度, 文本型, , , 
.局部变量 临时, 文本型, , "0", 
.局部变量 填空, 文本型, , , 
.局部变量 文件号, 整数型, , , 

赋值 (显示信息, “”)
处理事件 ()
文件名.未知支持库函数_56 ()
赋值 (声音长度, 相加 (到文本 (整除 (未知支持库函数_64 (), 60)), “：”, 到文本 (整除 (求余数 (未知支持库函数_64 (), 60), 10)), 到文本 (求余数 (未知支持库函数_64 (), 60, 10))))
未知支持库函数_57 ()
赋值 (文件号, 打开文件 (文件名, , ))
.判断开始 (MP3信息.是否有V1标签 (文件号))
    .如果真 (MP3信息.读MP3标签V1 (文件号, MP3标签V1))
        .如果 (不等于 (MP3标签V1.歌曲名, “”))
            赋值 (显示信息, 相加 (显示信息, MP3标签V1.歌曲名))
        .否则
            赋值 (临时, 分割文本 (文件名, “\”, ))
            赋值 (显示信息, 相加 (显示信息, 临时 [取数组成员数 (临时)]))
        .如果结束
        .如果真 (不等于 (MP3标签V1.艺术家, “”))
            赋值 (显示信息, 相加 (显示信息, “ - ”, MP3标签V1.艺术家))
        .如果真结束
        
    .如果真结束
    
.判断 (MP3信息.是否有V2标签 (文件号))
    .如果真 (MP3信息.读MP3标签V2 (文件号, MP3标签V2))
        .如果 (不等于 (MP3标签V2.歌曲名, “”))
            赋值 (显示信息, 相加 (显示信息, MP3标签V2.歌曲名))
        .否则
            赋值 (临时, 分割文本 (文件名, “\”, ))
            赋值 (显示信息, 相加 (显示信息, 临时 [取数组成员数 (临时)]))
        .如果结束
        .如果真 (不等于 (MP3标签V2.艺术家, “”))
            赋值 (显示信息, 相加 (显示信息, “ - ”, MP3标签V2.艺术家))
        .如果真结束
        
    .如果真结束
    
.默认
    赋值 (临时, 分割文本 (文件名, “\”, ))
    赋值 (显示信息, 相加 (显示信息, 临时 [取数组成员数 (临时)]))
.判断结束
关闭文件 (文件号)
返回 (相加 (显示信息, “//”, 声音长度))

.子程序 转换播放列表, 空白型, , 
.局部变量 临时组, 文本型, , "0", 
.局部变量 变量, 整数型, , , 

处理事件 ()
.如果真 (等于 (取数组成员数 (MP3组), 0))
    返回 ()
.如果真结束
.计次循环首 (取数组成员数 (MP3组), 变量)
    .如果真 (等于 (窗口_播放列表.取标题 (., 相减 (变量, 1), 1), “”))
        赋值 (临时组, 分割文本 (取MP3信息 (MP3组 [变量]), “//”, ))
        窗口_播放列表.置标题 (., 相减 (变量, 1), 0, 临时组 [1])
        窗口_播放列表.置标题 (., 相减 (变量, 1), 1, 临时组 [2])
    .如果真结束
    
.计次循环尾 ()
赋值 (是否执行空闲事件, 假)


.子程序 开始播放, 空白型, , 
.局部变量 时间数组, 文本型, , "2", 

同步播放MP3 (待播MP3, , , )
赋值 (滚动显示信息, 到全角 (相加 (“**”, 窗口_播放列表.取标题 (., 相减 (组位置, 1), 0), “**”)))
赋值 (时间, 0)
赋值 (.时钟周期, 0)
赋值 (.时钟周期, 200)
赋值 (时间数组, 分割文本 (窗口_播放列表.取标题 (., 相减 (组位置, 1), 1), “：”, ))
.如果 (等于 (取数组成员数 (时间数组), 2))
    赋值 (播放时间, 相加 (相乘 (到整数 (时间数组 [1]), 60), 到整数 (时间数组 [2])))
.否则
    返回 ()
.如果结束


.子程序 _标签_播放时间_被双击, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (倒数, 取反 (倒数))


.子程序 _滑块条_音量_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (音量原位置, .位置)

.子程序 _滑块条_音量_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 左声道, 整数型, , , 
.局部变量 右声道, 整数型, , , 

.如果 (等于 (#.未知支持库函数_0 (), 0))
    信息框 (“系统音量打开失败!,您可能听不到声音!”, 48, )
.否则
    左声道.未知支持库函数_7 (右声道)
    相加 (取整 (相乘 (相除 (相减 (.位置, 音量原位置), 100), 相减 (未知支持库函数_5 (), 未知支持库函数_6 ()))), 左声道).未知支持库函数_8 (相加 (取整 (相乘 (相除 (相减 (.位置, 音量原位置), 100), 相减 (未知支持库函数_5 (), 未知支持库函数_6 ()))), 右声道))
    2.未知支持库函数_2 ()
.如果结束


.子程序 _滑块条_平衡_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (平衡原位置, .位置)

.子程序 _滑块条_平衡_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 左声道, 整数型, , , 
.局部变量 右声道, 整数型, , , 
.局部变量 总音量, 整数型, , , 

.如果 (等于 (#.未知支持库函数_0 (), 0))
    信息框 (“系统音量打开失败!,您可能听不到声音!”, 48, )
.否则
    左声道.未知支持库函数_7 (右声道)
    赋值 (总音量, 相加 (左声道, 右声道))
    取整 (相加 (左声道, 相除 (相乘 (相减 (平衡原位置, .位置), 总音量), 200))).未知支持库函数_8 (取整 (相加 (右声道, 相除 (相乘 (相减 (.位置, 平衡原位置), 总音量), 200))))
    2.未知支持库函数_2 ()
.如果结束



.子程序 _图形按钮_静音_被单击, 空白型, , 
.如果 (等于 (#.未知支持库函数_0 (), 0))
    信息框 (“系统音量打开失败!,您可能听不到声音!”, 48, )
.否则
    假.未知支持库函数_4 ()
    赋值 (.可视, 假)
    赋值 (.禁止, 真)
    赋值 (.可视, 真)
    赋值 (.禁止, 假)
.如果结束
2.未知支持库函数_2 ()

.子程序 _图形按钮_喇叭_被单击, 空白型, , 
.如果 (等于 (#.未知支持库函数_0 (), 0))
    信息框 (“系统音量打开失败!,您可能听不到声音!”, 48, )
.否则
    真.未知支持库函数_4 ()
    赋值 (.可视, 真)
    赋值 (.禁止, 假)
    赋值 (.可视, 假)
    赋值 (.禁止, 真)
.如果结束
2.未知支持库函数_2 ()

.窗口程序集 播放列表窗口程序集, , , 

.子程序 _窗口_播放列表_创建完毕, 空白型, , 
赋值 (窗口_播放列表., 相加 (_启动窗口., _启动窗口.))
赋值 (窗口_播放列表., _启动窗口.)
赋值 (窗口_播放列表., _启动窗口.)
0.移动 (0, 窗口_播放列表.取用户区宽度 (), 相减 (窗口_播放列表.取用户区高度 (), 16))
8.移动 (.删除线, , )
32.移动 (.删除线, , )
56.移动 (.删除线, , )
相减 (.倾斜, 24).移动 (.删除线, , )

.子程序 _窗口_播放列表_尺寸被改变, 空白型, , 
赋值 (窗口_播放列表., _启动窗口.)
0.移动 (0, 窗口_播放列表.取用户区宽度 (), 相减 (窗口_播放列表.取用户区高度 (), 16))
8.移动 (.删除线, , )
32.移动 (.删除线, , )
56.移动 (.删除线, , )
相减 (.倾斜, 24).移动 (.删除线, , )


.子程序 _添加文件_被选择, 空白型, , 
.局部变量 文件名, 文本型, , "0", 
.局部变量 MP3文件名, 文本型, , , 
.局部变量 取出字符, 文本型, , , 
.局部变量 歌曲计数, 整数型, , , 
.局部变量 原歌曲数, 整数型, , , 

赋值 (文件名, 多文件对话框 (“请选择要播放的MP3音乐文件，可以选择多个。”, “MP3文件(*.MP3)|*.MP3”, , , ))
.如果真 (不等于 (取数组成员数 (文件名), 0))
    赋值 (原歌曲数, 取数组成员数 (MP3组))
    .计次循环首 (取数组成员数 (文件名), 歌曲计数)
        加入成员 (MP3组, 文件名 [歌曲计数])
        加入成员 (随机MP3组, 文件名 [歌曲计数])
        .插入表项 (文件名 [歌曲计数], , , , )
    .计次循环尾 ()
.如果真结束
赋值 (是否执行空闲事件, 真)


.子程序 _添加目录_被选择, 空白型, , 
.局部变量 目录, 文本型, , , 

赋值 (目录, 未知支持库函数_2 (“请选择MP3音乐文件所在的文件夹”, ))
.如果真 (等于 (目录, “”))
    返回 ()
.如果真结束
搜索MP3 (目录)
赋值 (是否执行空闲事件, 真)

.子程序 搜索MP3, 空白型, , 
.参数 目录, 文本型, , 

.局部变量 文件名, 文本型, , , 
.局部变量 取出字符, 文本型, , , 
.局部变量 歌曲计数, 整数型, , , 


.如果真 (不等于 (取文本右边 (目录, 1), “\”))
    赋值 (目录, 相加 (目录, “\”))
.如果真结束
赋值 (文件名, 寻找文件 (相加 (目录, “*.mp3”), ))
赋值 (歌曲计数, 取数组成员数 (MP3组))
.判断循环首 (不等于 (文件名, “”))
    加入成员 (MP3组, 相加 (目录, 文件名))
    加入成员 (随机MP3组, 相加 (目录, 文件名))
    赋值 (歌曲计数, 相加 (歌曲计数, 1))
    .插入表项 (相加 (目录, 文件名), , , , )
    赋值 (文件名, 寻找文件 ())
.判断循环尾 ()
赋值 (文件名, 寻找文件 (相加 (目录, “*.*”), #子目录))
.判断循环首 (不等于 (文件名, “”))
    .如果真 (不等于 (取文本左边 (文件名, 1), “.”))
        搜索MP3 (相加 (目录, 文件名))
    .如果真结束
    赋值 (文件名, 寻找文件 (#子目录))
.判断循环尾 ()
赋值 (是否执行空闲事件, 真)

.子程序 _删除单个_被选择, 空白型, , 
删除成员 (MP3组, 相加 (., 1), 1)
删除成员 (随机MP3组, 相加 (., 1), 1)
.删除表项 (.)


.子程序 _删除全部_被选择, 空白型, , 
全部删除 ()
删除成员 (MP3组, 1, 取数组成员数 (MP3组))
删除成员 (随机MP3组, 1, 取数组成员数 (MP3组))

.子程序 _载入列表_被选择, 空白型, , 
赋值 (.类型, 0)
.如果真 (打开 ())
    全部删除 ()
    载入列表 (.文件名)
    赋值 (是否执行空闲事件, 真)
.如果真结束


.子程序 载入列表, 空白型, , 
.参数 文件名, 文本型, , 

.局部变量 临时文件, 文本型, , , 
.局部变量 文件号, 整数型, , , 
.局部变量 变量, 整数型, , , 
.局部变量 标题组, 文本型, , "0", 

 ' 打开 emp 格式文件，依照格式依次读入判断
赋值 (文件号, 打开文件 (文件名, , ))
移到文件首 (文件号)
赋值 (临时文件, 读入一行 (文件号))
.如果真 (不等于 (临时文件, “#EXTM3U”)) ' 第一行
    信息框 (“不是有效的播放列表文件”, 16, )
    关闭文件 (文件号)
    返回 ()
.如果真结束
重定义数组 (MP3组, 假, 0)
重定义数组 (随机MP3组, 假, 0)
.判断循环首 (等于 (是否在文件尾 (文件号, ), 假)) ' 读入mp3信息
    赋值 (临时文件, 读入一行 (文件号))
    重定义数组 (标题组, 假, 0)
    .如果 (等于 (取文本左边 (临时文件, 8), “#EXTINF:”))
        赋值 (标题组, 分割文本 (子文本替换 (临时文件, “#EXTINF:”, , , , 真), “,”, ))
        -1.插入表项 (标题组 [2], , , , )
        变量.置标题 (1, 相加 (到文本 (整除 (到整数 (标题组 [1]), 60)), “：”, 到文本 (求余数 (到整数 (标题组 [1]), 整除 (60, 10))), 到文本 (求余数 (到整数 (标题组 [1]), 60, 10))))
        赋值 (临时文件, 读入一行 (文件号))
        加入成员 (MP3组, 临时文件)
    .否则
        .如果真 (不等于 (取文本中间 (临时文件, 2, 2), “:\”))
            赋值 (临时文件, 相加 (取文本左边 (文件名, 倒找文本 (文件名, “\”, , 假)), 临时文件))
        .如果真结束
        加入成员 (MP3组, 临时文件)
        -1.插入表项 (临时文件, , , , )
    .如果结束
    赋值 (变量, 相加 (变量, 1))
.判断循环尾 ()
赋值 (随机MP3组, MP3组) ' 为了为随机播放恢复用
关闭文件 (文件号)

.子程序 _保存列表_被选择, 空白型, , 
.如果真 (等于 (取数组成员数 (随机MP3组), 0))
    返回 () ' //校验有没有列表文件
.如果真结束
赋值 (.类型, 1)
.如果真 (打开 ())
    .如果 (保存列表 (.文件名))
        信息框 (“保存播放列表成功！”, 64, )
    .否则
        信息框 (“保存播放列表失败！”, 48, )
    .如果结束
    
.如果真结束


.子程序 保存列表, 逻辑型, , 
.参数 文件名, 文本型, , 

.局部变量 临时文件, 文本型, , , 
.局部变量 变量, 整数型, , , 
.局部变量 时间数组, 文本型, , "2", 
.局部变量 长度, 整数型, , , 

 ' 文件后缀 *.M3U格式：
 ' 第一行是 “#EXTM3U”标识，
 ' 而后是一行行MP3路径。
 ' MP3路径后跟一行“//”标志。如果有后面是取MP3信息后的内容
赋值 (临时文件, “#EXTM3U”)
.计次循环首 (取表项数 (), 变量)
    .如果真 (不等于 (MP3组 [变量], 相减 (变量, 1).取标题 (0))) ' //说明MP3信息完毕
        .如果真 (不等于 (窗口_播放列表.取标题 (., 相减 (变量, 1), 1), “”))
            赋值 (时间数组, 分割文本 (窗口_播放列表.取标题 (., 相减 (变量, 1), 1), “：”, ))
            赋值 (长度, 相加 (相乘 (到整数 (时间数组 [1]), 60), 到整数 (时间数组 [2])))
            赋值 (临时文件, 相加 (临时文件, #换行符, “#EXTINF:”, 到文本 (长度), “,”, 相减 (变量, 1).取标题 (0)))
        .如果真结束
        赋值 (临时文件, 相加 (临时文件, #换行符, MP3组 [变量]))
    .如果真结束
    
.计次循环尾 ()
.如果 (写到文件 (文件名, 到字节集 (临时文件)))
    返回 (真)
.否则
    返回 (假)
.如果结束


.子程序 _按钮_关闭清单_被单击, 空白型, , 
赋值 (窗口_播放列表., 假)

.子程序 _按钮_添加文件_被单击, 空白型, , 
弹出菜单 ()


.子程序 _按钮_播放列表_被单击, 空白型, , 
弹出菜单 ()

.子程序 _按钮_删除文件_被单击, 空白型, , 
弹出菜单 ()


.子程序 _超级列表框_播放列表_表项被激活, 空白型, , 
赋值 (组位置, 相加 (., 1))
赋值 (待播MP3, MP3组 [组位置])
取消已选择 ()
窗口_播放列表.选择表项 (., 相减 (组位置, 1))
开始播放 ()
赋值 (_启动窗口..时钟周期, 0)
赋值 (_启动窗口..时钟周期, 200)
赋值 (_启动窗口..禁止, 真)
赋值 (_启动窗口..禁止, 假)
赋值 (_启动窗口..禁止, 假)


.子程序 _超级列表框_播放列表_左键单击表项, 空白型, , 
.选择表项 (.)
.如果真 (等于 (取MP3播放状态 (), 0))
    赋值 (组位置, 相加 (., 1))
.如果真结束


.子程序 _超级列表框_播放列表_右键单击表项, 空白型, , 
弹出菜单 ()

.子程序 _播放_被选择, 空白型, , 
_超级列表框_播放列表_表项被激活 ()

.子程序 _删除_被选择, 空白型, , 
_删除单个_被选择 ()

.子程序 _按钮_播放清单_被单击, 空白型, , 
弹出菜单 ()

.类模块 MP3信息类, , , 该部分没完全弄懂，取自易语言例程

.程序集变量 MP3标签数据缓冲区, 字节集, , , 
.程序集变量 MP3流派名称, 文本型, , "126", 
.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用
构造MP3流派查询表之文字 ()

.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 读MP3标签V1, 逻辑型, , 读取ID3v1标签
.参数 文件号, 整数型, , 
.参数 mp3标签数据, MP3标签, 参考, 接收mp3标签数据

.局部变量 版本判断, 整数型, , , 

.如果 (等于 (是否有V1标签 (文件号), 真))
    赋值 (mp3标签数据.歌曲名, 取字节集数据 (取字节集中间 (MP3标签数据缓冲区, 4, 30), #文本型))
    赋值 (mp3标签数据.艺术家, 取字节集数据 (取字节集中间 (MP3标签数据缓冲区, 34, 30), #文本型))
    赋值 (mp3标签数据.专辑, 取字节集数据 (取字节集中间 (MP3标签数据缓冲区, 64, 30), #文本型))
    赋值 (mp3标签数据.年代, 取字节集数据 (取字节集中间 (MP3标签数据缓冲区, 94, 4), #文本型))
    判断是否是ID3v1.0版本
    赋值 (版本判断, 取字节集数据 (取字节集中间 (MP3标签数据缓冲区, 126, 1), #整数型))
    .如果 (大于 (版本判断, 0))
        是ID3v1.0版本
        赋值 (mp3标签数据.注释, 取字节集数据 (取字节集中间 (MP3标签数据缓冲区, 98, 30), #文本型))
        赋值 (mp3标签数据.音轨, “”)
    .否则
        是ID3v1.1版本
        赋值 (mp3标签数据.注释, 取字节集数据 (取字节集中间 (MP3标签数据缓冲区, 98, 28), #文本型))
        赋值 (mp3标签数据.音轨, 到文本 (取字节集数据 (取字节集中间 (MP3标签数据缓冲区, 127, 1), #整数型)))
        .如果真 (等于 (mp3标签数据.音轨, “0”))
            赋值 (mp3标签数据.音轨, “”)
        .如果真结束
        
    .如果结束
    赋值 (mp3标签数据.流派, 到文本 (取字节集数据 (取字节集中间 (MP3标签数据缓冲区, 128, 1), #整数型)))
.否则
    返回 (假)
.如果结束
赋值 (mp3标签数据.歌曲名, 删首尾空 (mp3标签数据.歌曲名))
赋值 (mp3标签数据.艺术家, 删首尾空 (mp3标签数据.艺术家))
赋值 (mp3标签数据.专辑, 删首尾空 (mp3标签数据.专辑))
返回 (真)

.子程序 是否有V1标签, 逻辑型, , 
.参数 文件号, 整数型, , 

.局部变量 文件长度, 整数型, , , 

赋值 (文件长度, 取文件长度 (文件号))
.如果真 (小于 (文件长度, 128))
    返回 (假)
.如果真结束
移动读写位置 (文件号, #文件尾, -128)
赋值 (MP3标签数据缓冲区, 读入字节集 (文件号, 128))
.如果 (等于 (取字节集中间 (MP3标签数据缓冲区, 1, 3), { 84, 65, 71 })) ' {84, 65, 71}对应文本“TAG”
    返回 (真)
.否则
    返回 (假)
.如果结束


.子程序 读MP3标签V2, 逻辑型, , 
.参数 文件号, 整数型, , 
.参数 mp3标签数据, MP3标签, 参考, 

.局部变量 长度数组, 字节型, , "4", 用来记录长度信息，整个标签或单个框架

.如果 (等于 (是否有V2标签 (文件号), 真))
    移动读写位置 (文件号, #文件首, 6)
    读入数据 (文件号, 长度数组)
    移动读写位置 (文件号, #文件首, 0)
    赋值 (MP3标签数据缓冲区, 读入字节集 (文件号, 读V2标签长度 (长度数组)))
    赋值 (mp3标签数据.歌曲名, 读MP3标签V2框架信息 (“TIT2”))
    赋值 (mp3标签数据.艺术家, 读MP3标签V2框架信息 (“TPE1”))
    赋值 (mp3标签数据.专辑, 读MP3标签V2框架信息 (“TALB”))
    赋值 (mp3标签数据.年代, 读MP3标签V2框架信息 (“TYER”))
    赋值 (mp3标签数据.音轨, 读MP3标签V2框架信息 (“TRCK”))
    赋值 (mp3标签数据.流派, 读MP3标签V2框架信息 (“TCON”))
    .如果真 (不等于 (mp3标签数据.流派, “”))
        转换流派 (mp3标签数据.流派)
    .如果真结束
    赋值 (mp3标签数据.注释, 读MP3标签V2框架信息 (“COMM”))
    赋值 (mp3标签数据.原创者, 读MP3标签V2框架信息 (“TOPE”))
    赋值 (mp3标签数据.版权, 读MP3标签V2框架信息 (“TCOP”))
    赋值 (mp3标签数据.作曲家, 读MP3标签V2框架信息 (“TCOM”))
    赋值 (mp3标签数据.URL, 读MP3标签V2框架信息 (“WXXX”))
    赋值 (mp3标签数据.编码者, 读MP3标签V2框架信息 (“TENC”))
.否则
    返回 (假)
.如果结束
返回 (真)

.子程序 是否有V2标签, 逻辑型, , 判断是否有ID3V2标签
.参数 文件号, 整数型, , 文件已经打开，且有读权限

.局部变量 字节数组, 字节型, , "7", 

.如果真 (等于 (文件号, 0))
    返回 (假)
.如果真结束
移动读写位置 (文件号, #文件首, 0)
An ID3v2 tag can be detected with the following pattern:
$49 44 33 yy yy xx zz zz zz zz
Where yy is less than $FF, xx is the 'flags' byte and zz is less than $80.
DEBUG_TEMP ＝ 读入字节集 (文件号, 3)
.如果真 (等于 (读入字节集 (文件号, 3), { 73, 68, 51 })) ' {73,68,51}对应文本“ID3”
    读入数据 (文件号, 字节数组)
    .如果真 (并且 (小于 (字节数组 [1], 255), 小于 (字节数组 [2], 255), 小于 (字节数组 [3], 255)))
        .如果真 (并且 (小于 (字节数组 [4], 128), 小于 (字节数组 [5], 128), 小于 (字节数组 [6], 128), 小于 (字节数组 [7], 128)))
            返回 (真)
        .如果真结束
        
    .如果真结束
    
.如果真结束
返回 (假)

.子程序 读V2标签长度, 整数型, , 
.参数 长度数组, 字节型, 参考 数组, 4字节内容

格式为：0xxxxxxx 0xxxxxxx 0xxxxxxx 0xxxxxxx
用4个字节表示标签信息的长度，但每个字节的最高位不使用，恒为‘0’
如：257 各字节长的标签信息用4字节表示为：00 00 02 01
赋值 (长度数组 [1], 位与 (长度数组 [1], 127))
赋值 (长度数组 [2], 位与 (长度数组 [2], 127))
赋值 (长度数组 [3], 位与 (长度数组 [3], 127))
赋值 (长度数组 [4], 位与 (长度数组 [4], 127))
返回 (相加 (相乘 (长度数组 [1], 2097152), 相乘 (长度数组 [2], 1024), 相乘 (长度数组 [3], 128), 长度数组 [4], 10)) ' 标签长度信息不包含标签头的10个字节的信息，故还应该加上10

.子程序 读MP3标签V2框架信息, 文本型, , 
.参数 框架ID, 文本型, 参考, 

.局部变量 框架ID头, 文本型, , , 
.局部变量 信息开始位置, 整数型, , , 
.局部变量 临时字节集, 字节集, , , 
.局部变量 信息文本, 文本型, , , 
.局部变量 上次搜索位置, 整数型, , , 

歌曲名      TIT2
艺术家      TPE1
专辑        TALB
年代        TYER
音轨        TRCK
流派        TCON
注释        COMM
原创者      TOPE
版权        TCOP
作曲家      TCOM
URL         WXXX
编码者      TENC
赋值 (信息开始位置, 寻找字节集 (MP3标签数据缓冲区, 到字节集 (框架ID))) ' 框架的位置
.如果 (不等于 (信息开始位置, -1))
    赋值 (临时字节集, 取字节集中间 (MP3标签数据缓冲区, 相加 (信息开始位置, 4), 4)) ' ‘临时字节集’存放框架的长度信息
    字节集倒序 (临时字节集)
    赋值 (临时字节集, 取字节集中间 (MP3标签数据缓冲区, 相加 (信息开始位置, 10), 取字节集数据 (临时字节集, #整数型))) ' ‘临时字节集’此时存放框架的信息数据
    .如果 (等于 (取字节集左边 (临时字节集, 1), { 1 })) ' Unicode编码
        去掉Unicode BOM ($FF FE or $FE FF)以及简单的描述信息
         ' 信息开始位置 ＝ -1
        赋值 (信息开始位置, 寻找字节集 (临时字节集, { 255, 254 }, ))
        .如果 (不等于 (信息开始位置, -1))
            赋值 (上次搜索位置, 信息开始位置)
            赋值 (信息开始位置, 寻找字节集 (临时字节集, { 255, 254 }, 相加 (信息开始位置, 2)))
            .如果真 (等于 (信息开始位置, -1))
                赋值 (信息开始位置, 寻找字节集 (临时字节集, { 254, 255 }, 信息开始位置))
                .如果真 (等于 (信息开始位置, -1))
                    赋值 (信息开始位置, 上次搜索位置)
                .如果真结束
                
            .如果真结束
            
        .否则
            赋值 (信息开始位置, 寻找字节集 (临时字节集, { 254, 255 }, 信息开始位置))
            .如果真 (不等于 (信息开始位置, -1))
                赋值 (上次搜索位置, 信息开始位置)
                赋值 (信息开始位置, 寻找字节集 (临时字节集, { 254, 255 }, ))
                .如果真 (等于 (信息开始位置, -1))
                    赋值 (信息开始位置, 上次搜索位置)
                .如果真结束
                
            .如果真结束
            
        .如果结束
        如果找到Unicode BOM标志，则去掉Unicode BOM以及描述信息，若未找到Unicode BOM标志，则忽略‘临时字节集’第一个字节{1}
        .如果真 (等于 (信息开始位置, -1)) ' 未找到Unicode BOM标志，则忽略‘临时字节集’左边的第一个字节{1}
            赋值 (信息开始位置, 2)
        .如果真结束
        赋值 (临时字节集, 取字节集右边 (临时字节集, 相减 (取字节集长度 (临时字节集), 信息开始位置, 1)))
    .否则
        赋值 (框架ID头, 取文本左边 (框架ID, 1))
        .判断开始 (等于 (框架ID头, “T”))
             ' 文本信息框架：Txxx『编码：1字节；实际信息』
            赋值 (信息开始位置, 1)
        .判断 (等于 (框架ID头, “W”))
            WXXX－URL『编码：1字节；描述：以{0,0}或{0}结束；实际信息』
            赋值 (信息开始位置, 寻找字节集 (临时字节集, { 0 }, 2))
        .默认
            COMM－注释『编码：1字节；语言：3字节；简短描述：以（{0,0}或{0}）结束；实际信息』
            赋值 (信息开始位置, 寻找字节集 (临时字节集, { 0 }, 5))
        .判断结束
        赋值 (临时字节集, 字节集替换 (临时字节集, 1, 信息开始位置, ))
    .如果结束
    赋值 (临时字节集, 子字节集替换 (临时字节集, { 0 }, , , ))
    赋值 (信息文本, 取字节集数据 (临时字节集, #文本型))
.否则
    赋值 (信息文本, “”)
.如果结束
返回 (信息文本)


.子程序 转换流派, 文本型, , 根据ID3v2流派格式，转换为流派的具体名称
.参数 ID3v2流派格式, 文本型, 参考, 

.局部变量 流派右括号位置, 短整数型, , , 
.局部变量 流派左括号位置, 短整数型, , , 
.局部变量 流派数值, 短整数型, , , 
.局部变量 流派编号文本, 文本型, , , 
.局部变量 临时变量, 短整数型, , , 

赋值 (临时变量, 寻找文本 (ID3v2流派格式, “(”, 1, 真))
.判断循环首 (不等于 (临时变量, -1))
    赋值 (流派左括号位置, 临时变量)
    赋值 (临时变量, 寻找文本 (ID3v2流派格式, “(”, 相加 (临时变量, 1), 真))
.判断循环尾 ()
.如果 (不等于 (流派左括号位置, -1))
    赋值 (流派右括号位置, 寻找文本 (ID3v2流派格式, “)”, 流派左括号位置, 真))
    .如果 (不等于 (流派右括号位置, -1))
        .如果 (小于 (相减 (流派右括号位置, 流派左括号位置), 5))
            赋值 (流派编号文本, 取文本中间 (ID3v2流派格式, 相加 (流派左括号位置, 1), 相减 (流派右括号位置, 流派左括号位置, 1)))
            赋值 (ID3v2流派格式, MP3流派名称 [相加 (到数值 (流派编号文本), 1)])
        .否则
            赋值 (ID3v2流派格式, 取文本中间 (ID3v2流派格式, 相加 (流派右括号位置, 1), 相减 (取文本长度 (ID3v2流派格式), 流派右括号位置)))
        .如果结束
        
    .否则
        赋值 (ID3v2流派格式, 文本替换 (ID3v2流派格式, 1, 流派左括号位置, “”))
    .如果结束
    
.否则
    
.如果结束
返回 (ID3v2流派格式)

.子程序 字节集倒序, 字节集, , 如：{1,2,3，4}   -－>   {4，3,2,1}
.参数 长度字节集, 字节集, 参考, 

.局部变量 字节集1, 字节集, , , 
.局部变量 字节集2, 字节集, , , 

将字节集反向
赋值 (字节集1, 取字节集左边 (长度字节集, 1))
赋值 (字节集2, 取字节集右边 (长度字节集, 1))
赋值 (长度字节集, 字节集替换 (长度字节集, 1, 1, 字节集2))
赋值 (长度字节集, 字节集替换 (长度字节集, 4, 1, 字节集1))
赋值 (字节集1, 取字节集中间 (长度字节集, 2, 1))
赋值 (字节集2, 取字节集中间 (长度字节集, 3, 1))
赋值 (长度字节集, 字节集替换 (长度字节集, 2, 1, 字节集2))
赋值 (长度字节集, 字节集替换 (长度字节集, 3, 1, 字节集1))
返回 (长度字节集)

.子程序 构造MP3流派查询表之文字, 空白型, , 
赋值 (MP3流派名称 [1], “Blues”)
赋值 (MP3流派名称 [2], “Classic Rock”)
赋值 (MP3流派名称 [3], “Country”)
赋值 (MP3流派名称 [4], “Dance”)
赋值 (MP3流派名称 [5], “Disco”)
赋值 (MP3流派名称 [6], “Funk”)
赋值 (MP3流派名称 [7], “Grunge”)
赋值 (MP3流派名称 [8], “Hip-Hop”)
赋值 (MP3流派名称 [9], “Jazz”)
赋值 (MP3流派名称 [10], “Metal”)
赋值 (MP3流派名称 [11], “New Age”)
赋值 (MP3流派名称 [12], “Oldies”)
赋值 (MP3流派名称 [13], “Other”)
赋值 (MP3流派名称 [14], “Pop”)
赋值 (MP3流派名称 [15], “R&B”)
赋值 (MP3流派名称 [16], “Rap”)
赋值 (MP3流派名称 [17], “Reggae”)
赋值 (MP3流派名称 [18], “Rock”)
赋值 (MP3流派名称 [19], “Techno”)
赋值 (MP3流派名称 [20], “Industrial”)
赋值 (MP3流派名称 [21], “Alternative”)
赋值 (MP3流派名称 [22], “Ska”)
赋值 (MP3流派名称 [23], “Death Metal”)
赋值 (MP3流派名称 [24], “Pranks”)
赋值 (MP3流派名称 [25], “Soundtrack”)
赋值 (MP3流派名称 [26], “Euro-Techno”)
赋值 (MP3流派名称 [27], “Ambient”)
赋值 (MP3流派名称 [28], “Trip-Hop”)
赋值 (MP3流派名称 [29], “Vocal”)
赋值 (MP3流派名称 [30], “Jazz+Funk”)
赋值 (MP3流派名称 [31], “Fusion”)
赋值 (MP3流派名称 [32], “Trance”)
赋值 (MP3流派名称 [33], “Classical”)
赋值 (MP3流派名称 [34], “Instrumental”)
赋值 (MP3流派名称 [35], “Acid”)
赋值 (MP3流派名称 [36], “House”)
赋值 (MP3流派名称 [37], “Game”)
赋值 (MP3流派名称 [38], “Sound Clip”)
赋值 (MP3流派名称 [39], “Gospel”)
赋值 (MP3流派名称 [40], “Noise”)
赋值 (MP3流派名称 [41], “AlternRock”)
赋值 (MP3流派名称 [42], “Bass”)
赋值 (MP3流派名称 [43], “Soul”)
赋值 (MP3流派名称 [44], “Punk”)
赋值 (MP3流派名称 [45], “Space”)
赋值 (MP3流派名称 [46], “Meditative”)
赋值 (MP3流派名称 [47], “Instrumental Pop”)
赋值 (MP3流派名称 [48], “Instrumental Rock”)
赋值 (MP3流派名称 [49], “Ethnic”)
赋值 (MP3流派名称 [50], “Gothic”)
赋值 (MP3流派名称 [51], “Darkwave”)
赋值 (MP3流派名称 [52], “Techno-Industrial”)
赋值 (MP3流派名称 [53], “Electronic”)
赋值 (MP3流派名称 [54], “Pop-Folk”)
赋值 (MP3流派名称 [55], “Eurodance”)
赋值 (MP3流派名称 [56], “Dream”)
赋值 (MP3流派名称 [57], “Southern Rock”)
赋值 (MP3流派名称 [58], “Comedy”)
赋值 (MP3流派名称 [59], “Cult”)
赋值 (MP3流派名称 [60], “Gangsta”)
赋值 (MP3流派名称 [61], “Top 40”)
赋值 (MP3流派名称 [62], “Christian Rap”)
赋值 (MP3流派名称 [63], “Pop/Funk”)
赋值 (MP3流派名称 [64], “Jungle”)
赋值 (MP3流派名称 [65], “Native American”)
赋值 (MP3流派名称 [66], “Cabaret”)
赋值 (MP3流派名称 [67], “New Wave”)
赋值 (MP3流派名称 [68], “Psychadelic”)
赋值 (MP3流派名称 [69], “Rave”)
赋值 (MP3流派名称 [70], “Showtunes”)
赋值 (MP3流派名称 [71], “Trailer”)
赋值 (MP3流派名称 [72], “Lo-Fi”)
赋值 (MP3流派名称 [73], “Tribal”)
赋值 (MP3流派名称 [74], “Acid Punk”)
赋值 (MP3流派名称 [75], “Acid Jazz”)
赋值 (MP3流派名称 [76], “Polka”)
赋值 (MP3流派名称 [77], “Retro”)
赋值 (MP3流派名称 [78], “Musical”)
赋值 (MP3流派名称 [79], “Rock & Roll”)
赋值 (MP3流派名称 [80], “Hard Rock”)
赋值 (MP3流派名称 [81], “Folk”)
赋值 (MP3流派名称 [82], “Folk-Rock”)
赋值 (MP3流派名称 [83], “National Folk”)
赋值 (MP3流派名称 [84], “Swing”)
赋值 (MP3流派名称 [85], “Fast Fusion”)
赋值 (MP3流派名称 [86], “Bebob”)
赋值 (MP3流派名称 [87], “Latin”)
赋值 (MP3流派名称 [88], “Revival”)
赋值 (MP3流派名称 [89], “Celtic”)
赋值 (MP3流派名称 [90], “Bluegrass”)
赋值 (MP3流派名称 [91], “Avantgarde”)
赋值 (MP3流派名称 [92], “Gothic Rock”)
赋值 (MP3流派名称 [93], “Progressive Rock”)
赋值 (MP3流派名称 [94], “Psychedelic Rock”)
赋值 (MP3流派名称 [95], “Symphonic Rock”)
赋值 (MP3流派名称 [96], “Slow Rock”)
赋值 (MP3流派名称 [97], “Big Band”)
赋值 (MP3流派名称 [98], “Chorus”)
赋值 (MP3流派名称 [99], “Easy Listening”)
赋值 (MP3流派名称 [100], “Acoustic”)
赋值 (MP3流派名称 [101], “Humour”)
赋值 (MP3流派名称 [102], “Speech”)
赋值 (MP3流派名称 [103], “Chanson”)
赋值 (MP3流派名称 [104], “Opera”)
赋值 (MP3流派名称 [105], “Chamber Music”)
赋值 (MP3流派名称 [106], “Sonata”)
赋值 (MP3流派名称 [107], “Symphony”)
赋值 (MP3流派名称 [108], “Booty Bass”)
赋值 (MP3流派名称 [109], “Primus”)
赋值 (MP3流派名称 [110], “Porn Groove”)
赋值 (MP3流派名称 [111], “Satire”)
赋值 (MP3流派名称 [112], “Slow Jam”)
赋值 (MP3流派名称 [113], “Club”)
赋值 (MP3流派名称 [114], “Tango”)
赋值 (MP3流派名称 [115], “Samba”)
赋值 (MP3流派名称 [116], “Folklore”)
赋值 (MP3流派名称 [117], “Ballad”)
赋值 (MP3流派名称 [118], “Power Ballad”)
赋值 (MP3流派名称 [119], “Rhythmic Soul”)
赋值 (MP3流派名称 [120], “Freestyle”)
赋值 (MP3流派名称 [121], “Duet”)
赋值 (MP3流派名称 [122], “Punk Rock”)
赋值 (MP3流派名称 [123], “Drum Solo”)
赋值 (MP3流派名称 [124], “A capella”)
赋值 (MP3流派名称 [125], “Euro-House”)
赋值 (MP3流派名称 [126], “Dance Hall”)


 ' 不属于任何一个程序集、类模块的函数：
