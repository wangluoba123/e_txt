 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 窗口1
    左边 = 50
    顶边 = 50
    宽度 = 485
    高度 = 250
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假





 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 5 0 系统核心支持库




数据类型 范围, , 
    .成员 左边, 整数型, , , 
    .成员 顶边, 整数型, , , 
    .成员 宽度, 整数型, , , 
    .成员 高度, 整数型, , , 


.程序集 程序集1, , , 

.子程序 _启动子程序, 整数型, , 本子程序在程序启动后最先执行
载入 (窗口1, , 真)
返回 (0) ' 可以根据您的需要返回任意数值

.窗口程序集 窗口程序集1, , , 

.子程序 _画板1_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 位图, 字节集, , , 
.局部变量 x, 整数型, , , 
.局部变量 y, 整数型, , , 
.局部变量 rgb, 整数型, , , 

.清除 ()
置随机数种子 ()
.如果 (等于 (取随机数 (1, 2), 1))
    字符 (取随机数 (97, 122)).写文本行 ()
.否则
    字符 (取随机数 (65, 90)).写文本行 ()
.如果结束
赋值 (位图, .取图片 ())
赋值 (., 取位图轮廓图 (位图))
赋值 (., 位图细化 (位图))

.子程序 _窗口1_创建完毕, 空白型, , 
_画板1_鼠标左键被按下 (0, 0, 0)

.子程序 取位图轮廓图, 字节集, , 
.参数 位图, 字节集, , 

.局部变量 轮廓图, 字节集, , , 
.局部变量 w, 整数型, , , 
.局部变量 h, 整数型, , , 
.局部变量 x, 整数型, , , 
.局部变量 y, 整数型, , , 
.局部变量 i, 整数型, , , 
.局部变量 rgb, 整数型, , , 

赋值 (轮廓图, 位图)
赋值 (w, 取字节集数据 (取字节集中间 (位图, 19, 4), 3, ))
赋值 (h, 取字节集数据 (取字节集中间 (位图, 23, 4), 3, ))
.计次循环首 (w, x)
    .计次循环首 (h, y)
        赋值 (rgb, 取位图颜色 (位图, 相减 (x, 1), 相减 (y, 1)))
        .如果真 (不等于 (rgb, #白色))
            赋值 (rgb, 取位图颜色 (位图, 相减 (x, 2), 相减 (y, 1)))
            .如果真 (或者 (等于 (rgb, -1), 等于 (rgb, #白色)))
                到循环尾 ()
            .如果真结束
            赋值 (rgb, 取位图颜色 (位图, 相减 (x, 1), 相减 (y, 2)))
            .如果真 (或者 (等于 (rgb, -1), 等于 (rgb, #白色)))
                到循环尾 ()
            .如果真结束
            赋值 (rgb, 取位图颜色 (位图, x, 相减 (y, 1)))
            .如果真 (或者 (等于 (rgb, -1), 等于 (rgb, #白色)))
                到循环尾 ()
            .如果真结束
            赋值 (rgb, 取位图颜色 (位图, 相减 (x, 1), y))
            .如果真 (或者 (等于 (rgb, -1), 等于 (rgb, #白色)))
                到循环尾 ()
            .如果真结束
            赋值 (rgb, 取位图颜色 (位图, 相减 (x, 2), 相减 (y, 2)))
            .如果真 (或者 (等于 (rgb, -1), 等于 (rgb, #白色)))
                到循环尾 ()
            .如果真结束
            赋值 (rgb, 取位图颜色 (位图, x, 相减 (y, 2)))
            .如果真 (或者 (等于 (rgb, -1), 等于 (rgb, #白色)))
                到循环尾 ()
            .如果真结束
            赋值 (rgb, 取位图颜色 (位图, 相减 (x, 2), y))
            .如果真 (或者 (等于 (rgb, -1), 等于 (rgb, #白色)))
                到循环尾 ()
            .如果真结束
            赋值 (rgb, 取位图颜色 (位图, x, y))
            .如果真 (或者 (等于 (rgb, -1), 等于 (rgb, #白色)))
                到循环尾 ()
            .如果真结束
            赋值 (轮廓图, 置位图颜色 (轮廓图, 相减 (x, 1), 相减 (y, 1), #白色))
        .如果真结束
        
    .计次循环尾 ()
    处理事件 ()
.计次循环尾 ()
返回 (轮廓图)

.子程序 位图细化, 字节集, , 
.参数 位图, 字节集, , 

.局部变量 表, 字节型, , "256", 
.局部变量 位图宽度, 整数型, , , 
.局部变量 位图高度, 整数型, , , 
.局部变量 Finished, 逻辑型, , , 
.局部变量 X, 整数型, , , 
.局部变量 Y, 整数型, , , 
.局部变量 w, 整数型, , , 
.局部变量 e, 整数型, , , 
.局部变量 nw, 整数型, , , 
.局部变量 n, 整数型, , , 
.局部变量 ne, 整数型, , , 
.局部变量 sw, 整数型, , , 
.局部变量 s, 整数型, , , 
.局部变量 se, 整数型, , , 
.局部变量 num, 整数型, , , 

赋值 (表 [1], 0)
赋值 (表 [2], 0)
赋值 (表 [3], 1)
赋值 (表 [4], 1)
赋值 (表 [5], 0)
赋值 (表 [6], 0)
赋值 (表 [7], 1)
赋值 (表 [8], 1)
赋值 (表 [9], 1)
赋值 (表 [10], 1)
赋值 (表 [11], 0)
赋值 (表 [12], 1)
赋值 (表 [13], 1)
赋值 (表 [14], 1)
赋值 (表 [15], 0)
赋值 (表 [16], 1)
赋值 (表 [17], 1)
赋值 (表 [18], 1)
赋值 (表 [19], 0)
赋值 (表 [20], 0)
赋值 (表 [21], 1)
赋值 (表 [22], 1)
赋值 (表 [23], 1)
赋值 (表 [24], 1)
赋值 (表 [25], 0)
赋值 (表 [26], 0)
赋值 (表 [27], 0)
赋值 (表 [28], 0)
赋值 (表 [29], 0)
赋值 (表 [30], 0)
赋值 (表 [31], 0)
赋值 (表 [32], 1)
赋值 (表 [33], 0)
赋值 (表 [34], 0)
赋值 (表 [35], 1)
赋值 (表 [36], 1)
赋值 (表 [37], 0)
赋值 (表 [38], 0)
赋值 (表 [39], 1)
赋值 (表 [40], 1)
赋值 (表 [41], 1)
赋值 (表 [42], 1)
赋值 (表 [43], 0)
赋值 (表 [44], 1)
赋值 (表 [45], 1)
赋值 (表 [46], 1)
赋值 (表 [47], 0)
赋值 (表 [48], 1)
赋值 (表 [49], 1)
赋值 (表 [50], 1)
赋值 (表 [51], 0)
赋值 (表 [52], 0)
赋值 (表 [53], 1)
赋值 (表 [54], 1)
赋值 (表 [55], 1)
赋值 (表 [56], 1)
赋值 (表 [57], 0)
赋值 (表 [58], 0)
赋值 (表 [59], 0)
赋值 (表 [60], 0)
赋值 (表 [61], 0)
赋值 (表 [62], 0)
赋值 (表 [63], 0)
赋值 (表 [64], 1)
赋值 (表 [65], 1)
赋值 (表 [66], 1)
赋值 (表 [67], 0)
赋值 (表 [68], 0)
赋值 (表 [69], 1)
赋值 (表 [70], 1)
赋值 (表 [71], 0)
赋值 (表 [72], 0)
赋值 (表 [73], 0)
赋值 (表 [74], 0)
赋值 (表 [75], 0)
赋值 (表 [76], 0)
赋值 (表 [77], 0)
赋值 (表 [78], 0)
赋值 (表 [79], 0)
赋值 (表 [80], 0)
赋值 (表 [81], 0)
赋值 (表 [82], 0)
赋值 (表 [83], 0)
赋值 (表 [84], 0)
赋值 (表 [85], 0)
赋值 (表 [86], 0)
赋值 (表 [87], 0)
赋值 (表 [88], 0)
赋值 (表 [89], 0)
赋值 (表 [90], 0)
赋值 (表 [91], 0)
赋值 (表 [92], 0)
赋值 (表 [93], 0)
赋值 (表 [94], 0)
赋值 (表 [95], 0)
赋值 (表 [96], 0)
赋值 (表 [97], 1)
赋值 (表 [98], 1)
赋值 (表 [99], 0)
赋值 (表 [100], 0)
赋值 (表 [101], 1)
赋值 (表 [102], 1)
赋值 (表 [103], 0)
赋值 (表 [104], 0)
赋值 (表 [105], 1)
赋值 (表 [106], 1)
赋值 (表 [107], 0)
赋值 (表 [108], 1)
赋值 (表 [109], 1)
赋值 (表 [110], 1)
赋值 (表 [111], 0)
赋值 (表 [112], 1)
赋值 (表 [113], 0)
赋值 (表 [114], 0)
赋值 (表 [115], 0)
赋值 (表 [116], 0)
赋值 (表 [117], 0)
赋值 (表 [118], 0)
赋值 (表 [119], 0)
赋值 (表 [120], 0)
赋值 (表 [121], 0)
赋值 (表 [122], 0)
赋值 (表 [123], 0)
赋值 (表 [124], 0)
赋值 (表 [125], 0)
赋值 (表 [126], 0)
赋值 (表 [127], 0)
赋值 (表 [128], 0)
赋值 (表 [129], 0)
赋值 (表 [130], 0)
赋值 (表 [131], 1)
赋值 (表 [132], 1)
赋值 (表 [133], 0)
赋值 (表 [134], 0)
赋值 (表 [135], 1)
赋值 (表 [136], 1)
赋值 (表 [137], 1)
赋值 (表 [138], 1)
赋值 (表 [139], 0)
赋值 (表 [140], 1)
赋值 (表 [141], 1)
赋值 (表 [142], 1)
赋值 (表 [143], 0)
赋值 (表 [144], 1)
赋值 (表 [145], 1)
赋值 (表 [146], 1)
赋值 (表 [147], 0)
赋值 (表 [148], 0)
赋值 (表 [149], 1)
赋值 (表 [150], 1)
赋值 (表 [151], 1)
赋值 (表 [152], 1)
赋值 (表 [153], 0)
赋值 (表 [154], 0)
赋值 (表 [155], 0)
赋值 (表 [156], 0)
赋值 (表 [157], 0)
赋值 (表 [158], 0)
赋值 (表 [159], 0)
赋值 (表 [160], 1)
赋值 (表 [161], 0)
赋值 (表 [162], 0)
赋值 (表 [163], 1)
赋值 (表 [164], 1)
赋值 (表 [165], 0)
赋值 (表 [166], 0)
赋值 (表 [167], 1)
赋值 (表 [168], 1)
赋值 (表 [169], 1)
赋值 (表 [170], 1)
赋值 (表 [171], 0)
赋值 (表 [172], 1)
赋值 (表 [173], 1)
赋值 (表 [174], 1)
赋值 (表 [175], 0)
赋值 (表 [176], 1)
赋值 (表 [177], 1)
赋值 (表 [178], 1)
赋值 (表 [179], 0)
赋值 (表 [180], 0)
赋值 (表 [181], 1)
赋值 (表 [182], 1)
赋值 (表 [183], 1)
赋值 (表 [184], 1)
赋值 (表 [185], 0)
赋值 (表 [186], 0)
赋值 (表 [187], 0)
赋值 (表 [188], 0)
赋值 (表 [189], 0)
赋值 (表 [190], 0)
赋值 (表 [191], 0)
赋值 (表 [192], 0)
赋值 (表 [193], 1)
赋值 (表 [194], 1)
赋值 (表 [195], 0)
赋值 (表 [196], 0)
赋值 (表 [197], 1)
赋值 (表 [198], 1)
赋值 (表 [199], 0)
赋值 (表 [200], 0)
赋值 (表 [201], 0)
赋值 (表 [202], 0)
赋值 (表 [203], 0)
赋值 (表 [204], 0)
赋值 (表 [205], 0)
赋值 (表 [206], 0)
赋值 (表 [207], 0)
赋值 (表 [208], 0)
赋值 (表 [209], 1)
赋值 (表 [210], 1)
赋值 (表 [211], 0)
赋值 (表 [212], 0)
赋值 (表 [213], 1)
赋值 (表 [214], 1)
赋值 (表 [215], 1)
赋值 (表 [216], 1)
赋值 (表 [217], 0)
赋值 (表 [218], 0)
赋值 (表 [219], 0)
赋值 (表 [220], 0)
赋值 (表 [221], 0)
赋值 (表 [222], 0)
赋值 (表 [223], 0)
赋值 (表 [224], 0)
赋值 (表 [225], 1)
赋值 (表 [226], 1)
赋值 (表 [227], 0)
赋值 (表 [228], 0)
赋值 (表 [229], 1)
赋值 (表 [230], 1)
赋值 (表 [231], 0)
赋值 (表 [232], 0)
赋值 (表 [233], 1)
赋值 (表 [234], 1)
赋值 (表 [235], 0)
赋值 (表 [236], 1)
赋值 (表 [237], 1)
赋值 (表 [238], 1)
赋值 (表 [239], 0)
赋值 (表 [240], 0)
赋值 (表 [241], 1)
赋值 (表 [242], 1)
赋值 (表 [243], 0)
赋值 (表 [244], 0)
赋值 (表 [245], 1)
赋值 (表 [246], 1)
赋值 (表 [247], 1)
赋值 (表 [248], 0)
赋值 (表 [249], 1)
赋值 (表 [250], 1)
赋值 (表 [251], 0)
赋值 (表 [252], 0)
赋值 (表 [253], 1)
赋值 (表 [254], 0)
赋值 (表 [255], 0)
赋值 (表 [256], 0)
赋值 (位图宽度, 取字节集数据 (取字节集中间 (位图, 19, 4), 3, ))
赋值 (位图高度, 取字节集数据 (取字节集中间 (位图, 23, 4), 3, ))
赋值 (Finished, 假)
.判断循环首 (等于 (Finished, 假))
    赋值 (Finished, 真)
    .计次循环首 (相减 (位图高度, 2), Y)
        赋值 (X, 1)
        .判断循环首 (小于 (X, 相减 (位图宽度, 2)))
            .如果真 (不等于 (取位图颜色 (位图, X, Y), #白色))
                赋值 (w, 选择 (等于 (取位图颜色 (位图, 相减 (X, 1), Y), #白色), 1, 0))
                赋值 (e, 选择 (等于 (取位图颜色 (位图, 相加 (X, 1), Y), #白色), 1, 0))
                .如果真 (或者 (等于 (w, 1), 等于 (e, 1)))
                    赋值 (nw, 选择 (等于 (取位图颜色 (位图, 相减 (X, 1), 相减 (Y, 1)), #白色), 1, 0))
                    赋值 (n, 选择 (等于 (取位图颜色 (位图, X, 相减 (Y, 1)), #白色), 1, 0))
                    赋值 (ne, 选择 (等于 (取位图颜色 (位图, 相加 (X, 1), 相减 (Y, 1)), #白色), 1, 0))
                    赋值 (sw, 选择 (等于 (取位图颜色 (位图, 相减 (X, 1), 相加 (Y, 1)), #白色), 1, 0))
                    赋值 (s, 选择 (等于 (取位图颜色 (位图, X, 相加 (Y, 1)), #白色), 1, 0))
                    赋值 (se, 选择 (等于 (取位图颜色 (位图, 相加 (X, 1), 相加 (Y, 1)), #白色), 1, 0))
                    赋值 (num, 相加 (nw, 相乘 (n, 2), 相乘 (ne, 4), 相乘 (w, 8), 相乘 (e, 16), 相乘 (sw, 32), 相乘 (s, 64), 相乘 (se, 128)))
                    .如果真 (等于 (表 [相加 (num, 1)], 1))
                        赋值 (位图, 置位图颜色 (位图, X, Y, #白色))
                        赋值 (Finished, 假)
                        赋值 (X, 相加 (X, 1))
                    .如果真结束
                    
                .如果真结束
                
            .如果真结束
            赋值 (X, 相加 (X, 1))
        .判断循环尾 ()
        处理事件 ()
    .计次循环尾 ()
    .计次循环首 (相减 (位图宽度, 2), X)
        赋值 (Y, 1)
        .判断循环首 (小于 (Y, 相减 (位图高度, 2)))
            .如果真 (不等于 (取位图颜色 (位图, X, Y), #白色))
                赋值 (n, 选择 (等于 (取位图颜色 (位图, X, 相减 (Y, 1)), #白色), 1, 0))
                赋值 (s, 选择 (等于 (取位图颜色 (位图, X, 相加 (Y, 1)), #白色), 1, 0))
                .如果真 (或者 (等于 (n, 1), 等于 (s, 1)))
                    赋值 (nw, 选择 (等于 (取位图颜色 (位图, 相减 (X, 1), 相减 (Y, 1)), #白色), 1, 0))
                    赋值 (ne, 选择 (等于 (取位图颜色 (位图, 相加 (X, 1), 相减 (Y, 1)), #白色), 1, 0))
                    赋值 (w, 选择 (等于 (取位图颜色 (位图, 相减 (X, 1), Y), #白色), 1, 0))
                    赋值 (e, 选择 (等于 (取位图颜色 (位图, 相加 (X, 1), Y), #白色), 1, 0))
                    赋值 (sw, 选择 (等于 (取位图颜色 (位图, 相减 (X, 1), 相加 (Y, 1)), #白色), 1, 0))
                    赋值 (se, 选择 (等于 (取位图颜色 (位图, 相加 (X, 1), 相加 (Y, 1)), #白色), 1, 0))
                    赋值 (num, 相加 (nw, 相乘 (n, 2), 相乘 (ne, 4), 相乘 (w, 8), 相乘 (e, 16), 相乘 (sw, 32), 相乘 (s, 64), 相乘 (se, 128)))
                    .如果真 (等于 (表 [相加 (num, 1)], 1))
                        赋值 (位图, 置位图颜色 (位图, X, Y, #白色))
                        赋值 (Finished, 假)
                        赋值 (Y, 相加 (Y, 1))
                    .如果真结束
                    
                .如果真结束
                
            .如果真结束
            赋值 (Y, 相加 (Y, 1))
        .判断循环尾 ()
        处理事件 ()
    .计次循环尾 ()
.判断循环尾 ()
返回 (位图)

.子程序 取位图有效范围, 范围, , 
.参数 位图, 字节集, , 

.局部变量 w, 整数型, , , 
.局部变量 h, 整数型, , , 
.局部变量 x, 整数型, , , 
.局部变量 y, 整数型, , , 
.局部变量 有效范围, 范围, , , 
.局部变量 是否有效, 整数型, , "2,3", 

赋值 (w, 取字节集数据 (取字节集中间 (位图, 19, 4), 3, ))
赋值 (h, 取字节集数据 (取字节集中间 (位图, 23, 4), 3, ))
.计次循环首 (w, x)
    赋值 (是否有效 [1] [2], 0)
    赋值 (是否有效 [2] [2], 0)
    赋值 (是否有效 [1] [3], 是否有效 [1] [1])
    赋值 (是否有效 [2] [3], 是否有效 [2] [1])
    .计次循环首 (h, y)
        .如果真 (并且 (等于 (是否有效 [1] [2], 0), 等于 (有效范围.左边, 0)))
            .如果真 (等于 (取位图颜色 (位图, 相减 (x, 1), 相减 (y, 1)), #黑色))
                赋值 (是否有效 [1] [1], 相加 (是否有效 [1] [1], 1))
                赋值 (是否有效 [1] [2], 1)
            .如果真结束
            
        .如果真结束
        .如果真 (并且 (等于 (是否有效 [2] [2], 0), 等于 (有效范围.宽度, 0)))
            .如果真 (等于 (取位图颜色 (位图, 相减 (w, x), 相减 (h, y)), #黑色))
                赋值 (是否有效 [2] [1], 相加 (是否有效 [2] [1], 1))
                赋值 (是否有效 [2] [2], 1)
            .如果真结束
            
        .如果真结束
        
    .计次循环尾 ()
    赋值 (是否有效 [1] [1], 选择 (等于 (是否有效 [1] [3], 是否有效 [1] [1]), 0, 是否有效 [1] [1]))
    赋值 (是否有效 [2] [1], 选择 (等于 (是否有效 [2] [3], 是否有效 [2] [1]), 0, 是否有效 [2] [1]))
    .如果真 (并且 (等于 (是否有效 [1] [1], 2), 等于 (有效范围.左边, 0)))
        赋值 (有效范围.左边, 相减 (x, 2))
    .如果真结束
    .如果真 (并且 (等于 (是否有效 [2] [1], 2), 等于 (有效范围.宽度, 0)))
        赋值 (有效范围.宽度, 相减 (x, 2))
    .如果真结束
    处理事件 ()
.计次循环尾 ()
赋值 (w, 相减 (w, 有效范围.左边, 有效范围.宽度))
数组清零 (是否有效)
.计次循环首 (h, y)
    赋值 (是否有效 [1] [2], 0)
    赋值 (是否有效 [2] [2], 0)
    赋值 (是否有效 [1] [3], 是否有效 [1] [1])
    赋值 (是否有效 [2] [3], 是否有效 [2] [1])
    .计次循环首 (w, x)
        .如果真 (并且 (等于 (是否有效 [1] [2], 0), 等于 (有效范围.顶边, 0)))
            .如果真 (等于 (取位图颜色 (位图, 相减 (相加 (有效范围.左边, x), 1), 相减 (y, 1)), #黑色))
                赋值 (是否有效 [1] [1], 相加 (是否有效 [1] [1], 1))
                赋值 (是否有效 [1] [2], 1)
            .如果真结束
            
        .如果真结束
        .如果真 (并且 (等于 (是否有效 [2] [2], 0), 等于 (有效范围.高度, 0)))
            .如果真 (等于 (取位图颜色 (位图, 相减 (相加 (有效范围.左边, w), x), 相减 (h, y)), #黑色))
                赋值 (是否有效 [2] [1], 相加 (是否有效 [2] [1], 1))
                赋值 (是否有效 [2] [2], 1)
            .如果真结束
            
        .如果真结束
        
        
    .计次循环尾 ()
    赋值 (是否有效 [1] [1], 选择 (等于 (是否有效 [1] [3], 是否有效 [1] [1]), 0, 是否有效 [1] [1]))
    赋值 (是否有效 [2] [1], 选择 (等于 (是否有效 [2] [3], 是否有效 [2] [1]), 0, 是否有效 [2] [1]))
    .如果真 (并且 (等于 (是否有效 [1] [1], 2), 等于 (有效范围.顶边, 0)))
        赋值 (有效范围.顶边, 相减 (y, 2))
    .如果真结束
    .如果真 (并且 (等于 (是否有效 [2] [1], 2), 等于 (有效范围.高度, 0)))
        赋值 (有效范围.高度, 相减 (y, 2))
    .如果真结束
    处理事件 ()
.计次循环尾 ()
赋值 (有效范围.宽度, w)
赋值 (有效范围.高度, 相减 (h, 有效范围.顶边, 有效范围.高度))
返回 (有效范围)

.子程序 取位图颜色, 整数型, , 
.参数 图形数据, 字节集, , 
.参数 横坐标, 整数型, 可空, 范围为 0~图像宽度 - 1；留空为0。表示图像最左侧。
.参数 纵坐标, 整数型, 可空, 范围为 0~图像高度 - 1；留空为0。表示图像最顶边。

.局部变量 信息大小, 整数型, , , BITMAPINFOHEADER -> biSize        一般为 40，但从实际数据获取较保险
.局部变量 图像宽度, 整数型, , , BITMAPINFOHEADER -> biWidth
.局部变量 图像高度, 整数型, , , BITMAPINFOHEADER -> biHeight       > 0 从下至上逆向存储； < 0 从上至下正向存储
.局部变量 图像位数, 短整数型, , , BITMAPINFOHEADER -> biBitCount
.局部变量 图像压缩, 整数型, , , BITMAPINFOHEADER -> biCompression  1/2-压缩图像; 4/5-JPG/PNG  0-未压缩; 3-未压缩且调色板为3色掩码(位域方式)
.局部变量 扫描行, 整数型, , , 固定公式计算
.局部变量 坐标偏移, 整数型, , , 固定公式计算，返回相对于图像数据阵列起始位置的偏移量
.局部变量 数据偏移, 整数型, , , 文件头 + 信息头 + 调色板(如果有) + 坐标偏移，即指定坐标颜色数据(或其调色板索引)相对于图形数据的偏移量
.局部变量 色板大小, 整数型, , , 调色板大小，如果有。
.局部变量 RGB, 字节集, , , 

.如果真 (不等于 (取字节集左边 (图形数据, 2), { 66, 77 })) ' { 66, 77 } BM 标志
    返回 (-1)
.如果真结束
赋值 (信息大小, 取字节集数据 (取字节集中间 (图形数据, 15, 4), #整数型, ))
赋值 (图像宽度, 取字节集数据 (取字节集中间 (图形数据, 19, 4), #整数型, ))
赋值 (图像高度, 取字节集数据 (取字节集中间 (图形数据, 23, 4), #整数型, ))
赋值 (图像位数, 取字节集数据 (取字节集中间 (图形数据, 29, 2), #短整数型, ))
赋值 (图像压缩, 取字节集数据 (取字节集中间 (图形数据, 31, 4), #整数型, ))
.如果真 (并且 (不等于 (图像压缩, 0), 不等于 (图像压缩, 3)))
    返回 (-1)
.如果真结束
.如果真 (或者 (小于 (横坐标, 0), 小于 (纵坐标, 0), 大于 (横坐标, 相减 (图像宽度, 1)), 大于 (纵坐标, 相减 (图像高度, 1))))
    返回 (-1)
.如果真结束
.判断开始 (或者 (等于 (图像位数, 16), 等于 (图像位数, 32)))
    赋值 (色板大小, 选择 (等于 (图像压缩, 0), 0, 12))
.判断 (等于 (图像位数, 24))
    赋值 (色板大小, 0)
.默认
    返回 (-1)
.判断结束
赋值 (扫描行, 左移 (右移 (相加 (相乘 (图像宽度, 图像位数), 31), 5), 2)) ' 备用写法：右移 (位与 (图像宽度 × 图像位数 ＋ 31, 位取反 (31)), 3)
赋值 (坐标偏移, 相加 (相乘 (相减 (相加 (相乘 (右移 (图像高度, 31), 相加 (图像高度, 1)), 图像高度), 相乘 (位或 (右移 (图像高度, 31), 1), 相加 (纵坐标, 1))), 扫描行), 右移 (相乘 (横坐标, 图像位数), 3), 1))
赋值 (数据偏移, 相加 (14, 信息大小, 色板大小, 坐标偏移))
赋值 (RGB, { 0, 0, 0, 0 })
.判断开始 (等于 (图像位数, 32)) ' 3 字节表示 1个像素颜色
    赋值 (RGB, 取字节集中间 (图形数据, 数据偏移, 4))
.判断 (等于 (图像位数, 24))
    赋值 (RGB [1], 图形数据 [相加 (数据偏移, 2)])
    赋值 (RGB [2], 图形数据 [相加 (数据偏移, 1)])
    赋值 (RGB [3], 图形数据 [数据偏移])
.默认
    
.判断结束
返回 (取字节集数据 (RGB, #整数型, ))

.子程序 置位图颜色, 字节集, , 
.参数 图形数据, 字节集, , 
.参数 横坐标, 整数型, 可空, 范围为 0~图像宽度 - 1；留空为0。表示图像最左侧。
.参数 纵坐标, 整数型, 可空, 范围为 0~图像高度 - 1；留空为0。表示图像最顶边。
.参数 颜色值, 整数型, , 

.局部变量 信息大小, 整数型, , , BITMAPINFOHEADER -> biSize        一般为 40，但从实际数据获取较保险
.局部变量 图像宽度, 整数型, , , BITMAPINFOHEADER -> biWidth
.局部变量 图像高度, 整数型, , , BITMAPINFOHEADER -> biHeight       > 0 从下至上逆向存储； < 0 从上至下正向存储
.局部变量 图像位数, 短整数型, , , BITMAPINFOHEADER -> biBitCount
.局部变量 图像压缩, 整数型, , , BITMAPINFOHEADER -> biCompression  1/2-压缩图像; 4/5-JPG/PNG  0-未压缩; 3-未压缩且调色板为3色掩码(位域方式)
.局部变量 扫描行, 整数型, , , 固定公式计算
.局部变量 坐标偏移, 整数型, , , 固定公式计算，返回相对于图像数据阵列起始位置的偏移量
.局部变量 数据偏移, 整数型, , , 文件头 + 信息头 + 调色板(如果有) + 坐标偏移，即指定坐标颜色数据(或其调色板索引)相对于图形数据的偏移量
.局部变量 色板大小, 整数型, , , 调色板大小，如果有。
.局部变量 RGB, 字节集, , , 

.如果真 (不等于 (取字节集左边 (图形数据, 2), { 66, 77 })) ' { 66, 77 } BM 标志
    返回 ({  })
.如果真结束
赋值 (信息大小, 取字节集数据 (取字节集中间 (图形数据, 15, 4), #整数型, ))
赋值 (图像宽度, 取字节集数据 (取字节集中间 (图形数据, 19, 4), #整数型, ))
赋值 (图像高度, 取字节集数据 (取字节集中间 (图形数据, 23, 4), #整数型, ))
赋值 (图像位数, 取字节集数据 (取字节集中间 (图形数据, 29, 2), #短整数型, ))
赋值 (图像压缩, 取字节集数据 (取字节集中间 (图形数据, 31, 4), #整数型, ))
.如果真 (并且 (不等于 (图像压缩, 0), 不等于 (图像压缩, 3)))
    返回 (图形数据)
.如果真结束
.如果真 (或者 (小于 (横坐标, 0), 小于 (纵坐标, 0), 大于 (横坐标, 相减 (图像宽度, 1)), 大于 (纵坐标, 相减 (图像高度, 1))))
    返回 (图形数据)
.如果真结束
.判断开始 (或者 (等于 (图像位数, 16), 等于 (图像位数, 32)))
    赋值 (色板大小, 选择 (等于 (图像压缩, 0), 0, 12))
.判断 (等于 (图像位数, 24))
    赋值 (色板大小, 0)
.默认
    返回 (图形数据)
.判断结束
赋值 (扫描行, 左移 (右移 (相加 (相乘 (图像宽度, 图像位数), 31), 5), 2)) ' 备用写法：右移 (位与 (图像宽度 × 图像位数 ＋ 31, 位取反 (31)), 3)
赋值 (坐标偏移, 相加 (相乘 (相减 (相加 (相乘 (右移 (图像高度, 31), 相加 (图像高度, 1)), 图像高度), 相乘 (位或 (右移 (图像高度, 31), 1), 相加 (纵坐标, 1))), 扫描行), 右移 (相乘 (横坐标, 图像位数), 3), 1))
赋值 (数据偏移, 相加 (14, 信息大小, 色板大小, 坐标偏移))
赋值 (RGB, 到字节集 (颜色值))
.判断开始 (等于 (图像位数, 32)) ' 3 字节表示 1个像素颜色
    赋值 (图形数据, 字节集替换 (图形数据, 数据偏移, 4, RGB))
.判断 (等于 (图像位数, 24))
    赋值 (图形数据 [相加 (数据偏移, 2)], RGB [1])
    赋值 (图形数据 [相加 (数据偏移, 1)], RGB [2])
    赋值 (图形数据 [数据偏移], RGB [3])
.默认
    
.判断结束
返回 (图形数据)


 ' 不属于任何一个程序集、类模块的函数：
