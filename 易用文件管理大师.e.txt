 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 主窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 593
    高度 = 456
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 1
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 真
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “易用文件管理大师 V 1.2”
    帮助文件名 = “”

窗口 文件信息窗口
    左边 = 50
    顶边 = 50
    宽度 = 606
    高度 = 343
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “文件信息”
    帮助文件名 = “”

窗口 文件属性窗口
    左边 = 50
    顶边 = 50
    宽度 = 380
    高度 = 285
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “文件属性”
    帮助文件名 = “”

窗口 查找分类文件窗口
    左边 = 50
    顶边 = 50
    宽度 = 380
    高度 = 255
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “查找分类文件”
    帮助文件名 = “”

窗口 选择分类窗口
    左边 = 50
    顶边 = 50
    宽度 = 310
    高度 = 413
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “选择分类”
    帮助文件名 = “”

窗口 登录窗口
    左边 = 50
    顶边 = 50
    宽度 = 324
    高度 = 226
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 真
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “易用文件管理大师”
    帮助文件名 = “”

窗口 删除用户窗口
    左边 = 50
    顶边 = 50
    宽度 = 324
    高度 = 166
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 假
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “删除用户”
    帮助文件名 = “”

窗口 添加用户窗口
    左边 = 50
    顶边 = 50
    宽度 = 331
    高度 = 171
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 假
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “添加新用户”
    帮助文件名 = “”

窗口 修改口令窗口
    左边 = 50
    顶边 = 50
    宽度 = 337
    高度 = 169
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 假
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “修改当前用户口令”
    帮助文件名 = “”

窗口 提醒设置窗口
    左边 = 50
    顶边 = 50
    宽度 = 339
    高度 = 160
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “刻盘提醒”
    帮助文件名 = “”

窗口 刻盘整理窗口
    左边 = 50
    顶边 = 50
    宽度 = 549
    高度 = 298
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “刻盘整理”
    帮助文件名 = “”

窗口 备份设置窗口
    左边 = 50
    顶边 = 50
    宽度 = 346
    高度 = 196
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “备份设置”
    帮助文件名 = “”



.声音 头文件源代码, " ' 已保存到：D:\易语言学习\Data\易用文件管理大师.e\头文件源代码", , EfmSoft.e
.常量 读文件, "1073741824", , GENERIC_WRITE
.常量 共亨读, "1", , FILE_SHARE_READ
.常量 共亨写, "2", , FILE_SHARE_WRITE
.常量 打开已有文件, "3", , OPEN_EXISTING
.常量 版本信息, "“EasyFilesManagerV1.0”", , 配置文件密码
.图片 文件夹32, " ' 已保存到：D:\易语言学习\Data\易用文件管理大师.e\文件夹32", , 
.图片 文件夹16, " ' 已保存到：D:\易语言学习\Data\易用文件管理大师.e\文件夹16", , 
.图片 无关联32, " ' 已保存到：D:\易语言学习\Data\易用文件管理大师.e\无关联32", , 
.图片 无关联16, " ' 已保存到：D:\易语言学习\Data\易用文件管理大师.e\无关联16", , 
.图片 初始信息, " ' 已保存到：D:\易语言学习\Data\易用文件管理大师.e\初始信息", , 
.图片 运行文件, " ' 已保存到：D:\易语言学习\Data\易用文件管理大师.e\运行文件", , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 2 系统核心支持库
 ' iext 27bb20fdd3e145e4bee3db39ddd6e64c 1 1 扩展界面支持库一
 ' iext2 AF6AD80AA4244A59AFB3D83ECF5173CC 1 1 扩展界面支持库二
 ' shell 52F260023059454187AF826A3C07AF2A 1 0 操作系统界面功能支持库
 ' shellEx DA19AC3ADD2F4121AAD84AC5FBCAFC71 2 0 扩展功能支持库一
 ' eCompress 7B68736E818E41c5A28B0AE4D43C128C 1 0 压缩解压支持库




数据类型 文件时间, , 
    .成员 Low, 整数型, , , 
    .成员 Hight, 整数型, , , 

数据类型 系统时间, , 
    .成员 年, 短整数型, , , 
    .成员 月, 短整数型, , , 
    .成员 星期, 短整数型, , , 
    .成员 日, 短整数型, , , 
    .成员 小时, 短整数型, , , 
    .成员 分钟, 短整数型, , , 
    .成员 秒, 短整数型, , , 
    .成员 毫秒, 短整数型, , , 

数据类型 测试找到信息, , 
    .成员 横向位置, 整数型, , , 
    .成员 纵向位置, 整数型, , , 
    .成员 标志号, 整数型, , , 
    .成员 句柄号, 整数型, , , 

数据类型 颜色结构, , 
    .成员 lStructSize, 空白型, , , 
    .成员 hwndOwner, 空白型, , , 
    .成员 hInstance, 空白型, , , 
    .成员 rgbResult, 空白型, , , 
    .成员 lpCustColors, 文本型, , , 
    .成员 flags, 空白型, , , 
    .成员 lCustData, 空白型, , , 
    .成员 lpfnHook, 空白型, , , 
    .成员 lpTemplateName, 文本型, , , 

数据类型 文件属性, , 
    .成员 cbSize, 空白型, , , 
    .成员 fMask, 空白型, , , 
    .成员 hwnd, 空白型, , , 
    .成员 lpVerb, 文本型, , , 
    .成员 lpFile, 文本型, , , 
    .成员 lpParameters, 文本型, , , 
    .成员 lpDirectory, 文本型, , , 
    .成员 nShow, 空白型, , , 
    .成员 hInstApp, 空白型, , , 
    .成员 lpIDList, 空白型, , , 
    .成员 lpClass, 文本型, , , 
    .成员 hkeyClass, 空白型, , , 
    .成员 dwHotKey, 空白型, , , 
    .成员 hIcon, 空白型, , , 
    .成员 hProcess, 空白型, , , 

.全局变量 操作, 字节型, , , 1、添加。2、修改。3、取消。4、确定
.全局变量 现行分类, 整数型, , , 
.全局变量 现行分类编码, 文本型, , , 
.全局变量 文件编号, 整数型, , , 
.全局变量 文件全名, 文本型, , , 
.全局变量 剪贴板文件, 文本型, , "0", 
.全局变量 是否剪切, 逻辑型, , , 
.全局变量 用户目录, 文本型, , , 
.全局变量 当前用户, 文本型, , , 
.全局变量 是否已启动, 逻辑型, , , 
.全局变量 匿名全局变量_2142, 空白型, , , 
.全局变量 尺寸, 整数型, 公开, , 取得文件夹的大小，文件数及目录数
.全局变量 文件数, 整数型, 公开, , 
.全局变量 目录数, 整数型, 公开, , 

.DLL命令 发送消息, 空白型, "", "SendMessageA", , 
    .参数 hwnd, 空白型, , 
    .参数 msg, 空白型, , 
    .参数 wp, 空白型, , 
    .参数 lp, 文本型, , 

.DLL命令 取指针, 整数型, "", "lstrcpyn", , 
    .参数 欲取指针的变量, 测试找到信息, 传址, 
    .参数 欲取指针的变量, 测试找到信息, 传址, 
    .参数 保留, 整数型, , 0

.DLL命令 创建事件同步对象, 空白型, "", "CreateEventA", , 
    .参数 lpEventAttributes, 整数型, , 
    .参数 bManualReset, 逻辑型, , 
    .参数 bInitialState, 逻辑型, , 
    .参数 lpName, 文本型, , 

.DLL命令 打开事件同步对象, 整数型, "", "OpenEventA", , 
    .参数 dwDesiredAccess, 整数型, , 
    .参数 bInheritHandle, 逻辑型, , 
    .参数 lpName, 文本型, , 

.DLL命令 系统对话框, 空白型, "", "ShellExecuteEx", , 
    .参数 属性, 文件属性, 传址, 

.DLL命令 GetModuleHandle, 整数型, "", "GetModuleHandleA", , 
    .参数 lpModuleName, 文本型, , 

.DLL命令 ShellExecute, 空白型, "", "ShellExecuteA", , 
    .参数 hwnd, 空白型, , 
    .参数 lpOperation, 文本型, , 
    .参数 lpFile, 文本型, , 
    .参数 lpParameters, 空白型, , 空字符串
    .参数 lpDirectory, 空白型, , 空字符串
    .参数 nShowCmd, 空白型, , 

.DLL命令 模拟键盘, 整数型, "", "keybd_event", , 
    .参数 虚拟键码, 字节型, , 
    .参数 扫描码, 字节型, , 
    .参数 松开或按下, 短整数型, , 
    .参数 dwExtraInfo, 整数型, , 

.DLL命令 GetWindowWord, 整数型, "", "GetWindowWord", , 
    .参数 hwnd, 空白型, , 
    .参数 nIndex, 空白型, , 

.DLL命令 选择颜色, 整数型, "comdlg32.dll", "ChooseColorA", , 
    .参数 pChoosecolor, 颜色结构, 传址, 

.DLL命令 载入图标, 整数型, "", "LoadIconA", , 
    .参数 hInstance, 整数型, , 
    .参数 lpIconName, 整数型, , 

.DLL命令 系统关于窗口, 空白型, "", "ShellAboutA", , 
    .参数 hwnd, 整数型, , 
    .参数 szApp, 文本型, , 
    .参数 szOtherStuff, 文本型, , 
    .参数 hIcon, 整数型, , 

.DLL命令 取出指定文件时间, 整数型, "kernel32", "GetFileTime", , 非0表示成功
    .参数 文件号, 整数型, , 
    .参数 创建时间, 文件时间, , UTC格式的文件时间，下同
    .参数 访问时间, 文件时间, , 
    .参数 修改时间, 文件时间, , 

.DLL命令 打开或创建文件, 整数型, "kernel32", "CreateFileA", , 返回文件号，非0表示成功
    .参数 文件名, 文本型, , 
    .参数 打开方式, 整数型, , 
    .参数 共亨方式, 整数型, , 
    .参数 安全特性, 整数型, , 0
    .参数 创建还是打开, 整数型, , 
    .参数 文件属性, 整数型, , 0
    .参数 指定句柄, 整数型, , 0

.DLL命令 关闭文件对象, 整数型, "", "CloseHandle", , 非0表示成功
    .参数 文件名柄, 整数型, , 

.DLL命令 本地时间转换为系统时间, 整数型, "kernel32", "FileTimeToSystemTime", , 把本地格式的文件时间转换为系统时间，非0表示成功
    .参数 文件时间, 文件时间, , 本地格式的文件时间
    .参数 系统时间, 系统时间, , 

.DLL命令 文件时间转换为本地时间, 整数型, "kernel32", "FileTimeToLocalFileTime", , 把UTC格式的文件时间转换为本地格式的文件时间，非0表示成功
    .参数 文件时间, 文件时间, , UTC格式的文件时间
    .参数 本地时间, 文件时间, , 本地格式的文件时间

.DLL命令 系统时间转换为本地时间, 整数型, "kernel32", "SystemTimeToFileTime", , 把系统时间转换为本地格式的文件时间，非0表示成功
    .参数 系统时间, 系统时间, , 
    .参数 文件时间, 文件时间, , 本地格式的文件时间

.DLL命令 设置指定文件时间, 整数型, "kernel32", "SetFileTime", , 非0表示成功。
    .参数 文件号, 整数型, , 
    .参数 创建时间, 文件时间, , 本地格式的文件时间，下同
    .参数 访问时间, 文件时间, , 
    .参数 修改时间, 文件时间, , 

.DLL命令 本地时间转换为文件时间, 整数型, "kernel32", "LocalFileTimeToFileTime", , 把本地格式的文件时间转换为UTC格式的文件时间，非0表示成功
    .参数 本地时间, 文件时间, , 本地格式的文件时间
    .参数 文件时间, 文件时间, , UTC格式的文件时间

.DLL命令 取操作系统目录, 整数型, "kernel32.dll", "GetWindowsDirectoryA", , 
    .参数 操作系统目录, 文本型, , 
    .参数 目录长度, 整数型, , 

.DLL命令 显示窗口, 整数型, "", "ShowWindow", , 
    .参数 hwnd, 整数型, , 
    .参数 fEnable, 整数型, , 

.窗口程序集 窗口程序集1, , , 

.程序集变量 目录, 文本型, , , 
.程序集变量 文件, 文本型, , , 
.程序集变量 查找句柄, 整数型, , , 
.子程序 _主窗口_创建完毕, 空白型, , 以下为主窗口事件子程序，共三个
.局部变量 左, 整数型, , , 
.局部变量 顶, 整数型, , , 
.局部变量 宽, 整数型, , , 
.局部变量 高, 整数型, , , 
.局部变量 分隔位置, 整数型, , , 
.局部变量 索引, 整数型, , , 
.局部变量 句柄, 整数型, , , 
.局部变量 文件个数, 整数型, , , 

赋值 (., 相减 (相加 (., 412), 取用户区高度 ()))
0.置文本 (相加 (“当前用户：”, 当前用户))

.加入项目 (相加 (.驱动器, “:”), 2, , ) ' 资源管理器初始化
搜寻一层目录 (相加 (.驱动器, “:\”), 0)
0.扩展 ()

赋值 (左, 到数值 (读加密配置项 (子文本替换 (相加 (取运行目录 (), “\data\sysdata.efm”), “\\”, “\”, , , 真), #版本信息, 当前用户, “左边”, )))
赋值 (顶, 到数值 (读加密配置项 (子文本替换 (相加 (取运行目录 (), “\data\sysdata.efm”), “\\”, “\”, , , 真), #版本信息, 当前用户, “顶边”, )))
赋值 (宽, 到数值 (读加密配置项 (子文本替换 (相加 (取运行目录 (), “\data\sysdata.efm”), “\\”, “\”, , , 真), #版本信息, 当前用户, “宽度”, )))
赋值 (高, 到数值 (读加密配置项 (子文本替换 (相加 (取运行目录 (), “\data\sysdata.efm”), “\\”, “\”, , , 真), #版本信息, 当前用户, “高度”, )))
.如果真 (并且 (不等于 (宽, 0), 不等于 (高, 0)))
    主窗口.移动 (左, 顶, 宽, 高) ' 移动窗口位置
.如果真结束

赋值 (.选中, 等于 (读加密配置项 (子文本替换 (相加 (取运行目录 (), “\data\sysdata.efm”), “\\”, “\”, , , 真), #版本信息, 当前用户, “平铺”, “假”), “真”)) ' 是否横向平铺显示
赋值 (.选中, 取反 (.选中))

赋值 (.选中, 等于 (读加密配置项 (子文本替换 (相加 (取运行目录 (), “\data\sysdata.efm”), “\\”, “\”, , , 真), #版本信息, 当前用户, “信息”, “真”), “jia”)) ' 是否显示文件信息栏
_显示信息栏_被选择 ()
.如果 (.选中)
    _横向平铺_被选择 ()
.否则
    _纵向平铺_被选择 ()
.如果结束

赋值 (.选中, 等于 (读加密配置项 (子文本替换 (相加 (取运行目录 (), “\data\sysdata.efm”), “\\”, “\”, , , 真), #版本信息, 当前用户, “运行”, “真”), “真”)) ' 设置双击打开文件还是编辑文件信息
赋值 (.选中, 取反 (.选中))

赋值 (., 到数值 (读加密配置项 (子文本替换 (相加 (取运行目录 (), “\data\sysdata.efm”), “\\”, “\”, , , 真), #版本信息, 当前用户, “显示1”, “0”))) ' 超级列表框显示方式
赋值 (., 到数值 (读加密配置项 (子文本替换 (相加 (取运行目录 (), “\data\sysdata.efm”), “\\”, “\”, , , 真), #版本信息, 当前用户, “显示2”, “0”)))

连续赋值 (到数值 (读加密配置项 (子文本替换 (相加 (取运行目录 (), “\data\sysdata.efm”), “\\”, “\”, , , 真), #版本信息, 当前用户, “文字”, 到文本 (#黑色))), ., ., .文本颜色) ' 超级列表框文字及背景颜色
连续赋值 (到数值 (读加密配置项 (子文本替换 (相加 (取运行目录 (), “\data\sysdata.efm”), “\\”, “\”, , , 真), #版本信息, 当前用户, “背景”, 到文本 (#白色))), ., ., .背景颜色, ., .)

赋值 (.选中, 等于 (读加密配置项 (子文本替换 (相加 (取运行目录 (), “\data\sysdata.efm”), “\\”, “\”, , , 真), #版本信息, 当前用户, “最前”, “假”), “真”)) ' 窗口是否总在最前面
赋值 (主窗口., .选中)

赋值 (.选中, 等于 (读加密配置项 (子文本替换 (相加 (取运行目录 (), “\data\sysdata.efm”), “\\”, “\”, , , 真), #版本信息, 当前用户, “右键”, “真”), “真”)) ' 是否关联到右键菜单
.如果真 (.选中)
    写注册项 (1, “*\shell\添加到易用文件管理大师(&EFM)\command\”, 子文本替换 (相加 (#引号, 取运行目录 (), “\”, 取执行文件名 (), #引号, “ ”, #引号, “%1”, #引号), “\\”, “\”, , , 真))
    写注册项 (1, “Folder\shell\添加到易用文件管理大师(&EFM)\command\”, 子文本替换 (相加 (#引号, 取运行目录 (), “\”, 取执行文件名 (), #引号, “ ”, #引号, “%1”, #引号), “\\”, “\”, , , 真))
.如果真结束

赋值 (分隔位置, 到数值 (读加密配置项 (子文本替换 (相加 (取运行目录 (), “\data\sysdata.efm”), “\\”, “\”, , , 真), #版本信息, 当前用户, “分栏”, ))) ' 分隔条3的位置
.如果真 (不等于 (分隔位置, 0))
    _分隔条3_被拖动 (100, 分隔位置)
.如果真结束
.如果真 (等于 (文件是否存在 (子文本替换 (相加 (取运行目录 (), “\data\”, 用户目录, “filedata.efm”), “\\”, “\”, , , 真)), 假))
    写到文件 (子文本替换 (相加 (取运行目录 (), “\data\”, 用户目录, “filedata.efm”), “\\”, “\”, , , 真), #初始信息)
.如果真结束
子文本替换 (相加 (取运行目录 (), “\data\”, 用户目录, “filedata.efm”), “\\”, “\”, , , 真).打开MDB数据库 () ' 读取分类列表
读取列表 ()

赋值 (.现行子夹, 到数值 (读加密配置项 (子文本替换 (相加 (取运行目录 (), “\data\sysdata.efm”), “\\”, “\”, , , 真), #版本信息, 当前用户, “项目”, “0”))) ' 选择夹当前项目
_选择夹1_子夹被改变 ()

未知支持库函数_8 (取窗口句柄 (), 取窗口句柄 ())

赋值 (.最大化按钮, 0)
_树型框1_项目被选择 (2)

写加密配置项 (子文本替换 (相加 (取运行目录 (), “\data\sysdata.efm”), “\\”, “\”, , , 真), #版本信息, “默认用户”, “接收句柄”, 到文本 (取窗口句柄 ())) ' 记录编辑框2句柄，以便程序间通讯。

.如果真 (不等于 (文件全名, “”)) ' 以下为响应右键关联事件
    赋值 (文件编号, 0)
    赋值 (现行分类, .最大化按钮)
    赋值 (主窗口., 假)
    载入 (文件信息窗口, , 真)
    赋值 (主窗口., .选中)
    赋值 (文件全名, “”)
    .如果 (等于 (操作, 4))
        .如果真 (等于 (信息框 (“添加文件信息完成，要打开主程序吗？”, 相加 (#询问图标, #是否钮, #默认按钮一), ), #否钮))
            销毁 ()
            结束 ()
        .如果真结束
        .如果 (不等于 (现行分类, .最大化按钮))
            赋值 (.最大化按钮, 现行分类)
            _树型框1_项目被选择 (2)
        .否则
            加入文件 ()
        .如果结束
        赋值 (句柄, 相加 (“select * from wjfl where 编号='”, 现行分类编码, “'”).查询 ())
        赋值 (文件个数, 句柄.读 (4))
        句柄.关闭记录集 ()
        .如果真 (等于 (文件个数, 1))
            .置图片 (.最大化按钮, 相加 (.取图片 (.最大化按钮), 1))
            .置选中图片 (.最大化按钮, 相加 (.取选中图片 (.最大化按钮), 1))
        .如果真结束
        
    .否则
        销毁 ()
        结束 ()
    .如果结束
    
.如果真结束
赋值 (., 真)
.如果真 (等于 (读加密配置项 (子文本替换 (相加 (取运行目录 (), “\data\sysdata.efm”), “\\”, “\”, , , 真), #版本信息, 当前用户, “提醒”, “假”), “真”))
    提醒 ()
.如果真结束


.子程序 提醒, 空白型, , 
.局部变量 提醒大小, 小数型, , , 
.局部变量 现有大小, 小数型, , , 
.局部变量 句柄, 整数型, , , 

赋值 (提醒大小, 到数值 (读加密配置项 (子文本替换 (相加 (取运行目录 (), “\data\sysdata.efm”), “\\”, “\”, , , 真), #版本信息, 当前用户, “大小”, “640”)))
赋值 (句柄, “select sum(文件大小) as H from wjxx”.查询 ())
赋值 (现有大小, 四舍五入 (相除 (句柄.读 (“H”), 1024), 2))
句柄.关闭记录集 ()
.如果真 (大于 (现有大小, 提醒大小))
    信息框 (相加 (“现有文件分类信息所对应的文件大小已经有 ”, 到文本 (现有大小), “ M，建议你马上进行刻盘整理！”), #信息图标, “刻盘提醒”)
.如果真结束


.子程序 _主窗口_尺寸被改变, 空白型, , 
赋值 (.高度, 相减 (取用户区高度 (), 53))
赋值 (.高度, 相减 (.高度, 29))
赋值 (.高度, 相减 (.高度, 52))
赋值 (., 相减 (取用户区高度 (), 53))
赋值 (., 相加 (取用户区宽度 (), 2))
赋值 (., 相加 (取用户区宽度 (), 2))
赋值 (.宽度, 相减 (取用户区宽度 (), .左边))
.如果 (.选中)
    赋值 (.删除线, 相减 (取用户区高度 (), .加粗, 21))
    赋值 (., .删除线)
    赋值 (.顶边, .加粗)
    赋值 (.高度, .删除线)
    赋值 (.倾斜, 相减 (取整 (相乘 (相除 (相减 (取用户区宽度 (), .角度), 5), 3)), 4))
    赋值 (., 相加 (.角度, .倾斜, 2))
    赋值 (.左边, 相加 (., 4))
    赋值 (.宽度, 相减 (取用户区宽度 (), .左边, 1))
    .如果真 (等于 (.选中, 假))
        赋值 (.倾斜, 相减 (取用户区宽度 (), .角度, 1))
    .如果真结束
    
.否则
    赋值 (.倾斜, 相减 (取用户区宽度 (), .角度, 2))
    赋值 (., .倾斜)
    赋值 (.左边, .角度)
    赋值 (.宽度, .倾斜)
    赋值 (.删除线, 相减 (取整 (相乘 (相除 (相减 (取用户区高度 (), .加粗), 5), 3)), 24))
    赋值 (., 相加 (.加粗, .删除线, 1))
    赋值 (.顶边, 相加 (., 4))
    赋值 (.高度, 相减 (取用户区高度 (), .顶边, 20))
    .如果真 (等于 (.选中, 假))
        赋值 (.删除线, 相减 (取用户区高度 (), .加粗, 21))
    .如果真结束
    
.如果结束
赋值 (.倾斜, 相减 (取用户区宽度 (), .角度))
赋值 (.删除线, 相减 (取用户区高度 (), .加粗, 20))
1.置宽度 (相减 (取用户区宽度 (), 280))
重画 ()
重画 ()

.子程序 _主窗口_将被销毁, 空白型, , 
.局部变量 备份目录, 文本型, , , 

写加密配置项 (子文本替换 (相加 (取运行目录 (), “\data\sysdata.efm”), “\\”, “\”, , , 真), #版本信息, “默认用户”, “接收句柄”, “0”) ' 记录位置
写加密配置项 (子文本替换 (相加 (取运行目录 (), “\data\sysdata.efm”), “\\”, “\”, , , 真), #版本信息, 当前用户, “左边”, 到文本 (主窗口.)) ' 记录位置
写加密配置项 (子文本替换 (相加 (取运行目录 (), “\data\sysdata.efm”), “\\”, “\”, , , 真), #版本信息, 当前用户, “顶边”, 到文本 (主窗口.))
写加密配置项 (子文本替换 (相加 (取运行目录 (), “\data\sysdata.efm”), “\\”, “\”, , , 真), #版本信息, 当前用户, “宽度”, 到文本 (主窗口.))
写加密配置项 (子文本替换 (相加 (取运行目录 (), “\data\sysdata.efm”), “\\”, “\”, , , 真), #版本信息, 当前用户, “高度”, 到文本 (主窗口.))
写加密配置项 (子文本替换 (相加 (取运行目录 (), “\data\sysdata.efm”), “\\”, “\”, , , 真), #版本信息, 当前用户, “平铺”, 到文本 (.选中)) ' 是否横向平铺显示。真，横向平铺；假，纵向平铺
写加密配置项 (子文本替换 (相加 (取运行目录 (), “\data\sysdata.efm”), “\\”, “\”, , , 真), #版本信息, 当前用户, “分栏”, 到文本 (.)) ' 分隔条3的位置
写加密配置项 (子文本替换 (相加 (取运行目录 (), “\data\sysdata.efm”), “\\”, “\”, , , 真), #版本信息, 当前用户, “项目”, 到文本 (.现行子夹)) ' 选择夹当前项目
写加密配置项 (子文本替换 (相加 (取运行目录 (), “\data\sysdata.efm”), “\\”, “\”, , , 真), #版本信息, 当前用户, “显示1”, 到文本 (.)) ' 超级列表框1及超级列表框2的显示方式
写加密配置项 (子文本替换 (相加 (取运行目录 (), “\data\sysdata.efm”), “\\”, “\”, , , 真), #版本信息, 当前用户, “显示2”, 到文本 (.))
写加密配置项 (子文本替换 (相加 (取运行目录 (), “\data\sysdata.efm”), “\\”, “\”, , , 真), #版本信息, 当前用户, “信息”, 到文本 (.选中)) ' 是否显示文件信息栏
写加密配置项 (子文本替换 (相加 (取运行目录 (), “\data\sysdata.efm”), “\\”, “\”, , , 真), #版本信息, 当前用户, “文字”, 到文本 (.)) ' 超级列表框文字及背景颜色
写加密配置项 (子文本替换 (相加 (取运行目录 (), “\data\sysdata.efm”), “\\”, “\”, , , 真), #版本信息, 当前用户, “背景”, 到文本 (.))
写加密配置项 (子文本替换 (相加 (取运行目录 (), “\data\sysdata.efm”), “\\”, “\”, , , 真), #版本信息, 当前用户, “运行”, 到文本 (.选中)) ' 打开文件还是编辑文件信息
写加密配置项 (子文本替换 (相加 (取运行目录 (), “\data\sysdata.efm”), “\\”, “\”, , , 真), #版本信息, 当前用户, “最前”, 到文本 (.选中)) ' 窗口是否总在最前面
写加密配置项 (子文本替换 (相加 (取运行目录 (), “\data\sysdata.efm”), “\\”, “\”, , , 真), #版本信息, 当前用户, “右键”, 到文本 (.选中)) ' 是否关联到右键菜单
关闭 ()
赋值 (主窗口., 假)
.如果真 (等于 (读加密配置项 (子文本替换 (相加 (取运行目录 (), “\data\sysdata.efm”), “\\”, “\”, , , 真), #版本信息, 当前用户, “自动备份”, “假”), “真”))
    赋值 (备份目录, 读加密配置项 (子文本替换 (相加 (取运行目录 (), “\data\sysdata.efm”), “\\”, “\”, , , 真), #版本信息, 当前用户, “备份目录”, “”))
    .如果 (等于 (寻找文件 (备份目录, 16), “”))
        信息框 (“你所设置的备份目录不存在，系统自动备份失败！请在下次运行后重新设置有效的数据备份目录！”, #错误图标, “数据备份失败”)
    .否则
        .如果真 (不等于 (子文本替换 (相加 (取运行目录 (), “\data”), “\\”, “\”, , , 真).未知支持库函数_0 (相加 (备份目录, “\autoefm.efk”)), 1))
            信息框 (“自动备份用户数据失败！请及时检查你的系统及程序备份设置是否正确。”, #错误图标, “数据备份失败”)
        .如果真结束
        
    .如果结束
    
.如果真结束


.子程序 _切换当前用户_被选择, 空白型, , 以下为菜单事件
.局部变量 当前用户目录, 文本型, , , 

赋值 (当前用户目录, 用户目录)
赋值 (主窗口., 假)
载入 (登录窗口, , 真)
赋值 (主窗口., .选中)
.如果真 (不等于 (当前用户目录, 用户目录))
    关闭 ()
    .如果真 (等于 (文件是否存在 (子文本替换 (相加 (取运行目录 (), “\data\”, 用户目录, “filedata.efm”), “\\”, “\”, , , 真)), 假))
        写到文件 (子文本替换 (相加 (取运行目录 (), “\data\”, 用户目录, “filedata.efm”), “\\”, “\”, , , 真), #初始信息)
    .如果真结束
    子文本替换 (相加 (取运行目录 (), “\data\”, 用户目录, “filedata.efm”), “\\”, “\”, , , 真).打开MDB数据库 ()
    读取列表 ()
    赋值 (.最大化按钮, 0)
    _树型框1_项目被选择 (2)
.如果真结束
0.置文本 (相加 (“当前用户：”, 当前用户))

.子程序 _添加用户_被选择, 空白型, , 
赋值 (主窗口., 假)
载入 (添加用户窗口, , 真)
赋值 (主窗口., .选中)

.子程序 _修改口令_被选择, 空白型, , 
.如果真 (等于 (当前用户, “默认用户”))
    返回 ()
.如果真结束
赋值 (主窗口., 假)
载入 (修改口令窗口, , 真)
赋值 (主窗口., .选中)

.子程序 _删除用户_被选择, 空白型, , 
赋值 (主窗口., 假)
载入 (删除用户窗口, , 真)
赋值 (主窗口., .选中)

.子程序 _退出_被选择, 空白型, , 
销毁 ()
结束 ()

.子程序 _添加文件夹_被选择, 空白型, , 
.局部变量 文件个数, 整数型, , , 
.局部变量 句柄, 整数型, , , 

.如果真 (等于 (.现行子夹, 1))
    .如果真 (等于 (., -1))
        信息框 (“请先选择要加入到文件分类的文件或文件夹！”, #信息图标, )
        返回 ()
    .如果真结束
    _添加到分类_被选择 ()
    返回 ()
.如果真结束
.如果真 (并且 (等于 (.最大化按钮, 相减 (取项目数 (), 1)), 等于 (.取项目文本 (.最大化按钮), “查找结果”)))
    赋值 (.最大化按钮, 0)
    _树型框1_项目被选择 (2)
.如果真结束
赋值 (操作, 1)
赋值 (现行分类, .最大化按钮)
赋值 (主窗口., 假)
载入 (文件信息窗口, , 真)
赋值 (主窗口., .选中)
.如果真 (等于 (操作, 4))
    .如果 (不等于 (现行分类, .最大化按钮))
        赋值 (.最大化按钮, 现行分类)
        _树型框1_项目被选择 (2)
    .否则
        加入文件 ()
    .如果结束
    赋值 (句柄, 相加 (“select * from wjfl where 编号='”, 现行分类编码, “'”).查询 ())
    赋值 (文件个数, 句柄.读 (4))
    句柄.关闭记录集 ()
    .如果真 (等于 (文件个数, 1))
        .置图片 (.最大化按钮, 相加 (.取图片 (.最大化按钮), 1))
        .置选中图片 (.最大化按钮, 相加 (.取选中图片 (.最大化按钮), 1))
    .如果真结束
    .如果真 (等于 (读加密配置项 (子文本替换 (相加 (取运行目录 (), “\data\sysdata.efm”), “\\”, “\”, , , 真), #版本信息, 当前用户, “提醒”, “假”), “真”))
        提醒 ()
    .如果真结束
    
.如果真结束


.子程序 _删除文件夹_被选择, 空白型, , 
.局部变量 变量1, 整数型, , , 
.局部变量 文件索引, 整数型, , , 
.局部变量 句柄, 整数型, , , 
.局部变量 文件个数, 整数型, , , 

.如果 (等于 (.现行子夹, 0))
    .如果真 (等于 (., -1))
        赋值 (主窗口., 假)
        信息框 (“请先选择要删除的文件或文件夹！”, #信息图标, “删除文件”)
        赋值 (主窗口., .选中)
        返回 ()
    .如果真结束
    赋值 (主窗口., 假)
    .如果真 (等于 (信息框 (“你确定要删除当前选择的文件信息吗？”, 相加 (#询问图标, #是否钮, #默认按钮二), “删除文件”), #否钮))
        赋值 (主窗口., .选中)
        返回 ()
    .如果真结束
    赋值 (主窗口., .选中)
    赋值 (文件索引, .取表项数值 (.))
    相加 (“DELETE from wjxx where 分类编码='”, 现行分类编码, “' and 文件编号=”, 到文本 (文件索引)).执行 ()
    赋值 (句柄, 相加 (“select * from wjfl where 编号='”, 现行分类编码, “'”).查询 ())
    赋值 (文件个数, 句柄.读 (4))
    句柄.关闭记录集 ()
    相加 (“update wjfl set 数目=”, 到文本 (相减 (文件个数, 1)), “ where 编号='”, 现行分类编码, “'”).执行 ()
    .删除表项 (.)
    .如果 (等于 (取表项数 (), 0))
        赋值 (.内容, “”)
    .否则
        赋值 (., 0)
        _超级列表框1_当前表项被改变 ()
    .如果结束
    重画 ()
    .如果真 (等于 (文件个数, 1))
        .置图片 (.最大化按钮, 相减 (.取图片 (.最大化按钮), 1))
        .置选中图片 (.最大化按钮, 相减 (.取选中图片 (.最大化按钮), 1))
    .如果真结束
    
.否则
    清除数组 (剪贴板文件)
    .计次循环首 (取表项数 (), 变量1)
        .如果真 (相减 (变量1, 1).是否被选择 ())
            加入成员 (剪贴板文件, 相加 (目录, 相减 (变量1, 1).取标题 ()))
        .如果真结束
        
    .计次循环尾 ()
    未知支持库函数_3 (剪贴板文件)
    搜寻并填充文件 (目录)
    清除数组 (剪贴板文件)
.如果结束


.子程序 _修改文件属性_被选择, 空白型, , 
.局部变量 文件索引, 整数型, , , 
.局部变量 句柄, 整数型, , , 

.如果 (等于 (.现行子夹, 0))
    .如果真 (等于 (., -1))
        赋值 (主窗口., 假)
        信息框 (“请先选择修改属性的文件或文件夹！”, #信息图标, “删除文件”)
        赋值 (主窗口., .选中)
        返回 ()
    .如果真结束
    赋值 (文件索引, .取表项数值 (.))
    .如果 (并且 (等于 (.最大化按钮, 相减 (取项目数 (), 1)), 等于 (.取项目文本 (.最大化按钮), “查找结果”)))
        查找句柄.到首记录 ()
        .判断循环首 (等于 (查找句柄.尾记录后 (), 假))
            .如果真 (并且 (等于 (查找句柄.读 (3), .取标题 (., 0)), 等于 (查找句柄.读 (2), .取表项数值 (.))))
                跳出循环 ()
            .如果真结束
            查找句柄.到后一记录 ()
        .判断循环尾 ()
        赋值 (文件全名, 查找句柄.读 (4))
    .否则
        赋值 (句柄, 相加 (“select * from wjxx where 分类编码='”, 现行分类编码, “' and 文件编号=”, 到文本 (文件索引)).查询 ())
        句柄.到首记录 ()
        赋值 (文件全名, 句柄.读 (4))
        句柄.关闭记录集 ()
    .如果结束
    .如果真 (并且 (等于 (取文件属性 (文件全名), -1), 等于 (文件是否存在 (文件全名), 假)))
        赋值 (主窗口., 假)
        信息框 (“所选文件失去关联，可能文件已经被移动或删除！请修改文件信息以重新定位。”, #信息图标, )
        赋值 (主窗口., .选中)
        返回 ()
    .如果真结束
    赋值 (主窗口., 假)
    赋值 (操作, 2)
    载入 (文件属性窗口, , 真)
    赋值 (主窗口., .选中)
    赋值 (文件全名, “”)
.否则
    .如果真 (等于 (., -1))
        信息框 (“请选择要查看属性的文件或文件夹！”, #信息图标, )
        返回 ()
    .如果真结束
    _查看属性_被选择 ()
.如果结束


.子程序 _修改文件信息_被选择, 空白型, , 
赋值 (.现行子夹, 0)
.如果真 (等于 (., -1))
    赋值 (主窗口., 假)
    信息框 (“请先选择要修改信息的文件或文件夹！”, #信息图标, “修改文件信息”)
    赋值 (主窗口., .选中)
    返回 ()
.如果真结束
.如果真 (并且 (等于 (.最大化按钮, 相减 (取项目数 (), 1)), 等于 (.取项目文本 (.最大化按钮), “查找结果”)))
    信息框 (“请转到文件所在分类，再执行修改文件信息操作。”, #信息图标, )
    返回 ()
.如果真结束
赋值 (操作, 2)
赋值 (主窗口., 假)
载入 (文件信息窗口, , 真)
赋值 (主窗口., .选中)
.如果真 (等于 (操作, 4))
    .如果 (不等于 (现行分类, .最大化按钮))
        赋值 (.最大化按钮, 现行分类)
        _树型框1_项目被选择 (2)
    .否则
        _超级列表框1_当前表项被改变 ()
    .如果结束
    
.如果真结束


.子程序 _执行文件_被选择, 空白型, , 
.局部变量 选中项目录, 文本型, , , 
.局部变量 文件索引, 整数型, , , 
.局部变量 句柄, 整数型, , , 
.局部变量 文件名, 文本型, , , 

.如果 (等于 (.现行子夹, 0))
    .如果真 (等于 (., -1))
        赋值 (主窗口., 假)
        信息框 (“请先选择要打开的文件或文件夹！”, #信息图标, )
        赋值 (主窗口., .选中)
        返回 ()
    .如果真结束
    .如果 (并且 (等于 (.最大化按钮, 相减 (取项目数 (), 1)), 等于 (.取项目文本 (.最大化按钮), “查找结果”)))
        查找句柄.到首记录 ()
        .判断循环首 (等于 (查找句柄.尾记录后 (), 假))
            .如果真 (并且 (等于 (查找句柄.读 (3), .取标题 (., 0)), 等于 (查找句柄.读 (2), .取表项数值 (.))))
                跳出循环 ()
            .如果真结束
            查找句柄.到后一记录 ()
        .判断循环尾 ()
        赋值 (文件名, 查找句柄.读 (4))
    .否则
        赋值 (文件索引, .取表项数值 (.))
        赋值 (句柄, 相加 (“select * from wjxx where 分类编码='”, 现行分类编码, “' and 文件编号=”, 到文本 (文件索引)).查询 ())
        句柄.到首记录 ()
        赋值 (文件名, 句柄.读 (4))
        句柄.关闭记录集 ()
    .如果结束
    .如果真 (并且 (等于 (取文件属性 (文件名), -1), 等于 (文件是否存在 (文件名), 假)))
        赋值 (主窗口., 假)
        信息框 (“所选文件失去关联，可能文件已经被移动或删除！请修改文件信息以重新定位。”, #信息图标, )
        赋值 (主窗口., .选中)
        返回 ()
    .如果真结束
    .如果 (不等于 (位与 (取文件属性 (文件名), 16), 0))
        未知支持库函数_6 (文件名, , )
    .否则
        赋值 (选中项目录, 取文本左边 (文件名, 相减 (倒找文本 (文件名, “\”, , 假), 1)))
        未知支持库函数_6 (文件名, , 选中项目录)
    .如果结束
    
.否则
    .如果真 (等于 (., -1))
        赋值 (主窗口., 假)
        信息框 (“请先选择要执行的文件或文件夹！”, #信息图标, )
        赋值 (主窗口., .选中)
        返回 ()
    .如果真结束
    _打开_被选择 ()
.如果结束


.子程序 _查找文件_被选择, 空白型, , 
.如果 (等于 (.现行子夹, 0))
    .如果真 (等于 (相减 (取项目数 (), 1).取项目文本 (), “查找结果”))
        赋值 (主窗口., 假)
        .如果真 (等于 (信息框 (“要清除当前查找结果，开始新的查找吗？”, 相加 (#询问图标, #是否钮), “查找分类文件”), #否钮))
            赋值 (主窗口., .选中)
            返回 ()
        .如果真结束
        赋值 (主窗口., .选中)
        .如果真 (等于 (.最大化按钮, 相减 (取项目数 (), 1)))
            赋值 (.最大化按钮, 0)
        .如果真结束
        相减 (取项目数 (), 1).删除项目 ()
        查找句柄.关闭记录集 ()
    .如果真结束
    赋值 (查找句柄, 0)
    赋值 (主窗口., 假)
    载入 (查找分类文件窗口, , 真)
    赋值 (主窗口., .选中)
    .如果真 (不等于 (查找句柄, 0))
        .加入项目 (“查找结果”, 4, 4, )
        赋值 (.最大化按钮, 相减 (取项目数 (), 1))
        显示找到文件 ()
    .如果真结束
    
.否则
    ShellExecute (0, “find”, 目录, 0, 0, 5)
.如果结束


.子程序 _添加同级类别_被选择, 空白型, , 
.局部变量 索引, 整数型, , , 
.局部变量 循环变量, 整数型, , , 
.局部变量 编号, 整数型, , "0", 
.局部变量 项目名称, 文本型, , , 

.如果真 (不等于 (.现行子夹, 0))
    赋值 (.现行子夹, 0)
    _选择夹1_子夹被改变 ()
.如果真结束
.如果真 (等于 (相减 (取项目数 (), 1).取项目文本 (), “查找结果”))
    赋值 (主窗口., 假)
    .如果真 (等于 (信息框 (“要删除当前查找结果并添加新的分类吗？”, 相加 (#询问图标, #是否钮), ), #否钮))
        赋值 (主窗口., .选中)
        返回 ()
    .如果真结束
    .如果真 (等于 (.最大化按钮, 相减 (取项目数 (), 1)))
        赋值 (.最大化按钮, 0)
    .如果真结束
    赋值 (主窗口., .选中)
    相减 (取项目数 (), 1).删除项目 ()
.如果真结束
赋值 (索引, .取父项目 (.最大化按钮))
.如果 (等于 (索引, -1))
    .计次循环首 (取项目数 (), 循环变量)
        .如果真 (等于 (相减 (循环变量, 1).取缩进层次 (), 1))
            加入成员 (编号, 相减 (循环变量, 1).取项目数值 ())
        .如果真结束
        
    .计次循环尾 ()
.否则
    赋值 (循环变量, 相加 (索引, 1))
    .判断循环首 (大于 (循环变量.取缩进层次 (), 索引.取缩进层次 ()))
        .如果真 (等于 (循环变量.取缩进层次 (), 相加 (索引.取缩进层次 (), 1)))
            加入成员 (编号, 循环变量.取项目数值 ())
        .如果真结束
        赋值 (循环变量, 相加 (循环变量, 1))
    .判断循环尾 ()
.如果结束
数组排序 (编号, )
赋值 (循环变量, 1)
.计次循环首 (取数组成员数 (编号), 循环变量)
    .如果真 (不等于 (编号 [循环变量], 循环变量))
        跳出循环 ()
    .如果真结束
    
.计次循环尾 ()
赋值 (项目名称, 取文本右边 (相加 (“0”, 到文本 (循环变量)), 2))
.判断循环首 (不等于 (索引, -1))
    赋值 (项目名称, 相加 (取文本右边 (相加 (“0”, 到文本 (索引.取项目数值 ())), 2), 项目名称))
    赋值 (索引, 索引.取父项目 ())
.判断循环尾 ()
相加 (“INSERT INTO wjfl (层次,编号,名称,数目) values (”, 到文本 (.取缩进层次 (.最大化按钮)), “,'”, 项目名称, “','新建分类',0)”).执行 ()
赋值 (索引, .取父项目 (.最大化按钮).加入项目 (“新建分类”, 2, , 循环变量))
索引.进入编辑 ()

.子程序 _添加一个子类_被选择, 空白型, , 
.局部变量 索引, 整数型, , , 
.局部变量 循环变量, 整数型, , , 
.局部变量 编号, 整数型, , "0", 
.局部变量 项目名称, 文本型, , , 

.如果真 (并且 (等于 (.最大化按钮, 相减 (取项目数 (), 1)), 等于 (.取项目文本 (.最大化按钮), “查找结果”)))
    返回 ()
.如果真结束
.如果真 (不等于 (.现行子夹, 0))
    赋值 (.现行子夹, 0)
    _选择夹1_子夹被改变 ()
.如果真结束
.如果真 (大于 (.取缩进层次 (.最大化按钮), 9))
    赋值 (主窗口., 假)
    信息框 (“为保证数据的正确有序，最多只允许为一个根级分类添加 9 级子分类。”, #信息图标, )
    赋值 (主窗口., .选中)
    返回 ()
.如果真结束
赋值 (项目名称, 取文本右边 (相加 (“0”, 到文本 (.取项目数值 (.最大化按钮))), 2))
赋值 (索引, .取父项目 (.最大化按钮))
.判断循环首 (不等于 (索引, -1))
    赋值 (项目名称, 相加 (取文本右边 (相加 (“0”, 到文本 (索引.取项目数值 ())), 2), 项目名称))
    赋值 (索引, 索引.取父项目 ())
.判断循环尾 ()
赋值 (循环变量, 相加 (.最大化按钮, 1))
.判断循环首 (大于 (循环变量.取缩进层次 (), .取缩进层次 (.最大化按钮)))
    .如果真 (等于 (循环变量.取缩进层次 (), 相加 (.取缩进层次 (.最大化按钮), 1)))
        加入成员 (编号, 循环变量.取项目数值 ())
    .如果真结束
    赋值 (循环变量, 相加 (循环变量, 1))
.判断循环尾 ()
数组排序 (编号, )
赋值 (循环变量, 1)
.计次循环首 (取数组成员数 (编号), 循环变量)
    .如果真 (不等于 (编号 [循环变量], 循环变量))
        跳出循环 ()
    .如果真结束
    
.计次循环尾 ()
赋值 (项目名称, 相加 (项目名称, 取文本右边 (相加 (“0”, 到文本 (循环变量)), 2)))
.如果真 (大于 (.取图片 (.最大化按钮), 1))
    .置图片 (.最大化按钮, 相减 (.取图片 (.最大化按钮), 2))
    .置选中图片 (.最大化按钮, 相减 (.取选中图片 (.最大化按钮), 2))
.如果真结束
相加 (“INSERT INTO wjfl (层次,编号,名称,数目) values (”, 到文本 (相加 (.取缩进层次 (.最大化按钮), 1)), “,'”, 项目名称, “','新建分类',0)”).执行 ()
赋值 (索引, .加入项目 (.最大化按钮, “新建分类”, 2, , 循环变量))
.扩展 (.最大化按钮)
索引.进入编辑 ()

.子程序 _删除当前类别_被选择, 空白型, , 
.局部变量 项目名称, 文本型, , , 
.局部变量 索引, 整数型, , , 
.局部变量 变量1, 整数型, , , 

.如果真 (不等于 (.现行子夹, 0))
    赋值 (.现行子夹, 0)
    _选择夹1_子夹被改变 ()
.如果真结束
.如果真 (并且 (等于 (.最大化按钮, 相减 (取项目数 (), 1)), 等于 (.取项目文本 (.最大化按钮), “查找结果”)))
    赋值 (主窗口., 假)
    .如果真 (等于 (信息框 (“真的要删除当前查找结果吗？”, 相加 (#询问图标, #是否钮), ), #否钮))
        赋值 (主窗口., .选中)
        返回 ()
    .如果真结束
    赋值 (主窗口., .选中)
    查找句柄.关闭记录集 ()
    赋值 (查找句柄, 0)
    .删除项目 (.最大化按钮)
    赋值 (.最大化按钮, 0)
    返回 ()
.如果真结束
.如果真 (.是否有子项目 (.最大化按钮))
    赋值 (主窗口., 假)
    .如果真 (等于 (信息框 (相加 (“当前选中的分类”, #左引号, .取项目文本 (.最大化按钮), #右引号, “下还有子分类。”, #换行符, “删除该分类将同时删除其下属的所有子分类，你确定要删除该分类吗？”), 相加 (#警告图标, #是否钮, #默认按钮二), “删除分类”), #否钮))
        赋值 (主窗口., .选中)
        返回 ()
    .如果真结束
    赋值 (主窗口., .选中)
.如果真结束
赋值 (主窗口., 假)
.如果真 (等于 (信息框 (“删除分类将同时删除其下属的所有文件，你确定要删除该分类吗？”, 相加 (#警告图标, #是否钮, #默认按钮二), “删除分类”), #否钮))
    赋值 (主窗口., .选中)
    返回 ()
.如果真结束
赋值 (主窗口., .选中)
赋值 (项目名称, 取文本右边 (相加 (“0”, 到文本 (.取项目数值 (.最大化按钮))), 2))
赋值 (索引, .取父项目 (.最大化按钮))
.判断循环首 (不等于 (索引, -1))
    赋值 (项目名称, 相加 (取文本右边 (相加 (“0”, 到文本 (索引.取项目数值 ())), 2), 项目名称))
    赋值 (索引, 索引.取父项目 ())
.判断循环尾 ()
相加 (“DELETE from wjfl where 编号 like '”, 项目名称, “%'”).执行 ()
相加 (“DELETE from wjxx where 分类编码 like '”, 项目名称, “%'”).执行 ()
赋值 (变量1, 相加 (.最大化按钮, 1))
.判断循环首 (大于 (变量1.取缩进层次 (), .取缩进层次 (.最大化按钮)))
    变量1.删除项目 ()
.判断循环尾 ()
赋值 (索引, .取父项目 (.最大化按钮))
.删除项目 (.最大化按钮)
.如果真 (等于 (索引.是否有子项目 (), 假))
    索引.置图片 (相加 (索引.取图片 (), 2))
    索引.置选中图片 (相加 (索引.取选中图片 (), 2))
.如果真结束


.子程序 _重命令当前分类_被选择, 空白型, , 
.如果真 (不等于 (.现行子夹, 0))
    赋值 (.现行子夹, 0)
    _选择夹1_子夹被改变 ()
.如果真结束
.进入编辑 (.最大化按钮)

.子程序 _恢复初始分类_被选择, 空白型, , 
.如果真 (不等于 (.现行子夹, 0))
    赋值 (.现行子夹, 0)
    _选择夹1_子夹被改变 ()
.如果真结束
赋值 (主窗口., 假)
.如果真 (等于 (信息框 (“恢复初始分类将丢失用户当前所有分类信息及分类下的文件信息，你确定要初始化文件分类吗？”, 相加 (#警告图标, #是否钮), ), #否钮))
    赋值 (主窗口., .选中)
    返回 ()
.如果真结束
.如果真 (等于 (信息框 (“恢复初始分类后，分类信息将无法被还原，你确定要初始化文件分类吗？”, 相加 (#警告图标, #是否钮), ), #否钮))
    赋值 (主窗口., .选中)
    返回 ()
.如果真结束
.如果真 (等于 (信息框 (“点击确定按钮将开始初始化用户文件分类，要继续吗？”, 相加 (#警告图标, #确认取消钮), ), #取消钮))
    赋值 (主窗口., .选中)
    返回 ()
.如果真结束
赋值 (主窗口., .选中)
关闭 ()
写到文件 (子文本替换 (相加 (取运行目录 (), “\data\”, 用户目录, “filedata.efm”), “\\”, “\”, , , 真), #初始信息)
子文本替换 (相加 (取运行目录 (), “\data\”, 用户目录, “filedata.efm”), “\\”, “\”, , , 真).打开MDB数据库 ()
读取列表 ()
赋值 (.最大化按钮, 0)
_树型框1_项目被选择 (0)

.子程序 _展开全部分类_被选择, 空白型, , 
.局部变量 变量1, 整数型, , , 

.如果真 (不等于 (.现行子夹, 0))
    赋值 (.现行子夹, 0)
    _选择夹1_子夹被改变 ()
.如果真结束
.计次循环首 (取项目数 (), 变量1)
    相减 (变量1, 1).扩展 ()
.计次循环尾 ()


.子程序 _收缩全部分类_被选择, 空白型, , 
.局部变量 变量1, 整数型, , , 

.如果真 (不等于 (.现行子夹, 0))
    赋值 (.现行子夹, 0)
    _选择夹1_子夹被改变 ()
.如果真结束
.计次循环首 (取项目数 (), 变量1)
    相减 (变量1, 1).收缩 ()
.计次循环尾 ()
赋值 (.最大化按钮, 0)
_树型框1_项目被选择 (2)

.子程序 _纵向平铺_被选择, 空白型, , 
赋值 (.选中, 真)
赋值 (.选中, 真)
13.加入状态 (#选中)
14.去除状态 (#选中)
赋值 (.选中, 取反 (.选中))
赋值 (.选中, .选中)
.如果 (.选中)
    赋值 (., 假)
    .如果 (.选中)
        连续赋值 (真, .可视, .)
    .否则
        连续赋值 (假, .可视, .)
    .如果结束
    
.否则
    赋值 (., 假)
    .如果 (.选中)
        连续赋值 (真, .可视, .)
    .否则
        连续赋值 (假, .可视, .)
    .如果结束
    
.如果结束
_主窗口_尺寸被改变 ()

.子程序 _横向平铺_被选择, 空白型, , 
赋值 (.选中, 真)
赋值 (.选中, 真)
14.加入状态 (#选中)
13.去除状态 (#选中)
赋值 (.选中, 取反 (.选中))
赋值 (.选中, .选中)
.如果 (.选中)
    赋值 (., 假)
    .如果 (.选中)
        连续赋值 (真, .可视, .)
    .否则
        连续赋值 (假, .可视, .)
    .如果结束
    
.否则
    赋值 (., 假)
    .如果 (.选中)
        连续赋值 (真, .可视, .)
    .否则
        连续赋值 (假, .可视, .)
    .如果结束
    
.如果结束
_主窗口_尺寸被改变 ()

.子程序 _图标方式_被选择, 空白型, , 
.如果 (等于 (.现行子夹, 0))
    .如果真 (等于 (., 0))
        返回 ()
    .如果真结束
    赋值 (.选中, 真)
    赋值 (.选中, 真)
    16.加入状态 (#选中)
    17.去除状态 (#选中)
    赋值 (.选中, 假)
    赋值 (.选中, 假)
    赋值 (., 0)
    填充分类文件 ()
    未知支持库函数_8 (取窗口句柄 (), 取窗口句柄 ())
.否则
    .如果真 (等于 (., 0))
        返回 ()
    .如果真结束
    赋值 (.选中, 真)
    赋值 (.选中, 真)
    16.加入状态 (#选中)
    17.去除状态 (#选中)
    赋值 (.选中, 真)
    赋值 (.选中, 假)
    赋值 (.选中, 假)
    赋值 (.选中, 假)
    赋值 (., 0)
    搜寻并填充文件 (目录)
.如果结束


.子程序 _列表方式_被选择, 空白型, , 
.如果 (等于 (.现行子夹, 0))
    .如果真 (等于 (., 3))
        返回 ()
    .如果真结束
    赋值 (.选中, 假)
    赋值 (.选中, 假)
    赋值 (.选中, 真)
    赋值 (.选中, 真)
    17.加入状态 (#选中)
    16.去除状态 (#选中)
    赋值 (., 3)
    填充分类文件 ()
    未知支持库函数_8 (取窗口句柄 (), 取窗口句柄 ())
.否则
    .如果真 (等于 (., 3))
        返回 ()
    .如果真结束
    赋值 (.选中, 假)
    赋值 (.选中, 假)
    赋值 (.选中, 假)
    赋值 (.选中, 真)
    赋值 (.选中, 真)
    赋值 (.选中, 真)
    17.加入状态 (#选中)
    16.去除状态 (#选中)
    赋值 (., 3)
    搜寻并填充文件 (目录)
.如果结束


.子程序 _文字颜色_被选择, 空白型, , 
.局部变量 颜色, 颜色结构, , , 
.局部变量 返回值, 整数型, , , 

赋值 (颜色.lStructSize, 36)
赋值 (颜色.hwndOwner, 主窗口.取窗口句柄 ())
赋值 (颜色.hInstance, GetWindowWord (主窗口.取窗口句柄 (), -6))
赋值 (颜色.flags, 0)
赋值 (颜色.lpCustColors, 取空白文本 (相乘 (16, 4)))
赋值 (返回值, 选择颜色 (颜色))
.如果真 (不等于 (返回值, 0)) ' 未按取消
    连续赋值 (颜色.rgbResult, ., ., .文本颜色)
.如果真结束


.子程序 _背景颜色_被选择, 空白型, , 
.局部变量 颜色, 颜色结构, , , 
.局部变量 返回值, 整数型, , , 

赋值 (颜色.lStructSize, 36)
赋值 (颜色.hwndOwner, 主窗口.取窗口句柄 ())
赋值 (颜色.hInstance, GetWindowWord (主窗口.取窗口句柄 (), -6))
赋值 (颜色.flags, 0)
赋值 (颜色.lpCustColors, 取空白文本 (相乘 (16, 4)))
赋值 (返回值, 选择颜色 (颜色))
.如果真 (不等于 (返回值, 0)) ' 未按取消
    连续赋值 (颜色.rgbResult, ., ., .背景颜色, ., .)
.如果真结束


.子程序 _总在最前面_被选择, 空白型, , 
赋值 (.选中, 取反 (.选中))
赋值 (主窗口., .选中)

.子程序 _双击打开文件_被选择, 空白型, , 
赋值 (.选中, 真)
赋值 (.选中, 假)

.子程序 _双击编辑信息_被选择, 空白型, , 
赋值 (.选中, 假)
赋值 (.选中, 真)

.子程序 _显示信息栏_被选择, 空白型, , 
赋值 (.选中, 取反 (.选中))
.如果 (.选中)
    19.加入状态 (#选中)
    .如果 (.选中)
        赋值 (., 真)
        赋值 (.可视, 真)
        赋值 (.倾斜, 相减 (., .角度, 2))
    .否则
        赋值 (., 真)
        赋值 (.可视, 真)
        赋值 (.删除线, 相减 (., .加粗, 1))
    .如果结束
    赋值 (.禁止, 假)
    赋值 (.禁止, 假)
.否则
    19.去除状态 (#选中)
    .如果 (.选中)
        赋值 (., 假)
        赋值 (.可视, 假)
        赋值 (.倾斜, 相减 (取用户区宽度 (), .角度, 1))
    .否则
        赋值 (., 假)
        赋值 (.可视, 假)
        赋值 (.删除线, 相减 (取用户区高度 (), .加粗, 21))
    .如果结束
    赋值 (.禁止, 真)
    赋值 (.禁止, 真)
.如果结束


.子程序 _关联到右键菜单_被选择, 空白型, , 
赋值 (.选中, 取反 (.选中))
.如果 (.选中)
    写注册项 (1, “*\shell\添加到易用文件管理大师(&EFM)\command\”, 子文本替换 (相加 (#引号, 取运行目录 (), “\”, 取执行文件名 (), #引号, “ ”, #引号, “%1”, #引号), “\\”, “\”, , , 真))
    写注册项 (1, “Folder\shell\添加到易用文件管理大师(&EFM)\command\”, 子文本替换 (相加 (#引号, 取运行目录 (), “\”, 取执行文件名 (), #引号, “ ”, #引号, “%1”, #引号), “\\”, “\”, , , 真))
.否则
    删除注册项 (1, “*\shell\添加到易用文件管理大师(&EFM)\command”)
    删除注册项 (1, “*\shell\添加到易用文件管理大师(&EFM)”)
    删除注册项 (1, “Folder\shell\添加到易用文件管理大师(&EFM)\command”)
    删除注册项 (1, “Folder\shell\添加到易用文件管理大师(&EFM)”)
.如果结束


.子程序 _使用帮助_被选择, 空白型, , 
未知支持库函数_6 (“help.htm”, , )

.子程序 _意见反馈_被选择, 空白型, , 
跳转 ()

.子程序 _关于_被选择, 空白型, , 
系统关于窗口 (0, “ 易用文件管理大师(本程序由易语言编写)”, 相加 (“大连大有吴涛易语言软件开发有限公司 出品”, #换行符, “http://www.dywt.com.cn”), 载入图标 (GetModuleHandle (字符 (0)), 129))

.子程序 _添加到分类_被选择, 空白型, , 以下为右键菜单事件
.局部变量 句柄, 整数型, , , 
.局部变量 文件个数, 整数型, , , 

赋值 (.现行子夹, 0)
_选择夹1_子夹被改变 ()
赋值 (文件全名, 相加 (目录, .取标题 (., 0)))
赋值 (主窗口., 假)
.如果真 (并且 (等于 (.最大化按钮, 相减 (取项目数 (), 1)), 等于 (.取项目文本 (.最大化按钮), “查找结果”)))
    赋值 (.最大化按钮, 0)
    _树型框1_项目被选择 (2)
.如果真结束
赋值 (文件编号, 0)
赋值 (操作, 1)
载入 (文件信息窗口, , 真)
赋值 (主窗口., .选中)
.如果真 (等于 (操作, 4))
    .如果 (不等于 (现行分类, .最大化按钮))
        赋值 (.最大化按钮, 现行分类)
        _树型框1_项目被选择 (2)
    .否则
        加入文件 ()
    .如果结束
    赋值 (句柄, 相加 (“select * from wjfl where 编号='”, 现行分类编码, “'”).查询 ())
    赋值 (文件个数, 句柄.读 (4))
    句柄.关闭记录集 ()
    .如果真 (等于 (文件个数, 1))
        .置图片 (.最大化按钮, 相加 (.取图片 (.最大化按钮), 1))
        .置选中图片 (.最大化按钮, 相加 (.取选中图片 (.最大化按钮), 1))
    .如果真结束
    .如果真 (等于 (读加密配置项 (子文本替换 (相加 (取运行目录 (), “\data\sysdata.efm”), “\\”, “\”, , , 真), #版本信息, 当前用户, “提醒”, “假”), “真”))
        提醒 ()
    .如果真结束
    
.如果真结束
赋值 (文件全名, “”)

.子程序 _打开_被选择, 空白型, , 
.局部变量 文件名, 文本型, , , 

赋值 (文件名, 相加 (目录, .取标题 (., 0)))
未知支持库函数_6 (文件名, , 目录)

.子程序 _剪切_被选择, 空白型, , 
.局部变量 变量1, 整数型, , , 

清除数组 (剪贴板文件)
.计次循环首 (取表项数 (), 变量1)
    .如果真 (相减 (变量1, 1).是否被选择 ())
        加入成员 (剪贴板文件, 相加 (目录, 相减 (变量1, 1).取标题 ()))
    .如果真结束
    
.计次循环尾 ()
赋值 (是否剪切, 真)

.子程序 _复制_被选择, 空白型, , 
.局部变量 变量1, 整数型, , , 

清除数组 (剪贴板文件)
.计次循环首 (取表项数 (), 变量1)
    .如果真 (相减 (变量1, 1).是否被选择 ())
        加入成员 (剪贴板文件, 相加 (目录, 相减 (变量1, 1).取标题 ()))
    .如果真结束
    
.计次循环尾 ()
赋值 (是否剪切, 假)

.子程序 _粘贴_被选择, 空白型, , 
.如果 (是否剪切)
    未知支持库函数_5 (目录, 剪贴板文件)
.否则
    未知支持库函数_4 (目录, 剪贴板文件)
.如果结束
搜寻并填充文件 (目录)
清除数组 (剪贴板文件)

.子程序 _删除_被选择, 空白型, , 
.局部变量 变量1, 整数型, , , 

清除数组 (剪贴板文件)
.计次循环首 (取表项数 (), 变量1)
    .如果真 (相减 (变量1, 1).是否被选择 ())
        加入成员 (剪贴板文件, 相加 (目录, 相减 (变量1, 1).取标题 ()))
    .如果真结束
    
.计次循环尾 ()
未知支持库函数_3 (剪贴板文件)
搜寻并填充文件 (目录)
清除数组 (剪贴板文件)

.子程序 _重命名_被选择, 空白型, , 
.进入编辑 (.)

.子程序 _查看属性_被选择, 空白型, , 
.局部变量 当前文件属性, 文件属性, , , 

赋值 (当前文件属性.cbSize, 60)
赋值 (当前文件属性.fMask, 1100)
赋值 (当前文件属性.hwnd, 主窗口.取窗口句柄 ())
赋值 (当前文件属性.lpVerb, “properties”)
赋值 (当前文件属性.lpFile, 相加 (目录, .取标题 (., 0)))
赋值 (当前文件属性.lpParameters, “”)
赋值 (当前文件属性.lpDirectory, “”)
赋值 (当前文件属性.nShow, 0)
赋值 (当前文件属性.hInstApp, 0)
赋值 (当前文件属性.lpIDList, 0)
系统对话框 (当前文件属性)

.子程序 _图标方式2_被选择, 空白型, , 
_图标方式_被选择 ()

.子程序 _列表方式2_被选择, 空白型, , 
_列表方式_被选择 ()

.子程序 _文字颜色2_被选择, 空白型, , 
_文字颜色_被选择 ()

.子程序 _背景颜色2_被选择, 空白型, , 
_背景颜色_被选择 ()

.子程序 _添加文件或文件夹_被选择, 空白型, , 
_添加文件夹_被选择 ()

.子程序 _删除文件或文件夹_被选择, 空白型, , 
_删除文件夹_被选择 ()

.子程序 _修改文件属性1_被选择, 空白型, , 
_修改文件属性_被选择 ()

.子程序 _修改文件信息1_被选择, 空白型, , 
_修改文件信息_被选择 ()

.子程序 _打开文件1_被选择, 空白型, , 
_执行文件_被选择 ()

.子程序 _查询文件1_被选择, 空白型, , 
_查找文件_被选择 ()

.子程序 _纵向平铺1_被选择, 空白型, , 
_纵向平铺_被选择 ()

.子程序 _横向平铺1_被选择, 空白型, , 
_横向平铺_被选择 ()

.子程序 _图标方式1_被选择, 空白型, , 
_图标方式_被选择 ()

.子程序 _列表方式1_被选择, 空白型, , 
_列表方式_被选择 ()

.子程序 _文字颜色1_被选择, 空白型, , 
_文字颜色_被选择 ()

.子程序 _背景颜色1_被选择, 空白型, , 
_背景颜色_被选择 ()

.子程序 _图标方式3_被选择, 空白型, , 
_图标方式_被选择 ()

.子程序 _列表方式3_被选择, 空白型, , 
_列表方式_被选择 ()

.子程序 _文字颜色3_被选择, 空白型, , 
_文字颜色_被选择 ()

.子程序 _背景颜色3_被选择, 空白型, , 
_背景颜色_被选择 ()

.子程序 _选择夹1_子夹被改变, 空白型, , 以下为窗口组件事件
.如果 (等于 (.现行子夹, 0))
    赋值 (.标题, “修改文件属性”)
    赋值 (.可视, 真)
    赋值 (.字体大小, 假)
    赋值 (.字体大小, 真)
    赋值 (.选中, 等于 (., 0))
    赋值 (.选中, .选中)
    赋值 (.选中, 取反 (.选中))
    赋值 (.选中, .选中)
    重画 ()
    赋值 (.标题, .取项目文本 (.最大化按钮))
    1.置文本 (.取项目文本 (.最大化按钮))
    连续赋值 (真, .可视, .可视, .可视, .可视, .可视)
    连续赋值 (真, .可视, .可视, .可视)
.否则
    赋值 (.标题, “查看文件属性”)
    赋值 (.可视, 假)
    赋值 (.字体大小, 真)
    赋值 (.字体大小, 假)
    赋值 (.选中, 等于 (., 0))
    赋值 (.选中, .选中)
    赋值 (.选中, .选中)
    赋值 (.选中, 取反 (.选中))
    赋值 (.选中, .选中)
    赋值 (.选中, .选中)
    重画 ()
    赋值 (.标题, 取文本左边 (目录, 相减 (取文本长度 (目录), 1)))
    1.置文本 (取文本左边 (目录, 相减 (取文本长度 (目录), 1)))
    连续赋值 (假, .可视, .可视, .可视, .可视, .可视)
    连续赋值 (假, .可视, .可视, .可视)
.如果结束
.如果 (.选中)
    16.加入状态 (#选中)
    17.去除状态 (#选中)
.否则
    17.加入状态 (#选中)
    16.去除状态 (#选中)
.如果结束


.子程序 _树型框1_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (等于 (键代码, #Del键))
    _删除当前类别_被选择 ()
.如果真结束


.子程序 _树型框1_项目被选择, 空白型, , 
.参数 选择方式, 整数型, , 

赋值 (.标题, .取项目文本 (.最大化按钮))
1.置文本 (.取项目文本 (.最大化按钮))
.如果 (并且 (等于 (.最大化按钮, 相减 (取项目数 (), 1)), 等于 (相减 (取项目数 (), 1).取项目文本 (), “查找结果”)))
    显示找到文件 ()
.否则
    赋值 (现行分类编码, 取分类编码 (.最大化按钮))
    填充分类文件 ()
.如果结束


.子程序 _树型框1_结束编辑, 逻辑型, , 
.参数 项目索引, 整数型, , 

.局部变量 索引, 整数型, , , 
.局部变量 项目名称, 文本型, , , 
.局部变量 句柄, 整数型, , , 

.如果真 (等于 (删首尾空 (.回车下移焦点), “”))
    项目索引.进入编辑 ()
    返回 (假)
.如果真结束
赋值 (索引, 项目索引.取父项目 ())
赋值 (项目名称, 取文本右边 (相加 (“0”, 到文本 (项目索引.取项目数值 ())), 2))
.判断循环首 (不等于 (索引, -1))
    赋值 (项目名称, 相加 (取文本右边 (相加 (“0”, 到文本 (索引.取项目数值 ())), 2), 项目名称))
    赋值 (索引, 索引.取父项目 ())
.判断循环尾 ()
赋值 (句柄, 相加 (“select * from wjfl where 层次=”, 到文本 (项目索引.取缩进层次 ()), “ and 编号 like '”, 取文本左边 (项目名称, 相减 (取文本长度 (项目名称), 2)), “%'”).查询 ())
句柄.到首记录 ()
.判断循环首 (等于 (句柄.尾记录后 (), 假))
    .如果真 (不等于 (句柄.读 (2), 项目名称))
        .如果真 (等于 (句柄.读 (3), .回车下移焦点))
            赋值 (主窗口., 假)
            信息框 (相加 (#左引号, .回车下移焦点, #右引号, “已经存在，同一父分类中不能有相同名称的子分类！”), #错误图标, )
            赋值 (主窗口., .选中)
            项目索引.进入编辑 ()
            返回 (假)
        .如果真结束
        
    .如果真结束
    句柄.到后一记录 ()
.判断循环尾 ()
句柄.关闭记录集 ()
相加 (“update wjfl set 名称='”, .回车下移焦点, “' where 编号='”, 项目名称, “'”).执行 ()
赋值 (.最大化按钮, 项目索引)
返回 (真)

.子程序 _树型框1_开始编辑, 逻辑型, , 
.参数 项目索引, 整数型, , 

.如果真 (并且 (等于 (.最大化按钮, 相减 (取项目数 (), 1)), 等于 (.取项目文本 (.最大化按钮), “查找结果”)))
    返回 (假)
.如果真结束
模拟键盘 (#End键, 0, 0, 0) ' 以下键盘动作是为了强行改变树型框的结束编辑文本，以响应“树型框1.结果编辑（）”事件。
模拟键盘 (#End键, 0, 2, 0)
模拟键盘 (#空格键, 0, 0, 0)
模拟键盘 (#空格键, 0, 2, 0)
模拟键盘 (#退格键, 0, 0, 0)
模拟键盘 (#退格键, 0, 2, 0)
模拟键盘 (#Home键, 0, 0, 0)
模拟键盘 (#Home键, 0, 2, 0)

.子程序 _树型框1_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 找到位置, 测试找到信息, , , 
.局部变量 句柄, 整数型, , , 

赋值 (找到位置.横向位置, 横向位置)
赋值 (找到位置.纵向位置, 纵向位置)
赋值 (句柄, 4369.发送信息 (0, 取指针 (找到位置, 找到位置, 0))) ' 判断是不是在项上。在TVM类消息中有一个TVM_HITTEST消息，发送该消息可以检测控件表面上的某一点，如果该点位于一个项目上，则返回该项目的句柄。
.如果真 (不等于 (句柄, 0))
    4363.发送信息 (9, 句柄) ' 选择项目。TVM_SELECTITEM的值为9，代表选中；为8代表高亮显示。
.如果真结束
弹出菜单 ()
返回 (假)

.子程序 _驱动器框1_驱动器被改变, 空白型, , 
赋值 (.图标, {  })
.加入项目 (相加 (.驱动器, “:”), 2, 2, )
搜寻一层目录 (相加 (.驱动器, “:\”), 0)
0.扩展 ()
赋值 (.最大化按钮, 0)
获取焦点 ()
_目录树型框_项目被选择 (2)

.子程序 _目录树型框_项目被选择, 空白型, , 
.参数 选择方式, 整数型, , 

.局部变量 项目索引, 空白型, , , 
.局部变量 索引, 空白型, , , 

赋值 (项目索引, .最大化按钮)
赋值 (目录, 相加 (项目索引.取项目文本 (), “\”))
赋值 (索引, 项目索引.取父项目 ())
.判断循环首 (不等于 (索引, -1))
    赋值 (目录, 相加 (索引.取项目文本 (), “\”, 目录))
    赋值 (索引, 索引.取父项目 ())
.判断循环尾 ()
赋值 (.标题, 取文本左边 (目录, 相减 (取文本长度 (目录), 1)))
1.置文本 (取文本左边 (目录, 相减 (取文本长度 (目录), 1)))
.如果真 (并且 (不等于 (寻找文件 (相加 (目录, “system”), #子目录), “”), 不等于 (寻找文件 (相加 (目录, “system32”), #子目录), “”)))
    赋值 (., {  })
    赋值 (., {  })
    返回 ()
.如果真结束
搜寻并填充文件 (目录)

.子程序 _目录树型框_即将扩展, 逻辑型, , 
.参数 项目索引, 整数型, , 

.局部变量 索引, 整数型, , , 
.局部变量 目录, 文本型, , , 

赋值 (目录, 相加 (项目索引.取项目文本 (), “\”))
赋值 (索引, 项目索引.取父项目 ())
.判断循环首 (不等于 (索引, -1))
    赋值 (目录, 相加 (索引.取项目文本 (), “\”, 目录))
    赋值 (索引, 索引.取父项目 ())
.判断循环尾 ()
.如果真 (等于 (相加 (项目索引, 1).取项目文本 (), “该文件夹下有子目录”))
    相加 (项目索引, 1).删除项目 ()
    搜寻一层目录 (目录, 项目索引)
.如果真结束


.子程序 _超级列表框1_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (并且 (不等于 (., -1), 等于 (键代码, #Del键)))
    _删除文件夹_被选择 ()
.如果真结束


.子程序 _超级列表框1_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

弹出菜单 ()
返回 (假)

.子程序 _超级列表框1_当前表项被改变, 空白型, , 
.局部变量 句柄, 整数型, , , 
.局部变量 变量1, 整数型, , , 

.如果 (不等于 (.取项目文本 (.最大化按钮), “查找结果”))
    .如果 (不等于 (., -1))
        赋值 (句柄, 相加 (“select * from wjxx where 分类编码='”, 现行分类编码, “' and 文件编号=”, 到文本 (.取表项数值 (.))).查询 ())
        主窗口.到首记录 (., 句柄)
        .置标题 (., 0, 句柄.读 (3))
        .如果 (等于 (位与 (取文件属性 (句柄.读 (4)), 16), 0))
            赋值 (.内容, 相加 (“        详细信息”, #换行符, #换行符, “软件大小：”, 数值到格式文本 (句柄.读 (11), 0, 真), “ kb”, #换行符, “软件版本：”, 句柄.读 (5), #换行符, “软件作者：”, 句柄.读 (6), #换行符, “适用平台：”, 句柄.读 (7), #换行符, “软件主页：”, 句柄.读 (8), #换行符, “下载地址：”, 句柄.读 (9), #换行符, “本地位置：”, 句柄.读 (4), #换行符, #换行符, 句柄.读 (10)))
        .否则
            赋值 (.内容, 相加 (“        详细信息”, #换行符, #换行符, “软件大小：”, 到文本 (句柄.读 (13)), “个文件夹,”, 到文本 (句柄.读 (12)), “个文件,”, 数值到格式文本 (句柄.读 (11), 0, 真), “ kb”, #换行符, “软件版本：”, 句柄.读 (5), #换行符, “软件作者：”, 句柄.读 (6), #换行符, “适用平台：”, 句柄.读 (7), #换行符, “软件主页：”, 句柄.读 (8), #换行符, “下载地址：”, 句柄.读 (9), #换行符, “本地位置：”, 句柄.读 (4), #换行符, #换行符, 句柄.读 (10)))
        .如果结束
        句柄.关闭记录集 ()
    .否则
        赋值 (.内容, “”)
    .如果结束
    
.否则
    .如果 (不等于 (., -1))
        查找句柄.到首记录 ()
        .计次循环首 (., 变量1)
            查找句柄.到后一记录 ()
        .计次循环尾 ()
        .如果 (等于 (位与 (取文件属性 (查找句柄.读 (4)), 16), 0))
            赋值 (.内容, 相加 (“        详细信息”, #换行符, #换行符, “所在分类：”, 取分类名称 (查找句柄.读 (1)), #换行符, #换行符, “软件大小：”, 数值到格式文本 (查找句柄.读 (11), 0, 真), “ kb”, #换行符, “软件版本：”, 查找句柄.读 (5), #换行符, “软件作者：”, 查找句柄.读 (6), #换行符, “适用平台：”, 查找句柄.读 (7), #换行符, “软件主页：”, 查找句柄.读 (8), #换行符, “下载地址：”, 查找句柄.读 (9), #换行符, “本地位置：”, 查找句柄.读 (4), #换行符, #换行符, 查找句柄.读 (10)))
        .否则
            赋值 (.内容, 相加 (“        详细信息”, #换行符, #换行符, “所在分类：”, 取分类名称 (查找句柄.读 (1)), #换行符, #换行符, “软件大小：”, 到文本 (查找句柄.读 (13)), “个文件夹,”, 到文本 (查找句柄.读 (12)), “个文件,”, 数值到格式文本 (查找句柄.读 (11), 0, 真), “ kb”, #换行符, “软件版本：”, 查找句柄.读 (5), #换行符, “软件作者：”, 查找句柄.读 (6), #换行符, “适用平台：”, 查找句柄.读 (7), #换行符, “软件主页：”, 查找句柄.读 (8), #换行符, “下载地址：”, 查找句柄.读 (9), #换行符, “本地位置：”, 查找句柄.读 (4), #换行符, #换行符, 查找句柄.读 (10)))
        .如果结束
        
    .否则
        赋值 (.内容, “”)
    .如果结束
    
.如果结束


.子程序 _超级列表框1_表项被激活, 空白型, , 
.局部变量 选中项目录, 文本型, , , 
.局部变量 文件名, 文本型, , , 
.局部变量 文件索引, 整数型, , , 
.局部变量 句柄, 整数型, , , 

.如果 (并且 (等于 (.最大化按钮, 相减 (取项目数 (), 1)), 等于 (.取项目文本 (.最大化按钮), “查找结果”)))
    查找句柄.到首记录 ()
    .判断循环首 (等于 (查找句柄.尾记录后 (), 假))
        .如果真 (并且 (等于 (查找句柄.读 (3), .取标题 (., 0)), 等于 (查找句柄.读 (2), .取表项数值 (.))))
            跳出循环 ()
        .如果真结束
        查找句柄.到后一记录 ()
    .判断循环尾 ()
    赋值 (文件名, 查找句柄.读 (4))
.否则
    赋值 (文件索引, .取表项数值 (.))
    赋值 (句柄, 相加 (“select * from wjxx where 分类编码='”, 现行分类编码, “' and 文件编号=”, 到文本 (文件索引)).查询 ())
    句柄.到首记录 ()
    赋值 (文件名, 句柄.读 (4))
    句柄.关闭记录集 ()
.如果结束
.如果 (.选中)
    .如果真 (并且 (等于 (取文件属性 (文件名), -1), 等于 (文件是否存在 (文件名), 假)))
        赋值 (主窗口., 假)
        信息框 (“所选文件失去关联，可能文件已经被移动或删除！请修改文件信息以重新定位。”, #信息图标, )
        赋值 (主窗口., .选中)
        返回 ()
    .如果真结束
    .如果 (不等于 (位与 (取文件属性 (文件名), 16), 0))
        未知支持库函数_6 (文件名, , )
    .否则
        赋值 (选中项目录, 取文本左边 (文件名, 相减 (倒找文本 (文件名, “\”, , 假), 1)))
        未知支持库函数_6 (文件名, , 选中项目录)
    .如果结束
    
.否则
    .如果真 (并且 (等于 (.最大化按钮, 相减 (取项目数 (), 1)), 等于 (.取项目文本 (.最大化按钮), “查找结果”)))
        赋值 (主窗口., 假)
        信息框 (“请转到文件所在分类后，再编辑文件信息！”, #信息图标, )
        赋值 (主窗口., .选中)
        返回 ()
    .如果真结束
    赋值 (主窗口., 假)
    载入 (文件信息窗口, , 真)
    赋值 (主窗口., .选中)
    .如果真 (等于 (操作, 4))
        .如果 (不等于 (现行分类, .最大化按钮))
            赋值 (.最大化按钮, 现行分类)
            _树型框1_项目被选择 (2)
        .否则
            _超级列表框1_当前表项被改变 ()
        .如果结束
        
    .如果真结束
    
.如果结束


.子程序 _超级列表框2_表项被激活, 空白型, , 
.局部变量 文件名, 文本型, , , 
.局部变量 变量1, 空白型, , , 
.局部变量 层次, 空白型, , , 

赋值 (文件名, 相加 (目录, .取标题 (., 0)))
.如果 (不等于 (位与 (取文件属性 (文件名), 16), 0))
    _目录树型框_即将扩展 (.最大化按钮)
    赋值 (层次, .取缩进层次 (.最大化按钮))
    .变量循环首 (相加 (.最大化按钮, 1), 取项目数 (), 1, 变量1)
        .如果真 (等于 (变量1.取项目文本 (), .取标题 (., 0)))
            赋值 (.最大化按钮, 变量1)
            _目录树型框_项目被选择 (2)
            跳出循环 ()
        .如果真结束
        
    .变量循环尾 ()
.否则
    未知支持库函数_6 (文件名, , 目录)
.如果结束


.子程序 _超级列表框2_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果 (等于 (., -1))
    .如果 (等于 (取数组成员数 (剪贴板文件), 0))
        弹出菜单 ()
        返回 (假)
    .否则
        连续赋值 (假, .可视, .可视, .可视, .可视, .可视, .可视, .可视, .可视, .可视, .可视)
    .如果结束
    
.否则
    连续赋值 (真, .可视, .可视, .可视, .可视, .可视, .可视, .可视, .可视, .可视, .可视)
    .如果 (大于 (取已选择表项数 (), 1))
        连续赋值 (假, .可视, .可视, .可视, .可视, .可视, .可视)
    .否则
        连续赋值 (真, .可视, .可视, .可视, .可视, .可视, .可视)
    .如果结束
    
.如果结束
.如果 (等于 (取数组成员数 (剪贴板文件), 0))
    赋值 (.禁止, 真)
.否则
    赋值 (.禁止, 假)
.如果结束
弹出菜单 ()
返回 (假)

.子程序 _超级列表框2_开始编辑, 逻辑型, , 
.参数 表项索引, 整数型, , 

赋值 (文件, .取标题 (., 0))

.子程序 _超级列表框2_结束编辑, 逻辑型, , 
.参数 表项索引, 整数型, , 

.如果真 (等于 (文件更名 (相加 (目录, 文件), 相加 (目录, .)), 假))
    .进入编辑 (.)
    返回 (假)
.如果真结束
返回 (真)

.子程序 _超级列表框2_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (并且 (不等于 (., -1), 等于 (键代码, #Del键)))
    _删除_被选择 ()
.如果真结束


.子程序 _分隔条3_被拖动, 空白型, , 
.参数 原位置, 整数型, , 
.参数 目的位置, 整数型, , 

.如果真 (大于 (目的位置, 相减 (., 5)))
    赋值 (目的位置, 相减 (., 5))
.如果真结束
赋值 (., 目的位置)
赋值 (.宽度, 相加 (目的位置, 1))
赋值 (.宽度, 相减 (.宽度, 10))
赋值 (.宽度, 相减 (.宽度, 10))
赋值 (.宽度, 相减 (.宽度, 10))
赋值 (.角度, 相加 (目的位置, 5))
赋值 (.角度, 相加 (目的位置, 5))
赋值 (.倾斜, 相减 (取用户区宽度 (), 目的位置, 5))
赋值 (., 相加 (目的位置, 5))
赋值 (., 相减 (取用户区宽度 (), 目的位置, 5))
赋值 (.左边, 相加 (目的位置, 5))
赋值 (.宽度, 相减 (取用户区宽度 (), 目的位置, 5))
.如果 (.选中)
    赋值 (.倾斜, 相减 (., 2, .角度))
.否则
    赋值 (.倾斜, 相减 (取用户区宽度 (), 目的位置, 5))
    赋值 (.左边, 相加 (目的位置, 5))
    赋值 (.宽度, 相减 (取用户区宽度 (), 目的位置, 5))
.如果结束
重画 ()
重画 ()

.子程序 _分隔条4_被拖动, 空白型, , 
.参数 原位置, 整数型, , 
.参数 目的位置, 整数型, , 

.如果真 (小于 (目的位置, 相加 (., 5)))
    赋值 (目的位置, 相加 (., 5))
.如果真结束
赋值 (.倾斜, 相减 (目的位置, 2, .角度))
赋值 (., 目的位置)
赋值 (.左边, 相加 (., 4))
赋值 (.宽度, 相减 (取用户区宽度 (), .左边))
重画 ()

.子程序 _分隔条5_被拖动, 空白型, , 
.参数 原位置, 整数型, , 
.参数 目的位置, 整数型, , 

.如果真 (小于 (目的位置, 57))
    赋值 (目的位置, 57)
.如果真结束
.如果真 (大于 (目的位置, 相减 (取用户区高度 (), 24)))
    赋值 (目的位置, 相减 (取用户区高度 (), 24))
.如果真结束
赋值 (.删除线, 相减 (目的位置, 1, .加粗))
赋值 (., 目的位置)
赋值 (.顶边, 相加 (目的位置, 4))
赋值 (.高度, 相减 (取用户区高度 (), .顶边, 20))
重画 ()

.子程序 _标签1_反馈事件, 整数型, , 
.参数 参数一, 整数型, , 
.参数 参数二, 整数型, , 

.局部变量 数量, 整数型, 静态, , 
.局部变量 索引, 整数型, , , 
.局部变量 句柄, 整数型, , , 
.局部变量 文件个数, 整数型, , , 

.判断开始 (等于 (参数一, 0)) ' 确定数量
    赋值 (数量, 参数二)
    
.默认
    .如果真 (大于 (数量, 1))
        返回 (0)
    .如果真结束
    .如果真 (等于 (参数一, 取窗口句柄 ()))
        .如果真 (并且 (等于 (.最大化按钮, 相减 (取项目数 (), 1)), 等于 (.取项目文本 (.最大化按钮), “查找结果”)))
            赋值 (.最大化按钮, 0)
            _树型框1_项目被选择 (2)
        .如果真结束
        赋值 (文件全名, 删尾空 (指针到文本 (参数二)))
        赋值 (文件编号, 0)
        赋值 (操作, 1)
        赋值 (现行分类, .最大化按钮)
        赋值 (主窗口., 假)
        载入 (文件信息窗口, , 真)
        赋值 (主窗口., .选中)
        .如果真 (等于 (操作, 4))
            .如果 (不等于 (现行分类, .最大化按钮))
                赋值 (.最大化按钮, 现行分类)
                _树型框1_项目被选择 (2)
            .否则
                加入文件 ()
            .如果结束
            赋值 (句柄, 相加 (“select * from wjfl where 编号='”, 现行分类编码, “'”).查询 ())
            赋值 (文件个数, 句柄.读 (4))
            句柄.关闭记录集 ()
            .如果真 (等于 (文件个数, 1))
                .置图片 (.最大化按钮, 相加 (.取图片 (.最大化按钮), 1))
                .置选中图片 (.最大化按钮, 相加 (.取选中图片 (.最大化按钮), 1))
            .如果真结束
            .如果真 (等于 (读加密配置项 (子文本替换 (相加 (取运行目录 (), “\data\sysdata.efm”), “\\”, “\”, , , 真), #版本信息, 当前用户, “提醒”, “假”), “真”))
                提醒 ()
            .如果真结束
            
        .如果真结束
        赋值 (文件全名, “”)
    .如果真结束
    
.判断结束
返回 (0)

.子程序 _工具条1_被单击, 空白型, , 
.参数 按钮索引, 整数型, , 

.判断开始 (等于 (按钮索引, 0))
    _添加文件夹_被选择 ()
.判断 (等于 (按钮索引, 1))
    _删除文件夹_被选择 ()
.判断 (等于 (按钮索引, 3))
    _修改文件属性_被选择 ()
.判断 (等于 (按钮索引, 4))
    _修改文件信息_被选择 ()
.判断 (等于 (按钮索引, 6))
    _查找文件_被选择 ()
.判断 (等于 (按钮索引, 7))
    _执行文件_被选择 ()
.判断 (等于 (按钮索引, 9))
    _添加同级类别_被选择 ()
.判断 (等于 (按钮索引, 10))
    _添加一个子类_被选择 ()
.判断 (等于 (按钮索引, 11))
    _删除当前类别_被选择 ()
.判断 (等于 (按钮索引, 13))
    _纵向平铺_被选择 ()
.判断 (等于 (按钮索引, 14))
    _横向平铺_被选择 ()
.判断 (等于 (按钮索引, 16))
    _图标方式_被选择 ()
.判断 (等于 (按钮索引, 17))
    _列表方式_被选择 ()
.判断 (等于 (按钮索引, 19))
    _显示信息栏_被选择 ()
.判断 (等于 (按钮索引, 21))
    _使用帮助_被选择 ()
.判断 (等于 (按钮索引, 22))
    _意见反馈_被选择 ()
.判断 (等于 (按钮索引, 23))
    _关于_被选择 ()
.默认
    
.判断结束


.子程序 搜寻一层目录, 空白型, , 以下为公用子程序
.参数 目录, 文本型, , 以"\"结尾
.参数 现有索引, 整数型, , 

.局部变量 文件名, 文本型, , , 
.局部变量 索引, 整数型, , , 
.局部变量 完整路径, 空白型, , , 
.局部变量 变量1, 空白型, , , 

清空 ()
赋值 (文件名, 寻找文件 (相加 (目录, “*”), #子目录))
.判断循环首 (不等于 (文件名, “”))
    .如果真 (并且 (不等于 (取文本左边 (文件名, 1), “.”), 不等于 (到小写 (文件名), “recycled”)))
        文件名.加入项目 ()
    .如果真结束
    赋值 (文件名, 寻找文件 (#子目录))
    处理事件 ()
.判断循环尾 ()
.计次循环首 (取项目数 (), 变量1)
    赋值 (文件名, 相减 (变量1, 1).取项目文本 ())
    赋值 (索引, 现有索引.加入项目 (文件名, 1, 3, ))
    判断有无子目录 (相加 (目录, 文件名, “\”), 索引)
    处理事件 ()
.计次循环尾 ()

.子程序 判断有无子目录, 空白型, , 
.参数 当前目录, 文本型, , 以"\"结尾
.参数 现有索引, 整数型, , 

.局部变量 文件名, 文本型, , , 

.如果真 (并且 (不等于 (寻找文件 (相加 (当前目录, “system”), #子目录), “”), 不等于 (寻找文件 (相加 (当前目录, “system32”), #子目录), “”)))
    返回 ()
.如果真结束
赋值 (文件名, 寻找文件 (相加 (当前目录, “*”), #子目录))
.判断循环首 (不等于 (文件名, “”))
    .如果真 (不等于 (取文本左边 (文件名, 1), “.”))
        现有索引.加入项目 (“该文件夹下有子目录”, 1, , )
        跳出循环 ()
    .如果真结束
    赋值 (文件名, 寻找文件 (#子目录))
.判断循环尾 ()

.子程序 搜寻并填充文件, 空白型, , 
.参数 填充目录, 文本型, , 

.局部变量 图片组, 字节集, , , 
.局部变量 文件名, 文本型, , , 
.局部变量 图片索引, 整数型, , , 
.局部变量 索引, 整数型, , , 
.局部变量 完整路径, 整数型, , , 
.局部变量 变量1, 整数型, , , 
.局部变量 大小, 整数型, , , 

全部删除 ()
.如果 (等于 (., 0))
    赋值 (图片组, 未知支持库函数_30 (32, 32))
    .如果真 (或者 (等于 (取字节集长度 (图片组), 0), 不等于 (未知支持库函数_24 (图片组, #文件夹32, #白色), 0)))
        返回 ()
    .如果真结束
    
.否则
    赋值 (图片组, 未知支持库函数_30 (16, 16))
    .如果真 (或者 (等于 (取字节集长度 (图片组), 0), 不等于 (未知支持库函数_24 (图片组, #文件夹16, #白色), 0)))
        返回 ()
    .如果真结束
    
.如果结束
清空 ()
赋值 (文件名, 寻找文件 (相加 (填充目录, “*”), #子目录))
.判断循环首 (不等于 (文件名, “”))
    .如果真 (并且 (不等于 (取文本左边 (文件名, 1), “.”), 不等于 (到小写 (文件名), “recycled”)))
        文件名.加入项目 ()
    .如果真结束
    赋值 (文件名, 寻找文件 (#子目录))
.判断循环尾 ()
.计次循环首 (取项目数 (), 变量1)
    赋值 (文件名, 相减 (变量1, 1).取项目文本 ())
    赋值 (索引, .插入表项 (文件名, 0, , , ))
    .如果真 (等于 (., 3))
        索引.置标题 (2, 时间到格式文本 (取文件时间 (相加 (填充目录, 文件名))))
    .如果真结束
    
.计次循环尾 ()
清空 ()
赋值 (文件名, 寻找文件 (相加 (填充目录, “*.*”), ))
.判断循环首 (不等于 (文件名, “”))
    .如果真 (并且 (等于 (位与 (取文件属性 (相加 (填充目录, 文件名)), 2), 0), 等于 (位与 (取文件属性 (相加 (填充目录, 文件名)), 4), 0)))
        文件名.加入项目 ()
    .如果真结束
    赋值 (文件名, 寻找文件 ())
.判断循环尾 ()
.计次循环首 (取项目数 (), 变量1)
    赋值 (文件名, 相减 (变量1, 1).取项目文本 ())
    赋值 (图片索引, 取文件图标 (相加 (填充目录, 文件名), 图片组))
    赋值 (索引, .插入表项 (文件名, 图片索引, , , ))
    .如果真 (等于 (., 3))
        赋值 (大小, 取尺寸 (相加 (填充目录, 文件名)))
        索引.置标题 (1, 相加 (数值到格式文本 (大小, 0, 真), “kb”))
        索引.置标题 (2, 时间到格式文本 (取文件时间 (相加 (填充目录, 文件名))))
    .如果真结束
    
.计次循环尾 ()
赋值 (., 图片组)
赋值 (.倾斜, 相加 (.倾斜, 1)) ' 以下两行代码，目的是解决有时超级列表框以图标方式填充文件时，图标间距过小的问题。
赋值 (.倾斜, 相减 (.倾斜, 1))
刷新显示 ()

.子程序 填充分类文件, 空白型, , 
.局部变量 句柄, 整数型, , , 
.局部变量 图片组, 字节集, , , 
.局部变量 图片索引, 整数型, , , 
.局部变量 索引, 整数型, , , 
.局部变量 循环变量, 整数型, , , 

赋值 (句柄, 相加 (“select * from wjxx where 分类编码='”, 现行分类编码, “'”).查询 ())
全部删除 ()
赋值 (.内容, “”)
.如果 (等于 (., 0))
    赋值 (图片组, 未知支持库函数_30 (32, 32))
    未知支持库函数_24 (图片组, #文件夹32, #白色)
    未知支持库函数_24 (图片组, #无关联32, )
.否则
    赋值 (图片组, 未知支持库函数_30 (16, 16))
    未知支持库函数_24 (图片组, #文件夹16, #白色)
    未知支持库函数_24 (图片组, #无关联16, )
.如果结束
句柄.到首记录 ()
.判断循环首 (等于 (句柄.尾记录后 (), 假))
    赋值 (图片索引, 取文件图标 (句柄.读 (4), 图片组))
    赋值 (索引, .插入表项 (句柄.读 (3), 图片索引, , , 到数值 (句柄.读 (2))))
    .如果真 (等于 (., 3))
        .如果真 (等于 (位与 (取文件属性 (句柄.读 (4)), 16), 0))
            索引.置标题 (1, 相加 (数值到格式文本 (取尺寸 (句柄.读 (4)), , 假), “kb”))
        .如果真结束
        索引.置标题 (2, 时间到格式文本 (取文件时间 (句柄.读 (4))))
    .如果真结束
    句柄.到后一记录 ()
.判断循环尾 ()
.如果真 (大于 (取表项数 (), 0))
    赋值 (., 0)
    句柄.到首记录 ()
    .如果 (等于 (位与 (取文件属性 (句柄.读 (4)), 16), 0))
        赋值 (.内容, 相加 (“        详细信息”, #换行符, #换行符, “软件大小：”, 数值到格式文本 (句柄.读 (11), 0, 真), “ kb”, #换行符, “软件版本：”, 句柄.读 (5), #换行符, “软件作者：”, 句柄.读 (6), #换行符, “适用平台：”, 句柄.读 (7), #换行符, “软件主页：”, 句柄.读 (8), #换行符, “下载地址：”, 句柄.读 (9), #换行符, “本地位置：”, 句柄.读 (4), #换行符, #换行符, 句柄.读 (10)))
    .否则
        赋值 (.内容, 相加 (“        详细信息”, #换行符, #换行符, “软件大小：”, 到文本 (句柄.读 (13)), “个文件夹,”, 到文本 (句柄.读 (12)), “个文件,”, 数值到格式文本 (句柄.读 (11), 0, 真), “ kb”, #换行符, “软件版本：”, 句柄.读 (5), #换行符, “软件作者：”, 句柄.读 (6), #换行符, “适用平台：”, 句柄.读 (7), #换行符, “软件主页：”, 句柄.读 (8), #换行符, “下载地址：”, 句柄.读 (9), #换行符, “本地位置：”, 句柄.读 (4), #换行符, #换行符, 句柄.读 (10)))
    .如果结束
    
.如果真结束
句柄.关闭记录集 ()
赋值 (., 图片组)
赋值 (.倾斜, 相加 (.倾斜, 1)) ' 以下两行代码，目的是解决有时超级列表框以图标方式填充文件时，图标间距过小的问题。
赋值 (.倾斜, 相减 (.倾斜, 1))
刷新显示 ()

.子程序 取分类编码, 文本型, , 
.参数 当前树型框, 树型框, , 
.参数 项目索引, 整数型, , 

.局部变量 项目编码, 文本型, , , 
.局部变量 索引, 整数型, , , 

赋值 (项目编码, 取文本右边 (相加 (“0”, 到文本 (当前树型框.取项目数值 (项目索引))), 2))
赋值 (索引, 当前树型框.取父项目 (项目索引))
.判断循环首 (不等于 (索引, -1))
    赋值 (项目编码, 相加 (取文本右边 (相加 (“0”, 到文本 (当前树型框.取项目数值 (索引))), 2), 项目编码))
    赋值 (索引, 当前树型框.取父项目 (索引))
.判断循环尾 ()
返回 (项目编码)

.子程序 时间到格式文本, 文本型, , 
.参数 时间, 日期时间型, , 

返回 (相加 (到文本 (取年份 (时间)), “-”, 到文本 (取月份 (时间)), “-”, 到文本 (取日 (时间)), “ ”, 到文本 (取小时 (时间)), “:”, 取文本右边 (相加 (“0”, 到文本 (取分钟 (时间))), 2)))

.子程序 加入文件, 空白型, , 
.局部变量 图片组, 字节集, , , 
.局部变量 图片索引, 整数型, , , 
.局部变量 索引, 整数型, , , 
.局部变量 句柄, 空白型, , , 
.局部变量 大小, 空白型, , , 

.如果 (等于 (., 0))
    .如果 (等于 (未知支持库函数_29 (.), 0))
        赋值 (图片组, 未知支持库函数_30 (32, 32))
        .如果真 (等于 (未知支持库函数_24 (图片组, #文件夹32, #白色), -1))
            返回 ()
        .如果真结束
        .如果真 (等于 (未知支持库函数_24 (图片组, #无关联32, #白色), -1))
            返回 ()
        .如果真结束
        
    .否则
        赋值 (图片组, .)
    .如果结束
    
.否则
    .如果 (等于 (未知支持库函数_29 (.), 0))
        赋值 (图片组, 未知支持库函数_30 (16, 16))
        .如果真 (等于 (未知支持库函数_24 (图片组, #文件夹16, #白色), -1))
            返回 ()
        .如果真结束
        .如果真 (等于 (未知支持库函数_24 (图片组, #无关联16, #白色), -1))
            返回 ()
        .如果真结束
        
    .否则
        赋值 (图片组, .)
    .如果结束
    
.如果结束
赋值 (句柄, 相加 (“select * from wjxx where 分类编码='”, 现行分类编码, “' and 文件编号=”, 到文本 (文件编号)).查询 ())
句柄.到首记录 ()
赋值 (图片索引, 取文件图标 (句柄.读 (4), 图片组))
赋值 (., 图片组)
赋值 (索引, .插入表项 (句柄.读 (3), 图片索引, , , 句柄.读 (2)))
.如果真 (等于 (., 3))
    .如果真 (等于 (位与 (取文件属性 (句柄.读 (4)), 16), 0))
        赋值 (大小, 句柄.读 (11))
        索引.置标题 (1, 相加 (数值到格式文本 (大小, 0, 真), “kb”))
    .如果真结束
    索引.置标题 (2, 时间到格式文本 (取文件时间 (句柄.读 (4))))
.如果真结束
赋值 (., 索引)
.如果 (等于 (位与 (取文件属性 (句柄.读 (4)), 16), 0))
    赋值 (.内容, 相加 (“        详细信息”, #换行符, #换行符, “软件大小：”, 数值到格式文本 (句柄.读 (11), 0, 真), “ kb”, #换行符, “软件版本：”, 句柄.读 (5), #换行符, “软件作者：”, 句柄.读 (6), #换行符, “适用平台：”, 句柄.读 (7), #换行符, “软件主页：”, 句柄.读 (8), #换行符, “下载地址：”, 句柄.读 (9), #换行符, “本地位置：”, 句柄.读 (4), #换行符, #换行符, 句柄.读 (10)))
.否则
    赋值 (.内容, 相加 (“        详细信息”, #换行符, #换行符, “软件大小：”, 到文本 (句柄.读 (13)), “个文件夹,”, 到文本 (句柄.读 (12)), “个文件,”, 数值到格式文本 (句柄.读 (11), 0, 真), “ kb”, #换行符, “软件版本：”, 句柄.读 (5), #换行符, “软件作者：”, 句柄.读 (6), #换行符, “适用平台：”, 句柄.读 (7), #换行符, “软件主页：”, 句柄.读 (8), #换行符, “下载地址：”, 句柄.读 (9), #换行符, “本地位置：”, 句柄.读 (4), #换行符, #换行符, 句柄.读 (10)))
.如果结束
句柄.关闭记录集 ()

.子程序 取文件图标, 整数型, , 
.参数 文件名, 文本型, , 
.参数 文件图片组, 字节集, , 

.局部变量 图片索引, 整数型, , , 
.局部变量 后缀名, 文本型, , , 
.局部变量 类型注册项名, 文本型, , , 
.局部变量 文件类型名, 文本型, , , 
.局部变量 文件图标信息, 文本型, , , 
.局部变量 文件路径, 文本型, , , 
.局部变量 文件图标索引, 整数型, , , 

.如果真 (并且 (等于 (取文件属性 (文件名), -1), 等于 (文件是否存在 (文件名), 假)))
    赋值 (图片索引, 1)
    返回 (1)
.如果真结束
.如果 (不等于 (位与 (取文件属性 (文件名), 16), 0))
    赋值 (图片索引, 0)
.否则
    赋值 (后缀名, 取文本右边 (到小写 (文件名), 相加 (相减 (取文本长度 (文件名), 倒找文本 (文件名, “.”, , 假)), 1)))
    .如果 (并且 (不等于 (后缀名, “.exe”), 不等于 (后缀名, “.dll”), 不等于 (后缀名, “.ico”), 不等于 (后缀名, “.scr”)))
        赋值 (类型注册项名, 取文本注册项 (1, 相加 (后缀名, “\”), ))
        赋值 (文件类型名, 取文本注册项 (1, 相加 (类型注册项名, “\”), ))
        赋值 (文件图标信息, 取文本注册项 (1, 相加 (类型注册项名, “\DefaultIcon\”), ))
        赋值 (文件路径, 取文本左边 (文件图标信息, 相减 (倒找文本 (文件图标信息, “,”, , 假), 1)))
        赋值 (文件图标索引, 到数值 (取文本右边 (文件图标信息, 相减 (取文本长度 (文件图标信息), 倒找文本 (文件图标信息, “,”, , 假)))))
        赋值 (图片索引, 未知支持库函数_26 (文件图片组, 文件路径, 文件图标索引))
    .否则
        赋值 (图片索引, 未知支持库函数_26 (文件图片组, 文件名, ))
    .如果结束
    .如果真 (等于 (图片索引, -1))
        赋值 (图片索引, 未知支持库函数_26 (文件图片组, 相加 (未知支持库函数_7 (10), “shell32.dll”), ))
    .如果真结束
    
.如果结束
返回 (图片索引)

.子程序 显示找到文件, 空白型, , 
.局部变量 图片组, 字节集, , , 
.局部变量 图片索引, 整数型, , , 
.局部变量 索引, 整数型, , , 
.局部变量 大小, 整数型, , , 

全部删除 ()
.如果 (等于 (., 0))
    赋值 (图片组, 未知支持库函数_30 (32, 32))
    .如果真 (等于 (未知支持库函数_24 (图片组, #文件夹32, #白色), -1))
        返回 ()
    .如果真结束
    .如果真 (等于 (未知支持库函数_24 (图片组, #无关联32, #白色), -1))
        返回 ()
    .如果真结束
    
.否则
    赋值 (图片组, 未知支持库函数_30 (16, 16))
    .如果真 (等于 (未知支持库函数_24 (图片组, #文件夹16, #白色), -1))
        返回 ()
    .如果真结束
    .如果真 (等于 (未知支持库函数_24 (图片组, #无关联16, #白色), -1))
        返回 ()
    .如果真结束
    
.如果结束
查找句柄.到首记录 ()
.如果 (等于 (位与 (取文件属性 (查找句柄.读 (4)), 16), 0))
    赋值 (.内容, 相加 (“        详细信息”, #换行符, #换行符, “所在分类：”, 取分类名称 (查找句柄.读 (1)), #换行符, #换行符, “软件大小：”, 数值到格式文本 (查找句柄.读 (11), 0, 真), “ kb”, #换行符, “软件版本：”, 查找句柄.读 (5), #换行符, “软件作者：”, 查找句柄.读 (6), #换行符, “适用平台：”, 查找句柄.读 (7), #换行符, “软件主页：”, 查找句柄.读 (8), #换行符, “下载地址：”, 查找句柄.读 (9), #换行符, “本地位置：”, 查找句柄.读 (4), #换行符, #换行符, 查找句柄.读 (10)))
.否则
    赋值 (.内容, 相加 (“        详细信息”, #换行符, #换行符, “所在分类：”, 取分类名称 (查找句柄.读 (1)), #换行符, #换行符, “软件大小：”, 到文本 (查找句柄.读 (13)), “个文件夹,”, 到文本 (查找句柄.读 (12)), “个文件,”, 数值到格式文本 (查找句柄.读 (11), 0, 真), “ kb”, #换行符, “软件版本：”, 查找句柄.读 (5), #换行符, “软件作者：”, 查找句柄.读 (6), #换行符, “适用平台：”, 查找句柄.读 (7), #换行符, “软件主页：”, 查找句柄.读 (8), #换行符, “下载地址：”, 查找句柄.读 (9), #换行符, “本地位置：”, 查找句柄.读 (4), #换行符, #换行符, 查找句柄.读 (10)))
.如果结束
.判断循环首 (等于 (查找句柄.尾记录后 (), 假))
    赋值 (图片索引, 取文件图标 (查找句柄.读 (4), 图片组))
    赋值 (., 图片组)
    赋值 (索引, .插入表项 (查找句柄.读 (3), 图片索引, , , 查找句柄.读 (2)))
    .如果真 (等于 (., 3))
        .如果真 (等于 (位与 (取文件属性 (查找句柄.读 (4)), 16), 0))
            赋值 (大小, 取尺寸 (查找句柄.读 (4)))
            索引.置标题 (1, 相加 (数值到格式文本 (大小, 0, 真), “kb”))
        .如果真结束
        索引.置标题 (2, 时间到格式文本 (取文件时间 (查找句柄.读 (4))))
    .如果真结束
    查找句柄.到后一记录 ()
.判断循环尾 ()
赋值 (., 0)

.子程序 读取列表, 空白型, , 
.参数 目的树型框, 树型框, , 

.局部变量 索引, 整数型, , "9", 
.局部变量 变量1, 空白型, , , 
.局部变量 句柄, 整数型, , "10", 

目的树型框.清空 ()
.计次循环首 (9, 变量1)
    赋值 (句柄 [变量1], 相加 (“select * from wjfl where 层次=”, 到文本 (变量1)).查询 ())
.计次循环尾 ()
句柄.到首记录 ( [1])
.判断循环首 (等于 (句柄.尾记录后 ( [1]), 假))
    赋值 (索引 [1], 目的树型框.加入项目 (句柄.读 ( [1], 3), 选择 (等于 (句柄.读 ( [1], 4), 0), 0, 1), 选择 (等于 (句柄.读 ( [1], 4), 0), 0, 1), 到数值 (取文本右边 (句柄.读 ( [1], 2), 2))))
    句柄.到首记录 ( [2])
    .判断循环首 (等于 (句柄.尾记录后 ( [2]), 假))
        .如果真 (近似等于 (句柄.读 ( [2], 2), 句柄.读 ( [1], 2)))
            赋值 (索引 [2], 目的树型框.加入项目 (索引 [1], 句柄.读 ( [2], 3), 选择 (等于 (句柄.读 ( [2], 4), 0), 0, 1), 选择 (等于 (句柄.读 ( [2], 4), 0), 0, 1), 到数值 (取文本右边 (句柄.读 ( [2], 2), 2))))
            句柄.到首记录 ( [3])
            .判断循环首 (等于 (句柄.尾记录后 ( [3]), 假))
                .如果真 (近似等于 (句柄.读 ( [3], 2), 句柄.读 ( [2], 2)))
                    赋值 (索引 [3], 目的树型框.加入项目 (索引 [2], 句柄.读 ( [3], 3), 选择 (等于 (句柄.读 ( [3], 4), 0), 0, 1), 选择 (等于 (句柄.读 ( [3], 4), 0), 0, 1), 到数值 (取文本右边 (句柄.读 ( [3], 2), 2))))
                    句柄.到首记录 ( [4])
                    .判断循环首 (等于 (句柄.尾记录后 ( [4]), 假))
                        .如果真 (近似等于 (句柄.读 ( [4], 2), 句柄.读 ( [3], 2)))
                            赋值 (索引 [4], 目的树型框.加入项目 (索引 [3], 句柄.读 ( [4], 3), 选择 (等于 (句柄.读 ( [4], 4), 0), 0, 1), 选择 (等于 (句柄.读 ( [4], 4), 0), 0, 1), 到数值 (取文本右边 (句柄.读 ( [4], 2), 2))))
                            句柄.到首记录 ( [5])
                            .判断循环首 (等于 (句柄.尾记录后 ( [5]), 假))
                                .如果真 (近似等于 (句柄.读 ( [5], 2), 句柄.读 ( [4], 2)))
                                    赋值 (索引 [5], 目的树型框.加入项目 (索引 [4], 句柄.读 ( [5], 3), 选择 (等于 (句柄.读 ( [5], 4), 0), 0, 1), 选择 (等于 (句柄.读 ( [5], 4), 0), 0, 1), 到数值 (取文本右边 (句柄.读 ( [5], 2), 2))))
                                    句柄.到首记录 ( [6])
                                    .判断循环首 (等于 (句柄.尾记录后 ( [6]), 假))
                                        .如果真 (近似等于 (句柄.读 ( [6], 2), 句柄.读 ( [5], 2)))
                                            赋值 (索引 [6], 目的树型框.加入项目 (索引 [5], 句柄.读 ( [6], 3), 选择 (等于 (句柄.读 ( [6], 4), 0), 0, 1), 选择 (等于 (句柄.读 ( [6], 4), 0), 0, 1), 到数值 (取文本右边 (句柄.读 ( [6], 2), 2))))
                                            句柄.到首记录 ( [7])
                                            .判断循环首 (等于 (句柄.尾记录后 ( [7]), 假))
                                                .如果真 (近似等于 (句柄.读 ( [7], 2), 句柄.读 ( [6], 2)))
                                                    赋值 (索引 [7], 目的树型框.加入项目 (索引 [6], 句柄.读 ( [7], 3), 选择 (等于 (句柄.读 ( [7], 4), 0), 0, 1), 选择 (等于 (句柄.读 ( [7], 4), 0), 0, 1), 到数值 (取文本右边 (句柄.读 ( [7], 2), 2))))
                                                    句柄.到首记录 ( [8])
                                                    .判断循环首 (等于 (句柄.尾记录后 ( [8]), 假))
                                                        .如果真 (近似等于 (句柄.读 ( [8], 2), 句柄.读 ( [7], 2)))
                                                            赋值 (索引 [8], 目的树型框.加入项目 (索引 [7], 句柄.读 ( [8], 3), 选择 (等于 (句柄.读 ( [8], 4), 0), 0, 1), 选择 (等于 (句柄.读 ( [8], 4), 0), 0, 1), 到数值 (取文本右边 (句柄.读 ( [8], 2), 2))))
                                                            句柄.到首记录 ( [9])
                                                            .判断循环首 (等于 (句柄.尾记录后 ( [9]), 假))
                                                                .如果真 (近似等于 (句柄.读 ( [9], 2), 句柄.读 ( [8], 2)))
                                                                    赋值 (索引 [9], 目的树型框.加入项目 (索引 [8], 句柄.读 ( [9], 3), 选择 (等于 (句柄.读 ( [9], 4), 0), 0, 1), 选择 (等于 (句柄.读 ( [9], 4), 0), 0, 1), 到数值 (取文本右边 (句柄.读 ( [9], 2), 2))))
                                                                .如果真结束
                                                                句柄.到后一记录 ( [9])
                                                            .判断循环尾 ()
                                                        .如果真结束
                                                        句柄.到后一记录 ( [8])
                                                    .判断循环尾 ()
                                                .如果真结束
                                                句柄.到后一记录 ( [7])
                                            .判断循环尾 ()
                                        .如果真结束
                                        句柄.到后一记录 ( [6])
                                    .判断循环尾 ()
                                .如果真结束
                                句柄.到后一记录 ( [5])
                            .判断循环尾 ()
                        .如果真结束
                        句柄.到后一记录 ( [4])
                    .判断循环尾 ()
                .如果真结束
                句柄.到后一记录 ( [3])
            .判断循环尾 ()
        .如果真结束
        句柄.到后一记录 ( [2])
    .判断循环尾 ()
    句柄.到后一记录 ( [1])
.判断循环尾 ()
.计次循环首 (9, 变量1)
    句柄.关闭记录集 ( [变量1])
.计次循环尾 ()
.计次循环首 (目的树型框.取项目数 (), 变量1)
    .如果真 (等于 (目的树型框.是否有子项目 (相减 (变量1, 1)), 假))
        目的树型框.置图片 (相减 (变量1, 1), 相加 (目的树型框.取图片 (相减 (变量1, 1)), 2))
        目的树型框.置选中图片 (相减 (变量1, 1), 相加 (目的树型框.取选中图片 (相减 (变量1, 1)), 2))
    .如果真结束
    .如果真 (等于 (目的树型框.取缩进层次 (相减 (变量1, 1)), 1))
        目的树型框.扩展 (相减 (变量1, 1))
    .如果真结束
    
.计次循环尾 ()

.子程序 取分类名称, 文本型, , 
.参数 分类编码, 文本型, , 

.局部变量 变量1, 整数型, , , 
.局部变量 名称, 文本型, , , 
.局部变量 句柄, 整数型, , , 

.计次循环首 (相除 (取文本长度 (分类编码), 2), 变量1)
    赋值 (句柄, 相加 (“select * from wjfl where 层次=”, 到文本 (变量1), “ and 编号='”, 取文本左边 (分类编码, 相乘 (变量1, 2)), “'”).查询 ())
    赋值 (名称, 相加 (名称, 句柄.读 (3), “ => ”))
    句柄.关闭记录集 ()
.计次循环尾 ()
赋值 (名称, 取文本左边 (名称, 相减 (取文本长度 (名称), 4)))
返回 (名称)

.子程序 取尺寸, 整数型, , 
.参数 文件名, 文本型, , 

.局部变量 大小, 整数型, , , 

赋值 (大小, 取绝对值 (取文件尺寸 (文件名)))
.如果 (不等于 (求余数 (大小, 1024), 0))
    赋值 (大小, 相加 (整除 (大小, 1024), 1))
.否则
    赋值 (大小, 整除 (大小, 1024))
.如果结束
返回 (大小)

.子程序 搜寻, 空白型, , 
.参数 目录, 文本型, , 

.局部变量 搜寻目录, 文本型, , , 
.局部变量 文件名, 文本型, , , 

赋值 (搜寻目录, 目录)
.如果真 (不等于 (取文本右边 (搜寻目录, 1), “\”))
    赋值 (搜寻目录, 相加 (搜寻目录, “\”))
.如果真结束
赋值 (文件名, 寻找文件 (相加 (搜寻目录, “*.*”), ))
.判断循环首 (不等于 (文件名, “”))
    赋值 (尺寸, 相加 (尺寸, 取尺寸 (相加 (搜寻目录, 文件名))))
    赋值 (文件数, 相加 (文件数, 1))
    赋值 (文件名, 寻找文件 ())
.判断循环尾 ()
赋值 (文件名, 寻找文件 (相加 (搜寻目录, “*”), #子目录))
.判断循环首 (不等于 (文件名, “”))
    .如果真 (不等于 (取文本左边 (文件名, 1), “.”))
        赋值 (目录数, 相加 (目录数, 1))
        搜寻 (相加 (搜寻目录, 文件名))
    .如果真结束
    赋值 (文件名, 寻找文件 (#子目录))
.判断循环尾 ()

.子程序 _刻盘提醒_被选择, 空白型, , 
赋值 (主窗口., 假)
载入 (提醒设置窗口, , 真)
赋值 (主窗口., .选中)

.子程序 _数据备份设置_被选择, 空白型, , 
赋值 (主窗口., 假)
载入 (备份设置窗口, , 真)
赋值 (主窗口., .选中)

.子程序 _刻盘整理_被选择, 空白型, , 
赋值 (主窗口., 假)
载入 (刻盘整理窗口, , 真)
赋值 (主窗口., .选中)

.子程序 _数据备份_被选择, 空白型, , 
.局部变量 备份目录, 文本型, , , 

赋值 (备份目录, 读加密配置项 (子文本替换 (相加 (取运行目录 (), “\data\sysdata.efm”), “\\”, “\”, , , 真), #版本信息, 当前用户, “备份目录”, “”))
.如果真 (等于 (备份目录, “”))
    赋值 (主窗口., 假)
    信息框 (“请先设置备份目录，然后再执行备份操作。”, #信息图标, )
    赋值 (主窗口., .选中)
    返回 ()
.如果真结束
.如果真 (等于 (寻找文件 (备份目录, 16), “”))
    赋值 (主窗口., 假)
    信息框 (“你所设置的备份目录不存在，请先创建该目录，或重新设置有效的数据备份目录！”, #信息图标, )
    赋值 (主窗口., .选中)
    返回 ()
.如果真结束
赋值 (.类型, 1)
赋值 (.标题, “备份用户数据：”)
赋值 (.文件名, 相加 (备份目录, “\efm.efk”))
赋值 (.过滤器, “EFM数据备份文件(*.efk)|*.efk|”)
赋值 (.初始目录, 备份目录)
.如果真 (打开 ())
    .如果真 (不等于 (取文本右边 (到小写 (.文件名), 3), “efk”))
        赋值 (.文件名, 相加 (.文件名, “.efk”))
    .如果真结束
    关闭 ()
    .如果 (等于 (子文本替换 (相加 (取运行目录 (), “\data”), “\\”, “\”, , , 真).未知支持库函数_0 (.文件名), 1))
        赋值 (主窗口., 假)
        信息框 (相加 (“备份用户数据至 ”, #左引号, 到小写 (.文件名), #右引号, “ 完成！”), #信息图标, “数据备份”)
        赋值 (主窗口., .选中)
    .否则
        赋值 (主窗口., 假)
        信息框 (“备份用户数据失败！请检查你的系统并稍候再试。”, #错误图标, “数据备份失败”)
        赋值 (主窗口., .选中)
    .如果结束
    子文本替换 (相加 (取运行目录 (), “\data\”, 用户目录, “filedata.efm”), “\\”, “\”, , , 真).打开MDB数据库 ()
.如果真结束


.子程序 _数据还原_被选择, 空白型, , 
.局部变量 备份目录, 文本型, , , 

赋值 (备份目录, 读加密配置项 (子文本替换 (相加 (取运行目录 (), “\data\sysdata.efm”), “\\”, “\”, , , 真), #版本信息, 当前用户, “备份目录”, “”))
赋值 (.类型, 0)
赋值 (.标题, “还原用户数据：”)
赋值 (.文件名, “”)
赋值 (.过滤器, “EFM数据备份文件(*.efk)|*.efk|”)
.如果真 (不等于 (备份目录, “”))
    赋值 (.初始目录, 备份目录)
.如果真结束
.如果真 (打开 ())
    关闭 ()
    .如果 (等于 (.未知支持库函数_2 (.文件名, 子文本替换 (相加 (取运行目录 (), “\data”), “\\”, “\”, , , 真)), 1))
        赋值 (主窗口., 假)
        信息框 (相加 (“从文件 ”, #左引号, 到小写 (.文件名), #右引号, “ 还原用户数据完成！”), #信息图标, “数据备份”)
        赋值 (主窗口., .选中)
    .否则
        赋值 (主窗口., 假)
        信息框 (“还原用户数据失败！请检查你的系统并稍候再试。”, #错误图标, “数据备份失败”)
        赋值 (主窗口., .选中)
    .如果结束
    子文本替换 (相加 (取运行目录 (), “\data\”, 用户目录, “filedata.efm”), “\\”, “\”, , , 真).打开MDB数据库 ()
    读取列表 ()
    赋值 (.最大化按钮, 0)
    _树型框1_项目被选择 (2)
.如果真结束


.子程序 _编辑框2_内容被改变, 空白型, , 
.局部变量 句柄, 整数型, , , 
.局部变量 文件个数, 整数型, , , 

.如果真 (不等于 (.内容, “”))
    赋值 (文件全名, .内容)
    赋值 (操作, 1)
    .如果真 (是否已创建 (文件信息窗口))
        返回 ()
    .如果真结束
    显示窗口 (主窗口.取窗口句柄 (), 2)
    显示窗口 (主窗口.取窗口句柄 (), 9)
    .如果真 (并且 (等于 (.最大化按钮, 相减 (取项目数 (), 1)), 等于 (.取项目文本 (.最大化按钮), “查找结果”)))
        赋值 (.最大化按钮, 0)
        _树型框1_项目被选择 (2)
    .如果真结束
    赋值 (文件编号, 0)
    赋值 (现行分类, .最大化按钮)
    赋值 (主窗口., 假)
    载入 (文件信息窗口, , 真)
    赋值 (主窗口., .选中)
    赋值 (.内容, “”)
    赋值 (文件全名, “”)
    .如果真 (等于 (操作, 4))
        .如果 (不等于 (现行分类, .最大化按钮))
            赋值 (.最大化按钮, 现行分类)
            _树型框1_项目被选择 (2)
        .否则
            加入文件 ()
        .如果结束
        赋值 (句柄, 相加 (“select * from wjfl where 编号='”, 现行分类编码, “'”).查询 ())
        赋值 (文件个数, 句柄.读 (4))
        句柄.关闭记录集 ()
        .如果真 (等于 (文件个数, 1))
            .置图片 (.最大化按钮, 相加 (.取图片 (.最大化按钮), 1))
            .置选中图片 (.最大化按钮, 相加 (.取选中图片 (.最大化按钮), 1))
        .如果真结束
        .如果真 (等于 (读加密配置项 (子文本替换 (相加 (取运行目录 (), “\data\sysdata.efm”), “\\”, “\”, , , 真), #版本信息, 当前用户, “提醒”, “假”), “真”))
            提醒 ()
        .如果真结束
        
    .如果真结束
    
.如果真结束


.窗口程序集 窗口程序集2, , , 

.程序集变量 选择分类编码, 文本型, , , 
.子程序 _超级按钮1_被单击, 空白型, , 
.局部变量 大小, 整数型, , , 

.如果真 (打开 ())
    赋值 (.内容, 取文本右边 (.文件名, 相减 (取文本长度 (.文件名), 倒找文本 (.文件名, “\”, , 假))))
    赋值 (.内容, .文件名)
    赋值 (大小, 取尺寸 (.内容))
    赋值 (.内容, 到文本 (大小))
.如果真结束


.子程序 _超级按钮2_被单击, 空白型, , 
.局部变量 文件夹, 文本型, , , 

赋值 (文件夹, 未知支持库函数_2 (“请选择要加入到管理器的文件夹：”, ))
.如果真 (不等于 (文件夹, “”))
    .如果真 (等于 (取文本右边 (文件夹, 1), “\”))
        赋值 (文件夹, 取文本左边 (文件夹, 相减 (取文本长度 (文件夹), 1)))
    .如果真结束
    赋值 (.内容, 取文本右边 (文件夹, 相减 (取文本长度 (文件夹), 倒找文本 (文件夹, “\”, , 假))))
    赋值 (.内容, 文件夹)
    赋值 (尺寸, 0)
    赋值 (文件数, 0)
    赋值 (目录数, 0)
    搜寻 (文件夹)
    赋值 (.内容, 到文本 (尺寸))
.如果真结束


.子程序 _文件信息窗口_创建完毕, 空白型, , 
.局部变量 大小, 整数型, , , 
.局部变量 句柄, 整数型, , , 
.局部变量 句柄2, 空白型, , , 

赋值 (., 相减 (相加 (., 312), 取用户区高度 ()))
赋值 (.内容, 主窗口.取项目文本 (., 主窗口..最大化按钮))
赋值 (选择分类编码, 现行分类编码)
.如果 (等于 (操作, 1))
    .如果真 (不等于 (文件全名, “”))
        .如果 (不等于 (位与 (取文件属性 (文件全名), 16), 0))
            .如果真 (等于 (取文本右边 (文件全名, 1), “\”))
                赋值 (文件全名, 取文本左边 (文件全名, 相减 (取文本长度 (文件全名), 1)))
            .如果真结束
            赋值 (.内容, 取文本右边 (文件全名, 相减 (取文本长度 (文件全名), 倒找文本 (文件全名, “\”, , 假))))
            赋值 (.内容, 文件全名)
            赋值 (., 真)
            赋值 (尺寸, 0)
            赋值 (文件数, 0)
            赋值 (目录数, 0)
            搜寻 (文件全名)
            赋值 (.内容, 到文本 (尺寸))
        .否则
            赋值 (文件数, 1)
            赋值 (目录数, 0)
            赋值 (.内容, 取文本右边 (文件全名, 相减 (取文本长度 (文件全名), 倒找文本 (文件全名, “\”, , 假))))
            赋值 (.内容, 文件全名)
            赋值 (大小, 取尺寸 (.内容))
            赋值 (.内容, 到文本 (大小))
        .如果结束
        连续赋值 (真, ., .)
    .如果真结束
    
.否则
    赋值 (文件编号, 主窗口.取表项数值 (., 主窗口..))
    赋值 (句柄, 主窗口.查询 (., 相加 (“select * from wjxx where 分类编码='”, 现行分类编码, “' and 文件编号=”, 到文本 (文件编号))))
    主窗口.到首记录 (., 句柄)
    赋值 (.内容, 主窗口.读 (., 句柄, 3))
    赋值 (.内容, 主窗口.读 (., 句柄, 4))
    赋值 (.内容, 主窗口.读 (., 句柄, 5))
    赋值 (.内容, 主窗口.读 (., 句柄, 6))
    赋值 (.内容, 主窗口.读 (., 句柄, 7))
    赋值 (.内容, 主窗口.读 (., 句柄, 8))
    赋值 (.内容, 主窗口.读 (., 句柄, 9))
    赋值 (.内容, 主窗口.读 (., 句柄, 10))
    赋值 (.内容, 主窗口.读 (., 句柄, 5))
    主窗口.关闭记录集 (., 句柄)
    .如果 (等于 (位与 (取文件属性 (.内容), 16), 0))
        赋值 (大小, 取尺寸 (.内容))
        赋值 (.内容, 到文本 (大小))
        赋值 (文件数, 1)
        赋值 (目录数, 0)
    .否则
        赋值 (., 真)
        赋值 (尺寸, 0)
        赋值 (文件数, 0)
        赋值 (目录数, 0)
        搜寻 (.内容)
        赋值 (.内容, 到文本 (尺寸))
    .如果结束
    
.如果结束


.子程序 _超级按钮4_被单击, 空白型, , 
.如果真 (打开 ())
    赋值 (.内容, 到文本 (读入文件 (.文件名)))
.如果真结束


.子程序 _按钮2_被单击, 空白型, , 
销毁 ()

.子程序 _按钮1_被单击, 空白型, , 
.局部变量 文件信息, 文本型, , , 
.局部变量 句柄, 整数型, , , 
.局部变量 文件个数, 整数型, , , 
.局部变量 文件索引, 整数型, , , 

.如果真 (等于 (.内容, “”))
    信息框 (“请输入文件名称！”, #信息图标, )
    获取焦点 ()
    返回 ()
.如果真结束
.如果真 (等于 (.内容, “”))
    信息框 (“请输入文件说明信息！”, #信息图标, )
    获取焦点 ()
    返回 ()
.如果真结束
.如果 (等于 (操作, 2))
    .如果 (不等于 (现行分类编码, 选择分类编码))
        赋值 (句柄, 主窗口.查询 (., 相加 (“select * from wjfl where 编号='”, 现行分类编码, “'”)))
        赋值 (文件个数, 主窗口.读 (., 句柄, 4))
        主窗口.关闭记录集 (., 句柄)
        主窗口.执行 (., 相加 (“update wjfl set 数目=”, 到文本 (相减 (文件个数, 1)), “ where 编号='”, 现行分类编码, “'”), )
        .如果真 (等于 (文件个数, 1))
            主窗口.置图片 (., 主窗口..最大化按钮, 相减 (主窗口.取图片 (., 主窗口..最大化按钮), 1))
            主窗口.置选中图片 (., 主窗口..最大化按钮, 相减 (主窗口.取选中图片 (., 主窗口..最大化按钮), 1))
        .如果真结束
        赋值 (句柄, 主窗口.查询 (., 相加 (“select * from wjxx where 分类编码='”, 选择分类编码, “' order by 文件编号”)))
        赋值 (文件索引, 1)
        .如果真 (不等于 (句柄, 0))
            主窗口.到首记录 (., 句柄)
            .判断循环首 (等于 (主窗口.尾记录后 (., 句柄), 假))
                .如果真 (不等于 (主窗口.读 (., 句柄, 2), 文件索引))
                    跳出循环 ()
                .如果真结束
                主窗口.到后一记录 (., 句柄)
                赋值 (文件索引, 相加 (文件索引, 1))
            .判断循环尾 ()
            主窗口.关闭记录集 (., 句柄)
        .如果真结束
        主窗口.执行 (., 相加 (“update wjxx set 分类编码='”, 选择分类编码, “',文件编号=”, 到文本 (文件索引), “,软件名称='”, .内容, “',软件位置='”, .内容, “',软件版本='”, .内容, “',软件作者='”, .内容, “',适用平台='”, .内容, “',软件主页='”, .内容, “',下载链接='”, .内容, “',详细说明=?,文件大小=”, 到文本 (.内容), “,文件数目=”, 到文本 (文件数), “,目录数目=”, 到文本 (目录数), “ where 分类编码='”, 现行分类编码, “' and 文件编号=”, 到文本 (主窗口.取表项数值 (., 主窗口..))), .内容)
        赋值 (句柄, 主窗口.查询 (., 相加 (“select * from wjfl where 编号='”, 选择分类编码, “'”)))
        赋值 (文件个数, 主窗口.读 (., 句柄, 4))
        主窗口.关闭记录集 (., 句柄)
        主窗口.执行 (., 相加 (“update wjfl set 数目=”, 到文本 (相加 (文件个数, 1)), “ where 编号='”, 选择分类编码, “'”), )
    .否则
        主窗口.执行 (., 相加 (“update wjxx set 分类编码='”, 选择分类编码, “',文件编号=”, 到文本 (文件编号), “,软件名称='”, .内容, “',软件位置='”, .内容, “',软件版本='”, .内容, “',软件作者='”, .内容, “',适用平台='”, .内容, “',软件主页='”, .内容, “',下载链接='”, .内容, “',详细说明=?,文件大小=”, 到文本 (.内容), “,文件数目=”, 到文本 (文件数), “,目录数目=”, 到文本 (目录数), “ where 分类编码='”, 现行分类编码, “' and 文件编号=”, 到文本 (主窗口.取表项数值 (., 主窗口..))), .内容)
    .如果结束
    
.否则
    赋值 (句柄, 主窗口.查询 (., 相加 (“select * from wjxx where 分类编码='”, 选择分类编码, “' order by 文件编号”)))
    赋值 (文件编号, 1)
    .如果真 (不等于 (句柄, 0))
        主窗口.到首记录 (., 句柄)
        .判断循环首 (等于 (主窗口.尾记录后 (., 句柄), 假))
            .如果真 (不等于 (主窗口.读 (., 句柄, 2), 文件编号))
                跳出循环 ()
            .如果真结束
            主窗口.到后一记录 (., 句柄)
            赋值 (文件编号, 相加 (文件编号, 1))
        .判断循环尾 ()
        主窗口.关闭记录集 (., 句柄)
    .如果真结束
    主窗口.执行 (., 相加 (“INSERT INTO wjxx (分类编码,文件编号,软件名称,软件位置,软件版本,软件作者,适用平台,软件主页,下载链接,详细说明,文件大小,文件数目,目录数目) values ('”, 选择分类编码, “',”, 到文本 (文件编号), “,'”, .内容, “','”, .内容, “','”, .内容, “','”, .内容, “','”, .内容, “','”, .内容, “','”, .内容, “',?,”, 到文本 (.内容), “,”, 到文本 (文件数), “,”, 到文本 (目录数), “)”), .内容)
    赋值 (句柄, 主窗口.查询 (., 相加 (“select * from wjfl where 编号='”, 选择分类编码, “'”)))
    赋值 (文件个数, 主窗口.读 (., 句柄, 4))
    主窗口.关闭记录集 (., 句柄)
    主窗口.执行 (., 相加 (“update wjfl set 数目=”, 到文本 (相加 (文件个数, 1)), “ where 编号='”, 选择分类编码, “'”), )
.如果结束
赋值 (操作, 4)
销毁 ()

.子程序 _超级按钮3_被单击, 空白型, , 
.局部变量 句柄, 空白型, , , 

载入 (选择分类窗口, , 真)
.如果真 (不等于 (现行分类编码, 选择分类编码))
    赋值 (句柄, 主窗口.查询 (., 相加 (“select * from wjxx where 分类编码='”, 选择分类编码, “' order by 文件编号”)))
    赋值 (文件编号, 1)
    .如果真 (不等于 (句柄, 0))
        主窗口.到首记录 (., 句柄)
        .判断循环首 (等于 (主窗口.尾记录后 (., 句柄), 假))
            .如果真 (不等于 (主窗口.读 (., 句柄, 2), 文件编号))
                跳出循环 ()
            .如果真结束
            主窗口.到后一记录 (., 句柄)
            赋值 (文件编号, 相加 (文件编号, 1))
        .判断循环尾 ()
        主窗口.关闭记录集 (., 句柄)
    .如果真结束
    
.如果真结束


.子程序 _文件信息窗口_将被销毁, 空白型, , 
.如果真 (不等于 (操作, 4))
    赋值 (操作, 3)
.如果真结束


.程序集 配置文件操作程序集, , , 

.子程序 读加密配置项, 文本型, , 读取失败，返回空文本
.参数 配置文件名, 文本型, , 省略路径,默认为保存在windows系统目录下
.参数 文件密码, 文本型, 可空, 
.参数 配置节名, 文本型, , 
.参数 配置项名, 文本型, , 
.参数 默认文本, 文本型, 可空, 

.局部变量 操作系统目录, 文本型, , , 
.局部变量 读取内容, 文本型, , , 
.局部变量 文件号, 整数型, , , 
.局部变量 取出内容, 文本型, , "0", 

.如果真 (是否为空 (文件密码))
    赋值 (文件密码, “”)
.如果真结束
.如果真 (是否为空 (默认文本))
    赋值 (默认文本, “”)
.如果真结束
赋值 (操作系统目录, 取空白文本 (256))
取操作系统目录 (操作系统目录, 255)
赋值 (操作系统目录, 删首尾空 (操作系统目录))
.如果真 (等于 (寻找文本 (配置文件名, “\”, , 假), -1))
    赋值 (配置文件名, 相加 (操作系统目录, “\”, 配置文件名))
.如果真结束
赋值 (文件号, 打开加密文件 (配置文件名, #读入, , 文件密码, ))
.如果真 (等于 (文件号, 0))
    返回 (默认文本)
.如果真结束
.判断循环首 (等于 (是否在文件尾 (文件号, 真), 假))
    赋值 (读取内容, 读入一行 (文件号))
    .如果真 (等于 (到大写 (读取内容), 到大写 (相加 (“[”, 配置节名, “]”))))
        跳出循环 ()
    .如果真结束
    
.判断循环尾 ()
.判断循环首 (等于 (是否在文件尾 (文件号, 真), 假))
    赋值 (读取内容, 读入一行 (文件号))
    .如果真 (并且 (等于 (取文本左边 (删首尾空 (读取内容), 1), “[”), 等于 (取文本右边 (删首尾空 (读取内容), 1), “]”)))
        跳出循环 ()
    .如果真结束
    .如果真 (不等于 (寻找文本 (读取内容, “=”, , 假), -1))
        赋值 (取出内容, 分割文本 (读取内容, “=”, ))
        .如果真 (大于或等于 (取数组成员数 (取出内容), 2))
            .如果真 (等于 (删首尾空 (取出内容 [1]), 配置项名))
                关闭文件 (文件号)
                .如果真 (等于 (删首尾空 (取文本右边 (读取内容, 相减 (取文本长度 (读取内容), 寻找文本 (读取内容, “=”, , 假)))), “”))
                    返回 (默认文本)
                .如果真结束
                返回 (取文本右边 (读取内容, 相减 (取文本长度 (读取内容), 寻找文本 (读取内容, “=”, , 假))))
            .如果真结束
            
        .如果真结束
        
    .如果真结束
    
.判断循环尾 ()
关闭文件 (文件号)
返回 (默认文本)

.子程序 写加密配置项, 逻辑型, , 
.参数 配置文件名, 文本型, , 省略路径,默认为保存在windows系统目录下
.参数 文件密码, 文本型, 可空, 
.参数 配置节名, 文本型, , 
.参数 配置项名, 文本型, , 
.参数 欲写入值, 文本型, , 不允许写入空值。

.局部变量 操作系统目录, 文本型, , , 
.局部变量 读取内容, 文本型, , , 
.局部变量 文件号, 整数型, , , 
.局部变量 取出内容, 文本型, , "0", 
.局部变量 上次位置, 整数型, , , 
.局部变量 节存在, 逻辑型, , , 
.局部变量 项存在, 逻辑型, , , 

.如果真 (是否为空 (文件密码))
    赋值 (文件密码, “”)
.如果真结束
.如果真 (或者 (等于 (删首尾空 (配置文件名), “”), 等于 (删首尾空 (配置节名), “”), 等于 (删首尾空 (配置项名), “”), 等于 (删首尾空 (欲写入值), “”)))
    返回 (假)
.如果真结束
赋值 (操作系统目录, 取空白文本 (256))
取操作系统目录 (操作系统目录, 255)
赋值 (操作系统目录, 删首尾空 (操作系统目录))
.如果真 (等于 (寻找文本 (配置文件名, “\”, , 假), -1))
    赋值 (配置文件名, 相加 (操作系统目录, “\”, 配置文件名))
.如果真结束
赋值 (文件号, 打开加密文件 (配置文件名, #改读, , 文件密码, ))
.如果真 (等于 (文件号, 0))
    返回 (假)
.如果真结束
赋值 (节存在, 假)
赋值 (项存在, 假)
.判断循环首 (等于 (是否在文件尾 (文件号, 真), 假))
    赋值 (读取内容, 读入一行 (文件号))
    .如果真 (等于 (到大写 (读取内容), 到大写 (相加 (“[”, 配置节名, “]”))))
        赋值 (节存在, 真)
        跳出循环 ()
    .如果真结束
    
.判断循环尾 ()
.如果 (节存在)
    赋值 (上次位置, 取读写位置 (文件号))
    .判断循环首 (等于 (是否在文件尾 (文件号, 真), 假))
        赋值 (上次位置, 取读写位置 (文件号))
        赋值 (读取内容, 读入一行 (文件号))
        .如果真 (并且 (等于 (取文本左边 (删首尾空 (读取内容), 1), “[”), 等于 (取文本右边 (删首尾空 (读取内容), 1), “]”)))
            跳出循环 ()
        .如果真结束
        .如果真 (不等于 (寻找文本 (读取内容, “=”, , 假), -1))
            赋值 (取出内容, 分割文本 (读取内容, “=”, ))
            .如果真 (大于或等于 (取数组成员数 (取出内容), 2))
                .如果真 (等于 (删首尾空 (取出内容 [1]), 配置项名))
                    赋值 (项存在, 真)
                    移动读写位置 (文件号, , 上次位置)
                    删除数据 (文件号, 相加 (取文本长度 (读取内容), 2))
                    移动读写位置 (文件号, , 上次位置)
                    插入文本行 (文件号, 相加 (取出内容 [1], “=”, 欲写入值))
                    关闭文件 (文件号)
                    返回 (真)
                .如果真结束
                
            .如果真结束
            
        .如果真结束
        
    .判断循环尾 ()
    .如果真 (等于 (项存在, 假))
        移动读写位置 (文件号, , 上次位置)
        插入文本行 (文件号, 相加 (配置项名, “=”, 欲写入值))
        关闭文件 (文件号)
        返回 (真)
    .如果真结束
    
.否则
    移到文件尾 (文件号)
    插入文本行 (文件号, 相加 (“[”, 配置节名, “]”))
    插入文本行 (文件号, 相加 (配置项名, “=”, 欲写入值))
    关闭文件 (文件号)
    返回 (真)
.如果结束
关闭文件 (文件号)
返回 (假)

.子程序 取加密配置节名, 逻辑型, , 
.参数 配置文件名, 文本型, , 省略路径,默认为保存在windows系统目录下
.参数 文件密码, 文本型, 可空, 
.参数 配置节名称数组, 文本型, 数组, 保存取出的配置文件节名称数组

.局部变量 操作系统目录, 文本型, , , 
.局部变量 文件号, 整数型, , , 
.局部变量 读取内容, 文本型, , , 

.如果真 (是否为空 (文件密码))
    赋值 (文件密码, “”)
.如果真结束
赋值 (操作系统目录, 取空白文本 (256))
取操作系统目录 (操作系统目录, 255)
赋值 (操作系统目录, 删首尾空 (操作系统目录))
.如果真 (等于 (寻找文本 (配置文件名, “\”, , 假), -1))
    赋值 (配置文件名, 相加 (操作系统目录, “\”, 配置文件名))
.如果真结束
赋值 (文件号, 打开加密文件 (配置文件名, #读入, , 文件密码, ))
.如果真 (等于 (文件号, 0))
    返回 (假)
.如果真结束
清除数组 (配置节名称数组)
.判断循环首 (等于 (是否在文件尾 (文件号, 真), 假))
    赋值 (读取内容, 读入一行 (文件号))
    .如果真 (并且 (等于 (取文本左边 (删首尾空 (读取内容), 1), “[”), 等于 (取文本右边 (删首尾空 (读取内容), 1), “]”)))
        赋值 (读取内容, 子文本替换 (读取内容, “[”, “”, , , 真))
        赋值 (读取内容, 子文本替换 (读取内容, “]”, “”, , , 真))
        加入成员 (配置节名称数组, 删首尾空 (读取内容))
    .如果真结束
    
.判断循环尾 ()
关闭文件 (文件号)
返回 (真)

.子程序 取加密配置项名, 逻辑型, , 
.参数 配置文件名, 文本型, , 省略路径,默认为保存在windows系统目录下
.参数 文件密码, 文本型, 可空, 
.参数 配置节名, 文本型, , 欲取出项目数组的小节名称
.参数 配置项名称数组, 文本型, 数组, 保存取出的配置项名称数组

.局部变量 操作系统目录, 文本型, , , 
.局部变量 文件号, 整数型, , , 
.局部变量 读取内容, 文本型, , , 

.如果真 (是否为空 (文件密码))
    赋值 (文件密码, “”)
.如果真结束
赋值 (操作系统目录, 取空白文本 (256))
取操作系统目录 (操作系统目录, 255)
赋值 (操作系统目录, 删首尾空 (操作系统目录))
.如果真 (等于 (寻找文本 (配置文件名, “\”, , 假), -1))
    赋值 (配置文件名, 相加 (操作系统目录, “\”, 配置文件名))
.如果真结束
赋值 (文件号, 打开加密文件 (配置文件名, #读入, , 文件密码, ))
.如果真 (等于 (文件号, 0))
    返回 (假)
.如果真结束
.判断循环首 (等于 (是否在文件尾 (文件号, 真), 假))
    赋值 (读取内容, 读入一行 (文件号))
    .如果真 (等于 (到大写 (读取内容), 到大写 (相加 (“[”, 配置节名, “]”))))
        跳出循环 ()
    .如果真结束
    
.判断循环尾 ()
清除数组 (配置项名称数组)
.判断循环首 (等于 (是否在文件尾 (文件号, 真), 假))
    赋值 (读取内容, 读入一行 (文件号))
    .如果真 (并且 (等于 (取文本左边 (删首尾空 (读取内容), 1), “[”), 等于 (取文本右边 (删首尾空 (读取内容), 1), “]”)))
        跳出循环 ()
    .如果真结束
    .如果真 (不等于 (寻找文本 (读取内容, “=”, , 假), -1))
        加入成员 (配置项名称数组, 删首尾空 (取文本左边 (读取内容, 相减 (寻找文本 (读取内容, “=”, , 假), 1))))
    .如果真结束
    
.判断循环尾 ()
关闭文件 (文件号)
返回 (真)

.子程序 删除加密配置小节, 逻辑型, , 
.参数 配置文件名, 文本型, , 
.参数 文件密码, 文本型, 可空, 
.参数 配置节名, 文本型, , 

.局部变量 操作系统目录, 文本型, , , 
.局部变量 读取内容, 文本型, , , 
.局部变量 文件号, 整数型, , , 
.局部变量 上次位置, 整数型, , , 
.局部变量 节存在, 逻辑型, , , 

.如果真 (是否为空 (文件密码))
    赋值 (文件密码, “”)
.如果真结束
赋值 (操作系统目录, 取空白文本 (256))
取操作系统目录 (操作系统目录, 255)
赋值 (操作系统目录, 删首尾空 (操作系统目录))
.如果真 (等于 (寻找文本 (配置文件名, “\”, , 假), -1))
    赋值 (配置文件名, 相加 (操作系统目录, “\”, 配置文件名))
.如果真结束
赋值 (文件号, 打开加密文件 (配置文件名, #改读, , 文件密码, ))
.如果真 (等于 (文件号, 0))
    返回 (假)
.如果真结束
赋值 (节存在, 假)
.判断循环首 (等于 (是否在文件尾 (文件号, 真), 假))
    赋值 (上次位置, 取读写位置 (文件号))
    赋值 (读取内容, 读入一行 (文件号))
    .如果真 (等于 (到大写 (读取内容), 到大写 (相加 (“[”, 配置节名, “]”))))
        赋值 (节存在, 真)
        移动读写位置 (文件号, , 上次位置)
        删除数据 (文件号, 相加 (取文本长度 (读取内容), 2))
        移动读写位置 (文件号, , 上次位置)
        跳出循环 ()
    .如果真结束
    
.判断循环尾 ()
.如果真 (等于 (节存在, 假))
    关闭文件 (文件号)
    返回 (节存在)
.如果真结束
.判断循环首 (等于 (是否在文件尾 (文件号, 真), 假))
    赋值 (上次位置, 取读写位置 (文件号))
    赋值 (读取内容, 读入一行 (文件号))
    .如果真 (并且 (等于 (取文本左边 (删首尾空 (读取内容), 1), “[”), 等于 (取文本右边 (删首尾空 (读取内容), 1), “]”)))
        跳出循环 ()
    .如果真结束
    移动读写位置 (文件号, , 上次位置)
    删除数据 (文件号, 相加 (取文本长度 (读取内容), 2))
    移动读写位置 (文件号, , 上次位置)
.判断循环尾 ()
关闭文件 (文件号)
返回 (真)

.子程序 删除加密配置项目, 逻辑型, , 
.参数 配置文件名, 文本型, , 
.参数 文件密码, 文本型, 可空, 
.参数 配置节名, 文本型, , 
.参数 配置项名, 文本型, , 

.局部变量 操作系统目录, 文本型, , , 
.局部变量 读取内容, 文本型, , , 
.局部变量 文件号, 整数型, , , 
.局部变量 取出内容, 文本型, , "0", 
.局部变量 上次位置, 整数型, , , 
.局部变量 节存在, 逻辑型, , , 
.局部变量 项存在, 逻辑型, , , 

.如果真 (是否为空 (文件密码))
    赋值 (文件密码, “”)
.如果真结束
赋值 (操作系统目录, 取空白文本 (256))
取操作系统目录 (操作系统目录, 255)
赋值 (操作系统目录, 删首尾空 (操作系统目录))
.如果真 (等于 (寻找文本 (配置文件名, “\”, , 假), -1))
    赋值 (配置文件名, 相加 (操作系统目录, “\”, 配置文件名))
.如果真结束
赋值 (文件号, 打开加密文件 (配置文件名, #改读, , 文件密码, ))
.如果真 (等于 (文件号, 0))
    返回 (假)
.如果真结束
赋值 (节存在, 假)
赋值 (项存在, 假)
.判断循环首 (等于 (是否在文件尾 (文件号, 真), 假))
    赋值 (读取内容, 读入一行 (文件号))
    .如果真 (等于 (到大写 (读取内容), 到大写 (相加 (“[”, 配置节名, “]”))))
        赋值 (节存在, 真)
        跳出循环 ()
    .如果真结束
    
.判断循环尾 ()
.如果真 (等于 (节存在, 假))
    关闭文件 (文件号)
    返回 (假)
.如果真结束
.判断循环首 (等于 (是否在文件尾 (文件号, 真), 假))
    赋值 (上次位置, 取读写位置 (文件号))
    赋值 (读取内容, 读入一行 (文件号))
    .如果真 (并且 (等于 (取文本左边 (删首尾空 (读取内容), 1), “[”), 等于 (取文本右边 (删首尾空 (读取内容), 1), “]”)))
        跳出循环 ()
    .如果真结束
    .如果真 (不等于 (寻找文本 (读取内容, “=”, , 假), -1))
        赋值 (取出内容, 分割文本 (读取内容, “=”, ))
        .如果真 (大于或等于 (取数组成员数 (取出内容), 2))
            .如果真 (等于 (删首尾空 (取出内容 [1]), 配置项名))
                赋值 (项存在, 真)
                移动读写位置 (文件号, , 上次位置)
                删除数据 (文件号, 相加 (取文本长度 (读取内容), 2))
                移动读写位置 (文件号, , 上次位置)
                关闭文件 (文件号)
                返回 (真)
            .如果真结束
            
        .如果真结束
        
    .如果真结束
    
.判断循环尾 ()
.如果真 (等于 (项存在, 假))
    关闭文件 (文件号)
    返回 (假)
.如果真结束
关闭文件 (文件号)
返回 (真)

.子程序 置配置文件密码, 逻辑型, , 注意，本子程序同样适用于其它任意格式文件的加解密操作！如果在执行本操作时程序被非法中止，将可能导致数据丢失，请用程序自动生成的bak文件手工恢复至原文件。
.参数 配置文件名, 文本型, , 
.参数 原文件密码, 文本型, 可空, 如果原来无密码，则设为“”或保留为空。
.参数 新文件密码, 文本型, 可空, 如果欲取消密码，则设为“”或保留为空。如果新密码等于原密码，将不做任何操作，直接返回真。

.局部变量 操作系统目录, 文本型, , , 
.局部变量 读取内容, 字节集, , , 
.局部变量 文件号, 整数型, , , 

.如果真 (是否为空 (原文件密码))
    赋值 (原文件密码, “”)
.如果真结束
.如果真 (是否为空 (新文件密码))
    赋值 (新文件密码, “”)
.如果真结束
.如果真 (等于 (原文件密码, 新文件密码))
    返回 (真)
.如果真结束
赋值 (操作系统目录, 取空白文本 (256))
取操作系统目录 (操作系统目录, 255)
赋值 (操作系统目录, 删首尾空 (操作系统目录))
.如果真 (等于 (寻找文本 (配置文件名, “\”, , 假), -1))
    赋值 (配置文件名, 相加 (操作系统目录, “\”, 配置文件名))
.如果真结束
复制文件 (配置文件名, 相加 (配置文件名, “.bak”))
赋值 (文件号, 打开加密文件 (配置文件名, #读入, , 原文件密码, ))
.如果真 (等于 (文件号, 0))
    删除文件 (相加 (配置文件名, “.bak”))
    返回 (假)
.如果真结束
赋值 (读取内容, 读入字节集 (文件号, 取文件长度 (文件号)))
关闭文件 (文件号)
赋值 (文件号, 打开加密文件 (配置文件名, #重写, , 新文件密码, ))
.如果真 (等于 (文件号, 0))
    复制文件 (相加 (配置文件名, “.bak”), 配置文件名)
    删除文件 (相加 (配置文件名, “.bak”))
    返回 (假)
.如果真结束
.如果真 (等于 (写出字节集 (文件号, 读取内容), 假))
    关闭文件 (文件号)
    复制文件 (相加 (配置文件名, “.bak”), 配置文件名)
    删除文件 (相加 (配置文件名, “.bak”))
    返回 (假)
.如果真结束
关闭文件 (文件号)
赋值 (读取内容, {  })
删除文件 (相加 (配置文件名, “.bak”))
返回 (真)

.程序集 文件时间程序集, , , 

.子程序 取出文件时间, 整数型, , 非0表示成功
.参数 文件名, 文本型, , 
.参数 创建时间, 日期时间型, 参考 可空, 参数为空，则不取出该时间，下同。
.参数 修改时间, 日期时间型, 参考 可空, 
.参数 访问时间, 日期时间型, 参考 可空, 

.局部变量 文件句柄, 整数型, , , “打开指定文件”所返回的文件句柄
.局部变量 文件创建, 文件时间, , , 
.局部变量 文件访问, 文件时间, , , 
.局部变量 文件修改, 文件时间, , , 
.局部变量 本地创建, 文件时间, , , 
.局部变量 本地访问, 文件时间, , , 
.局部变量 本地修改, 文件时间, , , 
.局部变量 系统创建, 系统时间, , , 
.局部变量 系统访问, 系统时间, , , 
.局部变量 系统修改, 系统时间, , , 
.局部变量 返回值, 整数型, , , 

赋值 (文件句柄, 打开或创建文件 (文件名, #读文件, 相加 (#共亨读, #共亨写), 0, #打开已有文件, 0, 0))
.如果真 (等于 (文件句柄, 0))
    返回 (0)
.如果真结束
赋值 (返回值, 取出指定文件时间 (文件句柄, 文件创建, 文件访问, 文件修改))
.如果 (不等于 (返回值, 0))
    .如果真 (等于 (是否为空 (创建时间), 假))
        .如果真 (等于 (文件时间转换为本地时间 (文件创建, 本地创建), 0))
            关闭文件对象 (文件句柄)
            返回 (0)
        .如果真结束
        .如果真 (等于 (本地时间转换为系统时间 (本地创建, 系统创建), 0))
            关闭文件对象 (文件句柄)
            返回 (0)
        .如果真结束
        赋值 (创建时间, 指定时间 (系统创建.年, 系统创建.月, 系统创建.日, 系统创建.小时, 系统创建.分钟, 系统创建.秒))
    .如果真结束
    .如果真 (等于 (是否为空 (访问时间), 假))
        .如果真 (等于 (文件时间转换为本地时间 (文件访问, 本地访问), 0))
            关闭文件对象 (文件句柄)
            返回 (0)
        .如果真结束
        .如果真 (等于 (本地时间转换为系统时间 (本地访问, 系统访问), 0))
            关闭文件对象 (文件句柄)
            返回 (0)
        .如果真结束
        赋值 (访问时间, 指定时间 (系统访问.年, 系统访问.月, 系统访问.日, 系统访问.小时, 系统访问.分钟, 系统访问.秒))
    .如果真结束
    .如果真 (等于 (是否为空 (修改时间), 假))
        .如果真 (等于 (文件时间转换为本地时间 (文件修改, 本地修改), 0))
            关闭文件对象 (文件句柄)
            返回 (0)
        .如果真结束
        .如果真 (等于 (本地时间转换为系统时间 (本地修改, 系统修改), 0))
            关闭文件对象 (文件句柄)
            返回 (0)
        .如果真结束
        赋值 (修改时间, 指定时间 (系统修改.年, 系统修改.月, 系统修改.日, 系统修改.小时, 系统修改.分钟, 系统修改.秒))
    .如果真结束
    关闭文件对象 (文件句柄)
    返回 (返回值)
.否则
    关闭文件对象 (文件句柄)
    返回 (0)
.如果结束


.子程序 设置文件时间, 整数型, , 非0表示成功
.参数 文件名, 文本型, , 
.参数 创建时间, 日期时间型, 可空, 参数为空，则不改变该时间，下同。
.参数 修改时间, 日期时间型, 可空, 
.参数 访问时间, 日期时间型, 可空, 

.局部变量 文件句柄, 整数型, , , “打开指定文件”所返回的文件句柄
.局部变量 文件创建, 文件时间, , , 
.局部变量 文件访问, 文件时间, , , 
.局部变量 文件修改, 文件时间, , , 
.局部变量 本地创建, 文件时间, , , 
.局部变量 本地访问, 文件时间, , , 
.局部变量 本地修改, 文件时间, , , 
.局部变量 系统创建, 系统时间, , , 
.局部变量 系统访问, 系统时间, , , 
.局部变量 系统修改, 系统时间, , , 
.局部变量 结果, 整数型, , , 

赋值 (文件句柄, 打开或创建文件 (文件名, #读文件, 相加 (#共亨读, #共亨写), 0, #打开已有文件, 0, 0))
.如果真 (等于 (文件句柄, 0))
    返回 (0)
.如果真结束
.如果真 (等于 (是否为空 (创建时间), 假))
    赋值 (系统创建.年, 取时间部分 (创建时间, #年份))
    赋值 (系统创建.月, 取时间部分 (创建时间, #月份))
    赋值 (系统创建.日, 取时间部分 (创建时间, #日))
    赋值 (系统创建.小时, 取时间部分 (创建时间, #小时))
    赋值 (系统创建.分钟, 取时间部分 (创建时间, #分钟))
    赋值 (系统创建.秒, 取时间部分 (创建时间, #秒))
    系统时间转换为本地时间 (系统创建, 本地创建)
    本地时间转换为文件时间 (本地创建, 文件创建)
.如果真结束
.如果真 (等于 (是否为空 (修改时间), 假))
    赋值 (系统修改.年, 取时间部分 (修改时间, #年份))
    赋值 (系统修改.月, 取时间部分 (修改时间, #月份))
    赋值 (系统修改.日, 取时间部分 (修改时间, #日))
    赋值 (系统修改.小时, 取时间部分 (修改时间, #小时))
    赋值 (系统修改.分钟, 取时间部分 (修改时间, #分钟))
    赋值 (系统修改.秒, 取时间部分 (修改时间, #秒))
    系统时间转换为本地时间 (系统修改, 本地修改)
    本地时间转换为文件时间 (本地修改, 文件修改)
.如果真结束
.如果真 (等于 (是否为空 (访问时间), 假))
    赋值 (系统访问.年, 取时间部分 (访问时间, #年份))
    赋值 (系统访问.月, 取时间部分 (访问时间, #月份))
    赋值 (系统访问.日, 取时间部分 (访问时间, #日))
    赋值 (系统访问.小时, 取时间部分 (访问时间, #小时))
    赋值 (系统访问.分钟, 取时间部分 (访问时间, #分钟))
    赋值 (系统访问.秒, 取时间部分 (访问时间, #秒))
    系统时间转换为本地时间 (系统访问, 本地访问)
    本地时间转换为文件时间 (本地访问, 文件访问)
.如果真结束
赋值 (结果, 设置指定文件时间 (文件句柄, 文件创建, 文件访问, 文件修改))
关闭文件对象 (文件句柄)
返回 (结果)

.窗口程序集 窗口程序集3, , , 

.子程序 _文件属性窗口_创建完毕, 空白型, , 
.局部变量 创建时间, 日期时间型, , , 
.局部变量 修改时间, 日期时间型, , , 
.局部变量 访问时间, 日期时间型, , , 
.局部变量 文件属性, 整数型, , , 
.局部变量 图片组, 字节集, , , 
.局部变量 只读, 逻辑型, , , 

赋值 (., 相减 (相加 (., 252), 取用户区高度 ()))
赋值 (图片组, 未知支持库函数_30 (32, 32))
未知支持库函数_24 (图片组, #文件夹32, )
赋值 (.图片, 未知支持库函数_31 (图片组, 取文件图标 (文件全名, 图片组), #浅灰))
赋值 (文件属性, 取文件属性 (文件全名))
赋值 (.选中, 不等于 (位与 (文件属性, 1), 0))
赋值 (.选中, 不等于 (位与 (文件属性, 32), 0))
赋值 (.选中, 不等于 (位与 (文件属性, 2), 0))
赋值 (.选中, 不等于 (位与 (文件属性, 4), 0))
.如果 (不等于 (位与 (文件属性, 16), 0))
    连续赋值 (真, .禁止, .禁止, .禁止)
.否则
    .如果真 (不等于 (位与 (文件属性, 1), 0))
        赋值 (只读, 真)
        置文件属性 (文件全名, 相减 (文件属性, 1))
    .如果真结束
    取出文件时间 (文件全名, 创建时间, 修改时间, 访问时间)
    赋值 (.内容, 到文本 (创建时间))
    赋值 (.内容, 到文本 (修改时间))
    赋值 (.内容, 到文本 (访问时间))
    .如果真 (只读)
        赋值 (文件属性, 取文件属性 (文件全名))
        置文件属性 (文件全名, 相加 (文件属性, 1))
    .如果真结束
    
.如果结束
赋值 (.标题, 文件全名)

.子程序 _按钮1_被单击, 空白型, , 
.局部变量 文件属性, 整数型, , , 

赋值 (文件属性, 取文件属性 (文件全名))
置文件属性 (文件全名, 0) ' 本行代码目的是为了取消文件或文件夹的只读属性
.如果真 (等于 (位与 (文件属性, 16), 0))
    设置文件时间 (文件全名, 到时间 (.内容), 到时间 (.内容), 到时间 (.内容))
.如果真结束
赋值 (文件属性, 0)
.如果真 (.选中)
    赋值 (文件属性, 相加 (文件属性, 1))
.如果真结束
.如果真 (.选中)
    赋值 (文件属性, 相加 (文件属性, 32))
.如果真结束
.如果真 (.选中)
    赋值 (文件属性, 相加 (文件属性, 2))
.如果真结束
.如果真 (.选中)
    赋值 (文件属性, 相加 (文件属性, 4))
.如果真结束
置文件属性 (文件全名, 文件属性)
销毁 ()

.子程序 _按钮2_被单击, 空白型, , 
销毁 ()

.窗口程序集 窗口程序集4, , , 

.子程序 _按钮2_被单击, 空白型, , 
销毁 ()

.子程序 _按钮1_被单击, 空白型, , 
.局部变量 查询文本, 文本型, , , 

赋值 (查询文本, “select * from wjxx where ”)
.判断开始 (.选中)
    赋值 (查询文本, 相加 (查询文本, “分类编码='”, 现行分类编码, “' and ”))
.判断 (.选中)
    赋值 (查询文本, 相加 (查询文本, “分类编码 like '”, 取文本左边 (现行分类编码, 相减 (取文本长度 (现行分类编码), 2)), “%' and ”))
.判断 (.选中)
    赋值 (查询文本, 相加 (查询文本, “分类编码 like '”, 取文本左边 (现行分类编码, 2), “%' and ”))
.默认
    
.判断结束
赋值 (查询文本, 相加 (查询文本, “(”))
.如果真 (.选中)
    赋值 (查询文本, 相加 (查询文本, “软件名称 like '%”, .内容, “%' or ”))
.如果真结束
.如果真 (.选中)
    赋值 (查询文本, 相加 (查询文本, “软件作者 like '%”, .内容, “%' or ”))
.如果真结束
.如果真 (.选中)
    赋值 (查询文本, 相加 (查询文本, “详细说明 like '%”, .内容, “%' or ”))
.如果真结束
.如果真 (等于 (取文本右边 (查询文本, 3), “or ”))
    赋值 (查询文本, 取文本左边 (查询文本, 相减 (取文本长度 (查询文本), 4)))
.如果真结束
赋值 (查询文本, 相加 (查询文本, “)”))
赋值 (主窗口., 主窗口.查询 (., 查询文本))
主窗口.到首记录 (., 主窗口.)
.如果真 (等于 (主窗口.读 (., 主窗口., 1), “”))
    赋值 (主窗口., 0)
    信息框 (“未找到任何符合条件的文件！请重新设置查找内容及范围。”, #信息图标, )
    返回 ()
.如果真结束
销毁 ()

.子程序 _查找分类文件窗口_创建完毕, 空白型, , 
赋值 (., 相减 (相加 (., 222), 取用户区高度 ()))
.如果真 (等于 (主窗口.取缩进层次 (., 主窗口..最大化按钮), 1))
    赋值 (.禁止, 真)
    赋值 (.禁止, 真)
.如果真结束


.窗口程序集 窗口程序集5, , , 

.子程序 _选择分类窗口_创建完毕, 空白型, , 
赋值 (., 相减 (相加 (., 380), 取用户区高度 ()))
读取列表 ()
赋值 (.最大化按钮, 主窗口..最大化按钮)

.子程序 _按钮2_被单击, 空白型, , 
销毁 ()

.子程序 _按钮1_被单击, 空白型, , 
赋值 (文件信息窗口..内容, .取项目文本 (.最大化按钮))
赋值 (文件信息窗口., 取分类编码 (.最大化按钮))
赋值 (现行分类, .最大化按钮)
销毁 ()

.程序集 启动程序集, , , 

.子程序 _启动子程序, 整数型, , 
.局部变量 参数, 文本型, , "0", 
.局部变量 编辑框句柄, 整数型, , , 

取命令行 (参数)
.如果真 (大于 (取数组成员数 (参数), 0))
    赋值 (操作, 1)
    赋值 (文件全名, 参数 [1])
.如果真结束
.如果真 (不等于 (打开事件同步对象 (2031619, 假, “EasyFilesManagerV1.0”), 0))
    .如果 (不等于 (文件全名, “”))
        赋值 (编辑框句柄, 到数值 (读加密配置项 (子文本替换 (相加 (取运行目录 (), “\data\sysdata.efm”), “\\”, “\”, , , 真), #版本信息, “默认用户”, “接收句柄”, “0”))) ' 记录位置
        发送消息 (编辑框句柄, 12, 2, 文件全名)
        结束 ()
    .否则
        信息框 (“《易用文件管理大师》已经运行，请勿重复运行本程序！”, #信息图标, )
        结束 ()
        返回 (0)
    .如果结束
    
.如果真结束
创建事件同步对象 (0, 假, 假, “EasyFilesManagerV1.0”)
.如果真 (等于 (寻找文件 (“data”, 16), “”))
    信息框 (相加 (“数据目录”, #左引号, “data”, #右引号, “未找到，程序将自动创建该目录。”, #换行符, “如果你不是第一次运行本程序，那么文件分类信息可能已丢失，请使用备份文件还原。”), #信息图标, )
    创建目录 (“data”)
.如果真结束
载入 (登录窗口, , 真)
载入 (主窗口, , 真)
返回 (0)

.窗口程序集 窗口程序集6, , , 

.子程序 _登录窗口_创建完毕, 空白型, , 
.局部变量 用户数组, 文本型, , "0", 
.局部变量 变量1, 空白型, , , 

赋值 (., 相减 (相加 (., 200), 取用户区高度 ()))
取加密配置节名 (子文本替换 (相加 (取运行目录 (), “\data\sysdata.efm”), “\\”, “\”, , , 真), #版本信息, 用户数组)
.判断开始 (小于或等于 (取数组成员数 (用户数组), 1))
    赋值 (当前用户, “默认用户”)
    销毁 ()
.默认
    “默认用户”.加入项目 ()
    .计次循环首 (取数组成员数 (用户数组), 变量1)
        .如果真 (不等于 (用户数组 [变量1], “默认用户”))
            用户数组.加入项目 ( [变量1], )
        .如果真结束
        
    .计次循环尾 ()
    赋值 (.现行选中项, 0)
    _组合框1_列表项被选择 ()
.判断结束


.子程序 _组合框1_列表项被选择, 空白型, , 
.如果 (等于 (读加密配置项 (子文本替换 (相加 (取运行目录 (), “\data\sysdata.efm”), “\\”, “\”, , , 真), #版本信息, .取项目文本 (.现行选中项), “保存密码”, “假”), “真”))
    赋值 (.选中, 真)
    赋值 (.内容, 读加密配置项 (子文本替换 (相加 (取运行目录 (), “\data\sysdata.efm”), “\\”, “\”, , , 真), #版本信息, .取项目文本 (.现行选中项), “密码”, “”))
.否则
    赋值 (.选中, 假)
    赋值 (.内容, “”)
.如果结束
.如果 (等于 (.取项目文本 (.现行选中项), “默认用户”))
    赋值 (.禁止, 真)
    赋值 (.选中, 假)
    赋值 (.禁止, 真)
.否则
    赋值 (.禁止, 假)
    赋值 (.禁止, 假)
    获取焦点 ()
.如果结束


.子程序 _按钮2_被单击, 空白型, , 
.如果真 (等于 (是否已创建 (主窗口), 假))
    结束 ()
.如果真结束
销毁 ()

.子程序 _按钮1_被单击, 空白型, , 
.如果真 (不等于 (.内容, 读加密配置项 (子文本替换 (相加 (取运行目录 (), “\data\sysdata.efm”), “\\”, “\”, , , 真), #版本信息, .取项目文本 (.现行选中项), “密码”, “”)))
    信息框 (“密码错误，请重新输入密码。”, #信息图标, )
    获取焦点 ()
    返回 ()
.如果真结束
赋值 (用户目录, 读加密配置项 (子文本替换 (相加 (取运行目录 (), “\data\sysdata.efm”), “\\”, “\”, , , 真), #版本信息, .取项目文本 (.现行选中项), “目录”, “”))
赋值 (当前用户, .取项目文本 (.现行选中项))
.如果真 (.选中)
    写加密配置项 (子文本替换 (相加 (取运行目录 (), “\data\sysdata.efm”), “\\”, “\”, , , 真), #版本信息, .取项目文本 (.现行选中项), “保存密码”, 到文本 (.选中))
.如果真结束
.如果真 (不等于 (当前用户, “默认用户”))
    .如果真 (等于 (寻找文件 (相加 (“data\”, 用户目录), 16), “”))
        信息框 (相加 (“用户数据目录”, #左引号, 取文本左边 (用户目录, 相减 (取文本长度 (用户目录), 1)), #右引号, “未找到，程序将自动创建该目录，并导入默认文件分类。”, #换行符, “如果确认文件分类信息已丢失，请在用户登录后使用备份文件还原。”), #信息图标, )
        创建目录 (相加 (“data\”, 用户目录))
    .如果真结束
    
.如果真结束
.如果真 (不等于 (用户目录, “”))
    赋值 (用户目录, 相加 (用户目录, “\”))
.如果真结束
销毁 ()

.子程序 _编辑框1_获得焦点, 空白型, , 
赋值 (.被选择字符数, -1)

.窗口程序集 窗口程序集7, , , 

.子程序 _编辑框1_内容被改变, 空白型, , 
赋值 (.内容, .内容)

.子程序 _按钮1_被单击, 空白型, , 
.局部变量 用户数组, 文本型, , "0", 
.局部变量 变量1, 空白型, , , 
.局部变量 目录, 文本型, , , 

取加密配置节名 (子文本替换 (相加 (取运行目录 (), “\data\sysdata.efm”), “\\”, “\”, , , 真), #版本信息, 用户数组)
.如果真 (大于或等于 (取数组成员数 (用户数组), 2))
    删除成员 (用户数组, 1, )
    .计次循环首 (取数组成员数 (用户数组), 变量1)
        .如果真 (等于 (.内容, 用户数组 [变量1]))
            信息框 (相加 (“用户名称”, #左引号, .内容, #右引号, “已经存在，请使用其他用户名。”), #信息图标, )
            获取焦点 ()
            返回 ()
        .如果真结束
        
    .计次循环尾 ()
.如果真结束
.如果真 (不等于 (.内容, .内容))
    信息框 (“校核密码错误，请重新输入用户密码。”, #信息图标, )
    获取焦点 ()
    返回 ()
.如果真结束
.如果真 (等于 (删首尾空 (.内容), “”))
    信息框 (“请设置用户数据保存目录名称。”, #信息图标, )
    获取焦点 ()
    返回 ()
.如果真结束
赋值 (目录, 子文本替换 (.内容, “\”, “”, , , 真))
赋值 (.内容, 目录)
.如果真 (等于 (创建目录 (相加 (“data\”, .内容)), 假))
    信息框 (相加 (“    创建用户数据目录失败。请检查你设置的用户数据目录名称中是否包含非法字”, #换行符, “符，或者该目录已经被其他用户所使用！”), #信息图标, )
    获取焦点 ()
    返回 ()
.如果真结束
写加密配置项 (子文本替换 (相加 (取运行目录 (), “\data\sysdata.efm”), “\\”, “\”, , , 真), #版本信息, .内容, “密码”, .内容)
写加密配置项 (子文本替换 (相加 (取运行目录 (), “\data\sysdata.efm”), “\\”, “\”, , , 真), #版本信息, .内容, “目录”, .内容)
信息框 (“添加用户成功！”, #信息图标, )
连续赋值 (“”, .内容, .内容, .内容, .内容)
获取焦点 ()

.子程序 _编辑框1_获得焦点, 空白型, , 
赋值 (.被选择字符数, -1)

.子程序 _编辑框2_获得焦点, 空白型, , 
赋值 (.被选择字符数, -1)

.子程序 _编辑框3_获得焦点, 空白型, , 
赋值 (.被选择字符数, -1)

.子程序 _编辑框4_获得焦点, 空白型, , 
赋值 (.被选择字符数, -1)

.子程序 _按钮2_被单击, 空白型, , 
销毁 ()

.子程序 _添加用户窗口_创建完毕, 空白型, , 
赋值 (., 相减 (相加 (., 146), 取用户区高度 ()))

.窗口程序集 窗口程序集8, , , 

.子程序 _修改口令窗口_创建完毕, 空白型, , 
赋值 (., 相减 (相加 (., 144), 取用户区高度 ()))
赋值 (.内容, 当前用户)

.子程序 _按钮2_被单击, 空白型, , 
销毁 ()

.子程序 _按钮1_被单击, 空白型, , 
.如果真 (不等于 (.内容, 读加密配置项 (子文本替换 (相加 (取运行目录 (), “\data\sysdata.efm”), “\\”, “\”, , , 真), #版本信息, .内容, “密码”, “”)))
    信息框 (“当前用户原始密码不正确，请重新输入原始密码！”, #信息图标, )
    获取焦点 ()
    返回 ()
.如果真结束
.如果真 (不等于 (.内容, .内容))
    信息框 (“校核密码错误，请重新输入用户密码。”, #信息图标, )
    获取焦点 ()
    返回 ()
.如果真结束
写加密配置项 (子文本替换 (相加 (取运行目录 (), “\data\sysdata.efm”), “\\”, “\”, , , 真), #版本信息, .内容, “密码”, .内容)
销毁 ()

.子程序 _编辑框1_获得焦点, 空白型, , 
赋值 (.被选择字符数, -1)

.子程序 _编辑框2_获得焦点, 空白型, , 
赋值 (.被选择字符数, -1)

.子程序 _编辑框3_获得焦点, 空白型, , 
赋值 (.被选择字符数, -1)

.子程序 _编辑框4_获得焦点, 空白型, , 
赋值 (.被选择字符数, -1)

.窗口程序集 窗口程序集9, , , 

.子程序 _删除用户窗口_创建完毕, 空白型, , 
.局部变量 用户数组, 文本型, , "0", 
.局部变量 变量1, 空白型, , , 

赋值 (., 相减 (相加 (., 142), 取用户区高度 ()))
取加密配置节名 (子文本替换 (相加 (取运行目录 (), “\data\sysdata.efm”), “\\”, “\”, , , 真), #版本信息, 用户数组)
.判断开始 (等于 (取数组成员数 (用户数组), 0))
    销毁 ()
.判断 (并且 (等于 (取数组成员数 (用户数组), 1), 等于 (用户数组 [1], “默认用户”)))
    销毁 ()
.默认
    .计次循环首 (取数组成员数 (用户数组), 变量1)
        .如果真 (不等于 (用户数组 [变量1], “默认用户”))
            用户数组.加入项目 ( [变量1], )
        .如果真结束
        
    .计次循环尾 ()
    赋值 (.现行选中项, 0)
.判断结束


.子程序 _按钮2_被单击, 空白型, , 
销毁 ()

.子程序 _按钮1_被单击, 空白型, , 
.局部变量 目录, 文本型, , , 

.如果真 (不等于 (.内容, 读加密配置项 (子文本替换 (相加 (取运行目录 (), “\data\sysdata.efm”), “\\”, “\”, , , 真), #版本信息, .取项目文本 (.现行选中项), “密码”, “”)))
    信息框 (“密码错误。请输入正确密码，否则你将无权删除该用户！”, #信息图标, )
    获取焦点 ()
    返回 ()
.如果真结束
赋值 (目录, 读加密配置项 (子文本替换 (相加 (取运行目录 (), “\data\sysdata.efm”), “\\”, “\”, , , 真), #版本信息, .取项目文本 (.现行选中项), “目录”, “”))
删除加密配置小节 (子文本替换 (相加 (取运行目录 (), “\data\sysdata.efm”), “\\”, “\”, , , 真), #版本信息, .取项目文本 (.现行选中项))
.如果真 (等于 (信息框 (相加 (“    要同时删除用户”, #左引号, .取项目文本 (.现行选中项), #右引号, “的数据文件目录”, #左引号, 目录, #右引号, “及所有的文件分类信息吗？”, #换行符, “    注意：删除用户数据目录及其文件分类信息，并不会删除其指向的文件本身。但如果保存用户数据目录及其文件分类信息，以后你可以通过将目录改名为其它用户指向的数据目录，以重新查看已有文件分类信息。”), 相加 (#询问图标, #是否钮), ), #是钮))
    .如果真 (等于 (删除目录 (子文本替换 (相加 (取运行目录 (), “\data\”, 目录), “\\”, “\”, , , 真)), 假))
        信息框 (相加 (“删除用户”, #左引号, .取项目文本 (.现行选中项), #右引号, “数据目录”, #左引号, 目录, #右引号, “出错。请转到程序安装目录下，手工删除该目录！”), #信息图标, )
    .如果真结束
    
.如果真结束
.如果真 (等于 (.取项目文本 (.现行选中项), 当前用户))
    信息框 (“你删除了当前登录用户！请在程序关闭后重新启动并登录。”, #信息图标, )
    结束 ()
.如果真结束
销毁 ()

.子程序 _组合框1_列表项被选择, 空白型, , 
获取焦点 ()

.子程序 _编辑框1_获得焦点, 空白型, , 
赋值 (.被选择字符数, -1)

.窗口程序集 窗口程序集10, , , 

.子程序 _提醒设置窗口_创建完毕, 空白型, , 
赋值 (., 相减 (相加 (., 136), 取用户区高度 ()))
赋值 (.选中, 等于 (读加密配置项 (子文本替换 (相加 (取运行目录 (), “\data\sysdata.efm”), “\\”, “\”, , , 真), #版本信息, 当前用户, “提醒”, “真”), “真”))
_选择框1_被单击 ()
赋值 (.内容, 读加密配置项 (子文本替换 (相加 (取运行目录 (), “\data\sysdata.efm”), “\\”, “\”, , , 真), #版本信息, 当前用户, “大小”, “640”))

.子程序 _按钮2_被单击, 空白型, , 
销毁 ()

.子程序 _选择框1_被单击, 空白型, , 
赋值 (.禁止, 取反 (.选中))

.子程序 _按钮1_被单击, 空白型, , 
写加密配置项 (子文本替换 (相加 (取运行目录 (), “\data\sysdata.efm”), “\\”, “\”, , , 真), #版本信息, 当前用户, “提醒”, 到文本 (.选中))
写加密配置项 (子文本替换 (相加 (取运行目录 (), “\data\sysdata.efm”), “\\”, “\”, , , 真), #版本信息, 当前用户, “大小”, .内容)
销毁 ()

.窗口程序集 窗口程序集11, , , 

.程序集变量 长度, 整数型, , , 
.子程序 _刻盘整理窗口_创建完毕, 空白型, , 
赋值 (., 相减 (相加 (., 266), 取用户区高度 ()))

.子程序 _超级按钮1_被单击, 空白型, , 
赋值 (.内容, 未知支持库函数_2 (“请指定分类文件信息相对应的文件所在的文件夹：”, ))

.子程序 _超级按钮2_被单击, 空白型, , 
赋值 (.内容, 未知支持库函数_2 (“请指定一个空文件夹以存放所有分类文件：”, ))

.子程序 _单选框1_被单击, 空白型, , 
连续赋值 (取反 (.选中), .禁止, .)
连续赋值 (取反 (.选中), .禁止, .)

.子程序 _单选框2_被单击, 空白型, , 
连续赋值 (取反 (.选中), .禁止, .)
连续赋值 (取反 (.选中), .禁止, .)

.子程序 _按钮2_被单击, 空白型, , 
销毁 ()

.子程序 _按钮1_被单击, 空白型, , 
.局部变量 数据目录, 文本型, , , 
.局部变量 返回文本, 文本型, , , 
.局部变量 句柄, 整数型, , , 
.局部变量 文件地址, 文本型, , , 
.局部变量 变量1, 整数型, , , 
.局部变量 分类编码, 文本型, , , 
.局部变量 分类目录, 文本型, , , 
.局部变量 文件数组, 文本型, , "0", 
.局部变量 现行项目, 整数型, , , 
.局部变量 需要大小, 空白型, , , 

.如果真 (等于 (.内容, “”))
    信息框 (“请输入光盘名称。”, #信息图标, )
    获取焦点 ()
    返回 ()
.如果真结束
.如果真 (等于 (.内容, “”))
    信息框 (“请输入光盘制作人。”, #信息图标, )
    获取焦点 ()
    返回 ()
.如果真结束
.如果 (.选中)
    .如果真 (等于 (寻找文件 (.内容, 16), “”))
        信息框 (“所设置的数据目录不存在，请重新设置。”, #信息图标, )
        返回 ()
    .如果真结束
    .如果真 (等于 (信息框 (相加 (“    如果分类信息所对应的文件不在你指定的数据目录下，将不能被”, #换行符, “正确整理，刻盘后将无法读取该文件。”, #换行符, “    你确定选择此刻盘方式吗？”), 相加 (#询问图标, #是否钮, #默认按钮二), ), #否钮))
        返回 ()
    .如果真结束
    赋值 (数据目录, .内容)
    .如果真 (不等于 (取文本右边 (数据目录, 1), “\”))
        赋值 (数据目录, 相加 (数据目录, “\”))
    .如果真结束
    .如果真 (等于 (复制文件 (子文本替换 (相加 (取运行目录 (), “\data\”, 用户目录, “filedata.efm”), “\\”, “\”, , , 真), 相加 (数据目录, “softfile.efm”)), 假))
        信息框 (“复制分类数据文件失败，请确定你设置的数据目录可写。”, #信息图标, )
        返回 ()
    .如果真结束
    赋值 (.时钟周期, 300)
    清除数组 (文件数组)
    赋值 (.可视, 真)
    #顶层.调整层次 ()
    刷新显示 ()
    相加 (数据目录, “softfile.efm”).打开MDB数据库 ()
    赋值 (句柄, 主窗口.查询 (., “select * from wjxx”))
    主窗口.到首记录 (., 句柄)
    .判断循环首 (等于 (主窗口.尾记录后 (., 句柄), 假))
        赋值 (文件地址, 主窗口.读 (., 句柄, 4))
        .如果真 (近似等于 (文件地址, 数据目录))
            赋值 (文件地址, 取文本右边 (文件地址, 相减 (取文本长度 (文件地址), 取文本长度 (数据目录))))
        .如果真结束
        相加 (“update wjxx set 软件位置='”, 文件地址, “' where 分类编码='”, 主窗口.读 (., 句柄, 1), “' and 文件编号=”, 到文本 (主窗口.读 (., 句柄, 2))).执行 ()
        主窗口.到后一记录 (., 句柄)
    .判断循环尾 ()
    主窗口.关闭记录集 (., 句柄)
    写到文件 (相加 (数据目录, “EfmSoft.exe”), #运行文件)
    写配置项 (相加 (数据目录, “autorun.inf”), “AutoRun”, “open”, “EfmSoft.exe”)
    写配置项 (相加 (数据目录, “autorun.inf”), “AutoRun”, “icon”, “EfmSoft.exe”)
    写配置项 (相加 (数据目录, “autorun.inf”), “Option”, “title”, .内容)
    写配置项 (相加 (数据目录, “autorun.inf”), “Option”, “maker”, .内容)
    写配置项 (相加 (数据目录, “autorun.inf”), “Option”, “date”, 时间到文本 (.今天, #日期部分))
    赋值 (.时钟周期, 0)
    赋值 (.可视, 假)
.否则
    .如果真 (等于 (寻找文件 (.内容, 16), “”))
        信息框 (“所设置的数据目录不存在，请重新设置。”, #信息图标, )
        返回 ()
    .如果真结束
    赋值 (数据目录, .内容)
    赋值 (句柄, 主窗口.查询 (., “select sum(文件大小) as H from wjxx”))
    赋值 (需要大小, 相加 (主窗口.读 (., 句柄, “H”), 5000))
    主窗口.关闭记录集 (., 句柄)
    .如果真 (大于 (需要大小, 取磁盘剩余空间 (数据目录)))
        信息框 (相加 (“当前刻盘整理方式大约需要 ”, 到文本 (需要大小), “ KB空间。”, #换行符, “你所选择的数据目录所在分区剩余空间约为 ”, 到文本 (取磁盘剩余空间 (数据目录)), “ KB。”, #换行符, “请重新选择数据目录，并确保磁盘分区有足够空间。”), #信息图标, )
        返回 ()
    .如果真结束
    .如果真 (不等于 (取文本右边 (数据目录, 1), “\”))
        赋值 (数据目录, 相加 (数据目录, “\”))
    .如果真结束
    赋值 (返回文本, 寻找文件 (相加 (数据目录, “*”), 55))
    .如果真 (等于 (返回文本, “.”))
        赋值 (返回文本, 寻找文件 (55))
    .如果真结束
    .如果真 (不等于 (返回文本, “”))
        .如果真 (等于 (信息框 (相加 (“    指定的数据目录下已经有文件或文件夹。”, #换行符, “    但根据你所选择的刻盘整理方式，建议你指定一个空文件夹”, #换行符, “作为刻盘数据存放目录。”, #换行符, “    确实要使用此数据目录进行刻盘整理吗？”), 相加 (#询问图标, #是否钮, #默认按钮二), ), #否钮))
            返回 ()
        .如果真结束
        
    .如果真结束
    .如果真 (等于 (复制文件 (子文本替换 (相加 (取运行目录 (), “\data\”, 用户目录, “filedata.efm”), “\\”, “\”, , , 真), 相加 (数据目录, “softfile.efm”)), 假))
        信息框 (“复制分类数据文件失败，请确定你设置的数据目录可写。”, #信息图标, )
        返回 ()
    .如果真结束
    赋值 (.时钟周期, 300)
    清除数组 (文件数组)
    赋值 (.可视, 真)
    #顶层.调整层次 ()
    刷新显示 ()
    相加 (数据目录, “softfile.efm”).打开MDB数据库 ()
    .计次循环首 (相减 (主窗口.取项目数 (.), 1), 变量1)
        赋值 (分类编码, 取分类编码 (主窗口., 相减 (变量1, 1)))
        赋值 (分类目录, 取分类名称 (分类编码))
        赋值 (分类目录, 子文本替换 (分类目录, “ => ”, “\”, , , 真))
        创建目录 (相加 (数据目录, 分类目录))
        赋值 (句柄, 主窗口.查询 (., 相加 (“select * from wjxx where 分类编码='”, 分类编码, “'”)))
        主窗口.到首记录 (., 句柄)
        .判断循环首 (等于 (主窗口.尾记录后 (., 句柄), 假))
            赋值 (文件地址, 主窗口.读 (., 句柄, 4))
            .如果 (不等于 (取文件属性 (文件地址), -1))
                加入成员 (文件数组, 文件地址)
                相加 (“update wjxx set 软件位置='”, 分类目录, “\”, 取文本右边 (文件地址, 相减 (取文本长度 (文件地址), 倒找文本 (文件地址, “\”, , 假))), “' where 分类编码='”, 主窗口.读 (., 句柄, 1), “' and 文件编号=”, 到文本 (主窗口.读 (., 句柄, 2))).执行 ()
            .否则
                相加 (“delete from wjxx where 分类编码='”, 主窗口.读 (., 句柄, 1), “' and 文件编号=”, 到文本 (主窗口.读 (., 句柄, 2))).执行 ()
            .如果结束
            主窗口.到后一记录 (., 句柄)
        .判断循环尾 ()
        主窗口.关闭记录集 (., 句柄)
        .如果真 (大于 (取数组成员数 (文件数组), 0))
            .如果 (是否为调试版 ())
                未知支持库函数_4 (相加 (数据目录, 分类目录), 文件数组)
            .否则
                .如果真 (等于 (未知支持库函数_5 (相加 (数据目录, 分类目录), 文件数组), 假))
                    返回 ()
                .如果真结束
                
            .如果结束
            清除数组 (文件数组)
        .如果真结束
        
    .计次循环尾 ()
    写到文件 (相加 (数据目录, “EfmSoft.exe”), #运行文件)
    写配置项 (相加 (数据目录, “autorun.inf”), “AutoRun”, “open”, “EfmSoft.exe”)
    写配置项 (相加 (数据目录, “autorun.inf”), “AutoRun”, “icon”, “EfmSoft.exe”)
    写配置项 (相加 (数据目录, “autorun.inf”), “Option”, “title”, .内容)
    写配置项 (相加 (数据目录, “autorun.inf”), “Option”, “maker”, .内容)
    写配置项 (相加 (数据目录, “autorun.inf”), “Option”, “date”, 时间到文本 (.今天, #日期部分))
    .如果真 (.选中)
        主窗口.执行 (., “DELETE * from wjxx”, )
        主窗口.执行 (., “update wjfl set 数目=0”, )
        赋值 (现行项目, 主窗口..最大化按钮)
        读取列表 (主窗口.)
        赋值 (主窗口..最大化按钮, 现行项目)
        _树型框1_项目被选择 (0)
    .如果真结束
    赋值 (.时钟周期, 0)
    赋值 (.可视, 假)
.如果结束
信息框 (“刻盘整理完成，你可以将你所指定的数据目录刻录成光盘了。”, #信息图标, )
销毁 ()

.子程序 _时钟1_周期事件, 空白型, , 
赋值 (长度, 相加 (长度, 1))
.如果真 (等于 (长度, 7))
    赋值 (长度, 1)
.如果真结束
赋值 (.标题, 相加 (取文本左边 (“数据整理中......”, 相减 (16, 相减 (6, 长度))), 取空白文本 (相减 (6, 长度))))

.窗口程序集 窗口程序集12, , , 

.子程序 _备份设置窗口_创建完毕, 空白型, , 
赋值 (., 相减 (相加 (., 172), 取用户区高度 ()))
赋值 (.内容, 读加密配置项 (子文本替换 (相加 (取运行目录 (), “\data\sysdata.efm”), “\\”, “\”, , , 真), #版本信息, 当前用户, “备份目录”, “”))
赋值 (.选中, 等于 (读加密配置项 (子文本替换 (相加 (取运行目录 (), “\data\sysdata.efm”), “\\”, “\”, , , 真), #版本信息, 当前用户, “自动备份”, “真”), “真”))

.子程序 _按钮2_被单击, 空白型, , 
销毁 ()

.子程序 _超级按钮2_被单击, 空白型, , 
.局部变量 文件夹, 文本型, , , 

赋值 (文件夹, 未知支持库函数_2 (“请选择要加入到管理器的文件夹：”, ))
.如果真 (等于 (取文本右边 (文件夹, 1), “\”))
    赋值 (文件夹, 取文本左边 (文件夹, 相减 (取文本长度 (文件夹), 1)))
.如果真结束
赋值 (.内容, 文件夹)

.子程序 _按钮1_被单击, 空白型, , 
.如果真 (等于 (.内容, “”))
    .如果 (.选中)
        信息框 (“请设置数据备份目录，否则系统将无法完成自动备份。”, #信息图标, )
        返回 ()
    .否则
        信息框 (“请设置数据备份目录，或者点击取消按钮放弃本次设置。”, #信息图标, )
        返回 ()
    .如果结束
    
.如果真结束
写加密配置项 (子文本替换 (相加 (取运行目录 (), “\data\sysdata.efm”), “\\”, “\”, , , 真), #版本信息, 当前用户, “备份目录”, .内容)
写加密配置项 (子文本替换 (相加 (取运行目录 (), “\data\sysdata.efm”), “\\”, “\”, , , 真), #版本信息, 当前用户, “自动备份”, 到文本 (.选中))
销毁 ()


 ' 不属于任何一个程序集、类模块的函数：
