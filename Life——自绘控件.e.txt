 ' 文件类型：Windows窗口程序

 ' 程序名称：鼠标跟随
 ' 程序描述：
 ' 程序作者：本源码来自易语言资源网(www.5A5X.com)
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：             易语言资源网注意事项
--============   www.5A5X.com  =============--
* 易语言资源网为易语言官方站、易语言官方论坛提供辅助资源站；本易语言资源网( www.5A5X.com)所有软件和资料均为软件作者提供和网友推荐发布而来，其版权归该软件和程序源码的合法拥有者所有，本站易语言资源网整理收集仅供易语言用户学习和易语言技术研究探讨使用，不得用于任何商业用途。如果由于以上原因造成的版权纠纷本站概不负责！
* 本站资源未经许可,任何网站不得非法盗链及抄袭本站资源；如引用，请注明来自易语言资源网，谢谢合作！
--============   www.5A5X.com  =============--
 ' 版本号：1.0
 ' 创建号：0.0

窗口 窗口1
    左边 = 50
    顶边 = 50
    宽度 = 680
    高度 = 476
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    窗口类名 = “”
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “Life――创造控件（画板自绘 2011.11.28）”
    帮助文件名 = “”



.常量 辅助线Prop文本, "“Auxiliary_Line”", , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 5 0 系统核心支持库




数据类型 RectL, , 公开, 矩形_整数型
    .成员 X, 整数型, , , 
    .成员 Y, 整数型, , , 
    .成员 Width, 整数型, , , 
    .成员 Height, 整数型, , , 

数据类型 区域, , 
    .成员 矩形, RectL, , , 
    .成员 域句柄, 整数型, , , 
    .成员 Prop文本, 文本型, , , 
    .成员 Prop特征, 整数型, , , 

数据类型 辅助线, , 
    .成员 控制点, Point_Dub, , "2", 
    .成员 线域句柄, 整数型, , , 
    .成员 线类型, 整数型, , , h=1  v=2
    .成员 层状态, 整数型, , , 

数据类型 Point_Dub, , 
    .成员 x, 双精度小数型, , , 
    .成员 y, 双精度小数型, , , 

数据类型 图层, , 
    .成员 ID, 整数型, , , 句柄
    .成员 画板, 画板, , , 
    .成员 标识, 文本型, , , 


.DLL命令 GetProp, 整数型, "", "GetPropA", , 
    .参数 hWnd, 整数型, , 
    .参数 lpString, 文本型, , 

.DLL命令 SetRect, 整数型, "", "SetRect", 公开, 
    .参数 lprc, RectL, , 
    .参数 xLeft, 整数型, , 
    .参数 yTop, 整数型, , 
    .参数 xRight, 整数型, , 
    .参数 yBottom, 整数型, , 

.DLL命令 SetProp, 整数型, "", "SetPropA", , 
    .参数 hWnd, 整数型, , 
    .参数 lpString, 文本型, , 
    .参数 hData, 整数型, , 

.DLL命令 PtInRegion, 整数型, "gdi32", "PtInRegion", , 若点在区域内为非零值，否则为0
    .参数 hRgn, 整数型, , 区域句柄
    .参数 x, 整数型, , 点的X坐标
    .参数 y, 整数型, , 点的Y坐标

.DLL命令 CreateRectRgnIndirect, 整数型, "gdi32", "CreateRectRgnIndirect", , 执行成功则为区域句柄，失败则为0
    .参数 lpRect, RectL, , 

.DLL命令 DeleteObject, 空白型, "gdi32", "DeleteObject", , 
    .参数 hRgn, 整数型, , 区域句柄

.程序集 程序集1, , , 

.子程序 _启动子程序, 整数型, , 本子程序在程序启动后最先执行
载入 (窗口1, , 假)
返回 (0) ' 可以根据您的需要返回任意数值

.窗口程序集 窗口程序集1, , , 

.程序集变量 V_ReDraw, 区域, , , 
.程序集变量 H_ReDraw, 区域, , , 
.程序集变量 ConterReDraw, 区域, , , 
.程序集变量 Auxiliary_Line, 辅助线, , "0", 
.程序集变量 Current_Line_Lay, 整数型, , , 当前辅助线层状态
.程序集变量 Drag_line, 逻辑型, , , 
.程序集变量 灵敏度, 整数型, , , 
.程序集变量 图层, 图层, , "0", 
.程序集变量 当前线索引, 整数型, , , 
.子程序 标尺子程序_绘制标尺刻度, 空白型, , 卖烧烤 提供
.参数 横向标尺, 画板, , 
.参数 纵向标尺, 画板, , 
.参数 刻度类型, 整数型, 可空, 0、毫米(默认) 1、厘米
.参数 标尺底色, 整数型, 可空, 默认颜色值为“213, 234, 230”

.局部变量 部_当前位置, 整数型, , , 
.局部变量 部_标尺刻度, 整数型, , , 

 ' --========  易语言资源网  (www.5A5X.com)  ======--
 ' 努力创建完善、持续更新的易语言学习例程源码资源站
 ' --================   www.5A5X.com  ===========--
 ' --==================   易语言资源网注意事项  ================--
 ' * 易语言资源网为易语言官方站、易语言官方论坛提供辅助资源站；
 ' 本易语言资源网( www.5A5X.com)所有软件和资料均为软件作者提
 ' 供和网友推荐发布而来，其版权归该软件和程序源码的合法拥有者所
 ' 有，本站易语言资源网整理收集仅供易语言用户学习和易语言技术研
 ' 究探讨使用，不得用于任何商业用途。如果由于以上原因造成的版权
 ' 纠纷本站概不负责！
 ' * 本站资源未经许可，任何网站不得非法盗链及抄袭本站资源；如引用
 ' 页面，请注明来自易语言资源网，谢谢合作！
 ' --=====================   www.5A5X.com  ================--

赋值 (标尺底色, 选择 (是否为空 (标尺底色), 取颜色值 (213, 234, 230), 标尺底色))
连续赋值 (标尺底色, 横向标尺., 纵向标尺.)
连续赋值 (真, 横向标尺., 纵向标尺.)
连续赋值 (1, 横向标尺., 纵向标尺.)

 ' // 清除画板所包含的内容；
横向标尺.清除 ()
纵向标尺.清除 ()

 ' // 用白色画笔画出标尺的外围线条颜色；
连续赋值 (#白色, 横向标尺., 纵向标尺.)
纵向标尺.画直线 (0, 0, 0, 纵向标尺.)
横向标尺.画直线 (0, 0, 横向标尺., 0)

 ' // 用黑色画出横向标尺的单位刻度并写入刻度值；
赋值 (横向标尺., 1) ' 0.1毫米
赋值 (横向标尺., 1)
赋值 (横向标尺., #黑色)
赋值 (横向标尺.., 0)
赋值 (横向标尺.., “宋体”)
 ' 本源码来自易语言资源网(www.5A5X.com)
.变量循环首 (0, 相加 (取整 (相乘 (取屏幕宽度 (), 2.65)), 1), 10, 部_当前位置)
    .如果 (等于 (求余数 (部_当前位置, 50), 0))
        .如果 (等于 (求余数 (部_当前位置, 100), 0))
            赋值 (部_标尺刻度, 选择 (等于 (刻度类型, 1), 相除 (部_当前位置, 100), 相除 (部_当前位置, 10)))
            横向标尺.定位写出 (相加 (部_当前位置, 10), 3, 部_标尺刻度)
            横向标尺.画直线 (部_当前位置, 20, 部_当前位置, 75)
        .否则
            横向标尺.画直线 (部_当前位置, 50, 部_当前位置, 75)
        .如果结束
        
    .否则
        .如果真 (等于 (求余数 (部_当前位置, 10), 0))
            横向标尺.画直线 (部_当前位置, 60, 部_当前位置, 75)
        .如果真结束
        
    .如果结束
    
.变量循环尾 ()
赋值 (横向标尺., 横向标尺.取图片 ())

 ' // 用黑色画出纵向标尺的单位刻度并写入刻度值；
赋值 (纵向标尺., 1) ' 0.1毫米
赋值 (纵向标尺., 1)
赋值 (纵向标尺., #黑色)
赋值 (纵向标尺.., -900)
赋值 (纵向标尺.., “@宋体”)

.变量循环首 (0, 取整 (相乘 (取屏幕高度 (), 2.65)), 10, 部_当前位置)
    .如果 (等于 (求余数 (部_当前位置, 50), 0))
        .如果 (等于 (求余数 (部_当前位置, 100), 0))
            赋值 (部_标尺刻度, 选择 (等于 (刻度类型, 1), 相除 (部_当前位置, 100), 相除 (部_当前位置, 10)))
            纵向标尺.定位写出 (40, 相加 (部_当前位置, 10), 部_标尺刻度)
            纵向标尺.画直线 (20, 部_当前位置, 75, 部_当前位置)
        .否则
            纵向标尺.画直线 (50, 部_当前位置, 75, 部_当前位置)
        .如果结束
        
    .否则
        .如果真 (等于 (求余数 (部_当前位置, 10), 0))
            纵向标尺.画直线 (60, 部_当前位置, 75, 部_当前位置)
        .如果真结束
        
    .如果结束
    
.变量循环尾 ()
赋值 (纵向标尺., 纵向标尺.取图片 ())

 ' // 清除画板所包含的内容；
横向标尺.清除 ()
纵向标尺.清除 ()

.子程序 _窗口1_创建完毕, 空白型, , 
.局部变量 i, 整数型, , , 

 ' 这里使用的是易语言自带的“画板”控件来完成自绘控件，最好使用GDI+等内存位图进行操作。
 ' 初步定义五个图层，分别是：横向刻度层、纵向刻度层、底缓冲层、顶缓冲层、图形层
重定义数组 (图层, 假, 5)
赋值 (图层 [1].标识, “H_刻度”)
赋值 (图层 [2].标识, “V_刻度”)
赋值 (图层 [3].标识, “底缓冲层”) ' 静态层
赋值 (图层 [4].标识, “顶缓冲层”) ' 动态层
赋值 (图层 [5].标识, “图形层”) ' 用户自己画的


.计次循环首 (取数组成员数 (图层), i)
    复制窗口组件 (图层 [i], 画板)
    赋值 (图层 [i], ID, 图层.取窗口句柄 ( [i], 画板)) ' 以备后用
.计次循环尾 ()

 ' 定义刻度层属性。
赋值 (图层 [1].画板., 592) ' 这里592是固定值，也可以设置为随窗口尺寸变化的值
赋值 (图层 [1].画板., 24) ' 这里24太阳是固定值，长度方向变化了，高度方向设置好后不再变化
赋值 (图层 [1].画板., 取颜色值 (213, 240, 230))
图层.填充矩形 ( [1].画板, 0, 0, 图层 [1].画板., 图层 [1].画板.)

赋值 (图层 [2].画板., 24) ' 如上注释
赋值 (图层 [2].画板., 335) ' 如上注释
赋值 (图层 [2].画板., 取颜色值 (213, 240, 230))
图层.填充矩形 ( [2].画板, 0, 0, 图层 [2].画板., 图层 [2].画板.)


 ' 绘出刻度层。
标尺子程序_绘制标尺刻度 (图层 [1].画板, 图层 [2].画板, 1)

 ' 调整控件尺寸。当然，最好事先确定，这里就不用代码调整了。
赋值 (., 相加 (., 图层 [1].画板.))
赋值 (., 相加 (., 图层 [2].画板.))

 ' 定义缓冲层属性，要和控件的尺寸一致，方便复制
赋值 (图层 [3].画板., .)
赋值 (图层 [3].画板., .)
赋值 (图层 [4].画板., .)
赋值 (图层 [4].画板., .)

 ' 本源码来自易语言资源网(www.5A5X.com)

 ' 将控件左上方角落处修饰下，也可以不写。
赋值 (图层 [3].画板., 取颜色值 (213, 240, 230))
图层.填充矩形 ( [3].画板, 0, 0, 24, 24)
赋值 (图层 [3].画板., #白色)
图层.填充矩形 ( [3].画板, 5, 5, 20, 20)

客户绘制的图形 ()

 ' 在控件上定义出用户操作区域
SetRect (ConterReDraw.矩形, 24, 24, 相加 (592, 24), 相加 (335, 24))
赋值 (ConterReDraw.域句柄, CreateRectRgnIndirect (ConterReDraw.矩形))
赋值 (ConterReDraw.Prop文本, “客户绘制区”)
赋值 (ConterReDraw.Prop特征, 0) ' 非激活状态用0作为开关，激活状态下用1。当然，还定义更多的，比如激活时有对象被拖动=3等
SetProp (取窗口句柄 (), ConterReDraw.Prop文本, ConterReDraw.Prop特征)

 ' 在控件上定义出横向可刻度区域
SetRect (H_ReDraw.矩形, 24, 0, 相加 (592, 24), 24)
赋值 (H_ReDraw.域句柄, CreateRectRgnIndirect (H_ReDraw.矩形))
赋值 (H_ReDraw.Prop文本, “横刻度”)
赋值 (H_ReDraw.Prop特征, 0) ' 如上注释
SetProp (取窗口句柄 (), H_ReDraw.Prop文本, H_ReDraw.Prop特征)

 ' 在控件上定义出纵向可刻度区域
SetRect (V_ReDraw.矩形, 0, 24, 24, 相加 (335, 24))
赋值 (V_ReDraw.域句柄, CreateRectRgnIndirect (V_ReDraw.矩形))
赋值 (V_ReDraw.Prop文本, “纵刻度”)
赋值 (V_ReDraw.Prop特征, 0) ' 如上注释
SetProp (取窗口句柄 (), V_ReDraw.Prop文本, V_ReDraw.Prop特征)

客户区重绘 ()

.子程序 _画板_界面_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 层状态, 整数型, , , 
.局部变量 线类型, 整数型, , , 

.判断开始 (不等于 (PtInRegion (H_ReDraw.域句柄, 横向位置, 纵向位置), 0))
    .如果真 (等于 (GetProp (取窗口句柄 (), H_ReDraw.Prop文本), H_ReDraw.Prop特征))
        赋值 (., { 14 })
        SetProp (取窗口句柄 (), H_ReDraw.Prop文本, 1)
        SetProp (取窗口句柄 (), V_ReDraw.Prop文本, 0)
        SetProp (取窗口句柄 (), ConterReDraw.Prop文本, 0)
        SetProp (取窗口句柄 (), #辅助线Prop文本, 0)
    .如果真结束
    
.判断 (不等于 (PtInRegion (V_ReDraw.域句柄, 横向位置, 纵向位置), 0))
    .如果真 (等于 (GetProp (取窗口句柄 (), V_ReDraw.Prop文本), V_ReDraw.Prop特征))
        赋值 (., { 14 })
        SetProp (取窗口句柄 (), V_ReDraw.Prop文本, 1)
        SetProp (取窗口句柄 (), H_ReDraw.Prop文本, 0)
        SetProp (取窗口句柄 (), ConterReDraw.Prop文本, 0)
        SetProp (取窗口句柄 (), #辅助线Prop文本, 0)
    .如果真结束
    
.判断 (不等于 (PtInRegion (ConterReDraw.域句柄, 横向位置, 纵向位置), 0))
    .如果 (Drag_line)
        .如果真 (等于 (GetProp (取窗口句柄 (), #辅助线Prop文本), 0)) ' 因为鼠标可能进入刻度区或控件区外，要回复下鼠标形状
            SetProp (取窗口句柄 (), #辅助线Prop文本, 1)
            恢复鼠标状态 ()
        .如果真结束
        拖动辅助线 (横向位置, 纵向位置)
         ' 这里最好做局部的绘制更新
        
    .否则
        
         ' 没有拖动
         ' 在线内便高亮激活，线外恢复。
        无拖动时激活恢复 (横向位置, 纵向位置)
    .如果结束
    
    SetProp (取窗口句柄 (), H_ReDraw.Prop文本, 0)
    SetProp (取窗口句柄 (), V_ReDraw.Prop文本, 0)
.默认
    
    赋值 (., { 0 })
    SetProp (取窗口句柄 (), #辅助线Prop文本, 0)
    SetProp (取窗口句柄 (), ConterReDraw.Prop文本, 0)
    SetProp (取窗口句柄 (), H_ReDraw.Prop文本, 0)
    SetProp (取窗口句柄 (), V_ReDraw.Prop文本, 0)
.判断结束


.子程序 恢复鼠标状态, 空白型, , 
.局部变量 i, 整数型, , , 

.计次循环首 (取数组成员数 (Auxiliary_Line), i)
    .如果真 (等于 (Current_Line_Lay, Auxiliary_Line [i], 层状态))
        赋值 (., 多项选择 (Auxiliary_Line [i], 线类型, { 10 }, { 12 }))
        返回 ()
    .如果真结束
    
.计次循环尾 ()

.子程序 无拖动时激活恢复, 空白型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 

.局部变量 线类型, 整数型, , , 

 ' 仍然在线内，不变化
.如果 (选中辅助线 (横向位置, 纵向位置, 线类型))
    .如果真 (等于 (GetProp (取窗口句柄 (), #辅助线Prop文本), 0))
        客户区重绘 (横向位置, 纵向位置)
        赋值 (., 多项选择 (线类型, { 10 }, { 12 }))
        SetProp (取窗口句柄 (), #辅助线Prop文本, 1)
        SetProp (取窗口句柄 (), ConterReDraw.Prop文本, 0)
    .如果真结束
    
.否则
    
    .如果真 (等于 (GetProp (取窗口句柄 (), ConterReDraw.Prop文本), 0))
        客户区重绘 (横向位置, 纵向位置)
        SetProp (取窗口句柄 (), ConterReDraw.Prop文本, 1)
        SetProp (取窗口句柄 (), #辅助线Prop文本, 0)
        赋值 (., { 0 })
        返回 ()
    .如果真结束
    刻度区重绘 (横向位置, 纵向位置)
.如果结束


.子程序 刻度区重绘, 空白型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 

 ' 二级缓冲绘制
 ' 复制到动态层
图层.复制 ( [3].画板, 24, 0, 592, 24, 图层 [4].画板, 24, 0, )
图层.复制 ( [3].画板, 0, 24, 24, 335, 图层 [4].画板, 0, 24, )


 ' 这里绘制到了顶级缓冲上了，因为是动态的
赋值 (图层 [4].画板., #红色)
赋值 (图层 [4].画板., 1)
图层.画直线 ( [4].画板, 横向位置, 0, 横向位置, 24)
图层.画直线 ( [4].画板, 0, 纵向位置, 24, 纵向位置)


图层.复制 ( [4].画板, 24, 0, 592, 24, , 24, 0, )
图层.复制 ( [4].画板, 0, 24, 24, 335, , 0, 24, )

.子程序 客户区重绘, 空白型, , 
.参数 横向位置, 整数型, 可空, 
.参数 纵向位置, 整数型, 可空, 

.局部变量 区域宽, 双精度小数型, , , 
.局部变量 区域高, 双精度小数型, , , 

 ' 一级缓冲绘制
图层.复制 ( [1].画板, , , , , 图层 [3].画板, 24, 0, ) ' 复制刻度到静态层
图层.复制 ( [2].画板, , , , , 图层 [3].画板, 0, 24, ) ' 复制刻度到静态层

图层.复制 ( [5].画板, , , , , 图层 [3].画板, 相加 (相除 (相减 (592, 24, 图层 [5].画板.), 2), 24), 相加 (相除 (相减 (335, 24, 图层 [5].画板.), 2), 24), ) ' 客户的图形层，复制到静态层

 ' 二级缓冲绘制
图层.复制 ( [3].画板, , , , , 图层 [4].画板, , , ) ' 复制到动态层


.如果真 (取反 (是否为空 (横向位置))) ' 为刻度区绘制鼠标位置
     ' 这里绘制到了顶级缓冲上了，因为是动态的
    赋值 (图层 [4].画板., #红色)
    赋值 (图层 [4].画板., 1)
    图层.画直线 ( [4].画板, 横向位置, 0, 横向位置, 24)
    图层.画直线 ( [4].画板, 0, 纵向位置, 24, 纵向位置)
.如果真结束


高亮辅助线 () ' 动态检测辅助线
客户区刷新 () ' 最后完成复制

.子程序 二级缓冲绘制, 空白型, , 
图层.复制 ( [5].画板, , , , , 图层 [3].画板, 相加 (相除 (相减 (595, 24, 图层 [5].画板.), 2), 24), 相加 (相除 (相减 (335, 24, 图层 [5].画板.), 2), 24), ) ' 客户的图形层
图层.复制 ( [3].画板, , , , , 图层 [4].画板, , , )
高亮辅助线 () ' 动态检测辅助线
客户区刷新 ()

.子程序 客户区刷新, 空白型, , 
图层.复制 ( [4].画板, , , , , , , , )

.子程序 _按钮1_被单击, 空白型, , 
.局部变量 坐标A, Point_Dub, , , 
.局部变量 坐标B, Point_Dub, , , 
.局部变量 Temp, RectL, , , 
.局部变量 i, 整数型, , , 

.计次循环首 (取数组成员数 (Auxiliary_Line), i)
    DeleteObject (Auxiliary_Line [i], 线域句柄)
.计次循环尾 ()
重定义数组 (Auxiliary_Line, 假, 2)
 ' 本源码来自易语言资源网(www.5A5X.com)
置随机数种子 ()
赋值 (灵敏度, 5)
.计次循环首 (2, i)
    赋值 (Auxiliary_Line [i], 线类型, 多项选择 (i, 1, 2))
    .如果 (等于 (Auxiliary_Line [i], 线类型, 1)) ' 水平线
        赋值 (Auxiliary_Line [i], 控制点 [1].x, 24)
        赋值 (Auxiliary_Line [i], 控制点 [1].y, 取随机数 (24, 图层 [4].画板.))
        赋值 (Auxiliary_Line [i], 控制点 [2].x, 图层 [4].画板.)
        赋值 (Auxiliary_Line [i], 控制点 [2].y, Auxiliary_Line [i], 控制点 [1].y)
        
        赋值 (Temp.X, Auxiliary_Line [i], 控制点 [1].x)
        赋值 (Temp.Y, 相减 (Auxiliary_Line [i], 控制点 [1].y, 灵敏度))
        赋值 (Temp.Width, 相减 (图层 [4].画板., 24))
        赋值 (Temp.Height, 相加 (Temp.Y, 相乘 (灵敏度, 2))) ' 灵敏度
        .如果真 (小于 (Temp.Y, 24))
            赋值 (Temp.Y, 24)
        .如果真结束
        
    .否则
        
        赋值 (Auxiliary_Line [i], 控制点 [1].x, 取随机数 (24, 图层 [4].画板.))
        赋值 (Auxiliary_Line [i], 控制点 [1].y, 24)
        赋值 (Auxiliary_Line [i], 控制点 [2].x, Auxiliary_Line [i], 控制点 [1].x)
        赋值 (Auxiliary_Line [i], 控制点 [2].y, 图层 [4].画板.)
        
        赋值 (Temp.X, 相减 (Auxiliary_Line [i], 控制点 [1].x, 灵敏度))
        赋值 (Temp.Y, Auxiliary_Line [i], 控制点 [1].y)
        赋值 (Temp.Width, 相加 (Temp.X, 相乘 (灵敏度, 2))) ' 灵敏度
        赋值 (Temp.Height, 相减 (图层 [4].画板., 24))
        .如果真 (小于 (Temp.X, 24))
            赋值 (Temp.X, 24)
        .如果真结束
        
    .如果结束
    
    赋值 (Auxiliary_Line [i], 线域句柄, CreateRectRgnIndirect (Temp))
    赋值 (Auxiliary_Line [i], 层状态, i)
.计次循环尾 ()
SetProp (取窗口句柄 (), #辅助线Prop文本, 0)
高亮辅助线 (假)
二级缓冲绘制 ()

.子程序 选中辅助线, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 线类型, 整数型, 参考, 

.局部变量 i, 整数型, , , 

.计次循环首 (取数组成员数 (Auxiliary_Line), i)
    .如果真 (不等于 (PtInRegion (Auxiliary_Line [i], 线域句柄, 横向位置, 纵向位置), 0))
        赋值 (Current_Line_Lay, Auxiliary_Line [i], 层状态)
        赋值 (线类型, Auxiliary_Line [i], 线类型)
        返回 (真)
    .如果真结束
    
.计次循环尾 ()
赋值 (Current_Line_Lay, 0)
返回 (假)

.子程序 高亮辅助线, 空白型, , 
.参数 高亮, 逻辑型, 可空, 

.局部变量 i, 整数型, , , 

.如果真 (是否为空 (高亮))
    赋值 (高亮, 真)
.如果真结束

赋值 (图层 [4].画板., 3)
.计次循环首 (取数组成员数 (Auxiliary_Line), i)
    .如果 (并且 (等于 (Current_Line_Lay, Auxiliary_Line [i], 层状态), 等于 (高亮, 真)))
        赋值 (图层 [4].画板., #黄色)
    .否则
        赋值 (图层 [4].画板., #绿色)
    .如果结束
    图层.画直线 ( [4].画板, Auxiliary_Line [i], 控制点 [1].x, Auxiliary_Line [i], 控制点 [1].y, Auxiliary_Line [i], 控制点 [2].x, Auxiliary_Line [i], 控制点 [2].y)
    
.计次循环尾 ()

.子程序 _画板_界面_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 


.如果 (不等于 (Current_Line_Lay, 0))
    赋值 (Drag_line, 真)
.否则
    赋值 (Drag_line, 假)
.如果结束


.子程序 _画板_界面_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 i, 整数型, , , 
.局部变量 Temp, RectL, , , 

.如果真 (等于 (PtInRegion (ConterReDraw.域句柄, 横向位置, 纵向位置), 0))
    赋值 (Drag_line, 假)
.如果真结束

.判断开始 (Drag_line)
    .计次循环首 (取数组成员数 (Auxiliary_Line), i)
        .如果真 (等于 (Current_Line_Lay, Auxiliary_Line [i], 层状态))
            .如果 (等于 (Auxiliary_Line [i], 线类型, 1)) ' 水平线
                赋值 (Temp.X, Auxiliary_Line [i], 控制点 [1].x)
                赋值 (Temp.Y, 相减 (Auxiliary_Line [i], 控制点 [1].y, 灵敏度))
                赋值 (Temp.Width, 相减 (图层 [3].画板., 24))
                赋值 (Temp.Height, 相加 (Temp.Y, 相乘 (灵敏度, 2))) ' 灵敏度
                .如果真 (小于 (Temp.Y, 24))
                    赋值 (Temp.Y, 24)
                .如果真结束
                
            .否则
                
                赋值 (Temp.X, 相减 (Auxiliary_Line [i], 控制点 [1].x, 灵敏度))
                赋值 (Temp.Y, Auxiliary_Line [i], 控制点 [1].y)
                赋值 (Temp.Width, 相加 (Temp.X, 相乘 (灵敏度, 2))) ' 灵敏度
                赋值 (Temp.Height, 相减 (图层 [3].画板., 24))
                .如果真 (小于 (Temp.X, 24))
                    赋值 (Temp.X, 24)
                .如果真结束
                
            .如果结束
            
            DeleteObject (Auxiliary_Line [i], 线域句柄)
            赋值 (Auxiliary_Line [i], 线域句柄, CreateRectRgnIndirect (Temp))
        .如果真结束
        
    .计次循环尾 ()
    赋值 (Drag_line, 假)
.默认
    
.判断结束


.子程序 拖动辅助线, 空白型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 

.局部变量 i, 整数型, , , 

.如果真 (Drag_line)
    .计次循环首 (取数组成员数 (Auxiliary_Line), i)
        .如果真 (等于 (Current_Line_Lay, Auxiliary_Line [i], 层状态)) ' 判断哪条辅助线被激活了
             ' 重新定义辅助线的位置
            .如果 (等于 (Auxiliary_Line [i], 线类型, 1)) ' 水平线
                赋值 (Auxiliary_Line [i], 控制点 [1].x, 24)
                赋值 (Auxiliary_Line [i], 控制点 [1].y, 纵向位置)
                赋值 (Auxiliary_Line [i], 控制点 [2].x, 图层 [3].画板.)
                赋值 (Auxiliary_Line [i], 控制点 [2].y, Auxiliary_Line [i], 控制点 [1].y)
                ' 本源码来自易语言资源网(www.5A5X.com)
            .否则
                
                赋值 (Auxiliary_Line [i], 控制点 [1].x, 横向位置)
                赋值 (Auxiliary_Line [i], 控制点 [1].y, 24)
                赋值 (Auxiliary_Line [i], 控制点 [2].x, Auxiliary_Line [i], 控制点 [1].x)
                赋值 (Auxiliary_Line [i], 控制点 [2].y, 图层 [3].画板.)
                
            .如果结束
            赋值 (当前线索引, i)
            跳出循环 ()
        .如果真结束
        
    .计次循环尾 ()
    客户区重绘 (横向位置, 纵向位置)
.如果真结束


.子程序 _窗口1_将被销毁, 空白型, , 
.局部变量 i, 整数型, , , 

DeleteObject (H_ReDraw.域句柄)
DeleteObject (V_ReDraw.域句柄)
DeleteObject (ConterReDraw.域句柄)
.计次循环首 (取数组成员数 (Auxiliary_Line), i)
    DeleteObject (Auxiliary_Line [i], 线域句柄)
.计次循环尾 ()
.计次循环首 (取数组成员数 (图层), i)
    图层.销毁 ( [i], 画板, )
.计次循环尾 ()

.子程序 客户绘制的图形, 空白型, , 
 ' 这里只做简单的模拟
赋值 (图层 [5].画板., 150)
赋值 (图层 [5].画板., 200)
赋值 (图层 [5].画板., 取颜色值 (110, 143, 175))
赋值 (图层 [5].画板., #深灰)
图层.填充矩形 ( [5].画板, 10, 10, 图层 [5].画板., 图层 [5].画板.)
赋值 (图层 [5].画板., #白色)
图层.填充矩形 ( [5].画板, 0, 0, 相减 (图层 [5].画板., 10), 相减 (图层 [5].画板., 10))
赋值 (图层 [5].画板., #黑色)
图层.画矩形 ( [5].画板, 0, 0, 相减 (图层 [5].画板., 10), 相减 (图层 [5].画板., 10))


 ' 不属于任何一个程序集、类模块的函数：
