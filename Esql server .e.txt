 ' 文件类型：Windows窗口程序

 ' 程序名称：Esql server
 ' 程序描述：
 ' 程序作者：本源码来自易语言资源网(www.5A5X.com)
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：27038580@qq.com
 ' 主页地址：
 ' 版权声明：             易语言资源网注意事项
--============   www.5A5X.com  =============--
* 易语言资源网为易语言官方站、易语言官方论坛提供辅助资源站；本易语言资源网( www.5A5X.com)所有软件和资料均为软件作者提供和网友推荐发布而来，其版权归该软件和程序源码的合法拥有者所有，本站易语言资源网整理收集仅供易语言用户学习和易语言技术研究探讨使用，不得用于任何商业用途。如果由于以上原因造成的版权纠纷本站概不负责！
* 本站资源未经许可,任何网站不得非法盗链及抄袭本站资源；如引用，请注明来自易语言资源网，谢谢合作！
--============   www.5A5X.com  =============--
 ' 版本号：1.0
 ' 创建号：0.0

窗口 win默认窗口
    左边 = 50
    顶边 = 50
    宽度 = 339
    高度 = 243
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 假
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 真
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “”
    帮助文件名 = “”

窗口 win配置窗口
    左边 = 50
    顶边 = 50
    宽度 = 195
    高度 = 156
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 真
    外形 = 0
    总在最前 = 真
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “Esql配置”
    帮助文件名 = “”



.图片 图标1, " ' 已保存到：D:\易语言学习\Data\Esql server .e\图标1", , 
.常量 软件名称与版本, "“Shibao Esql server 1.371”", , 
.常量 , , , 
.常量 数据库目录, "“data”", , 
.常量 系统数据库, "“sysdb”", , 
.常量 数据库扩展名, "“”", , 
.常量 收, "“收”", , 
.常量 发, "“发”", , 
.常量 加密解密文, "“z?73”", , 
.常量 口令文件名, "“pass”", , 
.常量 配置文件, "“xml.ini”", , 
.常量 , , , 
.常量 , , , 
.常量 , , , 
.常量 库表, "“库表”", , -----------
.常量 库表v库名, "“库名”", , 
.常量 库表v备注, "“备注”", , 
.常量 口令, "“口令”", , 
.常量 口令值, "“”", , 
.常量 端口, "“端口”", , 
.常量 端口值, "“20202”", , 默认服务器端口值
.常量 最小线程, "“最小线程”", , 
.常量 最小线程值, "“5”", , 
.常量 最大线程, "“最大线程”", , 
.常量 最大线程值, "“20”", , 
.常量 , , , 
.常量 类, "“类”", , 
.常量 器, "“器”", , 
.常量 库, "“库”", , 
.常量 表, "“表”", , 
.常量 集, "“集”", , 
.常量 v, "“v”", , 
.常量 字节集符号, "“{   }”", , 
.常量 , , , 
.常量 , , , 
.常量 配置树, "“配置”", , --XML-----------
.常量 , , , 
.常量 客户句柄, "“客户句柄”", , 
.常量 , , , 
.常量 器v连接, "“器v连接”", , 
.常量 库v打开, "“库v打开”", , 
.常量 是否允许创建, "“是否允许创建”", , 
.常量 库v关闭, "“库v关闭”", , 
.常量 表v打开, "“表v打开”", , 
.常量 表v取记录个数, "“表v取记录个数”", , 
.常量 库v是否已打开, "“库v是否已打开”", , 
.常量 库v执行SQL语句, "“库v执行SQL语句”", , 
.常量 SQL语句, "“SQL语句”", , 
.常量 表v刷新, "“表v刷新”", , 
.常量 表v关闭, "“表v关闭”", , 
.常量 库v置最大等待时间, "“库v置最大等待时间”", , 
.常量 最大等待时间, "“最大等待时间”", , 
.常量 库v取错误码, "“库v取错误码”", , 
.常量 库v取错误文本, "“库v取错误文本”", , 
.常量 库v取最新插入ID, "“库v取最新插入ID”", , 
.常量 库v开始事务, "“库v开始事务”", , 
.常量 事务名称, "“事务名称”", , 
.常量 库v提交事务, "“库v提交事务”", , 
.常量 库v回滚事务, "“库v回滚事务”", , 
.常量 库v表是否存在, "“库v表是否存在”", , 
.常量 表名, "“表名”", , 
.常量 库v取所有表, "“库v取所有表”", , 
.常量 是否包含表, "“是否包含表”", , 
.常量 是否包含视图, "“是否包含视图”", , 
.常量 是否包含临时表或视图, "“是否包含临时表或视图”", , 
.常量 库v取表内容, "“库v取表内容”", , 
.常量 表名称, "“表名称”", , 
.常量 是否包含表头, "“是否包含表头”", , 
.常量 库v取表定义, "“库v取表定义”", , 
.常量 库v读字段值, "“库v读字段值”", , 
.常量 字段名称或位置, "“字段名称或位置”", , 
.常量 查询条件, "“查询条件”", , 
.常量 库v创建表, "“库v创建表”", , 
.常量 库v删除表, "“库v删除表”", , 
.常量 库v清空表, "“库v清空表”", , 
.常量 库v收缩数据库, "“库v收缩数据库”", , 
.常量 表v取所有记录, "“表v取所有记录”", , 
.常量 默认加密解密文, "“默认加密解密文”", , 
.常量 器v取所有库, "“器v取所有库”", , 
.常量 表v是否已打开, "“表v是否已打开”", , 
.常量 表v取字段个数, "“表v取字段个数”", , 
.常量 器v置口令, "“器v置口令”", , 
.常量 新口令, "“新口令”", , 
.常量 器v置线程, "“器v置线程”", , 
.常量 器v置端口, "“器v置端口”", , 
.常量 新端口, "“新端口”", , 
.常量 表v读文本, "“表v读文本”", , 
.常量 表v跳过, "“表v跳过”", , 
.常量 表v读字节集, "“表v读字节集”", , 
.常量 表v跳到, "“表v跳到”", , 
.常量 表v编辑, "“表v编辑”", , 
.常量 表v提交, "“表v提交”", , 
.常量 表v插入, "“表v插入”", , 
.常量 表v取所有字段, "“表v取所有字段”", , 
.常量 表v取表名, "“表v取表名”", , 
.常量 表v取记录号, "“表v取记录号”", , 
.常量 表v取消, "“表v取消”", , 
.常量 表v删除, "“表v删除”", , 
.常量 表v尾记录后, "“表v尾记录后”", , 
.常量 表v首记录前, "“表v首记录前”", , 
.常量 表v到首记录, "“表v到首记录”", , 
.常量 表v到尾记录, "“表v到尾记录”", , 
.常量 集v置SQL语句, "“集v置SQL语句”", , 
.常量 集v取参数个数, "“集v取参数个数”", , 
.常量 集v取所有参数, "“集v取所有参数”", , 
.常量 集v绑定字节集参数, "“集v绑定字节集参数”", , 
.常量 集v是否已打开, "“集v是否已打开”", , 
.常量 集v打开, "“集v打开”", , 
.常量 集v关闭, "“集v关闭”", , 
.常量 集v读字节集, "“集v读字节集”", , 
.常量 集v读文本, "“集v读文本”", , 
.常量 集v到下一记录, "“集v到下一记录”", , 
.常量 集v首记录前, "“集v首记录前”", , 
.常量 集v尾记录后, "“集v尾记录后”", , 
.常量 集v取记录个数, "“集v取记录个数”", , 
.常量 集v取所有记录, "“集v取所有记录”", , 
.常量 集v取字段个数, "“集v取字段个数”", , 
.常量 集v取所有字段, "“集v取所有字段”", , 
.常量 , , , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 5 0 系统核心支持库
 ' SqliteDB {295DD8F2-3584-4780-818D-9569AC5BC9D8} 2 0 Sqlite数据库支持库
 ' Exmlrpc A36CFD538657479eBD7C0D287BBB3D95 2 0 远程服务支持库
 ' EXMLParser BE2297B7415349c8A55BC9DFEB6DD11A 2 0 XML解析支持库
 ' DP1 4BB4003860154917BC7D8230BF4FA58A 2 0 数据操作支持库一




数据类型 自定Sqlite, , 
    .成员 库, 未知类型0x20001, , , 
    .成员 表, 未知类型0x20002, , , 
    .成员 集, 未知类型0x20003, , , 

.全局变量 临时逻辑值, 逻辑型, , , 测试程序用
.全局变量 临时文本值, 文本型, , , 测试程序用
.全局变量 匿名全局变量_104, 空白型, , , 
.全局变量 未被破, 逻辑型, , "10", 
.全局变量 不能退出, 逻辑型, , , 
.全局变量 匿名全局变量_4363, 空白型, , , 
.全局变量 运行目录, 文本型, , , 
.全局变量 程序名称, 文本型, , , 
.全局变量 匿名全局变量_1335, 空白型, , , 
.全局变量 远程服务, 未知类型0x30001, , , 
.全局变量 匿名全局变量_881, 空白型, , , 
.全局变量 s, 自定Sqlite, , "10000", 
.全局变量 系统树, 未知类型0x40001, , , 
.全局变量 动态加密解密文, 文本型, , , 
.全局变量 匿名全局变量_1809, 空白型, , , 

.程序集 主程序集, , , 

.子程序 _启动子程序, 整数型, 公开, 本子程序在程序启动后最先执行
 ' 声明：本程序任何再发布版本，必须公开源代码、并要在明显处保留：“世宝软件”、“www.shibao.net”、“Esql server”字样。
 ' --========  易语言资源网  (www.5A5X.com)  ======--
 ' 努力创建完善、持续更新的易语言学习例程源码资源站
 ' --================   www.5A5X.com  ===========--
 ' --==================   易语言资源网注意事项  ================--
 ' * 易语言资源网为易语言官方站、易语言官方论坛提供辅助资源站；
 ' 本易语言资源网( www.5A5X.com)所有软件和资料均为软件作者提
 ' 供和网友推荐发布而来，其版权归该软件和程序源码的合法拥有者所
 ' 有，本站易语言资源网整理收集仅供易语言用户学习和易语言技术研
 ' 究探讨使用，不得用于任何商业用途。如果由于以上原因造成的版权
 ' 纠纷本站概不负责！
 ' * 本站资源未经许可，任何网站不得非法盗链及抄袭本站资源；如引用
 ' 页面，请注明来自易语言资源网，谢谢合作！
 ' --=====================   www.5A5X.com  ================--

启动服务器子程序 ()
返回 (0) ' 可以根据您的需要返回任意数值


.子程序 启动服务器子程序, 空白型, , 
.局部变量 临时Esql服务器, Esql器, , , 

.如果真 (等于 (文件是否存在 (#口令文件名), 假))
    临时Esql服务器.写口令 (“”)
.如果真结束
.如果真 (等于 (文件是否存在 (#配置文件), 假))
    临时Esql服务器.配置文件初始化 ()
.如果真结束
赋值 (动态加密解密文, 取加密解密文 ())
系统树.未知支持库函数_0 (#配置树)
数据库初始化 ()
配置远程服务 ()
判断启动模式 ()


.子程序 输出事件文本, 空白型, , 
.参数 事件文本, 文本型, , 

 ' 标准输出 (, “>”, 事件文本, #换行符)
返回 ()



.子程序 结束子程序, 空白型, , 
延时 (3000)
结束 ()

.子程序 数据库初始化, 逻辑型, , 
.局部变量 世宝服务器, Esql器, , , 

返回 (世宝服务器.数据库初始化 ())


.子程序 配置远程服务, 空白型, , 
.局部变量 服务器, Esql器, , , 

远程服务启动 (服务器.取端口 (), 服务器.取最小线程 (), 服务器.取最大线程 ())


.子程序 去XML头, 文本型, , 
.参数 XML字节集, 字节集, , 

.局部变量 txt, 文本型, , , 

赋值 (txt, 到文本 (XML字节集))
返回 (取文本中间 (txt, 42, 取文本长度 (txt)))


.子程序 加密字节集, 字节集, , 
.参数 欲加密字节集, 字节集, , 

返回 (未知支持库函数_3 (欲加密字节集, 动态加密解密文, ))
 ' 返回 (欲加密字节集)


.子程序 解密字节集, 字节集, , 
.参数 欲解密字节集, 字节集, , 

返回 (未知支持库函数_4 (欲解密字节集, 动态加密解密文, ))
 ' 返回 (欲解密字节集)


.子程序 取加密解密文, 文本型, , 
.局部变量 a, 整数型, , , 

赋值 (a, 相加 (相乘 (取秒 (取现行时间 ()), 取秒 (取现行时间 ()), 取秒 (取现行时间 ())), 取秒 (取现行时间 ())))
返回 (到文本 (a))
' 本源码来自易语言资源网(www.5A5X.com)

.子程序 判断启动模式, 空白型, , 
.局部变量 系统类别, 整数型, , , 

 ' linux方式启动 ()
 ' 返回 ()
赋值 (系统类别, 取操作系统类别 ())
.如果 (或者 (等于 (系统类别, 4), 等于 (系统类别, 0))) ' 如果是linux 或 未知
    linux方式启动 ()
.否则
    win方式启动 ()
.如果结束


.子程序 win方式启动, 空白型, , 
载入 (win默认窗口, , 假)


.子程序 去代码, 字节集, , 
.参数 请求信息, 字节集, , 

返回 (取字节集中间 (请求信息, 2, 相减 (取字节集长度 (请求信息), 1)))


.类模块 Esql器, , , 

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 数据库初始化, 逻辑型, 公开, 
.局部变量 临时数据库, 未知类型0x20001, , , 
.局部变量 临时表, 未知类型0x20002, , , 
.局部变量 临时记录集, 未知类型0x20003, , , 
.局部变量 临时字段信息, 未知类型0x2000A, , "0", 
.局部变量 临时被加字段信息, 未知类型0x2000A, , , 
.局部变量 临时字段累加, 整数型, , , 

.如果 (创建目录 (#数据库目录))
    
.否则
    
.如果结束

 ' ------------创建 #系统数据库-----------
.如果真 (临时数据库.未知支持库函数_30 (相加 (#数据库目录, “\”, #系统数据库, #数据库扩展名), 假)) ' 打开 #系统数据库
    返回 (真)
.如果真结束
.如果 (临时数据库.未知支持库函数_30 (相加 (#数据库目录, “\”, #系统数据库, #数据库扩展名), 真)) ' 打开 #系统数据库
    
.否则
    返回 (假)
.如果结束

 ' ------------创建 #系统数据库 毕-----------

 ' ------------创建 #配置表 -----------
清除数组 (临时字段信息)
赋值 (临时被加字段信息., #库表v库名)
赋值 (临时被加字段信息., 10)
加入成员 (临时字段信息, 临时被加字段信息)
赋值 (临时被加字段信息., #库表v备注)
赋值 (临时被加字段信息., 10)
加入成员 (临时字段信息, 临时被加字段信息)
临时数据库.未知支持库函数_61 (#库表, 临时字段信息)

 ' ------------创建 #配置表 毕-----------


临时表.未知支持库函数_105 (#库表, 临时数据库)
临时表.未知支持库函数_121 ()
临时表.未知支持库函数_136 (#库表v库名, 相加 (#数据库目录, “\”, #系统数据库, #数据库扩展名))
临时表.未知支持库函数_123 ()

返回 (真)

.子程序 取所有库, 空白型, 公开, 
.参数 返回表名数组, 文本型, 数组, 

.局部变量 临时数据库, 未知类型0x20001, , , 
.局部变量 临时表, 未知类型0x20002, , , 
.局部变量 n, 整数型, , , 
.局部变量 x, 整数型, , , 

临时数据库.未知支持库函数_30 (相加 (#数据库目录, “\”, #系统数据库, #数据库扩展名), 假)
临时表.未知支持库函数_105 (#库表, 临时数据库)
赋值 (x, 临时表.未知支持库函数_150 ())
重定义数组 (返回表名数组, 假, x)
.计次循环首 (x, n)
    临时表.未知支持库函数_111 ()
    赋值 (返回表名数组 [n], 临时表.未知支持库函数_137 (1, ))
.计次循环尾 ()


.子程序 取口令, 文本型, 公开, 
.局部变量 字节集, 字节集, , , 

赋值 (字节集, 读入文件 (#口令文件名))
返回 (到文本 (未知支持库函数_4 (字节集, 取密码文本 (), )))


.子程序 写口令, 逻辑型, 公开, 
.参数 文本口令, 文本型, , 

返回 (写到文件 (#口令文件名, 未知支持库函数_3 (到字节集 (文本口令), 取密码文本 (), )))


.子程序 取密码文本, 文本型, , 
返回 (相加 (“z”, 到文本 (相除 (5, 9)), 到文本 (相加 (2, 7)), “f”, “bfddve”))


.子程序 配置文件初始化, 空白型, 公开, 
.局部变量 xml, 未知类型0x40001, , , 

xml.未知支持库函数_0 (#配置树)
xml.未知支持库函数_12 (“@1”, #端口, #端口值)
xml.未知支持库函数_12 (“@1”, #最小线程, #最小线程值)
xml.未知支持库函数_12 (“@1”, #最大线程, #最大线程值)
xml.未知支持库函数_2 (#配置文件, )


.子程序 取端口, 整数型, 公开, 
.局部变量 xml, 未知类型0x40001, , , 

xml.未知支持库函数_0 (#配置树)
xml.未知支持库函数_1 (#配置文件)
返回 (到整数 (xml.未知支持库函数_37 (“@1”, #端口, )))


.子程序 取最小线程, 整数型, 公开, 
.局部变量 xml, 未知类型0x40001, , , 

xml.未知支持库函数_0 (#配置树)
xml.未知支持库函数_1 (#配置文件)
返回 (到整数 (xml.未知支持库函数_37 (“@1”, #最小线程, )))


.子程序 取最大线程, 整数型, 公开, 
.局部变量 xml, 未知类型0x40001, , , 

xml.未知支持库函数_0 (#配置树)
xml.未知支持库函数_1 (#配置文件)
返回 (到整数 (xml.未知支持库函数_37 (“@1”, #最大线程, )))

.子程序 写端口, 逻辑型, 公开, 
.参数 端口文本, 文本型, , 

.局部变量 xml, 未知类型0x40001, , , 

xml.未知支持库函数_0 (#配置树)
xml.未知支持库函数_1 (#配置文件)
xml.未知支持库函数_19 (“@1”, #端口, 端口文本)
返回 (xml.未知支持库函数_2 (#配置文件, ))

.子程序 写最小线程, 逻辑型, 公开, 
.参数 最小线程文本, 文本型, , 

.局部变量 xml, 未知类型0x40001, , , 

xml.未知支持库函数_0 (#配置树)
xml.未知支持库函数_1 (#配置文件)
xml.未知支持库函数_19 (“@1”, #最小线程, 最小线程文本)
返回 (xml.未知支持库函数_2 (#配置文件, ))

.子程序 写最大线程, 逻辑型, 公开, 
.参数 最大线程文本, 文本型, , 

.局部变量 xml, 未知类型0x40001, , , 

xml.未知支持库函数_0 (#配置树)
xml.未知支持库函数_1 (#配置文件)
xml.未知支持库函数_19 (“@1”, #最大线程, 最大线程文本)
返回 (xml.未知支持库函数_2 (#配置文件, ))

.子程序 增加库, 逻辑型, 公开, 
.参数 库名, 文本型, , 

.局部变量 临时数据库, 未知类型0x20001, , , 
.局部变量 临时表, 未知类型0x20002, , , 

临时数据库.未知支持库函数_30 (相加 (#数据库目录, “\”, #系统数据库, #数据库扩展名), 假)
临时表.未知支持库函数_105 (#库表, 临时数据库)
临时表.未知支持库函数_121 ()
临时表.未知支持库函数_136 (1, 库名)
返回 (临时表.未知支持库函数_123 ())


.子程序 删除库, 逻辑型, 公开, 
.参数 库名, 文本型, , 

.局部变量 临时数据库, 未知类型0x20001, , , 
.局部变量 临时表, 未知类型0x20002, , , 
.局部变量 n, 整数型, , , 

临时数据库.未知支持库函数_30 (相加 (#数据库目录, “\”, #系统数据库, #数据库扩展名), 假)
临时表.未知支持库函数_105 (#库表, 临时数据库)
.计次循环首 (临时表.未知支持库函数_150 (), n)
    临时表.未知支持库函数_111 ()
    .如果 (等于 (库名, 临时表.未知支持库函数_137 (1, )))
        临时表.未知支持库函数_122 ()
        返回 (真)
    .否则
        
    .如果结束
    
.计次循环尾 ()
返回 (假)


.子程序 库是否存在, 逻辑型, 公开, 
.参数 库名, 文本型, , 

.局部变量 临时数据库, 未知类型0x20001, , , 
.局部变量 临时表, 未知类型0x20002, , , 
.局部变量 n, 整数型, , , 

临时数据库.未知支持库函数_30 (相加 (#数据库目录, “\”, #系统数据库, #数据库扩展名), 假)
临时表.未知支持库函数_105 (#库表, 临时数据库)
.计次循环首 (临时表.未知支持库函数_150 (), n)
    临时表.未知支持库函数_111 ()
    .如果 (等于 (库名, 临时表.未知支持库函数_137 (1, )))
        返回 (真)
    .否则
        
    .如果结束
    
.计次循环尾 ()
返回 (假)


.子程序 是否注册, 逻辑型, 公开, 本段代码 原本用于商业版 检测 
.局部变量 系统类别, 整数型, , , 

赋值 (系统类别, 取操作系统类别 ())
.如果 (或者 (等于 (系统类别, 4), 等于 (系统类别, 0)))
    返回 (真) ' linux
.否则
    返回 (真) ' win
.如果结束
返回 (假)




.程序集 远程服务程序集, , , 

.子程序 远程服务启动, 逻辑型, , 
.参数 端口, 整数型, , 
.参数 最小线程, 整数型, , 
.参数 最大线程, 整数型, , 

.如果真 (小于 (最小线程, 5))
    赋值 (最小线程, 5)
.如果真结束
.如果真 (小于 (最大线程, 20))
    赋值 (最大线程, 20)
.如果真结束
.如果真 (等于 (端口, 0))
    赋值 (端口, 20202)
.如果真结束
远程服务.未知支持库函数_2 ()
远程服务.未知支持库函数_3 (最小线程, 最大线程)
.如果 (远程服务.未知支持库函数_1 (端口, &服务处理函数, 真))
    
.否则
    返回 (假)
.如果结束
返回 (真)

.子程序 服务处理函数, 空白型, 公开, 
.参数 消息地址, 整数型, , 

.局部变量 请求代码, 文本型, , , 
.局部变量 请求信息, 字节集, , , 
.局部变量 客户句柄, 整数型, , , 

远程服务.未知支持库函数_8 (消息地址, 客户句柄)


.如果 (等于 (远程服务.未知支持库函数_27 (消息地址), 2)) ' 客户端发送字节流到服务器
    远程服务.未知支持库函数_5 (消息地址, 请求代码, 请求信息)
    请求信息处理 (请求代码, 请求信息, 客户句柄)
.否则
    .如果 (等于 (远程服务.未知支持库函数_27 (消息地址), 0)) ' 客户连接到服务端
        
    .否则
        .如果 (等于 (远程服务.未知支持库函数_27 (消息地址), 1)) ' 客户主动或意外断开与服务端的连接
            关闭对象 (客户句柄) ' ------很重要 啊
        .否则
            .如果 (等于 (远程服务.未知支持库函数_27 (消息地址), -1)) ' 出错
                
            .否则
                
            .如果结束
            
        .如果结束
        
    .如果结束
    
.如果结束


.子程序 关闭对象, 空白型, , 要把该离开的“服务器”及其对象 相关的 数据库 表 集 都 关闭
.参数 客户句柄, 整数型, , 

s.未知支持库函数_191 ( [客户句柄], 集)
s.未知支持库函数_106 ( [客户句柄], 表)
s.未知支持库函数_31 ( [客户句柄], 库)

.子程序 请求信息处理, 空白型, , 
.参数 请求代码, 文本型, , 
.参数 请求信息, 字节集, , 
.参数 客户句柄, 整数型, , 

.局部变量 txt, 文本型, , "0", 
.局部变量 操作代码, 字节型, , , 

赋值 (操作代码, 请求信息 [1])
.如果真 (小于 (操作代码, 30)) ' 表 0--29
    .如果真 (小于 (操作代码, 8))
        .如果真 (等于 (操作代码, 2))
            表v到首记录 (请求代码, 客户句柄, 请求信息)
            返回 ()
        .如果真结束
        .如果真 (等于 (操作代码, 3))
            表v首记录前 (请求代码, 客户句柄, 请求信息)
            返回 ()
        .如果真结束
        .如果真 (等于 (操作代码, 4))
            表v尾记录后 (请求代码, 客户句柄, 请求信息)
            返回 ()
        .如果真结束
        .如果真 (等于 (操作代码, 5))
            表v跳过 (请求代码, 客户句柄, 请求信息)
            返回 ()
        .如果真结束
        .如果真 (等于 (操作代码, 6))
            表v读字节集 (请求代码, 客户句柄, 请求信息)
            返回 ()
        .如果真结束
        .如果真 (等于 (操作代码, 7))
            表v跳到 (请求代码, 客户句柄, 请求信息)
            返回 ()
        .如果真结束
        
    .如果真结束
    .如果真 (小于 (操作代码, 16))
        .如果真 (等于 (操作代码, 8))
            表v提交 (请求代码, 客户句柄, 请求信息)
            返回 ()
        .如果真结束
        .如果真 (等于 (操作代码, 9))
            表v编辑 (请求代码, 客户句柄, 请求信息)
            返回 ()
        .如果真结束
        .如果真 (等于 (操作代码, 10))
            表v插入 (请求代码, 客户句柄, 请求信息)
            返回 ()
        .如果真结束
        .如果真 (等于 (操作代码, 11))
            表v取记录号 (请求代码, 客户句柄, 请求信息)
            返回 ()
        .如果真结束
        .如果真 (等于 (操作代码, 12))
            表v打开 (请求代码, 客户句柄, 请求信息)
            返回 ()
        .如果真结束
        .如果真 (等于 (操作代码, 13))
            表v取记录个数 (请求代码, 客户句柄, 请求信息)
            返回 ()
        .如果真结束
        .如果真 (等于 (操作代码, 14))
            表v刷新 (请求代码, 客户句柄, 请求信息)
            返回 ()
        .如果真结束
        .如果真 (等于 (操作代码, 15))
            表v关闭 (请求代码, 客户句柄, 请求信息)
            返回 ()
        .如果真结束
        
    .如果真结束
    .如果真 (等于 (操作代码, 24))
        表v写字节集 (请求代码, 客户句柄, 请求信息)
        返回 ()
    .如果真结束
    .如果真 (等于 (操作代码, 25))
        表v写文本 (请求代码, 客户句柄, 请求信息)
        返回 ()
    .如果真结束
     ' -------------------
    .如果真 (等于 (操作代码, 16))
        表v取所有记录 (请求代码, 客户句柄, 请求信息)
        返回 ()
    .如果真结束
    .如果真 (等于 (操作代码, 17))
        表v是否已打开 (请求代码, 客户句柄, 请求信息)
        返回 ()
    .如果真结束
    .如果真 (等于 (操作代码, 18))
        表v取字段个数 (请求代码, 客户句柄, 请求信息)
        返回 ()
    .如果真结束
    .如果真 (等于 (操作代码, 19))
        表v取所有字段 (请求代码, 客户句柄, 请求信息)
        返回 ()
    .如果真结束
    .如果真 (等于 (操作代码, 20))
        表v取表名 (请求代码, 客户句柄, 请求信息)
        返回 ()
    .如果真结束
    .如果真 (等于 (操作代码, 21))
        表v取消 (请求代码, 客户句柄, 请求信息)
        返回 ()
    .如果真结束
    .如果真 (等于 (操作代码, 22))
        表v到尾记录 (请求代码, 客户句柄, 请求信息)
        返回 ()
    .如果真结束
    .如果真 (等于 (操作代码, 23))
        表v删除 (请求代码, 客户句柄, 请求信息)
        返回 ()
    .如果真结束
    
    返回 ()
.如果真结束
.如果真 (小于 (操作代码, 60)) ' 集 30--59
    .如果真 (小于 (操作代码, 39))
        .如果真 (等于 (操作代码, 31))
            集v到下一记录 (请求代码, 客户句柄, 请求信息)
            返回 ()
        .如果真结束
        .如果真 (等于 (操作代码, 32))
            集v读字节集 (请求代码, 客户句柄, 请求信息)
            返回 ()
        .如果真结束
        .如果真 (等于 (操作代码, 33))
            集v首记录前 (请求代码, 客户句柄, 请求信息)
            返回 ()
        .如果真结束
        .如果真 (等于 (操作代码, 34))
            集v尾记录后 (请求代码, 客户句柄, 请求信息)
            返回 ()
        .如果真结束
        .如果真 (等于 (操作代码, 35))
            集v取记录个数 (请求代码, 客户句柄, 请求信息)
            返回 ()
        .如果真结束
        .如果真 (等于 (操作代码, 36))
            集v取字段个数 (请求代码, 客户句柄, 请求信息)
            返回 ()
        .如果真结束
        .如果真 (等于 (操作代码, 37))
            集v取所有记录 (请求代码, 客户句柄, 请求信息)
            返回 ()
        .如果真结束
        .如果真 (等于 (操作代码, 38))
            集v取所有字段 (请求代码, 客户句柄, 请求信息)
            返回 ()
        .如果真结束
        
    .如果真结束
    .如果真 (等于 (操作代码, 39))
        集v打开 (请求代码, 客户句柄, 请求信息)
        返回 ()
    .如果真结束
    .如果真 (等于 (操作代码, 40))
        集v取参数个数 (请求代码, 客户句柄, 请求信息)
        返回 ()
    .如果真结束
    .如果真 (等于 (操作代码, 41))
        集v置SQL语句 (请求代码, 客户句柄, 请求信息)
        返回 ()
    .如果真结束
    .如果真 (等于 (操作代码, 42))
        集v取所有参数 (请求代码, 客户句柄, 请求信息)
        返回 ()
    .如果真结束
    .如果真 (等于 (操作代码, 43))
        集v是否已打开 (请求代码, 客户句柄, 请求信息)
        返回 ()
    .如果真结束
    .如果真 (等于 (操作代码, 44))
        集v关闭 (请求代码, 客户句柄, 请求信息)
        返回 ()
    .如果真结束
    .如果真 (等于 (操作代码, 45))
        集v绑定字节集参数 (请求代码, 客户句柄, 请求信息)
        返回 ()
    .如果真结束
    .如果真 (等于 (操作代码, 46))
        集v绑定文本参数 (请求代码, 客户句柄, 请求信息)
        返回 ()
    .如果真结束
    
    返回 ()
.如果真结束
.如果真 (小于 (操作代码, 90)) ' 库 60--89
    .如果真 (小于 (操作代码, 70))
        .如果真 (等于 (操作代码, 61))
            库v打开 (请求代码, 客户句柄, 请求信息)
            返回 ()
        .如果真结束
        .如果真 (等于 (操作代码, 62))
            库v关闭 (请求代码, 客户句柄, 请求信息)
            返回 ()
        .如果真结束
        .如果真 (等于 (操作代码, 63))
            库v是否已打开 (请求代码, 客户句柄, 请求信息)
            返回 ()
        .如果真结束
        .如果真 (等于 (操作代码, 64))
            库v执行SQL语句 (请求代码, 客户句柄, 请求信息)
            返回 ()
        .如果真结束
        .如果真 (等于 (操作代码, 65))
            库v置最大等待时间 (请求代码, 客户句柄, 请求信息)
            返回 ()
        .如果真结束
        .如果真 (等于 (操作代码, 66))
            库v取错误码 (请求代码, 客户句柄, 请求信息)
            返回 ()
        .如果真结束
        .如果真 (等于 (操作代码, 67))
            库v取最新插入ID (请求代码, 客户句柄, 请求信息)
            返回 ()
        .如果真结束
        .如果真 (等于 (操作代码, 68))
            库v开始事务 (请求代码, 客户句柄, 请求信息)
            返回 ()
        .如果真结束
        .如果真 (等于 (操作代码, 69))
            库v提交事务 (请求代码, 客户句柄, 请求信息)
            返回 ()
        .如果真结束
        
    .如果真结束
    .如果真 (等于 (操作代码, 70))
        库v回滚事务 (请求代码, 客户句柄, 请求信息)
        返回 ()
    .如果真结束
    .如果真 (等于 (操作代码, 71))
        库V表是否存在 (请求代码, 客户句柄, 请求信息)
        返回 ()
    .如果真结束
    .如果真 (等于 (操作代码, 72))
        库v取所有表 (请求代码, 客户句柄, 请求信息)
        返回 ()
    .如果真结束
    .如果真 (等于 (操作代码, 74))
        库v取表定义 (请求代码, 客户句柄, 请求信息)
        返回 ()
    .如果真结束
    .如果真 (等于 (操作代码, 75))
        库v创建表 (请求代码, 客户句柄, 请求信息)
        返回 ()
    .如果真结束
    .如果真 (等于 (操作代码, 76))
        库v删除表 (请求代码, 客户句柄, 请求信息)
        返回 ()
    .如果真结束
    .如果真 (等于 (操作代码, 77))
        库v清空表 (请求代码, 客户句柄, 请求信息)
        返回 ()
    .如果真结束
    .如果真 (等于 (操作代码, 78))
        库v收缩数据库 (请求代码, 客户句柄, 请求信息)
        返回 ()
    .如果真结束
    .如果真 (等于 (操作代码, 79))
        库v取错误文本 (请求代码, 客户句柄, 请求信息)
        返回 ()
    .如果真结束
    
    返回 ()
.如果真结束
.如果真 (小于 (操作代码, 120)) ' 服务器 90--119
    .如果真 (等于 (操作代码, 90)) ' 请求动态加密文
        远程服务.未知支持库函数_7 (请求代码, 未知支持库函数_3 (到字节集 (动态加密解密文), #默认加密解密文, ))
        返回 ()
    .如果真结束
    .如果真 (等于 (操作代码, 91))
        器v连接 (请求代码, 客户句柄, 请求信息)
        返回 ()
    .如果真结束
    .如果真 (等于 (操作代码, 92))
        器v取所有库 (请求代码, 客户句柄, 请求信息)
        返回 ()
    .如果真结束
    .如果真 (等于 (操作代码, 93))
        器v置端口 (请求代码, 客户句柄, 请求信息)
        返回 ()
    .如果真结束
    .如果真 (等于 (操作代码, 94))
        器v置口令 (请求代码, 客户句柄, 请求信息)
        返回 ()
    .如果真结束
    .如果真 (等于 (操作代码, 95))
        器v置线程 (请求代码, 客户句柄, 请求信息)
        返回 ()
    .如果真结束
    .如果真 (等于 (操作代码, 96))
        器v发送命令 (请求代码, 客户句柄, 请求信息)
        返回 ()
    .如果真结束
    .如果真 (等于 (操作代码, 97))
        器v是否注册 (请求代码, 客户句柄, 请求信息)
        返回 ()
    .如果真结束
    .如果真 (等于 (操作代码, 98))
        器v取注册码 (请求代码, 客户句柄, 请求信息)
        返回 ()
    .如果真结束
    
    
    返回 ()
.如果真结束
返回 ()










.程序集 器程序集, , , 

.子程序 器v连接, 空白型, , 91
.参数 请求代码, 文本型, , 
.参数 客户句柄, 整数型, , 
.参数 请求信息, 字节集, , 

.局部变量 世宝服务器, Esql器, , , 
.局部变量 发来的口令, 文本型, , , 

赋值 (发来的口令, 到文本 (解密字节集 (去代码 (请求信息))))
.如果 (等于 (世宝服务器.取口令 (), 发来的口令))
    远程服务.未知支持库函数_7 (请求代码, 加密字节集 (到字节集 (到文本 (客户句柄))))
.否则
    远程服务.未知支持库函数_7 (请求代码, 加密字节集 ({ 0 }))
.如果结束


.子程序 器v取所有库, 空白型, , 92
.参数 请求代码, 文本型, , 
.参数 客户句柄, 整数型, , 
.参数 请求信息, 字节集, , 

.局部变量 xml, 未知类型0x40001, , , 
.局部变量 txt, 文本型, , "0", 
.局部变量 n, 整数型, , , 
.局部变量 临时ESQL服务器, Esql器, , , 
.局部变量 txts, 整数型, , , 

临时ESQL服务器.取所有库 (txt)
赋值 (txts, 取数组成员数 (txt))
.如果真 (等于 (txts, 0))
    远程服务.未知支持库函数_7 (请求代码, { 0 })
    返回 ()
.如果真结束
xml.未知支持库函数_0 (“0”)
.计次循环首 (txts, n)
    xml.未知支持库函数_11 (“0”, 到文本 (n), txt [n])
.计次循环尾 ()
远程服务.未知支持库函数_7 (请求代码, xml.未知支持库函数_38 ())


.子程序 器v置口令, 空白型, , 94
.参数 请求代码, 文本型, , 
.参数 客户句柄, 整数型, , 
.参数 请求信息, 字节集, , 

.局部变量 新口令, 文本型, , , 
.局部变量 临时ESQL服务器, Esql器, , , 

赋值 (新口令, 到文本 (去代码 (请求信息)))
.如果 (临时ESQL服务器.写口令 (新口令))
    远程服务.未知支持库函数_7 (请求代码, { 1 })
.否则
    远程服务.未知支持库函数_7 (请求代码, { 0 })
.如果结束


.子程序 器v置线程, 空白型, , 95
.参数 请求代码, 文本型, , 
.参数 客户句柄, 整数型, , 
.参数 请求信息, 字节集, , 

.局部变量 分割后, 文本型, , "0", 
.局部变量 最小线程, 文本型, , , 
.局部变量 最大线程, 文本型, , , 
.局部变量 临时ESQL服务器, Esql器, , , 

赋值 (分割后, 分割文本 (到文本 (去代码 (请求信息)), #换行符, ))
.如果真 (小于 (取数组成员数 (分割后), 2))
    远程服务.未知支持库函数_7 (请求代码, { 0 })
    返回 ()
.如果真结束
赋值 (最小线程, 分割后 [1])
赋值 (最大线程, 分割后 [2])
.如果 (临时ESQL服务器.写最小线程 (最小线程))
    .如果 (临时ESQL服务器.写最大线程 (最大线程))
        远程服务.未知支持库函数_7 (请求代码, { 1 })
        返回 ()
    .否则
        
    .如果结束
    
.否则
    
.如果结束
远程服务.未知支持库函数_7 (请求代码, { 0 })

.子程序 器v置端口, 空白型, , 93
.参数 请求代码, 文本型, , 
.参数 客户句柄, 整数型, , 
.参数 请求信息, 字节集, , 

.局部变量 新端口, 文本型, , , 
.局部变量 临时Esql服务器, Esql器, , , 

赋值 (新端口, 到文本 (去代码 (请求信息)))
.如果 (临时Esql服务器.写端口 (新端口))
    远程服务.未知支持库函数_7 (请求代码, { 1 })
.否则
    远程服务.未知支持库函数_7 (请求代码, { 0 })
.如果结束


.子程序 器v发送命令, 空白型, , 96
.参数 请求代码, 文本型, , 
.参数 客户句柄, 整数型, , 
.参数 请求信息, 字节集, , 

.局部变量 命令, 文本型, , , 
.局部变量 txt1, 文本型, , , 
.局部变量 txt2, 文本型, , , 
.局部变量 x1, 整数型, , , 
.局部变量 匿名局部变量_4153, 空白型, , , 
.局部变量 regtxt, 文本型, , "0", 
.局部变量 regbs, 字节集, , , 
.局部变量 n, 整数型, , , 
.局部变量 特征字, 整数型, , , 
.局部变量 系统类别, 整数型, , , 

赋值 (命令, 到文本 (去代码 (请求信息)))
赋值 (x1, 寻找文本 (命令, “ ”, , 假))
.如果真 (等于 (x1, 0))
    远程服务.未知支持库函数_7 (请求代码, { 0 })
    返回 ()
.如果真结束
赋值 (txt1, 删首尾空 (取文本左边 (命令, 相减 (x1, 1))))
赋值 (txt2, 删首尾空 (取文本右边 (命令, 相减 (取文本长度 (命令), x1))))
.如果真 (等于 (txt1, “dm”))
    .如果真 (等于 (txt2, “14”))
        远程服务.未知支持库函数_7 (请求代码, { 1 })
        延时 (1000)
        结束 ()
        返回 ()
    .如果真结束
    
.如果真结束
.如果真 (并且 (等于 (txt1, “run”), 等于 (寻找文本 (txt2, “\”, , 假), -1)))
    运行 (txt2, 假, )
    远程服务.未知支持库函数_7 (请求代码, { 1 })
    返回 ()
.如果真结束
.如果真 (等于 (txt1, “reg”))
    赋值 (系统类别, 取操作系统类别 ())
    .如果 (或者 (等于 (系统类别, 4), 等于 (系统类别, 0))) ' 如果是linux 或 未知
         ' linux
        远程服务.未知支持库函数_7 (请求代码, { 1 })
        返回 ()
        
        
    .否则
         ' win
        .计次循环首 (5, n)
            赋值 (特征字, 取硬盘特征字 ())
            .如果真 (大于 (特征字, 0))
                跳出循环 ()
            .如果真结束
            
        .计次循环尾 ()
        写到文件 (相加 (到文本 (特征字), “.ini”), 到字节集 (txt2))
        远程服务.未知支持库函数_7 (请求代码, { 1 })
        返回 ()
    .如果结束
    
.如果真结束


远程服务.未知支持库函数_7 (请求代码, { 0 })
返回 ()



.子程序 器v是否注册, 空白型, , 97
.参数 请求代码, 文本型, , 
.参数 客户句柄, 整数型, , 
.参数 请求信息, 字节集, , 

.局部变量 临时Esql服务器, Esql器, , , 

.如果 (临时Esql服务器.是否注册 ())
    远程服务.未知支持库函数_7 (请求代码, { 1 })
.否则
    远程服务.未知支持库函数_7 (请求代码, { 0 })
.如果结束


.子程序 重新启动子程序, 空白型, , 
运行 (取执行文件名 (), 假, )


.子程序 器v取注册码, 空白型, , 98
.参数 请求代码, 文本型, , 
.参数 客户句柄, 整数型, , 
.参数 请求信息, 字节集, , 

.局部变量 特征字, 整数型, , , 
.局部变量 n, 整数型, , , 
.局部变量 系统类别, 整数型, , , 

赋值 (系统类别, 取操作系统类别 ())
.如果 (或者 (等于 (系统类别, 4), 等于 (系统类别, 0))) ' 如果是linux 或 未知
     ' linux
    远程服务.未知支持库函数_7 (请求代码, { 0 })
    返回 ()
    
.否则
    .计次循环首 (5, n)
        赋值 (特征字, 取硬盘特征字 ())
        .如果真 (大于 (特征字, 0))
            跳出循环 ()
        .如果真结束
        
    .计次循环尾 ()
    远程服务.未知支持库函数_7 (请求代码, 到字节集 (到文本 (特征字)))
    
.如果结束




.程序集 库程序集, , , 

.子程序 库v打开, 空白型, , 61
.参数 请求代码, 文本型, , 
.参数 客户句柄, 整数型, , 
.参数 请求信息, 字节集, , 

.局部变量 临时数据库文件, 文本型, , , 
.局部变量 临时世宝服务器, Esql器, , , 
.局部变量 文本数组, 文本型, , "0", 
.局部变量 分割后, 文本型, , "0", 
.局部变量 逻辑值, 逻辑型, , , 

赋值 (分割后, 分割文本 (到文本 (解密字节集 (去代码 (请求信息))), #换行符, ))
.如果真 (小于 (取数组成员数 (分割后), 2))
    远程服务.未知支持库函数_7 (请求代码, { 0 })
    返回 ()
.如果真结束
赋值 (临时数据库文件, 分割后 [1])
赋值 (逻辑值, 选择 (等于 (分割后 [2], “真”), 真, 假))
.如果 (等于 (寻找文本 (临时数据库文件, “\”, , 真), -1))
    赋值 (临时数据库文件, 相加 (#数据库目录, “\”, 临时数据库文件))
.否则
    
.如果结束
.如果 (s.未知支持库函数_30 ( [客户句柄], 库, 临时数据库文件, 逻辑值))
    ' 本源码来自易语言资源网(www.5A5X.com)
    赋值 (文本数组, 分割文本 (临时数据库文件, “\”, ))
    .如果 (临时世宝服务器.库是否存在 (临时数据库文件))
        
    .否则
        临时世宝服务器.增加库 (临时数据库文件)
    .如果结束
    
    远程服务.未知支持库函数_7 (请求代码, 加密字节集 (到字节集 (到文本 (客户句柄))))
.否则
    远程服务.未知支持库函数_7 (请求代码, 加密字节集 ({ 0 }))
.如果结束


.子程序 库v是否已打开, 空白型, , 63
.参数 请求代码, 文本型, , 
.参数 客户句柄, 整数型, , 
.参数 请求信息, 字节集, , 

.如果 (s.未知支持库函数_29 ( [客户句柄], 库))
    远程服务.未知支持库函数_7 (请求代码, { 1 })
.否则
    远程服务.未知支持库函数_7 (请求代码, { 0 })
.如果结束



.子程序 库v执行SQL语句, 空白型, , 64
.参数 请求代码, 文本型, , 
.参数 客户句柄, 整数型, , 
.参数 请求信息, 字节集, , 

.如果 (s.未知支持库函数_32 ( [客户句柄], 库, 到文本 (去代码 (请求信息))))
    远程服务.未知支持库函数_7 (请求代码, { 1 })
.否则
    远程服务.未知支持库函数_7 (请求代码, { 0 })
.如果结束


.子程序 库v关闭, 空白型, , 62
.参数 请求代码, 文本型, , 
.参数 客户句柄, 整数型, , 
.参数 请求信息, 字节集, , 

.如果 (s.未知支持库函数_31 ( [客户句柄], 库))
    远程服务.未知支持库函数_7 (请求代码, { 1 })
.否则
    远程服务.未知支持库函数_7 (请求代码, { 0 })
.如果结束


.子程序 库v置最大等待时间, 空白型, , 65
.参数 请求代码, 文本型, , 
.参数 客户句柄, 整数型, , 
.参数 请求信息, 字节集, , 

.如果 (s.未知支持库函数_36 ( [客户句柄], 库, 到整数 (到文本 (去代码 (请求信息)))))
    远程服务.未知支持库函数_7 (请求代码, { 1 })
.否则
    远程服务.未知支持库函数_7 (请求代码, { 0 })
.如果结束


.子程序 库v取错误码, 空白型, , 66
.参数 请求代码, 文本型, , 
.参数 客户句柄, 整数型, , 
.参数 请求信息, 字节集, , 

.局部变量 txt, 文本型, , , 

赋值 (txt, 到文本 (s.未知支持库函数_37 ( [客户句柄], 库)))
.如果 (等于 (txt, “”))
    远程服务.未知支持库函数_7 (请求代码, { 0 })
.否则
    远程服务.未知支持库函数_7 (请求代码, 到字节集 (txt))
.如果结束


.子程序 库v取错误文本, 空白型, , 79
.参数 请求代码, 文本型, , 
.参数 客户句柄, 整数型, , 
.参数 请求信息, 字节集, , 

.局部变量 txt, 文本型, , , 

赋值 (txt, s.未知支持库函数_38 ( [客户句柄], 库))
.如果 (等于 (txt, “”))
    远程服务.未知支持库函数_7 (请求代码, { 0 })
.否则
    远程服务.未知支持库函数_7 (请求代码, 到字节集 (txt))
.如果结束


.子程序 库v取最新插入ID, 空白型, , 67
.参数 请求代码, 文本型, , 
.参数 客户句柄, 整数型, , 
.参数 请求信息, 字节集, , 

远程服务.未知支持库函数_7 (请求代码, 到字节集 (到文本 (s.未知支持库函数_39 ( [客户句柄], 库))))


.子程序 库v开始事务, 空白型, , 68
.参数 请求代码, 文本型, , 
.参数 客户句柄, 整数型, , 
.参数 请求信息, 字节集, , 

.如果 (s.未知支持库函数_44 ( [客户句柄], 库, 到文本 (去代码 (请求信息))))
    远程服务.未知支持库函数_7 (请求代码, { 1 })
.否则
    远程服务.未知支持库函数_7 (请求代码, { 0 })
.如果结束


.子程序 库v提交事务, 空白型, , 69
.参数 请求代码, 文本型, , 
.参数 客户句柄, 整数型, , 
.参数 请求信息, 字节集, , 

.如果 (s.未知支持库函数_45 ( [客户句柄], 库, 到文本 (去代码 (请求信息))))
    远程服务.未知支持库函数_7 (请求代码, { 1 })
.否则
    远程服务.未知支持库函数_7 (请求代码, { 0 })
.如果结束


.子程序 库v回滚事务, 空白型, , 70
.参数 请求代码, 文本型, , 
.参数 客户句柄, 整数型, , 
.参数 请求信息, 字节集, , 

.如果 (s.未知支持库函数_46 ( [客户句柄], 库, 到文本 (去代码 (请求信息))))
    远程服务.未知支持库函数_7 (请求代码, { 1 })
.否则
    远程服务.未知支持库函数_7 (请求代码, { 0 })
.如果结束


.子程序 库V表是否存在, 空白型, , 71
.参数 请求代码, 文本型, , 
.参数 客户句柄, 整数型, , 
.参数 请求信息, 字节集, , 

.如果 (s.未知支持库函数_50 ( [客户句柄], 库, 到文本 (去代码 (请求信息))))
    远程服务.未知支持库函数_7 (请求代码, { 1 })
.否则
    远程服务.未知支持库函数_7 (请求代码, { 0 })
.如果结束


.子程序 库v取所有表, 空白型, , 72
.参数 请求代码, 文本型, , 
.参数 客户句柄, 整数型, , 
.参数 请求信息, 字节集, , 

.局部变量 xml, 未知类型0x40001, , , 
.局部变量 txt, 文本型, , "0", 
.局部变量 是否包含表, 逻辑型, , , 
.局部变量 是否包含视图, 逻辑型, , , 
.局部变量 是否包含临时表或视图, 逻辑型, , , 
.局部变量 n, 整数型, , , 
.局部变量 分割后, 文本型, , "0", 
.局部变量 字节集, 字节集, , , 

赋值 (分割后, 分割文本 (到文本 (去代码 (请求信息)), #换行符, ))
.如果真 (小于 (取数组成员数 (分割后), 3))
    远程服务.未知支持库函数_7 (请求代码, { 0 })
    返回 ()
.如果真结束
赋值 (是否包含表, 选择 (等于 (分割后 [1], “真”), 真, 假))
赋值 (是否包含视图, 选择 (等于 (分割后 [2], “真”), 真, 假))
赋值 (是否包含临时表或视图, 选择 (等于 (分割后 [3], “真”), 真, 假))
赋值 (txt, s.未知支持库函数_51 ( [客户句柄], 库, 是否包含表, 是否包含视图, 是否包含临时表或视图))
xml.未知支持库函数_0 (“0”)
.计次循环首 (取数组成员数 (txt), n)
    xml.未知支持库函数_11 (“0”, 到文本 (n), txt [n])
.计次循环尾 ()
远程服务.未知支持库函数_7 (请求代码, xml.未知支持库函数_38 ())


.子程序 库v取表定义, 空白型, , 74
.参数 请求代码, 文本型, , 
.参数 客户句柄, 整数型, , 
.参数 请求信息, 字节集, , 

.局部变量 txt, 文本型, , , 

赋值 (txt, s.未知支持库函数_53 ( [客户句柄], 库, 到文本 (去代码 (请求信息))))
.如果 (等于 (txt, “”))
    远程服务.未知支持库函数_7 (请求代码, { 0 })
.否则
    远程服务.未知支持库函数_7 (请求代码, 到字节集 (txt))
.如果结束


.子程序 库v创建表, 空白型, , 75
.参数 请求代码, 文本型, , 
.参数 客户句柄, 整数型, , 
.参数 请求信息, 字节集, , 

.局部变量 字段信息数组, 未知类型0x2000A, , "0", 
.局部变量 字段信息, 未知类型0x2000A, , , 
.局部变量 字段信息数, 整数型, , , 
.局部变量 表名称, 文本型, , , 
.局部变量 n, 整数型, , , 
.局部变量 临时XML树, 未知类型0x40001, , , 

临时XML树.未知支持库函数_0 (“0”)
临时XML树.未知支持库函数_1 (去代码 (请求信息))
赋值 (表名称, 临时XML树.未知支持库函数_37 (#库v创建表, #表名称, ))
赋值 (字段信息数, 到整数 (临时XML树.未知支持库函数_31 (#库v创建表, )))
.计次循环首 (字段信息数, n)
    加入成员 (字段信息数组, 字段信息)
    赋值 (字段信息数组 [n], , 临时XML树.未知支持库函数_37 (相加 (#库v创建表, “/”, 到文本 (n)), “1”, ))
    赋值 (字段信息数组 [n], , 到整数 (临时XML树.未知支持库函数_37 (相加 (#库v创建表, “/”, 到文本 (n)), “2”, )))
    赋值 (字段信息数组 [n], , 到整数 (临时XML树.未知支持库函数_37 (相加 (#库v创建表, “/”, 到文本 (n)), “3”, )))
.计次循环尾 ()

.如果 (s.未知支持库函数_61 ( [客户句柄], 库, 表名称, 字段信息数组))
    远程服务.未知支持库函数_7 (请求代码, { 1 })
.否则
    远程服务.未知支持库函数_7 (请求代码, { 0 })
.如果结束


.子程序 库v删除表, 空白型, , 76
.参数 请求代码, 文本型, , 
.参数 客户句柄, 整数型, , 
.参数 请求信息, 字节集, , 

.如果 (s.未知支持库函数_63 ( [客户句柄], 库, 到文本 (去代码 (请求信息))))
    远程服务.未知支持库函数_7 (请求代码, { 1 })
.否则
    远程服务.未知支持库函数_7 (请求代码, { 0 })
.如果结束


.子程序 库v清空表, 空白型, , 77
.参数 请求代码, 文本型, , 
.参数 客户句柄, 整数型, , 
.参数 请求信息, 字节集, , 

.如果 (s.未知支持库函数_64 ( [客户句柄], 库, 到文本 (去代码 (请求信息))))
    远程服务.未知支持库函数_7 (请求代码, { 1 })
.否则
    远程服务.未知支持库函数_7 (请求代码, { 0 })
.如果结束


.子程序 库v收缩数据库, 空白型, , 78
.参数 请求代码, 文本型, , 
.参数 客户句柄, 整数型, , 
.参数 请求信息, 字节集, , 

.如果 (s.未知支持库函数_80 ( [客户句柄], 库))
    远程服务.未知支持库函数_7 (请求代码, { 1 })
.否则
    远程服务.未知支持库函数_7 (请求代码, { 0 })
.如果结束


.程序集 表程序集, , , 

.子程序 表v打开, 空白型, , 12
.参数 请求代码, 文本型, , 
.参数 客户句柄, 整数型, , 
.参数 请求信息, 字节集, , 

.局部变量 临时表名, 文本型, , , 
.局部变量 临时所属库, 文本型, , , 
.局部变量 分割后, 文本型, , "0", 

赋值 (分割后, 分割文本 (到文本 (去代码 (请求信息)), #换行符, ))
.如果真 (小于 (取数组成员数 (分割后), 2))
    远程服务.未知支持库函数_7 (请求代码, 加密字节集 ({ 0 }))
    返回 ()
.如果真结束
赋值 (临时表名, 分割后 [1])
赋值 (临时所属库, 分割后 [2])

.如果真 (等于 (临时所属库, “”))
    远程服务.未知支持库函数_7 (请求代码, 加密字节集 ({ 0 }))
    返回 ()
.如果真结束

.如果 (s.未知支持库函数_105 ( [客户句柄], 表, 临时表名, s [到整数 (临时所属库)].库))
    远程服务.未知支持库函数_7 (请求代码, 加密字节集 (到字节集 (到文本 (客户句柄))))
.否则
    远程服务.未知支持库函数_7 (请求代码, 加密字节集 ({ 0 }))
.如果结束


.子程序 表v取记录个数, 空白型, , 13
.参数 请求代码, 文本型, , 
.参数 客户句柄, 整数型, , 
.参数 请求信息, 字节集, , 

s.未知支持库函数_125 ( [客户句柄], 表)
远程服务.未知支持库函数_7 (请求代码, 到字节集 (到文本 (s.未知支持库函数_150 ( [客户句柄], 表))))


.子程序 表v刷新, 空白型, , 14
.参数 请求代码, 文本型, , 
.参数 客户句柄, 整数型, , 
.参数 请求信息, 字节集, , 

.如果 (s.未知支持库函数_125 ( [客户句柄], 表))
    远程服务.未知支持库函数_7 (请求代码, { 1 })
.否则
    远程服务.未知支持库函数_7 (请求代码, { 0 })
.如果结束


.子程序 表v关闭, 空白型, , 15
.参数 请求代码, 文本型, , 
.参数 客户句柄, 整数型, , 
.参数 请求信息, 字节集, , 

.如果 (s.未知支持库函数_106 ( [客户句柄], 表))
    远程服务.未知支持库函数_7 (请求代码, { 1 })
.否则
    远程服务.未知支持库函数_7 (请求代码, { 0 })
.如果结束


.子程序 表v取所有记录, 空白型, , 16
.参数 请求代码, 文本型, , 
.参数 客户句柄, 整数型, , 
.参数 请求信息, 字节集, , 

.局部变量 是否包含表头, 逻辑型, , , 
.局部变量 xml, 未知类型0x40001, , , 
.局部变量 txt, 文本型, , "0", 
.局部变量 y, 整数型, , , 
.局部变量 x, 整数型, , , 

赋值 (是否包含表头, 选择 (等于 (到文本 (去代码 (请求信息)), “真”), 真, 假))
赋值 (txt, s.未知支持库函数_151 ( [客户句柄], 表, 是否包含表头))
xml.未知支持库函数_0 (“0”)
.计次循环首 (取数组下标 (txt, 1), y)
    xml.未知支持库函数_11 (“0”, 到文本 (y), “”)
    .计次循环首 (取数组下标 (txt, 2), x)
        xml.未知支持库函数_11 (相加 (“0/”, 到文本 (y)), 到文本 (x), txt [y] [x])
    .计次循环尾 ()
.计次循环尾 ()
远程服务.未知支持库函数_7 (请求代码, xml.未知支持库函数_38 ())



.子程序 表v是否已打开, 空白型, , 17
.参数 请求代码, 文本型, , 
.参数 客户句柄, 整数型, , 
.参数 请求信息, 字节集, , 

.如果 (s.未知支持库函数_104 ( [客户句柄], 表))
    远程服务.未知支持库函数_7 (请求代码, { 1 })
.否则
    远程服务.未知支持库函数_7 (请求代码, { 0 })
.如果结束


.子程序 表v取字段个数, 空白型, , 18
.参数 请求代码, 文本型, , 
.参数 客户句柄, 整数型, , 
.参数 请求信息, 字节集, , 

远程服务.未知支持库函数_7 (请求代码, 到字节集 (到文本 (s.未知支持库函数_152 ( [客户句柄], 表))))


.子程序 表v读字节集, 空白型, , 6
.参数 请求代码, 文本型, , 
.参数 客户句柄, 整数型, , 
.参数 请求信息, 字节集, , 

.局部变量 读得值, 字节集, , , 
.局部变量 txt, 文本型, , , 
.局部变量 txtint, 整数型, , , 
.局部变量 字节集, 字节集, , , 

赋值 (txt, 到文本 (去代码 (请求信息)))
赋值 (txtint, 到整数 (txt))
.如果 (大于 (txtint, 0))
    .如果 (s.未知支持库函数_135 ( [客户句柄], 表, txtint, 读得值))
        赋值 (字节集, { 1 })
    .否则
        赋值 (字节集, { 0 })
    .如果结束
    
.否则
    .如果 (s.未知支持库函数_135 ( [客户句柄], 表, txt, 读得值))
        赋值 (字节集, { 1 })
    .否则
        赋值 (字节集, { 0 })
    .如果结束
    
.如果结束
远程服务.未知支持库函数_7 (请求代码, 相加 (字节集, 读得值))


.子程序 表v跳过, 空白型, , 5
.参数 请求代码, 文本型, , 
.参数 客户句柄, 整数型, , 
.参数 请求信息, 字节集, , 

.如果 (s.未知支持库函数_111 ( [客户句柄], 表, 到整数 (到文本 (去代码 (请求信息)))))
    远程服务.未知支持库函数_7 (请求代码, { 1 })
.否则
    远程服务.未知支持库函数_7 (请求代码, { 0 })
.如果结束


.子程序 表v跳到, 空白型, , 7
.参数 请求代码, 文本型, , 
.参数 客户句柄, 整数型, , 
.参数 请求信息, 字节集, , 

.如果 (s.未知支持库函数_112 ( [客户句柄], 表, 到整数 (到文本 (去代码 (请求信息)))))
    远程服务.未知支持库函数_7 (请求代码, { 1 })
.否则
    远程服务.未知支持库函数_7 (请求代码, { 0 })
.如果结束


.子程序 表v写字节集, 空白型, , 24
.参数 请求代码, 文本型, , 
.参数 客户句柄, 整数型, , 
.参数 请求信息, 字节集, , 

.局部变量 长度整数, 整数型, , , 
.局部变量 txt, 文本型, , , 
.局部变量 txtint, 整数型, , , 
.局部变量 名称或位置文本, 文本型, , , 

赋值 (长度整数, 取字节集数据 (请求信息, #整数型, 2))
赋值 (txt, 到文本 (取字节集中间 (请求信息, 6, 长度整数)))
赋值 (txtint, 到整数 (txt))
.如果 (大于 (txtint, 0))
    .如果 (s.未知支持库函数_136 ( [客户句柄], 表, txtint, 取字节集右边 (请求信息, 相减 (取字节集长度 (请求信息), 相加 (5, 长度整数)))))
        远程服务.未知支持库函数_7 (请求代码, { 1 })
        返回 ()
    .否则
        
    .如果结束
    
.否则
    .如果 (s.未知支持库函数_136 ( [客户句柄], 表, txt, 取字节集右边 (请求信息, 相减 (取字节集长度 (请求信息), 相加 (5, 长度整数)))))
        远程服务.未知支持库函数_7 (请求代码, { 1 })
        返回 ()
    .否则
        
    .如果结束
    
.如果结束
远程服务.未知支持库函数_7 (请求代码, { 0 })


.子程序 表v编辑, 空白型, , 9
.参数 请求代码, 文本型, , 
.参数 客户句柄, 整数型, , 
.参数 请求信息, 字节集, , 

.如果 (s.未知支持库函数_120 ( [客户句柄], 表))
    远程服务.未知支持库函数_7 (请求代码, { 1 })
.否则
    远程服务.未知支持库函数_7 (请求代码, { 0 })
.如果结束


.子程序 表v提交, 空白型, , 8
.参数 请求代码, 文本型, , 
.参数 客户句柄, 整数型, , 
.参数 请求信息, 字节集, , 

.如果 (s.未知支持库函数_123 ( [客户句柄], 表))
    远程服务.未知支持库函数_7 (请求代码, { 1 })
.否则
    远程服务.未知支持库函数_7 (请求代码, { 0 })
.如果结束


.子程序 表v插入, 空白型, , 10
.参数 请求代码, 文本型, , 
.参数 客户句柄, 整数型, , 
.参数 请求信息, 字节集, , 

.如果 (s.未知支持库函数_121 ( [客户句柄], 表))
    远程服务.未知支持库函数_7 (请求代码, { 1 })
.否则
    远程服务.未知支持库函数_7 (请求代码, { 0 })
.如果结束


.子程序 表v取所有字段, 空白型, , 19
.参数 请求代码, 文本型, , 
.参数 客户句柄, 整数型, , 
.参数 请求信息, 字节集, , 

.局部变量 txt, 文本型, , "0", 
.局部变量 XML树, 未知类型0x40001, , , 
.局部变量 n, 整数型, , , 
.局部变量 字节集, 字节集, , , 

赋值 (txt, s.未知支持库函数_153 ( [客户句柄], 表))
XML树.未知支持库函数_0 (“0”)
.计次循环首 (取数组成员数 (txt), n)
    XML树.未知支持库函数_11 (“0”, 到文本 (n), txt [n])
.计次循环尾 ()
远程服务.未知支持库函数_7 (请求代码, XML树.未知支持库函数_38 ())


.子程序 表v取表名, 空白型, , 20
.参数 请求代码, 文本型, , 
.参数 客户句柄, 整数型, , 
.参数 请求信息, 字节集, , 

.局部变量 txt, 文本型, , , 

赋值 (txt, s.未知支持库函数_148 ( [客户句柄], 表))
.如果 (等于 (txt, “”))
    远程服务.未知支持库函数_7 (请求代码, { 0 })
.否则
    远程服务.未知支持库函数_7 (请求代码, 到字节集 (txt))
.如果结束


.子程序 表v取记录号, 空白型, , 11
.参数 请求代码, 文本型, , 
.参数 客户句柄, 整数型, , 
.参数 请求信息, 字节集, , 

远程服务.未知支持库函数_7 (请求代码, 到字节集 (到文本 (s.未知支持库函数_149 ( [客户句柄], 表))))


.子程序 表v取消, 空白型, , 21
.参数 请求代码, 文本型, , 
.参数 客户句柄, 整数型, , 
.参数 请求信息, 字节集, , 

.如果 (s.未知支持库函数_124 ( [客户句柄], 表))
    远程服务.未知支持库函数_7 (请求代码, { 1 })
.否则
    远程服务.未知支持库函数_7 (请求代码, { 0 })
.如果结束


.子程序 表v删除, 空白型, , 23
.参数 请求代码, 文本型, , 
.参数 客户句柄, 整数型, , 
.参数 请求信息, 字节集, , 

.如果 (s.未知支持库函数_122 ( [客户句柄], 表))
    远程服务.未知支持库函数_7 (请求代码, { 1 })
.否则
    远程服务.未知支持库函数_7 (请求代码, { 0 })
.如果结束


.子程序 表v尾记录后, 空白型, , 4
.参数 请求代码, 文本型, , 
.参数 客户句柄, 整数型, , 
.参数 请求信息, 字节集, , 

.如果 (s.未知支持库函数_114 ( [客户句柄], 表))
    远程服务.未知支持库函数_7 (请求代码, { 1 })
.否则
    远程服务.未知支持库函数_7 (请求代码, { 0 })
.如果结束


.子程序 表v首记录前, 空白型, , 3
.参数 请求代码, 文本型, , 
.参数 客户句柄, 整数型, , 
.参数 请求信息, 字节集, , 

.如果 (s.未知支持库函数_113 ( [客户句柄], 表))
    远程服务.未知支持库函数_7 (请求代码, { 1 })
.否则
    远程服务.未知支持库函数_7 (请求代码, { 0 })
.如果结束


.子程序 表v到首记录, 空白型, , 2
.参数 请求代码, 文本型, , 
.参数 客户句柄, 整数型, , 
.参数 请求信息, 字节集, , 

.如果 (s.未知支持库函数_107 ( [客户句柄], 表))
    远程服务.未知支持库函数_7 (请求代码, { 1 })
.否则
    远程服务.未知支持库函数_7 (请求代码, { 0 })
.如果结束


.子程序 表v到尾记录, 空白型, , 22
.参数 请求代码, 文本型, , 
.参数 客户句柄, 整数型, , 
.参数 请求信息, 字节集, , 

.如果 (s.未知支持库函数_108 ( [客户句柄], 表))
    远程服务.未知支持库函数_7 (请求代码, { 1 })
.否则
    远程服务.未知支持库函数_7 (请求代码, { 0 })
.如果结束



.子程序 表v写文本, 空白型, , 25
.参数 请求代码, 文本型, , 
.参数 客户句柄, 整数型, , 
.参数 请求信息, 字节集, , 

.局部变量 长度整数, 整数型, , , 
.局部变量 txt, 文本型, , , 
.局部变量 txtint, 整数型, , , 
.局部变量 名称或位置文本, 文本型, , , 
.局部变量 形式字节, 字节型, , , 
.局部变量 预写入文本, 文本型, , , 

赋值 (形式字节, 请求信息 [取字节集长度 (请求信息)])
赋值 (请求信息, 取字节集左边 (请求信息, 相减 (取字节集长度 (请求信息), 1)))

赋值 (长度整数, 取字节集数据 (请求信息, #整数型, 2))
赋值 (txt, 到文本 (取字节集中间 (请求信息, 6, 长度整数)))
赋值 (txtint, 到整数 (txt))
赋值 (预写入文本, 到文本 (取字节集右边 (请求信息, 相减 (取字节集长度 (请求信息), 相加 (5, 长度整数)))))
.如果真 (或者 (等于 (形式字节, 10), 等于 (形式字节, 0))) ' 文本等
    .如果 (大于 (txtint, 0))
        .如果 (s.未知支持库函数_136 ( [客户句柄], 表, txtint, 预写入文本))
            远程服务.未知支持库函数_7 (请求代码, { 1 })
            返回 ()
        .否则
            
        .如果结束
        
    .否则
        .如果 (s.未知支持库函数_136 ( [客户句柄], 表, txt, 预写入文本))
            远程服务.未知支持库函数_7 (请求代码, { 1 })
            返回 ()
        .否则
            
        .如果结束
        
    .如果结束
    远程服务.未知支持库函数_7 (请求代码, { 0 })
    返回 ()
.如果真结束
.如果真 (或者 (等于 (形式字节, 4), 等于 (形式字节, -1))) ' 整数等
    .如果 (大于 (txtint, 0))
        .如果 (s.未知支持库函数_136 ( [客户句柄], 表, txtint, 到长整数 (预写入文本)))
            远程服务.未知支持库函数_7 (请求代码, { 1 })
            返回 ()
        .否则
            
        .如果结束
        
    .否则
        .如果 (s.未知支持库函数_136 ( [客户句柄], 表, txt, 到长整数 (预写入文本)))
            远程服务.未知支持库函数_7 (请求代码, { 1 })
            返回 ()
        .否则
            
        .如果结束
        
    .如果结束
    远程服务.未知支持库函数_7 (请求代码, { 0 })
    返回 ()
.如果真结束
.如果真 (等于 (形式字节, 6)) ' 小数等
    .如果 (大于 (txtint, 0))
        .如果 (s.未知支持库函数_136 ( [客户句柄], 表, txtint, 到小数 (预写入文本)))
            远程服务.未知支持库函数_7 (请求代码, { 1 })
            返回 ()
        .否则
            
        .如果结束
        
    .否则
        .如果 (s.未知支持库函数_136 ( [客户句柄], 表, txt, 到小数 (预写入文本)))
            远程服务.未知支持库函数_7 (请求代码, { 1 })
            返回 ()
        .否则
            
        .如果结束
        
    .如果结束
    远程服务.未知支持库函数_7 (请求代码, { 0 })
    返回 ()
.如果真结束
远程服务.未知支持库函数_7 (请求代码, { 0 })
返回 ()




.程序集 集程序集, , , 

.子程序 集v置SQL语句, 空白型, , 41
.参数 请求代码, 文本型, , 
.参数 客户句柄, 整数型, , 
.参数 请求信息, 字节集, , 

.局部变量 SQL语句, 文本型, , , 
.局部变量 临时XML树, 未知类型0x40001, , , 
.局部变量 临时所属库, 文本型, , , 

临时XML树.未知支持库函数_0 (“0”)
临时XML树.未知支持库函数_1 (去代码 (请求信息))
赋值 (SQL语句, 临时XML树.未知支持库函数_33 (相加 (#集v置SQL语句, “/”, #SQL语句), ))
赋值 (临时所属库, 临时XML树.未知支持库函数_37 (#集v置SQL语句, #库, ))
.如果真 (等于 (临时所属库, “”))
    远程服务.未知支持库函数_7 (请求代码, 加密字节集 ({ 0 }))
    返回 ()
.如果真结束
.如果 (s.未知支持库函数_184 ( [客户句柄], 集, SQL语句, s [到整数 (临时所属库)].库))
    远程服务.未知支持库函数_7 (请求代码, 加密字节集 (到字节集 (到文本 (客户句柄))))
.否则
    远程服务.未知支持库函数_7 (请求代码, 加密字节集 ({ 0 }))
.如果结束


.子程序 集v取参数个数, 空白型, , 40
.参数 请求代码, 文本型, , 
.参数 客户句柄, 整数型, , 
.参数 请求信息, 字节集, , 

远程服务.未知支持库函数_7 (请求代码, 到字节集 (到文本 (s.未知支持库函数_185 ( [客户句柄], 集))))
 ' 本源码来自易语言资源网(www.5A5X.com)

.子程序 集v取所有参数, 空白型, , 42
.参数 请求代码, 文本型, , 
.参数 客户句柄, 整数型, , 
.参数 请求信息, 字节集, , 

.局部变量 txt, 文本型, , "0", 
.局部变量 XML树, 未知类型0x40001, , , 
.局部变量 n, 整数型, , , 

赋值 (txt, s.未知支持库函数_186 ( [客户句柄], 集))
XML树.未知支持库函数_0 (“0”)
.计次循环首 (取数组成员数 (txt), n)
    XML树.未知支持库函数_11 (“0”, 到文本 (n), txt [n])
.计次循环尾 ()
远程服务.未知支持库函数_7 (请求代码, XML树.未知支持库函数_38 ())


.子程序 集v绑定文本参数, 空白型, , 46
.参数 请求代码, 文本型, , 
.参数 客户句柄, 整数型, , 
.参数 请求信息, 字节集, , 

.局部变量 长度整数, 整数型, , , 
.局部变量 txt, 文本型, , , 
.局部变量 txtint, 整数型, , , 
.局部变量 名称或位置文本, 文本型, , , 
.局部变量 空吗, 逻辑型, , , 
.局部变量 捆绑文本, 文本型, , , 
.局部变量 形式字节, 字节型, , , 

.如果 (等于 (请求信息 [相减 (取字节集长度 (请求信息), 1)], 1))
    赋值 (空吗, 真)
.否则
    赋值 (空吗, 假)
.如果结束
赋值 (形式字节, 请求信息 [取字节集长度 (请求信息)])
赋值 (请求信息, 取字节集左边 (请求信息, 相减 (取字节集长度 (请求信息), 2)))

赋值 (长度整数, 取字节集数据 (请求信息, #整数型, 2))
赋值 (txt, 到文本 (取字节集中间 (请求信息, 6, 长度整数)))
赋值 (txtint, 到整数 (txt))
赋值 (捆绑文本, 到文本 (取字节集右边 (请求信息, 相减 (取字节集长度 (请求信息), 相加 (5, 长度整数)))))


.如果 (不等于 (空吗, 真))
    .如果真 (或者 (等于 (形式字节, 10), 等于 (形式字节, 0))) ' 文本等
        .如果 (大于 (txtint, 0))
            .如果 (s.未知支持库函数_187 ( [客户句柄], 集, txtint, 捆绑文本))
                远程服务.未知支持库函数_7 (请求代码, { 1 })
                返回 ()
            .否则
                
            .如果结束
            
        .否则
            .如果 (s.未知支持库函数_187 ( [客户句柄], 集, txt, 捆绑文本))
                远程服务.未知支持库函数_7 (请求代码, { 1 })
                返回 ()
            .否则
                
            .如果结束
            
        .如果结束
        
    .如果真结束
    .如果真 (或者 (等于 (形式字节, 4), 等于 (形式字节, -1))) ' 整数等
        .如果 (大于 (txtint, 0))
            .如果 (s.未知支持库函数_187 ( [客户句柄], 集, txtint, 到长整数 (捆绑文本)))
                远程服务.未知支持库函数_7 (请求代码, { 1 })
                返回 ()
            .否则
                
            .如果结束
            
        .否则
            .如果 (s.未知支持库函数_187 ( [客户句柄], 集, txt, 到长整数 (捆绑文本)))
                远程服务.未知支持库函数_7 (请求代码, { 1 })
                返回 ()
            .否则
                
            .如果结束
            
        .如果结束
        
    .如果真结束
    .如果真 (等于 (形式字节, 6)) ' 小数等
        .如果 (大于 (txtint, 0))
            .如果 (s.未知支持库函数_187 ( [客户句柄], 集, txtint, 到小数 (捆绑文本)))
                远程服务.未知支持库函数_7 (请求代码, { 1 })
                返回 ()
            .否则
                
            .如果结束
            
        .否则
            .如果 (s.未知支持库函数_187 ( [客户句柄], 集, txt, 到小数 (捆绑文本)))
                远程服务.未知支持库函数_7 (请求代码, { 1 })
                返回 ()
            .否则
                
            .如果结束
            
        .如果结束
        
    .如果真结束
    远程服务.未知支持库函数_7 (请求代码, { 0 })
    返回 ()
.否则
    .如果 (大于 (txtint, 0))
        .如果 (s.未知支持库函数_187 ( [客户句柄], 集, txtint, ))
            远程服务.未知支持库函数_7 (请求代码, { 1 })
            返回 ()
        .否则
            
        .如果结束
        
    .否则
        .如果 (s.未知支持库函数_187 ( [客户句柄], 集, txt, ))
            远程服务.未知支持库函数_7 (请求代码, { 1 })
            返回 ()
        .否则
            
        .如果结束
        
    .如果结束
    远程服务.未知支持库函数_7 (请求代码, { 0 })
    返回 ()
.如果结束




.子程序 集v绑定字节集参数, 空白型, , 45
.参数 请求代码, 文本型, , 
.参数 客户句柄, 整数型, , 
.参数 请求信息, 字节集, , 

.局部变量 长度整数, 整数型, , , 
.局部变量 txt, 文本型, , , 
.局部变量 txtint, 整数型, , , 
.局部变量 名称或位置文本, 文本型, , , 
.局部变量 空吗, 逻辑型, , , 
.局部变量 捆绑字节集, 字节集, , , 

.如果 (等于 (请求信息 [取字节集长度 (请求信息)], 1))
    赋值 (空吗, 真)
.否则
    赋值 (空吗, 假)
.如果结束
赋值 (请求信息, 取字节集左边 (请求信息, 相减 (取字节集长度 (请求信息), 1)))

赋值 (长度整数, 取字节集数据 (请求信息, #整数型, 2))
赋值 (txt, 到文本 (取字节集中间 (请求信息, 6, 长度整数)))
赋值 (txtint, 到整数 (txt))
赋值 (捆绑字节集, 取字节集右边 (请求信息, 相减 (取字节集长度 (请求信息), 相加 (5, 长度整数))))



.如果 (不等于 (空吗, 真))
    .如果 (大于 (txtint, 0))
        .如果 (s.未知支持库函数_187 ( [客户句柄], 集, txtint, 捆绑字节集))
            远程服务.未知支持库函数_7 (请求代码, { 1 })
            返回 ()
        .否则
            
        .如果结束
        
    .否则
        .如果 (s.未知支持库函数_187 ( [客户句柄], 集, txt, 捆绑字节集))
            远程服务.未知支持库函数_7 (请求代码, { 1 })
            返回 ()
        .否则
            
        .如果结束
        
    .如果结束
    远程服务.未知支持库函数_7 (请求代码, { 0 })
    返回 ()
.否则
    .如果 (大于 (txtint, 0))
        .如果 (s.未知支持库函数_187 ( [客户句柄], 集, txtint, ))
            远程服务.未知支持库函数_7 (请求代码, { 1 })
            返回 ()
        .否则
            
        .如果结束
        
    .否则
        .如果 (s.未知支持库函数_187 ( [客户句柄], 集, txt, ))
            远程服务.未知支持库函数_7 (请求代码, { 1 })
            返回 ()
        .否则
            
        .如果结束
        
    .如果结束
    远程服务.未知支持库函数_7 (请求代码, { 0 })
    返回 ()
.如果结束


.子程序 集v是否已打开, 空白型, , 43
.参数 请求代码, 文本型, , 
.参数 客户句柄, 整数型, , 
.参数 请求信息, 字节集, , 

.如果 (s.未知支持库函数_189 ( [客户句柄], 集))
    远程服务.未知支持库函数_7 (请求代码, { 1 })
.否则
    远程服务.未知支持库函数_7 (请求代码, { 0 })
.如果结束


.子程序 集v打开, 空白型, , 39
.参数 请求代码, 文本型, , 
.参数 客户句柄, 整数型, , 
.参数 请求信息, 字节集, , 

.如果 (s.未知支持库函数_190 ( [客户句柄], 集))
    远程服务.未知支持库函数_7 (请求代码, { 1 })
.否则
    远程服务.未知支持库函数_7 (请求代码, { 0 })
.如果结束


.子程序 集v关闭, 空白型, , 44
.参数 请求代码, 文本型, , 
.参数 客户句柄, 整数型, , 
.参数 请求信息, 字节集, , 

.如果 (s.未知支持库函数_191 ( [客户句柄], 集))
    远程服务.未知支持库函数_7 (请求代码, { 1 })
.否则
    远程服务.未知支持库函数_7 (请求代码, { 0 })
.如果结束


.子程序 集v读字节集, 空白型, , 32
.参数 请求代码, 文本型, , 
.参数 客户句柄, 整数型, , 
.参数 请求信息, 字节集, , 

.局部变量 读得值, 字节集, , , 
.局部变量 txt, 文本型, , , 
.局部变量 txtint, 整数型, , , 
.局部变量 字节集, 字节集, , , 

赋值 (txt, 到文本 (去代码 (请求信息)))
赋值 (txtint, 到整数 (txt))
.如果 (大于 (txtint, 0))
    .如果 (s.未知支持库函数_192 ( [客户句柄], 集, txtint, 读得值))
        赋值 (字节集, { 1 })
    .否则
        赋值 (字节集, { 0 })
    .如果结束
    
.否则
    .如果 (s.未知支持库函数_192 ( [客户句柄], 集, txt, 读得值))
        赋值 (字节集, { 1 })
    .否则
        赋值 (字节集, { 0 })
    .如果结束
    
.如果结束
远程服务.未知支持库函数_7 (请求代码, 相加 (字节集, 读得值))


.子程序 集v到下一记录, 空白型, , 31
.参数 请求代码, 文本型, , 
.参数 客户句柄, 整数型, , 
.参数 请求信息, 字节集, , 

.如果 (s.未知支持库函数_198 ( [客户句柄], 集))
    远程服务.未知支持库函数_7 (请求代码, { 1 })
.否则
    远程服务.未知支持库函数_7 (请求代码, { 0 })
.如果结束


.子程序 集v首记录前, 空白型, , 33
.参数 请求代码, 文本型, , 
.参数 客户句柄, 整数型, , 
.参数 请求信息, 字节集, , 

.如果 (s.未知支持库函数_200 ( [客户句柄], 集))
    远程服务.未知支持库函数_7 (请求代码, { 1 })
.否则
    远程服务.未知支持库函数_7 (请求代码, { 0 })
.如果结束


.子程序 集v尾记录后, 空白型, , 34
.参数 请求代码, 文本型, , 
.参数 客户句柄, 整数型, , 
.参数 请求信息, 字节集, , 

.如果 (s.未知支持库函数_201 ( [客户句柄], 集))
    远程服务.未知支持库函数_7 (请求代码, { 1 })
.否则
    远程服务.未知支持库函数_7 (请求代码, { 0 })
.如果结束


.子程序 集v取记录个数, 空白型, , 35
.参数 请求代码, 文本型, , 
.参数 客户句柄, 整数型, , 
.参数 请求信息, 字节集, , 

远程服务.未知支持库函数_7 (请求代码, 到字节集 (到文本 (s.未知支持库函数_208 ( [客户句柄], 集))))


.子程序 集v取所有记录, 空白型, , 37
.参数 请求代码, 文本型, , 
.参数 客户句柄, 整数型, , 
.参数 请求信息, 字节集, , 

.局部变量 是否包含表头, 逻辑型, , , 
.局部变量 xml, 未知类型0x40001, , , 
.局部变量 txt, 文本型, , "0", 
.局部变量 y, 整数型, , , 
.局部变量 x, 整数型, , , 

赋值 (是否包含表头, 选择 (等于 (到文本 (去代码 (请求信息)), “真”), 真, 假))
赋值 (txt, s.未知支持库函数_209 ( [客户句柄], 集, 是否包含表头))
xml.未知支持库函数_0 (“0”)
.计次循环首 (取数组下标 (txt, 1), y)
    xml.未知支持库函数_11 (“0”, 到文本 (y), “”)
    .计次循环首 (取数组下标 (txt, 2), x)
        xml.未知支持库函数_11 (相加 (“0/”, 到文本 (y)), 到文本 (x), txt [y] [x])
    .计次循环尾 ()
.计次循环尾 ()
远程服务.未知支持库函数_7 (请求代码, xml.未知支持库函数_38 ())


.子程序 集v取字段个数, 空白型, , 36
.参数 请求代码, 文本型, , 
.参数 客户句柄, 整数型, , 
.参数 请求信息, 字节集, , 

远程服务.未知支持库函数_7 (请求代码, 到字节集 (到文本 (s.未知支持库函数_210 ( [客户句柄], 集))))


.子程序 集v取所有字段, 空白型, , 38
.参数 请求代码, 文本型, , 
.参数 客户句柄, 整数型, , 
.参数 请求信息, 字节集, , 

.局部变量 txt, 文本型, , "0", 
.局部变量 XML树, 未知类型0x40001, , , 
.局部变量 n, 整数型, , , 

赋值 (txt, s.未知支持库函数_211 ( [客户句柄], 集))
XML树.未知支持库函数_0 (“0”)
.计次循环首 (取数组成员数 (txt), n)
    XML树.未知支持库函数_11 (“0”, 到文本 (n), txt [n])
.计次循环尾 ()
远程服务.未知支持库函数_7 (请求代码, XML树.未知支持库函数_38 ())


.程序集 Linux程序集, , , 

.子程序 linux方式启动, 空白型, , 
.局部变量 txt, 文本型, , , 

赋值 (不能退出, 真)
linux执行指令 (“shibao”)
标准输出 (相加 (“>正常启动完毕！”, #换行符))
.判断循环首 (不能退出)
    标准输出 (“<”)
    赋值 (txt, 标准输入 ())
    linux执行指令 (txt)
    
.判断循环尾 ()


.子程序 linux执行指令, 空白型, , 
.参数 命令文本, 文本型, , 

.局部变量 a, 文本型, , , 

赋值 (a, “>”)
.如果 (等于 (取代码 (命令文本, ), 10))
    赋值 (命令文本, “shibao”)
.否则
    
.如果结束
.如果 (等于 (命令文本, “help”))
    标准输出 (相加 (a, “help  显示帮助    shibao  版权信息    quit 退出程序”, #换行符))
.否则
    
.如果结束
.如果 (等于 (命令文本, “quit”))
    标准输出 (相加 (a, “正在退出程序......”, #换行符))
    结束 ()
.否则
    
.如果结束
.如果 (等于 (命令文本, “shibao”))
    标准输出 (相加 (#换行符, #换行符, #换行符, “                         ”, #软件名称与版本, “”, #换行符))
    标准输出 (相加 (“                           版权所有 www.shibao.net”, #换行符, #换行符))
    
.否则
    
.如果结束


.窗口程序集 win默认窗口程序集, , , 

.程序集变量 可否退出, 逻辑型, , , 
.子程序 _win默认窗口_创建完毕, 空白型, , 
.局部变量 n, 整数型, , , 
.局部变量 特征字, 整数型, , , 
.局部变量 命令行, 文本型, , "0", 
.局部变量 txt, 文本型, , , 

赋值 (可否退出, 假)
赋值 (., #软件名称与版本)

取命令行 (命令行)






.如果 (大于 (取数组成员数 (命令行), 0))
    .如果 (或者 (等于 (命令行 [1], “/h”), 等于 (命令行 [1], “/H”)))
        返回 ()
    .否则
        
    .如果结束
    
.否则
    
.如果结束
赋值 (win默认窗口., 真)
win默认窗口.置托盘图标 (#图标1, win默认窗口.)
赋值 (.时钟周期, 3000)




.子程序 _win默认窗口_托盘事件, 空白型, , 
.参数 操作类型, 整数型, , 

.如果真 (等于 (操作类型, 1))
    .如果 (win默认窗口.)
        赋值 (win默认窗口., 假)
    .否则
        赋值 (win默认窗口., 真)
    .如果结束
    返回 ()
    
.如果真结束
.如果真 (等于 (操作类型, 3))
    win默认窗口.弹出托盘菜单 ()
    
.如果真结束


.子程序 _win默认窗口_位置被改变, 空白型, , 
.如果 (等于 (win默认窗口., 2))
    赋值 (win默认窗口., 假)
.否则
    
.如果结束


.子程序 _win默认窗口_可否被关闭, 逻辑型, , 
.如果 (win默认窗口.)
    赋值 (win默认窗口., 假)
.否则
    赋值 (可否退出, 真)
.如果结束
返回 (可否退出)





.子程序 _win默认窗口_被激活, 空白型, , 
赋值 (win默认窗口., 1)

.子程序 _如何获取按钮_被单击, 空白型, , 
信息框 (“相关信息请到世宝官方网站www.shibao.net查看 ^_^”, 0, )


.子程序 _设置_被选择, 空白型, , 
.局部变量 passtxt, 文本型, , , 
.局部变量 设置Esql器1, Esql器, , , 

.如果 (输入框 (“请输入服务器口令：”, , passtxt, #输入密码))
    .如果真 (不等于 (passtxt, 设置Esql器1.取口令 ()))
        信息框 (“口令不正确！”, 0, )
        返回 ()
    .如果真结束
    载入 (win配置窗口, , 真)
    
.否则
    
.如果结束


.子程序 _退出_被选择, 空白型, , 
赋值 (可否退出, 真)
win默认窗口.销毁 ()


.子程序 _时钟1_周期事件, 空白型, , 
赋值 (.时钟周期, 0)
赋值 (win默认窗口., 假)


.窗口程序集 win配置窗口程序集, , , 

.程序集变量 程序集Esql器1, Esql器, , , 
.子程序 _win配置窗口_创建完毕, 空白型, , 
赋值 (.内容, 到文本 (程序集Esql器1.取端口 ()))
赋值 (.内容, 程序集Esql器1.取口令 ())
赋值 (.内容, 到文本 (程序集Esql器1.取最小线程 ()))
赋值 (.内容, 到文本 (程序集Esql器1.取最大线程 ()))

.子程序 _取消按钮_被单击, 空白型, , 
win配置窗口.销毁 ()


.子程序 _保存按钮_被单击, 空白型, , 
.如果真 (小于或等于 (到整数 (.内容), 0))
    赋值 (.内容, “20202”)
.如果真结束
程序集Esql器1.写端口 (.内容)

程序集Esql器1.写口令 (.内容)

.如果真 (小于或等于 (到整数 (.内容), 5))
    赋值 (.内容, “5”)
.如果真结束
程序集Esql器1.写最小线程 (.内容)

.如果真 (小于或等于 (到整数 (.内容), 20))
    赋值 (.内容, “20”)
.如果真结束
程序集Esql器1.写最大线程 (.内容)

win配置窗口.销毁 ()


 ' 不属于任何一个程序集、类模块的函数：
