 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 648
    高度 = 521
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “Server”
    帮助文件名 = “”

窗口 用户编辑窗口
    左边 = 50
    顶边 = 50
    宽度 = 182
    高度 = 176
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “用户编辑”
    帮助文件名 = “”

窗口 充值卡窗口
    左边 = 50
    顶边 = 50
    宽度 = 435
    高度 = 531
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “充值卡管理窗口”
    帮助文件名 = “”

窗口 新用户添加窗口
    左边 = 50
    顶边 = 50
    宽度 = 183
    高度 = 160
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “新用户注册”
    帮助文件名 = “”



.常量 LB_FINDSTRING, "399", , 
.常量 服务器地址, "“221.136.64.244”", , 
.常量 数据库名, "“question”", , 
.常量 数据库用户, "“sa”", , 
.常量 数据库密码, "“wywrmfw”", , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 4 系统核心支持库
 ' iext 27bb20fdd3e145e4bee3db39ddd6e64c 1 2 扩展界面支持库一
 ' Exmlrpc A36CFD538657479eBD7C0D287BBB3D95 1 2 远程服务支持库
 ' ADODB {EF0A0A93-05AC-4aec-884A-B65FB0FA135D} 2 0 ADODB数据驱动操作支持库
 ' dp1 4BB4003860154917BC7D8230BF4FA58A 1 0 数据操作支持库一




数据类型 封包数据, , 
    .成员 Message, 文本型, , "1", 
    .成员 context, 字节集, , "1", 

数据类型 MSSQL类, , 
    .成员 ip, 文本型, , , 
    .成员 base, 文本型, , , 
    .成员 user, 文本型, , , 
    .成员 passwd, 文本型, , , 
    .成员 bool, 逻辑型, , , 

数据类型 ACCESS类, , 
    .成员 path, 文本型, , , 
    .成员 passwd, 文本型, , , 

数据类型 Server类, , 
    .成员 Port, 整数型, , , 端口
    .成员 Action, 逻辑型, , , 服务器启动状态
    .成员 Mas, 文本型, , , 加密文本
    .成员 Login, 文本型, , , 登陆前缀
    .成员 LoginLen, 整数型, , , 登录前缀长度
    .成员 Punish, 文本型, , , 禁止前缀
    .成员 PunishLen, 整数型, , , 禁止前缀长度
    .成员 Passwd, 文本型, , , 密码前缀
    .成员 PasswdLen, 整数型, , , 密码前缀长度
    .成员 Renewal, 文本型, , , 充值前缀
    .成员 RenewalLen, 整数型, , , 充值前缀长度
    .成员 String, 文本型, , , 信息前缀
    .成员 StringLen, 整数型, , , 信息前缀长度
    .成员 Answer, 文本型, , , 答题前缀
    .成员 AnswerLen, 整数型, , , 答题前缀长度
    .成员 ChatPri, 文本型, , , 私聊前缀
    .成员 ChatPriLen, 整数型, , , 私聊前缀长度
    .成员 ChatPub, 文本型, , , 公聊前缀
    .成员 ChatPubLen, 整数型, , , 公聊前缀长度
    .成员 TestUser, 文本型, , , 测试用户
    .成员 TestPasswd, 文本型, , , 测试密码

数据类型 服务器配置项, , 
    .成员 DBType, 文本型, , , 
    .成员 SQLIP, 文本型, , , 
    .成员 SQLUSER, 文本型, , , 
    .成员 SQLDATA, 文本型, , , 
    .成员 SQLPASSWD, 文本型, , , 
    .成员 ACCESSPATH, 文本型, , , 
    .成员 ACCESSMM, 文本型, , , 
    .成员 BlockIP, 逻辑型, , , 
    .成员 BlockUser, 逻辑型, , , 
    .成员 BlockMac, 逻辑型, , , 
    .成员 ServerType, 文本型, , , 
    .成员 RemindDay, 整数型, , , 
    .成员 BlockTimes, 整数型, , , 
    .成员 TimeType, 整数型, , , 
    .成员 RecType, 整数型, , , 1'按时间保存 2'按大小保存 3'关闭服务器保存
    .成员 RecTime, 整数型, , , 
    .成员 RecLen, 整数型, , , 

数据类型 程序组件类, , 
    .成员 选择框组, 选择框, , "13", 
    .成员 菜单组, 菜单, , "13", 显示\禁止\允许\编辑\删除\查找\刷新

数据类型 用户编辑传参类, , 
    .成员 Username, 文本型, , , 
    .成员 Passwd, 文本型, , , 
    .成员 Bond, 文本型, , , 
    .成员 Kind, 文本型, , , 
    .成员 Record, 文本型, , , 

.全局变量 MainServer, 未知类型0x30001, , , 
.全局变量 Main, Server类, , , 
.全局变量 Settings, 服务器配置项, , , 
.全局变量 组件, 程序组件类, , , 
.全局变量 UserSet, 用户编辑传参类, , , 
.全局变量 匿名全局变量_6747, 空白型, , , 
.全局变量 匿名全局变量_6748, 空白型, , , 
.全局变量 匿名全局变量_6749, 空白型, , , 
.全局变量 服务已开启, 逻辑型, , , 
.全局变量 连接状态, 逻辑型, , , 
.全局变量 TimeNow, 文本型, , , 
.全局变量 匿名全局变量_4651, 空白型, , , 
.全局变量 MainConnect, 未知类型0x40001, , , 
.全局变量 MainRecord, 未知类型0x40002, , , 
.全局变量 数据库类型, 文本型, , , 
.全局变量 MSSQL, MSSQL类, , , 
.全局变量 ACCESS, ACCESS类, , , 
.全局变量 数据库配置正确性, 逻辑型, , , 
.全局变量 匿名全局变量_6746, 空白型, , , 
.全局变量 现行加密选中项, 整数型, , , 加密参数赋值框选中项索引
.全局变量 用户列表现行项, 整数型, , , 

.窗口程序集 窗口程序集, , , 

.程序集变量 已连接数, 整数型, , , 
.程序集变量 字节集总, 字节集, , , 
.程序集变量 还有数据, 逻辑型, , , 
.程序集变量 选中项, 整数型, , , 
.子程序 _服务启动按钮_被单击, 空白型, , 
.如果真 (并且 (MainServer.未知支持库函数_1 (到数值 (.内容), &新数据处理函数, ), 等于 (服务已开启, 假)))
    赋值 (.标题, “停止”)
    赋值 (服务已开启, 真)
    赋值 (Main.Action, 真)
    返回 ()
.如果真结束

.如果真 (等于 (服务已开启, 假))
    信息框 (“服务无法启动!请检查端口是否被占用!”, 16, “启动错误”)
    返回 ()
.如果真结束

.如果真 (并且 (等于 (信息框 (“你确认要关闭服务吗?”, 33, “友情提示”), 0), 等于 (服务已开启, 真)))
    MainServer.未知支持库函数_2 ()
    赋值 (服务已开启, 假)
    赋值 (Main.Action, 假)
    赋值 (.标题, “启动”)
.如果真结束



.子程序 __启动窗口_创建完毕, 空白型, , 
赋值 (., 462)
配置项启动读取赋值 ()
赋值 (Settings.BlockIP, 真)
赋值 (Settings.BlockMac, 真)
赋值 (Settings.BlockUser, 真)
.如果真 (等于 (文件是否存在 (相加 (取运行目录 (), “\Tmp”)), 假))
    创建目录 (相加 (取运行目录 (), “\Tmp”))
.如果真结束
数据库连接配置读取及赋值 ()

.子程序 __启动窗口_将被销毁, 空白型, , 
MainServer.未知支持库函数_2 ()
MainConnect.未知支持库函数_10 ()

.子程序 _用户列表框_右键单击表项, 空白型, , 用户列表右键菜单项目
.局部变量 index, 整数型, , , 
.局部变量 i, 整数型, , , 

赋值 (index, .)
赋值 (用户列表现行项, index)
.如果真 (不等于 (index, -1))
    .计次循环首 (7, i)
        赋值 (组件.菜单组 [i], 禁止, 假)
    .计次循环尾 ()
    .判断开始 (等于 (index.取标题 (9), “0”))
        赋值 (组件.菜单组 [2].禁止, 假)
        赋值 (组件.菜单组 [3].禁止, 真)
    .默认
        赋值 (组件.菜单组 [2].禁止, 真)
        赋值 (组件.菜单组 [3].禁止, 假)
    .判断结束
    弹出菜单 ()
    返回 ()
.如果真结束

连续赋值 (真, 组件.菜单组 [2].禁止, 组件.菜单组 [3].禁止, 组件.菜单组 [4].禁止, 组件.菜单组 [5].禁止)
弹出菜单 ()


.子程序 _MSSQL连接测试按钮_被单击, 空白型, , MSSQL配置项连接测试按钮
.如果真 (OpenSQL (MainConnect, .内容, .内容, .内容, .内容))
    信息框 (“连接测试成功”, #信息图标, )
    MainConnect.未知支持库函数_10 ()
    返回 ()
.如果真结束


.子程序 _MDBPATH框_被双击, 逻辑型, , MDB数据库目录指定操作项
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (并且 (打开 (), 不等于 (.文件名, “”)))
    赋值 (.内容, .文件名)
    获取焦点 ()
    返回 ()
.如果真结束
获取焦点 ()

.子程序 _ACCESS连接测试按钮_被单击, 空白型, , MDB数据库配置项连接测试按钮
.如果真 (OpenACCESS (MainConnect, , , .内容, , .内容, ))
    信息框 (“连接测试成功”, #信息图标, )
    MainConnect.未知支持库函数_10 ()
    返回 ()
.如果真结束


.子程序 数据库连接配置读取及赋值, 空白型, , 
.如果真 (并且 (不等于 (Settings.DBType, “”), 文件是否存在 (相加 (取运行目录 (), “\Server.ini”))))
    .如果真 (等于 (Settings.DBType, “MSSQL”))
        .如果 (OpenSQL (MainConnect, Settings.SQLIP, Settings.SQLDATA, Settings.SQLUSER, Settings.SQLPASSWD))
            赋值 (数据库配置正确性, 真)
        .否则
            赋值 (数据库配置正确性, 假)
        .如果结束
        返回 ()
    .如果真结束
    
    .如果真 (等于 (Settings.DBType, “ACCESS”))
        .如果 (OpenACCESS (MainConnect, , , Settings.ACCESSPATH, , Settings.ACCESSMM))
            赋值 (数据库配置正确性, 真)
        .否则
            赋值 (数据库配置正确性, 假)
        .如果结束
        返回 ()
    .如果真结束
    赋值 (数据库配置正确性, 假)
.如果真结束


.子程序 新数据处理函数, 空白型, , 
.参数 消息地址, 整数型, , 

.局部变量 客户IP, 文本型, , , 
.局部变量 句柄, 整数型, , , 
.局部变量 i, 整数型, , , 
.局部变量 数据包, 字节集, , , 
.局部变量 数据不存在, 逻辑型, , , 
.局部变量 请求代码, 文本型, , , 
.局部变量 IP, 文本型, , , 
.局部变量 Hwnd, 整数型, , , 
.局部变量 TmpNo, 整数型, , , 
.局部变量 索引, 整数型, , , 
.局部变量 结果, 逻辑型, , , 
.局部变量 Title, 文本型, , , 
.局部变量 PicString, 字节集, , , 
.局部变量 文本信息, 文本型, , , 
.局部变量 tmp, 整数型, , , 
.局部变量 自定义头标示, 字节集, , , 
.局部变量 自定义请求, 字节集, , , 
.局部变量 自定义图像包, 字节集, , , 
.局部变量 自定义题目, 字节集, , , 
.局部变量 AllPack, 字节集, , , 
.局部变量 PackLen, 整数型, , , 
.局部变量 Answer, 字节集, , , 
.局部变量 AskCode, 文本型, , , 
.局部变量 匿名局部变量_4832, 空白型, , , 
.局部变量 匿名局部变量_4833, 空白型, , , 
.局部变量 UnPack, 字节集, , , 
.局部变量 LogPak, 字节集, , "0", 
.局部变量 LogLen, 整数型, , , 
.局部变量 UserName, 文本型, , , 
.局部变量 UserPasswd, 文本型, , , 
.局部变量 UserMac, 文本型, , , 
.局部变量 UserCpu, 文本型, , , 
.局部变量 UserHdd, 文本型, , , 
.局部变量 TmpString, 字节集, , , 
.局部变量 PunishString, 字节集, , , 
.局部变量 StringTMP, 字节集, , , 
.局部变量 CardPak, 字节集, , "0", 
.局部变量 CardLen, 整数型, , , 
.局部变量 CardNO, 文本型, , , 
.局部变量 CardPW, 文本型, , , 
.局部变量 PasswdLen, 整数型, , , 
.局部变量 PasswdPak, 字节集, , "0", 
.局部变量 Passwd_UserName, 文本型, , , 
.局部变量 Passwd_Passwd, 文本型, , , 
.局部变量 Passwd_New, 文本型, , , 

.判断开始 (等于 (MainServer.未知支持库函数_27 (消息地址), 0)) ' 客户端建立连接
    .如果真 (并且 (MainServer.未知支持库函数_8 (消息地址, 句柄), MainServer.未知支持库函数_9 (句柄, 客户IP)))
        FormatDate ()
         ' ************** 开始针对MAC地址过滤 ******************
        .如果真 (并且 (Settings.BlockIP, 拒绝黑名单IP (客户IP)))
            .如果真 (_启动窗口..选中)
                ReC (相加 (“用户IP:”, 客户IP), “被阻止登陆的IP地址”, “断开连接!”)
            .如果真结束
            MainServer.未知支持库函数_12 (句柄)
            返回 ()
        .如果真结束
        .如果真 (大于或等于 (取表项数 (), 20))
            MainServer.未知支持库函数_12 (句柄)
            ReC (“请确认注册人数”, “服务器授权人数已到”, “断开连接!”)
            返回 ()
        .如果真结束
        
        0.置标题 (1, 到文本 (相加 (到数值 (0.取标题 (1)), 1)))
        1.置标题 (1, 到文本 (相加 (到数值 (1.取标题 (1)), 1)))
        .如果真 (.选中)
            ReC (相加 (客户IP, “:”, 到文本 (句柄)), “与服务器建立连接”, “客户进入!”)
        .如果真结束
        
        赋值 (i, .插入表项 ())
        i.置标题 (0, 客户IP)
        i.置标题 (1, 到文本 (句柄))
        i.置标题 (2, “建立连接”)
    .如果真结束
    
    
    
    
.判断 (等于 (MainServer.未知支持库函数_27 (消息地址), 1)) ' 连接断开
    FormatDate ()
    MainServer.未知支持库函数_8 (消息地址, 句柄)
    MainServer.未知支持库函数_9 (句柄, 客户IP)
    .如果真 (.选中)
        ReC (相加 (“用户句柄:”, 到文本 (句柄)), “与服务器断开连接”, “客户离开!”)
    .如果真结束
    删除文件 (相加 (取运行目录 (), “\tmp\”, 到文本 (句柄), “.jpg”))
    1.置标题 (1, 到文本 (相减 (到数值 (1.取标题 (1)), 1)))
    删除断开用户列表 (句柄, )
    用户退出更新 (句柄)
    
.判断 (等于 (MainServer.未知支持库函数_27 (消息地址), 2)) ' 消息进入
    FormatDate ()
    MainServer.未知支持库函数_8 (消息地址, 句柄)
    MainServer.未知支持库函数_9 (句柄, 客户IP)
    .如果真 (MainServer.未知支持库函数_5 (消息地址, 请求代码, 数据包))
        赋值 (UnPack, 未知支持库函数_4 (数据包, “Honuo为群打造”, #))
        .如果真 (等于 (取字节集左边 (UnPack, 3), 到字节集 (“GET”)))
            赋值 (TmpString, 相加 (到字节集 (Main.Mas), 到字节集 (“<~@~>”)))
            赋值 (TmpString, 相加 (TmpString, 到字节集 (Main.Login), 到字节集 (“<~@~>”)))
            赋值 (TmpString, 相加 (TmpString, 到字节集 (Main.Punish), 到字节集 (“<~@~>”)))
            赋值 (TmpString, 相加 (TmpString, 到字节集 (Main.String), 到字节集 (“<~@~>”)))
            赋值 (TmpString, 相加 (TmpString, 到字节集 (Main.Renewal), 到字节集 (“<~@~>”)))
            赋值 (TmpString, 相加 (TmpString, 到字节集 (Main.ChatPri), 到字节集 (“<~@~>”)))
            赋值 (TmpString, 相加 (TmpString, 到字节集 (Main.ChatPub), 到字节集 (“<~@~>”)))
            赋值 (TmpString, 相加 (TmpString, 到字节集 (Main.TestUser), 到字节集 (“<~@~>”)))
            赋值 (TmpString, 相加 (TmpString, 到字节集 (Main.TestPasswd), 到字节集 (“<~@~>”)))
            赋值 (TmpString, 相加 (TmpString, 到字节集 (Main.Answer)))
            MainServer.未知支持库函数_7 (请求代码, 未知支持库函数_3 (相加 (到字节集 (“Give”), TmpString), “Honuo为群打造”, #))
            返回 ()
        .如果真结束
        
        赋值 (UnPack, 未知支持库函数_4 (数据包, Main.Mas, #))
        .如果真 (等于 (取字节集左边 (UnPack, Main.LoginLen), 到字节集 (Main.Login)))
            赋值 (LogLen, 取字节集长度 (UnPack))
            赋值 (LogPak, 分割字节集 (取字节集右边 (UnPack, 相减 (LogLen, Main.LoginLen)), 到字节集 (“@”), ))
            .如果真 (大于或等于 (取数组成员数 (LogPak), 3))
                赋值 (UserName, 取字节集数据 (LogPak [1], #文本型, ))
                赋值 (UserPasswd, 取字节集数据 (LogPak [2], #文本型, ))
                赋值 (UserMac, 取字节集数据 (LogPak [3], #文本型, ))
                 ' UserHdd ＝ 取字节集数据 (LogPak [4], #文本型, )
                 ' UserCpu ＝ 取字节集数据 (LogPak [5], #文本型, )
                
                 ' ************** 开始针对MAC地址过滤 ******************
                .如果真 (并且 (Settings.BlockMac, 拒绝黑名单Mac (UserMac)))
                    赋值 (PunishString, 未知支持库函数_3 (到字节集 (相加 (Main.Punish, “该电脑已被限制登陆本程序”)), Main.Mas, #))
                    MainServer.未知支持库函数_7 (请求代码, PunishString)
                    赋值 (PunishString, {  })
                    .如果真 (_启动窗口..选中)
                        ReC (UserMac, “被阻止登陆的Mac地址”, “断开连接!”)
                    .如果真结束
                    返回 ()
                .如果真结束
                
                 ' ************** 用户登陆验证 ******************
                .如果真 (等于 (Settings.ServerType, “Fee”))
                    .如果真 (用户核对 (请求代码, 句柄, UserName, UserPasswd, UserMac, UserHdd, UserCpu))
                        赋值 (StringTMP, 未知支持库函数_3 (到字节集 (相加 (Main.Login, UserMac)), Main.Mas, #))
                        MainServer.未知支持库函数_7 (请求代码, StringTMP)
                        ReC (相加 (“用户名:”, UserName), 相加 (客户IP, “:”, 到文本 (句柄)), “收费登陆!”)
                        赋值 (StringTMP, {  })
                    .如果真结束
                    返回 ()
                .如果真结束
                
                .如果真 (等于 (Settings.ServerType, “Free”))
                    .如果真 (用户核对 (请求代码, 句柄, UserName, UserPasswd, UserMac, UserHdd, UserCpu))
                        赋值 (StringTMP, 未知支持库函数_3 (到字节集 (相加 (Main.Login, UserMac)), Main.Mas, #))
                        MainServer.未知支持库函数_7 (请求代码, StringTMP)
                        赋值 (StringTMP, 未知支持库函数_3 (到字节集 (相加 (Main.Login, “服务器处于免费服务,感谢您的支持!”)), Main.Mas, #))
                        MainServer.未知支持库函数_7 (请求代码, StringTMP)
                        ReC (相加 (“用户名:”, UserName), 相加 (客户IP, “:”, 到文本 (句柄)), “免费登陆!”)
                        赋值 (StringTMP, {  })
                    .如果真结束
                    返回 ()
                .如果真结束
                
                .如果真 (等于 (Settings.ServerType, “Test”))
                    赋值 (StringTMP, 未知支持库函数_3 (到字节集 (相加 (Main.Login, UserMac)), Main.Mas, #))
                    MainServer.未知支持库函数_7 (请求代码, StringTMP)
                    赋值 (StringTMP, 未知支持库函数_3 (到字节集 (相加 (Main.Login, “服务器处于测试服务,欢迎您的测试!”)), Main.Mas, #))
                    MainServer.未知支持库函数_7 (请求代码, StringTMP)
                    ReC (相加 (“用户名:”, UserName), 相加 (客户IP, “:”, 到文本 (句柄)), “测试登陆!”)
                    赋值 (StringTMP, {  })
                    返回 ()
                .如果真结束
                
                
            .如果真结束
            
        .如果真结束
        
         ' 充值信息
        .如果真 (并且 (等于 (取字节集左边 (UnPack, Main.RenewalLen), 到字节集 (Main.Renewal)), 等于 (Settings.ServerType, “Fee”)))
            赋值 (CardLen, 取字节集长度 (UnPack))
            赋值 (CardPak, 分割字节集 (取字节集右边 (UnPack, 相减 (CardLen, Main.RenewalLen)), 到字节集 (“~<@>~”), ))
            .如果真 (大于或等于 (取数组成员数 (CardPak), 3))
                赋值 (UserName, 取字节集数据 (CardPak [1], #文本型, ))
                赋值 (CardNO, 取字节集数据 (CardPak [2], #文本型, ))
                赋值 (CardPW, 取字节集数据 (CardPak [3], #文本型, ))
                点卡充值校验 (CardNO, CardPW, UserName, 请求代码)
            .如果真结束
            返回 ()
        .如果真结束
        
         ' 密码修改信息
        .如果真 (等于 (取字节集左边 (UnPack, Main.PasswdLen), 到字节集 (Main.Passwd)))
            赋值 (PasswdLen, 取字节集长度 (UnPack))
            赋值 (PasswdPak, 分割字节集 (取字节集右边 (UnPack, 相减 (PasswdLen, Main.PasswdLen)), 到字节集 (“~<P>~”), ))
            .如果真 (大于或等于 (取数组成员数 (PasswdPak), 3))
                赋值 (Passwd_UserName, 取字节集数据 (PasswdPak [1], #文本型, ))
                赋值 (Passwd_Passwd, 取字节集数据 (PasswdPak [2], #文本型, ))
                赋值 (Passwd_New, 取字节集数据 (PasswdPak [3], #文本型, ))
                密码修改校验 (Passwd_UserName, Passwd_Passwd, Passwd_New, 请求代码)
                
            .如果真结束
            返回 ()
        .如果真结束
        
        
        
         ' ************** 开始针对MAC地址过滤 ******************
        
        .如果真 (不等于 (1, 0))
            返回 ()
        .如果真结束
        
        .判断开始 (等于 (取字节集左边 (数据包, 3), 到字节集 (“Get”)))
            输出调试文本 (“Get”)
            赋值 (TmpNo, 取表项数 ())
            .如果真 (不等于 (TmpNo, 0))
                .计次循环首 (TmpNo, i)
                    .如果真 (并且 (不等于 (相减 (i, 1).取标题 (4), “已分配”), 不等于 (相减 (i, 1).取标题 (3), “”), 不等于 (相减 (i, 1).取标题 (2), “建立连接”)))
                        赋值 (自定义头标示, 到字节集 (“Code”))
                        赋值 (自定义请求, 到字节集 (相减 (i, 1).取标题 (3)))
                        赋值 (自定义题目, 到字节集 (相减 (i, 1).取标题 (2)))
                        赋值 (自定义图像包, 读入文件 (相加 (取运行目录 (), “\Tmp\”, 相减 (i, 1).取标题 (1), “.jpg”)))
                        赋值 (AllPack, P_压缩数据 (相加 (自定义头标示, 到字节集 (“#”), 自定义请求, 到字节集 (“#”), 自定义题目, 到字节集 (“#”), 自定义图像包)))
                        .如果真 (MainServer.未知支持库函数_7 (请求代码, AllPack))
                            赋值 (tmp, 相加 (tmp, 1))
                            相减 (i, 1).置标题 (4, “已分配”)
                        .如果真结束
                        
                        .如果真 (大于或等于 (tmp, 20))
                            跳出循环 ()
                        .如果真结束
                        
                    .如果真结束
                    
                .计次循环尾 ()
            .如果真结束
            
            返回 ()
        .判断 (等于 (取字节集左边 (数据包, 5), 到字节集 (“Agent”)))
            输出调试文本 (“Agent”)
            赋值 (TmpNo, 取表项数 ())
            .如果真 (不等于 (TmpNo, 0))
                .计次循环首 (TmpNo, i)
                    .如果真 (等于 (相减 (i, 1).取标题 (1), 到文本 (句柄)))
                        相减 (i, 1).删除表项 ()
                        跳出循环 ()
                    .如果真结束
                    
                .计次循环尾 ()
            .如果真结束
            返回 ()
        .判断 (等于 (取字节集左边 (数据包, 6), 到字节集 (“Answer”)))
            赋值 (PackLen, 取字节集长度 (数据包))
            赋值 (Answer, 取字节集中间 (数据包, 7, 2))
            赋值 (AskCode, 到文本 (取字节集右边 (数据包, 相减 (PackLen, 6, 2))))
            输出调试文本 (AskCode, 到文本 (Answer))
            赋值 (TmpNo, 取表项数 ())
            .计次循环首 (TmpNo, i)
                .如果真 (等于 (相减 (i, 1).取标题 (3), AskCode))
                    .如果真 (MainServer.未知支持库函数_7 (AskCode, Answer))
                        相减 (i, 1).置标题 (2, “建立连接”)
                        相减 (i, 1).置标题 (4, “”)
                        删除文件 (相加 (取运行目录 (), “\tmp\”, 相减 (i, 1).取标题 (1), “.jpg”))
                    .如果真结束
                    跳出循环 ()
                .如果真结束
                
            .计次循环尾 ()
        .默认
            相加 (TimeNow, “ | ”, 客户IP, “:”, 到文本 (句柄), “ 答题进入”, #换行符).加入文本 ()
            赋值 (数据包, P_解压数据 (数据包))
            赋值 (Title, 取文本左边 (到文本 (数据包), 30))
            赋值 (PicString, 取字节集中间 (数据包, 31, 相减 (取字节集长度 (数据包), 30)))
            赋值 (TmpNo, 取表项数 ())
            .如果真 (不等于 (TmpNo, 0))
                .计次循环首 (TmpNo, i)
                    .如果真 (等于 (相减 (i, 1).取标题 (1), 到文本 (句柄)))
                        相减 (i, 1).置标题 (2, Title)
                        相减 (i, 1).置标题 (3, 请求代码)
                        跳出循环 ()
                    .如果真结束
                    
                .计次循环尾 ()
            .如果真结束
            赋值 (结果, 写到文件 (相加 (取运行目录 (), “\tmp\”, 到文本 (句柄), “.jpg”), PicString))
        .判断结束
        
    .如果真结束
    
.判断 (等于 (MainServer.未知支持库函数_27 (消息地址), -1))
    
.默认
    
.判断结束


.子程序 _保存配置项按钮_被单击, 空白型, , 服务器配置保存操作
.局部变量 SQL, 文本型, , , 
.局部变量 ServerType, 文本型, , , 
.局部变量 TypeNo, 整数型, , , 
.局部变量 i, 整数型, , , 

 ' 数据库类型
.如果真 (.选中)
    赋值 (SQL, “MYSQL”)
.如果真结束
.如果真 (.选中)
    赋值 (SQL, “MSSQL”)
.如果真结束
.如果真 (.选中)
    赋值 (SQL, “ACCESS”)
.如果真结束
写配置项 (相加 (取运行目录 (), “\Server.ini”), “setup”, “SQL”, SQL)
 ' 服务性质
.如果真 (.选中)
    赋值 (ServerType, “Fee”)
.如果真结束
.如果真 (.选中)
    赋值 (ServerType, “Test”)
.如果真结束
.如果真 (.选中)
    赋值 (ServerType, “Free”)
.如果真结束
写配置项 (相加 (取运行目录 (), “\Server.ini”), “setup”, “ServerType”, ServerType)
 ' 前缀块
写配置项 (相加 (取运行目录 (), “\Server.ini”), “PIX”, “Mas”, .内容)
写配置项 (相加 (取运行目录 (), “\Server.ini”), “PIX”, “Login”, .内容)
写配置项 (相加 (取运行目录 (), “\Server.ini”), “PIX”, “Renewal”, .内容)
写配置项 (相加 (取运行目录 (), “\Server.ini”), “PIX”, “Punish”, .内容)
写配置项 (相加 (取运行目录 (), “\Server.ini”), “PIX”, “String”, .内容)
写配置项 (相加 (取运行目录 (), “\Server.ini”), “PIX”, “ChatPub”, .内容)
写配置项 (相加 (取运行目录 (), “\Server.ini”), “PIX”, “ChatPri”, .内容)
写配置项 (相加 (取运行目录 (), “\Server.ini”), “PIX”, “TestUser”, .内容)
写配置项 (相加 (取运行目录 (), “\Server.ini”), “PIX”, “TestPasswd”, .内容)
写配置项 (相加 (取运行目录 (), “\Server.ini”), “PIX”, “Answer”, .内容)
 ' MSSQL
写配置项 (相加 (取运行目录 (), “\Server.ini”), “MSSQL”, “IP”, .内容)
写配置项 (相加 (取运行目录 (), “\Server.ini”), “MSSQL”, “Base”, .内容)
写配置项 (相加 (取运行目录 (), “\Server.ini”), “MSSQL”, “User”, .内容)
写配置项 (相加 (取运行目录 (), “\Server.ini”), “MSSQL”, “Passwd”, .内容)
 ' MYSQL
写配置项 (相加 (取运行目录 (), “\Server.ini”), “MYSQL”, “IP”, .内容)
写配置项 (相加 (取运行目录 (), “\Server.ini”), “MYSQL”, “Base”, .内容)
写配置项 (相加 (取运行目录 (), “\Server.ini”), “MYSQL”, “User”, .内容)
写配置项 (相加 (取运行目录 (), “\Server.ini”), “MYSQL”, “Passwd”, .内容)
 ' ACCESS
写配置项 (相加 (取运行目录 (), “\Server.ini”), “ACCESS”, “Path”, .内容)
写配置项 (相加 (取运行目录 (), “\Server.ini”), “ACCESS”, “Passwd”, .内容)
 ' 提醒块
写配置项 (相加 (取运行目录 (), “\Server.ini”), “REMIND”, “LeftTime”, .内容)
写配置项 (相加 (取运行目录 (), “\Server.ini”), “REMIND”, “Block”, .内容)
 ' 日志块
.计次循环首 (12, i)
    .判断开始 (等于 (组件.选择框组 [i], 选中, 真))
        写配置项 (相加 (取运行目录 (), “\Server.ini”), “RECORD”, 相加 (“Type”, 到文本 (i)), “1”)
    .默认
        写配置项 (相加 (取运行目录 (), “\Server.ini”), “RECORD”, 相加 (“Type”, 到文本 (i)), “0”)
    .判断结束
    
.计次循环尾 ()
写配置项 (相加 (取运行目录 (), “\Server.ini”), “RECORD”, 相加 (“Type”, 到文本 (13)), 到文本 (.现行选中项))

.判断开始 (等于 (.选中, 真))
    写配置项 (相加 (取运行目录 (), “\Server.ini”), “RECORD”, “RecordType”, “3”)
.默认
    
    .判断开始 (等于 (.选中, 真))
        写配置项 (相加 (取运行目录 (), “\Server.ini”), “RECORD”, “RecordType”, “0”)
        写配置项 (相加 (取运行目录 (), “\Server.ini”), “RECORD”, “RecordTime”, .内容)
    .判断 (等于 (.选中, 真))
        写配置项 (相加 (取运行目录 (), “\Server.ini”), “RECORD”, “RecordType”, “1”)
        写配置项 (相加 (取运行目录 (), “\Server.ini”), “RECORD”, “RecordLen”, .内容)
    .默认
        
    .判断结束
    
.判断结束


 ' 动态加密块
写配置项 (相加 (取运行目录 (), “\Server.ini”), “MasSetting”, “Time”, .内容)
赋值 (TypeNo, 取项目数 ())
写配置项 (相加 (取运行目录 (), “\Server.ini”), “MasSetting”, “TypeNo”, 到文本 (TypeNo))
.计次循环首 (TypeNo, i)
    写配置项 (相加 (取运行目录 (), “\Server.ini”), “MasSetting”, 相加 (“Type”, 到文本 (i)), 相减 (i, 1).取项目文本 ())
.计次循环尾 ()

.子程序 配置项启动读取赋值, 空白型, , 服务器配置读取操作
.局部变量 TypeNo, 整数型, , , 
.局部变量 i, 整数型, , , 

赋值 (组件.选择框组 [1], )
赋值 (组件.选择框组 [2], )
赋值 (组件.选择框组 [3], )
赋值 (组件.选择框组 [4], )
赋值 (组件.选择框组 [5], )
赋值 (组件.选择框组 [6], )
赋值 (组件.选择框组 [7], )
赋值 (组件.选择框组 [8], )
赋值 (组件.选择框组 [9], )
赋值 (组件.选择框组 [10], )
赋值 (组件.选择框组 [11], )
赋值 (组件.选择框组 [12], )
赋值 (组件.菜单组 [1], )
赋值 (组件.菜单组 [2], )
赋值 (组件.菜单组 [3], )
赋值 (组件.菜单组 [4], )
赋值 (组件.菜单组 [5], )
赋值 (组件.菜单组 [6], )
赋值 (组件.菜单组 [7], )
赋值 (Settings.DBType, 读配置项 (相加 (取运行目录 (), “\Server.ini”), “setup”, “SQL”, “MSSQL”))
赋值 (Settings.ServerType, 读配置项 (相加 (取运行目录 (), “\Server.ini”), “setup”, “ServerType”, “Fee”))
赋值 (Main.Mas, 读配置项 (相加 (取运行目录 (), “\Server.ini”), “PIX”, “Mas”, “Honuo为群打造”))
赋值 (Main.Login, 读配置项 (相加 (取运行目录 (), “\Server.ini”), “PIX”, “Login”, “<登录@”))
赋值 (Main.LoginLen, 取字节集长度 (到字节集 (Main.Login)))
赋值 (Main.Renewal, 读配置项 (相加 (取运行目录 (), “\Server.ini”), “PIX”, “Renewal”, “<充值@”))
赋值 (Main.RenewalLen, 取字节集长度 (到字节集 (Main.Renewal)))
赋值 (Main.Punish, 读配置项 (相加 (取运行目录 (), “\Server.ini”), “PIX”, “Punish”, “<禁止@”))
赋值 (Main.PunishLen, 取字节集长度 (到字节集 (Main.Punish)))
赋值 (Main.String, 读配置项 (相加 (取运行目录 (), “\Server.ini”), “PIX”, “String”, “<信息@”))
赋值 (Main.StringLen, 取字节集长度 (到字节集 (Main.String)))
赋值 (Main.ChatPub, 读配置项 (相加 (取运行目录 (), “\Server.ini”), “PIX”, “ChatPub”, “~公聊@”))
赋值 (Main.ChatPri, 读配置项 (相加 (取运行目录 (), “\Server.ini”), “PIX”, “ChatPri”, “~私聊@”))
赋值 (Main.Answer, 读配置项 (相加 (取运行目录 (), “\Server.ini”), “PIX”, “Answer”, “~答题@”))

赋值 (Main.TestUser, 读配置项 (相加 (取运行目录 (), “\Server.ini”), “PIX”, “TestUser”, “Test”))
赋值 (Main.TestPasswd, 读配置项 (相加 (取运行目录 (), “\Server.ini”), “PIX”, “TestPasswd”, “Test”))

赋值 (Settings.SQLIP, 读配置项 (相加 (取运行目录 (), “\Server.ini”), “MSSQL”, “IP”, ))
赋值 (Settings.SQLDATA, 读配置项 (相加 (取运行目录 (), “\Server.ini”), “MSSQL”, “Base”, ))
赋值 (Settings.SQLUSER, 读配置项 (相加 (取运行目录 (), “\Server.ini”), “MSSQL”, “User”, ))
赋值 (Settings.SQLPASSWD, 读配置项 (相加 (取运行目录 (), “\Server.ini”), “MSSQL”, “Passwd”, ))

 ' 读配置项 (取运行目录 () ＋ “\Server.ini”, “MYSQL”, “IP”, )
 ' 读配置项 (取运行目录 () ＋ “\Server.ini”, “MYSQL”, “Base”, )
 ' 读配置项 (取运行目录 () ＋ “\Server.ini”, “MYSQL”, “User”, )
 ' 读配置项 (取运行目录 () ＋ “\Server.ini”, “MYSQL”, “Passwd”, )

赋值 (Settings.ACCESSPATH, 读配置项 (相加 (取运行目录 (), “\Server.ini”), “ACCESS”, “Path”, “”))
赋值 (Settings.ACCESSMM, 读配置项 (相加 (取运行目录 (), “\Server.ini”), “ACCESS”, “Passwd”, “”))

赋值 (Settings.RemindDay, 到数值 (读配置项 (相加 (取运行目录 (), “\Server.ini”), “REMIND”, “LeftTime”, “3”)))
赋值 (Settings.BlockTimes, 到数值 (读配置项 (相加 (取运行目录 (), “\Server.ini”), “REMIND”, “Block”, “10”)))

.如果真 (等于 (Settings.DBType, “MSSQL”))
    赋值 (.选中, 真)
.如果真结束
.如果真 (等于 (Settings.DBType, “MYSQL”))
    赋值 (.选中, 真)
.如果真结束
.如果真 (等于 (Settings.DBType, “ACCESS”))
    赋值 (.选中, 真)
.如果真结束
.如果真 (等于 (Settings.ServerType, “Fee”))
    赋值 (.选中, 真)
.如果真结束
.如果真 (等于 (Settings.ServerType, “Free”))
    赋值 (.选中, 真)
.如果真结束
.如果真 (等于 (Settings.ServerType, “Test”))
    赋值 (.选中, 真)
.如果真结束

 ' 加密部分读取
赋值 (TypeNo, 到数值 (读配置项 (相加 (取运行目录 (), “\Server.ini”), “MasSetting”, “TypeNo”, “0”)))
.如果真 (不等于 (TypeNo, 0))
    清空 ()
    .计次循环首 (TypeNo, i)
        读配置项 (相加 (取运行目录 (), “\Server.ini”), “MasSetting”, 相加 (“Type”, 到文本 (i)), “读取错误”).加入项目 ()
    .计次循环尾 ()
.如果真结束
 ' 日志信息过滤项
.计次循环首 (12, i)
    .判断开始 (等于 (读配置项 (相加 (取运行目录 (), “\Server.ini”), “RECORD”, 相加 (“Type”, 到文本 (i)), “0”), “1”))
        赋值 (组件.选择框组 [i], 选中, 真)
    .默认
        赋值 (组件.选择框组 [i], 选中, 假)
    .判断结束
    
.计次循环尾 ()
赋值 (.现行选中项, 到数值 (读配置项 (相加 (取运行目录 (), “\Server.ini”), “RECORD”, 相加 (“Type”, 到文本 (13)), )))
赋值 (Settings.TimeType, .现行选中项)
赋值 (Settings.RecType, 到数值 (读配置项 (相加 (取运行目录 (), “\Server.ini”), “RECORD”, “RecordType”, “3”)))
.判断开始 (等于 (Settings.RecType, 3))
    赋值 (.选中, 真)
.默认
    赋值 (.选中, 真)
    .判断开始 (等于 (Settings.RecType, 0))
        赋值 (.禁止, 假)
        赋值 (.禁止, 假)
        赋值 (.选中, 真)
        赋值 (.选中, 假)
        赋值 (.禁止, 真)
        赋值 (.禁止, 真)
        赋值 (Settings.RecTime, 相乘 (到数值 (读配置项 (相加 (取运行目录 (), “\Server.ini”), “RECORD”, “RecordTime”, “5”)), 60000))
        赋值 (.时钟周期, Settings.RecTime)
    .判断 (等于 (Settings.RecType, 1))
        赋值 (.禁止, 假)
        赋值 (.禁止, 假)
        赋值 (.选中, 真)
        赋值 (.选中, 假)
        赋值 (.禁止, 真)
        赋值 (.禁止, 真)
        赋值 (.时钟周期, 30000)
        赋值 (Settings.RecTime, 到数值 (读配置项 (相加 (取运行目录 (), “\Server.ini”), “RECORD”, “Recordlen”, “5”)))
        赋值 (.内容, 到文本 (Settings.RecTime))
    .默认
        
    .判断结束
    
.判断结束


.子程序 删除断开用户列表, 空白型, , 正常断开及客户异常断开操作
.参数 句柄, 整数型, , 
.参数 请求代码, 文本型, 可空, 

.局部变量 TmpNo, 整数型, , , 
.局部变量 i, 整数型, , , 

赋值 (TmpNo, 取表项数 ())
.如果真 (不等于 (TmpNo, 0))
    .计次循环首 (TmpNo, i)
        .如果真 (或者 (等于 (相减 (i, 1).取标题 (1), 到文本 (句柄)), 等于 (相减 (i, 1).取标题 (3), 请求代码)))
            相减 (i, 1).删除表项 ()
            跳出循环 ()
        .如果真结束
        
    .计次循环尾 ()
.如果真结束


.子程序 _加密参数赋值时钟_周期事件, 空白型, , 动态加密
.局部变量 MasNo, 整数型, , , 

赋值 (MasNo, 取项目数 ())
相减 (现行加密选中项, 1).选中项目 (假)
.如果真 (或者 (等于 (现行加密选中项, -1), 等于 (现行加密选中项, MasNo)))
    赋值 (现行加密选中项, 0)
.如果真结束
现行加密选中项.选中项目 (真)
赋值 (Main.Mas, 现行加密选中项.取项目文本 ())
进行加密参数同步传递 (Main.Mas)
赋值 (现行加密选中项, 相加 (现行加密选中项, 1))

.子程序 _动态加密选择框_被单击, 空白型, , 动态加密
赋值 (.禁止, .选中)
赋值 (.禁止, .选中)
.判断开始 (等于 (.选中, 真))
    赋值 (.时钟周期, 相乘 (60000, 到数值 (.内容)))
.默认
    .如果真 (不等于 (.时钟周期, 0))
        赋值 (.时钟周期, 0)
    .如果真结束
    
.判断结束



.子程序 进行加密参数同步传递, 空白型, , 动态加密参数同步传递
.参数 Mas, 文本型, , 

.局部变量 UserNo, 整数型, , , 
.局部变量 i, 整数型, , , 
.局部变量 TmpString, 字节集, , , 
.局部变量 Hwnd, 整数型, , , 

赋值 (UserNo, 取表项数 ())
.如果真 (等于 (UserNo, 0))
    输出调试文本 (“没有客户建立连接!”)
    返回 ()
.如果真结束
赋值 (TmpString, 未知支持库函数_3 (到字节集 (相加 (“ResetMas”, Main.Mas)), “Honuo为群打造”, #))
.计次循环首 (UserNo, i)
    赋值 (Hwnd, 到数值 (相减 (i, 1).取标题 (1)))
    .如果 (等于 (MainServer.未知支持库函数_7 (Hwnd, TmpString), 真))
        输出调试文本 (“Sucess”)
    .否则
        输出调试文本 (“Fail”)
    .如果结束
    
.计次循环尾 ()
赋值 (TmpString, {  })

.子程序 _加密选择框_按下某键, 逻辑型, , 动态加密参数项目删除操作
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (并且 (不等于 (.现行选中项, -1), 等于 (键代码, #Del键)))
    .删除项目 (.现行选中项)
.如果真结束


.子程序 _增加加密按钮_被单击, 空白型, , 动态加密参数项目增加操作
.局部变量 MasNo, 整数型, , , 
.局部变量 i, 整数型, , , 
.局部变量 CanInsert, 逻辑型, , , 

.如果真 (等于 (删首尾空 (.内容), “”))
    信息框 (“不好意思,我不接受空加密哦”, 0, )
    返回 ()
.如果真结束
赋值 (MasNo, 取项目数 ())
赋值 (CanInsert, 真)
.计次循环首 (MasNo, i)
    .如果真 (等于 (相减 (i, 1).取项目文本 (), 删首尾空 (.内容)))
        信息框 (“存在相同的加密数据哦”, 16, “错误”)
        赋值 (CanInsert, 假)
        跳出循环 ()
    .如果真结束
    
.计次循环尾 ()
.如果真 (CanInsert)
    删首尾空 (.内容).加入项目 ()
    赋值 (.内容, “”)
.如果真结束


.子程序 _加密选择框_选中状态被改变, 空白型, , 动态加密参数禁止在服务器运行状态下选择操作
.如果真 (并且 (.选中项目 (.现行选中项, 假), 等于 (Main.Action, 真)))
    信息框 (“禁止在服务器开启状态下手动更改参数”, 16, “警告”)
    返回 ()
.如果真结束
.选中项目 (.现行选中项, 真)


.子程序 _时间组合框_列表项被选择, 空白型, , 日志时间格式选择
.判断开始 (等于 (.现行选中项, 0))
    赋值 (Settings.TimeType, 0)
.判断 (等于 (.现行选中项, 1))
    赋值 (Settings.TimeType, 1)
.判断 (等于 (.现行选中项, 2))
    赋值 (Settings.TimeType, 2)
.判断 (等于 (.现行选中项, 3))
    赋值 (Settings.TimeType, 3)
.判断 (等于 (.现行选中项, 4))
    赋值 (Settings.TimeType, 4)
.判断 (等于 (.现行选中项, 5))
    赋值 (Settings.TimeType, 5)
.默认
    
.判断结束


.子程序 _单选框2_被单击, 空白型, , 日志
.如果真 (.选中)
    连续赋值 (假, .禁止, .禁止, .禁止, .禁止)
    返回 ()
.如果真结束
赋值 (.时钟周期, 0)

.子程序 _日志按时间保存框_被单击, 空白型, , 日志
.如果真 (.选中)
    赋值 (.选中, 假)
    赋值 (.禁止, 真)
    赋值 (.禁止, 真)
    赋值 (Settings.RecType, 0)
    赋值 (.时钟周期, 相乘 (到数值 (.内容), 60000))
    返回 ()
.如果真结束
赋值 (.禁止, 真)
赋值 (.选中, 假)
赋值 (.禁止, 假)
赋值 (.禁止, 真)
赋值 (.禁止, 假)
赋值 (.时钟周期, 0)


.子程序 _日志按大小保存框_被单击, 空白型, , 日志
.如果真 (.选中)
    赋值 (.选中, 假)
    赋值 (.禁止, 真)
    赋值 (.禁止, 真)
    赋值 (Settings.RecType, 1)
    返回 ()
.如果真结束
赋值 (.禁止, 真)
赋值 (.选中, 假)
赋值 (.禁止, 假)
赋值 (.禁止, 真)
赋值 (.禁止, 假)


.子程序 _单选框1_被单击, 空白型, , 日志
.如果真 (.选中)
    连续赋值 (真, .禁止, .禁止, .禁止, .禁止)
    赋值 (Settings.RecType, 3)
.如果真结束


.子程序 _数据刷新_被选择, 空白型, , 菜单
服务器用户数据读取 ()

.子程序 _查找用户_被选择, 空白型, , 菜单
服务器用户查找 ()

.子程序 _禁止登陆_被选择, 空白型, , 菜单
服务器用户禁止或允许登录 (.取标题 (., 1), 真)

.子程序 _允许登录_被选择, 空白型, , 菜单
服务器用户禁止或允许登录 (.取标题 (., 1), 假)

.子程序 _删除用户_被选择, 空白型, , 菜单
.如果真 (等于 (信息框 (相加 (“确认要删除”, 用户列表现行项.取标题 (1), “用户吗？”), 相加 (#询问图标, #确认取消钮), ), #确认钮))
    服务器用户数据删除 (用户列表现行项.取标题 (1), )
.如果真结束


.子程序 _包月类型_被选择, 空白型, , 菜单
服务器用户数据读取 ()
服务器用户类型筛选 (“包月型”)

.子程序 _包年类型_被选择, 空白型, , 菜单
 ' 服务器用户数据读取 ()
服务器用户类型筛选 (“包年型”)

.子程序 _即将到期_被选择, 空白型, , 菜单
服务器用户数据读取 ()
服务器用户即将到期 ()

.子程序 _编辑用户_被选择, 空白型, , 菜单
赋值 (UserSet.Username, 用户列表现行项.取标题 (1))
赋值 (UserSet.Passwd, 用户列表现行项.取标题 (2))
赋值 (UserSet.Kind, 用户列表现行项.取标题 (3))
赋值 (UserSet.Bond, 用户列表现行项.取标题 (4))
赋值 (UserSet.Record, 用户列表现行项.取标题 (8))
载入 (用户编辑窗口, _启动窗口, 假)

.子程序 _充值卡配置_被选择, 空白型, , 菜单
载入 (充值卡窗口, _启动窗口, 假)

.子程序 _收费单选_被单击, 空白型, , 服务性质改变
.如果真 (等于 (.选中, 真))
    赋值 (Settings.ServerType, “Fee”)
.如果真结束


.子程序 _免费单选_被单击, 空白型, , 服务性质改变
.如果真 (等于 (.选中, 真))
    赋值 (Settings.ServerType, “Free”)
.如果真结束


.子程序 _测试单选_被单击, 空白型, , 服务性质改变
.如果真 (等于 (.选中, 真))
    赋值 (Settings.ServerType, “Test”)
.如果真结束


.子程序 _新用户注册_被选择, 空白型, , 
载入 (新用户添加窗口, _启动窗口, 假)

.程序集 数据库程序集, , , 

.子程序 取类型名, 文本型, , 
.参数 ADO字段类型, 整数型, , 

.局部变量 类型名, 文本型, , , 

.判断开始 (等于 (ADO字段类型, 20))
    赋值 (类型名, “超长整数(BigInt)”)
.判断 (等于 (ADO字段类型, 128))
    赋值 (类型名, “二进制(BINARY)”)
.判断 (等于 (ADO字段类型, 11))
    赋值 (类型名, “逻辑型(Boolean)”)
.判断 (等于 (ADO字段类型, 8))
    赋值 (类型名, “宽文本(BSTR)”)
.判断 (等于 (ADO字段类型, 129))
    赋值 (类型名, “字符型(Char)”)
.判断 (等于 (ADO字段类型, 6))
    赋值 (类型名, “货币型(Currency)”)
.判断 (等于 (ADO字段类型, 7))
    赋值 (类型名, “日期型(Date)”)
.判断 (等于 (ADO字段类型, 133))
    赋值 (类型名, “数据库日期型(DBDate)”)
.判断 (等于 (ADO字段类型, 134))
    赋值 (类型名, “时间型(DBTime)”)
.判断 (等于 (ADO字段类型, 135))
    赋值 (类型名, “时间戳(TimeStamp)”)
.判断 (等于 (ADO字段类型, 14))
    赋值 (类型名, “数值型(Decimal)”)
    
.判断 (等于 (ADO字段类型, 5))
    赋值 (类型名, “双精度(Double)”)
    
.判断 (等于 (ADO字段类型, 0))
    赋值 (类型名, “空白型(Empty)”)
    
.判断 (等于 (ADO字段类型, 10))
    赋值 (类型名, “错误码(Error)”)
.判断 (等于 (ADO字段类型, 72))
    赋值 (类型名, “标识型(GUID)”)
.判断 (等于 (ADO字段类型, 9))
    赋值 (类型名, “IDispatch”)
.判断 (等于 (ADO字段类型, 3))
    赋值 (类型名, “整数型(Integer)”)
    
.判断 (等于 (ADO字段类型, 13))
    赋值 (类型名, “IUnknown”)
    
.判断 (等于 (ADO字段类型, 205))
    赋值 (类型名, “超变长二进制(LongVarBinary)”)
    
.判断 (等于 (ADO字段类型, 201))
    赋值 (类型名, “超变长文本(LongVarChar)”)
    
.判断 (等于 (ADO字段类型, 203))
    赋值 (类型名, “超变长宽文本(LongVarWChar)”)
    
.判断 (等于 (ADO字段类型, 131))
    赋值 (类型名, “数字型(Numeric)”)
    
.判断 (等于 (ADO字段类型, 4))
    赋值 (类型名, “单精度(Single)”)
    
.判断 (等于 (ADO字段类型, 2))
    赋值 (类型名, “短整数(SmallInt)”)
    
.判断 (等于 (ADO字段类型, 16))
    赋值 (类型名, “有符号字节(TinyInt)”)
    
.判断 (等于 (ADO字段类型, 21))
    赋值 (类型名, “无符号超长整数(UnsignedBigInt)”)
    
.判断 (等于 (ADO字段类型, 19))
    赋值 (类型名, “无符号整数(UnsignedInt)”)
    
.判断 (等于 (ADO字段类型, 18))
    赋值 (类型名, “无符号短整数(UnsignedSmallIn)”)
    
.判断 (等于 (ADO字段类型, 17))
    赋值 (类型名, “字节型(UnsignedTinyInt)”)
    
.判断 (等于 (ADO字段类型, 132))
    赋值 (类型名, “自定义型(UserDefined)”)
    
.判断 (等于 (ADO字段类型, 204))
    赋值 (类型名, “变长二进制(VarBinary)”)
    
.判断 (等于 (ADO字段类型, 200))
    赋值 (类型名, “变长文本(VarChar)”)
    
.判断 (等于 (ADO字段类型, 12))
    赋值 (类型名, “变体型(Variant)”)
    
.判断 (等于 (ADO字段类型, 202))
    赋值 (类型名, “变长宽文本(VarWChar)”)
    
.判断 (等于 (ADO字段类型, 130))
    赋值 (类型名, “宽文本(WChar)”)
    
.默认
    赋值 (类型名, 相加 (“未知类型(代号:”, 到文本 (ADO字段类型), “)”))
.判断结束
返回 (类型名)

.子程序 转换类型, 整数型, , 
.参数 类型, 空白型, , 

.局部变量 字段类型, 整数型, , , 
.局部变量 N, 整数型, , , 

.计次循环首 (12, N)
    赋值 (字段类型, 多项选择 (N, 17, 2, 3, 5, 4, 5, 11, 7, 0, 202, 205, 203))
    
    .如果真 (等于 (字段类型, 类型))
        .如果真 (等于 (N, 12))
            返回 (10)
        .如果真结束
        
        返回 (N)
    .如果真结束
    处理事件 ()
.计次循环尾 ()
.如果真 (等于 (类型, 6))
    返回 (#双精度小数型)
.如果真结束
.如果真 (并且 (大于或等于 (类型, 133), 小于或等于 (类型, 135)))
    返回 (#日期时间型)
.如果真结束
返回 (3) ' 默认为整数型

.子程序 OpenSQL, 逻辑型, , 成功返回真，失败返回假
.参数 数据库连接对象, 未知类型0x40001, , ADO数据库连接对象
.参数 服务器名, 文本型, 可空, 默认为localhost，可填写IP：127.0.0.1,加上除1433外的端口号
.参数 数据库名, 文本型, , 
.参数 用户名, 文本型, 可空, 默认为sa
.参数 密码, 文本型, 可空, 默认为空
.参数 是否保存密码, 逻辑型, 可空, 默认为不保存密码，出于安全性考虑，建议设为不保存

.局部变量 连接文本, 文本型, , , 


.如果真 (数据库连接对象.未知支持库函数_3 ())
    信息框 (“ADODB驱动没有安装!”, #错误图标, )
    返回 (假)
.如果真结束

.如果真 (或者 (是否为空 (服务器名), 等于 (服务器名, “”)))
    赋值 (服务器名, 取主机名 ())
.如果真结束
.如果真 (是否为空 (用户名))
    赋值 (用户名, “sa”)
.如果真结束
.如果 (是否保存密码)
    赋值 (连接文本, 相加 (“Provider=SQLOLEDB.1;Password=”, 密码, “;Persist Security Info=True;Initial Catalog=”, 数据库名, “;User ID=”, 用户名, “;Data Source=”, 服务器名))
.否则
    赋值 (连接文本, 相加 (“Provider=SQLOLEDB.1;Password=”, 密码, “;Persist Security Info=False;Initial Catalog=”, 数据库名, “;User ID=”, 用户名, “;Data Source=”, 服务器名))
    
.如果结束
 ' // MSSQL两种连接文本
 ' 连接文本 ＝ “driver={SQL Server};server=lzg;UID=sa;PWD=lzg;DATABASE=master;”
 ' 连接文本 ＝ “Provider=SQLOLEDB.1;Data Source=lzg;User Id=sa;PassWord=lzg;Initial Catalog=master”
.如果真 (不等于 (数据库连接对象., #.))
    数据库连接对象.未知支持库函数_10 () ' 关闭原来已经打开的
.如果真结束
置等待鼠标 ()
.如果 (数据库连接对象.未知支持库函数_12 (连接文本, , , ))
    恢复鼠标 ()
    返回 (真)
.否则
    恢复鼠标 ()
    信息框 (相加 (“打开MSSQL数据库失败！相关信息：”, #换行符, #换行符, 数据库连接对象.), 相加 (#确认钮, #错误图标), )
    返回 (假)
.如果结束


.子程序 OpenACCESS, 逻辑型, , 成功返回真，失败返回假
.参数 数据库连接对象, 未知类型0x40001, , AOD数据库连接对象
.参数 Password, 文本型, 可空, 可空，用户组中用户密码
.参数 UserID, 文本型, 可空, 可空，默认为Admin User ID : 用户组中用户名称
.参数 DataSource, 文本型, , 完整文件路径名，Data Source : 数据文件名 *.mdb (可以是网络共享)
.参数 SystemDatabase, 文本型, 可空, 可空，为空时，则使用系统默认路径，如：C:\Documents and Settings\Administrator\Application Data\Microsoft\Access\System.mdw 否则请输入 system.mdw 文件完整路径。
.参数 DatabasePassword, 文本型, 可空, 可空，默认为空。Jet OLEDB:Database Password : 打开数据库的密码
.参数 是否保存密码, 逻辑型, 可空, 可空，默认为不保存密码，出于安全性考虑，建议设为不保存

.局部变量 Persist_Security_Info, 文本型, , , 

 ' Provider=Microsoft.Jet.OLEDB.4.0;Password=123;User ID=zzq;Data Source=C:\123.mdb;Mode=Share Deny None;Extended Properties="";Jet OLEDB:System database=C:\123.MDW;Jet OLEDB:Registry Path="";Jet OLEDB:Database Password="";Jet OLEDB:Engine Type=5;Jet OLEDB:Database Locking Mode=0;Jet OLEDB:Global Partial Bulk Ops=2;Jet OLEDB:Global Bulk Transactions=1;Jet OLEDB:New Database Password="";Jet OLEDB:Create System Database=False;Jet OLEDB:Encrypt Database=False;Jet OLEDB:Don't Copy Locale on Compact=False;Jet OLEDB:Compact Without Replica Repair=False;Jet OLEDB:SFP=False
.如果真 (数据库连接对象.未知支持库函数_3 ())
    信息框 (“ADODB驱动没有安装!”, #错误图标, )
    返回 (假)
.如果真结束

.如果真 (不等于 (数据库连接对象., #.))
    数据库连接对象.未知支持库函数_10 () ' 关闭原来已经打开的
.如果真结束
 ' 数据库连接.连接文本 ＝ “provider=Microsoft.Jet.OLEDB.4.0;Data Source=” ＋ “”

.如果真 (不等于 (Password, “”))
    赋值 (Password, 相加 (“;Password=”, Password))
.如果真结束

.判断开始 (不等于 (UserID, “”))
    赋值 (UserID, 相加 (“;User ID=”, UserID))
.默认
    赋值 (UserID, “;User ID=Admin”)
.判断结束

.如果真 (不等于 (SystemDatabase, “”))
    赋值 (SystemDatabase, 相加 (“;Jet OLEDB:System Database=”, SystemDatabase))
.如果真结束

.如果真 (不等于 (DatabasePassword, “”))
    赋值 (DatabasePassword, 相加 (“;Jet OLEDB:Database Password=”, DatabasePassword))
.如果真结束

.判断开始 (是否保存密码)
    赋值 (Persist_Security_Info, “;Persist Security Info=True”)
.默认
    赋值 (Persist_Security_Info, “;Persist Security Info=False”)
.判断结束

赋值 (数据库连接对象., 相加 (“Provider=Microsoft.Jet.OLEDB.4.0”, UserID, Password, “;Data Source=”, DataSource, Persist_Security_Info, SystemDatabase, DatabasePassword))
 ' 输出调试文本 (“数据库连接对象.连接文本：　” ＋ 数据库连接对象.连接文本)
 ' //工作组信息丢失，或是已被其它用户以独占方式打开，这是在用Ole DB方式打开加密ACCESS库时碰到的，原先用下面的代码来打开："Provider=Microsoft.Jet.OLEDB.4.0;User Id=admin;Password=123456;Data Source=xx.mdb"将它改成："Provider=Microsoft.Jet.OLEDB.4.0;User Id=admin;jet OleDB:Database Password=123456;Data Source=xx.mdb"
 ' 举例：
 ' Provider=Microsoft.Jet.OLEDB.4.0;User ID=admin;jet OleDB:Database Password=123;Data Source=C:\mdb.mdb;Persist Security Info=True
 ' 或者：
 ' Provider=Microsoft.Jet.OLEDB.4.0;User Id=admin;jet OleDB:Database Password=123;Data Source=C:\mdb.mdb
 ' //
置等待鼠标 ()
.如果 (数据库连接对象.未知支持库函数_12 ())
    恢复鼠标 ()
     ' 信息框 (“打开ACCESS数据库成功！”, #确认钮 ＋ #信息图标, )
     ' 输出调试文本 (“数据库连接对象.命令超时：　” ＋ 到文本 (数据库连接对象.命令超时))
     ' 输出调试文本 (“数据库连接对象.连接超时：　” ＋ 到文本 (数据库连接对象.连接超时))
     ' 输出调试文本 (“数据库连接对象.游标定位：　” ＋ 到文本 (数据库连接对象.游标定位))
     ' 输出调试文本 (“数据库连接对象.默认数据库：　” ＋ 到文本 (数据库连接对象.默认数据库))
     ' 输出调试文本 (“数据库连接对象.分离等级：　” ＋ 到文本 (数据库连接对象.分离等级))
     ' 输出调试文本 (“数据库连接对象.操作权限：　” ＋ 到文本 (数据库连接对象.操作权限))
     ' 输出调试文本 (“数据库连接对象.数据库提供者：　” ＋ 到文本 (数据库连接对象.数据库提供者))
     ' 输出调试文本 (“数据库连接对象.状态：　” ＋ 到文本 (数据库连接对象.状态))
     ' 输出调试文本 (“数据库连接对象.引擎版本：　” ＋ 到文本 (数据库连接对象.引擎版本))
     ' 输出调试文本 (“数据库连接对象.连接文本：　” ＋ 到文本 (数据库连接对象.连接文本))
    
    返回 (真)
.否则
    恢复鼠标 ()
    信息框 (相加 (“打开ACCESS数据库失败！相关信息：”, #换行符, #换行符, 数据库连接对象.), 相加 (#确认钮, #错误图标), )
     ' 输出调试文本 (“数据库连接对象.命令超时：　” ＋ 到文本 (数据库连接对象.命令超时))
     ' 输出调试文本 (“数据库连接对象.连接超时：　” ＋ 到文本 (数据库连接对象.连接超时))
     ' 输出调试文本 (“数据库连接对象.游标定位：　” ＋ 到文本 (数据库连接对象.游标定位))
     ' 输出调试文本 (“数据库连接对象.默认数据库：　” ＋ 到文本 (数据库连接对象.默认数据库))
     ' 输出调试文本 (“数据库连接对象.分离等级：　” ＋ 到文本 (数据库连接对象.分离等级))
     ' 输出调试文本 (“数据库连接对象.操作权限：　” ＋ 到文本 (数据库连接对象.操作权限))
     ' 输出调试文本 (“数据库连接对象.数据库提供者：　” ＋ 到文本 (数据库连接对象.数据库提供者))
     ' 输出调试文本 (“数据库连接对象.状态：　” ＋ 到文本 (数据库连接对象.状态))
     ' 输出调试文本 (“数据库连接对象.引擎版本：　” ＋ 到文本 (数据库连接对象.引擎版本))
     ' 输出调试文本 (“数据库连接对象.连接文本：　” ＋ 到文本 (数据库连接对象.连接文本))
    返回 (假)
.如果结束


.子程序 数据链接向导, 逻辑型, , 成功返回真，失败返回假
.参数 数据库连接对象, 未知类型0x40001, , 

.局部变量 数据链接, 对象, , , 
.局部变量 连接对象, 对象, , , 
.局部变量 连接文本, 文本型, , , 


.如果真 (数据库连接对象.未知支持库函数_3 ())
    信息框 (“ADODB驱动没有安装!”, #错误图标, )
    返回 (假)
.如果真结束

数据链接.创建 (“DataLinks”, )
赋值 (连接对象, 数据链接.对象型方法 (“PromptNew”, ))
.如果真 (连接对象.是否为空 ())
    返回 (假)
.如果真结束
赋值 (连接文本, 连接对象.读文本属性 (“ConnectionString”, ))
输出调试文本 (相加 (“连接文本：  ”, 连接文本))
.如果真 (不等于 (数据库连接对象., #.))
    数据库连接对象.未知支持库函数_10 ()
.如果真结束
置等待鼠标 ()
.如果 (数据库连接对象.未知支持库函数_12 (连接文本, , , ))
    恢复鼠标 ()
    返回 (真)
.否则
    恢复鼠标 ()
    返回 (假)
.如果结束


.程序集 沟通程序集, , , 

.子程序 沟通数据处理, 空白型, , 
.参数 消息地址, 整数型, , 



.程序集 服务器数据处理程序集, , , 

.子程序 拒绝黑名单IP, 逻辑型, , 对黑名单IP地址进行封锁
.参数 对应IP地址, 文本型, , 

.局部变量 Record, 未知类型0x40002, , , 
.局部变量 CMD, 文本型, , , 

.如果真 (等于 (MainConnect., #.))
    返回 (假)
.如果真结束
赋值 (CMD, 相加 (“Select * From BlockIPS Where BlockIP='”, 对应IP地址, “'”))
赋值 (Record, MainConnect.未知支持库函数_11 (CMD, , #.))
.如果真 (并且 (取反 (Record.未知支持库函数_17 ()), 不等于 (Record.未知支持库函数_59 (0, #文本型), “”)))
    返回 (真)
.如果真结束
返回 (假)

.子程序 拒绝黑名单Mac, 逻辑型, , 对黑名单Mac地址进行封锁
.参数 对应Mac地址, 文本型, , 

.局部变量 Record, 未知类型0x40002, , , 
.局部变量 CMD, 文本型, , , 

.如果真 (等于 (MainConnect., #.))
    返回 (假)
.如果真结束
赋值 (CMD, 相加 (“Select * From BlockMacS Where BlockMac='”, 对应Mac地址, “'”))
赋值 (Record, MainConnect.未知支持库函数_11 (CMD, , #.))
.如果真 (并且 (取反 (Record.未知支持库函数_17 ()), 不等于 (Record.未知支持库函数_59 (0, #文本型), “”)))
    返回 (真)
.如果真结束
返回 (假)

.子程序 用户核对, 逻辑型, , 
.参数 请求代码, 文本型, , 
.参数 客户句柄, 整数型, , 
.参数 用户名, 文本型, , 
.参数 密码, 文本型, , 
.参数 Mac地址, 文本型, , 
.参数 Cpu, 文本型, 可空, 
.参数 Hdd, 文本型, 可空, 

.局部变量 Record, 未知类型0x40002, , , 
.局部变量 CMD, 文本型, , , 
.局部变量 Kind, 文本型, , , 
.局部变量 Mac, 文本型, , , 
.局部变量 TmpString, 字节集, , , 
.局部变量 LeftTime, 整数型, , , 
.局部变量 LastLogin, 日期时间型, , , 
.局部变量 TimesNow, 整数型, , , 
.局部变量 HadLogin, 文本型, , , 
.局部变量 Passwd, 文本型, , , 

.如果真 (等于 (MainConnect., #.))
    赋值 (TmpString, 未知支持库函数_3 (到字节集 (相加 (Main.Punish, “账号验证服务器连接失败!”)), Main.Mas, #))
    MainServer.未知支持库函数_7 (请求代码, TmpString)
    赋值 (TmpString, {  })
    返回 (假)
.如果真结束
赋值 (CMD, 相加 (“select * from users where UserName='”, 用户名, “'”))
赋值 (Record, MainConnect.未知支持库函数_11 (CMD, , #.))
.如果真 (并且 (取反 (Record.未知支持库函数_17 ()), 不等于 (Record.未知支持库函数_59 (0, #文本型), “”)))
    赋值 (Passwd, Record.未知支持库函数_59 (1, #文本型))
    .如果真 (不等于 (密码, Passwd))
        赋值 (TmpString, 未知支持库函数_3 (到字节集 (相加 (Main.Login, “账号密码不正确!”)), Main.Mas, #))
        MainServer.未知支持库函数_7 (请求代码, TmpString)
        赋值 (TmpString, {  })
        .如果真 (_启动窗口..选中)
            ReC (相加 (“用户名:”, 用户名), “被阻止的错误密码”, “拒绝登陆!”)
        .如果真结束
        返回 (假)
    .如果真结束
    赋值 (Kind, Record.未知支持库函数_59 (2, #文本型))
    赋值 (Mac, Record.未知支持库函数_59 (3, #文本型))
    赋值 (LeftTime, 到数值 (Record.未知支持库函数_59 (“Lefttime”, #文本型)))
    赋值 (LastLogin, 到时间 (Record.未知支持库函数_59 (“Lastlogin”, #文本型)))
    赋值 (HadLogin, Record.未知支持库函数_59 (“Login”, #文本型))
    .如果真 (并且 (Settings.BlockUser, 等于 (Record.未知支持库函数_59 (“Block”, #文本型), “1”)))
        赋值 (TmpString, 未知支持库函数_3 (到字节集 (相加 (Main.Punish, “被禁止登录的帐号!”)), Main.Mas, #))
        MainServer.未知支持库函数_7 (请求代码, TmpString)
        赋值 (TmpString, {  })
        .如果真 (_启动窗口..选中)
            ReC (相加 (“用户名:”, 用户名), “被禁止登录的帐号”, “拒绝登陆!”)
        .如果真结束
        删除断开用户列表 (客户句柄)
        返回 (假)
    .如果真结束
    Record.未知支持库函数_28 ()
    .如果真 (不等于 (HadLogin, “0”))
        赋值 (TmpString, 未知支持库函数_3 (到字节集 (相加 (Main.Login, “账号已登录,请不要重复登录!”)), Main.Mas, #))
        MainServer.未知支持库函数_7 (请求代码, TmpString)
        赋值 (TmpString, {  })
        .如果真 (_启动窗口..选中)
            ReC (相加 (“用户名:”, 用户名), “被阻止的重复登录”, “拒绝登陆!”)
        .如果真结束
        删除断开用户列表 (客户句柄)
        返回 (假)
    .如果真结束
    .如果真 (不等于 (Mac地址, Mac))
        赋值 (TmpString, 未知支持库函数_3 (到字节集 (相加 (Main.Punish, “禁止非绑定用户使用程序”)), Main.Mas, #))
        MainServer.未知支持库函数_7 (请求代码, TmpString)
        赋值 (TmpString, {  })
        .如果真 (_启动窗口..选中)
            ReC (相加 (“用户名:”, 用户名), “被阻止的非绑定用户”, “拒绝登陆!”)
        .如果真结束
        
        返回 (假)
    .如果真结束
    赋值 (TimesNow, 相减 (LeftTime, 取整 (取时间间隔 (取现行时间 (), LastLogin, #日))))
    .如果真 (小于或等于 (TimesNow, 0))
        赋值 (TimesNow, 0)
    .如果真结束
    
    .如果真 (并且 (用户数据增减 (请求代码, 用户名, 到文本 (TimesNow)), 等于 (Settings.ServerType, “Fee”))) ' 进行两次登陆性质进行扣点
         ' ***************** 以下为包月或包年类型判断 *******************
        .如果真 (或者 (等于 (Kind, “包月型”), 等于 (Kind, “包年型”)))
            .如果真 (等于 (TimesNow, 0))
                赋值 (TmpString, 未知支持库函数_3 (到字节集 (相加 (Main.Punish, “使用已到期,请尽快充值!”)), Main.Mas, #))
                MainServer.未知支持库函数_7 (请求代码, TmpString)
                赋值 (TmpString, {  })
                .如果真 (_启动窗口..选中)
                    ReC (相加 (“用户名:”, 用户名), “被阻止的到期帐号”, “拒绝登陆!”)
                .如果真结束
                删除断开用户列表 (客户句柄)
                返回 (假)
            .如果真结束
            
            .如果真 (并且 (大于 (TimesNow, 0), 小于或等于 (TimesNow, Settings.RemindDay)))
                赋值 (TmpString, 未知支持库函数_3 (到字节集 (相加 (Main.Login, “剩余不足”, 到文本 (TimesNow), “天尽快充值!”)), Main.Mas, #))
                MainServer.未知支持库函数_7 (请求代码, TmpString)
                赋值 (TmpString, {  })
                .如果 (用户登陆标示 (请求代码, 客户句柄, 用户名))
                    返回 (真)
                .否则
                    返回 (假)
                .如果结束
                
            .如果真结束
            
            .如果 (用户登陆标示 (请求代码, 客户句柄, 用户名))
                返回 (真)
            .否则
                返回 (假)
            .如果结束
            
        .如果真结束
        
    .如果真结束
    
    .如果真 (等于 (Settings.ServerType, “Free”)) ' 进行两次登陆性质进行扣点
         ' ***************** 以下为包月或包年类型判断 *******************
        .如果 (用户登陆标示 (请求代码, 客户句柄, 用户名))
            返回 (真)
        .否则
            返回 (假)
        .如果结束
        
    .如果真结束
    
     ' ***************** 进行两次登陆性质进行扣点失败操作 *******************
    赋值 (TmpString, 未知支持库函数_3 (到字节集 (相加 (Main.String, “账号验证服务器数据操作失败!”)), Main.Mas, #))
    MainServer.未知支持库函数_7 (请求代码, TmpString)
    赋值 (TmpString, {  })
    删除断开用户列表 (客户句柄, )
    MainServer.未知支持库函数_12 (客户句柄)
    返回 (假)
.如果真结束

 ' ***************** 进行登陆时不存在用户或密码错误操作 *******************
赋值 (TmpString, 未知支持库函数_3 (到字节集 (相加 (Main.Login, “无此账号!”)), Main.Mas, #))
MainServer.未知支持库函数_7 (请求代码, TmpString)
赋值 (TmpString, {  })
Record.未知支持库函数_28 ()
.如果真 (_启动窗口..选中)
    ReC (相加 (“用户名:”, 用户名), “被阻止的错误帐号”, “拒绝登陆!”)
.如果真结束

返回 (假)


.子程序 用户数据增减, 逻辑型, , 
.参数 请求代码, 文本型, , 
.参数 用户名, 文本型, , 
.参数 实际数, 文本型, , 

.局部变量 TmpString, 字节集, , , 
.局部变量 CMD, 文本型, , , 
.局部变量 Record, 未知类型0x40002, , , 

.如果真 (等于 (MainConnect., #.))
    赋值 (TmpString, 未知支持库函数_3 (到字节集 (相加 (Main.String, “账号验证服务器连接失败!”)), Main.Mas, #))
    MainServer.未知支持库函数_7 (请求代码, TmpString)
    赋值 (TmpString, {  })
    返回 (假)
.如果真结束
赋值 (CMD, 相加 (“update users set Lefttime='”, 实际数, “' where UserName='”, 用户名, “'”))
赋值 (Record, MainConnect.未知支持库函数_11 (CMD, , ))
.如果真 (取反 (Record.未知支持库函数_17 ()))
    Record.未知支持库函数_28 ()
    赋值 (CMD, 相加 (“update users set Lastlogin='”, 到文本 (取现行时间 ()), “' where UserName='”, 用户名, “'”))
    赋值 (Record, MainConnect.未知支持库函数_11 (CMD, , ))
    .如果真 (取反 (Record.未知支持库函数_17 ()))
        Record.未知支持库函数_28 ()
        返回 (真)
    .如果真结束
    返回 (假)
.如果真结束
Record.未知支持库函数_28 ()
返回 (假)

.子程序 用户登陆标示, 逻辑型, , 
.参数 请求代码, 文本型, , 
.参数 客户句柄, 整数型, , 
.参数 用户名, 文本型, , 

.局部变量 TmpString, 字节集, , , 
.局部变量 CMD, 文本型, , , 
.局部变量 Record, 未知类型0x40002, , , 

.如果真 (等于 (MainConnect., #.))
    赋值 (TmpString, 未知支持库函数_3 (到字节集 (相加 (Main.String, “账号验证服务器连接失败!”)), Main.Mas, #))
    MainServer.未知支持库函数_7 (请求代码, TmpString)
    赋值 (TmpString, {  })
    返回 (假)
.如果真结束
赋值 (CMD, 相加 (“update users set Login='”, 到文本 (客户句柄), “' where UserName='”, 用户名, “'”))
赋值 (Record, MainConnect.未知支持库函数_11 (CMD, , ))
.如果真 (取反 (Record.未知支持库函数_17 ()))
    Record.未知支持库函数_28 ()
    返回 (真)
.如果真结束
Record.未知支持库函数_28 ()
返回 (假)

.子程序 用户退出更新, 逻辑型, , 该处主要是为了只允许单用户登录
.参数 句柄, 整数型, , 

.局部变量 TmpString, 字节集, , , 
.局部变量 CMD, 文本型, , , 
.局部变量 Record, 未知类型0x40002, , , 

.如果真 (等于 (MainConnect., #.))
    返回 (假)
.如果真结束
赋值 (CMD, 相加 (“Select * From Users Where Login='”, 到文本 (句柄), “'”))
赋值 (Record, MainConnect.未知支持库函数_11 (CMD, , #.))
.如果真 (并且 (取反 (Record.未知支持库函数_17 ()), 等于 (Record.未知支持库函数_59 (7, #文本型), 到文本 (句柄))))
    Record.未知支持库函数_28 ()
    
    赋值 (CMD, 相加 (“Update Users Set Login='0' Where login='”, 到文本 (句柄), “'”))
    赋值 (Record, MainConnect.未知支持库函数_11 (CMD, , ))
    .如果真 (取反 (Record.未知支持库函数_17 ()))
        Record.未知支持库函数_28 ()
        返回 (真)
    .如果真结束
    
.如果真结束
Record.未知支持库函数_28 ()
返回 (假)


.子程序 服务器用户数据读取, 空白型, , 
.参数 列表, 超级列表框, , 

.局部变量 CMD, 文本型, , , 
.局部变量 Record, 未知类型0x40002, , , 
.局部变量 i, 整数型, , , 

.如果真 (等于 (MainConnect., #.))
    输出调试文本 (“关闭”)
    返回 ()
.如果真结束
赋值 (CMD, “Select * From Users Order by id”)
赋值 (Record, MainConnect.未知支持库函数_11 (CMD, , #.))
.如果真 (取反 (Record.未知支持库函数_17 ()))
    Record.未知支持库函数_39 ()
    列表.全部删除 ()
    .判断循环首 (取反 (Record.))
        赋值 (i, 列表.插入表项 ())
        列表.置标题 (i, 0, 到文本 (相加 (i, 1)))
        列表.置标题 (i, 1, Record.未知支持库函数_59 (0, #文本型))
        列表.置标题 (i, 2, Record.未知支持库函数_59 (1, #文本型))
        列表.置标题 (i, 3, Record.未知支持库函数_59 (2, #文本型))
        列表.置标题 (i, 4, Record.未知支持库函数_59 (3, #文本型))
        列表.置标题 (i, 5, Record.未知支持库函数_59 (4, #文本型))
        列表.置标题 (i, 6, Record.未知支持库函数_59 (5, #文本型))
        列表.置标题 (i, 7, Record.未知支持库函数_59 (6, #文本型))
        列表.置标题 (i, 8, Record.未知支持库函数_59 (7, #文本型))
        列表.置标题 (i, 9, Record.未知支持库函数_59 (8, #文本型))
        Record.未知支持库函数_41 ()
    .判断循环尾 ()
.如果真结束
Record.未知支持库函数_28 ()

.子程序 服务器用户查找, 空白型, , 
.参数 列表, 超级列表框, , 

.局部变量 i, 整数型, , , 
.局部变量 UserName, 文本型, , , 
.局部变量 TmpNo, 整数型, , , 

.如果真 (输入框 (“输入你要查找的用户名”, “用户查找”, “Honuo”, UserName, ))
    赋值 (TmpNo, 列表.取表项数 ())
    .计次循环首 (TmpNo, i)
        .如果真 (等于 (到小写 (列表.取标题 (相减 (i, 1), 1)), 到小写 (UserName)))
            赋值 (列表., 相减 (i, 1))
            跳出循环 ()
        .如果真结束
        
    .计次循环尾 ()
.如果真结束


.子程序 服务器用户禁止或允许登录, 空白型, , 
.参数 用户名, 文本型, , 
.参数 禁止, 逻辑型, , 真 标识禁止登录 假 标识允许登录

.局部变量 CMD, 文本型, , , 
.局部变量 Record, 未知类型0x40002, , , 
.局部变量 i, 整数型, , , 

.如果真 (等于 (MainConnect., #.))
    输出调试文本 (“关闭”)
    返回 ()
.如果真结束

.判断开始 (等于 (禁止, 真))
    赋值 (CMD, 相加 (“Update Users Set Block='1' Where UserName='”, 用户名, “'”))
.默认
    赋值 (CMD, 相加 (“Update Users Set Block='0' Where UserName='”, 用户名, “'”))
.判断结束
赋值 (Record, MainConnect.未知支持库函数_11 (CMD, , ))
.如果真 (取反 (Record.未知支持库函数_17 ()))
    信息框 (“操作成功!”, 0, )
    .判断开始 (等于 (禁止, 真))
        _启动窗口.置标题 (., 用户列表现行项, 9, “1”)
    .默认
        _启动窗口.置标题 (., 用户列表现行项, 9, “0”)
    .判断结束
    
.如果真结束
Record.未知支持库函数_28 ()

.子程序 服务器用户数据删除, 空白型, , 
.参数 用户名, 文本型, , 
.参数 列表, 超级列表框, , 

.局部变量 CMD, 文本型, , , 
.局部变量 Record, 未知类型0x40002, , , 
.局部变量 i, 整数型, , , 

.如果真 (等于 (MainConnect., #.))
    输出调试文本 (“关闭”)
    返回 ()
.如果真结束
赋值 (CMD, 相加 (“Delete From Users Where UserName='”, 用户名, “'”))
赋值 (Record, MainConnect.未知支持库函数_11 (CMD, , #.))
.如果真 (取反 (Record.未知支持库函数_17 ()))
     ' 列表.删除表项 (用户列表现行项)
    服务器用户数据读取 (列表)
.如果真结束
Record.未知支持库函数_28 ()


.子程序 服务器用户类型筛选, 空白型, , 
.参数 列表, 超级列表框, , 
.参数 Kind, 文本型, , 

.局部变量 TmpNo, 整数型, , , 
.局部变量 i, 整数型, , , 
.局部变量 index, 整数型, , "0", 
.局部变量 ArrayNo, 整数型, , , 

赋值 (TmpNo, 列表.取表项数 ())
重定义数组 (index, 假, 0)
.计次循环首 (TmpNo, i)
    .如果真 (不等于 (列表.取标题 (相减 (i, 1), 3), Kind))
        加入成员 (index, 相减 (i, 1))
    .如果真结束
    
.计次循环尾 ()
赋值 (ArrayNo, 取数组成员数 (index))
.如果真 (大于 (ArrayNo, 0))
    .计次循环首 (ArrayNo, i)
        
        .如果 (大于 (i, 1))
            赋值 (index [i], 相减 (index [i], 1))
            列表.删除表项 (index [i])
        .否则
            列表.删除表项 (index [1])
        .如果结束
        
    .计次循环尾 ()
.如果真结束


.子程序 服务器用户即将到期, 空白型, , 
.参数 列表, 超级列表框, , 

.局部变量 TmpNo, 整数型, , , 
.局部变量 i, 整数型, , , 
.局部变量 index, 整数型, , "0", 
.局部变量 ArrayNo, 整数型, , , 

赋值 (TmpNo, 列表.取表项数 ())
重定义数组 (index, 假, 0)
.计次循环首 (TmpNo, i)
    .如果真 (大于 (到数值 (列表.取标题 (相减 (i, 1), 5)), Settings.RemindDay))
        加入成员 (index, 相减 (i, 1))
    .如果真结束
    
.计次循环尾 ()
赋值 (ArrayNo, 取数组成员数 (index))
.如果真 (大于 (ArrayNo, 0))
    .计次循环首 (ArrayNo, i)
        
        .如果 (大于 (i, 1))
            赋值 (index [i], 相减 (index [i], 1))
            列表.删除表项 (index [i])
        .否则
            列表.删除表项 (index [1])
        .如果结束
        
    .计次循环尾 ()
.如果真结束


.子程序 点卡充值校验, 逻辑型, , 
.参数 卡号, 文本型, , 
.参数 密码, 文本型, , 
.参数 用户名, 文本型, , 
.参数 请求代码, 文本型, , 

.局部变量 CMD, 文本型, , , 
.局部变量 Record, 未知类型0x40002, , , 
.局部变量 i, 整数型, , , 
.局部变量 Type, 文本型, , , 
.局部变量 LeftTime, 文本型, , , 
.局部变量 TmpString, 字节集, , , 
.局部变量 Used, 文本型, , , 

.如果真 (等于 (MainConnect., #.))
    赋值 (TmpString, 未知支持库函数_3 (到字节集 (相加 (Main.Renewal, “充值失败!服务器未连接!”)), Main.Mas, #))
    MainServer.未知支持库函数_7 (请求代码, TmpString)
    赋值 (TmpString, {  })
    返回 (假)
.如果真结束
赋值 (CMD, 相加 (“Select * From Cards Where CardNO='”, 卡号, “'”))
赋值 (Record, MainConnect.未知支持库函数_11 (CMD, , ))
.如果真 (并且 (取反 (Record.未知支持库函数_17 ()), 不等于 (Record.未知支持库函数_59 (“CardNO”, #文本型), “”)))
    .如果真 (等于 (密码, Record.未知支持库函数_59 (“CardPW”, #文本型)))
        赋值 (Type, Record.未知支持库函数_59 (“CardTP”, #文本型))
        赋值 (Used, Record.未知支持库函数_59 (“CardAC”, #文本型))
        Record.未知支持库函数_28 ()
        .如果真 (等于 (Used, “已使用”))
            赋值 (TmpString, 未知支持库函数_3 (到字节集 (相加 (Main.Renewal, “充值失败!该卡已被使用!”)), Main.Mas, #))
            MainServer.未知支持库函数_7 (请求代码, TmpString)
            赋值 (TmpString, {  })
            
            返回 (假)
        .如果真结束
        
        赋值 (CMD, 相加 (“Select * From Users Where UserName='”, 用户名, “'”))
        赋值 (Record, MainConnect.未知支持库函数_11 (CMD, , ))
        .如果真 (并且 (取反 (Record.未知支持库函数_17 ()), 不等于 (Record.未知支持库函数_59 (“UserName”, #文本型), “”)))
            赋值 (LeftTime, Record.未知支持库函数_59 (“LeftTime”, #文本型))
            .判断开始 (等于 (Type, “包月型”))
                赋值 (LeftTime, 到文本 (相加 (到数值 (LeftTime), 31)))
            .判断 (等于 (Type, “包年型”))
                赋值 (LeftTime, 到文本 (相加 (到数值 (LeftTime), 365)))
            .判断 (等于 (Type, “VIP型”))
                赋值 (LeftTime, 到文本 (相加 (到数值 (LeftTime), 3650)))
            .默认
                
            .判断结束
            Record.未知支持库函数_28 ()
            赋值 (CMD, 相加 (“Update Users set Lefttime='”, LeftTime, “' Where UserName='”, 用户名, “'”))
            赋值 (Record, MainConnect.未知支持库函数_11 (CMD, , ))
            .如果真 (取反 (Record.未知支持库函数_17 ()))
                
                赋值 (CMD, 相加 (“Update Cards set CardAC='已使用',CardUS='”, 用户名, “' Where CardNO='”, 卡号, “'”))
                赋值 (Record, MainConnect.未知支持库函数_11 (CMD, , ))
                .如果真 (取反 (Record.未知支持库函数_17 ()))
                    赋值 (TmpString, 未知支持库函数_3 (到字节集 (相加 (Main.Renewal, “充值成功!感谢您的支持!”)), Main.Mas, #))
                    MainServer.未知支持库函数_7 (请求代码, TmpString)
                    赋值 (TmpString, {  })
                    
                    返回 (真)
                .如果真结束
                
            .如果真结束
            赋值 (TmpString, 未知支持库函数_3 (到字节集 (相加 (Main.Renewal, “充值失败!服务器操作失败!”)), Main.Mas, #))
            MainServer.未知支持库函数_7 (请求代码, TmpString)
            赋值 (TmpString, {  })
            
            返回 (假)
        .如果真结束
        赋值 (TmpString, 未知支持库函数_3 (到字节集 (相加 (Main.Renewal, “充值失败!无此用户名!”)), Main.Mas, #))
        MainServer.未知支持库函数_7 (请求代码, TmpString)
        赋值 (TmpString, {  })
        
        返回 (假)
    .如果真结束
    赋值 (TmpString, 未知支持库函数_3 (到字节集 (相加 (Main.Renewal, “充值失败!密码不匹配!”)), Main.Mas, #))
    MainServer.未知支持库函数_7 (请求代码, TmpString)
    赋值 (TmpString, {  })
    
    返回 (假)
.如果真结束
赋值 (TmpString, 未知支持库函数_3 (到字节集 (相加 (Main.Renewal, “充值失败!无此卡号!”)), Main.Mas, #))
MainServer.未知支持库函数_7 (请求代码, TmpString)
赋值 (TmpString, {  })

返回 (假)

.子程序 密码修改校验, 逻辑型, , 
.参数 用户名, 文本型, , 
.参数 原密码, 文本型, , 
.参数 新密码, 文本型, , 
.参数 请求代码, 文本型, , 

.局部变量 CMD, 文本型, , , 
.局部变量 Record, 未知类型0x40002, , , 
.局部变量 i, 整数型, , , 
.局部变量 Type, 文本型, , , 
.局部变量 LeftTime, 文本型, , , 
.局部变量 TmpPasswd, 字节集, , , 
.局部变量 Used, 文本型, , , 

.如果真 (等于 (MainConnect., #.))
    赋值 (TmpPasswd, 未知支持库函数_3 (到字节集 (相加 (Main.Passwd, “充值失败!服务器未连接!”)), Main.Mas, #))
    MainServer.未知支持库函数_7 (请求代码, TmpPasswd)
    赋值 (TmpPasswd, {  })
    返回 (假)
.如果真结束
赋值 (CMD, 相加 (“Select * From Users Where Username='”, 用户名, “'”))
赋值 (Record, MainConnect.未知支持库函数_11 (CMD, , ))
.如果真 (并且 (取反 (Record.未知支持库函数_17 ()), 等于 (Record.未知支持库函数_59 (“Username”, #文本型), 用户名)))
    .如果真 (等于 (原密码, Record.未知支持库函数_59 (“Passwd”, #文本型)))
        Record.未知支持库函数_28 ()
        赋值 (CMD, 相加 (“Update Users set Passwd='”, 新密码, “' Where UserName='”, 用户名, “'”))
        赋值 (Record, MainConnect.未知支持库函数_11 (CMD, , ))
        .如果真 (取反 (Record.未知支持库函数_17 ()))
            Record.未知支持库函数_28 ()
            赋值 (CMD, 相加 (“Select * From Users Where Username='”, 用户名, “'”))
            赋值 (Record, MainConnect.未知支持库函数_11 (CMD, , ))
            .如果 (并且 (取反 (Record.未知支持库函数_17 ()), 等于 (Record.未知支持库函数_59 (“Passwd”, #文本型), 新密码)))
                Record.未知支持库函数_28 ()
                赋值 (TmpPasswd, 未知支持库函数_3 (到字节集 (相加 (Main.Passwd, “密码修改成功!”)), Main.Mas, #))
                MainServer.未知支持库函数_7 (请求代码, TmpPasswd)
                赋值 (TmpPasswd, {  })
                返回 (真)
            .否则
                赋值 (TmpPasswd, 未知支持库函数_3 (到字节集 (相加 (Main.Passwd, “密码修改失败!”)), Main.Mas, #))
                MainServer.未知支持库函数_7 (请求代码, TmpPasswd)
                赋值 (TmpPasswd, {  })
                返回 (真)
            .如果结束
            
        .如果真结束
        赋值 (TmpPasswd, 未知支持库函数_3 (到字节集 (相加 (Main.Passwd, “密码修改失败!服务器操作失败!”)), Main.Mas, #))
        MainServer.未知支持库函数_7 (请求代码, TmpPasswd)
        赋值 (TmpPasswd, {  })
        返回 (假)
    .如果真结束
    赋值 (TmpPasswd, 未知支持库函数_3 (到字节集 (相加 (Main.Passwd, “密码修改失败!原密码不匹配!”)), Main.Mas, #))
    MainServer.未知支持库函数_7 (请求代码, TmpPasswd)
    赋值 (TmpPasswd, {  })
    返回 (假)
.如果真结束
赋值 (TmpPasswd, 未知支持库函数_3 (到字节集 (相加 (Main.Passwd, “密码修改失败!无此用户名!”)), Main.Mas, #))
MainServer.未知支持库函数_7 (请求代码, TmpPasswd)
赋值 (TmpPasswd, {  })
返回 (假)


.程序集 数据辅助处理程序集, , , 

.子程序 ReC, 空白型, , 
.参数 信息1, 文本型, , 
.参数 信息2, 文本型, 可空, 
.参数 信息3, 文本型, 可空, 

.局部变量 Tmp2, 文本型, , , 
.局部变量 Tmp3, 文本型, , , 

.如果 (是否为空 (信息2))
    赋值 (Tmp2, “”)
.否则
    赋值 (Tmp2, 相加 (“ [”, 取文本左边 (相加 (信息2, 取空白文本 (20)), 20), “]”))
.如果结束
.如果 (是否为空 (信息3))
    赋值 (Tmp3, “”)
.否则
    赋值 (Tmp3, 相加 (“ 操作:”, 取文本右边 (相加 (取空白文本 (10), 信息3), 10)))
.如果结束

_启动窗口.加入文本 (., 相加 (TimeNow, “ | ”, 取文本左边 (相加 (信息1, 取空白文本 (20)), 20), Tmp2, Tmp3, #换行符))

.子程序 FormatDate, 空白型, , 
.局部变量 now, 日期时间型, , , 
.局部变量 T1, 文本型, , , 
.局部变量 T2, 文本型, , , 
.局部变量 T3, 文本型, , , 
.局部变量 N1, 文本型, , , 
.局部变量 N2, 文本型, , , 
.局部变量 N3, 文本型, , , 

赋值 (now, 取现行时间 ())
赋值 (T1, 到文本 (取时间部分 (now, #小时)))
.如果真 (小于 (到数值 (T1), 10))
    赋值 (T1, 相加 (“0”, T1))
.如果真结束

赋值 (T2, 到文本 (取时间部分 (now, #分钟)))
.如果真 (小于 (到数值 (T2), 10))
    赋值 (T2, 相加 (“0”, T2))
.如果真结束

赋值 (T3, 到文本 (取时间部分 (now, #秒)))
.如果真 (小于 (到数值 (T3), 10))
    赋值 (T3, 相加 (“0”, T3))
.如果真结束

赋值 (N1, 到文本 (取时间部分 (now, #年份)))
赋值 (N2, 到文本 (取时间部分 (now, #月份)))
.如果真 (小于 (到数值 (N2), 10))
    赋值 (N2, 相加 (“0”, N2))
.如果真结束

赋值 (N3, 到文本 (取时间部分 (now, #日)))
.如果真 (小于 (到数值 (N3), 10))
    赋值 (N3, 相加 (“0”, N3))
.如果真结束



.判断开始 (等于 (Settings.TimeType, 0))
    赋值 (TimeNow, 相加 (N1, “-”, N2, “-”, N3, “ ”, T1, “:”, T2, “:”, T3))
.判断 (等于 (Settings.TimeType, 1))
    赋值 (TimeNow, 相加 (N1, “/”, N2, “/”, N3, “ ”, T1, “:”, T2, “:”, T3))
.判断 (等于 (Settings.TimeType, 2))
    赋值 (TimeNow, 相加 (N1, “年”, N2, “月”, N3, “日 ”, T1, “:”, T2, “:”, T3))
.判断 (等于 (Settings.TimeType, 3))
    赋值 (TimeNow, 相加 (“[”, N1, “-”, N2, “-”, N3, “ ”, T1, “:”, T2, “:”, T3, “]”))
.判断 (等于 (Settings.TimeType, 4))
    赋值 (TimeNow, 相加 (“[”, N1, “/”, N2, “/”, N3, “ ”, T1, “:”, T2, “:”, T3, “]”))
.判断 (等于 (Settings.TimeType, 5))
    赋值 (TimeNow, 相加 (“[”, N1, “年”, N2, “月”, N3, “日 ”, T1, “:”, T2, “:”, T3, “]”))
.默认
    
.判断结束





.子程序 P_压缩数据, 字节集, , 
.参数 a, 字节集, , 

返回 (a)

.子程序 P_解压数据, 字节集, , 
.参数 a, 字节集, , 

返回 (a)

.窗口程序集 用户编辑窗口程序集, , , 

.子程序 _用户编辑窗口_创建完毕, 空白型, , 
赋值 (.内容, UserSet.Username)
赋值 (.内容, UserSet.Passwd)
.判断开始 (等于 (UserSet.Kind, “包月型”))
    赋值 (.现行选中项, 0)
.判断 (等于 (UserSet.Kind, “包年型”))
    赋值 (.现行选中项, 1)
.判断 (等于 (UserSet.Kind, “VIP型”))
    赋值 (.现行选中项, 2)
.默认
    
.判断结束
赋值 (.内容, UserSet.Bond)
赋值 (.内容, UserSet.Record)

.子程序 _按钮1_被单击, 空白型, , 
.局部变量 CMD, 文本型, , , 
.局部变量 Record, 未知类型0x40002, , , 
.局部变量 i, 整数型, , , 

.如果真 (等于 (MainConnect., #.))
    返回 ()
.如果真结束
赋值 (CMD, 相加 (“Update Users Set Bond='”, .内容, “',Kind='”, .内容, “',Login='”, .内容, “',Passwd='”, .内容, “' Where UserName='”, .内容, “'”))
赋值 (Record, MainConnect.未知支持库函数_11 (CMD, , ))
.如果真 (取反 (Record.未知支持库函数_17 ()))
    FormatDate ()
    ReC (相加 (“用户名:”, UserSet.Username), “修改用户相关信息”, “修改数据!”)
    服务器用户数据读取 (_启动窗口.)
    Record.未知支持库函数_28 ()
    销毁 ()
.如果真结束



.窗口程序集 充值卡窗口程序集, , , 

.子程序 _生成充值卡按钮_被单击, 空白型, , 
.局部变量 i, 整数型, , , 
.局部变量 k, 整数型, , , 
.局部变量 CardNo, 文本型, , , 
.局部变量 CardPW, 文本型, , , 

全部删除 ()
置随机数种子 ()
.计次循环首 (到数值 (.内容), i)
    赋值 (k, .插入表项 ())
    赋值 (CardNo, 相加 (.内容, 到文本 (相加 (取随机数 (1789, 9999), i)), 到文本 (相加 (取随机数 (1234, 9999), i)), 到文本 (相加 (取随机数 (789, 9999), i))))
    赋值 (CardPW, 取文本左边 (到大写 (未知支持库函数_2 (到字节集 (取十六进制文本 (相加 (取随机数 (123456789, 999999999), i))))), 15))
    k.置标题 (0, CardNo)
    k.置标题 (1, CardPW)
    k.置标题 (2, .内容)
    k.置标题 (3, “未使用”)
.计次循环尾 ()

.子程序 _保存充值卡按钮_被单击, 空白型, , 
.局部变量 TmpNo, 整数型, , , 
.局部变量 CMD, 文本型, , , 
.局部变量 Record, 未知类型0x40002, , , 
.局部变量 i, 整数型, , , 
.局部变量 Cno, 文本型, , , 
.局部变量 Cpw, 文本型, , , 
.局部变量 Ctp, 文本型, , , 
.局部变量 text, 文本型, , , 
.局部变量 Cac, 文本型, , , 
.局部变量 Cus, 文本型, , , 

赋值 (TmpNo, 取表项数 ())
.如果真 (不等于 (TmpNo, 0))
    .如果真 (等于 (MainConnect., #.))
        输出调试文本 (“关闭”)
        返回 ()
    .如果真结束
    
    .计次循环首 (TmpNo, i)
        赋值 (Cno, 相减 (i, 1).取标题 (0))
        赋值 (Cpw, 相减 (i, 1).取标题 (1))
        赋值 (Ctp, 相减 (i, 1).取标题 (2))
        赋值 (Cac, 相减 (i, 1).取标题 (3))
        赋值 (Cus, 相减 (i, 1).取标题 (4))
        赋值 (CMD, 相加 (“INSERT INTO CARDS VALUES ('”, Cno, “','”, Cpw, “','”, Ctp, “','未使用','')”))
        赋值 (Record, MainConnect.未知支持库函数_11 (CMD, , ))
        赋值 (text, 相加 (text, “卡号:”, Cno, “ 密码:”, Cpw, “ 类型:”, Ctp, “ 状态:”, Cac, “ 用户:”, Cus, #换行符))
        Record.未知支持库函数_28 ()
    .计次循环尾 ()
    .如果真 (等于 (信息框 (相加 (“数据已经成功入库!”, #换行符, “是否导出保存到文件?”), 相加 (#信息图标, #是否钮), ), #是钮))
        _导出充值卡按钮_被单击 ()
    .如果真结束
    
.如果真结束


.子程序 _充值卡列表_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 CMD, 文本型, , , 
.局部变量 Record, 未知类型0x40002, , , 
.局部变量 i, 整数型, , , 
.局部变量 index, 整数型, , , 

.如果真 (等于 (键代码, #Del键))
    赋值 (index, .)
    充值卡数据删除 (index.取标题 (0))
.如果真结束


.子程序 充值卡数据筛选, 空白型, , 充值卡数据筛选
.参数 类型, 文本型, 可空, 
.参数 状态, 文本型, 可空, 

.局部变量 CMD, 文本型, , , 
.局部变量 Record, 未知类型0x40002, , , 
.局部变量 i, 整数型, , , 

.如果真 (并且 (是否为空 (类型), 是否为空 (状态)))
    .如果真 (等于 (MainConnect., #.))
        返回 ()
    .如果真结束
    赋值 (CMD, “Select * From Cards”)
    赋值 (Record, MainConnect.未知支持库函数_11 (CMD, , ))
    .如果真 (取反 (Record.未知支持库函数_17 ()))
        全部删除 ()
        Record.未知支持库函数_39 ()
        .判断循环首 (取反 (Record.))
            赋值 (i, .插入表项 ())
            i.置标题 (0, Record.未知支持库函数_59 (0, #文本型))
            i.置标题 (1, Record.未知支持库函数_59 (1, #文本型))
            i.置标题 (2, Record.未知支持库函数_59 (2, #文本型))
            i.置标题 (3, Record.未知支持库函数_59 (3, #文本型))
            i.置标题 (4, Record.未知支持库函数_59 (4, #文本型))
            Record.未知支持库函数_41 ()
        .判断循环尾 ()
        Record.未知支持库函数_28 ()
    .如果真结束
    
.如果真结束

.如果真 (等于 (是否为空 (类型), 假))
    .如果真 (等于 (MainConnect., #.))
        返回 ()
    .如果真结束
    赋值 (CMD, 相加 (“Select * From Cards Where CardTP='”, 类型, “'”))
    赋值 (Record, MainConnect.未知支持库函数_11 (CMD, , ))
    .如果真 (取反 (Record.未知支持库函数_17 ()))
        全部删除 ()
        Record.未知支持库函数_39 ()
        .判断循环首 (取反 (Record.))
            赋值 (i, .插入表项 ())
            i.置标题 (0, Record.未知支持库函数_59 (0, #文本型))
            i.置标题 (1, Record.未知支持库函数_59 (1, #文本型))
            i.置标题 (2, Record.未知支持库函数_59 (2, #文本型))
            i.置标题 (3, Record.未知支持库函数_59 (3, #文本型))
            i.置标题 (4, Record.未知支持库函数_59 (4, #文本型))
            Record.未知支持库函数_41 ()
        .判断循环尾 ()
        Record.未知支持库函数_28 ()
    .如果真结束
    
.如果真结束

.如果真 (等于 (是否为空 (状态), 假))
    .如果真 (等于 (MainConnect., #.))
        返回 ()
    .如果真结束
    赋值 (CMD, 相加 (“Select * From Cards Where CardAC='”, 状态, “'”))
    赋值 (Record, MainConnect.未知支持库函数_11 (CMD, , ))
    .如果真 (取反 (Record.未知支持库函数_17 ()))
        全部删除 ()
        Record.未知支持库函数_39 ()
        .判断循环首 (取反 (Record.))
            赋值 (i, .插入表项 ())
            i.置标题 (0, Record.未知支持库函数_59 (0, #文本型))
            i.置标题 (1, Record.未知支持库函数_59 (1, #文本型))
            i.置标题 (2, Record.未知支持库函数_59 (2, #文本型))
            i.置标题 (3, Record.未知支持库函数_59 (3, #文本型))
            i.置标题 (4, Record.未知支持库函数_59 (4, #文本型))
            Record.未知支持库函数_41 ()
        .判断循环尾 ()
        Record.未知支持库函数_28 ()
    .如果真结束
    
.如果真结束


.子程序 充值卡数据删除, 空白型, , 
.参数 CardNo, 文本型, , 

.局部变量 CMD, 文本型, , , 
.局部变量 Record, 未知类型0x40002, , , 
.局部变量 i, 整数型, , , 

.如果真 (等于 (MainConnect., #.))
    返回 ()
.如果真结束
赋值 (CMD, 相加 (“delete From Cards where CardNO='”, CardNo, “'”))
赋值 (Record, MainConnect.未知支持库函数_11 (CMD, , ))
.如果真 (取反 (Record.未知支持库函数_17 ()))
    FormatDate ()
    ReC (相加 (“Card:”, CardNo), “修改充值卡数据”, “删除数据!”)
    Record.未知支持库函数_28 ()
    _单选框6_被单击 ()
.如果真结束


.子程序 _单选框1_被单击, 空白型, , 
充值卡数据筛选 (“未使用”)

.子程序 _单选框2_被单击, 空白型, , 
 ' 充值卡数据筛选 (“已使用”)

.子程序 _单选框3_被单击, 空白型, , 
充值卡数据筛选 (“包月型”, )

.子程序 _单选框4_被单击, 空白型, , 
充值卡数据筛选 (“包年型”, )

.子程序 _单选框5_被单击, 空白型, , 
充值卡数据筛选 (“VIP型”, )

.子程序 _单选框6_被单击, 空白型, , 
充值卡数据筛选 ()

.子程序 _导出充值卡按钮_被单击, 空白型, , 
.局部变量 TmpNo, 整数型, , , 
.局部变量 i, 整数型, , , 
.局部变量 Cno, 文本型, , , 
.局部变量 Cpw, 文本型, , , 
.局部变量 Ctp, 文本型, , , 
.局部变量 Cac, 文本型, , , 
.局部变量 Cus, 文本型, , , 
.局部变量 text, 文本型, , , 

.如果真 (并且 (等于 (信息框 (“需要导出当前列表中的卡号信息吗？”, 相加 (#询问图标, #是否钮), ), #是钮), 不等于 (取表项数 (), 0)))
    赋值 (TmpNo, 取表项数 ())
    .计次循环首 (TmpNo, i)
        赋值 (Cno, 取文本左边 (相加 (相减 (i, 1).取标题 (0), 取空白文本 (20)), 20))
        赋值 (Cpw, 取文本左边 (相加 (相减 (i, 1).取标题 (1), 取空白文本 (20)), 20))
        赋值 (Ctp, 取文本左边 (相加 (相减 (i, 1).取标题 (2), 取空白文本 (10)), 10))
        赋值 (Cac, 取文本左边 (相加 (相减 (i, 1).取标题 (3), 取空白文本 (10)), 10))
        赋值 (Cus, 取文本左边 (相加 (相减 (i, 1).取标题 (4), 取空白文本 (10)), 10))
        赋值 (text, 相加 (text, “卡号:”, Cno, “ 密码:”, Cpw, “ 类型:”, Ctp, “ 状态:”, Cac, “ 用户:”, Cus, #换行符))
        
    .计次循环尾 ()
    .如果真 (并且 (打开 (), 不等于 (.文件名, “”)))
        写到文件 (.文件名, 到字节集 (text))
    .如果真结束
    
.如果真结束


.窗口程序集 新用户添加窗口程序集, , , 

.子程序 _按钮1_被单击, 空白型, , 
.局部变量 CMD, 文本型, , , 
.局部变量 Record, 未知类型0x40002, , , 
.局部变量 i, 整数型, , , 

.如果真 (等于 (MainConnect., #.))
    返回 ()
.如果真结束
赋值 (CMD, 相加 (“Insert into Users (Username,Passwd,Kind,Bond,Lefttime,LastLogin) VALUES ('”, .内容, “','”, .内容, “','”, .内容, “','”, .内容, “','0','”, 到文本 (取现行时间 ()), “')”))
赋值 (Record, MainConnect.未知支持库函数_11 (CMD, , ))
.如果真 (取反 (Record.未知支持库函数_17 ()))
    FormatDate ()
    ReC (相加 (“用户名:”, .内容), “新用户注册”, “修改数据!”)
    服务器用户数据读取 (_启动窗口.)
    Record.未知支持库函数_28 ()
    销毁 ()
.如果真结束



 ' 不属于任何一个程序集、类模块的函数：
