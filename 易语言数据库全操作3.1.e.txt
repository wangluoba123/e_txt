 ' 文件类型：Windows窗口程序

 ' 程序名称：数据库管理器
 ' 程序描述：本程序用作完成易语言系统中“数据库”菜单下的“结构管理器”和“记录管理器”功能。开发代号:易小刀.
 ' 程序作者：王军
 ' 邮政编码：210017
 ' 联系地址：江苏南京南苑晔园35-301室
 ' 联系电话：025-6431383
 ' 传真号码：
 ' 电子信箱：kindows@sina.com
 ' 主页地址：oldphoto.8u8.com
 ' 版权声明：www.eyuyan.com
www.ccfly.com
 ' 版本号：1.0
 ' 创建号：0.0

窗口 结构管理窗口
    左边 = 50
    顶边 = 50
    宽度 = 487
    高度 = 372
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 真
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “易语言数据库结构管理”
    帮助文件名 = “”

窗口 索引创建窗口
    左边 = 50
    顶边 = 50
    宽度 = 362
    高度 = 286
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “创建索引文件”
    帮助文件名 = “”

窗口 记录管理窗口
    左边 = 50
    顶边 = 50
    宽度 = 380
    高度 = 250
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 假
    禁止 = 假

窗口 _主窗口
    左边 = 50
    顶边 = 50
    宽度 = 644
    高度 = 336
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = 12607488 '  0xC06000
    最大化按钮 = 假
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “易数据库全操作 V3.10 -易语言书架出品”
    帮助文件名 = “”

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 752
    高度 = 473
    鼠标指针 = { 0,0,0,0 }
    标记 = “易之表”
    可视 = 真
    禁止 = 假
    边框 = 1
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 真
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 3
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “易之表信封打印系统 - [未标题]”
    帮助文件名 = “”

窗口 易之表关于
    左边 = 50
    顶边 = 50
    宽度 = 511
    高度 = 306
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = 12607488 '  0xC06000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “关于易之表”
    帮助文件名 = “”

窗口 易之表属性窗口
    左边 = 350
    顶边 = 450
    宽度 = 284
    高度 = 162
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 4
    底图方式 = 1
    底色 = 11187419 '  0xAAB4DB
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 0
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 真
    保持标题栏激活 = 假
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “属性面板”
    帮助文件名 = “”

窗口 易之表颜色选择窗口
    左边 = 50
    顶边 = 50
    宽度 = 295
    高度 = 149
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “请选择颜色:”
    帮助文件名 = “”

窗口 CSV窗口
    左边 = 50
    顶边 = 50
    宽度 = 588
    高度 = 463
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “通用CSV转换为易数据库”
    帮助文件名 = “”

窗口 导出窗口
    左边 = 50
    顶边 = 50
    宽度 = 380
    高度 = 295
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “易数据库转换为CSV文件”
    帮助文件名 = “”

窗口 易库转电子表窗口
    左边 = 50
    顶边 = 50
    宽度 = 387
    高度 = 258
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “edb数据库文件转Excel文件”
    帮助文件名 = “”

窗口 电子表转易库窗口
    左边 = 50
    顶边 = 50
    宽度 = 380
    高度 = 250
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “Excel表转换为易数据库”
    帮助文件名 = “”

窗口 万能转换窗口
    左边 = 50
    顶边 = 50
    宽度 = 348
    高度 = 413
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “万能数据库转换器”
    帮助文件名 = “”

窗口 易库转CSV窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 498
    高度 = 431
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “易数据库edb文件转csv文件或txt文件”
    帮助文件名 = “”

窗口 易数据库代码直接生成器窗口
    左边 = 50
    顶边 = 50
    宽度 = 585
    高度 = 471
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “易数据库代码直接生成器”
    帮助文件名 = “”

窗口 拆分易库窗口
    左边 = 50
    顶边 = 50
    宽度 = 483
    高度 = 413
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “拆分一个易数据库为两个”
    帮助文件名 = “”

窗口 合并易库窗口
    左边 = 50
    顶边 = 50
    宽度 = 484
    高度 = 425
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “将指定数据库中的记录添加到当前数据库”
    帮助文件名 = “”

窗口 库结构打印
    左边 = 50
    顶边 = 50
    宽度 = 448
    高度 = 443
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “易语言数据库结构打印程序”
    帮助文件名 = “”

窗口 print
    左边 = 50
    顶边 = 50
    宽度 = 205
    高度 = 183
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “关于”
    帮助文件名 = “”

窗口 易库转微软库窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 360
    高度 = 247
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “易数据库转 Access 数据库”
    帮助文件名 = “”

窗口 关于窗口1
    左边 = 50
    顶边 = 50
    宽度 = 360
    高度 = 240
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 0
    底图方式 = 1
    底色 = 16777215 '  0xFFFFFF
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 假
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 真
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “”
    帮助文件名 = “”

窗口 易语言数据库转换器
    左边 = 50
    顶边 = 50
    宽度 = 895
    高度 = 600
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 0
    底图方式 = 1
    底色 = 8388608 '  0x800000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 真
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 真
    图标 =  ' 已保存到：D:\易语言学习\Data\易语言数据库全操作3.1.e\易语言数据库转换器_图标.ico
    背景音乐 =  ' 空
    标题 = “”
    帮助文件名 = “”

窗口 易之表计算器窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 253
    高度 = 286
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 真
    保持标题栏激活 = 假
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “易计算器”
    帮助文件名 = “”

窗口 易之表万年历窗口
    左边 = 50
    顶边 = 50
    宽度 = 289
    高度 = 234
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = 12607488 '  0xC06000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 真
    保持标题栏激活 = 假
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “易万年历”
    帮助文件名 = “”

窗口 易之表函数
    左边 = 700
    顶边 = 150
    宽度 = 137
    高度 = 467
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 3
    底图方式 = 1
    底色 = 15133375 '  0xE6EABF
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 0
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 真
    保持标题栏激活 = 假
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “函数面板”
    帮助文件名 = “”

窗口 密码输入窗口
    左边 = 50
    顶边 = 50
    宽度 = 352
    高度 = 199
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “设置数据库密码:”
    帮助文件名 = “”

窗口 易之表信封窗口
    左边 = 50
    顶边 = 50
    宽度 = 851
    高度 = 553
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 1
    底图方式 = 1
    底色 = 12607488 '  0xC06000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “信封打印”
    帮助文件名 = “”

窗口 易之表批信窗口
    左边 = 50
    顶边 = 50
    宽度 = 380
    高度 = 345
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “批量信封打印设置”
    帮助文件名 = “”

窗口 易之表注册
    左边 = 50
    顶边 = 50
    宽度 = 507
    高度 = 331
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = 12607488 '  0xC06000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “请注册”
    帮助文件名 = “”

窗口 易之表模板窗口
    左边 = 50
    顶边 = 150
    宽度 = 160
    高度 = 467
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 3
    底图方式 = 1
    底色 = 14286847 '  0xD9FFFF
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 0
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 真
    保持标题栏激活 = 假
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “表单面板”
    帮助文件名 = “”



.图片 模块, " ' 已保存到：D:\易语言学习\Data\易语言数据库全操作3.1.e\模块", , edb转xls.ec
.图片 图标, " ' 已保存到：D:\易语言学习\Data\易语言数据库全操作3.1.e\图标", , ICO
.常量 总标题字, "“易之表增强版 & 易数据库全操作 V 3.10”", , 
.常量 原数据库, "“库1”", , 
.常量 数据库管理器, "“数据库管理器”", , 
.常量 用户习惯, "“用户习惯”", , 
.常量 易之表1, "“易之表”", , 
.常量 用户习惯1, "“用户习惯”", , 
.常量 逗号分隔文件, "“逗号分隔文件”", , 
.常量 字段名, "“字段名”", , 
.常量 字段类型, "“字段类型”", , 
.常量 字段长度, "“字段长度”", , 
.常量 chj数据库, "“chj”", , 
.常量 数据库1, "“圆球”", , 
.常量 英文, "“英文”", , 
.常量 中文, "“中文”", , 
.常量 日文, "“日文”", , 
.常量 韩文, "“韩文”", , 
.常量 德语, "“德语”", , 
.常量 法语, "“法语”", , 
.常量 荷语, "“荷语”", , 
.常量 澳语, "“澳语”", , 
.常量 挪语, "“挪语”", , 
.常量 西班牙语, "“西班牙语”", , 
.常量 备注, "“备注”", , 
.常量 常量1, "", , 
.图片 basegrd, " ' 已保存到：D:\易语言学习\Data\易语言数据库全操作3.1.e\basegrd", , 
.图片 界面, " ' 已保存到：D:\易语言学习\Data\易语言数据库全操作3.1.e\界面", , 
.常量 数据库2, "“分类表”", , 
.常量 分类, "“分类”", , 
.常量 WM_DROPFILES, "563", , 
.常量 , , , 


 ' 所需要的支持库：
 ' KRNLN d09f2340818511d396f6aaf844c7e325 3 7 系统核心支持库
 ' iext 27bb20fdd3e145e4bee3db39ddd6e64c 1 1 扩展界面支持库一
 ' cncnv 63AA4BEA120C4DABAD567115556DE054 1 0 文字编码转换支持库
 ' shell 52F260023059454187AF826A3C07AF2A 1 0 操作系统界面功能支持库




数据类型 CHOOSECOLOR, , 
    .成员 lStructSize, 整数型, , , 36
    .成员 hwndOwner, 整数型, , , 
    .成员 hInstance, 整数型, , , 
    .成员 rgbResult, 整数型, , , 
    .成员 lpCustColors, 文本型, , , 
    .成员 flags, 整数型, , , 
    .成员 lCustData, 整数型, , , 
    .成员 lpfnHook, 整数型, , , 
    .成员 lpTemplateName, 文本型, , , 

数据类型 恢复类型, , 
    .成员 锚点, 整数型, , , 
    .成员 步长, 整数型, , , 
    .成员 标点, 整数型, , , 
    .成员 内容, 字节集, , "30", 这里的设置决定了恢复的最大步长

.全局变量 颜色选择标题, 文本型, , , 
.全局变量 返回颜色有效, 逻辑型, , , 
.全局变量 返回颜色, 整数型, , , 
.全局变量 _新表格, 表格, , "100", 新的表格控件
.全局变量 _表格总数, 整数型, , , 统计表格总数
.全局变量 匿名全局变量_4430, 空白型, , , 
.全局变量 匿名全局变量_4396, 空白型, , , 
.全局变量 上卦数, 长整数型, , , 
.全局变量 下卦数, 长整数型, , , 
.全局变量 上加权数, 长整数型, , , 
.全局变量 下加权数, 长整数型, , , 
.全局变量 圆周率, 长整数型, , , 
.全局变量 匿名全局变量_4397, 空白型, , , 

.DLL命令 设置窗口是否接受拖放, 逻辑型, "shell32.dll", "DragAcceptFiles", , 设置窗口是否接受拖放
    .参数 hWnd, 整数型, , 
    .参数 isAccept, 逻辑型, 传址, true:接收拖放

.DLL命令 结束拖放, 空白型, "shell32.dll", "DragFinish", , 结束拖放
    .参数 hDrop, 整数型, , hDrop取自WM_DROPFILES消息的wParam参数

.DLL命令 取被拖放文件名, 整数型, "shell32.dll", "DragQueryFileA", , 
    .参数 hDrop, 整数型, , hDrop取自WM_DROPFILES消息的wParam参数
    .参数 index_of_file, 整数型, , 如果为 -1,DragQueryFile返回已传送文件数
    .参数 buf, 文本型, , 
    .参数 size_of_buf, 整数型, 传址, 

.DLL命令 SetWindowLong, 整数型, "", "SetWindowLongA", , 
    .参数 hwnd, 整数型, , 
    .参数 nIndex, 整数型, , 
    .参数 dwNewLong, 子程序指针, , 

.DLL命令 CallWindowProc, 整数型, "", "CallWindowProcA", , 
    .参数 lpPrevWndFunc, 整数型, , 
    .参数 hwnd, 整数型, , 
    .参数 wmsg, 整数型, , 
    .参数 wparam, 整数型, , 
    .参数 lparam, 整数型, , 

.DLL命令 外部_获得程序句柄, 整数型, "", "GetModuleHandleA", , 
    .参数 模块名, 整数型, , 

.DLL命令 ChooseColor, 整数型, "comdlg32.dll", "ChooseColorA", , 
    .参数 pChoosecolor, 未知类型0x410112A3, , 

.程序集 启动程序集, , , 

.子程序 _启动子程序, 整数型, , 本子程序在程序启动后最先执行
.局部变量 命令行容器, 文本型, , "0", 
.局部变量 欲调用功能, 子程序指针, , , 

取命令行 (命令行容器)
赋值 (欲调用功能, &记录管理器)
.如果真 (并且 (大于 (取数组成员数 (命令行容器), 0), 等于 (命令行容器 [1], “/结构管理器”)))
    赋值 (欲调用功能, &结构管理器)
.如果真结束
欲调用功能.)

.窗口程序集 结构管理器, , , 

.程序集变量 字段表, 字段信息, , "0", 
.程序集变量 备份字段表, 字段信息, , "0", 
.程序集变量 数据库文件名, 文本型, , , 如果为空表示为新建数据库
.程序集变量 是否需要转存数据, 逻辑型, , , 
.程序集变量 需要保存, 逻辑型, , , 当前数据库字段信息是否已经被修改
.程序集变量 来自程序的改变, 逻辑型, , , 当程序自己对编辑框进行修改时，置此值为真。
.子程序 结构管理器, 空白型, , 
载入 (结构管理窗口, , 真)

.子程序 _字段名编辑框_内容被改变, 空白型, , 
.局部变量 容器1, 空白型, , , 如果数据类型为空，默认为整数型。

赋值 (容器1, .现行选中项)
.如果真 (或者 (等于 (来自程序的改变, 真), 等于 (容器1, -1)))
    返回 ()
.如果真结束
.如果真 (不等于 (字段表 [相加 (容器1, 1)].名称, .内容))
    赋值 (字段表 [相加 (容器1, 1)].名称, .内容)
    容器1.置项目文本 (.内容)
    设置是否需要保存 ()
.如果真结束


.子程序 _字段类型组合框_列表项被选择, 空白型, , 
.局部变量 容器1, 空白型, , , 
.局部变量 新类型, 空白型, , , 

赋值 (容器1, .现行选中项)
.如果真 (或者 (等于 (来自程序的改变, 真), 等于 (容器1, -1), 等于 (.现行选中项, -1)))
    返回 ()
.如果真结束
赋值 (容器1, 相加 (容器1, 1))
赋值 (新类型, .取项目数值 (.现行选中项))
.如果真 (不等于 (字段表 [容器1], 类型, 新类型))
    赋值 (字段表 [容器1], 类型, 新类型)
    赋值 (.禁止, 不等于 (新类型, #文本型))
    设置是否需要保存 ()
.如果真结束


.子程序 _字段长度编辑框_内容被改变, 空白型, , 
.局部变量 容器1, 空白型, , , 
.局部变量 新长度, 空白型, , , 

赋值 (容器1, .现行选中项)
.如果真 (或者 (等于 (来自程序的改变, 真), 等于 (容器1, -1)))
    返回 ()
.如果真结束
赋值 (容器1, 相加 (容器1, 1))
.如果真 (等于 (字段表 [容器1], 类型, #文本型))
    赋值 (新长度, 到数值 (.内容))
    .如果真 (不等于 (字段表 [容器1], 最大文本长度, 新长度))
        赋值 (字段表 [容器1], 最大文本长度, 选择 (大于 (新长度, 512), 512, 选择 (小于 (新长度, 1), 1, 新长度)))
        设置是否需要保存 ()
    .如果真结束
    
.如果真结束


.子程序 _字段列表框_列表项被选择, 空白型, , 
填充字段数据 ()

.子程序 _新建按钮_被单击, 空白型, , 
.局部变量 字段, 字段信息, , , 

.如果真 (等于 (询问保存 (), 假))
    返回 ()
.如果真结束
赋值 (数据库文件名, “”)
清除数组 (字段表)
清除数组 (备份字段表)
赋值 (.类型, #整数型)
加入成员 (字段表, ) ' 加入一个空白整数字段
清空 ()
“”.加入项目 (0)
赋值 (.现行选中项, 0)
填充字段数据 ()
获取焦点 ()
设置窗口标题 ()
赋值 (是否需要转存数据, 假)
显示字段数 ()

.子程序 _保存按钮_被单击, 空白型, , 
未知函数_67174597 ()

.子程序 _关闭按钮_被单击, 空白型, , 
.如果真 (等于 (询问保存 (), 真))
    销毁 ()
.如果真结束


.子程序 _结构管理窗口_创建完毕, 空白型, , 
_新建按钮_被单击 ()

.子程序 _结构管理窗口_可否被关闭, 逻辑型, , 
返回 (询问保存 ())

.子程序 填充字段数据, 空白型, , 
.局部变量 容器1, 空白型, , , 
.局部变量 字段类型, 空白型, , , 
.局部变量 容器3, 空白型, , , 

赋值 (来自程序的改变, 真)
赋值 (容器1, .现行选中项)
.如果真 (等于 (容器1, -1))
     ' 如果没有选择字段，将编辑部分清空。
    赋值 (.内容, “”)
    赋值 (.现行选中项, -1)
    赋值 (.内容, “”)
    赋值 (.禁止, 真)
    赋值 (来自程序的改变, 假)
    返回 ()
.如果真结束
赋值 (容器1, 相加 (容器1, 1))
检查 (小于或等于 (容器1, 取数组成员数 (字段表)))
赋值 (.内容, 字段表 [容器1], 名称)
赋值 (字段类型, 字段表 [容器1], 类型)
.计次循环首 (取项目数 (), 容器3)
    .如果真 (等于 (相减 (容器3, 1).取项目数值 (), 字段类型))
        赋值 (.现行选中项, 相减 (容器3, 1))
        跳出循环 ()
    .如果真结束
    
.计次循环尾 ()
赋值 (.内容, 到文本 (字段表 [容器1], 最大文本长度))
赋值 (.禁止, 不等于 (字段类型, #文本型))
赋值 (来自程序的改变, 假)

.子程序 询问保存, 逻辑型, , 返回真继续，返回假取消。
.局部变量 选择结果, 空白型, , , 

.如果真 (等于 (需要保存, 真))
    赋值 (选择结果, 信息框 (“当前结构已经被修改，请问是否保存？”, 相加 (#取消是否钮, #询问图标), “询问”))
    .判断开始 (等于 (选择结果, #取消钮))
        返回 (假)
    .判断 (等于 (选择结果, #是钮))
        .如果真 (等于 (未知函数_67174598 (), 假))
            返回 (假)
        .如果真结束
        
    .默认
        设置是否需要保存 (假)
    .判断结束
    
.如果真结束
返回 (真)

.子程序 设置是否需要保存, 空白型, , 
.参数 是否需要保存, 逻辑型, 可空, 

.如果真 (等于 (是否为空 (是否需要保存), 真))
    赋值 (是否需要保存, 真)
.如果真结束
.如果真 (不等于 (需要保存, 是否需要保存))
    赋值 (需要保存, 是否需要保存)
     ' 设置在窗口标题栏中的标志
    .如果 (等于 (需要保存, 真))
        .如果真 (不等于 (取文本右边 (.标题, 2), “ *”))
            赋值 (.标题, 相加 (.标题, “ *”))
        .如果真结束
        
    .否则
        .如果真 (等于 (取文本右边 (.标题, 2), “ *”))
            赋值 (.标题, 取文本左边 (.标题, 相减 (取文本长度 (.标题), 2)))
        .如果真结束
        
    .如果结束
    
.如果真结束


.子程序 _删除按钮_被单击, 空白型, , 
.局部变量 容器1, 空白型, , , 
.局部变量 字段总数, 空白型, , , 
.局部变量 容器2, 空白型, , , 

赋值 (容器1, .现行选中项)
.如果真 (等于 (容器1, -1))
    返回 ()
.如果真结束
赋值 (容器2, 容器1.取项目数值 ())
赋值 (容器1, 相加 (容器1, 1))
.如果真 (不等于 (容器2, 0))
    赋值 (备份字段表 [容器2], 类型, 0) ' 设置被删除标志
.如果真结束
赋值 (字段总数, 取项目数 ())
.如果 (等于 (字段总数, 1)) ' 如果为最后一个字段，则仅清空。
    赋值 (字段表 [容器1], 名称, “”)
    赋值 (字段表 [容器1], 类型, #整数型)
    赋值 (字段表 [容器1], 最大文本长度, 0)
    0.置项目文本 (“”)
    0.置项目数值 (0)
.否则
    删除成员 (字段表, 容器1, )
    相减 (容器1, 1).删除项目 ()
    .如果真 (等于 (容器1, 字段总数))
        赋值 (容器1, 相减 (容器1, 1))
    .如果真结束
    赋值 (.现行选中项, 相减 (容器1, 1))
.如果结束
填充字段数据 ()
设置是否需要保存 ()
获取焦点 ()
显示字段数 ()

.子程序 _插入按钮_被单击, 空白型, , 在当前位置插入
插入字段 (假)

.子程序 _向后插入按钮_被单击, 空白型, , 在当前位置之后插入
插入字段 (真)

.子程序 插入字段, 空白型, , 
.参数 向后插入, 逻辑型, , 

.局部变量 容器1, 空白型, , , 
.局部变量 字段, 字段信息, , , 

赋值 (容器1, .现行选中项)
.如果 (等于 (容器1, -1))
    赋值 (容器1, 取项目数 ())
.否则
    .如果真 (等于 (向后插入, 真))
        赋值 (容器1, 相加 (容器1, 1))
    .如果真结束
    
.如果结束
赋值 (字段.类型, #整数型)
插入成员 (字段表, 相加 (容器1, 1), 字段)
容器1.插入项目 (“”, 0)
赋值 (.现行选中项, )
填充字段数据 ()
设置是否需要保存 ()
获取焦点 ()
显示字段数 ()

.子程序 _上移按钮_被单击, 空白型, , 
.局部变量 容器1, 空白型, , , 
.局部变量 字段, 字段信息, , , 
.局部变量 原字段名, 文本型, , , 
.局部变量 原项目值, 空白型, , , 

赋值 (容器1, .现行选中项)
.如果真 (小于或等于 (容器1, 0))
    返回 ()
.如果真结束
赋值 (原字段名, 容器1.取项目文本 ())
赋值 (原项目值, 容器1.取项目数值 ())
容器1.删除项目 ()
相减 (容器1, 1).插入项目 (原字段名, 原项目值)
赋值 (.现行选中项, 相减 (容器1, 1))
赋值 (容器1, 相加 (容器1, 1))
赋值 (字段, 字段表 [容器1])
删除成员 (字段表, 容器1, )
插入成员 (字段表, 相减 (容器1, 1), 字段)
填充字段数据 ()
设置是否需要保存 ()
获取焦点 ()

.子程序 _下移按钮_被单击, 空白型, , 
.局部变量 容器1, 空白型, , , 
.局部变量 字段, 字段信息, , , 
.局部变量 原字段名, 文本型, , , 
.局部变量 原项目值, 空白型, , , 

赋值 (容器1, .现行选中项)
.如果真 (或者 (等于 (容器1, -1), 大于或等于 (容器1, 相减 (取项目数 (), 1))))
    返回 ()
.如果真结束
赋值 (原字段名, 容器1.取项目文本 ())
赋值 (原项目值, 容器1.取项目数值 ())
容器1.删除项目 ()
赋值 (容器1, 相加 (容器1, 1))
容器1.插入项目 (原字段名, 原项目值)
赋值 (.现行选中项, 容器1)
赋值 (字段, 字段表 [容器1])
删除成员 (字段表, 容器1, )
插入成员 (字段表, 相加 (容器1, 1), 字段)
填充字段数据 ()
设置是否需要保存 ()
获取焦点 ()

.子程序 显示字段数, 空白型, , 
赋值 (.标题, 到文本 (取数组成员数 (字段表)))

.子程序 _字段列表框_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.判断开始 (等于 (键代码, #Del键))
    _删除按钮_被单击 ()
.判断 (等于 (键代码, #Ins键))
    _插入按钮_被单击 ()
.判断 (并且 (等于 (键代码, #上光标键), 等于 (功能键状态, #Ctrl键状态)))
    _上移按钮_被单击 ()
.判断 (并且 (等于 (键代码, #下光标键), 等于 (功能键状态, #Ctrl键状态)))
    _下移按钮_被单击 ()
.默认
    返回 (真)
.判断结束
获取焦点 ()
返回 (假)

.子程序 设置窗口标题, 空白型, , 
.如果 (等于 (数据库文件名, “”))
    赋值 (.标题, “数据库结构管理器 （新数据库）”)
.否则
    赋值 (.标题, 相加 (“数据库结构管理器 - ”, 数据库文件名))
.如果结束


.子程序 _打开按钮_被单击, 空白型, , 
.局部变量 容器1, 空白型, , , 
.局部变量 字段, 字段信息, , , 

赋值 (.类型, 0)
赋值 (.标题, “请输入欲打开的数据库文件名：”)
赋值 (.文件名, 取文本注册表项 (#数据库管理器, #用户习惯, “上次打开数据库”, ))
.如果真 (等于 (打开 (), 假))
    返回 ()
.如果真结束
写注册表项 (#数据库管理器, #用户习惯, “上次打开数据库”, .文件名)
.如果真 (等于 (询问保存 (), 假))
    返回 ()
.如果真结束
.如果真 (等于 (打开 (.文件名, , 真, #禁止读写, , “?”, ), 假))
    信息框 (相加 (“打开数据库文件”, #左引号, .文件名, #右引号, “失败！”), #错误图标, “错误”)
    返回 ()
.如果真结束
清除数组 (字段表)
清空 ()
赋值 (数据库文件名, .文件名)
.计次循环首 (取字段数 (), 容器1)
    赋值 (字段.名称, 取字段名 (容器1))
    赋值 (字段.类型, 取字段类型 (容器1))
    赋值 (字段.最大文本长度, 选择 (等于 (字段.类型, #文本型), 取字段尺寸 (容器1), 0))
    加入成员 (字段表, 字段)
    字段.加入项目 (.名称, 容器1)
.计次循环尾 ()
赋值 (是否需要转存数据, 大于 (取记录数 (), 0))
关闭 ()
复制数组 (备份字段表, 字段表)
赋值 (.现行选中项, 0)
填充字段数据 ()
设置窗口标题 ()
显示字段数 ()
获取焦点 ()

.子程序 保存, 逻辑型, , 返回真继续，返回假取消。
.局部变量 容器1, 空白型, , , 
.局部变量 文件名, 文本型, , , 

.计次循环首 (取数组成员数 (字段表), 容器1)
    .如果真 (等于 (字段表 [容器1], 名称, “”))
        信息框 (“字段名称不能为空”, #错误图标, “错误”)
        赋值 (.现行选中项, 相减 (容器1, 1))
        填充字段数据 ()
        获取焦点 ()
        返回 (假)
    .如果真结束
    
.计次循环尾 ()
.如果真 (或者 (等于 (数据库文件名, “”), 等于 (是否需要转存数据, 假))) ' 是否为新建数据库或空数据库
    .如果 (等于 (数据库文件名, “”))
        赋值 (.类型, 1)
        赋值 (.标题, “请输入欲创建的数据库文件名：”)
        赋值 (.文件名, “”)
        .如果真 (等于 (打开 (), 假))
            返回 (假)
        .如果真结束
        写注册表项 (#数据库管理器, #用户习惯, “上次打开数据库”, .文件名)
        赋值 (文件名, .文件名)
    .否则
        赋值 (文件名, 数据库文件名)
    .如果结束
    .如果真 (等于 (创建 (文件名, 字段表), 假))
        信息框 (取错误信息 (), #错误图标, “错误”)
        返回 (假)
    .如果真结束
    赋值 (数据库文件名, 文件名)
    设置窗口标题 ()
    设置是否需要保存 (假)
    返回 (真)
.如果真结束
置等待鼠标 ()
.如果 (等于 (转存记录数据 (), 真))
    设置是否需要保存 (假)
    恢复鼠标 ()
    返回 (真)
.否则
    恢复鼠标 ()
    返回 (假)
.如果结束


.子程序 改文件后缀, 文本型, , 
.参数 文件名, 文本型, , 
.参数 新后缀, 文本型, , 

.局部变量 容器1, 空白型, , , 

赋值 (容器1, 倒找文本 (文件名, “.”, , 真))
.如果 (等于 (容器1, -1))
    返回 (相加 (文件名, “.”, 新后缀))
.否则
    返回 (相加 (取文本左边 (文件名, 容器1), 新后缀))
.如果结束


.子程序 转存记录数据, 逻辑型, , 成功返回真，失败返回假。
.局部变量 临时文件名, 文本型, , , 
.局部变量 容器1, 空白型, , , 
.局部变量 容器2, 空白型, , , 
.局部变量 原类型, 空白型, , , 
.局部变量 现类型, 空白型, , , 
.局部变量 字段数, 空白型, , , 
.局部变量 字段, 字段信息, , , 
.局部变量 使用原字段名, 逻辑型, , , 
.局部变量 需重命名字段, 整数型, , "0", 
.局部变量 临时字段表, 字段信息, , "0", 
.局部变量 改名失败, 逻辑型, , , 
.局部变量 信息, 文本型, , , 
.局部变量 是否有辅助数据文件, 逻辑型, , , 是否有.edt文件
.局部变量 源辅助数据文件, 文本型, , , 
.局部变量 目的辅助数据文件, 文本型, , , 

.判断循环首 (真)
    赋值 (字段数, 取数组成员数 (备份字段表))
    .计次循环首 (字段数, 容器1)
        .如果真 (等于 (备份字段表 [容器1], 类型, 0))
            赋值 (信息, 相加 (信息, “原字段”, #左引号, 备份字段表 [容器1], 名称, #右引号, “被删除，数据库中此列数据将被去除。”, #换行符))
        .如果真结束
        
    .计次循环尾 ()
    赋值 (字段数, 取项目数 ())
    .计次循环首 (字段数, 容器1)
        赋值 (容器2, 相减 (容器1, 1).取项目数值 ())
        .如果 (不等于 (容器2, 0)) ' 是否为新增字段
            赋值 (原类型, 备份字段表 [容器2], 类型)
            赋值 (现类型, 字段表 [容器1], 类型)
            赋值 (使用原字段名, 真)
            .如果真 (不等于 (原类型, 现类型))
                .判断开始 (或者 (大于 (原类型, 6), 大于 (现类型, 6))) ' 是否不为数值型字段
                    赋值 (信息, 相加 (信息, “原字段”, #左引号, 备份字段表 [容器2], 名称, #右引号, “的类型被更改，数据库中此列数据将被重新初始化。”, #换行符))
                    赋值 (使用原字段名, 假) ' 此时没有必须使用原字段名。
                .判断 (大于 (原类型, 现类型))
                    赋值 (信息, 相加 (信息, “原字段”, #左引号, 备份字段表 [容器2], 名称, #右引号, “的数值精度被降低，数据库中此列数据将受到影响。”, #换行符))
                .默认
                    
                .判断结束
                
            .如果真结束
            .如果 (并且 (等于 (使用原字段名, 真), 不等于 (备份字段表 [容器2], 名称, 字段表 [容器1], 名称)))
                赋值 (字段.名称, 备份字段表 [容器2], 名称) ' 暂时使用原来的名称，以便于附加数据。
                赋值 (字段.类型, 现类型)
                赋值 (字段.最大文本长度, 字段表 [容器1], 最大文本长度)
                加入成员 (临时字段表, 字段)
                加入成员 (需重命名字段, 容器1) ' 记录下来以便以后重命名。
            .否则
                加入成员 (临时字段表, 字段表 [容器1])
            .如果结束
            
        .否则
            加入成员 (临时字段表, 字段表 [容器1])
        .如果结束
        .如果真 (大于或等于 (字段表 [容器1], 类型, 11)) ' 是否存在备注和字节集型字段
            赋值 (是否有辅助数据文件, 真)
        .如果真结束
        
    .计次循环尾 ()
    .如果真 (不等于 (信息, “”))
        赋值 (容器2, 信息框 (信息, 相加 (#是否钮, #询问图标, #默认按钮二), “您确定继续吗？”))
        .如果真 (不等于 (容器2, #是钮))
            返回 (假)
        .如果真结束
        
    .如果真结束
    赋值 (临时文件名, 取临时文件名 ())
    .如果真 (或者 (等于 (打开 (数据库文件名, #原数据库, , #禁止读写, , “?”, ), 假), 等于 (创建 (临时文件名, 临时字段表), 假), 等于 (打开 (临时文件名, , , #禁止读写, , , ), 假), 等于 (复制密码 (#原数据库), 假), 等于 (添加 (#原数据库, , ), 假)))
        跳出循环 ()
    .如果真结束
    .计次循环首 (取数组成员数 (需重命名字段), 容器1)
        .如果真 (等于 (改字段名 (需重命名字段 [容器1], 字段表 [需重命名字段] [容器1], 名称), 假)) ' 改回到新名称
            赋值 (改名失败, 真)
            跳出循环 ()
        .如果真结束
        
    .计次循环尾 ()
    .如果真 (等于 (改名失败, 真))
        跳出循环 ()
    .如果真结束
    全部关闭 ()
    .如果真 (等于 (是否有辅助数据文件, 真))
        赋值 (目的辅助数据文件, 改文件后缀 (数据库文件名, “edt”))
        赋值 (源辅助数据文件, 改文件后缀 (临时文件名, “edt”))
        .如果真 (等于 (文件是否存在 (源辅助数据文件), 假))
            跳出循环 ()
        .如果真结束
        删除文件 (目的辅助数据文件)
        文件更名 (源辅助数据文件, 目的辅助数据文件)
    .如果真结束
    删除文件 (数据库文件名)
    文件更名 (临时文件名, 数据库文件名)
    返回 (真)
.判断循环尾 ()
赋值 (信息, 取错误信息 ())
.如果真 (等于 (信息, “”))
    赋值 (信息, “转存记录出错”)
.如果真结束
信息框 (信息, #错误图标, “错误”)
全部关闭 ()
返回 (假)

.子程序 _新建索引按钮_被单击, 空白型, , 
.如果真 (并且 (等于 (需要保存, 真), 或者 (等于 (信息框 (“在建立索引之前必须保存当前结构，请问是否保存？”, 相加 (#是否钮, #询问图标), “询问”), #否钮), 等于 (保存 (), 假))))
    返回 ()
.如果真结束
.如果真 (或者 (等于 (数据库文件名, “”), 等于 (文件是否存在 (数据库文件名), 假)))
    信息框 (“不存在数据库文件”, #错误图标, “错误”)
    返回 ()
.如果真结束
载入 (索引创建窗口, , 真)

.子程序 _保存按钮1_被单击, 空白型, , 
赋值 (., )
载入 (真)


.窗口程序集 索引创建, , , 

.子程序 _索引创建窗口_创建完毕, 空白型, , 
.局部变量 容器1, 空白型, , , 
.局部变量 上次索引类型, 空白型, , , 
.局部变量 上次索引选项, 空白型, , , 

.计次循环首 (取数组成员数 (结构管理窗口.), 容器1)
    .如果真 (小于 (结构管理窗口. [容器1], 类型, 11))
        结构管理窗口.加入项目 (. [容器1], 名称, 容器1)
    .如果真结束
    
.计次循环尾 ()
赋值 (.现行选中项, 0)
赋值 (上次索引类型, 取数值注册表项 (#数据库管理器, #用户习惯, “上次索引类型”, 1))
赋值 (上次索引选项, 取数值注册表项 (#数据库管理器, #用户习惯, “上次索引选项”, 0))
.判断开始 (等于 (上次索引类型, #读音索引))
    赋值 (.选中, 真)
.判断 (等于 (上次索引类型, #南方读音索引))
    赋值 (.选中, 真)
.默认
    赋值 (.选中, 真)
.判断结束
.如果真 (不等于 (位与 (上次索引选项, #不区分大小写), 0))
    赋值 (.选中, 真)
.如果真结束
.如果真 (不等于 (位与 (上次索引选项, #忽略所有空格), 0))
    赋值 (.选中, 真)
.如果真结束


.子程序 _创建按钮_被单击, 空白型, , 
.局部变量 容器1, 空白型, , , 
.局部变量 索引类型, 空白型, , , 
.局部变量 索引选项, 空白型, , , 
.局部变量 索引字段名, 文本型, , "0", 

.判断开始 (等于 (.选中, 真))
    赋值 (索引类型, #读音索引)
.判断 (等于 (.选中, 真))
    赋值 (索引类型, #南方读音索引)
.默认
    赋值 (索引类型, #通常索引)
.判断结束
.如果真 (等于 (.选中, 真))
    赋值 (索引选项, #不区分大小写)
.如果真结束
.如果真 (等于 (.选中, 真))
    赋值 (索引选项, 相加 (索引选项, #忽略所有空格))
.如果真结束
写注册表项 (#数据库管理器, #用户习惯, “上次索引类型”, 索引类型)
写注册表项 (#数据库管理器, #用户习惯, “上次索引选项”, 索引选项)
.计次循环首 (取项目数 (), 容器1)
    .如果真 (等于 (相减 (容器1, 1).是否被选中 (), 真))
        加入成员 (索引字段名, 相减 (容器1, 1).取项目文本 ())
    .如果真结束
    
.计次循环尾 ()
.如果真 (等于 (取数组成员数 (索引字段名), 0))
    信息框 (“未指定索引字段”, #错误图标, “错误”)
    返回 ()
.如果真结束
赋值 (.文件名, 取文本注册表项 (#数据库管理器, #用户习惯, “上次创建索引文件”, ))
.如果真 (等于 (打开 (), 真))
    写注册表项 (#数据库管理器, #用户习惯, “上次创建索引文件”, .文件名)
    .如果 (或者 (等于 (打开 (结构管理窗口., , , #禁止读写, , “?”, ), 假), 等于 (新建索引 (.文件名, 索引类型, 索引选项, , 索引字段名), 假)))
        信息框 (取错误信息 (), #错误图标, “错误”)
        关闭 ()
    .否则
        关闭 ()
        信息框 (相加 (“创建索引文件”, #左引号, .文件名, #右引号, “成功”), #信息图标, )
        销毁 ()
    .如果结束
    
.如果真结束


.子程序 _关闭按钮_被单击, 空白型, , 
销毁 ()

.窗口程序集 记录管理器, , , 

.子程序 记录管理器, 空白型, , 
载入 (记录管理窗口, , 假)
赋值 (.文件名, 取文本注册表项 (#数据库管理器, #用户习惯, “上次打开数据库”, ))
.如果真 (等于 (打开 (), 真))
    写注册表项 (#数据库管理器, #用户习惯, “上次打开数据库”, .文件名)
    .如果 (打开 (.文件名, , , , , , )) ' 注意：此时没有同步打开此数据库的相应索引文件，因此如果欲编辑的数据库具有索引文件，需要在此处手工加入到“索引文件表”参数中。
        编辑 ()
        关闭 ()
    .否则
        信息框 (相加 (“打开数据库文件”, #左引号, .文件名, #右引号, “失败！”), #错误图标, “错误”)
    .如果结束
    
.如果真结束
销毁 ()

.子程序 _记录管理窗口_创建完毕, 空白型, , 


.窗口程序集 启动窗口程序集, , , 

.子程序 _按钮1_被单击, 空白型, , 
全部关闭 ()
赋值 (.文件名, 取文本注册表项 (#数据库管理器, #用户习惯, “上次打开数据库”, ))
.如果真 (等于 (打开 (), 真))
    写注册表项 (#数据库管理器, #用户习惯, “上次打开数据库”, .文件名)
    打开 (.文件名, , , , , “?”, )
.如果真结束
编辑 (“数据库记录编辑”, , )
全部关闭 ()

.子程序 _按钮2_被单击, 空白型, , 
载入 (结构管理窗口, , 真)

.子程序 _按钮3_被单击, 空白型, , 
.局部变量 文件号, 整数型, , , 

载入 (_启动窗口, , 真)

.子程序 _按钮21_被单击, 空白型, , 
载入 (CSV窗口, , 真)

.子程序 _按钮22_被单击, 空白型, , 
载入 (易库转CSV窗口, , 真)

.子程序 _按钮26_被单击, 空白型, , 
载入 (易数据库代码直接生成器窗口, , 真)

.子程序 _按钮23_被单击, 空白型, , 
载入 (易库转微软库窗口, , 真)

.子程序 _按钮24_被单击, 空白型, , 
载入 (易库转电子表窗口, , 真)

.子程序 _按钮25_被单击, 空白型, , 
载入 (万能转换窗口, , 真)
载入 (易语言数据库转换器, , 真)

.子程序 _按钮4_被单击, 空白型, , 
载入 (真)

.子程序 _按钮5_被单击, 空白型, , 
载入 (拆分易库窗口, , 真)

.子程序 _按钮6_被单击, 空白型, , 
载入 (库结构打印, , 真)

.子程序 __主窗口_创建完毕, 空白型, , 
置托盘图标 (#图标, “易语言数据库全操作”)


.子程序 __主窗口_可否被关闭, 逻辑型, , 
置托盘图标 ()
结束 ()

.子程序 __主窗口_托盘事件, 空白型, , 
.参数 操作类型, 整数型, , 

.如果真 (等于 (操作类型, #单击右键))
    弹出菜单 ()
.如果真结束
.如果真 (等于 (操作类型, #双击))
    .如果 (等于 (_主窗口.可视, 真))
        赋值 (_主窗口.可视, 假)
    .否则
        赋值 (_主窗口.可视, 真)
        赋值 (.位置, 0)
        
    .如果结束
    
.如果真结束


.子程序 _显示主窗口_被选择, 空白型, , 
赋值 (.可视, 真)
赋值 (.位置, 0)


.子程序 _退出_被选择, 空白型, , 
置托盘图标 ()
结束 ()

.子程序 _隐藏主窗口_被选择, 空白型, , 
赋值 (_主窗口.可视, 假)

.子程序 _通用易语言数据库维护_被选择, 空白型, , 
_按钮1_被单击 ()

.子程序 _易语言数据库结构管理_被选择, 空白型, , 
_按钮2_被单击 ()


.子程序 _易之表报表编辑器_被选择, 空白型, , 
_按钮3_被单击 ()

.子程序 _合并两个易语言数据库_被选择, 空白型, , 
_按钮4_被单击 ()

.子程序 _拆分一个易数据库为两个_被选择, 空白型, , 
_按钮5_被单击 ()

.子程序 _易语言数据库结构打印_被选择, 空白型, , 
_按钮6_被单击 ()

.子程序 _通用CSV转换为易数据库_被选择, 空白型, , 
_按钮21_被单击 ()

.子程序 _易数据库转换为CSV文件_被选择, 空白型, , 
_按钮22_被单击 ()

.子程序 _易数据库转Access数据库_被选择, 空白型, , 
_按钮23_被单击 ()

.子程序 _易数据库转换为Excel表_被选择, 空白型, , 
_按钮24_被单击 ()

.子程序 _易之表转换为Excel表_被选择, 空白型, , 
_按钮25_被单击 ()

.子程序 _易数据库代码直接生成器_被选择, 空白型, , 
_按钮26_被单击 ()

.子程序 _图片框1_被双击, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (_主窗口.可视, 假)

.窗口程序集 易之表窗口程序集, , , 

.程序集变量 现行文件名, 文本型, , , 
.程序集变量 是否被修改, 逻辑型, , , 
.程序集变量 起始列号, 整数型, , , 列号对应字段
.程序集变量 结束列号, 整数型, , , 
.程序集变量 起始行号, 整数型, , , 行号对应记录号
.程序集变量 结束行号, 整数型, , , 
.程序集变量 现行文件名1, 文本型, , , 
.程序集变量 是否被修改1, 逻辑型, , , 
.程序集变量 相等行高, 逻辑型, , , 
.程序集变量 自动延伸, 逻辑型, , , 
.程序集变量 计算之方向, 文本型, , , 默认为纵向
.程序集变量 计算之范围, 文本型, , , 默认为选区
.程序集变量 当前内码, 文本型, , , GB\GBK\BIG5
.程序集变量 当前操作类型, 文本型, , , 
.程序集变量 匿名程序集变量_4692, 空白型, , , 
.程序集变量 proc, 子程序指针, , , 
.程序集变量 oldhwndproc, 整数型, , , 
.程序集变量 拖放文件名称, 文本型, , , 
.程序集变量 拖放文件个数, 整数型, , , 
.程序集变量 i, 整数型, , , 
.程序集变量 临时目录, 文本型, , , 
.程序集变量 撤消重复数量, 整数型, , , 
.程序集变量 撤消重复位置, 整数型, , , 
.程序集变量 撤消重复数据, 字节集, , , 
.程序集变量 货币符号, 字节型, , "0", 5
.程序集变量 组合框以前内容, 文本型, , , 
.程序集变量 组合框以前行列号数, 整数型, , "4", 
.程序集变量 匿名程序集变量_4114, 空白型, , , 
.程序集变量 匿名程序集变量_4115, 空白型, , , 
.程序集变量 恢复标记, 逻辑型, , , 
.程序集变量 黑箱, 未知类型0x41011017, , , 
.程序集变量 匿名程序集变量_4116, 空白型, , , 
.子程序 __启动窗口_尺寸被改变, 空白型, , 无命令按钮时:28-48  有命令按钮时:56-76  加入文件名时:96
 ' 5.移动 (84, 相减 (取用户区宽度 (), 10), 相减 (取用户区高度 (), 124))

相减 (取栏目数 (), 1).置宽度 (65)
相减 (取栏目数 (), 2).置宽度 (90)
相减 (取栏目数 (), 3).置宽度 (90)
相减 (取栏目数 (), 4).置宽度 (105)
相减 (取栏目数 (), 5).置宽度 (105)
相减 (取栏目数 (), 6).置宽度 (100)
相减 (取栏目数 (), 7).置宽度 (100)

0.置宽度 (相减 (取用户区宽度 (), 65, 180, 210, 100, 100))
.如果真 (小于 (取用户区宽度 (), 相加 (65, 180, 210)))
    0.置宽度 (1)
.如果真结束



.子程序 _新建_被选择, 空白型, , 
.如果真 (等于 (询问保存文档 (), 假))
    25.初始尺寸 (8)
    4.置文本 (“总行数 = 25”)
    5.置文本 (“总列数 = 8”)
    赋值 (是否被修改, 假)
    赋值 (“”)
    赋值 (_启动窗口.标题, 相加 (#总标题字, “ - [未标题]”))
    赋值 (当前操作类型, “易之表”)
    1.置列宽 (8, 256)
    
.如果真结束
未知函数_67178527 ()


.子程序 _打开_被选择, 空白型, , 
.局部变量 文件号, 整数型, , , 

.如果真 (等于 (询问保存文档 (), 假))
    不要在前 ()
    赋值 (.标题, “请输入欲打开的表格文件名：”)
    赋值 (.类型, 0)
    .如果真 (等于 (打开 (), 真))
        打开并读入文件 (.文件名)
        赋值 (_启动窗口.标题, 相加 (#总标题字, “ - [”, .文件名, “]”))
    .如果真结束
    要在前 ()
.如果真结束


未知函数_67178528 ()


.子程序 打开并读入文件, 空白型, , 
.参数 文件名, 文本型, , 

.如果 (等于 (文件名.从文件读 (), 假))
    信息框 (“打开文件失败！”, #错误图标, “错误”)
.否则
    赋值 (是否被修改, 假)
    赋值 (现行文件名, 文件名)
.如果结束


.子程序 _保存_被选择, 空白型, , 
保存文档 ()

.子程序 _另存为_被选择, 空白型, , 
不要在前 ()
赋值 (.标题, “请输入欲另存到的表格文件名：”)
赋值 (.类型, 1)
.如果真 (等于 (打开 (), 真))
    保存文档 (.文件名)
    赋值 (_启动窗口.标题, 相加 (#总标题字, “ - [”, .文件名, “]”))
    
.如果真结束
要在前 ()

.子程序 _打印_被选择, 空白型, , 
.如果真 (打印设置 ())
    设置修改 ()
    .打印 ()
.如果真结束


.子程序 _退出_被选择, 空白型, , 
.如果真 (等于 (询问保存文档 (), 假))
    销毁 () ' 通过销毁主窗口退出程序
.如果真结束


.子程序 _剪切_被选择, 空白型, , 
设置修改 ()
取光标行号 ().复制 (取光标列号 (), 取选择行数 (), 取选择列数 ())
取光标行号 ().清除 (取光标列号 (), 取选择行数 (), 取选择列数 ())

.子程序 _复制_被选择, 空白型, , 
取光标行号 ().复制 (取光标列号 (), 取选择行数 (), 取选择列数 ())

.子程序 _粘贴_被选择, 空白型, , 
设置修改 ()
粘贴到光标处 ()

.子程序 __启动窗口_可否被关闭, 逻辑型, , 
返回 (取反 (询问保存文档 ()))

.子程序 询问保存文档, 逻辑型, , 返回真表示用户选择了中止
.局部变量 询问返回, 整数型, , , 

.如果真 (等于 (是否被修改, 真))
    .如果真 (是否已创建 (易之表函数))
        赋值 (易之表函数.总在最前, 假)
    .如果真结束
    赋值 (询问返回, 信息框 (“文件已经被修改，是否保存？”, 相加 (#取消是否钮, #询问图标), “询问”))
    .如果真 (是否已创建 (易之表函数))
        赋值 (易之表函数.总在最前, 真)
    .如果真结束
    
    .如果真 (等于 (询问返回, #取消钮))
        返回 (真)
    .如果真结束
    .如果真 (等于 (询问返回, #是钮))
        .如果真 (等于 (保存文档 (), 真))
            返回 (真)
        .如果真结束
        
    .如果真结束
    
.如果真结束
返回 (假)

.子程序 保存文档, 逻辑型, , 返回真表示用户选择了中止
.参数 文件名, 文本型, 可空, 

.局部变量 保存文件名, 文本型, , , 
.局部变量 文件号, 整数型, , , 

赋值 (保存文件名, 选择 (是否为空 (文件名), , 文件名))
.如果真 (等于 (保存文件名, “”))
    赋值 (.标题, “请输入欲保存到的表格文件名：”)
    赋值 (.类型, 1)
    不要在前 ()
    .如果真 (等于 (打开 (), 假))
        返回 (真)
    .如果真结束
    赋值 (保存文件名, .文件名)
    要在前 ()
.如果真结束
赋值 (是否被修改, 假)
.如果 (等于 (保存文件名.存到文件 (), 假))
    信息框 (“保存文件失败！”, #错误图标, “错误”)
.否则
    赋值 (现行文件名, 保存文件名)
.如果结束
返回 (假)

.子程序 _打印设置_被选择, 空白型, , 
.如果真 (打印设置 ())
    设置修改 ()
.如果真结束
.如果真 (是否已创建 (易之表属性窗口))
    赋值 (易之表属性窗口..内容, 到文本 (相除 (相乘 (相减 (_启动窗口..左边, 68), 2.65), 10)))
    赋值 (易之表属性窗口..内容, 到文本 (相除 (_启动窗口.取打印页宽 (.), 10)))
    赋值 (易之表属性窗口..内容, 到文本 (相除 (_启动窗口.取打印页高 (.), 10)))
    
.如果真结束



.子程序 _打印预览_被选择, 空白型, , 
打印预览 ()

.子程序 _清空_被选择, 空白型, , 
设置修改 ()
取光标行号 ().清除 (取光标列号 (), 取选择行数 (), 取选择列数 ())

.子程序 _组合_被选择, 空白型, , 
设置修改 ()
取光标行号 ().合并 (取光标列号 (), 取选择行数 (), 取选择列数 ())

.子程序 _分解_被选择, 空白型, , 
设置修改 ()
取光标行号 ().分解 (取光标列号 ())

.子程序 _前插入行_被选择, 空白型, , 
设置修改 ()
.如果 (不等于 (.数据提供者, “数据库提供者1”))
    取光标行号 ().插入行 ()
.否则
    相加 (取行数 (), 1).插入行 ()
    取行数 ().置光标 (1)
.如果结束
4.置文本 (相加 (“总行数 = ”, 到文本 (取行数 ())))


.子程序 _前插入列_被选择, 空白型, , 
.如果真 (等于 (当前操作类型, “数据库”))
    信息框 (“数据库不能插入列,请先修改数据库结构!”, 0, )
    返回 ()
.如果真结束
设置修改 ()
取光标列号 ().插入列 ()
5.置文本 (相加 (“总列数 = ”, 到文本 (取列数 ())))


.子程序 _删除行_被选择, 空白型, , 
设置修改 ()
取光标行号 ().删除行 (取选择行数 ())
4.置文本 (相加 (“总行数 = ”, 到文本 (取行数 ())))


.子程序 _删除列_被选择, 空白型, , 
.如果真 (等于 (当前操作类型, “数据库”))
    信息框 (“数据库不能删除列,请先修改数据库结构!”, 0, )
    返回 ()
.如果真结束
设置修改 ()
取光标列号 ().删除列 (取选择列数 ())
5.置文本 (相加 (“总列数 = ”, 到文本 (取列数 ())))


.子程序 _比例50_被选择, 空白型, , 
赋值 (.缩放比, 50)
赋值 (.可视, 假)

.子程序 _比例100_被选择, 空白型, , 
赋值 (.缩放比, 100)
.如果 (等于 (取操作系统类别 (), 2))
    赋值 (.可视, 真)
.否则
    赋值 (.可视, 假)
.如果结束
.如果 (等于 (取操作系统类别 (), 3))
    赋值 (.可视, 假)
.否则
    赋值 (.可视, 真)
.如果结束


.子程序 _比例200_被选择, 空白型, , 
赋值 (.缩放比, 200)
赋值 (.可视, 假)


.子程序 _页面宽度_被选择, 空白型, , 
等宽缩放 ()
赋值 (.可视, 假)


.子程序 _关于易之表_被选择, 空白型, , 
不要在前 ()
载入 (易之表关于, , 真)
要在前 ()


.子程序 _用易之表打开数据库_被选择, 空白型, , 此功能用作演示合并多个数据提供者数据的方法
关闭 ()
不要在前 ()
.如果真 (并且 (等于 (询问保存文档 (), 假), 等于 (打开 (), 真), 不等于 (.文件名, “”)))
    打开数据库 (.文件名)
    赋值 (_启动窗口.标题, 相加 (#总标题字, “ - [”, .文件名, “]”))
.如果真结束
要在前 ()

.子程序 打开数据库, 空白型, , 
.参数 欲打开数据库文件, 文本型, , 

.局部变量 字段数, 整数型, , , 
.局部变量 字段索引, 整数型, , , 
.局部变量 字段名称, 文本型, , "0", 
.局部变量 重试次数, 整数型, , , 
.局部变量 数据库密码, 文本型, , , 

.如果 (是否已加密 ())
    .计次循环首 (3, 重试次数)
        .如果真 (等于 (密码输入框 (数据库密码, 相减 (重试次数, 1)), 假))
            返回 ()
        .如果真结束
        .如果真 (打开 (数据库密码, ))
            跳出循环 ()
        .如果真结束
        
    .计次循环尾 ()
    
.否则
    打开 ()
.如果结束

.如果真 (是否已打开 ())
    置等待鼠标 ()
    
    赋值 (字段数, 取字段数 ())
    .计次循环首 (字段数, 字段索引)
        .如果真 (不等于 (取字段类型 (字段索引), #字节集型))
            加入成员 (字段名称, 取字段名 (字段索引))
        .如果真结束
        
    .计次循环尾 ()
    关闭 ()
    
    赋值 (字段数, 取数组成员数 (字段名称))
    1.初始尺寸 (字段数)
    .计次循环首 (字段数, 字段索引)
        1.置文本 (字段索引, 字段名称 [字段索引])
    .计次循环尾 ()
    1.置字体属性 (1, , 字段数, #粗体)
    1.置表头行数 ()
    赋值 (.数据库文件名, )
    赋值 (.数据库密码, 数据库密码)
    .添加 ()
    赋值 (假)
    赋值 (“”)
    未知函数_67179061 ()
    标题 ＝ “易之表 - ” ＋ 欲打开数据库文件
    恢复鼠标 ()
.如果真结束


.子程序 _表格1_内容被改变, 空白型, , 
.参数 行号, 整数型, , 
.参数 列号, 整数型, , 
.参数 行数, 整数型, , 
.参数 列数, 整数型, , 

设置修改 ()
2.置文本 (相加 (“光标行 = ”, 到文本 (行号)))
3.置文本 (相加 (“光标列 = ”, 到文本 (列号)))
.如果真 (或者 (等于 (.取类型 (), #文本), 等于 (.取类型 (), #图片文件名)))
    赋值 (.内容, .取文本 ())
.如果真结束



.子程序 _用易之表修改数据库_被选择, 空白型, , 此功能用作演示数据提供者属性用法
不要在前 ()
.如果真 (并且 (等于 (询问保存文档 (), 假), 等于 (打开 (), 真), 不等于 (.文件名, “”)))
    赋值 (.数据库文件名, .文件名)
    赋值 (.数据提供者, “数据库提供者1”) ' 请注意使用数据库提供者与使用通用提供者的不同.如不能改变表格行高等.这是由提供者的数据存储能力决定的.
    0.置文本 (“数据提供者 = 数据库提供者1”)
    打开 (.文件名, , , , , “?”, )
    置当前库 (.文件名)
    赋值 (_启动窗口.标题, 相加 (#总标题字, “ - [”, .文件名, “]”))
    
    1.初始尺寸 (1)
    全部选择 ()
    全部复制 ()
    1.粘贴 (1)
    赋值 (当前操作类型, “数据库”)
.如果真结束
要在前 ()

.子程序 _表格1_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

取光标行号 ().跳到 ()


.子程序 _表格1_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (取光标行号 ())
赋值 (相减 (相加 (取光标行号 (), 取选择行数 ()), 1))
赋值 (取光标列号 ())
赋值 (相减 (相加 (取光标列号 (), 取选择列数 ()), 1))

取光标行号 ().跳到 ()


.子程序 _退出数据库修改_被选择, 空白型, , 
全部选择 ()
全部复制 ()
1.初始尺寸 (1)
1.粘贴 (1)

赋值 (.数据提供者, “通用提供者1”)
0.置文本 (“数据提供者 = 通用提供者1”)

25.初始尺寸 (8)
4.置文本 (“总行数 = 25”)
5.置文本 (“总列数 = 8”)

赋值 (_启动窗口.标题, 相加 (#总标题字, “ - [未标题]”))
赋值 (当前操作类型, “易之表”)

.子程序 _表格1_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

弹出菜单 ()

.子程序 _置行高_被选择, 空白型, , 
.局部变量 行高, 整数型, , , 

.如果真 (并且 (输入框 (“请输入新行高（单位0.1毫米）”, “新行高”, 到文本 (取光标行号 ().取行高 ()), 行高, #输入整数), 大于 (行高, 0)))
    取光标行号 ().置行高 (取选择行数 (), 行高)
    设置修改 ()
.如果真结束


.子程序 _置列宽_被选择, 空白型, , 
.局部变量 列宽, 整数型, , , 

.如果真 (并且 (输入框 (“请输入新列宽（单位0.1毫米）”, “新列宽”, 到文本 (取光标行号 ().取列宽 ()), 列宽, #输入整数), 大于 (列宽, 0)))
    取光标列号 ().置列宽 (取选择列数 (), 列宽)
    设置修改 ()
.如果真结束


.子程序 _表格属性_被选择, 空白型, , 
载入 (易之表属性窗口, _启动窗口, 假)


.子程序 __启动窗口_创建完毕, 空白型, , 
.局部变量 参数文本, 文本型, , "0", 感谢"西风"朋友提供此段代码.

全部关闭 ()
赋值 (_启动窗口.标题, 相加 (#总标题字, “ - [未标题]”))

赋值 (_启动窗口.位置, 3)

0.置文本 (“数据提供者 = 通用提供者1”)
4.置文本 (“总行数 = 25”)
5.置文本 (“总列数 = 8”)

关联数据库 ()
取命令行 ()
.如果真 (并且 (大于 (取数组成员数 (参数文本), 0), 文件是否存在 (参数文本 [1])))
    赋值 (.数据库文件名, 参数文本 [1])
    赋值 (.数据提供者, “数据库提供者1”) ' 请注意使用数据库提供者与使用通用提供者的不同.如不能改变表格行高等.这是由提供者的数据存储能力决定的.
    0.置文本 (“数据提供者 = 数据库提供者1”)
.如果真结束
赋值 (计算之方向, “纵向”)
赋值 (计算之范围, “选区”)
赋值 (当前内码, “GB”)
赋值 (相等行高, 假)
赋值 (自动延伸, 真)
载入 (易之表函数, _启动窗口, 假)
载入 (易之表模板窗口, _启动窗口, 假)
载入 (易之表属性窗口, _启动窗口, 假)
载入 (_主窗口, , 假)

获取焦点 ()
查系统配缩放比 ()
1.置列宽 (8, 258)
_刷新表单参考线_被选择 ()

未知函数_67178526 ()
取打印设置 ()

赋值 (.宽度, 相减 (取用户区宽度 (), 134))
相减 (取栏目数 (), 1).置宽度 (65)
相减 (取栏目数 (), 2).置宽度 (90)
相减 (取栏目数 (), 3).置宽度 (90)
相减 (取栏目数 (), 4).置宽度 (105)
相减 (取栏目数 (), 5).置宽度 (105)
相减 (取栏目数 (), 6).置宽度 (100)
相减 (取栏目数 (), 7).置宽度 (100)

0.置宽度 (相减 (取用户区宽度 (), 65, 180, 210, 100, 100))
.如果真 (小于 (取用户区宽度 (), 相加 (65, 180, 210)))
    0.置宽度 (1)
.如果真结束

赋值 ()

.子程序 __启动窗口_将被销毁, 空白型, , 
写注册表项 (#易之表1, #用户习惯1, “表格线颜色”, .表格线颜色)
写注册表项 (#易之表1, #用户习惯1, “背景颜色”, .背景颜色)
写注册表项 (#易之表1, #用户习惯1, “允许选择块”, 选择 (.允许选择块, 1, 0))
写注册表项 (#易之表1, #用户习惯1, “显示标尺”, 选择 (.显示标尺, 1, 0))
写注册表项 (#易之表1, #用户习惯1, “显示空表格线”, 选择 (.显示空表格线, 1, 0))
写注册表项 (#易之表1, #用户习惯1, “禁止调整行高”, 选择 (.禁止调整行高, 1, 0))
写注册表项 (#易之表1, #用户习惯1, “禁止调整列宽”, 选择 (.禁止调整列宽, 1, 0))
写注册表项 (#易之表1, #用户习惯1, “允许粘贴扩展”, 选择 (.允许粘贴扩展, 1, 0))

.子程序 _添加数据_被选择, 空白型, , 
赋值 (.标题, “请输入欲添加进来的表格文件名：”)
赋值 (.类型, 0)
不要在前 ()
.如果真 (等于 (打开 (), 真))
    .如果 (等于 (.从文件读 (.文件名), 假)) ' 数据源2仅在此处使用
        信息框 (“打开欲添加文件失败！”, #错误图标, “错误”)
    .否则
        .添加 ()
        设置修改 ()
        1.初始尺寸 (1) ' 因为使用的是通用提供者2,所以可以初始化尺寸.在此处清除通用提供者2内的数据.
        
    .如果结束
    
.如果真结束
4.置文本 (相加 (“总行数 = ”, 到文本 (取行数 ())))
5.置文本 (相加 (“总列数 = ”, 到文本 (取列数 ())))
要在前 ()


.子程序 _文本型_被选择, 空白型, , 
设置修改 ()
取光标行号 ().置类型 (取光标列号 (), 取选择行数 (), 取选择列数 (), #文本型)
相减 (取栏目数 (), 6).置文本 (多项选择 (取光标行号 ().取类型 (取光标列号 ()), “文本型”, “图片文件名型”, “图片数据型”, “字节集数据型”))


.子程序 _图片文件名型_被选择, 空白型, , 
设置修改 ()
取光标行号 ().置类型 (取光标列号 (), 取选择行数 (), 取选择列数 (), #图片文件名)
相减 (取栏目数 (), 6).置文本 (多项选择 (取光标行号 ().取类型 (取光标列号 ()), “文本型”, “图片文件名型”, “图片数据型”, “字节集数据型”))


.子程序 _图片数据型_被选择, 空白型, , 
设置修改 ()
取光标行号 ().置类型 (取光标列号 (), 取选择行数 (), 取选择列数 (), #图片数据)
相减 (取栏目数 (), 6).置文本 (多项选择 (取光标行号 ().取类型 (取光标列号 ()), “文本型”, “图片文件名型”, “图片数据型”, “字节集数据型”))


.子程序 _文本颜色_被选择, 空白型, , 
赋值 (颜色选择标题, “请选择文本颜色:”)
不要在前 ()
载入 (易之表颜色选择窗口, , 真)
要在前 ()

.如果真 (等于 (返回颜色有效, 真))
    设置修改 ()
    取光标行号 ().置文本色 (取光标列号 (), 取选择行数 (), 取选择列数 (), 返回颜色)
.如果真结束


.子程序 _改当前单元格背景颜色_被选择, 空白型, , 
赋值 (颜色选择标题, “请选择背景颜色:”)
不要在前 ()
载入 (易之表颜色选择窗口, , 真)
要在前 ()

.如果真 (等于 (返回颜色有效, 真))
    设置修改 ()
    取光标行号 ().置背景色 (取光标列号 (), 取选择行数 (), 取选择列数 (), 返回颜色)
.如果真结束


.子程序 _字体_被选择, 空白型, , 
.局部变量 字体属性, 整数型, , , 
.局部变量 字体尺寸, 双精度小数型, , , 

不要在前 ()
.如果真 (等于 (打开 (), 真))
    .如果真 (等于 (.加粗, 真))
        赋值 (字体属性, 相加 (字体属性, #粗体))
    .如果真结束
    .如果真 (等于 (.倾斜, 真))
        赋值 (字体属性, 相加 (字体属性, #斜体))
    .如果真结束
    .如果真 (等于 (.删除线, 真))
        赋值 (字体属性, 相加 (字体属性, #删除线))
    .如果真结束
    .如果真 (等于 (.下划线, 真))
        赋值 (字体属性, 相加 (字体属性, #下划线))
    .如果真结束
    取光标行号 ().置字体属性 (取光标列号 (), 取选择行数 (), 取选择列数 (), 字体属性)
    取光标行号 ().置字体名 (取光标列号 (), 取选择行数 (), 取选择列数 (), .字体名称)
    赋值 (字体尺寸, 相除 (相乘 (.字体大小, 10), 72, 0.0394)) ' 由于字体对话框返回的字体尺寸是以1/72英寸为单位,现将其转换为0.1MM.
    取光标行号 ().置字体尺寸 (取光标列号 (), 取选择行数 (), 取选择列数 (), 字体尺寸)
    设置修改 ()
.如果真结束
要在前 ()

.子程序 _边距_被选择, 空白型, , 
.局部变量 边距, 整数型, , , 

.如果真 (输入框 (“请输入边距(单位0.1MM):”, “单元格边距设置”, “9”, 边距, #输入整数))
    设置修改 ()
    取光标行号 ().置边距 (取光标列号 (), 取选择行数 (), 取选择列数 (), 边距)
.如果真结束


.子程序 _通常型_被选择, 空白型, , 
设置修改 ()
取光标行号 ().置文本输入格式 (取光标列号 (), 取选择行数 (), 取选择列数 (), #通常型)
相减 (取栏目数 (), 7).置文本 (多项选择 (相加 (取光标行号 ().取文本输入格式 (取光标列号 ()), 1), “通常型”, “字节型”, “短整数型”, “整数型”, “长整数型”, “小数型”, “双精度小数型”, “逻辑型”, “日期时间型”))

.子程序 _字节型_被选择, 空白型, , 
设置修改 ()
取光标行号 ().置文本输入格式 (取光标列号 (), 取选择行数 (), 取选择列数 (), #字节型)
相减 (取栏目数 (), 7).置文本 (多项选择 (相加 (取光标行号 ().取文本输入格式 (取光标列号 ()), 1), “通常型”, “字节型”, “短整数型”, “整数型”, “长整数型”, “小数型”, “双精度小数型”, “逻辑型”, “日期时间型”))

.子程序 _短整数型_被选择, 空白型, , 
设置修改 ()
取光标行号 ().置文本输入格式 (取光标列号 (), 取选择行数 (), 取选择列数 (), #短整数型)
相减 (取栏目数 (), 7).置文本 (多项选择 (相加 (取光标行号 ().取文本输入格式 (取光标列号 ()), 1), “通常型”, “字节型”, “短整数型”, “整数型”, “长整数型”, “小数型”, “双精度小数型”, “逻辑型”, “日期时间型”))


.子程序 _整数型_被选择, 空白型, , 
设置修改 ()
取光标行号 ().置文本输入格式 (取光标列号 (), 取选择行数 (), 取选择列数 (), #整数型)
相减 (取栏目数 (), 7).置文本 (多项选择 (相加 (取光标行号 ().取文本输入格式 (取光标列号 ()), 1), “通常型”, “字节型”, “短整数型”, “整数型”, “长整数型”, “小数型”, “双精度小数型”, “逻辑型”, “日期时间型”))

.子程序 _长整数型_被选择, 空白型, , 
设置修改 ()
取光标行号 ().置文本输入格式 (取光标列号 (), 取选择行数 (), 取选择列数 (), #长整数型)
相减 (取栏目数 (), 7).置文本 (多项选择 (相加 (取光标行号 ().取文本输入格式 (取光标列号 ()), 1), “通常型”, “字节型”, “短整数型”, “整数型”, “长整数型”, “小数型”, “双精度小数型”, “逻辑型”, “日期时间型”))

.子程序 _小数型_被选择, 空白型, , 
设置修改 ()
取光标行号 ().置文本输入格式 (取光标列号 (), 取选择行数 (), 取选择列数 (), #小数型)
相减 (取栏目数 (), 7).置文本 (多项选择 (相加 (取光标行号 ().取文本输入格式 (取光标列号 ()), 1), “通常型”, “字节型”, “短整数型”, “整数型”, “长整数型”, “小数型”, “双精度小数型”, “逻辑型”, “日期时间型”))

.子程序 _双精度小数型_被选择, 空白型, , 
设置修改 ()
取光标行号 ().置文本输入格式 (取光标列号 (), 取选择行数 (), 取选择列数 (), #双精度小数型)
相减 (取栏目数 (), 7).置文本 (多项选择 (相加 (取光标行号 ().取文本输入格式 (取光标列号 ()), 1), “通常型”, “字节型”, “短整数型”, “整数型”, “长整数型”, “小数型”, “双精度小数型”, “逻辑型”, “日期时间型”))

.子程序 _逻辑型_被选择, 空白型, , 
设置修改 ()
取光标行号 ().置文本输入格式 (取光标列号 (), 取选择行数 (), 取选择列数 (), #逻辑型)
相减 (取栏目数 (), 7).置文本 (多项选择 (相加 (取光标行号 ().取文本输入格式 (取光标列号 ()), 1), “通常型”, “字节型”, “短整数型”, “整数型”, “长整数型”, “小数型”, “双精度小数型”, “逻辑型”, “日期时间型”))

.子程序 _日期时间型_被选择, 空白型, , 
设置修改 ()
取光标行号 ().置文本输入格式 (取光标列号 (), 取选择行数 (), 取选择列数 (), #日期时间型)
相减 (取栏目数 (), 7).置文本 (多项选择 (相加 (取光标行号 ().取文本输入格式 (取光标列号 ()), 1), “通常型”, “字节型”, “短整数型”, “整数型”, “长整数型”, “小数型”, “双精度小数型”, “逻辑型”, “日期时间型”))

.子程序 _上左_被选择, 空白型, , 
设置修改 ()
取光标行号 ().置对齐方式 (取光标列号 (), 取选择行数 (), 取选择列数 (), #上左)
相减 (取栏目数 (), 8).置文本 (多项选择 (取光标行号 ().取对齐方式 (取光标列号 ()), “上左”, “上中”, “上右”, “中左”, “中中”, “中右”, “下左”, “下中”, “下右”, “缩放图片”, “居中图片”, “缩放居中图片”, “平铺图片”, “缩放平铺图片”))

.子程序 _上中_被选择, 空白型, , 
设置修改 ()
取光标行号 ().置对齐方式 (取光标列号 (), 取选择行数 (), 取选择列数 (), #上中)
相减 (取栏目数 (), 8).置文本 (多项选择 (取光标行号 ().取对齐方式 (取光标列号 ()), “上左”, “上中”, “上右”, “中左”, “中中”, “中右”, “下左”, “下中”, “下右”, “缩放图片”, “居中图片”, “缩放居中图片”, “平铺图片”, “缩放平铺图片”))

.子程序 _上右_被选择, 空白型, , 
设置修改 ()
取光标行号 ().置对齐方式 (取光标列号 (), 取选择行数 (), 取选择列数 (), #上右)
相减 (取栏目数 (), 8).置文本 (多项选择 (取光标行号 ().取对齐方式 (取光标列号 ()), “上左”, “上中”, “上右”, “中左”, “中中”, “中右”, “下左”, “下中”, “下右”, “缩放图片”, “居中图片”, “缩放居中图片”, “平铺图片”, “缩放平铺图片”))

.子程序 _中左_被选择, 空白型, , 
设置修改 ()
取光标行号 ().置对齐方式 (取光标列号 (), 取选择行数 (), 取选择列数 (), #中左)
相减 (取栏目数 (), 8).置文本 (多项选择 (取光标行号 ().取对齐方式 (取光标列号 ()), “上左”, “上中”, “上右”, “中左”, “中中”, “中右”, “下左”, “下中”, “下右”, “缩放图片”, “居中图片”, “缩放居中图片”, “平铺图片”, “缩放平铺图片”))

.子程序 _中中_被选择, 空白型, , 
设置修改 ()
取光标行号 ().置对齐方式 (取光标列号 (), 取选择行数 (), 取选择列数 (), #中中)
相减 (取栏目数 (), 8).置文本 (多项选择 (取光标行号 ().取对齐方式 (取光标列号 ()), “上左”, “上中”, “上右”, “中左”, “中中”, “中右”, “下左”, “下中”, “下右”, “缩放图片”, “居中图片”, “缩放居中图片”, “平铺图片”, “缩放平铺图片”))

.子程序 _中右_被选择, 空白型, , 
设置修改 ()
取光标行号 ().置对齐方式 (取光标列号 (), 取选择行数 (), 取选择列数 (), #中右)
相减 (取栏目数 (), 8).置文本 (多项选择 (取光标行号 ().取对齐方式 (取光标列号 ()), “上左”, “上中”, “上右”, “中左”, “中中”, “中右”, “下左”, “下中”, “下右”, “缩放图片”, “居中图片”, “缩放居中图片”, “平铺图片”, “缩放平铺图片”))

.子程序 _下左_被选择, 空白型, , 
设置修改 ()
取光标行号 ().置对齐方式 (取光标列号 (), 取选择行数 (), 取选择列数 (), #下左)
相减 (取栏目数 (), 8).置文本 (多项选择 (取光标行号 ().取对齐方式 (取光标列号 ()), “上左”, “上中”, “上右”, “中左”, “中中”, “中右”, “下左”, “下中”, “下右”, “缩放图片”, “居中图片”, “缩放居中图片”, “平铺图片”, “缩放平铺图片”))

.子程序 _下中_被选择, 空白型, , 
设置修改 ()
取光标行号 ().置对齐方式 (取光标列号 (), 取选择行数 (), 取选择列数 (), #下中)
相减 (取栏目数 (), 8).置文本 (多项选择 (取光标行号 ().取对齐方式 (取光标列号 ()), “上左”, “上中”, “上右”, “中左”, “中中”, “中右”, “下左”, “下中”, “下右”, “缩放图片”, “居中图片”, “缩放居中图片”, “平铺图片”, “缩放平铺图片”))

.子程序 _下右_被选择, 空白型, , 
设置修改 ()
取光标行号 ().置对齐方式 (取光标列号 (), 取选择行数 (), 取选择列数 (), #下右)
相减 (取栏目数 (), 8).置文本 (多项选择 (取光标行号 ().取对齐方式 (取光标列号 ()), “上左”, “上中”, “上右”, “中左”, “中中”, “中右”, “下左”, “下中”, “下右”, “缩放图片”, “居中图片”, “缩放居中图片”, “平铺图片”, “缩放平铺图片”))

.子程序 _缩放图片_被选择, 空白型, , 
设置修改 ()
取光标行号 ().置对齐方式 (取光标列号 (), 取选择行数 (), 取选择列数 (), #缩放图片)
相减 (取栏目数 (), 8).置文本 (多项选择 (取光标行号 ().取对齐方式 (取光标列号 ()), “上左”, “上中”, “上右”, “中左”, “中中”, “中右”, “下左”, “下中”, “下右”, “缩放图片”, “居中图片”, “缩放居中图片”, “平铺图片”, “缩放平铺图片”))

.子程序 _居中图片_被选择, 空白型, , 
设置修改 ()
取光标行号 ().置对齐方式 (取光标列号 (), 取选择行数 (), 取选择列数 (), #居中图片)
相减 (取栏目数 (), 8).置文本 (多项选择 (取光标行号 ().取对齐方式 (取光标列号 ()), “上左”, “上中”, “上右”, “中左”, “中中”, “中右”, “下左”, “下中”, “下右”, “缩放图片”, “居中图片”, “缩放居中图片”, “平铺图片”, “缩放平铺图片”))

.子程序 _缩放居中图片_被选择, 空白型, , 
设置修改 ()
取光标行号 ().置对齐方式 (取光标列号 (), 取选择行数 (), 取选择列数 (), #缩放居中图片)
相减 (取栏目数 (), 8).置文本 (多项选择 (取光标行号 ().取对齐方式 (取光标列号 ()), “上左”, “上中”, “上右”, “中左”, “中中”, “中右”, “下左”, “下中”, “下右”, “缩放图片”, “居中图片”, “缩放居中图片”, “平铺图片”, “缩放平铺图片”))

.子程序 _平铺图片_被选择, 空白型, , 
设置修改 ()
取光标行号 ().置对齐方式 (取光标列号 (), 取选择行数 (), 取选择列数 (), #平铺图片)
相减 (取栏目数 (), 8).置文本 (多项选择 (取光标行号 ().取对齐方式 (取光标列号 ()), “上左”, “上中”, “上右”, “中左”, “中中”, “中右”, “下左”, “下中”, “下右”, “缩放图片”, “居中图片”, “缩放居中图片”, “平铺图片”, “缩放平铺图片”))

.子程序 _缩放平铺图片_被选择, 空白型, , 
设置修改 ()
取光标行号 ().置对齐方式 (取光标列号 (), 取选择行数 (), 取选择列数 (), #缩放平铺图片)
相减 (取栏目数 (), 8).置文本 (多项选择 (取光标行号 ().取对齐方式 (取光标列号 ()), “上左”, “上中”, “上右”, “中左”, “中中”, “中右”, “下左”, “下中”, “下右”, “缩放图片”, “居中图片”, “缩放居中图片”, “平铺图片”, “缩放平铺图片”))

.子程序 _添加外边框_被选择, 空白型, , 
设置修改 ()
取光标行号 ().加线条 (取光标列号 (), 取选择行数 (), 取选择列数 (), 相加 (#左边框, #上边框, #右边框, #下边框))

.子程序 _添加内部表格线_被选择, 空白型, , 
设置修改 ()
取光标行号 ().加线条 (取光标列号 (), 取选择行数 (), 取选择列数 (), 相加 (#左边框, #上边框, #右边框, #下边框, #水平线, #垂直线))

.子程序 _添加水平表格线_被选择, 空白型, , 
设置修改 ()
取光标行号 ().加线条 (取光标列号 (), 取选择行数 (), 取选择列数 (), #水平线)

.子程序 _添加垂直表格线_被选择, 空白型, , 
设置修改 ()
取光标行号 ().加线条 (取光标列号 (), 取选择行数 (), 取选择列数 (), #垂直线)

.子程序 _添加单斜线_被选择, 空白型, , 
设置修改 ()
取光标行号 ().删线条 (取光标列号 (), 取选择行数 (), 取选择列数 (), 相加 (#单斜线, #双斜线, #交叉线))
取光标行号 ().加线条 (取光标列号 (), 取选择行数 (), 取选择列数 (), #单斜线)

.子程序 _添加双斜线_被选择, 空白型, , 
设置修改 ()
取光标行号 ().删线条 (取光标列号 (), 取选择行数 (), 取选择列数 (), 相加 (#单斜线, #双斜线, #交叉线))
取光标行号 ().加线条 (取光标列号 (), 取选择行数 (), 取选择列数 (), #双斜线)

.子程序 _添加交叉线_被选择, 空白型, , 
设置修改 ()
取光标行号 ().删线条 (取光标列号 (), 取选择行数 (), 取选择列数 (), 相加 (#单斜线, #双斜线, #交叉线))
取光标行号 ().加线条 (取光标列号 (), 取选择行数 (), 取选择列数 (), #交叉线)

.子程序 _清除内部表格线_被选择, 空白型, , 
设置修改 ()
取光标行号 ().删线条 (取光标列号 (), 取选择行数 (), 取选择列数 (), 相加 (#水平线, #垂直线))

.子程序 _清除斜线或交叉线_被选择, 空白型, , 
设置修改 ()
取光标行号 ().删线条 (取光标列号 (), 取选择行数 (), 取选择列数 (), 相加 (#单斜线, #双斜线, #交叉线))

.子程序 _清除所有表格线_被选择, 空白型, , 
设置修改 ()
取光标行号 ().删线条 (取光标列号 (), 取选择行数 (), 取选择列数 (), 相加 (#左边框, #上边框, #右边框, #下边框, #水平线, #垂直线))

.子程序 _锁表头行数_被选择, 空白型, , 
.局部变量 表头行数, 整数型, , , 

.如果真 (输入框 (“请输入表头行数:”, “表头行数设置”, “0”, 表头行数, #输入整数))
    设置修改 ()
    表头行数.置表头行数 ()
.如果真结束


.子程序 _锁表头列数_被选择, 空白型, , 
.局部变量 表头列数, 整数型, , , 

.如果真 (输入框 (“请输入表头列数:”, “表头列数设置”, “0”, 表头列数, #输入整数))
    设置修改 ()
    表头列数.置表头列数 ()
.如果真结束


.子程序 关联数据库, 逻辑型, , 感谢"西风"朋友提供此段代码.
.如果 (是否为调试版 ())
    返回 (假)
.否则
    返回 (并且 (写注册项 (#根类, “.edb\”, “edbfile”), 写注册项 (#根类, “edbfile\”, “易数据库”), 写注册项 (#根类, “edbfile\DefaultIcon\”, 相加 (选择 (等于 (取文本右边 (取运行目录 (), 1), “\”), 取运行目录 (), 相加 (取运行目录 (), “\”)), 取执行文件名 (), “,0”)), 写注册项 (#根类, “edbfile\shell\open\command\”, 相加 (选择 (等于 (取文本右边 (取运行目录 (), 1), “\”), 取运行目录 (), 相加 (取运行目录 (), “\”)), 取执行文件名 (), “ %1”))))
.如果结束


.子程序 设置修改, 空白型, , 锚点埋在这里
设锚点 ()

.如果真 (不等于 (.数据提供者, “数据库提供者1”))
    赋值 (是否被修改, 真)
.如果真结束


.子程序 _横向计算列与列_被选择, 空白型, , 简单的横向累加计算
.局部变量 计次, 整数型, , , 
.局部变量 列号1, 整数型, , , 
.局部变量 计数, 整数型, , , 
.局部变量 行号1, 整数型, , , 
.局部变量 累计数, 小数型, , , 

赋值 (计数, 1)
赋值 (行号1, )
信息框 (起始行号, 0, )
信息框 (结束行号, 0, )
.如果真 (等于 (结束列号, 取列数 ()))
    信息框 (到文本 (结束列号) ＋ 到文本 (数据源1.取列数 ()), 0, )
    设置修改 ()
    相加 (结束列号, 1).插入列 ()
    5.置文本 (相加 (“总列数 = ”, 到文本 (取列数 ())))
    
.如果真结束

.计次循环首 (相减 (相加 (1), ), 计数)
    赋值 (计数, 1)
    赋值 (列号1, )
    赋值 (累计数, 0)
    .计次循环首 (相减 (相加 (1), ), 计次)
        .如果真 (或者 (等于 (取字段类型 (列号1), 2), 等于 (取字段类型 (列号1), 3), 等于 (取字段类型 (列号1), 4), 等于 (取字段类型 (列号1), 5), 等于 (取字段类型 (列号1), 6)))
            赋值 (累计数, 相加 (到数值 (子文本替换 (_启动窗口.取文本 (., 行号1, 列号1), “,”, “”, , , 真)), 累计数))
        .如果真结束
        信息框 (取字段类型 (列号1), 0, )
        .如果真 (等于 (取字段类型 (列号1), 0))
            赋值 (累计数, 相加 (到数值 (子文本替换 (_启动窗口.取文本 (., 行号1, 列号1), “,”, “”, , , 真)), 累计数))
        .如果真结束
        
        赋值 (列号1, 相加 (列号1, 1))
    .计次循环尾 ()
    信息框 (累计数, 0, )
    行号1.置文本 (相加 (1), 到文本 (累计数))
    替换 (, 取字段名 (结束列号 ＋ 1), wqx)
    赋值 (行号1, 相加 (行号1, 1))
.计次循环尾 ()
保存更改 ()
刷新 ()


.子程序 _纵向计算行与行_被选择, 空白型, , 简单的纵向累加计算
.局部变量 计数, 整数型, , , 
.局部变量 列号2, 整数型, , , 
.局部变量 计次, 整数型, , , 
.局部变量 行号2, 整数型, , , 
.局部变量 累计值, 小数型, , "0", 
.局部变量 累计数, 小数型, , , 

.如果真 (不等于 (.数据提供者, “数据库提供者1”))
    赋值 (计数, 1)
    赋值 (列号2, 起始列号)
    .如果真 (等于 (结束行号, 取行数 ()))
        信息框 (到文本 (结束行号) ＋ 到文本 (数据源1.取行数 ()), 0, )
        设置修改 ()
        相加 (结束行号, 1).插入行 ()
        4.置文本 (相加 (“总行数 = ”, 到文本 (取行数 ())))
        
    .如果真结束
    
    .计次循环首 (相减 (相加 (结束列号, 1), 起始列号), 计数)
        赋值 (计次, 1)
        赋值 (行号2, 起始行号)
        赋值 (0)
        .计次循环首 (相减 (相加 (结束行号, 1), 起始行号), 计次)
            信息框 (计次, 0, )
            .如果真 (或者 (等于 (取字段类型 (列号2), 2), 等于 (取字段类型 (列号2), 3), 等于 (取字段类型 (列号2), 4), 等于 (取字段类型 (列号2), 5), 等于 (取字段类型 (列号2), 6)))
                赋值 (累计数, 相加 (到数值 (子文本替换 (_启动窗口.取文本 (., 行号2, 列号2), “,”, “”, , , 真)), 累计数))
                
            .如果真结束
            信息框 (取字段类型 (列号1), 0, )
            .如果真 (等于 (取字段类型 (列号2), 0))
                赋值 (累计数, 相加 (到数值 (子文本替换 (_启动窗口.取文本 (., 行号2, 列号2), “,”, “”, , , 真)), 累计数))
            .如果真结束
            
            赋值 (行号2, 相加 (行号2, 1))
            
        .计次循环尾 ()
        相加 (结束行号, 1).置文本 (列号2, 到文本 (累计数))
        替换 (, 取字段名 (结束列号 ＋ 1), wqx)
        赋值 (列号2, 相加 (列号2, 1))
    .计次循环尾 ()
    
    保存更改 ()
    刷新 ()
    
    
    返回 ()
.如果真结束

重定义数组 (累计值, 假, 结束列号)
跳到 (起始行号)
.计次循环首 (相减 (相加 (1), ), 计数)
    赋值 (列号2, )
    赋值 (计次, 1)
    .计次循环首 (相减 (相加 (1), ), 计次)
        .如果真 (或者 (等于 (取字段类型 (列号2), 2), 等于 (取字段类型 (列号2), 3), 等于 (取字段类型 (列号2), 4), 等于 (取字段类型 (列号2), 5), 等于 (取字段类型 (列号2), 6)))
            赋值 (累计值 [列号2], 相加 (累计值 [列号2], 读 (取字段名 (列号2))))
        .如果真结束
        赋值 (列号2, 相加 (列号2, 1))
    .计次循环尾 ()
    跳过 ()
.计次循环尾 ()
.如果真 (小于 (取记录数 (), 相加 (1)))
    加空记录 ()
.如果真结束
跳到 (相加 (1))
赋值 (列号2, )
赋值 (计次, 1)
.计次循环首 (相减 (相加 (1), ), 计次)
    .如果真 (或者 (等于 (取字段类型 (列号2), 2), 等于 (取字段类型 (列号2), 3), 等于 (取字段类型 (列号2), 4), 等于 (取字段类型 (列号2), 5), 等于 (取字段类型 (列号2), 6)))
        替换 (取字段名 (列号2), 累计值 [列号2])
    .如果真结束
    赋值 (列号2, 相加 (列号2, 1))
.计次循环尾 ()
保存更改 ()
刷新 ()



.子程序 _横向纵向都计算_被选择, 空白型, , 
_横向计算列与列_被选择 ()
_纵向计算行与行_被选择 ()

.子程序 _关于累加计算特色介绍_被选择, 空白型, , 
信息框 (相加 (“累加计算只能对整数型等数值型进行计算，不能对文本型进行计算！”, #换行符, “使用方法:点击主菜单：”, #左引号, “文件”, #右引号, “→”, #左引号, “修改数据库”, #右引号, “，打开一个有数值型的数据库，就可以操作了。”, #左引号, “如果累加失败,可以点主菜单：”, #左引号, “单元格”, #右引号, “→”, #左引号, “输入方式”, #右引号, “→”, #左引号, “整数型”, #右引号, “等，将单元格中的数据转换为可以累计的属性。”), 0, “注意”)


.子程序 _工具条1_被单击, 空白型, , 
.参数 按钮索引, 整数型, , 

.如果真 (等于 (按钮索引, 1))
    _新建_被选择 ()
.如果真结束
.如果真 (等于 (按钮索引, 2))
    _打开_被选择 ()
.如果真结束
.如果真 (等于 (按钮索引, 3))
    保存文档 ()
.如果真结束
.如果真 (等于 (按钮索引, 4))
    _另存为_被选择 ()
.如果真结束
.如果真 (等于 (按钮索引, 6))
    _打印设置_被选择 ()
.如果真结束
.如果真 (等于 (按钮索引, 7))
    _打印预览_被选择 ()
.如果真结束
.如果真 (等于 (按钮索引, 8))
    _打印_被选择 ()
.如果真结束

.如果真 (等于 (按钮索引, 10))
    恢复 ()
.如果真结束
.如果真 (等于 (按钮索引, 11))
    未知函数_67178558 ()
.如果真结束
.如果真 (等于 (按钮索引, 13))
    _剪切_被选择 ()
.如果真结束
.如果真 (等于 (按钮索引, 14))
    _复制_被选择 ()
.如果真结束
.如果真 (等于 (按钮索引, 15))
    _粘贴_被选择 ()
.如果真结束
.如果真 (等于 (按钮索引, 17))
    _组合_被选择 ()
.如果真结束
.如果真 (等于 (按钮索引, 18))
    _分解_被选择 ()
.如果真结束
.如果真 (等于 (按钮索引, 19))
    判断是否已注册 ()
.如果真结束
.如果真 (等于 (按钮索引, 20))
    判断是否已注册 ()
.如果真结束
.如果真 (等于 (按钮索引, 21))
    _锁表头行数_被选择 ()
.如果真结束
.如果真 (等于 (按钮索引, 22))
    _锁表头列数_被选择 ()
.如果真结束
.如果真 (等于 (按钮索引, 23))
    _横向计算列与列_被选择 ()
.如果真结束
.如果真 (等于 (按钮索引, 24))
    _纵向计算行与行_被选择 ()
.如果真结束
.如果真 (等于 (按钮索引, 25))
    _横向纵向都计算_被选择 ()
.如果真结束
.如果真 (等于 (按钮索引, 26))
    _添加数据_被选择 ()
.如果真结束

.如果真 (等于 (按钮索引, 28))
    _表格属性_被选择 ()
.如果真结束
.如果真 (等于 (按钮索引, 29))
    查找一下 ()
.如果真结束
.如果真 (等于 (按钮索引, 30))
    弹出菜单 ()
.如果真结束
.如果真 (等于 (按钮索引, 31))
    载入 (易之表函数, _启动窗口, 假)
.如果真结束
.如果真 (等于 (按钮索引, 32))
    载入 (易之表信封窗口, , 真)
.如果真结束
.如果真 (等于 (按钮索引, 33))
    不要在前 ()
    载入 (易之表关于, , 真)
    要在前 ()
.如果真结束
.如果真 (大于或等于 (按钮索引, 34))
    载入 (易之表模板窗口, _启动窗口, 假)
    
.如果真结束


.子程序 _表格1_光标位置改变, 空白型, , 显示光标的位置
.局部变量 行号, 整数型, , , 
.局部变量 列号, 整数型, , , 

2.置文本 (相加 (“光标行 = ”, 到文本 (取光标行号 ())))
3.置文本 (相加 (“光标列 = ”, 到文本 (取光标列号 ())))
.如果真 (并且 (等于 (取选择行数 (), 1), 等于 (取选择列数 (), 1)))
    赋值 (行号, 取光标行号 ())
    赋值 (列号, 取光标列号 ())
    相减 (取栏目数 (), 3).置文本 (相加 (“行号：”, 到文本 (行号)))
    相减 (取栏目数 (), 2).置文本 (相加 (“列号：”, 到文本 (列号)))
    相减 (取栏目数 (), 4).置文本 (相加 (“行高：”, 到文本 (相除 (行号.取行高 (), 10)), “mm”))
    相减 (取栏目数 (), 5).置文本 (相加 (“列宽：”, 到文本 (相除 (列号.取列宽 (), 10)), “mm”))
    相减 (取栏目数 (), 6).置文本 (多项选择 (行号.取类型 (列号), “文本型”, “图片文件名型”, “图片数据型”, “字节集数据型”))
    相减 (取栏目数 (), 7).置文本 (多项选择 (相加 (行号.取文本输入格式 (列号), 1), “通常型”, “字节型”, “短整数型”, “整数型”, “长整数型”, “小数型”, “双精度小数型”, “逻辑型”, “日期时间型”))
    相减 (取栏目数 (), 8).置文本 (多项选择 (行号.取对齐方式 (列号), “上左”, “上中”, “上右”, “中左”, “中中”, “中右”, “下左”, “下中”, “下右”, “缩放图片”, “居中图片”, “缩放居中图片”, “平铺图片”, “缩放平铺图片”))
    .如果真 (或者 (等于 (行号.取类型 (列号), #文本), 等于 (行号.取类型 (列号), #图片文件名)))
        赋值 (.内容, 行号.取文本 (列号))
    .如果真结束
    赋值 (.颜色, 行号.取文本色 (列号))
    赋值 (.颜色, 行号.取背景色 (列号))
    .如果 (等于 (位与 (行号.取字体属性 (列号), #粗体), #粗体))
        1.加入状态 (#选中)
    .否则
        1.去除状态 (#选中)
    .如果结束
    
    .如果 (不等于 (位与 (行号.取字体属性 (列号), #斜体), 0))
        2.加入状态 (#选中)
    .否则
        2.去除状态 (#选中)
    .如果结束
    
    .如果 (不等于 (位与 (行号.取字体属性 (列号), #下划线), 0))
        3.加入状态 (#选中)
    .否则
        3.去除状态 (#选中)
    .如果结束
    赋值 (.内容, 到文本 (四舍五入 (相除 (相乘 (行号.取字体尺寸 (列号), 72, 0.0394), 10), )))
.如果真结束


.子程序 _表格1_选择行列数改变, 空白型, , 在信息条中显示当前的一些信息!
.局部变量 行号, 整数型, , , 
.局部变量 列号, 整数型, , , 
.局部变量 总宽度, 整数型, , , 
.局部变量 总高度, 整数型, , , 
.局部变量 a, 整数型, , , 

6.置文本 (相加 (“选择行列（”, 到文本 (取选择行数 ()), “，”, 到文本 (取选择列数 ()), “）”))
计算选区毫米 ()
赋值 (行号, 取光标行号 ())
赋值 (列号, 取光标列号 ())

.如果真 (或者 (等于 (行号.取类型 (列号), #文本), 等于 (行号.取类型 (列号), #图片文件名)))
    赋值 (.内容, 行号.取文本 (列号))
.如果真结束

.如果真 (或者 (大于 (取选择行数 (), 1), 大于 (取选择列数 (), 1)))
    相减 (取栏目数 (), 3).置文本 (相加 (“行数：”, 到文本 (取选择行数 ())))
    相减 (取栏目数 (), 2).置文本 (相加 (“列数：”, 到文本 (取选择列数 ())))
    
    .计次循环首 (取选择列数 (), a)
        赋值 (总宽度, 相加 (总宽度, 相减 (相加 (列号, a), 1).取列宽 ()))
    .计次循环尾 ()
    相减 (取栏目数 (), 8).置文本 (多项选择 (行号.取对齐方式 (列号), “上左”, “上中”, “上右”, “中左”, “中中”, “中右”, “下左”, “下中”, “下右”, “缩放图片”, “居中图片”, “缩放居中图片”, “平铺图片”, “缩放平铺图片”))
    相减 (取栏目数 (), 7).置文本 (多项选择 (相加 (行号.取文本输入格式 (列号), 1), “通常型”, “字节型”, “短整数型”, “整数型”, “长整数型”, “小数型”, “双精度小数型”, “逻辑型”, “日期时间型”))
    相减 (取栏目数 (), 6).置文本 (多项选择 (行号.取类型 (列号), “文本型”, “图片文件名型”, “图片数据型”, “字节集数据型”))
    相减 (取栏目数 (), 5).置文本 (相加 (“总宽：”, 到文本 (相除 (总宽度, 10)), “mm”))
    .计次循环首 (取选择行数 (), a)
        赋值 (总高度, 相加 (总高度, 相减 (相加 (行号, a), 1).取行高 ()))
    .计次循环尾 ()
    相减 (取栏目数 (), 4).置文本 (相加 (“总高：”, 到文本 (相除 (总高度, 10)), “mm”))
    赋值 (.颜色, 行号.取文本色 (列号))
    赋值 (.颜色, 行号.取背景色 (列号))
    .如果 (等于 (位与 (行号.取字体属性 (列号), #粗体), #粗体))
        1.加入状态 (#选中)
    .否则
        1.去除状态 (#选中)
    .如果结束
    
    .如果 (不等于 (位与 (行号.取字体属性 (列号), #斜体), 0))
        2.加入状态 (#选中)
    .否则
        2.去除状态 (#选中)
    .如果结束
    
    .如果 (不等于 (位与 (行号.取字体属性 (列号), #下划线), 0))
        3.加入状态 (#选中)
    .否则
        3.去除状态 (#选中)
    .如果结束
    赋值 (.内容, 到文本 (四舍五入 (相除 (相乘 (行号.取字体尺寸 (列号), 72, 0.0394), 10), )))
.如果真结束
未知函数_67178908 ()


.子程序 计算选区毫米, 空白型, , 
.局部变量 计次, 整数型, , , 
.局部变量 计数, 整数型, , , 
.局部变量 累计宽, 小数型, , , 
.局部变量 累计高, 小数型, , , 

赋值 (计数, 1)
赋值 (计次, 1)
赋值 (累计宽, 0)
赋值 (累计高, 0)
.计次循环首 (相减 (相加 (1), ), 计数)
    赋值 (累计高, 相加 (累计高, 相减 (相加 (计次, 起始行号), 1).取行高 ()))
.计次循环尾 ()
.计次循环首 (相减 (相加 (1), ), 计次)
    赋值 (累计宽, 相加 (累计宽, 相减 (相加 (计次, 起始列号), 1).取列宽 ()))
.计次循环尾 ()

.如果真 (是否已创建 (易之表属性窗口))
    赋值 (易之表属性窗口..内容, 到文本 (相除 (累计高, 10)))
    赋值 (易之表属性窗口..内容, 到文本 (相除 (累计宽, 10)))
    赋值 (易之表属性窗口..内容, 到文本 (相除 (_启动窗口.取边距 (., _启动窗口.取光标行号 (.), _启动窗口.取光标列号 (.)), 10)))
.如果真结束



.子程序 _后插入行_被选择, 空白型, , 
设置修改 ()
.如果 (不等于 (.数据提供者, “数据库提供者1”))
    相加 (取光标行号 (), 1).插入行 ()
    
.否则
    相加 (取行数 (), 2).插入行 ()
    取行数 ().置光标 (1)
.如果结束
4.置文本 (相加 (“总行数 = ”, 到文本 (取行数 ())))


.子程序 _后插入列_被选择, 空白型, , 
.如果真 (等于 (当前操作类型, “数据库”))
    信息框 (“数据库不能插入列,请先修改数据库结构!”, 0, )
    返回 ()
.如果真结束
设置修改 ()
相加 (取光标列号 (), 1).插入列 ()
5.置文本 (相加 (“总列数 = ”, 到文本 (取列数 ())))


.子程序 _计算器_被选择, 空白型, , 
运行 (“calc.exe”, 假, ) ' 本来也可以运行系统的计算器,只不过不能将计算结果直接填充到程序中,因此另外又载入一个自制的计算器,这样将计算结果存到表格内就方便多了.
载入 (易之表计算器窗口, , 假)

.子程序 _工具条2_被单击, 空白型, , 
.参数 按钮索引, 整数型, , 

.局部变量 行数1, 整数型, , , 

.如果真 (等于 (按钮索引, 1))
    赋值 (.可视, 假)
    载入 (易之表计算器窗口, _启动窗口, 假)
.如果真结束
.如果真 (等于 (按钮索引, 2))
    赋值 (.可视, 假)
    载入 (易之表万年历窗口, _启动窗口, 假)
.如果真结束

.如果真 (等于 (按钮索引, 4))
    赋值 (.可视, 假)
    .如果 (等于 (_启动窗口..显示标尺, 真))
        赋值 (_启动窗口..显示标尺, 假)
        赋值 (_启动窗口..显示空表格线, 假)
    .否则
        赋值 (_启动窗口..显示标尺, 真)
        赋值 (_启动窗口..显示空表格线, 真)
        
    .如果结束
    
.如果真结束
.如果真 (等于 (按钮索引, 5))
    赋值 (.可视, 假)
    弹出菜单 ()
.如果真结束
.如果真 (等于 (按钮索引, 6))
    赋值 (.可视, 假)
    弹出菜单 ()
.如果真结束
.如果真 (等于 (按钮索引, 7))
    赋值 (.可视, 真) ' 这次是真的哦！
.如果真结束

.如果真 (等于 (按钮索引, 9))
    赋值 (.可视, 假)
    _前插入行_被选择 ()
.如果真结束
.如果真 (等于 (按钮索引, 10))
    赋值 (.可视, 假)
    _后插入行_被选择 ()
.如果真结束
.如果真 (等于 (按钮索引, 11))
    赋值 (.可视, 假)
    _删除行_被选择 ()
.如果真结束
.如果真 (等于 (按钮索引, 12))
    赋值 (.可视, 假)
    输入框 (“请输入要添加的行数”, , , 行数1, )
    .计次循环首 (行数1, )
        _前插入行_被选择 ()
    .计次循环尾 ()
.如果真结束
.如果真 (等于 (按钮索引, 13))
    赋值 (.可视, 假)
    输入框 (“请输入要添加的行数”, , , 行数1, )
    .计次循环首 (行数1, )
        _后插入行_被选择 ()
    .计次循环尾 ()
.如果真结束
.如果真 (等于 (按钮索引, 14))
    赋值 (.可视, 假)
    _前插入列_被选择 ()
.如果真结束
.如果真 (等于 (按钮索引, 15))
    赋值 (.可视, 假)
    _后插入列_被选择 ()
.如果真结束
.如果真 (等于 (按钮索引, 16))
    赋值 (.可视, 假)
    _删除列_被选择 ()
.如果真结束
.如果真 (等于 (按钮索引, 17))
    赋值 (.可视, 假)
    使选中区等高 ()
.如果真结束
.如果真 (等于 (按钮索引, 18))
    赋值 (.可视, 假)
    使选中区等宽 ()
.如果真结束

.如果真 (等于 (按钮索引, 20))
    赋值 (.可视, 假)
    弹出菜单 ()
.如果真结束
.如果真 (等于 (按钮索引, 21))
    赋值 (.可视, 假)
    弹出菜单 ()
.如果真结束
.如果真 (等于 (按钮索引, 22))
    赋值 (.可视, 假)
    弹出菜单 ()
.如果真结束
.如果真 (等于 (按钮索引, 23))
    赋值 (.可视, 假)
    弹出菜单 ()
.如果真结束
.如果真 (等于 (按钮索引, 24))
    赋值 (.可视, 假)
    交叉底色 ()
.如果真结束
.如果真 (等于 (按钮索引, 25))
    交叉加框 ()
.如果真结束



.如果真 (等于 (按钮索引, 27))
    赋值 (.可视, 假)
    易之表窗口.标题 ＝ “27”
.如果真结束
.如果真 (等于 (按钮索引, 28))
    赋值 (.可视, 假)
    易之表窗口.标题 ＝ “28”
.如果真结束

.如果真 (等于 (按钮索引, 29))
    判断是否已注册 ()
    
.如果真结束
.如果真 (等于 (按钮索引, 30))
    判断是否已注册 ()
    
.如果真结束
.如果真 (等于 (按钮索引, 31))
    判断是否已注册 ()
    
.如果真结束


.子程序 _表格1_鼠标位置被移动, 逻辑型, , 当在表格1中移动鼠标时,就不显示弹出的排列文本形式图片框
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.可视, 假)


.子程序 _万年历_被选择, 空白型, , 输入一个万年历窗口
载入 (易之表万年历窗口, , 假)


.子程序 _改当前文本色_被选择, 空白型, , 改变选区内文本的颜色
赋值 (颜色选择标题, “请选择当前单元格文本颜色:”)
不要在前 ()
载入 (易之表颜色选择窗口, , 真)
要在前 ()
.如果真 (等于 (返回颜色有效, 真))
    设置修改 ()
    取光标行号 ().置文本色 (取光标列号 (), 取选择行数 (), 取选择列数 (), 返回颜色)
.如果真结束



.子程序 _改表格线颜色_被选择, 空白型, , 改变全部表格线的颜色!
赋值 (颜色选择标题, “请选择表格线颜色:”)
不要在前 ()
载入 (易之表颜色选择窗口, , 真)
要在前 ()

.如果真 (等于 (返回颜色有效, 真))
    设置修改 ()
    赋值 (.表格线颜色, 返回颜色)
.如果真结束


.子程序 _改全部单元格颜色_被选择, 空白型, , 将表格的背景颜色改一另一种统一的颜色
赋值 (颜色选择标题, “请选择全部单元格底色:”)
不要在前 ()
载入 (易之表颜色选择窗口, , 真)
要在前 ()

.如果真 (等于 (返回颜色有效, 真))
    设置修改 ()
    赋值 (.背景颜色, 返回颜色)
.如果真结束



.子程序 _表格1_尺寸被扩展, 空白型, , 当改变尺寸时就改变一些提示信息
4.置文本 (相加 (“总行数 = ”, 到文本 (取行数 ())))
5.置文本 (相加 (“总列数 = ”, 到文本 (取列数 ())))


.子程序 _工具条2_被下拉, 空白型, , 
.参数 按钮索引, 整数型, , 
.参数 下拉横座标, 整数型, , 
.参数 下拉纵座标, 整数型, , 

.如果真 (等于 (按钮索引, 5))
    赋值 (.可视, 假)
    弹出菜单 (下拉横座标, 下拉纵座标)
.如果真结束
.如果真 (等于 (按钮索引, 6))
    赋值 (.可视, 假)
    弹出菜单 (下拉横座标, 下拉纵座标)
.如果真结束
.如果真 (等于 (按钮索引, 7))
    弹出菜单 (对齐方式, 下拉横座标, 下拉纵座标) ' 原来是弹出下拉菜单,后来改为一个图片框显示9个排列图标
    赋值 (.可视, 真)
.如果真结束

.如果真 (等于 (按钮索引, 20))
    赋值 (.可视, 假)
    弹出菜单 (下拉横座标, 下拉纵座标)
.如果真结束
.如果真 (等于 (按钮索引, 21))
    赋值 (.可视, 假)
    弹出菜单 (下拉横座标, 下拉纵座标)
.如果真结束
.如果真 (等于 (按钮索引, 22))
    赋值 (.可视, 假)
    弹出菜单 (下拉横座标, 下拉纵座标)
.如果真结束
.如果真 (等于 (按钮索引, 23))
    赋值 (.可视, 假)
    弹出菜单 (下拉横座标, 下拉纵座标)
.如果真结束


.子程序 _表格1_被双击, 逻辑型, , 没有反应
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

信息框 (“被双击!”, 0, ) ' 没有反应

.子程序 _平均值_被选择, 空白型, , 有可能没有用,而在函数面板中统一使用了
.局部变量 计次, 整数型, , , 
.局部变量 列号1, 整数型, , , 
.局部变量 计数, 整数型, , , 
.局部变量 行号1, 整数型, , , 
.局部变量 累计数, 小数型, , , 

赋值 (计数, 1)
赋值 (行号1, )
信息框 (起始行号, 0, )
信息框 (结束行号, 0, )
.如果真 (等于 (结束列号, 取列数 ()))
    信息框 (到文本 (结束列号) ＋ 到文本 (数据源1.取列数 ()), 0, )
    设置修改 ()
    相加 (结束列号, 1).插入列 ()
    5.置文本 (相加 (“总列数 = ”, 到文本 (取列数 ())))
    
.如果真结束

.计次循环首 (相减 (相加 (1), ), 计数)
    赋值 (计数, 1)
    赋值 (列号1, )
    赋值 (累计数, 0)
    .计次循环首 (相减 (相加 (1), ), 计次)
        .如果真 (或者 (等于 (取字段类型 (列号1), 2), 等于 (取字段类型 (列号1), 3), 等于 (取字段类型 (列号1), 4), 等于 (取字段类型 (列号1), 5), 等于 (取字段类型 (列号1), 6)))
            赋值 (累计数, 相加 (到数值 (行号1.取文本 (列号1)), 累计数))
        .如果真结束
        信息框 (取字段类型 (列号1), 0, )
        .如果真 (等于 (取字段类型 (列号1), 0))
            赋值 (累计数, 相加 (到数值 (行号1.取文本 (列号1)), 累计数))
        .如果真结束
        
        赋值 (列号1, 相加 (列号1, 1))
    .计次循环尾 ()
    信息框 (累计数, 0, )
    行号1.置文本 (相加 (结束列号, 1), 到文本 (相除 (累计数, 相减 (相加 (结束列号, 1), 起始列号))))
    替换 (, 取字段名 (结束列号 ＋ 1), wqx)
    赋值 (行号1, 相加 (行号1, 1))
.计次循环尾 ()
保存更改 ()
刷新 ()



.子程序 _累计值_被选择, 空白型, , 有可能没有用
_横向计算列与列_被选择 ()

.子程序 _累计值2_被选择, 空白型, , 有可能没有用
函数计算 (“累计值”, “纵向”, )

.子程序 _平均值2_被选择, 空白型, , 有可能没有用
函数计算 (“平均值”, “纵向”, )

.子程序 _累计值3_被选择, 空白型, , 有可能没有用
_横向计算列与列_被选择 ()
_纵向计算行与行_被选择 ()


.子程序 _平均值3_被选择, 空白型, , 
_平均值_被选择 ()
函数计算 (“平均值”, “纵向”, )

.子程序 _千分位分隔符_被选择, 空白型, , 加入千分位逗号分隔符
.局部变量 分位文本, 文本型, , , 
.局部变量 计数, 整数型, , , 
.局部变量 列号2, 整数型, , , 
.局部变量 计次, 整数型, , , 
.局部变量 行号2, 整数型, , , 
.局部变量 累计值, 小数型, , "0", 
.局部变量 累计数, 小数型, , , 
.局部变量 范围行数, 整数型, , , 

编辑框1.内容 ＝ 数值到格式文本 (99999.999, , 真) 
 信息框 (到文本 (到数值 (子文本替换 (编辑框1.内容, “,”, “”, , , 真)) ＋ 1), 0, )  
取记录号 ()
(取光标行号(),取光标列号())
.如果 (不等于 (寻找文本 (取光标行号 ().取文本 (取光标列号 ()), “,”, , 真), -1))
    分位文本 ＝ 子文本替换 (数据源1.取文本 (表格1.取光标行号 (), 表格1.取光标列号 ()), “,”, “”, , , 真)
    数据源1.置文本 (表格1.取光标行号 (), 表格1.取光标列号 (), 到文本 (分位文本))
    
.否则
    分位文本 ＝ 数值到格式文本 (到数值 (子文本替换 (数据源1.取文本 (表格1.取光标行号 (), 表格1.取光标列号 ()), “,”, “”, , , 真)), , 真)
    数据源1.置文本 (表格1.取光标行号 (), 表格1.取光标列号 (), 到文本 (分位文本))
    
.如果结束

.如果真 (不等于 (.数据提供者, “数据库提供者1”))
    赋值 (1)
    赋值 (起始列号)
    .如果真 (等于 (结束行号, 取行数 ()))
        信息框 (到文本 (结束行号) ＋ 到文本 (数据源1.取行数 ()), 0, )
        设置修改 ()
        相加 (结束行号, 1).插入行 ()
        4.置文本 (相加 (“总行数 = ”, 到文本 (取行数 ())))
        
    .如果真结束
    
    .计次循环首 (相减 (相加 (结束列号, 1), 起始列号), )
        赋值 (1)
        .如果 (等于 (计算之范围, “选区”))
            赋值 (行号2, 起始行号)
            赋值 (范围行数, 相减 (相加 (_启动窗口., 1), _启动窗口.))
        .否则
            赋值 (行号2, 1)
            赋值 (范围行数, 取行数 ())
        .如果结束
        赋值 (0)
        .计次循环首 (范围行数, 计次)
            分位文本 ＝ 子文本替换 (数据源1.取文本 (表格1.取光标行号 (), 表格1.取光标列号 ()), “,”, “”, , , 真)
            数据源1.置文本 (表格1.取光标行号 (), 表格1.取光标列号 (), 到文本 (分位文本))
            .如果真 (不等于 (行号2.取文本 (列号2), “”))
                赋值 (分位文本, 数值到格式文本 (到数值 (子文本替换 (行号2.取文本 (列号2), “,”, “”, , , 真)), , 真))
                行号2.置文本 (列号2, 到文本 (分位文本))
                
            .如果真结束
            
            赋值 (相加 (1))
            
        .计次循环尾 ()
        
        赋值 (相加 (1))
    .计次循环尾 ()
    
    保存更改 ()
    刷新 ()
    
    
    返回 ()
.如果真结束



.子程序 _去除分隔符_被选择, 空白型, , 将逗号分隔符去掉
.局部变量 分位文本, 文本型, , , 
.局部变量 计数, 整数型, , , 
.局部变量 列号2, 整数型, , , 
.局部变量 计次, 整数型, , , 
.局部变量 行号2, 整数型, , , 
.局部变量 累计值, 小数型, , "0", 
.局部变量 累计数, 小数型, , , 
.局部变量 范围行数, 整数型, , , 

编辑框1.内容 ＝ 数值到格式文本 (99999.999, , 真) 
 信息框 (到文本 (到数值 (子文本替换 (编辑框1.内容, “,”, “”, , , 真)) ＋ 1), 0, )  
.如果 (不等于 (寻找文本 (取光标行号 ().取文本 (取光标列号 ()), “,”, , 真), -1))
    分位文本 ＝ 子文本替换 (数据源1.取文本 (表格1.取光标行号 (), 表格1.取光标列号 ()), “,”, “”, , , 真)
    数据源1.置文本 (表格1.取光标行号 (), 表格1.取光标列号 (), 到文本 (分位文本))
.否则
    分位文本 ＝ 数值到格式文本 (到数值 (子文本替换 (数据源1.取文本 (表格1.取光标行号 (), 表格1.取光标列号 ()), “,”, “”, , , 真)), , 真)
    数据源1.置文本 (表格1.取光标行号 (), 表格1.取光标列号 (), 到文本 (分位文本))
.如果结束

.如果真 (不等于 (.数据提供者, “数据库提供者1”))
    赋值 (1)
    赋值 (起始列号)
    .如果真 (等于 (结束行号, 取行数 ()))
        信息框 (到文本 (结束行号) ＋ 到文本 (数据源1.取行数 ()), 0, )
        设置修改 ()
        相加 (结束行号, 1).插入行 ()
        4.置文本 (相加 (“总行数 = ”, 到文本 (取行数 ())))
        
    .如果真结束
    
    .计次循环首 (相减 (相加 (结束列号, 1), 起始列号), )
        赋值 (1)
        .如果 (等于 (计算之范围, “选区”))
            赋值 (行号2, 起始行号)
            赋值 (范围行数, 相减 (相加 (_启动窗口., 1), _启动窗口.))
        .否则
            赋值 (行号2, 1)
            赋值 (范围行数, 取行数 ())
        .如果结束
        赋值 (0)
        .计次循环首 (范围行数, 计次)
            分位文本 ＝ 子文本替换 (数据源1.取文本 (表格1.取光标行号 (), 表格1.取光标列号 ()), “,”, “”, , , 真)
            数据源1.置文本 (表格1.取光标行号 (), 表格1.取光标列号 (), 到文本 (分位文本))
            .如果真 (不等于 (行号2.取文本 (列号2), “”))
                赋值 (分位文本, 子文本替换 (行号2.取文本 (列号2), “,”, “”, , , 真))
                行号2.置文本 (列号2, 到文本 (分位文本))
                
            .如果真结束
            
            赋值 (相加 (1))
            
        .计次循环尾 ()
        
        赋值 (相加 (1))
    .计次循环尾 ()
    
    保存更改 ()
    刷新 ()
    
    
    返回 ()
.如果真结束



.子程序 _函数面板_被选择, 空白型, , 载入易之表函数面板窗口
载入 (易之表函数, _启动窗口, 假)


.子程序 _表格1_行高被改变, 空白型, , 
.参数 行号, 整数型, , 

.局部变量 行高, 整数型, , , 

.如果 (等于 (位与 (28.取状态 (), #选中), #选中))
    赋值 (相等行高, 真)
    易之表窗口.标题 ＝ “真”
.否则
    赋值 (相等行高, 假)
    易之表窗口.标题 ＝ “假”
.如果结束

.如果真 (等于 (相等行高, 真))
    赋值 (行高, 行号.取行高 ())
    1.置行高 (取行数 (), 行高)
    设置修改 ()
.如果真结束
未知函数_67178990 ()


.子程序 _行高相等_被选择, 空白型, , 
赋值 (相等行高, 真)

.子程序 _自由行高_被选择, 空白型, , 
赋值 (相等行高, 假)


.子程序 使选中区等高, 空白型, , 计算选区中的所有总高度,并且除一下,以达到选区中等高的目的!
.局部变量 计次, 整数型, , , 
.局部变量 计数, 整数型, , , 
.局部变量 总行高, 整数型, , , 

赋值 (计数, 取光标行号 ())
计次 ＝ 表格1.取选择行数 ()
赋值 (计次, 1)
赋值 (总行高, 0)
 ' 先求总高,再分别设置行高
.计次循环首 (取选择行数 (), 计次)
    赋值 (总行高, 相加 (总行高, 相减 (相加 (取光标行号 (), 计次), 1).取行高 ()))
.计次循环尾 ()

取光标行号 ().置行高 (取选择行数 (), 相除 (总行高, 取选择行数 ()))



.子程序 使选中区等宽, 空白型, , 计算选区中的所有总列宽,并且除一下,以达到选区中等宽的目的!
.局部变量 计次, 整数型, , , 
.局部变量 计数, 整数型, , , 
.局部变量 总列宽, 整数型, , , 

赋值 (计数, 取光标列号 ())
计次 ＝ 表格1.取选择行数 ()
赋值 (计次, 1)
赋值 (总列宽, 0)
 ' 先求总高,再分别设置行高
.计次循环首 (取选择列数 (), 计次)
    赋值 (总列宽, 相加 (总列宽, 相减 (相加 (取光标列号 (), 计次), 1).取列宽 ()))
.计次循环尾 ()
取光标列号 ().置列宽 (取选择列数 (), 相除 (总列宽, 取选择列数 ()))


.子程序 查找一下, 空白型, , 现在只能查找第一个,下次改进可以继续查找,但要用一个新的窗口了.
.局部变量 文本, 文本型, , , 
.局部变量 计次, 整数型, , , 
.局部变量 计数, 整数型, , , 

赋值 (计次, 1)
赋值 (计数, 1)
输入框 (“请输入要查找的内容:”, , , 文本, )
.计次循环首 (取列数 (), 计数)
    .计次循环首 (取行数 (), 计次)
        .如果真 (不等于 (寻找文本 (计次.取文本 (计数), 文本, , 假), -1))
            信息框 (“找到了!”, 0, )
            计次.置光标 (计数)
            返回 ()
        .如果真结束
        
    .计次循环尾 ()
.计次循环尾 ()


.子程序 交叉底色, 空白型, , 让表格中的显示一条一条的间隙颜色,方便查找.
.局部变量 计次, 整数型, , , 

赋值 (颜色选择标题, “请选择背景颜色:”)
不要在前 ()
载入 (易之表颜色选择窗口, , 真)
要在前 ()

赋值 (计次, 1)
.如果真 (等于 (返回颜色有效, 真))
    设置修改 ()
    .计次循环首 (取行数 (), 计次)
        相减 (相乘 (计次, 2), 1).置背景色 (1, 1, 取列数 (), #白色)
        相乘 (计次, 2).置背景色 (1, 1, 取列数 (), 返回颜色)
    .计次循环尾 ()
.如果真结束


.子程序 _到GB码简体_被选择, 空白型, , 只能用于易语言3.39版本以上!
.如果真 (等于 (当前内码, “GBK”))
    转换语言 (#) ' 将表格内的所有数据都转换为GBK码.
    赋值 (当前内码, “GB”)
.如果真结束

.如果真 (等于 (当前内码, “BIG5”))
    转换语言 (#) ' 将表格内的所有数据都转换为GBK码.
    赋值 (当前内码, “GB”)
.如果真结束


.子程序 _到GBK码繁体_被选择, 空白型, , 只能用于易语言3.39版本以上!
.如果真 (等于 (当前内码, “GB”))
    转换语言 (#) ' 将表格内的所有数据都转换为GBK码.
    赋值 (当前内码, “GBK”)
.如果真结束

.如果真 (等于 (当前内码, “BIG5”))
    转换语言 (#) ' 将表格内的所有数据都转换为GBK码.
    赋值 (当前内码, “GBK”)
.如果真结束


.子程序 _到BIG5台湾码_被选择, 空白型, , 只能用于易语言3.39版本以上!
.如果真 (等于 (当前内码, “GB”))
    转换语言 (#) ' 将表格内的所有数据都转换为GBK码.
    赋值 (当前内码, “BIG5”)
.如果真结束

.如果真 (等于 (当前内码, “GBK”))
    转换语言 (#) ' 将表格内的所有数据都转换为GBK码.
    赋值 (当前内码, “BIG5”)
.如果真结束



.子程序 转换语言, 空白型, , 只能用于易语言3.39版本以上!
.参数 转换方式, 整数型, , 

.局部变量 行数, 整数型, , , 
.局部变量 列数, 整数型, , , 
.局部变量 行, 整数型, , , 
.局部变量 列, 整数型, , , 

未知函数_67177681 ()

赋值 (行数, 取行数 ())
赋值 (列数, 取列数 ())
.计次循环首 (行数, 行)
    .计次循环首 (列数, 列)
        行.置文本 (列, 未知支持库函数_0 (行.取文本 (列), 转换方式))
        信息框 (“请将草稿恢复为程序代码!”, 0, )
    .计次循环尾 ()
.计次循环尾 ()
刷新 ()

.子程序 _工具条1_被下拉, 空白型, , 
.参数 按钮索引, 整数型, , 
.参数 下拉横座标, 整数型, , 
.参数 下拉纵座标, 整数型, , 

.如果真 (等于 (按钮索引, 30))
    弹出菜单 (下拉横座标, 下拉纵座标)
.如果真结束


.子程序 _插入图片_被选择, 空白型, , 
 ' 图片文件名称可以直接以文本方式写入.
不要在前 ()
.如果真 (等于 (打开 (), 真))
    设置修改 ()
    取光标行号 ().置数据 (取光标列号 (), 读入文件 (.文件名))
.如果真结束
要在前 ()


.子程序 _置为图片类型_被选择, 空白型, , 
设置修改 ()
取光标行号 ().置类型 (取光标列号 (), 取选择行数 (), 取选择列数 (), #图片数据)


.子程序 _工具条2_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

图片框1.可视 ＝ 假 ' 本为准备一移动鼠标在工具条2上的位置就让排列的图片框消失,但这样会出错,因此取消本行.

.子程序 _工具条1_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.可视, 假) ' 当鼠标移动到工具条1上时,打开的排列组图片框就不显示.


.子程序 _图形按钮1_被单击, 空白型, , 
设置修改 ()
取光标行号 ().置对齐方式 (取光标列号 (), 取选择行数 (), 取选择列数 (), #上左)


.子程序 _图形按钮2_被单击, 空白型, , 
设置修改 ()
取光标行号 ().置对齐方式 (取光标列号 (), 取选择行数 (), 取选择列数 (), #上中)


.子程序 _图形按钮3_被单击, 空白型, , 
设置修改 ()
取光标行号 ().置对齐方式 (取光标列号 (), 取选择行数 (), 取选择列数 (), #上右)


.子程序 _图形按钮4_被单击, 空白型, , 
设置修改 ()
取光标行号 ().置对齐方式 (取光标列号 (), 取选择行数 (), 取选择列数 (), #中左)


.子程序 _图形按钮5_被单击, 空白型, , 
设置修改 ()
取光标行号 ().置对齐方式 (取光标列号 (), 取选择行数 (), 取选择列数 (), #中中)


.子程序 _图形按钮6_被单击, 空白型, , 
设置修改 ()
取光标行号 ().置对齐方式 (取光标列号 (), 取选择行数 (), 取选择列数 (), #中右)


.子程序 _图形按钮7_被单击, 空白型, , 
设置修改 ()
取光标行号 ().置对齐方式 (取光标列号 (), 取选择行数 (), 取选择列数 (), #下左)


.子程序 _图形按钮8_被单击, 空白型, , 
设置修改 ()
取光标行号 ().置对齐方式 (取光标列号 (), 取选择行数 (), 取选择列数 (), #下中)


.子程序 _图形按钮9_被单击, 空白型, , 
设置修改 ()
取光标行号 ().置对齐方式 (取光标列号 (), 取选择行数 (), 取选择列数 (), #下右)


.子程序 不要在前, 空白型, , 将总在最前的三个窗口去除总在最前的状态,以让信息与其它窗口放在前面!
.如果真 (是否已创建 (易之表函数))
    赋值 (易之表函数.总在最前, 假)
.如果真结束

.如果真 (是否已创建 (易之表万年历窗口))
    赋值 (易之表万年历窗口.总在最前, 假)
.如果真结束

.如果真 (是否已创建 (易之表计算器窗口))
    赋值 (易之表计算器窗口.总在最前, 假)
.如果真结束

.如果真 (是否已创建 (易之表属性窗口))
    赋值 (易之表属性窗口.总在最前, 假)
.如果真结束



.子程序 要在前, 空白型, , 将总在最前的三个窗口恢复总在最前的状态!
.如果真 (是否已创建 (易之表函数))
    赋值 (易之表函数.总在最前, 真)
.如果真结束

.如果真 (是否已创建 (易之表万年历窗口))
    赋值 (易之表万年历窗口.总在最前, 真)
.如果真结束

.如果真 (是否已创建 (易之表计算器窗口))
    赋值 (易之表计算器窗口.总在最前, 真)
.如果真结束

.如果真 (是否已创建 (易之表属性窗口))
    赋值 (易之表属性窗口.总在最前, 真)
.如果真结束



.子程序 __启动窗口_被激活, 空白型, , 
要在前 ()

.子程序 __启动窗口_被取消激活, 空白型, , 
不要在前 ()

.子程序 _表格1_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (等于 (键代码, #Del键))
    取光标行号 ().清除 (取光标列号 (), 取选择行数 (), 取选择列数 ()) ' 如果按下DEL删除键,就删除当前选区内的内容
.如果真结束
.如果真 (等于 (键代码, #回车键))
    .如果 (等于 (位与 (27.取状态 (), #选中), #选中))
        赋值 (自动延伸, 真) ' 自动延伸是程序集容器,根据工具条第二排的第27个按钮,确认回车时是否可以自动增加行.
    .否则
        赋值 (自动延伸, 假) ' 自动延伸是程序集容器,根据工具条第二排的第27个按钮,确认回车时是否可以自动增加行.
    .如果结束
    
    .如果真 (并且 (等于 (等于 (取光标行号 (), 取行数 ()), 真), 等于 (自动延伸, 真))) ' 光标处于最后一行时,自动加一行!
        _后插入行_被选择 ()
    .如果真结束
    相加 (取光标行号 (), 1).置光标 (取光标列号 ())
    .如果真 (大于 (取行数 (), 30))
        判断是否已注册 ()
    .如果真结束
    
.如果真结束
.如果真 (等于 (#Alt键状态))
    .判断开始 (等于 (#下光标键))
        未知函数_67178932 ()
        相减 (取栏目数 (), 4).置文本 (相加 (“行高：”, 到文本 (相除 (取光标行号 ().取行高 (), 10)), “mm”))
    .判断 (等于 (#上光标键))
        未知函数_67178933 ()
        相减 (取栏目数 (), 4).置文本 (相加 (“行高：”, 到文本 (相除 (取光标行号 ().取行高 (), 10)), “mm”))
    .判断 (等于 (#左光标键))
        未知函数_67178934 ()
        相减 (取栏目数 (), 5).置文本 (相加 (“列宽：”, 到文本 (相除 (取光标列号 ().取列宽 (), 10)), “mm”))
    .判断 (等于 (#右光标键))
        未知函数_67178935 ()
        相减 (取栏目数 (), 5).置文本 (相加 (“列宽：”, 到文本 (相除 (取光标列号 ().取列宽 (), 10)), “mm”))
    .默认
        
    .判断结束
    
.如果真结束


.子程序 _信封打印模板管理_被选择, 空白型, , 
载入 (易之表信封窗口, , 真)

.子程序 _批量打印信封_被选择, 空白型, , 
载入 (易之表批信窗口, , 真)

.子程序 _通用易语言数据库维护_被选择, 空白型, , 
全部关闭 ()
.如果真 (等于 (打开 (), 真))
    打开 (.文件名, , , , , “?”, )
.如果真结束
编辑 (“数据库记录编辑”, , )
全部关闭 ()


.子程序 _易语言数据库结构管理_被选择, 空白型, , 
载入 (结构管理窗口, , 真)


.子程序 _合并两个易语言数据库_被选择, 空白型, , 
载入 (真)


.子程序 _拆分一个易数据库为两个_被选择, 空白型, , 
载入 (拆分易库窗口, , 真)


.子程序 _易语言数据库结构打印_被选择, 空白型, , 
载入 (库结构打印, , 真)


.子程序 _通用CSV转换为易数据库_被选择, 空白型, , 
载入 (CSV窗口, , 真)


.子程序 _易数据库转换为CSV文件_被选择, 空白型, , 
载入 (易库转CSV窗口, , 真)


.子程序 _易数据库转为Excel文件_被选择, 空白型, , 
载入 (易库转电子表窗口, , 真)


.子程序 _易数据库转Access数据库_被选择, 空白型, , 
载入 (易库转微软库窗口, , 真)


.子程序 _易语言数据库格式转换器_被选择, 空白型, , 
载入 (易语言数据库转换器, , 真)


.子程序 _易数据库代码直接生成器_被选择, 空白型, , 
载入 (易数据库代码直接生成器窗口, , 真)


.子程序 交叉加框, 空白型, , 
.局部变量 计次, 整数型, , , 
.局部变量 最大列, 整数型, , , 

输入框 (“请输入右边最大列数：”, , 到文本 (取列数 ()), 最大列, )
.如果真 (小于或等于 (最大列, 0))
    最大列 ＝ 数据源1.取列数 ()
    返回 ()
.如果真结束
赋值 (计次, 1)
设置修改 ()
.计次循环首 (取行数 (), 计次)
    数据源1.置背景色 (计次 × 2 － 1, 1, 1, 数据源1.取列数 (), #白色)
    数据源1.置背景色 (计次 × 2, 1, 1, 数据源1.取列数 (), 返回颜色)
    相乘 (计次, 2).加线条 (1, 1, 最大列, 相加 (#左边框, #上边框, #右边框, #下边框))
.计次循环尾 ()
数据源1.加线条 (表格1.取光标行号 (), 表格1.取光标列号 (), 表格1.取选择行数 (), 表格1.取选择列数 (), #左边框 ＋ #上边框 ＋ #右边框 ＋ #下边框)


.子程序 _交叉加框_被选择, 空白型, , 
交叉加框 ()

.子程序 _比例80_被选择, 空白型, , 
赋值 (.缩放比, 80)
赋值 (.可视, 假)


.子程序 _比例120_被选择, 空白型, , 
赋值 (.缩放比, 120)
.如果 (并且 (等于 (取操作系统类别 (), 2), 等于 (.缩放比, 100)))
    赋值 (.可视, 真)
.否则
    赋值 (.可视, 假)
.如果结束
.如果 (并且 (等于 (取操作系统类别 (), 3), 等于 (.缩放比, 120)))
    赋值 (.可视, 真)
.否则
    赋值 (.可视, 假)
.如果结束



.子程序 _比例150_被选择, 空白型, , 
赋值 (.缩放比, 150)
赋值 (.可视, 假)


.子程序 _比例180_被选择, 空白型, , 
赋值 (.缩放比, 180)
赋值 (.可视, 假)


.子程序 _恢复_被选择, 空白型, , 
未知函数_67178475 ()


.子程序 _重复_被选择, 空白型, , 
未知函数_67178477 ()


.子程序 恢复, 空白型, , 加入恢复标记很重要，以免恢复的时候又触发了一次变化
赋值 (真)

.如果真 (大于 (., 1))
    赋值 (., 相减 (., 1))
    黑箱.从字节集读 (.内容 [黑箱].锚点)
    
.如果真结束

.如果 (等于 (., 2))
    赋值 (.禁止, 真)
.否则
    赋值 (.禁止, 假)
    
.如果结束

.如果 (等于 (., .))
    赋值 (.禁止, 真)
.否则
    赋值 (.禁止, 假)
    
.如果结束
赋值 (假)


.子程序 重复, 空白型, , 加入恢复标记很重要，以免重复的时候又触发了一次变化
赋值 (真)

.如果真 (小于 (., .))
    赋值 (., 相加 (., 1))
    黑箱.从字节集读 (.内容 [黑箱].锚点)
    
.如果真结束

.如果 (等于 (., 2))
    赋值 (.禁止, 真)
    
.否则
    赋值 (.禁止, 假)
    
.如果结束

.如果 (等于 (., .))
    赋值 (.禁止, 真)
    
.否则
    赋值 (.禁止, 假)
.如果结束


赋值 (假)


.子程序 清空黑箱, 空白型, , 在打开新文件时需要清空黑箱
.局部变量 i, 整数型, , , 

赋值 (假)
赋值 (., 2)
赋值 (., 2)
赋值 (., 1)
.计次循环首 (30, i)
    赋值 (黑箱.内容 [i], 取空白字节集 (1))
.计次循环尾 ()
赋值 (黑箱.内容 [1], 存到字节集 ())
赋值 (黑箱.内容 [2], 存到字节集 ())

赋值 (.禁止, 真)
赋值 (.禁止, 真)

.子程序 设锚点, 空白型, , 一个简单的undo算法 ,由于表格控件的事件支持太少，只能采用锚点法undo
.局部变量 i, 整数型, , , 
.局部变量 临时, 字节集, , , 

.如果真 (等于 (真))
    返回 ()
.如果真结束


赋值 (临时, 存到字节集 ())
.如果真 (等于 (黑箱.内容 [黑箱].锚点, 临时))
    返回 ()
     ' 这里过滤多余无效的事件
.如果真结束


.如果真 (小于 (., .))
    .计次循环首 (相减 (30, .), i)
        赋值 (黑箱.内容 [相加 (i, 黑箱.锚点)], 取空白字节集 (1))
    .计次循环尾 ()
    赋值 (., .)
    
.如果真结束


.如果真 (小于 (., 30))
    赋值 (., 相加 (., 1))
.如果真结束

.如果 (小于 (., 30))
    赋值 (., 相加 (., 1))
    赋值 (黑箱.内容 [黑箱].锚点, 存到字节集 ())
    
.否则
    .计次循环首 (29, i)
        赋值 (. [i], . [相加 (i, 1)])
    .计次循环尾 ()
    
    赋值 (., 30)
    赋值 (., 30)
    赋值 (., 30)
    赋值 (.)

.子程序 _透明标签1_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

161.投递信息 (2, 0)


.子程序 _刷新表单参考线_被选择, 空白型, , 
刷新显示 ()
赋值 (.左边, 相减 (.左边, 1))
赋值 (.左边, 相加 (.左边, 1))


.子程序 _透明标签1_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.顶边, 56)
.如果真 (是否已创建 (易之表属性窗口))
    .如果真 (等于 (取操作系统类别 (), 2))
        赋值 (易之表属性窗口..内容, 到文本 (相除 (相乘 (相减 (_启动窗口..左边, 68), 2.65), 10)))
    .如果真结束
    .如果真 (等于 (取操作系统类别 (), 3))
        赋值 (易之表属性窗口..内容, 到文本 (相除 (相乘 (相减 (_启动窗口..左边, 62), 2.65), 10)))
    .如果真结束
    
.如果真结束


.子程序 _关于函数面板特色介绍_被选择, 空白型, , 
信息框 (相加 (“打开函数面板，在易之表中选择一个区域，就可以对这个区域进行函数的操作！”, #换行符, “选择函数面板中的一个函数，再点应用到易之表，即可以进行函数计算。”, #换行符, “不同于Excel与易表.NET中的公式。”), 0, “注意”)

.子程序 _关于属性面板特色介绍_被选择, 空白型, , 
信息框 (相加 (“打开易之表属性面板，在这个面板中可以对选择区内的单元格进行一些属性的操作，如字体、颜色等。”, #换行符, “基本的操作是全表操作，可以对表的底色，以及边框颜色进行设置。”, #换行符, “第二栏是对选择区内进行设置，可以单独设置其字体与颜色，还可以显示选区的实际大小，用毫米表示。”, #换行符, “第三栏是对页面参考线进行操作的，页面参考线可以标出打印页的宽度，”, #换行符, “这样打印页就不会超出打印纸了，还有一个自动标记的功能，非常好用！”), 0, “注意”)


.子程序 _关于信封打印特色介绍_被选择, 空白型, , 
信息框 (相加 (“使用信封打印之面，要先打开一个信封表文件，这个文件有一些特别的规定。。”, #换行符, “第一列是对方的邮政编码，第二列与第三列是对方的邮政地址。”, #换行符, “第四列是收件方的姓名，在这里可以加入职称，第五列是收件方的电话，用于收不到时邮局可通知用的。”, #换行符, “第六列是发送方的地址。第七列是发送方的姓名、职称、电话等信息。”, #换行符, “第八列是发送方的邮政编码。完成输入后，即可以使用信封打印功能了。”, #换行符, “使用时可以保存为模板，也可以取回模板，还可以批量打印。”), 0, “注意”)


.子程序 _注册本软件_被选择, 空白型, , 
载入 (易之表注册, , 真)

.子程序 判断是否已注册, 空白型, , 


.子程序 _显示表单面板_被选择, 空白型, , 
载入 (易之表模板窗口, _启动窗口, 假)


.子程序 _关于表单面板特色介绍_被选择, 空白型, , 
信息框 (相加 (“提供一个表单面板，个别模板由老尘提供,在此感谢。”, #换行符, “操作也行简单,只要双击其中的项目就可以打开模板文件了。”, #换行符, “后面还增加添加模板,以及管理模板的功能。”, #换行符, “使用模板套打可以打印支票及单据,定位非常准确。”), 0, “注意”)

.子程序 _交替背景颜色_被选择, 空白型, , 
交叉底色 ()


.子程序 _重复填充一列_被选择, 空白型, , 
列填充 (“重复填充”, 真)

.子程序 列填充, 空白型, , 
.参数 类型, 文本型, , 重复填充/等比填充
.参数 是否首列, 逻辑型, 可空, 只运行首列=真,否则为假

.局部变量 计数, 整数型, , , 
.局部变量 列号2, 整数型, , , 
.局部变量 计次, 整数型, , , 
.局部变量 行号2, 整数型, , , 
.局部变量 累计值, 小数型, , "0", 
.局部变量 累计数, 小数型, , , 
.局部变量 差值, 双精度小数型, , , 
.局部变量 重复文本, 文本型, , , 


.如果真 (小于或等于 (相减 (相加 (结束行号, 1), 起始行号), 2)) ' 如果选中两行以下,直接返回,不用计算了
    返回 ()
.如果真结束

赋值 (计数, 1)
赋值 (列号2, 起始列号)

.计次循环首 (相减 (相加 (结束列号, 1), 起始列号), 计数)
    赋值 (计次, 1)
    赋值 (行号2, 起始行号)
    赋值 (0)
    赋值 (差值, 相减 (到数值 (_启动窗口.取文本 (., 相加 (行号2, 1), 列号2)), 到数值 (_启动窗口.取文本 (., 行号2, 列号2))))
    赋值 (重复文本, _启动窗口.取文本 (., 行号2, 列号2))
    
    .计次循环首 (相减 (相加 (结束行号, 1), 起始行号), 计次)
        .如果真 (或者 (等于 (取字段类型 (列号2), 2), 等于 (取字段类型 (列号2), 3), 等于 (取字段类型 (列号2), 4), 等于 (取字段类型 (列号2), 5), 等于 (取字段类型 (列号2), 6)))
            赋值 (累计数, 相加 (到数值 (子文本替换 (_启动窗口.取文本 (., 行号2, 列号2), “,”, “”, , , 真)), 累计数))
            
        .如果真结束
        信息框 (取字段类型 (列号1), 0, )
        .如果真 (等于 (取字段类型 (列号2), 0))
            赋值 (累计数, 相加 (到数值 (子文本替换 (_启动窗口.取文本 (., 行号2, 列号2), “,”, “”, , , 真)), 累计数))
        .如果真结束
        .如果真 (并且 (大于或等于 (计次, 1), 等于 (类型, “重复填充”)))
            行号2.置文本 (列号2, 重复文本)
        .如果真结束
        .如果真 (并且 (大于或等于 (计次, 3), 等于 (类型, “等比填充”), 不等于 (差值, 0)))
            行号2.置文本 (列号2, 到文本 (相加 (到数值 (子文本替换 (_启动窗口.取文本 (., 相减 (行号2, 1), 列号2), “,”, “”, , , 真)), 差值)))
            
        .如果真结束
        
        赋值 (行号2, 相加 (行号2, 1))
        
    .计次循环尾 ()
    .如果真 (等于 (是否首列, 真))
        返回 ()
        
    .如果真结束
    赋值 (列号2, 相加 (列号2, 1))
.计次循环尾 ()

保存更改 ()
刷新 ()

.子程序 _等比填充一列_被选择, 空白型, , 
列填充 (“等比填充”, 真)


.子程序 _等比填充选中列_被选择, 空白型, , 
列填充 (“等比填充”, 假)


.子程序 _重复填充选中列_被选择, 空白型, , 
列填充 (“重复填充”, 假)


.子程序 初次判断注册码, 空白型, , 


.子程序 _图片框3_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

161.投递信息 (2, 0)


.子程序 _标尺可视_被选择, 空白型, , 
赋值 (.可视, 真)

.子程序 _标尺不可视_被选择, 空白型, , 
赋值 (.可视, 假)


.子程序 _自定义_被选择, 空白型, , 
.局部变量 比, 整数型, , , 

输入框 (“请输入一个比例,以百分比为单位:”, “请输入”, 到文本 (.缩放比), 比, 2)
.如果真 (不等于 (比, 0))
    赋值 (.缩放比, 比)
.如果真结束

.如果 (并且 (等于 (取操作系统类别 (), 2), 等于 (比, 100)))
    赋值 (.可视, 真)
.否则
    赋值 (.可视, 假)
.如果结束
.如果 (并且 (等于 (取操作系统类别 (), 3), 等于 (比, 120)))
    赋值 (.可视, 真)
.否则
    赋值 (.可视, 假)
.如果结束



.子程序 查系统配缩放比, 空白型, , 
.如果真 (等于 (取操作系统类别 (), 2))
    赋值 (.缩放比, 100)
    赋值 (.左边, 69)
.如果真结束
.如果真 (等于 (取操作系统类别 (), 3))
    赋值 (.缩放比, 120)
    赋值 (.左边, 63)
    
.如果真结束

返回 ()
.如果 (并且 (等于 (取操作系统类别 (), 2), 等于 (.缩放比, 100)))
    赋值 (.可视, 真)
.否则
    赋值 (.可视, 假)
.如果结束
.如果 (并且 (等于 (取操作系统类别 (), 3), 等于 (.缩放比, 120)))
    赋值 (.可视, 真)
.否则
    赋值 (.可视, 假)
.如果结束


.子程序 _字节集数据型_被选择, 空白型, , 
未知函数_67178869 ()
取光标行号 ().置类型 (取光标列号 (), 取选择行数 (), 取选择列数 (), #字节集数据)
相减 (取栏目数 (), 6).置文本 (多项选择 (取光标行号 ().取类型 (取光标列号 ()), “文本型”, “图片文件名型”, “图片数据型”, “字节集数据型”))


.子程序 _图片框3_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.可视, 假)


.子程序 微调大高度, 空白型, , 
.局部变量 a, 整数型, , , 

.如果真 (不等于 (.数据提供者, “数据库提供者1”))
    .计次循环首 (取选择行数 (), a)
        相减 (相加 (取光标行号 (), a), 1).置行高 (1, 相加 (相减 (相加 (取光标行号 (), a), 1).取行高 (), 1))
    .计次循环尾 ()
.如果真结束


.子程序 微调小高度, 空白型, , 
.局部变量 a, 整数型, , , 

.如果真 (不等于 (.数据提供者, “数据库提供者1”))
    .计次循环首 (取选择行数 (), a)
        .如果真 (大于 (相减 (相加 (取光标行号 (), a), 1).取行高 (), 3))
            相减 (相加 (取光标行号 (), a), 1).置行高 (1, 相减 (相减 (相加 (取光标行号 (), a), 1).取行高 (), 1))
        .如果真结束
        
    .计次循环尾 ()
.如果真结束


.子程序 微调大宽度, 空白型, , 
.局部变量 a, 整数型, , , 

.计次循环首 (取选择列数 (), a)
    相减 (相加 (取光标列号 (), a), 1).置列宽 (1, 相加 (相减 (相加 (取光标行号 (), a), 1).取列宽 (), 1))
.计次循环尾 ()

.子程序 微调小宽度, 空白型, , 
.局部变量 a, 整数型, , , 

.计次循环首 (取选择列数 (), a)
    .如果真 (大于 (相减 (相加 (取光标列号 (), a), 1).取列宽 (), 3))
        相减 (相加 (取光标列号 (), a), 1).置列宽 (1, 相减 (相减 (相加 (取光标行号 (), a), 1).取列宽 (), 1))
    .如果真结束
    
.计次循环尾 ()

.子程序 _编辑框1_内容被改变, 空白型, , 
.局部变量 行号, 整数型, , , 
.局部变量 列号, 整数型, , , 

赋值 (行号, 取光标行号 ())
赋值 (列号, 取光标列号 ())

.如果真 (或者 (等于 (行号.取类型 (列号), #文本), 等于 (行号.取类型 (列号), #图片文件名)))
    .如果真 (不等于 (.内容, 行号.取文本 (列号)))
        行号.置文本 (列号, .内容)
        赋值 (真)
        赋值 (相加 (1))
        赋值 (相加 (1))
        赋值 (存到字节集 ())
        相加 (到文本 (), “.tmp”).存到文件 ()
        赋值 (.禁止, 假)
        赋值 (.禁止, 真)
        10.去除状态 (#禁止)
        11.加入状态 (#禁止)
        
        修改判断 ()
    .如果真结束
    
.如果真结束



.子程序 修改判断, 空白型, , 
.如果 (等于 (真))
    .如果真 (不等于 (取文本右边 (_启动窗口.标题, 1), “*”))
        赋值 (_启动窗口.标题, 相加 (_启动窗口.标题, “*”))
        相减 (取栏目数 (), 1).置文本 (“已修改”)
    .如果真结束
    
.否则
    .如果真 (等于 (取文本右边 (_启动窗口.标题, 1), “*”))
        赋值 (_启动窗口.标题, 取文本左边 (_启动窗口.标题, 相减 (取文本长度 (_启动窗口.标题), 1)))
        相减 (取栏目数 (), 1).置文本 (“未修改”)
    .如果真结束
    
.如果结束


.子程序 _表格1_列宽被改变, 空白型, , 
.参数 列号, 整数型, , 

_表格1_选择行列数改变 ()


.子程序 _人民币符号_被选择, 空白型, , 


.子程序 _组合框2_列表项被选择, 空白型, , 
.局部变量 字体尺寸, 整数型, , , 

赋值 (.内容, .取项目文本 (.现行选中项))
赋值 (字体尺寸, 相除 (相乘 (到数值 (.内容), 10), 72, 0.0394))
取光标行号 ().置字体尺寸 (取光标列号 (), 取选择行数 (), 取选择列数 (), 字体尺寸)
未知函数_67179070 ()


.子程序 _组合框2_失去焦点, 空白型, , 
.局部变量 a, 整数型, , , 

.计次循环首 (取文本长度 (.内容), a)
    .如果真 (或者 (小于 (取代码 (.内容, a), 48), 大于 (取代码 (.内容, a), 57)))
        .置字体尺寸 ( [1],  [2],  [3],  [4], 到数值 ())
        赋值 (.内容, )
        未知函数_67179076 ()
        返回 ()
    .如果真结束
    
.计次循环尾 ()


.子程序 _组合框2_编辑内容被改变, 空白型, , 
.局部变量 字体尺寸, 整数型, , , 
.局部变量 a, 整数型, , , 

.计次循环首 (取文本长度 (.内容), a)
    .如果真 (或者 (小于 (取代码 (.内容, a), 48), 大于 (取代码 (.内容, a), 57)))
        返回 ()
    .如果真结束
    
.计次循环尾 ()
未知函数_67179084 ()
赋值 (字体尺寸, 相除 (相乘 (到数值 (.内容), 10), 72, 0.0394))
取光标行号 ().置字体尺寸 (取光标列号 (), 取选择行数 (), 取选择列数 (), 字体尺寸)
未知函数_67179085 ()


.子程序 获取组合框内容, 空白型, , 
赋值 (., ..内容)
赋值 (. [1])

.子程序 _工具条3_被单击, 空白型, , 
.参数 按钮索引, 整数型, , 

.局部变量 行号, 整数型, , , 
.局部变量 列号, 整数型, , , 
.局部变量 颜色返回值, 整数型, , , 

赋值 (行号, 取光标行号 ())
赋值 (列号, 取光标列号 ())
.判断开始 (等于 (按钮索引, 1))
    .判断开始 (等于 (位与 (1.取状态 (), #选中), #选中))
        取光标行号 ().置字体属性 (取光标列号 (), 取选择行数 (), 取选择列数 (), 相加 (行号.取字体属性 (列号), #粗体))
    .默认
        取光标行号 ().置字体属性 (取光标列号 (), 取选择行数 (), 取选择列数 (), 相减 (行号.取字体属性 (列号), #粗体))
    .判断结束
    未知函数_67179116 ()
.判断 (等于 (按钮索引, 2))
    .判断开始 (等于 (位与 (2.取状态 (), #选中), #选中))
        取光标行号 ().置字体属性 (取光标列号 (), 取选择行数 (), 取选择列数 (), 相加 (行号.取字体属性 (列号), #斜体))
    .默认
        取光标行号 ().置字体属性 (取光标列号 (), 取选择行数 (), 取选择列数 (), 相减 (行号.取字体属性 (列号), #斜体))
    .判断结束
    未知函数_67179116 ()
.判断 (等于 (按钮索引, 3))
    .判断开始 (等于 (位与 (3.取状态 (), #选中), #选中))
        取光标行号 ().置字体属性 (取光标列号 (), 取选择行数 (), 取选择列数 (), 相加 (行号.取字体属性 (列号), #下划线))
    .默认
        取光标行号 ().置字体属性 (取光标列号 (), 取选择行数 (), 取选择列数 (), 相减 (行号.取字体属性 (列号), #下划线))
    .判断结束
    未知函数_67179116 ()
.判断 (等于 (按钮索引, 4))
    赋值 (颜色返回值, 未知函数_67179117 ())
    .如果真 (不等于 (颜色返回值, -1))
        赋值 (.颜色, 颜色返回值)
        取光标行号 ().置背景色 (取光标列号 (), 取选择行数 (), 取选择列数 (), .颜色)
    .如果真结束
    
.判断 (等于 (按钮索引, 5))
    赋值 (颜色返回值, 未知函数_67179117 ())
    .如果真 (不等于 (颜色返回值, -1))
        赋值 (.颜色, 颜色返回值)
        取光标行号 ().置文本色 (取光标列号 (), 取选择行数 (), 取选择列数 (), .颜色)
    .如果真结束
    
    
.判断 (等于 (10)) ' 左对齐
    .判断开始 (小于 (行号.取对齐方式 (列号), 4))
        行号.置对齐方式 (列号, 取选择行数 (), 取选择列数 (), #上左)
    .判断 (并且 (大于 (行号.取对齐方式 (列号), 3), 小于 (行号.取对齐方式 (列号), 7)))
        行号.置对齐方式 (列号, 取选择行数 (), 取选择列数 (), #中左)
    .判断 (并且 (大于 (行号.取对齐方式 (列号), 6), 小于 (行号.取对齐方式 (列号), 10)))
        行号.置对齐方式 (列号, 取选择行数 (), 取选择列数 (), #下左)
    .默认
        
    .判断结束
    相减 (取栏目数 (), 8).置文本 (多项选择 (取光标行号 ().取对齐方式 (取光标列号 ()), “上左”, “上中”, “上右”, “中左”, “中中”, “中右”, “下左”, “下中”, “下右”, “缩放图片”, “居中图片”, “缩放居中图片”, “平铺图片”, “缩放平铺图片”))
    未知函数_67179116 ()
.判断 (等于 (11))
    .判断开始 (小于 (行号.取对齐方式 (列号), 4))
        行号.置对齐方式 (列号, 取选择行数 (), 取选择列数 (), #上中)
    .判断 (并且 (大于 (行号.取对齐方式 (列号), 3), 小于 (行号.取对齐方式 (列号), 7)))
        行号.置对齐方式 (列号, 取选择行数 (), 取选择列数 (), #中中)
    .判断 (并且 (大于 (行号.取对齐方式 (列号), 6), 小于 (行号.取对齐方式 (列号), 10)))
        行号.置对齐方式 (列号, 取选择行数 (), 取选择列数 (), #下中)
    .默认
        
    .判断结束
    相减 (取栏目数 (), 8).置文本 (多项选择 (取光标行号 ().取对齐方式 (取光标列号 ()), “上左”, “上中”, “上右”, “中左”, “中中”, “中右”, “下左”, “下中”, “下右”, “缩放图片”, “居中图片”, “缩放居中图片”, “平铺图片”, “缩放平铺图片”))
    未知函数_67179116 ()
.判断 (等于 (12))
    .判断开始 (小于 (行号.取对齐方式 (列号), 4))
        行号.置对齐方式 (列号, 取选择行数 (), 取选择列数 (), #上右)
    .判断 (并且 (大于 (行号.取对齐方式 (列号), 3), 小于 (行号.取对齐方式 (列号), 7)))
        行号.置对齐方式 (列号, 取选择行数 (), 取选择列数 (), #中右)
    .判断 (并且 (大于 (行号.取对齐方式 (列号), 6), 小于 (行号.取对齐方式 (列号), 10)))
        行号.置对齐方式 (列号, 取选择行数 (), 取选择列数 (), #下右)
    .默认
        
    .判断结束
    相减 (取栏目数 (), 8).置文本 (多项选择 (取光标行号 ().取对齐方式 (取光标列号 ()), “上左”, “上中”, “上右”, “中左”, “中中”, “中右”, “下左”, “下中”, “下右”, “缩放图片”, “居中图片”, “缩放居中图片”, “平铺图片”, “缩放平铺图片”))
    未知函数_67179116 ()
.判断 (等于 (13))
    .判断开始 (或者 (等于 (行号.取对齐方式 (列号), 1), 等于 (行号.取对齐方式 (列号), 4), 等于 (行号.取对齐方式 (列号), 7)))
        行号.置对齐方式 (列号, 取选择行数 (), 取选择列数 (), #上左)
    .判断 (或者 (等于 (行号.取对齐方式 (列号), 2), 等于 (行号.取对齐方式 (列号), 5), 等于 (行号.取对齐方式 (列号), 8)))
        行号.置对齐方式 (列号, 取选择行数 (), 取选择列数 (), #上中)
    .判断 (或者 (等于 (行号.取对齐方式 (列号), 3), 等于 (行号.取对齐方式 (列号), 6), 等于 (行号.取对齐方式 (列号), 9)))
        行号.置对齐方式 (列号, 取选择行数 (), 取选择列数 (), #上右)
    .默认
        
    .判断结束
    相减 (取栏目数 (), 8).置文本 (多项选择 (取光标行号 ().取对齐方式 (取光标列号 ()), “上左”, “上中”, “上右”, “中左”, “中中”, “中右”, “下左”, “下中”, “下右”, “缩放图片”, “居中图片”, “缩放居中图片”, “平铺图片”, “缩放平铺图片”))
    未知函数_67179116 ()
.判断 (等于 (14))
    .判断开始 (或者 (等于 (行号.取对齐方式 (列号), 1), 等于 (行号.取对齐方式 (列号), 4), 等于 (行号.取对齐方式 (列号), 7)))
        行号.置对齐方式 (列号, 取选择行数 (), 取选择列数 (), #中左)
    .判断 (或者 (等于 (行号.取对齐方式 (列号), 2), 等于 (行号.取对齐方式 (列号), 5), 等于 (行号.取对齐方式 (列号), 8)))
        行号.置对齐方式 (列号, 取选择行数 (), 取选择列数 (), #中中)
    .判断 (或者 (等于 (行号.取对齐方式 (列号), 3), 等于 (行号.取对齐方式 (列号), 6), 等于 (行号.取对齐方式 (列号), 9)))
        行号.置对齐方式 (列号, 取选择行数 (), 取选择列数 (), #中右)
    .默认
        
    .判断结束
    相减 (取栏目数 (), 8).置文本 (多项选择 (取光标行号 ().取对齐方式 (取光标列号 ()), “上左”, “上中”, “上右”, “中左”, “中中”, “中右”, “下左”, “下中”, “下右”, “缩放图片”, “居中图片”, “缩放居中图片”, “平铺图片”, “缩放平铺图片”))
    未知函数_67179116 ()
.判断 (等于 (15))
    .判断开始 (或者 (等于 (行号.取对齐方式 (列号), 1), 等于 (行号.取对齐方式 (列号), 4), 等于 (行号.取对齐方式 (列号), 7)))
        行号.置对齐方式 (列号, 取选择行数 (), 取选择列数 (), #下左)
    .判断 (或者 (等于 (行号.取对齐方式 (列号), 2), 等于 (行号.取对齐方式 (列号), 5), 等于 (行号.取对齐方式 (列号), 8)))
        行号.置对齐方式 (列号, 取选择行数 (), 取选择列数 (), #下中)
    .判断 (或者 (等于 (行号.取对齐方式 (列号), 3), 等于 (行号.取对齐方式 (列号), 6), 等于 (行号.取对齐方式 (列号), 9)))
        行号.置对齐方式 (列号, 取选择行数 (), 取选择列数 (), #下右)
    .默认
        
    .判断结束
    相减 (取栏目数 (), 8).置文本 (多项选择 (取光标行号 ().取对齐方式 (取光标列号 ()), “上左”, “上中”, “上右”, “中左”, “中中”, “中右”, “下左”, “下中”, “下右”, “缩放图片”, “居中图片”, “缩放居中图片”, “平铺图片”, “缩放平铺图片”))
    未知函数_67179116 ()
.判断 (等于 (17))
    赋值 (颜色返回值, 未知函数_67179117 ())
    .如果真 (不等于 (颜色返回值, -1))
        赋值 (.颜色, 颜色返回值)
        表格1.表格线颜色
        数据源1.置背景色 (表格1.取光标行号 (), 表格1.取光标列号 (), 表格1.取选择行数 (), 表格1.取选择列数 (), 颜色选择器2.颜色)
    .如果真结束
    
    
.默认
    
.判断结束



.子程序 _工具条3_被下拉, 空白型, , 
.参数 按钮索引, 整数型, , 
.参数 下拉横座标, 整数型, , 
.参数 下拉纵座标, 整数型, , 

.判断开始 (等于 (按钮索引, 7))
    连续赋值 (假, 添加单斜线.可视, 添加双斜线.可视, 添加交叉线.可视, 清除斜线或交叉线.可视)
    弹出菜单 (边框或线条, 下拉横座标, 下拉纵座标)
    连续赋值 (真, 添加单斜线.可视, 添加双斜线.可视, 添加交叉线.可视, 清除斜线或交叉线.可视)
.判断 (等于 (按钮索引, 6))
    连续赋值 (假, 添加边框.可视, 添加全部表格线.可视, 添加水平表格线.可视, 添加垂直表格线.可视, 清除内部表格线.可视, 清除所有表格线.可视)
    弹出菜单 (下拉横座标, 下拉纵座标)
    连续赋值 (真, 添加边框.可视, 添加全部表格线.可视, 添加水平表格线.可视, 添加垂直表格线.可视, 清除内部表格线.可视, 清除所有表格线.可视)
.默认
    
.判断结束
获取组合框内容 () ' 附加程序集中

.子程序 _颜色选择器1_颜色被改变, 空白型, , 
取光标行号 ().置文本色 (取光标列号 (), 取选择行数 (), 取选择列数 (), .颜色)


.子程序 _颜色选择器2_颜色被改变, 空白型, , 
取光标行号 ().置背景色 (取光标列号 (), 取选择行数 (), 取选择列数 (), .颜色)


.子程序 winproc, 整数型, , 回调列表框
.参数 hwnd, 整数型, , 
.参数 wmsg, 整数型, , 
.参数 wparam, 整数型, , 
.参数 lparam, 整数型, , 

.判断开始 ()

.窗口程序集 易之表关于窗口程序集, , , 

.子程序 _按钮1_被单击, 空白型, , 
销毁 ()

.子程序 _易之表关于_创建完毕, 空白型, , 
赋值 (易之表关于.标题, 相加 (“关于 - ”, #总标题字))

.窗口程序集 易之表属性窗口程序集, , , 

.子程序 _易之表属性窗口_创建完毕, 空白型, , 
赋值 (.颜色, _启动窗口..表格线颜色)
赋值 (.颜色, _启动窗口..背景颜色)
赋值 (.选中, _启动窗口..允许选择块)
赋值 (.选中, _启动窗口..显示标尺)
赋值 (.选中, _启动窗口..显示空表格线)
赋值 (.选中, _启动窗口..禁止调整行高)
赋值 (.选中, _启动窗口..禁止调整列宽)
赋值 (.选中, _启动窗口..允许粘贴扩展)
赋值 (.内容, 到文本 (相除 (_启动窗口.取打印页宽 (.), 10)))
赋值 (.内容, 到文本 (相除 (_启动窗口.取打印页高 (.), 10)))
计算选区毫米 ()
赋值 (易之表属性窗口..内容, 到文本 (相除 (_启动窗口.取边距 (., _启动窗口.取光标行号 (.), _启动窗口.取光标列号 (.)), 10)))



.子程序 _背景颜色_颜色被改变, 空白型, , 
赋值 (_启动窗口..背景颜色, .颜色)

.子程序 _表格线颜色_颜色被改变, 空白型, , 
赋值 (_启动窗口..表格线颜色, .颜色)


.子程序 _禁止调整行高_被单击, 空白型, , 
赋值 (_启动窗口..禁止调整行高, .选中)



.子程序 _禁止调整列宽_被单击, 空白型, , 
赋值 (_启动窗口..禁止调整列宽, .选中)


.子程序 _允许选择块_被单击, 空白型, , 
赋值 (.选中, _启动窗口..允许选择块)


.子程序 _显示标尺_被单击, 空白型, , 
赋值 (_启动窗口..显示标尺, .选中)


.子程序 _允许粘贴扩展_被单击, 空白型, , 
赋值 (_启动窗口..允许粘贴扩展, .选中)


.子程序 _空表格线_被单击, 空白型, , 
赋值 (_启动窗口..显示空表格线, .选中)


.子程序 _表格线颜色1_颜色被改变, 空白型, , 
设置修改 ()
_启动窗口.置文本色 (., _启动窗口.取光标行号 (.), _启动窗口.取光标列号 (.), _启动窗口.取选择行数 (.), _启动窗口.取选择列数 (.), .颜色)



.子程序 _背景颜色1_颜色被改变, 空白型, , 
设置修改 ()
_启动窗口.置背景色 (., _启动窗口.取光标行号 (.), _启动窗口.取光标列号 (.), _启动窗口.取选择行数 (.), _启动窗口.取选择列数 (.), .颜色)



.子程序 _按钮1_被单击, 空白型, , 
_启动窗口.刷新显示 (.)
赋值 (_启动窗口..左边, 相减 (_启动窗口..左边, 1))
赋值 (_启动窗口..左边, 相加 (_启动窗口..左边, 1))
赋值 (.内容, 到文本 (相除 (相乘 (相减 (_启动窗口..左边, 68), 2.65), 10)))


.子程序 _按钮6_被单击, 空白型, , 
.如果真 (_启动窗口.打印设置 (.))
    设置修改 ()
    赋值 (易之表属性窗口..内容, 到文本 (相除 (_启动窗口.取打印页宽 (.), 10)))
    赋值 (易之表属性窗口..内容, 到文本 (相除 (_启动窗口.取打印页高 (.), 10)))
    
.如果真结束



.子程序 _选择框2_被单击, 空白型, , 
赋值 (_启动窗口..可视, .选中)

.子程序 _标签12_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.内容, 到文本 (相除 (相乘 (相减 (_启动窗口..左边, 68), 2.65), 10)))


.子程序 _按钮2_被单击, 空白型, , 
赋值 (_启动窗口..左边, 相减 (_启动窗口..左边, 1))
编辑框6.内容 ＝ 到文本 (((_启动窗口.透明标签1.左边 － 68) × 2.65) ÷ 10)
.如果真 (等于 (取操作系统类别 (), 2))
    赋值 (易之表属性窗口..内容, 到文本 (相除 (相乘 (相减 (_启动窗口..左边, 68), 2.65), 10)))
.如果真结束
.如果真 (等于 (取操作系统类别 (), 3))
    赋值 (易之表属性窗口..内容, 到文本 (相除 (相乘 (相减 (_启动窗口..左边, 62), 2.65), 10)))
.如果真结束



.子程序 _按钮3_被单击, 空白型, , 
赋值 (_启动窗口..左边, 相加 (_启动窗口..左边, 1))
编辑框6.内容 ＝ 到文本 (((_启动窗口.透明标签1.左边 － 68) × 2.65) ÷ 10)
.如果真 (等于 (取操作系统类别 (), 2))
    赋值 (易之表属性窗口..内容, 到文本 (相除 (相乘 (相减 (_启动窗口..左边, 68), 2.65), 10)))
.如果真结束
.如果真 (等于 (取操作系统类别 (), 3))
    赋值 (易之表属性窗口..内容, 到文本 (相除 (相乘 (相减 (_启动窗口..左边, 62), 2.65), 10)))
.如果真结束



.子程序 _按钮4_被单击, 空白型, , 
.局部变量 别, 整数型, , , 

.如果真 (等于 (取操作系统类别 (), 2))
    赋值 (别, 68)
.如果真结束
.如果真 (等于 (取操作系统类别 (), 3))
    赋值 (别, 62)
.如果真结束

赋值 (_启动窗口..左边, 相减 (相加 (相乘 (相除 (到数值 (.内容), 2.65), 10), 别), 1))
赋值 (_启动窗口..左边, 相加 (相乘 (相除 (到数值 (.内容), 2.65), 10), 别))
编辑框6.内容 ＝ 到文本 (((_启动窗口.透明标签1.左边 － 68) × 2.65) ÷ 10)
.如果真 (等于 (取操作系统类别 (), 2))
    赋值 (易之表属性窗口..内容, 到文本 (相除 (相乘 (相减 (_启动窗口..左边, 68), 2.65), 10)))
.如果真结束
.如果真 (等于 (取操作系统类别 (), 3))
    赋值 (易之表属性窗口..内容, 到文本 (相除 (相乘 (相减 (_启动窗口..左边, 62), 2.65), 10)))
.如果真结束



.子程序 _标签6_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

_字体_被选择 ()

.子程序 _标签7_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

_字体_被选择 ()

.子程序 _标签5_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

_边距_被选择 ()

.窗口程序集 易之表颜色窗口程序集, , , 

.子程序 _易之表颜色选择窗口_创建完毕, 空白型, , 
赋值 (返回颜色有效, 假)
赋值 (.标题, 颜色选择标题)

.子程序 _确认按钮_被单击, 空白型, , 
赋值 (返回颜色有效, 真)
赋值 (返回颜色, .颜色)
销毁 ()

.子程序 _取消按钮_被单击, 空白型, , 
销毁 ()

.窗口程序集 窗口程序集2, , , 

.程序集变量 文件号, 整数型, , , 
.程序集变量 分隔符, 文本型, , , 有不同的分隔符号，有逗号，分号，|/、-！等
.程序集变量 I, 整数型, , , 
.程序集变量 逗号计数, 整数型, , , 
.程序集变量 字段, 文本型, , "0", 
.程序集变量 库字段, 字段信息, , "3", 
.程序集变量 逗号大数, 整数型, , , 
.程序集变量 匿名程序集变量_1165, 空白型, , , 
.程序集变量 字段表, 字段信息, , "0", 
.程序集变量 备份字段表, 字段信息, , "0", 
.程序集变量 数据库文件名, 文本型, , , 如果为空表示为新建数据库
.程序集变量 是否需要转存数据, 逻辑型, , , 
.程序集变量 需要保存, 逻辑型, , , 当前数据库字段信息是否已经被修改
.程序集变量 来自程序的改变, 逻辑型, , , 当程序自己对编辑框进行修改时，置此值为真。
.程序集变量 匿名程序集变量_1166, 空白型, , , 
.程序集变量 小计逗号数, 整数型, , , 
.子程序 _按钮1_被单击, 空白型, , 
赋值 (.标题, “请输入欲转换的CSV文件名：”)
赋值 (.文件名, 取文本注册表项 (#逗号分隔文件, #用户习惯, “上次打开逗号分隔文件”, ))
.如果真 (等于 (打开 (), 真))
    写注册表项 (#逗号分隔文件, #用户习惯, “上次打开逗号分隔文件”, .文件名)
    赋值 (.内容, .文件名)
    赋值 (.内容, 子文本替换 (.内容, “.CSV”, “.EDB”, 1, , 假))
    编辑框4.内容 ＝ 编辑框1.内容
.如果真结束


.如果 (等于 (文件是否存在 (.内容), 真))
    赋值 (文件号, 打开文件 (.内容, 3, 1))
    
.否则
    信息框 (“无法找到CSV逗号分隔文件，请重新选择CSV文件！”, 0, )
    返回 ()
.如果结束

移到文件首 (文件号)
赋值 (.内容, 到文本 (0))
赋值 (逗号计数, 0)
赋值 (逗号大数, 0)

.判断循环首 (等于 (是否在文件尾 (真), 假))
    .如果 (等于 (是否在文件尾 (真), 真))
        信息框 (“已到文件尾！”, 0, )
        返回 ()
    .否则
        
    .如果结束
    
    赋值 (.内容, 读入一行 (文件号)) ' 显示第一行，让数据库字段显示出来
    .如果真 (等于 (到数值 (.内容), 0))
        赋值 (.内容, .内容) ' 显示第一行，让数据库字段显示出来
        赋值 (.内容, .内容) ' 显示第一行，让数据库字段显示出来
        
    .如果真结束
    
    赋值 (.内容, 到文本 (相加 (到数值 (.内容), 1))) ' 确定总数据行数
    
     ' 显示最长的一行，统计最多的字段
    .计次循环首 (取文本长度 (.内容), I)
        寻找文本 (.内容, 分隔符, I, 真)
        .如果真 (等于 (取文本中间 (.内容, I, 1), 分隔符))
            赋值 (逗号计数, 相加 (逗号计数, 1))
        .如果真结束
        
    .计次循环尾 ()
    
    .如果真 (大于 (逗号计数, 逗号大数))
        赋值 (逗号大数, 逗号计数)
        赋值 (.内容, 到文本 (相加 (逗号大数, 1)))
        赋值 (.内容, .内容)
    .如果真结束
    
    赋值 (逗号计数, 0)
    
.判断循环尾 ()

.子程序 _转换按钮_被单击, 空白型, , 
.局部变量 键值, 整数型, , , 

.如果真 (等于 (删首尾空 (.内容), “”))
    信息框 (“未打开一个CSV逗号分隔文件！”, 0, )
    返回 ()
.如果真结束

如果真 (寻找文本 (结构编辑框.内容, “1”, , 假) ≠ -1 或 寻找文本 (结构编辑框.内容, “2”, , 假) ≠ -1 或 寻找文本 (结构编辑框.内容, “3”, , 假) ≠ -1 或 寻找文本 (结构编辑框.内容, “4”, , 假) ≠ -1 或 寻找文本 (结构编辑框.内容, “5”, , 假) ≠ -1 或 寻找文本 (结构编辑框.内容, “6”, , 假) ≠ -1 或 寻找文本 (结构编辑框.内容, “7”, , 假) ≠ -1 或 寻找文本 (结构编辑框.内容, “8”, , 假) ≠ -1 或 寻找文本 (结构编辑框.内容, “9”, , 假) ≠ -1 或 寻找文本 (结构编辑框.内容, “0”, , 假) ≠ -1)
寻找文本 (结构编辑框.内容, “1”, , 假)
信息框 (“字段名中不能有数字！”, #错误图标, “错误”)
返回 ()

.如果真 (等于 (取文本右边 (.内容, 1), 分隔符))
    信息框 (“最后一个字段名中必须有字母,第一个不能有数字！”, #错误图标, “错误”)
    返回 ()
.如果真结束

赋值 (逗号计数, 0)
.计次循环首 (取文本长度 (.内容), I)
    寻找文本 (隐形编辑框.内容, 分隔符, I, 真)
    .如果真 (等于 (取文本中间 (.内容, I, 1), 分隔符))
        赋值 (逗号计数, 相加 (逗号计数, 1))
    .如果真结束
    
.计次循环尾 ()
赋值 (逗号计数, 相加 (逗号计数, 1)) ' 这是表示字段数目，所以要再加1

.如果真 (不等于 (逗号计数, 到数值 (.内容)))
    赋值 (键值, 信息框 (相加 (“要建立的字段数目 ”, 到文本 (逗号计数), “ 与参考字段数目 ”, .内容, “ 不一致，要继续吗？”), 1, ))
    信息框 (到文本 (键值), 0, )
    .如果真 (等于 (键值, 1))
        返回 ()
    .如果真结束
    
.如果真结束

赋值 (.现行子夹, 1)
赋值 (.现行选中项, 8)
赋值 (.禁止, 假)
赋值 (.内容, “256”)
赋值 (I, 1)

复制数组 (字段, 分割文本 (.内容, 分隔符, ))

.计次循环首 (相加 (逗号计数, 1), I)
    .如果真 (大于 (I, 逗号计数))
        返回 ()
    .如果真结束
    
    .如果真 (等于 (删首尾空 (字段 [I]), “”))
        输入框 (“发现一个空的字段名，请现在填充吗？”, “数据库字段不能为空”, , 字段 [I], )
    .如果真结束
    
    赋值 (.内容, 字段 [I])
    赋值 (.现行选中项, 8)
    赋值 (.禁止, 假)
    赋值 (.内容, “256”)
    
    信息框 (到文本 (I), 0, ) ' 用于调试
    
    .如果真 (大于 (逗号计数, I))
        插入字段 (真)
    .如果真结束
    
.计次循环尾 ()

返回 ()

.如果 (不等于 (删首尾空 (字段 [2]), “”))
    赋值 (.内容, 字段 [2])
    赋值 (.现行选中项, 8)
    赋值 (.禁止, 假)
    赋值 (.内容, “256”)
    
.否则
    返回 ()
.如果结束

返回 ()


 ' 打开数据库字段
.如果真 (等于 (文件是否存在 (“数据字段.edb”), 假))
    赋值 (库字段 [1].名称, #字段名)
    赋值 (库字段 [1].类型, #文本型)
    赋值 (库字段 [1].最大文本长度, 256)
    
    赋值 (库字段 [2].名称, #字段类型)
    赋值 (库字段 [2].类型, #文本型)
    赋值 (库字段 [2].最大文本长度, 1)
    
    赋值 (库字段 [3].名称, #字段长度)
    赋值 (库字段 [3].类型, #文本型)
    赋值 (库字段 [3].最大文本长度, 1)
    
.如果真结束

.如果真 (等于 (创建 (“数据字段.edb”, 库字段), 假))
    信息框 (相加 (“创建数据库”, #左引号, “数据字段.edb”, “.edb”, #右引号, “失败！”), #错误图标, “错误”)
    结束 ()
.如果真结束

.如果真 (等于 (打开 (“数据字段.edb”, , , , , “?”, ), 假))
    信息框 (相加 (“无法打开数据库”, #左引号, “数据字段.edb”, #右引号, “！”), #错误图标, “错误”)
    结束 ()
.如果真结束


次数 ＝ 取记录数 ()
到首记录 ()
健身卡号框.获取焦点 ()

移到文件首 (文件号)
复制数组 (字段, 分割文本 (编辑框2.内容, “,”, ))

 ' 写到数据库中
.判断循环首 (等于 (是否在文件尾 (真), 假))
    .如果 (等于 (是否在文件尾 (真), 真))
        信息框 (“已到文件尾！”, 0, )
        返回 ()
    .否则
        
    .如果结束
    
    赋值 (.内容, 读入一行 (文件号))
    
    赋值 (.内容, 到文本 (相加 (到数值 (.内容), 1)))
    寻找文本 (.内容, 分隔符, 1, 真)
     ' 显示最长的一行，统计最多的字段
    参考编辑框 ＝ 取重复文本 (100, 分隔符)
    
    复制数组 (分割文本 (.内容, 分隔符, ))
    名片图名框.内容 ＝ 字段 [1]
    公司名称框.内容 ＝ 字段 [2]
    
.判断循环尾 ()


.子程序 _按钮2_被单击, 空白型, , 
信息框 (“任何数据库都可以转换为一种CSV文件，即逗号分隔文件，可以通过Excel来保存。”, 0, )

.子程序 _CSV窗口_创建完毕, 空白型, , 
全部关闭 ()

赋值 (分隔符, “,”)
_新建按钮_被单击 ()

.子程序 结构管理器, 空白型, , 
载入 (结构管理窗口, , 真)

.子程序 _字段名编辑框_内容被改变, 空白型, , 
.局部变量 容器1, 空白型, , , 如果数据类型为空，默认为整数型。

赋值 (容器1, .现行选中项)
.如果真 (或者 (等于 (真), 等于 (容器1, -1)))
    返回 ()
.如果真结束
.如果真 (不等于 ( [相加 (容器1, 1)].名称, .内容))
    赋值 ( [相加 (容器1, 1)].名称, .内容)
    容器1.置项目文本 (.内容)
    设置是否需要保存 ()
.如果真结束


.子程序 _字段类型组合框_列表项被选择, 空白型, , 
.局部变量 容器1, 空白型, , , 
.局部变量 新类型, 空白型, , , 

赋值 (容器1, .现行选中项)
.如果真 (或者 (等于 (真), 等于 (容器1, -1), 等于 (.现行选中项, -1)))
    返回 ()
.如果真结束
赋值 (容器1, 相加 (容器1, 1))
赋值 (新类型, .取项目数值 (.现行选中项))
.如果真 (不等于 ( [容器1], 类型, 新类型))
    赋值 ( [容器1], 类型, 新类型)
    赋值 (.禁止, 不等于 (新类型, #文本型))
    设置是否需要保存 ()
.如果真结束


.子程序 _字段长度编辑框_内容被改变, 空白型, , 
.局部变量 容器1, 空白型, , , 
.局部变量 新长度, 空白型, , , 

赋值 (容器1, .现行选中项)
.如果真 (或者 (等于 (真), 等于 (容器1, -1)))
    返回 ()
.如果真结束
赋值 (容器1, 相加 (容器1, 1))
.如果真 (等于 ( [容器1], 类型, #文本型))
    赋值 (新长度, 到数值 (.内容))
    .如果真 (不等于 ( [容器1], 最大文本长度, 新长度))
        赋值 ( [容器1], 最大文本长度, 选择 (大于 (新长度, 512), 512, 选择 (小于 (新长度, 1), 1, 新长度)))
        设置是否需要保存 ()
    .如果真结束
    
.如果真结束


.子程序 _字段列表框_列表项被选择, 空白型, , 
填充字段数据 ()

.子程序 _新建按钮_被单击, 空白型, , 
.局部变量 字段, 字段信息, , , 

如果真 (询问保存 () ＝ 假)
返回 ()
赋值 (“”)
清除数组 ()
清除数组 ()
赋值 (字段.类型, #文本型)
加入成员 () ' 加入一个空白整数字段
清空 ()
“”.加入项目 (0)
赋值 (.现行选中项, 0)
填充字段数据 ()
获取焦点 ()
设置窗口标题 ()
赋值 (假)
显示字段数 ()

.子程序 _保存按钮_被单击, 空白型, , 
赋值 (数据库文件名, .内容)
赋值 (.标题, “请输入欲保存的数据库*.edb文件名：”)
赋值 (.文件名, .内容)
赋值 (.类型, 1)
.如果真 (等于 (打开 (), 真))
    写注册表项 (#数据库管理器, #用户习惯, “上次打开数据库”, .文件名)
    赋值 (数据库文件名, .文件名)
    未知函数_67175667 ()
.如果真结束


.子程序 _关闭按钮_被单击, 空白型, , 
全部关闭 ()
.如果真 (等于 (询问保存 (), 真))
    销毁 ()
.如果真结束


.子程序 _结构管理窗口_创建完毕, 空白型, , 
_新建按钮_被单击 ()

.子程序 _结构管理窗口_可否被关闭, 逻辑型, , 
返回 (询问保存 ())

.子程序 填充字段数据, 空白型, , 
.局部变量 容器1, 空白型, , , 
.局部变量 字段类型, 空白型, , , 
.局部变量 容器3, 空白型, , , 

赋值 (真)
赋值 (容器1, .现行选中项)
.如果真 (等于 (容器1, -1))
     ' 如果没有选择字段，将编辑部分清空。
    赋值 (.内容, “”)
    赋值 (.现行选中项, -1)
    赋值 (.内容, “”)
    赋值 (.禁止, 真)
    赋值 (假)
    返回 ()
.如果真结束
赋值 (容器1, 相加 (容器1, 1))
检查 (小于或等于 (容器1, 取数组成员数 ()))
赋值 (.内容,  [容器1], 名称)
赋值 (字段类型,  [容器1], 类型)
.计次循环首 (取项目数 (), 容器3)
    .如果真 (等于 (相减 (容器3, 1).取项目数值 (), 字段类型))
        赋值 (.现行选中项, 相减 (容器3, 1))
        跳出循环 ()
    .如果真结束
    
.计次循环尾 ()
赋值 (.内容, 到文本 ( [容器1], 最大文本长度))
赋值 (.禁止, 不等于 (字段类型, #文本型))
赋值 (假)

.子程序 询问保存, 逻辑型, , 返回真继续，返回假取消。
.局部变量 选择结果, 空白型, , , 

.如果真 (等于 (真))
    赋值 (选择结果, 信息框 (“当前结构已经被修改，请问是否保存？”, 相加 (#取消是否钮, #询问图标), “询问”))
    .判断开始 (等于 (选择结果, #取消钮))
        返回 (假)
    .判断 (等于 (选择结果, #是钮))
        .如果真 (等于 (未知函数_67175553 (), 假))
            返回 (假)
        .如果真结束
        
    .默认
        设置是否需要保存 (假)
    .判断结束
    
.如果真结束
返回 (真)

.子程序 设置是否需要保存, 空白型, , 
.参数 是否需要保存, 逻辑型, 可空, 

.如果真 (等于 (是否为空 (是否需要保存), 真))
    赋值 (是否需要保存, 真)
.如果真结束
.如果真 (不等于 (是否需要保存))
    赋值 (是否需要保存)
     ' 设置在窗口标题栏中的标志
    .如果 (等于 (真))
        .如果真 (不等于 (取文本右边 (CSV窗口.标题, 2), “ *”))
            赋值 (CSV窗口.标题, 相加 (CSV窗口.标题, “ *”))
        .如果真结束
        
    .否则
        .如果真 (等于 (取文本右边 (CSV窗口.标题, 2), “ *”))
            赋值 (CSV窗口.标题, 取文本左边 (CSV窗口.标题, 相减 (取文本长度 (CSV窗口.标题), 2)))
        .如果真结束
        
    .如果结束
    
.如果真结束


.子程序 _删除按钮_被单击, 空白型, , 
.局部变量 容器1, 空白型, , , 
.局部变量 字段总数, 空白型, , , 
.局部变量 容器2, 空白型, , , 

赋值 (容器1, .现行选中项)
.如果真 (等于 (容器1, -1))
    返回 ()
.如果真结束
赋值 (容器2, 容器1.取项目数值 ())
赋值 (容器1, 相加 (容器1, 1))
.如果真 (不等于 (容器2, 0))
    赋值 ( [容器2], 类型, 0) ' 设置被删除标志
.如果真结束
赋值 (字段总数, 取项目数 ())
.如果 (等于 (字段总数, 1)) ' 如果为最后一个字段，则仅清空。
    赋值 ( [容器1], 名称, “”)
    赋值 ( [容器1], 类型, #整数型)
    赋值 ( [容器1], 最大文本长度, 0)
    0.置项目文本 (“”)
    0.置项目数值 (0)
.否则
    删除成员 (容器1, )
    相减 (容器1, 1).删除项目 ()
    .如果真 (等于 (容器1, 字段总数))
        赋值 (容器1, 相减 (容器1, 1))
    .如果真结束
    赋值 (.现行选中项, 相减 (容器1, 1))
.如果结束
填充字段数据 ()
设置是否需要保存 ()
获取焦点 ()
显示字段数 ()

.子程序 _插入按钮_被单击, 空白型, , 在当前位置插入
插入字段 (假)

.子程序 _向后插入按钮_被单击, 空白型, , 在当前位置之后插入
插入字段 (真)

.子程序 插入字段, 空白型, , 
.参数 向后插入, 逻辑型, , 

.局部变量 容器1, 空白型, , , 
.局部变量 字段, 字段信息, , , 

赋值 (容器1, .现行选中项)
.如果 (等于 (容器1, -1))
    赋值 (容器1, 取项目数 ())
.否则
    .如果真 (等于 (向后插入, 真))
        赋值 (容器1, 相加 (容器1, 1))
    .如果真结束
    
.如果结束
赋值 (字段.类型, #文本型)
插入成员 (相加 (容器1, 1), 字段)
容器1.插入项目 (“”, 0)
赋值 (.现行选中项, )
填充字段数据 ()
设置是否需要保存 ()
获取焦点 ()
显示字段数 ()

.子程序 _上移按钮_被单击, 空白型, , 
.局部变量 容器1, 空白型, , , 
.局部变量 字段, 字段信息, , , 
.局部变量 原字段名, 文本型, , , 
.局部变量 原项目值, 空白型, , , 

赋值 (容器1, .现行选中项)
.如果真 (小于或等于 (容器1, 0))
    返回 ()
.如果真结束
赋值 (原字段名, 容器1.取项目文本 ())
赋值 (原项目值, 容器1.取项目数值 ())
容器1.删除项目 ()
相减 (容器1, 1).插入项目 (原字段名, 原项目值)
赋值 (.现行选中项, 相减 (容器1, 1))
赋值 (容器1, 相加 (容器1, 1))
赋值 (字段,  [容器1])
删除成员 (容器1, )
插入成员 (相减 (容器1, 1), 字段)
填充字段数据 ()
设置是否需要保存 ()
获取焦点 ()

.子程序 _下移按钮_被单击, 空白型, , 
.局部变量 容器1, 空白型, , , 
.局部变量 字段, 字段信息, , , 
.局部变量 原字段名, 文本型, , , 
.局部变量 原项目值, 空白型, , , 

赋值 (容器1, .现行选中项)
.如果真 (或者 (等于 (容器1, -1), 大于或等于 (容器1, 相减 (取项目数 (), 1))))
    返回 ()
.如果真结束
赋值 (原字段名, 容器1.取项目文本 ())
赋值 (原项目值, 容器1.取项目数值 ())
容器1.删除项目 ()
赋值 (容器1, 相加 (容器1, 1))
容器1.插入项目 (原字段名, 原项目值)
赋值 (.现行选中项, 容器1)
赋值 (字段,  [容器1])
删除成员 (容器1, )
插入成员 (相加 (容器1, 1), 字段)
填充字段数据 ()
设置是否需要保存 ()
获取焦点 ()

.子程序 显示字段数, 空白型, , 
赋值 (.标题, 到文本 (取数组成员数 ()))

.子程序 _字段列表框_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.判断开始 (等于 (键代码, #Del键))
    _删除按钮_被单击 ()
.判断 (等于 (键代码, #Ins键))
    _插入按钮_被单击 ()
.判断 (并且 (等于 (键代码, #上光标键), 等于 (功能键状态, #Ctrl键状态)))
    _上移按钮_被单击 ()
.判断 (并且 (等于 (键代码, #下光标键), 等于 (功能键状态, #Ctrl键状态)))
    _下移按钮_被单击 ()
.默认
    返回 (真)
.判断结束
获取焦点 ()
返回 (假)

.子程序 设置窗口标题, 空白型, , 
.如果 (等于 (“”))
    赋值 (CSV窗口.标题, “数据库结构管理器 （新数据库）”)
.否则
    赋值 (CSV窗口.标题, 相加 (“数据库结构管理器 - ”, 数据库文件名))
.如果结束


.子程序 _打开按钮_被单击, 空白型, , 
.局部变量 容器1, 空白型, , , 
.局部变量 字段, 字段信息, , , 

赋值 (.类型, 0)
赋值 (.标题, “请输入欲打开的数据库文件名：”)
赋值 (.文件名, 取文本注册表项 (#数据库管理器, #用户习惯, “上次打开数据库”, ))
.如果真 (等于 (打开 (), 假))
    返回 ()
.如果真结束
写注册表项 (#数据库管理器, #用户习惯, “上次打开数据库”, .文件名)
.如果真 (等于 (询问保存 (), 假))
    返回 ()
.如果真结束
.如果真 (等于 (打开 (.文件名, , 真, #禁止读写, , “?”, ), 假))
    信息框 (相加 (“打开数据库文件”, #左引号, .文件名, #右引号, “失败！”), #错误图标, “错误”)
    返回 ()
.如果真结束
清除数组 ()
清空 ()
赋值 (.文件名)
.计次循环首 (取字段数 (), 容器1)
    赋值 (字段.名称, 取字段名 (容器1))
    赋值 (字段.类型, 取字段类型 (容器1))
    赋值 (字段.最大文本长度, 选择 (等于 (字段.类型, #文本型), 取字段尺寸 (容器1), 0))
    加入成员 (字段)
    字段.加入项目 (.名称, 容器1)
.计次循环尾 ()
赋值 (大于 (取记录数 (), 0))
关闭 ()
复制数组 ()
赋值 (.现行选中项, 0)
填充字段数据 ()
设置窗口标题 ()
显示字段数 ()
获取焦点 ()

.子程序 保存, 逻辑型, , 返回真继续，返回假取消。
.局部变量 容器1, 空白型, , , 
.局部变量 文件名, 文本型, , , 

.计次循环首 (取数组成员数 (), 容器1)
    .如果真 (等于 ( [容器1], 名称, “”))
        信息框 (“字段名称不能为空”, #错误图标, “错误”)
        赋值 (.现行选中项, 相减 (容器1, 1))
        填充字段数据 ()
        获取焦点 ()
        返回 (假)
    .如果真结束
    
.计次循环尾 ()
.如果真 (或者 (等于 (“”), 等于 (假))) ' 是否为新建数据库或空数据库
    .如果 (等于 (“”))
        赋值 (.类型, 1)
        赋值 (.标题, “请输入欲创建的数据库文件名：”)
        赋值 (.文件名, “”)
        .如果真 (等于 (打开 (), 假))
            返回 (假)
        .如果真结束
        写注册表项 (#数据库管理器, #用户习惯, “上次打开数据库”, .文件名)
        赋值 (文件名, .文件名)
    .否则
        赋值 (文件名, )
    .如果结束
    .如果真 (等于 (创建 (文件名, ), 假))
        信息框 (取错误信息 (), #错误图标, “错误”)
        返回 (假)
    .如果真结束
    赋值 (文件名)
    设置窗口标题 ()
    设置是否需要保存 (假)
    返回 (真)
.如果真结束
置等待鼠标 ()
.如果 (等于 (转存记录数据 (), 真))
    设置是否需要保存 (假)
    恢复鼠标 ()
    返回 (真)
.否则
    恢复鼠标 ()
    返回 (假)
.如果结束


.子程序 改文件后缀, 文本型, , 
.参数 文件名, 文本型, , 
.参数 新后缀, 文本型, , 

.局部变量 容器1, 空白型, , , 

赋值 (容器1, 倒找文本 (文件名, “.”, , 真))
.如果 (等于 (容器1, -1))
    返回 (相加 (文件名, “.”, 新后缀))
.否则
    返回 (相加 (取文本左边 (文件名, 容器1), 新后缀))
.如果结束


.子程序 转存记录数据, 逻辑型, , 成功返回真，失败返回假。
.局部变量 临时文件名, 文本型, , , 
.局部变量 容器1, 空白型, , , 
.局部变量 容器2, 空白型, , , 
.局部变量 原类型, 空白型, , , 
.局部变量 现类型, 空白型, , , 
.局部变量 字段数, 空白型, , , 
.局部变量 字段, 字段信息, , , 
.局部变量 使用原字段名, 逻辑型, , , 
.局部变量 需重命名字段, 整数型, , "0", 
.局部变量 临时字段表, 字段信息, , "0", 
.局部变量 改名失败, 逻辑型, , , 
.局部变量 信息, 文本型, , , 
.局部变量 是否有辅助数据文件, 逻辑型, , , 是否有.edt文件
.局部变量 源辅助数据文件, 文本型, , , 
.局部变量 目的辅助数据文件, 文本型, , , 

.判断循环首 (真)
    赋值 (字段数, 取数组成员数 ())
    .计次循环首 (字段数, 容器1)
        .如果真 (等于 ( [容器1], 类型, 0))
            赋值 (信息, 相加 (信息, “原字段”, #左引号,  [容器1], 名称, #右引号, “被删除，数据库中此列数据将被去除。”, #换行符))
        .如果真结束
        
    .计次循环尾 ()
    赋值 (字段数, 取项目数 ())
    .计次循环首 (字段数, 容器1)
        赋值 (容器2, 相减 (容器1, 1).取项目数值 ())
        .如果 (不等于 (容器2, 0)) ' 是否为新增字段
            赋值 (原类型,  [容器2], 类型)
            赋值 (现类型,  [容器1], 类型)
            赋值 (使用原字段名, 真)
            .如果真 (不等于 (原类型, 现类型))
                .判断开始 (或者 (大于 (原类型, 6), 大于 (现类型, 6))) ' 是否不为数值型字段
                    赋值 (信息, 相加 (信息, “原字段”, #左引号,  [容器2], 名称, #右引号, “的类型被更改，数据库中此列数据将被重新初始化。”, #换行符))
                    赋值 (使用原字段名, 假) ' 此时没有必须使用原字段名。
                .判断 (大于 (原类型, 现类型))
                    赋值 (信息, 相加 (信息, “原字段”, #左引号,  [容器2], 名称, #右引号, “的数值精度被降低，数据库中此列数据将受到影响。”, #换行符))
                .默认
                    
                .判断结束
                
            .如果真结束
            .如果 (并且 (等于 (使用原字段名, 真), 不等于 ( [容器2], 名称,  [容器1], 名称)))
                赋值 (字段.名称,  [容器2], 名称) ' 暂时使用原来的名称，以便于附加数据。
                赋值 (字段.类型, 现类型)
                赋值 (字段.最大文本长度,  [容器1], 最大文本长度)
                加入成员 (临时字段表, 字段)
                加入成员 (需重命名字段, 容器1) ' 记录下来以便以后重命名。
            .否则
                加入成员 (临时字段表,  [容器1])
            .如果结束
            
        .否则
            加入成员 (临时字段表,  [容器1])
        .如果结束
        .如果真 (大于或等于 ( [容器1], 类型, 11)) ' 是否存在备注和字节集型字段
            赋值 (是否有辅助数据文件, 真)
        .如果真结束
        
    .计次循环尾 ()
    .如果真 (不等于 (信息, “”))
        赋值 (容器2, 信息框 (信息, 相加 (#是否钮, #询问图标, #默认按钮二), “您确定继续吗？”))
        .如果真 (不等于 (容器2, #是钮))
            返回 (假)
        .如果真结束
        
    .如果真结束
    赋值 (临时文件名, 取临时文件名 ())
    .如果真 (或者 (等于 (打开 (数据库文件名, #原数据库, , #禁止读写, , “?”, ), 假), 等于 (创建 (临时文件名, 临时字段表), 假), 等于 (打开 (临时文件名, , , #禁止读写, , “?”, ), 假), 等于 (添加 (#原数据库, , ), 假)))
        跳出循环 ()
    .如果真结束
    .计次循环首 (取数组成员数 (需重命名字段), 容器1)
        .如果真 (等于 (改字段名 (需重命名字段 [容器1],  [需重命名字段] [容器1], 名称), 假)) ' 改回到新名称
            赋值 (改名失败, 真)
            跳出循环 ()
        .如果真结束
        
    .计次循环尾 ()
    .如果真 (等于 (改名失败, 真))
        跳出循环 ()
    .如果真结束
    全部关闭 ()
    .如果真 (等于 (是否有辅助数据文件, 真))
        赋值 (目的辅助数据文件, 改文件后缀 (“edt”))
        赋值 (源辅助数据文件, 改文件后缀 (临时文件名, “edt”))
        .如果真 (等于 (文件是否存在 (源辅助数据文件), 假))
            跳出循环 ()
        .如果真结束
        删除文件 (目的辅助数据文件)
        文件更名 (源辅助数据文件, 目的辅助数据文件)
    .如果真结束
    删除文件 ()
    文件更名 (临时文件名, )
    返回 (真)
.判断循环尾 ()
赋值 (信息, 取错误信息 ())
.如果真 (等于 (信息, “”))
    赋值 (信息, “转存记录出错”)
.如果真结束
信息框 (信息, #错误图标, “错误”)
全部关闭 ()
返回 (假)

.子程序 _新建索引按钮_被单击, 空白型, , 
.如果真 (并且 (等于 (真), 或者 (等于 (信息框 (“在建立索引之前必须保存当前结构，请问是否保存？”, 相加 (#是否钮, #询问图标), “询问”), #否钮), 等于 (保存 (), 假))))
    返回 ()
.如果真结束
.如果真 (或者 (等于 (“”), 等于 (文件是否存在 (), 假)))
    信息框 (“不存在数据库文件”, #错误图标, “错误”)
    返回 ()
.如果真结束
载入 (索引创建窗口, , 真)

.子程序 _CSV窗口_可否被关闭, 逻辑型, , 
全部关闭 ()
_关闭按钮_被单击 ()

.子程序 _保存按钮1_被单击, 空白型, , 将CSV文件中的内容全部加入数据库中
.局部变量 j, 整数型, , , 

_保存按钮_被单击 ()
赋值 (.现行子夹, 2)
赋值 (.内容, .内容)
赋值 (.内容, 数据库文件名)

移到文件首 (文件号)
打开 (数据库文件名, , , , , “?”, )
赋值 (I, 1)
赋值 (小计逗号数, 0)
.计次循环首 (到数值 (.内容), I)
    
    赋值 (.内容, 读入一行 (文件号))
    
     ' 现在要确定是否有哪么多分隔符号.否则自动加上.
    .计次循环首 (取文本长度 (.内容), j)
        寻找文本 (.内容, 分隔符, j, 真)
        .如果真 (等于 (取文本中间 (.内容, j, 1), 分隔符))
            赋值 (小计逗号数, 相加 (小计逗号数, 1))
        .如果真结束
        
    .计次循环尾 ()
    信息框 (“[” ＋ 隐形编辑框.内容 ＋ “]” ＋ 到文本 (逗号计数) ＋ 到文本 (小计逗号数), 0, )
    小计逗号数 ＝ 小计逗号数 ＋ 1
    .判断循环首 (大于或等于 (相减 (逗号计数, 1), 小计逗号数))
        赋值 (.内容, 相加 (.内容, 分隔符))
        赋值 (小计逗号数, 相加 (小计逗号数, 1))
    .判断循环尾 ()
    
    信息框 (“[” ＋ 隐形编辑框.内容 ＋ “]” ＋ 到文本 (逗号计数) ＋ 到文本 (小计逗号数), 0, )
    赋值 (小计逗号数, 0)
    
    复制数组 (字段, 分割文本 (.内容, 分隔符, ))
    .如果真 (等于 (加记录 (字段 [1]), 假))
        信息框 (“添加失败了耶！”, #错误图标, “错误”)
    .如果真结束
    
    信息框 (“修改资料失败！原因为” ＋ #左引号 ＋ 取错误信息 () ＋ #右引号 ＋ “。”, #错误图标, “错误”)
    
    .如果真 (大于或等于 (逗号计数, 1))
        修改 (字段 [1])
    .如果真结束
    赋值 (.位置, 相加 (.位置, 10))
    .如果真 (大于或等于 (逗号计数, 2))
        修改 (字段 [2])
    .如果真结束
    赋值 (.位置, 相加 (.位置, 10))
    .如果真 (大于或等于 (逗号计数, 3))
        修改 (字段 [3])
    .如果真结束
    赋值 (.位置, 相加 (.位置, 9))
    .如果真 (大于或等于 (逗号计数, 4))
        修改 (字段 [4])
    .如果真结束
    赋值 (.位置, 相加 (.位置, 8))
    .如果真 (大于或等于 (逗号计数, 5))
        修改 (字段 [5])
    .如果真结束
    赋值 (.位置, 相加 (.位置, 7))
    .如果真 (大于或等于 (逗号计数, 6))
        修改 (字段 [6])
    .如果真结束
    赋值 (.位置, 相加 (.位置, 6))
    .如果真 (大于或等于 (逗号计数, 7))
        修改 (字段 [7])
    .如果真结束
    赋值 (.位置, 相加 (.位置, 5))
    .如果真 (大于或等于 (逗号计数, 8))
        修改 (字段 [8])
    .如果真结束
    赋值 (.位置, 相加 (.位置, 5))
    .如果真 (大于或等于 (逗号计数, 9))
        修改 (字段 [9])
    .如果真结束
    赋值 (.位置, 相加 (.位置, 5))
    .如果真 (大于或等于 (逗号计数, 10))
        修改 (字段 [10])
    .如果真结束
    赋值 (.位置, 相加 (.位置, 5))
    .如果真 (大于或等于 (逗号计数, 11))
        修改 (字段 [11])
    .如果真结束
    赋值 (.位置, 相加 (.位置, 5))
    .如果真 (大于或等于 (逗号计数, 12))
        修改 (字段 [12])
    .如果真结束
    赋值 (.位置, 相加 (.位置, 5))
    .如果真 (大于或等于 (逗号计数, 13))
        修改 (字段 [13])
    .如果真结束
    赋值 (.位置, 相加 (.位置, 5))
    .如果真 (大于或等于 (逗号计数, 14))
        修改 (字段 [14])
    .如果真结束
    赋值 (.位置, 相加 (.位置, 4))
    .如果真 (大于或等于 (逗号计数, 15))
        修改 (字段 [15])
    .如果真结束
    赋值 (.位置, 相加 (.位置, 4))
    .如果真 (大于或等于 (逗号计数, 16))
        修改 (字段 [16])
    .如果真结束
    赋值 (.位置, 相加 (.位置, 4))
    .如果真 (大于或等于 (逗号计数, 17))
        修改 (字段 [17])
    .如果真结束
    赋值 (.位置, 相加 (.位置, 4))
    .如果真 (大于或等于 (逗号计数, 18))
        修改 (字段 [18])
    .如果真结束
    赋值 (.位置, 相加 (.位置, 4))
    .如果真 (大于或等于 (逗号计数, 19))
        修改 (字段 [19])
    .如果真结束
    赋值 (.位置, 相加 (.位置, 4))
    .如果真 (大于或等于 (逗号计数, 20))
        修改 (字段 [20])
    .如果真结束
    赋值 (.位置, 相加 (.位置, 4))
    .如果真 (大于或等于 (逗号计数, 21))
        修改 (字段 [21])
    .如果真结束
    赋值 (.位置, 相加 (.位置, 4))
    .如果真 (大于或等于 (逗号计数, 22))
        修改 (字段 [22])
    .如果真结束
    赋值 (.位置, 相加 (.位置, 3))
    .如果真 (大于或等于 (逗号计数, 23))
        修改 (字段 [23])
    .如果真结束
    赋值 (.位置, 相加 (.位置, 3))
    .如果真 (大于或等于 (逗号计数, 24))
        修改 (字段 [24])
    .如果真结束
    赋值 (.位置, 相加 (.位置, 3))
    .如果真 (大于或等于 (逗号计数, 25))
        修改 (字段 [25])
    .如果真结束
    赋值 (.位置, 相加 (.位置, 3))
    .如果真 (大于或等于 (逗号计数, 26))
        修改 (字段 [26])
    .如果真结束
    赋值 (.位置, 相加 (.位置, 3))
    .如果真 (大于或等于 (逗号计数, 27))
        修改 (字段 [27])
    .如果真结束
    赋值 (.位置, 相加 (.位置, 3))
    .如果真 (大于或等于 (逗号计数, 28))
        修改 (字段 [28])
    .如果真结束
    赋值 (.位置, 相加 (.位置, 3))
    .如果真 (大于或等于 (逗号计数, 29))
        修改 (字段 [29])
    .如果真结束
    赋值 (.位置, 相加 (.位置, 3))
    .如果真 (大于或等于 (逗号计数, 30))
        修改 (字段 [30])
    .如果真结束
    赋值 (.位置, 相加 (.位置, 3))
    
    
    
.计次循环尾 ()

赋值 (.标题, “转换已结束！”)
赋值 (.位置, 100)

.子程序 _关闭按钮1_被单击, 空白型, , 
全部关闭 ()

销毁 ()

.子程序 _关闭按钮2_被单击, 空白型, , 
赋值 (.文件名, 取文本注册表项 (#数据库管理器, #用户习惯, “上次打开数据库”, ))
.如果真 (等于 (打开 (), 真))
    写注册表项 (#数据库管理器, #用户习惯, “上次打开数据库”, .文件名)
    打开 (.文件名, , , , , “?”, )
.如果真结束

到首记录 ()
编辑 (“数据库记录编辑”, , )


.窗口程序集 窗口程序集6, , , 

.程序集变量 文件号, 整数型, , , 
.子程序 _按钮1_被单击, 空白型, , 
.局部变量 字段, 字段信息, , "22", 
.局部变量 总记录数, 整数型, , , 
.局部变量 计次, 整数型, , , 
.局部变量 要写入的, 文本型, , , 

赋值 (文件号, 打开文件 (.内容, 4, 1))

选择列表框1.是否被选中 (0)

写文本行 (文件号, “姓名,爱好,特长,昵称,寻呼,移动电话,ICQ,电子邮件,电子邮件 2,自定义 3,个人主页,家庭所在国家/地区,家庭所在省/自治区,家庭所在城市,家庭所在地的邮政编码,家庭地址,家庭电话,家庭电话 2,家庭传真,配偶,自定义 4,家庭成员,单位名称,单位所在国家/地区,单位所在省/自治区,单位所在城市,单位所在地的邮政编码,单位地址,单位电话,单位电话 2,单位传真,部门,办公室,自定义 2,职位,单位主页,摘要显示,附注,性别,生日,生日农历标志,生日提醒标志,移动电话 2,Messenger,QQ,自定义 1,自定义 5,自定义 6,姓,名”)

要写入的 ＝ 要写入的 ＋ 读 (#姓名) ＋ “,,,,,” ＋ 读 (#手机号码) ＋ “,,” ＋ 读 (#电子信箱) ＋ “,,” ＋ 读 (#税号) ＋ “,,,,,,,” ＋ 读 (#电话号码) ＋ “,,,,” ＋ 读 (#开户) ＋ “,,” ＋ 读 (#公司名称) ＋ “,,,,” ＋ 到文本 (读 (#邮编)) ＋ “,” ＋ 读 (#地址) ＋ “,” ＋ 读 (#电话号码) ＋ “,,,,,,” ＋ 读 (#职务) ＋ “,” ＋ 读 (#主页地址) ＋ “,” ＋ 到文本 (读 (#性别)) ＋ “,,0,0,,,QQ,,” ＋ 读 (#帐号) ＋ “,,,”

赋值 (取记录数 ())
到首记录 ()
.计次循环首 ()
    赋值 (要写入的, “”)
    赋值 (要写入的, 相加 (要写入的, “,,,,,”))
    赋值 (要写入的, 相加 (要写入的, “,,,,,”))
    
    
    如果真 (寻找文本 (删全部空 (读 (#名片图名)), 删全部空 (数据范围框.内容), , 真) ≠ -1 或 删全部空 (数据范围框.内容) ＝ “全部地区”)
    写文本行 (文件号, 要写入的)
    
    跳到 (相加 (1))
    取记录号 ()
    
    
.计次循环尾 ()

关闭文件 (文件号)



.程序集 _模块_edb数据库文件转Excel文件1.3, , , ** 不要更改此处 edb转xls.ec

.子程序 edb转xls, 逻辑型, , 成功返回真，失败返回假
.参数 edb文件名, 文本型, , 必须是完整路径
.参数 Excel文件名, 文本型, , 必须是完整路径

 ' ** 本子程序功能由系统自动转交对应模块实现，可以删除但不能修改。

.窗口程序集 窗口程序集7, , , 

.子程序 _按钮1_被单击, 空白型, , 
赋值 (.标题, “请输入欲转换的易语言数据库名：”)
赋值 (.文件名, 取文本注册表项 (#数据库管理器, #用户习惯, “上次打开数据库”, ))
.如果真 (等于 (打开 (), 真))
    写注册表项 (#数据库管理器, #用户习惯, “上次打开数据库”, .文件名)
    赋值 (.内容, .文件名)
    赋值 (.内容, 子文本替换 (.内容, “.edb”, “.xls”, 1, , 假))
.如果真结束


.子程序 _按钮2_被单击, 空白型, , 
.如果 (等于 (edb转xls (.内容, .内容), 真))
    信息框 (“转换成功！”, 0, )
.否则
    信息框 (“转换失败！”, 0, )
.如果结束


.窗口程序集 窗口程序集8, , , 

.子程序 _按钮1_被单击, 空白型, , 
赋值 (.标题, “请输入欲转换的易语言数据库名：”)
赋值 (.文件名, 取文本注册表项 (#数据库管理器, #用户习惯, “上次打开数据库”, ))
.如果真 (等于 (打开 (), 真))
    写注册表项 (#数据库管理器, #用户习惯, “上次打开数据库”, .文件名)
    赋值 (.内容, .文件名)
    赋值 (.内容, 子文本替换 (.内容, “.edb”, “.exl”, 1, , 假))
.如果真结束



.子程序 _按钮2_被单击, 空白型, , 
edb转xls (.内容, .内容)


.窗口程序集 易库转换窗口程序集, , , 

.程序集变量 编辑框内容已改变, 空白型, , , 
.子程序 显示, 空白型, , 
.局部变量 容器1, 整数型, , , 
.局部变量 容器2, 整数型, , , 

打开 (.内容, , , , , “?”, )
置当前库 (.内容)
.计次循环首 (取记录数 (), 容器1)
    .计次循环首 (取字段数 (), 容器2)
        .如果真 (等于 (.选中, 真))
            相加 (到文本 (读字段 (容器2, )), “  ”, “  ”).加入文本 ()
        .如果真结束
        .如果真 (等于 (.选中, 真))
            取文本左边 (相加 (到文本 (读字段 (容器2, )), 取空白文本 (到数值 (.内容))), 到数值 (.内容)).加入文本 ()
        .如果真结束
        .如果真 (等于 (.选中, 真))
            相加 (到文本 (读字段 (容器2, )), .内容).加入文本 ()
        .如果真结束
        
    .计次循环尾 ()
    #换行符.加入文本 ()
    跳过 ()
.计次循环尾 ()
关闭 (.内容)

.子程序 _按钮2_被单击, 空白型, , 
赋值 (.标题, “请输入欲转换的EDB易语言数据文件名：”)
赋值 (.文件名, 取文本注册表项 (#数据库管理器, #用户习惯, “上次打开数据库”, ))
.如果真 (等于 (打开 (), 真))
    写注册表项 (#数据库管理器, #用户习惯, “上次打开数据库”, .文件名)
    赋值 (.内容, .文件名)
    .如果 (等于 (.选中, 真))
        赋值 (.内容, 子文本替换 (.内容, “.EDB”, “.CSV”, 1, , 假))
    .否则
        赋值 (.内容, 子文本替换 (.内容, “.EDB”, “.TXT”, 1, , 假))
    .如果结束
    
.如果真结束


.子程序 _按钮1_被单击, 空白型, , 
赋值 (.内容, “”)
显示 ()
保存文件 ()

.子程序 _按钮3_被单击, 空白型, , 
打开 ()
赋值 (.内容, .文件名)

.子程序 保存文件, 逻辑型, , 
.参数 文件名, 文本型, 可空, 

.局部变量 文件号, 整数型, , , 
.局部变量 现在文件名, 文本型, 静态, , 
.局部变量 rq66, 整数型, , , 

.如果真 (等于 (.内容, “”))
    信息框 (“请先选择数据库”, 0, )
    返回 (假)
.如果真结束


赋值 (文件号, 打开文件 (.内容, #重写, ))
.如果 (不等于 (文件号, 0))
    写出文本 (文件号, .内容)
    关闭文件 (文件号)
    信息框 (“保存文件成功”, 0, )
    返回 (真)
    赋值 (0)
.否则
    信息框 (“保存文件失败”, #警告图标, )
    返回 (假)
.如果结束



.子程序 _编辑框4_内容被改变, 空白型, , 
.如果 (等于 (.选中, 真))
    信息框 (“未选中本选项，不能输入”, 0, )
    赋值 (.选中, 假)
    赋值 (.选中, 真)
.否则
    赋值 (.内容, “”)
    赋值 (.内容, “”)
.如果结束


.子程序 _单选框1_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (不等于 (.内容, “”))
    赋值 (.内容, 子文本替换 (.内容, “.EDB”, “.TXT”, 1, , 假))
.如果真结束


.子程序 _按钮4_被单击, 空白型, , 
赋值 (.左边, 8)
赋值 (.顶边, 8)
赋值 (.宽度, 472)
赋值 (.高度, 344)

赋值 (.内容, “”)
显示 ()

.如果 (等于 (.可视, 真))
    赋值 (.可视, 假)
.否则
    赋值 (.可视, 真)
.如果结束


.子程序 _单选框2_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (不等于 (.内容, “”))
    赋值 (.内容, 子文本替换 (.内容, “.EDB”, “.TXT”, 1, , 假))
.如果真结束


.子程序 _单选框3_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (不等于 (.内容, “”))
    赋值 (.内容, 子文本替换 (.内容, “.EDB”, “.CSV”, 1, , 假))
.如果真结束


.子程序 _易库转CSV窗口_创建完毕, 空白型, , 
全部关闭 ()


.子程序 _易库转CSV窗口_可否被关闭, 逻辑型, , 
全部关闭 ()


.窗口程序集 窗口程序集11, , , 

.子程序 _按钮1_被单击, 空白型, , 
.局部变量 字段表, 字段信息, , "0", 
.局部变量 字段, 字段信息, , , 
.局部变量 类型, 文本型, , , 
.局部变量 计数, 整数型, , , 

关闭 ()
赋值 (.内容, “”)
赋值 (.内容, “”)
赋值 (.内容, “”)
赋值 (.内容, “”)
赋值 (.文本颜色, #白色)
赋值 (.背景颜色, #青蓝)
赋值 (.文本颜色, #白色)
赋值 (.背景颜色, #青蓝)
赋值 (.文本颜色, #白色)
赋值 (.背景颜色, #青蓝)
赋值 (.文本颜色, #白色)
赋值 (.背景颜色, #青蓝)

.如果真 (等于 (打开 (.内容, , 真, #禁止读写, , “?”, ), 假))
    信息框 (相加 (“打开数据库文件”, #左引号, .内容, #右引号, “失败！”), #错误图标, “错误”)
    返回 ()
.如果真结束
清除数组 (字段表)
.计次循环首 (取字段数 (), 计数)
    赋值 (字段.名称, 取字段名 (计数))
    赋值 (字段.类型, 取字段类型 (计数))
    赋值 (字段.最大文本长度, 选择 (等于 (字段.类型, #文本型), 取字段尺寸 (计数), 0))
    加入成员 (字段表, 字段)
.计次循环尾 ()
赋值 (计数, 1)
相加 (“局部容器：字段    数据类型：字段信息      数组：”, 到文本 (取字段数 ()), #换行符).加入文本 ()
#换行符.加入文本 ()
相加 (“如果真 (文件是否存在 (”, #左引号, .内容, #右引号, “) ＝ 假)”, #换行符).加入文本 ()
.计次循环首 (取字段数 (), 计数)
    相加 (“  字段 [”, 到文本 (计数), “].名称 ＝ #”, 取字段名 (计数), #换行符).加入文本 ()
    .如果真 (等于 (取字段类型 (计数), 1))
        赋值 (类型, “字节型”)
    .如果真结束
    .如果真 (等于 (取字段类型 (计数), 2))
        赋值 (类型, “短整数型”)
    .如果真结束
    .如果真 (等于 (取字段类型 (计数), 3))
        赋值 (类型, “整数型”)
    .如果真结束
    .如果真 (等于 (取字段类型 (计数), 4))
        赋值 (类型, “长整数型”)
    .如果真结束
    .如果真 (等于 (取字段类型 (计数), 5))
        赋值 (类型, “小数型”)
    .如果真结束
    .如果真 (等于 (取字段类型 (计数), 6))
        赋值 (类型, “双精度小数型”)
    .如果真结束
    .如果真 (等于 (取字段类型 (计数), 7))
        赋值 (类型, “逻辑型”)
    .如果真结束
    .如果真 (等于 (取字段类型 (计数), 8))
        赋值 (类型, “日期时间型”)
    .如果真结束
    .如果真 (等于 (取字段类型 (计数), 10))
        赋值 (类型, “文本型”)
    .如果真结束
    .如果真 (等于 (取字段类型 (计数), 11))
        赋值 (类型, “字节集型”)
    .如果真结束
    .如果真 (等于 (取字段类型 (计数), 12))
        赋值 (类型, “备注型”)
    .如果真结束
    
    相加 (“  字段 [”, 到文本 (计数), “].类型 ＝ #”, 类型, #换行符).加入文本 ()
    .如果真 (等于 (类型, “文本型”))
        相加 (“  字段 [”, 到文本 (计数), “].最大文本长度 ＝ ”, 到文本 (取字段尺寸 (计数)), #换行符).加入文本 ()
    .如果真结束
    
.计次循环尾 ()



相加 (“  如果真 (创建 (”, #左引号, .内容, #右引号, “, 字段) ＝ 假)”, #换行符).加入文本 ()
相加 (“    信息框 (”, #左引号, “创建数据库失败！”, #右引号, “ , #错误图标, ”, #右引号, “错误”, #右引号, “ )”, #换行符).加入文本 ()
相加 (“    结束 ()”, #换行符).加入文本 ()
#换行符.加入文本 ()

相加 (“如果真 (打开 (”, #左引号, .内容, #右引号, “, , , , ,”, #左引号, “?”, #右引号, “ , ) ＝ 假)”, #换行符).加入文本 ()
相加 (“  信息框 (”, #左引号, “无法打开数据库！”, #右引号, “ , #错误图标, ”, #右引号, “错误”, #右引号, “ )”, #换行符).加入文本 ()
相加 (“  结束 ()”, #换行符).加入文本 ()
#换行符.加入文本 ()

到首记录 ()


赋值 (.内容, “如果真 (加记录 (”)
.计次循环首 (取字段数 (), 计数)
    .如果真 (等于 (取字段类型 (计数), 1))
        赋值 (类型, “字节型”)
        “到字节(”.加入文本 ()
    .如果真结束
    .如果真 (等于 (取字段类型 (计数), 2))
        赋值 (类型, “短整数型”)
        “到数值(”.加入文本 ()
    .如果真结束
    .如果真 (等于 (取字段类型 (计数), 3))
        赋值 (类型, “整数型”)
        “到数值(”.加入文本 ()
    .如果真结束
    .如果真 (等于 (取字段类型 (计数), 4))
        赋值 (类型, “长整数型”)
        “到数值(”.加入文本 ()
    .如果真结束
    .如果真 (等于 (取字段类型 (计数), 5))
        赋值 (类型, “小数型”)
        “到数值(”.加入文本 ()
    .如果真结束
    .如果真 (等于 (取字段类型 (计数), 6))
        赋值 (类型, “双精度小数型”)
        “到数值(”.加入文本 ()
    .如果真结束
    .如果真 (等于 (取字段类型 (计数), 7))
        赋值 (类型, “逻辑型”)
        “到文本(”.加入文本 ()
    .如果真结束
    .如果真 (等于 (取字段类型 (计数), 8))
        赋值 (类型, “日期时间型”)
        “到日期(”.加入文本 ()
    .如果真结束
    .如果真 (等于 (取字段类型 (计数), 11))
        赋值 (类型, “字节集型”)
        “到字节集(”.加入文本 ()
    .如果真结束
    .如果真 (等于 (取字段类型 (计数), 12))
        赋值 (类型, “备注型”)
        “到备注(”.加入文本 ()
        
    .如果真结束
    “编辑框”.加入文本 ()
    赋值 (.标记, 选择 (等于 (取字段类型 (计数), 10), “.内容) ”, “.内容 ”))
    相加 (取字段名 (计数), 选择 (等于 (取字段类型 (计数), 10), “.内容”, “.内容)”)).加入文本 ()
    .如果真 (不等于 (计数, 取字段数 ()))
        “, ”.加入文本 ()
    .如果真结束
    
.计次循环尾 ()

相加 (“) = 假）”, #换行符, “  信息框（”, #左引号, “添加数据库记录失败！”, #右引号, “ , #错误图标, ”, #右引号, “错误”, #右引号, “ )”, #换行符).加入文本 ()
相加 (“  ※备注：前提是――您已在一个窗口中将数据库所有的字段对应放置了一组编辑框，并且编辑框的命名为”, #左引号, “编辑框+字段名”, #右引号).加入文本 ()


赋值 (.内容, 子文本替换 (.内容, “加记录”, “修改”, , , 真))
赋值 (.内容, 子文本替换 (.内容, “添加”, “修改”, , , 真))

赋值 (.内容, 相加 (“如果真 (首记录前 () ＝ 假 且 尾记录后 () ＝ 假 且 信息框 (”, #左引号, “你真的要删除当前的资料吗？”, #右引号, “, #询问图标 ＋ #是否钮 ＋ #默认按钮二, ) ＝ #是钮)”, #换行符, “   删除 ()   ”, #换行符, “   彻底删除 ()   ”, #换行符, “   到首记录 ()    ”))
关闭 ()


.子程序 _按钮2_被单击, 空白型, , 
赋值 (.初始目录, 取当前目录 ())
赋值 (.文件名, 取文本注册表项 (#数据库管理器, #用户习惯, “上次打开数据库”, ))
.如果真 (等于 (打开 (), 真))
    写注册表项 (#数据库管理器, #用户习惯, “上次打开数据库”, .文件名)
    打开 (.文件名, , , , , “?”, )
    赋值 (.内容, .文件名)
.如果真结束



.子程序 _编辑框1_内容被改变, 空白型, , 
赋值 (.禁止, 假)

.子程序 _选择夹1_被单击, 空白型, , 


.子程序 _易数据库代码直接生成器窗口_创建完毕, 空白型, , 
全部关闭 ()


.窗口程序集 窗口程序集12, , , 

.子程序 _按钮1_被单击, 空白型, , 
载入 (拆分易库窗口, , 真)

.子程序 _按钮2_被单击, 空白型, , 
载入 (合并易库窗口, , 真)

.窗口程序集 窗口程序集13, , , 

.子程序 _按钮1_被单击, 空白型, , 
.局部变量 记录号范围1, 整数型, , , 
.局部变量 记录号范围2, 整数型, , , 
.局部变量 数据名称, 文本型, , , 
.局部变量 复制条件, 文本型, , , 
.局部变量 字段范围, 文本型, , , 
.局部变量 当前数据库, 文本型, , , 
.局部变量 副数据库, 文本型, , , 
.局部变量 主数据库, 文本型, , , 

全部关闭 ()
.如果真 (或者 (等于 (删首尾空 (.内容), “”), 等于 (删首尾空 (.内容), “”)))
    信息框 (“请先选择两个数据库.”, 0, )
    返回 ()
.如果真结束
赋值 (.内容)
.如果真 (等于 (打开 (副数据库, “bb”, , , , “?”, ), 假))
    信息框 (相加 (“打开副数据库 ”, 副数据库, “ 失败!”), 0, )
.如果真结束
赋值 (.内容)
赋值 (.内容)

赋值 (记录号范围1, 相减 (到数值 (.内容), 1))
赋值 (记录号范围2, 相加 (到数值 (.内容), 1))

.如果 (等于 (复制记录 (主数据库, 并且 (大于 (取记录号 (), 记录号范围1), 小于 (取记录号 (), 记录号范围2)), 字段范围), 真))
    信息框 (相加 (“新数据库：”, 主数据库, “已成功生成!”), 0, “操作成功”)
.否则
    信息框 (“拆分失败！”, 0, “操作失败”)
    
.如果结束


.子程序 _按钮4_被单击, 空白型, , 
.局部变量 容器1, 空白型, , , 
.局部变量 字段, 字段信息, , , 

赋值 (.类型, 0)
赋值 (.标题, “请输入欲打开的数据库文件名：”)
赋值 (.文件名, 取文本注册表项 (#数据库管理器, #用户习惯, “上次打开数据库”, ))
.如果真 (等于 (打开 (), 假))
    返回 ()
.如果真结束
写注册表项 (#数据库管理器, #用户习惯, “上次打开数据库”, .文件名)
赋值 (.内容, .文件名)
.如果真 (不等于 (.内容, “”))
    赋值 (.内容, 子文本替换 (.内容, “.EDB”, “2.EDB”, 1, , 假))
.如果真结束

赋值 (.内容, “”)
.如果真 (等于 (打开 (.文件名, , 真, #禁止读写, , “?”, ), 假)) ' 打开数据库
    信息框 (相加 (“打开数据库文件”, #左引号, .文件名, #右引号, “失败！”), #错误图标, “错误”)
    返回 ()
.如果真结束

赋值 (.内容, 到文本 (取记录数 ()))
赋值 (.内容, 到文本 (取记录数 ()))

.计次循环首 (取字段数 (), 容器1)
    赋值 (字段.名称, 取字段名 (容器1))
    赋值 (字段.类型, 取字段类型 (容器1))
    赋值 (字段.最大文本长度, 选择 (等于 (字段.类型, #文本型), 取字段尺寸 (容器1), 0))
    赋值 (.内容, 相加 (.内容, 字段.名称))
    .如果真 (不等于 (容器1, 取字段数 ()))
        赋值 (.内容, 相加 (.内容, “,”))
    .如果真结束
    
.计次循环尾 ()
赋值 (.内容, .内容)

.子程序 _编辑框5_内容被改变, 空白型, , 
赋值 (.内容, .内容)


.子程序 _拆分易库窗口_可否被关闭, 逻辑型, , 
全部关闭 ()

.窗口程序集 合并窗口程序集, , , 

.子程序 _按钮1_被单击, 空白型, , 
.局部变量 记录号范围1, 整数型, , , 
.局部变量 记录号范围2, 整数型, , , 
.局部变量 副数据库, 文本型, , , 
.局部变量 复制条件, 文本型, , , 
.局部变量 字段范围, 文本型, , , 
.局部变量 主数据库, 文本型, , , 

全部关闭 ()
.如果真 (或者 (等于 (删首尾空 (.内容), “”), 等于 (删首尾空 (.内容), “”)))
    信息框 (“请先选择两个数据库.”, 0, )
    返回 ()
.如果真结束
赋值 (副数据库, .内容)
.如果真 (等于 (打开 (副数据库, “bb”, , , , “?”, ), 假))
    信息框 (相加 (“打开副数据库 ”, 副数据库, “ 失败!”), 0, )
.如果真结束
赋值 (字段范围, .内容)
赋值 (主数据库, .内容)
.如果真 (等于 (打开 (主数据库, “ii”, , , , “?”, ), 假))
    信息框 (相加 (“打开主数据库 ”, 主数据库, “ 失败!”), 0, )
.如果真结束
置当前库 (主数据库)

赋值 (记录号范围1, 相减 (到数值 (.内容), 1))
赋值 (记录号范围2, 相加 (到数值 (.内容), 1))

.如果 (等于 (添加 (“bb”, 并且 (大于 (取记录号 (), 记录号范围1), 小于 (取记录号 (), 记录号范围2)), 字段范围), 真))
    信息框 (相加 (“添加记录成功！”, 主数据库, “已成功增加了记录!”), 0, “操作成功”)
.否则
    信息框 (“添加失败！”, #错误图标, “操作失败”)
.如果结束


.子程序 _按钮3_被单击, 空白型, , 
.局部变量 容器1, 空白型, , , 
.局部变量 字段, 字段信息, , , 

赋值 (.类型, 0)
赋值 (.标题, “请输入欲打开的数据库文件名：”)
赋值 (.文件名, 取文本注册表项 (#数据库管理器, #用户习惯, “上次打开数据库”, ))
.如果真 (等于 (打开 (), 假))
    返回 ()
.如果真结束
写注册表项 (#数据库管理器, #用户习惯, “上次打开数据库”, .文件名)
赋值 (.内容, .文件名)
赋值 (.内容, “”)
.如果真 (等于 (打开 (.文件名, , 真, #禁止读写, , “?”, ), 假)) ' 打开数据库
    信息框 (相加 (“打开数据库文件”, #左引号, .文件名, #右引号, “失败！”), #错误图标, “错误”)
    返回 ()
.如果真结束

编辑框8.内容 ＝ 到文本 (取记录数 ())
清除数组 (字段表)

.计次循环首 (取字段数 (), 容器1)
    赋值 (字段.名称, 取字段名 (容器1))
    赋值 (字段.类型, 取字段类型 (容器1))
    赋值 (字段.最大文本长度, 选择 (等于 (字段.类型, #文本型), 取字段尺寸 (容器1), 0))
    赋值 (.内容, 相加 (.内容, 字段.名称))
    .如果真 (不等于 (容器1, 取字段数 ()))
        赋值 (.内容, 相加 (.内容, “,”))
    .如果真结束
    加入成员 (字段表, 字段)
    字段列表框.加入项目 (字段.名称, 容器1)
.计次循环尾 ()
是否需要转存数据 ＝ 取记录数 () ＞ 0
关闭 ()
复制数组 (备份字段表, 字段表)
字段列表框.现行选中项 ＝ 0
填充字段数据 ()
设置窗口标题 ()
显示字段数 ()
字段名编辑框.获取焦点 ()



.子程序 _按钮4_被单击, 空白型, , 
.局部变量 容器1, 空白型, , , 
.局部变量 字段, 字段信息, , , 

赋值 (.类型, 0)
赋值 (.标题, “请输入欲打开的数据库文件名：”)
赋值 (.文件名, 取文本注册表项 (#数据库管理器, #用户习惯, “上次打开数据库”, ))
.如果真 (等于 (打开 (), 假))
    返回 ()
.如果真结束
写注册表项 (#数据库管理器, #用户习惯, “上次打开数据库”, .文件名)
赋值 (.内容, .文件名)
赋值 (.内容, “”)
.如果真 (等于 (打开 (.文件名, , 真, #禁止读写, , “?”, ), 假)) ' 打开数据库
    信息框 (相加 (“打开数据库文件”, #左引号, .文件名, #右引号, “失败！”), #错误图标, “错误”)
    返回 ()
.如果真结束

赋值 (.内容, 到文本 (取记录数 ()))
赋值 (.内容, 到文本 (取记录数 ()))
清除数组 (字段表)

.计次循环首 (取字段数 (), 容器1)
    赋值 (字段.名称, 取字段名 (容器1))
    赋值 (字段.类型, 取字段类型 (容器1))
    赋值 (字段.最大文本长度, 选择 (等于 (字段.类型, #文本型), 取字段尺寸 (容器1), 0))
    赋值 (.内容, 相加 (.内容, 字段.名称))
    .如果真 (不等于 (容器1, 取字段数 ()))
        赋值 (.内容, 相加 (.内容, “,”))
    .如果真结束
    加入成员 (字段表, 字段)
    字段列表框.加入项目 (字段.名称, 容器1)
.计次循环尾 ()
是否需要转存数据 ＝ 取记录数 () ＞ 0
关闭 ()
复制数组 (备份字段表, 字段表)
字段列表框.现行选中项 ＝ 0
填充字段数据 ()
设置窗口标题 ()
显示字段数 ()
字段名编辑框.获取焦点 ()
赋值 (.内容, .内容)

.子程序 _合并易库窗口_创建完毕, 空白型, , 
全部关闭 ()


.子程序 _合并易库窗口_可否被关闭, 逻辑型, , 
全部关闭 ()


.窗口程序集 窗口程序集15, , , 

.子程序 _按钮3_被单击, 空白型, , 
信息框 (相加 (“这只是个想法,还没有成为事实!”, #换行符, “当成为事实时,你再用它也不迟!”), 0, )

.子程序 _万能转换窗口_创建完毕, 空白型, , 
全部关闭 ()


.子程序 _万能转换窗口_可否被关闭, 逻辑型, , 
全部关闭 ()


.子程序 _按钮1_被单击, 空白型, , 
信息框 (相加 (“用直接转换模块，将Excel电子表直接转换为易语言的数据库，十分方便呀！本功能正在开发之中。”, #换行符, “如果本功能还未有实现，请先使用将Excel表另存为CSV再转换为易语言的数据库功能。”), 0, )


.窗口程序集 窗口程序集10, , , 

.子程序 _按钮1_被单击, 空白型, , 
.局部变量 fo, 字段信息, , "104", 限定数据库100个字段，可更改
.局部变量 i, 整数型, , , 
.局部变量 mmm, 文本型, , "10", 数据库文件存放
.局部变量 k, 整数型, , , 
.局部变量 n, 整数型, , , 
.局部变量 记录数, 整数型, , , 
.局部变量 字段数, 整数型, , , 
.局部变量 字段记录, 文本型, , "10", 

.如果真 (等于 (文件是否存在 (“edatabase.edb”), 假))
    赋值 (fo [1].名称, “数据库名”)
    赋值 (fo [1].类型, 10)
    赋值 (fo [1].最大文本长度, 50)
    赋值 (fo [2].名称, “记录数”)
    赋值 (fo [2].类型, 10)
    赋值 (fo [2].最大文本长度, 2)
    赋值 (fo [3].名称, “字段数”)
    赋值 (fo [3].类型, 10)
    赋值 (fo [3].最大文本长度, 2)
    .计次循环首 (100, i)
        赋值 (fo [相加 (i, 3)].名称, 相加 (“字段”, 到文本 (相加 (i, 3))))
        赋值 (fo [相加 (i, 3)].类型, 10)
        赋值 (fo [相加 (i, 3)].最大文本长度, 25)
    .计次循环尾 ()
    创建 (“edatabase.edb”, fo)
    
.如果真结束

赋值 (i, 未知函数_67176684 (.被选择文件, “;”, 假, 真))
重定义数组 (mmm, 假, 相加 (i, 1))
赋值 (mmm, 分割文本 (.被选择文件, “;”, ))
.计次循环首 (相加 (i, 1), k)
    打开 (相加 (.目录, “\”, mmm [k]), , , , , “?”, )
    赋值 (记录数, 取记录数 ())
    赋值 (字段数, 取字段数 ())
    重定义数组 (字段记录, 假, 字段数)
    .计次循环首 (字段数, n)
        赋值 (字段记录 [n], 相加 (取字段名 (n), “ ”, 多项选择 (取字段类型 (n), “#字节型”, “#短整数型”, “#整数型”, “#长整数型”, “#小数型”, “#双精度小数型”, “#逻辑型”, “#日期时间型”, “”, “#文本型”, “#字节集型”, “#备注型”), “ ”, 到文本 (取字段尺寸 (n))))
    .计次循环尾 ()
    关闭 ()
    打开 (“edatabase.edb”, , , , , “?”, )
    加空记录 ()
    赋值 (.标题, 到文本 (取记录数 ()))
    替换 (“数据库名”, 相加 (.目录, “\”, mmm [k]), “记录数”, 到文本 (记录数), “字段数”, 到文本 (字段数))
    .计次循环首 (字段数, n)
        替换 (相加 (“字段”, 到文本 (相加 (n, 3))), 字段记录 [n])
    .计次循环尾 ()
    关闭 ()
.计次循环尾 ()
信息框 (“加入完毕”, 0, )
全部关闭 ()

.子程序 _驱动器框1_驱动器被改变, 空白型, , 
连续赋值 (相加 (.驱动器, “:\”), .目录)

.子程序 _目录框1_目录被改变, 空白型, , 
赋值 (.目录, .目录)

.子程序 _库结构打印_创建完毕, 空白型, , 
连续赋值 (驱动器框1.驱动器 ＋ “:”, 目录框1.目录)
连续赋值 (驱动器框1.驱动器 ＋ “:\”, 目录框1.目录, 文件框1.目录)
连续赋值 (目录框1.目录, 文件框1.目录)
赋值 (.目录, .目录)

.子程序 _按钮2_被单击, 空白型, , 
打开 (“edatabase”, , , , , “?”, )
赋值 (.标题, 到文本 (取记录数 ()))
编辑 ()
全部关闭 ()

.子程序 _按钮3_被单击, 空白型, , 
载入 (print, , 真)

.子程序 重复文本次数, 整数型, , 用于统计一段文本中含有某个字词次数，暂不支持中英文混合。使用方法：重复文本次数（被搜索文本，搜索文本，英中，区别大小写），后两个参数为逻辑型，“英中”为真时是中文文本。　　

.参数 被搜索内容, 文本型, , 
.参数 搜索内容, 文本型, , 
.参数 英中, 逻辑型, , 
.参数 区别大小写, 逻辑型, , 

.局部变量 bb, 整数型, , , 次数
.局部变量 cc, 整数型, , , 位置

赋值 (cc, 寻找文本 (被搜索内容, 搜索内容, , 区别大小写))
.如果 (大于 (cc, 0))
    .判断循环首 (不等于 (cc, -1))
        赋值 (cc, 寻找文本 (被搜索内容, 搜索内容, 选择 (英中, 相加 (cc, 2), 相加 (cc, 1)), 区别大小写))
        赋值 (bb, 相加 (bb, 1))
    .判断循环尾 ()
.否则
    赋值 (bb, 0)
.如果结束
返回 (bb)

.子程序 _按钮4_被单击, 空白型, , 
打开 (“edatabase”, , , , , “?”, )
.如果真 (等于 (信息框 (“是否清空？”, 36, “清空本数据库”), 5))
    清空 ()
    赋值 (.标题, “0”)
.如果真结束
全部关闭 ()

.子程序 _文件框1_选择文件被改变, 空白型, , 
赋值 (.内容, 相加 (.目录, “\”, .被选择文件))


.子程序 _文件框1_双击选择, 空白型, , 
赋值 (.内容, 相加 (.目录, “\”, .被选择文件))
_按钮1_被单击 ()

.窗口程序集 窗口程序集14, , , 

.子程序 _print_创建完毕, 空白型, , 
.局部变量 打印设置, 打印设置信息, , , 
.局部变量 列数, 整数型, , , 
.局部变量 容器1, 整数型, , , 

全部关闭 ()
.如果真 ()

.子程序 填充, 空白型, , 
.局部变量 i, 整数型, , , 

1.置文本 (1, 到文本 (取记录号 ()))
3.置文本 (4, 读 (1))
3.置文本 (7, 读 (2))
3.置文本 (8, 读 (3))
.计次循环首 (7, i)
    5.置文本 (i, 读 (相加 (3, i)))
.计次循环尾 ()
.计次循环首 (7, i)
    7.置文本 (i, 读 (相加 (10, i)))
.计次循环尾 ()
.计次循环首 (7, i)
    9.置文本 (i, 读 (相加 (17, i)))
.计次循环尾 ()
.计次循环首 (7, i)
    11.置文本 (i, 读 (相加 (24, i)))
.计次循环尾 ()


.窗口程序集 窗口程序集1, , , 

.程序集变量 易语言数据库名, 文本型, , , 
.程序集变量 Access数据库名, 文本型, , , 
.程序集变量 表名称, 文本型, , , 
.子程序 _易库转微软库窗口_创建完毕, 空白型, , 
赋值 (表名称, “table”)

.子程序 _退出_被单击, 空白型, , 
.如果真 (等于 (信息框 (“真的要退出吗？”, 相加 (#信息图标, #确认取消钮), “询问”), #确认钮))
    销毁 ()
.如果真结束


.子程序 _关于_被单击, 空白型, , 
载入 (关于窗口1, 易库转微软库窗口, 真)

.子程序 _上一步_被单击, 空白型, , 
赋值 (.现行子夹, 相减 (.现行子夹, 1))
未知函数_67176967 ()

.子程序 _下一步_被单击, 空白型, , 
赋值 (.现行子夹, 相加 (.现行子夹, 1))
未知函数_67176967 ()

.子程序 _选择易语言数据库_被单击, 空白型, , 
赋值 (.标题, “选择易语言数据库”)
赋值 (.过滤器, “易语言数据库（*.edb）|*.edb”)
.如果真 (打开 ())
    赋值 (.标题, 相加 (“已经选择了文件:”, #换行符, .文件名))
    赋值 (易语言数据库名, .文件名)
.如果真结束


.子程序 _选择Access数据库_被单击, 空白型, , 
赋值 (.标题, “选择 Access 数据库”)
赋值 (.过滤器, “Access 数据库（*.mdb）|*.mdb”)
.如果真 (打开 ())
    赋值 (.标题, 相加 (“已经选择了文件:”, #换行符, .文件名, #换行符, “表名称:”, 表名称))
    赋值 (Access数据库名, .文件名)
.如果真结束


.子程序 _编辑框_内容被改变, 空白型, , 
赋值 (表名称, .内容)
赋值 (.标题, 相加 (“已经选择了文件:”, #换行符, .文件名, #换行符, “表名称:”, 表名称))

.子程序 _转换_被单击, 空白型, , 
.判断开始 (等于 (易语言数据库名, “”))
    信息框 (“请选择要转换的易语言数据库。”, #信息图标, “提示”)
    返回 ()
.判断 (等于 (Access数据库名, “”))
    信息框 (“请选择要转换的 Access 数据库。”, #信息图标, “提示”)
    返回 ()
.判断 (等于 (.内容, “”))
    信息框 (“请输入表名称。”, #信息图标, “提示”)
    返回 ()
.默认
    
.判断结束
转换 ()

.子程序 _转换另一个数据库_被单击, 空白型, , 
赋值 (.现行子夹, 0)
未知函数_67176967 ()

.子程序 设定, 空白型, , 
赋值 (.标题, 相加 (“第 ”, 到文本 (相加 (.现行子夹, 1)), “ 步”))
.如果 (等于 (.现行子夹, 0))
    赋值 (.禁止, 真)
.否则
    赋值 (.禁止, 假)
.如果结束
.如果 (大于或等于 (.现行子夹, 2))
    赋值 (.禁止, 真)
.否则
    赋值 (.禁止, 假)
.如果结束


.子程序 转换, 空白型, , 
.局部变量 SQL, 文本型, , , 
.局部变量 字段数, 整数型, , , 
.局部变量 记录数, 整数型, , , 
.局部变量 字段名, 文本型, , , 
.局部变量 字段类型, 整数型, , , 

.如果真 (等于 (打开 (易语言数据库名, , , , , “?”, ), 假))
    信息框 (“打开易语言数据库失败！”, #信息图标, “失败”)
    返回 ()
.如果真结束
赋值 (SQL, 相加 (“CREATE TABLE ”, 表名称, “ (”))
赋值 (字段名, “”)
.变量循环首 (1, 取字段数 (), 1, 字段数)
    赋值 (SQL, 相加 (SQL, 取字段名 (字段数), “ ”))
    赋值 (字段名, 相加 (字段名, “[”, 取字段名 (字段数), “]”))
    赋值 (字段类型, 取字段类型 (字段数))
    .如果 (等于 (字段类型, 10))
        赋值 (SQL, 相加 (SQL, “text null”))
    .否则
        信息框 (“不支持非文本字段，不能进行转换”, #信息图标, “提示”)
        关闭 ()
        返回 ()
    .如果结束
    .如果真 (小于 (字段数, 取字段数 ()))
        赋值 (SQL, 相加 (SQL, “,”))
        赋值 (字段名, 相加 (字段名, “,”))
    .如果真结束
    
.变量循环尾 ()
赋值 (SQL, 相加 (SQL, “)”))
.如果真 (等于 (相加 (“ODBC;DBQ=”, Access数据库名, “;Driver={Microsoft Access Driver (*.mdb)};DriverId=25;FIL=MS Access;MaxBufferSize=2048;PageTimeout=5;UID=admin;”).打开 (), 假))
    信息框 (“打开 Access 数据库失败！”, #信息图标, “失败”)
    关闭 ()
    返回 ()
.如果真结束
.如果真 (不等于 (相加 (“select * from ”, 表名称).查询 (), 0))
    信息框 (“您输入的表名称已经在数据库中存在，请输入另外的表名称。”, #信息图标, “提示”)
    关闭 ()
    关闭 ()
    赋值 (.现行子夹, 1)
    赋值 (.被选择字符数, 取文本长度 (.内容))
    获取焦点 ()
    赋值 (.禁止, 假)
    返回 ()
.如果真结束
.如果真 (等于 (SQL.执行 (), 假))
    信息框 (“创建字段失败！”, #信息图标, “失败”)
    关闭 ()
    关闭 ()
    返回 ()
.如果真结束
到首记录 ()
.变量循环首 (1, 取记录数 (), 1, 记录数)
    赋值 (SQL, 相加 (“INSERT INTO ”, 表名称, “ (”, 字段名, “) values (”))
    .变量循环首 (1, 取字段数 (), 1, 字段数)
        赋值 (SQL, 相加 (SQL, “ '”, 读 (字段数), “'”))
        .如果真 (小于 (字段数, 取字段数 ()))
            赋值 (SQL, 相加 (SQL, “,”))
        .如果真结束
        
    .变量循环尾 ()
    赋值 (SQL, 相加 (SQL, “)”))
    .如果真 (等于 (SQL.执行 (), 假))
        信息框 (相加 (“转换第 ”, 到文本 (记录数), “ 条记录失败！”), #信息图标, “失败”)
        关闭 ()
        关闭 ()
        返回 ()
    .如果真结束
    跳过 ()
.变量循环尾 ()
关闭 ()
关闭 ()
赋值 (.标题, 相加 (“    已经成功地将易语言数据库”, #引号, 易语言数据库名, #引号, “转换到了 Access 数据库”, #引号, Access数据库名, #引号, “中的表”, #引号, 表名称, #引号, “中！”, #换行符, #换行符, “    请退出或转换另一个数据库。”))
赋值 (.现行子夹, 3)

.窗口程序集 窗口程序集16, , , 

.子程序 _关于窗口1_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

销毁 ()

.窗口程序集 窗口程序集17, , , 

.子程序 _易语言数据库转换器_创建完毕, 空白型, , 
赋值 (易语言数据库转换器.左边, 0)
赋值 (易语言数据库转换器.顶边, 0)

易语言数据库转换器.置外形图片 (#界面, #红色)
赋值 (易语言数据库转换器.底图, #界面)
运行 (“Dbcnv.exe”, 假, )


.子程序 _按钮0_被单击, 空白型, , 
运行 (“Dbcnv.exe”, 假, )


.子程序 _按钮1_被单击, 空白型, , 
赋值 (.标题, “首先,新建一个,点击创建数据源.找到您所要转换为易语言数据库的其它类型数据库格式.”)


.子程序 _按钮A_被单击, 空白型, , 
销毁 ()

.窗口程序集 易之表计算器窗口程序集, , , 

.程序集变量 内存容器, 文本型, , , 
.程序集变量 计算结果暂时容器, 文本型, , , 
.程序集变量 重新计算累计, 逻辑型, , , 
.程序集变量 首次单击, 逻辑型, , , 
.程序集变量 算术符号码, 整数型, , , 1为加，2为减，3为乘，4为除
.子程序 __启动窗口_创建完毕, 空白型, , 
赋值 (重新计算累计, 真)
赋值 (首次单击, 真)
赋值 (算术符号码, 1)


赋值 (.标题, “0”)
赋值 (.标题, “”)
赋值 (计算结果暂时容器, “”)
赋值 (重新计算累计, 假)
获取焦点 ()
赋值 (算术符号码, 1)
赋值 (首次单击, 真)


.子程序 _储存_被单击, 空白型, , 
赋值 (.标题, “存入数据”)
赋值 (内存容器, .标题)
获取焦点 ()

.子程序 _读出_被单击, 空白型, , 
赋值 (.标题, 内存容器)
赋值 (重新计算累计, 真)
获取焦点 ()

.子程序 _清除_被单击, 空白型, , 
赋值 (.标题, “”)
赋值 (内存容器, “”)
获取焦点 ()

.子程序 _退出_被单击, 空白型, , 
销毁 ()

.子程序 _退格_被单击, 空白型, , 
赋值 (.标题, 取文本左边 (.标题, 相减 (取文本长度 (删首尾空 (.标题)), 1)))
获取焦点 ()

.子程序 _按钮1_被单击, 空白型, , 
.如果真 (等于 (重新计算累计, 假))
    赋值 (.标题, “0”)
    赋值 (重新计算累计, 真)
.如果真结束
.如果真 (小于或等于 (取文本长度 (.标题), 19))
    .如果真 (等于 (.标题, “0”))
        赋值 (.标题, “”)
    .如果真结束
    赋值 (.标题, 删首尾空 (相加 (.标题, “1”)))
.如果真结束
获取焦点 ()

.子程序 _按钮2_被单击, 空白型, , 
.如果真 (等于 (重新计算累计, 假))
    赋值 (.标题, “0”)
    赋值 (重新计算累计, 真)
.如果真结束
.如果真 (小于或等于 (取文本长度 (.标题), 19))
    .如果真 (等于 (.标题, “0”))
        赋值 (.标题, “”)
    .如果真结束
    赋值 (.标题, 删首尾空 (相加 (.标题, “2”)))
.如果真结束
获取焦点 ()

.子程序 _按钮3_被单击, 空白型, , 
.如果真 (等于 (重新计算累计, 假))
    赋值 (.标题, “0”)
    赋值 (重新计算累计, 真)
.如果真结束
.如果真 (小于或等于 (取文本长度 (.标题), 19))
    .如果真 (等于 (.标题, “0”))
        赋值 (.标题, “”)
    .如果真结束
    赋值 (.标题, 删首尾空 (相加 (.标题, “3”)))
.如果真结束
获取焦点 ()

.子程序 _按钮4_被单击, 空白型, , 
.如果真 (等于 (重新计算累计, 假))
    赋值 (.标题, “0”)
    赋值 (重新计算累计, 真)
.如果真结束
.如果真 (小于或等于 (取文本长度 (.标题), 19))
    .如果真 (等于 (.标题, “0”))
        赋值 (.标题, “”)
    .如果真结束
    赋值 (.标题, 删首尾空 (相加 (.标题, “4”)))
.如果真结束
获取焦点 ()

.子程序 _按钮5_被单击, 空白型, , 
.如果真 (等于 (重新计算累计, 假))
    赋值 (.标题, “0”)
    赋值 (重新计算累计, 真)
.如果真结束
.如果真 (小于或等于 (取文本长度 (.标题), 19))
    .如果真 (等于 (.标题, “0”))
        赋值 (.标题, “”)
    .如果真结束
    赋值 (.标题, 删首尾空 (相加 (.标题, “5”)))
.如果真结束
获取焦点 ()

.子程序 _按钮6_被单击, 空白型, , 
.如果真 (等于 (重新计算累计, 假))
    赋值 (.标题, “0”)
    赋值 (重新计算累计, 真)
.如果真结束
.如果真 (小于或等于 (取文本长度 (.标题), 19))
    .如果真 (等于 (.标题, “0”))
        赋值 (.标题, “”)
    .如果真结束
    赋值 (.标题, 删首尾空 (相加 (.标题, “6”)))
.如果真结束
获取焦点 ()

.子程序 _按钮7_被单击, 空白型, , 
.如果真 (等于 (重新计算累计, 假))
    赋值 (.标题, “0”)
    赋值 (重新计算累计, 真)
.如果真结束
.如果真 (小于或等于 (取文本长度 (.标题), 19))
    .如果真 (等于 (.标题, “0”))
        赋值 (.标题, “”)
    .如果真结束
    赋值 (.标题, 删首尾空 (相加 (.标题, “7”)))
.如果真结束
获取焦点 ()

.子程序 _按钮8_被单击, 空白型, , 
.如果真 (等于 (重新计算累计, 假))
    赋值 (.标题, “0”)
    赋值 (重新计算累计, 真)
.如果真结束
.如果真 (小于或等于 (取文本长度 (.标题), 19))
    .如果真 (等于 (.标题, “0”))
        赋值 (.标题, “”)
    .如果真结束
    赋值 (.标题, 删首尾空 (相加 (.标题, “8”)))
.如果真结束
获取焦点 ()

.子程序 _按钮9_被单击, 空白型, , 
.如果真 (等于 (重新计算累计, 假))
    赋值 (.标题, “0”)
    赋值 (重新计算累计, 真)
.如果真结束
.如果真 (小于或等于 (取文本长度 (.标题), 19))
    .如果真 (等于 (.标题, “0”))
        赋值 (.标题, “”)
    .如果真结束
    赋值 (.标题, 删首尾空 (相加 (.标题, “9”)))
.如果真结束
获取焦点 ()

.子程序 _按钮0_被单击, 空白型, , 
.如果真 (等于 (重新计算累计, 假))
    赋值 (.标题, “0”)
    赋值 (重新计算累计, 真)
.如果真结束
.如果真 (小于或等于 (取文本长度 (.标题), 19))
    .如果真 (等于 (.标题, “0”))
        赋值 (.标题, “”)
    .如果真结束
    赋值 (.标题, 相加 (删首尾空 (.标题), “0”))
.如果真结束
获取焦点 ()

.子程序 _按钮00_被单击, 空白型, , 
.如果真 (等于 (重新计算累计, 假))
    赋值 (.标题, “0”)
    赋值 (重新计算累计, 真)
.如果真结束
.如果真 (小于或等于 (取文本长度 (.标题), 19))
    .如果 (等于 (.标题, “0”))
        赋值 (.标题, “0”)
    .否则
        赋值 (.标题, 相加 (删首尾空 (.标题), “00”))
    .如果结束
    
.如果真结束
获取焦点 ()

.子程序 _按钮点_被单击, 空白型, , 
.如果真 (等于 (重新计算累计, 假))
    赋值 (.标题, “0”)
    赋值 (重新计算累计, 真)
.如果真结束
.如果真 (小于或等于 (取文本长度 (.标题), 19))
    .如果真 (等于 (.标题, “.”))
        赋值 (.标题, “”)
    .如果真结束
    赋值 (.标题, 删首尾空 (相加 (.标题, “.”)))
.如果真结束
获取焦点 ()

.子程序 _按钮C_被单击, 空白型, , 
赋值 (.标题, “0”)
赋值 (.标题, “”)
赋值 (计算结果暂时容器, “”)
赋值 (重新计算累计, 假)
获取焦点 ()
赋值 (算术符号码, 1)
赋值 (首次单击, 真)

.子程序 _按钮等于_被单击, 空白型, , 
计算过程 ()
赋值 (算术符号码, 1)
赋值 (首次单击, 真)
赋值 (重新计算累计, 假)
赋值 (.标题, 计算结果暂时容器)
赋值 (.标题, 数值到金额 (到数值 (删首尾空 (.标题)), 真))
获取焦点 ()

.子程序 _按钮根号_被单击, 空白型, , 
赋值 (.标题, 到文本 (求平方根 (到数值 (删首尾空 (.标题)))))
获取焦点 ()

.子程序 _按钮加_被单击, 空白型, , 
计算过程 ()
赋值 (算术符号码, 1)
获取焦点 ()

.子程序 _按钮减_被单击, 空白型, , 
计算过程 ()
赋值 (算术符号码, 2)
获取焦点 ()

.子程序 _按钮乘_被单击, 空白型, , 
计算过程 ()
赋值 (算术符号码, 3)
获取焦点 ()

.子程序 _按钮除_被单击, 空白型, , 
计算过程 ()
赋值 (算术符号码, 4)
获取焦点 ()

.子程序 计算过程, 空白型, , 
.如果 (等于 (重新计算累计, 真))
    .如果 (等于 (算术符号码, 1))
        赋值 (计算结果暂时容器, 到文本 (相加 (到数值 (计算结果暂时容器), 到数值 (.标题))))
    .否则
        .如果 (等于 (算术符号码, 2))
            赋值 (计算结果暂时容器, 到文本 (相减 (到数值 (计算结果暂时容器), 到数值 (.标题))))
        .否则
            .如果 (等于 (算术符号码, 3))
                赋值 (计算结果暂时容器, 到文本 (相乘 (到数值 (计算结果暂时容器), 到数值 (.标题))))
            .否则
                .如果 (等于 (算术符号码, 4))
                    .如果 (不等于 (到数值 (.标题), 0))
                        赋值 (计算结果暂时容器, 到文本 (相除 (到数值 (计算结果暂时容器), 到数值 (.标题))))
                        赋值 (.标题, 计算结果暂时容器)
                        赋值 (重新计算累计, 假)
                    .否则
                        信息框 (“注意！被除数不能为0！”, #确认钮, “错误！”)
                        赋值 (.标题, “0”)
                        赋值 (.标题, “”)
                        赋值 (计算结果暂时容器, “”)
                        赋值 (重新计算累计, 假)
                        赋值 (首次单击, 真)
                        返回 ()
                    .如果结束
                    
                .否则
                    
                .如果结束
                
            .如果结束
            
        .如果结束
        
    .如果结束
    
    赋值 (重新计算累计, 假)
    赋值 (.标题, 计算结果暂时容器)
    返回 ()
.否则
    赋值 (重新计算累计, 假)
    赋值 (.标题, .标题)
.如果结束
获取焦点 ()
返回 ()

.子程序 _按钮1_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.判断开始 (等于 (48))
    _按钮0_被单击 ()
.判断 (等于 (49))
    _按钮1_被单击 ()
.判断 (等于 (50))
    _按钮2_被单击 ()
.判断 (等于 (51))
    _按钮3_被单击 ()
.判断 (等于 (52))
    _按钮4_被单击 ()
.判断 (等于 (53))
    _按钮5_被单击 ()
.判断 (等于 (54))
    _按钮6_被单击 ()
.判断 (等于 (55))
    _按钮7_被单击 ()
.判断 (等于 (56))
    _按钮8_被单击 ()
.判断 (等于 (57))
    _按钮9_被单击 ()
.判断 (等于 (8))
    _退格_被单击 ()
.判断 (等于 (27))
    _按钮C_被单击 ()
.判断 (等于 (187))
    _按钮等于_被单击 ()
.判断 (等于 (13))
    _按钮等于_被单击 ()
.判断 (等于 (190))
    未知函数_67177295 ()
.判断 (等于 (191))
    _按钮除_被单击 ()
.判断 (等于 (189))
    _按钮减_被单击 ()
.默认
    
.判断结束
获取焦点 ()

.子程序 _按钮10_被单击, 空白型, , 
_启动窗口.置文本 (., _启动窗口.取光标行号 (.), _启动窗口.取光标列号 (.), 到文本 (.标题))

.子程序 _按钮11_被单击, 空白型, , 
_启动窗口.置文本 (., _启动窗口.取光标行号 (.), _启动窗口.取光标列号 (.), 到文本 (.标题))


.窗口程序集 易之表万年历窗口程序集, , , 

.子程序 _按钮1_被单击, 空白型, , 
_启动窗口.置文本 (., _启动窗口.取光标行号 (.), _启动窗口.取光标列号 (.), 时间到文本 (.首选择日, #日期部分))

.子程序 _月历1_选择日期被改变, 空白型, , 
赋值 (.标题, 到文本 (.首选择日))

.子程序 _按钮2_被单击, 空白型, , 
_启动窗口.置文本 (., _启动窗口.取光标行号 (.), _启动窗口.取光标列号 (.), 时间到文本 (.首选择日, #时间部分))

.子程序 _易之表万年历窗口_创建完毕, 空白型, , 
赋值 (.标题, 到文本 (.首选择日))


.子程序 _标签1_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

_启动窗口.置文本 (., _启动窗口.取光标行号 (.), _启动窗口.取光标列号 (.), 到文本 (.首选择日))


.窗口程序集 易之表函数操作窗口程序集, , , 

.子程序 _易之表函数_尺寸被改变, 空白型, , 
1.移动 (30, 取用户区宽度 (), 相减 (取用户区高度 (), 56))
1.移动 (相减 (取用户区高度 (), 24), 相减 (取用户区宽度 (), 1), )

.子程序 _易之表函数_创建完毕, 空白型, , 
赋值 (_启动窗口., “纵向”)
赋值 (_启动窗口., “选区”)


.子程序 _按钮1_被单击, 空白型, , 
.如果真 (并且 (等于 (.现行选中项, 1), 等于 (_启动窗口., “纵向”)))
    函数计算 (“累计值”, _启动窗口.)
.如果真结束
.如果真 (并且 (等于 (.现行选中项, 1), 等于 (_启动窗口., “横向”)))
    横向函数计算 (“累计值”, _启动窗口.)
.如果真结束
.如果真 (并且 (等于 (.现行选中项, 1), 等于 (_启动窗口., “双向”)))
    函数计算 (“累计值”, _启动窗口.)
    横向函数计算 (“累计值”, _启动窗口.)
.如果真结束

.如果真 (并且 (等于 (.现行选中项, 2), 等于 (_启动窗口., “纵向”)))
    函数计算 (“平均值”, _启动窗口.)
.如果真结束
.如果真 (并且 (等于 (.现行选中项, 2), 等于 (_启动窗口., “横向”)))
    横向函数计算 (“平均值”, _启动窗口.)
.如果真结束
.如果真 (并且 (等于 (.现行选中项, 2), 等于 (_启动窗口., “双向”)))
    横向函数计算 (“平均值”, _启动窗口.)
    函数计算 (“平均值”, _启动窗口.)
.如果真结束

.如果真 (等于 (.现行选中项, 3))
    _千分位分隔符_被选择 ()
.如果真结束
.如果真 (等于 (.现行选中项, 4))
    _去除分隔符_被选择 ()
.如果真结束

.如果真 (等于 (.现行选中项, 5))
    函数计算 (“到全角”, _启动窗口.)
.如果真结束

.如果真 (等于 (.现行选中项, 6))
    函数计算 (“到半角”, _启动窗口.)
.如果真结束

.如果真 (等于 (.现行选中项, 7))
    函数计算 (“四舍五入”, _启动窗口.)
.如果真结束

.如果真 (并且 (等于 (.现行选中项, 8), 等于 (_启动窗口., “纵向”)))
    函数计算 (“最大值”, _启动窗口.)
.如果真结束
.如果真 (并且 (等于 (.现行选中项, 8), 等于 (_启动窗口., “横向”)))
    横向函数计算 (“最大值”, _启动窗口.)
.如果真结束
.如果真 (并且 (等于 (.现行选中项, 8), 等于 (_启动窗口., “双向”)))
    函数计算 (“最大值”, _启动窗口.)
    横向函数计算 (“最大值”, _启动窗口.)
.如果真结束

.如果真 (并且 (等于 (.现行选中项, 9), 等于 (_启动窗口., “纵向”)))
    函数计算 (“最小值”, _启动窗口.)
.如果真结束
.如果真 (并且 (等于 (.现行选中项, 9), 等于 (_启动窗口., “横向”)))
    横向函数计算 (“最小值”, _启动窗口.)
.如果真结束
.如果真 (并且 (等于 (.现行选中项, 9), 等于 (_启动窗口., “双向”)))
    函数计算 (“最小值”, _启动窗口.)
    横向函数计算 (“最小值”, _启动窗口.)
.如果真结束

.如果真 (等于 (.现行选中项, 10))
    函数计算 (“求平方根”, _启动窗口.)
.如果真结束

.如果真 (等于 (.现行选中项, 11))
    函数计算 (“取绝对值”, _启动窗口.)
.如果真结束

.如果真 (等于 (.现行选中项, 12))
    函数计算 (“取整”, _启动窗口.)
.如果真结束

.如果真 (等于 (.现行选中项, 13))
    函数计算 (“绝对取整”, _启动窗口.)
.如果真结束

.如果真 (等于 (.现行选中项, 14))
    函数计算 (“求次方”, _启动窗口.)
.如果真结束

.如果真 (等于 (.现行选中项, 15))
    函数计算 (“求正弦”, _启动窗口.)
.如果真结束

.如果真 (等于 (.现行选中项, 16))
    函数计算 (“乘某数”, _启动窗口.)
.如果真结束

.如果真 (等于 (.取项目文本 (.现行选中项), “除某数”))
    函数计算 (“除某数”, _启动窗口.)
.如果真结束

.如果真 (等于 (.取项目文本 (.现行选中项), “整除某数”))
    函数计算 (“整除某数”, _启动窗口.)
.如果真结束

.如果真 (等于 (.取项目文本 (.现行选中项), “求余数”))
    函数计算 (“求余数”, _启动窗口.)
.如果真结束

.如果真 (等于 (.取项目文本 (.现行选中项), “加某数”))
    函数计算 (“加某数”, _启动窗口.)
.如果真结束

.如果真 (等于 (.取项目文本 (.现行选中项), “减某数”))
    函数计算 (“减某数”, _启动窗口.)
.如果真结束

.如果真 (等于 (.取项目文本 (.现行选中项), “求余弦”))
    函数计算 (“求余弦”, _启动窗口.)
.如果真结束

.如果真 (等于 (.取项目文本 (.现行选中项), “求正切”))
    函数计算 (“求正切”, _启动窗口.)
.如果真结束

.如果真 (等于 (.取项目文本 (.现行选中项), “求反正切”))
    函数计算 (“求反正切”, _启动窗口.)
.如果真结束

.如果真 (等于 (.取项目文本 (.现行选中项), “求自然对数”))
    函数计算 (“求自然对数”, _启动窗口.)
.如果真结束

.如果真 (等于 (.取项目文本 (.现行选中项), “求反对数”))
    函数计算 (“求反对数”, _启动窗口.)
.如果真结束

.如果真 (等于 (.取项目文本 (.现行选中项), “数字到大写”))
    函数计算 (“数字到大写”, _启动窗口.)
.如果真结束

.如果真 (等于 (.取项目文本 (.现行选中项), “数字到人民币”))
    函数计算 (“数字到人民币”, _启动窗口.)
.如果真结束


.子程序 函数计算, 空白型, , 纵向
.参数 函数名, 文本型, , 根据函数的名称进行控制
.参数 作用范围, 文本型, 可空, 是选定区域,还是整列计算,如果省略,将默认为选区

.局部变量 计数, 整数型, , , 
.局部变量 列号1, 整数型, , , 
.局部变量 计次, 整数型, , , 
.局部变量 行号1, 整数型, , , 
.局部变量 累计值, 小数型, , "0", 
.局部变量 累计数, 小数型, , , 
.局部变量 临时容器, 文本型, , , 
.局部变量 临时数, 整数型, , , 

赋值 (临时数, 到数值 (子文本替换 (_启动窗口.取文本 (., 行号1, 列号1), “,”, “”, , , 真)))
.如果真 (不等于 (_启动窗口..数据提供者, “数据库提供者1”))
     ' ■■■■■■■■■■以下为前期预处理■■■■■■■■■■
    
    赋值 (计数, 1)
    赋值 (列号1, _启动窗口.)
    .如果真 (等于 (_启动窗口., _启动窗口.取行数 (.)))
        信息框 (到文本 (结束行号) ＋ 到文本 (数据源1.取行数 ()), 0, )
        设置修改 ()
        _启动窗口.插入行 (., 相加 (_启动窗口., 1), )
        _启动窗口.置文本 (., 4, 相加 (“总行数 = ”, 到文本 (_启动窗口.取行数 (.))))
        
    .如果真结束
    
    .如果真 (等于 (函数名, “四舍五入”))
        输入框 (“请输入要四舍五入的位置:如果大于0，表示小数点右边应保留的位数；如果等于0，表示舍入到整数；如果小于0，表示小数点左边舍入到的位置。”, , “2”, 临时容器, )
    .如果真结束
    .如果真 (等于 (“求次方”))
        输入框 (“请输入要求次方数:参数值指定对欲求次方数值的运算指数。”, , “2”, , )
    .如果真结束
    .如果真 (等于 (函数名, “乘某数”))
        输入框 (“请输入要相乘的数值,将在选择区内的所有数字与此数值相乘。”, , “10”, 临时容器, )
    .如果真结束
    .如果真 (等于 (函数名, “除某数”))
        输入框 (“请输入要除以的数值,将在选择区内的所有数字与此数值相除。”, , “10”, 临时容器, )
    .如果真结束
    .如果真 (等于 (函数名, “整除某数”))
        输入框 (“请输入要整除的数值,将在选择区内的所有数字与此数值相除。”, , “10”, 临时容器, )
    .如果真结束
    .如果真 (等于 (函数名, “求余数”))
        输入框 (“请输入要除的数值,将在选择区内的所有数字与此数值相除,且求得余数。”, , “10”, 临时容器, )
    .如果真结束
    .如果真 (等于 (函数名, “加某数”))
        输入框 (“请输入要相加的数值,将在选择区内的所有数字与此数值相加。”, , “10”, 临时容器, )
    .如果真结束
    .如果真 (等于 (函数名, “减某数”))
        输入框 (“请输入要相减的数值,将在选择区内的所有数字与此数值相减。”, , “10”, 临时容器, )
    .如果真结束
    
     ' ■■■■■■■■■■以下为中期进入循环处理■■■■■■■■■■
    
    
    .计次循环首 (相减 (相加 (_启动窗口., 1), _启动窗口.), 计数)
        赋值 (计次, 1)
        赋值 (行号1, _启动窗口.)
        赋值 (临时数, 到数值 (子文本替换 (_启动窗口.取文本 (., 行号1, 列号1), “,”, “”, , , 真)))
        赋值 (0)
        .计次循环首 (相减 (相加 (_启动窗口., 1), _启动窗口.), 计次)
            信息框 (计次, 0, )
            
            .如果真 (或者 (等于 (函数名, “累计值”), 等于 (函数名, “平均值”)))
                .如果真 (或者 (等于 (取字段类型 (列号1), 2), 等于 (取字段类型 (列号1), 3), 等于 (取字段类型 (列号1), 4), 等于 (取字段类型 (列号1), 5), 等于 (取字段类型 (列号1), 6)))
                    赋值 (累计数, 相加 (到数值 (子文本替换 (_启动窗口.取文本 (., 行号1, 列号1), “,”, “”, , , 真)), 累计数))
                .如果真结束
                .如果真 (等于 (取字段类型 (列号1), 0))
                    赋值 (累计数, 相加 (到数值 (子文本替换 (_启动窗口.取文本 (., 行号1, 列号1), “,”, “”, , , 真)), 累计数))
                    累计数 ＝ 到数值 (数据源1.取文本 (行号2, 列号2)) ＋ 累计数
                .如果真结束
                
            .如果真结束
            .如果真 (等于 (函数名, “到全角”))
                _启动窗口.置文本 (., 行号1, 列号1, 到全角 (_启动窗口.取文本 (., 行号1, 列号1)))
            .如果真结束
            .如果真 (等于 (函数名, “到半角”))
                _启动窗口.置文本 (., 行号1, 列号1, 到半角 (_启动窗口.取文本 (., 行号1, 列号1)))
            .如果真结束
            .如果真 (等于 (函数名, “四舍五入”))
                _启动窗口.置文本 (., 行号1, 列号1, 到文本 (四舍五入 (到数值 (子文本替换 (_启动窗口.取文本 (., 行号1, 列号1), “,”, “”, , , 真)), 到数值 (临时容器))))
            .如果真结束
            .如果真 (并且 (等于 (函数名, “求平方根”), 大于 (到数值 (子文本替换 (_启动窗口.取文本 (., 行号1, 列号1), “,”, “”, , , 真)), 0)))
                _启动窗口.置文本 (., 行号1, 列号1, 到文本 (求平方根 (到数值 (子文本替换 (_启动窗口.取文本 (., 行号1, 列号1), “,”, “”, , , 真)))))
            .如果真结束
            .如果真 (等于 (函数名, “最大值”))
                .如果 (大于 (临时数, 到数值 (子文本替换 (_启动窗口.取文本 (., 行号1, 列号1), “,”, “”, , , 真))))
                    
                .否则
                    赋值 (临时数, 到数值 (子文本替换 (_启动窗口.取文本 (., 行号1, 列号1), “,”, “”, , , 真)))
                .如果结束
                
            .如果真结束
            .如果真 (等于 (函数名, “最小值”))
                .如果 (小于 (临时数, 到数值 (子文本替换 (_启动窗口.取文本 (., 行号1, 列号1), “,”, “”, , , 真))))
                    
                .否则
                    赋值 (临时数, 到数值 (子文本替换 (_启动窗口.取文本 (., 行号1, 列号1), “,”, “”, , , 真)))
                .如果结束
                
            .如果真结束
            .如果真 (等于 (函数名, “取绝对值”))
                _启动窗口.置文本 (., 行号1, 列号1, 到文本 (取绝对值 (到数值 (子文本替换 (_启动窗口.取文本 (., 行号1, 列号1), “,”, “”, , , 真)))))
            .如果真结束
            .如果真 (等于 (函数名, “取整”))
                _启动窗口.置文本 (., 行号1, 列号1, 到文本 (取整 (到数值 (子文本替换 (_启动窗口.取文本 (., 行号1, 列号1), “,”, “”, , , 真)))))
            .如果真结束
            .如果真 (等于 (函数名, “绝对取整”))
                _启动窗口.置文本 (., 行号1, 列号1, 到文本 (绝对取整 (到数值 (子文本替换 (_启动窗口.取文本 (., 行号1, 列号1), “,”, “”, , , 真)))))
            .如果真结束
            .如果真 (等于 (“求次方”))
                _启动窗口.置文本 (., 行号1, 列号1, 到文本 (求次方 (到数值 (子文本替换 (_启动窗口.取文本 (., 行号1, 列号1), “,”, “”, , , 真)), 到数值 (临时容器))))
            .如果真结束
            .如果真 (等于 (“求正弦”))
                _启动窗口.置文本 (., 行号1, 列号1, 到文本 (求正弦 (到数值 (子文本替换 (_启动窗口.取文本 (., 行号1, 列号1), “,”, “”, , , 真)))))
            .如果真结束
            .如果真 (等于 (函数名, “乘某数”))
                _启动窗口.置文本 (., 行号1, 列号1, 到文本 (相乘 (到数值 (临时容器), 到数值 (子文本替换 (_启动窗口.取文本 (., 行号1, 列号1), “,”, “”, , , 真)))))
            .如果真结束
            .如果真 (等于 (函数名, “除某数”))
                _启动窗口.置文本 (., 行号1, 列号1, 到文本 (相除 (到数值 (子文本替换 (_启动窗口.取文本 (., 行号1, 列号1), “,”, “”, , , 真)), 到数值 (临时容器))))
            .如果真结束
            .如果真 (等于 (函数名, “整除某数”))
                _启动窗口.置文本 (., 行号1, 列号1, 到文本 (整除 (到数值 (子文本替换 (_启动窗口.取文本 (., 行号1, 列号1), “,”, “”, , , 真)), 到数值 (临时容器))))
            .如果真结束
            .如果真 (等于 (函数名, “求余数”))
                _启动窗口.置文本 (., 行号1, 列号1, 到文本 (求余数 (到数值 (子文本替换 (_启动窗口.取文本 (., 行号1, 列号1), “,”, “”, , , 真)), 到数值 (临时容器))))
            .如果真结束
            .如果真 (等于 (函数名, “加某数”))
                _启动窗口.置文本 (., 行号1, 列号1, 到文本 (相加 (到数值 (子文本替换 (_启动窗口.取文本 (., 行号1, 列号1), “,”, “”, , , 真)), 到数值 (临时容器))))
            .如果真结束
            .如果真 (等于 (函数名, “减某数”))
                _启动窗口.置文本 (., 行号1, 列号1, 到文本 (相减 (到数值 (子文本替换 (_启动窗口.取文本 (., 行号1, 列号1), “,”, “”, , , 真)), 到数值 (临时容器))))
            .如果真结束
            .如果真 (等于 (函数名, “求余弦”))
                _启动窗口.置文本 (., 行号1, 列号1, 到文本 (求余弦 (到数值 (子文本替换 (_启动窗口.取文本 (., 行号1, 列号1), “,”, “”, , , 真)))))
            .如果真结束
            .如果真 (等于 (函数名, “求正切”))
                _启动窗口.置文本 (., 行号1, 列号1, 到文本 (求正切 (到数值 (子文本替换 (_启动窗口.取文本 (., 行号1, 列号1), “,”, “”, , , 真)))))
            .如果真结束
            .如果真 (等于 (函数名, “求反正切”))
                _启动窗口.置文本 (., 行号1, 列号1, 到文本 (求反正切 (到数值 (子文本替换 (_启动窗口.取文本 (., 行号1, 列号1), “,”, “”, , , 真)))))
            .如果真结束
            .如果真 (等于 (函数名, “求自然对数”))
                _启动窗口.置文本 (., 行号1, 列号1, 到文本 (求自然对数 (到数值 (子文本替换 (_启动窗口.取文本 (., 行号1, 列号1), “,”, “”, , , 真)))))
            .如果真结束
            .如果真 (等于 (函数名, “求反对数”))
                _启动窗口.置文本 (., 行号1, 列号1, 到文本 (求反对数 (到数值 (子文本替换 (_启动窗口.取文本 (., 行号1, 列号1), “,”, “”, , , 真)))))
            .如果真结束
            .如果真 (等于 (函数名, “数字到大写”))
                _启动窗口.置文本 (., 行号1, 列号1, 到文本 (数值到大写 (到数值 (子文本替换 (_启动窗口.取文本 (., 行号1, 列号1), “,”, “”, , , 真)), 假)))
            .如果真结束
            .如果真 (等于 (函数名, “数字到人民币”))
                _启动窗口.置文本 (., 行号1, 列号1, 到文本 (数值到金额 (到数值 (子文本替换 (_启动窗口.取文本 (., 行号1, 列号1), “,”, “”, , , 真)), 假)))
            .如果真结束
            
            
            
            
            
            
            
            赋值 (行号1, 相加 (行号1, 1))
            
            
            
        .计次循环尾 ()
         ' ■■■■■■■■■■以下为后期显示在外部处理■■■■■■■■■■
        .如果真 (等于 (函数名, “累计值”))
            _启动窗口.置文本 (., 相加 (_启动窗口., 1), 列号1, 到文本 (累计数))
        .如果真结束
        .如果真 (等于 (函数名, “平均值”))
            _启动窗口.置文本 (., 相加 (_启动窗口., 1), 列号1, 到文本 (相除 (累计数, 相减 (相加 (_启动窗口., 1), _启动窗口.))))
        .如果真结束
        .如果真 (等于 (函数名, “最大值”))
            _启动窗口.置文本 (., 相加 (_启动窗口., 1), 列号1, 到文本 (临时数))
        .如果真结束
        .如果真 (等于 (函数名, “最小值”))
            _启动窗口.置文本 (., 相加 (_启动窗口., 1), 列号1, 到文本 (临时数))
        .如果真结束
        
        
        赋值 (列号1, 相加 (列号1, 1))
        
    .计次循环尾 ()
    
    
    _启动窗口.保存更改 (.)
    _启动窗口.刷新 (.)
    
    
    返回 ()
.如果真结束


.子程序 _工具条1_被单击, 空白型, , 
.参数 按钮索引, 整数型, , 

.如果真 (等于 (1))
    赋值 (_启动窗口., “横向”)
.如果真结束
.如果真 (等于 (按钮索引, 2))
    赋值 (_启动窗口., “纵向”)
.如果真结束
.如果真 (等于 (按钮索引, 3))
    赋值 (_启动窗口., “双向”)
.如果真结束
.如果真 (等于 (按钮索引, 5))
    赋值 (_启动窗口., “选区”)
.如果真结束
.如果真 (等于 (按钮索引, 6))
    赋值 (_启动窗口., “整列”)
.如果真结束
赋值 (易之表函数.标题, 相加 (“函数面板”, 到文本 (按钮索引)))



.子程序 _选择列表框1_列表项被选择, 空白型, , 
赋值 (易之表函数.标题, 相加 (“函数面板”, 到文本 (.现行选中项)))


.子程序 横向函数计算, 空白型, , 横向
.参数 函数名, 文本型, , 根据函数的名称进行控制
.参数 作用范围, 文本型, 可空, 是选定区域,还是整列计算,如果省略,将默认为选区

.局部变量 计次, 整数型, , , 
.局部变量 列号1, 整数型, , , 
.局部变量 计数, 整数型, , , 
.局部变量 行号1, 整数型, , , 
.局部变量 累计数, 小数型, , , 
.局部变量 临时容器, 文本型, , , 
.局部变量 临时数, 整数型, , , 

赋值 (临时数, 到数值 (子文本替换 (_启动窗口.取文本 (., 行号1, 列号1), “,”, “”, , , 真)))

赋值 (计数, 1)
赋值 (行号1, _启动窗口.)
.如果真 (等于 (_启动窗口., _启动窗口.取列数 (.)))
    信息框 (到文本 (结束列号) ＋ 到文本 (数据源1.取列数 ()), 0, )
    设置修改 ()
    _启动窗口.插入列 (., 相加 (_启动窗口., 1), )
    _启动窗口.置文本 (., 5, 相加 (“总列数 = ”, 到文本 (_启动窗口.取列数 (.))))
    
.如果真结束


.如果真 (等于 (“四舍五入”))
    输入框 (“请输入要四舍五入的位置:如果大于0，表示小数点右边应保留的位数；如果等于0，表示舍入到整数；如果小于0，表示小数点左边舍入到的位置。”, , , , )
.如果真结束
.如果真 (等于 (“求次方”))
    输入框 (“请输入要求次方数:参数值指定对欲求次方数值的运算指数。”, , “2”, , )
.如果真结束



.计次循环首 (相减 (相加 (_启动窗口., 1), _启动窗口.), 计数)
    赋值 (计数, 1)
    赋值 (列号1, _启动窗口.)
    赋值 (临时数, 到数值 (子文本替换 (_启动窗口.取文本 (., 行号1, 列号1), “,”, “”, , , 真)))
    赋值 (累计数, 0)
    .计次循环首 (相减 (相加 (_启动窗口., 1), _启动窗口.), 计次)
        
        
        .如果真 (或者 (等于 (“累计值”), 等于 (“平均值”)))
            .如果真 (或者 (等于 (取字段类型 (), 2), 等于 (取字段类型 (), 3), 等于 (取字段类型 (), 4), 等于 (取字段类型 (), 5), 等于 (取字段类型 (), 6)))
                赋值 (累计数, 相加 (到数值 (子文本替换 (_启动窗口.取文本 (., 行号1, 列号1), “,”, “”, , , 真)), 累计数))
            .如果真结束
            .如果真 (等于 (取字段类型 (), 0))
                赋值 (累计数, 相加 (到数值 (子文本替换 (_启动窗口.取文本 (., 行号1, 列号1), “,”, “”, , , 真)), 累计数))
                累计数 ＝ 到数值 (数据源1.取文本 (行号2, 列号2)) ＋ 累计数
            .如果真结束
            
        .如果真结束
        .如果真 (等于 (“到全角”))
            _启动窗口.置文本 (., 行号1, 列号1, 到全角 (_启动窗口.取文本 (., 行号1, 列号1)))
        .如果真结束
        .如果真 (等于 (“到半角”))
            _启动窗口.置文本 (., 行号1, 列号1, 到半角 (_启动窗口.取文本 (., 行号1, 列号1)))
        .如果真结束
        .如果真 (等于 (“四舍五入”))
            _启动窗口.置文本 (., 行号1, 列号1, 到文本 (四舍五入 (到数值 (子文本替换 (_启动窗口.取文本 (., 行号1, 列号1), “,”, “”, , , 真)), 到数值 (临时容器))))
        .如果真结束
        .如果真 (并且 (等于 (函数名, “求平方根”), 大于 (到数值 (子文本替换 (_启动窗口.取文本 (., 行号1, 列号1), “,”, “”, , , 真)), 0)))
            _启动窗口.置文本 (., 行号1, 列号1, 到文本 (求平方根 (到数值 (子文本替换 (_启动窗口.取文本 (., 行号1, 列号1), “,”, “”, , , 真)))))
        .如果真结束
        .如果真 (等于 (“最大值”))
            .如果 (大于 (临时数, 到数值 (子文本替换 (_启动窗口.取文本 (., 行号1, 列号1), “,”, “”, , , 真))))
                
            .否则
                赋值 (临时数, 到数值 (子文本替换 (_启动窗口.取文本 (., 行号1, 列号1), “,”, “”, , , 真)))
            .如果结束
            
        .如果真结束
        .如果真 (等于 (“最小值”))
            .如果 (小于 (临时数, 到数值 (子文本替换 (_启动窗口.取文本 (., 行号1, 列号1), “,”, “”, , , 真))))
                
            .否则
                赋值 (临时数, 到数值 (子文本替换 (_启动窗口.取文本 (., 行号1, 列号1), “,”, “”, , , 真)))
            .如果结束
            
        .如果真结束
        .如果真 (等于 (“取绝对值”))
            _启动窗口.置文本 (., 行号1, 列号1, 到文本 (取绝对值 (到数值 (子文本替换 (_启动窗口.取文本 (., 行号1, 列号1), “,”, “”, , , 真)))))
        .如果真结束
        .如果真 (等于 (“取整”))
            _启动窗口.置文本 (., 行号1, 列号1, 到文本 (取整 (到数值 (子文本替换 (_启动窗口.取文本 (., 行号1, 列号1), “,”, “”, , , 真)))))
        .如果真结束
        .如果真 (等于 (“绝对取整”))
            _启动窗口.置文本 (., 行号1, 列号1, 到文本 (绝对取整 (到数值 (子文本替换 (_启动窗口.取文本 (., 行号1, 列号1), “,”, “”, , , 真)))))
        .如果真结束
        .如果真 (等于 (“求次方”))
            _启动窗口.置文本 (., 行号1, 列号1, 到文本 (求次方 (到数值 (子文本替换 (_启动窗口.取文本 (., 行号1, 列号1), “,”, “”, , , 真)), 到数值 (临时容器))))
        .如果真结束
        .如果真 (等于 (“求正弦”))
            _启动窗口.置文本 (., 行号1, 列号1, 到文本 (求正弦 (到数值 (子文本替换 (_启动窗口.取文本 (., 行号1, 列号1), “,”, “”, , , 真)))))
        .如果真结束
        
        
        
        
        
        赋值 (列号1, 相加 (列号1, 1))
        
    .计次循环尾 ()
    
    _启动窗口.数据源1.置文本 (行号1, _启动窗口.结束列号 ＋ 1, 到文本 (累计数))
    数据源1.置文本 (行号1, 结束列号 ＋ 1, 到文本 (累计数))
    .如果真 (等于 (“累计值”))
        _启动窗口.置文本 (., 行号1, 相加 (_启动窗口., 1), 到文本 (累计数))
    .如果真结束
    .如果真 (等于 (“平均值”))
        信息框 ((_启动窗口.结束列号 ＋ 1) － _启动窗口.起始列号, 0, )
        _启动窗口.置文本 (., 行号1, 相加 (_启动窗口., 1), 到文本 (相除 (累计数, 相减 (相加 (_启动窗口., 1), _启动窗口.))))
    .如果真结束
    .如果真 (等于 (“最大值”))
        _启动窗口.置文本 (., 行号1, 相加 (_启动窗口., 1), 到文本 (临时数))
    .如果真结束
    .如果真 (等于 (“最小值”))
        _启动窗口.置文本 (., 行号1, 相加 (_启动窗口., 1), 到文本 (临时数))
    .如果真结束
    
    
    赋值 (行号1, 相加 (行号1, 1))
    
.计次循环尾 ()


_启动窗口.保存更改 (.)
_启动窗口.刷新 (.)


.窗口程序集 窗口程序集19, , , 

.程序集变量 数据库文件名, 文本型, , , 
.子程序 _密码输入窗口_创建完毕, 空白型, , 
.如果真 (等于 (“”))
    赋值 (.文件名)

.子程序 _密码输入窗口_将被销毁, 空白型, , 
关闭 ()

.子程序 _确认按钮_被单击, 空白型, , 
.如果真 (不等于 (.内容, .内容))
    信息框 (“密码核对错误！”, #错误图标, “错误”)
    返回 ()
.如果真结束

置等待鼠标 ()
.如果 (置数据库密码 (.内容))
    恢复鼠标 ()
    信息框 (“设置数据库密码成功！”, #信息图标, “信息”)
.否则
    恢复鼠标 ()
    信息框 (取错误信息 (), #错误图标, “设置密码失败”)
.如果结束

销毁 ()

.子程序 _取消按钮_被单击, 空白型, , 
销毁 ()

.窗口程序集 易之表信封窗口程序集, , , 

.程序集变量 当前记录, 整数型, , , 
.程序集变量 固定, 逻辑型, , , 
.程序集变量 固定行, 整数型, , , 
.子程序 _标签邮1_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.标记, “”)
#顶层.调整层次 ()

161.投递信息 (2, 0)

赋值 (.内容, 到文本 (.左边))
赋值 (.内容, 到文本 (.顶边))
赋值 (.内容, 到文本 (.宽度))
赋值 (.内容, 到文本 (.高度))
赋值 (.内容, 到文本 (.字体.字体名称))
赋值 (.内容, 到文本 (.字体.字体大小))

赋值 (.标题, “邮编1”)
赋值 (.标记, “邮1”)

赋值 (.可视, 真)
.如果真 (等于 (.标记, “邮1”))
    赋值 (.左边, 相减 (相加 (.左边, .宽度), 2))
    赋值 (.顶边, 相减 (相加 (.顶边, .高度), 2))
.如果真结束
#顶层.调整层次 ()


.子程序 _标签邮2_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.标记, “”)
#顶层.调整层次 ()

161.投递信息 (2, 0)

赋值 (.内容, 到文本 (.左边))
赋值 (.内容, 到文本 (.顶边))
赋值 (.内容, 到文本 (.宽度))
赋值 (.内容, 到文本 (.高度))
赋值 (.内容, 到文本 (.字体.字体名称))
赋值 (.内容, 到文本 (.字体.字体大小))

赋值 (.标题, “邮编2”)
赋值 (.标记, “邮2”)

赋值 (.可视, 真)
赋值 (.左边, 相减 (相加 (.左边, .宽度), 2))
赋值 (.顶边, 相减 (相加 (.顶边, .高度), 2))
#顶层.调整层次 ()


.子程序 _易之表信封窗口_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.内容, “”)
赋值 (.内容, “”)
赋值 (.内容, “”)
赋值 (.内容, “”)


.子程序 _标签邮3_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.标记, “”)
#顶层.调整层次 ()

161.投递信息 (2, 0)

赋值 (.内容, 到文本 (.左边))
赋值 (.内容, 到文本 (.顶边))
赋值 (.内容, 到文本 (.宽度))
赋值 (.内容, 到文本 (.高度))
赋值 (.内容, 到文本 (.字体.字体名称))
赋值 (.内容, 到文本 (.字体.字体大小))

赋值 (.标题, “邮编3”)
赋值 (.标记, “邮3”)

赋值 (.可视, 真)
赋值 (.左边, 相减 (相加 (.左边, .宽度), 2))
赋值 (.顶边, 相减 (相加 (.顶边, .高度), 2))
#顶层.调整层次 ()


.子程序 _标签邮4_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.标记, “”)
#顶层.调整层次 ()

161.投递信息 (2, 0)

赋值 (.内容, 到文本 (.左边))
赋值 (.内容, 到文本 (.顶边))
赋值 (.内容, 到文本 (.宽度))
赋值 (.内容, 到文本 (.高度))
赋值 (.内容, 到文本 (.字体.字体名称))
赋值 (.内容, 到文本 (.字体.字体大小))

赋值 (.标题, “邮编4”)
赋值 (.标记, “邮4”)

赋值 (.可视, 真)
赋值 (.左边, 相减 (相加 (.左边, .宽度), 2))
赋值 (.顶边, 相减 (相加 (.顶边, .高度), 2))
#顶层.调整层次 ()


.子程序 _标签邮5_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.标记, “”)
#顶层.调整层次 ()

161.投递信息 (2, 0)

赋值 (.内容, 到文本 (.左边))
赋值 (.内容, 到文本 (.顶边))
赋值 (.内容, 到文本 (.宽度))
赋值 (.内容, 到文本 (.高度))
赋值 (.内容, 到文本 (.字体.字体名称))
赋值 (.内容, 到文本 (.字体.字体大小))

赋值 (.标题, “邮编5”)
赋值 (.标记, “邮5”)

赋值 (.可视, 真)
赋值 (.左边, 相减 (相加 (.左边, .宽度), 2))
赋值 (.顶边, 相减 (相加 (.顶边, .高度), 2))
#顶层.调整层次 ()


.子程序 _标签邮6_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.标记, “”)

161.投递信息 (2, 0)

赋值 (.内容, 到文本 (.左边))
赋值 (.内容, 到文本 (.顶边))
赋值 (.内容, 到文本 (.宽度))
赋值 (.内容, 到文本 (.高度))
赋值 (.内容, 到文本 (.字体.字体名称))
赋值 (.内容, 到文本 (.字体.字体大小))

赋值 (.标题, “邮编6”)
赋值 (.标记, “邮6”)

赋值 (.可视, 真)
赋值 (.左边, 相减 (相加 (.左边, .宽度), 2))
赋值 (.顶边, 相减 (相加 (.顶边, .高度), 2))
#顶层.调整层次 ()


.子程序 _图片框1_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

#顶层.调整层次 ()
161.投递信息 (2, 0)


.子程序 _编辑框2_调节钮被按下, 空白型, , 
.参数 按钮值, 整数型, , 

赋值 (.内容, 到文本 (相加 (到数值 (.内容), 按钮值)))

编辑框2处理 ()


.子程序 _编辑框1_调节钮被按下, 空白型, , 
.参数 按钮值, 整数型, , 

赋值 (.内容, 到文本 (相加 (到数值 (.内容), 按钮值)))

编辑框1处理 ()


.子程序 _标签邮1_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

移动也只显示一个对象坐标 ()
移动也只显示一个夹点 ()

赋值 (.顶边, .顶边)
赋值 (.顶边, .顶边)
赋值 (.顶边, .顶边)
赋值 (.顶边, .顶边)
赋值 (.顶边, .顶边)



.子程序 _标签邮2_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

移动也只显示一个对象坐标 ()
移动也只显示一个夹点 ()

.子程序 移动也只显示一个对象坐标, 空白型, , 

.如果真 (等于 (.标记, “邮1”))
    赋值 (.内容, 到文本 (.左边))
    赋值 (.内容, 到文本 (.顶边))
    赋值 (.内容, 到文本 (.宽度))
    赋值 (.内容, 到文本 (.高度))
    
.如果真结束

.如果真 (等于 (.标记, “邮2”))
    赋值 (.内容, 到文本 (.左边))
    赋值 (.内容, 到文本 (.顶边))
    赋值 (.内容, 到文本 (.宽度))
    赋值 (.内容, 到文本 (.高度))
    
.如果真结束

.如果真 (等于 (.标记, “邮3”))
    赋值 (.内容, 到文本 (.左边))
    赋值 (.内容, 到文本 (.顶边))
    赋值 (.内容, 到文本 (.宽度))
    赋值 (.内容, 到文本 (.高度))
    
.如果真结束

.如果真 (等于 (.标记, “邮4”))
    赋值 (.内容, 到文本 (.左边))
    赋值 (.内容, 到文本 (.顶边))
    赋值 (.内容, 到文本 (.宽度))
    赋值 (.内容, 到文本 (.高度))
    
.如果真结束

.如果真 (等于 (.标记, “邮5”))
    赋值 (.内容, 到文本 (.左边))
    赋值 (.内容, 到文本 (.顶边))
    赋值 (.内容, 到文本 (.宽度))
    赋值 (.内容, 到文本 (.高度))
    
.如果真结束

.如果真 (等于 (.标记, “邮6”))
    赋值 (.内容, 到文本 (.左边))
    赋值 (.内容, 到文本 (.顶边))
    赋值 (.内容, 到文本 (.宽度))
    赋值 (.内容, 到文本 (.高度))
    
.如果真结束


.如果真 (等于 (.标记, “址1”))
    赋值 (.内容, 到文本 (.左边))
    赋值 (.内容, 到文本 (.顶边))
    赋值 (.内容, 到文本 (.宽度))
    赋值 (.内容, 到文本 (.高度))
    
.如果真结束

.如果真 (等于 (.标记, “址2”))
    赋值 (.内容, 到文本 (.左边))
    赋值 (.内容, 到文本 (.顶边))
    赋值 (.内容, 到文本 (.宽度))
    赋值 (.内容, 到文本 (.高度))
    
.如果真结束

.如果真 (等于 (.标记, “姓名”))
    赋值 (.内容, 到文本 (.左边))
    赋值 (.内容, 到文本 (.顶边))
    赋值 (.内容, 到文本 (.宽度))
    赋值 (.内容, 到文本 (.高度))
    
.如果真结束

.如果真 (等于 (.标记, “电话”))
    赋值 (.内容, 到文本 (.左边))
    赋值 (.内容, 到文本 (.顶边))
    赋值 (.内容, 到文本 (.宽度))
    赋值 (.内容, 到文本 (.高度))
    
.如果真结束

.如果真 (等于 (.标记, “址3”))
    赋值 (.内容, 到文本 (.左边))
    赋值 (.内容, 到文本 (.顶边))
    赋值 (.内容, 到文本 (.宽度))
    赋值 (.内容, 到文本 (.高度))
    
.如果真结束

.如果真 (等于 (.标记, “址4”))
    赋值 (.内容, 到文本 (.左边))
    赋值 (.内容, 到文本 (.顶边))
    赋值 (.内容, 到文本 (.宽度))
    赋值 (.内容, 到文本 (.高度))
    
.如果真结束

.如果真 (等于 (.标记, “尾”))
    赋值 (.内容, 到文本 (.左边))
    赋值 (.内容, 到文本 (.顶边))
    赋值 (.内容, 到文本 (.宽度))
    赋值 (.内容, 到文本 (.高度))
    
.如果真结束



.子程序 _编辑框3_调节钮被按下, 空白型, , 
.参数 按钮值, 整数型, , 

赋值 (.内容, 到文本 (相加 (到数值 (.内容), 按钮值)))


编辑框3处理 ()


.子程序 _标签邮3_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

移动也只显示一个对象坐标 ()
移动也只显示一个夹点 ()


.子程序 _标签邮4_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

移动也只显示一个对象坐标 ()
移动也只显示一个夹点 ()


.子程序 _标签邮5_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

移动也只显示一个对象坐标 ()
移动也只显示一个夹点 ()


.子程序 _标签邮6_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

移动也只显示一个对象坐标 ()
移动也只显示一个夹点 ()


.子程序 _编辑框1_内容被改变, 空白型, , 
.如果真 (等于 (.内容, “”))
    返回 ()
.如果真结束

编辑框1处理 ()


.子程序 _编辑框2_内容被改变, 空白型, , 
.如果真 (等于 (.内容, “”))
    返回 ()
.如果真结束

编辑框2处理 ()


.子程序 _编辑框3_内容被改变, 空白型, , 
.如果真 (等于 (.内容, “”))
    返回 ()
.如果真结束

编辑框3处理 ()


.子程序 _编辑框4_调节钮被按下, 空白型, , 
.参数 按钮值, 整数型, , 

赋值 (.内容, 到文本 (相加 (到数值 (.内容), 按钮值)))

编辑框4处理 ()


.子程序 _编辑框4_内容被改变, 空白型, , 
.如果真 (等于 (.内容, “”))
    返回 ()
.如果真结束

.如果真 (等于 (.标记, “邮1”))
    赋值 (.高度, 到数值 (.内容))
.如果真结束
.如果真 (等于 (.标记, “邮2”))
    赋值 (.高度, 到数值 (.内容))
.如果真结束
.如果真 (等于 (.标记, “邮3”))
    赋值 (.高度, 到数值 (.内容))
.如果真结束
.如果真 (等于 (.标记, “邮4”))
    赋值 (.高度, 到数值 (.内容))
.如果真结束
.如果真 (等于 (.标记, “邮5”))
    赋值 (.高度, 到数值 (.内容))
.如果真结束
.如果真 (等于 (.标记, “邮6”))
    赋值 (.高度, 到数值 (.内容))
.如果真结束


.子程序 _隐藏所有边框_被选择, 空白型, , 
赋值 (.边框, 0)
赋值 (.边框, 0)
赋值 (.边框, 0)
赋值 (.边框, 0)
赋值 (.边框, 0)
赋值 (.边框, 0)
赋值 (.边框, 0)
赋值 (.边框, 0)

赋值 (.边框, 0)
赋值 (.边框, 0)


赋值 (.边框, 0)
赋值 (.边框, 0)
赋值 (.边框, 0)


.子程序 _显示所有边框_被选择, 空白型, , 
赋值 (.边框, 5)
赋值 (.边框, 5)
赋值 (.边框, 5)
赋值 (.边框, 5)
赋值 (.边框, 5)
赋值 (.边框, 5)

赋值 (.边框, 5)
赋值 (.边框, 5)

赋值 (.边框, 5)
赋值 (.边框, 5)

赋值 (.边框, 5)
赋值 (.边框, 5)
赋值 (.边框, 5)


.子程序 _上对齐邮编_被选择, 空白型, , 
赋值 (.顶边, .顶边)
赋值 (.顶边, .顶边)
赋值 (.顶边, .顶边)
赋值 (.顶边, .顶边)
赋值 (.顶边, .顶边)


.子程序 _邮编水平等距16_被选择, 空白型, , 
信息框 (标签邮6.左边 － 标签邮1.左边, 0, )
信息框 ((标签邮6.左边 － 标签邮1.左边) ÷ 6, 0, )


赋值 (.左边, 相加 (.左边, 相除 (相减 (.左边, .左边), 5)))
赋值 (.左边, 相加 (.左边, 相乘 (相除 (相减 (.左边, .左边), 5), 2)))
赋值 (.左边, 相加 (.左边, 相乘 (相除 (相减 (.左边, .左边), 5), 3)))
赋值 (.左边, 相加 (.左边, 相乘 (相除 (相减 (.左边, .左边), 5), 4)))
赋值 (.左边, 相加 (.左边, 相乘 (相除 (相减 (.左边, .左边), 5), 5)))


.子程序 _邮编水平等距12_被选择, 空白型, , 
赋值 (.左边, 相加 (.左边, 相减 (.左边, .左边)))
赋值 (.左边, 相加 (.左边, 相减 (.左边, .左边)))
赋值 (.左边, 相加 (.左边, 相减 (.左边, .左边)))
赋值 (.左边, 相加 (.左边, 相减 (.左边, .左边)))
赋值 (.左边, 相加 (.左边, 相减 (.左边, .左边)))


.子程序 _左对齐地址_被选择, 空白型, , 
赋值 (.左边, .左边)
赋值 (.左边, .左边)


.子程序 _标签对方地址1_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

移动也只显示一个对象坐标 ()
移动也只显示一个夹点 ()

.子程序 _标签对方地址1_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.标记, “”)
#顶层.调整层次 ()

161.投递信息 (2, 0)

赋值 (.内容, 到文本 (.左边))
赋值 (.内容, 到文本 (.顶边))
赋值 (.内容, 到文本 (.宽度))
赋值 (.内容, 到文本 (.高度))
赋值 (.内容, 到文本 (.字体.字体名称))
赋值 (.内容, 到文本 (.字体.字体大小))

赋值 (.标记, “址1”)
赋值 (.可视, 真)



.子程序 _标签对方地址2_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

移动也只显示一个对象坐标 ()
移动也只显示一个夹点 ()


.子程序 _标签姓名_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

移动也只显示一个对象坐标 ()
移动也只显示一个夹点 ()


.子程序 _标签电话号码_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

移动也只显示一个对象坐标 ()
移动也只显示一个夹点 ()


.子程序 _标签已方地址1_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

移动也只显示一个对象坐标 ()
移动也只显示一个夹点 ()


.子程序 _标签已方地址2_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

移动也只显示一个对象坐标 ()
移动也只显示一个夹点 ()


.子程序 _标签已方邮编_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

移动也只显示一个对象坐标 ()
移动也只显示一个夹点 ()


.子程序 _标签对方地址2_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.标记, “”)
#顶层.调整层次 ()

161.投递信息 (2, 0)

赋值 (.内容, 到文本 (.左边))
赋值 (.内容, 到文本 (.顶边))
赋值 (.内容, 到文本 (.宽度))
赋值 (.内容, 到文本 (.高度))
赋值 (.内容, 到文本 (.字体.字体名称))
赋值 (.内容, 到文本 (.字体.字体大小))

赋值 (.标记, “址2”)
赋值 (.可视, 真)



.子程序 _标签姓名_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.标记, “”)
#顶层.调整层次 ()

161.投递信息 (2, 0)

赋值 (.内容, 到文本 (.左边))
赋值 (.内容, 到文本 (.顶边))
赋值 (.内容, 到文本 (.宽度))
赋值 (.内容, 到文本 (.高度))
赋值 (.内容, 到文本 (.字体.字体名称))
赋值 (.内容, 到文本 (.字体.字体大小))

赋值 (.标记, “姓名”)
赋值 (.可视, 真)



.子程序 _标签电话号码_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.标记, “”)
#顶层.调整层次 ()

161.投递信息 (2, 0)

赋值 (.内容, 到文本 (.左边))
赋值 (.内容, 到文本 (.顶边))
赋值 (.内容, 到文本 (.宽度))
赋值 (.内容, 到文本 (.高度))
赋值 (.内容, 到文本 (.字体.字体名称))
赋值 (.内容, 到文本 (.字体.字体大小))

赋值 (.标记, “电话”)
赋值 (.可视, 真)



.子程序 _标签已方地址1_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.标记, “”)
#顶层.调整层次 ()

161.投递信息 (2, 0)

赋值 (.内容, 到文本 (.左边))
赋值 (.内容, 到文本 (.顶边))
赋值 (.内容, 到文本 (.宽度))
赋值 (.内容, 到文本 (.高度))
赋值 (.内容, 到文本 (.字体.字体名称))
赋值 (.内容, 到文本 (.字体.字体大小))

赋值 (.标记, “址3”)
赋值 (.可视, 真)



.子程序 _标签已方地址2_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.标记, “”)
#顶层.调整层次 ()

161.投递信息 (2, 0)

赋值 (.内容, 到文本 (.左边))
赋值 (.内容, 到文本 (.顶边))
赋值 (.内容, 到文本 (.宽度))
赋值 (.内容, 到文本 (.高度))
赋值 (.内容, 到文本 (.字体.字体名称))
赋值 (.内容, 到文本 (.字体.字体大小))

赋值 (.标记, “址4”)
赋值 (.可视, 真)



.子程序 _标签已方邮编_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.标记, “”)
#顶层.调整层次 ()

161.投递信息 (2, 0)

赋值 (.内容, 到文本 (.左边))
赋值 (.内容, 到文本 (.顶边))
赋值 (.内容, 到文本 (.宽度))
赋值 (.内容, 到文本 (.高度))
赋值 (.内容, 到文本 (.字体.字体名称))
赋值 (.内容, 到文本 (.字体.字体大小))

赋值 (.标记, “尾”)
赋值 (.可视, 真)


.子程序 编辑框1处理, 空白型, , 
.如果真 (等于 (.标记, “邮1”))
    赋值 (.左边, 到数值 (.内容))
.如果真结束
.如果真 (等于 (.标记, “邮2”))
    赋值 (.左边, 到数值 (.内容))
.如果真结束
.如果真 (等于 (.标记, “邮3”))
    赋值 (.左边, 到数值 (.内容))
.如果真结束
.如果真 (等于 (.标记, “邮4”))
    赋值 (.左边, 到数值 (.内容))
.如果真结束
.如果真 (等于 (.标记, “邮5”))
    赋值 (.左边, 到数值 (.内容))
.如果真结束
.如果真 (等于 (.标记, “邮6”))
    赋值 (.左边, 到数值 (.内容))
.如果真结束

.如果真 (等于 (.标记, “址1”))
    赋值 (.左边, 到数值 (.内容))
.如果真结束
.如果真 (等于 (.标记, “址2”))
    赋值 (.左边, 到数值 (.内容))
.如果真结束
.如果真 (等于 (.标记, “姓名”))
    赋值 (.左边, 到数值 (.内容))
.如果真结束
.如果真 (等于 (.标记, “电话”))
    赋值 (.左边, 到数值 (.内容))
.如果真结束
.如果真 (等于 (.标记, “址3”))
    赋值 (.左边, 到数值 (.内容))
.如果真结束
.如果真 (等于 (.标记, “址4”))
    赋值 (.左边, 到数值 (.内容))
.如果真结束
.如果真 (等于 (.标记, “尾”))
    赋值 (.左边, 到数值 (.内容))
.如果真结束



.子程序 编辑框2处理, 空白型, , 
.如果真 (等于 (.标记, “邮1”))
    赋值 (.顶边, 到数值 (.内容))
.如果真结束
.如果真 (等于 (.标记, “邮2”))
    赋值 (.顶边, 到数值 (.内容))
.如果真结束
.如果真 (等于 (.标记, “邮3”))
    赋值 (.顶边, 到数值 (.内容))
.如果真结束
.如果真 (等于 (.标记, “邮4”))
    赋值 (.顶边, 到数值 (.内容))
.如果真结束
.如果真 (等于 (.标记, “邮5”))
    赋值 (.顶边, 到数值 (.内容))
.如果真结束
.如果真 (等于 (.标记, “邮6”))
    赋值 (.顶边, 到数值 (.内容))
.如果真结束

.如果真 (等于 (.标记, “址1”))
    赋值 (.顶边, 到数值 (.内容))
.如果真结束
.如果真 (等于 (.标记, “址2”))
    赋值 (.顶边, 到数值 (.内容))
.如果真结束
.如果真 (等于 (.标记, “姓名”))
    赋值 (.顶边, 到数值 (.内容))
.如果真结束
.如果真 (等于 (.标记, “电话”))
    赋值 (.顶边, 到数值 (.内容))
.如果真结束
.如果真 (等于 (.标记, “址3”))
    赋值 (.顶边, 到数值 (.内容))
.如果真结束
.如果真 (等于 (.标记, “址4”))
    赋值 (.顶边, 到数值 (.内容))
.如果真结束
.如果真 (等于 (.标记, “尾”))
    赋值 (.顶边, 到数值 (.内容))
.如果真结束



.子程序 编辑框3处理, 空白型, , 
.如果真 (等于 (.标记, “邮1”))
    赋值 (.宽度, 到数值 (.内容))
.如果真结束
.如果真 (等于 (.标记, “邮2”))
    赋值 (.宽度, 到数值 (.内容))
.如果真结束
.如果真 (等于 (.标记, “邮3”))
    赋值 (.宽度, 到数值 (.内容))
.如果真结束
.如果真 (等于 (.标记, “邮4”))
    赋值 (.宽度, 到数值 (.内容))
.如果真结束
.如果真 (等于 (.标记, “邮5”))
    赋值 (.宽度, 到数值 (.内容))
.如果真结束
.如果真 (等于 (.标记, “邮6”))
    赋值 (.宽度, 到数值 (.内容))
.如果真结束

.如果真 (等于 (.标记, “址1”))
    赋值 (.宽度, 到数值 (.内容))
.如果真结束
.如果真 (等于 (.标记, “址2”))
    赋值 (.宽度, 到数值 (.内容))
.如果真结束
.如果真 (等于 (.标记, “姓名”))
    赋值 (.宽度, 到数值 (.内容))
.如果真结束
.如果真 (等于 (.标记, “电话”))
    赋值 (.宽度, 到数值 (.内容))
.如果真结束
.如果真 (等于 (.标记, “址3”))
    赋值 (.宽度, 到数值 (.内容))
.如果真结束
.如果真 (等于 (.标记, “址4”))
    赋值 (.宽度, 到数值 (.内容))
.如果真结束
.如果真 (等于 (.标记, “尾”))
    赋值 (.宽度, 到数值 (.内容))
.如果真结束



.子程序 编辑框4处理, 空白型, , 
.如果真 (等于 (.标记, “邮1”))
    赋值 (.高度, 到数值 (.内容))
.如果真结束
.如果真 (等于 (.标记, “邮2”))
    赋值 (.高度, 到数值 (.内容))
.如果真结束
.如果真 (等于 (.标记, “邮3”))
    赋值 (.高度, 到数值 (.内容))
.如果真结束
.如果真 (等于 (.标记, “邮4”))
    赋值 (.高度, 到数值 (.内容))
.如果真结束
.如果真 (等于 (.标记, “邮5”))
    赋值 (.高度, 到数值 (.内容))
.如果真结束
.如果真 (等于 (.标记, “邮6”))
    赋值 (.高度, 到数值 (.内容))
.如果真结束

.如果真 (等于 (.标记, “址1”))
    赋值 (.高度, 到数值 (.内容))
.如果真结束
.如果真 (等于 (.标记, “址2”))
    赋值 (.高度, 到数值 (.内容))
.如果真结束
.如果真 (等于 (.标记, “姓名”))
    赋值 (.高度, 到数值 (.内容))
.如果真结束
.如果真 (等于 (.标记, “电话”))
    赋值 (.高度, 到数值 (.内容))
.如果真结束
.如果真 (等于 (.标记, “址3”))
    赋值 (.高度, 到数值 (.内容))
.如果真结束
.如果真 (等于 (.标记, “址4”))
    赋值 (.高度, 到数值 (.内容))
.如果真结束
.如果真 (等于 (.标记, “尾”))
    赋值 (.高度, 到数值 (.内容))
.如果真结束



.子程序 _图片框3_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.内容, “”)
赋值 (.内容, “”)
赋值 (.内容, “”)
赋值 (.内容, “”)



.子程序 _退出_被选择, 空白型, , 
销毁 ()

.子程序 _标签目标_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

信息框 (.标记, 0, )

.子程序 _打印信封_被选择, 空白型, , 
.局部变量 比, 小数型, , , 

赋值 (比, 2.65)
.如果真 (等于 (真.开始打印 (选择 (等于 (.现行选中项, 0), #A4纸, #A3纸), 选择 (等于 (位与 (18.取状态 (), #选中), #选中), #横向, #纵向)), 真))
    赋值 (.字体, .字体)
    标签1.字体.字体大小 ＝ 150
    相乘 (.左边, 比).定位写出 (相乘 (.顶边, 比), .标题)
    相乘 (.左边, 比).定位写出 (相乘 (.顶边, 比), .标题)
    相乘 (.左边, 比).定位写出 (相乘 (.顶边, 比), .标题)
    相乘 (.左边, 比).定位写出 (相乘 (.顶边, 比), .标题)
    相乘 (.左边, 比).定位写出 (相乘 (.顶边, 比), .标题)
    相乘 (.左边, 比).定位写出 (相乘 (.顶边, 比), .标题)
    赋值 (.字体, .字体)
    相乘 (.左边, 比).定位写出 (相乘 (.顶边, 比), .标题)
    赋值 (.字体, .字体)
    相乘 (.左边, 比).定位写出 (相乘 (.顶边, 比), .标题)
    赋值 (.字体, .字体)
    相乘 (.左边, 比).定位写出 (相乘 (.顶边, 比), .标题)
    赋值 (.字体, .字体)
    相乘 (.左边, 比).定位写出 (相乘 (.顶边, 比), .标题)
    赋值 (.字体, .字体)
    相乘 (.左边, 比).定位写出 (相乘 (.顶边, 比), .标题)
    赋值 (.字体, .字体)
    相乘 (.左边, 比).定位写出 (相乘 (.顶边, 比), .标题)
    赋值 (.字体, .字体)
    相乘 (.左边, 比).定位写出 (相乘 (.顶边, 比), .标题)
    
    结束打印 ()
.如果真结束




.子程序 _编辑框5_调节钮被按下, 空白型, , 
.参数 按钮值, 整数型, , 

.如果真 (打开 ())
    .如果真 (等于 (取文本左边 (.标记, 2), “邮”))
        赋值 (.字体.字体名称, .字体名称)
        赋值 (.字体.字体大小, .字体大小)
        赋值 (.字体.加粗, .加粗)
        赋值 (.字体.倾斜, .倾斜)
        赋值 (.字体.下划线, .下划线)
        赋值 (.字体.删除线, .删除线)
        赋值 (.文本颜色, .字体颜色) ' 不存在“标签1.字体.字体颜色”之说。标签文字的颜色由其“文本颜色”属性控制。
        赋值 (.字体.字体名称, .字体名称)
        赋值 (.字体.字体大小, .字体大小)
        赋值 (.字体.加粗, .加粗)
        赋值 (.字体.倾斜, .倾斜)
        赋值 (.字体.下划线, .下划线)
        赋值 (.字体.删除线, .删除线)
        赋值 (.文本颜色, .字体颜色) ' 不存在“标签1.字体.字体颜色”之说。标签文字的颜色由其“文本颜色”属性控制。
        赋值 (.字体.字体名称, .字体名称)
        赋值 (.字体.字体大小, .字体大小)
        赋值 (.字体.加粗, .加粗)
        赋值 (.字体.倾斜, .倾斜)
        赋值 (.字体.下划线, .下划线)
        赋值 (.字体.删除线, .删除线)
        赋值 (.文本颜色, .字体颜色) ' 不存在“标签1.字体.字体颜色”之说。标签文字的颜色由其“文本颜色”属性控制。
        赋值 (.字体.字体名称, .字体名称)
        赋值 (.字体.字体大小, .字体大小)
        赋值 (.字体.加粗, .加粗)
        赋值 (.字体.倾斜, .倾斜)
        赋值 (.字体.下划线, .下划线)
        赋值 (.字体.删除线, .删除线)
        赋值 (.文本颜色, .字体颜色) ' 不存在“标签1.字体.字体颜色”之说。标签文字的颜色由其“文本颜色”属性控制。
        赋值 (.字体.字体名称, .字体名称)
        赋值 (.字体.字体大小, .字体大小)
        赋值 (.字体.加粗, .加粗)
        赋值 (.字体.倾斜, .倾斜)
        赋值 (.字体.下划线, .下划线)
        赋值 (.字体.删除线, .删除线)
        赋值 (.文本颜色, .字体颜色) ' 不存在“标签1.字体.字体颜色”之说。标签文字的颜色由其“文本颜色”属性控制。
        赋值 (.字体.字体名称, .字体名称)
        赋值 (.字体.字体大小, .字体大小)
        赋值 (.字体.加粗, .加粗)
        赋值 (.字体.倾斜, .倾斜)
        赋值 (.字体.下划线, .下划线)
        赋值 (.字体.删除线, .删除线)
        赋值 (.文本颜色, .字体颜色) ' 不存在“标签1.字体.字体颜色”之说。标签文字的颜色由其“文本颜色”属性控制。
        
    .如果真结束
    .如果真 (等于 (.标记, “址1”))
        赋值 (.字体.字体名称, .字体名称)
        赋值 (.字体.字体大小, .字体大小)
        赋值 (.字体.加粗, .加粗)
        赋值 (.字体.倾斜, .倾斜)
        赋值 (.字体.下划线, .下划线)
        赋值 (.字体.删除线, .删除线)
        赋值 (.文本颜色, .字体颜色) ' 不存在“标签1.字体.字体颜色”之说。标签文字的颜色由其“文本颜色”属性控制。
        
    .如果真结束
    .如果真 (等于 (.标记, “址2”))
        赋值 (.字体.字体名称, .字体名称)
        赋值 (.字体.字体大小, .字体大小)
        赋值 (.字体.加粗, .加粗)
        赋值 (.字体.倾斜, .倾斜)
        赋值 (.字体.下划线, .下划线)
        赋值 (.字体.删除线, .删除线)
        赋值 (.文本颜色, .字体颜色) ' 不存在“标签1.字体.字体颜色”之说。标签文字的颜色由其“文本颜色”属性控制。
        
    .如果真结束
    .如果真 (等于 (.标记, “姓名”))
        赋值 (.字体.字体名称, .字体名称)
        赋值 (.字体.字体大小, .字体大小)
        赋值 (.字体.加粗, .加粗)
        赋值 (.字体.倾斜, .倾斜)
        赋值 (.字体.下划线, .下划线)
        赋值 (.字体.删除线, .删除线)
        赋值 (.文本颜色, .字体颜色) ' 不存在“标签1.字体.字体颜色”之说。标签文字的颜色由其“文本颜色”属性控制。
        
    .如果真结束
    .如果真 (等于 (.标记, “电话”))
        赋值 (.字体.字体名称, .字体名称)
        赋值 (.字体.字体大小, .字体大小)
        赋值 (.字体.加粗, .加粗)
        赋值 (.字体.倾斜, .倾斜)
        赋值 (.字体.下划线, .下划线)
        赋值 (.字体.删除线, .删除线)
        赋值 (.文本颜色, .字体颜色) ' 不存在“标签1.字体.字体颜色”之说。标签文字的颜色由其“文本颜色”属性控制。
    .如果真结束
    .如果真 (等于 (.标记, “址3”))
        赋值 (.字体.字体名称, .字体名称)
        赋值 (.字体.字体大小, .字体大小)
        赋值 (.字体.加粗, .加粗)
        赋值 (.字体.倾斜, .倾斜)
        赋值 (.字体.下划线, .下划线)
        赋值 (.字体.删除线, .删除线)
        赋值 (.文本颜色, .字体颜色) ' 不存在“标签1.字体.字体颜色”之说。标签文字的颜色由其“文本颜色”属性控制。
    .如果真结束
    .如果真 (等于 (.标记, “址4”))
        赋值 (.字体.字体名称, .字体名称)
        赋值 (.字体.字体大小, .字体大小)
        赋值 (.字体.加粗, .加粗)
        赋值 (.字体.倾斜, .倾斜)
        赋值 (.字体.下划线, .下划线)
        赋值 (.字体.删除线, .删除线)
        赋值 (.文本颜色, .字体颜色) ' 不存在“标签1.字体.字体颜色”之说。标签文字的颜色由其“文本颜色”属性控制。
    .如果真结束
    .如果真 (等于 (.标记, “尾”))
        赋值 (.字体.字体名称, .字体名称)
        赋值 (.字体.字体大小, .字体大小)
        赋值 (.字体.加粗, .加粗)
        赋值 (.字体.倾斜, .倾斜)
        赋值 (.字体.下划线, .下划线)
        赋值 (.字体.删除线, .删除线)
        赋值 (.文本颜色, .字体颜色) ' 不存在“标签1.字体.字体颜色”之说。标签文字的颜色由其“文本颜色”属性控制。
    .如果真结束
    
.如果真结束


.子程序 _易之表信封窗口_创建完毕, 空白型, , 
本软件特别适用于大批量商用信函的信封打印：1、地址下载:几百万条按地区和行业分类的企事业通讯地址、电话低价在线下载(免费赠送500条)。2、集群打印：一台电脑可以控制多台打印机同时打印信封。3、自行编辑信封格式(系统默认5号普通信封)。4、查询各地邮政编码和电话区号。5、外部数据接口：支持Excel、Foxpro、Access、DBIII等常用数据库，可以直接调用这些文件的数据打印信封。
超级信封打印工具商业版。支持各种格式信封、标签、报表、汇款单、包裹单、国际信封、明信片及自定义单据，支持office2000/97/95的数据导入、导出；所有打印内容（邮政编码、地址、单位、电话、姓名、称谓、传真、EMAIL、网址等）平滑拖动设置；全部使用所见即所得的设置方式，由于使用图片为背景，不管这些表单如何变化，设置都变得易如反掌。是为国家事业、企业、公司等单位大批量发送商业信函、管理客户的必备工具。  
彻底支持彩色,打印信封,汇款,特快,包裹,标签,广告信函,CD标签,明信片,插图.1、采用表格方式输入客户地址资料，简洁直观。2、长地址可以折行打印。3、可以对输入的资料进行单一查询、组合查询，只要按一下鼠标就可以完成排序。4、内置全国各地邮政编码，以供查询。5、可以从dBASEIII(Excel)、文本文件批量转入客户地址资料，提高资料利用效率。6、可以批量设置，以便只打印地址资料中的一部分。7、除了批量打印变化的地址资料，相同内容也可打印多分，这在打印标签是非常有用。8、打印标签的操作比Word（本软件发布时Word的最高版本是XP）简单直观很多。9、可以鼠标快速拖动对象也可以使用按钮精确调整每个对象的位置。10、可以随意添加图片。11、完全支持彩色打印，随意设置姓名、地址等等所有内容的文字前景颜色和文字背景颜色，也可以设置整个背景颜色。12、内置大量样板，用户利用这些样板可以立刻生成符合自己需要的格式，每个格式都可以被保存，下次可以直接使用。13、可以嵌入Word文档，以便打印带有可户名称的商业广告信函。  

赋值 (当前记录, _启动窗口.取光标行号 (.))
赋值 (.标题, 取文本中间 (_启动窗口.取文本 (., _启动窗口.取光标行号 (.), 1), 1, 1))
赋值 (.标题, 取文本中间 (_启动窗口.取文本 (., _启动窗口.取光标行号 (.), 1), 2, 1))
赋值 (.标题, 取文本中间 (_启动窗口.取文本 (., _启动窗口.取光标行号 (.), 1), 3, 1))
赋值 (.标题, 取文本中间 (_启动窗口.取文本 (., _启动窗口.取光标行号 (.), 1), 4, 1))
赋值 (.标题, 取文本中间 (_启动窗口.取文本 (., _启动窗口.取光标行号 (.), 1), 5, 1))
赋值 (.标题, 取文本中间 (_启动窗口.取文本 (., _启动窗口.取光标行号 (.), 1), 6, 1))
赋值 (.标题, _启动窗口.取文本 (., _启动窗口.取光标行号 (.), 2))
赋值 (.标题, _启动窗口.取文本 (., _启动窗口.取光标行号 (.), 3))
赋值 (.标题, _启动窗口.取文本 (., _启动窗口.取光标行号 (.), 4))
赋值 (.标题, _启动窗口.取文本 (., _启动窗口.取光标行号 (.), 5))
赋值 (.标题, _启动窗口.取文本 (., _启动窗口.取光标行号 (.), 6))
赋值 (.标题, _启动窗口.取文本 (., _启动窗口.取光标行号 (.), 7))
赋值 (.标题, _启动窗口.取文本 (., _启动窗口.取光标行号 (.), 8))

赋值 (固定, 假)
判断是否已注册 ()

.子程序 _编辑框6_调节钮被按下, 空白型, , 
.参数 按钮值, 整数型, , 

_编辑框5_调节钮被按下 (1)

.子程序 _关于_被选择, 空白型, , 
信息框 (“为易之表加入一个特色,特色不是空想出来的,而是实干出来的!”, 0, )

.子程序 _画板右下_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

161.投递信息 (2, 0)


.子程序 移动也只显示一个夹点, 空白型, , 
.如果真 (等于 (.标记, “邮1”))
    相减 (相加 (.左边, .宽度), 2).移动 (相减 (相加 (.顶边, .高度), 2), , )
.如果真结束
.如果真 (等于 (.标记, “邮2”))
    相减 (相加 (.左边, .宽度), 2).移动 (相减 (相加 (.顶边, .高度), 2), , )
.如果真结束
.如果真 (等于 (.标记, “邮3”))
    相减 (相加 (.左边, .宽度), 2).移动 (相减 (相加 (.顶边, .高度), 2), , )
.如果真结束
.如果真 (等于 (.标记, “邮4”))
    相减 (相加 (.左边, .宽度), 2).移动 (相减 (相加 (.顶边, .高度), 2), , )
.如果真结束
.如果真 (等于 (.标记, “邮5”))
    相减 (相加 (.左边, .宽度), 2).移动 (相减 (相加 (.顶边, .高度), 2), , )
.如果真结束
.如果真 (等于 (.标记, “邮6”))
    相减 (相加 (.左边, .宽度), 2).移动 (相减 (相加 (.顶边, .高度), 2), , )
.如果真结束

.如果真 (等于 (.标记, “址1”))
    相减 (相加 (.左边, .宽度), 2).移动 (相减 (相加 (.顶边, .高度), 2), , )
.如果真结束
.如果真 (等于 (.标记, “址2”))
    相减 (相加 (.左边, .宽度), 2).移动 (相减 (相加 (.顶边, .高度), 2), , )
.如果真结束
.如果真 (等于 (.标记, “姓名”))
    相减 (相加 (.左边, .宽度), 2).移动 (相减 (相加 (.顶边, .高度), 2), , )
.如果真结束
.如果真 (等于 (.标记, “电话”))
    相减 (相加 (.左边, .宽度), 2).移动 (相减 (相加 (.顶边, .高度), 2), , )
.如果真结束
.如果真 (等于 (.标记, “址3”))
    相减 (相加 (.左边, .宽度), 2).移动 (相减 (相加 (.顶边, .高度), 2), , )
.如果真结束
.如果真 (等于 (.标记, “址4”))
    相减 (相加 (.左边, .宽度), 2).移动 (相减 (相加 (.顶边, .高度), 2), , )
.如果真结束
.如果真 (等于 (.标记, “尾”))
    相减 (相加 (.左边, .宽度), 2).移动 (相减 (相加 (.顶边, .高度), 2), , )
    
.如果真结束

#顶层.调整层次 ()


.子程序 _画板右下_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

夹点重新定尺寸 ()

.子程序 夹点重新定尺寸, 空白型, , 
.如果真 (等于 (.标记, “邮1”))
    .移动 (相加 (相减 (.左边, .左边), 2), 相加 (相减 (.顶边, .顶边), 2))
    .移动 (.宽度, .高度)
    .移动 (.宽度, .高度)
    .移动 (.宽度, .高度)
    .移动 (.宽度, .高度)
    .移动 (.宽度, .高度)
    
.如果真结束
.如果真 (等于 (.标记, “邮2”))
    .移动 (相加 (相减 (.左边, .左边), 2), 相加 (相减 (.顶边, .顶边), 2))
.如果真结束
.如果真 (等于 (.标记, “邮3”))
    .移动 (相加 (相减 (.左边, .左边), 2), 相加 (相减 (.顶边, .顶边), 2))
.如果真结束
.如果真 (等于 (.标记, “邮4”))
    .移动 (相加 (相减 (.左边, .左边), 2), 相加 (相减 (.顶边, .顶边), 2))
.如果真结束
.如果真 (等于 (.标记, “邮5”))
    .移动 (相加 (相减 (.左边, .左边), 2), 相加 (相减 (.顶边, .顶边), 2))
.如果真结束
.如果真 (等于 (.标记, “邮6”))
    .移动 (相加 (相减 (.左边, .左边), 2), 相加 (相减 (.顶边, .顶边), 2))
.如果真结束

.如果真 (等于 (.标记, “址1”))
    .移动 (相加 (相减 (.左边, .左边), 2), 相加 (相减 (.顶边, .顶边), 2))
.如果真结束
.如果真 (等于 (.标记, “址2”))
    .移动 (相加 (相减 (.左边, .左边), 2), 相加 (相减 (.顶边, .顶边), 2))
.如果真结束
.如果真 (等于 (.标记, “姓名”))
    .移动 (相加 (相减 (.左边, .左边), 2), 相加 (相减 (.顶边, .顶边), 2))
.如果真结束
.如果真 (等于 (.标记, “电话”))
    .移动 (相加 (相减 (.左边, .左边), 2), 相加 (相减 (.顶边, .顶边), 2))
.如果真结束
.如果真 (等于 (.标记, “址3”))
    .移动 (相加 (相减 (.左边, .左边), 2), 相加 (相减 (.顶边, .顶边), 2))
.如果真结束
.如果真 (等于 (.标记, “址4”))
    .移动 (相加 (相减 (.左边, .左边), 2), 相加 (相减 (.顶边, .顶边), 2))
.如果真结束
.如果真 (等于 (.标记, “尾”))
    .移动 (相加 (相减 (.左边, .左边), 2), 相加 (相减 (.顶边, .顶边), 2))
.如果真结束




.子程序 _图片框3_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

夹点重新定尺寸 ()

.子程序 _画板右下_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

夹点重新定尺寸 ()


.子程序 _工具条1_被单击, 空白型, , 
.参数 按钮索引, 整数型, , 

.如果真 (等于 (1))
    _上一封信_被选择 ()
    
.如果真结束
.如果真 (等于 (2))
    _下一封信_被选择 ()
.如果真结束
.如果真 (等于 (按钮索引, 4))
    _取回信封模板_被选择 ()
.如果真结束
.如果真 (等于 (按钮索引, 5))
    _保存信封模板_被选择 ()
.如果真结束
.如果真 (等于 (6))
    _使用最近一次模板_被选择 ()
.如果真结束
.如果真 (等于 (按钮索引, 8))
    _打印信封_被选择 ()
.如果真结束
.如果真 (等于 (按钮索引, 9))
    _批量打印_被选择 ()
.如果真结束
.如果真 (等于 (按钮索引, 11))
    _上对齐邮编_被选择 ()
.如果真结束
.如果真 (等于 (按钮索引, 12))
    _左对齐地址_被选择 ()
.如果真结束
.如果真 (等于 (按钮索引, 13))
    _邮编水平等距12_被选择 ()
.如果真结束
.如果真 (等于 (按钮索引, 14))
    _邮编水平等距16_被选择 ()
.如果真结束

.如果真 (等于 (按钮索引, 19))
    销毁 ()
.如果真结束


.子程序 _邮编1_被选择, 空白型, , 
_标签邮1_鼠标左键被按下 (1, 1, 1)

.子程序 _邮编2_被选择, 空白型, , 
_标签邮2_鼠标左键被按下 (1, 1, 1)


.子程序 _邮编3_被选择, 空白型, , 
_标签邮3_鼠标左键被按下 (1, 1, 1)


.子程序 _邮编4_被选择, 空白型, , 
_标签邮4_鼠标左键被按下 (1, 1, 1)


.子程序 _邮编5_被选择, 空白型, , 
_标签邮5_鼠标左键被按下 (1, 1, 1)


.子程序 _邮编6_被选择, 空白型, , 
_标签邮6_鼠标左键被按下 (1, 1, 1)


.子程序 _对方地址1_被选择, 空白型, , 
_标签对方地址1_鼠标左键被按下 (1, 1, 1)

.子程序 _对方地址2_被选择, 空白型, , 
_标签对方地址2_鼠标左键被按下 (1, 1, 1)


.子程序 _对方姓名_被选择, 空白型, , 
_标签姓名_鼠标左键被按下 (1, 1, 1)


.子程序 _对方电话_被选择, 空白型, , 
_标签电话号码_鼠标左键被按下 (1, 1, 1)


.子程序 _已方地址1_被选择, 空白型, , 
_标签已方地址1_鼠标左键被按下 (1, 1, 1)


.子程序 _已方地址2_被选择, 空白型, , 
_标签已方地址2_鼠标左键被按下 (1, 1, 1)


.子程序 _已方邮编_被选择, 空白型, , 
_标签已方邮编_鼠标左键被按下 (1, 1, 1)


.子程序 _打印设置_被选择, 空白型, , 
如果真 (打印机1.打印设置 ())
真.开始打印 (真, #A4纸, )


.子程序 更换记录, 空白型, , 
赋值 (.标题, 取文本中间 (_启动窗口.取文本 (., 当前记录, 1), 1, 1))
赋值 (.标题, 取文本中间 (_启动窗口.取文本 (., 当前记录, 1), 2, 1))
赋值 (.标题, 取文本中间 (_启动窗口.取文本 (., 当前记录, 1), 3, 1))
赋值 (.标题, 取文本中间 (_启动窗口.取文本 (., 当前记录, 1), 4, 1))
赋值 (.标题, 取文本中间 (_启动窗口.取文本 (., 当前记录, 1), 5, 1))
赋值 (.标题, 取文本中间 (_启动窗口.取文本 (., 当前记录, 1), 6, 1))
赋值 (.标题, _启动窗口.取文本 (., 当前记录, 2))
赋值 (.标题, _启动窗口.取文本 (., 当前记录, 3))
赋值 (.标题, _启动窗口.取文本 (., 当前记录, 4))
赋值 (.标题, _启动窗口.取文本 (., 当前记录, 5))
.如果真 (等于 (固定, 真))
    赋值 (固定行, 到数值 (.内容))
    赋值 (.标题, _启动窗口.取文本 (., 固定行, 6))
    赋值 (.标题, _启动窗口.取文本 (., 固定行, 7))
    赋值 (.标题, _启动窗口.取文本 (., 固定行, 8))
.如果真结束
.如果真 (等于 (固定, 假))
    赋值 (.标题, _启动窗口.取文本 (., 当前记录, 6))
    赋值 (.标题, _启动窗口.取文本 (., 当前记录, 7))
    赋值 (.标题, _启动窗口.取文本 (., 当前记录, 8))
    
.如果真结束


.子程序 _下一封信_被选择, 空白型, , 
赋值 (当前记录, 相加 (当前记录, 1))
.如果真 (等于 (当前记录, -1))
    赋值 (当前记录, 0)
.如果真结束
.如果真 (大于 (当前记录, _启动窗口.取行数 (.)))
    赋值 (当前记录, _启动窗口.取行数 (.))
.如果真结束

更换记录 ()

.子程序 _上一封信_被选择, 空白型, , 
赋值 (当前记录, 相减 (当前记录, 1))
信息框 (当前记录, 0, )
.如果真 (小于 (当前记录, 1))
    赋值 (当前记录, 1)
.如果真结束
.如果真 (大于 (当前记录, _启动窗口.取行数 (.)))
    赋值 (当前记录, _启动窗口.取行数 (.))
.如果真结束

更换记录 ()


.子程序 _保存信封模板_被选择, 空白型, , 
赋值 (.标题, “请输入欲保存到的模板文件名：”)
赋值 (.类型, 1)

.如果真 (等于 (打开 (), 假))
    返回 ()
.如果真结束

.如果真 (等于 (.文件名, “”))
    返回 ()
.如果真结束

置等待鼠标 ()
存模板乐 (.文件名)
赋值 (易之表信封窗口.标记, .文件名)
赋值 (_启动窗口.., .文件名)
赋值 (易之表信封窗口.标题, 相加 (“信息打印 - ”, .文件名))
存模板乐 (相加 (取运行目录 (), “\SETUP.INI”))
恢复鼠标 ()
信息框 (“保存模板完成!”, 0, )


.子程序 存模板乐, 空白型, , 
.参数 模板文件名, 文本型, , 


写配置项 (“邮1”, “左边”, 到文本 (.左边))
写配置项 (“邮1”, “顶边”, 到文本 (.顶边))
写配置项 (“邮1”, “高度”, 到文本 (.高度))
写配置项 (“邮1”, “宽度”, 到文本 (.宽度))
写配置项 (“邮1”, “字体”, 到文本 (.字体.字体名称))
写配置项 (“邮1”, “字号”, 到文本 (.字体.字体大小))

写配置项 (“邮2”, “左边”, 到文本 (.左边))
写配置项 (“邮2”, “顶边”, 到文本 (.顶边))
写配置项 (“邮2”, “高度”, 到文本 (.高度))
写配置项 (“邮2”, “宽度”, 到文本 (.宽度))
写配置项 (“邮2”, “字体”, 到文本 (.字体.字体名称))
写配置项 (“邮2”, “字号”, 到文本 (.字体.字体大小))

写配置项 (“邮3”, “左边”, 到文本 (.左边))
写配置项 (“邮3”, “顶边”, 到文本 (.顶边))
写配置项 (“邮3”, “高度”, 到文本 (.高度))
写配置项 (“邮3”, “宽度”, 到文本 (.宽度))
写配置项 (“邮3”, “字体”, 到文本 (.字体.字体名称))
写配置项 (“邮3”, “字号”, 到文本 (.字体.字体大小))

写配置项 (“邮4”, “左边”, 到文本 (.左边))
写配置项 (“邮4”, “顶边”, 到文本 (.顶边))
写配置项 (“邮4”, “高度”, 到文本 (.高度))
写配置项 (“邮4”, “宽度”, 到文本 (.宽度))
写配置项 (“邮4”, “字体”, 到文本 (.字体.字体名称))
写配置项 (“邮4”, “字号”, 到文本 (.字体.字体大小))

写配置项 (“邮5”, “左边”, 到文本 (.左边))
写配置项 (“邮5”, “顶边”, 到文本 (.顶边))
写配置项 (“邮5”, “高度”, 到文本 (.高度))
写配置项 (“邮5”, “宽度”, 到文本 (.宽度))
写配置项 (“邮5”, “字体”, 到文本 (.字体.字体名称))
写配置项 (“邮5”, “字号”, 到文本 (.字体.字体大小))

写配置项 (“邮6”, “左边”, 到文本 (.左边))
写配置项 (“邮6”, “顶边”, 到文本 (.顶边))
写配置项 (“邮6”, “高度”, 到文本 (.高度))
写配置项 (“邮6”, “宽度”, 到文本 (.宽度))
写配置项 (“邮6”, “字体”, 到文本 (.字体.字体名称))
写配置项 (“邮6”, “字号”, 到文本 (.字体.字体大小))

写配置项 (“址1”, “左边”, 到文本 (.左边))
写配置项 (“址1”, “顶边”, 到文本 (.顶边))
写配置项 (“址1”, “高度”, 到文本 (.高度))
写配置项 (“址1”, “宽度”, 到文本 (.宽度))
写配置项 (“址1”, “字体”, 到文本 (.字体.字体名称))
写配置项 (“址1”, “字号”, 到文本 (.字体.字体大小))

写配置项 (“址2”, “左边”, 到文本 (.左边))
写配置项 (“址2”, “顶边”, 到文本 (.顶边))
写配置项 (“址2”, “高度”, 到文本 (.高度))
写配置项 (“址2”, “宽度”, 到文本 (.宽度))
写配置项 (“址2”, “字体”, 到文本 (.字体.字体名称))
写配置项 (“址2”, “字号”, 到文本 (.字体.字体大小))

写配置项 (“姓名”, “左边”, 到文本 (.左边))
写配置项 (“姓名”, “顶边”, 到文本 (.顶边))
写配置项 (“姓名”, “高度”, 到文本 (.高度))
写配置项 (“姓名”, “宽度”, 到文本 (.宽度))
写配置项 (“姓名”, “字体”, 到文本 (.字体.字体名称))
写配置项 (“姓名”, “字号”, 到文本 (.字体.字体大小))

写配置项 (“电话”, “左边”, 到文本 (.左边))
写配置项 (模板文件名, “电话”, “顶边”, 到文本 (.顶边))
写配置项 (模板文件名, “电话”, “高度”, 到文本 (.高度))
写配置项 (模板文件名, “电话”, “宽度”, 到文本 (.宽度))
写配置项 (模板文件名, “电话”, “字体”, 到文本 (.字体.字体名称))
写配置项 (模板文件名, “电话”, “字号”, 到文本 (.字体.字体大小))

写配置项 (“址3”, “左边”, 到文本 (.左边))
写配置项 (“址3”, “顶边”, 到文本 (.顶边))
写配置项 (“址3”, “高度”, 到文本 (.高度))
写配置项 (“址3”, “宽度”, 到文本 (.宽度))
写配置项 (“址3”, “字体”, 到文本 (.字体.字体名称))
写配置项 (“址3”, “字号”, 到文本 (.字体.字体大小))

写配置项 (“址4”, “左边”, 到文本 (.左边))
写配置项 (“址4”, “顶边”, 到文本 (.顶边))
写配置项 (“址4”, “高度”, 到文本 (.高度))
写配置项 (“址4”, “宽度”, 到文本 (.宽度))
写配置项 (“址4”, “字体”, 到文本 (.字体.字体名称))
写配置项 (“址4”, “字号”, 到文本 (.字体.字体大小))

写配置项 (“尾”, “左边”, 到文本 (.左边))
写配置项 (“尾”, “顶边”, 到文本 (.顶边))
写配置项 (“尾”, “高度”, 到文本 (.高度))
写配置项 (“尾”, “宽度”, 到文本 (.宽度))
写配置项 (“尾”, “字体”, 到文本 (.字体.字体名称))
写配置项 (“尾”, “字号”, 到文本 (.字体.字体大小))

写配置项 (“打印”, “纸张大小”, 到文本 (选择 (等于 (.现行选中项, 0), #A4纸, #A3纸)))
写配置项 (“打印”, “纸张方向”, 到文本 (选择 (等于 (位与 (15.取状态 (), #选中), #选中), #横向, #纵向)))


.子程序 _取回信封模板_被选择, 空白型, , 
.局部变量 信息, 文本型, , , 

赋值 (.标题, “请输入欲打开来的模板文件名：”)
赋值 (.类型, 0)

.如果真 (等于 (打开 (), 假))
    返回 ()
.如果真结束

.如果真 (等于 (.文件名, “”))
    返回 ()
.如果真结束

取模板乐 (.文件名)
赋值 (易之表信封窗口.标记, .文件名)
赋值 (_启动窗口.., .文件名)
赋值 (易之表信封窗口.标题, 相加 (“信息打印 - ”, .文件名))


.子程序 取模板乐, 空白型, , 
.参数 模板文件名, 文本型, , 


赋值 (.左边, 到数值 (读配置项 (“邮1”, “左边”, )))
赋值 (.顶边, 到数值 (读配置项 (“邮1”, “顶边”, )))
赋值 (.高度, 到数值 (读配置项 (“邮1”, “高度”, )))
赋值 (.宽度, 到数值 (读配置项 (“邮1”, “宽度”, )))
赋值 (.字体.字体名称, 读配置项 (“邮1”, “字体”, ))
赋值 (.字体.字体大小, 到数值 (读配置项 (“邮1”, “字号”, )))

赋值 (.左边, 到数值 (读配置项 (“邮2”, “左边”, )))
赋值 (.顶边, 到数值 (读配置项 (“邮2”, “顶边”, )))
赋值 (.高度, 到数值 (读配置项 (“邮2”, “高度”, )))
赋值 (.宽度, 到数值 (读配置项 (“邮2”, “宽度”, )))
赋值 (.字体.字体名称, 读配置项 (“邮2”, “字体”, ))
赋值 (.字体.字体大小, 到数值 (读配置项 (“邮2”, “字号”, )))

赋值 (.左边, 到数值 (读配置项 (“邮3”, “左边”, )))
赋值 (.顶边, 到数值 (读配置项 (“邮3”, “顶边”, )))
赋值 (.高度, 到数值 (读配置项 (“邮3”, “高度”, )))
赋值 (.宽度, 到数值 (读配置项 (“邮3”, “宽度”, )))
赋值 (.字体.字体名称, 读配置项 (“邮3”, “字体”, ))
赋值 (.字体.字体大小, 到数值 (读配置项 (“邮3”, “字号”, )))

赋值 (.左边, 到数值 (读配置项 (“邮4”, “左边”, )))
赋值 (.顶边, 到数值 (读配置项 (“邮4”, “顶边”, )))
赋值 (.高度, 到数值 (读配置项 (“邮4”, “高度”, )))
赋值 (.宽度, 到数值 (读配置项 (“邮4”, “宽度”, )))
赋值 (.字体.字体名称, 读配置项 (“邮4”, “字体”, ))
赋值 (.字体.字体大小, 到数值 (读配置项 (“邮4”, “字号”, )))

赋值 (.左边, 到数值 (读配置项 (“邮5”, “左边”, )))
赋值 (.顶边, 到数值 (读配置项 (“邮5”, “顶边”, )))
赋值 (.高度, 到数值 (读配置项 (“邮5”, “高度”, )))
赋值 (.宽度, 到数值 (读配置项 (“邮5”, “宽度”, )))
赋值 (.字体.字体名称, 读配置项 (“邮5”, “字体”, ))
赋值 (.字体.字体大小, 到数值 (读配置项 (“邮5”, “字号”, )))

赋值 (.左边, 到数值 (读配置项 (“邮6”, “左边”, )))
赋值 (.顶边, 到数值 (读配置项 (“邮6”, “顶边”, )))
赋值 (.高度, 到数值 (读配置项 (“邮6”, “高度”, )))
赋值 (.宽度, 到数值 (读配置项 (“邮6”, “宽度”, )))
赋值 (.字体.字体名称, 读配置项 (“邮6”, “字体”, ))
赋值 (.字体.字体大小, 到数值 (读配置项 (“邮6”, “字号”, )))

赋值 (.左边, 到数值 (读配置项 (“址1”, “左边”, )))
赋值 (.顶边, 到数值 (读配置项 (“址1”, “顶边”, )))
赋值 (.高度, 到数值 (读配置项 (“址1”, “高度”, )))
赋值 (.宽度, 到数值 (读配置项 (“址1”, “宽度”, )))
赋值 (.字体.字体名称, 读配置项 (“址1”, “字体”, ))
赋值 (.字体.字体大小, 到数值 (读配置项 (“址1”, “字号”, )))

赋值 (.左边, 到数值 (读配置项 (“址2”, “左边”, )))
赋值 (.顶边, 到数值 (读配置项 (“址2”, “顶边”, )))
赋值 (.高度, 到数值 (读配置项 (“址2”, “高度”, )))
赋值 (.宽度, 到数值 (读配置项 (“址2”, “宽度”, )))
赋值 (.字体.字体名称, 读配置项 (“址2”, “字体”, ))
赋值 (.字体.字体大小, 到数值 (读配置项 (“址2”, “字号”, )))

赋值 (.左边, 到数值 (读配置项 (“姓名”, “左边”, )))
赋值 (.顶边, 到数值 (读配置项 (“姓名”, “顶边”, )))
赋值 (.高度, 到数值 (读配置项 (“姓名”, “高度”, )))
赋值 (.宽度, 到数值 (读配置项 (“姓名”, “宽度”, )))
赋值 (.字体.字体名称, 读配置项 (“姓名”, “字体”, ))
赋值 (.字体.字体大小, 到数值 (读配置项 (“姓名”, “字号”, )))

赋值 (.左边, 到数值 (读配置项 (“电话”, “左边”, )))
赋值 (.顶边, 到数值 (读配置项 (模板文件名, “电话”, “顶边”, )))
赋值 (.高度, 到数值 (读配置项 (模板文件名, “电话”, “高度”, )))
赋值 (.宽度, 到数值 (读配置项 (模板文件名, “电话”, “宽度”, )))
赋值 (.字体.字体名称, 读配置项 (模板文件名, “电话”, “字体”, ))
赋值 (.字体.字体大小, 到数值 (读配置项 (模板文件名, “电话”, “字号”, )))

赋值 (.左边, 到数值 (读配置项 (“址3”, “左边”, )))
赋值 (.顶边, 到数值 (读配置项 (“址3”, “顶边”, )))
赋值 (.高度, 到数值 (读配置项 (“址3”, “高度”, )))
赋值 (.宽度, 到数值 (读配置项 (“址3”, “宽度”, )))
赋值 (.字体.字体名称, 读配置项 (“址3”, “字体”, ))
赋值 (.字体.字体大小, 到数值 (读配置项 (“址3”, “字号”, )))

赋值 (.左边, 到数值 (读配置项 (“址4”, “左边”, )))
赋值 (.顶边, 到数值 (读配置项 (“址4”, “顶边”, )))
赋值 (.高度, 到数值 (读配置项 (“址4”, “高度”, )))
赋值 (.宽度, 到数值 (读配置项 (“址4”, “宽度”, )))
赋值 (.字体.字体名称, 读配置项 (“址4”, “字体”, ))
赋值 (.字体.字体大小, 到数值 (读配置项 (“址4”, “字号”, )))

赋值 (.左边, 到数值 (读配置项 (“尾”, “左边”, )))
赋值 (.顶边, 到数值 (读配置项 (“尾”, “顶边”, )))
赋值 (.高度, 到数值 (读配置项 (“尾”, “高度”, )))
赋值 (.宽度, 到数值 (读配置项 (“尾”, “宽度”, )))
赋值 (.字体.字体名称, 读配置项 (“尾”, “字体”, ))
赋值 (.字体.字体大小, 到数值 (读配置项 (“尾”, “字号”, )))

写配置项 (模板文件名, “打印”, “纸张大小”, 到文本 (选择 (组合框1.现行选中项 ＝ 0, #A4纸, #A3纸)))
写配置项 (模板文件名, “打印”, “纸张方向”, 到文本 (选择 (位与 (工具条1.取状态 (15), #选中) ＝ #选中, #横向, #纵向)))



.子程序 _使用最近一次模板_被选择, 空白型, , 
.如果真 (文件是否存在 (相加 (取运行目录 (), “\SETUP.INI”)))
    取模板乐 (相加 (取运行目录 (), “\SETUP.INI”))
    
.如果真结束


.子程序 _固定发信人信息为表中某行_被选择, 空白型, , 
赋值 (固定, 真)
赋值 (固定行, 1)
输入框 (“请输入想要使用表中的哪一行为固定的发信人信息:”, “请输入”, “1”, 固定行, )
.如果真 (或者 (等于 (固定行, 0), 大于 (固定行, _启动窗口.取行数 (.))))
    赋值 (固定行, 1)
.如果真结束
赋值 (.标题, _启动窗口.取文本 (., 固定行, 6))
赋值 (.标题, _启动窗口.取文本 (., 固定行, 7))
赋值 (.标题, _启动窗口.取文本 (., 固定行, 8))
赋值 (.内容, 到文本 (固定行))
赋值 (.选中, 真)

.子程序 _取消固定发信人信息_被选择, 空白型, , 
赋值 (固定, 假)
赋值 (.选中, 假)


.子程序 _批量打印_被选择, 空白型, , 不注册就不能打印哦!

.如果 ()

.子程序 _选择框_被单击, 空白型, , 
赋值 (固定, .选中)
.如果真 (等于 (固定, 真))
    赋值 (固定行, 到数值 (.内容))
    赋值 (.标题, _启动窗口.取文本 (., 固定行, 6))
    赋值 (.标题, _启动窗口.取文本 (., 固定行, 7))
    赋值 (.标题, _启动窗口.取文本 (., 固定行, 8))
.如果真结束


.窗口程序集 窗口程序集3, , , 

.子程序 _易之表批信窗口_创建完毕, 空白型, , 
赋值 (.内容, 易之表信封窗口.标记)
赋值 (.内容, _启动窗口..)
赋值 (.内容, 到文本 (_启动窗口.取光标行号 (.)))
赋值 (.内容, 到文本 (相减 (相加 (_启动窗口.取选择行数 (.), _启动窗口.取光标行号 (.)), 1)))
赋值 (.内容, 到文本 (_启动窗口.取行数 (.)))


.子程序 _按钮2_被单击, 空白型, , 
销毁 ()

.子程序 _按钮1_被单击, 空白型, , 
.局部变量 计次, 整数型, , , 
.局部变量 计数, 整数型, , , 

.如果真 (等于 (.内容, .内容))
    .如果 (等于 (.选中, 真))
        赋值 (易之表信封窗口., 真)
        赋值 (易之表信封窗口., 到数值 (.内容))
    .否则
        赋值 (易之表信封窗口., 假)
    .如果结束
    赋值 (易之表信封窗口., 到数值 (.内容))
    易之表信封窗口.更换记录 ()
    按模板打印信封 ()
    返回 ()
.如果真结束
赋值 (计数, 1)
赋值 (易之表信封窗口., 到数值 (.内容))

.计次循环首 (相加 (相减 (到数值 (.内容), 到数值 (.内容)), 1), 计数)
    .如果 (等于 (.选中, 真))
        赋值 (易之表信封窗口., 真)
        赋值 (易之表信封窗口., 到数值 (.内容))
    .否则
        赋值 (易之表信封窗口., 假)
    .如果结束
    信息框 (相加 (“计数=”, 到文本 (计数), “    起始数=”, .内容, “    记录数=”, 到文本 (相减 (相加 (计数, 到数值 (.内容)), 1))), 0, )
    赋值 (易之表信封窗口., 相减 (相加 (计数, 到数值 (.内容)), 1))
    易之表信封窗口.更换记录 ()
    
    按模板打印信封 ()
.计次循环尾 ()


.子程序 按模板打印信封, 空白型, , 
.局部变量 比, 小数型, , , 

赋值 (比, 2.6)
.如果真 (等于 (假.开始打印 (假, #默认纸, #横向), 真))
    赋值 (.字体, 易之表信封窗口..字体)
    标签1.字体.字体大小 ＝ 150
    相乘 (易之表信封窗口..左边, 比).定位写出 (相乘 (易之表信封窗口..顶边, 比), 易之表信封窗口..标题)
    相乘 (易之表信封窗口..左边, 比).定位写出 (相乘 (易之表信封窗口..顶边, 比), 易之表信封窗口..标题)
    相乘 (易之表信封窗口..左边, 比).定位写出 (相乘 (易之表信封窗口..顶边, 比), 易之表信封窗口..标题)
    相乘 (易之表信封窗口..左边, 比).定位写出 (相乘 (易之表信封窗口..顶边, 比), 易之表信封窗口..标题)
    相乘 (易之表信封窗口..左边, 比).定位写出 (相乘 (易之表信封窗口..顶边, 比), 易之表信封窗口..标题)
    相乘 (易之表信封窗口..左边, 比).定位写出 (相乘 (易之表信封窗口..顶边, 比), 易之表信封窗口..标题)
    赋值 (.字体, 易之表信封窗口..字体)
    相乘 (易之表信封窗口..左边, 比).定位写出 (相乘 (易之表信封窗口..顶边, 比), 易之表信封窗口..标题)
    赋值 (.字体, 易之表信封窗口..字体)
    相乘 (易之表信封窗口..左边, 比).定位写出 (相乘 (易之表信封窗口..顶边, 比), 易之表信封窗口..标题)
    赋值 (.字体, 易之表信封窗口..字体)
    相乘 (易之表信封窗口..左边, 比).定位写出 (相乘 (易之表信封窗口..顶边, 比), 易之表信封窗口..标题)
    赋值 (.字体, 易之表信封窗口..字体)
    相乘 (易之表信封窗口..左边, 比).定位写出 (相乘 (易之表信封窗口..顶边, 比), 易之表信封窗口..标题)
    赋值 (.字体, 易之表信封窗口..字体)
    相乘 (易之表信封窗口..左边, 比).定位写出 (相乘 (易之表信封窗口..顶边, 比), 易之表信封窗口..标题)
    赋值 (.字体, 易之表信封窗口..字体)
    相乘 (易之表信封窗口..左边, 比).定位写出 (相乘 (易之表信封窗口..顶边, 比), 易之表信封窗口..标题)
    赋值 (.字体, 易之表信封窗口..字体)
    相乘 (易之表信封窗口..左边, 比).定位写出 (相乘 (易之表信封窗口..顶边, 比), 易之表信封窗口..标题)
    
    结束打印 ()
.如果真结束




.子程序 _单选框6_被单击, 空白型, , 
.如果 (等于 (.选中, 真))
    赋值 (易之表信封窗口., 真)
    赋值 (易之表信封窗口., 到数值 (.内容))
.否则
    赋值 (易之表信封窗口., 假)
.如果结束


.子程序 _单选框5_被单击, 空白型, , 
.如果 (等于 (.选中, 假))
    赋值 (易之表信封窗口., 真)
.否则
    赋值 (易之表信封窗口., 假)
.如果结束


.窗口程序集 窗口程序集4, , , 

.子程序 _易之表注册_创建完毕, 空白型, , 
赋值 (.内容, 到文本 (取硬盘特征字 ()))
赋值 (易之表注册.标题, 相加 (“请注册 - ”, #总标题字))


.子程序 _按钮1_被单击, 空白型, , 



.子程序 _按钮2_被单击, 空白型, , 
销毁 ()

.子程序 _标签9_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 



.子程序 _标签10_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 



.窗口程序集 窗口程序集5, , , 

.子程序 _易之表模板窗口_创建完毕, 空白型, , 
.局部变量 字段, 字段信息, , "1", 
.局部变量 计数, 整数型, , , 
.局部变量 计次, 整数型, , , 
.局部变量 树型框序位, 整数型, , , 
.局部变量 根位置, 整数型, , , 
.局部变量 循环总数, 空白型, , , 

全部关闭 ()
.如果真 (等于 (文件是否存在 (“数据\分类表.edb”), 假))
    赋值 (字段 [1].名称, #分类)
    赋值 (字段 [1].类型, #文本型)
    赋值 (字段 [1].最大文本长度, 20)
    .如果真 (等于 (创建 (“数据\分类表.edb”, 字段), 假))
        信息框 (“创建数据库失败！”, #错误图标, “错误”)
        
    .如果真结束
    
.如果真结束
.如果真 (等于 (打开 (“数据\分类表.edb”, , , , , “?”, ), 假))
    信息框 (“无法打开数据库！”, #错误图标, “错误”)
.如果真结束

到首记录 ()
赋值 (计数, 1)
.计次循环首 (取记录数 (), 计数)
    跳到 (计数)
    -1.加入项目 (读 (1), , , )
.计次循环尾 ()
全部关闭 ()

.如果真 (等于 (打开 (“数据\模板库.edb”, , , , , “?”, ), 假))
    信息框 (“无法打开数据库！”, #错误图标, “错误”)
.如果真结束

赋值 (计数, 1)
赋值 (计次, 1)
赋值 (树型框序位, 0)
赋值 (根位置, 0)
赋值 (循环总数, 取项目数 ())
.计次循环首 (循环总数, 计次)
    到首记录 ()
    赋值 (计数, 1)
    .计次循环首 (取记录数 (), 计数)
        跳到 (计数)
        .如果真 (等于 (读 (2), 根位置.取项目文本 ()))
            根位置.加入项目 (读 (1), , , )
            赋值 (树型框序位, 相加 (树型框序位, 1))
        .如果真结束
        
    .计次循环尾 ()
    根位置.扩展 ()
    赋值 (根位置, 相加 (树型框序位, 计次))
    信息框 (根位置, 0, )
    信息框 (树型框1.取项目文本 (根位置), 0, )
.计次循环尾 ()



全部关闭 ()


.子程序 _树型框1_双击项目, 空白型, , 
.局部变量 计数, 整数型, , , 

全部关闭 ()

.如果真 (等于 (打开 (“数据\模板库.edb”, , , , , “?”, ), 假))
    信息框 (“无法打开数据库！”, #错误图标, “错误”)
.如果真结束

到首记录 ()
赋值 (1)
.计次循环首 (取记录数 (), )
    跳到 ()
    
    .如果真 (等于 (.取项目文本 (.最大化按钮), 读 (1)))
        不要在前 ()
        
        .如果真 (等于 (询问保存文档 (), 假))
            易之表模板窗口.标题 ＝ 读 (3)
            赋值 (_启动窗口.标题, 相加 (“易之表 (增强版)  {易之表} - [”, 读 (3), “]”))
            打开并读入文件 (读 (3))
            
        .如果真结束
        要在前 ()
        未知函数_67178760 ()
        
    .如果真结束
    
.计次循环尾 ()
全部关闭 ()

树型框1.取项目文本 (树型框1.现行选中项)

.程序集 附加程序集, , , 

.子程序 显示颜色对话框, 整数型, , 
.局部变量 CC, 未知类型0x4101127C, , , 
.局部变量 CustomColors, 字节型, , "65", 

赋值 (CC., 36)
赋值 (CC., 取窗口句柄 ())
赋值 (CC., 未知函数_167842429 (0))
CC.lpCustColors ＝ “”
.计次循环首 (65, )
    赋值 (CC., 相加 (CC., 字符 (255)))
.计次循环尾 ()
赋值 (CC., 0)
CC.lpTemplateName ＝ “sssss”
.如果 (不等于 (未知函数_167842430 (CC), 0))
    返回 (CC.)
.否则
    返回 (-1)
.如果结束


.子程序 获取组合框内容, 空白型, , 
赋值 (., ..内容)
赋值 (. [1])


 ' 不属于任何一个程序集、类模块的函数：
