 ' 文件类型：Windows模块源码

 ' 程序名称：易语言OGRE类库
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.1
 ' 创建号：0.0





 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 4 系统核心支持库




数据类型 自定义_颜色值, 公开, 
    .成员 红色值, 小数型, , , 
    .成员 绿色值, 小数型, , , 
    .成员 蓝色值, 小数型, , , 
    .成员 透明值, 小数型, , , 

数据类型 自定义_四元素, 公开, 
    .成员 W, 小数型, , , 
    .成员 X, 小数型, , , 
    .成员 Y, 小数型, , , 
    .成员 Z, 小数型, , , 

数据类型 自定义_四维距阵, 公开, 
    .成员 a1, 小数型, , , 
    .成员 a2, 小数型, , , 
    .成员 a3, 小数型, , , 
    .成员 a4, 小数型, , , 
    .成员 b1, 小数型, , , 
    .成员 b2, 小数型, , , 
    .成员 b3, 小数型, , , 
    .成员 b4, 小数型, , , 
    .成员 c1, 小数型, , , 
    .成员 c2, 小数型, , , 
    .成员 c3, 小数型, , , 
    .成员 c4, 小数型, , , 
    .成员 d1, 小数型, , , 
    .成员 d2, 小数型, , , 
    .成员 d3, 小数型, , , 
    .成员 d4, 小数型, , , 

数据类型 自定义_三维向量, 公开, 表示三维空间中的一个点
    .成员 X, 小数型, , , 
    .成员 Y, 小数型, , , 
    .成员 Z, 小数型, , , 


.DLL命令 场景管理_取暗示视口位置, 整数型, "Ogre5eDll.dll", "e_ogre_SceneManager_getSuggestedViewpointPosition", , 取暗示视口位置。返回0为成功，＞0为数组个数不够，值为需要的数组个数
    .参数 句柄, 整数型, , 场景管理句柄
    .参数 是否任意, 逻辑型, , 
    .参数 位置数组, 小数型, 数组, 
    .参数 数组个数, 整数型, , 

.DLL命令 场景管理_取暗示视口方位, 整数型, "Ogre5eDll.dll", "e_ogre_SceneManager_getSuggestedViewpointOrientation", , 取暗示视口方位。返回0为成功，＞0为数组个数不够，值为需要的数组个数
    .参数 句柄, 整数型, , 场景管理句柄
    .参数 是否任意, 逻辑型, , 
    .参数 位置数组, 小数型, 数组, 
    .参数 数组个数, 整数型, , 

.DLL命令 动画_创建轨迹, 整数型, "Ogre5eDll.dll", "e_ogre_Animation_createTrack__IS", , 为动画创建一个动画轨迹,返回动画轨迹句柄
    .参数 动画句柄, 整数型, , 动画对象句柄
    .参数 轨迹索引句柄, 短整数型, , 分配给轨迹动画的索引句柄，用于以后可能的调用，是这个动画轨迹的唯一标识

.DLL命令 场景节点_向量创建场景子节点, 整数型, "Ogre5eDll.dll", "e_ogre_SceneNode_createChildSceneNode_fromVector", , 返回场景子节点句柄
    .参数 句柄, 整数型, , 场景节点句柄
    .参数 偏移量X, 小数型, , 子节点相对于根节点的偏移量
    .参数 偏移量Y, 小数型, , 
    .参数 偏移量Z, 小数型, , 

.DLL命令 动画_创建节点关联轨迹, 整数型, "Ogre5eDll.dll", "e_ogre_Animation_createTrack__ISI", , 为动画创建一个自动与节点关联的动画轨迹,返回动画轨迹句柄
    .参数 动画句柄, 整数型, , 动画对象句柄
    .参数 轨迹索引句柄, 短整数型, , 分配给轨迹动画的索引句柄，用于以后可能的调用，是这个动画轨迹的唯一标识
    .参数 节点句柄, 整数型, , 指定应用这个动画轨迹的节点

.DLL命令 动画_销毁所有轨迹, 空白型, "Ogre5eDll.dll", "e_ogre_Animation_destroyAllTracks", , 移除并销毁构成动画的所有轨迹
    .参数 动画句柄, 整数型, , 动画对象句柄

.DLL命令 动画_销毁轨迹, 空白型, "Ogre5eDll.dll", "e_ogre_Animation_destroyTrack", , 销毁指定的轨迹
    .参数 动画句柄, 整数型, , 动画对象句柄
    .参数 轨迹索引句柄, 短整数型, , 要销毁的轨迹的索引句柄

.DLL命令 动画_取缺省插值方式, 整数型, "Ogre5eDll.dll", "e_ogre_Animation_getDefaultInterpolationMode", , 取所有动画的缺省插值。0 - 线性插值；1 - 样条插值
    .参数 动画句柄, 整数型, , 动画对象句柄

.DLL命令 动画_取当前插值方式, 整数型, "Ogre5eDll.dll", "e_ogre_Animation_getInterpolationMode", , 取动画的当前插值方式。0 - 线性插值；1 - 样条插值
    .参数 动画句柄, 整数型, , 动画对象句柄

.DLL命令 动画_取总长度, 小数型, "Ogre5eDll.dll", "e_ogre_Animation_getLength", , 取当前动画的总长度
    .参数 动画句柄, 整数型, , 动画对象句柄

.DLL命令 动画_取轨迹数量, 整数型, "Ogre5eDll.dll", "e_ogre_Animation_getNumTracks", , 取构成动画的轨迹数量
    .参数 动画句柄, 整数型, , 动画对象句柄

.DLL命令 动画_取名称, 整数型, "Ogre5eDll.dll", "e_ogre_Animation_getName", , 取当前动画的名称。成功返回0、失败返回-1、缓冲区长度不足返回需要的缓冲区长度
    .参数 动画句柄, 整数型, , 动画对象句柄
    .参数 动画名称变量, 文本型, 传址, 储存取得的动画名称
    .参数 缓冲区大小, 整数型, , 动画名称的缓冲区大小

.DLL命令 动画_取动画轨迹, 整数型, "Ogre5eDll.dll", "e_ogre_Animation_getTrack", , 取指定的动画轨迹，返回动画轨迹句柄
    .参数 动画句柄, 整数型, , 动画对象句柄
    .参数 轨迹索引句柄, 短整数型, , 要取得的轨迹的索引句柄

.DLL命令 动画_置缺省插值方式, 空白型, "Ogre5eDll.dll", "e_ogre_Animation_setDefaultInterpolationMode", , 设置动画的缺省插值方式
    .参数 动画句柄, 整数型, , 动画对象句柄
    .参数 插值方式, 整数型, , 要设置的动画插值方式。0 - 线性插值；1 - 样条插值

.DLL命令 动画_置当前插值方式, 空白型, "Ogre5eDll.dll", "e_ogre_Animation_setInterpolationMode", , 设置动画的当前插值方式，告诉动画怎样在关键帧之间插值
    .参数 动画句柄, 整数型, , 动画对象句柄
    .参数 插值方式, 整数型, , 要设置的动画插值方式。0 - 线性插值；1 - 样条插值

.DLL命令 动画状态_修改时间位置, 空白型, "Ogre5eDll.dll", "e_ogre_AnimationState_addTime", , 在当前动画序列范围内修改时间位置
    .参数 动画状态句柄, 整数型, , 动画状态对象句柄
    .参数 移动量, 小数型, , 指定要修改的时间位置与当前时间位置的偏移量

.DLL命令 动画状态_创建, 整数型, "Ogre5eDll.dll", "e_ogre_AnimationState_createInstance", , 创建动画状态对象，返回动画状态对象句柄

.DLL命令 动画状态_创建1, 整数型, "Ogre5eDll.dll", "e_ogre_AnimationState_createInstance__TFFFB", , 创建动画状态对象，返回动画状态对象句柄
    .参数 动画名称, 文本型, , 
    .参数 时间位置, 小数型, , 
    .参数 动画长度, 小数型, , 
    .参数 权重, 小数型, , 缺省值为1.0
    .参数 启动状态, 逻辑型, , 缺省值假

.DLL命令 动画状态_销毁, 空白型, "Ogre5eDll.dll", "e_ogre_AnimationState_dispose", , 销毁指定的动画状态对象
    .参数 动画状态句柄, 整数型, , 要销毁的动画状态对象句柄

.DLL命令 动画状态_取名称, 整数型, "Ogre5eDll.dll", "e_ogre_AnimationState_getAnimationName", , 取得当前动画序列的名称。成功返回0、失败返回-1、缓冲区长度不足返回需要的缓冲区长度
    .参数 动画状态句柄, 整数型, , 动画状态对象句柄
    .参数 动画名称变量, 文本型, 传址, 储存取得的动画序列名称
    .参数 缓冲区大小, 整数型, , 动画序列名称的缓冲区大小

.DLL命令 动画状态_取启动状态, 逻辑型, "Ogre5eDll.dll", "e_ogre_AnimationState_getEnabled", , 如果当前动画序列处于启用状态则返回真，否则返回假
    .参数 动画状态句柄, 整数型, , 动画状态对象句柄

.DLL命令 动画状态_取总长度, 小数型, "Ogre5eDll.dll", "e_ogre_AnimationState_getLength", , 取当前动画序列的长度（可能会短于整个动画的总长度）
    .参数 动画状态句柄, 整数型, , 动画状态对象句柄

.DLL命令 动画状态_取循环状态, 逻辑型, "Ogre5eDll.dll", "e_ogre_AnimationState_getLoop", , 如果当前动画序列处于循环状态则返回真，处于非循环状态返回假
    .参数 动画状态句柄, 整数型, , 动画状态对象句柄

.DLL命令 动画状态_取时间位置, 小数型, "Ogre5eDll.dll", "e_ogre_AnimationState_getTimePosition", , 取当前动画序列的时间位置
    .参数 动画状态句柄, 整数型, , 动画状态对象句柄

.DLL命令 动画状态_取权重, 小数型, "Ogre5eDll.dll", "e_ogre_AnimationState_getWeight", , 取当前动画序列的权重（影响）
    .参数 动画状态句柄, 整数型, , 动画状态对象句柄

.DLL命令 动画状态_置名称, 空白型, "Ogre5eDll.dll", "e_ogre_AnimationState_setAnimationName", , 设置当前动画序列名称
    .参数 动画状态句柄, 整数型, , 动画状态对象句柄
    .参数 动画名称, 文本型, , 要设置的动画序列的名称

.DLL命令 动画状态_置启动状态, 空白型, "Ogre5eDll.dll", "e_ogre_AnimationState_setEnabled", , 设置当前动画启动状态
    .参数 动画状态句柄, 整数型, , 动画状态对象句柄
    .参数 启动状态, 逻辑型, , 要设置动画启动状态。真为启动

.DLL命令 动画状态_置总长度, 空白型, "Ogre5eDll.dll", "e_ogre_AnimationState_setLength", , 设置当前动画序列的总长度
    .参数 动画状态句柄, 整数型, , 动画状态对象句柄
    .参数 长度, 小数型, , 要设置动画序列长度

.DLL命令 动画状态_置循环状态, 空白型, "Ogre5eDll.dll", "e_ogre_AnimationState_setLoop", , 设置当前动画的循环状态
    .参数 动画状态句柄, 整数型, , 动画状态对象句柄
    .参数 循环状态, 逻辑型, , 要设置动画循环状态。真为循环、假为非循环

.DLL命令 动画状态_置时间位置, 空白型, "Ogre5eDll.dll", "e_ogre_AnimationState_setTimePosition", , 设置当前动画序列的时间位置
    .参数 动画状态句柄, 整数型, , 动画状态对象句柄
    .参数 时间位置, 小数型, , 要设置的动画序列的时间位置

.DLL命令 动画状态_置权重, 空白型, "Ogre5eDll.dll", "e_ogre_AnimationState_setWeight", , 设置当前动画序列的权重（影响）
    .参数 动画状态句柄, 整数型, , 动画状态对象句柄
    .参数 权重, 小数型, , 要设置的动画序列的权重（影响）

.DLL命令 动画轨迹_创建关键帧, 整数型, "Ogre5eDll.dll", "e_ogre_AnimationTrack_createKeyFrame", , 为轨迹动画创建一系列关键帧，返回创建的关键帧对象句柄
    .参数 动画轨迹句柄, 整数型, , 动画轨迹对象句柄
    .参数 时间位置, 小数型, , 

.DLL命令 动画轨迹_取关联节点, 整数型, "Ogre5eDll.dll", "e_ogre_AnimationTrack_getAssociatedNode", , 取与动画轨迹相关联的节点，返回节点对象句柄
    .参数 动画轨迹句柄, 整数型, , 动画轨迹对象句柄

.DLL命令 包围盒_创建, 整数型, "Ogre5eDll.dll", "e_ogre_AxisAlignedBox_createInstance", , 创建沿坐标轴方向的包围盒（AABB）。返回包围盒句柄
    .参数 mx, 小数型, , 
    .参数 my, 小数型, , 
    .参数 mz, 小数型, , 
    .参数 Mx, 小数型, , 
    .参数 My, 小数型, , 
    .参数 Mz, 小数型, , 

.DLL命令 包围盒_销毁, 空白型, "Ogre5eDll.dll", "e_ogre_AxisAlignedBox_dispose", , 销毁沿坐标轴方向的包围盒（AABB）
    .参数 包围盒句柄, 整数型, , 包围盒对象句柄

.DLL命令 包围盒_取中心点, 整数型, "Ogre5eDll.dll", "e_ogre_AxisAlignedBox_getCenter", , 取得包围盒的中心点坐标。返回0为成功，＞0为数组个数不够，值为需要的数组个数
    .参数 包围盒句柄, 整数型, , 包围盒对象句柄
    .参数 中心点坐标, 小数型, 数组, 存储取得的中心点坐标，为三个元素的数组，数据依次为X、Y、Z坐标
    .参数 数组个数, 整数型, , 

.DLL命令 包围盒_取最大角, 整数型, "Ogre5eDll.dll", "e_ogre_AxisAlignedBox_getMaximum", , 取得包围盒的最大角。返回0为成功，＞0为数组个数不够，值为需要的数组个数
    .参数 包围盒句柄, 整数型, , 包围盒对象句柄
    .参数 最大角坐标, 小数型, 数组, 存储取得的最大角坐标，为三个元素的数组，数据依次为X、Y、Z坐标
    .参数 数组个数, 整数型, , 

.DLL命令 包围盒_取最小角, 整数型, "Ogre5eDll.dll", "e_ogre_AxisAlignedBox_getMinimum", , 取得包围盒的最小角。返回0为成功，＞0为数组个数不够，值为需要的数组个数
    .参数 包围盒句柄, 整数型, , 包围盒对象句柄
    .参数 最小角坐标, 小数型, 数组, 存储取得的最小角坐标，为三个元素的数组，数据依次为X、Y、Z坐标
    .参数 数组个数, 整数型, , 

.DLL命令 包围盒_计算相交区域, 整数型, "Ogre5eDll.dll", "e_ogre_AxisAlignedBox_intersection", , 计算当前包围盒与其它包围盒的相交区域，返回相交区域包围盒对象句柄
    .参数 包围盒句柄, 整数型, , 包围盒对象句柄
    .参数 计算相交的包围盒句柄, 整数型, , 计算与当前包围盒相交区域的包围盒句柄

.DLL命令 包围盒_判断相交, 逻辑型, "Ogre5eDll.dll", "e_ogre_AxisAlignedBox_intersects", , 判断当前包围盒与其它包围盒是否相交。相交返回真；不相交返回假
    .参数 包围盒句柄, 整数型, , 包围盒对象句柄
    .参数 判断相交的包围盒句柄, 整数型, , 判断与当前包围盒是否相交的包围盒句柄

.DLL命令 公告板_通知所有者, 空白型, "Ogre5eDll.dll", "e_ogre_Billboard__1notifyOwner", , 通知公告板所有者的内部方法
    .参数 公告板句柄, 整数型, , 公告板对象句柄
    .参数 公告板集合句柄, 整数型, , 公告板集合对象句柄

.DLL命令 公告板_创建, 整数型, "Ogre5eDll.dll", "e_ogre_Billboard_createInstance", , 创建公告板对象，返回公告板对象句柄

.DLL命令 公告板_创建带参数, 整数型, "Ogre5eDll.dll", "e_ogre_Billboard_createInstance__FFFIFFFF", , 带参数创建公告板对象，返回公告板对象句柄
    .参数 位置X坐标, 小数型, , 公告板位置坐标
    .参数 位置Y坐标, 小数型, , 
    .参数 位置Z坐标, 小数型, , 
    .参数 公告板集合句柄, 整数型, , 公告板的所属公告板集合对象句柄
    .参数 红色值, 小数型, , 公告板的颜色
    .参数 绿色值, 小数型, , 
    .参数 蓝色值, 小数型, , 
    .参数 透明值, 小数型, , 

.DLL命令 公告板_销毁, 空白型, "Ogre5eDll.dll", "e_ogre_Billboard_dispose", , 销毁公告板对象
    .参数 公告板句柄, 整数型, , 公告板对象句柄

.DLL命令 公告板_取颜色, 整数型, "Ogre5eDll.dll", "e_ogre_Billboard_getColour", , 取公告板颜色数据。返回0为成功，＞0为数组个数不够，值为需要的数组个数
    .参数 公告板句柄, 整数型, , 公告板对象句柄
    .参数 颜色数组, 小数型, 数组, 存储取得的公告板颜色。有4个元素，数据依次为红色值、绿色值、蓝色值、透明值
    .参数 数组个数, 整数型, , 

.DLL命令 公告板_取方向, 整数型, "Ogre5eDll.dll", "e_ogre_Billboard_getDirection", , 取公告板方向。返回0为成功，＞0为数组个数不够，值为需要的数组个数
    .参数 公告板句柄, 整数型, , 公告板对象句柄
    .参数 方向数组, 小数型, 数组, 存储取得的公告板方向。有3个元素，数据依次为X、Y、Z坐标
    .参数 数组个数, 整数型, , 

.DLL命令 公告板_取宽度, 小数型, "Ogre5eDll.dll", "e_ogre_Billboard_getOwnWidth", , 取公告板自身宽度
    .参数 公告板句柄, 整数型, , 公告板对象句柄

.DLL命令 公告板_取高度, 小数型, "Ogre5eDll.dll", "e_ogre_Billboard_getOwnHeight", , 取公告板自身高度
    .参数 公告板句柄, 整数型, , 公告板对象句柄

.DLL命令 公告板_取位置, 整数型, "Ogre5eDll.dll", "e_ogre_Billboard_getPosition", , 取公告板位置。返回0为成功，＞0为数组个数不够，值为需要的数组个数
    .参数 公告板句柄, 整数型, , 公告板对象句柄
    .参数 位置坐标, 小数型, 数组, 存储取得的公告板位置。有3个元素，数据依次为X、Y、Z坐标
    .参数 数组个数, 整数型, , 

.DLL命令 公告板_取父集合, 整数型, "Ogre5eDll.dll", "e_ogre_Billboard_getParentSet", , 取公告板的父公告板集合对象句柄
    .参数 公告板句柄, 整数型, , 公告板对象句柄

.DLL命令 公告板_取旋转弧度, 整数型, "Ogre5eDll.dll", "e_ogre_Billboard_getRotation", , 取公告板的旋转弧度值（相对于公告板中心旋转）
    .参数 公告板句柄, 整数型, , 公告板对象句柄

.DLL命令 公告板_是否有自己尺寸, 逻辑型, "Ogre5eDll.dll", "e_ogre_Billboard_hasOwnDimensions", , 如果公告板尺寸与公告板集合的缺省尺寸不相同，返回真，否则返回假
    .参数 公告板句柄, 整数型, , 公告板对象句柄

.DLL命令 公告板_重置尺寸, 空白型, "Ogre5eDll.dll", "e_ogre_Billboard_resetDimensions", , 用父公告板集合的尺寸替换自身的尺寸
    .参数 公告板句柄, 整数型, , 公告板对象句柄

.DLL命令 公告板_置颜色, 空白型, "Ogre5eDll.dll", "e_ogre_Billboard_setColour", , 设置公告板颜色
    .参数 公告板句柄, 整数型, , 公告板对象句柄
    .参数 红色值, 小数型, , 公告板的颜色
    .参数 绿色值, 小数型, , 
    .参数 蓝色值, 小数型, , 
    .参数 透明值, 小数型, , 

.DLL命令 公告板_置尺寸, 空白型, "Ogre5eDll.dll", "e_ogre_Billboard_setDimensions", , 设置公告板尺寸
    .参数 公告板句柄, 整数型, , 公告板对象句柄
    .参数 宽度, 小数型, , 要设置的公告板的宽度
    .参数 高度, 小数型, , 要设置的公告板的高度

.DLL命令 公告板_置方向, 空白型, "Ogre5eDll.dll", "e_ogre_Billboard_setDirection", , 设置公告板方向
    .参数 公告板句柄, 整数型, , 公告板对象句柄
    .参数 X坐标, 小数型, , 方向坐标
    .参数 Y坐标, 小数型, , 
    .参数 Z坐标, 小数型, , 

.DLL命令 公告板_置位置, 空白型, "Ogre5eDll.dll", "e_ogre_Billboard_setPosition", , 设置公告板位置
    .参数 公告板句柄, 整数型, , 公告板对象句柄
    .参数 X坐标, 小数型, , 位置坐标
    .参数 Y坐标, 小数型, , 
    .参数 Z坐标, 小数型, , 

.DLL命令 公告板_置旋转弧度, 空白型, "Ogre5eDll.dll", "e_ogre_Billboard_setRotation", , 设置公告板的旋转弧度
    .参数 公告板句柄, 整数型, , 公告板对象句柄
    .参数 旋转弧度, 小数型, , 要设置的公告板的旋转弧度

.DLL命令 公告板集合_创建公告板, 整数型, "Ogre5eDll.dll", "e_ogre_BillboardSet_createBillboard", , 创建一个新的公告板并将它加入到集合中，返回创建的公告板对象句柄
    .参数 公告板集合句柄, 整数型, , 公告板集合对象句柄
    .参数 位置X坐标, 小数型, , 新建公告板的位置坐标
    .参数 位置Y坐标, 小数型, , 
    .参数 位置Z坐标, 小数型, , 

.DLL命令 公告板集合_取名称, 整数型, "Ogre5eDll.dll", "e_ogre_BillboardSet_getName", , 取公告板集合的名称。成功返回0、失败返回-1、缓冲区长度不足返回需要的缓冲区长度
    .参数 公告板集合句柄, 整数型, , 公告板集合对象句柄
    .参数 公告板集合名称变量, 文本型, 传址, 存储取得的公告板集合名称
    .参数 缓冲区大小, 整数型, , 公告板集合名称的缓冲区大小

.DLL命令 公告板集合_置缺省宽度, 空白型, "Ogre5eDll.dll", "e_ogre_BillboardSet_setDefaultWidth", , 设置公告板集合的缺省宽度
    .参数 公告板集合句柄, 整数型, , 公告板集合对象句柄
    .参数 宽度, 小数型, , 公告板集合的缺省宽度

.DLL命令 公告板集合_置缺省高度, 空白型, "Ogre5eDll.dll", "e_ogre_BillboardSet_setDefaultHeight", , 设置公告板集合的缺省高度
    .参数 公告板集合句柄, 整数型, , 公告板集合对象句柄
    .参数 高度, 小数型, , 公告板集合的缺省高度

.DLL命令 公告板集合_置材质名称, 空白型, "Ogre5eDll.dll", "e_ogre_BillboardSet_setMaterialName", , 设置用于公告板集合的材质名称
    .参数 公告板集合句柄, 整数型, , 公告板集合对象句柄
    .参数 材质名称, 文本型, , 用于公告板集合的材质名称

.DLL命令 骨头_取句柄, 整数型, "Ogre5eDll.dll", "e_ogre_Bone_getHandle", , 取当前骨头的句柄
    .参数 骨头句柄, 整数型, , 骨头对象句柄

.DLL命令 骨头_取手工操作标志, 逻辑型, "Ogre5eDll.dll", "e_ogre_Bone_isManuallyControlled", , 返回真为手工操作
    .参数 骨头句柄, 整数型, , 骨头对象句柄

.DLL命令 骨头_置手工操作标志, 空白型, "Ogre5eDll.dll", "e_ogre_Bone_setManuallyControlled", , 设置手工操作标志
    .参数 骨头句柄, 整数型, , 骨头对象句柄
    .参数 手工操作标志, 逻辑型, , 是否对骨头进行手工操作，真为手工操作

.DLL命令 摄像机_取镜头到视口的射线, 整数型, "Ogre5eDll.dll", "e_ogre_Camera_getCameraToViewportRay", , 取摄像机镜头位置到视口平面的射线，返回射线对象句柄
    .参数 摄像机句柄, 整数型, , 摄像机对象的句柄
    .参数 屏幕X坐标, 小数型, , 射线与视口相交的X位置
    .参数 屏幕Y坐标, 小数型, , 射线与视口相交的Y位置

.DLL命令 摄像机_取渲染细节级别, 整数型, "Ogre5eDll.dll", "e_ogre_Camera_getDetailLevel", , 取摄像机的渲染细节级别
    .参数 摄像机句柄, 整数型, , 摄像机对象的句柄

.DLL命令 摄像机_取方向, 整数型, "Ogre5eDll.dll", "e_ogre_Camera_getDirection", , 取摄像机的方向。返回0为成功，＞0为数组个数不够，值为需要的数组个数
    .参数 摄像机句柄, 整数型, , 摄像机对象的句柄
    .参数 方向向量, 小数型, 数组, 存储取得的摄像机方向向量，有3个元素，依次为X、Y、Z坐标
    .参数 数组个数, 整数型, , 

.DLL命令 摄像机_取到远裁剪面距离, 小数型, "Ogre5eDll.dll", "e_ogre_Camera_getFarClipDistance", , 取平截体到远裁剪面的距离
    .参数 摄像机句柄, 整数型, , 摄像机对象的句柄

.DLL命令 摄像机_取到近裁剪面距离, 小数型, "Ogre5eDll.dll", "e_ogre_Camera_getNearClipDistance", , 取平截体到近裁剪面的距离
    .参数 摄像机句柄, 整数型, , 摄像机对象的句柄

.DLL命令 摄像机_取名称, 小数型, "Ogre5eDll.dll", "e_ogre_Camera_getName", , 取得摄像机的名称。成功返回0、失败返回-1、缓冲区长度不足返回需要的缓冲区长度
    .参数 摄像机句柄, 整数型, , 摄像机对象的句柄
    .参数 摄像机名称变量, 文本型, 传址, 存储取得的摄像机名称
    .参数 名称缓冲区长度, 整数型, , 摄像机名称的缓冲区长度

.DLL命令 摄像机_取位置, 整数型, "Ogre5eDll.dll", "e_ogre_Camera_getPosition", , 取得摄像机的位置。返回0为成功，＞0为数组个数不够，值为需要的数组个数
    .参数 摄像机句柄, 整数型, , 摄像机对象的句柄
    .参数 位置数组, 小数型, 数组, 存储取得的摄像机位置。有3个元素，依次为X、Y、Z坐标
    .参数 数组个数, 整数型, , 

.DLL命令 摄像机_世界空间位置, 空白型, "Ogre5eDll.dll", "e_ogre_Camera_lookAt", , 自动计算摄像机的方向向量，在当前位置和所看的点
    .参数 摄像机句柄, 整数型, , 摄像机对象的句柄
    .参数 点X坐标, 小数型, , 摄像机所看的点坐标
    .参数 点Y坐标, 小数型, , 
    .参数 点Z坐标, 小数型, , 

.DLL命令 摄像机_移动, 空白型, "Ogre5eDll.dll", "e_ogre_Camera_moveRelative", , 相对于指定的方向移动摄像机
    .参数 摄像机句柄, 整数型, , 摄像机对象的句柄
    .参数 方向X坐标, 小数型, , 
    .参数 方向Y坐标, 小数型, , 
    .参数 方向Z坐标, 小数型, , 

.DLL命令 摄像机_绕X轴逆时针旋转, 空白型, "Ogre5eDll.dll", "e_ogre_Camera_pitch", , 摄像机绕X轴上下逆时针旋转
    .参数 摄像机句柄, 整数型, , 摄像机对象的句柄
    .参数 旋转角度, 小数型, , 摄像机的旋转角度

.DLL命令 摄像机_绕Z轴逆时针旋转, 空白型, "Ogre5eDll.dll", "e_ogre_Camera_roll", , 摄像机绕Z轴上下逆时针旋转
    .参数 摄像机句柄, 整数型, , 摄像机对象的句柄
    .参数 旋转角度, 小数型, , 摄像机的旋转角度

.DLL命令 摄像机_绕Y轴逆时针旋转, 空白型, "Ogre5eDll.dll", "e_ogre_Camera_yaw", , 摄像机绕Y轴上下逆时针旋转
    .参数 摄像机句柄, 整数型, , 摄像机对象的句柄
    .参数 旋转角度, 小数型, , 摄像机的旋转角度

.DLL命令 摄像机_置当前纵横比, 空白型, "Ogre5eDll.dll", "e_ogre_Camera_setAspectRatio", , 置平截视口的当前纵横比
    .参数 摄像机句柄, 整数型, , 摄像机对象的句柄
    .参数 纵横比, 小数型, , 要设置的平截视口的纵横比。纵横比计算公式为：宽度/高度

.DLL命令 摄像机_置渲染细节级别, 空白型, "Ogre5eDll.dll", "e_ogre_Camera_setDetailLevel", , 设置摄像机的置渲染细节级别
    .参数 摄像机句柄, 整数型, , 摄像机对象的句柄
    .参数 渲染细节级别, 整数型, , 要设置的摄像机渲染细节级别

.DLL命令 摄像机_置到远裁剪面的距离, 空白型, "Ogre5eDll.dll", "e_ogre_Camera_setFarClipDistance", , 置到远裁剪面的距离
    .参数 摄像机句柄, 整数型, , 摄像机对象的句柄
    .参数 距离, 小数型, , 要设置的到远裁剪面的距离

.DLL命令 摄像机_置到近裁剪面的距离, 空白型, "Ogre5eDll.dll", "e_ogre_Camera_setNearClipDistance", , 置到近裁剪面的距离
    .参数 摄像机句柄, 整数型, , 摄像机对象的句柄
    .参数 距离, 小数型, , 要设置的到近裁剪面的距离

.DLL命令 摄像机_置Y方向的视野域, 空白型, "Ogre5eDll.dll", "e_ogre_Camera_setFOVy", , 设置Y方向的视野域，水平方向的视野域将依此计算
    .参数 摄像机句柄, 整数型, , 摄像机对象的句柄
    .参数 视野域, 小数型, , 要设置的视野域

.DLL命令 摄像机_置方向, 空白型, "Ogre5eDll.dll", "e_ogre_Camera_setDirection", , 设置摄像机的方向向量
    .参数 摄像机句柄, 整数型, , 摄像机对象的句柄
    .参数 方向X坐标, 小数型, , 要设置的摄像机的方向向量
    .参数 方向Y坐标, 小数型, , 
    .参数 方向Z坐标, 小数型, , 

.DLL命令 摄像机_置位置, 空白型, "Ogre5eDll.dll", "e_ogre_Camera_setPosition", , 设置摄像机的位置向量
    .参数 摄像机句柄, 整数型, , 摄像机对象的句柄
    .参数 位置X坐标, 小数型, , 要设置的摄像机的位置向量
    .参数 位置Y坐标, 小数型, , 
    .参数 位置Z坐标, 小数型, , 

.DLL命令 摄像机_旋转, 空白型, "Ogre5eDll.dll", "e_ogre_Camera_rotate", , 旋转摄像机
    .参数 摄像机句柄, 整数型, , 摄像机对象的句柄
    .参数 方位W坐标, 小数型, , 
    .参数 方位X坐标, 小数型, , 
    .参数 方位Y坐标, 小数型, , 
    .参数 方位Z坐标, 小数型, , 

.DLL命令 摄像机_置固定轴, 空白型, "Ogre5eDll.dll", "e_ogre_Camera_setFixedYawAxis", , 
    .参数 摄像机句柄, 整数型, , 摄像机对象的句柄
    .参数 是否使用固定轴, 逻辑型, , 
    .参数 固定轴X坐标, 小数型, , 
    .参数 固定轴Y坐标, 小数型, , 
    .参数 固定轴Z坐标, 小数型, , 

.DLL命令 渲染系统7_取名称, 整数型, "Ogre5eDll.dll", "e_ogre_D3D7RenderSystem_getName", , 取得当前渲染系统的名称。成功返回0、失败返回-1、缓冲区长度不足返回需要的缓冲区长度
    .参数 渲染系统句柄, 整数型, , 渲染系统对象句柄
    .参数 渲染系统名称变量, 文本型, 传址, 储存取得的渲染系统名称
    .参数 缓冲区大小, 整数型, , 渲染系统名称的缓冲区大小

.DLL命令 渲染系统9_取名称, 整数型, "Ogre5eDll.dll", "e_ogre_D3D9RenderSystem_getName", , 取得当前渲染系统的名称。成功返回0、失败返回-1、缓冲区长度不足返回需要的缓冲区长度
    .参数 渲染系统句柄, 整数型, , 渲染系统对象句柄
    .参数 渲染系统名称变量, 文本型, 传址, 储存取得的渲染系统名称
    .参数 缓冲区大小, 整数型, , 渲染系统名称的缓冲区大小

.DLL命令 缺省硬件缓冲管理器_创建, 整数型, "Ogre5eDll.dll", "e_ogre_DefaultHardwareBufferManager_createInstance", , 创建缺省的硬件缓冲管理器，返回管理器句柄

.DLL命令 实体_挂接到骨头, 空白型, "Ogre5eDll.dll", "e_ogre_Entity_attachObjectToBone__2I", , 挂接另一个对象到实体使用骨骼的某个骨头上
    .参数 实体句柄, 整数型, , 实体对象句柄
    .参数 骨头名称, 文本型, , 挂接对象到骨头的名称
    .参数 挂接对象句柄, 整数型, , 要挂接到骨头的对象句柄

.DLL命令 实体_挂接到骨头1, 空白型, "Ogre5eDll.dll", "e_ogre_Entity_attachObjectToBone__2IFFFFFFF", , 挂接另一个对象到实体使用骨骼的某个骨头上
    .参数 实体句柄, 整数型, , 实体对象句柄
    .参数 骨头名称, 文本型, , 挂接对象到骨头的名称
    .参数 挂接对象句柄, 整数型, , 要挂接到骨头的对象句柄
    .参数 调整方位W, 小数型, , 挂接对象相对于骨头的调整方位
    .参数 调整方位X, 小数型, , 
    .参数 调整方位Y, 小数型, , 
    .参数 调整方位Z, 小数型, , 
    .参数 调整位置X, 小数型, , 挂接对象相对于骨头的调整位置
    .参数 调整位置Y, 小数型, , 
    .参数 调整位置Z, 小数型, , 

.DLL命令 实体_克隆, 整数型, "Ogre5eDll.dll", "e_ogre_Entity_clone", , 克隆实体并返回克隆出的实体句柄
    .参数 实体句柄, 整数型, , 实体对象句柄
    .参数 新实体名称, 文本型, , 克隆出的新实体的名称

.DLL命令 实体_从骨头脱钩, 整数型, "Ogre5eDll.dll", "e_ogre_Entity_detachObjectFromBone", , 从骨头上脱钩先前用“实体_挂接到骨头”方法挂接的对象，返回脱钩对象的句柄
    .参数 实体句柄, 整数型, , 实体对象句柄
    .参数 脱钩对象名称, 文本型, , 要脱钩的对象名称

.DLL命令 实体_取动画状态, 整数型, "Ogre5eDll.dll", "e_ogre_Entity_getAnimationState", , 用于基于动画网格的实体，取单个动画的动画状态，返回动画状态对象句柄
    .参数 实体句柄, 整数型, , 实体对象句柄
    .参数 动画名称, 文本型, , 要取得的状态的动画名称

.DLL命令 实体_取网格模型, 整数型, "Ogre5eDll.dll", "e_ogre_Entity_getMesh", , 取实体基于的网格模型对象，返回网格模型对象句柄
    .参数 实体句柄, 整数型, , 实体对象句柄

.DLL命令 实体_取子实体数量, 整数型, "Ogre5eDll.dll", "e_ogre_Entity_getNumSubEntities", , 取组成实体的子实体数量
    .参数 实体句柄, 整数型, , 实体对象句柄

.DLL命令 实体_取骨骼, 整数型, "Ogre5eDll.dll", "e_ogre_Entity_getSkeleton", , 取实体的骨骼实例，返回骨骼实例句柄
    .参数 实体句柄, 整数型, , 实体对象句柄

.DLL命令 实体_取子实体, 整数型, "Ogre5eDll.dll", "e_ogre_Entity_getSubEntity__II", , 取指定的子实体，返回子实体对象句柄
    .参数 实体句柄, 整数型, , 实体对象句柄
    .参数 子实体序号, 整数型, , 要取得的子实体序号

.DLL命令 实体_取子实体1, 整数型, "Ogre5eDll.dll", "e_ogre_Entity_getSubEntity__IL2", , 取指定的子实体，返回子实体对象句柄
    .参数 实体句柄, 整数型, , 实体对象句柄
    .参数 子实体名称, 文本型, , 要取得的子实体名称

.DLL命令 实体_是否骨骼动画, 逻辑型, "Ogre5eDll.dll", "e_ogre_Entity_hasSkeleton", , 取实体是否为骨骼动画
    .参数 实体句柄, 整数型, , 实体对象句柄

.DLL命令 实体_置显示骨骼, 空白型, "Ogre5eDll.dll", "e_ogre_Entity_setDisplaySkeleton", , 设置实体是否显示骨骼
    .参数 实体句柄, 整数型, , 实体对象句柄
    .参数 显示标志, 逻辑型, , 指定是否显示骨骼

.DLL命令 实体_置材质, 空白型, "Ogre5eDll.dll", "e_ogre_Entity_setMaterialName", , 设置整个实体使用的材质
    .参数 实体句柄, 整数型, , 实体对象句柄
    .参数 材质名称, 文本型, , 指定实体使用的材质名称

.DLL命令 渲染系统GL_取名称, 空白型, "Ogre5eDll.dll", "e_ogre_GLRenderSystem_getName", , 取得当前渲染系统的名称。成功返回0、失败返回-1、缓冲区长度不足返回需要的缓冲区长度
    .参数 渲染系统句柄, 整数型, , 渲染系统对象句柄
    .参数 渲染系统名称变量, 文本型, 传址, 储存取得的渲染系统名称
    .参数 缓冲区大小, 整数型, , 渲染系统名称的缓冲区大小

.DLL命令 硬件缓冲_取尺寸, 空白型, "Ogre5eDll.dll", "e_ogre_HardwareBuffer_getSizeInBytes", , 取硬件缓冲的尺寸（以字节为单位）
    .参数 硬件缓冲句柄, 整数型, , 硬件缓冲对象句柄

.DLL命令 硬件缓冲管理器_取对象, 整数型, "Ogre5eDll.dll", "e_ogre_HardwareBufferManager__1getSingleton", , 取硬件缓冲管理器，返回管理器对象句柄

.DLL命令 硬件缓冲管理器_创建索引缓冲, 整数型, "Ogre5eDll.dll", "e_ogre_HardwareBufferManager_createIndexBuffer", , 创建索引缓冲，返回索引缓冲对象句柄
    .参数 索引类型, 整数型, , 索引的类型，取值为16或32，取决于你可以访问的顶点数量
    .参数 索引数量, 整数型, , 缓冲中的索引数量
    .参数 缓冲用途, 整数型, , 指定缓冲的用途。可为以下值之一：1.静态；2.动态；4.只写；5.静态只写；6.动态只写；8.可抛弃；14.动态只写可抛弃。
    .参数 使用映射缓冲, 逻辑型, , 指定是否使用映射缓冲。如果为真，缓冲将被映射到系统内存中。

.DLL命令 硬件缓冲管理器_创建顶点缓冲, 整数型, "Ogre5eDll.dll", "e_ogre_HardwareBufferManager_createVertexBuffer", , 创建顶点缓冲，返回顶点缓冲对象句柄
    .参数 顶点尺寸, 整数型, , 指定缓冲中每个顶点的尺寸（以字节为单位）
    .参数 顶点数量, 整数型, , 缓冲中的顶点数量
    .参数 缓冲用途, 整数型, , 指定缓冲的用途。可为以下值之一：1.静态；2.动态；4.只写；5.静态只写；6.动态只写；8.可抛弃；14.动态只写可抛弃。
    .参数 使用映射缓冲, 逻辑型, , 指定是否使用映射缓冲。如果为真，缓冲将被映射到系统内存中

.DLL命令 硬件缓冲管理器_销毁, 空白型, "Ogre5eDll.dll", "e_ogre_HardwareBufferManager_dispose", , 销毁硬件缓冲管理器对象
    .参数 硬件缓冲管理器句柄, 整数型, , 硬件缓冲管理器对象句柄

.DLL命令 硬件索引缓冲_销毁, 空白型, "Ogre5eDll.dll", "e_ogre_HardwareIndexBuffer_dispose", , 销毁硬件索引缓冲对象
    .参数 硬件索引缓冲句柄, 整数型, , 硬件索引缓冲对象句柄

.DLL命令 硬件索引缓冲_取尺寸, 长整数型, "Ogre5eDll.dll", "e_ogre_HardwareIndexBuffer_getSizeInBytes", , 取硬件索引缓冲的尺寸（以字节为单位）
    .参数 硬件索引缓冲句柄, 整数型, , 硬件索引缓冲对象句柄

.DLL命令 硬件顶点缓冲_销毁, 空白型, "Ogre5eDll.dll", "e_ogre_HardwareVertexBuffer_dispose", , 销毁硬件顶点缓冲对象
    .参数 硬件顶点缓冲句柄, 整数型, , 硬件顶点缓冲对象句柄

.DLL命令 硬件顶点缓冲_取尺寸, 整数型, "Ogre5eDll.dll", "e_ogre_HardwareVertexBuffer_getSizeInBytes", , 取硬件顶点缓冲的尺寸（以字节为单位）
    .参数 硬件顶点缓冲句柄, 整数型, , 硬件顶点缓冲对象句柄

.DLL命令 硬件索引缓冲_写数据, 空白型, "Ogre5eDll.dll", "e_ogre_HardwareIndexBuffer_writeData", , 从一块系统内存区域写数据到缓冲区中，必须保证你的缓冲区要足够大
    .参数 硬件索引缓冲句柄, 整数型, , 硬件索引缓冲对象句柄
    .参数 写入偏移量, 整数型, , 写入数据位置到缓冲区开始位置的偏移量（也就是从什么位置开始写入）
    .参数 写入数据, 小数型, 数组, 要写入的数据
    .参数 抛弃缓冲区标志, 逻辑型, , 真 - 写入数据的时候抛弃整个缓冲区 

.DLL命令 硬件顶点缓冲_写数据, 空白型, "Ogre5eDll.dll", "e_ogre_HardwareVertexBuffer_writeData", , 从一块系统内存区域写数据到缓冲区中，必须保证你的缓冲区要足够大
    .参数 硬件顶点缓冲句柄, 整数型, , 硬件顶点缓冲对象句柄
    .参数 写入偏移量, 整数型, , 写入数据位置到缓冲区开始位置的偏移量（也就是从什么位置开始写入）
    .参数 写入数据, 小数型, 数组, 要写入的数据
    .参数 抛弃缓冲区标志, 逻辑型, , 真 - 写入数据的时候抛弃整个缓冲区 

.DLL命令 索引数据_创建, 整数型, "Ogre5eDll.dll", "e_ogre_IndexData_createInstance", , 创建索引数据，返回索引数据句柄

.DLL命令 索引数据_销毁, 空白型, "Ogre5eDll.dll", "e_ogre_IndexData_dispose", , 销毁索引数据对象
    .参数 索引数据句柄, 整数型, , 索引数据对象句柄

.DLL命令 索引数据_取索引数量, 整数型, "Ogre5eDll.dll", "e_ogre_IndexData_getIndexCount", , 取索引数据的数量
    .参数 索引数据句柄, 整数型, , 索引数据对象句柄

.DLL命令 索引数据_取开始索引, 整数型, "Ogre5eDll.dll", "e_ogre_IndexData_getIndexStart", , 置开始索引
    .参数 索引数据句柄, 整数型, , 索引数据对象句柄

.DLL命令 索引数据_置索引缓冲, 空白型, "Ogre5eDll.dll", "e_ogre_IndexData_setIndexBuffer", , 设置索引缓冲
    .参数 索引数据句柄, 整数型, , 索引数据对象句柄
    .参数 硬件索引缓冲句柄, 整数型, , 要设置的硬件索引缓冲对象句柄

.DLL命令 索引数据_置索引数量, 空白型, "Ogre5eDll.dll", "e_ogre_IndexData_setIndexCount", , 设置索引数量
    .参数 索引数据句柄, 整数型, , 索引数据对象句柄
    .参数 索引数量, 整数型, , 要设置的索引数量

.DLL命令 索引数据_置开始索引, 空白型, "Ogre5eDll.dll", "e_ogre_IndexData_setIndexStart", , 设置开始索引
    .参数 索引数据句柄, 整数型, , 索引数据对象句柄
    .参数 开始索引, 整数型, , 要设置的开始索引

.DLL命令 关键帧_取时间, 小数型, "Ogre5eDll.dll", "e_ogre_KeyFrame_getTime", , 取动画索引中的关键帧时间
    .参数 关键帧句柄, 整数型, , 关键帧对象句柄

.DLL命令 关键帧_置旋转, 空白型, "Ogre5eDll.dll", "e_ogre_KeyFrame_setRotation", , 设置应用于关键帧的旋转属性
    .参数 关键帧句柄, 整数型, , 关键帧对象句柄
    .参数 旋转属性W, 小数型, , 应用于关键帧的旋转属性
    .参数 旋转属性X, 小数型, , 
    .参数 旋转属性Y, 小数型, , 
    .参数 旋转属性Z, 小数型, , 

.DLL命令 关键帧_置转换, 空白型, "Ogre5eDll.dll", "e_ogre_KeyFrame_setTranslate", , 设置与关键帧相关联的转换
    .参数 关键帧句柄, 整数型, , 关键帧对象句柄
    .参数 转换X, 小数型, , 与关键帧相关联的转换
    .参数 转换Y, 小数型, , 
    .参数 转换Z, 小数型, , 

.DLL命令 灯光_通知当前摄像机, 空白型, "Ogre5eDll.dll", "e_ogre_Light__1notifyCurrentCamera", , 向当前的摄像机发送通知消息
    .参数 灯光句柄, 整数型, , 灯光对象句柄
    .参数 摄像机句柄, 整数型, , 摄像机对象句柄

.DLL命令 灯光_取常数因子, 小数型, "Ogre5eDll.dll", "e_ogre_Light_getAttenuationConstant", , 取衰减公式中的常数因子
    .参数 灯光句柄, 整数型, , 灯光对象句柄

.DLL命令 灯光_取线性因子, 小数型, "Ogre5eDll.dll", "e_ogre_Light_getAttenuationLinear", , 取衰减公式中的线性因子
    .参数 灯光句柄, 整数型, , 灯光对象句柄

.DLL命令 灯光_取二次因子, 小数型, "Ogre5eDll.dll", "e_ogre_Light_getAttenuationQuadric", , 取衰减公式中的二次因子
    .参数 灯光句柄, 整数型, , 灯光对象句柄

.DLL命令 灯光_取上限, 小数型, "Ogre5eDll.dll", "e_ogre_Light_getAttenuationRange", , 取灯光的绝对上限
    .参数 灯光句柄, 整数型, , 灯光对象句柄

.DLL命令 灯光_取包围盒, 整数型, "Ogre5eDll.dll", "e_ogre_Light_getBoundingBox", , 取包围盒，返回包围盒对象句柄
    .参数 灯光句柄, 整数型, , 灯光对象句柄

.DLL命令 灯光_取包围盒半径, 小数型, "Ogre5eDll.dll", "e_ogre_Light_getBoundingRadius", , 取包围盒的半径
    .参数 灯光句柄, 整数型, , 灯光对象句柄

.DLL命令 灯光_取起源方位, 整数型, "Ogre5eDll.dll", "e_ogre_Light_getDerivedDirection", , 取灯光的起源方位。返回0为成功，＞0为数组个数不够，值为需要的数组个数
    .参数 灯光句柄, 整数型, , 灯光对象句柄
    .参数 方位数组, 小数型, 数组, 存储取得的方位数据，有3个元素，依次为X、Y、Z坐标
    .参数 数组个数, 整数型, , 

.DLL命令 灯光_取起源位置, 整数型, "Ogre5eDll.dll", "e_ogre_Light_getDerivedPosition", , 取灯光的起源位置。返回0为成功，＞0为数组个数不够，值为需要的数组个数
    .参数 灯光句柄, 整数型, , 灯光对象句柄
    .参数 位置数组, 小数型, 数组, 存储取得的位置数据，有3个元素，依次为X、Y、Z坐标
    .参数 数组个数, 整数型, , 

.DLL命令 灯光_取漫射光颜色, 整数型, "Ogre5eDll.dll", "e_ogre_Light_getDiffuseColour", , 取光源发出的漫射光颜色。返回0为成功，＞0为数组个数不够，值为需要的数组个数
    .参数 灯光句柄, 整数型, , 灯光对象句柄
    .参数 颜色数组, 小数型, 数组, 存储取得的颜色数据，有4个元素，依次为红色值、绿色值、蓝色值、透明值
    .参数 数组个数, 整数型, , 

.DLL命令 灯光_取方向, 整数型, "Ogre5eDll.dll", "e_ogre_Light_getDirection", , 取灯光的方向。返回0为成功，＞0为数组个数不够，值为需要的数组个数
    .参数 灯光句柄, 整数型, , 灯光对象句柄
    .参数 方向数组, 小数型, 数组, 存储取得的方向数据，有3个元素，依次为X、Y、Z坐标
    .参数 数组个数, 整数型, , 

.DLL命令 灯光_取类型名, 整数型, "Ogre5eDll.dll", "e_ogre_Light_getlightType", , 取灯光的类型名称。成功返回0、失败返回-1、缓冲区长度不足返回需要的缓冲区长度
    .参数 灯光句柄, 整数型, , 灯光对象句柄
    .参数 类型名称变量, 文本型, 传址, 储存取得的类型名称
    .参数 缓冲区大小, 整数型, , 类型名称的缓冲区大小

.DLL命令 灯光_取名称, 整数型, "Ogre5eDll.dll", "e_ogre_Light_getName", , 取灯光的名称。成功返回0、失败返回-1、缓冲区长度不足返回需要的缓冲区长度
    .参数 灯光句柄, 整数型, , 灯光对象句柄
    .参数 灯光名称变量, 文本型, 传址, 储存取得的灯光名称
    .参数 缓冲区大小, 整数型, , 灯光名称的缓冲区大小

.DLL命令 灯光_取位置, 整数型, "Ogre5eDll.dll", "e_ogre_Light_getPosition", , 取灯光的位置。返回0为成功，＞0为数组个数不够，值为需要的数组个数
    .参数 灯光句柄, 整数型, , 灯光对象句柄
    .参数 位置数组, 小数型, 数组, 存储取得的位置数据，有3个元素，依次为X、Y、Z坐标
    .参数 数组个数, 整数型, , 

.DLL命令 灯光_取镜面光颜色, 整数型, "Ogre5eDll.dll", "e_ogre_Light_getSpecularColour", , 取光源发出的镜面光颜色。返回0为成功，＞0为数组个数不够，值为需要的数组个数
    .参数 灯光句柄, 整数型, , 灯光对象句柄
    .参数 镜面光颜色数组, 小数型, 数组, 存储取得的镜面光颜色数据，有4个元素，依次为红色值、绿色值、蓝色值、透明值
    .参数 数组个数, 整数型, , 

.DLL命令 灯光_取聚光灯衰减, 小数型, "Ogre5eDll.dll", "e_ogre_Light_getSpotlightFalloff", , 取聚光灯内角和外角之间的衰减
    .参数 灯光句柄, 整数型, , 灯光对象句柄

.DLL命令 灯光_取聚光灯内角, 小数型, "Ogre5eDll.dll", "e_ogre_Light_getSpotlightInnerAngle", , 取聚光灯内角
    .参数 灯光句柄, 整数型, , 灯光对象句柄

.DLL命令 灯光_取聚光灯外角, 小数型, "Ogre5eDll.dll", "e_ogre_Light_getSpotlightOuterAngle", , 取聚光灯外角
    .参数 灯光句柄, 整数型, , 灯光对象句柄

.DLL命令 灯光_取类型, 整数型, "Ogre5eDll.dll", "e_ogre_Light_getType", , 取灯光的类型，返回以下值：0.点光源；1.直射光；2.聚光灯。
    .参数 灯光句柄, 整数型, , 灯光对象句柄

.DLL命令 灯光_置衰减参数, 空白型, "Ogre5eDll.dll", "e_ogre_Light_setAttenuation", , 设置光源的衰减参数
    .参数 灯光句柄, 整数型, , 灯光对象句柄
    .参数 绝对上限, 小数型, , 灯光的绝对上限值（世界单位）
    .参数 常数因子, 小数型, , 衰减公式的常数因子。1.0表示从不衰减；0.0表示全部衰减
    .参数 线性因子, 小数型, , 衰减公式的线性因子
    .参数 二次因子, 小数型, , 衰减公式的二次因子

.DLL命令 灯光_置漫射光颜色, 空白型, "Ogre5eDll.dll", "e_ogre_Light_setDiffuseColour", , 设置光源发出的漫射光颜色
    .参数 灯光句柄, 整数型, , 灯光对象句柄
    .参数 红色值, 小数型, , 光源发出的漫射光颜色
    .参数 绿色值, 小数型, , 
    .参数 蓝色值, 小数型, , 

.DLL命令 灯光_置方向, 空白型, "Ogre5eDll.dll", "e_ogre_Light_setDirection", , 设置灯光点的方向
    .参数 灯光句柄, 整数型, , 灯光对象句柄
    .参数 方向X坐标, 小数型, , 灯光点的方向
    .参数 方向Y坐标, 小数型, , 
    .参数 方向Z坐标, 小数型, , 

.DLL命令 灯光_置镜面光颜色, 空白型, "Ogre5eDll.dll", "e_ogre_Light_setSpecularColour", , 设置光源发出的镜面光颜色
    .参数 灯光句柄, 整数型, , 灯光对象句柄
    .参数 红色值, 小数型, , 光源发出的镜面光颜色
    .参数 绿色值, 小数型, , 
    .参数 蓝色值, 小数型, , 

.DLL命令 灯光_置位置, 空白型, "Ogre5eDll.dll", "e_ogre_Light_setPosition", , 设置灯光的位置
    .参数 灯光句柄, 整数型, , 灯光对象句柄
    .参数 位置X坐标, 小数型, , 灯光点的位置
    .参数 位置Y坐标, 小数型, , 
    .参数 位置Z坐标, 小数型, , 

.DLL命令 灯光_置聚光灯范围, 空白型, "Ogre5eDll.dll", "e_ogre_Light_setSpotlightRange", , 设置聚光灯的范围
    .参数 灯光句柄, 整数型, , 灯光对象句柄
    .参数 内角角度, 小数型, , 聚光灯的内角角度
    .参数 外角角度, 小数型, , 聚光灯的外角角度
    .参数 衰减率, 小数型, , 内角与外角间的衰减率。1.0表示线性衰减；较小的数表示较慢的衰减；较大的数表示较快的衰减

.DLL命令 灯光_置类型, 空白型, "Ogre5eDll.dll", "e_ogre_Light_setType", , 设置灯光的类型
    .参数 灯光句柄, 整数型, , 灯光对象句柄
    .参数 灯光类型, 整数型, , 灯光的类型，为以下值：0.点光源；1.直射光；2.聚光灯。

.DLL命令 日志管理器_取对象, 整数型, "Ogre5eDll.dll", "e_ogre_LogManager__1getSingleton", , 取日志管理器对象，返回对象句柄

.DLL命令 日志管理器_记录日志, 空白型, "Ogre5eDll.dll", "e_ogre_LogManager__1logMessage", , 记录指定的消息到日志文件中
    .参数 日志消息, 文本型, , 要记录到日志文件中的消息

.DLL命令 日志管理器_创建, 整数型, "Ogre5eDll.dll", "e_ogre_LogManager_createInstance", , 创建日志管理器对象，返回对象句柄

.DLL命令 日志管理器_销毁, 整数型, "Ogre5eDll.dll", "e_ogre_LogManager_createInstance", , 销毁日志管理器对象
    .参数 日志管理器句柄, 整数型, , 日志管理器对象句柄

.DLL命令 网格模型_置边界半径, 空白型, "Ogre5eDll.dll", "e_ogre_Mesh_setBoundingSphereRadius", , 设置边界球体的半径
    .参数 网格模型句柄, 整数型, , 网格模型对象句柄
    .参数 边界半径, 小数型, , 要设置的边界半径

.DLL命令 网格模型_置边界盒, 空白型, "Ogre5eDll.dll", "e_ogre_Mesh__1setBounds__IFFFFFFZ", , 设置网格的边界盒
    .参数 网格模型句柄, 整数型, , 网格模型对象句柄
    .参数 mx, 小数型, , 
    .参数 my, 小数型, , 
    .参数 mz, 小数型, , 
    .参数 Mx, 小数型, , 
    .参数 My, 小数型, , 
    .参数 Mz, 小数型, , 
    .参数 pad, 逻辑型, , 缺省值真

.DLL命令 网格模型_置边界盒1, 空白型, "Ogre5eDll.dll", "e_ogre_Mesh__1setBounds__IIZ", , 设置网格的边界盒
    .参数 网格模型句柄, 整数型, , 网格模型对象句柄
    .参数 包围盒句柄, 整数型, , 包围盒对象句柄
    .参数 pad, 逻辑型, , 缺省值真

.DLL命令 网格模型_创建子模型, 整数型, "Ogre5eDll.dll", "e_ogre_Mesh_createSubMesh", , 创建子网格模型，返回子网格模型对象句柄
    .参数 网格模型句柄, 整数型, , 网格模型对象句柄

.DLL命令 网格模型_销毁, 空白型, "Ogre5eDll.dll", "e_ogre_Mesh_dispose", , 销毁网格模型对象
    .参数 网格模型句柄, 整数型, , 网格模型对象句柄

.DLL命令 网格模型_取名称, 整数型, "Ogre5eDll.dll", "e_ogre_Mesh_getName", , 取得网格模型的名称。成功返回0、失败返回-1、缓冲区长度不足返回需要的缓冲区长度
    .参数 网格模型句柄, 整数型, , 网格模型对象句柄
    .参数 网格模型名称变量, 文本型, 传址, 储存取得的网格模型名称
    .参数 缓冲区大小, 整数型, , 网格模型名称的缓冲区大小

.DLL命令 网格模型_取共享顶点数据, 整数型, "Ogre5eDll.dll", "e_ogre_Mesh_getSharedVertexData", , 取得共享的顶点数据，返回顶点数据对象句柄
    .参数 网格模型句柄, 整数型, , 网格模型对象句柄

.DLL命令 网格模型_取骨骼名称, 整数型, "Ogre5eDll.dll", "e_ogre_Mesh_getSkeletonName", , 取得网格模型的骨骼名称。成功返回0、失败返回-1、缓冲区长度不足返回需要的缓冲区长度
    .参数 网格模型句柄, 整数型, , 网格模型对象句柄
    .参数 骨骼名称变量, 文本型, 传址, 储存取得的骨骼名称
    .参数 缓冲区大小, 整数型, , 骨骼名称的缓冲区大小

.DLL命令 网格模型_取骨骼, 整数型, "Ogre5eDll.dll", "e_ogre_Mesh_getSkeleton", , 取得骨骼，返回骨骼对象句柄
    .参数 网格模型句柄, 整数型, , 网格模型对象句柄

.DLL命令 网格模型_是否有骨骼, 逻辑型, "Ogre5eDll.dll", "e_ogre_Mesh_hasSkeleton", , 判断网格模型是否有连接的骨骼
    .参数 网格模型句柄, 整数型, , 网格模型对象句柄

.DLL命令 网格模型_载入档案, 逻辑型, "Ogre5eDll.dll", "e_ogre_Mesh_load", , 载入档案
    .参数 网格模型句柄, 整数型, , 网格模型对象句柄

.DLL命令 网格模型_置共享顶点数据, 空白型, "Ogre5eDll.dll", "e_ogre_Mesh_setSharedVertexData", , 设置共享顶点数据
    .参数 网格模型句柄, 整数型, , 网格模型对象句柄
    .参数 顶点数据句柄, 整数型, , 要设置的顶点数据句柄

.DLL命令 网格模型_置骨骼名称, 空白型, "Ogre5eDll.dll", "e_ogre_Mesh_setSkeletonName", , 设置网格模型的骨骼名称
    .参数 网格模型句柄, 整数型, , 网格模型对象句柄
    .参数 骨骼名称, 文本型, , 要设置的骨骼名称

.DLL命令 网格模型_卸载档案, 空白型, "Ogre5eDll.dll", "e_ogre_Mesh_unload", , 
    .参数 网格模型句柄, 整数型, , 网格模型对象句柄

.DLL命令 模型管理器_创建模型, 整数型, "Ogre5eDll.dll", "e_ogre_MeshManager__1createManual", , 创建手工定义的特定模型
    .参数 模型名称, 文本型, , 新网格模型的名称
    .参数 资源组名称, 文本型, , 指定分配模型到哪个资源组的名称
    .参数 资源载入器句柄, 整数型, , 资源载入器对象句柄

.DLL命令 模型装载器_创建, 整数型, "Ogre5eDll.dll", "e_ogre_MeshSerializer_createInstance", , 创建模型装载器对象，返回对象句柄

.DLL命令 模型装载器_销毁, 整数型, "Ogre5eDll.dll", "e_ogre_MeshSerializer_dispose", , 销毁模型装载器对象
    .参数 模型装载器句柄, 整数型, , 模型装载器对象句柄

.DLL命令 模型装载器_输出模型到文件, 空白型, "Ogre5eDll.dll", "e_ogre_MeshSerializer_exportMesh", , 将模型输出到指定的模型文件中
    .参数 模型装载器句柄, 整数型, , 模型装载器对象句柄
    .参数 网格模型句柄, 整数型, , 网格模型对象句柄
    .参数 文件名, 文本型, , 模型输出到的文件名

.DLL命令 模型管理器_取模型, 整数型, "Ogre5eDll.dll", "e_ogre_MeshManager__1getByName", , 取指定名称的网格模型对象，返回网格模型对象句柄
    .参数 模型名称, 文本型, , 要取得的网格模型名称

.DLL命令 模型管理器_取对象, 整数型, "Ogre5eDll.dll", "e_ogre_MeshManager__1getSingleton", , 取模型管理器对象，返回对象句柄

.DLL命令 模型管理器_从文件载入模型, 整数型, "Ogre5eDll.dll", "e_ogre_MeshManager__1load", , 从文件载入一个网格模型，并使模型立即可以使用
    .参数 模型文件名, 文本型, , 要载入的网格模型文件名（.mesh文件）
    .参数 资源组名称, 文本型, , 网格模型属于的资源组名称
    .参数 顶点缓冲用途, 整数型, , 指定顶点缓冲的用途。可为以下值之一：1.静态；2.动态；4.只写；5.静态只写；6.动态只写；8.可抛弃；14.动态只写可抛弃。
    .参数 索引缓冲用途, 整数型, , 指定索引缓冲的用途。可为以下值之一：1.静态；2.动态；4.只写；5.静态只写；6.动态只写；8.可抛弃；14.动态只写可抛弃。
    .参数 顶点缓冲映射标志, 逻辑型, , 如果为真，会将顶点缓冲映射到系统内存以加快读取速度
    .参数 索引缓冲映射标志, 逻辑型, , 如果为真，会将索引缓冲映射到系统内存以加快读取速度

.DLL命令 模型管理器_移除所有资源, 空白型, "Ogre5eDll.dll", "e_ogre_MeshManager__1removeAll", , 

.DLL命令 模型管理器_创建, 整数型, "Ogre5eDll.dll", "e_ogre_MeshManager_createInstance", , 创建模型管理器实例，返回模型管理器对象句柄

.DLL命令 模型管理器_销毁, 空白型, "Ogre5eDll.dll", "e_ogre_MeshManager_dispose", , 销毁模型管理器对象
    .参数 模型管理器句柄, 整数型, , 模型管理器对象句柄

.DLL命令 模型管理器_移除指定资源, 空白型, "Ogre5eDll.dll", "e_ogre_MeshManager_remove", , 移除指定名称的单个资源
    .参数 模型管理器句柄, 整数型, , 模型管理器对象句柄
    .参数 资源名称, 文本型, , 要移除的资源名称

.DLL命令 模型管理器_创建平面模型, 整数型, "Ogre5eDll.dll", "e_ogre_MeshManager_createPlane__2IFF", , 创建一个基本平面模型，返回网格模型对象句柄
    .参数 平面模型名称, 文本型, , 指定结果模型的名称
    .参数 资源组名称, 文本型, , 模型属于的资源组名称
    .参数 平面定义句柄, 整数型, , 所使用的平面定义对象句柄
    .参数 宽度, 小数型, , 平面的宽度（X方向）
    .参数 高度, 小数型, , 平面的高度（Y方向）

.DLL命令 模型管理器_创建平面模型1, 整数型, "Ogre5eDll.dll", "e_ogre_MeshManager_createPlane__2IFFIIZIFFFFF", , 创建一个基本平面模型，返回网格模型对象句柄
    .参数 平面模型名称, 文本型, , 指定结果模型的名称
    .参数 资源组名称, 文本型, , 模型属于的资源组名称
    .参数 平面定义句柄, 整数型, , 所使用的平面定义对象句柄
    .参数 宽度, 小数型, , 平面的宽度（X方向）
    .参数 高度, 小数型, , 平面的高度（Y方向）
    .参数 X方向分割数量, 整数型, , 指定平面X方向的分割数量
    .参数 Y方向分割数量, 整数型, , 指定平面Y方向的分割数量
    .参数 法线, 逻辑型, , 如果为真，创建垂直于平面的法线
    .参数 纹理坐标集的数量, 整数型, , 纹理坐标集的数量，也就是多层纹理的层数
    .参数 U方向纹理重复次数, 小数型, , 
    .参数 V方向纹理重复次数, 小数型, , 
    .参数 上方向X坐标, 小数型, , 平面的上方向法线
    .参数 上方向Y坐标, 小数型, , 
    .参数 上方向Z坐标, 小数型, , 

.DLL命令 可动物体_取名称, 整数型, "Ogre5eDll.dll", "e_ogre_MovableObject_getName", , 返回0表示成功，－1表示失败, >0表示文本太小，值为需要的文本大小
    .参数 句柄, 整数型, , 可动物体句柄
    .参数 名称, 文本型, , 有空数据文本
    .参数 名称大小, 整数型, , 空文本的大小

.DLL命令 可动物体_取类型名, 整数型, "Ogre5eDll.dll", "e_ogre_MovableObject_getMovableType", , 返回0表示成功，－1表示失败, >0表示文本太小，值为需要的文本大小
    .参数 句柄, 整数型, , 可动物体句柄
    .参数 名称, 文本型, , 有空数据文本
    .参数 名称大小, 整数型, , 空文本的大小

.DLL命令 可动物体_取节点, 整数型, "Ogre5eDll.dll", "e_ogre_MovableObject_getParentNode", , 返回和本对象相关联的节点句柄
    .参数 句柄, 整数型, , 可动物体句柄

.DLL命令 可动物体_取场景节点, 整数型, "Ogre5eDll.dll", "e_ogre_MovableObject_getParentSceneNode", , 返回和本对象相关联的场景节点
    .参数 句柄, 整数型, , 可动物体句柄

.DLL命令 可动物体_是否关联, 逻辑型, "Ogre5eDll.dll", "e_ogre_MovableObject_isAttached", , 返回和本对象是否被关联
    .参数 句柄, 整数型, , 可动物体句柄

.DLL命令 可动物体_通知当前摄像机, 空白型, "Ogre5eDll.dll", "e_ogre_MovableObject_1notifyCurrentCamera", , 通知当前摄像机是进入下一次渲染操作
    .参数 句柄, 整数型, , 可动物体句柄
    .参数 摄像机句柄, 整数型, , 摄像机句柄

.DLL命令 可动物体_取包围盒, 整数型, "Ogre5eDll.dll", "e_ogre_MovableObject_getBoundingBox", , 取物体的本地坐标包围盒
    .参数 句柄, 整数型, , 可动物体句柄

.DLL命令 可动物体_取包围半径, 小数型, "Ogre5eDll.dll", "e_ogre_MovableObject_getBoundingRadius", , 取物体包围盒的半径
    .参数 句柄, 整数型, , 可动物体句柄

.DLL命令 可动物体_取世界包围盒, 整数型, "Ogre5eDll.dll", "e_ogre_MovableObject_getWorldBoundingBox", , 取物体世界坐包围盒
    .参数 句柄, 整数型, , 可动物体句柄
    .参数 源, 逻辑型, , 

.DLL命令 可动物体_置可视, 空白型, "Ogre5eDll.dll", "e_ogre_MovableObject_setVisible", , 设置物体是否可视
    .参数 句柄, 整数型, , 可动物体句柄
    .参数 可视, 逻辑型, , 是否可视

.DLL命令 可动物体_取可视, 逻辑型, "Ogre5eDll.dll", "e_ogre_MovableObject_isVisible", , 取物体是否可视
    .参数 句柄, 整数型, , 可动物体句柄

.DLL命令 可动物体_置查询标志, 空白型, "Ogre5eDll.dll", "e_ogre_MovableObject_setQueryFlags", , 为此物体设置查询标志
    .参数 句柄, 整数型, , 可动物体句柄
    .参数 标志, 整数型, , 标志

.DLL命令 可动物体_取查询标志, 整数型, "Ogre5eDll.dll", "e_ogre_MovableObject_getQueryFlags", , 取此物体的查询标志
    .参数 句柄, 整数型, , 可动物体句柄

.DLL命令 可动物体_置阴影, 空白型, "Ogre5eDll.dll", "e_ogre_MovableObject_setCastShadows", , 设置此物体是否要显示阴影
    .参数 句柄, 整数型, , 可动物体句柄
    .参数 启用, 逻辑型, , 是否启用

.DLL命令 可动物体_取阴影, 逻辑型, "Ogre5eDll.dll", "e_ogre_MovableObject_getCastShadows", , 取此物体是否设置了阴影
    .参数 句柄, 整数型, , 可动物体句柄

.DLL命令 节点_建子节点, 整数型, "Ogre5eDll.dll", "e_ogre_Node_createChild", , 返回子节点句柄
    .参数 句柄, 整数型, , 节点句柄

.DLL命令 节点_取名称, 整数型, "Ogre5eDll.dll", "e_ogre_Node_getName", , 取本节点名称
    .参数 句柄, 整数型, , 节点句柄
    .参数 名称, 文本型, , 有空数据文本
    .参数 名称大小, 整数型, , 空文本大小

.DLL命令 节点_取父节点, 整数型, "Ogre5eDll.dll", "e_ogre_Node_getParent", , 返回父节点句柄
    .参数 句柄, 整数型, , 节点句柄

.DLL命令 节点_取原点, 整数型, "Ogre5eDll.dll", "e_ogre_Node_getOrientation", , 取原点位置。返回＞0表示传数的数组个数不够，值为需要的数组个数，0表示成功
    .参数 句柄, 整数型, , 节点句柄
    .参数 四元素, 小数型, 数组, 至少有4个元素
    .参数 数组大小, 整数型, , 

.DLL命令 节点_置原点, 空白型, "Ogre5eDll.dll", "e_ogre_Node_setOrientation", , 设置原点
    .参数 句柄, 整数型, , 节点句柄
    .参数 W, 小数型, , 四元素中W位置
    .参数 X, 小数型, , 四元素中X位置
    .参数 Y, 小数型, , 四元素中Y位置
    .参数 Z, 小数型, , 四元素中Z位置

.DLL命令 节点_重置原点, 空白型, "Ogre5eDll.dll", "e_ogre_Node_resetOrientation", , 重置原点,让本地坐标坐为世界坐标
    .参数 句柄, 整数型, , 节点句柄

.DLL命令 节点_置位置, 空白型, "Ogre5eDll.dll", "e_ogre_Node_setPosition", , 设置节点位置
    .参数 句柄, 整数型, , 节点句柄
    .参数 X, 小数型, , 三维向量中的X位置
    .参数 Y, 小数型, , 三维向量中的Y位置
    .参数 Z, 小数型, , 三维向量中的Z位置

.DLL命令 节点_取位置, 整数型, "Ogre5eDll.dll", "e_ogre_Node_getPosition", , 取位置。返回＞0表示传数的数组个数不够，值为需要的数组个数，0表示成功
    .参数 句柄, 整数型, , 节点句柄
    .参数 位置, 小数型, 数组, 至少要有3个元素
    .参数 数组大小, 整数型, , 

.DLL命令 节点_置缩放, 空白型, "Ogre5eDll.dll", "e_ogre_Node_setScale", , 
    .参数 句柄, 整数型, , 节点句柄
    .参数 X, 小数型, , 三维向量中的X
    .参数 Y, 小数型, , 三维向量中的Y
    .参数 Z, 小数型, , 三维向量中的Z

.DLL命令 节点_取缩放, 整数型, "Ogre5eDll.dll", "e_ogre_Node_getScale", , 取缩放。返回＞0表示传数的数组个数不够，值为需要的数组个数，0表示成功
    .参数 句柄, 整数型, , 节点句柄
    .参数 缩入, 小数型, 数组, 至少要有3个元素
    .参数 数组大小, 整数型, , 

.DLL命令 节点_置缩放继承, 空白型, "Ogre5eDll.dll", "e_ogre_Node_setInheritScale", , 设置本节点是否继承父节点的缩放
    .参数 句柄, 整数型, , 节点句柄
    .参数 继承, 逻辑型, , 是否继承

.DLL命令 节点_取缩放继承, 逻辑型, "Ogre5eDll.dll", "e_ogre_Node_getInheritScale", , 取本节点是否继承父节点的缩放
    .参数 句柄, 整数型, , 节点句柄

.DLL命令 节点_缩放, 空白型, "Ogre5eDll.dll", "e_ogre_Node_scale", , 缩放本节点
    .参数 句柄, 整数型, , 节点句柄
    .参数 X, 小数型, , 缩放X值
    .参数 Y, 小数型, , 缩放Y值
    .参数 Z, 小数型, , 缩放Z值

.DLL命令 节点_位移, 空白型, "Ogre5eDll.dll", "e_ogre_Node_translate", , 位移节点
    .参数 句柄, 整数型, , 节点句柄
    .参数 X, 小数型, , 位移X值
    .参数 Y, 小数型, , 位移Y值
    .参数 Z, 小数型, , 位移Z值

.DLL命令 节点_旋转, 空白型, "Ogre5eDll.dll", "e_ogre_Node_roll", , 旋转节点
    .参数 句柄, 整数型, , 节点句柄
    .参数 度数, 小数型, , 旋转的度数

.DLL命令 节点_倾斜, 空白型, "Ogre5eDll.dll", "e_ogre_Node_pitch", , 倾斜节点
    .参数 句柄, 整数型, , 节点句柄
    .参数 度数, 小数型, , 倾斜的度数

.DLL命令 节点_偏, 空白型, "Ogre5eDll.dll", "e_ogre_Node_yaw", , 偏节点
    .参数 句柄, 整数型, , 节点句柄
    .参数 度数, 小数型, , 偏的度数

.DLL命令 节点_绕轴旋转, 空白型, "Ogre5eDll.dll", "e_ogre_Node_rotateByAxisAngle", , 绕轴旋转节点
    .参数 句柄, 整数型, , 节点句柄
    .参数 X, 小数型, , 轴的X位置
    .参数 Y, 小数型, , 轴的Y位置
    .参数 Z, 小数型, , 轴的Z位置
    .参数 孤度, 小数型, , 转的孤度

.DLL命令 节点_四元素旋转, 空白型, "Ogre5eDll.dll", "e_ogre_Node_rotateByQuaternion", , 用四元素旋转节点
    .参数 句柄, 整数型, , 节点句柄
    .参数 W, 小数型, , 四元素W值
    .参数 X, 小数型, , 四元素X值
    .参数 Y, 小数型, , 四元素Y值
    .参数 Z, 小数型, , 四元素Z值

.DLL命令 节点_增加子节点, 空白型, "Ogre5eDll.dll", "e_ogre_Node_addChild", , 将已有的一个子节点增加到本节点上
    .参数 句柄, 整数型, , 节点句柄
    .参数 子节点句柄, 整数型, , 要增加的子节点句柄

.DLL命令 节点_取子节点个数, 整数型, "Ogre5eDll.dll", "e_ogre_Node_numChildren", , _取子节点个数
    .参数 句柄, 整数型, , 节点句柄

.DLL命令 节点_索引取子节点, 整数型, "Ogre5eDll.dll", "e_ogre_Node_getChild__II", , 返回子节点句柄，失败返回－1
    .参数 句柄, 整数型, , 节点句柄
    .参数 索引, 整数型, , 子节点索引

.DLL命令 节点_名称取子节点, 整数型, "Ogre5eDll.dll", "e_ogre_Node_getChild_byName", , 返回子节点句柄，失败返回－1
    .参数 句柄, 整数型, , 节点句柄
    .参数 名称, 文本型, , 子节点名称

.DLL命令 节点_索引移除子节点, 空白型, "Ogre5eDll.dll", "e_ogre_Node_removeChild__II", , 据索引移除子节点
    .参数 句柄, 整数型, , 节点句柄
    .参数 索引, 整数型, , 子节点索引

.DLL命令 节点_名称移除子节点, 空白型, "Ogre5eDll.dll", "e_ogre_Node_removeChild_byName", , 
    .参数 句柄, 整数型, , 节点句柄
    .参数 名称, 文本型, , 子节点名称

.DLL命令 节点_移除全部, 空白型, "Ogre5eDll.dll", "e_ogre_Node_removeAllChildren", , 移除全部子节点
    .参数 句柄, 整数型, , 节点句柄

.DLL命令 节点_取起源原点, 整数型, "Ogre5eDll.dll", "e_ogre_Node__1getDerivedOrientation", , 返回0表示成功，＞0表示传数的数组个数不够，值为需要的数组个数
    .参数 句柄, 整数型, , 节点句柄
    .参数 原点, 小数型, 数组, 四元素数组,至少需要4个元素
    .参数 数组大小, 整数型, , 

.DLL命令 节点_取起源位置, 整数型, "Ogre5eDll.dll", "e_ogre_Node__1getDerivedPosition", , 返回0表示成功，＞0表示传数的数组个数不够，值为需要的数组个数
    .参数 句柄, 整数型, , 节点句柄
    .参数 位置, 小数型, 数组, 三维向量，至少需要3个元素
    .参数 数组大小, 整数型, , 

.DLL命令 节点_取起源缩放, 整数型, "Ogre5eDll.dll", "e_ogre_Node__getDerivedScale", , 返回0表示成功，＞0表示传数的数组个数不够，值为需要的数组个数
    .参数 句柄, 整数型, , 节点句柄
    .参数 缩放, 小数型, 数组, 三维向量，至少需要3个元素
    .参数 数组大小, 整数型, , 

.DLL命令 节点_取最初位置, 整数型, "Ogre5eDll.dll", "e_ogre_Node_getInitialPosition", , 返回0表示成功，＞0表示传数的数组个数不够，值为需要的数组个数
    .参数 句柄, 整数型, , 节点句柄
    .参数 位置, 小数型, 数组, 三维向量，至少需要3个元素
    .参数 数组大小, 整数型, , 

.DLL命令 节点_取最初原点, 整数型, "Ogre5eDll.dll", "e_ogre_Node_getInitialOrientation", , 返回0表示成功，＞0表示传数的数组个数不够，值为需要的数组个数
    .参数 句柄, 整数型, , 节点句柄
    .参数 原点, 小数型, 数组, 三维向量，至少需要3个元素
    .参数 数组大小, 整数型, , 

.DLL命令 节点_取世界位置, 整数型, "Ogre5eDll.dll", "e_ogre_Node_getWorldPosition", , 返回0表示成功，＞0表示传数的数组个数不够，值为需要的数组个数
    .参数 句柄, 整数型, , 节点句柄
    .参数 位置, 小数型, 数组, 三维向量，至少需要3个元素
    .参数 数组大小, 整数型, , 

.DLL命令 节点_取世界原点, 整数型, "Ogre5eDll.dll", "e_ogre_Node_getWorldOrientation", , 返回0表示成功，＞0表示传数的数组个数不够，值为需要的数组个数
    .参数 句柄, 整数型, , 节点句柄
    .参数 原点, 小数型, 数组, 三维向量，至少需要3个元素
    .参数 数组大小, 整数型, , 

.DLL命令 节点_取世界变换, 整数型, "Ogre5eDll.dll", "e_ogre_Node_getWorldTransforms", , 返回0表示成功，＞0表示传数的数组个数不够，值为需要的数组个数
    .参数 句柄, 整数型, , 节点句柄
    .参数 变换, 小数型, 数组, 四维距阵, 至少要16个元素
    .参数 数组大小, 整数型, , 

.DLL命令 节点_取视点深度, 小数型, "Ogre5eDll.dll", "e_ogre_Node_getSquaredViewDepth", , 取视点深度
    .参数 句柄, 整数型, , 节点句柄
    .参数 摄像机句柄, 整数型, , 摄像机句柄

.DLL命令 平面_创建, 整数型, "Ogre5eDll.dll", "e_ogre_Plane_createInstance__", , 返回平面句柄

.DLL命令 平面_法线创建, 整数型, "Ogre5eDll.dll", "e_ogre_Plane_createInstance__FFFF", , 返回平面句柄
    .参数 法线X, 小数型, , 
    .参数 法线Y, 小数型, , 
    .参数 法线Z, 小数型, , 
    .参数 距离, 小数型, , 

.DLL命令 平面_法线点创建, 整数型, "Ogre5eDll.dll", "e_ogre_Plane_createInstance__FFFFFF", , 返回平面句柄
    .参数 法线X, 小数型, , 
    .参数 法线Y, 小数型, , 
    .参数 法线Z, 小数型, , 
    .参数 点X, 小数型, , 
    .参数 点Y, 小数型, , 
    .参数 点Z, 小数型, , 

.DLL命令 平面_点点点创建, 整数型, "Ogre5eDll.dll", "e_ogre_Plane_createInstance__FFFFFFFFF", , 
    .参数 点1X, 小数型, , 
    .参数 点1Y, 小数型, , 
    .参数 点1Z, 小数型, , 
    .参数 点2X, 小数型, , 
    .参数 点2Y, 小数型, , 
    .参数 点2Z, 小数型, , 
    .参数 点3X, 小数型, , 
    .参数 点3Y, 小数型, , 
    .参数 点3Z, 小数型, , 

.DLL命令 平面_销毁, 空白型, "Ogre5eDll.dll", "e_ogre_Plane_dispose", , 
    .参数 句柄, 整数型, , 平面句柄

.DLL命令 平面_取面, 整数型, "Ogre5eDll.dll", "e_ogre_Plane_getSide", , 0为无，1为正面，2为反面
    .参数 句柄, 整数型, , 平面句柄
    .参数 点X, 小数型, , 
    .参数 点Y, 小数型, , 
    .参数 点Z, 小数型, , 

.DLL命令 平面_取距离, 小数型, "Ogre5eDll.dll", "e_ogre_Plane_getDistance", , 
    .参数 句柄, 整数型, , 平面句柄
    .参数 点X, 小数型, , 
    .参数 点Y, 小数型, , 
    .参数 点Z, 小数型, , 

.DLL命令 平面_重定义, 空白型, "Ogre5eDll.dll", "e_ogre_Plane_redefine", , 
    .参数 句柄, 整数型, , 平面句柄
    .参数 点1X, 小数型, , 
    .参数 点1Y, 小数型, , 
    .参数 点1Z, 小数型, , 
    .参数 点2X, 小数型, , 
    .参数 点2Y, 小数型, , 
    .参数 点2Z, 小数型, , 
    .参数 点3X, 小数型, , 
    .参数 点3Y, 小数型, , 
    .参数 点3Z, 小数型, , 

.DLL命令 光线_销毁, 空白型, "Ogre5eDll.dll", "e_ogre_Ray_dispose", , 
    .参数 句柄, 整数型, , 光线句柄

.DLL命令 光线场景查询, 空白型, "Ogre5eDll.dll", "e_ogre_RaySceneQuery_setRay", , 
    .参数 句柄, 整数型, , 光线场景查询句柄
    .参数 光线, 整数型, , 光线句柄

.DLL命令 渲染目标_取名称, 整数型, "Ogre5eDll.dll", "e_ogre_RenderTarget_getName", , 返回0表示成功，－1表示失败, >0表示文本太小，值为需要的文本大小
    .参数 句柄, 整数型, , 渲染目标句柄
    .参数 名称, 文本型, , 有空数据文本
    .参数 文本长度, 整数型, , 空数据文本的长度

.DLL命令 渲染目标_更新, 空白型, "Ogre5eDll.dll", "e_ogre_RenderTarget_update", , 
    .参数 句柄, 整数型, , 渲染目标句柄

.DLL命令 渲染目标_增加视口, 整数型, "Ogre5eDll.dll", "e_ogre_RenderTarget_addViewport__II", , 返回视口句柄
    .参数 句柄, 整数型, , 渲染目标句柄
    .参数 摄像机句柄, 整数型, , 

.DLL命令 渲染目标_增加位置视口, 整数型, "Ogre5eDll.dll", "e_ogre_RenderTarget_addViewport__IIIFFFF", , 返回视口句柄
    .参数 句柄, 整数型, , 渲染目标句柄
    .参数 摄像机句柄, 整数型, , 
    .参数 深度, 整数型, , 
    .参数 左, 整数型, , 
    .参数 右, 整数型, , 
    .参数 宽, 整数型, , 
    .参数 高, 整数型, , 

.DLL命令 渲染目标_是否激活, 逻辑型, "Ogre5eDll.dll", "e_ogre_RenderTarget_isActive", , 
    .参数 句柄, 整数型, , 渲染目标句柄

.DLL命令 渲染目标_置激活, 空白型, "Ogre5eDll.dll", "e_ogre_RenderTarget_setActive", , 
    .参数 句柄, 整数型, , 渲染目标句柄
    .参数 激活, 逻辑型, , 是否激活

.DLL命令 渲染目标_取最后帧数, 整数型, "Ogre5eDll.dll", "e_ogre_RenderTarget_getLastFPS", , 
    .参数 句柄, 整数型, , 渲染目标句柄

.DLL命令 渲染目标_取平均帧数, 整数型, "Ogre5eDll.dll", "e_ogre_RenderTarget_getAverageFPS", , 
    .参数 句柄, 整数型, , 渲染目标句柄

.DLL命令 渲染目标_取最大帧数, 整数型, "Ogre5eDll.dll", "e_ogre_RenderTarget_getBestFPS", , 
    .参数 句柄, 整数型, , 渲染目标句柄

.DLL命令 渲染目标_取最小帧数, 整数型, "Ogre5eDll.dll", "e_ogre_RenderTarget_getWorstFPS", , 
    .参数 句柄, 整数型, , 渲染目标句柄

.DLL命令 渲染目标_取三角形数, 整数型, "Ogre5eDll.dll", "e_ogre_RenderTarget_getTriangleCount", , 
    .参数 句柄, 整数型, , 渲染目标句柄

.DLL命令 渲染目标_取最大帧时间, 小数型, "Ogre5eDll.dll", "e_ogre_RenderTarget_getBestFrameTime", , 
    .参数 句柄, 整数型, , 渲染目标句柄

.DLL命令 渲染目标_取最小帧时间, 整数型, "Ogre5eDll.dll", "e_ogre_RenderTarget_getWorstFrameTime", , 
    .参数 句柄, 整数型, , 渲染目标句柄

.DLL命令 渲染窗口_更新, 空白型, "Ogre5eDll.dll", "e_ogre_RenderWindow_update", , 
    .参数 句柄, 整数型, , 渲染窗口句柄

.DLL命令 渲染窗口_是否主窗口, 逻辑型, "Ogre5eDll.dll", "e_ogre_RenderWindow_isPrimary", , 
    .参数 句柄, 整数型, , 渲染窗口句柄

.DLL命令 渲染窗口_销毁, 空白型, "Ogre5eDll.dll", "e_ogre_RenderWindow_destroy", , 
    .参数 句柄, 整数型, , 渲染窗口句柄

.DLL命令 渲染窗口_更改大小, 空白型, "Ogre5eDll.dll", "e_ogre_RenderWindow_resize", , 
    .参数 句柄, 整数型, , 渲染窗口句柄
    .参数 宽, 整数型, , 
    .参数 高, 整数型, , 

.DLL命令 渲染窗口_更改位置, 空白型, "Ogre5eDll.dll", "e_ogre_RenderWindow_reposition", , 
    .参数 句柄, 整数型, , 渲染窗口句柄
    .参数 左, 整数型, , 
    .参数 上, 整数型, , 

.DLL命令 渲染窗口_是否关闭, 逻辑型, "Ogre5eDll.dll", "e_ogre_RenderWindow_isClosed", , 
    .参数 句柄, 整数型, , 渲染窗口句柄

.DLL命令 渲染窗口_交换缓冲, 整数型, "Ogre5eDll.dll", "e_ogre_RenderWindow_swapBuffers", , 
    .参数 句柄, 整数型, , 渲染窗口句柄
    .参数 异步, 逻辑型, , 

.DLL命令 渲染窗口_纹理剪切, 逻辑型, "Ogre5eDll.dll", "e_ogre_RenderWindow_requiresTextureFlipping", , 是否需要纹理剪切
    .参数 句柄, 整数型, , 渲染窗口句柄

.DLL命令 管理资源组_创建, 整数型, "Ogre5eDll.dll", "e_ogre_ResourceGroupManager_createInstance", , 返回句柄

.DLL命令 管理资源组_取单件, 整数型, "Ogre5eDll.dll", "e_ogre_ResourceGroupManager__1getSingleton", , 返回本对象的全局唯一句柄

.DLL命令 管理资源组_销毁, 空白型, "Ogre5eDll.dll", "e_ogre_ResourceGroupManager_dispose", , 
    .参数 句柄, 整数型, , 管理资源组句柄

.DLL命令 管理资源组_创建资源组, 逻辑型, "Ogre5eDll.dll", "e_ogre_ResourceGroupManager_createResourceGroup", , 返回是否成功
    .参数 句柄, 整数型, , 管理资源组句柄
    .参数 名称, 文本型, , 资源组名称

.DLL命令 管理资源组_初始化资源组, 逻辑型, "Ogre5eDll.dll", "e_ogre_ResourceGroupManager_initialiseResourceGroup", , 返回是否成功
    .参数 句柄, 整数型, , 管理资源组句柄
    .参数 名称, 文本型, , 资源组名称

.DLL命令 管理资源组_初始化所有资源组, 逻辑型, "Ogre5eDll.dll", "e_ogre_ResourceGroupManager_initialiseAllResourceGroups", , 
    .参数 句柄, 整数型, , 管理资源组句柄

.DLL命令 管理资源组_加载资源组, 逻辑型, "Ogre5eDll.dll", "e_ogre_ResourceGroupManager_loadResourceGroup", , 
    .参数 句柄, 整数型, , 管理资源组句柄
    .参数 名称, 文本型, , 资源组名称
    .参数 是否加载主资源, 逻辑型, , 是否是主资源
    .参数 是否加载世界几何体, 逻辑型, , 

.DLL命令 管理资源组_卸载资源组, 逻辑型, "Ogre5eDll.dll", "e_ogre_ResourceGroupManager_unloadResourceGroup", , 
    .参数 句柄, 整数型, , 管理资源组句柄
    .参数 名称, 文本型, , 资源组名称

.DLL命令 管理资源组_链接世界几何体, 空白型, "Ogre5eDll.dll", "e_ogre_ResourceGroupManager_linkWorldGeometryToResourceGroup", , 
    .参数 句柄, 整数型, , 管理资源组句柄
    .参数 资源组名称, 文本型, , 资源组名称
    .参数 世界几何体, 文本型, , 
    .参数 场景管理句柄, 整数型, , 

.DLL命令 管理资源组_取世界资源组名称, 整数型, "Ogre5eDll.dll", "e_ogre_ResourceGroupManager_getWorldResourceGroupName", , 取世界资源组名称。成功返回0、失败返回-1、缓冲区长度不足返回需要的缓冲区长度
    .参数 句柄, 整数型, , 管理资源组句柄
    .参数 资源组名称, 文本型, , 
    .参数 缓冲大小, 整数型, , 

.DLL命令 管理资源组_清理资源组, 逻辑型, "Ogre5eDll.dll", "e_ogre_ResourceGroupManager_clearResourceGroup", , 
    .参数 句柄, 整数型, , 管理资源组句柄
    .参数 名称, 文本型, , 资源组名称

.DLL命令 管理资源组_销毁资源组, 逻辑型, "Ogre5eDll.dll", "e_ogre_ResourceGroupManager_destroyResourceGroup", , 
    .参数 句柄, 整数型, , 管理资源组句柄
    .参数 名称, 文本型, , 资源组名称

.DLL命令 管理资源组_增加资源定位, 逻辑型, "Ogre5eDll.dll", "e_ogre_ResourceGroupManager_addResourceLocation", , 
    .参数 句柄, 整数型, , 管理资源组句柄
    .参数 位置, 文本型, , 资源组的位置，路径和文件名
    .参数 资源类型, 文本型, , 资源类型
    .参数 资源组名称, 文本型, , 
    .参数 是否递归, 逻辑型, , 

.DLL命令 管理资源组_删除资源定位, 逻辑型, "Ogre5eDll.dll", "e_ogre_ResourceGroupManager_removeResourceLocation", , 
    .参数 句柄, 整数型, , 管理资源组句柄
    .参数 位置, 文本型, , 资源组的位置，路径和文件名
    .参数 资源组名称, 文本型, , 

.DLL命令 管理资源组_卸载管理资源组, 逻辑型, "Ogre5eDll.dll", "e_ogre_ResourceGroupManager_shutdownAll", , 
    .参数 句柄, 整数型, , 管理资源组句柄

.DLL命令 根_创建, 整数型, "Ogre5eDll.dll", "e_ogre_Root_createInstance__", , 根句柄

.DLL命令 根_名创建, 整数型, "Ogre5eDll.dll", "e_ogre_Root_createInstance_fromname", , 根句柄
    .参数 插件文件名, 文本型, , 
    .参数 配置文件名, 文本型, , 
    .参数 日志文件名, 文本型, , 

.DLL命令 根_取单件, 整数型, "Ogre5eDll.dll", "e_ogre_Root__1getSingleton", , 返回根句柄

.DLL命令 根_销毁, 逻辑型, "Ogre5eDll.dll", "e_ogre_Root_dispose", , 
    .参数 句柄, 整数型, , 根句柄

.DLL命令 根_显示配置窗口, 逻辑型, "Ogre5eDll.dll", "e_ogre_Root_showConfigDialog", , 
    .参数 句柄, 整数型, , 根句柄

.DLL命令 根_渲染一帧, 空白型, "Ogre5eDll.dll", "e_ogre_Root_renderOneFrame", , 
    .参数 句柄, 整数型, , 根句柄

.DLL命令 根_初始化窗口, 整数型, "Ogre5eDll.dll", "e_ogre_Root_initialise", , 返回渲染窗口句柄
    .参数 句柄, 整数型, , 根句柄
    .参数 是否自动创建窗口, 逻辑型, , 
    .参数 窗口标题, 文本型, , 

.DLL命令 根_创建渲染窗口, 整数型, "Ogre5eDll.dll", "e_ogre_Root_createRenderWindow", , 返回渲染窗口句柄
    .参数 句柄, 整数型, , 根句柄
    .参数 名称, 文本型, , 窗口名称
    .参数 宽, 整数型, , 窗口宽
    .参数 高, 整数型, , 窗口高
    .参数 是否全屏, 逻辑型, , 
    .参数 标题, 文本型, , 
    .参数 色深, 整数型, , 颜色深,16或32
    .参数 左, 整数型, , 窗口左边位置
    .参数 顶, 整数型, , 窗口顶边位置
    .参数 深度缓冲, 逻辑型, , 是否用深度缓冲
    .参数 窗口句柄, 整数型, , 
    .参数 父窗口句柄, 整数型, , 
    .参数 全屏抗锯齿系数, 整数型, , 
    .参数 刷新率, 小数型, , 
    .参数 是否同步, 逻辑型, , 

.DLL命令 根_取场景管理, 整数型, "Ogre5eDll.dll", "e_ogre_Root_getSceneManager", , 场景管理句柄
    .参数 句柄, 整数型, , 根句柄
    .参数 场景类型, 整数型, , 

.DLL命令 根_加载插件, 逻辑型, "Ogre5eDll.dll", "e_ogre_Root_loadPlugin", , 
    .参数 句柄, 整数型, , 根句柄
    .参数 插件名, 文本型, , 

.DLL命令 根_卸载插件, 逻辑型, "Ogre5eDll.dll", "e_ogre_Root_unloadPlugin", , 
    .参数 句柄, 整数型, , 根句柄
    .参数 插件名, 文本型, , 

.DLL命令 根_取活动渲染目标, 整数型, "Ogre5eDll.dll", "e_ogre_Root_getAvailableRenderes", , 返回0为成功，＞0为数组个数不够，值为需要的数组个数
    .参数 句柄, 整数型, , 根句柄
    .参数 渲染目标句柄, 整数型, 数组, 渲染目标句柄数组
    .参数 数组个数, 整数型, , 

.DLL命令 根_置渲染系统, 逻辑型, "Ogre5eDll.dll", "e_ogre_Root_setRenderSystem", , 
    .参数 句柄, 整数型, , 根句柄
    .参数 渲染系统句柄, 整数型, , 

.DLL命令 场景管理_置环境光, 空白型, "Ogre5eDll.dll", "e_ogre_SceneManager_setAmbientLight", , 
    .参数 句柄, 整数型, , 场景管理句柄
    .参数 红, 小数型, , 
    .参数 绿, 小数型, , 
    .参数 蓝, 小数型, , 
    .参数 透明, 小数型, , 

.DLL命令 场景管理_创建摄像机, 整数型, "Ogre5eDll.dll", "e_ogre_SceneManager_createCamera", , 返回摄像机句柄
    .参数 句柄, 整数型, , 场景管理句柄
    .参数 摄像机名, 文本型, , 

.DLL命令 场景管理_创建实体, 整数型, "Ogre5eDll.dll", "e_ogre_SceneManager_createEntity", , 返回实体句柄
    .参数 句柄, 整数型, , 场景管理句柄
    .参数 实体名, 文本型, , 
    .参数 模型名, 文本型, , 

.DLL命令 场景管理_取场景根节点, 整数型, "Ogre5eDll.dll", "e_ogre_SceneManager_getRootSceneNode", , 返回节点句柄
    .参数 句柄, 整数型, , 场景管理句柄

.DLL命令 场景管理_创建光线查询, 整数型, "Ogre5eDll.dll", "e_ogre_SceneManager_createRayQuery", , 返回光线查询句柄
    .参数 句柄, 整数型, , 场景管理句柄
    .参数 光线句柄, 整数型, , 
    .参数 掩码, 整数型, , 

.DLL命令 场景管理_清除场景, 逻辑型, "Ogre5eDll.dll", "e_ogre_SceneManager_clearScene", , 
    .参数 句柄, 整数型, , 场景管理句柄

.DLL命令 场景管理_创建灯光, 整数型, "Ogre5eDll.dll", "e_ogre_SceneManager_createLight", , 返回灯光句柄
    .参数 句柄, 整数型, , 场景管理句柄
    .参数 灯光名称, 文本型, , 

.DLL命令 场景管理_创建公告板, 整数型, "Ogre5eDll.dll", "e_ogre_SceneManager_createBillboardSet", , 返回公告板句柄
    .参数 句柄, 整数型, , 场景管理句柄
    .参数 公告板名称, 文本型, , 

.DLL命令 场景管理_创建静态几何体, 整数型, "Ogre5eDll.dll", "e_ogre_SceneManager_createStaticGeometry", , 返回静态几何体句柄
    .参数 句柄, 整数型, , 场景管理句柄
    .参数 静态几何体名称, 文本型, , 

.DLL命令 场景管理_创建动画, 整数型, "Ogre5eDll.dll", "e_ogre_SceneManager_createAnimation", , 返回动画句柄
    .参数 句柄, 整数型, , 场景管理句柄
    .参数 动画名称, 文本型, , 
    .参数 长度, 小数型, , 

.DLL命令 场景管理_创建动画状态, 整数型, "Ogre5eDll.dll", "e_ogre_SceneManager_createAnimationState", , 返回动画状态句柄
    .参数 句柄, 整数型, , 场景管理句柄
    .参数 动画状态名称, 文本型, , 

.DLL命令 场景管理_显示边框, 空白型, "Ogre5eDll.dll", "e_ogre_SceneManager_showBoundingBoxes", , 
    .参数 句柄, 整数型, , 场景管理句柄
    .参数 是否显示, 逻辑型, , 

.DLL命令 场景管理_取是否显示边框, 逻辑型, "Ogre5eDll.dll", "e_ogre_SceneManager_getShowBoundingBoxes", , 
    .参数 句柄, 整数型, , 场景管理句柄

.DLL命令 场景管理_清除渲染器队列列表, 空白型, "Ogre5eDll.dll", "e_ogre_SceneManager_clearSpecialCaseRenderQueues", , 清除特殊情况的渲染器队列列表
    .参数 句柄, 整数型, , 场景管理句柄

.DLL命令 场景管理_加入项目, 空白型, "Ogre5eDll.dll", "e_ogre_SceneManager_addSpecialCaseRenderQueue", , 加入一个项目到特殊情况的渲染器队列列表中
    .参数 句柄, 整数型, , 场景管理句柄
    .参数 队列标识, 整数型, , 

.DLL命令 场景管理_置队列处理模式, 空白型, "Ogre5eDll.dll", "e_ogre_SceneManager_setSpecialCaseRenderQueueMode", , 
    .参数 句柄, 整数型, , 场景管理句柄
    .参数 模式, 整数型, , 

.DLL命令 场景节点_销毁, 空白型, "Ogre5eDll.dll", "e_ogre_SceneNode_dispose", , 
    .参数 句柄, 整数型, , 场景节点句柄

.DLL命令 场景节点_关联对象, 逻辑型, "Ogre5eDll.dll", "e_ogre_SceneNode_attachObject", , 
    .参数 句柄, 整数型, , 场景节点句柄
    .参数 对象句柄, 整数型, , 
    .参数 标识, 整数型, , 

.DLL命令 场景节点_创建场景子节点, 整数型, "Ogre5eDll.dll", "e_ogre_SceneNode_createChildSceneNode__I", , 返回场景子节点句柄
    .参数 句柄, 整数型, , 场景节点句柄

.DLL命令 场景节点_名称创建场景子节点, 整数型, "Ogre5eDll.dll", "e_ogre_SceneNode_createChildSceneNode_fromName", , 返回场景子节点句柄
    .参数 句柄, 整数型, , 场景节点句柄
    .参数 场景子节点名称, 文本型, , 

.DLL命令 场景节点_分离对象, 空白型, "Ogre5eDll.dll", "e_ogre_SceneNode_detachObject", , 
    .参数 句柄, 整数型, , 场景节点句柄
    .参数 对象名, 文本型, , 

.DLL命令 场景节点_显示边框, 空白型, "Ogre5eDll.dll", "e_ogre_SceneNode_showBoundingBox", , 
    .参数 句柄, 整数型, , 场景节点句柄
    .参数 是否显示, 逻辑型, , 是否显示边框

.DLL命令 场景节点_是否显示, 逻辑型, "Ogre5eDll.dll", "e_ogre_SceneNode_getShowBoundingBox", , 
    .参数 句柄, 整数型, , 场景节点句柄

.DLL命令 场景节点_取关联对象, 整数型, "Ogre5eDll.dll", "e_ogre_SceneNode_getAttachedObject", , 返回关联对象句柄
    .参数 句柄, 整数型, , 场景节点句柄
    .参数 对象名, 文本型, , 关联对象名

.DLL命令 场景节点_取包围盒, 整数型, "Ogre5eDll.dll", "e_ogre_SceneNode__1getWorldAABB", , 返回包围盒句柄
    .参数 句柄, 整数型, , 场景节点句柄

.DLL命令 骨骼_销毁, 空白型, "Ogre5eDll.dll", "e_ogre_Skeleton_dispose", , 
    .参数 句柄, 整数型, , 骨骼句柄

.DLL命令 骨骼_取名称, 整数型, "Ogre5eDll.dll", "e_ogre_Skeleton_getName", , 返回0表示成功，＞1表示数组个数不够
    .参数 句柄, 整数型, , 骨骼句柄
    .参数 名称, 文本型, , 
    .参数 名称长度, 整数型, , 

.DLL命令 骨骼_创建骨头, 整数型, "Ogre5eDll.dll", "e_ogre_Skeleton__1createBone__I", , 返回骨头句柄
    .参数 句柄, 整数型, , 骨骼句柄

.DLL命令 骨骼_编号创建骨头, 整数型, "Ogre5eDll.dll", "e_ogre_Skeleton__1createBone__IS", , 返回骨头句柄
    .参数 句柄, 整数型, , 骨骼句柄
    .参数 骨头编号, 短整数型, , 

.DLL命令 骨骼_名称创建骨头, 整数型, "Ogre5eDll.dll", "e_ogre_Skeleton__1createBone_fromName", , 返回骨头句柄
    .参数 句柄, 整数型, , 骨骼句柄
    .参数 名称, 文本型, , 

.DLL命令 骨骼_编号名称创建骨头, 整数型, "Ogre5eDll.dll", "e_ogre_Skeleton__1createBone_formHandleName", , 返回骨头句柄
    .参数 句柄, 整数型, , 骨骼句柄
    .参数 骨头名称, 文本型, , 
    .参数 骨头编号, 短整数型, , 

.DLL命令 骨骼_取骨头数, 整数型, "Ogre5eDll.dll", "e_ogre_Skeleton_getNumBones", , 
    .参数 句柄, 整数型, , 骨骼句柄

.DLL命令 骨骼_取根骨头, 整数型, "Ogre5eDll.dll", "e_ogre_Skeleton_getRootBone", , 返回骨头句柄
    .参数 句柄, 整数型, , 骨骼句柄

.DLL命令 骨骼_编号取骨头, 整数型, "Ogre5eDll.dll", "e_ogre_Skeleton_getBone__IS", , 返回骨头句柄
    .参数 句柄, 整数型, , 骨骼句柄
    .参数 骨头编号, 整数型, , 

.DLL命令 骨骼_名称取骨头, 整数型, "Ogre5eDll.dll", "e_ogre_Skeleton_getBone_fromName", , 返回骨头句柄
    .参数 句柄, 整数型, , 骨骼句柄
    .参数 骨头名称, 文本型, , 

.DLL命令 骨骼_置绑定样子, 空白型, "Ogre5eDll.dll", "e_ogre_Skeleton_setBindingPose", , 
    .参数 句柄, 整数型, , 骨骼句柄

.DLL命令 骨骼_重置, 空白型, "Ogre5eDll.dll", "e_ogre_Skeleton_reset", , 
    .参数 句柄, 整数型, , 骨骼句柄

.DLL命令 骨骼_创建动画, 整数型, "Ogre5eDll.dll", "e_ogre_Skeleton_createAnimation", , 返回动画句柄
    .参数 句柄, 整数型, , 骨骼句柄
    .参数 动画名称, 文本型, , 
    .参数 长度, 整数型, , 

.DLL命令 骨骼_取动画, 整数型, "Ogre5eDll.dll", "e_ogre_Skeleton_getAnimation_fromName", , 返回动画句柄
    .参数 句柄, 整数型, , 骨骼句柄
    .参数 动画名称, 文本型, , 

.DLL命令 骨骼_移除动画, 空白型, "Ogre5eDll.dll", "e_ogre_Skeleton_removeAnimation", , 
    .参数 句柄, 整数型, , 骨骼句柄
    .参数 动画名称, 文本型, , 

.DLL命令 骨骼_取动画个数, 整数型, "Ogre5eDll.dll", "e_ogre_Skeleton_getNumAnimations", , 
    .参数 句柄, 整数型, , 骨骼句柄

.DLL命令 骨骼_序号取动画, 整数型, "Ogre5eDll.dll", "e_ogre_Skeleton_getAnimation__IS", , 返回动画句柄
    .参数 句柄, 整数型, , 骨骼句柄
    .参数 动画序号, 短整数型, , 

.DLL命令 骨骼_取绑定模式, 整数型, "Ogre5eDll.dll", "e_ogre_Skeleton_getBlendMode", , 
    .参数 句柄, 整数型, , 骨骼句柄

.DLL命令 骨骼_置绑定模式, 空白型, "Ogre5eDll.dll", "e_ogre_Skeleton_setBlendMode", , 
    .参数 句柄, 整数型, , 骨骼句柄
    .参数 绑定模式, 整数型, , 

.DLL命令 骨骼_更新形状, 空白型, "Ogre5eDll.dll", "e_ogre_Skeleton__1updateTransforms", , 
    .参数 句柄, 整数型, , 骨骼句柄

.DLL命令 骨骼管理_创建, 整数型, "Ogre5eDll.dll", "e_ogre_SkeletonManager_createInstance", , 返回骨骼管理句柄

.DLL命令 骨骼管理_取单件, 整数型, "Ogre5eDll.dll", "e_ogre_SkeletonManager__1getSingleton", , 返回骨骼管理句柄

.DLL命令 骨骼管理_销毁, 空白型, "Ogre5eDll.dll", "e_ogre_SkeletonManager_dispose", , 
    .参数 句柄, 整数型, , 骨骼管理句柄

.DLL命令 骨骼管理_名称创建, 整数型, "Ogre5eDll.dll", "e_ogre_SkeletonManager__1create", , 返回骨骼管理句柄
    .参数 文件名, 文本型, , 
    .参数 组名, 文本型, , 
    .参数 是否手工, 逻辑型, , 
    .参数 加载者, 整数型, , 
    .参数 创建参数, 整数型, , 

.DLL命令 骨骼管理_移除全部, 空白型, "Ogre5eDll.dll", "e_ogre_SkeletonManager__1removeAll", , 

.DLL命令 骨骼管理_名称获取, 整数型, "Ogre5eDll.dll", "e_ogre_SkeletonManager__1getByName", , 获取的句柄
    .参数 名称, 文本型, , 

.DLL命令 静态几何体_增加实体, 逻辑型, "Ogre5eDll.dll", "e_ogre_StaticGeometry_addEntity", , 
    .参数 句柄, 整数型, , 静态几何体句柄
    .参数 实体句柄, 整数型, , 实体句柄
    .参数 位置X, 整数型, , 
    .参数 位置Y, 整数型, , 
    .参数 位置Z, 整数型, , 
    .参数 旋转W, 整数型, , 
    .参数 旋转X, 整数型, , 
    .参数 旋转Y, 整数型, , 
    .参数 旋转Z, 整数型, , 
    .参数 缩放X, 整数型, , 
    .参数 缩放Y, 整数型, , 
    .参数 缩放Z, 整数型, , 

.DLL命令 静态几何体_置区域维数, 空白型, "Ogre5eDll.dll", "e_ogre_StaticGeometry_setRegionDimensions", , 
    .参数 句柄, 整数型, , 静态几何体句柄
    .参数 大小X, 整数型, , 
    .参数 大小Y, 整数型, , 
    .参数 大小Z, 整数型, , 

.DLL命令 静态几何体_置原点, 空白型, "Ogre5eDll.dll", "e_ogre_StaticGeometry_setOrigin", , 
    .参数 句柄, 整数型, , 静态几何体句柄
    .参数 原点X, 整数型, , 
    .参数 原点Y, 整数型, , 
    .参数 原点Z, 整数型, , 

.DLL命令 静态几何体_建立, 逻辑型, "Ogre5eDll.dll", "e_ogre_StaticGeometry_build", , 
    .参数 句柄, 整数型, , 静态几何体句柄

.DLL命令 子实体_取材质名, 整数型, "Ogre5eDll.dll", "e_ogre_SubEntity_getMaterialName", , 
    .参数 句柄, 整数型, , 子实体句柄
    .参数 名称, 文本型, , 
    .参数 名称文本长度, 整数型, , 

.DLL命令 子实体_置材质名, 空白型, "Ogre5eDll.dll", "e_ogre_SubEntity_setMaterialName", , 
    .参数 句柄, 整数型, , 子实体句柄
    .参数 材质名, 文本型, , 

.DLL命令 子模型_增加骨骼, 空白型, "Ogre5eDll.dll", "e_ogre_SubMesh_addBoneAssignment", , 
    .参数 句柄, 整数型, , 子模型句柄
    .参数 顶点索引, 整数型, , 
    .参数 骨骼索引, 整数型, , 
    .参数 重, 小数型, , 

.DLL命令 子模型_取索引数据, 空白型, "Ogre5eDll.dll", "e_ogre_SubMesh_getIndexData", , 
    .参数 句柄, 整数型, , 子模型句柄

.DLL命令 子模型_置材质名, 空白型, "Ogre5eDll.dll", "e_ogre_SubMesh_setMaterialName", , 
    .参数 句柄, 整数型, , 子模型句柄
    .参数 材质名, 文本型, , 

.DLL命令 子模型_置共享顶点, 空白型, "Ogre5eDll.dll", "e_ogre_SubMesh_setUseSharedVertices", , 
    .参数 句柄, 整数型, , 子模型句柄
    .参数 是否共享顶点, 逻辑型, , 

.DLL命令 子模型_取共享顶点, 逻辑型, "Ogre5eDll.dll", "e_ogre_SubMesh_getUseSharedVertices", , 返回是否共享顶点
    .参数 句柄, 整数型, , 子模型句柄

.DLL命令 子模型_置顶点数据, 空白型, "Ogre5eDll.dll", "e_ogre_SubMesh_setVertexData", , 
    .参数 句柄, 整数型, , 子模型句柄
    .参数 顶点数据句柄, 整数型, , 

.DLL命令 子模型_取顶点数据, 整数型, "Ogre5eDll.dll", "e_ogre_SubMesh_getVertexData", , 
    .参数 句柄, 整数型, , 子模型句柄

.DLL命令 子模型_清除骨骼, 空白型, "Ogre5eDll.dll", "e_ogre_SubMesh_clearBoneAssignment", , 
    .参数 句柄, 整数型, , 子模型句柄

.DLL命令 顶点缓冲绑定_置绑定, 空白型, "Ogre5eDll.dll", "e_ogre_VertexBufferBinding_setBinding", , 
    .参数 句柄, 整数型, , 顶点缓冲绑定句柄
    .参数 索引, 整数型, , 
    .参数 硬件顶点缓冲句柄, 整数型, , 

.DLL命令 顶点数据_创建, 整数型, "Ogre5eDll.dll", "e_ogre_VertexData_createInstance", , 返回顶点数据句柄

.DLL命令 顶点数据_销毁, 空白型, "Ogre5eDll.dll", "e_ogre_VertexData_dispose", , 
    .参数 句柄, 整数型, , 顶点数据句柄

.DLL命令 顶点数据_置顶点数, 空白型, "Ogre5eDll.dll", "e_ogre_VertexData_setVertexCount", , 
    .参数 句柄, 整数型, , 顶点数据句柄
    .参数 顶点数, 整数型, , 

.DLL命令 顶点数据_取顶点数, 整数型, "Ogre5eDll.dll", "e_ogre_VertexData_getVertexCount", , 
    .参数 句柄, 整数型, , 顶点数据句柄

.DLL命令 顶点数据_取顶点定义, 整数型, "Ogre5eDll.dll", "e_ogre_VertexData_getVertexDeclaration", , 返回顶点定义句柄
    .参数 句柄, 整数型, , 顶点数据句柄

.DLL命令 顶点数据_取开始顶点, 整数型, "Ogre5eDll.dll", "e_ogre_VertexData_getVertexStart", , 返回开始顶点
    .参数 句柄, 整数型, , 顶点数据句柄

.DLL命令 顶点数据_置开始顶点, 空白型, "Ogre5eDll.dll", "e_ogre_VertexData_setVertexStart", , 设置开始顶点
    .参数 句柄, 整数型, , 顶点数据句柄
    .参数 开始顶点, 整数型, , 

.DLL命令 顶点数据_取顶点缓冲绑定, 整数型, "Ogre5eDll.dll", "e_ogre_VertexData_getVertexBufferBinding", , 返回顶点缓冲绑定句柄
    .参数 句柄, 整数型, , 顶点数据句柄

.DLL命令 顶点定义_增加成员, 整数型, "Ogre5eDll.dll", "e_ogre_VertexDeclaration_addElement", , 
    .参数 句柄, 整数型, , 顶点定义句柄
    .参数 源, 整数型, , 
    .参数 偏移, 整数型, , 
    .参数 类型, 整数型, , 
    .参数 语义, 整数型, , 
    .参数 索引, 整数型, , 

.DLL命令 顶点成员_取类型大小, 整数型, "Ogre5eDll.dll", "e_ogre_VertexElement_getTypeSize", , 
    .参数 句柄, 整数型, , 顶点成员句柄
    .参数 类型, 整数型, , 

.DLL命令 视口_置背景颜色, 空白型, "Ogre5eDll.dll", "e_ogre_Viewport_setBackgroundColour", , 
    .参数 句柄, 整数型, , 视口句柄
    .参数 红, 小数型, , 
    .参数 绿, 小数型, , 
    .参数 监, 小数型, , 
    .参数 透明, 小数型, , 

.DLL命令 视口_更新, 空白型, "Ogre5eDll.dll", "e_ogre_Viewport_update", , 
    .参数 句柄, 整数型, , 视口句柄

.DLL命令 视口_取摄像机, 整数型, "Ogre5eDll.dll", "e_ogre_Viewport_getCamera", , 返回摄像机句柄
    .参数 句柄, 整数型, , 视口句柄

.DLL命令 视口_置摄像机, 空白型, "Ogre5eDll.dll", "e_ogre_Viewport_setCamera", , 
    .参数 句柄, 整数型, , 视口句柄
    .参数 摄像机句柄, 整数型, , 

.DLL命令 视口_取左, 小数型, "Ogre5eDll.dll", "e_ogre_Viewport_getLeft", , 
    .参数 句柄, 整数型, , 视口句柄

.DLL命令 视口_取顶, 小数型, "Ogre5eDll.dll", "e_ogre_Viewport_getTop", , 
    .参数 句柄, 整数型, , 视口句柄

.DLL命令 视口_取宽, 小数型, "Ogre5eDll.dll", "e_ogre_Viewport_getWidth", , 
    .参数 句柄, 整数型, , 视口句柄

.DLL命令 视口_取高, 小数型, "Ogre5eDll.dll", "e_ogre_Viewport_getHeight", , 
    .参数 句柄, 整数型, , 视口句柄

.DLL命令 视口_取真左, 整数型, "Ogre5eDll.dll", "e_ogre_Viewport_getActualLeft", , 
    .参数 句柄, 整数型, , 视口句柄

.DLL命令 视口_取真顶, 整数型, "Ogre5eDll.dll", "e_ogre_Viewport_getActualTop", , 
    .参数 句柄, 整数型, , 视口句柄

.DLL命令 视口_取真宽, 整数型, "Ogre5eDll.dll", "e_ogre_Viewport_getActualWidth", , 
    .参数 句柄, 整数型, , 视口句柄

.DLL命令 视口_取真高, 整数型, "Ogre5eDll.dll", "e_ogre_Viewport_getActualHeight", , 
    .参数 句柄, 整数型, , 视口句柄

.DLL命令 视口_置维数, 空白型, "Ogre5eDll.dll", "e_ogre_Viewport_setDimensions", , 
    .参数 句柄, 整数型, , 视口句柄
    .参数 左, 小数型, , 
    .参数 顶, 小数型, , 
    .参数 宽, 小数型, , 
    .参数 高, 小数型, , 

.DLL命令 视口_取背景颜色, 整数型, "Ogre5eDll.dll", "e_ogre_Viewport_getBackgroundColour", , 
    .参数 句柄, 整数型, , 视口句柄
    .参数 颜色数组, 小数型, 数组, 
    .参数 数组大小, 整数型, , 

.DLL命令 视口_置每一帧清除, 空白型, "Ogre5eDll.dll", "e_ogre_Viewport_setClearEveryFrame", , 
    .参数 句柄, 整数型, , 视口句柄
    .参数 是否清除, 逻辑型, , 

.DLL命令 视口_取每一帧清除, 逻辑型, "Ogre5eDll.dll", "e_ogre_Viewport_getClearEveryFrame", , 
    .参数 句柄, 整数型, , 视口句柄

.DLL命令 视口_置重叠启用, 空白型, "Ogre5eDll.dll", "e_ogre_Viewport_setOverlaysEnabled", , 
    .参数 句柄, 整数型, , 视口句柄
    .参数 是否启用, 逻辑型, , 

.DLL命令 视口_取重叠启用, 逻辑型, "Ogre5eDll.dll", "e_ogre_Viewport_getOverlaysEnabled", , 
    .参数 句柄, 整数型, , 视口句柄

.DLL命令 窗口_创建, 整数型, "Ogre5eDll.dll", "e_ogre_Win32Window_createInstance", , 
    .参数 句柄, 整数型, , 窗口句柄

.DLL命令 窗口_建立, 空白型, "Ogre5eDll.dll", "e_ogre_Win32Window_create", , 
    .参数 句柄, 整数型, , 窗口句柄
    .参数 名称, 文本型, , 
    .参数 宽, 整数型, , 
    .参数 高, 整数型, , 
    .参数 是否全屏, 逻辑型, , 
    .参数 标题, 文本型, , 
    .参数 颜色深, 整数型, , 
    .参数 左, 整数型, , 
    .参数 顶, 整数型, , 
    .参数 深度缓冲, 逻辑型, , 
    .参数 窗口句柄, 整数型, , 
    .参数 父窗口句柄, 整数型, , 
    .参数 全屏抗锯齿系数, 整数型, , 
    .参数 刷新率, 小数型, , 
    .参数 是否异步, 逻辑型, , 

.DLL命令 窗口_销毁, 空白型, "Ogre5eDll.dll", "e_ogre_Win32Window_destroy", , 
    .参数 句柄, 整数型, , 窗口句柄

.DLL命令 窗口_改大小, 空白型, "Ogre5eDll.dll", "e_ogre_Win32Window_resize", , 
    .参数 句柄, 整数型, , 窗口句柄
    .参数 宽, 整数型, , 
    .参数 高, 整数型, , 

.DLL命令 窗口_改位置, 空白型, "Ogre5eDll.dll", "e_ogre_Win32Window_reposition", , 
    .参数 句柄, 整数型, , 窗口句柄
    .参数 左, 整数型, , 
    .参数 顶, 整数型, , 

.DLL命令 窗口_是否关闭, 逻辑型, "Ogre5eDll.dll", "e_ogre_Win32Window_isClosed", , 
    .参数 句柄, 整数型, , 窗口句柄

.DLL命令 窗口_写内容到文件, 空白型, "Ogre5eDll.dll", "e_ogre_Win32Window_writeContentsToFile", , 
    .参数 句柄, 整数型, , 窗口句柄
    .参数 文件名, 文本型, , 

.DLL命令 窗口_交换缓冲, 逻辑型, "Ogre5eDll.dll", "e_ogre_Win32Window_swapBuffers", , 
    .参数 句柄, 整数型, , 窗口句柄
    .参数 是否异步, 逻辑型, , 

.DLL命令 窗口_纹理剪切, 逻辑型, "Ogre5eDll.dll", "e_ogre_Win32Window_requiresTextureFlipping", , 
    .参数 句柄, 整数型, , 窗口句柄

.DLL命令 渲染窗口9_创建, 空白型, "Ogre5eDll.dll", "e_ogre_D3D9RenderWindow_createRenderWindow", , 创建并显示渲染窗口
    .参数 渲染窗口句柄, 整数型, , 渲染窗口对象句柄
    .参数 窗口名称, 文本型, , 渲染窗口的名称，该名称将用于置渲染目标、取渲染窗口等方法中
    .参数 窗口宽度, 整数型, , 渲染窗口的宽度（以像素为单位）
    .参数 窗口高度, 整数型, , 渲染窗口的高度（以像素为单位）
    .参数 全屏模式, 逻辑型, , 真：全屏模式　　假：窗口模式
    .参数 窗口标题, 文本型, , 
    .参数 颜色深度, 整数型, , 结果渲染窗口的颜色深度，只用于全屏模式，取值可以为16、32
    .参数 左边位置, 整数型, , 窗口的左边位置，对全屏模式无效
    .参数 顶边位置, 整数型, , 窗口的顶边位置，对全屏模式无效
    .参数 深度缓冲标志, 逻辑型, , 真：使用深度缓冲　　假：不使用深度缓冲。缺省值为真
    .参数 外部窗口句柄, 整数型, , 
    .参数 全屏抗锯齿因子, 整数型, , 全屏抗锯齿因子值。缺省值为0
    .参数 刷新率, 小数型, , 
    .参数 同步缓冲交换, 逻辑型, , 

.DLL命令 渲染窗口9_销毁, 空白型, "Ogre5eDll.dll", "e_ogre_D3D9RenderWindow_destroy", , 销毁渲染窗口
    .参数 渲染窗口句柄, 整数型, , 渲染窗口对象句柄

.DLL命令 渲染窗口9_是否关闭, 逻辑型, "Ogre5eDll.dll", "e_ogre_D3D9RenderWindow_isClosed", , 判断渲染窗口是否被用户关闭，关闭返回真、否则返回假。
    .参数 渲染窗口句柄, 整数型, , 渲染窗口对象句柄

.DLL命令 渲染窗口9_更改位置, 空白型, "Ogre5eDll.dll", "e_ogre_D3D9RenderWindow_reposition", , 重新设置窗口位置
    .参数 渲染窗口句柄, 整数型, , 渲染窗口对象句柄
    .参数 左边位置, 整数型, , 窗口的左边位置
    .参数 顶边位置, 整数型, , 窗口的顶边位置

.DLL命令 渲染窗口9_是否需要纹理翻转, 逻辑型, "Ogre5eDll.dll", "e_ogre_D3D9RenderWindow_requiresTextureFlipping", , 判断渲染窗口是否需要纹理翻转，需要返回真、不需要返回假。
    .参数 渲染窗口句柄, 整数型, , 渲染窗口对象句柄

.DLL命令 渲染窗口9_更改大小, 空白型, "Ogre5eDll.dll", "e_ogre_D3D9RenderWindow_resize", , 改变渲染窗口大小
    .参数 渲染窗口句柄, 整数型, , 渲染窗口对象句柄
    .参数 窗口宽度, 整数型, , 渲染窗口的宽度（以像素为单位）
    .参数 窗口高度, 整数型, , 渲染窗口的高度（以像素为单位）

.DLL命令 渲染窗口9_交换缓冲, 空白型, "Ogre5eDll.dll", "e_ogre_D3D9RenderWindow_swapBuffers", , 交换帧缓冲以显示下一帧
    .参数 渲染窗口句柄, 整数型, , 渲染窗口对象句柄
    .参数 翻转标志, 逻辑型, , 真 - 翻转前系统等待下一个垂直空白期　假 - 不论电子束在什么位置都发生翻转

.DLL命令 渲染窗口9_更新, 空白型, "Ogre5eDll.dll", "e_ogre_D3D9RenderWindow_update", , 刷新渲染窗口
    .参数 渲染窗口句柄, 整数型, , 渲染窗口对象句柄

.DLL命令 渲染窗口9_写内容到文件, 空白型, "Ogre5eDll.dll", "e_ogre_D3D9RenderWindow_writeContentsToFile", , 将当前渲染目标内容写入到指定的文件中
    .参数 渲染窗口句柄, 整数型, , 渲染窗口对象句柄
    .参数 文件名, 文本型, , 指定要写入的文件名

.DLL命令 光线场景查询_置光线, 空白型, "Ogre5eDll.dll", "e_ogre_RaySceneQuery_setRay", , 
    .参数 句柄, 整数型, , 光线场景查询句柄
    .参数 光线, 整数型, , 光线句柄

.DLL命令 模型管理器_创建平面模型2, 整数型, "Ogre5eDll.dll", "e_ogre_MeshManager_createPlane__2IFFIIZIFFFFFIIZZ", , 创建一个基本平面模型，返回网格模型对象句柄
    .参数 平面模型名称, 文本型, , 指定结果模型的名称
    .参数 资源组名称, 文本型, , 模型属于的资源组名称
    .参数 平面定义句柄, 整数型, , 所使用的平面定义对象句柄
    .参数 宽度, 小数型, , 平面的宽度（X方向）
    .参数 高度, 小数型, , 平面的高度（Y方向）
    .参数 X方向分割数量, 整数型, , 指定平面X方向的分割数量
    .参数 Y方向分割数量, 整数型, , 指定平面Y方向的分割数量
    .参数 法线, 逻辑型, , 如果为真，创建垂直于平面的法线
    .参数 纹理坐标集的数量, 整数型, , 纹理坐标集的数量，也就是多层纹理的层数
    .参数 U方向纹理重复次数, 小数型, , 
    .参数 V方向纹理重复次数, 小数型, , 
    .参数 上方向X坐标, 小数型, , 平面的上方向法线
    .参数 上方向Y坐标, 小数型, , 
    .参数 上方向Z坐标, 小数型, , 
    .参数 顶点缓冲用途, 整数型, , 指定顶点缓冲的用途。可为以下值之一：1.静态；2.动态；4.只写；5.静态只写；6.动态只写；8.可抛弃；14.动态只写可抛弃。
    .参数 索引缓冲用途, 整数型, , 指定索引缓冲的用途。可为以下值之一：1.静态；2.动态；4.只写；5.静态只写；6.动态只写；8.可抛弃；14.动态只写可抛弃。
    .参数 顶点缓冲映射标志, 逻辑型, , 如果为真，会将顶点缓冲映射到系统内存以加快读取速度
    .参数 索引缓冲映射标志, 逻辑型, , 如果为真，会将索引缓冲映射到系统内存以加快读取速度

.DLL命令 粒子系统管理_取单件, 整数型, "Ogre5eDll.dll", "e_ogre_ParticleSystemManager_getSingleton", , 返回粒子系统管理句柄

.DLL命令 粒子系统管理_创建粒子系统, 整数型, "Ogre5eDll.dll", "e_ogre_ParticleSystemManager_createSystem", , 返回粒子系统句柄
    .参数 句柄, 整数型, , 粒子系统管理句柄
    .参数 名称, 文本型, , 粒子系统的称
    .参数 最大值, 整数型, , 最大粒子数
    .参数 资源组名称, 文本型, , 

.DLL命令 粒子系统管理_模板创建粒子系统, 整数型, "Ogre5eDll.dll", "e_ogre_ParticleSystemManager_createSystem_template", , 返回粒子系统句柄
    .参数 句柄, 整数型, , 粒子系统管理句柄
    .参数 名称, 文本型, , 粒子系统的名称
    .参数 模板名, 文本型, , 模板名

.DLL命令 场景管理_置天空穹, 空白型, "Ogre5eDll.dll", "e_ogre_SceneManager_setSkyDome", , 设置天空穹。天空穹，像一个罩在大地上的罩子，“天似穹庐”，看上去它是个切去了底部的球体，实际上它是由一个切去了底部的立方体盒子来模拟
    .参数 句柄, 整数型, , 场景管理对象句柄
    .参数 是否启用, 逻辑型, , 真为启用天空穹、假为关闭天空穹
    .参数 材质名称, 文本型, , 天空穹使用的材质名称
    .参数 曲率, 小数型, , 天空穹的曲率。取值最好为2 - 65，缺省值为10
    .参数 铺嵌, 小数型, , 天空材质的铺嵌回数，缺省值为8
    .参数 距离, 小数型, , 与中央镜头的距离，缺省值为4000
    .参数 是否首先绘制, 逻辑型, , 确保天空在其它一切物体之外，缺省值为真

.DLL命令 粒子系统_快进, 空白型, "Ogre5eDll.dll", "e_ogre_ParticleSystem_fastForward", , 
    .参数 句柄, 整数型, , 粒子系统句柄
    .参数 时间, 小数型, , 
    .参数 间隔, 小数型, , 

.DLL命令 摄像机_置自动跟踪, 空白型, "Ogre5eDll.dll", "e_ogre_Camera_setAutoTracking", , 启用/关闭自动跟踪节点
    .参数 句柄, 整数型, , 摄像机对象句柄
    .参数 是否启用, 逻辑型, , 真：启用自动跟踪；假：关闭自动跟踪
    .参数 节点句柄, 整数型, , 要自动跟踪的节点句柄
    .参数 目标点X坐标, 小数型, , 
    .参数 目标点Y坐标, 小数型, , 
    .参数 目标点Z坐标, 小数型, , 

.DLL命令 场景管理_置烟雾模式, 空白型, "Ogre5eDll.dll", "e_ogre_SceneManager_setFog", , 设置场景的烟雾模式
    .参数 句柄, 整数型, , 场景管理对象的句柄
    .参数 烟雾模式, 整数型, , 要设置的烟雾模式。为以下值之一：0、无烟雾；1、公式模式；2、公式模式2；3、线性模式。
    .参数 烟雾颜色红色值, 小数型, , 烟雾颜色值
    .参数 烟雾颜色绿色值, 小数型, , 
    .参数 烟雾颜色蓝色值, 小数型, , 
    .参数 烟雾颜色透明值, 小数型, , 
    .参数 烟雾浓度, 小数型, , 
    .参数 线性开始, 小数型, , 只有当烟雾模式为线性时有效
    .参数 线性结束, 小数型, , 

.DLL命令 场景管理_置世界几何体, 空白型, "Ogre5eDll.dll", "e_ogre_SceneManager_setWorldGeometry", , 设备世界几何体
    .参数 句柄, 整数型, , 场景管理对象句柄
    .参数 文件名, 文本型, , 

.DLL命令 摄像机_置原点, 空白型, "Ogre5eDll.dll", "e_ogre_Camera_setOrientation", , 
    .参数 句柄, 整数型, , 摄像机句柄
    .参数 原点W, 小数型, , 
    .参数 原点X, 小数型, , 
    .参数 原点Y, 小数型, , 
    .参数 原点Z, 小数型, , 

.DLL命令 光线_点创建, 整数型, "Ogre5eDll.dll", "e_ogre_Ray_createInstance_VV", , 带参数创建光线对象，返回光线对象句柄
    .参数 原点X坐标, 小数型, , 
    .参数 原点Y坐标, 小数型, , 
    .参数 原点Z坐标, 小数型, , 
    .参数 方向X坐标, 小数型, , 
    .参数 方向Y坐标, 小数型, , 
    .参数 方向Z坐标, 小数型, , 

.DLL命令 渲染目标_取视口, 整数型, "Ogre5eDll.dll", "e_ogre_RenderTarget_getViewport", , 取指定序号的视口，返回视口句柄
    .参数 句柄, 整数型, , 渲染目标句柄
    .参数 序号, 整数型, , 要取得视口的序号

.DLL命令 场景管理_设置阴影, 空白型, "Ogre5eDll.dll", "e_ogre_SceneManager_setShadowTechnique", , 设置阴影
    .参数 句柄, 整数型, , 场景管理句柄
    .参数 阴影种类, 整数型, , 0:无阴影、1:模板调节、2:模板附加、3:纹理调节

.DLL命令 光线_置方向, 空白型, "Ogre5eDll.dll", "e_ogre_Ray_setDirection", , 设置光线的方向
    .参数 句柄, 整数型, , 光线对象句柄
    .参数 方向X, 小数型, , 光线方向
    .参数 方向Y, 小数型, , 
    .参数 方向Z, 小数型, , 

.DLL命令 光线_置原点, 空白型, "Ogre5eDll.dll", "e_ogre_Ray_setOrigin", , 设置光线的原点
    .参数 句柄, 整数型, , 光线对象句柄
    .参数 原点X, 小数型, , 光线原点
    .参数 原点Y, 小数型, , 
    .参数 原点Z, 小数型, , 

.DLL命令 场景节点_置自动跟踪, 空白型, "Ogre5eDll.dll", "e_ogre_SceneNode_setAutoTracking", , 置自动跟踪
    .参数 句柄, 整数型, , 场景节点句柄
    .参数 是否启用, 逻辑型, , 
    .参数 场景节点句柄, 整数型, , 
    .参数 方向X, 小数型, , 
    .参数 方向Y, 小数型, , 
    .参数 方向Z, 小数型, , 
    .参数 偏移X, 小数型, , 
    .参数 偏移Y, 小数型, , 
    .参数 偏移Z, 小数型, , 

.DLL命令 模型_取正切参数, 逻辑型, "Ogre5eDll.dll", "e_ogre_Mesh_suggestTangentVectorBuildParams", , 
    .参数 句柄, 整数型, , 模型句柄
    .参数 源, 短整数型, 传址, 
    .参数 目标, 短整数型, 传址, 

.DLL命令 模型_建立正切向量, 空白型, "Ogre5eDll.dll", "e_ogre_Mesh_buildTangentVectors", , 
    .参数 句柄, 整数型, , 
    .参数 源, 短整数型, , 
    .参数 目标, 短整数型, , 

.DLL命令 场景管理_设置天空, 空白型, "Ogre5eDll.dll", "e_ogre_SceneManager_setSkyBox", , 
    .参数 句柄, 整数型, , 
    .参数 是否启用, 逻辑型, , 
    .参数 材质名, 文本型, , 
    .参数 距离, 小数型, , 
    .参数 是否第一次画, 逻辑型, , 
    .参数 四元素_w, 小数型, , 
    .参数 四元素_x, 小数型, , 
    .参数 四元素_y, 小数型, , 
    .参数 四元素_z, 小数型, , 
    .参数 组名, 文本型, , 

.DLL命令 场景管理_设置阴影颜色, 空白型, "Ogre5eDll.dll", "e_ogre_SceneManager_setShadowColour", , 
    .参数 句柄, 整数型, , 
    .参数 红色, 小数型, , 
    .参数 绿色, 小数型, , 
    .参数 篮色, 小数型, , 
    .参数 透明, 小数型, , 

.DLL命令 光线场景查询_取相交点, 整数型, "Ogre5eDll.dll", "e_ogre_RaySceneQuery_getSingleIntersection", , 取相交点信息，成功返回0，>0为数组个数不够
    .参数 句柄, 整数型, , 
    .参数 相交点, 小数型, 传址 数组, 
    .参数 数组个数, 整数型, , 

.类模块 动画, 基句柄类, , 一个动画序列对象

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 取名称, 文本型, 公开, 取当前动画的名称，成功返回动画名称，失败返回空文本
.局部变量 临名称, 文本型, , , 
.局部变量 返回值, 整数型, , , 

赋值 (临名称, 取空白文本 (256))

 ' 判断对象是否有效
.如果真 (等于 (取句柄 (), 0))
    返回 (“”)
.如果真结束

赋值 (返回值, 动画_取名称 (取句柄 (), 临名称, 256))

.如果真 (不等于 (返回值, 0))
    .如果 (等于 (返回值, -1)) ' 取名称失败，返回空文本
        返回 (“”)
    .否则
         ' 缓冲区不足，重新分配缓冲区再次取名称
        赋值 (临名称, 取空白文本 (返回值))
        赋值 (返回值, 动画_取名称 (取句柄 (), 临名称, 返回值))
        
        .如果真 (等于 (返回值, -1))
            返回 (“”)
        .如果真结束
        
    .如果结束
    
.如果真结束

 ' 取名称成功，返回名称
返回 (临名称)


.子程序 取总长度, 小数型, 公开, 取当前动画的总长度，成功返回长度、失败返回-1
.如果真 (等于 (取句柄 (), 0))
    返回 (-1)
.如果真结束

返回 (动画_取总长度 (取句柄 ()))


.子程序 创建轨迹, 整数型, 公开, 为动画创建一个动画轨迹,成功动画轨迹句柄、失败返回0
.参数 轨迹索引句柄, 短整数型, , 分配给轨迹动画的索引句柄，用于以后可能的调用，是这个动画轨迹的唯一标识

.如果真 (等于 (取句柄 (), 0))
    返回 (0)
.如果真结束

返回 (动画_创建轨迹 (取句柄 (), 轨迹索引句柄))


.子程序 创建节点关联轨迹, 整数型, 公开, 为动画创建一个自动与节点关联的动画轨迹,成功动画轨迹句柄、失败返回0
.参数 轨迹索引句柄, 短整数型, , 分配给轨迹动画的索引句柄，用于以后可能的调用，是这个动画轨迹的唯一标识
.参数 节点句柄, 整数型, , 指定应用这个动画轨迹的节点

.如果真 (或者 (等于 (取句柄 (), 0), 等于 (节点句柄, 0)))
    返回 (0)
.如果真结束

返回 (动画_创建节点关联轨迹 (取句柄 (), 轨迹索引句柄, 节点句柄))


.子程序 取轨迹数量, 整数型, 公开, 取构成动画的轨迹数量。成功返回轨迹数量、失败返回-1
.如果真 (等于 (取句柄 (), 0))
    返回 (-1)
.如果真结束

返回 (动画_取轨迹数量 (取句柄 ()))


.子程序 取动画轨迹, 整数型, 公开, 取指定的动画轨迹。成功返回动画轨迹句柄、失败返回0
.参数 轨迹索引句柄, 短整数型, , 要取得的轨迹的索引句柄

.如果真 (等于 (取句柄 (), 0))
    返回 (0)
.如果真结束

返回 (动画_取动画轨迹 (取句柄 (), 轨迹索引句柄))


.子程序 销毁轨迹, 空白型, 公开, 销毁指定的轨迹
.参数 轨迹索引句柄, 短整数型, , 要取得的轨迹的索引句柄

.如果真 (等于 (取句柄 (), 0))
    返回 ()
.如果真结束

动画_销毁轨迹 (取句柄 (), 轨迹索引句柄)


.子程序 销毁所有轨迹, 空白型, 公开, 移除并销毁构成动画的所有轨迹
.如果真 (等于 (取句柄 (), 0))
    返回 ()
.如果真结束

动画_销毁所有轨迹 (取句柄 ())


.子程序 置当前插值方式, 空白型, 公开, 设置动画的当前插值方式，告诉动画怎样在关键帧之间插值
.参数 插值方式, 整数型, , 要设置的动画插值方式。0 - 线性插值；1 - 样条插值

.如果真 (等于 (取句柄 (), 0))
    返回 ()
.如果真结束

动画_置当前插值方式 (取句柄 (), 插值方式)


.子程序 取当前插值方式, 整数型, 公开, 取动画的当前插值方式。0 - 线性插值；1 - 样条插值。失败返回-1
.如果真 (等于 (取句柄 (), 0))
    返回 (-1)
.如果真结束

返回 (动画_取当前插值方式 (取句柄 ()))


.子程序 置缺省插值方式, 空白型, 公开, 设置动画的缺省插值方式
.参数 插值方式, 整数型, , 要设置的动画插值方式。0 - 线性插值；1 - 样条插值

.如果真 (等于 (取句柄 (), 0))
    返回 ()
.如果真结束

动画_置缺省插值方式 (取句柄 (), 插值方式)


.子程序 取缺省插值方式, 整数型, 公开, 取所有动画的缺省插值。0 - 线性插值；1 - 样条插值。失败返回-1
.如果真 (等于 (取句柄 (), 0))
    返回 (-1)
.如果真结束

返回 (动画_取缺省插值方式 (取句柄 ()))


.类模块 动画状态, 基句柄类, , 表示一个动画的状态和权重（影响）

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 创建, 空白型, 公开, 创建一个动画状态对象
.参数 动画名称, 文本型, , 
.参数 时间位置, 小数型, , 
.参数 动画长度, 小数型, , 
.参数 权重, 小数型, 可空, 缺省值为1.0
.参数 启动状态, 逻辑型, 可空, 缺省值假

.如果真 (不等于 (取句柄 (), 0))
    动画状态_销毁 (取句柄 ())
.如果真结束

置句柄 (动画状态_创建1 (动画名称, 时间位置, 动画长度, 权重, 启动状态))


.子程序 取名称, 文本型, 公开, 取得当前动画序列的名称。成功返回动画序列名称，失败返回空文本
.局部变量 临名称, 文本型, , , 
.局部变量 返回值, 整数型, , , 

赋值 (临名称, 取空白文本 (256))

 ' 判断对象是否有效
.如果真 (等于 (取句柄 (), 0))
    返回 (“”)
.如果真结束

赋值 (返回值, 动画状态_取名称 (取句柄 (), 临名称, 256))

.如果真 (不等于 (返回值, 0))
    .如果 (等于 (返回值, -1)) ' 取名称失败，返回空文本
        返回 (“”)
    .否则
         ' 缓冲区不足，重新分配缓冲区再次取名称
        赋值 (临名称, 取空白文本 (返回值))
        赋值 (返回值, 动画状态_取名称 (取句柄 (), 临名称, 返回值))
        
        .如果真 (等于 (返回值, -1))
            返回 (“”)
        .如果真结束
        
    .如果结束
    
.如果真结束

 ' 取名称成功，返回名称
返回 (临名称)

.子程序 置名称, 空白型, 公开, 设置当前动画序列名称
.参数 动画名称, 文本型, , 要设置的动画序列的名称

.如果真 (等于 (取句柄 (), 0))
    返回 ()
.如果真结束

动画状态_置名称 (取句柄 (), 动画名称)


.子程序 取时间位置, 小数型, 公开, 取当前动画序列的时间位置。成功返回时间位置、失败返回-1
.如果真 (等于 (取句柄 (), 0))
    返回 (-1)
.如果真结束

返回 (动画状态_取时间位置 (取句柄 ()))


.子程序 置时间位置, 空白型, 公开, 设置当前动画序列的时间位置
.参数 时间位置, 小数型, , 要设置的动画序列的时间位置

.如果真 (等于 (取句柄 (), 0))
    返回 ()
.如果真结束

动画状态_置时间位置 (取句柄 (), 时间位置)


.子程序 取总长度, 小数型, 公开, 取当前动画序列的长度（可能会短于整个动画的总长度）。成功返回长度、失败返回-1
.如果真 (等于 (取句柄 (), 0))
    返回 (-1)
.如果真结束

返回 (动画状态_取总长度 (取句柄 ()))


.子程序 置总长度, 空白型, 公开, 设置当前动画序列的总长度
.参数 长度, 小数型, , 要设置动画序列长度

.如果真 (等于 (取句柄 (), 0))
    返回 ()
.如果真结束

动画状态_置总长度 (取句柄 (), 长度)


.子程序 取权重, 小数型, 公开, 取当前动画序列的权重（影响）。成功返回权重、失败返回-1
.如果真 (等于 (取句柄 (), 0))
    返回 (-1)
.如果真结束

返回 (动画状态_取权重 (取句柄 ()))


.子程序 置权重, 空白型, 公开, 设置当前动画序列的权重（影响）
.参数 权重, 小数型, , 要设置的动画序列的权重（影响）

.如果真 (等于 (取句柄 (), 0))
    返回 ()
.如果真结束

动画状态_置权重 (取句柄 (), 权重)


.子程序 修改时间位置, 空白型, 公开, 在当前动画序列范围内修改时间位置
.参数 移动量, 小数型, , 指定要修改的时间位置与当前时间位置的偏移量

.如果真 (等于 (取句柄 (), 0))
    返回 ()
.如果真结束

动画状态_修改时间位置 (取句柄 (), 移动量)


.子程序 取启动状态, 逻辑型, 公开, 如果当前动画序列处于启用状态则返回真，否则返回假
.如果真 (等于 (取句柄 (), 0))
    返回 (假)
.如果真结束

返回 (动画状态_取启动状态 (取句柄 ()))


.子程序 置启动状态, 空白型, 公开, 设置当前动画启动状态
.参数 启动状态, 逻辑型, , 要设置动画启动状态。真为启动

.如果真 (等于 (取句柄 (), 0))
    返回 ()
.如果真结束

动画状态_置启动状态 (取句柄 (), 启动状态)


.子程序 取循环状态, 逻辑型, 公开, 如果当前动画序列处于循环状态则返回真，处于非循环状态返回假
.如果真 (等于 (取句柄 (), 0))
    返回 (假)
.如果真结束

返回 (动画状态_取循环状态 (取句柄 ()))


.子程序 置循环状态, 空白型, 公开, 设置当前动画的循环状态
.参数 循环状态, 逻辑型, , 要设置动画循环状态。真为循环、假为非循环

.如果真 (等于 (取句柄 (), 0))
    返回 ()
.如果真结束

动画状态_置循环状态 (取句柄 (), 循环状态)


.类模块 动画轨迹, 基句柄类, , 一个动画序列的轨迹

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 创建关键帧, 整数型, 公开, 为轨迹动画创建一系列关键帧。成功返回创建的关键帧对象句柄、失败返回0
.参数 时间位置, 小数型, , 

.如果真 (等于 (取句柄 (), 0))
    返回 (0)
.如果真结束

返回 (动画轨迹_创建关键帧 (取句柄 (), 时间位置))


.子程序 取关联节点, 整数型, 公开, 取与动画轨迹相关联的节点。成功返回节点对象句柄、失败返回0
.如果真 (等于 (取句柄 (), 0))
    返回 (0)
.如果真结束

返回 (动画轨迹_取关联节点 (取句柄 ()))


.类模块 包围盒, 基句柄类, , 

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 创建, 空白型, 公开, 创建沿坐标轴方向的包围盒（AABB）。
.参数 最小点, 自定义_三维向量, , 
.参数 最大点, 自定义_三维向量, , 

置句柄 (包围盒_创建 (最小点.X, 最小点.Y, 最小点.Z, 最大点.X, 最大点.Y, 最大点.Z))


.子程序 创建带参数, 空白型, 公开, 创建沿坐标轴方向的包围盒（AABB）。
.参数 最小点X, 小数型, , 
.参数 最小点Y, 小数型, , 
.参数 最小点Z, 小数型, , 
.参数 最大点X, 小数型, , 
.参数 最大点Y, 小数型, , 
.参数 最大点Z, 小数型, , 

置句柄 (包围盒_创建 (最小点X, 最小点Y, 最小点Z, 最大点X, 最大点Y, 最大点Z))


.子程序 取最小角, 自定义_三维向量, 公开, 取得包围盒的最小角
.局部变量 返回向量, 自定义_三维向量, , , 
.局部变量 变最小角, 小数型, , "10", 

赋值 (返回向量.X, 0)
赋值 (返回向量.Y, 0)
赋值 (返回向量.Z, 0)

.如果真 (等于 (取句柄 (), 0))
    返回 (返回向量)
.如果真结束

包围盒_取最小角 (取句柄 (), 变最小角, 取数组成员数 (变最小角))
赋值 (返回向量.X, 变最小角 [1])
赋值 (返回向量.Y, 变最小角 [2])
赋值 (返回向量.Z, 变最小角 [3])

返回 (返回向量)

.子程序 取最大角, 自定义_三维向量, 公开, 取得包围盒的最大角
.局部变量 返回向量, 自定义_三维向量, , , 
.局部变量 变最大角, 小数型, , "10", 

赋值 (返回向量.X, 0)
赋值 (返回向量.Y, 0)
赋值 (返回向量.Z, 0)

.如果真 (等于 (取句柄 (), 0))
    返回 (返回向量)
.如果真结束

包围盒_取最大角 (取句柄 (), 变最大角, 取数组成员数 (变最大角))
赋值 (返回向量.X, 变最大角 [1])
赋值 (返回向量.Y, 变最大角 [2])
赋值 (返回向量.Z, 变最大角 [3])

返回 (返回向量)

.子程序 判断相交, 逻辑型, 公开, 判断当前包围盒与其它包围盒是否相交。相交返回真、不相交返回假
.参数 判断相交的包围盒句柄, 整数型, , 判断与当前包围盒是否相交的包围盒句柄

.如果真 (或者 (等于 (取句柄 (), 0), 等于 (判断相交的包围盒句柄, 0)))
    返回 (假)
.如果真结束

返回 (包围盒_判断相交 (取句柄 (), 判断相交的包围盒句柄))


.子程序 计算相交区域, 整数型, 公开, 计算当前包围盒与其它包围盒的相交区域。成功返回相交区域包围盒对象句柄、失败返回0
.参数 计算相交的包围盒句柄, 整数型, , 计算与当前包围盒相交区域的包围盒句柄

.如果真 (或者 (等于 (取句柄 (), 0), 等于 (计算相交的包围盒句柄, 0)))
    返回 (0)
.如果真结束

返回 (包围盒_计算相交区域 (取句柄 (), 计算相交的包围盒句柄))


.子程序 取中心点, 自定义_三维向量, 公开, 取得包围盒的中心点坐标
.局部变量 返回向量, 自定义_三维向量, , , 
.局部变量 变中心点, 小数型, , "10", 

赋值 (返回向量.X, 0)
赋值 (返回向量.Y, 0)
赋值 (返回向量.Z, 0)

.如果真 (等于 (取句柄 (), 0))
    返回 (返回向量)
.如果真结束

包围盒_取中心点 (取句柄 (), 变中心点, 取数组成员数 (变中心点))
赋值 (返回向量.X, 变中心点 [1])
赋值 (返回向量.Y, 变中心点 [2])
赋值 (返回向量.Z, 变中心点 [3])

返回 (返回向量)

.类模块 公告板, 可动物体, , 

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用



.子程序 创建, 空白型, 公开, 创建公告板对象
置句柄 (公告板_创建 ())


.子程序 创建带参数, 空白型, 公开, 带参数创建公告板对象
.参数 位置向量, 自定义_三维向量, , 公告板位置坐标向量
.参数 公告板集合句柄, 整数型, , 公告板的所属公告板集合对象句柄
.参数 颜色值, 自定义_颜色值, , 公告板的颜色

置句柄 (公告板_创建带参数 (位置向量.X, 位置向量.Y, 位置向量.Z, 公告板集合句柄, 颜色值.红色值, 颜色值.绿色值, 颜色值.蓝色值, 颜色值.透明值))


.子程序 取旋转弧度, 小数型, 公开, 取公告板的旋转弧度值（相对于公告板中心旋转）。成功返回旋转弧度、失败返回-1
.如果真 (等于 (取句柄 (), 0))
    返回 (-1)
.如果真结束

返回 (公告板_取旋转弧度 (取句柄 ()))


.子程序 置旋转弧度, 空白型, 公开, 设置公告板的旋转弧度
.参数 旋转弧度, 小数型, , 要设置的公告板的旋转弧度

.如果真 (等于 (取句柄 (), 0))
    返回 ()
.如果真结束

公告板_置旋转弧度 (取句柄 (), 旋转弧度)


.子程序 置位置, 空白型, 公开, 设置公告板位置
.参数 位置向量, 自定义_三维向量, , 

.如果真 (等于 (取句柄 (), 0))
    返回 ()
.如果真结束

公告板_置位置 (取句柄 (), 位置向量.X, 位置向量.Y, 位置向量.Z)


.子程序 取位置, 自定义_三维向量, 公开, 取公告板位置
.局部变量 返回向量, 自定义_三维向量, , , 
.局部变量 位置坐标, 小数型, , "10", 

赋值 (返回向量.X, 0)
赋值 (返回向量.Y, 0)
赋值 (返回向量.Z, 0)

.如果真 (等于 (取句柄 (), 0))
    返回 (返回向量)
.如果真结束

公告板_取位置 (取句柄 (), 位置坐标, 取数组成员数 (位置坐标))
赋值 (返回向量.X, 位置坐标 [1])
赋值 (返回向量.Y, 位置坐标 [2])
赋值 (返回向量.Z, 位置坐标 [3])

返回 (返回向量)


.子程序 取方向, 自定义_三维向量, 公开, 取公告板方向
.局部变量 返回向量, 自定义_三维向量, , , 
.局部变量 方向, 小数型, , "10", 

赋值 (返回向量.X, 0)
赋值 (返回向量.Y, 0)
赋值 (返回向量.Z, 0)

.如果真 (等于 (取句柄 (), 0))
    返回 (返回向量)
.如果真结束

公告板_取方向 (取句柄 (), 方向, 取数组成员数 (方向))
赋值 (返回向量.X, 方向 [1])
赋值 (返回向量.Y, 方向 [2])
赋值 (返回向量.Z, 方向 [3])

返回 (返回向量)

.子程序 置方向, 空白型, 公开, 设置公告板方向
.参数 方向, 自定义_三维向量, , 

.如果真 (等于 (取句柄 (), 0))
    返回 ()
.如果真结束

公告板_置方向 (取句柄 (), 方向.X, 方向.Y, 方向.Z)


.子程序 取父集合, 整数型, 公开, 取公告板的父公告板集合对象句柄。成功返回集合句柄、失败返回0
.如果真 (等于 (取句柄 (), 0))
    返回 (0)
.如果真结束

返回 (公告板_取父集合 (取句柄 ()))


.子程序 置尺寸, 空白型, 公开, 设置公告板尺寸
.参数 宽度, 小数型, , 要设置的公告板的宽度
.参数 高度, 小数型, , 要设置的公告板的高度

.如果真 (等于 (取句柄 (), 0))
    返回 ()
.如果真结束

公告板_置尺寸 (取句柄 (), 宽度, 高度)


.子程序 重置尺寸, 空白型, 公开, 用父公告板集合的尺寸替换自身的尺寸
.如果真 (等于 (取句柄 (), 0))
    返回 ()
.如果真结束

公告板_重置尺寸 (取句柄 ())


.子程序 置颜色, 空白型, 公开, 设置公告板颜色
.参数 颜色, 自定义_颜色值, , 公告板的颜色

.如果真 (等于 (取句柄 (), 0))
    返回 ()
.如果真结束

公告板_置颜色 (取句柄 (), 颜色.红色值, 颜色.绿色值, 颜色.蓝色值, 颜色.透明值)


.子程序 取颜色, 自定义_颜色值, 公开, 取公告板颜色数据
.局部变量 返回颜色, 自定义_颜色值, , , 
.局部变量 颜色, 小数型, , "10", 

赋值 (返回颜色.红色值, 0)
赋值 (返回颜色.绿色值, 0)
赋值 (返回颜色.蓝色值, 0)
赋值 (返回颜色.透明值, 0)

.如果真 (等于 (取句柄 (), 0))
    返回 (返回颜色)
.如果真结束

公告板_取颜色 (取句柄 (), 颜色, 取数组成员数 (颜色))
赋值 (返回颜色.红色值, 颜色 [1])
赋值 (返回颜色.绿色值, 颜色 [2])
赋值 (返回颜色.蓝色值, 颜色 [3])
赋值 (返回颜色.透明值, 颜色 [4])

返回 (返回颜色)

.子程序 是否有自己尺寸, 逻辑型, 公开, 如果公告板尺寸与公告板集合的缺省尺寸不相同，返回真，否则返回假
.如果真 (等于 (取句柄 (), 0))
    返回 (假)
.如果真结束

返回 (公告板_是否有自己尺寸 (取句柄 ()))


.子程序 取宽度, 小数型, 公开, 取公告板自身宽度。成功返回宽度、失败返回-1
.如果真 (等于 (取句柄 (), 0))
    返回 (-1)
.如果真结束

返回 (公告板_取宽度 (取句柄 ()))


.子程序 取高度, 小数型, 公开, 取公告板自身高度。成功返回高度、失败返回-1
.如果真 (等于 (取句柄 (), 0))
    返回 (-1)
.如果真结束

返回 (公告板_取高度 (取句柄 ()))

.子程序 通知所有者, 空白型, 公开, 通知公告板所有者的内部方法
.参数 公告板集合句柄, 整数型, , 公告板集合对象句柄

.如果真 (或者 (等于 (取句柄 (), 0), 等于 (公告板集合句柄, 0)))
    返回 ()
.如果真结束

公告板_通知所有者 (取句柄 (), 公告板集合句柄)


.类模块 公告板集合, 可动物体, , 

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 置材质名称, 空白型, 公开, 设置用于公告板集合的材质名称
.参数 材质名称, 文本型, , 用于公告板集合的材质名称

.如果真 (等于 (取句柄 (), 0))
    返回 ()
.如果真结束

公告板集合_置材质名称 (取句柄 (), 材质名称)


.子程序 创建公告板, 整数型, 公开, 创建一个新的公告板并将它加入到集合中。成功返回创建的公告板对象句柄、失败返回0
.参数 位置X坐标, 小数型, , 新建公告板的位置坐标
.参数 位置Y坐标, 小数型, , 
.参数 位置Z坐标, 小数型, , 

.如果真 (等于 (取句柄 (), 0))
    返回 (0)
.如果真结束

返回 (公告板集合_创建公告板 (取句柄 (), 位置X坐标, 位置Y坐标, 位置Z坐标))


.子程序 置缺省宽度, 空白型, 公开, 设置公告板集合的缺省宽度
.参数 宽度, 小数型, , 公告板集合的缺省宽度

.如果真 (等于 (取句柄 (), 0))
    返回 ()
.如果真结束

公告板集合_置缺省宽度 (取句柄 (), 宽度)


.子程序 置缺省高度, 空白型, 公开, 设置公告板集合的缺省高度
.参数 高度, 小数型, , 公告板集合的缺省高度

.如果真 (等于 (取句柄 (), 0))
    返回 ()
.如果真结束

公告板集合_置缺省高度 (取句柄 (), 高度)


.子程序 取集合名称, 文本型, 公开, 取公告板集合的名称。成功返回公告板集合名称，失败返回空文本
.局部变量 临名称, 文本型, , , 
.局部变量 返回值, 整数型, , , 

赋值 (临名称, 取空白文本 (256))

 ' 判断对象是否有效
.如果真 (等于 (取句柄 (), 0))
    返回 (“”)
.如果真结束

赋值 (返回值, 公告板集合_取名称 (取句柄 (), 临名称, 256))

.如果真 (不等于 (返回值, 0))
    .如果 (等于 (返回值, -1)) ' 取名称失败，返回空文本
        返回 (“”)
    .否则
         ' 缓冲区不足，重新分配缓冲区再次取名称
        赋值 (临名称, 取空白文本 (返回值))
        赋值 (返回值, 公告板集合_取名称 (取句柄 (), 临名称, 返回值))
        
        .如果真 (等于 (返回值, -1))
            返回 (“”)
        .如果真结束
        
    .如果结束
    
.如果真结束

 ' 取名称成功，返回名称
返回 (临名称)

.类模块 骨头, 基句柄类, , 

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 取手工操作标志, 逻辑型, 公开, 返回真为手工操作
.如果真 (等于 (取句柄 (), 0))
    返回 (假)
.如果真结束

返回 (骨头_取手工操作标志 (取句柄 ()))


.子程序 置手工操作标志, 空白型, 公开, 设置手工操作标志
.参数 手工操作标志, 逻辑型, , 是否对骨头进行手工操作，真为手工操作

.如果真 (等于 (取句柄 (), 0))
    返回 ()
.如果真结束

骨头_置手工操作标志 (取句柄 (), 手工操作标志)


.类模块 摄像机, 可动物体, , 

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 置位置, 空白型, 公开, 设置摄像机的位置向量
.参数 位置X坐标, 小数型, , 要设置的摄像机的位置向量
.参数 位置Y坐标, 小数型, , 
.参数 位置Z坐标, 小数型, , 

.如果真 (等于 (取句柄 (), 0))
    返回 ()
.如果真结束

摄像机_置位置 (取句柄 (), 位置X坐标, 位置Y坐标, 位置Z坐标)


.子程序 取位置, 自定义_三维向量, 公开, 取摄像机位置
.局部变量 返回向量, 自定义_三维向量, , , 
.局部变量 位置坐标, 小数型, , "10", 

赋值 (返回向量.X, 0)
赋值 (返回向量.Y, 0)
赋值 (返回向量.Z, 0)

.如果真 (等于 (取句柄 (), 0))
    返回 (返回向量)
.如果真结束

摄像机_取位置 (取句柄 (), 位置坐标, 取数组成员数 (位置坐标))
赋值 (返回向量.X, 位置坐标 [1])
赋值 (返回向量.Y, 位置坐标 [2])
赋值 (返回向量.Z, 位置坐标 [3])

返回 (返回向量)

.子程序 世界空间位置, 空白型, 公开, 自动计算摄像机的方向向量，在当前位置和所看的点
.参数 点X坐标, 小数型, , 摄像机所看的点坐标
.参数 点Y坐标, 小数型, , 
.参数 点Z坐标, 小数型, , 

.如果真 (等于 (取句柄 (), 0))
    返回 ()
.如果真结束

摄像机_世界空间位置 (取句柄 (), 点X坐标, 点Y坐标, 点Z坐标)


.子程序 置渲染细节级别, 空白型, 公开, 设置摄像机的置渲染细节级别
.参数 渲染细节级别, 整数型, , 要设置的摄像机渲染细节级别

.如果真 (等于 (取句柄 (), 0))
    返回 ()
.如果真结束

摄像机_置渲染细节级别 (取句柄 (), 渲染细节级别)


.子程序 取渲染细节级别, 整数型, 公开, 取摄像机的渲染细节级别。成功返回渲染细节级别、失败返回-1
.如果真 (等于 (取句柄 (), 0))
    返回 (-1)
.如果真结束

返回 (摄像机_取渲染细节级别 (取句柄 ()))


.子程序 取方向, 自定义_三维向量, 公开, 取摄像机的方向
.局部变量 返回向量, 自定义_三维向量, , , 
.局部变量 方向向量, 小数型, , "10", 

赋值 (返回向量.X, 0)
赋值 (返回向量.Y, 0)
赋值 (返回向量.Z, 0)

.如果真 (等于 (取句柄 (), 0))
    返回 (返回向量)
.如果真结束

摄像机_取方向 (取句柄 (), 方向向量, 取数组成员数 (方向向量))
赋值 (返回向量.X, 方向向量 [1])
赋值 (返回向量.Y, 方向向量 [2])
赋值 (返回向量.Z, 方向向量 [3])

返回 (返回向量)


.子程序 置方向, 空白型, 公开, 设置摄像机的方向向量
.参数 方向X坐标, 小数型, , 要设置的摄像机的方向向量
.参数 方向Y坐标, 小数型, , 
.参数 方向Z坐标, 小数型, , 

.如果真 (等于 (取句柄 (), 0))
    返回 ()
.如果真结束

摄像机_置方向 (取句柄 (), 方向X坐标, 方向Y坐标, 方向Z坐标)

.子程序 取到远裁剪面距离, 小数型, 公开, 取平截体到远裁剪面的距离。成功返回距离、失败返回-1
.如果真 (等于 (取句柄 (), 0))
    返回 (-1)
.如果真结束

返回 (摄像机_取到远裁剪面距离 (取句柄 ()))


.子程序 置到远裁剪面的距离, 空白型, 公开, 置到远裁剪面的距离
.参数 距离, 小数型, , 要设置的到远裁剪面的距离

.如果真 (等于 (取句柄 (), 0))
    返回 ()
.如果真结束

摄像机_置到远裁剪面的距离 (取句柄 (), 距离)


.子程序 取到近裁剪面距离, 小数型, 公开, 取平截体到近裁剪面的距离。成功返回距离、失败返回-1
.如果真 (等于 (取句柄 (), 0))
    返回 (-1)
.如果真结束

返回 (摄像机_取到近裁剪面距离 (取句柄 ()))


.子程序 置到近裁剪面的距离, 空白型, 公开, 置到近裁剪面的距离
.参数 距离, 小数型, , 要设置的到近裁剪面的距离

.如果真 (等于 (取句柄 (), 0))
    返回 ()
.如果真结束

摄像机_置到近裁剪面的距离 (取句柄 (), 距离)


.子程序 置Y方向的视野域, 空白型, 公开, 设置Y方向的视野域，水平方向的视野域将依此计算
.参数 视野域, 小数型, , 要设置的视野域

.如果真 (等于 (取句柄 (), 0))
    返回 ()
.如果真结束

摄像机_置Y方向的视野域 (取句柄 (), 视野域)


.子程序 移动, 空白型, 公开, 相对于指定的方向移动摄像机
.参数 方向向量, 自定义_三维向量, , 

.如果真 (等于 (取句柄 (), 0))
    返回 ()
.如果真结束

摄像机_移动 (取句柄 (), 方向向量.X, 方向向量.Y, 方向向量.Z)


.子程序 绕X轴逆时针旋转, 空白型, 公开, 摄像机绕X轴上下逆时针旋转
.参数 旋转角度, 小数型, , 摄像机的旋转角度

.如果真 (等于 (取句柄 (), 0))
    返回 ()
.如果真结束

摄像机_绕X轴逆时针旋转 (取句柄 (), 旋转角度)


.子程序 绕Y轴逆时针旋转, 空白型, 公开, 摄像机绕Y轴上下逆时针旋转
.参数 旋转角度, 小数型, , 摄像机的旋转角度

.如果真 (等于 (取句柄 (), 0))
    返回 ()
.如果真结束

摄像机_绕Y轴逆时针旋转 (取句柄 (), 旋转角度)

.子程序 绕Z轴逆时针旋转, 空白型, 公开, 摄像机绕Z轴上下逆时针旋转
.参数 旋转角度, 小数型, , 摄像机的旋转角度

.如果真 (等于 (取句柄 (), 0))
    返回 ()
.如果真结束

摄像机_绕Z轴逆时针旋转 (取句柄 (), 旋转角度)


.子程序 取摄像机名称, 文本型, 公开, 取摄像机的名称。成功返回摄像机名称，失败返回空文本
.局部变量 临名称, 文本型, , , 
.局部变量 返回值, 整数型, , , 

赋值 (临名称, 取空白文本 (256))

 ' 判断对象是否有效
.如果真 (等于 (取句柄 (), 0))
    返回 (“”)
.如果真结束

赋值 (返回值, 摄像机_取名称 (取句柄 (), 临名称, 256))

.如果真 (不等于 (返回值, 0))
    .如果 (等于 (返回值, -1)) ' 取名称失败，返回空文本
        返回 (“”)
    .否则
         ' 缓冲区不足，重新分配缓冲区再次取名称
        赋值 (临名称, 取空白文本 (返回值))
        赋值 (返回值, 摄像机_取名称 (取句柄 (), 临名称, 返回值))
        
        .如果真 (等于 (返回值, -1))
            返回 (“”)
        .如果真结束
        
    .如果结束
    
.如果真结束

 ' 取名称成功，返回名称
返回 (临名称)


.子程序 取镜头到视口的射线, 整数型, 公开, 取摄像机镜头位置到视口平面的射线。成功返回射线对象句柄、失败返回0
.参数 屏幕X坐标, 小数型, , 射线与视口相交的X位置
.参数 屏幕Y坐标, 小数型, , 射线与视口相交的Y位置

.如果真 (等于 (取句柄 (), 0))
    返回 (0)
.如果真结束

返回 (摄像机_取镜头到视口的射线 (取句柄 (), 屏幕X坐标, 屏幕Y坐标))


.子程序 置当前纵横比, 空白型, 公开, 置平截视口的当前纵横比
.参数 纵横比, 小数型, , 要设置的平截视口的纵横比。纵横比计算公式为：宽度/高度

.如果真 (等于 (取句柄 (), 0))
    返回 ()
.如果真结束

摄像机_置当前纵横比 (取句柄 (), 纵横比)


.子程序 旋转, 空白型, 公开, 
.参数 方位W坐标, 小数型, , 
.参数 方位X坐标, 小数型, , 
.参数 方位Y坐标, 小数型, , 
.参数 方位Z坐标, 小数型, , 

摄像机_旋转 (取句柄 (), 方位W坐标, 方位X坐标, 方位Y坐标, 方位Z坐标)


.子程序 置固定轴, 空白型, 公开, 
.参数 是否使用固定轴, 逻辑型, , 
.参数 固定轴X坐标, 小数型, , 
.参数 固定轴Y坐标, 小数型, , 
.参数 固定轴Z坐标, 小数型, , 

摄像机_置固定轴 (取句柄 (), 是否使用固定轴, 固定轴X坐标, 固定轴Y坐标, 固定轴Z坐标)


.子程序 置自动跟踪, 空白型, 公开, 
.参数 是否启用, 逻辑型, , 真：启用自动跟踪；假：关闭自动跟踪
.参数 节点句柄, 整数型, , 要自动跟踪的节点句柄
.参数 目标点X坐标, 小数型, , 
.参数 目标点Y坐标, 小数型, , 
.参数 目标点Z坐标, 小数型, , 

.如果真 (等于 (取句柄 (), 0))
    返回 ()
.如果真结束

摄像机_置自动跟踪 (取句柄 (), 是否启用, 节点句柄, 目标点X坐标, 目标点Y坐标, 目标点Z坐标)


.子程序 置原点, 空白型, 公开, 
.参数 原点W, 小数型, , 
.参数 原点X, 小数型, , 
.参数 原点Y, 小数型, , 
.参数 原点Z, 小数型, , 

.如果真 (等于 (取句柄 (), 0))
    返回 ()
.如果真结束

摄像机_置原点 (取句柄 (), 原点W, 原点X, 原点Y, 原点Z)


.类模块 颜色值, , , 

.程序集变量 红色值, 小数型, , , 
.程序集变量 绿色值, 小数型, , , 
.程序集变量 蓝色值, 小数型, , , 
.程序集变量 透明值, 小数型, , , 
.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用
赋值 (红色值, 0)
赋值 (绿色值, 0)
赋值 (蓝色值, 0)
赋值 (透明值, 0)


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 置颜色, 空白型, 公开, 初始化颜色值
.参数 参颜色值, 小数型, 数组, 

.如果真 (不等于 (取数组成员数 (参颜色值), 4))
    返回 ()
.如果真结束

赋值 (红色值, 参颜色值 [1])
赋值 (绿色值, 参颜色值 [2])
赋值 (蓝色值, 参颜色值 [3])
赋值 (透明值, 参颜色值 [4])


.子程序 置颜色1, 空白型, 公开, 初始化颜色值
.参数 参红色值, 小数型, , 
.参数 参绿色值, 小数型, , 
.参数 参蓝色值, 小数型, , 
.参数 参透明值, 小数型, , 

赋值 (红色值, 参红色值)
赋值 (绿色值, 参绿色值)
赋值 (蓝色值, 参蓝色值)
赋值 (透明值, 参透明值)


.子程序 取红色值, 小数型, 公开, 
返回 (红色值)


.子程序 取绿色值, 小数型, 公开, 
返回 (绿色值)

.子程序 取蓝色值, 小数型, 公开, 
返回 (蓝色值)

.子程序 取透明值, 小数型, 公开, 
返回 (透明值)

.子程序 是否相等, 逻辑型, 公开, 判断给定的颜色值是否与当前颜色值相等
.参数 参颜色值, 颜色值, , 

.如果真 (不等于 (参颜色值.取红色值 (), 红色值))
    返回 (假)
.如果真结束

.如果真 (不等于 (参颜色值.取绿色值 (), 绿色值))
    返回 (假)
.如果真结束

.如果真 (不等于 (参颜色值.取蓝色值 (), 蓝色值))
    返回 (假)
.如果真结束

.如果真 (不等于 (参颜色值.取透明值 (), 透明值))
    返回 (假)
.如果真结束

返回 (真)


.类模块 渲染系统7, 渲染系统, , Direct7 渲染子系统对象

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 取名称, 文本型, 公开, 取渲染系统的名称。成功返回渲染系统名称，失败返回空文本
.局部变量 临名称, 文本型, , , 
.局部变量 返回值, 整数型, , , 

赋值 (临名称, 取空白文本 (256))

 ' 判断对象是否有效
.如果真 (等于 (取句柄 (), 0))
    返回 (“”)
.如果真结束

赋值 (返回值, 渲染系统7_取名称 (取句柄 (), 临名称, 256))

.如果真 (不等于 (返回值, 0))
    .如果 (等于 (返回值, -1)) ' 取名称失败，返回空文本
        返回 (“”)
    .否则
         ' 缓冲区不足，重新分配缓冲区再次取名称
        赋值 (临名称, 取空白文本 (返回值))
        赋值 (返回值, 渲染系统7_取名称 (取句柄 (), 临名称, 返回值))
        
        .如果真 (等于 (返回值, -1))
            返回 (“”)
        .如果真结束
        
    .如果结束
    
.如果真结束

 ' 取名称成功，返回名称
返回 (临名称)


.类模块 渲染系统, 基句柄类, , 渲染子系统对象

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 取名称, 文本型, 公开, 取渲染子系统名称


.类模块 渲染系统9, 渲染系统, , Direct9 渲染子系统对象

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 取名称, 文本型, 公开, 取渲染系统的名称。成功返回渲染系统名称，失败返回空文本
.局部变量 临名称, 文本型, , , 
.局部变量 返回值, 整数型, , , 

赋值 (临名称, 取空白文本 (256))

 ' 判断对象是否有效
.如果真 (等于 (取句柄 (), 0))
    返回 (“”)
.如果真结束

赋值 (返回值, 渲染系统9_取名称 (取句柄 (), 临名称, 256))

.如果真 (不等于 (返回值, 0))
    .如果 (等于 (返回值, -1)) ' 取名称失败，返回空文本
        返回 (“”)
    .否则
         ' 缓冲区不足，重新分配缓冲区再次取名称
        赋值 (临名称, 取空白文本 (返回值))
        赋值 (返回值, 渲染系统9_取名称 (取句柄 (), 临名称, 返回值))
        
        .如果真 (等于 (返回值, -1))
            返回 (“”)
        .如果真结束
        
    .如果结束
    
.如果真结束

 ' 取名称成功，返回名称
返回 (临名称)


.类模块 渲染系统GL, 渲染系统, , OpenGL 渲染子系统对象

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 取名称, 文本型, 公开, 取渲染系统的名称。成功返回渲染系统名称，失败返回空文本
.局部变量 临名称, 文本型, , , 
.局部变量 返回值, 整数型, , , 

赋值 (临名称, 取空白文本 (256))

 ' 判断对象是否有效
.如果真 (等于 (取句柄 (), 0))
    返回 (“”)
.如果真结束

赋值 (返回值, 渲染系统GL_取名称 (取句柄 (), 临名称, 256))

.如果真 (不等于 (返回值, 0))
    .如果 (等于 (返回值, -1)) ' 取名称失败，返回空文本
        返回 (“”)
    .否则
         ' 缓冲区不足，重新分配缓冲区再次取名称
        赋值 (临名称, 取空白文本 (返回值))
        赋值 (返回值, 渲染系统GL_取名称 (取句柄 (), 临名称, 返回值))
        
        .如果真 (等于 (返回值, -1))
            返回 (“”)
        .如果真结束
        
    .如果结束
    
.如果真结束

 ' 取名称成功，返回名称
返回 (临名称)

.类模块 渲染窗口9, 基句柄类, , 

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 创建, 空白型, 公开, 创建并显示渲染窗口
.参数 窗口名称, 文本型, , 渲染窗口的名称，该名称将用于置渲染目标、取渲染窗口等方法中
.参数 窗口宽度, 整数型, , 渲染窗口的宽度（以像素为单位）
.参数 窗口高度, 整数型, , 渲染窗口的高度（以像素为单位）
.参数 全屏模式, 逻辑型, , 真：全屏模式　　假：窗口模式
.参数 外部窗口句柄, 整数型, , 

.如果真 (等于 (取句柄 (), 0))
    返回 ()
.如果真结束

渲染窗口9_创建 (取句柄 (), 窗口名称, 窗口宽度, 窗口高度, 全屏模式, “”, -1, -1, -1, 真, 外部窗口句柄, -1, -1, 假)


.子程序 创建1, 空白型, 公开, 创建并显示渲染窗口
.局部变量 窗口名称, 文本型, , , 渲染窗口的名称，该名称将用于置渲染目标、取渲染窗口等方法中
.局部变量 窗口宽度, 整数型, , , 渲染窗口的宽度（以像素为单位）
.局部变量 窗口高度, 整数型, , , 渲染窗口的高度（以像素为单位）
.局部变量 全屏模式, 逻辑型, , , 真：全屏模式　　假：窗口模式
.局部变量 窗口标题, 文本型, , , 
.局部变量 颜色深度, 整数型, , , 结果渲染窗口的颜色深度，只用于全屏模式，取值可以为16、32
.局部变量 左边位置, 整数型, , , 窗口的左边位置，对全屏模式无效
.局部变量 顶边位置, 整数型, , , 窗口的顶边位置，对全屏模式无效
.局部变量 深度缓冲标志, 逻辑型, , , 真：使用深度缓冲　　假：不使用深度缓冲。缺省值为真
.局部变量 外部窗口句柄, 整数型, , , 
.局部变量 全屏抗锯齿因子, 整数型, , , 全屏抗锯齿因子值。缺省值为0
.局部变量 刷新率, 小数型, , , 
.局部变量 同步缓冲交换, 逻辑型, , , 

.如果真 (等于 (取句柄 (), 0))
    返回 ()
.如果真结束

渲染窗口9_创建 (取句柄 (), 窗口名称, 窗口宽度, 窗口高度, 全屏模式, 窗口标题, 颜色深度, 左边位置, 顶边位置, 深度缓冲标志, 外部窗口句柄, 全屏抗锯齿因子, 刷新率, 同步缓冲交换)


.子程序 更改位置, 空白型, 公开, 重新设置窗口位置
.参数 左边位置, 整数型, , 窗口的左边位置
.参数 顶边位置, 整数型, , 窗口的顶边位置

.如果真 (等于 (取句柄 (), 0))
    返回 ()
.如果真结束

渲染窗口9_更改位置 (取句柄 (), 左边位置, 顶边位置)


.子程序 更改大小, 空白型, 公开, 改变渲染窗口大小
.参数 窗口宽度, 整数型, , 渲染窗口的宽度（以像素为单位）
.参数 窗口高度, 整数型, , 渲染窗口的高度（以像素为单位）

.如果真 (取句柄 ())
    返回 ()
.如果真结束

渲染窗口9_更改大小 (取句柄 (), 窗口宽度, 窗口高度)


.子程序 更新, 空白型, 公开, 刷新渲染窗口
.如果真 (等于 (取句柄 (), 0))
    返回 ()
.如果真结束

渲染窗口9_更新 (取句柄 ())


.子程序 是否关闭, 逻辑型, 公开, 判断渲染窗口是否被用户关闭，关闭返回真、否则返回假。
.如果真 (等于 (取句柄 (), 0))
    返回 (假)
.如果真结束

返回 (渲染窗口9_是否关闭 (取句柄 ()))


.子程序 写内容到文件, 空白型, 公开, 将当前渲染目标内容写入到指定的文件中
.参数 文件名, 文本型, , 指定要写入的文件名

.如果真 (等于 (取句柄 (), 0))
    返回 ()
.如果真结束

渲染窗口9_写内容到文件 (取句柄 (), 文件名)


.子程序 交换缓冲, 空白型, 公开, 交换帧缓冲以显示下一帧
.参数 翻转标志, 逻辑型, , 真 - 翻转前系统等待下一个垂直空白期　假 - 不论电子束在什么位置都发生翻转

.如果真 (等于 (取句柄 (), 0))
    返回 ()
.如果真结束

渲染窗口9_交换缓冲 (取句柄 (), 翻转标志)


.子程序 是否需要纹理翻转, 逻辑型, 公开, 判断渲染窗口是否需要纹理翻转，需要返回真、不需要返回假。
.如果真 (等于 (取句柄 (), 0))
    返回 (假)
.如果真结束

返回 (渲染窗口9_是否需要纹理翻转 (取句柄 ()))


.类模块 实体, 可动物体, , 

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 取网格模型, 整数型, 公开, 取实体基于的网格模型对象。成功返回网格模型对象句柄、失败返回0
.如果真 (等于 (取句柄 (), 0))
    返回 (0)
.如果真结束

返回 (实体_取网格模型 (取句柄 ()))


.子程序 取子实体, 整数型, 公开, 取指定的子实体。成功返回子实体对象句柄、失败返回0
.参数 子实体序号, 整数型, , 要取得的子实体序号

.如果真 (等于 (取句柄 (), 0))
    返回 (0)
.如果真结束

返回 (实体_取子实体 (取句柄 (), 子实体序号))


.子程序 取子实体1, 整数型, 公开, 取指定的子实体。成功返回子实体对象句柄、失败返回0
.参数 子实体名称, 文本型, , 要取得的子实体名称

.如果真 (等于 (取句柄 (), 0))
    返回 (0)
.如果真结束

返回 (实体_取子实体1 (取句柄 (), 子实体名称))


.子程序 取子实体数量, 整数型, 公开, 取组成实体的子实体数量。成功返回子实体数量、失败返回-1
.如果真 (等于 (取句柄 (), 0))
    返回 (-1)
.如果真结束

返回 (实体_取子实体数量 (取句柄 ()))


.子程序 克隆, 整数型, 公开, 克隆实体并返回克隆出的实体句柄。成功返回实体句柄、失败返回0
.参数 新实体名称, 文本型, , 克隆出的新实体的名称

.如果真 (等于 (取句柄 (), 0))
    返回 (0)
.如果真结束

返回 (实体_克隆 (取句柄 (), 新实体名称))


.子程序 置材质, 空白型, 公开, 设置整个实体使用的材质
.参数 材质名称, 文本型, , 指定实体使用的材质名称

.如果真 (等于 (取句柄 (), 0))
    返回 ()
.如果真结束

实体_置材质 (取句柄 (), 材质名称)


.子程序 取动画状态, 整数型, 公开, 用于基于动画网格的实体，取单个动画的动画状态。成功返回动画状态对象句柄、失败返回0
.参数 动画名称, 文本型, , 要取得的状态的动画名称

.如果真 (等于 (取句柄 (), 0))
    返回 (0)
.如果真结束

返回 (实体_取动画状态 (取句柄 (), 动画名称))


.子程序 置显示骨骼, 空白型, 公开, 设置实体是否显示骨骼
.参数 显示标志, 逻辑型, , 指定是否显示骨骼

.如果真 (等于 (取句柄 (), 0))
    返回 ()
.如果真结束

实体_置显示骨骼 (取句柄 (), 显示标志)


.子程序 是否骨骼动画, 逻辑型, 公开, 取实体是否为骨骼动画
.如果真 (等于 (取句柄 (), 0))
    返回 (假)
.如果真结束

返回 (实体_是否骨骼动画 (取句柄 ()))


.子程序 取骨骼, 整数型, 公开, 取实体的骨骼实例。成功返回骨骼实例句柄、失败返回0
.如果真 (等于 (取句柄 (), 0))
    返回 (0)
.如果真结束

返回 (实体_取骨骼 (取句柄 ()))


.子程序 挂接到骨头, 空白型, 公开, 挂接另一个对象到实体使用骨骼的某个骨头上
.参数 骨头名称, 文本型, , 挂接对象到骨头的名称
.参数 挂接对象句柄, 整数型, , 要挂接到骨头的对象句柄

.如果真 (等于 (取句柄 (), 0))
    返回 ()
.如果真结束

实体_挂接到骨头 (取句柄 (), 骨头名称, 挂接对象句柄)


.子程序 挂接到骨头1, 空白型, 公开, 挂接另一个对象到实体使用骨骼的某个骨头上
.局部变量 骨头名称, 文本型, , , 挂接对象到骨头的名称
.局部变量 挂接对象句柄, 整数型, , , 要挂接到骨头的对象句柄
.局部变量 调整方位W, 小数型, , , 挂接对象相对于骨头的调整方位
.局部变量 调整方位X, 小数型, , , 
.局部变量 调整方位Y, 小数型, , , 
.局部变量 调整方位Z, 小数型, , , 
.局部变量 调整位置X, 小数型, , , 挂接对象相对于骨头的调整位置
.局部变量 调整位置Y, 小数型, , , 
.局部变量 调整位置Z, 小数型, , , 

.如果真 (等于 (取句柄 (), 0))
    返回 ()
.如果真结束

实体_挂接到骨头1 (取句柄 (), 骨头名称, 挂接对象句柄, 调整方位W, 调整方位X, 调整方位Y, 调整方位Z, 调整位置X, 调整位置Y, 调整位置Z)


.子程序 从骨头脱钩, 整数型, 公开, 从骨头上脱钩先前用“实体_挂接到骨头”方法挂接的对象。成功返回脱钩对象的句柄、失败返回0
.参数 脱钩对象名称, 文本型, , 要脱钩的对象名称

.如果真 (等于 (取句柄 (), 0))
    返回 (0)
.如果真结束

返回 (实体_从骨头脱钩 (取句柄 (), 脱钩对象名称))


.类模块 硬件缓冲, 基句柄类, , 

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 取尺寸, 长整数型, 公开, 取硬件缓冲的尺寸（以字节为单位）
.如果真 (等于 (取句柄 (), 0))
    返回 (-1)
.如果真结束

返回 (硬件缓冲_取尺寸 (取句柄 ()))


.类模块 硬件缓冲管理器, 基句柄类, , 

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 创建顶点缓冲, 整数型, 公开, 创建顶点缓冲。成功返回顶点缓冲对象句柄、失败返回0
.参数 顶点尺寸, 整数型, , 指定缓冲中每个顶点的尺寸（以字节为单位）
.参数 顶点数量, 整数型, , 缓冲中的顶点数量
.参数 缓冲用途, 整数型, , 指定缓冲的用途。可为以下值之一：1.静态；2.动态；4.只写；5.静态只写；6.动态只写；8.可抛弃；14.动态只写可抛弃。
.参数 使用映射缓冲, 逻辑型, , 指定是否使用映射缓冲。如果为真，缓冲将被映射到系统内存中

返回 (硬件缓冲管理器_创建顶点缓冲 (顶点尺寸, 顶点数量, 缓冲用途, 使用映射缓冲))


.子程序 创建索引缓冲, 整数型, 公开, 创建索引缓冲。成功返回索引缓冲对象句柄、失败返回0
.参数 索引类型, 整数型, , 索引的类型，取值为16或32，取决于你可以访问的顶点数量
.参数 索引数量, 整数型, , 缓冲中的索引数量
.参数 缓冲用途, 整数型, , 指定缓冲的用途。可为以下值之一：1.静态；2.动态；4.只写；5.静态只写；6.动态只写；8.可抛弃；14.动态只写可抛弃。
.参数 使用映射缓冲, 逻辑型, , 指定是否使用映射缓冲。如果为真，缓冲将被映射到系统内存中。

返回 (硬件缓冲管理器_创建索引缓冲 (索引类型, 索引数量, 缓冲用途, 使用映射缓冲))


.类模块 硬件索引缓冲, 基句柄类, , 

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 取尺寸, 长整数型, 公开, 取硬件索引缓冲的尺寸（以字节为单位）。失败返回-1
.如果真 (等于 (取句柄 (), 0))
    返回 (-1)
.如果真结束

返回 (硬件索引缓冲_取尺寸 (取句柄 ()))


.子程序 写数据, 空白型, , 从一块系统内存区域写数据到缓冲区中，必须保证你的缓冲区要足够大
.参数 写入偏移量, 整数型, , 写入数据位置到缓冲区开始位置的偏移量（也就是从什么位置开始写入）
.参数 写入数据, 小数型, 数组, 要写入的数据
.参数 抛弃缓冲区标志, 逻辑型, , 真 - 写入数据的时候抛弃整个缓冲区 

.如果真 (等于 (取句柄 (), 0))
    返回 ()
.如果真结束

硬件索引缓冲_写数据 (取句柄 (), 写入偏移量, 写入数据, 抛弃缓冲区标志)


.类模块 硬件顶点缓冲, 基句柄类, , 

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 取尺寸, 长整数型, 公开, 取硬件顶点缓冲的尺寸（以字节为单位）。失败返回-1
.如果真 (等于 (取句柄 (), 0))
    返回 (-1)
.如果真结束

返回 (硬件顶点缓冲_取尺寸 (取句柄 ()))


.子程序 写数据, 空白型, , 从一块系统内存区域写数据到缓冲区中，必须保证你的缓冲区要足够大
.参数 写入偏移量, 整数型, , 写入数据位置到缓冲区开始位置的偏移量（也就是从什么位置开始写入）
.参数 写入数据, 小数型, 数组, 要写入的数据
.参数 抛弃缓冲区标志, 逻辑型, , 真 - 写入数据的时候抛弃整个缓冲区 

.如果真 (等于 (取句柄 (), 0))
    返回 ()
.如果真结束

硬件顶点缓冲_写数据 (取句柄 (), 写入偏移量, 写入数据, 抛弃缓冲区标志)


.类模块 索引数据, 基句柄类, , 

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 创建, 空白型, 公开, 创建索引数据。
置句柄 (索引数据_创建 ())


.子程序 置索引数量, 空白型, 公开, 设置索引数量
.参数 索引数量, 整数型, , 要设置的索引数量

.如果真 (等于 (取句柄 (), 0))
    返回 ()
.如果真结束

索引数据_置索引数量 (取句柄 (), 索引数量)


.子程序 取索引数量, 整数型, 公开, 取索引数据的数量
.如果真 (等于 (取句柄 (), 0))
    返回 (-1)
.如果真结束

返回 (索引数据_取索引数量 (取句柄 ()))


.子程序 置开始索引, 空白型, 公开, 设置开始索引
.参数 开始索引, 整数型, , 要设置的开始索引

.如果真 (等于 (取句柄 (), 0))
    返回 ()
.如果真结束

索引数据_置开始索引 (取句柄 (), 开始索引)


.子程序 取开始索引, 整数型, 公开, 置开始索引
.如果真 (等于 (取句柄 (), 0))
    返回 (-1)
.如果真结束

返回 (索引数据_取开始索引 (取句柄 ()))


.子程序 置索引缓冲, 空白型, 公开, 设置索引缓冲
.参数 硬件索引缓冲句柄, 整数型, , 要设置的硬件索引缓冲对象句柄

.如果真 (等于 (取句柄 (), 0))
    返回 ()
.如果真结束

索引数据_置索引缓冲 (取句柄 (), 硬件索引缓冲句柄)


.类模块 关键帧, 基句柄类, , 

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 取时间, 小数型, 公开, 取动画索引中的关键帧时间。失败返回-1
.如果真 (等于 (取句柄 (), 0))
    返回 (-1)
.如果真结束

返回 (关键帧_取时间 (取句柄 ()))


.子程序 置旋转, 空白型, 公开, 设置应用于关键帧的旋转属性
.参数 旋转属性W, 小数型, , 应用于关键帧的旋转属性
.参数 旋转属性X, 小数型, , 
.参数 旋转属性Y, 小数型, , 
.参数 旋转属性Z, 小数型, , 

.如果真 (等于 (取句柄 (), 0))
    返回 ()
.如果真结束

关键帧_置旋转 (取句柄 (), 旋转属性W, 旋转属性X, 旋转属性Y, 旋转属性Z)


.子程序 置转换, 空白型, 公开, 设置与关键帧相关联的转换
.参数 转换X, 小数型, , 与关键帧相关联的转换
.参数 转换Y, 小数型, , 
.参数 转换Z, 小数型, , 

.如果真 (等于 (取句柄 (), 0))
    返回 ()
.如果真结束

关键帧_置转换 (取句柄 (), 转换X, 转换Y, 转换Z)


.类模块 灯光, 可动物体, , 

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 取名称, 文本型, 公开, 取得灯光的名称。成功返回灯光名称，失败返回空文本
.局部变量 临名称, 文本型, , , 
.局部变量 返回值, 整数型, , , 

赋值 (临名称, 取空白文本 (256))

 ' 判断对象是否有效
.如果真 (等于 (取句柄 (), 0))
    返回 (“”)
.如果真结束

赋值 (返回值, 灯光_取名称 (取句柄 (), 临名称, 256))

.如果真 (不等于 (返回值, 0))
    .如果 (等于 (返回值, -1)) ' 取名称失败，返回空文本
        返回 (“”)
    .否则
         ' 缓冲区不足，重新分配缓冲区再次取名称
        赋值 (临名称, 取空白文本 (返回值))
        赋值 (返回值, 灯光_取名称 (取句柄 (), 临名称, 返回值))
        
        .如果真 (等于 (返回值, -1))
            返回 (“”)
        .如果真结束
        
    .如果结束
    
.如果真结束

 ' 取名称成功，返回名称
返回 (临名称)

.子程序 通知当前摄像机, 空白型, 公开, 向当前的摄像机发送通知消息
.参数 摄像机句柄, 整数型, , 摄像机对象句柄

.如果真 (等于 (取句柄 (), 0))
    返回 ()
.如果真结束

灯光_通知当前摄像机 (取句柄 (), 摄像机句柄)


.子程序 取上限, 小数型, 公开, 取灯光的绝对上限。失败返回-1
.如果真 (等于 (取句柄 (), 0))
    返回 (-1)
.如果真结束

返回 (灯光_取上限 (取句柄 ()))


.子程序 取方向, 自定义_三维向量, 公开, 取灯光的方向
.局部变量 返回向量, 自定义_三维向量, , , 
.局部变量 方向向量, 小数型, , "10", 

赋值 (返回向量.X, 0)
赋值 (返回向量.Y, 0)
赋值 (返回向量.Z, 0)

.如果真 (等于 (取句柄 (), 0))
    返回 (返回向量)
.如果真结束

灯光_取方向 (取句柄 (), 方向向量, 取数组成员数 (方向向量))
赋值 (返回向量.X, 方向向量 [1])
赋值 (返回向量.Y, 方向向量 [2])
赋值 (返回向量.Z, 方向向量 [3])

返回 (返回向量)


.子程序 取位置, 自定义_三维向量, 公开, 取灯光的位置
.局部变量 返回向量, 自定义_三维向量, , , 
.局部变量 位置向量, 小数型, , "10", 

赋值 (返回向量.X, 0)
赋值 (返回向量.Y, 0)
赋值 (返回向量.Z, 0)

.如果真 (等于 (取句柄 (), 0))
    返回 (返回向量)
.如果真结束

灯光_取位置 (取句柄 (), 位置向量, 取数组成员数 (位置向量))
赋值 (返回向量.X, 位置向量 [1])
赋值 (返回向量.Y, 位置向量 [2])
赋值 (返回向量.Z, 位置向量 [3])

返回 (返回向量)

.子程序 取类型, 整数型, 公开, 取灯光的类型。返回以下值：0.点光源；1.直射光；2.聚光灯。失败返回-1
.如果真 (等于 (取句柄 (), 0))
    返回 (-1)
.如果真结束

返回 (灯光_取类型 (取句柄 ()))


.子程序 置方向, 空白型, 公开, 设置灯光点的方向
.参数 方向X坐标, 小数型, , 灯光点的方向
.参数 方向Y坐标, 小数型, , 
.参数 方向Z坐标, 小数型, , 

.如果真 (等于 (取句柄 (), 0))
    返回 ()
.如果真结束

灯光_置方向 (取句柄 (), 方向X坐标, 方向Y坐标, 方向Z坐标)


.子程序 置位置, 空白型, 公开, 设置灯光的位置
.参数 位置X坐标, 小数型, , 灯光点的位置
.参数 位置Y坐标, 小数型, , 
.参数 位置Z坐标, 小数型, , 

.如果真 (等于 (取句柄 (), 0))
    返回 ()
.如果真结束

灯光_置位置 (取句柄 (), 位置X坐标, 位置Y坐标, 位置Z坐标)


.子程序 置类型, 空白型, 公开, 设置灯光的类型
.参数 灯光类型, 整数型, , 灯光的类型，为以下值：0.点光源；1.直射光；2.聚光灯。

.如果真 (等于 (取句柄 (), 0))
    返回 ()
.如果真结束

灯光_置类型 (取句柄 (), 灯光类型)


.子程序 取包围盒, 整数型, 公开, 取包围盒。成功返回包围盒对象句柄、失败返回0
.如果真 (等于 (取句柄 (), 0))
    返回 (0)
.如果真结束

返回 (灯光_取包围盒 (取句柄 ()))


.子程序 取类型名, 文本型, 公开, 取得灯光的类型名称。成功返回灯光类型名称，失败返回空文本
.局部变量 临名称, 文本型, , , 
.局部变量 返回值, 整数型, , , 

赋值 (临名称, 取空白文本 (256))

 ' 判断对象是否有效
.如果真 (等于 (取句柄 (), 0))
    返回 (“”)
.如果真结束

赋值 (返回值, 灯光_取类型名 (取句柄 (), 临名称, 256))

.如果真 (不等于 (返回值, 0))
    .如果 (等于 (返回值, -1)) ' 取名称失败，返回空文本
        返回 (“”)
    .否则
         ' 缓冲区不足，重新分配缓冲区再次取名称
        赋值 (临名称, 取空白文本 (返回值))
        赋值 (返回值, 灯光_取类型名 (取句柄 (), 临名称, 返回值))
        
        .如果真 (等于 (返回值, -1))
            返回 (“”)
        .如果真结束
        
    .如果结束
    
.如果真结束

 ' 取名称成功，返回名称
返回 (临名称)

.子程序 取常数因子, 小数型, 公开, 取衰减公式中的常数因子。失败返回-1
.如果真 (等于 (取句柄 (), 0))
    返回 (-1)
.如果真结束

返回 (灯光_取常数因子 (取句柄 ()))


.子程序 取线性因子, 小数型, 公开, 取衰减公式中的线性因子。失败返回-1
.如果真 (等于 (取句柄 (), 0))
    返回 (-1)
.如果真结束

返回 (灯光_取线性因子 (取句柄 ()))


.子程序 取二次因子, 小数型, 公开, 取衰减公式中的二次因子
.如果真 (等于 (取句柄 (), 0))
    返回 (-1)
.如果真结束

返回 (灯光_取二次因子 (取句柄 ()))


.子程序 取起源方位, 自定义_三维向量, 公开, 取灯光的起源方位
.局部变量 返回向量, 自定义_三维向量, , , 
.局部变量 方位向量, 小数型, , "10", 

赋值 (返回向量.X, 0)
赋值 (返回向量.Y, 0)
赋值 (返回向量.Z, 0)

.如果真 (等于 (取句柄 (), 0))
    返回 (返回向量)
.如果真结束

灯光_取起源方位 (取句柄 (), 方位向量, 取数组成员数 (方位向量))
赋值 (返回向量.X, 方位向量 [1])
赋值 (返回向量.Y, 方位向量 [2])
赋值 (返回向量.Z, 方位向量 [3])

返回 (返回向量)


.子程序 取起源位置, 自定义_三维向量, 公开, 取灯光的起源位置
.局部变量 返回向量, 自定义_三维向量, , , 
.局部变量 位置向量, 小数型, , "10", 

赋值 (返回向量.X, 0)
赋值 (返回向量.Y, 0)
赋值 (返回向量.Z, 0)

.如果真 (等于 (取句柄 (), 0))
    返回 (返回向量)
.如果真结束

灯光_取起源位置 (取句柄 (), 位置向量, 取数组成员数 (位置向量))
赋值 (返回向量.X, 位置向量 [1])
赋值 (返回向量.Y, 位置向量 [2])
赋值 (返回向量.Z, 位置向量 [3])

返回 (返回向量)


.子程序 置衰减参数, 空白型, 公开, 设置光源的衰减参数
.参数 绝对上限, 小数型, , 灯光的绝对上限值（世界单位）
.参数 常数因子, 小数型, , 衰减公式的常数因子。1.0表示从不衰减；0.0表示全部衰减
.参数 线性因子, 小数型, , 衰减公式的线性因子
.参数 二次因子, 小数型, , 衰减公式的二次因子

.如果真 (等于 (取句柄 (), 0))
    返回 ()
.如果真结束

灯光_置衰减参数 (取句柄 (), 绝对上限, 常数因子, 线性因子, 二次因子)


.子程序 取包围盒半径, 小数型, 公开, 取包围盒的半径。失败返回-1
.如果真 (等于 (取句柄 (), 0))
    返回 (-1)
.如果真结束

返回 (灯光_取包围盒半径 (取句柄 ()))


.子程序 取漫射光颜色, 颜色值, 公开, 取光源发出的漫射光颜色
.局部变量 返回颜色值, 颜色值, , , 
.局部变量 颜色数组, 小数型, , "10", 

返回颜色值.置颜色1 (0, 0, 0, 0)

.如果真 (等于 (取句柄 (), 0))
    返回 (返回颜色值)
.如果真结束

灯光_取漫射光颜色 (取句柄 (), 颜色数组, 取数组成员数 (颜色数组))
返回颜色值.置颜色 (颜色数组)

返回 (返回颜色值)


.子程序 取镜面光颜色, 颜色值, 公开, 取光源发出的镜面光颜色
.局部变量 返回颜色值, 颜色值, , , 
.局部变量 颜色数组, 小数型, , "10", 

返回颜色值.置颜色1 (0, 0, 0, 0)

.如果真 (等于 (取句柄 (), 0))
    返回 (返回颜色值)
.如果真结束

灯光_取镜面光颜色 (取句柄 (), 颜色数组, 取数组成员数 (颜色数组))
返回颜色值.置颜色 (颜色数组)

返回 (返回颜色值)


.子程序 取聚光灯衰减, 小数型, 公开, 取聚光灯内角和外角之间的衰减。失败返回-1
.如果真 (等于 (取句柄 (), 0))
    返回 (-1)
.如果真结束

返回 (灯光_取聚光灯衰减 (取句柄 ()))


.子程序 取聚光灯内角, 小数型, 公开, 取聚光灯内角。失败返回-1
.如果真 (等于 (取句柄 (), 0))
    返回 (-1)
.如果真结束

返回 (灯光_取聚光灯内角 (取句柄 ()))


.子程序 取聚光灯外角, 小数型, 公开, 取聚光灯外角。失败返回-1
.如果真 (等于 (取句柄 (), 0))
    返回 (-1)
.如果真结束

返回 (灯光_取聚光灯外角 (取句柄 ()))


.子程序 置漫射光颜色, 空白型, 公开, 设置光源发出的漫射光颜色
.参数 红色值, 小数型, , 光源发出的漫射光颜色
.参数 绿色值, 小数型, , 
.参数 蓝色值, 小数型, , 

.如果真 (等于 (取句柄 (), 0))
    返回 ()
.如果真结束

灯光_置漫射光颜色 (取句柄 (), 红色值, 绿色值, 蓝色值)


.子程序 置镜面光颜色, 空白型, 公开, 设置光源发出的镜面光颜色
.参数 红色值, 小数型, , 光源发出的漫射光颜色
.参数 绿色值, 小数型, , 
.参数 蓝色值, 小数型, , 

.如果真 (等于 (取句柄 (), 0))
    返回 ()
.如果真结束

灯光_置镜面光颜色 (取句柄 (), 红色值, 绿色值, 蓝色值)


.子程序 置聚光灯范围, 空白型, 公开, 设置聚光灯的范围
.参数 内角角度, 小数型, , 聚光灯的内角角度
.参数 外角角度, 小数型, , 聚光灯的外角角度
.参数 衰减率, 小数型, , 内角与外角间的衰减率。1.0表示线性衰减；较小的数表示较慢的衰减；较大的数表示较快的衰减

.如果真 (等于 (取句柄 (), 0))
    返回 ()
.如果真结束

灯光_置聚光灯范围 (取句柄 (), 内角角度, 外角角度, 衰减率)

.类模块 日志管理器, 基句柄类, , 

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 创建, 空白型, 公开, 创建日志管理器对象
置句柄 (日志管理器_创建 ())


.子程序 取对象, 整数型, 公开, 取日志管理器对象，返回对象句柄
返回 (日志管理器_取对象 ())


.子程序 记录日志, 空白型, 公开, 记录指定的消息到日志文件中
.参数 日志消息, 文本型, , 要记录到日志文件中的消息

日志管理器_记录日志 (日志消息)


.类模块 网格模型, 基句柄类, , 

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 取名称, 文本型, 公开, 取得网格模型的名称。成功返回网格模型名称，失败返回空文本
.局部变量 临名称, 文本型, , , 
.局部变量 返回值, 整数型, , , 

赋值 (临名称, 取空白文本 (256))

 ' 判断对象是否有效
.如果真 (等于 (取句柄 (), 0))
    返回 (“”)
.如果真结束

赋值 (返回值, 网格模型_取名称 (取句柄 (), 临名称, 256))

.如果真 (不等于 (返回值, 0))
    .如果 (等于 (返回值, -1)) ' 取名称失败，返回空文本
        返回 (“”)
    .否则
         ' 缓冲区不足，重新分配缓冲区再次取名称
        赋值 (临名称, 取空白文本 (返回值))
        赋值 (返回值, 网格模型_取名称 (取句柄 (), 临名称, 返回值))
        
        .如果真 (等于 (返回值, -1))
            返回 (“”)
        .如果真结束
        
    .如果结束
    
.如果真结束

 ' 取名称成功，返回名称
返回 (临名称)

.子程序 取骨骼, 整数型, 公开, 取得骨骼。成功返回骨骼对象句柄、失败返回0
.如果真 (等于 (取句柄 (), 0))
    返回 (0)
.如果真结束

返回 (网格模型_取骨骼 (取句柄 ()))


.子程序 置边界盒, 空白型, 公开, 设置网格的边界盒
.参数 mx, 小数型, , 
.参数 my, 小数型, , 
.参数 mz, 小数型, , 
.参数 Mx, 小数型, , 
.参数 My, 小数型, , 
.参数 Mz, 小数型, , 
.参数 pad, 逻辑型, , 缺省值真

.如果真 (等于 (取句柄 (), 0))
    返回 ()
.如果真结束

网格模型_置边界盒 (取句柄 (), mx, my, mz, Mx, My, Mz, pad)


.子程序 载入档案, 逻辑型, 公开, 载入档案
.如果真 (等于 (取句柄 (), 0))
    返回 (假)
.如果真结束

返回 (网格模型_载入档案 (取句柄 ()))


.子程序 卸载档案, 空白型, 公开, 
.如果真 (等于 (取句柄 (), 0))
    返回 ()
.如果真结束

网格模型_卸载档案 (取句柄 ())


.子程序 置边界盒1, 空白型, 公开, 设置网格的边界盒
.参数 包围盒句柄, 整数型, , 包围盒对象句柄
.参数 pad, 逻辑型, , 缺省值真

.如果真 (或者 (等于 (取句柄 (), 0), 等于 (包围盒句柄, 0)))
    返回 ()
.如果真结束

网格模型_置边界盒1 (取句柄 (), 包围盒句柄, pad)


.子程序 置边界半径, 空白型, 公开, 设置边界球体的半径
.参数 边界半径, 小数型, , 要设置的边界半径

.如果真 (等于 (取句柄 (), 0))
    返回 ()
.如果真结束

网格模型_置边界半径 (取句柄 (), 边界半径)


.子程序 创建子模型, 整数型, 公开, 创建子网格模型。成功返回子网格模型对象句柄、失败返回0
.如果真 (等于 (取句柄 (), 0))
    返回 (0)
.如果真结束

返回 (网格模型_创建子模型 (取句柄 ()))


.子程序 取骨骼名称, 文本型, 公开, 取得骨骼的名称。成功返回骨骼名称，失败返回空文本
.局部变量 临名称, 文本型, , , 
.局部变量 返回值, 整数型, , , 

赋值 (临名称, 取空白文本 (256))

 ' 判断对象是否有效
.如果真 (等于 (取句柄 (), 0))
    返回 (“”)
.如果真结束

赋值 (返回值, 网格模型_取骨骼名称 (取句柄 (), 临名称, 256))

.如果真 (不等于 (返回值, 0))
    .如果 (等于 (返回值, -1)) ' 取名称失败，返回空文本
        返回 (“”)
    .否则
         ' 缓冲区不足，重新分配缓冲区再次取名称
        赋值 (临名称, 取空白文本 (返回值))
        赋值 (返回值, 网格模型_取骨骼名称 (取句柄 (), 临名称, 返回值))
        
        .如果真 (等于 (返回值, -1))
            返回 (“”)
        .如果真结束
        
    .如果结束
    
.如果真结束

 ' 取名称成功，返回名称
返回 (临名称)

.子程序 是否有骨骼, 逻辑型, 公开, 判断网格模型是否有连接的骨骼
.如果真 (等于 (取句柄 (), 0))
    返回 (假)
.如果真结束

返回 (网格模型_是否有骨骼 (取句柄 ()))


.子程序 置骨骼名称, 空白型, 公开, 设置网格模型的骨骼名称
.参数 骨骼名称, 文本型, , 要设置的骨骼名称

.如果真 (等于 (取句柄 (), 0))
    返回 ()
.如果真结束

网格模型_置骨骼名称 (取句柄 (), 骨骼名称)


.子程序 取共享顶点数据, 整数型, 公开, 取得共享的顶点数据。成功返回顶点数据对象句柄、失败返回0
.如果真 (等于 (取句柄 (), 0))
    返回 (0)
.如果真结束

返回 (网格模型_取共享顶点数据 (取句柄 ()))


.子程序 置共享顶点数据, 空白型, 公开, 设置共享顶点数据
.参数 顶点数据句柄, 整数型, , 要设置的顶点数据句柄

.如果真 (或者 (等于 (取句柄 (), 0), 等于 (顶点数据句柄, 0)))
    返回 ()
.如果真结束

网格模型_置共享顶点数据 (取句柄 (), 顶点数据句柄)


.子程序 取正切参数, 逻辑型, 公开, 
.参数 源, 短整数型, 参考, 
.参数 目标, 短整数型, 参考, 

返回 (模型_取正切参数 (取句柄 (), 源, 目标))


.子程序 建立正切向量, 空白型, 公开, 
.参数 源, 短整数型, , 
.参数 目标, 短整数型, , 

模型_建立正切向量 (取句柄 (), 源, 目标)


.类模块 网格模型管理器, 基句柄类, , 

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 创建, 空白型, 公开, 创建模型管理器实例
置句柄 (模型管理器_创建 ())


.子程序 取模型, 整数型, 公开, 取指定名称的网格模型对象。返回网格模型对象句柄
.参数 模型名称, 文本型, , 要取得的网格模型名称

返回 (模型管理器_取模型 (模型名称))


.子程序 取对象, 整数型, 公开, 取模型管理器对象。成功返回对象句柄、失败返回0
返回 (模型管理器_取对象 ())


.子程序 创建模型, 整数型, 公开, 创建手工定义的特定模型。成功返回模型句柄、失败返回0
.参数 模型名称, 文本型, , 新网格模型的名称
.参数 资源组名称, 文本型, , 指定分配模型到哪个资源组的名称
.参数 资源载入器句柄, 整数型, , 资源载入器对象句柄

返回 (模型管理器_创建模型 (模型名称, 资源组名称, 资源载入器句柄))


.子程序 移除所有资源, 空白型, 公开, 
模型管理器_移除所有资源 ()


.子程序 移除指定资源, 空白型, 公开, 移除指定名称的单个资源
.参数 资源名称, 文本型, , 要移除的资源名称

.如果真 (等于 (取句柄 (), 0))
    返回 ()
.如果真结束

模型管理器_移除指定资源 (取句柄 (), 资源名称)


.子程序 创建平面模型, 整数型, 公开, 创建一个基本平面模型。返回网格模型对象句柄
.参数 平面模型名称, 文本型, , 指定结果模型的名称
.参数 资源组名称, 文本型, , 模型属于的资源组名称
.参数 平面定义句柄, 整数型, , 所使用的平面定义对象句柄
.参数 宽度, 小数型, , 平面的宽度（X方向）
.参数 高度, 小数型, , 平面的高度（Y方向）

返回 (模型管理器_创建平面模型 (平面模型名称, 资源组名称, 平面定义句柄, 宽度, 高度))


.子程序 创建平面模型1, 整数型, 公开, 创建一个基本平面模型，返回网格模型对象句柄
.参数 平面模型名称, 文本型, , 指定结果模型的名称
.参数 资源组名称, 文本型, , 模型属于的资源组名称
.参数 平面定义句柄, 整数型, , 所使用的平面定义对象句柄
.参数 宽度, 小数型, , 平面的宽度（X方向）
.参数 高度, 小数型, , 平面的高度（Y方向）
.参数 X方向分割数量, 整数型, , 指定平面X方向的分割数量
.参数 Y方向分割数量, 整数型, , 指定平面Y方向的分割数量
.参数 法线, 逻辑型, , 如果为真，创建垂直于平面的法线
.参数 纹理坐标集的数量, 整数型, , 纹理坐标集的数量，也就是多层纹理的层数
.参数 U方向纹理重复次数, 小数型, , 
.参数 V方向纹理重复次数, 小数型, , 
.参数 上方向X坐标, 小数型, , 平面的上方向法线
.参数 上方向Y坐标, 小数型, , 
.参数 上方向Z坐标, 小数型, , 

返回 (模型管理器_创建平面模型1 (平面模型名称, 资源组名称, 平面定义句柄, 宽度, 高度, X方向分割数量, Y方向分割数量, 法线, 纹理坐标集的数量, U方向纹理重复次数, V方向纹理重复次数, 上方向X坐标, 上方向Y坐标, 上方向Z坐标))


.子程序 创建平面模型2, 整数型, 公开, 创建一个基本平面模型，返回网格模型对象句柄
.参数 平面模型名称, 文本型, , 指定结果模型的名称
.参数 资源组名称, 文本型, , 模型属于的资源组名称
.参数 平面定义句柄, 整数型, , 所使用的平面定义对象句柄
.参数 宽度, 小数型, , 平面的宽度（X方向）
.参数 高度, 小数型, , 平面的高度（Y方向）
.参数 X方向分割数量, 整数型, , 指定平面X方向的分割数量
.参数 Y方向分割数量, 整数型, , 指定平面Y方向的分割数量
.参数 法线, 逻辑型, , 如果为真，创建垂直于平面的法线
.参数 纹理坐标集的数量, 整数型, , 纹理坐标集的数量，也就是多层纹理的层数
.参数 U方向纹理重复次数, 小数型, , 
.参数 V方向纹理重复次数, 小数型, , 
.参数 上方向X坐标, 小数型, , 平面的上方向法线
.参数 上方向Y坐标, 小数型, , 
.参数 上方向Z坐标, 小数型, , 
.参数 顶点缓冲用途, 整数型, , 指定顶点缓冲的用途。可为以下值之一：1.静态；2.动态；4.只写；5.静态只写；6.动态只写；8.可抛弃；14.动态只写可抛弃。
.参数 索引缓冲用途, 整数型, , 指定索引缓冲的用途。可为以下值之一：1.静态；2.动态；4.只写；5.静态只写；6.动态只写；8.可抛弃；14.动态只写可抛弃。
.参数 顶点缓冲映射标志, 逻辑型, , 如果为真，会将顶点缓冲映射到系统内存以加快读取速度
.参数 索引缓冲映射标志, 逻辑型, , 如果为真，会将索引缓冲映射到系统内存以加快读取速度

返回 (模型管理器_创建平面模型2 (平面模型名称, 资源组名称, 平面定义句柄, 宽度, 高度, X方向分割数量, Y方向分割数量, 法线, 纹理坐标集的数量, U方向纹理重复次数, V方向纹理重复次数, 上方向X坐标, 上方向Y坐标, 上方向Z坐标, 顶点缓冲用途, 索引缓冲用途, 顶点缓冲映射标志, 索引缓冲映射标志))


.子程序 从文件载入模型, 整数型, 公开, 从文件载入一个网格模型，并使模型立即可以使用
.参数 模型文件名, 文本型, , 要载入的网格模型文件名（.mesh文件）
.参数 资源组名称, 文本型, , 网格模型属于的资源组名称
.参数 顶点缓冲用途, 整数型, , 指定顶点缓冲的用途。可为以下值之一：1.静态；2.动态；4.只写；5.静态只写；6.动态只写；8.可抛弃；14.动态只写可抛弃。
.参数 索引缓冲用途, 整数型, , 指定索引缓冲的用途。可为以下值之一：1.静态；2.动态；4.只写；5.静态只写；6.动态只写；8.可抛弃；14.动态只写可抛弃。
.参数 顶点缓冲映射标志, 逻辑型, , 如果为真，会将顶点缓冲映射到系统内存以加快读取速度
.参数 索引缓冲映射标志, 逻辑型, , 如果为真，会将索引缓冲映射到系统内存以加快读取速度

返回 (模型管理器_从文件载入模型 (模型文件名, 资源组名称, 顶点缓冲用途, 索引缓冲用途, 顶点缓冲映射标志, 索引缓冲映射标志))


.类模块 模型装载器, 基句柄类, , 

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 输出模型到文件, 空白型, 公开, 将模型输出到指定的模型文件中
.参数 网格模型句柄, 整数型, , 网格模型对象句柄
.参数 文件名, 文本型, , 模型输出到的文件名

.如果真 (或者 (等于 (取句柄 (), 0), 等于 (网格模型句柄, 0)))
    返回 ()
.如果真结束

模型装载器_输出模型到文件 (取句柄 (), 网格模型句柄, 文件名)


.类模块 可动物体, 基句柄类, , 

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 取名称, 文本型, 公开, 
.局部变量 名称, 文本型, , , 
.局部变量 新大小, 整数型, , , 

赋值 (名称, 取空白文本 (200))
赋值 (新大小, 可动物体_取名称 (取句柄 (), 名称, 取文本长度 (名称)))
.如果真 (大于 (新大小, 0))
    赋值 (名称, 取空白文本 (新大小))
    可动物体_取名称 (取句柄 (), 名称, 取文本长度 (名称))
.如果真结束

返回 (名称)


.子程序 取类型名, 文本型, 公开, 
.局部变量 名称, 文本型, , , 
.局部变量 新大小, 整数型, , , 

赋值 (名称, 取空白文本 (200))
赋值 (新大小, 可动物体_取类型名 (取句柄 (), 名称, 取文本长度 (名称)))
.如果真 (大于 (新大小, 0))
    赋值 (名称, 取空白文本 (新大小))
    可动物体_取名称 (取句柄 (), 名称, 取文本长度 (名称))
.如果真结束

返回 (名称)


.子程序 取节点, 整数型, 公开, 返回和本对象相关联的节点句柄
返回 (可动物体_取节点 (取句柄 ()))


.子程序 取场景节点, 整数型, 公开, 返回和本对象相关联的场景节点
返回 (可动物体_取场景节点 (取句柄 ()))


.子程序 是否关联, 逻辑型, 公开, 返回和本对象是否被关联
返回 (可动物体_是否关联 (取句柄 ()))


.子程序 通知当前摄像机, 空白型, 公开, 通知当前摄像机进入下一次渲染操作
.参数 摄像机句柄, 整数型, , 

可动物体_通知当前摄像机 (取句柄 (), 摄像机句柄)


.子程序 取包围盒, 整数型, 公开, 返回包围盒句柄
返回 (可动物体_取包围盒 (取句柄 ()))


.子程序 取包围半径, 小数型, 公开, 取物体包围盒的半径
返回 (可动物体_取包围半径 (取句柄 ()))


.子程序 取世界包围盒, 整数型, 公开, 返回世界包围盒句柄
.参数 源, 逻辑型, , 

返回 (可动物体_取世界包围盒 (取句柄 (), 源))


.子程序 置可视, 空白型, 公开, 设置物体是否可视
.参数 是否可视, 逻辑型, , 

可动物体_置可视 (取句柄 (), 是否可视)


.子程序 取可视, 逻辑型, 公开, 取物体是否可视
返回 (可动物体_取可视 (取句柄 ()))


.子程序 置查询标志, 空白型, 公开, 
.参数 标志, 整数型, , 标志

可动物体_置查询标志 (取句柄 (), 标志)



.子程序 取查询标志, 整数型, 公开, 
返回 (可动物体_取查询标志 (取句柄 ()))


.子程序 置阴影, 空白型, 公开, 设置此物体是否要显示阴影
.参数 启用, 逻辑型, , 是否启用

可动物体_置阴影 (取句柄 (), 启用)


.子程序 取阴影, 逻辑型, 公开, 
返回 (可动物体_取阴影 (取句柄 ()))



.子程序 取标识, 整数型, 公开, 
返回 (1)

.类模块 节点, 基句柄类, , 

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 建子节点, 整数型, 公开, 返回子节点句柄
.如果真 (等于 (取句柄 (), 0))
    返回 (0)
.如果真结束

返回 (节点_建子节点 (取句柄 ()))


.子程序 取名称, 文本型, 公开, 
.局部变量 名称, 文本型, , , 
.局部变量 新大小, 整数型, , , 

赋值 (名称, 取空白文本 (200))
赋值 (新大小, 节点_取名称 (取句柄 (), 名称, 取文本长度 (名称)))
.如果真 (大于 (新大小, 0))
    赋值 (名称, 取空白文本 (新大小))
    节点_取名称 (取句柄 (), 名称, 取文本长度 (名称))
.如果真结束
返回 (名称)

.子程序 取父节点, 整数型, 公开, 返回父节点句柄
返回 (节点_取父节点 (取句柄 ()))


.子程序 取原点, 自定义_四元素, 公开, 
.局部变量 四, 小数型, , "4", 
.局部变量 四元素, 自定义_四元素, , , 

节点_取原点 (取句柄 (), 四, 取数组成员数 (四))
赋值 (四元素.W, 四 [1])
赋值 (四元素.X, 四 [2])
赋值 (四元素.Y, 四 [3])
赋值 (四元素.Z, 四 [4])
返回 (四元素)


.子程序 置原点, 空白型, 公开, 
.参数 四元素, 自定义_四元素, , 

节点_置原点 (取句柄 (), 四元素.W, 四元素.X, 四元素.Y, 四元素.Z)


.子程序 重置原点, 空白型, 公开, 
.如果真 (等于 (取句柄 (), 0))
    返回 ()
.如果真结束

节点_重置原点 (取句柄 ())


.子程序 置位置, 空白型, 公开, 
.参数 位置, 自定义_三维向量, , 

.如果真 (等于 (取句柄 (), 0))
    返回 ()
.如果真结束

节点_置位置 (取句柄 (), 位置.X, 位置.Y, 位置.Z)


.子程序 取位置, 自定义_三维向量, 公开, 
.局部变量 三, 小数型, , "3", 
.局部变量 位, 自定义_三维向量, , , 

节点_取位置 (取句柄 (), 三, 取数组成员数 (三))
赋值 (位.X, 三 [1])
赋值 (位.Y, 三 [2])
赋值 (位.Z, 三 [3])
返回 (位)

.子程序 置缩放, 空白型, 公开, 
.参数 缩放, 自定义_三维向量, , 

.如果真 (等于 (取句柄 (), 0))
    返回 ()
.如果真结束

节点_置缩放 (取句柄 (), 缩放.X, 缩放.Y, 缩放.Z)


.子程序 取缩放, 自定义_三维向量, 公开, 
.局部变量 三, 小数型, , "3", 
.局部变量 缩, 自定义_三维向量, , , 

节点_取缩放 (取句柄 (), 三, 取数组成员数 (三))
赋值 (缩.X, 三 [1])
赋值 (缩.Y, 三 [2])
赋值 (缩.Z, 三 [3])
返回 (缩)



.子程序 置缩放继承, 空白型, 公开, 
.参数 继承, 逻辑型, , 是否继承

.如果真 (等于 (取句柄 (), 0))
    返回 ()
.如果真结束

节点_置缩放继承 (取句柄 (), 继承)


.子程序 取缩放继承, 逻辑型, 公开, 
返回 (节点_取缩放继承 (取句柄 ()))


.子程序 缩放, 空白型, 公开, 
.参数 缩放值, 自定义_三维向量, , 

.如果真 (等于 (取句柄 (), 0))
    返回 ()
.如果真结束

节点_缩放 (取句柄 (), 缩放值.X, 缩放值.Y, 缩放值.Z)


.子程序 位移, 空白型, 公开, 
.参数 位移, 自定义_三维向量, , 

.如果真 (等于 (取句柄 (), 0))
    返回 ()
.如果真结束

节点_位移 (取句柄 (), 位移.X, 位移.Y, 位移.Z)


.子程序 旋转, 空白型, 公开, 
.参数 度数, 小数型, , 旋转的度数

.如果真 (等于 (取句柄 (), 0))
    返回 ()
.如果真结束

节点_旋转 (取句柄 (), 度数)


.子程序 倾斜, 空白型, 公开, 
.参数 度数, 小数型, , 倾斜的度数

.如果真 (等于 (取句柄 (), 0))
    返回 ()
.如果真结束

节点_倾斜 (取句柄 (), 度数)


.子程序 偏, 空白型, 公开, 
.参数 度数, 小数型, , 倾斜的度数

.如果真 (等于 (取句柄 (), 0))
    返回 ()
.如果真结束

节点_偏 (取句柄 (), 度数)


.子程序 绕轴旋转, 空白型, 公开, 
.参数 旋转1, 自定义_三维向量, , 
.参数 孤度, 小数型, , 

.如果真 (等于 (取句柄 (), 0))
    返回 ()
.如果真结束

节点_绕轴旋转 (取句柄 (), 旋转1.X, 旋转1.Y, 旋转1.Z, 孤度)


.子程序 四元素旋转, 空白型, 公开, 
.参数 四元素, 自定义_四元素, , 

.如果真 (等于 (取句柄 (), 0))
    返回 ()
.如果真结束

 ' 节点_四元素旋转 (取句柄 (), 四元素.W, 四元素.X, 四元素.Y, 四元素.Z)


.子程序 增加子节点, 空白型, 公开, 
.参数 子节点句柄, 整数型, , 要增加的子节点句柄

.如果真 (等于 (取句柄 (), 0))
    返回 ()
.如果真结束

节点_增加子节点 (取句柄 (), 子节点句柄)


.子程序 取子节点个数, 整数型, 公开, 
返回 (节点_取子节点个数 (取句柄 ()))


.子程序 索引取子节点, 整数型, 公开, 返回子节点句柄，失败返回－1
.参数 索引, 整数型, , 子节点索引

返回 (节点_索引取子节点 (取句柄 (), 索引))


.子程序 名称取子节点, 整数型, 公开, 返回子节点句柄，失败返回－1
.参数 名称, 文本型, , 子节点名称

返回 (节点_名称取子节点 (取句柄 (), 名称))



.子程序 索引移除子节点, 空白型, 公开, 
.参数 索引, 整数型, , 子节点索引

节点_索引移除子节点 (取句柄 (), 索引)


.子程序 名称移除子节点, 空白型, 公开, 
.参数 名称, 文本型, , 子节点名称

节点_名称移除子节点 (取句柄 (), 名称)


.子程序 移除全部, 空白型, 公开, 移除全部子节点
节点_移除全部 (取句柄 ())


.子程序 取起源原点, 自定义_四元素, 公开, 
.局部变量 四, 小数型, , "4", 
.局部变量 四元素, 自定义_四元素, , , 

节点_取起源原点 (取句柄 (), 四, 取数组成员数 (四))
赋值 (四元素.W, 四 [1])
赋值 (四元素.X, 四 [2])
赋值 (四元素.Y, 四 [3])
赋值 (四元素.Z, 四 [4])
返回 (四元素)


.子程序 取起源位置, 自定义_三维向量, 公开, 
.局部变量 三, 小数型, , "3", 
.局部变量 三维向量, 自定义_三维向量, , , 

节点_取起源位置 (取句柄 (), 三, 取数组成员数 (三))
赋值 (三维向量.X, 三 [1])
赋值 (三维向量.Y, 三 [2])
赋值 (三维向量.Z, 三 [3])
返回 (三维向量)



.子程序 取起源缩放, 自定义_三维向量, 公开, 
.局部变量 三, 小数型, , "3", 
.局部变量 三维向量, 自定义_三维向量, , , 

节点_取起源缩放 (取句柄 (), 三, 取数组成员数 (三))
赋值 (三维向量.X, 三 [1])
赋值 (三维向量.Y, 三 [2])
赋值 (三维向量.Z, 三 [3])
返回 (三维向量)


.子程序 取最初原点, 自定义_三维向量, 公开, 
.局部变量 三, 小数型, , "3", 
.局部变量 三维向量, 自定义_三维向量, , , 

节点_取最初原点 (取句柄 (), 三, 取数组成员数 (三))
赋值 (三维向量.X, 三 [1])
赋值 (三维向量.Y, 三 [2])
赋值 (三维向量.Z, 三 [3])
返回 (三维向量)


.子程序 取世界位置, 自定义_三维向量, 公开, 
.局部变量 三, 小数型, , "3", 
.局部变量 三维向量, 自定义_三维向量, , , 

节点_取世界位置 (取句柄 (), 三, 取数组成员数 (三))
赋值 (三维向量.X, 三 [1])
赋值 (三维向量.Y, 三 [2])
赋值 (三维向量.Z, 三 [3])
返回 (三维向量)


.子程序 取世界原点, 自定义_三维向量, 公开, 
.局部变量 三, 小数型, , "3", 
.局部变量 三维向量, 自定义_三维向量, , , 

节点_取世界原点 (取句柄 (), 三, 取数组成员数 (三))
赋值 (三维向量.X, 三 [1])
赋值 (三维向量.Y, 三 [2])
赋值 (三维向量.Z, 三 [3])
返回 (三维向量)



.子程序 取世界变换, 自定义_四维距阵, 公开, 
.局部变量 四, 小数型, , "16", 
.局部变量 四维距阵, 自定义_四维距阵, , , 

节点_取世界变换 (取句柄 (), 四, 取数组成员数 (四))
赋值 (四维距阵.a1, 四 [1])
赋值 (四维距阵.a2, 四 [2])
赋值 (四维距阵.a3, 四 [3])
赋值 (四维距阵.a4, 四 [4])
赋值 (四维距阵.b1, 四 [5])
赋值 (四维距阵.b2, 四 [6])
赋值 (四维距阵.b3, 四 [7])
赋值 (四维距阵.b4, 四 [8])
赋值 (四维距阵.c1, 四 [9])
赋值 (四维距阵.c2, 四 [10])
赋值 (四维距阵.c3, 四 [11])
赋值 (四维距阵.c4, 四 [12])
赋值 (四维距阵.d1, 四 [13])
赋值 (四维距阵.d2, 四 [14])
赋值 (四维距阵.d3, 四 [15])
赋值 (四维距阵.d4, 四 [16])
返回 (四维距阵)


.子程序 取视点深度, 小数型, 公开, 
.参数 摄像机句柄, 整数型, , 摄像机句柄

返回 (节点_取视点深度 (取句柄 (), 摄像机句柄))


.类模块 平面, 基句柄类, , 

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 创建, 空白型, 公开, 
置句柄 (平面_创建 ())


.子程序 销毁, 空白型, 公开, 
平面_销毁 (取句柄 ())

.子程序 法线创建, 空白型, 公开, 
.参数 法线X, 小数型, , 
.参数 法线Y, 小数型, , 
.参数 法线Z, 小数型, , 
.参数 距离, 小数型, , 

置句柄 (平面_法线创建 (法线X, 法线Y, 法线Z, 距离))


.子程序 法线点创建, 空白型, 公开, 
.参数 法线X, 小数型, , 
.参数 法线Y, 小数型, , 
.参数 法线Z, 小数型, , 
.参数 点X, 小数型, , 
.参数 点Y, 小数型, , 
.参数 点Z, 小数型, , 

置句柄 (平面_法线点创建 (法线X, 法线Y, 法线Z, 点X, 点Y, 点Z))


.子程序 点点点创建, 空白型, 公开, 
.参数 点1X, 小数型, , 
.参数 点1Y, 小数型, , 
.参数 点1Z, 小数型, , 
.参数 点2X, 小数型, , 
.参数 点2Y, 小数型, , 
.参数 点2Z, 小数型, , 
.参数 点3X, 小数型, , 
.参数 点3Y, 小数型, , 
.参数 点3Z, 小数型, , 

置句柄 (平面_点点点创建 (点1X, 点1Y, 点1Z, 点2X, 点2Y, 点2Z, 点3X, 点3Y, 点3Z))


.子程序 取面, 整数型, 公开, 0为无，1为正面，2为反面
.参数 点X, 小数型, , 
.参数 点Y, 小数型, , 
.参数 点Z, 小数型, , 

返回 (平面_取面 (取句柄 (), 点X, 点Y, 点Z))



.子程序 取距离, 小数型, 公开, 
.参数 点X, 小数型, , 
.参数 点Y, 小数型, , 
.参数 点Z, 小数型, , 

返回 (平面_取距离 (取句柄 (), 点X, 点Y, 点Z))


.子程序 重定义, 空白型, , 
.参数 点1X, 小数型, , 
.参数 点1Y, 小数型, , 
.参数 点1Z, 小数型, , 
.参数 点2X, 小数型, , 
.参数 点2Y, 小数型, , 
.参数 点2Z, 小数型, , 
.参数 点3X, 小数型, , 
.参数 点3Y, 小数型, , 
.参数 点3Z, 小数型, , 

平面_重定义 (取句柄 (), 点1X, 点1Y, 点1Z, 点2X, 点2Y, 点2Z, 点3X, 点3Y, 点3Z)


.类模块 光线, 基句柄类, , 

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 点创建, 空白型, 公开, 
.参数 原点X坐标, 小数型, , 
.参数 原点Y坐标, 小数型, , 
.参数 原点Z坐标, 小数型, , 
.参数 方向X坐标, 小数型, , 
.参数 方向Y坐标, 小数型, , 
.参数 方向Z坐标, 小数型, , 

置句柄 (光线_点创建 (原点X坐标, 原点Y坐标, 原点Z坐标, 方向X坐标, 方向Y坐标, 方向Z坐标))


.子程序 销毁, 空白型, 公开, 
光线_销毁 (取句柄 ())

.子程序 置方向, 空白型, 公开, 
.参数 方向X, 小数型, , 光线方向
.参数 方向Y, 小数型, , 
.参数 方向Z, 小数型, , 

.如果真 (等于 (取句柄 (), 0))
    返回 ()
.如果真结束

光线_置方向 (取句柄 (), 方向X, 方向Y, 方向Z)

.子程序 置原点, 空白型, 公开, 
.参数 原点X, 小数型, , 光线原点
.参数 原点Y, 小数型, , 
.参数 原点Z, 小数型, , 

.如果真 (等于 (取句柄 (), 0))
    返回 ()
.如果真结束

光线_置原点 (取句柄 (), 原点X, 原点Y, 原点Z)


.类模块 光线场景查询, 基句柄类, , 

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 置光线, 空白型, 公开, 
.参数 光线句柄, 整数型, , 光线句柄

.如果真 (等于 (未知函数_67181516 (), 0))
    返回 ()
.如果真结束

光线场景查询_置光线 (取句柄 (), 光线句柄)


.子程序 取相交点, 自定义_三维向量, 公开, 
.局部变量 返回向量, 自定义_三维向量, , , 
.局部变量 相交点坐标, 小数型, , "10", 

赋值 (返回向量.X, 0)
赋值 (返回向量.Y, 0)
赋值 (返回向量.Z, 0)

.如果真 (等于 (取句柄 (), 0))
    返回 (返回向量)
.如果真结束

光线场景查询_取相交点 (取句柄 (), 相交点坐标, 取数组成员数 (相交点坐标))
赋值 (返回向量.X, 相交点坐标 [1])
赋值 (返回向量.Y, 相交点坐标 [2])
赋值 (返回向量.Z, 相交点坐标 [3])

返回 (返回向量)


.类模块 渲染目标, 基句柄类, , 

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用



.子程序 取名称, 文本型, 公开, 
.局部变量 名称, 文本型, , , 
.局部变量 新大小, 整数型, , , 

赋值 (名称, 取空白文本 (200))
赋值 (新大小, 渲染目标_取名称 (取句柄 (), 名称, 取文本长度 (名称)))
.如果真 (大于 (新大小, 0))
    赋值 (名称, 取空白文本 (新大小))
    渲染目标_取名称 (取句柄 (), 名称, 取文本长度 (名称))
.如果真结束

返回 (名称)




.子程序 更新, 空白型, 公开, 
渲染目标_更新 (取句柄 ())


.子程序 增加视口, 整数型, 公开, 返回视口句柄
.参数 摄像机句柄, 整数型, , 

返回 (渲染目标_增加视口 (取句柄 (), 摄像机句柄))


.子程序 增加位置视口, 整数型, 公开, 返回视口句柄
.参数 摄像机句柄, 整数型, , 
.参数 深度, 整数型, , 
.参数 左, 整数型, , 
.参数 右, 整数型, , 
.参数 宽, 整数型, , 
.参数 高, 整数型, , 

返回 (渲染目标_增加位置视口 (取句柄 (), 摄像机句柄, 深度, 左, 右, 宽, 高))


.子程序 是否激活, 逻辑型, 公开, 
返回 (渲染目标_是否激活 (取句柄 ()))


.子程序 置激活, 空白型, 公开, 
.参数 激活, 逻辑型, , 是否激活

渲染目标_置激活 (取句柄 (), 激活)


.子程序 取最后帧数, 整数型, 公开, 
返回 (渲染目标_取最后帧数 (取句柄 ()))


.子程序 取平均帧数, 整数型, 公开, 
返回 (渲染目标_取平均帧数 (取句柄 ()))


.子程序 取最大帧数, 整数型, 公开, 
返回 (渲染目标_取最大帧数 (取句柄 ()))


.子程序 取最小帧数, 整数型, 公开, 
返回 (渲染目标_取最小帧数 (取句柄 ()))


.子程序 取三角形数, 整数型, 公开, 
返回 (渲染目标_取三角形数 (取句柄 ()))



.子程序 取最大帧时间, 小数型, 公开, 
返回 (渲染目标_取最大帧时间 (取句柄 ()))


.子程序 取最小帧时间, 整数型, 公开, 
返回 (渲染目标_取最小帧时间 (取句柄 ()))


.子程序 取视口, 整数型, 公开, 
.参数 序号, 整数型, , 

.如果真 (等于 (取句柄 (), 0))
    返回 (0)
.如果真结束

返回 (渲染目标_取视口 (取句柄 (), 序号))


.类模块 渲染窗口, 渲染目标, , 

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 更新, 空白型, 公开, 
渲染窗口_更新 (取句柄 ())


.子程序 是否主窗口, 逻辑型, 公开, 
返回 (渲染窗口_是否主窗口 (取句柄 ()))


.子程序 更改大小, 空白型, 公开, 
.参数 宽, 整数型, , 
.参数 高, 整数型, , 

渲染窗口_更改大小 (取句柄 (), 宽, 高)


.子程序 更改位置, 空白型, 公开, 
.参数 左, 整数型, , 
.参数 上, 整数型, , 

渲染窗口_更改位置 (取句柄 (), 左, 上)


.子程序 是否关闭, 逻辑型, 公开, 
返回 (渲染窗口_是否关闭 (取句柄 ()))


.子程序 交换缓冲, 整数型, 公开, 
.参数 异步, 逻辑型, , 

返回 (渲染窗口_交换缓冲 (取句柄 (), 异步))


.子程序 纹理剪切, 逻辑型, 公开, 
返回 (渲染窗口_纹理剪切 (取句柄 ()))


.类模块 管理资源组, 基句柄类, , 

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 创建, 空白型, 公开, 
置句柄 (管理资源组_创建 ())


.子程序 取单件, 整数型, 公开, 返回本对象的全局唯一句柄
返回 (管理资源组_取单件 ())


.子程序 创建资源组, 逻辑型, 公开, 
.参数 名称, 文本型, , 资源组名称

返回 (管理资源组_创建资源组 (取句柄 (), 名称))


.子程序 初始化资源组, 逻辑型, 公开, 
.参数 名称, 文本型, , 资源组名称

返回 (管理资源组_初始化资源组 (取句柄 (), 名称))


.子程序 初始化所有资源组, 逻辑型, 公开, 
返回 (管理资源组_初始化所有资源组 (取句柄 ()))


.子程序 加载资源组, 逻辑型, 公开, 
.参数 名称, 文本型, , 资源组名称
.参数 是否加载主资源, 逻辑型, , 是否是主资源
.参数 是否加载世界几何体, 逻辑型, , 

返回 (管理资源组_加载资源组 (取句柄 (), 名称, 是否加载主资源, 是否加载世界几何体))


.子程序 卸载资源组, 逻辑型, 公开, 
.参数 名称, 文本型, , 资源组名称

返回 (管理资源组_卸载资源组 (取句柄 (), 名称))


.子程序 清理资源组, 逻辑型, 公开, 
.参数 名称, 文本型, , 资源组名称

返回 (管理资源组_清理资源组 (取句柄 (), 名称))


.子程序 销毁资源组, 逻辑型, 公开, 
.参数 名称, 文本型, , 资源组名称

返回 (管理资源组_销毁资源组 (取句柄 (), 名称))


.子程序 增加资源定位, 逻辑型, 公开, 
.参数 位置, 文本型, , 资源组的位置，路径和文件名
.参数 资源类型, 文本型, , 资源类型
.参数 资源组名称, 文本型, , 
.参数 是否递归, 逻辑型, , 

返回 (管理资源组_增加资源定位 (取句柄 (), 位置, 资源类型, 资源组名称, 是否递归))


.子程序 删除资源定位, 逻辑型, 公开, 
.参数 位置, 文本型, , 资源组的位置，路径和文件名
.参数 资源组名称, 文本型, , 

返回 (管理资源组_删除资源定位 (取句柄 (), 位置, 资源组名称))


.子程序 卸载管理资源组, 逻辑型, 公开, 
返回 (管理资源组_卸载管理资源组 (取句柄 ()))


.子程序 取世界资源组名称, 文本型, 公开, 取世界资源组的名称，成功返回世界资源组画名称，失败返回空文本
.局部变量 临名称, 文本型, , , 
.局部变量 返回值, 整数型, , , 

赋值 (临名称, 取空白文本 (256))

赋值 (返回值, 管理资源组_取世界资源组名称 (取句柄 (), 临名称, 256))

.如果真 (不等于 (返回值, 0))
    .如果 (等于 (返回值, -1)) ' 取名称失败，返回空文本
        返回 (“”)
    .否则
         ' 缓冲区不足，重新分配缓冲区再次取名称
        赋值 (临名称, 取空白文本 (返回值))
        赋值 (返回值, 管理资源组_取世界资源组名称 (取句柄 (), 临名称, 返回值))
        
        .如果真 (等于 (返回值, -1))
            返回 (“”)
        .如果真结束
        
    .如果结束
    
.如果真结束

 ' 取名称成功，返回名称
返回 (临名称)

.子程序 链接世界几何体, 空白型, 公开, 
.参数 资源组名称, 文本型, , 资源组名称
.参数 世界几何体, 文本型, , 
.参数 场景管理句柄, 整数型, , 

管理资源组_链接世界几何体 (取句柄 (), 资源组名称, 世界几何体, 场景管理句柄)


.类模块 根, 基句柄类, , 

.程序集变量 渲染窗口句柄, 整数型, , , 
.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用
.局部变量 环境变量, 文本型, , , 
.局部变量 路径, 文本型, , , 

赋值 (路径, 相加 (取文本注册项 (#现行用户, “software\flysky\e\install\path”, ), “OgreDll”))

置DLL装载目录 (路径)
赋值 (环境变量, 相加 (读环境变量 (“PATH”), “;”, 路径))
.如果真 (等于 (寻找文本 (读环境变量 (“PATH”), 路径, , 假), -1))
    写环境变量 (“PATH”, 环境变量)
.如果真结束

赋值 (渲染窗口句柄, 0)

.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用
根_销毁 (取句柄 ())


.子程序 创建, 空白型, 公开, 
.如果真 (等于 (取句柄 (), 0))
    置句柄 (根_创建 ())
.如果真结束


.子程序 显示配置窗口, 逻辑型, 公开, 
返回 (根_显示配置窗口 (取句柄 ()))


.子程序 名创建, 空白型, 公开, 
.参数 插件文件名, 文本型, , 
.参数 配置文件名, 文本型, , 
.参数 日志文件名, 文本型, , 

置句柄 (根_名创建 (插件文件名, 配置文件名, 日志文件名))


.子程序 取单件, 整数型, 公开, 返回根句柄
返回 (根_取单件 ())


.子程序 渲染一帧, 空白型, 公开, 
根_渲染一帧 (取句柄 ())


.子程序 初始化窗口, 整数型, 公开, 返回渲染窗口句柄
.参数 是否自动创建窗口, 逻辑型, , 
.参数 窗口标题, 文本型, , 

.如果真 (等于 (取文本长度 (窗口标题), 0))
    赋值 (窗口标题, “OGRE渲染窗口”)
.如果真结束

赋值 (渲染窗口句柄, 根_初始化窗口 (取句柄 (), 是否自动创建窗口, 窗口标题))
返回 (渲染窗口句柄)

.子程序 创建渲染窗口, 整数型, 公开, 
.参数 名称, 文本型, , 窗口名称
.参数 宽, 整数型, , 窗口宽
.参数 高, 整数型, , 窗口高
.参数 是否全屏, 逻辑型, , 
.参数 标题, 文本型, , 
.参数 色深, 整数型, 可空, 颜色深,16或32
.参数 左, 整数型, 可空, 窗口左边位置
.参数 顶, 整数型, 可空, 窗口顶边位置
.参数 深度缓冲, 逻辑型, 可空, 是否用深度缓冲
.参数 窗口句柄, 整数型, 可空, 
.参数 父窗口句柄, 整数型, 可空, 
.参数 全屏抗锯齿系数, 整数型, 可空, 
.参数 刷新率, 小数型, 可空, 
.参数 是否同步, 逻辑型, 可空, 

.如果真 (等于 (是否为空 (色深), 真))
    赋值 (色深, 32)
.如果真结束

.如果真 (等于 (是否为空 (左), 真))
    赋值 (左, 0)
.如果真结束

.如果真 (等于 (是否为空 (顶), 真))
    赋值 (顶, 0)
.如果真结束

.如果真 (等于 (是否为空 (深度缓冲), 真))
    赋值 (深度缓冲, 真)
.如果真结束

.如果真 (等于 (是否为空 (窗口句柄), 真))
    赋值 (窗口句柄, -1)
.如果真结束

.如果真 (等于 (是否为空 (父窗口句柄), 真))
    赋值 (父窗口句柄, -1)
.如果真结束

.如果真 (等于 (是否为空 (全屏抗锯齿系数), 真))
    赋值 (全屏抗锯齿系数, 0)
.如果真结束

.如果真 (等于 (是否为空 (刷新率), 真))
    赋值 (刷新率, 70)
.如果真结束

.如果真 (等于 (是否为空 (是否同步), 真))
    赋值 (是否同步, 假)
.如果真结束

返回 (根_创建渲染窗口 (取句柄 (), 名称, 宽, 高, 是否全屏, 标题, 色深, 左, 顶, 深度缓冲, 窗口句柄, 父窗口句柄, 全屏抗锯齿系数, 刷新率, 是否同步))


.子程序 取场景管理, 整数型, 公开, 场景管理句柄
.参数 场景类型, 整数型, , 本参数可以是0,1,2,3,4, 0:表示一般场景、1表示室外近场景、2表示室外远场景、3表示室外更远场景、4表示室内场景

返回 (根_取场景管理 (取句柄 (), 场景类型))


.子程序 加载插件, 逻辑型, 公开, 
.参数 插件名, 文本型, , 

返回 (根_加载插件 (取句柄 (), 插件名))


.子程序 卸载插件, 空白型, 公开, 
.参数 插件名, 文本型, , 

根_卸载插件 (取句柄 (), 插件名)


.子程序 取活动渲染目标, 整数型, 公开, 
.参数 渲染目标句柄, 整数型, 数组, 渲染目标句柄数组

返回 (根_取活动渲染目标 (取句柄 (), 渲染目标句柄, 取数组成员数 (渲染目标句柄)))


.子程序 置渲染系统, 逻辑型, 公开, 
.参数 渲染系统句柄, 整数型, , 

返回 (根_置渲染系统 (取句柄 (), 渲染系统句柄))


.类模块 场景管理, 基句柄类, , 

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 置环境光, 空白型, 公开, 
.参数 颜色, 自定义_颜色值, , 

场景管理_置环境光 (取句柄 (), 颜色.红色值, 颜色.绿色值, 颜色.蓝色值, 颜色.透明值)


.子程序 创建摄像机, 整数型, 公开, 返回摄像机句柄
.参数 摄像机名, 文本型, , 

返回 (场景管理_创建摄像机 (取句柄 (), 摄像机名))


.子程序 设置阴影, 空白型, 公开, 
.参数 阴影种类, 整数型, , 0:无阴影、1:模板调节、2:模板附加、3:纹理调节

场景管理_设置阴影 (取句柄 (), 阴影种类)


.子程序 创建实体, 整数型, 公开, 返回实体句柄
.参数 实体名, 文本型, , 
.参数 模型名, 文本型, , 

返回 (场景管理_创建实体 (取句柄 (), 实体名, 模型名))


.子程序 取场景根节点, 整数型, 公开, 返回节点句柄
返回 (场景管理_取场景根节点 (取句柄 ()))


.子程序 创建光线查询, 整数型, 公开, 
.参数 光线句柄, 整数型, , 
.参数 掩码, 整数型, 可空, 

.如果真 (等于 (是否为空 (掩码), 真))
    赋值 (掩码, 4294967295)
.如果真结束

返回 (场景管理_创建光线查询 (取句柄 (), 光线句柄, 掩码))


.子程序 清除场景, 逻辑型, 公开, 
返回 (场景管理_清除场景 (取句柄 ()))


.子程序 创建灯光, 整数型, 公开, 返回灯光句柄
.参数 灯光名称, 文本型, , 

返回 (场景管理_创建灯光 (取句柄 (), 灯光名称))


.子程序 创建公告板, 整数型, 公开, 返回公告板句柄
.参数 公告板名称, 文本型, , 

返回 (场景管理_创建公告板 (取句柄 (), 公告板名称))



.子程序 创建静态几何体, 整数型, 公开, 返回静态几何体句柄
.参数 静态几何体名称, 文本型, , 

返回 (场景管理_创建静态几何体 (取句柄 (), 静态几何体名称))


.子程序 创建动画, 整数型, 公开, 
.参数 动画名称, 文本型, , 
.参数 长度, 小数型, , 

返回 (场景管理_创建动画 (取句柄 (), 动画名称, 长度))


.子程序 创建动画状态, 整数型, 公开, 返回动画状态句柄
.参数 动画状态名称, 文本型, , 

返回 (场景管理_创建动画状态 (取句柄 (), 动画状态名称))


.子程序 显示边框, 空白型, 公开, 
.参数 是否显示, 逻辑型, , 

场景管理_显示边框 (取句柄 (), 是否显示)

.子程序 取是否显示边框, 逻辑型, 公开, 
返回 (场景管理_取是否显示边框 (取句柄 ()))


.子程序 清除渲染器队列列表, 空白型, 公开, 
场景管理_清除渲染器队列列表 (取句柄 ())


.子程序 加入项目, 空白型, 公开, 
.参数 参队列标识, 整数型, , 

场景管理_加入项目 (取句柄 (), 参队列标识)


.子程序 置队列处理模式, 空白型, 公开, 
.参数 参模型, 整数型, , 

场景管理_置队列处理模式 (取句柄 (), 参模型)


.子程序 取暗示视口位置, 自定义_三维向量, 公开, 
.参数 参是否任意, 逻辑型, , 

.局部变量 局位置, 小数型, , "5", 
.局部变量 返回向量, 自定义_三维向量, , , 
.局部变量 位置坐标, 小数型, , "10", 

赋值 (返回向量.X, 0)
赋值 (返回向量.Y, 0)
赋值 (返回向量.Z, 0)

.如果真 (等于 (取句柄 (), 0))
    返回 (返回向量)
.如果真结束

场景管理_取暗示视口位置 (取句柄 (), 参是否任意, 位置坐标, 取数组成员数 (位置坐标))
赋值 (返回向量.X, 位置坐标 [1])
赋值 (返回向量.Y, 位置坐标 [2])
赋值 (返回向量.Z, 位置坐标 [3])

返回 (返回向量)


.子程序 取暗示视口方位, 自定义_四元素, 公开, 
.参数 参是否任意, 逻辑型, , 

.局部变量 局方位, 小数型, , "5", 
.局部变量 返回向量, 自定义_四元素, , , 
.局部变量 位置坐标, 小数型, , "10", 

赋值 (返回向量.X, 0)
赋值 (返回向量.Y, 0)
赋值 (返回向量.Z, 0)
赋值 (返回向量.W, 0)

.如果真 (等于 (取句柄 (), 0))
    返回 (返回向量)
.如果真结束

场景管理_取暗示视口方位 (取句柄 (), 参是否任意, 位置坐标, 取数组成员数 (位置坐标))
赋值 (返回向量.W, 位置坐标 [1])
赋值 (返回向量.X, 位置坐标 [2])
赋值 (返回向量.Y, 位置坐标 [3])
赋值 (返回向量.Z, 位置坐标 [4])

返回 (返回向量)


.子程序 置天空穹, 空白型, 公开, 
.参数 是否启用, 逻辑型, , 真为启用天空穹、假为关闭天空穹
.参数 材质名称, 文本型, , 天空穹使用的材质名称
.参数 曲率, 小数型, 可空, 天空穹的曲率。取值最好为2 - 65，缺省值为10
.参数 铺嵌, 小数型, 可空, 天空材质的铺嵌回数，缺省值为8
.参数 距离, 小数型, 可空, 与中央镜头的距离，缺省值为4000
.参数 是否首先绘制, 逻辑型, 可空, 确保天空在其它一切物体之外，缺省值为真

.如果真 (等于 (是否为空 (曲率), 真))
    赋值 (曲率, 10)
.如果真结束

.如果真 (等于 (是否为空 (铺嵌), 真))
    赋值 (铺嵌, 8)
.如果真结束

.如果真 (等于 (是否为空 (距离), 真))
    赋值 (距离, 4000)
.如果真结束

.如果真 (等于 (是否为空 (是否首先绘制), 真))
    赋值 (是否首先绘制, 真)
.如果真结束

场景管理_置天空穹 (取句柄 (), 是否启用, 材质名称, 曲率, 铺嵌, 距离, 是否首先绘制)


.子程序 置烟雾模式, 空白型, 公开, 
.参数 烟雾模式, 整数型, 可空, 要设置的烟雾模式。为以下值之一：0、无烟雾；1、公式模式；2、公式模式2；3、线性模式。
.参数 烟雾颜色值, 自定义_颜色值, 可空, 烟雾颜色值
.参数 烟雾浓度, 小数型, 可空, 
.参数 线性开始, 小数型, 可空, 只有当烟雾模式为线性时有效
.参数 线性结束, 小数型, 可空, 

.如果真 (等于 (取句柄 (), 0))
    返回 ()
.如果真结束

.如果真 (等于 (是否为空 (烟雾模式), 真))
    赋值 (烟雾模式, 0)
.如果真结束

.如果真 (等于 (是否为空 (烟雾颜色值), 真))
    赋值 (烟雾颜色值.红色值, 1)
    赋值 (烟雾颜色值.绿色值, 1)
    赋值 (烟雾颜色值.蓝色值, 1)
    赋值 (烟雾颜色值.透明值, 1)
.如果真结束

.如果真 (等于 (是否为空 (烟雾浓度), 真))
    赋值 (烟雾浓度, 0.001)
.如果真结束

.如果真 (等于 (是否为空 (线性开始), 真))
    赋值 (线性开始, 0)
.如果真结束

.如果真 (等于 (是否为空 (线性结束), 真))
    赋值 (线性结束, 1)
.如果真结束

场景管理_置烟雾模式 (取句柄 (), 烟雾模式, 烟雾颜色值.红色值, 烟雾颜色值.绿色值, 烟雾颜色值.蓝色值, 烟雾颜色值.透明值, 烟雾浓度, 线性开始, 线性结束)


.子程序 置世界几何体, 空白型, 公开, 
.参数 文件名, 文本型, , 

.如果真 (等于 (取句柄 (), 0))
    返回 ()
.如果真结束

场景管理_置世界几何体 (取句柄 (), 文件名)


.子程序 设置天空, 空白型, 公开, 
.参数 是否启用, 逻辑型, , 
.参数 材质名, 文本型, , 
.参数 距离, 小数型, , 
.参数 是否第一次画, 逻辑型, , 
.参数 四元素_w, 小数型, , 
.参数 四元素_x, 小数型, , 
.参数 四元素_y, 小数型, , 
.参数 四元素_z, 小数型, , 
.参数 组名, 文本型, , 

场景管理_设置天空 (取句柄 (), 是否启用, 材质名, 距离, 是否第一次画, 四元素_w, 四元素_x, 四元素_y, 四元素_z, 组名)


.子程序 设置阴影颜色, 空白型, 公开, 
.参数 红色, 小数型, , 
.参数 绿色, 小数型, , 
.参数 篮色, 小数型, , 
.参数 透明, 小数型, , 

场景管理_设置阴影颜色 (取句柄 (), 红色, 绿色, 篮色, 透明)


.类模块 场景节点, 节点, , 

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 关联对象, 逻辑型, 公开, 
.参数 对象, 可动物体, , 

.如果 (等于 (对象.取标识 (), 1))
    返回 (场景节点_关联对象 (取句柄 (), 对象.取句柄 (), 1))
.否则
    返回 (场景节点_关联对象 (取句柄 (), 对象.取句柄 (), 2))
.如果结束



.子程序 创建场景子节点, 整数型, 公开, 返回场景子节点句柄
返回 (场景节点_创建场景子节点 (取句柄 ()))


.子程序 名称创建场景子节点, 整数型, 公开, 返回场景子节点句柄
.参数 场景子节点名称, 文本型, , 

返回 (场景节点_名称创建场景子节点 (取句柄 (), 场景子节点名称))


.子程序 向量创建场景子节点, 整数型, 公开, 返回场景子节点句柄
.参数 偏移量X, 小数型, , 
.参数 偏移量Y, 小数型, , 
.参数 偏移量Z, 小数型, , 

返回 (场景节点_向量创建场景子节点 (取句柄 (), 偏移量X, 偏移量Y, 偏移量Z))


.子程序 分离对象, 空白型, 公开, 
.参数 对象名, 文本型, , 

场景节点_分离对象 (取句柄 (), 对象名)


.子程序 显示边框, 空白型, 公开, 
.参数 是否显示, 逻辑型, , 是否显示边框

场景节点_显示边框 (取句柄 (), 是否显示)


.子程序 是否显示, 逻辑型, 公开, 
返回 (场景节点_是否显示 (取句柄 ()))


.子程序 取关联对象, 整数型, 公开, 返回关联对象句柄
.参数 对象名, 文本型, , 关联对象名

返回 (场景节点_取关联对象 (取句柄 (), 对象名))


.子程序 取包围盒, 整数型, 公开, 
返回 (场景节点_取包围盒 (取句柄 ()))


.子程序 置自动跟踪, 空白型, 公开, 
.参数 是否启用, 逻辑型, , 
.参数 场景节点句柄, 整数型, , 
.参数 方向X, 小数型, , 
.参数 方向Y, 小数型, , 
.参数 方向Z, 小数型, , 
.参数 偏移X, 小数型, , 
.参数 偏移Y, 小数型, , 
.参数 偏移Z, 小数型, , 

场景节点_置自动跟踪 (取句柄 (), 是否启用, 场景节点句柄, 方向X, 方向Y, 方向Z, 偏移X, 偏移Y, 偏移Z)


.类模块 骨骼, 基句柄类, , 

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 取名称, 文本型, 公开, 
.局部变量 名称, 文本型, , , 
.局部变量 新大小, 整数型, , , 

赋值 (名称, 取空白文本 (200))
赋值 (新大小, 骨骼_取名称 (取句柄 (), 名称, 取文本长度 (名称)))
.如果真 (大于 (新大小, 0))
    赋值 (名称, 取空白文本 (新大小))
    骨骼_取名称 (取句柄 (), 名称, 取文本长度 (名称))
.如果真结束

返回 (名称)



.子程序 创建骨头, 整数型, 公开, 
返回 (骨骼_创建骨头 (取句柄 ()))


.子程序 编号创建骨头, 整数型, 公开, 
.参数 骨头编号, 短整数型, , 

返回 (骨骼_编号创建骨头 (取句柄 (), 骨头编号))


.子程序 名称创建骨头, 整数型, 公开, 
.参数 名称, 文本型, , 

返回 (骨骼_名称创建骨头 (取句柄 (), 名称))


.子程序 编号名称创建骨头, 整数型, 公开, 
.参数 骨头名称, 文本型, , 
.参数 骨头编号, 短整数型, , 

返回 (骨骼_编号名称创建骨头 (取句柄 (), 骨头名称, 骨头编号))


.子程序 取骨头数, 整数型, 公开, 
返回 (骨骼_取骨头数 (取句柄 ()))


.子程序 取根骨头, 整数型, 公开, 
返回 (骨骼_取根骨头 (取句柄 ()))


.子程序 编号取骨头, 整数型, 公开, 
.参数 骨头编号, 整数型, , 

返回 (骨骼_编号取骨头 (取句柄 (), 骨头编号))


.子程序 名称取骨头, 整数型, 公开, 
.参数 骨头名称, 文本型, , 

返回 (骨骼_名称取骨头 (骨头名称))


.子程序 置绑定样子, 空白型, 公开, 
骨骼_置绑定样子 (取句柄 ())


.子程序 重置, 空白型, 公开, 
骨骼_重置 (取句柄 ())


.子程序 创建动画, 整数型, 公开, 
.参数 动画名称, 文本型, , 
.参数 长度, 整数型, , 

返回 (骨骼_创建动画 (取句柄 (), 动画名称, 长度))


.子程序 取动画, 整数型, 公开, 
.参数 动画名称, 文本型, , 

返回 (骨骼_取动画 (取句柄 (), 动画名称))


.子程序 移除动画, 空白型, 公开, 
.参数 动画名称, 文本型, , 

骨骼_移除动画 (取句柄 (), 动画名称)


.子程序 取动画个数, 整数型, 公开, 
返回 (骨骼_取动画个数 ())


.子程序 序号取动画, 整数型, 公开, 
.参数 动画序号, 短整数型, , 

返回 (骨骼_序号取动画 (取句柄 (), 动画序号))


.子程序 取绑定模式, 整数型, 公开, 
返回 (骨骼_取绑定模式 (取句柄 ()))


.子程序 置绑定模式, 空白型, 公开, 
.参数 绑定模式, 整数型, , 

骨骼_置绑定模式 (取句柄 (), 绑定模式)


.子程序 更新形状, 空白型, 公开, 
骨骼_更新形状 (取句柄 ())


.类模块 骨骼管理, 基句柄类, , 

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 创建, 整数型, 公开, 返回骨骼管理句柄
置句柄 (骨骼管理_创建 ())


.子程序 取单件, 整数型, 公开, 
返回 (骨骼管理_取单件 ())


.子程序 名称创建, 空白型, , 
.参数 文件名, 文本型, , 
.参数 组名, 文本型, , 
.参数 是否手工, 逻辑型, , 
.参数 加载者, 整数型, , 
.参数 创建参数, 整数型, , 

置句柄 (骨骼管理_名称创建 (文件名, 组名, 是否手工, 加载者, 创建参数))


.子程序 移除全部, 空白型, , 
骨骼管理_移除全部 (取句柄 ())


.子程序 名称获取, 整数型, 公开, 
.参数 名称, 文本型, , 

返回 (骨骼管理_名称获取 (取句柄 (), 名称))



.类模块 静态几何体, 基句柄类, , 

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 增加实体, 逻辑型, 公开, 
.参数 实体句柄, 整数型, , 实体句柄
.参数 位置, 自定义_三维向量, , 
.参数 旋转, 自定义_三维向量, , 
.参数 缩放, 自定义_三维向量, , 

返回 (静态几何体_增加实体 (取句柄 (), 实体句柄, 位置.X, 位置.Y, 位置.Z, 旋转.X, 旋转.Y, 旋转.Z, 缩放.X, 缩放.Y, 缩放.Z))


.子程序 置区域维数, 空白型, 公开, 
.参数 大小, 自定义_三维向量, , 

静态几何体_置区域维数 (取句柄 (), 大小.X, 大小.Y, 大小.Z)


.子程序 置原点, 空白型, 公开, 
.参数 原点, 自定义_三维向量, , 

静态几何体_置原点 (取句柄 (), 原点.X, 原点.Y, 原点.Z)


.子程序 建立, 逻辑型, 公开, 
返回 (静态几何体_建立 (取句柄 ()))



.类模块 子实体, 基句柄类, , 

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 取材质名, 文本型, 公开, 
.局部变量 名称, 文本型, , , 
.局部变量 新大小, 整数型, , , 

赋值 (名称, 取空白文本 (200))
赋值 (新大小, 子实体_取材质名 (取句柄 (), 名称, 取文本长度 (名称)))
.如果真 (大于 (新大小, 0))
    赋值 (名称, 取空白文本 (新大小))
    子实体_取材质名 (取句柄 (), 名称, 取文本长度 (名称))
.如果真结束

返回 (名称)



.子程序 置材质名, 空白型, 公开, 
.参数 材质名, 文本型, , 

子实体_置材质名 (取句柄 (), 材质名)


.类模块 子模型, 基句柄类, , 

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 增加骨骼, 空白型, 公开, 
.参数 顶点索引, 整数型, , 
.参数 骨骼索引, 整数型, , 
.参数 重, 小数型, , 

子模型_增加骨骼 (取句柄 (), 顶点索引, 骨骼索引, 重)


.子程序 取索引数据, 空白型, 公开, 
子模型_取索引数据 (取句柄 ())


.子程序 置材质名, 空白型, 公开, 
.参数 材质名, 文本型, , 

子模型_置材质名 (取句柄 (), 材质名)


.子程序 置共享顶点, 空白型, 公开, 
.参数 是否共享顶点, 逻辑型, , 

子模型_置共享顶点 (取句柄 (), 是否共享顶点)


.子程序 取共享顶点, 逻辑型, 公开, 
返回 (子模型_取共享顶点 (取句柄 ()))


.子程序 置顶点数据, 空白型, 公开, 
.参数 顶点数据句柄, 整数型, , 

子模型_置顶点数据 (取句柄 (), 顶点数据句柄)



.子程序 取顶点数据, 整数型, 公开, 
返回 (子模型_取顶点数据 (取句柄 ()))


.子程序 清除骨骼, 空白型, 公开, 
子模型_清除骨骼 (取句柄 ())


.类模块 顶点缓冲绑定, 基句柄类, , 

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 置绑定, 空白型, 公开, 
.参数 索引, 整数型, , 
.参数 硬件顶点缓冲句柄, 整数型, , 

顶点缓冲绑定_置绑定 (取句柄 (), 索引, 硬件顶点缓冲句柄)


.类模块 顶点数据, 基句柄类, , 

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 创建, 空白型, , 
置句柄 (顶点数据_创建 ())


.子程序 置顶点数, 空白型, 公开, 
.参数 顶点数, 整数型, , 

顶点数据_置顶点数 (取句柄 (), 顶点数)



.子程序 取顶点数, 整数型, 公开, 
返回 (顶点数据_取顶点数 (取句柄 ()))


.子程序 置开始顶点, 空白型, 公开, 
.参数 开始顶点, 整数型, , 

顶点数据_置开始顶点 (取句柄 (), 开始顶点)



.子程序 取开始顶点, 整数型, 公开, 
返回 (顶点数据_取开始顶点 (取句柄 ()))

.子程序 取顶点定义, 整数型, 公开, 
返回 (顶点数据_取顶点定义 (取句柄 ()))



.子程序 取顶点缓冲绑定, 整数型, 公开, 
返回 (顶点数据_取顶点缓冲绑定 (取句柄 ()))


.类模块 顶点定义, 基句柄类, , 

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 增加成员, 整数型, 公开, 
.参数 源, 整数型, , 
.参数 偏移, 整数型, , 
.参数 类型, 整数型, , 
.参数 语义, 整数型, , 
.参数 索引, 整数型, , 

返回 (顶点定义_增加成员 (取句柄 (), 源, 偏移, 类型, 语义, 索引))



.子程序 取类型大小, 整数型, 公开, 
.参数 类型, 整数型, , 

返回 (顶点成员_取类型大小 (取句柄 (), 类型))


.类模块 视口, 基句柄类, , 

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 置背景颜色, 空白型, 公开, 
.参数 颜色, 自定义_颜色值, , 

视口_置背景颜色 (取句柄 (), 颜色.红色值, 颜色.绿色值, 颜色.蓝色值, 颜色.透明值)


.子程序 更新, 空白型, 公开, 
视口_更新 (取句柄 ())


.子程序 取摄像机, 整数型, 公开, 
返回 (视口_取摄像机 (取句柄 ()))


.子程序 置摄像机, 空白型, 公开, 
.参数 摄像机句柄, 整数型, , 

视口_置摄像机 (取句柄 (), 摄像机句柄)


.子程序 取左, 小数型, 公开, 
返回 (视口_取左 (取句柄 ()))



.子程序 取顶, 小数型, 公开, 
返回 (视口_取顶 (取句柄 ()))


.子程序 取宽, 小数型, 公开, 
返回 (视口_取宽 (取句柄 ()))

.子程序 取高, 小数型, 公开, 
返回 (视口_取高 (取句柄 ()))


.子程序 取真左, 整数型, 公开, 
返回 (视口_取真左 (取句柄 ()))


.子程序 取真顶, 整数型, 公开, 
返回 (视口_取真顶 (取句柄 ()))

.子程序 取真宽, 整数型, 公开, 
返回 (视口_取真宽 (取句柄 ()))

.子程序 取真高, 整数型, 公开, 
返回 (视口_取真高 (取句柄 ()))


.子程序 置维数, 空白型, 公开, 
.参数 左, 小数型, , 
.参数 顶, 小数型, , 
.参数 宽, 小数型, , 
.参数 高, 小数型, , 

视口_置维数 (取句柄 (), 左, 顶, 宽, 高)


.子程序 取背景颜色, 自定义_颜色值, 公开, 
.局部变量 颜色数组, 小数型, , "4", 
.局部变量 色, 自定义_颜色值, , , 


视口_取背景颜色 (取句柄 (), 颜色数组, 取数组成员数 (颜色数组))
赋值 (色.红色值, 颜色数组 [1])
赋值 (色.绿色值, 颜色数组 [2])
赋值 (色.蓝色值, 颜色数组 [3])
赋值 (色.透明值, 颜色数组 [4])
返回 (色)


.子程序 置每一帧清除, 空白型, 公开, 
.参数 是否清除, 逻辑型, , 

视口_置每一帧清除 (取句柄 (), 是否清除)



.子程序 取每一帧清除, 逻辑型, 公开, 
返回 (视口_取每一帧清除 (取句柄 ()))



.子程序 置重叠启用, 空白型, 公开, 
.参数 是否启用, 逻辑型, , 

视口_置重叠启用 (取句柄 (), 是否启用)


.子程序 取重叠启用, 逻辑型, 公开, 
返回 (视口_取重叠启用 (取句柄 ()))


.类模块 窗口, 基句柄类, , 

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 创建, 空白型, 公开, 
置句柄 (窗口_创建 ())


.子程序 建立, 空白型, 公开, 
.参数 名称, 文本型, , 
.参数 宽, 整数型, , 
.参数 高, 整数型, , 
.参数 是否全屏, 逻辑型, , 
.参数 标题, 文本型, , 
.参数 颜色深, 整数型, , 
.参数 左, 整数型, , 
.参数 顶, 整数型, , 
.参数 深度缓冲, 逻辑型, , 
.参数 窗口句柄, 整数型, , 
.参数 父窗口句柄, 整数型, , 
.参数 全屏抗锯齿系数, 整数型, , 
.参数 刷新率, 小数型, , 
.参数 是否异步, 逻辑型, , 

窗口_建立 (取句柄 (), 宽, 高, 是否全屏, 标题, 颜色深, 左, 顶, 深度缓冲, 窗口句柄, 父窗口句柄, 全屏抗锯齿系数, 刷新率, 是否异步)


.子程序 改大小, 空白型, 公开, 
.参数 宽, 整数型, , 
.参数 高, 整数型, , 

窗口_改大小 (取句柄 (), 宽, 高)


.子程序 改位置, 空白型, 公开, 
.参数 左, 整数型, , 
.参数 顶, 整数型, , 

窗口_改位置 (取句柄 (), 左, 顶)


.子程序 是否关闭, 逻辑型, 公开, 
返回 (窗口_是否关闭 (取句柄 ()))


.子程序 写内容到文件, 空白型, 公开, 
.参数 文件名, 文本型, , 

窗口_写内容到文件 ()

.子程序 交换缓冲, 逻辑型, 公开, 
.参数 是否异步, 逻辑型, , 

返回 (窗口_交换缓冲 (取句柄 ()))


.子程序 纹理剪切, 逻辑型, 公开, 
返回 (窗口_纹理剪切 (取句柄 ()))


.类模块 基句柄类, , , 

.程序集变量 句柄, 整数型, , , 
.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用
赋值 (句柄, 0)

.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 置句柄, 空白型, 公开, 
.参数 参句柄, 整数型, , 

赋值 (句柄, 参句柄)


.子程序 取句柄, 整数型, 公开, 
返回 (句柄)


.类模块 粒子系统管理, 基句柄类, , 

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用
置句柄 (粒子系统管理_取单件 ())

.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 取单件, 整数型, 公开, 返回句柄
返回 (粒子系统管理_取单件 ())


.子程序 创建粒子系统, 整数型, 公开, 返回粒子系统句柄
.参数 名称, 文本型, , 粒子系统的称
.参数 最大值, 整数型, , 最大粒子数
.参数 资源组名称, 文本型, , 


返回 (粒子系统管理_创建粒子系统 (取句柄 (), 名称, 最大值, 资源组名称))


.子程序 模板创建粒子系统, 整数型, 公开, 返回粒子系统句柄
.参数 名称, 文本型, , 粒子系统的名称
.参数 模板名, 文本型, , 模板名

返回 (粒子系统管理_模板创建粒子系统 (取句柄 (), 名称, 模板名))


.类模块 粒子系统, 可动物体, , 

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 取标识, 整数型, 公开, 
返回 (2)

.子程序 快进, 空白型, 公开, 
.参数 时间, 小数型, , 
.参数 间隔, 小数型, 可空, 

.如果真 (等于 (是否为空 (间隔), 真))
    赋值 (间隔, 0.1)
.如果真结束

粒子系统_快进 (取句柄 (), 时间, 间隔)

.程序集 程序集1, , , 

.子程序 _启动子程序, 整数型, , 请在本子程序中放置易模块初始化代码

_临时子程序 () ' 在初始化代码执行完毕后调用测试代码
返回 (0) ' 可以根据您的需要返回任意数值

.子程序 _临时子程序, 空白型, , 
 ' 本名称子程序用作测试程序用，仅在开发及调试环境中有效，编译发布程序前将被系统自动清空，请将所有用作测试的临时代码放在本子程序中。 ***注意不要修改本子程序的名称、参数及返回值类型。



 ' 不属于任何一个程序集、类模块的函数：
