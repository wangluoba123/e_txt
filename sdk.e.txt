 ' 文件类型：Windows模块源码

 ' 程序名称：VisoEngine
 ' 程序描述：Copyright 2009(C) Luck版权所有
 ' 程序作者：本源码来自易语言资源网(www.wodesoft.com)
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：             易语言资源网注意事项
--============   www.wodesoft.com  =============--
* 易语言资源网为易语言官方站、易语言官方论坛提供辅助资源站；本易语言资源网( www.wodesoft.com)所有软件和资料均为软件作者提供和网友推荐发布而来，其版权归该软件和程序源码的合法拥有者所有，本站易语言资源网整理收集仅供易语言用户学习和易语言技术研究探讨使用，不得用于任何商业用途。如果由于以上原因造成的版权纠纷本站概不负责！
* 本站资源未经许可,任何网站不得非法盗链及抄袭本站资源；如引用，请注明来自易语言资源网，谢谢合作！
--============   www.wodesoft.com  =============--
 ' 版本号：1.0
 ' 创建号：0.0



.常量 ThreadHideFromDebugger, "17", , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 5 0 系统核心支持库



 ' 所需要的模块
 ' 创建时钟事件模块 D:\VisoEngine开发\创建时钟事件\创建时钟事件\创建时钟事件.ec
 ' 易语言支持库隐藏模块 C:\Documents and Settings\Administrator\桌面\hide.ec



.DLL命令 IsDebuggerPresent, 整数型, "kernel32.dll", "IsDebuggerPresent", , 

.DLL命令 GetProcessHeap, 整数型, "kernel32.dll", "GetProcessHeap", , 获取调用过程堆句柄

.DLL命令 HeapAlloc, 整数型, "kernel32.dll", "HeapAlloc", , 从堆中分配内存
    .参数 hHeap, 整数型, , 
    .参数 dwFlags, 整数型, , 
    .参数 dwBytes, 整数型, , 

.DLL命令 HeapFree, 整数型, "kernel32.dll", "HeapFree", , 释放从堆中分配的内存
    .参数 hHeap, 整数型, , 
    .参数 dwFlags, 整数型, , 
    .参数 lpMem, 整数型, , 

.DLL命令 GetCurrentProcessId, 整数型, "kernel32.dll", "GetCurrentProcessId", , 获取当前进程一个唯一的标识符  当前的进程标识符

.DLL命令 DebugActiveProcess, 整数型, "kernel32.dll", "DebugActiveProcess", , 连接调试进程
    .参数 dwProcessId, 整数型, , 

.DLL命令 TerminateProcess, 整数型, "kernel32.dll", "TerminateProcess", 公开, 结束一个进程 Long，非零表示成功，零表示失败。会设置GetLastError
    .参数 进程句柄, 整数型, , hProcess Long，指定要中断的一个进程的句柄
    .参数 退出代码, 整数型, , uExitCode Long，进程的一个退出代码

.DLL命令 OpenProcess, 整数型, "kernel32.dll", "OpenProcess", , 
    .参数 访问级别, 整数型, , 2035711完全访问
    .参数 子进程继承, 整数型, , 0为子进程继承
    .参数 进程ID, 整数型, , 要打开的进程标识

.程序集 VisoEngine_Dll, , , VisoEngineProtected

.子程序 _启动子程序, 整数型, , 请在本子程序中放置易模块初始化代码
 ' --========  易语言资源网  (www.wodesoft.com)  ======--
 ' 努力创建完善、持续更新的易语言学习例程源码资源站
 ' --================   www.wodesoft.com  ===========--
 ' --==================   易语言资源网注意事项  ================--
 ' * 易语言资源网为易语言官方站、易语言官方论坛提供辅助资源站；
 ' 本易语言资源网( www.wodesoft.com)所有软件和资料均为软件作者提
 ' 供和网友推荐发布而来，其版权归该软件和程序源码的合法拥有者所
 ' 有，本站易语言资源网整理收集仅供易语言用户学习和易语言技术研
 ' 究探讨使用，不得用于任何商业用途。如果由于以上原因造成的版权
 ' 纠纷本站概不负责！
 ' * 本站资源未经许可，任何网站不得非法盗链及抄袭本站资源；如引用
 ' 页面，请注明来自易语言资源网，谢谢合作！
 ' --=====================   www.wodesoft.com  ================--

_临时子程序 () ' 在初始化代码执行完毕后调用测试代码
返回 (0) ' 可以根据您的需要返回任意数值

.子程序 _临时子程序, 空白型, , 
 ' 本名称子程序用作测试程序用，仅在开发及调试环境中有效，编译发布程序前将被系统自动清空，请将所有用作测试的临时代码放在本子程序中。 ***注意不要修改本子程序的名称、参数及返回值类型。


.子程序 VisoEngine_AntiDebug, 空白型, 公开, 本条命令启用后，AntiDebug功能将持续到程序结束
脱离调试器 ()
.计次循环首 (特殊_是否被调试 (), )
    核心_终止进程 (GetCurrentProcessId ())
.计次循环尾 ()
特殊_防进程调试 ()
特殊_置调试异常 ()
特殊_置调试陷阱 ()
挂钩 ()
 ' 本源码来自易语言资源网(www.wodesoft.com)

.子程序 VisoEngine_反易程序检测, 空白型, 公开, 有效防止某些游戏对易程序的检测与封杀
Hide ()


.子程序 脱离调试器, 空白型, , 
置入代码 ({ 106, 0, 106, 0, 106, 17, 106, 254, 184, 199, 0, 0, 0, 139, 212, 205, 46, 184, 229, 0, 0, 0, 139, 212, 205, 46, 184, 238, 0, 0, 0, 139, 212, 205, 46, 184, 54, 1, 0, 0, 139, 212, 205, 46, 131, 196, 16 })

.子程序 挂钩, 空白型, , 
.局部变量 欢迎Crackers光临, 整数型, , , 

赋值 (欢迎Crackers光临, 核心_取随机数 (0, 1))
.如果真 (等于 (欢迎Crackers光临, 1))
    置时钟事件 (核心_取随机数 (200, 600), &ComeOn)
    返回 ()
.如果真结束
 ' 本源码来自易语言资源网(www.wodesoft.com)
置时钟事件 (核心_取随机数 (300, 650), &ComeOn)


.子程序 核心_取随机数, 整数型, , 返回一个指定范围内的随机数值。在使用本命令取一系列的随机数之前，应该先使用“置随机数种子”命令为随机数生成器初始化一个种子值。本命令为初级命令。
.参数 起始数值, 整数型, 可空, 参数必须大于或等于零。本参数如果被省略，默认为 0。
.参数 结束数值, 整数型, 可空, 参数必须大于或等于零。本参数如果被省略，默认为无限。

置入代码 ({ 81, 82, 15, 49, 105, 192, 253, 67, 3, 0, 5, 195, 158, 38, 0, 193, 232, 16, 37, 255, 127, 0, 0, 139, 77, 16, 133, 201, 117, 5, 185, 255, 255, 255, 127, 43, 77, 8, 65, 51, 210, 247, 241, 3, 85, 8, 139, 194, 90, 89, 139, 229, 93, 194, 16, 0 })
返回 (0)

.子程序 ComeOn, 空白型, , 
.计次循环首 (特殊_是否被调试 (), )
    核心_终止进程 (GetCurrentProcessId ())
.计次循环尾 ()
特殊_防进程调试 ()
特殊_置调试异常 ()
特殊_置调试陷阱 ()
' 本源码来自易语言资源网(www.wodesoft.com)

.子程序 特殊_是否被调试, 整数型, , 
.局部变量 返回值, 整数型, , , 
.局部变量 HeapPtr, 整数型, , , 
.局部变量 ScanPrt, 整数型, , , 
.局部变量 nMagic, 整数型, , , 
.局部变量 nBin, 字节集, , , 
.局部变量 i, 整数型, , , 

置入代码 ({ 100, 161, 48, 0, 0, 0, 15, 182, 64, 2, 133, 192, 117, 39, 100, 161, 48, 0, 0, 0, 139, 64, 104, 131, 224, 112, 133, 192, 117, 23, 100, 161, 48, 0, 0, 0, 139, 64, 24, 131, 120, 12, 2, 117, 8, 131, 120, 16, 0, 117, 2, 51, 192, 137, 69, 252 })
 ' IsDebuggerPresent ()
 ' MOV EAX, DWORD PTR FS:[30]
 ' MOVZX EAX, BYTE PTR DS:[EAX+2] //DebugFlag
 ' TEST EAX, EAX
 ' JNZ SHORT Jump
 ' MOV EAX, DWORD PTR FS:[30]
 ' MOV EAX, DWORD PTR DS:[EAX+68] //NtGlobalFlag
 ' AND EAX, 70
 ' TEST EAX, EAX
 ' JNZ SHORT Jump
 ' MOV EAX, DWORD PTR FS:[30]
 ' MOV EAX, DWORD PTR DS:[EAX+18]
 ' CMP DWORD PTR DS:[EAX+C], 2    //HeapFlag
 ' JNZ SHORT Jump
 ' CMP DWORD PTR DS:[EAX+10], 0   //ForceFlag
 ' JNZ SHORT Jump
 ' XOR EAX, EAX
 ' @Jump:
 ' MOV DWORD PTR SS:[EBP-4], EAX
.如果真 (等于 (返回值, 0))
    赋值 (HeapPtr, HeapAlloc (GetProcessHeap (), 0, 256))
    .变量循环首 (0, 256, 4, i)
        赋值 (nBin, 指针到字节集 (相加 (HeapPtr, i), 4))
        .判断开始 (等于 (nBin, { 171, 171, 171, 171 }))
            赋值 (nMagic, 相加 (nMagic, 1))
        .判断 (等于 (nBin, { 13, 240, 173, 186 }))
            赋值 (nMagic, 相加 (nMagic, 1))
        .判断 (等于 (nBin, { 238, 254, 238, 254 }))
            赋值 (nMagic, 相加 (nMagic, 1))
        .默认
            ' 本源码来自易语言资源网(www.wodesoft.com)
        .判断结束
        
    .变量循环尾 ()
    HeapFree (GetProcessHeap (), 0, HeapPtr)
    赋值 (返回值, 选择 (大于 (nMagic, 10), 1, 0))
.如果真结束
返回 (返回值)

.子程序 特殊_防进程调试, 空白型, , 
DebugActiveProcess (GetCurrentProcessId ())

.子程序 特殊_置调试异常, 空白型, , 
置入代码 ({ 96, 232, 6, 0, 0, 0, 139, 100, 36, 8, 235, 29, 100, 255, 53, 0, 0, 0, 0, 100, 137, 37, 0, 0, 0, 0, 156, 129, 12, 36, 0, 1, 0, 0, 157, 248, 232, 8, 0, 0, 0, 100, 143, 5, 0, 0, 0, 0, 88, 97 })
 ' PUSHAD
 ' CALL Call1
 ' MOV ESP, DWORD PTR SS:[ESP+8]
 ' JMP SHORT Jump
 ' @Call1:
 ' PUSH DWORD PTR FS:[0]
 ' MOV DWORD PTR FS:[0], ESP
 ' PUSHFD
 ' OR DWORD PTR SS:[ESP], 100
 ' POPFD
 ' CLC
 ' CALL Call2
 ' @Jump:
 ' POP DWORD PTR FS:[0]
 ' POP EAX
 ' @Call2:
 ' POPAD

.子程序 特殊_置调试陷阱, 空白型, , 
置入代码 ({ 22, 23, 156, 88, 37, 0, 1, 0, 0, 116, 1, 157 })
 ' PUSH SS            //反跟踪指令序列
 ' POP SS             //反跟踪指令序列
 ' PUSHFD             //如正常状态下该指令被执行
 ' POP EAX            //反跟踪指令序列
 ' AND EAX, 100
 ' JE SHORT rt_label
 ' POPFD              //如被调试单步跟踪则设置堆栈陷阱
 ' @rt_label:

.子程序 核心_终止进程, 逻辑型, , 
.参数 进程ID, 整数型, , 

.如果 (等于 (TerminateProcess (OpenProcess (2035711, 0, 进程ID), 0), 1))
    返回 (真)
.否则
    返回 (假)
.如果结束


.程序集 __HIDDEN_TEMP_MOD__, , , 

.子程序 置时钟事件, 整数型, , 创建一个时钟事件，并返回一个时钟ID
.参数 时钟周期, 整数型, , 单位是ms
.参数 时钟事件子程序, 子程序指针, , 欲执行的时钟事件子程序，不带参数



.子程序 取消时钟事件, 空白型, , 取消一个时钟事件
.参数 时钟ID, 整数型, , 



.子程序 取消所有时钟事件, 空白型, , 取消用此模块创建的所有时钟事件


.程序集 __HIDDEN_TEMP_MOD__, , , 

.子程序 Hide, 空白型, , 



 ' 不属于任何一个程序集、类模块的函数：
