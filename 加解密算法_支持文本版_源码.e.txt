 ' 文件类型：Windows模块源码

 ' 程序名称：加解密
 ' 程序描述：加解密
@备注:
加解密
 ' 程序作者：siquzhanshi2
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：             易语言资源网注意事项
--============   www.5A5X.com  =============--
* 易语言资源网为易语言官方站、易语言官方论坛提供辅助资源站；本易语言资源网( www.5A5X.com)所有软件和资料均为软件作者提供和网友推荐发布而来，其版权归该软件和程序源码的合法拥有者所有，本站易语言资源网整理收集仅供易语言用户学习和易语言技术研究探讨使用，不得用于任何商业用途。如果由于以上原因造成的版权纠纷本站概不负责！
* 本站资源未经许可,任何网站不得非法盗链及抄袭本站资源；如引用，请注明来自易语言资源网，谢谢合作！
--============   www.5A5X.com  =============--
 ' 版本号：1.0
 ' 创建号：0.0





 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 5 0 系统核心支持库
 ' spec A512548E76954B6E92C21055517615B0 3 0 特殊功能支持库





.程序集 程序集1, , , 

.子程序 _启动子程序, 整数型, , 请在本子程序中放置易模块初始化代码
 ' --========  易语言资源网  (www.5A5X.com)  ======--
 ' 努力创建完善、持续更新的易语言学习例程源码资源站
 ' --================   www.5A5X.com  ===========--
 ' --==================   易语言资源网注意事项  ================--
 ' * 易语言资源网为易语言官方站、易语言官方论坛提供辅助资源站；
 ' 本易语言资源网( www.5A5X.com)所有软件和资料均为软件作者提
 ' 供和网友推荐发布而来，其版权归该软件和程序源码的合法拥有者所
 ' 有，本站易语言资源网整理收集仅供易语言用户学习和易语言技术研
 ' 究探讨使用，不得用于任何商业用途。如果由于以上原因造成的版权
 ' 纠纷本站概不负责！
 ' * 本站资源未经许可，任何网站不得非法盗链及抄袭本站资源；如引用
 ' 页面，请注明来自易语言资源网，谢谢合作！
 ' --=====================   www.5A5X.com  ================--

调试输出 (加密 (到字节集 (“我爱China！我爱易语言！感谢CCTV、吴涛……”), “测试密码|TestPassword”))
调试输出 (到文本 (解密 (“ia(amalamdVc#cudvb9bIcSc*cdcDcScOcRccdQc5cMbHaFaCbWbZa~cAdTbgb|b4bddkdod|c!b3b_b6b”, “测试密码|TestPassword”)))
_临时子程序 () ' 在初始化代码执行完毕后调用测试代码
返回 (0) ' 可以根据您的需要返回任意数值

.子程序 _临时子程序, 空白型, , 
 ' 本名称子程序用作测试程序用，仅在开发及调试环境中有效，编译发布程序前将被系统自动清空，请将所有用作测试的临时代码放在本子程序中。 ***注意不要修改本子程序的名称、参数及返回值类型。


.子程序 加密, 文本型, 公开, 
.参数 字串, 字节集, , 
.参数 密码, 文本型, , 

.局部变量 字串长度, 整数型, , , 
.局部变量 密码字节集, 字节集, , , 
.局部变量 密码长度, 整数型, , , 
.局部变量 码表, 字节集, , , 
.局部变量 码表长度, 整数型, , , 
.局部变量 返回值, 字节集, , , 
.局部变量 临时字节, 整数型, , , 
.局部变量 余数, 整数型, , , 
.局部变量 商数, 整数型, , , 
.局部变量 计数1, 整数型, , , 
.局部变量 计数2, 整数型, , , 
.局部变量 计数3, 整数型, , , 

赋值 (字串长度, 取字节集长度 (字串)) ' 取长度
赋值 (密码字节集, 到字节集 (密码)) ' 把密码转成字节集便于操作
赋值 (密码长度, 取字节集长度 (密码字节集)) ' 取密码的长度
赋值 (码表, 到字节集 (“abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890~!@#$%^&*()_+|”)) ' 生成加密码表
赋值 (码表长度, 取字节集长度 (码表)) ' 取码表长度
.计次循环首 (字串长度, 计数1)
    赋值 (计数2, 相加 (计数2, 1))
    .如果真 (大于 (计数2, 密码长度)) ' 判断 防止越界
        赋值 (计数2, 1)
    .如果真结束
    赋值 (计数3, 相加 (计数3, 1))
    .如果真 (大于 (计数3, 码表长度)) ' 判断 防止越界
        赋值 (计数3, 1)
    .如果真结束
    赋值 (临时字节, 位异或 (字串 [计数1], 密码字节集 [计数2], 码表 [计数3], 密码长度)) ' 组合几个数据让破解有点难度哈。
    赋值 (余数, 相加 (求余数 (临时字节, 码表长度), 1)) ' 求余，把上面的临时字节除以码表的余数找出来 以便保存在字节集中，加1是为了防止得到0
    赋值 (商数, 相加 (相除 (临时字节, 码表长度), 1)) ' 求商，把上面临时字节集除以码表的整数，以便还原，加1是为了防止得到0
    赋值 (返回值, 相加 (返回值, 取字节集中间 (码表, 余数, 1), 取字节集中间 (码表, 商数, 1))) ' 将余数和商数以码表中字符的形式保存进字节集里
     ' 本源码来自易语言资源网(www.5A5X.com)
.计次循环尾 ()
返回 (到文本 (返回值)) ' 转成文本返回

.子程序 解密, 字节集, 公开, 
.参数 要解密的字串, 文本型, , 
.参数 密码, 文本型, , 

.局部变量 字串, 字节集, , , 
.局部变量 字串长度, 整数型, , , 
.局部变量 密码字节集, 字节集, , , 
.局部变量 密码长度, 整数型, , , 
.局部变量 码表, 字节集, , , 
.局部变量 码表长度, 整数型, , , 
.局部变量 返回值, 字节集, , , 
.局部变量 临时字节, 整数型, , , 
.局部变量 商数, 整数型, , , 
.局部变量 余数, 整数型, , , 
.局部变量 计数1, 整数型, , , 
.局部变量 计数2, 整数型, , , 
.局部变量 计数3, 整数型, , , 
.局部变量 计数4, 整数型, , , 

赋值 (字串, 到字节集 (要解密的字串)) ' 把要解密的字串转成字节集
赋值 (字串长度, 取字节集长度 (字串)) ' 取长度
赋值 (密码字节集, 到字节集 (密码)) ' 这下面都和加密过程的解释一样
赋值 (密码长度, 取字节集长度 (密码字节集))
赋值 (码表, 到字节集 (“abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890~!@#$%^&*()_+|”))
赋值 (码表长度, 取字节集长度 (码表))
赋值 (返回值, 取空白字节集 (相加 (码表长度, 1))) ' 分配内存 加快解密速度 加1是为了防止数据溢出
.变量循环首 (2, 字串长度, 2, 计数1) ' 2个字节为1组 所以每次递增2
    赋值 (计数4, 相加 (计数4, 1))
    赋值 (计数2, 相加 (计数2, 1))
    .如果真 (大于 (计数2, 密码长度)) ' 解释过了 防止越界
        赋值 (计数2, 1)
         ' 本源码来自易语言资源网(www.5A5X.com)
    .如果真结束
    赋值 (计数3, 相加 (计数3, 1))
    .如果真 (大于 (计数3, 码表长度))
        赋值 (计数3, 1)
    .如果真结束
    赋值 (余数, 相减 (寻找字节集 (码表, 取字节集中间 (字串, 相减 (计数1, 1), 1), ), 1)) ' 在码表里寻找字节得出的位置就是之前保存的商数和余数。为什么呢？自己看我的加密程序里。。一个码表字节就代表一个位置。
    赋值 (商数, 相减 (寻找字节集 (码表, 取字节集中间 (字串, 计数1, 1), ), 1)) ' 减1和上面加密的加1相对
    赋值 (临时字节, 相加 (相乘 (商数, 码表长度), 余数)) ' 还原成原来的字节（被除数=除数×商+余数，这是小学的知识不会不懂吧。。）
    赋值 (临时字节, 位异或 (临时字节, 密码字节集 [计数2], 码表 [计数3], 密码长度)) ' 用位异或的手段去除所有其他附加数据
    赋值 (返回值 [计数4], 临时字节) ' 最后还原成原来的字节
    ' 本源码来自易语言资源网(www.5A5X.com)
.变量循环尾 ()
返回 (返回值) ' 然后直接返回。。


 ' 不属于任何一个程序集、类模块的函数：
