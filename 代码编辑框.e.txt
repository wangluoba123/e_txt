 ' 文件类型：Windows模块源码

 ' 程序名称：代码编辑框操作
 ' 程序描述：
 ' 程序作者：本源码来自易语言资源网(www.5A5X.com)
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：             易语言资源网注意事项
--============   www.5A5X.com  =============--
* 易语言资源网为易语言官方站、易语言官方论坛提供辅助资源站；本易语言资源网( www.5A5X.com)所有软件和资料均为软件作者提供和网友推荐发布而来，其版权归该软件和程序源码的合法拥有者所有，本站易语言资源网整理收集仅供易语言用户学习和易语言技术研究探讨使用，不得用于任何商业用途。如果由于以上原因造成的版权纠纷本站概不负责！
* 本站资源未经许可,任何网站不得非法盗链及抄袭本站资源；如引用，请注明来自易语言资源网，谢谢合作！
--============   www.5A5X.com  =============--
 ' 版本号：1.0
 ' 创建号：0.0

窗口 窗口1
    左边 = 50
    顶边 = 50
    宽度 = 579
    高度 = 540
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假



.常量 风格类型_默认, "2", , 
.常量 风格类型_字符串, "3", , 
.常量 风格类型_注释, "4", , 
.常量 风格类型_函数, "5", , 
.常量 风格类型_变量, "6", , 
.常量 风格类型_运算符, "7", , 
.常量 风格类型_数值, "8", , 
.常量 行状态_未解析, "0", , 
.常量 行状态_已解析, "1", , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 5 0 系统核心支持库
 ' CodeStyleEdit {E5E6A8E356A843bd94609DDD678BD6D8} 2 0 代码编辑框支持库



 ' 所需要的模块
 ' 新编码转换大全 $新编码转换大全.ec


数据类型 函数提示, , 
    .成员 函数名称, 文本型, , , 
    .成员 函数拼音, 文本型, , , 
    .成员 参数数量, 整数型, , , 
    .成员 使用次数, 整数型, , , 

数据类型 风格代码, , 
    .成员 代码, 文本型, , , 
    .成员 风格, 整数型, , , 


.程序集 程序集1, , , 

.子程序 _启动子程序, 整数型, , 请在本子程序中放置易模块初始化代码

_临时子程序 () ' 在初始化代码执行完毕后调用测试代码
返回 (0) ' 可以根据您的需要返回任意数值

.子程序 _临时子程序, 空白型, , 
 ' 本名称子程序用作测试程序用，仅在开发及调试环境中有效，编译发布程序前将被系统自动清空，请将所有用作测试的临时代码放在本子程序中。 ***注意不要修改本子程序的名称、参数及返回值类型。
载入 (窗口1, , 真)


.类模块 类_代码编辑框, , , 

.程序集变量 代码编辑框, 未知类型0x20001, , , 
.程序集变量 函数提示表, 函数提示, , "0", 
.程序集变量 匹配符号类, 类_正则表达式, , , 
.程序集变量 符号表达式, 文本型, , , 
.程序集变量 匹配空白类, 类_正则表达式, , , 
.程序集变量 空白表达式, 文本型, , , 
.程序集变量 匹配注释类, 类_正则表达式, , , 
.程序集变量 注释表达式, 文本型, , , 
.程序集变量 匹配引号类, 类_正则表达式, , , 
.程序集变量 引号表达式, 文本型, , , 
.程序集变量 匹配字符类, 类_正则表达式, , , 
.程序集变量 匹配数值类, 类_正则表达式, , , 
.程序集变量 匹配拼音类, 类_正则表达式, , , 
.程序集变量 自动完成, 逻辑型, , , 
.程序集变量 正在显示风格, 逻辑型, , , 
.程序集变量 当前输入文本, 文本型, , , 
.子程序 代码框初始化, 空白型, 公开, 
.参数 代码编辑框, 未知类型0x20001, , 
.参数 行间距, 整数型, 可空, 
.参数 默认字体, 文本型, 可空, 
.参数 默认字体大小, 整数型, 可空, 
.参数 字体前景颜色, 整数型, 可空, 
.参数 字体背景颜色, 整数型, 可空, 
.参数 注释文本颜色, 整数型, 可空, 
.参数 字符串颜色, 整数型, 可空, 
.参数 关键字颜色, 整数型, 可空, 

.局部变量 i, 空白型, , , 
.局部变量 t, 空白型, , , 
.局部变量 匿名局部变量_320, 空白型, , , 

 ' --========  易语言资源网  (www.5A5X.com)  ======--
 ' 努力创建完善、持续更新的易语言学习例程源码资源站
 ' --================   www.5A5X.com  ===========--
 ' --==================   易语言资源网注意事项  ================--
 ' * 易语言资源网为易语言官方站、易语言官方论坛提供辅助资源站；
 ' 本易语言资源网( www.5A5X.com)所有软件和资料均为软件作者提
 ' 供和网友推荐发布而来，其版权归该软件和程序源码的合法拥有者所
 ' 有，本站易语言资源网整理收集仅供易语言用户学习和易语言技术研
 ' 究探讨使用，不得用于任何商业用途。如果由于以上原因造成的版权
 ' 纠纷本站概不负责！
 ' * 本站资源未经许可，任何网站不得非法盗链及抄袭本站资源；如引用
 ' 页面，请注明来自易语言资源网，谢谢合作！
 ' --=====================   www.5A5X.com  ================--

赋值 (代码编辑框, 代码编辑框)
赋值 (代码编辑框., 1)
.如果真 (是否为空 (默认字体))
    赋值 (默认字体, “宋体”)
.如果真结束
.如果真 (是否为空 (行间距))
    赋值 (行间距, 4)
.如果真结束
.如果真 (是否为空 (默认字体大小))
    赋值 (默认字体大小, 9)
.如果真结束
.如果真 (是否为空 (字体前景颜色))
    赋值 (字体前景颜色, #黑色)
.如果真结束
.如果真 (是否为空 (字体背景颜色))
    赋值 (字体背景颜色, #银白)
.如果真结束
.如果真 (是否为空 (注释文本颜色))
    赋值 (注释文本颜色, #墨绿)
.如果真结束
.如果真 (是否为空 (字符串颜色))
    赋值 (字符串颜色, #红褐)
.如果真结束
.如果真 (是否为空 (关键字颜色))
    赋值 (关键字颜色, #红色)
.如果真结束
 ' 设置行高
代码编辑框.未知支持库函数_68 (1, 默认字体)
代码编辑框.未知支持库函数_69 (1, 相加 (行间距, 默认字体大小))
 ' 设置默认风格
代码编辑框.未知支持库函数_68 (#风格类型_默认, 默认字体)
代码编辑框.未知支持库函数_69 (#风格类型_默认, 默认字体大小)
代码编辑框.未知支持库函数_73 (#风格类型_默认, 字体前景颜色)
代码编辑框.未知支持库函数_74 (#风格类型_默认, 字体背景颜色)
 ' 代码框.置风格粗体 (#风格类型_默认, 真)
 ' 设置注释风格
代码编辑框.未知支持库函数_68 (#风格类型_注释, 默认字体)
代码编辑框.未知支持库函数_69 (#风格类型_注释, 默认字体大小)
代码编辑框.未知支持库函数_73 (#风格类型_注释, 注释文本颜色)
 ' 代码框.置风格粗体 (#风格类型_注释, 真)
 ' 设置字符串风格
代码编辑框.未知支持库函数_68 (#风格类型_字符串, 默认字体)
代码编辑框.未知支持库函数_69 (#风格类型_字符串, 默认字体大小)
代码编辑框.未知支持库函数_73 (#风格类型_字符串, 字符串颜色)
 ' 代码框.置风格粗体 (#风格类型_字符串, 真)
 ' 设置运算符号风格
代码编辑框.未知支持库函数_68 (#风格类型_运算符, 默认字体)
代码编辑框.未知支持库函数_69 (#风格类型_运算符, 默认字体大小)
代码编辑框.未知支持库函数_73 (#风格类型_运算符, 关键字颜色)
 ' 代码框.置风格粗体 (#风格类型_运算符, 真)
 ' 设置函数风格
代码编辑框.未知支持库函数_68 (#风格类型_函数, 默认字体)
代码编辑框.未知支持库函数_69 (#风格类型_函数, 默认字体大小)
代码编辑框.未知支持库函数_73 (#风格类型_函数, #蓝色)
 ' 代码框.置风格粗体 (#风格类型_函数, 真)
 ' 设置变量风格
代码编辑框.未知支持库函数_68 (#风格类型_变量, 默认字体)
代码编辑框.未知支持库函数_69 (#风格类型_变量, 默认字体大小)
代码编辑框.未知支持库函数_73 (#风格类型_变量, #黑色)
 ' 代码框.置风格粗体 (#风格类型_变量, 真)
 ' 设置数值常量风格
代码编辑框.未知支持库函数_68 (#风格类型_数值, 默认字体)
代码编辑框.未知支持库函数_69 (#风格类型_数值, 默认字体大小)
代码编辑框.未知支持库函数_73 (#风格类型_数值, #紫色)
 ' 代码框.置风格粗体 (#风格类型_数值, 真)

代码编辑框.未知支持库函数_52 (1, 1)
代码编辑框.未知支持库函数_54 (1, 24)
代码编辑框.未知支持库函数_60 (6)
代码编辑框.未知支持库函数_62 (6)
赋值 (符号表达式, “[\s\=\+\-\*\/\,\)\(\<\>\[\]\≠\－\＝\!]”)
匹配符号类.创建 (符号表达式)
赋值 (空白表达式, “\s*”)
匹配空白类.创建 (空白表达式)
赋值 (注释表达式, “[\s]*[\*\/]+/.*”)
匹配注释类.创建 (注释表达式)
赋值 (引号表达式, 相加 (“[\”, #引号, “]+”))
匹配引号类.创建 (引号表达式)
匹配字符类.创建 (相加 (#引号, “(.*)”, #引号))
匹配数值类.创建 (“^\d*(\.?)\d$”)
匹配拼音类.创建 (“^[a-z\<\>]*$”)
 ' 加入文本 (“*/这是代码编辑框模块生成的代码”)
赋值 (自动完成, 真)
 ' 更新全部风格 ()
 ' 增加提示列表 (“如果”)
 ' 增加提示列表 (“否则”)

.子程序 取字符串首拼, 文本型, , 
.参数 字符串, 文本型, , 

.局部变量 宽文本, 字节集, , , 
.局部变量 临时字符, 文本型, , , 
.局部变量 取出位置, 整数型, , , 
.局部变量 拼音, 文本型, , , 
.局部变量 声母, 文本型, , , 

赋值 (宽文本, 到宽文本 (字符串))
赋值 (取出位置, 1)
赋值 (临时字符, 宽文本取左边 (宽文本, 取出位置, ))
.判断循环首 (不等于 (临时字符, “”))
    赋值 (声母, 取声母 (临时字符, 1))
    .如果 (等于 (声母, “”))
        赋值 (拼音, 相加 (拼音, 临时字符))
    .否则
        
        .如果真 (大于 (取文本长度 (声母), 1))
            赋值 (声母, 相加 (“<”, 声母, “>”))
        .如果真结束
        赋值 (拼音, 相加 (拼音, 声母))
    .如果结束
    赋值 (取出位置, 相加 (取出位置, 1))
    赋值 (临时字符, 宽文本取左边 (宽文本, 取出位置, ))
.判断循环尾 ()
.如果真 (匹配拼音类.匹配 (拼音))
    返回 (拼音)
.如果真结束
返回 (“”)

.子程序 增加提示列表, 逻辑型, , 
.参数 函数名称, 文本型, , 
.参数 参数数量, 整数型, 可空, 

.局部变量 新函数, 函数提示, , , 
.局部变量 首拼, 文本型, , , 

赋值 (首拼, 取字符串首拼 (函数名称))
.如果真 (等于 (首拼, “”))
    返回 (假)
.如果真结束
赋值 (新函数.函数名称, 到文本 (ANSI转UTF8 (函数名称)))
赋值 (新函数.函数拼音, 首拼)
加入成员 (函数提示表, 新函数)
返回 (真)


.子程序 拼音文本比较, 逻辑型, , 
.参数 拼音文本一, 文本型, , 
.参数 拼音文本二, 文本型, , 

返回 (真)

.子程序 替换文本, 空白型, 公开, 
.参数 用做替换的文本, 文本型, , 
.参数 开始位置, 整数型, , 
.参数 结束位置, 整数型, , 

.局部变量 新文本, 文本型, , , 

赋值 (新文本, 到文本 (ANSI转UTF8 (用做替换的文本)))
代码编辑框.未知支持库函数_40 (开始位置, 结束位置)
' 本源码来自易语言资源网(www.5A5X.com)
代码编辑框.未知支持库函数_3 (新文本)

.子程序 加入文本, 空白型, , 
.参数 要加入的文本, 文本型, , 
.参数 加入的位置, 整数型, 可空, 

.局部变量 新文本, 文本型, , , 
.局部变量 临时字节集, 字节集, , , 

.如果真 (等于 (要加入的文本, “”))
    返回 ()
.如果真结束
赋值 (临时字节集, ANSI转UTF8 (要加入的文本))
.如果真 (等于 (取字节集右边 (临时字节集, 3), { 13, 10, 0 }))
    赋值 (临时字节集, 取字节集左边 (临时字节集, 相减 (取字节集长度 (临时字节集), 3)))
.如果真结束
赋值 (新文本, 到文本 (临时字节集))
.如果真 (是否为空 (加入的位置))
    代码编辑框.未知支持库函数_7 (新文本, -1)
    返回 ()
.如果真结束
代码编辑框.未知支持库函数_10 (加入的位置, 新文本)

.子程序 更新代码风格, 空白型, , 
.参数 行号, 整数型, , 

.局部变量 行数据, 字节集, , , 
.局部变量 行文本, 文本型, , , 
.局部变量 光标位置, 整数型, , , 
.局部变量 字符位置, 整数型, , , 
.局部变量 行开始位置, 整数型, , , 
.局部变量 行结束位置, 整数型, , , 
.局部变量 风格开始位置, 整数型, , , 
.局部变量 风格文本长度, 整数型, , , 
.局部变量 词法集合, 文本型, , "0", 
.局部变量 风格代码, 风格代码, , "0", 
.局部变量 风格号, 整数型, , , 
.局部变量 i, 整数型, , , 
.局部变量 输入字符串, 逻辑型, , , 
.局部变量 输入注释文本, 逻辑型, , , 
.局部变量 行状态, 整数型, , , 

.如果真 (等于 (正在显示风格, 真))
    返回 ()
.如果真结束
赋值 (正在显示风格, 真)
赋值 (行状态, 代码编辑框.未知支持库函数_88 (行号))
.如果真 (等于 (行状态, 代码编辑框.未知支持库函数_49 (行号)))
    赋值 (正在显示风格, 假)
    返回 ()
.如果真结束
赋值 (光标位置, 代码编辑框.未知支持库函数_43 ())
赋值 (字符位置, 代码编辑框.未知支持库函数_181 (光标位置))
赋值 (行数据, 相加 (到字节集 (代码编辑框.未知支持库函数_2 (行号)), { 0 }))
赋值 (行文本, UTF8转ANSI (行数据))
赋值 (行开始位置, 代码编辑框.未知支持库函数_47 (行号))
赋值 (行结束位置, 代码编辑框.未知支持库函数_48 (行号))
 ' 进行词法解析
语法分析 (行文本, 词法集合)
词法分析 (词法集合, 风格代码)
.如果真 (小于 (取数组下标 (词法集合, ), 1))
    代码编辑框.未知支持库函数_87 (行号, 代码编辑框.未知支持库函数_49 (行号))
    赋值 (正在显示风格, 假)
    返回 ()
.如果真结束
替换文本 (“”, 行开始位置, 行结束位置)
赋值 (风格号, #风格类型_默认)
.计次循环首 (取数组成员数 (风格代码), i)
    赋值 (行结束位置, 代码编辑框.未知支持库函数_48 (行号))
    加入文本 (风格代码 [i], 代码, 行结束位置)
    赋值 (风格号, 风格代码 [i], 风格)
    赋值 (风格开始位置, 行结束位置)
    赋值 (风格文本长度, 相减 (代码编辑框.未知支持库函数_48 (行号), 行结束位置))
    代码编辑框.未知支持库函数_84 (行结束位置, 31)
    代码编辑框.未知支持库函数_85 (风格文本长度, 风格号)
.计次循环尾 ()
赋值 (光标位置, 代码编辑框.未知支持库函数_180 (字符位置))
代码编辑框.未知支持库函数_41 (光标位置)
代码编辑框.未知支持库函数_87 (行号, 代码编辑框.未知支持库函数_49 (行号))
赋值 (正在显示风格, 假)

.子程序 词法分析, 空白型, , 
.参数 元素集合, 文本型, 数组, 
.参数 风格代码, 风格代码, 数组, 

.局部变量 i, 整数型, , , 
.局部变量 新代码, 风格代码, , , 

.计次循环首 (取数组成员数 (元素集合), i)
    .判断开始 (匹配注释文本 (元素集合 [i]))
        赋值 (新代码.代码, 元素集合 [i])
        赋值 (新代码.风格, #风格类型_注释)
    .判断 (匹配字符文本 (元素集合 [i]))
        赋值 (新代码.代码, 元素集合 [i])
        赋值 (新代码.风格, #风格类型_字符串)
    .判断 (匹配关键字符 (元素集合 [i]))
        赋值 (新代码.代码, 元素集合 [i])
        赋值 (新代码.风格, #风格类型_运算符)
    .判断 (匹配内置函数 (i, 元素集合))
        赋值 (新代码.代码, 元素集合 [i])
        赋值 (新代码.风格, #风格类型_函数)
    .判断 (匹配数值常量 (元素集合 [i]))
        赋值 (新代码.代码, 元素集合 [i])
        赋值 (新代码.风格, #风格类型_数值)
    .默认
        
        赋值 (新代码.代码, 元素集合 [i])
        赋值 (新代码.风格, #风格类型_变量)
    .判断结束
    加入成员 (风格代码, 新代码)
.计次循环尾 ()

.子程序 语法分析, 空白型, , 
.参数 要分析的代码, 文本型, , 
.参数 元素集合, 文本型, 数组, 

.局部变量 宽文本, 字节集, , , 
.局部变量 临时字符, 文本型, , , 
.局部变量 文本长度, 整数型, , , 
.局部变量 当前位置, 整数型, , , 
.局部变量 词法元素, 文本型, , , 
.局部变量 匹配字符串, 逻辑型, , , 

清除数组 (元素集合)
 ' 替换中文标点
赋值 (要分析的代码, 子文本替换 (要分析的代码, #左引号, #引号, , , 假))
赋值 (要分析的代码, 子文本替换 (要分析的代码, #右引号, #引号, , , 假))
赋值 (要分析的代码, 子文本替换 (要分析的代码, “，”, “,”, , , 假))
赋值 (要分析的代码, 子文本替换 (要分析的代码, “；”, “;”, , , 假))
赋值 (要分析的代码, 子文本替换 (要分析的代码, “（”, “(”, , , 假))
赋值 (要分析的代码, 子文本替换 (要分析的代码, “）”, “)”, , , 假))
赋值 (要分析的代码, 子文本替换 (要分析的代码, #换行符, , , , 真))
 ' 判断是不是注释
.如果真 (匹配注释文本 (要分析的代码))
    加入成员 (元素集合, 要分析的代码)
    返回 ()
.如果真结束
 ' 开始词法分析
赋值 (宽文本, 到宽文本 (要分析的代码))
赋值 (文本长度, 混合文本取长度 (要分析的代码))
赋值 (当前位置, 1)
赋值 (临时字符, 宽文本取左边 (宽文本, 当前位置))
 ' 循环读入每一个字符
.判断循环首 (不等于 (临时字符, “”))
    .如果真 (等于 (临时字符, #引号))
        赋值 (匹配字符串, 取反 (匹配字符串))
    .如果真结束
    .如果 (等于 (匹配字符串, 真))
        赋值 (词法元素, 相加 (词法元素, 临时字符))
    .否则
        
        .如果 (匹配关键字符 (临时字符))
             ' 调试输出 (临时字符)
            .如果真 (不等于 (词法元素, “”))
                加入成员 (元素集合, 词法元素)
                赋值 (词法元素, “”)
            .如果真结束
            加入成员 (元素集合, 临时字符)
        .否则
            
            赋值 (词法元素, 相加 (词法元素, 临时字符))
        .如果结束
        
    .如果结束
    
    赋值 (当前位置, 相加 (当前位置, 1))
    赋值 (临时字符, 宽文本取左边 (宽文本, 当前位置))
.判断循环尾 ()
.如果真 (不等于 (词法元素, “”))
    加入成员 (元素集合, 词法元素)
.如果真结束


.子程序 匹配数值常量, 逻辑型, , 
.参数 字符串, 文本型, , 

返回 (匹配数值类.匹配 (字符串))

.子程序 匹配空白字符, 逻辑型, , 
.参数 字符串, 文本型, , 

返回 (匹配空白类.匹配 (字符串))

.子程序 匹配关键字符, 逻辑型, , 
.参数 字符串, 文本型, , 

返回 (匹配符号类.匹配 (字符串))

.子程序 匹配内置函数, 逻辑型, , 
.参数 索引, 整数型, , 
.参数 代码, 文本型, 数组, 

.局部变量 i, 整数型, , , 
.局部变量 符号, 文本型, , , 

赋值 (i, 相加 (索引, 1))
.判断循环首 (小于或等于 (i, 取数组下标 (代码, )))
    .如果真 (匹配关键字符 (代码 [i]))
        赋值 (符号, 代码 [i])
        跳出循环 ()
    .如果真结束
    赋值 (i, 相加 (i, 1))
.判断循环尾 ()
.如果真 (等于 (符号, “(”))
    返回 (真)
.如果真结束
返回 (假)

.子程序 匹配注释文本, 逻辑型, , 
.参数 字符串, 文本型, , 

返回 (匹配注释类.匹配 (字符串))

.子程序 匹配字符文本, 逻辑型, , 
.参数 字符串, 文本型, , 

返回 (匹配字符类.匹配 (字符串))

.子程序 寻找文本位置, 整数型, , '寻找文本在另一段UTF8文本中的位置
.参数 UTF8文本, 字节集, , 
.参数 要寻找的文本, 文本型, , 
.参数 开始位置, 整数型, 参考, 
.参数 结束位置, 整数型, 参考, 

.局部变量 临时字节集, 字节集, , , 

赋值 (临时字节集, ANSI转UTF8 (要寻找的文本))
赋值 (临时字节集, 取字节集左边 (临时字节集, 相减 (取字节集长度 (临时字节集), 1)))
赋值 (开始位置, 寻找字节集 (UTF8文本, 临时字节集, ))
赋值 (结束位置, 相加 (开始位置, 取字节集长度 (临时字节集)))
返回 (开始位置)

.子程序 取出全部内容, 文本型, , 
.局部变量 临时文本, 文本型, , , 
.局部变量 行数, 整数型, , , 
.局部变量 i, 整数型, , , 
.局部变量 临时字节集, 字节集, , , 

赋值 (行数, 代码编辑框.未知支持库函数_36 ())
.计次循环首 (行数, i)
    赋值 (临时字节集, 相加 (到字节集 (代码编辑框.未知支持库函数_2 (相减 (i, 1))), { 0 }))
    赋值 (临时文本, 相加 (临时文本, UTF8转ANSI (临时字节集)))
.计次循环尾 ()
返回 (临时文本)

.子程序 更新全部风格, 空白型, , 
.局部变量 临时文本, 文本型, , , 
.局部变量 行数, 整数型, , , 
.局部变量 i, 整数型, , , 
.局部变量 临时字节集, 字节集, , , 

赋值 (行数, 代码编辑框.未知支持库函数_36 ())
.计次循环首 (行数, i)
    更新代码风格 (相减 (i, 1))
.计次循环尾 ()


.子程序 输入事件接口, 空白型, , 
.参数 输入文本, 文本型, , 

.局部变量 行号, 整数型, , , 
.局部变量 长度, 整数型, , , 
.局部变量 行数据, 字节集, , , 
.局部变量 行文本, 文本型, , , 
.局部变量 代码文本, 文本型, , "0", 
.局部变量 下标, 整数型, , , 
.局部变量 i, 整数型, , , 
.局部变量 首拼, 文本型, , , 
.局部变量 自动完成列表, 文本型, , , 
.局部变量 选中项目, 整数型, , , 
.局部变量 光标位置, 整数型, , , 

.如果真 (等于 (自动完成, 假))
    返回 ()
.如果真结束
赋值 (光标位置, 代码编辑框.未知支持库函数_43 ())
赋值 (行号, 代码编辑框.未知支持库函数_46 (光标位置))
 ' .如果真 (等于 (输入文本, 字符 (#空格键)))
     ' .如果真 (代码编辑框.未知支持库函数_132 ())
         ' 选中项目 ＝ 代码编辑框.取自动完成当前项 ()
         ' 长度 ＝ 代码编辑框.取UTF8字符串字节长度 (当前输入文本)
         ' 光标位置 ＝ 光标位置 － 长度
         ' 代码编辑框.选择文本 (光标位置, 长度)
         ' 代码编辑框.替换文本 (当前输入文本)
         ' 代码编辑框.取消自动完成 ()
         ' 返回 ()
    .如果真结束
    
.如果真结束
赋值 (行数据, 相加 (到字节集 (代码编辑框.未知支持库函数_2 (行号)), { 0 }))
赋值 (行数据, 取字节集左边 (行数据, 相减 (光标位置, 代码编辑框.未知支持库函数_47 (行号))))
赋值 (行文本, UTF8转ANSI (行数据))
语法分析 (行文本, 代码文本)
赋值 (下标, 取数组下标 (代码文本, ))
赋值 (i, 1)
 ' .判断循环首 (小于 (i, 下标))
     ' 首拼 ＝ 取字符串首拼 (代码文本 [i])
     ' .如果真 (不等于 (首拼, “”))
         ' 当前输入文本 ＝ 代码文本 [i]
         ' 输出调试文本 (当前输入文本)
         ' 跳出循环 ()
    .如果真结束
    
 ' .判断循环尾 ()
 ' .如果真 (等于 (首拼, “”))
     ' 返回 ()
.如果真结束
 ' .判断开始 (匹配注释文本 (当前输入文本))
     ' 代码编辑框.取消自动完成 ()
     ' 返回 ()
 ' .判断 (匹配关键字符 (当前输入文本))
     ' 代码编辑框.取消自动完成 ()
     ' 返回 ()
 ' .判断 (匹配字符文本 (当前输入文本))
     ' 代码编辑框.取消自动完成 ()
     ' 返回 ()
 ' .判断 (匹配数值常量 (当前输入文本))
     ' 代码编辑框.取消自动完成 ()
     ' 返回 ()
.默认
    
.判断结束
赋值 (首拼, 取字符串首拼 (当前输入文本))
 ' 输出调试文本 (首拼)
 ' .如果真 (等于 (首拼, “”))
     ' 代码编辑框.取消自动完成 ()
     ' 返回 ()
.如果真结束
 ' .计次循环首 (取数组成员数 (函数提示表), i)
     ' .如果真 (拼音文本比较 (首拼, 函数提示表 [i], 函数拼音))
         ' 自动完成列表 ＝ 自动完成列表 ＋ 函数提示表 [i].函数名称 ＋ “,”
    .如果真结束
    
 ' .计次循环尾 ()
 ' 代码编辑框.置自动完成分隔符 (“,”)
 ' 代码编辑框.显示自动完成 (0, 自动完成列表)


.子程序 更新事件接口, 空白型, , 
.局部变量 行号, 整数型, , , 

赋值 (行号, 代码编辑框.未知支持库函数_46 (代码编辑框.未知支持库函数_43 ()))
更新代码风格 (行号)

.程序集 混合文本, , , 

.子程序 到宽文本, 字节集, , 
.参数 窄文本, 文本型, , 

.局部变量 原文本, 字节集, , , 
.局部变量 缓冲区, 字节集, , , 
.局部变量 i, 整数型, , , 
.局部变量 k, 整数型, , , 

赋值 (原文本, 到字节集 (窄文本))
赋值 (缓冲区, 取空白字节集 (相乘 (取字节集长度 (原文本), 2)))
赋值 (k, 1)
.计次循环首 (取字节集长度 (原文本), i)
    .如果 (小于 (原文本 [i], 128))
        赋值 (缓冲区 [k], 原文本 [i])
        赋值 (缓冲区 [相加 (k, 1)], 0)
        赋值 (k, 相加 (k, 2))
    .否则
        
        赋值 (缓冲区 [k], 原文本 [i])
        赋值 (k, 相加 (k, 1))
    .如果结束
    ' 本源码来自易语言资源网(www.5A5X.com)
.计次循环尾 ()
赋值 (k, 相减 (k, 1))
赋值 (缓冲区, 取字节集左边 (缓冲区, k))
返回 (缓冲区)


.子程序 到窄文本, 文本型, , 
.参数 宽文本, 字节集, , 

.局部变量 i, 整数型, , , 
.局部变量 缓冲区, 字节集, , , 
.局部变量 len, 整数型, , , 
.局部变量 k, 整数型, , , 

赋值 (len, 取字节集长度 (宽文本))
赋值 (缓冲区, 取空白字节集 (len))
赋值 (k, 1)
.计次循环首 (len, i)
    .如果真 (大于 (宽文本 [i], 0))
        赋值 (缓冲区 [k], 宽文本 [i])
        赋值 (k, 相加 (k, 1))
    .如果真结束
    
.计次循环尾 ()
返回 (到文本 (缓冲区))


.子程序 宽文本取左边, 文本型, , 
.参数 宽文本, 字节集, , 
.参数 起始位置, 整数型, 可空, 
.参数 取出数量, 整数型, 可空, 

.局部变量 缓冲区, 字节集, , , 
.局部变量 len, 整数型, , , 

.如果真 (是否为空 (起始位置))
    赋值 (起始位置, 1)
.如果真结束
.如果真 (是否为空 (取出数量))
    赋值 (取出数量, 1)
.如果真结束
赋值 (len, 相除 (取字节集长度 (宽文本), 2))
.如果真 (大于 (取出数量, len))
    赋值 (取出数量, len)
.如果真结束
.如果真 (或者 (小于 (起始位置, 1), 大于 (起始位置, len)))
    返回 (“”)
.如果真结束
赋值 (缓冲区, 取字节集中间 (宽文本, 相减 (相乘 (起始位置, 2), 1), 相乘 (取出数量, 2)))
返回 (到窄文本 (缓冲区))

.子程序 宽文本取右边, 文本型, , 
.参数 宽文本, 字节集, , 
.参数 起始位置, 整数型, 可空, 
.参数 取出数量, 整数型, 可空, 

.局部变量 缓冲区, 字节集, , , 
.局部变量 len, 整数型, , , 
.局部变量 i, 整数型, , , 

.如果真 (是否为空 (起始位置))
    赋值 (起始位置, 1)
.如果真结束
.如果真 (是否为空 (取出数量))
    赋值 (取出数量, 1)
.如果真结束
赋值 (len, 相除 (取字节集长度 (宽文本), 2))
.如果真 (大于 (取出数量, len))
    赋值 (取出数量, len)
.如果真结束
.如果真 (或者 (小于 (起始位置, 1), 大于 (起始位置, len)))
    返回 (“”)
.如果真结束
赋值 (取出数量, 相乘 (取出数量, 2))
赋值 (起始位置, 相减 (相加 (相减 (相乘 (len, 2), 取出数量), 1), 相乘 (相减 (起始位置, 1), 2)))
赋值 (缓冲区, 取字节集中间 (宽文本, 起始位置, 取出数量))
返回 (到窄文本 (缓冲区))

.子程序 混合文本取左边, 文本型, 公开, 从左往右取
.参数 混合文本, 文本型, , 
.参数 开始位置, 整数型, 可空, 
.参数 取出数量, 整数型, 可空, 默认为1

.局部变量 缓冲区, 字节集, , , 
.局部变量 len, 整数型, , , 

.如果真 (是否为空 (开始位置))
    赋值 (开始位置, 1)
.如果真结束
.如果真 (是否为空 (取出数量))
    赋值 (取出数量, 1)
.如果真结束
赋值 (缓冲区, 到宽文本 (混合文本))
赋值 (len, 相除 (取字节集长度 (缓冲区), 2))
.如果真 (大于 (取出数量, len))
    赋值 (取出数量, len)
.如果真结束
.如果真 (或者 (小于 (开始位置, 1), 大于 (开始位置, len)))
    返回 (“”)
.如果真结束
赋值 (缓冲区, 取字节集中间 (缓冲区, 相减 (相乘 (开始位置, 2), 1), 相乘 (取出数量, 2)))
返回 (到窄文本 (缓冲区))

.子程序 混合文本取右边, 文本型, 公开, 从右往左取
.参数 混合文本, 文本型, , 
.参数 开始位置, 整数型, 可空, 
.参数 取出数量, 整数型, 可空, 默认为1

.局部变量 缓冲区, 字节集, , , 
.局部变量 len, 整数型, , , 
.局部变量 i, 整数型, , , 

.如果真 (是否为空 (开始位置))
    赋值 (开始位置, 1)
.如果真结束
.如果真 (是否为空 (取出数量))
    赋值 (取出数量, 1)
.如果真结束
赋值 (缓冲区, 到宽文本 (混合文本))
赋值 (len, 相除 (取字节集长度 (缓冲区), 2))
.如果真 (大于 (取出数量, len))
    赋值 (取出数量, len)
.如果真结束
.如果真 (或者 (小于 (开始位置, 1), 大于 (开始位置, len)))
    返回 (“”)
.如果真结束
赋值 (取出数量, 相乘 (取出数量, 2))
赋值 (开始位置, 相减 (相加 (相减 (相乘 (len, 2), 取出数量), 1), 相乘 (相减 (开始位置, 1), 2)))
赋值 (缓冲区, 取字节集中间 (缓冲区, 开始位置, 取出数量))
返回 (到窄文本 (缓冲区))

.子程序 混合文本取长度, 整数型, 公开, 取回混合文本字符数,非字节数
.参数 混合文本, 文本型, , 

.局部变量 原文本, 字节集, , , 
.局部变量 缓冲区, 字节集, , , 
.局部变量 i, 整数型, , , 
.局部变量 k, 整数型, , , 

赋值 (原文本, 到字节集 (混合文本))
 ' 缓冲区 ＝ 取空白字节集 (取文本长度 (字符串) × 2)
赋值 (k, 1)
.计次循环首 (取字节集长度 (原文本), i)
    .如果 (小于 (原文本 [i], 128))
         ' 缓冲区 [k] ＝ 原文本 [i]
         ' 缓冲区 [k ＋ 1] ＝ 0
        赋值 (k, 相加 (k, 2))
    .否则
        
         ' 缓冲区 [k] ＝ 原文本 [i]
        赋值 (k, 相加 (k, 1))
    .如果结束
    
.计次循环尾 ()
赋值 (k, 相减 (k, 1))
返回 (相除 (k, 2))

.类模块 类_正则表达式, , , 

.程序集变量 RegExp, 对象, , , 
.程序集变量 Execute, 对象, , , 
.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用
RegExp.清除 ()
Execute.清除 ()

.子程序 创建, 逻辑型, 公开, 创建正则表达式
.参数 正则表达式文本, 文本型, , 正则表达式
.参数 是否区分大小写, 逻辑型, 可空, 默认 不区分大小写
.参数 是否全局匹配, 逻辑型, 可空, 默认 全局匹配

.如果真 (取反 (RegExp.是否为空 ()))
    RegExp.清除 ()
.如果真结束
.如果真 (是否为空 (是否区分大小写))
    赋值 (是否区分大小写, 假)
.如果真结束
.如果真 (是否为空 (是否全局匹配))
    赋值 (是否全局匹配, 真)
.如果真结束
.如果真 (RegExp.创建 (“VBScript.RegExp”, ))
    .如果真 (RegExp.写属性 (“pattern”, 正则表达式文本))
        .如果真 (RegExp.写属性 (“ignorecase”, 取反 (是否区分大小写)))
            .如果真 (RegExp.写属性 (“global”, 是否全局匹配))
                返回 (真)
            .如果真结束
            ' 本源码来自易语言资源网(www.5A5X.com)
        .如果真结束
        
    .如果真结束
    
.如果真结束
返回 (假)

.子程序 匹配, 逻辑型, , 匹配
.参数 欲匹配的文本, 文本型, , 

.如果 (RegExp.是否为空 ())
    返回 (假)
.否则
    返回 (RegExp.逻辑方法 (“test”, 欲匹配的文本))
.如果结束


.子程序 搜索全部, 整数型, , 返回匹配数, 用于 取匹配文本
.参数 欲搜索的文本, 文本型, , 

.如果 (RegExp.是否为空 ())
    返回 (0)
.否则
    .如果真 (取反 (Execute.是否为空 ()))
        Execute.清除 ()
    .如果真结束
    赋值 (Execute, RegExp.对象型方法 (“Execute”, 欲搜索的文本))
    返回 (Execute.读数值属性 (“count”, ))
.如果结束


.子程序 取匹配文本, 文本型, , 返回匹配文本
.参数 匹配索引, 整数型, , 

.局部变量 item, 对象, , , 
.局部变量 文本, 文本型, , , 

.如果 (或者 (RegExp.是否为空 (), Execute.是否为空 ()))
    返回 (“”)
.否则
    赋值 (item, Execute.读对象型属性 (“item”, 相减 (匹配索引, 1)))
    赋值 (文本, item.文本方法 (“Value”, ))
    item.清除 ()
    返回 (文本)
.如果结束


.子程序 取子表达式个数, 整数型, , 返回子表达式个数,用于 取子匹配文本
.参数 匹配索引, 整数型, , 

.局部变量 item, 对象, , , 
.局部变量 SubMatches, 对象, , , 
.局部变量 count, 整数型, , , 

.如果 (或者 (RegExp.是否为空 (), Execute.是否为空 ()))
    返回 (0)
.否则
    赋值 (item, Execute.读对象型属性 (“item”, 相减 (匹配索引, 1)))
    赋值 (SubMatches, item.读对象型属性 (“SubMatches”, ))
    item.清除 ()
    赋值 (count, SubMatches.读数值属性 (“count”, ))
    SubMatches.清除 ()
    返回 (count)
.如果结束


.子程序 取子匹配文本, 文本型, , 返回子匹配文本
.参数 匹配索引, 整数型, , 
.参数 子表达式索引, 整数型, , 

.局部变量 item, 对象, , , 
.局部变量 SubMatches, 对象, , , 
.局部变量 文本, 文本型, , , 

.如果 (或者 (RegExp.是否为空 (), Execute.是否为空 ()))
    返回 (“”)
.否则
    赋值 (item, Execute.读对象型属性 (“item”, 相减 (匹配索引, 1)))
    赋值 (SubMatches, item.读对象型属性 (“SubMatches”, ))
    item.清除 ()
    赋值 (文本, SubMatches.文本方法 (“item”, 相减 (子表达式索引, 1)))
    SubMatches.清除 ()
    返回 (文本)
.如果结束


.子程序 替换, 文本型, , 返回替换后的文本
.参数 欲被替换的文本, 文本型, , 
.参数 用作替换的文本, 文本型, 可空, 默认 ""
.参数 是否区分大小写, 逻辑型, 可空, 默认 真

.局部变量 x, 整数型, , , 
.局部变量 i, 整数型, , , 

.如果真 (是否为空 (用作替换的文本))
    赋值 (用作替换的文本, “”)
.如果真结束
.如果真 (是否为空 (是否区分大小写))
    赋值 (是否区分大小写, 真)
.如果真结束
赋值 (x, 搜索全部 (欲被替换的文本))
.计次循环首 (x, i)
    赋值 (欲被替换的文本, 子文本替换 (欲被替换的文本, 取匹配文本 (i), 用作替换的文本, , , 是否区分大小写))
.计次循环尾 ()
返回 (欲被替换的文本)

.窗口程序集 窗口程序集1, , , 

.程序集变量 代码框类, 类_代码编辑框, , , 
.子程序 _窗口1_创建完毕, 空白型, , 
代码框类.代码框初始化 ()
' 本源码来自易语言资源网(www.5A5X.com)

.子程序 _代码编辑框_处理新字符, 空白型, , 
.参数 接收到的字符, 文本型, , 

 ' 代码框类.输入事件接口 (接收到的字符)

.子程序 _按钮1_被单击, 空白型, , 
 ' 代码框类.更新全部风格 ()

.子程序 _代码编辑框_更新界面, 空白型, , 
代码框类.更新事件接口 ()


.程序集 __HIDDEN_TEMP_MOD__, , , 

.子程序 UTF8转ANSI, 文本型, , 方圆软件工作室－林炳崇（进在眼前）出品
.参数 UTF8, 字节集, , 待转换UTF-8编码字节集



.子程序 UNICODE转ANSI, 文本型, , 方圆软件工作室－林炳崇（近在眼前）出品
.参数 Unicode数据, 字节集, , Unicode码字节集数据



.子程序 ANSI转UNICODE, 字节集, , 方圆软件工作室－林炳崇（近在眼前）出品
.参数 文本, 文本型, , Ansi码文本，只针对中文或双字节全角字符



.子程序 UTF8转UNICODE, 字节集, , 方圆软件工作室－林炳崇（近在眼前）出品
.参数 UTF8, 字节集, , 待转换UTF-8编码字节集



.子程序 UNICODE转UTF8, 字节集, , 方圆软件工作室－林炳崇（近在眼前）出品
.参数 UNICODE, 字节集, , 待转换UNICODE编码字节集



.子程序 ANSI转UTF8, 字节集, , 方圆软件工作室－林炳崇（进在眼前）出品
.参数 文本, 文本型, , 要转换为UTF8编码的文本



.子程序 BASE64编码, 文本型, , 方圆软件工作室－林炳崇（近在眼前）出品
.参数 待编码数据, 字节集, , 



.子程序 BASE64解码, 字节集, , 方圆软件工作室－林炳崇（近在眼前）出品
.参数 待解码数据, 文本型, , 



.子程序 文本加密, 文本型, , 方圆软件工作室－林炳崇（近在眼前）出品
.参数 文本, 文本型, , 待加密文本（本加密方法为动态随机加密，所以每次加密后的文本都不同）
.参数 密匙, 文本型, 可空, 长度为62任意不重复单字节可见字符，默认为：ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghijklmnopqrstuvwxyz



.子程序 文本解密, 文本型, , 方圆软件工作室－林炳崇（近在眼前）出品
.参数 文本, 文本型, , 待解密文本
.参数 密匙, 文本型, 可空, 必须跟加密时相同的密匙文本



.子程序 ANSI转USC2, 文本型, , 方圆软件工作室－林炳崇（近在眼前）出品
.参数 文本, 文本型, , 



.子程序 USC2转ANSI, 文本型, , 方圆软件工作室－林炳崇（近在眼前）出品
.参数 USC2, 文本型, , 




 ' 不属于任何一个程序集、类模块的函数：
