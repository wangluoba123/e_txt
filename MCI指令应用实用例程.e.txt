 ' 文件类型：Windows窗口程序

 ' 程序名称：MCI指令应用例程
 ' 程序描述：
 ' 程序作者：燕为卿
 ' 邮政编码：430070
 ' 联系地址：湖北省武汉市洪山区珞狮南路465号都市心情杂志社编辑部
 ' 联系电话：027-67128976
 ' 传真号码：
 ' 电子信箱：pinelily@vip.sina.com
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 586
    高度 = 348
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “MCI指令应用实用例程”
    帮助文件名 = “”





 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 3 7 系统核心支持库
 ' iext 27bb20fdd3e145e4bee3db39ddd6e64c 1 1 扩展界面支持库一




数据类型 标签信息, , 
    .成员 标题, 文本型, , , 
    .成员 歌手, 文本型, , , 
    .成员 专辑, 文本型, , , 
    .成员 年代, 文本型, , , 
    .成员 备注, 文本型, , , 
    .成员 流派, 文本型, , , 


.DLL命令 发送指令, 整数型, "winmm.dll", "mciSendStringA", , 
    .参数 参数1, 文本型, , 
    .参数 参数2, 文本型, , 
    .参数 参数3, 整数型, , 
    .参数 参数4, 整数型, , 

.DLL命令 出错信息, 空白型, "winmm.dll", "mciGetErrorStringA", , 
    .参数 错误代码, 整数型, , 
    .参数 出错信息, 文本型, , 
    .参数 信息长度, 整数型, , 

.DLL命令 取短文件名, 整数型, "kernel32.dll", "GetShortPathNameA", , 
    .参数 长文件名, 文本型, , 
    .参数 短文件名, 文本型, , 
    .参数 缓冲区长度, 整数型, , 

.窗口程序集 窗口程序集1, , , 

.程序集变量 设备, 文本型, , , 
.子程序 _浏览按钮_被单击, 空白型, , 
.局部变量 文件长度, 文本型, , , 
.局部变量 代码, 整数型, , , 
.局部变量 信息长度, 整数型, , , 
.局部变量 信息, 文本型, , , 

赋值 (.标题, “请选择音乐文件”)
赋值 (.过滤器, “MP3(*.mp3);WAV(*.wav)|*.MP3;*.wav”)
.如果 (打开 ())
    赋值 (.内容, .文件名)
     ' 取选定歌曲时间长度
    赋值 (设备, 取空白文本 (255))
    取短文件名 (.内容, 设备, 255)
    赋值 (文件长度, 取空白文本 (255))
    赋值 (代码, 发送指令 (相加 (“status ”, 设备, “ length”), 文件长度, 255, 0))
    .如果 (等于 (代码, 0))
        赋值 (文件长度, 取文本左边 (文件长度, 8))
        赋值 (文件长度, 到文本 (整除 (到数值 (文件长度), 1000)))
        赋值 (.最大位置, 到数值 (文件长度))
        赋值 (文件长度, 相加 (到文本 (整除 (到数值 (文件长度), 60)), “分”, 到文本 (相减 (到数值 (文件长度), 相乘 (整除 (到数值 (文件长度), 60), 60))), “秒”))
        赋值 (., 相加 (“时间总长：”, 文件长度))
        取文件信息 (“样本大小：”, “ alignment”)
        取文件信息 (“取样值：”, “ bitspersample”)
        取文件信息 (“取样频率：”, “ bytespersec”)
        取文件信息 (“当前音轨：”, “ currnt track”)
        取文件信息 (“取样格式：”, “ format tag”)
        取文件信息 (“起始位置：”, “ start position”)
        取TAG信息 ()
    .否则
        赋值 (信息, 取空白文本 (1024))
        出错信息 (代码, 信息, 1024)
        赋值 (., 相加 (“时间总长：”, 信息))
    .如果结束
    
.否则
    返回 ()
.如果结束


.子程序 取文件信息, 空白型, , 
.参数 标签, 透明标签, , 
.参数 标签标题, 文本型, , 
.参数 指令参数, 文本型, , 

.局部变量 信息代码, 整数型, , , 
.局部变量 信息内容, 文本型, , , 
.局部变量 取得内容, 文本型, , , 

赋值 (取得内容, 取空白文本 (255))
赋值 (信息代码, 发送指令 (相加 (“status ”, 设备, 指令参数), 取得内容, 255, 0))
.如果 (不等于 (信息代码, 0))
    赋值 (信息内容, 取空白文本 (1024))
    出错信息 (信息代码, 信息内容, 1024)
    赋值 (标签., 相加 (标签标题, 信息内容))
.否则
    赋值 (标签., 相加 (标签标题, 取得内容))
.如果结束


.子程序 取TAG信息, 空白型, , 
.局部变量 数据, 字节集, , , 
.局部变量 信息, 标签信息, , , 
.局部变量 索引, 整数型, , , 
.局部变量 文件号, 整数型, , , 

赋值 (文件号, 打开文件 (.内容, #读入, ))
移动读写位置 (文件号, #文件尾, -128)
赋值 (数据, 读入字节集 (文件号, 128))
关闭文件 (文件号)
.如果 (大于或等于 (取字节集长度 (数据), 128))
    .如果 (等于 (到小写 (到文本 (取字节集左边 (数据, 3))), “tag”))
        赋值 (信息.标题, 删首尾空 (到文本 (取字节集中间 (数据, 4, 30))))
        赋值 (信息.歌手, 删首尾空 (到文本 (取字节集中间 (数据, 34, 30))))
        赋值 (信息.专辑, 删首尾空 (到文本 (取字节集中间 (数据, 64, 30))))
        赋值 (信息.年代, 删首尾空 (到文本 (取字节集中间 (数据, 94, 4))))
        赋值 (信息.备注, 删首尾空 (到文本 (取字节集中间 (数据, 98, 30))))
        赋值 (索引, 相加 (取代码 (到文本 (取字节集右边 (数据, 1)), 1), 1))
        .如果 (并且 (大于 (索引, 0), 小于或等于 (索引, 148)))
            赋值 (信息.流派, 多项选择 (索引, “Blues”, “Classic Rock”, “Country”, “Dance”, “Disco”, “Funk”, “Grunge”, “Hip-Hop”, “Jazz”, “Metal”, “New Age”, “Oldies”, “Other”, “Pop”, “R&B”, “Rap”, “Reggae”, “Rock”, “Techno”, “Industrial”, “Alternative”, “Ska”, “Death Metal”, “Pranks”, “Soundtrack”, “Euro-Techno”, “Ambient”, “Trip Hop”, “Vocal”, “Jazz+Funk”, “Fusion”, “Trance”, “Classical”, “Instrumental”, “Acid”, “House”, “Game”, “Sound Clip”, “Gospel”, “Noise”, “Alt. Rock”, “Bass”, “Soul”, “Punk”, “Space”, “Meditative”, “Instrumental Pop”, “Instrumental Rock”, “Ethnic”, “Gothic”, “Darkwave”, “Techno-Industrial”, “Electronic”, “Pop-Folk”, “Eurodance”, “Dream”, “Southern Rock”, “Comedy”, “Cult”, “Gangsta Rap”, “Top 40”, “Christian Rap”, “Pop/Punk”, “Jungle”, “Native American”, “Cabaret”, “New Wave”, “Phychedelic”, “Rave”, “Showtunes”, “Trailer”, “Lo-Fi”, “Tribal”, “Acid Punk”, “Acid Jazz”, “Polka”, “Retro”, “Musical”, “Rock & Roll”, “Hard Rock”, “Folk”, “Folk/Rock”, “National Folk”, “Swing”, “Fast-Fusion”, “Bebob”, “Latin”, “Revival”, “Celtic”, “Blue Grass”, “Avantegarde”, “Gothic Rock”, “Progressive Rock”, “Psychedelic Rock”, “Symphonic Rock”, “Slow Rock”, “Big Band”, “Chorus”, “Easy Listening”, “Acoustic”, “Humour”, “Speech”, “Chanson”, “Opera”, “Chamber Music”, “Sonata”, “Symphony”, “Booty Bass”, “Primus”, “Porn Groove”, “Satire”, “Slow Jam”, “Club”, “Tango”, “Samba”, “Folklore”, “Ballad”, “power Ballad”, “Rhythmic Soul”, “Freestyle”, “Duet”, “Punk Rock”, “Drum Solo”, “A Capella”, “Euro-House”, “Dance Hall”, “Goa”, “Drum & Bass”, “Club-House”, “Hardcore”, “Terror”, “indie”, “Brit Pop”, “Negerpunk”, “Polsk Punk”, “Beat”, “Christian Gangsta Rap”, “Heavy Metal”, “Black Metal”, “Crossover”, “Comteporary Christian”, “Christian Rock”, “Merengue”, “Salsa”, “Trash Metal”, “Anime”, “JPop”, “Synth Pop”))
        .否则
            赋值 (信息.流派, “未知”)
        .如果结束
        赋值 (., 相加 (“标题：”, 信息.标题))
        赋值 (., 相加 (“歌手：”, 信息.歌手))
        赋值 (., 相加 (“专辑：”, 信息.专辑))
        赋值 (., 相加 (“年代：”, 信息.年代))
        赋值 (., 相加 (“备注：”, 信息.备注))
        赋值 (., 相加 (“流派：”, 信息.流派))
    .否则
        赋值 (., “无TAG信息”)
        连续赋值 (“”, ., ., ., ., .)
    .如果结束
    
.否则
    赋值 (., “无TAG信息”)
    连续赋值 (“”, ., ., ., ., .)
.如果结束


.子程序 _播放按钮_被单击, 空白型, , 
.局部变量 状态, 文本型, 静态, , 

赋值 (.禁止, 假)
赋值 (状态, 取空白文本 (255))
发送指令 (相加 (“status ”, 设备, “ mode”), 状态, 255, 0)
.判断开始 (等于 (到小写 (状态), “stopped”))
    发送指令 (相加 (“open ”, 设备), “”, 0, 0)
    发送指令 (相加 (“play ”, 设备), “”, 0, 0)
    赋值 (.标题, “暂停”)
    赋值 (., “当前状态：正在播放”)
    赋值 (.时钟周期, 1000)
.判断 (等于 (到小写 (状态), “playing”))
    发送指令 (相加 (“pause ”, 设备), “”, 0, 0)
    赋值 (.标题, “播放”)
    赋值 (., “当前状态：暂停播放”)
    赋值 (.时钟周期, 0)
.判断 (等于 (到小写 (状态), “paused”))
    发送指令 (相加 (“resume ”, 设备), “”, 0, 0)
    赋值 (.标题, “暂停”)
    赋值 (., “当前状态：正在播放”)
    赋值 (.时钟周期, 1000)
.默认
    
.判断结束


.子程序 _停止按钮_被单击, 空白型, , 
发送指令 (相加 (“stop ”, 设备), “”, 0, 0)
发送指令 (相加 (“close ”, 设备), “”, 0, 0)
赋值 (.标题, “播放”)
赋值 (., “当前状态：停止播放”)
赋值 (.时钟周期, 0)
赋值 (.位置, 0)
赋值 (.禁止, 真)

.子程序 _时钟_周期事件, 空白型, , 
赋值 (.位置, 相加 (.位置, 1))
.如果真 (等于 (.位置, .最大位置))
    _停止按钮_被单击 ()
.如果真结束


.子程序 _进度滑块条_位置被改变, 空白型, , 
.局部变量 跳到播放, 整数型, , , 

.如果 (等于 (.位置, .最大位置))
    _停止按钮_被单击 ()
.否则
    赋值 (跳到播放, 相乘 (.位置, 1000))
    .如果 (等于 (.标题, “暂停”))
        赋值 (.时钟周期, 0)
        发送指令 (相加 (“seek ”, 设备, “ to ”, 到文本 (跳到播放)), “”, 0, 0)
        发送指令 (相加 (“play ”, 设备), “”, 0, 0)
        赋值 (.时钟周期, 1000)
    .否则
        发送指令 (相加 (“seek ”, 设备, “ to ”, 到文本 (跳到播放)), “”, 0, 0)
    .如果结束
    
.如果结束


.程序集 子程序集, , , 


 ' 不属于任何一个程序集、类模块的函数：
