 ' 文件类型：Windows控制台程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 800
    高度 = 600
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    窗口类名 = “”
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “雷电模拟器多开中控”
    帮助文件名 = “”



.常量 JV类型_未定义, "-1", 隐藏, JVTYPE_UNDEFINED
.常量 JV类型_空, "0", 隐藏, JVTYPE_NULL
.常量 JV类型_双精度型, "1", 隐藏, JVTYPE_DOUBLE
.常量 JV类型_长整数型, "2", 隐藏, JVTYPE_LONG
.常量 JV类型_逻辑型, "3", 隐藏, JVTYPE_BOOL
.常量 JV类型_文本型, "4", 隐藏, JVTYPE_STRING
.常量 JV类型_数组, "5", 隐藏, JVTYPE_ARRAY
.常量 JV类型_对象, "6", 隐藏, JVTYPE_OBJECT


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 5 7 系统核心支持库
 ' iext 27bb20fdd3e145e4bee3db39ddd6e64c 2 0 扩展界面支持库一
 ' eAPI F7FC1AE45C5C4758AF03EF19F18A395D 3 1 应用接口支持库
 ' spec A512548E76954B6E92C21055517615B0 3 1 特殊功能支持库
 ' shell 52F260023059454187AF826A3C07AF2A 3 0 操作系统界面功能支持库



 ' 所需要的模块
 ' 雷电_模拟器操作 C:\Users\Administrator\Desktop\雷电_模拟器操作模块.ec
 ' 果核精绘皮肤模块 C:\Users\Administrator\Desktop\果核精绘皮肤模块1.0.ec


数据类型 坐标型x, 公开, 
    .成员 横, 整数型, , , 横X
    .成员 纵, 整数型, , , 纵Y

数据类型 进程结构, 公开, 
    .成员 进程句柄, 整数型, , , hProcess
    .成员 线程句柄, 整数型, , , hThread
    .成员 进程标识符, 整数型, , , dwProcessId
    .成员 线程标识符, 整数型, , , dwThreadId

数据类型 进程信息列表, 公开, 
    .成员 dwSize, 整数型, , , 1
    .成员 cntUsage, 整数型, , , 2
    .成员 进程ID, 整数型, , , 3
    .成员 th32DefaultHeapID, 整数型, , , 4
    .成员 th32ModuleID, 整数型, , , 5
    .成员 cntThreads, 整数型, , , 6
    .成员 th32ParentProcessID, 整数型, , , 7
    .成员 pcPriClassBase, 整数型, , , 8
    .成员 dwFlags, 整数型, , , 9
    .成员 进程名称, 字节型, , "256", 10

数据类型 模块信息, 公开, 进程模块信息
    .成员 size, 整数型, , , 1
    .成员 mid, 整数型, , , 2
    .成员 pid, 整数型, , , 3
    .成员 gusage, 整数型, , , 4
    .成员 pusage, 整数型, , , 5
    .成员 base, 整数型, , , 6
    .成员 大小, 整数型, , , 7
    .成员 模块句柄, 整数型, , , 8
    .成员 模块文件名, 字节型, , "256", 
    .成员 模块完整路径, 字节型, , "256", 

数据类型 PROCESS_BASIC_INFORMATION, 公开, 
    .成员 ExitStatus, 整数型, , , 
    .成员 PebBaseAddress, 整数型, , , 
    .成员 AffinityMask, 整数型, , , 
    .成员 BasePriority, 整数型, , , 
    .成员 UniqueProcessId, 整数型, , , 
    .成员 InheritedFromUniqueProcessId, 整数型, , , 

.全局变量 类_雷电_dnconsole操作, 雷电dnconsole操作, , , 

.DLL命令 CloseHandle, 逻辑型, "kernel32", "CloseHandle", 公开, 关闭一个内核对象。其中包括文件、文件映射、进程、线程、安全和同步对象等。涉及文件处理时，这个函数通常与vb的close命令相似。应尽可能的使用close，因为它支持vb的差错控制。注意这个函数使用的文件句柄与vb的文件编号是完全不同的  非零表示成功，零表示失败。会设置GetLastError
    .参数 对象句柄, 整数型, , 欲关闭的一个对象的句柄;

.DLL命令 IsWindowVisible, 逻辑型, "", "IsWindowVisible", 公开, 窗口_是否可见  判断窗口是否可见  返回真为可见，否则为不可见
    .参数 hwnd, 整数型, , 要测试的那个窗口的句柄

.DLL命令 IsWindow, 整数型, "user32", "IsWindow", 公开, 窗口_句柄是否有效  判断一个窗口句柄是否有效(非零表示成功，零表示失败)
    .参数 hwnd, 整数型, , 

.DLL命令 CreateToolhelp32Snapshot, 整数型, "", "CreateToolhelp32Snapshot", 公开, 创建进程快照
    .参数 falg, 整数型, , 
    .参数 id, 整数型, , 

.DLL命令 Process32Next, 整数型, "", "Process32Next", 公开, 取下一个进程
    .参数 h, 整数型, , 
    .参数 p, 进程信息列表, , 

.DLL命令 GetSystemDirectoryA, 整数型, "kernel32", "GetSystemDirectoryA", 公开, 目录_取system32目录  成功返回system32目录的全路径
    .参数 缓冲区, 文本型, , 
    .参数 缓冲区长度, 整数型, , 

.DLL命令 Module32First, 整数型, "", "Module32First", 公开, 第一个模块，查找模块
    .参数 快照句柄, 整数型, , 
    .参数 模块信息, 模块信息, , 

.DLL命令 GetCurrentProcessId, 整数型, "kernel32.dll", "GetCurrentProcessId", 公开, 取自进程ID

.DLL命令 TerminateProcess, 整数型, "", "TerminateProcess", 公开, _进程终止
    .参数 进程ID, 整数型, , 
    .参数 a, 整数型, , 

.DLL命令 OpenProcess, 整数型, "", "OpenProcess", 公开, 打开进程
    .参数 进程对象, 整数型, , 
    .参数 继承句柄, 整数型, , 
    .参数 进程标识符, 整数型, , 

.DLL命令 GetWindowTextLength, 整数型, "user32", "GetWindowTextLengthA", 公开, 
    .参数 hwnd, 整数型, , 

.DLL命令 GetWindowTextA, 整数型, "", "GetWindowTextA", 公开, 窗口_取标题
    .参数 hwnd, 整数型, , 
    .参数 标题名, 文本型, 传址, 
    .参数 长度, 整数型, , 

.DLL命令 GetAncestor, 整数型, "", "GetAncestor", 公开, 取出指定窗口的最顶级父窗口
    .参数 hwnd, 整数型, , 子窗口句柄
    .参数 gaFlags, 整数型, , 

.DLL命令 GetParent, 整数型, "", "GetParent", 公开, 取父句柄
    .参数 hwnd, 整数型, , 

.DLL命令 FindWindowExA_文本, 整数型, "user32", "FindWindowExA", 公开, 
    .参数 父窗口句柄, 整数型, , 
    .参数 子窗口, 整数型, , 
    .参数 类名, 文本型, , 
    .参数 标题, 文本型, , 

.DLL命令 GetWindowThreadProcessId, 整数型, "user32.dll", "GetWindowThreadProcessId", 公开, 线程_取ID
    .参数 hwnd, 整数型, , 指定窗口句柄
    .参数 进程标识符, 整数型, 传址, 用于装载进程ID的变量

.DLL命令 GetClassNameA, 整数型, "user32.dll", "GetClassNameA", 公开, 窗口_取类名 为指定的窗口取得类名　以字节数表示的类名长度；排除最后的空中止字符。零表示出错。会设置GetLastError
    .参数 句柄, 整数型, , 欲获得类名的那个窗口的句柄
    .参数 文本, 文本型, 传址, 随同类名载入的缓冲区。预先至少必须分配nMaxCount+1个字符
    .参数 文本长度, 整数型, , 由lpClassName提供的缓冲区长度;

.DLL命令 _取指针_文本型, 整数型, "", "lstrcpyn", 公开, 
    .参数 目的指针, 文本型, 传址, 
    .参数 源指针, 文本型, 传址, 
    .参数 复制长度, 整数型, , 0

.DLL命令 GetShortPathNameA, 整数型, "kernel32", "GetShortPathNameA", 公开, 取短文件名
    .参数 lpszLongPath, 文本型, 传址, 
    .参数 lpszShortPath, 文本型, 传址, 
    .参数 cchBuffer, 整数型, , 

.DLL命令 GetLongPathNameA, 整数型, "kernel32.dll", "GetLongPathNameA", 公开, 取长文件名
    .参数 lpszShortPath, 文本型, 传址, 
    .参数 lpszLongPath, 文本型, 传址, 
    .参数 cchBuffer, 整数型, , 

.DLL命令 GetInputState, 整数型, "user32", "GetInputState", 公开, 用法,如果真(我的处理事件()≠0),处理事件()    比系统自带的"处理事件"比3倍以上

.DLL命令 CreateWaitableTimerA, 整数型, "", "CreateWaitableTimerA", 公开, 程序延时
    .参数 lpTimerAttributes, 整数型, , 
    .参数 bManualReset, 逻辑型, , 
    .参数 lpTimerName, 整数型, , 

.DLL命令 SetWaitableTimer, 整数型, "", "SetWaitableTimer", 公开, 
    .参数 hTimer, 整数型, , 
    .参数 pDueTime, 未知类型0x41011DA9, , 
    .参数 lPeriod, 整数型, , 
    .参数 pfnCompletionRoutine, 整数型, , 
    .参数 lpArgToCompletionRoutine, 整数型, , 
    .参数 fResume, 逻辑型, , 

.DLL命令 MsgWaitForMultipleObjects, 整数型, "", "MsgWaitForMultipleObjects", 公开, 
    .参数 nCount, 整数型, , 
    .参数 pHandles, 整数型, 传址, 
    .参数 fWaitAll, 逻辑型, , 
    .参数 dwMilliseconds, 整数型, , 
    .参数 dwWakeMask, 整数型, , 

.DLL命令 WideCharToMultiByte, 整数型, "kernel32.dll", "WideCharToMultiByte", 公开, kernel32.dll 将通配符映像为多字节 _Unicode转Utf8
    .参数 CodePage, 整数型, , 1
    .参数 dwFlags, 整数型, , 
    .参数 lpWideCharStr, 字节集, , 
    .参数 cchWideChar, 整数型, , 
    .参数 lpMultiByteStr, 字节集, , 
    .参数 cchMultiByte, 整数型, , 
    .参数 lpDefaultChar, 整数型, , 
    .参数 lpUsedDefaultChar, 逻辑型, , 

.DLL命令 CoInitialize, 空白型, "ole32.dll", "CoInitialize", 公开, 加载COM
    .参数 pvReserved, 整数型, , 值为0

.DLL命令 CoUninitialize, 空白型, "ole32.dll", "CoUninitialize", 公开, 卸载COM

.DLL命令 GetUserNameA, 整数型, "advapi32.dll", "GetUserNameA", 公开, 取出当前的用户名,TRUE（非零）表示成功，否则返回零。
    .参数 字串缓冲区, 文本型, , lpBuffer，随同用户名载入的字串缓冲区
    .参数 缓冲区长度, 整数型, 传址, nSize，缓冲区的长度。这个变量随同返回用户名的实际长度载入

.DLL命令 SHGetSpecialFolderPath, 逻辑型, "", "SHGetSpecialFolderPathA", 公开, 取系统目录
    .参数 hwndOwner, 整数型, , 
    .参数 lpszPath, 文本型, , 
    .参数 nFolder, 整数型, , 
    .参数 fCreate, 逻辑型, , 

.DLL命令 GetWindowsDirectoryA, 整数型, "kernel32.dll", "GetWindowsDirectoryA", 公开, 目录_取Windows目录  成功返回Windows目录的全路径
    .参数 缓冲区, 文本型, , 
    .参数 尺寸, 整数型, , 

.DLL命令 GetTempPathA, 整数型, "kernel32.dll", "GetTempPathA", 公开, 取临时目录
    .参数 目录长度, 整数型, , 
    .参数 临时目录, 文本型, , 

.DLL命令 MultiByteToWideChar, 整数型, "", "MultiByteToWideChar", 公开, 
    .参数 CodePage, 整数型, , 
    .参数 dwFlags, 整数型, , 
    .参数 lpMultiByteStr, 文本型, , 
    .参数 cchMultiByte, 整数型, , 
    .参数 lpWideCharStr, 字节集, , 
    .参数 cchWideChar, 整数型, , 

.DLL命令 W2A_, 整数型, "kernel32.dll", "WideCharToMultiByte", 公开, 
    .参数 代码页, 整数型, , 
    .参数 标志, 整数型, , 
    .参数 UNICODE文本, 字节集, , UNICODE
    .参数 长度, 整数型, , 
    .参数 ASCI文本, 文本型, , ASCI
    .参数 长度, 整数型, , 
    .参数 pDefaultChar, 整数型, , 0
    .参数 pDefaultCharUsed, 逻辑型, 传址, 0

.DLL命令 PathFileExistsA, 整数型, "shlwapi.dll", "PathFileExistsA", 公开, 
    .参数 pszPath, 文本型, , 

.DLL命令 CopyFileA, 逻辑型, "kernel32.dll", "CopyFileA", 公开, 文件_复制
    .参数 源文件名, 文本型, , lpExistingFileName，被复制的文件名
    .参数 目标文件名, 文本型, , lpNewFileName，目标文件名

.DLL命令 DeleteFileA, 逻辑型, "Kernel32.dll", "DeleteFileA", 公开, 删除指定文件
    .参数 文件名, 文本型, , lpFileName,欲删除文件的名字

.窗口程序集 窗口程序集_启动窗口, , , 

.程序集变量 集_当前任务, 文本型, , , 
.程序集变量 线程开关, 整数型, , , 
.子程序 __启动窗口_创建完毕, 空白型, , 
果核_加载皮肤 ()
子_刷新超级列表框 ()

.子程序 子_刷新超级列表框, 空白型, , 
.局部变量 局_模拟器信息, 文本型, , "0", 
.局部变量 局_模拟器个数, 整数型, , , 
.局部变量 内部计次, 整数型, , , 
.局部变量 计次, 整数型, , , 
.局部变量 表项, 整数型, , , 
.局部变量 分割文本数组, 文本型, , "0", 

全部删除 ()
清空 ()
赋值 (局_模拟器个数, 类_雷电_dnconsole操作.取全部模拟器 (局_模拟器信息))
.计次循环首 (局_模拟器个数, 计次)
    赋值 (表项, .插入表项 ())
    赋值 (分割文本数组, 分割文本 (局_模拟器信息 [计次], “,”, ))
    分割文本数组.加入项目 ( [2], 计次)
    .计次循环首 (取数组成员数 (分割文本数组), 内部计次)
        表项.置标题 (内部计次, 分割文本数组 [内部计次])
    .计次循环尾 ()
.计次循环尾 ()
赋值 (.现行选中项, 0)
_按钮_选中以开启的模拟器_被单击 ()
相加 (“模拟器信息列表刷新完毕!”, #换行符).加入文本 ()

.子程序 _超级列表框1_当前表项被改变, 空白型, , 
.局部变量 结果, 文本型, , , 
.局部变量 分割结果, 文本型, , "0", 

 ' 结果 ＝ 类_雷电_dnconsole操作.取分辨率 (超级列表框1.现行选中项)
 ' .判断开始 (等于 (寻找文本 (结果, “error: device not found”, , 假), -1))
     ' 分割结果 ＝ 分割文本 (结果, “x”, )
     ' 编辑框_模拟器宽度.内容 ＝ 分割结果 [1]
     ' 编辑框_模拟器高度.内容 ＝ 分割结果 [2]
.默认
     ' 连续赋值 (“”, 编辑框_模拟器宽度.内容, 编辑框_模拟器高度.内容)
.判断结束


.子程序 _超级列表框1_检查框状态被改变, 空白型, , 
.参数 表项索引, 整数型, , 
.参数 检查框状态, 整数型, , 

.判断开始 (等于 (检查框状态, 1))
    表项索引.选择表项 ()
.默认
    表项索引.取消表项选择 ()
.判断结束



.子程序 _按钮_新建模拟器_被单击, 空白型, , 
.局部变量 局_计次, 整数型, , , 

.计次循环首 (到整数 (.内容), 局_计次)
    相加 (“正在建立第”, 到文本 (局_计次), “个模拟器...................”, #换行符).加入文本 ()
    类_雷电_dnconsole操作.新建模拟器 ()
    相加 (“第”, 到文本 (局_计次), “个模拟器,建立成功!”, #换行符).加入文本 ()
.计次循环尾 ()
相加 (“新建模拟器完成,您总共建立了”, 到文本 (相减 (局_计次, 1)), “个”, #换行符).加入文本 ()
全部删除 ()
清空 ()
子_刷新超级列表框 ()


.子程序 _按钮_删除模拟器_被单击, 空白型, , 
.局部变量 局_计次1, 整数型, , , 
.局部变量 索引, 整数型, , "0", 

子_取选中项索引 (索引)

.计次循环首 (取数组成员数 (索引), 局_计次1)
    相加 (“正在删除第”, 到文本 (局_计次1), “个模拟器----->索引为:”, 到文本 (索引 [局_计次1]), #换行符).加入文本 ()
    类_雷电_dnconsole操作.删除模拟器 (索引 [局_计次1])
.计次循环尾 ()
相加 (“删除模拟器,操作完成!总共删除了”, 到文本 (相减 (局_计次1, 1)), “个”, #换行符).加入文本 ()
子_刷新超级列表框 ()


.子程序 子_取选中项索引, 空白型, , 
.参数 结果, 整数型, 数组, 

.局部变量 索引, 整数型, , "0", 
.局部变量 局_计次, 整数型, , , 

.计次循环首 (取表项数 (), 局_计次)
    
    .如果真 (等于 (相减 (局_计次, 1).取当前状态图片 (), 1))
         ' 加入成员 (索引, 到整数 (相减 (局_计次, 1).取标题 (1)))
     ' .如果真结束
    
.计次循环尾 ()
赋值 (结果, 索引)


.子程序 _按钮_复制模拟器_被单击, 空白型, , 
.局部变量 局_计次, 整数型, , , 

.计次循环首 (到整数 (.内容), 局_计次)
    相加 (“正在克隆”, 到文本 (局_计次), “个模拟器...........”, #换行符).加入文本 ()
    类_雷电_dnconsole操作.克隆模拟器 (.取项目文本 (.现行选中项), 0)
.计次循环尾 ()
相加 (“克隆完成,总共克隆了”, 到文本 (相减 (局_计次, 1)), “个”, #换行符).加入文本 ()
子_刷新超级列表框 ()

.子程序 _按钮_启用模拟器_被单击, 空白型, , 
.局部变量 索引, 整数型, , "0", 
.局部变量 局_计次, 整数型, , , 

子_取选中项索引 (索引)
.计次循环首 (取数组成员数 (索引), 局_计次)
    相加 (“正在启动第”, 到文本 (局_计次), “个模拟器...........”, #换行符).加入文本 ()
    类_雷电_dnconsole操作.启动模拟器 (索引 [局_计次], 0)
    相加 (“第”, 到文本 (局_计次), “个模拟器,启动完成!”, #换行符).加入文本 ()
.计次循环尾 ()
相加 (“启动操作结束,您一共启动了”, 到文本 (相减 (局_计次, 1)), “个模拟器!”, #换行符).加入文本 ()
延迟 (5000)
子_刷新超级列表框 ()

.子程序 _按钮7_被单击, 空白型, , 
.局部变量 索引, 整数型, , "0", 
.局部变量 局_计次, 整数型, , , 

子_取选中项索引 (索引)
.计次循环首 (取数组成员数 (索引), 局_计次)
    相加 (“正在关闭第”, 到文本 (局_计次), “个模拟器...........”, #换行符).加入文本 ()
    类_雷电_dnconsole操作.关闭模拟器 (索引 [局_计次])
    相加 (“第”, 到文本 (局_计次), “个模拟器,关闭动完成!”, #换行符).加入文本 ()
.计次循环尾 ()
相加 (“关闭操作结束,您一共关闭了”, 到文本 (相减 (局_计次, 1)), “个模拟器!”, #换行符).加入文本 ()
延迟 (1000)
子_刷新超级列表框 ()

.子程序 _按钮_勾选所有_被单击, 空白型, , 
.局部变量 局_计次, 整数型, , , 

.计次循环首 (取表项数 (), 局_计次)
    相减 (局_计次, 1).置状态图片 (1)
.计次循环尾 ()


.子程序 _按钮_取消所有_被单击, 空白型, , 
.局部变量 局_计次, 整数型, , , 

.计次循环首 (取表项数 (), 局_计次)
    相减 (局_计次, 1).置状态图片 (0)
.计次循环尾 ()


.子程序 _按钮_排列窗口_被单击, 空白型, , 
.局部变量 索引, 整数型, , "0", 
.局部变量 局_计次, 整数型, , , 
.局部变量 窗口句柄, 整数型, , "0", 
.局部变量 错误信息, 空白型, , , 

子_取选中项索引 (索引)
.计次循环首 (取数组成员数 (索引), 局_计次)
    .如果真 (不等于 (到整数 (索引.取标题 ( [局_计次], 3)), 0))
        加入成员 (窗口句柄, 到整数 (索引.取标题 ( [局_计次], 3)))
    .如果真结束
    
.计次循环尾 ()
窗口自动排列 (窗口句柄, 到整数 (.内容), 到整数 (.内容), 到整数 (.内容), 到整数 (.内容), 到整数 (.内容), 到整数 (.内容))


.子程序 _按钮_多开配置_一键设置_被单击, 空白型, , 
.局部变量 索引, 整数型, , "0", 
.局部变量 局_计次, 整数型, , , 

子_取选中项索引 (索引)
.计次循环首 (取数组成员数 (索引), 局_计次)
    相加 (“正在修改第”, 到文本 (局_计次), “个模拟器配置...........”, #换行符).加入文本 ()
    类_雷电_dnconsole操作.修改配置 (索引 [局_计次], .内容, .内容, .内容, .内容, .内容, )
.计次循环尾 ()
相加 (“修改配置操作完成,您一共修改了”, 到文本 (相减 (局_计次, 1)), “个模拟器的配置”, #换行符).加入文本 ()


.子程序 _按钮_读改设备_被单击, 空白型, , 
.局部变量 索引, 整数型, , "0", 
.局部变量 局_计次, 整数型, , , 

子_取选中项索引 (索引)
.计次循环首 (取数组成员数 (索引), 局_计次)
    相加 (“正在修改第”, 到文本 (局_计次), “个模拟器配置...........”, #换行符).加入文本 ()
    类_雷电_dnconsole操作.修改配置 (索引 [局_计次], , , , , , .内容, .内容, .内容, .内容, .内容, .内容, , , .内容, .内容)
.计次循环尾 ()
相加 (“修改配置操作完成,您一共修改了”, 到文本 (相减 (局_计次, 1)), “个模拟器的配置”, #换行符).加入文本 ()


.子程序 _按钮_选中以开启的模拟器_被单击, 空白型, , 
.局部变量 运行中的模拟器, 文本型, , "0", 
.局部变量 局_计次, 整数型, , , 
.局部变量 表项索引, 整数型, , , 


类_雷电_dnconsole操作.取运行中模拟器 (运行中的模拟器)
.计次循环首 (取数组成员数 (运行中的模拟器), 局_计次)
    赋值 (表项索引, 运行中的模拟器.查找表项 ( [局_计次], , , 2))
    表项索引.置状态图片 (1)
.计次循环尾 ()


.子程序 _编辑框_APK路径_获得焦点, 空白型, , 
赋值 (.内容, “”)


.子程序 _按钮5_被单击, 空白型, , 
.局部变量 索引, 整数型, , "0", 
.局部变量 局_计次, 整数型, , , 

子_取选中项索引 (索引)
.计次循环首 (取数组成员数 (索引), 局_计次)
    相加 (“正在重启第”, 到文本 (局_计次), “个模拟器...........”, #换行符).加入文本 ()
    类_雷电_dnconsole操作.重启模拟器 (索引 [局_计次], 0)
.计次循环尾 ()
相加 (“重启操作结束,您一共启动了”, 到文本 (相减 (局_计次, 1)), “个模拟器!”, #换行符).加入文本 ()

.子程序 _按钮_预留_被单击, 空白型, , 


.子程序 __启动窗口_将被销毁, 空白型, , 



.子程序 _按钮12_被单击, 空白型, , 


.子程序 _按钮_安装APK_被单击, 空白型, , 
.局部变量 索引, 整数型, , "0", 
.局部变量 局_计次, 整数型, , , 

未知函数_67232329 (索引)
赋值 (.初始目录, 未知支持库函数_7 (#))
打开 ()
赋值 (.内容, .文件名)
.如果真 (不等于 (.内容, “”))
    .计次循环首 (取数组成员数 (), )
        相加 (“正在安装索引为”, 到文本 ( [)], “模拟器内的应用!”, #换行符)).加入文本 ()

.类模块 雷电adb操作, , , 

.子程序 重启adb服务, 空白型, , 谨慎使用，可能会导致adb异常！


.子程序 取连接端口, 文本型, , 模拟器启动后，可以取出连接端口，支持桥接。模拟器未启动，或者失败返回空文本；成功返回端口文本，例如：“-s 127.0.0.1:5555 ”、“-s emulator-5554 ”
.参数 索引, 整数型, , 模拟器索引（index），从0开始，第一个是0，第二个是1，以此类推。



.子程序 安装应用, 空白型, , 将电脑中的apk安装到模拟器。因雷电附带的adb版本较低，文件名不能包含中文。
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 文件名, 文本型, , apk安装包的完整路径，比如：C:\Users\Administrator\Documents\test.apk
.参数 保留应用数据, 逻辑型, 可空, 为真时，重新安装应用，且保留应用数据；默认为假，即全新安装。



.子程序 安装系统应用, 空白型, , 将电脑中的apk安装为模拟器的系统应用
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 文件名, 文本型, , apk安装包的完整路径，比如：C:\Users\Administrator\Documents\test.apk



.子程序 安装应用_内部, 文本型, , 安装模拟器内部的apk
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 文件名, 文本型, , apk安装包的完整路径，比如： /data/local/tmp/test.apk
.参数 是否重装, 逻辑型, 可空, 为真时，重新安装应用，且保留应用数据；默认为假，即全新安装。



.子程序 查看文件内容, 文本型, , 
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 文件路径, 文本型, , 如：/data/data/com.kimi.ggplay.qjmutw/shared_prefs/com.kimi.ggplay.qjmutw.xml



.子程序 发送文本, 空白型, , 向窗口输入指定文本内容 不支持中文
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 文本内容, 文本型, , 要发送的字符，不支持中文。



.子程序 关闭应用, 空白型, , 
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 包名, 文本型, , 应用程序的包名



.子程序 禁用应用, 空白型, , 只有系统应用才可以用，第三方应用不行
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 包名, 文本型, , 应用程序的包名
.参数 禁用, 逻辑型, , 假为不禁用，真为禁用



.子程序 枚举包名, 文本型, , 枚举所有的已经安装的应用的包名，如果设置了过滤器返回过滤后的内容
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 过滤器, 整数型, 可空, 留空或者为0，枚举所有包名；1，显示每个包的文件位置；2，只显示禁用的应用的包名；3，只显示可用的应用的包名；4，只显示系统应用的包名；5，只显示第三方应用的包名；6，查看应用的安装者。



.子程序 枚举目录文件, 文本型, , 返回指定路径中包含的子目录和文件
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 路径, 文本型, , 如：/data/data/



.子程序 批量安装应用, 空白型, , 指定一个目录，批量安装目录中的所有apk应用包
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 安装包目录, 文本型, , 电脑中存放apk的目录



.子程序 启动应用, 空白型, , 
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 包名, 文本型, , app的包名
.参数 类名, 文本型, , app的类名



.子程序 清除应用缓存, 空白型, , 
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 包名, 文本型, , 应用程序的包名



.子程序 取apk路径, 文本型, , 取指定包名的apk路径
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 包名, 文本型, , 应用程序的包名



.子程序 取IMEI, 文本型, , 返回手机IMEI信息
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推



.子程序 取IMSI, 文本型, , 返回手机IMSI信息
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推



.子程序 取MAC, 文本型, , 返回手机网卡MAC地址
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推



.子程序 取IP, 文本型, , 返回手机IP和子网掩码，返回格式“192.168.0.100,255.255.255.0”
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 子网掩码, 文本型, 参考 可空, 



.子程序 取外网IP, 文本型, , 返回模拟器的外网IP、地里位置
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 接口地址, 文本型, 可空, 取外网IP的接口，留空则默认从ip138取。
.参数 地理位置, 文本型, 参考 可空, 用来取回地理位置的变量。当通过ip138取时可用。



.子程序 取子网掩码, 文本型, , 返回模拟器网关
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推



.子程序 取网关, 文本型, , 返回模拟器网关
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推



.子程序 取DNS, 文本型, , 返回手机DNS1和DNS2，格式：“DNS1,DNS2”
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推



.子程序 取SIM序号, 文本型, , 返回手机SIM序号
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推



.子程序 取安卓ID, 文本型, , 返回设备安卓ID android
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推



.子程序 取进程ID, 整数型, , 存在返回进程ID 否则 返回0
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 包名, 文本型, , 如：com.kimi.ggplay.qjmutw



.子程序 取进程列表, 文本型, , 
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推



.子程序 取手机厂商, 文本型, , 返回手机厂商
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推



.子程序 取手机型号, 文本型, , 返回手机型号
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推



.子程序 取手机号码, 文本型, , 返回手机号码
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推



.子程序 删除文件, 空白型, , 
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 模拟器文件路径, 文本型, , 如：/data/data/....



.子程序 删除目录, 空白型, , 
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 模拟器文件路径, 文本型, , 如：/data/data/....



.子程序 上传文件, 空白型, , 将电脑中的文件，上传到模拟器中
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 本机路径, 文本型, , 如："c:111.txt"
.参数 模拟器文件路径, 文本型, , 如：/data/data/....



.子程序 鼠标拖动, 空白型, , 模拟鼠标从第一点按下，拖动到第二点，再放开。
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 x1, 整数型, , 第一点x坐标
.参数 y1, 整数型, , 第一点y坐标
.参数 x2, 整数型, , 第二点x坐标
.参数 y2, 整数型, , 第二点y坐标
.参数 时间, 整数型, , 鼠标拖动的时间（单位毫秒）



.子程序 鼠标点击, 空白型, , 模拟鼠标点击
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 x, 整数型, , 
.参数 y, 整数型, , 



.子程序 按键点击, 空白型, , 模拟按键点击。例如：按键点击 (0,“KEYCODE_HOME”)，也可以：按键点击 (0,“3”)，两种方式都是按下HOME键
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 键值, 文本型, , 这里是安卓中的键值，不同于易语言的键代码，详情请参考：http://bbs.ldmnq.com/forum.php?mod=viewthread&tid=10061



.子程序 下载文件, 空白型, , 
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 模拟器文件路径, 文本型, , 如：/data/data/....
.参数 本机路径, 文本型, , 如："c:111.txt"



.子程序 卸载应用, 空白型, , 
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 包名, 文本型, , 应用程序的包名
.参数 是否保留数据, 逻辑型, 可空, 为真则不删除程序运行所产生的数据和缓存目录(如软件的数据库文件)；为假或者留空，则全部删除。



.子程序 隐藏应用, 空白型, , 被隐藏应用在应用管理中变得不可见，桌面图标也会消失。此命令雷电无效，雷电用户可以考虑 禁止应用
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 包名, 文本型, , 应用程序的包名
.参数 隐藏, 逻辑型, , 假为显示，真为隐藏



.子程序 置IMEI, 文本型, , 设置手机IMEI信息。成功返回空文本，失败返回错误信息。
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 IMEI, 文本型, , 



.子程序 置IMSI, 文本型, , 设置手机IMSI信息。成功返回空文本，失败返回错误信息。
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 IMSI, 文本型, , 



.子程序 置MAC_无效, 文本型, , 设置手机网卡MAC地址。成功返回空文本，失败返回错误信息。MAC地址暂时无法动态修改。
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 MAC, 文本型, , “auto”为随机MAC



.子程序 置IP, 文本型, , 设置手机网卡IP地址和子网掩码。成功返回空文本，失败返回错误信息。
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 IP地址, 文本型, , 例如：“192.168.0.180”
.参数 子网掩码, 文本型, , 例如：“255.255.255.0”



.子程序 置网关, 文本型, , 设置手机网卡IP地址和子网掩码。成功返回空文本，失败返回错误信息。
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 网关IP, 文本型, , 例如：“192.168.0.1”



.子程序 置DNS, 空白型, , 设置手机网卡DNS
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 DNS1, 文本型, , 例如：“8.8.8.8”
.参数 DNS2, 文本型, , 例如：“8.8.8.8”



.子程序 置SIM序号, 空白型, , 设置手机SIM序号
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 SIM序号, 文本型, , 



.子程序 置安卓ID, 空白型, , 设置设备安卓ID android
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 安卓ID, 文本型, , 



.子程序 置手机厂商, 空白型, , 设置手机厂商
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 手机厂商, 文本型, , 



.子程序 置手机型号, 空白型, , 设置手机型号
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 手机型号, 文本型, , 



.子程序 置手机号码, 空白型, , 设置手机号码
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 手机号码, 文本型, , 



.子程序 终止进程, 逻辑型, , 结束模拟器中的进程
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 进程ID, 整数型, , 



.子程序 进入目录, 空白型, , 其实就是命令行中的“cd”，相当于易语言中的“改变目录()”，不过这里进入的目录是模拟器中的目录。
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 路径, 文本型, , 模拟器中的目录路径，例如： "/data/local/tmp"



.子程序 复制文件, 空白型, , 模拟器内部的文件复制
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 被复制的文件名, 文本型, , 模拟器中的路径
.参数 复制到的文件名, 文本型, , 模拟器中的路径



.子程序 移动文件, 空白型, , 同一个目录下的移动，可以当成重命名来用
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 被移动的文件, 文本型, , 模拟器中的路径
.参数 移动到的位置, 文本型, , 模拟器中的路径



.子程序 修改权限, 空白型, , 为文件或目录赋权限
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 权限, 文本型, , 常用的文件权限有：444、600、644、666、700、744、755、777
.参数 文件名, 文本型, , 被修改权限的文件或者目录



.子程序 写入文件, 空白型, , 如果文件不存在创建并写入
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 要写入的内容, 文本型, , 
.参数 文件名, 文本型, , 模拟器中的路径



.子程序 创建文件, 空白型, , 创建一个空文件
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 文件名, 文本型, , 模拟器中的路径



.子程序 创建目录, 空白型, , 创建一个空目录
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 目录名, 文本型, , 模拟器中的路径



.子程序 取安卓版本, 文本型, , 返回当前的安卓系统版本
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推



.子程序 取分辨率, 文本型, , 返回当前的屏幕分辨率，格式为：1280x720
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推



.子程序 置分辨率, 空白型, , 这里只是修改分辨率，模拟器的窗口大小，并不会改变。
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 分辨率, 文本型, , 格式为“1280x720”；恢复原来的分辨率，用“reset”



.子程序 取DPI, 文本型, , 返回当前的屏幕DPI
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推



.子程序 置DPI, 空白型, , 设置屏幕DPI
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 DPI, 文本型, , 如果要恢复原来的DPI，用“reset”



.子程序 应用是否启动, 逻辑型, , 判断引用是否已经启动，已启动返回真，否则返回假
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 包名, 文本型, , 



.子程序 取服务端口, 整数型, , 返回当前adb服务端口（默认是5037）。成功返回端口号，失败返回0。


.子程序 修改服务端口, 逻辑型, , 修改adb服务端口（默认是5037）。注：修改后需要重新初始化，才能继续使用adb
.参数 端口号, 整数型, , 1-65535 之间任意数字，最好取大一点的数字，避免冲突



.子程序 读任务栈, 文本型, , 读出模拟器中的任务栈信息（activity）。 根据 过滤类型 取值不同，可以返回不同的信息
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 过滤类型, 整数型, , 0 = 全部activity信息，也就是“adb.exe shell dumpsys activity”所返回的内容。1 = 运行中的任务栈（Running activities）。2 = 顶栈任务栈（mFocusedActivity）。3 = 最顶端top-activity。



.子程序 查看内存占用, 文本型, , 返回应用的详细内存占用信息，如果应用未启动，则返回“No process found for: 包名”
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 包名, 文本型, , 安卓APP的包名。雷电桌面的包名为“com.android.launcher”



.子程序 是否已连接, 文本型, , 判断adb与模拟器的连接状态。device：设备正常连接；offline：连接出现异常，设备无响应；unknown：没有连接设备
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推



.子程序 浏览网页, 文本型, , 判断adb与模拟器的连接状态。device：设备正常连接；offline：连接出现异常，设备无响应；unknown：没有连接设备
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 网址, 文本型, , 



.子程序 应用是否已安装, 逻辑型, , 
.参数 索引, 整数型, , 
.参数 包名, 文本型, , 



.子程序 取屏幕控件, 文本型, , 取出安卓屏幕上的控件布局xml内容
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推



.子程序 自定义命令, 文本型, , 这个函数可以完成所有adb命令。高级命令。
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 命令文本, 文本型, , 



.子程序 刷新图库, 文本型, , 传入图片后还需要刷新图库才能在图库里查看到传入的图片
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 文件路径, 文本型, , 图片在模拟器中完整的路径



.子程序 截屏, 文本型, , 截取当前屏幕画面
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 文件路径, 文本型, , 图片在模拟器中完整的路径



.子程序 查找应用包名, 整数型, , 通过关键词来模糊搜索模拟器中安装的应用，返回匹配的数量和包名数组。比如不同平台的游戏客户端，包名都会有所不同，但都有着相似的包名，这个命令就很有用了。
.参数 索引, 整数型, , 
.参数 关键词, 文本型, , 
.参数 找到的包名, 文本型, 参考 数组, 查找结果



.类模块 雷电dnconsole操作, , , 

.子程序 启动模拟器, 空白型, , 
.参数 索引, 整数型, , 模拟器索引，第一个模拟器是0，第二个模拟器是1，以此类推
.参数 超时时间, 整数型, 可空, 大于0，为超时等待时间，单位毫秒；为0时，立即返回；小于0，一直等到完成后返回。



.子程序 关闭模拟器, 空白型, , 
.参数 索引, 整数型, , 模拟器索引，第一个模拟器是0，第二个模拟器是1，以此类推



.子程序 关闭所有模拟器, 空白型, , 


.子程序 修改配置, 空白型, , 修改模拟器的各种信息，如分辨率、CPU、内存、各种手机信息等等。修改后，重启模拟器生效，可以在启动模拟器之前修改
.参数 索引, 整数型, 可空, 需要修改的模拟器编号  默认是0
.参数 分辨率_宽, 文本型, 可空, 设置分辨率宽度。宽、高、DPI 3个参数都填，才能修改，其中任意一项留空，则不修改
.参数 分辨率_高, 文本型, 可空, 设置分辨率高度。宽、高、DPI 3个参数都填，才能修改，其中任意一项留空，则不修改
.参数 DPI, 文本型, 可空, 设置分辨率DPI。宽、高、DPI 3个参数都填，才能修改，其中任意一项留空，则不修改
.参数 CPU, 文本型, 可空, 设置CPU大小 <1 | 2 | 3 | 4>。如留空，则不修改
.参数 内存, 文本型, 可空, 设置内存大小 <256 | 512 | 768 | 1024 | 1536 | 2048 | 4096 | 8192>。如留空，则不修改
.参数 手机型号, 文本型, 可空, 设置手机型号。如留空，则不修改
.参数 手机号码, 文本型, 可空, 设置手机号码。如留空，则不修改
.参数 手机厂商, 文本型, 可空, 设置手机厂商。如留空，则不修改
.参数 IMEI, 文本型, 可空, 设置手机imei，auto：随机生成。如留空，则不修改
.参数 IMSI, 文本型, 可空, 设置手机imsi，auto：随机生成。如留空，则不修改
.参数 SIM序号, 文本型, 可空, 设置手机SIM卡的序列号，auto：随机生成。如留空，则不修改
.参数 自动旋转, 文本型, 可空, 设置模拟器开启自动旋转。 0：关闭自动旋转，1：开启自动旋转，如留空，则不修改
.参数 固定窗口大小, 文本型, 可空, 设置锁定模拟器窗口大小。 0：不锁定窗口大小，也就是可以调整大小；1：锁定窗口大小，不可手动调整。如留空，则不修改
.参数 安卓ID, 文本型, 可空, 设置安卓ID（androidid）。auto：随机生成。如留空，则不修改。
.参数 MAC, 文本型, 可空, 设置网卡MAC地址。如留空，则不修改。



.子程序 克隆模拟器, 空白型, , 复制一个模拟器
.参数 新名称, 文本型, 可空, 新的模拟器标题。
.参数 源名称, 文本型, , 待克隆的模拟器标题。参数既可以是名字也可以是索引，判断规则为如果全数字就认为是索引，否则是名字
.参数 超时时间, 整数型, 可空, 大于0，为超时等待时间，单位毫秒；为0时，立即返回；-1，一直等到完成后返回。



.子程序 删除模拟器, 空白型, , 删除一个模拟器
.参数 索引, 整数型, , 需要删除的模拟器编号：第一个是0，第二个是1，以此类推



.子程序 新建模拟器, 空白型, , 新建一个模拟器，可以指定新模拟器的名称
.参数 新名称, 文本型, 可空, 新的模拟器窗口标题。留空则按照雷电默认规则自动命名。



.子程序 启动应用, 空白型, , 
.参数 索引, 整数型, , 模拟器的索引，第一个是0，第二个是1，以此类推...
.参数 包名, 文本型, , 应用程序的包名



.子程序 关闭应用, 空白型, , 
.参数 索引, 整数型, , 模拟器的索引，第一个是0，第二个是1，以此类推...
.参数 包名, 文本型, , 应用程序的包名



.子程序 修改定位, 空白型, , 需要1.6以上的模拟器版本
.参数 索引, 整数型, , 模拟器的索引，第一个是0，第二个是1，以此类推...
.参数 经度, 文本型, , 
.参数 纬度, 文本型, , 



.子程序 安装应用, 空白型, , 
.参数 索引, 整数型, 可空, 模拟器的索引，第一个是0，第二个是1，以此类推...
.参数 APK路径, 文本型, 可空, APK文件完整路径，当APK路径有数据时，忽略包名中的内容。
.参数 包名, 文本型, 可空, 安卓应用包名，当APK路径为空时，可自动从雷电游戏中心下载指定的包名应用并安装。(2.0.46及以上版本支持)



.子程序 卸载应用, 空白型, , 
.参数 索引, 整数型, , 模拟器的索引，第一个是0，第二个是1，以此类推...
.参数 包名, 文本型, , APP包名



.子程序 setprop, 空白型, , 此命令需要雷电模拟器1.7.0.10以上版本支持。
.参数 索引, 整数型, , 模拟器的索引，第一个是0，第二个是1，以此类推...
.参数 方法, 文本型, , key
.参数 参数, 文本型, , value



.子程序 getprop, 文本型, , 此命令需要雷电模拟器1.7.0.10以上版本支持。
.参数 索引, 整数型, , 模拟器的索引，第一个是0，第二个是1，以此类推...
.参数 方法, 文本型, , 



.子程序 adb, 文本型, , 通过dnconsole.exe内置adb命令操作模拟器，免除多开时获取模拟器端口的烦恼，只需要指定模拟器索引即可。此命令需要1.8.6以上版本支持，无需执行adb初始化。
.参数 索引, 整数型, , 模拟器的索引，第一个是0，第二个是1，以此类推...
.参数 命令文本, 文本型, , adb的命令文本，例如："shell pm list packages"



.子程序 取全部标题, 整数型, , 返回模拟器总数，参数二存放一个文本型数组变量，记录全部模拟器的标题
.参数 标题组, 文本型, 参考 可空 数组, 存放标题的文本型数组变量



.子程序 取模拟器信息, 文本型, , 根据条件取出特定的模拟器信息，失败返回空文本。可以根据索引取标题，根据绑定句柄取进程ID，等等任意组合。如果有多个结果（例如标题、是否进入android），只返回第一个。此命令需要模拟器版本2.0.31以上。
.参数 条件, 文本型, , 内容取决于 条件类型 的值。当下面的【条件类型】中为0时，这里是序号；为1时，这里是索引；为2时，这里是标题等等。。。
.参数 条件类型, 整数型, , 指定 条件 的类型。0=序号，1=索引，2=标题，3=顶层窗口句柄，4=绑定窗口句柄，5=是否进入android，6=进程PID，7=VBox进程PID。注意，序号和索引不同，比如有3个模拟器索引为0、1、2，删除模拟器1，剩下的索引为0、2，而序号则是1、2。
.参数 结果类型, 整数型, , 指定返回值的类型。0=序号，1=索引，2=标题，3=顶层窗口句柄，4=绑定窗口句柄，5=是否进入android，6=进程PID，7=VBox进程PID，-1=单条信息，用“,”分割。
.参数 错误信息, 文本型, 参考 可空, 



.子程序 取运行中模拟器, 整数型, , 返回当前正在运行中的所有模拟器标题，每个模拟器一行
.参数 标题组, 文本型, 参考 可空 数组, 存放标题的文本型数组变量



.子程序 判断运行状态, 逻辑型, , 返回模拟器的运行状况。运行中返回真，否则返回假。
.参数 索引, 整数型, , 模拟器的索引，第一个是0，第二个是1，以此类推...
.参数 判断方式, 字节型, 可空, 提供两种判断方式。默认是0，通过早期的isrunning来判断，支持所有版本；1，通过list2来进行判断，需要2.0.31版本以上支持



.子程序 降低CPU, 空白型, , 降低模拟器的CPU占用（需1.8.0.5以上版本支持）
.参数 索引, 整数型, , 模拟器的索引，第一个是0，第二个是1，以此类推...
.参数 数值, 整数型, , 取值范围0-99  取值为0 表示关闭CPU优化. 这个值越大表示降低CPU效果越好



.子程序 取IMEI, 文本型, , 返回手机IMEI信息
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推



.子程序 取IMSI, 文本型, , 返回手机IMSI信息
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推



.子程序 取MAC, 文本型, , 返回手机网卡MAC地址
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推



.子程序 取IP, 文本型, , 返回手机IP和子网掩码
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 子网掩码, 文本型, 参考 可空, 



.子程序 取外网IP, 文本型, , 返回模拟器的外网IP、地里位置
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 接口地址, 文本型, 可空, 取外网IP的接口，留空则默认从ip138取。
.参数 地理位置, 文本型, 参考 可空, 用来取回地理位置的变量。当通过ip138取时可用。



.子程序 取网关, 文本型, , 返回模拟器网关
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推



.子程序 取DNS, 文本型, , 返回手机DNS1和DNS2，格式：“DNS1,DNS2”
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推



.子程序 取SIM序号, 文本型, , 返回手机SIM序号
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推



.子程序 取手机厂商, 文本型, , 返回手机厂商
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推



.子程序 取手机型号, 文本型, , 返回手机型号
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推



.子程序 取手机号码, 文本型, , 返回手机号码
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推



.子程序 取安卓ID, 文本型, , 返回设备安卓ID android
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推



.子程序 取分辨率, 文本型, , 返回当前的屏幕分辨率，格式为：1280x720
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推



.子程序 取DPI, 文本型, , 返回当前的屏幕DPI
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推



.子程序 置IMEI, 空白型, , 动态设置手机IMEI信息
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 IMEI, 文本型, , "auto"为随机生成



.子程序 置IMSI, 空白型, , 动态设置手机IMSI信息
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 IMSI, 文本型, , "auto"为随机生成



.子程序 置MAC_无效, 空白型, , 动态设置手机网卡MAC地址。MAC地址暂时无法动态修改。
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 MAC, 文本型, , "auto"为随机生成(注意：auto必须是小写英文)



.子程序 置IP, 文本型, , 设置手机网卡IP地址和子网掩码。成功返回空文本，失败返回错误信息。
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 IP地址, 文本型, , 例如：“192.168.0.180”
.参数 子网掩码, 文本型, , 例如：“255.255.255.0”



.子程序 置网关, 文本型, , 设置手机网卡IP地址和子网掩码。成功返回空文本，失败返回错误信息。
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 网关IP地址, 文本型, , 例如：“192.168.0.1”



.子程序 置DNS, 空白型, , 设置手机网卡DNS
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 DNS1, 文本型, , 例如：“8.8.8.8”
.参数 DNS2, 文本型, 可空, 例如：“8.8.8.8”



.子程序 置SIM序号, 空白型, , 动态设置手机SIM序号
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 SIM序号, 文本型, , "auto"为随机生成



.子程序 置安卓ID, 空白型, , 动态设置设备安卓ID android
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 安卓ID, 文本型, , "auto"为随机生成



.子程序 置手机厂商, 空白型, , 动态设置手机厂商
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 手机厂商, 文本型, , 



.子程序 置手机型号, 空白型, , 动态设置手机型号
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 手机型号, 文本型, , 



.子程序 置手机号码, 空白型, , 动态设置手机号码
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 手机号码, 文本型, , 



.子程序 置分辨率, 空白型, , 动态修改分辨率，模拟器的窗口大小，并不会改变。
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 分辨率, 文本型, , 格式为“1280x720”；恢复原来的分辨率，用“reset”



.子程序 置DPI, 空白型, , 动态设置屏幕DPI
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 DPI, 文本型, , 如果要恢复原来的DPI，用“reset”



.子程序 查看文件内容, 文本型, , 
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 文件名, 文本型, , 如：/data/data/com.kimi.ggplay.qjmutw/shared_prefs/com.kimi.ggplay.qjmutw.xml



.子程序 发送文本, 空白型, , 向窗口输入指定文本内容 支持中文，需要模拟器2.0.42以上支持，action命令的扩展
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 文本内容, 文本型, , 



.子程序 禁用应用, 空白型, , 只有系统应用才可以用，第三方应用不行
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 包名, 文本型, , 应用程序的包名
.参数 禁用, 逻辑型, , 假为启用，真为禁用



.子程序 枚举包名, 文本型, , 枚举所有的已经安装的应用的包名，如果设置了过滤器返回过滤后的内容
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 过滤器, 整数型, 可空, 留空或者为0，枚举所有包名；1，显示每个包的文件位置；2，只显示禁用的应用的包名；3，只显示可用的应用的包名；4，只显示系统应用的包名；5，只显示第三方应用的包名；6，查看应用的安装者。



.子程序 枚举目录文件, 文本型, , 返回指定模拟器路径中包含的子目录和文件
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 模拟器路径, 文本型, , 如：/data/data/



.子程序 批量安装应用, 空白型, , 指定一个目录，批量安装目录中的所有apk应用包
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 安装包目录, 文本型, , 电脑中存放apk的目录



.子程序 清除应用缓存, 空白型, , 
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 包名, 文本型, , 应用程序的包名



.子程序 取apk路径, 文本型, , 取指定包名的apk路径
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 包名, 文本型, , 应用程序的包名



.子程序 取进程ID, 整数型, , 存在返回进程ID 否则 返回0
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 包名, 文本型, , 如：com.kimi.ggplay.qjmutw



.子程序 取进程列表, 文本型, , 
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推



.子程序 删除文件, 空白型, , 
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 模拟器文件路径, 文本型, , 如：/data/data/....



.子程序 删除文件夹, 空白型, , 
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 模拟器文件路径, 文本型, , 如：/data/data/....



.子程序 上传文件, 空白型, , 将电脑中的文件，上传到模拟器中
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 本机路径, 文本型, , 如："c:111.txt"
.参数 模拟器文件路径, 文本型, , 如：/data/data/....



.子程序 鼠标拖动, 空白型, , 模拟鼠标从第一点拖动到第二点
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 x1, 整数型, , 第一点x坐标
.参数 y1, 整数型, , 第一点y坐标
.参数 x2, 整数型, , 第二点x坐标
.参数 y2, 整数型, , 第二点y坐标
.参数 时间, 整数型, , 鼠标拖动的时间（单位毫秒）



.子程序 鼠标点击, 空白型, , 模拟鼠标点击
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 x, 整数型, , 
.参数 y, 整数型, , 



.子程序 按键点击, 空白型, , 模拟按键点击。例如：按键点击 (路径,0,“KEYCODE_HOME”)，也可以：按键点击 (路径,0,“3”)，两种方式都是按下HOME键
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 键值, 文本型, , 这里是安卓中的键值，不同于易语言的键代码，详情请参考：http://bbs.ldmnq.com/forum.php?mod=viewthread&tid=10061



.子程序 下载文件, 空白型, , 
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 模拟器文件路径, 文本型, , 如：/data/data/....
.参数 本机路径, 文本型, , 如："c:\111.txt"



.子程序 终止进程, 逻辑型, , 结束模拟器中的进程
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 进程ID, 整数型, , 



.子程序 进入目录, 空白型, , 其实就是命令行中的“cd”，相当于易语言中的“改变目录()”，不过这里进入的目录是模拟器中的目录。
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 模拟器目录, 文本型, , 模拟器中的目录路径，例如： "/data/local/tmp"



.子程序 复制文件, 空白型, , 模拟器内部的文件复制
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 被复制的文件名, 文本型, , 模拟器中的路径
.参数 复制到的文件名, 文本型, , 模拟器中的路径



.子程序 移动文件, 空白型, , 同一个目录下的移动，可以当成重命名来用
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 被移动的文件, 文本型, , 模拟器中的路径
.参数 移动到的位置, 文本型, , 模拟器中的路径



.子程序 修改权限, 空白型, , 为文件或目录赋权限
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 权限, 整数型, , 常用的文件权限有：444、600、644、666、700、744、755、777
.参数 文件名, 文本型, , 被修改权限的文件或者目录



.子程序 写入文件, 空白型, , 如果文件不存在创建并写入
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 要写入的内容, 文本型, , 
.参数 文件名, 文本型, , 模拟器中的路径



.子程序 创建文件, 空白型, , 创建一个空文件
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 文件名, 文本型, , 模拟器中的路径



.子程序 创建目录, 空白型, , 创建一个空目录
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 目录名, 文本型, , 模拟器中的路径



.子程序 取安卓版本, 文本型, , 返回当前的安卓系统版本
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推



.子程序 应用是否启动, 逻辑型, , 判断引用是否已经启动，已启动返回真，否则返回假
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 包名, 文本型, , 通常为包名



.子程序 读任务栈, 文本型, , 读出模拟器中的任务栈信息（activity）。 根据 过滤类型 取值不同，可以返回不同的信息
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 过滤类型, 整数型, , 0 = 全部activity信息，也就是“adb shell dumpsys activity”所返回的内容。1 = 运行中的任务栈（Running activities）。2 = 顶栈任务栈（mFocusedActivity）。3 = 最顶端top-activity。



.子程序 查看内存占用, 文本型, , 返回应用的详细内存占用信息，如果应用未启动，则返回“No process found for: 包名”
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 包名, 文本型, , 安卓APP的包名。雷电桌面的包名为“com.android.launcher”



.子程序 重启模拟器, 空白型, , 重启雷电模拟器。此命令需要2.0.31以上的模拟器版本
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 超时时间, 整数型, 可空, 大于0，为超时等待时间，单位毫秒；为0时，立即返回；-1，一直等到完成后返回。



.子程序 取全部模拟器, 整数型, , 返回模拟器总数，参数二存放一个文本型数组变量，记录全部模拟器的 索引、标题、顶层窗口句柄、绑定窗口句柄、是否进入android、进程PID、VBox进程PID。此命令需要2.0.31以上的模拟器版本
.参数 详细信息, 文本型, 参考 可空 数组, 存放数据的文本型数组变量



.子程序 修改标题, 空白型, , 修改模拟器标题。此命令需要2.0.33以上的模拟器版本
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 新标题, 文本型, , 新的模拟器标题



.子程序 备份模拟器, 空白型, , 修改模拟器标题。此命令需要2.0.33以上的模拟器版本
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 备份文件名, 文本型, , 备份文件名，包含完整路径，文件后缀名必须是“*.ldbk”或者“*.vmdk”
.参数 超时时间, 整数型, 可空, 大于0，为超时等待时间，单位毫秒；为0时，立即返回；-1，一直等到完成后返回。默认为：0。



.子程序 还原模拟器, 空白型, , 修改模拟器标题。此命令需要2.0.33以上的模拟器版本
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 备份文件名, 文本型, , 备份文件名，包含完整路径，文件后缀名必须是“*.ldbk”或者“*.vmdk”
.参数 超时时间, 整数型, 可空, 大于0，为超时等待时间，单位毫秒；为0时，立即返回；-1，一直等到完成后返回。默认为：0。



.子程序 动作_重启模拟器, 空白型, , 重启雷电模拟器，并自动运行应用。此命令需要2.0.35以上的模拟器版本，action命令的扩展
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 启动后要运行的应用包名, 文本型, 可空, 例如：“com.android.settings”。如果留空，则不自动运行应用。
.参数 超时时间, 整数型, 可空, 大于0，为超时等待时间，单位毫秒；为0时，立即返回；-1，一直等到完成后返回。默认为：0。



.子程序 动作_执行按键, 空白型, , 执行模拟器按键动作，目前只支持5个按键动作。此命令需要2.0.35以上的模拟器版本，action命令的扩展
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 按键值, 整数型, , 参数为1-5。1=back；2=home；3=menu；4=volumeup；5=volumedown。



.子程序 动作_修改定位, 文本型, , 修改GPS定位的位置。此命令需要2.0.35以上的模拟器版本，action命令的扩展
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 位置经纬度, 文本型, , 格式为：“经度,纬度”。例如：“12.3,45.6”



.子程序 动作_摇一摇, 空白型, , 模拟器发出一阵颤抖,别人不知道它有多爽。此命令需要2.0.35以上的模拟器版本，action命令的扩展
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推



.子程序 是否已连接, 文本型, , 判断adb与模拟器的连接状态。device：设备正常连接；offline：连接出现异常，设备无响应；unknown：没有连接设备
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推



.子程序 浏览网页, 文本型, , 判断adb与模拟器的连接状态。device：设备正常连接；offline：连接出现异常，设备无响应；unknown：没有连接设备
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 网址, 文本型, , 



.子程序 动作_输入文字, 空白型, , 支持中文，2.0.42以上支持，action命令的扩展
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 文字, 文本型, , 要输入的文字



.子程序 取屏幕控件, 文本型, , 取出安卓屏幕上的控件布局xml内容
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推



.子程序 断开网络, 空白型, , 断开网络（2.0.53以上版本支持）
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推



.子程序 连接网络, 空白型, , 连接被断开的网络（2.0.53以上版本支持）
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推



.子程序 置摄像头图片, 空白型, , 设置摄像头图片，在模拟器使用摄像头时使用。（3.0.7以上版本支持）
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 图片地址, 文本型, , 电脑中的图片地址



.子程序 截屏, 空白型, , 截取当前屏幕画面
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 文件路径, 文本型, , 图片在模拟器中完整的路径



.子程序 一键排序, 文本型, , 一键排序所有打开的模拟器窗口。可以在雷电多开器中设置详细的排序规则, 3.18以上版本支持
.参数 自动大小, 逻辑型, 可空, 排列时，自动调整窗口大小.（留空默认为不修规则，保持原来的设置。）
.参数 排序方式, 整数型, 可空, 0=宫格排列。1=对角线排列。（留空默认为不修改规则，保持原来的设置。）



.子程序 查找应用包名, 整数型, , 通过关键词来模糊搜索模拟器中安装的应用，返回匹配的包名。比如不同平台的游戏客户端，包名都会有所不同，但都有着相似的包名，这个命令就很有用了。
.参数 索引, 整数型, , 
.参数 关键词, 文本型, , 
.参数 应用包名, 文本型, 参考 数组, 



.类模块 雷电ld操作, , , 

.子程序 查看文件内容, 文本型, , 
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 文件路径, 文本型, , 如：/data/data/com.kimi.ggplay.qjmutw/shared_prefs/com.kimi.ggplay.qjmutw.xml



.子程序 发送文本, 空白型, , 向窗口输入指定文本内容 不支持中文
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 文本内容, 文本型, , 



.子程序 关闭应用, 空白型, , 
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 包名, 文本型, , 应用程序的包名



.子程序 禁用应用, 空白型, , 只有系统应用才可以用，第三方应用不行
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 包名, 文本型, , 应用程序的包名
.参数 禁用, 逻辑型, , 假为不禁用，真为禁用



.子程序 枚举包名, 文本型, , 枚举所有的已经安装的应用的包名，如果设置了过滤器返回过滤后的内容
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 过滤器, 整数型, 可空, 留空或者为0，枚举所有包名；1，显示每个包的文件位置；2，只显示禁用的应用的包名；3，只显示可用的应用的包名；4，只显示系统应用的包名；5，只显示第三方应用的包名；6，查看应用的安装者。



.子程序 枚举目录文件, 文本型, , 返回指定路径中包含的子目录和文件
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 待枚举的目录, 文本型, , 模拟器中的目录，如：/data/data/



.子程序 启动应用, 空白型, , 
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 包名, 文本型, , app的包名
.参数 类名, 文本型, , app的类名



.子程序 清除应用缓存, 空白型, , 清理应用程序的数据和缓存
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 包名, 文本型, , 应用程序的包名



.子程序 取apk路径, 文本型, , 取指定包名的apk路径
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 包名, 文本型, , 应用程序的包名



.子程序 取IMEI, 文本型, , 返回手机IMEI信息
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推



.子程序 取IMSI, 文本型, , 返回手机IMSI信息
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推



.子程序 取MAC, 文本型, , 返回手机网卡MAC地址
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推



.子程序 取IP, 文本型, , 成功返回模拟器的内网IP和子网掩码，失败返回空文本
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 子网掩码, 文本型, 参考 可空, 



.子程序 取外网IP, 文本型, , 返回模拟器的外网IP。ld暂时无法通过ip138取回外网IP、地理位置
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 接口地址, 文本型, 可空, 取外网IP的接口，留空则默认从ip138取,模拟器3.0.7之前的版本留空无法取出IP，需要填写接口地址，例如：ipinfo.io
.参数 地理位置, 文本型, 参考 可空, 用来取回地理位置的变量。当通过ip138取时可用。



.子程序 取网关, 文本型, , 返回模拟器网关
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推



.子程序 取DNS, 文本型, , 返回手机DNS1和DNS2，格式：“DNS1,DNS2”
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推



.子程序 取SIM序号, 文本型, , 返回手机SIM序号
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推



.子程序 取安卓ID, 文本型, , 返回设备安卓ID android
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推



.子程序 取进程ID, 整数型, , 存在返回进程ID 否则 返回0
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 包名, 文本型, , 如：com.kimi.ggplay.qjmutw



.子程序 取进程列表, 文本型, , 
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推



.子程序 取手机厂商, 文本型, , 返回手机厂商
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推



.子程序 取手机型号, 文本型, , 返回手机型号
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推



.子程序 取手机号码, 文本型, , 返回手机号码
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推



.子程序 删除文件, 空白型, , 
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 模拟器文件路径, 文本型, , 如：/data/data/....



.子程序 删除文件夹, 空白型, , 
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 模拟器文件路径, 文本型, , 如：/data/data/....



.子程序 鼠标拖动, 空白型, , 模拟鼠标从第一点按下，拖动到第二点，再放开。
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 x1, 整数型, , 第一点x坐标
.参数 y1, 整数型, , 第一点y坐标
.参数 x2, 整数型, , 第二点x坐标
.参数 y2, 整数型, , 第二点y坐标
.参数 时间, 整数型, , 鼠标拖动的时间（单位毫秒）



.子程序 鼠标点击, 空白型, , 模拟鼠标点击
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 x, 整数型, , 
.参数 y, 整数型, , 



.子程序 按键点击, 空白型, , 模拟按键点击。例如：按键点击 (0,“KEYCODE_HOME”)，也可以：按键点击 (0,“3”)，两种方式都是按下HOME键
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 键值, 文本型, , 这里是安卓中的键值，不同于易语言的键代码，详情请参考：http://bbs.ldmnq.com/forum.php?mod=viewthread&tid=10061



.子程序 卸载应用, 空白型, , 
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 包名, 文本型, , 应用程序的包名
.参数 是否保留数据, 逻辑型, 可空, 为真则不删除程序运行所产生的数据和缓存目录(如软件的数据库文件)；为假或者留空，则全部删除。



.子程序 隐藏应用, 空白型, , 被隐藏应用在应用管理中变得不可见，桌面图标也会消失。此命令雷电无效，雷电用户可以考虑 禁止应用
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 包名, 文本型, , 应用程序的包名
.参数 隐藏, 逻辑型, , 假为显示，真为隐藏



.子程序 置IMEI, 文本型, , 设置手机IMEI信息。成功返回空文本，失败返回错误信息。
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 IMEI, 文本型, , 



.子程序 置IMSI, 文本型, , 设置手机IMSI信息。成功返回空文本，失败返回错误信息。
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 IMSI, 文本型, , 



.子程序 置MAC_无效, 文本型, , 设置手机网卡MAC地址。成功返回空文本，失败返回错误信息。MAC地址暂时无法动态修改。
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 MAC, 文本型, , “auto”为随机MAC



.子程序 置IP, 文本型, , 设置手机网卡IP地址和子网掩码。成功返回空文本，失败返回错误信息。
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 IP地址, 文本型, , 例如：“192.168.0.180”
.参数 子网掩码, 文本型, , 例如：“255.255.255.0”



.子程序 置网关, 文本型, , 设置手机网卡IP地址和子网掩码。成功返回空文本，失败返回错误信息。
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 网关IP地址, 文本型, , 例如：“192.168.0.1”



.子程序 置DNS, 空白型, , 设置手机网卡DNS
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 DNS1, 文本型, , 例如：“8.8.8.8”
.参数 DNS2, 文本型, , 例如：“8.8.8.8”



.子程序 置SIM序号, 空白型, , 设置手机SIM序号
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 SIM序号, 文本型, , 



.子程序 置安卓ID, 空白型, , 设置设备安卓ID android
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 安卓ID, 文本型, , 



.子程序 置手机厂商, 空白型, , 设置手机厂商
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 手机厂商, 文本型, , 



.子程序 置手机型号, 空白型, , 设置手机型号
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 手机型号, 文本型, , 



.子程序 置手机号码, 空白型, , 设置手机号码
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 手机号码, 文本型, , 



.子程序 终止进程, 逻辑型, , 结束模拟器中的进程
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 进程ID, 整数型, , 



.子程序 进入目录, 空白型, , 其实就是命令行中的“cd”，相当于易语言中的“改变目录()”，不过这里进入的目录是模拟器中的目录。
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 路径, 文本型, , 模拟器中的目录路径，例如： "/data/local/tmp"



.子程序 复制文件, 空白型, , 模拟器内部的文件复制
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 被复制的文件名, 文本型, , 模拟器中的路径
.参数 复制到的文件名, 文本型, , 模拟器中的路径



.子程序 移动文件, 空白型, , 同一个目录下的移动，可以当成重命名来用
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 被移动的文件, 文本型, , 模拟器中的路径
.参数 移动到的位置, 文本型, , 模拟器中的路径



.子程序 修改权限, 空白型, , 为文件或目录赋权限
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 权限, 文本型, , 常用的文件权限有：444、600、644、666、700、744、755、777
.参数 文件名, 文本型, , 被修改权限的文件或者目录



.子程序 写入文件, 空白型, , 如果文件不存在创建并写入
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 要写入的内容, 文本型, , 
.参数 文件名, 文本型, , 模拟器中的路径



.子程序 创建文件, 空白型, , 创建一个空文件
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 文件名, 文本型, , 模拟器中的路径



.子程序 创建目录, 空白型, , 创建一个空目录
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 目录名, 文本型, , 模拟器中的路径



.子程序 取安卓版本, 文本型, , 返回当前的安卓系统版本
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推



.子程序 取分辨率, 文本型, , 返回当前的屏幕分辨率，格式为：1280x720
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推



.子程序 置分辨率, 空白型, , 这里只是修改分辨率，模拟器的窗口大小，并不会改变。
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 分辨率, 文本型, , 格式为“1280x720”；恢复原来的分辨率，用“reset”



.子程序 取DPI, 文本型, , 返回当前的屏幕DPI
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推



.子程序 置DPI, 空白型, , 设置屏幕DPI
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 DPI, 文本型, , 如果要恢复原来的DPI，用“reset”



.子程序 应用是否启动, 逻辑型, , 判断引用是否已经启动，已启动返回真，否则返回假
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 包名, 文本型, , 



.子程序 读任务栈, 文本型, , 读出模拟器中的任务栈信息（activity）。 根据 过滤类型 取值不同，可以返回不同的信息
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 过滤类型, 整数型, , 0 = 全部activity信息，也就是“adb  dumpsys activity”所返回的内容。1 = 运行中的任务栈（Running activities）。2 = 顶栈任务栈（mFocusedActivity）。3 = 最顶端top-activity。



.子程序 查看内存占用, 文本型, , 返回应用的详细内存占用信息，如果应用未启动，则返回“No process found for: 包名”
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 包名, 文本型, , 安卓APP的包名。雷电桌面的包名为“com.android.launcher”



.子程序 浏览网页, 文本型, , 判断adb与模拟器的连接状态。device：设备正常连接；offline：连接出现异常，设备无响应；unknown：没有连接设备
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 网址, 文本型, , 



.子程序 应用是否已安装, 逻辑型, , 
.参数 索引, 整数型, , 
.参数 包名, 文本型, , 



.子程序 自定义命令, 文本型, , 这个函数可以完成所有ld命令。高级命令。
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 命令文本, 文本型, , 



.子程序 取屏幕控件, 文本型, , 取出安卓屏幕上的控件布局xml内容，如果无法显示中文，请注意转换编码。
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推



.子程序 截屏, 空白型, , 截取当前屏幕画面
.参数 索引, 整数型, , 模拟器索引（index）。第一模拟器为0，第二个为1，第三个为2，以此类推
.参数 文件路径, 文本型, , 图片在模拟器中完整的路径



.子程序 查找应用包名, 整数型, , 通过关键词来模糊搜索模拟器中安装的应用，返回匹配的数量和包名数组。比如不同平台的游戏客户端，包名都会有所不同，但都有着相似的包名，这个命令就很有用了。
.参数 索引, 整数型, , 
.参数 关键词, 文本型, , 
.参数 找到的包名, 文本型, 参考 数组, 查找结果



.程序集 __HIDDEN_TEMP_MOD__, , , 

.子程序 窗口_是否未响应, 逻辑型, , 未响应返回真，正常返回假。如果对绑定句柄来使用，可以判断模拟器是否成功卡死
.参数 句柄, 整数型, , 



.子程序 窗口自动排列, 空白型, , 自动将多个窗口，整齐的排列好。
.参数 窗口句柄, 整数型, 数组, 需要自动排列的窗口句柄数组
.参数 左边间距, 整数型, , 窗口左边与左边之间的距离；如果为0，则为窗口宽度；如果为-1，则根据屏幕大小自动计算；
.参数 顶边间距, 整数型, , 窗口顶边与顶边之间的距离；如果为0，则为窗口高度；如果为-1，则根据屏幕大小自动计算；
.参数 每行数量, 整数型, , 每行几个窗口
.参数 对齐方式, 整数型, , 1.左上角；2.右上角；3.左下角；4.右下角；5.局中
.参数 新宽度, 整数型, 可空, 为0或省略时，不修改宽度
.参数 新高度, 整数型, 可空, 为0或省略时，不修改高度



.子程序 取DOS返回, 文本型, , 如果没有设置超时时间，该命令会一直等待到命令执行完毕后才会返回.
.参数 命令行文本, 文本型, , 
.参数 超时时间, 整数型, 可空, 设置等待超时时间(单位毫秒。默认为0)，如果超时且无返回值，强制结束命令。如果一直有返回值，例如ping命令，则不会被超时影响，需要结束的话，可以利用即时回显来控制。
.参数 即时回显, 子程序指针, 可空, 即时回显信息回调子程序。子程序要有一个文本型参数，用来接收回显文本，子程序返回逻辑值,真:停止,假:继续



.子程序 文件枚举, 整数型, , 枚举某个目录下的指定类型文件；成功返回文件数量；
.参数 欲寻找的目录, 文本型, , 文件目录
.参数 欲寻找的文件名, 文本型, , 如果寻找全部文件可以填入*.*，或*.txt只找txt文件
.参数 文件数组, 文本型, 参考 可空 数组, 用于装载文件数组的变量；把寻找到的文件都放在这个数组里，并返回；
.参数 是否带路径, 逻辑型, 可空, 默认为假； 真=带目录路径，如C:\012.txt； 假=不带，如 012.txt；



.子程序 进程_ID取进程名, 文本型, , 通过进程ID取得该进程执行文件名，也就是进程名;
.参数 参数_进程ID, 整数型, , 该进程的ID;



.子程序 取端口进程, 整数型, , 返回占用指定端口的进程ID。成功返回端口号，失败返回0。注：当ADB端口被占用时，可以用这个查看被占用的进程ID（adb默认端口是5037）
.参数 端口号, 整数型, , 



.子程序 取程序路径, 文本型, , 取指定进程的程序路径，成功返回程序路径，失败或进程不存在返回空文本
.参数 进程ID, 整数型, , 



.子程序 句柄_是否有效, 逻辑型, , 有效返回真；不存在返回假。如果对绑定句柄来使用，可以判断模拟器是否异常闪退
.参数 窗口句柄, 整数型, , 



.子程序 窗口_是否可见, 逻辑型, , 返回真为可见，否则为不可见。如果对绑定句柄来使用，可以判断模拟器是否成功启动
.参数 窗口句柄, 整数型, , 窗口句柄



.子程序 窗口_取标题, 文本型, , 
.参数 窗口句柄, 整数型, , 



.子程序 窗口_取祖句柄, 整数型, , 取一个窗口的顶级句柄，如果提供的句柄已是顶级句柄，将直接返回。
.参数 窗口句柄, 整数型, , 欲取祖窗口句柄的子窗口句柄



.子程序 窗口_取父句柄, 整数型, , 判断一个窗口是否有父窗口，如有直接返回该窗口的像窗口句柄，否则返回0
.参数 窗口句柄, 整数型, , 欲取父窗口的窗口句柄



.子程序 取随机MAC, 文本型, , 
.参数 连字符, 文本型, 可空, “”空文本，返回“02F53EC3A0B9”格式的文本；“:”返回“02:F5:3E:C3:A0:B9”格式的文本；“-”返回“02-F5-3E-C3-A0-B9”



.子程序 进程_ID取窗口句柄, 整数型, , 通过进程ID取得该进程的窗口句柄,超时则返回零
.参数 进程ID, 整数型, , 该进程的ID;
.参数 窗口标题, 文本型, 可空, 模糊参数 如果为空,忽略此参数
.参数 窗口类名, 文本型, 可空, 模糊参数 如果为空,忽略此参数
.参数 超时, 整数型, 可空, 为空则无限循环



.子程序 窗口_句柄取进程ID, 整数型, , 返回进程ID；
.参数 窗口句柄, 整数型, , 



.子程序 窗口_取类名, 文本型, , 取指定窗口句柄的窗口类名(返回窗口类名,失败返回空文本)
.参数 窗口句柄, 整数型, , 欲取类名的窗口句柄



.子程序 进程_命令行取进程信息, 逻辑型, , 
.参数 命令行, 文本型, , 
.参数 进程信息, 未知类型0x30009, 参考, 



.子程序 文件_取文件版本号, 文本型, , 
.参数 FullFileName, 文本型, , 
.参数 错误信息, 文本型, 参考 可空, 



.子程序 雷电_取安装目录, 文本型, , 从注册表中取出雷电模拟器安装目录，如果注册表读取失败，会尝试读取桌面的快捷方式所指向的目录。如果版本参数留空，先取2.0版本目录，失败再取1.0版本目录
.参数 版本, 整数型, 可空, 0 = 自动获取，先取2.xxx，失败再取1.xxx。 1 = 获取1.xxx 版本路径。 2 = 获取2.xxx 版本路径。



.子程序 雷电_置安装目录, 逻辑型, , 如果取安装目录失败，可以用这个命令指定雷电模拟器的安装目录。
.参数 安装目录, 文本型, , 



.子程序 读apk信息, 空白型, , 取出安卓apk安装包中的基础信息
.参数 apk文件, 文本型, , 
.参数 应用名, 文本型, 参考, 
.参数 包名, 文本型, 参考, 
.参数 类名, 文本型, 参考, 
.参数 图标文件, 文本型, 参考, 这里取出的是apk中的路径，可以自行解压提取图标文件



.子程序 _处理事件, 空白型, , 比普通的处理事件速度要快3倍左右；


.子程序 _延时, 逻辑型, , 不占用cpu，窗口不卡死，不影响其它代码执行
.参数 延时间隔, 整数型, 可空, 1000毫秒 = 1秒  留空为无限等待
.参数 延时单位, 整数型, 可空, 默认为毫秒  0=毫秒  1=秒  2=分钟  3=小时



.子程序 取文本之间, 文本型, , 比如：欲取全文本为“12345”,现在要取出“3”，<3>的前面为“2”，<3>的后面为“4”，
.参数 欲取全文本, 文本型, , 比如：欲取全文本为 12345
.参数 前面文本, 文本型, , 3的前面为“2”，引号直接用 #引号，如："<font color=#引号red#引号>"
.参数 后面文本, 文本型, , 3的后面为“4”，引号直接用 #引号，如："<font color=#引号red#引号>"
.参数 起始搜寻位置, 整数型, 可空, 可空,这里是指搜寻 参数二 前面文本 的开始位置
.参数 是否不区分大小写, 逻辑型, 可空, 为真不区分大小写，为假区分。



.子程序 结束进程, 逻辑型, , 结束指定进程。成功返回真，失败返回假。本命令为初级命令
.参数 进程ID, 整数型, 可空, 欲结束的进程ID,如果为空将结束自己



.子程序 取系统DPI, 整数型, , 返回当前系统DPI，也就是显示设置中的文本大小。
.参数 输出方式, 逻辑型, 可空, 留空或者为假时，输出为百分比；为真时，输出为DPI数值



.子程序 计算屏幕DPI, 整数型, , 根据屏幕宽、高和尺寸，计算出DPI
.参数 屏幕宽, 整数型, , 分辨率中的宽度
.参数 屏幕高, 整数型, , 分辨率中的高度
.参数 屏幕尺寸, 双精度小数型, , 就是平常我们说的5寸屏、5.5寸屏



.子程序 计算屏幕尺寸, 双精度小数型, , 根据屏幕宽、高和DPI，计算出尺寸
.参数 屏幕宽, 双精度小数型, , 分辨率中的宽度
.参数 屏幕高, 双精度小数型, , 分辨率中的高度
.参数 DPI, 双精度小数型, , 每英寸多少点



.子程序 雷电_取当前版本, 文本型, , 
.参数 雷电路径, 文本型, 可空, 



.子程序 程序_是否在压缩包内运行, 逻辑型, , 在压缩包内运行返回真，否则返回假。


.子程序 系统_是否已禁用杀软, 逻辑型, , 检查Windows Defender是否被禁用，已被禁用返回真，否则返回假。WIN10家庭版有效


.子程序 系统_禁用杀软, 逻辑型, , 禁用Windows Defender，设置后重启电脑生效。成功禁用返回真，否则返回假。WIN10家庭版有效
.参数 禁用或者启用, 整数型, , 1=禁用；0=启用



.子程序 禁用DPI缩放, 逻辑型, , 


.子程序 雷电_取特定目录, 文本型, , 取出雷电模拟器的配置目录，失败返回空文本。
.参数 目录类型, 整数型, 可空, 可空，默认为取配置文件目录。0=取模拟器配置文件目录；1=取推荐按键配置目录；2=取自定义按键配置目录。



.子程序 雷电_取配置文件, 文本型, , 取出指定的雷电模拟器的配置文件名。失败返回空文本。
.参数 索引, 整数型, , -1为多开器配置，大于或等于0位模拟器索引



.子程序 雷电_备份配置文件, 逻辑型, , 备份指定的雷电模拟器的配置文件，如果目标文件已存在，会自动覆盖。成功返回真，失败返回假。
.参数 索引, 整数型, , 
.参数 备份到文件名, 文本型, , 



.子程序 雷电_删除配置文件, 逻辑型, , 删除指定的雷电模拟器的配置文件，相当于重置模拟器的设置。成功返回真，失败返回假。
.参数 索引, 整数型, , 



.子程序 雷电_取共享目录, 文本型, , 取出雷电模拟器的共享目录，失败返回空文本。共享目录对应模拟器中的路径是：“/sdcard/Pictures/”、“/sdcard/Applications/”、“/sdcard/Misc/”。
.参数 索引, 整数型, , 模拟器索引，从0开始
.参数 目录类型, 整数型, 可空, 要修改的目录，默认是1，即Pictures目录，如果不理解，请保持默认。1.Pictures；2.Applications；3.Misc



.子程序 雷电_置共享目录, 逻辑型, , 设置雷电模拟器的共享目录，重启后生效。共享目录对应模拟器中的路径是：“/sdcard/Pictures/”、“/sdcard/Applications/”、“/sdcard/Misc/”。
.参数 索引, 整数型, , 模拟器索引，从0开始
.参数 新的目录, 文本型, , 要设置的新目录。
.参数 目录类型, 整数型, 可空, 要修改的目录，默认是1，即Pictures目录，如果不理解，请保持默认。1.Pictures；2.Applications；3.Misc



.子程序 雷电_读取配置, 文本型, , 取出雷电的leidian.config文件参数，失败返回空文本。
.参数 索引, 整数型, , 模拟器索引，从0开始
.参数 项目名, 文本型, , 要读出的配置项目名，具体名称可以查看雷电的leidian.config。 如果属性名本身包含“.”请使用转义符“\”分隔，例如分辨率中的宽度，用“advancedSettings\.resolution.width”。



.子程序 雷电_修改配置, 逻辑型, , 修改雷电的leidian.config文件参数，如果属性不存在，会自动创建。模拟器重启后生效。此命令请谨慎使用，修改错误有可能损坏配置文件，请提前备份。
.参数 索引, 整数型, , 模拟器索引，从0开始
.参数 属性名, 文本型, , 要设置的配置项目名，具体名称可以查看雷电的leidian.config。 如果属性名本身包含“.”请使用转义符“\”分隔，例如分辨率中的宽度，用“advancedSettings\.resolution.width”。
.参数 属性值, 文本型, , 要设置的项目数值内容
.参数 属性类型, 整数型, 可空, 1=双精度型；2=长整数型；3=逻辑型；4=文本型。如果留空会根据原来的类型自动判断，如果属性名不存在，此参数留空会导致修改失败。



.子程序 雷电_设置窗口位置和尺寸, 空白型, , 设置模拟器的窗口启动时的位置和尺寸。如果参数全部为0的话，会根据模拟器的分辨率自动设置。如果你是图色脚本，建议设置为0，然后通过dnconsole设置分辨率。
.参数 索引, 整数型, , 模拟器索引，从0开始
.参数 左, 整数型, , 左边位置
.参数 顶, 整数型, , 顶边位置
.参数 宽, 整数型, , 内部窗口宽度
.参数 高, 整数型, , 内部窗口高度
.参数 外宽, 整数型, , 外部框架宽度
.参数 外高, 整数型, , 外部框架高度



.程序集 __HIDDEN_TEMP_MOD__, , , 

.子程序 果核_加载皮肤, 空白型, , 
.参数 阴影大小, 整数型, 可空, 默认为6



.子程序 果核_设置阴影大小, 空白型, , 
.参数 大小, 整数型, , 



.子程序 果核_设置阴影颜色, 空白型, , rgb颜色
.参数 R色值, 整数型, , 
.参数 G色值, 整数型, , 
.参数 B色值, 整数型, , 




 ' 不属于任何一个程序集、类模块的函数：
