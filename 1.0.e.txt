 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 401
    高度 = 339
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “易の按键精灵”
    帮助文件名 = “”



.声音 关, " ' 已保存到：D:\易语言学习\Data\1.0.e\关", , 
.声音 开, " ' 已保存到：D:\易语言学习\Data\1.0.e\开", , 
.图片 图标1, " ' 已保存到：D:\易语言学习\Data\1.0.e\图标1", , 
.图片 图标2, " ' 已保存到：D:\易语言学习\Data\1.0.e\图标2", , 
.图片 图标3, " ' 已保存到：D:\易语言学习\Data\1.0.e\图标3", , 
.图片 图标4, " ' 已保存到：D:\易语言学习\Data\1.0.e\图标4", , 
.图片 图标5, " ' 已保存到：D:\易语言学习\Data\1.0.e\图标5", , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 3 8 系统核心支持库
 ' iext2 AF6AD80AA4244A59AFB3D83ECF5173CC 1 1 扩展界面支持库二
 ' ELIB DA19BC3ADD2F4121ABD84AC5FBCAFC71 1 3 ｅＬＩＢ＋＋EX
 ' EThread 5F99C1642A2F4e03850721B4F5D7C3F8 1 1 多线程支持库
 ' iext 27bb20fdd3e145e4bee3db39ddd6e64c 1 1 扩展界面支持库一
 ' xplib 7F54B9CE8887428dBA9CEEB94CEF4C72 1 1 XP风格界面库




数据类型 坐标, , 
    .成员 x, 整数型, , , 
    .成员 y, 整数型, , , 


.DLL命令 _取窗口标题长度, 整数型, "user32", "GetWindowTextLengthA", , 
    .参数 窗口句柄, 整数型, , 

.DLL命令 _取窗体标题, 整数型, "", "GetWindowTextA", , 
    .参数 当前窗口句柄, 整数型, , 
    .参数 窗口标题, 文本型, 传址, 
    .参数 标题长度, 整数型, , 

.DLL命令 _窗口是否可见, 整数型, "", "IsWindowVisible", , 
    .参数 测试窗口, 整数型, , 

.DLL命令 _取得窗口, 整数型, "", "GetWindow", , 获得一个窗口的句柄，该窗口与某源窗口有特定的关系
    .参数 源窗口, 整数型, , 
    .参数 关系, 整数型, , 

.DLL命令 _获得前台窗口, 整数型, "", "GetForegroundWindow", , 

.DLL命令 _桌面窗口, 整数型, "", "GetDesktopWindow", , 

.DLL命令 _置鼠标位置, 整数型, "", "SetCursorPos", , 
    .参数 x, 整数型, , 
    .参数 y, 整数型, , 

.DLL命令 _取鼠标位置, 整数型, "", "GetCursorPos", , 
    .参数 坐标, 坐标, 传址, 

.窗口程序集 窗口程序集1, , , 

.程序集变量 监视状态, 逻辑型, , , 
.程序集变量 运行状态, 逻辑型, , , 
.程序集变量 开始监视时间, 整数型, , , 
.程序集变量 脚本文件, 文本型, , , 格式为: (时间 脚本类型 按键代码 X Y)
.程序集变量 匿名程序集变量_62, 空白型, , , 
.程序集变量 鼠标上次位置, 坐标, , , 
.程序集变量 鼠标上次移动时间, 整数型, , , 
.程序集变量 匿名程序集变量_103, 空白型, , , 
.程序集变量 进入许可证, 整数型, , , 
.子程序 _打开脚本按钮_被单击, 空白型, , 
赋值 (.类型, 0)
.如果真 (等于 (打开 (), 真))
    赋值 (.内容, 到文本 (读入文件 (.文件名)))
    1.置文本 (相加 (“共”, 到文本 (未知支持库函数_1 ()), “条脚本”))
    
.如果真结束



.子程序 __启动窗口_创建完毕, 空白型, , 
未知支持库函数_0 (1)
置托盘图标 (#图标1, “按键模拟程序正在运行!”)
未知支持库函数_16 (&键盘处理程序)
未知支持库函数_17 (&鼠标处理程序)
赋值 (未知支持库函数_1 ())
取信息 () ' 取得可视窗口,加入组合框
赋值 (.标题, 相加 (“记录开始=ScrollLock键”, #换行符, “记录结束=ScrollLock键”, #换行符, “运行脚本=F12键”, #换行符, “结束脚本运行=F11键”, #换行符, #换行符, “灵敏度越小,记录的脚本越多!模拟精度越高!”))

.子程序 取信息, 空白型, , 
.局部变量 标题, 文本型, , , 
.局部变量 句柄, 整数型, , , 

清空 ()
“所有窗口”.加入项目 (0)
赋值 (句柄, _取得窗口 (_桌面窗口 (), 5))
.判断循环首 (不等于 (句柄, 0))
    赋值 (标题, 窗口名 (句柄))
    .如果真 (并且 (不等于 (标题, “”), 不等于 (_窗口是否可见 (句柄), 0))) ' 判断是不是可视窗口,窗口有无标题
        标题.加入项目 (句柄)
    .如果真结束
    赋值 (句柄, _取得窗口 (句柄, 2))
    
.判断循环尾 ()
赋值 (.现行选中项, 0)

.子程序 键盘处理程序, 空白型, , 
.参数 键状态, 整数型, , 
.参数 键代码, 整数型, , 


.如果真 (并且 (等于 (键状态, #), 等于 (键代码, 145))) ' 当按下ScrollLock键时.....
    赋值 (监视状态, 取反 (监视状态))
    .判断开始 (监视状态) ' 判断监视开始还是结束
         ' 开始监视
        .如果真 (.选中)
            赋值 (_启动窗口.位置, 2)
        .如果真结束
        赋值 (开始监视时间, 取启动时间 ())
        赋值 (脚本文件, “”)
        赋值 (., “”)
        赋值 (鼠标上次位置.x, 0)
        赋值 (鼠标上次位置.y, 0)
        赋值 (鼠标上次移动时间, 0)
        赋值 (.时钟周期, 1000) ' 显示动画托盘
        播放音乐 (#开, )
        
    .默认
         ' 结束监视状态
        1.置文本 (相加 (“共”, 到文本 (未知支持库函数_1 ()), “条脚本,估计执行时间需要”, 到文本 (相除 (相减 (取启动时间 (), 开始监视时间), 1000)), “秒”))
        赋值 (开始监视时间, 0)
        播放音乐 (#关, )
        返回 ()
    .判断结束
    
.如果真结束
.如果真 (并且 (等于 (键状态, #), 等于 (键代码, 123), 等于 (监视状态, 假))) ' 当安下F12键时,运行脚本
    .如果真 (.选中) ' 需判断前台窗口
        .如果真 (等于 (判断窗口条件 (), 假))
            1.置文本 (“前台窗口不符合条件!”)
            返回 ()
        .如果真结束
        
    .如果真结束
    .如果真 (运行状态) ' 避免启动多个模拟运行程序
        返回 ()
    .如果真结束
    .如果真 (.选中)
        赋值 (_启动窗口.位置, 2)
    .如果真结束
    未知支持库函数_0 (&运行脚本程序, ) ' 启用多线程
     ' 本来可以用时钟来实现模拟功能,但还没试过多线程支持库,就改用多线程来实现。发现效果比时钟还好,呵呵,不错啊!
    赋值 (.时钟周期, 1000)
    返回 ()
.如果真结束
.如果真 (并且 (等于 (键状态, #), 等于 (键代码, 122), 等于 (监视状态, 假))) ' 当按下F11键时,结束运行脚本
    赋值 (.选中, 假)
    赋值 (运行状态, 假)
    返回 ()
.如果真结束



.如果真 (或者 (等于 (键代码, 145), 等于 (键代码, 123), 等于 (键代码, 122))) ' 屏蔽掉了 F11,F12,ScrollLock键!
    返回 ()
.如果真结束
.如果真 (并且 (等于 (监视状态, 真), .选中))
    写入键盘脚本 (键状态, 键代码)
.如果真结束



.子程序 判断窗口条件, 逻辑型, , 
.局部变量 符合条件的窗口, 整数型, , , 

赋值 (符合条件的窗口, .取项目数值 (.现行选中项))
.判断开始 (等于 (_获得前台窗口 (), )) ' 判断前台窗口句柄,是不是组合框中选中的窗口句柄
    返回 (真)
.默认
    返回 (假)
.判断结束


.子程序 运行脚本程序, 空白型, , 
.局部变量 脚本, 脚本类, , , 
.局部变量 脚本行, 整数型, , , 
.局部变量 文本, 文本型, , , 
.局部变量 坐标, 坐标, , , 
.局部变量 成员, 文本型, , "0", 
.局部变量 延时, 整数型, , , 
.局部变量 前一脚本执行时间, 整数型, , , 
.局部变量 循环, 逻辑型, , , 

赋值 (循环, 真)
赋值 (运行状态, 真)
.如果真 (等于 (., “”))
    信息框 (“请设置好脚本再运行!”, #错误图标, )
    赋值 (运行状态, 假)
    返回 ()
.如果真结束

.判断循环首 (循环)
    .如果真 (等于 (运行状态, 假)) ' 用于强行退出循环
        跳出循环 ()
    .如果真结束
    
    赋值 (文本, 脚本行.未知支持库函数_2 ())
    赋值 (成员, 分割文本 (文本, “ ”, ))
    脚本.置时间 (到数值 (成员 [1]))
    脚本.置脚本类型 (到数值 (成员 [2]))
    脚本.置按键代码 (到数值 (成员 [3]))
    赋值 (坐标.x, 到数值 (成员 [4]))
    赋值 (坐标.y, 到数值 (成员 [5]))
    脚本.置鼠标坐标 (坐标)
    
    .如果真 (等于 (脚本行, 1))
        赋值 (前一脚本执行时间, 相减 (脚本.取时间 (), 20))
    .如果真结束
    赋值 (延时, 相减 (脚本.取时间 (), 前一脚本执行时间))
    .如果真 (小于或等于 (延时, 0))
        赋值 (延时, 3)
    .如果真结束
    赋值 (前一脚本执行时间, 脚本.取时间 ())
    脚本.开始模拟 ()
    延时 (延时)
    赋值 (脚本行, 相加 (脚本行, 1))
    .如果真 (等于 (未知支持库函数_1 (), 相加 (脚本行, 1))) ' 当脚本执行完毕后
        .判断开始 (.选中) ' 是否循环运行脚本
            赋值 (脚本行, 0)
            
        .默认
            跳出循环 ()
            赋值 (运行状态, 假)
        .判断结束
        
    .如果真结束
    
.判断循环尾 ()
赋值 (运行状态, 假)


.子程序 写入键盘脚本, 空白型, , 
.参数 键状态, 整数型, , 
.参数 键代码, 整数型, , 

.局部变量 执行时间, 整数型, , , 

赋值 (执行时间, 相减 (取启动时间 (), 开始监视时间))
赋值 (脚本文件, 相加 (脚本文件, 到文本 (执行时间), “ ”, 到文本 (键状态), “ ”, 到文本 (键代码), “ 0 0”, #换行符))
赋值 (., 脚本文件)
赋值 (., 取文本长度 (脚本文件))

.子程序 鼠标处理程序, 空白型, , 
.参数 鼠标状态, 整数型, , 
.参数 X, 整数型, , 
.参数 Y, 整数型, , 

.局部变量 ok, 坐标, , , 


.如果真 (并且 (监视状态, 不等于 (鼠标状态, 1), .选中)) ' 当按下鼠标键时
    写入鼠标脚本 (鼠标状态, X, Y)
.如果真结束
.如果真 (并且 (监视状态, 等于 (鼠标状态, 1), .选中, .选中)) ' 当需要记录鼠标移动轨迹时
    写入鼠标脚本 (鼠标状态, X, Y)
    
.如果真结束
_取鼠标位置 (ok)
0.置文本 (相加 (“x=”, 到文本 (ok.x), “  y=”, 到文本 (ok.y)))

.子程序 写入鼠标脚本, 空白型, , 
.参数 鼠标状态, 整数型, , 
.参数 X, 整数型, , 
.参数 Y, 整数型, , 

.局部变量 执行时间, 整数型, , , 

赋值 (相减 (取启动时间 (), 开始监视时间))

.如果真 (等于 (鼠标状态, 1))
    .如果真 (小于或等于 (相减 (执行时间, 鼠标上次移动时间), 到数值 (.内容))) ' 当鼠标移动间隔时间<指定毫秒时,不记录脚本.以免记录的脚本过多
        
        返回 ()
    .如果真结束
    .如果真 (并且 (等于 (鼠标上次位置.x, X), 等于 (鼠标上次位置.y, Y))) ' 如果鼠标位置没有改变,不记录脚本
        返回 ()
    .如果真结束
    
.如果真结束
赋值 (鼠标上次位置.x, X)
赋值 (鼠标上次位置.y, Y)
赋值 (鼠标上次移动时间, 执行时间)
赋值 (脚本文件, 相加 (脚本文件, 到文本 (执行时间), “ 3 ”, 到文本 (鼠标状态), “ ”, 到文本 (X), “ ”, 到文本 (Y), #换行符))
赋值 (., 脚本文件)
赋值 (., 取文本长度 (脚本文件))

.子程序 __启动窗口_将被销毁, 空白型, , 
未知支持库函数_18 (0)
未知支持库函数_2 ()

.子程序 _保存脚本按钮_被单击, 空白型, , 
赋值 (.类型, 1)
.如果真 (等于 (打开 (), 真))
    写到文件 (.文件名, 到字节集 (.内容))
.如果真结束


.子程序 窗口名, 文本型, , 
.参数 窗口句柄, 整数型, , 

.局部变量 名长, 整数型, , , 
.局部变量 名, 文本型, , , 

赋值 (名长, _取窗口标题长度 (窗口句柄))
.如果真 (小于或等于 (名长, 0))
    返回 (“”)
.如果真结束
赋值 (名, 取空白文本 (名长))
_取窗体标题 (窗口句柄, 名, 相加 (名长, 1))
返回 (名)

.子程序 _时钟1_周期事件, 空白型, , 
.局部变量 n, 整数型, 静态, , 

.如果真 (并且 (等于 (运行状态, 假), 等于 (监视状态, 假)))
    赋值 (.时钟周期, 0)
    置托盘图标 (#图标1, “按键模拟程序正在运行!”)
    返回 ()
.如果真结束
赋值 (n, 相加 (n, 1))
.如果真 (等于 (n, 1))
    置托盘图标 (#图标2, )
.如果真结束
.如果真 (等于 (n, 2))
    置托盘图标 (#图标3, )
.如果真结束
.如果真 (等于 (n, 3))
    置托盘图标 (#图标4, )
.如果真结束
.如果真 (等于 (n, 4))
    置托盘图标 (#图标5, )
    赋值 (n, 0)
.如果真结束


.子程序 __启动窗口_托盘事件, 空白型, , 
.参数 操作类型, 整数型, , 

赋值 (_启动窗口.位置, 0)

.子程序 _按钮1_被单击, 空白型, , 
取信息 () ' 刷新窗口

.类模块 脚本类, , , 

.程序集变量 时间, 整数型, , , 连续脚本运行记时(毫秒)
.程序集变量 脚本类型, 整数型, , , 1=键按下,2=键放开,3=鼠标动作
.程序集变量 按键代码, 整数型, , , 键代码 或 鼠标具体动作  可参考支持库常量表
.程序集变量 鼠标位置, 坐标, , , 
.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用
连续赋值 (0, 时间, 脚本类型, 按键代码)
赋值 (鼠标位置.x, 0)
赋值 (鼠标位置.y, 0)

.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 置时间, 空白型, 公开, 
.参数 执行时间, 整数型, , 

赋值 (时间, 执行时间)

.子程序 取时间, 整数型, 公开, 
返回 (时间)

.子程序 置脚本类型, 空白型, 公开, 
.参数 类型, 整数型, , 

赋值 (脚本类型, 类型)

.子程序 取脚本类型, 整数型, 公开, 
返回 (脚本类型)


.子程序 置按键代码, 空白型, 公开, 
.参数 代码, 整数型, , 

赋值 (按键代码, 代码)

.子程序 取按键代码, 整数型, 公开, 
返回 (按键代码)

.子程序 置鼠标坐标, 空白型, 公开, 
.参数 坐标位置, 坐标, , 

赋值 (鼠标位置.x, 坐标位置.x)
赋值 (鼠标位置.y, 坐标位置.y)

.子程序 取鼠标坐标, 坐标, 公开, 
.局部变量 坐标位置, 坐标, , , 

赋值 (坐标位置.x, 鼠标位置.x)
赋值 (坐标位置.y, 鼠标位置.y)
返回 (坐标位置)

.子程序 开始模拟, 空白型, 公开, 
.判断开始 (等于 (脚本类型, 3)) ' 判断是模拟键盘还是鼠标
    未知支持库函数_15 (#, 0, 0)
    .如果真 (等于 (按键代码, 1)) ' 需执行模拟鼠标移动
        _置鼠标位置 (鼠标位置.x, 鼠标位置.y)
        返回 ()
    .如果真结束
     ' 以下是模拟鼠标操作
    _置鼠标位置 (鼠标位置.x, 鼠标位置.y)
    延时 (2)
    未知支持库函数_15 (按键代码, 鼠标位置.x, 鼠标位置.y)
    
.默认
     ' 以下是模拟键盘操作
    未知支持库函数_14 (按键代码, 脚本类型)
.判断结束



 ' 不属于任何一个程序集、类模块的函数：
