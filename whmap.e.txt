 ' 文件类型：Windows窗口程序

 ' 程序名称：武汉人・公交查询系统
 ' 程序描述：本程序使用易语言4.0test5开发。
 ' 程序作者：曾劲松(古木,goomoo)
 ' 邮政编码：
 ' 联系地址：武汉市，武昌区，才胜街，铁机西区
 ' 联系电话：13886174425
 ' 传真号码：
 ' 电子信箱：zeng_goomoo@yahoo.com.cn
 ' 主页地址：http://www.goomoo.cn/ <建设中>
 ' 版权声明：QQ:49877692
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 400
    高度 = 400
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 0
    底图方式 = 1
    底色 = 15527148 '  0xECECEC
    最大化按钮 = 真
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 假
    随意移动 = 假
    外形 = 0
    总在最前 = 真
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “”
    帮助文件名 = “”

窗口 主窗口
    左边 = 50
    顶边 = 50
    宽度 = 620
    高度 = 476
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 1
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 真
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 3
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “”
    帮助文件名 = “”

窗口 窗口关于
    左边 = 50
    顶边 = 50
    宽度 = 400
    高度 = 400
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 0
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 假
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “”
    帮助文件名 = “”

窗口 窗口导航
    左边 = 50
    顶边 = 50
    宽度 = 234
    高度 = 146
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 4
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “导航窗口”
    帮助文件名 = “”

窗口 窗口提示
    左边 = 50
    顶边 = 50
    宽度 = 176
    高度 = 127
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 假
    禁止 = 假
    边框 = 0
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 真
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “”
    帮助文件名 = “”

窗口 窗口输出
    左边 = 50
    顶边 = 50
    宽度 = 279
    高度 = 418
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 1
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 真
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “”
    帮助文件名 = “”

窗口 窗口数据库维护
    左边 = 50
    顶边 = 50
    宽度 = 590
    高度 = 490
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 1
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 真
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 假
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “”
    帮助文件名 = “”

窗口 窗口修改公交线路
    左边 = 50
    顶边 = 50
    宽度 = 418
    高度 = 193
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 4
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “”
    帮助文件名 = “”



.常量 程序标题, "“武汉人・公交查询系统”", , 
.常量 程序版本, "“1.0”", , 
.常量 配置文件名, "“config.dat”", , 
.常量 原始宽度, "8800", , 
.常量 原始高度, "6040", , 
.常量 原始长宽比, "1.456953642384", , 
.常量 模式_选择对象, "1", , 
.常量 模式_平移视图, "2", , 
.常量 模式_区域缩放, "3", , 
.常量 模式_定起始站点, "4", , 
.常量 模式_定终止站点, "5", , 
.常量 模式_定位公交站坐标, "6", , 
.常量 GCL_HCURSOR, "-12", , 
.常量 工具条按钮_选择对象, "1", , 
.常量 工具条按钮_平移, "2", , 
.常量 工具条按钮_区域放大, "3", , 
.常量 工具条按钮_显示全部, "5", , 
.常量 工具条按钮_放大, "6", , 
.常量 工具条按钮_缩小, "7", , 
.常量 工具条按钮_增加视图书签, "9", , 
.常量 工具条按钮_删除视图书签, "10", , 
.常量 工具条按钮_上一视图, "11", , 
.常量 工具条按钮_下一视图, "12", , 
.常量 工具条按钮_打印视图, "14", , 
.常量 文件名_公交站数据库, "“\data\busStations.db”", , 
.常量 文件名_公交线路数据库, "“\data\busLines.db”", , 
.常量 文件名_公交线路文本, "“\data\busLines.dat”", , 
.常量 文件名_地图_水域, "“\maps\water.dat”", , 
.常量 文件名_地图_建筑, "“\maps\buildings.dat”", , 
.常量 文件名_地图_道路, "“\maps\roads.dat”", , 
.常量 文件名_地图_道路名, "“\maps\roadnames.dat”", , 
.常量 PS_ENDCAP_FLAT, "512", , 
.常量 PS_ENDCAP_MASK, "3840", , 
.常量 PS_ENDCAP_ROUND, "0", , 
.常量 PS_ENDCAP_SQUARE, "256", , 
.常量 PS_GEOMETRIC, "65536", , 
.常量 PS_INSIDEFRAME, "6", , 
.常量 PS_JOIN_BEVEL, "4096", , 
.常量 PS_JOIN_MASK, "61440", , 
.常量 PS_JOIN_MITER, "8192", , 
.常量 PS_JOIN_ROUND, "0", , 
.常量 PS_NULL, "5", , 
.常量 PS_SOLID, "0", , 
.常量 PS_STYLE_MASK, "15", , 
.常量 PS_TYPE_MASK, "983040", , 
.常量 PS_USERSTYLE, "7", , 
.常量 PS_ALTERNATE, "8", , 
.常量 PS_COSMETIC, "0", , 
.常量 PS_DASH, "1", , 
.常量 PS_DASHDOT, "3", , 
.常量 PS_DASHDOTDOT, "4", , 
.常量 PS_DOT, "2", , 
.常量 BS_SOLID, "0", , 
.常量 BS_PATTERN, "3", , 
.常量 BS_DIBPATTERN, "5", , 
.常量 BS_DIBPATTERN8X8, "8", , 
.常量 BS_HATCHED, "2", , 
.常量 BS_NULL, "1", , 
.常量 BS_HOLLOW, "1", , 
.常量 OPAQUE, "2", , 
.常量 TRANSPARENT, "1", , 
.常量 HS_BDIAGONAL, "3", , 
.常量 HS_BDIAGONAL1, "7", , 
.常量 HS_CROSS, "4", , 
.常量 HS_DIAGCROSS, "5", , 
.常量 HS_FDIAGONAL, "2", , 
.常量 HS_HORIZONTAL, "0", , 
.常量 HS_VERTICAL, "1", , 
.常量 HS_FDIAGONAL1, "6", , 
.常量 BLACKNESS, "66", , 
.常量 DSTINVERT, "5570569", , 
.常量 MERGECOPY, "12583114", , 
.常量 NOTSRCCOPY, "3342344", , 
.常量 NOTSRCERASE, "1114278", , 
.常量 PATCOPY, "15728673", , 
.常量 PATINVERT, "5898313", , 
.常量 PATPAINT, "16452105", , 
.常量 SRCAND, "8913094", , 
.常量 SRCCOPY, "13369376", , 
.常量 SRCERASE, "4457256", , 
.常量 SRCINVERT, "6684742", , 
.常量 SRCPAINT, "15597702", , 
.常量 WHITENESS, "16711778", , 
.常量 FLOODFILLBORDER, "0", , 
.常量 FLOODFILLSURFACE, "1", , 
.常量 GB2312_CHARSET, "134", , 
.常量 OUT_TT_PRECIS, "4", , 
.常量 PROOF_QUALITY, "2", , 
.常量 FF_DONTCARE, "0", , 
.常量 DEFAULT_CHARSET, "1", , 
.常量 GM_ADVANCED, "2", , 
.常量 GM_COMPATIBLE, "1", , 
.常量 DT_BOTTOM, "8", , 
.常量 DT_CALCRECT, "1024", , 
.常量 DT_CENTER, "1", , 
.常量 DT_EDITCONTROL, "8192", , 
.常量 DT_END_ELLIPSIS, "32768", , 
.常量 DT_EXPANDTABS, "64", , 
.常量 DT_EXTERNALLEADING, "512", , 
.常量 DT_LEFT, "0", , 
.常量 DT_MODIFYSTRING, "65536", , 
.常量 DT_NOCLIP, "256", , 
.常量 DT_NOPREFIX, "2048", , 
.常量 DT_RIGHT, "2", , 
.常量 DT_RTLREADING, "131072", , 
.常量 DT_SINGLELINE, "32", , 
.常量 DT_TABSTOP, "128", , 
.常量 DT_TOP, "0", , 
.常量 DT_VCENTER, "4", , 
.常量 DT_WORDBREAK, "16", , 
.图片 封面图片, " ' 已保存到：D:\易语言学习\Data\whmap.e\封面图片", , 
.图片 外形图片, " ' 已保存到：D:\易语言学习\Data\whmap.e\外形图片", , 
.图片 光标_箭头, " ' 已保存到：D:\易语言学习\Data\whmap.e\光标_箭头", , 
.图片 光标_手, " ' 已保存到：D:\易语言学习\Data\whmap.e\光标_手", , 
.图片 光标_区域放大, " ' 已保存到：D:\易语言学习\Data\whmap.e\光标_区域放大", , 
.图片 光标_定位起始站, " ' 已保存到：D:\易语言学习\Data\whmap.e\光标_定位起始站", , 
.图片 光标_定位终点站, " ' 已保存到：D:\易语言学习\Data\whmap.e\光标_定位终点站", , 
.图片 光标_定位公交站, " ' 已保存到：D:\易语言学习\Data\whmap.e\光标_定位公交站", , 
.图片 , , , 
.图片 矢量图_道路, " ' 已保存到：D:\易语言学习\Data\whmap.e\矢量图_道路", , 
.图片 矢量图_道路名, " ' 已保存到：D:\易语言学习\Data\whmap.e\矢量图_道路名", , 
.图片 矢量图_建筑, " ' 已保存到：D:\易语言学习\Data\whmap.e\矢量图_建筑", , 
.图片 矢量图_水域, " ' 已保存到：D:\易语言学习\Data\whmap.e\矢量图_水域", , 
.常量 EM_LINESCROLL, "182", , 
.常量 LVM_SCROLL, "4116", , 
.常量 LVM_GETTOPINDEX, "4135", , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 2 系统核心支持库
 ' spec A512548E76954B6E92C21055517615B0 1 0 特殊功能支持库
 ' iext 27bb20fdd3e145e4bee3db39ddd6e64c 1 2 扩展界面支持库一
 ' ExtMenu 9909FBB013704cfa8FE7E739DB7172DE 1 4 超级菜单支持库
 ' iext3 {B6F7542F-B8FE-46a8-9605-98856A687097} 1 7 扩展界面支持库三
 ' xplib 7F54B9CE8887428dBA9CEEB94CEF4C72 1 1 XP风格界面库
 ' HtmlView 5014D8FA6DCA40b68FA626D8183666EB 1 1 超文本浏览框支持库
 ' dp1 4BB4003860154917BC7D8230BF4FA58A 1 0 数据操作支持库一




数据类型 点, , 
    .成员 横坐标, 整数型, , , 
    .成员 纵坐标, 整数型, , , 

数据类型 逻辑画刷, , 
    .成员 样式, 整数型, , , 
    .成员 颜色, 整数型, , , 
    .成员 交叉线, 整数型, , , 

数据类型 逻辑画笔, , 
    .成员 画笔样式, 整数型, , , 
    .成员 宽度, 长整数型, , , 可能为 POINT 结构。
    .成员 颜色, 整数型, , , 

数据类型 矩形, , 
    .成员 左, 整数型, , , 
    .成员 上, 整数型, , , 
    .成员 右, 整数型, , , 
    .成员 下, 整数型, , , 

数据类型 视图, , 
    .成员 名字, 文本型, , , 
    .成员 缩放比例, 双精度小数型, , , 
    .成员 横坐标, 整数型, , , 视图左上角横坐标
    .成员 纵坐标, 整数型, , , 视图左上角纵坐标

数据类型 矩形_, , RECT
    .成员 左边, 整数型, , , left
    .成员 顶边, 整数型, , , top
    .成员 右边, 整数型, , , right
    .成员 底边, 整数型, , , bottom

.全局变量 全内存位图, 内存位图, , , 
.全局变量 全导航内存位图, 内存位图, , , 
.全局变量 全数据载入完毕, 逻辑型, , , 
.全局变量 全当前宽度, 空白型, , , 
.全局变量 全当前高度, 空白型, , , 
.全局变量 全当前视图, 视图, , , 
.全局变量 全公交站数组, 公交站, , "0", 保存所有公交站的数组
.全局变量 全公交线路数组, 公交线路, , "0", 保存所有公交线路的数组
.全局变量 全连通线路数组, 连通线路, , "0", 
.全局变量 全视图历史, 视图历史, , , 保存存储过的视图
.全局变量 全最佳缩放比, 双精度小数型, , , 保存视图缩放到最佳大小时的缩放比
.全局变量 全工作模式, 整数型, , , 1,2,3 以 模式_开头的常量
.全局变量 全上一次工作模式, 整数型, , , 
.全局变量 原横坐标, 整数型, , , xo,yo: 鼠标被按下时的坐标 o:origion
.全局变量 原纵坐标, 整数型, , , 
.全局变量 上次横坐标, 整数型, , , xm,ym: 鼠标被按下上次的坐标 l:last
.全局变量 上次纵坐标, 整数型, , , 
.全局变量 全鼠标被按下, 逻辑型, , , 鼠标是否已被按下
.全局变量 全矢量图道路, 字节集, , , 
.全局变量 全矢量图道路名, 字节集, , , 
.全局变量 全矢量图建筑, 字节集, , , 
.全局变量 全矢量图水域, 字节集, , , 
.全局变量 全临时文件名, 文本型, , , 

.DLL命令 创建兼容位图, 整数型, "", "CreateCompatibleBitmap", , 
    .参数 画布句柄, 整数型, , 
    .参数 宽度, 整数型, , 
    .参数 高度, 整数型, , 

.DLL命令 创建兼容画布, 整数型, "", "CreateCompatibleDC", , 
    .参数 画布句柄, 整数型, , 

.DLL命令 删除画布, 逻辑型, "", "DeleteDC", , 
    .参数 画布句柄, 整数型, , 

.DLL命令 增强移动到, 逻辑型, "", "MoveToEx", , 
    .参数 画布句柄, 整数型, , 
    .参数 横坐标, 整数型, , 
    .参数 纵坐标, 整数型, , 
    .参数 点, 整数型, , 未知类型：LPPOINT。

.DLL命令 画直线到, 逻辑型, "", "LineTo", , 
    .参数 画布句柄, 整数型, , 
    .参数 横坐标, 整数型, , 
    .参数 纵坐标, 整数型, , 

.DLL命令 多义线, 逻辑型, "", "Polyline", , 
    .参数 画布句柄, 整数型, , 
    .参数 点, 整数型, , 可能为 POINT 结构。
    .参数 点数组, 整数型, , 

.DLL命令 矩形, 逻辑型, "", "Rectangle", , 
    .参数 画布句柄, 整数型, , 
    .参数 左, 整数型, , 
    .参数 上, 整数型, , 
    .参数 右, 整数型, , 
    .参数 下, 整数型, , 

.DLL命令 椭圆, 逻辑型, "", "Ellipse", , 
    .参数 画布句柄, 整数型, , 
    .参数 左, 整数型, , 
    .参数 上, 整数型, , 
    .参数 右, 整数型, , 
    .参数 下, 整数型, , 

.DLL命令 间接创建画刷, 整数型, "", "CreateBrushIndirect", , 
    .参数 画刷, 逻辑画刷, 传址, 可能为 LOGBRUSH 结构。

.DLL命令 创建画笔, 整数型, "", "CreatePen", , 
    .参数 画笔样式, 整数型, , 
    .参数 宽度, 整数型, , 
    .参数 颜色, 整数型, , 

.DLL命令 间接创建画笔, 整数型, "", "CreatePenIndirect", , 
    .参数 画笔, 逻辑画笔, 传址, 可能为 LOGPEN 结构。

.DLL命令 删除对象, 逻辑型, "", "DeleteObject", , 
    .参数 对象句柄, 整数型, , 

.DLL命令 选择对象, 整数型, "", "SelectObject", , 
    .参数 画笔句柄, 整数型, , 
    .参数 对象句柄, 整数型, , 

.DLL命令 设置背景模式, 整数型, "", "SetBkMode", , 
    .参数 画布句柄, 整数型, , 
    .参数 模式, 整数型, , 

.DLL命令 创建实色画刷, 整数型, "", "CreateSolidBrush", , 
    .参数 颜色, 整数型, , 

.DLL命令 创建交叉线画刷, 整数型, "", "CreateHatchBrush", , 
    .参数 样式, 整数型, , 
    .参数 颜色, 整数型, , 

.DLL命令 多边形, 逻辑型, "", "Polygon", , 
    .参数 画布句柄, 整数型, , 
    .参数 点数组, 空白型, 传址, 可能为 POINT 结构。
    .参数 数量, 整数型, , 

.DLL命令 多边形贝塞尔曲线, 逻辑型, "", "PolyBezier", , 
    .参数 画布句柄, 整数型, , 
    .参数 点, 空白型, 传址, 可能为 POINT 结构。
    .参数 点数组, 整数型, , 

.DLL命令 取增强图元文件, 整数型, "", "GetEnhMetaFileA", , 
    .参数 文件名, 文本型, 传址, 

.DLL命令 设置增强图元文件数据, 整数型, "", "SetEnhMetaFileBits", , 
    .参数 缓冲, 整数型, , 
    .参数 数据, 字节集, 传址, 

.DLL命令 播放增强图元文件, 逻辑型, "", "PlayEnhMetaFile", , 
    .参数 画布句柄, 整数型, , 
    .参数 增强图元文件句柄, 整数型, , 
    .参数 矩形, 矩形, 传址, 可能为 RECT 结构。

.DLL命令 删除增强图元文件, 逻辑型, "", "DeleteEnhMetaFile", , 
    .参数 增强图元文件句柄, 整数型, , 

.DLL命令 装载图标, 整数型, "", "LoadIconA", , 
    .参数 实例句柄, 整数型, , 
    .参数 图标名, 文本型, 传址, 

.DLL命令 绘制图标, 逻辑型, "", "DrawIcon", , 
    .参数 画布句柄, 整数型, , 
    .参数 横坐标, 整数型, , 
    .参数 纵坐标, 整数型, , 
    .参数 图标句柄, 整数型, , 

.DLL命令 位块传送, 逻辑型, "", "BitBlt", , 
    .参数 目标画布句柄, 整数型, , 
    .参数 目标横坐标, 整数型, , 
    .参数 目标纵坐标, 整数型, , 
    .参数 宽度, 整数型, , 
    .参数 高度, 整数型, , 
    .参数 源画布句柄, 整数型, , 
    .参数 源横坐标, 整数型, , 
    .参数 源纵坐标, 整数型, , 
    .参数 绘制方式, 整数型, , 

.DLL命令 拉伸位块传送, 逻辑型, "", "StretchBlt", , 
    .参数 目标画布句柄, 整数型, , 
    .参数 目标原点横坐标, 整数型, , 
    .参数 目标原点纵坐标, 整数型, , 
    .参数 目标宽度, 整数型, , 
    .参数 目标高度, 整数型, , 
    .参数 源画布句柄, 整数型, , 
    .参数 源原点横坐标, 整数型, , 
    .参数 源原点纵坐标, 整数型, , 
    .参数 源宽度, 整数型, , 
    .参数 源高度, 整数型, , 
    .参数 绘制方式, 整数型, , 

.DLL命令 取画布句柄, 整数型, "", "GetDC", , 
    .参数 窗口句柄, 整数型, , 

.DLL命令 释放画布, 整数型, "", "ReleaseDC", , 
    .参数 窗口句柄, 整数型, , 
    .参数 画布句柄, 整数型, , 

.DLL命令 圆角矩形, 逻辑型, "", "RoundRect", , 
    .参数 画布句柄, 整数型, , 
    .参数 矩形左边坐标, 整数型, , 
    .参数 矩形顶边坐标, 整数型, , 
    .参数 矩形右边坐标, 整数型, , 
    .参数 矩形下边坐标, 整数型, , 
    .参数 圆角宽度, 整数型, , 
    .参数 圆角高度, 整数型, , 

.DLL命令 洪水填充, 逻辑型, "", "FloodFill", , 
    .参数 画布句柄, 整数型, , 
    .参数 起始横坐标, 整数型, , 
    .参数 起始纵坐标, 整数型, , 
    .参数 填充方式, 整数型, , 

.DLL命令 填充矩形, 整数型, "", "FillRect", , 
    .参数 画布句柄, 整数型, , 
    .参数 矩形, 矩形, 传址, 可能为 RECT 结构。
    .参数 刷子句柄, 整数型, , 

.DLL命令 增强洪水填充, 逻辑型, "", "ExtFloodFill", , 
    .参数 hdc, 整数型, , 
    .参数 nXStart, 整数型, , 
    .参数 nYStart, 整数型, , 
    .参数 crColor, 整数型, , 
    .参数 fuFillType, 整数型, , 

.DLL命令 创建字体, 整数型, "", "CreateFontA", , 
    .参数 高度, 整数型, , 
    .参数 宽度, 整数型, , 
    .参数 倾斜, 整数型, , 
    .参数 方向, 整数型, , 
    .参数 粗细, 整数型, , 
    .参数 倾斜样式, 逻辑型, , 
    .参数 下划线样式, 逻辑型, , 
    .参数 中画线样式, 逻辑型, , 
    .参数 字符集, 整数型, , 
    .参数 输出精度, 整数型, , 
    .参数 裁切精度, 整数型, , 
    .参数 质量, 整数型, , 
    .参数 家族, 整数型, , 
    .参数 字体名, 文本型, 传址, 

.DLL命令 设置文本颜色, 整数型, "", "SetTextColor", , 
    .参数 画布句柄, 整数型, , 
    .参数 颜色, 整数型, , 

.DLL命令 设置背景颜色, 整数型, "", "SetBkColor", , 
    .参数 画布句柄, 整数型, , 
    .参数 颜色, 整数型, , 

.DLL命令 文本输出, 逻辑型, "", "TextOutA", , 
    .参数 画布句柄, 整数型, , 
    .参数 横坐标, 整数型, , 
    .参数 纵坐标, 整数型, , 
    .参数 字符串, 文本型, 传址, 
    .参数 长度, 整数型, , 

.DLL命令 绘制文本, 整数型, "", "DrawTextA", , 
    .参数 画布句柄, 整数型, , 
    .参数 文本, 文本型, 传址, 
    .参数 数量, 整数型, , 
    .参数 矩形, 矩形, , 未知类型：LPRECT。
    .参数 格式, 整数型, , 

.DLL命令 设置图形模式, 整数型, "", "SetGraphicsMode", , 
    .参数 画布句柄, 整数型, , 
    .参数 模式, 整数型, , 

.DLL命令 设置窗口类属性, 整数型, "", "SetClassLongA", , 
    .参数 窗口句柄, 整数型, , 
    .参数 索引, 整数型, , 
    .参数 新值, 整数型, , 

.DLL命令 从文件载入光标, 整数型, "", "LoadCursorFromFileA", , 
    .参数 文件名, 文本型, 传址, 

.DLL命令 取窗口矩形_, 整数型, "", "GetWindowRect", , 
    .参数 窗口句柄, 整数型, , 
    .参数 矩形区域, 矩形_, , 

.DLL命令 闪烁窗口标题栏, 逻辑型, "", "FlashWindow", , 
    .参数 窗口句柄, 整数型, , 
    .参数 是否翻转, 逻辑型, , 

.类模块 交通图元, , , 

.程序集变量 私名称, 文本型, , , 
.程序集变量 私描述, 文本型, , , 
.程序集变量 私颜色, 整数型, , , 
.程序集变量 私是否被选中, 逻辑型, , , 
.程序集变量 私选中颜色, 整数型, , , 
.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用
赋值 (私选中颜色, 取颜色值 (255, 0, 0))
赋值 (私是否被选中, 假)


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 创建交通图元, 空白型, 公开, 
.参数 参名称, 文本型, , 

赋值 (私名称, 参名称)


.子程序 置描述, 空白型, 公开, 
.参数 参描述文本, 文本型, , 

赋值 (私描述, 参描述文本)


.子程序 取描述, 文本型, 公开, 
返回 (私描述)


.子程序 绘制到画板, 空白型, 公开, 虚方法，继承类必须覆盖此方法
.参数 参画板, 画板, , 
.参数 参缩放比例, 双精度小数型, 可空, 如果为空，则为1

 ' 参画板.定位写出 (参左, 参顶, “绘制 方法未被继承类覆盖！”)


.子程序 绘制到内存位图, 空白型, 公开, 虚方法，继承类必须覆盖此方法
.参数 某内存位图, 内存位图, , 
.参数 参缩放比例, 双精度小数型, 可空, 



.子程序 取颜色, 整数型, 公开, 
返回 (私颜色)

.子程序 置颜色, 空白型, 公开, 
.参数 参颜色, 空白型, , 

赋值 (私颜色, 参颜色)


.子程序 置选中颜色, 空白型, 公开, 
.参数 参颜色, 整数型, , 

赋值 (私选中颜色, 参颜色)


.子程序 取选中颜色, 整数型, 公开, 
返回 (私选中颜色)


.子程序 置名称, 空白型, 公开, 
.参数 参名称, 文本型, , 

赋值 (私名称, 参名称)


.子程序 取名称, 文本型, 公开, 
返回 (私名称)


.子程序 是否被选中, 逻辑型, 公开, 
返回 (私是否被选中)

.子程序 选中, 空白型, 公开, 
赋值 (私是否被选中, 真)


.子程序 取消选中, 空白型, 公开, 
赋值 (私是否被选中, 假)

.类模块 公路, 交通图元, , 

.程序集变量 私等级, 整数型, , , 决定公路的宽度，分为5个等级，级数越大公路越宽
.程序集变量 私控制点坐标, 整数型, , "0", 形成公路的坐标点，个数必须为偶数，定位一个点
.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 从字符串创建, 逻辑型, , 从字符串创建公路，该字符串必须遵循以下格式："公路名|公路等级|r,g,b(颜色)|r,g,b(选中时的颜色)|x0,y0,x1,y1……"
.参数 参信息字符串, 文本型, , 

.局部变量 临时文本, 文本型, , , 
.局部变量 临时文本数组, 文本型, , "0", 
.局部变量 临时文本数组一, 文本型, , "0", 
.局部变量 i, 空白型, , , 
.局部变量 j, 空白型, , , 
.局部变量 成员数, 空白型, , , 

赋值 (临时文本数组一, 分割文本 (参信息字符串, “|”, ))
.如果真 (小于 (取数组成员数 (临时文本数组一), 5))
    输出调试文本 (“文本格式不对。”)
    返回 (假)
.如果真结束
.计次循环首 (取数组成员数 (临时文本数组一), i)
    赋值 (临时文本, 临时文本数组一 [i])
    .判断开始 (等于 (i, 1))
         ' 公路名称
        置名称 (临时文本)
    .判断 (等于 (i, 2))
         ' 公路等级
        赋值 (私等级, 到数值 (临时文本))
    .判断 (等于 (i, 3))
         ' 颜色
        赋值 (临时文本数组, 分割文本 (临时文本, “,”, ))
        .如果真 (不等于 (取数组成员数 (临时文本数组), 3))
            输出调试文本 (“颜色格式不对。”)
            返回 (假)
        .如果真结束
        置颜色 (取颜色值 (到数值 (临时文本数组 [1]), 到数值 (临时文本数组 [2]), 到数值 (临时文本数组 [3])))
    .判断 (等于 (i, 4))
         ' 选中色
        赋值 (临时文本数组, 分割文本 (临时文本, “,”, ))
        .如果真 (不等于 (取数组成员数 (临时文本数组), 3))
            输出调试文本 (“选中颜色格式不对。”)
            返回 (假)
        .如果真结束
        置选中颜色 (取颜色值 (到数值 (临时文本数组 [1]), 到数值 (临时文本数组 [2]), 到数值 (临时文本数组 [3])))
    .判断 (等于 (i, 5))
         ' 坐标数据
        赋值 (临时文本数组, 分割文本 (临时文本, “,”, ))
        赋值 (成员数, 取数组成员数 (临时文本数组))
        .如果真 (或者 (不等于 (求余数 (成员数, 2), 0), 小于 (成员数, 4)))
            输出调试文本 (“公路顶点坐标数据不成对。”)
            返回 (假)
        .如果真结束
        重定义数组 (私控制点坐标, 假, 0)
        .计次循环首 (成员数, j)
            加入成员 (私控制点坐标, 到数值 (临时文本数组 [j]))
        .计次循环尾 ()
    .默认
        
    .判断结束
    
.计次循环尾 ()
返回 (真)

.子程序 绘制到画板, 空白型, , 
.参数 参画板, 画板, , 
.参数 参缩放比例, 双精度小数型, 可空, 如果为空，则为1

.局部变量 成员数, 空白型, , , 
.局部变量 i, 空白型, , , 
.局部变量 xa, 空白型, , , 
.局部变量 ya, 空白型, , , 
.局部变量 xb, 空白型, , , 
.局部变量 yb, 空白型, , , 

.如果真 (是否为空 (参缩放比例))
    赋值 (参缩放比例, 1)
.如果真结束

赋值 (参画板.画笔粗细, 相乘 (私等级, 3, 参缩放比例))
赋值 (参画板.画笔颜色, 取颜色 ())
赋值 (参画板.画出方式, 12)

.如果真 (是否被选中 ())
    赋值 (参画板.画笔颜色, 取选中颜色 ())
.如果真结束

赋值 (成员数, 取数组成员数 (私控制点坐标))
.计次循环首 (相减 (相除 (成员数, 2), 1), i)
    赋值 (xa, 相乘 (参缩放比例, 私控制点坐标 [相减 (相乘 (i, 2), 1)]))
    赋值 (ya, 相乘 (参缩放比例, 私控制点坐标 [相乘 (i, 2)]))
    赋值 (xb, 相乘 (参缩放比例, 私控制点坐标 [相加 (相乘 (i, 2), 1)]))
    赋值 (yb, 相乘 (参缩放比例, 私控制点坐标 [相加 (相乘 (i, 2), 2)]))
    参画板.画直线 (xa, ya, xb, yb)
.计次循环尾 ()
 ' 参画板.画多边形 (私控制点坐标, )


.子程序 绘制到内存位图, 空白型, 公开, 
.参数 参内存位图, 内存位图, , 
.参数 参缩放比例, 双精度小数型, 可空, 

.如果真 (是否为空 (参缩放比例))
    赋值 (参缩放比例, 1)
.如果真结束
 ' 参内存位图.置画笔属性 (相乘 (私等级, 3, 参缩放比例), 取颜色 (), #PS_ENDCAP_FLAT, #PS_JOIN_ROUND)
 ' 参内存位图.画多义线横纵数组 (私控制点坐标)


.子程序 置等级, 空白型, 公开, 
.参数 参等级, 整数型, , 

.如果真 (或者 (大于 (参等级, 5), 小于 (参等级, 1)))
    赋值 (参等级, 1)
.如果真结束
赋值 (私等级, 参等级)


.子程序 取等级, 整数型, 公开, 
返回 (私等级)


.窗口程序集 _启动窗口程序集, , , 

.子程序 __启动窗口_首次激活, 空白型, , 
载入 (主窗口, , 假)


.子程序 __启动窗口_创建完毕, 空白型, , 
赋值 (., #封面图片)
 ' 置外形图片 (#图片外形, #黑色)
赋值 (.标题, 相加 (“版权所有 曾劲松 2005.5”, #换行符, “网站：http://maps.goomoo.cn/”))
未知支持库函数_0 (#)

.子程序 __启动窗口_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (全数据载入完毕)
    销毁 ()
.如果真结束
 ' 主窗口.绘制图形 ()


.类模块 公交站, 点图元, , 

.程序集变量 私点半径, 整数型, , , 
.程序集变量 私字体大小, 整数型, , , 
.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用
赋值 (私字体大小, 15)
赋值 (私点半径, 3)
置颜色 (取颜色值 (255, 102, 102))

.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 从字符串创建, 空白型, 公开, 
.参数 参公交站字符串数据, 文本型, , 

.局部变量 临时文本数组, 文本型, , "0", 

赋值 (临时文本数组, 分割文本 (参公交站字符串数据, “,”, ))
.计次循环首 (相减 (3, 取数组成员数 (临时文本数组)), )
     ' 没有坐标的就设为-1
    加入成员 (临时文本数组, “0”)
.计次循环尾 ()
创建点图元 (临时文本数组 [1], 到数值 (临时文本数组 [2]), 到数值 (临时文本数组 [3]))

.子程序 置点半径, 空白型, 公开, 
.参数 参点半径, 整数型, , 

赋值 (私点半径, 参点半径)


.子程序 取点半径, 整数型, , 
返回 (私点半径)


.子程序 置字体大小, 空白型, 公开, 
.参数 参字体大小, 整数型, , 

赋值 (私字体大小, 参字体大小)


.子程序 取字体大小, 整数型, 公开, 
返回 (私字体大小)


.子程序 绘制到画板, 空白型, 公开, 
.参数 参画板, 画板, , 
.参数 参缩放比例, 双精度小数型, 可空, 如果为空，则为1

.局部变量 x, 空白型, , , 
.局部变量 y, 空白型, , , 

 ' 参画板.定位写出 (参左, 参顶, “绘制 方法未被继承类覆盖！”)
赋值 (参画板.画笔颜色, 取颜色 ())
赋值 (参画板.刷子颜色, 取颜色 ())
赋值 (参画板.文本颜色, 取颜色 ())
.如果真 (是否被选中 ())
    赋值 (参画板.画笔颜色, 取选中颜色 ())
    赋值 (参画板.刷子颜色, 取选中颜色 ())
    赋值 (参画板.文本颜色, 取选中颜色 ())
.如果真结束
赋值 (参画板.字体.字体大小, 私字体大小)
 ' 参画板.字体.字体名称 ＝ “仿宋_GB2312”

赋值 (参画板.刷子类型, 1)
赋值 (x, 取横坐标 ())
赋值 (y, 取纵坐标 ())

.如果真 (或者 (等于 (x, 0), 等于 (y, 0)))
    返回 ()
.如果真结束

参画板.画椭圆 (相减 (x, 私点半径), 相减 (y, 私点半径), 相加 (x, 私点半径), 相加 (y, 私点半径))
参画板.定位写出 (相减 (x, 相除 (相乘 (取文本长度 (取名称 ()), 私字体大小), 3)), 相加 (y, 相乘 (3, 私点半径)), 取名称 ())


.子程序 绘制到内存位图, 空白型, 公开, 
.参数 参内存位图, 内存位图, , 
.参数 参缩放比例, 双精度小数型, 可空, 

.局部变量 颜色, 整数型, , , 
.局部变量 x, 空白型, , , 
.局部变量 y, 空白型, , , 

.如果真 (是否为空 (参缩放比例))
    赋值 (参缩放比例, 1)
.如果真结束

.如果 (是否被选中 ())
    赋值 (颜色, 取选中颜色 ())
.否则
    赋值 (颜色, 取颜色 ())
.如果结束

参内存位图.置文本属性 (相乘 (私字体大小, 0.5), 私字体大小, , 颜色, , 真, , , , , )
参内存位图.置画笔属性 (颜色, , )

参内存位图.置实色画刷 (取颜色 ())

赋值 (x, 相乘 (取横坐标 (), 参缩放比例))
赋值 (y, 相乘 (取纵坐标 (), 参缩放比例))

.如果真 (或者 (小于或等于 (x, 0), 小于或等于 (y, 0)))
     ' 如果没有坐标就不画
    返回 ()
.如果真结束

参内存位图.画椭圆 (相减 (x, 私点半径), 相减 (y, 私点半径), 相乘 (私点半径, 2), 相乘 (私点半径, 2))
参内存位图.文本输出 (相减 (x, 相除 (相乘 (取文本长度 (取名称 ()), 私字体大小), 4)), 相加 (y, 相乘 (3, 私点半径)), 取名称 ())

.类模块 点图元, 交通图元, , 描述点类型的对象，比如 公交站、学校、酒店、商场等、写字楼、公园

.程序集变量 私横坐标, 整数型, , , 
.程序集变量 私纵坐标, 整数型, , , 
.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 创建点图元, 空白型, 公开, 没办法，不能覆盖父类的创建方法，只能这样写了。
.参数 参名称, 文本型, , 
.参数 参横坐标, 整数型, , 
.参数 参纵坐标, 整数型, , 

创建交通图元 (参名称)
赋值 (私横坐标, 参横坐标)
赋值 (私纵坐标, 参纵坐标)


.子程序 置横坐标, 空白型, 公开, 
.参数 参横坐标, 整数型, , 

赋值 (私横坐标, 参横坐标)


.子程序 取横坐标, 整数型, 公开, 
返回 (私横坐标)


.子程序 置纵坐标, 空白型, 公开, 
.参数 参纵坐标, 整数型, , 

赋值 (私纵坐标, 参纵坐标)


.子程序 取纵坐标, 整数型, 公开, 
返回 (私纵坐标)


.子程序 取边界矩形, 矩形, 公开, 计算边界矩形，以便于缩放
.局部变量 某矩形, 矩形, , , 
.局部变量 横坐标, 空白型, , , 
.局部变量 纵坐标, 空白型, , , 

赋值 (横坐标, 取横坐标 ())
赋值 (纵坐标, 取纵坐标 ())
某矩形.设置 (相减 (横坐标, 500), 相减 (纵坐标, 500), 相加 (横坐标, 500), 相加 (纵坐标, 500))
返回 (某矩形)


.类模块 内存位图, , , 本类简单地封装了Windows 内存位图 作者：曾劲松 2005/4/27

.程序集变量 私画布句柄, 整数型, , , 
.程序集变量 私位图句柄, 整数型, , , 
.程序集变量 私宽度, 整数型, , , 
.程序集变量 私高度, 整数型, , , 
.程序集变量 私当前画笔, 整数型, , , 
.程序集变量 私当前画刷, 整数型, , , 
.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用
删除画布 (私画布句柄)
删除对象 (私位图句柄)
删除对象 (私当前画笔)
删除对象 (私当前画刷)

.子程序 创建位图, 逻辑型, 公开, 
.参数 参宽度, 整数型, , 
.参数 参高度, 整数型, , 

.局部变量 hdc, 空白型, , , 


.如果真 (不等于 (私画布句柄, 0))
    删除画布 (私画布句柄)
.如果真结束

赋值 (hdc, 取画布句柄 (0))
赋值 (私画布句柄, 创建兼容画布 (hdc))
.如果真 (等于 (私画布句柄, 0))
    输出调试文本 (“初始化失败。”)
    返回 (假)
.如果真结束
设置背景模式 (私画布句柄, #TRANSPARENT)
 ' 要使字符能够独立旋转，必须将图形模式设为高级。
设置图形模式 (私画布句柄, #GM_ADVANCED)
释放画布 (0, hdc)

.如果真 (不等于 (私位图句柄, 0))
    删除对象 (私位图句柄)
.如果真结束
赋值 (hdc, 取画布句柄 (0))
赋值 (私位图句柄, 创建兼容位图 (hdc, 参宽度, 参高度))
 ' 私位图句柄 ＝ CreateCompatibleBitmap (私画布句柄, 参宽度, 参高度)
选择对象 (私画布句柄, 私位图句柄)
释放画布 (0, hdc)
赋值 (私宽度, 参宽度)
赋值 (私高度, 参高度)

.如果真 (等于 (私位图句柄, 0))
    输出调试文本 (“创建位图失败。”)
    返回 (假)
.如果真结束
返回 (真)


.子程序 取画布句柄, 整数型, , 
.如果真 (等于 (私画布句柄, 0))
    输出调试文本 (“画布未初始化。”)
    返回 (-1)
.如果真结束
返回 (私画布句柄)

.子程序 取位图句柄, 整数型, , 
.如果真 (等于 (私位图句柄, 0))
    输出调试文本 (“位图未初始化。”)
    返回 (-1)
.如果真结束
返回 (私位图句柄)


.子程序 取宽度, 整数型, 公开, 
返回 (私宽度)


.子程序 取高度, 整数型, 公开, 
返回 (私高度)


.子程序 置画笔属性, 逻辑型, 公开, 
.参数 参画笔样式, 整数型, 可空, 
.参数 参画笔宽度, 整数型, 可空, 
.参数 参画笔颜色, 整数型, 可空, 
.参数 参端点样式, 整数型, 可空, 
.参数 参转角样式, 整数型, 可空, 

.局部变量 画笔样式, 整数型, , , 

.如果真 (是否为空 (参画笔样式))
    赋值 (参画笔样式, #PS_SOLID)
.如果真结束
.如果真 (是否为空 (参画笔宽度))
    赋值 (参画笔宽度, 1)
.如果真结束
.如果真 (是否为空 (参画笔颜色))
    赋值 (参画笔颜色, #黑色)
.如果真结束
.如果真 (是否为空 (参端点样式))
    赋值 (参端点样式, #PS_ENDCAP_FLAT)
.如果真结束
.如果真 (是否为空 (参转角样式))
    赋值 (参转角样式, #PS_JOIN_ROUND)
.如果真结束
赋值 (画笔样式, 位或 (参画笔样式, 参端点样式, 参转角样式))
.如果真 (不等于 (私当前画笔, 0))
    删除对象 (私当前画笔)
.如果真结束
赋值 (私当前画笔, 创建画笔 (画笔样式, 参画笔宽度, 参画笔颜色))
.如果真 (等于 (私当前画笔, 0))
    输出调试文本 (“创建画笔失败。”)
    返回 (假)
.如果真结束
 ' 输出调试文本 (到文本 (私当前画笔))
选择对象 (私画布句柄, 私当前画笔)
返回 (真)

.子程序 置实色画刷, 逻辑型, 公开, 
.参数 参颜色, 整数型, 参考, 

.如果真 (不等于 (私当前画刷, 0))
    删除对象 (私当前画刷)
.如果真结束
赋值 (私当前画刷, 创建实色画刷 (参颜色))
.如果真 (等于 (私当前画刷, 0))
    输出调试文本 (“设置实色画刷失败。”)
    返回 (假)
.如果真结束
选择对象 (私画布句柄, 私当前画刷)
返回 (真)


.子程序 置交叉线画刷, 逻辑型, 公开, 
.参数 参交叉线样式, 整数型, , 以 HS_ 开头的常量
.参数 参颜色, 整数型, , 

.如果真 (不等于 (私当前画刷, 0))
    删除对象 (私当前画刷)
.如果真结束
赋值 (私当前画刷, 创建交叉线画刷 (参交叉线样式, 参颜色))
.如果真 (等于 (私当前画刷, 0))
    输出调试文本 (“设置交叉线画刷失败。”)
    返回 (假)
.如果真结束
选择对象 (私画布句柄, 私当前画刷)
返回 (真)


.子程序 移动到, 空白型, 公开, 
.参数 参横坐标, 整数型, , 
.参数 参纵坐标, 整数型, , 

增强移动到 (私画布句柄, 参横坐标, 参纵坐标, 0)


.子程序 画直线到, 空白型, 公开, 
.参数 参横坐标, 整数型, , 
.参数 参纵坐标, 整数型, , 

画直线到 (私画布句柄, 参横坐标, 参纵坐标)


.子程序 画多义线点数组, 空白型, 公开, 
.参数 参顶点坐标数组, 点, 数组, Point 类型

.局部变量 顶点数, 整数型, , , 
.局部变量 i, 空白型, , , 

赋值 (顶点数, 取数组成员数 (参顶点坐标数组))
.如果真 (小于或等于 (顶点数, 0))
    返回 ()
.如果真结束
 ' Polyline (私画布句柄, 取变量地址 (参顶点坐标数组), 顶点数)
.计次循环首 (顶点数, i)
    .如果 (等于 (i, 1))
        移动到 (参顶点坐标数组 [1].横坐标, 参顶点坐标数组 [1].纵坐标)
    .否则
        画直线到 (参顶点坐标数组 [i], 横坐标, 参顶点坐标数组 [i], 纵坐标)
    .如果结束
    
.计次循环尾 ()

.子程序 画多义线横纵数组, 空白型, 公开, 
.参数 参横纵坐标数组, 整数型, 数组, 

.局部变量 p, 点, , , 
.局部变量 点数组, 点, , "0", 
.局部变量 i, 整数型, , , 
.局部变量 成员数, 整数型, , , 

赋值 (成员数, 取数组成员数 (参横纵坐标数组))
.如果真 (或者 (等于 (成员数, 0), 不等于 (求余数 (成员数, 2), 0)))
    输出调试文本 (“数组个数不是偶数。”)
    返回 ()
.如果真结束
.计次循环首 (相除 (成员数, 2), i)
    赋值 (p.横坐标, 参横纵坐标数组 [相减 (相乘 (i, 2), 1)])
    赋值 (p.纵坐标, 参横纵坐标数组 [相乘 (i, 2)])
    加入成员 (点数组, p)
.计次循环尾 ()
画多义线点数组 (点数组)


.子程序 画多边形点数组, 空白型, 公开, 
.参数 参顶点坐标数组, 点, 数组, 

.局部变量 顶点数, 整数型, , , 

赋值 (顶点数, 取数组成员数 (参顶点坐标数组))
.如果真 (小于或等于 (顶点数, 0))
    返回 ()
.如果真结束
 ' Polyline (私画布句柄, 参顶点坐标数组, 顶点数)
多边形 (私画布句柄, 取变量地址 (参顶点坐标数组), 顶点数)


.子程序 画多边形横纵数组, 空白型, 公开, 
.参数 参横纵坐标数组, 整数型, 数组, 

.局部变量 p, 点, , , 
.局部变量 点数组, 点, , "0", 
.局部变量 i, 整数型, , , 
.局部变量 成员数, 整数型, , , 

赋值 (成员数, 取数组成员数 (参横纵坐标数组))
.如果真 (或者 (等于 (成员数, 0), 不等于 (求余数 (成员数, 2), 0)))
    输出调试文本 (“数组个数不是偶数。”)
    返回 ()
.如果真结束
.计次循环首 (相除 (成员数, 2), i)
    赋值 (p.横坐标, 参横纵坐标数组 [相减 (相乘 (i, 2), 1)])
    赋值 (p.纵坐标, 参横纵坐标数组 [相乘 (i, 2)])
    加入成员 (点数组, p)
.计次循环尾 ()
画多边形点数组 (点数组)


.子程序 画曲线点数组, 空白型, , 
.参数 参顶点坐标数组, 点, 数组, 

.局部变量 顶点数, 整数型, , , 

赋值 (顶点数, 取数组成员数 (参顶点坐标数组))
.如果真 (小于或等于 (顶点数, 0))
    返回 ()
.如果真结束
 ' Polyline (私画布句柄, 取变量地址 (参顶点坐标数组), 顶点数)
多边形贝塞尔曲线 (私画布句柄, 取变量地址 (参顶点坐标数组), 顶点数)


.子程序 画曲线横纵数组, 空白型, 公开, 
.参数 参横纵坐标数组, 整数型, 数组, 

.局部变量 点, 点, , , 
.局部变量 点数组, 点, , "0", 
.局部变量 计次, 整数型, , , 
.局部变量 成员数, 整数型, , , 

赋值 (成员数, 取数组成员数 (参横纵坐标数组))
.如果真 (或者 (等于 (成员数, 0), 不等于 (求余数 (成员数, 2), 0)))
    输出调试文本 (“数组个数不是偶数。”)
    返回 ()
.如果真结束
.计次循环首 (相除 (成员数, 2), 计次)
    赋值 (点.横坐标, 参横纵坐标数组 [相减 (相乘 (计次, 2), 1)])
    赋值 (点.纵坐标, 参横纵坐标数组 [相乘 (计次, 2)])
    加入成员 (点数组, 点)
.计次循环尾 ()
画曲线点数组 (点数组)


.子程序 画emf文件, 逻辑型, 公开, 
.参数 参文件名, 文本型, , 
.参数 参横坐标, 整数型, , 
.参数 参纵坐标, 整数型, , 
.参数 参宽度, 整数型, , 
.参数 参高度, 整数型, , 

.局部变量 emf句柄, 空白型, , , 
.局部变量 某矩形, 矩形, , , 
.局部变量 结果, 逻辑型, , , 

.如果真 (取反 (文件是否存在 (参文件名)))
    输出调试文本 (“emf文件不存在。”)
    返回 (假)
.如果真结束
赋值 (emf句柄, 取增强图元文件 (参文件名))
.如果真 (等于 (emf句柄, 0))
    输出调试文本 (“载入emf文件错误。”)
    返回 (假)
.如果真结束
赋值 (某矩形.左, 参横坐标)
赋值 (某矩形.上, 参纵坐标)
赋值 (某矩形.右, 相加 (参横坐标, 参宽度))
赋值 (某矩形.下, 相加 (参纵坐标, 参高度))
赋值 (结果, 播放增强图元文件 (私画布句柄, emf句柄, 某矩形))
删除增强图元文件 (emf句柄)
返回 (结果)


.子程序 画emf字节集, 逻辑型, 公开, 
.参数 参emf字节集, 字节集, , 
.参数 参横坐标, 整数型, , 
.参数 参纵坐标, 整数型, , 
.参数 参宽度, 整数型, , 
.参数 参高度, 整数型, , 

.局部变量 emf句柄, 空白型, , , 
.局部变量 某矩形, 矩形, , , 
.局部变量 结果, 逻辑型, , , 

赋值 (emf句柄, 设置增强图元文件数据 (取字节集长度 (参emf字节集), 参emf字节集))
.如果真 (等于 (emf句柄, 0))
    输出调试文本 (“载入emf字节集错误。”)
    返回 (假)
.如果真结束
赋值 (某矩形.左, 参横坐标)
赋值 (某矩形.上, 参纵坐标)
赋值 (某矩形.右, 相加 (参横坐标, 参宽度))
赋值 (某矩形.下, 相加 (参纵坐标, 参高度))
赋值 (结果, 播放增强图元文件 (私画布句柄, emf句柄, 某矩形))
删除增强图元文件 (emf句柄)
返回 (结果)


.子程序 画图标文件, 逻辑型, 公开, 
.参数 参横坐标, 整数型, , 
.参数 参纵坐标, 整数型, , 
.参数 参图标文件名, 文本型, , 

.局部变量 图标句柄, 空白型, , , 
.局部变量 结果, 逻辑型, , , 

赋值 (图标句柄, 装载图标 (0, 参图标文件名))
.如果真 (等于 (图标句柄, 0))
    输出调试文本 (“装载图标文件错误。”)
    返回 (假)
.如果真结束
赋值 (结果, 绘制图标 (私画布句柄, 参横坐标, 参纵坐标, 图标句柄))
删除对象 (图标句柄)
返回 (结果)


.子程序 复制到画布, 逻辑型, 公开, 
.参数 参目的画布, 整数型, , 
.参数 参源横坐标, 整数型, 可空, 
.参数 参源纵坐标, 整数型, 可空, 
.参数 参宽度, 整数型, 可空, 
.参数 参高度, 整数型, 可空, 
.参数 参目标横坐标, 整数型, 可空, 
.参数 参目标纵坐标, 整数型, 可空, 
.参数 参复制方式, 整数型, 可空, 

.如果真 (是否为空 (参宽度))
    赋值 (参宽度, 私宽度)
.如果真结束
.如果真 (是否为空 (参高度))
    赋值 (参高度, 私高度)
.如果真结束
.如果真 (是否为空 (参复制方式))
    赋值 (参复制方式, #SRCCOPY)
.如果真结束
返回 (位块传送 (参目的画布, 参目标横坐标, 参目标纵坐标, 参宽度, 参高度, 私画布句柄, 参源横坐标, 参源纵坐标, 参复制方式))


.子程序 复制到画板, 逻辑型, 公开, 
.参数 参目的画板, 画板, , 
.参数 参源横坐标, 空白型, 可空, 
.参数 参源纵坐标, 空白型, 可空, 
.参数 参宽度, 空白型, 可空, 
.参数 参高度, 空白型, 可空, 
.参数 参目标横坐标, 空白型, 可空, 
.参数 参目标纵坐标, 空白型, 可空, 
.参数 参复制方式, 空白型, 可空, 

.局部变量 结果, 逻辑型, , , 
.局部变量 画布句柄, 整数型, , , 

.如果真 (取反 (是否已创建 (参目的画板)))
    输出调试文本 (“画布尚未创建。”)
    返回 (假)
.如果真结束
.如果真 (是否为空 (参宽度))
    赋值 (参宽度, 私宽度)
.如果真结束
.如果真 (是否为空 (参高度))
    赋值 (参高度, 私高度)
.如果真结束
.如果真 (是否为空 (参复制方式))
    赋值 (参复制方式, #SRCCOPY)
.如果真结束

赋值 (画布句柄, 取画布句柄 (参目的画板.取窗口句柄 ()))
赋值 (结果, 位块传送 (画布句柄, 参目标横坐标, 参目标纵坐标, 参宽度, 参高度, 私画布句柄, 参源横坐标, 参源纵坐标, 参复制方式))
返回 (结果)


.子程序 拉伸复制到画布, 逻辑型, 公开, 
.参数 参目的画布, 空白型, , 
.参数 参源横坐标, 空白型, 可空, 
.参数 参源纵坐标, 空白型, 可空, 
.参数 参源宽度, 空白型, 可空, 
.参数 参源高度, 空白型, 可空, 
.参数 参目的横坐标, 空白型, 可空, 
.参数 参目的纵坐标, 空白型, 可空, 
.参数 参目的宽度, 空白型, 可空, 
.参数 参目的高度, 空白型, 可空, 
.参数 参复制方式, 空白型, 可空, 

.局部变量 结果, 逻辑型, , , 

.如果真 (是否为空 (参源宽度))
    赋值 (参源宽度, 私宽度)
.如果真结束
.如果真 (是否为空 (参源高度))
    赋值 (参源高度, 私高度)
.如果真结束
.如果真 (是否为空 (参目的宽度))
    赋值 (参目的宽度, 私宽度)
.如果真结束
.如果真 (是否为空 (参目的高度))
    赋值 (参目的高度, 私高度)
.如果真结束
.如果真 (是否为空 (参复制方式))
    赋值 (参复制方式, #SRCCOPY)
.如果真结束
赋值 (结果, 拉伸位块传送 (参目的画布, 参目的横坐标, 参目的纵坐标, 参目的宽度, 参目的高度, 私画布句柄, 参源横坐标, 参源纵坐标, 参源宽度, 参源高度, 参复制方式))
返回 (结果)


.子程序 拉伸复制到画板, 逻辑型, 公开, 
.参数 参目的画板, 画板, , 
.参数 参源横坐标, 空白型, 可空, 
.参数 参源纵坐标, 空白型, 可空, 
.参数 参源宽度, 空白型, 可空, 
.参数 参源高度, 空白型, 可空, 
.参数 参目的横坐标, 空白型, 可空, 
.参数 参目的纵坐标, 空白型, 可空, 
.参数 参目的宽度, 空白型, 可空, 
.参数 参目的高度, 空白型, 可空, 
.参数 参复制方式, 空白型, 可空, 

.局部变量 画布句柄, 空白型, , , 
.局部变量 结果, 逻辑型, , , 

.如果真 (是否为空 (参源宽度))
    赋值 (参源宽度, 私宽度)
.如果真结束
.如果真 (是否为空 (参源高度))
    赋值 (参源高度, 私高度)
.如果真结束
.如果真 (是否为空 (参目的宽度))
    赋值 (参目的宽度, 私宽度)
.如果真结束
.如果真 (是否为空 (参目的高度))
    赋值 (参目的高度, 私高度)
.如果真结束
.如果真 (是否为空 (参复制方式))
    赋值 (参复制方式, #SRCCOPY)
.如果真结束

.如果真 (取反 (是否已创建 (参目的画板)))
    输出调试文本 (“目的画板未创建。”)
    返回 (假)
.如果真结束
赋值 (画布句柄, 取画布句柄 (参目的画板.取窗口句柄 ()))
.如果真 (等于 (画布句柄, 0))
    返回 (假)
.如果真结束
赋值 (结果, 拉伸位块传送 (画布句柄, 参目的横坐标, 参目的纵坐标, 参目的宽度, 参目的高度, 私画布句柄, 参源横坐标, 参源纵坐标, 参源宽度, 参源高度, 参复制方式))
释放画布 (参目的画板.取窗口句柄 (), 画布句柄)
返回 (结果)


.子程序 画矩形, 空白型, 公开, 
.参数 参横坐标, 整数型, , 
.参数 参纵坐标, 整数型, , 
.参数 参宽度, 整数型, , 
.参数 参高度, 整数型, , 

矩形 (私画布句柄, 参横坐标, 参纵坐标, 相加 (参横坐标, 参宽度), 相加 (参纵坐标, 参高度))


.子程序 画椭圆, 空白型, 公开, 
.参数 参横坐标, 整数型, , 
.参数 参纵坐标, 整数型, , 
.参数 参宽度, 整数型, , 
.参数 参高度, 整数型, , 

椭圆 (私画布句柄, 参横坐标, 参纵坐标, 相加 (参横坐标, 参宽度), 相加 (参纵坐标, 参高度))


.子程序 画圆角矩形, 空白型, 公开, 
.参数 参横坐标, 空白型, , 
.参数 参纵坐标, 空白型, , 
.参数 参宽度, 空白型, , 
.参数 参高度, 空白型, , 
.参数 参圆角宽度, 空白型, 可空, 
.参数 参圆角高度, 空白型, 可空, 

.如果真 (是否为空 (参圆角宽度))
    赋值 (参圆角宽度, 相除 (参宽度, 8))
.如果真结束
.如果真 (是否为空 (参圆角高度))
    赋值 (参圆角高度, 参圆角宽度)
.如果真结束
圆角矩形 (私画布句柄, 参横坐标, 参纵坐标, 相加 (参横坐标, 参宽度), 相加 (参纵坐标, 参高度), 参圆角宽度, 参圆角高度)


.子程序 实色填充, 空白型, 公开, 
.参数 参颜色, 整数型, , 

.局部变量 某矩形, 矩形, , , 
.局部变量 刷子句柄, 空白型, , , 

赋值 (某矩形.左, -100)
赋值 (某矩形.上, -100)
赋值 (某矩形.右, 相加 (私宽度, 200))
赋值 (某矩形.下, 相加 (私宽度, 200))
赋值 (刷子句柄, 创建实色画刷 (参颜色))
填充矩形 (私画布句柄, 某矩形, 刷子句柄)
删除对象 (刷子句柄)


.子程序 洪水填充, 空白型, 公开, 
.参数 参横坐标, 整数型, , 
.参数 参纵坐标, 整数型, , 
.参数 参颜色, 整数型, , 
.参数 参类型, 整数型, 可空, 以FLOODFILL开头的常量

.如果真 (是否为空 (参类型))
    赋值 (参类型, #FLOODFILLSURFACE)
.如果真结束
增强洪水填充 (私画布句柄, 参横坐标, 参纵坐标, 参颜色, 参类型)


.子程序 置文本属性, 逻辑型, 公开, 
.参数 参字体名, 文本型, 可空, 
.参数 参字符宽度, 整数型, 可空, 
.参数 参字符高度, 整数型, 可空, 
.参数 参笔画粗细, 整数型, 可空, 0-900
.参数 参字体颜色, 整数型, 可空, 
.参数 参背景颜色, 整数型, 可空, 
.参数 参背景是否透明, 逻辑型, 可空, 
.参数 参字符旋转角度, 整数型, 可空, 
.参数 参旋转角度, 整数型, 可空, 
.参数 参是否为斜体, 逻辑型, 可空, 
.参数 参是否下划线, 逻辑型, 可空, 
.参数 参是否删除线, 逻辑型, 可空, 

.如果真 (是否为空 (参字体名))
    赋值 (参字体名, “宋体”)
.如果真结束
.如果真 (是否为空 (参字体颜色))
    赋值 (参字体颜色, #黑色)
.如果真结束
.如果真 (是否为空 (参背景颜色))
    赋值 (参背景颜色, #白色)
.如果真结束
.如果真 (是否为空 (参背景是否透明))
    赋值 (参背景是否透明, 真)
.如果真结束
.如果真 (不等于 (私当前画笔, 0))
    删除对象 (私当前画笔)
.如果真结束
赋值 (私当前画笔, 创建字体 (参字符高度, 参字符宽度, 相乘 (参旋转角度, 10), 相乘 (参字符旋转角度, 10), 参笔画粗细, 参是否为斜体, 参是否下划线, 参是否删除线, #DEFAULT_CHARSET, #OUT_TT_PRECIS, 0, #PROOF_QUALITY, #FF_DONTCARE, 参字体名))
.如果真 (等于 (私当前画笔, 0))
    输出调试文本 (“创建画笔失败。”)
    返回 (假)
.如果真结束
.如果 (参背景是否透明)
    设置背景模式 (私画布句柄, #TRANSPARENT)
.否则
    设置背景模式 (私画布句柄, #OPAQUE)
.如果结束
设置文本颜色 (私画布句柄, 参字体颜色)
设置背景颜色 (私画布句柄, 参背景颜色)
选择对象 (私画布句柄, 私当前画笔)
返回 (真)


.子程序 文本输出, 空白型, 公开, 
.参数 参横坐标, 整数型, , 
.参数 参纵坐标, 整数型, , 
.参数 参文本, 文本型, , 

文本输出 (私画布句柄, 参横坐标, 参纵坐标, 参文本, 取文本长度 (参文本))


.子程序 绘制文本在矩形内, 空白型, 公开, 
.参数 参横坐标, 空白型, 可空, 
.参数 参纵坐标, 空白型, 可空, 
.参数 参宽度, 空白型, 可空, 
.参数 参高度, 空白型, 可空, 
.参数 参文本, 文本型, , 
.参数 参格式化选项, 空白型, 可空, 以DT_为首的常量
.参数 参是否绘制边界线, 逻辑型, 可空, 

.局部变量 某矩形, 矩形, , , 

.如果真 (是否为空 (参宽度))
    赋值 (参宽度, 320)
.如果真结束
.如果真 (是否为空 (参高度))
    赋值 (参高度, 240)
.如果真结束
.如果真 (是否为空 (参格式化选项))
    赋值 (参格式化选项, 位或 (#DT_CENTER, #DT_VCENTER))
.如果真结束
赋值 (某矩形.左, 参横坐标)
赋值 (某矩形.上, 参纵坐标)
赋值 (某矩形.右, 相加 (参横坐标, 参宽度))
赋值 (某矩形.下, 相加 (参纵坐标, 参高度))
绘制文本 (私画布句柄, 参文本, 取文本长度 (参文本), 某矩形, 参格式化选项)
.如果真 (参是否绘制边界线)
    移动到 (参横坐标, 参纵坐标)
    画直线到 (相加 (参横坐标, 参宽度), 参纵坐标)
    画直线到 (相加 (参横坐标, 参宽度), 相加 (参纵坐标, 参高度))
    画直线到 (参横坐标, 相加 (参纵坐标, 参高度))
    画直线到 (参横坐标, 参纵坐标)
.如果真结束


.窗口程序集 主窗口程序集, , , 

.子程序 _主窗口_创建完毕, 空白型, , 
.局部变量 计次, 空白型, , , 
.局部变量 导航图宽度, 空白型, , , 
.局部变量 导航图高度, 空白型, , , 


赋值 (全数据载入完毕, 假)
赋值 (全当前视图.缩放比例, 1)
赋值 (全当前视图.横坐标, 0)
赋值 (全当前视图.纵坐标, 0)
赋值 (全临时文件名, 取临时文件名 ())
赋值 (全工作模式, #模式_平移视图)
赋值 (全上一次工作模式, #模式_平移视图)

赋值 (主窗口., 相加 (#程序标题, “ - ”, #程序版本))

输出装载信息 (“正在读取配置……”)
读取配置文件 (#配置文件名)

输出装载信息 (“正在载入公交站数据……”)
载入公交站数据 ()
输出装载信息 (“正在载入线路数据……”)
载入公交线路数据 ()

输出装载信息 (“正在载入图形数据……”)
赋值 (全矢量图道路, 未知支持库函数_1 (#矢量图_道路))
赋值 (全矢量图道路名, 未知支持库函数_1 (#矢量图_道路名))
赋值 (全矢量图建筑, 未知支持库函数_1 (#矢量图_建筑))
赋值 (全矢量图水域, 未知支持库函数_1 (#矢量图_水域))

输出装载信息 (“正在绘制图形……”)
赋值 (主窗口., 3) ' 这一句要写在绘制图形之前
显示全部 ()

赋值 (导航图宽度, 180)
赋值 (导航图高度, 124)
全导航内存位图.创建位图 (240, 180)
全导航内存位图.实色填充 (#白色)
全导航内存位图.画emf字节集 (全矢量图水域, 0, 0, 导航图宽度, 导航图高度)
全导航内存位图.画emf字节集 (全矢量图建筑, 0, 0, 导航图宽度, 导航图高度)
全导航内存位图.画emf字节集 (全矢量图道路, 0, 0, 导航图宽度, 相加 (导航图高度, 相除 (相乘 (160, 导航图宽度), #原始宽度)))
 ' 全导航内存位图.画emf文件 (“maps\水域.emf”, 0, 0, 180, 124)
 ' 全导航内存位图.画emf文件 (“maps\建筑.emf”, 0, 0, 180, 124)
 ' 全导航内存位图.画emf文件 (“maps\道路.emf”, 0, 0, 180, 124)

赋值 (全数据载入完毕, 真)
输出装载信息 (“数据载入完毕,单击以关闭此画面。”)

_主工具条_被单击 (#工具条按钮_平移)
获取焦点 ()

载入 (窗口提示, 主窗口, 假)


.子程序 读取配置文件, 空白型, , 
.参数 参配置文件名, 文本型, , 

.局部变量 文件内容, 文本型, , , 
.局部变量 文件内容数组, 文本型, , "0", 
.局部变量 文件行数, 整数型, , , 
.局部变量 临时文本数组, 文本型, , "0", 
.局部变量 某视图, 视图, , , 
.局部变量 计次, 空白型, , , 

.如果真 (取反 (文件是否存在 (参配置文件名)))
    返回 ()
.如果真结束

赋值 (文件内容, 到文本 (读入文件 (参配置文件名)))
赋值 (文件内容数组, 分割文本 (文件内容, #换行符, ))
赋值 (文件行数, 取数组成员数 (文件内容数组))
.如果真 (小于 (文件行数, 3))
    信息框 (“配置文件格式错误！”, #错误图标, #程序标题)
    返回 ()
.如果真结束
 ' 第一行记录程序名称和版本
.如果真 (不等于 (文件内容数组 [1], 相加 (#程序标题, #程序版本)))
    信息框 (“配置文件格式不对！”, #错误图标, #程序标题)
    返回 ()
.如果真结束
 ' 第二行记录绘制选项
赋值 (临时文本数组, 分割文本 (文件内容数组 [2], “,”, ))
.如果 (大于或等于 (取数组成员数 (临时文本数组), 6))
    赋值 (.选中, 选择 (等于 (临时文本数组 [1], 到文本 (真)), 真, 假))
    赋值 (.选中, 选择 (等于 (临时文本数组 [2], 到文本 (真)), 真, 假))
    赋值 (.选中, 选择 (等于 (临时文本数组 [3], 到文本 (真)), 真, 假))
    赋值 (.选中, 选择 (等于 (临时文本数组 [4], 到文本 (真)), 真, 假))
    赋值 (.选中, 选择 (等于 (临时文本数组 [5], 到文本 (真)), 真, 假))
    赋值 (.选中, 选择 (等于 (临时文本数组 [6], 到文本 (真)), 真, 假))
.否则
    .如果真 (是否已创建 (_启动窗口))
         ' 防止启动窗口拦住了信息框。
        赋值 (_启动窗口., 假)
    .如果真结束
    信息框 (“配置文件格式不对！”, #错误图标, #程序标题)
    .如果真 (是否已创建 (_启动窗口))
        赋值 (_启动窗口., 真)
    .如果真结束
    返回 ()
.如果结束
 ' 第三行记录颜色配置
赋值 (临时文本数组, 分割文本 (文件内容数组 [3], “,”, ))
.如果 (大于或等于 (取数组成员数 (临时文本数组), 1))
    赋值 (.颜色, 到数值 (临时文本数组 [1]))
.否则
    信息框 (“配置文件格式不对！”, #错误图标, #程序标题)
    返回 ()
.如果结束
 ' 第四行记录放大缩小配置
赋值 (临时文本数组, 分割文本 (文件内容数组 [4], “,”, ))
.如果 (大于或等于 (取数组成员数 (临时文本数组), 2))
    赋值 (.内容, 临时文本数组 [1])
    赋值 (.内容, 临时文本数组 [2])
.否则
    信息框 (“配置文件格式不对！”, #错误图标, #程序标题)
    返回 ()
.如果结束
 ' 后续行保存视图历史信息
赋值 (计次, 5)
.判断循环首 (小于或等于 (计次, 文件行数))
    赋值 (临时文本数组, 分割文本 (文件内容数组 [计次], “,”, ))
    .如果真 (小于 (取数组成员数 (临时文本数组), 4))
        到循环尾 ()
    .如果真结束
    赋值 (某视图.名字, 临时文本数组 [1])
    赋值 (某视图.横坐标, 到数值 (临时文本数组 [2]))
    赋值 (某视图.纵坐标, 到数值 (临时文本数组 [3]))
    赋值 (某视图.缩放比例, 到数值 (临时文本数组 [4]))
    全视图历史.追加视图 (某视图)
    赋值 (计次, 相加 (计次, 1))
.判断循环尾 ()
全视图历史.显示于列表框 ()
调整工具栏按钮状态 ()


.子程序 写配置文件, 空白型, , 
.参数 参配置文件名, 文本型, , 

.局部变量 文本, 文本型, , , 
.局部变量 文件内容, 文本型, , , 
.局部变量 某视图, 视图, , , 
.局部变量 计次, 空白型, , , 

 ' 第一行记录程序名称和版本
赋值 (文件内容, 相加 (#程序标题, #程序版本, #换行符))
 ' 第二行记录绘制选项
赋值 (文件内容, 相加 (文件内容, 到文本 (.选中), “,”, 到文本 (.选中), “,”, 到文本 (.选中), “,”, 到文本 (.选中), “,”, 到文本 (.选中), “,”, 到文本 (.选中), #换行符))
 ' 第三行记录颜色配置
赋值 (文件内容, 相加 (文件内容, 到文本 (.颜色), #换行符))
 ' 第四行写放大缩小比率
赋值 (文件内容, 相加 (文件内容, .内容, “,”, .内容, #换行符))
 ' 后续行保存视图历史信息
.计次循环首 (全视图历史.取视图总数 (), 计次)
    赋值 (某视图, 全视图历史.取视图 (计次))
    赋值 (文件内容, 相加 (文件内容, 某视图.名字, “,”, 到文本 (某视图.横坐标), “,”, 到文本 (某视图.纵坐标), “,”, 到文本 (某视图.缩放比例), #换行符))
.计次循环尾 ()
写到文件 (参配置文件名, 到字节集 (文件内容))


.子程序 输出装载信息, 空白型, , 往布幕窗口上输出信息。
.参数 参信息文本, 文本型, , 

.如果真 (取反 (是否已创建 (_启动窗口)))
    返回 ()
.如果真结束
赋值 (_启动窗口..标题, 参信息文本)

.子程序 _主窗口_尺寸被改变, 空白型, , 
调整控件 ()
 ' 绘制图形 ()


.子程序 载入公交线路数据, 空白型, , 
.局部变量 线路文本, 文本型, , , 
.局部变量 线路文本数组, 文本型, , "0", 
.局部变量 计次, 空白型, , , 
.局部变量 某公交线路, 公交线路, , , 
.局部变量 线路数组, 文本型, , "0", 
.局部变量 文件数据, 字节集, , , 

.如果真 (等于 (文件是否存在 (相加 (取运行目录 (), #文件名_公交线路数据库)), 假))
    赋值 (_启动窗口., 假)
    信息框 (相加 (“找不到公交线路数据库文件：”, 取运行目录 (), #文件名_公交线路数据库), #错误图标, #程序标题)
    赋值 (_启动窗口., 真)
    返回 ()
.如果真结束

赋值 (文件数据, 读入文件 (相加 (取运行目录 (), #文件名_公交线路数据库)))
赋值 (文件数据, 未知支持库函数_1 (文件数据))

赋值 (线路文本, 到文本 (文件数据))
重定义数组 (全公交线路数组, 假, 0)

赋值 (线路数组, 分割文本 (线路文本, #换行符, ))
.计次循环首 (取数组成员数 (线路数组), 计次)
    某公交线路.从数字字符串创建 (线路数组 [计次])
    加入成员 (全公交线路数组, 某公交线路)
    赋值 (线路文本数组, 分割文本 (线路数组 [计次], “,”, ))
    处理事件 ()
.计次循环尾 ()

.子程序 载入公交站数据, 空白型, , 
.局部变量 公交站数据文本, 文本型, , , 
.局部变量 公交站文本数组, 文本型, , "0", 
.局部变量 计次, 空白型, , , 
.局部变量 某公交站, 公交站, , , 
.局部变量 公交站数据, 字节集, , , 

.如果真 (取反 (文件是否存在 (相加 (取运行目录 (), #文件名_公交站数据库))))
    赋值 (_启动窗口., 假)
    信息框 (相加 (“找不到公交站数据文件：”, 取运行目录 (), #文件名_公交线路数据库), 位或 (#错误图标, #位于前台), #程序标题)
    赋值 (_启动窗口., 真)
    返回 ()
.如果真结束
赋值 (公交站数据, 未知支持库函数_1 (读入文件 (相加 (取运行目录 (), #文件名_公交站数据库))))
赋值 (公交站数据文本, 到文本 (公交站数据))
赋值 (公交站文本数组, 分割文本 (公交站数据文本, #换行符, ))
重定义数组 (全公交站数组, 假, 0)
.计次循环首 (取数组成员数 (公交站文本数组), 计次)
    某公交站.从字符串创建 (公交站文本数组 [计次])
     ' 全公交站图层.追加图元 (某公交站)
    加入成员 (全公交站数组, 某公交站)
    某公交站.取名称 ().加入项目 ()
    某公交站.取名称 ().加入项目 ()
    某公交站.取名称 ().加入项目 ()
     ' 组合框查询站牌.加入项目 (某公交站.取名称 (), )
    处理事件 ()
.计次循环尾 ()

.子程序 调整控件, 空白型, , 
赋值 (., 相减 (取用户区宽度 (), .))
赋值 (., 相减 (取用户区高度 (), 32, .))
赋值 (.高度, .)
赋值 (.宽度, 相减 (取用户区宽度 (), ., 2))
赋值 (., 相减 (., ., 5))
赋值 (.高度, 相减 (., .顶边, 5))
赋值 (.高度, 相减 (., .顶边, 5))
赋值 (全最佳缩放比, 计算最佳缩放比例 ())

.子程序 _画板_绘画, 空白型, , 
.参数 重画区左边, 整数型, , 
.参数 重画区上边, 整数型, , 
.参数 重画区右边, 整数型, , 
.参数 重画区下边, 整数型, , 

 ' 绘制图形 ()
全内存位图.复制到画板 (全当前视图.横坐标, 全当前视图.纵坐标, .宽度, .高度, , , )
 ' 勾画边界
赋值 (.画笔粗细, 2)
赋值 (.画笔颜色, 取颜色值 (145, 167, 180))
0.画矩形 (0, .宽度, .高度)


.子程序 _主窗口_将被销毁, 空白型, , 
.如果真 (是否已创建 (_启动窗口))
    _启动窗口.销毁 ()
.如果真结束
写配置文件 (#配置文件名)

.子程序 显示全部, 空白型, , 缩放到显示地图的全部
.如果真 (并且 (等于 (全当前视图.缩放比例, 全最佳缩放比), 等于 (全当前视图.横坐标, 0), 等于 (全当前视图.纵坐标, 0)))
    0.置文本 (“已缩放至最佳比例。”)
    返回 ()
.如果真结束
赋值 (全当前视图.横坐标, 0)
赋值 (全当前视图.纵坐标, 0)
赋值 (全当前视图.缩放比例, 全最佳缩放比)
缩放到视图 (全当前视图)

.子程序 放大视图, 空白型, , 
.局部变量 放大比率, 双精度小数型, , , 

赋值 (放大比率, 到数值 (.内容))
赋值 (全当前视图.缩放比例, 相乘 (全当前视图.缩放比例, 放大比率))
赋值 (全当前视图.横坐标, 相加 (全当前视图.横坐标, 相乘 (相加 (全当前视图.横坐标, 相除 (.宽度, 2)), 相减 (放大比率, 1))))
赋值 (全当前视图.纵坐标, 相加 (全当前视图.纵坐标, 相乘 (相加 (全当前视图.纵坐标, 相除 (.高度, 2)), 相减 (放大比率, 1))))
缩放到视图 (全当前视图)

.子程序 缩小视图, 空白型, , 
.局部变量 画板长宽比, 双精度小数型, , , 
.局部变量 缩小比率, 双精度小数型, , , 

.如果真 (等于 (全当前视图.缩放比例, 全最佳缩放比))
    0.置文本 (“已缩小到最佳合适位置。”)
    返回 ()
.如果真结束
赋值 (缩小比率, 到数值 (.内容))
赋值 (全当前视图.缩放比例, 相乘 (全当前视图.缩放比例, 缩小比率))
.如果真 (小于 (全当前视图.缩放比例, 全最佳缩放比))
    显示全部 ()
    返回 ()
.如果真结束

 ' 计算正确的视图位置
赋值 (全当前视图.横坐标, 相减 (全当前视图.横坐标, 相乘 (相加 (全当前视图.横坐标, 相除 (.宽度, 2)), 相减 (1, 缩小比率))))
赋值 (全当前视图.纵坐标, 相减 (全当前视图.纵坐标, 相乘 (相加 (全当前视图.纵坐标, 相除 (.高度, 2)), 相减 (1, 缩小比率))))

.如果真 (大于 (相加 (全当前视图.横坐标, .宽度), 相乘 (#原始宽度, 全当前视图.缩放比例)))
    赋值 (全当前视图.横坐标, 相减 (全内存位图.取宽度 (), .宽度))
.如果真结束
.如果真 (大于 (相加 (全当前视图.纵坐标, .高度), 相乘 (#原始高度, 全当前视图.缩放比例)))
    赋值 (全当前视图.纵坐标, 相减 (全内存位图.取高度 (), .高度))
.如果真结束

.如果真 (小于 (全当前视图.横坐标, 0))
    赋值 (全当前视图.横坐标, 0)
.如果真结束
.如果真 (小于 (全当前视图.纵坐标, 0))
    赋值 (全当前视图.纵坐标, 0)
.如果真结束

缩放到视图 (全当前视图)


.子程序 缩放到视图, 空白型, , 
.参数 参视图, 视图, 可空, 

.局部变量 位图宽度, 空白型, , , 
.局部变量 位图高度, 空白型, , , 

0.置文本 (“正在绘制地图……”)
置等待鼠标 ()

.循环判断首 ()
    赋值 (位图宽度, 相乘 (#原始宽度, 参视图.缩放比例))
    赋值 (位图高度, 相乘 (#原始高度, 参视图.缩放比例))
    .如果 (全内存位图.创建位图 (位图宽度, 位图高度))
         ' 直到能够正确地创建位图
        跳出循环 ()
    .否则
        赋值 (参视图.横坐标, 相乘 (参视图.横坐标, 0.9))
        赋值 (参视图.纵坐标, 相乘 (参视图.纵坐标, 0.9))
        赋值 (参视图.缩放比例, 相乘 (参视图.缩放比例, 0.9))
    .如果结束
    处理事件 ()
.循环判断尾 (真)
 ' 全当前视图 ＝ 参视图

 ' 全内存位图.实色填充 (取颜色值 (230, 242, 159))
全内存位图.实色填充 (.颜色)
.如果真 (.选中)
    0.置文本 (“正在绘制水域……”)
     ' 全内存位图.画emf文件 (“maps\水域.emf”, 0, 0, 位图宽度, 位图高度)
    全内存位图.画emf字节集 (全矢量图水域, 0, 0, 位图宽度, 位图高度)
.如果真结束
.如果真 (.选中)
    0.置文本 (“正在绘制建筑群……”)
     ' 全内存位图.画emf文件 (“maps\建筑.emf”, 0, 0, 位图宽度, 位图高度)
    全内存位图.画emf字节集 (全矢量图建筑, 0, 0, 位图宽度, 位图高度)
.如果真结束
.如果真 (.选中)
    0.置文本 (“正在绘制道路……”)
     ' 道路的高度有点不对，进行校验。
     ' 全内存位图.画emf文件 (“maps\道路.emf”, 0, 0, 位图宽度, 位图高度 ＋ 160 × 参视图.缩放比例)
    全内存位图.画emf字节集 (全矢量图道路, 0, 0, 位图宽度, 相加 (位图高度, 相乘 (160, 参视图.缩放比例)))
.如果真结束

.如果真 (大于 (全当前视图.缩放比例, 0.3))
    0.置文本 (“正在绘制公路名……”)
     ' 全内存位图.画emf文件 (“maps\道路名.emf”, 0, 0, 位图宽度, 位图高度)
    全内存位图.画emf字节集 (全矢量图道路名, 0, 0, 位图宽度, 位图高度)
.如果真结束
.如果真 (.选中)
    绘制公交站 ()
.如果真结束

.如果真 (大于或等于 (.现行选中项, 0))
    全连通线路数组.绘制到内存位图 ( [相加 (.现行选中项, 1)], 全内存位图, 全当前视图.缩放比例)
.如果真结束

.如果真 (并且 (等于 (.内容, “公交线路”), 大于或等于 (.现行选中项, 0)))
    全公交线路数组.绘制到内存位图 ( [.取项目数值 (.现行选中项)], 全内存位图, , , , 全当前视图.缩放比例)
.如果真结束

.清除 ()
全内存位图.复制到画板 (全当前视图.横坐标, 全当前视图.纵坐标, .宽度, .高度, , , )

 ' 勾画边界
赋值 (.画笔粗细, 1)
赋值 (.画笔颜色, 取颜色值 (145, 167, 180))
0.画矩形 (0, .宽度, .高度)

更新导航窗口 ()

0.置文本 (“已就绪。”)
2.置文本 (相加 (“缩放比例：”, 到文本 (参视图.缩放比例)))

恢复鼠标 ()


.子程序 更新导航窗口, 空白型, , 
.如果真 (等于 (是否已创建 (窗口导航), 假))
    返回 ()
.如果真结束
窗口导航._画板导航_绘画 (0, 0, 0, 0)


.子程序 缩放到矩形, 空白型, , 相对于内存位图的区域放大，这里的坐标是实际坐标
.参数 参矩形, 矩形, , 

.局部变量 缩放系数, 双精度小数型, , , 
.局部变量 长宽比, 双精度小数型, , , 
.局部变量 画板长宽比, 双精度小数型, , , 
.局部变量 某视图, 视图, , , 

赋值 (长宽比, 相除 (参矩形.取宽度 (), 参矩形.取高度 ()))
赋值 (画板长宽比, 相除 (.宽度, .高度))

.如果 (大于 (长宽比, 画板长宽比))
    赋值 (缩放系数, 相除 (.宽度, 参矩形.取宽度 ()))
     ' 调整纵坐标
    赋值 (某视图.横坐标, 相乘 (参矩形.取横坐标 (), 缩放系数))
    赋值 (某视图.纵坐标, 相减 (相乘 (参矩形.取纵坐标 (), 缩放系数), 相除 (相减 (.高度, 相乘 (参矩形.取高度 (), 缩放系数)), 2)))
.否则
    赋值 (缩放系数, 相除 (.高度, 参矩形.取高度 ()))
     ' 调整横坐标
    赋值 (某视图.横坐标, 相减 (相乘 (参矩形.取横坐标 (), 缩放系数), 相除 (相减 (.宽度, 相乘 (参矩形.取宽度 (), 缩放系数)), 2)))
    赋值 (某视图.纵坐标, 相乘 (参矩形.取纵坐标 (), 缩放系数))
.如果结束
赋值 (某视图.缩放比例, 缩放系数)
.如果真 (小于 (某视图.横坐标, 0))
    赋值 (某视图.横坐标, 0)
.如果真结束
.如果真 (小于 (某视图.纵坐标, 0))
    赋值 (某视图.纵坐标, 0)
.如果真结束
赋值 (全当前视图, 某视图)
缩放到视图 (全当前视图)

.子程序 绘制公交站, 空白型, , 
.局部变量 计次, 空白型, , , 

.如果真 (大于 (全当前视图.缩放比例, 0.3))
    0.置文本 (“正在绘制公交站……”)
    .计次循环首 (取数组成员数 (全公交站数组), 计次)
        全公交站数组.绘制到内存位图 ( [计次], 全内存位图, 全当前视图.缩放比例)
    .计次循环尾 ()
.如果真结束


.子程序 平移视图, 空白型, , 
.参数 参横向偏移距离, 整数型, , 
.参数 参纵向偏移距离, 整数型, , 

.如果真 (并且 (小于或等于 (全当前视图.缩放比例, 全最佳缩放比), 等于 (全当前视图.横坐标, 0), 等于 (全当前视图.纵坐标, 0)))
    返回 ()
.如果真结束
赋值 (全当前视图.横坐标, 相加 (全当前视图.横坐标, 参横向偏移距离))
.如果真 (小于 (全当前视图.横坐标, 0))
    赋值 (全当前视图.横坐标, 0)
.如果真结束
.如果真 (大于 (相加 (全当前视图.横坐标, .宽度), 全内存位图.取宽度 ()))
    赋值 (全当前视图.横坐标, 相减 (全内存位图.取宽度 (), .宽度))
.如果真结束

赋值 (全当前视图.纵坐标, 相加 (全当前视图.纵坐标, 参纵向偏移距离))
.如果真 (小于 (全当前视图.纵坐标, 0))
    赋值 (全当前视图.纵坐标, 0)
.如果真结束
.如果真 (大于 (相加 (全当前视图.纵坐标, .高度), 全内存位图.取高度 ()))
    赋值 (全当前视图.纵坐标, 相减 (全内存位图.取高度 (), .高度))
.如果真结束
全内存位图.复制到画板 (全当前视图.横坐标, 全当前视图.纵坐标, .宽度, .高度, , , )
更新导航窗口 ()


.子程序 区域放大, 空白型, , 相对于画板坐标的区域放大，这里的坐标是光标在画板上的坐标
.参数 参区域左上角横坐标, 整数型, , 
.参数 参区域左上角纵坐标, 整数型, , 
.参数 参区域右下角横坐标, 整数型, , 
.参数 参区域右下角纵坐标, 整数型, , 

.局部变量 区域宽度, 整数型, , , 
.局部变量 目标位图宽度, 整数型, , , 
.局部变量 目标位图高度, 整数型, , , 
.局部变量 放大系数, 双精度小数型, , , 
.局部变量 原始比例, 双精度小数型, , , 

.如果真 (大于 (全当前视图.缩放比例, 1))
    0.置文本 (“已放到最大。”)
    返回 ()
.如果真结束
 ' 仅以宽度作为依据
赋值 (区域宽度, 取绝对值 (相减 (参区域右下角横坐标, 参区域左上角横坐标)))
赋值 (放大系数, 相除 (.宽度, 区域宽度))
赋值 (原始比例, 全当前视图.缩放比例)
赋值 (全当前视图.缩放比例, 相乘 (全当前视图.缩放比例, 放大系数))

.如果真 (大于 (全当前视图.缩放比例, 1))
    赋值 (全当前视图.缩放比例, 1)
    赋值 (放大系数, 相除 (1, 原始比例))
.如果真结束

赋值 (目标位图宽度, 相乘 (#原始宽度, 全当前视图.缩放比例))
赋值 (目标位图高度, 相乘 (#原始高度, 全当前视图.缩放比例))

赋值 (全当前视图.横坐标, 相乘 (相加 (全当前视图.横坐标, 参区域左上角横坐标), 放大系数))
.如果真 (小于 (全当前视图.横坐标, 0))
    赋值 (全当前视图.横坐标, 0)
.如果真结束
.如果真 (大于 (相加 (全当前视图.横坐标, .宽度), 目标位图宽度))
    赋值 (全当前视图.横坐标, 相减 (目标位图宽度, .宽度))
.如果真结束

赋值 (全当前视图.纵坐标, 相乘 (相加 (全当前视图.纵坐标, 参区域左上角纵坐标), 放大系数))
.如果真 (小于 (全当前视图.纵坐标, 0))
    赋值 (全当前视图.纵坐标, 0)
.如果真结束
.如果真 (大于 (相加 (全当前视图.纵坐标, .高度), 目标位图高度))
    赋值 (全当前视图.纵坐标, 相减 (目标位图高度, .高度))
.如果真结束
 ' 输出调试文本 (到文本 (全当前视图.横坐标) ＋ “,” ＋ 到文本 (全当前视图.纵坐标))
缩放到视图 (全当前视图)

.子程序 计算最佳缩放比例, 双精度小数型, , 计算要将图像完全显示出来是缩放比例
.局部变量 结果, 双精度小数型, , , 
.局部变量 画板长宽比, 双精度小数型, , , 

赋值 (画板长宽比, 相除 (.宽度, .高度))
.如果 (大于或等于 (画板长宽比, #原始长宽比))
    赋值 (结果, 相除 (.高度, #原始高度))
.否则
    赋值 (结果, 相除 (.宽度, #原始宽度))
.如果结束
返回 (结果)


.子程序 _主工具条_被单击, 空白型, , 
.参数 按钮索引, 整数型, , 

 ' 防止用户单击定位站点按钮后又直接单击工具条
赋值 (.选中, 假)
赋值 (.选中, 假)
赋值 (全工作模式, 全上一次工作模式)
置光标 ()

.判断开始 (等于 (按钮索引, #工具条按钮_选择对象))
    赋值 (全工作模式, #模式_选择对象)
    置模式菜单项状态 ()
    置光标 ()
.判断 (等于 (按钮索引, #工具条按钮_平移))
    赋值 (全工作模式, #模式_平移视图)
    置模式菜单项状态 ()
    置光标 ()
.判断 (等于 (按钮索引, #工具条按钮_区域放大))
    赋值 (全工作模式, #模式_区域缩放)
    置模式菜单项状态 ()
    置光标 ()
.判断 (等于 (按钮索引, #工具条按钮_显示全部)) ' 显示全部
    显示全部 ()
.判断 (等于 (按钮索引, #工具条按钮_放大)) ' 放大
    放大视图 ()
.判断 (等于 (按钮索引, #工具条按钮_缩小)) ' 缩小
    缩小视图 ()
.判断 (等于 (按钮索引, #工具条按钮_增加视图书签))
    全视图历史.追加视图 (全当前视图)
    调整工具栏按钮状态 ()
    全视图历史.显示于列表框 ()
    赋值 (.现行选中项, 相减 (全视图历史.取当前索引 (), 1))
    赋值 (., 2)
    
.判断 (等于 (按钮索引, #工具条按钮_删除视图书签))
    全视图历史.删除当前视图 ()
    调整工具栏按钮状态 ()
    赋值 (全当前视图, 全视图历史.取当前视图 ())
    全视图历史.显示于列表框 ()
    缩放到视图 (全当前视图)
    
.判断 (等于 (按钮索引, #工具条按钮_上一视图))
    赋值 (全当前视图, 全视图历史.上一视图 ())
    缩放到视图 (全当前视图)
    调整工具栏按钮状态 ()
    赋值 (.现行选中项, 相减 (全视图历史.取当前索引 (), 1))
.判断 (等于 (按钮索引, #工具条按钮_下一视图))
    赋值 (全当前视图, 全视图历史.下一视图 ())
    缩放到视图 (全当前视图)
    调整工具栏按钮状态 ()
    赋值 (.现行选中项, 相减 (全视图历史.取当前索引 (), 1))
.判断 (等于 (按钮索引, #工具条按钮_打印视图))
    _打印当前视图_被选择 ()
.默认
    
.判断结束


.子程序 调整工具栏按钮状态, 空白型, , 
.如果 (全视图历史.是否有上一视图 ())
    #工具条按钮_上一视图.去除状态 (#禁止)
.否则
    #工具条按钮_上一视图.加入状态 (#禁止)
.如果结束
.如果 (全视图历史.是否有下一视图 ())
    #工具条按钮_下一视图.去除状态 (#禁止)
.否则
    #工具条按钮_下一视图.加入状态 (#禁止)
.如果结束
.如果 (全视图历史.是否可删除视图 ())
    #工具条按钮_删除视图书签.去除状态 (#禁止)
.否则
    #工具条按钮_删除视图书签.加入状态 (#禁止)
.如果结束

 ' .判断开始 (等于 (全工作模式, #模式_选择对象))
     ' #工具条按钮_选择对象.加入状态 (#选中)
     ' #工具条按钮_选择对象.加入状态 (#按下)
     ' #工具条按钮_平移.去除状态 (#选中)
     ' #工具条按钮_平移.去除状态 (#按下)
     ' #工具条按钮_区域放大.去除状态 (#选中)
     ' #工具条按钮_区域放大.去除状态 (#按下)
 ' .判断 (等于 (全工作模式, #模式_平移视图))
     ' #工具条按钮_选择对象.去除状态 (#选中)
     ' #工具条按钮_选择对象.去除状态 (#按下)
     ' #工具条按钮_平移.加入状态 (#选中)
     ' #工具条按钮_平移.加入状态 (#按下)
     ' #工具条按钮_区域放大.去除状态 (#选中)
     ' #工具条按钮_区域放大.去除状态 (#按下)
     ' 
 ' .判断 (等于 (全工作模式, #模式_区域缩放))
     ' #工具条按钮_选择对象.去除状态 (#选中)
     ' #工具条按钮_选择对象.去除状态 (#按下)
     ' #工具条按钮_平移.去除状态 (#选中)
     ' #工具条按钮_平移.去除状态 (#按下)
     ' #工具条按钮_区域放大.加入状态 (#选中)
     ' #工具条按钮_区域放大.加入状态 (#按下)
     ' 
 ' .默认
     ' 
 ' .判断结束
 ' 

.子程序 _画板_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 横坐标, 空白型, , , x,y　定位公交站的坐标
.局部变量 纵坐标, 空白型, , , 
.局部变量 临时整数, 空白型, , , 

赋值 (原横坐标, 横向位置)
赋值 (原纵坐标, 纵向位置)
赋值 (上次横坐标, 横向位置)
赋值 (上次纵坐标, 纵向位置)
赋值 (全鼠标被按下, 真)


.子程序 _画板_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 左上横, 空白型, , , 用来绘制矩形
.局部变量 左上纵, 空白型, , , 
.局部变量 右下横, 空白型, , , 
.局部变量 右下纵, 空白型, , , 
.局部变量 横坐标, 空白型, , , x,y　定位公交站的坐标
.局部变量 纵坐标, 空白型, , , 
.局部变量 临时整数, 整数型, , , 
.局部变量 站编号, 整数型, , , 

.判断开始 (等于 (全工作模式, #模式_选择对象))
    
.判断 (等于 (全工作模式, #模式_平移视图))
    
.判断 (等于 (全工作模式, #模式_区域缩放))
     ' 用户可能从各个方向绘制矩形
    .如果 (小于或等于 (原横坐标, 横向位置))
        赋值 (左上横, 原横坐标)
        赋值 (右下横, 横向位置)
    .否则
        赋值 (左上横, 横向位置)
        赋值 (右下横, 原横坐标)
    .如果结束
    .如果 (小于或等于 (原纵坐标, 纵向位置))
        赋值 (左上纵, 原纵坐标)
        赋值 (右下纵, 纵向位置)
    .否则
        赋值 (左上纵, 纵向位置)
        赋值 (右下纵, 原纵坐标)
    .如果结束
    
    区域放大 (左上横, 左上纵, 右下横, 右下纵)
     ' 区域放大 (全光标上次横坐标, 全光标上次纵坐标, 横向位置, 纵向位置)
.判断 (等于 (全工作模式, #模式_定起始站点))
    赋值 (站编号, 寻找最近公交站 (横向位置, 纵向位置, 全当前视图))
    .如果 (不等于 (站编号, -1))
        赋值 (.内容, 全公交站数组.取名称 ( [站编号]))
    .否则
        信息框 (“未找到公交站！”, #错误图标, #程序标题)
    .如果结束
    _主工具条_被单击 (#工具条按钮_平移)
    
.判断 (等于 (全工作模式, #模式_定终止站点))
    赋值 (站编号, 寻找最近公交站 (横向位置, 纵向位置, 全当前视图))
    .如果 (不等于 (站编号, -1))
        赋值 (.内容, 全公交站数组.取名称 ( [站编号]))
    .否则
        信息框 (“未找到公交站！”, #错误图标, #程序标题)
    .如果结束
    _主工具条_被单击 (#工具条按钮_平移)
.判断 (等于 (全工作模式, #模式_定位公交站坐标))
    赋值 (横坐标, 相除 (相加 (全当前视图.横坐标, 横向位置), 全当前视图.缩放比例))
    赋值 (纵坐标, 相除 (相加 (全当前视图.纵坐标, 纵向位置), 全当前视图.缩放比例))
    .如果真 (是否已创建 (窗口数据库维护))
        赋值 (临时整数, 窗口数据库维护..)
        .如果真 (小于 (临时整数, 0))
            _主工具条_被单击 (#工具条按钮_平移)
            返回 ()
        .如果真结束
        窗口数据库维护.置标题 (., 临时整数, 1, 到文本 (横坐标))
        窗口数据库维护.置标题 (., 临时整数, 2, 到文本 (纵坐标))
        窗口数据库维护.置标题 (., 临时整数, 3, “*”)
        窗口数据库维护.置图片 (., 临时整数, 0, 0)
        _主工具条_被单击 (#工具条按钮_平移)
        赋值 (窗口数据库维护., 0)
        窗口数据库维护.获取焦点 (.)
        赋值 (窗口数据库维护., 相减 (窗口数据库维护., 1))
        赋值 (窗口数据库维护., 真)
        窗口数据库维护.置状态栏文本 ()
    .如果真结束
    
    
.默认
    
.判断结束
赋值 (全鼠标被按下, 假)

.子程序 _画板_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

1.置文本 (相加 (“光标位置：(”, 到文本 (横向位置), “,”, 到文本 (纵向位置), “)”))
.如果真 (窗口提示.)
    赋值 (窗口提示., -1)
    赋值 (窗口提示., 假)
.如果真结束
.判断开始 (等于 (全工作模式, #模式_选择对象))
    
.判断 (等于 (全工作模式, #模式_平移视图))
    .如果真 (全鼠标被按下)
        平移视图 (相减 (原横坐标, 横向位置), 相减 (原纵坐标, 纵向位置))
        赋值 (原横坐标, 横向位置)
        赋值 (原纵坐标, 纵向位置)
    .如果真结束
    
.判断 (等于 (全工作模式, #模式_区域缩放))
    .如果真 (全鼠标被按下)
        赋值 (.刷子类型, 0)
        赋值 (.画笔粗细, 2)
        赋值 (.画出方式, 5) ' 反转
        原横坐标.画矩形 (原纵坐标, 上次横坐标, 上次纵坐标)
        原横坐标.画矩形 (原纵坐标, 横向位置, 纵向位置)
        赋值 (上次横坐标, 横向位置)
        赋值 (上次纵坐标, 纵向位置)
    .如果真结束
    
.默认
    
.判断结束


.子程序 _画板_放开某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.判断开始 (等于 (键代码, #A键))
    显示全部 ()
.判断 (等于 (键代码, #S键))
    缩小视图 ()
.判断 (等于 (键代码, #D键))
    _主工具条_被单击 (#工具条按钮_区域放大)
.判断 (等于 (键代码, #F键))
    放大视图 ()
.判断 (等于 (键代码, #V键))
    _主工具条_被单击 (#工具条按钮_选择对象)
.判断 (等于 (键代码, #G键))
    _主工具条_被单击 (#工具条按钮_平移)
.默认
    
.判断结束


.子程序 _列表框视图_列表项被选择, 空白型, , 
赋值 (.内容, .取项目文本 (.现行选中项))
赋值 (.禁止, 假)

.子程序 _编辑框视图名称_内容被改变, 空白型, , 
.如果 (或者 (等于 (.内容, “”), 小于 (.现行选中项, 0)))
    赋值 (.禁止, 真)
.否则
    赋值 (.禁止, 假)
.如果结束


.子程序 _按钮删除所有视图_被单击, 空白型, , 
.局部变量 结果, 空白型, , , 

赋值 (结果, 信息框 (“你确信要清除所有视图标签吗？”, 位或 (#确认取消钮, #默认按钮二, #询问图标), ))
.如果真 (等于 (结果, #确认钮))
    全视图历史.清除视图历史 ()
    清空 ()
    赋值 (.禁止, 真)
    调整工具栏按钮状态 ()
.如果真结束


.子程序 _按钮重命名视图_被单击, 空白型, , 
.置项目文本 (.现行选中项, .内容)
全视图历史.置视图名称 (相加 (.现行选中项, 1), .内容)


.子程序 _列表框视图_双击选择, 空白型, , 
 ' 缩放到视图 (全视图历史.跳到视图 (列表框视图.现行选中项 ＋ 1))

赋值 (全当前视图, 全视图历史.跳到视图 (相加 (.现行选中项, 1)))
缩放到视图 (全当前视图)
调整工具栏按钮状态 ()
 ' 列表框视图.现行选中项 ＝ 全视图历史.取当前索引 () － 1


.子程序 _关于_被选择, 空白型, , 
载入 (窗口关于, 主窗口, 真)


.子程序 _按钮搜寻行车线路_被单击, 空白型, , 
.局部变量 已找到直达线路, 逻辑型, , , 
.局部变量 已找到转车线路, 逻辑型, , , 
.局部变量 是否跳出循环, 逻辑型, , , 在判断转车的过程中，是否要跳出循环不再判断本条线路 
.局部变量 起点公交站编号, 整数型, , , 
.局部变量 终点公交站编号, 整数型, , , 
.局部变量 计次一, 空白型, , , i,j,k 循环计数器
.局部变量 计次二, 空白型, , , 
.局部变量 计次三, 空白型, , , 
.局部变量 临时数值, 空白型, , , 
.局部变量 临时文本, 文本型, , , 
.局部变量 某连通线路, 连通线路, , , 
.局部变量 某经过起点站的公交线路, 公交线路, , , 
.局部变量 某经过终点站的公交线路, 公交线路, , , 
.局部变量 经过起点站的线路数组, 公交线路, , "0", 
.局部变量 经过终点站的线路数组, 公交线路, , "0", 
.局部变量 起始索引, 整数型, , , 公交线路中的某一段的起始和终止索引
.局部变量 终止索引, 整数型, , , 
.局部变量 某公交站编号, 整数型, , , 


.如果真 (等于 (.内容, “”))
    信息框 (“错误:起点站牌内容为空。”, 0, #程序标题)
    获取焦点 ()
    返回 ()
.如果真结束
.如果真 (等于 (.内容, “”))
    信息框 (“错误:终点站牌内容为空。”, 0, #程序标题)
    获取焦点 ()
    返回 ()
.如果真结束

赋值 (起点公交站编号, 根据公交站名取公交站编号 (.内容))
.如果 (大于 (起点公交站编号, 0))
    赋值 (.内容, 全公交站数组.取名称 ( [起点公交站编号]))
.否则
    信息框 (“错误:找不到所输的起点站名。”, #错误图标, #程序标题)
    返回 ()
.如果结束

赋值 (终点公交站编号, 根据公交站名取公交站编号 (.内容))
.如果 (大于 (终点公交站编号, 0))
    赋值 (.内容, 全公交站数组.取名称 ( [终点公交站编号]))
.否则
    信息框 (“错误:找不到所输的终点站名。”, #错误图标, #程序标题)
    返回 ()
.如果结束

清空 ()
重定义数组 (全连通线路数组, 假, 0)
赋值 (已找到直达线路, 假)
赋值 (已找到转车线路, 假)
0.置文本 (“正在搜索线路……”)

 ' 先搜寻是否有直达车
.计次循环首 (取数组成员数 (全公交线路数组), 计次一)
    处理事件 ()
    .如果真 (并且 (全公交线路数组.是否经过某公交站 ( [计次一], 起点公交站编号), 全公交线路数组.是否经过某公交站 ( [计次一], 终点公交站编号)))
        某连通线路.重置 ()
        某连通线路.置公交线路一 (全公交线路数组 [计次一])
         ' 不要忘了置起止索引
        某连通线路.置线路一起止索引 (全公交线路数组.查询公交站在线路中的索引 ( [计次一], 起点公交站编号), 全公交线路数组.查询公交站在线路中的索引 ( [计次一], 终点公交站编号))
        
        加入成员 (全连通线路数组, 某连通线路)
        全公交线路数组.取公交线路号 ( [计次一]).加入项目 ()
        赋值 (已找到直达线路, 真)
    .如果真结束
    
.计次循环尾 ()
.如果真 (已找到直达线路)
    0.置文本 (相加 (“已找到”, 到文本 (取项目数 ()), “条直达线路。”))
     ' 不再继续查找
    返回 ()
.如果真结束

 ' 如果未找到直达线路，则搜索转车线路
.计次循环首 (取数组成员数 (全公交线路数组), 计次一)
    处理事件 ()
     ' 分别列出经过起点站和终点站的公交线路
    .如果真 (全公交线路数组.是否经过某公交站 ( [计次一], 起点公交站编号))
        加入成员 (经过起点站的线路数组, 全公交线路数组 [计次一])
    .如果真结束
    .如果真 (全公交线路数组.是否经过某公交站 ( [计次一], 终点公交站编号))
        加入成员 (经过终点站的线路数组, 全公交线路数组 [计次一])
    .如果真结束
    
.计次循环尾 ()
.计次循环首 (取数组成员数 (经过起点站的线路数组), 计次一)
    赋值 (某经过起点站的公交线路, 经过起点站的线路数组 [计次一])
    赋值 (起始索引, 某经过起点站的公交线路.查询公交站在线路中的索引 (起点公交站编号))
    赋值 (是否跳出循环, 假)
     ' 先往线路的起点站判断
    赋值 (临时数值, 相减 (起始索引, 1))
    .判断循环首 (大于或等于 (临时数值, 1))
        赋值 (某公交站编号, 某经过起点站的公交线路.取公交站编号 (临时数值))
        .计次循环首 (取数组成员数 (经过终点站的线路数组), 计次二)
            处理事件 ()
            赋值 (某经过终点站的公交线路, 经过终点站的线路数组 [计次二])
            .如果真 (某经过终点站的公交线路.是否经过某公交站 (某公交站编号))
                 ' 找到转车线路
                某连通线路.重置 ()
                某连通线路.置公交线路一 (某经过起点站的公交线路)
                某连通线路.置线路一起止索引 (起始索引, 临时数值)
                某连通线路.置公交线路二 (某经过终点站的公交线路)
                某连通线路.置线路二起止索引 (某经过终点站的公交线路.查询公交站在线路中的索引 (某公交站编号), 某经过终点站的公交线路.查询公交站在线路中的索引 (终点公交站编号))
                加入成员 (全连通线路数组, 某连通线路)
                相加 (某经过起点站的公交线路.取公交线路号 (), “->”, 某经过终点站的公交线路.取公交线路号 ()).加入项目 ()
                赋值 (已找到转车线路, 真)
                赋值 (是否跳出循环, 真)
                跳出循环 () ' 跳出计次循环
            .如果真结束
            
        .计次循环尾 ()
        .如果真 (是否跳出循环)
            跳出循环 () ' 跳出判断循环
        .如果真结束
        赋值 (临时数值, 相减 (临时数值, 1))
    .判断循环尾 ()
    .如果真 (是否跳出循环)
        到循环尾 () ' 不再往另一个方向搜索，开始判断经过起始站点的下一个公交线路
    .如果真结束
    
     ' 如果往起点站方向未找到
    赋值 (临时数值, 相加 (起始索引, 1))
    .判断循环首 (小于或等于 (临时数值, 某经过起点站的公交线路.取总公交站数 ()))
        赋值 (某公交站编号, 某经过起点站的公交线路.取公交站编号 (临时数值))
        .计次循环首 (取数组成员数 (经过终点站的线路数组), 计次二)
            处理事件 ()
            赋值 (某经过终点站的公交线路, 经过终点站的线路数组 [计次二])
            .如果真 (某经过终点站的公交线路.是否经过某公交站 (某公交站编号))
                 ' 找到转车线路一个
                某连通线路.重置 ()
                某连通线路.置公交线路一 (某经过起点站的公交线路)
                某连通线路.置线路一起止索引 (起始索引, 临时数值)
                某连通线路.置公交线路二 (某经过终点站的公交线路)
                 ' 某连通线路.置线路二起止索引 (t, 某经过终点站的公交线路.查询公交站在线路中的索引 (某公交站编号))
                某连通线路.置线路二起止索引 (某经过终点站的公交线路.查询公交站在线路中的索引 (某公交站编号), 某经过终点站的公交线路.查询公交站在线路中的索引 (终点公交站编号))
                加入成员 (全连通线路数组, 某连通线路)
                相加 (某经过起点站的公交线路.取公交线路号 (), “->”, 某经过终点站的公交线路.取公交线路号 ()).加入项目 ()
                赋值 (已找到转车线路, 真)
                赋值 (是否跳出循环, 真)
                跳出循环 () ' 计次循环
            .如果真结束
            
        .计次循环尾 ()
        .如果真 (是否跳出循环)
            跳出循环 () ' 判断循环
        .如果真结束
        赋值 (临时数值, 相加 (临时数值, 1))
    .判断循环尾 ()
    
.计次循环尾 ()
.如果 (已找到转车线路)
    0.置文本 (相加 (“已找到”, 到文本 (取项目数 ()), “条转车线路。”))
    返回 ()
.否则
    信息框 (“对不起，未找到合适的行车线路。”, #信息图标, #程序标题)
.如果结束


.子程序 根据公交站名取公交站编号, 整数型, , 如果找不到，则返回-1
.参数 参文本, 文本型, , 公交站名，或首拼

.局部变量 是首拼, 逻辑型, , , 
.局部变量 文本数据, 字节集, , , 
.局部变量 计次, 空白型, , , 

赋值 (是首拼, 真)
赋值 (文本数据, 到字节集 (参文本))
.计次循环首 (取字节集长度 (文本数据), 计次)
    .如果真 (大于 (文本数据 [计次], 127))
        赋值 (是首拼, 假)
        跳出循环 ()
    .如果真结束
    
.计次循环尾 ()

.计次循环首 (取数组成员数 (全公交站数组), 计次)
    处理事件 ()
    .如果 (是首拼)
        .如果真 (等于 (取文本首拼 (全公交站数组.取名称 ( [计次])), 参文本))
            返回 (计次)
        .如果真结束
        
    .否则
        .如果真 (等于 (全公交站数组.取名称 ( [计次]), 参文本))
            返回 (计次)
        .如果真结束
        
    .如果结束
    
.计次循环尾 ()
返回 (-1)

.子程序 _列表框搜寻到的公交线路_列表项被选择, 空白型, , 
赋值 (.内容, 全连通线路数组.取详细信息 ( [相加 (.现行选中项, 1)]))

 ' 缩放到视图 (全当前视图)


.子程序 _按钮应用配置_被单击, 空白型, , 
写配置文件 (#配置文件名)
缩放到视图 (全当前视图)


.子程序 _退出_被选择, 空白型, , 
结束 ()


.子程序 _保存当前视图为图片_被选择, 空白型, , 
.如果真 (打开 ())
    .如果 (写到文件 (.文件名, 快照 (取窗口句柄 (), , )))
        信息框 (“保存图片成功。”, 0, #程序标题)
    .否则
        信息框 (“保存图片失败。”, #错误图标, #程序标题)
    .如果结束
    
.如果真结束


.子程序 _打印当前视图_被选择, 空白型, , 
.局部变量 图片号, 整数型, , , 
.局部变量 打印宽度, 整数型, , , 
.局部变量 打印高度, 整数型, , , 
.局部变量 图片长宽比, 双精度小数型, , , 
.局部变量 打印机长宽比, 双精度小数型, , , 

 ' 先将图片截取下来，以免将打印对话框也截取
赋值 (图片号, 载入图片 (快照 (取窗口句柄 (), , )))
.如果真 (取反 (.开始打印 ()))
    卸载图片 (图片号)
    信息框 (“打印被取消或打印出错。”, #错误图标, #程序标题)
    返回 ()
.如果真结束

赋值 (图片长宽比, 相除 (.宽度, .高度))
赋值 (打印机长宽比, 相除 (.打印区宽度, .打印区高度))
.如果 (大于 (图片长宽比, 打印机长宽比))
    赋值 (打印宽度, .打印区宽度)
    赋值 (打印高度, 相除 (.打印区宽度, 图片长宽比))
.否则
    赋值 (打印高度, .打印区高度)
    赋值 (打印宽度, 相乘 (.打印区高度, 图片长宽比))
.如果结束

图片号.画图片 (0, 0, 打印宽度, 打印高度, )
结束打印 ()
卸载图片 (图片号)


.子程序 _显示全部_被选择, 空白型, , 
显示全部 ()


.子程序 _放大_被选择, 空白型, , 
放大视图 ()


.子程序 _缩小_被选择, 空白型, , 
缩小视图 ()


.子程序 _选择对象_被选择, 空白型, , 
_主工具条_被单击 (#工具条按钮_选择对象)


.子程序 _平移视图_被选择, 空白型, , 
_主工具条_被单击 (#工具条按钮_平移)


.子程序 _区域放大_被选择, 空白型, , 
_主工具条_被单击 (#工具条按钮_区域放大)


.子程序 置模式菜单项状态, 空白型, , 
.判断开始 (等于 (全工作模式, #模式_选择对象))
    赋值 (.选中, 真)
    赋值 (.选中, 假)
    赋值 (.选中, 假)
.判断 (等于 (全工作模式, #模式_平移视图))
    赋值 (.选中, 假)
    赋值 (.选中, 真)
    赋值 (.选中, 假)
.判断 (等于 (全工作模式, #模式_区域缩放))
    赋值 (.选中, 假)
    赋值 (.选中, 假)
    赋值 (.选中, 真)
.默认
    
.判断结束


.子程序 _导航器_被选择, 空白型, , 
赋值 (.选中, 取反 (.选中))
.如果 (.选中)
    载入 (窗口导航, 主窗口, 假)
.否则
    .如果真 (是否已创建 (窗口导航))
        窗口导航.销毁 ()
    .如果真结束
    
.如果结束


.子程序 _单选框定位起始站_被单击, 空白型, , 
.如果 (.选中)
    赋值 (全上一次工作模式, 全工作模式)
    赋值 (全工作模式, #模式_定起始站点)
    置光标 ()
.否则
    赋值 (全工作模式, 全上一次工作模式)
    置光标 ()
.如果结束


.子程序 _单选框定位终止站_被单击, 空白型, , 
.如果 (.选中)
    赋值 (全上一次工作模式, 全工作模式)
    赋值 (全工作模式, #模式_定终止站点)
    置光标 ()
.否则
    赋值 (全工作模式, 全上一次工作模式)
    置光标 ()
.如果结束


.子程序 置光标, 空白型, , 
.判断开始 (等于 (全工作模式, #模式_选择对象))
    置窗口光标从字节集 (取窗口句柄 (), #光标_箭头)
.判断 (等于 (全工作模式, #模式_平移视图))
    置窗口光标从字节集 (取窗口句柄 (), #光标_手)
.判断 (等于 (全工作模式, #模式_区域缩放))
    置窗口光标从字节集 (取窗口句柄 (), #光标_区域放大)
.判断 (等于 (全工作模式, #模式_定起始站点))
    置窗口光标从字节集 (取窗口句柄 (), #光标_定位起始站)
.判断 (等于 (全工作模式, #模式_定终止站点))
    置窗口光标从字节集 (取窗口句柄 (), #光标_定位终点站)
.判断 (等于 (全工作模式, #模式_定位公交站坐标))
    置窗口光标从字节集 (取窗口句柄 (), #光标_定位公交站)
.默认
    
.判断结束


.子程序 寻找最近公交站, 整数型, , 寻找鼠标在地图上单击处的最近的公交站，返回公交站编号，没找到则返回-1
.参数 参横坐标, 整数型, , 
.参数 参纵坐标, 整数型, , 
.参数 参视图, 视图, , 
.参数 参阈值, 整数型, 可空, 只要找到一个公交站位于阈值之内，则不再继续查找，否则要全部搜索一遍

.局部变量 是否进行阈值判断, 逻辑型, , , 
.局部变量 计次, 空白型, , , 
.局部变量 某公交站, 公交站, , , 
.局部变量 实际横坐标, 空白型, , , x,y:实际坐标
.局部变量 实际纵坐标, 空白型, , , 
.局部变量 近似距离, 整数型, , , 横坐标差的绝对值和纵坐标差的绝对值的和
.局部变量 最小距离, 整数型, , , 
.局部变量 最小距离索引, 整数型, , , 

赋值 (是否进行阈值判断, 取反 (是否为空 (参阈值)))
赋值 (实际横坐标, 相除 (相加 (参横坐标, 全当前视图.横坐标), 全当前视图.缩放比例))
赋值 (实际纵坐标, 相除 (相加 (参纵坐标, 全当前视图.纵坐标), 全当前视图.缩放比例))
赋值 (最小距离, #原始宽度)
赋值 (最小距离索引, -1)

0.置文本 (“正在搜索最近的公交站，请稍候……”)
置等待鼠标 ()
.计次循环首 (取数组成员数 (全公交站数组), 计次)
    处理事件 ()
    赋值 (近似距离, 相加 (取绝对值 (相减 (全公交站数组.取横坐标 ( [计次]), 实际横坐标)), 取绝对值 (相减 (全公交站数组.取纵坐标 ( [计次]), 实际纵坐标))))
    .如果 (是否进行阈值判断)
        .如果真 (小于或等于 (近似距离, 参阈值))
            返回 (计次)
        .如果真结束
        
    .否则
        .如果真 (小于 (近似距离, 最小距离))
            赋值 (最小距离, 近似距离)
            赋值 (最小距离索引, 计次)
        .如果真结束
        
    .如果结束
    
.计次循环尾 ()
恢复鼠标 ()
0.置文本 (“已就绪。”)
返回 (最小距离索引)


.子程序 _组合框起点站牌_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

窗口提示.置提示 (“    可以输入站名的首字母，比如　[106街坊] 可以输入[106jf]，[才胜街]可以输入[csj]。”, 取窗口句柄 ())
 ' 组合框起点站牌.获取焦点 ()


.子程序 _组合框终点站牌_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

窗口提示.置提示 (“    可以输入站名的首字母，比如　[106街坊] 可以输入[106jf]，[才胜街]可以输入[csj]。”, 取窗口句柄 ())
 ' 组合框终点站牌.获取焦点 ()


.子程序 _主窗口_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (窗口提示.)
    赋值 (窗口提示., 假)
.如果真结束


.子程序 _新选择夹_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (窗口提示.)
    赋值 (窗口提示., -1)
    赋值 (窗口提示., 假)
.如果真结束


.子程序 _单选框定位起始站_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

窗口提示.置提示 (“    按下该按钮后在地图上点击以定位最近的公交站。”, 取窗口句柄 ())
 ' 单选框定位起始站.获取焦点 ()


.子程序 _单选框定位终止站_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

窗口提示.置提示 (“    按下该按钮后在地图上点击以定位最近的公交站。”, 取窗口句柄 ())
 ' 单选框定位终止站.获取焦点 ()


.子程序 输出信息, 空白型, , 向信息窗口输出信息
.参数 参信息, 文本型, , 

.如果 (是否已创建 (窗口输出))
    .如果真 (大于 (取文本长度 (窗口输出..内容), 相乘 (1024, 1024)))
        窗口输出.清空信息 ()
    .如果真结束
    赋值 (窗口输出..内容, 相加 (窗口输出..内容, 参信息))
    窗口输出.发送信息 (., #EM_LINESCROLL, 0, 1000)
     ' FlashWindow (窗口输出.取窗口句柄 (), 假)
.否则
    载入 (窗口输出, 主窗口, 假)
    赋值 (窗口输出..内容, 参信息)
.如果结束


.子程序 _列表框搜寻到的公交线路_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

窗口提示.置提示 (“　　单击项目以查看详细信息，双击项目在地图中绘制行车线路。”, 取窗口句柄 ())


.子程序 _组合框搜索类型_列表项被选择, 空白型, , 
.局部变量 选中内容, 文本型, , , 
.局部变量 计次, 整数型, , , 

赋值 (选中内容, .内容)
清空 ()

.判断开始 (等于 (选中内容, “公交站”))
    清空 ()
    .计次循环首 (取数组成员数 (全公交站数组), 计次)
        全公交站数组.取名称 ( [计次]).加入项目 ()
    .计次循环尾 ()
.判断 (等于 (选中内容, “公交线路”))
    清空 ()
    .计次循环首 (取数组成员数 (全公交线路数组), 计次)
        全公交线路数组.取公交线路号 ( [计次]).加入项目 ()
    .计次循环尾 ()
.判断 (等于 (选中内容, “道路”))
    清空 ()
.判断 (等于 (选中内容, “公司、企业”))
    清空 ()
.判断 (等于 (选中内容, “学校”))
    清空 ()
.判断 (等于 (选中内容, “医院”))
    清空 ()
.判断 (等于 (选中内容, “商场”))
    清空 ()
.判断 (等于 (选中内容, “政府部门”))
    清空 ()
.默认
    
.判断结束


.子程序 _组合框搜索关键字_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

窗口提示.置提示 (“　　请输入关键字或在列表中选择，关键字可以使用拼音首字母，比如[街道口前站]可以输入[jdkqz]”, 取窗口句柄 ())


.子程序 _列表框搜索结果_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

窗口提示.置提示 (“　　单击项目以查看该项的详细信息，双击项目以在地图中绘制或缩放到该项目。”, 取窗口句柄 ())


.子程序 _组合框搜索类型_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

窗口提示.置提示 (“　　选择要搜索的类别。”, 取窗口句柄 ())


.子程序 _列表框视图_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

窗口提示.置提示 (“　　双击项目以跳转到该视图。”, 取窗口句柄 ())

.子程序 _按钮搜索_被单击, 空白型, , 
.局部变量 选中内容, 文本型, , , 
.局部变量 计次, 整数型, , , 
.局部变量 关键字, 文本型, , , 

赋值 (选中内容, .内容)
赋值 (关键字, .内容)
清空 ()
.判断开始 (等于 (选中内容, “公交站”))
    .如果 (是否为首拼 (关键字))
        .计次循环首 (取数组成员数 (全公交站数组), 计次)
            .如果真 (大于或等于 (寻找文本 (取文本首拼 (全公交站数组.取名称 ( [计次])), 关键字, , 真), 1))
                全公交站数组.取名称 ( [计次]).加入项目 (计次)
                处理事件 ()
            .如果真结束
            
        .计次循环尾 ()
    .否则
        .计次循环首 (取数组成员数 (全公交站数组), 计次)
            .如果真 (大于或等于 (寻找文本 (全公交站数组.取名称 ( [计次]), 关键字, , 真), 1))
                全公交站数组.取名称 ( [计次]).加入项目 (计次)
                处理事件 ()
            .如果真结束
            
        .计次循环尾 ()
    .如果结束
    
.判断 (等于 (选中内容, “公交线路”))
    .计次循环首 (取数组成员数 (全公交线路数组), 计次)
        .如果真 (大于或等于 (寻找文本 (全公交线路数组.取公交线路号 ( [计次]), 关键字, , 真), 1))
            全公交线路数组.取公交线路号 ( [计次]).加入项目 (计次)
            处理事件 ()
        .如果真结束
        
    .计次循环尾 ()
.判断 (等于 (选中内容, “道路”))
    
.判断 (等于 (选中内容, “公司、企业”))
    
.判断 (等于 (选中内容, “学校”))
    
.判断 (等于 (选中内容, “医院”))
    
.判断 (等于 (选中内容, “商场”))
    
.判断 (等于 (选中内容, “政府部门”))
    
.默认
    
.判断结束


.子程序 _列表框搜索结果_列表项被选择, 空白型, , 
.局部变量 选中内容, 文本型, , , 
.局部变量 数组索引, 整数型, , , 
.局部变量 关键字, 文本型, , , 
.局部变量 描述文本, 文本型, , , 可能为html型，便于以后扩展
.局部变量 文件名, 文本型, , , 

赋值 (选中内容, .内容)
赋值 (关键字, .内容)
赋值 (文件名, 相加 (全临时文件名, “.htm”))
删除文件 (文件名)

.判断开始 (等于 (选中内容, “公交站”))
    赋值 (数组索引, .取项目数值 (.现行选中项))
    赋值 (描述文本, 相加 (.取项目文本 (.现行选中项), “<br>”))
    赋值 (描述文本, 相加 (描述文本, “经过该公交站的线路有：”, “<br>”))
    赋值 (描述文本, 相加 (描述文本, 经过公交站的线路 (数组索引)))
    写到文件 (文件名, 到字节集 (描述文本))
    赋值 (., 文件名)
    
.判断 (等于 (选中内容, “公交线路”))
    赋值 (数组索引, .取项目数值 (.现行选中项))
    赋值 (描述文本, 相加 (.取项目文本 (.现行选中项), “<br>”))
    赋值 (描述文本, 相加 (描述文本, “该公交线路经过以下公交站：”, “<br>”))
    赋值 (描述文本, 相加 (描述文本, 全公交线路数组.取经过的公交站名 ( [数组索引])))
    写到文件 (文件名, 到字节集 (描述文本))
    赋值 (., 文件名)
    
.判断 (等于 (选中内容, “道路”))
    
.判断 (等于 (选中内容, “公司、企业”))
    
.判断 (等于 (选中内容, “学校”))
    
.判断 (等于 (选中内容, “医院”))
    
.判断 (等于 (选中内容, “商场”))
    
.判断 (等于 (选中内容, “政府部门”))
    
.默认
    
.判断结束


.子程序 经过公交站的线路, 文本型, , 
.参数 参公交站编号, 整数型, , 

.局部变量 结果, 文本型, , , 
.局部变量 计次, 整数型, , , 

.计次循环首 (取数组成员数 (全公交线路数组), 计次)
    .如果真 (全公交线路数组.是否经过某公交站 ( [计次], 参公交站编号))
        赋值 (结果, 相加 (结果, 全公交线路数组.取公交线路号 ( [计次]), #换行符))
    .如果真结束
    
.计次循环尾 ()
返回 (结果)


.子程序 _列表框搜索结果_双击选择, 空白型, , 
.局部变量 选中内容, 文本型, , , 
.局部变量 数组索引, 整数型, , , 
.局部变量 关键字, 文本型, , , 
.局部变量 描述文本, 文本型, , , 可能为html型，便于以后扩展
.局部变量 横坐标, 空白型, , , 
.局部变量 纵坐标, 空白型, , , 

赋值 (选中内容, .内容)
赋值 (关键字, .内容)

.判断开始 (等于 (选中内容, “公交站”))
    赋值 (数组索引, .取项目数值 (.现行选中项))
    缩放到公交站 (数组索引)
    
.判断 (等于 (选中内容, “公交线路”))
    赋值 (数组索引, .取项目数值 (.现行选中项))
     ' 缩放到公交线路 (数组索引)
    缩放到矩形 (全公交线路数组.取边界矩形 ( [数组索引]))
.判断 (等于 (选中内容, “道路”))
    
.判断 (等于 (选中内容, “公司、企业”))
    
.判断 (等于 (选中内容, “学校”))
    
.判断 (等于 (选中内容, “医院”))
    
.判断 (等于 (选中内容, “商场”))
    
.判断 (等于 (选中内容, “政府部门”))
    
.默认
    
.判断结束


.子程序 缩放到公交站, 空白型, , 
.参数 参公交站编号, 整数型, , 

.局部变量 某矩形, 矩形, , , 
.局部变量 横坐标, 空白型, , , 
.局部变量 纵坐标, 空白型, , , 

赋值 (横坐标, 全公交站数组.取横坐标 ( [参公交站编号]))
赋值 (纵坐标, 全公交站数组.取纵坐标 ( [参公交站编号]))
.如果真 (或者 (小于或等于 (横坐标, 0), 小于或等于 (纵坐标, 0)))
    信息框 (“没有该公交站的坐标数据！”, #信息图标, #程序标题)
    返回 ()
.如果真结束

缩放到矩形 (全公交站数组.取边界矩形 ( [参公交站编号]))
赋值 (.画笔颜色, #红色)
赋值 (横坐标, 相减 (相乘 (横坐标, 全当前视图.缩放比例), 全当前视图.横坐标, 30))
赋值 (纵坐标, 相减 (相乘 (纵坐标, 全当前视图.缩放比例), 全当前视图.纵坐标, 30))

横坐标.画椭圆 (纵坐标, 相加 (横坐标, 60), 相加 (纵坐标, 60))


.子程序 _新选择夹_子夹被改变, 空白型, , 
.判断开始 (等于 (., 0))
    赋值 (.现行选中项, -1)
.判断 (等于 (., 1))
    赋值 (.现行选中项, -1)
.默认
    
.判断结束


.子程序 _组合框搜索关键字_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (等于 (键代码, #回车键))
    _按钮搜索_被单击 ()
.如果真结束


.子程序 _组合框终点站牌_放开某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (等于 (键代码, #回车键))
    _按钮搜寻行车线路_被单击 ()
.如果真结束


.子程序 _列表框搜寻到的公交线路_双击选择, 空白型, , 
缩放到矩形 (全连通线路数组.取边界矩形 ( [相加 (.现行选中项, 1)]))


.子程序 _编辑框视图名称_放开某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (等于 (键代码, #回车键))
    _按钮重命名视图_被单击 ()
.如果真结束


.子程序 _内容_被选择, 空白型, , 
运行 (相加 (“hh.exe ”, 取运行目录 (), “\help\help.chm”), 假, )


.子程序 _维护数据库_被选择, 空白型, , 
载入 (窗口数据库维护, 主窗口, 假)


.类模块 图层, , , 每个图层包含同类的地图元素，比如公路、医院、公交站、学校等

.程序集变量 私图元数组, 交通图元, , "0", 
.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 追加图元, 空白型, , 
.参数 参图元, 交通图元, , 

加入成员 (私图元数组, 参图元)


.子程序 删除图元, 空白型, , 
.参数 参索引, 整数型, , 

删除成员 (私图元数组, 参索引, )


.子程序 取图元, 交通图元, 公开, 
.参数 参序号, 整数型, , 

返回 (私图元数组 [参序号])

.子程序 绘制到内存位图, 空白型, 公开, 
.参数 参内存位图, 内存位图, , 
.参数 参缩放比例, 双精度小数型, , 

.局部变量 某交通图元, 交通图元, , , 
.局部变量 计次, 空白型, , , 

.计次循环首 (取数组成员数 (私图元数组), 计次)
    赋值 (某交通图元, 私图元数组 [计次])
    某交通图元.绘制到内存位图 (参内存位图, 参缩放比例)
.计次循环尾 ()

.类模块 视图历史, , , 

.程序集变量 私视图数组, 视图, , "0", 
.程序集变量 私当前视图索引, 整数型, , , 
.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用
 ' 私当前视图索引 ＝ 1

.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 追加视图, 空白型, 公开, 
.参数 参视图, 视图, , 

加入成员 (私视图数组, 参视图)
赋值 (私当前视图索引, 取数组成员数 (私视图数组))


.子程序 清除视图历史, 空白型, 公开, 
重定义数组 (私视图数组, 假, 0)
赋值 (私当前视图索引, 1)


.子程序 删除当前视图, 空白型, 公开, 
删除成员 (私视图数组, 私当前视图索引, )
.如果真 (大于 (私当前视图索引, 取数组成员数 (私视图数组)))
    赋值 (私当前视图索引, 取数组成员数 (私视图数组))
.如果真结束


.子程序 上一视图, 视图, 公开, 
.局部变量 某视图, 视图, , , 

.如果真 (等于 (取数组成员数 (私视图数组), 0))
    赋值 (某视图.横坐标, 0)
    赋值 (某视图.纵坐标, 0)
    赋值 (某视图.缩放比例, 1)
    返回 (某视图)
.如果真结束
赋值 (私当前视图索引, 相减 (私当前视图索引, 1))
.如果真 (小于 (私当前视图索引, 1))
    赋值 (私当前视图索引, 1)
.如果真结束

返回 (私视图数组 [私当前视图索引])


.子程序 下一视图, 视图, 公开, 
.局部变量 某视图, 视图, , , 

.如果真 (等于 (取数组成员数 (私视图数组), 0))
    赋值 (某视图.横坐标, 0)
    赋值 (某视图.纵坐标, 0)
    赋值 (某视图.缩放比例, 1)
    返回 (某视图)
.如果真结束
赋值 (私当前视图索引, 相加 (私当前视图索引, 1))
.如果真 (大于 (私当前视图索引, 取数组成员数 (私视图数组)))
    赋值 (私当前视图索引, 取数组成员数 (私视图数组))
.如果真结束
返回 (私视图数组 [私当前视图索引])


.子程序 跳到视图, 视图, 公开, 
.参数 参索引, 整数型, , 

赋值 (私当前视图索引, 参索引)
 ' 输出调试文本 (到文本 (私当前视图索引))
返回 (私视图数组 [私当前视图索引])


.子程序 是否有上一视图, 逻辑型, 公开, 
.如果真 (大于 (私当前视图索引, 1))
    返回 (真)
.如果真结束
返回 (假)

.子程序 是否有下一视图, 逻辑型, 公开, 
.如果真 (小于 (私当前视图索引, 取数组成员数 (私视图数组)))
    返回 (真)
.如果真结束
返回 (假)

.子程序 是否可删除视图, 逻辑型, 公开, 
.如果真 (大于 (取数组成员数 (私视图数组), 1))
    返回 (真)
.如果真结束
返回 (假)

.子程序 取当前视图, 视图, 公开, 
.如果真 (或者 (小于或等于 (私当前视图索引, 0), 大于 (私当前视图索引, 取数组成员数 (私视图数组))))
    赋值 (私当前视图索引, 取数组成员数 (私视图数组))
.如果真结束
返回 (私视图数组 [私当前视图索引])


.子程序 显示于列表框, 空白型, 公开, 
.参数 参列表框, 列表框, , 

.局部变量 计次, 空白型, , , 
.局部变量 视图名, 文本型, , , 
.局部变量 某视图, 视图, , , 

参列表框.清空 ()
.计次循环首 (取数组成员数 (私视图数组), 计次)
    赋值 (某视图, 私视图数组 [计次])
    赋值 (视图名, 某视图.名字)
    .如果真 (等于 (视图名, “”))
        赋值 (视图名, “[未命名视图]”)
    .如果真结束
     ' 视图名 ＝ 视图名 ＋ “(” ＋ 到文本 (某视图.横坐标) ＋ “,” ＋ 到文本 (某视图.纵坐标) ＋ “,” ＋ 到文本 (某视图.缩放比例) ＋ “)”
    参列表框.加入项目 (视图名, )
    处理事件 ()
.计次循环尾 ()

.子程序 置视图名称, 空白型, 公开, 
.参数 参索引, 整数型, , 
.参数 参名称, 文本型, , 

赋值 (私视图数组 [参索引], 名字, 参名称)


.子程序 取视图名称, 文本型, 公开, 
.参数 参索引, 整数型, , 

返回 (私视图数组 [参索引], 名字)


.子程序 取当前索引, 整数型, 公开, 用于同步视图列表框
返回 (私当前视图索引)


.子程序 取视图总数, 整数型, 公开, 
返回 (取数组成员数 (私视图数组))


.子程序 取视图, 视图, 公开, 
.参数 参索引, 整数型, , 

.如果真 (或者 (小于或等于 (参索引, 0), 大于 (参索引, 取数组成员数 (私视图数组))))
    赋值 (参索引, 1)
.如果真结束
返回 (私视图数组 [参索引])


.程序集 通用程序集, , , 

.子程序 置窗口光标从文件, 空白型, , 
.参数 参窗口句柄, 整数型, , 
.参数 参光标文件, 文本型, , 

.局部变量 光标句柄, 空白型, , , 

.如果真 (取反 (文件是否存在 (参光标文件)))
    输出调试文本 (“光标文件不存在。”)
    返回 ()
.如果真结束
赋值 (光标句柄, 从文件载入光标 (参光标文件))
设置窗口类属性 (参窗口句柄, #GCL_HCURSOR, 光标句柄)


.子程序 置窗口光标从字节集, 空白型, , 
.参数 参窗口句柄, 整数型, , 
.参数 参光标字节集, 字节集, , 

.局部变量 临时文件名, 文本型, , , 

赋值 (临时文件名, 取临时文件名 ())
写到文件 (临时文件名, 参光标字节集)
置窗口光标从文件 (参窗口句柄, 临时文件名)
删除文件 (临时文件名)


.子程序 取文本首拼, 文本型, , 
.参数 参文本, 文本型, , 

.局部变量 数据, 字节集, , , 
.局部变量 计次, 空白型, , , 
.局部变量 结果文本, 文本型, , , 

赋值 (数据, 到字节集 (参文本))
赋值 (计次, 1)
.判断循环首 (小于或等于 (计次, 取字节集长度 (数据)))
    .如果 (大于 (数据 [计次], 127))
        赋值 (结果文本, 相加 (结果文本, 取文本左边 (取声母 (取文本中间 (参文本, 计次, 2), 1), 1)))
        赋值 (计次, 相加 (计次, 2))
    .否则
        赋值 (结果文本, 相加 (结果文本, 字符 (数据 [计次])))
        赋值 (计次, 相加 (计次, 1))
    .如果结束
    
.判断循环尾 ()
返回 (结果文本)

.子程序 是否为首拼, 逻辑型, 公开, 
.参数 参文本, 文本型, , 

.局部变量 数据, 字节集, , , 
.局部变量 计次, 空白型, , , 

赋值 (数据, 到字节集 (参文本))
.计次循环首 (取字节集长度 (数据), 计次)
    .如果真 (大于 (数据 [计次], 127))
        返回 (假)
    .如果真结束
    
.计次循环尾 ()
返回 (真)



.子程序 滚动超级列表框到指定行, 空白型, , 
.参数 某超级列表框, 超级列表框, , 
.参数 参行高, 整数型, , 
.参数 参行数, 整数型, , 

.局部变量 顶端可见项, 整数型, , , 

赋值 (顶端可见项, 某超级列表框.发送信息 (4135, 0, 0))
某超级列表框.发送信息 (4116, 0, 相乘 (相减 (参行数, 顶端可见项), 参行高))

.类模块 公交线路, , , 本类用来描述公交线路

.程序集变量 私公交线路号, 文本型, , , 有（电）（环）等描述，所以用文本型
.程序集变量 私数字化线路文本, 文本型, , , 线路的文本描述格式，便于编程 6,889,890,621,431,925,266,928,1008,251,
.程序集变量 私经过的公交站数组, 整数型, , "0", 公交站索引数组
.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 从数字字符串创建, 空白型, 公开, 类似于这样格式的字符串:6,889,890,621,431,925,266,928,1008,251,
.参数 参数字化的线路文本, 文本型, , 

.局部变量 文本数组, 文本型, , "0", 
.局部变量 计次, 空白型, , , 

重定义数组 (私经过的公交站数组, 假, 0)

.如果真 (等于 (参数字化的线路文本, “”))
    返回 ()
.如果真结束
赋值 (私数字化线路文本, 参数字化的线路文本)
赋值 (文本数组, 分割文本 (参数字化的线路文本, “,”, ))
赋值 (私公交线路号, 文本数组 [1])
.计次循环首 (取数组成员数 (文本数组), 计次)
    .如果真 (等于 (计次, 1))
        到循环尾 ()
    .如果真结束
    加入成员 (私经过的公交站数组, 到数值 (文本数组 [计次]))
.计次循环尾 ()

.子程序 取经过的公交站名, 文本型, 公开, 返回所有经过的公交站名
.局部变量 结果, 文本型, , , 
.局部变量 计次, 空白型, , , 

赋值 (结果, 相加 (私公交线路号, “,”))
.计次循环首 (取数组成员数 (私经过的公交站数组), 计次)
    .如果真 (等于 (私经过的公交站数组 [计次], 0))
         ' 到循环尾 ()
    .如果真结束
    赋值 (结果, 相加 (结果, 全公交站数组.取名称 ( [私经过的公交站数组] [计次]), “,”))
.计次循环尾 ()
赋值 (结果, 取文本左边 (结果, 相减 (取文本长度 (结果), 1)))
返回 (结果)


.子程序 取数字化的线路文本, 文本型, , 
返回 (私数字化线路文本)


.子程序 取公交线路号, 文本型, , 
返回 (私公交线路号)


.子程序 是否经过某公交站, 逻辑型, 公开, 
.参数 参公交站编号, 整数型, , 

.局部变量 计次, 空白型, , , 
.局部变量 临时文本, 文本型, , , 

.计次循环首 (取数组成员数 (私经过的公交站数组), 计次)
    .如果真 (等于 (参公交站编号, 私经过的公交站数组 [计次]))
        返回 (真)
    .如果真结束
    
.计次循环尾 ()
返回 (假)

.子程序 绘制到内存位图, 空白型, 公开, 绘制公交线路的某一段到内存位图
.参数 参内存位图, 内存位图, , 
.参数 参起始索引, 整数型, 可空, 
.参数 参终止索引, 整数型, 可空, 
.参数 参颜色, 整数型, 可空, 
.参数 参缩放比例, 双精度小数型, 可空, 

.局部变量 横纵数组, 整数型, , "0", 
.局部变量 计次, 空白型, , , 
.局部变量 某公交站, 公交站, , , 
.局部变量 某某公交站, 公交站, , , 
.局部变量 临时数值, 整数型, , , 
.局部变量 横坐标, 空白型, , , 
.局部变量 纵坐标, 空白型, , , 
.局部变量 站后缀, 文本型, , , 可能为前站、后站、西站、东站、中站等
.局部变量 站名, 文本型, , , 去掉后缀后的站名


.如果真 (是否为空 (参起始索引))
    赋值 (参起始索引, 1)
.如果真结束
.如果真 (是否为空 (参终止索引))
    赋值 (参终止索引, 取数组成员数 (私经过的公交站数组))
.如果真结束
.如果真 (是否为空 (参颜色))
    赋值 (参颜色, #红色)
.如果真结束

.如果真 (大于 (参起始索引, 参终止索引))
    赋值 (临时数值, 参起始索引)
    赋值 (参起始索引, 参终止索引)
    赋值 (参终止索引, 临时数值)
.如果真结束

参内存位图.置画笔属性 (#PS_SOLID, 2, 参颜色, , )
赋值 (计次, 参起始索引)
.判断循环首 (小于或等于 (计次, 参终止索引))
    赋值 (某公交站, 全公交站数组 [私经过的公交站数组] [计次])
    赋值 (横坐标, 某公交站.取横坐标 ())
    赋值 (纵坐标, 某公交站.取纵坐标 ())
    .如果 (或者 (等于 (横坐标, 0), 等于 (纵坐标, 0)))
        赋值 (站后缀, 取文本右边 (某公交站.取名称 (), 4))
        .如果 (或者 (等于 (站后缀, “前站”), 等于 (站后缀, “后站”), 等于 (站后缀, “东站”), 等于 (站后缀, “西站”), 等于 (站后缀, “东站”)))
            赋值 (站名, 取文本左边 (某公交站.取名称 (), 相减 (取文本长度 (某公交站.取名称 ()), 4)))
            赋值 (临时数值, 根据公交站名取公交站编号 (站名))
            .如果真 (小于 (临时数值, 1))
                输出信息 (相加 (“找不到公交站　[”, 某公交站.取名称 (), “]　的坐标数据，已跳过。”, #换行符))
                赋值 (计次, 相加 (计次, 1))
                到循环尾 ()
            .如果真结束
            赋值 (某某公交站, 全公交站数组 [临时数值])
            赋值 (横坐标, 某某公交站.取横坐标 ())
            赋值 (纵坐标, 某某公交站.取纵坐标 ())
            .如果 (或者 (等于 (横坐标, 0), 等于 (纵坐标, 0)))
                输出信息 (相加 (“找不到公交站　[”, 某公交站.取名称 (), “]　的坐标数据，已跳过。”, #换行符))
            .否则
                加入成员 (横纵数组, 相乘 (横坐标, 参缩放比例))
                加入成员 (横纵数组, 相乘 (纵坐标, 参缩放比例))
                输出信息 (相加 (“找不到公交站　[”, 某公交站.取名称 (), “]　的坐标数据，已用公交站 [”, 某某公交站.取名称 (), “] 的坐标数据替换。”, #换行符))
            .如果结束
            
        .否则
            输出信息 (相加 (“找不到公交站　[”, 某公交站.取名称 (), “]　的坐标数据，已跳过。”, #换行符))
        .如果结束
        
    .否则
        加入成员 (横纵数组, 相乘 (横坐标, 参缩放比例))
        加入成员 (横纵数组, 相乘 (纵坐标, 参缩放比例))
    .如果结束
    赋值 (计次, 相加 (计次, 1))
.判断循环尾 ()
参内存位图.画多义线横纵数组 (横纵数组)


.子程序 查询公交站在线路中的索引, 整数型, 公开, 查询某公交站在此线路中的索引，如果找不到，则返回0
.参数 参公交站编号, 整数型, , 

.局部变量 计次, 空白型, , , 

.计次循环首 (取数组成员数 (私经过的公交站数组), 计次)
    .如果真 (等于 (参公交站编号, 私经过的公交站数组 [计次]))
        返回 (计次)
    .如果真结束
    
.计次循环尾 ()
返回 (0)

.子程序 取总公交站数, 整数型, 公开, 
返回 (取数组成员数 (私经过的公交站数组))


.子程序 取公交站编号, 整数型, 公开, 取指定索引的公交站编号
.参数 参公交站在本线路中的索引, 整数型, , 

.如果真 (小于 (参公交站在本线路中的索引, 1))
    赋值 (参公交站在本线路中的索引, 1)
.如果真结束
.如果真 (大于 (参公交站在本线路中的索引, 取数组成员数 (私经过的公交站数组)))
    赋值 (参公交站在本线路中的索引, 求余数 (参公交站在本线路中的索引, 取数组成员数 (私经过的公交站数组)))
.如果真结束

返回 (私经过的公交站数组 [参公交站在本线路中的索引])


.子程序 取边界矩形, 矩形, 公开, 计算边界矩形以便于缩放
.局部变量 某矩形, 矩形, , , 
.局部变量 匿名局部变量_2686, 公交线路, , , 
.局部变量 计次, 空白型, , , 
.局部变量 某公交站, 公交站, , , 
.局部变量 已设置初始值, 逻辑型, , , 

赋值 (已设置初始值, 假)
 ' 某公交线路 ＝ 全公交线路数组 [参公交线路索引]
.计次循环首 (取总公交站数 (), 计次)
    赋值 (某公交站, 全公交站数组 [取公交站编号 (计次)])
    .如果真 (并且 (大于 (某公交站.取横坐标 (), 0), 大于 (某公交站.取纵坐标 (), 0)))
        .如果 (已设置初始值)
            某矩形.被点修改 (某公交站.取横坐标 (), 某公交站.取纵坐标 ())
        .否则
             ' 设置初始值,防止第一个就没有坐标
            某矩形.设置 (某公交站.取横坐标 (), 某公交站.取纵坐标 (), 某公交站.取横坐标 (), 某公交站.取纵坐标 ())
            赋值 (已设置初始值, 真)
        .如果结束
        
    .如果真结束
    
.计次循环尾 ()
 ' 适当扩大矩形范围以方便查看
某矩形.设置 (相减 (某矩形.取横坐标 (), 100), 相减 (某矩形.取纵坐标 (), 100), 相加 (某矩形.取横坐标 (), 某矩形.取宽度 (), 200), 相加 (某矩形.取纵坐标 (), 某矩形.取高度 (), 200))
返回 (某矩形)


.类模块 连通线路, , , 用来描述连接两个公交站之间的连通公交线路，可能只需要一个线路，也可能要转车

.程序集变量 私公交线路一, 公交线路, , , 
.程序集变量 私公交线路二, 公交线路, , , 
.程序集变量 私线路一起始索引, 整数型, , , 
.程序集变量 私线路一终止索引, 整数型, , , 
.程序集变量 私线路二起始索引, 整数型, , , 
.程序集变量 私线路二终止索引, 整数型, , , 
.程序集变量 私是否转车, 逻辑型, , , 
.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用
赋值 (私是否转车, 假)

.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 重置, 空白型, 公开, 
赋值 (私是否转车, 假)
赋值 (私线路一起始索引, 0)
赋值 (私线路一终止索引, 0)
赋值 (私线路二起始索引, 0)
赋值 (私线路二终止索引, 0)

.子程序 绘制到内存位图, 空白型, 公开, 
.参数 参内存位图, 内存位图, , 
.参数 参缩放比例, 双精度小数型, , 

私公交线路一.绘制到内存位图 (参内存位图, 私线路一起始索引, 私线路一终止索引, , 参缩放比例)
.如果真 (私是否转车)
    私公交线路二.绘制到内存位图 (参内存位图, 私线路二起始索引, 私线路二终止索引, #绿色, 参缩放比例)
.如果真结束


.子程序 置公交线路一, 空白型, 公开, 
.参数 参公交线路, 公交线路, , 

赋值 (私公交线路一, 参公交线路)


.子程序 置公交线路二, 空白型, 公开, 
.参数 参公交线路, 公交线路, , 

赋值 (私公交线路二, 参公交线路)
赋值 (私是否转车, 真)


.子程序 置线路一起止索引, 空白型, 公开, 
.参数 参起始索引, 整数型, , 
.参数 参终止索引, 整数型, , 

.局部变量 临时数据, 整数型, , , 

 ' .如果真 (大于 (参起始索引, 参终止索引))
     ' 赋值 (临时数据, 参起始索引)
     ' 赋值 (参起始索引, 参终止索引)
     ' 赋值 (参终止索引, 临时数据)
 ' .如果真结束
赋值 (私线路一起始索引, 参起始索引)
赋值 (私线路一终止索引, 参终止索引)


.子程序 置线路二起止索引, 空白型, 公开, 
.参数 参起始索引, 整数型, , 
.参数 参终止索引, 整数型, , 

.局部变量 临时数据, 整数型, , , 

 ' .如果真 (大于 (参起始索引, 参终止索引))
     ' 赋值 (临时数据, 参起始索引)
     ' 赋值 (参起始索引, 参终止索引)
     ' 赋值 (参终止索引, 临时数据)
 ' .如果真结束
赋值 (私线路二起始索引, 参起始索引)
赋值 (私线路二终止索引, 参终止索引)


.子程序 校验索引, 空白型, , 
.局部变量 临时数值, 整数型, , , 

.如果真 (大于 (私线路一起始索引, 私线路一终止索引))
    赋值 (临时数值, 私线路一起始索引)
    赋值 (私线路一起始索引, 私线路一终止索引)
    赋值 (私线路一终止索引, 临时数值)
.如果真结束
.如果真 (大于 (私线路二起始索引, 私线路二终止索引))
    赋值 (临时数值, 私线路二起始索引)
    赋值 (私线路二起始索引, 私线路二终止索引)
    赋值 (私线路二终止索引, 临时数值)
.如果真结束


.子程序 是否要转车, 逻辑型, 公开, 
返回 (私是否转车)

.子程序 取详细信息, 文本型, 公开, 返回该连通线路的详细描述文本
.局部变量 结果文本, 文本型, , , 
.局部变量 计次, 空白型, , , 
.局部变量 临时数值, 整数型, , , 
.局部变量 线路一经过的站名, 文本型, , , 
.局部变量 线路二经过的站名, 文本型, , , 
.局部变量 经过的站数, 整数型, , , 

赋值 (临时数值, 私线路一起始索引)
.计次循环首 (相加 (取绝对值 (相减 (私线路一终止索引, 私线路一起始索引)), 1), )
    赋值 (线路一经过的站名, 相加 (线路一经过的站名, 全公交站数组.取名称 ( [私公交线路一.取公交站编号 (临时数值)]), “,”))
    .如果 (小于 (私线路一起始索引, 私线路一终止索引))
        赋值 (临时数值, 相加 (临时数值, 1))
    .否则
        赋值 (临时数值, 相减 (临时数值, 1))
    .如果结束
    
.计次循环尾 ()
赋值 (线路一经过的站名, 取文本左边 (线路一经过的站名, 相减 (取文本长度 (线路一经过的站名), 1)))

赋值 (经过的站数, 相加 (取绝对值 (相减 (私线路一起始索引, 私线路一终止索引)), 1))
.如果真 (私是否转车)
    赋值 (临时数值, 私线路二起始索引)
    .计次循环首 (相加 (取绝对值 (相减 (私线路二起始索引, 私线路二终止索引)), 1), )
        赋值 (线路二经过的站名, 相加 (线路二经过的站名, 全公交站数组.取名称 ( [私公交线路二.取公交站编号 (临时数值)]), “,”))
        .如果 (小于 (私线路二起始索引, 私线路二终止索引))
            赋值 (临时数值, 相加 (临时数值, 1))
        .否则
            赋值 (临时数值, 相减 (临时数值, 1))
        .如果结束
        
    .计次循环尾 ()
    赋值 (线路二经过的站名, 取文本左边 (线路二经过的站名, 相减 (取文本长度 (线路二经过的站名), 1)))
    赋值 (经过的站数, 相加 (经过的站数, 取绝对值 (相减 (私线路二起始索引, 私线路二终止索引))))
.如果真结束

.如果 (等于 (私是否转车, 假))
    赋值 (结果文本, 相加 (#换行符, “该乘车线路经过以下”, 到文本 (经过的站数), “个站点：”, #换行符, 线路一经过的站名, “。”, #换行符, #换行符))
    赋值 (结果文本, 相加 (结果文本, “乘车总距离约 ”, 到文本 (相乘 (相减 (经过的站数, 1), 0.3)), “ 千米。”, #换行符, #换行符))
    赋值 (结果文本, 相加 (结果文本, “平均耗时约 ”, 到文本 (相乘 (相减 (经过的站数, 1), 4)), “ 分钟。”))
.否则
    赋值 (结果文本, 相加 (#换行符, “先乘坐”, 私公交线路一.取公交线路号 (), “经过以下站点：”, #换行符, 线路一经过的站名, “。”, #换行符, #换行符))
    赋值 (结果文本, 相加 (结果文本, “再转乘”, 私公交线路二.取公交线路号 (), “经过以下站点：”, #换行符, 线路二经过的站名, “。”, #换行符, #换行符))
    赋值 (结果文本, 相加 (结果文本, “总共经过”, 到文本 (相加 (取绝对值 (相减 (私线路一起始索引, 私线路一终止索引)), 取绝对值 (相减 (私线路二起始索引, 私线路二终止索引)), 1)), “个公交站点。”, #换行符, #换行符))
    
    赋值 (结果文本, 相加 (结果文本, “乘车总距离约 ”, 到文本 (相乘 (相减 (经过的站数, 1), 0.3)), “ 千米。”, #换行符, #换行符))
    赋值 (结果文本, 相加 (结果文本, “平均耗时约 ”, 到文本 (相乘 (相减 (经过的站数, 1), 4)), “ 分钟。”))
    
.如果结束
返回 (结果文本)

.子程序 取边界矩形, 矩形, 公开, 计算连通线路的边界矩形以便于缩放
.局部变量 某矩形, 矩形, , , 
.局部变量 起始索引, 整数型, , , 
.局部变量 终止索引, 整数型, , , 
.局部变量 临时数值, 整数型, , , 
.局部变量 索引, 整数型, , , 
.局部变量 某公交站, 公交站, , , 
.局部变量 是否已初始化矩形, 逻辑型, , , 

赋值 (起始索引, 私线路一起始索引)
赋值 (终止索引, 私线路一终止索引)
赋值 (是否已初始化矩形, 假)
.如果真 (大于 (起始索引, 终止索引))
     ' 交换
    赋值 (临时数值, 起始索引)
    赋值 (起始索引, 终止索引)
    赋值 (终止索引, 临时数值)
.如果真结束
赋值 (索引, 起始索引)
.判断循环首 (小于或等于 (索引, 终止索引))
    赋值 (某公交站, 全公交站数组 [私公交线路一.取公交站编号 (索引)])
    .如果真 (并且 (大于 (某公交站.取横坐标 (), 0), 大于 (某公交站.取纵坐标 (), 0)))
        .如果 (等于 (是否已初始化矩形, 假))
            某矩形.设置 (某公交站.取横坐标 (), 某公交站.取纵坐标 (), 某公交站.取横坐标 (), 某公交站.取纵坐标 ())
            赋值 (是否已初始化矩形, 真)
        .否则
            某矩形.被点修改 (某公交站.取横坐标 (), 某公交站.取纵坐标 ())
        .如果结束
        
    .如果真结束
    赋值 (索引, 相加 (索引, 1))
.判断循环尾 ()

.如果真 (等于 (私是否转车, 假))
    某矩形.设置 (相减 (某矩形.取横坐标 (), 100), 相减 (某矩形.取纵坐标 (), 100), 相加 (某矩形.取横坐标 (), 某矩形.取宽度 (), 200), 相加 (某矩形.取纵坐标 (), 某矩形.取高度 (), 200))
    返回 (某矩形)
.如果真结束

赋值 (起始索引, 私线路二起始索引)
赋值 (终止索引, 私线路二终止索引)
.如果真 (大于 (起始索引, 终止索引))
     ' 交换
    赋值 (临时数值, 起始索引)
    赋值 (起始索引, 终止索引)
    赋值 (终止索引, 临时数值)
.如果真结束
赋值 (索引, 起始索引)
.判断循环首 (小于或等于 (索引, 终止索引))
    赋值 (某公交站, 全公交站数组 [私公交线路二.取公交站编号 (索引)])
    .如果真 (并且 (大于 (某公交站.取横坐标 (), 0), 大于 (某公交站.取纵坐标 (), 0)))
        .如果 (等于 (是否已初始化矩形, 假))
            某矩形.设置 (某公交站.取横坐标 (), 某公交站.取纵坐标 (), 某公交站.取横坐标 (), 某公交站.取纵坐标 ())
            赋值 (是否已初始化矩形, 真)
        .否则
            某矩形.被点修改 (某公交站.取横坐标 (), 某公交站.取纵坐标 ())
        .如果结束
        
    .如果真结束
    赋值 (索引, 相加 (索引, 1))
.判断循环尾 ()
某矩形.设置 (相减 (某矩形.取横坐标 (), 100), 相减 (某矩形.取纵坐标 (), 100), 相加 (某矩形.取横坐标 (), 某矩形.取宽度 (), 200), 相加 (某矩形.取纵坐标 (), 某矩形.取高度 (), 200))
返回 (某矩形)

.类模块 矩形, , , 

.程序集变量 私左上横, 整数型, , , 
.程序集变量 私左上纵, 整数型, , , 
.程序集变量 私右下横, 整数型, , , 
.程序集变量 私右下纵, 整数型, , , 
.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 设置, 空白型, 公开, 
.参数 参左上横, 整数型, , 
.参数 参左上纵, 整数型, , 
.参数 参右下横, 整数型, , 
.参数 参右下纵, 整数型, , 

赋值 (私左上横, 参左上横)
赋值 (私左上纵, 参左上纵)
赋值 (私右下横, 参右下横)
赋值 (私右下纵, 参右下纵)
校验矩形 ()

.子程序 校验矩形, 空白型, 公开, 校验矩形的正确性
.局部变量 临时数值, 整数型, , , 临时数值

.如果真 (大于 (私左上横, 私右下横))
    赋值 (临时数值, 私左上横)
    赋值 (私左上横, 私右下横)
    赋值 (私右下横, 临时数值)
.如果真结束
.如果真 (大于 (私左上纵, 私右下纵))
    赋值 (临时数值, 私左上纵)
    赋值 (私左上纵, 私右下纵)
    赋值 (私右下纵, 临时数值)
.如果真结束


.子程序 被点修改, 空白型, 公开, 当加入一个点时修改该矩形
.参数 参横坐标, 整数型, , 
.参数 参纵坐标, 整数型, , 

.如果真 (小于 (参横坐标, 私左上横))
    赋值 (私左上横, 参横坐标)
.如果真结束
.如果真 (大于 (参横坐标, 私右下横))
    赋值 (私右下横, 参横坐标)
.如果真结束
.如果真 (小于 (参纵坐标, 私左上纵))
    赋值 (私左上纵, 参纵坐标)
.如果真结束
.如果真 (大于 (参纵坐标, 私右下纵))
    赋值 (私右下纵, 参纵坐标)
.如果真结束


.子程序 转换为文本, 文本型, 公开, 
返回 (相加 (“[”, 到文本 (私左上横), “,”, 到文本 (私左上纵), “,”, 到文本 (私右下横), “,”, 到文本 (私右下纵), “]”))


.子程序 取宽度, 整数型, 公开, 
返回 (取绝对值 (相减 (私左上横, 私右下横)))


.子程序 取高度, 整数型, 公开, 
返回 (取绝对值 (相减 (私左上纵, 私右下纵)))


.子程序 取横坐标, 整数型, 公开, 
校验矩形 ()
返回 (私左上横)


.子程序 取纵坐标, 整数型, 公开, 
校验矩形 ()
返回 (私左上纵)


.子程序 取中点横坐标, 双精度小数型, 公开, 
返回 (相除 (相加 (私左上横, 私右下横), 2))


.子程序 取中点纵坐标, 双精度小数型, , 
返回 (相除 (相加 (私左上纵, 私右下纵), 2))


.窗口程序集 关于窗口程序集, , , 

.子程序 _窗口关于_创建完毕, 空白型, , 
赋值 (., #封面图片)


.子程序 _窗口关于_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

销毁 ()


.窗口程序集 导航窗口程序集, , , 

.程序集变量 左, 整数型, , , 
.程序集变量 上, 整数型, , , 
.程序集变量 右, 整数型, , , 
.程序集变量 下, 整数型, , , 
.程序集变量 导航图比例, 双精度小数型, , , 
.子程序 _窗口导航_创建完毕, 空白型, , 
 ' 窗口导航.宽度 ＝ 窗口导航.高度 × #原始长宽比
0.移动 (0, 窗口导航.取用户区宽度 (), 窗口导航.取用户区高度 ())
赋值 (.宽度, 相乘 (.高度, #原始长宽比))
赋值 (窗口导航., 相加 (.宽度, 5))

输出调试文本 (.宽度)
输出调试文本 (.高度)
赋值 (右, .宽度)
赋值 (下, .高度)
赋值 (导航图比例, 相除 (.宽度, #原始宽度))


.子程序 _窗口导航_将被销毁, 空白型, , 
赋值 (主窗口..选中, 假)


.子程序 _画板导航_绘画, 空白型, , 
.参数 重画区左边, 整数型, , 
.参数 重画区上边, 整数型, , 
.参数 重画区右边, 整数型, , 
.参数 重画区下边, 整数型, , 


赋值 (左, 相乘 (相除 (全当前视图.横坐标, 全当前视图.缩放比例), 导航图比例))
赋值 (上, 相乘 (相除 (全当前视图.纵坐标, 全当前视图.缩放比例), 导航图比例))
赋值 (右, 相乘 (相除 (相加 (全当前视图.横坐标, 主窗口..宽度), 全当前视图.缩放比例), 导航图比例))
赋值 (下, 相乘 (相除 (相加 (全当前视图.纵坐标, 主窗口..高度), 全当前视图.缩放比例), 导航图比例))
 ' 画板导航.清除 (, , , )
全导航内存位图.复制到画板 ()
左.画矩形 (上, 右, 下)


.窗口程序集 提示窗口程序集, , , 

.程序集变量 窗口句柄, 整数型, , , 
.子程序 _窗口提示_尺寸被改变, 空白型, , 
0.移动 (0, 取用户区宽度 (), 取用户区高度 ())


.子程序 _按钮关闭_被单击, 空白型, , 
赋值 (., 假)


.子程序 _窗口提示_创建完毕, 空白型, , 
赋值 (窗口句柄, 0)

.子程序 置提示, 空白型, 公开, 
.参数 参提示文本, 文本型, , 
.参数 参窗口句柄, 整数型, , 

.局部变量 文本长度, 整数型, , , 
.局部变量 窗口矩形, 矩形_, , , 

.如果真 (等于 (参窗口句柄, 窗口句柄))
    返回 ()
.如果真结束
.如果真 (主窗口..选中)
    返回 ()
.如果真结束
取窗口矩形_ (参窗口句柄, 窗口矩形)
赋值 (窗口提示., 相减 (窗口矩形.左边, 窗口提示., 10))
赋值 (窗口提示., 窗口矩形.顶边)
赋值 (文本长度, 取文本长度 (参提示文本))
赋值 (参提示文本, 相加 (#换行符, 参提示文本))
赋值 (窗口提示., 相乘 (相加 (相除 (文本长度, 28), 2), 13))
赋值 (.标题, 参提示文本)
赋值 (窗口提示., 真)
 ' 窗口提示.左边 ＝ 主窗口.左边 ＋ 主窗口.新选择夹.左边 － 窗口提示.宽度
 ' 窗口提示.顶边 ＝ 主窗口.顶边 ＋ 主窗口.新选择夹.顶边 ＋ 40
赋值 (窗口句柄, 参窗口句柄)

.子程序 隐藏, 空白型, 公开, 
赋值 (窗口句柄, -1)
赋值 (., 假)


.窗口程序集 输出窗口程序集, , , 

.子程序 _窗口输出_创建完毕, 空白型, , 
赋值 (., 主窗口.)
赋值 (., 相加 (“输出信息 - ”, #程序标题))


.子程序 清空信息, 空白型, 公开, 
赋值 (.内容, “”)


.子程序 _按钮清空信息_被单击, 空白型, , 
清空信息 ()


.子程序 _窗口输出_尺寸被改变, 空白型, , 
赋值 (.宽度, 取用户区宽度 ())
赋值 (.高度, 相减 (取用户区高度 (), .顶边))


.窗口程序集 窗口程序集维护数据库, , , 

.程序集变量 集公交站数据库被修改, 逻辑型, , , 
.程序集变量 集公交站已被增删, 逻辑型, , , 
.程序集变量 集公交站总数目, 整数型, , , 
.程序集变量 集无坐标的公交站数目, 整数型, , , 
.程序集变量 匿名程序集变量_2943, 空白型, , , 
.程序集变量 集公交线路数据库被修改, 逻辑型, , , 
.程序集变量 集总公交线路数目, 整数型, , , 
.子程序 _窗口数据库维护_创建完毕, 空白型, , 
.局部变量 计次, 空白型, , , 
.局部变量 文本, 文本型, , , 
.局部变量 文本数组, 文本型, , "0", 
.局部变量 图片索引, 整数型, , , 

赋值 (., 相加 (“数据库维护 - ”, #程序标题))
赋值 (集公交站数据库被修改, 假)
赋值 (集无坐标的公交站数目, 0)
置等待鼠标 ()
 ' 载入公交站数据
.计次循环首 (取数组成员数 (全公交站数组), 计次)
    赋值 (图片索引, 选择 (等于 (全公交站数组.取横坐标 ( [计次]), 0), 1, 0))
    .插入表项 (全公交站数组.取名称 ( [计次]), 图片索引, , , 计次)
    相减 (计次, 1).置标题 (1, 到文本 (全公交站数组.取横坐标 ( [计次])))
    相减 (计次, 1).置标题 (2, 到文本 (全公交站数组.取纵坐标 ( [计次])))
    .如果真 (或者 (等于 (全公交站数组.取横坐标 ( [计次]), 0), 等于 (全公交站数组.取纵坐标 ( [计次]), 0)))
        赋值 (集无坐标的公交站数目, 相加 (集无坐标的公交站数目, 1))
    .如果真结束
    
.计次循环尾 ()
处理事件 ()
 ' 载入公交线路数据
.计次循环首 (取数组成员数 (全公交线路数组), 计次)
    相加 (全公交线路数组.取经过的公交站名 ( [计次]), “,”).加入项目 (计次)
.计次循环尾 ()
赋值 (集总公交线路数目, 取项目数 ())
恢复鼠标 ()
赋值 (集公交站总数目, 取表项数 ())
置状态栏文本 ()

.子程序 _窗口数据库维护_尺寸被改变, 空白型, , 
窗口数据库维护.调整数据库维护窗口控件 ()


.子程序 调整数据库维护窗口控件, 空白型, , 
0.移动 (0, 取用户区宽度 (), 相减 (取用户区高度 (), .))
赋值 (.倾斜, 相减 (取用户区宽度 (), 10))
赋值 (.删除线, 相减 (取用户区高度 (), .加粗))
赋值 (.宽度, 相减 (取用户区宽度 (), 10))
赋值 (.高度, 相减 (取用户区高度 (), .顶边))


.子程序 _按钮搜索_被单击, 空白型, , 
.局部变量 计次, 空白型, , , 
.局部变量 已找到, 逻辑型, , , 

.如果真 (等于 (.内容, “”))
    赋值 (.内容, “请输入关键字，可以使用文本首拼。”)
    赋值 (.起始选择位置, 0)
    赋值 (.被选择字符数, 100)
    获取焦点 ()
    返回 ()
.如果真结束
.如果 (是否为首拼 (.内容))
    .计次循环首 (取表项数 (), 计次)
        .如果真 (等于 (寻找文本 (取文本首拼 (相减 (计次, 1).取标题 ()), .内容, , 真), 1))
            赋值 (.内容, 相减 (计次, 1).取标题 ())
            赋值 (., 相减 (计次, 1))
             ' 超级列表框公交站.发送信息 (#LVM_SCROLL, 0, -32768)  ' 先滚动到首行，再下滚指定的行数
             ' 超级列表框公交站.发送信息 (#LVM_SCROLL, 0, (i － 1) × 21)  ' 每个项目的高度是21
            滚动超级列表框到指定行 (21, 相减 (计次, 1))
            获取焦点 ()
            赋值 (已找到, 真)
            跳出循环 ()
        .如果真结束
        
    .计次循环尾 ()
.否则
    .计次循环首 (取表项数 (), 计次)
        .如果真 (等于 (寻找文本 (相减 (计次, 1).取标题 (), .内容, , 假), 1))
            赋值 (., 相减 (计次, 1))
            #LVM_SCROLL.发送信息 (0, -32768)
            #LVM_SCROLL.发送信息 (0, 相乘 (相减 (计次, 1), 21))
            获取焦点 ()
            赋值 (已找到, 真)
            跳出循环 ()
        .如果真结束
        
    .计次循环尾 ()
.如果结束
.如果真 (等于 (已找到, 假))
    信息框 (“未找到匹配的公交站！”, #信息图标, #程序标题)
    
.如果真结束


.子程序 _编辑框关键字_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (等于 (键代码, #回车键))
    _按钮搜索_被单击 ()
    
.如果真结束


.子程序 _按钮定位公交站_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

窗口提示.置提示 (“    在地图中给选中的公交站定位。”, 取窗口句柄 ())

.子程序 _高级选择夹_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

窗口提示.隐藏 ()


.子程序 _超级列表框公交站_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

窗口提示.隐藏 ()
 ' 窗口提示.置提示 (“  双击某项可以为其定位坐标。绿色图标表示已有坐标，红色图标表示还没有坐标数据。”, 超级列表框公交站.取窗口句柄 ())


.子程序 _按钮定位公交站_被单击, 空白型, , 
.如果真 (小于 (., 0))
    信息框 (“请先选择一个公交站。”, #信息图标, #程序标题)
    返回 ()
.如果真结束
赋值 (全上一次工作模式, 全工作模式)
赋值 (全工作模式, #模式_定位公交站坐标)
赋值 (窗口数据库维护., 2)
主窗口.置光标 ()


.子程序 _按钮更新公交站数据库_被单击, 空白型, , 
更新数据库 ()


.子程序 _编辑框关键字_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.起始选择位置, 0)
赋值 (.被选择字符数, 1024)


.子程序 _超级列表框公交站_左键单击表项, 空白型, , 
.局部变量 索引, 整数型, , , 

赋值 (索引, .)
赋值 (.内容, 相加 (索引.取标题 (0), “,”, 索引.取标题 (1), “,”, 索引.取标题 (2)))


.子程序 _按钮修改_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

窗口提示.置提示 (“  在编辑框中直接输入数据，然后点击此按钮确定。要屏蔽某个公交站，将其坐标值改为0。”, 取窗口句柄 ())


.子程序 _按钮修改_被单击, 空白型, , 
.局部变量 文本数组, 文本型, , "0", 
.局部变量 计次, 空白型, , , 

.如果真 (等于 (., -1))
    信息框 (“请先选择一个公交站。”, #信息图标, #程序标题)
    返回 ()
.如果真结束
赋值 (.内容, 子文本替换 (.内容, “ ”, “”, , , 真))
赋值 (文本数组, 分割文本 (.内容, “,”, ))
.如果真 (不等于 (取数组成员数 (文本数组), 3))
    信息框 (“输入格式不对，应该类似于[街道口,4301,2254]，坐标之间用英文逗号隔开”, 0, )
    返回 ()
.如果真结束
.计次循环首 (3, 计次)
    .置标题 (., 相减 (计次, 1), 文本数组 [计次])
.计次循环尾 ()
.置标题 (., 3, “*”)
赋值 (集公交站数据库被修改, 真)
.如果真 (不等于 (取文本右边 (.内容, 4), “,0,0”))
    赋值 (集无坐标的公交站数目, 相减 (集无坐标的公交站数目, 1))
.如果真结束
置状态栏文本 ()

.子程序 _按钮删除公交站_被单击, 空白型, , 
.局部变量 选中项索引, 整数型, , , 
.局部变量 结果, 整数型, , , 
.局部变量 计次, 空白型, , , 
.局部变量 公交站名, 文本型, , , 
.局部变量 公交线路文本, 文本型, , , 

赋值 (选中项索引, .)
.如果真 (等于 (选中项索引, -1))
    信息框 (“请先选择一个公交站。”, #信息图标, #程序标题)
    返回 ()
.如果真结束
赋值 (结果, 信息框 (相加 (“这将删除公交站　[”, 选中项索引.取标题 (0), “] ，你确定吗？”), 位或 (#询问图标, #取消是否钮), #程序标题))
.如果真 (不等于 (结果, #是钮))
    返回 ()
.如果真结束
赋值 (公交站名, 选中项索引.取标题 (0))

.计次循环首 (取项目数 (), 计次)
    赋值 (公交线路文本, 相减 (计次, 1).取项目文本 ())
    .如果真 (大于 (寻找文本 (公交线路文本, 相加 (“,”, 公交站名, “,”), , 假), 1))
        信息框 (相加 (“公交线路　[”, 公交线路文本, “] 经过该公交站，您现在不能删除。”), #信息图标, #程序标题)
        返回 ()
    .如果真结束
    
     ' 不能通过此方式来判断
     ' .如果真 (全公交线路数组.是否经过某公交站 ( [计次], 选中项索引.取表项数值 ()))
         ' 信息框 (相加 (“公交线路　[”, 全公交线路数组.取公交线路号 ( [计次]), “] 经过该公交站，您现在不能删除。”), #信息图标, #程序标题)
         ' 返回 ()
     ' .如果真结束
    
.计次循环尾 ()
选中项索引.删除表项 ()
赋值 (集公交站数据库被修改, 真)
赋值 (集公交站已被增删, 真)


.子程序 置状态栏文本, 空白型, , 
.判断开始 (等于 (., 0))
    0.置文本 (选择 (集公交站数据库被修改, “已改”, “未改”))
    1.置文本 (相加 (“总共有”, 到文本 (集公交站总数目), “个公交站。”))
    2.置文本 (相加 (“其中有”, 到文本 (集无坐标的公交站数目), “个公交站无坐标数据。”))
.判断 (等于 (., 1))
    0.置文本 (选择 (集公交线路数据库被修改, “已改”, “未改”))
    1.置文本 (相加 (“总共有”, 到文本 (集总公交线路数目), “条公交线路。”))
    2.置文本 (“要编辑某公交线路，请双击之；要删除，请按Delete键。”)
.默认
    
.判断结束


.子程序 _窗口数据库维护_可否被关闭, 逻辑型, , 
.局部变量 结果, 整数型, , , 

.如果真 (或者 (集公交站数据库被修改, 集公交线路数据库被修改))
    赋值 (结果, 信息框 (“数据库已被修改，你要保存吗？”, 位或 (#取消是否钮, #询问图标), #程序标题))
    .判断开始 (等于 (结果, #是钮))
        _按钮更新公交站数据库_被单击 ()
        返回 (真)
    .判断 (等于 (结果, #否钮))
        返回 (真)
    .默认
        
    .判断结束
    .如果真 (等于 (结果, #取消钮))
        返回 (假)
    .如果真结束
    
.如果真结束


.子程序 _按钮删除公交线路_被单击, 空白型, , 
.局部变量 结果, 整数型, , , 

.如果真 (等于 (.现行选中项, -1))
    信息框 (“请先选择一条公交线路。”, #信息图标, #程序标题)
    返回 ()
.如果真结束
赋值 (结果, 信息框 (“你确定要删除该公交线路吗？”, 位或 (#询问图标, #是否钮), #程序标题))
.如果真 (等于 (结果, #否钮))
    返回 ()
.如果真结束
.删除项目 (.现行选中项)
赋值 (集公交线路数据库被修改, 真)


.子程序 _高级选择夹_子夹被改变, 空白型, , 
置状态栏文本 ()


.子程序 _按钮编辑公交线路_被单击, 空白型, , 
.如果真 (等于 (.现行选中项, -1))
    信息框 (“请先选择一条公交线路。”, #信息图标, #程序标题)
    返回 ()
.如果真结束
赋值 (窗口修改公交线路., 假)
载入 (窗口修改公交线路, 窗口数据库维护, 真)


.子程序 增加公交站, 空白型, , 
.参数 参公交站名, 文本型, , 

.局部变量 位置索引, 整数型, , , 

赋值 (位置索引, .插入表项 (参公交站名, 1, , , ))
位置索引.置标题 (1, “0”)
位置索引.置标题 (2, “0”)
赋值 (., 位置索引)
滚动超级列表框到指定行 (21, 相减 (位置索引, 1))
赋值 (集总公交线路数目, 相加 (集总公交线路数目, 1))
赋值 (集公交站已被增删, 真)
赋值 (集公交站数据库被修改, 真)
置状态栏文本 ()


.子程序 _列表框公交线路_双击选择, 空白型, , 
_按钮编辑公交线路_被单击 ()


.子程序 _列表框公交线路_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (等于 (键代码, #Del键))
    _按钮删除公交线路_被单击 ()
.如果真结束


.子程序 _按钮新增公交线路_被单击, 空白型, , 
赋值 (窗口修改公交线路., 真)
载入 (窗口修改公交线路, 窗口数据库维护, 真)

.子程序 公交站是否已在列表中, 逻辑型, , 
.参数 参公交站名, 文本型, , 

.局部变量 计次, 空白型, , , 
.局部变量 站名, 文本型, , , 

.计次循环首 (取表项数 (), 计次)
    赋值 (站名, 相减 (计次, 1).取标题 (0))
    .如果真 (等于 (参公交站名, 站名))
        返回 (真)
    .如果真结束
    
.计次循环尾 ()
返回 (假)

.子程序 更新数据库, 空白型, , 
.局部变量 文本内容, 文本型, , , 
.局部变量 压缩后的数据, 字节集, , , 
.局部变量 公交线路行, 文本型, , "0", 
.局部变量 临时文本数组, 文本型, , "0", 
.局部变量 计次一, 整数型, , , i,j 循环变量
.局部变量 计次二, 整数型, , , 


.如果真 (集公交站数据库被修改)
    2.置文本 (“正在更新公交站数据库……”)
    处理事件 ()
     ' 先备份数据
    复制文件 (相加 (取运行目录 (), #文件名_公交站数据库), 相加 (取运行目录 (), #文件名_公交站数据库, “.bak”))
    赋值 (文本内容, “”)
    置等待鼠标 ()
    .计次循环首 (取表项数 (), 计次一)
        赋值 (文本内容, 相加 (文本内容, 相减 (计次一, 1).取标题 (0), “,”, 相减 (计次一, 1).取标题 (1), “,”, 相减 (计次一, 1).取标题 (2), #换行符))
        相减 (计次一, 1).置标题 (3, “”) ' 清除星号
    .计次循环尾 ()
    恢复鼠标 ()
    赋值 (压缩后的数据, 未知支持库函数_0 (到字节集 (文本内容)))
    .如果 (写到文件 (相加 (取运行目录 (), #文件名_公交站数据库), 压缩后的数据))
        主窗口.载入公交站数据 ()
        0.置文本 (“未改”)
    .否则
        信息框 (“写公交站数据库时发生错误！”, #错误图标, #程序标题)
    .如果结束
    
.如果真结束

.如果真 (或者 (集公交线路数据库被修改, 集公交站已被增删))
    2.置文本 (“正在更新公交线路数据库……”)
    处理事件 ()
    复制文件 (相加 (取运行目录 (), #文件名_公交线路数据库), 相加 (取运行目录 (), #文件名_公交线路数据库, “.bak”))
    复制文件 (相加 (取运行目录 (), #文件名_公交线路文本), 相加 (取运行目录 (), #文件名_公交线路文本, “.bak”))
     ' 重建索引
    赋值 (文本内容, “”)
    置等待鼠标 ()
    .计次循环首 (取项目数 (), 计次一)
        赋值 (文本内容, 相加 (文本内容, 相减 (计次一, 1).取项目文本 (), #换行符))
    .计次循环尾 ()
    赋值 (压缩后的数据, 未知支持库函数_0 (到字节集 (文本内容)))
    写到文件 (#文件名_公交线路文本, 压缩后的数据)
    恢复鼠标 ()
    2.置文本 (“正在创建公交线路数据库索引，请稍候……”)
    处理事件 ()
    置等待鼠标 ()
    .计次循环首 (取表项数 (), 计次一)
         ' 将公交站名换成编号
        赋值 (文本内容, 子文本替换 (文本内容, 相加 (“,”, 相减 (计次一, 1).取标题 (0), “,”), 相加 (“,”, 到文本 (计次一), “,”), , , 真))
    .计次循环尾 ()
    恢复鼠标 ()
    2.置文本 (“正在验证公交线路数据库索引，请稍候……”)
    处理事件 ()
     ' 验证转换后的数字型公交站数据
    赋值 (公交线路行, 分割文本 (文本内容, #换行符, ))
    置等待鼠标 ()
    .计次循环首 (取数组成员数 (公交线路行), 计次一)
        赋值 (临时文本数组, 分割文本 (公交线路行 [计次一], “,”, ))
        .计次循环首 (取数组成员数 (临时文本数组), 计次二)
            .如果真 (等于 (计次二, 1))
                到循环尾 ()
            .如果真结束
            .如果真 (等于 (到数值 (临时文本数组 [计次二]), 0))
                信息框 (相加 (公交线路行 [计次一], #换行符, “创建公交站 [”, 临时文本数组 [计次二], “] 的索引失败。请检查该公交站是否在数据库中。”), #错误图标, #程序标题)
                赋值 (集公交站数据库被修改, 假)
                赋值 (集公交站已被增删, 假)
                返回 ()
            .如果真结束
            
        .计次循环尾 ()
    .计次循环尾 ()
    恢复鼠标 ()
    赋值 (压缩后的数据, 未知支持库函数_0 (到字节集 (文本内容)))
    写到文件 (相加 (取运行目录 (), #文件名_公交线路数据库), 压缩后的数据)
    
    主窗口.载入公交线路数据 ()
.如果真结束

.如果真 (或者 (集公交站数据库被修改, 集公交线路数据库被修改))
    主窗口.缩放到视图 (全当前视图)
.如果真结束

赋值 (集公交站数据库被修改, 假)
赋值 (集公交站已被增删, 假)
赋值 (集公交线路数据库被修改, 假)

恢复鼠标 ()
信息框 (“更新数据库完毕。”, #信息图标, #程序标题)


.子程序 _按钮更新公交线路数据库_被单击, 空白型, , 
更新数据库 ()


.子程序 _按钮屏蔽公交站_被单击, 空白型, , 
.局部变量 选中项, 整数型, , , 

赋值 (选中项, .)
.如果真 (等于 (选中项, -1))
    信息框 (“请先选择一个公交站。”, #信息图标, #程序标题)
    返回 ()
.如果真结束
选中项.置标题 (1, “0”)
选中项.置标题 (2, “0”)
选中项.置标题 (3, “*”)

 ' 公交线路数据库被修改 ＝ 真
赋值 (集公交站数据库被修改, 真)
置状态栏文本 ()


.窗口程序集 窗口程序集修改公交线路, , , 

.程序集变量 集是新增线路, 逻辑型, , , 
.子程序 _窗口修改公交线路_创建完毕, 空白型, , 
赋值 (., 相加 (“修改公交线路 - ”, #程序标题))
.如果真 (等于 (集是新增线路, 假))
    赋值 (.内容, 窗口数据库维护.取项目文本 (., 窗口数据库维护..现行选中项))
.如果真结束


.子程序 _按钮取消_被单击, 空白型, , 
销毁 ()


.子程序 _按钮确定_被单击, 空白型, , 
.局部变量 临时文本数组, 文本型, , "0", 
.局部变量 计次, 空白型, , , 
.局部变量 公交站编号, 整数型, , , 
.局部变量 结果, 整数型, , , 
.局部变量 已取消, 逻辑型, , , 

 ' 先去掉回车，去掉空格，转换逗号
赋值 (.内容, 子文本替换 (.内容, #换行符, “”, , , 真))
赋值 (.内容, 子文本替换 (.内容, “，”, “,”, , , 真))
赋值 (.内容, 子文本替换 (.内容, “ ”, “”, , , 真))
.如果真 (不等于 (取文本右边 (.内容, 1), “,”))
    赋值 (.内容, 相加 (.内容, “,”))
.如果真结束
赋值 (临时文本数组, 分割文本 (.内容, “,”, ))

赋值 (已取消, 假)
.计次循环首 (取数组成员数 (临时文本数组), 计次)
    .如果真 (等于 (计次, 1))
        到循环尾 ()
    .如果真结束
    赋值 (公交站编号, 主窗口.根据公交站名取公交站编号 (临时文本数组 [计次]))
    .如果真 (等于 (窗口数据库维护.公交站是否已在列表中 (临时文本数组 [计次]), 假))
        赋值 (结果, 信息框 (相加 (“[”, 临时文本数组 [计次], “] 目前不在公交站数据库中，你要添加它为公交站吗？”), 位或 (#询问图标, #取消是否钮), #程序标题))
        .如果 (等于 (结果, #是钮))
            窗口数据库维护.增加公交站 (临时文本数组 [计次])
        .否则
            赋值 (已取消, 真)
            跳出循环 ()
        .如果结束
        
    .如果真结束
    
.计次循环尾 ()
.如果真 (等于 (已取消, 假))
    .如果 (集是新增线路)
        窗口数据库维护.加入项目 (., .内容, )
    .否则
        窗口数据库维护.置项目文本 (., 窗口数据库维护..现行选中项, .内容)
        
    .如果结束
    销毁 ()
    赋值 (窗口数据库维护., 真)
.如果真结束



 ' 不属于任何一个程序集、类模块的函数：
