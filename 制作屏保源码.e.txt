 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 窗口1
    左边 = 0
    顶边 = 0
    宽度 = 800
    高度 = 600
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 0
    底图方式 = 0
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “godknows”
    帮助文件名 = “”



.图片 a1, " ' 已保存到：D:\易语言学习\Data\制作屏保源码.e\a1", , 
.图片 a2, " ' 已保存到：D:\易语言学习\Data\制作屏保源码.e\a2", , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 5 0 系统核心支持库
 ' iext 27bb20fdd3e145e4bee3db39ddd6e64c 2 0 扩展界面支持库一




数据类型 lpRect, , 
    .成员 左边, 整数型, , , 
    .成员 顶边, 整数型, , , 
    .成员 右边, 整数型, , , 
    .成员 下边, 整数型, , , 

数据类型 DevMode, , Form:EnumDisplaySettings
    .成员 dmDeviceName, 字节型, , "32", 
    .成员 dmSpecVersion, 短整数型, , , 
    .成员 dmDriverVersion, 短整数型, , , 
    .成员 dmSize, 短整数型, , , 
    .成员 dmDriverExtra, 短整数型, , , 
    .成员 dmFields, 整数型, , , 
    .成员 dmOrientation, 短整数型, , , 
    .成员 dmPaperSize, 短整数型, , , 
    .成员 dmPaperLength, 短整数型, , , 
    .成员 dmPaperWidth, 短整数型, , , 
    .成员 dmScale, 短整数型, , , 
    .成员 dmCopies, 短整数型, , , 
    .成员 dmDefaultSource, 短整数型, , , 
    .成员 dmPrintQuality, 短整数型, , , 
    .成员 dmColor, 短整数型, , , 
    .成员 dmDuplex, 短整数型, , , 
    .成员 dmYResolution, 短整数型, , , 
    .成员 dmTTOption, 短整数型, , , 
    .成员 dmCollate, 短整数型, , , 
    .成员 dmFormName, 字节型, , "32", 
    .成员 dmLogPixels, 短整数型, , , 
    .成员 dmBitsPerPel, 整数型, , , 
    .成员 dmPelsWidth, 整数型, , , 
    .成员 dmPelsHeight, 整数型, , , 
    .成员 dmDisplayFlags, 整数型, , , 
    .成员 dmDisplayFrequency, 整数型, , , 
    .成员 dmICMMethod, 整数型, , , 
    .成员 dmICMIntent, 整数型, , , 
    .成员 dmMediaType, 整数型, , , 
    .成员 dmDitherType, 整数型, , , 
    .成员 dmReserved1, 整数型, , , 
    .成员 dmReserved2, 整数型, , , 

.全局变量 小电视句柄, 整数型, , , 
.全局变量 预览是否为真, 逻辑型, , , 
.全局变量 lastx, 整数型, , , 
.全局变量 lasty, 整数型, , , 

.DLL命令 取Windows目录, 整数型, "kernel32.dll", "GetWindowsDirectoryA", , 
    .参数 操作系统目录, 文本型, , 
    .参数 目录长度, 整数型, , 

.DLL命令 GetWindowLong, 整数型, "user32.dll", "GetWindowLongA", , 从指定窗口的结构中取得信息
    .参数 获取信息的窗口的句柄, 整数型, , 
    .参数 欲取回的信息, 整数型, , GWL_STYLE，-16 窗口样式

.DLL命令 SetWindowLong, 整数型, "user32.dll", "SetWindowLongA", , 在窗口结构中为指定的窗口设置信息
    .参数 ByValhwnd, 整数型, , 欲为其取得信息的窗口的句柄
    .参数 ByValnIndex, 整数型, , 请参考GetWindowLong函数的nIndex参数的说明
    .参数 ByValdwNewLong, 整数型, , 由nIndex指定的窗口信息的新值

.DLL命令 EnumDisplaySettings, 整数型, "user32.dll", "EnumDisplaySettingsA", , 取屏幕分辩率
    .参数 lpszDeviceName, 整数型, , 
    .参数 iModeNum, 整数型, , 
    .参数 lpDevMode, DevMode, 传址, 

.DLL命令 隐藏鼠标, 空白型, "", "ShowCursor", , 隐藏鼠标
    .参数 隐藏鼠标, 逻辑型, , 为假则隐藏鼠标，为真则不隐藏鼠标

.DLL命令 GetClientRect, 整数型, "user32.dll", "GetClientRect", , 
    .参数 ByValhwnd, 整数型, , 窗口句柄
    .参数 lpRect, lpRect, , 

.DLL命令 SetWindowPos, 整数型, "user32.dll", "SetWindowPos", , 
    .参数 ByValhwnd, 整数型, , 欲定位的窗口
    .参数 ByValhWndInsertAfter, 整数型, , 
    .参数 ByValx, 整数型, , 窗口新的x坐标
    .参数 ByValy, 整数型, , 窗口新的y坐标
    .参数 ByValcx, 整数型, , 指定新的窗口宽度
    .参数 ByValcy, 整数型, , 指定新的窗口高度
    .参数 ByValwFlags, 整数型, , 

.DLL命令 SetParent, 整数型, "user32.dll", "SetParent", , 
    .参数 ByValhWndChild, 整数型, , 子窗口的句柄
    .参数 ByValhWndNewParent, 整数型, , WndChild的新父

.程序集 程序集1, , , 

.程序集变量 句柄, 空白型, , , 
.程序集变量 目录名, 文本型, , , 
.子程序 _启动子程序, 整数型, , 本子程序在程序启动后最先执行
.局部变量 命令行参数, 文本型, , "0", 
.局部变量 wj, 文本型, , , 

赋值 (目录名, 取空白文本 (255))
取Windows目录 (目录名, 255)
.如果 (等于 (取文本右边 (取执行文件名 (), 4), “.exe”))
    赋值 (wj, 子文本替换 (取执行文件名 (), “exe”, “scr”, , , 假))
    .判断开始 (等于 (取文本右边 (删首尾空 (目录名), 1), “\”))
        赋值 (wj, 相加 (目录名, wj))
    .默认
        赋值 (wj, 相加 (目录名, “\”, wj))
    .判断结束
    复制文件 (相加 (取运行目录 (), “\”, 取执行文件名 ()), wj)
    自动安装屏保 (wj)
    
.否则
    
.如果结束


赋值 (预览是否为真, 假)
取命令行 (命令行参数)
.如果 (不等于 (取数组成员数 (命令行参数), 0))
    .判断开始 (等于 (取文本左边 (到大写 (命令行参数 [1]), 2), “/C”))
        信息框 (“无设置选项”, 0, )
        返回 (0)
    .默认
        
    .判断结束
    .判断开始 (等于 (到大写 (命令行参数 [1]), “/S”))
        信息框 (“呵呵,你点击了预览按纽”, 0, )
        赋值 (预览是否为真, 真)
        赋值 (lastx, 取鼠标水平位置 ())
        赋值 (lasty, 取鼠标垂直位置 ())
        载入 (窗口1, , 真)
        返回 (0)
    .判断 (等于 (取文本左边 (到大写 (命令行参数 [1]), 2), “/P”))
        .如果 (大于 (取数组成员数 (命令行参数), 1))
            赋值 (小电视句柄, 到数值 (命令行参数 [2]))
        .否则
            赋值 (小电视句柄, 到数值 (取文本右边 (到大写 (命令行参数 [1]), 相减 (取文本长度 (到大写 (命令行参数 [1])), 2))))
            
        .如果结束
        载入 (窗口1, , 真)
        返回 (0)
    .默认
        
    .判断结束
    
.否则
    
.如果结束
结束 ()
返回 (0)

.窗口程序集 窗口程序集1, , , 

.程序集变量 本窗口句柄, 整数型, , , 
.子程序 _窗口1_创建完毕, 空白型, , 
.局部变量 窗口样式, 整数型, , , 
.局部变量 abc, lpRect, , , 

赋值 (.图片, #a1)
赋值 (.时钟周期, 2000)

.如果 (等于 (预览是否为真, 假))
    赋值 (本窗口句柄, 窗口1.取窗口句柄 ())
    赋值 (窗口样式, GetWindowLong (本窗口句柄, -16))
    窗口样式 ＝ 窗口样式 或 1073741824
    SetWindowLong (本窗口句柄, -16, 窗口样式)
    SetWindowLong (本窗口句柄, -16, 1073741824)
    SetParent (本窗口句柄, 小电视句柄)
    GetClientRect (小电视句柄, abc)
    SetWindowPos (本窗口句柄, 0, 0, 0, abc.右边, abc.下边, 4)
    SetWindowPos (本窗口句柄, 0, 0, 0, abc.右边, abc.下边, 16)
    SetWindowPos (本窗口句柄, 0, 0, 0, abc.右边, abc.下边, 64)
    
    
    
.否则
    隐藏鼠标 (假)
    连续赋值 (0, 窗口1., 窗口1.)
    赋值 (窗口1., 取屏幕宽度 ())
    赋值 (窗口1., 取屏幕高度 ())
    当前信息 ()
    
.如果结束


.子程序 当前信息, 空白型, , 
.局部变量 q, 文本型, , , 
.局部变量 ReVal, 整数型, , , 
.局部变量 ModeCube, DevMode, , , 

赋值 (ReVal, EnumDisplaySettings (0, -1, ModeCube))
.如果真 (等于 (ReVal, 1))
    赋值 (q, 相加 (到文本 (ModeCube.dmPelsWidth), “×”, 删首尾空 (到文本 (ModeCube.dmPelsHeight))))
    .如果真 (等于 (ModeCube.dmBitsPerPel, 4))
        赋值 (q, 相加 (q, “ 刷新率:”, 到文本 (ModeCube.dmDisplayFrequency), “ 16色”))
    .如果真结束
    .如果真 (等于 (ModeCube.dmBitsPerPel, 8))
        赋值 (q, 相加 (q, “ 刷新率:”, 到文本 (ModeCube.dmDisplayFrequency), “ 256色”))
    .如果真结束
    .如果真 (等于 (ModeCube.dmBitsPerPel, 16))
        赋值 (q, 相加 (q, “ 刷新率:”, 到文本 (ModeCube.dmDisplayFrequency), “ 16位增强色”))
    .如果真结束
    .如果真 (等于 (ModeCube.dmBitsPerPel, 24))
        赋值 (q, 相加 (q, “ 刷新率:”, 到文本 (ModeCube.dmDisplayFrequency), “ 24位真彩”))
    .如果真结束
    .如果真 (等于 (ModeCube.dmBitsPerPel, 32))
        赋值 (q, 相加 (q, “ 刷新率:”, 到文本 (ModeCube.dmDisplayFrequency), “ 32位真彩”))
    .如果真结束
    赋值 (., q)
.如果真结束


.子程序 _窗口1_尺寸被改变, 空白型, , 
赋值 (.高度, 窗口1.)
赋值 (.宽度, 窗口1.)

.子程序 _时钟1_周期事件, 空白型, , 
.判断开始 (等于 (.图片, #a1))
    赋值 (.图片, #a2)
    返回 ()
    
.默认
    
.判断结束
.判断开始 (等于 (.图片, #a2))
    赋值 (.图片, #a1)
    返回 ()
.默认
    
.判断结束


.子程序 _图片框1_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 x, 整数型, , , 
.局部变量 y, 整数型, , , 

赋值 (x, 取鼠标水平位置 ())
赋值 (y, 取鼠标垂直位置 ())
.判断开始 (或者 (等于 (.高度, 600), 等于 (.宽度, 800)))
    .如果 (或者 (大于 (取绝对值 (相减 (x, lastx)), 3), 大于 (取绝对值 (相减 (y, lasty)), 3)))
        隐藏鼠标 (真)
        销毁 ()
    .否则
        
    .如果结束
    
.默认
    
.判断结束


.子程序 _图片框1_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 



.子程序 _窗口1_将被销毁, 空白型, , 
结束 ()

.程序集 自动安装屏保, , , 

.子程序 自动安装屏保, 空白型, , 
.参数 屏保所在目录, 文本型, , 

.局部变量 cs, 文本型, , , 

赋值 (cs, 相加 (“rundll32.exe desk.cpl,InstallScreenSaver ”, 屏保所在目录))
运行 (cs, 假, )



 ' 不属于任何一个程序集、类模块的函数：
