 ' 文件类型：Windows窗口程序

 ' 程序名称：SC1023系列读写器[易语言版测试]
 ' 程序描述：本程序由易语言编写，目的是为了帮助用户使用易语言操作硬件设备，用户可以任意参考使用。
 ' 程序作者：大连大有吴涛易语言软件开发有限公司
 ' 邮政编码：116001
 ' 联系地址：辽宁省大连市中山区人民路55号亚太国际金融中心14楼
 ' 联系电话：+86(0411)88995831
 ' 传真号码：+86(0411)88995834
 ' 电子信箱：service@dywt.com.cn
 ' 主页地址：http://www.dywt.com.cn
 ' 版权声明：祝您一帆风顺，心想事成！
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 680
    高度 = 472
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “SC1023系列读写器[易语言版测试]”
    帮助文件名 = “”



.图片 图片_红色字, " ' 已保存到：D:\易语言学习\Data\SC1023系列读写器例程.e\图片_红色字", , 
.图片 图片_红色点, " ' 已保存到：D:\易语言学习\Data\SC1023系列读写器例程.e\图片_红色点", , 
.图片 图片_绿色字, " ' 已保存到：D:\易语言学习\Data\SC1023系列读写器例程.e\图片_绿色字", , 
.图片 图片_绿色点, " ' 已保存到：D:\易语言学习\Data\SC1023系列读写器例程.e\图片_绿色点", , 
.图片 dll, " ' 已保存到：D:\易语言学习\Data\SC1023系列读写器例程.e\dll", , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 5 系统核心支持库





.DLL命令 打开端口, 整数型, "SCDLL32.dll", "InitPort", , 返回值为0，表示操作正确；为其它值时表示出错。
    .参数 端口号, 整数型, , 
    .参数 COM句柄, 整数型, 传址, 

.DLL命令 关闭端口, 整数型, "SCDLL32.dll", "ClosePort", , 返回值为0，表示操作正确；为其它值时表示出错。
    .参数 COM句柄, 整数型, , 

.DLL命令 寻卡, 整数型, "SCDLL32.dll", "SC_Request", , 4表示8Kbit(1K字节) ,2表示32Kbit(4K字节卡),1 表示无卡
    .参数 COM句柄, 整数型, , 

.DLL命令 读卡序列号, 整数型, "SCDLL32.dll", "SC_GetSnr", , 返回值为0，表示操作正确；为其它值时表示出错。
    .参数 COM句柄, 整数型, , 
    .参数 卡片序列号, 文本型, 传址, 4个字节16进制的卡片序列号 ，例如：90A00438

.DLL命令 读块数据, 整数型, "SCDLL32.dll", "SC_ENRead", , 读卡一个块的16字节数据；返回值为0，表示操作正确；为其它值时表示出错。
    .参数 卡片序列号, 整数型, , COM的句柄
    .参数 块号, 整数型, , 所要读取的块号，值范围0~63块
    .参数 块数据, 文本型, 传址, 存放读取的16个字节块数据。

.DLL命令 核对卡密钥, 整数型, "SCDLL32.dll", "SC_EncryptAuth", , 返回值为0，表示操作正确；为其它值时表示出错。
    .参数 COM句柄, 整数型, , COM的句柄
    .参数 扇区号, 整数型, , 核对密钥的扇区号0~15 
    .参数 密钥类型, 整数型, , 卡密钥的类型及A密钥60或B密钥61，通常使用A密钥60，
    .参数 卡密钥, 文本型, , 卡密钥初始为12个FFFFFFFFFFFF 

.DLL命令 选择卡, 整数型, "SCDLL32.dll", "SC_SelectSnr", , 返回值为0，表示操作正确；为其它值时表示出错。32Kbit(4k字节)的卡片返回1正确
    .参数 COM句柄, 整数型, , COM的句柄
    .参数 卡片序列号, 文本型, , 4个字节的卡片序列号 ，例如：90A00438

.DLL命令 写块数据, 整数型, "SCDLL32.dll", "SC_ENWrite", , 返回值为0，表示操作正确；为其它值时表示出错。
    .参数 COM句柄, 整数型, , COM的句柄
    .参数 块号, 整数型, , 所要写的块号，值范围0~63块
    .参数 块数据, 文本型, , 要写入的16个字节块数据。

.DLL命令 LED数码管显示, 整数型, "SCDLL32.dll", "SC_LEDDSP", , 返回值为0，表示操作正确；为其它值时表示出错。
    .参数 COM句柄, 整数型, , COM的句柄
    .参数 显示数据, 文本型, , 可以显示的数据，空格表示 不显示，0、1、2、3、4、5、6、7、8、9、A、B、C、D、E、F、b、c、H、h、L、n、N、o、P、P、r、t、U、-、=、y、j
    .参数 小数点位置, 整数型, , 小数点的位置，值为0 ~ 8  ，0表示不显示

.DLL命令 ASCII字符显示, 整数型, "SCDLL32.dll", "SC_LCDDSP", , 此函数只对SC1026、SC1027、SC1028三种型号有效,返回值为0，表示操作正确；为其它值时表示出错。显示ASCII字符
    .参数 COM句柄, 整数型, , COM的句柄
    .参数 字符长度, 整数型, , 显示字符长度
    .参数 第几行, 整数型, , 显示在第几行
    .参数 显示, 文本型, , 可以显示ASCII，如英文，标点符号等

.DLL命令 ASCII中文显示, 整数型, "SCDLL32.dll", "SC_LCDDSPCN", , 此函数只对SC1026、SC1027、SC1028三种型号有效,返回值为0，表示操作正确；为其它值时表示出错。显示ASCII字符
    .参数 COM句柄, 整数型, , COM的句柄
    .参数 字符长度, 整数型, , 显示字符长度
    .参数 第几行, 整数型, , 显示在第几行
    .参数 显示, 文本型, , 可以显示ASCII，如英文，标点符号等

.DLL命令 蜂鸣器控制, 整数型, "SCDLL32.dll", "SC_Beep", , 控制蜂鸣器的蜂鸣时间，返回值为0，表示操作正确；为其它值时表示出错。
    .参数 COM句柄, 整数型, , COM的句柄
    .参数 固定为0, 整数型, , 固定为0
    .参数 时长, 整数型, , 1 到 255

.DLL命令 指示灯控制, 整数型, "SCDLL32.dll", "SC_LED", , 返回值为0，表示操作正确；为其它值时表示出错。
    .参数 COM句柄, 整数型, , COM的句柄
    .参数 指示灯, 整数型, , 1  //代表红色LED指示灯2  //代表绿色LED指示灯3  //代表红色和绿色LED指示灯4  //代表 蜂鸣5  //代表红色LED指示灯和蜂鸣6  //代表 绿色LED指示灯和蜂鸣7  //代表 红色和绿色LED指示灯和蜂鸣8  //代表 红色指示灯常亮9  //代表 红色关闭10 //代表 绿色指示灯常亮11 //代表 绿色关闭12 //代表 红色和绿色指示灯常亮13 //代表 红色和绿色指示灯关闭
    .参数 时长, 整数型, , 1 到 255

.DLL命令 更改密钥, 整数型, "SCDLL32.dll", "SC_EnChangekey", , 返回值为0，表示操作正确；为其它值时表示出错。
    .参数 COM句柄, 整数型, , COM的句柄
    .参数 扇区号, 整数型, , 核对密钥的扇区号0~15 
    .参数 密钥, 文本型, , 需要写入的密钥，12个字节

.窗口程序集 窗口程序集_读写非接触IC卡, , , 

.程序集变量 程序集_卡序号, 文本型, , , 
.程序集变量 程序集_允许显示文字, 文本型, , "0", 0,1,2,3,4,5,6,7,8,9,A,B,C,D,E,F,b,c,H,h,L,n,N,o,P,P,r,t,U,-,=,y,j
.程序集变量 程序集_端口, 整数型, , , 
.程序集变量 程序集_操作结束, 逻辑型, , , 
.子程序 _按钮_打开端口_被单击, 空白型, , 
 ' ---------------------相关说明--------------------------------
 ' Dll命令名：打开端口
 ' 返回值为0，表示操作正确；为其它值时表示出错。
 ' 所处动态链接库的文件名：SCDLL32.dll
 ' 在所处动态链接库中的命令名：InitPort
 ' 返回值类型：整数型
 ' 参数<1>的名称为“iPort”，类型为“整数型”。
 ' 参数<2>的名称为“rHandle”，类型为“整数型”，接收参数数据时采用参考传递方式。
 ' -------------------------------------------------------------
.判断开始 (等于 (., “打开端口”))
    .如果真 (等于 (打开端口 (相加 (., 1), 程序集_端口), 0))
        子程序_消息显示 (相加 (“端口打开成功，端口句柄：”, 到文本 (程序集_端口)))
        赋值 (., “关闭端口”)
        返回 ()
    .如果真结束
    子程序_消息显示 (“端口打开失败”)
    返回 ()
.默认
    .如果真 (等于 (关闭端口 (程序集_端口), 0))
        子程序_消息显示 (“端口关闭成功”)
        赋值 (., “打开端口”)
        赋值 (程序集_端口, 0)
        返回 ()
    .如果真结束
    子程序_消息显示 (“端口关闭失败”)
    赋值 (程序集_端口, 0)
    返回 ()
.判断结束


.子程序 __启动窗口_创建完毕, 空白型, , 
.局部变量 局部_变量, 整数型, , , 

.如果真 (等于 (文件是否存在 (相加 (取运行目录 (), “\SCDLL32.dll”)), 假)) ' 判断是否存在，如果不存在则写出
    写到文件 (相加 (取运行目录 (), “\SCDLL32.dll”), #dll)
.如果真结束
.计次循环首 (15, 局部_变量) ' 循环加入15个端口号
    相加 (“COM”, 到文本 (局部_变量)).加入项目 (局部_变量)
.计次循环尾 ()
赋值 (., 0)
.计次循环首 (64, 局部_变量) ' 加入64个区块
    到文本 (相减 (局部_变量, 1)).加入项目 (相减 (局部_变量, 1))
.计次循环尾 ()
赋值 (., 0)
.计次循环首 (9, 局部_变量) ' 小数点的位置
    到文本 (相减 (局部_变量, 1)).加入项目 (相减 (局部_变量, 1))
.计次循环尾 ()
赋值 (., 0)
_组合框_文字颜色_列表项被选择 ()
 ' 允许显示的文字，文本型
赋值 (程序集_允许显示文字, { “0”, “1”, “2”, “3”, “4”, “5”, “6”, “7”, “8”, “9”, “A”, “B”, “C”, “D”, “E”, “F”, “b”, “c”, “H”, “h”, “L”, “n”, “N”, “o”, “P”, “P”, “r”, “t”, “U”, “-”, “=”, “y” })
赋值 (程序集_操作结束, 真)


.子程序 子程序_消息显示, 空白型, , 
.参数 参数_消息, 文本型, , 

参数_消息.加入项目 ()
.如果真 (大于 (取项目数 (), 10000))
    清空 ()
.如果真结束
相减 (取项目数 (), 1).选择项目 ()

.子程序 _按钮_寻卡_被单击, 空白型, , 
.局部变量 局部_消息值, 整数型, , , 

 ' ---------------------相关说明--------------------------------
 ' 判断如果端口打开执行下面代码‘否则返回
 ' Dll命令名：寻卡
 ' 4表示8Kbit(1K字节) ,2表示32Kbit(4K字节卡),1 表示无卡
 ' 所处动态链接库的文件名：SCDLL32.dll
 ' 在所处动态链接库中的命令名：SC_Request
 ' 返回值类型：整数型
 ' 参数<1>的名称为“rHandle”，类型为“整数型”。
 ' -------------------------------------------------------------
.如果真 (端口未打开 ())
    返回 ()
.如果真结束
赋值 (局部_消息值, 寻卡 (程序集_端口))
.判断开始 (等于 (局部_消息值, 4))
    子程序_消息显示 (“寻卡成功，卡类型为S50(8K)”)
.判断 (等于 (局部_消息值, 2))
    子程序_消息显示 (“寻卡成功，卡类型为S70(32K)”)
.默认
    子程序_消息显示 (“寻卡失败！”)
    返回 ()
.判断结束


.子程序 端口未打开, 逻辑型, , 
.如果真 (等于 (程序集_端口, 0))
    子程序_消息显示 (“端口还未打开，请先打开端口！”)
    返回 (真)
.如果真结束
返回 (假)


.子程序 _按钮_读卡序号_被单击, 空白型, , 
 ' ---------------------相关说明--------------------------------
 ' Dll命令名：读卡序列号
 ' 返回值为0，表示操作正确；为其它值时表示出错。
 ' 所处动态链接库的文件名：SCDLL32.dll
 ' 在所处动态链接库中的命令名：SC_GetSnr
 ' 返回值类型：整数型
 ' 参数<1>的名称为“rHandle”，类型为“整数型”。
 ' 参数<2>的名称为“pSNR”，类型为“文本型”，接收参数数据时采用参考传递方式。注明：4个字节16进制的卡片序列号 ，例如：90A00438。
 ' -------------------------------------------------------------
.如果真 (端口未打开 ())
    返回 ()
.如果真结束
赋值 (程序集_卡序号, 取空白文本 (8))
.如果真 (等于 (读卡序列号 (程序集_端口, 程序集_卡序号), 0))
    子程序_消息显示 (相加 (“卡序号读取成功，序号为：”, 程序集_卡序号))
    返回 ()
.如果真结束
子程序_消息显示 (“卡序号读取失败！”)

.子程序 _按钮_读块数据_被单击, 空白型, , 
.局部变量 局部_块数据, 文本型, , , 

 ' ---------------------相关说明--------------------------------
 ' 读数据块时必须按顺序执行
 ' Dll命令名：读块数据
 ' 读卡一个块的16字节数据；返回值为0，表示操作正确；为其它值时表示出错。
 ' 所处动态链接库的文件名：SCDLL32.dll
 ' 在所处动态链接库中的命令名：SC_ENRead
 ' 返回值类型：整数型
 ' 参数<1>的名称为“rHandle”，类型为“整数型”。注明：COM的句柄。
 ' 参数<2>的名称为“iBlock”，类型为“整数型”。注明：所要读取的块号，值范围0~63块。
 ' 参数<3>的名称为“pData”，类型为“文本型”，接收参数数据时采用参考传递方式。注明：存放读取的16个字节块数据。
 ' -------------------------------------------------------------
.如果真 (等于 (程序集_操作结束, 假))
    子程序_消息显示 (“上步操作未结束，等待结束再操作！”)
    返回 ()
.如果真结束
.如果真 (端口未打开 ())
    返回 ()
.如果真结束
赋值 (程序集_操作结束, 假)
赋值 (., 取反 (程序集_操作结束))
_按钮_寻卡_被单击 ()
_按钮_读卡序号_被单击 ()
_按钮_选择卡_被单击 ()
_按钮_核对密钥_被单击 ()
赋值 (., “”)
赋值 (局部_块数据, 取空白文本 (32))
.如果真 (等于 (读块数据 (程序集_端口, ., 局部_块数据), 0))
    子程序_消息显示 (相加 (“块数据读取成功，数据为：”, 局部_块数据))
    赋值 (., 局部_块数据)
    赋值 (局部_块数据, “”)
    赋值 (程序集_操作结束, 真)
    赋值 (., 取反 (程序集_操作结束))
    返回 ()
.如果真结束
子程序_消息显示 (“块数据读取失败！”)
赋值 (程序集_操作结束, 真)
赋值 (., 取反 (程序集_操作结束))

.子程序 _按钮_核对密钥_被单击, 空白型, , 
.局部变量 局部_密钥, 文本型, , , 

 ' ---------------------相关说明--------------------------------
 ' Dll命令名：核对卡密钥
 ' 返回值为0，表示操作正确；为其它值时表示出错。
 ' 所处动态链接库的文件名：SCDLL32.dll
 ' 在所处动态链接库中的命令名：SC_EncryptAuth
 ' 返回值类型：整数型
 ' 参数<1>的名称为“rHandle”，类型为“整数型”。注明：COM的句柄。
 ' 参数<2>的名称为“iSector”，类型为“整数型”。注明：核对密钥的扇区号0~15 。
 ' 参数<3>的名称为“iMode”，类型为“整数型”。注明：卡密钥的类型及A密钥60或B密钥61，通常使用A密钥60，。
 ' 参数<4>的名称为“pKey”，类型为“文本型”。注明：卡密钥初始为12个FFFFFFFFFFFF 。
 ' --------------------------------------------------------------
.如果真 (端口未打开 ())
    返回 ()
.如果真结束
赋值 (局部_密钥, .)
.如果真 (等于 (., “”))
    赋值 (局部_密钥, 取重复文本 (12, “F”))
.如果真结束
.如果真 (等于 (核对卡密钥 (程序集_端口, 绝对取整 (相除 (., 4)), 60, 局部_密钥), 0))
    子程序_消息显示 (相加 (到文本 (绝对取整 (相除 (., 4))), “扇区密钥验证成功”))
    返回 ()
.如果真结束
子程序_消息显示 (相加 (到文本 (绝对取整 (相除 (., 4))), “扇区密钥验证失败！”))


.子程序 _按钮_选择卡_被单击, 空白型, , 
 ' ---------------------相关说明--------------------------------
 ' Dll命令名：选择卡
 ' 返回值为0，表示操作正确；为其它值时表示出错。32Kbit(4k字节)的卡片返回1正确
 ' 所处动态链接库的文件名：SCDLL32.dll
 ' 在所处动态链接库中的命令名：SC_SelectSnr
 ' 返回值类型：整数型
 ' 参数<1>的名称为“rHandle”，类型为“整数型”。注明：COM的句柄。
 ' 参数<2>的名称为“pSNR”，类型为“文本型”。注明：4个字节的卡片序列号 ，例如：90A00438。
 ' ---------------------------------------------------------------
.如果真 (端口未打开 ())
    返回 ()
.如果真结束
.如果真 (等于 (选择卡 (程序集_端口, 程序集_卡序号), 0))
    子程序_消息显示 (“选择卡成功”)
    返回 ()
.如果真结束
子程序_消息显示 (“选择卡失败！”)

.子程序 _按钮_写块数据_被单击, 空白型, , 
.局部变量 局部_数据, 文本型, , , 

.如果真 (等于 (程序集_操作结束, 假))
    子程序_消息显示 (“上步操作未结束，等待结束再操作！”)
    返回 ()
.如果真结束
.如果真 (端口未打开 ())
    返回 ()
.如果真结束
赋值 (程序集_操作结束, 假)
赋值 (., 取反 (程序集_操作结束))
_按钮_寻卡_被单击 ()
_按钮_读卡序号_被单击 ()
_按钮_选择卡_被单击 ()
_按钮_核对密钥_被单击 ()
赋值 (局部_数据, 相加 (取重复文本 (相减 (32, 取文本长度 (.)), “0”), .))
.如果真 (等于 (写块数据 (程序集_端口, ., 局部_数据), 0))
    子程序_消息显示 (相加 (“块数据写成功，数据为：”, 局部_数据))
    赋值 (程序集_操作结束, 真)
    赋值 (., 取反 (程序集_操作结束))
    返回 ()
.如果真结束
子程序_消息显示 (相加 (“块数据写失败,欲写入数据为：”, 局部_数据))
赋值 (程序集_操作结束, 真)
赋值 (., 取反 (程序集_操作结束))

.子程序 _时钟1_周期事件, 空白型, , 
赋值 (., 0)
.如果真 (等于 (寻卡 (程序集_端口), 1))
    赋值 (., 500)
    返回 ()
.如果真结束
_按钮_读块数据_被单击 ()
赋值 (., 500)


.子程序 _按钮_蜂鸣器鸣叫_被单击, 空白型, , 
.如果真 (端口未打开 ())
    返回 ()
.如果真结束
.如果真 (等于 (蜂鸣器控制 (程序集_端口, 0, 1), 0))
    子程序_消息显示 (“蜂鸣器控制成功”)
    返回 ()
.如果真结束
子程序_消息显示 (“蜂鸣器控制失败！”)


.子程序 _按钮_数码显示_被单击, 空白型, , 
.局部变量 局部_数码管显示, 文本型, , , 

 ' ---------------------相关说明--------------------------------
 ' Dll命令名：LED数码管显示
 ' 返回值为0，表示操作正确；为其它值时表示出错。
 ' 所处动态链接库的文件名：SCDLL32.dll
 ' 在所处动态链接库中的命令名：SC_LEDDSP
 ' 返回值类型：整数型
 ' 参数<1>的名称为“rHandle”，类型为“整数型”。注明：COM的句柄。
 ' 参数<2>的名称为“pData”，类型为“文本型”。注明：可以显示的数据，空格表示 不显示，0、1、2、3、4、5、6、7、8、9、A、B、C、D、E、F、b、c、H、h、L、n、N、o、P、P、r、t、U、-、=、y、j。
 ' 参数<3>的名称为“iDot”，类型为“整数型”。注明：小数点的位置，值为0 ~ 8  ，0表示不显示。
 ' ----------------------------------------------------------------------------
.如果真 (端口未打开 ())
    返回 ()
.如果真结束
.如果真 (等于 (程序集_操作结束, 假))
    子程序_消息显示 (“上步操作未结束，等待结束再操作！”)
    返回 ()
.如果真结束
赋值 (程序集_操作结束, 假)
赋值 (., 取反 (程序集_操作结束))
赋值 (局部_数码管显示, 取文本左边 (删首尾空 (.), 8))
赋值 (局部_数码管显示, 相加 (局部_数码管显示, 取重复文本 (相减 (8, 取文本长度 (局部_数码管显示)), “0”)))
.如果真 (等于 (LED数码管显示 (程序集_端口, 局部_数码管显示, .), 0))
    .判断开始 (不等于 (., 0))
        子程序_消息显示 (相加 (“LED数码管显示成功，数据为：”, 取文本左边 (局部_数码管显示, .), “.”, 取文本右边 (局部_数码管显示, 相减 (8, .))))
        子程序_显示数据 (相加 (取文本左边 (局部_数码管显示, .), “.”, 取文本右边 (局部_数码管显示, 相减 (8, .))))
        
    .默认
        子程序_消息显示 (相加 (“LED数码管显示成功，数据为：”, 取文本右边 (局部_数码管显示, 相减 (8, .))))
        子程序_显示数据 (取文本右边 (局部_数码管显示, 相减 (8, .)))
        
    .判断结束
    赋值 (程序集_操作结束, 真)
    赋值 (., 取反 (程序集_操作结束))
    返回 ()
.如果真结束
子程序_消息显示 (相加 (“LED数码管显示失败,欲显示数据为：”, 取文本左边 (局部_数码管显示, .), “.”, 取文本右边 (局部_数码管显示, 相减 (8, .))))
赋值 (程序集_操作结束, 真)
赋值 (., 取反 (程序集_操作结束))


.子程序 子程序_显示数据, 空白型, , 
.参数 参数_数码管显示, 文本型, , 

.局部变量 局部_变量, 整数型, , , 
.局部变量 局部_复制左边, 整数型, , , 
.局部变量 局部_目的左边, 整数型, , , 
.局部变量 局部_补差, 整数型, , , 
.局部变量 局部_当前文字, 文本型, , , 

 ' 画板显示设备连接信息，卡片信息等......
.清除 ()
.计次循环首 (取文本长度 (参数_数码管显示), 局部_变量)
    赋值 (局部_当前文字, 取文本中间 (参数_数码管显示, 局部_变量, 1))
    .判断开始 (并且 (大于或等于 (取代码 (局部_当前文字, ), 48), 小于或等于 (取代码 (局部_当前文字, ), 57)))
        赋值 (局部_复制左边, 相加 (相乘 (到数值 (局部_当前文字), 18), 1))
        赋值 (局部_目的左边, 相加 (相乘 (相减 (局部_变量, 1), 18), 局部_补差, 1))
        局部_复制左边.复制 (1, 16, 22, , 局部_目的左边, 1, )
    .判断 (等于 (局部_当前文字, “.”))
        赋值 (局部_目的左边, 相加 (局部_目的左边, 17))
        0.复制 (1, 5, 22, , 局部_目的左边, 1, )
        赋值 (局部_补差, -12)
    .默认
        1.定位写出 (1, 局部_当前文字)
        赋值 (局部_目的左边, 相加 (相乘 (相减 (局部_变量, 1), 18), 局部_补差, 1))
        0.复制 (1, 16, 22, , 局部_目的左边, 1, )
    .判断结束
    
.计次循环尾 ()

.子程序 _按钮_实时扫描_被单击, 空白型, , 
 ' 实时扫描端口
.如果真 (端口未打开 ())
    返回 ()
.如果真结束
.判断开始 (等于 (., “实时扫描”))
    子程序_消息显示 (“已开启实时扫描”)
    赋值 (., 500)
    赋值 (., “停止扫描”)
.默认
    赋值 (., “实时扫描”)
    子程序_消息显示 (“已停止实时扫描！”)
    赋值 (., 0)
.判断结束


.子程序 _组合框_文字颜色_列表项被选择, 空白型, , 
.判断开始 (等于 (., 0))
    赋值 (., #图片_红色字)
    赋值 (., #图片_红色点)
    赋值 (., #红色)
.默认
    赋值 (., #图片_绿色字)
    赋值 (., #图片_绿色点)
    赋值 (., #绿色)
.判断结束
_按钮_数码显示_被单击 ()

.子程序 _编辑框_数码显示_字符输入, 整数型, , 
.参数 字符代码, 整数型, , 

.局部变量 局部_变量, 整数型, , , 
.局部变量 局部_逻辑变量, 逻辑型, , , 

.如果真 (不等于 (字符代码, #退格键))
    .计次循环首 (取数组成员数 (程序集_允许显示文字), 局部_变量)
        .如果真 (等于 (取代码 (程序集_允许显示文字 [局部_变量], ), 字符代码))
            赋值 (局部_逻辑变量, 真)
            跳出循环 ()
        .如果真结束
        
    .计次循环尾 ()
    .如果真 (等于 (局部_逻辑变量, 假))
        子程序_消息显示 (“您输入的字符不能被显示到LED！”)
        返回 (0)
    .如果真结束
    
.如果真结束


.子程序 _按钮1_被单击, 空白型, , 
1.定位写出 (1, .)


.子程序 _组合框_小数点_列表项被选择, 空白型, , 
_组合框_文字颜色_列表项被选择 ()

.子程序 __启动窗口_可否被关闭, 逻辑型, , 
.如果真 (不等于 (程序集_端口, 0))
    关闭端口 (程序集_端口)
    赋值 (程序集_端口, 0)
.如果真结束


.子程序 __启动窗口_将被销毁, 空白型, , 
.如果真 (不等于 (程序集_端口, 0))
    关闭端口 (程序集_端口)
    赋值 (程序集_端口, 0)
.如果真结束


.子程序 _按钮_核对密钥1_被单击, 空白型, , 
.局部变量 局部_密钥, 文本型, , , 

 ' ---------------------相关说明--------------------------------
 ' Dll命令名：核对卡密钥
 ' 返回值为0，表示操作正确；为其它值时表示出错。
 ' 所处动态链接库的文件名：SCDLL32.dll
 ' 在所处动态链接库中的命令名：SC_EncryptAuth
 ' 返回值类型：整数型
 ' 参数<1>的名称为“rHandle”，类型为“整数型”。注明：COM的句柄。
 ' 参数<2>的名称为“iSector”，类型为“整数型”。注明：核对密钥的扇区号0~15 。
 ' 参数<3>的名称为“iMode”，类型为“整数型”。注明：卡密钥的类型及A密钥60或B密钥61，通常使用A密钥60，。
 ' 参数<4>的名称为“pKey”，类型为“文本型”。注明：卡密钥初始为12个FFFFFFFFFFFF 。
 ' --------------------------------------------------------------
.如果真 (端口未打开 ())
    返回 ()
.如果真结束
赋值 (局部_密钥, .)
.如果真 (等于 (., “”))
    赋值 (局部_密钥, 取重复文本 (12, “F”))
    赋值 (., 局部_密钥)
.如果真结束
.如果真 (等于 (更改密钥 (程序集_端口, 绝对取整 (相除 (., 4)), 局部_密钥), 0))
    子程序_消息显示 (相加 (到文本 (绝对取整 (相除 (., 4))), “扇区密钥更改成功，新密钥为：”, 局部_密钥))
    返回 ()
.如果真结束
子程序_消息显示 (相加 (到文本 (绝对取整 (相除 (., 4))), “扇区更改失败！”))



 ' 不属于任何一个程序集、类模块的函数：
