 ' 文件类型：Windows模块源码

 ' 程序名称：文件搜索
 ' 程序描述：文件搜索
@备注:
文件搜索
 ' 程序作者：李光
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：李光
 ' 版本号：1.0
 ' 创建号：0.0



.常量 搜索完毕, "0", 公开, 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 5 0 系统核心支持库




数据类型 多线程许可证, , 
    .成员 DebugInfo, 整数型, , , 
    .成员 LockCount, 整数型, , , 
    .成员 RecursionCount, 整数型, , , 
    .成员 OwningThread, 整数型, , , 
    .成员 LockSemaphore, 整数型, , , 
    .成员 SpinCount, 整数型, , , 

数据类型 WIN32_FIND_DATA, , 
    .成员 dwFileAttributes, 整数型, , , 
    .成员 ftCreationTime, FILETIME, , , 
    .成员 ftLastAccessTime, FILETIME, , , 
    .成员 ftLastWriteTime, FILETIME, , , 
    .成员 nFileSizeHigh, 整数型, , , 
    .成员 nFileSizeLow, 整数型, , , 
    .成员 dwReserved0, 整数型, , , 
    .成员 dwReserved1, 整数型, , , 
    .成员 cFileName, 字节型, , "260", 
    .成员 cAlternate, 字节型, , "14", 

数据类型 FILETIME, , 
    .成员 dwLowDateTime, 整数型, , , 
    .成员 dwHighDateTime, 整数型, , , 

.全局变量 全局变量_枚举文件_根目录, 文本型, , , 
.全局变量 全局变量_枚举文件_通知函数, 整数型, , , 
.全局变量 全局变量_寻找文件_文件名, 文本型, , , 
.全局变量 全局变量_寻找文件_搜索目录, 文本型, , , 
.全局变量 全局变量_寻找文件_通知函数, 整数型, , , 
.全局变量 全局变量_寻找文件_逻辑分区, 文本型, , "0", 
.全局变量 全局变量_寻找文件_是否模糊搜索, 逻辑型, , , 

.DLL命令 InitializeCriticalSection, 空白型, "kernel32", "", , 创建许可证
    .参数 lpCriticalSection, 多线程许可证, 传址, 

.DLL命令 DeleteCriticalSection, 空白型, "kernel32", "", , 删除许可证
    .参数 lpCriticalSection, 多线程许可证, 传址, 

.DLL命令 EnterCriticalSection, 空白型, "kernel32", "", , 进入许可区
    .参数 lpCriticalSection, 多线程许可证, 传址, 

.DLL命令 LeaveCriticalSection, 空白型, "kernel32", "", , 退出许可区
    .参数 lpCriticalSection, 多线程许可证, 传址, 

.DLL命令 CreateThread, 整数型, "kernel32", "", , 启动线程
    .参数 lpThreadAttributes, 整数型, , 
    .参数 dwStackSize, 整数型, , 
    .参数 lpStartAddress, 子程序指针, , 
    .参数 lpParameter, 整数型, , 
    .参数 dwCreationFlags, 整数型, , 
    .参数 lpThreadId, 整数型, 传址, 

.DLL命令 CloseHandle, 整数型, "kernel32", "CloseHandle", , 
    .参数 hObject, 整数型, , 

.DLL命令 WaitForSingleObject, 整数型, "kernel32", "WaitForSingleObject", , 监测一个对象
    .参数 hHandle, 整数型, , 
    .参数 dwMilliseconds, 整数型, , 

.DLL命令 SuspendThread, 整数型, "kernel32", "SuspendThread", , 挂起线索
    .参数 hThread, 整数型, , 

.DLL命令 TerminateThread, 整数型, "kernel32", "TerminateThread", , 中止线索
    .参数 hThread, 整数型, , 
    .参数 dwExitCode, 整数型, , 

.DLL命令 ResumeThread, 整数型, "kernel32", "ResumeThread", , 开始暂停的线索
    .参数 hThread, 整数型, , 

.DLL命令 GetExitCodeThread, 整数型, "kernel32", "GetExitCodeThread", , 
    .参数 hThread, 整数型, , 
    .参数 lpExitCode, 整数型, 传址, 

.DLL命令 lstrcpyn, 整数型, "", "lstrcpynA", , 
    .参数 lpString1, 文本型, 传址, 
    .参数 lpString2, 文本型, 传址, 
    .参数 iMaxLength, 整数型, , 

.DLL命令 RtlMoveMemory, 整数型, "", "RtlMoveMemory", , 
    .参数 Destination, 整数型, , 
    .参数 Source, 整数型, , 
    .参数 Length, 整数型, , 

.DLL命令 FindFirstFile, 整数型, "", "FindFirstFileA", , 
    .参数 lpFileNam, 文本型, , 
    .参数 lpFindFileData, WIN32_FIND_DATA, , 

.DLL命令 FindNextFile, 整数型, "", "FindNextFileA", , 
    .参数 hFindFile, 整数型, , 
    .参数 lpFindFileData, WIN32_FIND_DATA, , 

.DLL命令 FindClose, 整数型, "", "FindClose", , 
    .参数 hFindFile, 整数型, , 

.程序集 程序集1, , , 

.子程序 _启动子程序, 整数型, , 请在本子程序中放置易模块初始化代码

_临时子程序 () ' 在初始化代码执行完毕后调用测试代码
返回 (0) ' 可以根据您的需要返回任意数值

.子程序 _临时子程序, 空白型, , 
 ' 本名称子程序用作测试程序用，仅在开发及调试环境中有效，编译发布程序前将被系统自动清空，请将所有用作测试的临时代码放在本子程序中。 ***注意不要修改本子程序的名称、参数及返回值类型。


.类模块 文件搜索, , , 

.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用
 ' --========  易语言资源网  (www.5A5X.com)  ======--
 ' 努力创建完善、持续更新的易语言学习例程源码资源站
 ' --================   www.5A5X.com  ===========--
 ' --==================   易语言资源网注意事项  ================--
 ' * 易语言资源网为易语言官方站、易语言官方论坛提供辅助资源站；
 ' 本易语言资源网( www.5A5X.com)所有软件和资料均为软件作者提
 ' 供和网友推荐发布而来，其版权归该软件和程序源码的合法拥有者所
 ' 有，本站易语言资源网整理收集仅供易语言用户学习和易语言技术研
 ' 究探讨使用，不得用于任何商业用途。如果由于以上原因造成的版权
 ' 纠纷本站概不负责！
 ' * 本站资源未经许可，任何网站不得非法盗链及抄袭本站资源；如引用
 ' 页面，请注明来自易语言资源网，谢谢合作！
 ' --=====================   www.5A5X.com  ================--


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 枚举文件, 逻辑型, 公开, 枚举指定目录中的所有文件(包括子目录里的文件)
.参数 根目录, 文本型, , 本参数指定搜索目录
.参数 通知函数, 子程序指针, , 找到文件后系统自动调用该函数通知 , 该函数带有两个整型参数 用于取回结果 ,如果第一个参数为 0 则代表搜索完毕

.如果真 (并且 (不等于 (取文本右边 (根目录, 1), “\”), 不等于 (取文本右边 (根目录, 1), “/”)))
    赋值 (根目录, 相加 (根目录, “\”))
.如果真结束
赋值 (全局变量_枚举文件_根目录, 根目录)
赋值 (全局变量_枚举文件_通知函数, 到整数 (通知函数))
返回 (启动线程 (&枚举文件_线程))

.子程序 寻找文件, 逻辑型, 公开, 寻找指定文件
.参数 文件名, 文本型, , 欲寻找的文件名
.参数 搜索目录, 文本型, 可空, 指定搜索目录, 如果留空则全盘搜索
.参数 通知函数, 子程序指针, , 找到文件后系统自动调用该函数通知 , 该函数带有两个整型参数 用于取回结果 ,如果第一个参数为 0 则代表搜索完毕
.参数 是否模糊搜索, 逻辑型, 可空, 搜索包含参数一中提供文本的全部文件

.局部变量 h, 整数型, , , 
.局部变量 i, 整数型, , , 
.局部变量 WIN32_FIND_DATA, WIN32_FIND_DATA, , , 

.如果真 (或者 (等于 (文件名, “”), 大于 (取数组成员数 (全局变量_寻找文件_逻辑分区), 0)))
    返回 (假)
.如果真结束
赋值 (全局变量_寻找文件_文件名, 到小写 (文件名))
赋值 (全局变量_寻找文件_搜索目录, 搜索目录)
赋值 (全局变量_寻找文件_通知函数, 到整数 (通知函数))
赋值 (全局变量_寻找文件_是否模糊搜索, 是否模糊搜索)
.如果 (等于 (是否为空 (搜索目录), 真))
    .变量循环首 (97, 122, 1, i)
        赋值 (h, FindFirstFile (相加 (字符 (i), “:\*”), WIN32_FIND_DATA))
        .如果真 (不等于 (h, -1))
            加入成员 (全局变量_寻找文件_逻辑分区, 相加 (字符 (i), “:\”))
            启动线程 (&寻找文件_线程_, 取数组成员数 (全局变量_寻找文件_逻辑分区))
            FindClose (h)
        .如果真结束
         ' 本源码来自易语言资源网(www.5A5X.com)
    .变量循环尾 ()
    返回 (真)
.否则
    返回 (启动线程 (&寻找文件_线程))
.如果结束


.子程序 取回搜索结果, 文本型, 公开, 在通知函数中通过本方法取回结果
.参数 内存地址, 整数型, , 通知函数的参数一
.参数 数据长度, 整数型, , 通知函数的参数二

.局部变量 结果, 文本型, , , 

赋值 (结果, 取空白文本 (512))
RtlMoveMemory (lstrcpyn (结果, 结果, 0), 内存地址, 数据长度)
返回 (删首尾空 (结果))

.程序集 程序集2, , , 

.程序集变量 寻找文件_线程_x, 整数型, , , 
.子程序 枚举文件_线程, 空白型, , 
枚举文件 (全局变量_枚举文件_根目录, 全局变量_枚举文件_通知函数)
call (全局变量_枚举文件_通知函数, #搜索完毕, 0)

.子程序 枚举文件, 空白型, , 
.参数 根目录, 文本型, , 
.参数 通知函数, 整数型, , 

.局部变量 结果, 文本型, , , 
.局部变量 h, 整数型, , , 
.局部变量 WIN32_FIND_DATA, WIN32_FIND_DATA, , , 
.局部变量 s, 整数型, , , 

赋值 (h, FindFirstFile (相加 (根目录, “*”), WIN32_FIND_DATA))
.如果真 (等于 (h, -1))
    返回 ()
.如果真结束
赋值 (s, 1)
.判断循环首 (不等于 (s, 0))
    .如果真 (并且 (不等于 (到文本 (WIN32_FIND_DATA.cFileName), “.”), 不等于 (到文本 (WIN32_FIND_DATA.cFileName), “..”)))
        .如果真 (不等于 (位与 (WIN32_FIND_DATA.dwFileAttributes, 32), 0))
            .如果真 (不等于 (到文本 (WIN32_FIND_DATA.cFileName), “”))
                赋值 (结果, 相加 (根目录, 到文本 (WIN32_FIND_DATA.cFileName)))
                call (通知函数, lstrcpyn (结果, 结果, 0), 取文本长度 (结果))
            .如果真结束
             ' 本源码来自易语言资源网(www.5A5X.com)
        .如果真结束
        .如果真 (不等于 (位与 (WIN32_FIND_DATA.dwFileAttributes, 16), 0))
            枚举文件 (相加 (根目录, 到文本 (WIN32_FIND_DATA.cFileName), “\”), 通知函数)
        .如果真结束
        
    .如果真结束
    赋值 (s, FindNextFile (h, WIN32_FIND_DATA))
.判断循环尾 ()
FindClose (h)


.子程序 寻找文件_线程, 空白型, , 
_寻找文件 (全局变量_寻找文件_文件名, 全局变量_寻找文件_搜索目录, 全局变量_寻找文件_通知函数)
call (全局变量_寻找文件_通知函数, #搜索完毕, 0)

.子程序 寻找文件_线程_, 空白型, , 
.参数 参数, 整数型, , 

延时 (50)
_寻找文件 (全局变量_寻找文件_文件名, 全局变量_寻找文件_逻辑分区 [参数], 全局变量_寻找文件_通知函数)
赋值 (寻找文件_线程_x, 相加 (寻找文件_线程_x, 1))
.如果真 (等于 (寻找文件_线程_x, 取数组成员数 (全局变量_寻找文件_逻辑分区)))
    call (全局变量_寻找文件_通知函数, #搜索完毕, 0)
    清除数组 (全局变量_寻找文件_逻辑分区)
.如果真结束
 ' 本源码来自易语言资源网(www.5A5X.com)

.子程序 _寻找文件, 空白型, , 
.参数 文件名, 文本型, , 
.参数 根目录, 文本型, , 
.参数 通知函数, 整数型, , 

.局部变量 结果, 文本型, , , 
.局部变量 h, 整数型, , , 
.局部变量 WIN32_FIND_DATA, WIN32_FIND_DATA, , , 
.局部变量 s, 整数型, , , 

赋值 (h, FindFirstFile (相加 (根目录, “*”), WIN32_FIND_DATA))
.如果真 (等于 (h, -1))
    返回 ()
.如果真结束
赋值 (s, 1)
.判断循环首 (不等于 (s, 0))
    .如果真 (并且 (不等于 (到文本 (WIN32_FIND_DATA.cFileName), “.”), 不等于 (到文本 (WIN32_FIND_DATA.cFileName), “..”)))
        .如果真 (不等于 (位与 (WIN32_FIND_DATA.dwFileAttributes, 32), 0))
            .如果 (等于 (全局变量_寻找文件_是否模糊搜索, 真))
                
                .如果真 (不等于 (寻找文本 (到文本 (WIN32_FIND_DATA.cFileName), 文件名, , 假), -1))
                    赋值 (结果, 相加 (根目录, 到文本 (WIN32_FIND_DATA.cFileName)))
                    call (通知函数, lstrcpyn (结果, 结果, 0), 取文本长度 (结果))
                .如果真结束
                
            .否则
                .如果真 (等于 (到小写 (到文本 (WIN32_FIND_DATA.cFileName)), 文件名))
                    赋值 (结果, 相加 (根目录, 到文本 (WIN32_FIND_DATA.cFileName)))
                    call (通知函数, lstrcpyn (结果, 结果, 0), 取文本长度 (结果))
                .如果真结束
                
            .如果结束
            
        .如果真结束
        .如果真 (不等于 (位与 (WIN32_FIND_DATA.dwFileAttributes, 16), 0))
            _寻找文件 (文件名, 相加 (根目录, 到文本 (WIN32_FIND_DATA.cFileName), “\”), 通知函数)
        .如果真结束
        
    .如果真结束
    赋值 (s, FindNextFile (h, WIN32_FIND_DATA))
.判断循环尾 ()
FindClose (h)
' 本源码来自易语言资源网(www.5A5X.com)

.子程序 call, 整数型, , 
.参数 参数, 整数型, , 
.参数 参数一, 整数型, , 
.参数 参数二, 整数型, , 

置入代码 ({ 201, 88, 135, 4, 36, 255, 224 })
返回 (0)

.程序集 程序集_线程操作, , , 

.子程序 启动线程, 逻辑型, , 
.参数 欲执行的子程序, 子程序指针, , 
.参数 参数数据, 整数型, 可空, 
.参数 线程句柄, 整数型, 参考 可空, 

.局部变量 句柄, 整数型, , , 

赋值 (句柄, CreateThread (0, 0, 欲执行的子程序, 参数数据, 0, 0))
.如果 (是否为空 (线程句柄))
    CloseHandle (句柄)
.否则
    赋值 (线程句柄, 句柄)
.如果结束
返回 (不等于 (句柄, 0))

.子程序 创建进入许可证, 多线程许可证, , 
.局部变量 x, 多线程许可证, 静态, , 

InitializeCriticalSection (x)
返回 (x)

.子程序 删除进入许可证, 空白型, , 
.参数 进入许可证, 多线程许可证, , 

DeleteCriticalSection (进入许可证)

.子程序 进入许可区, 空白型, , 
.参数 进入许可证, 多线程许可证, , 

EnterCriticalSection (进入许可证)

.子程序 退出许可区, 空白型, , 
.参数 进入许可证, 多线程许可证, , 

LeaveCriticalSection (进入许可证)

.子程序 强制结束线程, 逻辑型, , 
.参数 线程句柄, 整数型, , 

.如果真 (不等于 (TerminateThread (线程句柄, 0), 0))
    返回 (真)
.如果真结束
返回 (假)


 ' 不属于任何一个程序集、类模块的函数：
