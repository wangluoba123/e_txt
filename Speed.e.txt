 ' 文件类型：未知类型

 ' 程序名称：易你速度 V1.0
 ' 程序描述：    易你速度是用易语言开发的一个测试电脑速度的程式。

    虽然没有专业测试软件那么专业，也还可以知道自己的电脑速度如何，有对比啊，我这里的电脑不太强劲，数据库还得更新才完整。

    易语言是中国人自己的语言

         为什么
      2001年11月10日
 ' 程序作者：为什么
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：superpc@sohu.com
 ' 主页地址：
 ' 版权声明：2001年11月10日 V1.0
 ' 版本号：1.0
 ' 创建号：0.0


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 1 9 系统核心支持库



窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 340
    高度 = 254
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = 15790335 '  0xF0F0FF
    最大化按钮 = 假
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 真
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “易你速度”
    帮助文件名 = “”

窗口 保存窗口
    左边 = 50
    顶边 = 50
    宽度 = 200
    高度 = 149
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = 15790335 '  0xF0F0FF
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 假
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 假
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “添加到数据库”
    帮助文件名 = “”



.常量 数据库1, "“Speed”", , 
.常量 CPU, "“CPU”", , 
.常量 Memory, "“Memory”", , 
.常量 Fast, "“Fast”", , 
.常量 standard, "“standard”", , 
.常量 precise, "“precise”", , 


.全局变量 快速得分, 整数型, , , 
.全局变量 标准得分, 整数型, , , 
.全局变量 精确得分, 整数型, , , 

.窗口程序集 窗口程序集1, , , 

.子程序 __启动窗口_创建完毕, 空白型, , 
.局部变量 b, 逻辑型, , , 是否打开数据库
.局部变量 记录数, 整数型, , , 数据库中的记录数
.局部变量 i, 整数型, , , 
.局部变量 n, 整数型, , , 
.局部变量 空格数, 文本型, , , 字段不够长补空格数
.局部变量 记录内容, 文本型, , , CPU型号和内存两个字段的内容

 ' 打开数据库，判断是否成功
赋值 (b, 打开 (“speed.edb”, , , , , , ))
.如果真 (等于 (b, 假))
    信息框 (“没有数据库，请重新下载”, 0, “出错啦！”)
    结束 ()
.如果真结束

 ' 检察在本机上是否运行过，成绩如何
.如果 (等于 (读 (#Fast), 0))
    赋值 (., “未测”)
.否则
    赋值 (., 数值到格式文本 (读 (#Fast), , 假))
    赋值 (快速得分, 到数值 (.))
.如果结束

.如果 (等于 (读 (#standard), 0))
    赋值 (., “未测”)
.否则
    赋值 (., 数值到格式文本 (读 (#standard), , 假))
    赋值 (标准得分, 到数值 (.))
.如果结束

.如果 (等于 (读 (#precise), 0))
    赋值 (., “未测”)
.否则
    赋值 (., 数值到格式文本 (读 (#precise), , 假))
    赋值 (精确得分, 到数值 (.))
.如果结束

 ' 在编辑框中填入数据库中已有的电脑信息
赋值 (记录数, 取记录数 ())
.如果 (大于 (记录数, 9))
    赋值 (., 2)
.否则
    赋值 (., 0)
.如果结束

.如果真 (大于 (记录数, 1))
    到首记录 ()
    跳到 (2)
    .判断循环首 (不等于 (取记录号 (), 相加 (记录数, 1)))
        赋值 (空格数, “”)
        赋值 (n, 相减 (13, 取文本长度 (读 (#CPU))))
        .计次循环首 (n, i)
            赋值 (空格数, 相加 (空格数, “ ”))
        .计次循环尾 ()
        赋值 (记录内容, 相加 (读 (#CPU), 空格数))
        赋值 (空格数, “”)
        赋值 (n, 相减 (13, 取文本长度 (读 (#Memory))))
        .计次循环首 (n, i)
            赋值 (空格数, 相加 (空格数, “ ”))
        .计次循环尾 ()
        赋值 (记录内容, 相加 (记录内容, 读 (#Memory), 空格数))
        赋值 (., 相加 (., 记录内容, 数值到格式文本 (读 (#Fast), , 假), “  ”, 数值到格式文本 (读 (#standard), , 假), “  ”, 数值到格式文本 (读 (#precise), , 假), #换行符))
        跳过 ()
    .判断循环尾 ()
    
.如果真结束


.子程序 _退出钮_被单击, 空白型, , 退出程序
结束 ()

.子程序 _开始钮_被单击, 空白型, , 
赋值 (., 真)
赋值 (., 0)
开始测试 ()

.子程序 开始测试, 空白型, , 
.局部变量 i, 整数型, , , 循环变量
.局部变量 j, 整数型, , , 循环变量
.局部变量 t, 整数型, , , 运算变量
.局部变量 模式, 短整数型, , , 1为快速模式，2为标准模式，3为精确模式，缺省为2
.局部变量 次数, 整数型, , , 运算次数
.局部变量 得分, 整数型, , , 此次测试得分
.局部变量 开始时间, 整数型, , , 测试的起始时间
.局部变量 用时, 整数型, , , 测试用的时间
.局部变量 存数据, 整数型, , , 是否存入数据库

 ' 确定模式及相应的次数
置等待鼠标 ()
.如果 (等于 (., 真))
    赋值 (模式, 1)
.否则
    .如果 (等于 (., 真))
        赋值 (模式, 3)
    .否则
        赋值 (模式, 2)
    .如果结束
    
.如果结束
赋值 (次数, 相乘 (1000, 求次方 (10, 模式)))
赋值 (i, 1)
赋值 (j, 1)
赋值 (开始时间, 取启动时间 ())

 ' 加法运算
赋值 (j, 相乘 (相除 (次数, 100), 4))
.变量循环首 (1, 次数, 1, i)
    .如果真 (等于 (求余数 (i, j), 0))
        赋值 (., 相加 (., 1))
    .如果真结束
    
.变量循环尾 ()

 ' 减法运算
赋值 (t, 次数)
.变量循环首 (1, 次数, 1, i)
    赋值 (t, 相减 (t, 1))
    .如果真 (等于 (求余数 (i, j), 0))
        赋值 (., 相加 (., 1))
    .如果真结束
    
.变量循环尾 ()

 ' 乘法运算
赋值 (t, 1)
.变量循环首 (1, 次数, 1, i)
    赋值 (t, 相乘 (t, t))
    .如果真 (等于 (求余数 (i, j), 0))
        赋值 (., 相加 (., 1))
    .如果真结束
    
.变量循环尾 ()

 ' 除法运算
赋值 (t, 1)
.变量循环首 (1, 次数, 1, i)
    赋值 (t, 相除 (t, t))
    .如果真 (等于 (求余数 (i, j), 0))
        赋值 (., 相加 (., 1))
    .如果真结束
    
.变量循环尾 ()

 ' 计算用时及得分
赋值 (相减 (取启动时间 (), 开始时间))
赋值 (得分, 取整 (相除 (相乘 (次数, 4, 1000), 用时)))
恢复鼠标 ()

 ' 是否添加此次测试结果到数据库，如果是则加入数据库
赋值 (存数据, 信息框 (相加 (“测试完毕，得分是 ”, 数值到格式文本 (得分, , 假), #换行符, #换行符, “确定更新数据”), 1, “测试完毕”))
.如果真 (等于 (存数据, 0))
    到首记录 ()
    .如果 (等于 (模式, 1))
        写 (#Fast, 得分)
        赋值 (快速得分, )
        赋值 (., 数值到格式文本 (假))
        
    .否则
        .如果 (等于 (模式, 3))
            写 (#precise, 得分)
            赋值 (精确得分, )
            赋值 (., 数值到格式文本 (假))
            
        .否则
            写 (#standard, 得分)
            赋值 (标准得分, )
            赋值 (., 数值到格式文本 (假))
        .如果结束
        
    .如果结束
    
.如果真结束
赋值 (., 假)


.子程序 _保存钮_被单击, 空白型, , 将本机所测结果加入数据库，三项均测才可加入
.如果 (并且 (不等于 (快速得分, 0), 不等于 (标准得分, 0), 不等于 (精确得分, 0)))
    载入 (保存窗口, _启动窗口, 真)
.否则
    信息框 (“测试未完成，请测试完所有项目”, 0, “测试不完全”)
    
.如果结束


.窗口程序集 窗口程序集2, , , 

.子程序 _取消钮_被单击, 空白型, , 
保存窗口.销毁 ()

.子程序 _保存钮_被单击, 空白型, , 
.局部变量 记录数, 整数型, , , 数据库中的记录数
.局部变量 i, 整数型, , , 
.局部变量 n, 整数型, , , 
.局部变量 空格数, 文本型, , , 字段不够长补空格数
.局部变量 记录内容, 文本型, , , CPU型号和内存两个字段

 ' 添加本机测试数据到数据库
加记录 (., ., 快速得分, 标准得分, 精确得分)

 ' 在启动窗口中显示更新后数据库中的数据
赋值 (记录数, 取记录数 ())
.如果 (大于 (9))
    赋值 (_启动窗口.., 2)
.否则
    赋值 (_启动窗口.., 0)
.如果结束
赋值 (_启动窗口.., “”)
.如果真 (大于 (1))
    到首记录 ()
    跳到 (2)
    .判断循环首 (不等于 (取记录号 (), 相加 (1)))
        赋值 (“”)
        赋值 (n, 相减 (13, 取文本长度 (读 (#CPU))))
        .计次循环首 (n, i)
            赋值 (相加 (“ ”))
        .计次循环尾 ()
        赋值 (记录内容, 相加 (读 (#CPU), 空格数))
        赋值 (“”)
        赋值 (n, 相减 (13, 取文本长度 (读 (#Memory))))
        .计次循环首 (n, i)
            赋值 (相加 (“ ”))
        .计次循环尾 ()
        赋值 (相加 (读 (#Memory), ))
        赋值 (_启动窗口.., 相加 (_启动窗口.., 记录内容, 数值到格式文本 (读 (#Fast), , 假), “  ”, 数值到格式文本 (读 (#standard), , 假), “  ”, 数值到格式文本 (读 (#precise), , 假), #换行符))
        跳过 ()
    .判断循环尾 ()
    
.如果真结束
刷新显示 ()
保存窗口.销毁 ()


 ' 不属于任何一个程序集、类模块的函数：
