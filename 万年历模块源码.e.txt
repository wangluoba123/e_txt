 ' 文件类型：Windows模块源码

 ' 程序名称：云外归鸟万年历函数集
 ' 程序描述：公元前850年到公元2100年
的万年历函数集、四柱反推和太阳真时校正
 ' 程序作者：云外归鸟
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：             易语言资源网注意事项
--============   www.wodesoft.com  =============--
* 易语言资源网为易语言官方站、易语言官方论坛提供辅助资源站；本易语言资源网( www.wodesoft.com)所有软件和资料均为软件作者提供和网友推荐发布而来，其版权归该软件和程序源码的合法拥有者所有，本站易语言资源网整理收集仅供易语言用户学习和易语言技术研究探讨使用，不得用于任何商业用途。如果由于以上原因造成的版权纠纷本站概不负责！
* 本站资源未经许可,任何网站不得非法盗链及抄袭本站资源；如引用，请注明来自易语言资源网，谢谢合作！
--============   www.wodesoft.com  =============--
 ' 版本号：1.0
 ' 创建号：0.0





 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 5 0 系统核心支持库
 ' ADODB 8D8064EE88394a8f966D46CFAC61F974 1 4 ADO数据库操作支持库





.程序集 程序集1, , , 

.程序集变量 日历类型, 整数型, , , 
.子程序 _启动子程序, 整数型, , 请在本子程序中放置易模块初始化代码
 ' --========  易语言资源网  (www.wodesoft.com)  ======--
 ' 努力创建完善、持续更新的易语言学习例程源码资源站
 ' --================   www.wodesoft.com  ===========--
 ' --==================   易语言资源网注意事项  ================--
 ' * 易语言资源网为易语言官方站、易语言官方论坛提供辅助资源站；
 ' 本易语言资源网( www.wodesoft.com)所有软件和资料均为软件作者提
 ' 供和网友推荐发布而来，其版权归该软件和程序源码的合法拥有者所
 ' 有，本站易语言资源网整理收集仅供易语言用户学习和易语言技术研
 ' 究探讨使用，不得用于任何商业用途。如果由于以上原因造成的版权
 ' 纠纷本站概不负责！
 ' * 本站资源未经许可，任何网站不得非法盗链及抄袭本站资源；如引用
 ' 页面，请注明来自易语言资源网，谢谢合作！
 ' --=====================   www.wodesoft.com  ================--

赋值 (日历类型, 1) ' 标准公历

_临时子程序 () ' 在初始化代码执行完毕后调用测试代码
返回 (0) ' 可以根据您的需要返回任意数值

.子程序 _临时子程序, 空白型, , 
.局部变量 y, 整数型, , , 
.局部变量 m, 整数型, , , 
.局部变量 d, 整数型, , , 
.局部变量 h, 整数型, , , 
.局部变量 txt, 文本型, , , 

 ' 本名称子程序用作测试程序用，仅在开发及调试环境中有效，编译发布程序前将被系统自动清空，请将所有用作测试的临时代码放在本子程序中。 ***注意不要修改本子程序的名称、参数及返回值类型。
 ' 载入 (_启动窗口, , 真)
输出调试文本 (地名校正真太阳时 (2005, 1, 2, 3, 45, “南宁”, txt, 相加 (取运行目录 (), “\city_ll.mdb”)), 真)
输出调试文本 (txt)

.子程序 公历转农历, 空白型, 公开, 
.参数 公历年, 空白型, , 
.参数 公历月, 空白型, , 
.参数 公历日, 空白型, , 
.参数 公历时, 空白型, , 
.参数 转换后农历年, 空白型, 参考, 结果存放在参数变量里
.参数 转换后农历月, 空白型, 参考, 结果存放在参数变量里
.参数 转换后农历日, 空白型, 参考, 结果存放在参数变量里
.参数 转换后是否闰月, 逻辑型, 参考, 结果存放在参数变量里

.局部变量 万年历, 中国日历类, , , 
.局部变量 农历, 农历子类, , , 

.如果真 (小于 (公历年, -849))
    赋值 (公历年, -849)
.如果真结束
.如果真 (大于 (公历年, 2100))
    赋值 (公历年, 2100)
.如果真结束
.如果真 (等于 (公历时, 23)) ' 23时已经农历的下一天
    赋值 (公历日, 相加 (公历日, 1))
    .如果真 (大于 (公历日, 相减 (D0 (公历年, 相加 (公历月, 1), 1, 日历类型), D0 (公历年, 公历月, 1, 日历类型))))
        赋值 (公历月, 相加 (公历月, 1))
        .如果真 (等于 (公历月, 13))
            赋值 (公历年, 相加 (公历年, 1))
            赋值 (公历月, 1)
        .如果真结束
        赋值 (公历日, 1)
    .如果真结束
    
.如果真结束
 ' 本源码来自易语言资源网(www.wodesoft.com)
万年历.CCC (公历年, 公历月, 公历日, , , 日历类型) ' 创建这个类
赋值 (农历, 万年历.取农历类 ())
赋值 (转换后农历月, 农历.取农历月 ())

.如果 (小于 (转换后农历月, 0))
    赋值 (转换后是否闰月, 真)
    赋值 (转换后农历月, 取绝对值 (转换后农历月))
.否则
    赋值 (转换后是否闰月, 假)
.如果结束
赋值 (转换后农历日, 农历.取农历日 ())
赋值 (转换后农历年, 公历年)
.如果真 (大于 (转换后农历月, 公历月)) ' 跨年
    赋值 (转换后农历年, 相减 (转换后农历年, 1))
.如果真结束


.子程序 农历转公历, 逻辑型, 公开, 
.参数 农历年, 空白型, , 农历年这个提法不科学，不过这里算做和公历年重合的那年
.参数 农历月, 空白型, , 
.参数 农历日, 空白型, , 
.参数 是否闰月, 逻辑型, , 
.参数 转换后公历年, 空白型, 参考, 结果存放在参数变量里
.参数 转换后公历月, 空白型, 参考, 结果存放在参数变量里
.参数 转换后公历日, 空白型, 参考, 结果存放在参数变量里

.局部变量 万年历, 中国日历类, , , 
.局部变量 农历, 农历子类, , , 
.局部变量 闰月, 空白型, , , 
.局部变量 方向, 空白型, , , 0为正中,-1为向前,1为向后
.局部变量 月, 空白型, , , 
.局部变量 日, 空白型, , , 
.局部变量 成功, 逻辑型, , , 

.如果真 (小于 (农历年, -849))
    赋值 (农历年, -849)
.如果真结束
.如果真 (大于 (农历年, 2100))
    赋值 (农历年, 2100)
.如果真结束

.如果真 (是否闰月)
    赋值 (闰月, 取农历闰月 (农历年))
    .如果真 (不等于 (闰月, 农历月)) ' 该年没有这个闰月
        赋值 (是否闰月, 假)
    .如果真结束
    
.如果真结束
.如果真 (等于 (粗略农历转公历 (农历年, 农历月, 农历日, 是否闰月, 转换后公历年, 转换后公历月, 转换后公历日), 假))
    返回 (假)
.如果真结束
万年历.CCC (转换后公历年, 转换后公历月, 转换后公历日, , , 日历类型) ' 检验结果
赋值 (农历, 万年历.取农历类 ())
赋值 (月, 取绝对值 (农历.取农历月 ()))
赋值 (日, 农历.取农历日 ())
.如果 (不等于 (月, 农历月))
    .如果 (或者 (大于 (相减 (月, 农历月), 0), 并且 (等于 (月, 1), 等于 (农历月, 12))))
        赋值 (方向, -1)
    .否则
        赋值 (方向, 1)
    .如果结束
    
.否则
    .如果真 (不等于 (日, 农历日))
        .如果 (大于 (相减 (日, 农历日), 0))
            赋值 (方向, -1)
        .否则
            赋值 (方向, 1)
        .如果结束
         ' 本源码来自易语言资源网(www.wodesoft.com)
    .如果真结束
    
.如果结束
.如果真 (不等于 (方向, 0))
    
    .计次循环首 (12, ) ' 误差修正在12天内
        赋值 (转换后公历日, 相加 (转换后公历日, 方向))
        往前搜
        .如果真 (等于 (转换后公历日, 0))
            赋值 (转换后公历月, 相减 (转换后公历月, 1))
            .如果真 (等于 (转换后公历月, 0))
                赋值 (转换后公历年, 相减 (转换后公历年, 1))
                赋值 (转换后公历月, 12)
            .如果真结束
            赋值 (转换后公历日, 相减 (D0 (转换后公历年, 相加 (转换后公历月, 1), 1, 日历类型), D0 (转换后公历年, 转换后公历月, 1, 日历类型)))
        .如果真结束
        往后搜
        .如果真 (大于 (转换后公历日, 相减 (D0 (转换后公历年, 相加 (转换后公历月, 1), 1, 日历类型), D0 (转换后公历年, 转换后公历月, 1, 日历类型))))
            赋值 (转换后公历月, 相加 (转换后公历月, 1))
            .如果真 (等于 (转换后公历月, 13))
                赋值 (转换后公历年, 相加 (转换后公历年, 1))
                赋值 (转换后公历月, 1)
            .如果真结束
            赋值 (转换后公历日, 1)
            
        .如果真结束
        
        万年历.CCC (转换后公历年, 转换后公历月, 转换后公历日, , , 日历类型) ' 检验结果
        赋值 (农历, 万年历.取农历类 ())
        赋值 (月, 取绝对值 (农历.取农历月 ()))
        赋值 (日, 农历.取农历日 ())
        .如果真 (并且 (等于 (月, 农历月), 等于 (日, 农历日)))
            赋值 (成功, 真)
            跳出循环 ()
        .如果真结束
        
    .计次循环尾 ()
    返回 (成功)
.如果真结束
返回 (真)

.子程序 粗略农历转公历, 逻辑型, , 
.参数 农历年, 空白型, , 
.参数 农历月, 空白型, , 
.参数 农历日, 空白型, , 
.参数 是否闰月, 逻辑型, , 
.参数 转换后公历年, 空白型, 参考, 
.参数 转换后公历月, 空白型, 参考, 
.参数 转换后公历日, 空白型, 参考, 

.局部变量 无闰月在内1, 逻辑型, , , 
.局部变量 无闰月在内, 逻辑型, , , 
.局部变量 农历闰月, 空白型, , , 
.局部变量 转换到公历日差天数, 空白型, , , 
.局部变量 基准农历日, 空白型, , , 
.局部变量 基准农历月, 空白型, , , 
.局部变量 农历, 农历子类, , , 
.局部变量 基准公历, 中国日历类, , , 
.局部变量 月日, 空白型, , , 


赋值 (农历闰月, 取农历闰月 (农历年))
.如果真 (小于或等于 (农历月, 农历闰月))
    赋值 (无闰月在内, 真)
    .如果真 (并且 (等于 (农历月, 农历闰月), 是否闰月))
        赋值 (无闰月在内, 假)
    .如果真结束
    
.如果真结束
基准公历.CCC (农历年, 6, 1, , , 日历类型) ' 选在6月1日为标准,在这一天农历年和公历年肯定一致
赋值 (农历, 基准公历.取农历类 ())
赋值 (基准农历月, 农历.取农历月 ())
赋值 (基准农历日, 农历.取农历日 ())
.如果真 (小于或等于 (取绝对值 (基准农历月), 农历闰月))
    赋值 (无闰月在内1, 大于 (基准农历月, 0)) ' 有无闰月
.如果真结束
赋值 (基准农历月, 取绝对值 (基准农历月))
赋值 (转换到公历日差天数, 相加 (相减 (D0 (农历年, 6, 1, 日历类型), 粗略农历日差天数 (基准农历月, 基准农历日, 无闰月在内1)), 粗略农历日差天数 (农历月, 农历日, 无闰月在内)))
赋值 (转换后公历年, 农历年)
.如果真 (大于 (转换到公历日差天数, D0 (农历年, 12, 31, 日历类型)))
    赋值 (转换后公历年, 相加 (转换后公历年, 1))
    赋值 (转换到公历日差天数, 相减 (转换到公历日差天数, D0 (农历年, 12, 31, 日历类型)))
.如果真结束
赋值 (月日, revD0 (转换后公历年, 转换到公历日差天数, 日历类型))
.如果真 (大于 (月日, 3000))
    
    返回 (假)
.如果真结束
赋值 (转换后公历月, 整除 (月日, 100))
赋值 (转换后公历日, 相减 (月日, 相乘 (转换后公历月, 100)))
返回 (真)

.子程序 粗略农历日差天数, 整数型, , 假定单月为30双月29
.参数 农历月, 空白型, , 
.参数 农历日, 空白型, , 
.参数 无闰月在内, 逻辑型, , 

.局部变量 n, 空白型, , , 
.局部变量 日差天数, 空白型, , , 

赋值 (n, 整除 (农历月, 2))
赋值 (日差天数, 相加 (相乘 (n, 29), 相乘 (n, 30)))
.如果真 (大于 (求余数 (农历月, 2), 0))
    赋值 (日差天数, 相加 (日差天数, 30))
.如果真结束
.如果真 (无闰月在内)
    赋值 (日差天数, 相减 (日差天数, 30))
.如果真结束
返回 (相加 (日差天数, 农历日))

.子程序 取农历闰月, 整数型, 公开, 没有闰月返回零
.参数 农历年, 空白型, , 

.局部变量 农历, 农历函数类, , , 

.如果真 (小于 (农历年, -849))
    赋值 (农历年, -849)
.如果真结束
.如果真 (大于 (农历年, 2100))
    赋值 (农历年, 2100)
.如果真结束

返回 (农历.leapMon (农历年))

.子程序 取天干地支, 文本型, 公开, 
.参数 天干序号, 空白型, , 
.参数 地支序号, 空白型, , 

返回 (相加 (取文本中间 (“甲乙丙丁戊己庚辛壬癸”, 相加 (相乘 (相减 (天干序号, 1), 2), 1), 2), 取文本中间 (“子丑寅卯辰巳午未申酉戌亥”, 相加 (相乘 (相减 (地支序号, 1), 2), 1), 2)))

.子程序 取六十甲子, 文本型, 公开, 
.参数 六十花甲序号, 空白型, , 

返回 (gzStr (六十花甲序号))

.子程序 取柱, 空白型, 公开, 
.参数 公历年, 空白型, , 
.参数 公历月, 空白型, , 
.参数 公历日, 空白型, , 
.参数 公历时, 空白型, , 
.参数 公历分, 空白型, , 
.参数 年柱, 文本型, 参考, 
.参数 月柱, 文本型, 参考, 
.参数 日柱, 文本型, 参考, 
.参数 时柱, 文本型, 参考, 

.局部变量 年干支, 空白型, , , 
.局部变量 月干支, 空白型, , , 
.局部变量 日干支, 空白型, , , 
.局部变量 时干支, 空白型, , , 


赋值 (年干支, yGz (公历年, 公历月, 公历日, 公历时, 公历分, 日历类型))
赋值 (月干支, mGz (公历年, 公历月, 公历日, 公历时, 公历分, 日历类型))
赋值 (日干支, dGz (公历年, 公历月, 公历日, 公历时, 日历类型))
赋值 (时干支, hGz (公历年, 公历月, 公历日, 公历时, 日历类型))
赋值 (年柱, gzStr (年干支))
赋值 (月柱, gzStr (月干支))
赋值 (日柱, gzStr (日干支))
赋值 (时柱, gzStr (时干支))

.子程序 取柱序号, 空白型, 公开, 
.参数 公历年, 空白型, , 
.参数 公历月, 空白型, , 
.参数 公历日, 空白型, , 
.参数 公历时, 空白型, , 
.参数 公历分, 空白型, , 
.参数 年柱序号, 空白型, 参考, 
.参数 月柱序号, 空白型, 参考, 
.参数 日柱序号, 空白型, 参考, 
.参数 时柱序号, 空白型, 参考, 


赋值 (年柱序号, yGz (公历年, 公历月, 公历日, 公历分, 公历时, 日历类型))
赋值 (月柱序号, mGz (公历年, 公历月, 公历日, 公历时, 公历分, 日历类型))
赋值 (日柱序号, dGz (公历年, 公历月, 公历日, 公历时, 日历类型))
赋值 (时柱序号, hGz (公历年, 公历月, 公历日, 公历时, 日历类型))

.子程序 取六十甲子纳音, 文本型, 公开, 
.参数 六十甲子文本, 文本型, , 

.局部变量 干支, 空白型, , , 

赋值 (六十甲子文本, 删首尾空 (六十甲子文本))
.计次循环首 (60, 干支)
    .如果真 (等于 (gzStr (干支), 六十甲子文本))
        返回 (GZNY (干支))
    .如果真结束
    
.计次循环尾 ()
返回 (“”)

.子程序 取交节气时刻, 日期时间型, 公开, 
.参数 公历年份, 空白型, , 
.参数 节气序号, 空白型, , 1-24依次代表：立春、雨水……大寒

.局部变量 万年历, 中国日历类, , , 
.局部变量 交节日, 空白型, , "2", 
.局部变量 交节时, 双精度小数型, 静态, "2", 
.局部变量 原节气序号, 空白型, , "2", 
.局部变量 节气, 节气子类, , , 
.局部变量 m, 空白型, , , 
.局部变量 月, 空白型, 静态, , 
.局部变量 日, 空白型, 静态, , 
.局部变量 时, 空白型, 静态, , 
.局部变量 分, 空白型, 静态, , 

.如果真 (小于 (公历年份, -849))
    赋值 (公历年份, -849)
.如果真结束
.如果真 (大于 (公历年份, 2100))
    赋值 (公历年份, 2100)
.如果真结束
.计次循环首 (12, m)
    万年历.CCC (公历年份, m, 1, , , 日历类型) ' 创建这个类
    赋值 (节气, 万年历.取节气类 ())
    节气.节气日期 (原节气序号, 交节日, 交节时)
    .如果真 (等于 (原节气序号 [1], 节气序号))
        赋值 (月, m)
        赋值 (日, 交节日 [1])
        赋值 (时, 取整 (相乘 (交节时 [1], 24)))
        赋值 (分, 取整 (相乘 (相减 (相乘 (交节时 [1], 24), 时), 60)))
        跳出循环 ()
    .如果真结束
    .如果真 (等于 (原节气序号 [2], 节气序号))
        赋值 (月, m)
        赋值 (日, 交节日 [2])
        赋值 (时, 取整 (相乘 (交节时 [2], 24)))
        赋值 (分, 取整 (相乘 (相减 (相乘 (交节时 [2], 24), 时), 60)))
        跳出循环 ()
    .如果真结束
    
.计次循环尾 ()
返回 (指定时间 (公历年份, 月, 日, 时, 分, ))



.子程序 取月节气时刻, 逻辑型, 公开, 
.参数 公历年份, 空白型, , 
.参数 月份, 空白型, , 
.参数 节时, 日期时间型, 参考, 结果存放在参数变量里
.参数 气时, 日期时间型, 参考, 结果存放在参数变量里
.参数 节序号, 空白型, 参考 可空, 
.参数 气序号, 空白型, 参考 可空, 

.局部变量 万年历, 中国日历类, , , 
.局部变量 交节日, 空白型, , "2", 
.局部变量 交节时, 双精度小数型, 静态, "2", 
.局部变量 原节气序号, 空白型, , "2", 
.局部变量 节气, 节气子类, , , 
.局部变量 日, 空白型, 静态, , 
.局部变量 时, 空白型, 静态, , 
.局部变量 分, 空白型, 静态, , 

.如果真 (小于 (公历年份, -849))
    赋值 (公历年份, -849)
.如果真结束
.如果真 (大于 (公历年份, 2100))
    赋值 (公历年份, 2100)
.如果真结束
.如果真 (或者 (小于 (月份, 1), 大于 (月份, 12)))
    返回 (假)
.如果真结束

万年历.CCC (公历年份, 月份, 1, , , 日历类型) ' 创建这个类
赋值 (节气, 万年历.取节气类 ())
节气.节气日期 (原节气序号, 交节日, 交节时)


赋值 (日, 交节日 [1])
赋值 (时, 取整 (相乘 (交节时 [1], 24)))
赋值 (分, 取整 (相乘 (相减 (相乘 (交节时 [1], 24), 时), 60)))
赋值 (节时, 指定时间 (公历年份, 月份, 日, 时, 分, ))

赋值 (日, 交节日 [2])
赋值 (时, 取整 (相乘 (交节时 [2], 24)))
赋值 (分, 取整 (相乘 (相减 (相乘 (交节时 [2], 24), 时), 60)))
赋值 (气时, 指定时间 (公历年份, 月份, 日, 时, 分, ))
赋值 (节序号, 原节气序号 [1])
赋值 (气序号, 原节气序号 [2])
返回 (真)
 ' ''''''''''''''''''''''''''''''''''''''''''''
 ' 反推部分                 '
 ' ''''''''''''''''''''''''''''''''''''''''''''


.子程序 干支合成甲子数, 整数型, , 干支合成甲子数
.参数 GanZ, 空白型, , ,
.参数 ZhiZ, 空白型, , 

.局部变量 Ganzhi, 整数型, , , 
.局部变量 i, 整数型, , , 
.局部变量 j, 整数型, , , 
.局部变量 z, 整数型, , , 

赋值 (Ganzhi, GanZ)
.如果真 (等于 (Ganzhi, 10))
    赋值 (Ganzhi, 0)
.如果真结束

.变量循环首 (0, 5, 1, i)
    赋值 (j, 相加 (相乘 (i, 10), Ganzhi))
    赋值 (z, 求余数 (j, 12))
    .如果真 (等于 (z, 0))
        赋值 (z, 12)
    .如果真结束
    .如果真 (等于 (z, ZhiZ))
        跳出循环 ()
    .如果真结束
    赋值 (j, 0) ' 不存在的组合,则为0
.变量循环尾 ()
返回 (j)


.子程序 四柱反推, 逻辑型, 公开, 成功返回真
.参数 年干, 空白型, , 
.参数 年支, 空白型, , 
.参数 月干, 空白型, , 
.参数 月支, 空白型, , 
.参数 日干, 空白型, , 
.参数 日支, 空白型, , 
.参数 时干, 空白型, , 
.参数 时支, 空白型, , 
.参数 年限, 空白型, , "0":1864-1923;"1":1924-1983;"2":1984-2043
.参数 年, 整数型, 参考, 结果存放在参数变量里
.参数 月, 整数型, 参考, 结果存放在参数变量里
.参数 日, 整数型, 参考, 结果存放在参数变量里
.参数 时, 整数型, 参考, 结果存放在参数变量里

.局部变量 Crz, 整数型, , , 
.局部变量 Ytt, 整数型, , , 
.局部变量 Mtt, 整数型, , , 
.局部变量 Dtt, 整数型, , , 
.局部变量 Htt, 整数型, , , 
.局部变量 RJG, 整数型, , , 
.局部变量 Tianshu, 整数型, , , 
.局部变量 j, 整数型, , , 
.局部变量 mL, 整数型, , , 
.局部变量 okl, 逻辑型, , , 

 ' 时间反推的信息-----------
赋值 (时, 相乘 (相减 (时支, 1), 2))
 ' 年干支反查-----------------
赋值 (年, 相加 (1923, 干支合成甲子数 (年干, 年支)))
 ' 行运比较------------------
.如果真 (等于 (年限, 0))
    赋值 (年, 相减 (年, 60))
.如果真结束
.如果真 (等于 (年限, 2))
    赋值 (年, 相加 (年, 60))
.如果真结束
 ' 反查月支--------------------
赋值 (月, 相减 (月支, 1))
.如果真 (小于 (月, 1))
    赋值 (月, 12)
.如果真结束
.如果真 (等于 (月, 1))
    赋值 (年, 相加 (年, 1))
.如果真结束
 ' 日干支反查------------------
赋值 (Crz, 干支合成甲子数 (日干, 日支))
 ' 反推测试--------------------

取柱序号 (年, 月, 1, 1, 1, Ytt, Mtt, Dtt, Htt) ' 取柱序号
赋值 (RJG, 相减 (Crz, Dtt))

.如果真 (小于或等于 (RJG, 0))
    赋值 (RJG, 相加 (RJG, 60))
.如果真结束

 ' 反推确认---------------------
赋值 (Tianshu, 相加 (D0 (年, 月, 1, 日历类型), RJG)) ' 日差天数
.计次循环首 (2, )
    .计次循环首 (12, j)
        赋值 (mL, 相减 (D0 (年, 相加 (j, 1), 1, 日历类型), D0 (年, j, 1, 日历类型)))
        .如果 (大于或等于 (mL, Tianshu))
            赋值 (月, j)
            赋值 (okl, 真)
            跳出循环 ()
        .否则
            赋值 (Tianshu, 相减 (Tianshu, mL))
        .如果结束
        
    .计次循环尾 ()
    .如果真 (okl)
        跳出循环 ()
    .如果真结束
    赋值 (年, 相加 (年, 1))
.计次循环尾 ()
赋值 (日, Tianshu)
取柱序号 (年, 月, 日, 时, 1, Ytt, Mtt, Dtt, Htt) ' 取柱序号
 ' 校验时段内该四柱是否存在,只要有一步为假,结果全部为假
赋值 (okl, 并且 (okl, 等于 (干支合成甲子数 (年干, 年支), Ytt)))
赋值 (okl, 并且 (okl, 等于 (干支合成甲子数 (月干, 月支), Mtt)))
赋值 (okl, 并且 (okl, 等于 (干支合成甲子数 (日干, 日支), Dtt)))
赋值 (okl, 并且 (okl, 等于 (干支合成甲子数 (时干, 时支), Htt)))
返回 (okl)

 ' ''''''''''''''''''''''''''''''''''''''''''''
 ' 真太阳时部分                 '
 ' ''''''''''''''''''''''''''''''''''''''''''''


.子程序 地名校正真太阳时, 逻辑型, 公开, 成功返回真,反之为假,说明包含错误原因
.参数 年, 空白型, 参考, 原数据和校正的结果存放在参数变量里
.参数 月, 空白型, 参考, 原数据和校正的结果存放在参数变量里
.参数 日, 空白型, 参考, 原数据和校正的结果存放在参数变量里
.参数 时, 空白型, 参考, 原数据和校正的结果存放在参数变量里
.参数 分, 空白型, 参考, 原数据和校正的结果存放在参数变量里
.参数 城市, 文本型, , 
.参数 说明, 文本型, 参考, 只能代入变量
.参数 数据库路径, 文本型, , 是硬盘绝对路径,比如 F:\city_ll.mdb
.参数 详细说明, 逻辑型, 可空, 

.局部变量 数据库连接, 未知类型0x20001, , , 
.局部变量 记录集, 未知类型0x20002, , , 
.局部变量 连接文本, 文本型, , , 
.局部变量 sqlstr, 文本型, , , 
.局部变量 jg, 逻辑型, , , 
.局部变量 jingdu, 小数型, , , 
.局部变量 weidu, 小数型, , , 

.如果真 (或者 (小于 (月, 1), 大于 (月, 12))) ' 因为用到数组容易出错
    赋值 (说明, “月份超出范围”)
    返回 (假)
.如果真结束
.如果真 (或者 (小于 (日, 1), 大于 (日, 31)))
    赋值 (说明, “日数超出范围”)
    返回 (假)
.如果真结束
.如果真 (等于 (数据库连接.未知支持库函数_0 (), 假))
    赋值 (说明, “数据库出错”)
    返回 (假)
.如果真结束
赋值 (连接文本, 相加 (“provider=Microsoft.Jet.OLEDB.4.0;Data Source=”, 数据库路径))
.如果真 (等于 (数据库连接.未知支持库函数_19 (连接文本, , , ), 假))
    数据库连接.未知支持库函数_1 ()
    赋值 (说明, 相加 (“数据库出错:”, 数据库连接.未知支持库函数_7 ()))
    返回 (假)
.如果真结束
赋值 (sqlstr, 相加 (“select * from DATA where city LIKE '%”, 城市, “%' ”))
赋值 (记录集, 数据库连接.未知支持库函数_18 (sqlstr, , ))
.如果真 (记录集.未知支持库函数_23 ())
    数据库连接.未知支持库函数_1 ()
    赋值 (说明, 相加 (“数据库出错:”, 数据库连接.未知支持库函数_7 ()))
    返回 (假)
.如果真结束
赋值 (jg, 取反 (记录集.未知支持库函数_28 ()))
.如果真 (jg)
    赋值 (jingdu, 记录集.未知支持库函数_76 (“jingdu”, #小数型)) ' 读经纬度数据
    赋值 (weidu, 记录集.未知支持库函数_76 (“weidu”, #小数型))
.如果真结束
记录集.未知支持库函数_51 ()
记录集.未知支持库函数_22 ()
数据库连接.未知支持库函数_17 ()
数据库连接.未知支持库函数_1 ()
.如果真 (等于 (jg, 假))
    .如果真 (详细说明)
        赋值 (说明, 相加 (“对不起，您选择的［”, 城市, “］因为不是有效或者确切城市，或者系统并未收录您所选定的城市等原因，系统无法为您进行真太阳时校正。如果您确需此项功能，请您重新进行选择。如果还有问题请您将此问题向站长反映，谢谢您的支持！”))
    .如果真结束
    返回 (假)
.如果真结束
真太阳时校正 (年, 月, 日, 时, 分, 城市, 连接文本, jingdu, weidu)
赋值 (sqlstr, 到文本 (分))
.如果真 (小于 (分, 10))
    赋值 (sqlstr, 相加 (“0”, sqlstr))
.如果真结束
 ' 本源码来自易语言资源网(www.wodesoft.com)
.如果 (详细说明)
    赋值 (说明, 连接文本)
.否则
    赋值 (说明, 相加 (“真太阳时校正：”, 到文本 (年), “年”, 到文本 (月), “月”, 到文本 (日), “日”, 到文本 (时), “时”, sqlstr, “分”))
.如果结束
返回 (真)

.子程序 真太阳时校正, 空白型, 公开, 成功返回真,反之为假,说明包含错误原因
.参数 年, 空白型, 参考, 原数据和校正的结果存放在参数变量里
.参数 月, 空白型, 参考, 原数据和校正的结果存放在参数变量里
.参数 日, 空白型, 参考, 原数据和校正的结果存放在参数变量里
.参数 时, 空白型, 参考, 原数据和校正的结果存放在参数变量里
.参数 分, 空白型, 参考, 原数据和校正的结果存放在参数变量里
.参数 城市, 文本型, , 
.参数 说明, 文本型, 参考, 只能代入变量
.参数 经度, 小数型, , 
.参数 纬度, 小数型, , 

.局部变量 Rjc, 整数型, , "31", 
.局部变量 rijuncha, 整数型, , , 
.局部变量 JDC, 整数型, , , 
.局部变量 SUNTIME, 整数型, , , 
.局部变量 Addh, 整数型, , , 
.局部变量 Addm, 整数型, , , 
.局部变量 SunTimeC, 整数型, , , 
.局部变量 rjkm, 文本型, , , 
.局部变量 mday, 整数型, , "12", 
.局部变量 RJCm, 整数型, , , 
.局部变量 RJCs, 整数型, , , 
.局部变量 JDCm, 整数型, , , 
.局部变量 JDCs, 整数型, , , 
.局部变量 jdkm, 文本型, , , 
.局部变量 ztrskm, 文本型, , , 


 ' 求全年日均差-------------------------------------
.判断开始 (等于 (月, 1)) ' 一月份数据
    赋值 (Rjc [1], -189)
    
    赋值 (Rjc [2], -218)
    
    赋值 (Rjc [3], -246)
    
    赋值 (Rjc [4], -273)
    
    赋值 (Rjc [5], -301)
    
    赋值 (Rjc [6], -327)
    
    赋值 (Rjc [7], -354)
    
    赋值 (Rjc [8], -380)
    
    赋值 (Rjc [9], -405)
    
    赋值 (Rjc [10], -430)
    
    赋值 (Rjc [11], -455)
    
    赋值 (Rjc [12], -479)
    
    赋值 (Rjc [13], -502)
    
    赋值 (Rjc [14], -525)
    
    赋值 (Rjc [15], -547)
    
    赋值 (Rjc [16], -568)
    
    赋值 (Rjc [17], -589)
    
    赋值 (Rjc [18], -609)
    
    赋值 (Rjc [19], -628)
    
    赋值 (Rjc [20], -647)
    
    赋值 (Rjc [21], -665)
    
    赋值 (Rjc [22], -682)
    
    赋值 (Rjc [23], -698)
    
    赋值 (Rjc [24], -714)
    
    赋值 (Rjc [25], -728)
    
    赋值 (Rjc [26], -742)
    
    赋值 (Rjc [27], -755)
    
    赋值 (Rjc [28], -779)
    
    赋值 (Rjc [29], -790)
    
    赋值 (Rjc [30], -799)
    
    赋值 (Rjc [31], -817)
    
.判断 (等于 (月, 2)) ' 二月份数据
    赋值 (Rjc [1], -824)
    
    赋值 (Rjc [2], -830)
    
    赋值 (Rjc [3], -836)
    
    赋值 (Rjc [4], -841)
    
    赋值 (Rjc [5], -845)
    
    赋值 (Rjc [6], -849)
    
    赋值 (Rjc [7], -851)
    
    赋值 (Rjc [8], -853)
    
    赋值 (Rjc [9], -854)
    
    赋值 (Rjc [10], -855)
    
    赋值 (Rjc [11], -854)
    
    赋值 (Rjc [12], -853)
    
    赋值 (Rjc [13], -851)
    
    赋值 (Rjc [14], -848)
    
    赋值 (Rjc [15], -845)
    
    赋值 (Rjc [16], -841)
    
    赋值 (Rjc [17], -836)
    
    赋值 (Rjc [18], -831)
    
    赋值 (Rjc [19], -824)
    
    赋值 (Rjc [20], -818)
    
    赋值 (Rjc [21], -810)
    
    赋值 (Rjc [22], -802)
    
    赋值 (Rjc [23], -793)
    
    赋值 (Rjc [24], -664)
    
    赋值 (Rjc [25], -774)
    
    赋值 (Rjc [26], -763)
    
    赋值 (Rjc [27], -752)
    
    赋值 (Rjc [28], -741)
    
    赋值 (Rjc [29], -728)
    
.判断 (等于 (月, 3)) ' 三月份数据
    赋值 (Rjc [1], -716)
    
    赋值 (Rjc [2], -703)
    
    赋值 (Rjc [3], -689)
    
    赋值 (Rjc [4], -675)
    
    赋值 (Rjc [5], -661)
    
    赋值 (Rjc [6], -647)
    
    赋值 (Rjc [7], -632)
    
    赋值 (Rjc [8], -616)
    
    赋值 (Rjc [9], -601)
    
    赋值 (Rjc [10], -585)
    
    赋值 (Rjc [11], -568)
    
    赋值 (Rjc [12], -552)
    
    赋值 (Rjc [13], -535)
    
    赋值 (Rjc [14], -518)
    
    赋值 (Rjc [15], -501)
    
    赋值 (Rjc [16], -484)
    
    赋值 (Rjc [17], -466)
    
    赋值 (Rjc [18], -449)
    
    赋值 (Rjc [19], -431)
    
    赋值 (Rjc [20], -413)
    
    赋值 (Rjc [21], -395)
    
    赋值 (Rjc [22], -377)
    
    赋值 (Rjc [23], -358)
    
    赋值 (Rjc [24], -340)
    
    赋值 (Rjc [25], -322)
    
    赋值 (Rjc [26], -304)
    
    赋值 (Rjc [27], -285)
    
    赋值 (Rjc [28], -267)
    
    赋值 (Rjc [29], -249)
    
    赋值 (Rjc [30], -231)
    
    赋值 (Rjc [31], -213)
    
.判断 (等于 (月, 4)) ' 四月份数据
    赋值 (Rjc [1], -196)
    
    赋值 (Rjc [2], -178)
    
    赋值 (Rjc [3], -161)
    
    赋值 (Rjc [4], -144)
    
    赋值 (Rjc [5], -127)
    
    赋值 (Rjc [6], -110)
    
    赋值 (Rjc [7], -93)
    
    赋值 (Rjc [8], -77)
    
    赋值 (Rjc [9], -61)
    
    赋值 (Rjc [10], 46)
    
    赋值 (Rjc [11], 30)
    
    赋值 (Rjc [12], 16)
    
    赋值 (Rjc [13], 1)
    
    赋值 (Rjc [14], 13)
    
    赋值 (Rjc [15], 27)
    
    赋值 (Rjc [16], 41)
    
    赋值 (Rjc [17], 54)
    
    赋值 (Rjc [18], 66)
    
    赋值 (Rjc [19], 79)
    
    赋值 (Rjc [20], 91)
    
    赋值 (Rjc [21], 102)
    
    赋值 (Rjc [22], 113)
    
    赋值 (Rjc [23], 124)
    
    赋值 (Rjc [24], 134)
    
    赋值 (Rjc [25], 143)
    
    赋值 (Rjc [26], 153)
    
    赋值 (Rjc [27], 161)
    
    赋值 (Rjc [28], 169)
    
    赋值 (Rjc [29], 177)
    
    赋值 (Rjc [30], 184)
    
.判断 (等于 (月, 5)) ' 五月份数据
    赋值 (Rjc [1], 70)
    
    赋值 (Rjc [2], 196)
    
    赋值 (Rjc [3], 201)
    
    赋值 (Rjc [4], 206)
    
    赋值 (Rjc [5], 210)
    
    赋值 (Rjc [6], 217)
    
    赋值 (Rjc [7], 216)
    
    赋值 (Rjc [8], 219)
    
    赋值 (Rjc [9], 220)
    
    赋值 (Rjc [10], 222)
    
    赋值 (Rjc [11], 222)
    
    赋值 (Rjc [12], 222)
    
    赋值 (Rjc [13], 222)
    
    赋值 (Rjc [14], 221)
    
    赋值 (Rjc [15], 219)
    
    赋值 (Rjc [16], 217)
    
    赋值 (Rjc [17], 214)
    
    赋值 (Rjc [18], 211)
    
    赋值 (Rjc [19], 207)
    
    赋值 (Rjc [20], 203)
    
    赋值 (Rjc [21], 198)
    
    赋值 (Rjc [22], 193)
    
    赋值 (Rjc [23], 187)
    
    赋值 (Rjc [24], 181)
    
    赋值 (Rjc [25], 174)
    
    赋值 (Rjc [26], 167)
    
    赋值 (Rjc [27], 159)
    
    赋值 (Rjc [28], 151)
    
    赋值 (Rjc [29], 142)
    
    赋值 (Rjc [30], 133)
    
    赋值 (Rjc [31], 124)
    
.判断 (等于 (月, 6)) ' 六月份数据
    赋值 (Rjc [1], 114)
    
    赋值 (Rjc [2], 104)
    
    赋值 (Rjc [3], 94)
    
    赋值 (Rjc [4], 83)
    
    赋值 (Rjc [5], 72)
    
    赋值 (Rjc [6], 60)
    
    赋值 (Rjc [7], 48)
    
    赋值 (Rjc [8], 36)
    
    赋值 (Rjc [9], 24)
    
    赋值 (Rjc [10], 12)
    
    赋值 (Rjc [11], 1)
    
    赋值 (Rjc [12], 14)
    
    赋值 (Rjc [13], 39)
    
    赋值 (Rjc [14], 52)
    
    赋值 (Rjc [15], -65)
    
    赋值 (Rjc [16], -78)
    
    赋值 (Rjc [17], -91)
    
    赋值 (Rjc [18], -105)
    
    赋值 (Rjc [19], -117)
    
    赋值 (Rjc [20], -130)
    
    赋值 (Rjc [21], -143)
    
    赋值 (Rjc [22], -156)
    
    赋值 (Rjc [23], -168)
    
    赋值 (Rjc [24], -181)
    
    赋值 (Rjc [25], -193)
    
    赋值 (Rjc [26], -205)
    
    赋值 (Rjc [27], -217)
    
    赋值 (Rjc [28], -229)
    
    赋值 (Rjc [29], -240)
    
    赋值 (Rjc [30], -251)
    
.判断 (等于 (月, 7)) ' 七月份数据
    赋值 (Rjc [1], -262)
    
    赋值 (Rjc [2], -273)
    
    赋值 (Rjc [3], -283)
    
    赋值 (Rjc [4], -293)
    
    赋值 (Rjc [5], -302)
    
    赋值 (Rjc [6], -311)
    
    赋值 (Rjc [7], -320)
    
    赋值 (Rjc [8], -328)
    
    赋值 (Rjc [9], -336)
    
    赋值 (Rjc [10], -343)
    
    赋值 (Rjc [11], -350)
    
    赋值 (Rjc [12], -356)
    
    赋值 (Rjc [13], -372)
    
    赋值 (Rjc [14], -368)
    
    赋值 (Rjc [15], -372)
    
    赋值 (Rjc [16], -376)
    
    赋值 (Rjc [17], -380)
    
    赋值 (Rjc [18], -383)
    
    赋值 (Rjc [19], -385)
    
    赋值 (Rjc [20], -387)
    
    赋值 (Rjc [21], -389)
    
    赋值 (Rjc [22], -389)
    
    赋值 (Rjc [23], -389)
    
    赋值 (Rjc [24], -389)
    
    赋值 (Rjc [25], -388)
    
    赋值 (Rjc [26], -386)
    
    赋值 (Rjc [27], -384)
    
    赋值 (Rjc [28], -381)
    
    赋值 (Rjc [29], -377)
    
    赋值 (Rjc [30], -373)
    
    赋值 (Rjc [31], -368)
    
.判断 (等于 (月, 8)) ' 八月份数据
    赋值 (Rjc [1], -363)
    
    赋值 (Rjc [2], -357)
    
    赋值 (Rjc [3], -351)
    
    赋值 (Rjc [4], -344)
    
    赋值 (Rjc [5], -336)
    
    赋值 (Rjc [6], -328)
    
    赋值 (Rjc [7], -319)
    
    赋值 (Rjc [8], -310)
    
    赋值 (Rjc [9], -300)
    
    赋值 (Rjc [10], -290)
    
    赋值 (Rjc [11], -279)
    
    赋值 (Rjc [12], -267)
    
    赋值 (Rjc [13], -255)
    
    赋值 (Rjc [14], -242)
    
    赋值 (Rjc [15], -229)
    
    赋值 (Rjc [16], -216)
    
    赋值 (Rjc [17], -201)
    
    赋值 (Rjc [18], -187)
    
    赋值 (Rjc [19], -171)
    
    赋值 (Rjc [20], -156)
    
    赋值 (Rjc [21], -140)
    
    赋值 (Rjc [22], -123)
    
    赋值 (Rjc [23], -107)
    
    赋值 (Rjc [24], -89)
    
    赋值 (Rjc [25], -72)
    
    赋值 (Rjc [26], 54)
    
    赋值 (Rjc [27], 35)
    
    赋值 (Rjc [28], 17)
    
    赋值 (Rjc [29], 2)
    
    赋值 (Rjc [30], 21)
    
    赋值 (Rjc [31], 41)
    
.判断 (等于 (月, 9)) ' 九月份数据
    赋值 (Rjc [1], 60)
    
    赋值 (Rjc [2], 86)
    
    赋值 (Rjc [3], 100)
    
    赋值 (Rjc [4], 121)
    
    赋值 (Rjc [5], 141)
    
    赋值 (Rjc [6], 162)
    
    赋值 (Rjc [7], 183)
    
    赋值 (Rjc [8], 183)
    
    赋值 (Rjc [9], 204)
    
    赋值 (Rjc [10], 225)
    
    赋值 (Rjc [11], 246)
    
    赋值 (Rjc [12], 267)
    
    赋值 (Rjc [13], 288)
    
    赋值 (Rjc [14], 310)
    
    赋值 (Rjc [15], 331)
    
    赋值 (Rjc [16], 353)
    
    赋值 (Rjc [17], 254)
    
    赋值 (Rjc [18], 275)
    
    赋值 (Rjc [19], 297)
    
    赋值 (Rjc [20], 438)
    
    赋值 (Rjc [21], 459)
    
    赋值 (Rjc [22], 480)
    
    赋值 (Rjc [23], 501)
    
    赋值 (Rjc [24], 522)
    
    赋值 (Rjc [25], 542)
    
    赋值 (Rjc [26], 562)
    
    赋值 (Rjc [27], 582)
    
    赋值 (Rjc [28], 602)
    
    赋值 (Rjc [29], 621)
    
    赋值 (Rjc [30], 640)
    
.判断 (等于 (月, 10)) ' 十月份数据
    
    赋值 (Rjc [1], 659)
    
    赋值 (Rjc [2], 678)
    
    赋值 (Rjc [3], 696)
    
    赋值 (Rjc [4], 696)
    
    赋值 (Rjc [5], 713)
    
    赋值 (Rjc [6], 731)
    
    赋值 (Rjc [7], 748)
    
    赋值 (Rjc [8], 764)
    
    赋值 (Rjc [9], 780)
    
    赋值 (Rjc [10], 796)
    
    赋值 (Rjc [11], 796)
    
    赋值 (Rjc [12], 811)
    
    赋值 (Rjc [13], 825)
    
    赋值 (Rjc [14], 839)
    
    赋值 (Rjc [15], 899)
    
    赋值 (Rjc [16], 853)
    
    赋值 (Rjc [17], 878)
    
    赋值 (Rjc [18], 890)
    
    赋值 (Rjc [19], 901)
    
    赋值 (Rjc [20], 912)
    
    赋值 (Rjc [21], 681)
    
    赋值 (Rjc [22], 931)
    
    赋值 (Rjc [23], 940)
    
    赋值 (Rjc [24], 948)
    
    赋值 (Rjc [25], 955)
    
    赋值 (Rjc [26], 961)
    
    赋值 (Rjc [27], 967)
    
    赋值 (Rjc [28], 972)
    
    赋值 (Rjc [29], 976)
    
    赋值 (Rjc [30], 980)
    
    赋值 (Rjc [31], 982)
    
.判断 (等于 (月, 11)) ' 十一月份数据
    赋值 (Rjc [1], 984)
    
    赋值 (Rjc [2], 985)
    
    赋值 (Rjc [3], 985)
    
    赋值 (Rjc [4], 984)
    
    赋值 (Rjc [5], 983)
    
    赋值 (Rjc [6], 981)
    
    赋值 (Rjc [7], 977)
    
    赋值 (Rjc [8], 973)
    
    赋值 (Rjc [9], 969)
    
    赋值 (Rjc [10], 963)
    
    赋值 (Rjc [11], 956)
    
    赋值 (Rjc [12], 949)
    
    赋值 (Rjc [13], 941)
    
    赋值 (Rjc [14], 932)
    
    赋值 (Rjc [15], 922)
    
    赋值 (Rjc [16], 911)
    
    赋值 (Rjc [17], 900)
    
    赋值 (Rjc [18], 887)
    
    赋值 (Rjc [19], 874)
    
    赋值 (Rjc [20], 860)
    
    赋值 (Rjc [21], 846)
    
    赋值 (Rjc [22], 830)
    
    赋值 (Rjc [23], 814)
    
    赋值 (Rjc [24], 797)
    
    赋值 (Rjc [25], 779)
    
    赋值 (Rjc [26], 760)
    
    赋值 (Rjc [27], 741)
    
    赋值 (Rjc [28], 721)
    
    赋值 (Rjc [29], 700)
    
    赋值 (Rjc [30], 678)
    
.默认
    
     ' 十二月份数据
    赋值 (Rjc [1], 656)
    
    赋值 (Rjc [2], 633)
    
    赋值 (Rjc [3], 609)
    
    赋值 (Rjc [4], 585)
    
    赋值 (Rjc [5], 561)
    
    赋值 (Rjc [6], 535)
    
    赋值 (Rjc [7], 509)
    
    赋值 (Rjc [8], 483)
    
    赋值 (Rjc [9], 456)
    
    赋值 (Rjc [10], 429)
    
    赋值 (Rjc [11], 402)
    
    赋值 (Rjc [12], 374)
    
    赋值 (Rjc [13], 346)
    
    赋值 (Rjc [14], 317)
    
    赋值 (Rjc [15], 288)
    
    赋值 (Rjc [16], 259)
    
    赋值 (Rjc [17], 230)
    
    赋值 (Rjc [18], 201)
    
    赋值 (Rjc [19], 171)
    
    赋值 (Rjc [20], 142)
    
    赋值 (Rjc [21], 112)
    
    赋值 (Rjc [22], 82)
    
    赋值 (Rjc [23], 52)
    
    赋值 (Rjc [24], 23)
    
    赋值 (Rjc [25], 7)
    
    赋值 (Rjc [26], 37)
    
    赋值 (Rjc [27], -66)
    
    赋值 (Rjc [28], -96)
    
    赋值 (Rjc [29], -125)
    
    赋值 (Rjc [30], -154)
    
    赋值 (Rjc [31], -183)
    
.判断结束


赋值 (rijuncha, Rjc [日]) ' 当天日均差
 ' 求算经度差------------------------------------------

.如果 (大于或等于 (经度, 120))
     ' 经度差 ＝ 四舍五入 ((到数值 (城市经度) － 120) × 240, )
    赋值 (JDC, 四舍五入 (相乘 (相减 (经度, 120), 240), ))
    
.否则
     ' 经度差 ＝ －四舍五入 ((120 － 到数值 (城市经度)) × 240, )
    赋值 (JDC, 负 (四舍五入 (相乘 (相减 (120, 经度), 240), )))
    
.如果结束

 ' 真太阳时 ＝ 日均差 ＋ 经度差
赋值 (SUNTIME, 相加 (rijuncha, JDC))

 ' 增加的小时 ＝ 真太阳时 ＼ 3600
赋值 (Addh, 整除 (SUNTIME, 3600))

 ' 增加的分钟 ＝ 四舍五入 ((真太阳时 － 增加的小时 × 3600) ÷ 60, )
赋值 (Addm, 四舍五入 (相除 (相减 (SUNTIME, 相乘 (Addh, 3600)), 60), ))

 ' 真太阳时相差 ＝ 四舍五入 (真太阳时 ÷ 60, )
赋值 (SunTimeC, 四舍五入 (相除 (SUNTIME, 60), ))

 ' 求真太阳时定义------------------------------------------


.如果 (大于或等于 (rijuncha, 0))
    赋值 (rjkm, “快”)
.否则
    赋值 (rjkm, “慢”)
.如果结束

.如果 (大于或等于 (JDC, 0))
    赋值 (jdkm, “快”)
.否则
    赋值 (jdkm, “慢”)
.如果结束

.如果 (大于或等于 (SUNTIME, 0))
    赋值 (ztrskm, “快”)
.否则
    赋值 (ztrskm, “慢”)
.如果结束

 ' 真太阳时反向运算----------------------------------

 ' 待用的时 ＝ 公演示时 ＋ 增加的小时
 ' 待用的分 ＝ 公演示分 ＋ 增加的分钟
赋值 (时, 相加 (时, Addh))
赋值 (分, 相加 (分, Addm))
 ' 真太阳时校正1------------------------------------

.如果真 (大于或等于 (分, 60))
    赋值 (分, 相减 (分, 60))
    赋值 (时, 相加 (时, 1))
.如果真结束
.如果真 (小于 (分, 0))
    赋值 (分, 相加 (分, 60))
    赋值 (时, 相减 (时, 1))
.如果真结束
.如果真 (大于或等于 (时, 24))
    赋值 (时, 相减 (时, 24))
    赋值 (日, 相加 (日, 1))
.如果真结束
.如果真 (小于 (时, 0))
    赋值 (时, 相加 (时, 24))
    赋值 (日, 相减 (日, 1))
.如果真结束

 ' 真太阳时校正2------------------------------------
 ' 本源码来自易语言资源网(www.wodesoft.com)

.如果 (并且 (等于 (求余数 (年, 4), 0), 不等于 (年, 1900)))
    赋值 (mday [2], 29)
.否则
    赋值 (mday [2], 28)
.如果结束

赋值 (mday [1], 31)
赋值 (mday [3], 31)
赋值 (mday [4], 30)
赋值 (mday [5], 31)
赋值 (mday [6], 30)
赋值 (mday [7], 31)
赋值 (mday [8], 31)
赋值 (mday [9], 30)
赋值 (mday [10], 31)
赋值 (mday [11], 30)
赋值 (mday [12], 31)
.如果真 (大于 (日, mday [月]))
    赋值 (日, 1)
    赋值 (月, 相加 (月, 1))
    .如果真 (大于 (月, 12))
        赋值 (分, 1)
        赋值 (年, 相加 (年, 1))
        
    .如果真结束
    
.如果真结束
.如果真 (小于 (日, 1))
    赋值 (月, 相减 (月, 1))
    .如果真 (小于 (月, 1))
        赋值 (月, 12)
        赋值 (年, 相减 (年, 1))
    .如果真结束
    赋值 (日, mday [月])
.如果真结束

 ' 真太阳时解说赋值------------------------------

 ' 日均差分 ＝ 日均差 ＼ 60
 ' 日均差秒 ＝ 日均差 ％ 60
 ' 经度差分 ＝ 经度差 ＼ 60
 ' 经度差秒 ＝ 经度差 ％ 60

赋值 (RJCm, 取绝对值 (整除 (rijuncha, 60)))
赋值 (RJCs, 取绝对值 (求余数 (rijuncha, 60)))
赋值 (JDCm, 取绝对值 (整除 (JDC, 60)))
赋值 (JDCs, 取绝对值 (求余数 (JDC, 60)))
赋值 (SunTimeC, 取绝对值 (SunTimeC))
赋值 (说明, 相加 (“此造生于”, 城市, “，地处东经”, 到文本 (经度), “度，北纬”, 到文本 (纬度), “度。经查地方时比中原标准时间”, jdkm, 到文本 (JDCm), “分钟”, 到文本 (JDCs), “秒，真太阳时比平均太阳时”, rjkm, 到文本 (RJCm), “分钟”, 到文本 (RJCs), “秒，故其确切出生时间已比标准时间”, ztrskm, 到文本 (SunTimeC), “分钟。校正后，实际生辰应为：”, “公元”, 到文本 (年), “年”, 到文本 (月), “月”, 到文本 (日), “日”, 到文本 (时), “时”, 到文本 (分), “分。”))


.程序集 数学函数集, , , 

.子程序 tail, 双精度小数型, , 
.参数 x, 双精度小数型, , 

返回 (相减 (x, 取整 (x)))

.子程序 rem, 双精度小数型, , 
.参数 x, 双精度小数型, , 
.参数 w, 双精度小数型, , 

返回 (相乘 (tail (相除 (x, w)), w))

.子程序 nnr, 双精度小数型, , 
.参数 x, 空白型, , 
.参数 w, 空白型, , 

.如果真 (小于 (x, 0))
    赋值 (x, 相加 (x, 相乘 (负 (x), w)))
.如果真结束
返回 (求余数 (x, w))

.程序集 公历函数集, , , 

.子程序 ifGr, 整数型, , 阳历y年m月(1,2,..,12,下同)d日,calType=1,2,3分别表示标准日历,Gregorge历和Julian历，下同，其中所谓“标准日历是指：1582-10-4之前采用Julian，1582-10-15以后采用Gregorian，1582-10-5 ~ 1582-10-14为空”
.参数 y, 空白型, , 判断Gregorian历还是Julian历
.参数 m, 空白型, , 
.参数 d, 空白型, , 
.参数 calType, 空白型, , 

.判断开始 (等于 (calType, 1))
    .如果 (或者 (大于 (y, 1582), 并且 (等于 (y, 1582), 大于 (m, 10)), 并且 (等于 (y, 1582), 等于 (m, 10), 大于 (d, 14))))
        返回 (1) ' ;  //Gregorian
    .否则
        .如果 (并且 (等于 (y, 1582), 等于 (m, 10), 大于或等于 (d, 5), 小于或等于 (d, 14)))
            返回 (-1) ' 空
        .否则
            返回 (0) ' Julian
        .如果结束
        
         ' 本源码来自易语言资源网(www.wodesoft.com)
    .如果结束
    
    
.判断 (等于 (calType, 2))
    返回 (1) ' ;  //Gregorian
.判断 (等于 (calType, 3))
    返回 (0) ' Julian
    
.默认
    
.判断结束
返回 (-1) ' 空

.子程序 D0, 双精度小数型, , 
.参数 y, 空白型, , 
.参数 m, 空白型, , 
.参数 d, 空白型, , 
.参数 calType, 空白型, , 

.局部变量 ifG, 空白型, , , 
.局部变量 monL, 空白型, , "0", 
.局部变量 i, 空白型, , , 
.局部变量 v, 双精度小数型, , , 

赋值 (ifG, ifGr (y, m, d, calType))
赋值 (monL, { 0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 })
赋值 (monL [3], 28)
.如果真 (等于 (ifG, -1))
     ' 无穷大
    返回 (1.#INF)
.如果真结束
.如果 (等于 (ifG, 1))
    .如果真 (或者 (并且 (不等于 (求余数 (y, 100), 0), 等于 (求余数 (y, 4), 0)), 等于 (求余数 (y, 400), 0)))
        赋值 (monL [3], 相加 (monL [3], 1))
    .如果真结束
    
.否则
    .如果真 (等于 (求余数 (y, 4), 0))
        赋值 (monL [3], 相加 (monL [3], 1))
    .如果真结束
    
.如果结束
.计次循环首 (m, i)
    赋值 (v, 相加 (v, monL [i]))
.计次循环尾 ()
赋值 (v, 相加 (v, d))
返回 (v)


.子程序 revD0, 双精度小数型, , 
.参数 y, 空白型, , 
.参数 x, 空白型, , y年日差天数D0为x
.参数 calType, 空白型, 可空, 

.局部变量 j, 空白型, , , 
.局部变量 mL, 双精度小数型, , , 
.局部变量 m, 双精度小数型, , , 

检查 (不等于 (x, 38))
.计次循环首 (12, j)
    赋值 (mL, 相减 (D0 (y, 相加 (j, 1), 1, calType), D0 (y, j, 1, calType)))
    .如果 (或者 (小于或等于 (x, mL), 等于 (j, 12)))
        赋值 (m, j)
        跳出循环 ()
    .否则
        赋值 (x, 相减 (x, mL))
    .如果结束
     ' 本源码来自易语言资源网(www.wodesoft.com)
.计次循环尾 ()
.如果真 (并且 (等于 (calType, 1), 并且 (等于 (y, 1582), 等于 (m, 10), 大于或等于 (x, 5), 小于或等于 (x, 14))))
    返回 (1.#INF)
.如果真结束
返回 (相加 (相乘 (100, m), x))

.子程序 D, 整数型, , 
.参数 y, 空白型, , 
.参数 calType, 空白型, , 

.局部变量 v, 空白型, , , 

赋值 (v, 相加 (相乘 (相减 (y, 1), 365), 取整 (相除 (相减 (y, 1), 4)))) ' Julian的年差天数
.如果真 (等于 (ifGr (y, 12, 1, calType), 1))
    赋值 (v, 相加 (v, 负 (取整 (相除 (相减 (y, 1), 100))), 取整 (相除 (相减 (y, 1), 400)))) ' Gregorian的年差天数
.如果真结束
返回 (v)

.子程序 SD, 整数型, , /标准天数(Standard Days)(y年m月d日距该历制的1年1月0日的天数)
.参数 y, 空白型, , 
.参数 m, 空白型, , 
.参数 d, 空白型, , 
.参数 calType, 空白型, , 

.如果真 (等于 (ifGr (y, m, d, calType), -1))
    返回 (1.#INF)
.如果真结束
.如果真 (等于 (ifGr (y, m, d, calType), 1))
    返回 (相加 (相减 (相加 (相乘 (相减 (y, 1), 365), 取整 (相除 (相减 (y, 1), 4))), 取整 (相除 (相减 (y, 1), 100))), 取整 (相除 (相减 (y, 1), 400)), D0 (y, m, d, calType))) ' //Gregorian的标准天数
.如果真结束
返回 (相加 (相乘 (相减 (y, 1), 365), 取整 (相除 (相减 (y, 1), 4)), D0 (y, m, d, calType)))

.子程序 ESD, 双精度小数型, , //等效标准天数(Equivalent Standard Days)(y年m月d日距该历制的1年1月0日的天数)
.参数 y, 空白型, , 
.参数 m, 空白型, , 
.参数 d, 空白型, , 
.参数 calType, 空白型, , 

.如果真 (等于 (ifGr (y, m, d, calType), -1))
    返回 (1.#INF)
.如果真结束
.如果真 (等于 (ifGr (y, m, d, calType), 1))
    返回 (SD (y, m, d, calType)) ' Gregorian的标准天数
.如果真结束
返回 (相减 (SD (y, m, d, calType), 2)) ' //Julian的标准天数

.子程序 JD, 双精度小数型, , 
.参数 y, 空白型, , 
.参数 m, 空白型, , 
.参数 d, 空白型, , 
.参数 h, 空白型, , 
.参数 min, 空白型, , 
.参数 sec, 空白型, , 
.参数 zone, 空白型, , 
.参数 calType, 空白型, , 

.局部变量 ifG, 空白型, , , 
.局部变量 jt, 双精度小数型, , , 
.局部变量 jd, 双精度小数型, , , 

赋值 (ifG, ifGr (y, m, d, calType))
赋值 (jt, 相减 (相除 (相加 (h, 相除 (相加 (min, 相除 (sec, 60)), 60)), 24), 0.5, 相除 (zone, 24)))
赋值 (jd, 选择 (不等于 (ifG, 0), 相加 (SD (y, m, d, calType), 1721425, jt), 相加 (SD (y, m, d, calType), 1721423, jt)))
返回 (jd)

.子程序 revSD, 整数型, , //当calType==1且x==577736或x<=577737时，ifG才起作用，ifG=1表示返回的是标准日历的10-15和10-16日（是Gregorian），ifG=0表示返回的是标准日历的10-3和10-4日（是Julian）
.参数 x, 双精度小数型, , 
.参数 calType, 空白型, , 
.参数 ifG, 空白型, , 

.局部变量 u0, 空白型, , , 
.局部变量 u0D0, 空白型, , , 
.局部变量 u0L, 空白型, , , 

赋值 (u0, 相加 (取整 (相除 (x, 365.25)), 1)) ' 试探一个最小估计的年份值
赋值 (u0D0, 相减 (x, D (u0, calType))) ' ;  //x的日差天数
.如果真 (并且 (等于 (calType, 1), 等于 (ifG, 0), 并且 (大于或等于 (x, 577461), 小于或等于 (x, 577737))))
    赋值 (u0D0, 相减 (u0D0, 12))
.如果真结束
赋值 (u0L, D0 (u0, 12, 31, calType)) ' u0年的长度
.如果真 (大于 (u0D0, u0L))
    赋值 (u0D0, 相减 (u0D0, u0L))
    赋值 (u0, 相加 (u0, 1))
.如果真结束
返回 (相加 (相乘 (u0, 10000), revD0 (u0, u0D0, calType)))

.子程序 revJD, 整数型, , 
.参数 x, 双精度小数型, , 
.参数 zone, 空白型, , 
.参数 calType, 空白型, , 

.局部变量 jt, 双精度小数型, , , 
.局部变量 x0, 空白型, , , 
.局部变量 h, 空白型, , , 
.局部变量 min, 空白型, , , 
.局部变量 sec, 空白型, , , 
.局部变量 ymd, 空白型, , , 

赋值 (jt, 相加 (tail (x), 0.5, 相除 (zone, 24)))
赋值 (x0, x) ' ;  //备份x
赋值 (x, 取整 (x))
.如果真 (大于或等于 (jt, 1))
    赋值 (jt, 相减 (jt, 1))
    赋值 (x, 相加 (x, 1))
.如果真结束
赋值 (h, 取整 (相乘 (jt, 24)))
赋值 (min, 取整 (相乘 (tail (相减 (相乘 (jt, 24), h)), 60)))
赋值 (sec, 取整 (相乘 (tail (相减 (相乘 (jt, 24, 60), 相乘 (h, 60), min)), 60)))
.如果真 (等于 (calType, 2))
    赋值 (ymd, revSD (相减 (x, 1721425), calType, 1))
.如果真结束
.如果真 (等于 (calType, 3))
    赋值 (ymd, revSD (相减 (x, 1721423), calType, 1))
.如果真结束
.如果真 (等于 (calType, 1))
    .如果 (小于 (x0, 相减 (2299160.5, 相除 (zone, 24))))
        赋值 (ymd, revSD (相减 (x, 1721423), calType, 0))
    .否则
        赋值 (ymd, revSD (相减 (x, 1721425), calType, 1))
    .如果结束
    ' 本源码来自易语言资源网(www.wodesoft.com)
.如果真结束
返回 (相加 (相乘 (ymd, 1000000), 相乘 (h, 10000), 相乘 (min, 100), sec))

.子程序 Ju2Gr, 整数型, , 
.参数 y, 空白型, , 
.参数 m, 空白型, , 
.参数 d, 空白型, , 

返回 (取整 (相除 (revJD (JD (y, m, d, 12, 0, 0, 0, 3), 0, 2), 1000000)))

.子程序 Gr2Ju, 整数型, , 
.参数 y, 空白型, , 
.参数 m, 空白型, , 
.参数 d, 空白型, , 

返回 (取整 (相除 (revJD (JD (y, m, d, 12, 0, 0, 0, 2), 0, 3), 1000000)))

.子程序 Ju2No, 整数型, , 
.参数 y, 空白型, , 
.参数 m, 空白型, , 
.参数 d, 空白型, , 

返回 (取整 (相除 (revJD (JD (y, m, d, 12, 0, 0, 0, 3), 0, 1), 1000000)))

.子程序 No2Ju, 整数型, , 
.参数 y, 空白型, , 
.参数 m, 空白型, , 
.参数 d, 空白型, , 

返回 (取整 (相除 (revJD (JD (y, m, d, 12, 0, 0, 0, 1), 0, 3), 1000000)))

.子程序 Gr2No, 整数型, , 
.参数 y, 空白型, , 
.参数 m, 空白型, , 
.参数 d, 空白型, , 

返回 (取整 (相除 (revJD (JD (y, m, d, 12, 0, 0, 0, 2), 0, 1), 1000000)))

.子程序 No2Gr, 整数型, , 
.参数 y, 空白型, , 
.参数 m, 空白型, , 
.参数 d, 空白型, , 

返回 (取整 (相除 (revJD (JD (y, m, d, 12, 0, 0, 0, 1), 0, 2), 1000000)))

.子程序 Day, 整数型, , 
.参数 y, 空白型, , 
.参数 m, 空白型, , 
.参数 d, 空白型, , 
.参数 calType, 空白型, , 

返回 (nnr (ESD (y, m, d, calType), 7))

.子程序 sZod, 整数型, , 
.参数 m, 空白型, , 
.参数 d, 空白型, , 

.局部变量 zodd, 空白型, , "0", 
.局部变量 i, 空白型, , , 

赋值 (zodd, { 1222, 122, 222, 321, 421, 522, 622, 722, 822, 922, 1022, 1122, 1222 })
.如果 (或者 (大于或等于 (相加 (相乘 (100, m), d), zodd [1]), 小于 (相加 (相乘 (100, m), d), zodd [2])))
    赋值 (i, 0)
.否则
    .计次循环首 (12, i)
        .如果真 (并且 (大于或等于 (相加 (相乘 (100, m), d), zodd [相加 (i, 1)]), 小于 (相加 (相乘 (100, m), d), zodd [相加 (i, 2)])))
            跳出循环 ()
        .如果真结束
        
    .计次循环尾 ()
.如果结束
返回 (i)


.程序集 节气函数集, , , 

.子程序 S, 双精度小数型, , pd取值为0或1，分别表示平气和定气,该函数返回节气的D0值
.参数 y, 空白型, , 
.参数 n, 空白型, , 
.参数 pd, 空白型, , 
.参数 calType, 空白型, , 

.局部变量 juD, 双精度小数型, , , 
.局部变量 tht, 双精度小数型, , , 
.局部变量 yrD, 双精度小数型, , , 
.局部变量 shuoD, 双精度小数型, , , 
.局部变量 vs, 双精度小数型, , , 

赋值 (juD, 相加 (相乘 (y, 相减 (365.2423112, 相乘 (6.4e-014, 相减 (y, 100), 相减 (y, 100)), 相乘 (3.047e-008, 相减 (y, 100)))), 相乘 (15.218427, n), 1721050.71301)) ' 儒略日
赋值 (tht, 相减 (相乘 (0.0003, y), 0.372781384, 相乘 (0.2617913325, n))) ' 角度
赋值 (yrD, 相乘 (相减 (相乘 (1.945, 求正弦 (tht)), 相乘 (0.01206, 求正弦 (相乘 (2, tht)))), 相减 (1.048994, 相乘 (2.583e-005, y)))) ' 年差实均数
赋值 (shuoD, 相乘 (-0.0018, 求正弦 (相减 (相乘 (2.313908653, y), 0.439822951, 相乘 (3.0443, n))))) ' 朔差实均数
赋值 (vs, 选择 (不等于 (pd, 0), 相减 (相加 (juD, yrD, shuoD), ESD (y, 1, 0, calType), 1721425), 相减 (juD, ESD (y, 1, 0, calType), 1721425)))
返回 (vs)

.类模块 农历函数类, , , 

.程序集变量 leapNumber, 空白型, , "0", 
.程序集变量 date, 双精度小数型, , , 
.程序集变量 syzygyType, 文本型, , , 
.程序集变量 syzygyTime, 双精度小数型, , , 
.程序集变量 ecliType, 空白型, , , 
.程序集变量 ecliTime, 双精度小数型, , , 
.程序集变量 month, 空白型, , , 
.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用
 ' 农历闰月信息

赋值 (leapNumber, { 0, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 5, 5, 5, 6, 6, 6, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10, 10, 11, 11, 12, 12, 12, 13, 13, 13, 14, 14, 15, 15, 15, 16, 16, 16, 17, 17, 17, 18, 18, 19, 19, 19, 20, 20, 20, 21, 21, 22, 22, 22, 23, 23, 23, 24, 24, 24, 25, 25, 26, 26, 26, 27, 27, 27, 28, 28, 29, 29, 29, 30, 30, 30, 31, 31, 31, 32, 32, 33, 33, 33, 34, 34, 34, 35, 35, 36, 36, 36, 37, 37, 37, 38, 38, 38, 39, 39, 40, 40, 40, 41, 41, 41, 42, 42, 43, 43, 43, 44, 44, 44, 45, 45, 46, 46, 46, 47, 47, 47, 48, 48, 48, 49, 49, 50, 50, 50, 51, 51, 52, 52, 52, 53, 53, 53, 54, 54, 54, 55, 55, 56, 56, 56, 56, 57, 57, 57, 58, 58, 59, 59, 59, 59, 60, 60, 61, 61, 62, 62, 63, 63, 64, 64, 64, 64, 65, 65, 65, 65, 66, 66, 66, 67, 67, 68, 68, 69, 69, 69, 69, 70, 71, 71, 71, 71, 71, 71, 72, 72, 73, 73, 74, 74, 74, 75, 75, 75, 75, 76, 76, 77, 77, 77, 77, 78, 79, 79, 79, 79, 79, 80, 80, 80, 81, 82, 82, 82, 83, 83, 84, 84, 84, 85, 85, 85, 86, 86, 86, 86, 87, 87, 87, 87, 88, 88, 89, 89, 90, 90, 91, 91, 91, 92, 92, 93, 93, 94, 94, 94, 94, 95, 95, 96, 96, 96, 96, 97, 97, 98, 98, 98, 99, 99, 100, 100, 100, 101, 101, 101, 102, 102, 102, 103, 103, 104, 104, 104, 105, 105, 105, 106, 106, 106, 107, 107, 107, 108, 108, 109, 109, 109, 110, 110, 111, 111, 111, 112, 112, 112, 113, 113, 114, 114, 114, 115, 115, 116, 116, 116, 117, 117, 117, 117, 118, 118, 119, 119, 119, 120, 120, 121, 121, 121, 122, 122, 122, 123, 123, 124, 124, 124, 124, 125, 125, 126, 126, 126, 126, 127, 127, 128, 128, 129, 129, 130, 130, 130, 130, 131, 131, 132, 132, 132, 133, 133, 133, 134, 134, 135, 135, 135, 136, 136, 136, 137, 137, 137, 138, 138, 139, 139, 139, 140, 140, 141, 141, 141, 142, 142, 142, 143, 143, 143, 144, 144, 144, 145, 145, 146, 146, 146, 147, 147, 147, 148, 148, 149, 149, 149, 150, 150, 150, 151, 151, 151, 152, 152, 153, 153, 153, 154, 154, 154, 155, 155, 156, 156, 156, 157, 157, 157, 158, 158, 158, 159, 159, 160, 160, 160, 161, 161, 161, 162, 162, 163, 163, 163, 164, 164, 164, 165, 165, 165, 166, 166, 167, 167, 167, 168, 168, 168, 169, 169, 170, 170, 170, 171, 171, 171, 172, 172, 172, 173, 173, 174, 174, 174, 175, 175, 175, 176, 176, 177, 177, 177, 178, 178, 178, 179, 179, 179, 180, 180, 181, 181, 181, 182, 182, 182, 183, 183, 184, 184, 184, 185, 185, 185, 186, 186, 186, 187, 187, 188, 188, 188, 189, 189, 189, 190, 190, 191, 191, 191, 192, 192, 192, 193, 193, 193, 194, 194, 195, 195, 195, 196, 196, 196, 197, 197, 198, 198, 198, 199, 199, 199, 200, 200, 200, 201, 201, 202, 202, 202, 203, 203, 203, 204, 204, 205, 205, 205, 206, 206, 206, 207, 207, 207, 208, 208, 209, 209, 209, 210, 210, 210, 211, 211, 212, 212, 212, 213, 213, 213, 214, 214, 214, 214, 214, 215, 215, 215, 216, 216, 216, 217, 217, 218, 218, 218, 219, 219, 219, 220, 220, 221, 221, 221, 222, 222, 222, 223, 223, 223, 224, 224, 225, 225, 225, 226, 226, 226, 227, 227, 228, 228, 228, 229, 229, 229, 230, 230, 230, 231, 231, 232, 232, 232, 233, 233, 233, 234, 234, 235, 235, 235, 236, 236, 236, 237, 237, 237, 238, 238, 239, 239, 239, 240, 240, 240, 241, 241, 242, 242, 242, 243, 243, 243, 244, 244, 244, 245, 245, 246, 246, 246, 247, 247, 247, 248, 248, 249, 249, 249, 250, 250, 250, 251, 251, 252, 252, 252, 253, 253, 253, 254, 254, 254, 255, 255, 256, 256, 256, 257, 257, 257, 258, 258, 259, 259, 259, 260, 260, 260, 261, 261, 261, 262, 262, 263, 263, 263, 264, 264, 264, 265, 265, 266, 266, 266, 267, 267, 267, 268, 268, 268, 269, 269, 270, 270, 270, 271, 271, 271, 272, 272, 273, 273, 273, 274, 274, 274, 275, 275, 276, 276, 276, 277, 277, 277, 278, 278, 278, 279, 279, 280, 280, 280, 281, 281, 281, 282, 282, 283, 283, 283, 284, 284, 284, 285, 285, 285, 286, 286, 287, 287, 287, 288, 288, 288, 289, 289, 290, 290, 290, 291, 291, 291, 292, 292, 292, 293, 293, 294, 294, 294, 295, 295, 295, 296, 296, 297, 297, 297, 298, 298, 298, 299, 299, 299, 300, 300, 301, 301, 301, 302, 302, 302, 303, 303, 304, 304, 304, 305, 305, 305, 306, 306, 306, 307, 307, 308, 308, 308, 309, 309, 309, 310, 310, 311, 311, 312, 312, 312, 313, 313, 313, 314, 314, 315, 315, 315, 316, 316, 316, 317, 317, 317, 318, 318, 319, 319, 319, 320, 320, 320, 321, 321, 322, 322, 322, 323, 323, 323, 324, 324, 325, 325, 325, 326, 326, 326, 327, 327, 327, 328, 328, 329, 329, 329, 330, 330, 330, 331, 331, 332, 332, 332, 333, 333, 333, 334, 334, 334, 335, 335, 336, 336, 336, 337, 337, 337, 338, 338, 339, 339, 339, 340, 340, 340, 341, 341, 341, 342, 342, 343, 343, 343, 344, 344, 344, 345, 345, 346, 346, 346, 347, 347, 347, 348, 348, 348, 349, 349, 350, 350, 350, 351, 351, 351, 352, 352, 353, 353, 353, 354, 354, 354, 355, 355, 355, 356, 356, 357, 357, 357, 358, 358, 358, 359, 359, 360, 360, 360, 361, 361, 361, 362, 362, 362, 363, 363, 364, 364, 364, 365, 365, 365, 366, 366, 367, 367, 367, 368, 368, 368, 369, 369, 369, 370, 370, 371, 371, 371, 372, 372, 372, 373, 373, 374, 374, 374, 375, 375, 375, 376, 376, 376, 377, 377, 378, 378, 378, 379, 379, 379, 380, 380, 381, 381, 381, 382, 382, 382, 383, 383, 383, 384, 384, 385, 385, 385, 386, 386, 386, 387, 387, 388, 388, 388, 389, 389, 389, 390, 390, 390, 391, 391, 392, 392, 392, 393, 393, 393, 394, 394, 395, 395, 395, 396, 396, 396, 397, 397, 397, 398, 398, 399, 399, 399, 400, 400, 400, 401, 401, 402, 402, 402, 403, 403, 403, 404, 404, 404, 405, 405, 406, 406, 406, 407, 407, 407, 408, 408, 409, 409, 409, 410, 410, 410, 411, 411, 411, 412, 412, 413, 413, 413, 414, 414, 414, 415, 415, 416, 416, 416, 417, 417, 417, 418, 418, 418, 419, 419, 420, 420, 420, 421, 421, 421, 422, 422, 423, 423, 423, 424, 424, 424, 425, 425, 425, 426, 426, 427, 427, 427, 428, 428, 428, 429, 429, 430, 430, 430, 431, 431, 431, 432, 432, 432, 433, 433, 434, 434, 434, 435, 435, 435, 436, 436, 437, 437, 437, 438, 438, 438, 439, 439, 439, 440, 440, 441, 441, 441, 442, 442, 442, 443, 443, 444, 444, 444, 445, 445, 445, 446, 446, 446, 447, 447, 448, 448, 448, 449, 449, 449, 450, 450, 451, 451, 451, 452, 452, 452, 453, 453, 453, 454, 454, 455, 455, 455, 456, 456, 456, 457, 457, 458, 458, 458, 459, 459, 459, 460, 460, 460, 461, 461, 462, 462, 462, 463, 463, 463, 464, 464, 465, 465, 465, 466, 466, 466, 467, 467, 467, 468, 468, 469, 469, 469, 470, 470, 470, 471, 471, 472, 472, 472, 473, 473, 473, 474, 474, 474, 475, 475, 475, 476, 476, 477, 477, 477, 478, 478, 478, 479, 479, 480, 480, 480, 481, 481, 481, 482, 482, 482, 483, 483, 484, 484, 484, 485, 485, 485, 486, 486, 487, 487, 487, 488, 488, 488, 489, 489, 489, 490, 490, 491, 491, 491, 492, 492, 492, 493, 493, 494, 494, 494, 495, 495, 495, 496, 496, 496, 497, 497, 498, 498, 498, 499, 499, 499, 500, 500, 501, 501, 501, 502, 502, 502, 503, 503, 503, 504, 504, 505, 505, 505, 506, 506, 506, 507, 507, 508, 508, 508, 509, 509, 509, 510, 510, 510, 511, 511, 512, 512, 512, 513, 513, 513, 514, 514, 515, 515, 515, 516, 516, 516, 517, 517, 517, 518, 518, 519, 519, 519, 520, 520, 520, 521, 521, 522, 522, 522, 523, 523, 523, 524, 524, 524, 525, 525, 526, 526, 526, 527, 527, 527, 528, 528, 529, 529, 529, 530, 530, 530, 531, 531, 531, 532, 532, 533, 533, 533, 534, 534, 534, 535, 535, 536, 536, 536, 537, 537, 537, 538, 538, 538, 539, 539, 540, 540, 540, 541, 541, 541, 542, 542, 543, 543, 543, 544, 544, 544, 545, 545, 545, 546, 546, 547, 547, 547, 548, 548, 548, 549, 549, 550, 550, 550, 551, 551, 551, 552, 552, 552, 553, 553, 554, 554, 554, 555, 555, 555, 556, 556, 557, 557, 557, 558, 558, 558, 559, 559, 559, 560, 560, 561, 561, 561, 562, 562, 562, 563, 563, 563, 564, 564, 565, 565, 565, 566, 566, 566, 567, 567, 568, 568, 568, 569, 569, 569, 570, 570, 570, 571, 571, 572, 572, 572, 573, 573, 573, 574, 574, 575, 575, 575, 576, 576, 576, 577, 577, 578, 578, 578, 579, 579, 579, 580, 580, 580, 581, 581, 582, 582, 582, 583, 583, 583, 584, 584, 584, 585, 585, 586, 586, 586, 587, 587, 587, 588, 588, 589, 589, 589, 590, 590, 590, 591, 591, 591, 592, 592, 593, 593, 593, 594, 594, 594, 595, 595, 596, 596, 596, 597, 597, 597, 598, 598, 598, 599, 599, 600, 600, 600, 601, 601, 601, 602, 602, 603, 603, 603, 604, 604, 604, 605, 605, 605, 606, 606, 607, 607, 607, 608, 608, 608, 609, 609, 610, 610, 610, 611, 611, 611, 612, 612, 612, 613, 613, 614, 614, 614, 615, 615, 615, 616, 616, 617, 617, 617, 618, 618, 618, 619, 619, 619, 620, 620, 621, 621, 621, 622, 622, 622, 623, 623, 624, 624, 624, 625, 625, 625, 626, 626, 626, 627, 627, 628, 628, 628, 629, 629, 629, 630, 630, 631, 631, 631, 632, 632, 632, 633, 633, 633, 634, 634, 635, 635, 635, 636, 636, 636, 637, 637, 638, 638, 638, 639, 639, 639, 640, 640, 640, 641, 641, 642, 642, 642, 643, 643, 643, 644, 644, 645, 645, 645, 646, 646, 646, 647, 647, 647, 648, 648, 649, 649, 649, 650, 650, 650, 651, 651, 652, 652, 652, 653, 653, 653, 654, 654, 654, 655, 655, 656, 656, 656, 657, 657, 657, 658, 658, 659, 659, 659, 660, 660, 660, 661, 661, 661, 662, 662, 663, 663, 663, 664, 664, 664, 665, 665, 666, 666, 666, 667, 667, 667, 668, 668, 668, 669, 669, 670, 670, 670, 671, 671, 671, 672, 672, 673, 673, 673, 674, 674, 674, 675, 675, 675, 676, 676, 677, 677, 677, 678, 678, 678, 679, 679, 680, 680, 680, 681, 681, 681, 682, 682, 682, 683, 683, 684, 684, 684, 685, 685, 685, 686, 686, 687, 687, 687, 688, 688, 688, 689, 689, 689, 690, 690, 691, 691, 691, 692, 692, 692, 693, 693, 694, 694, 694, 695, 695, 695, 696, 696, 696, 697, 697, 698, 698, 698, 699, 699, 699, 700, 700, 701, 701, 701, 702, 702, 702, 703, 703, 703, 704, 704, 705, 705, 705, 706, 706, 706, 707, 707, 707, 708, 708, 709, 709, 709, 710, 710, 710, 711, 711, 712, 712, 712, 713, 713, 713, 714, 714, 714, 715, 715, 716, 716, 716, 717, 717, 717, 718, 718, 719, 719, 719, 720, 720, 720, 721, 721, 721, 722, 722, 723, 723, 723, 724, 724, 724, 725, 725, 726, 726, 726, 727, 727, 727, 728, 728, 728, 729, 729, 730, 730, 730, 731, 731, 731, 732, 732, 733, 733, 733, 734, 734, 734, 735, 735, 736, 736, 736, 737, 737, 737, 738, 738, 738, 739, 739, 740, 740, 740, 741, 741, 741, 742, 742, 742, 743, 743, 744, 744, 744, 745, 745, 745, 746, 746, 747, 747, 747, 748, 748, 748, 749, 749, 749, 750, 750, 751, 751, 751, 752, 752, 752, 754, 754, 755, 755, 755, 756, 756, 756, 757, 757, 757, 758, 758, 759, 759, 759, 760, 760, 760, 761, 761, 762, 762, 762, 763, 763, 763, 764, 764, 764, 765, 765, 766, 766, 766, 767, 767, 767, 768, 768, 769, 769, 769, 770, 770, 770, 771, 771, 771, 772, 772, 773, 773, 773, 774, 774, 774, 775, 775, 776, 776, 776, 777, 777, 777, 778, 778, 778, 779, 779, 780, 780, 780, 781, 781, 781, 782, 782, 783, 783, 783, 784, 784, 784, 785, 785, 785, 786, 786, 787, 787, 787, 788, 788, 788, 789, 789, 790, 790, 790, 791, 791, 791, 792, 792, 792, 793, 793, 794, 794, 794, 795, 795, 795, 796, 796, 796, 797, 797, 798, 798, 798, 799, 799, 799, 800, 800, 801, 801, 801, 802, 802, 802, 803, 803, 804, 804, 804, 805, 805, 805, 806, 806, 806, 807, 807, 808, 808, 808, 809, 809, 809, 810, 810, 810, 811, 811, 812, 812, 812, 813, 813, 813, 814, 814, 815, 815, 815, 816, 816, 816, 817, 817, 818, 818, 818, 819, 819, 819, 820, 820, 820, 821, 821, 822, 822, 822, 823, 823, 823, 824, 824, 825, 825, 825, 826, 826, 826, 827, 827, 827, 828, 828, 829, 829, 829, 830, 830, 830, 831, 831, 832, 832, 832, 833, 833, 833, 834, 834, 834, 835, 835, 836, 836, 836, 837, 837, 837, 838, 838, 839, 839, 839, 840, 840, 840, 841, 841, 841, 842, 842, 843, 843, 843, 844, 844, 844, 845, 845, 845, 846, 846, 847, 847, 847, 848, 848, 848, 849, 849, 850, 850, 850, 851, 851, 851, 852, 852, 852, 853, 853, 854, 854, 854, 855, 855, 855, 856, 856, 857, 857, 857, 858, 858, 858, 859, 859, 859, 860, 860, 861, 861, 861, 862, 862, 862, 863, 863, 864, 864, 863, 864, 864, 864, 865, 865, 865, 866, 866, 867, 867, 867, 868, 868, 868, 869, 869, 870, 870, 870, 871, 871, 871, 872, 872, 873, 873, 873, 874, 874, 874, 875, 875, 875, 876, 876, 877, 877, 877, 878, 878, 878, 879, 879, 879, 880, 880, 881, 881, 881, 882, 882, 882, 883, 883, 884, 884, 884, 885, 885, 885, 886, 886, 886, 887, 887, 888, 888, 888, 889, 889, 889, 890, 890, 891, 891, 891, 892, 892, 892, 893, 893, 893, 894, 894, 895, 895, 895, 896, 896, 896, 897, 897, 898, 898, 898, 899, 899, 899, 900, 900, 900, 901, 901, 902, 902, 902, 903, 903, 903, 904, 904, 905, 905, 905, 906, 906, 906, 907, 907, 907, 908, 908, 909, 909, 909, 910, 910, 910, 911, 911, 912, 912, 912, 913, 913, 913, 914, 914, 914, 915, 915, 916, 916, 916, 917, 917, 917, 918, 918, 919, 919, 919, 920, 920, 920, 921, 921, 921, 922, 922, 923, 923, 923, 924, 924, 924, 925, 925, 925, 926, 926, 927, 927, 927, 928, 928, 928, 929, 929, 930, 930, 930, 931, 931, 931, 932, 932, 932, 933, 933, 934, 934, 934, 935, 935, 935, 936, 936, 937, 937, 937, 938, 938, 938, 939, 939, 939, 940, 940, 941, 941, 941, 942, 942, 942, 943, 943, 944, 944, 944, 945, 945, 945, 946, 946, 946, 947, 947, 948, 948, 948, 949, 949, 949, 950, 950, 951, 951, 951, 952, 952, 952, 953, 953, 953, 954, 954, 955, 955, 955, 956, 956, 956, 957, 957, 958, 958, 958, 959, 959, 959, 960, 960, 960, 961, 961, 962, 962, 962, 963, 963, 963, 964, 964, 965, 965, 965, 966, 966, 966, 967, 967, 967, 968, 968, 969, 969, 969, 970, 970, 970, 971, 971, 971, 972, 972, 973, 973, 973, 974, 974, 974, 975, 975, 976, 976, 976, 977, 977, 977, 978, 978, 978, 979, 979, 980, 980, 980, 981, 981, 981, 982, 982, 983, 983, 983, 984, 984, 984, 985, 985, 986, 986, 986, 987, 987, 987, 988, 988, 988, 989, 989, 990, 990, 990, 991, 991, 991, 992, 992, 993, 993, 993, 994, 994, 994, 995, 995, 995, 996, 996, 997, 997, 997, 998, 998, 998, 999, 999, 1000, 1000, 1000, 1001, 1001, 1001, 1002, 1002, 1002, 1003, 1003, 1004, 1004, 1004, 1005, 1005, 1005, 1006, 1006, 1006, 1007, 1007, 1008, 1008, 1008, 1009, 1009, 1009, 1010, 1010, 1011, 1011, 1011, 1012, 1012, 1012, 1013, 1013, 1013, 1014, 1014, 1015, 1015, 1015, 1016, 1016, 1016, 1017, 1017, 1018, 1018, 1018, 1019, 1019, 1019, 1020, 1020, 1020, 1021, 1021, 1022, 1022, 1022, 1023, 1023, 1023, 1024, 1024, 1025, 1025, 1025, 1026, 1026, 1026, 1027, 1027, 1027, 1028, 1028, 1029, 1029, 1029, 1030, 1030, 1030, 1031, 1031, 1032, 1032, 1032, 1033, 1033, 1033, 1034, 1034, 1034, 1035, 1035, 1036, 1036, 1036, 1037, 1037, 1037, 1038, 1038, 1039, 1039, 1039, 1040, 1040, 1040, 1041, 1041, 1042, 1042, 1042, 1043, 1043, 1043, 1044, 1044, 1044, 1045, 1045, 1046, 1046, 1046, 1047, 1047, 1047, 1048, 1048, 1048, 1049, 1049, 1050, 1050, 1050, 1051, 1051, 1051, 1052, 1052, 1053, 1053, 1053, 1054, 1054, 1054, 1055, 1055, 1055, 1056, 1056, 1057, 1057, 1057, 1058, 1058, 1058, 1059, 1059, 1060, 1060, 1060, 1061, 1061, 1061, 1062, 1062, 1062, 1063, 1063, 1064, 1064, 1064, 1065, 1065, 1065, 1066, 1066, 1067, 1067, 1067, 1068, 1068, 1068, 1069, 1069, 1069, 1070, 1070, 1071, 1071, 1071, 1072, 1072, 1072, 1073, 1073, 1074, 1074, 1074, 1075, 1075, 1075, 1076, 1076, 1076, 1077, 1077, 1078, 1078, 1078, 1079, 1079, 1079, 1080, 1080, 1081, 1081, 1081, 1082, 1082, 1082, 1083, 1083, 1083, 1084, 1084 })


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 leapNum, 整数型, , 
.参数 y, 空白型, , 

.如果真 (小于 (y, 0))
    返回 (leapNumber [相加 (y, 849, 1)])
.如果真结束
返回 (leapNumber [相加 (相减 (y, 1), 849, 1)])

.子程序 leapMon, 整数型, 公开, 
.参数 y, 空白型, , 

.局部变量 starY, 空白型, , , 
.局部变量 leapM, 文本型, , , 
.局部变量 v, 文本型, , , 
.局部变量 n, 空白型, , , 

赋值 (starY, -849) ' 记录从公元前850年开始
赋值 (leapM, “0c0080050010a0070030c0080050010a0070030c0080050020a0070030c0080050020a0070030c0090050020a0070030c0090050020a0060030c0060030c00900600c0c0060c00c00c00c0c000600c0c0006090303030006000c00c060c0006c00000c0c0c0060003030006c00009009c0090c00c009000300030906030030c0c00060c00090c0060600c0030060c00c003006009060030c0060060c0090900c00090c0090c00c006030006060003030c0c00030c0060030c0090060030c0090300c0080050020a0060030c0080050020b0070030c0090050010a0070030b0090060020a0070040c0080050020a0060030c0080050020b0070030c0090050010a0070030b0090060020a0070040c0080050020a0060030c0080050020b0070030c0090050000c00900909009009090090090090900900909009009009090090090900900900909009009090090090090900900909009009090090090090900900909009009009090090090900900900909009009090060030c0090050010a0070030b008005001090070040c0080050020a0060030c0090040010a0060030c0090050010a0070030b0080050010a008005001090050020a0060030c0080040010a0060030c0090050010a0070030b0080050010a0070030b008005001090070040c0080050020a0060030c0080040010a0060030c0090050010a0070030b008005001090070040c0080050020a0060030c0080040010a0060030c0090050010a0060030c0090050010a0070030b008005001090070040c0080050020a0060030c0080040010a0070030b0080050010a0070040c0080050020a0060030c0080040010a0070030c0090050010a0070030b0080050020a0060030c0080040010a0060030c0090050050020a0060030c0090050010b0070030c0090050010a0070040c0080040020a0060030c0080050020a0060030c0090050010a0070030b0080040020a0060040c0090050020b0070030c00a0050010a0070030b0090050020a0070030c0080040020a0060030c0090050010a0070030c0090050030b007005001090050020a007004001090060020c0070050c0090060030b0080040020a0060030b0080040010a0060030b0080050010a0050040c0080050010a0060030c0080050010b0070030c007005001090070030b0070040020a0060030c0080040020a0070030b0090050010a0060040c0080050020a0060040c0080050010b0070030c007005001090070030c0080050020a0070030c0090050020a0070030c0090050020a0060040c0090050020a0060040c0090050010b0070030c0080050030b007004001090060020c008004002090060020a008004001090050030b0080040020a0060040b0080040c00a0060020b007005001090060030b0070050020a0060020c008004002090070030c008005002090070040c0080040020a0060040b0090050010a0060030b0080050020a0060040c0080050010b00700300108005001090070030c0080050020a007003001090050030a0070030b0090050020a0060040c0090050030b0070040c0090050010c0070040c0080060020b00700400a090060020b007003002090060020a005004001090050030b007004001090050040c0080040c00a0060020c007005001090060030b0070050020a0060020c008004002090060030b008004002090060030b0080040020a0060040b0080040010b0060030b0070050010a00600400207005003080060040030700500307006004003070050030800600400307005004090060040030700500409006005002070050030a0060050030700500400206004002060050030020600400307005004090060040030700500408007005003080050040a00600500307005004002060050030800500400206005002070050040020600500307006004002070050030800600400307005004080060040a006005003080050040020700500409006004002060050030b0060050020700500308006004003070050040800600400307005004080060040020”)
 ' ;//-849-2100
赋值 (v, 取文本中间 (leapM, 相加 (相减 (y, starY), 1), 1))
.判断开始 (等于 (v, “a”))
    赋值 (n, 10)
.判断 (等于 (v, “b”))
    赋值 (n, 11)
.判断 (等于 (v, “c”))
    赋值 (n, 12)
.默认
    赋值 (n, 到数值 (v))
.判断结束
返回 (n)

.子程序 ang, 双精度小数型, , 
.参数 x, 双精度小数型, , 
.参数 t, 双精度小数型, , 
.参数 c1, 双精度小数型, , 
.参数 t0, 双精度小数型, , 
.参数 t2, 双精度小数型, , 
.参数 t3, 双精度小数型, , 

返回 (相减 (相加 (相乘 (tail (相乘 (c1, x)), 2, #pi), t0), 相乘 (t2, t, t), 相乘 (t3, t, t, t)))


.子程序 lunDate, 双精度小数型, , 返回农历日数及日月食信息的函数，如-324.57923415，负号表示闰月，百位3表示月偏食(2为月全食,1为日食0为无食),百位及十位表示日数,小数部分是朔望时刻(单位为天,若该天不朔或望则小数部分为零)
.参数 y, 空白型, , 
.参数 m, 空白型, , 
.参数 d, 空白型, , 
.参数 calType, 空白型, , 

.局部变量 t, 双精度小数型, , , 
.局部变量 ms, 双精度小数型, , , 
.局部变量 rpi, 双精度小数型, , , 
.局部变量 zone, 双精度小数型, , , 
.局部变量 f0, 双精度小数型, , , 
.局部变量 fc, 双精度小数型, , , 
.局部变量 j0, 双精度小数型, , , 
.局部变量 aa0, 双精度小数型, , , 
.局部变量 ab0, 双精度小数型, , , 
.局部变量 ac0, 双精度小数型, , , 
.局部变量 leap, 双精度小数型, , , 
.局部变量 ecli, 双精度小数型, , , 
.局部变量 lunD, 双精度小数型, , , 
.局部变量 shuoD, 双精度小数型, , , 
.局部变量 shuoT, 双精度小数型, , , 
.局部变量 wangT, 双精度小数型, , , 
.局部变量 k, 双精度小数型, , , 
.局部变量 aa, 双精度小数型, , , 
.局部变量 ab, 双精度小数型, , , 
.局部变量 ac, 双精度小数型, , , 
.局部变量 f1, 双精度小数型, , , 
.局部变量 j, 双精度小数型, , , 
.局部变量 lunD0, 双精度小数型, , , 
.局部变量 k1, 双精度小数型, , , 
.局部变量 wangD, 双精度小数型, , , 
.局部变量 s, 双精度小数型, , , 
.局部变量 r, 双精度小数型, , , 
.局部变量 p, 双精度小数型, , , 
.局部变量 q, 双精度小数型, , , 

赋值 (t, 相除 (相减 (y, 1899.5), 100))
赋值 (ms, 取整 (相乘 (相减 (y, 1900), 12.3685)))
赋值 (rpi, 相除 (180, #pi))
赋值 (zone, 8)
赋值 (f0, 相加 (相减 (相加 (ang (ms, t, 0, 0.75933, 0.0002172, 1.55e-007), 相乘 (0.53058868, ms)), 相乘 (0.000837, t)), 相除 (zone, 24), 0.5))
赋值 (fc, 相减 (0.1734, 相乘 (0.000393, t)))
赋值 (j0, 相加 (693595, 相乘 (29, ms)))
赋值 (aa0, ang (ms, t, 0.08084821133, 相除 (359.2242, rpi), 相除 (3.33e-005, rpi), 相除 (3.47e-006, rpi)))
赋值 (ab0, ang (ms, t, 0.07171366128, 相除 (306.0253, rpi), 相除 (-0.0107306, rpi), 相除 (-1.236e-005, rpi)))
赋值 (ac0, ang (ms, t, 0.08519585128, 相除 (21.2964, rpi), 相除 (0.0016528, rpi), 相除 (2.39e-006, rpi)))
赋值 (leap, 0) ' ' //闰月数,0则不闰
赋值 (ecli, 0) ' ' //日月食
赋值 (lunD, -1) ' ' //农历日数
赋值 (shuoD, 0) ' ' //本阴历月的阴历朔日数
赋值 (shuoT, 0) ' ' //本阴历月的朔时刻
赋值 (wangD, 0) ' ' //本阴历月的望时刻
赋值 (wangT, 0) ' ' //本阴历月的阴历望日数
赋值 (k, -1) ' //k=整数为朔,k=半整数为望
.判断循环首 (小于或等于 (k, 13))
    赋值 (aa, 相加 (aa0, 相乘 (0.507984293, k)))
    赋值 (ab, 相加 (ab0, 相乘 (6.73377553, k)))
    赋值 (ac, 相加 (ac0, 相乘 (6.818486628, k)))
    赋值 (f1, 相减 (相加 (相减 (相加 (f0, 相乘 (1.53058868, k), 相乘 (fc, 求正弦 (aa))), 相乘 (0.4068, 求正弦 (ab))), 相乘 (0.0021, 求正弦 (相乘 (2, aa))), 相乘 (0.0161, 求正弦 (相乘 (2, ab))), 相乘 (0.0104, 求正弦 (相乘 (2, ac)))), 相乘 (0.0074, 求正弦 (相减 (aa, ab))), 相乘 (0.0051, 求正弦 (相加 (aa, ab)))))
    赋值 (j, 相加 (j0, 相乘 (28, k), f1)) ' ;  //朔或望的等效标准天数及时刻
     ' //记录当前日期的j值
    赋值 (lunD0, 相减 (ESD (y, m, d, calType), 取整 (j))) ' 当前日距朔日的差值
    .如果真 (并且 (等于 (k, 取整 (k)), 大于或等于 (lunD0, 0), 小于或等于 (lunD0, 29)))
        赋值 (k1, k) ' 记录当前时间对应的k值
        赋值 (shuoT, tail (j))
        赋值 (lunD, 相加 (lunD0, 1))
    .如果真结束
    .如果真 (等于 (k, 相加 (k1, 0.5)))
        赋值 (wangT, tail (j))
        赋值 (wangD, 相加 (相减 (取整 (j), 相加 (相减 (ESD (y, m, d, calType), lunD), 1)), 1))
    .如果真结束
     ' 判断日月食
    .如果真 (或者 (并且 (等于 (lunD, 1), 等于 (k, k1)), 并且 (等于 (lunD, wangD), 等于 (k, 相加 (k1, 0.5)))))
        .如果真 (小于或等于 (取绝对值 (求正弦 (ac)), 0.36))
            赋值 (s, 相加 (相减 (相加 (相减 (5.19595, 相乘 (0.0048, 求余弦 (aa))), 相乘 (0.002, 求余弦 (相乘 (2, aa)))), 相乘 (0.3283, 求余弦 (ab)), 相乘 (0.006, 求余弦 (相加 (aa, ab)))), 相乘 (0.0041, 求余弦 (相减 (aa, ab)))))
            赋值 (r, 相加 (相减 (相加 (相减 (相加 (相乘 (0.207, 求正弦 (aa)), 相乘 (0.0024, 求正弦 (相乘 (2, aa)))), 相乘 (0.039, 求正弦 (ab))), 相乘 (0.0115, 求正弦 (相乘 (2, ab)))), 相乘 (0.0073, 求正弦 (相加 (aa, ab))), 相乘 (0.0067, 求正弦 (相减 (aa, ab)))), 相乘 (0.0117, 求正弦 (相乘 (2, ac)))))
            赋值 (p, 取绝对值 (相加 (相乘 (s, 求正弦 (ac)), 相乘 (r, 求余弦 (ac)))))
            赋值 (q, 相减 (相加 (相减 (相加 (0.0059, 相乘 (0.0046, 求余弦 (aa))), 相乘 (0.0182, 求余弦 (ab))), 相乘 (0.0004, 求余弦 (相乘 (2, ab)))), 相乘 (0.0005, 求余弦 (相加 (aa, ab)))))
            .如果真 (小于或等于 (相减 (p, q), 1.5572))
                赋值 (ecli, 1) ' ;  //日食
                .如果真 (不等于 (k, 取整 (k)))
                    .如果 (大于或等于 (相加 (p, q), 1.0129))
                        赋值 (ecli, 3) ' ;  //月偏食
                    .否则
                        赋值 (ecli, 2) ' ;  //月全食
                    .如果结束
                    
                     ' 本源码来自易语言资源网(www.wodesoft.com)
                .如果真结束
                
            .如果真结束
            
        .如果真结束
        
    .如果真结束
    赋值 (k, 相加 (k, 0.5))
.判断循环尾 ()
 ' //下面是对现行农历的校正（1901-2050）,由波波网友指出
  
  //1924.3.5-4.3 少一天
.如果真 (并且 (等于 (y, 1924), 或者 (并且 (等于 (m, 3), 大于或等于 (d, 5)), 并且 (等于 (m, 4), 小于或等于 (d, 3)))))
    赋值 (lunD, 相加 (lunD, 1))
    .如果真 (大于 (lunD, 30))
        赋值 (lunD, 相减 (lunD, 30))
    .如果真结束
    
.如果真结束
 ' //2018.11.7-12.6 多一天
.如果真 (并且 (等于 (y, 2018), 或者 (并且 (等于 (m, 11), 大于或等于 (d, 7)), 并且 (等于 (m, 12), 小于或等于 (d, 6)))))
    赋值 (lunD, 相减 (lunD, 1))
    .如果真 (小于 (lunD, 1))
        赋值 (lunD, 相加 (lunD, 30))
    .如果真结束
    
.如果真结束
 ' //2025.4.27-5.26 少一天
.如果真 (并且 (等于 (y, 2025), 或者 (并且 (等于 (m, 4), 大于或等于 (d, 7)), 并且 (等于 (m, 5), 小于或等于 (d, 26)))))
    赋值 (lunD, 相加 (lunD, 1))
    .如果真 (大于 (lunD, 30))
        赋值 (lunD, 相减 (lunD, 30))
    .如果真结束
    
.如果真结束
赋值 (date, lunD)
.如果 (等于 (lunD, 1))
    赋值 (syzygyType, “newMoon”) ' ;  //朔
    赋值 (syzygyTime, shuoT) ' ;      //朔的时刻
.否则
    .如果 (等于 (lunD, wangD))
        赋值 (syzygyType, “fullMoon”) ' ;  //望
        赋值 (syzygyTime, wangT) ' ;  //望的时刻
    .否则
        赋值 (syzygyType, “none”)
        赋值 (syzygyTime, -1)
    .如果结束
    
    
.如果结束
赋值 (ecliType, ecli) ' 日月食类型
赋值 (ecliTime, syzygyTime)
返回 (date)

.子程序 lunMon, 整数型, , 
.参数 y, 空白型, , 
.参数 m, 空白型, , 
.参数 d, 空白型, , 
.参数 calType, 空白型, , 

.局部变量 lunDt, 双精度小数型, , , 
.局部变量 lunD, 双精度小数型, , , 
.局部变量 leapN, 空白型, , , 
.局部变量 MonN, 双精度小数型, , , 
.局部变量 lunM, 双精度小数型, , , 

赋值 (lunDt, lunDate (y, m, d, calType))
赋值 (lunD, 取整 (相减 (lunDt, 相乘 (取整 (相除 (lunDt, 100)), 100)))) ' ;  //农历日数
赋值 (leapN, 0) ' ;  //从当年到-849年的总闰月数
赋值 (leapN, leapNum (y))
赋值 (MonN, 相减 (四舍五入 (相除 (相减 (ESD (y, m, d, calType), ESD (-849, 1, 21, calType), lunD), 29.530588), ), leapN)) ' //从当年到-849年的有效总月数(扣除闰月)
.如果真 (小于或等于 (y, 240))
    赋值 (MonN, 相加 (MonN, 1))
.如果真结束
.如果真 (小于或等于 (y, 237))
    赋值 (MonN, 相减 (MonN, 1))
.如果真结束
.如果真 (小于 (y, 24))
    赋值 (MonN, 相加 (MonN, 1))
.如果真结束
.如果真 (小于 (y, 9))
    赋值 (MonN, 相减 (MonN, 1))
.如果真结束
.如果真 (小于或等于 (y, -255))
    赋值 (MonN, 相加 (MonN, 1))
.如果真结束
.如果真 (小于或等于 (y, -256))
    赋值 (MonN, 相加 (MonN, 2))
.如果真结束
.如果真 (小于或等于 (y, -722)) ' '历史上的修改月建
    赋值 (MonN, 相加 (MonN, 1))
.如果真结束

赋值 (lunM, 四舍五入 (相加 (rem (相减 (MonN, 3), 12), 1), ))
.如果 (并且 (等于 (lunM, leapMon (相减 (y, 1))), 等于 (m, 1), 小于 (d, lunD)))
    赋值 (lunM, 相乘 (lunM, -1)) ' ;    //如果y-1年末是闰月且该月接到了y年,则y年年初也是闰月
.否则
    .如果 (等于 (lunM, leapMon (y)))
        .如果 (并且 (等于 (m, 1), 不等于 (leapMon (y), 12)))
            赋值 (lunM, 相加 (lunM, 1)) ' ;  //比如1984年有闰10月，而1984-1-1的lunM=10，但这是从1983年阴历接过来的，所以不是1984年的闰10月
        .否则
            赋值 (lunM, 相乘 (lunM, -1))
        .如果结束
        
        
    .否则
        .如果真 (或者 (小于 (lunM, leapMon (y)), 并且 (小于 (m, lunM), 不等于 (leapMon (y), 0))))
            赋值 (lunM, 相加 (lunM, 1)) ' //如果y年是闰月但当月未过闰月则前面多扣除了本年的闰月，这里应当补偿
            赋值 (lunM, 四舍五入 (相加 (rem (相减 (lunM, 1), 12), 1), ))
        .如果真结束
        
    .如果结束
    
.如果结束

 ' //下面是对现行农历的校正（1901-2050）,由波波网友指出
//1924.3.5-4.3 少一天
.如果真 (并且 (等于 (y, 1924), 并且 (等于 (m, 3), 等于 (d, 5))))
    赋值 (lunM, 相加 (lunM, 1))
.如果真结束
//2018.11.7-12.6 多一天
.如果真 (并且 (等于 (y, 2018), 并且 (等于 (m, 11), 等于 (d, 7))))
    赋值 (lunM, 相减 (lunM, 1))
.如果真结束
//2025.4.27-5.26 少一天
.如果真 (并且 (等于 (y, 2025), 并且 (等于 (m, 4), 等于 (d, 27))))
    赋值 (lunM, 相加 (lunM, 1))
.如果真结束
返回 (lunM)
' 本源码来自易语言资源网(www.wodesoft.com)

.子程序 lunarCal, 空白型, 公开, 
.参数 y, 空白型, , 
.参数 m, 空白型, , 
.参数 d, 空白型, , 
.参数 calType, 空白型, , 

lunDate (y, m, d, calType)
赋值 (month, lunMon (y, m, d, calType))

.子程序 date, 双精度小数型, 公开, 
返回 (date)

.子程序 syzygyType, 文本型, 公开, 
返回 (syzygyType)


.子程序 syzygyTime, 双精度小数型, 公开, 
返回 (syzygyTime)

.子程序 ecliType, 整数型, 公开, 
返回 (ecliType)

.子程序 ecliTime, 双精度小数型, 公开, 
返回 (ecliTime)

.子程序 month, 整数型, 公开, 
返回 (month)

.程序集 干支函数集, , , 

.子程序 gan, 整数型, , 
.参数 x, 空白型, , 

返回 (求余数 (x, 10))

.子程序 zhi, 整数型, , 
.参数 x, 空白型, , 

返回 (求余数 (x, 12))

.子程序 yGz, 双精度小数型, , 
.参数 y, 空白型, , 
.参数 m, 空白型, , 
.参数 d, 空白型, , 
.参数 h, 空白型, , 
.参数 f, 空白型, , 
.参数 calType, 空白型, , 

.如果真 (小于 (相加 (D0 (y, m, d, calType), 相除 (h, 24), 相除 (f, 1440)), S (y, 3, 1, calType))) ' //判断是否过立春
    赋值 (y, 相减 (y, 1))
.如果真结束
返回 (四舍五入 (相加 (rem (相减 (y, 3, 1), 60), 1), ))


.子程序 mGz, 双精度小数型, , 
.参数 y, 空白型, , 
.参数 m, 空白型, , 
.参数 d, 空白型, , 
.参数 h, 空白型, , 
.参数 f, 空白型, , 
.参数 calType, 空白型, , 

.局部变量 sN0, 双精度小数型, , , 
.局部变量 sDt0, 双精度小数型, , , 
.局部变量 sD0, 双精度小数型, , , 
.局部变量 sM0, 双精度小数型, , , 
.局部变量 sDate0, 双精度小数型, , , 
.局部变量 sN1, 双精度小数型, , , 
.局部变量 sDt1, 双精度小数型, , , 
.局部变量 sD1, 双精度小数型, , , 
.局部变量 sM1, 双精度小数型, , , 
.局部变量 sDate1, 双精度小数型, , , 
.局部变量 sN2, 双精度小数型, , , 
.局部变量 sDt2, 双精度小数型, , , 
.局部变量 sD2, 双精度小数型, , , 
.局部变量 sM2, 双精度小数型, , , 
.局部变量 sDate2, 双精度小数型, , , 
.局部变量 sN3, 双精度小数型, , , 
.局部变量 sDt3, 双精度小数型, , , 
.局部变量 sD3, 双精度小数型, , , 
.局部变量 sM3, 双精度小数型, , , 
.局部变量 sDate3, 双精度小数型, , , 
.局部变量 mL, 双精度小数型, , , 
.局部变量 jqDate, 双精度小数型, , , 
.局部变量 gzM, 双精度小数型, , , 
.局部变量 now, 双精度小数型, , , 

赋值 (sN0, 相减 (相乘 (2, m), 2))
赋值 (sDt0, S (y, sN0, 1, calType))
赋值 (sD0, revD0 (y, 取整 (sDt0), calType))
赋值 (sM0, 取整 (相除 (sD0, 100)))
赋值 (sDate0, 相加 (求余数 (sD0, 100), tail (sDt0)))

赋值 (sN1, 相减 (相乘 (2, m), 1))
赋值 (sDt1, S (y, sN1, 1, calType))
赋值 (sD1, revD0 (y, 取整 (sDt1), calType))
赋值 (sM1, 取整 (相除 (sD1, 100)))
赋值 (sDate1, 相加 (求余数 (sD1, 100), tail (sDt1)))
赋值 (sN2, 相乘 (2, m))
赋值 (sDt2, S (y, sN2, 1, calType))
赋值 (sD2, revD0 (y, 取整 (sDt2), calType))
赋值 (sM2, 取整 (相除 (sD2, 100)))
赋值 (sDate2, 相加 (求余数 (sD2, 100), tail (sDt2)))
赋值 (sN3, 相加 (相乘 (2, m), 1))

.如果真 (大于 (sN3, 24))
    赋值 (sN3, 相减 (sN3, 24))
.如果真结束
赋值 (sDt3, S (y, sN3, 1, calType))
赋值 (sD3, revD0 (y, 取整 (sDt3)))
赋值 (sM3, 取整 (相除 (sD3, 100)))
赋值 (sDate3, 相加 (求余数 (sD3, 100), tail (sDt3)))

.如果真 (等于 (sM0, m))
    赋值 (sN2, sN1)
    赋值 (sN1, sN0)
    赋值 (sDt2, sDt1)
    赋值 (sDt1, sDt0)
    赋值 (sDate2, sDate1)
    赋值 (sDate1, sDate0)
.如果真结束
.如果真 (等于 (sM3, m))
    赋值 (sN1, sN2)
    赋值 (sN2, sN3)
    赋值 (sDt1, sDt2)
    赋值 (sDt2, sDt3)
    赋值 (sDate1, sDate2)
    赋值 (sDate2, sDate3)
.如果真结束
赋值 (sN1, 相加 (rem (相减 (sN1, 1), 24), 1))
赋值 (sN2, 相加 (rem (相减 (sN2, 1), 24), 1))
赋值 (mL, 相减 (D0 (y, m, 31, calType), D0 (y, m, 0, calType)))
.如果真 (大于 (sDate2, mL))
    赋值 (sDate2, 相减 (sDate2, mL))
.如果真结束
赋值 (jqDate, 选择 (等于 (求余数 (sN1, 2), 1), sDate1, sDate2)) ' //"节气"(n为奇数)所在的阳历日数
赋值 (now, 相加 (d, 相除 (h, 24), 相除 (f, 1440)))
赋值 (gzM, 选择 (小于 (now, jqDate), 相减 (m, 2), 相减 (m, 1))) ' //干支月
.如果真 (小于或等于 (gzM, 0))
    赋值 (gzM, 相加 (gzM, 12))
.如果真结束
返回 (四舍五入 (相加 (rem (相减 (相加 (相乘 (12, gan (yGz (y, m, d, h, f, calType))), gzM), 10, 1), 60), 1), ))

.子程序 dGz, 整数型, , 
.参数 y, 空白型, , 
.参数 m, 空白型, , 
.参数 d, 空白型, , 
.参数 h, 空白型, , 
.参数 calType, 空白型, , 

.局部变量 gzD, 双精度小数型, , , 

赋值 (gzD, 选择 (小于 (h, 23), ESD (y, m, d, calType), 相加 (ESD (y, m, d, calType), 1)))
返回 (四舍五入 (相加 (rem (相减 (相加 (gzD, 15), 1), 60), 1), ))

.子程序 hGz, 整数型, , 
.参数 y, 空白型, , 
.参数 m, 空白型, , 
.参数 d, 空白型, , 
.参数 h, 空白型, , 
.参数 calType, 空白型, , 

.局部变量 v, 空白型, , , 

赋值 (v, 相减 (相加 (相乘 (12, gan (dGz (y, m, d, h, calType))), 取整 (相除 (相加 (h, 1), 2))), 11))
.如果真 (等于 (h, 23))
    赋值 (v, 相减 (v, 12))
.如果真结束
返回 (四舍五入 (相加 (rem (相减 (v, 1), 60), 1), ))

.子程序 GZNY, 文本型, , 
.参数 gz, 空白型, , 

.局部变量 s, 文本型, , "0", 

赋值 (s, { “海中金”, “炉中火”, “大林木”, “路旁土”, “剑锋金”, “山头火”, “洞下水”, “城墙土”, “白腊金”, “杨柳木”, “泉中水”, “屋上土”, “霹雷火”, “松柏木”, “常流水”, “沙中金”, “山下火”, “平地木”, “壁上土”, “金箔金”, “佛灯火”, “天河水”, “大驿土”, “钗钏金”, “桑松木”, “大溪水”, “沙中土”, “天上火”, “石榴木”, “大海水” })
返回 (s [相加 (取整 (相除 (相减 (gz, 1), 2)), 1)])

.子程序 stars28, 双精度小数型, , 
.参数 y, 空白型, , 
.参数 m, 空白型, , 
.参数 d, 空白型, , 
.参数 calType, 空白型, , 

.局部变量 v, 双精度小数型, , , 

赋值 (v, ESD (y, m, d, calType))
返回 (四舍五入 (相加 (rem (相减 (v, 4, 1), 28), 1), ))

.程序集 到汉字函数集, , , 

.子程序 dToStr, 文本型, , 
.参数 dv, 双精度小数型, , 

.局部变量 h, 空白型, , , 
.局部变量 min, 空白型, , , 
.局部变量 relu, 文本型, , , 

赋值 (h, 取整 (相乘 (dv, 24)))
赋值 (min, 取整 (相乘 (相减 (相乘 (dv, 24), h), 60)))
赋值 (relu, 到文本 (min))
.如果真 (小于 (min, 10))
    赋值 (relu, 相加 (“0”, relu))
.如果真结束
返回 (相加 (到文本 (h), “:”, relu))


.子程序 yearStr, 文本型, , 
.参数 v, 空白型, , 

.如果真 (小于或等于 (v, 0))
    返回 (相加 (“前”, 到文本 (相加 (负 (v), 1))))
.如果真结束
返回 (到文本 (v))

.子程序 dayStr, 文本型, , 
.参数 v, 空白型, , 

返回 (取文本中间 (“日一二三四五六”, 相加 (相乘 (求余数 (v, 7), 2), 1), 2))

.子程序 dayENStr, 文本型, , 
.参数 v, 空白型, , 

.局部变量 s, 文本型, , "0", 

赋值 (s, { “SUNDAY”, “MONDAY”, “TUESDAY”, “WEDNESDAY”, “THURSDAY”, “FRIDAY”, “SATURDAY” })
返回 (s [相加 (求余数 (v, 7), 1)])

.子程序 szodStr, 文本型, , 
.参数 v, 空白型, , 

返回 (相加 (取文本中间 (“摩羯宝瓶双鱼白羊金牛双子巨蟹狮子处女天秤天蝎射手”, 相加 (相乘 (v, 4), 1), 4), “座”))
 ' 本源码来自易语言资源网(www.wodesoft.com)

.子程序 gzStr, 文本型, , 
.参数 v, 空白型, , 

返回 (相加 (取文本中间 (“癸甲乙丙丁戊己庚辛壬”, 相加 (相乘 (求余数 (v, 10), 2), 1), 2), 取文本中间 (“亥子丑寅卯辰巳午未申酉戌”, 相加 (相乘 (求余数 (v, 12), 2), 1), 2)))

.子程序 zodStr, 文本型, , 
.参数 v, 空白型, , 

返回 (取文本中间 (“猪鼠牛虎兔龙蛇马羊猴鸡狗”, 相加 (相乘 (v, 2), 1), 2))

.子程序 lunMStr, 文本型, , 
.参数 v, 空白型, , 

.局部变量 v0, 空白型, , , 
.局部变量 str, 文本型, , , 
.局部变量 vstr, 文本型, , , 

赋值 (v0, 取绝对值 (v))
赋值 (str, “一二三四五六七八九十”)
赋值 (vstr, 取文本中间 (str, 相加 (相乘 (求余数 (相减 (v0, 1), 10), 2), 1), 2))
.如果真 (大于 (v0, 10))
    赋值 (vstr, 相加 (“十”, vstr))
.如果真结束
.如果真 (等于 (v0, 1))
    赋值 (vstr, “正”)
.如果真结束
.如果真 (小于 (v, 0))
    赋值 (vstr, 相加 (“闰”, vstr))
.如果真结束
返回 (vstr)

.子程序 lunDStr, 文本型, , 
.参数 v, 空白型, , 

.局部变量 str, 文本型, , , 
.局部变量 vstr, 文本型, , , 

赋值 (str, “十一二三四五六七八九初十廿三”)
赋值 (vstr, 相加 (取文本中间 (str, 相加 (相乘 (取整 (相除 (v, 10)), 2), 21), 2), 取文本中间 (str, 相加 (相乘 (求余数 (v, 10), 2), 1), 2)))
.如果真 (等于 (v, 10))
    赋值 (vstr, “初十”)
.如果真结束
返回 (vstr)

.子程序 sStr, 文本型, , 
.参数 v, 空白型, , 

返回 (取文本中间 (“小寒大寒立春雨水惊蛰春分清明谷雨立夏小满芒种夏至小暑大暑立秋处暑白露秋分寒露霜降立冬小雪大雪冬至”, 相加 (相乘 (相减 (v, 1), 4), 1), 4))
' 本源码来自易语言资源网(www.wodesoft.com)

.子程序 calTypeStr, 文本型, , 
.参数 v, 空白型, , 

.如果真 (等于 (v, 1))
    返回 (“公历”)
.如果真结束
.如果真 (等于 (v, 2))
    返回 (“格里历”)
.如果真结束
返回 (“儒略历”)

.子程序 ifgStr, 文本型, , 
.参数 v, 空白型, , 

.如果真 (等于 (v, -1))
    返回 (“不存在”)
.如果真结束
返回 (选择 (不等于 (v, 0), “格里历”, “儒略历”))

.子程序 syzygyStr, 文本型, , 
.参数 syzygyType, 文本型, , 

.局部变量 str, 文本型, , , 

.如果真 (等于 (syzygyType, “newMoon”))
    赋值 (str, “朔”)
.如果真结束
.如果真 (等于 (syzygyType, “fullMoon”))
    赋值 (str, “望”)
.如果真结束
返回 (str)

.子程序 ecliStr, 文本型, , 
.参数 v, 空白型, , 

.局部变量 str, 文本型, , , 

.判断开始 (等于 (v, 1))
    赋值 (str, “日食”)
.判断 (等于 (v, 2))
    赋值 (str, “月全食”)
.判断 (等于 (v, 3))
    赋值 (str, “月偏食”)
    
.默认
    
.判断结束
返回 (str)


.子程序 stars28Str, 文本型, , 
.参数 n, 空白型, , 

.局部变量 s, 文本型, , , 

赋值 (s, “角亢氐房心尾箕斗牛女虚危室壁奎娄胃昴毕觜参井鬼柳星张翼轸角”)
返回 (取文本中间 (s, 相加 (相乘 (n, 2), 1), 2))


.子程序 mLStr, 文本型, , 
.参数 mL, 空白型, , 

.局部变量 str, 文本型, , , 

.判断开始 (等于 (mL, 31))
    赋值 (str, “大”)
.判断 (等于 (mL, 30))
    赋值 (str, “小”)
.默认
    赋值 (str, “平”)
.判断结束
返回 (str)

.子程序 timeZoneName, 文本型, , 
.参数 zone, 空白型, , 

.局部变量 address, 文本型, , "0", 

赋值 (address, { “西12区:埃尼威托克岛,夸贾林岛”, “西11区:中途岛,东萨摩亚”, “西10区:夏威夷”, “西9区:阿拉斯加”, “西8区:太平洋时间（美国和加拿大）,蒂华纳”, “西7区:山地时间（美国和加拿大）,亚利桑那”, “西6区:中部时间（美国和加拿大）,墨西哥城,特古西加尔巴,萨斯喀彻温省”, “西5区:东部时间（美国和加拿大）,印第安那州（东部）,波哥大,利马,基多”, “西4区:大西洋时间（加拿大）,加拉加斯,拉巴斯”, “西3区:巴西利亚,布宜诺斯艾利斯,乔治敦”, “西2区:中大西洋”, “西1区:亚速尔群岛,佛得角群岛”, “零时区:伦敦,都柏林,爱丁堡,里斯本,卡萨布兰卡,蒙罗维亚”, “东1区:阿姆斯特丹,柏林,伯尔尼,罗马,斯德哥尔摩,维也纳,贝尔格莱德,布拉迪斯拉发,布达佩斯,卢布尔雅那,布拉格,布鲁赛尔,哥本哈根,马德里,巴黎,萨拉热窝,斯科普里,索非亚,华沙,萨格勒布”, “东2区:布加勒斯特,哈拉雷,比勒陀尼亚,赫尔辛基,里加,塔林,开罗,雅典,伊斯坦布尔,明斯克,以色列”, “东3区:巴格达,科威特,利雅得,莫斯科,圣彼得堡,伏尔加格勒,内罗毕”, “东4区:阿布扎比,马斯喀特,巴库,第比利斯”, “东5区:叶卡特琳堡,伊斯兰堡,卡拉奇,塔什干”, “东6区:阿拉木图,达卡,科伦坡”, “东7区:曼谷,河内,雅加达”, “东8区:北京,重庆,广州,上海,香港,乌鲁木齐,台北,新加坡,佩思”, “东9区:平壤,汉城,东京,大阪,札幌,雅库茨克”, “东10区:布里斯班,关岛,莫尔兹比港,霍巴特,堪培拉,墨尔本,悉尼”, “东11区:马加丹,所罗门群岛,新喀里多尼亚”, “东12区:奥克兰,惠灵顿,斐济,堪察加半岛,马绍尔群岛” })
返回 (address [相加 (zone, 12, 1)])

.类模块 节气子类, , , 

.程序集变量 sTermInMonth, 文本型, , "2", 
.程序集变量 sTermName, 文本型, , , 
.程序集变量 sTermTime, 文本型, , , 
.程序集变量 _交节日, 空白型, , "2", 
.程序集变量 _交节时, 双精度小数型, , "2", 
.程序集变量 _节气序号, 空白型, , "2", 
.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 sTermClass, 空白型, 公开, 
.参数 year, 空白型, , 
.参数 month, 空白型, , 
.参数 date, 空白型, , 
.参数 time, 文本型, , 
.参数 zone, 空白型, , 
.参数 calType, 空白型, , 
.参数 monthLength, 空白型, , 

.局部变量 sN0, 双精度小数型, , , 
.局部变量 sDt0, 双精度小数型, , , 
.局部变量 sD0, 双精度小数型, , , 
.局部变量 sM0, 双精度小数型, , , 
.局部变量 sDate0, 双精度小数型, , , 
.局部变量 sN1, 双精度小数型, , , 
.局部变量 sDt1, 双精度小数型, , , 
.局部变量 sD1, 双精度小数型, , , 
.局部变量 sM1, 双精度小数型, , , 
.局部变量 sDate1, 双精度小数型, , , 
.局部变量 sN2, 双精度小数型, , , 
.局部变量 sDt2, 双精度小数型, , , 
.局部变量 sD2, 双精度小数型, , , 
.局部变量 sM2, 双精度小数型, , , 
.局部变量 sDate2, 双精度小数型, , , 
.局部变量 sN3, 双精度小数型, , , 
.局部变量 sDt3, 双精度小数型, , , 
.局部变量 sD3, 双精度小数型, , , 
.局部变量 sM3, 双精度小数型, , , 
.局部变量 sDate3, 双精度小数型, , , 
.局部变量 sT1, 文本型, , , 
.局部变量 sT2, 文本型, , , 

赋值 (sN0, 相减 (相乘 (2, month), 2))
赋值 (sDt0, S (year, sN0, 1, calType))
赋值 (sD0, revD0 (year, 取整 (sDt0), calType))
赋值 (sM0, 取整 (相除 (sD0, 100)))
赋值 (sDate0, 求余数 (sD0, 100))

赋值 (sN1, 相减 (相乘 (2, month), 1))
赋值 (sDt1, S (year, sN1, 1, calType))
赋值 (sD1, revD0 (year, 取整 (sDt1), calType))
赋值 (sM1, 取整 (相除 (sD1, 100)))
赋值 (sDate1, 求余数 (sD1, 100))

赋值 (sN2, 相乘 (2, month))
赋值 (sDt2, S (year, sN2, 1, calType))
赋值 (sD2, revD0 (year, 取整 (sDt2), calType))
赋值 (sM2, 取整 (相除 (sD2, 100)))
赋值 (sDate2, 求余数 (sD2, 100))

赋值 (sN3, 相加 (相乘 (2, month), 1))
.如果真 (大于 (sN3, 24))
    赋值 (sN3, 相减 (sN3, 24))
.如果真结束
赋值 (sDt3, S (year, sN3, 1, calType))
赋值 (sD3, revD0 (year, 取整 (sDt3), calType))
赋值 (sM3, 取整 (相除 (sD3, 100)))
赋值 (sDate3, 求余数 (sD3, 100))

.如果真 (等于 (sM0, month))
    赋值 (sN2, sN1)
    赋值 (sN1, sN0)
    赋值 (sDt2, sDt1)
    赋值 (sDt1, sDt0)
    赋值 (sDate2, sDate1)
    赋值 (sDate1, sDate0)
.如果真结束
.如果真 (等于 (sM3, month))
    赋值 (sN1, sN2)
    赋值 (sN2, sN3)
    赋值 (sDt1, sDt2)
    赋值 (sDt2, sDt3)
    赋值 (sDate1, sDate2)
    赋值 (sDate2, sDate3)
.如果真结束
赋值 (sN1, 相加 (rem (相减 (sN1, 1), 24), 1))
赋值 (sN2, 相加 (rem (相减 (sN2, 1), 24), 1))
.如果真 (大于 (sDate2, monthLength))
    赋值 (sDate2, 相减 (sDate2, monthLength))
.如果真结束
赋值 (sT1, 相加 (sStr (sN1), “:”, 到文本 (month), “月”, 到文本 (sDate1), “日”, dToStr (tail (sDt1))))
赋值 (sT2, 相加 (sStr (sN2), “:”, 到文本 (month), “月”, 到文本 (sDate2), “日”, dToStr (tail (sDt2))))
赋值 (_节气序号 [1], sN1)
赋值 (_节气序号 [2], sN2)
赋值 (_交节日 [1], sDate1)
赋值 (_交节日 [2], sDate2)
赋值 (_交节时 [1], tail (sDt1))
赋值 (_交节时 [2], tail (sDt2))
赋值 (sTermInMonth [1], sT1)
赋值 (sTermInMonth [2], sT2)
.如果 (等于 (date, sDate1))
    赋值 (sTermName, sStr (sN1))
    赋值 (sTermTime, dToStr (tail (sDt1)))
.否则
    .如果 (等于 (date, sDate2))
        赋值 (sTermName, sStr (sN2))
        赋值 (sTermTime, dToStr (tail (sDt2)))
    .否则
        赋值 (sTermName, “”)
        赋值 (sTermTime, “”)
    .如果结束
    ' 本源码来自易语言资源网(www.wodesoft.com)
.如果结束


.子程序 节气日期, 空白型, 公开, 
.参数 节气序号, 空白型, 参考 数组, 
.参数 交节日, 空白型, 参考 数组, 
.参数 交节时, 双精度小数型, 参考 数组, 

赋值 (_节气序号 [1], 相减 (_节气序号 [1], 2))
.如果真 (小于 (_节气序号 [1], 1))
    赋值 (_节气序号 [1], 相加 (24, _节气序号 [1]))
.如果真结束
赋值 (_节气序号 [2], 相减 (_节气序号 [2], 2))
.如果真 (小于 (_节气序号 [2], 1))
    赋值 (_节气序号 [2], 相加 (24, _节气序号 [2]))
.如果真结束
赋值 (节气序号, _节气序号)
赋值 (交节日, _交节日)
赋值 (交节时, _交节时)

.子程序 取节气名, 文本型, 公开, 
返回 (sTermName)

.子程序 交节时刻, 文本型, 公开, 
返回 (sTermTime)

.类模块 农历子类, , , 

.程序集变量 lunarDate, 空白型, , , 
.程序集变量 lunarDate_Str, 文本型, , , 
.程序集变量 lunarMonth, 空白型, , , 
.程序集变量 lunarMonth_Str, 文本型, , , 
.程序集变量 syzygyType, 文本型, , , 
.程序集变量 syzygyTime, 双精度小数型, , , 
.程序集变量 syzygyTime_Str, 文本型, , , 
.程序集变量 syzygyName, 文本型, , , 
.程序集变量 ecliType, 空白型, , , 
.程序集变量 ecliType_Str, 文本型, , , 
.程序集变量 ecliTime, 双精度小数型, , , 
.程序集变量 ecliTime_Str, 文本型, , , 
.程序集变量 lunFtvl, 文本型, , , 
.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 lunarClass, 空白型, 公开, 
.参数 year, 空白型, , 
.参数 month, 空白型, , 
.参数 date, 空白型, , 
.参数 calType, 空白型, , 

.局部变量 lunarInfo, 农历函数类, , , 

lunarInfo.lunarCal (year, month, date, calType)
赋值 (lunarDate, lunarInfo.date ())
赋值 (lunarDate_Str, lunDStr (lunarDate))
赋值 (lunarMonth, lunarInfo.month ())
赋值 (lunarMonth_Str, lunMStr (lunarMonth))
赋值 (syzygyType, lunarInfo.syzygyType ())
赋值 (syzygyTime, lunarInfo.syzygyTime ())
赋值 (syzygyTime_Str, 选择 (等于 (syzygyTime, -1), “”, dToStr (syzygyTime)))
赋值 (syzygyName, syzygyStr (syzygyType))
赋值 (ecliType, lunarInfo.ecliType ())
赋值 (ecliType_Str, ecliStr (lunarInfo.ecliType ()))
赋值 (ecliTime, lunarInfo.ecliTime ())
赋值 (ecliTime_Str, 选择 (等于 (ecliTime, -1), “”, dToStr (ecliTime)))

.子程序 取农历日, 整数型, 公开, 
返回 (lunarDate)

.子程序 取农历日汉字, 文本型, 公开, 
返回 (lunarDate_Str)

.子程序 取农历月, 整数型, 公开, 
返回 (lunarMonth)

.子程序 取农历月汉字, 文本型, 公开, 
返回 (lunarMonth_Str)

.子程序 取朔望英文, 文本型, 公开, 
返回 (syzygyType)

.子程序 取朔望时间, 双精度小数型, 公开, 
返回 (syzygyTime)

.子程序 取朔望时间汉字, 文本型, 公开, 
返回 (syzygyTime_Str)

.子程序 取朔望汉字, 文本型, 公开, 
返回 (syzygyName)

.子程序 取日月食类型, 整数型, 公开, 
返回 (ecliType)

.子程序 取日月食名称, 文本型, 公开, 
返回 (ecliType_Str)

.子程序 取日月食时间, 双精度小数型, 公开, 
返回 (ecliTime)

.子程序 取日月食时间汉字, 文本型, 公开, 
返回 (ecliTime_Str)

.类模块 中国日历类, , , 

.程序集变量 year, 空白型, , , 
.程序集变量 month, 空白型, , , 
.程序集变量 date, 空白型, , , 
.程序集变量 time, 文本型, , , 
.程序集变量 zone, 空白型, , , 
.程序集变量 calType, 空白型, , , 
.程序集变量 timeArray, 文本型, , "3", 
.子程序 _初始化, 空白型, , 当基于本类的对象被创建后，此方法会被自动调用


.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用


.子程序 CCC, 空白型, 公开, 
.参数 年, 空白型, , 
.参数 月, 空白型, , 
.参数 日, 空白型, , 
.参数 时间, 文本型, 可空, 
.参数 时区, 整数型, 可空, 
.参数 日历类型, 空白型, 可空, 

 ' ////////////////////////////函数参数兼容处理////////////////////////////
  //三参数: CCC(year,month,date)
.如果真 (是否为空 (时区))
    赋值 (时区, 8) ' ;  //默认为北京时间
.如果真结束
.如果真 (是否为空 (日历类型))
    赋值 (日历类型, 1) ' ;  //默认为Gregorian
.如果真结束
.如果真 (是否为空 (时间))
    赋值 (时间, “0:0:0:0”) ' ;  //默认为零时
.如果真结束
赋值 (year, 年) ' 本源码来自易语言资源网(www.wodesoft.com)
赋值 (month, 月)
赋值 (date, 日)
赋值 (time, 时间)
赋值 (zone, 时区)
赋值 (calType, 日历类型)
赋值 (timeArray, 分割文本 (时间, “:”, 3))

.子程序 取日历名, 文本型, 公开, 
返回 (calTypeStr (calType))


.子程序 取时, 整数型, 公开, 
返回 (到数值 (timeArray [1]))

.子程序 取分, 整数型, 公开, 
返回 (到数值 (timeArray [2]))

.子程序 取秒, 整数型, 公开, 
返回 (到数值 (timeArray [3]))

.子程序 取儒略日, 双精度小数型, 公开, 
返回 (JD (year, month, date, 取时 (), 取分 (), 取秒 (), zone, calType))
 ' 本源码来自易语言资源网(www.wodesoft.com)

.子程序 取星期数, 整数型, 公开, 
返回 (Day (year, month, date, calType))

.子程序 取星期名, 文本型, 公开, 
返回 (dayStr (取星期数 ()))

.子程序 取星期英文名, 文本型, 公开, 
返回 (dayENStr (取星期数 ()))

.子程序 取年干支, 整数型, 公开, 
返回 (yGz (year, month, date, 取时 (), 取分 (), calType))

.子程序 取年干支名, 文本型, 公开, 
返回 (gzStr (取年干支 ()))

.子程序 取月干支, 整数型, 公开, 
返回 (mGz (year, month, date, 取时 (), 取分 (), calType))

.子程序 取月干支名, 文本型, 公开, 
返回 (gzStr (取月干支 ()))

.子程序 取日干支, 整数型, 公开, 
返回 (dGz (year, month, date, 取时 (), calType))

.子程序 取日干支名, 文本型, 公开, 
返回 (gzStr (取日干支 ()))

.子程序 取时干支, 整数型, 公开, 
返回 (hGz (year, month, date, 取时 (), calType))

.子程序 取时干支名, 文本型, 公开, 
返回 (gzStr (取时干支 ()))

.子程序 取28星宿, 整数型, 公开, 
返回 (stars28 (year, month, date, calType))

.子程序 取28星宿名, 文本型, 公开, 
返回 (stars28Str (取28星宿 ()))

.子程序 取月长, 整数型, 公开, 
返回 (相减 (D0 (year, 相加 (month, 1), 1, calType), D0 (year, month, 1, calType)))

.子程序 取大小月名, 文本型, , 
返回 (mLStr (取月长 ()))

.子程序 取生肖, 文本型, 公开, 
返回 (zodStr (zhi (取年干支 ())))

.子程序 取节气类, 节气子类, 公开, 
.局部变量 solarTerm, 节气子类, , , 

solarTerm.sTermClass (year, month, date, time, zone, calType, 取月长 ())
返回 (solarTerm)

.子程序 取农历类, 农历子类, 公开, 
.局部变量 lunar, 农历子类, , , 

lunar.lunarClass (year, month, date, calType)
返回 (lunar)


 ' 不属于任何一个程序集、类模块的函数：
