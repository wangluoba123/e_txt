 ' 文件类型：Windows窗口程序

 ' 程序名称：六子棋 1.0
 ' 程序描述：2001.06.26完成.
期望功能:

    撤    消

    网络对战

    人工智能(AI)
 ' 程序作者：ZL
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
    这个行棋游戏是我小时候常玩的一种棋类游戏,玩的时候只要找棋友,然后在地上画出棋盘,找几个小石子,就可以开始了.
    虽然规则很简单,但玩起来倒也得费点脑筋,玩的好的话可以自己一个棋子不丢,却把对手的棋子全部吃光或围起来让对手动弹不得而不得不认输.
    你也来试试!

    ZZZZZZZz   Ll
         Zz    Ll
       ZZ      Ll
     zZ        Ll
    zZZZZZZZ   LLLLLL

 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 388
    高度 = 397
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = 16744576 '  0xFF8080
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    背景音乐 =  ' 空
    标题 = “六子棋 1.0”
    帮助文件名 = “”

窗口 关于窗口
    左边 = 50
    顶边 = 50
    宽度 = 438
    高度 = 383
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = 12632256 '  0xC0C0C0
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    背景音乐 =  ' 空
    标题 = “关于 六子棋1.0”
    帮助文件名 = “”



.常量 空白, "0", , 
.常量 红方, "1", , 
.常量 绿方, "2", , 
.常量 不可能, "“两方的棋子数都为'1'?这不可能!你有没有作弊?玩不下去了.按'确定'重新开始吧.”", , 
.常量 搞错了吧, "“有没有搞错!这么多棋子!这是六子棋耶!快把源程序改过!”", , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 3 7 系统核心支持库




数据类型 棋子位置, , 
    .成员 左边, 整数型, , , 
    .成员 顶边, 整数型, , , 
    .成员 宽度, 整数型, , , 
    .成员 高度, 整数型, , , 

数据类型 位置, , 
    .成员 X, 整数型, , , 
    .成员 Y, 整数型, , , 


.窗口程序集 窗口程序集1, , , 

.程序集变量 棋盘左边, 整数型, , , 
.程序集变量 棋盘顶边, 整数型, , , 
.程序集变量 棋盘宽度, 整数型, , , 
.程序集变量 棋盘高度, 整数型, , , 
.程序集变量 棋盘, 整数型, , "5,4", 
.程序集变量 棋子位置, 棋子位置, , "5,4", 
.程序集变量 当前玩家, 整数型, , , 
.程序集变量 红方棋子数, 整数型, , , 
.程序集变量 绿方棋子数, 整数型, , , 
.程序集变量 选棋子, 逻辑型, , , 
.程序集变量 落棋子, 逻辑型, , , 
.程序集变量 选子, 位置, , , 
.程序集变量 落子, 位置, , , 
.程序集变量 逃跑次数, 整数型, , , 
.子程序 __启动窗口_创建完毕, 空白型, , 
赋值 (棋盘左边, 30)
赋值 (棋盘顶边, 30)
赋值 (棋盘宽度, 250)
赋值 (棋盘高度, 322)
初始化 ()
画棋盘 ()

.子程序 初始化, 空白型, , 初始化棋盘,确定棋子的布局
.局部变量 rq, 整数型, , , 
.局部变量 rq1, 整数型, , , 

.如果 (等于 (., 真))
    赋值 (当前玩家, #红方)
    #顶层.调整层次 ()
.否则
    赋值 (当前玩家, #绿方)
    #顶层.调整层次 ()
.如果结束
赋值 (选子.X, 0)
赋值 (选子.Y, 0)
赋值 (落子.X, 0)
赋值 (落子.Y, 0)
赋值 (选棋子, 真)
赋值 (落棋子, 取反 (选棋子))
赋值 (逃跑次数, 0)
 ' 这里用来确定棋子的位置
.计次循环首 (5, rq1)
    .计次循环首 (4, rq)
        赋值 (棋盘 [rq1] [rq], #空白)
        赋值 (棋子位置 [rq1] [rq], 左边, 相加 (相乘 (相减 (rq, 1), 72), 6))
        赋值 (棋子位置 [rq1] [rq], 顶边, 相加 (相乘 (相减 (rq1, 1), 72), 6))
        赋值 (棋子位置 [rq1] [rq], 宽度, 相加 (相乘 (相减 (rq, 1), 72), 54))
        赋值 (棋子位置 [rq1] [rq], 高度, 相加 (相乘 (相减 (rq1, 1), 72), 54))
    .计次循环尾 ()
.计次循环尾 ()
 ' 在这里确定棋子的布局
棋盘 [2] [1] ＝ #红方
棋盘 [1] [2] ＝ #红方
棋盘 [3] [1] ＝ #绿方
棋盘 [5] [1] ＝ #绿方

赋值 (棋盘 [1] [1], #红方)
赋值 (棋盘 [1] [2], #红方)
赋值 (棋盘 [1] [3], #红方)
赋值 (棋盘 [1] [4], #红方)
赋值 (棋盘 [2] [1], #红方)
赋值 (棋盘 [2] [4], #红方)
赋值 (棋盘 [4] [1], #绿方)
赋值 (棋盘 [4] [4], #绿方)
赋值 (棋盘 [5] [1], #绿方)
赋值 (棋盘 [5] [2], #绿方)
赋值 (棋盘 [5] [3], #绿方)
赋值 (棋盘 [5] [4], #绿方)

.子程序 画棋盘, 空白型, , 画出棋盘
.局部变量 容器, 整数型, , , 

处理事件 ()
.清除 ()
赋值 (., #灰色)
赋值 (., 2)
.变量循环首 (0, 4, 1, 容器)
    棋盘左边.画直线 (相加 (相乘 (容器, 72), 棋盘顶边), 相减 (棋盘宽度, 4), 相加 (相乘 (容器, 72), 棋盘顶边))
.变量循环尾 ()
.变量循环首 (0, 3, 1, 容器)
    相加 (相乘 (容器, 72), 棋盘左边).画直线 (棋盘顶边, 相加 (相乘 (容器, 72), 棋盘左边), 相减 (棋盘高度, 4))
.变量循环尾 ()
画棋子 ()
.复制 ()

.子程序 画棋子, 空白型, , 按数组的值画出棋子
.局部变量 ys, 整数型, , , 
.局部变量 rq, 整数型, , , 
.局部变量 rq1, 整数型, , , 

赋值 (红方棋子数, 0)
赋值 (绿方棋子数, 0)
.计次循环首 (5, rq1)
    .计次循环首 (4, rq)
        赋值 (., #灰色)
        .如果真 (并且 (等于 (选棋子, 假), 等于 (选子.X, rq), 等于 (选子.Y, rq1)))
            赋值 (., #白色)
        .如果真结束
        赋值 (ys, 棋盘 [rq1] [rq])
        .判断开始 (等于 (ys, #红方))
            赋值 (ys, #红色)
            赋值 (红方棋子数, 相加 (红方棋子数, 1))
        .判断 (等于 (ys, #绿方))
            赋值 (ys, #墨绿)
            赋值 (绿方棋子数, 相加 (绿方棋子数, 1))
        .默认
            到循环尾 ()
        .判断结束
        赋值 (., ys)
        棋子位置.画椭圆 ( [rq1] [rq], 左边, 棋子位置 [rq1] [rq], 顶边, 棋子位置 [rq1] [rq], 宽度, 棋子位置 [rq1] [rq], 高度)
    .计次循环尾 ()
.计次循环尾 ()
.如果真 (或者 (大于 (红方棋子数, 6), 大于 (绿方棋子数, 6)))
    信息框 (#搞错了吧, 0, “嘻.搞错了吧!”)
    结束 ()
.如果真结束


.子程序 _画板1_鼠标左键被按下, 逻辑型, , 确定点击位置,移动棋子
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 rq, 整数型, , , 
.局部变量 rq1, 整数型, , , 

.计次循环首 (5, rq1)
    .计次循环首 (4, rq)
        .如果真 (并且 (小于 (棋子位置 [rq1] [rq], 左边, 横向位置), 小于 (横向位置, 棋子位置 [rq1] [rq], 宽度)))
            .如果真 (并且 (小于 (棋子位置 [rq1] [rq], 顶边, 纵向位置), 小于 (纵向位置, 棋子位置 [rq1] [rq], 高度)))
                .如果真 (等于 (棋盘 [rq1] [rq], 当前玩家))
                    赋值 (选子.X, rq)
                    赋值 (选子.Y, rq1)
                    赋值 (选棋子, 假)
                    赋值 (落棋子, 取反 (选棋子))
                .如果真结束
                .如果真 (并且 (等于 (棋盘 [rq1] [rq], #空白), 等于 (落棋子, 真)))
                    赋值 (落子.X, rq)
                    赋值 (落子.Y, rq1)
                    .如果真 (或者 (等于 (取绝对值 (相减 (选子.X, 落子.X)), 1), 等于 (取绝对值 (相减 (选子.Y, 落子.Y)), 1)))
                        .如果真 (等于 (位异或 (取绝对值 (相减 (选子.X, 落子.X)), 取绝对值 (相减 (选子.Y, 落子.Y))), 1)) ' 使用位异或可以把棋子的移动范围限制在横.纵两个方向,避免斜向移动.
                            赋值 (棋盘 [选子].Y [选子].X, #空白)
                            赋值 (棋盘 [落子].Y [落子].X, 当前玩家)
                            处理事件 ()
                            判断胜负 ()
                            赋值 (选棋子, 真)
                            赋值 (落棋子, 取反 (选棋子))
                        .如果真结束
                        
                    .如果真结束
                    
                .如果真结束
                
            .如果真结束
            
        .如果真结束
        
    .计次循环尾 ()
.计次循环尾 ()
画棋盘 ()
.如果真 (等于 (红方棋子数, 0))
    信息框 (“绿方胜!”, 0, )
    初始化 ()
    画棋盘 ()
.如果真结束
.如果真 (等于 (绿方棋子数, 0))
    信息框 (“红方胜!”, 0, )
    初始化 ()
    画棋盘 ()
.如果真结束


.子程序 判断胜负, 空白型, , 是你赢?还是我赢?
.局部变量 rq, 整数型, , , 
.局部变量 txt, 文本型, , , 
.局部变量 num, 整数型, , , 
.局部变量 对家, 整数型, , , 

.如果 (等于 (当前玩家, #红方))
    赋值 (对家, #绿方)
    #顶层.调整层次 ()
.否则
    赋值 (对家, #红方)
    #顶层.调整层次 ()
.如果结束
赋值 (txt, “”)
.计次循环首 (4, rq)
    .判断开始 (等于 (棋盘 [落子].Y [rq], 当前玩家))
        赋值 (txt, 相加 (txt, “1”))
    .判断 (等于 (棋盘 [落子].Y [rq], 对家))
        赋值 (txt, 相加 (txt, “2”))
    .判断 (等于 (棋盘 [落子].Y [rq], #空白))
        赋值 (txt, 相加 (txt, “0”))
    .默认
        
    .判断结束
    
.计次循环尾 ()
赋值 (num, 到数值 (txt))
输出调试文本 (相加 (“X= ”, txt))
.如果真 (或者 (等于 (num, 112), 等于 (num, 211), 等于 (num, 1120), 等于 (num, 2110)))
    .计次循环首 (4, rq)
        .如果真 (等于 (棋盘 [落子].Y [rq], 对家))
            赋值 (棋盘 [落子].Y [rq], #空白)
            .如果 (等于 (对家, #红方))
                赋值 (红方棋子数, 相减 (红方棋子数, 1))
            .否则
                赋值 (绿方棋子数, 相减 (绿方棋子数, 1))
            .如果结束
            
        .如果真结束
        
    .计次循环尾 ()
.如果真结束
赋值 (txt, “”)
.计次循环首 (5, rq)
    .判断开始 (等于 (棋盘 [rq] [落子].X, 当前玩家))
        赋值 (txt, 相加 (txt, “1”))
    .判断 (等于 (棋盘 [rq] [落子].X, 对家))
        赋值 (txt, 相加 (txt, “2”))
    .判断 (等于 (棋盘 [rq] [落子].X, #空白))
        赋值 (txt, 相加 (txt, “0”))
    .默认
        
    .判断结束
    
.计次循环尾 ()
赋值 (num, 到数值 (txt))
输出调试文本 (相加 (“Y= ”, txt))
.如果真 (或者 (等于 (num, 112), 等于 (num, 1120), 等于 (num, 11200), 等于 (num, 211), 等于 (num, 2110), 等于 (num, 21100)))
    .计次循环首 (5, rq)
        .如果真 (等于 (棋盘 [rq] [落子].X, 对家))
            赋值 (棋盘 [rq] [落子].X, #空白)
            .如果 (等于 (对家, #红方))
                赋值 (红方棋子数, 相减 (红方棋子数, 1))
            .否则
                赋值 (绿方棋子数, 相减 (绿方棋子数, 1))
            .如果结束
            
        .如果真结束
        
    .计次循环尾 ()
.如果真结束
.如果真 (或者 (等于 (红方棋子数, 1), 等于 (绿方棋子数, 1)))
    .如果真 (并且 (等于 (红方棋子数, 1), 等于 (绿方棋子数, 1)))
        信息框 (#不可能, 0, “不可能!”)
        _重新开始_被选择 ()
        返回 ()
    .如果真结束
    .如果真 (并且 (等于 (红方棋子数, 1), 等于 (当前玩家, #红方)))
        赋值 (逃跑次数, 相加 (逃跑次数, 1))
    .如果真结束
    .如果真 (并且 (等于 (绿方棋子数, 1), 等于 (当前玩家, #绿方)))
        赋值 (逃跑次数, 相加 (逃跑次数, 1))
    .如果真结束
    赋值 (., 相加 (“逃跑次数”, 到文本 (逃跑次数)))
    .如果真 (等于 (逃跑次数, 10))
        奖励棋子 ()
        赋值 (逃跑次数, 0)
        赋值 (., “”)
    .如果真结束
    
.如果真结束
赋值 (当前玩家, 对家)

.子程序 奖励棋子, 空白型, , 给逃跑功夫一流的你一个机会
.局部变量 wb, 文本型, , , 
.局部变量 m, 整数型, , , 
.局部变量 n, 整数型, , , 

画棋盘 ()
.如果 (等于 (当前玩家, #红方))
    赋值 (wb, “红方”)
.否则
    赋值 (wb, “绿方”)
.如果结束
信息框 (相加 (“因 ”, wb, “与对手不断周旋,争取到足够的时间,援军赶来了!”), 0, )
置随机数种子 ()
赋值 (m, 取随机数 (1, 4))
赋值 (n, 取随机数 (1, 5))
.判断循环首 (不等于 (棋盘 [n] [m], #空白))
    赋值 (m, 取随机数 (1, 4))
    赋值 (n, 取随机数 (1, 5))
.判断循环尾 ()
赋值 (棋盘 [n] [m], 当前玩家)

.子程序 _重新开始_被选择, 空白型, , 
初始化 ()
画棋盘 ()

.子程序 _撤消一步_被选择, 空白型, , 
返回 ()

.子程序 _退出_被选择, 空白型, , 
结束 ()

.子程序 _红方先行_被选择, 空白型, , 
赋值 (., 真)
赋值 (., 假)

.子程序 _绿方先行_被选择, 空白型, , 
赋值 (., 假)
赋值 (., 真)

.子程序 _关于_被选择, 空白型, , 
载入 (关于窗口, , 真)

.子程序 _按钮1_被单击, 空白型, , 
获取焦点 ()
_重新开始_被选择 ()

.子程序 _按钮2_被单击, 空白型, , 
获取焦点 ()
_退出_被选择 ()

.子程序 _按钮3_被单击, 空白型, , 
获取焦点 ()
_关于_被选择 ()


 ' 不属于任何一个程序集、类模块的函数：
