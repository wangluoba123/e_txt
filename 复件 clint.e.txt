 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 800
    高度 = 536
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 0
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 已保存到：D:\易语言学习\Data\复件 clint.e\_启动窗口_底图
    图标 =  ' 已保存到：D:\易语言学习\Data\复件 clint.e\_启动窗口_图标.ico
    背景音乐 =  ' 空
    标题 = “斗地主”
    帮助文件名 = “”

窗口 调试窗口
    左边 = 50
    顶边 = 50
    宽度 = 497
    高度 = 300
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “”
    帮助文件名 = “”

窗口 得分消息窗口
    左边 = 50
    顶边 = 50
    宽度 = 182
    高度 = 156
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 假
    随意移动 = 真
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “消息”
    帮助文件名 = “”

窗口 设置窗口1
    左边 = 50
    顶边 = 50
    宽度 = 380
    高度 = 263
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “设置”
    帮助文件名 = “”



.图片 准备, " ' 已保存到：D:\易语言学习\Data\复件 clint.e\准备", , 
.图片 一分, " ' 已保存到：D:\易语言学习\Data\复件 clint.e\一分", , 
.图片 二分, " ' 已保存到：D:\易语言学习\Data\复件 clint.e\二分", , 
.图片 三分, " ' 已保存到：D:\易语言学习\Data\复件 clint.e\三分", , 
.图片 不叫, " ' 已保存到：D:\易语言学习\Data\复件 clint.e\不叫", , 
.图片 不出, " ' 已保存到：D:\易语言学习\Data\复件 clint.e\不出", , 
.图片 钟1, " ' 已保存到：D:\易语言学习\Data\复件 clint.e\钟1", , 
.图片 钟2, " ' 已保存到：D:\易语言学习\Data\复件 clint.e\钟2", , 
.图片 钟3, " ' 已保存到：D:\易语言学习\Data\复件 clint.e\钟3", , 
.图片 钟4, " ' 已保存到：D:\易语言学习\Data\复件 clint.e\钟4", , 
.图片 钟5, " ' 已保存到：D:\易语言学习\Data\复件 clint.e\钟5", , 
.图片 钟6, " ' 已保存到：D:\易语言学习\Data\复件 clint.e\钟6", , 
.图片 农民, " ' 已保存到：D:\易语言学习\Data\复件 clint.e\农民", , 
.图片 地主, " ' 已保存到：D:\易语言学习\Data\复件 clint.e\地主", , 
.图片 聊天室进1, " ' 已保存到：D:\易语言学习\Data\复件 clint.e\聊天室进1", , 
.图片 聊天室进2, " ' 已保存到：D:\易语言学习\Data\复件 clint.e\聊天室进2", , 
.图片 聊天室出1, " ' 已保存到：D:\易语言学习\Data\复件 clint.e\聊天室出1", , 
.图片 聊天室出2, " ' 已保存到：D:\易语言学习\Data\复件 clint.e\聊天室出2", , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 4 系统核心支持库
 ' iext 27bb20fdd3e145e4bee3db39ddd6e64c 1 2 扩展界面支持库一
 ' iext2 AF6AD80AA4244A59AFB3D83ECF5173CC 1 1 扩展界面支持库二
 ' iext5 {E5000198-4471-40e2-92BC-D0BA075BDBB2} 1 5 扩展界面支持库五




数据类型 服务器数据1, , 
    .成员 类型, 文本型, , , &NO= 0玩家昵称  1,发牌.2,地主信息,3发底牌,4不出,5出牌,6出牌错(只向单个玩家发送)，7发言,8玩家得分，9备用
    .成员 玩家数, 文本型, , , &NU=
    .成员 玩家昵称, 文本型, , , &NA=
    .成员 举手, 文本型, , , &HA= 2,2,2      0没有举手，1已举手，2游戏中==== 借用于发送上次出牌的玩家
    .成员 地主, 文本型, , , &DI=1,2,3
    .成员 地主分数, 文本型, , , &BI=0不叫，1，2，3分 也就是底分
    .成员 底牌, 文本型, , , &DP= 102,209,313, 三张底牌子  ===上次玩家出的牌
    .成员 玩家牌的张数, 文本型, , , &CO=
    .成员 玩家的牌, 文本型, , , &AM=211,113,...315 
    .成员 动作, 文本型, , , &DO=  1,玩家1。2，玩家2。3，玩家3
    .成员 玩家得分, 文本型, , , &DF=0,0,0,0,0,0  前三位是本局得分，后三位是总成绩
    .成员 倍数, 文本型, , , &BT=
    .成员 发言, 文本型, , , &MS=

数据类型 客户数据1, , 
    .成员 类型, 文本型, , , &NO=0连接准备 ,1举手，2抢地主,3出牌。4,不出，5发言
    .成员 玩家昵称, 文本型, , , &NA=
    .成员 举手, 文本型, , , &HA=1
    .成员 地主, 文本型, , , &DI=  1抢 0不抢
    .成员 地主分数, 文本型, , , &NU= 1，2，3分
    .成员 出的牌, 文本型, , , &PA=103,203,303,205
    .成员 发言, 文本型, , , &MS=*


.窗口程序集 窗口程序集1, , , 

.程序集变量 动态时钟变量, 整数型, , , 
.程序集变量 我的呢称, 文本型, , , 
.程序集变量 服务器地址, 文本型, , , 
.程序集变量 服务器端口, 文本型, , , 
.程序集变量 程序目录, 文本型, , , 
.程序集变量 牌图片框1, 图片框, , "20", 
.程序集变量 牌图片框2, 图片框, , "20", 
.程序集变量 牌图片框3, 图片框, , "20", 
.程序集变量 牌图片框4, 图片框, , "3", 
.程序集变量 牌代码, 整数型, , "0", 
.程序集变量 上次地主叫分, 整数型, , , 
.程序集变量 底分, 整数型, , , 
.程序集变量 倍数, 整数型, , , 
.程序集变量 玩家序号, 整数型, , , 在服务器上我是玩家1，玩家2，还是玩家3
.程序集变量 地主, 整数型, , , 
.程序集变量 时间, 整数型, , , 
.程序集变量 不出次数, 整数型, , , 如果是2，如果我出了牌之后，别外两家都不出，哪我必须出
.程序集变量 聊天室状态, 逻辑型, , , 真，显示，假表示隐藏
.子程序 __启动窗口_创建完毕, 空白型, , 
.局部变量 i, 整数型, , , 

 ' 画板2的位置（146，104，368，216）
 ' 牌图片框1＝ 232,367;图片框2=528,104;图片框3=76,104
载入 (调试窗口, , 假)
分数框初始化 ()
赋值 (调试窗口., 假)
赋值 (程序目录, 相加 (取运行目录 (), “”))
.计次循环首 (20, i)
    复制窗口组件 (牌图片框1 [i])
    赋值 (牌图片框1 [i], 标记, 到文本 (i))
    复制窗口组件 (牌图片框2 [i])
    复制窗口组件 (牌图片框3 [i])
.计次循环尾 ()
.计次循环首 (3, i)
    复制窗口组件 (牌图片框4 [i])
.计次循环尾 ()
初始化 ()
读出配置 ()
读自定义发言 ()
赋值 (.顶边, -80)
赋值 (.正常图片, #聊天室进1)
赋值 (.点燃图片, #聊天室进2)
赋值 (聊天室状态, 真)


.子程序 分数框初始化, 空白型, , 
.局部变量 i, 整数型, , , 
.局部变量 j, 整数型, , , 

.清除 ()
赋值 (.画笔颜色, #绿色)
赋值 (.文本颜色, #白色)
0.画矩形 (0, 170, 80)
0.画直线 (20, 170, 20)
0.画直线 (40, 170, 40)
0.画直线 (60, 170, 60)
56.画直线 (0, 56, 80)
112.画直线 (0, 112, 80)
0.置写出位置 (5)
“  昵 称”.写出 ()
56.置写出位置 (5)
“  上一局”.写出 ()
120.置写出位置 (5)
“ 总成绩”.写出 ()
赋值 (.正常图片, .取图片 ())



.子程序 读出配置, 空白型, , 
赋值 (服务器地址, 读配置项 (相加 (程序目录, “\config.ini”), “setup”, “ServerIP”, ))
赋值 (服务器端口, 读配置项 (相加 (程序目录, “\config.ini”), “setup”, “Port”, ))
赋值 (我的呢称, 读配置项 (相加 (程序目录, “\config.ini”), “setup”, “Name”, ))
.如果真 (等于 (我的呢称, “”))
    赋值 (我的呢称, 取主机名 ())
.如果真结束


.子程序 读自定义发言, 空白型, , 
.局部变量 变量, 文本型, , "0", 
.局部变量 i, 整数型, , , 

赋值 (变量, 分割文本 (到文本 (读入文件 (相加 (程序目录, “\setup.ini”))), #换行符, ))
.计次循环首 (取数组成员数 (变量), i)
    变量.加入项目 ( [i], )
.计次循环尾 ()

.子程序 _时钟1_周期事件, 空白型, , 
.如果 (等于 (动态时钟变量, 0))
    赋值 (.正常图片, #钟1)
    赋值 (动态时钟变量, 相加 (动态时钟变量, 1))
.否则
    .如果 (等于 (动态时钟变量, 1))
        赋值 (.正常图片, #钟2)
        赋值 (动态时钟变量, 相加 (动态时钟变量, 1))
    .否则
        .如果 (等于 (动态时钟变量, 2))
            赋值 (.正常图片, #钟3)
            赋值 (动态时钟变量, 相加 (动态时钟变量, 1))
        .否则
            .如果 (等于 (动态时钟变量, 3))
                赋值 (.正常图片, #钟4)
                赋值 (动态时钟变量, 相加 (动态时钟变量, 1))
            .否则
                .如果 (等于 (动态时钟变量, 4))
                    赋值 (.正常图片, #钟5)
                    赋值 (动态时钟变量, 相加 (动态时钟变量, 1))
                .否则
                    .如果 (等于 (动态时钟变量, 5))
                        赋值 (.正常图片, #钟6)
                        赋值 (动态时钟变量, 0)
                    .否则
                        
                    .如果结束
                    
                .如果结束
                
            .如果结束
            
        .如果结束
        
    .如果结束
    
.如果结束


.子程序 _连接图形按钮_被单击, 空白型, , 
弹出菜单 ()

.子程序 _连接_被选择, 空白型, , 
.局部变量 客户数据, 客户数据1, , , 

.如果 (等于 (服务器地址.连接 (到数值 (服务器端口)), 真))
    0.置文本 (“服务器连接成功！”) ' 向服务器发送昵称
    初始化客户数据 (客户数据)
    赋值 (客户数据.类型, “&NO=0”)
    赋值 (客户数据.玩家昵称, 相加 (“&NA=”, 我的呢称))
    连续赋值 (真, .可视, .可视, .可视, .可视)
    转换成要发送的数据 (客户数据).发送数据 ()
    赋值 (.内容, 我的呢称)
    赋值 (.禁止, 真)
.否则
    0.置文本 (“服务器连接失败！”)
.如果结束


.子程序 转换成要发送的数据, 文本型, , 
.参数 数据, 客户数据1, , 

.局部变量 变量, 文本型, , , 

赋值 (变量, 相加 (数据.类型, 数据.玩家昵称, 数据.举手, 数据.地主, 数据.地主分数, 数据.出的牌, 数据.发言))
调试窗口.加入文本 (., 相加 (“发送：”, 变量, #换行符))
返回 (变量)

.子程序 初始化客户数据, 空白型, , 
.参数 数据, 客户数据1, , 

赋值 (数据.类型, “&NO=0”)
赋值 (数据.玩家昵称, 相加 (“&NA=”, 我的呢称))
赋值 (数据.举手, “&HA=0”)
赋值 (数据.地主, “&DI=0”)
赋值 (数据.地主分数, “&NU=0”)
赋值 (数据.出的牌, “&PA=0”)
赋值 (数据.发言, “&MS=0”)

.子程序 初始化, 空白型, , 程序执行时用
.局部变量 i, 整数型, , , 

连续赋值 (假, .可视, .可视, .可视, .可视, .可视, .可视, .可视, .可视, .可视, .可视, .可视, .可视, .可视, .可视, .可视, .可视, .可视, .可视)
连续赋值 (假, ., ., ., ., ., .)
.计次循环首 (20, i)
    连续赋值 (假, 牌图片框1 [i], 可视, 牌图片框2 [i], 可视, 牌图片框3 [i], 可视)
.计次循环尾 ()
连续赋值 (假, 牌图片框4 [1].可视, 牌图片框4 [2].可视, 牌图片框4 [3].可视)
赋值 (玩家序号, 0)
赋值 (倍数, 1)
赋值 (底分, 0)
赋值 (地主, 0)
赋值 (时间, 60)
赋值 (上次地主叫分, 0)
重定义数组 (牌代码, 假, 0)

赋值 (.内容, “-”)
赋值 (.内容, 到文本 (倍数))
赋值 (.内容, “00”)
赋值 (.可视, 假)
赋值 (.内容, “”)
连续赋值 (“”, .内容, .内容)
分数框初始化 ()
赋值 (.时钟周期, 0)

.子程序 重新发牌之前初始化, 空白型, , 
.局部变量 i, 整数型, , , 

 ' 连续赋值 (假, 图片框1.可视, 图片框2.可视, 图片框3.可视, 图片框4.可视, 开始图形按钮.可视, 图形按钮1.可视, 图形按钮2.可视, 图形按钮3.可视, 地主图形按钮.可视, 头像图形按钮3.可视, 头像图形按钮2.可视, 钟图形按钮.可视, 编辑框1.可视, 编辑框2.可视, 发言超级按钮.可视, 昵称透明标签2.可视, 昵称透明标签3.可视)
连续赋值 (假, ., ., ., ., ., ., .可视, .可视, .可视, .可视, .可视)
.计次循环首 (20, i)
    连续赋值 (假, 牌图片框1 [i], 可视, 牌图片框2 [i], 可视, 牌图片框3 [i], 可视)
.计次循环尾 ()
赋值 (玩家序号, 0)
赋值 (倍数, 1)
赋值 (底分, 0)
赋值 (地主, 0)
赋值 (时间, 60)
赋值 (上次地主叫分, 0)
 ' 重定义数组 (牌代码, 假, 0)'接收牌里有这句代码
赋值 (.内容, “-”)
赋值 (.内容, 到文本 (倍数))
 ' 昵称透明标签.标题 ＝ “”
 ' 连续赋值 (“”, 编辑框1.内容, 编辑框2.内容)

.子程序 _开始图形按钮_被单击, 空白型, , 
.局部变量 客户数据, 客户数据1, , , 
.局部变量 i, 整数型, , , 

初始化客户数据 (客户数据)
赋值 (客户数据.类型, “&NO=1”)
赋值 (客户数据.举手, “&HA=1”)
转换成要发送的数据 (客户数据).发送数据 ()
 ' 调试窗口.编辑框1.加入文本 (“发送：” ＋ 转换成要发送的数据 (客户数据) ＋ #换行符)
.计次循环首 (20, i)
    连续赋值 (假, 牌图片框1 [i], 可视, 牌图片框2 [i], 可视, 牌图片框3 [i], 可视)
     ' 牌图片框1＝ 232,367;图片框2=528,104;图片框3=76,104
    赋值 (牌图片框1 [i], 左边, .左边)
    赋值 (牌图片框1 [i], 顶边, .顶边)
    赋值 (牌图片框2 [i], 左边, .左边)
    赋值 (牌图片框2 [i], 顶边, .顶边)
    赋值 (牌图片框3 [i], 左边, .左边)
    赋值 (牌图片框3 [i], 顶边, .顶边)
.计次循环尾 ()
连续赋值 (假, ., ., ., ., ., ., ., ., .)
赋值 (.内容, “-”)


.子程序 _开始图形按钮_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.顶边, 相减 (.顶边, 1))

.子程序 _开始图形按钮_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.顶边, 相加 (.顶边, 1))

.子程序 _连接图形按钮_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.顶边, 相加 (.顶边, 1))


.子程序 _连接图形按钮_鼠标左键被放开, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (.顶边, 相减 (.顶边, 1))

.子程序 _临时窗口_被选择, 空白型, , 
赋值 (调试窗口., 真)

.子程序 __启动窗口_将被销毁, 空白型, , 
调试窗口.销毁 ()


.子程序 _客户1_连接断开, 空白型, , 
初始化 ()
0.置文本 (“断开连接！”)
赋值 (.禁止, 假)

.子程序 _客户1_数据到达, 空白型, , 
.局部变量 服务器数据, 服务器数据1, , , 
.局部变量 文本变量, 文本型, , , 

转换成服务器数据 (服务器数据, 到文本 (取回数据 ()))
赋值 (玩家序号, 取玩家序号 (服务器数据))
赋值 (时间, 60)
赋值 (.时钟周期, 1000)
.判断开始 (等于 (服务器数据.类型, “&NO=0”)) ' &No=
    连续赋值 (假, .可视, .可视)
    处理玩家信息 (服务器数据)
.判断 (等于 (服务器数据.类型, “&NO=1”))
    连续赋值 (假, .可视, .可视, .可视)
    播放音乐 (相加 (程序目录, “\res\发牌.wav”), )
    赋值 (.可视, 真)
    赋值 (.时钟周期, 1000)
    接收牌 (服务器数据)
.判断 (等于 (服务器数据.类型, “&NO=2”))
     ' 连续赋值 (真, 一分超级按钮.可视, 二分超级按钮.可视, 三分超级按钮.可视, 不叫超级按钮.可视)
    处理地主信息 (服务器数据)
.判断 (等于 (服务器数据.类型, “&NO=3”))
    接收底牌 (服务器数据)
.判断 (等于 (服务器数据.类型, “&NO=4”)) ' 不出
    处理不出 (服务器数据)
.判断 (等于 (服务器数据.类型, “&NO=5”))
    开始打牌喽 (服务器数据)
    输出调试文本 (服务器数据.底牌)
.判断 (等于 (服务器数据.类型, “&NO=6”)) ' 解析出错信息
    播放音乐 (相加 (程序目录, “\res\errmsge.wav”), )
    0.置文本 (取文本右边 (服务器数据.发言, 相减 (取文本长度 (服务器数据.发言), 4)))
    调试窗口.加入文本 (., 相加 (“收到：”, 服务器数据.发言, #换行符))
.判断 (等于 (服务器数据.类型, “&NO=7”))
    聊天室 (服务器数据)
.判断 (等于 (服务器数据.类型, “&NO=8”))
    开始算分 (服务器数据)
.判断 (等于 (服务器数据.类型, “&NO=9”))
    重新发牌之前初始化 ()
.默认
    
.判断结束


.子程序 开始算分, 空白型, , 
.参数 数据, 服务器数据1, , 

.局部变量 玩家牌的张数, 整数型, , "0", 
.局部变量 i, 整数型, , , 


填分数框 (数据)
取玩家牌的张数 (数据, 玩家牌的张数)
赋值 (倍数, 到数值 (取文本右边 (数据.倍数, 1)))
赋值 (.内容, 到文本 (倍数)) ' 本次牌一次显示倍数
.计次循环首 (3, i)
    .如果真 (等于 (玩家牌的张数 [i], 0)) ' i是赢家
        .如果 (等于 (i, 地主)) ' 如果地主是赢家，则判断自己是不是地主
            .如果 (等于 (玩家序号, 地主))
                播放音乐 (相加 (程序目录, “\res\win.wav”), )
            .否则
                播放音乐 (相加 (程序目录, “\res\run.wav”), )
            .如果结束
            
        .否则
             ' 如果地主不是赢家，判断自己是不是地主，
            .如果 (等于 (玩家序号, 地主))
                播放音乐 (相加 (程序目录, “\res\run.wav”), )
            .否则
                播放音乐 (相加 (程序目录, “\res\win.wav”), )
            .如果结束
            
        .如果结束
        跳出循环 ()
        
    .如果真结束
    
.计次循环尾 ()
赋值 (.时钟周期, 0)
赋值 (.内容, “”) ' 是时间标签
连续赋值 (假, ., .)
赋值 (.可视, 假)
载入 (得分消息窗口, , 真)
 ' 重新发牌之前初始化 ()
赋值 (.可视, 真)
赋值 (玩家序号, 0)
赋值 (倍数, 1)
赋值 (底分, 0)
赋值 (地主, 0)
赋值 (时间, 60)
赋值 (上次地主叫分, 0)

.子程序 处理不出, 空白型, , 
.参数 数据, 服务器数据1, , 

.局部变量 不出玩家, 整数型, , , 
.局部变量 动作, 整数型, , , 
.局部变量 动作变量, 整数型, , , 置动作的返回值
.局部变量 i, 整数型, , , 
.局部变量 我的序号, 整数型, , , 

播放音乐 (相加 (程序目录, “\res\bf.wav”), )
赋值 (不出次数, 相加 (不出次数, 1))
赋值 (我的序号, 玩家序号)
赋值 (不出玩家, 到数值 (取文本右边 (数据.举手, 1)))
赋值 (动作, 不出玩家)
 ' 动作 ＝ 到数值 (取文本右边 (数据.动作, 1))
输出调试文本 (相加 (“不出次数=”, 到文本 (不出次数)))
.如果 (等于 (不出次数, 2))
    赋值 (., 真)
.否则
    赋值 (., 假)
.如果结束


.如果 (或者 (并且 (等于 (动作, 1), 等于 (我的序号, 1)), 并且 (等于 (动作, 2), 等于 (我的序号, 2)), 并且 (等于 (动作, 3), 等于 (我的序号, 3))))
    .计次循环首 (20, i)
        .如果真 (并且 (等于 (牌图片框1 [i], 顶边, 271), 等于 (牌图片框1 [i], 可视, 真)))
            赋值 (牌图片框1 [i], 可视, 假)
        .如果真结束
        
    .计次循环尾 ()
    赋值 (.左边, 304)
    赋值 (.顶边, 310)
    赋值 (.正常图片, #不出)
    赋值 (.可视, 真)
.否则
    .如果 (或者 (并且 (等于 (动作, 2), 等于 (我的序号, 1)), 并且 (等于 (动作, 3), 等于 (我的序号, 2)), 并且 (等于 (动作, 1), 等于 (我的序号, 3))))
        .计次循环首 (20, i)
            .如果真 (并且 (小于 (牌图片框2 [i], 左边, 528), 等于 (牌图片框2 [i], 可视, 真)))
                赋值 (牌图片框2 [i], 可视, 假)
            .如果真结束
            
        .计次循环尾 ()
        
        赋值 (.左边, 440)
        赋值 (.顶边, 176)
        赋值 (.正常图片, #不出)
        赋值 (.可视, 真)
    .否则
        .如果 (或者 (并且 (等于 (动作, 3), 等于 (我的序号, 1)), 并且 (等于 (动作, 1), 等于 (我的序号, 2)), 并且 (等于 (动作, 2), 等于 (我的序号, 3))))
            .计次循环首 (20, i)
                .如果真 (并且 (大于 (牌图片框3 [i], 左边, 76), 等于 (牌图片框3 [i], 可视, 真)))
                    赋值 (牌图片框3 [i], 可视, 假)
                .如果真结束
                
            .计次循环尾 ()
            赋值 (.左边, 160)
            赋值 (.顶边, 176)
            赋值 (.正常图片, #不出)
            赋值 (.可视, 真)
        .否则
            
        .如果结束
        
    .如果结束
    
.如果结束
赋值 (动作, 到数值 (取文本右边 (数据.动作, 1)))
赋值 (动作变量, 置动作 (动作, 玩家序号))
.如果 (等于 (动作变量, 1))
    赋值 (.可视, 假)
    .计次循环首 (20, i)
        .如果真 (并且 (等于 (牌图片框1 [i], 顶边, 271), 等于 (牌图片框1 [i], 可视, 真)))
            赋值 (牌图片框1 [i], 可视, 假)
        .如果真结束
        
    .计次循环尾 ()
    连续赋值 (真, ., .)
.否则
    .如果 (等于 (动作变量, 2))
        赋值 (.可视, 假)
        .计次循环首 (20, i)
            .如果真 (并且 (小于 (牌图片框2 [i], 左边, 528), 等于 (牌图片框2 [i], 可视, 真)))
                赋值 (牌图片框2 [i], 可视, 假)
            .如果真结束
            
        .计次循环尾 ()
    .否则
        .如果 (等于 (动作变量, 3))
            赋值 (.可视, 假)
            .计次循环首 (20, i)
                .如果真 (并且 (大于 (牌图片框3 [i], 左边, 76), 等于 (牌图片框3 [i], 可视, 真)))
                    赋值 (牌图片框3 [i], 可视, 假)
                .如果真结束
                
            .计次循环尾 ()
        .否则
            
        .如果结束
        
    .如果结束
    
    连续赋值 (假, ., .)
.如果结束


.子程序 开始打牌喽, 空白型, , 
.参数 数据, 服务器数据1, , 

.局部变量 动作, 整数型, , , 
.局部变量 上次出牌的玩家, 整数型, , , 
.局部变量 上家所出的牌, 整数型, , "0", 
.局部变量 玩家牌的张数, 整数型, , "0", 
.局部变量 动作变量, 整数型, , , 
.局部变量 i, 整数型, , , 
.局部变量 调试变量, 整数型, , , 


赋值 (不出次数, 0) ' 处理不出时要用到的程序集变量
赋值 (动作, 到数值 (取文本右边 (数据.动作, 1)))
赋值 (上次出牌的玩家, 到数值 (取文本右边 (数据.举手, 1)))
取牌代码 (数据, 上家所出的牌, 0) ' 0表示取底牌,用"服务器数据.底牌"来发送上家出的牌
.如果 (等于 (判断牌 (上家所出的牌), 4))
    播放音乐 (相加 (程序目录, “\res\炸.wav”), )
    赋值 (倍数, 相乘 (倍数, 2))
    赋值 (.内容, 到文本 (倍数))
.否则
    播放音乐 (相加 (程序目录, “\res\出牌.wav”), )
.如果结束
取玩家牌的张数 (数据, 玩家牌的张数)
赋值 (., 假) ' 程序运行时会看得见这句代码的作用，应该换个地方,向后移
 ' 赋值 (动作变量, 置动作 (动作, 玩家序号))
 ' 输出调试文本 (“动作=” ＋ 到文本 (动作) ＋ “ 上次出牌的玩家=” ＋ 到文本 (上次出牌的玩家) ＋ “  玩家牌的张数=” ＋ 到文本 (取数组成员数 (上家所出的牌)) ＋ “  动作变量=” ＋ 到文本 (动作变量) ＋ “ 我是=” ＋ 到文本 (玩家序号))

.如果 (等于 (动作, 玩家序号))
    连续赋值 (真, ., .)
.否则
     ' 不出超级按钮.禁止 ＝ 假
    连续赋值 (假, ., .)
.如果结束

.如果 (等于 (动作变量, 1))
    赋值 (.可视, 假)
    .计次循环首 (20, i)
        .如果真 (并且 (等于 (牌图片框1 [i], 顶边, 271), 等于 (牌图片框1 [i], 可视, 真)))
            赋值 (牌图片框1 [i], 可视, 假)
        .如果真结束
        
    .计次循环尾 ()
.否则
    .如果 (等于 (动作变量, 2))
        赋值 (.可视, 假)
        .计次循环首 (20, i)
            .如果真 (并且 (小于 (牌图片框2 [i], 左边, 528), 等于 (牌图片框2 [i], 可视, 真)))
                赋值 (牌图片框2 [i], 可视, 假)
            .如果真结束
            
        .计次循环尾 ()
    .否则
        .如果 (等于 (动作变量, 3))
            赋值 (.可视, 假)
            .计次循环首 (20, i)
                .如果真 (并且 (大于 (牌图片框3 [i], 左边, 76), 等于 (牌图片框3 [i], 可视, 真)))
                    赋值 (牌图片框3 [i], 可视, 假)
                .如果真结束
                
            .计次循环尾 ()
        .否则
            
        .如果结束
        
    .如果结束
    
.如果结束
显示玩家出的牌 (上次出牌的玩家, 玩家序号, 上家所出的牌)


.子程序 显示玩家出的牌, 空白型, , 
.参数 动作, 整数型, , 
.参数 我的序号, 整数型, , 
.参数 所出的牌, 整数型, 数组, 

.局部变量 横向位置, 整数型, , , 
.局部变量 纵向位置, 整数型, , , 
.局部变量 剩牌1, 整数型, , , 
.局部变量 i, 整数型, , , 
.局部变量 变量2, 整数型, , , 
.局部变量 变量3, 空白型, , , 

 ' 牌图片框1＝ 232,367;图片框2=528,104;图片框3=76,104
.如果 (或者 (并且 (等于 (动作, 1), 等于 (我的序号, 1)), 并且 (等于 (动作, 2), 等于 (我的序号, 2)), 并且 (等于 (动作, 3), 等于 (我的序号, 3))))
    赋值 (横向位置, 相减 (330, 相除 (相加 (相乘 (相减 (取数组成员数 (所出的牌), 1), 15), 57), 2)))
    赋值 (纵向位置, 271)
    .计次循环首 (20, i)
        .如果 (等于 (牌图片框1 [i], 顶边, 356))
            赋值 (牌图片框1 [i], 可视, 假)
            赋值 (牌图片框1 [i], 左边, 横向位置)
            赋值 (牌图片框1 [i], 顶边, 纵向位置)
            赋值 (牌图片框1 [i], 可视, 真)
            赋值 (横向位置, 相加 (横向位置, 15))
        .否则
            
        .如果结束
        
    .计次循环尾 ()
    .计次循环首 (20, i)
        .如果真 (并且 (等于 (牌图片框1 [i], 顶边, 376), 等于 (牌图片框1 [i], 可视, 真)))
            赋值 (剩牌1, 相加 (剩牌1, 1))
        .如果真结束
        
    .计次循环尾 ()
    赋值 (横向位置, 相减 (330, 相除 (相加 (相乘 (相减 (剩牌1, 1), 15), 57), 2)))
    .计次循环首 (20, i)
        .如果真 (并且 (大于 (牌图片框1 [i], 顶边, 271), 等于 (牌图片框1 [i], 可视, 真)))
            赋值 (牌图片框1 [i], 左边, 横向位置)
            赋值 (横向位置, 相加 (横向位置, 15))
        .如果真结束
        
    .计次循环尾 ()
    
.否则
    .如果 (或者 (并且 (等于 (动作, 2), 等于 (我的序号, 1)), 并且 (等于 (动作, 3), 等于 (我的序号, 2)), 并且 (等于 (动作, 1), 等于 (我的序号, 3))))
        赋值 (横向位置, 相减 (514, 相加 (相乘 (相减 (取数组成员数 (所出的牌), 1), 15), 57)))
        赋值 (纵向位置, 110)
        .计次循环首 (20, i)
            .如果真 (小于 (牌图片框2 [i], 左边, 528))
                赋值 (变量2, 相加 (变量2, 1))
            .如果真结束
            
        .计次循环尾 ()
        
        
        
        
        .计次循环首 (取数组成员数 (所出的牌), i)
            .如果真 (并且 (等于 (牌图片框2 [相加 (变量2, i)].左边, 528), 等于 (牌图片框2 [相加 (变量2, i)].可视, 真)))
                赋值 (牌图片框2 [相加 (变量2, i)].左边, 横向位置)
                赋值 (牌图片框2 [相加 (变量2, i)].顶边, 纵向位置)
                赋值 (牌图片框2 [相加 (变量2, i)].图片, 读入文件 (相加 (程序目录, “\bmp\”, 到文本 (所出的牌 [i]), “.bmp”)))
                赋值 (横向位置, 相加 (横向位置, 15))
            .如果真结束
            
        .计次循环尾 ()
        .计次循环首 (20, i)
            .如果真 (并且 (等于 (牌图片框2 [i], 左边, 528), 等于 (牌图片框2 [i], 可视, 真)))
                赋值 (剩牌1, 相加 (剩牌1, 1))
            .如果真结束
            
        .计次循环尾 ()
        赋值 (纵向位置, 相减 (相除 (相减 (_启动窗口., .), 2), 相除 (相加 (相乘 (剩牌1, 15), 77), 2)))
        .计次循环首 (20, i)
            .如果真 (并且 (等于 (牌图片框2 [i], 左边, 528), 等于 (牌图片框2 [i], 可视, 真)))
                赋值 (牌图片框2 [i], 顶边, 纵向位置)
                赋值 (纵向位置, 相加 (纵向位置, 15))
            .如果真结束
            
        .计次循环尾 ()
        
    .否则
        .如果 (或者 (并且 (等于 (动作, 3), 等于 (我的序号, 1)), 并且 (等于 (动作, 1), 等于 (我的序号, 2)), 并且 (等于 (动作, 2), 等于 (我的序号, 3))))
            赋值 (横向位置, 146)
            赋值 (纵向位置, 110)
            .计次循环首 (20, i)
                .如果真 (大于 (牌图片框3 [i], 左边, 76))
                    赋值 (变量3, 相加 (变量3, 1))
                .如果真结束
                
            .计次循环尾 ()
            .计次循环首 (取数组成员数 (所出的牌), i)
                .如果真 (等于 (牌图片框3 [相加 (变量3, i)].左边, 76))
                    赋值 (牌图片框3 [相加 (变量3, i)].左边, 横向位置)
                    赋值 (牌图片框3 [相加 (变量3, i)].顶边, 纵向位置)
                    赋值 (牌图片框3 [相加 (变量3, i)].图片, 读入文件 (相加 (程序目录, “\bmp\”, 到文本 (所出的牌 [i]), “.bmp”)))
                    赋值 (横向位置, 相加 (横向位置, 15))
                .如果真结束
                
            .计次循环尾 ()
            .计次循环首 (20, i)
                .如果真 (并且 (等于 (牌图片框3 [i], 左边, 76), 等于 (牌图片框3 [i], 可视, 真)))
                    赋值 (剩牌1, 相加 (剩牌1, 1))
                .如果真结束
                
            .计次循环尾 ()
            赋值 (纵向位置, 相减 (相除 (相减 (_启动窗口., .), 2), 相除 (相加 (相乘 (剩牌1, 15), 77), 2)))
            .计次循环首 (20, i)
                .如果真 (并且 (等于 (牌图片框3 [i], 左边, 76), 等于 (牌图片框3 [i], 可视, 真)))
                    赋值 (牌图片框3 [i], 顶边, 纵向位置)
                    赋值 (纵向位置, 相加 (纵向位置, 15))
                .如果真结束
                
            .计次循环尾 ()
            
            
        .否则
            
        .如果结束
        
    .如果结束
    
.如果结束





.子程序 接收底牌, 空白型, , 
.参数 数据, 服务器数据1, , 

.局部变量 临时牌变量, 整数型, , "0", 
.局部变量 i, 整数型, , , 
.局部变量 横向位置, 整数型, , , 显示自己牌用
.局部变量 纵向位置, 整数型, , , 显示上下家牌用

赋值 (地主, 到数值 (取文本右边 (数据.地主, 1)))
赋值 (底分, 到数值 (取文本右边 (数据.地主分数, 1)))
取牌代码 (数据, 临时牌变量, 0)
.如果 (等于 (底分, 1))
    播放音乐 (相加 (程序目录, “\res\一分.wav”), )
.否则
    .如果 (等于 (底分, 2))
        播放音乐 (相加 (程序目录, “\res\二分.wav”), )
    .否则
        .如果 (等于 (底分, 3))
            播放音乐 (相加 (程序目录, “\res\三分.wav”), )
        .否则
            
        .如果结束
        
    .如果结束
    
.如果结束

赋值 (.内容, 到文本 (底分))
赋值 (.内容, 到文本 (倍数))

连续赋值 (假, ., ., ., ., .可视, .可视, .可视)
.如果 (等于 (置动作 (地主, 玩家序号), 1))
    赋值 (., 真)
    连续赋值 (真, ., .)
     ' 取牌代码 (数据, 临时牌变量, 0)  ' 0表示取底牌
    .计次循环首 (取数组成员数 (临时牌变量), i)
        加入成员 (牌代码, 临时牌变量 [i])
    .计次循环尾 ()
    牌排序子程序 (牌代码)
    赋值 (横向位置, 相减 (330, 相除 (相加 (相乘 (相减 (取数组成员数 (牌代码), 1), 15), 57), 2))) ' 显示自己的牌
    输出调试文本 (到文本 (取数组成员数 (牌代码)))
    .计次循环首 (取数组成员数 (牌代码), i)
        赋值 (牌图片框1 [i], 顶边, 376)
        赋值 (牌图片框1 [i], 图片, 读入文件 (相加 (程序目录, “\bmp\”, 到文本 (牌代码 [i]), “.bmp”)))
        赋值 (牌图片框1 [i], 左边, 横向位置)
        赋值 (牌图片框1 [i], 可视, 真)
        赋值 (横向位置, 相加 (横向位置, 15))
    .计次循环尾 ()
    置动作 (地主, 玩家序号) ' 为了在发完底牌后时钟的位置不把牌挡住
.否则
    .如果 (等于 (置动作 (地主, 玩家序号), 2))
        赋值 (纵向位置, 相减 (相除 (相减 (_启动窗口., .), 2), 相除 (相加 (相乘 (20, 15), 77), 2))) ' 20是牌的张数，15是牌的间距，77是牌的高度
        连续赋值 (假, ., .)
        .计次循环首 (20, i) ' 显示下家的牌
            赋值 (牌图片框2 [i], 左边, 528)
            赋值 (牌图片框2 [i], 图片, #地主)
            赋值 (牌图片框2 [i], 顶边, 纵向位置)
            赋值 (牌图片框2 [i], 可视, 真)
            赋值 (纵向位置, 相加 (纵向位置, 15))
        .计次循环尾 ()
    .否则
        .如果 (等于 (置动作 (地主, 玩家序号), 3))
            赋值 (纵向位置, 相减 (相除 (相减 (_启动窗口., .), 2), 相除 (相加 (相乘 (20, 15), 77), 2))) ' 20是牌的张数，15是牌的间距，77是牌的高度
            连续赋值 (假, ., .)
            .计次循环首 (20, i) ' 显示上家的牌
                赋值 (牌图片框3 [i], 左边, 76)
                赋值 (牌图片框3 [i], 图片, #地主)
                赋值 (牌图片框3 [i], 顶边, 纵向位置)
                赋值 (牌图片框3 [i], 可视, 真)
                赋值 (纵向位置, 相加 (纵向位置, 15))
            .计次循环尾 ()
        .否则
            
        .如果结束
        
    .如果结束
    
.如果结束
.计次循环首 (3, i)
    赋值 (牌图片框4 [i], 图片, 读入文件 (相加 (程序目录, “\bmp\”, 到文本 (临时牌变量 [i]), “.bmp”)))
.计次循环尾 ()
置地主头像 (地主, 玩家序号)


.子程序 处理地主信息, 空白型, , 
.参数 数据, 服务器数据1, , 

.局部变量 分数, 整数型, , , 
.局部变量 动作, 整数型, , , 
.局部变量 上次动作, 整数型, , , 
.局部变量 客户数据, 客户数据1, , , 
.局部变量 分数图片变量, 整数型, , , 
.局部变量 动作变量, 整数型, , , 

赋值 (分数, 到数值 (取文本右边 (数据.地主分数, 1)))
赋值 (地主, 到数值 (取文本右边 (数据.地主, 1)))
赋值 (动作, 到数值 (取文本右边 (数据.动作, 1)))
赋值 (上次动作, 相减 (动作, 1))
.如果真 (等于 (上次动作, 0))
    赋值 (上次动作, 3)
.如果真结束

.如果 (等于 (分数, 上次地主叫分))
    播放音乐 (相加 (程序目录, “\res\不叫.wav”), ) ' 不叫
    赋值 (分数图片变量, 0)
    置地主头像 (动作, 玩家序号)
.否则
    .如果 (大于 (分数, 上次地主叫分))
        .判断开始 (等于 (分数, 1))
            赋值 (分数图片变量, 1)
            赋值 (上次地主叫分, 分数)
            播放音乐 (相加 (程序目录, “\res\一分.wav”), )
            赋值 (., 真)
        .判断 (等于 (分数, 2))
            赋值 (分数图片变量, 2)
            赋值 (上次地主叫分, 分数)
            播放音乐 (相加 (程序目录, “\res\二分.wav”), )
            连续赋值 (真, ., .)
        .默认
            
        .判断结束
        
    .否则
        
    .如果结束
    置地主头像 (地主, 玩家序号)
.如果结束

.如果 (等于 (置上次动作 (上次动作, 玩家序号, 分数图片变量), 1))
    连续赋值 (假, ., ., ., .)
.否则
    
.如果结束

.如果 (等于 (置动作 (动作, 玩家序号), 1))
    连续赋值 (真, ., ., ., .)
.否则
    连续赋值 (假, ., ., ., .)
.如果结束



.子程序 置上次动作, 整数型, , 
.参数 动作, 整数型, , 
.参数 我的序号, 整数型, , 
.参数 分数, 整数型, , 

.局部变量 变量, 整数型, , , 
.局部变量 i, 整数型, , , 
.局部变量 返回值, 整数型, , , 

.如果 (或者 (并且 (等于 (动作, 1), 等于 (我的序号, 1)), 并且 (等于 (动作, 2), 等于 (我的序号, 2)), 并且 (等于 (动作, 3), 等于 (我的序号, 3))))
    .判断开始 (等于 (分数, 0))
        赋值 (.正常图片, #不叫)
    .判断 (等于 (分数, 1))
        赋值 (.正常图片, #一分)
    .判断 (等于 (分数, 2))
        赋值 (.正常图片, #二分)
    .判断 (等于 (分数, 3))
        赋值 (.正常图片, #三分)
    .默认
        
    .判断结束
    赋值 (.左边, 304)
    赋值 (.顶边, 314)
    赋值 (.可视, 真)
    赋值 (返回值, 1)
.否则
    .如果 (或者 (并且 (等于 (动作, 2), 等于 (我的序号, 1)), 并且 (等于 (动作, 3), 等于 (我的序号, 2)), 并且 (等于 (动作, 1), 等于 (我的序号, 3))))
        .判断开始 (等于 (分数, 0))
            赋值 (.正常图片, #不叫)
        .判断 (等于 (分数, 1))
            赋值 (.正常图片, #一分)
        .判断 (等于 (分数, 2))
            赋值 (.正常图片, #二分)
        .判断 (等于 (分数, 3))
            赋值 (.正常图片, #三分)
        .默认
            
        .判断结束
        赋值 (.左边, 456)
        赋值 (.顶边, 176)
        赋值 (.可视, 真)
        赋值 (返回值, 2)
    .否则
        .如果 (或者 (并且 (等于 (动作, 3), 等于 (我的序号, 1)), 并且 (等于 (动作, 1), 等于 (我的序号, 2)), 并且 (等于 (动作, 2), 等于 (我的序号, 3))))
            .判断开始 (等于 (分数, 0))
                赋值 (.正常图片, #不叫)
            .判断 (等于 (分数, 1))
                赋值 (.正常图片, #一分)
            .判断 (等于 (分数, 2))
                赋值 (.正常图片, #二分)
            .判断 (等于 (分数, 3))
                赋值 (.正常图片, #三分)
            .默认
                
            .判断结束
            赋值 (.左边, 160)
            赋值 (.顶边, 176)
            赋值 (.可视, 真)
            
            赋值 (返回值, 3)
        .否则
            
        .如果结束
        
    .如果结束
    
.如果结束
返回 (返回值)


.子程序 置地主头像, 整数型, , 
.参数 动作, 整数型, , 
.参数 我的序号, 整数型, , 

.局部变量 i, 整数型, , , 
.局部变量 返回值, 整数型, , , 

输出调试文本 (“开始置地主”)
.如果 (或者 (并且 (等于 (动作, 1), 等于 (我的序号, 1)), 并且 (等于 (动作, 2), 等于 (我的序号, 2)), 并且 (等于 (动作, 3), 等于 (我的序号, 3))))
    赋值 (.左边, 相减 (330, 相除 (相加 (相乘 (相减 (20, 1), 15), 57), 2), 40)) ' 40-钟图形按钮.宽度，就是钟离牌的位置
    赋值 (.顶边, 450)
    
    赋值 (返回值, 1)
.否则
    .如果 (或者 (并且 (等于 (动作, 2), 等于 (我的序号, 1)), 并且 (等于 (动作, 3), 等于 (我的序号, 2)), 并且 (等于 (动作, 1), 等于 (我的序号, 3))))
        赋值 (.左边, 616)
        赋值 (.顶边, 64)
        赋值 (返回值, 2)
    .否则
        .如果 (或者 (并且 (等于 (动作, 3), 等于 (我的序号, 1)), 并且 (等于 (动作, 1), 等于 (我的序号, 2)), 并且 (等于 (动作, 2), 等于 (我的序号, 3))))
            赋值 (.左边, 32)
            赋值 (.顶边, 64)
            赋值 (返回值, 3)
        .否则
            
        .如果结束
        
    .如果结束
    
.如果结束
赋值 (.可视, 真)
输出调试文本 (“完”)
返回 (返回值)


.子程序 置地主分数图片, 整数型, , 分数和图片和位置
.参数 动作, 整数型, , 
.参数 我的序号, 整数型, , 
.参数 分数, 整数型, , 

.局部变量 变量, 整数型, , , 
.局部变量 i, 整数型, , , 
.局部变量 返回值, 整数型, , , 

.如果 (或者 (并且 (等于 (动作, 1), 等于 (我的序号, 1)), 并且 (等于 (动作, 2), 等于 (我的序号, 2)), 并且 (等于 (动作, 3), 等于 (我的序号, 3))))
    赋值 (.左边, 304)
    赋值 (.顶边, 310)
    .判断开始 (等于 (分数, 1))
        赋值 (.正常图片, #一分)
    .判断 (等于 (分数, 2))
        赋值 (.正常图片, #二分)
    .判断 (等于 (分数, 3))
        赋值 (.正常图片, #三分)
    .默认
        
    .判断结束
    赋值 (.可视, 真)
    赋值 (返回值, 1)
.否则
    .如果 (或者 (并且 (等于 (动作, 2), 等于 (我的序号, 1)), 并且 (等于 (动作, 3), 等于 (我的序号, 2)), 并且 (等于 (动作, 1), 等于 (我的序号, 3))))
        赋值 (.左边, 456)
        赋值 (.顶边, 176)
        .判断开始 (等于 (分数, 1))
            赋值 (.正常图片, #一分)
        .判断 (等于 (分数, 2))
            赋值 (.正常图片, #二分)
        .判断 (等于 (分数, 3))
            赋值 (.正常图片, #三分)
        .默认
            
        .判断结束
        赋值 (.可视, 真)
        赋值 (返回值, 2)
    .否则
        .如果 (或者 (并且 (等于 (动作, 3), 等于 (我的序号, 1)), 并且 (等于 (动作, 1), 等于 (我的序号, 2)), 并且 (等于 (动作, 2), 等于 (我的序号, 3))))
            赋值 (.左边, 160)
            赋值 (.顶边, 176)
            .判断开始 (等于 (分数, 1))
                赋值 (.正常图片, #一分)
            .判断 (等于 (分数, 2))
                赋值 (.正常图片, #二分)
            .判断 (等于 (分数, 3))
                赋值 (.正常图片, #三分)
            .默认
                
            .判断结束
            赋值 (.可视, 真)
            赋值 (返回值, 3)
        .否则
            
        .如果结束
        
    .如果结束
    
.如果结束
返回 (返回值)


.子程序 接收牌, 空白型, , 
.参数 数据, 服务器数据1, , 

.局部变量 i, 整数型, , , 
.局部变量 横向位置, 整数型, , , 显示自己牌用
.局部变量 纵向位置, 整数型, , , 显示上下家牌用
.局部变量 轮到谁, 整数型, , , 

重定义数组 (牌代码, 假, 0) ' 不用这句，在“重新发牌这前初始化()”里包括了这句
取牌代码 (数据, 牌代码, 1)
牌排序子程序 (牌代码)
赋值 (横向位置, 相减 (330, 相除 (相加 (相乘 (相减 (取数组成员数 (牌代码), 1), 15), 57), 2)))
.计次循环首 (取数组成员数 (牌代码), i) ' 显示自己的牌
    赋值 (牌图片框1 [i], 顶边, 376)
    赋值 (牌图片框1 [i], 图片, 读入文件 (相加 (程序目录, “\bmp\”, 到文本 (牌代码 [i]), “.bmp”)))
    赋值 (牌图片框1 [i], 左边, 横向位置)
    赋值 (牌图片框1 [i], 可视, 真)
    赋值 (横向位置, 相加 (横向位置, 15))
.计次循环尾 ()
赋值 (纵向位置, 相减 (相除 (相减 (_启动窗口., .), 2), 相除 (相加 (相乘 (17, 15), 77), 2))) ' 17是牌的张数，15是牌的间距，77是牌的高度
.计次循环首 (17, i)
    赋值 (牌图片框2 [i], 左边, 528)
    赋值 (牌图片框2 [i], 图片, #农民)
    赋值 (牌图片框2 [i], 顶边, 纵向位置)
    赋值 (牌图片框2 [i], 可视, 真)
    
    赋值 (牌图片框3 [i], 左边, 76)
    赋值 (牌图片框3 [i], 图片, #农民)
    赋值 (牌图片框3 [i], 顶边, 纵向位置)
    赋值 (牌图片框3 [i], 可视, 真)
    
    赋值 (纵向位置, 相加 (纵向位置, 15))
.计次循环尾 ()



.计次循环首 (3, i)
    赋值 (牌图片框4 [i], 左边, 相加 (.左边, 相乘 (相减 (i, 1), 60))) ' 5是牌间距，60-57是牌的宽
    赋值 (牌图片框4 [i], 图片, #农民)
    赋值 (牌图片框4 [i], 可视, 真)
.计次循环尾 ()
 ' 以下是判断地主------------------------------------------------------------------
赋值 (地主, 到数值 (取文本右边 (数据.地主, 1)))
赋值 (.可视, 真)
赋值 (轮到谁, 置动作 (到数值 (取文本右边 (数据.动作, 1)), 玩家序号))
赋值 (时间, 60)
.如果真 (等于 (轮到谁, 1))
    连续赋值 (真, ., ., ., .)
.如果真结束


.子程序 取玩家牌的张数, 空白型, , 
.参数 数据, 服务器数据1, , 
.参数 参数, 整数型, 数组, 

.局部变量 变量1, 文本型, , "0", 
.局部变量 变量2, 文本型, , "0", 
.局部变量 i, 整数型, , , 

赋值 (变量1, 分割文本 (数据.玩家牌的张数, “=”, ))
赋值 (变量2, 分割文本 (变量1 [2], “,”, ))
.计次循环首 (3, i) ' 只有三玩家
    加入成员 (参数, 到数值 (变量2 [i]))
.计次循环尾 ()

.子程序 置动作, 整数型, , 1表示自己，2表示下家，3表示上家
.参数 动作, 整数型, , 
.参数 我的序号, 整数型, , 

.局部变量 变量, 整数型, , , 
.局部变量 i, 整数型, , , 
.局部变量 返回值, 整数型, , , 

.如果 (或者 (并且 (等于 (动作, 1), 等于 (我的序号, 1)), 并且 (等于 (动作, 2), 等于 (我的序号, 2)), 并且 (等于 (动作, 3), 等于 (我的序号, 3))))
    赋值 (变量, 0) ' 我的牌的张数
    .计次循环首 (20, i)
        .如果真 (等于 (牌图片框1 [i], 可视, 真))
            赋值 (变量, 相加 (变量, 1))
        .如果真结束
        
    .计次循环尾 ()
    赋值 (.左边, 相减 (330, 相除 (相加 (相乘 (相减 (变量, 1), 15), 57), 2), 40)) ' 40-钟图形按钮.宽度，就是钟离牌的位置
    赋值 (.顶边, 400)
    赋值 (返回值, 1)
.否则
    .如果 (或者 (并且 (等于 (动作, 2), 等于 (我的序号, 1)), 并且 (等于 (动作, 3), 等于 (我的序号, 2)), 并且 (等于 (动作, 1), 等于 (我的序号, 3))))
        赋值 (.左边, 616)
        赋值 (.顶边, 304)
        赋值 (返回值, 2)
    .否则
        .如果 (或者 (并且 (等于 (动作, 3), 等于 (我的序号, 1)), 并且 (等于 (动作, 1), 等于 (我的序号, 2)), 并且 (等于 (动作, 2), 等于 (我的序号, 3))))
            赋值 (.左边, 24)
            赋值 (.顶边, 304)
            赋值 (返回值, 3)
        .否则
            
        .如果结束
        
    .如果结束
    
.如果结束
返回 (返回值)


.子程序 牌排序子程序, 空白型, , 
.参数 牌参数, 整数型, 数组, 

.局部变量 i, 整数型, , , 
.局部变量 j, 整数型, , , 
.局部变量 临时变量, 整数型, , , 

.计次循环首 (取数组成员数 (牌参数), i)
    .计次循环首 (相减 (取数组成员数 (牌参数), i), j)
        .如果 (大于 (到数值 (取文本右边 (到文本 (牌参数 [j]), 2)), 到数值 (取文本右边 (到文本 (牌参数 [相加 (j, 1)]), 2))))
            赋值 (临时变量, 牌参数 [j])
            赋值 (牌参数 [j], 牌参数 [相加 (j, 1)])
            赋值 (牌参数 [相加 (j, 1)], 临时变量)
        .否则
            .如果 (等于 (到数值 (取文本右边 (到文本 (牌参数 [j]), 2)), 到数值 (取文本右边 (到文本 (牌参数 [相加 (j, 1)]), 2))))
                .如果真 (大于 (到数值 (取文本左边 (到文本 (牌参数 [j]), 1)), 到数值 (取文本左边 (到文本 (牌参数 [相加 (j, 1)]), 1))))
                    赋值 (临时变量, 牌参数 [j])
                    赋值 (牌参数 [j], 牌参数 [相加 (j, 1)])
                    赋值 (牌参数 [相加 (j, 1)], 临时变量)
                    
                .如果真结束
                
            .否则
                
            .如果结束
            
        .如果结束
        
    .计次循环尾 ()
.计次循环尾 ()




.子程序 取牌代码, 空白型, , 
.参数 数据, 服务器数据1, , 
.参数 取出的牌代码, 整数型, 数组, 
.参数 参数, 整数型, , 1,正牌，0，底牌

.局部变量 变量1, 文本型, , "0", 
.局部变量 变量2, 文本型, , "0", 
.局部变量 i, 整数型, , , 

.判断开始 (等于 (参数, 0))
    赋值 (变量1, 分割文本 (数据.底牌, “=”, ))
    赋值 (变量2, 分割文本 (变量1 [2], “,”, ))
.判断 (等于 (参数, 1))
    赋值 (变量1, 分割文本 (数据.玩家的牌, “=”, ))
    赋值 (变量2, 分割文本 (变量1 [2], “,”, ))
.默认
    
.判断结束
.计次循环首 (取数组成员数 (变量2), i)
    加入成员 (取出的牌代码, 到数值 (变量2 [i]))
.计次循环尾 ()

.子程序 聊天室, 空白型, , 
.参数 数据, 服务器数据1, , 

.局部变量 文本变量1, 文本型, , , 
.局部变量 Msg1, 文本型, , , 

 ' 他妈的，变量的名字后面要跟个1才能运行，
播放音乐 (相加 (程序目录, “\res\friendonline.wav”), )
赋值 (文本变量1, 取文本右边 (数据.动作, 相减 (取文本长度 (数据.动作), 4)))
赋值 (Msg1, 取文本右边 (数据.发言, 相减 (取文本长度 (数据.发言), 4)))
.如果 (等于 (文本变量1, “系统消息”))
    相加 (文本变量1, “：”, Msg1, #换行符).加入文本 ()
    赋值 (.时钟周期, 10)
.否则
    相加 (文本变量1, “：”, Msg1, #换行符).加入文本 ()
    .如果 (等于 (文本变量1, .内容))
        赋值 (., 11) ' 下右
        相加 (_启动窗口., 592).未知支持库函数_26 (相加 (_启动窗口., 160), Msg1, -1, )
    .否则
        .如果 (等于 (文本变量1, .内容))
            赋值 (., 9) ' 下左
            相加 (_启动窗口., 80).未知支持库函数_26 (相加 (_启动窗口., 160), Msg1, -1, )
        .否则
            .如果 (等于 (文本变量1, .内容))
                 ' 气球提示框1.手柄方位 ＝ 9  ' 下左
                 ' 气球提示框1.弹出提示框 (_启动窗口.左边 ＋ 152, _启动窗口.顶边 ＋ 400, Msg1, -1, )
                
            .否则
                
            .如果结束
            
        .如果结束
        
    .如果结束
    
.如果结束


.子程序 取玩家序号, 整数型, , 
.参数 数据, 服务器数据1, , 

.局部变量 变量1, 文本型, , "0", 
.局部变量 变量2, 文本型, , "0", 
.局部变量 i, 整数型, , , 
.局部变量 变量, 整数型, , , 

赋值 (变量1, 分割文本 (数据.玩家昵称, “=”, ))
赋值 (变量2, 分割文本 (变量1 [2], “,”, ))
.计次循环首 (取数组成员数 (变量2), i)
    .如果真 (等于 (变量2 [i], 我的呢称))
        赋值 (变量, i)
        跳出循环 ()
    .如果真结束
    
.计次循环尾 ()
返回 (变量)

.子程序 处理玩家信息, 空白型, , 是否举手，
.参数 数据, 服务器数据1, , 

.局部变量 举手, 整数型, , "0", 
.局部变量 名字, 文本型, , "0", 
.局部变量 i, 整数型, , , 

 ' 连续赋值 (假, 一分超级按钮.可视, 二分超级按钮.可视, 三分超级按钮.可视, 不叫超级按钮.可视, 出牌超级按钮.可视, 不出超级按钮.可视)
填分数框 (数据)
赋值 (.时钟周期, 0)
赋值 (.内容, “60”)
连续赋值 (假, ., .)
.如果 (等于 (数据.玩家数, “&NU=1”)) ' 就我一人的情况-----------------------------
    连续赋值 (假, .可视, .可视, .可视, .可视, .可视, .可视)
    .计次循环首 (20, i) ' 用于中途退出处理界面
        连续赋值 (假, 牌图片框2 [i], 可视, 牌图片框3 [i], 可视)
    .计次循环尾 ()
    连续赋值 (假, 牌图片框4 [1].可视, 牌图片框4 [2].可视, 牌图片框4 [3].可视)
    .如果 (等于 (数据.举手, “&HA=0”))
        赋值 (.可视, 假)
        赋值 (.可视, 真)
    .否则
        赋值 (.可视, 假)
        赋值 (.左边, 320)
        赋值 (.顶边, 390)
        赋值 (.正常图片, #准备)
        播放音乐 (相加 (程序目录, “\res\开始.wav”), )
        赋值 (.可视, 真)
    .如果结束
    
.否则
    .如果 (等于 (数据.玩家数, “&NU=2”)) ' 两个玩家情况---------------------------
        连续赋值 (假, 牌图片框4 [1].可视, 牌图片框4 [2].可视, 牌图片框4 [3].可视)
        .如果 (等于 (玩家序号, 1)) ' 如果我是玩家1=============================
            .计次循环首 (20, i)
                赋值 (牌图片框3 [i], 可视, 假)
            .计次循环尾 ()
            连续赋值 (假, .可视, .可视, .可视)
            .如果 (等于 (取文本左边 (数据.举手, 5), “&HA=0”)) ' 如果我没有举手
                赋值 (.可视, 假)
                赋值 (.可视, 真)
            .否则
                .计次循环首 (20, i)
                    赋值 (牌图片框1 [i], 可视, 假)
                .计次循环尾 ()
                赋值 (.可视, 假) ' 如果我已举手,显示准备
                赋值 (.左边, 320)
                赋值 (.顶边, 390)
                赋值 (.正常图片, #准备)
                播放音乐 (相加 (程序目录, “\res\开始.wav”), )
                赋值 (.可视, 真)
            .如果结束
            赋值 (.内容, 取文本右边 (数据.玩家昵称, 相减 (取文本长度 (数据.玩家昵称), 寻找文本 (数据.玩家昵称, “,”, , 假)))) ' 取玩家2昵称
            连续赋值 (真, .可视, .可视) ' 显示玩家2的头像
            .如果 (等于 (取文本右边 (数据.举手, 1), “0”)) ' 如果玩家2没有举手
                赋值 (.可视, 假)
            .否则
                .计次循环首 (20, i)
                    赋值 (牌图片框2 [i], 可视, 假)
                .计次循环尾 ()
                赋值 (.左边, 512) ' 如果玩家2举手,显示准备
                赋值 (.顶边, 176)
                赋值 (.正常图片, #准备)
                播放音乐 (相加 (程序目录, “\res\开始.wav”), )
                赋值 (.可视, 真)
            .如果结束
            
        .否则
             ' 如果我是玩家2==============================================
            连续赋值 (假, .可视, .可视, .可视)
            .计次循环首 (20, i)
                赋值 (牌图片框2 [i], 可视, 假)
            .计次循环尾 ()
            .如果 (等于 (取文本右边 (数据.举手, 1), “0”)) ' 如果我没有举手，如果我是玩家2
                赋值 (.可视, 假)
                赋值 (.可视, 真)
            .否则
                赋值 (.可视, 假) ' 如果我已举手,显示准备
                赋值 (.左边, 320)
                赋值 (.顶边, 390)
                赋值 (.正常图片, #准备)
                播放音乐 (相加 (程序目录, “\res\开始.wav”), )
                赋值 (.可视, 真)
                .计次循环首 (20, i)
                    赋值 (牌图片框1 [i], 可视, 假)
                .计次循环尾 ()
            .如果结束
            赋值 (.内容, 取文本中间 (数据.玩家昵称, 5, 相减 (寻找文本 (数据.玩家昵称, “,”, , 假), 5)))
             ' 昵称透明标签3.标题 ＝ 取文本右边 (数据.玩家昵称, 取文本长度 (数据.玩家昵称) － 寻找文本 (数据.玩家昵称, “,”, , 假))  ' 取玩家1昵称
            连续赋值 (真, .可视, .可视) ' 显示玩家1的头像
            .如果 (等于 (取文本左边 (数据.举手, 5), “&HA=0”)) ' 如果玩家1没有举手
                赋值 (.可视, 假)
            .否则
                赋值 (.左边, 96) ' 如果玩家1举手,显示准备
                赋值 (.顶边, 176)
                赋值 (.正常图片, #准备)
                播放音乐 (相加 (程序目录, “\res\开始.wav”), )
                赋值 (.可视, 真)
                .计次循环首 (20, i)
                    赋值 (牌图片框3 [i], 可视, 假)
                .计次循环尾 ()
            .如果结束
            
        .如果结束
        
    .否则
         ' 以下是有3个玩家的情况--------------------------------------------------
         ' 先填表
        填分数框 (数据)
        .如果 (等于 (玩家序号, 1)) ' 我是玩家1-------------------------------------
            .如果 (等于 (取文本左边 (数据.举手, 5), “&HA=0”)) ' 如果我没有举手
                赋值 (.可视, 假)
                赋值 (.可视, 真)
            .否则
                赋值 (.可视, 假)
                赋值 (.左边, 320)
                赋值 (.顶边, 390)
                赋值 (.正常图片, #准备)
                播放音乐 (相加 (程序目录, “\res\开始.wav”), )
                赋值 (.可视, 真)
            .如果结束
            赋值 (.内容, 取文本中间 (数据.玩家昵称, 相加 (寻找文本 (数据.玩家昵称, “,”, , 假), 1), 相减 (倒找文本 (数据.玩家昵称, “,”, , 假), 寻找文本 (数据.玩家昵称, “,”, , 假), 1)))
            连续赋值 (真, .可视, .可视)
            .如果 (等于 (取文本中间 (数据.举手, 7, 1), “0”))
                赋值 (.可视, 假)
            .否则
                赋值 (.左边, 512)
                赋值 (.顶边, 176)
                赋值 (.正常图片, #准备)
                播放音乐 (相加 (程序目录, “\res\开始.wav”), )
                赋值 (.可视, 真)
                .计次循环首 (20, i)
                    赋值 (牌图片框2 [i], 可视, 假)
                .计次循环尾 ()
            .如果结束
            赋值 (.内容, 取文本右边 (数据.玩家昵称, 相减 (取文本长度 (数据.玩家昵称), 倒找文本 (数据.玩家昵称, “,”, , 假))))
            .如果 (等于 (取文本右边 (数据.举手, 1), “0”))
                赋值 (.可视, 假)
            .否则
                赋值 (.左边, 96)
                赋值 (.顶边, 176)
                赋值 (.正常图片, #准备)
                播放音乐 (相加 (程序目录, “\res\开始.wav”), )
                赋值 (.可视, 真)
                .计次循环首 (20, i)
                    赋值 (牌图片框3 [i], 可视, 假)
                .计次循环尾 ()
            .如果结束
            
        .否则
            .如果 (等于 (玩家序号, 2)) ' ------------------------------------------
                .如果 (等于 (取文本中间 (数据.举手, 7, 1), “0”))
                    赋值 (.可视, 假)
                    赋值 (.可视, 真)
                .否则
                    赋值 (.可视, 假)
                    赋值 (.可视, 假)
                    赋值 (.左边, 320)
                    赋值 (.顶边, 390)
                    赋值 (.正常图片, #准备)
                    播放音乐 (相加 (程序目录, “\res\开始.wav”), )
                    赋值 (.可视, 真)
                .如果结束
                
                .如果 (等于 (取文本右边 (数据.举手, 1), “0”))
                    赋值 (.可视, 假)
                .否则
                    赋值 (.左边, 512)
                    赋值 (.顶边, 176)
                    赋值 (.正常图片, #准备)
                    播放音乐 (相加 (程序目录, “\res\开始.wav”), )
                    赋值 (.可视, 真)
                    .计次循环首 (20, i)
                        赋值 (牌图片框2 [i], 可视, 假)
                    .计次循环尾 ()
                .如果结束
                
                .如果 (等于 (取文本中间 (数据.举手, 5, 1), “0”))
                    赋值 (.可视, 假)
                .否则
                    赋值 (.左边, 96)
                    赋值 (.顶边, 176)
                    赋值 (.正常图片, #准备)
                    播放音乐 (相加 (程序目录, “\res\开始.wav”), )
                    赋值 (.可视, 真)
                    .计次循环首 (20, i)
                        赋值 (牌图片框3 [i], 可视, 假)
                    .计次循环尾 ()
                .如果结束
                赋值 (.内容, 取文本右边 (数据.玩家昵称, 相减 (取文本长度 (数据.玩家昵称), 倒找文本 (数据.玩家昵称, “,”, , 假))))
                赋值 (.内容, 取文本中间 (数据.玩家昵称, 5, 相减 (寻找文本 (数据.玩家昵称, “,”, , 假), 5)))
            .否则
                 ' 玩家序号=3-------------------------------------------------------
                .如果 (等于 (取文本右边 (数据.举手, 1), “0”))
                    赋值 (.可视, 假)
                    赋值 (.可视, 真)
                .否则
                    赋值 (.可视, 假)
                    赋值 (.左边, 320)
                    赋值 (.顶边, 390)
                    赋值 (.正常图片, #准备)
                    播放音乐 (相加 (程序目录, “\res\开始.wav”), )
                    赋值 (.可视, 真)
                .如果结束
                
                .如果 (等于 (取文本左边 (数据.举手, 5), “&HA=0”))
                    赋值 (.可视, 假)
                .否则
                    赋值 (.左边, 512)
                    赋值 (.顶边, 176)
                    赋值 (.正常图片, #准备)
                    播放音乐 (相加 (程序目录, “\res\开始.wav”), )
                    赋值 (.可视, 真)
                    .计次循环首 (20, i)
                        赋值 (牌图片框2 [i], 可视, 假)
                    .计次循环尾 ()
                .如果结束
                
                .如果 (等于 (取文本中间 (数据.举手, 7, 1), “0”))
                    赋值 (.可视, 假)
                .否则
                    赋值 (.左边, 96)
                    赋值 (.顶边, 176)
                    赋值 (.正常图片, #准备)
                    播放音乐 (相加 (程序目录, “\res\开始.wav”), )
                    赋值 (.可视, 真)
                    .计次循环首 (20, i)
                        赋值 (牌图片框3 [i], 可视, 假)
                    .计次循环尾 ()
                .如果结束
                赋值 (.内容, 取文本中间 (数据.玩家昵称, 5, 相减 (寻找文本 (数据.玩家昵称, “,”, , 假), 5)))
                 ' 昵称透明标签3.标题 ＝ 取文本右边 (数据.玩家昵称, 取文本长度 (数据.玩家昵称) － 倒找文本 (数据.玩家昵称, “,”, , 假))
                赋值 (.内容, 取文本中间 (数据.玩家昵称, 相加 (寻找文本 (数据.玩家昵称, “,”, , 假), 1), 相减 (倒找文本 (数据.玩家昵称, “,”, , 假), 寻找文本 (数据.玩家昵称, “,”, , 假), 1)))
            .如果结束
            
        .如果结束
        连续赋值 (真, .可视, .可视, .可视, .可视)
        
    .如果结束
    
.如果结束


.子程序 填分数框, 空白型, , 
.参数 数据, 服务器数据1, , 

.局部变量 变量1, 文本型, , "0", 
.局部变量 名字变量, 文本型, , "0", 
.局部变量 得分变量, 文本型, , "0", 
.局部变量 i, 整数型, , , 
.局部变量 j, 整数型, , , 
.局部变量 不等次数, 整数型, , , 
.局部变量 横向位置, 整数型, , , 

分数框初始化 ()
赋值 (变量1, 分割文本 (数据.玩家昵称, “=”, ))
赋值 (名字变量, 分割文本 (变量1 [2], “,”, ))
赋值 (变量1, 分割文本 (数据.玩家得分, “=”, ))
赋值 (得分变量, 分割文本 (变量1 [2], “,”, ))
.计次循环首 (取数组成员数 (名字变量), i)
    5.置写出位置 (相加 (相乘 (i, 20), 5))
    名字变量.写文本行 ( [i])
.计次循环尾 ()
.计次循环首 (取数组成员数 (名字变量), i)
    80.置写出位置 (相加 (相乘 (i, 20), 5))
    得分变量.写文本行 ( [i])
.计次循环尾 ()
.计次循环首 (取数组成员数 (名字变量), i)
    140.置写出位置 (相加 (相乘 (i, 20), 5))
    得分变量.写文本行 ( [相加 (取数组成员数 (名字变量), i)])
.计次循环尾 ()
赋值 (.正常图片, .取图片 ())

.子程序 转换成服务器数据, 空白型, , 
.参数 数据, 服务器数据1, , 
.参数 文本变量, 文本型, , 

.局部变量 变量1, 文本型, , "0", 

调试窗口.加入文本 (., 相加 (“收到：”, 文本变量, #换行符))
赋值 (变量1, 分割文本 (文本变量, “&”, ))
.如果真 (小于 (取数组成员数 (变量1), 14))
    信息框 (“服务器的数据有错！！！！”, #警告图标, “严重错误”)
    返回 ()
.如果真结束
赋值 (数据.类型, 相加 (“&”, 变量1 [2]))
赋值 (数据.玩家数, 相加 (“&”, 变量1 [3]))
赋值 (数据.玩家昵称, 相加 (“&”, 变量1 [4]))
赋值 (数据.举手, 相加 (“&”, 变量1 [5]))
赋值 (数据.地主, 相加 (“&”, 变量1 [6]))
赋值 (数据.地主分数, 相加 (“&”, 变量1 [7]))
赋值 (数据.底牌, 相加 (“&”, 变量1 [8]))
赋值 (数据.玩家牌的张数, 相加 (“&”, 变量1 [9]))
赋值 (数据.玩家的牌, 相加 (“&”, 变量1 [10]))
赋值 (数据.动作, 相加 (“&”, 变量1 [11]))
赋值 (数据.玩家得分, 相加 (“&”, 变量1 [12]))
赋值 (数据.倍数, 相加 (“&”, 变量1 [13]))
赋值 (数据.发言, 相加 (“&”, 变量1 [14]))


.子程序 _退出_被选择, 空白型, , 
结束 ()


.子程序 _调试按钮_被单击, 空白型, , 
.局部变量 i, 整数型, , , 
.局部变量 变量, 整数型, , , 
.局部变量 变量1, 逻辑型, , , 

 ' 气球提示框1.手柄方位 ＝ 11  ' 下右
 ' 气球提示框1.弹出提示框 (_启动窗口.左边 ＋ 592, _启动窗口.顶边 ＋ 160, “111111111111”, -1, )
赋值 (.正常图片, .取图片 ())

.子程序 _断开_被选择, 空白型, , 
断开连接 ()
初始化 ()
赋值 (.禁止, 假)

.子程序 _发言超级按钮_被单击, 空白型, , 
.局部变量 客户数据, 客户数据1, , , 

.如果 (等于 (.内容, “”))
    0.置文本 (“不能发送空信息！”)
    获取焦点 ()
.否则
    初始化客户数据 (客户数据)
    赋值 (客户数据.类型, “&NO=5”)
    赋值 (客户数据.发言, 相加 (“&MS=”, .内容))
    .如果真 (等于 (转换成要发送的数据 (客户数据).发送数据 (), 真))
        赋值 (.内容, “”)
    .如果真结束
    获取焦点 ()
.如果结束


.子程序 _一分超级按钮_被单击, 空白型, , 
.局部变量 数据, 客户数据1, , , 

初始化客户数据 (数据)
赋值 (数据.类型, “&NO=2”)
赋值 (数据.地主, “&DI=1”)
赋值 (数据.地主分数, 相加 (“&NU=”, 到文本 (1)))
转换成要发送的数据 (数据).发送数据 ()

.子程序 _二分超级按钮_被单击, 空白型, , 
.局部变量 数据, 客户数据1, , , 

初始化客户数据 (数据)
赋值 (数据.类型, “&NO=2”)
赋值 (数据.地主, “&DI=1”)
赋值 (数据.地主分数, 相加 (“&NU=”, 到文本 (2)))
转换成要发送的数据 (数据).发送数据 ()


.子程序 _三分超级按钮_被单击, 空白型, , 
.局部变量 数据, 客户数据1, , , 

初始化客户数据 (数据)
赋值 (数据.类型, “&NO=2”)
赋值 (数据.地主, “&DI=1”)
赋值 (数据.地主分数, 相加 (“&NU=”, 到文本 (3)))
转换成要发送的数据 (数据).发送数据 ()

.子程序 _不叫超级按钮_被单击, 空白型, , 
.局部变量 数据, 客户数据1, , , 

初始化客户数据 (数据)
赋值 (数据.类型, “&NO=2”)
赋值 (数据.地主, “&DI=0”)
赋值 (数据.地主分数, 相加 (“&NU=”, 到文本 (3)))
转换成要发送的数据 (数据).发送数据 ()


.子程序 _图片框1_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 事件组件, 图片框, , , 

赋值 (事件组件, 取事件组件 ())
.如果真 (小于 (事件组件.顶边, 356))
    返回 ()
.如果真结束
.判断开始 (等于 (事件组件.标记, “1”))
    .如果 (不等于 (事件组件.顶边, 376))
        赋值 (事件组件.顶边, 376)
    .否则
        赋值 (事件组件.顶边, 356)
    .如果结束
    
.判断 (等于 (事件组件.标记, “2”))
    .如果 (不等于 (事件组件.顶边, 376))
        赋值 (事件组件.顶边, 376)
    .否则
        赋值 (事件组件.顶边, 356)
    .如果结束
    
.判断 (等于 (事件组件.标记, “3”))
    .如果 (不等于 (事件组件.顶边, 376))
        赋值 (事件组件.顶边, 376)
    .否则
        赋值 (事件组件.顶边, 356)
    .如果结束
    
.判断 (等于 (事件组件.标记, “4”))
    .如果 (不等于 (事件组件.顶边, 376))
        赋值 (事件组件.顶边, 376)
    .否则
        赋值 (事件组件.顶边, 356)
    .如果结束
    
.判断 (等于 (事件组件.标记, “5”))
    .如果 (不等于 (事件组件.顶边, 376))
        赋值 (事件组件.顶边, 376)
    .否则
        赋值 (事件组件.顶边, 356)
    .如果结束
    
.判断 (等于 (事件组件.标记, “6”))
    .如果 (不等于 (事件组件.顶边, 376))
        赋值 (事件组件.顶边, 376)
    .否则
        赋值 (事件组件.顶边, 356)
    .如果结束
    
.判断 (等于 (事件组件.标记, “7”))
    .如果 (不等于 (事件组件.顶边, 376))
        赋值 (事件组件.顶边, 376)
    .否则
        赋值 (事件组件.顶边, 356)
    .如果结束
    
.判断 (等于 (事件组件.标记, “8”))
    .如果 (不等于 (事件组件.顶边, 376))
        赋值 (事件组件.顶边, 376)
    .否则
        赋值 (事件组件.顶边, 356)
    .如果结束
    
.判断 (等于 (事件组件.标记, “9”))
    .如果 (不等于 (事件组件.顶边, 376))
        赋值 (事件组件.顶边, 376)
    .否则
        赋值 (事件组件.顶边, 356)
    .如果结束
    
.判断 (等于 (事件组件.标记, “10”))
    .如果 (不等于 (事件组件.顶边, 376))
        赋值 (事件组件.顶边, 376)
    .否则
        赋值 (事件组件.顶边, 356)
    .如果结束
    
.判断 (等于 (事件组件.标记, “11”))
    .如果 (不等于 (事件组件.顶边, 376))
        赋值 (事件组件.顶边, 376)
    .否则
        赋值 (事件组件.顶边, 356)
    .如果结束
    
.判断 (等于 (事件组件.标记, “12”))
    .如果 (不等于 (事件组件.顶边, 376))
        赋值 (事件组件.顶边, 376)
    .否则
        赋值 (事件组件.顶边, 356)
    .如果结束
    
.判断 (等于 (事件组件.标记, “13”))
    .如果 (不等于 (事件组件.顶边, 376))
        赋值 (事件组件.顶边, 376)
    .否则
        赋值 (事件组件.顶边, 356)
    .如果结束
    
.判断 (等于 (事件组件.标记, “14”))
    .如果 (不等于 (事件组件.顶边, 376))
        赋值 (事件组件.顶边, 376)
    .否则
        赋值 (事件组件.顶边, 356)
    .如果结束
    
.判断 (等于 (事件组件.标记, “15”))
    .如果 (不等于 (事件组件.顶边, 376))
        赋值 (事件组件.顶边, 376)
    .否则
        赋值 (事件组件.顶边, 356)
    .如果结束
    
.判断 (等于 (事件组件.标记, “16”))
    .如果 (不等于 (事件组件.顶边, 376))
        赋值 (事件组件.顶边, 376)
    .否则
        赋值 (事件组件.顶边, 356)
    .如果结束
    
.判断 (等于 (事件组件.标记, “17”))
    .如果 (不等于 (事件组件.顶边, 376))
        赋值 (事件组件.顶边, 376)
    .否则
        赋值 (事件组件.顶边, 356)
    .如果结束
    
.判断 (等于 (事件组件.标记, “18”))
    .如果 (不等于 (事件组件.顶边, 376))
        赋值 (事件组件.顶边, 376)
    .否则
        赋值 (事件组件.顶边, 356)
    .如果结束
    
.判断 (等于 (事件组件.标记, “19”))
    .如果 (不等于 (事件组件.顶边, 376))
        赋值 (事件组件.顶边, 376)
    .否则
        赋值 (事件组件.顶边, 356)
    .如果结束
    
.判断 (等于 (事件组件.标记, “20”))
    .如果 (不等于 (事件组件.顶边, 376))
        赋值 (事件组件.顶边, 376)
    .否则
        赋值 (事件组件.顶边, 356)
    .如果结束
    
.默认
    
.判断结束


.子程序 _出牌超级按钮_被单击, 空白型, , 
.局部变量 客户数据, 客户数据1, , , 
.局部变量 i, 整数型, , , 
.局部变量 要出的牌, 整数型, , "0", 

初始化客户数据 (客户数据)
赋值 (客户数据.类型, “&NO=3”)

.计次循环首 (20, i)
    .如果真 (等于 (牌图片框1 [i], 顶边, 356))
        加入成员 (要出的牌, 牌代码 [i])
    .如果真结束
    
.计次循环尾 ()
.如果 (等于 (取数组成员数 (要出的牌), 0))
    0.置文本 (“没有选择要出的牌！”)
    返回 ()
.否则
    赋值 (客户数据.出的牌, 相加 (“&PA=”, 到文本 (要出的牌 [1])))
    .计次循环首 (相减 (取数组成员数 (要出的牌), 1), i)
        赋值 (客户数据.出的牌, 相加 (客户数据.出的牌, “,”, 到文本 (要出的牌 [相加 (i, 1)])))
    .计次循环尾 ()
.如果结束

转换成要发送的数据 (客户数据).发送数据 ()


.子程序 _按钮1_被单击, 空白型, , 


.子程序 _不出超级按钮_被单击, 空白型, , 
.局部变量 客户数据, 客户数据1, , , 
.局部变量 i, 整数型, , , 

初始化客户数据 (客户数据)
赋值 (客户数据.类型, “&NO=4”)
转换成要发送的数据 (客户数据).发送数据 ()
.计次循环首 (20, i)
    .如果真 (并且 (等于 (牌图片框1 [i], 顶边, 356), 等于 (牌图片框1 [i], 可视, 真)))
        赋值 (牌图片框1 [i], 顶边, 376)
    .如果真结束
    
.计次循环尾 ()

.子程序 判断牌, 整数型, , 
.参数 匿名参数_1044, 整数型, 数组, 

.局部变量 将要出的牌的张数, 整数型, , , 
.局部变量 我现在牌的张数, 整数型, , , 
.局部变量 i, 整数型, , , 
.局部变量 变量, 整数型, , , 
.局部变量 临时数组, 整数型, , "20,2", 
.局部变量 j, 整数型, , , 
.局部变量 我, 文本型, , , 
.局部变量 变量1, 整数型, , , 
.局部变量 数字出现的次数, 整数型, , , 
.局部变量 新数组的第一维, 整数型, , , 临时数组的维数
.局部变量 返回的变量, 整数型, , , 
.局部变量 新数组, 整数型, , "0", 判断数字出现的次数

 ' 1,单张。2，对子。3，三张。4，炸弹。5，单顺。31，三带一。42，四带二。334455，双顺
 ' 333444,三顺。33344，三带对。33344401，飞机还单张。33344402，飞机带对。33344400，大三顺。44，四带对
 ' 我现在牌的张数 ＝ 取数组成员数 (牌的代码)
 ' 计次循环首 (我现在牌的张数, i)
 ' 如果真 (牌图片框 [i].顶边 ＝ 0)
 ' 加入成员 (将要出的牌, 牌的代码 [i])

赋值 (将要出的牌的张数, 取数组成员数 (匿名参数_1044))
 ' 输出调试文本 (“我现在牌的张数是:” ＋ 到文本 (将要出的牌的张数))
.如果真 (等于 (将要出的牌的张数, 0))
    返回 (0) ' ------------------------------------------- “你没有选择要出的牌！”
.如果真结束
数组排序子程序 (匿名参数_1044)

赋值 (临时数组 [1] [1], 到数值 (取文本右边 (到文本 (匿名参数_1044 [1]), 2)))
赋值 (临时数组 [1] [2], 1)
赋值 (变量1, 1)
.计次循环首 (相减 (将要出的牌的张数, 1), i)
    .如果 (等于 (临时数组 [变量1] [1], 到数值 (取文本右边 (到文本 (匿名参数_1044 [相加 (i, 1)]), 2))))
        赋值 (临时数组 [变量1] [2], 相加 (临时数组 [变量1] [2], 1))
    .否则
        赋值 (变量1, 相加 (变量1, 1))
        赋值 (临时数组 [变量1] [1], 到数值 (取文本右边 (到文本 (匿名参数_1044 [相加 (i, 1)]), 2)))
        赋值 (临时数组 [变量1] [2], 相加 (临时数组 [变量1] [2], 1))
    .如果结束
    
.计次循环尾 ()


 ' 对 临时数组 进行分析
.计次循环首 (20, i)
    .如果真 (等于 (临时数组 [i] [1], 0))
        赋值 (新数组的第一维, 相减 (i, 1))
        跳出循环 ()
    .如果真结束
    
.计次循环尾 ()
重定义数组 (临时数组, 真, 新数组的第一维, 2)

.计次循环首 (取数组下标 (临时数组, 1), i)
    加入成员 (新数组, 临时数组 [i] [2])
.计次循环尾 ()
数组排序 (新数组, ) ' 把数组从小到在排列，最后哪个数就是最大数，相同的数字出现的最多次数
赋值 (数字出现的次数, 新数组 [取数组下标 (新数组, )])
 ' 输出调试文本 (“数字出现的次数最多是: ” ＋ 到文本 (数字出现的次数))
.判断开始 (等于 (数字出现的次数, 1))
    .如果 (等于 (新数组的第一维, 1)) ' 单牌-1
        赋值 (返回的变量, 1)
    .否则
        .如果 (等于 (新数组的第一维, 2)) ' 炸弹-4
            .如果 (并且 (等于 (临时数组 [1] [1], 16), 等于 (临时数组 [2] [1], 17)))
                赋值 (返回的变量, 4)
            .否则
                赋值 (返回的变量, 0)
            .如果结束
            
        .否则
            .如果 (大于或等于 (新数组的第一维, 5)) ' 顺子-5
                赋值 (返回的变量, 5)
                .计次循环首 (取数组下标 (临时数组, 1), i)
                    .如果真 (大于 (相加 (i, 1), 取数组下标 (临时数组, 1)))
                        跳出循环 ()
                    .如果真结束
                    .如果真 (或者 (不等于 (相加 (临时数组 [i] [1], 1), 临时数组 [相加 (i, 1)] [1]), 大于 (临时数组 [相加 (i, 1)] [1], 14))) ' 不包括2和王
                        赋值 (返回的变量, 0)
                    .如果真结束
                    
                .计次循环尾 ()
            .否则
                
            .如果结束
            
        .如果结束
        
    .如果结束
    
.判断 (等于 (数字出现的次数, 2))
    .如果 (等于 (新数组的第一维, 1)) ' 对子-2
        赋值 (返回的变量, 2)
    .否则
        .如果 (大于 (新数组的第一维, 2)) ' 双顺 -334455
            赋值 (返回的变量, 334455)
            .计次循环首 (取数组下标 (临时数组, 1), i)
                .如果真 (大于 (相加 (i, 1), 取数组下标 (临时数组, 1)))
                    跳出循环 ()
                .如果真结束
                .如果真 (或者 (不等于 (相加 (临时数组 [i] [1], 1), 临时数组 [相加 (i, 1)] [1]), 大于 (临时数组 [相加 (i, 1)] [1], 14))) ' 不包括2和王
                    赋值 (返回的变量, 0)
                .如果真结束
                
            .计次循环尾 ()
            .计次循环首 (取数组成员数 (新数组), i) ' 如果有的牌的张数不等2，就不是双顺
                .如果真 (不等于 (新数组 [i], 2))
                    赋值 (返回的变量, 0)
                .如果真结束
                
            .计次循环尾 ()
        .否则
            
        .如果结束
        
    .如果结束
    
.判断 (等于 (数字出现的次数, 3))
    .如果 (等于 (新数组的第一维, 1)) ' 单3张 3
        赋值 (返回的变量, 3)
    .否则
        .如果 (等于 (新数组的第一维, 2))
            .如果 (等于 (取绝对值 (相减 (新数组 [1], 新数组 [2])), 2)) ' 三带一 31
                赋值 (返回的变量, 31)
            .否则
                .如果 (等于 (取绝对值 (相减 (新数组 [1], 新数组 [2])), 1)) ' 三带对 33344
                    赋值 (返回的变量, 33344)
                .否则
                    .如果 (等于 (取绝对值 (相减 (新数组 [1], 新数组 [2])), 0)) ' 三顺 333444
                        赋值 (返回的变量, 333444)
                    .否则
                        
                    .如果结束
                    
                .如果结束
                
            .如果结束
            
        .否则
            .如果 (并且 (大于 (新数组的第一维, 2), 等于 (求余数 (新数组的第一维, 2), 0)))
                
                .如果 (等于 (取绝对值 (相减 (新数组 [1], 新数组 [取数组成员数 (新数组)])), 2)) ' 33344401  大三带一
                    赋值 (返回的变量, 33344401)
                    .计次循环首 (相除 (取数组成员数 (新数组), 2), i)
                        .如果真 (等于 (取绝对值 (相减 (新数组 [i], 新数组 [相加 (相减 (取数组成员数 (新数组), i), 1)])), 1))
                            赋值 (返回的变量, 0)
                        .如果真结束
                        
                    .计次循环尾 ()
                .否则
                    .如果 (等于 (取绝对值 (相减 (新数组 [1], 新数组 [取数组成员数 (新数组)])), 1)) ' 33344402
                        赋值 (返回的变量, 33344402)
                        .计次循环首 (相除 (取数组成员数 (新数组), 2), i)
                            .如果真 (等于 (取绝对值 (相减 (新数组 [i], 新数组 [相加 (相减 (取数组成员数 (新数组), i), 1)])), 0))
                                赋值 (返回的变量, 0)
                            .如果真结束
                            
                        .计次循环尾 ()
                    .否则
                        .如果 (等于 (取绝对值 (相减 (新数组 [1], 新数组 [取数组成员数 (新数组)])), 0)) ' 33344400 大三顺
                            赋值 (返回的变量, 33344400)
                        .否则
                            
                        .如果结束
                        
                    .如果结束
                    
                .如果结束
                
            .否则
                .如果 (并且 (大于 (新数组的第一维, 2), 等于 (求余数 (新数组的第一维, 2), 1)))
                    .如果 (等于 (取绝对值 (相减 (新数组 [1], 新数组 [取数组成员数 (新数组)])), 0)) ' 33344400 大三顺
                        赋值 (返回的变量, 33344400)
                    .否则
                        
                    .如果结束
                    
                .否则
                    
                .如果结束
                
            .如果结束
            
        .如果结束
        
    .如果结束
    
.判断 (等于 (数字出现的次数, 4))
    .如果 (等于 (新数组的第一维, 1)) ' 炸弹
        赋值 (返回的变量, 4)
    .否则
        .如果 (等于 (新数组的第一维, 3))
            .如果 (并且 (等于 (取绝对值 (相减 (新数组 [1], 新数组 [2])), 0), 等于 (新数组 [1], 1))) ' 四带二
                赋值 (返回的变量, 42)
            .否则
                .如果 (并且 (等于 (取绝对值 (相减 (新数组 [1], 新数组 [2])), 0), 等于 (新数组 [1], 2))) ' 四带对
                    赋值 (返回的变量, 44) ' 如：4444＋55＋77。
                .否则
                    赋值 (返回的变量, 0)
                .如果结束
                
            .如果结束
            
        .否则
            
        .如果结束
        
    .如果结束
    
.默认
    
.判断结束
返回 (返回的变量)

.子程序 数组排序子程序, 空白型, , 
.参数 牌参数, 整数型, 数组, 

.局部变量 i, 整数型, , , 
.局部变量 j, 整数型, , , 
.局部变量 临时变量, 整数型, , , 

.计次循环首 (取数组成员数 (牌参数), i)
    .计次循环首 (相减 (取数组成员数 (牌参数), i), j)
        .如果 (大于 (到数值 (取文本右边 (到文本 (牌参数 [j]), 2)), 到数值 (取文本右边 (到文本 (牌参数 [相加 (j, 1)]), 2))))
            赋值 (临时变量, 牌参数 [j])
            赋值 (牌参数 [j], 牌参数 [相加 (j, 1)])
            赋值 (牌参数 [相加 (j, 1)], 临时变量)
        .否则
            .如果 (等于 (到数值 (取文本右边 (到文本 (牌参数 [j]), 2)), 到数值 (取文本右边 (到文本 (牌参数 [相加 (j, 1)]), 2))))
                .如果真 (大于 (到数值 (取文本左边 (到文本 (牌参数 [j]), 1)), 到数值 (取文本左边 (到文本 (牌参数 [相加 (j, 1)]), 1))))
                    赋值 (临时变量, 牌参数 [j])
                    赋值 (牌参数 [j], 牌参数 [相加 (j, 1)])
                    赋值 (牌参数 [相加 (j, 1)], 临时变量)
                    
                .如果真结束
                
            .否则
                
            .如果结束
            
        .如果结束
        
    .计次循环尾 ()
.计次循环尾 ()

.子程序 _时间时钟_周期事件, 空白型, , 
.局部变量 i, 整数型, , , 
.局部变量 数据, 客户数据1, , , 

赋值 (时间, 相减 (时间, 1))
赋值 (.内容, 到文本 (时间))
.如果真 (小于 (时间, 10))
    .如果 (等于 (., 真))
        播放音乐 (相加 (程序目录, “\res\clock.wav”), )
        .如果真 (小于或等于 (时间, 0))
            赋值 (.时钟周期, 0)
            _不叫超级按钮_被单击 ()
        .如果真结束
        
    .否则
        .如果 (等于 (., 真))
            播放音乐 (相加 (程序目录, “\res\clock.wav”), )
            .如果真 (等于 (时间, 0))
                赋值 (.时钟周期, 0)
                .如果 (等于 (., 假)) ' 如果可以不出，则不出; 如果必须出，则出小牌
                    _不出超级按钮_被单击 ()
                .否则
                     ' 出小牌
                    .计次循环首 (20, i)
                        .如果真 (并且 (等于 (牌图片框1 [i], 可视, 真), 大于 (牌图片框1 [i], 顶边, 271)))
                            赋值 (牌图片框1 [i], 顶边, 356)
                            初始化客户数据 (数据)
                            赋值 (数据.类型, “&NO=3”)
                            赋值 (数据.出的牌, 相加 (“&PA=”, 到文本 (牌代码 [i])))
                            转换成要发送的数据 (数据).发送数据 ()
                            返回 ()
                        .如果真结束
                        
                    .计次循环尾 ()
                .如果结束
                
            .如果真结束
            
        .否则
            .如果 (小于或等于 (时间, 0))
                赋值 (.时钟周期, 0)
            .否则
                
            .如果结束
            
        .如果结束
        
    .如果结束
    
.如果真结束


.子程序 _组合框1_列表项被选择, 空白型, , 
_发言超级按钮_被单击 ()


.子程序 _图形按钮4_鼠标位置被移动, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果 (或者 (并且 (大于 (横向位置, 0), 小于 (横向位置, 44), 大于 (纵向位置, 0), 小于 (纵向位置, 80)), 并且 (大于 (横向位置, 44), 小于 (横向位置, 120), 大于 (纵向位置, 0), 小于 (纵向位置, 100)), 并且 (大于 (横向位置, 120), 小于 (横向位置, 170), 大于 (纵向位置, 0), 小于 (纵向位置, 80))))
    赋值 (.时钟周期, 10)
    赋值 (.时钟周期, 0)
.否则
    赋值 (.时钟周期, 0)
    赋值 (.时钟周期, 10)
.如果结束


.子程序 _隐藏时钟_周期事件, 空白型, , 
赋值 (.顶边, 相减 (.顶边, 1))
.如果 (小于 (.顶边, -80))
    赋值 (.时钟周期, 0)
.否则
    
.如果结束


.子程序 _时钟2_周期事件, 空白型, , 

.如果 (大于 (.顶边, 0))
    赋值 (.时钟周期, 0)
    返回 ()
.否则
    赋值 (.顶边, 相加 (.顶边, 1))
.如果结束


.子程序 _隐藏聊天室_被选择, 空白型, , 
赋值 (.时钟周期, 10)

.子程序 _时钟3_周期事件, 空白型, , 用于隐藏聊天室
赋值 (.左边, 相加 (.左边, 1))
.如果真 (大于 (.左边, 780))
    赋值 (.正常图片, #聊天室出1)
    赋值 (.点燃图片, #聊天室出2)
    赋值 (聊天室状态, 假)
    赋值 (.时钟周期, 0)
.如果真结束


.子程序 _显示聊天室_被选择, 空白型, , 
赋值 (.时钟周期, 0)
赋值 (.左边, 576)
赋值 (.正常图片, #聊天室进1)
赋值 (.点燃图片, #聊天室进2)
赋值 (聊天室状态, 真)

.子程序 _时钟4_周期事件, 空白型, , 
赋值 (.左边, 相减 (.左边, 1))
.如果真 (小于或等于 (.左边, 576))
    赋值 (.正常图片, #聊天室进1)
    赋值 (.点燃图片, #聊天室进2)
    赋值 (聊天室状态, 真)
    赋值 (.时钟周期, 0)
.如果真结束


.子程序 _组合框1_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

_显示聊天室_被选择 ()


.子程序 _编辑框1_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

_显示聊天室_被选择 ()


.子程序 _外形框1_鼠标左键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

_显示聊天室_被选择 ()


.子程序 _图形按钮5_被单击, 空白型, , 
.如果 (等于 (聊天室状态, 真))
    _隐藏聊天室_被选择 ()
.否则
    _显示聊天室_被选择 ()
.如果结束


.子程序 _发言图形按钮6_被单击, 空白型, , 
.局部变量 客户数据, 客户数据1, , , 

.如果 (等于 (.内容, “”))
    0.置文本 (“不能发送空信息！”)
    获取焦点 ()
.否则
    初始化客户数据 (客户数据)
    赋值 (客户数据.类型, “&NO=5”)
    赋值 (客户数据.发言, 相加 (“&MS=”, .内容))
    .如果真 (等于 (转换成要发送的数据 (客户数据).发送数据 (), 真))
        赋值 (.内容, “”)
    .如果真结束
    获取焦点 ()
    
.如果结束


.子程序 _组合框1_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (等于 (键代码, #回车键))
    _发言图形按钮6_被单击 ()
    返回 (假)
.如果真结束


.子程序 _设置_被选择, 空白型, , 
载入 (设置窗口1, , 真)


.子程序 _关于_被选择, 空白型, , 
信息框 (相加 (“作者：罗军”, #换行符, “QQ：58756565”, #换行符, “2007.1.16于成都”), #信息图标, “关于”)


.窗口程序集 窗口程序集2, , , 

.子程序 _按钮1_被单击, 空白型, , 
赋值 (调试窗口., 假)

.窗口程序集 窗口程序集3, , , 

.子程序 _超级按钮1_被单击, 空白型, , 
销毁 ()


.子程序 _得分消息窗口_创建完毕, 空白型, , 
赋值 (.底图, _启动窗口.取图片 (., , ))

.窗口程序集 窗口程序集4, , , 

.子程序 _按钮1_被单击, 空白型, , 
写配置项 (相加 (取运行目录 (), “\config.ini”), “Setup”, “Name”, 删首尾空 (.内容))
写配置项 (相加 (取运行目录 (), “\config.ini”), “Setup”, “ServerIP”, .)
写配置项 (相加 (取运行目录 (), “\config.ini”), “Setup”, “Port”, .内容)

.子程序 _按钮2_被单击, 空白型, , 
销毁 ()

.子程序 _设置窗口1_创建完毕, 空白型, , 
赋值 (.内容, 读配置项 (相加 (取运行目录 (), “\config.ini”), “Setup”, “Name”, ))
赋值 (., 读配置项 (相加 (取运行目录 (), “\config.ini”), “Setup”, “ServerIP”, ))
赋值 (.内容, 读配置项 (相加 (取运行目录 (), “\config.ini”), “Setup”, “Port”, “19730”))



 ' 不属于任何一个程序集、类模块的函数：
