 ' 文件类型：Windows模块源码

 ' 程序名称：超级列表快速排序
 ' 程序描述：1.改进了表项数值的排序跟踪
2.改进了表项加入空格的的处理
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：2.0
 ' 创建号：0.0





 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 2 系统核心支持库
 ' iext 27bb20fdd3e145e4bee3db39ddd6e64c 1 1 扩展界面支持库一





.程序集 程序集1, , , 

.子程序 _启动子程序, 整数型, , 请在本子程序中放置易模块初始化代码

_临时子程序 () ' 在初始化代码执行完毕后调用测试代码
返回 (0) ' 可以根据您的需要返回任意数值

.子程序 _临时子程序, 空白型, , 
 ' 本名称子程序用作测试程序用，仅在开发及调试环境中有效，编译发布程序前将被系统自动清空，请将所有用作测试的临时代码放在本子程序中。 ***注意不要修改本子程序的名称、参数及返回值类型。

.子程序 模块_超级列表框排序, 整数型, , 返回排序时间,选中后排序还选中，必须项目数值不为0 没有默认为1
.参数 对象, 超级列表框, , 
.参数 列索引, 整数型, , 索引值从 0 开始。
.参数 类型, 整数型, 可空, 0=数值;1=文本;2=日期时间;3=逻辑
.参数 区分大小写, 逻辑型, 可空, 真为区分,默认为真
.参数 排序方式, 逻辑型, 可空, 真为小到大,默认为真

.局部变量 排序时间, 整数型, , , 
.局部变量 排序变量, 文本型, , "0", 
.局部变量 序号数组, 整数型, , "0", 
.局部变量 表项数值, 整数型, , "0", 
.局部变量 变量, 整数型, , , 
.局部变量 数据, 文本型, , , 
.局部变量 列数, 整数型, , , 
.局部变量 行数, 整数型, , , 
.局部变量 单元数, 整数型, , , 
.局部变量 选中项, 整数型, , , 

赋值 (排序时间, 取启动时间 ())
赋值 (类型, 选择 (并且 (大于或等于 (类型, 0), 小于或等于 (类型, 3)), 类型, 1))
赋值 (区分大小写, 选择 (是否为空 (区分大小写), 真, 区分大小写))
赋值 (排序方式, 选择 (是否为空 (排序方式), 真, 排序方式))
.如果真 (不等于 (对象., -1))
    .如果真 (等于 (对象.取表项数值 (对象.), 0))
        对象.置表项数值 (对象., 1)
    .如果真结束
    赋值 (选中项, 对象.取表项数值 (对象.))
.如果真结束

.计次循环首 (对象.取表项数 (), 变量)
    赋值 (数据, 删首尾空 (对象.取标题 (相减 (变量, 1), 列索引)))
    .如果 (不等于 (类型, 3))
        赋值 (单元数, 二分查找 (排序变量, 数据, 类型, 区分大小写))
        插入成员 (排序变量, 单元数, 数据)
        插入成员 (序号数组, 单元数, 相减 (变量, 1))
        插入成员 (表项数值, 单元数, 对象.取表项数值 (相减 (变量, 1)))
    .否则
        插入成员 (序号数组, 选择 (等于 (数据, “假”), 变量, 1), 相减 (变量, 1))
        插入成员 (表项数值, 选择 (等于 (数据, “假”), 变量, 1), 对象.取表项数值 (相减 (变量, 1)))
    .如果结束
    
.计次循环尾 ()
赋值 (列数, 对象.取列数 ())
赋值 (行数, 取数组成员数 (序号数组))
赋值 (单元数, 相乘 (行数, 列数))
重定义数组 (排序变量, 假, 单元数)
.计次循环首 (单元数, 变量)
    赋值 (排序变量 [变量], 对象.取标题 (序号数组 [取绝对值 (相减 (选择 (排序方式, -1, 行数), 整除 (相减 (变量, 1), 列数)))], 求余数 (相减 (变量, 1), 列数)))
.计次循环尾 ()
.计次循环首 (单元数, 变量)
    对象.置标题 (整除 (相减 (变量, 1), 列数), 求余数 (相减 (变量, 1), 列数), 排序变量 [变量])
    对象.置表项数值 (整除 (相减 (变量, 1), 列数), 表项数值 [取绝对值 (相减 (选择 (排序方式, -1, 行数), 整除 (相减 (变量, 1), 列数)))]) ' 本来加个判断的,算啦,为了提高速度,多重复置表项数值几次吧:)
.计次循环尾 ()
.如果真 (不等于 (选中项, 0))
    .计次循环首 (对象.取表项数 (), 变量)
        .如果真 (等于 (对象.取表项数值 (相减 (变量, 1)), 选中项))
            赋值 (对象., 相减 (变量, 1))
            对象.保证显示 (相减 (变量, 1))
            跳出循环 ()
        .如果真结束
        
    .计次循环尾 ()
    
.如果真结束
返回 (相减 (取启动时间 (), 排序时间))

.子程序 二分查找, 整数型, , 
.参数 数组, 文本型, 数组, 
.参数 待查, 文本型, , 
.参数 类型, 整数型, , 
.参数 区分大小写, 逻辑型, , 

.局部变量 数组位置1, 整数型, , , 
.局部变量 数组位置2, 整数型, , , 
.局部变量 数组位置3, 整数型, , , 
.局部变量 数值A, 双精度小数型, , , 
.局部变量 数值B, 双精度小数型, , , 
.局部变量 文本, 文本型, , , 

赋值 (数组位置1, 1)
赋值 (数组位置2, 取数组成员数 (数组))
.如果真 (等于 (数组位置2, 0))
    返回 (1)
.如果真结束
.判断开始 (等于 (类型, 0))
    赋值 (数值A, 到数值 (待查))
    .如果真 (大于或等于 (数值A, 到数值 (数组 [数组位置2])))
        返回 (相加 (数组位置2, 1))
    .如果真结束
    .如果真 (小于或等于 (数值A, 到数值 (数组 [1])))
        返回 (1)
    .如果真结束
    .判断循环首 (小于 (数组位置1, 相减 (数组位置2, 1)))
        赋值 (数组位置3, 整除 (相加 (数组位置1, 数组位置2), 2))
        赋值 (数值B, 到数值 (数组 [数组位置3]))
        .如果真 (等于 (数值A, 数值B))
            赋值 (数组位置1, 数组位置3)
            跳出循环 ()
        .如果真结束
        .如果 (小于 (数值A, 数值B))
            赋值 (数组位置2, 数组位置3)
        .否则
            赋值 (数组位置1, 数组位置3)
        .如果结束
        
    .判断循环尾 ()
.判断 (等于 (类型, 1))
    .如果真 (大于或等于 (文本比较 (待查, 数组 [数组位置2], 区分大小写), 0))
        返回 (相加 (数组位置2, 1))
    .如果真结束
    .如果真 (小于或等于 (文本比较 (待查, 数组 [1], 区分大小写), 0))
        返回 (1)
    .如果真结束
    .判断循环首 (小于 (数组位置1, 相减 (数组位置2, 1)))
        赋值 (数组位置3, 整除 (相加 (数组位置1, 数组位置2), 2))
        .如果真 (等于 (文本比较 (待查, 数组 [数组位置3], 区分大小写), 0))
            赋值 (数组位置1, 数组位置3)
            跳出循环 ()
        .如果真结束
        .如果 (小于 (文本比较 (待查, 数组 [数组位置3], 区分大小写), 0))
            赋值 (数组位置2, 数组位置3)
        .否则
            赋值 (数组位置1, 数组位置3)
        .如果结束
        
    .判断循环尾 ()
    
.判断 (等于 (类型, 2))
    赋值 (数值A, 取字节集数据 (到字节集 (到时间 (待查)), #双精度小数型))
    .如果真 (大于或等于 (数值A, 取字节集数据 (到字节集 (到时间 (数组 [数组位置2])), #双精度小数型)))
        返回 (相加 (数组位置2, 1))
    .如果真结束
    .如果真 (小于或等于 (数值A, 取字节集数据 (到字节集 (到时间 (数组 [1])), #双精度小数型)))
        返回 (1)
    .如果真结束
    .判断循环首 (小于 (数组位置1, 相减 (数组位置2, 1)))
        赋值 (数组位置3, 整除 (相加 (数组位置1, 数组位置2), 2))
        赋值 (数值B, 取字节集数据 (到字节集 (到时间 (数组 [数组位置3])), #双精度小数型))
        .如果真 (等于 (数值A, 数值B))
            赋值 (数组位置1, 数组位置3)
            跳出循环 ()
        .如果真结束
        .如果 (小于 (数值A, 数值B))
            赋值 (数组位置2, 数组位置3)
        .否则
            赋值 (数组位置1, 数组位置3)
        .如果结束
        
    .判断循环尾 ()
.默认
    
.判断结束
返回 (相加 (数组位置1, 1))


 ' 不属于任何一个程序集、类模块的函数：
