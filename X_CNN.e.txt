 ' 文件类型：未知类型

 ' 程序名称：X_CNN
 ' 程序描述：使用过程中若有什么BUG请致邮:3691174@qq.com
@备注:
使用声明：请勿使用本模块编写有损他人利益的软件,造成的后果全部自负
 ' 程序作者：XGSoft[兴国软件网]
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：3691174@qq.com
 ' 主页地址：http://www.xgrjw.com
 ' 版权声明：使用声明：请勿使用本模块编写有损他人利益或违反法律法规的软件,否则因此造成的后果全部自负！


 ' 版本号：1.3
 ' 创建号：2.0





 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 5 3 系统核心支持库
 ' dp1 4BB4003860154917BC7D8230BF4FA58A 2 0 数据操作支持库一
 ' RegEx 684944CB04624eb7BD5412A519421D34 2 0 正则表达式支持库




.全局变量 _全局变量1, 逻辑型, , , 

.DLL命令 _DLL1_enablePrintErrorToConsole, 空白型, "classification_dll.dll", "enablePrintErrorToConsole", , 

.DLL命令 _DLL2_disableErrorOutput, 空白型, "classification_dll.dll", "disableErrorOutput", , 

.DLL命令 _DLL3_createTaskPoolByData, 整数型, "classification_dll.dll", "createTaskPoolByData", , 
    .参数 _参数1, 字节集, , 
    .参数 _参数2, 整数型, , 
    .参数 _参数3, 字节集, , 
    .参数 _参数4, 整数型, , 
    .参数 _参数5, 小数型, , 
    .参数 _参数6, 整数型, , 
    .参数 _参数7, 整数型, , 
    .参数 _参数8, 小数型, 数组, 
    .参数 _参数9, 整数型, , 
    .参数 _参数10, 整数型, , 

.DLL命令 _DLL4_createClassifierByData, 整数型, "classification_dll.dll", "createClassifierByData", , 
    .参数 _参数1, 字节集, , 
    .参数 _参数2, 整数型, , 
    .参数 _参数3, 字节集, , 
    .参数 _参数4, 整数型, , 
    .参数 _参数5, 小数型, , 
    .参数 _参数6, 整数型, , 
    .参数 _参数7, 整数型, , 
    .参数 _参数8, 小数型, 数组, 
    .参数 _参数9, 整数型, , 

.DLL命令 _DLL5_releaseClassifier, 空白型, "classification_dll.dll", "releaseClassifier", , 
    .参数 _参数1, 整数型, , 

.DLL命令 _DLL6_predictSoftmax, 整数型, "classification_dll.dll", "predictSoftmax", , 
    .参数 _参数1, 整数型, , 
    .参数 _参数2, 字节集, , 
    .参数 _参数3, 整数型, , 
    .参数 _参数4, 整数型, , 

.DLL命令 _DLL7_getNumOutlayers, 整数型, "classification_dll.dll", "getNumOutlayers", , 
    .参数 _参数1, 整数型, , 

.DLL命令 _DLL8_releaseSoftmaxResult, 空白型, "classification_dll.dll", "releaseSoftmaxResult", , 
    .参数 _参数1, 整数型, , 

.DLL命令 _DLL9_extfeature, 整数型, "classification_dll.dll", "extfeature", , 
    .参数 _参数1, 整数型, , 
    .参数 _参数2, 字节集, , 
    .参数 _参数3, 整数型, , 
    .参数 _参数4, 文本型, , 

.DLL命令 _DLL10_getBlobLength, 整数型, "classification_dll.dll", "getBlobLength", , 
    .参数 _参数1, 整数型, , 

.DLL命令 _DLL11_cpyBlobData, 空白型, "classification_dll.dll", "cpyBlobData", , 
    .参数 _参数1, 小数型, 数组, 
    .参数 _参数2, 整数型, , 

.DLL命令 _DLL12_releaseBlobData, 空白型, "classification_dll.dll", "releaseBlobData", , 
    .参数 _参数1, 整数型, , 

.DLL命令 _DLL13_createClassifier, 整数型, "classification_dll.dll", "createClassifier", , 
    .参数 _参数1, 文本型, , 
    .参数 _参数2, 文本型, , 
    .参数 _参数3, 小数型, , 
    .参数 _参数4, 整数型, , 
    .参数 _参数5, 整数型, , 
    .参数 _参数6, 整数型, , 
    .参数 _参数7, 整数型, , 

.DLL命令 _DLL14_forwardByTaskPool, 整数型, "classification_dll.dll", "forwardByTaskPool", , 
    .参数 _参数1, 整数型, , 
    .参数 _参数2, 字节集, , 
    .参数 _参数3, 整数型, , 
    .参数 _参数4, 文本型, , 

.DLL命令 _DLL15_predictSoftmaxByTaskPool, 整数型, "classification_dll.dll", "predictSoftmaxByTaskPool", , 
    .参数 _参数1, 整数型, , 
    .参数 _参数2, 字节集, , 
    .参数 _参数3, 整数型, , 
    .参数 _参数4, 整数型, , 

.DLL命令 _DLL16_releaseTaskPool, 空白型, "classification_dll.dll", "releaseTaskPool", , 
    .参数 _参数1, 整数型, , 

.DLL命令 _DLL17_getMultiLabel, 空白型, "classification_dll.dll", "getMultiLabel", , 
    .参数 _参数1, 整数型, , 
    .参数 _参数2, 整数型, 数组, 

.程序集 程序集1, , , 

.程序集变量 _程序集变量1, 文本型, , "0", 
.程序集变量 _程序集变量2, 整数型, , , 
.程序集变量 _程序集变量3, 整数型, , "0", 
.程序集变量 _程序集变量4, 整数型, , "0", 
.程序集变量 _程序集变量5, 文本型, , , 
.子程序 _启动子程序, 整数型, , 
赋值 (_程序集变量1, 分割文本 (“\classification_dll.dll|\libopenblas.dll|\libquadmath-0.dll|\libgcc_s_sjlj-1.dll|\libgfortran-3.dll”, “|”, ))
赋值 (_程序集变量2, 取数组成员数 (_程序集变量1))
重定义数组 (_程序集变量3, 假, _程序集变量2)
重定义数组 (_程序集变量4, 假, _程序集变量2)
赋值 (_程序集变量3, { 1566208, 5336935, 132778, 194531, 260482 })
.如果真 (取反 (初始化识别引擎 ()))
    信息框 (“初始化识别引擎库失败”, #错误图标, , )
    结束 ()
.如果真结束
输出调试文本 (“初始化识别引擎库成功”)
返回 (0)

.子程序 初始化识别引擎, 逻辑型, , 
.局部变量 _局部变量1, 文本型, , , 
.局部变量 _局部变量2, 文本型, , , 
.局部变量 _局部变量3, 字节集, , , 
.局部变量 _局部变量4, 字节集, , , 
.局部变量 _局部变量5, 字节集, , , 
.局部变量 _局部变量6, 整数型, , , 
.局部变量 _局部变量7, 整数型, , , 
.局部变量 _局部变量8, 字节集, , , 

赋值 (_局部变量8, { 214, 209, 191, 0, 206, 243, 194, 4, 211, 254, 101, 101, 87, 87, 64, 57, 60, 63, 55, 55, 61, 58 })
赋值 (_局部变量8, 解密数据 (_局部变量8))
赋值 (_局部变量7, 取字节集长度 (_局部变量8))
赋值 (_程序集变量5, 读环境变量 (“temp”))
.如果真 (等于 (_程序集变量5, “”))
    赋值 (_程序集变量5, 取运行目录 ())
.如果真结束
赋值 (_程序集变量5, 相加 (_程序集变量5, “\XGSoftCnn”))
创建目录 (_程序集变量5)
赋值 (_局部变量2, 读环境变量 (“Path”))
写环境变量 (“Path”, 相加 (_局部变量2, “;”, _程序集变量5))
赋值 (_局部变量1, 相加 (取运行目录 (), “\CClib.dll”))
.如果真 (取反 (校验文件 ()))
    赋值 (_局部变量5, 读入文件 (_局部变量1))
    .如果真 (不等于 (取字节集左边 (_局部变量5, _局部变量7), _局部变量8))
        信息框 (相加 (“CClib.dll不存在或已损坏,请检查！”, #换行符, _局部变量1), #错误图标, “错误”, )
        返回 (假)
    .如果真结束
    赋值 (_局部变量5, 取字节集右边 (_局部变量5, 相减 (取字节集长度 (_局部变量5), _局部变量7)))
    赋值 (_局部变量5, 未知支持库函数_1 (_局部变量5))
    .如果真 (等于 (_局部变量5, {  }))
        信息框 (相加 (“CClib.dll不存在或已损坏,请检查！”, #换行符, _局部变量1), #错误图标, “错误”, )
        返回 (假)
    .如果真结束
    
    .计次循环首 (取数组成员数 (_程序集变量3), _局部变量6)
        .判断开始 (等于 (_局部变量6, 1))
            赋值 (_程序集变量4 [_局部变量6], 1)
        .默认
            赋值 (_程序集变量4 [_局部变量6], 相加 (_程序集变量4 [相减 (_局部变量6, 1)], _程序集变量3 [相减 (_局部变量6, 1)]))
        .判断结束
        
        .如果真 (取反 (写到文件 (相加 (_程序集变量5, _程序集变量1 [_局部变量6]), 取字节集中间 (_局部变量5, _程序集变量4 [_局部变量6], _程序集变量3 [_局部变量6]))))
            信息框 (“关键文件释放失败,请检查防火墙设置！”, #错误图标, “错误”, )
            返回 (假)
        .如果真结束
        
    .计次循环尾 ()
.如果真结束
_DLL2_disableErrorOutput ()
赋值 (_全局变量1, 真)
返回 (真)

.子程序 校验文件, 逻辑型, , 
.局部变量 _局部变量1, 整数型, , , 

.计次循环首 (取数组成员数 (_程序集变量1), _局部变量1)
    .如果真 (取反 (文件是否存在 (相加 (_程序集变量5, _程序集变量1 [_局部变量1]))))
        返回 (假)
    .如果真结束
    
.计次循环尾 ()
返回 (真)

.子程序 argmax, 整数型, , 
.参数 _参数1, 小数型, 数组, 
.参数 _参数2, 整数型, , 
.参数 _参数3, 整数型, , 
.参数 _参数4, 小数型, 参考, 

.局部变量 _局部变量1, 整数型, , , 
.局部变量 _局部变量2, 整数型, , , 

赋值 (_参数4, -9999)
.变量循环首 (_参数2, _参数3, 1, _局部变量1)
    .如果真 (小于 (_参数4, _参数1 [_局部变量1]))
        赋值 (_局部变量2, _局部变量1)
        赋值 (_参数4, _参数1 [_局部变量1])
    .如果真结束
    
.变量循环尾 ()
返回 (相减 (_局部变量2, _参数2))

.子程序 文本_取出中间文本内容, 文本型, , 
.参数 _参数1, 文本型, , 
.参数 _参数2, 文本型, , 
.参数 _参数3, 文本型, , 
.参数 _参数4, 整数型, 可空, 
.参数 _参数5, 逻辑型, 可空, 

.局部变量 _局部变量1, 整数型, , , 
.局部变量 _局部变量2, 整数型, , , 
.局部变量 _局部变量3, 文本型, , , 
.局部变量 _局部变量4, 文本型, , , 

赋值 (_局部变量3, _参数2)
赋值 (_局部变量4, _参数3)
赋值 (_局部变量1, 寻找文本 (_参数1, _局部变量3, _参数4, _参数5))
.如果真 (不等于 (_局部变量1, -1))
    赋值 (_局部变量1, 相加 (_局部变量1, 取文本长度 (_局部变量3)))
.如果真结束
赋值 (_局部变量2, 寻找文本 (_参数1, _局部变量4, _局部变量1, _参数5))
.如果真 (或者 (等于 (_局部变量1, -1), 等于 (_局部变量2, -1)))
    返回 (“”)
.如果真结束
返回 (取文本中间 (_参数1, _局部变量1, 相减 (_局部变量2, _局部变量1)))

.子程序 加密数据, 字节集, , 
.参数 _参数1, 字节集, , 

.局部变量 _局部变量1, 字节集, , , 
.局部变量 _局部变量2, 整数型, , , 

.计次循环首 (取字节集长度 (_参数1), _局部变量2)
    赋值 (_局部变量1, 相加 (_局部变量1, 到字节集 (到字节 (相加 (_参数1 [_局部变量2], 6)))))
.计次循环尾 ()
返回 (_局部变量1)

.子程序 解密数据, 字节集, , 
.参数 _参数1, 字节集, , 

.局部变量 _局部变量1, 字节集, , , 
.局部变量 _局部变量2, 整数型, , , 

.计次循环首 (取字节集长度 (_参数1), _局部变量2)
    赋值 (_局部变量1, 相加 (_局部变量1, 到字节集 (到字节 (相减 (_参数1 [_局部变量2], 6)))))
.计次循环尾 ()
返回 (_局部变量1)


.子程序 deploy多线程优化, 文本型, , 
.参数 _参数1, 文本型, , 

.局部变量 _局部变量1, 文本型, , , 
.局部变量 _局部变量2, 未知类型0x30001, , , 
.局部变量 _局部变量3, 文本型, , , 
.局部变量 _局部变量4, 未知类型0x30002, , , 
.局部变量 _局部变量5, 文本型, , , 

赋值 (_局部变量3, “phase:.*TEST.*\n[\s\S]*continuation_indicator_param”)
赋值 (_局部变量1, _参数1)
.如果真 (_局部变量2.未知支持库函数_3 (_局部变量3, 假))
    赋值 (_局部变量4, _局部变量2.未知支持库函数_7 (_局部变量1, 1, ))
    .如果真 (取反 (_局部变量4.未知支持库函数_10 ()))
        赋值 (_局部变量5, _局部变量4.未知支持库函数_11 (_局部变量1, ))
        .如果真 (等于 (寻找文本 (_局部变量5, “bottom”, , 真), -1))
            赋值 (_局部变量5, 子文本替换 (_参数1, “continuation_indicator_param”, 相加 (“bottom: ”, #引号, “data”, #引号, #换行符, “    continuation_indicator_param”), , , 假))
            返回 (_局部变量5)
        .如果真结束
        
    .如果真结束
    
.如果真结束
返回 (_参数1)

.类模块 CC分类器, , , 

.程序集变量 集_blank_label, 整数型, , , 
.程序集变量 集_time_step, 整数型, , , 
.程序集变量 集_alphabet_size, 整数型, , , 
.程序集变量 码表, 文本型, , "0", 
.程序集变量 码表数量, 整数型, , , 
.程序集变量 分类器句柄, 整数型, , , 
.程序集变量 是否LSTM版本, 逻辑型, , , 
.子程序 _初始化, 空白型, , 


.子程序 _销毁, 空白型, , 
.如果真 (大于 (分类器句柄, 0))
    _DLL5_releaseClassifier (分类器句柄)
.如果真结束


.子程序 载入识别库, 逻辑型, 公开, 
.参数 Map, 字节集, , 码表文件
.参数 Deploy, 字节集, , prototxt文件的字节集
.参数 Caffemodel, 字节集, , caffemodel文件
.参数 图像缩放系数, 小数型, 可空, 输入一幅图过后，每个像素值会乘以这个缩放系数，如果系数为1，则不做任何操作（不损失效率）
.参数 通道均值, 小数型, 可空 数组, 

.局部变量 _局部变量1, 整数型, , , 
.局部变量 _局部变量2, 文本型, , , 
.局部变量 _局部变量3, 文本型, , , 
.局部变量 _局部变量4, 文本型, , , 
.局部变量 _局部变量5, 文本型, , , 
.局部变量 _局部变量6, 文本型, , , 
.局部变量 _局部变量7, 文本型, , , 
.局部变量 _局部变量8, 字节集, , , 

.如果真 (取反 (_全局变量1))
    输出调试文本 (“初始化识别引擎失败”)
    返回 (假)
.如果真结束

.如果真 (不等于 (分类器句柄, 0))
    输出调试文本 (“请勿重复载入识别库”)
    返回 (真)
.如果真结束

赋值 (码表, 分割文本 (到文本 (Map), #换行符, ))
赋值 (码表数量, 取数组成员数 (码表))
.如果真 (小于 (码表数量, 1))
    返回 (假)
.如果真结束

.如果真 (或者 (等于 (Map, {  }), 等于 (Deploy, {  }), 等于 (Caffemodel, {  })))
    返回 (假)
.如果真结束

.判断开始 (是否为空 (图像缩放系数))
    赋值 (_局部变量1, 1)
.默认
    赋值 (_局部变量1, 图像缩放系数)
.判断结束
赋值 (_局部变量2, 到文本 (Deploy))
赋值 (_局部变量2, 删全部空 (_局部变量2))
赋值 (是否LSTM版本, 不等于 (寻找文本 (_局部变量2, 相加 (“type:”, #引号, “LSTM”, #引号), , 真), -1))
赋值 (_局部变量3, 文本_取出中间文本内容 (_局部变量2, 相加 (#引号, “InnerProduct”, #引号), “layer”))
.如果真 (不等于 (_局部变量3, “”))
    赋值 (_局部变量4, 文本_取出中间文本内容 (_局部变量3, “num_output:”, #换行符))
    .如果真 (大于 (到整数 (_局部变量4), 0))
        赋值 (_局部变量5, 文本_取出中间文本内容 (_局部变量2, 相加 (#引号, “indicator”, #引号), “layer”))
        .如果真 (不等于 (_局部变量5, “”))
            赋值 (_局部变量6, 文本_取出中间文本内容 (_局部变量5, “time_step:”, #换行符))
            .如果真 (大于 (到整数 (_局部变量6), 0))
                赋值 (集_time_step, 到整数 (_局部变量6))
                赋值 (集_alphabet_size, 到整数 (_局部变量4))
                赋值 (集_blank_label, 到整数 (相减 (集_alphabet_size, 1)))
            .如果真结束
            
        .如果真结束
        
    .如果真结束
    
.如果真结束

.如果真 (并且 (不等于 (寻找文本 (_局部变量2, 相加 (#引号, “Wm”), , 真), -1), 等于 (取数组成员数 (通道均值), 0)))
    赋值 (通道均值, { 104, 117, 123 })
.如果真结束
赋值 (_局部变量7, 到文本 (Deploy))
赋值 (_局部变量7, deploy多线程优化 (_局部变量7))
赋值 (_局部变量8, 到字节集 (_局部变量7))
赋值 (分类器句柄, _DLL4_createClassifierByData (_局部变量8, 取字节集长度 (_局部变量8), Caffemodel, 取字节集长度 (Caffemodel), _局部变量1, 0, 取数组成员数 (通道均值), 通道均值, -1))
.如果真 (小于或等于 (分类器句柄, 0))
    输出调试文本 (“载入失败,可能是Deploy与Model不匹配或文件损坏!”)
    返回 (假)
.如果真结束
返回 (真)

.子程序 分类器_识别图像_CTC, 文本型, , 
.参数 _参数1, 字节集, , 

.局部变量 _局部变量1, 小数型, , "0", 
.局部变量 _局部变量2, 整数型, , , 
.局部变量 _局部变量3, 整数型, , , 
.局部变量 _局部变量4, 整数型, , , 
.局部变量 _局部变量5, 小数型, , , 
.局部变量 _局部变量6, 整数型, , , 
.局部变量 _局部变量7, 文本型, , , 

赋值 (_局部变量2, _DLL9_extfeature (分类器句柄, _参数1, 取字节集长度 (_参数1), “premuted_fc”))
.如果真 (等于 (_局部变量2, 0))
    返回 (“”)
.如果真结束
重定义数组 (_局部变量1, 假, _DLL10_getBlobLength (_局部变量2))
_DLL11_cpyBlobData (_局部变量1, _局部变量2)
赋值 (_局部变量3, 集_blank_label)
.计次循环首 (集_time_step, _局部变量4)
    赋值 (_局部变量6, argmax (_局部变量1, 相加 (相乘 (相减 (_局部变量4, 1), 集_alphabet_size), 1), 相乘 (_局部变量4, 集_alphabet_size), _局部变量5))
    .如果真 (并且 (不等于 (_局部变量6, 集_blank_label), 不等于 (_局部变量3, _局部变量6)))
        .如果真 (小于或等于 (相加 (_局部变量6, 1), 码表数量))
            赋值 (_局部变量7, 相加 (_局部变量7, 码表 [相加 (_局部变量6, 1)]))
        .如果真结束
        
    .如果真结束
    赋值 (_局部变量3, _局部变量6)
.计次循环尾 ()
赋值 (_局部变量7, 子文本替换 (_局部变量7, “_”, “”, , , 真))
_DLL12_releaseBlobData (_局部变量2)
返回 (_局部变量7)

.子程序 销毁分类器, 逻辑型, 公开, 
.如果真 (大于 (分类器句柄, 0))
    _DLL5_releaseClassifier (分类器句柄)
    赋值 (分类器句柄, 0)
.如果真结束
返回 (真)

.子程序 载入识别库_从文件, 逻辑型, 公开, 
.参数 Map文件路径, 文本型, , 
.参数 Deploy文件路径, 文本型, , 
.参数 Caffemodel文件路径, 文本型, , 
.参数 图像缩放系数, 小数型, 可空, 输入一幅图过后，每个像素值会乘以这个缩放系数，如果系数为1，则不做任何操作（不损失效率）
.参数 通道均值, 小数型, 可空 数组, 

.局部变量 _局部变量1, 字节集, , , 
.局部变量 _局部变量2, 字节集, , , 
.局部变量 _局部变量3, 字节集, , , 
.局部变量 _局部变量4, 整数型, , , 

.如果真 (取反 (_全局变量1))
    输出调试文本 (“初始化识别引擎失败”)
    返回 (假)
.如果真结束
赋值 (_局部变量1, 读入文件 (Map文件路径))
赋值 (_局部变量2, 读入文件 (Deploy文件路径))
赋值 (_局部变量3, 读入文件 (Caffemodel文件路径))
.如果真 (或者 (等于 (_局部变量1, {  }), 等于 (_局部变量2, {  }), 等于 (_局部变量3, {  })))
    输出调试文本 (“Map,Deploy,Caffemodel文件不存在或损坏”)
    返回 (假)
.如果真结束

.判断开始 (是否为空 (图像缩放系数))
    赋值 (_局部变量4, 1)
.默认
    赋值 (_局部变量4, 图像缩放系数)
.判断结束
返回 (载入识别库 (_局部变量1, _局部变量2, _局部变量3, _局部变量4, 通道均值))

.子程序 识别图像, 文本型, 公开, 
.参数 图片数据, 字节集, , 

.局部变量 _局部变量1, 文本型, , , 

.判断开始 (是否LSTM版本)
    赋值 (_局部变量1, 分类器_识别图像_CTC (图片数据))
.默认
    赋值 (_局部变量1, 分类器_识别图像_常规 (图片数据))
.判断结束
返回 (_局部变量1)

.子程序 分类器_识别图像_常规, 文本型, , 
.参数 _参数1, 字节集, , 

.局部变量 _局部变量1, 整数型, , , 
.局部变量 _局部变量2, 整数型, , "0", 
.局部变量 _局部变量3, 整数型, , , 
.局部变量 _局部变量4, 文本型, , , 

.如果真 (_全局变量1)
    赋值 (_局部变量1, _DLL6_predictSoftmax (分类器句柄, _参数1, 取字节集长度 (_参数1), 1))
    重定义数组 (_局部变量2, 假, _DLL7_getNumOutlayers (_局部变量1))
    _DLL17_getMultiLabel (_局部变量1, _局部变量2)
    _DLL8_releaseSoftmaxResult (_局部变量1)
    .计次循环首 (取数组成员数 (_局部变量2), _局部变量3)
        .如果真 (小于或等于 (相加 (_局部变量2 [_局部变量3], 1), 码表数量))
            赋值 (_局部变量4, 相加 (_局部变量4, 码表 [相加 (_局部变量2 [_局部变量3], 1)]))
        .如果真结束
        
    .计次循环尾 ()
.如果真结束
返回 (_局部变量4)

.类模块 CC任务池, , , 

.程序集变量 集_blank_label, 整数型, , , 
.程序集变量 集_time_step, 整数型, , , 
.程序集变量 集_alphabet_size, 整数型, , , 
.程序集变量 码表, 文本型, , "0", 
.程序集变量 码表数量, 整数型, , , 
.程序集变量 任务池句柄, 整数型, , , 
.程序集变量 是否LSTM版本, 逻辑型, , , 
.子程序 _初始化, 空白型, , 


.子程序 _销毁, 空白型, , 
.如果真 (大于 (任务池句柄, 0))
    _DLL16_releaseTaskPool (任务池句柄)
.如果真结束


.子程序 载入识别库, 逻辑型, 公开, 
.参数 Map, 字节集, , 码表文件
.参数 Deploy, 字节集, , prototxt文件的字节集
.参数 Caffemodel, 字节集, , caffemodel文件
.参数 图像缩放系数, 小数型, 可空, 输入一幅图过后，每个像素值会乘以这个缩放系数，如果系数为1，则不做任何操作（不损失效率）
.参数 通道均值, 小数型, 可空 数组, 
.参数 批大小, 整数型, 可空, 指定当前任务池并行处理的图片数量,默认为5

.局部变量 _局部变量1, 整数型, , , 
.局部变量 _局部变量2, 文本型, , , 
.局部变量 _局部变量3, 文本型, , , 
.局部变量 _局部变量4, 文本型, , , 
.局部变量 _局部变量5, 文本型, , , 
.局部变量 _局部变量6, 文本型, , , 
.局部变量 _局部变量7, 整数型, , , 
.局部变量 _局部变量8, 文本型, , , 
.局部变量 _局部变量9, 字节集, , , 

.如果真 (取反 (_全局变量1))
    输出调试文本 (“初始化识别引擎失败”)
    返回 (假)
.如果真结束

.如果真 (不等于 (任务池句柄, 0))
    输出调试文本 (“请勿重复载入识别库”)
    返回 (真)
.如果真结束

.判断开始 (是否为空 (批大小))
    赋值 (_局部变量7, 5)
.默认
    赋值 (_局部变量7, 批大小)
.判断结束
赋值 (码表, 分割文本 (到文本 (Map), #换行符, ))
赋值 (码表数量, 取数组成员数 (码表))
.如果真 (小于 (码表数量, 1))
    返回 (假)
.如果真结束

.如果真 (或者 (等于 (Map, {  }), 等于 (Deploy, {  }), 等于 (Caffemodel, {  })))
    返回 (假)
.如果真结束

.判断开始 (是否为空 (图像缩放系数))
    赋值 (_局部变量1, 1)
.默认
    赋值 (_局部变量1, 图像缩放系数)
.判断结束
赋值 (_局部变量2, 到文本 (Deploy))
赋值 (_局部变量2, 删全部空 (_局部变量2))
赋值 (是否LSTM版本, 不等于 (寻找文本 (_局部变量2, 相加 (“type:”, #引号, “LSTM”, #引号), , 真), -1))
赋值 (_局部变量3, 文本_取出中间文本内容 (_局部变量2, 相加 (#引号, “InnerProduct”, #引号), “layer”))
.如果真 (不等于 (_局部变量3, “”))
    赋值 (_局部变量4, 文本_取出中间文本内容 (_局部变量3, “num_output:”, #换行符))
    .如果真 (大于 (到整数 (_局部变量4), 0))
        赋值 (_局部变量5, 文本_取出中间文本内容 (_局部变量2, 相加 (#引号, “indicator”, #引号), “layer”))
        .如果真 (不等于 (_局部变量5, “”))
            赋值 (_局部变量6, 文本_取出中间文本内容 (_局部变量5, “time_step:”, #换行符))
            .如果真 (大于 (到整数 (_局部变量6), 0))
                赋值 (集_time_step, 到整数 (_局部变量6))
                赋值 (集_alphabet_size, 到整数 (_局部变量4))
                赋值 (集_blank_label, 到整数 (相减 (集_alphabet_size, 1)))
            .如果真结束
            
        .如果真结束
        
    .如果真结束
    
.如果真结束

.如果真 (并且 (不等于 (寻找文本 (_局部变量2, 相加 (#引号, “Wm”), , 真), -1), 等于 (取数组成员数 (通道均值), 0)))
    赋值 (通道均值, { 104, 117, 123 })
.如果真结束
赋值 (_局部变量8, 到文本 (Deploy))
赋值 (_局部变量8, deploy多线程优化 (_局部变量8))
赋值 (_局部变量9, 到字节集 (_局部变量8))
赋值 (任务池句柄, _DLL3_createTaskPoolByData (_局部变量9, 取字节集长度 (_局部变量9), Caffemodel, 取字节集长度 (Caffemodel), _局部变量1, 0, 取数组成员数 (通道均值), 通道均值, -1, _局部变量7))
.如果真 (等于 (任务池句柄, 0))
    输出调试文本 (“载入失败,可能是Deploy与Model不匹配或文件损坏!”)
    返回 (假)
.如果真结束
返回 (真)

.子程序 任务池_识别图像_常规, 文本型, , 
.参数 _参数1, 字节集, , 

.局部变量 _局部变量1, 整数型, , , 
.局部变量 _局部变量2, 整数型, , "0", 
.局部变量 _局部变量3, 整数型, , , 
.局部变量 _局部变量4, 文本型, , , 

.如果真 (_全局变量1)
    赋值 (_局部变量1, _DLL15_predictSoftmaxByTaskPool (任务池句柄, _参数1, 取字节集长度 (_参数1), 1))
    重定义数组 (_局部变量2, 假, _DLL7_getNumOutlayers (_局部变量1))
    _DLL17_getMultiLabel (_局部变量1, _局部变量2)
    _DLL8_releaseSoftmaxResult (_局部变量1)
    .计次循环首 (取数组成员数 (_局部变量2), _局部变量3)
        .如果真 (小于或等于 (相加 (_局部变量2 [_局部变量3], 1), 码表数量))
            赋值 (_局部变量4, 相加 (_局部变量4, 码表 [相加 (_局部变量2 [_局部变量3], 1)]))
        .如果真结束
        
    .计次循环尾 ()
.如果真结束
返回 (_局部变量4)

.子程序 任务池_识别图像_CTC, 文本型, , 
.参数 _参数1, 字节集, , 

.局部变量 _局部变量1, 小数型, , "0", 
.局部变量 _局部变量2, 整数型, , , 
.局部变量 _局部变量3, 整数型, , , 
.局部变量 _局部变量4, 整数型, , , 
.局部变量 _局部变量5, 小数型, , , 
.局部变量 _局部变量6, 整数型, , , 
.局部变量 _局部变量7, 文本型, , , 

赋值 (_局部变量2, _DLL14_forwardByTaskPool (任务池句柄, _参数1, 取字节集长度 (_参数1), “premuted_fc”))
.如果真 (等于 (_局部变量2, 0))
    返回 (“”)
.如果真结束
重定义数组 (_局部变量1, 假, _DLL10_getBlobLength (_局部变量2))
_DLL11_cpyBlobData (_局部变量1, _局部变量2)
赋值 (_局部变量3, 集_blank_label)
.计次循环首 (集_time_step, _局部变量4)
    赋值 (_局部变量6, argmax (_局部变量1, 相加 (相乘 (相减 (_局部变量4, 1), 集_alphabet_size), 1), 相乘 (_局部变量4, 集_alphabet_size), _局部变量5))
    .如果真 (并且 (不等于 (_局部变量6, 集_blank_label), 不等于 (_局部变量3, _局部变量6)))
        .如果真 (小于或等于 (相加 (_局部变量6, 1), 码表数量))
            赋值 (_局部变量7, 相加 (_局部变量7, 码表 [相加 (_局部变量6, 1)]))
        .如果真结束
        
    .如果真结束
    赋值 (_局部变量3, _局部变量6)
.计次循环尾 ()
赋值 (_局部变量7, 子文本替换 (_局部变量7, “_”, “”, , , 真))
_DLL12_releaseBlobData (_局部变量2)
返回 (_局部变量7)

.子程序 销毁任务池, 逻辑型, 公开, 
.如果真 (大于 (任务池句柄, 0))
    _DLL16_releaseTaskPool (任务池句柄)
    赋值 (任务池句柄, 0)
.如果真结束
返回 (真)

.子程序 载入识别库_从文件, 逻辑型, 公开, 
.参数 Map文件路径, 文本型, , 
.参数 Deploy文件路径, 文本型, , 
.参数 Caffemodel文件路径, 文本型, , 
.参数 图像缩放系数, 小数型, 可空, 输入一幅图过后，每个像素值会乘以这个缩放系数，如果系数为1，则不做任何操作（不损失效率）
.参数 通道均值, 小数型, 可空 数组, 
.参数 批大小, 整数型, 可空, 指定当前任务池并行处理的图片数量,默认为5

.局部变量 _局部变量1, 字节集, , , 
.局部变量 _局部变量2, 字节集, , , 
.局部变量 _局部变量3, 字节集, , , 
.局部变量 _局部变量4, 整数型, , , 
.局部变量 _局部变量5, 整数型, , , 

.如果真 (取反 (_全局变量1))
    输出调试文本 (“初始化识别引擎失败”)
    返回 (假)
.如果真结束

.判断开始 (是否为空 (批大小))
    赋值 (_局部变量5, 5)
.默认
    赋值 (_局部变量5, 批大小)
.判断结束
赋值 (_局部变量1, 读入文件 (Map文件路径))
赋值 (_局部变量2, 读入文件 (Deploy文件路径))
赋值 (_局部变量3, 读入文件 (Caffemodel文件路径))
.如果真 (或者 (等于 (_局部变量1, {  }), 等于 (_局部变量2, {  }), 等于 (_局部变量3, {  })))
    输出调试文本 (“Map,Deploy,Caffemodel文件不存在或损坏”)
    返回 (假)
.如果真结束

.判断开始 (是否为空 (图像缩放系数))
    赋值 (_局部变量4, 1)
.默认
    赋值 (_局部变量4, 图像缩放系数)
.判断结束
返回 (载入识别库 (_局部变量1, _局部变量2, _局部变量3, _局部变量4, 通道均值, _局部变量5))

.子程序 识别图像, 文本型, 公开, 
.参数 图片数据, 字节集, , 

.局部变量 _局部变量1, 文本型, , , 

.判断开始 (是否LSTM版本)
    赋值 (_局部变量1, 任务池_识别图像_CTC (图片数据))
.默认
    赋值 (_局部变量1, 任务池_识别图像_常规 (图片数据))
.判断结束
返回 (_局部变量1)


 ' 不属于任何一个程序集、类模块的函数：
