 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 339
    高度 = 276
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “原始学生数据导入 1.0版”
    帮助文件名 = “”





 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 4 系统核心支持库
 ' eExcel2000 F86EC5989E044d42BC98C692C0B54727 1 0 EXCEL2000支持库
 ' eDB 46E94341933A462383A4DE26B146322C 1 4 数据库操作支持库
 ' iext 27bb20fdd3e145e4bee3db39ddd6e64c 1 2 扩展界面支持库一




.全局变量 是否合法, 逻辑型, , , 是否包含sheet1工作表
.全局变量 表格序号, 整数型, , , 指sheet1工作表序号
.全局变量 工作表名, 文本型, , , 指定的xls工作表名
.全局变量 行数, 整数型, , , 进度条百分比有用
.全局变量 数据表名, 文本型, , , 指定的mdb数据表名

.窗口程序集 窗口程序集1, , , 

.子程序 __启动窗口_创建完毕, 空白型, , 
赋值 (工作表名, “Sheet1”)
赋值 (数据表名, “student”)

赋值 (.显示方式, 1)
赋值 (.最小位置, 0)
赋值 (.最大位置, 100)

赋值 (.禁止, 真)
赋值 (.禁止, 真)

赋值 (.输入方式, 1)
赋值 (.输入方式, 1)

赋值 (.是否自动折行, 真)
赋值 (.是否自动折行, 真)
赋值 (.是否自动折行, 真)

赋值 (.标题, “    这是我为选修报名数据库的数据导入而写的专用程序。只能转换以下列出的字段(name,sex,grade,class,no,pwd)              ------ designed by lluxin(2008年6月27日)”)
赋值 (.标题, 相加 (“请注意：有效数据必须是在”, 工作表名, “工作表中”))
赋值 (.标题, 相加 (“请注意：学生数据一定是导入到”, 数据表名, “数据表中”))

赋值 (., “”)


.子程序 _按钮xls_被单击, 空白型, , 
.局部变量 i, 整数型, , , 

赋值 (是否合法, 假)
.如果真 (等于 (未知支持库函数_0 (), 假))
    信息框 (“你的计算机上没有EXCEL程序”, 0, )
    结束 ()
.如果真结束
赋值 (., 假)
.未知支持库函数_6 ()

赋值 (.初始目录, 取运行目录 ())
赋值 (.类型, 0) ' 打开文件
赋值 (.过滤器, “*.xls(EXCEL文件)|*.xls”)

.如果真 (打开 ())
    赋值 (.文本颜色, #黑色)
    赋值 (.内容, .文件名)
    .未知支持库函数_14 (.内容)
    .计次循环首 (., i)
        赋值 (., i)
        .如果真 (等于 (., 工作表名))
            赋值 (表格序号, i)
            赋值 (是否合法, 真)
            跳出循环 ()
        .如果真结束
        
    .计次循环尾 ()
    .如果真 (等于 (是否合法, 假))
        赋值 (.文本颜色, #红色)
        赋值 (.内容, “请选择有效的excel文件！”)
    .如果真结束
    
.如果真结束

未知支持库函数_15 ()
未知支持库函数_7 ()

.如果 (或者 (等于 (.内容, “”), 等于 (.内容, “”), 等于 (.文本颜色, #红色), 等于 (.文本颜色, #红色)))
    赋值 (.禁止, 真)
.否则
    赋值 (.禁止, 假)
.如果结束

.如果 (或者 (等于 (.内容, “”), 等于 (.文本颜色, #红色)))
    赋值 (.禁止, 真)
.否则
    赋值 (.禁止, 假)
.如果结束


.子程序 _按钮mdb_被单击, 空白型, , 
赋值 (.初始目录, 取运行目录 ())
赋值 (.类型, 0) ' 打开文件
赋值 (.过滤器, “*.mdb(ACCESS文件)|*.mdb”)

.如果真 (打开 ())
    赋值 (.文本颜色, #黑色)
    赋值 (.内容, .文件名)
    
    .如果真 (等于 (是否存在指定数据表 (.文件名, 数据表名), 假))
        赋值 (.文本颜色, #红色)
        赋值 (.内容, “请选择有效的access文件！”)
        
    .如果真结束
    
.如果真结束

.如果 (或者 (等于 (.内容, “”), 等于 (.内容, “”), 等于 (.文本颜色, #红色), 等于 (.文本颜色, #红色)))
    赋值 (.禁止, 真)
.否则
    赋值 (.禁止, 假)
.如果结束

.如果 (或者 (等于 (.内容, “”), 等于 (.文本颜色, #红色)))
    赋值 (.禁止, 真)
.否则
    赋值 (.禁止, 假)
.如果结束


.子程序 是否存在指定数据表, 逻辑型, , 优化代码
.参数 数据库文件, 文本型, , 
.参数 表名, 文本型, , 

.局部变量 数据源, 文本型, , , 
.局部变量 数据库对象, 对象, , , 
.局部变量 表集合对象, 对象, , , 
.局部变量 表对象, 对象, , , 
.局部变量 变体型1, 变体型, , , 
.局部变量 逻辑标志, 逻辑型, , , 
.局部变量 匿名局部变量_49, 空白型, , , 

赋值 (逻辑标志, 假)
.如果真 (等于 (文件是否存在 (数据库文件), 真))
    数据库对象.创建 (“ADOX.Catalog”, )
    赋值 (数据源, 相加 (“Provider=Microsoft.Jet.OLEDB.4.0;Data Source=”, 数据库文件))
    变体型1.置类型 (#文本型)
    变体型1.赋值 (数据源, )
    数据库对象.写属性 (“ActiveConnection”, 变体型1)
    赋值 (表集合对象, 数据库对象.读对象型属性 (“Tables”, ))
    .如果真 (等于 (表集合对象.是否为空 (), 假))
        变体型1.赋值 (表名, )
        赋值 (表对象, 表集合对象.读对象型属性 (“Item”, 变体型1))
        赋值 (逻辑标志, 取反 (表对象.是否为空 ()))
        表对象.清除 ()
    .如果真结束
    表集合对象.清除 ()
    数据库对象.清除 ()
.如果真结束
返回 (逻辑标志)


.子程序 转换字母, 文本型, , 
.参数 数值, 整数型, , 

.局部变量 字母, 文本型, , , 

.如果真 (等于 (数值, 1))
    赋值 (字母, “a”)
.如果真结束
.如果真 (等于 (数值, 2))
    赋值 (字母, “b”)
.如果真结束
.如果真 (等于 (数值, 3))
    赋值 (字母, “c”)
.如果真结束
.如果真 (等于 (数值, 4))
    赋值 (字母, “d”)
.如果真结束
.如果真 (等于 (数值, 5))
    赋值 (字母, “e”)
.如果真结束
.如果真 (等于 (数值, 6))
    赋值 (字母, “f”)
.如果真结束
.如果真 (等于 (数值, 7))
    赋值 (字母, “g”)
.如果真结束
.如果真 (等于 (数值, 8))
    赋值 (字母, “h”)
.如果真结束
.如果真 (等于 (数值, 9))
    赋值 (字母, “i”)
.如果真结束
.如果真 (等于 (数值, 10))
    赋值 (字母, “j”)
.如果真结束
.如果真 (等于 (数值, 11))
    赋值 (字母, “k”)
.如果真结束
.如果真 (等于 (数值, 12))
    赋值 (字母, “l”)
.如果真结束
.如果真 (等于 (数值, 13))
    赋值 (字母, “m”)
.如果真结束
.如果真 (等于 (数值, 14))
    赋值 (字母, “n”)
.如果真结束
.如果真 (等于 (数值, 15))
    赋值 (字母, “o”)
.如果真结束
.如果真 (等于 (数值, 16))
    赋值 (字母, “p”)
.如果真结束
.如果真 (等于 (数值, 17))
    赋值 (字母, “q”)
.如果真结束
.如果真 (等于 (数值, 18))
    赋值 (字母, “r”)
.如果真结束
.如果真 (等于 (数值, 19))
    赋值 (字母, “s”)
.如果真结束
.如果真 (等于 (数值, 20))
    赋值 (字母, “t”)
.如果真结束
.如果真 (等于 (数值, 21))
    赋值 (字母, “u”)
.如果真结束
.如果真 (等于 (数值, 22))
    赋值 (字母, “v”)
.如果真结束
.如果真 (等于 (数值, 23))
    赋值 (字母, “w”)
.如果真结束
.如果真 (等于 (数值, 24))
    赋值 (字母, “x”)
.如果真结束
.如果真 (等于 (数值, 25))
    赋值 (字母, “y”)
.如果真结束
.如果真 (等于 (数值, 26))
    赋值 (字母, “z”)
.如果真结束
.如果真 (等于 (数值, 27))
    赋值 (字母, “aa”)
.如果真结束
.如果真 (等于 (数值, 28))
    赋值 (字母, “ab”)
.如果真结束
.如果真 (等于 (数值, 29))
    赋值 (字母, “ac”)
.如果真结束
.如果真 (等于 (数值, 30))
    赋值 (字母, “ad”)
.如果真结束
.如果真 (等于 (数值, 31))
    赋值 (字母, “ae”)
.如果真结束
.如果真 (等于 (数值, 32))
    赋值 (字母, “af”)
.如果真结束
.如果真 (等于 (数值, 33))
    赋值 (字母, “ag”)
.如果真结束
.如果真 (等于 (数值, 34))
    赋值 (字母, “ah”)
.如果真结束
.如果真 (等于 (数值, 35))
    赋值 (字母, “ai”)
.如果真结束
.如果真 (等于 (数值, 36))
    赋值 (字母, “aj”)
.如果真结束
.如果真 (等于 (数值, 37))
    赋值 (字母, “ak”)
.如果真结束
.如果真 (等于 (数值, 38))
    赋值 (字母, “al”)
.如果真结束
.如果真 (等于 (数值, 39))
    赋值 (字母, “am”)
.如果真结束
.如果真 (等于 (数值, 40))
    赋值 (字母, “an”)
.如果真结束
.如果真 (等于 (数值, 41))
    赋值 (字母, “ao”)
.如果真结束
.如果真 (等于 (数值, 42))
    赋值 (字母, “ap”)
.如果真结束
.如果真 (等于 (数值, 43))
    赋值 (字母, “aq”)
.如果真结束
.如果真 (等于 (数值, 44))
    赋值 (字母, “ar”)
.如果真结束
.如果真 (等于 (数值, 45))
    赋值 (字母, “as”)
.如果真结束
.如果真 (等于 (数值, 46))
    赋值 (字母, “at”)
.如果真结束
.如果真 (等于 (数值, 47))
    赋值 (字母, “au”)
.如果真结束
.如果真 (等于 (数值, 48))
    赋值 (字母, “av”)
.如果真结束
.如果真 (等于 (数值, 49))
    赋值 (字母, “aw”)
.如果真结束
.如果真 (等于 (数值, 50))
    赋值 (字母, “ax”)
.如果真结束
.如果真 (等于 (数值, 51))
    赋值 (字母, “ay”)
.如果真结束
.如果真 (等于 (数值, 52))
    赋值 (字母, “az”)
.如果真结束
.如果真 (等于 (数值, 53))
    赋值 (字母, “ba”)
.如果真结束
.如果真 (等于 (数值, 54))
    赋值 (字母, “bb”)
.如果真结束
.如果真 (等于 (数值, 55))
    赋值 (字母, “bc”)
.如果真结束
.如果真 (等于 (数值, 56))
    赋值 (字母, “bd”)
.如果真结束
.如果真 (等于 (数值, 57))
    赋值 (字母, “be”)
.如果真结束
.如果真 (等于 (数值, 58))
    赋值 (字母, “bf”)
.如果真结束
.如果真 (等于 (数值, 59))
    赋值 (字母, “bg”)
.如果真结束
.如果真 (等于 (数值, 60))
    赋值 (字母, “bh”)
.如果真结束
返回 (字母)


.子程序 随机生成密码, 文本型, , 十位密码（小写字母或数字组成，不含0,1,o,l）
.局部变量 do, 整数型, , "10", 
.局部变量 i, 整数型, , , 
.局部变量 tmp, 整数型, , , 摒弃掉o_111,l_108
.局部变量 pwd, 文本型, , , 

赋值 (pwd, “”)
.计次循环首 (10, i)
    赋值 (do [i], 取随机数 (0, 1))
.计次循环尾 ()
.计次循环首 (10, i)
    .判断开始 (等于 (do [i], 0))
        置随机数种子 ()
        赋值 (tmp, 取随机数 (97, 122))
        .判断循环首 (或者 (等于 (tmp, 111), 等于 (tmp, 108)))
            赋值 (tmp, 取随机数 (97, 122))
        .判断循环尾 ()
        赋值 (pwd, 相加 (pwd, 字符 (tmp))) ' 随机生成小写字母
    .判断 (等于 (do [i], 1))
        置随机数种子 ()
        赋值 (pwd, 相加 (pwd, 字符 (取随机数 (50, 57)))) ' 随机生成数字1--9 不要数字0,1是为了怕和小写字母o,l区分
    .默认
        
    .判断结束
    
.计次循环尾 ()
返回 (pwd)


.子程序 _按钮导入数据_被单击, 空白型, , 
.局部变量 字段名, 文本型, , "5,2", 1字段名，2所在列
.局部变量 数组长度, 整数型, , , 很死板，程序中赋初值
.局部变量 范围, 对象, , , 
.局部变量 列对象, 对象, , , 
.局部变量 行对象, 对象, , , 
.局部变量 单元格对象, 对象, , , 
.局部变量 工作簿对象, 对象, , , 
.局部变量 列, 整数型, , , 
.局部变量 i, 整数型, , , 
.局部变量 j, 整数型, , , 
.局部变量 记录集句柄, 整数型, , , 
.局部变量 数据库文件, 文本型, , , 
.局部变量 tmpname, 文本型, , , 
.局部变量 tmpID, 整数型, , , 
.局部变量 输入文本, 文本型, , , 去掉字段名中空格和星号
.局部变量 输出文本, 文本型, , , 
.局部变量 位置1, 整数型, , , 
.局部变量 匿名局部变量_512, 空白型, , , 

赋值 (.禁止, 真)
赋值 (.禁止, 真)
赋值 (.禁止, 真)

赋值 (字段名 [1] [1], “name”) ' [1][1]必须是姓名字段，因为后面转换过程中出现友好提示信息时有用
赋值 (字段名 [2] [1], “sex”)
赋值 (字段名 [3] [1], “grade”)
赋值 (字段名 [4] [1], “class”)
赋值 (字段名 [5] [1], “no”)

赋值 (字段名 [1] [2], “”)
赋值 (字段名 [2] [2], “”)
赋值 (字段名 [3] [2], “”)
赋值 (字段名 [4] [2], “”)
赋值 (字段名 [5] [2], “”)

赋值 (数组长度, 5)

 ' 以下代码用于确定相应的字段名位于xls工作表中第几列
未知支持库函数_0 ()
赋值 (., 假)
.未知支持库函数_6 ()
.未知支持库函数_14 (.内容)
赋值 (., 表格序号)

赋值 (工作簿对象, 未知支持库函数_12 ())
赋值 (范围, 工作簿对象.读对象型属性 (“UsedRange”, ))
赋值 (行对象, 范围.读对象型属性 (“Rows”, ))
赋值 (行数, 相减 (行对象.读数值属性 (“Count”, ), 1))
赋值 (列对象, 范围.读对象型属性 (“Columns”, ))
赋值 (列, 列对象.读数值属性 (“Count”, ))
.计次循环首 (列, i)
    赋值 (., 相加 (转换字母 (i), “1”))
    赋值 (., 相加 (转换字母 (i), “1”))
    赋值 (单元格对象, 未知支持库函数_13 ())
    .计次循环首 (数组长度, j)
        .如果真 (等于 (字段名 [j] [1], 到小写 (单元格对象.读文本属性 (“Value”, ))))
            赋值 (字段名 [j] [2], 到文本 (i)) ' 数组第2维记录该字段在xls表中第几列
            跳出循环 ()
        .如果真结束
        
    .计次循环尾 ()
.计次循环尾 ()
单元格对象.清除 ()
行对象.清除 ()
列对象.清除 ()
范围.清除 ()
工作簿对象.清除 ()

 ' 打开mdb库中相应数据表
赋值 (数据库文件, .内容)
.如果真 (等于 (数据库文件.未知支持库函数_1 (“”), 假))
    信息框 (相加 (“无法打开数据库文件”, 数据库文件, “，请检查access软件是否正常可用。”), #错误图标, “出错”)
    返回 ()
.如果真结束
“”.未知支持库函数_47 ()
.未知支持库函数_12 ()
数据表名.未知支持库函数_14 (#)

.未知支持库函数_12 ()
“sturef”.未知支持库函数_14 (#)

 ' 逐一从xls表中读入数据到mdb库中
.如果 (相加 (“ODBC;DBQ=”, .内容, “;Driver={Microsoft Excel Driver (*.xls)}; ”).打开 ())
    赋值 (记录集句柄, 相加 (“select * from [”, 工作表名, “$]”).查询 ()) ' 此处指定表名
    .如果真 (不等于 (记录集句柄, 0))
        记录集句柄.到首记录 ()
        赋值 (j, 1)
        .判断循环首 (等于 (记录集句柄.尾记录后 (), 假))
            .如果真 (未知支持库函数_17 ())
                 ' 这个进度条进度显示我测试了许多次才会用！！！！！！
                赋值 (.位置, 取整 (相除 (相乘 (j, .最大位置), 行数)))
                赋值 (., #黄色)
                赋值 (., 相加 (到文本 (取整 (相除 (相乘 (j, .最大位置), 行数))), “%”))
                
                .计次循环首 (数组长度, i)
                    .如果真 (不等于 (字段名 [i] [2], “”))
                        输出调试文本 (相加 (字段名 [i] [1], “  ,”, 字段名 [i] [2], “  ,”, 到文本 (记录集句柄.读 (到数值 (字段名 [i] [2])))))
                        .如果 (大于或等于 (i, 4)) ' class,no类型设为整数型了
                            字段名.未知支持库函数_23 ( [i] [1], 到数值 (记录集句柄.读 (到数值 (字段名 [i] [2]))))
                        .否则
                             ' **************************************************************************
                             ' *************           去掉字段名中的空格和星号           ***************
                             ' **************************************************************************
                            赋值 (输入文本, 到文本 (记录集句柄.读 (到数值 (字段名 [i] [2]))))
                            
                            赋值 (输出文本, 输入文本)
                            赋值 (位置1, 寻找文本 (输入文本, “*”, , 假))
                            .判断循环首 (大于 (位置1, 0))
                                输出调试文本 (到文本 (位置1))
                                赋值 (输出文本, 相加 (取文本左边 (输入文本, 相减 (位置1, 1)), 取文本中间 (输入文本, 相加 (位置1, 1), 相减 (取文本长度 (输入文本), 位置1))))
                                赋值 (输入文本, 输出文本)
                                赋值 (位置1, 寻找文本 (输入文本, “*”, , 假))
                            .判断循环尾 ()
                            
                            赋值 (位置1, 寻找文本 (输入文本, “ ”, , 假))
                            .判断循环首 (大于 (位置1, 0))
                                输出调试文本 (到文本 (位置1))
                                赋值 (输出文本, 相加 (取文本左边 (输入文本, 相减 (位置1, 1)), 取文本中间 (输入文本, 相加 (位置1, 1), 相减 (取文本长度 (输入文本), 位置1))))
                                赋值 (输入文本, 输出文本)
                                赋值 (位置1, 寻找文本 (输入文本, “ ”, , 假))
                            .判断循环尾 ()
                            
                            字段名.未知支持库函数_20 ( [i] [1], 输出文本)
                            
                        .如果结束
                        .如果真 (等于 (i, 1))
                            赋值 (.标题, 相加 (“正在转换 ”, 到文本 (记录集句柄.读 (到数值 (字段名 [i] [2]))), “ 同学的记录......”))
                        .如果真结束
                        
                    .如果真结束
                    
                .计次循环尾 ()
                “pwd”.未知支持库函数_20 (随机生成密码 ())
                
                “id”.未知支持库函数_29 (tmpID)
                
                未知支持库函数_18 ()
                .如果真 (未知支持库函数_17 ())
                    “stuid”.未知支持库函数_23 (tmpID)
                    “subjectid”.未知支持库函数_23 (1) ' 这里只写入学科号为1的记录
                    未知支持库函数_18 ()
                .如果真结束
                
            .如果真结束
            记录集句柄.到后一记录 ()
            赋值 (j, 相加 (j, 1))
        .判断循环尾 ()
    .如果真结束
    
.否则
    信息框 (“xls文件数据库连接方式失败”, 0, )
.如果结束

未知支持库函数_16 ()

未知支持库函数_16 ()
未知支持库函数_3 ()

记录集句柄.关闭记录集 ()
关闭 ()

未知支持库函数_15 ()
未知支持库函数_7 ()
未知支持库函数_3 ()
未知支持库函数_1 ()

赋值 (.文本颜色, #红色)
 ' 标签1.字体.字体大小 ＝ 18
赋值 (.标题, “恭喜你，数据转换成功！”)

赋值 (.禁止, 假)


.子程序 _按钮重名修复_被单击, 空白型, , 二个记录集组件打开二个相同的数据库
.局部变量 数据库文件, 文本型, , , 
.局部变量 需更名字段ID, 整数型, , "0", 
.局部变量 需更名字段名称, 文本型, , "0", 
.局部变量 需更名字段编号, 整数型, , "0", 
.局部变量 i, 整数型, , , 重名字段起始编号
.局部变量 是否第一次重名, 逻辑型, , , 
.局部变量 是否找到最大编号, 逻辑型, , , 
.局部变量 前一字段, 文本型, , , 
.局部变量 前一ID, 整数型, , , 
.局部变量 当前字段, 文本型, , , 
.局部变量 当前ID, 整数型, , , 
.局部变量 SQL, 文本型, , , 
.局部变量 记录集句柄, 整数型, , , 
.局部变量 tmpname, 文本型, , , 
.局部变量 tmp, 整数型, , , 
.局部变量 tmpbh, 文本型, , , 临时编号
.局部变量 备份文件名, 文本型, , , 
.局部变量 tmpbool, 逻辑型, , , 
.局部变量 行数, 整数型, , , 
.局部变量 j, 整数型, , , 
.局部变量 匿名局部变量_498, 空白型, , , 

 ' 代码可能没问题，是我少判断了文件尾标志，已补上。20080628
清除数组 (需更名字段ID)
清除数组 (需更名字段名称)
清除数组 (需更名字段编号)
赋值 (是否第一次重名, 真)
赋值 (i, 1)
赋值 (j, 1)
赋值 (.文本颜色, #黑色)

赋值 (tmp, 倒找文本 (.内容, “.mdb”, , 假))
赋值 (tmpname, 取文本左边 (.内容, 相减 (tmp, 1)))
赋值 (备份文件名, 相加 (tmpname, “_luxbkup.mdb”))
.如果真 (等于 (复制文件 (.内容, 备份文件名), 假))
    信息框 (“无法备份mdb数据库文件，操作失败！”, #错误图标, )
    结束 ()
.如果真结束

.如果真 (等于 (备份文件名.未知支持库函数_1 (“”), 假))
    信息框 (相加 (“无法打开数据库文件”, 备份文件名, “，请检查access软件是否正常可用。”), #错误图标, “出错”)
    返回 ()
.如果真结束
“”.未知支持库函数_47 ()
.未知支持库函数_12 ()

 ' 打开mdb库中相应数据表
赋值 (数据库文件, .内容)
.如果真 (等于 (数据库文件.未知支持库函数_1 (“”), 假))
    信息框 (相加 (“无法打开数据库文件”, 数据库文件, “，请检查access软件是否正常可用。”), #错误图标, “出错”)
    返回 ()
.如果真结束
“”.未知支持库函数_47 ()
.未知支持库函数_12 ()
数据表名.未知支持库函数_15 (“name ASC, id ASC”)
赋值 (行数, .)
.如果真 (等于 (行数, 1))
    未知支持库函数_16 ()
    未知支持库函数_3 ()
    返回 ()
.如果真结束
未知支持库函数_34 ()
“name”.未知支持库函数_26 (前一字段)
“id”.未知支持库函数_29 (前一ID)
未知支持库函数_36 ()
赋值 (j, 相加 (j, 1))
.判断循环首 (等于 (., 假))
    “name”.未知支持库函数_26 (当前字段)
    “id”.未知支持库函数_29 (当前ID)
    输出调试文本 (相加 (“前一name----”, 前一字段, “,  前一ID----”, 到文本 (前一ID), “  当前name----”, 当前字段, “,  当前ID----”, 到文本 (当前ID)))
    
    赋值 (.位置, 取整 (相除 (相乘 (j, .最大位置), 行数)))
    赋值 (., #黄色)
    赋值 (., 相加 (到文本 (取整 (相除 (相乘 (j, .最大位置), 行数))), “%”))
    
    赋值 (.标题, 相加 (“正在检查 ”, 到文本 (前一ID), 前一字段, “，”, 到文本 (当前ID), 当前字段, “ 是否重名......”))
    .如果 (等于 (前一字段, 当前字段)) ' 出现同名字段时处理代码
        .如果 (等于 (是否第一次重名, 真))
             ' 这里排序用降序order by desc是有讲究的，比如用like语句，则“张一”和“张一飞”会被判为重名，
             ' 而这不是我要的字段。我可以用“到后一记录 ()"命令来快速获得重名的最大编号
             ' !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
             ' !!!!!!!!!!试了我整整一天，许多版本，原来sql中like命令不支持*，而是% % 长见识了！！!!!!!!!!!
             ' !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
            相加 (“name like %”, 前一字段, “%”).未知支持库函数_47 ()
            赋值 (tmpbool, 数据表名.未知支持库函数_15 (“name DESC”))
            输出调试文本 (相加 (“打开数据库成功吗？ ”, 到文本 (tmpbool)))
            .如果真 (等于 (tmpbool, 真))
                未知支持库函数_34 ()
                 ' 记录集2.到下一条 ()
                 ' 是否找到最大编号 ＝ 假
                输出调试文本 (相加 (“尾记录后标记：”, 到文本 (.)))
                .判断循环首 (等于 (., 假))
                     ' 读出了重名字段的后半部分
                    “name”.未知支持库函数_26 (tmpname)
                    赋值 (tmp, 寻找文本 (tmpname, 前一字段, , 假))
                    赋值 (tmpbh, 取文本中间 (tmpname, 相加 (tmp, 取文本长度 (前一字段)), 相加 (相减 (取文本长度 (tmpname), tmp, 取文本长度 (前一字段)), 1)))
                     ' 接下来判断以下可能，比如用like语句，则“张一”和“张一飞”会被判为重名，此时就要判断“飞”字
                     ' 使用“到数值()”函数，非数值被转换为0， 而我们重名编号至少从1开始，故可以判断出来！！！
                    .如果真 (小于 (i, 到数值 (tmpbh)))
                        赋值 (i, 相加 (到数值 (tmpbh), 1))
                    .如果真结束
                     ' 还没有找到重名字段的最大编号，当然可能没有，没关系，默认i=1
                    未知支持库函数_36 ()
                     ' 是否找到最大编号 ＝ 真
                .判断循环尾 ()
            .如果真结束
            未知支持库函数_16 ()
            
            加入成员 (需更名字段ID, 前一ID)
            加入成员 (需更名字段名称, 前一字段)
            加入成员 (需更名字段编号, i)
            
            加入成员 (需更名字段ID, 当前ID)
            加入成员 (需更名字段名称, 当前字段)
            赋值 (i, 相加 (i, 1))
            加入成员 (需更名字段编号, i)
            
            赋值 (是否第一次重名, 假)
            
        .否则
            加入成员 (需更名字段ID, 当前ID)
            加入成员 (需更名字段名称, 当前字段)
            赋值 (i, 相加 (i, 1))
            加入成员 (需更名字段编号, i)
            
        .如果结束
        
        
    .否则
        赋值 (前一字段, 当前字段)
        赋值 (前一ID, 当前ID)
        赋值 (是否第一次重名, 真)
        赋值 (i, 1)
    .如果结束
    
    未知支持库函数_36 ()
    赋值 (j, 相加 (j, 1))
.判断循环尾 ()

未知支持库函数_3 ()

未知支持库函数_16 ()
未知支持库函数_3 ()

删除文件 (备份文件名)

 ' 外部数据库1.打开MDB数据库 (编辑框2.内容, , , 假, )
.如果真 (等于 (数据库文件.未知支持库函数_1 (“”), 假))
    信息框 (相加 (“无法打开数据库文件”, 数据库文件, “，请检查access软件是否正常可用。”), #错误图标, “出错”)
    返回 ()
.如果真结束
赋值 (i, 取数组成员数 (需更名字段名称))
.计次循环首 (i, tmp)
    赋值 (SQL, 相加 (“update ”, 数据表名, “ set [name]=”, #引号, 需更名字段名称 [tmp], 到文本 (需更名字段编号 [tmp]), #引号, “ where [id]=”, 到文本 (需更名字段ID [tmp])))
    输出调试文本 (SQL)
     ' 输出调试文本 (到文本 (外部数据库1.执行 (SQL, )))
    输出调试文本 (到文本 (SQL.未知支持库函数_4 ()))
    
.计次循环尾 ()
 ' 外部数据库1.关闭 ()
未知支持库函数_3 ()
赋值 (.标题, 相加 (“共有”, 到文本 (i), “条记录出现重名，已对其姓名字段加上编号区分！”))
赋值 (.禁止, 真)

 ' 其实下面的子程序只要把like *改成like % %，应该都可用！！！

.子程序 _按钮重名修复_error_被单击, 空白型, , 感觉记录集和数据库连接组件打开二个相同的数据库，不成功，后者尾记录后标志为真
.局部变量 数据库文件, 文本型, , , 
.局部变量 需更名字段ID, 整数型, , "0", 
.局部变量 需更名字段名称, 文本型, , "0", 
.局部变量 需更名字段编号, 整数型, , "0", 
.局部变量 i, 整数型, , , 重名字段起始编号
.局部变量 是否第一次重名, 逻辑型, , , 
.局部变量 是否找到最大编号, 逻辑型, , , 
.局部变量 前一字段, 文本型, , , 
.局部变量 前一ID, 整数型, , , 
.局部变量 当前字段, 文本型, , , 
.局部变量 当前ID, 整数型, , , 
.局部变量 SQL, 文本型, , , 
.局部变量 记录集句柄, 整数型, , , 
.局部变量 tmpname, 文本型, , , 
.局部变量 tmp, 整数型, , , 
.局部变量 tmpbh, 文本型, , , 临时编号
.局部变量 备份文件名, 文本型, , , 
.局部变量 匿名局部变量_406, 空白型, , , 

 ' 代码可能没问题，是我少判断了文件尾标志，已补上。20080628
清除数组 (需更名字段ID)
清除数组 (需更名字段名称)
清除数组 (需更名字段编号)
赋值 (是否第一次重名, 真)
赋值 (i, 1)

赋值 (tmp, 倒找文本 (.内容, “.mdb”, , 假))
赋值 (tmpname, 取文本左边 (.内容, 相减 (tmp, 1)))
赋值 (备份文件名, 相加 (tmpname, “_luxbkup.mdb”))
.如果真 (等于 (复制文件 (.内容, 备份文件名), 假))
    信息框 (“无法备份mdb数据库文件，操作失败！”, #错误图标, )
    结束 ()
.如果真结束
备份文件名.打开MDB数据库 (真, )

 ' 打开mdb库中相应数据表
赋值 (数据库文件, .内容)
.如果真 (等于 (数据库文件.未知支持库函数_1 (“”), 假))
    信息框 (相加 (“无法打开数据库文件”, 数据库文件, “，请检查access软件是否正常可用。”), #错误图标, “出错”)
    返回 ()
.如果真结束
“”.未知支持库函数_47 ()
.未知支持库函数_12 ()
数据表名.未知支持库函数_15 (“name ASC”)
.如果真 (等于 (., 1))
    未知支持库函数_16 ()
    未知支持库函数_3 ()
    返回 ()
.如果真结束
未知支持库函数_34 ()
“name”.未知支持库函数_26 (前一字段)
“id”.未知支持库函数_29 (前一ID)
未知支持库函数_36 ()
.判断循环首 (等于 (., 假))
    “name”.未知支持库函数_26 (当前字段)
    “id”.未知支持库函数_29 (当前ID)
    输出调试文本 (相加 (“前一name----”, 前一字段, “,  前一ID----”, 到文本 (前一ID), “  当前name----”, 当前字段, “,  当前ID----”, 到文本 (当前ID)))
    .如果 (等于 (前一字段, 当前字段)) ' 出现同名字段时处理代码
        .如果 (等于 (是否第一次重名, 真))
             ' 这里排序用降序order by desc是有讲究的，比如用like语句，则“张一”和“张一飞”会被判为重名，
             ' 而这不是我要的字段。我可以用“到后一记录 ()"命令来快速获得重名的最大编号
            赋值 (SQL, 相加 (“select * from ”, 数据表名, “ where name like %”, 前一字段, “% order by name desc”))
            输出调试文本 (SQL)
            赋值 (记录集句柄, SQL.查询 ())
            输出调试文本 (相加 (“记录集句柄: ”, 到文本 (记录集句柄)))
            .如果真 (大于 (记录集句柄, 0))
                记录集句柄.到首记录 ()
                 ' 是否找到最大编号 ＝ 假
                输出调试文本 (相加 (“尾记录后标记：”, 到文本 (记录集句柄.尾记录后 ())))
                .判断循环首 (等于 (记录集句柄.尾记录后 (), 假))
                     ' 读出了重名字段的后半部分
                    赋值 (tmpname, 记录集句柄.读 (“name”))
                    赋值 (tmp, 寻找文本 (tmpname, 前一字段, , 假))
                    赋值 (tmpbh, 取文本中间 (tmpname, 相加 (tmp, 取文本长度 (前一字段)), 相加 (相减 (取文本长度 (tmpname), tmp, 取文本长度 (前一字段)), 1)))
                     ' 接下来判断以下可能，比如用like语句，则“张一”和“张一飞”会被判为重名，此时就要判断“飞”字
                     ' 使用“到数值()”函数，非数值被转换为0， 而我们重名编号至少从1开始，故可以判断出来！！！
                    .如果真 (小于 (i, 到数值 (tmpbh)))
                        赋值 (i, 相加 (到数值 (tmpbh), 1))
                    .如果真结束
                     ' 还没有找到重名字段的最大编号，当然可能没有，没关系，默认i=1
                    记录集句柄.到后一记录 ()
                     ' 是否找到最大编号 ＝ 真
                .判断循环尾 ()
            .如果真结束
            记录集句柄.关闭记录集 ()
            
            加入成员 (需更名字段ID, 前一ID)
            加入成员 (需更名字段名称, 前一字段)
            加入成员 (需更名字段编号, i)
            
            加入成员 (需更名字段ID, 当前ID)
            加入成员 (需更名字段名称, 当前字段)
            赋值 (i, 相加 (i, 1))
            加入成员 (需更名字段编号, i)
            
            赋值 (是否第一次重名, 假)
            
        .否则
            加入成员 (需更名字段ID, 当前ID)
            加入成员 (需更名字段名称, 当前字段)
            赋值 (i, 相加 (i, 1))
            加入成员 (需更名字段编号, i)
            
        .如果结束
        
        
    .否则
        赋值 (前一字段, 当前字段)
        赋值 (前一ID, 当前ID)
        赋值 (是否第一次重名, 真)
        赋值 (i, 1)
    .如果结束
    
    未知支持库函数_36 ()
.判断循环尾 ()

关闭 ()

未知支持库函数_16 ()
未知支持库函数_3 ()

删除文件 (备份文件名)

赋值 (i, 取数组成员数 (需更名字段名称))
.计次循环首 (i, tmp)
    输出调试文本 (相加 (“ID:”, 到文本 (需更名字段ID [tmp]), “name:”, 需更名字段名称 [tmp], 到文本 (需更名字段编号 [tmp])))
.计次循环尾 ()

.子程序 _按钮重名修复_wrong_被单击, 空白型, , 用二个数据库连接组件打开二个相同的数据库，不成功，后者记录集句柄为0
.局部变量 数据库文件, 文本型, , , 
.局部变量 需更名字段ID, 整数型, , "0", 
.局部变量 需更名字段名称, 文本型, , "0", 
.局部变量 需更名字段编号, 整数型, , "0", 
.局部变量 i, 整数型, , , 重名字段起始编号
.局部变量 是否第一次重名, 逻辑型, , , 
.局部变量 是否找到最大编号, 逻辑型, , , 
.局部变量 前一字段, 文本型, , , 
.局部变量 前一ID, 整数型, , , 
.局部变量 当前字段, 文本型, , , 
.局部变量 当前ID, 整数型, , , 
.局部变量 SQL, 文本型, , , 
.局部变量 记录集句柄1, 整数型, , , 
.局部变量 记录集句柄2, 整数型, , , 
.局部变量 tmpname, 文本型, , , 
.局部变量 tmp, 整数型, , , 
.局部变量 tmpbh, 文本型, , , 临时编号
.局部变量 备份文件名, 文本型, , , 
.局部变量 匿名局部变量_373, 空白型, , , 

清除数组 (需更名字段ID)
清除数组 (需更名字段名称)
清除数组 (需更名字段编号)
赋值 (是否第一次重名, 真) ' 第一次重名时，要找出重名中已经命名的可能的最大编号，然后往后继续编号，姓名就不会重复了。

赋值 (tmp, 倒找文本 (.内容, “.mdb”, , 假))
赋值 (tmpname, 取文本左边 (.内容, 相减 (tmp, 1)))
赋值 (备份文件名, 相加 (tmpname, “_luxbkup.mdb”))
.如果真 (等于 (复制文件 (.内容, 备份文件名), 假))
    信息框 (“无法备份mdb数据库文件，操作失败！”, #错误图标, )
    结束 ()
.如果真结束
备份文件名.打开MDB数据库 (真, )

 ' 打开mdb库中相应数据表
.打开MDB数据库 (.内容, , , 真, )
赋值 (SQL, 相加 (“select * from [”, 数据表名, “] order by [name] asc”))
赋值 (记录集句柄2, SQL.查询 ())
.如果真 (小于或等于 (记录集句柄2, 0))
    信息框 (“查询数据库失败！”, #错误图标, )
    返回 ()
.如果真结束
 ' 当数据库中记录只有一条或没有时，本程序或出错！！！！！！
记录集句柄2.到首记录 ()
赋值 (前一字段, 记录集句柄2.读 (“name”))
赋值 (前一ID, 记录集句柄2.读 (“id”))
记录集句柄2.到后一记录 ()

.判断循环首 (等于 (记录集句柄2.尾记录后 (), 假))
    赋值 (当前字段, 记录集句柄2.读 (“name”))
    赋值 (当前ID, 记录集句柄2.读 (“id”))
    输出调试文本 (相加 (“前一name----”, 前一字段, “,  前一ID----”, 到文本 (前一ID), “  当前name----”, 当前字段, “,  当前ID----”, 到文本 (当前ID)))
    .如果 (等于 (前一字段, 当前字段)) ' 出现同名字段时处理代码
        .如果 (等于 (是否第一次重名, 真))
             ' 这里排序用降序order by desc是有讲究×××××，比如用like语句，则“张一”和“张一飞”会被判为重名，
             ' 而这不是我要的字段。我可以用“到后一记录 ()"命令来快速获得重名的最大编号
             ' 发现易支持库一个bug！！！！！：查询sql不支持order排序，所以找最大编号只能遍历全部记录
            赋值 (SQL, 相加 (“select * from [”, 数据表名, “] where [name] like ”, #引号, 前一字段, “*”, #引号, “ order by [name] DESC”))
            输出调试文本 (SQL)
            赋值 (记录集句柄1, SQL.查询 ())
            输出调试文本 (相加 (“记录集句柄1: ”, 到文本 (记录集句柄1)))
            .如果真 (大于 (记录集句柄1, 0))
                记录集句柄1.到首记录 ()
                .判断循环首 (等于 (记录集句柄1.尾记录后 (), 假))
                     ' 读出了重名字段的后半部分
                    赋值 (tmpname, 记录集句柄1.读 (“name”))
                    赋值 (tmp, 寻找文本 (tmpname, 前一字段, , 假))
                    赋值 (tmpbh, 取文本中间 (tmpname, 相加 (tmp, 取文本长度 (前一字段)), 相加 (相减 (取文本长度 (tmpname), tmp, 取文本长度 (前一字段)), 1)))
                    输出调试文本 (相加 (“姓名： ”, tmpname, “  ，可能的编号： ”, tmpbh))
                     ' 接下来判断以下可能，比如用like语句，则“张一”和“张一飞”会被判为重名，此时就要判断“飞”字
                     ' 使用“到数值()”函数，非数值被转换为0， 而我们重名编号至少从1开始，故可以判断出来！！！
                    .如果真 (小于 (i, 到数值 (tmpbh)))
                        赋值 (i, 相加 (到数值 (tmpbh), 1))
                    .如果真结束
                    记录集句柄1.到后一记录 ()
                .判断循环尾 ()
                
            .如果真结束
            记录集句柄1.关闭记录集 ()
            
            加入成员 (需更名字段ID, 前一ID)
            加入成员 (需更名字段名称, 前一字段)
            加入成员 (需更名字段编号, i)
            
            加入成员 (需更名字段ID, 当前ID)
            加入成员 (需更名字段名称, 当前字段)
            赋值 (i, 相加 (i, 1))
            加入成员 (需更名字段编号, i)
            
            赋值 (是否第一次重名, 假)
            
        .否则
            加入成员 (需更名字段ID, 当前ID)
            加入成员 (需更名字段名称, 当前字段)
            赋值 (i, 相加 (i, 1))
            加入成员 (需更名字段编号, i)
        .如果结束
        
    .否则
        赋值 (前一字段, 当前字段)
        赋值 (前一ID, 当前ID)
        赋值 (是否第一次重名, 真)
        赋值 (i, 1)
    .如果结束
    
    记录集句柄2.到后一记录 ()
.判断循环尾 ()

关闭 ()

记录集句柄2.关闭记录集 ()
关闭 ()

删除文件 (备份文件名)

赋值 (i, 取数组成员数 (需更名字段名称))
.计次循环首 (i, tmp)
    输出调试文本 (相加 (“ID:”, 到文本 (需更名字段ID [tmp]), “name:”, 需更名字段名称 [tmp], 到文本 (需更名字段编号 [tmp])))
.计次循环尾 ()

.子程序 _按钮重名修复_bad_被单击, 空白型, , 用二个数据库连接组件同时以只读方式打开相同的数据库，不成功，后者记录集句柄为0
.局部变量 数据库文件, 文本型, , , 
.局部变量 需更名字段ID, 整数型, , "0", 
.局部变量 需更名字段名称, 文本型, , "0", 
.局部变量 需更名字段编号, 整数型, , "0", 
.局部变量 i, 整数型, , , 重名字段起始编号
.局部变量 是否第一次重名, 逻辑型, , , 
.局部变量 是否找到最大编号, 逻辑型, , , 
.局部变量 前一字段, 文本型, , , 
.局部变量 前一ID, 整数型, , , 
.局部变量 当前字段, 文本型, , , 
.局部变量 当前ID, 整数型, , , 
.局部变量 SQL, 文本型, , , 
.局部变量 记录集句柄1, 整数型, , , 
.局部变量 记录集句柄2, 整数型, , , 
.局部变量 tmpname, 文本型, , , 
.局部变量 tmp, 整数型, , , 
.局部变量 tmpbh, 文本型, , , 临时编号
.局部变量 匿名局部变量_326, 空白型, , , 

清除数组 (需更名字段ID)
清除数组 (需更名字段名称)
清除数组 (需更名字段编号)
赋值 (是否第一次重名, 真) ' 第一次重名时，要找出重名中已经命名的可能的最大编号，然后往后继续编号，姓名就不会重复了。
赋值 (i, 1)

 ' 打开mdb库中相应数据表
.打开MDB数据库 (.内容, , , 真, )
赋值 (SQL, 相加 (“select * from [”, 数据表名, “] order by [name] asc”))
赋值 (记录集句柄2, SQL.查询 ())
.如果真 (小于或等于 (记录集句柄2, 0))
    信息框 (“查询数据库失败！”, #错误图标, )
    返回 ()
.如果真结束
 ' 当数据库中记录只有一条或没有时，本程序或出错！！！！！！
记录集句柄2.到首记录 ()
赋值 (前一字段, 记录集句柄2.读 (“name”))
赋值 (前一ID, 记录集句柄2.读 (“id”))
记录集句柄2.到后一记录 ()

.判断循环首 (等于 (记录集句柄2.尾记录后 (), 假))
    赋值 (当前字段, 记录集句柄2.读 (“name”))
    赋值 (当前ID, 记录集句柄2.读 (“id”))
    输出调试文本 (相加 (“前一name----”, 前一字段, “,  前一ID----”, 到文本 (前一ID), “  当前name----”, 当前字段, “,  当前ID----”, 到文本 (当前ID)))
    .如果 (等于 (前一字段, 当前字段)) ' 出现同名字段时处理代码
        .如果 (等于 (是否第一次重名, 真))
            .打开MDB数据库 (.内容, , , 真, )
             ' 这里排序用降序order by desc是有讲究×××××，比如用like语句，则“张一”和“张一飞”会被判为重名，
             ' 而这不是我要的字段。我可以用“到后一记录 ()"命令来快速获得重名的最大编号
             ' 发现易支持库一个bug！！！！！：查询sql不支持order排序，所以找最大编号只能遍历全部记录
            赋值 (SQL, 相加 (“select * from [”, 数据表名, “] where [name] like ”, #引号, 前一字段, “*”, #引号, “ order by [name] DESC”))
            输出调试文本 (SQL)
            赋值 (记录集句柄1, SQL.查询 ())
            输出调试文本 (相加 (“记录集句柄1: ”, 到文本 (记录集句柄1)))
            .如果真 (大于 (记录集句柄1, 0))
                记录集句柄1.到首记录 ()
                .判断循环首 (等于 (记录集句柄1.尾记录后 (), 假))
                     ' 读出了重名字段的后半部分
                    赋值 (tmpname, 记录集句柄1.读 (“name”))
                    赋值 (tmp, 寻找文本 (tmpname, 前一字段, , 假))
                    赋值 (tmpbh, 取文本中间 (tmpname, 相加 (tmp, 取文本长度 (前一字段)), 相加 (相减 (取文本长度 (tmpname), tmp, 取文本长度 (前一字段)), 1)))
                    输出调试文本 (相加 (“姓名： ”, tmpname, “  ，可能的编号： ”, tmpbh))
                     ' 接下来判断以下可能，比如用like语句，则“张一”和“张一飞”会被判为重名，此时就要判断“飞”字
                     ' 使用“到数值()”函数，非数值被转换为0， 而我们重名编号至少从1开始，故可以判断出来！！！
                    .如果真 (小于 (i, 到数值 (tmpbh)))
                        赋值 (i, 相加 (到数值 (tmpbh), 1))
                    .如果真结束
                    记录集句柄1.到后一记录 ()
                .判断循环尾 ()
                
            .如果真结束
            记录集句柄1.关闭记录集 ()
            关闭 ()
            加入成员 (需更名字段ID, 前一ID)
            加入成员 (需更名字段名称, 前一字段)
            加入成员 (需更名字段编号, i)
            
            加入成员 (需更名字段ID, 当前ID)
            加入成员 (需更名字段名称, 当前字段)
            赋值 (i, 相加 (i, 1))
            加入成员 (需更名字段编号, i)
            
            赋值 (是否第一次重名, 假)
            
        .否则
            加入成员 (需更名字段ID, 当前ID)
            加入成员 (需更名字段名称, 当前字段)
            赋值 (i, 相加 (i, 1))
            加入成员 (需更名字段编号, i)
        .如果结束
        
    .否则
        赋值 (前一字段, 当前字段)
        赋值 (前一ID, 当前ID)
        赋值 (是否第一次重名, 真)
        赋值 (i, 1)
    .如果结束
    
    记录集句柄2.到后一记录 ()
.判断循环尾 ()

记录集句柄2.关闭记录集 ()
关闭 ()

赋值 (i, 取数组成员数 (需更名字段名称))
.计次循环首 (i, tmp)
    输出调试文本 (相加 (“ID:”, 到文本 (需更名字段ID [tmp]), “name:”, 需更名字段名称 [tmp], 到文本 (需更名字段编号 [tmp])))
.计次循环尾 ()

.子程序 _按钮重名修复_invalid_被单击, 空白型, , 感觉记录集和数据库连接组件同时打开相同的数据库，不成功，后者尾记录后标志为真
.局部变量 数据库文件, 文本型, , , 
.局部变量 需更名字段ID, 整数型, , "0", 
.局部变量 需更名字段名称, 文本型, , "0", 
.局部变量 需更名字段编号, 整数型, , "0", 
.局部变量 i, 整数型, , , 重名字段起始编号
.局部变量 是否第一次重名, 逻辑型, , , 
.局部变量 是否找到最大编号, 逻辑型, , , 
.局部变量 前一字段, 文本型, , , 
.局部变量 前一ID, 整数型, , , 
.局部变量 当前字段, 文本型, , , 
.局部变量 当前ID, 整数型, , , 
.局部变量 SQL, 文本型, , , 
.局部变量 记录集句柄, 整数型, , , 
.局部变量 tmpname, 文本型, , , 
.局部变量 j, 整数型, , , 
.局部变量 tmpbh, 文本型, , , 临时编号
.局部变量 匿名局部变量_273, 空白型, , , 

 ' 代码可能没问题，是我少判断了文件尾标志，已补上。20080628
清除数组 (需更名字段ID)
清除数组 (需更名字段名称)
清除数组 (需更名字段编号)
赋值 (是否第一次重名, 真)
赋值 (i, 1)

 ' 打开mdb库中相应数据表
赋值 (数据库文件, .内容)
.如果真 (等于 (数据库文件.未知支持库函数_1 (“”), 假))
    信息框 (相加 (“无法打开数据库文件”, 数据库文件, “，请检查access软件是否正常可用。”), #错误图标, “出错”)
    返回 ()
.如果真结束
“”.未知支持库函数_47 ()
.未知支持库函数_12 ()
数据表名.未知支持库函数_15 (“name ASC”)
.如果真 (等于 (., 1))
    未知支持库函数_16 ()
    未知支持库函数_3 ()
    返回 ()
.如果真结束
未知支持库函数_34 ()
“name”.未知支持库函数_26 (前一字段)
“id”.未知支持库函数_29 (前一ID)
未知支持库函数_36 ()
.判断循环首 (等于 (., 假))
    “name”.未知支持库函数_26 (当前字段)
    “id”.未知支持库函数_29 (当前ID)
    输出调试文本 (相加 (“前一name----”, 前一字段, “,  前一ID----”, 到文本 (前一ID), “  当前name----”, 当前字段, “,  当前ID----”, 到文本 (当前ID)))
    .如果 (等于 (前一字段, 当前字段)) ' 出现同名字段时处理代码
        .如果 (等于 (是否第一次重名, 真))
            .打开MDB数据库 (.内容, , , 真, )
             ' 这里排序用降序order by desc是有讲究的，比如用like语句，则“张一”和“张一飞”会被判为重名，
             ' 而这不是我要的字段。我可以用“到后一记录 ()"命令来快速获得重名的最大编号
            赋值 (SQL, 相加 (“select * from [”, 数据表名, “] where [name] like %”, 前一字段, “% order by [name] desc”))
            输出调试文本 (SQL)
            赋值 (记录集句柄, SQL.查询 ())
            输出调试文本 (相加 (“记录集句柄: ”, 到文本 (记录集句柄)))
            .如果真 (大于 (记录集句柄, 0))
                记录集句柄.到首记录 ()
                 ' 是否找到最大编号 ＝ 假
                输出调试文本 (相加 (“尾记录后标记：”, 到文本 (记录集句柄.尾记录后 ())))
                .判断循环首 (等于 (记录集句柄.尾记录后 (), 假))
                     ' 读出了重名字段的后半部分
                    赋值 (tmpname, 记录集句柄.读 (“name”))
                    赋值 (j, 寻找文本 (tmpname, 前一字段, , 假))
                    赋值 (tmpbh, 取文本中间 (tmpname, 相加 (j, 取文本长度 (前一字段)), 相加 (相减 (取文本长度 (tmpname), j, 取文本长度 (前一字段)), 1)))
                     ' 接下来判断以下可能，比如用like语句，则“张一”和“张一飞”会被判为重名，此时就要判断“飞”字
                     ' 使用“到数值()”函数，非数值被转换为0， 而我们重名编号至少从1开始，故可以判断出来！！！
                    .如果真 (小于 (i, 到数值 (tmpbh)))
                        赋值 (i, 相加 (到数值 (tmpbh), 1))
                    .如果真结束
                     ' 还没有找到重名字段的最大编号，当然可能没有，没关系，默认i=1
                    记录集句柄.到后一记录 ()
                     ' 是否找到最大编号 ＝ 真
                .判断循环尾 ()
                
            .如果真结束
            关闭 ()
            加入成员 (需更名字段ID, 前一ID)
            加入成员 (需更名字段名称, 前一字段)
            加入成员 (需更名字段编号, i)
            
            加入成员 (需更名字段ID, 当前ID)
            加入成员 (需更名字段名称, 当前字段)
            赋值 (i, 相加 (i, 1))
            加入成员 (需更名字段编号, i)
            
            赋值 (是否第一次重名, 假)
            
        .否则
            加入成员 (需更名字段ID, 当前ID)
            加入成员 (需更名字段名称, 当前字段)
            赋值 (i, 相加 (i, 1))
            加入成员 (需更名字段编号, i)
            
        .如果结束
        
        
    .否则
        赋值 (前一字段, 当前字段)
        赋值 (前一ID, 当前ID)
        赋值 (是否第一次重名, 真)
        赋值 (i, 1)
    .如果结束
    
    未知支持库函数_36 ()
.判断循环尾 ()

未知支持库函数_16 ()
未知支持库函数_3 ()

赋值 (i, 取数组成员数 (需更名字段名称))
.计次循环首 (i, j)
    输出调试文本 (相加 (“ID:”, 到文本 (需更名字段ID [j]), “name:”, 需更名字段名称 [j], 到文本 (需更名字段编号 [j])))
.计次循环尾 ()


 ' 不属于任何一个程序集、类模块的函数：
