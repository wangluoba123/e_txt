 ' 文件类型：Windows模块源码

 ' 程序名称：简单计算器模块
 ' 程序描述：通过某人的计算器程序封装的程序内调用计算器进行简单计算的效果，并且把计算的数值写入设置需要数值的地方，加以利用
 ' 程序作者：白菜
 ' 邮政编码：200433
 ' 联系地址：上海
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：QQ：86085290
 ' 版本号：1.0
 ' 创建号：0.0

窗口 计算器窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 245
    高度 = 221
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 0
    底图方式 = 0
    底色 = 33023 '  0x80FF
    最大化按钮 = 假
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 真
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 已保存到：D:\易语言学习\Data\计算器模块.e\计算器窗口_底图
    图标 =  ' 已保存到：D:\易语言学习\Data\计算器模块.e\计算器窗口_图标.ico
    背景音乐 =  ' 空
    标题 = “小刀计算器”
    帮助文件名 = “”





 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 4 系统核心支持库
 ' iext2 AF6AD80AA4244A59AFB3D83ECF5173CC 1 1 扩展界面支持库二




.全局变量 计算前变量, 文本型, 公开, , 
.全局变量 计算后变量, 文本型, 公开, , 
.全局变量 计算符, 文本型, 公开, , 
.全局变量 MS存储到内存, 文本型, 公开, , 
.全局变量 写入结果变量, 逻辑型, 公开, , 
.全局变量 最后数值, 文本型, 公开, , 

.程序集 程序集1, , , 

.子程序 _启动子程序, 整数型, , 请在本子程序中放置易模块初始化代码

_临时子程序 () ' 在初始化代码执行完毕后调用测试代码
返回 (0) ' 可以根据您的需要返回任意数值

.子程序 _临时子程序, 空白型, , 
 ' 本名称子程序用作测试程序用，仅在开发及调试环境中有效，编译发布程序前将被系统自动清空，请将所有用作测试的临时代码放在本子程序中。 ***注意不要修改本子程序的名称、参数及返回值类型。


.子程序 计算器, 空白型, 公开, 计算器窗口
载入 (计算器窗口, , 真)

.窗口程序集 窗口程序集1, , , 

.子程序 _计算器窗口_创建完毕, 空白型, , 
赋值 (.内容, “0”)
获取焦点 ()
赋值 (MS存储到内存, “0”)

.子程序 _清零_被单击, 空白型, , 
赋值 (.内容, “0”)
获取焦点 ()

.子程序 _CE_被单击, 空白型, , 
赋值 (.内容, “0”)
获取焦点 ()

.子程序 _撤销_被单击, 空白型, , 
.如果 (等于 (到数值 (.内容), 0))
    赋值 (.内容, “0”)
.否则
    .如果 (等于 (取文本长度 (.内容), 1))
        赋值 (.内容, “0”)
    .否则
        赋值 (.内容, 取文本左边 (.内容, 相减 (取文本长度 (.内容), 1)))
    .如果结束
    获取焦点 ()
.如果结束
获取焦点 ()

.子程序 _零_被单击, 空白型, , 
.如果 (等于 (到数值 (.内容), 0))
    赋值 (.内容, “0”)
.否则
    赋值 (.内容, 相加 (.内容, “0”))
.如果结束
获取焦点 ()

.子程序 _壹_被单击, 空白型, , 
.如果 (等于 (到数值 (.内容), 0))
    赋值 (.内容, “1”)
.否则
    赋值 (.内容, 相加 (.内容, “1”))
.如果结束
获取焦点 ()

.子程序 _贰_被单击, 空白型, , 
.如果 (等于 (到数值 (.内容), 0))
    赋值 (.内容, “2”)
.否则
    赋值 (.内容, 相加 (.内容, “2”))
.如果结束
获取焦点 ()

.子程序 _叁_被单击, 空白型, , 
.如果 (等于 (到数值 (.内容), 0))
    赋值 (.内容, “3”)
.否则
    赋值 (.内容, 相加 (.内容, “3”))
.如果结束
获取焦点 ()

.子程序 _肆_被单击, 空白型, , 
.如果 (等于 (到数值 (.内容), 0))
    赋值 (.内容, “4”)
.否则
    赋值 (.内容, 相加 (.内容, “4”))
.如果结束
获取焦点 ()

.子程序 _伍_被单击, 空白型, , 
.如果 (等于 (到数值 (.内容), 0))
    赋值 (.内容, “5”)
.否则
    赋值 (.内容, 相加 (.内容, “5”))
.如果结束
获取焦点 ()

.子程序 _陆_被单击, 空白型, , 
.如果 (等于 (到数值 (.内容), 0))
    赋值 (.内容, “6”)
.否则
    赋值 (.内容, 相加 (.内容, “6”))
.如果结束
获取焦点 ()

.子程序 _柒_被单击, 空白型, , 
.如果 (等于 (到数值 (.内容), 0))
    赋值 (.内容, “7”)
.否则
    赋值 (.内容, 相加 (.内容, “7”))
.如果结束
获取焦点 ()

.子程序 _捌_被单击, 空白型, , 
.如果 (等于 (到数值 (.内容), 0))
    赋值 (.内容, “8”)
.否则
    赋值 (.内容, 相加 (.内容, “8”))
.如果结束
获取焦点 ()

.子程序 _玖_被单击, 空白型, , 
.如果 (等于 (到数值 (.内容), 0))
    赋值 (.内容, “9”)
.否则
    赋值 (.内容, 相加 (.内容, “9”))
.如果结束
获取焦点 ()

.子程序 _点_被单击, 空白型, , 
.如果 (等于 (到数值 (.内容), 0))
    赋值 (.内容, “0”)
.否则
    赋值 (.内容, 相加 (.内容, “.”))
.如果结束
获取焦点 ()

.子程序 _计算结果_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.如果真 (等于 (键代码, #Esc键))
    赋值 (.内容, “0”)
.如果真结束
.如果真 (等于 (键代码, #键0))
    _零_被单击 ()
.如果真结束
.如果真 (等于 (键代码, #键1))
    _壹_被单击 ()
.如果真结束
.如果真 (等于 (键代码, #键2))
    _贰_被单击 ()
.如果真结束
.如果真 (等于 (键代码, #键3))
    _叁_被单击 ()
.如果真结束
.如果真 (等于 (键代码, #键4))
    _肆_被单击 ()
.如果真结束
.如果真 (等于 (键代码, #键5))
    _伍_被单击 ()
.如果真结束
.如果真 (等于 (键代码, #键6))
    _陆_被单击 ()
.如果真结束
.如果真 (等于 (键代码, #键7))
    _柒_被单击 ()
.如果真结束
.如果真 (等于 (键代码, #键8))
    _捌_被单击 ()
.如果真结束
.如果真 (等于 (键代码, #键9))
    _玖_被单击 ()
.如果真结束
.如果真 (等于 (键代码, 107)) ' 加号键
    _加_被单击 ()
.如果真结束
.如果真 (等于 (键代码, #减号键))
    _减_被单击 ()
.如果真结束
.如果真 (等于 (键代码, 106)) ' 乘号键
    _乘_被单击 ()
.如果真结束
.如果真 (等于 (键代码, #除号键))
    _除_被单击 ()
.如果真结束
.如果真 (等于 (键代码, #圆点键))
    _点_被单击 ()
.如果真结束
.如果真 (等于 (键代码, #回车键))
    _等于_被单击 ()
.如果真结束


.子程序 _正负_被单击, 空白型, , 
.如果 (等于 (到数值 (.内容), 0))
    赋值 (.内容, “0”)
.否则
    .如果 (小于 (到数值 (.内容), 0))
        赋值 (.内容, 到文本 (相乘 (到数值 (.内容), -1)))
    .否则
        赋值 (.内容, 到文本 (相乘 (到数值 (.内容), -1)))
    .如果结束
    获取焦点 ()
.如果结束
获取焦点 ()

.子程序 _加_被单击, 空白型, , 
赋值 (计算前变量, .内容)
赋值 (“加”)
赋值 (.内容, “0”)
获取焦点 ()


.子程序 _减_被单击, 空白型, , 
赋值 (计算前变量, .内容)
赋值 (“减”)
赋值 (.内容, “0”)
获取焦点 ()

.子程序 _乘_被单击, 空白型, , 
赋值 (计算前变量, .内容)
赋值 (“乘”)
赋值 (.内容, “0”)
获取焦点 ()

.子程序 _除_被单击, 空白型, , 
赋值 (计算前变量, .内容)
赋值 (“除”)
赋值 (.内容, “0”)
获取焦点 ()


.子程序 _等于_被单击, 空白型, , 
.如果真 (等于 (“加”))
    赋值 (计算后变量, .内容)
    赋值 (.内容, 到文本 (相加 (到数值 (计算前变量), 到数值 (计算后变量))))
.如果真结束
.如果真 (等于 (“减”))
    赋值 (计算后变量, .内容)
    赋值 (.内容, 到文本 (相减 (到数值 (计算前变量), 到数值 (计算后变量))))
.如果真结束
.如果真 (等于 (“乘”))
    赋值 (计算后变量, .内容)
    赋值 (.内容, 到文本 (相乘 (到数值 (计算前变量), 到数值 (计算后变量))))
.如果真结束
.如果真 (等于 (“除”))
    赋值 (计算后变量, .内容)
    赋值 (.内容, 到文本 (相除 (到数值 (计算前变量), 到数值 (计算后变量))))
.如果真结束
获取焦点 ()

.子程序 _分母_被单击, 空白型, , 
赋值 (计算前变量, .内容)
.如果 (等于 (到数值 (), 0))
    赋值 (.内容, “除数不能为零。”)
.否则
    赋值 (.内容, 到文本 (相除 (1, 到数值 (计算前变量))))
.如果结束
获取焦点 ()


.子程序 _开平方_被单击, 空白型, , 
赋值 (计算前变量, .内容)
.如果 (小于 (到数值 (), 0))
    赋值 (.内容, “不能使用负数计算！”)
    获取焦点 ()
.否则
    赋值 (到文本 (求平方根 (到数值 ())))
    赋值 (.内容, 取文本左边 (计算后变量, 70))
    获取焦点 ()
.如果结束


.子程序 _MC_被单击, 空白型, , 
赋值 (.标题, “”)
赋值 (“0”)
获取焦点 ()


.子程序 _MR_被单击, 空白型, , 
赋值 (.内容, MS存储到内存)
获取焦点 ()


.子程序 _MS_被单击, 空白型, , 
赋值 (MS存储到内存, .内容)
赋值 (.标题, “M”)
赋值 (.内容, “0”)
获取焦点 ()


.子程序 _M加_被单击, 空白型, , 
赋值 (MS存储到内存, 到文本 (相加 (到数值 (MS存储到内存), 到数值 (.内容))))
获取焦点 ()

.子程序 _计算器关闭_被单击, 空白型, , 
销毁 ()

.子程序 _写入结果按钮_被单击, 空白型, , 
赋值 (写入结果变量, 真)
赋值 (最后数值, .内容)
销毁 ()


 ' 不属于任何一个程序集、类模块的函数：
