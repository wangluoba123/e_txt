 ' 文件类型：Windows窗口程序

 ' 程序名称：用户配置模块
 ' 程序描述：通用用户配置模块。包含：
1、初始设置
2、用户登录
3、添加用户
4、删除用户
5、修改口令
6、保存信息
7、还原信息
 ' 程序作者：西风
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 添加用户窗口
    左边 = 50
    顶边 = 50
    宽度 = 324
    高度 = 240
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 假
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “添加新用户”
    帮助文件名 = “”

窗口 修改口令窗口
    左边 = 50
    顶边 = 50
    宽度 = 324
    高度 = 240
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 假
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “修改用户口令”
    帮助文件名 = “”

窗口 _启动窗口
    左边 = 50
    顶边 = 50
    宽度 = 324
    高度 = 238
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 真
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 已保存到：D:\易语言学习\Data\PDkglXUV.e\_启动窗口_图标.ico
    背景音乐 =  ' 空
    标题 = “成品仓库库位管理”
    帮助文件名 = “”

窗口 删除用户窗口
    左边 = 50
    顶边 = 50
    宽度 = 324
    高度 = 210
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 假
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “删除用户”
    帮助文件名 = “”

窗口 主窗口
    左边 = 50
    顶边 = 50
    宽度 = 772
    高度 = 609
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 真
    控制按钮 = 假
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 真
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 已保存到：D:\易语言学习\Data\PDkglXUV.e\主窗口_图标.ico
    背景音乐 =  ' 空
    标题 = “成品仓库库位管理 080722测试版 By  大洋”
    帮助文件名 = “”

窗口 窗口输入订单
    左边 = 50
    顶边 = 50
    宽度 = 374
    高度 = 438
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “请输入订单信息”
    帮助文件名 = “”

窗口 窗口关于
    左边 = 50
    顶边 = 50
    宽度 = 350
    高度 = 157
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 6
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “欢迎使用!”
    帮助文件名 = “”

窗口 窗口查询备份
    左边 = 50
    顶边 = 50
    宽度 = 273
    高度 = 77
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “请选择已经备份的日期”
    帮助文件名 = “”

窗口 窗口更改日期
    左边 = 50
    顶边 = 50
    宽度 = 232
    高度 = 31
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 0
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “”
    帮助文件名 = “”

窗口 窗口订单更改
    左边 = 50
    顶边 = 50
    宽度 = 615
    高度 = 445
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “订单明细―更新订单”
    帮助文件名 = “”



.常量 配置文件路径, "0", , 
.常量 配置文件名称, "“ups.dat”", , 
.常量 密匙, "“roBote2”", , 
.常量 订单号, "“订单号”", , 
.常量 区域, "“区域”", , 
.常量 型号, "“型号”", , 
.常量 订单数量, "“订单数量”", , 
.常量 入库日期, "“入库日期”", , 
.常量 出货日期, "“出货日期”", , 
.常量 备注, "“备注”", , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 5 0 系统核心支持库
 ' dp1 4BB4003860154917BC7D8230BF4FA58A 2 0 数据操作支持库一
 ' xplib 7F54B9CE8887428dBA9CEEB94CEF4C72 2 0 XP风格界面库
 ' iext 27bb20fdd3e145e4bee3db39ddd6e64c 2 0 扩展界面支持库一
 ' shell 52F260023059454187AF826A3C07AF2A 3 0 操作系统界面功能支持库
 ' EChartBar 9A3F84D7FDEB4a0486F2711D5104B7F7 2 0 数据图表支持库
 ' iext5 {E5000198-4471-40e2-92BC-D0BA075BDBB2} 2 0 扩展界面支持库五
 ' eAPI F7FC1AE45C5C4758AF03EF19F18A395D 3 0 应用接口支持库
 ' iext2 AF6AD80AA4244A59AFB3D83ECF5173CC 2 0 扩展界面支持库二
 ' spec A512548E76954B6E92C21055517615B0 3 0 特殊功能支持库




.全局变量 当前用户, 文本型, , , 
.全局变量 用户, 文本型, , "0", 
.全局变量 口令, 文本型, , "0", 
.全局变量 所属分类, 文本型, , "0", 
.全局变量 分类, 文本型, , "0", 
.全局变量 权限, 文本型, , "0", 
.全局变量 配置文件, 文本型, , , 
.全局变量 区码, 文本型, , , 
.全局变量 已存区号, 文本型, , , 
.全局变量 右键详情, 文本型, , , 
.全局变量 库位详情信息, 文本型, , , 
.全局变量 总占库位, 整数型, , , 
.全局变量 颜色值, 整数型, , , 
.全局变量 颜色标记, 文本型, , , 
.全局变量 今日日期, 日期时间型, , , 
.全局变量 加一, 整数型, , , 
.全局变量 减一, 整数型, , , 
.全局变量 减二, 整数型, , , 
.全局变量 减三, 整数型, , , 
.全局变量 加三, 整数型, , , 
.全局变量 加二, 整数型, , , 
.全局变量 关键字, 文本型, , , 
.全局变量 查询字段, 整数型, , , 
.全局变量 更改日期, 日期时间型, , , 
.全局变量 订单号码, 文本型, , , 
.全局变量 型号码, 文本型, , , 
.全局变量 数量值, 整数型, , , 
.全局变量 入库日, 日期时间型, , , 
.全局变量 出货日, 日期时间型, , , 
.全局变量 备注信息, 文本型, , , 
.全局变量 M, 整数型, , , 
.全局变量 查询订单号, 文本型, , , 
.全局变量 查询区域, 文本型, , , 
.全局变量 查询型号, 文本型, , , 
.全局变量 查询日期, 文本型, , , 
.全局变量 查询关键字, 文本型, , , 
.全局变量 查询关键字段, 文本型, , , 
.全局变量 查询订单数量, 文本型, , , 
.全局变量 明细关键字, 文本型, , , 
.全局变量 明细订单号, 文本型, , , 
.全局变量 明细区域, 文本型, , , 
.全局变量 明细型号, 文本型, , , 
.全局变量 明细入库日期, 日期时间型, , , 
.全局变量 明细出库日期, 日期时间型, , , 
.全局变量 明细备注, 文本型, , , 

.窗口程序集 添加用户程序集, , , 

.子程序 _取消按钮_被单击, 空白型, , 
销毁 ()

.子程序 _确定按钮_被单击, 空白型, , 
.局部变量 变量1, 整数型, , , 

.如果真 (等于 (删首尾空 (.内容), “”))
    信息框 (“用户名不能为空，请输入用户名！”, #信息图标, “错误”)
    获取焦点 ()
    赋值 (.被选择字符数, -1)
    返回 ()
.如果真结束
.计次循环首 (取数组成员数 (用户), 变量1) ' 判断是否已经存在该用户名
    .如果真 (等于 (用户 [变量1], 删首尾空 (.内容)))
        信息框 (相加 (“用户名”, #左引号, .内容, #右引号, “已经存在，请勿重复添加！”), #信息图标, “错误”)
        返回 ()
    .如果真结束
    
.计次循环尾 ()
.如果 (等于 (.内容, .内容))
    .如果真 (等于 (.内容, “”))
        信息框 (“用户口令不能为空，请重新输入用户口令！”, #信息图标, “错误”)
        获取焦点 ()
        赋值 (.被选择字符数, -1)
        返回 ()
    .如果真结束
    加入成员 (用户, 删首尾空 (.内容))
    配置文件_添加用户 (删首尾空 (.内容), 未知支持库函数_2 (到字节集 (.内容)), .取项目文本 (.现行选中项))
    连续赋值 (“”, .内容, .内容, .内容)
    获取焦点 ()
.否则
    信息框 (“密码复核错误，请重新设置密码！”, #错误图标, )
    获取焦点 ()
    返回 ()
.如果结束


.子程序 _添加用户窗口_创建完毕, 空白型, , 
.局部变量 变量1, 整数型, , , 

赋值 (., 真)
.计次循环首 (取数组成员数 (分类), 变量1)
    分类.加入项目 ( [变量1], )
.计次循环尾 ()

.子程序 _确定按钮_获得焦点, 空白型, , 
赋值 (.类型, 1)
赋值 (.类型, 0)

.子程序 _取消按钮_获得焦点, 空白型, , 
赋值 (.类型, 0)
赋值 (.类型, 1)

.子程序 _用户编辑框_获得焦点, 空白型, , 
赋值 (.类型, 1)
赋值 (.类型, 0)
赋值 (.被选择字符数, -1)

.子程序 _口令编辑框_获得焦点, 空白型, , 
赋值 (.类型, 1)
赋值 (.类型, 0)
赋值 (.被选择字符数, -1)

.子程序 _复核口令编辑框_获得焦点, 空白型, , 
赋值 (.类型, 1)
赋值 (.类型, 0)
赋值 (.被选择字符数, -1)

.窗口程序集 修改口令程序集, , , 

.程序集变量 原来口令, 文本型, , , 
.子程序 _修改口令窗口_创建完毕, 空白型, , 
赋值 (.内容, 当前用户)
连续赋值 (真, .禁止, .禁止)
赋值 (原来口令, 配置文件_取口令 (当前用户))
赋值 (., 真)

.子程序 _原口令编辑框_内容被改变, 空白型, , 
.如果 (等于 (未知支持库函数_2 (到字节集 (.内容)), 原来口令))
    连续赋值 (假, .禁止, .禁止)
.否则
    连续赋值 (真, .禁止, .禁止)
.如果结束


.子程序 _取消按钮_被单击, 空白型, , 
销毁 ()

.子程序 _确定按钮_被单击, 空白型, , 
.如果真 (不等于 (未知支持库函数_2 (到字节集 (.内容)), 原来口令))
    信息框 (“原始口令错误，请重新输入。如果你不知道原始口令，你将无权修改。”, #信息图标, “警告”)
    获取焦点 ()
    赋值 (.被选择字符数, -1)
    返回 ()
.如果真结束
.如果 (等于 (.内容, .内容))
    .如果真 (等于 (.内容, “”))
        信息框 (“用户口令不能为空，请重新输入用户新口令！”, #信息图标, “错误”)
        获取焦点 ()
        赋值 (.被选择字符数, -1)
        返回 ()
    .如果真结束
    配置文件_修改口令 (当前用户, 未知支持库函数_2 (到字节集 (.内容)))
    销毁 ()
.否则
    信息框 (“新密码复核错误，请重新设置密码！”, #错误图标, )
    获取焦点 ()
    返回 ()
.如果结束


.子程序 _原口令编辑框_获得焦点, 空白型, , 
赋值 (.被选择字符数, -1)
赋值 (.类型, 1)
赋值 (.类型, 0)

.子程序 _新口令编辑框_获得焦点, 空白型, , 
赋值 (.被选择字符数, -1)
赋值 (.类型, 1)
赋值 (.类型, 0)

.子程序 _复核口令编辑框_获得焦点, 空白型, , 
赋值 (.被选择字符数, -1)
赋值 (.类型, 1)
赋值 (.类型, 0)

.子程序 _确定按钮_获得焦点, 空白型, , 
赋值 (.类型, 1)
赋值 (.类型, 0)

.子程序 _取消按钮_获得焦点, 空白型, , 
赋值 (.类型, 0)
赋值 (.类型, 1)

.窗口程序集 登录程序集, , , 

.程序集变量 错误次数, 字节型, , , 
.程序集变量 保存的口令, 文本型, , , 
.子程序 __启动窗口_创建完毕, 空白型, , 
.局部变量 变量1, 整数型, , , 
.局部变量 路径, 文本型, , , 


未知支持库函数_0 (#)
.判断开始 (等于 (#配置文件路径, 0))
    赋值 (配置文件, 相加 (取运行目录 (), “\”, #配置文件名称))
.判断 (等于 (#配置文件路径, 1))
    赋值 (配置文件, 相加 (未知支持库函数_7 (9), “\”, #配置文件名称))
.判断 (等于 (#配置文件路径, 2))
    赋值 (配置文件, 相加 (未知支持库函数_7 (10), “\”, #配置文件名称))
.默认
    赋值 (配置文件, #配置文件名称)
.判断结束
赋值 (配置文件, 子文本替换 (配置文件, “\\”, “\”, , , 真))
赋值 (路径, 取文本左边 (配置文件, 相减 (倒找文本 (配置文件, “\”, , 假), 1))) ' 取出保存路径，如果目录不存在，则创建它。
.如果真 (不等于 (路径, “”))
    .如果真 (等于 (创建多级目录 (路径), 假))
        信息框 (“创建配置文件路径失败。”, #错误图标, )
        结束 ()
    .如果真结束
    
.如果真结束
配置文件_取分类 ()
.如果真 (等于 (配置文件_取用户 (), 0)) ' 如果取用户失败，说明是第一次运行，用户信息还未保存至文件，就写出默认用户信息。
     ' 将用户各种信息分割，并保存为文本数组。以写入配置文件。
    赋值 (分类, 分割文本 (“仓库管理员★§☆其他人员★§☆”, “★§☆”, ))
    赋值 (权限, 分割文本 (“真★§☆假★§☆”, “★§☆”, ))
    赋值 (所属分类, 分割文本 (“仓库管理员★§☆”, “★§☆”, ))
    赋值 (用户, 分割文本 (“张辉★§☆”, “★§☆”, ))
    赋值 (口令, 分割文本 (“e10adc3949ba59abbe56e057f20f883e★§☆”, “★§☆”, ))
    配置文件_写用户信息 (用户, 口令, 所属分类, 分类, 权限)
.如果真结束
.计次循环首 (取数组成员数 (用户), 变量1) ' 将所有用户加入用户组合框。
    用户.加入项目 ( [变量1], )
.计次循环尾 ()
赋值 (.现行选中项, 0)
获取焦点 ()
赋值 (错误次数, 0)
取出保存密码信息 ()
赋值 (., 真)

.子程序 _登录按钮_被单击, 空白型, , 
.局部变量 当前密码, 文本型, , , 
.局部变量 输入密码, 文本型, , , 

赋值 (当前密码, 配置文件_取口令 (.取项目文本 (.现行选中项)))
.如果 (并且 (等于 (.内容, “************”), 不等于 (保存的口令, “”)))
    赋值 (输入密码, 保存的口令)
.否则
    赋值 (输入密码, 未知支持库函数_2 (到字节集 (.内容)))
.如果结束
.如果 (等于 (输入密码, 当前密码))
    赋值 (当前用户, .取项目文本 (.现行选中项))
    记录保存密码信息 () ' 记录是否保存密码的设置。
    .如果真 (等于 (是否已创建 (主窗口), 假))
        载入 (主窗口, , 假)
    .如果真结束
    销毁 ()
.否则
    赋值 (错误次数, 相加 (错误次数, 1)) ' 累计口令输入错误次数，达3次，则认为是非法登录，程序强行退出。
    .如果 (小于 (错误次数, 3))
        信息框 (“用户口令不正确，请重新输入！”, #信息图标, “错误”)
        返回 ()
        获取焦点 ()
    .否则
        信息框 (“用户口令不正确，请勿非法登录！”, #警告图标, “错误”)
        销毁 ()
        .如果真 (等于 (是否已创建 (主窗口), 假))
            结束 ()
        .如果真结束
        
    .如果结束
    
.如果结束


.子程序 记录保存密码信息, 空白型, , 
配置文件_写是否保存密码 (当前用户, .选中)

.子程序 _取消按钮_被单击, 空白型, , 
销毁 ()
.如果真 (等于 (是否已创建 (主窗口), 假)) ' 如果不是重登录，则结束程序。否则，返回主窗口。
    结束 ()
.如果真结束


.子程序 _登录按钮_获得焦点, 空白型, , 
赋值 (.类型, 1)
赋值 (.类型, 0)

.子程序 _取消按钮_获得焦点, 空白型, , 
赋值 (.类型, 0)
赋值 (.类型, 1)

.子程序 _用户组合框_获得焦点, 空白型, , 
赋值 (.类型, 1)
赋值 (.类型, 0)

.子程序 _口令编辑框_获得焦点, 空白型, , 
赋值 (.类型, 1)
赋值 (.类型, 0)
赋值 (.被选择字符数, -1)

.子程序 __启动窗口_可否被关闭, 逻辑型, , 
.如果真 (等于 (是否已创建 (主窗口), 假))
    结束 ()
.如果真结束
返回 (真)

.子程序 _用户组合框_列表项被选择, 空白型, , 
赋值 (.内容, “”)
取出保存密码信息 ()

.子程序 取出保存密码信息, 空白型, , 
赋值 (.选中, 配置文件_取是否保存密码 (.取项目文本 (.现行选中项))) ' 如果设置为记住密码，则选中，且口令编辑框中自动填入密码。否则，不选。
.如果 (.选中)
    赋值 (保存的口令, 配置文件_取口令 (.取项目文本 (.现行选中项)))
    赋值 (.内容, “************”)
.否则
    赋值 (.内容, “”)
.如果结束

.窗口程序集 删除用户程序集, , , 

.子程序 _删除用户窗口_创建完毕, 空白型, , 
.局部变量 变量1, 整数型, , , 

.如果 (大于 (取数组成员数 (用户), 1)) ' 保留第一个用户（一般为默认用户）不允许被删除，其余用户均加入到组合框中，供用户选择删除。
    .计次循环首 (取数组成员数 (用户), 变量1)
        .如果真 (大于 (变量1, 1))
            用户.加入项目 ( [变量1], )
        .如果真结束
        
    .计次循环尾 ()
    赋值 (.现行选中项, 0)
    获取焦点 ()
.否则
    信息框 (“没有可以删除的用户！”, #信息图标, “错误”)
    销毁 ()
.如果结束


.子程序 _删除按钮_获得焦点, 空白型, , 
赋值 (.类型, 1)
赋值 (.类型, 0)

.子程序 _取消按钮_获得焦点, 空白型, , 
赋值 (.类型, 0)
赋值 (.类型, 1)

.子程序 _用户组合框_获得焦点, 空白型, , 
赋值 (.类型, 0)
赋值 (.类型, 1)

.子程序 _取消按钮_被单击, 空白型, , 
销毁 ()

.子程序 _删除按钮_被单击, 空白型, , 
.局部变量 删除用户, 文本型, , , 

赋值 (删除用户, .取项目文本 (.现行选中项))
.如果真 (等于 (信息框 (相加 (“真的要删除用户”, 删除用户, “吗？”), 相加 (#询问图标, #确认取消钮), “删除用户”), #确认钮))
    删除成员 (用户, 相加 (.现行选中项, 2), )
    配置文件_删除用户 (删除用户)
    .删除项目 (.现行选中项)
    赋值 (.现行选中项, 0)
.如果真结束
.如果真 (等于 (删除用户, 当前用户))
    信息框 (“当前登录用户被删除，程序将被关闭。请重新运行本程序并以其他用户身份登录。”, #信息图标, )
    结束 ()
.如果真结束
.如果真 (等于 (取项目数 (), 0))
    销毁 ()
.如果真结束


.窗口程序集 主窗口程序集, , , 

.子程序 _重登录_被选择, 空白型, , 
载入 (_启动窗口, , 真)

.子程序 _添加用户_被选择, 空白型, , 
.局部变量 变量1, 整数型, , , 
.局部变量 所在分类, 文本型, , , 

.如果 (等于 (配置文件_取用户权限 (当前用户, 所在分类), 假)) ' 判断是否有设置用户的权限。
    信息框 (相加 (“    你所属的分类(级别)是”, #左引号, 所在分类, #右引号, “，无执行此操作的权限，请用默认管理”, #换行符, “员或其他有此权限的用户身份重新登录！”), #信息图标, )
.否则
    载入 (添加用户窗口, , 真)
.如果结束

.子程序 _删除用户_被选择, 空白型, , 
.局部变量 变量1, 整数型, , , 
.局部变量 所在分类, 文本型, , , 

.如果 (等于 (配置文件_取用户权限 (当前用户, 所在分类), 假)) ' 判断是否有设置用户的权限。
    信息框 (相加 (“    你所属的分类(级别)是”, #左引号, 所在分类, #右引号, “，无执行此操作的权限，请用默认管理”, #换行符, “员或其他有此权限的用户身份重新登录！”), #信息图标, )
.否则
    载入 (删除用户窗口, , 真)
.如果结束

.子程序 _修改口令_被选择, 空白型, , 
载入 (修改口令窗口, , 真)

.子程序 _备份用户信息_被选择, 空白型, , 
.局部变量 备份文件名, 文本型, , , 

赋值 (.标题, “请选择要备份到的文件名：”)
赋值 (.类型, 1)
赋值 (.过滤器, “用户信息备份文件(*.usb)|*.usb|所有文件(*.*)|*.*”) ' 备份文件的扩展名可以为任意支持的文本，请自己修改过滤器。
赋值 (.默认文件后缀, “usb”)
赋值 (.不改变目录, 真)
.如果 (打开 ())
    赋值 (备份文件名, .文件名)
.否则
    返回 ()
.如果结束
.如果真 (并且 (等于 (文件是否存在 (备份文件名), 真), 等于 (删除文件 (备份文件名), 假))) ' 备份文件如果已经存在，则先删除之。如果删除失败，则备份也将失败。
    信息框 (“用户信息备份失败！请检查你设置的备份文件是否可写。”, #信息图标, “错误”)
    返回 ()
.如果真结束
.如果 (复制文件 (配置文件, 备份文件名)) ' 直接复制用户信息文件至指定文件，即完成备份。
    信息框 (“用户信息备份完成！你可以在以后使用其还原用户信息。”, #信息图标, “备份完成”)
    返回 ()
.否则
    信息框 (“用户信息备份失败！请检查你设置的备份文件是否可写。”, #信息图标, “备份失败”)
    返回 ()
.如果结束

.子程序 _还原用户信息_被选择, 空白型, , 
.局部变量 备份文件名, 文本型, , , 

.如果真 (等于 (信息框 (相加 (“    由于本程序不会对你所指定的用户信息备份文件格式进行校验，如果你指定的用户信息备份文件格式有误，将会导致现有用户信息丢失。”, #换行符, “    强烈建议你在还原用户信息之前，先备份现有用户信息。”, #换行符, “    你确定现在开始从备份文件还原用户信息吗？”), 相加 (#信息图标, #是否钮, #默认按钮二), ), #否钮))
    返回 ()
.如果真结束
赋值 (.标题, “请选择备份的用户信息文件名：”)
赋值 (.类型, 0)
赋值 (.过滤器, “用户信息备份文件(*.usb)|*.usb|所有文件(*.*)|*.*”) ' 备份文件的扩展名可以为任意支持的文本，请自己修改过滤器。但请确保备份时设置的扩展名与还原时设置的扩展名一致。
赋值 (.默认文件后缀, “usb”)
赋值 (.不改变目录, 真)
.如果 (打开 ())
    赋值 (备份文件名, .文件名)
.否则
    返回 ()
.如果结束
.如果 (复制文件 (备份文件名, 配置文件)) ' 将备份文件复制并覆盖现有用户信息文件，完成恢复。
    信息框 (“用户信息还原完成！请重新运行本程序。”, #信息图标, “备份完成”)
    结束 ()
.否则
    信息框 (“用户信息还原失败！请检查你的系统并稍后再试。”, #信息图标, “备份完成”)
    返回 ()
.如果结束

.子程序 _关闭系统_被选择, 空白型, , 
.判断开始 (等于 (信息框 (“是否决定退出系统?”, 1, “欢迎使用仓库管理软件!”), 0))
    配置颜色 ()
    
    销毁 ()
    
    返回 ()
.默认
    
.判断结束


.子程序 _库位总览_被选择, 空白型, , 
赋值 (.现行子夹, 0)
配置颜色 ()
文字信息 ()



.子程序 _A区库位_被选择, 空白型, , 
赋值 (.现行子夹, 1)
设置色彩A ()
分区信息 ()


.子程序 _B区库位_被选择, 空白型, , 
赋值 (.现行子夹, 2)
设置色彩B ()

分区信息 ()


.子程序 _C区库位_被选择, 空白型, , 
赋值 (.现行子夹, 3)
设置色彩C ()

分区信息 ()


.子程序 _D区库位_被选择, 空白型, , 
赋值 (.现行子夹, 4)
设置色彩D ()

分区信息 ()


.子程序 _E区库位_被选择, 空白型, , 
赋值 (.现行子夹, 5)
设置色彩E ()
分区信息 ()

.子程序 _短期预警_被选择, 空白型, , 
赋值 (.现行子夹, 8)
_按钮清空_被单击 ()

文字信息 ()


.子程序 _画板A1_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (区码, .标记)
弹出菜单 ()



.子程序 _查询更新_被选择, 空白型, , 
赋值 (.现行子夹, 7)
全部删除 ()
超级列表框刷新 ()



.子程序 _画板A2_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (区码, .标记)
弹出菜单 ()



.子程序 _画板A3_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (区码, .标记)
弹出菜单 ()



.子程序 _画板A4_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (区码, .标记)
弹出菜单 ()



.子程序 _画板A5_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (区码, .标记)
弹出菜单 ()


.子程序 _画板A6_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (区码, .标记)
弹出菜单 ()



.子程序 _画板A7_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (区码, .标记)
弹出菜单 ()



.子程序 _画板A8_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (区码, .标记)
弹出菜单 ()


.子程序 _画板A9_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (区码, .标记)
弹出菜单 ()


.子程序 _画板A10_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (区码, .标记)
弹出菜单 ()


.子程序 _画板A11_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (区码, .标记)
弹出菜单 ()


.子程序 _画板A12_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (区码, .标记)
弹出菜单 ()


.子程序 _画板A13_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (区码, .标记)
弹出菜单 ()


.子程序 _画板A14_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (区码, .标记)
弹出菜单 ()


.子程序 _画板A15_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (区码, .标记)
弹出菜单 ()


.子程序 _画板A16_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (区码, .标记)
弹出菜单 ()


.子程序 配置颜色, 空白型, , 
.局部变量 N, 整数型, , , 
.局部变量 区域号, 文本型, , , 
.局部变量 出货日期, 日期时间型, , , 

赋值 (总占库位, 取行数 ())
赋值 (今日日期, .今天)

.计次循环首 (总占库位, N)
    赋值 (区域号, N.取文本 (2))
    赋值 (出货日期, 到时间 (N.取文本 (6)))
     ' .如果 (大于 (取时间间隔 (出货日期, 今日日期, #日), 3))
        写配置项 (相加 (取运行目录 (), “\clor.ini”), 区域号, “颜色”, “蓝色”)
        
    .否则
        .如果 (并且 (小于 (取时间间隔 (出货日期, 今日日期, #日), 3), 大于 (取时间间隔 (出货日期, 今日日期, #日), 0)))
            写配置项 (相加 (取运行目录 (), “\clor.ini”), 区域号, “颜色”, “红色”)
        .否则
            .如果 (并且 (小于 (取时间间隔 (出货日期, 今日日期, #日), 0), 不等于 (N.取文本 (6), “”)))
                
                写配置项 (相加 (取运行目录 (), “\clor.ini”), 区域号, “颜色”, “黑色”)
            .否则
                写配置项 (相加 (取运行目录 (), “\clor.ini”), 区域号, “颜色”, “蓝色”)
            .如果结束
            
            
        .如果结束
        
    .如果结束
    
    赋值 (N, 相加 (N, 1))
    
.计次循环尾 ()


.子程序 设置色彩A, 空白型, , 

 ' =============================A区===================================
赋值 (颜色标记, .标记)
判断颜色情况 ()
赋值 (.画板背景色, 颜色值)
赋值 (.画板背景色, 颜色值)
 ' =======================
赋值 (颜色标记, .标记)
判断颜色情况 ()
赋值 (.画板背景色, 颜色值)
赋值 (.画板背景色, 颜色值)
 ' =======================
赋值 (颜色标记, .标记)
判断颜色情况 ()
赋值 (.画板背景色, 颜色值)
赋值 (.画板背景色, 颜色值)
 ' =======================
赋值 (颜色标记, .标记)
判断颜色情况 ()
赋值 (.画板背景色, 颜色值)
赋值 (.画板背景色, 颜色值)
 ' =======================
赋值 (颜色标记, .标记)
判断颜色情况 ()
赋值 (.画板背景色, 颜色值)
赋值 (.画板背景色, 颜色值)
 ' =======================
赋值 (颜色标记, .标记)
判断颜色情况 ()
赋值 (.画板背景色, 颜色值)
赋值 (.画板背景色, 颜色值)
 ' =======================
赋值 (颜色标记, .标记)
判断颜色情况 ()
赋值 (.画板背景色, 颜色值)
赋值 (.画板背景色, 颜色值)
 ' =======================
赋值 (颜色标记, .标记)
判断颜色情况 ()
赋值 (.画板背景色, 颜色值)
赋值 (.画板背景色, 颜色值)
 ' =======================
赋值 (颜色标记, .标记)
判断颜色情况 ()
赋值 (.画板背景色, 颜色值)
赋值 (.画板背景色, 颜色值)
 ' =======================
赋值 (颜色标记, .标记)
判断颜色情况 ()
赋值 (.画板背景色, 颜色值)
赋值 (.画板背景色, 颜色值)
 ' =======================
赋值 (颜色标记, .标记)
判断颜色情况 ()
赋值 (.画板背景色, 颜色值)
赋值 (.画板背景色, 颜色值)
 ' =======================
赋值 (颜色标记, .标记)
判断颜色情况 ()
赋值 (.画板背景色, 颜色值)
赋值 (.画板背景色, 颜色值)
 ' =======================
赋值 (颜色标记, .标记)
判断颜色情况 ()
赋值 (.画板背景色, 颜色值)
赋值 (.画板背景色, 颜色值)
 ' =======================
赋值 (颜色标记, .标记)
判断颜色情况 ()
赋值 (.画板背景色, 颜色值)
赋值 (.画板背景色, 颜色值)
 ' =======================
赋值 (颜色标记, .标记)
判断颜色情况 ()
赋值 (.画板背景色, 颜色值)
赋值 (.画板背景色, 颜色值)
 ' =======================
赋值 (颜色标记, .标记)
判断颜色情况 ()
赋值 (.画板背景色, 颜色值)
赋值 (.画板背景色, 颜色值)
 ' =======================
 ' =======================



.子程序 判断颜色情况, 空白型, , 

.如果 (等于 (读配置项 (相加 (取运行目录 (), “\clor.ini”), 颜色标记, “颜色”, ), “红色”))
    赋值 (颜色值, 取颜色值 (255, 0, 0))
.否则
    .如果 (等于 (读配置项 (相加 (取运行目录 (), “\clor.ini”), 颜色标记, “颜色”, ), “绿色”))
        赋值 (颜色值, 取颜色值 (0, 255, 0))
    .否则
        .如果 (等于 (读配置项 (相加 (取运行目录 (), “\clor.ini”), 颜色标记, “颜色”, ), “蓝色”))
            赋值 (颜色值, 取颜色值 (0, 0, 255))
        .否则
            .如果 (等于 (读配置项 (相加 (取运行目录 (), “\clor.ini”), 颜色标记, “颜色”, ), “黑色”))
                赋值 (颜色值, 取颜色值 (0, 0, 0))
            .否则
                
            .如果结束
            
        .如果结束
        
    .如果结束
    
.如果结束



.子程序 _查看详情_被选择, 空白型, , 
判断库位情况 ()
 ' 取鼠标水平位置 ().未知支持库函数_26 (取鼠标垂直位置 (), 库位详情信息, -1, 真)
赋值 (库位详情信息, “”)


.子程序 _订单设置_被选择, 空白型, , 
.局部变量 N, 整数型, , , 
.局部变量 存区号, 文本型, , , 


.如果 (不等于 (订单号码, “”))
     ' 信息框 (“目前未结束加入库位操作！”, 0, “警告”)
    返回 ()
    
.否则
    
.如果结束


赋值 (N, 0)

.计次循环首 (取行数 (), N)
    赋值 (存区号, N.取文本 (2))
    .判断开始 (等于 (区码, 存区号))
        信息框 (“已有成品,不能放置!”, 0, )
        返回 ()
    .默认
        赋值 (N, 相加 (N, 1))
    .判断结束
    
.计次循环尾 ()
载入 (窗口输入订单, , 假)
赋值 (窗口输入订单..现行子夹, 1)


.子程序 _高级表格1_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

 ' 弹出菜单 ()


.子程序 _主窗口_创建完毕, 空白型, , 


赋值 (.数据库文件名, 相加 (取运行目录 (), “\库位数据.edb”))
打开 (相加 (取运行目录 (), “\库位数据.edb”), , , , , , )
赋值 (.现行子夹, 10)

超级列表框刷新 ()


配置颜色 ()
设置色彩A ()
设置色彩B ()
设置色彩C ()
设置色彩D ()
设置色彩E ()

文字信息 ()
系统配置 ()

.子程序 判断库位情况, 空白型, , 
.局部变量 N, 整数型, , , 
.局部变量 订单号, 文本型, , , 
.局部变量 区域号, 文本型, , , 
.局部变量 型号, 文本型, , , 
.局部变量 数量, 文本型, , , 
.局部变量 入库日期, 文本型, , , 
.局部变量 出货日期, 文本型, , , 

赋值 (N, 0)

.计次循环首 (取行数 (), N)
    赋值 (已存区号, N.取文本 (2))
    .判断开始 (等于 (区码, 已存区号))
        赋值 (订单号, N.取文本 (1))
        赋值 (区域号, N.取文本 (2))
        赋值 (型号, N.取文本 (3))
        赋值 (数量, N.取文本 (4))
        赋值 (入库日期, N.取文本 (5))
        赋值 (出货日期, N.取文本 (6))
        赋值 (库位详情信息, 相加 (“订单号：”, 订单号, #换行符, “区域号：”, 区域号, #换行符, “型号：”, 型号, #换行符, “数量：”, 数量, #换行符, “入库日期：”, 入库日期, #换行符, “出货日期：”, 出货日期, #换行符))
        
    .默认
        
        
    .判断结束
    
    赋值 (N, 相加 (N, 1))
    
.计次循环尾 ()


.子程序 _备份查看_被选择, 空白型, , 
 ' 载入 (窗口查询备份, , 真)


.子程序 文字信息, 空白型, , 
.局部变量 区域号, 文本型, , , 
.局部变量 订单号, 文本型, , , 
.局部变量 N, 整数型, , , 



赋值 (M, 0)

.计次循环首 (取行数 (), N)
    赋值 (区域号, N.取文本 (2))
    .如果 (大于 (寻找文本 (区域号, “A”, 0, 真), 0))
        赋值 (M, 相加 (M, 1))
    .否则
        
    .如果结束
    
    .如果 (大于 (寻找文本 (区域号, “D”, 0, 真), 0))
        赋值 (M, 相加 (M, 1))
    .否则
        
    .如果结束
    
    
    
    
    
    赋值 (N, 相加 (N, 1))
.计次循环尾 ()

 ' ==========================总览信息
赋值 (.内容, 相加 (“今日日期：”, 到文本 (取日期 (.今天)), #换行符, “总库位：87库位”, #换行符, “已经用库位：”, 到文本 (相加 (取行数 (), M)), “库位”, #换行符, “使用率：”, 到文本 (取整 (相乘 (相除 (相加 (取行数 (), M), 87), 100))), “%”))
赋值 (., 0)
赋值 (., 相加 (取行数 (), M))
赋值 (., 1)
赋值 (., 相减 (87, 取行数 (), M))
 ' ============================
赋值 (.内容, 相加 (“今日日期：”, 到文本 (取日期 (.今天)), #换行符, “总库位：87库位”, #换行符, “已经用库位：”, 到文本 (相加 (取行数 (), M)), “库位”, #换行符, “使用率：”, 到文本 (取整 (相乘 (相除 (相加 (取行数 (), M), 87), 100))), “%”))

分区信息 ()

 ' ===========================B区右键信息

.子程序 _画板B1_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (区码, .标记)
弹出菜单 ()



.子程序 _画板B2_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (区码, .标记)
弹出菜单 ()



.子程序 _画板B3_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (区码, .标记)
弹出菜单 ()



.子程序 _画板B4_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (区码, .标记)
弹出菜单 ()



.子程序 _画板B5_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (区码, .标记)
弹出菜单 ()


.子程序 _画板B6_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (区码, .标记)
弹出菜单 ()



.子程序 _画板B7_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (区码, .标记)
弹出菜单 ()















 ' ===========================C区右键信息


.子程序 _画板B8_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (区码, .标记)
弹出菜单 ()


.子程序 _画板B9_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (区码, .标记)
弹出菜单 ()


.子程序 _画板B10_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (区码, .标记)
弹出菜单 ()


.子程序 _画板B11_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (区码, .标记)
弹出菜单 ()


.子程序 _画板B12_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (区码, .标记)
弹出菜单 ()


.子程序 _画板B13_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (区码, .标记)
弹出菜单 ()


.子程序 _画板B14_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (区码, .标记)
弹出菜单 ()


.子程序 _画板B15_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (区码, .标记)
弹出菜单 ()


.子程序 _画板B16_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (区码, .标记)
弹出菜单 ()


.子程序 _画板B17_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (区码, .标记)
弹出菜单 ()

.子程序 _画板C1_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (区码, .标记)
弹出菜单 ()



.子程序 _画板C2_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (区码, .标记)
弹出菜单 ()



.子程序 _画板C3_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (区码, .标记)
弹出菜单 ()



.子程序 _画板C4_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (区码, .标记)
弹出菜单 ()



.子程序 _画板C5_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (区码, .标记)
弹出菜单 ()


.子程序 _画板C6_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (区码, .标记)
弹出菜单 ()



.子程序 _画板C7_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (区码, .标记)
弹出菜单 ()



.子程序 _画板C8_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (区码, .标记)
弹出菜单 ()



.子程序 _画板C9_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (区码, .标记)
弹出菜单 ()



.子程序 _画板C10_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (区码, .标记)
弹出菜单 ()
 ' ===========================C区右键信息



.子程序 _画板D1_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (区码, .标记)
弹出菜单 ()



.子程序 _画板D2_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (区码, .标记)
弹出菜单 ()



.子程序 _画板D3_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (区码, .标记)
弹出菜单 ()



.子程序 _画板D4_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (区码, .标记)
弹出菜单 ()



.子程序 _画板D5_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (区码, .标记)
弹出菜单 ()


.子程序 _画板D6_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (区码, .标记)
弹出菜单 ()



.子程序 _画板D7_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (区码, .标记)
弹出菜单 ()



.子程序 _画板D8_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (区码, .标记)
弹出菜单 ()



.子程序 _画板E1_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (区码, .标记)
弹出菜单 ()



.子程序 _画板E2_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (区码, .标记)
弹出菜单 ()



.子程序 _画板E3_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (区码, .标记)
弹出菜单 ()



.子程序 _画板E4_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (区码, .标记)
弹出菜单 ()



.子程序 _画板E5_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (区码, .标记)
弹出菜单 ()


.子程序 _画板E6_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (区码, .标记)
弹出菜单 ()



.子程序 _画板E7_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (区码, .标记)
弹出菜单 ()



.子程序 _画板E8_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (区码, .标记)
弹出菜单 ()


.子程序 _画板E9_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (区码, .标记)
弹出菜单 ()


.子程序 _画板E10_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (区码, .标记)
弹出菜单 ()


.子程序 _画板E11_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (区码, .标记)
弹出菜单 ()


.子程序 _画板E12_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

赋值 (区码, .标记)
弹出菜单 ()


.子程序 _按钮确定曲线_被单击, 空白型, , 
.判断开始 (或者 (等于 (.内容, “”), 等于 (.内容, “”), 等于 (.内容, “”), 等于 (.内容, “”), 等于 (.内容, “”), 等于 (.内容, “”)))
    信息框 (“请将信息输入完整!”, 0, “警告!”)
    返回 ()
    
.默认
    
.判断结束

赋值 (加一, 取整 (相除 (到整数 (.内容), 555)))

赋值 (加二, 取整 (相除 (到整数 (.内容), 555)))

赋值 (加三, 取整 (相除 (到整数 (.内容), 555)))

赋值 (减一, 取整 (相除 (到整数 (.内容), 555)))

赋值 (减二, 取整 (相除 (到整数 (.内容), 555)))

赋值 (减三, 取整 (相除 (到整数 (.内容), 555)))
 ' 连续赋值 (“”, .内容, .内容, .内容, .内容, .内容, .内容)

预警程序 ()

.子程序 预警程序, 空白型, , 
.局部变量 今日库位, 整数型, , , 

赋值 (今日库位, 相加 (取行数 (), M))
赋值 (., 0)
赋值 (., 相乘 (相除 (今日库位, 87), 100))

赋值 (., 1)
赋值 (., 相乘 (相除 (相减 (相加 (今日库位, 加一), 减一), 87), 100))

赋值 (., 2)
赋值 (., 相乘 (相除 (相减 (相加 (今日库位, 加一, 加二), 减一, 减二), 87), 100))

赋值 (., 3)
赋值 (., 相乘 (相除 (相减 (相加 (今日库位, 加一, 加二, 加三), 减一, 减二, 减三), 87), 100))


.子程序 _按钮清空_被单击, 空白型, , 

赋值 (., 0)
赋值 (., 0)

赋值 (., 1)
赋值 (., 0)

赋值 (., 2)
赋值 (., 0)

赋值 (., 3)
赋值 (., 0)


.子程序 _A区_被选择, 空白型, , 
_A区库位_被选择 ()


.子程序 _B区_被选择, 空白型, , 
_B区库位_被选择 ()

.子程序 _C区_被选择, 空白型, , 
_C区库位_被选择 ()

.子程序 _D区_被选择, 空白型, , 
_D区库位_被选择 ()

.子程序 _E区_被选择, 空白型, , 
_E区库位_被选择 ()

.子程序 _按钮刷新_被单击, 空白型, , 
配置颜色 ()
设置色彩A ()
设置色彩B ()
设置色彩C ()
设置色彩D ()
设置色彩E ()


文字信息 ()


.子程序 设置色彩B, 空白型, , 
 ' =============================B区===================================

赋值 (颜色标记, .标记)
判断颜色情况 ()
赋值 (.画板背景色, 颜色值)
赋值 (.画板背景色, 颜色值)
 ' =======================
赋值 (颜色标记, .标记)
判断颜色情况 ()
赋值 (.画板背景色, 颜色值)
赋值 (.画板背景色, 颜色值)
 ' =======================
赋值 (颜色标记, .标记)
判断颜色情况 ()
赋值 (.画板背景色, 颜色值)
赋值 (.画板背景色, 颜色值)
 ' =======================
赋值 (颜色标记, .标记)
判断颜色情况 ()
赋值 (.画板背景色, 颜色值)
赋值 (.画板背景色, 颜色值)
 ' =======================
赋值 (颜色标记, .标记)
判断颜色情况 ()
赋值 (.画板背景色, 颜色值)
赋值 (.画板背景色, 颜色值)
 ' =======================
赋值 (颜色标记, .标记)
判断颜色情况 ()
赋值 (.画板背景色, 颜色值)
赋值 (.画板背景色, 颜色值)
 ' =======================
赋值 (颜色标记, .标记)
判断颜色情况 ()
赋值 (.画板背景色, 颜色值)
赋值 (.画板背景色, 颜色值)
 ' =======================
赋值 (颜色标记, .标记)
判断颜色情况 ()
赋值 (.画板背景色, 颜色值)
赋值 (.画板背景色, 颜色值)
 ' =======================
赋值 (颜色标记, .标记)
判断颜色情况 ()
赋值 (.画板背景色, 颜色值)
赋值 (.画板背景色, 颜色值)
 ' =======================
赋值 (颜色标记, .标记)
判断颜色情况 ()
赋值 (.画板背景色, 颜色值)
赋值 (.画板背景色, 颜色值)
 ' =======================
赋值 (颜色标记, .标记)
判断颜色情况 ()
赋值 (.画板背景色, 颜色值)
赋值 (.画板背景色, 颜色值)
 ' =======================
赋值 (颜色标记, .标记)
判断颜色情况 ()
赋值 (.画板背景色, 颜色值)
赋值 (.画板背景色, 颜色值)
 ' =======================
赋值 (颜色标记, .标记)
判断颜色情况 ()
赋值 (.画板背景色, 颜色值)
赋值 (.画板背景色, 颜色值)
 ' =======================
赋值 (颜色标记, .标记)
判断颜色情况 ()
赋值 (.画板背景色, 颜色值)
赋值 (.画板背景色, 颜色值)
 ' =======================
赋值 (颜色标记, .标记)
判断颜色情况 ()
赋值 (.画板背景色, 颜色值)
赋值 (.画板背景色, 颜色值)
 ' =======================
赋值 (颜色标记, .标记)
判断颜色情况 ()
赋值 (.画板背景色, 颜色值)
赋值 (.画板背景色, 颜色值)
 ' =======================
赋值 (颜色标记, .标记)
判断颜色情况 ()
赋值 (.画板背景色, 颜色值)
赋值 (.画板背景色, 颜色值)



.子程序 设置色彩C, 空白型, , 

 ' =============================C区===================================
赋值 (颜色标记, .标记)
判断颜色情况 ()
赋值 (.画板背景色, 颜色值)
赋值 (.画板背景色, 颜色值)
 ' =======================
赋值 (颜色标记, .标记)
判断颜色情况 ()
赋值 (.画板背景色, 颜色值)
赋值 (.画板背景色, 颜色值)
 ' =======================
赋值 (颜色标记, .标记)
判断颜色情况 ()
赋值 (.画板背景色, 颜色值)
赋值 (.画板背景色, 颜色值)
 ' =======================
赋值 (颜色标记, .标记)
判断颜色情况 ()
赋值 (.画板背景色, 颜色值)
赋值 (.画板背景色, 颜色值)
 ' =======================
赋值 (颜色标记, .标记)
判断颜色情况 ()
赋值 (.画板背景色, 颜色值)
赋值 (.画板背景色, 颜色值)
 ' =======================
赋值 (颜色标记, .标记)
判断颜色情况 ()
赋值 (.画板背景色, 颜色值)
赋值 (.画板背景色, 颜色值)
 ' =======================
赋值 (颜色标记, .标记)
判断颜色情况 ()
赋值 (.画板背景色, 颜色值)
赋值 (.画板背景色, 颜色值)
 ' =======================
赋值 (颜色标记, .标记)
判断颜色情况 ()
赋值 (.画板背景色, 颜色值)
赋值 (.画板背景色, 颜色值)
 ' =======================
赋值 (颜色标记, .标记)
判断颜色情况 ()
赋值 (.画板背景色, 颜色值)
赋值 (.画板背景色, 颜色值)
 ' =======================
赋值 (颜色标记, .标记)
判断颜色情况 ()
赋值 (.画板背景色, 颜色值)
赋值 (.画板背景色, 颜色值)

.子程序 设置色彩D, 空白型, , 

 ' =============================D区===================================
赋值 (颜色标记, .标记)
判断颜色情况 ()
赋值 (.画板背景色, 颜色值)
赋值 (.画板背景色, 颜色值)
 ' =======================
赋值 (颜色标记, .标记)
判断颜色情况 ()
赋值 (.画板背景色, 颜色值)
赋值 (.画板背景色, 颜色值)
 ' =======================
赋值 (颜色标记, .标记)
判断颜色情况 ()
赋值 (.画板背景色, 颜色值)
赋值 (.画板背景色, 颜色值)
 ' =======================
赋值 (颜色标记, .标记)
判断颜色情况 ()
赋值 (.画板背景色, 颜色值)
赋值 (.画板背景色, 颜色值)
 ' =======================
赋值 (颜色标记, .标记)
判断颜色情况 ()
赋值 (.画板背景色, 颜色值)
赋值 (.画板背景色, 颜色值)
 ' =======================
赋值 (颜色标记, .标记)
判断颜色情况 ()
赋值 (.画板背景色, 颜色值)
赋值 (.画板背景色, 颜色值)
 ' =======================
赋值 (颜色标记, .标记)
判断颜色情况 ()
赋值 (.画板背景色, 颜色值)
赋值 (.画板背景色, 颜色值)
 ' =======================
赋值 (颜色标记, .标记)
判断颜色情况 ()
赋值 (.画板背景色, 颜色值)
赋值 (.画板背景色, 颜色值)
 ' =======================


.子程序 设置色彩E, 空白型, , 

 ' =============================E区===================================
赋值 (颜色标记, .标记)
判断颜色情况 ()
赋值 (.画板背景色, 颜色值)
赋值 (.画板背景色, 颜色值)
 ' =======================
赋值 (颜色标记, .标记)
判断颜色情况 ()
赋值 (.画板背景色, 颜色值)
赋值 (.画板背景色, 颜色值)
 ' =======================
赋值 (颜色标记, .标记)
判断颜色情况 ()
赋值 (.画板背景色, 颜色值)
赋值 (.画板背景色, 颜色值)
 ' =======================
赋值 (颜色标记, .标记)
判断颜色情况 ()
赋值 (.画板背景色, 颜色值)
赋值 (.画板背景色, 颜色值)
 ' =======================
赋值 (颜色标记, .标记)
判断颜色情况 ()
赋值 (.画板背景色, 颜色值)
赋值 (.画板背景色, 颜色值)
 ' =======================
赋值 (颜色标记, .标记)
判断颜色情况 ()
赋值 (.画板背景色, 颜色值)
赋值 (.画板背景色, 颜色值)
 ' =======================
赋值 (颜色标记, .标记)
判断颜色情况 ()
赋值 (.画板背景色, 颜色值)
赋值 (.画板背景色, 颜色值)
 ' =======================
赋值 (颜色标记, .标记)
判断颜色情况 ()
赋值 (.画板背景色, 颜色值)
赋值 (.画板背景色, 颜色值)
 ' =======================
赋值 (颜色标记, .标记)
判断颜色情况 ()
赋值 (.画板背景色, 颜色值)
赋值 (.画板背景色, 颜色值)
 ' =======================
赋值 (颜色标记, .标记)
判断颜色情况 ()
赋值 (.画板背景色, 颜色值)
赋值 (.画板背景色, 颜色值)
 ' ========================
赋值 (颜色标记, .标记)
判断颜色情况 ()
赋值 (.画板背景色, 颜色值)
赋值 (.画板背景色, 颜色值)
 ' =======================
赋值 (颜色标记, .标记)
判断颜色情况 ()
赋值 (.画板背景色, 颜色值)
赋值 (.画板背景色, 颜色值)

.子程序 分区信息, 空白型, , 
.局部变量 N, 整数型, , , 
.局部变量 区域号, 文本型, , , 
.局部变量 订单号, 文本型, , , 

连续赋值 (“”, .内容, .内容, .内容, .内容, .内容)
赋值 (总占库位, 取行数 ())
.计次循环首 (总占库位, N)
    
    赋值 (区域号, N.取文本 (2))
    
    赋值 (订单号, N.取文本 (1))
    
    .如果 (大于 (寻找文本 (区域号, “A”, 0, 真), 0))
        相加 (“   ”, 区域号, “：  ”, 订单号).加入文本 ()
    .否则
        .如果 (大于 (寻找文本 (区域号, “B”, 0, 真), 0))
            相加 (“   ”, 区域号, “：  ”, 订单号).加入文本 ()
        .否则
            .如果 (大于 (寻找文本 (区域号, “C”, 0, 真), 0))
                相加 (“   ”, 区域号, “：  ”, 订单号).加入文本 ()
            .否则
                .如果 (大于 (寻找文本 (区域号, “D”, 0, 真), 0))
                    相加 (“   ”, 区域号, “：  ”, 订单号).加入文本 ()
                .否则
                    .如果 (大于 (寻找文本 (区域号, “E”, 0, 真), 0))
                        相加 (“   ”, 区域号, “：  ”, 订单号).加入文本 ()
                    .否则
                        
                        
                    .如果结束
                    
                .如果结束
                
            .如果结束
            
        .如果结束
        
    .如果结束
    赋值 (N, 相加 (N, 1))
.计次循环尾 ()


.子程序 _工具条_被单击, 空白型, , 
.参数 按钮索引, 整数型, , 

.如果 (等于 (按钮索引, 0))
    赋值 (.现行子夹, 7)
    全部删除 ()
    
    超级列表框刷新 ()
.否则
    .如果 (等于 (按钮索引, 2))
        赋值 (.现行子夹, 0)
        
        超级列表框刷新 ()
        
        
        配置颜色 ()
        设置色彩A ()
        设置色彩B ()
        设置色彩C ()
        设置色彩D ()
        设置色彩E ()
        
        文字信息 ()
        
    .否则
        .如果 (等于 (按钮索引, 3))
            赋值 (.现行子夹, 8)
            文字信息 ()
            
        .否则
            .如果 (等于 (按钮索引, 5))
                
                赋值 (.现行子夹, 9)
                
                
                
            .否则
                .如果 (等于 (按钮索引, 7))
                    
                    未知支持库函数_56 (相加 (取运行目录 (), “\帮助文件.pdf”))
                    
                .否则
                    .如果 (等于 (按钮索引, 9))
                        .判断开始 (等于 (信息框 (“是否决定退出系统?”, 1, “欢迎使用仓库管理软件!”), 0))
                            配置颜色 ()
                            销毁 ()
                            
                            返回 ()
                        .默认
                            
                        .判断结束
                        
                    .否则
                        
                        
                    .如果结束
                    
                .如果结束
                
            .如果结束
            
        .如果结束
        
    .如果结束
    
.如果结束


.子程序 _设置_被选择, 空白型, , 
赋值 (.现行子夹, 9)


.子程序 _按钮最小化_被单击, 空白型, , 
 ' 赋值 (主窗口., 2)


.子程序 _按钮托盘_被单击, 空白型, , 
 ' 主窗口.置托盘图标 (主窗口., “仓库可视化管理!”)
赋值 (主窗口., 假)


.子程序 _主窗口_托盘事件, 空白型, , 
.参数 操作类型, 整数型, , 

.判断开始 (等于 (操作类型, 2)) ' 左键双击
    赋值 (主窗口., 真)
.判断 (等于 (操作类型, 3)) ' 右键单击
     ' 主窗口.弹出菜单 ()
    
.默认
    
.判断结束


.子程序 _显示窗口_被选择, 空白型, , 
赋值 (主窗口., 真)

.子程序 _隐藏窗口_被选择, 空白型, , 
赋值 (主窗口., 假)


.子程序 _库位总图_被选择, 空白型, , 
赋值 (主窗口., 真)
赋值 (.现行子夹, 0)
配置颜色 ()
文字信息 ()
 ' 写到文件 (相加 (取运行目录 (), “\pic\pic.jpeg”), .取图片 ())



.子程序 _订单数据_被选择, 空白型, , 
赋值 (主窗口., 真)
赋值 (.现行子夹, 7)
超级列表框刷新 ()


.子程序 _短期查看_被选择, 空白型, , 

赋值 (主窗口., 真)
赋值 (.现行子夹, 9)
赋值 (.内容, 相加 (“今日日期：”, 到文本 (取日期 (.今天)), #换行符, “总库位：87库位”, #换行符, “已经用库位：”, 到文本 (相加 (取行数 (), M)), “库位”, #换行符, “使用率：”, 到文本 (相乘 (相除 (取行数 (), 87), 100)), “%”))


.子程序 _退出系统_被选择, 空白型, , 
.判断开始 (等于 (信息框 (“是否决定退出系统?”, 1, “欢迎使用仓库管理软件!”), 0))
    配置颜色 ()
    销毁 ()
    
    返回 ()
.默认
    
.判断结束


.子程序 _关于KCer_被选择, 空白型, , 

 ' 载入 (窗口关于, , 真)


.子程序 _关于_被选择, 空白型, , 
赋值 (.现行子夹, 10)

.子程序 _数据备份_被选择, 空白型, , 
赋值 (.现行子夹, 0)
 ' .如果 (等于 (信息框 (“确定备份实时仓库情况?”, 4, “提示”), 5))
    
    
    创建目录 (相加 (取运行目录 (), “\备份\”, 时间到文本 (.今天, 2)))
    写到文件 (相加 (取运行目录 (), “\备份\”, 时间到文本 (.今天, 2), “\库位图.jpg”), .取图片 ())
    复制文件 (相加 (取运行目录 (), “\库位数据.edb”), 相加 (取运行目录 (), “\备份\”, 时间到文本 (.今天, 2), “\”, 时间到文本 (.今天, 2), “.edb”))
.否则
    
.如果结束


.子程序 _按钮打印_被单击, 空白型, , 
赋值 (.现行子夹, 0)
延迟 (1000)

 ' 写到文件 (相加 (取运行目录 (), “\pic\pic.jpeg”), .取图片 ())

 ' .开始打印 (#A4纸, 0)
 ' 300.定位写出 (10, “仓库库位图”)

 ' 载入图片 (相加 (取运行目录 (), “\pic\pic.jpeg”)).画图片 (10, 50, 800, 510, )
载入图片 (相加 (取运行目录 (), “\pic\exl.jpg”)).画图片 (10, 550, 800, 600, )

结束打印 ()

.子程序 _计算器_被选择, 空白型, , 
运行 (“calc.exe”, 假, )

.子程序 _画图板_被选择, 空白型, , 
运行 (“mspaint.exe”, 假, )

.子程序 _记事本_被选择, 空白型, , 
运行 (“notepad.exe”, 假, )

.子程序 _查手_被选择, 空白型, , 
运行 (相加 (取运行目录 (), “\dat\kcer.exe”), 假, )


.子程序 _超级按钮1_被单击, 空白型, , 
未知支持库函数_56 (“http://192.168.0.8/web/gbook/index.asp?user=o3x4y”)

.子程序 _帮助文件_被选择, 空白型, , 

未知支持库函数_56 (相加 (取运行目录 (), “\帮助文件.pdf”))


.子程序 _表格查询_鼠标右键被按下, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

 ' .判断开始 (等于 (取行数 (), 0))
    信息框 (“无可操作记录!”, 0, )
    返回 ()
    
.默认
     ' 弹出菜单 ()
    
.判断结束


.子程序 _批量加入_被选择, 空白型, , 
.局部变量 N, 整数型, , , 
.局部变量 存区号, 文本型, , , 
.局部变量 提示信息, 文本型, , , 

.判断开始 (等于 (订单号码, “”))
    信息框 (“无数据！请先进入加入订单选项！”, 0, “提示”)
    返回 ()
.默认
    赋值 (N, 0)
    .计次循环首 (取行数 (), N)
        赋值 (存区号, N.取文本 (2))
        
        .判断开始 (等于 (区码, 存区号))
            信息框 (“已有成品,不能放置!”, 0, )
            返回 ()
        .默认
            赋值 (N, 相加 (N, 1))
        .判断结束
        
    .计次循环尾 ()
    赋值 (提示信息, 相加 (“当前库位”, 区码, #换行符, “订单号:”, 订单号码, #换行符, “型号:”, 型号码, #换行符, “数量:”, 到文本 (数量值), #换行符, #换行符, “入库日期:”, 到文本 (入库日)))
    .如果 (等于 (信息框 (相加 (“是否加入？”, #换行符, 提示信息), 1, “是否加入以下单？”), 0))
        加空记录 ()
        写 (1, 订单号码)
        写 (2, 区码)
        写 (3, 型号码)
        写 (4, 数量值)
        写 (5, 入库日)
        写 (6, 出货日)
        写 (7, 备注信息)
        
        信息框 (“加入成功！请继续加入！”, 0, “提示”)
        
        
        
    .否则
        返回 ()
        
    .如果结束
    
    配置颜色 ()
    设置色彩A ()
    设置色彩B ()
    设置色彩C ()
    设置色彩D ()
    设置色彩E ()
    
    文字信息 ()
    
    
.判断结束


.子程序 _结束批量加_被选择, 空白型, , 
.局部变量 提示信息, 文本型, , , 

赋值 (提示信息, 相加 (“当前库位”, 区码, #换行符, “订单号:”, 订单号码, #换行符, “型号:”, 型号码, #换行符, “数量:”, 到文本 (数量值), #换行符, #换行符, “入库日期:”, 到文本 (入库日)))

 ' .如果 (等于 (信息框 (相加 (“是否结束加入以下？”, #换行符, 提示信息), 1, “提示”), 0))
    赋值 (订单号码, “”)
    信息框 (“已经结束加入库位”, 0, )
.否则
    返回 ()
    
.如果结束



.子程序 _视频教程_被选择, 空白型, , 
未知支持库函数_56 (相加 (取运行目录 (), “\视频教程”))

.子程序 超级列表框刷新, 空白型, , 
.局部变量 表项索引, 整数型, , , 
.局部变量 项目数, 整数型, , , 

置当前库 (“库位数据”)
到首记录 ()


 ' .计次循环首 (取记录数 (), 项目数)
     ' 赋值 (表项索引, .插入表项 ())
    表项索引.置标题 (0, 读 (#订单号))
    表项索引.置标题 (1, 读 (#区域))
    表项索引.置标题 (2, 读 (#型号))
    表项索引.置标题 (3, 到文本 (读 (#订单数量)))
    
    表项索引.置标题 (4, 到文本 (读 (#入库日期)))
    .判断开始 (等于 (到文本 (读 (#出货日期)), “1899年12月30日”))
        表项索引.置标题 (5, “待定”)
    .默认
        表项索引.置标题 (5, 到文本 (读 (#出货日期)))
    .判断结束
    
    表项索引.置标题 (6, 读 (#备注))
    
     ' 跳过 ()
.计次循环尾 ()




.子程序 _超级列表框1_右键单击表项, 空白型, , 
 ' 弹出菜单 ()



.子程序 _按订单查询_被选择, 空白型, , 
.如果 (等于 (输入框 (“请输入要查询的订单号”, “提示”, “”, 查询订单号, ), 真))
    .如果真 (等于 (查询订单号, “”))
        信息框 (“请正确输入查询订单号！”, 0, )
        返回 ()
    .如果真结束
    
     ' 赋值 (查询关键字, 查询订单号)
     ' 赋值 (查询关键字段, #订单号)
    查询关键 ()
    
.否则
    
.如果结束



.子程序 查询关键, 空白型, , 
.局部变量 N, 整数型, , , 
.局部变量 表项索引, 整数型, , , 

赋值 (.数据库文件名, 相加 (取运行目录 (), “\库位数据.edb”))
打开 (相加 (取运行目录 (), “\库位数据.edb”), , , , , , )

置当前库 (“库位数据”)
到首记录 ()
全部删除 ()

 ' .计次循环首 (取记录数 (), N)
    
    .如果 (等于 (查找 (近似等于 (读字段 (查询关键字段, ), 查询关键字)), 真))
        
        赋值 (表项索引, .插入表项 ())
        主窗口.置标题 (., 表项索引, 0, 读 (#订单号))
        主窗口.置标题 (., 表项索引, 1, 读 (#区域))
        主窗口.置标题 (., 表项索引, 2, 读 (#型号))
        主窗口.置标题 (., 表项索引, 3, 到文本 (读 (#订单数量)))
        
        主窗口.置标题 (., 表项索引, 4, 到文本 (读 (#入库日期)))
        .判断开始 (等于 (到文本 (读 (#出货日期)), “1899年12月30日”))
            主窗口.置标题 (., 表项索引, 5, “待定”)
        .默认
            主窗口.置标题 (., 表项索引, 5, 到文本 (读 (#出货日期)))
        .判断结束
        
        主窗口.置标题 (., 表项索引, 6, 读 (#备注))
    .否则
        
    .如果结束
    跳过 (1)
.计次循环尾 ()
赋值 (主窗口.., 相减 (取记录数 (), 1))



.子程序 _按区域查询_被选择, 空白型, , 
.如果 (等于 (输入框 (“请输入要查询的区域”, “提示”, “”, 查询区域, ), 真))
    
    .如果真 (等于 (查询区域, “”))
        信息框 (“请正确输入查询区域！”, 0, )
        返回 ()
    .如果真结束
    
    赋值 (查询关键字, 查询区域)
    赋值 (查询关键字段, #区域)
    查询关键 ()
    
.否则
    
.如果结束



.子程序 _按型号查询_被选择, 空白型, , 
.如果 (等于 (输入框 (“请输入要查询的型号”, “提示”, “”, 查询型号, ), 真))
    
    .如果真 (等于 (查询型号, “”))
        信息框 (“请正确输入查询型号！”, 0, )
        返回 ()
    .如果真结束
    
    赋值 (查询关键字, 查询型号)
    赋值 (查询关键字段, #型号)
    查询关键 ()
    
.否则
    
.如果结束



.子程序 _按数量查询_被选择, 空白型, , 
.如果 (等于 (输入框 (“请输入要查询的订单数量”, “提示”, “”, 查询订单数量, ), 真))
    
    .如果真 (等于 (查询订单数量, “”))
        信息框 (“请正确输入查询订单数量！”, 0, )
        返回 ()
    .如果真结束
    
    赋值 (查询关键字, 查询订单数量)
    
    赋值 (查询关键字段, #订单数量)
    查询关键数字 ()
    
.否则
    
.如果结束


.子程序 _订单明细_被选择, 空白型, , 
 ' .判断开始 (等于 (., -1))
    信息框 (“请选择要相关项目”, 0, “提示”)
    
    返回 ()
    
.默认
    赋值 (明细关键字, .取标题 (., 1))
    载入 (窗口订单更改, , 真)
    
    
.判断结束


.子程序 _显示全部_被选择, 空白型, , 
全部删除 ()

超级列表框刷新 ()


.子程序 _清空该库位_被选择, 空白型, , 
 ' .判断开始 (等于 (., -1))
    信息框 (“请选择要相关项目”, 0, “提示”)
    
    返回 ()
    
.默认
    赋值 (明细关键字, .取标题 (., 1))
    
.判断结束
置当前库 (“库位数据”)
到首记录 ()

.如果真 (等于 (查找 (等于 (读字段 (#区域, ), 明细关键字)), 真))
    .判断开始 (等于 (信息框 (相加 (“是否决定删除”, 明细关键字, “中的订单？”), 1, “警告!”), 0))
        写配置项 (相加 (取运行目录 (), “\clor.ini”), 明细关键字, “颜色”, “绿色”)
        
        删除 ()
        彻底删除 ()
        
        主窗口.全部删除 (.)
        
        主窗口.超级列表框刷新 ()
        
        
        配置颜色 ()
        设置色彩A ()
        设置色彩B ()
        设置色彩C ()
        设置色彩D ()
        设置色彩E ()
        
        文字信息 ()
    .默认
        
    .判断结束
    
    
.如果真结束


.子程序 _程序初始_被选择, 空白型, , 
.判断开始 (等于 (信息框 (“是否决定初始化系统?”, 1, “警告”), 0))
    .如果真 (等于 (复制文件 (相加 (取运行目录 (), “\dat\clor.ini”), 相加 (取运行目录 (), “\clor.ini”)), 假))
        
        信息框 (“初始化失败！”, 0, )
        返回 ()
        
    .如果真结束
    .如果真 (等于 (复制文件 (相加 (取运行目录 (), “\dat\库位数据.edb”), 相加 (取运行目录 (), “\库位数据.edb”)), 假))
        
        信息框 (“初始化失败！”, 0, )
        返回 ()
    .如果真结束
    信息框 (“初始化完毕！请重新进入！”, 0, )
    
    销毁 ()
    
.默认
    返回 ()
.判断结束





.子程序 查询关键数字, 空白型, , 
.局部变量 N, 整数型, , , 
.局部变量 表项索引, 整数型, , , 

赋值 (.数据库文件名, 相加 (取运行目录 (), “\库位数据.edb”))
打开 (相加 (取运行目录 (), “\库位数据.edb”), , , , , , )

置当前库 (“库位数据”)
到首记录 ()
全部删除 ()

 ' .计次循环首 (取记录数 (), N)
    
    .如果 (等于 (查找 (等于 (读字段 (查询关键字段, ), 到整数 (查询关键字))), 真))
        赋值 (表项索引, .插入表项 ())
        主窗口.置标题 (., 表项索引, 0, 读 (#订单号))
        主窗口.置标题 (., 表项索引, 1, 读 (#区域))
        主窗口.置标题 (., 表项索引, 2, 读 (#型号))
        主窗口.置标题 (., 表项索引, 3, 到文本 (读 (#订单数量)))
        
        主窗口.置标题 (., 表项索引, 4, 到文本 (读 (#入库日期)))
        .判断开始 (等于 (到文本 (读 (#出货日期)), “1899年12月30日”))
            主窗口.置标题 (., 表项索引, 5, “待定”)
        .默认
            主窗口.置标题 (., 表项索引, 5, 到文本 (读 (#出货日期)))
        .判断结束
        
        主窗口.置标题 (., 表项索引, 6, 读 (#备注))
    .否则
        
    .如果结束
    跳过 (1)
.计次循环尾 ()
赋值 (主窗口.., 相减 (取记录数 (), 1))


.子程序 清除已走货, 空白型, , 
.局部变量 N, 整数型, , , 
.局部变量 表项索引, 整数型, , , 
.局部变量 配置区域号, 文本型, , , 

赋值 (.数据库文件名, 相加 (取运行目录 (), “\库位数据.edb”))
打开 (相加 (取运行目录 (), “\库位数据.edb”), , , , , , )

置当前库 (“库位数据”)
到首记录 ()
.计次循环首 (取记录数 (), N)
    
    .如果 (查找 (不等于 (读字段 (#出货日期, ), 到时间 (“1899年12月30日”))))
        .如果 (查找 (小于 (读字段 (#出货日期, ), 取日期 (.今天))))
            删除 ()
            赋值 (配置区域号, 读字段 (#区域, ))
            写配置项 (相加 (取运行目录 (), “\clor.ini”), 配置区域号, “颜色”, “绿色”)
        .否则
            
        .如果结束
        
        
    .否则
        
    .如果结束
    彻底删除 ()
    
    
    跳过 (1)
.计次循环尾 ()




.子程序 _查询合库信息_被选择, 空白型, , 
.局部变量 查询文本, 文本型, , , 
.局部变量 查询合库位订单, 文本型, , , 
.局部变量 N, 整数型, , , 
.局部变量 表项索引, 整数型, , , 

.如果 (等于 (输入框 (“请输入要查询的合库位订单号”, “提示”, “”, 查询合库位订单, ), 真))
    
    .如果真 (等于 (查询合库位订单, “”))
        信息框 (“请正确输入要查询的合库位订单号！”, 0, )
        返回 ()
    .如果真结束
    
.否则
    
.如果结束

赋值 (.数据库文件名, 相加 (取运行目录 (), “\库位数据.edb”))
打开 (相加 (取运行目录 (), “\库位数据.edb”), , , , , , )

置当前库 (“库位数据”)
到首记录 ()
全部删除 ()
 ' .计次循环首 (取记录数 (), N)
    
    .如果 (等于 (查找 (等于 (读字段 (#订单号, ), “其他货物”)), 真))
        赋值 (查询文本, 读 (#备注))
        .如果 (大于 (寻找文本 (查询文本, 查询合库位订单, , 假), 0))
            赋值 (表项索引, .插入表项 ())
            
            主窗口.置标题 (., 表项索引, 0, 读 (#订单号))
            主窗口.置标题 (., 表项索引, 1, 读 (#区域))
            主窗口.置标题 (., 表项索引, 2, 读 (#型号))
            主窗口.置标题 (., 表项索引, 3, 到文本 (读 (#订单数量)))
            
            主窗口.置标题 (., 表项索引, 4, 到文本 (读 (#入库日期)))
            .判断开始 (等于 (到文本 (读 (#出货日期)), “1899年12月30日”))
                主窗口.置标题 (., 表项索引, 5, “待定”)
            .默认
                主窗口.置标题 (., 表项索引, 5, 到文本 (读 (#出货日期)))
            .判断结束
            
            主窗口.置标题 (., 表项索引, 6, 读 (#备注))
            
        .否则
            
        .如果结束
        
    .否则
        
    .如果结束
    跳过 (1)
.计次循环尾 ()
赋值 (主窗口.., 相减 (取记录数 (), 1))


.子程序 _按入库日期_被选择, 空白型, , 


.子程序 _单一库位_被选择, 空白型, , 
载入 (窗口输入订单, , 假)
赋值 (窗口输入订单..现行子夹, 0)

.子程序 _其他库位_被选择, 空白型, , 
载入 (窗口输入订单, , 假)
赋值 (窗口输入订单..现行子夹, 2)

.子程序 _清除走货_被选择, 空白型, , 
.判断开始 (等于 (信息框 (“是否决定清除已经走货货物?”, 1, “警告!”), 0))
    清除已走货 ()
    超级列表框刷新 ()
    配置颜色 ()
    设置色彩A ()
    设置色彩B ()
    设置色彩C ()
    设置色彩D ()
    设置色彩E ()
    文字信息 ()
.默认
    
.判断结束
返回 ()

.子程序 _按钮2_被单击, 空白型, , 
 ' .判断开始 (等于 (.选中, 真))
    写配置项 (相加 (取运行目录 (), “\set.ini”), “提醒”, “提醒开启”, “真”)
.默认
    写配置项 (相加 (取运行目录 (), “\set.ini”), “提醒”, “提醒开启”, “假”)
    
    
.判断结束
.如果真 (等于 (写配置项 (相加 (取运行目录 (), “\set.ini”), “提醒”, “提醒内容”, .内容), 真))
     ' 信息框 (“设置成功”, 0, )
    
.如果真结束



.子程序 系统配置, 空白型, , 
.如果真 (等于 (读配置项 (相加 (取运行目录 (), “\set.ini”), “提醒”, “提醒开启”, ), “真”))
     ' 信息框 (读配置项 (相加 (取运行目录 (), “\set.ini”), “提醒”, “提醒内容”, ), 0, “大洋提醒”)
    
.如果真结束


.程序集 配置文件操作程序集, , , 

.子程序 读加密配置项, 文本型, , 读取失败，返回空文本
.参数 配置文件名, 文本型, , 省略路径,默认为保存在windows系统目录下
.参数 文件密码, 文本型, 可空, 
.参数 配置节名, 文本型, , 
.参数 配置项名, 文本型, , 
.参数 默认文本, 文本型, 可空, 

.局部变量 读取内容, 文本型, , , 
.局部变量 文件号, 整数型, , , 
.局部变量 取出内容, 文本型, , "0", 

.如果真 (是否为空 (文件密码))
    赋值 (文件密码, “”)
.如果真结束
.如果真 (是否为空 (默认文本))
    赋值 (默认文本, “”)
.如果真结束
.如果真 (等于 (寻找文本 (配置文件名, “\”, , 假), -1))
    赋值 (配置文件名, 相加 (未知支持库函数_7 (9), “\”, 配置文件名))
.如果真结束
赋值 (配置文件名, 子文本替换 (配置文件名, “\\”, “\”, , , 真))
赋值 (文件号, 打开加密文件 (配置文件名, #读入, , 文件密码, )) ' 用读文本行的方式来操作配置文件。配置文件小节一般用[]括起来。配置文件项目均以：项目= 项目值 的形式保存。读取小节，然后读取小节后面几行文本，以“=”分隔，即可取得项目名称及项目值。下同。
.如果真 (等于 (文件号, 0)) ' 打开失败
    返回 (默认文本)
.如果真结束
.判断循环首 (等于 (是否在文件尾 (文件号, 真), 假))
    赋值 (读取内容, 读入一行 (文件号))
    .如果真 (等于 (到大写 (读取内容), 到大写 (相加 (“[”, 配置节名, “]”)))) ' 判断是否小节名
        跳出循环 ()
    .如果真结束
    
.判断循环尾 ()
.判断循环首 (等于 (是否在文件尾 (文件号, 真), 假)) ' 循环读取，直到所读文本行中，包含指定项目名称。
    赋值 (读取内容, 读入一行 (文件号))
    .如果真 (并且 (等于 (取文本左边 (删首尾空 (读取内容), 1), “[”), 等于 (取文本右边 (删首尾空 (读取内容), 1), “]”))) ' 如果读到下一个小节，则跳出循环。
        跳出循环 ()
    .如果真结束
    .如果真 (不等于 (寻找文本 (读取内容, “=”, , 假), -1))
        赋值 (取出内容, 分割文本 (读取内容, “=”, )) ' 分割项目名称与项目值。
        .如果真 (大于或等于 (取数组成员数 (取出内容), 2))
            .如果真 (等于 (删首尾空 (取出内容 [1]), 配置项名))
                关闭文件 (文件号)
                .如果真 (等于 (删首尾空 (取文本右边 (读取内容, 相减 (取文本长度 (读取内容), 寻找文本 (读取内容, “=”, , 假)))), “”))
                    返回 (默认文本)
                .如果真结束
                返回 (取文本右边 (读取内容, 相减 (取文本长度 (读取内容), 寻找文本 (读取内容, “=”, , 假))))
            .如果真结束
            
        .如果真结束
        
    .如果真结束
    
.判断循环尾 ()
关闭文件 (文件号)
返回 (默认文本)

.子程序 写加密配置项, 逻辑型, , 
.参数 配置文件名, 文本型, , 省略路径,默认为保存在windows系统目录下
.参数 文件密码, 文本型, 可空, 
.参数 配置节名, 文本型, , 
.参数 配置项名, 文本型, , 
.参数 欲写入值, 文本型, , 不允许写入空值。

.局部变量 读取内容, 文本型, , , 
.局部变量 文件号, 整数型, , , 
.局部变量 取出内容, 文本型, , "0", 
.局部变量 上次位置, 整数型, , , 
.局部变量 节存在, 逻辑型, , , 
.局部变量 项存在, 逻辑型, , , 

.如果真 (是否为空 (文件密码))
    赋值 (文件密码, “”)
.如果真结束
.如果真 (或者 (等于 (删首尾空 (配置文件名), “”), 等于 (删首尾空 (配置节名), “”), 等于 (删首尾空 (配置项名), “”), 等于 (删首尾空 (欲写入值), “”)))
    返回 (假)
.如果真结束
.如果真 (等于 (寻找文本 (配置文件名, “\”, , 假), -1))
    赋值 (配置文件名, 相加 (未知支持库函数_7 (9), “\”, 配置文件名))
.如果真结束
赋值 (配置文件名, 子文本替换 (配置文件名, “\\”, “\”, , , 真))
赋值 (文件号, 打开加密文件 (配置文件名, #改读, , 文件密码, ))
.如果真 (等于 (文件号, 0))
    返回 (假)
.如果真结束
赋值 (节存在, 假)
赋值 (项存在, 假)
.判断循环首 (等于 (是否在文件尾 (文件号, 真), 假)) ' 循环读取文本行，判断是否存在指定小节。
    赋值 (读取内容, 读入一行 (文件号))
    .如果真 (等于 (到大写 (读取内容), 到大写 (相加 (“[”, 配置节名, “]”))))
        赋值 (节存在, 真)
        跳出循环 ()
    .如果真结束
    
.判断循环尾 ()
.如果 (节存在)
    赋值 (上次位置, 取读写位置 (文件号))
    .判断循环首 (等于 (是否在文件尾 (文件号, 真), 假))
        赋值 (上次位置, 取读写位置 (文件号))
        赋值 (读取内容, 读入一行 (文件号))
        .如果真 (并且 (等于 (取文本左边 (删首尾空 (读取内容), 1), “[”), 等于 (取文本右边 (删首尾空 (读取内容), 1), “]”)))
            跳出循环 ()
        .如果真结束
        .如果真 (不等于 (寻找文本 (读取内容, “=”, , 假), -1)) ' 循环读取文本行，判断是否已经存在指定项目。如果存在，则修改。
            赋值 (取出内容, 分割文本 (读取内容, “=”, ))
            .如果真 (大于或等于 (取数组成员数 (取出内容), 2))
                .如果真 (等于 (删首尾空 (取出内容 [1]), 配置项名))
                    赋值 (项存在, 真)
                    移动读写位置 (文件号, , 上次位置)
                    删除数据 (文件号, 相加 (取文本长度 (读取内容), 2))
                    移动读写位置 (文件号, , 上次位置)
                    插入文本行 (文件号, 相加 (取出内容 [1], “=”, 欲写入值))
                    关闭文件 (文件号)
                    返回 (真)
                .如果真结束
                
            .如果真结束
            
        .如果真结束
        
    .判断循环尾 ()
    .如果真 (等于 (项存在, 假)) ' 如果项目不存在，则插入文本行。
        移动读写位置 (文件号, , 上次位置)
        插入文本行 (文件号, 相加 (配置项名, “=”, 欲写入值))
        关闭文件 (文件号)
        返回 (真)
    .如果真结束
    
.否则
    移到文件尾 (文件号) ' 如果小节不存在，则在文件最后插入小节。在小节下一行，插入项目。
    插入文本行 (文件号, 相加 (“[”, 配置节名, “]”))
    插入文本行 (文件号, 相加 (配置项名, “=”, 欲写入值))
    关闭文件 (文件号)
    返回 (真)
.如果结束
关闭文件 (文件号)
返回 (假)

.子程序 取加密配置节名, 逻辑型, , 
.参数 配置文件名, 文本型, , 省略路径,默认为保存在windows系统目录下
.参数 文件密码, 文本型, 可空, 
.参数 配置节名称数组, 文本型, 数组, 保存取出的配置文件节名称数组

.局部变量 文件号, 整数型, , , 
.局部变量 读取内容, 文本型, , , 

.如果真 (是否为空 (文件密码))
    赋值 (文件密码, “”)
.如果真结束
.如果真 (等于 (寻找文本 (配置文件名, “\”, , 假), -1))
    赋值 (配置文件名, 相加 (未知支持库函数_7 (9), “\”, 配置文件名))
.如果真结束
赋值 (配置文件名, 子文本替换 (配置文件名, “\\”, “\”, , , 真))
赋值 (文件号, 打开加密文件 (配置文件名, #读入, , 文件密码, ))
.如果真 (等于 (文件号, 0))
    返回 (假)
.如果真结束
清除数组 (配置节名称数组)
.判断循环首 (等于 (是否在文件尾 (文件号, 真), 假)) ' 循环读取文本行，取出所有小节，加入到数组。
    赋值 (读取内容, 读入一行 (文件号))
    .如果真 (并且 (等于 (取文本左边 (删首尾空 (读取内容), 1), “[”), 等于 (取文本右边 (删首尾空 (读取内容), 1), “]”)))
        赋值 (读取内容, 子文本替换 (读取内容, “[”, “”, , , 真))
        赋值 (读取内容, 子文本替换 (读取内容, “]”, “”, , , 真))
        加入成员 (配置节名称数组, 删首尾空 (读取内容))
    .如果真结束
    
.判断循环尾 ()
关闭文件 (文件号)
返回 (真)

.子程序 取加密配置项名, 逻辑型, , 
.参数 配置文件名, 文本型, , 省略路径,默认为保存在windows系统目录下
.参数 文件密码, 文本型, 可空, 
.参数 配置节名, 文本型, , 欲取出项目数组的小节名称
.参数 配置项名称数组, 文本型, 数组, 保存取出的配置项名称数组

.局部变量 文件号, 整数型, , , 
.局部变量 读取内容, 文本型, , , 

.如果真 (是否为空 (文件密码))
    赋值 (文件密码, “”)
.如果真结束
.如果真 (等于 (寻找文本 (配置文件名, “\”, , 假), -1))
    赋值 (配置文件名, 相加 (未知支持库函数_7 (9), “\”, 配置文件名))
.如果真结束
赋值 (配置文件名, 子文本替换 (配置文件名, “\\”, “\”, , , 真))
赋值 (文件号, 打开加密文件 (配置文件名, #读入, , 文件密码, ))
.如果真 (等于 (文件号, 0))
    返回 (假)
.如果真结束
.判断循环首 (等于 (是否在文件尾 (文件号, 真), 假)) ' 循环读取文本行，定位到指定小节。
    赋值 (读取内容, 读入一行 (文件号))
    .如果真 (等于 (到大写 (读取内容), 到大写 (相加 (“[”, 配置节名, “]”))))
        跳出循环 ()
    .如果真结束
    
.判断循环尾 ()
清除数组 (配置项名称数组)
.判断循环首 (等于 (是否在文件尾 (文件号, 真), 假)) ' 循环读取文本行，取出所有项目，保存至数组。读取到下一小节时，跳出循环。
    赋值 (读取内容, 读入一行 (文件号))
    .如果真 (并且 (等于 (取文本左边 (删首尾空 (读取内容), 1), “[”), 等于 (取文本右边 (删首尾空 (读取内容), 1), “]”)))
        跳出循环 ()
    .如果真结束
    .如果真 (不等于 (寻找文本 (读取内容, “=”, , 假), -1))
        加入成员 (配置项名称数组, 删首尾空 (取文本左边 (读取内容, 相减 (寻找文本 (读取内容, “=”, , 假), 1))))
    .如果真结束
    
.判断循环尾 ()
关闭文件 (文件号)
返回 (真)

.子程序 删除加密配置小节, 逻辑型, , 
.参数 配置文件名, 文本型, , 
.参数 文件密码, 文本型, 可空, 
.参数 配置节名, 文本型, , 

.局部变量 读取内容, 文本型, , , 
.局部变量 文件号, 整数型, , , 
.局部变量 上次位置, 整数型, , , 
.局部变量 节存在, 逻辑型, , , 

.如果真 (是否为空 (文件密码))
    赋值 (文件密码, “”)
.如果真结束
.如果真 (等于 (寻找文本 (配置文件名, “\”, , 假), -1))
    赋值 (配置文件名, 相加 (未知支持库函数_7 (9), “\”, 配置文件名))
.如果真结束
赋值 (配置文件名, 子文本替换 (配置文件名, “\\”, “\”, , , 真))
赋值 (文件号, 打开加密文件 (配置文件名, #改读, , 文件密码, ))
.如果真 (等于 (文件号, 0))
    返回 (假)
.如果真结束
赋值 (节存在, 假)
.判断循环首 (等于 (是否在文件尾 (文件号, 真), 假)) ' 循环读取文本行，判断是否存在指定小节，如果存在，则删除小节所在一行文本。
    赋值 (上次位置, 取读写位置 (文件号))
    赋值 (读取内容, 读入一行 (文件号))
    .如果真 (等于 (到大写 (读取内容), 到大写 (相加 (“[”, 配置节名, “]”))))
        赋值 (节存在, 真)
        移动读写位置 (文件号, , 上次位置)
        删除数据 (文件号, 相加 (取文本长度 (读取内容), 2))
        移动读写位置 (文件号, , 上次位置)
        跳出循环 ()
    .如果真结束
    
.判断循环尾 ()
.如果真 (等于 (节存在, 假)) ' 如果不存在指定小节，则删除失败。
    关闭文件 (文件号)
    返回 (节存在)
.如果真结束
.判断循环首 (等于 (是否在文件尾 (文件号, 真), 假)) ' 删除指定小节（已经在上述代码中被删除）下的所有文本行，直到读取到下一小节。
    赋值 (上次位置, 取读写位置 (文件号))
    赋值 (读取内容, 读入一行 (文件号))
    .如果真 (并且 (等于 (取文本左边 (删首尾空 (读取内容), 1), “[”), 等于 (取文本右边 (删首尾空 (读取内容), 1), “]”)))
        跳出循环 ()
    .如果真结束
    移动读写位置 (文件号, , 上次位置)
    删除数据 (文件号, 相加 (取文本长度 (读取内容), 2))
    移动读写位置 (文件号, , 上次位置)
.判断循环尾 ()
关闭文件 (文件号)
返回 (真)

.程序集 配置文件管理程序集, , , 

.子程序 配置文件_写用户信息, 空白型, , 
.参数 用户数组, 文本型, 数组, 
.参数 口令数组, 文本型, 数组, 
.参数 用户分类, 文本型, 数组, 
.参数 分类数组, 文本型, 数组, 
.参数 权限数组, 文本型, 数组, 

.局部变量 变量1, 整数型, , , 

.计次循环首 (取数组成员数 (分类数组), 变量1)
    写加密配置项 (配置文件, #密匙, “分类信息”, 分类数组 [变量1], 权限数组 [变量1]) ' 以小节形式保存分类信息。
.计次循环尾 ()
.计次循环首 (取数组成员数 (用户数组), 变量1)
    写加密配置项 (配置文件, #密匙, 用户数组 [变量1], “口令”, 口令数组 [变量1]) ' 每个用户信息保存为一个小节。
    写加密配置项 (配置文件, #密匙, 用户数组 [变量1], “所属分类”, 用户分类 [变量1])
.计次循环尾 ()

.子程序 配置文件_删除用户, 逻辑型, , 
.参数 用户名, 文本型, , 

返回 (删除加密配置小节 (配置文件, #密匙, 用户名))

.子程序 配置文件_取用户, 整数型, , 返回用户数
.局部变量 变量1, 整数型, , , 

清除数组 (用户)
取加密配置节名 (配置文件, #密匙, 用户)
.如果真 (大于 (取数组成员数 (用户), 0))
    .计次循环首 (取数组成员数 (用户), 变量1)
        .如果真 (等于 (用户 [变量1], “分类信息”)) ' 由于每个用户信息保存为一个小节，分类信息也保存为一个小节，所以在取出用户时，要剔除小节“分类信息”。
            删除成员 (用户, 变量1, 1)
            跳出循环 ()
        .如果真结束
        
    .计次循环尾 ()
.如果真结束
返回 (取数组成员数 (用户))

.子程序 配置文件_取口令, 文本型, , 
.参数 用户名, 文本型, , 

返回 (读加密配置项 (配置文件, #密匙, 用户名, “口令”, “”))

.子程序 配置文件_修改口令, 逻辑型, , 
.参数 用户名, 文本型, , 
.参数 口令文本, 文本型, , 

返回 (写加密配置项 (配置文件, #密匙, 用户名, “口令”, 口令文本))

.子程序 配置文件_取是否保存密码, 逻辑型, , 
.参数 用户名, 文本型, , 

返回 (等于 (读加密配置项 (配置文件, #密匙, 用户名, “保存口令”, “假”), “真”))

.子程序 配置文件_写是否保存密码, 逻辑型, , 
.参数 用户名, 文本型, , 
.参数 是否保存密码, 逻辑型, , 

返回 (写加密配置项 (配置文件, #密匙, 用户名, “保存口令”, 到文本 (是否保存密码)))

.子程序 配置文件_取用户权限, 逻辑型, , 
.参数 用户名, 文本型, , 
.参数 所在分类, 文本型, , 保存用户名所在分类

赋值 (所在分类, 读加密配置项 (配置文件, #密匙, 用户名, “所属分类”)) ' 从用户自己的小节中读取所在分类。
返回 (等于 (读加密配置项 (配置文件, #密匙, “分类信息”, 所在分类, “假”), “真”)) ' 从“分类信息”小节中，读取指定分类的权限。

.子程序 配置文件_添加用户, 空白型, , 
.参数 用户名, 文本型, , 
.参数 口令文本, 文本型, , 
.参数 所在分类, 文本型, , 

写加密配置项 (配置文件, #密匙, 用户名, “口令”, 口令文本)
写加密配置项 (配置文件, #密匙, 用户名, “所属分类”, 所在分类)

.子程序 配置文件_取分类, 逻辑型, , 
返回 (取加密配置项名 (配置文件, #密匙, “分类信息”, 分类))

.程序集 公用程序集, , , 在本程序集中定义的子程序可被模块外部程序访问，注意如果不存在本程序集就不能作为易模块编译。

.子程序 创建多级目录, 逻辑型, , 创建成功返回真，失败返回假。
.参数 目录名, 文本型, , 

.局部变量 创建目录, 文本型, , , 
.局部变量 找到位置, 短整数型, , , 

.如果真 (等于 (寻找文件 (目录名, #子目录), “”))
    赋值 (找到位置, 寻找文本 (目录名, “\”, , 真)) ' 如果目录中包含“\”，那就可能是一个多级目录，否则，直接创建目录（）就可以了。
    .如果真 (不等于 (找到位置, -1))
        .如果真 (等于 (取文本中间 (删首尾空 (目录名), 2, 1), “:”))
            赋值 (找到位置, 寻找文本 (目录名, “\”, 相加 (找到位置, 1), 真)) ' 剔除盘符后，如果还有“\"，就进入循环，逐级目录创建。
        .如果真结束
        .判断循环首 (不等于 (找到位置, -1))
            赋值 (创建目录, 取文本左边 (目录名, 相减 (找到位置, 1)))
            .如果真 (等于 (寻找文件 (创建目录, #子目录), “”))
                .如果真 (等于 (创建目录 (创建目录), 假))
                    返回 (假)
                .如果真结束
                
            .如果真结束
            赋值 (找到位置, 寻找文本 (目录名, “\”, 相加 (找到位置, 1), 真))
        .判断循环尾 ()
    .如果真结束
    .如果真 (等于 (创建目录 (目录名), 假))
        返回 (假)
    .如果真结束
    
.如果真结束
返回 (真)

.窗口程序集 窗口程序集1, , , 

.子程序 _按钮确认输入新_被单击, 空白型, , 
.局部变量 提示信息, 文本型, , , 

.判断开始 (等于 (.内容, “”))
    信息框 (“请将各项信息输入完整！”, 0, “警告”)
    返回 ()
    
.判断 (等于 (.内容, “”))
    信息框 (“请将各项信息输入完整！”, 0, “警告”)
    返回 ()
    
.判断 (等于 (.内容, “”))
    信息框 (“请将各项信息输入完整！”, 0, “警告”)
    返回 ()
    
.默认
    
    
    
.判断结束
赋值 (.数据库文件名, 相加 (取运行目录 (), “\库位数据.edb”))
打开 (相加 (取运行目录 (), “\库位数据.edb”), , , , , , )
赋值 (提示信息, 相加 (“订单号:”, .内容, #换行符, “型号:”, .内容, #换行符, “数量:”, .内容, #换行符, “备注:”, .内容, #换行符, “入库日期:”, 到文本 (取日期 (.今天))))


赋值 (订单号码, .内容)
赋值 (型号码, .内容)
赋值 (数量值, 到整数 (.内容))
赋值 (入库日, 取日期 (.今天))
赋值 (备注信息, .内容)

.如果 (等于 (.选中, 真))
    赋值 (出货日, 取日期 (.今天))
    
.否则
    赋值 (出货日, 到时间 (“1899年12月30日”))
    
.如果结束
窗口输入订单.销毁 ()

信息框 (“请右键点击相关空白库位进行加入！”, 0, “提示”)




.子程序 _窗口输入订单_创建完毕, 空白型, , 
赋值 (窗口输入订单., 相加 (“请输入新入订单情况! 当前加入区域为:”, 区码))
赋值 (.标题, 相加 (“加入区域”, 区码))
赋值 (.标题, 相加 (“加入区域”, 区码))

.子程序 _按钮取消输入新_被单击, 空白型, , 
销毁 ()


.子程序 _按钮确认输入新其他_被单击, 空白型, , 
.参数 匿名参数_4164, 空白型, , 

.局部变量 提示信息, 文本型, , , 


.判断开始 (等于 (.内容, “”))
    
    信息框 (“请将各项信息输入完整！”, 0, “警告”)
    
    返回 ()
    
.默认
    
.判断结束
赋值 (.数据库文件名, 相加 (取运行目录 (), “\库位数据.edb”))
打开 (相加 (取运行目录 (), “\库位数据.edb”), , , , , , )
赋值 (提示信息, 相加 (“备注:”, .内容, #换行符, “入库日期:”, 到文本 (取日期 (.今天))))

 ' .如果 (等于 (信息框 (相加 (“是否加入？”, #换行符, 提示信息), 1, “是否加入以下单？”), 0))
    加空记录 ()
    写 (1, “其他货物”)
    写 (2, 区码)
    写 (3, “多种”)
    写 (5, 取日期 (.今天))
    .如果 (等于 (.选中, 真))
        写 (6, 取日期 (.今天))
    .否则
        
        
    .如果结束
    写 (7, .内容)
    
    信息框 (“加入成功！”, 0, “提示”)
    
    销毁 ()
    
.否则
    
.如果结束

配置颜色 ()
设置色彩A ()
设置色彩B ()
设置色彩C ()
设置色彩D ()
设置色彩E ()

文字信息 ()


.子程序 _按钮取消输入新其他_被单击, 空白型, , 
销毁 ()


.子程序 _按钮确认输入新1_被单击, 空白型, , 
.局部变量 提示信息1, 文本型, , , 

.判断开始 (等于 (.内容, “”))
    信息框 (“请将各项信息输入完整！”, 0, “警告”)
    返回 ()
    
.判断 (等于 (.内容, “”))
    信息框 (“请将各项信息输入完整！”, 0, “警告”)
    返回 ()
    
.判断 (等于 (.内容, “”))
    信息框 (“请将各项信息输入完整！”, 0, “警告”)
    返回 ()
.默认
    
.判断结束

赋值 (.数据库文件名, 相加 (取运行目录 (), “\库位数据.edb”))
打开 (相加 (取运行目录 (), “\库位数据.edb”), , , , , , )
赋值 (提示信息1, 相加 (“订单号:”, .内容, #换行符, “型号:”, .内容, #换行符, “数量:”, .内容, #换行符, “备注:”, .内容, #换行符, “入库日期:”, 到文本 (取日期 (.今天))))


赋值 (订单号码, .内容)
赋值 (型号码, .内容)
赋值 (数量值, 到整数 (.内容))
赋值 (入库日, 取日期 (.今天))
赋值 (备注信息, .内容)

.如果 (等于 (.选中, 真))
    赋值 (出货日, 取日期 (.今天))
    
.否则
    赋值 (出货日, 到时间 (“1899年12月30日”))
    
.如果结束

加空记录 ()
写 (1, 订单号码)
写 (2, 区码)
写 (3, 型号码)
写 (4, 数量值)
写 (5, 入库日)
写 (6, 出货日)
写 (7, 备注信息)
连续赋值 (“”, 订单号码, 区码, 型号码, 备注信息)
配置颜色 ()
设置色彩A ()
设置色彩B ()
设置色彩C ()
设置色彩D ()
设置色彩E ()

文字信息 ()

信息框 (“加入成功！请继续加入！”, 0, “提示”)
销毁 ()


.子程序 _按钮取消输入新1_被单击, 空白型, , 
销毁 ()

.窗口程序集 窗口程序集2, , , 

.子程序 _按钮查询备份_被单击, 空白型, , 
 ' 未知支持库函数_56 (相加 (取运行目录 (), “\备份\”, 时间到文本 (.今天, 2)))
销毁 ()


.窗口程序集 窗口程序集3, , , 

.子程序 _日期框更改_选择日期被改变, 空白型, , 
赋值 (.禁止, 假)


.子程序 _按钮更改日期取消_被单击, 空白型, , 
销毁 ()


.窗口程序集 窗口程序集4, , , 

.子程序 _窗口订单更改_创建完毕, 空白型, , 
.局部变量 N, 整数型, , , 

赋值 (.数据库文件名, 相加 (取运行目录 (), “\库位数据.edb”))
打开 (相加 (取运行目录 (), “\库位数据.edb”), , , , , , )

置当前库 (“库位数据”)
到首记录 ()

.如果真 (等于 (查找 (等于 (读字段 (#区域, ), 明细关键字)), 真))
    
    赋值 (.内容, 读 (#订单号))
    赋值 (.内容, 读 (#区域))
    赋值 (.内容, 到文本 (读 (#订单数量)))
    赋值 (.内容, 读 (#型号))
    赋值 (.内容, 读 (#备注))
    
    赋值 (.标题, 相加 (“入库日期”, 到文本 (读 (#入库日期))))
    .判断开始 (等于 (到文本 (读 (#出货日期)), “1899年12月30日”))
        赋值 (.标题, 相加 (“出货日期”, “待定”))
    .默认
        赋值 (.标题, 相加 (“出货日期”, 到文本 (读 (#出货日期))))
        
    .判断结束
    
.如果真结束





.子程序 _按钮修改_被单击, 空白型, , 
.判断开始 (等于 (.标题, “修改”))
     ' .判断开始 (等于 (.内容, “其他货物”))
        连续赋值 (假, .禁止, .禁止, .禁止, .禁止, .禁止, .禁止, .禁止)
    .默认
        连续赋值 (假, .禁止, .禁止, .禁止, .禁止, .禁止, .禁止, .禁止, .禁止, .禁止, .禁止)
    .判断结束
    
    
    
    赋值 (.禁止, 真)
    赋值 (.禁止, 真)
    赋值 (.禁止, 真)
    
    赋值 (.标题, “确定”)
    
.默认
    
    更新录入 ()
    
     ' 信息框 (“更新成功！”, 0, “提示”)
    销毁 ()
    
.判断结束



.子程序 更新录入, 空白型, , 



.如果真 (等于 (查找 (等于 (读字段 (#区域, ), 明细关键字)), 真))
    
    写 (#订单号, .内容)
    写 (#型号, .内容)
    写 (#订单数量, 到整数 (.内容))
    写 (#备注, .内容)
    .判断开始 (等于 (.选中, 真))
        写 (#区域, .内容)
        写配置项 (相加 (取运行目录 (), “\clor.ini”), 明细关键字, “颜色”, “绿色”)
        
    .默认
        
        
    .判断结束
    
    .判断开始 (等于 (.选中, 真))
        写 (#入库日期, 取日期 (.今天))
    .默认
        
        
    .判断结束
    
    .判断开始 (等于 (.选中, 真))
        写 (#出货日期, 取日期 (.今天))
    .默认
        写 (#出货日期, 到时间 (“1899年12月30日”))
        
    .判断结束
    
.如果真结束
 ' 主窗口.置标题 (., 主窗口.., 0, .内容)
主窗口.置标题 (., 主窗口.., 1, .内容)
主窗口.置标题 (., 主窗口.., 2, .内容)
主窗口.置标题 (., 主窗口.., 3, .内容)
主窗口.置标题 (., 主窗口.., 4, 时间到文本 (取日期 (.今天), ))
.判断开始 (等于 (.选中, 真))
    主窗口.置标题 (., 主窗口.., 5, 时间到文本 (取日期 (.今天), ))
.默认
    主窗口.置标题 (., 主窗口.., 5, “1899年12月30日”)
.判断结束

主窗口.置标题 (., 主窗口.., 6, .内容)
配置颜色 ()
设置色彩A ()
设置色彩B ()
设置色彩C ()
设置色彩D ()
设置色彩E ()

文字信息 ()


.子程序 _编辑框区域_失去焦点, 空白型, , 
置当前库 (“库位数据”)
到首记录 ()

.如果真 (等于 (查找 (等于 (读字段 (#区域, ), .内容)), 真))
    信息框 (“该区域已有库位请重新填写！”, 0, “警告”)
    赋值 (.内容, 明细关键字)
    返回 ()
    
.如果真结束


.子程序 _按钮取消_被单击, 空白型, , 
销毁 ()


.子程序 _按钮删除_被单击, 空白型, , 

.判断开始 (等于 (信息框 (相加 (“是否决定删除”, 明细关键字, “中的订单？”), 1, “警告!”), 0))
    写配置项 (相加 (取运行目录 (), “\clor.ini”), 明细关键字, “颜色”, “绿色”)
    
    删除 ()
    彻底删除 ()
    
    主窗口.全部删除 (.)
    
    主窗口.超级列表框刷新 ()
    销毁 ()
    
    配置颜色 ()
    设置色彩A ()
    设置色彩B ()
    设置色彩C ()
    设置色彩D ()
    设置色彩E ()
    
    文字信息 ()
    
    
.默认
    
.判断结束


.子程序 _按钮上一条_被单击, 空白型, , 
.如果真 (等于 (取记录号 (), 1))
    
    信息框 (“前面已无记录”, 0, )
    返回 ()
.如果真结束
跳过 (-1)
赋值 (.内容, 读 (#订单号))
赋值 (.内容, 读 (#区域))
赋值 (.内容, 到文本 (读 (#订单数量)))
赋值 (.内容, 读 (#型号))
赋值 (.内容, 读 (#备注))
赋值 (.标题, 相加 (“入库日期”, 到文本 (读 (#入库日期))))
.判断开始 (等于 (到文本 (读 (#出货日期)), “1899年12月30日”))
    赋值 (.标题, 相加 (“出货日期”, “待定”))
.默认
    赋值 (.标题, 相加 (“出货日期”, 到文本 (读 (#出货日期))))
.判断结束







.子程序 _按钮下一条_被单击, 空白型, , 
 ' .如果真 (等于 (取记录号 (), 取记录数 ()))
    信息框 (“后面已无记录”, 0, )
    返回 ()
    
.如果真结束
 ' 跳过 ()
赋值 (.内容, 读 (#订单号))
赋值 (.内容, 读 (#区域))
赋值 (.内容, 到文本 (读 (#订单数量)))
赋值 (.内容, 读 (#型号))
赋值 (.内容, 读 (#备注))
赋值 (.标题, 相加 (“入库日期”, 到文本 (读 (#入库日期))))
.判断开始 (等于 (到文本 (读 (#出货日期)), “1899年12月30日”))
    赋值 (.标题, 相加 (“出货日期”, “待定”))
.默认
    赋值 (.标题, 相加 (“出货日期”, 到文本 (读 (#出货日期))))
.判断结束







 ' 不属于任何一个程序集、类模块的函数：
