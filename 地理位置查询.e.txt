 ' 文件类型：Windows模块源码

 ' 程序名称：地理位置查询
 ' 程序描述：本类是基于作者
马秉尧的IP地理位置查询类(IPlocal.php)所更改的

修改&移植:路过已错过
QQ:43581066

070520
可以读取CoralWry.dat(珊瑚虫IP数据库)
如果不初始化并且运行文件夹下同时存在2个IP文件(QQWry.dat和CoralWry.dat)将优先使用QQWry.dat,可以在子程序的首部进行调整!
 ' 程序作者：路过已错过
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.1
 ' 创建号：0.0





 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 4 系统核心支持库





.程序集 程序集1, , , 

.子程序 _启动子程序, 整数型, , 请在本子程序中放置易模块初始化代码
_临时子程序 () ' 在初始化代码执行完毕后调用测试代码
返回 (0) ' 可以根据您的需要返回任意数值

.子程序 _临时子程序, 空白型, , 
.局部变量 ip, 地理位置查询, , , 
.局部变量 地址, 文本型, , , 

 ' 本名称子程序用作测试程序用，仅在开发及调试环境中有效，编译发布程序前将被系统自动清空，请将所有用作测试的临时代码放在本子程序中。 ***注意不要修改本子程序的名称、参数及返回值类型。
 ' ip.初始化 (“D:\QQ类\软件类\腾讯QQ珊瑚虫外挂\CoralWry.dat”)
置随机数种子 ()
.判断循环首 (等于 (地址, “”))
    赋值 (地址, 相加 (到文本 (取随机数 (0, 255)), “.”, 到文本 (取随机数 (0, 255)), “.”, 到文本 (取随机数 (0, 255)), “.”, 到文本 (取随机数 (0, 255))))
    输出调试文本 (相加 (地址, 字符 (#Tab键), ip.地理位置查询 (地址)))
    赋值 (地址, “”)
.判断循环尾 ()


.类模块 地理位置查询, , , 本类是基于作者 马秉尧的IP地理位置查询类(IPlocal.php) 所更改的,源码已打包,修改&移植:路过已错过 QQ:43581066

.程序集变量 fp, 整数型, , , QQWry.Dat文件指针
.程序集变量 firstip, 整数型, , , 第一条IP记录的偏移地址
.程序集变量 lastip, 整数型, , , 最后一条IP记录的偏移地址
.程序集变量 totalip, 整数型, , , IP记录的总条数（不包含版本信息记录）
.子程序 初始化, 逻辑型, , 本方法可以省略，如果不使用本方法请将QQWry.dat或CoralQQ.dat放至运行目录下即可直接使用 地理位置查询()。
.参数 IP文件路径, 文本型, , 

.如果真 (文件是否存在 (IP文件路径))
    赋值 (fp, 打开文件 (IP文件路径, #读入, #无限制))
    赋值 (firstip, GetLong ())
    赋值 (lastip, GetLong ())
    赋值 (totalip, 相除 (相减 (lastip, firstip), 7))
    返回 (不等于 (fp, 0))
.如果真结束
返回 (假)

.子程序 地理位置查询, 文本型, , 根据所给 IP 地址或域名返回所在地区信息
.参数 IP地址, 文本型, , 

.局部变量 IP, 长整数型, , , 
.局部变量 l, 整数型, , , 
.局部变量 u, 整数型, , , 
.局部变量 findip, 整数型, , , 
.局部变量 i, 整数型, , , 
.局部变量 beginip, 长整数型, , , 
.局部变量 endip, 长整数型, , , 
.局部变量 offset, 整数型, , , 
.局部变量 byte, 字节集, , , 
.局部变量 country, 文本型, , , 
.局部变量 area, 文本型, , , 

.如果真 (等于 (fp, 0))
    .如果真 (或者 (初始化 (相加 (取运行目录 (), “\QQWry.dat”)), 初始化 (相加 (取运行目录 (), “\CoralWry.dat”))))
         ' 如果文件夹下同时出现2个IP文件,可将两个IP文件的检测调换位置来获得读取优先级.
        返回 (地理位置查询 (IP地址)) ' 如果初始化成功，直接传递给函数并返回结果
    .如果真结束
    返回 (“”) ' 文件不存在并且初始化失败，则直接返回空
.如果真结束
 ' 对分搜索
赋值 (u, totalip) ' 搜索的上边界
赋值 (findip, lastip) ' 如果没有找到就返回最后一条IP记录（QQWry.Dat的版本信息）
赋值 (IP, ip2long (IP地址)) ' 将输入的IP地址转化为可比较的IP地址
.判断循环首 (小于或等于 (l, u))
    赋值 (i, 四舍五入 (相除 (相加 (l, u), 2), 0)) ' 计算近似中间记录
    移动读写位置 (fp, #文件首, 相加 (firstip, 相乘 (i, 7)))
    赋值 (beginip, 取字节集数据 (读入字节集 (fp, 4), #长整数型, ))
    .判断开始 (小于 (IP, beginip)) ' 用户的IP小于中间记录的开始IP地址时
        赋值 (u, 相减 (i, 1)) ' 将搜索的上边界修改为中间记录减一
    .默认
        移动读写位置 (fp, #文件首, GetLong3 ())
        赋值 (endip, 取字节集数据 (读入字节集 (fp, 4), #长整数型, )) ' 获取中间记录的结束IP地址
        .判断开始 (大于 (IP, endip)) ' 用户的IP大于中间记录的结束IP地址时
            赋值 (l, 相加 (i, 1)) ' 将搜索的下边界修改为中间记录加一
        .默认
            赋值 (findip, 相加 (firstip, 相乘 (i, 7))) ' 用户的IP在中间记录的IP范围内时
            跳出循环 () ' 则表示找到结果，退出循环
        .判断结束
        
    .判断结束
    
.判断循环尾 ()
 ' 获取查找到的IP地理位置信息
移动读写位置 (fp, #文件首, 相加 (findip, 4))
 ' ips ＝ long2ip (GetLong ())  ' IP起始位置
赋值 (offset, GetLong3 ())
移动读写位置 (fp, #文件首, 相加 (offset, 4))
 ' ipe ＝ long2ip (GetLong ())  ' IP结束位置
赋值 (byte, 读入字节集 (fp, 1)) ' 标志字节
.判断开始 (等于 (Ord (byte), 1)) ' 标志字节为1，表示国家和区域信息都被同时重定向
    赋值 (offset, GetLong3 ()) ' 重定向地址
    移动读写位置 (fp, #文件首, offset)
    赋值 (byte, 读入字节集 (fp, 1)) ' 标志字节
    .判断开始 (等于 (Ord (byte), 2)) ' 标志字节为2，表示国家信息又被重定向
        移动读写位置 (fp, #文件首, GetLong3 ())
        赋值 (country, GetString ())
        移动读写位置 (fp, #文件首, 相加 (offset, 4))
        赋值 (area, GetArea ())
    .默认
        赋值 (country, GetString (byte)) ' 否则，表示国家信息没有被重定向
        赋值 (area, GetArea ())
    .判断结束
    
.判断 (等于 (Ord (byte), 2)) ' 标志字节为2，表示国家信息被重定向
    移动读写位置 (fp, #文件首, GetLong3 ())
    赋值 (country, GetString ())
    移动读写位置 (fp, #文件首, 相加 (offset, 8))
    赋值 (area, GetArea ())
.默认
    赋值 (country, GetString (byte)) ' 否则，表示国家信息没有被重定向
    赋值 (area, GetArea ())
.判断结束
.如果真 (或者 (不等于 (寻找文本 (country, “未知IP”, , 假), -1), 不等于 (寻找文本 (country, “珊瑚虫版IP数据库”, , 假), -1)))
     ' 过滤珊瑚虫未知IP信息
    赋值 (country, “未知”)
    赋值 (area, “”)
.如果真结束
赋值 (country, 选择 (等于 (country, “ CZ88.NET”), “未知”, country)) ' 过滤纯真,CZ88.NET表示没有有效信息
赋值 (area, 选择 (等于 (area, “ CZ88.NET”), “”, area))
返回 (相加 (country, area))

.子程序 GetLong, 长整数型, , 返回读取的长整型数
返回 (取字节集数据 (读入字节集 (fp, 4), #长整数型, ))

.子程序 GetLong3, 长整数型, , 返回读取的3个字节的长整型数
返回 (取字节集数据 (相加 (读入字节集 (fp, 3), 到字节集 (字符 (0))), #长整数型, ))

.子程序 GetString, 文本型, , 返回读取的字符串
.参数 data, 字节集, 可空, 

.局部变量 char, 字节集, , , 

赋值 (char, 读入字节集 (fp, 1))
.判断循环首 (大于 (Ord (char), 0))
    赋值 (data, 相加 (data, char))
    赋值 (char, 读入字节集 (fp, 1))
.判断循环尾 ()
返回 (到文本 (data))

.子程序 GetArea, 文本型, , 返回地区信息
.局部变量 Area, 文本型, , , 
.局部变量 byte, 字节集, , , 

赋值 (byte, 读入字节集 (fp, 1))
.判断开始 (等于 (Ord (byte), 0))
    赋值 (Area, “”)
.判断 (或者 (等于 (Ord (byte), 1), 等于 (Ord (byte), 2)))
    移动读写位置 (fp, #文件首, GetLong3 ())
    赋值 (Area, GetString ())
.默认
    赋值 (Area, GetString (byte))
.判断结束
返回 (Area)

.子程序 Ord, 整数型, , 返回字符的序数值。本函数和 chr() 函数相反。
.参数 byte, 字节集, , 

 ' ！！！！！！！！！！！！！！！！！！！！
 ' ！！！！！！！！注意！！！！！！！！！！
 ' ！！！！！！！！！！！！！！！！！！！！
 ' ！如果这里使用 取代码() 函数将出现错误！
 ' ！！！！！！从而导致取出失败！！！！！！
 ' ！！！！！！！！！！！！！！！！！！！！
返回 (取字节集数据 (取字节集左边 (byte, 1), 3, ))

.子程序 ip2long, 长整数型, , 文本IP到整数IP
.参数 IP地址, 文本型, , 

.局部变量 IP, 文本型, , "0", 

赋值 (IP, 分割文本 (IP地址, “.”, ))
.如果真 (不等于 (取数组成员数 (IP), 4))
    返回 (0)
.如果真结束
返回 (相加 (到数值 (IP [4]), 相乘 (到数值 (IP [3]), 256), 相乘 (到数值 (IP [2]), 求次方 (256, 2)), 相乘 (到数值 (IP [1]), 求次方 (256, 3))))

.子程序 long2ip, 文本型, , 整数IP到文本IP
.参数 IP地址, 长整数型, , 

.局部变量 临时变量, 字节集, , , 

.如果真 (大于 (取绝对值 (IP地址), 4294967295))
    返回 (“255.255.255.255”)
.如果真结束
赋值 (临时变量, 到字节集 (IP地址))
返回 (相加 (到文本 (临时变量 [4]), “.”, 到文本 (临时变量 [3]), “.”, 到文本 (临时变量 [2]), “.”, 到文本 (临时变量 [1])))

.子程序 销毁, 空白型, , 
.如果真 (不等于 (fp, 0))
    关闭文件 (fp)
.如果真结束
赋值 (fp, 0)

.子程序 _销毁, 空白型, , 当基于本类的对象被销毁前，此方法会被自动调用
销毁 ()


 ' 不属于任何一个程序集、类模块的函数：
