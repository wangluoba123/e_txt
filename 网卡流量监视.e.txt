 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 245
    高度 = 169
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假





 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 4 系统核心支持库
 ' iext 27bb20fdd3e145e4bee3db39ddd6e64c 1 2 扩展界面支持库一
 ' eAPI F7FC1AE45C5C4758AF03EF19F18A395D 1 1 应用接口支持库




数据类型 MIB_IFROW, , 
    .成员 wszName, 字节集, , , 
    .成员 dwIndex, 整数型, , , 编号
    .成员 dwType, 整数型, , , 界面类型
    .成员 dwMtu, 整数型, , , 最大传输单元
    .成员 dwSpeed, 整数型, , , 界面速度
    .成员 dwPhysAddrLen, 整数型, , , 物理地址部分有效长度
    .成员 bPhysAddr, 字节集, , , 物理地址
    .成员 dwAdminStatus, 整数型, , , 管理状态
    .成员 dwOperStatus, 整数型, , , 操作状态
    .成员 dwLastChange, 整数型, , , 操作状态最近更新时间
    .成员 dwInOctets, 整数型, , , 总共收到(字节)
    .成员 dwInUcastPkts, 整数型, , , 总共收到(unicast包)
    .成员 dwInNUcastPkts, 整数型, , , 总共收到(non-unicast包)
    .成员 dwInDiscards, 整数型, , , 丢弃包总数（收到）
    .成员 dwInErrors, 整数型, , , 出错包总数（收到）
    .成员 dwInUnknownProtos, 整数型, , , 其它包总数（收到）
    .成员 dwOutOctets, 整数型, , , 总共发送(字节)
    .成员 dwOutUcastPkts, 整数型, , , 总共发送(unicast包)
    .成员 dwOutNUcastPkts, 整数型, , , 总共发送(non-unicast包)
    .成员 dwOutDiscards, 整数型, , , 丢弃包总数（发送）
    .成员 dwOutErrors, 整数型, , , 出错包总数（发送）
    .成员 dwOutQLen, 整数型, , , 发送队列长度
    .成员 dwDescrLen, 整数型, , , 界面描述部分有效长度
    .成员 bDescr, 字节集, , , 界面描述


.DLL命令 发送消息_, 整数型, "user32", "SendMessageA", , , 调用一个窗口的窗口函数，将一条消息发给那个窗口。除非消息处理完毕，否则该函数不会返回。SendMessageBynum， ;    SendMessageByString是该函数的“类型安全”声明形式  由具体的消息决定
    .参数 窗口句柄, 整数型, , 要接收消息的那个窗口的句柄
    .参数 信息值, 整数型, , 消息的标识符
    .参数 参数一, 逻辑型, , 具体取决于消息
    .参数 参数二, 整数型, , 具体取决于消息;

.DLL命令 取网络信息, 整数型, "iphlpapi", "GetIfTable", , 
    .参数 信息表, 字节集, 传址, 
    .参数 信息表尺寸, 整数型, 传址, 
    .参数 内参数, 整数型, , 

.窗口程序集 窗口程序集1, , , 

.程序集变量 信息记录, MIB_IFROW, , "0", 
.程序集变量 原接收总计, 整数型, , , 
.程序集变量 原发送总计, 整数型, , , 
.程序集变量 接收进度条句柄, 整数型, , , 
.程序集变量 发送进度条句柄, 整数型, , , 
.程序集变量 总流量, 小数型, , , 
.程序集变量 CPU进度条句柄, 整数型, , , 
.程序集变量 内存进度条句柄, 整数型, , , 
.子程序 __启动窗口_创建完毕, 空白型, , 
赋值 (发送进度条句柄, 取窗口句柄 ())

赋值 (接收进度条句柄, 取窗口句柄 ())

赋值 (CPU进度条句柄, 取窗口句柄 ())

赋值 (内存进度条句柄, 取窗口句柄 ())

赋值 (总流量, 0)
赋值 (_启动窗口., 相加 (“启动时间:”, 到文本 (取现行时间 ())))

.子程序 计算流量, 空白型, , 
.参数 监控编号, 整数型, , 

.局部变量 发送速率, 整数型, , , 
.局部变量 接收速率, 整数型, , , 
.局部变量 整数容器, 整数型, , , 
.局部变量 接收, 文本型, , , 
.局部变量 CPU占用率, 整数型, , , 
.局部变量 总物理内存, 整数型, , , 
.局部变量 可用物理内存, 整数型, , , 
.局部变量 已使用的内存, 小数型, , , 
.局部变量 发送, 文本型, , , 

 ' ----------------------------------------------------------
 ' 接收
.如果真 (等于 (原接收总计, 0))
    赋值 (原接收总计, 信息记录 [监控编号], dwInOctets)
.如果真结束
赋值 (接收速率, 相减 (信息记录 [监控编号], dwInOctets, 原接收总计))
赋值 (接收, 数值到格式文本 (相除 (接收速率, 1024), 2, 假))
赋值 (原接收总计, 信息记录 [监控编号], dwInOctets)
赋值 (.位置, 相除 (到数值 (接收), 2))
发送消息_ (接收进度条句柄, 1033, 真, #品红)
赋值 (.内容, 相加 (到文本 (接收), “KB”))
 ' -------------------------------------------------------------
 ' 发送
.如果真 (等于 (原发送总计, 0))
    赋值 (原发送总计, 信息记录 [监控编号], dwOutOctets)
.如果真结束
赋值 (发送速率, 相减 (信息记录 [监控编号], dwOutOctets, 原发送总计))
赋值 (发送, 数值到格式文本 (相除 (发送速率, 1024), 2, 假))
赋值 (原发送总计, 信息记录 [监控编号], dwOutOctets)
赋值 (.位置, 相除 (到数值 (发送), 2))
发送消息_ (发送进度条句柄, 1033, 真, #天蓝)
赋值 (.内容, 相加 (到文本 (发送), “KB”))
 ' ------------------------------------------------------------------
 ' 系统信息
赋值 (CPU占用率, 未知支持库函数_18 ())
赋值 (.位置, CPU占用率)
发送消息_ (CPU进度条句柄, 1033, 真, #红色)
赋值 (.内容, 相加 (到文本 (CPU占用率), “%”))
赋值 (总物理内存, 未知支持库函数_19 (0))
赋值 (可用物理内存, 未知支持库函数_19 (1))

赋值 (已使用的内存, 相减 (1, 相除 (可用物理内存, 总物理内存)))
赋值 (.位置, 四舍五入 (相乘 (已使用的内存, 100), 0))
发送消息_ (内存进度条句柄, 1033, 真, #墨绿)
赋值 (.内容, 相加 (到文本 (四舍五入 (相乘 (已使用的内存, 100), 0)), “%”))
 ' 画板模拟进度条 (内存画板, 总物理内存, 已使用的内存, 1, 到文本 (已使用的内存) ＋ “MB”)
 ' 画板模拟进度条 (内存画板, 100, 已使用的内存 × 100, 1, 到文本 (四舍五入 (已使用的内存 × 100, 0)) ＋ “%”)
 ' ----------------------------------
 ' 总流量
赋值 (总流量, 相加 (总流量, 相除 (相加 (相除 (接收速率, 1024), 相除 (发送速率, 1024)), 1024)))

赋值 (.标题, 相加 (到文本 (四舍五入 (总流量, 2)), “MB”))

.子程序 _时钟1_周期事件, 空白型, , 
取信息记录 ()
计算流量 (2)


.子程序 取信息记录, 空白型, , 
.局部变量 成员数, 整数型, , , 
.局部变量 信息集, 字节集, , , 
.局部变量 缓冲区尺寸, 整数型, , , 
.局部变量 起始位, 整数型, , , 
.局部变量 整数容器, 整数型, , , 

取网络信息 ({ 0 }, 缓冲区尺寸, 0)
.如果真 (小于或等于 (缓冲区尺寸, 0))
    返回 ()
.如果真结束
赋值 (信息集, 取空白字节集 (缓冲区尺寸))
.如果真 (不等于 (取网络信息 (信息集, 缓冲区尺寸, 1), 0))
    返回 ()
.如果真结束
赋值 (成员数, 取字节集数据 (取字节集左边 (信息集, 4), #整数型, ))
赋值 (信息集, 取字节集右边 (信息集, 相减 (缓冲区尺寸, 4)))
重定义数组 (信息记录, 假, 成员数)
.计次循环首 (成员数, 整数容器)
    赋值 (起始位, 相乘 (相减 (整数容器, 1), 860))
    赋值 (信息记录 [整数容器], dwInOctets, 取字节集数据 (取字节集中间 (信息集, 相加 (起始位, 553), 4), #整数型, ))
    赋值 (信息记录 [整数容器], dwOutOctets, 取字节集数据 (取字节集中间 (信息集, 相加 (起始位, 577), 4), #整数型, ))
.计次循环尾 ()


 ' 不属于任何一个程序集、类模块的函数：
