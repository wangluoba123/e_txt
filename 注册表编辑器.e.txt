 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 703
    高度 = 412
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 已保存到：D:\易语言学习\Data\注册表编辑器.e\_启动窗口_图标.ico
    背景音乐 =  ' 空
    标题 = “注册表编辑器                    鸿仔开发(QQ:363938503)”
    帮助文件名 = “”

窗口 编辑字符串值
    左边 = 50
    顶边 = 50
    宽度 = 384
    高度 = 152
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 已保存到：D:\易语言学习\Data\注册表编辑器.e\编辑字符串值_图标.ico
    背景音乐 =  ' 空
    标题 = “编辑字符串值”
    帮助文件名 = “”

窗口 编辑数值
    左边 = 50
    顶边 = 50
    宽度 = 324
    高度 = 180
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 已保存到：D:\易语言学习\Data\注册表编辑器.e\编辑数值_图标.ico
    背景音乐 =  ' 空
    标题 = “编辑 DWORD 值”
    帮助文件名 = “”

窗口 多字符
    左边 = 50
    顶边 = 50
    宽度 = 352
    高度 = 295
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 已保存到：D:\易语言学习\Data\注册表编辑器.e\多字符_图标.ico
    背景音乐 =  ' 空
    标题 = “编辑多字符串”
    帮助文件名 = “”



.常量 HKEY_LOCAL_MACHINE, "2147483650", , &H80000002
.常量 HKEY_CLASSES_ROOT, "2147483648", , &H80000000
.常量 HKEY_CURRENT_USER, "2147483649", , &H80000001
.常量 HKEY_USERS, "2147483651", , &H80000003
.常量 HKEY_CURRENT_CONFIG, "2147483653", , &H80000005
.常量 HKEY_DYN_DATA, "2147483654", , &H80000006


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 4 系统核心支持库
 ' iext 27bb20fdd3e145e4bee3db39ddd6e64c 1 2 扩展界面支持库一
 ' commobj {A068799B-7551-46b9-8CA8-EEF8357AFEA4} 1 0 通用对象支持库





.DLL命令 RegEnumKey, 整数型, "", "RegEnumKeyA", , 
    .参数 hKey, 整数型, , 
    .参数 dwIndex, 整数型, , 
    .参数 lpName, 文本型, 传址, 
    .参数 cbName, 整数型, , 

.DLL命令 枚举键值, 整数型, "", "RegEnumValueA", , 零（ERROR_SUCCESS）表示成功。其他任何值都代表一个错误代码
    .参数 句柄, 整数型, , 一个已打开项的句柄，或者指定一个标准项名
    .参数 表项索引, 整数型, , 欲获取值的索引。注意第一个值的索引编号为零
    .参数 子键名, 文本型, , 用于装载位于指定索引处值名的一个缓冲区
    .参数 子键长度, 整数型, 传址, 用于装载lpValueName缓冲区长度的一个变量。一旦返回，它会设为实际载入缓冲区的字符数量
    .参数 lpReserved, 整数型, , 未用设为零
    .参数 键值类型, 整数型, 传址, 值的类型，用于装载值的类型代码的变量
    .参数 键值数据, 字节集, 传址, 用于装载值数据的一个缓冲区
    .参数 键值缓寸, 整数型, 传址, 用于装载lpData缓冲区长度的一个变量。一旦返回，它会设为实际载入缓冲区的字符数量

.DLL命令 RegQueryValueEx, 整数型, "advapi32.dll", "RegQueryValueExA", , 获取一个项的设置值  零（ERROR_SUCCESS）表示成功。其他任何值都代表一个错误代码
    .参数 hKey, 整数型, , 一个已打开项的句柄，或者指定一个标准项名
    .参数 lpValueName, 文本型, , 要获取值的名字
    .参数 lpReserved, 整数型, , 未用，设为零
    .参数 lpType, 整数型, 传址, 用于装载取回数据类型的一个变量
    .参数 lpData, 字节集, 传址, 用于装载指定值的一个缓冲区
    .参数 lpcbData, 整数型, 传址, 用于装载lpData缓冲区长度的一个变量。一旦返回，它会设为实际装载到缓冲区的字节数;

.DLL命令 RegDeleteValue, 整数型, "advapi32.dll", "RegDeleteValueA", , 删除指定项下方的一个值  零（ERROR_SUCCESS）表示成功。其他任何值都代表一个错误代码
    .参数 hKey, 整数型, , 一个已打开项的句柄，或标准项名之一
    .参数 lpValueName, 文本型, , 要删除的值名。可设为vbNull或一个空串，表示删除那个项的默认值;

.DLL命令 RegSetValueEx, 整数型, "advapi32.dll", "RegSetValueExA", , 设置指定项的值  零（ERROR_SUCCESS）表示成功。其他任何值都代表一个错误代码
    .参数 hKey, 整数型, , 一个已打开项的句柄，或指定一个标准项名
    .参数 lpValueName, 文本型, , 要设置值的名字
    .参数 Reserved, 整数型, , 未用，设为零
    .参数 dwType, 整数型, , 要设置的数量类型
    .参数 lpData, 字节集, , 包含数据的缓冲区中的第一个字节
    .参数 cbData, 整数型, , lpData缓冲区的长度;

.DLL命令 RegCreateKey, 整数型, "advapi32.dll", "RegCreateKeyA", , 在指定的项下创建一个新项。如指定的项已经存在，那么函数会打开现有的项  零（ERROR_SUCCESS）表示成功。其他任何值都代表一个错误代码
    .参数 hKey, 整数型, , 要打开项的句柄，或者一个标准项名
    .参数 lpSubKey, 文本型, , 欲创建的新子项。可同时创建多个项，只需用反斜杠将它们分隔开即可。例如level1\level2\newkey
    .参数 phkResult, 整数型, 传址, 指定一个变量，用于装载新子项的句柄;

.DLL命令 RegOpenKey, 整数型, "advapi32.dll", "RegOpenKeyA", , 打开一个现有的注册表项  零（ERROR_SUCCESS）表示成功。其他任何值都代表一个错误代码
    .参数 hKey, 整数型, , 一个已打开项的句柄，或指定一个标准项名
    .参数 lpSubKey, 文本型, , 要打开的项名
    .参数 phkResult, 整数型, 传址, 指定一个变量，用于装载（保存）打开注册表项的一个句柄;

.DLL命令 RegDeleteKey, 整数型, "advapi32.dll", "RegDeleteKeyA", , 删除现有项下方一个指定的子项  零（ERROR_SUCCESS）表示成功。其他任何值都代表一个错误代码
    .参数 hKey, 整数型, , 一个已打开项的句柄，或者标准项名之一
    .参数 lpSubKey, 文本型, , 要删除项的名字。这个项的所有子项也会删除;

.窗口程序集 _启动窗口窗口程序集, , , 

.程序集变量 添加, 逻辑型, , , 
.程序集变量 删除键句柄, 整数型, , "0", 
.子程序 _树型框1_项目被选择, 空白型, , 
.参数 选择方式, 整数型, , 

.局部变量 文本, 文本型, , , 
.局部变量 i, 整数型, , , 
.局部变量 匿名局部变量_72, 空白型, , , 
.局部变量 项名, 文本型, , , 
.局部变量 索引, 空白型, , , 
.局部变量 类型, 空白型, , , 
.局部变量 结果, 空白型, , , 
.局部变量 内容, 字节集, , , 
.局部变量 内容长度, 整数型, , , 
.局部变量 位置1, 空白型, , , 

.如果真 (添加)
    返回 ()
.如果真结束

.如果真 (或者 (等于 (.最大化按钮, -1), 等于 (.最大化按钮, 0)))
    返回 ()
.如果真结束
赋值 (i, .最大化按钮)
.判断循环首 (不等于 (i.取父项目 (), -1))
    赋值 (文本, 相加 (i.取项目文本 (), “\”, 文本))
    赋值 (i, i.取父项目 ())
.判断循环尾 ()
0.置文本 (取文本左边 (文本, 相减 (取文本长度 (文本), 1)))

 ' '''''''''

全部删除 ()
.插入表项 (“(默认)”, , , , )
0.置标题 (2, “(数值未设置)”)
0.置图片 (0, 0)
位置1.置标题 (1, “REG_SZ”)

赋值 (项名, 取空白文本 (255))
赋值 (结果, 枚举键值 (.取项目数值 (.最大化按钮), 索引, 项名, 取文本长度 (项名), 0, 类型, 内容, 取字节集长度 (内容)))
置等待鼠标 ()
.判断循环首 (等于 (结果, 0))
    赋值 (内容, 取空白字节集 (0))
    赋值 (项名, 取空白文本 (255))
    
    赋值 (结果, 枚举键值 (.取项目数值 (.最大化按钮), 索引, 项名, 取文本长度 (项名), 0, 0, 内容, 内容长度))
    .如果真 (不等于 (结果, 0))
        跳出循环 ()
    .如果真结束
    赋值 (内容, 取空白字节集 (内容长度))
    RegQueryValueEx (.取项目数值 (.最大化按钮), 项名, 0, 类型, 内容, 取字节集长度 (内容))
    
    
    .如果真 (等于 (项名, “”))
        .判断开始 (等于 (类型, 1))
            添加数据 (内容, “REG_SZ”, 0, 0)
        .判断 (等于 (类型, 2))
            添加数据 (内容, “REG_EXPAND_SZ”, 0, 0)
        .判断 (等于 (类型, 3))
            添加数据 (内容, “REG_BINARY”, 1, 0)
        .判断 (等于 (类型, 4))
            添加数据 (内容, “REG_DWORD”, 1, 0)
        .判断 (等于 (类型, 7))
            添加数据 (内容, “REG_MULTI_SZ”, 0, 0)
        .默认
            
        .判断结束
        
        赋值 (索引, 相加 (索引, 1))
        到循环尾 ()
    .如果真结束
    
    赋值 (位置1, .插入表项 (项名, , , , ))
    
    .判断开始 (等于 (类型, 1))
        添加数据 (内容, “REG_SZ”, 0, 位置1)
    .判断 (等于 (类型, 2))
        添加数据 (内容, “REG_EXPAND_SZ”, 0, 位置1)
    .判断 (等于 (类型, 3))
        添加数据 (内容, “REG_BINARY”, 1, 位置1)
    .判断 (等于 (类型, 4))
        添加数据 (内容, “REG_DWORD”, 1, 位置1)
    .判断 (等于 (类型, 7))
        添加数据 (内容, “REG_MULTI_SZ”, 0, 位置1)
    .默认
        
    .判断结束
    
    赋值 (索引, 相加 (索引, 1))
.判断循环尾 ()

 ' ''''''''''''''''''''''''''

赋值 (文本, 取空白文本 (255))
赋值 (结果, RegEnumKey (.取项目数值 (.最大化按钮), 0, 文本, 255))
.如果真 (并且 (等于 (结果, 0), 等于 (.是否有子项目 (.最大化按钮), 假)))
    .加入项目 (.最大化按钮, “ ”, , , )
.如果真结束
恢复鼠标 ()

.子程序 字节集到十六进制文本, 文本型, , 
.参数 字节集, 字节集, , 

.局部变量 变量, 整数型, , , 
.局部变量 临时文本, 文本型, , , 
.局部变量 长度, 整数型, , , 
.局部变量 文本, 未知类型0x30001, , , 
.局部变量 a, 整数型, , , 

赋值 (长度, 取字节集长度 (字节集))
.计次循环首 (长度, 变量)
    赋值 (临时文本, 取十六进制文本 (字节集 [变量]))
    文本.未知支持库函数_27 (“ ”)
    文本.未知支持库函数_27 (取重复文本 (相减 (2, 取文本长度 (临时文本)), “0”))
    文本.未知支持库函数_27 (临时文本)
    .如果真 (等于 (求余数 (变量, 16), 0)) ' 一行显示16字节
        文本.未知支持库函数_27 (#换行符)
    .如果真结束
    
.计次循环尾 ()
返回 (文本.未知支持库函数_24 ())

.子程序 _树型框1_即将扩展, 逻辑型, , 
.参数 项目索引, 整数型, , 

.局部变量 索引, 整数型, , , 
.局部变量 返回值, 整数型, , , 
.局部变量 匿名局部变量_44, 空白型, , , 
.局部变量 Tmp, 文本型, , , 
.局部变量 句柄, 整数型, , , 
.局部变量 匿名局部变量_219, 空白型, , , 
.局部变量 名称, 文本型, , "0", 
.局部变量 句柄2, 整数型, , "0", 

赋值 (.最大化按钮, 项目索引)
.如果真 (等于 (项目索引, 0))
    返回 (真)
.如果真结束

.如果真 (添加)
    返回 ()
.如果真结束

置等待鼠标 ()



 ' .如果真 (项目索引.是否有子项目 ())
     ' .如果真 (等于 (相加 (项目索引, 2).取父项目 (), 项目索引))
         ' 返回 (真)
    .如果真结束
    
.如果真结束


赋值 (Tmp, 取空白文本 (255))
赋值 (返回值, RegEnumKey (项目索引.取项目数值 (), 索引, Tmp, 取文本长度 (Tmp)))


.判断循环首 (等于 (返回值, 0))
    赋值 (Tmp, 取空白文本 (255))
    赋值 (返回值, RegEnumKey (项目索引.取项目数值 (), 索引, Tmp, 取文本长度 (Tmp)))
    
    .如果真 (不等于 (返回值, 0))
        跳出循环 ()
    .如果真结束
    
    加入成员 (名称, Tmp)
    RegOpenKey (项目索引.取项目数值 (), Tmp, 句柄)
    加入成员 (句柄2, 句柄)
    赋值 (索引, 相加 (索引, 1))
.判断循环尾 ()

项目索引.加入项目 (名称, , , 句柄2)
相加 (项目索引, 1).删除项目 ()

恢复鼠标 ()

.子程序 _树型框1_即将收缩, 逻辑型, , 
.参数 项目索引, 整数型, , 

.如果真 (等于 (.最大化按钮, 0))
    返回 (假)
.如果真结束
置等待鼠标 ()
.判断循环首 (项目索引.是否有子项目 ())
    相加 (项目索引, 1).删除项目 ()
.判断循环尾 ()
项目索引.加入项目 (“ ”, , , )

.子程序 添加数据, 空白型, , 修改数据
.参数 内容, 字节集, , 
.参数 类型, 文本型, , 
.参数 图片, 整数型, , 
.参数 位置1, 整数型, , 

位置1.置标题 (1, 类型)
.判断开始 (或者 (等于 (类型, “REG_SZ”), 等于 (类型, “REG_EXPAND_SZ”)))
    位置1.置标题 (2, 取字节集数据 (内容, 10, ))
    位置1.置图片 (0, 0)
.判断 (等于 (类型, “REG_BINARY”))
    .判断开始 (等于 (删首空 (字节集到十六进制文本 (内容)), “”))
        位置1.置标题 (2, “(长度为零的二进制位)”)
    .默认
        位置1.置标题 (2, 删首空 (字节集到十六进制文本 (内容)))
    .判断结束
    位置1.置图片 (0, 1)
.判断 (等于 (类型, “REG_DWORD”))
    位置1.置标题 (2, 到文本 (取字节集数据 (内容, 4, )))
    位置1.置图片 (0, 1)
.判断 (等于 (类型, “REG_MULTI_SZ”))
    赋值 (内容, 子字节集替换 (内容, { 0 }, { 32 }, , ))
    位置1.置标题 (2, 取字节集数据 (内容, 10, ))
    位置1.置图片 (0, 0)
.默认
    
.判断结束


.子程序 _超级列表框1_右键单击表项, 空白型, , 弹出菜单
.局部变量 被选择表项, 空白型, , "0", 

赋值 (被选择表项, 取被选择表项 ())
.判断开始 (或者 (等于 (.最大化按钮, -1), 等于 (.最大化按钮, 0)))
    赋值 (.禁止, 真)
    赋值 (.禁止, 真)
    赋值 (.禁止, 真)
    赋值 (.禁止, 真)
    弹出菜单 ()
.判断 (等于 (取数组成员数 (被选择表项), 0))
    赋值 (.禁止, 真)
    赋值 (.禁止, 真)
    赋值 (.禁止, 假)
    赋值 (.禁止, 假)
    弹出菜单 ()
.判断 (等于 (取数组成员数 (被选择表项), 1))
    赋值 (.禁止, 假)
    赋值 (.禁止, 假)
    赋值 (.禁止, 假)
    赋值 (.禁止, 假)
    弹出菜单 ()
.默认
    赋值 (.禁止, 真)
    赋值 (.禁止, 假)
    赋值 (.禁止, 假)
    赋值 (.禁止, 假)
    弹出菜单 ()
.判断结束


.子程序 _删除_被选择, 空白型, , 删除项值
.局部变量 被选择表项, 空白型, , "0", 
.局部变量 i, 空白型, , , 
.局部变量 返回值, 空白型, , , 
.局部变量 错误, 逻辑型, , , 
.局部变量 匿名局部变量_429, 空白型, , , 
.局部变量 欲删除的表项, 空白型, , "0", 

赋值 (被选择表项, 取被选择表项 ())
.如果真 (等于 (取数组成员数 (被选择表项), 0))
    返回 ()
.如果真结束
.如果真 (等于 (信息框 (“您确认要删除吗?”, 49, “确认数值删除”), 1))
    返回 ()
.如果真结束

.计次循环首 (取数组成员数 (被选择表项), i)
    .判断开始 (等于 (被选择表项 [i], 0))
        赋值 (返回值, RegDeleteValue (.取项目数值 (.最大化按钮), “”))
        .如果 (等于 (返回值, 0))
            0.置标题 (2, “(数值未设置)”)
        .否则
            赋值 (错误, 真)
        .如果结束
        
    .默认
        赋值 (返回值, RegDeleteValue (.取项目数值 (.最大化按钮), 被选择表项.取标题 ( [i], 0)))
        .如果 (等于 (返回值, 0))
            加入成员 (欲删除的表项, 被选择表项 [i])
        .否则
            赋值 (错误, 真)
        .如果结束
        
    .判断结束
    
.计次循环尾 ()
.如果真 (错误)
    信息框 (“无法删除指定的项”, 16, “删除值时出现错误”)
.如果真结束
.计次循环首 (取数组成员数 (欲删除的表项), i)
    欲删除的表项.删除表项 ( [i])
    .如果真 (不等于 (取数组成员数 (欲删除的表项), i))
        赋值 (欲删除的表项 [相加 (i, 1)], 欲删除的表项 [i])
    .如果真结束
    
.计次循环尾 ()

.子程序 _超级列表框1_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.判断开始 (等于 (键代码, #Del键))
    _删除_被选择 ()
.判断 (等于 (键代码, #F5键))
    _树型框1_项目被选择 (0)
.默认
    
.判断结束


.子程序 _超级列表框1_开始编辑, 逻辑型, , 
.参数 表项索引, 整数型, , 

.如果真 (等于 (表项索引, 0))
    返回 (假)
.如果真结束


.子程序 _超级列表框1_结束编辑, 逻辑型, , 
.参数 表项索引, 整数型, , 

.局部变量 内容, 字节集, , , 
.局部变量 长度, 空白型, , , 
.局部变量 返回值, 空白型, , , 
.局部变量 类型, 空白型, , , 
.局部变量 句柄, 空白型, , , 

.如果真 (等于 (., “”))
    信息框 (“注册表编辑器无法重命名.指定的值名为空.请键入其他名称,再试一次”, 16, “重命名时产生错误”)
    返回 (假)
.如果真结束
.判断开始 (等于 (., .取标题 (., )))
    返回 (假)
.默认
    赋值 (返回值, RegQueryValueEx (.取项目数值 (.最大化按钮), ., 0, 0, 内容, 取字节集长度 (内容)))
    
    .如果真 (等于 (返回值, 0))
        信息框 (“注册表编辑器无法重命名.指定的值名已存在.请键入其他名称,再试一次”, 16, “重命名时产生错误”)
        返回 (假)
    .如果真结束
    
.判断结束


RegQueryValueEx (.取项目数值 (.最大化按钮), .取标题 (., ), 0, 0, 内容, 长度)

赋值 (内容, 取空白字节集 (长度))
RegQueryValueEx (.取项目数值 (.最大化按钮), .取标题 (., ), 0, 类型, 内容, 取字节集长度 (内容))

赋值 (返回值, RegSetValueEx (.取项目数值 (.最大化按钮), ., 0, 类型, 内容, 取字节集长度 (内容)))
RegDeleteValue (.取项目数值 (.最大化按钮), .取标题 (., ))
.如果真 (不等于 (返回值, 0))
    信息框 (“注册表编辑器无法重命名.未知错误”, 16, “重命名时产生错误”)
    返回 (假)
.如果真结束



.子程序 _项_被选择, 空白型, , 
.局部变量 位置1, 空白型, , , 

赋值 (.播放次数, 真)
.判断开始 (.是否有子项目 (.最大化按钮))
    赋值 (添加, 假)
    赋值 (位置1, .加入项目 (.最大化按钮, “”, , , ))
    .判断开始 (.是否已扩展 (.最大化按钮))
        位置1.进入编辑 ()
    .默认
        .扩展 (.最大化按钮)
        相减 (位置1, 1).进入编辑 ()
    .判断结束
    
.默认
    赋值 (添加, 真)
    
    赋值 (位置1, .加入项目 (.最大化按钮, “”, , , ))
    .扩展 (.最大化按钮)
    位置1.进入编辑 ()
.判断结束

赋值 (添加, 假)


.子程序 _树型框1_结束编辑, 逻辑型, , 
.参数 项目索引, 整数型, , 

.局部变量 句柄, 空白型, , , 
.局部变量 返回值, 空白型, , , 

.判断开始 (等于 (.回车下移焦点, “”))
    项目索引.删除项目 ()
    赋值 (.播放次数, 假)
    返回 (假)
.默认
    
    赋值 (返回值, RegOpenKey (项目索引.取父项目 ().取项目数值 (), .回车下移焦点, 句柄))
    .如果真 (等于 (返回值, 0))
        项目索引.删除项目 ()
        赋值 (.播放次数, 假)
        信息框 (“注册表编辑器无法创建项,指定项名称已存在,键入另一个名称后重试”, 16, “创建项时出现错误”)
        返回 (假)
    .如果真结束
    
    
    
    赋值 (返回值, RegCreateKey (项目索引.取父项目 ().取项目数值 (), .回车下移焦点, 句柄))
    .如果真 (不等于 (返回值, 0))
        项目索引.删除项目 ()
        赋值 (.播放次数, 假)
        信息框 (“创建项失败,请检查错误,或是否重名”, 16, “创建项时出现错误”)
        返回 (假)
    .如果真结束
    
    赋值 (.播放次数, 假)
    项目索引.置项目数值 (句柄)
    
    赋值 (.最大化按钮, 项目索引)
    0.置文本 (相加 (0.取文本 (), .回车下移焦点))
.判断结束


.子程序 _超级列表框1_被双击, 逻辑型, , 
.参数 横向位置, 整数型, , 
.参数 纵向位置, 整数型, , 
.参数 功能键状态, 整数型, , 

.判断开始 (或者 (等于 (.取标题 (., 1), “REG_SZ”), 等于 (.取标题 (., 1), “REG_EXPAND_SZ”)))
    载入 (编辑字符串值, , 真)
.判断 (等于 (.取标题 (., 1), “REG_DWORD”))
    载入 (编辑数值, , 真)
.判断 (等于 (.取标题 (., 1), “REG_BINARY”))
    信息框 (“暂不支持二进制的编辑”, 64, “待开发”)
.判断 (等于 (.取标题 (., 1), “REG_MULTI_SZ”))
    载入 (多字符, , 真)
.默认
    
.判断结束


.子程序 _树型框1_右键单击项目, 空白型, , 
.判断开始 (等于 (.取父项目 (.最大化按钮), 0))
    赋值 (.禁止, 假)
    赋值 (.禁止, 真)
.判断 (等于 (.取父项目 (.最大化按钮), -1))
    赋值 (.禁止, 真)
    赋值 (.禁止, 真)
.默认
    赋值 (.禁止, 假)
    赋值 (.禁止, 假)
.判断结束
赋值 (.禁止, 真)
赋值 (.禁止, 真)
弹出菜单 ()

.子程序 _字符串值_被选择, 空白型, , 
添加项 (1)

.子程序 添加项, 空白型, , 
.参数 类型, 空白型, , 

.局部变量 位置1, 空白型, , , 
.局部变量 数值, 整数型, , , 
.局部变量 返回值, 空白型, , , 
.局部变量 内容, 字节集, , , 

赋值 (数值, 1)
.判断循环首 (等于 (RegQueryValueEx (.取项目数值 (.最大化按钮), 相加 (“新值 #”, 到文本 (数值)), 0, 0, 内容, 0), 0))
    赋值 (数值, 相加 (数值, 1))
.判断循环尾 ()

.判断开始 (等于 (类型, 1))
    .如果真 (等于 (RegSetValueEx (.取项目数值 (.最大化按钮), 相加 (“新值 #”, 到文本 (数值)), 0, 1, {  }, 0), 0))
        赋值 (位置1, .插入表项 (相加 (“新值 #”, 到文本 (数值)), 0, , , ))
        位置1.置标题 (1, “REG_SZ”)
        位置1.进入编辑 ()
        返回 ()
    .如果真结束
    
.判断 (等于 (类型, 2))
    .如果真 (等于 (RegSetValueEx (.取项目数值 (.最大化按钮), 相加 (“新值 #”, 到文本 (数值)), 0, 2, {  }, 0), 0))
        赋值 (位置1, .插入表项 (相加 (“新值 #”, 到文本 (数值)), 0, , , ))
        位置1.置标题 (1, “REG_EXPAND_SZ”)
        位置1.进入编辑 ()
        返回 ()
    .如果真结束
    
.判断 (等于 (类型, 3))
    .如果真 (等于 (RegSetValueEx (.取项目数值 (.最大化按钮), 相加 (“新值 #”, 到文本 (数值)), 0, 3, {  }, 0), 0))
        赋值 (位置1, .插入表项 (相加 (“新值 #”, 到文本 (数值)), 1, , , ))
        位置1.置标题 (2, “(长度为零的二进制位)”)
        位置1.置标题 (1, “REG_BINARY”)
        位置1.进入编辑 ()
        返回 ()
    .如果真结束
    
.判断 (等于 (类型, 4))
    .如果真 (等于 (RegSetValueEx (.取项目数值 (.最大化按钮), 相加 (“新值 #”, 到文本 (数值)), 0, 4, { 0, 0, 0, 0 }, 取字节集长度 (到字节集 (0))), 0))
        赋值 (位置1, .插入表项 (相加 (“新值 #”, 到文本 (数值)), 1, , , ))
        位置1.置标题 (1, “REG_DWORD”)
        位置1.置标题 (2, “0”)
        位置1.进入编辑 ()
        返回 ()
    .如果真结束
    
.判断 (等于 (类型, 7))
    .如果真 (等于 (RegSetValueEx (.取项目数值 (.最大化按钮), 相加 (“新值 #”, 到文本 (数值)), 0, 7, {  }, 0), 0))
        赋值 (位置1, .插入表项 (相加 (“新值 #”, 到文本 (数值)), 0, , , ))
        位置1.置标题 (1, “REG_MULTI_SZ”)
        位置1.进入编辑 ()
        返回 ()
    .如果真结束
    
.默认
    
.判断结束

信息框 (“无法创建值:写入注册表时出错”, 16, “创建值时出错”)


.子程序 _二进制值_被选择, 空白型, , 
添加项 (3)

.子程序 _DWORD值_被选择, 空白型, , 
添加项 (4)

.子程序 _多字符串值_被选择, 空白型, , 
添加项 (7)

.子程序 _可扩充字符串值_被选择, 空白型, , 
添加项 (2)

.子程序 _修改_被选择, 空白型, , 
.判断开始 (或者 (等于 (.取标题 (., 1), “REG_SZ”), 等于 (.取标题 (., 1), “REG_EXPAND_SZ”)))
    载入 (编辑字符串值, , 真)
.判断 (等于 (.取标题 (., 1), “REG_DWORD”))
    载入 (编辑数值, , 真)
.判断 (等于 (.取标题 (., 1), “REG_BINARY”))
    信息框 (“暂不支持二进制的编辑”, 64, “待开发”)
.判断 (等于 (.取标题 (., 1), “REG_MULTI_SZ”))
    载入 (多字符, , 真)
.默认
    
.判断结束


.子程序 _树型框1_按下某键, 逻辑型, , 
.参数 键代码, 整数型, , 
.参数 功能键状态, 整数型, , 

.局部变量 i, 空白型, , , 
.局部变量 ii, 空白型, , , 
.局部变量 返回值, 空白型, , , 

.如果 (等于 (键代码, #F5键))
    未知函数_67175437 (0)
    未知函数_67175438 (.最大化按钮)
    未知函数_67175439 (.最大化按钮)
    .保证显示 (.最大化按钮)
    
.否则
    .如果真 (并且 (等于 (键代码, #Del键), 大于 (.最大化按钮, 0)))
        .如果真 (等于 (信息框 (“确实要删除这个项和其子项吗?”, 52, “确认项删除”), 6))
            返回 ()
        .如果真结束
        
        
        清除数组 ()
        未知函数_67175452 (.取项目数值 (.最大化按钮))
        
        赋值 (ii, 取数组成员数 (删除键句柄))
        .计次循环首 (取数组成员数 (删除键句柄), i)
            赋值 (返回值, RegDeleteKey (删除键句柄 [相加 (相减 (ii, i), 1)], “”))
        .计次循环尾 ()
        .如果 (等于 (返回值, 0))
            .删除项目 (.最大化按钮)
        .否则
            .收缩 (.最大化按钮)
            信息框 (“删除的过程出现错误”, 16, “错误”)
        .如果结束
        
        
        
    .如果真结束
    
    
.如果结束


.子程序 删除键, 空白型, , 
.参数 句柄, 空白型, , 

.局部变量 返回值, 空白型, , , 
.局部变量 名称, 文本型, , , 
.局部变量 索引, 空白型, , , 
.局部变量 句柄2, 空白型, , , 

加入成员 (删除键句柄, 句柄)
赋值 (名称, 取空白文本 (255))
赋值 (返回值, RegEnumKey (句柄, 0, 名称, 255))
.判断循环首 (等于 (返回值, 0))
    赋值 (名称, 取空白文本 (255))
    赋值 (返回值, RegEnumKey (句柄, 索引, 名称, 255))
    .如果真 (不等于 (返回值, 0))
        跳出循环 ()
    .如果真结束
    RegOpenKey (句柄, 名称, 句柄2)
    删除键 (句柄2)
    赋值 (索引, 相加 (索引, 1))
.判断循环尾 ()

.子程序 _删除项_被选择, 空白型, , 
.局部变量 i, 空白型, , , 
.局部变量 ii, 空白型, , , 
.局部变量 返回值, 空白型, , , 

.如果真 (等于 (信息框 (“确实要删除这个项和其子项吗?”, 52, “确认项删除”), 6))
    返回 ()
.如果真结束


清除数组 ()
未知函数_67175463 (.取项目数值 (.最大化按钮))

赋值 (取数组成员数 ())
.计次循环首 (取数组成员数 (), )
    赋值 (未知函数_167838760 ( [相加 (相减 (), 1)], “”))
.计次循环尾 ()
.如果 (等于 (0))
    .删除项目 (.最大化按钮)
.否则
    .收缩 (.最大化按钮)
    信息框 (“删除的过程出现错误”, 16, “错误”)
.如果结束


.窗口程序集 编辑字符串值窗口程序集, , , 

.子程序 _编辑字符串值_创建完毕, 空白型, , 
.局部变量 内容长度, 空白型, , , 
.局部变量 内容, 字节集, , , 
.局部变量 返回值, 空白型, , , 


.判断开始 (等于 (_启动窗口.., 0))
    赋值 (返回值, RegQueryValueEx (_启动窗口.取项目数值 (., _启动窗口..最大化按钮), “”, 0, 0, 内容, 内容长度))
    .如果真 (不等于 (返回值, 0))
        返回 ()
    .如果真结束
    赋值 (内容, 取空白字节集 (内容长度))
    赋值 (返回值, RegQueryValueEx (_启动窗口.取项目数值 (., _启动窗口..最大化按钮), “”, 0, 0, 内容, 内容长度))
    赋值 (.内容, 取字节集数据 (内容, 10, ))
    
.默认
    赋值 (返回值, RegQueryValueEx (_启动窗口.取项目数值 (., _启动窗口..最大化按钮), _启动窗口.取标题 (., _启动窗口.., 0), 0, 0, 内容, 内容长度))
    
    .如果真 (不等于 (返回值, 0))
        信息框 (相加 (“无法编辑 ”, _启动窗口.取标题 (., _启动窗口.., 0), “:读该值时出错”), 16, “编辑值时出错”)
        返回 ()
    .如果真结束
    
    赋值 (内容, 取空白字节集 (内容长度))
    赋值 (返回值, RegQueryValueEx (_启动窗口.取项目数值 (., _启动窗口..最大化按钮), _启动窗口.取标题 (., _启动窗口.., 0), 0, 0, 内容, 内容长度))
    
    赋值 (.内容, _启动窗口.取标题 (., _启动窗口.., 0))
    赋值 (.内容, 取字节集数据 (内容, 10, ))
    
.判断结束
赋值 (.被选择字符数, -1)

.子程序 _按钮2_被单击, 空白型, , 
销毁 ()

.子程序 _按钮1_被单击, 空白型, , 
.局部变量 返回值, 空白型, , , 

.判断开始 (等于 (_启动窗口.., 0))
    .判断开始 (等于 (_启动窗口.取标题 (., _启动窗口.., 1), “REG_SZ”))
        赋值 (返回值, RegSetValueEx (_启动窗口.取项目数值 (., _启动窗口..最大化按钮), “”, 0, 1, 到字节集 (.内容), 取字节集长度 (到字节集 (.内容))))
    .默认
        赋值 (返回值, RegSetValueEx (_启动窗口.取项目数值 (., _启动窗口..最大化按钮), “”, 0, 2, 到字节集 (.内容), 取字节集长度 (到字节集 (.内容))))
    .判断结束
    
.判断 (等于 (_启动窗口.取标题 (., _启动窗口.., 1), “REG_SZ”))
    赋值 (返回值, RegSetValueEx (_启动窗口.取项目数值 (., _启动窗口..最大化按钮), _启动窗口.取标题 (., _启动窗口.., 0), 0, 1, 到字节集 (.内容), 取字节集长度 (到字节集 (.内容))))
.默认
    赋值 (返回值, RegSetValueEx (_启动窗口.取项目数值 (., _启动窗口..最大化按钮), _启动窗口.取标题 (., _启动窗口.., 0), 0, 2, 到字节集 (.内容), 取字节集长度 (到字节集 (.内容))))
.判断结束

.判断开始 (等于 (返回值, 0))
    _启动窗口.置标题 (., _启动窗口.., 2, .内容)
.默认
    信息框 (“写入值失败”, 16, “失败”)
.判断结束
销毁 ()

.窗口程序集 编辑数值窗口程序集, , , 

.子程序 _按钮2_被单击, 空白型, , 
销毁 ()

.子程序 _编辑数值_创建完毕, 空白型, , 
.局部变量 返回值, 空白型, , , 
.局部变量 内容, 字节集, , , 
.局部变量 内容长度, 空白型, , , 

赋值 (返回值, RegQueryValueEx (_启动窗口.取项目数值 (., _启动窗口..最大化按钮), _启动窗口.取标题 (., _启动窗口.., 0), 0, 0, 内容, 内容长度))
.如果真 (不等于 (返回值, 0))
    信息框 (“读取项值失败!请重试”, 16, “读取时出错”)
    销毁 ()
    返回 ()
.如果真结束

赋值 (内容, 取空白字节集 (内容长度))
赋值 (返回值, RegQueryValueEx (_启动窗口.取项目数值 (., _启动窗口..最大化按钮), _启动窗口.取标题 (., _启动窗口.., 0), 0, 0, 内容, 内容长度))

.如果真 (不等于 (返回值, 0))
    信息框 (“读取项值失败!请重试”, 16, “读取时出错”)
    销毁 ()
    返回 ()
.如果真结束

赋值 (.内容, 到文本 (取字节集数据 (内容, 4, )))
赋值 (.内容, _启动窗口.取标题 (., _启动窗口.., 0))
赋值 (.被选择字符数, -1)


.子程序 _按钮1_被单击, 空白型, , 
.局部变量 返回值, 空白型, , , 

赋值 (返回值, RegSetValueEx (_启动窗口.取项目数值 (., _启动窗口..最大化按钮), “新值 #1”, 0, 4, 到字节集 (到整数 (.内容)), 取字节集长度 (到字节集 (到整数 (.内容)))))

.如果真 (不等于 (返回值, 0))
    信息框 (“无法写入该值”, 16, “修改时出错”)
    销毁 ()
    返回 ()
.如果真结束
_启动窗口.置标题 (., _启动窗口.., 2, 到文本 (到整数 (.内容)))
销毁 ()

.窗口程序集 编辑多字符串窗口程序集, , , 

.子程序 _按钮2_被单击, 空白型, , 
销毁 ()

.子程序 _多字符_创建完毕, 空白型, , 
.局部变量 内容, 字节集, , , 
.局部变量 内容长度, 空白型, , , 
.局部变量 返回值, 空白型, , , 

赋值 (.内容, _启动窗口.取标题 (., _启动窗口.., 0))
赋值 (返回值, RegQueryValueEx (_启动窗口.取项目数值 (., _启动窗口..最大化按钮), .内容, 0, 7, 内容, 内容长度))
.如果真 (不等于 (返回值, 0))
    信息框 (“读取时出现错误”, 16, “读取失败”)
    返回 ()
.如果真结束
赋值 (内容, 取空白字节集 (内容长度))

RegQueryValueEx (_启动窗口.取项目数值 (., _启动窗口..最大化按钮), .内容, 0, 7, 内容, 内容长度)

赋值 (内容, 子字节集替换 (内容, { 0 }, { 13, 10 }, , ))
赋值 (内容, 取字节集左边 (内容, 相减 (取字节集长度 (内容), 2)))
赋值 (.内容, 取字节集数据 (内容, 10, ))
获取焦点 ()
赋值 (.被选择字符数, -1)

.子程序 _按钮1_被单击, 空白型, , 
.局部变量 内容, 字节集, , , 
.局部变量 返回值, 空白型, , , 


赋值 (内容, 子字节集替换 (到字节集 (.内容), { 13, 10 }, { 0 }, , ))
赋值 (内容, 相加 (内容, { 0, 0 }))
.如果真 (等于 (取字节集右边 (内容, 3), { 0, 0, 0 }))
    赋值 (内容, 子字节集替换 (内容, { 0, 0, 0 }, { 0, 0 }, , ))
.如果真结束

赋值 (返回值, RegSetValueEx (_启动窗口.取项目数值 (., _启动窗口..最大化按钮), .内容, 0, 7, 内容, 取字节集长度 (内容)))
.如果真 (不等于 (返回值, 0))
    信息框 (“编辑该值时出错”, 16, “编辑失败”)
    销毁 ()
    返回 ()
.如果真结束
赋值 (内容, 子字节集替换 (内容, { 0 }, { 32 }, , ))
_启动窗口.置标题 (., _启动窗口.., 2, 取字节集数据 (内容, 10, ))
销毁 ()


 ' 不属于任何一个程序集、类模块的函数：
