 ' 文件类型：Windows窗口程序

 ' 程序名称：
 ' 程序描述：
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 848
    高度 = 648
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    窗口类名 = “”
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “”
    帮助文件名 = “”



.常量 常量1, "“--------------------------------------
AT+CMGL=4

+CMGL: 41, 1,, 56
0891683108700705F0040D91683184711088F9000890219080244523244E86FF0C62114EEC7684300262114EEC7684300262114EEC7684300262114EEC76843002

+CMGL: 42, 1,, 26
0891683108701705F86005A10180F60008902190903231230A050003D8030351C63002

+CMGL: 43, 1,, 156
0891683108701705F86005A10180F60008902190903231238C050003D803015C0A656C76845BA26237002C0020672C6708003165E58D7760A876848BDD8D394E3A00340036002E003200395143002E51764E2D003A5F694FE1595799108D390033002E003000305143002077ED4FE18D390030002E003400325143002079FB52A86570636E6D4191CF8D3900320030002E00300033514300204E3B53EB663E793A0035002E

+CMGL: 44, 1,, 156
0891683108701705F86005A10180F60008902190903231238C050003D8030200300030514300205F6994C30035002E003000305143002065E07EBF97F34E504FF14E5090E80035002E0030003051430020672C5730901A8BDD0031002E0036003551430020672C573056FD5185957F90140036002E00310039514300204EE54E0A8BDD8D394FE1606F4EC54F9B53C28003002C5B9E96454EE58BDD8D3951FA5E10540E4E3A

+CMGL: 45, 1,, 142
0891683108701705F82005A10180F60008902190903231237E4FBF6377670D52A15C0F8D3458EBFF1A62E8625300310030003000380036003000316309003453F7952E67E58BE2672C673A5DF25F00901A4E1A52A1FF0C5F00901A621653D66D884E1A52A156DE590D77ED4FE100304F7F752877ED4FE184254E1A5385621662E862530031003000300038003600360036529E74063002

+CMGL: 46, 1,, 151
0891683108701705F86014A1015657557781152258970008902190901264238005000347020162695BB9538B529BFF0C6280672F963B529BFF0C7F8E514353CD5F394F7F5F9777ED671F5E02573A970097078361657456FA300253EF8F7B6307657091CD4E2A80A1FF0C51736CE853D776CA7ECF6D4E590D82CFFF0C4EA754C16DA84EF7FF0C6297901A80C076846C7D8F66FF0C5BB67535FF0C55464E1A96F6

+CMGL: 47, 1,, 53
0891683108701705F86414A1015657557781152258970008902190901264231E050003470202552E7B496D888D3980A13002301056FD6D778BC152383011

+CMGL: 48, 1,, 156
0891683108701705F86405A10180F60008902190909211238C05000319050160A88BA2523676844E1A52A16709FF1A0031002E77ED6D88606F670D52A100200032002E624B673A4E0A7F5100200033002E52A8611F57305E2696F6542C8D448D3900200034002E0035514352A8611F57305E267B7E7EA65F6994C300200035002E004700500052005300200036002E56FD518576F462E800200037002E56FD51856F2B6E38

+CMGL: 49, 1,, 156
0891683108701705F86005A10180F60008902190909211238C05000319050200200038002E90475FD98F6C79FB00200039002E4E0D53EF8FBE8F6C79FB002000310030002E65E05E947B548F6C79FB002000310031002E65E067614EF68F6C79FB002000310032002E67657535663E793A002D00355143002000310033002E65E07EBF97F34E504FF14E5090E84FC3950000289AD87EA74F1A54580029002D002D00355143

+CMGL: 50, 1,, 156
0891683108701705F86005A10180F60008902190909211238C050003190504FF09533A57DF5916002000310037002E52A8611F57305E2662C763075957991000286D7757CE533A300194A65DDE3001963257CE30014E1C51740029002000310038002E52A8611F57305E264EB260C553F778017EC4002000310039002E65B0003351435F694FE159579910002000320030002E603B8D3975284F1860E00035514300200032

+CMGL: 51, 1,, 56
0891683108701705F86005A10180F6000890219090921123280500031905050031002E4E2D56FD79FB52A8002853174EAC002998DE4FE157FA78404E1A52A10020

+CMGL: 52, 1,, 156
0891683108701705F86005A10180F60008902190909211238C050003190503670879DF002000310034002E77ED4FE18D448D395305002000310035002E52A8611F57305E2662C7630759579910FF086D7757CE533A300194A65DDE3001963257CE30014E1C5174FF0900090009533A57DF5185002000310036002E52A8611F57305E2662C7630759579910FF086D7757CE533A300194A65DDE3001963257CE30014E1C5174

+CMGL: 53, 1,, 156
0891683108701705F86005A10180F60008902190909241238C0500039202014FBF6377670D52A15C0F8D3458EBFF1A62E8625300310030003000380036003000316309003153F767E58BE2672C673A8BDD8D39660E7EC6FF1B5F00901A548C53D66D884E1A52A1FF0C8BF77F168F9177ED4FE1003053D19001523000310030003000380036621662E862534E1A52A153D774064E137EBF0031003000300038003600360036

+CMGL: 54, 1,, 24
0891683108701705F86405A10180F6000890219090924123080500039202023002

+CMGL: 55, 1,, 151
0891683108701705F86414A10156575577811564115100089021900120252380050003430201672C65E565B080A175338D2DFF1A00300030003200330032003274065DE576D16D4BFF0C003400305143002F80A1FF0C4E0A96500031002E00334E0780A130020030003000320033003200334E2D805475356C14FF0C003300305143002F80A1FF0C4E0A96500031002E00354E0780A1FF0C0030003000320033

+CMGL: 56, 1,, 99
0891683108701705F86414A1015657557781156411510008902190012025234C05000343020200320034666E5229727900320032002E00355143002F80A1FF0C4E0A965000324E0780A13002301056FD6D77963257CE6E2F84254E1A90E83011301056FD6D778BC152383011

+CMGL: 57, 1,, 135
0891683108701705F8240FA101565785266619F100089021902120142372611F8C2260A881F4753500390035003500310032FF0C8BF760A84E3A8BDD52A15458003200370030003100347684670D52A18BC45206FF0C67009AD80039520667004F4E00305206FF0C76F463A553D1900165705B570030002D003956DE590DFF0C8C228C2230104E2D56FD5E735B893011

+CMGL: 58, 1,, 135
0891683108701705F8240FA101800601205176F10008902190415345237260A86B63572870B964AD75316E565357667A6E90516C53F863D04F9B76845F7189C662A25148770B4E1A52A1FF0C4FE1606F8D390032002E003000305143002F6761FF0C56DE590D4EFB610F51855BB9786E8BA470B964ADFF0C65E056DE590D52194E0D70B964AD30024E2D56FD79FB52A8

+CMGL: 59, 1,, 135
0891683108701705F8200FA101800601205167F00008902190416380237260A86B63572870B964AD75316E565357667A6E90516C53F863D04F9B76845F7189C662A25148770B4E1A52A1FF0C4FE1606F8D390032002E003000305143002F6761FF0C56DE590D4EFB610F51855BB9786E8BA470B964ADFF0C65E056DE590D52194E0D70B964AD30024E2D56FD79FB52A8

+CMGL: 60, 1,, 135
0891683108701705F8240FA101800601205118F10008902190416351237260A86B63572870B964AD75316E565357667A6E90516C53F863D04F9B76845F7189C662A25148770B4E1A52A1FF0C4FE1606F8D390032002E003000305143002F6761FF0C56DE590D4EFB610F51855BB9786E8BA470B964ADFF0C65E056DE590D52194E0D70B964AD30024E2D56FD79FB52A8

+CMGL: 61, 1,, 135
0891683108701705F8240FA101800601205158F20008902190416372237260A86B63572870B964AD75316E565357667A6E90516C53F863D04F9B76845F7189C662A25148770B4E1A52A1FF0C4FE1606F8D390032002E003000305143002F6761FF0C56DE590D4EFB610F51855BB9786E8BA470B964ADFF0C65E056DE590D52194E0D70B964AD30024E2D56FD79FB52A8

+CMGL: 62, 1,, 42
0891683108700705F0040D91683184711088F90008902190614072231673B05728600E68374E86FF1F8F6651E065F65F97FF1F

+CMGL: 63, 1,, 151
0891683108701705F86414A1015657557781153548150008902190717180238005000332020156FD6D77826F65F6671F8D2752A960A8628A63E1671F8D275E02573A673A4F1AFF0C4E305BCC60A8768462958D446E2090533002672C54684E09665A003870B956FD6D77963257CE6E2F84254E1A90E84E3E884C671F8D2762958D444ECB7ECD53CA56DB5B635EA662958D44673A4F1A62A5544AFF0C72799080

+CMGL: 64, 1,, 67
0891683108701705F86414A1015657557781153548150008902190717180232C05000332020253C24E0EFF01301056FD6D77963257CE6E2F84254E1A90E83011301056FD6D778BC152383011

+CMGL: 65, 1,, 44
0891683108703705F0040D91685179087589F30008902190029102231853EF80FD8981665A70B9002C73B05728591697625403996D

+CMGL: 66, 1,, 63
0891683108701705F86414A1015657557781156601320008902101901253232805000337020275357B496D888D3980A1300256FD6D77963257CE6E2F301056FD6D778BC152383011

+CMGL: 67, 1,, 151
0891683108701705F86414A1015657557781156601320008902101901253238005000337020162695BB9538B529B53CA5E745E958D4491D156DE7B3C4F7F77ED671F8C0365744ECD5EF67EEDFF0C522975288C0365745951673A51736CE8843D5B9E4E2D592E7ECF6D4E5DE54F5C4F1A8BAE7CBE795E768453D776CA54C179CDFF0C598253D776CA201C6269518597004FC36D888D39201D76846C7D8F665BB6

+CMGL: 68, 1,, 139
0891683108701705F82414A10156575577811597831400089021010130212374672C546856DB665A003870B956FD6D77963257CE6E2F84254E1A90E84E3E884C80A15E026C999F99FF0C4E3B98984E3A201C00320030003100305E745B8F89C27ECF6D4E78145224201D7279908053C24E0EFF01301056FD6D77963257CE6E2F84254E1A90E83011301056FD6D778BC152383011

+CMGL: 69, 1,, 30
0891683108701705F0240D91683155679020F30008902101513180230A60C551B559824F55FF1F

+CMGL: 70, 1,, 32
0891683108700705F0040D91683184711088F90008902101611331230C62FF5F978F664E865417FF1F

+CMGL: 71, 1,, 139
0891683108701705F82414A10156575577811539305700089021016154702374672C546856DB665A003870B956FD6D77963257CE6E2F84254E1A90E84E3E884C80A15E026C999F99FF0C4E3B98984E3A201C00320030003100305E745B8F89C27ECF6D4E78145224201D7279908053C24E0EFF01301056FD6D77963257CE6E2F84254E1A90E83011301056FD6D778BC152383011

+CMGL: 72, 1,, 34
0891683108700705F0040D91683184711088F90008902101617485230E52305BB68FD8662F76848F66FF1F

+CMGL: 73, 1,, 34
0891683108700705F0040D91683184711088F90008902101914495230E51C6590756DE67654E865417FF1F

+CMGL: 74, 1,, 30
0891683108701705F86411A12125005229863985F6000890211191843123080500031B02020036

+CMGL: 75, 1,, 162
0891683108701705F86411A12125005229863985F60008902111918431238C0500031B02016211662F680F002076EE00207EC4FF08003900320036003800390033003500380036FF09FF0C60F352A04F604E3A98DE4FE1597D53CBFF0C65B94FBF54B14EEC80547CFB3002540C610F56DE201C662F201DFF0C4E0D540C610F4E0D56DE590DFF0C62D265365BF965B96D88606F56DE201C62D27EDD201DFF0C8BE68BE20031003000300038

+CMGL: 76, 1,, 56
0891683108700705F0040D91683187085037F500089021111291542324670965876863002F75598A005DF253D152304F6000510051002C8BF75B89639259047406

+CMGL: 77, 1,, 138
0891683108701705F62405800180F60008902111322154237A5C0A656C76847B7E7EA652A8611F57305E265BA26237FF0C6B228FCE60A8767B96464E2D56FD79FB52A85E7F897F516C53F87F514E0A84254E1A538567E58BE2548C529E74064E1A52A1FF0C8BF760A857284E1A52A153D7740664CD4F5C5B8C6210540E53CA65F6767B51FA3002005B4E2D56FD79FB52A8005D

+CMGL: 78, 1,, 111
0891683108701705F82408A1015688030008902111327102235E60A8597D002C6B228FCE4F7F75285F6994C3002C60A85F6994C37F517AD90068007400740070003A002F002F00670078002E00310032003500330030002E0063006F006D7684767B5F555BC67801662F0037003300340039003000313002

+CMGL: 79, 1,, 89
0891683108701705F82408A101568803000890211132027223485C0A656C768475286237FF0C60A876845F6994C3670D52A1768465B05BC678014E3AFF1A003900370033003300330033003030028BF74F7F75288BE55BC678018FDB884C767B5F55

+CMGL: 80, 1,, 157
0891683108701705F86408A1015688030008902111324210238C05000301020160A85DF26210529F5B9A8D2D94C397F3300A504F7231300BFF0C8D448D394E3AFFE50030002E00300030FF0C8BE594C397F3768467096548671F622A6B62523000320030003100325E740030003667080032003265E5002E66F4591A5F6994C34E0B8F7D8BF7767B96465F6994C37F517AD90068007400740070003A002F002F00670078002E

+CMGL: 81, 1,, 43
0891683108701705F86408A1015688030008902111324210231A05000301020200310032003500330030002E0063006F006D3002

+CMGL: 82, 1,, 157
0891683108701705F86408A1015688030008902111326290238C0500031D020160A85DF26210529F5B9A8D2D94C397F3300A70759B42768491CD91CF300BFF0C8D448D394E3AFFE50032002E00300030FF0C8BE594C397F3768467096548671F622A6B62523000320030003100325E740030003867080030003165E5002E66F4591A5F6994C34E0B8F7D8BF7767B96465F6994C37F517AD90068007400740070003A002F002F

+CMGL: 83, 1,, 49
0891683108701705F86408A101568803000890211132629023200500031D020200670078002E00310032003500330030002E0063006F006D3002

+CMGL: 84, 1,, 64
0891683108701705F0240D91683184010168F50008902141905383232C516B70B9534A76848F66300252304E0A601D516553E35427FF1F5230963257CE62117ED94F6075358BDD3002

+CMGL: 85, 1,, 24
0891683108701705F0240D91683184010168F5000890214190044523046E2F53E3

+CMGL: 86, 1,, 34
0891683108700705F0040D91683184711088F90008902171414200230E73B057284EC04E4868374E86FF1F

+CMGL: 87, 1,, 92
0891683108705705F0040D91685171576824F10008902191409050234859829700FF1A658751EDFF0C724C002A7AE0002A79687B49002E753500310035003000370038003800350039003800350038674E52C7FF08540453BF62FF52308D274ED86B3EFF09

+CMGL: 88, 1,, 148
0891683108701705F3040D91685170079936F900089021420111512380645800320030003000399897661F661F71674EAE4F607684524D7A0BFF0C79CD003200300030003968F573AB7470967691894F6076845FC360C5FF0C629800320030003000394E2A7EB89E64966A4F606B224E5065F6523BFF0C627E003200300030003979CD74067531795D4F6057238BDE5FEB4E50FF010020002000200020

+CMGL: 89, 1,, 52
0891683108701705F0240D91683155773147F8000890218291922523206211521A67E54E86002C5DF26536523056DE5934518D804A002C8C228C22002E

+CMGL: 90, 1,, 151
0891683108701705F86414A101565755778175990979000890219290924123800500036002014E2D671F6709671B90106B658F6C5F3AFF0C79EF67815E035C40660E5E74884C60C5FF0C98DF54C1533B836F726980547F5100330047677F575753EF630180A1FF0C77ED7EBF51736CE853D776CA653F7B566216533A57DF632F51747684519C4E1A300165B075865E7F897F677F5757FF0C77ED7EBF4E867ED3

+CMGL: 91, 1,, 71
0891683108701705F86414A10156575577817599097900089021929092412330050003600202751F76CA79D162803002301056FD6D77963257CE6E2F84254E1A90E83011301056FD6D778BC152383011

+CMGL: 92, 1,, 65
0891683108701705F86414A1015657557781853207560008902103902093232A0500031102024EFD3002301056FD6D77963257CE6E2F84254E1A90E83011301056FD6D778BC152383011

+CMGL: 93, 1,, 151
0891683108701705F86414A101565755778185320756000890210390209323800500031102015E02573A73AF588390106E1052294E8E505A591AFF0C5E035C40660E5E74884C60C54E3B7EBF530562EC4F4E78B37ECF6D4EFF0C7F517EDC901A8BAFFF0C9AD86210957F9AD852067EA2FF0C6297901A80C0FF0C4F30503C6D3C5730677F575730024E867ED34E2D56FD4E2D51B6FF0C589E630176D86C5F80A1

+CMGL: 94, 1,, 160
0891683108200005F0040D91683124631087F50008902103110525238C5C0A656C7684752800206237FF1A60A800320030003000395E740031003167084EFD768479EF002052065956002054C15C1A672A9886002053D6FF0C8BF762E80020625300310032003500390030003400300039003863090037952E83B753D6FF08003265E55185670965485BA20020670D003000310030002D003900360020004F0039003600380038004F

+CMGL: 95, 1,, 135
0891683108701705F8240CA10156572001550008902103212322237460A8572859278D625BB676849A8C8BC17801FF1A003300330030003600390030FF0C8F9351659A8C8BC17801514D8D394F539A8C59278D625BB6670D52A1FF0C795D60A862958D44987A5229300259278D625BB6FF0C56FD5BB67EA79AD865B06280672F4F014E1A3002005B59278D625BB6005D

+CMGL: 96, 1,, 83
0891683108701705F8240CA1015657200155000890210321232523408D625BB6725B80A120135B89742A91756BCDFF0C897F5C7171647535300266F4591A673A4F1A767B964659278D625BB68D225BCC7F51005B59278D625BB6005D

+CMGL: 97, 1,, 156
0891683108701705F60405A10180F60008902103610245238C4E3A66F4597D5730541160A8670D52A1FF0C73B062E862534E2D56FD79FB52A800310032003500380030537383B78D604FDD989D003100394E075143610F59169669FF0C62E80031003200350038003053EF63625F6994C3300167E553F77801300159296C147B4954047C7B4FE1606FFF0C7ED3679C77ED4FE14E0B53D1FF0C8BE200310032003500380030

+CMGL: 98, 1,, 149
0891683108701705F86410A10156575577810000000890210361223223800500035504015C0A656C76845BA26237FF0C57284EE5201C7406602762958D4430019632830398CE9669201D00204E3A4E3B98987684201C96328303975E6CD58BC152386D3B52A898CE966962958D448005655980B25BA34F2067086D3B52A8201D4E2DFF0C62114EEC63D091924F60FF1A62958D44800563A553D78BC15238

+CMGL: 99, 1,, 149
0891683108701705F86010A1015657557781000000089021036122322380050003550402671F8D2762958D4454A88BE2548C74068D22670D52A15E9459D462587ECF4E2D56FD8BC176D14F1A627951C67684517767098BC152387ECF84254E1A52A18D44683C768454086CD5673A67848FDB884C300254086CD58BC152387ECF8425673A6784540D5F5553EF901A8FC74E2D56FD8BC176D14F1A7F517AD9

+CMGL: 100, 1,, 75
0891683108701705F86010A101565755778100000008902103612232233605000355040400770077002E0073006900700066002E0063006F006D002E0063006EFF0967E58BE23002301056FD6D778BC152383011

+CMGL: 101, 1,, 149
0891683108701705F86410A1015657557781000000089021036122322380050003550403FF08007700770077002E0063007300720063002E0067006F0076002E0063006E002930014E2D56FD8BC152384E1A534F4F1A7F517AD9FF08007700770077002E007300610063002E006E00650074002E0063006EFF0930014E2D56FD8BC1523862958D4480054FDD62A457FA91D1516C53F87F517AD9FF080077

+CMGL: 102, 1,, 160
0891683108700705F0440D91683155388085F10008902113124002238C050003CD0201003200300030003976848FFD5FC6FF0C0032003000310030768495EE5019FF0C65B05E74949F58F0657254CD76846B64523BFF0C90014E0A97E651706CE26E2966967684795D798FFF1A864E864E751F5A01FF0C8D6257286BCF4E005929FF0C751F6D3B67096ECB5473FF0C627E52305C5E4E8E81EA6211768454C1724C8F688FF9FF0165B0

+CMGL: 103, 1,, 34
0891683108700705F0440D91683155388085F10008902113124032230E050003CD02025E745FEB4E50FF01

+CMGL: 104, 1,, 104
0891683108200105F0240D91685113160501F9000801101022200523545C0A656C768475286237FF1A79EF5206595654C15DF2900151FAFF0C8BF762E8FF11FF12FF15FF19FF10FF14FF13FF17FF18FF186309FF1253F7952E53CA65F6988653D6FF0C003200345C0F65F6518567096548

+CMGL: 105, 1,, 62
0891683108700705F0040D91683184711088F90008011020517160232A636E7EDF8BA152125916976267094E004E2A670867086708670867086708670867086708670867086708

OK”", , 
.常量 常量2, "“+CMGL: 42, 1,, 26
0891683108701705F86005A10180F60008902190903231230A050003D8030351C63002”", , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 5 0 系统核心支持库
 ' eCalc 306AA9E31B5940399723021A0D782077 2 1 数值计算支持库
 ' spec A512548E76954B6E92C21055517615B0 3 0 特殊功能支持库
 ' RegEx 684944CB04624eb7BD5412A519421D34 2 0 正则表达式支持库
 ' xplib 7F54B9CE8887428dBA9CEEB94CEF4C72 2 0 XP风格界面库
 ' iext 27bb20fdd3e145e4bee3db39ddd6e64c 2 0 扩展界面支持库一



 ' 所需要的模块
 ' 短信群发 C:\Users\Administrator\Desktop\短信模块.ec



.窗口程序集 窗口程序集1, , , 

.程序集变量 短信发送成功标志, 逻辑型, , , 
.程序集变量 发短信中, 逻辑型, , , 
.程序集变量 数据1, 文本型, , , 
.子程序 __启动窗口_将被销毁, 空白型, , 
停止 ()
结束 ()

.子程序 _端口1_数据到达, 空白型, , 
.参数 数据字节值, 整数型, , 

.局部变量 数据, 文本型, 静态, , 
.局部变量 字节, 文本型, 静态, , 
.局部变量 数据组, 文本型, , "0", 
.局部变量 号码电话, 文本型, , , 
.局部变量 名, 文本型, , , 

赋值 (数据, 相加 (数据, 字符 (数据字节值)))
.如果真 (等于 (取文本右边 (数据, 5), “ERROR”)) ' 表示成功执行并接收完
    赋值 (数据1, 数据)
    赋值 (数据, “”)
    .如果真 (等于 (发短信中, 真))
        赋值 (发短信中, 假)
        赋值 (短信发送成功标志, 假)
    .如果真结束
    返回 ()
.如果真结束

.如果真 (等于 (取文本右边 (数据, 4), 相加 (字符 (13), 字符 (10), “OK”))) ' 表示成功执行并接收完
    赋值 (数据1, 数据)
    .如果真 (不等于 (寻找文本 (数据, “+CMGS:”, , 假), -1))
        赋值 (短信发送成功标志, 真)
    .如果真结束
     ' 输出调试文本 (数据)
    .如果真 (不等于 (寻找文本 (数据, “+CMGL:”, , 假), -1))
        接收短消息 (数据)
        赋值 (数据, “”)
        返回 ()
    .如果真结束
    .如果真 (不等于 (寻找文本 (数据, “+CPBR:”, , 假), -1)) ' 电话记录
        解码电话记录信息 (数据)
        
         ' 输出调试文本 (“有电话记录传来”)
    .如果真结束
    
    .如果真 (不等于 (寻找文本 (数据, “AT+CCLK”, , 假), -1))
        相加 (数据, #换行符).加入文本 ()
    .如果真结束
    
    赋值 (数据, “”)
.如果真结束


.子程序 发送短信息, 整数型, , 1成功发送  2发送错误 3设备出错未发送 4超时，但未确认是否成功
.参数 对方号码, 文本型, , 
.参数 短信内容, 文本型, , 
.参数 最长等待时间, 整数型, 可空, 单位为毫秒。

.局部变量 文本, 文本型, , , 
.局部变量 i, 整数型, , , 
.局部变量 接收短信号码, 文本型, , , 
.局部变量 接收短信号码译过, 文本型, , , 
.局部变量 发送数据, 字节集, , , 
.局部变量 字数, 整数型, , , 
.局部变量 时间1, 整数型, , , 
.局部变量 PUD编码, 文本型, , , 

赋值 (时间1, 取启动时间 ())
赋值 (发短信中, 假)
赋值 (短信发送成功标志, 假)
赋值 (文本, 取十六进制文本 (相除 (取文本长度 (未知函数_67175298 (短信内容)), 2)))
.如果真 (等于 (取文本长度 (文本), 1))
    赋值 (文本, 相加 (“0”, 文本))
.如果真结束
赋值 (接收短信号码, 对方号码)
赋值 (接收短信号码, 多项选择 (相加 (求余数 (取文本长度 (接收短信号码), 2), 1), 接收短信号码, 相加 (接收短信号码, “F”)))
.计次循环首 (取文本长度 (接收短信号码), i)
    取文本中间 (接收短信号码, 相加 (相乘 (相减 (i, 1), 2), 1), 2)
    赋值 (接收短信号码译过, 相加 (接收短信号码译过, 取文本右边 (取文本中间 (接收短信号码, 相加 (相乘 (相减 (i, 1), 2), 1), 2), 1), 取文本左边 (取文本中间 (接收短信号码, 相加 (相乘 (相减 (i, 1), 2), 1), 2), 1)))
.计次循环尾 ()


赋值 (发送数据, 相加 (到字节集 (相加 (“0011000D9168”, 接收短信号码译过, “000800”, 文本, 未知函数_67175298 (短信内容))), { 26 }))

.如果真 (小于或等于 (取文本长度 (对方号码), 10))
    未知函数_67175296 (对方号码, 短信内容, PUD编码)
    赋值 (发送数据, 到字节集 (PUD编码))
.如果真结束
赋值 (字数, 相减 (相除 (取字节集长度 (发送数据), 2), 1))
.如果真 (等于 (相加 (到字节集 (相加 (“AT+CMGS=”, 到文本 (字数))), { 13 }).发送数据 (), 假))
    返回 (3)
.如果真结束
 ' 发送AT指令 (“AT+CMGS=” ＋ 到文本 (字数))
延迟 (100)
赋值 (发短信中, 真)
输出调试文本 (“2”)
.如果真 (等于 (发送数据.发送数据 (), 假))
    返回 (3)
.如果真结束

.判断循环首 (小于 (相减 (取启动时间 (), 时间1), 最长等待时间))
    .如果真 (等于 (发短信中, 假))
        返回 (2)
    .如果真结束
    .如果真 (等于 (短信发送成功标志, 真))
        返回 (1)
    .如果真结束
    未知函数_67175297 (10000)
.判断循环尾 ()
返回 (4)

.子程序 解码电话记录信息, 空白型, , 
.参数 数据, 文本型, , 

.局部变量 电话号码组, 文本型, , "0", 
.局部变量 i, 整数型, , , 
.局部变量 姓名, 文本型, , , 
.局部变量 电话号码, 文本型, , , 
.局部变量 正则表达式1, 未知类型0x40001, , , 
.局部变量 搜索结果1, 未知类型0x40002, , , 

赋值 (电话号码组, 分割文本 (数据, #换行符, ))
.计次循环首 (取数组成员数 (电话号码组), i)
    正则表达式1.未知支持库函数_3 (相加 (#引号, “(\d+)”, #引号), )
    赋值 (搜索结果1, 正则表达式1.未知支持库函数_7 (电话号码组 [i], 1, ))
    赋值 (电话号码, 搜索结果1.未知支持库函数_12 (电话号码组 [i], 1, ))
    正则表达式1.未知支持库函数_3 (相加 (#引号, “\d+”, #引号, “.*”, #引号, “(.*)”, #引号), )
    赋值 (搜索结果1, 正则表达式1.未知支持库函数_7 (电话号码组 [i], 1, ))
    赋值 (姓名, 未知函数_67175299 (搜索结果1.未知支持库函数_12 (电话号码组 [i], 1, )))
    .如果真 (不等于 (相加 (姓名, “,”, 电话号码), “,”))
        .如果真 (等于 (寻找文本 (.内容, 相加 (姓名, “,”, 电话号码), , 假), -1))
            相加 (姓名, “,”, 电话号码, #换行符).加入文本 ()
        .如果真结束
        
    .如果真结束
    
.计次循环尾 ()

.子程序 接收短消息, 空白型, , 
.参数 数据, 文本型, , 

.局部变量 短信组, 文本型, , "0", 
.局部变量 i, 整数型, , , 
.局部变量 回复号码, 文本型, , , 
.局部变量 中心号码, 文本型, , , 
.局部变量 发送时间, 文本型, , , 
.局部变量 短信内容, 文本型, , , 

赋值 (.禁止, 真)
赋值 (短信组, 分割文本 (数据, #换行符, ))
.计次循环首 (取数组成员数 (短信组), i)
    .如果真 (识别是否为PDU编码 (短信组 [i]))
        短信接收PDU解码 (短信组 [i], 回复号码, 中心号码, 发送时间, 短信内容)
        .如果真 (等于 (取文本左边 (短信内容, 3), “???”))
            赋值 (短信内容, 取文本右边 (短信内容, 相减 (取文本长度 (短信内容), 3)))
        .如果真结束
        .如果真 (等于 (取文本左边 (短信内容, 4), “?Β?”))
            赋值 (短信内容, 取文本右边 (短信内容, 相减 (取文本长度 (短信内容), 4)))
        .如果真结束
        .如果真 (等于 (取文本左边 (短信内容, 4), “??Ё”))
            赋值 (短信内容, 取文本右边 (短信内容, 相减 (取文本长度 (短信内容), 4)))
        .如果真结束
        .如果真 (等于 (寻找文本 (.内容, 相加 (回复号码, #换行符, 中心号码, #换行符, 发送时间, #换行符, 短信内容, #换行符, #换行符), , 假), -1))
            相加 (回复号码, #换行符, 中心号码, #换行符, 发送时间, #换行符, 短信内容, #换行符, #换行符).加入文本 ()
        .如果真结束
        赋值 (回复号码, “”)
        赋值 (中心号码, “”)
        赋值 (发送时间, “”)
        赋值 (短信内容, “”)
    .如果真结束
    
.计次循环尾 ()
赋值 (.禁止, 假)

.子程序 短信接收PDU解码, 空白型, , 
.参数 串, 文本型, , 
.参数 回复短信号码, 文本型, 参考 可空, 返回值
.参数 短信中心号码, 文本型, 参考 可空, 返回值
.参数 发送时间, 文本型, 参考 可空, 返回值
.参数 短信内容, 文本型, 参考 可空, 返回值

.局部变量 地址信息的长度, 整数型, , , 
.局部变量 回复地址信息的长度, 整数型, , , 
.局部变量 x, 文本型, , "0", 
.局部变量 i, 整数型, , , 
.局部变量 内容长度, 整数型, , , 

赋值 (地址信息的长度, 到整数 (进制转换 (取文本左边 (串, 2), 16, 10))) ' 国内固定值，不再分析
 ' 91 目标地址格式(TON/NPI) 用国际格式号码(在前面加‘+’
.计次循环首 (地址信息的长度, i)
    赋值 (短信中心号码, 相加 (短信中心号码, 取文本右边 (取文本中间 (取文本中间 (串, 5, 相乘 (相减 (地址信息的长度, 1), 2)), 相加 (相乘 (相减 (i, 1), 2), 1), 2), 1), 取文本左边 (取文本中间 (取文本中间 (串, 5, 相乘 (相减 (地址信息的长度, 1), 2)), 相加 (相乘 (相减 (i, 1), 2), 1), 2), 1)))
.计次循环尾 ()
赋值 (短信中心号码, 子文本替换 (短信中心号码, “F”, “”, , , 真))
.如果真 (等于 (取文本中间 (串, 3, 2), “91”))
    赋值 (短信中心号码, 相加 (“+”, 短信中心号码))
.如果真结束
 ' 输出调试文本 (短信中心号码)



赋值 (回复地址信息的长度, 选择 (不等于 (求余数 (到整数 (进制转换 (取文本中间 (串, 相加 (相乘 (相加 (地址信息的长度, 2), 2), 1), 2), 16, 10)), 2), 0), 相加 (到整数 (进制转换 (取文本中间 (串, 相加 (相乘 (相加 (地址信息的长度, 2), 2), 1), 2), 16, 10)), 1), 到整数 (进制转换 (取文本中间 (串, 相加 (相乘 (相加 (地址信息的长度, 2), 2), 1), 2), 16, 10))))
 ' 输出调试文本 (回复地址信息的长度)

.计次循环首 (相除 (回复地址信息的长度, 2), i)
    赋值 (回复短信号码, 相加 (回复短信号码, 取文本右边 (取文本中间 (串, 相加 (相乘 (相加 (地址信息的长度, 4), 2), 相乘 (相减 (i, 1), 2), 1), 2), 1), 取文本左边 (取文本中间 (串, 相加 (相乘 (相加 (地址信息的长度, 4), 2), 相乘 (相减 (i, 1), 2), 1), 2), 1)))
.计次循环尾 ()
赋值 (回复短信号码, 子文本替换 (回复短信号码, “F”, “”, , , 真))
.如果真 (等于 (取文本中间 (串, 相加 (相乘 (相加 (地址信息的长度, 3), 2), 1), 2), “91”))
    赋值 (回复短信号码, 相加 (“+”, 回复短信号码))
.如果真结束
 ' 输出调试文本 (回复短信号码)
.计次循环首 (6, i)
    .如果真 (等于 (i, 1))
        赋值 (发送时间, 相加 (“20”, 取文本右边 (取文本中间 (取文本中间 (串, 相加 (相乘 (相加 (地址信息的长度, 4, 相除 (回复地址信息的长度, 2), 2), 2), 1), 12), 相加 (相乘 (相减 (i, 1), 2), 1), 2), 1), 取文本左边 (取文本中间 (取文本中间 (串, 相加 (相乘 (相加 (地址信息的长度, 4, 相除 (回复地址信息的长度, 2), 2), 2), 1), 12), 相加 (相乘 (相减 (i, 1), 2), 1), 2), 1), “/”))
    .如果真结束
    .如果真 (等于 (i, 2))
        赋值 (发送时间, 相加 (发送时间, 取文本右边 (取文本中间 (取文本中间 (串, 相加 (相乘 (相加 (地址信息的长度, 4, 相除 (回复地址信息的长度, 2), 2), 2), 1), 12), 相加 (相乘 (相减 (i, 1), 2), 1), 2), 1), 取文本左边 (取文本中间 (取文本中间 (串, 相加 (相乘 (相加 (地址信息的长度, 4, 相除 (回复地址信息的长度, 2), 2), 2), 1), 12), 相加 (相乘 (相减 (i, 1), 2), 1), 2), 1), “/”))
    .如果真结束
    .如果真 (等于 (i, 3))
        赋值 (发送时间, 相加 (发送时间, 取文本右边 (取文本中间 (取文本中间 (串, 相加 (相乘 (相加 (地址信息的长度, 4, 相除 (回复地址信息的长度, 2), 2), 2), 1), 12), 相加 (相乘 (相减 (i, 1), 2), 1), 2), 1), 取文本左边 (取文本中间 (取文本中间 (串, 相加 (相乘 (相加 (地址信息的长度, 4, 相除 (回复地址信息的长度, 2), 2), 2), 1), 12), 相加 (相乘 (相减 (i, 1), 2), 1), 2), 1), “ ”))
    .如果真结束
    .如果真 (或者 (等于 (i, 4), 等于 (i, 5)))
        赋值 (发送时间, 相加 (发送时间, 取文本右边 (取文本中间 (取文本中间 (串, 相加 (相乘 (相加 (地址信息的长度, 4, 相除 (回复地址信息的长度, 2), 2), 2), 1), 12), 相加 (相乘 (相减 (i, 1), 2), 1), 2), 1), 取文本左边 (取文本中间 (取文本中间 (串, 相加 (相乘 (相加 (地址信息的长度, 4, 相除 (回复地址信息的长度, 2), 2), 2), 1), 12), 相加 (相乘 (相减 (i, 1), 2), 1), 2), 1), “:”))
    .如果真结束
    .如果真 (等于 (i, 6))
        赋值 (发送时间, 相加 (发送时间, 取文本右边 (取文本中间 (取文本中间 (串, 相加 (相乘 (相加 (地址信息的长度, 4, 相除 (回复地址信息的长度, 2), 2), 2), 1), 12), 相加 (相乘 (相减 (i, 1), 2), 1), 2), 1), 取文本左边 (取文本中间 (取文本中间 (串, 相加 (相乘 (相加 (地址信息的长度, 4, 相除 (回复地址信息的长度, 2), 2), 2), 1), 12), 相加 (相乘 (相减 (i, 1), 2), 1), 2), 1)))
    .如果真结束
    
.计次循环尾 ()
赋值 (短信内容)

.子程序 进制转换, 文本型, , 本段代码来自易语言论坛
.参数 被转换文本, 文本型, , 
.参数 被转换进制, 整数型, , 
.参数 转换的进制, 整数型, , 

.局部变量 欲转换文本, 文本型, , , 输入的文本串
.局部变量 临时文本, 文本型, , , 存放从输入的文本串中取出的一个文本
.局部变量 临时数值, 长整数型, , , 
.局部变量 计次变量1, 整数型, , , 
.局部变量 计次变量2, 整数型, , , 
.局部变量 次方数, 未知类型0x2000A, , , 每一位数字对应的10的次方数
.局部变量 转换的进制大数1, 未知类型0x2000A, , , 要转换的进制-1
.局部变量 转换的进制大数, 未知类型0x2000A, , , 要转换的进制
.局部变量 被转换进制大数, 未知类型0x2000A, , , 被转换的进制
.局部变量 临时大数, 未知类型0x2000A, , , 将被转换数字转换成的大数
.局部变量 余数大数, 未知类型0x2000A, , , 存放求出的余数大数
.局部变量 数值1大数, 未知类型0x2000A, , , 只存放1
.局部变量 临时大数1, 未知类型0x2000A, , , 将被转换数字的每一位转换成的大数

.如果真 (或者 (小于 (被转换进制, 2), 小于 (转换的进制, 2), 大于 (被转换进制, 36), 大于 (转换的进制, 36))) ' 判断两个“进制系数”是否正确
    返回 (“参数错误-进制只能在2-36之间”)
.如果真结束
赋值 (被转换文本, 到大写 (到半角 (被转换文本))) ' 规范参数
.变量循环首 (1, 取文本长度 (被转换文本), 1, 计次变量1) ' 判断输入的数字文本是否有效
    赋值 (临时文本, 取文本中间 (被转换文本, 计次变量1, 1))
    .如果真 (等于 (寻找文本 (取文本左边 (“0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ”, 被转换进制), 临时文本, , 假), -1))
        赋值 (临时文本, 相加 (“参数错误-”, 被转换文本, “不是一个有效的”, 取文本左边 (数值到金额 (被转换进制, 真), 相减 (取文本长度 (数值到金额 (被转换进制, 真)), 4)), “进制数！”))
        跳出循环 ()
    .如果真结束
     ' 全部查找完毕
    .如果真 (等于 (计次变量1, 取文本长度 (被转换文本)))
        赋值 (临时文本, “”)
    .如果真结束
    
.变量循环尾 ()

 ' 如果临时文本不为空，说明此数字文本无效！
.如果真 (不等于 (临时文本, “”))
    返回 (临时文本)
.如果真结束
 ' 以上为数据正确性校验处理代码

.如果真 (等于 (被转换进制, 转换的进制)) ' 相同时，不用进行转换
    返回 (被转换文本)
.如果真结束

.变量循环首 (1, 取文本长度 (被转换文本), 1, 计次变量1) ' 先将要转换的数字放入大数中
    次方数.未知支持库函数_69 (1) ' 数值1不能直接和大数类型计算，所以先放入一个大数中
    被转换进制大数.未知支持库函数_69 (被转换进制)
    .计次循环首 (相减 (取文本长度 (被转换文本), 计次变量1), 计次变量2) ' 求次方
        赋值 (次方数, 次方数.未知支持库函数_94 (被转换进制大数))
    .计次循环尾 ()
    
    临时大数1.未知支持库函数_69 (相减 (寻找文本 (“0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ”, 取文本中间 (被转换文本, 计次变量1, 1), , 真), 1))
    赋值 (临时大数1, 临时大数1.未知支持库函数_94 (次方数))
    赋值 (临时大数, 临时大数1.未知支持库函数_92 (临时大数)) ' 临时大数即为最后转换成的大数
.变量循环尾 ()
转换的进制大数1.未知支持库函数_69 (相减 (转换的进制, 1))
转换的进制大数.未知支持库函数_69 (转换的进制)
数值1大数.未知支持库函数_69 (1) ' 数值1不能直接和大数类型计算，所以先放入一个大数中
.判断循环首 (等于 (临时大数.未知支持库函数_86 (转换的进制大数1), 真)) ' 开始进制转换,除进制数取余数
    赋值 (余数大数, 临时大数.未知支持库函数_97 (转换的进制大数)) ' 求出的余数
    赋值 (临时大数1, 余数大数.未知支持库函数_92 (数值1大数)) ' 求出的余数＋1
    赋值 (临时数值, 到数值 (临时大数1.未知支持库函数_68 ())) ' 最后的余数
    赋值 (欲转换文本, 相加 (取文本中间 (“0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ”, 临时数值, 1), 欲转换文本)) ' 找出每一个余数对应的数字
    赋值 (临时大数, 临时大数.未知支持库函数_95 (转换的进制大数, 10)) ' 取出剩余的数字
    赋值 (临时大数, 临时大数.未知支持库函数_90 ())
.判断循环尾 ()
赋值 (临时数值, 临时大数.未知支持库函数_77 ()) ' 最后剩下的余数
赋值 (欲转换文本, 相加 (取文本中间 (“0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ”, 相加 (临时数值, 1), 1), 欲转换文本)) ' 整数转换结束
返回 (欲转换文本)


.子程序 识别是否为PDU编码, 逻辑型, , 
.参数 串, 文本型, , 

.如果真 (等于 (取文本左边 (串, 2), “08”))
    返回 (真)
.如果真结束
返回 (假)

.子程序 __启动窗口_创建完毕, 空白型, , 
未知支持库函数_0 (1)

.子程序 _时钟1_周期事件, 空白型, , 
赋值 (., 到文本 (取现行时间 ()))

.子程序 _选择列表框1_选中状态被改变, 空白型, , 
.局部变量 i, 整数型, , , 

赋值 (.内容, “”)
.如果真 (等于 (0.是否被选中 (), 真))
    相加 (i.取项目文本 (), “,”).加入文本 ()
.如果真结束

.计次循环首 (取项目数 (), i)
    .如果真 (等于 (i.是否被选中 (), 真))
        相加 (i.取项目文本 (), “,”).加入文本 ()
    .如果真结束
    
.计次循环尾 ()


.子程序 _编辑框3_内容被改变, 空白型, , 
赋值 (.标题, 到文本 (取文本长度 (.内容)))


.子程序 _按钮1_被单击, 空白型, , 
.局部变量 时间1, 整数型, , , 
.局部变量 文件号1, 整数型, , , 
.局部变量 I, 整数型, , , 
.局部变量 文本1, 文本型, , , 

赋值 (.禁止, 真)
赋值 (.内容, “”)
赋值 (时间1, 取启动时间 ())
.判断循环首 (等于 (.禁止, 真))
    未知函数_67175297 (1000000)
    赋值 (.禁止, 假)
.判断循环尾 ()
相加 (“AT+CSCS=”, #引号, “UCS2”, #引号, #换行符).发送数据 ()
延迟 (300)
相加 (“AT+CPBS=”, #引号, “ME”, #引号, #换行符).发送数据 ()
延迟 (300)
相加 (“AT+CPBR=1,249”, #换行符).发送数据 ()
赋值 (数据1, “”)
.判断循环首 (小于 (相减 (取启动时间 (), 时间1), 10000))
    未知函数_67175297 (1000)
    .如果真 (或者 (不等于 (寻找文本 (数据1, “OK”, , 假), -1), 不等于 (寻找文本 (数据1, “ERROR”, , 假), -1)))
        跳出循环 ()
    .如果真结束
    
.判断循环尾 ()
延时 (2000)

写到文件 (相加 (取运行目录 (), “/电话本.DAT”), 到字节集 (.内容))
赋值 (文件号1, 打开文件 (相加 (取运行目录 (), “/电话本.DAT”), , ))
清空 ()
.计次循环首 (100, I)
    移动读写位置 (文件号1, 0, I)
    赋值 (文本1, 读入一行 (文件号1))
    .如果真 (并且 (不等于 (文本1, “”), 不等于 (文本1, “,”)))
        文本1.加入项目 ()
    .如果真结束
    
.计次循环尾 ()
关闭文件 (文件号1)
赋值 (.禁止, 假)

.子程序 _按钮2_被单击, 空白型, , 
.局部变量 时间1, 整数型, , , 

赋值 (.禁止, 真)
赋值 (时间1, 取启动时间 ())
.判断循环首 (等于 (.禁止, 真))
    未知函数_67175297 (1000000)
    赋值 (.禁止, 假)
.判断循环尾 ()
相加 (“AT+CMGL=4”, #换行符).发送数据 ()
.判断循环首 (小于 (相减 (取启动时间 (), 时间1), 10000))
    未知函数_67175297 (1000)
    .如果真 (或者 (不等于 (寻找文本 (数据1, “OK”, , 假), -1), 不等于 (寻找文本 (数据1, “ERROR”, , 假), -1)))
        跳出循环 ()
    .如果真结束
    
.判断循环尾 ()
赋值 (.禁止, 假)

.子程序 _按钮3_被单击, 空白型, , 
.局部变量 文件号1, 整数型, , , 
.局部变量 文本1, 文本型, , , 
.局部变量 i, 整数型, , , 

赋值 (.禁止, 真)
赋值 (.端口号, 相加 (.现行选中项, 1))
赋值 (.波特率, 到整数 (.取项目文本 (.现行选中项)))
.如果 (等于 (.标题, “连接端口”))
    启动 ()
    未知函数_67175297 (1000000)
    赋值 (.禁止, 真)
    赋值 (.禁止, 真)
    清空 ()
    .如果真 (等于 (文件是否存在 (相加 (取运行目录 (), “/电话本.DAT”)), 假))
        写到文件 (相加 (取运行目录 (), “/电话本.DAT”), 到字节集 (.内容))
    .如果真结束
    
    赋值 (文件号1, 打开文件 (相加 (取运行目录 (), “\电话本.DAT”), , ))
    .计次循环首 (100, i)
        移动读写位置 (文件号1, 0, i)
        赋值 (文本1, 读入一行 (文件号1))
        .如果真 (并且 (不等于 (文本1, “”), 不等于 (文本1, “,”)))
            文本1.加入项目 ()
        .如果真结束
        
    .计次循环尾 ()
    关闭文件 (文件号1)
    
    赋值 (.标题, “断开连接”)
.否则
    赋值 (.标题, “连接端口”)
    停止 ()
    赋值 (.禁止, 假)
    赋值 (.禁止, 假)
    清空 ()
.如果结束
赋值 (.禁止, 假)
相加 (“AT+CPMS=”, #引号, “ME_P”, #引号, #换行符).发送数据 ()
未知函数_67175297 (100000)
相加 (“AT+CMGL=4”, #换行符).发送数据 ()
.判断循环首 (等于 (.标题, “断开连接”))
    未知函数_67175297 (15000000)
    .判断循环首 (等于 (.禁止, 真))
        未知函数_67175297 (1000)
    .判断循环尾 ()
    .判断循环首 (等于 (.禁止, 真))
        未知函数_67175297 (1000)
    .判断循环尾 ()
    .判断循环首 (等于 (.禁止, 真))
        未知函数_67175297 (1000)
    .判断循环尾 ()
    赋值 (.禁止, 真)
    .如果真 (等于 (相加 (“AT+CMGL=0”, #换行符).发送数据 (), 假))
        未知函数_67175297 (1000000)
        启动 ()
    .如果真结束
    未知函数_67175297 (1000000)
    赋值 (.禁止, 假)
.判断循环尾 ()


.子程序 _按钮5_被单击, 空白型, , 
停止 ()
结束 ()

.子程序 _按钮6_被单击, 空白型, , 
.局部变量 号码, 文本型, , , 
.局部变量 i, 整数型, , , 
.局部变量 正则表达式1, 未知类型0x40001, , , 
.局部变量 搜索结果1, 未知类型0x40002, , "0", 
.局部变量 文本1, 文本型, , , 
.局部变量 x, 文本型, , , 
.局部变量 字数, 整数型, , , 
.局部变量 N1, 整数型, , , 
.局部变量 号码1, 文本型, , , 


.如果真 (等于 (.内容, “”))
    信息框 (“不能发送空信息”, 0, )
    返回 ()
.如果真结束
.如果真 (等于 (.内容, “”))
    信息框 (“接收号码为空”, 0, )
    返回 ()
.如果真结束
.如果真 (不等于 (.标题, “断开连接”))
    信息框 (“手机没有连接”, 0, )
    返回 ()
.如果真结束

赋值 (.禁止, 真)
.判断循环首 (等于 (.禁止, 真))
    未知函数_67175297 (1000000)
    赋值 (.禁止, 假)
.判断循环尾 ()
.如果真 (等于 (.标题, “断开连接”))
    正则表达式1.未知支持库函数_3 (“[0-9]{5,11}”, )
    赋值 (搜索结果1, 正则表达式1.未知支持库函数_16 (.内容))
    .计次循环首 (取数组成员数 (搜索结果1), i)
        赋值 (号码, 搜索结果1.未知支持库函数_11 ( [i], .内容, ))
        赋值 (号码1, 号码)
        .判断循环首 (等于 (.禁止, 真))
            未知函数_67175297 (1000)
        .判断循环尾 ()
        赋值 (N1, 发送短信息 (号码, .内容, 10000))
        .如果真 (或者 (等于 (N1, 2), 等于 (N1, 3)))
            赋值 (N1, 发送短信息 (号码, .内容, 10000))
        .如果真结束
        .如果真 (等于 (N1, 1))
            相加 (号码1, #换行符, “[发送成功]”, #换行符, 到文本 (取现行时间 ()), #换行符, .内容, #换行符, #换行符).加入文本 ()
        .如果真结束
        .如果真 (不等于 (N1, 1))
            相加 (号码1, #换行符, “[发送失败]”, 到文本 (N1), #换行符, 到文本 (取现行时间 ()), #换行符, .内容, #换行符, #换行符).加入文本 ()
        .如果真结束
        
    .计次循环尾 ()
    赋值 (.内容, “”)
    
.如果真结束
赋值 (.禁止, 假)


.子程序 _按钮8_被单击, 空白型, , 
赋值 (.禁止, 真)
.判断循环首 (等于 (.禁止, 真))
    未知函数_67175297 (1000000)
    赋值 (.禁止, 假)
.判断循环尾 ()
.如果真 (等于 (信息框 (“      确定要删除手机里的短信息吗？”, #确认取消钮, ), #确认钮))
    .如果 (等于 (相加 (“AT+CMGD=1,4”, #换行符).发送数据 (), 真))
        信息框 (“删除成功”, 0, )
    .否则
        信息框 (“删除失败”, 0, )
    .如果结束
    
.如果真结束

赋值 (.禁止, 假)



.子程序 _按钮7_被单击, 空白型, , 
.局部变量 当前时间, 日期时间型, , , 
.局部变量 当前年份, 整数型, , , 
.局部变量 当前年份文本, 文本型, , , 
.局部变量 目标格式年份, 文本型, , , 

赋值 (.禁止, 真)
赋值 (当前时间, 取现行时间 ())
赋值 (当前年份, 取年份 (当前时间))
赋值 (当前年份文本, 到文本 (当前年份))
赋值 (目标格式年份, 取文本右边 (当前年份文本, 2))
相加 (“AT+CCLK=”, #引号, 目标格式年份, “/”, 取文本右边 (相加 (“0”, 到文本 (取月份 (当前时间))), 2), “/”, 取文本右边 (相加 (“0”, 到文本 (取日 (当前时间))), 2), “,”, 取文本右边 (相加 (“0”, 到文本 (取小时 (当前时间))), 2), “:”, 取文本右边 (相加 (“0”, 到文本 (取分钟 (当前时间))), 2), “:”, 取文本右边 (相加 (“0”, 到文本 (取秒 (当前时间))), 2), #引号, #换行符).发送数据 ()
延时 (1000)
相加 (“AT+CCLK?”, #换行符).发送数据 ()
赋值 (.禁止, 假)

.程序集 __HIDDEN_TEMP_MOD__, , , 

.子程序 短信pdu编码_, 整数型, , 返回AT+CMGS=的值， 为<=0标示错误、支持特服号码(10086…) by ResetAll
.参数 对方号码, 文本型, , 
.参数 短信内容, 文本型, , 
.参数 生成的PDU编码, 文本型, 参考, 
.参数 短信中心号码, 文本型, 可空, 



.子程序 高精度等待_, 空白型, , 
.参数 微秒, 整数型, , 1000微秒 = 1毫秒 ； 1000毫秒 = 1秒



.子程序 ANSI转USC2_, 文本型, , 方圆软件工作室－林炳崇（近在眼前）出品
.参数 文本, 文本型, , 



.子程序 USC2转ANSI_, 文本型, , 方圆软件工作室－林炳崇（近在眼前）出品
.参数 USC2, 文本型, , 




 ' 不属于任何一个程序集、类模块的函数：
