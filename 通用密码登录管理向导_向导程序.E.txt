 ' 文件类型：Windows窗口程序

 ' 程序名称：易语言框架程序向导
 ' 程序描述：能够自动生成通用易语言程序框架的向导程序
 ' 程序作者：
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 535
    高度 = 409
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = 14078150 '  0xD6D0C6
    最大化按钮 = 假
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 假
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “通用密码登录窗口向导”
    帮助文件名 = “”

窗口 图片设置窗口
    左边 = 50
    顶边 = 50
    宽度 = 423
    高度 = 431
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = 14078150 '  0xD6D0C6
    最大化按钮 = 假
    最小化按钮 = 假
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “窗口图片设置”
    帮助文件名 = “”



.常量 资源管理器, "“资源管理器”", , 模板名称
.常量 系统关于窗口, "“系统关于窗口”", , 
.常量 自定义关于窗口, "“自定义关于窗口”", , 
.图片 登录顶图_, " ' 已保存到：D:\易语言学习\Data\通用密码登录管理向导_向导程序.E\登录顶图_", , 
.图片 添加顶图_, " ' 已保存到：D:\易语言学习\Data\通用密码登录管理向导_向导程序.E\添加顶图_", , 
.图片 删除顶图_, " ' 已保存到：D:\易语言学习\Data\通用密码登录管理向导_向导程序.E\删除顶图_", , 
.图片 修改顶图_, " ' 已保存到：D:\易语言学习\Data\通用密码登录管理向导_向导程序.E\修改顶图_", , 
.图片 底图, " ' 已保存到：D:\易语言学习\Data\通用密码登录管理向导_向导程序.E\底图", , 
.图片 模板, " ' 已保存到：D:\易语言学习\Data\通用密码登录管理向导_向导程序.E\模板", , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 4 2 系统核心支持库
 ' ewizard F4252F5EB88342579B4E216FC410E5D7 1 0 易向导支持库
 ' iext 27bb20fdd3e145e4bee3db39ddd6e64c 1 1 扩展界面支持库一
 ' iext2 AF6AD80AA4244A59AFB3D83ECF5173CC 1 1 扩展界面支持库二
 ' shell 52F260023059454187AF826A3C07AF2A 1 0 操作系统界面功能支持库
 ' dp1 4BB4003860154917BC7D8230BF4FA58A 1 0 数据操作支持库一




.全局变量 当前窗口, 文本型, , , 
.全局变量 登录顶图, 字节集, , , 
.全局变量 登录底图, 字节集, , , 
.全局变量 添加顶图, 字节集, , , 
.全局变量 添加底图, 字节集, , , 
.全局变量 删除顶图, 字节集, , , 
.全局变量 删除底图, 字节集, , , 
.全局变量 修改顶图, 字节集, , , 
.全局变量 修改底图, 字节集, , , 
.全局变量 需要登录顶图, 逻辑型, , , 
.全局变量 需要登录底图, 逻辑型, , , 
.全局变量 需要添加顶图, 逻辑型, , , 
.全局变量 需要添加底图, 逻辑型, , , 
.全局变量 需要删除顶图, 逻辑型, , , 
.全局变量 需要删除底图, 逻辑型, , , 
.全局变量 需要修改顶图, 逻辑型, , , 
.全局变量 需要修改底图, 逻辑型, , , 

.窗口程序集 启动窗口程序集, , , 

.程序集变量 分类选中项, 整数型, , , 
.程序集变量 用户选中项, 整数型, , , 
.程序集变量 分类事件触发, 逻辑型, , , 判断超级列表框表项被改变是由外部事件所触发还是由代码所引起。
.程序集变量 用户事件触发, 逻辑型, , , 同上
.程序集变量 表项改变, 逻辑型, , , 如果表项改变为真，则编辑框内容被改变事件不执行。
.子程序 __启动窗口_创建完毕, 空白型, , 
.如果真 (等于 (是否为调试版 (), 真))
    信息框 (“本程序必须编译为EXE文件,存于wizard目录后才能正常运行!”, 0, “注意!”)
.如果真结束
赋值 (., 相减 (相加 (., 369), 取用户区高度 ())) ' 处理xp和其他系统窗口用户区高度不一样的问题。
连续赋值 (真, 需要登录顶图, 需要登录底图, 需要添加顶图, 需要添加底图, 需要删除顶图, 需要删除底图, 需要修改顶图, 需要修改底图)
设置登录图 ()

.子程序 _登录无边框单选框_被单击, 空白型, , 
设置登录图 ()

.子程序 设置登录图, 空白型, , 
.如果 (.选中)
    .判断开始 (并且 (需要登录顶图, 需要登录底图))
        连续赋值 (假, .可视, .可视, .可视)
        连续赋值 (真, .可视, .可视)
        赋值 (.顶边, 32)
        赋值 (.顶边, 63)
        .如果 (等于 (登录顶图, {  }))
            赋值 (.图片, #登录顶图_)
        .否则
            赋值 (.图片, 登录顶图)
        .如果结束
        .如果 (等于 (登录底图, {  }))
            赋值 (.图片, #底图)
        .否则
            赋值 (.图片, 登录底图)
        .如果结束
        
    .判断 (并且 (需要登录顶图, 等于 (需要登录底图, 假)))
        连续赋值 (假, .可视, .可视, .可视)
        连续赋值 (真, .可视, .可视)
        赋值 (.顶边, 32)
        赋值 (.顶边, 63)
        .如果 (等于 (登录顶图, {  }))
            赋值 (.图片, #登录顶图_)
        .否则
            赋值 (.图片, 登录顶图)
        .如果结束
        赋值 (.图片, {  })
    .判断 (并且 (等于 (需要登录顶图, 假), 需要登录底图))
        连续赋值 (假, .可视, .可视, .可视, .可视)
        赋值 (.可视, 真)
        赋值 (.顶边, 48)
        .如果 (等于 (登录底图, {  }))
            赋值 (.图片, #底图)
        .否则
            赋值 (.图片, 登录底图)
        .如果结束
        
    .判断 (并且 (等于 (需要登录顶图, 假), 等于 (需要登录底图, 假)))
        连续赋值 (假, .可视, .可视, .可视, .可视)
        赋值 (.可视, 真)
        赋值 (.顶边, 48)
        赋值 (.图片, {  })
    .默认
        
    .判断结束
    
.否则
    .判断开始 (并且 (需要登录顶图, 需要登录底图))
        连续赋值 (真, .可视, .可视, .可视, .可视, .可视)
        连续赋值 (27, .顶边, .顶边, .顶边)
        赋值 (.顶边, 38)
        赋值 (.顶边, 69)
        .如果 (等于 (登录顶图, {  }))
            赋值 (.图片, #登录顶图_)
        .否则
            赋值 (.图片, 登录顶图)
        .如果结束
        .如果 (等于 (登录底图, {  }))
            赋值 (.图片, #底图)
        .否则
            赋值 (.图片, 登录底图)
        .如果结束
        
    .判断 (并且 (需要登录顶图, 等于 (需要登录底图, 假)))
        连续赋值 (真, .可视, .可视, .可视, .可视, .可视)
        连续赋值 (27, .顶边, .顶边, .顶边)
        赋值 (.顶边, 38)
        赋值 (.顶边, 69)
        .如果 (等于 (登录顶图, {  }))
            赋值 (.图片, #登录顶图_)
        .否则
            赋值 (.图片, 登录顶图)
        .如果结束
        赋值 (.图片, {  })
    .判断 (并且 (等于 (需要登录顶图, 假), 需要登录底图))
        连续赋值 (真, .可视, .可视, .可视, .可视)
        赋值 (.可视, 假)
        连续赋值 (42, .顶边, .顶边, .顶边)
        赋值 (.顶边, 51)
        .如果 (等于 (登录底图, {  }))
            赋值 (.图片, #底图)
        .否则
            赋值 (.图片, 登录底图)
        .如果结束
        
    .判断 (并且 (等于 (需要登录顶图, 假), 等于 (需要登录底图, 假)))
        连续赋值 (真, .可视, .可视, .可视, .可视)
        赋值 (.可视, 假)
        连续赋值 (42, .顶边, .顶边, .顶边)
        赋值 (.顶边, 51)
        赋值 (.图片, {  })
    .默认
        
    .判断结束
    
.如果结束


.子程序 _登录有标题单选框_被单击, 空白型, , 
设置登录图 ()

.子程序 _取消按钮_被单击, 空白型, , 
销毁 ()

.子程序 _上一步按钮_被单击, 空白型, , 
.如果真 (等于 (.现行子夹, 4))
    .如果真 (等于 (判断分类名称 (), 假)) ' 判断是否存在空分类名称或相同的分类名称。
        赋值 (分类事件触发, 真)
        返回 ()
    .如果真结束
    
.如果真结束
.如果真 (等于 (.现行子夹, 5))
    .如果真 (等于 (判断用户名 (), 假)) ' 判断是否存在空分类名称或相同的分类名称。
        赋值 (用户事件触发, 真)
        返回 ()
    .如果真结束
    
.如果真结束
赋值 (.现行子夹, 相减 (.现行子夹, 1))
赋值 (., 假)
赋值 (., 等于 (.现行子夹, 0)) ' 如果选择夹的现行子夹为0，则禁止上一步按钮。

.子程序 _下一步按钮_被单击, 空白型, , 
.局部变量 变量1, 整数型, , , 在本子程序中用作循环变量，和超级列表框的表项索引。
.局部变量 存在可以操作用户的级别, 逻辑型, , , 

.如果真 (等于 (.现行子夹, 4)) ' 用户分类设置页面。在进入下一页面：用户设置页面前，先进行一些必要的判断。
    .如果 (.选中)
        .如果真 (等于 (取表项数 (), 0))
            信息框 (“你选择了需要用户分类，必须至少添加一项分类名称。”, #信息图标, “错误”)
            返回 ()
        .如果真结束
        .如果真 (等于 (判断分类名称 (), 假)) ' 判断是否存在空分类名称或相同的分类名称。
            赋值 (分类事件触发, 真)
            返回 ()
        .如果真结束
        赋值 (存在可以操作用户的级别, 假)
        .如果真 (或者 (等于 (.选中, 真), 等于 (.选中, 真)))
            .计次循环首 (取表项数 (), 变量1) ' 判断是否设置了具有设置用户权限的用户级别。
                .如果真 (等于 (相减 (变量1, 1).取标题 (1), “真”))
                    赋值 (存在可以操作用户的级别, 真)
                    跳出循环 ()
                .如果真结束
                
            .计次循环尾 ()
        .如果真结束
        .如果真 (等于 (存在可以操作用户的级别, 假))
            信息框 (“你至少必须设置一个用户分类可以拥有用户管理操作的权限，否则你将无法添加或删除用户！”, #信息图标, “错误”)
            返回 ()
        .如果真结束
        清空 () ' 进入用户设置页面。
        .计次循环首 (取表项数 (), 变量1)
            相减 (变量1, 1).取标题 (0).加入项目 () ' 将用户分类页面中添加的用户分类，从超级列表框中读取，并加入到用户设置页面中的分类组合框中。
        .计次循环尾 ()
        赋值 (.现行选中项, 0)
        .如果真 (等于 (取表项数 (), 0)) ' 添加一个默认用户。
            赋值 (变量1, .插入表项 (“超级管理员”, , , , )) ' 变量1其实是插入表项所返回的表项索引，这里引用它，只是为了节省一个局部变量而已。你也可以另外定义一个局部变量：索引，来代替变量。
            变量1.置标题 (1, “8888”)
            变量1.置标题 (2, .取项目文本 (.现行选中项))
            赋值 (用户选中项, 0)
        .如果真结束
        
    .否则
        清空 () ' 如果设置了不需要分类，则禁止分类组合框。
        赋值 (.禁止, 真)
        .如果真 (等于 (取表项数 (), 0))
            赋值 (变量1, .插入表项 (“超级管理员”, , , , ))
            变量1.置标题 (1, “8888”)
        .如果真结束
        
    .如果结束
    .如果 (.选中)
        _文件单选框_被单击 () ' 主要作用是在首次进入用户设置页面时，先进行相关设置。
    .否则
        _注册表单选框_被单击 ()
    .如果结束
    
.如果真结束
赋值 (.现行子夹, 相加 (.现行子夹, 1)) ' 选择夹现行子夹在其它子夹时，不需要进行判断，直接更换子夹就可以了。
赋值 (., 假)
赋值 (., 等于 (.现行子夹, 相减 (取子夹数目 (), 1))) ' 如果在最后一个子夹，则下一步按钮被禁止。否则不禁止。用此行代码，可以省略如果判断。
.如果真 (等于 (.现行子夹, 5))
    赋值 (., 假) ' 进入最后一个子夹，完成按钮被取消禁止，这时，如果再次回到前面的子夹，个人考虑，不需要再将完成按钮禁止了。所以没有采用上一行代码的形式来判断。
.如果真结束


.子程序 _完成按钮_被单击, 空白型, , 开始修改模板
.局部变量 分类, 文本型, , , 
.局部变量 权限, 文本型, , , 
.局部变量 用户, 文本型, , , 
.局部变量 口令, 文本型, , , 
.局部变量 属类, 文本型, , , 
.局部变量 结果文本, 文本型, , , 
.局部变量 全路径, 文本型, , , 
.局部变量 变量1, 整数型, , , 
.局部变量 配置文件名, 文本型, , , 

.如果真 (等于 (判断用户名 (), 假)) ' 判断是否存在空分类名称或相同的分类名称。
    赋值 (分类事件触发, 真)
    返回 ()
.如果真结束
.如果 (.选中) ' 以配置文件形式保存用户信息。
    .如果真 (并且 (不等于 (.现行选中项, 3), 不等于 (寻找文本 (.内容, “:\”, , 假), -1))) ' 由于用户信息保存文件的路径格式为：目录组合框中的目录＋保存路径编辑框中的相对路径。所以需要进行判断，有没有在保存路径编辑框中输入了带盘符的路径。
        信息框 (“请为用户信息保存设置相对路径(不带盘符)。”, #信息图标, )
        获取焦点 ()
        赋值 (.被选择字符数, -1)
        返回 ()
    .如果真结束
    .如果真 (或者 (等于 (.现行选中项, 1), 等于 (.现行选中项, 2)))
        .如果真 (等于 (信息框 (相加 (“    你设置了将用户信息文件保存在系统目录下，如果由于不同的程序使用相同的文件名，将会导致用户信息保存和读取出错。”, #换行符, “    建议你设置一个不易重复的文件名，或者将用户信息文件保存在程序运行目录下。”, #换行符, “    确定要继续吗？”), 相加 (#询问图标, #确认取消钮, #默认按钮二), “保存信息设置”), #取消钮))
            返回 ()
        .如果真结束
        
    .如果真结束
    .判断开始 (等于 (.现行选中项, 0)) ' 取出保存用户信息的配置文件全路径名称，如果已经存在，则删除它。从而避免多次使用向导，不同的设置使用同一个配置文件而造成的冲突。
        赋值 (配置文件名, 相加 (取运行目录 (), “\”, .内容))
    .判断 (等于 (.现行选中项, 1))
        赋值 (配置文件名, 相加 (未知支持库函数_7 (9), “\”, .内容))
    .判断 (等于 (.现行选中项, 2))
        赋值 (配置文件名, 相加 (未知支持库函数_7 (10), “\”, .内容))
    .默认
        赋值 (配置文件名, .内容)
    .判断结束
    赋值 (配置文件名, 子文本替换 (配置文件名, “\\”, “\”, , , 真))
    .如果真 (文件是否存在 (配置文件名))
        .如果 (等于 (信息框 (相加 (“    你指定的用户信息文件已经存在，如果使用此文件，可能引起与其它程序的冲突。向导程序将删除此文件以避免出现错误。”, #换行符, “    你确定要删除此文件吗？”, #换行符, “    点击[是]钮，删除现有文件并继续生成程序。点击[否]钮返回以修改当前文件设定。”), 相加 (#询问图标, #是否钮, #默认按钮一), “文件已存在”), #是钮))
            删除文件 (配置文件名)
        .否则
            返回 ()
        .如果结束
        
    .如果真结束
    
.否则
     ' 以注册表保存用户信息。
    .如果真 (不等于 (寻找文本 (.内容, “我的程序”, , 假), -1)) ' 我的程序是默认的名称，生成程序时，请修改为自己的程序名称。该名称将成为注册表中相关键下的一个项目名称。
        信息框 (相加 (“请将用户信息保存注册项中的”, #左引号, “我的程序”, #右引号, “修改为你自己的程序名称。”), #信息图标, )
        获取焦点 ()
        赋值 (.被选择字符数, -1)
        返回 ()
    .如果真结束
    .如果真 (不等于 (取文本右边 (.内容, 1), “\”))
        赋值 (.内容, 相加 (.内容, “\”))
    .如果真结束
    .如果真 (不等于 (取字节集注册项 (.取项目数值 (.现行选中项), 相加 (.内容, “num1”), {  }), {  })) ' 如果取出用户信息不为空，则删除该项下所有有关用户信息的项目（num1～num6）。之所以不直接删除键“data",是防止该项下还有程序记录的其他有用的项目。
        .如果 (等于 (信息框 (相加 (“    你指定的注册表项已经存在，如果使用此注册表项，可能引起与其它程序的冲突。向导程序将删除此注册表项下相关键以避免出现错误。”, #换行符, “    你确定要删除相关键吗？”, #换行符, “    点击[是]钮，删除相关键并继续生成程序。点击[否]钮返回以修改当前注册表项设定。”), 相加 (#询问图标, #是否钮, #默认按钮一), “注册表项已存在”), #是钮))
            删除注册项 (.取项目数值 (.现行选中项), 相加 (.内容, “num1”))
            删除注册项 (.取项目数值 (.现行选中项), 相加 (.内容, “num2”))
            删除注册项 (.取项目数值 (.现行选中项), 相加 (.内容, “num3”))
            删除注册项 (.取项目数值 (.现行选中项), 相加 (.内容, “num4”))
            删除注册项 (.取项目数值 (.现行选中项), 相加 (.内容, “num5”))
            删除注册项 (.取项目数值 (.现行选中项), 相加 (.内容, “num6”))
        .否则
            返回 ()
        .如果结束
        
    .如果真结束
    
.如果结束
 ' 以下为窗口设置
登录窗口设置 () ' 设置登录窗口。
.如果真 (.选中) ' 设置添加窗口。
    未知支持库函数_10 (“允许添加用户”, )
    添加窗口设置 ()
.如果真结束
.如果真 (.选中) ' 设置删除窗口。
    未知支持库函数_10 (“允许删除用户”, )
    删除窗口设置 ()
.如果真结束
.如果真 (.选中) ' 设置修改窗口。
    未知支持库函数_10 (“允许修改口令”, )
    修改窗口设置 ()
.如果真结束
 ' 以下为用户信息及分类设置
.如果真 (.选中)
    .计次循环首 (取表项数 (), 变量1) ' 将分类及权限以特定分隔符连接，保存为文本。并定义模板变量，以方便调用。
        赋值 (分类, 相加 (分类, 相减 (变量1, 1).取标题 (0), “★§☆”)) ' “★§☆”为特定分隔符。
        赋值 (权限, 相加 (权限, 相减 (变量1, 1).取标题 (1), “★§☆”))
    .计次循环尾 ()
    未知支持库函数_10 (“分类文本”, 分类)
    未知支持库函数_10 (“权限文本”, 权限)
    .计次循环首 (取表项数 (), 变量1) ' 将所有用户的所属分类以特定分隔符连接，保存为文本。以便和用户名称一一对应。
        赋值 (属类, 相加 (属类, 相减 (变量1, 1).取标题 (2), “★§☆”))
    .计次循环尾 ()
    未知支持库函数_10 (“所属分类文本”, 属类)
    未知支持库函数_6 (“添加用户窗口.透明标签4.标题”, .内容)
.如果真结束
.计次循环首 (取表项数 (), 变量1) ' 将用户名和口令分别以特定分隔符连接，保存为文本，并且顺序一一对应。
    赋值 (用户, 相加 (用户, 相减 (变量1, 1).取标题 (0), “★§☆”))
    赋值 (口令, 相加 (口令, 未知支持库函数_2 (到字节集 (相减 (变量1, 1).取标题 (1))), “★§☆”))
.计次循环尾 ()
未知支持库函数_10 (“用户文本”, 用户)
未知支持库函数_10 (“口令文本”, 口令)
.如果 (.选中) ' 以配置文件形式保存用户信息。
    未知支持库函数_10 (“配置文件保存”, )
    未知支持库函数_5 (#., “配置文件路径”, #., .现行选中项)
    未知支持库函数_5 (#., “配置文件名称”, #., .内容)
    未知支持库函数_4 (“注册表”)
.否则
    未知支持库函数_10 (“注册表保存”, ) ' 以注册表保存用户信息。
    未知支持库函数_5 (#., “根目录”, #., .取项目数值 (.现行选中项))
    未知支持库函数_5 (#., “注册表路径”, #., .内容)
.如果结束
未知支持库函数_5 (#., “密匙”, #., .内容) ' 建议在生成程序后，将密钥适当加密。
 ' 以下为主窗口菜单设置
.如果真 (等于 (.选中, 假))
    未知支持库函数_2 (#., “主窗口.添加用户”)
    未知支持库函数_2 (#., “_添加用户_被选择”)
    未知支持库函数_2 (#., “添加用户窗口”)
    未知支持库函数_2 (#., “添加用户程序集”)
.如果真结束
.如果真 (等于 (.选中, 假))
    未知支持库函数_2 (#., “主窗口.删除用户”)
    未知支持库函数_2 (#., “_删除用户_被选择”)
    未知支持库函数_2 (#., “删除用户窗口”)
    未知支持库函数_2 (#., “删除用户程序集”)
.如果真结束
.如果真 (并且 (等于 (.选中, 假), 等于 (.选中, 假)))
    未知支持库函数_2 (#., “主窗口.用户分隔条1”)
.如果真结束
.如果真 (等于 (.选中, 假))
    未知支持库函数_2 (#., “主窗口.修改口令”)
    未知支持库函数_2 (#., “_修改口令_被选择”)
    未知支持库函数_2 (#., “修改口令窗口”)
    未知支持库函数_2 (#., “修改口令程序集”)
    未知支持库函数_2 (#., “主窗口.用户分隔条2”)
.如果真结束

赋值 (结果文本, 未知支持库函数_13 (#模板, )) ' 将程序作为新的完整程序载入
.如果真 (不等于 (结果文本, “”))
    信息框 (相加 (“创建应用程序失败！错误信息为：”, 结果文本), 16, )
.如果真结束
销毁 ()

.子程序 登录窗口设置, 空白型, , 
.如果 (.选中)
    未知支持库函数_6 (“_启动窗口.边框”, 0)
    未知支持库函数_10 (“需要登录窗口底图”, )
    .如果 (需要登录顶图)
        未知支持库函数_10 (“需要登录窗口顶图”, )
        未知支持库函数_6 (“_启动窗口.图片框1.左边”, 0)
        未知支持库函数_6 (“_启动窗口.图片框1.顶边”, 0)
        未知支持库函数_6 (“_启动窗口.图片框2.左边”, 0)
        未知支持库函数_6 (“_启动窗口.图片框2.顶边”, 63)
        未知支持库函数_6 (“_启动窗口.图形按钮1.顶边”, 68)
        未知支持库函数_6 (“_启动窗口.透明标签1.顶边”, 79)
        未知支持库函数_6 (“_启动窗口.用户组合框.顶边”, 78)
        未知支持库函数_6 (“_启动窗口.图形按钮2.顶边”, 102)
        未知支持库函数_6 (“_启动窗口.透明标签2.顶边”, 110)
        未知支持库函数_6 (“_启动窗口.口令编辑框.顶边”, 108)
        未知支持库函数_6 (“_启动窗口.选择框1.顶边”, 135)
        未知支持库函数_6 (“_启动窗口.透明标签3.顶边”, 134)
        未知支持库函数_6 (“_启动窗口.登录按钮.顶边”, 164)
        未知支持库函数_6 (“_启动窗口.取消按钮.顶边”, 164)
        未知支持库函数_6 (“_启动窗口.高度”, 208)
        .如果真 (不等于 (登录顶图, {  }))
            未知支持库函数_6 (“_启动窗口.图片框1.图片”, 登录顶图)
        .如果真结束
        .如果 (需要登录底图)
            .如果真 (不等于 (登录底图, {  }))
                未知支持库函数_6 (“_启动窗口.图片框2.图片”, 登录底图)
            .如果真结束
            
        .否则
            未知支持库函数_6 (“_启动窗口.图片框2.图片”, {  })
        .如果结束
        
    .否则
        未知支持库函数_6 (“_启动窗口.图片框2.左边”, 0)
        未知支持库函数_6 (“_启动窗口.图片框2.顶边”, 0)
        未知支持库函数_6 (“_启动窗口.图形按钮1.顶边”, 14)
        未知支持库函数_6 (“_启动窗口.透明标签1.顶边”, 25)
        未知支持库函数_6 (“_启动窗口.用户组合框.顶边”, 24)
        未知支持库函数_6 (“_启动窗口.图形按钮2.顶边”, 48)
        未知支持库函数_6 (“_启动窗口.透明标签2.顶边”, 57)
        未知支持库函数_6 (“_启动窗口.口令编辑框.顶边”, 55)
        未知支持库函数_6 (“_启动窗口.选择框1.顶边”, 81)
        未知支持库函数_6 (“_启动窗口.透明标签3.顶边”, 80)
        未知支持库函数_6 (“_启动窗口.登录按钮.顶边”, 110)
        未知支持库函数_6 (“_启动窗口.取消按钮.顶边”, 110)
        未知支持库函数_6 (“_启动窗口.高度”, 156)
        未知支持库函数_6 (“_启动窗口.图片框2.高度”, 156)
        .如果 (需要登录底图)
            .如果真 (不等于 (登录底图, {  }))
                未知支持库函数_6 (“_启动窗口.图片框2.图片”, 登录底图)
            .如果真结束
            
        .否则
            未知支持库函数_6 (“_启动窗口.图片框2.图片”, {  })
        .如果结束
        
    .如果结束
    
.否则
    未知支持库函数_6 (“_启动窗口.边框”, 2)
    .如果 (需要登录顶图)
        未知支持库函数_10 (“需要登录窗口顶图”, )
        未知支持库函数_6 (“_启动窗口.图片框1.左边”, -1)
        未知支持库函数_6 (“_启动窗口.图片框1.顶边”, -1)
        未知支持库函数_6 (“_启动窗口.图片框2.左边”, -1)
        未知支持库函数_6 (“_启动窗口.图片框2.顶边”, 62)
        未知支持库函数_6 (“_启动窗口.图形按钮1.顶边”, 68)
        未知支持库函数_6 (“_启动窗口.透明标签1.顶边”, 79)
        未知支持库函数_6 (“_启动窗口.用户组合框.顶边”, 78)
        未知支持库函数_6 (“_启动窗口.图形按钮2.顶边”, 102)
        未知支持库函数_6 (“_启动窗口.透明标签2.顶边”, 110)
        未知支持库函数_6 (“_启动窗口.口令编辑框.顶边”, 108)
        未知支持库函数_6 (“_启动窗口.选择框1.顶边”, 135)
        未知支持库函数_6 (“_启动窗口.透明标签3.顶边”, 134)
        未知支持库函数_6 (“_启动窗口.登录按钮.顶边”, 164)
        未知支持库函数_6 (“_启动窗口.取消按钮.顶边”, 164)
        未知支持库函数_6 (“_启动窗口.高度”, 相加 (相减 (., 取用户区高度 ()), 208))
        未知支持库函数_6 (“_启动窗口.图片框2.高度”, 146)
        .如果真 (不等于 (登录顶图, {  }))
            未知支持库函数_6 (“_启动窗口.图片框1.图片”, 登录顶图)
        .如果真结束
        .如果真 (需要登录底图)
            未知支持库函数_10 (“需要登录窗口底图”, )
            .如果真 (不等于 (登录底图, {  }))
                未知支持库函数_6 (“_启动窗口.图片框2.图片”, 登录底图)
            .如果真结束
            
        .如果真结束
        
    .否则
        未知支持库函数_6 (“_启动窗口.图片框2.左边”, -1)
        未知支持库函数_6 (“_启动窗口.图片框2.顶边”, 0)
        未知支持库函数_6 (“_启动窗口.图形按钮1.顶边”, 14)
        未知支持库函数_6 (“_启动窗口.透明标签1.顶边”, 25)
        未知支持库函数_6 (“_启动窗口.用户组合框.顶边”, 24)
        未知支持库函数_6 (“_启动窗口.图形按钮2.顶边”, 48)
        未知支持库函数_6 (“_启动窗口.透明标签2.顶边”, 57)
        未知支持库函数_6 (“_启动窗口.口令编辑框.顶边”, 55)
        未知支持库函数_6 (“_启动窗口.选择框1.顶边”, 81)
        未知支持库函数_6 (“_启动窗口.透明标签3.顶边”, 80)
        未知支持库函数_6 (“_启动窗口.登录按钮.顶边”, 110)
        未知支持库函数_6 (“_启动窗口.取消按钮.顶边”, 110)
        未知支持库函数_6 (“_启动窗口.高度”, 相加 (相减 (., 取用户区高度 ()), 156))
        未知支持库函数_6 (“_启动窗口.图片框2.高度”, 156)
        .如果真 (需要登录底图)
            .如果 (不等于 (登录底图, {  }))
                未知支持库函数_6 (“_启动窗口.底图”, 登录底图)
            .否则
                未知支持库函数_6 (“_启动窗口.底图”, #底图)
            .如果结束
            
        .如果真结束
        
    .如果结束
    
.如果结束
.如果真 (.选中)
    未知支持库函数_10 (“允许保存密码”, )
.如果真结束
未知支持库函数_10 (“xp风格”, .现行选中项)
未知支持库函数_6 (“_启动窗口.标题”, .内容)
未知支持库函数_6 (“主窗口.标题”, .内容)

.子程序 添加窗口设置, 空白型, , 
.如果 (.选中)
    未知支持库函数_6 (“添加用户窗口.边框”, 0)
    未知支持库函数_10 (“需要添加窗口底图”, )
    .如果 (需要添加顶图)
        未知支持库函数_10 (“需要添加窗口顶图”, )
        未知支持库函数_6 (“添加用户窗口.图片框1.左边”, 0)
        未知支持库函数_6 (“添加用户窗口.图片框1.顶边”, 0)
        未知支持库函数_6 (“添加用户窗口.图片框2.左边”, 0)
        未知支持库函数_6 (“添加用户窗口.图片框2.顶边”, 62)
        未知支持库函数_6 (“添加用户窗口.透明标签1.顶边”, 84)
        未知支持库函数_6 (“添加用户窗口.用户编辑框.顶边”, 82)
        未知支持库函数_6 (“添加用户窗口.透明标签2.顶边”, 114)
        未知支持库函数_6 (“添加用户窗口.口令编辑框.顶边”, 112)
        未知支持库函数_6 (“添加用户窗口.透明标签3.顶边”, 144)
        未知支持库函数_6 (“添加用户窗口.复核口令编辑框.顶边”, 142)
        未知支持库函数_6 (“添加用户窗口.确定按钮.顶边”, 84)
        未知支持库函数_6 (“添加用户窗口.取消按钮.顶边”, 126)
        .如果 (.选中)
            未知支持库函数_10 (“需要分类”, )
            未知支持库函数_6 (“添加用户窗口.透明标签4.顶边”, 174)
            未知支持库函数_6 (“添加用户窗口.分类组合框.顶边”, 172)
            未知支持库函数_6 (“添加用户窗口.高度”, 210)
            未知支持库函数_6 (“添加用户窗口.图片框2.高度”, 148)
        .否则
            未知支持库函数_6 (“添加用户窗口.高度”, 184)
            未知支持库函数_6 (“添加用户窗口.图片框2.高度”, 122)
        .如果结束
        .如果真 (不等于 (添加顶图, {  }))
            未知支持库函数_6 (“添加用户窗口.图片框1.图片”, 添加顶图)
        .如果真结束
        .如果 (需要添加底图)
            .如果真 (不等于 (添加底图, {  }))
                未知支持库函数_6 (“添加用户窗口.图片框2.图片”, 添加底图)
            .如果真结束
            
        .否则
            未知支持库函数_6 (“添加用户窗口.图片框2.图片”, {  })
        .如果结束
        
    .否则
        未知支持库函数_6 (“添加用户窗口.图片框2.左边”, 0)
        未知支持库函数_6 (“添加用户窗口.图片框2.顶边”, 0)
        未知支持库函数_6 (“添加用户窗口.透明标签1.顶边”, 22)
        未知支持库函数_6 (“添加用户窗口.用户编辑框.顶边”, 20)
        未知支持库函数_6 (“添加用户窗口.透明标签2.顶边”, 52)
        未知支持库函数_6 (“添加用户窗口.口令编辑框.顶边”, 50)
        未知支持库函数_6 (“添加用户窗口.透明标签3.顶边”, 82)
        未知支持库函数_6 (“添加用户窗口.复核口令编辑框.顶边”, 80)
        未知支持库函数_6 (“添加用户窗口.确定按钮.顶边”, 22)
        未知支持库函数_6 (“添加用户窗口.取消按钮.顶边”, 64)
        .如果 (.选中)
            未知支持库函数_10 (“需要分类”, )
            未知支持库函数_6 (“添加用户窗口.透明标签4.顶边”, 112)
            未知支持库函数_6 (“添加用户窗口.分类组合框.顶边”, 110)
            未知支持库函数_6 (“添加用户窗口.高度”, 148)
            未知支持库函数_6 (“添加用户窗口.图片框2.高度”, 148)
        .否则
            未知支持库函数_6 (“添加用户窗口.高度”, 122)
            未知支持库函数_6 (“添加用户窗口.图片框2.高度”, 122)
        .如果结束
        .如果 (需要添加底图)
            .如果真 (不等于 (添加底图, {  }))
                未知支持库函数_6 (“添加用户窗口.图片框2.图片”, 添加底图)
            .如果真结束
            
        .否则
            未知支持库函数_6 (“添加用户窗口.图片框2.图片”, {  })
        .如果结束
        
    .如果结束
    
.否则
    未知支持库函数_6 (“添加用户窗口.边框”, 2)
    .如果 (需要添加顶图)
        未知支持库函数_10 (“需要添加窗口顶图”, )
        未知支持库函数_6 (“添加用户窗口.图片框1.左边”, -1)
        未知支持库函数_6 (“添加用户窗口.图片框1.顶边”, -1)
        未知支持库函数_6 (“添加用户窗口.图片框2.左边”, -1)
        未知支持库函数_6 (“添加用户窗口.图片框2.顶边”, 62)
        未知支持库函数_6 (“添加用户窗口.透明标签1.顶边”, 84)
        未知支持库函数_6 (“添加用户窗口.用户编辑框.顶边”, 82)
        未知支持库函数_6 (“添加用户窗口.透明标签2.顶边”, 114)
        未知支持库函数_6 (“添加用户窗口.口令编辑框.顶边”, 112)
        未知支持库函数_6 (“添加用户窗口.透明标签3.顶边”, 144)
        未知支持库函数_6 (“添加用户窗口.复核口令编辑框.顶边”, 142)
        未知支持库函数_6 (“添加用户窗口.确定按钮.顶边”, 84)
        未知支持库函数_6 (“添加用户窗口.取消按钮.顶边”, 126)
        .如果 (.选中)
            未知支持库函数_10 (“需要分类”, )
            未知支持库函数_6 (“添加用户窗口.透明标签4.顶边”, 174)
            未知支持库函数_6 (“添加用户窗口.分类组合框.顶边”, 172)
            未知支持库函数_6 (“添加用户窗口.高度”, 相加 (相减 (., 取用户区高度 ()), 210))
            未知支持库函数_6 (“添加用户窗口.图片框2.高度”, 148)
        .否则
            未知支持库函数_6 (“添加用户窗口.高度”, 相加 (相减 (., 取用户区高度 ()), 184))
            未知支持库函数_6 (“添加用户窗口.图片框2.高度”, 122)
        .如果结束
        .如果真 (不等于 (添加顶图, {  }))
            未知支持库函数_6 (“添加用户窗口.图片框1.图片”, 添加顶图)
        .如果真结束
        .如果真 (需要添加底图)
            未知支持库函数_10 (“需要添加窗口底图”, )
            .如果真 (不等于 (添加底图, {  }))
                未知支持库函数_6 (“添加用户窗口.图片框2.图片”, 添加底图)
            .如果真结束
            
        .如果真结束
        
    .否则
        未知支持库函数_6 (“添加用户窗口.图片框2.左边”, -1)
        未知支持库函数_6 (“添加用户窗口.图片框2.顶边”, 0)
        未知支持库函数_6 (“添加用户窗口.透明标签1.顶边”, 22)
        未知支持库函数_6 (“添加用户窗口.用户编辑框.顶边”, 20)
        未知支持库函数_6 (“添加用户窗口.透明标签2.顶边”, 52)
        未知支持库函数_6 (“添加用户窗口.口令编辑框.顶边”, 50)
        未知支持库函数_6 (“添加用户窗口.透明标签3.顶边”, 82)
        未知支持库函数_6 (“添加用户窗口.复核口令编辑框.顶边”, 80)
        未知支持库函数_6 (“添加用户窗口.确定按钮.顶边”, 22)
        未知支持库函数_6 (“添加用户窗口.取消按钮.顶边”, 64)
        .如果 (.选中)
            未知支持库函数_10 (“需要分类”, )
            未知支持库函数_6 (“添加用户窗口.透明标签4.顶边”, 112)
            未知支持库函数_6 (“添加用户窗口.分类组合框.顶边”, 110)
            未知支持库函数_6 (“添加用户窗口.高度”, 相加 (相减 (., 取用户区高度 ()), 148))
            未知支持库函数_6 (“添加用户窗口.图片框2.高度”, 148)
        .否则
            未知支持库函数_6 (“添加用户窗口.高度”, 相加 (相减 (., 取用户区高度 ()), 122))
            未知支持库函数_6 (“添加用户窗口.图片框2.高度”, 122)
        .如果结束
        .如果真 (需要添加底图)
            .如果 (不等于 (添加底图, {  }))
                未知支持库函数_6 (“添加用户窗口.底图”, 添加底图)
            .否则
                未知支持库函数_6 (“添加用户窗口.底图”, #底图)
            .如果结束
            
        .如果真结束
        
    .如果结束
    
.如果结束


.子程序 删除窗口设置, 空白型, , 
.如果 (.选中)
    未知支持库函数_6 (“删除用户窗口.边框”, 0)
    未知支持库函数_10 (“需要删除窗口底图”, )
    .如果 (需要删除顶图)
        未知支持库函数_10 (“需要删除窗口顶图”, )
        未知支持库函数_6 (“删除用户窗口.图片框1.左边”, 0)
        未知支持库函数_6 (“删除用户窗口.图片框1.顶边”, 0)
        未知支持库函数_6 (“删除用户窗口.图片框2.左边”, 0)
        未知支持库函数_6 (“删除用户窗口.图片框2.顶边”, 62)
        未知支持库函数_6 (“删除用户窗口.透明标签1.顶边”, 92)
        未知支持库函数_6 (“删除用户窗口.用户组合框.顶边”, 90)
        未知支持库函数_6 (“删除用户窗口.删除按钮.顶边”, 132)
        未知支持库函数_6 (“删除用户窗口.取消按钮.顶边”, 132)
        未知支持库函数_6 (“删除用户窗口.高度”, 180)
        未知支持库函数_6 (“删除用户窗口.图片框2.高度”, 118)
        .如果真 (不等于 (删除顶图, {  }))
            未知支持库函数_6 (“删除用户窗口.图片框1.图片”, 删除顶图)
        .如果真结束
        .如果 (需要删除底图)
            .如果真 (不等于 (删除底图, {  }))
                未知支持库函数_6 (“删除用户窗口.图片框2.图片”, 删除底图)
            .如果真结束
            
        .否则
            未知支持库函数_6 (“删除用户窗口.图片框2.图片”, {  })
        .如果结束
        
    .否则
        未知支持库函数_6 (“删除用户窗口.图片框2.左边”, 0)
        未知支持库函数_6 (“删除用户窗口.图片框2.顶边”, 0)
        未知支持库函数_6 (“删除用户窗口.透明标签1.顶边”, 30)
        未知支持库函数_6 (“删除用户窗口.用户组合框.顶边”, 28)
        未知支持库函数_6 (“删除用户窗口.删除按钮.顶边”, 70)
        未知支持库函数_6 (“删除用户窗口.取消按钮.顶边”, 70)
        未知支持库函数_6 (“删除用户窗口.高度”, 118)
        未知支持库函数_6 (“删除用户窗口.图片框2.高度”, 118)
        .如果 (需要删除底图)
            .如果真 (不等于 (删除底图, {  }))
                未知支持库函数_6 (“删除用户窗口.图片框2.图片”, 删除底图)
            .如果真结束
            
        .否则
            未知支持库函数_6 (“删除用户窗口.图片框2.图片”, {  })
        .如果结束
        
    .如果结束
    
.否则
    未知支持库函数_6 (“删除用户窗口.边框”, 2)
    .如果 (需要删除顶图)
        未知支持库函数_10 (“需要删除窗口顶图”, )
        未知支持库函数_6 (“删除用户窗口.图片框1.左边”, -1)
        未知支持库函数_6 (“删除用户窗口.图片框1.顶边”, -1)
        未知支持库函数_6 (“删除用户窗口.图片框2.左边”, -1)
        未知支持库函数_6 (“删除用户窗口.图片框2.顶边”, 62)
        未知支持库函数_6 (“删除用户窗口.透明标签1.顶边”, 92)
        未知支持库函数_6 (“删除用户窗口.用户组合框.顶边”, 90)
        未知支持库函数_6 (“删除用户窗口.删除按钮.顶边”, 132)
        未知支持库函数_6 (“删除用户窗口.取消按钮.顶边”, 132)
        未知支持库函数_6 (“删除用户窗口.高度”, 相加 (相减 (., 取用户区高度 ()), 180))
        未知支持库函数_6 (“删除用户窗口.图片框2.高度”, 118)
        .如果真 (不等于 (删除顶图, {  }))
            未知支持库函数_6 (“删除用户窗口.图片框1.图片”, 删除顶图)
        .如果真结束
        .如果真 (需要删除底图)
            未知支持库函数_10 (“需要删除窗口底图”, )
            .如果真 (不等于 (删除底图, {  }))
                未知支持库函数_6 (“删除用户窗口.图片框2.图片”, 删除底图)
            .如果真结束
            
        .如果真结束
        
    .否则
        未知支持库函数_6 (“删除用户窗口.图片框2.左边”, -1)
        未知支持库函数_6 (“删除用户窗口.图片框2.顶边”, 0)
        未知支持库函数_6 (“删除用户窗口.透明标签1.顶边”, 30)
        未知支持库函数_6 (“删除用户窗口.用户组合框.顶边”, 28)
        未知支持库函数_6 (“删除用户窗口.删除按钮.顶边”, 70)
        未知支持库函数_6 (“删除用户窗口.取消按钮.顶边”, 70)
        未知支持库函数_6 (“删除用户窗口.高度”, 相加 (相减 (., 取用户区高度 ()), 118))
        未知支持库函数_6 (“删除用户窗口.图片框2.高度”, 118)
        .如果真 (需要删除底图)
            .如果 (不等于 (删除底图, {  }))
                未知支持库函数_6 (“删除用户窗口.底图”, 删除底图)
            .否则
                未知支持库函数_6 (“删除用户窗口.底图”, #底图)
            .如果结束
            
        .如果真结束
        
    .如果结束
    
.如果结束


.子程序 修改窗口设置, 空白型, , 
.如果 (.选中)
    未知支持库函数_6 (“修改口令窗口.边框”, 0)
    未知支持库函数_10 (“需要修改窗口底图”, )
    .如果 (需要修改顶图)
        未知支持库函数_10 (“需要修改窗口顶图”, )
        未知支持库函数_6 (“修改口令窗口.图片框1.左边”, 0)
        未知支持库函数_6 (“修改口令窗口.图片框1.顶边”, 0)
        未知支持库函数_6 (“修改口令窗口.图片框2.左边”, 0)
        未知支持库函数_6 (“修改口令窗口.图片框2.顶边”, 62)
        未知支持库函数_6 (“修改口令窗口.透明标签1.顶边”, 84)
        未知支持库函数_6 (“修改口令窗口.用户编辑框.顶边”, 82)
        未知支持库函数_6 (“修改口令窗口.透明标签2.顶边”, 114)
        未知支持库函数_6 (“修改口令窗口.原口令编辑框.顶边”, 112)
        未知支持库函数_6 (“修改口令窗口.透明标签3.顶边”, 144)
        未知支持库函数_6 (“修改口令窗口.新口令编辑框.顶边”, 142)
        未知支持库函数_6 (“修改口令窗口.透明标签4.顶边”, 174)
        未知支持库函数_6 (“修改口令窗口.复核口令编辑框.顶边”, 172)
        未知支持库函数_6 (“修改口令窗口.确定按钮.顶边”, 84)
        未知支持库函数_6 (“修改口令窗口.取消按钮.顶边”, 126)
        未知支持库函数_6 (“修改口令窗口.高度”, 210)
        未知支持库函数_6 (“修改口令窗口.图片框2.高度”, 148)
        .如果真 (不等于 (修改顶图, {  }))
            未知支持库函数_6 (“修改口令窗口.图片框1.图片”, 修改顶图)
        .如果真结束
        .如果 (需要修改底图)
            .如果真 (不等于 (修改底图, {  }))
                未知支持库函数_6 (“修改口令窗口.图片框2.图片”, 修改底图)
            .如果真结束
            
        .否则
            未知支持库函数_6 (“修改口令窗口.图片框2.图片”, {  })
        .如果结束
        
    .否则
        未知支持库函数_6 (“修改口令窗口.图片框2.左边”, 0)
        未知支持库函数_6 (“修改口令窗口.图片框2.顶边”, 0)
        未知支持库函数_6 (“修改口令窗口.透明标签1.顶边”, 22)
        未知支持库函数_6 (“修改口令窗口.用户编辑框.顶边”, 20)
        未知支持库函数_6 (“修改口令窗口.透明标签2.顶边”, 52)
        未知支持库函数_6 (“修改口令窗口.原口令编辑框.顶边”, 50)
        未知支持库函数_6 (“修改口令窗口.透明标签3.顶边”, 82)
        未知支持库函数_6 (“修改口令窗口.新口令编辑框.顶边”, 80)
        未知支持库函数_6 (“修改口令窗口.透明标签4.顶边”, 112)
        未知支持库函数_6 (“修改口令窗口.复核口令编辑框.顶边”, 110)
        未知支持库函数_6 (“修改口令窗口.确定按钮.顶边”, 22)
        未知支持库函数_6 (“修改口令窗口.取消按钮.顶边”, 64)
        未知支持库函数_6 (“修改口令窗口.高度”, 148)
        未知支持库函数_6 (“修改口令窗口.图片框2.高度”, 148)
        .如果 (需要修改底图)
            .如果真 (不等于 (修改底图, {  }))
                未知支持库函数_6 (“修改口令窗口.图片框2.图片”, 修改底图)
            .如果真结束
            
        .否则
            未知支持库函数_6 (“修改口令窗口.图片框2.图片”, {  })
        .如果结束
        
    .如果结束
    
.否则
    未知支持库函数_6 (“修改口令窗口.边框”, 2)
    .如果 (需要修改顶图)
        未知支持库函数_10 (“需要修改窗口顶图”, )
        未知支持库函数_6 (“修改口令窗口.图片框1.左边”, -1)
        未知支持库函数_6 (“修改口令窗口.图片框1.顶边”, -1)
        未知支持库函数_6 (“修改口令窗口.图片框2.左边”, -1)
        未知支持库函数_6 (“修改口令窗口.图片框2.顶边”, 62)
        未知支持库函数_6 (“修改口令窗口.透明标签1.顶边”, 84)
        未知支持库函数_6 (“修改口令窗口.用户编辑框.顶边”, 82)
        未知支持库函数_6 (“修改口令窗口.透明标签2.顶边”, 114)
        未知支持库函数_6 (“修改口令窗口.原口令编辑框.顶边”, 112)
        未知支持库函数_6 (“修改口令窗口.透明标签3.顶边”, 144)
        未知支持库函数_6 (“修改口令窗口.新口令编辑框.顶边”, 142)
        未知支持库函数_6 (“修改口令窗口.透明标签4.顶边”, 174)
        未知支持库函数_6 (“修改口令窗口.复核口令编辑框.顶边”, 172)
        未知支持库函数_6 (“修改口令窗口.确定按钮.顶边”, 84)
        未知支持库函数_6 (“修改口令窗口.取消按钮.顶边”, 126)
        未知支持库函数_6 (“修改口令窗口.高度”, 相加 (相减 (., 取用户区高度 ()), 210))
        未知支持库函数_6 (“修改口令窗口.图片框2.高度”, 148)
        .如果真 (不等于 (修改顶图, {  }))
            未知支持库函数_6 (“修改口令窗口.图片框1.图片”, 修改顶图)
        .如果真结束
        .如果真 (需要修改底图)
            未知支持库函数_10 (“需要修改窗口底图”, )
            .如果真 (不等于 (修改底图, {  }))
                未知支持库函数_6 (“修改口令窗口.图片框2.图片”, 修改底图)
            .如果真结束
            
        .如果真结束
        
    .否则
        未知支持库函数_6 (“修改口令窗口.图片框2.左边”, -1)
        未知支持库函数_6 (“修改口令窗口.图片框2.顶边”, 0)
        未知支持库函数_6 (“修改口令窗口.透明标签1.顶边”, 22)
        未知支持库函数_6 (“修改口令窗口.用户编辑框.顶边”, 20)
        未知支持库函数_6 (“修改口令窗口.透明标签2.顶边”, 52)
        未知支持库函数_6 (“修改口令窗口.原口令编辑框.顶边”, 50)
        未知支持库函数_6 (“修改口令窗口.透明标签3.顶边”, 82)
        未知支持库函数_6 (“修改口令窗口.新口令编辑框.顶边”, 80)
        未知支持库函数_6 (“修改口令窗口.透明标签4.顶边”, 112)
        未知支持库函数_6 (“修改口令窗口.复核口令编辑框.顶边”, 110)
        未知支持库函数_6 (“修改口令窗口.确定按钮.顶边”, 22)
        未知支持库函数_6 (“修改口令窗口.取消按钮.顶边”, 64)
        未知支持库函数_6 (“修改口令窗口.高度”, 相加 (相减 (., 取用户区高度 ()), 148))
        未知支持库函数_6 (“修改口令窗口.图片框2.高度”, 148)
        .如果真 (需要修改底图)
            .如果 (不等于 (修改底图, {  }))
                未知支持库函数_6 (“修改口令窗口.底图”, 修改底图)
            .否则
                未知支持库函数_6 (“修改口令窗口.底图”, #底图)
            .如果结束
            
        .如果真结束
        
    .如果结束
    
.如果结束


.子程序 _添加分类按钮_被单击, 空白型, , 
.局部变量 索引, 整数型, , , 

.如果真 (等于 (判断分类名称 (), 真)) ' 判断是否存在空分类名称或重复分类名称
    赋值 (分类事件触发, 真)
    连续赋值 (假, .禁止, .禁止)
    赋值 (索引, .插入表项 (“”, , , , ))
    赋值 (分类选中项, 索引)
    索引.置标题 (1, “假”)
    索引.选择表项 ()
    赋值 (., 假)
    获取焦点 ()
.如果真结束
赋值 (分类事件触发, 真)

.子程序 判断分类名称, 逻辑型, , 
.局部变量 分类名称, 文本型, , , 
.局部变量 重复, 逻辑型, , , 
.局部变量 索引, 整数型, , , 

.如果真 (大于 (取表项数 (), 0))
    赋值 (分类名称, 分类选中项.取标题 (0)) ' 判断分类名称是否为空。
    .如果真 (等于 (删首尾空 (分类名称), “”))
        .如果 (等于 (分类事件触发, 真))
            赋值 (分类事件触发, 假)
            信息框 (“当前用户分类为空，请输入分类名称。”, #信息图标, )
            赋值 (., 分类选中项)
            获取焦点 ()
            赋值 (.被选择字符数, -1)
            返回 (假)
        .否则
            赋值 (., 分类选中项)
            赋值 (分类事件触发, 真)
        .如果结束
        
    .如果真结束
    赋值 (重复, 假) ' 判断分类名称是否重复。
    .计次循环首 (取表项数 (), 索引)
        .如果真 (不等于 (索引, 相加 (分类选中项, 1)))
            .如果真 (等于 (相减 (索引, 1).取标题 (0), 分类名称))
                赋值 (重复, 真)
                跳出循环 ()
            .如果真结束
            
        .如果真结束
        
    .计次循环尾 ()
    .如果真 (等于 (重复, 真))
        .如果 (等于 (分类事件触发, 真))
            赋值 (分类事件触发, 假)
            信息框 (“当前用户分类名称已存在，请勿添加相同的用户分类名称。”, #信息图标, )
            赋值 (., 分类选中项)
            获取焦点 ()
            赋值 (.被选择字符数, -1)
            返回 (假)
        .否则
            赋值 (., 分类选中项)
            赋值 (分类事件触发, 真)
        .如果结束
        
    .如果真结束
    
.如果真结束
返回 (真)

.子程序 _删除分类按钮_被单击, 空白型, , 
赋值 (分类事件触发, 假) ' 删除时不需要判断分类名称，所以强行改变事件触发为非事件触发，避免检测。
赋值 (分类选中项, 相减 (取表项数 (), 2)) ' 先修改分类选中项的值，避免触发表项被改变事件。
.删除表项 (.)
.如果 (等于 (取表项数 (), 0))
    赋值 (., 真)
.否则
    赋值 (., 相减 (取表项数 (), 1))
    赋值 (分类选中项, .)
.如果结束


.子程序 _用户分类超级列表框_当前表项被改变, 空白型, , 
赋值 (表项改变, 真)
.如果真 (并且 (大于 (取表项数 (), 1), 不等于 (., 分类选中项)))
    .如果真 (等于 (判断分类名称 (), 假))
        返回 ()
    .如果真结束
    
.如果真结束
赋值 (.内容, .取标题 (., 0))
赋值 (.选中, 选择 (等于 (.取标题 (., 1), “真”), 真, 假))
赋值 (分类选中项, .)
赋值 (表项改变, 假)

.子程序 _分类编辑框_内容被改变, 空白型, , 
.如果真 (并且 (等于 (., -1), 大于 (取表项数 (), 0))) ' 超级列表框有时候会出现失去焦点表项的现象（比如点击超级列表框尾部的空白项时就会出现），这里检测一下，恢复焦点表项。
    赋值 (., 分类选中项)
.如果真结束
.如果真 (并且 (不等于 (., -1), 等于 (表项改变, 假)))
    .置标题 (., 0, .内容) ' 同步改变用户分类超级列表框中的相关表项值。
.如果真结束


.子程序 _用户分类选择框_被单击, 空白型, , 设置是否需要用户分类。
连续赋值 (取反 (.选中), .禁止, .字体名称, ., ., .禁止, .禁止)
.如果真 (.选中)
    .如果 (等于 (取表项数 (), 0))
        连续赋值 (真, .禁止, .禁止, .)
    .否则
        0.选择表项 ()
        _用户分类超级列表框_当前表项被改变 ()
    .如果结束
    
.如果真结束


.子程序 _用户分类编辑框_内容被改变, 空白型, , 
0.置列标题 (.内容)
2.置列标题 (.内容)
赋值 (.标题, .内容)

.子程序 _添加无边框单选框_被单击, 空白型, , 
设置添加图 ()

.子程序 _添加有标题单选框_被单击, 空白型, , 
设置添加图 ()

.子程序 设置添加图, 空白型, , 
.如果 (.选中)
    .判断开始 (并且 (需要添加顶图, 需要添加底图))
        连续赋值 (假, .可视, .可视, .可视)
        连续赋值 (真, .可视, .可视)
        赋值 (.顶边, 32)
        赋值 (.顶边, 61)
        .如果 (等于 (添加顶图, {  }))
            赋值 (.图片, #添加顶图_)
        .否则
            赋值 (.图片, 添加顶图)
        .如果结束
        .如果 (等于 (添加底图, {  }))
            赋值 (.图片, #底图)
        .否则
            赋值 (.图片, 添加底图)
        .如果结束
        
    .判断 (并且 (需要添加顶图, 等于 (需要添加底图, 假)))
        连续赋值 (假, .可视, .可视, .可视)
        连续赋值 (真, .可视, .可视)
        赋值 (.顶边, 32)
        赋值 (.顶边, 61)
        .如果 (等于 (添加顶图, {  }))
            赋值 (.图片, #添加顶图_)
        .否则
            赋值 (.图片, 添加顶图)
        .如果结束
        赋值 (.图片, {  })
    .判断 (并且 (等于 (需要添加顶图, 假), 需要添加底图))
        连续赋值 (假, .可视, .可视, .可视, .可视)
        赋值 (.可视, 真)
        赋值 (.顶边, 48)
        .如果 (等于 (添加底图, {  }))
            赋值 (.图片, #底图)
        .否则
            赋值 (.图片, 添加底图)
        .如果结束
        
    .判断 (并且 (等于 (需要添加顶图, 假), 等于 (需要添加底图, 假)))
        连续赋值 (假, .可视, .可视, .可视, .可视)
        赋值 (.可视, 真)
        赋值 (.顶边, 48)
        赋值 (.图片, {  })
    .默认
        
    .判断结束
    
.否则
    .判断开始 (并且 (需要添加顶图, 需要添加底图))
        连续赋值 (真, .可视, .可视, .可视, .可视, .可视)
        连续赋值 (27, .顶边, .顶边, .顶边)
        赋值 (.顶边, 38)
        赋值 (.顶边, 67)
        .如果 (等于 (添加顶图, {  }))
            赋值 (.图片, #添加顶图_)
        .否则
            赋值 (.图片, 添加顶图)
        .如果结束
        .如果 (等于 (添加底图, {  }))
            赋值 (.图片, #底图)
        .否则
            赋值 (.图片, 添加底图)
        .如果结束
        
    .判断 (并且 (需要添加顶图, 等于 (需要添加底图, 假)))
        连续赋值 (真, .可视, .可视, .可视, .可视, .可视)
        连续赋值 (27, .顶边, .顶边, .顶边)
        赋值 (.顶边, 38)
        赋值 (.顶边, 67)
        .如果 (等于 (添加顶图, {  }))
            赋值 (.图片, #添加顶图_)
        .否则
            赋值 (.图片, 添加顶图)
        .如果结束
        赋值 (.图片, {  })
    .判断 (并且 (等于 (需要添加顶图, 假), 需要添加底图))
        连续赋值 (真, .可视, .可视, .可视, .可视)
        赋值 (.可视, 假)
        连续赋值 (42, .顶边, .顶边, .顶边)
        赋值 (.顶边, 51)
        .如果 (等于 (添加底图, {  }))
            赋值 (.图片, #底图)
        .否则
            赋值 (.图片, 添加底图)
        .如果结束
        
    .判断 (并且 (等于 (需要添加顶图, 假), 等于 (需要添加底图, 假)))
        连续赋值 (真, .可视, .可视, .可视, .可视)
        赋值 (.可视, 假)
        连续赋值 (42, .顶边, .顶边, .顶边)
        赋值 (.顶边, 51)
        赋值 (.图片, {  })
    .默认
        
    .判断结束
    
.如果结束


.子程序 _选择图片按钮_被单击, 空白型, , 
赋值 (当前窗口, “登录”)
载入 (图片设置窗口, , 真)
设置登录图 ()

.子程序 _允许添加选择框_被单击, 空白型, , 
连续赋值 (取反 (.选中), .禁止, .禁止, .)

.子程序 _选择图片按钮1_被单击, 空白型, , 
赋值 (当前窗口, “添加”)
载入 (图片设置窗口, , 真)
设置添加图 ()

.子程序 _允许删除选择框_被单击, 空白型, , 
连续赋值 (取反 (.选中), .禁止, .禁止, .)

.子程序 _删除无边框单选框_被单击, 空白型, , 
设置删除图 ()

.子程序 _删除有标题单选框_被单击, 空白型, , 
设置删除图 ()

.子程序 设置删除图, 空白型, , 
.如果 (.选中)
    .判断开始 (并且 (需要删除顶图, 需要删除底图))
        连续赋值 (假, .可视, .可视, .可视)
        连续赋值 (真, .可视, .可视)
        赋值 (.顶边, 38)
        赋值 (.顶边, 67)
        .如果 (等于 (删除顶图, {  }))
            赋值 (.图片, #删除顶图_)
        .否则
            赋值 (.图片, 删除顶图)
        .如果结束
        .如果 (等于 (删除底图, {  }))
            赋值 (.图片, #底图)
        .否则
            赋值 (.图片, 删除底图)
        .如果结束
        
    .判断 (并且 (需要删除顶图, 等于 (需要删除底图, 假)))
        连续赋值 (假, .可视, .可视, .可视)
        连续赋值 (真, .可视, .可视)
        赋值 (.顶边, 38)
        赋值 (.顶边, 67)
        .如果 (等于 (删除顶图, {  }))
            赋值 (.图片, #删除顶图_)
        .否则
            赋值 (.图片, 删除顶图)
        .如果结束
        赋值 (.图片, {  })
    .判断 (并且 (等于 (需要删除顶图, 假), 需要删除底图))
        连续赋值 (假, .可视, .可视, .可视, .可视)
        赋值 (.可视, 真)
        赋值 (.顶边, 54)
        .如果 (等于 (删除底图, {  }))
            赋值 (.图片, #底图)
        .否则
            赋值 (.图片, 删除底图)
        .如果结束
        
    .判断 (并且 (等于 (需要删除顶图, 假), 等于 (需要删除底图, 假)))
        连续赋值 (假, .可视, .可视, .可视, .可视)
        赋值 (.可视, 真)
        赋值 (.顶边, 54)
        赋值 (.图片, {  })
    .默认
        
    .判断结束
    
.否则
    .判断开始 (并且 (需要删除顶图, 需要删除底图))
        连续赋值 (真, .可视, .可视, .可视, .可视, .可视)
        连续赋值 (32, .顶边, .顶边, .顶边)
        赋值 (.顶边, 43)
        赋值 (.顶边, 72)
        .如果 (等于 (删除顶图, {  }))
            赋值 (.图片, #删除顶图_)
        .否则
            赋值 (.图片, 删除顶图)
        .如果结束
        .如果 (等于 (删除底图, {  }))
            赋值 (.图片, #底图)
        .否则
            赋值 (.图片, 删除底图)
        .如果结束
        
    .判断 (并且 (需要删除顶图, 等于 (需要删除底图, 假)))
        连续赋值 (真, .可视, .可视, .可视, .可视, .可视)
        连续赋值 (32, .顶边, .顶边, .顶边)
        赋值 (.顶边, 43)
        赋值 (.顶边, 72)
        .如果 (等于 (删除顶图, {  }))
            赋值 (.图片, #删除顶图_)
        .否则
            赋值 (.图片, 删除顶图)
        .如果结束
        赋值 (.图片, {  })
    .判断 (并且 (等于 (需要删除顶图, 假), 需要删除底图))
        连续赋值 (真, .可视, .可视, .可视, .可视)
        赋值 (.可视, 假)
        连续赋值 (48, .顶边, .顶边, .顶边)
        赋值 (.顶边, 57)
        .如果 (等于 (删除底图, {  }))
            赋值 (.图片, #底图)
        .否则
            赋值 (.图片, 删除底图)
        .如果结束
        
    .判断 (并且 (等于 (需要删除顶图, 假), 等于 (需要删除底图, 假)))
        连续赋值 (真, .可视, .可视, .可视, .可视)
        赋值 (.可视, 假)
        连续赋值 (48, .顶边, .顶边, .顶边)
        赋值 (.顶边, 57)
        赋值 (.图片, {  })
    .默认
        
    .判断结束
    
.如果结束


.子程序 _选择图片按钮2_被单击, 空白型, , 
赋值 (当前窗口, “删除”)
载入 (图片设置窗口, , 真)
设置删除图 ()

.子程序 _允许修改选择框_被单击, 空白型, , 
连续赋值 (取反 (.选中), .禁止, .禁止, .)

.子程序 _修改无边框单选框_被单击, 空白型, , 
设置修改图 ()

.子程序 _修改有标题单选框_被单击, 空白型, , 
设置修改图 ()

.子程序 设置修改图, 空白型, , 
.如果 (.选中)
    .判断开始 (并且 (需要修改顶图, 需要修改底图))
        连续赋值 (假, .可视, .可视, .可视)
        连续赋值 (真, .可视, .可视)
        赋值 (.顶边, 32)
        赋值 (.顶边, 61)
        .如果 (等于 (修改顶图, {  }))
            赋值 (.图片, #修改顶图_)
        .否则
            赋值 (.图片, 修改顶图)
        .如果结束
        .如果 (等于 (修改底图, {  }))
            赋值 (.图片, #底图)
        .否则
            赋值 (.图片, 修改底图)
        .如果结束
        
    .判断 (并且 (需要修改顶图, 等于 (需要修改底图, 假)))
        连续赋值 (假, .可视, .可视, .可视)
        连续赋值 (真, .可视, .可视)
        赋值 (.顶边, 32)
        赋值 (.顶边, 61)
        .如果 (等于 (修改顶图, {  }))
            赋值 (.图片, #修改顶图_)
        .否则
            赋值 (.图片, 修改顶图)
        .如果结束
        赋值 (.图片, {  })
    .判断 (并且 (等于 (需要修改顶图, 假), 需要修改底图))
        连续赋值 (假, .可视, .可视, .可视, .可视)
        赋值 (.可视, 真)
        赋值 (.顶边, 48)
        .如果 (等于 (修改底图, {  }))
            赋值 (.图片, #底图)
        .否则
            赋值 (.图片, 修改底图)
        .如果结束
        
    .判断 (并且 (等于 (需要修改顶图, 假), 等于 (需要修改底图, 假)))
        连续赋值 (假, .可视, .可视, .可视, .可视)
        赋值 (.可视, 真)
        赋值 (.顶边, 48)
        赋值 (.图片, {  })
    .默认
        
    .判断结束
    
.否则
    .判断开始 (并且 (需要修改顶图, 需要修改底图))
        连续赋值 (真, .可视, .可视, .可视, .可视, .可视)
        连续赋值 (27, .顶边, .顶边, .顶边)
        赋值 (.顶边, 38)
        赋值 (.顶边, 67)
        .如果 (等于 (修改顶图, {  }))
            赋值 (.图片, #修改顶图_)
        .否则
            赋值 (.图片, 修改顶图)
        .如果结束
        .如果 (等于 (修改底图, {  }))
            赋值 (.图片, #底图)
        .否则
            赋值 (.图片, 修改底图)
        .如果结束
        
    .判断 (并且 (需要修改顶图, 等于 (需要修改底图, 假)))
        连续赋值 (真, .可视, .可视, .可视, .可视, .可视)
        连续赋值 (27, .顶边, .顶边, .顶边)
        赋值 (.顶边, 38)
        赋值 (.顶边, 67)
        .如果 (等于 (修改顶图, {  }))
            赋值 (.图片, #修改顶图_)
        .否则
            赋值 (.图片, 修改顶图)
        .如果结束
        赋值 (.图片, {  })
    .判断 (并且 (等于 (需要修改顶图, 假), 需要修改底图))
        连续赋值 (真, .可视, .可视, .可视, .可视)
        赋值 (.可视, 假)
        连续赋值 (42, .顶边, .顶边, .顶边)
        赋值 (.顶边, 51)
        .如果 (等于 (修改底图, {  }))
            赋值 (.图片, #底图)
        .否则
            赋值 (.图片, 修改底图)
        .如果结束
        
    .判断 (并且 (等于 (需要修改顶图, 假), 等于 (需要修改底图, 假)))
        连续赋值 (真, .可视, .可视, .可视, .可视)
        赋值 (.可视, 假)
        连续赋值 (42, .顶边, .顶边, .顶边)
        赋值 (.顶边, 51)
        赋值 (.图片, {  })
    .默认
        
    .判断结束
    
.如果结束


.子程序 _选择图片按钮3_被单击, 空白型, , 
赋值 (当前窗口, “修改”)
载入 (图片设置窗口, , 真)
设置修改图 ()

.子程序 _权限选择框_被单击, 空白型, , 
.如果真 (不等于 (., -1))
    .置标题 (., 1, 到文本 (.选中))
.如果真结束


.子程序 _添加用户按钮_被单击, 空白型, , 
.局部变量 索引, 整数型, , , 

.如果真 (等于 (判断用户名 (), 真))
    赋值 (用户事件触发, 真)
    连续赋值 (假, .禁止, .禁止, .禁止)
    .如果真 (等于 (.选中, 假))
        赋值 (.禁止, 真)
    .如果真结束
    赋值 (索引, .插入表项 (“”, , , , ))
    .如果真 (.选中)
        索引.置标题 (2, .取项目文本 (.现行选中项))
    .如果真结束
    赋值 (用户选中项, 索引)
    索引.选择表项 ()
    赋值 (., 假)
    获取焦点 ()
.如果真结束
赋值 (用户事件触发, 真)

.子程序 判断用户名, 逻辑型, , 
.局部变量 用户名, 文本型, , , 
.局部变量 重复, 逻辑型, , , 
.局部变量 索引, 整数型, , , 

.如果真 (大于 (取表项数 (), 0))
    赋值 (用户名, 用户选中项.取标题 (0)) ' 判断分类名称是否为空。
    .如果真 (等于 (删首尾空 (用户名), “”))
        .如果 (等于 (用户事件触发, 真))
            赋值 (用户事件触发, 假)
            信息框 (“当前用户名为空，请输入用户名。”, #信息图标, )
            赋值 (., 用户选中项)
            获取焦点 ()
            赋值 (.被选择字符数, -1)
            返回 (假)
        .否则
            赋值 (., 用户选中项)
            赋值 (用户事件触发, 真)
        .如果结束
        
    .如果真结束
    赋值 (重复, 假) ' 判断分类名称是否重复。
    .计次循环首 (取表项数 (), 索引)
        .如果真 (不等于 (索引, 相加 (用户选中项, 1)))
            .如果真 (等于 (相减 (索引, 1).取标题 (0), 用户名))
                赋值 (重复, 真)
                跳出循环 ()
            .如果真结束
            
        .如果真结束
        
    .计次循环尾 ()
    .如果真 (等于 (重复, 真))
        .如果 (等于 (用户事件触发, 真))
            赋值 (用户事件触发, 假)
            信息框 (“当前用户名已存在，请勿添加相同的用户名。”, #信息图标, )
            赋值 (., 用户选中项)
            获取焦点 ()
            赋值 (.被选择字符数, -1)
            返回 (假)
        .否则
            赋值 (., 用户选中项)
            赋值 (用户事件触发, 真)
        .如果结束
        
    .如果真结束
    
.如果真结束
返回 (真)

.子程序 _用户超级列表框_当前表项被改变, 空白型, , 
赋值 (表项改变, 真)
.如果真 (并且 (大于 (取表项数 (), 1), 不等于 (., 用户选中项)))
    .如果真 (等于 (判断用户名 (), 假))
        赋值 (., 用户选中项)
        返回 ()
    .如果真结束
    
.如果真结束
连续赋值 (假, .禁止, .禁止, .禁止)
.如果真 (等于 (.选中, 假))
    赋值 (.禁止, 真)
.如果真结束
赋值 (.内容, .取标题 (., 0))
赋值 (.内容, .取标题 (., 1))
.如果真 (等于 (.禁止, 假))
    .取标题 (., 2).选择 ()
.如果真结束
赋值 (表项改变, 假)

.子程序 _用户名编辑框_内容被改变, 空白型, , 
.如果真 (并且 (等于 (., -1), 大于 (取表项数 (), 0))) ' 超级列表框有时候会出现失去焦点表项的现象（比如点击超级列表框尾部的空白项时就会出现），这里检测一下，恢复焦点表项。
    赋值 (., 用户选中项)
.如果真结束
.如果真 (并且 (不等于 (., -1), 等于 (表项改变, 假)))
    .置标题 (., 0, .内容)
.如果真结束


.子程序 _口令编辑框_内容被改变, 空白型, , 
.如果真 (并且 (等于 (., -1), 大于 (取表项数 (), 0))) ' 超级列表框有时候会出现失去焦点表项的现象（比如点击超级列表框尾部的空白项时就会出现），这里检测一下，恢复焦点表项。
    赋值 (., 用户选中项)
.如果真结束
.如果真 (并且 (不等于 (., -1), 等于 (表项改变, 假)))
    .置标题 (., 1, .内容)
.如果真结束


.子程序 _分类组合框_列表项被选择, 空白型, , 
.如果真 (不等于 (., -1))
    .置标题 (., 2, .取项目文本 (.现行选中项))
.如果真结束


.子程序 _删除用户按钮_被单击, 空白型, , 
赋值 (用户事件触发, 假) ' 删除时不需要判断分类名称，所以强行改变事件触发为非事件触发，避免检测。
赋值 (用户选中项, 相减 (取表项数 (), 2)) ' 先修改用户选中项的值，避免触发用户超级列表框_当前表项被改变事件。
.删除表项 (.)
.如果 (等于 (取表项数 (), 0))
    赋值 (., 真)
.否则
    赋值 (., 相减 (取表项数 (), 1))
    赋值 (用户选中项, .)
.如果结束


.子程序 _文件单选框_被单击, 空白型, , 
赋值 (.标题, “保存路径：”)
清空 ()
“程序运行目录 %rundir%”.加入项目 () ' 设置可选保存目录。下同。
“Windows安装目录 %Windows%”.加入项目 ()
“Windows系统目录 %System%”.加入项目 ()
“其它目录 %Other%”.加入项目 ()
赋值 (.现行选中项, 0)
赋值 (.标题, “保存文件名(可以包括子目录，如：data\user.dat)：”)
赋值 (.内容, “system.dat”)

.子程序 _注册表单选框_被单击, 空白型, , 
赋值 (.标题, “注册表根目录：”)
清空 ()
“现行用户 HKEY_CURRENT_USER”.加入项目 (#现行用户)
“所用用户 HKEY_USERS”.加入项目 (#所有用户)
“本地机器 HKEY_LOCAL_MACHINE”.加入项目 (#本地机器)
“现行设置 HKEY_CURRENT_CONFIG”.加入项目 (#现行设置)
“根类 HKEY_CLASSES_ROOT”.加入项目 (#根类)
赋值 (.现行选中项, 0)
赋值 (.标题, “全路径注册项名：”)
赋值 (.内容, “software\我的程序\data\”)

.窗口程序集 启动画面窗口程序集, , , 

.程序集变量 顶图默认, 逻辑型, , , 
.程序集变量 底图默认, 逻辑型, , , 
.子程序 _图片设置窗口_创建完毕, 空白型, , 
赋值 (., 相减 (相加 (., 393), 取用户区高度 ()))
.判断开始 (等于 (当前窗口, “登录”))
    赋值 (.标题, “需要登录窗口顶图”)
    赋值 (.标题, “需要登录窗口底图”)
    赋值 (.图片, 选择 (等于 (登录顶图, {  }), #登录顶图_, 登录顶图))
    赋值 (.图片, 选择 (等于 (登录底图, {  }), #底图, 登录底图))
    赋值 (.选中, 需要登录顶图)
    赋值 (.选中, 需要登录底图)
    连续赋值 (取反 (需要登录顶图), ., .)
    连续赋值 (取反 (需要登录底图), ., .)
.判断 (等于 (当前窗口, “添加”))
    赋值 (.标题, “需要添加用户窗口顶图”)
    赋值 (.标题, “需要添加用户窗口底图”)
    赋值 (.图片, 选择 (等于 (添加顶图, {  }), #添加顶图_, 添加顶图))
    赋值 (.图片, 选择 (等于 (添加底图, {  }), #底图, 添加底图))
    赋值 (.选中, 需要添加顶图)
    赋值 (.选中, 需要添加底图)
    连续赋值 (取反 (需要添加顶图), ., .)
    连续赋值 (取反 (需要添加底图), ., .)
.判断 (等于 (当前窗口, “删除”))
    赋值 (.标题, “需要删除用户窗口顶图”)
    赋值 (.标题, “需要删除用户窗口底图”)
    赋值 (.图片, 选择 (等于 (删除顶图, {  }), #删除顶图_, 删除顶图))
    赋值 (.图片, 选择 (等于 (删除底图, {  }), #底图, 删除底图))
    赋值 (.选中, 需要删除顶图)
    赋值 (.选中, 需要删除底图)
    连续赋值 (取反 (需要删除顶图), ., .)
    连续赋值 (取反 (需要删除底图), ., .)
.判断 (等于 (当前窗口, “修改”))
    赋值 (.标题, “需要修改口令窗口顶图”)
    赋值 (.图片, 选择 (等于 (修改顶图, {  }), #修改顶图_, 修改顶图))
    赋值 (.图片, 选择 (等于 (修改底图, {  }), #底图, 修改底图))
    赋值 (.标题, “需要修改口令窗口底图”)
    赋值 (.选中, 需要修改顶图)
    赋值 (.选中, 需要修改底图)
    连续赋值 (取反 (需要修改顶图), ., .)
    连续赋值 (取反 (需要修改底图), ., .)
.默认
    
.判断结束


.子程序 _选择图片按钮1_被单击, 空白型, , 
.如果真 (打开 ()) ' 将用户选定的图片加入到图片框中显示
    赋值 (底图默认, 假)
    赋值 (.图片, 读入文件 (.文件名))
.如果真结束


.子程序 _取消按钮_被单击, 空白型, , 
销毁 () ' 如果选择了取消,则直接退出程序而不写出结果.

.子程序 _确认按钮_被单击, 空白型, , 
 ' 如果选择了确认，则修改相应顶图及底图数据。
.如果 (.选中)
    .如果 (顶图默认)
        .判断开始 (等于 (当前窗口, “登录”))
            赋值 (需要登录顶图, 真)
            赋值 (登录顶图, {  })
        .判断 (等于 (当前窗口, “添加”))
            赋值 (需要添加顶图, 真)
            赋值 (添加顶图, {  })
        .判断 (等于 (当前窗口, “删除”))
            赋值 (需要删除顶图, 真)
            赋值 (删除顶图, {  })
        .判断 (等于 (当前窗口, “修改”))
            赋值 (需要修改顶图, 真)
            赋值 (修改顶图, {  })
        .默认
            
        .判断结束
        
    .否则
        .判断开始 (等于 (当前窗口, “登录”))
            赋值 (需要登录顶图, 真)
            赋值 (登录顶图, .图片)
        .判断 (等于 (当前窗口, “添加”))
            赋值 (需要添加顶图, 真)
            赋值 (添加顶图, .图片)
        .判断 (等于 (当前窗口, “删除”))
            赋值 (需要删除顶图, 真)
            赋值 (删除顶图, .图片)
        .判断 (等于 (当前窗口, “修改”))
            赋值 (需要修改顶图, 真)
            赋值 (修改顶图, .图片)
        .默认
            
        .判断结束
        
    .如果结束
    
.否则
    .判断开始 (等于 (当前窗口, “登录”))
        赋值 (需要登录顶图, 假)
        赋值 (登录顶图, {  })
    .判断 (等于 (当前窗口, “添加”))
        赋值 (需要添加顶图, 假)
        赋值 (添加顶图, {  })
    .判断 (等于 (当前窗口, “删除”))
        赋值 (需要删除顶图, 假)
        赋值 (删除顶图, {  })
    .判断 (等于 (当前窗口, “修改”))
        赋值 (需要修改顶图, 假)
        赋值 (修改顶图, {  })
    .默认
        
    .判断结束
    
.如果结束
.如果 (.选中)
    .如果 (底图默认)
        .判断开始 (等于 (当前窗口, “登录”))
            赋值 (需要登录底图, 真)
            赋值 (登录底图, {  })
        .判断 (等于 (当前窗口, “添加”))
            赋值 (需要添加底图, 真)
            赋值 (添加底图, {  })
        .判断 (等于 (当前窗口, “删除”))
            赋值 (需要删除底图, 真)
            赋值 (删除底图, {  })
        .判断 (等于 (当前窗口, “修改”))
            赋值 (需要修改底图, 真)
            赋值 (修改底图, {  })
        .默认
            
        .判断结束
        
    .否则
        .判断开始 (等于 (当前窗口, “登录”))
            赋值 (需要登录底图, 真)
            赋值 (登录底图, .图片)
        .判断 (等于 (当前窗口, “添加”))
            赋值 (需要添加底图, 真)
            赋值 (添加底图, .图片)
        .判断 (等于 (当前窗口, “删除”))
            赋值 (需要删除底图, 真)
            赋值 (删除底图, .图片)
        .判断 (等于 (当前窗口, “修改”))
            赋值 (需要修改底图, 真)
            赋值 (修改底图, .图片)
        .默认
            
        .判断结束
        
    .如果结束
    
.否则
    .判断开始 (等于 (当前窗口, “登录”))
        赋值 (需要登录底图, 假)
        赋值 (登录底图, {  })
    .判断 (等于 (当前窗口, “添加”))
        赋值 (需要添加底图, 假)
        赋值 (添加底图, {  })
    .判断 (等于 (当前窗口, “删除”))
        赋值 (需要删除底图, 假)
        赋值 (删除底图, {  })
    .判断 (等于 (当前窗口, “修改”))
        赋值 (需要修改底图, 假)
        赋值 (修改底图, {  })
    .默认
        
    .判断结束
    
.如果结束
销毁 ()

.子程序 _默认图片按钮_被单击, 空白型, , 
赋值 (顶图默认, 真) ' 恢复默认图片设置
.判断开始 (等于 (当前窗口, “登录”))
    赋值 (.图片, #登录顶图_)
.判断 (等于 (当前窗口, “添加”))
    赋值 (.图片, #添加顶图_)
.判断 (等于 (当前窗口, “删除”))
    赋值 (.图片, #删除顶图_)
.判断 (等于 (当前窗口, “修改”))
    赋值 (.图片, #修改顶图_)
.默认
    
.判断结束


.子程序 _默认图片按钮1_被单击, 空白型, , 
赋值 (底图默认, 真) ' 恢复默认图片设置
.判断开始 (等于 (当前窗口, “登录”))
    赋值 (.图片, #底图)
.判断 (等于 (当前窗口, “添加”))
    赋值 (.图片, .)
.判断 (等于 (当前窗口, “删除”))
    赋值 (.图片, #底图)
.判断 (等于 (当前窗口, “修改”))
    赋值 (.图片, #底图)
.默认
    
.判断结束


.子程序 _选择图片按钮_被单击, 空白型, , 
.如果真 (打开 ())
    赋值 (顶图默认, 假)
    赋值 (.图片, 读入文件 (.文件名))
.如果真结束


.子程序 _选择框1_被单击, 空白型, , 
连续赋值 (取反 (.选中), ., .)

.子程序 _选择框2_被单击, 空白型, , 
连续赋值 (取反 (.选中), ., .)


 ' 不属于任何一个程序集、类模块的函数：
