 ' 文件类型：Windows窗口程序

 ' 程序名称：系统查询 恢复工具
 ' 程序描述：
@备注:
本程序可自动识别系统现已限制功能，并可以恢复被限制的功能。
 ' 程序作者：Taoist Pries
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：laodaolove@qq.com
 ' 主页地址：
 ' 版权声明：             易语言资源网注意事项
--============   www.wodesoft.com  =============--
* 易语言资源网为易语言官方站、易语言官方论坛提供辅助资源站；本易语言资源网( www.wodesoft.com)所有软件和资料均为软件作者提供和网友推荐发布而来，其版权归该软件和程序源码的合法拥有者所有，本站易语言资源网整理收集仅供易语言用户学习和易语言技术研究探讨使用，不得用于任何商业用途。如果由于以上原因造成的版权纠纷本站概不负责！
* 本站资源未经许可,任何网站不得非法盗链及抄袭本站资源；如引用，请注明来自易语言资源网，谢谢合作！
--============   www.wodesoft.com  =============--
 ' 版本号：1.0
 ' 创建号：0.0

窗口 _启动窗口 ' 在程序启动后自动调入本窗口
    左边 = 50
    顶边 = 50
    宽度 = 720
    高度 = 460
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = -16777216 '  0xFF000000
    最大化按钮 = 假
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    窗口类名 = “”
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “系统限制查询/恢复工具 By Taoist QQ:375038863”
    帮助文件名 = “”

窗口 列表库管理
    左边 = 50
    顶边 = 50
    宽度 = 554
    高度 = 206
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假



.图片 DBManager, " ' 已保存到：D:\易语言学习\Data\系统查询 恢复工具 V1.0.e\DBManager", , 
.常量 数据库1, "“列表库”", , 
.常量 类型, "“类型”", , 
.常量 跟键, "“跟键”", , 
.常量 全路径, "“全路径”", , 
.常量 判断类型, "“判断类型”", , 
.常量 键值, "“键值”", , 
.常量 功能, "“功能”", , 
.常量 改键值, "“改键值”", , 


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 5 0 系统核心支持库
 ' iext 27bb20fdd3e145e4bee3db39ddd6e64c 2 0 扩展界面支持库一
 ' spec A512548E76954B6E92C21055517615B0 3 0 特殊功能支持库





.窗口程序集 窗口程序集1, , , 

.子程序 __启动窗口_创建完毕, 空白型, , 
 ' --========  易语言资源网  (www.wodesoft.com)  ======--
 ' 努力创建完善、持续更新的易语言学习例程源码资源站
 ' --================   www.wodesoft.com  ===========--
 ' --==================   易语言资源网注意事项  ================--
 ' * 易语言资源网为易语言官方站、易语言官方论坛提供辅助资源站；
 ' 本易语言资源网( www.wodesoft.com)所有软件和资料均为软件作者提
 ' 供和网友推荐发布而来，其版权归该软件和程序源码的合法拥有者所
 ' 有，本站易语言资源网整理收集仅供易语言用户学习和易语言技术研
 ' 究探讨使用，不得用于任何商业用途。如果由于以上原因造成的版权
 ' 纠纷本站概不负责！
 ' * 本站资源未经许可，任何网站不得非法盗链及抄袭本站资源；如引用
 ' 页面，请注明来自易语言资源网，谢谢合作！
 ' --=====================   www.wodesoft.com  ================--


.如果真 (等于 (打开 (相加 (取运行目录 (), “\列表库.edb”), , , , , , ), 假))
    信息框 (“打开数据库失败,请检查目录下 列表库.edb 是否存在！”, 0, “提示:”)
.如果真结束

调试输出 (取数值注册项 (3, “Software\Microsoft\Windows\CurrentVersion\Policies\Explorer\NoRun”, ))

.子程序 _按钮1_被单击, 空白型, , 
.局部变量 计次, 整数型, , , 
.局部变量 表索引, 整数型, , , 

到首记录 ()
全部删除 ()
.计次循环首 (取记录数 (), 计次)
    赋值 (表索引, .插入表项 ())
    表索引.置标题 (1, 读 (#功能))
    表索引.置标题 (2, 相加 (取跟键 (到文本 (读 (#跟键))), “\”, 读 (#全路径)))
    表索引.置标题 (3, 读 (#类型))
    表索引.置标题 (4, 读 (#键值))
    表索引.置表项数值 (取记录号 ())
    跳过 ()
.计次循环尾 ()
 ' 本源码来自易语言资源网(www.wodesoft.com)

.子程序 取跟键, 文本型, , 
.参数 数值, 文本型, ,  1、#根类； 2、#现行设置； 3、#现行用户； 4、#本地机器； 5、#所有用户

.判断开始 (等于 (数值, “1”))
    返回 (“HKEY_CURRENT_CONFIG”)
.判断 (等于 (数值, “2”))
    返回 (“HKEY_CLASSES_ROOT”)
.判断 (等于 (数值, “3”))
    返回 (“HKEY_CURRENT_USER”)
.判断 (等于 (数值, “4”))
    返回 (“HKEY_LOCAL_MACHINE”)
.判断 (等于 (数值, “5”))
    返回 (“HKEY_USERS”)
.判断 (等于 (数值, “HKEY_CURRENT_CONFIG”))
    返回 (“1”)
.判断 (等于 (数值, “HKEY_CLASSES_ROOT”))
    返回 (“2”)
.判断 (等于 (数值, “HKEY_CURRENT_USER”))
    返回 (“3”)
.判断 (等于 (数值, “HKEY_LOCAL_MACHINE”))
    返回 (“4”)
.判断 (等于 (数值, “HKEY_USERS”))
    返回 (“5”)
.默认
    
.判断结束
返回 (“”)

.子程序 _按钮_搜索_被单击, 空白型, , 
.局部变量 计次, 整数型, , , 
.局部变量 表索引, 整数型, , , 

到首记录 ()
全部删除 ()
.计次循环首 (取记录数 (), 计次)
    .如果真 (等于 (读 (#类型), “REG_DWORD”))
        .判断开始 (等于 (读 (#判断类型), “=”))
            .如果真 (等于 (取数值注册项 (读 (#跟键), 读 (#全路径), ), 到整数 (读 (#键值))))
                赋值 (表索引, .插入表项 ())
                表索引.置标题 (1, 读 (#功能))
                表索引.置标题 (2, 相加 (取跟键 (到文本 (读 (#跟键))), “\”, 读 (#全路径)))
                表索引.置标题 (3, 读 (#类型))
                表索引.置标题 (4, 读 (#键值))
                表索引.置表项数值 (取记录号 ())
                表索引.置状态图片 (1)
            .如果真结束
            跳过 ()
        .默认
             ' 本源码来自易语言资源网(www.wodesoft.com)
        .判断结束
        
    .如果真结束
    .如果真 (等于 (读 (#类型), “REG_BINARY”))
        .判断开始 (等于 (读 (#判断类型), “=”))
            .如果真 (等于 (取字节集注册项 (读 (#跟键), 读 (#全路径), ), 十六进制文本到字节集 (读 (#键值))))
                赋值 (表索引, .插入表项 ())
                表索引.置标题 (1, 读 (#功能))
                表索引.置标题 (2, 相加 (取跟键 (到文本 (读 (#跟键))), “\”, 读 (#全路径)))
                表索引.置标题 (3, 读 (#类型))
                表索引.置标题 (4, 读 (#键值))
                表索引.置表项数值 (取记录号 ())
                表索引.置状态图片 (1)
            .如果真结束
            跳过 ()
        .默认
            
        .判断结束
        
    .如果真结束
    .如果真 (等于 (读 (#类型), “REG_SZ”))
        .判断开始 (等于 (读 (#判断类型), “=”))
            .如果真 (等于 (取文本注册项 (读 (#跟键), 读 (#全路径), ), 读 (#键值)))
                赋值 (表索引, .插入表项 ())
                表索引.置标题 (1, 读 (#功能))
                表索引.置标题 (2, 相加 (取跟键 (到文本 (读 (#跟键))), “\”, 读 (#全路径)))
                表索引.置标题 (3, 读 (#类型))
                表索引.置标题 (4, 读 (#键值))
                表索引.置表项数值 (取记录号 ())
                表索引.置状态图片 (1)
            .如果真结束
            跳过 ()
        .判断 (等于 (读 (#判断类型), “≠”))
            .如果真 (并且 (注册项是否存在 (读 (#跟键), 读 (#全路径)), 不等于 (取文本注册项 (读 (#跟键), 读 (#全路径), ), 读 (#键值))))
                赋值 (表索引, .插入表项 ())
                表索引.置标题 (1, 读 (#功能))
                表索引.置标题 (2, 相加 (取跟键 (到文本 (读 (#跟键))), “\”, 读 (#全路径)))
                表索引.置标题 (3, 读 (#类型))
                表索引.置标题 (4, 读 (#键值))
                表索引.置表项数值 (取记录号 ())
                表索引.置状态图片 (1)
            .如果真结束
            跳过 ()
            
        .默认
            
        .判断结束
        
    .如果真结束
    
.计次循环尾 ()


.子程序 _按钮2_被单击, 空白型, , 
.局部变量 数目, 整数型, , , 
.局部变量 记次, 整数型, , , 

赋值 (数目, 取表项数 ())
.如果真 (大于 (数目, 0))
    .计次循环首 (数目, 记次)
        .如果真 (等于 (相减 (记次, 1).取当前状态图片 (), 1))
            跳到 (相减 (记次, 1).取表项数值 ())
            .如果真 (等于 (相减 (记次, 1).取标题 (3), “REG_DWORD”))
                写注册项 (读 (#跟键), 读 (#全路径), 到数值 (读 (#键值)))
            .如果真结束
            .如果真 (等于 (相减 (记次, 1).取标题 (3), “REG_BINARY”))
                写注册项 (读 (#跟键), 读 (#全路径), 十六进制文本到字节集 (读 (#键值)))
            .如果真结束
            .如果真 (等于 (相减 (记次, 1).取标题 (3), “REG_BINARY”))
                .判断开始 (不等于 (读 (#判断类型), “≠”))
                    写注册项 (读 (#跟键), 读 (#全路径), 读 (#键值))
                .默认
                    写注册项 (读 (#跟键), 读 (#全路径), “Taoist”)
                .判断结束
                 ' 本源码来自易语言资源网(www.wodesoft.com)
            .如果真结束
            
        .如果真结束
        
    .计次循环尾 ()
.如果真结束

_按钮_搜索_被单击 ()

.子程序 _按钮_解除_被单击, 空白型, , 
.局部变量 数目, 整数型, , , 
.局部变量 记次, 整数型, , , 

赋值 (数目, 取表项数 ())
.如果真 (大于 (数目, 0))
    .计次循环首 (数目, 记次)
        .如果真 (等于 (相减 (记次, 1).取当前状态图片 (), 1))
            跳到 (相减 (记次, 1).取表项数值 ())
            .如果真 (等于 (相减 (记次, 1).取标题 (3), “REG_DWORD”))
                .如果真 (等于 (读 (#改键值), “不要”))
                    删除注册项 (读 (#跟键), 读 (#全路径))
                .如果真结束
                .如果真 (不等于 (读 (#改键值), “”))
                    写注册项 (读 (#跟键), 读 (#全路径), 到整数 (读 (#改键值)))
                .如果真结束
                
            .如果真结束
            .如果真 (等于 (相减 (记次, 1).取标题 (3), “REG_BINARY”))
                .如果真 (等于 (读 (#改键值), “不要”))
                    删除注册项 (读 (#跟键), 读 (#全路径))
                .如果真结束
                .如果真 (不等于 (读 (#改键值), “”))
                    写注册项 (读 (#跟键), 读 (#全路径), 十六进制文本到字节集 (读 (#改键值)))
                .如果真结束
                
            .如果真结束
            .如果真 (等于 (相减 (记次, 1).取标题 (3), “REG_SZ”))
                .如果真 (等于 (读 (#改键值), “不要”))
                    删除注册项 (读 (#跟键), 读 (#全路径))
                .如果真结束
                .如果真 (不等于 (读 (#改键值), “”))
                    写注册项 (读 (#跟键), 读 (#全路径), 十六进制文本到字节集 (读 (#改键值)))
                .如果真结束
                
            .如果真结束
            
        .如果真结束
        
    .计次循环尾 ()
.如果真结束

_按钮_搜索_被单击 ()


.子程序 _按钮3_被单击, 空白型, , 
.局部变量 数目, 整数型, , , 
.局部变量 计次, 整数型, , , 

赋值 (数目, 取表项数 ())
.计次循环首 (数目, 计次)
    相减 (计次, 1).置状态图片 (1)
.计次循环尾 ()


.子程序 _按钮4_被单击, 空白型, , 
.局部变量 数目, 整数型, , , 
.局部变量 计次, 整数型, , , 

赋值 (数目, 取表项数 ())
.计次循环首 (数目, 计次)
    .判断开始 (等于 (相减 (计次, 1).取当前状态图片 (), 1))
        相减 (计次, 1).置状态图片 (0)
    .默认
        相减 (计次, 1).置状态图片 (1)
    .判断结束
    
.计次循环尾 ()


.子程序 _按钮5_被单击, 空白型, , 
.局部变量 数目, 整数型, , , 
.局部变量 计次, 整数型, , , 

赋值 (数目, 取表项数 ())
.计次循环首 (数目, 计次)
    相减 (计次, 1).置状态图片 (0)
.计次循环尾 ()
 ' 本源码来自易语言资源网(www.wodesoft.com)

.子程序 _按钮6_被单击, 空白型, , 
写到文件 (相加 (取运行目录 (), “\DBManager.exe”), #DBManager)
运行 (相加 (取运行目录 (), “\DBManager.exe”), 假, )

.程序集 公共集, , , 

.子程序 十六进制文本到字节集, 字节集, 公开, 将一串十六进制文本还原为字节集。还原为字节集可以将默认的16进制文本转换成字节集。如“636F6C6F”可还原为{colo}
.参数 原始16进制文本, 文本型, , 

.局部变量 Bin_字节集, 字节集, , , 
.局部变量 Bin_次数, 整数型, , , 
.局部变量 Bin_临时变量, 整数型, , , 

赋值 (Bin_字节集, {  })
.变量循环首 (1, 取文本长度 (原始16进制文本), 2, Bin_次数)
    赋值 (Bin_临时变量, 取十进制 (取文本中间 (原始16进制文本, Bin_次数, 2), 0))
    赋值 (Bin_字节集, 相加 (Bin_字节集, 取字节集左边 (到字节集 (Bin_临时变量), 1)))
.变量循环尾 ()
返回 (Bin_字节集)

.子程序 字节集到十六进制文本, 文本型, 公开, 将字节集用16进制表示.可以将字节集用系统标准16进制表示
.参数 初始字节集, 字节集, , 

.局部变量 Bin_进制文本, 文本型, , , 
.局部变量 Bin_次数, 整数型, , , 
.局部变量 Bin_日标值, 整数型, , , 

赋值 (Bin_进制文本, “”)
赋值 (Bin_日标值, 取字节集长度 (初始字节集))
.变量循环首 (1, Bin_日标值, 1, Bin_次数)
    赋值 (Bin_进制文本, 相加 (Bin_进制文本, 取十六进制文本 (取字节集数据 (取字节集中间 (初始字节集, Bin_次数, 1), 3, ))))
.变量循环尾 ()
返回 (Bin_进制文本)

.子程序 查看字节集, 文本型, 公开, 以文本表示字节集，适合于字节集的调试用
.参数 原始字节集, 字节集, , 

.局部变量 Bin_次数, 整数型, , , 
.局部变量 Bin_临时变量, 文本型, , , 

.变量循环首 (1, 取字节集长度 (原始字节集), 1, Bin_次数)
    赋值 (Bin_临时变量, 相加 (Bin_临时变量, “,”, 到文本 (取字节集数据 (取字节集中间 (原始字节集, Bin_次数, 1), 3, ))))
.变量循环尾 ()
赋值 (Bin_临时变量, 相加 (“{”, 取文本右边 (Bin_临时变量, 相减 (取文本长度 (Bin_临时变量), 1)), “}”))
返回 (Bin_临时变量)
 ' 本源码来自易语言资源网(www.wodesoft.com)

.子程序 取十进制, 整数型, 公开,  将非十进制的标准格式文本转换成十进制整数值
.参数 欲转换的值, 文本型, , 
.参数 数值类型, 整数型, 可空, 

.局部变量 s, 整数型, , , 最终结果
.局部变量 a, 整数型, , , 中间变量
.局部变量 b, 整数型, , , 中间变量
.局部变量 c, 文本型, , , 中间变量
.局部变量 d, 整数型, , , 中间变量


赋值 (欲转换的值, 到小写 (欲转换的值))
.如果真 (是否为空 (数值类型))
    赋值 (数值类型, 1)
.如果真结束
赋值 (s, 0)
.判断开始 (等于 (数值类型, 0))
    赋值 (a, 取文本长度 (欲转换的值))
    .变量循环首 (1, a, 1, b)
        赋值 (c, 取文本中间 (欲转换的值, 相加 (相减 (a, b), 1), 1))
        .如果真 (或者 (并且 (小于或等于 (取代码 (c, ), 取代码 (“f”, )), 大于或等于 (取代码 (c, ), 取代码 (“a”, ))), 并且 (小于或等于 (取代码 (c, ), 取代码 (“F”, )), 大于或等于 (取代码 (c, ), 取代码 (“A”, )))))
            .如果真 (并且 (大于或等于 (取代码 (c, ), 取代码 (“A”, )), 小于或等于 (取代码 (c, ), 取代码 (“F”, ))))
                赋值 (d, 相加 (相减 (取代码 (c, ), 取代码 (“A”, )), 10))
            .如果真结束
            .如果真 (并且 (大于或等于 (取代码 (c, ), 取代码 (“a”, )), 小于或等于 (取代码 (c, ), 取代码 (“f”, ))))
                赋值 (d, 相加 (相减 (取代码 (c, ), 取代码 (“a”, )), 10))
            .如果真结束
            
        .如果真结束
        .如果真 (并且 (小于或等于 (取代码 (c, ), 取代码 (“9”, )), 大于或等于 (取代码 (c, ), 取代码 (“0”, ))))
            赋值 (d, 到数值 (c))
        .如果真结束
        赋值 (s, 相加 (s, 相乘 (求次方 (16, 相减 (b, 1)), d)))
    .变量循环尾 ()
.默认
    
.判断结束
.判断开始 (等于 (数值类型, 1))
    赋值 (s, 到数值 (欲转换的值))
.默认
    ' 本源码来自易语言资源网(www.wodesoft.com)
.判断结束
.判断开始 (等于 (数值类型, 2))
    赋值 (a, 取文本长度 (欲转换的值))
    .变量循环首 (1, a, 1, b)
        赋值 (c, 取文本中间 (欲转换的值, 相加 (相减 (a, b), 1), 1))
        .如果真 (并且 (小于或等于 (取代码 (c, ), 取代码 (“7”, )), 大于或等于 (取代码 (c, ), 取代码 (“0”, ))))
            赋值 (d, 到数值 (c))
        .如果真结束
        赋值 (s, 相加 (s, 相乘 (求次方 (8, 相减 (b, 1)), d)))
    .变量循环尾 ()
.默认
    
.判断结束
.判断开始 (等于 (数值类型, 3))
    赋值 (a, 取文本长度 (欲转换的值))
    .变量循环首 (1, a, 1, b)
        赋值 (c, 取文本中间 (欲转换的值, 相加 (相减 (a, b), 1), 1))
        .如果真 (并且 (小于或等于 (取代码 (c, ), 取代码 (“1”, )), 大于或等于 (取代码 (c, ), 取代码 (“0”, ))))
            赋值 (d, 到数值 (c))
        .如果真结束
        赋值 (s, 相加 (s, 相乘 (求次方 (2, 相减 (b, 1)), d)))
    .变量循环尾 ()
.默认
    
.判断结束
返回 (s)


 ' 不属于任何一个程序集、类模块的函数：
